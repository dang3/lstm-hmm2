xchg
or
aaa
jge
frstor
mov
inc
outsl
lds
mov
push
sub
adc
jns
or
and
pop
lock
pop
xchg
adc
insb
xchg
mov
mov
sbb
cmc
sbb
fidivl
xor
jnp
inc
cmpsb
loopne
fs
rcll
sub
mov
fdivrl
pop
ret
adc
rcl
lds
aaa
rol
adc
jo
pop
out
push
push
push
push
pusha
aas
mov
fadds
dec
xchg
or
adc
xor
pop
decl
jnp
sbb
push
mov
jnp
out
xlat
jle
mov
repz
ds
addr16
shlb
addb
lock
hlt
ret
repz
nop
pop
sub
cmp
fistpll
dec
xor
int
call
push
xchg
cmp
xlat
and
or
jmp
not
mov
not
lea
jmp
sub
mov
xchg
cmpsb
cmpsl
jle,pn
sbb
dec
lods
sti
inc
mov
mov
fidivl
lea
jp
pop
mov
push
cmp
adc
mov
add
mov
and
arpl
mov
shrl
loopne
cmpsb
stc
out
inc
xchg
out
mov
stc
sub
ret
and
or
daa
ret
out
in
test
inc
lods
adc
push
xor
jnp
xor
xorb
imul
push
pop
lods
sbb
xchg
std
dec
sub
sbb
test
dec
cmp
cmpsb
pop
cmp
mov
pop
mov
je
xchg
mov
mov
xor
pop
in
mov
addl
fimuls
fists
jmp
imul
jns
cld
ret
out
cli
popf
std
fwait
xchg
inc
mov
ss
add
imul
iret
fwait
andb
fadd
sahf
stos
mov
jmp
sahf
xchg
adc
loopne
cmpsb
addl
insb
dec
in
ficoms
outsb
and
in
movsb
adc
jl
mov
mov
jge
push
sub
mov
jno
dec
sub
stos
call
jmp
mov
sbb
out
loopne
cmpsb
imul
aad
mov
jb
cs
and
or
xlat
inc
mov
pmaxub
cmp
gs
fldt
lret
pop
sub
hlt
cli
adc
lods
and
pusha
xor
adc
mov
xor
enter
sbb
cmpsl
push
lcall
pop
sbb
add
jae
pop
loope
mov
int3
cltd
sbb
movsl
nop
sti
sbb
out
std
dec
dec
push
ret
rorl
push
mov
inc
mov
dec
lret
rorl
sar
addr16
jbe
push
repz
out
cmpl
sbb
addb
aad
scas
adc
pop
fs
or
push
jns
sub
inc
inc
xlat
fisttpll
mov
add
aam
sub
xchg
xor
sarl
sub
sti
insb
std
pop
aam
addr16
cmp
dec
out
push
test
fiadds
xchg
push
jne
xchg
adc
inc
aad
fsts
inc
mov
or
mov
out
nop
iret
ds
mov
pop
add
std
jg
inc
jge
pop
inc
ljmp
fimull
outsb
adc
ss
loop
adc
test
jno
push
sti
movsb
push
nop
cmc
and
jmp
mov
mov
not
mov
movb
pushl
ret
clc
stc
add
push
pushf
push
movw
lea
je
pusha
stc
add
pushl
push
pushf
pushl
lea
jmp
add
movzbw
or
shrd
mov
neg
clc
test
cmp
mov
cmp
pushf
repnz
mov
pushl
lea
jne
call
cmc
cmp
cmp
jbe
add
pushf
lea
jmp
pushf
lea
jb
pushf
stc
test
cmp
pushf
call
lcall
sbb
rcrb
std
in
test
sbb
mov
nop
in
pop
lret
fstps
cs
cmp
or
push
fnstenv
sti
in
xchg
lea
pop
mov
sti
sbbb
dec
inc
xor
fimull
mov
data16
in
adc
repnz
sahf
stos
mov
je
shld
jmp
lock
cs
mov
mov
cmp
xchg
gs
adc
inc
addb
and
lea
popf
stos
hlt
ret
and
xchg
pop
cwtl
sub
push
dec
inc
iret
mov
dec
out
lock
mov
test
sbb
push
cmc
lock
push
jl
call
sahf
out
xchg
shrb
xchg
mov
mov
adc
push
inc
int
loopne
mov
mov
cwtl
add
int
adc
sbb
mov
push
stos
sub
ds
decb
cmc
leave
mov
arpl
lods
mov
nop
xchg
jl
repz
or
into
mov
lcall
jno
mov
fs
jne
push
pushf
push
mov
inc
jmp
movw
lea
call
pusha
cmp
test
stc
cmp
pushf
call
inc
jmp
call
movl
pushf
movl
pushf
pushf
movw
lea
jmp
dec
movb
cmp
pushf
shl
pushf
mov
lods
jmp
jecxz
lret
in
cmpsb
gs
sub
push
ror
adc
outsl
add
pop
or
iret
inc
jg
sbb
pusha
push
pop
add
mov
inc
stos
addr16
xor
adc
adc
and
adc
lahf
xor
mov
out
shll
pop
and
sti
mov
push
pop
jns
jnp
push
aas
fstpt
pop
test
mov
cmp
iret
jbe
xor
xchg
sbbl
test
jb
jae
arpl
icebp
wbinvd
push
and
lods
fistps
jb
orb
jp
test
int
dec
mov
jb
push
pop
bound
ss
cmpsb
leave
mov
and
fildll
mov
pop
outsb
xor
mov
gs
rcl
jbe
jmp
xchg
stos
js
pop
ss
dec
adc
push
inc
sub
mov
or
mov
adc
sbb
mov
leave
mov
iretw
mov
cmpsl
outsl
push
outsb
cmp
and
adc
mov
push
xor
mov
xor
push
clc
inc
push
mov
rorl
mov
xchg
inc
xchg
dec
mov
jp
mov
mov
jae
mov
xor
push
outsb
fs
js
mov
mov
imul
jo
mov
in
jno
out
sub
test
orb
stos
xor
jo
outsl
jp
jg
sbb
mov
mov
je
xchg
and
test
mov
push
pop
pusha
push
mov
cltd
mov
mov
xor
push
xlat
out
sti
pop
jge
dec
push
js
loope
mov
int
dec
pop
test
sbb
jae
cmp
xchg
jge
movsl
jo
inc
mov
pusha
mov
dec
loopne
sahf
jb
dec
std
pop
into
pusha
scas
mov
mov
pop
psrlw
xchg
test
insl
inc
divb
bound
in
loope
repz
pusha
ss
push
pop
pop
xchg
rcrl
mov
add
dec
push
inc
pop
xor
pop
fiadds
test
stos
or
mov
fs
imul
pop
jb
stos
cmp
repz
bound
cmp
insb
cmp
pop
xchg
sbb
std
pop
push
loope
rcll
fnsave
stos
jge
loope
xchg
test
stos
push
dec
lea
jp
adc
adc
out
shr
dec
mov
dec
adc
cmp
push
xchg
adcb
mov
rcrl
dec
cmp
jb
leave
mov
mov
push
aaa
sub
arpl
test
xor
je
je
mov
sub
movsl
js
stc
xor
shll
pop
test
jno
cltd
xchg
repz
mov
jp
mov
repz
push
mov
bound
inc
xor
xor
std
js
data16
pop
in
loope
mov
dec
dec
adc
dec
insl
or
jb
or
mov
insl
dec
push
es
adc
cli
std
adc
or
stc
std
xor
adc
dec
cmp
outsb
inc
push
pop
push
inc
xor
mov
sbbl
std
pop
test
mov
inc
pop
dec
idivb
pop
sti
mov
jnp
pop
inc
xchg
sahf
sbbb
mov
cld
jo
jae
pop
or
mov
xlat
xor
pop
test
adc
dec
pop
pop
xchg
dec
test
out
mov
jb
xor
insb
adc
test
aas
pop
jge
dec
in
adc
ds
xorl
loope
dec
mov
xchg
cmpsl
dec
adc
std
push
pop
jb
rcll
std
inc
mov
pop
int3
mov
mov
xchg
inc
jo
cmp
fcomip
in
rcr
pop
fdivp
push
je
leave
xlat
mov
mov
xlat
xchg
xchg
test
xchg
push
pop
cmp
pop
aas
cmp
or
fs
xor
add
pop
pusha
and
and
add
jle
pusha
cmp
xor
int
outsb
fildl
jl
mov
or
daa
int
dec
xlat
rcll
andb
mov
push
daa
mov
jge
adc
je
std
in
cmp
push
adc
sbb
inc
dec
and
lret
outsb
pop
cwtl
push
mov
in
jmp
pop
push
add
lret
rolb
ja
out
inc
pop
ss
dec
pop
jb
pop
pop
insl
mov
pop
es
test
jo
xlat
shlb
xlat
mov
xor
mov
lret
push
adc
or
push
xor
daa
push
sbb
push
cmp
lret
pop
out
mov
jecxz
std
push
bound
mov
push
dec
bound
ds
cmp
das
stos
xchg
push
mov
cmp
lret
in
mov
rolb
ds
rcrb
popa
jo
lret
add
cmpsl
aad
push
dec
mov
push
dec
int
dec
ret
push
push
pop
and
rcll
jmp
aad
ss
cmp
bound
iret
xchg
jo
std
mov
jmp
roll
pop
ret
push
inc
outsb
dec
decl
rcl
out
or
pop
test
cltd
lret
aad
loope
jo
mov
ss
mov
lret
push
in
icebp
and
pop
push
xorb
mov
lret
pop
jo
mov
out
cmp
jo
jno
pop
cmc
xchg
xlat
test
arpl
mov
adc
jo
pop
xor
pop
cmc
js
jb
clc
ds
cmp
pop
add
mov
xchg
in
insl
jo
test
push
cmp
jo
mov
jecxz
rorl
xchg
push
js
cmp
xor
mov
sbb
pop
fs
outsb
adc
fists
repz
jo
or
in
cmp
push
sti
mov
jb
popf
pop
adc
insl
jo
inc
dec
push
std
push
sarl
popa
add
icebp
dec
mov
into
push
push
cmp
cltd
or
adc
inc
jo
push
dec
stos
pop
lret
inc
pop
xor
mov
cmc
mov
mov
jo
mov
js
push
cld
push
andl
xlat
ss
jo
test
mov
dec
pop
out
mov
jo
or
push
xorl
es
xlat
scas
add
add
mov
xchg
mov
push
push
gs
xchg
mov
sub
xchg
je
push
dec
fs
push
shll
mov
pop
mov
push
xchg
or
adc
sbb
jo
mov
imul
cmpl
dec
dec
outsb
push
xor
mov
mov
insb
scas
cmp
sbb
bound
sbb
cld
xor
adcb
ss
inc
xor
xchg
jbe
mov
mov
push
pop
dec
jge
push
xchg
dec
pop
adc
dec
pop
and
lcall
repz
mov
mov
std
mov
pop
jo
jb
pop
into
mov
jp
inc
jns
mov
ljmp
adc
inc
push
pop
jo
inc
gs
jo
mov
pop
loope
add
outsb
jns
jle
lea
mov
fs
jo
pop
in
shll
jno
ja
push
pop
in
ds
pushf
inc
icebp
fistpl
pop
in
push
mov
jo
pusha
dec
cmp
jo
dec
in
dec
inc
xchg
mov
mov
inc
jo
lret
cltd
pop
jo
push
or
xchg
test
mov
filds
jg
mov
jo
pusha
cmp
jno
bound
rol
nop
into
inc
pop
jo
pusha
mulb
adc
xchg
js
js
bound
in
shll
pop
jns
xor
int
mov
jb
jns
stos
sbb
cmp
mov
cltd
data16
xor
std
cmpsl
dec
jle
loope
pop
dec
jo
das
xchg
stos
push
push
adc
pop
inc
add
call
int
inc
lret
xchg
and
push
fs
jo
scas
add
mov
mov
inc
jns
fdiv
xchg
pop
popf
xchg
mov
xchg
cmp
lock
xchg
inc
dec
repz
or
xchg
pop
lret
mov
mov
sub
and
mov
in
mov
mov
jmp
mov
pop
push
inc
dec
add
inc
lret
int
outsb
push
add
inc
push
aam
jo
shl
push
fbstp
leave
xchg
mov
insl
xor
insl
fyl2x
test
in
outsl
mov
cmpsl
mov
lock
mov
lret
xor
push
add
cmp
mov
push
xor
xchg
xlat
daa
xchg
cmp
lret
cmp
sti
add
inc
lret
repz
cmp
dec
jo
xlat
daa
or
cmp
xor
xlat
sbb
cli
lret
repnz
test
pop
popf
rcrl
pop
bound
pop
push
xchg
js
jns
dec
mov
add
xchg
outsl
or
movb
out
stos
push
jno
sbb
jle
js
jno
jl
jb
test
popf
movsl
cltd
outsl
sbb
js
sbbb
xchg
jle
test
lds
nop
lcall
jo
mov
mov
adc
xchg
or
mov
mov
lods
push
jb
jle
mov
jo
test
lods
sbb
in
outsl
popf
adc
fsubrl
sti
mov
xchg
push
lock
insb
push
in
outsb
xchg
movsb
fbstp
testb
xchg
push
xchg
outsl
je
outsb
subl
xchg
cmc
jl
mov
orl
orl
adc
xor
fs
mov
aam
clc
rcrb
nop
fdivrs
pop
iret
jbe
mov
or
clc
and
mov
fsubrl
roll
test
fnstenv
outsb
addr16
mov
pop
mov
jo
lods
out
mov
mull
jnp
ret
scas
lds
ds
sti
jne
jae
mov
push
test
or
outsl
jno
jg
andl
push
pop
pop
out
push
aaa
pop
jg
jecxz
sti
inc
subl
sbb
divb
dec
test
daa
cmc
pop
push
ds
setne
sbb
push
push
out
and
sub
lret
mov
jg
xor
push
aad
jae
pop
dec
inc
aad
rcll
and
or
arpl
xchg
mov
mov
xchg
mov
xor
ds
pusha
xchg
bound
aaa
je
daa
xor
dec
inc
divb
popl
repnz
das
sahf
and
aad
xchg
mov
movl
or
icebp
xorl
mov
fwait
xor
rclb
incb
fcmovnu
sbbb
dec
mov
lds
jmp
dec
test
aam
cmc
jo
out
imulb
testl
outsb
push
jae
ret
in
adc
stc
roll
mov
rcrl
fstps
and
pop
mov
cmp
rol
dec
mov
sub
lcall
mov
push
adc
aad
and
mov
ffree
lds
push
pop
or
jae
aas
stos
aam
testl
mov
scas
psadbw
test
cmp
repnz
insl
mov
jbe
fld1
aam
shl
push
xrelease
xor
js
jecxz
aas
hlt
aam
lock
rorl
neg
arpl
push
inc
xor
loopne
sub
fstps
push
dec
xlat
fucom
into
gs
cmp
jmp
stos
mov
push
incb
add
cmc
sbb
mov
cmp
jae
jo
iret
fisttpl
rcrb
xlat
sub
cmp
sbbl
decb
jnp
mov
pop
adc
push
aam
jnp
inc
mov
mov
popf
jge
or
mov
xlat
fwait
insl
xor
mov
jo
in
sub
rorb
enter
or
or
filds
ljmp
fwait
jg
test
jge
repz
fwait
arpl
mov
sti
cmc
xor
xchg
out
clc
gs
push
test
icebp
sbb
aas
push
cli
aad
arpl
xchg
je
cmp
test
inc
test
pop
adc
jmp
pop
xor
push
pop
inc
insb
cmpsl
test
mov
in
iret
gs
fldl
mov
cmc
shll
cmc
mov
or
dec
aad
jg
cld
test
scas
iret
push
jmp
subb
sahf
ss
and
out
icebp
lds
loopne
mov
xchg
scas
inc
cmp
xor
mov
ret
lea
sbb
orb
pop
xor
sahf
push
add
shrl
jg
aas
loop
shrl
mov
popa
jle
cmpsb
dec
mov
push
mov
pop
movsb
fidivl
lds
jl
push
repz
jge
outsb
mov
add
push
lea
sub
xchg
jns
lds
mov
lea
icebp
cmp
inc
jecxz
pop
in
shll
pop
std
mov
in
aad
jno
jb
addb
outsl
fwait
pushf
aas
repnz
pop
mov
test
cmc
jle,pt
rol
sub
and
sar
jae
nop
fwait
mov
or
loop
jno
mov
std
fs
js
sbbl
testb
es
aad
insb
lahf
mov
movl
bndldx
mov
jbe
cmpsl
push
daa
es
aaa
sar
sbb
sub
jmp
sarl
std
jl
ds
mov
dec
lds
xchg
jl
leave
inc
xor
xlat
and
sbb
rcll
mov
xchg
aad
es
es
daa
jb
rcr
hlt
mov
mov
jl
in
es
andb
loopne
mov
test
pop
jge
imull
xchg
popa
cmc
cmp
mov
push
push
pop
popa
inc
loop
mov
xchg
push
std
icebp
test
test
jns
imul
mov
push
in
mov
out
pop
push
xchg
xchg
sub
xlat
sbb
lea
push
stos
repz
les
pop
fcmovbe
dec
ja
imul
rcrb
mov
sbb
int
or
dec
inc
sarl
jb
xchg
popf
dec
inc
cmp
insb
push
add
ret
gs
lret
add
icebp
test
pop
jnp
sub
out
add
lds
movsw
loopne
out
fs
jge
bound
fnstcw
or
ds
jl
mov
xchg
lods
mov
lret
jbe
jae
shrb
das
test
out
jl
push
fwait
test
mov
fwait
xchg
lea
mov
inc
xchg
lret
std
outsb
fldl
jbe
xchg
test
adc
and
jle
inc
mov
cmpsb
cmpb
lds
clc
push
jmp
in
je
and
push
jne
inc
pop
movsb
lock
cmp
arpl
pop
orb
xor
int
fsubl
push
ljmp
pop
push
les
mov
push
cmpb
push
mov
jg
jo
mov
push
cltd
imul
int
icebp
dec
jnp
repnz
push
push
mov
out
addl
xchg
xor
in
ret
popf
and
arpl
adc
jns
and
pusha
inc
testb
inc
jg
push
mov
sub
pop
mov
push
jge
mov
addr16
xchg
jne
filds
or
shrl
mov
lea
cmp
test
rol
test
repnz
movb
push
test
pop
sarb
loopne
sub
or
xchg
add
bnd
jge
add
add
ret
arpl
push
outsl
cmp
xchg
jg
jge
setp
gs
bnd
push
inc
cs
psadbw
rcll
sbb
stos
aaa
js
stc
dec
xchg
adc
outsl
sbb
int
popf
jno
and
jmp
jnp
cmp
popf
mov
adc
je
pop
cmpl
jle
pop
mov
jbe
shl
pop
mov
inc
sub
jbe
shrl
adc
pop
push
lods
mov
push
push
adc
dec
cmpsb
paddb
jl
mov
mov
jne
sarl
push
insl
xor
adc
fnstsw
lock
sbb
sub
scas
lock
pusha
cltd
data16
out
xchg
push
jecxz
or
adc
xchg
xchg
in
mov
fnstcw
pusha
je
in
cs
push
iret
icebp
xchg
jo
in
mov
rcrl
fcom
movsb
inc
idiv
data16
cmc
insl
jns
je
into
xchg
out
lea
je
cmc
mov
test
je
je
lea
jle
fwait
xor
aas
test
lea
mov
xchg
test
enter
push
jbe
mov
push
adc
xchg
movsl
sbb
shll
shrb
addr16
cmpsb
push
push
add
lea
push
je
jno
jae
mov
lods
shrl
pop
repz
push
mull
xchg
xlat
in
std
mov
fdiv
lods
xor
out
push
inc
mov
andl
sub
inc
jg
push
arpl
test
sbb
je
shll
cmp
pop
jb
vpmovdb
sarb
xor
push
scas
jl
iret
cmp
jle
xchg
dec
roll
movsl
xchg
daa
cmp
add
movsb
jp
inc
test
inc
add
rcrl
jl
adc
movsb
pop
xor
mov
mov
mov
jge
jmp
cmp
mov
imul
data16
or
std
mov
out
pop
cmc
cwtl
mov
loop
arpl
out
fwait
arpl
xchg
sbb
pop
scas
movsb
jns
xchg
mov
or
subb
fistl
cli
out
dec
lcall
loopne
add
aam
loopne
pop
mov
jle
jae
push
mov
xor
fdivrp
cmp
mov
pop
jle
cmpl
mov
xor
adc
repz
push
aas
test
rcll
cmp
pop
jo
pop
jp
mov
or
or
std
dec
xchg
shl
sbb
test
adc
mov
aad
fwait
test
gs
fldcw
pop
je
shlb
push
lds
out
ds
fwait
dec
jb
aas
lock
lds
cltd
rcll
ret
jno
jbe
cmp
fimull
popf
sbb
pop
cltd
rcrl
test
pop
mov
xorl
nop
lock
int
dec
subb
lahf
punpckhwd
stos
pop
jns
pop
cwtl
test
push
lea
mov
mov
popf
ja
xchg
lea
dec
dec
addl
xlat
divl
sbb
bound
add
mov
clc
adc
addb
push
pop
js
stos
xor
test
in
icebp
lahf
add
into
cmp
fwait
pop
lret
pop
cmp
adc
or
les
mov
into
addl
je
fwait
rorl
roll
std
or
adc
shll
gs
loope
xchg
pop
les
jb
in
xchg
loopne
test
mov
mov
lock
enter
push
clc
test
mov
movsb
xchg
test
cli
mov
sub
popf
mov
insl
and
movb
pop
jl
test
xchg
mov
sub
and
push
in
fcmovnb
add
mov
std
adc
shlb
cs
scas
mov
push
pop
dec
mov
imul
mov
ds
ret
loope
cmc
test
cmp
movsb
jle
out
jae
test
mov
lds
mov
jae
cmp
popf
jge
movsl
adc
mov
xor
adc
test
cmp
pop
mov
cmpsb
popf
std
xor
sub
aas
pusha
std
or
rcl
pop
inc
popa
push
test
aas
insl
movl
mov
xchg
xchg
data16
and
push
jp
cmp
and
cmpsb
push
movsl
xor
lcall
ljmp
shll
cmpsb
iret
jns
popl
in
pop
and
std
dec
popf
sbb
test
jecxz
scas
lcall
xor
cmpsb
shrl
cmc
pop
adc
mov
mov
addr16
pop
gs
and
fisttpll
inc
fwait
inc
aas
icebp
arpl
jnp
mov
shll
es
cmc
cmp
fcmovbe
jns
xchg
mov
mov
mov
cmpsb
cwtl
xchg
push
aad
in
xor
pop
mov
push
push
insl
inc
push
push
lea
mov
xlat
insb
and
mov
mov
imul
test
dec
aad
and
jle
popf
ljmp
scas
jns
sub
inc
mov
jns
testb
sbb
aad
test
out
add
cmc
cmp
xor
insl
rcll
lds
jle
outsb
popf
mov
sbb
inc
cmpl
jnp
icebp
lcall
sub
arpl
out
loope
test
aad
je
adc
mov
pop
rclb
jns
pop
clc
popf
adcl
imull
xor
ret
cmp
jg
mov
fs
cmp
mov
jnp
mov
adc
dec
mov
popf
rorl
mov
mov
jns
scas
lock
inc
out
pushf
scas
filds
jnp
sbb
sbb
dec
cltd
in
pop
jnp
fwait
lods
jge
out
aad
in
jb
mov
xchg
clc
and
sbb
les
pop
dec
push
jno
inc
out
dec
sub
scas
pop
lahf
pop
xor
stos
jge
or
or
lods
adc
adcl
outsb
cmp
push
out
test
adcb
inc
xor
pop
imul
cmc
int3
adc
sub
test
insl
mov
sbb
sar
stos
push
lahf
pusha
ret
fbld
sbbb
xchg
jecxz
fs
lds
dec
mov
jecxz
pop
xchg
inc
lcall
in
lea
cmp
cmpsb
cs
dec
push
or
std
inc
jo
or
lea
dec
std
adc
ret
outsl
sti
mov
das
xor
cmc
xchg
sbb
fstl
shlb
and
pop
and
fs
cld
aad
jo
scas
mov
cmp
jg,pt
xor
mov
lret
sub
pop
pop
cmp
out
xorb
xor
sbb
andl
sbb
xor
sqrtps
stc
mov
inc
jns
test
lcall
pop
xor
test
pop
popf
push
jbe
lret
outsb
out
shrb
xchg
icebp
adc
mov
std
jae
movsl
and
les
push
rolb
jmp
orb
or
lea
into
pop
jecxz
popa
lret
lods
add
inc
outsl
jae
xor
insl
ss
gs
imul
mov
sub
and
imul
cmp
jle
scas
scas
jae
mov
imul
cmp
inc
or
sbb
jae
clc
jnp
dec
xlat
xchg
xor
xor
sbb
imul
adcl
mov
imul
jg
pop
jb
sub
out
cmp
cmp
push
xor
pop
sbb
mov
mov
test
in
inc
mov
cmp
xor
pop
mov
cmp
jbe
sbb
or
data16
cmp
fisubs
push
push
inc
lods
mov
adc
dec
test
pop
mov
jle
out
out
pop
out
test
sbb
push
sub
xorb
cmpsb
xor
into
gs
push
jp
jl
xchg
mov
cs
iret
mov
sar
mov
or
fcmovnb
cmp
add
xor
push
mov
push
xor
out
dec
sar
mov
loope
jecxz
adc
mov
cmp
ss
jno
icebp
jle
push
ds
fdivl
lods
cltd
or
push
sub
aaa
popf
mov
test
cmpsl
ret
les
sbb
add
outsl
pop
jge
push
push
pop
popf
dec
repz
movsb
dec
xchg
xchg
mov
xchg
mov
mov
in
mov
jnp
push
pop
mov
push
pop
imulb
hlt
popf
jo
test
cld
adc
xchg
sar
test
inc
cmp
pop
stc
popf
cmp
fisubl
or
jb
push
jecxz
sub
adc
movsl
dec
xor
xor
jmp
sahf
rolb
addb
scas
fstps
dec
test
cmpsl
das
pop
adc
fptan
ja
insl
sub
jne
shll
lock
and
shrb
mov
hlt
xor
movsb
cmpsb
iret
je
lods
ret
jmp
xlat
xor
cmpsb
jnp
ret
sub
mov
movsb
adc
ja
mov
cmp
mov
xor
sarl
or
mov
jno
leave
inc
jae
sub
adc
sbb
int
xor
xor
mov
xor
movsb
xchg
andl
aas
mov
dec
mov
outsl
je
lea
jo
pushl
mov
stos
pop
push
or
fcomip
xor
int
popa
adc
adc
pop
hlt
lods
std
xchg
gs
mov
test
dec
mov
add
icebp
daa
icebp
sub
out
adc
sbb
inc
outsb
jo
lea
lds
inc
pavgb
jecxz
push
adc
sahf
jns
jne
shlb
jbe
xor
sub
mov
xchg
dec
addr16
fadds
and
pop
lods
cmpsb
je
hlt
cmp
xchg
jae
pop
rclb
aam
sub
jg
sbbl
inc
repz
outsb
outsl
xlat
and
xchg
jge
mov
cmpsl
sub
mov
dec
out
notb
lods
iret
sbb
orb
test
jg
flds
cmova
jge
jl
add
and
in
dec
or
jae
fidivrs
fisttpl
lcall
mov
in
or
cmc
jno
adcb
stos
mov
push
gs
ja
jg
add
sarl
xor
je
fstpl
sti
xor
adc
jns
and
cwtl
jbe
call
subl
sahf
push
sub
sub
cmc
sti
add
pop
pop
pop
adc
sub
sbb
pop
mov
pop
jle
push
pop
repnz
add
dec
pop
mov
daa
sub
add
test
xchg
xor
inc
shrl
lds
jns
mov
cmc
bound
jnp
outsl
mov
fwait
xchg
dec
lock
cs
decl
fstsw
lds
inc
pop
repz
ds
cmc
jno
test
ja
mov
add
pop
ja
shll
clc
and
pop
mov
mov
lds
adc
arpl
cld
jnp
mov
xor
mov
mov
mov
jnp
mov
sbb
in
adc
test
xor
push
xchg
jl
dec
insb
mov
xlat
jge
stos
mov
daa
lods
je
sti
lret
mov
push
mov
mov
rcll
and
adc
inc
jo
add
repnz
lods
mov
mov
push
cmp
xchg
fs
test
push
xor
aaa
inc
lret
std
push
orb
lcall
dec
test
inc
andb
mov
not
sub
fisttpll
pushf
add
ss
sbb
scas
call
fsubl
fwait
dec
push
jns
pushl
mov
test
rcrb
outsb
cmp
pop
sub
lea
mov
mov
sbb
lea
subl
sarb
iret
xchg
jns
insl
push
jno
lods
pop
push
or
mov
repnz
int
mov
mov
dec
lret
scas
subb
dec
out
rorl
jbe
lock
decl
aam
mov
mov
pop
test
sbb
daa
xlat
aaa
jns
lds
stos
mov
lahf
push
add
or
or
cmc
sbb
or
stc
test
test
mov
mov
ret
fcmovnb
imul
mov
push
shl
jne
or
les
add
ja
pop
push
fadd
nop
in
rorb
cmc
cmpsl
divl
push
mov
int3
fwait
or
test
jo
xchg
lret
hlt
and
mov
test
and
push
rolb
je
scas
push
lret
mov
shrl
mov
pop
add
into
gs
es
inc
gs
mov
and
mov
push
lds
push
pop
push
std
repz
add
out
pop
popa
jno
add
add
push
insb
and
or
dec
adc
pop
les
dec
add
cmp
les
insl
inc
std
lds
cmp
cmc
test
cmp
pop
popf
adc
dec
packsswb
xchg
mov
stos
out
push
pop
sub
push
jge
xchg
scas
ljmp
inc
jg
adc
lahf
repnz
cld
out
dec
test
fsubs
rclb
mov
cld
jmp
jge
cwtl
repz
cmp
jp
fildl
xchg
int3
or
sbb
jns
push
pop
cmp
sub
push
clc
test
mov
mov
das
inc
test
divl
iret
pop
inc
or
fildl
add
shlb
aam
mov
xchg
jecxz
adcl
std
imul
sbb
xor
repnz
and
popf
mov
rcl
dec
push
mov
push
push
stos
push
mov
and
inc
aad
cltd
aad
cwtl
pusha
push
xchg
pop
data16
xchg
fwait
xor
inc
push
cmc
push
mov
cwtl
mov
cwtl
stc
lea
iret
jns
mov
jo
cmp
xor
fwait
xor
cli
pusha
test
push
pop
push
push
imul
arpl
lea
jns
sarb
fisubrl
jmp
jb
push
push
or
cmc
sub
rol
or
aaa
popf
aaa
dec
out
fiaddl
add
test
cmp
jecxz
repz
mov
jecxz
adc
mov
cli
mov
pushf
scas
gs
lock
popw
int
mov
sub
mov
int
aaa
push
mov
loope
jl
xchg
pop
outsl
push
test
sbb
gs
es
jecxz
div
xor
xor
dec
jne
xchg
jno
pop
jo
dec
push
add
sbbl
jmp
repz
jb
mov
add
movsl
jg
push
xchg
and
lea
cmpsb
pusha
adc
jecxz
xchg
je
outsl
cmpl
insb
cmp
rorb
andb
mov
jp
pop
aad
push
cmpsl
sarl
cs
iret
xlat
ss
adc
cld
push
fwait
dec
cmc
xchg
jae
sarb
lds
adc
stos
xchg
shr
xchg
sub
jne
inc
sahf
xchg
dec
push
daa
mov
dec
cmpsl
fcoml
adc
movsl
jno
les
daa
das
pop
mov
push
push
out
sub
es
xchg
push
push
push
mov
push
push
int
out
cs
mov
jae
pop
std
nop
decb
iret
sti
inc
jns
jl
dec
addr16
xchg
mov
andl
test
loop
insb
outsb
xor
outsl
imul
xor
jno
add
cltd
pop
test
repnz
mov
icebp
pop
add
in
xchg
jmp
orb
mov
cs
xchg
jle
add
addr16
inc
iret
shrl
xor
jp
mov
inc
xor
xor
push
fisubrl
iret
sub
jge
dec
idivb
aaa
shll
jge
orl
pop
pop
in
js
rol
into
daa
push
sbb
cmp
add
testb
push
jecxz
movl
loope
jns
popf
add
test
pop
imul
xlat
daa
push
adc
lea
jge
daa
mov
decb
add
mov
xchg
gs
jbe
adc
mov
push
scas
pop
stos
adc
test
dec
les
test
testb
std
test
scas
xchg
dec
pop
je
movb
jl
adc
pop
mov
roll
mov
add
inc
std
imul
sahf
inc
scas
test
or
aad
aaa
pop
or
mov
les
dec
notb
dec
dec
lea
and
imul
sbb
pop
test
push
stos
ja
sub
push
cmp
pop
outsb
adc
in
push
mov
test
jno
push
jno
push
fwait
jno
push
movsl
jno
push
in
dec
inc
addr16
pop
pop
mov
aad
arpl
rorb
iret
xchg
cmpb
xor
sbb
sti
ds
jno
out
push
xchg
jle
loopne
test
xor
ja
inc
pop
cmpsb
pop
push
mov
aam
jle
mov
xchg
mov
push
bound
mov
or
jbe
xor
xchg
popa
ds
add
cmc
and
or
jecxz
xor
push
ss
push
mov
dec
dec
xchg
cmp
cwtl
xor
ss
xchg
test
sbbl
push
jo
jge
jnp
test
push
cmp
push
push
push
lods
push
push
adc
fbstp
xor
sbb
test
inc
cmpb
push
in
cld
lds
fnclex
pop
push
into
mov
aaa
and
sahf
push
pop
scas
dec
popf
call
aad
movb
sahf
xchg
insb
push
sbb
jno
rcrl
xchg
add
rorb
jmp
mov
push
and
rolb
clc
fisubl
les
cmpsb
pop
scas
and
cmp
or
pop
xchg
pop
aas
jns
pop
push
xor
xchg
push
jge
in
outsl
jecxz
or
inc
mov
jbe
jae
cltd
mov
mov
iret
gs
mov
popf
xchg
or
ss
and
and
xchg
mov
rcr
rcll
push
fdivrp
mov
mov
jge
lea
loop
roll
xchg
les
in
mov
adcl
mov
negl
xlat
jge
fisubs
fcompl
push
mov
mov
mov
and
jns
xchg
fcomip
imulb
push
cli
jmp
iret
fnop
xchg
repnz
cmpb
fildl
inc
test
ss
hlt
addb
lcall
lahf
push
lock
insl
pop
nop
inc
pop
push
jecxz
push
dec
scas
cmp
testl
mov
sbb
addb
adc
mov
popf
xor
fs
push
jmp
stos
xorl
insl
push
cld
cmp
push
pop
dec
pop
push
pop
aam
dec
out
mov
stos
jb
add
les
es
sarb
scas
mov
testl
aaa
push
sahf
mov
add
xorb
jge
jns
ficoms
mov
fmull
sti
stos
push
sbb
push
pop
jl
loope
popa
daa
lcall
pop
and
sti
shl
sub
pop
outsl
repnz
jno
rcrb
jno
pop
fisubl
cli
ja
cwtl
out
rorb
leave
mov
push
adcb
loopne
das
into
xchg
cmp
jo
jb
cwtl
or
aaa
pop
jbe
clc
jg
fwait
cmpsb
xor
sbb
mov
nop
pop
pop
and
cmc
jg
jns
addr16
dec
int3
or
aad
mov
or
add
loopne
sahf
cmp
xchg
jnp
nop
aas
cli
stc
cltd
fs
adc
sbb
inc
cmp
or
adc
cs
shrb
mov
xchg
jb
sahf
aas
mov
rolb
push
xchg
shlb
jbe
repnz
jge
pushf
mov
testb
pop
in
cmp
cmc
std
adc
pop
addl
shlb
in
aas
mov
push
mov
or
aaa
adcb
in
sarl
inc
adc
push
xor
das
fidivs
out
rcll
adc
xor
subl
cltd
pushf
dec
sub
subl
movsl
adc
icebp
add
xchg
jl
mov
test
pop
mov
jns
jae
aad
mov
mov
mov
adc
and
or
xchg
or
loop
dec
sub
fwait
sbb
insl
xchg
aam
daa
mov
aad
mov
mov
lods
pop
dec
icebp
popf
das
xor
xor
pop
out
jo
cmp
aaa
jecxz
push
xchg
subb
xor
out
sahf
cmp
out
repz
mov
xchg
xor
mov
lcall
dec
daa
and
cmc
pop
test
and
or
ffree
ss
push
insl
pop
test
rolb
outsb
repz
jl
cmc
pop
sub
arpl
into
sub
adc
lret
ljmp
cmp
cli
cmc
sarl
les
test
test
lret
addr16
and
jl
mov
je
dec
adc
adc
jne
sti
xor
test
sub
mov
jge
out
mov
sub
inc
stos
lods
jno
xorb
scas
push
inc
fists
and
pop
sbb
ja
mov
jo
cmp
push
push
mov
cmp
cmp
sysexit
and
jae
ficompl
repnz
shrb
cmc
jnp
insb
sarb
xorl
enter
int3
lahf
sub
rcll
bound
jmp
test
or
xchg
cli
dec
xchg
imul
sbb
cld
std
or
jge
cli
mov
and
add
jle
test
jge
sub
js
nop
xor
add
jbe
jge
rclb
xor
in
mov
add
cli
push
pushf
in
push
mov
shll
xor
xlat
ljmp
sbb
jecxz
aad
stc
in
inc
add
cli
push
iret
test
xorl
jne
clc
jns
pop
push
ljmp
pop
into
mov
cmp
test
clc
nop
inc
mov
ret
popa
movsl
sub
sti
sub
sub
xor
adc
shll
adc
mov
out
push
clc
pop
pusha
mov
cmpsb
xchg
mov
sbb
jecxz
jl
cli
icebp
mov
cltd
jae
lods
sub
hlt
push
cli
dec
out
xchg
mov
lcall
shrb
cmc
mov
pop
in
add
adc
cmpsb
add
and
add
or
push
dec
mov
pop
mov
cmpsl
push
pop
sti
insl
lods
dec
push
sarl
aad
xchg
pop
cmp
add
sarl
jp
rol
cmp
loope
cwtl
push
jle
ret
fstps
jge
cli
mov
lahf
sbb
in
sbb
mov
mov
es
mov
sub
insb
mov
arpl
ds
popa
jns
mov
add
cmpsb
cmp
or
popf
mov
jge
xlat
and
dec
fwait
aad
mov
mov
add
pop
jmp
inc
inc
sub
xchg
repz
fcoms
cmc
push
jl
adcb
pop
adc
pop
sub
jae
mov
mov
push
gs
arpl
ljmp
jo
xchg
mov
push
or
or
es
faddl
lret
outsl
cli
jl
pop
sub
and
or
jo
sub
xlat
shlb
cmp
or
xor
aad
mov
jecxz
loope
pop
adc
sub
jns
icebp
cmp
fwait
inc
int3
test
les
xor
cmp
paddq
adc
push
fnstenv
mov
sub
ds
lods
jle
rorl
test
jg
mov
mov
aas
das
daa
push
das
xchg
incb
jae
xchg
imul
cmp
or
mov
and
and
jae
std
gs
test
dec
cld
xchg
jg
xchg
hlt
xchg
popf
mov
inc
mov
movsb
push
jne
fwait
test
aad
inc
sbb
jno
jno
sbb
mov
sbb
jle
aad
mov
add
pop
mov
fwait
and
wrmsr
mov
and
aaa
mov
es
mov
xchg
push
in
arpl
icebp
stos
or
lds
cmc
mov
jne
shrb
sti
jno
dec
mov
rorb
jle
sub
aas
jae
ret
mov
int
sti
jge
testb
test
ficoms
imul
loopne
pop
lea
fwait
jl
in
mov
iret
xor
jae
pop
out
fwait
ja
pop
shrb
or
xchg
leave
popf
in
subl
data16
scas
push
leave
int
jl
pop
inc
idivl
push
jl
add
fisttps
xchg
pop
jo
popf
lods
inc
jmp
mov
and
adc
imul
fwait
repz
movsl
xorl
adc
sub
mov
mov
mov
sahf
jbe
jae
sbb
pop
leave
or
jns
js
fbstp
push
push
jge
xchg
mov
jns
xchg
and
enter
dec
jns
adc
adc
jmp
cmpl
jmp
sub
imul
arpl
xor
cwtl
dec
sbbb
test
cmc
or
aas
fxam
gs
aas
pop
mov
add
scas
cmc
aad
ja
add
mov
push
dec
sbb
push
hlt
mov
mull
mov
mov
jo
cmp
test
jecxz
into
rcrb
xchg
cmc
dec
mov
insl
stc
shlb
scas
add
dec
into
or
jle
ror
xor
mull
inc
mov
jl
rcrl
ja
arpl
mov
pop
gs
dec
mov
adc
push
fimuls
xchg
mov
xor
mov
mov
lods
xor
adc
mov
jle
pop
stc
aam
xorb
lret
shll
xchg
icebp
movsb
test
jg
mov
xor
push
mov
insl
jb
push
das
in
or
jl
push
jg
add
jl
sahf
dec
test
mov
cmpsb
sti
dec
lea
xor
mov
lret
pop
push
mov
mov
sti
inc
jecxz
push
or
mov
repnz
dec
rcll
push
fistpll
cwtl
xchg
pop
cmp
xchg
xlat
cmovb
test
xor
pop
push
rcrb
loope
jmp
dec
xchg
dec
outsb
sbb
inc
std
push
xor
lds
popf
cwtl
andb
jecxz
or
sub
xor
mov
lods
jbe
popf
sbb
push
or
sti
shll
fisttps
xlat
push
lret
jbe
mov
push
push
push
and
out
mov
fwait
mov
xor
or
xchg
pop
daa
stc
xlat
mov
sbbb
sahf
insb
movsl
out
mov
add
mov
inc
hlt
ficoml
das
icebp
sub
cmp
mov
test
jae
les
nop
movb
jno
sahf
scas
mov
push
fnstsw
jle
adc
adc
shll
shll
orl
orl
xor
leave
addr16
repz
repnz
into
mov
ja
sarb
hlt
and
sub
sarl
shld
dec
add
mov
test
mov
mov
push
jp
push
mov
or
add
adc
jo
xchg
pop
sbb
sbb
hlt
cmp
add
push
repnz
movsb
popf
push
call
and
call
xor
aaa
xor
add
push
rcll
inc
cmp
xchg
fsubp
jno
aas
xorl
lds
push
repz
xor
jl
pop
jmp
fwait
daa
stc
pop
and
or
dec
repnz
jmp
xor
cmp
dec
repz
test
out
jg
les
sbb
ret
les
pop
imul
mov
popf
out
movsb
loopne
gs
add
repz
mov
shll
aas
jne
xchg
adc
jl
jg
inc
xor
lea
or
outsb
sub
jae
mov
fs
lock
pop
jbe
fwait
mov
push
imul
dec
jo
lret
mov
jecxz
mov
andb
outsb
and
fdivs
add
icebp
shll
shlb
loope
cli
ret
dec
lock
adc
mov
subl
jae
mov
xchg
push
insb
mov
adc
cmp
out
movsl
in
insb
gs
popf
or
cmc
popf
lods
mov
cmpsl
movsl
or
cmpsl
jns
fdivp
rol
in
daa
pop
pop
pop
rcll
ffreep
std
xchg
mov
inc
add
jnp
dec
jg
jno
imul
stos
loope
movsl
out
cmp
lea
sarb
aad
or
test
cmp
pop
arpl
fnstsw
out
xor
add
or
push
divl
faddl
dec
out
pop
nop
xor
fldt
adc
jo
jp
jnp
icebp
outsl
addb
xlat
loope
jae
les
stos
xchg
test
sub
pop
insl
sbb
pop
sub
mov
rolb
daa
ss
inc
push
orb
mov
pop
sbb
addr16
mov
xchg
fmull
mov
sti
sub
test
dec
shll
das
jno
push
inc
or
pop
ja
ds
outsl
aaa
mov
test
dec
xor
ror
sbb
adcl
pop
adc
das
push
pop
mov
pop
stc
inc
pop
popf
mov
ror
xchg
xchg
ret
xchg
adc
pop
add
xor
fnsave
push
icebp
pop
add
repnz
sub
into
push
les
push
hlt
icebp
xchg
aad
xor
jle
mov
mov
aam
in
fs
nop
loop
mov
push
sti
xorl
mov
out
mov
pop
adc
in
sub
jg
hlt
int3
cmovno
sub
cmp
aad
cmp
adc
imul
nop
js
xor
gs
shrb
jle
enter
jns
insb
or
hlt
stc
mov
inc
sub
mov
je
fs
popf
dec
mov
test
push
pop
je
jge
push
pop
leave
inc
out
call
pushf
pop
arpl
dec
cmp
in
sar
xchg
fwait
add
sbbb
repz
orb
lds
call
push
mov
jl
arpl
push
test
movsl
jno
fwait
lahf
jmp
leave
or
ljmp
add
aaa
push
or
daa
ds
sti
sar
jle
lea
push
mov
rclb
mov
push
dec
popf
mov
cli
shl
cmp
sub
lahf
cmp
mov
xor
mov
or
jge
jo
pop
add
subb
loope
aam
push
ucomiss
std
scas
popf
or
dec
jo
xchg
arpl
popa
push
lahf
shrb
xchg
jae
imul
insl
notb
push
jg
jne
add
sbbl
mov
sbb
xor
mov
cmc
out
sarl
push
and
scas
scas
out
out
loope
mov
in
test
and
and
addr16
pop
adc
rolb
lock
jno
sbb
mov
imul
movb
fcoms
shll
bound
xlat
cld
mov
or
mov
aad
daa
fstps
and
jns
lcall
popf
jnp
insl
mov
std
mov
rolb
add
dec
mov
popf
insl
jbe
subl
ffree
movsl
sti
cmpl
cmc
movsl
sub
cli
cmpsl
pop
sahf
push
pop
std
adc
orl
push
mov
lods
xchg
or
addl
mov
call
aam
xchg
dec
push
shlb
lods
test
xchg
xor
mov
push
dec
inc
sbb
cltd
test
out
icebp
mov
adc
imul
sub
or
icebp
mov
or
cli
test
outsl
lcall
stos
add
subl
cmpsb
fidivl
test
push
test
mov
je
popf
imul
cltd
pop
sub
push
lea
or
inc
or
loop
lds
outsl
jp
movsb
jl
cmc
inc
push
sbb
popf
pop
sub
cmpsb
mov
dec
nop
sub
ret
sbb
flds
mov
mov
xchg
xchg
or
out
outsb
mov
lock
cmp
inc
enter
push
cmp
inc
add
or
and
addr16
cmp
jg
les
leave
xlat
rcl
insl
out
add
neg
and
rcrl
pop
cmp
push
hlt
mov
dec
cmpl
adc
stos
sbb
and
pop
pop
inc
fprem
xor
shl
test
scas
mov
lea
and
mov
push
pop
lcall
adc
xchg
stos
cmovge
jno
xchg
sbb
cmpsb
mov
sti
out
int3
jp
fdivrl
sarb
mov
jp
mov
push
popa
or
popf
outsl
sub
cs
sub
sti
dec
outsl
andl
push
jge
std
frstor
xor
xor
aad
imul
inc
and
jbe
mov
in
xor
xchg
pop
int
popa
jg
jb
jns
pop
lock
xchg
mov
scas
call
add
js
lahf
xchg
movsl
sahf
push
adc
sub
movsl
lds
inc
pop
cmp
mov
xor
lods
cmp
pop
push
in
inc
pop
cmp
inc
jo
popa
cmpsb
xor
std
xor
jbe
adc
sub
test
sub
fimuls
adc
pop
cmp
in
mov
je
testl
imul
test
test
mov
fsts
iret
out
xchg
lds
jbe
mov
mov
lds
mov
sub
mov
out
in
and
sti
dec
iret
push
int
jb
insb
ror
arpl
popf
in
xor
inc
pop
mov
lock
dec
sub
push
or
mov
or
push
flds
xlat
sbb
ret
repnz
mov
das
fsubrs
inc
popf
and
mov
push
lea
rorl
mov
dec
cli
stos
fdivr
xchg
lods
std
insb
jns
cmpsl
rolb
push
fstpt
jnp
inc
xor
push
mov
hlt
xchg
xchg
or
cmp
cmc
xor
das
insl
dec
push
adc
sub
mov
test
std
test
into
adc
xor
inc
shrb
mov
popa
shl
mov
jns
xchg
data16
icebp
dec
rcrl
adc
xchg
test
shrl
mov
aas
pop
sub
jbe
loope
insl
daa
gs
addb
push
and
imul
mov
ret
jno
sub
jo
fwait
cli
movsb
cmpsl
cmpb
push
mov
ljmp
cld
decb
sbb
push
shl
add
inc
movsl
std
jp
adc
push
jmp
or
xchg
jno
jle
sub
jmp
xchg
lds
xchg
outsb
test
or
mov
xchg
mov
mov
dec
pop
jnp
sub
dec
lock
fnstsw
cmpl
cmp
pushf
mov
pop
clc
jnp
insl
mov
or
and
pop
dec
rcl
adc
jmp
inc
push
and
movb
pop
jo
loop
fimull
xor
inc
add
push
push
fldl
in
fldl
ds
mov
ss
mov
inc
rcll
or
and
sti
add
icebp
push
sbb
push
pop
jle
mov
shlb
dec
cmp
mov
xor
push
shrl
mov
jnp
push
push
xor
cmp
pop
cmp
jmp
scas
cmp
scas
aas
pop
jmp
sbb
or
add
push
testb
mov
pop
dec
and
dec
rcrl
mov
fisttpll
pusha
mov
sub
xlat
sub
das
sbb
adc
je
pop
pop
stos
adc
ds
ljmp
sub
mov
xchg
cmc
cmpsb
lds
jp
mov
push
negl
loop
jnp
aas
pop
cmp
push
mov
push
push
push
roll
push
pusha
jg
dec
js
ror
jns
jno
in
jge
jg
xchg
xchg
jmp
xor
data16
cltd
mov
lea
test
jo
cmp
mov
inc
andl
dec
int
adc
jg
xor
outsl
add
jp
add
jne
es
clc
jge
cmp
xchg
stos
cmp
jp
lds
in
popf
lret
pop
jno
cwtl
repz
inc
fsubs
repnz
or
push
jb
loopne
cmp
rorl
loopne
jg
imul
mov
add
xchg
inc
xchg
ficompl
adc
jb
je
shll
hlt
xor
inc
add
movsl
inc
into
push
int
xchg
pop
test
mov
lret
arpl
cwtl
xchg
xlat
mov
pop
and
int3
add
add
or
addr16
lods
ret
adc
fstpt
add
sub
pop
fwait
jnp
loope
mov
mov
sub
int3
xor
shlb
push
es
push
jg
out
lds
push
jbe
pop
adcl
lods
jb
inc
test
xor
icebp
scas
lods
test
push
cmovs
lock
lret
add
pop
jae
test
dec
adc
adc
push
and
icebp
lcall
inc
or
arpl
lock
pop
rcll
xor
fistl
jnp
mov
arpl
fidivrs
pushf
add
pop
pop
std
push
xor
aas
xor
xchg
xchg
sbb
sub
ss
sub
ret
jecxz
sub
cmpb
imul
sarl
shlb
inc
sub
xchg
shrl
push
icebp
iret
sarb
out
out
sub
jg
push
popf
or
sub
inc
xlat
and
mov
lock
fwait
jo
outsl
nop
cmc
xchg
data16
aad
movb
add
cmp
mov
dec
stos
inc
mov
out
jg
or
cmp
cmp
mov
fldcw
xchg
sub
jae
and
subl
push
repz
jp
loop
xor
adc
pop
lock
xorl
push
rclb
xchg
push
xchg
jg
repnz
ret
dec
sub
fxch
popa
or
xchg
stc
lock
adc
xor
add
cmpl
pop
mov
icebp
test
cmp
addr16
js
mov
cmc
jge
sub
or
arpl
pop
jg
xor
sti
pop
adc
inc
sbb
stc
repz
pop
in
popf
movsb
dec
je
lcall
hlt
cltd
mov
into
jbe
add
mov
dec
mov
cld
incb
push
add
jno
icebp
xlat
aam
fwait
xchg
push
push
cmp
popf
mov
jo
daa
pop
idivl
sub
das
add
sbb
in
bound
push
adc
or
prefetcht1
inc
jb
fstps
out
std
adc
push
les
dec
dec
and
or
out
mov
xor
mov
cmp
das
jge
imul
xchg
xor
out
dec
test
jbe
and
out
and
mov
inc
cmpsb
and
stos
sahf
movb
sub
je
sahf
inc
dec
movsl
or
mov
and
rcrl
mov
into
pop
xchg
sbb
pop
popf
inc
data16
outsl
stos
inc
xlat
fpatan
xor
cmc
add
xchg
lds
mov
pop
xchg
and
frstor
aam
ds
scas
nop
and
fcmovu
jle
jle
je
ss
shr
adc
jno
add
arpl
jnp
icebp
cmpsb
lret
je
mov
pop
in
pop
add
xabort
and
xchg
cmc
mov
pop
movsb
ja
xchg
out
test
clc
jecxz
jo
aad
aad
sbbl
loop
cwtl
pop
push
insl
scas
pusha
imul
mov
mov
test
push
sti
scas
mov
jmp
and
ss
icebp
lock
xorb
or
jle
xchg
push
adc
data16
cmc
mov
lcall
jbe
sub
and
sti
fbstp
das
out
arpl
push
xlat
pop
jns
es
sbb
sub
inc
ret
cltd
xchg
ja
in
jae
xchg
xchg
xor
cmp
cmpsb
fwait
mov
jo
dec
add
lds
inc
xor
ds
pop
jo
jmp
daa
icebp
cmc
or
fcompl
and
xlat
sbb
xor
sbb
lds
rsqrtps
scas
push
xor
mov
ss
scas
pop
sti
push
mov
fdiv
sub
pop
xor
lods
out
stos
inc
adc
out
insb
and
dec
pop
js
or
cmp
shl
fld
pop
xchg
movsb
movb
stc
out
imul
push
jb
mov
add
and
mov
hlt
mov
loop
add
push
repnz
push
popl
hlt
pushf
loopne
adc
mov
xlat
sbb
loopne
xor
jnp
or
mov
push
mov
iret
push
jae
cli
ljmp
cmpsb
dec
dec
loop
faddl
mov
aad
jo
dec
jne
aam
movsb
pop
fdivrs
cmp
test
push
push
adc
outsl
call
lods
or
test
inc
xlat
imul
sub
push
je
or
push
pop
icebp
jle
sub
push
sarl
xor
mov
jb
imul
jb
sub
ja
addb
insb
roll
shlb
ret
shll
pop
xor
xchg
nop
pop
xchg
loop
insb
ret
lock
inc
movb
add
add
push
aad
cmp
xlat
ja
or
pop
pop
inc
jg
jl
aaa
sbbl
shlb
test
cwtl
xor
nop
daa
sbbl
sbb
cwtl
push
push
push
scas
stos
stos
popa
cld
cmp
sub
sbb
sarb
pop
sub
mov
cmp
sub
cwtl
ficoml
mov
out
ja
xor
movsl
and
cmp
xchg
dec
ret
xor
subb
aaa
je
mov
adc
incb
xchg
pop
jmp
aas
movsb
jo
jge
imul
in
mov
je
aas
aam
mov
les
cmpsb
icebp
mov
xor
add
les
inc
adc
mov
out
mov
xor
popw
aaa
sbb
negb
pop
rcrl
stos
mov
sub
cwtl
inc
push
mov
das
add
mov
outsl
insb
mov
inc
movsb
inc
pop
lods
movl
out
pop
jb
shrb
cmpsb
xchg
repnz
fs
jmp
sub
imul
outsl
sub
jge
mov
pop
test
adc
mov
lea
lods
rclb
fildl
pop
arpl
xchg
pop
iret
adc
test
xchg
ret
sahf
jo
dec
jo
inc
add
rolb
ret
sahf
sahf
mov
fildl
out
inc
pop
out
xchg
xorl
fwait
outsl
repz
xor
aam
add
add
shlb
jle
ljmp
mov
fwait
ss
insl
add
imul
dec
and
lcall
cmp
and
dec
clc
ror
in
fists
xchg
push
and
and
aam
roll
adc
cmc
cli
in
or
xor
insb
pop
fistps
fsubr
add
leave
ja
xchg
pop
lods
inc
cltd
icebp
hlt
mov
push
iret
loop
and
jo
jb
aad
inc
test
hlt
test
push
movsb
lcall
inc
cmp
lcall
outsl
inc
jmp
xchg
aas
je
fisubs
and
mov
ljmp
out
mov
ret
mov
iret
mov
pop
and
lods
or
jl
dec
fwait
push
cwtl
and
push
jge
or
outsl
aas
lock
and
popf
testl
lods
test
jo
in
sbb
shl
fildl
fadds
lea
arpl
sbb
cmp
dec
push
ds
cmp
mov
jecxz
hlt
popf
pop
cmp
imul
xor
and
and
mov
pop
push
dec
jno
out
gs
leave
and
outsl
das
repnz
jge
pop
hlt
sub
popf
adc
popf
sub
cmpsb
dec
in
pop
outsl
push
jl
cmp
adc
jge
cmp
lds
cmp
std
jns
pop
pop
repnz
jae
cli
sub
sahf
jbe
mov
es
mov
mov
add
or
add
ja
into
inc
sbb
and
scas
xor
mov
adc
nop
xchg
loop
test
fsubrs
subl
push
adc
mov
ljmp
sub
and
aad
es
inc
iret
mov
neg
ss
sahf
xor
mov
movsl
jle
xchg
jns
lea
notl
imul
push
dec
jb
aas
shrl
mov
daa
push
lret
mov
sbbb
lock
mov
stos
lcall
jns
mov
jle
loope
mov
or
sub
pop
sub
std
pop
lds
nop
pop
push
jnp
push
mov
ret
jg
fldenv
iret
inc
pop
test
sbb
rclb
aas
and
xchg
test
mov
jecxz
clc
ja
adc
add
xchg
loop
jno
jno
mov
xchg
lods
adc
test
jp
xchg
cs
sbb
imul
popf
xchg
shll
or
aam
inc
pop
pushf
mov
lods
cmc
push
je
outsb
bound
xor
pop
push
or
xchg
repnz
mov
xlat
lret
popa
jbe
mov
mov
inc
or
iret
xchg
xor
flds
je,pt
ljmp
push
andb
jb
fdivrl
xchg
jnp
mov
rcrb
les
int3
push
popf
std
sub
movsb
in
inc
push
mov
adc
imul
mov
jge
in
fwait
imul
jg
jae
push
dec
lret
andl
bound
ss
cwtl
cmp
ss
scas
rol
adc
int
pop
fisubs
hlt
push
cli
add
dec
xchg
les
cmp
push
mov
adc
mov
push
add
push
mov
lcall
jp
les
or
movl
inc
push
xchg
add
sbb
mov
outsl
jno
dec
jle
or
mov
push
push
dec
dec
je
stos
enter
fwait
jecxz
mov
inc
and
mov
js
jge
js
testl
cmp
xor
pop
int
push
js
mov
inc
jnp
mov
jmp
push
mov
push
add
mov
repz
into
fwait
insl
int
cli
testl
lods
sahf
iret
jle
repz
gs
test
and
push
aam
sub
cmp
adc
pushf
jg
and
xor
loopne
mov
lea
stc
inc
ljmp
or
adc
dec
subb
jne
jbe
cmpsl
addl
jmp
fwait
xor
rcrl
xchg
add
test
repnz
add
inc
dec
adc
jg
mov
push
dec
pop
adc
popa
cmc
test
push
xor
mov
jp
jae
les
out
mov
popa
or
cmc
adc
jb
inc
sarl
lret
stos
push
gs
stos
je
adc
xor
test
cmpsb
ret
hlt
and
xchg
mov
sub
test
mov
cmpsl
rorb
lods
repnz
push
sbb
pop
sti
addr16
popf
mov
inc
std
popf
and
test
dec
adc
jb
lock
popf
inc
xorl
lret
sbb
adc
insb
pop
jns
mov
xchg
dec
add
mov
and
aam
and
xchg
dec
dec
push
notb
sahf
popf
sti
xchg
aas
fcoml
mov
in
fwait
cmp
dec
ljmp
add
mov
jae
sbb
fldenv
dec
cmp
sahf
push
out
adc
jmp
les
xorb
or
fcoml
xor
mov
into
test
data16
sti
pushf
mov
aam
std
jno
add
rcrl
out
cmp
push
icebp
jg
ret
or
repnz
lea
rcrb
loope
mov
and
push
jg
fs
pop
xchg
push
xchg
lea
mov
pop
rcrb
arpl
adc
inc
cmp
cmp
mov
imul
sub
arpl
outsl
addl
shrb
divl
test
mov
inc
adcb
sbbb
idivl
je
push
call
mov
scas
xchg
scas
test
adcl
lret
les
fstps
add
mov
mov
xchg
idivb
adc
int
pop
cmp
data16
ss
and
out
adc
shrl
je
repnz
cmpsb
lea
aas
push
movb
mov
dec
insl
scas
jle
cmpsb
repnz
stos
mov
movsb
push
andb
out
xor
hlt
xor
lock
out
add
and
fwait
mov
add
push
or
pusha
adc
lahf
mov
xor
shll
rclb
cmp
fnstcw
inc
xlat
push
movsb
xor
addl
mov
xor
test
mov
sarb
add
lds
jle
jnp
repz
repnz
aad
pop
add
mov
dec
xchg
lock
push
jae
xchg
test
enter
stos
mov
push
in
sarl
aaa
test
pop
ret
push
lock
es
and
lret
repz
and
enter
add
and
adc
repnz
mov
cmp
je
fidivrs
pop
iret
fldenv
xchg
jns
xlat
pop
jbe
gs
dec
cltd
pop
xchg
jno
movsb
xchg
sbbl
pop
xor
inc
xchg
ficoml
pop
push
aad
inc
je
gs
push
xchg
inc
pop
gs
or
xor
aad
popa
ljmp
dec
cmp
mov
subb
jl
sub
insb
mov
pop
cmp
push
leave
shlb
jnp
mov
xchg
push
stc
jmp
mov
cmc
pop
scas
xchg
jp
push
arpl
inc
roll
aam
adc
out
inc
sbb
aaa
xchg
fcmovnbe
add
nop
push
lock
push
insl
mov
sub
subl
jns
ret
dec
out
addl
jg
pushf
int
cmp
lea
add
push
out
rcrb
push
int3
dec
mov
push
je
jge
jle
jg
rorl
fiaddl
cmp
cmp
push
sub
jg
adc
int
or
mov
in
jmp
fcomip
xchg
aaa
test
cltd
mov
test
jmp
fwait
inc
add
jnp
pushf
inc
enter
jle
stos
inc
cmp
popa
add
incb
inc
cmc
mov
dec
add
sub
adcb
scas
mov
lea
lock
inc
dec
adc
jns
test
push
push
cmp
push
xor
addr16
insl
icebp
aad
sub
std
cmpsb
sbb
xchg
inc
test
jns
jo
push
jg
mov
and
bound
or
ja
sbbb
push
cmc
pop
sbbl
sub
ds
test
xchg
je
insl
jnp
push
aam
sbb
dec
cltd
jge
push
push
add
inc
je
xchg
xor
jns
sahf
cmpb
cli
xor
xor
mov
das
pusha
dec
mov
pop
aas
hlt
cmc
push
inc
pop
mov
sub
out
dec
fnstenv
movsl
ss
loopne
mov
in
aad
jmp
aam
shl
loopne
mov
xlat
addr16
movsl
adc
std
xor
scas
add
push
add
std
sbb
sti
mov
jbe
popf
mov
jno
imul
jnp
xlat
rclb
hlt
pop
test
or
std
inc
add
es
daa
sub
fyl2xp1
or
push
sti
lea
jle
jo
outsl
push
loope
jo
mov
mov
or
enter
xchg
sub
icebp
lods
test
faddl
in
sbbl
xchg
repnz
inc
dec
ljmp
gs
mov
and
jae
xchg
popf
imul
lock
push
adcb
xor
mov
pop
cmp
dec
popf
mov
popa
lret
dec
es
jge
pop
sbb
push
jecxz
in
in
andl
lock
stos
fsts
rcr
xor
addl
je
jnp
sbb
cmpsb
sub
jecxz
dec
mov
adc
imul
and
cmc
subl
ja
pop
push
jbe,pt
jl
sub
popa
xor
adc
loopne
scas
sbb
push
aaa
sar
and
filds
lods
pushl
pop
movsb
movl
xor
sbb
fbld
jl
es
mov
mov
push
xchg
mov
lea
xchg
in
les
clc
daa
test
fidivrs
jne
rcll
repz
je
lea
cmpb
cmpsb
inc
popf
mov
mov
icebp
in
xor
jg
jbe
fcmovnb
xchg
xor
jbe
lret
or
fwait
imul
popa
repnz
repnz
add
les
repnz
cmp
les
push
mov
adc
adc
data16
shrb
stc
int
fs
shrl
jns
push
jge
pop
test
pop
imul
cmpsb
cltd
ret
mov
add
es
les
stos
push
jge
xchg
pop
les
out
test
repnz
sarl
lea
outsl
push
loope
adcb
cmp
adc
dec
clc
aam
fcoms
les
movsb
adc
outsl
imul
hlt
cltd
lcall
sbb
imul
cmc
add
jge
push
mov
test
adc
inc
xchg
sbb
jle
push
adc
push
and
inc
icebp
outsb
out
daa
in
stc
orb
or
loop
ljmp
out
jmp
or
idivl
jbe
xor
in
out
xor
sub
movsl
and
push
dec
xchg
divb
das
mov
outsb
push
fs
jecxz
dec
cltd
mov
pmullw
cltd
lds
stos
jecxz
cmp
rcr
test
or
pop
pop
inc
fsubrs
ret
jnp
bound
test
jnp
xor
mov
test
addb
sarl
or
stos
jge
inc
cmc
rol
popa
sub
jae
outsl
mov
test
xlat
icebp
arpl
movd
push
adc
mov
and
test
adc
sbb
dec
popa
add
out
mov
pop
je
fdivs
adc
pop
lock
cmp
mov
out
push
mov
cmp
es
pop
xchg
jno
mov
in
and
push
shll
fnstenv
jecxz
dec
sahf
stc
stos
repz
daa
mov
pop
jp
dec
dec
loopne
xchg
stos
arpl
aad
and
push
inc
push
das
fcoms
es
push
fnstenv
leave
out
nop
pop
sbb
lahf
loope
xor
mov
js
mov
popa
push
test
cmp
pop
pop
sub
mulb
test
push
insl
cmp
or
push
xor
push
sub
je
mov
mov
test
ficoml
mov
fdivrp
imul
mov
pop
sbbb
std
insb
pop
add
popf
jge
test
rcl
jns
cmpsl
cmpsb
es
lds
jo
jg
mov
cmp
out
push
mov
idivl
push
push
mov
lock
in
addb
or
mov
rcr
js
enter
aad
push
xor
sbb
out
adc
outsl
insl
xorl
jmp
push
pop
lock
jo
push
jnp
iret
dec
mov
loop
mov
add
or
add
shrl
jnp
inc
xlat
dec
sbbl
add
repz
addr16
cmp
nop
mul
cmpps
outsb
int
movsl
jle
inc
std
mov
add
xor
xor
add
push
test
xchg
mov
in
sbb
lea
mov
pop
xorb
popa
mov
rcll
xchg
data16
xlat
sub
xorb
xchg
mov
and
xchg
stc
xchg
jecxz
jno
fwait
push
fs
pop
out
rorl
jb
inc
jae
push
add
add
mov
mov
xchg
pop
jge
dec
or
js
orb
shll
test
pop
enter
arpl
sti
jo
inc
cli
cmpb
jle
mov
mov
sub
mov
fdivl
dec
add
stc
cwtl
movsl
pop
xor
dec
sbb
cmp
add
gs
cmpsb
add
mov
imul
aad
outsl
loope
out
scas
adc
or
xor
mov
xchg
add
dec
cmp
sub
addr16
aaa
mov
and
pop
cmpsl
dec
xor
rcrl
push
sbb
scas
cli
popf
cmp
add
pop
rcrb
xlat
sbb
push
xchg
pop
cmp
stos
mov
rcrb
xlat
mov
jmp
orl
in
add
xbegin
mov
mov
jnp
ret
pop
inc
mov
mov
push
outsl
push
popf
mov
outsb
int
or
fwait
enter
mov
sarl
and
outsl
jo
orl
jmp
popf
movb
lret
mov
dec
out
xchg
push
outsl
jno
or
rep
mov
stos
adc
mov
or
pop
rep
cltd
mov
into
inc
sti
mov
gs
out
add
test
cwtl
out
je
jbe
cmpsl
cltd
pop
movb
sub
and
lret
gs
movsl
xchg
outsl
and
pop
xchg
test
orl
sbb
popf
xchg
xlat
jl
movb
scas
test
inc
jmp
repnz
cmp
lods
cwtl
or
adc
shll
test
sti
mov
les
adc
sub
and
cmp
aad
jno
ror
xlat
fld1
les
aaa
out
mov
in
pop
and
xor
xchg
ret
movsl
jae
sub
jae
and
lods
mov
add
mov
imul
xchg
out
mov
les
fwait
jmp
in
lods
iret
stos
sbb
subb
and
test
mov
mov
sub
cmp
push
loope
mov
int3
data16
dec
adc
jg
lds
mov
shrb
cwtl
xchg
pop
test
mov
cmc
test
aam
mull
bound
fstp
outsl
cmp
xor
push
out
add
fwait
sahf
cwtl
nop
mov
or
std
ja
mov
pop
rcll
jo
cltd
orl
adc
pop
cmp
sub
pop
test
cwtl
loop
pop
popf
adc
in
jmp
jae
inc
cmpsb
dec
jbe
or
dec
nop
jne
aam
cli
pop
stos
mov
xchg
push
dec
movsb
jp
cmp
pop
in
in
xchg
out
movsb
jg
jmp
dec
out
dec
cwtl
clc
icebp
mov
jo
sub
movsb
xor
nop
cmp
cmp
jno
push
cmp
jbe
jo
jge
and
cwtl
xchg
push
jle
jl
mov
inc
sahf
mov
test
cmp
das
or
mov
ja
lea
and
mov
push
sbb
jno
ds
mov
lds
repz
push
cmp
push
clc
sub
xchg
xor
es
ss
divw
mov
push
sti
sarb
xchg
sarb
cmpsb
sarb
jge
xor
outsl
xchg
add
or
xor
test
test
loope
sbb
js
push
xor
lea
push
aam
fsts
xchg
dec
lea
and
push
cmp
mov
push
jle
in
rcll
movsb
mov
aas
push
jle
jbe
or
xorl
mov
sub
jp
adc
loop
adc
fistl
mov
popf
inc
sbb
cmp
arpl
cs
cltd
pop
pop
int
in
sbb
std
test
add
int
cmpb
sti
sarb
push
sarb
test
cmp
xchg
adc
addl
inc
push
lds
xor
cmp
xor
loop,pn
mov
cmp
std
bound
es
lods
jae
decl
xchg
shr
idivl
cmpsb
data16
jbe
sbb
xchg
test
les
insl
ret
pop
dec
fprem1
rorb
fcomip
pop
jl
pop
jl
mov
push
pushf
int
add
icebp
jb
push
int
xor
jle
pop
push
aad
jp
test
sub
sub
xchg
push
lds
mov
stos
mov
jge
rorl
mov
fmull
shll
cmp
lahf
lock
cmpsl
popf
pop
test
push
jge
subl
xchg
mov
xchg
push
fwait
andl
cmp
inc
std
cmp
cmpl
test
inc
mov
push
xchg
add
es
sbb
xor
dec
into
std
loope
cmp
jg
movb
pop
mov
stc
jns
dec
xchg
loope
jno
mov
rolb
out
pop
ret
add
inc
cs
cmp
xor
rcl
stc
jge
movsl
lea
sub
repz
add
cld
xchg
push
add
scas
rcrb
xlat
sub
shl
fdivl
push
push
cmpsl
idiv
test
add
and
test
loop
xor
out
dec
or
jg
test
pop
and
lods
bt
jle
iret
cmc
aaa
pushf
testl
shll
inc
in
mov
testl
inc
addr16
add
push
mov
xchg
sahf
mov
jg
pop
std
cltd
scas
rcr
fidivrs
pop
cmp
xchg
cltd
hlt
sbb
push
mov
push
and
jge
mov
stc
cmpsl
jmp
std
cmp
imul
jns
mov
mov
ds
pop
or
and
fisttpll
gs
xchg
push
adc
add
xor
cmpsl
mov
arpl
inc
inc
xchg
pop
pop
rep
ret
jle
mov
sbb
jecxz
aaa
shl
lret
loope
sub
insb
mov
jns
sub
shlb
xor
dec
mov
jns
dec
das
scas
lea
cmp
and
ja
push
xor
dec
cli
mov
push
leave
cmp
push
jl
push
jecxz
pop
scas
test
add
dec
push
sbb
hlt
test
lea
hlt
pop
std
inc
roll
out
inc
mov
pop
add
adc
cld
aad
cmp
sbb
jo
lds
sarl
pop
jle
mov
cmpb
mov
and
pushf
and
or
jmp
or
jo
out
dec
jns
jl
lea
pop
mov
push
lods
pop
adc
push
les
jno
mov
in
pusha
pop
aaa
ja
mov
jmp
push
cltd
dec
es
into
ja
vmread
aaa
out
jae
xchg
idiv
cwtl
and
xor
adc
cmp
cmp
inc
les
push
gs
daa
sbb
jg
movsb
mov
sub
fsave
pop
add
je
jnp
sub
mov
imul
aas
clc
aam
sbb
dec
pop
iret
push
call
xchg
and
jne
fwait
or
mov
and
push
rcl
jl
insb
rol
mov
jnp
insl
mov
sbb
call
xchg
dec
or
iret
rcrl
xor
xor
pop
sbb
push
fcmovnu
mov
add
adc
mov
inc
idivb
xchg
mov
lea
insl
pop
orb
add
sahf
jne
icebp
negl
fucomi
outsl
lods
shlb
jno
stos
repz
clc
shlb
sub
out
push
les
stos
sub
mov
push
fldenv
inc
dec
add
xor
fsub
pop
aas
push
mov
dec
ret
les
jno
imul
clc
cltd
nop
retw
cmpsl
xchg
aad
out
or
aaa
in
cmp
pop
dec
sbb
or
fildll
out
mov
mov
pop
cmc
adc
jo
in
ficoms
xchg
aad
adc
ficomps
mov
ret
test
adc
repz
fbld
test
popf
push
xchg
fstl
and
push
and
fisubrs
xchg
mull
inc
testb
int
cmp
fwait
cmp
dec
sbb
inc
int
cmc
cmp
sbb
xor
xchg
jecxz
mov
stos
in
jno
test
lods
xor
lods
repnz
outsb
rcll
roll
ss
push
ret
jge
xor
xchg
jbe
sbb
xor
jecxz
decl
mov
push
dec
xor
mov
movsl
sbb
cmp
and
pop
adc
sbb
push
mov
fwait
xorl
cwtl
add
mov
andl
out
and
gs
jg
add
icebp
rol
mov
je
mov
xchg
sbbl
pop
into
push
dec
shl
ret
and
or
mov
stos
aas
mov
dec
hlt
enter
ret
add
push
out
pop
mov
pushf
mov
add
lock
iret
jae
insl
adc
cmp
cmpsb
or
repnz
popf
hlt
mov
outsl
daa
cltd
outsl
shll
cmp
pop
mov
and
inc
jne
arpl
inc
or
jae
es
stos
sbbl
shl
add
es
jmp
jecxz
loopne
add
jp
fists
jb
or
fsubp
push
fldt
mov
aam
cltd
add
jae
inc
sahf
inc
scas
mov
stos
cmp
mov
mov
ljmp
or
cmp
popf
jmp
push
and
movsb
sub
jae
ror
cwtl
fidivl
popf
aad
or
ds
jno
shlb
mov
gs
mov
repz
jge
xchg
add
test
aaa
lea
hlt
adc
stos
shrb
inc
stos
sahf
lock
test
mov
cmp
scas
fbld
mov
cmp
pop
xchg
and
sti
cmp
stos
add
mov
adc
andl
adc
std
mov
gs
push
push
aad
cmp
push
push
xor
mov
cmp
adc
andl
std
adc
sbb
ljmp
cmpb
sbb
in
leave
rolb
mov
outsl
sbb
sub
shrl
unpckhps
adc
inc
xchg
jo
and
mov
stos
add
xchg
jbe
lret
jae
mov
stos
xlat
push
pop
movsl
sarb
iret
push
insl
xchg
lea
sbb
pop
mov
mov
xchg
pop
mov
sub
into
ror
add
and
pop
cmp
sti
aas
pop
jnp
dec
cltd
jae
lret
test
imul
cld
jnp
test
cmp
and
test
dec
pop
repz
ljmp
sbb
pop
aad
mov
js
mov
sub
jo
mov
xchg
xorb
stos
lcall
sahf
cld
pop
test
xchg
mov
or
fs
int
or
popa
lea
cmp
cltd
or
jns
pusha
jo
jle
mov
jnp
ret
cmpb
into
cli
pop
or
xchg
rcll
and
cmpl
out
outsl
sub
movsb
movsb
lock
mov
adc
imul
cmc
test
xor
ss
mov
hlt
mov
xchg
sbb
mov
adc
dec
insb
push
icebp
pop
jb
faddl
inc
mov
aas
jne
hlt
les
push
jo
cmpsb
jnp
xchg
and
stc
push
push
scas
xchg
xor
xchg
jge
jbe
dec
mov
lds
fwait
add
add
cmp
sarb
pop
dec
int3
jge
pop
mov
scas
cs
adc
ret
push
jle
jle
cmp
inc
jns
movsl
jge
scas
push
ret
or
movsl
sub
lret
dec
add
xor
push
hlt
ret
sub
and
scas
jo
xchg
add
xchg
pop
dec
clc
dec
addr16
mov
sub
sti
dec
outsl
in
movsl
and
hlt
movsb
jge
jge
in
sub
mov
jns
push
dec
and
and
out
and
repnz
icebp
push
das
cmp
jo
aad
xor
push
xchg
mov
test
cmpl
xchg
mov
aas
or
lahf
fsubp
mov
jmp
shl
ss
hlt
test
pop
or
adc
out
stos
insl
cmc
mov
cmc
int
lea
movsb
xchg
rcrl
imul
jno
jge
addr16
or
sub
cmp
or
pop
lods
sub
sbb
dec
inc
std
mov
scas
dec
leave
adc
sbb
mov
cmp
icebp
xor
cltd
shrl
xchg
jp
inc
sbb
or
dec
and
lsl
hlt
stos
jge
cli
sub
mov
jmp
dec
adc
sub
cmp
pop
xchg
add
xor
jns
xchg
mov
jecxz
lea
lret
loopne
out
xchg
cmp
dec
fwait
xchg
outsl
subb
lea
lea
ds
mov
daa
xor
add
push
jns
insb
mov
data16
or
sub
enter
xlat
or
cmpl
imul
sti
push
cld
add
scas
mov
in
loop
push
push
outsl
jnp
push
arpl
push
adc
cmp
add
stos
jg
or
int
rorb
xchg
test
cmp
dec
cmp
gs
add
leave
das
cmp
xchg
imul
lock
push
je
test
out
movb
jecxz
cmp
pop
ffreep
xchg
lahf
cs
and
subl
pop
ss
fsubl
cmp
idivl
and
push
jl
out
xchg
imul
insl
mov
jo
xchg
mov
mov
xor
das
or
or
adc
add
inc
orl
jle
sbb
add
mov
push
jecxz
inc
shll
idivl
neg
xor
out
cmpl
popf
xchg
enter
sub
addb
jno
jg
inc
or
les
adc
aaa
mov
and
into
das
in
pop
xchg
mov
stos
xchg
jne
xor
dec
adc
jle
inc
mov
adc
add
xlat
scas
jmp
aam
or
lret
mov
xchg
xchg
xor
add
out
rorl
lea
or
bound
insb
icebp
stos
das
mov
out
sbb
sbb
cmp
movsb
lods
repz
rolb
mov
nop
inc
xchg
push
dec
sub
lret
roll
jmp
pushf
push
push
bound
daa
xchg
in
aam
out
aaa
adc
out
mov
mov
popa
pop
imul
push
push
jnp
jo
push
dec
jno
mov
jge
mov
xlat
scas
xor
orb
xor
mov
xchg
fwait
sbb
sub
dec
pushf
imul
iret
shrl
bound
outsb
sbb
adc
pop
push
xchg
push
ljmp
test
push
lods
mov
inc
add
lods
filds
test
inc
mov
mov
adc
scas
popf
sbb
adc
aas
fsts
js
jo
jns
cmp
shrb
jp
add
fucomip
pop
loop
pop
gs
push
push
xor
sarb
xchg
xchg
and
xor
insb
mov
insb
cmc
fwait
cmp
lock
push
cs
loope
into
call
inc
lods
frstor
pop
clc
push
nop
cwtl
mov
and
mov
jg
sbb
rolb
push
pop
popa
sub
pop
pop
out
sbb
nop
adc
repnz
pop
cmp
movsb
cmp
std
and
sub
or
test
addb
rcrl
ljmp
xor
subl
std
sti
mov
mov
in
dec
sub
mov
xchg
sub
inc
mov
out
inc
xor
push
sbb
shll
xchg
fimuls
push
in
xchg
xchg
inc
and
roll
add
pop
insl
mov
jnp
out
pop
orl
mov
fsts
jmp
cmc
fistpl
push
jo
cmc
xchg
in
fs
mov
fdivrp
cmp
stc
adc
adc
jecxz
mov
jns
or
inc
popa
mov
mov
mov
es
es
adcb
repnz
ficoms
rolb
inc
decb
dec
xor
xlat
adc
cli
std
test
xlat
mov
mov
mov
pop
cld
dec
hlt
cmp
pop
out
pop
mov
jl
mov
jns
adc
dec
cld
jns
cli
aaa
mov
jbe
or
lcall
push
sub
iret
or
int
stos
jns
mov
in
jno
loopne
mov
insb
aaa
or
inc
pop
adc
aas
mov
cmp
push
das
mov
cmpsl
gs
out
rcl
es
sbb
cmp
jbe
jae
push
pop
ds
test
stos
lcall
pop
pop
or
std
out
int
cmpl
shll
aaa
pop
aad
jl
hlt
xor
xor
sahf
lcall
pop
lock
push
cmc
xchg
test
repz
adc
inc
xchg
jae
xchg
test
addr16
cmpb
sbb
cmp
mov
pop
jg
lcall
mov
ss
jo
sbb
aad
loope
dec
or
ss
incl
test
mov
and
mov
inc
mov
cmc
pop
push
xchg
cmp
pavgw
mov
scas
in
sub
push
out
test
test
lcall
adc
cmp
add
pop
aad
rcll
or
cmp
icebp
fsubr
sub
xor
pushf
sbb
scas
or
fsts
xchg
push
fcompl
orl
into
push
and
sbb
test
adc
sbb
das
inc
xor
repz
sti
xor
rcr
jle
fisttpl
jecxz
outsl
and
or
xor
cmp
jle
dec
idivb
fwait
xor
sbb
push
in
add
lods
iret
mov
jno
push
cmc
fnstcw
ficomps
dec
lret
pop
out
jp
cmp
adc
vpaddw
jno
inc
jae
inc
rorl
dec
sub
push
xchg
mov
repz
aad
xchg
adc
les
repz
xchg
xchg
stos
cltd
add
cmp
dec
add
mov
fistps
mov
mov
rorb
add
cmc
push
jo
cmp
hlt
aas
aad
add
and
jne
adcb
jbe
adcl
mov
data16
iret
push
adcl
cmpps
mov
out
stc
movsl
aas
push
pop
push
dec
or
add
mov
icebp
or
jno
jae
loopne
jmp
ss
iret
aas
add
pop
mov
and
dec
xor
nop
jge
aam
shr
sub
xchg
mov
subb
xchg
fcomps
mov
jo
cmc
mov
mov
cmc
dec
stos
ds
sbb
mov
jg
loope
inc
loopne
mov
daa
xor
idivl
push
inc
add
push
sub
sbb
subl
add
mov
test
aad
push
repnz
repnz
jns
sub
stos
push
inc
inc
jbe
rcl
in
aas
hlt
sub
les
mov
pop
ljmp
xor
fwait
cli
cmpsb
jle
sbb
pmuludq
popf
lea
sbb
js
cmpsl
add
add
cmp
dec
stos
cmp
inc
jge
cmp
test
sbb
fistps
das
pop
adc
add
cmc
push
sub
lret
and
push
cmp
pusha
jmp
jg
aad
sti
adc
mov
adc
push
fwait
sti
push
xchg
cmc
dec
popf
xchg
pop
xor
inc
cmc
insl
test
aam
ss
addb
adc
jge
lcall
adc
sub
scas
hlt
inc
insb
jl
adc
xor
mov
mov
mov
add
adc
ret
pop
inc
sbb
cmp
test
cmpsl
cwtl
push
icebp
adc
push
push
out
push
mov
int3
movsl
loope
xor
loopne
lock
popa
aas
push
xor
jae
frstor
sub
jp
cli
pop
jp
jmp
je
push
adc
mov
cmpsb
dec
aad
popf
mov
ficompl
dec
arpl
mov
test
or
test
mov
lds
dec
out
pop
pop
sbb
inc
clc
xchg
xor
les
fildl
cld
mov
fsubrs
jle
mov
stos
mov
js
cmp
jge
sub
aaa
pop
js
add
out
pop
pop
jge
xor
dec
mov
int3
inc
xor
adc
dec
dec
test
not
in
cmp
and
pop
iret
test
pop
call
jo
fwait
jge
xchg
test
movsl
dec
fsub
cmpsb
inc
fwait
dec
or
popa
jnp
int
mov
push
mov
sbbl
xchg
lahf
sbb
xor
ja
out
push
ffreep
push
pop
xchg
xor
adc
xchg
aas
xchg
mov
sti
and
stos
push
or
cltd
divb
jl
lea
mov
dec
sbb
cltd
int
les
out
in
xchg
test
rcrl
stc
fwait
push
stos
xor
ret
out
ss
push
int
aad
bound
cmp
and
push
cld
jle
lret
xor
adc
mov
jmp
call
iret
clc
mov
cmp
in
test
jmp
in
push
pop
mov
aad
lock
mov
jb
std
and
add
jns
lcall
cmp
mov
mov
pop
cs
test
push
ret
les
jae
iret
insl
dec
inc
pop
push
je
dec
xor
mov
xchg
cmpsl
cmp
imul
xchg
xor
adc
les
add
push
icebp
fadds
inc
push
test
sbb
int3
push
xor
sub
add
mov
inc
shl
jge
and
pop
push
jp
and
push
jns
lahf
jle
mov
jl
add
icebp
xchg
xor
icebp
shl
adc
xor
fcmovnu
jl
dec
push
sahf
test
pusha
push
xchg
inc
xlat
sbb
sbb
lds
lcall
dec
dec
jno
jns
shrb
sub
popf
xorl
adc
or
aaa
jne
jns
out
sub
add
in
cmp
rclb
mov
fldenv
aaa
sbb
addr16
mov
cmp
pop
popf
and
aad
lcall
inc
jbe
mov
mov
data16
repz
inc
mov
lea
inc
push
pcmpgtd
in
pcmpeqd
insl
adc
aas
add
repz
dec
push
cwtl
jnp
xchg
scas
pusha
dec
popf
jg
cmpsb
lcall
jb
mov
popf
pop
pop
ljmp
mov
cmp
push
ret
xchg
xchg
pop
mov
arpl
fstl
scas
pop
subl
xor
jo
test
xchg
lret
outsb
xchg
mov
insb
inc
add
ds
icebp
mov
mov
mov
jl
mov
repz
adc
mov
dec
addr16
in
lret
leave
lcall
adc
mov
pop
outsl
dec
cli
jnp
dec
push
outsb
xchg
push
pop
mov
cmp
mov
jnp
adc
cmpsb
xchg
mov
cmc
inc
ds
xchg
lahf
or
jns
in
int
mov
cmpb
lcall
push
rcll
gs
ds
adc
jno
lds
pop
ror
inc
push
xor
cmp
ljmp
insl
movsb
int
vandnps
jno
push
dec
add
jg
adc
sahf
pushf
subl
jo
in
iret
addr16
mov
js
icebp
sbb
jl
xor
mov
mov
jb
xor
lods
adc
ds
addr16
xor
pop
lds
stos
fisubl
jecxz
pop
orb
test
aaa
lods
sarb
divl
inc
xchg
std
add
jb
xchg
imul
aas
call
adc
in
cmp
leave
xor
repnz
nop
aas
lock
outsl
pop
enter
cmp
fwait
jle
inc
insb
adc
dec
cmc
mov
and
push
std
in
pushw
inc
mov
jl
xor
shrb
jno
cwtl
jge
add
sub
loope
dec
sbb
enter
sub
or
xor
cs
icebp
pop
dec
dec
jnp
gs
cmpsb
fidivrs
cmp
jo
test
inc
pop
fisttps
mov
fs
cltd
movsb
inc
cmp
ficoml
fisubl
test
jecxz
sbb
test
xor
pop
pop
loope
shlb
fcoml
out
ss
stc
xchg
and
leave
ss
adc
mov
sahf
iret
mov
ljmp
leave
aad
mov
xchg
cmpl
mul
aad
stos
into
mov
popa
or
jmp
sti
loopew
leave
xchg
xor
icebp
dec
pop
test
out
ss
mov
aaa
adc
jno
ret
and
push
test
insl
cmp
insb
push
int
mov
icebp
xor
jnp
shlb
in
adc
jmp
jne
xchg
dec
xor
loope
push
movb
aas
add
out
lret
xor
jl
dec
sub
push
pop
pop
sahf
push
movsb
add
test
jecxz
popa
jecxz
aad
add
cmp
and
jge
inc
push
test
adc
faddp
dec
outsb
push
mov
and
jnp
jge
pop
aaa
addb
fisubrs
in
negl
adc
test
mov
dec
jmp
ljmp
outsl
add
lret
jmp
inc
std
push
sahf
mov
jl
loopne
aaa
xor
ss
add
pop
pop
fstpt
sbb
lds
rcll
dec
movsb
cmpsb
mov
add
mull
test
pop
sarl
pop
cmp
dec
das
push
push
jbe
xchg
jle
enter
pop
push
cs
xchg
orps
in
fcoml
nop
cltd
fcoms
sub
mov
lret
pop
mov
scas
xchg
int
lret
adc
jge
xchg
loop
aam
push
icebp
stc
and
je
pop
fwait
nop
sbb
dec
pop
pop
lcall
push
jl
xchg
dec
xor
lea
sbb
add
fwait
imul
sti
push
in
adc
dec
sbb
jns
jge
movsl
pop
shll
bound
mov
sub
cmp
sarl
inc
xchg
and
sub
rcr
jecxz
push
insl
cmpsl
popf
cmp
lods
je
xor
cmc
xor
push
mov
xchg
mov
xor
mov
xlat
push
push
jl
fs
mov
xor
sub
jo
cmpsl
cmpsb
mov
add
and
incl
test
daa
sub
aas
repnz
inc
mov
rorb
jo
clc
adc
notl
test
push
aas
aad
in
rcll
cmp
or
mov
notb
inc
hlt
and
nop
repz
mov
mov
ret
inc
icebp
jmp
cmpsl
shlb
movsl
sbb
or
mov
stc
iret
adc
jns
imul
xor
loope
aam
movsl
shll
xor
imul
cmpsl
orl
fistps
leave
mov
in
add
sar
jno
jns
fs
fbstp
cmp
cmp
xchg
sbb
jg
add
scas
xchg
pop
push
xlat
ljmp
cmp
adc
pop
clc
xchg
int
movb
imul
shrl
fbstp
jmp
aam
adc
ret
xchg
dec
or
pop
popa
lods
and
dec
jg
scas
mov
test
xchg
test
sbb
inc
push
mov
jmp
fcmovb
dec
aas
mov
sbb
mov
aad
rorl
mov
punpckldq
cmc
cmp
rcl
loop
mov
xchg
icebp
inc
stos
push
xchg
inc
out
jae
shlb
jmp
int3
dec
lret
mov
cmpb
lea
lock
in
cmp
int
cmp
in
xchg
gs
clc
mov
sub
jns
sahf
out
xchg
xchg
cli
sub
or
push
fnsave
mov
and
mov
add
mov
xchg
jae
xchg
pop
mov
loopne
xchg
nop
xlat
cmpsb
notb
shl
iret
jmp
cld
bound
jnp
cwtl
push
aaa
scas
cltd
fwait
jl
int3
lds
push
addb
fsubs
add
jg
or
lds
andl
repz
mov
pop
popf
sbb
movsl
jns
sarb
dec
insb
fildll
mov
mov
jo
mov
xor
stos
push
jo
jnp
fwait
jg
mov
and
rclb
es
enter
iret
stos
mov
lods
jge
add
jmp
sbb
or
adc
add
jecxz
aaa
mov
fwait
inc
jae
out
sbbl
iret
dec
das
arpl
jo
insb
lcall
repz
scas
or
push
xchg
push
insl
fwait
and
stos
in
mov
xchg
out
das
inc
mov
push
das
icebp
xchg
add
nop
sbb
aaa
je
insb
mov
addl
pop
sarl
mov
xlat
fistpl
jnp
add
pop
pop
stc
sti
xor
pop
mov
sarl
shlb
test
mov
test
jbe
lea
cmp
xchg
stos
lock
testb
cltd
cmp
lcall
mov
and
je
test
push
jbe
or
fdiv
cvtdq2ps
adc
sbb
cmp
cwtl
jns
outsl
movsl
inc
adc
mov
insb
aam
dec
sahf
and
mov
jg
test
lds
xchg
stos
jmp
ds
xchg
std
mov
popf
ds
push
dec
xor
repz
popf
push
addb
mov
int3
out
mov
test
cmc
ret
test
in
adc
cli
jbe
jnp
and
or
or
out
xor
pop
xorl
jae
clflush
cmp
cmp
arpl
pop
pop
iret
stc
outsl
push
cmp
mov
pop
dec
pop
add
adc
push
lahf
outsl
scas
sbb
add
mov
cmp
jae
mov
pcmpeqd
jno
pop
pop
xchg
cmpsl
dec
faddp
sahf
sbb
add
jmp
mov
call
jmp
push
mov
jae
popa
leave
dec
ljmp
outsl
out
repz
or
push
mov
rcll
pop
xchg
ss
cli
outsl
sahf
rcrb
fadds
mov
sbb
mov
cmp
stos
in
cli
dec
daa
mov
aad
pop
xor
test
test
mov
aaa
ja
nop
cmp
cmp
insb
imul
inc
cmp
jge
out
fistl
push
pop
jb
push
gs
aam
stos
xor
out
jno
dec
push
push
loope,pn
xchg
je
mov
sar
or
je
cmpb
mov
out
push
add
and
cmpsl
dec
jp
xchg
mov
xor
and
in
cwtl
xor
movb
sbb
mov
inc
mov
mov
imul
adc
xchg
add
inc
push
lock
fwait
mov
push
es
shll
adc
jnp
stos
in
inc
rcrb
add
fcomps
jg
fistpll
jge
rolb
jecxz
or
ret
inc
push
out
sbb
imul
bnd
push
stos
les
test
mov
pop
hlt
pop
outsl
notb
or
cli
pop
xor
scas
icebp
test
mov
mov
popa
fmuls
xor
push
test
mov
sbb
cmp
mov
notb
mov
ret
jge
roll
std
idiv
jle
add
jno
inc
incb
xor
stc
inc
cmp
adc
dec
movb
ret
cli
aad
and
movsb
add
push
stos
jle
cwtl
sbb
std
out
add
xor
gs
out
push
jns
xor
inc
cmp
ficompl
mov
sqrtps
cli
hlt
push
xor
out
out
adc
je
je
push
dec
ror
in
and
dec
fucomip
inc
xor
mov
mov
fidivl
lcall
adc
dec
adc
sbb
cmpsb
shlb
xor
jecxz
sbbl
repz
mov
std
pop
rorb
dec
test
sbb
inc
mov
fistl
add
add
out
jnp,pt
stos
out
ret
repz
mov
lcall
add
ret
jne
and
mov
push
and
rclb
fcmovb
dec
lock
sbb
std
dec
mov
pop
cmpsl
iret
jno
jge
adc
xlat
push
mov
mov
mov
inc
mov
push
std
jbe
xorb
cmp
jno
imul
jbe
dec
loop
add
push
js
je
add
fwait
jb
aaa
push
pop
repz
or
mov
sub
xor
jl
mov
ja
scas
repz
and
cmp
test
insb
jnp
lahf
jmp
sub
sbb
xchg
sub
jp
rcrl
mov
fsubrl
dec
iret
mov
or
and
insl
jle
dec
mov
jb
sub
imul
mov
sub
and
push
xlat
jb
cltd
inc
icebp
ficompl
daa
icebp
dec
mov
or
pop
xor
xchg
lods
popf
std
inc
cmp
inc
pop
mov
push
lods
addb
ja
fs
add
div
xor
jge
xchg
and
mov
inc
fstps
inc
and
ret
fwait
stos
sbb
es
jle
movsl
adc
xor
jae
lea
sub
pop
les
xchg
jle
stos
lret
add
xlat
push
xchg
cli
bound
xlat
jo
xchg
xchg
mov
cltd
leave
mov
push
and
shlb
shll
shrl
aad
arpl
xor
xor
add
jo
and
out
adcl
add
stc
push
pop
stos
popf
sahf
sub
add
sahf
inc
ds
xchg
cwtl
mov
mov
push
cmc
sbb
repz
mov
mov
sti
pop
in
jns
aas
dec
hlt
rclb
pop
jo
mov
sbb
add
add
inc
pop
jecxz
shrb
xchg
fstps
push
add
sahf
sbb
xchg
fcmovb
cmp
sbbb
loopne
test
jnp
rcrb
push
pop
clc
jnp
or
lret
pop
test
cmpsb
add
pop
add
scas
pop
pop
sub
out
sub
xchg
adc
dec
xchg
and
das
into
push
or
pop
mov
jb
cmc
in
pushf
mov
and
push
cs
pop
cmpsb
sub
mov
or
add
pop
pop
xor
std
mov
clc
push
hlt
xchg
pop
jno
daa
test
add
jbe
dec
movb
enter
out
popf
insl
addr16
push
je
lahf
mov
lods
sti
mov
cmp
mov
pushf
cmp
xchg
sub
cld
in
pushw
int
aad
mov
pop
add
push
cmp
xchg
stos
xchg
pushf
inc
jecxz
jl
sti
lea
popf
inc
data16
insl
push
cli
cmp
or
mov
outsb
and
or
pop
cmp
into
jae
sub
and
aas
sbbb
add
pop
jnp
shlb
and
pop
repnz
fcomip
inc
leave
push
mov
xor
das
push
fwait
jge
mov
jns
push
inc
fucom
xor
insl
mov
dec
sbb
xchg
sub
les
pop
pop
mov
pop
xchg
lret
inc
jl
jo
lret
inc
iret
decl
and
sbb
loopne
mov
call
icebp
mov
and
popf
fidivrs
push
sbb
leave
aad
push
sbb
es
cli
stos
test
xchg
and
pop
insl
ljmp
ja
pop
xchg
jp
ds
cmpsb
dec
test
iret
push
int3
sbb
sbb
sub
fcompl
fucomp
sahf
dec
xchg
push
jge
sarb
imul
aad
push
out
into
xchg
mov
xchg
aad
cwtl
ljmp
mov
jmp
divps
icebp
aam
mov
or
pop
jp
xor
bound
lea
dec
gs
push
repz
cli
mov
add
out
ret
add
mov
and
pop
lea
movb
xor
shl
les
out
movsb
inc
mov
repnz
cli
into
int3
icebp
adc
cld
mov
sbb
mov
in
into
not
or
adc
repnz
repnz
ja
fisubs
ljmp
mov
addr16
xor
popa
in
xor
mov
fildl
into
ret
adc
add
and
add
push
fisubl
add
xchg
ds
dec
test
insb
xor
movb
mov
imul
sbb
fwait
cmp
daa
add
jne
negl
cmp
push
test
cmp
xorb
inc
jo
je
lea
std
sbb
xchg
mov
push
jle
test
clc
into
jl
xor
cs
out
cmp
stos
test
sti
fldenv
jae
hlt
aas
xor
mov
repnz
dec
test
mov
lea
jno
jbe
mov
ret
daa
out
inc
rolb
inc
xor
push
push
rorb
adc
jle
sbb
and
test
xor
cmc
pop
test
std
inc
test
or
fnsave
fstl
out
xchg
sub
mov
out
sub
lds
or
test
setge
and
lea
loope
fstl
jle
jg
arpl
mov
jb
push
std
lret
push
mov
data16
out
outsb
push
or
ss
repnz
push
sbb
jle
dec
jmp
popf
sbb
jns
jnp
jmp
test
inc
add
adc
push
add
stc
sti
push
test
insl
out
jp
stc
push
cmp
pop
jge
xchg
adc
lds
mov
je
insl
mov
notl
xor
out
je
fsincos
lcall
in
stos
pop
icebp
sub
and
pop
mov
orb
add
fstl
push
gs
jae
xchg
xor
cmpsb
or
pop
pop
bnd
inc
jge
rclb
adc
add
jge
lret
ss
jmp
mov
mov
pop
push
sub
nop
cmp
push
cmp
fdivl
pop
ja
imul
jg
cmpsl
shll
xchg
icebp
rcr
imul
sbb
sub
les
enter
mov
aad
in
jns
in
or
inc
iret
das
jge
jb
push
jae
xchg
jge
or
push
dec
je
jno
jae
dec
iret
mov
push
cmp
mov
hlt
sub
push
addr16
arpl
push
jno
and
cmp
dec
pop
fwait
push
push
push
popf
pop
imul
xchg
xchg
cmc
sub
adc
mov
ds
adc
dec
cli
jle
cld
or
rolb
int3
xchg
or
xchg
mov
test
cmpb
push
cs
push
sub
sub
ljmp
add
ss
rclb
jge
ficompl
jb
push
orb
insl
jge
test
add
mov
pop
cld
pop
add
lret
in
inc
test
inc
cmp
push
out
jno
push
pop
icebp
fdiv
decb
shll
in
lock
test
cmp
push
rcr
add
push
adc
push
push
dec
iret
subb
xorl
cli
test
push
into
pop
in
jb
xlat
mov
sub
xchg
arpl
mov
icebp
jo
mov
jne
andb
clc
jbe
mov
or
mov
pop
aas
sbb
push
lret
xchg
call
cmpl
sbb
dec
movsb
mov
rcrb
das
xor
ds
test
xor
dec
push
popa
or
out
mov
jge
test
testl
rcrb
add
or
clc
sub
jo
adc
mov
popf
adc
push
movsb
arpl
adc
mov
and
in
jo
xchg
aaa
jns
pop
add
xchg
out
js
xor
inc
test
fdivp
dec
xchg
fists
dec
lret
in
push
test
inc
inc
jle
scas
cmpsb
cmp
hlt
push
je
push
xchg
jbe
xchg
inc
mov
cltd
cmp
vpmullw
fcompl
test
xchg
popf
fisttpl
hlt
or
mov
aad
and
cwtl
repnz
hlt
jl
scas
shlb
adc
inc
loope
repnz
icebp
and
in
std
ja
push
inc
rcrb
stc
in
test
pop
enter
data16
pusha
adc
pushf
mov
std
xor
cmp
jle
xlat
xor
stos
movl
xchg
movzwl
inc
mov
stos
add
mov
xor
cmpsb
nop
repnz
insl
pop
sahf
js
cs
push
subb
push
push
jbe
lar
mov
ja
sbb
mov
add
jp
gs
cmpsl
test
fsts
sarb
aaa
stos
push
fucomip
dec
test
jnp
sarb
aam
gs
xchg
out
sbb
xchg
popf
fbld
ds
ror
jge
fwait
sbb
cmp
or
lods
mov
xor
mov
push
xlat
or
dec
pop
jnp
outsl
and
cmp
add
outsl
fstpt
cmp
pop
sub
sbb
shl
jge
out
jae
push
ret
aas
insl
shlb
out
in
pop
or
hlt
dec
adc
dec
aad
or
pop
int
sbb
push
mov
data16
cli
lcall
cmpsb
daa
xchg
mov
pop
shll
inc
push
shll
jb
lcall
and
pop
rcrb
in
movsb
add
popf
sub
xlat
inc
mov
or
mov
les
lahf
mov
cli
test
test
das
les
push
cltd
push
sbb
out
or
jns
dec
pop
jns
inc
jno
mov
inc
add
lea
pop
dec
cmc
mov
scas
pop
lcall
or
mov
mov
push
cmp
xorb
mov
push
ja
or
test
pop
fwait
pop
or
mov
mov
clc
std
adc
orb
rcrl
int3
test
mov
pop
pusha
addl
dec
jnp
dec
call
aaa
cwtl
aaa
cltd
xlat
fwait
mov
fwait
insb
mov
xchg
cmp
popf
addr16
or
push
cmp
ljmp
daa
addl
lods
pop
or
fs
mov
scas
dec
mov
rclb
stc
insl
pop
cmp
lock
mov
stos
popa
mov
cwtl
stc
mov
test
mov
pop
mov
gs
shlb
sarl
sarl
pop
pop
jne
mov
push
sbb
or
div
inc
xchg
scas
mov
jno
cwtl
push
sti
outsb
repnz
sub
cwtl
xor
icebp
fdivl
mov
ljmp
mov
mov
subl
pop
cmp
imull
pop
iret
repnz
xor
shll
add
add
insb
in
movsb
jge
xchg
mov
mov
data16
cmp
mov
and
jle
mov
jle
mov
out
std
push
xor
test
push
idivb
xor
das
pushf
insl
xor
sbb
adc
out
mov
ss
push
arpl
out
subl
movsb
xor
inc
ss
mov
in
fisttpll
xchg
cmpl
lods
add
into
xor
push
mov
push
addl
out
or
xor
fidivl
pop
popf
pop
jge
mov
jb
xor
mov
or
mov
lods
pop
and
inc
test
mov
sub
iret
loop
cmp
test
rcr
pop
cs
sti
sahf
aad
mov
dec
or
xchg
xor
sbb
xchg
inc
rcl
inc
mov
fstps
movsb
pop
jle
pop
xor
jnp
iret
sub
int3
mov
adc
in
push
push
into
mov
cmp
adcl
andl
push
test
lock
push
cli
jl
mov
jmp
repz
sub
in
out
call
mov
loop
cmpsb
cltd
push
dec
leave
outsb
xlat
and
sbbb
xor
cmc
popf
jg
or
cltd
pop
inc
push
rorb
cmp
fldl2t
adcb
jno
cmp
jl
loope
fistpll
push
adc
xchg
mov
cmpsb
je
push
fidivl
int
xor
xchg
lds
lsl
xchg
and
aas
lods
out
psraw
mov
mov
popf
jl
xor
and
das
outsb
xchg
popf
mov
fmuls
nop
inc
sahf
mov
out
adc
xor
jnp
or
pop
and
movsl
mull
and
test
mov
pop
jecxz
inc
lcall
push
sub
into
bound
push
jg
fdivs
jns
icebp
mov
or
xor
outsb
in
adc
idivl
sbb
ret
push
dec
insl
xor
ds
push
mov
adc
dec
dec
pop
gs
movsb
iret
push
out
shl
mov
out
push
std
or
lods
imul
ss
xor
scas
cld
test
test
iret
out
test
icebp
imul
fsub
lcall
fs
hlt
test
or
dec
xchg
shrb
popa
xor
mov
aad
sti
add
inc
iret
lret
insl
sti
call
inc
dec
jecxz
jle
xor
rcl
xchg
hlt
pop
mov
dec
jle
mov
dec
fldt
add
clc
push
cmp
mov
cmc
jbe
pop
insb
jmp
int
scas
xchg
mov
push
mov
rol
xor
hlt
and
cmp
bound
jg
pop
sub
test
or
mov
je
push
sub
fsubrl
xor
je
cmc
push
sbb
sbb
xor
or
lock
clc
test
cwtl
and
je
xor
scas
push
lods
xor
repz
rolb
jno
pop
ss
cmpsb
ss
shrl
jp
aam
adc
bound
sub
or
mov
cmp
or
lcall
decb
xor
dec
xchg
push
jmp
lret
add
push
gs
jp
jg
add
or
popa
stos
lea
jge
adc
sbb
cmpl
and
xchg
jns
mov
jno
mov
lock
pushf
xchg
je
sub
ss
insb
adc
jno
and
hlt
fbstp
lret
lds
rcll
pop
jae
loop
stc
pop
in
repz
andl
sbb
stc
sbb
sbb
mov
lcall
sub
out
fstps
push
mov
mov
jns
cmpsb
ds
out
push
push
lcall
insb
mov
jo
les
in
add
dec
push
sti
ja
out
clc
mov
in
mov
out
mov
xchg
jbe
filds
stos
std
addr16
iret
sbb
jae
clc
popf
and
or
out
xchg
lahf
adc
mov
aam
dec
push
jl
mov
mov
jns
jg
mov
loop
mov
adc
arpl
test
nop
push
sub
ret
insl
iret
sti
xor
push
dec
test
or
repz
imul
inc
in
fidivs
shrl
popf
sub
outsb
pop
add
adc
not
pop
cmp
cmp
leave
mov
enter
popf
add
inc
jae
jg
mov
pop
jno
mov
push
sbb
test
jns
dec
hlt
pop
add
adc
les
bound
pop
dec
shll
sahf
int3
xlat
xchg
in
in
cld
stc
outsl
ja
loope
fwait
cmc
out
xor
cmp
push
add
jno
lds
cmp
add
jmp
mov
lcall
mov
out
fwait
loope
insb
push
inc
xchg
adc
push
or
gs
mov
xlat
hlt
xor
sbb
push
jb
sub
roll
add
movsb
jo
xor
daa
mov
push
cli
xchg
jge
je
cltd
flds
aad
ja
icebp
rolb
js
cmp
push
dec
inc
dec
icebp
scas
xchg
mov
sbb
in
iret
or
loope
fiaddl
std
pop
out
test
faddp
pop
aam
push
insb
movl
cmp
cmpsb
mov
mov
jne
jnp
clc
mov
lea
test
lea
test
lret
cs
xor
inc
inc
lret
add
adcl
jle
pop
sahf
in
jg
cmp
outsl
call
mov
xor
mov
jne
xchg
jns
sbb
adc
cmpl
or
mov
xchg
imul
dec
das
or
mov
ds
das
addl
stc
arpl
jp
fwait
nop
jmp
mov
add
mov
cmpl
aaa
sbb
cld
pop
call
jns
add
int
adc
xchg
and
cmc
add
xchg
mov
mov
enter
add
mov
iret
andb
fisttps
jae
jno
cmc
icebp
xchg
lcall
in
test
gs
repz
mov
data16
or
add
mov
shld
iret
lahf
inc
jnp
rclb
scas
jg
fstpl
bound
stos
mov
inc
lret
sbb
adc
outsl
cwtl
cld
pop
xor
clc
dec
mov
push
dec
cld
popa
pop
inc
sub
and
repz
ljmp
aad
xor
jecxz
stos
out
mov
scas
adc
xor
inc
cltd
sbbl
fnstenv
clc
sbbl
lods
and
and
gs
orb
cmpsl
push
mov
jo
fisttps
repnz
dec
in
jo
pop
jo
dec
nop
fwait
jns
cli
outsl
test
test
xor
test
shlb
sti
or
aaa
fsubrs
mov
and
or
mov
pop
repnz
lods
iret
aas
ljmp
pop
push
in
movsl
in
push
icebp
decb
loopne
xchg
and
and
push
cmpl
testl
mov
inc
dec
stc
jne
mov
es
test
scas
xor
xor
clc
xchg
xor
lcall
jae
and
sub
aad
movb
xchg
dec
cmp
push
inc
sbb
mov
movsl
pushf
aaa
mov
pushf
xor
adc
jge
xlat
inc
mov
sbb
and
and
push
lods
mov
lock
mov
lret
test
stos
add
in
pop
nop
push
mov
xchg
jae
aad
orb
adc
clc
add
icebp
push
and
pop
popf
jge
addr16
xor
push
fmulp
and
shll
ror
aaa
mov
es
xor
pop
movsb
cmp
ljmp
outsl
or
sahf
dec
adc
push
xor
jns
mov
test
and
push
int3
dec
ficoms
xchg
fwait
inc
mov
push
std
outsl
stos
int3
jns
jbe
idivb
adc
insl
cmpsl
or
push
mov
ja
push
inc
shrb
les
and
add
jl
and
mov
jge
test
add
or
jno
jmp
lahf
insl
inc
lods
xchg
or
rolb
stos
test
lret
mov
andb
pop
dec
movsl
test
cmp
push
jmp
mov
movsl
cmpl
js
out
pushf
into
sbb
or
ja
add
mov
sub
xchg
jb
cli
cmc
jo
les
out
add
jae
jg
popf
aad
sub
xor
test
or
fwait
mov
stc
cwtl
cmp
pop
pop
addr16
mov
jge
cmpsl
push
or
aaa
jg
hlt
fwait
xor
repz
sahf
adc
or
jnp
aas
push
rorb
inc
adc
push
pop
jmp
xor
xchg
out
inc
int
inc
xorb
ret
test
pop
repnz
sbb
sub
fistl
pop
notb
aaa
xlat
jge
mov
flds
jnp
je
jge
mov
repz
shll
cltd
jno
outsl
lock
test
and
or
test
or
insl
sbb
mov
push
adc
pop
outsb
ja
jbe
rcrb
xor
ror
lahf
inc
pop
push
push
rcrl
in
pop
subl
cmc
test
inc
pop
add
jle
pop
movsl
pop
mov
scas
ret
adc
add
jmp
out
jl
addr16
adc
xor
pop
aam
lea
jns
lock
lret
push
stc
rolb
rcl
loop
movb
cmp
add
xchg
arpl
rcl
pushf
scas
adc
aad
xchg
push
dec
shl
loop
jl
lods
imul
push
mov
pop
inc
stc
cmp
sbbb
dec
loop
movsb
xor
repnz
dec
mov
dec
rol
lret
rorl
in
cmp
fldcw
sbb
and
out
scas
xchg
xor
scas
cltd
or
sbb
xor
cmp
cs
daa
jl
cli
cld
and
jl
sub
das
sbbb
xchg
lods
out
jge
mov
cmc
lret
cld
jle
in
pop
add
lea
aas
out
aas
add
push
les
stos
cmp
xor
mov
lods
xchg
dec
pusha
addl
fwait
cltd
xor
and
jnp
push
inc
loope
adc
or
repz
ss
or
xchg
adcb
dec
xor
push
pop
push
gs
repz
orb
mov
or
xchg
sti
jl
inc
nop
rolb
add
and
xchg
jg
loope
push
sub
test
hlt
clc
les
or
inc
mov
ljmp
mov
xor
ja
sub
aam
cmc
push
aas
push
pop
fmulp
icebp
pop
shll
imul
addl
decl
divb
addb
ljmp
jecxz
push
fidivl
decl
add
popa
xor
cmp
data16
pop
lcall
inc
fdiv
mulb
sbbl
cmp
pop
lods
mov
popf
imul
mov
rclb
push
push
cs
jmp
pop
add
jae
insl
push
leave
xchg
mov
jge
setp
mov
pop
and
cmp
push
std
sbb
dec
dec
adc
sbb
mov
or
lret
gs
cmpsb
in
insl
adc
add
test
cmp
adc
test
icebp
cmp
lock
icebp
xchg
ss
pop
mov
cwtl
in
jl
xor
lods
daa
imul
and
js
push
scas
mov
inc
fmuls
or
xor
stos
xchg
sti
shr
pop
sub
mov
loopne
in
adc
pop
out
stc
sysret
gs
stos
mov
fbstp
stc
pop
inc
lcall
sti
mov
dec
mov
lea
rolb
push
iret
js
mov
and
and
add
xchg
inc
jmp
sbb
subl
adc
jg
inc
pop
dec
add
mov
jge
inc
sub
xor
test
insb
orl
jo
test
pmulhw
jae
xchg
mov
incl
add
sbb
cmc
cld
cmc
push
jae
pop
popa
addb
add
shrb
jmp
xchg
es
and
lods
push
jbe
fwait
sbb
mov
mov
popf
and
sub
fwait
jnp
repz
pop
sub
jnp
fmuls
jl
mov
sub
imul
ficoml
mov
and
test
outsl
jmp
icebp
xor
push
push
push
icebp
fwait
scas
stos
jge
dec
cs
mov
dec
sarb
cmp
push
pop
popf
pop
mov
sti
add
lea
or
mov
stos
repz
movsb
addb
push
pop
or
or
nop
mov
test
inc
jb
or
mov
jns
aad
ja
outsl
shl
shl
shlb
add
clc
push
jae
jl
popf
mov
xor
and
mov
sub
inc
jge
cltd
stos
ds
stos
dec
dec
daa
pop
fimuls
mov
push
mov
sub
cmp
mov
and
xchg
test
pop
jo
sti
fisubl
outsl
adc
mov
or
and
dec
sub
popa
dec
sarb
ja
jo
jmp
xor
das
cmp
mov
pop
int3
dec
adc
add
dec
ja
cwtl
out
loop
cmp
add
cmp
adc
insl
pop
cli
mull
out
xchg
ljmp
push
push
jecxz
imul
test
rolb
loopne
xchg
lea
icebp
gs
pop
mov
insl
adc
pop
or
aad
fwait
dec
pop
push
jmp
out
cmc
mov
pop
or
dec
rol
xor
movsb
mov
fwait
lock
pop
out
repz
das
data16
xor
dec
popf
adc
aad
pop
push
mov
dec
fld
mov
jp
idiv
shrb
insb
inc
pop
in
addl
jns
jnp
in
andb
mov
sbb
in
mov
sub
or
jb
jns
cmc
mov
out
adc
adc
adc
cmc
lea
mov
mov
fwait
aaa
test
and
jl
sahf
mov
cmc
xchg
inc
lods
mov
insl
les
and
aaa
shll
les
jo
test
lock
mov
dec
fidivrs
sbbb
repnz
or
fldcw
jae
fs
outsl
leave
movsb
ss
aam
pop
sarl
ss
sahf
mov
add
sbb
outsb
jecxz
aas
daa
cmc
sarb
stos
in
push
stc
cmc
test
mov
cwtl
sarb
ja
in
iret
xacquire
jo
fs
xorb
or
inc
mov
add
aas
mov
mov
or
outsl
xchg
test
xchg
xor
fistpl
sbb
xor
aaa
addr16
scas
xchg
jae
repz
xchg
nop
cli
stos
aam
ja
cs
cli
add
push
push
andb
dec
push
mov
xor
ja
mov
sti
jecxz
cs
push
jae
inc
lret
jg
popf
jae
xor
inc
lcall
pop
in
add
out
push
dec
loop
insl
out
mov
push
aas
repnz
jp
fimuls
add
cmp
imul
aam
cli
imul
sahf
sbb
je
sarb
inc
fadds
jecxz
insb
out
and
add
jo
xchg
add
lret
jg
fcoms
mov
outsl
fcomps
ds
mov
push
pop
push
pop
lods
icebp
addl
aam
jl
stos
mov
sbb
popl
fbstp
dec
test
inc
inc
mov
lds
inc
inc
leave
cld
sub
jge
mov
addl
adc
dec
ficompl
dec
xor
pop
testl
mov
outsl
addr16
mov
repz
xchg
loopne
add
loope
sbbl
push
jg
in
mov
imul
shll
insl
pushf
and
in
xor
push
je
mov
add
dec
mov
push
mov
lods
mov
or
or
jg
inc
jb
fwait
cmp
scas
push
out
dec
cmp
outsl
add
shlb
in
add
pop
outsl
push
jg
test
xchg
jno,pn
mov
movsb
cmc
mov
cwtl
mov
jecxz
xchg
rolb
stos
arpl
dec
enter
mov
in
push
scas
out
push
mov
sbb
mov
enter
jge
imul
inc
sti
lea
inc
movsb
pushf
mov
incb
sar
aas
loopne
inc
movsl
mov
adc
pop
push
add
hlt
out
xor
push
jns
je
jno
jge
test
push
pop
cmpsb
xchg
pop
add
xor
jne
jp
shll
sbb
imul
test
lods
push
sub
fwait
outsl
icebp
rolb
movsb
jg
js
fdivp
ret
inc
fisttpll
adc
test
add
in
adc
fiaddl
jae
and
jg
sar
mov
aas
insl
popf
imul
pop
loopne
jge
rorb
jecxz
jle
dec
xchg
push
xor
inc
dec
cltd
xlat
inc
roll
sub
xor
ja
xchg
test
gs
inc
je
sarl
add
jg
or
xchg
stc
imul
mov
fnstsw
adc
mov
les
xchg
popa
imul
push
arpl
inc
lock
ja
das
pop
add
lea
add
test
jl
mov
pop
mov
fdivrl
cmpsl
jb
or
popf
lcall
jg
imul
out
leave
leave
cmc
sbbb
add
mov
dec
xor
add
inc
out
xor
rcpps
or
ja
jecxz
cmc
arpl
adc
jp
movsb
dec
adc
and
inc
fldt
sbb
mov
gs
idivl
in
sti
test
repnz
sub
arpl
sbb
push
test
jle
outsl
sbb
pop
and
jae
jnp
outsl
stos
enter
insl
test
ljmp
popa
push
and
mov
dec
fsubl
imul
lea
pop
in
flds
mov
xor
outsb
bound
jl
aam
test
push
aam
jbe
daa
cmp
jb
push
out
divl
outsb
prefetchwt1
or
test
jno
cwtl
out
aad
pop
repnz
jge
xchg
jnp
sub
inc
xor
push
push
rolb
and
pop
mov
sbb
sub
pop
repnz
mov
xchg
lret
mov
inc
dec
sbb
loopne
arpl
insl
fs
dec
stc
cli
push
rolb
or
stos
outsl
jo
fisttpll
mov
xor
jle
icebp
insb
inc
fdivl
out
test
and
xchg
mov
xchg
insb
outsl
repnz
jmp
xchg
mov
pmaxub
out
in
testl
decl
into
leave
xchg
dec
add
dec
mov
mov
cmp
mov
xor
mov
lods
fisttpll
subl
inc
xchg
mov
cmc
push
sbb
mov
dec
inc
in
cli
jno
icebp
cwtl
sti
push
cmp
pop
and
cmp
or
shlb
hlt
fwait
xor
push
and
setb
push
jo
data16
pop
mov
jno
inc
jnp
cmp
push
jnp
shrl
jne
add
rorl
sub
lea
xorb
xor
orl
cmp
xchg
scas
mov
jge
xchg
xor
push
mov
popf
outsl
ja
ja
mov
ss
sbb
dec
and
and
mov
mov
push
je
inc
jno
inc
jae
shrb
out
test
xchg
aas
adc
aam
mov
xlat
outsl
outsl
lcall
imul
push
fwait
cmp
mov
rorl
pop
mov
stos
icebp
or
mov
pusha
xchg
outsl
ficompl
test
pusha
pop
out
dec
and
or
lret
div
mov
mov
jg
sub
lfs
aaa
or
push
jae
push
popf
jnp
mov
inc
shr
addb
ljmp
sarb
jbe
inc
fwait
sbb
inc
mov
push
pop
insl
cltd
mov
inc
test
ja
and
pop
mov
in
jle
es
cmc
xchg
xchg
das
pop
jp
add
xor
out
imul
add
rolb
cmpsb
jb
rcrb
xorb
inc
mov
push
lea
xor
imul
int3
outsb
into
push
push
add
and
imul
push
dec
cmc
push
jl
pop
xchg
cwtl
sub
jnp
or
push
lods
fildl
into
cmp
pop
pop
jge
js
or
repz
arpl
pop
dec
pop
add
sti
mov
adc
subl
xlat
jns
pop
or
mov
xorl
push
xorl
xor
std
push
stc
jg
adc
fldl
mov
popf
test
fnstenv
mov
xchg
pop
scas
pop
dec
insb
cmp
push
je
ds
pop
xchg
outsl
cli
sti
push
xor
test
push
fdivrl
out
in
loop
cmp
daa
test
mov
fwait
jbe
cli
out
jno
sarb
test
push
inc
xchg
inc
push
divl
cli
cld
pushf
sbbb
icebp
mov
jl
jge
jns
dec
xchg
cli
fldcw
test
and
and
dec
les
fwait
shl
pop
out
push
outsl
mov
xchg
push
jo
popf
xchg
in
xor
dec
sbb
inc
jp
aam
pop
vpcmpgtw
mov
adc
and
pop
mov
jno
pop
mov
xor
test
rolb
pop
dec
xor
inc
jecxz
jg
push
add
ja
xor
and
add
mov
pop
hlt
shr
or
in
out
and
or
jle
int3
cs
hlt
cmpsb
push
sar
jmp
add
out
orl
std
inc
cmp
sbb
in
push
dec
mov
lcall
orl
rolb
pop
fldl
hlt
inc
mov
mov
fmulp
sti
outsb
scas
mov
cmp
xchg
call
es
mov
jmp
add
sahf
sbbl
addr16
sub
das
or
fidivrl
sub
imul
inc
cmc
fidivl
test
gs
je
mov
add
mov
jae
aas
cmc
or
je
xorl
ret
ficompl
test
and
xchg
jge
ret
popf
push
xor
push
xor
cmp
push
imul
out
cmp
outsl
mov
push
dec
adc
mov
jp
pop
pop
mov
inc
dec
lods
ljmp
adc
mov
push
jno
sbbl
hlt
cmpsl
mov
jno
arpl
pop
cmp
cld
mov
adc
testb
stc
xor
cwtl
fadd
shlb
mov
outsb
aam
mov
divb
jg
test
ljmp
repnz
pusha
xor
jnp
or
push
clc
cmp
cmpsb
lcall
inc
cmp
jbe
fldt
popa
lret
mov
les
add
mov
in
sarl
insb
mov
xchg
mov
cmp
mov
lcall
mov
inc
bnd
inc
es
arpl
popf
mov
lahf
shlb
jne
and
daa
cld
cmp
add
push
sub
jge
push
mov
aad
lcall
in
mov
push
cmpsb
fnstenv
lcall
add
cmp
jmp
sub
cmc
xchg
ljmp
push
mov
dec
ss
xchg
jg
stos
faddl
mov
mov
arpl
fldl2t
test
pop
repz
aam
sbb
les
lods
imul
stc
inc
fs
xor
fs
adcl
loop
movsb
gs
sti
out
pop
fidivrs
jbe
jle
loop
add
outsb
stos
jg
je
jge
and
xchg
mov
repnz
rcrb
adc
addr16
scas
mov
pop
loop
in
ucomiss
lret
es
sub
and
xchg
fs
mov
lcall
sub
bnd
adc
test
arpl
inc
mov
xchg
pop
icebp
push
xor
popa
xor
stc
addr16
xchg
adcb
test
pop
adc
jno
fwait
ds
sbbl
das
mov
fildl
aaa
jl
push
lea
adc
das
aad
aas
mov
jno
push
cli
icebp
outsl
jae
xor
xchg
jno
lret
test
jmp
pop
sub
add
test
push
je
stos
fnstcw
mov
bound
data16
out
jp
ret
jnp
loopne
xor
sbb
ficomps
sbbb
ljmp
inc
negl
or
sbb
rorb
sbb
mov
divl
loope
xor
aad
aad
xchg
adc
lds
push
lea
adc
fisubrl
in
inc
sbbl
push
dec
mov
push
aam
cwtl
mov
cmp
addr16
cli
ss
cmpsb
jle
icebp
shlb
repz
mov
adc
fcmove
adc
or
in
add
add
aaa
inc
daa
ljmp
ja
outsl
lcall
insl
jg
xchg
out
cld
nop
clc
jnp
cli
sti
rclb
adcb
mov
pop
push
adc
cli
outsl
adc
xchg
shlb
test
cmp
out
test
xchg
out
std
jae
jge
dec
mov
xor
ja
lods
adc
and
or
mov
or
repnz
add
mov
jb,pn
aad
jae
fldl
mov
cwtl
push
jb
lock
mov
movsb
lea
push
jge
and
push
push
xor
xor
bnd
jno
add
es
das
push
add
sub
pop
sub
movsl
addr16
pop
or
push
add
ffree
or
repz
lds
fucomip
fwait
jnp
jg
shlb
jmp
or
add
es
sub
mov
xor
test
jae
and
add
jb,pt
clc
addb
bound
jae
addr16
or
add
xchg
jns
fdivl
out
aam
fbstp
push
ss
flds
aam
xchg
sahf
cmc
cmp
pop
call
in
cmp
iret
xor
and
push
and
push
xchg
jno
xor
sarl
je
xor
je
repz
xor
subl
popf
cmp
push
sub
fmul
push
ss
push
dec
jg
inc
adc
jno
inc
pop
xor
sahf
movsb
xor
fwait
mull
jae
das
xor
push
jnp
out
das
stos
lea
xchg
cmp
mov
or
imul
or
scas
in
and
and
ret
hlt
daa
inc
inc
cs
pop
xchg
loop
lds
repnz
les
daa
mov
cmpsl
into
aaa
dec
jmp
xchg
sub
inc
mov
test
repnz
subl
es
push
imul
xor
lea
andl
insl
pop
push
cmc
testb
push
or
das
cs
cmp
jge
das
clc
jo
xchg
jp
dec
mulb
dec
xor
dec
add
inc
dec
aam
stos
mov
ret
cwtl
shrb
jg
jge
ja
test
test
dec
andb
inc
or
or
add
and
jl
pop
xchg
shrb
mov
sbbb
sti
mov
xor
pop
mov
lock
or
mov
in
mov
ficoml
jo
cli
imul
clc
sub
das
add
mull
cmp
xchg
jbe
inc
in
jbe
or
das
gs
push
aad
xlat
lahf
clc
adc
or
jge
jns
fstp
push
jp
rcrb
ss
jo
fiadds
and
addr16
jg
ret
adc
cmp
stos
imul
fdivrs
roll
int
mov
fdivrs
sbb
std
into
cmp
jbe
and
fbld
mov
out
loopne
fnstsw
push
pop
repz
sahf
mov
push
shl
lahf
loop
out
lret
pop
pop
jl
jge
cmc
test
jae
jne
mov
std
pop
sub
aad
xchg
xor
into
jg
cmpsl
test
dec
jle
jnp
sbb
xor
pop
adc
repnz
lods
je
mov
dec
or
or
movsb
repz
sub
mov
push
pop
xchg
pop
xchg
aad
xchg
cmp
aam
push
leave
test
inc
scas
mov
mov
aad
xchg
sti
test
push
mov
cmc
rcrl
bound
lock
push
repz
pop
mul
fldenv
xor
subb
xchg
pop
mov
sbbl
sbb
xor
and
adc
inc
fstps
add
rcl
mov
push
ss
sbb
shll
sub
lods
in
mov
add
xorl
stos
lods
adcl
push
cs
sahf
push
jge
push
std
icebp
jle
push
std
push
mov
pop
push
dec
cmp
mov
pop
test
cs
ret
sbb
cmp
fnstcw
push
xor
ljmp
pop
cmp
shll
int
mov
es
into
xor
cmp
adc
add
std
dec
test
push
out
ret
xchg
sbb
loope
gs
sbbl
popa
xor
mov
add
inc
jbe
push
test
and
mov
stc
gs
mov
popa
lods
aas
xor
push
dec
insb
cmp
adcl
jae
inc
mov
cwtl
jp
xchg
or
neg
frstor
dec
and
sbb
or
out
adc
std
pop
inc
mov
fwait
lea
inc
inc
and
in
jns
outsl
pop
or
outsl
push
pushf
jno
jge
push
jno
icebp
sbb
xor
hlt
les
adc
xor
push
or
push
movsl
xchg
sbb
sti
lock
sub
jnp
and
mov
xchg
popf
into
xchg
or
cmp
mov
or
pop
adc
pop
push
cmp
lds
and
cmpsb
pushf
lret
iret
lahf
ja
mov
fwait
add
repz
scas
out
sub
movsl
imul
aad
imul
cwtl
jp
test
jnp
mov
mov
xor
jge
pop
mov
mov
xchg
push
imul
jae
subl
jns
push
addl
xchg
push
dec
pop
jne
pop
push
arpl
insl
jne
imul
jne
cmp
inc
inc
inc
aas
dec
jne
dec
inc
adc
jne
sbb
and
jae
sub
cmc
repz
out
xor
add
or
jne
aad
ror
fstp
fnstenv
in
loope
in
fwait
jne
mov
mov
push
daa
jne
mov
ret
sarl
xchg
xchg
xchg
popf
fwait
pop
cwtl
jb
mov
inc
loopne
jbe
jp
je
das
push
outsl
push
sahf
jb
pop
push
mov
ret
jno
xor
mov
sbb
push
into
mov
int3
mov
pop
inc
adc
mov
enter
call
xchg
fdivrl
adc
fwait
xor
mov
lods
outsb
lret
lea
or
xor
or
neg
xchg
mov
or
cmp
adc
leave
xor
ret
scas
loopne
ds
gs
xor
in
pop
in
and
xchg
ror
sahf
jp
inc
push
push
lds
lods
jecxz
push
mov
mov
mov
inc
outsl
or
aad
mov
cs
jmp
fwait
loopne
jmp
fdivrl
sub
sub
fnstsw
ss
dec
xor
fwait
and
out
in
std
lock
clc
ret
dec
mov
daa
lea
enter
cltd
mov
popa
push
repnz
out
fnsave
adc
pop
mov
mov
xor
mov
sub
add
mov
mov
jge
addr16
cmp
inc
lret
pop
sahf
cmp
dec
jno
ret
icebp
jne
inc
inc
inc
call
push
inc
add
xor
sti
sbb
pop
or
rclw
cmpsb
cmpsl
mov
je
lds
cwtl
das
inc
or
adc
push
adc
adc
fstl
cltd
add
dec
imul
iret
pop
cmp
jl
pop
mov
cmp
cmp
jo
jb
and
adc
pop
mov
es
and
xlat
mov
icebp
xchg
fwait
xor
cli
std
cmp
add
push
or
lcall
cmp
and
cmpsb
in
shll
mov
cmp
push
and
jb
mov
test
xchg
pop
into
vmovaps
adc
sbb
es
out
nop
cmp
sub
sarl
ret
cmpsl
inc
sahf
mov
sbb
repz
mov
pop
and
fstps
push
std
in
dec
and
inc
fwait
inc
xlat
in
adc
cld
popf
push
adc
dec
sahf
icebp
pop
out
mov
pop
jno
and
rcrb
arpl
mov
push
add
sub
sub
leave
sbb
aad
mov
xchg
mov
add
in
aad
aaa
and
inc
xor
call
notl
jle
xor
sti
je
jno
jl
insl
cmc
shll
push
jno
xor
and
vminps
ds
jae
lret
jno
pop
jno
jno
das
jno
jno
jno
pop
xor
or
jae
jae
adc
sbb
push
daa
add
jp
xchg
addb
jne
push
push
pop
pop
pop
pop
data16
bound
insb
push
ss
xor
ds
cmp
inc
inc
inc
dec
dec
dec
dec
push
jne
adc
push
sbb
sbb
jne
and
cs
sub
jne
repnz
cld
cli
clc
push
jne
add
push
or
or
jne
rcl
fcmovu
out
in
loopne
in
ljmp
mov
jne
ret
int3
lret
jne
xchg
nop
sahf
pushf
lcall
scas
lods
stos
test
inc
inc
pop
bound
inc
jne
loope
inc
out
inc
stc
xor
add
mov
mov
orb
outsl
lock
mov
ret
repz
cs
cmp
cltd
lea
flds
sbb
repz
mov
cli
xchg
push
movsl
add
int
xchg
mov
ret
std
int
movsl
mov
scas
lds
mov
out
add
aam
jge
push
fisttpll
xchg
shll
sub
loopw
mov
sub
cmp
xlat
mov
fstpl
push
iret
iret
fwait
test
xchg
test
xor
inc
xchg
popf
xlat
cmpsb
adc
repz
lret
mov
mov
add
loope
repz
insl
stos
or
adc
jo
fwait
pop
aad
push
push
mull
addr16
mov
icebp
out
mov
rorl
adc
or
cwtl
jb
test
push
pop
sti
push
xor
jae
test
xchg
pop
imul
fstpt
pop
adc
wrmsr
inc
test
xchg
cmp
jge
push
into
sub
push
sbb
jae
mov
mov
xchg
inc
arpl
in
cltd
popf
aam
xor
int
sub
movsl
push
cmp
out
dec
inc
xchg
jnp
cmp
int
xchg
inc
das
jo
jb
popf
ficompl
xor
xor
mov
mov
test
das
sbb
jl
xchg
rcrl
outsb
jne
lods
jbe
mov
roll
push
jne
popf
leave
out
int
mov
or
jno
xchg
jno
xor
push
jge
aas
leave
adc
test
js
test
divl
ljmp
xor
sti
pushl
or
sbb
das
shll
add
mov
enter
testl
std
cmc
shl
jg
jne
leave
out
mov
inc
xor
adc
icebp
xchg
lret
xchg
aad
adc
lds
sarl
inc
lea
xchg
mov
cltd
andl
pop
cmc
stos
pop
rcrl
or
push
mov
inc
xor
xor
mov
cmp
push
aaa
and
pop
cmc
adc
adc
out
mov
cmpsb
push
xlat
xlat
mov
inc
jecxz
aas
push
xor
ss
xor
lds
pop
sub
xor
lea
dec
inc
subb
es
aas
lret
cmpsb
xchg
or
cmc
xchg
sbb
lea
loope
stc
push
jp
lods
and
test
jl
sbb
cmp
inc
mov
push
bound
sub
das
or
xchg
insb
jmp
mov
cmpsb
inc
add
xchg
mov
in
fcomip
pop
mov
mov
or
sub
subl
add
push
call
mov
and
jle
pop
mov
addr16
andl
pop
pop
jmp
pop
test
sub
and
mov
test
std
in
popf
popf
repz
lret
cld
inc
inc
jae
sub
leave
sahf
or
mov
mov
xchg
ffree
pop
or
popf
icebp
mov
sub
mov
pop
push
cmp
pop
in
fnstenv
or
cmp
ret
pop
lea
or
gs
scas
mov
aam
jno
jge
icebp
mov
shrl
jno
xor
mov
cld
movb
push
push
push
xor
xchg
lock
fnstenv
add
test
aam
lds
lds
popl
jno
jno
adc
push
fnsave
out
fmulp
xchg
mov
lret
xchg
dec
das
push
push
int
pop
jo
mov
sub
fnstsw
pop
jmp
jge
ret
sti
lock
stc
les
jge
andb
aam
rcrl
push
movsl
or
cmpsb
push
mov
scas
add
int
inc
inc
pop
enter
pop
cltd
lods
out
xchg
shll
adc
xchg
into
insl
addr16
adc
add
pop
xchg
xchg
mov
fdivs
lods
out
mov
imul
add
ja
sub
inc
mov
fmull
add
add
and
scas
movsb
jo
or
loopne
mov
xor
repz
sbb
xchg
adc
cld
mov
xchg
push
testb
mov
pop
int3
pop
inc
lret
push
das
into
xor
inc
mov
adc
sub
inc
mov
add
mov
insl
inc
add
mov
sub
imul
pushf
iret
hlt
adc
mov
sub
insl
out
ss
mov
adc
and
sahf
xchg
outsl
shrl
test
push
and
inc
mulb
bound
popf
shrb
push
ret
lock
push
push
or
insb
aas
ret
js
cmp
push
inc
mov
fistpll
mov
loop
repz
popa
adc
mov
loopne
repnz
pop
icebp
iret
rcrl
outsl
xchg
sub
shl
insb
or
mov
insl
in
icebp
xchg
in
cltd
in
and
jecxz
push
pop
xchg
fcomip
test
or
jmp
adcl
ret
imul
cmp
and
mov
call
jecxz
sti
or
push
sti
mov
fstpt
pop
pop
xchg
jle
cld
cmp
test
cli
ss
or
aam
xor
push
xchg
xlat
outsl
sub
stos
enter
sti
cmc
loope
mov
jae
or
mov
cltd
or
iret
fs
clc
pop
fwait
cmp
mov
in
cmp
sub
and
repz
mov
sbb
xor
xor
xor
adc
and
arpl
inc
fadds
inc
fwait
std
repnz
jae
dec
pushf
jbe
adc
sub
push
mov
pop
sub
std
jge
pop
stc
add
dec
xorl
ja
lea
inc
subl
sub
in
fs
push
push
push
bound
xor
insl
out
mov
aad
inc
shll
iret
test
xlat
mov
jecxz
lods
int
gs
push
xor
pop
xchg
dec
add
mov
test
xor
add
push
push
xlat
xor
inc
ds
push
cmp
sbb
mov
and
pop
lea
xor
test
push
pop
xor
sub
push
icebp
jae
es
insb
in
mov
and
test
sub
pop
and
dec
mov
pop
xlat
xorb
jl
gs
xor
sub
xor
in
mov
out
jae
test
loop
mov
jle
sbb
cmp
fildl
sbb
aaa
push
jno
test
cmc
outsl
mov
jb
inc
xor
cmp
test
xor
adc
scas
jge
test
mov
xor
rol
or
je
xor
mov
repz
mov
adc
repnz
ss
fnsave
shrl
pop
negb
adc
mov
inc
adc
jae
fiadds
xor
daa
rorl
aad
add
jbe
push
xor
test
jmp
je
repz
cmp
mov
inc
mov
mov
sub
addl
xor
push
xchg
cmc
aaa
dec
test
push
gs
mov
pop
xchg
push
cmp
xor
sti
xor
cmp
and
lds
add
std
std
test
orb
cmp
mulb
jne,pt
mov
je
push
xorl
or
test
std
cmpsb
cmc
adc
test
add
idiv
cs
push
push
cmp
xor
std
outsb
pop
test
adc
mov
fnsave
or
adc
add
or
push
dec
push
or
jge
inc
cmpsl
jae
jge
or
dec
inc
lea
jl
xchg
xor
xchg
leave
adc
push
es
idiv
mov
insb
inc
aas
jge
pop
xor
cmp
pop
and
xor
fidivrs
fs
inc
sbb
push
xchg
xor
push
rolb
add
fwait
test
ds
xor
std
jg
adcb
hlt
test
aas
jno
lea
test
outsb
lea
aad
xchg
sahf
push
inc
jbe
pop
pop
ss
jae
sub
mov
push
or
repnz
divb
xchg
aas
inc
dec
cld
insb
ret
xchg
jmp
lods
cmp
lods
jo
xchg
pop
fcomps
jnp
addr16
dec
push
movsb
sub
std
int3
je
push
mov
and
jbe
fdivrl
or
mov
mov
jne
add
and
repz
mov
cwtl
xchg
addr16
icebp
jne
mov
movsb
insb
mov
shr
xor
cltd
jne
push
xchg
inc
inc
jle
cmp
test
push
push
inc
cmpsb
dec
aad
cld
mov
ficoms
mov
mov
cmp
arpl
push
lea
cltd
add
or
icebp
mov
pop
sbb
adc
stos
iret
sahf
mov
stos
jo
push
loope
cmp
fnstsw
pop
mov
insl
lods
and
out
jmp
movsb
loopne
mov
pop
cmpsb
nop
aaa
sub
stos
push
jne
jbe
or
jae
jno
mov
cmp
push
jge
cmc
mov
sbb
cmpsb
jne
mov
ja
leave
push
jo
div
rorb
jae
mov
push
sbb
xchg
xchg
xchg
repz
cld
cmp
xchg
cmc
cmp
ret
int
jnp
pop
jp
shlb
cs
mov
sub
mov
or
push
inc
mov
mov
ja
pop
pop
mov
iret
pop
fwait
std
daa
or
bound
ljmp
dec
imul
cli
mov
scas
pop
adc
andb
test
push
and
jne
lret
jns
jns
jl
mov
and
and
ret
inc
mov
dec
xor
mov
in
scas
lahf
jns
das
fstl
je
adc
jne
cmp
adc
dec
sub
and
imulb
in
pop
adc
xchg
cli
jle
icebp
ja
sbb
loopne
and
xchg
adc
add
jne
cmp
not
loop
movsl
jb
xor
mov
adc
jnp
push
scas
cmp
mov
pop
iret
dec
or
jge
imul
repnz
mov
push
xchg
xlat
jne
sub
or
jne
dec
jns
stos
mov
in
ljmp
in
cmp
dec
bnd
std
mov
out
jne
gs
xor
cmp
or
push
jno
adc
add
loope
pop
mov
cmpsb
pop
xor
sub
fwait
xchg
into
and
scas
int
inc
adc
shr
leave
push
sbb
popf
xor
cltd
adc
xor
mov
jg
xchg
jnp
mov
sub
sub
std
loope
or
lsl
scas
in
popf
mov
xchg
mov
cltd
jo
mov
popa
imul
jp
movsl
xchg
sbb
mov
xor
repz
mov
fwait
ret
repz
mov
out
mov
mov
xor
sti
inc
shrl
imul
jge
mov
jo
in
sbb
mov
insl
ja
insb
aas
imul
xchg
ja
adc
aaa
adc
jno
push
add
aam
in
mov
les
movsb
aam
out
mov
enter
popa
setno
loope
lret
ja
sbb
inc
jmp
je
adc
imull
or
les
xchg
hlt
pop
pop
xlat
add
aam
in
mov
pop
and
xchg
in
mov
fcoml
and
fwait
movsl
mov
add
iret
insb
int
xchg
push
imul
push
pop
push
ss
dec
push
es
fsubrl
push
sahf
push
xor
out
not
mov
js
cmp
clc
movsl
mov
dec
mov
pop
add
aam
in
mov
sub
sub
daa
pop
aaa
sbb
mov
int3
mov
xchg
push
add
aam
in
mov
adc
mov
leave
inc
insb
imul
sbb
cli
aam
out
sbb
inc
movsl
xchg
mov
hlt
test
add
imul
enter
mov
xchg
pop
in
mov
les
xchg
adc
fsts
rcll
xchg
pop
cmp
push
mov
fdivrs
add
fiadds
aam
out
and
scas
movsl
jp
lods
cli
test
pushf
insl
jno
mov
cmp
imul
push
cmp
push
gs
xor
sti
js
js
xor
sub
out
daa
xchg
stc
popf
lds
and
mov
push
or
sub
sbb
fidivrs
adc
aaa
into
repz
filds
aam
xor
insl
mov
fisubrl
jae
sbb
sbb
pop
xchg
xor
xchg
pop
jae
adc
daa
push
data16
fs
ror
push
add
push
mov
push
das
shlb
lret
adc
lds
setno
popf
jo
test
int3
mov
xchg
sub
xchg
and
shll
xor
cmp
addr16
xor
push
and
mov
loop
mov
imul
nop
lahf
nop
je
mov
movsb
push
movsb
or
cmpsb
jnp
xchg
pop
popf
popa
in
pop
movsl
mov
daa
mov
int
daa
cmp
push
mov
aaa
shl
lods
mov
js
cmp
clc
out
mov
sub
and
dec
lock
xchg
daa
and
pop
adc
or
mov
xchg
daa
lahf
daa
jb
insb
daa
xor
inc
daa
push
daa
sbb
sub
daa
add
shlb
in
ljmp
xor
sti
adc
xchg
xor
add
mov
mov
movsb
pusha
movsb
inc
movsb
push
movsb
or
cmp
xchg
mov
notb
cmpsl
and
aad
icebp
dec
decl
xor
inc
or
clc
inc
rsm
or
mov
or
xchg
and
or
or
cld
or
or
or
or
push
fwait
xor
rolb
rcrb
repz
add
in
push
lock
rol
mov
nop
test
push
sbb
or
pop
call
sub
mov
add
cmp
movsb
mov
and
add
aam
in
mov
loopne
mov
pop
and
inc
movsl
sub
sub
daa
jmp
stos
push
pop
push
and
insb
fldt
push
aas
imul
xchg
daa
cmp
dec
daa
and
jmp
loope
xor
adc
mov
mov
sub
inc
not
mov
js
cmp
mov
push
mov
daa
je
push
xor
cmp
fs
push
enter
movsl
in
shrl
sbb
js
sbb
or
js
cmp
out
mov
adc
lds
sub
insb
sub
dec
mov
mov
and
xchg
imul
loope
xchg
in
or
jb
adc
xor
and
in
mov
les
cmp
movsb
mov
repz
cltd
cltd
test
jmp
mov
mov
inc
xchg
pop
and
jns
xchg
xor
das
lock
jecxz
jb
push
nop
sbb
xchg
les
and
and
insb
dec
clc
dec
inc
and
dec
lea
or
test
dec
ja
jge
dec
test
pop
xor
jle
xchg
test
pop
mov
mov
fldenv
repz
lods
aam
in
mov
les
adc
loopne
test
jecxz
mov
mov
in
cmp
shlb
aad
or
xchg
mov
dec
adc
push
adc
sub
xor
popa
adc
mov
mov
sbb
push
jae
cmpl
pop
cmpsl
cmp
mov
inc
xor
sub
or
mov
add
inc
push
push
addr16
push
dec
push
imulb
push
nop
push
jg
push
sti
cmp
sub
add
inc
daa
daa
scas
dec
ret
adc
test
xchg
push
lds
shlb
call
inc
insl
scas
sbb
insb
cltd
imul
imul
dec
popf
negl
mov
push
jbe
and
xchg
push
and
cltd
push
lods
mov
les
xchg
popf
out
add
push
ss
add
xor
jecxz
daa
subb
test
cmp
insl
insb
insb
aam
insl
adc
or
mov
loope
jp
mov
les
sbb
ret
mov
sub
xchg
push
sub
dec
or
outsl
jg
daa
push
sti
xor
adc
jb
xchg
popf
sbb
xchg
sahf
add
jp
push
and
bound
cli
test
imul
call
jbe
adc
movsl
push
xor
adcl
mov
aam
in
mov
les
xor
dec
inc
subl
sub
daa
cmp
not
dec
cwtl
clc
mov
mov
cmpsl
aaa
mov
xor
mov
repnz
sbb
and
pop
add
pushl
adc
notb
testb
pop
cmp
sub
and
pop
aad
loope
mov
lret
xchg
push
pop
rolb
cmp
fidivrs
insl
mov
gs
ss
repz
add
mov
insl
adc
inc
add
push
lock
mov
sbb
add
std
mov
bound
cltd
int3
add
cmc
cmp
mov
lods
xor
xchg
adc
aam
xchg
aam
in
mov
les
xchg
movsb
push
movsb
data16
outsb
movsb
movsb
movsb
inc
movsb
dec
mov
push
jbe
test
lea
outsb
xchg
xor
out
es
aaa
push
js
mov
add
aam
in
mov
les
bound
sub
dec
and
xor
roll
jmp
xchg
or
add
inc
test
sbb
idivl
mov
js
cmp
clc
or
mov
lret
xchg
pop
std
das
rolb
pop
shl
mov
xchg
in
sbb
shlb
popf
imul
or
adc
ss
movsl
pop
xchg
js
shrl
jns
lock
mov
mov
movsl
popf
mov
jle
daa
mov
push
cmp
push
adc
and
sub
out
dec
xchg
adc
aad
popf
adc
adc
and
adc
pop
into
icebp
xchg
pop
sahf
sub
or
faddl
in
cmp
inc
mov
rcll
outsl
adc
push
ja
shld
xchg
arpl
dec
pop
or
pop
jnp
and
push
mov
inc
dec
daa
dec
or
sbb
and
clc
or
or
or
or
push
mov
xchg
mov
push
pop
jne
pop
sti
sub
inc
mov
push
mov
adc
or
in
cmp
cmc
insl
mov
mov
testb
cltd
popf
add
es
out
cmpsb
add
and
or
sub
push
xchg
orb
adc
push
mov
movsl
mov
out
jg
gs
or
andb
clc
out
sahf
mov
and
lds
rcrb
jns
xchg
sti
outsl
jp
push
cmpsb
ldmxcsr
ret
sbb
pop
inc
add
sarb
outsb
dec
addr16
push
pop
jle
xchg
or
dec
mov
push
movsb
movsb
movsb
mulb
daa
fisubs
out
daa
mov
daa
scas
cmpl
hlt
add
cmp
nop
daa
jno
daa
or
mov
lods
nop
jle
jb
mov
data16
shlb
mov
xchg
inc
ret
adc
cs
repnz
scas
push
scas
push
scas
scas
ficoms
out
addl
xchg
movsb
sahf
movsb
cmpsb
inc
push
mov
mov
pop
mov
xor
or
adc
hlt
mov
in
in
movsb
mov
hlt
mov
xchg
movsb
popf
inc
sbb
aas
jae
fwait
mov
add
sti
dec
movsb
xchg
jle
xor
arpl
mov
cmp
xlat
cli
movsb
nop
sub
and
pop
xor
dec
xchg
mov
outsl
pop
out
pop
aad
push
adc
std
adc
or
sbb
mov
jge
add
xchg
sbb
inc
pop
xor
lea
lcall
rclb
mov
xor
adc
cli
cmc
xlat
mov
int3
es
ja
mov
push
mov
mov
movsl
mov
fnstsw
add
cmp
xchg
divb
cwtl
and
or
das
fidivrl
adc
jae
rorb
fsubp
jmp
outsb
divb
stos
inc
or
push
sti
movsl
xchg
sub
lret
gs
sbb
inc
in
pop
inc
mov
decb
icebp
dec
mov
inc
jno
pop
xor
cmp
test
cmovns
xchg
mov
mov
sbb
pop
scas
mov
mov
xchg
xchg
shrb
mov
cmp
jo
scas
push
xor
test
cmc
ret
mov
roll
push
pop
sub
std
cmp
mov
lds
mov
pop
xchg
movsb
ss
repnz
mov
icebp
xchg
into
xchg
push
rcr
mov
xor
xchg
push
xor
cmpsl
mov
fst
scas
jl
out
dec
xor
sbb
aaa
xchg
mov
mov
aad
cmovnp
sbb
cmp
ret
push
std
jnp
mov
pop
sub
dec
insl
lds
sahf
mov
sarl
insb
dec
ds
cmp
testl
stc
xchg
mov
adc
cli
sub
mov
cmp
aam
push
push
sti
test
call
movsb
push
xor
jno
mov
add
imull
test
addb
and
lret
jle
xchg
add
sub
or
test
push
xor
ffreep
mov
jmp
and
in
and
xor
sub
lret
inc
das
mov
mov
or
add
adcl
inc
pop
outsb
je
fbstp
iret
jae
mov
mov
push
inc
cmp
adc
sbb
push
bndstx
push
mov
and
and
movsl
adc
in
push
dec
adc
test
sbb
cmp
mov
popf
push
xor
sub
mov
and
sub
dec
vmovq
sbb
fwait
mov
out
in
and
lods
mov
mov
sarb
and
inc
cmp
inc
push
adc
shl
icebp
xchg
aam
adc
cmc
mov
adc
mov
mov
cmp
sub
out
cmc
push
push
xor
cmp
dec
rcrb
daa
imul
sbb
jns
loope
inc
xor
aas
cltd
adc
pop
xor
sbb
cmp
inc
adc
fs
sbb
inc
adc
lea
fdivrl
cmp
push
mov
xchg
mov
leave
mov
clc
add
xor
lock
ret
inc
jl
xor
push
mov
jns
lds
imul
add
mov
iret
inc
nop
and
out
insl
push
sbb
dec
cmp
outsl
jmp
imul
mov
sahf
add
out
xor
aad
pushf
mov
call
mov
pop
sar
push
fcomps
xor
pushf
inc
mov
push
dec
sbb
sub
dec
and
and
fcomi
pop
aas
aam
push
jne
xchg
int
mov
mov
psubd
cltd
lds
adc
mov
aam
push
rcll
or
das
push
repz
sub
pop
clc
sarl
push
push
add
xchg
jno
sub
popa
adc
add
leave
mov
or
or
cmp
subl
add
iret
xchg
aad
fbstp
push
sbb
sahf
xchg
fnsave
ds
int3
mov
int
ret
dec
xchg
push
stc
lret
or
inc
call
push
push
inc
addr16
sbbl
inc
adc
xchg
mov
scas
mov
xor
cmp
outsb
sbb
push
xchg
lcall
mov
es
xor
stos
fdivrs
mov
mov
scas
mov
fldl
popf
jmp
xchg
xchg
mov
insl
popa
iret
leave
dec
repnz
push
add
sbb
dec
push
cmp
inc
aad
repz
jecxz
push
xor
rcrl
mov
push
mov
ret
lds
stc
in
sti
or
xchg
pop
pop
sub
push
sbb
ret
mov
rcr
dec
in
xor
ret
bound
mov
xor
pop
sub
cs
pusha
xor
inc
bound
test
cli
subb
sarl
mov
pop
adcl
inc
inc
ret
stc
inc
sub
gs
inc
inc
mov
cmc
mov
dec
sti
xchg
sbbl
mov
sub
xlat
imul
and
xor
adc
jno
xor
and
popf
cmp
xor
push
mov
sbb
cmp
inc
xchg
or
aad
and
cltd
and
cltd
mov
pop
xor
mov
inc
and
adc
push
insb
mov
stos
push
outsb
je
ljmp
inc
enter
xchg
dec
mov
test
les
add
xchg
sbb
lcall
loop
mov
cmp
jg
mov
push
pop
repnz
loopne
adc
sbb
std
adc
and
cmp
push
add
sahf
insl
pop
fadd
hlt
aaa
push
xchg
pop
shl
cmp
and
stos
inc
mov
dec
sbb
gs
mov
mov
adc
fwait
adc
xor
mov
xor
cmpb
push
xor
pop
fdivs
cltd
jecxz
and
jmp
repnz
out
cmc
cs
lea
jno
mov
dec
jecxz
sub
lret
cmp
xchg
ret
or
push
std
jmp
push
dec
push
xor
mov
pop
ja
imul
cltd
das
js
rclb
xor
sahf
cmp
dec
sbb
inc
dec
xor
add
pop
add
es
pop
sbb
sbb
or
adc
xchg
rcrl
sub
notl
adc
fadds
and
mov
sub
inc
mov
test
push
ret
mov
data16
xchg
sbb
xor
and
insb
jmp
or
and
sbb
xor
outsb
mov
pop
loop
inc
and
and
or
cmp
mov
mov
mov
addb
pop
xchg
shll
in
repnz
test
dec
std
xchg
paddw
mov
push
dec
test
sbb
sbb
cmp
pop
fwait
pop
dec
test
sbb
dec
iret
sbb
fcoml
add
in
adc
add
pop
arpl
in
sbb
fidivl
and
into
syscall
out
mov
popf
push
inc
in
pop
mov
mov
rclb
mov
ljmp
sub
gs
mov
mov
inc
test
int3
jmp
xorl
enter
cld
cmpsb
shrb
or
dec
push
dec
push
call
mov
and
loop
mov
fwait
xchg
das
pop
scas
ss
add
push
imul
add
lret
add
shlb
mov
iret
loope
dec
out
stos
or
cmp
call
out
cmp
adc
mov
push
xor
xchg
stos
mov
aad
mov
pop
mov
pop
adcb
pop
dec
pop
out
pop
mov
mov
mov
and
dec
orb
inc
lods
and
aas
iret
mov
jmp
mov
outsb
cmp
dec
test
fcmovne
leave
repz
imul
dec
repz
add
cmp
xor
lods
sbb
test
mov
out
es
pop
adc
adc
rclb
bound
mov
pop
cmp
data16
cmpb
xor
movsl
adc
pop
sbb
mov
lods
lcall
cltd
add
xor
dec
jns
arpl
movsl
mov
add
iret
push
push
into
dec
movsl
fmuls
jmp
je
lret
cmc
sbb
int
adc
ret
jnp
movsl
mov
xchg
xchg
mov
aas
push
adc
dec
mov
or
cmp
cltd
jecxz
sub
ds
add
mov
sahf
mov
xor
xor
pavgb
xchg
lcall
popa
in
lds
lahf
lret
daa
cmc
adc
adc
imul
dec
and
sbb
imul
test
jl
aas
popf
pop
popa
jecxz
dec
sbb
sbb
pop
jg
add
or
adc
xlat
bound
es
xchg
fwait
sar
jno
xor
and
jle
mov
ds
ror
shrl
and
or
xor
pop
aaa
test
mov
xor
jg
roll
mov
xchg
ficoms
cmp
or
or
popa
cwtl
loop
dec
adc
nop
ret
subb
adc
xchg
cmp
roll
and
ret
push
mov
pop
hlt
sub
xchg
pop
mov
xor
in
cltd
xchg
scas
sbb
loopne
xor
xchg
test
mov
jae
dec
add
mov
shrl
jb
out
mov
jbe
in
adc
bound
fwait
mov
inc
scas
leave
adc
outsl
icebp
fwait
pop
shll
in
jo
pushf
out
mov
lahf
sbb
adc
enter
push
divps
or
rorl
loop
xor
stc
or
movsb
xor
mov
adc
sbb
sti
adc
mov
pop
int
sbb
sbb
dec
push
cmp
adc
sbb
jp
xor
xor
push
mov
fstl
dec
push
mov
push
pop
not
xor
pop
insb
sub
xor
pop
xchg
sbbl
rcrl
clc
pop
inc
inc
cmp
cmp
mov
xor
cmp
add
inc
push
add
cmpsl
sub
addb
xlat
cmp
dec
std
in
fs
lahf
je
into
cmp
and
sub
xchg
inc
pop
xchg
mov
push
or
adc
mov
pushf
cltd
gs
inc
das
xchg
pop
ds
push
inc
out
cmpsl
enter
xchg
and
push
insb
enter
pop
dec
add
stc
cmp
insb
sbb
sub
cmp
xchg
add
sub
cld
pushl
ljmp
insb
repz
sbb
repnz
je
pop
sub
and
mov
into
insb
sbb
inc
inc
mov
pop
frstor
pop
push
sub
scas
shrb
bound
les
dec
pop
jo
movsl
mov
test
loopne
test
add
xchg
movsb
pop
test
adc
mov
sub
ret
fisttpl
adc
cmp
jb
adc
inc
fldcw
xor
test
pop
stos
negl
bound
dec
and
ret
pop
cmp
mov
cmpl
push
rcrl
mov
pop
popf
jmp
int3
aad
inc
add
shrb
fisubrs
or
mov
arpl
inc
pop
popf
fisttpll
pop
sbb
adc
or
xor
push
mov
and
fs
adc
cmp
imul
pop
dec
insb
and
mov
jo
add
jb
dec
ffree
movsl
jl
mov
lret
test
mov
aaa
loop
inc
jnp
fistpl
movsl
stos
push
loop
loop
popf
inc
fyl2x
and
hlt
cmp
and
mov
sbb
imul
mov
sub
sub
dec
mov
adc
pop
dec
and
push
xchg
and
cld
and
jno
jecxz
add
sarl
icebp
lds
stc
mov
push
push
nop
mov
cld
pop
bound
mov
daa
mov
aad
cmp
cmp
iret
pop
cmp
sub
loopne
push
shlb
lret
ja
rolb
jp
sbb
mov
into
test
daa
dec
std
loope
push
mov
sub
hlt
cmpsl
xor
sar
inc
add
add
push
int
mov
or
lea
nop
sbb
dec
sub
push
aam
loopne
lahf
adc
loop
pop
imul
or
int
mov
pop
es
xor
cltd
mov
js
fidivrs
and
je
aaa
dec
and
test
jmp
dec
imul
pop
add
push
outsb
cmp
pop
and
xor
sbb
inc
dec
mov
inc
sub
adc
rcll
fsts
sti
shl
xchg
cmp
stc
jo
in
fnsave
scas
push
popf
insl
shrl
xor
notb
ror
in
xlat
ja
pop
mov
icebp
xchg
jno
out
divb
adc
pextrw
loop
mov
sbb
sbb
or
push
call
xor
insb
int3
dec
xor
clc
lods
push
ret
cld
jo
xlat
add
call
xchg
lcall
nop
mov
out
pop
add
dec
scas
mov
scas
sbb
popf
and
push
rcrl
lret
pop
insb
adc
cmp
mov
loopne
gs
jb
dec
xchg
adc
push
shrb
sahf
adc
lods
pop
sbb
sbb
push
add
jle
sub
jmp
fwait
cmpsb
and
popf
jmp
cmp
and
out
and
pop
adc
popf
xchg
fildl
aad
ret
fisttpll
test
inc
aam
decl
test
pop
dec
adc
push
iret
imul
mov
shrb
das
lcall
out
or
jb
fisttpl
xchg
or
insb
push
mov
pop
adc
add
pop
rolb
fnstcw
das
or
sbb
xchg
sbb
xor
inc
lahf
inc
sbb
mov
xor
lods
cmpsl
adc
pop
ljmp
sahf
cs
dec
inc
adc
lcall
rcrb
or
fldcw
add
call
int3
push
xor
inc
and
ds
mov
add
insl
inc
inc
or
push
xor
out
push
in
dec
mov
sbb
lcall
inc
jns
pop
ds
test
stos
pop
push
fiaddl
xchg
pop
add
mov
ja
adc
scas
loop
repz
add
mov
cmp
rol
inc
add
outsb
adc
add
mov
pop
sbb
inc
sub
pop
jae
iret
repz
inc
mov
mov
and
out
push
insb
mov
cmp
pop
jmp
and
cmpsb
xchg
iret
pop
sbb
icebp
xchg
pop
loop
ret
repnz
cwtl
sbb
stos
sahf
sub
add
inc
ret
insb
fdivp
in
ficompl
add
aas
shl
lcall
fstpt
popf
js
push
push
mov
and
ja
sbb
or
shll
aas
adc
inc
out
dec
iret
dec
icebp
out
push
xchg
popf
and
ret
and
or
xchg
icebp
push
mov
in
loope
sub
gs
jno
cltd
mov
scas
leave
inc
mov
push
pop
fmul
std
inc
test
std
cltd
orl
loope
cwtl
inc
xor
sub
adc
push
and
add
jne
call
inc
sub
icebp
pop
rcll
mov
outsl
or
fcmovnb
sti
movsb
mov
xchg
jg
sub
icebp
fst
inc
iret
add
jno
stc
shll
sbb
imul
mov
sub
add
fwait
sub
or
mov
add
add
mov
jae
or
mov
shll
ja
psraw
testl
rcll
out
pop
testb
mov
cmp
test
and
inc
adc
adc
xor
mov
adc
lds
or
jne
xchg
sbb
add
xchg
or
jns
aad
jnp
add
sti
jne
rol
xchg
scas
iret
adc
xlat
jns
sbb
icebp
push
add
aas
and
sbb
stc
jns
jecxz
imul
mov
loope
fcmovnu
xchg
aad
sarl
gs
add
mov
aas
add
lret
icebp
jne
iret
lds
aad
mov
sti
jae
xchg
mov
pop
int
insl
ja
movsl
stc
sti
and
mov
iret
aaa
aas
push
mov
xchg
ud2
mov
sub
divl
mov
mov
stc
mov
outsb
or
or
es
insb
icebp
aas
insl
rol
jne
lret
add
ret
jne
or
stc
or
add
adc
mov
icebp
adc
cpuid
sbb
xlat
pushl
mov
sahf
out
inc
outsb
shr
in
jmp
popf
outsl
aas
lret
std
xchg
or
fldt
int
sbb
or
aas
mov
jae
adc
mov
movsl
mov
mov
push
leave
sbb
testl
movsl
roll
xchg
int
sub
xchg
aad
je
divl
fwait
outsl
cwtl
sbb
into
testb
test
pusha
loope
aad
ja
mov
movsl
sarl
std
loope
iret
mov
loopne
mov
sti
push
ficoms
add
add
btr
in
aad
xchg
mov
pop
addr16
popf
iret
and
inc
movsl
sar
mov
adc
inc
add
repz
mov
adc
ret
or
aas
mov
sbb
xchg
adc
jecxz
std
sbb
mov
cltd
in
movsl
or
sub
pop
mov
jle
in
decl
mov
xchg
shll
or
adc
jecxz
daa
adc
cwtl
gs
loope
pop
icebp
repz
add
ja
sar
cli
pop
mov
sbb
sub
add
jae
pand
or
fnstsw
std
add
roll
leave
stc
add
fwait
mov
add
aas
int
mov
ja
into
outsb
fstl
cli
shrb
lds
mov
fstps
cmp
or
lret
xchg
pop
add
int
or
cmp
xchg
roll
xchg
sub
cltd
loope
lret
psubw
jbe
sbb
cltd
xor
xchg
mov
call
adc
or
xor
repz
lret
jb
loope
repz
scas
mov
in
repz
inc
xchg
cmp
mov
or
mov
cmc
push
mov
clc
stos
mov
inc
pop
ret
in
jle
jno
add
psllq
mov
std
mov
in
xchg
cwtl
shll
pop
icebp
mov
repz
dec
add
or
adc
pop
arpl
icebp
and
xor
ret
paddw
push
sbb
in
movsb
mov
cltd
or
shl
and
or
xchg
xchg
out
xchg
sbb
leave
mov
imul
std
xchg
push
in
movsl
pusha
jmp
pop
xchg
cwtl
imul
outsb
add
mov
es
adc
xor
jo
mov
sbb
js
out
wbinvd
xchg
cwtl
and
fadd
mov
xor
fwait
int
scas
cmp
or
fcmovnb
imul
inc
dec
fwait
and
leave
lea
xor
xor
dec
pop
xchg
pop
cmp
mov
cmp
or
mov
aas
inc
xchg
push
sub
movsl
outsl
rcrl
in
repnz
or
int
or
lds
mov
xchg
dec
or
popf
xchg
add
rcll
into
lock
fcmovnbe
add
scas
pop
stc
mov
std
or
sti
out
icebp
lahf
adc
not
mov
fldl
xor
scas
mov
insl
lahf
je
add
mov
clc
jge
mov
adc
test
notl
popf
cmp
adc
or
sbb
xlat
mov
mov
adc
cltd
jp
inc
pop
movsl
adc
lods
xchg
or
insl
fcmovnu
adc
mov
xlat
scas
sbb
jbe
fstpt
out
movsl
or
mov
icebp
cmc
repnz
pop
xchg
in
es
push
dec
imul
iret
mov
or
add
sbb
outsb
adc
add
sar
mov
repz
leave
je
roll
xchg
jbe
stos
popf
insl
leave
xor
jg
testl
negb
and
movl
movsl
ret
sti
nop
dec
notb
stc
mov
shll
scas
xchg
repz
out
lcall
mov
cmp
sti
jae
xchg
sbb
mov
jle
lock
mov
lds
shl
and
out
and
push
nop
js
js
xchg
scas
stc
jecxz
aad
push
inc
ss
mov
adc
mov
rcl
hlt
fstl
cmc
sbb
fcomi
divl
aad
add
out
int3
mov
and
push
aas
fnstcw
insl
adc
sarl
adc
sbb
fdivl
stc
push
jne
ret
or
push
cmp
repnz
sti
xlat
negb
and
push
repz
xor
adc
mov
in
sbb
dec
leave
iret
jne
mov
sbb
fwait
mov
lcall
mov
imul
mov
sub
ret
iret
lods
je
adc
pop
loope
push
adc
cltd
jmp
inc
inc
lea
or
in
mov
add
cmp
leave
mov
repnz
mov
pop
idiv
iret
jbe
in
mov
jo
pusha
inc
mov
call
scas
fcmove
pop
mov
add
dec
ret
sar
popa
jecxz
xchg
cs
xor
scas
fwait
imul
xchg
popf
repnz
mov
push
es
pop
add
jecxz
mov
pop
push
lret
mov
adc
ret
std
pop
jbe
xchg
fstpl
mov
xor
sbb
leave
add
sbb
adc
inc
sub
sti
sarl
mov
push
mov
out
or
xchg
xor
je
sti
scas
mov
or
adc
inc
cmc
adc
or
jg
popf
in
jl
idiv
lods
imul
lds
inc
out
sahf
addr16
mov
dec
aad
add
cmp
adc
add
push
or
sbb
ffree
loope
jle
repnz
popl
icebp
inc
call
xor
xchg
mov
add
cmpsb
jnp
pop
shrb
out
sub
xor
mov
mov
movl
out
jl
imul
dec
jecxz
jae
fnstcw
shll
int
sbb
repz
aad
mov
jns
or
shlb
les
xchg
mov
icebp
jae
fmulp
cmp
dec
cmc
clc
rorl
adc
in
rcrb
adc
setne
jle
pop
xchg
adc
testl
mov
mov
sbb
aad
or
imul
sub
dec
fimull
dec
pop
mov
out
aad
jle
jle
sub
xchg
lret
inc
fisttpll
jecxz
and
dec
pop
mov
icebp
sbb
es
mov
rcrb
mov
sbb
in
loope
adc
iret
repz
lods
repz
sub
xchg
dec
ret
mov
adc
jbe
repz
in
out
dec
or
and
mov
xchg
mov
cwtl
sub
mov
or
dec
in
popf
push
mov
sti
xchg
mov
add
out
cmpsl
ret
shl
mov
flds
jg
xchg
adcl
and
push
xor
add
lds
imul
ja
and
in
rcl
add
ja
movsb
jbe
stc
mov
add
xlat
aas
ret
js
sbb
repz
rcr
mov
add
popa
cmp
adcl
jne
adc
movsl
pop
cltd
popf
mov
aas
adcb
aam
or
adc
cld
enter
lret
cmp
xor
add
sarl
outsl
mov
leave
xor
mov
cmpsl
jg
std
xchg
cmp
mov
lcall
or
in
imul
outsb
and
stc
cmp
or
adc
mov
mov
int3
mov
outsl
sarl
out
jecxz
xchg
sub
pop
push
imul
pop
or
repnz
inc
int
mulb
xchg
pop
xchg
xchg
das
xchg
pop
repz
xor
sbb
mov
and
sub
add
enter
xchg
mov
push
shll
xchg
xchg
in
mov
test
mov
mov
add
lret
jnp
or
push
cltd
in
fidivrs
int
hlt
hlt
out
popf
xor
lock
xchg
mov
fadds
adc
aad
fwait
sbb
icebp
testb
mov
scas
jl
add
int
xchg
or
sub
cwtl
add
sub
mov
jmp
or
ficoms
outsb
add
cmc
jno
mov
out
mov
andl
scas
mov
sbb
adc
data16
lret
ror
pusha
mov
movsb
in
shll
in
les
repz
push
fistl
pop
pop
pop
rcrl
xchg
inc
cmp
push
popf
sub
pop
adc
push
movsl
sub
sbb
xchg
arpl
sbb
and
movq
mov
divb
adc
xlat
leave
adc
rcll
ja
add
aad
rclb
ret
in
adc
lea
xlat
int
iret
sub
frstor
cmp
pop
fldt
add
mov
aam
aas
mov
adc
sbb
fdivrl
adc
mov
repnz
div
sub
ret
ja
fstp
mov
cmpsb
hlt
jbe
add
jmp
std
push
mov
ja
mov
out
sti
iret
xchg
aad
imul
and
jnp
sbb
mov
adc
scas
loope
test
repz
xlat
fwait
pushl
notl
push
push
and
cmpsb
daa
loope
ds
add
aas
sbb
push
sbb
mov
mov
mov
inc
sub
and
or
sbb
fstl
movsl
shlb
repz
icebp
sub
jns
adc
sarl
inc
push
fwait
adc
leave
out
jg
jecxz
fdivs
adc
cmp
add
scas
mov
sbb
add
out
scas
jecxz
popl
ljmp
xchg
rolb
iret
jecxz
mov
adc
aas
mov
push
js
aad
in
ficomps
std
rcrl
and
push
rcl
jae
loope
pop
ret
mov
xor
out
shl
cmovae
xchg
out
in
jno
iret
int
sti
testb
xlat
sub
ret
scas
shll
divl
add
sarl
pop
lret
pop
gs
pmulhw
xchg
cmp
inc
jae
stc
int
add
pop
mov
mov
or
leave
add
sbb
and
in
negl
idivl
int
shrl
push
into
sahf
in
test
jne
inc
mov
xchg
mov
xchg
into
mov
xchg
or
mov
ds
dec
add
and
add
lods
xchg
std
xchg
cmova
push
sub
pop
sub
fs
mov
xchg
cmp
mov
mov
xchg
scas
ds
aas
jbe
int
mov
sahf
mov
test
das
sbb
addr16
xchg
leave
imul
sbb
loope
in
addr16
sbbl
testb
push
lahf
jno
icebp
ret
mov
in
loope
lahf
es
mov
push
sti
aas
ss
in
mov
adc
repnz
sbb
dec
shlb
aas
testl
pushl
loope
mov
sbb
xsavec
aas
sbb
sti
cmp
movsl
mov
sbb
aad
add
and
stc
rcll
dec
mov
jg
sbb
icebp
xor
add
xor
out
xchg
data16
xlat
push
dec
scas
std
push
jecxz
or
or
lcall
add
dec
imul
dec
jno
stc
aad
xchg
fwait
pop
jge
mov
inc
mov
clc
adc
mov
cli
movsl
push
divb
inc
sbb
lock
cmpsb
loope
mov
fwait
les
shrl
mov
sub
lret
pop
xchg
imulb
xchg
sub
insl
pop
adc
in
jecxz
add
out
adc
xchg
or
mov
test
mov
add
cmp
add
pop
in
push
inc
fnstsw
icebp
mov
mov
pop
push
xchg
xchg
lds
inc
pop
daa
fnstenv
adc
mov
ret
retw
orl
je
mov
add
aad
mov
pop
in
mov
or
jecxz
hlt
repnz
fidivs
mov
popf
stc
scas
pop
sti
repz
sbb
push
ret
xlat
pop
pusha
ss
ror
std
adcb
jmp
xlat
mov
outsb
mov
js
pop
sti
add
jl
adc
out
repz
mov
cmpsb
data16
pop
sar
movl
adc
xchg
icebp
shl
cld
adc
add
repz
popf
repz
adc
hlt
out
int
xlat
sbb
dec
sarl
ja
xchg
pop
and
or
outsl
aad
incl
fxch
push
std
inc
add
ret
mov
es
fisttpll
test
lret
add
lods
loope
and
or
stc
mov
leave
fwait
outsb
test
or
sti
mov
aad
adc
mov
movsl
lds
ja
mov
fisubs
dec
pop
rcrl
cltd
xorl
sbb
jb
sbb
mov
outsb
rorl
add
inc
cmpsb
mov
xchg
lret
incl
pop
xchg
mov
cmp
cmpsl
aad
fs
mov
jmp
and
hlt
leave
pop
leave
xlat
cmc
add
rolb
inc
shrb
inc
jg
xchg
popf
jnp
iret
hlt
ss
xchg
push
iret
dec
add
psraw
and
cltd
sti
mov
mov
adc
xchg
mov
lret
stos
mov
cltd
outsl
inc
mov
cs
sbb
fnsave
mov
mov
add
mov
lock
sbb
and
pop
or
or
cmc
or
ret
mov
scas
aad
or
adc
adc
mov
sti
jecxz
sbb
inc
pop
add
testb
xchg
and
mov
iret
jo
adc
sub
out
out
cs
cmp
aad
cltd
mov
aad
psubw
lds
sahf
jb
repnz
cs
loope
in
dec
std
jne
pop
popf
mov
sti
push
cmp
inc
sbb
and
rol
dec
fyl2x
or
in
jo
mull
iret
decl
and
xchg
inc
and
sbbl
movsl
mov
loope
and
mov
fadds
cltd
orl
jne
fwait
or
outsb
push
shr
dec
adc
mov
sbb
ret
int
imul
mov
inc
sub
fstl
mov
mov
cmpsb
or
testl
int
or
mov
adc
loop
aad
add
mov
xchg
xor
movsb
adc
mov
btc
xor
push
insl
mov
pop
lret
stc
push
cmp
jae
out
loope
pop
xchg
mov
ds
or
insb
pop
cltd
sarl
iret
icebp
jb
cltd
and
pop
sahf
sbbl
inc
pop
shrl
popf
mov
add
in
dec
int
andl
dec
leave
fnstcw
mov
cmc
orb
repz
mov
movb
xchg
mov
mov
xchg
push
and
xchg
pop
xchg
stc
jne
or
mov
ja
inc
adc
push
std
or
loope
sbb
mov
pop
aad
decl
int
arpl
xchg
stos
movsl
xor
mov
xor
rcll
push
cmpl
inc
in
ret
or
and
sbb
ret
jmp
inc
sbb
clc
and
lret
icebp
or
mov
leave
loop
or
std
push
pop
imulb
sbb
sub
pop
xchg
shlb
fwait
sar
je
leave
sbb
mov
xchg
mov
stc
shl
outsl
sub
fildl
jne
es
popf
cltd
cmp
dec
inc
pop
cwtl
cmp
inc
jge
and
xchg
add
movsl
cwtl
xor
out
push
inc
stos
shll
adc
fwait
add
movsb
stos
out
inc
and
popf
iret
pushf
and
xchg
xchg
mov
in
nop
adc
or
and
ret
fildl
mov
add
loope
add
xlat
adc
mov
xor
sbb
or
test
pop
add
insb
and
jl
inc
test
in
mov
and
inc
movsl
xchg
adc
setnp
addb
pop
repz
mov
sub
mov
add
inc
or
in
mov
out
mov
push
mov
xor
outsl
ror
xchg
fadd
dec
jne
aas
leave
mov
outsb
add
icebp
mov
and
sbb
mov
pop
or
jl
pop
shlb
stc
mov
jle
ja
psubusw
or
movsl
fadd
push
mov
add
lret
fucomp
movsb
xchg
pop
sub
lock
and
mov
xchg
xchg
or
cmp
aas
stos
sub
xchg
jecxz
xchg
inc
stc
adc
cs
fwait
mov
in
aad
imul
mov
jecxz
mov
pop
xlat
rcl
in
xor
sbbl
out
into
jg
out
mov
fwait
mov
std
mov
cltd
jg
scas
jno
lret
and
repz
iret
push
in
mov
pop
sti
add
dec
incl
mov
pop
loope,pt
js
cmc
sti
movsl
scas
mov
sahf
fsts
inc
nop
adc
mov
add
call
sarl
sub
add
in
push
roll
in
xchg
adc
fwait
xor
jno
std
adc
mov
dec
sbb
push
rcll
push
lds
aas
aas
xchg
sbb
pop
mov
dec
shll
movsb
mov
mov
fwait
push
xor
cmp
mov
or
fldcw
jg
icebp
pop
mov
daa
xchg
fidivrl
inc
fwait
leave
ljmp
movsl
push
and
push
mov
xchg
and
in
xchg
lret
out
xchg
ret
lcall
mov
adc
xor
fwait
or
addr16
out
leave
in
insl
sarl
fucom
lods
lahf
std
les
lods
push
xchg
mov
xor
push
jmp
stc
mov
push
int
push
stc
fildl
mov
inc
adc
push
mov
mov
xlat
xor
inc
data16
imul
mov
dec
test
push
pop
in
adc
xchg
dec
mov
clc
ret
pop
iret
cltd
lret
push
add
lahf
pop
lea
push
mov
xchg
aaa
shl
and
mov
fstl
idivl
cmp
es
mov
cld
addr16
imull
in
lret
adc
xor
xor
add
ret
or
aam
push
outsb
incl
mov
sbb
xchg
mov
or
cmp
rclb
mov
pop
inc
div
in
mov
fwait
cmc
add
or
outsl
mov
push
stc
aas
sub
or
add
outsl
mov
bound
pop
xchg
rorl
mov
data16
lods
pop
adc
repz
repnz
packssdw
stos
out
in
dec
mov
movsb
mov
push
in
pop
mov
in
add
mov
add
iret
xchg
shll
leave
xchg
jns
mov
xor
cmpsb
es
jnp
mov
cli
adc
inc
inc
mov
cli
cmp
lea
sub
aas
hlt
int
aad
or
icebp
sub
mov
sahf
mov
popl
mov
insl
aad
in
cltd
sahf
movsl
clc
mov
dec
jge
adc
mov
jnp
mov
mov
sbb
out
fwait
rcl
pop
mov
jecxz
sbb
aad
and
loop
imul
inc
fwait
mov
lds
icebp
mov
jecxz
adc
sub
mov
out
pop
xlat
xchg
lret
mov
loope
incl
jge
adc
scas
pop
movsl
icebp
mov
jae
ret
mul
fidivl
int
xchg
shll
xchg
cmp
jbe
and
pop
sarb
in
push
imul
mov
jae
or
rcrl
add
cld
icebp
icebp
push
shll
fisttpll
sbb
xchg
mov
fwait
add
push
push
aam
pop
in
xlat
pop
dec
mov
sbb
rorl
ret
push
jne
xchg
pop
or
in
jnp
aad
mov
xor
push
es
cmp
jmp
ja
sbb
and
mov
idivb
leave
icebp
data16
fwait
mulps
xchg
push
test
mov
jne
rcll
mov
data16
mov
or
repnz
iret
mov
enter
aaa
test
dec
imul
adc
testb
sbb
in
cmp
inc
cwtl
or
outsb
sub
aad
rorl
insb
dec
jecxz
es
pop
or
leave
jno
stc
add
add
mov
movsl
jo
xchg
jne
iret
fildl
adc
dec
out
shl
lret
lcall
and
push
in
inc
idivl
pop
int
cmp
inc
cld
and
or
adc
mov
add
cmpsl
sub
jge
mov
mov
repz
js
jecxz
cltd
mov
outsl
jns
xchg
in
movsl
dec
popf
xchg
dec
add
pushl
mov
sbb
jo
scas
push
hlt
push
xchg
ret
xchg
pop
sub
mov
jno
sti
add
scas
sti
push
xchg
mov
or
xor
push
lds
sbb
fisttpl
in
jns
lret
aas
dec
fsubp
cld
rcll
rorl
imul
ss
or
mov
mov
divb
or
call
rorl
addr16
sbb
in
dec
xchg
aaa
neg
pop
or
int3
mov
sub
push
xchg
adc
repz
adc
or
data16
sub
cmc
sub
and
push
sbb
jne
shl
aad
scas
dec
aas
or
xchg
mov
add
dec
call
adc
jnp
mov
jne
in
std
sar
xchg
cltd
jge
out
loope
fcomi
daa
repnz
popf
rclb
push
sbb
rcll
or
test
and
mov
mov
adc
xchg
mov
icebp
mov
fcomps
leave
dec
mov
jg
sbb
jl
iret
js
aam
xlat
xchg
xchg
outsb
push
int
add
adc
loope
xchg
jne
mov
repz
leave
jge
add
aaa
test
outsb
push
outsl
ss
int3
movl
daa
adc
pop
xchg
call
mov
out
repnz
loope
add
ror
push
daa
cmp
mov
push
cmp
xchg
push
mull
and
repz
sbb
insl
fscale
add
popf
popf
rorl
mov
int
dec
loop
sbb
jne
repz
or
pop
jp
iret
inc
testb
sarl
cmpsb
and
mov
fldt
xlat
bound
mov
ds
subb
mov
mov
sub
and
adc
ret
cld
insl
cltd
out
jl
jbe
setnp
fidivrs
fldcw
int
or
test
push
leave
add
popf
or
push
and
jecxz
mul
mov
jns
shll
or
jnp
movsl
outsl
mov
mov
push
inc
mull
and
mov
inc
jo
ret
sbb
mov
icebp
xchg
adcb
mov
mov
sti
add
aas
cwtl
xor
cwtl
hlt
mov
pushf
sarl
insl
inc
sbb
or
or
scas
mov
and
mov
push
std
movsl
mov
fsave
call
push
add
jecxz
or
fisttpll
sbb
and
jecxz
mov
mov
add
push
mov
addr16
dec
pop
andl
jne
int
adc
lret
js
pop
sub
push
cs
xor
in
jecxz
mov
test
and
or
dec
shlb
notl
aas
mov
or
insb
jne
leave
scas
add
fwait
ret
lds
mov
dec
mov
rol
xorl
shl
xor
loope
leave
mov
data16
movsl
xorb
jg
mov
popl
dec
and
and
jnp
ret
xchg
adcl
jo
mov
mov
mov
popa
xlat
xchg
ffree
or
out
adc
adc
pop
mov
movsl
push
mov
mov
adc
sub
push
mov
imul
incb
in
dec
add
push
xchg
pop
or
sti
mov
icebp
test
mov
add
and
jg
fstpl
out
xchg
pop
add
and
and
in
xor
mov
rorl
fstl
arpl
xchg
pop
dec
xchg
xchg
stc
sbb
mov
hlt
dec
decl
lds
xchg
sbb
inc
addr16
rorl
rcll
push
insl
loope
pop
jb
in
add
jnp
adc
repnz
mov
cmc
shll
ret
inc
xorl
outsb
movsb
mov
std
jl
pop
push
xchg
cli
adc
sbb
dec
or
adc
stc
mov
pop
jbe
popf
in
inc
addl
jecxz
outsl
mov
hlt
add
cmp
push
scas
xlat
imul
jno
add
jge
lds
in
ret
sahf
aas
movsl
mov
call
pop
pop
popf
xlat
add
iret
movsl
leave
inc
mov
icebp
mov
cmp
pop
std
pop
sbb
mov
xchg
or
xchg
xchg
popf
add
cmc
leave
adc
push
fstpl
repz
or
ror
xlat
xor
sahf
add
mov
jo
xchg
out
add
or
mov
xchg
sub
mov
ja
pop
scas
in
inc
fnstenv
dec
sbb
fwait
sbb
sub
call
and
mov
push
and
mov
adc
or
mov
adc
sti
add
out
ret
pop
incb
js
cld
in
lock
leave
test
iret
dec
xchg
sbb
xchg
fnstsw
mov
scas
shrb
and
lcall
cmp
imul
les
jecxz
xor
dec
jl
mov
movups
stc
cmpsb
xchg
stos
loope
jle
notb
dec
or
add
jnp
stc
jno
adc
push
frstpm(287
add
or
rcll
mov
xchg
or
mov
mov
pop
leave
cmp
xchg
mov
mov
push
test
cld
aad
ret
je
rcrl
adc
inc
sbb
pop
jle
cmovge
sub
mov
adc
and
stc
push
lds
mov
aas
push
neg
pop
push
rep
lret
movsl
ret
add
mov
negl
jbe
scas
shl
aas
sbb
cmp
mov
cld
mov
xor
pop
adc
mov
xor
loop
push
push
sub
setno
and
xchg
dec
cwtl
mov
imul
add
outsl
negl
adc
mov
push
mov
add
mov
scas
jnp
roll
roll
jp
test
movsl
scas
cmp
xchg
and
in
fnstcw
daa
sub
addr16
cmpsl
sub
jo
cltd
psubw
xchg
aad
pop
push
lods
pop
out
out
sub
and
push
xor
mov
shrl
inc
outsb
out
jecxz
sub
pop
andl
inc
js
clc
add
mov
int3
ret
push
inc
jnp
sbb
mov
jnp
mov
scas
adc
and
into
sbb
popf
orl
fildl
lcall
pop
cmp
in
popf
lds
fwait
mov
and
stc
mov
mov
fistpl
cmp
xchg
adc
sti
xchg
mov
cmp
jle
hlt
bound
pop
mov
cltd
jno
frstor
fs
fwait
adc
or
cmp
sbb
movsl
fwait
mov
mov
mov
pop
test
je
iret
sbb
xchg
shr
ret
and
int
addl
xchg
aad
xor
out
repz
push
ficompl
iret
setbe
push
cwtl
aas
imul
fldl
mov
mov
out
fistpll
and
cmp
pushf
jnp
std
jl
pop
jle
test
daa
cli
mov
out
popf
cltd
sbb
repnz
ss
xor
negb
lods
jmp
xchg
xchg
jecxz
fwait
jg
mov
mov
int
jnp
lret
iret
jg
movl
adc
lcall
xlat
add
mov
popf
xchg
or
add
sbb
std
icebp
leave
xchg
or
in
jp
jmp
mov
xchg
pop
filds
inc
jns
les
fcmovnbe
cmpsl
out
call
xlat
in
rolb
pop
jbe
and
lret
movb
icebp
jbe
and
mov
push
adc
adc
iret
xor
mov
aad
popf
test
mov
or
cltd
leave
mov
lods
mov
xchg
jnp
adc
negb
mov
jns
stc
adc
dec
leave
sti
addl
add
jge
rol
dec
mulb
mov
mov
sbb
in
pop
add
stos
and
fxch
mov
icebp
adc
sti
aad
movsl
xchg
xchg
lds
sbbb
mov
movsl
inc
arpl
push
outsb
leave
imul
and
repz
dec
push
and
es
xchg
sbb
add
add
stc
leave
cmpsb
add
xchg
movsb
xor
in
and
pop
out
sti
outsl
leave
shll
or
xchg
xchg
lahf
loope
outsb
lea
jge
or
mov
add
push
call
ss
adc
add
mov
add
scas
loope
andb
add
xor
in
mov
or
pop
lods
push
mov
testl
xchg
sbb
adc
aad
jne
idiv
sti
xchg
or
jne
movsl
sbb
push
or
fnstcw
xchg
pop
outsl
xchg
lds
leave
cli
mov
add
insl
mov
xor
adc
add
test
notl
test
xor
jnp
pop
pushl
adc
mov
dec
mov
imul
gs
mov
in
loopne
outsb
lock
adc
pop
pop
js
scas
int
pop
add
push
jmp
mov
out
mov
arpl
add
xchg
shl
andb
or
dec
out
jno
mov
mov
xchg
add
mov
mov
fwait
test
ds
ss
pop
inc
mov
mov
jecxz
cltd
dec
sbb
lcall
or
push
mov
xlat
and
rcr
or
xchg
adc
outsl
mov
scas
je
mov
scas
aaa
inc
out
std
hlt
jno
mov
cltd
pop
xchg
lds
mov
sbb
sar
movl
es
ret
cmpsb
data16
aas
mov
fwait
or
xchg
jae
add
sti
sub
mov
fwait
cltd
cli
adc
int
xor
inc
mov
sub
jecxz
fldcw
and
xchg
lods
inc
add
jg
mov
inc
fsts
push
dec
jne
inc
out
fst
stc
fwait
mov
add
jmp
add
incl
sub
fadds
xor
jecxz
add
std
lea
rol
icebp
es
push
cmp
jns
and
bound
add
mov
push
cmpsb
ret
mov
sarl
xchg
xlat
repz
lock
loope
mov
loop
or
jbe
lret
ret
lret
idiv
add
push
jne
sbb
test
lret
mov
pop
xchg
lea
rcl
xor
xor
mov
leave
sbb
mov
mov
std
xchg
in
enter
sahf
stc
in
pop
inc
xchg
repnz
sbb
and
shr
mov
and
divl
popf
into
or
loop
loope
xchg
movsl
dec
mov
insb
iret
in
stos
mov
mov
fmul
addr16
dec
cltd
arpl
adc
outsb
sbb
addl
mov
adc
sbb
je
sbb
adc
std
clc
into
add
loope
cmp
and
js
or
mov
enter
aad
sbb
mov
jg
std
add
cwtl
sbb
ret
mov
jg
leave
mov
imul
push
dec
scas
dec
movsl
repnz
into
nop
mov
outsb
imulb
pushl
jle
imul
std
add
xchg
inc
outsb
repz
fmulp
jae
shll
jmp
aam
sti
out
and
and
mov
add
adc
stc
rcr
dec
jbe
add
repz
push
fldt
mov
lret
dec
add
adc
lds
sti
mov
xor
pop
adc
xor
lea
scas
sbb
or
aad
xorl
test
je
ret
out
stc
or
sub
leave
add
fwait
jns
movsl
rorl
mov
jne
mull
in
mov
lds
adc
pushl
out
mov
lds
shll
xor
mov
push
repz
fdivp
pop
mov
xchg
dec
and
fistpl
sbb
add
or
ret
fwait
icebp
adc
aas
sahf
outsl
and
xchg
sbb
mov
pop
jae
ret
adc
pop
mov
fidivl
jecxz
mov
pop
shll
repz
or
aad
rorl
imul
jecxz
std
push
pop
mov
out
sub
mov
fisttpl
push
addr16
cmc
xchg
mov
xchg
fwait
xchg
and
pop
lds
mov
mov
shl
xchg
adc
pop
and
jne
jmp
popf
mov
cmp
mov
data16
mov
in
pop
xchg
outsl
popf
mov
lds
jge
pop
adc
leave
or
mov
imul
mov
xor
lret
xchg
xlat
arpl
add
outsb
test
xchg
stos
jl
cs
pop
aas
ja
mov
jmp
in
xchg
pop
stos
adc
out
repz
push
push
in
or
dec
lahf
sbb
std
mov
addb
in
leave
inc
jb
fstpt
cmp
push
std
push
xor
sbb
ljmp
sahf
adc
xor
divl
pop
stos
fildl
mov
mov
add
mov
jb
lfs
mov
jae
mov
std
xor
cmp
adc
mov
movzwl
mov
fstl
sbb
mov
xorl
clc
mov
mov
jno
cltd
mov
jecxz
add
mov
stc
fsts
push
jle
cltd
out
inc
or
lea
int
lds
jb
add
mov
add
mov
jne,pt
icebp
repz
or
xchg
fwait
add
int
jne
movsl
notl
or
daa
jno
adc
mov
sub
std
out
cltd
in
call
dec
cmp
dec
rcl
adcb
fdivrl
movsb
cmp
shlb
leave
pop
and
out
aad
stos
int
xor
add
repz
cs
test
mov
fnstsw
mov
adc
jo
movsl
push
movl
adc
xchg
push
ret
lret
xchg
push
xchg
sub
cmp
cmp
shlb
xchg
adc
aad
sub
arpl
sbb
bound
sub
add
std
jb
shrl
and
add
dec
loope
out
sub
mov
repnz
test
ret
xchg
dec
or
bound
xchg
loope
clc
movsl
mov
lds
inc
inc
adc
arpl
lcall
outsb
outsl
decl
lret
xchg
xor
idivb
imull
fwait
jno
xchg
mov
or
adc
dec
mov
cmpl
sbb
popf
notl
sub
or
stos
aaa
icebp
icebp
inc
lods
insl
outsb
aas
lods
out
cmp
lcall
jnp
scas
jl
push
adc
ret
jecxz
addr16
test
xlat
adc
pusha
je
stc
add
dec
std
iret
mov
push
pop
jle
stc
hlt
dec
adc
mov
mov
xlat
inc
xchg
jno
popf
fwait
mov
adc
or
dec
lods
mov
xchg
xchg
enter
ljmp
leave
cmpsb
and
jecxz
add
stc
mov
repz
dec
sbb
icebp
movsl
xorl
scas
mov
in
outsb
fstp
andl
mov
push
lds
leave
lret
mov
cmc
add
push
and
clc
call
addr16
cmp
xchg
iret
sti
xchg
aas
or
jle
mov
negl
mov
lret
fstl
es
movb
and
xorl
cmc
paddw
ret
dec
sbb
xchg
mov
mov
cmpsb
jecxz
std
xor
jl
jb
imull
aas
xor
pop
leave
push
rorl
ret
ja
idiv
adc
adc
enter
daa
shl
arpl
roll
pushf
mov
fisttpll
imul
popf
xchg
cmp
in
data16
adc
stos
pop
mov
add
and
rcll
clc
outsb
or
add
paddq
sbb
jbe
icebp
mov
adc
jae
mov
xlat
rcl
repz
fwait
inc
sub
decl
or
sbb
jae
and
lret
into
fisttpl
push
movsb
mov
dec
mov
leave
fsin
mov
or
add
mov
cld
or
leave
sti
or
inc
mov
mov
lock
xor
movsl
mov
iret
aad
in
fistl
pop
xor
adc
jno
stc
adc
sti
mov
xor
mov
cmp
add
or
fwait
mov
jno
sbb
cmc
cmp
jecxz
and
sbb
sbb
cmp
popf
je
mov
cmp
cmpl
mov
push
divl
sti
mov
mov
adc
or
adc
sbb
cmp
mov
cmc
lds
aad
idivb
and
popa
mul
lds
iret
clc
push
call
mov
aad
pop
movsl
ret
push
xchg
imul
mov
mov
notl
leave
sbb
inc
in
fldenv
loope
aas
cs
dec
out
and
cmp
dec
sub
insl
or
jecxz
pusha
divl
mov
add
test
mov
shll
stc
scas
inc
loope
icebp
ljmp
inc
psraw
cli
pop
xchg
push
and
sub
ds
popf
push
movq
xchg
lock
cmp
adcl
sbb
ds
dec
aam
cld
xor
jg
cmpsb
aaa
je
ret
xor
fabs
stc
mov
outsb
jbe
add
mov
icebp
xchg
push
cltd
std
pop
xchg
push
dec
add
cwtl
sub
sahf
push
sahf
push
push
cmpsb
aad
mov
mov
shll
mov
jnp
int
jne
mov
test
mov
push
rorl
je
sbb
push
rol
icebp
pop
mov
loopne
xchg
test
fidivrl
repz
add
outsb
fwait
jecxz
data16
loop
adc
adc
xchg
mov
add
and
mov
and
xor
loopne
fwait
inc
mov
jecxz
roll
jg,pn
aas
aad
stc
adc
jecxz
jg
xchg
inc
xchg
jle
int
jbe
mov
loop
icebp
shll
jecxz
mov
add
cmp
add
xlat
mov
cltd
jno
loope
mov
fcmovnu
jae
flds
notl
outsl
ret
fwait
mov
jb
repz
cwtl
xor
cmp
insb
or
icebp
or
mov
repz
sub
or
in
shll
repz
scas
or
xchg
xlat
adc
int
jg
popl
jno
mov
sub
dec
or
sbb
or
in
pop
xlat
dec
sbb
hlt
jno
pop
js
stc
mov
sub
adc
inc
ret
pop
inc
outsl
pusha
and
aas
int3
lcall
or
mov
mov
aad
xor
dec
xchg
stc
mov
mov
sbb
cmp
fidivs
loope
xchg
shll
mov
add
repz
lds
jl
add
cmp
xchg
mov
xchg
pop
push
lds
add
lcall
mov
pop
adc
mov
adc
loope
lock
mov
rorb
insl
data16
js
sbb
mov
sbb
dec
or
or
imul
adc
xchg
fs
cmpsl
sbb
rcrl
xchg
cltd
rep
add
popf
icebp
sub
aad
scas
es
aad
or
scas
cmp
js
icebp
mov
dec
imul
scas
out
aas
mov
push
mov
pop
pop
mov
lds
stos
stc
mov
xchg
jns
ret
iret
sbb
dec
push
mov
and
ret
or
ljmp
orl
add
pop
stc
ror
push
cmp
add
sub
xchg
xchg
and
sbb
sbb
enter
mov
mov
mov
xlat
icebp
ret
insb
xor
sbb
mov
cltd
jne
in
xchg
or
adcl
lcall
dec
add
imul
int
test
jle
popf
jbe
scas
ret
mov
bndldx
dec
pop
inc
jae
sbb
es
and
push
adc
add
and
adc
loope
ja
fwait
mov
adc
inc
mov
add
or
adc
shlb
mov
lds
not
cmp
pop
nop
inc
jg
sbb
test
and
stos
and
scas
into
or
dec
jae
fxch
pop
popf
mov
stc
lret
inc
ja
pop
in
leave
addr16
and
stc
jbe
mov
movsl
fldenv
pop
xlat
in
and
fwait
mov
inc
mov
lret
add
push
jecxz
xchg
inc
subl
addl
adc
popf
jecxz
mov
movsb
sbb
clc
xlat
mov
mov
xor
lret
push
lcall
or
cmpsl
popf
jg
xchg
fwait
jp
inc
imul
loop
lock
lret
fistps
mov
stc
ja
aas
mov
aad
xor
jecxz
add
bswap
lret
mov
inc
shll
sub
pop
aad
sbb
xor
jg
or
jge
sbb
je
adc
andb
cltd
mov
repz
fcmovnb
hlt
shlb
aas
jne
sar
mov
xchg
shrl
add
jns
or
xor
sbb
mov
jle
popf
test
mov
lret
repz
sti
dec
xchg
dec
dec
pop
push
jg
out
cmpl
pop
add
sbb
fnsave
cmc
ljmp
mov
aad
sbb
addr16
mov
jnp
stc
jg
repz
jns
cli
add
lret
mov
lahf
push
xchg
aad
jge
shll
adc
mov
xchg
jae
cltd
lea
incl
insb
adc
or
je
mov
fldenv
ret
lahf
xlat
sahf
mov
stc
jle
std
jp
mov
into
xchg
ret
and
mov
mov
adc
jecxz
ret
fstp
or
mov
subl
lea
scas
icebp
rcll
repnz
loop
into
sub
in
sti
imull
and
xlat
mov
ljmp
xlat
adc
sti
lods
dec
lahf
sub
jnp
mov
jl
aad
test
jbe
jmp
add
push
xchg
dec
in
xor
jge
adc
jmp
ja
aas
scas
jecxz
outsl
es
mov
and
jbe
shll
add
jno
mov
cltd
sbb
sub
mov
in
mov
or
icebp
cld
xchg
sar
lret
xchg
xchg
repz
lods
ret
ret
push
stos
in
cltd
add
adc
xchg
push
mov
mov
andl
in
pop
pushf
call
mov
ret
prefetchw
or
aas
adc
cld
stc
mov
repz
aas
jo
add
or
mov
sbb
sbb
in
fstp
lds
push
jg
and
mov
add
pusha
add
in
int
mov
or
syscall
add
testl
out
or
and
mov
or
cwtl
jmp
sbb
mov
mov
cmp
aad
inc
mov
test
adc
jle
std
xor
loopne
mov
outsb
jle
pop
into
jno
mov
xor
mov
mov
mull
sbbl
adc
sub
sti
cmpb
mov
sbb
or
fsts
mov
loope
cld
cld
ja
fwait
sbb
pushf
shll
inc
jecxz
and
push
rol
jp
add
xchg
xor
mulb
leave
fldt
mov
or
dec
ss
iret
icebp
xlat
sub
mov
fisttpll
push
imul
pop
mov
pop
xchg
mov
mov
xchg
mov
es
out
icebp
fxam
in
cmp
aad
push
cmpsl
lods
ret
push
pop
or
shl
cmp
cmpsb
stc
push
clc
mov
mov
insb
xchg
jecxz
repz
xor
lds
stos
xchg
push
dec
and
add
in
xchg
imul
add
and
sti
xor
mov
or
add
popf
cmc
pop
aad
fsts
jg
frstpm(287
sub
repz
addr16
mov
aaa
out
add
and
mov
sbb
mov
cmpb
pop
and
push
or
pop
ror
sti
in
jle
jae
xchg
mov
out
aas
out
dec
repz
daa
mov
sbb
cli
cmpsb
adc
mov
push
mov
jg
frstor
or
lods
lods
and
inc
adc
out
and
leave
in
mov
xchg
mov
icebp
lret
es
mov
cmp
stc
fnsave
adc
mov
ljmp
leave
or
mov
repz
inc
popa
test
add
cmp
stc
and
add
loope
mov
jne
pop
clrssbsy
repnz
or
adc
mov
mov
out
fwait
mov
xor
cmc
sbb
sub
leave
into
hlt
dec
repz
cmp
clc
cmp
add
adc
push
adc
movsl
jnp
or
xchg
xchg
add
mov
xchg
out
cmp
gs
outsb
add
aad
adc
into
decl
and
fstp
or
aas
jbe
out
stc
mov
adcl
int
jg
jne
xchg
iret
pop
psrlq
pushf
xor
fwait
sarl
fistpl
cmpl
aad
mov
ja
mov
movsl
popf
js
test
je
add
fld
push
or
cld
or
lds
fisttpll
js
faddl
mov
mov
iret
in
gs
leave
out
test
jne
pop
cltd
pop
fwait
sbb
and
jg
or
push
mov
xor
in
mov
imul
ja
repz
hlt
mov
andb
jbe
icebp
pop
xchg
add
rcl
scas
divb
mov
sbb
lock
cmp
xchg
shr
or
fistpl
data16
rcll
mov
add
sbb
adc
or
xchg
icebp
or
stc
hlt
dec
ret
mov
add
mov
sti
jnp
iret
xchg
pop
dec
pushf
pop
lcall
or
fstpl
int
sbb
cmpsl
jbe
notl
cmp
adc
jo
repnz
lret
inc
leave
inc
xchg
aad
cs
sub
movsl
adc
std
idivl
mov
sub
ss
dec
add
iret
mov
mov
pop
sarl
mov
fistl
roll
insl
test
lds
sahf
ja
fnsave
adc
lret
stc
xchg
imul
lret
vfrczps
jmp
jns
adc
xchg
popl
cltd
cmp
pop
testl
jle
movsl
adc
jno
adc
repnz
fldl
adc
popf
xchg
push
lods
aad
mov
or
leave
scas
mov
or
adc
mov
divb
mov
outsl
xor
add
lcall
dec
imul
shll
incl
out
es
ss
mov
popf
lret
es
arpl
adc
dec
mov
js
xchg
stc
pop
jg
orl
fwait
push
mov
and
inc
outsl
pmulhw
cmc
dec
negl
cmp
sbb
popf
xchg
pop
repz
mov
adc
xlat
mov
js
scas
clc
cmpsb
mov
in
cmp
and
xchg
and
mov
loope
in
pop
test
pop
jbe
lret
mull
movsl
mov
push
inc
aas
add
pop
sbb
fidivrs
shrl
cmp
mov
jle
leave
shrl
jo
jmp
xchg
fidivrl
sub
dec
test
or
adc
shl
loopne
or
hlt
mov
and
add
insl
inc
cmp
aad
sbb
cmp
mov
mov
cmp
fdivl
aad
inc
js
jbe
fstpt
mov
jne
out
adc
add
fldenv
mov
jecxz
pop
hlt
inc
ret
rcll
mov
addl
js
lfs
mov
lret
les
repz
push
rcll
mov
movsl
data16
icebp
cmp
int
jp
xchg
cltd
enter
scas
jns
cmc
mov
cltd
pop
stos
adc
ret
add
and
popf
mov
jnp
pop
sti
and
mov
je
rcll
loopne
in
loope
cmp
or
mov
mov
or
pop
leave
lret
mov
jbe
add
in
jae
fnstcw
dec
jae
int
leave
or
mov
sti
shlb
fs
std
lcall
cmp
dec
bnd
mov
adc
aad
popf
xlat
inc
mov
jae
call
stc
push
adc
mov
leave
ds
nop
sub
add
jbe
adc
mov
jg
xchg
sbb
repz
fdivl
adc
imul
movsl
dec
mov
mov
xchg
or
notb
jmp
popf
mov
xchg
sti
or
out
clc
mov
add
jecxz
mov
cld
call
sti
or
adc
data16
nop
push
in
xchg
push
je
dec
lret
and
jp
jbe
jle
jo
aad
inc
lds
mov
or
xchg
lea
in
rolb
mov
loope
cmp
jecxz
leave
cmp
mov
xchg
sbb
fcomi
jbe
mov
dec
in
dec
rcrl
in
mov
or
xchg
lods
dec
inc
aas
jg
mov
outsb
sbb
mov
mov
out
jmp
fucom
popf
xchg
in
xchg
int
sbb
and
imul
and
add
jno
mov
in
ja
aas
int
sbb
scas
xchg
push
push
sub
rcrl
std
mov
ret
aas
sbb
int
data16
sarl
out
dec
mov
lahf
insb
jle
inc
or
jge
loope
xchg
and
sti
xor
xchg
pop
jne
mov
mov
lock
mov
mov
add
or
sub
sub
xchg
fnstcw
enter
add
jb
negl
cmpsb
cmp
jnp
fwait
loope
push
push
mov
pop
add
adc
xchg
mul
mov
pop
jecxz
pushf
cmp
lds
pushl
hlt
addr16
loop
bound
jle
or
popf
incl
fcoms
sbb
aas
aad
jg
fucomi
jbe
repz
sbb
push
and
jno
xchg
or
sbb
mulb
sbb
pcmpeqw
sti
mov
iret
cltd
xlat
cmp
push
jno
inc
and
cld
push
jl
dec
jmp
mov
aad
xchg
mov
sarl
xor
sahf
scas
or
cmp
aam
lret
cwtl
es
push
stc
mov
ss
inc
stc
lret
sbb
mov
adc
shll
add
mov
rcrl
mov
push
xor
xchg
pop
and
add
mov
popf
mov
out
ret
lods
xor
jae
int
shll
fstpt
mov
add
bnd
xorb
or
mov
shll
fstpl
pop
frstor
ja
sbb
outsb
shlb
rorl
push
jne
lds
push
shll
daa
or
leave
mov
xor
sub
xchg
popa
sbb
test
adc
sbb
xchg
incl
aas
cltd
or
or
insb
fsts
jecxz
loope
notb
cmp
rorl
cmpsb
loope
jns
dec
icebp
add
xchg
popf
scas
leave
cmp
lds
mov
and
push
in
pushf
scas
fsubr
imul
dec
cmp
mov
adc
fnsave
dec
xlat
mov
out
pop
sbb
loope
mov
outsb
mov
lcall
jbe
adc
mov
xchg
rcl
cltd
jge
shll
lret
inc
scas
add
push
adc
mov
pop
cwtl
cmpsb
addr16
add
ja
sbb
seto
test
adc
and
aas
in
cmp
xchg
add
mov
roll
mov
add
jns
sbb
icebp
pop
adc
neg
adc
inc
mov
repz
sbb
push
xlat
movsl
jg
in
iret
lds
loope
mov
leave
mov
dec
aad
dec
rol
jge
call
mov
addr16
repz
aad
pop
cltd
scas
xchg
imul
mov
inc
dec
movsb
adcl
imul
sbb
pop
into
int
lds
or
roll
mov
jle
in
or
repz
jo
std
out
adc
lods
push
add
adc
and
xor
mov
shll
ffree
add
lcall
or
mov
jno
or
mov
clc
or
xchg
cmc
rcl
mov
dec
cld
imul
cmpsb
iret
fstpt
mov
push
sar
shll
std
sbb
inc
dec
pop
xchg
push
in
clc
fwait
dec
jg
sahf
das
push
or
aas
mov
cmp
addr16
mov
ret
mov
adc
push
cmpsl
jge
rorl
mov
std
inc
jnp
fptan
addr16
mov
lock
loope
add
popf
idiv
outsb
jb
aad
stc
mov
sbb
mov
fwait
or
jp
call
leave
hlt
insb
fwait
aad
mov
fs
jns
mov
movsl
div
xchg
xchg
fwait
xchg
xlat
mov
leave
or
insl
loopne
pop
jb
repz
jp
popf
mov
dec
mov
and
insb
in
sti
pop
cltd
fcomps
adc
ret
push
adc
ss
aas
xor
fincstp
ret
jecxz
stos
aaa
aam
mov
mov
movsl
push
pop
mov
xchg
sahf
ret
es
out
add
mov
repz
cmpsl
and
in
aas
iret
xchg
add
imul
jbe
frstor
movsl
out
dec
aad
cmp
adc
nop
dec
or
shll
add
sbb
out
sbb
in
mov
in
stos
out
dec
shld
jg
cltd
mov
jbe
fistpl
adc
cmc
in
mov
mov
jge
cpuid
out
jle
pop
in
mov
push
fstps
shll
and
data16
popf
xlat
push
lds
data16
rcll
jecxz
adc
in
movsl
cmpsb
in
xchg
or
fwait
ss
xchg
mov
rorl
popf
imul
xchg
xchg
scas
xchg
in
xchg
sbb
lea
or
cltd
mov
pop
pop
xchg
mov
jns
mov
sti
std
sub
add
fst
and
roll
call
stc
repz
sbb
pop
cltd
adc
mov
clc
and
leave
and
mov
popa
mov
sbb
inc
leave
push
add
ss
cmp
sbb
jg
shr
cwtl
mov
jnp
in
add
pop
adcb
ds
aaa
jle
pop
js
jp
xchg
xchg
or
rorl
lds
jmp
add
jne
mov
in
movsl
es
and
push
push
cmp
push
mov
call
jb
frstor
or
std
lods
dec
mov
push
shll
sbb
fsts
pop
jns
or
lds
ror
pop
or
repz
cmp
mov
jle
pop
loop
test
test
jg
adc
icebp
fstps
andb
shll
cltd
sub
sbb
jae
fidivs
std
data16
mov
sub
jb
int
ret
pop
test
stos
xchg
pop
dec
sti
cmp
xchg
mov
xor
xor
loope
cmpsb
lock
test
std
adc
inc
adc
mov
ljmp
movsl
prefetch
imul
rcrb
scas
or
pop
push
cmp
mov
fcomps
sub
jg
cmp
out
mov
idivl
or
jg
mov
mov
xchg
mov
cmp
mov
sbb
and
mov
lock
movsb
loop
cmpl
int
ret
and
flds
incl
lcall
and
and
mov
cltd
icebp
imulb
mov
jmp
or
cmc
pop
int
es
adc
pop
xchg
mov
jb
mov
or
push
scas
out
outsb
add
sbb
movb
mov
jg
mov
pop
fwait
cmc
in
or
fcompl
xchg
jbe
ljmp
mov
mov
mov
leave
stos
push
jmp
lock
in
outsb
push
movsb
push
push
jns
add
add
lds
mov
jo
cwtl
xchg
adc
and
or
mov
roll
push
sub
rol
aad
mov
adc
scas
out
pop
adc
vmread
lcall
jl
mov
fimuls
xchg
sbb
xchg
in
xor
jg
add
jge
aas
cld
add
sbb
sti
scas
ret
mov
std
and
je
xchg
in
mov
mov
or
cmp
movsl
sbb
repz
fsts
xchg
cmp
xchg
sub
inc
icebp
push
lahf
add
mov
mov
std
loope
ds
jbe
mov
les
or
adc
mov
dec
popf
fnstcw
cld
mov
daa
dec
mov
insb
out
cmp
es
loope
or
jle
jle
outsl
scas
xchg
shll
mov
out
aas
or
and
repnz
xchg
sbb
addr16
enter
inc
dec
out
stos
add
mov
sub
jno
leave
stc
cmc
xchg
repz
in
and
sbb
out
jnp
shll
and
mov
inc
mov
xlat
jmp
sahf
loope
push
adc
jg
outsl
lret
or
xor
pop
jecxz
icebp
xchg
fwait
mov
sti
movl
loope
push
adc
jg
adc
lret
mov
inc
xchg
mov
push
add
ss
les
clc
sarb
cwtl
and
je
lret
cs
imul
mov
xlat
and
pop
jne
add
aad
add
adcb
xor
xchg
andl
out
enter
and
lods
mov
mov
mov
xlat
or
and
out
sbb
inc
add
push
mov
mov
xchg
lret
ret
icebp
sub
fisttpll
jb
aad
lcall
mov
in
add
scas
cmc
icebp
aad
fwait
pop
push
jae
xchg
mov
mov
cmp
sbb
or
repnz
mov
out
flds
jecxz
push
adc
mov
cli
setno
loope
mov
lock
push
and
std
mov
sbb
or
sahf
sbb
lret
xchg
mov
cwtl
test
icebp
jo
xlat
mov
xchg
rcll
mov
jae
stc
incl
int
js
scas
add
stc
movsb
in
sbb
jae
sbb
mov
cmc
sub
rcrb
mov
outsb
add
pop
in
jae
seta
xchg
push
outsb
mov
push
jnp
movsl
xlat
js
sbb
repnz
scas
xor
and
test
shl
out
lds
stos
push
jne
and
push
bt
lcall
insb
loope
mov
les
leave
cld
stos
imul
aad
addr16
in
xchg
mov
icebp
imul
jae
sbb
repz
pop
scas
adc
loope
jp
dec
pop
pop
add
jecxz
pop
lds
dec
adc
jle
pop
xor
push
sbb
movsl
cmp
ja
aad
mov
bound
f2xm1
leave
scas
repz
call
adc
rcll
jno
in
std
mov
lret
popf
push
mov
and
inc
xchg
or
sbb
sub
fwait
pextrw
outsb
xor
add
adc
adc
mov
add
mov
movsl
popf
pop
xor
mov
jb
rcll
mov
sbb
out
shll
xchg
add
loope
popf
pop
mov
push
push
pusha
into
cmp
ret
lret
loope
pop
aas
negb
jle
sbb
xchg
or
dec
js
mov
roll
jno
cmp
addr16
cmpsl
lea
or
mov
in
std
repz
ret
rcrl
push
push
dec
sti
xor
jge
lds
fldcw
push
dec
add
addr16
inc
iret
cltd
int
es
or
xchg
add
mov
adc
sti
shll
divl
pop
stc
mov
or
aad
add
push
xchg
pop
hlt
or
xlat
ret
aas
lar
or
sbb
add
lods
jg
divl
ffree
cmc
xor
mov
icebp
push
mov
cmc
jbe
add
leave
in
cmp
in
cmp
sti
sbb
jl
mov
jnp
popf
enter
std
scas
push
dec
xchg
mov
mov
test
stos
and
aaa
add
sub
stos
adc
pushf
rorb
inc
mov
jno
xlat
xchg
mov
mov
mov
fstps
test
push
popa
pop
push
sbb
int
push
sbb
in
std
add
scas
mov
push
mov
fisttpl
lret
enter
cld
xchg
mov
xor
leave
xchg
jb
sbb
xchg
dec
inc
xor
jmp
push
icebp
rcr
insl
sbb
repz
inc
fwait
sbb
or
scas
shr
xchg
xchg
es
scas
adc
pop
jecxz
int3
or
pushf
movhps
into
mov
sbb
lret
cmc
inc
xlat
add
outsb
movsl
jecxz
repz
xchg
add
shll
jl
mov
xchg
dec
xor
mov
les
orps
fadds
push
loop
gs
rcll
xchg
adc
fcmovne
lds
xlat
lea
add
testl
pop
and
repz
fisttpl
push
sbb
sti
inc
mov
es
add
aad
mov
jecxz
dec
aas
adc
push
inc
and
out
cmpsl
cmp
sbb
lret
sarl
cmpsb
gs
fcomi
or
lds
jno
xchg
adc
mull
cmp
in
add
fstps
addl
scas
lea
pop
fwait
inc
fldenv
test
dec
addr16
sti
shr
cmpsb
inc
repnz
or
sbb
pusha
popf
aad
cld
stos
push
aaa
nop
dec
mov
dec
cmc
leave
pop
lret
push
mov
xor
jle
repz
mov
jbe
loope
scas
inc
div
dec
xchg
lahf
push
fldcw
jmp
xchg
inc
dec
lret
leave
fwait
xchg
mov
or
aad
inc
cltd
add
xchg
test
and
lret
adc
add
jno
adc
and
je
or
icebp
mov
xlat
lcall
popf
fisttpl
jae
or
test
sub
loope
jne
int
mov
sbb
lret
icebp
jb
xchg
inc
imul
fwait
lret
mov
lds
jecxz
adc
push
cmp
or
mov
cltd
push
fwait
cmp
inc
in
lds
sbb
pop
or
pop
dec
and
repz
shll
loope
aas
inc
loop
out
and
xchg
cld
xor
sub
pop
repnz
fcomi
fucom
xchg
es
sub
and
subl
test
out
cld
xor
adc
fildl
xchg
mov
icebp
mov
push
mov
cmpsl
xor
xor
mov
arpl
sub
mov
or
stc
xor
scas
ret
lds
prefetchwt1
xor
adc
orl
xchg
aad
sarl
leave
je
sbb
mov
loope
pop
and
mov
adc
xor
mov
pop
mov
xchg
pop
hlt
push
std
mov
enter
in
cmpsb
roll
sbbl
scas
jecxz
dec
iret
rcr
sti
mov
icebp
in
or
pop
jo
add
fwait
insb
repz
je
int
add
nop
xor
popf
xchg
hlt
loop
hlt
xchg
fstl
jne
add
push
repz
or
xorl
out
inc
divl
test
push
lds
mov
leave
mov
outsb
sahf
or
out
stc
cmpl
aas
xchg
mov
or
add
dec
sub
add
mulb
scas
movsb
or
int
mov
sti
enter
mov
jb
rcll
cmpl
jns
popf
add
repz
adc
es
ss
ret
prefetchwt1
es
iret
or
and
mov
ja
pop
xchg
pop
or
leave
add
sub
jb
stc
mov
dec
fwait
push
lds
inc
out
dec
loope
shll
sti
rcrl
jg
scas
les
xorl
dec
sbb
and
dec
loope
sub
in
aaa
sub
leave
xchg
jg
fstpt
mov
pop
xchg
outsb
fimull
push
jp
loop,pn
outsb
cwtl
mov
ja
rcr
lahf
ss
adc
mov
sbb
outsl
rcrl
outsl
add
add
mov
xchg
scas
leave
dec
std
dec
mov
push
in
jge
jo
mov
jbe
pop
int
stos
or
add
lret
mov
out
adc
mov
popf
adc
ja
rcrl
icebp
aad
fcoms
sbb
xchg
std
ret
xor
cmpsb
fdivrl
enter
shlb
mov
rcll
repz
mov
xchg
mov
dec
movups
or
aad
aas
or
pusha
jns
sti
sbb
enter
repz
ret
aas
dec
popf
xchg
xchg
testl
icebp
mov
jecxz
ljmp
fisttpl
xlat
js
clc
adc
rorl
addr16
add
cltd
adc
outsb
sub
mov
out
mov
insl
mov
icebp
mov
and
rcll
inc
xor
in
push
mov
lds
icebp
push
cwtl
movsl
mov
inc
mov
outsb
xchg
xor
xor
add
mov
imulb
mov
pop
cmp
cmp
add
mov
js
fnstenv
mov
mov
adc
cs
ja
shll
push
js
leave
ret
inc
push
ja
add
xor
inc
mov
int
leave
lret
movsb
repz
lock
popf
sbb
aad
cmpsb
jecxz
fwait
jge
push
int
pop
xchg
xchg
add
sbb
xchg
imul
loope
adc
stos
rcl
pop
in
xchg
adc
inc
push
cmpsb
jg
fstpt
div
iret
sbb
xchg
push
push
into
and
ret
ja
mov
add
test
ja
adc
mov
sbb
jno
pop
fwait
and
cmp
add
jno
psrlq
repz
lcall
loope
hlt
mov
xchg
pop
xchg
adc
rolb
mov
add
inc
cwtl
cmp
jae
mov
mov
and
cmp
inc
scas
ret
std
jmp
xchg
mov
lcall
aas
mov
popf
mov
jns
pop
sbb
push
movsl
adc
sub
adc
pop
sbb
repnz
fisttpll
ja
mov
jle
or
push
mov
xchg
icebp
data16
clc
add
fstl
outsb
mov
push
bt
xor
add
xchg
or
jecxz
xchg
rcl
pop
mov
mov
mov
jae
push
rolb
ror
push
adc
xchg
test
jbe
lods
loope
outsb
cmpsb
fimuls
enter
mov
ret
add
iret
roll
lds
xchg
lahf
es
adc
out
popf
mov
neg
lds
icebp
xchg
cli
cmp
int
cmpsb
sub
pop
mov
jmp
cmc
inc
mov
add
sub
fisubrs
and
jnp
add
loope
mov
xlat
push
mov
repz
xchg
scas
adc
cltd
xchg
aas
adc
ljmp
lahf
adc
cltd
sub
xlat
dec
or
frstpm(287
inc
add
add
sti
mov
sub
mov
pop
mov
fstl
sub
adc
test
mov
mov
xor
lret
jecxz
outsb
sti
sbb
pop
mov
pop
icebp
pop
stc
xchg
popf
mov
xchg
sbb
pop
int
in
sbb
sub
xchg
cld
mov
repz
dec
push
leave
outsl
and
je
call
hlt
inc
and
icebp
jmp
adc
add
into
int3
push
ret
xchg
push
push
pop
adc
cmp
fldt
mov
add
ret
popf
xchg
and
pop
lret
pop
imul
and
ja
scas
pop
ds
outsb
or
fsincos
jb
pop
sbb
xchg
imul
xchg
push
push
in
xorb
mov
iret
fisubs
dec
pop
aad
jmp
xor
iret
subl
fcomi
js
sub
loope
out
out
mov
in
add
fxch
mul
aad
dec
or
in
mov
xchg
mov
xchg
mov
inc
jne
mov
cwtl
mov
sti
out
mov
fidivrl
dec
sbb
xor
fsts
imul
lds
adc
sbb
add
jecxz
out
xchg
popa
insl
repz
dec
cwtl
xchg
call
popf
jge
or
mov
jb
sbb
add
fsts
repnz
out
push
xor
xchg
rcr
push
mov
or
lock
mov
jno
mov
adc
mov
popf
xor
sbb
mov
xor
add
jle
xchg
jo,pn
stc
sbb
cmp
xor
ja
or
imul
sbb
mov
adc
or
pop
adc
fst
shll
rcll
int
mov
pop
sar
sarl
imul
scas
mov
repnz
jl
popf
adc
xor
xchg
xor
hlt
out
or
cmpsl
shrl
and
push
push
daa
mov
or
popf
add
lock
lahf
jno
ret
roll
push
into
jne
pop
out
and
lret
or
and
leave
mov
add
movsl
pop
fists
and
ja
rcll
xchg
jbe
adc
sbb
dec
sub
cmp
jg
mov
pop
leave
add
and
ror
mov
mov
pop
and
je
in
pop
xor
push
mov
or
sub
cs
pop
daa
fwait
lods
stos
xlat
fcoml
mov
pushf
in
pop
xchg
cli
in
add
outsb
xlat
rol
push
shlb
sub
stc
pushl
mov
mov
popf
mov
outsl
cmpb
cmp
movsl
jl
jl
xor
jne
fnstcw
ret
mov
rol
adc
sbb
mov
enter
inc
push
adc
shll
mov
jb
dec
sbb
shrl
pop
pop
xchg
jns
dec
jo
icebp
push
dec
xchg
mov
aad
stc
iret
imul
mov
in
into
daa
push
add
lods
fstp
fwait
push
adcl
adc
lds
or
cmpsl
sbb
int
adc
movsl
mov
shll
pop
cmpsb
mov
orl
xorb
scas
leave
repz
adc
popa
or
jns
lret
test
mov
mov
cmc
xchg
out
mov
andl
jl
mov
and
jecxz
imul
sti
sub
or
push
cmp
pmulhw
sbb
jecxz
lods
inc
and
mov
push
xchg
sti
push
xchg
bnd
or
and
add
ret
in
mov
clc
or
cwtl
xchg
icebp
sub
jecxz
mov
push
out
and
sarl
out
jmp
in
cli
or
mov
and
pop
mov
and
lret
sub
leave
add
cltd
mov
cmp
and
adc
xchg
test
aaa
xchg
and
leave
adc
sti
pop
or
cld
ret
lock
mov
mov
out
cmp
mov
lods
mov
hlt
sub
push
gs
sbb
in
test
test
lock
xchg
mov
add
and
lret
outsl
pop
and
cltd
xchg
xchg
pop
cmpsl
mov
outsb
inc
enter
jg
dec
dec
mov
hlt
jae
xchg
stos
mul
movsl
adc
pop
into
mov
sbb
ret
fwait
mov
sbb
popf
aas
aaa
inc
mov
jmp
shl
mov
sbb
mov
mov
adc
push
mov
adc
xchg
in
in
call
jne
iret
incl
cltd
push
call
cmp
add
imul
fnstenv
movsl
mov
adc
cmpsb
int
std
sti
frstor
adc
mov
xlat
mov
movsb
xor
or
cwtd
idiv
cmpsl
mov
and
rolb
mov
xchg
mov
jecxz
sbb
add
jbe
adc
vmulsd
pop
cltd
lret
dec
inc
into
pushl
icebp
pop
xchg
popf
iret
andl
negl
flds
xchg
sbb
rcrl
scas
mov
and
pop
fstpl
stc
mov
pushf
xor
and
mov
movsl
mov
mov
aad
adc
mov
fldenv
xchg
negl
stc
ss
loope
sti
mov
push
xchg
in
adc
hlt
xchg
sbb
call
leave
xchg
adc
sti
movsl
cmc
mov
jecxz
dec
or
xor
popf
jae
mov
cmpxchg
xchg
lcall
sub
outsb
adc
mov
jbe
xchg
fsts
aas
mov
int
fldt
add
pop
dec
std
pusha
and
icebp
rcrl
adc
xchg
push
bsr
scas
test
sbb
add
add
pop
mov
push
push
sti
mov
dec
mov
sti
es
mov
jnp
leave
iret
jb
scas
jge
xchg
mov
js
add
mov
imulb
sbb
mov
adc
push
jae
xchg
or
incl
repz
add
mov
aad
sti
fwait
stc
mov
aad
xchg
decb
jo
mov
outsl
fwait
xlat
mov
mov
cli
aas
adc
and
or
js
popf
lret
cltd
add
cmp
cmc
arpl
rcll
arpl
adc
lcall
pop
mov
cltd
jbe
and
std
cltd
push
dec
loope
sarl
inc
pop
test
adc
pop
jecxz
dec
ss
rcl
jo
in
sbb
lods
pop
jle
add
lock
push
or
xchg
aad
or
add
movsl
xchg
icebp
cmp
fnstenv
and
mov
mov
xchg
jl
scas
dec
sti
pop
hlt
inc
sti
push
sub
push
and
xchg
push
and
in
pop
add
arpl
xchg
mov
mov
test
test
test
in
mov
jecxz
imul
sub
sub
mov
adc
adcb
inc
movsl
fisubs
test
sbb
stc
sbb
xlat
pop
popl
jp
xchg
popf
lahf
and
ss
mov
sbb
movsl
enter
cmc
pop
xchg
fwait
sub
xchg
test
neg
jg
ja
sbb
xlat
xor
xor
mov
out
pop
aaa
lcall
xor
aad
sub
cmp
or
ds
mov
cli
scas
jge
loope
or
mov
add
aas
cmp
jge
mov
scas
jge
test
add
insl
add
inc
ret
data16
push
or
subl
fwait
mov
jae
mov
imull
enter
out
xlat
mov
sbb
jecxz
psubw
or
cmpsl
and
jle
mov
push
dec
mov
leave
addr16
or
mov
mov
jl
jge
sbb
jo
xchg
sbb
jl
xchg
jbe
or
xchg
leave
jecxz
push
cltd
dec
in
popf
pop
rcll
mov
sub
xchg
and
mov
lret
xchg
adc
fistl
adc
lret
xchg
add
jmp
jae
add
mov
ss
cwtl
std
or
cs
cmp
mov
test
inc
out
sbb
xlat
push
and
jae
je
mov
jle
and
push
mov
adc
outsb
mov
cli
testb
mov
sarl
bound
testl
mov
xchg
push
ljmp
mov
std
inc
int3
dec
xchg
cmp
pop
movsl
push
ficoms
int
mov
jbe
outsb
divl
push
sub
popf
mov
rorb
movsl
push
fnstsw
pop
fistpl
es
sar
icebp
jno
ret
pmullw
push
cmpsb
or
lds
or
sbb
sti
xchg
jg
mov
jno
and
cmp
inc
or
sbb
mov
xor
divb
frstpm(287
and
cmpl
iret
ja
mov
xchg
jg
pop
in
cmp
mov
mov
test
ss
add
repnz
xchg
sbb
pop
sbb
jle
jno
int
adc
cltd
mov
add
icebp
shrl
push
adc
enter
out
repz
add
loope
sub
imul
aas
leave
or
gs
xchg
movsl
mov
and
sahf
mov
test
ja
fwait
inc
out
lock
xchg
shll
outsb
jno
testl
imul
popa
sub
enter
add
cmp
fucom
roll
add
movsl
jno
mov
jle
xor
adc
notl
cmp
fdivs
cltd
adc
inc
rcll
xchg
test
adc
testb
popf
xchg
in
out
cs
lods
xchg
add
dec
addr16
mov
mov
adc
les
pop
xchg
ja
mov
fildl
icebp
mov
lahf
rorl
push
mov
je
pop
adc
icebp
lds
xor
aad
cmp
jne
scas
mov
xchg
push
fwait
mov
xchg
jp
mov
xchg
jne
dec
mov
xlat
out
shll
xchg
mov
dec
out
sbb
jge
and
mov
jge
sbb
mov
sbbl
in
jnp
jbe
movsl
pop
mov
mov
adc
mov
std
push
jl
jb
mov
aad
and
and
adc
hlt
gs
mov
or
mov
jle
xchg
add
sbb
xchg
aas
int
std
or
andl
cltd
xchg
or
mov
mov
inc
fwait
mov
adc
xor
aaa
loope
test
mov
mov
mov
jg
jno
pop
mov
xlat
jp
sahf
xor
test
repnz
divb
popf
push
fldenv
test
adc
pop
dec
bnd
adc
mov
xor
and
jp
into
outsb
mov
loope
shll
mov
rcrl
lock
xchg
mov
in
das
mov
adc
sti
xchg
mov
fldl
pop
stos
jl
jo
int
sbb
js
push
xchg
testl
popf
adc
sbb
add
mov
cmc
sub
pop
sub
sbb
sbbl
mov
mov
sbb
dec
jns
lea
xchg
mov
mov
dec
rcll
adc
in
incb
xchg
aas
xor
adc
rol
idivb
pop
jnp
std
vcvtsi2ssl
xor
xor
cmc
push
sti
adc
es
roll
loope
ds
or
daa
in
add
shll
notl
xchg
adc
sub
scas
xlat
add
es
rcr
movl
xchg
inc
aad
mov
pushf
jl
mov
mov
mov
or
adc
mov
iret
lods
pushl
es
jge
or
or
cmc
add
roll
mov
jecxz
shlb
push
std
shl
sti
shl
orl
ja
mov
xor
sti
lds
sbb
rcl
xchg
loope
or
test
aas
or
pop
xor
rcll
add
fwait
or
mov
cmp
sti
aaa
out
jle
mov
lfs
dec
add
jne
vpsllw
xlat
push
icebp
jmp
std
cmp
gs
mov
xor
lret
add
jle
dec
testb
shr
inc
cwtl
jg
adc
add
adc
push
iret
mov
jno
mov
adc
ret
add
jno
add
jno
mov
add
mov
pop
repz
adc
aaa
mov
fnstcw
je
cmpsl
mov
xchg
scas
push
push
aad
xor
divl
cmpl
add
in
cmp
dec
aam
rorl
in
rorl
sub
pushf
add
xchg
adc
mov
iret
and
mov
add
lds
xchg
stos
icebp
aad
sbb
lods
inc
fidivl
sti
cmp
insb
push
inc
xchg
and
or
loope
adc
lcall
into
dec
icebp
jmp
push
xchg
jns
ror
fstpt
and
cwtl
push
sbb
jno
aas
sti
int
loope
movsl
out
jo
mov
rorl
orl
sub
dec
push
iret
jg
xchg
jne
mov
and
jl
xor
mov
mov
sti
mov
mov
cmp
popl
jge
fstps
fwait
push
negl
inc
and
roll
sbb
addb
mov
jge
bound
addr16
mov
mov
sub
pop
jbe
lret
add
cmp
aad
cmp
add
xchg
leave
mov
stc
lret
iret
xlat
add
js
mov
mov
aad
push
mov
pop
std
imul
aaa
movsl
pop
xchg
push
daa
in
adc
out
xchg
sub
xchg
or
rol
mov
adc
addl
jge
sbb
repz
cmp
and
call
mov
mov
sbb
mov
out
arpl
add
or
mov
movsl
xlat
and
xchg
fsincos
lods
lcall
sbb
int
jno
cs
out
inc
cltd
iret
leave
mov
mov
mov
mov
mov
lret
andl
cmpsl
adc
xchg
aas
jnp
sbb
js
push
repz
mov
iret
rol
mov
scas
std
es
or
fiadds
xlat
mov
sbbb
cld
stc
jae
icebp
aad
or
dec
rcrl
fstp
push
jp
sbb
cmp
xor
mov
addr16
jno
repz
icebp
imulb
movl
cmpsl
jnp
and
mov
xchg
test
imul
add
int
rcrb
icebp
mov
jno
lds
fldcw
add
xchg
xchg
ret
mov
ret
or
scas
cltd
cld
jns
pop
rcll
mov
push
jns
into
or
dec
mov
ja
xlat
loope
and
shrl
aas
repnz
mov
fwait
hlt
mov
es
addr16
movsl
mov
fiadds
adc
mull
cli
mov
iret
shll
into
or
inc
pop
lods
popf
iret
loope
imul
mov
adc
ret
shll
pop
insl
dec
stos
sahf
pop
mov
out
jno
mov
cmp
cmp
gs
out
xchg
stos
cli
pop
adc
mov
loopne
ret
sub
cltd
push
inc
xchg
mov
scas
nop
inc
mov
dec
loope
add
and
jl
pusha
movsl
xlat
cmp
iret
push
inc
sub
xchg
mov
popf
push
je
mov
xchg
lds
xchg
pop
sbb
ja
mov
dec
sbb
int
xchg
mov
sti
and
adc
inc
fwait
repz
mov
xchg
add
mov
add
cmpsb
aaa
fistpll
mov
mov
lahf
icebp
jmp
lods
and
or
cmp
fldl2e
sub
adc
xchg
add
das
gs
icebp
push
cmp
testl
cmp
sar
push
add
sti
cltd
pop
fidivs
popf
mov
pop
xchg
loop
lods
testl
ret
xlat
mov
mov
xchg
pop
xchg
repz
aad
rol
mov
pop
xchg
push
jmp
mov
movsl
and
dec
scas
aam
mov
or
dec
push
mov
push
fwait
mov
or
cmp
dec
inc
add
push
inc
adc
pop
divb
out
mull
pop
and
icebp
xchg
lds
and
pop
add
pop
add
xor
lret
jle
aad
std
rcrl
adc
push
std
shrl
jecxz
dec
out
iret
pop
inc
and
test
xor
sbb
rol
std
ljmp
hlt
xchg
jecxz
popf
aas
adc
scas
fprem1
or
mov
push
stos
push
cmpsl
shrl
sti
cmpsl
das
pushf
lret
pop
pushf
clc
sbb
push
sbb
or
add
imul
test
leave
in
lret
movsl
sbb
lcall
fwait
xor
testl
jg
out
rcrl
rcll
adc
jecxz
lods
leave
xlat
lds
inc
xchg
sbb
movnti
in
inc
icebp
jnp
lret
inc
cld
sub
loope
add
jne
mov
xor
std
mov
pop
addl
jmp
js
jecxz
dec
aas
sbb
add
mov
testl
icebp
sbb
iret
pop
stos
jl
sbb
imul
mov
dec
std
cmc
and
add
fistl
push
test
sti
sub
mov
and
push
cmpsl
or
jmp
aad
int3
adcl
adcb
sbb
push
imul
dec
les
inc
xchg
xchg
aad
sti
mov
rcl
xor
out
sbb
cmp
cs
jne
xchg
shl
cli
mov
repz
jns
xchg
stc
outsb
mov
sbb
adc
js
jmp
jg
adc
xchg
pop
mov
or
rcrb
add
xchg
xchg
xchg
sbb
mov
rorl
daa
shlb
or
stos
mov
push
push
in
das
dec
lret
rcll
je
bswap
jl
mov
call
stos
std
rcrb
or
leave
jg
mov
xlat
in
pop
mov
cmc
in
in
and
mov
lret
movsl
shlb
jno
shr
adc
xor
mov
adcb
aas
add
lahf
mov
mov
xor
push
icebp
outsl
scas
xor
fwait
mov
jnp
cld
mov
popf
scas
mov
addr16
sti
fisttpll
shll
fimull
mov
push
mov
cmp
mov
sbb
ret
xchg
int
push
push
jbe
dec
shrl
sti
int
pop
or
adc
pop
pop
xlat
in
jbe
sbb
xchg
cmp
sti
mov
pop
std
push
cld
jae
cltd
aad
mov
into
lcall
testb
lcall
mov
std
push
subb
fwait
push
nop
aaa
popf
test
mov
mov
mov
mov
movsl
mov
std
test
mov
pop
pextrw
leave
xor
outsb
in
scas
outsb
mov
xchg
mov
xor
mov
push
es
movsl
mov
aas
mov
cmovge
sub
xchg
adc
scas
mov
or
int
mov
mov
mov
push
rcrb
cmp
leave
xchg
mov
cmp
shld
int
adc
orl
ja
xchg
inc
rorb
aas
sub
push
mov
or
or
cmp
in
push
lds
or
and
cltd
jne
mov
xchg
fwait
mov
pop
add
repnz
mov
adc
sbb
maskmovq
testl
or
add
jecxz
cli
popf
xchg
fwait
mov
xchg
out
mov
mov
dec
jg
sti
cmp
sbb
sub
push
lock
fs
int
stos
inc
fidivs
out
pop
mov
les
pop
xchg
or
ds
sbb
int
cltd
mov
lret
xchg
out
adc
mov
std
jne
add
pop
xchg
scas
daa
xchg
or
insb
add
fs
mov
aaa
adc
je
or
aad
mov
loope
push
sahf
rcrw
xor
mov
xor
mov
xchg
pop
gs
es
sub
xchg
pop
xchg
mov
and
std
fldcw
push
mov
adc
add
loope
int
movsl
popf
lret
idivl
mov
iret
pop
clc
ret
xlat
movsl
out
int3
xchg
jg
lcall
and
fwait
or
sbb
mov
fucomi
xchg
mov
jle
adc
mov
xlat
or
jbe
xchg
cltd
mov
push
pop
cs
jg
pop
mov
popa
add
scas
fwait
pop
iret
lcallw
out
sbb
sbb
or
std
and
xor
inc
iret
rol
add
cmovg
lea
push
fs
icebp
mov
aad
repz
icebp
or
mov
mov
fsubrp
mov
xchg
cmp
mov
movsl
daa
arpl
daa
insl
pop
cmp
mov
push
or
mov
sbb
pushf
std
je
jae
mov
mov
xchg
mov
hlt
ret
notl
mov
xor
mov
pushf
nop
xchg
cmc
xchg
lret
pop
lahf
mov
push
in
cmp
icebp
test
sbb
fcoml
cmp
add
jae
leave
pop
mov
and
xchg
dec
dec
mov
not
stc
inc
movsb
dec
add
adc
xchg
mov
addl
rol
std
and
or
fsincos
popa
jmp
rcrb
add
scas
mov
mov
scas
push
mov
push
call
lock
cltd
mov
add
jge
push
loopne
aam
rcl
pop
jle
pop
sub
cltd
scas
orps
xchg
push
ds
vpsubw
lods
or
loope
cmp
add
out
lea
rcrl
push
aam
in
mov
std
movswl
jns
mov
lret
int
add
repnz
sbb
jle
sub
shrb
cltd
jo
mov
pop
insb
aad
in
outsl
jg
aad
test
pop
test
xchg
sti
mov
es
pop
sbb
shrl
movsl
or
sahf
imull
and
xchg
std
aas
data16
pop
icebp
sub
nop
leave
popf
adc
pushl
dec
daa
stc
fucomp
push
popa
iret
lret
cmp
test
and
subl
sbb
lds
mov
int
or
movsl
add
sbb
pop
mov
inc
ljmp
out
adc
mov
mov
sbb
jmp
rorb
adc
stc
inc
adc
sbb
adc
sbb
leave
cld
adc
adc
into
add
pop
fwait
lret
int
push
adc
mov
adc
and
mov
and
test
fisttpl
inc
xlat
adc
sar
push
cld
scas
inc
adc
dec
lods
cmp
inc
loope
fldl
addl
cmpsb
repz
xchg
sbb
loop
mov
sbb
ret
mov
mov
or
test
stos
insl
aas
push
fcmovbe
or
in
xor
jo
mulps
jns
ret
popf
xchg
out
cmp
les
push
adc
out
dec
cwtl
sbb
test
popf
bt
jecxz
mull
adc
repz
scas
popf
aad
pop
lock
shrb
mov
pop
rcl
pop
outsb
dec
js
lahf
popf
mov
imul
xchg
stc
out
push
lret
cltd
jmp
int
shll
push
in
std
popf
aas
lea
push
sub
or
fldenv
ffreep
cli
lods
push
add
pushf
jnp
and
dec
fidivl
dec
iret
ret
fcmovu
jne
mov
repz
or
rcrl
mov
and
psubsb
pop
pop
push
push
mov
xor
icebp
or
cmp
xchg
out
stos
cmp
shrl
sbb
mov
jmp
popf
dec
jg
js
imul
xchg
sbb
pop
xchg
and
mov
jle
sbb
in
dec
push
stc
imul
cltd
mov
fst
adc
leave
and
xlat
xchg
pop
and
in
sbb
add
lcall
cltd
cmpsb
sysret
scas
dec
cltd
and
fnstsw
icebp
adc
sbb
loope
int
xchg
mov
leave
rorl
or
cli
xchg
sbb
dec
mov
hlt
pop
sbb
insb
cmp
sbb
lret
popf
sbb
jmp
sbb
test
push
ja
mov
rcrl
dec
int
mov
rcll
pop
mov
imul
pop
icebp
movsl
call
popf
dec
outsb
setg
je
mov
jbe
repz
xchg
or
in
sbb
lds
mov
scas
sti
fwait
cmp
aad
je
loope
divb
mov
std
out
push
pushf
outsl
cmpsl
fstpt
mov
cld
pop
or
and
dec
imul
cld
pop
xchg
and
add
fisttpll
in
xchg
popf
int
cmp
vhaddps
add
cmp
or
popf
ret
jg
mov
and
ljmp
mov
mull
xchg
scas
fwait
not
mov
mov
and
add
rorl
addr16
outsb
pop
adc
mov
and
xor
sub
cmc
pop
mov
or
and
xchg
iret
sbb
add
adc
jnp
fwait
ret
jbe
loope
cmp
xchg
lock
hlt
paddusw
icebp
push
jg
xchg
rorl
xchg
adc
adc
xchg
fwait
cs
pop
stc
jecxz
cli
cli
mov
js
lret
loopne
psraw
adc
dec
sbb
fwait
lods
jmp
mov
aad
jge
sbb
fcomi
div
frstor
xchg
jg
xchg
add
test
add
mov
and
or
mov
iret
sti
mov
aas
jo
adc
jl
xchg
jbe
mov
stos
int
cltd
mov
add
dec
outsl
sbb
mov
test
cmp
insl
fstpl
xchg
add
or
mov
jno
leave
sbb
sbbb
movsl
lods
outsl
stos
repz
imul
add
testl
call
mov
and
out
mov
lds
mov
sub
daa
xchg
arpl
xchg
adc
sub
pushf
xchg
cmp
mov
movsl
es
mov
mov
mov
addb
lss
call
jecxz
sbb
aad
lds
push
add
mov
decb
jo
or
outsb
std
push
jbe
xchg
outsb
leave
xlat
mov
xor
xlat
repnz
cmc
xor
stc
mov
add
jnp
add
jb
and
sbb
stos
daa
or
imul
loopne
cmp
fwait
outsb
jno
movsl
frstpm(287
push
leave
mov
fcoms
into
rcrl
mov
mov
xchg
lret
cwtl
es
add
stc
mov
imul
jge
and
hlt
test
add
addr16
xchg
outsb
mov
add
push
bound
je
shl
cltd
mov
adc
aad
rcll
mov
jnp
shll
mov
sti
ret
cmp
mov
dec
in
xchg
mov
mov
int
outsb
dec
std
xchg
xchg
mov
mov
push
jae
fld
mov
icebp
rorb
jo
pop
lret
cmpsb
or
cltd
add
jp
std
into
inc
sub
and
jg
xchg
in
jns
xchg
adc
or
ljmp
add
mov
inc
sbb
ret
mov
xlat
pop
adc
in
cmpsb
clc
push
push
sahf
repz
add
movsl
dec
lods
and
in
sub
lods
adc
fists
dec
mov
movsl
ss
add
add
sarb
outsb
leave
and
fldl
or
vphsubwd
jae
mov
adc
in
cmp
aas
sbb
imul
call
gs
out
add
icebp
testl
and
aaa
pop
xchg
lock
jecxz
leave
xor
xchg
push
shl
in
push
hlt
pop
out
std
push
outsb
aad
imul
cmp
sbb
and
cli
or
jmp
xchg
inc
lds
lcall
std
mov
add
sbb
cmp
dec
pop
lea
mov
xchg
adc
lods
xchg
int3
gs
test
add
xchg
push
pop
mov
add
mov
sbb
adc
mov
jl
jae
pop
and
xor
adc
in
repz
sbb
loop
fmuls
jnp
add
pop
or
and
or
aas
mov
lret
incl
loope
adc
xchg
or
sub
cmc
out
fwait
push
movsl
and
sti
nop
push
push
fists
cmpsb
rorb
push
or
xchg
mov
add
dec
adc
mov
addr16
sbb
cmp
inc
lret
aaa
mov
jbe
fistl
insl
or
pop
lods
push
mov
ja
icebp
xchg
push
jecxz
fxam
mov
shlb
adc
test
xchg
lock
mov
cmp
mov
ss
addl
sbb
xchg
in
popf
mov
cwtl
cltd
xchg
inc
mov
out
data16
std
stc
out
mov
xchg
xlat
sbb
divps
roll
jecxz
lds
or
and
xchg
push
stc
or
subl
mov
pop
sarl
pop
inc
test
xor
jp
dec
ja
aas
iret
fwait
scas
scas
cli
repz
lods
stos
xrelease
mov
add
dec
mov
rorb
cltd
mov
mov
jne
xchg
stc
shll
adc
punpckldq
xchg
dec
fstpt
add
sbb
out
aad
incb
or
mov
add
int
lods
jne
movsl
popf
lret
adc
jb
or
push
or
pop
mov
and
or
add
shll
mov
out
and
leave
aas
and
adc
mov
fildl
push
mov
add
mov
neg
shrl
jge
xchg
add
xchg
mull
into
or
faddp
inc
or
xchg
das
inc
and
jmp
in
mov
mov
sbb
lods
outsl
cltd
popf
stc
or
or
adc
mov
xor
shll
insb
push
icebp
add
cmpsl
shll
fildl
outsl
sbb
outsb
stos
cmpl
cmp
aad
jae
and
sub
int
js
push
aas
and
cmp
or
in
push
jno
mov
push
adc
into
pop
std
iret
jae
lds
int
cld
loope
mov
mov
testl
scas
adc
mov
push
xlat
in
xchg
pop
out
sti
dec
mov
push
cmp
loope
mov
andl
mov
ljmp
lds
xchg
mov
cld
jge
stc
jl
jno
aas
or
repnz
call
es
sub
aad
aad
xor
pop
fnstsw
mov
adc
sbb
leave
mov
mov
sbb
out
or
fsubl
jmp
xlat
stc
jb
xchg
mov
je
add
adc
in
sbb
popa
ret
jmp
icebp
cmp
xor
jge
shld
push
std
imul
mov
cmpsl
into
scas
es
add
lret
adc
shlb
mov
stos
mov
stos
mov
pop
xchg
addw
fdivrl
je
popl
ret
sbb
push
out
jg
xlat
mov
mov
nop
outsl
fldl
in
jo
xchg
adc
or
ret
push
jns
shrl
test
mov
icebp
mov
jmp
pop
popf
fwait
enter
mov
mov
or
in
mov
loope
mov
clc
or
out
inc
jno
fstpl
repnz
mov
adc
jne
int
lret
push
jg
repz
xor
mov
iret
pop
fwait
fst
xchg
pop
lret
or
and
fisubl
jb
std
or
push
inc
movsl
aaa
int
cwtl
outsb
movsl
push
mov
jo
lds
test
add
jmp
out
ljmp
pop
enter
jb
sti
add
mov
shl
lds
incl
sbb
mov
xlat
ja
sbb
sti
loope
lcall
repz
pop
cmp
loope
or
ljmp
cltd
movsl
xchg
jecxz
mov
push
and
stos
mov
orb
cmpsl
insl
in
mov
popf
dec
outsl
fstpl
or
popw
dec
mov
test
ja
or
push
mov
cli
mov
fwait
sar
in
iret
pop
mov
clc
jnp
std
icebp
mov
jb
add
ret
mov
sub
push
jl
inc
xor
mov
mov
cmp
popf
push
sub
int3
es
mov
adc
imul
xlat
sbbl
in
stos
sub
scas
addr16
sbb
xchg
inc
add
bound
sub
test
jge
and
ret
adc
fldt
xor
add
mov
or
das
repz
add
or
push
out
mov
aas
lret
rcr
mov
adc
sahf
lret
jae
jno
mov
fwait
mov
iret
and
repz
mov
fldl
cltd
cmp
ret
sbb
adc
adc
mov
into
mov
or
icebp
jb
xchg
scas
pop
idivl
xchg
adc
mov
movsl
into
mov
movsl
push
mov
rcrl
insb
xchg
mov
arpl
gs
push
imul
push
sub
mov
ljmp
add
jbe
cwtl
jge
cld
out
jb
mov
adc
add
aaa
aam
call
pop
inc
or
nop
xor
insb
fisubrl
pop
addb
enter
call
je
loope
es
clc
shlb
sbb
into
and
add
mov
xchg
mov
in
push
cmp
cmpsb
jl
or
mov
adc
dec
icebp
pop
mov
mov
jg
sbb
jbe
ud1
mov
or
aaa
xor
rcrl
sbb
or
sub
or
push
icebp
aam
dec
jns
aad
cmc
push
xchg
sti
mov
mov
mov
jg
mov
jecxz
iret
mov
int
sbb
xchg
pop
add
aad
cmp
in
push
pop
xlat
and
addl
in
sbb
mov
fisubrl
test
ja
mov
adc
inc
push
add
repz
popf
sbbl
lret
scas
xchg
cmp
shr
aad
ret
sahf
sarl
jb
or
lods
gs
aaa
mov
jp
ret
and
std
popf
adc
pop
sub
xchg
scas
add
mov
push
dec
rcrb
ss
and
jecxz
cmp
cmp
and
stos
std
int
ljmp
or
mov
and
cmpsb
xchg
or
mov
jp
outsb
mov
rolb
out
leave
inc
mov
or
dec
cltd
or
add
fadds
and
leave
out
popf
mov
sar
ret
push
in
repz
sbb
inc
movb
lret
and
dec
mov
in
or
fists
mov
xor
inc
sbb
ljmp
movsl
cld
aas
dec
shll
cltd
adc
jb
sbb
scas
fucomi
icebp
rcrb
adc
sbb
repz
adc
mov
add
push
repz
out
mov
mov
std
lea
sbb
mov
dec
mov
add
cmc
sbb
pop
or
pop
clc
add
outsb
fxch
jl
iret
clc
test
call
dec
int
xor
inc
inc
aad
imul
adc
std
dec
jle
jb
add
xor
mov
test
add
or
lods
js
pop
int
and
sahf
mov
push
sbb
adc
hlt
popf
add
rol
jnp
fisttpl
pop
leave
stos
mov
daa
sahf
jg
ret
sbb
nop
stc
mov
std
out
jb
or
ret
lea
or
and
outsb
mov
push
push
or
stc
std
sti
adc
retw
mov
js
inc
mov
pop
popf
or
nop
pop
leave
enter
jae
add
mov
test
add
push
cltd
leave
call
add
out
faddl
out
sbb
pushf
jne
mov
cmp
in
xor
addr16
or
mov
out
push
adc
sub
xchg
push
mov
pop
imul
xchg
adc
add
lock
jge
test
add
fldl
xchg
lock
pop
iret
adc
loope
inc
lds
leave
and
pop
fs
popf
pop
aad
push
leave
adc
outsl
inc
maskmovq
imull
push
xchg
lret
in
shll
mov
fwait
add
es
jb
sbb
stc
pop
lds
jg
xor
ret
iret
fsubp
push
pop
les
inc
mov
jns
lret
and
lcall
out
mov
repz
iret
ret
xchg
dec
push
mov
mov
push
mov
sbbl
xchg
scas
jne
icebp
and
mov
ret
outsb
dec
dec
or
orl
ss
adc
mov
mulb
pushf
inc
sbb
bound
mov
sbb
stc
mov
push
jmp
js
adc
iret
rcll
call
and
sbb
mov
icebp
ss
arpl
in
ficoms
out
xchg
popf
jnp
mov
cmp
jle
jne
pop
ret
jecxz
pop
inc
xchg
int
mov
jmp
pushf
js
xchg
add
xchg
repz
ret
inc
jmp
jecxz
or
dec
fldt
xlat
add
mov
stc
push
int
mov
rcrl
xlat
mov
cmpsl
imul
movd
add
mov
sbb
cmp
jae
aad
ljmp
ja
icebp
fwait
cmp
jge
iret
lret
repnz
pop
cmc
add
add
aad
ljmp
sbb
jg
xchg
addl
sub
sti
popf
addl
mov
stc
pop
add
loope
call
jecxz
push
pop
out
mov
out
in
cld
adc
aas
movsl
xor
ret
sar
push
dec
pop
cmp
mov
dec
mov
mov
popf
lods
outsb
test
outsb
mov
in
xchg
cmpsb
pop
or
js
mov
stc
cmp
call
jnp
adc
mov
pop
icebp
in
shrb
mov
jg
sti
leave
test
mov
xchg
cmpsb
std
sub
roll
out
jbe
mov
loope
out
fldl
xchg
test
aas
dec
add
xchg
add
mov
adc
ljmp
pop
xchg
inc
push
out
lret
pop
pop
jle
addr16
ljmp
inc
jnp
adc
jle
repnz
in
mov
adc
movsl
lea
shrb
mov
mov
rcr
xor
addb
push
je
scas
shll
jo
pop
pop
inc
or
clc
repnz
icebp
add
sti
mov
aas
push
out
pop
pop
lods
lock
mov
and
pushf
jne
mov
stc
ss
adc
dec
lret
xchg
ror
xchg
jb
or
jb
test
inc
mov
jbe
stc
test
xchg
cmp
mov
iret
cli
outsb
or
fld
or
inc
ja
stc
xchg
iret
pop
fistpll
hlt
jmp
add
push
fldt
std
fpatan
mov
mov
hlt
or
sbbb
jge
inc
cli
adc
sti
xchg
jae
aas
popf
in
test
hlt
enter
test
fdivs
lret
push
mov
shll
fldcw
in
aas
xlat
movsl
cwtl
pop
jp
xchg
lcall
xor
test
cwtl
inc
aad
fnstenv
popf
int
daa
in
aad
sti
sbb
dec
xlat
test
add
ja
in
adc
and
mov
cmp
imul
iret
sub
and
test
imul
repz
stc
adc
push
xchg
shrl
jne
mov
or
and
aad
and
and
xchg
xor
fwait
jecxz
iret
popf
pop
out
rol
es
dec
or
out
and
pop
leave
cltd
push
mov
xor
adc
dec
add
cmpl
cmpsb
je
cmc
jne
pop
jg
and
das
icebp
repz
adc
xchg
xchg
gs
inc
push
dec
in
push
int3
mov
fadds
in
inc
and
dec
ds
pop
imul
negl
sbb
add
mov
into
cmp
mov
push
add
adc
jg
popf
sarl
and
in
mov
pop
mov
cltd
mov
aas
add
icebp
and
sarl
jno
inc
and
push
inc
and
mov
xchg
roll
in
jecxz
adc
pop
iret
mov
int
fidivl
out
mov
mov
movsl
or
or
scas
pop
jg
inc
xchg
test
add
inc
mov
or
movsl
ja
inc
rol
call
out
je
mov
lock
roll
inc
test
inc
into
in
not
push
adc
je
fwait
sbb
stc
movsb
out
out
jg
sbb
cmpsb
iret
xchg
xchg
xchg
mov
mov
inc
inc
xchg
cld
outsl
ss
adc
insl
dec
dec
inc
pop
sub
jl
xchg
mov
pshufw
mov
mov
add
sbb
push
jle
fdivr
aad
icebp
or
insl
or
loope
cltd
sbb
jbe
add
cltd
addr16
cmp
pop
lahf
cmpsl
in
insl
xchg
mov
repnz
mov
mov
dec
lock
pop
js
cmp
data16
rorl
ret
pusha
add
in
sbb
lret
repz
pop
jae
aad
ret
fprem1
xor
xchg
mov
in
mov
iret
mov
shrl
sbb
inc
pop
mov
loopne
push
lea
mov
mov
and
pop
and
mov
mov
flds
pop
sbb
stos
lods
push
inc
lret
adc
repz
mov
les
xchg
movaps
aam
xor
adc
add
jge
in
aas
call
fisttpl
iret
or
loope
call
push
dec
and
and
addl
push
pop
push
adc
mov
xchg
pop
sbb
repz
mov
xchg
push
and
jge
repz
ret
out
mov
push
sbb
mov
mov
inc
adc
mov
push
jo
fs
push
ds
and
xor
in
mov
push
push
lret
stos
rorl
xor
stos
mov
fldenv
or
add
dec
lods
lret
js
rcr
mov
into
sbb
fwait
std
push
mov
dec
into
scas
add
mov
lods
ja
mov
popf
fnstsw
jmp
pop
cmpsb
dec
cmp
stc
mov
xchg
adc
pop
cmp
frstor
adc
mov
pop
iret
stc
jne
movsl
xlat
xchg
aas
out
cmp
or
ret
inc
jae
scas
rol
popf
std
and
lock
dec
push
lds
lret
adc
aaa
xchg
stc
popf
andl
sbb
push
push
std
pop
aad
adc
aad
or
xchg
scas
xlat
shll
cmp
dec
xchg
leave
sbb
jo
add
pop
mov
mov
inc
cmp
out
into
mov
mov
cmp
mov
leave
out
or
jno
pop
in
jp
mov
mov
shl
std
fldl
and
push
ficompl
cmp
addr16
xor
jb
mov
clc
push
xor
rsqrtps
aam
pop
mov
push
std
dec
mov
push
rcrb
or
push
loope
sbb
mov
jmp
sti
js
inc
jne
div
inc
add
mov
add
mov
mov
mov
aas
mov
movsl
out
xchg
pop
cli
add
popf
dec
mov
dec
adc
aas
ret
add
and
cmp
jmp
out
aas
xlat
adc
movsb
ljmp
lea
push
xchg
les
je
icebp
sbb
aad
cmp
cmc
xor
nop
in
mov
movsb
rorl
pop
and
fdivrl
adc
mov
jb
adc
lods
mov
cmc
and
mov
inc
add
jp
arpl
ljmp
aas
and
shrl
or
mov
adc
sbb
addl
mov
add
out
adc
mov
shll
xchg
push
mov
data16
shl
sub
push
jb
mov
icebp
iret
cmc
xchg
mov
push
add
rorb
push
mov
orl
sub
mov
rclb
pop
xchg
sti
out
add
mov
shl
mov
loopne
xchg
test
leave
sbb
mov
fwait
gs
mov
das
popf
int
add
les
fnstenv
pop
sbb
jg
fstpl
out
fcompl
jg
mov
leave
scas
popa
pop
lret
and
xchg
ja
ret
push
mov
lock
ret
sti
mov
lret
lds
test
fistpl
fisttpll
sbb
push
mov
adc
add
mov
clc
pop
outsb
out
mov
sbb
sbb
or
jbe
rcll
or
push
ret
mov
jne
jecxz
mov
iret
mov
mov
xchg
leave
xchg
jb
aas
scas
je
inc
mov
add
rolb
idiv
aas
outsb
xor
stc
stc
push
xchg
add
enter
push
mov
and
repz
mov
fwait
int
mov
cwtl
pop
aad
or
jne
add
pmulhw
imul
xchg
adc
push
in
outsb
repz
or
cmp
out
lods
cmp
mov
sbb
stc
inc
jl
je
ret
adc
mov
popa
add
stc
cmpsl
bound
lret
xchg
loopne
xchg
adc
xlat
fwait
mov
adc
sbb
mov
mov
enter
inc
jne
sbb
loope
aad
in
sbb
add
sbb
mov
ja
add
jno
call
call
push
push
mov
xchg
cmpsb
test
outsb
adc
inc
jbe
sbb
mov
roll
sbb
add
movsb
js
and
nop
mov
lds
fwait
popf
jle
mov
pushf
sbb
aam
std
sub
mov
rcr
adc
jbe
outsl
ret
int
repz
call
loop
pop
lods
dec
call
and
mov
push
iret
mov
in
pop
sti
imul
pop
and
cmp
cmpsl
out
test
or
or
leave
or
fyl2xp1
xor
xor
jmp
nop
mov
add
cltd
dec
lock
mov
dec
or
sbb
cwtl
adc
or
and
pop
outsb
pop
jecxz
lret
or
decl
pop
jge
outsb
addl
jle
jle
ja
std
fwait
xchg
mov
add
push
inc
cmc
ljmp
mov
mov
lret
inc
jae
cmc
roll
aad
dec
push
popf
shll
sti
mov
scas
or
movb
pop
mov
pop
or
cmp
mov
push
adc
mov
std
dec
dec
jo
add
lock
iret
and
repz
or
insl
add
lds
sub
sub
sti
frstor
sbbl
out
mov
repz
add
adc
fwait
loope
out
mov
test
fidivrl
in
icebp
inc
mov
not
mov
or
popf
cmp
lret
xchg
lock
mov
hlt
xchg
adc
pop
lahf
and
notl
rol
jl
inc
fstl
or
xlat
add
loope
stos
adcb
jb
in
mov
sub
in
leave
stos
or
rorl
sti
jle
data16
std
test
add
fisttpl
movsl
mov
into
lds
xor
rcll
stc
push
dec
out
jb
mov
sbbl
or
push
dec
push
lret
aad
in
rcr
imul
add
outsb
ds
and
dec
pop
xchg
or
testl
ja
or
mov
sbb
add
sub
in
insb
or
xchg
push
sbb
frstor
sub
out
popf
pop
popf
pop
aas
jp
fwait
or
aad
pop
scas
push
in
pop
leave
decl
repnz
mov
cmp
jecxz
arpl
pop
roll
scas
mov
mov
aad
movl
xchg
fistl
ss
xchg
inc
leave
mul
jmp
test
jo
jecxz
sub
and
int
testl
lock
pop
add
test
sub
mov
mov
rol
push
pop
movsb
inc
fldenv
aas
mov
outsb
movsl
pop
jle
ljmp
xchg
mov
jecxz
inc
jp
insb
test
inc
fnstcw
repz
repz
pop
and
xlat
lods
js
in
gs
gs
sbb
cltd
addr16
stc
mov
cltd
movsl
jmp
iret
rcll
out
dec
mov
xor
dec
push
pop
iret
fisttpll
sbb
push
je
aas
xchg
adc
fwait
dec
popf
testl
xchg
sahf
repz
or
push
sbb
cmp
jno
add
pop
fwait
mov
mov
sub
xchg
lret
add
mov
repz
aas
inc
xchg
or
rcl
and
xchg
fnstcw
jle
mov
shrl
and
add
cmpsl
mov
sbb
pushf
or
daa
push
es
daa
iret
mov
subl
jg
ja
std
movsb
in
sbb
scas
in
leave
mov
adc
push
mov
jle
lock
in
inc
addb
sbb
mov
es
int
mov
add
in
or
adc
and
pop
mov
loopne
outsb
test
push
cmp
pand
leave
ret
cmp
rorl
mov
stc
leave
fsubrp
sbb
or
mov
mov
inc
dec
push
dec
outsb
sub
xorl
sbb
xor
pushf
mov
or
or
lds
lret
in
xchg
call
mov
insl
mov
xor
mov
add
add
mov
sbb
mov
outsb
js
cmp
adc
sbb
nop
shr
scas
mov
das
add
xor
test
push
orl
in
cmp
add
xor
shll
in
inc
fdivrs
xchg
int
adc
rcr
mov
outsb
cltd
inc
xchg
sti
int3
or
aaa
inc
andb
iret
lret
sub
inc
std
add
aad
ljmp
push
rol
jge
mov
mov
adc
inc
push
push
mov
mov
and
cltd
cmp
mov
cmpsl
sbb
mov
or
sbb
adc
int
jb
push
fimuls
aam
push
std
jo
enter
cmpsb
mov
cwtl
in
orl
ds
add
sbb
pop
mov
mov
inc
outsb
test
xchg
fsts
dec
mov
shrl
jp
xchg
fidivrl
inc
sbb
mov
mov
ret
hlt
push
mov
xchg
cmp
sbb
ficoml
lea
stos
cmp
cmp
or
lahf
repz
fisubl
sbbl
sbb
iret
shrl
cmp
mov
aas
mov
inc
or
sar
out
lret
subb
aaa
lcall
xchg
jnp
pop
mov
mov
push
and
cltd
insb
ja
pop
and
jecxz
je
mov
dec
imul
adc
mov
add
fwait
mov
add
inc
cmp
mov
je
leave
iret
std
cmpsb
lret
xchg
ja
rcr
scas
imul
rorl
lret
jbe
add
mov
mov
mov
jp
ret
or
or
and
stc
sbb
cmpsb
aad
mov
xchg
or
jno
leave
xchg
mov
jo
add
and
test
outsb
mov
iret
cmp
fdivrp
icebp
push
test
pcmpeqd
stos
push
and
xchg
sbb
push
adc
add
divb
mov
aas
inc
pop
cmpl
and
lods
add
dec
fisttpl
push
shr
mov
push
sbb
add
xchg
pop
jecxz
or
sbb
push
mov
push
addl
mov
sar
scas
and
int3
mov
aad
movsl
out
sti
mov
call
cs
dec
xlat
in
ds
jecxz
sbb
jbe
xchg
scas
mov
addr16
xchg
lahf
cmp
lret
loope
aaa
lcall
stos
sbb
fwait
xchg
cld
test
out
enter
or
cmpsl
sbb
sbb
std
jbe
or
sbb
pop
xchg
xchg
xor
iret
pop
mov
cltd
mov
push
fucom
sbb
leave
and
mov
testl
int
xchg
add
bound
jmp
mov
lret
pop
add
std
idiv
xchg
movsl
popf
mov
mov
cmpsb
in
outsl
jge
fistpl
mov
insl
xor
jne
lods
mov
gs
mov
mov
movsl
jg
cmpsl
jae
xchg
push
add
int
aad
xchg
fwait
pop
inc
mov
shrl
cltd
sbb
test
mov
into
and
sbb
pop
mov
divb
fwait
cltd
sbb
jmp
scas
popf
int
xchg
mov
mov
scas
loope
mov
jg
add
push
adc
mov
cltd
rcrl
movsl
jecxz
mov
jle
xchg
aas
or
or
test
dec
pop
icebp
xor
ss
cmp
popf
mov
push
shrl
pushf
and
mov
sbb
popf
movsl
xchg
or
jecxz
mov
add
cmp
mov
mov
loope
adc
pop
xchg
stc
cltd
xchg
ret
sbb
test
or
or
shll
stc
mov
add
sub
jp
mov
fdivrl
stc
jbe
sbb
xchg
jp
xor
mov
and
sub
test
or
movlps
enter
fidivs
mov
out
fimull
mov
push
lcall
pop
add
sbb
mov
jnp
movsl
loope
sub
xor
leave
mov
mov
popf
mov
adc
cld
jno
add
mov
mov
in
repnz
and
in
lock
std
cmc
fsubl
adc
adc
mov
add
jmp
add
ret
jmp
sbb
xchg
mov
inc
cmp
adc
mov
sbb
sub
pop
out
leave
in
addr16
adc
sbb
jmp
icebp
ja
mov
out
es
outsb
inc
js
mov
out
or
mov
ret
xchg
mov
cltd
in
addr16
daa
jbe
sbb
cmpsl
lds
ljmp
icebp
mov
or
sbb
jl
xor
movsb
xchg
and
adc
or
out
rcrl
hlt
sbb
lcall
cltd
icebp
lcall
adc
add
jo
or
push
jecxz
jno
not
mov
mov
out
sbb
inc
rclb
mov
aas
pop
adc
in
mov
inc
push
xchg
iret
add
lret
fwait
call
lock
xlat
pop
sti
out
sub
xchg
leave
or
add
adc
ficomps
jnp
add
iret
scas
aad
add
xchg
aad
aas
sbb
xchg
out
add
sbb
or
shrl
push
sbb
imul
std
repnz
sti
test
xchg
mov
push
scas
lea
pop
fwait
sub
pusha
cmp
pop
xchg
frstor
stc
out
add
cmp
imul
adc
mov
cli
stos
out
or
rclb
stos
fistl
mov
loope
call
inc
out
mov
mov
sbb
adc
fistl
notl
xchg
mov
sbb
fisttpll
aas
mov
mov
inc
sub
jle
icebp
and
and
cmc
and
xchg
rcrl
sub
scas
push
jecxz
or
mov
movsl
std
lcall
or
aam
adc
mov
cwtl
jg
add
loopne
sbb
fstpl
mov
push
cld
not
adc
push
lret
jne
out
mov
iret
inc
mov
mov
add
xchg
in
repnz
cmp
mov
or
lods
in
or
xorl
adc
push
and
movsl
mov
in
mov
cmpsl
push
rcll
push
cs
fwait
mov
mov
mov
add
xor
add
in
adc
mov
mov
data16
fwait
ds
jne
add
std
rol
or
push
xchg
out
cltd
sbb
enter
cmp
dec
jecxz
sbb
pop
jle
js
cli
imull
fisttpl
mov
orl
int
inc
jg
roll
std
movsl
cld
xlat
sub
jl
adc
mov
sbb
in
dec
hlt
push
fwait
mov
sarl
jb
aad
inc
sbbl
out
mov
jg
inc
icebp
xchg
add
unpckhps
mov
add
in
add
pop
cmpsl
dec
mov
mov
leave
or
jecxz
xor
iret
sub
jne
aaa
imul
adc
decl
adc
nop
cwtl
dec
outsb
sbb
jb
or
pop
mov
cmp
movsl
mov
lds
lock
ret
repnz
sti
fwait
mov
sub
add
lcall
movsl
dec
test
test
mov
sti
pop
pop
jge
cltd
jle
jne
fsts
rcrl
mov
leave
ret
dec
xor
or
dec
out
shl
loope
repz
out
data16
xchg
mov
sbbl
jno
mov
mov
cmp
js
cwtl
lret
lock
dec
je
scas
sti
cmc
and
roll
ljmp
into
cmp
or
mov
loope
imul
cmovp
ror
jl
mov
testl
lods
mov
adc
xor
sbb
mov
out
mov
inc
adc
sarl
popf
pop
repnz
xor
fwait
icebp
addr16
stc
xchg
add
mov
aaa
xchg
leave
repz
add
cmp
xor
xchg
repz
movsb
fisubrl
push
insl
aad
incl
pop
js
adc
cmp
roll
jbe
outsb
xor
loope
scas
enter
idivl
or
mov
mov
and
out
inc
inc
mov
imul
outsb
jl
imul
xlat
pop
xchg
sbb
sahf
fldcw
add
in
dec
cmpsl
in
fwait
xor
nop
adc
icebp
icebp
lahf
call
cmpsb
adc
mov
mov
stc
cmc
jno
and
ja
inc
adc
sbb
mov
cmp
or
jnp
push
sub
shll
hlt
subb
add
dec
xchg
addr16
or
stos
jecxz
xchg
or
out
or
lret
dec
pop
fs
movsl
sar
xchg
inc
mov
adc
scas
pause
mov
or
adc
mov
ret
mov
or
sub
out
xchg
hlt
fdivrs
add
add
aad
mov
mov
out
pop
cs
push
push
pop
lcall
scas
in
fistl
ja
sbb
adc
xchg
pop
pop
add
fistl
add
enter
or
adc
jo
cltd
movsb
stc
mov
mov
push
icebp
pop
in
jge
jecxz
iret
sbb
jb
push
fwait
dec
inc
xchg
inc
scas
fstpt
stc
aas
jle
sub
mov
and
sbb
roll
dec
aas
outsl
cmp
mov
pop
arpl
xchg
ds
repz
mov
in
stos
scas
popl
repz
icebp
je
add
xchg
movsl
or
push
js
inc
js
shll
stos
add
fwait
sub
xchg
scas
mov
not
add
cmpsb
mov
lods
stc
push
iret
movsl
mov
gs
sub
in
cli
jmp
ljmp
inc
insl
cmp
mov
mov
mov
xor
pop
and
mov
psllq
cmc
sarb
aad
mov
dec
jle
adc
pushf
xchg
movsb
lret
xchg
sarb
popl
leave
xlat
mov
jecxz
xor
sbb
mov
jg
and
pop
or
dec
mov
mulps
pop
fnstenv
mov
jns
mov
jne
iret
mov
adc
addr16
ficoms
cltd
addb
popf
mov
xchg
nopl
push
sub
push
and
sti
scas
shlb
mov
test
lods
test
repz
cltd
sbbl
inc
push
sub
or
pushf
outsb
mov
pop
sbb
add
int3
sti
inc
dec
lds
pop
jne
shl
jmp
lods
or
std
push
jecxz
jmp
inc
call
pop
and
outsb
imul
aad
cmpsl
outsl
xchg
lds
mov
add
andl
or
mov
add
xor
xor
popf
fildll
xor
jecxz
mov
je,pn
xchg
int
sbb
adc
mov
mov
sbb
adc
mov
cltd
jecxz
xchg
dec
stc
xchg
je
fisttpll
ss
xor
xchg
pop
ja
std
mov
jb
iret
inc
outsb
and
lret
inc
sub
cltd
aas
xor
mov
xor
xlat
fcmovnb
mov
aas
std
es
or
fldl2t
dec
adc
push
pop
jnp
or
leave
repz
shll
lahf
idivb
mov
push
or
insb
cmc
or
mov
pop
inc
aad
jbe
xchg
in
and
leave
outsl
jge
lret
out
pop
cmpsb
cmp
clc
in
out
cmpsl
mov
add
shufps
pop
repz
sti
mov
or
jne
pop
flds
in
addr16
adc
mov
or
int
clc
leave
fcomi
test
out
sbb
jo
xlat
and
sub
inc
dec
jbe
or
fstps
scas
jl
jb
sahf
mov
dec
scas
or
repnz
loopne
mov
cltd
mov
adc
cmpsb
stc
in
dec
add
lret
repnz
roll
aas
adc
popf
cltd
testl
fcmovu
fnstenv
negb
ret
xchg
bswap
pop
or
sbb
adc
pop
add
sub
les
jno
fstl
loope
and
adc
and
sbbl
mov
mov
movsl
int
repz
or
mov
xchg
fstl
les
or
lret
leave
les
mov
adc
sbb
ret
mov
int
sub
and
cltd
dec
lahf
mov
mov
mov
xlat
cmpsb
cltd
scas
fists
aas
cmp
data16
xchg
cmc
imul
sbb
out
inc
jno
sbb
add
aam
movsl
notb
or
mov
test
mulb
aad
rol
sbb
mov
push
loope
lds
xor
jg
sbb
shlb
adc
mulb
add
or
xchg
add
inc
ljmp
cmp
scas
outsb
fimuls
push
decb
inc
mov
or
mov
stos
xlat
stos
roll
popf
push
add
dec
mov
leave
jg
ret
xchg
jno
xchg
movsl
mov
test
xchg
mov
and
add
ja
xlat
rcr
mov
lret
aad
xor
fwait
sbb
icebp
adc
shl
push
xchg
rcll
xchg
jne
mov
sbb
or
lret
mov
sub
loopne
add
stos
adc
nop
sub
jbe
scas
mov
xchg
adc
aad
push
js
stc
sub
ja
div
push
popf
std
and
or
inc
jge
mov
aad
insb
popf
fwait
mov
push
in
scas
cwtl
mov
pop
ret
jp
shl
inc
jp
outsb
aaa
xlat
add
lret
cmp
xchg
push
mov
mov
scas
xchg
mov
mov
inc
es
notb
jb
mov
stos
mov
jl
mov
out
push
mov
fsts
inc
jb
mov
add
pop
js
mov
xchg
add
cltd
add
int
mov
xchg
pop
movsl
enter
lds
mov
or
ljmp
icebp
mov
mov
push
mov
aad
dec
lock
shrl
mov
int
fisubrl
mov
testl
xchg
add
jno
add
loopne
in
stc
mov
shl
test
in
add
xchg
jecxz,pt
fldcw
cmp
fs
sbb
out
xchg
jbe
mov
scas
flds
cmpl
scas
fwait
add
std
cmc
mov
repz
cs
push
imul
lock
sbb
add
loope
aas
xchg
xchg
ss
loop
rolb
push
xor
repnz
mov
stc
and
repnz
idivb
ffree
jns
mov
jle
add
push
dec
stc
add
inc
jp
cmp
push
std
xor
in
jbe
xchg
leave
mov
pop
std
iret
jnp
pop
sbb
jle
sub
inc
jno
or
mov
fst
mov
adc
out
pop
xchg
mov
push
sbb
aad
lret
adc
adc
out
xchg
jno
int
or
xchg
mov
out
mov
fwait
cltd
sub
or
dec
ljmp
jne
fnstcw
sbb
popl
and
mov
push
repnz
imul
shl
xlat
and
addr16
fwait
pop
out
test
adc
out
mov
testl
sbb
add
mov
pop
aas
mov
inc
subl
add
loope
jl
pop
frndint
mov
and
inc
popf
movsl
mov
sahf
mov
adc
cmp
scas
sbb
sub
mov
inc
loope
int
adc
add
add
cltd
jp
ljmp
wbinvd
mov
lds
test
xchg
rcll
mov
sbb
mov
adcb
fstpl
movsl
xchg
sbb
pop
mov
mov
out
in
add
mov
icebp
mov
push
mov
sbb
in
cmp
shll
in
cmovg
sar
dec
int3
mov
outsb
mov
add
and
lods
pushw
push
xlat
cwtl
pop
xchg
xchg
sub
dec
int
mov
sbb
mov
sub
dec
repnz
mov
outsb
cmpsb
add
test
ljmp
cltd
in
xchg
jecxz
lcall
jo
add
icebp
mov
pop
jnp
mov
cltd
rcll
mov
mov
movl
subl
ljmp
xchg
xchg
jl
enter
sti
sbb
jle
cmp
out
imul
xor
in
into
jg
sti
mov
mov
lods
mov
mov
cltd
stc
leave
xchg
mov
shl
add
dec
clc
mov
cli
ret
xchg
sub
popf
mov
lods
roll
stc
pop
out
mov
xchg
shll
sbb
cwtl
fiaddl
pop
iret
sarl
push
sbb
cld
mov
mov
sub
lret
sbb
cli
jno
rcrl
shll
xchg
adc
push
xor
loope
rol
xchg
inc
mov
inc
imul
xlat
push
call
sbb
ljmp
xor
imul
outsb
mov
testl
mov
pop
jmp
jl
mov
pop
xor
bound
add
add
or
add
enter
icebp
das
mov
aad
adc
or
ret
xor
push
add
add
mov
jecxz
int3
dec
outsb
leave
cmc
lret
and
shrl
xchg
insl
test
into
jns
or
mov
xor
pop
aad
aad
sbb
mov
test
ljmp
lds
xchg
sets
mov
repz
mov
mov
and
adc
inc
mov
pop
loop
outsb
lret
leave
sti
mov
rcll
inc
xchg
or
pop
lds
xchg
mov
inc
or
or
in
fstl
sub
push
cltd
icebp
dec
adc
mov
bound
outsb
or
adc
sbb
dec
adc
fmuls
and
rorl
outsb
xor
outsb
insl
lahf
aas
stos
and
pop
mov
adc
mov
ds
mov
rcll
mov
pop
test
aas
cmpsb
lahf
shrb
pop
lods
ficompl
jl
cmp
and
test
and
push
fs
rorb
push
mov
movl
add
and
adc
setnp
sub
push
mov
or
fnstenv
cld
or
push
sbb
xchg
add
test
pop
testl
cld
sbb
add
icebp
xchg
xchg
adc
insl
mov
test
shll
sub
fldt
push
test
mov
mov
mov
xlat
rolb
xchg
in
rorb
xorb
iret
out
pop
outsl
fistpl
rcrl
mov
mov
xchg
aas
loope
sahf
sub
in
loop
call
sub
stc
xchg
xchg
pushf
add
dec
mov
shll
dec
ljmp
xchg
aam
lret
fld
loope
or
mov
inc
fcmovbe
lcall
icebp
sbb
leave
lret
pushl
and
repz
scas
out
sbb
lods
std
xlat
xor
adc
popf
add
ret
xchg
test
test
imul
jnp
sar
xor
mov
stos
mov
mov
rorl
adcl
icebp
sbb
scas
fildl
sti
jns
pop
testl
js
xlat
fwait
mov
mov
icebp
addr16
pop
push
pop
pop
incl
mov
mov
es
std
sbb
mov
icebp
xor
cmpb
fistpll
lret
pop
jecxz
dec
mov
pop
pop
xlat
stc
data16
rol
mov
aad
sbbl
in
popf
xchg
lds
xchg
int
mov
add
sub
icebp
mov
enter
outsb
ret
and
sbbl
xchg
jmp
shl
sub
mov
in
add
cmp
imul
les
int
xlat
jmp
cmpsl
repz
mov
fldl
mov
call
jecxz
subl
adc
std
or
and
xchg
sbb
mov
mov
add
je
sub
jecxz
pextrw
sub
mov
xor
fsubs
idiv
sti
cltd
shl
rcrl
dec
cs
mov
setb
stos
adc
fwait
mov
insl
or
adc
mov
packssdw
sti
cmpsl
movsb
sub
push
fcmovnb
xchg
shll
xchg
jecxz
xlat
or
rcll
rclb
mov
adc
cmpsb
xlat
adc
ret
ret
push
dec
inc
roll
addr16
pop
xchg
insb
pop
repz
mov
repz
add
dec
daa
movsl
inc
fstpl
popa
mov
mov
adc
and
or
icebp
or
xlat
shrl
imul
pop
aad
icebp
jecxz
loop
mov
inc
sbb
mov
push
fst
and
push
and
pushf
gs
pop
lods
or
ror
mov
mov
sti
inc
jno
icebp
movsl
leave
xchg
icebp
addr16
hlt
lret
adc
in
or
jne
pop
popf
add
sbb
cmc
int3
xchg
pusha
sbb
jno
js
fmuls
js
sub
or
mov
mov
add
clc
and
adc
xchg
paddb
insb
mov
popf
andl
xlat
leave
or
adc
sti
jle
mov
pushf
paddd
movsl
xchg
mov
mov
and
xlat
add
jno
movsl
stc
pop
mov
mov
jg
fwait
lods
jae
pop
iret
divb
adc
lret
loope
sti
jae
or
outsb
adc
hlt
jne
rorl
or
mov
fincstp
mov
sarb
js
scas
push
mov
cmp
aad
adc
inc
xchg
imul
mov
adc
pop
or
cld
jge
lret
add
cli
dec
lds
inc
movsl
shll
scas
mov
sub
cmpsb
mov
adc
fwait
xlat
lret
xchg
iret
aas
dec
or
sub
sub
xchg
cmpsl
push
iret
jae
lds
sbb
mov
and
in
lock
and
xchg
xchg
mov
leave
sub
popa
jp
repz
cmpb
cmp
xchg
or
mov
add
fwait
and
add
add
ret
nop
jge
mov
jl
mov
push
scas
pop
loop
xor
push
jecxz
inc
pop
in
fiaddl
mov
pushf
icebp
sub
fidivl
rorl
dec
xor
fstl
pop
leave
jb
repz
clc
sar
lret
popf
int3
jbe
or
push
or
loop
and
testl
add
inc
divb
xchg
dec
push
jo
inc
imul
ja
mov
pop
mov
sbb
xchg
in
fwait
adc
into
cmpl
mov
in
mov
mov
jp
rcll
push
push
sbb
xlat
sub
popf
stos
and
int
cmpsb
dec
rcl
and
mov
mov
ds
mov
mov
loope
adc
pop
push
icebp
pop
and
push
and
jne
pop
repz
push
in
shl
hlt
sub
dec
or
sub
xchg
jge
or
mov
jl
jl
enter
jmp
push
scas
and
in
and
cs
fstps
mov
imul
cld
pop
dec
pop
imul
outsb
call
xchg
or
cmpl
out
xor
mul
and
into
pop
or
incl
cmp
mov
xchg
push
and
in
js
popf
aaa
stc
call
cwtl
subl
sbbl
mov
in
stc
movsl
add
xor
and
xchg
lods
xor
lds
popa
pop
mov
cltd
movsl
mov
scas
stc
or
push
jno
push
subb
test
iret
mov
rorl
xchg
icebp
add
pop
mov
inc
out
sbb
and
push
loope
adc
out
lahf
or
cmpsb
lret
pop
sbb
scas
int
fwait
jb
not
subb
leave
iret
mov
mov
dec
js
hlt
mov
sti
push
roll
icebp
sbb
or
sti
cmp
pop
cmp
shlb
movsl
adc
mov
mov
ret
fisttpll
pop
insl
mov
push
xchg
stc
sub
arpl
push
mov
cmp
jge
frstor
std
fs
adc
gs
jb
sbb
test
pop
add
add
stc
dec
xchg
scas
xor
adc
add
mov
lock
inc
mov
mov
or
shl
gs
inc
add
leave
shll
sub
inc
scas
popf
pop
stc
hlt
push
aas
adc
or
jmp
mov
mov
mov
sbbl
out
inc
ror
cmp
movsl
loope
js
jbe
mov
xor
lds
data16
loope
or
adc
mov
xchg
popl
lret
add
jge
xchg
mov
lock
fwait
mov
rorb
jg
pop
icebp
andl
mov
cmpsb
jp
int3
or
jno
cltd
pop
test
and
sub
movl
out
jmp
xlat
xchg
pop
mov
adc
mov
ds
mov
and
or
mov
mov
out
cmp
mov
jecxz
out
jnp
not
fnstsw
lret
div
nopl
iret
and
adc
push
pop
mov
rep
sbb
loop
test
push
loope
ss
push
pushf
insl
xlat
movsl
fstpt
add
cmp
fadds
adc
or
xchg
sub
pop
and
ret
test
jge
iret
js
rcrl
pop
cmp
sarl
sahf
mov
xor
icebp
insl
push
std
movsl
adc
jge
iret
jecxz
xor
repz
xchg
rcrb
mov
icebp
pop
mov
jmp
cmp
loope
gs
xlat
add
mov
shl
xor
cltd
or
ret
jno
sub
outsl
lcall
xorl
cmp
dec
inc
xchg
les
adc
in
fimuls
sahf
cltd
mov
mov
pushf
rolb
and
aad
clc
dec
jecxz
jle
sbb
out
cltd
pushl
out
push
dec
and
leave
movsb
mov
lcall
sub
mov
xchg
xchg
dec
mov
lock
sti
loop
lods
mov
loopne
sbb
push
sub
or
jae
pop
adc
or
aad
leave
xlat
add
or
fistpl
mov
imul
rorb
push
mov
fnstcw
outsb
mov
jp
stc
or
aas
xchg
cli
mov
mov
fadds
mov
inc
rep
cmp
cmp
vpcmpeqb
mov
xchg
out
lods
int
and
inc
iret
mov
sbb
scas
mov
out
ss
popf
shll
insb
cmpsb
jecxz
xor
or
shlb
add
std
push
pop
jbe
push
clc
xor
mov
mov
mov
pushf
push
outsb
iret
adc
in
xchg
xchg
roll
or
add
cli
sbb
jecxz
stos
out
outsb
sbb
sbb
mov
scas
inc
andb
sbb
xchg
and
enter
and
pushw
push
addr16
ja
or
scas
shrb
popf
mov
hlt
pop
lock
add
outsb
enter
jg
icebp
adc
jbe
mov
add
or
add
or
fstpt
mov
adc
sbb
add
or
sarl
mov
xchg
int
jge
sbb
sahf
push
addb
xchg
inc
mov
iret
xchg
ret
mov
mov
leave
div
popa
out
fisttpl
repnz
cmc
adc
inc
jl
jg
jecxz
std
in
mov
inc
add
dec
aas
movsl
int3
cmp
jp
lret
xor
cld
std
adc
jbe
add
xchg
mov
testl
add
repnz
hlt
mov
mov
mov
idivb
repz
inc
jle
and
mov
xchg
outsl
test
repz
aas
aad
rorb
xchg
push
outsb
mov
xchg
int
adc
inc
pop
lds
xor
cmpsb
or
arpl
out
mov
sar
popf
sub
push
outsl
push
and
and
out
stos
imul
mov
psraw
outsb
or
movsl
mov
and
mov
sbb
aas
lds
fidivs
in
aaa
pop
aad
pop
movsl
xchg
es
inc
fwait
add
loope
leave
out
jg
fisttpl
js
negb
fsts
mov
aas
loope
scas
cltd
mov
pop
repz
pop
aad
out
and
int
adc
sti
mov
loop
mov
lds
rorl
mov
xor
mov
or
out
jl
jp
in
and
add
pop
mov
sbb
push
mov
mov
ret
mov
rcll
adc
jno
not
out
fstl
push
pop
mov
or
aas
int
out
mov
mov
jmp
add
or
icebp
fsts
and
sti
mov
sti
cwtl
mul
and
les
outsb
bound
loope
add
dec
test
test
std
mov
push
mov
and
and
mov
adc
dec
and
pop
add
xchg
dec
dec
leave
mov
adc
xchg
jle
add
pop
mov
repz
mov
xchg
mov
mov
into
movsl
into
adc
xchg
pop
adc
enter
jb
movsl
imulb
int
push
jo
add
rorl
fwait
xchg
ja
adc
mov
rcll
clc
gs
xlat
hlt
je
idivl
xor
cltd
dec
or
adc
out
sti
add
mov
bound
ret
rol
mov
and
bound
in
push
inc
sbb
and
dec
fnstsw
or
cltd
lock
std
rorb
addl
js
xlat
push
ja
fwait
xchg
loope
mov
push
lret
stc
ja
aad
aad
mov
out
aam
outsb
inc
mov
ja
int
or
sub
mov
shll
add
cwtl
cmp
xorb
lcall
push
push
iret
fstpl
mov
sbb
xor
pop
insb
fwait
jg
flds
dec
jmp
push
mov
sbb
ss
fisttpl
jecxz
ja
mov
mov
movsl
icebp
or
ljmp
mov
sbb
add
xlat
popf
mov
sbb
add
or
jb
outsl
and
or
fwait
add
mov
icebp
lret
mov
mov
in
lods
loope
or
decl
je
icebp
mov
scas
inc
fldl
incb
pop
xchg
fidivrs
stc
dec
cltd
in
jnp
incl
adc
data16
aad
les
movsl
or
jno
shll
or
cltd
cltd
cmp
mov
jno
xlat
iret
pop
repz
mov
push
mov
mov
sbb
cltd
add
xchg
adc
decl
adc
or
jge
rol
inc
out
inc
push
or
orl
lcall
jno
stc
mov
xor
sbb
mov
mov
int
mov
push
inc
ret
add
repz
loope
jb
and
cmp
or
sar
out
jne
mov
psllq
cmp
adc
loope
std
aas
mov
fstl
cld
int
mov
repnz
in
in
repz
sbb
jp
dec
andb
movsl
cmp
mov
rcrl
jb
pop
push
aam
push
mov
fbld
mov
add
mov
add
ds
lea
ss
fstp
and
sub
dec
outsb
and
rcl
rol
xlat
xchg
aas
decb
and
add
lret
in
mov
cmpsl
cmp
outsl
test
lret
fnsave
sbb
ljmp
test
das
jmp
mov
stc
xchg
sbb
jecxz
dec
pop
xlat
sub
and
xchg
jmp
leave
xchg
lds
jle
pop
cmp
test
nop
adc
mov
add
dec
out
xlat
add
leave
loope
adc
rcll
pop
adc
leave
mov
cltd
cld
les
jg
in
mov
loop
fwait
mov
sbb
mov
fldl
pop
into
push
fwait
lds
out
dec
ret
add
add
stos
enter
xlat
out
test
ss
js
popf
add
addr16
or
cmovns
pop
and
gs
jle
mov
arpl
arpl
rcrl
imul
xchg
or
add
aad
sbb
call
dec
out
xchg
fsts
dec
jne
and
orl
xor
outsl
sub
dec
loopne
rcll
sti
outsb
push
imul
pop
mov
and
stc
aad
scas
fmull
sbb
test
rcll
xchg
adc
xchg
mov
cmc
lret
aad
dec
cltd
and
pop
jne
aas
int
jecxz
xchg
in
popf
in
dec
repz
mov
out
xchg
movsl
or
jle
jno
insb
xchg
add
jb
mov
xchg
pop
xchg
or
mov
jg
push
push
push
inc
xor
ret
adc
add
pop
lds
leave
mov
movsl
push
xor
imul
loope
sbb
inc
and
and
in
int
loop
lods
sarl
ret
js
mov
adc
mov
aad
std
and
xchg
mov
adc
xor
repz
jg
adc
xchg
pop
mov
adc
test
or
pop
popf
cmpsb
push
imul
push
pop
jo,pn
mov
mov
popf
sub
dec
cmp
aaa
cmp
pop
stos
xchg
les
push
in
pop
ljmp
add
es
add
mov
fnstcw
mov
mov
cltd
sbb
add
xchg
push
xor
push
push
mov
lods
stos
fdivrp
dec
add
sahf
lock
jecxz
xchg
fwait
std
mov
sarl
pop
jmp
fnsave
jecxz
std
and
jns
ss
rcrl
leave
pop
je
mov
xchg
mov
jmp
shl
mov
mov
mov
hlt
push
fwait
sub
xor
imul
or
aaa
adc
shlb
dec
leave
mov
stos
fidivl
add
scas
jo
mov
in
insl
xchg
lock
ss
sbb
outsl
loope
popf
sysret
add
fucomip
mov
add
xchg
add
cmpsb
and
or
or
xlat
mov
mov
mov
sub
adc
loope
mov
push
into
fucom
jmp
pop
subb
pop
lret
stc
mov
add
mov
scas
mov
inc
mov
cmp
fldl
or
cltd
shl
mov
lods
xchg
pushf
outsl
push
mov
xor
add
out
rcll
scas
in
push
adc
jle
je
ret
rcll
jg
mov
mov
mov
int
les
iret
sbb
fistpl
repnz
xchg
in
mov
xor
pop
ja
mov
hlt
push
fldl
std
fdivs
push
adc
jecxz
insl
sti
adc
rcrl
xchg
in
hlt
loope
out
dec
xchg
mov
mov
inc
add
lods
pop
stc
hlt
shll
aad
dec
fsts
push
mov
xlat
add
sbbl
sbbb
pop
mov
imul
xchg
or
sahf
pop
sbb
adc
cwtl
mov
fwait
in
jno
xlat
or
lods
and
in
adc
mov
inc
xchg
fwait
call
sbb
outsb
cmc
jb
sbb
push
or
cmpsb
pop
xchg
add
popfw
add
push
negl
repz
rcll
xor
cmc
mov
xchg
aad
out
push
inc
add
lret
and
mov
jp
cmp
scas
and
stos
aaa
adc
xchg
fildl
and
cltd
and
shll
popf
divb
cmpl
cmc
push
mov
outsl
push
mov
dec
push
lcall
xchg
adc
ljmp
push
psllq
and
or
mov
rcrl
sbb
jmp
es
dec
cmc
in
test
insb
outsb
jmp
add
setle
stc
add
scas
fwait
aad
and
inc
std
inc
cwtl
inc
jb
movl
lret
outsb
mov
adc
stos
test
int3
test
xor
dec
dec
fwait
jle
clc
sbb
icebp
lds
sbb
pusha
dec
jnp
sbb
cli
adc
jno
repz
xchg
or
out
mov
add
add
cmp
mov
or
xchg
lret
mov
mov
clc
aaa
pop
or
xchg
pop
jno
sub
cmpsb
xchg
mov
mov
loope
scas
or
add
sbb
xchg
arpl
adc
fwait
aad
out
fadds
dec
pop
adc
xchg
mov
mov
lea
mov
popf
adc
leave
xchg
cmpsb
in
ret
mov
iret
mov
stc
aas
shl
cltd
pop
or
jnp
popf
adc
leave
enter
or
rorl
adc
pop
shlb
mov
outsb
dec
cmp
push
or
shlb
repz
and
lahf
sbb
outsb
fdivrp
adc
loopne
inc
pop
dec
clc
add
mov
out
imul
mov
cmp
lahf
pop
lds
cmp
inc
xchg
les
adc
repnz
cmp
add
mov
scas
out
fsubp
iret
fwait
arpl
fstps
add
insl
adc
sub
or
aas
sarl
sbb
mov
sbb
stc
repnz
mov
or
mov
sbb
imul
inc
lds
jo
scas
int
cmpsl
xor
xchg
test
loope
out
mov
aam
int
dec
inc
push
jecxz
out
inc
jp
mov
and
adc
mov
lock
jbe
movsl
fistl
or
inc
pop
outsl
mov
ret
fwait
scas
jbe
or
adc
popf
sub
adc
xchg
adc
insl
mov
xchg
lds
sti
sbb
adc
movsbl
dec
shrb
aas
sub
cs
jnp
xchg
test
xor
sub
shrb
dec
lods
imul
mov
outsb
movsl
lods
repz
mov
jl,pn
jle
jle
dec
movsb
and
sar
leave
imul
xchg
or
xchg
pusha
pop
dec
popf
inc
push
add
fsubrs
mov
jne
inc
mov
int
fsincos
adc
jns
mov
mov
mov
sbb
cwtl
mov
mov
fwait
lods
mov
xchg
lahf
adc
sahf
lock
repz
cmpsb
mov
and
in
cmpsb
mov
sarl
pop
shrb
push
lcall
out
jl
enter
sbb
or
and
mov
adc
mov
xor
loop
das
jne
add
or
fnstenv
std
repz
fiaddl
dec
xchg
std
jo
bound
mov
xchg
mov
outsb
insb
std
lods
fstpt
adc
out
xchg
rcrl
push
add
xchg
ja
mov
rcll
mov
mov
cltd
lds
dec
mov
sbb
mov
lcall
lods
xor
loope
jge
leave
mov
cltd
data16
testl
xchg
push
sbb
jnp
aad
stos
jb
inc
fwait
mov
rcll
add
jno
xchg
fwait
lds
adc
cmp
add
push
mov
adcb
test
pop
in
adc
cmp
aad
mov
xchg
jo
and
shrl
aas
or
pop
ljmp
rcll
add
mov
scas
test
bsf
popf
xchg
adc
popf
test
pop
dec
in
cs
aaa
in
shlb
inc
lret
xchg
scas
aad
scas
aad
sti
or
dec
ret
jge
pshufw
sbb
aas
add
add
out
and
rol
ja
xchg
sbb
mov
inc
insl
int
dec
scas
ficoml
aas
adc
push
jle
testb
inc
mov
jae
mov
sti
iret
mov
mov
push
pop
leave
mov
je
rcll
popa
movsb
ret
pop
movsl
enter
aad
lret
mov
dec
or
out
dec
jno
sbb
shl
push
outsl
add
xchg
fstl
sbb
dec
ds
popf
or
fcomp
push
adc
pushf
test
push
add
cmp
mov
jecxz
mov
push
xlat
and
jl
jl
orl
outsb
mov
rol
sbb
out
mov
mov
mov
aaa
xlat
mov
outsl
std
add
mulb
add
sbb
mov
aad
jae
xlat
icebp
xchg
xchg
add
scas
bound
adc
mov
outsl
mov
leave
cltd
out
adc
adc
repz
mov
mov
jecxz
std
sti
movsl
mov
in
repnz
stos
xor
stc
mov
lret
xor
and
xlat
mov
add
sbb
mov
js
inc
jne
lret
add
jl
adc
xchg
sbb
pop
stos
or
iret
adc
loopne
imul
jmp
add
shrl
mov
jbe
leave
mov
ss
icebp
fdivs
or
idivb
adcb
ret
pop
mov
flds
ljmp
mov
stos
ror
jb
sub
sbb
mov
shlb
je
xchg
xlat
xchg
add
adc
mov
fildl
adc
push
cmp
icebp
or
mov
shll
aas
add
sub
aas
push
in
cmc
jge
lret
mov
int
mov
mov
in
pop
popa
xchg
or
xchg
aad
cmp
mov
psrld
scas
jecxz
adc
sbb
frstor
shll
outsb
xor
fwait
in
mov
lret
cmp
pop
lret
pop
xchg
push
mov
scas
shl
jl
push
arpl
mov
ss
or
sbb
mov
mov
jg
xchg
jg
jecxz
cltd
outsb
xor
xchg
pop
cltd
aad
imul
js
in
pop
mov
fdivr
jg
testl
inc
xchg
cmpb
inc
mov
jns
add
dec
call
fldcw
test
fnsave
add
jle
je
xchg
iret
xchg
xchg
out
and
mov
call
popf
add
jnp
add
in
mov
repz
pop
pmullw
insl
sbb
jno
add
testb
std
call
sub
fldl
xchg
xchg
notl
movsb
js
mov
aad
inc
repz
or
cld
or
test
mov
jno
add
lods
stos
aaa
scas
sbb
or
lock
and
or
outsb
mov
stc
pushl
aad
push
div
inc
and
sti
adc
lock
daa
sbb
test
mov
or
or
test
lods
adc
loope
ret
lds
ds
or
shll
sti
mov
sbb
fwait
lret
repnz
mov
inc
movsb
push
sbb
fwait
stc
pop
ffree
ret
lret
aas
loope
jae
pop
xchg
mov
aad
aas
mov
fimull
ret
fwait
nop
popa
icebp
fldl
fnstsw
xlat
xchg
sbb
loop
ljmp
mov
in
xchg
xchg
inc
fbstp
inc
jmp
pop
mov
shll
inc
dec
xor
std
out
xor
in
repz
push
scas
xlat
fwait
lock
out
xchg
test
out
inc
testb
in
gs
int
sbbb
loop
xchg
mov
in
xchg
inc
dec
repz
mov
es
dec
lahf
rol
dec
xor
push
js
mov
and
movsl
decl
push
fidivs
xchg
mov
xor
cs
incl
or
adc
or
push
incl
mov
inc
push
mov
aaa
push
sti
std
aas
into
pop
loop
popf
gs
push
sub
jp
lret
popf
lsl
adc
lock
add
mov
in
inc
aam
std
adc
movsb
movsl
sbb
outsb
shll
pop
lds
add
cmc
pop
or
push
in
jge
adc
into
xlat
shrb
into
in
adc
ljmp
mov
and
or
pop
lds
xchg
addl
cmpsl
push
xchg
mov
lea
mov
adc
fwait
outsl
or
dec
loope
lock
push
cwtl
jnp
adc
ret
gs
pop
movsl
pcmpgtd
xchg
testl
sbb
and
frstor
or
hlt
mov
mov
mov
sar
jle
dec
push
pop
jae
or
in
daa
and
arpl
sbb
and
xchg
iret
divl
testb
jbe
loope
mov
or
sbb
and
sub
repz
xsavec
stc
lret
mov
xor
and
outsb
movsb
adc
adc
mov
shll
popf
xor
xlat
mov
fucom
pop
sub
insb
xchg
cmp
jmp
or
fldcw
test
mov
mov
aaa
push
mov
sbb
lcall
test
jne
icebp
mov
aam
clc
jb,pt
ret
cmc
sub
mov
mov
inc
pop
xchg
outsl
inc
idiv
in
je
xchg
lret
mov
icebp
rcrl
test
jb
inc
mov
pushf
xor
std
fucomp
popf
dec
outsb
cltd
fwait
push
mov
and
clc
sti
lock
ffree
mov
fistpl
outsl
pop
cmpl
lret
rorb
and
outsl
loope
movsl
leave
xchg
pop
hlt
mov
mov
mov
add
fwait
inc
fcmovne
popf
jbe
or
test
lret
mov
xchg
cltd
xchg
mov
mov
insb
mov
int
aad
xchg
add
adc
sbb
fdecstp
wbinvd
loope
cmp
call
mov
outsb
or
pop
negl
flds
out
sbb
enter
pop
mov
add
and
jae
sbb
pop
mov
dec
pop
dec
or
mov
testl
inc
imulb
fwait
mov
leave
jno
icebp
mov
in
int
dec
add
jbe
adc
xchg
les
lods
mov
movsl
and
xchg
outsl
mov
into
adc
ret
xorb
xchg
pop
sbb
stos
dec
pop
or
push
outsl
sarb
je
pop
mov
inc
icebp
outsl
and
out
mov
pop
add
ficomps
inc
je
aad
fdiv
and
cmp
push
mov
push
jle
adc
xchg
js
fnstsw
mov
hlt
scas
aas
cmpsb
ud2
imul
cmpsb
mov
dec
lds
inc
jns
mov
mov
bound
fstp
adc
imul
negb
pop
or
mov
dec
xchg
imul
mov
adc
add
or
push
jnp
addr16
xchg
sbb
aas
ret
cwtl
add
adc
mov
mov
cltd
sti
fwait
leave
and
xlat
loope
inc
mov
mov
lret
xchg
pop
in
in
xchg
mov
inc
jp
lret
negb
ret
fwait
test
neg
cld
out
jbe
or
push
jno
xchg
in
pop
test
mov
and
xchg
hlt
adc
sbb
adc
std
roll
sub
insl
or
xchg
notb
movsl
mov
rorl
mov
mov
jne
mov
add
fistpl
aam
out
mov
sti
cli
mov
stc
mov
outsb
sbb
jno
add
fnstenv
mov
mov
fdivp
add
aaa
adc
push
popf
dec
out
pop
ljmp
scas
sbb
repz
mov
fnsave
outsb
mov
fistps
mov
push
jnp
xchg
mov
int
mov
insb
jo
xchg
pop
adc
hlt
les
mov
jle
and
push
adc
call
orl
mov
test
push
xchg
ret
xchg
add
ffree
sbb
sbb
mov
dec
push
jecxz
scas
add
mov
shl
jg
movsl
aad
jg
jae
mov
iret
xchg
fstps
or
jnp
mov
ret
cmp
movsb
addr16
pop
in
gs
pushl
movsl
add
mov
mov
xchg
pop
push
push
xchg
xchg
push
icebp
lods
jecxz
jno
mov
jno
ficomps
lcall
xchg
ret
outsl
repnz
add
mov
adc
push
mov
add
addr16
lret
ljmp
adc
lea
data16
pop
sbb
mov
notl
out
jl
in
add
mov
shrb
xchg
js
inc
in
pop
movsl
push
lock
fstp
cmp
sbb
mov
xchg
lock
outsb
sbb
push
fldenv
and
cwtl
add
and
in
xor
or
lock
pop
clc
inc
sub
xchg
test
sbb
mov
in
stos
dec
jno
sarl
mul
into
mov
adc
or
mov
iret
ret
mov
je
xchg
sar
mov
lret
fcoms
jnp
movsl
adc
add
hlt
sub
lahf
pop
inc
fcmovnu
and
imul
inc
stos
xchg
out
dec
sti
jg
mov
add
pop
xchg
leave
mov
sub
pop
notb
cmpsb
jae
loope
xchg
fxch
jle
mov
cmpsb
pushf
xchg
popf
fwait
sub
adc
stos
fwait
mov
int3
jl
jl
es
clc
xchg
fcoml
and
stos
dec
shr
sub
or
add
cltd
xchg
popf
ret
xor
mov
addr16
adc
decb
inc
mov
shll
out
cmp
out
xchg
add
xchg
js
jo
mov
mov
xchg
mov
popf
sbb
xchg
shll
pop
jecxz
iret
mov
imull
jnp
repz
sarl
fbstp
xor
movsl
call
imul
sti
ret
lock
pushl
std
xchg
testl
xchg
int3
sbb
leave
loope
mov
and
ret
push
add
xor
add
pop
or
jp
sub
test
push
adc
mov
mull
xchg
pop
or
test
setns
push
fisubs
jge
adc
or
cmp
mov
stos
add
or
in
mov
mov
icebp
xchg
xchg
mov
scas
or
mov
jecxz
xchg
lds
dec
sbb
xor
lret
sti
repz
cmpb
mov
add
daa
xchg
ja
adc
mov
int
or
xor
mov
js
and
xchg
xchg
test
mov
mov
pop
sub
idivl
xor
ffree
lods
cmc
shrb
int
cltd
enter
out
fs
popf
ret
jecxz
hlt
lret
xchg
adc
int
xchg
push
lret
fwait
sub
push
xchg
mov
clc
outsl
jb
loope
sub
sbb
adc
scas
lods
dec
and
loope
mov
ljmp
cmpsb
sbb
sahf
xchg
xor
negb
lret
out
mov
add
ljmp
lcall
in
jbe
mov
and
jecxz
imul
in
out
jmp
mov
xlat
incl
nop
cmpsb
mov
scas
inc
add
push
inc
sbb
scas
inc
xchg
aad
out
loope
orl
push
xchg
lods
jae
mov
mov
xchg
sub
dec
jno
flds
adc
cmp
sbb
cmp
and
jbe
decb
icebp
or
jns
aad
jecxz
or
fistl
mov
jne
mov
sar
outsb
or
hlt
arpl
xchg
cli
lods
mov
mov
mov
popf
sbb
sbb
jecxz
repz
jne
leave
aas
pmulhw
add
jnp
scas
dec
add
pop
iret
sahf
stos
or
stos
adc
add
xchg
ds
push
ljmp
push
roll
es
inc
test
lods
xchg
add
in
ja
mov
or
add
leave
sti
inc
addl
xchg
sbb
enter
aam
and
xor
aad
dec
xchg
imul
xor
adc
lret
aad
repnz
inc
pop
push
movl
loope
fwait
xchg
aad
loope
dec
pushl
jbe
pop
out
mov
xchg
mov
and
push
sti
scas
loope
outsl
bound
add
mov
cmc
mov
fisubl
cmp
mov
jns
pop
and
sbb
pop
add
ljmp
sbb
std
sub
mov
popf
or
dec
mov
fsubp
and
mov
inc
fldl2e
scas
call
std
fs
rorb
mov
adc
gs
or
mov
jb
add
adc
add
push
in
jno
orl
test
fistl
popf
out
jecxz
adc
nop
and
bound
and
shrl
cmpsb
movsl
out
icebp
ret
sbb
or
adc
mov
xchg
and
movsl
xorl
outsb
jb
cltd
std
int3
jle
jb
xlat
popf
add
sti
test
jle
js
and
xchg
xor
jae
cmp
push
jnp
stc
pop
jnp
mov
in
aas
cmp
lret
incl
dec
mov
inc
insl
xchg
xlat
aaa
or
arpl
push
lds
adc
cmpsb
fdivrs
fstpl
shr
outsl
sti
mov
adc
sbb
call
xor
in
push
mov
sbb
fstl
sub
or
mov
adc
aad
pushf
shrl
mov
icebp
cwtl
cwtl
leave
xlat
fisttpl
loope
xor
and
sbb
ja
xchg
jmp
pop
int
push
jle
jl
ret
rorb
jbe
leave
or
mull
scas
cld
adc
jle
addl
jle,pt
and
out
fcmove
jne
pop
xchg
fldz
xor
scas
pop
inc
jno
adc
icebp
cltd
and
add
sti
fidivl
sbb
popf
mov
push
sub
js
loopne
cmp
jp
or
mov
fisubl
dec
mov
or
data16
sbb
lcall
sub
test
faddl
push
mov
nop
movsb
rorl
pop
mul
icebp
ss
ljmp
std
loope
psrlw
cli
je
sbb
ss
mov
hlt
fmulp
pop
pop
xchg
mov
cltd
push
sub
xchg
xchg
popa
out
mov
or
or
mov
mov
fldenv
add
jnp
xlat
jecxz
jne
testl
and
cmp
push
dec
xchg
mov
jb
pop
hlt
aad
js
aad
or
stc
or
int3
xor
fisttpl
jge
sbb
sar
xlat
pcmpgtd
dec
in
testl
test
mov
pop
add
shll
out
repz
inc
mov
repz
enter
scas
out
leave
jb
fst
repz
mov
adc
push
sbb
test
adc
or
fwait
shll
aas
int
punpckhwd
sarl
pop
jbe
shr
mov
outsb
es
and
orl
jno
inc
pop
mov
sti
sbb
jne
iret
mov
or
aaa
stos
test
pop
roll
repnz
repz
add
and
int
add
mov
sbb
push
cld
call
stc
mov
cmp
ja
adc
cmp
inc
aad
xchg
mov
jb
mov
or
movl
out
mov
ret
mov
lahf
mov
pop
stos
fwait
pop
adc
xchg
push
jbe
inc
mov
addr16
popf
mov
or
lea
stc
std
and
cli
dec
xchg
popf
cmp
std
push
stc
adc
lock
dec
mov
iret
fwait
imul
sarb
fidivl
std
movsl
adc
cmpsl
imul
or
loope
imulb
mov
icebp
inc
mov
jns
repz
xor
mov
or
test
cmc
imul
sbb
cmc
add
push
mov
or
cmp
add
std
aas
into
repz
cmp
mov
pushl
pavgw
jae
adc
xchg
xchg
mov
shl
mov
out
mov
scas
mov
enter
dec
shr
fst
fwait
outsb
cmpsb
mov
divl
mov
fwait
xchg
adc
shrl
mov
add
sbb
mov
fidivrl
in
iret
inc
mov
xor
aaa
hlt
or
xor
xchg
repz
sub
mov
sbb
rcrl
mov
ret
mov
mov
in
and
add
inc
lret
out
fstpt
mov
into
or
hlt
push
leave
xchg
imul
pop
rcr
lcall
sbb
pop
or
xlat
in
adc
push
xor
in
cmp
sbb
movsl
movsb
xchg
adc
cld
repnz
shll
xchg
inc
iret
xchg
mov
insb
mov
or
adc
imul
je
rcl
xor
adc
add
xlat
cmpb
sbbb
xchg
lret
push
mov
jnp
scas
frstor
or
repz
pop
adc
std
add
icebp
mov
jb
movsl
cmc
sub
xchg
fnstenv
repz
cs
dec
shll
jae
xchg
lret
adc
repz
adc
jle
mov
sub
and
sub
nop
and
sub
xor
icebp
aam
sub
rep
dec
mov
nop
push
mov
je
mov
out
sbb
vunpckhps
push
fnstenv
stos
inc
or
mov
icebp
jns
sti
lock
and
ss
std
pop
daa
aad
cmp
jnp
repz
dec
ljmp
int3
xor
xchg
mov
stc
lock
shll
jnp
ljmp
mov
rcrl
mov
xchg
int
insl
pop
or
daa
cmp
cmp
les
cmp
fcmovnb
jo
jecxz
mov
out
xchg
inc
repz
add
adc
jnp
aad
ds
and
sahf
mov
fwait
inc
push
int
jae
cltd
aad
shll
loopne
add
ret
cltd
xchg
add
sarb
mov
addl
mov
push
mov
aam
dec
pop
movsl
pop
cmp
mov
rol
hlt
lcall
mov
pusha
adc
test
inc
lds
mov
push
pop
xor
aas
fyl2x
sti
inc
jae
add
xchg
xlat
cmpsl
jb
repnz
mov
pop
adcb
int
adc
add
sti
mov
aad
mov
xchg
xchg
iret
insb
cmpl
std
xchg
flds
push
xchg
xor
rclb
jne
int
mov
mov
gs
mov
mov
lods
or
and
sub
mov
adc
sti
repnz
pop
xor
mov
call
xchg
lcall
es
push
stc
rclb
mov
in
iret
cld
dec
mov
and
lcall
wbinvd
mov
repz
xchg
aas
lock
adc
jno
in
xchg
cltd
add
out
inc
pop
popa
scas
popl
adc
fsts
lea
in
mov
sbb
mov
sbb
xchg
mov
testb
jnp
loope
outsl
sahf
mov
mov
adc
lds
jl
imul
lret
int
mov
or
outsb
add
scas
aas
in
loope
adcl
pop
mov
push
pop
mov
or
aas
jnp
scas
lds
adc
push
and
xchg
sub
jno
and
xchg
xchg
stos
mov
ja
adc
iret
ret
mov
add
jb
cmpl
iret
jecxz
fwait
shll
clc
sarl
cmp
xchg
fistl
or
add
mov
scas
add
sbb
int
xor
push
dec
or
adc
jne
fstpl
fstps
cltd
lods
lcall
add
add
lahf
or
rorl
insb
xor
add
mov
adc
in
aam
out
push
mov
inc
jp
out
mov
adc
std
jg
scas
xchg
inc
shr
out
ljmp
mov
dec
into
mov
subl
jg
div
ss
test
xchg
ret
lret
xlat
and
call
orb
cltd
jg
jb
xchg
lcall
bound
adc
and
or
xchg
ja
stc
mov
sbb
daa
push
or
leave
cmp
inc
popf
xlat
fbstp
mov
fstl
lret
cmp
jo
xchg
mull
aad
dec
mov
lods
in
add
jae
mov
dec
sbb
or
loopne
mov
jg
adc
mov
out
push
movsl
in
mov
ss
in
mov
rcrl
dec
repnz
subl
jae
and
adc
test
or
fdivr
scas
out
mov
cmp
in
or
or
add
shl
pop
sub
sub
sti
sti
and
movsl
push
dec
out
add
hlt
mov
jae
and
push
imul
mov
or
mov
inc
cmpsl
clc
test
or
adc
mov
xchg
pop
into
mov
ss
lahf
sub
xchg
sbb
lret
add
std
lods
pop
paddq
call
push
push
imul
out
or
mov
xorl
xchg
sub
push
cwtl
loop
cmc
or
inc
iret
lods
ret
cmovge
lahf
out
cmp
imul
stos
mov
into
jl
jg
int
and
sbb
ret
pushf
shl
mov
ficompl
push
jae
aas
loope
cltd
std
jecxz
sbb
icebp
outsl
sti
mov
sbb
or
repnz
lea
dec
inc
movsl
ret
jae
pmulhw
lods
divl
inc
aam
mov
pop
and
inc
and
mov
xchg
push
jge
popf
fistpl
mov
fnstcw
mov
cmp
jb
or
dec
mov
mov
mov
pop
sub
notl
push
fstpl
aas
jo
sbb
adc
xchg
add
ljmp
cmp
aad
push
push
mull
rcll
imul
adc
data16
les
or
dec
fsubs
idivb
fnstsw
aad
int3
mov
inc
adc
or
xor
lcall
push
cltd
out
mov
cmp
add
sbb
ret
jg
add
fnstsw
jg
ja
mov
and
fsubl
or
sar
mov
iret
les
movsb
rcll
mov
jg
fstpt
jg
subl
faddl
negb
or
add
data16
sbb
je
jae
popl
adc
mov
mov
aad
ss
adc
add
mov
xor
shl
insl
add
fwait
outsb
fwait
sti
cmpsb
ret
data16
mov
negb
insb
outsl
shl
pop
mov
add
je
and
lret
call
or
ja
or
lret
scas
or
aaa
pop
repz
test
enter
mov
test
jnp
sbb
pop
idivb
popf
inc
mov
mov
inc
movsl
cmpsb
or
pop
adc
psllq
sbb
test
popa
cld
vminpd
lret
pop
mov
fildll
jbe
mov
mov
push
mov
dec
mov
jb
subb
leave
mov
std
mov
dec
mov
mov
lock
sysenter
mov
iret
sub
icebp
mov
jb
leave
loop
adc
lea
iret
and
xor
mov
in
cmpl
mov
xlat
scas
sti
test
inc
les
mov
jno
mov
jnp
or
push
into
lcall
fisubrs
mov
xlat
stc
stc
bnd
cs
sub
dec
jecxz
cltd
repz
cmp
leave
and
lret
lds
out
imul
in
sub
or
loopne
and
add
mov
icebp
ret
or
mov
sti
cld
jg
sti
jno
scas
icebp
in
mov
and
shr
popl
fnstcw
aad
adc
data16
in
fistl
xchg
and
pop
xchg
imul
push
mov
iret
or
sub
popf
mov
scas
and
dec
jnp
xchg
pop
mov
cmc
xchg
mov
ja
sahf
mov
mov
xor
add
fxam
pop
fstl
mov
xchg
ret
mov
ficoms
insb
push
dec
sub
sub
ljmp
add
lahf
or
shll
stc
pop
add
and
inc
cmp
pop
pop
cmp
notl
pop
shll
mov
popa
out
idivl
mov
stc
out
jmp
push
or
popa
or
and
mov
movsl
or
fnsave
pop
int3
push
xor
mov
fidivs
fwait
or
movsl
xchg
pop
sbb
in
ss
ret
fwait
xchg
stc
sti
lds
fnsave
nop
rcl
movsl
out
lods
jae
xorl
xchg
inc
or
stc
js
fld
dec
scas
xor
or
mov
std
jne
xchg
sbb
pop
mov
mov
imul
jae
rcll
mov
in
icebp
dec
mov
out
faddl
xchg
adc
in
inc
imul
adc
or
shrl
int
lret
fdivrl
cld
scas
cld
dec
leave
fmuls
adc
fwait
pop
add
cltd
fdivs
mov
frstor
scas
std
pop
xchg
rcrl
fldl
icebp
shl
aas
imul
out
repnz
mov
stos
sti
or
mov
cltd
cwtl
ret
adc
movl
iret
adc
jecxz
xchg
mov
xor
jge
xlat
xchg
cltd
lds
add
and
dec
sar
inc
xor
jb
mov
xchg
bnd
movsl
xor
or
xchg
call
in
out
cmpsl
xchg
push
xchg
sti
add
loope
lds
into
mov
xchg
shrb
imul
mov
loop
imul
mull
rolb
pop
mov
gs
push
cmp
adc
int3
outsb
and
jp
loope
add
dec
nop
cld
cltd
push
test
adc
pop
add
jge
inc
pop
dec
jecxz
adc
ret
fists
loope
jle
sbb
sbb
or
div
xor
ljmp
lret
mov
addr16
adc
int3
outsb
xchg
scas
movsl
push
mov
popa
adc
testb
sbb
cmpsb
negb
int
mov
iret
pop
or
sbb
jg
mov
sbb
inc
lds
mov
mov
ret
iret
cmp
mov
insl
or
cmc
scas
add
xchg
scas
leave
or
xchg
out
pop
movsl
ja
mov
adc
push
stc
mov
call
dec
pushf
popa
dec
outsb
or
roll
jge
xchg
add
sbb
adc
inc
or
mov
mov
mov
xchg
leave
data16
arpl
aad
push
or
hlt
adc
mov
mov
lcall
inc
fldenv
rcll
out
in
xor
repnz
mov
dec
mov
shll
nop
cmp
mov
xchg
popf
adc
js
fstl
adc
in
or
cmp
mov
pushf
pop
or
mov
add
inc
cmp
xchg
adc
pushl
and
mov
and
xchg
and
loope
dec
sar
push
ret
imul
pop
fldenv
insl
int
rcl
fwait
add
pop
cmpsb
xchg
sub
gs
out
mov
movsb
movsl
dec
push
push
addb
in
xchg
sbb
loope
mov
and
popa
stos
ds
add
xorl
pop
into
daa
adc
inc
daa
xchg
int
xor
paddw
out
lret
cltd
cli
xchg
je
add
push
lret
jne
iret
ljmp
mov
aad
daa
shl
cltd
std
es
pop
repz
adc
ss
adc
xchg
mov
jae
mov
xlat
insl
aad
loope
aad
mov
or
repz
out
fisttpl
fcomp
into
and
es
scas
mov
xchg
es
push
repnz
insb
pop
mov
adc
int
repnz
xchg
int
ja
add
xchg
or
mov
sbb
or
enter
test
pushf
xchg
inc
sbb
inc
stos
in
push
dec
leave
mov
repnz
mov
sbb
shrb
movsl
mov
cs
xorb
scas
jle
xchg
repnz
mov
adc
pop
jnp
pop
mov
daa
outsl
arpl
sbb
loope
sti
rclb
mov
xchg
test
mov
out
adc
sbb
pusha
nop
aad
inc
sti
mov
icebp
sub
fdivrs
leave
jb
imulb
scas
mov
inc
jbe
testl
or
cmpsb
rorl
mov
popf
mov
std
mov
mov
mov
jmp
mov
fdivrp
setne
call
sub
pop
lret
ret
cmpsl
lods
or
mov
stc
add
rcr
ret
scas
sbb
mov
iret
hlt
jno
out
adc
jge
xor
test
lret
jg
int
sbb
xchg
lret
outsl
xor
icebp
movb
rol
xchg
int3
fidivs
lds
and
cmp
rol
push
aas
pushfw
xor
fistpl
popf
push
test
sub
scas
es
push
orl
pop
subl
add
sbb
movsl
add
jge
mov
loop
pop
mov
pop
icebp
call
imul
adc
call
leave
inc
dec
roll
stc
frstor
jecxz
and
cmp
ret
jae
or
ja
mov
lcall
or
cmp
shll
pop
cmp
push
pop
pop
repnz
mov
outsb
xchg
lret
xchg
adc
outsb
jno
repz
mul
adc
adc
cli
out
cmp
mov
mov
xchg
mov
pop
insl
mov
popf
shrl
cmp
or
adc
xchg
and
jge
inc
jb
test
xor
fwait
in
int
jg
mov
xchg
push
fnstcw
movsl
lds
sbb
aad
cld
pop
push
inc
xchg
xchg
mov
rcrb
push
jge
adcl
adc
pop
pop
fstp
outsb
lods
add
mov
xchg
andb
outsb
out
aad
cmp
pop
jne
mov
les
lock
and
int
addl
sbb
incl
or
inc
xor
jnp
ret
adc
xchg
adc
test
loopne
popf
dec
and
aad
roll
jl
js
mov
push
outsl
aas
pushl
mov
outsb
pushf
inc
jp
or
mov
popaw
adc
adc
fwait
loope
push
push
popf
lea
aad
aaa
scas
test
sbb
lret
pop
out
inc
jb
sbb
cmp
inc
xchg
sub
stc
add
or
xor
sbb
or
sarb
push
inc
imul
xchg
lcall
popf
sti
jecxz
jns
aas
jle
mov
cltd
mov
xor
inc
insl
dec
cld
scas
or
push
and
inc
jge
loope
adc
adcl
adc
int
in
cmpsb
std
mov
outsb
imul
adc
xor
dec
imul
or
aad
shr
adc
adc
dec
lcall
loopne
outsb
adc
lcall
mov
xor
adc
aas
sbb
loop
loope
sub
inc
fnstsw
cmp
shrl
inc
pop
cmp
outsb
cmp
shrl
or
inc
cmp
cmp
pop
inc
add
stos
sbb
inc
pop
cmp
mov
fwait
mov
mov
aad
mov
test
testl
shlb
jnp
into
and
cmpsb
inc
dec
outsb
movsl
adc
aas
mov
pop
and
cmp
pop
xchg
lcall
mov
cld
movsl
adc
adc
pop
inc
mov
addr16
adc
sbb
mov
jecxz
add
inc
stc
cmp
fstl
cltd
push
fwait
imul
xchg
fstps
jecxz
movlps
push
ljmp
not
ljmp
inc
adc
daa
mov
sbb
lcall
imulb
pop
movsl
adc
ret
cmc
rorl
sti
fcmovnb
repz
loope
ficompl
pop
dec
and
xlat
or
ficompl
and
jecxz
dec
mov
lahf
xchg
cmp
mov
jno
mov
cltd
call
sub
cltd
mov
mov
adc
mov
idiv
add
mov
mov
rcr
fldenv
divb
adc
fwait
sbb
cmpsl
mov
shr
loope
iret
or
mov
mov
icebp
mov
shl
nop/reserved
jle
roll
ret
sbb
mov
jae
and
jge
inc
cwtl
inc
mov
leave
add
mov
in
dec
mov
mov
or
out
jecxz
fcomi
mov
push
stc
test
add
mov
xlat
stos
jae
mov
mov
and
add
xchg
xchg
fnsave
pop
xor
pop
bound
sti
mov
icebp
lret
je
and
push
sub
push
loope
fcmovnbe
scas
aad
sbbl
std
and
stc
insl
xchg
push
mov
clc
xchg
mov
mov
std
fnsave
dec
xchg
jmp
add
lcall
in
loope
seta
shll
lret
shll
jb
in
js
mov
lds
fwait
ja
mov
cmc
add
xchg
mov
jnp
iret
and
sti
adc
in
movsl
sbb
lret
iret
mov
mull
fdivrs
aas
jl
xchg
fldl
repnz
repz
repz
jbe
std
leave
mov
sbb
repz
and
pop
movsl
mov
jle
mov
or
jno
adc
jo
pop
testl
adcl
aas
out
jbe
int
push
jmp
jge
rorl
sub
or
pop
icebp
add
mov
outsl
sti
fnstenv
aad
mov
inc
leave
cltd
sbb
and
shll
ror
adc
lret
movsl
adc
inc
mov
and
xlat
rorb
xchg
ret
in
int
div
adc
jae
je
or
sub
jbe
iret
icebp
fistl
cltd
mov
add
aaa
xor
repz
clc
icebp
sub
loope
mov
in
adc
int
scas
rcll
inc
leave
mov
ror
insb
sahf
out
xchg
testl
popl
imul
jp
mov
mov
xor
fistl
imul
fstpl
cltd
push
icebp
adc
aas
push
mov
pop
sbb
dec
int
mov
test
aam
push
adc
sbb
add
mov
lret
scas
dec
mov
inc
xchg
mov
push
out
push
or
adc
add
inc
imul
fwait
jp
loope
lret
and
xchg
xlat
pop
sub
sti
std
dec
and
fwait
pop
or
push
push
xchg
jne
popl
and
movsl
mul
into
push
xchg
mov
das
inc
popf
cmpsl
js
xchg
adc
pop
xchg
icebp
add
mov
push
fldenv
adc
fcmovbe
aaa
in
into
test
or
in
mov
cld
dec
adc
and
arpl
fnsave
mov
dec
xlat
adc
ja
mov
or
loope
mov
mov
cltd
xor
scas
push
outsb
aad
in
test
cs
sub
ret
fdivrs
jge
sti
jo
out
cmp
pop
cmp
lret
xchg
add
mov
dec
pop
adc
dec
mov
pop
mov
movsl
scas
lds
inc
outsb
ss
rorl
add
or
mov
pop
std
pusha
mov
or
inc
xor
or
iret
incb
xchg
or
or
mov
popa
mov
sbb
sbb
aad
jp
movd
icebp
mov
out
out
loope
mov
neg
pop
sbb
std
sti
mov
in
loop
cmc
lret
aad
out
push
fists
adc
ljmp
cmp
and
outsb
repz
mov
loope
jbe
mov
lds
flds
std
inc
and
cltd
jmp
cmp
fwait
jnp
sarl
mov
xchg
mov
sub
mov
ud0
mov
mov
pop
sbb
jmp
stc
leave
inc
lahf
icebp
rcr
xor
or
mov
sub
lret
movsl
add
test
nop
shll
incl
sbb
push
jb
repz
mov
sbb
test
mov
or
mov
add
mov
xchg
xchg
int
test
jae
lret
xlat
notl
sti
iret
mov
or
stc
icebp
push
add
lods
jb
mov
ja
adc
std
rolb
lahf
dec
aaa
dec
fistpll
mov
inc
js
fwait
orb
shll
mov
mull
jle
sbb
sbb
in
xchg
mov
out
dec
rcrl
adc
pop
sti
xor
xor
movsl
repz
mov
js
cmp
add
adc
sbb
xchg
popf
mov
iret
in
inc
sub
xchg
mov
psllq
movsl
or
les
mov
push
in
aaa
add
lds
test
out
loope
xlat
stc
adc
dec
lods
loop
mov
or
ret
movsl
fnsave
add
hlt
fstps
dec
out
jl
cs
scas
aas
mov
jnp
add
add
frstor
call
sti
add
sbb
or
mov
mov
stc
sbb
fisttps
je
adc
cmpsl
mov
mov
cltd
add
sbb
loope
punpckldq
dec
inc
scas
jge
leave
gs
push
pop
xchg
push
addr16
cltd
leave
jge
stc
or
or
pop
sbb
popa
jbe
add
roll
sub
jge
cmpb
ret
cmp
xchg
xchg
mov
popf
daa
in
mov
xchg
test
sti
sbb
and
adc
pop
leave
ret
outsb
sub
nop
push
xchg
mov
jecxz
cld
pop
cmp
xchg
jns
mov
push
push
popa
out
fdivs
cmpsb
sbb
cmpsb
ss
mov
cmp
std
test
mov
pushf
ret
mov
adc
sti
outsb
mov
xor
int3
xor
loope
dec
out
icebp
insb
in
out
sub
cld
mov
xlat
lret
mov
pop
sbb
sar
clc
dec
or
push
jmp
cmp
inc
xchg
mov
rcr
fisubs
rorl
xchg
fs
ret
stos
mov
shll
push
fnstcw
pop
jne
in
jecxz
cmp
pop
fldt
jge
repz
loopne
and
or
jg
in
addr16
or
mov
xchg
fnstcw
push
jns
pop
fisubl
shll
int
repnz
js
xchg
jecxz
cwtl
in
imul
xchg
cld
mov
les
iret
push
pop
and
jecxz
xor
mov
jmp
xchg
mul
testl
jb
cltd
lret
add
pop
fisttpl
cmp
test
pop
ret
xchg
cmp
repz
xchg
fisttpl
lretw
add
dec
cmpsl
pusha
pop
pop
pavgw
or
stc
loop
insb
and
pop
pop
cld
aaa
ret
jge
or
add
std
scas
jecxz
dec
sti
stc
xchg
mov
xchg
fsqrt
push
cltd
std
push
ljmp
jne
aas
adc
unpcklps
mov
mov
cmp
mov
adc
out
jecxz
loope
xchg
mov
icebp
dec
jbe
rcll
insl
loope
adc
aad
mov
adc
mov
cmp
imulb
ret
out
ljmp
aas
push
xorl
xchg
sbb
sbb
repnz
ffree
and
pop
sarl
jecxz
insl
adc
xchg
jae
mov
rcrl
lods
rolb
pushf
cltd
mov
test
test
lret
sbb
sti
clc
pop
ss
movl
imul
jno
ret
sbb
mov
andb
xchg
je
adc
movsb
icebp
sbb
mov
or
pop
scas
je
or
adc
mov
movsl
add
mov
xor
clc
mov
jbe
popf
mov
jns
ror
icebp
fldcw
push
ret
out
decl
dec
in
loope
add
ret
adc
xchg
scas
aad
jb
mov
imul
lret
loope
pushl
iret
pop
mov
pop
add
fidivrs
out
enter
inc
je
adc
mov
stc
stos
dec
mov
xchg
outsb
jmp
sub
ret
aas
clc
mov
pop
add
add
sbb
and
push
mov
xor
in
xchg
mov
xor
jmp
fstps
push
add
or
rolb
add
dec
fdivr
dec
imul
push
nopl
lds
dec
cltd
in
cmovle
cmp
cld
pop
repz
out
pop
fstpl
lock
fwait
insb
xor
and
add
sarl
sbb
inc
mov
sub
sub
fwait
pop
xchg
sub
imul
mov
lcall
testb
mov
leave
fcmovnu
push
loope
jae
icebp
leave
int
mov
frstor
rcrb
out
orb
test
jnp
test
push
mov
xchg
stc
mov
cmp
std
xchg
push
popf
jge
mov
fmuls
movzbl
xchg
scas
mov
scas
adc
ret
pop
idivl
in
in
dec
pop
ror
mov
sbb
ret
testl
std
push
fnsave
xlat
sub
and
add
int
and
cli
call
mov
loope
leave
lds
aam
mov
xchg
in
in
mov
test
imul
sti
xchg
icebp
xchg
jno
leave
mov
or
sbbl
fwait
iret
loope
xor
pop
jl
xchg
push
sbb
push
test
movsl
push
pop
lds
movsl
xor
or
test
jne
and
mov
mov
dec
sub
pmuludq
adc
cli
stos
mov
frstor
adcl
shll
popf
sbb
push
iret
sbb
sub
insl
xchg
add
cld
in
xchg
pop
fstps
push
js,pt
leave
mov
jmp
xchg
pop
test
icebp
pusha
fldt
mov
jae
std
leave
add
into
add
push
xchg
lret
xchg
int
fwait
dec
fcmovnbe
dec
mov
insb
in
xchg
mov
mov
aaa
push
popf
aad
mov
outsb
jecxz
ret
xchg
loope
jno
ud2
stc
out
inc
int
xchg
mov
je
popf
push
xchg
fldl
aad
adc
inc
mov
sarl
fwait
test
outsl
iret
ret
jnp
lret
pop
mov
lods
jecxz
inc
cmpsb
add
in
mov
outsb
fnsave
es
or
sbb
std
les
or
negl
push
dec
jecxz
ja
movsl
xlat
fld
mov
inc
xchg
pop
packssdw
jge
pop
repnz
std
mov
dec
xchg
push
dec
add
sahf
pop
mov
dec
in
pop
aad
xor
in
mov
mov
sbb
movsl
imul
adc
rol
shll
adc
addr16
popf
pop
sarb
mov
fildl
shr
mov
aad
icebp
xchg
iret
sub
push
sub
fs
shlb
mov
js
arpl
notl
push
mov
or
jg
jecxz
add
add
sub
adc
cmp
shll
in
mov
pushl
clc
xor
jmp
gs
stc
leave
enter
dec
loope
frstor
addr16
xchg
inc
iret
hlt
push
into
cltd
inc
mov
lret
cmp
push
xor
mov
in
scas
adc
lds
xor
iret
xlat
aad
jle
jbe
sbb
sub
jmp
jmp
test
out
fadds
dec
fstpt
loope
inc
jno
and
fildll
jge
mov
xlat
mov
lsl
popf
outsb
rolb
shl
mov
xchg
ds
fidivrs
mov
adc
mov
popf
inc
pop
cs
ret
jge
or
adc
mov
out
mov
cmp
lret
mov
add
mov
movsl
cmp
xchg
in
iret
rep
int
dec
mov
leave
aaa
add
jno
fwait
xchg
scas
shlb
sbb
push
sysret
mov
mov
adc
dec
mov
popf
pop
aaa
repnz
add
dec
sbb
notl
dec
cmp
or
mulb
call
xchg
xchg
or
xchg
scas
jo
add
aas
ss
mov
ret
xchg
insb
sbb
mov
add
cmp
sbb
cld
dec
scas
fnstenv
lds
imul
mov
stc
out
mov
sbb
dec
xlat
fstps
aad
enter
mov
sti
add
mov
aad
xchg
xchg
call
push
mov
ret
enter
into
dec
cmp
mov
testl
xchg
add
in
mov
mov
jge
sbb
add
out
push
xchg
jae
mov
ss
stos
pop
lahf
dec
lods
in
iret
mov
add
mov
gs
int
jmp
push
lds
pop
leave
mov
stos
dec
dec
xchg
push
stos
adc
push
in
mov
xchg
lret
xchg
divb
into
fwait
repz
sar
add
xor
arpl
mov
cmp
mov
sbb
mov
inc
imul
adcl
mov
adc
out
jb
frstor
sbb
xchg
or
or
sub
or
ror
jb
in
push
xchg
shll
pop
outsb
pusha
test
fadds
test
nop
les
repz
pop
leave
ja
fildl
pusha
ja
sbb
mov
int
add
movsl
or
sbb
scas
adc
xchg
pop
cmp
clc
in
sti
cmp
jecxz
add
out
rcll
dec
pop
imull
mov
mov
add
mov
or
fwait
cmp
lcall
in
mov
xor
inc
std
push
dec
sti
add
ret
cmc
ret
je
sbb
ds
aas
out
mov
sbbl
lds
clc
sbb
adc
add
lock
leave
sub
icebp
or
pop
xlat
xchg
shrb
imul
mov
mov
ja
add
xchg
imul
dec
jg
xchg
jge
aad
jl
je
fwait
lret
xor
pop
xor
mov
fprem1
fs
fldl
and
xchg
fs
jg
add
push
lods
xchg
scas
inc
lods
out
inc
xlat
cwtd
xchg
repz
stc
movsl
mov
sti
outsb
imul
sub
mov
inc
lret
call
rcl
inc
xor
in
adc
pop
adc
inc
sbb
lret
fucom
bound
imulb
or
add
mov
mov
inc
adc
jecxz
lcall
test
daa
ret
xlat
mov
aad
sbb
dec
push
dec
cmp
push
into
fnsave
pop
data16
mov
aas
lret
push
flds
stc
sar
sub
test
pop
test
and
lds
fistpll
std
add
add
nop
cmp
push
inc
cmp
sbb
push
xchg
or
stc
outsb
jmp
and
add
stc
iret
pop
pop
or
sahf
sarl
shl
outsb
mov
jmp
jmp
inc
stc
jmp
rcll
jmp
ds
inc
outsb
mov
outsb
add
outsb
mov
shrl
inc
out
jmp
shrl
shrb
sarl
mov
jmp
jmp
les
cmp
xlat
add
shll
stc
jmp
rorb
jmp
jmp
mov
inc
sub
jmp
jmp
lods
jns
outsb
and
out
pop
jno
mov
sub
adc
sbb
lcall
adc
icebp
fwait
adc
repz
mov
loope
mov
xlat
movsl
loope
int
add
leave
es
and
out
jnp
and
adc
ret
add
adc
outsl
popf
fcmovnb
inc
flds
inc
sbb
adc
and
int
fcomps
xchg
mov
lcall
and
popf
dec
add
scas
jbe
adc
inc
fstpt
movntq
sbb
les
repz
adc
ljmp
js
inc
xchg
xlat
xor
or
jl
aas
lds
sbb
dec
js
ljmp
jecxz
lds
cmpsb
mov
in
adc
cmp
sbb
sub
adc
mov
popf
xchg
jl
xchg
ja
adc
leave
in
int
inc
sbb
fwait
insb
mov
and
dec
paddusb
sbb
push
repz
adc
daa
mov
jne
xchg
mov
adc
inc
mov
mov
mov
add
mov
xor
xchg
mov
or
dec
int
push
out
enter
notl
test
sbb
add
repnz
mov
and
xchg
mov
movsl
iret
lret
repz
mov
daa
adc
aad
xchg
sar
mov
adc
add
push
sbb
mov
or
out
loope
jnp
mov
push
jbe
mov
fldl
ljmp
cmpsl
xchg
addr16
mov
lcall
enter
sbb
add
jne
popf
adc
sub
testb
xchg
lsl
movsb
inc
jecxz
push
push
loope
aad
in
jge
adc
jl
jae
add
mov
lea
cmovge
sbb
mov
jno
pop
push
xchg
lret
sbb
iret
subl
shrl
or
in
cltd
pop
mov
sbb
int
adc
call
in
add
leave
dec
andl
adc
ret
xchg
stc
in
add
int
sbb
pcmpeqb
loope
mov
sti
ja
out
jecxz
lds
outsb
nop
imul
xlat
jae
iret
loope
cmc
call
std
sbb
adc
mov
xlat
out
cmpsb
outsb
addr16
or
cmpsb
add
enter
mov
mov
bound
mov
mov
vmwrite
lea
adc
movsl
rorl
pop
jo
sar
and
or
pop
repz
loope
or
jecxz
xchg
mov
add
ja
movsl
sbb
lret
loope
data16
daa
add
pop
jns
xchg
fisubs
jge
incl
aad
ret
add
mov
std
sbb
jl
mov
and
push
stc
shll
icebp
sub
div
pop
mov
jnp
sahf
jae
aad
sbb
icebp
pop
or
mov
pop
jne
int
rol
sbb
xchg
or
sahf
repnz
mov
push
adcl
mov
cmp
out
data16
std
xor
lcall
bound
xchg
in
daa
lcall
or
and
subl
lds
pop
xchg
iret
imul
dec
icebp
xlat
mov
mov
bnd
inc
ljmp
movsl
pinsrw
fwait
repz
xchg
jne
aad
push
push
or
push
roll
negb
leave
mov
xchg
out
jne
and
movsl
mov
cltd
sbb
or
add
inc
ficomps
pop
and
mov
push
mov
mov
lret
add
sbb
dec
movsl
test
pop
sbb
aad
mov
fcomps
add
jl
jae
mov
test
subl
loope
movsl
or
xchg
ja
incl
pop
inc
and
hlt
sbb
mov
in
inc
cmp
in
enter
jge
test
test
xor
pop
out
adc
mov
sbb
mov
pushf
out
or
pop
xor
sbb
es
shll
sti
fwait
mov
mulb
cmp
cld
into
dec
jg
mov
and
dec
inc
jg,pn
idivl
ja
and
testb
xchg
add
testb
movsl
pop
mov
sbb
pop
add
bound
adc
jbe
and
sbb
xchg
cmp
adc
in
jbe
in
mov
out
add
mov
js
movsl
inc
orb
jg
fldt
std
cli
in
adc
int
cmp
or
lret
pop
dec
fdivrs
mov
ret
scas
push
mov
mov
stc
shll
xor
mov
xor
cltd
cltd
pop
cmp
mov
fxch
mov
push
inc
jl
mov
scas
testb
xchg
push
cltd
pop
mov
add
sbb
popf
ljmp
dec
in
sub
aas
enter
jge
and
stos
and
adc
in
icebp
incl
ret
mov
or
cltd
fwait
dec
rol
cmpsb
and
cltd
ret
push
and
cmp
jnp
or
je
scas
mov
mov
jo
in
xchg
mov
popf
testl
out
dec
mov
aad
popa
fimull
adcl
sbb
mov
mov
sub
std
aam
mov
push
jbe
out
mov
repz
push
mov
xchg
pshufw
mov
cmp
mov
mov
rol
mov
fstp
leave
or
add
xlat
jae
xchg
adc
or
div
sbb
les
mov
adc
jge
inc
inc
je
movsl
inc
or
mov
xchg
out
and
into
popl
popf
scas
push
jg
out
xor
shll
pop
pop
xlat
into
inc
sarl
add
in
xchg
xchg
xchg
stos
std
jno
roll
and
mov
out
adc
jecxz
mov
pop
jb
xchg
and
rcrb
in
mov
sbb
call
mov
repz
out
xor
push
lcall
sbb
fstl
mov
in
jne
int
mov
push
pop
cmp
je
iret
xchg
adc
or
pop
cmp
mov
mov
cld
je
popf
fwait
cwtl
ss
mov
out
aas
sar
aam
fistpl
xchg
pop
or
adc
pop
or
fldl
inc
xchg
jecxz
jge
sbb
add
mov
xchg
and
and
adc
into
imul
ficoms
addr16
mov
inc
jae
icebp
lret
mov
popf
std
fwait
mov
fiaddl
push
loope
sub
icebp
pusha
inc
arpl
add
in
sbb
dec
add
dec
xchg
repnz
and
ret
mov
xchg
sub
mov
push
sbb
mov
push
jo
mov
xor
sbb
scas
out
xor
sbb
and
stc
sub
jecxz
mov
sbb
loope
movsl
add
mov
mov
pop
pop
jnp
mov
sub
sub
sbb
fsubr
xchg
pop
mov
fstp
and
shll
orl
push
and
sub
pop
addr16
leave
add
cmp
mov
or
jbe
mov
pop
lret
xchg
sub
sbb
lea
mov
jge
sti
leave
jbe
shl
add
jge
or
cmc
rcll
xchg
fstpt
and
push
add
or
mov
in
fwait
dec
movsl
pop
adc
fstl
repz
cmp
movsl
pop
lcall
or
mov
push
add
and
sub
jg
sbb
adc
adc
lock
mov
iret
mov
adc
sub
jmp
push
aam
stc
in
les
adc
mov
movsl
mov
and
notl
jne
mov
dec
loope
xchg
repz
sub
add
leave
inc
xlat
add
std
iret
jo
cltd
jge
xchg
mov
ret
lock
test
loop
cltd
lea
or
out
adc
pop
stc
xor
xor
lret
in
lcall
stos
inc
lret
mov
sbb
mov
jns
jg
xchg
lret
mov
pop
sti
negl
or
jns
sub
mov
mov
mov
ret
in
adc
repz
pop
jno
out
pop
or
test
or
movsl
ja
out
frstor
mov
pop
mov
push
mov
xor
or
xchg
xor
jae
and
mov
test
jo
fistl
int
clc
push
js
cmp
repnz
int
rcrl
cmpl
clc
xor
mov
dec
movsl
lcall
cmp
and
pop
push
std
or
mov
lret
add
pcmpeqd
popf
std
xchg
jbe
mov
cmp
out
lods
jnp
and
sbb
xchg
cmpsb
jecxz
push
stc
xlat
adc
mov
xchg
mov
insb
or
sbb
leave
out
aad
imul
enterw
xor
rclb
fldl
shlb
mov
push
movsl
icebp
xchg
jg
sbb
jle
lea
adc
rcl
mov
push
jle
xchg
xchg
pop
in
std
and
mov
rcll
fwait
rol
push
xor
push
out
in
lds
or
lret
mov
cwtl
je
inc
xchg
iret
repz
and
cmpsb
std
sub
scas
push
popl
push
xchg
aad
out
enter
faddp
mov
jnp
lret
loope
lds
push
seta
sbb
sbb
jecxz
and
add
fisttpll
mov
sahf
dec
pop
shll
rorl
imulb
add
enter
or
clc
outsb
adc
mov
dec
cmp
in
in
sub
movsb
and
sahf
pop
rcll
jg
mov
test
sub
scas
sbb
aad
fs
roll
jo
xchg
cltd
fidivs
movsl
mov
aad
ret
xchg
in
add
lea
out
mov
movsl
insb
mov
mov
adc
mov
out
lock
add
icebp
in
sub
cld
nop
dec
push
addr16
and
popl
or
test
fs
or
push
pop
mov
sbb
xchg
es
xchg
mov
fstl
dec
in
push
cs
mov
into
jae
jg
add
ja
pop
mov
xchg
jb
pusha
and
sbb
and
mov
adc
ret
xchg
out
stos
and
stos
lds
adc
cmp
shrl
dec
mov
scas
in
lcall
mov
std
push
mov
pusha
add
push
mov
lahf
xchg
inc
mov
and
fstpl
inc
stc
cld
les
jb
or
mov
ja
loope
nop
scas
stc
lods
cld
stc
jl
xchg
mov
push
jg
pop
jno
fildl
repnz
mov
xlat
adc
es
or
cmp
or
sub
in
and
or
xchg
outsb
mov
ret
mov
movsb
incl
cwtl
iret
icebp
rcll
mov
mov
or
in
popl
aaa
jno
leave
and
mov
stc
jecxz
xchg
stos
in
xchg
mov
in
or
sub
jl
cmpsl
pop
rcrl
leavew
push
in
data16
sbb
popf
lcall
sbb
or
mov
and
loope
pop
outsl
push
dec
test
insb
fst
pop
sarl
ljmp
roll
push
push
jno
sbb
jmp
adc
pop
inc
add
negb
push
nop
xor
or
cltd
rclb
xchg
mov
or
sub
pop
xchg
dec
jg
mov
jecxz
inc
xor
or
push
push
movsb
xchg
hlt
sti
int3
sub
add
js
popf
cmc
hlt
fwait
in
mov
popa
add
xchg
loope
jg
xor
std
jecxz
mov
sbb
or
adc
std
adc
sarl
jne
sti
loope
add
movsl
popf
mov
cmpsb
mov
test
orl
xchg
int
pop
mov
test
cmp
cmp
scas
mov
push
adc
sub
fnstsw
sti
jnp
add
icebp
push
add
adc
adc
notb
fxch
pop
mov
mov
outsb
lahf
xlat
push
mov
je
and
push
add
out
scas
xor
cmc
imulb
ret
jecxz
and
dec
insl
aas
push
iret
xchg
mov
inc
cltd
into
jae
pop
or
pushf
xchg
std
repz
inc
ljmp
and
cmpsl
xor
or
mov
js
mov
fstpl
jo
shrl
fwait
add
or
stc
mov
mov
std
es
xchg
pop
in
and
test
sarl
psubd
add
fnstenv
mov
adc
cli
xlat
repnz
push
jno
add
mov
dec
sbb
jnp
in
jo
or
scas
mov
mov
xchg
ss
xchg
sbb
mov
add
scas
adc
in
ret
jnp
lds
jg
cltd
jns
jecxz
lods
mov
pop
out
repz
jae
in
xlat
unpckhps
mov
and
popf
push
dec
in
idivl
fsts
cmp
or
jle
stc
mov
ret
add
daa
mov
inc
mov
mov
int3
sbb
pop
leave
mov
adc
and
pop
rol
stc
push
jg
aas
mov
sbb
repz
adc
or
iret
cltd
repz
sti
or
sub
jecxz
fwait
push
orl
mov
mov
inc
adc
jnp
iret
mov
out
ret
mov
xor
scas
jle
bound
int
dec
xor
sub
xchg
fisubs
movq
lret
std
aas
add
shll
dec
inc
push
xor
cli
repz
adc
and
decl
test
or
into
sbb
mov
mov
add
rcl
notb
xchg
xlat
es
push
aas
push
fsub
fildl
in
xchg
scas
mov
inc
rorl
mov
repz
rorl
clc
xlat
mov
icebp
xchg
cmp
cltd
iret
inc
or
repnz
in
mov
or
lcall
mov
in
int3
xchg
fdivl
add
mov
jae
fstl
mov
repnz
lods
mov
ret
jns
lret
fwait
lods
nop
lods
jo
lds
xchg
scas
mov
cmpsl
xchg
sub
or
cltd
and
addr16
lea
loope
rcl
in
and
fstp
lret
sub
add
stos
and
mov
test
adc
mov
fcomi
sbb
add
aas
jg
mov
or
popf
mov
icebp
icebp
jbe
and
adc
and
dec
jg
ja
leave
fdivs
xor
cwtl
adc
jb
popf
fwait
pop
jnp
scas
and
sub
push
shl
cmp
sbb
xchg
mov
xchg
dec
pop
aad
lea
data16
fstps
in
add
mov
jecxz
adc
lret
mov
in
mov
jne
iret
incl
stc
cmpsb
pop
insb
jge
add
xchg
lcall
pop
or
xchg
leave
xlat
xor
xor
fwait
mov
sbb
dec
mov
pop
mov
pop
fxch
jne
lds
add
mov
sbb
add
jno
inc
aas
int
int3
mov
mov
pop
mov
sarl
imul
jb
or
mov
lock
xchg
icebp
movlps
sbb
push
mov
push
es
dec
xchg
les
pop
mov
xor
data16
iret
fwait
cmpsb
cltd
xlat
aaa
movsl
and
sti
push
lock
lock
lret
cltd
adc
insb
stc
cmpb
aas
into
or
std
cmp
lret
mov
dec
aaa
mov
add
push
xchg
imul
mov
cmp
repz
outsl
xchg
mov
xchg
aad
inc
int
outsb
cmp
imull
or
leave
xchg
mov
call
loope
and
mov
lods
xor
jnp
add
cmp
xor
jae
cld
inc
jo
leave
bound
mov
rorl
repz
fld
adc
cmpsb
xor
mov
ja
rcrl
xor
pushl
xorl
jge
int
fs
mov
jno
pop
popl
and
or
outsb
cmpsl
pop
mov
mov
cltd
xchg
sti
ret
lret
fwait
xchg
imul
adc
cmpsb
add
cmp
out
icebp
pop
ja
call
prefetch
out
or
inc
adcb
adc
leave
shl
je
repz
aad
xor
sbb
or
cltd
adc
stc
in
xchg
bnd
scas
lcall
mov
jmp
insl
adc
imul
test
add
ret
sar
add
std
add
mov
or
or
sbb
scas
incl
mov
lret
loope
fcmovne
movsl
dec
mov
jecxz
mov
shrl
or
int
sbb
mov
outsl
fstps
dec
pop
cmp
jne
cmpsl
test
testb
ficomps
sbb
and
sbb
lods
out
sahf
fldcw
xchg
sti
cmp
sbbl
fstl
push
mov
testb
jo
out
sub
cmp
aad
test
orl
xchg
or
rcr
jae
add
xchg
mov
dec
mov
or
int
pop
in
jb,pt
les
jnp
xlat
jo
pop
subb
pop
jg
popf
add
scas
scas
in
push
lret
leave
scas
jne
or
mov
mov
mov
es
inc
loope
aas
xchg
out
push
jno
ret
stc
aad
sti
mov
dec
add
and
stos
outsl
dec
ret
icebp
stc
enter
adc
fdivs
xlat
and
sti
mov
repnz
testb
imul
sahf
and
lcall
sbb
jnp
leave
pop
inc
cmc
adc
inc
aad
mov
iret
and
in
js
leave
aas
fisubs
out
lds
pop
enter
jo
leave
mov
fidivl
pop
stc
fcmovnb
mull
dec
or
and
test
int
movsb
cmpsl
out
sti
vhaddps
adc
adc
lock
dec
mov
scas
dec
cld
repnz
shlb
adc
je
frstor
ret
mov
out
add
pop
out
fstpl
jno
fistpl
add
xlat
in
sbb
jns
cltd
repnz
hlt
cli
xchg
adc
mov
mov
cmc
rcll
icebp
addr16
xchg
aas
into
insb
cmp
int
punpcklbw
dec
mov
cmc
testb
es
lds
fnstsw
repz
mov
xchg
out
mov
rcr
inc
shlb
lods
cmp
stc
mov
mov
loope
push
js
push
out
add
in
mov
xchg
push
and
fwait
movsl
mul
or
lahf
mov
call
jb
sbb
cwtl
add
repnz
and
xchg
xor
cmp
loope
mull
in
lock
dec
lahf
in
push
or
movsl
in
sub
lods
int3
divl
xchg
test
mov
cmp
mov
jg
sbb
xorl
or
add
insl
loopne
push
push
sbb
push
mov
pop
bound
daa
ss
sub
fiaddl
mov
or
leave
adc
popa
cmp
push
repz
int3
xchg
jecxz
mov
jg
xlat
fldl
lock
sbb
or
mov
jle
cld
jp
iret
rol
sti
lds
enter
lcall
xchg
in
sub
sub
and
orl
xchg
ljmp
and
dec
push
dec
dec
xchg
jae
mov
iret
out
xchg
movsl
xchg
adc
add
cs
dec
rcr
cmpsb
or
out
cmpsb
mov
pop
cmp
mov
lret
dec
xchg
cmp
dec
and
fcmovne
into
loope
ret
xlat
or
inc
add
sbb
dec
sbb
pop
xchg
leave
in
scas
fists
pop
testb
setnp
mov
sbb
orl
sahf
push
cwtl
xchg
adc
addb
into
sbb
push
jnp
fwait
repz
pushf
ret
addr16
hlt
mov
and
mov
mov
fadd
pop
sti
out
in
add
mov
sbb
pmulhw
mov
call
mov
lret
push
mov
jmp
dec
sbb
enter
or
sbb
outsb
test
mov
and
cltd
std
cmp
jno
mov
mov
neg
adc
daa
mov
scas
fsubs
stc
cmp
idivl
and
mov
out
or
adc
sub
or
mov
mov
lds
in
lds
shrl
std
lar
fwait
pushf
jnp
loope
pop
push
fldenv
insl
add
sti
loope
shl
imul
insb
jae
or
cmpsl
outsl
repz
sbb
pop
mov
pop
addr16
pop
fnstcw
mov
fwait
or
jne
add
mov
push
inc
mov
pop
xchg
mov
adc
adc
add
rorl
repz
in
outsb
dec
movsl
mulps
leave
dec
and
xor
pop
ss
or
in
ja
fcoml
jecxz
or
cmp
loope
es
sub
repnz
xor
xchg
xor
pushf
jle
and
sbb
leave
roll
test
jge
or
adc
lcall
mov
mov
jnp
lds
je
jecxz
inc
jg
inc
xor
shrl
adc
mulb
out
in
lds
std
ja
loope
icebp
mov
rcll
in
sti
adc
xor
test
ss
ret
insl
mov
jg
mov
dec
or
jo
mov
push
and
idivl
cltd
outsb
push
push
sbb
jle
jb
mov
negl
fdivrs
ds
ds
decl
add
aas
scas
dec
sbb
dec
sahf
sub
jno
js,pt
repz
xchg
mov
add
jno
ud2
out
clc
cmp
and
xchg
xchg
adc
inc
popf
lret
int
push
and
mov
jne
mov
mov
js
adc
ret
mov
push
ljmp
mov
cmp
ret
and
jo
sbb
rep
out
popf
insl
nop
push
std
jg
iret
jbe
icebp
or
add
cmp
push
cmpsb
jbe
cmp
dec
sbb
cltd
or
or
inc
jno
fistl
fdivrp
cmp
loope
inc
mov
xor
popf
mov
mov
mov
mov
ret
fdivrp
mov
leave
js
orw
cs
jg
rcrl
sbb
inc
lods
mov
idiv
sbb
js
add
mov
mov
dec
adc
xchg
enter
shrl
xorb
mov
adc
cmc
mov
scas
cmp
xor
ja
xchg
add
leave
loopne
cmp
orb
pop
cmp
dec
xlat
jge
icebp
add
push
iret
leave
ds
push
push
emms
inc
sbb
pop
std
leave
div
mov
dec
jl
ljmp
ljmp
movaps
mov
repnz
xchg
inc
imul
out
rol
lahf
mov
out
pop
mov
ret
jmp
fildl
movsb
cmp
cmp
aaa
rcrl
outsl
enter
or
mov
mov
add
outsb
pop
aad
push
dec
dec
rorl
push
or
cmpsb
js
jecxz
mov
add
adc
es
sbb
sbb
out
icebp
ret
push
jle
iret
pop
jo
std
lret
rclb
jo
sub
mov
shl
lcall
pop
pop
mov
movl
xchg
mov
dec
sbb
repz
mov
popf
loope
adc
daa
mov
xchg
mov
jge
jae
fcmovnbe
mov
pop
or
xchg
and
dec
jbe
push
or
push
inc
addr16
imul
mov
cmp
adc
pop
mov
sub
add
insl
pusha
test
xchg
adc
push
outsb
xchg
pop
in
and
out
scas
pop
addr16
mov
fldenv
jmp
in
aad
pop
sub
adcl
inc
adc
scas
ljmp
mov
add
mov
inc
mov
outsb
jecxz
jnp
lret
mov
cmp
icebp
mov
or
ret
jno
fnstsw
mov
or
and
pusha
jmp
pop
aad
mov
dec
mov
daa
jg
and
jbe
lret
mov
and
cmpsb
sbb
sbb
push
shr
lret
jns
pop
jb
xchg
jge
cmpsb
xor
sbb
and
aad
movsl
cltd
cltd
and
mov
inc
add
loope
aad
or
xchg
out
add
icebp
push
mov
xlat
pop
adc
mov
jecxz
out
cltd
rcl
aas
mov
add
sub
ja
add
stos
dec
mov
dec
lods
lcall
mov
stos
not
push
xchg
fwait
inc
fucomp
cltd
ret
aaa
mov
sti
ret
es
xor
xor
scas
orb
rcll
std
mov
leave
xchg
push
or
repz
in
mov
lret
sbb
xchg
ret
shll
pop
dec
aas
leave
inc
cwtl
orl
movsl
mov
adc
sti
div
mov
popf
xchg
aas
jecxz
enter
jle
adc
ret
mov
xlat
pop
in
fldcw
gs
pop
mov
imul
imull
outsb
xchg
clc
inc
sti
stc
adc
pop
mov
xor
mov
or
or
hlt
xor
mov
mov
imull
lret
popf
jge
je
movl
jbe
decl
out
loope
mov
loope
mov
push
bound
adc
mov
or
cltd
rcr
mov
add
pushf
ds
cmp
pushl
testl
aas
xchg
dec
out
bound
mov
sbb
jb
mov
xchg
xchg
pop
out
fnstcw
mov
inc
in
cld
or
aad
icebp
sub
mov
inc
xchg
sbb
adc
rorl
xlat
int
adc
xchg
aaa
vpshuflw
fstl
into
bnd
mov
fidivs
fldcw
mov
or
sbb
fwait
sbb
dec
fadds
jnp
loope
jb
mov
mov
sbb
loop
pop
insb
mov
test
loope
pusha
add
jecxz
mov
xchg
cwtl
xor
dec
or
imul
mov
repnz
in
lcall
inc
xor
lret
sbb
mov
xchg
imul
ljmp
mov
inc
out
xlat
test
jbe
fwait
add
adc
popfw
loope
jg
stc
test
add
mov
or
in
aas
mov
cmp
adc
lods
iret
xchg
mov
aad
lret
negl
out
push
daa
mov
mov
lods
mov
jno
lds
lods
mov
push
mov
jecxz
lret
popf
popf
es
or
icebp
int
movsl
ret
div
dec
xchg
mov
aam
cli
and
push
sbb
mov
lret
scas
insb
out
xchg
hlt
pop
and
fcoml
ja
sbb
mov
jge
sbb
xchg
jecxz
stos
cmp
mov
push
inc
dec
inc
jg
neg
cmpsb
push
inc
loope
mov
scas
int
and
out
hlt
xor
iret
inc
into
inc
test
adc
sarl
movsl
fcomi
subb
and
lret
std
std
cmp
xor
fistl
call
fwait
ret
in
test
mov
add
in
xchg
clc
push
adc
movsl
int3
dec
add
jo
sti
jecxz
mov
and
mov
ret
or
js
mov
pop
cmp
push
iret
inc
jno
mov
mov
dec
jo
pop
jno
loope
mov
imul
js
push
popf
inc
repnz
xchg
popl
or
lds
mov
inc
xchg
inc
loope
lods
sbbl
sub
out
adc
ret
mov
mov
fwait
xor
push
scas
in
roll
pop
ret
fstl
inc
mov
or
push
pop
mov
loope
pop
pavgw
fistl
addl
jg
ss
notl
lret
les
add
mov
mov
les
sbb
mov
add
repz
xlat
push
jns
stos
jae
add
mov
xchg
shrl
sub
xchg
imul
std
fsts
shlb
adc
fnstenv
mov
push
frstor
sbb
divb
std
icebp
mov
mov
mov
pushf
jge
sti
jbe
int
leave
data16
mov
push
jns
aas
or
xchg
adc
icebp
xor
mov
dec
or
adc
pop
popf
fwait
inc
xchg
jg
mov
cmpsb
jno
movsl
aas
aad
aas
adc
enter
aad
in
ljmp
mov
and
mov
sbbl
jns
mov
pop
adc
cmp
push
shll
jne
mov
mov
out
and
mov
xchg
aad
test
aaa
lods
aaa
jb
mov
sti
push
je
sbb
idiv
lret
sbb
add
sbb
and
js
pop
sti
fwait
mov
fst
fwait
and
mov
notl
push
scas
push
or
std
orl
mull
movl
mov
jnp
mov
inc
fisubs
xchg
push
add
or
mov
adc
shl
push
incl
mov
inc
adc
mov
mov
fwait
in
and
mov
add
sbb
test
data16
pop
xlat
mov
cmp
cmp
loope
mov
xchg
and
iret
and
push
int
enter
xor
xchg
cwtl
mov
cwtl
ret
push
jo
mov
imul
mov
lret
xchg
sub
int
sbb
xlat
sub
mov
xchg
fisttpl
and
sbb
mov
in
adc
sub
mov
dec
dec
aas
and
inc
mov
mov
mov
data16
xchg
inc
jecxz
adc
cmpsb
add
dec
mov
int
std
out
and
popa
push
shl
sbb
sub
fnstenv
aad
xchg
movsb
xor
pcmpgtb
out
xchg
and
add
xchg
iret
mov
mov
dec
add
fldt
lds
inc
mov
or
add
or
jecxz
notb
xchg
add
ret
xchg
loop
pushf
out
adc
cld
repz
add
dec
jb
jecxz
lea
and
in
cld
mov
mov
adc
imul
js
nop
std
pop
out
and
fwait
icebp
dec
add
sbb
test
in
aad
aad
scas
movsb
mov
in
cltd
leave
mov
inc
jg
add
xor
jl
jecxz
mov
xlat
insb
cmc
dec
pop
fistl
mov
sarl
in
push
and
jnp
popf
sbb
or
sub
pop
mov
flds
xor
mov
lgs
lods
or
lds
xchg
aad
jle
jnp
xchg
mov
xchg
outsb
push
pop
xchg
and
ret
popa
inc
repnz
sti
pusha
jno
mov
shll
icebp
lcall
sti
out
xchg
mov
pop
mov
lds
cmpsb
mov
cltd
scas
mov
pusha
add
dec
jp
outsb
enterw
or
in
jbe
jecxz
add
mov
jg
data16
mov
cs
popf
notb
pop
xchg
lds
ret
cmp
inc
lock
aad
xor
pop
and
pusha
icebp
repz
sti
inc
icebp
or
and
imull
sti
outsb
mov
xchg
xchg
rcll
leave
xor
dec
popf
push
xor
dec
jbe
mov
pop
pop
xchg
nop
daa
sti
mov
add
mov
xchg
outsb
jno
xchg
lret
mov
fstpl
or
xchg
pop
adc
aad
and
std
add
adc
pop
mov
mov
or
inc
repz
fld
frstor
pop
lret
mov
lsl
insl
outsb
shll
sub
sbb
push
xchg
or
call
imul
arpl
cwtl
jmp
testb
out
sbb
sbb
stos
cmp
or
rcl
imul
std
jae
sbb
add
adc
xor
mov
movsl
adc
push
xchg
imul
loope
sti
xchg
mov
stos
in
outsl
or
mov
cmc
mov
sahf
aas
xchg
mov
or
pop
in
iret
clc
mov
mov
into
lea
cs
ret
inc
ja
in
fnstsw
scas
ret
outsl
add
and
jg
or
sub
jnp
movsl
mov
hlt
test
mov
mov
adc
repnz
fnstsw
flds
mov
aas
pop
aam
push
add
aad
aaa
sahf
lea
sbb
push
cwtl
mov
stc
or
sbb
add
mov
add
outsl
fcompl
add
add
add
sarl
fwait
jne
icebp
loope
iret
lds
rcll
sarl
out
addr16
xchg
outsb
sti
std
stos
icebp
xor
dec
rcrl
jnp
xlat
andl
aad
sahf
loope
dec
mov
xchg
sbb
dec
inc
sbb
inc
cmp
rcrl
xchg
mov
or
repz
iret
dec
adc
pushl
pop
aas
mov
std
iret
mov
out
or
aas
sbb
movsl
add
mov
cmp
and
insl
and
in
ss
mov
cmc
push
ss
or
int
rcll
xchg
rcll
rorl
out
push
testl
jecxz
stc
mov
sbb
add
repz
cmc
movl
popa
in
or
stos
xchg
mov
aad
notl
mov
ret
and
out
add
sbb
shl
mov
mov
lret
and
inc
mov
mov
fwait
test
testl
push
mov
cwtl
jl
lds
pop
mov
or
or
imul
bound
lret
aas
push
sar
iret
ss
popf
push
jecxz
jecxz
xchg
push
andl
movsl
testl
iret
xchg
hlt
inc
icebp
adc
xchg
push
xchg
in
shr
fwait
pusha
or
adc
scas
std
fldenv
xor
dec
mov
sbb
dec
mov
pop
inc
movsl
mulb
or
adc
add
mov
jb
jg
stos
fcom
or
addb
mov
rorl
repz
jno
adc
push
outsb
adc
push
sarl
jecxz
and
popf
lock
xchg
inc
xchg
lds
aam
int
jle
lds
sub
adc
mov
je
scas
or
jno
movsl
popf
cmc
push
pop
cltd
adc
iret
shl
and
sbb
mov
xchg
add
fwait
lahf
inc
out
adc
cltd
pop
xlat
shl
dec
fnstenv
add
hlt
or
out
clc
repnz
dec
in
mov
or
mov
movsl
ficoml
inc
test
outsb
ret
adc
jb
out
pop
into
inc
cmp
jns
or
mov
push
and
cmp
mov
cmp
lcall
test
xor
push
fnstcw
out
repnz
xchg
popf
xor
or
imul
or
int
jae
xchg
mov
xlat
in
sti
push
adc
leave
clc
cmc
add
push
nopl
addr16
and
aad
rcll
cmp
int3
dec
hlt
xor
inc
xor
adc
and
sarb
popf
fists
and
adc
aas
xor
inc
lock
icebp
call
xor
cmc
js
std
ret
dec
dec
pushf
dec
adc
mov
fnstcw
mov
jle
cld
or
xchg
scas
fwait
mov
int
daa
dec
lock
out
aas
add
aas
jle
xlat
not
sbb
in
cltd
popa
xlat
mov
pushl
fnstenv
mov
cmp
fstps
or
cmp
into
inc
daa
mov
mov
idiv
adc
popf
mov
push
mov
fstl
and
mov
cvtdq2ps
adc
mov
loope
cmc
aas
xchg
push
lret
iret
movsl
aad
mov
cmpsb
loope
vpmaxsw
loope
cmpsb
mov
out
jg
sbb
dec
adc
in
dec
leave
sbb
add
jge
ret
aam
popf
cltd
xchg
clc
sbb
mov
stc
leave
aas
mov
mov
sbb
adc
jecxz
jl
sbb
in
out
mov
cmp
adc
enter
and
sub
xchg
mov
std
sbb
mov
mov
mov
shll
test
daa
sub
aad
xchg
xchg
mov
xchg
icebp
mov
pop
outsb
xchg
cltd
in
cmp
lret
and
xchg
mov
xorl
cltd
jmp
rol
test
daa
xchg
xchg
inc
in
mov
les
cs
mov
or
inc
inc
cwtl
mov
in
cmc
pushf
repz
std
test
lods
ret
add
add
push
in
bound
cmp
mov
imul
popf
or
and
mov
mov
cmp
jno
cmpsl
pop
pop
pop
push
sbb
mov
fisttpl
mov
adc
pop
scas
fwait
jnp
movsl
xchg
sti
pop
push
add
in
movsb
lahf
enter
hlt
shr
or
cmp
sub
movsl
popa
sbb
and
ret
or
mov
arpl
xchg
stos
leave
lcall
mov
rep
add
mov
pop
xchg
in
and
mov
mov
in
pop
scas
jg
fwait
add
mov
outsb
mov
add
ret
jns
call
or
inc
roll
xchg
lds
aas
adc
pop
mov
add
ljmp
add
xchg
out
test
xchg
in
dec
jo
sbb
mov
cli
pop
mov
mov
mov
jmp
and
dec
shrl
div
fnsave
adc
add
fwait
hlt
inc
aas
cli
jmp
fmull
add
imul
sti
sbb
idiv
rorl
push
cwtl
cmp
adc
test
stos
adcl
add
push
aas
icebp
mov
mov
push
ficoms
dec
or
scas
mov
jb
stc
hlt
xor
add
jo
enter
inc
and
pop
insl
dec
pop
pop
adc
fsincos
out
push
add
sbb
mov
pop
jecxz
jecxz
inc
jg
lcall
adc
xchg
mov
dec
cmp
cmp
and
and
jp
movsl
and
and
mov
cmc
ja
icebp
sub
xchg
add
push
prefetch
aad
shll
std
mov
mov
adc
notl
bound
dec
sbb
sbb
pushf
add
adc
mov
cltd
mov
add
fwait
pop
fldenv
pop
incl
mov
rcl
scas
repnz
mov
jbe
mov
mov
jle
cmpsb
jge
iret
or
jb
mov
xchg
scas
and
or
setae
sahf
or
cmp
inc
fnstenv
xchg
mov
scas
frstor
dec
std
stc
xor
xlat
xchg
cs
loop
mov
fildl
out
pushf
xchg
dec
outsb
xchg
mov
push
rcrl
push
xchg
iret
dec
movb
mov
and
subl
es
xchg
scas
sub
ja
mov
jecxz
mov
in
pop
mov
adc
lcall
jo
std
shll
mov
inc
add
pushl
mov
scas
icebp
sbb
push
fdivl
mov
cwtl
add
sbb
lss
aad
mov
jno
incl
loope
out
pop
mov
jns
out
aam
adcb
stc
push
and
aad
leave
cmc
cltd
mov
xchg
xchg
mov
repz
mov
aad
mov
cmp
std
jge
inc
mov
jo
iret
fisttpll
pop
addr16
lret
jnp
in
and
xlat
add
xchg
test
xor
mov
insl
xchg
leave
lds
and
pop
shl
or
mov
enter
sub
stc
mov
flds
pop
xlat
dec
cmpsl
mov
ljmp
sbb
ret
lds
mov
imul
jnp
mov
inc
cmc
mov
add
jne
mov
aad
mov
fmull
mov
xor
xor
sbb
dec
or
pop
jecxz
push
adc
cltd
rcll
js
xchg
lret
adc
lock
add
shrl
sbb
xchg
movsb
stos
push
lods
sbb
loope
cmpsb
xor
mov
sbb
repnz
aas
mov
jg
icebp
mov
xor
aad
mov
or
xchg
leave
adc
out
jle
xchg
lds
dec
mov
or
movsl
in
test
fistpl
mov
cmpsb
movsl
mov
negl
and
sbb
inc
ffree
movd
sub
sahf
adc
subl
dec
push
mov
in
repz
mov
test
mov
imul
iret
mov
leave
in
imul
and
lcall
mov
cmc
imul
lods
jae
and
mov
mov
push
fstps
mov
xor
adcb
mov
ljmp
nop
std
or
add
pop
or
xchg
ficoml
popf
call
xor
fwait
and
ja
or
lock
stos
ret
inc
int
test
mov
scas
stc
jg
out
xchg
ret
xchg
popf
mov
lret
aaa
test
popl
cs
xchg
mov
xor
mov
or
sub
sar
and
cmp
in
inc
loopew
aas
and
adc
imul
xor
adc
lods
jmp
loope
add
and
dec
scas
fwait
xchg
mull
xchg
xchg
in
mov
fwait
add
mov
push
aad
movsl
add
jecxz
adc
xchg
scas
xchg
mov
and
push
ss
movmskps
sbb
pop
and
mulb
shll
pop
loope
mov
inc
push
shrl
test
push
sbb
pop
in
movsl
loop
fiadds
sbb
sub
mov
outsb
adc
xchg
jnp
iret
xchg
adc
fwait
push
lret
add
aas
mov
shll
xchg
pcmpeqb
adc
mov
iret
cs
lahf
test
add
or
loope,pn
je
mov
vpsrlw
pop
icebp
sbb
add
psubq
adc
loope
mov
mov
mov
xchg
cmc
out
repz
mov
iret
icebp
mov
loope
xchg
popa
imull
mov
xchg
add
mov
in
ljmp
mov
cmc
je
iret
mov
sbb
mov
pop
and
inc
fsts
pop
cwtl
in
cmpsl
dec
xor
push
out
aas
dec
jmp
sar
jb
xor
jecxz
cltd
cmpsl
pop
fldenv
adc
mov
in
jle
or
divl
shll
iret
xor
jae
jmp
xor
xchg
and
outsl
xchg
add
xchg
std
dec
add
push
mov
mov
popf
cmp
pop
sbb
flds
leave
fwait
cld
xchg
int
inc
out
mov
jbe
rcr
pop
mov
mov
out
rolb
icebp
adc
aaa
js
sbb
aas
ficomps
cmpsb
jp
and
mov
ret
jge
pop
jmp
shr
ss
push
xorl
std
push
ds
flds
in
mov
lds
xor
mov
sti
xchg
loope
jecxz
cmpsb
int
fs
std
lret
and
stc
jle
xchg
js
cmpsl
imul
cmpsl
cmp
pop
jne
add
popf
xchg
cwtl
xchg
mov
push
pop
mov
stos
js
jecxz
fmulp
jb
xchg
mov
pop
pop
xlat
movl
lea
adc
sbb
jno
call
xlat
mov
ret
adc
imulb
rcl
xchg
mov
or
jnp
xlat
out
sbb
popl
flds
fisttpl
ficoms
ljmp
fldenv
add
dec
cmpsb
mov
add
loope
ret
adc
xchg
mov
jne
sbb
mov
adc
and
test
out
insl
fcomps
add
fcompl
int
fwait
xchg
pop
mull
stc
jle
xor
in
scas
jne
xchg
fnstenv
testb
fwait
mov
popf
cmp
mov
xchg
add
aas
push
movsl
sbb
xor
push
enter
iret
dec
mov
or
pop
mov
sbb
jb
ret
shll
mov
jbe
adc
loope
xchg
mov
leave
and
inc
jnp
sbb
pop
add
inc
or
popf
adc
and
jl
cmpsb
repz
adc
in
sub
pop
cltd
and
jae
xlat
fnstenv
adc
sbb
hlt
imul
icebp
loope
dec
std
ja
or
add
or
xchg
inc
adc
jp
dec
dec
lret
push
adc
dec
cltd
cmp
mov
xchg
icebp
cli
sbb
xchg
aad
cmp
xchg
xchg
inc
sub
sbb
fmuls
adc
incl
push
fldt
xchg
pop
lret
mov
mov
loope
xchg
scas
inc
mov
xor
scas
sti
and
jl
mov
fstpt
test
mov
aas
aad
xchg
xchg
jl
lds
jnp
fxch
ret
leave
movsb
stc
push
dec
movsl
jae
mov
std
iret
mov
or
add
push
xchg
push
add
jecxz
and
or
scas
roll
fnstsw
jbe
mov
hlt
int
and
pop
jb
lds
xchg
inc
aad
pop
ljmp
push
subb
cmpsb
mov
inc
int
shl
aad
or
push
dec
adcl
popf
repnz
mov
loope
fisttpl
stc
clc
fldenv
jmp
xchg
adc
dec
aad
jmp
lcall
or
fwait
mov
int
cmp
aas
cmpsb
cli
ss
or
mov
mov
jl
jle
into
or
loope
shrl
hlt
sub
fnsave
mov
aad
add
std
iret
adc
aam
enter
jge
fwait
mov
adc
ja
and
xchg
loope
bsr
push
andl
mov
mov
test
inc
lea
mov
mov
push
enter
stc
cmp
xchg
aas
push
pop
insb
divb
leave
sbb
sti
fwait
xor
sarl
or
dec
sbb
insl
movsb
dec
in
push
sti
fldl
jns
pop
add
push
xchg
jl
sbb
push
jmp
je
popf
mov
fst
sbb
mov
test
mov
icebp
vunpckhpd
xchg
jno
out
or
mov
xchg
fdivrl
lods
cmp
sbb
xchg
leave
stc
xchg
pusha
loop
dec
mov
mov
jne
and
in
adc
dec
lds
fstp
adc
xchg
mov
or
and
mov
test
dec
add
stos
push
xor
sub
stc
pusha
dec
les
sbb
notl
pop
or
movsl
mov
call
xor
fs
sbbb
sub
test
in
sub
inc
notl
jnp
and
lods
xchg
jge
adc
bswap
jo
lds
xchg
in
and
mov
leave
jge
adc
cli
xchg
test
push
imul
mov
mov
loop
sahf
idivb
adc
scas
xchg
test
sbb
add
or
loope
lock
std
add
popf
out
stos
sbb
in
cs
fisubl
fcoml
setp
mov
and
and
je
add
sub
cltd
mov
mov
fwait
cltd
mov
add
lret
mov
test
aad
mov
jecxz
leave
out
add
xchg
fwait
ja
xchg
rcl
cltd
mov
rclb
stos
cmp
xchg
rcll
ljmp
leave
ret
mov
push
cmpsb
sbb
adc
sbb
ret
adc
inc
leave
fcomps
mov
push
xchg
adc
iret
jecxz
or
xchg
pop
test
mov
inc
pop
ret
or
out
inc
cmp
mull
mov
int
mov
cwtl
test
and
pop
and
jecxz
jne
sbb
jp
popf
mov
cmc
cmp
or
mov
stos
inc
out
pop
mov
stc
xchg
inc
jno
inc
test
add
xchg
jb
rcl
or
mov
mov
outsb
movsl
inc
flds
inc
cmpsb
fwait
scas
sbb
sub
scas
in
pop
mov
mov
inc
hlt
xor
and
leave
fldl
add
clc
les
imul
adc
mov
push
sbb
jo
mov
test
xchg
fcmove
xor
jge
xchg
lock
push
sbb
pop
inc
mov
and
inc
push
fnstsw
xor
aas
add
inc
mov
fs
jecxz
dec
repz
or
imul
aas
jnp
test
add
repz
and
setno
mov
push
mov
or
cmpsl
ja
mov
sbb
fisubrl
add
mov
xchg
mov
inc
outsb
adc
fbld
pop
arpl
int
mov
adc
dec
adc
push
fcmovnu
repz
rolb
pop
ss
and
movsb
dec
dec
jg
out
out
or
jle
jle
and
pop
or
out
popf
repz
enter
add
jbe
and
and
sbb
outsl
idiv
cltd
movsl
xchg
fwait
pop
cmpsl
add
aad
xchg
jecxz
repz
mov
paddb
shll
jl
jo
popf
add
pop
cmpl
fsin
stc
jb
sbb
std
sahf
cmp
jo
or
or
pop
mov
and
xchg
movsl
mov
rcrl
insb
sti
jbe
ss
adc
add
sahf
sub
sub
xchg
ret
out
fcoms
add
outsb
or
shl
movsl
leave
mov
sti
sbb
ss
ja
negl
ds
hlt
xchg
jecxz
out
inc
cmp
outsl
fmul
or
subb
leave
mov
mov
rcr
ss
lret
jecxz
lds
stc
scas
in
addr16
add
jbe
mov
icebp
mov
adc
mov
stc
ss
popf
sbb
arpl
subl
mov
lock
sbb
mov
fnstenv
cmp
in
pop
mov
push
stc
call
stos
push
or
mov
sbb
test
in
mov
repz
std
pushl
in
psubd
sbb
mov
sbb
add
jle
or
fldt
mov
lret
jo
in
or
or
scas
xchg
ljmp
int
mov
outsb
mov
cltd
mov
mov
std
adc
addr16
sarb
sbb
test
das
in
jecxz
cmp
dec
add
in
xchg
jg
sti
lret
orb
push
loope
dec
dec
lea
subb
jg
xchg
shrb
mov
jno
fldenv
icebp
ds
test
sbb
vpsubw
scas
jno
mov
ljmp
add
rcrl
cmp
push
arpl
mov
cmpsb
fcoml
out
or
jo
movsl
cltd
lret
xchg
xor
popf
mov
mov
mov
repz
add
cmc
mov
cmp
rcl
gs
movsl
push
inc
out
xchg
arpl
arpl
mov
scas
adc
jnp
xchg
lods
repz
sub
dec
cmc
in
scas
out
sbb
jmp
adcl
in
xchg
sub
xchg
and
cmp
movsl
or
dec
nop
add
xchg
scas
dec
cmp
pop
in
inc
mov
adc
int
inc
popa
xchg
cmp
aam
jecxz
add
in
or
repz
iret
aad
and
xorl
scas
divl
rcll
sti
in
popf
mov
lahf
lret
xchg
movsl
je
add
mov
ljmp
stc
adc
dec
outsl
paddusw
adc
mov
or
xchg
pop
lea
lds
xchg
and
fisttps
call
repz
add
mov
popf
lahf
jo
xchg
and
scas
inc
pop
aad
and
mov
mov
jbe
fucom
cltd
insl
add
iret
adc
inc
movsl
add
mov
sub
sbb
sbb
push
push
pop
add
aam
dec
je
int
in
jecxz
xchg
adc
jne
shll
sbb
jle
inc
mov
out
sbb
cmp
orl
jmp
movsl
mov
lcall
loope
jo
in
xchg
xchg
add
or
xor
add
pop
leave
imul
adc
push
xchg
fmull
xlat
xchg
push
bound
out
stos
mov
jb
pop
leave
mov
jl
icebp
xorl
jne
mov
iret
add
jno
ret
std
int3
mov
icebp
pop
leave
imul
pop
shlb
or
outsl
shrl
inc
fstl
je
ret
imull
or
pop
cs
mov
aas
repz
fnsave
testl
or
scas
rol
leave
cmp
xor
xchg
add
sub
mov
add
xchg
push
xlat
fldcw
inc
jo
frstor
popf
mov
inc
fiaddl
cmp
decl
shr
adc
add
fsub
div
iret
cmp
add
sub
jnp
mov
cld
xchg
inc
jge
iret
add
aas
mov
dec
les
sti
pop
add
adc
jo
mov
addr16
push
cltd
push
push
xor
mov
add
pop
leave
mov
dec
iret
or
lahf
test
or
add
xchg
aaa
cmp
push
inc
aas
movsl
and
mov
mov
lock
fadds
ret
cmc
int3
and
xlat
pushl
adc
mov
popf
or
jecxz
outsb
xlat
xor
xchg
cltd
mov
jecxz
xchg
and
cmp
push
cmp
stos
pop
test
pop
popl
aam
iret
divl
sbb
inc
rolb
adc
pusha
cmp
push
mov
jnp
jno
lret
in
mov
repz
jecxz
xchg
xchg
aaa
movsl
sbb
push
arpl
icebp
aas
mov
xchg
out
push
jecxz
cltd
fldenv
mov
daa
scas
shll
cs
pop
das
dec
inc
pop
icebp
push
xchg
movsl
imul
add
fiadds
sbb
xchg
iret
xchg
in
leave
jb
xlat
mov
cmp
rol
push
jmp
cld
lods
movsl
add
pop
mov
loope
push
mov
xchg
sub
pop
adc
jbe
fnsave
rcl
mov
sbb
scas
mov
jecxz
orb
inc
sbb
xlat
mov
es
sub
and
call
adc
add
fstpt
xchg
add
icebp
jbe
mov
loope
in
push
jge
and
add
cmpsl
mov
roll
push
jle
fisubrs
daa
add
ror
push
loope
aad
xchg
pop
cltd
cs
in
imul
decl
loope
outsb
mov
inc
adc
add
stos
into
iret
and
adcl
hlt
in
xchg
mov
xlat
mov
mov
in
add
shlb
mov
mov
repz
mov
jl
pop
test
icebp
shl
hlt
das
mov
mov
pop
sarl
test
mov
dec
rcrl
cmp
push
js
pop
inc
xchg
scas
xchg
push
mov
push
ja
and
mov
fsubp
popf
xor
cs
dec
lret
pop
dec
shrl
imul
mov
repz
outsb
repz
out
adc
sbb
fldt
mov
lcall
push
add
xchg
rol
fistl
xchg
jg
aad
hlt
inc
mov
popf
mov
add
aad
cltd
icebp
rolb
push
rcll
or
jns
dec
in
add
jg
std
adc
mov
or
vpsubusw
fsqrt
cwtl
test
sarb
push
add
adc
outsb
inc
sub
jg
fimuls
jns
pushf
in
rcrl
repz
int3
xchg
mov
xlat
inc
push
mov
inc
cmp
shl
addl
xchg
pop
mov
iret
mov
jg
loope
in
push
mov
add
mov
insl
cmp
pop
popa
xor
mov
lods
aad
mov
fdivrp
or
clc
outsb
aad
imul
fwait
ja
mov
stos
sbbl
sarl
push
add
into
sbb
inc
mov
icebp
or
aad
incl
mov
popf
push
rcrl
outsb
inc
mov
inc
or
pop
adcl
scas
adc
mov
mov
ja
call
adc
lock
xor
mov
pop
inc
or
daa
js
aas
stc
add
scas
ret
leave
mov
or
push
cmp
xchg
sahf
bound
lds
cmpsb
shl
shl
and
andl
iret
sub
cmp
mov
pusha
cmp
cmovno
ffree
js
jbe
popf
fwait
and
mov
std
divl
cmp
call
vpmaxsw
jle
cli
jmp
or
movsl
jo
ret
mov
mov
fwait
add
jae
sbb
pop
outsb
outsb
push
lret
jns
std
sbb
aas
jmp
cmp
popf
enter
mov
out
or
sbb
pop
outsl
mov
xchg
mov
dec
repnz
in
adc
shll
sbb
push
hlt
and
movsl
xchg
cmp
sbb
jmp
xchg
stc
mov
mov
jne
lds
test
xchg
jp
in
dec
jg
sti
popl
dec
jcxz
mov
je
xchg
sbb
icebp
ret
es
ja
divl
cmp
mov
push
and
int3
jo
sbb
out
or
cmp
dec
int
mov
push
xchg
mov
in
cltd
call
xorb
xchg
xchg
add
rolb
mov
popf
sub
xchg
mov
leave
pop
xlat
adc
sbbl
pushf
loope
cmp
out
lock
stos
dec
dec
ja
leave
testl
fcmovnb
or
jge
or
xor
aad
add
fnstsw
xchg
iret
cmpsb
addl
fstpt
std
js
and
sbb
outsb
mov
mov
pop
sbb
lsl
adc
fildl
loope
adc
outsl
add
addl
and
idiv
jo
adc
fistpl
fstl
xchg
movsl
sbb
xlat
or
jb
shll
add
lret
leave
fmull
aad
mov
aad
pushf
je
rcrl
orl
rorl
cs
sarl
outsb
cmp
repz
loopne
dec
push
jne
jns
or
mov
outsb
fistl
ljmp
inc
mov
cmc
mov
in
jle
stc
mov
and
xchg
jge
and
mov
xlat
cmpsb
cmp
push
test
sbb
shll
push
mov
cmpxchg
or
and
out
pop
incl
in
xchg
and
icebp
outsl
fdivrl
mov
lret
test
mov
movsl
mov
ljmp
std
stc
rorb
and
and
stos
loope
mov
pop
fnstenv
pop
cmp
fstps
out
cmp
lret
xchg
movsl
fwait
aad
xchg
popf
push
out
add
dec
rcll
jmp
dec
xor
ror
add
test
pop
xor
out
or
xchg
lds
sahf
xchg
cmpsb
aas
leave
pop
rcr
mov
loope
mov
iret
in
int
movsl
lock
push
je
adc
in
and
add
jne
in
mov
xor
xchg
dec
fisubrs
icebp
add
mov
jns
leave
mov
or
bswap
popf
xor
lods
sbb
ret
cmpsb
loopne
notb
or
lret
insb
ja
std
mov
lcall
xchg
popf
xchg
into
leave
stos
pcmpgtd
sbb
or
ret
nop
mov
xchg
aas
or
aad
imul
fwait
lret
add
sbb
out
mov
hlt
mov
adc
push
ss
sbb
inc
and
adc
repz
in
jns
xchg
stc
ss
or
lds
int
xchg
and
mov
mov
sahf
pop
aad
pusha
and
pop
popf
push
add
shll
fwait
or
jo
mov
frstor
negb
jecxz
js
inc
ja
movsl
pop
push
adc
mov
inc
subl
and
inc
mov
scas
xor
xor
js
aad
jno
frstor
mov
push
push
repnz
outsb
sbb
and
xchg
and
idivb
cltd
sbb
jb
pslld
adc
ljmp
jo
cmp
mov
sbb
xchg
fnstsw
or
lods
push
xchg
lods
lret
sbb
push
xor
and
cmp
jge
xchg
xlat
jbe
or
dec
add
push
sub
stc
jno
cltd
jecxz
or
fwait
pop
xor
dec
cmp
vaddsd
mov
jge
or
decl
pop
cmc
xchg
mov
popf
mov
inc
sahf
call
pop
sbb
call
cmp
test
sti
mov
popf
cltd
shll
iret
cltd
jbe
mov
xor
pop
into
inc
ret
ss
adc
hlt
jno
add
ss
movsl
jp
leave
mov
fbstp
sbb
div
mov
inc
or
rcll
sub
rclb
mov
movsl
int
std
sti
jbe
xlat
mov
pushf
cmp
hlt
mov
dec
inc
iret
or
sub
or
jge
sbb
lock
fildl
add
mov
push
addr16
int
jle
fstp
int3
mov
aad
lods
pusha
jno
add
call
pop
aaa
repz
icebp
mov
fnstcw
add
xsha256
cmpsb
xchg
mov
adc
shll
loop
cli
in
jb
ret
sub
jb
std
mov
out
test
stos
mov
inc
mov
add
sbb
std
sbb
add
out
aas
incl
and
pop
in
add
pop
mov
jecxz
out
sub
pop
scas
dec
mov
outsb
xchg
test
rcr
mov
mov
jns
pop
stos
insl
psllw
mov
call
xchg
fsubr
les
bswap
outsb
cmp
pop
clc
cwtl
rol
add
xor
in
jb
in
movsl
xchg
xchg
ret
mov
xchg
je
aas
adc
mov
mov
jns
add
addb
leave
repz
loope
repnz
add
sbb
movsl
jmp
sbb
mov
popl
inc
scas
adc
sbb
int3
pop
ss
es
imul
outsl
jle
leave
mov
cmpsl
push
xchg
into
icebp
cmp
add
testb
outsb
ret
outsb
inc
je
imul
jecxz
jmp
or
push
cmpb
les
xchg
insl
aad
jecxz
stc
push
testl
pop
and
pusha
ja
ret
fwait
jns
jecxz
pop
frstor
outsb
mov
cmc
cmpsb
jecxz
enter
jecxz
add
fstpl
es
mov
pop
jne
adc
icebp
dec
lea
jecxz
scas
mov
fstpt
test
lret
cmp
jecxz
and
adc
mov
fs
xchg
add
cmpsb
ss
xchg
and
mov
lret
sbb
rclb
mov
mov
ret
orl
add
inc
mov
sti
pop
jno
add
insl
or
rep
nop
and
mov
dec
shl
or
cmp
sahf
aad
scas
or
std
jecxz
mov
xchg
xor
push
cmp
outsb
mov
add
xorb
push
cld
pop
cmpsb
popa
je
sbb
aas
std
sbbb
jae
mov
mov
inc
xchg
std
jl
andl
sub
pop
mov
fnsetpm(287
or
cltd
pusha
ds
adc
lea
movsb
scas
rcrl
in
sub
dec
jecxz
pop
mov
rol
mov
mov
xchg
xchg
andb
mov
and
push
mov
mov
movsb
add
lea
mov
cld
mov
mov
jl
fs
xchg
inc
pop
sbb
xchg
xchg
inc
outsl
cltd
in
sti
adc
stos
je
shll
negl
rol
in
fcoml
mov
adc
nop
daa
pop
cmp
xchg
repnz
jg
in
jno
idiv
in
and
cld
jno
gs
or
push
fldt
jae
rorl
and
pop
cmp
sahf
cmc
adc
xchg
fwait
and
aad
mov
hlt
fyl2xp1
or
in
imul
fwait
fidivl
mov
xor
aas
mov
lcall
pop
pop
sahf
push
sbb
pop
int3
inc
and
js
mov
jle
lock
ret
push
xchg
and
lret
xchg
pop
adc
cwtl
adc
xor
aad
or
inc
fwait
lret
lahf
ja
or
ljmp
outsl
fnsave
incl
xor
inc
jle
xchg
outsl
mov
rol
lods
lods
mov
mov
inc
leave
aas
jo
movsl
or
xlat
mov
xor
dec
jae
popf
rcrl
push
fildl
cltd
jnp
int
jecxz
and
in
xchg
shll
sub
and
jp
sbb
loope
cli
jb
add
stc
xchg
fnstenv
cmpb
jno
in
clts
lret
in
mov
ret
mov
mov
jb
pop
mov
out
xlat
jne
aas
jecxz
incl
sti
add
sti
jo
outsb
cmp
js
mov
pop
mov
adc
fstpl
fwait
fwait
test
jae
cltd
sbb
xchg
jbe
leave
adc
or
sub
stc
or
adc
mov
and
sbb
aad
mov
loope
movsl
mov
mov
cs
or
sahf
in
mov
mov
or
xchg
flds
jbe
adc
xor
icebp
ja
mov
cwtl
push
mov
dec
outsb
mov
xchg
movlhps
jno
sbb
sti
scas
lcall
mov
hlt
mov
inc
mov
push
fnstcw
adc
loope
jge
cltd
js
and
xchg
jecxz
lret
je
fwait
sbb
mov
add
sbb
mov
popfw
mov
out
fstps
mov
std
js
leave
out
and
js
mov
pop
or
adc
cmpb
adcl
incb
outsb
call
fnstenv
jecxz
int
rcll
sbb
xlat
inc
popf
divl
push
jecxz
cltd
repnz
mov
mov
rorl
popf
adc
outsb
call
jg
mov
cmc
xor
xor
icebp
neg
fstps
xchg
repz
aas
jb
xchg
iret
and
dec
movsl
test
cltd
add
mov
sti
scas
mov
daa
adc
dec
adc
jo
mov
sti
cmp
add
xchg
or
iret
std
cmp
inc
ja
mov
mov
xchg
test
rolb
mov
int
out
mov
jno
xchg
add
mov
adc
xchg
outsl
leave
repz
push
add
add
sbb
aas
xchg
push
ja
pop
adc
or
sbb
out
xchg
sub
lods
xor
int
add
loopne
aad
shrb
pop
xor
pop
aas
sti
jle
shrl
arpl
xor
aas
dec
bswap
insl
jp
ds
ljmp
and
dec
push
lcall
pop
jmp
mov
bnd
xchg
mov
inc
movsl
push
lret
sbb
jno
sbb
xchg
mov
sub
cmp
fldl
iret
dec
push
jg
add
push
popf
pop
cmp
scas
or
ud2
cmpsb
aas
mov
std
inc
outsb
icebp
mov
mov
pop
repnz
and
inc
push
pop
sub
inc
lea
mov
int
push
std
mov
pop
aad
or
adc
add
dec
pop
mov
das
mov
and
mov
mov
jecxz
xlat
fnsave
xchg
std
jl
in
out
xor
or
std
or
ss
jg
xchg
sbb
test
jecxz
sarl
movsl
or
mov
into
lds
iret
mov
es
ljmp
icebp
testl
movsl
jmp
xchg
and
outsl
stc
mov
mov
pop
xchg
adc
or
iret
mov
lock
shl
dec
imul
shll
aas
push
or
je
rorl
scas
enter
js
repnz
negl
ljmp
sahf
punpckhwd
mov
out
pop
sbb
sub
add
push
adc
std
xor
inc
shll
xchg
sub
in
into
ret
mov
inc
cld
xchg
xor
aaa
add
sbb
adc
pop
sarl
mov
and
dec
std
mov
int
push
adc
jo
aad
jecxz
pop
daa
mov
or
test
js
xor
es
add
dec
xchg
dec
test
je
leave
xchg
scas
rclb
cwtl
xchg
ret
mov
and
inc
faddl
jmp
fldcw
inc
push
or
rcll
mov
mov
sar
xchg
fstps
call
pop
in
leave
jle
sbb
icebp
inc
push
scas
sbb
xchg
mov
dec
or
mov
and
adc
push
loope
lahf
icebp
xchg
jle
hlt
push
leave
mov
loopne
pop
xor
add
jge
mov
loope
add
mov
and
scas
adc
push
shrl
or
or
cmp
int
lods
loope
mov
sbb
leave
jne
decl
sbb
xchg
jmp
add
xchg
jp
imul
cmpl
xchg
shll
mov
xchg
adc
stos
pushl
hlt
sahf
popf
rclb
loope
mov
push
and
push
bound
icebp
push
xor
add
rcll
cs
ftst
cmpsb
push
and
cmp
push
jmp
aad
lcall
mov
andl
loop
movsl
hlt
test
add
sbb
xor
inc
mov
adc
mov
jge
imul
mov
xchg
repnz
mov
pop
cmp
fldcw
pop
sub
jecxz
adc
int
and
xchg
test
imul
jecxz
js
add
ret
mov
pushf
sti
dec
hlt
popa
aas
mov
mov
ret
shl
cltd
adc
movl
fisubrs
shll
movsl
and
lods
fstl
or
pop
or
xchg
aad
movhps
rcll
mov
mov
mov
sbb
fs
cmp
ud2
xchg
jbe
fwait
mov
out
and
std
imul
test
push
adc
mov
mov
mov
cmp
xlat
aas
lret
and
or
dec
add
mov
add
loope
movsl
xchg
lods
repz
rcrl
fdivrl
push
cmc
cs
rcrl
movsl
mov
mov
dec
and
insb
xchg
outsb
btr
in
pop
leave
and
and
test
xchg
sbbl
lcall
inc
repnz
mov
jecxz
or
xchg
pushf
shl
xor
and
mov
xor
ret
sbb
jp
fcmovu
fwait
shr
xchg
sub
aad
sub
insl
xchg
xchg
cmp
pop
jo
stos
add
mov
aas
packuswb
or
roll
iret
stos
xchg
incb
repz
imull
adc
inc
call
mov
cltd
sti
inc
shl
mov
outsl
repnz
popf
inc
xchg
iret
sbb
cmc
stos
mov
pop
xchg
dec
sarl
inc
arpl
icebp
xchg
xor
cmpsb
fldl
lea
xchg
in
mov
data16
cmc
adc
mov
out
stos
or
xor
repz
inc
test
jge
out
xlat
cld
jo
mov
jg
test
mov
pop
sti
xchg
pop
jle
mulb
fwait
xlat
add
or
xchg
divb
out
or
stos
mov
add
out
xchg
sub
dec
jae
fwait
notl
sub
shll
mov
cmpsb
sbb
mov
cmp
aaa
fcmovne
lods
mov
or
frstor
out
decb
xchg
mul
adc
out
das
sbb
adc
mov
or
sbbl
xchg
leave
repnz
push
pushf
aad
push
add
roll
push
scas
mov
jge
leave
adc
add
xor
ret
push
movsl
push
push
ja
or
push
insb
dec
inc
inc
mov
flds
fcomip
sbb
out
in
dec
lret
dec
jnp
adc
js
jle
lock
mov
or
ljmp
jg
adcl
mov
or
flds
adc
scas
mov
and
movsl
stos
xor
imul
clc
daa
xchg
xchg
and
psrlq
lods
mov
adc
jno
leave
mov
push
pushfw
in
mov
scas
pop
fstpl
scas
call
fdivrp
jno
xchg
sbb
add
notl
cs
mov
jl
add
inc
faddp
std
xor
icebp
mov
fwait
and
int3
jp
jno
stc
jns
cli
xchg
sti
jecxz
test
inc
sarl
lcall
ud0
ljmp
xor
insb
mov
or
and
mov
mov
add
test
lret
push
rcll
xlat
int
lcall
shlb
or
stc
and
mov
je
shll
mov
sti
outsl
pop
shll
scas
push
fcoms
sbb
cmc
mov
add
cmp
inc
lret
mov
popl
dec
rcrl
xlat
mov
xchg
mov
push
scas
and
lds
mov
mov
jmp
cmp
adc
in
ret
xchg
mov
jg
adcl
jno
rcl
mov
jecxz
jl
lea
lds
icebp
adc
push
push
cmpsb
in
xchg
test
je
fwait
incl
fwait
adc
enter
push
fld
jecxz
insb
lahf
cmp
mov
add
lds
mov
mov
fcomi
aad
ror
add
pushl
pusha
adc
xchg
iret
ss
fdivl
std
popf
movsl
cltd
or
lahf
pop
data16
out
lods
sbb
jle
mov
mov
or
test
rcll
lods
inc
push
fsts
shl
in
sarb
rcl
pop
loope
add
fcmovne
les
adcl
out
leave
insb
aad
push
movl
jg
stos
jg
xlat
and
in
dec
mov
xchg
or
mov
jnp
paddw
dec
push
arpl
mov
imull
rcrl
stc
sbb
fwait
or
cmc
mov
iret
push
push
and
fucomp
cmp
mov
cltd
adc
fwait
icebp
enter
and
fisttpl
shlb
sbb
lds
roll
add
inc
or
mov
repz
lcall
lods
lcall
aad
xchg
xchg
cltd
mov
fwait
xchg
into
fwait
icebp
inc
sti
loope
sub
iret
or
mov
in
inc
sti
js
and
pop
mov
movsl
std
inc
or
mov
xchg
popa
not
mov
xchg
hlt
push
int
icebp
push
mov
jecxz
cmp
ljmp
cmc
sub
xor
loope
sbb
and
and
stc
mov
std
or
lds
repz
loopne
ljmp
xlat
rolb
in
popf
cltd
mov
mov
push
frstor
and
icebp
push
or
lods
lock
rorl
jecxz
lret
scas
pop
mov
mov
rorl
fxch
xchg
inc
xlat
imul
or
sub
out
xor
repz
hlt
scas
fnstenv
lods
out
dec
xlat
add
and
movsl
test
fwait
xchg
pop
or
adc
lds
push
jecxz
fdivrp
fiaddl
test
jecxz
stos
repz
test
jl
sbb
or
rol
fwait
mov
cltd
mov
mov
pop
iret
sbb
push
in
cmp
aad
dec
sbb
mov
and
outsb
sbb
test
dec
and
mulb
roll
or
inc
outsl
push
or
push
js
push
leave
icebp
nop
mov
xchg
xor
mov
adc
lods
sahf
xchg
scas
testb
cmpsl
iret
xchg
loope
repz
mov
adc
xor
clc
sahf
and
xchg
scas
xchg
stc
into
mov
xchg
mull
adc
repz
leave
scas
adc
in
fwait
add
adc
call
call
sub
mov
fwait
es
sub
xchg
out
inc
or
icebp
mov
iret
fimuls
je
add
rolb
sarb
or
lret
imul
icebp
std
popl
aad
and
or
idivl
in
popf
mov
std
push
subl
and
adc
xchg
aaa
jecxz
xchg
mov
movsl
leave
imul
fnstenv
icebp
sti
xchg
or
mov
add
mov
js
aad
mov
xlat
test
jae
pop
repz
imul
adc
repz
cltd
popf
insb
in
outsl
add
sbb
jl
cltd
je
ror
ret
scas
or
hlt
loop
insb
mov
fwait
lcall
lds
mov
add
addl
sbb
psubusb
adc
or
divl
scas
stc
je
xchg
fildl
xchg
sub
mov
iret
add
mov
lods
mov
mov
iret
xor
sbb
fs
dec
fldcw
fcomps
fistl
adc
dec
fisttpl
or
push
out
notl
or
or
jbe
iret
inc
lret
data16
xchg
add
dec
loope
decl
outsb
and
imul
leave
lret
adc
jl
popf
sbb
decb
add
imul
jmp
or
mov
imulb
ss
cltd
insb
xchg
sbbl
ret
mov
cmp
aas
mov
push
stc
adc
or
adc
jno
inc
movsl
or
repnz
lock
inc
sbb
insb
jmp
stc
inc
lcall
or
push
sub
jecxz
pop
jno
cmp
dec
iret
dec
out
inc
jnp
in
lock
push
cltd
roll
and
lret
mov
inc
js
cmpsl
je
rcrl
pop
adc
jnp
in
repnz
js
mov
and
inc
inc
cmpsb
pop
insl
fwait
iret
popf
test
jbe
repz
jo
cmp
push
cwtl
lret
mov
outsb
adc
std
jecxz
jne
mov
stos
shll
jl
jge
or
pop
icebp
adc
mov
js
jp
in
enter
adc
sub
push
je
and
movsl
lcall
or
xor
cmpsb
enter
orl
push
sti
jbe
lcall
fisttpll
insl
popf
mov
out
inc
mov
iret
mov
mov
test
adc
shlb
xchg
xchg
add
sub
popf
or
fnstsw
cmpsb
jg
movl
push
push
xchg
mov
fwait
mov
mov
aam
ja
mov
andps
or
std
nop
pop
in
sub
out
pop
test
sbb
pop
dec
dec
mov
dec
in
adc
stos
push
xchg
aad
es
add
mov
mov
xchg
std
pop
sub
ror
outsl
jae
xchg
xchg
adc
call
mov
shll
mov
icebp
icebp
out
xchg
in
es
adc
xchg
leave
xlat
xchg
ljmp
insl
mov
or
add
int
and
movsl
cvtdq2ps
je
vpmaddwd
inc
pop
mul
aas
shll
insb
mov
push
fstps
inc
test
cli
and
mov
in
repz
aad
shl
push
mov
ret
xor
loopne
lock
jne
or
aas
lret
mov
loop
mov
fnsave
dec
mov
mov
mov
icebp
sbb
dec
fists
jae
std
jecxz
mov
fwait
sbb
lcall
fisubrs
out
mov
icebp
stos
stos
orb
fnsave
or
std
aaa
sbb
sbb
int
sub
or
out
mov
fsub
outsl
xor
and
inc
xchg
movb
pop
outsb
mov
int
daa
inc
add
in
out
mov
and
mov
enter
gs
mov
xlat
xchg
movl
ja
or
iret
popf
mov
mov
add
mov
or
std
push
add
stc
sub
pushf
sti
mulb
mov
sti
ss
pop
mov
push
or
pop
stc
cmpsl
mov
mov
add
or
mov
imul
aaa
repz
pop
int
sub
push
push
cmpsl
and
adc
notl
or
lock
int3
jb
icebp
rcll
jae
idiv
xor
inc
leave
mov
mov
test
int
call
mov
add
ja
pop
jge
adc
mov
add
sarl
rol
push
lock
jb
popf
jle
add
and
fs
sub
int
fwait
xchg
loope
jg
or
mov
sbb
iret
insl
ret
mov
ds
cmp
addb
sarl
adc
aad
int
nop
jnp
add
jecxz
jo
sti
fildll
int
repz
pop
mov
xchg
jbe
xlat
aad
sbb
push
test
in
adc
jl
jle
fimuls
inc
data16
or
fadds
lds
sub
dec
xchg
push
and
mov
ds
lret
dec
xchg
or
testb
jecxz
in
in
cltd
lea
mov
pop
jl
dec
clc
in
inc
jnp
ret
mov
lret
or
mov
clc
mov
dec
fxam
repnz
clc
push
ret
sbb
lret
repz
cwtl
int
sbb
mov
rcll
sbb
mov
push
and
adc
xchg
push
lret
cmovns
push
ficoms
flds
ret
pop
xor
rcrl
rcll
adc
sbb
or
xor
adc
mov
pushf
mov
idivl
ror
xchg
popf
mov
outsb
and
xlat
or
scas
and
and
insb
inc
arpl
icebp
add
fimull
dec
pop
pop
stos
inc
jno
stc
lret
inc
cmpsb
outsb
push
adc
push
outsl
dec
mov
lods
mov
jle
divl
dec
imul
fnstenv
add
sti
mov
pushf
hlt
jg
mov
std
mov
xchg
fnstsw
shll
decl
adc
xchg
idiv
push
out
stc
mov
xchg
sbb
or
lea
outsb
iret
jae
and
or
and
leave
cmp
mov
divl
mul
iret
gs
icebp
add
shll
out
jo
adc
mov
out
repz
xchg
xlat
flds
sub
lods
movsl
shlb
in
xchg
pop
mov
rclb
icebp
and
mov
repnz
fpatan
cmp
in
repnz
icebp
mov
std
dec
psubusw
push
lds
add
jg
icebp
xchg
sbb
sar
fdiv
sub
ud0
fnstsw
movsl
loope
jge
iret
mov
mov
mov
int
push
sbb
cltd
in
jne
pop
rorl
fwait
mov
mov
mov
mov
and
xchg
shll
dec
add
mov
sbb
addb
frstor
in
pop
pop
or
loop
stc
mov
sti
inc
cmpsl
push
mov
popf
add
sub
cmpsl
jo
repz
mov
js
mov
popa
jo
mov
ret
mov
filds
xchg
outsl
scas
outsb
loope
mov
fcomi
xor
cltd
addl
mov
fisttpll
dec
repz
jge
pop
lock
sub
xor
mov
ror
lds
xor
xchg
add
mov
push
mov
pop
lfs
pusha
aam
aas
std
inc
push
mov
or
cmc
push
daa
jg
or
vmread
ret
loopne
addb
add
mov
cmp
icebp
aaa
cltd
push
jne
aas
sbb
push
and
push
sub
cmp
arpl
and
jne
leave
mov
adc
mov
dec
mov
out
frndint
sbb
mov
jae
add
lret
lds
and
scas
in
in
in
cmp
jecxz
imul
and
mov
leave
mov
icebp
lds
dec
clc
pop
addps
and
mov
fld
pop
push
and
inc
out
mov
pop
repz
and
mov
shlb
jbe
cltd
or
scas
iret
jbe
fwait
leave
sbb
sbb
mov
jb
lret
iret
jl
mov
add
add
xchg
jbe
aad
mov
sbb
mov
movsl
inc
jg
mov
dec
shlb
or
ljmp
and
mov
movsb
cmp
pop
sbb
mov
in
and
notb
pop
adc
xlat
mov
sbb
xlat
push
stc
rcr
insl
fucomip
pop
fcmove
ja
movsl
and
sbbl
mov
add
ret
mov
jecxz
inc
and
add
fwait
aas
jo
mov
shl
mov
adc
popa
fldl
and
out
fwait
push
xor
jno
aas
fistl
push
xor
shl
sbb
or
scas
mov
mov
scas
push
leave
mov
xchg
mov
pop
stc
inc
sbb
repz
jmp
mov
fwait
jne
shl
mov
stos
aas
nop
xchg
lret
shrl
xchg
dec
int
xor
xchg
outsb
xor
shr
cs
jl
lret
mov
add
out
add
divl
add
sbb
popf
xchg
fnstcw
lds
lds
shll
inc
add
jb
rcll
jg
aad
iret
add
jo
mov
test
pop
test
xchg
inc
lds
movsl
out
hlt
xchg
mov
movsl
cmp
scas
icebp
jg
int
jo
and
movsl
jns
mov
stc
cmpsb
test
mov
or
or
mov
in
incb
mov
mov
mov
lcall
jnp
mov
mov
jge
sbb
sarl
adc
repz
sub
movl
and
lahf
outsl
mov
adc
insl
xchg
out
fxam
loope
jno
icebp
iret
sti
bnd
mov
rcll
add
jg
ss
xlat
inc
std
fidivrl
fwait
movl
cmpsb
shll
outsb
or
jg
out
or
movsl
scas
push
repnz
fcomp
xchg
sub
mov
loope
and
jnp
mov
jne
or
rorl
push
int3
adc
cmpsb
ljmp
mov
outsb
sahf
xchg
cmpsl
mov
add
mov
movsl
hlt
xchg
rcll
dec
out
movsl
pop
repnz
bound
sbb
into
xchg
mov
cwtl
inc
add
jno
aas
fwait
scas
cmpsl
inc
stos
cmpsb
fwait
mov
fstps
and
xchg
stc
mov
stos
pop
and
cmp
mov
arpl
movsl
inc
shrl
ljmp
mov
fcmovnbe
mov
imull
pop
and
sbb
mov
ds
leave
insb
movsl
and
insb
adc
mov
mov
andl
loope
jl
jo
fdivrp
sub
push
xchg
rcl
mov
cld
leave
xchg
xchg
mov
add
push
setae
leave
repz
inc
and
aas
jo
movsl
add
divb
xchg
fisttpl
fstl
insl
loope
lret
mov
test
mov
sbb
lret
adc
sbb
mov
dec
imul
movl
scas
mov
jnp
add
pop
leave
ret
std
imul
xlat
jno
in
inc
sahf
arpl
stc
jp
std
div
notb
and
adc
icebp
xchg
add
cmp
cltd
sub
inc
inc
dec
roll
rolb
outsl
jecxz
pop
fistpl
sti
mov
sub
cltd
sbb
xchg
jmp
inc
fisubl
scas
fisubrl
sub
out
push
lds
jmp
mov
xor
xor
sti
add
test
call
lcall
fdivrl
movsl
dec
neg
out
fstps
fwait
pop
mov
adc
lods
lret
scas
mov
mov
xchg
cmovl
cmp
jbe
mov
clc
add
cmpsl
cwtl
and
and
xchg
int3
xchg
pop
pop
dec
and
icebp
inc
fwait
xchg
icebp
pop
mov
or
daa
stos
bound
push
jo
mov
jg
stc
jbe
mov
xchg
adc
into
fnstcw
mov
stos
ja
xchg
xchg
int
je
or
add
push
mov
leave
jae
xchg
adc
mov
out
mov
mov
fwait
sbb
icebp
pop
leave
pop
aas
imul
and
mov
scas
xchg
sub
sti
and
mov
mov
mov
fwait
pop
ret
shl
push
std
imul
sub
add
imul
jl
adc
dec
inc
les
mov
testl
insb
mov
add
push
popf
pop
and
mov
loope
adc
mov
or
loope
movsb
cltd
shr
mov
pop
adc
mov
mov
outsb
or
in
psubq
adc
xchg
mov
mov
mov
pop
out
js
mov
cld
mov
pop
adc
and
sbb
shl
xchg
enter
jo
stos
popf
sub
sti
or
mov
cmpsl
std
push
sbb
mov
mov
rorb
repz
xor
xchg
mov
or
or
jecxz
shll
xor
sbb
icebp
adc
add
lock
xchg
adc
out
lods
dec
mov
pop
out
dec
les
test
sbb
push
or
xchg
and
nop
mov
adc
leave
lds
inc
bsr
mov
cmp
inc
icebp
jmp
and
int3
mov
cli
repz
stc
push
dec
adc
ljmp
popf
or
lds
mov
or
cmc
mov
mov
mov
sbb
xor
fdiv
jo
sub
loope
and
fs
jg
adc
ret
arpl
outsb
aas
xchg
inc
pop
aad
cwtl
xchg
mov
pop
xchg
lret
fstl
dec
popf
movsl
stos
push
mov
mov
or
mov
push
mov
mov
mov
out
xchg
popf
or
repz
negl
aad
cltd
push
inc
scas
lret
data16
mov
inc
sbb
and
push
int
sbb
lock
mov
mov
imul
adc
in
ja
lret
icebp
push
xchg
xlat
cmpsl
jmp
or
insl
pop
ljmp
stc
push
notb
cmp
gs
lret
sahf
xchg
test
iret
xchg
push
jg
lds
stc
and
cmc
leave
mov
jle
jo
mov
cmc
and
push
addr16
pop
repz
mov
ss
jg
leave
adc
or
dec
add
or
scas
mov
leave
xchg
out
std
push
fcmovne
mov
xlat
mov
xchg
inc
movl
push
out
wbinvd
xchg
xlat
dec
fwait
rorl
movsl
stc
jb
mov
loope
std
jecxz
fwait
mov
xchg
rep
testl
cmp
xchg
xchg
cld
cltd
je
popf
movsl
jecxz
popl
mov
inc
scas
fadds
aas
mov
and
rclb
xchg
pushf
push
add
add
mov
dec
and
test
out
inc
pop
addr16
int
jbe
idivl
cltd
xchg
jmp
adc
add
sbb
sub
xchg
stc
std
pop
cmc
lcall
mov
cmpsb
cli
cmc
inc
mov
push
outsl
pop
int
sbb
dec
scas
dec
push
xchg
mov
mov
mov
das
repz
pop
pop
mov
sahf
dec
mov
xlat
es
fsubrl
dec
ffreep
in
pop
ret
xchg
or
sbb
add
adc
sti
fdiv
outsb
fldenv
aad
xchg
icebp
shr
mov
ja
adc
sbb
jo
in
and
orb
jg
loope
lds
fidivrs
dec
xor
xchg
fsts
dec
or
pop
mov
rol
test
test
adc
sbb
gs
outsb
inc
mov
pop
repnz
mov
scas
int
mov
lahf
dec
sub
cli
dec
test
lock
outsb
cmp
addr16
mov
hlt
pop
shll
ja
jecxz
cmp
dec
mov
adc
inc
nop
sbb
or
mov
push
mov
xor
or
adc
inc
int
lds
inc
sysret
movsl
push
mov
mov
test
fstpt
push
int
adc
bound
fisubrl
or
shl
loopne
out
in
movsl
adc
sbb
rcrb
adc
cmp
mov
pop
jmp
out
cmp
add
sub
mov
sbb
fcmovne
orl
pop
faddl
call
cmp
cmpsb
int
and
icebp
push
xor
jecxz
mov
mov
je
stos
or
mov
int
aas
add
push
imul
push
and
sub
jp,pt
cmpsb
or
xor
aas
in
into
movsb
pop
movsb
xchg
xchg
or
inc
roll
adc
pop
add
out
sbb
lcall
mov
inc
faddl
outsb
mov
xor
fistpl
fcomps
loop
add
mov
pop
std
and
mov
mov
test
mov
iret
adc
inc
sti
push
pop
cmp
pop
sbb
mov
add
xchg
pop
dec
mov
je
in
lcall
pop
pop
or
dec
pop
xor
outsb
add
vaddpd
scas
adcl
insl
inc
test
push
mov
dec
aad
xorl
lcall
jmp
inc
mov
outsb
xchg
adc
mov
mov
add
shlb
cmp
adcl
pop
sbb
inc
les
pop
inc
mov
xchg
aas
mov
lods
or
sahf
jl
sbb
leave
popa
cltd
mov
hlt
cltd
rcll
push
add
aam
cmpsb
cmp
sub
std
addr16
and
inc
push
cs
shrb
stc
or
push
decb
push
movsl
rolb
movsl
pop
shrl
add
cmpsb
insl
adc
test
rcr
jg
cmp
mov
inc
enter
xchg
mov
mov
pop
jno
pop
sbb
imul
in
ror
lods
pop
add
icebp
push
dec
xor
sub
xor
xor
push
outsb
pop
int
inc
lds
in
test
xor
sti
out
dec
pop
dec
mov
sub
andb
push
pop
bound
scas
dec
or
pop
rorl
xchg
push
pop
add
sbb
movsw
js
add
enter
bound
sub
dec
ret
pop
stc
dec
adc
test
mov
inc
cmp
push
cmp
lcall
and
outsb
subb
xchg
push
or
add
shll
loop
pop
pop
rep
pop
loope
push
and
roll
pop
push
ret
outsb
pop
lcall
lcall
jne
xchg
mov
or
sti
mov
sbb
cltd
loope
fldenv
pop
iret
jae
rcll
cli
and
jne
leave
cmpsb
stc
iret
sbb
in
stos
jb
mov
cmc
lods
inc
xchg
rorl
fcmovb
fcoml
out
in
add
in
pop
rcrl
or
pop
ret
xor
pop
sbb
outsb
lahf
stos
sbb
or
cmp
mov
inc
add
sti
js
mov
or
xorb
lret
fnstenv
jg
in
xor
mov
jae
adc
stos
jo
testl
orb
sub
sbb
mov
shlb
sbb
stos
enter
and
stos
data16
fsts
xchg
jecxz
shll
lds
int
cvttps2pi
push
test
mov
movsb
clc
aas
mov
movsl
leave
jecxz
xchg
rcll
push
push
arpl
imul
xor
sarb
pop
cs
pop
and
sbb
int3
sahf
in
xlat
loope
and
out
xchg
popf
pop
movsl
movsb
xchg
mov
lret
nopl
mov
adc
mov
je
mov
add
fwait
cltd
scas
sahf
mov
sbb
mov
xor
dec
jo
rcrl
int
outsb
aad
add
mov
pop
loopne
test
roll
sub
sbbl
movsl
xorb
add
jnp
fstl
cmc
loop
lcall
std
xchg
aaa
xchg
mov
scas
cltd
xchg
test
lds
aad
push
jnp
sbb
pop
dec
popa
mov
not
jle
popa
and
out
popf
adc
rcr
cmpxchg
icebp
pop
pop
jmp
push
add
xchg
push
xchg
jecxz
out
fistpll
ljmp
shrl
add
popf
dec
popf
pushl
movsl
das
cmp
xlat
jb
iret
or
mov
scas
loopne
leave
xchg
mov
cs
jne
mov
fwait
xchg
int
cmc
sarl
jae
testl
minps
cs
sbb
xchg
mov
in
int
movsl
sub
and
sti
enter
jb
mov
cltd
add
aad
fwait
pop
adc
mov
call
icebp
js
sbb
or
repz
or
unpckhps
in
adc
rcr
mov
std
push
dec
lods
iret
in
mov
icebp
movsl
xchg
negl
mov
roll
xlat
xor
mov
or
mov
psubq
je
icebp
inc
pop
and
jg
leave
or
or
ljmp
fidivrl
xlat
bswap
sti
dec
adcl
lret
xchg
aad
leave
sbb
xlat
data16
int
ss
xor
fisttpll
dec
pop
push
imul
mov
outsb
fwait
add
fidivl
cmp
hlt
pushl
xlat
lds
sbb
and
or
inc
or
movsl
sbb
js
mov
pop
mov
push
sbb
add
sbb
lahf
push
cmp
or
ror
mov
outsl
aad
scas
iret
fwait
adc
nop
dec
mov
xchg
ret
mov
je
pop
icebp
xchg
lahf
adc
insb
cmpsb
sti
mov
aad
int3
sti
les
mov
or
add
insl
sti
shl
imull
cwtl
es
sarl
jge
fld
je
adc
mov
xchg
cmc
fwait
out
or
lock
sbb
mov
mov
pop
ret
dec
movb
and
dec
mov
mov
icebp
call
xchg
jnp
and
scas
stc
shll
fincstp
lds
push
clc
mov
sti
push
add
rcr
dec
into
jb
cmpsl
scas
push
fisttpl
out
mov
aad
lret
mov
out
jne
std
mov
adc
inc
aad
setnp
or
xor
test
pop
sbb
movb
jnp
testl
push
cmpsb
jb
in
out
add
fiadds
in
icebp
lret
xlat
shll
ja
add
scas
psraw
les
notl
mov
add
out
lret
add
sbb
leave
push
rorl
xchg
inc
mov
add
xor
lcall
les
xchg
mov
rorb
inc
push
and
sub
sbb
idivl
xchg
xchg
loope
push
and
jge
inc
mov
dec
jbe
aad
xchg
mov
ja
fldl
inc
ja
xchg
mov
repz
lahf
testb
adc
js
cmpsl
ret
add
mov
test
outsb
inc
lret
mov
or
xor
fnstsw
stc
push
je
mov
add
test
lock
and
aas
loope
pushw
xor
and
fwait
lret
sahf
in
sbb
lock
cmpsl
shll
and
xchg
mov
push
outsb
xlat
jae
mov
sbb
popa
add
ret
sub
das
popa
pop
mov
hlt
xchg
loope
int
add
setae
imulb
std
mov
inc
add
jo
adc
or
adc
push
test
testl
movnti
and
xor
lds
xchg
lret
imul
sbb
adc
mov
add
scas
addr16
or
insb
dec
rol
pop
mov
lahf
js
ss
mov
adc
cmp
mov
popf
je
or
xor
mov
mov
and
mov
sub
idivl
xrelease
notl
or
ja
mov
jecxz
out
mov
push
inc
orl
in
rcrl
repz
mov
sub
xchg
int
test
lock
test
jl
lret
sar
loopne
cmp
or
mov
data16
pushf
sti
lahf
push
rcl
add
xchg
mov
frstor
xorl
and
movsl
fdivs
testl
fwait
scas
addr16
lret
gs
in
mov
movsl
add
sbb
mov
cmp
or
movsl
or
popf
mov
adc
lret
mov
mov
fildl
shl
and
insl
pop
mov
repnz
repz
add
jno
mov
popf
push
arpl
or
pushf
mov
add
loope
icebp
jg
xchg
andb
add
mov
jle
pop
push
fimuls
pop
and
and
in
and
adc
ret
fnsave
cmpsl
jnp
and
mov
nop
add
shlb
popf
hlt
push
leave
xchg
out
pop
sti
and
clc
cmpsb
and
jge
lret
rcl
std
or
insb
push
mov
jo
mov
or
cli
mul
adc
adc
mov
stc
xor
cli
pop
pop
cmpsb
jmp
movsb
aas
lret
mov
adc
fidivrl
insb
fldl
aaa
mov
add
dec
or
sarb
int
fisttpl
ret
or
xchg
lcall
mov
fld
push
popl
test
cmp
andl
sahf
mov
or
inc
loope
add
sbb
loope
or
stos
repz
popf
mov
xchg
mov
xchg
js
rcl
pop
popa
mov
aad
or
repz
cmp
ret
addr16
js
or
pop
add
inc
cld
inc
leave
icebp
pop
lcall
adc
scas
or
movsl
mov
out
cli
jnp
in
pop
mov
mov
sbb
in
adc
dec
sti
xchg
push
mov
mov
jl
adc
lds
out
cmp
mov
imul
xchg
dec
iret
jb
inc
mov
xlat
icebp
shl
mov
sbb
mov
lods
adc
pop
fistl
in
in
popf
jmp
xchg
test
mov
icebp
inc
iret
out
lea
jmp
sbb
pop
mov
inc
sbb
ljmp
or
sub
mov
aad
sbb
shl
std
int3
stos
clc
mov
stc
fdivl
mov
movsl
ret
sbb
or
repz
std
syscall
add
add
mov
or
aad
aad
add
push
mov
xor
fldlg2
je
xchg
add
lahf
int
inc
jbe
mov
mov
push
xchg
iret
les
push
cmp
pop
sbb
loope
add
mov
stos
mov
stc
mov
jle
daa
popf
mov
cltd
mov
mov
jo
sbb
addr16
frstor
repz
adc
gs
and
imull
cmpsl
jne
fwait
pop
rcrl
add
mov
xchg
mov
sbb
mov
shll
pop
dec
testb
push
pop
sub
int
add
sbb
sub
sbb
adc
out
unpckhps
mov
rcrl
mov
mov
pop
aad
adc
mov
push
mov
pop
in
inc
stc
xchg
cltd
adc
jb
movsl
test
scas
or
dec
lods
ja
adc
enter
je
inc
lds
insb
adc
ds
aad
enter
scas
add
jge
cltd
js
insl
insb
add
jb
add
mov
fwait
adc
test
or
sbbl
cmpsl
mov
push
or
out
cli
xor
fsubrp
stc
and
lret
or
ret
xchg
mov
mov
loope
scas
arpl
mov
sub
jg
xchg
in
jbe
and
jecxz
jae
xchg
icebp
fst
xchg
loope
int3
lcall
mov
add
and
inc
sub
sti
lret
and
psllw
cmp
ror
cwtl
jge
mov
xchg
loope
lret
xor
popf
add
aas
jecxz
movsb
and
psubw
cld
mov
adc
mov
fldenv
xchg
jb
aad
mov
inc
mov
rcrb
outsb
scas
and
ljmp
sub
and
outsb
adc
pop
xchg
je
xchg
fcmovnbe
xchg
pop
mov
aad
iret
adc
cmp
inc
les
jne
testl
xor
testb
popl
fnstenv
mov
rcrl
ret
in
icebp
mov
adc
lods
cmp
sahf
popf
push
clc
xchg
mov
mov
call
movsb
ljmp
arpl
adc
adc
push
xor
pop
push
mov
pop
outsb
push
adc
xchg
adcl
jo
and
mov
js
jecxz
btr
adc
popf
xchg
sbb
fistl
xchg
xor
xchg
xor
int
mov
push
push
pop
add
xchg
cmp
or
lea
inc
xchg
insl
add
mov
jecxz
fsubrl
cmp
mov
stc
mov
or
and
mov
mov
push
fstpt
mov
xor
or
decl
adc
mov
adc
aam
pop
aam
dec
mov
sarl
mov
maskmovq
notl
pop
sbb
aas
adc
jnp
mov
scas
mov
jo
icebp
mov
mov
cmc
in
fistl
push
cmp
mov
and
or
in
and
sbb
mov
cwtl
mov
mov
mov
sub
push
lret
int
or
inc
push
out
sarl
push
mov
xchg
cwtl
xchg
xorl
fyl2x
into
test
ficoms
xor
adc
sbb
icebp
cmp
sub
add
movsl
xchg
or
mov
aas
shrb
pop
out
fdivrs
fistl
in
xchg
in
add
cmp
sub
pop
and
jg
mov
xor
mov
dec
sub
scas
ljmp
roll
and
inc
mov
sbb
mov
ss
jae
stc
fxch
sbb
add
push
jg
insb
pop
clc
arpl
cwtl
mov
ss
add
sbb
fnstcw
add
lds
mov
test
add
xor
mov
int
out
fsts
or
inc
mov
xor
pop
rorb
scas
mov
mov
mov
lcall
and
or
fmull
jne
popf
fucom
mov
ret
aam
out
dec
loope
enter
out
jcxz
outsb
mov
or
push
cmpsl
fcmovbe
push
mov
testb
popf
aas
jg
mov
insb
insb
mov
mov
xchg
mov
mov
mov
sbb
push
loopne
mov
scas
ds
sbb
call
movsl
xchg
pop
aad
in
add
out
push
in
in
jbe
mov
imul
adc
mov
scas
es
mov
cld
insb
xchg
aad
xchg
int
rol
testb
and
scas
loope
xchg
xchg
lret
in
mov
cltd
aad
es
xor
add
push
push
push
push
mov
repz
sub
andb
mov
sub
jmp
or
loope
addb
loop
nop
test
pop
test
aad
xchg
rcll
popf
mov
sub
xchg
sbb
sti
xchg
push
jb
cltd
lds
scas
mov
out
fnstenv
and
ret
mov
jo
sbb
jecxz
addr16
int
adcl
sbb
mov
pop
icebp
mov
lock
hlt
roll
and
sbb
dec
xchg
dec
sbb
mov
xchg
sub
jge
int
popf
mov
jg
mov
clc
sub
pop
add
ja
psubusb
rorb
mov
ss
fnstsw
push
xor
mov
rcll
popf
pop
pushf
pushf
sbb
data16
sbb
jno
mov
xchg
push
xchg
xchg
mov
repnz
stc
lock
pop
sbb
test
jno
mov
xor
scas
or
and
aas
mov
inc
jo
int
pop
jnp
sarl
repz
jl
sbb
pop
std
jno
adc
mov
mov
xchg
shll
pop
out
or
lods
sahf
std
fwait
scas
loope
and
jle
push
mov
push
es
dec
sbb
icebp
mov
rep
xchg
mov
mov
mov
cltd
or
stc
dec
sbb
rcrl
mov
roll
cltd
and
icebp
push
rcrl
xchg
out
sbb
cmp
mov
jne
mov
fwait
iret
pop
in
ret
pop
cmpsl
push
mov
xchg
inc
mov
pushf
in
cmp
ret
dec
sarl
jg
sti
inc
bnd
add
mov
hlt
mov
xchg
xchg
or
xor
cltd
ret
in
loope
mov
iret
fisttpll
lock
pop
stos
jp
ja
shll
cmp
add
fld
fdivr
movsb
js
mov
adc
jno
pop
lock
cld
stc
clc
frstor
pusha
mov
leave
push
in
pop
add
and
repnz
cmc
stos
jecxz
add
ret
repz
stc
in
mov
xchg
adc
outsb
cltd
leave
fstl
inc
jmp
xor
loope
jne
rcl
icebp
ret
xchg
add
pop
add
mov
jge
and
clc
cwtl
pop
mov
inc
rcrl
dec
xchg
popf
pop
xor
or
and
insb
jnp
scas
jb
or
cmp
or
shll
lds
xchg
fistl
or
or
lea
pop
mov
iret
xor
stc
int
shl
shrl
mov
popf
dec
mov
jge
pop
idivl
jae
cltd
mov
dec
mov
repz
add
lods
jno
xchg
aas
and
cltd
mov
fstpl
int
xor
mov
enter
fwait
mov
cmpsb
sti
jmp
xor
or
scas
inc
fisttpl
movsb
test
mov
add
and
adc
out
fnstcw
sbbl
mov
pop
out
into
add
adc
or
xchg
and
popl
movsb
lahf
or
jge
leave
or
out
xor
aaa
jecxz
movsl
lea
aas
xchg
fcoms
cmp
daa
cs
addr16
scas
scas
insb
jnp
lret
js
mov
outsb
sub
imul
sbbl
std
jg
jno
mov
inc
ret
pop
sbb
add
mov
sub
mov
and
mov
fmul
add
dec
mov
into
xor
mov
inc
aas
mov
pop
jo
dec
testl
out
insb
xchg
rorl
and
pop
jp
jno
xchg
mov
xchg
xchg
xchg
jecxz
leave
xlat
mov
or
push
mov
mov
add
cmp
and
adc
pop
xchg
jle
jl
xchg
inc
scas
nop
daa
sub
add
mov
shrl
inc
dec
imul
add
mov
push
adc
je
je
xchg
cmp
movsl
push
or
inc
mov
mov
mov
and
scas
push
hlt
lcall
xor
sub
aad
adc
jecxz
mov
movsl
mov
pop
and
call
add
add
mov
notb
fisttpll
jno
xchg
mov
std
js
dec
jno
xchg
sbb
repz
xchg
aas
inc
iret
arpl
adc
std
pop
js
lret
push
cltd
cmp
clc
add
cli
repnz
mov
fprem1
mov
push
mov
cmp
adc
mov
add
mov
out
add
outsb
adc
jg
iret
ret
or
push
div
push
scas
mov
jne
repz
int
xlat
mov
lret
test
leave
fxam
pop
divb
maskmovq
negl
push
or
adc
aam
adc
mov
xchg
or
sbb
cli
fists
mov
adc
pop
je
adc
out
mov
or
lret
mov
mov
movsl
daa
cld
pop
hlt
sub
sbb
sbb
ret
xchg
xchg
shll
leave
movsl
shrl
aad
dec
push
push
es
xor
std
ss
inc
in
inc
xchg
mov
inc
mov
popf
fistpl
dec
aaa
lcall
neg
mov
es
fisubs
fstl
adc
xlat
xchg
mov
xchg
or
outsb
mov
sti
jecxz
mov
ret
mov
xchg
fildl
add
push
es
icebp
clc
adcb
adc
call
int
add
mov
fmuls
in
clc
jne
mov
sahf
lahf
std
stc
test
mov
mov
xlat
in
and
or
cmp
add
xchg
cltd
inc
mov
cmp
jb
mov
mov
add
sbb
dec
lcall
loope
pop
inc
fadds
in
jg
out
xchg
push
sbb
or
shl
test
and
sqrtps
mov
call
sets
into
in
shll
daa
leave
pushf
push
aaa
push
cld
data16
sbb
xchg
aad
pop
cld
negl
add
std
sbb
jg
fildl
mov
xchg
out
xor
aam
aas
xor
mov
xor
les
mov
repnz
adc
sbb
repz
stc
add
jnp
movsl
jnp
lds
adc
adcl
cmc
add
push
mov
loope
mov
leave
xchg
push
xlat
bound
dec
and
sti
push
sbb
scas
sbb
sbb
inc
aas
stc
jp
outsb
cmp
mov
fldl
scas
out
clc
mov
xchg
ret
jb
repz
xor
sti
cmp
xchg
fadds
xlat
inc
fucomp
jge
adc
cltd
and
xchg
shr
inc
std
neg
sbb
lea
and
leave
imul
pop
ret
xchg
mov
add
std
mov
cmpxchg
pusha
mov
inc
sub
xlat
cmp
cmp
jecxz
insl
leave
mov
jecxz
test
scas
dec
popf
shl
xlat
repz
dec
push
scas
adc
call
stos
testb
sub
dec
xchg
cltd
jnp
std
shl
cwtl
out
xchg
and
mov
mov
addl
dec
out
stos
stc
fldcw
pop
out
or
mov
icebp
or
or
sub
fcmovbe
mov
repz
push
inc
xchg
ret
pop
xchg
mov
movsl
mov
roll
adcl
lock
data16
aad
cmp
sbb
push
jl
dec
lods
loope
out
ret
loop
arpl
xor
stc
in
push
sti
fidivrl
mov
testl
xchg
and
mov
aas
popf
js
sub
rorl
xchg
mov
dec
leave
cltd
inc
jge
and
pop
shlb
inc
xchg
mov
mov
cltd
add
fst
xchg
cmp
iret
inc
or
jecxz
mov
mov
jle
movsl
inc
inc
jb
adc
add
in
icebp
add
pop
test
shll
into
cmpsb
insl
bswap
adc
mov
pop
jecxz
xor
mov
out
loope
aas
lods
xchg
ret
lods
xor
fistpl
add
jae
cmp
sbb
cltd
iret
pop
cmpb
push
leave
out
scas
test
je
and
cwtl
dec
or
outsl
pop
sti
leave
iret
movsb
or
cmc
push
flds
test
mov
mov
mov
mov
inc
divl
lds
mov
add
shll
shrl
sbb
add
xchg
adc
aad
xchg
mov
and
mov
adc
mov
xchg
shll
aas
hlt
sub
sti
lahf
jbe
out
ret
xchg
orl
roll
cmpl
fidivl
xchg
mov
or
sub
jae
fstpt
ss
add
or
pop
outsb
sub
rcrl
mov
arpl
scas
lds
pop
or
mov
int
fildll
ss
inc
in
out
push
sbb
out
mov
cmp
lret
mov
inc
aam
std
leave
xchg
xor
fldenv
ret
add
pushf
push
add
xchg
stc
fstcw
or
mov
jb
lcall
dec
hlt
sahf
sti
xchg
arpl
push
iret
mov
lock
fisttpl
scas
es
add
cld
cmp
negl
fwait
jo
adcl
stc
or
lds
sahf
push
adc
dec
shrl
in
in
outsb
sbb
fninit
mov
ss
icebp
xchg
ds
cli
sahf
ret
or
aas
repz
fnstsw
ds
mov
mov
cmp
inc
enter
adc
ffreep
mov
test
sub
xchg
lock
sbb
push
push
xchg
ss
mov
dec
push
xor
adc
outsl
inc
lret
add
mov
pushf
out
fistpl
cmp
mov
jecxz
lret
repz
fisttpl
daa
sti
lods
lahf
ret
dec
mov
jbe
adc
cltd
add
clc
add
jns
lret
sti
stos
ja
add
mov
ja
mov
repnz
mov
fs
pop
out
lcall
test
push
xchg
clc
insl
sar
xchg
mov
mov
fnstsw
fsubs
add
or
psrlw
lcall
xchg
iret
cltd
xor
or
sti
xor
stc
movsl
leave
mov
jae
xlat
icebp
push
ds
rcll
rcll
push
or
add
rcr
mov
movsl
push
jp
fcmovnbe
std
icebp
add
xchg
hlt
ss
dec
scas
shll
mov
and
pop
ja
mov
mov
xchg
mov
ret
ja
flds
push
pop
jns
ret
das
jge
mov
aas
out
hlt
fst
xor
or
addr16
sbb
movsl
inc
popf
pop
xlat
in
mov
fucomp
mov
aad
testl
mov
cltd
lds
add
les
adc
jno
wbinvd
repz
mov
xchg
into
outsb
cwtl
dec
dec
mov
jp
mov
pop
in
pop
inc
mov
mov
popl
rcll
stc
mov
mov
out
push
and
add
shlb
shll
ds
xchg
cmp
xchg
outsl
ret
fwait
xchg
fsubrl
jg
shl
xchg
xchg
loope
popf
add
addr16
or
lcall
mul
stc
push
sti
jg
icebp
xchg
inc
mov
int
in
leave
lcall
shl
dec
mov
cmc
stos
std
sbb
mov
fmuls
mov
lods
cltd
add
mov
popf
fidivl
add
adc
adc
ret
movups
push
test
add
and
mov
outsb
iret
repz
lret
icebp
mov
aaa
sbb
mov
sbb
fwait
cmp
xchg
sti
xorb
gs
sub
push
add
jp
sbb
fisttpll
inc
ss
iret
fwait
mov
adc
insb
pop
fldl
add
mov
cmp
add
mov
fsub
mov
and
push
leave
sub
ror
add
xchg
popa
xchg
call
ljmp
mov
sbb
inc
add
outsl
mov
sbb
sbb
std
and
pop
xchg
add
xlat
or
xchg
xchg
inc
mov
repnz
subl
cltd
shll
es
dec
xchg
ret
fildll
inc
sub
aas
out
int
mov
mov
xchg
ja
stc
sub
sub
icebp
ljmp
call
jp
mov
repz
xor
rorl
cmpb
mov
jbe
mov
adc
in
mov
sub
xchg
inc
mov
repz
or
pop
dec
jecxz
fsubl
in
cld
jg
mov
jnp
movsl
hlt
es
faddl
aad
lret
in
adc
cmp
xlat
pop
out
or
les
ret
cmp
and
lock
sub
mov
xor
rclb
jnp
add
cld
inc
jbe
pop
std
push
mov
nop
sbb
or
pop
fst
in
adcl
scas
xlat
lahf
mov
movsb
pushw
fstpt
leave
loope
and
dec
ds
jge
js
adcb
cmp
pushf
jno
leave
lret
divl
mov
int3
out
aas
fwait
mov
negl
cmp
repnz
sbb
popf
sub
and
add
mov
push
adc
int
bound
insw
stos
movl
xchg
or
fucomp
and
mov
or
sbb
mov
jnp
pop
lret
cli
ret
rclb
cmpsl
in
jmp
mov
fldl
adcl
sbb
mov
sbb
in
scas
imul
pop
and
mov
lock
fnstenv
or
mov
rcrl
xchg
push
adc
leave
in
aad
sahf
rcrl
mov
mov
sti
es
xchg
pop
pop
mov
and
and
enter
div
jecxz
mov
add
sub
inc
sub
fldl2t
loope
sub
jno
push
dec
rcll
jge
div
cmp
test
jnp
out
orl
fcoml
cs
adc
xor
repz
fwait
in
mov
fnstenv
pop
imul
xchg
mov
mov
inc
jno
int
xchg
or
push
shlb
sbb
dec
jb
or
in
stc
or
sti
jns
aad
mov
js
pushf
lret
xchg
stc
adc
sti
sub
outsl
sbb
leave
stc
mov
lret
data16
ljmp
add
push
daa
lcall
jb
sbb
getsec
scas
repz
mov
mov
add
shl
adc
adc
xchg
int
mov
leave
data16
xchg
cmp
pop
fwait
mov
xchg
out
adc
jb
pop
or
xlat
cmp
mov
cmpsl
jl
or
xchg
lock
mov
movsl
out
mov
sbb
inc
jl
in
les
mov
icebp
mov
push
and
mov
iret
frstor
adc
stos
adc
ljmp
xchg
loope
xor
movsl
mov
inc
pop
xor
mov
sti
mov
fsts
dec
lods
jg
lds
and
ljmp
enter
push
mov
mov
outsb
jo
mov
xchg
and
cmp
ljmp
repz
pop
push
pop
xor
pop
or
and
test
cs
aas
jl
push
out
and
pop
sbb
add
lea
xchg
or
or
mov
iret
or
xor
mov
dec
out
scas
sub
mov
mov
lahf
mov
pop
fst
jno
sbb
icebp
iret
jo
mov
lret
dec
fwait
mov
lahf
daa
rol
jnp
xchg
int
sub
inc
pop
xor
adcl
adc
push
push
add
adc
divl
sbb
mov
ss
dec
mov
add
or
cltd
ss
inc
adc
ret
push
push
jns
sti
lds
out
je
scas
stc
xor
into
rorl
mov
mov
mov
inc
jge
xlat
adc
mov
fnstenv
into
ret
shr
sbb
inc
in
movsl
or
inc
mov
cltd
icebp
scas
fwait
shl
repnz
adc
aas
and
mov
xchg
add
push
dec
jne
out
fstp
or
and
movl
mov
loope
or
jge
mov
xchg
int
outsb
fucom
sub
hlt
or
push
dec
shrl
mov
inc
add
jge
fwait
cld
cmp
lds
xlat
in
and
xchg
mov
mov
xchg
add
cmp
leave
negl
sbb
and
mov
mov
aad
sarl
fstl
out
xor
repnz
repnz
xlat
sti
test
pop
add
jmp
int
cmp
mov
call
mov
adc
mov
mov
lods
popf
mov
fstpt
pop
movsl
push
sti
std
aad
push
in
test
rcrl
sahf
jnp
or
push
sub
mov
mov
imul
xchg
xchg
in
sub
adc
mov
mov
xchg
fwait
or
sub
ret
xchg
repz
jle
popf
jb
mov
aas
mov
iret
pop
movl
aad
pop
fisubl
lods
repnz
fnsave
adc
aam
sbb
and
xor
cmp
mov
cltd
mov
fnsave
pop
ret
call
jnp
popl
shl
mov
inc
mov
aad
fs
lds
mov
jg
adc
sbb
das
fwait
sbb
mov
aas
mov
fmuls
push
ret
xor
flds
jnp
ret
add
lret
sti
adc
jbe
rol
adc
leave
flds
xchg
inc
and
rclb
fwait
add
jp
iret
out
inc
in
push
inc
xchg
popf
adc
ja
add
test
iret
std
inc
pop
callw
adcl
jnp
prefetch
mov
xchg
mov
cltd
stos
mov
out
or
call
int
imulb
xchg
stc
popf
icebp
popf
and
jge
mov
add
xchg
outsl
xchg
cltd
lret
push
jle
jbe
xchg
aas
pop
mov
dec
rcll
outsl
or
shrl
mov
mov
and
icebp
imul
sti
bsf
sti
bnd
mov
mov
sbb
xor
xor
sbb
leave
lret
popf
add
into
cwtl
sub
inc
leavew
sti
outsb
nop
mov
xor
scas
mov
ret
xchg
stc
mov
mov
in
pop
rolb
mov
xchg
sti
aas
jle
jbe
xchg
mov
mov
shll
cmpsb
lods
sub
and
add
jg
in
stos
sbb
mov
add
out
notb
xchg
in
ss
sti
inc
dec
repz
adc
mov
popf
loope
mov
mov
js
iret
movsl
mov
andl
repz
add
push
jecxz
cli
push
lcall
leave
adc
mov
adc
dec
mov
scas
shll
repz
xor
adc
add
mov
jecxz
pop
xchg
mov
lret
sbb
mov
sti
sti
inc
jae
pop
xlat
stc
pop
xor
scas
ss
rcll
sbb
adc
pop
ret
lret
out
movsl
stc
loope
scas
shll
mov
test
xor
scas
mov
dec
cmpl
jle
aas
inc
jb
fnsave
fisttpl
or
sbbb
idivb
leave
add
int
adc
mov
jecxz
syscall
add
inc
cltd
cmp
cld
inc
repz
xor
shll
jle
and
mov
std
or
jg
mov
mov
mov
andb
xchg
ljmp
repz
iret
frstor
jae
xchg
std
mov
mov
jecxz
ljmp
xchg
roll
in
into
flds
mov
and
xchg
scas
clc
and
mov
adc
dec
mov
scas
xor
mov
push
in
xchg
fldcw
int
aas
popf
fwait
mov
stos
roll
mov
aad
into
lret
arpl
xor
out
push
scas
data16
shll
insb
sahf
dec
clc
pop
fisubs
fisttpll
aas
push
jae
iret
xchg
push
lds
fisttpl
sub
std
cmp
and
xor
pop
xor
cli
push
sub
mov
mov
leave
xor
or
ret
mov
cmp
andb
lret
dec
stos
inc
jae
xchg
lds
sub
or
ret
jle
hlt
push
lcall
movsl
icebp
lahf
pop
adc
out
insb
mov
jg
adcl
insl
imull
sbb
adc
jecxz
sub
dec
adc
inc
cmp
jbe
dec
xchg
pop
adc
dec
fistpl
iret
rep
fstpl
jg
adc
jecxz
out
and
xchg
insl
mov
adc
loope
push
negl
cmp
outsb
orl
jge
inc
dec
insl
lahf
or
pop
jecxz
sbb
xor
es
xchg
in
icebp
and
scas
xchg
jbe
or
std
adc
xlat
ss
add
jg
in
xchg
mov
loope
mov
xchg
jb
mov
scas
int3
divl
out
loope
mov
aad
mov
sbbl
mov
cmp
in
hlt
xchg
aad
sbb
test
xchg
lret
add
and
stos
jbe
and
xor
clc
mov
popa
sbb
scas
in
lds
inc
mov
dec
and
cmp
sbb
add
xor
aam
pushf
lds
es
cmc
pop
or
add
fiaddl
popa
add
icebp
mov
fistl
out
loop
xchg
xor
mov
sbb
or
andl
or
and
and
call
xchg
mov
jo
rcl
cmc
aad
leave
test
push
lret
cmpl
in
mov
xchg
data16
sbb
icebp
push
mov
ljmp
xchg
lds
pop
rcrl
adc
sub
jl
mov
nop
int
inc
mov
cltd
adc
mov
idivl
add
fwait
mov
in
push
xor
mov
repz
add
fnstenv
fimull
jg
cltd
mov
jecxz
mov
sbb
fstps
lret
dec
jno
adc
mov
jb
lret
sti
cwtl
in
sbb
push
adc
adc
imul
and
mov
ret
negb
adc
sti
jo
roll
mov
cmp
jg
jno
xchg
mov
jnp
xchg
cmpsb
inc
dec
adc
jbe
movl
bound
syscall
jecxz
mov
jp
fstl
add
pop
out
add
js
add
fistpl
cmp
iret
adc
mov
js
lret
stos
sbb
sub
pop
add
pop
add
or
lea
call
and
fcomi
cltd
push
adc
and
cld
ljmp
inc
fwait
jbe
lds
jbe
popf
or
adc
xor
rolb
in
sarb
jp
shrl
jno
adc
mov
es
nop
sub
xor
mov
frstor
shlb
mov
lds
xor
rcll
iret
dec
btr
jp
popf
incl
cltd
sbbl
jns
call
dec
outsb
scas
mov
add
popf
cmpsb
in
add
int
rcr
test
push
loope
inc
pop
pushf
push
ret
push
xor
or
pop
mov
popa
mov
sbb
call
mulb
xor
scas
das
mov
mov
lret
push
das
add
mov
hlt
push
adc
data16
xchg
xchg
cmp
jecxz
sub
adc
xchg
sbb
add
inc
sub
push
xlat
xchg
sti
xchg
pop
and
mov
scas
mov
mov
mov
mov
aaa
outsb
lret
mov
sbb
pop
movsl
aas
lods
jecxz
xchg
mov
add
fstps
add
push
movsl
rol
int
fistl
aad
jnp
in
mov
fistl
mov
icebp
shl
xor
ret
lds
and
inc
fxch
mov
lods
xlat
and
sub
jne
cmp
xchg
jae
stc
mov
scas
xchg
cmpsb
pop
adc
jge
mov
je
add
xchg
pushf
stc
jge
iret
sbb
stos
jae
aad
xchg
add
dec
lcall
and
mov
cmp
data16
mov
push
in
repz
pop
iret
fldcw
les
lret
adc
mov
leave
in
xchg
pop
or
shrb
aaa
jecxz
insb
incb
ror
jecxz
or
sti
repz
mov
push
fcmovnb
rorl
mov
adc
enter
icebp
inc
add
inc
adc
test
sbb
cmp
and
mov
sub
rol
adc
mov
repz
xchg
je
xchg
push
fidivrs
cmovp
and
pop
lret
xchg
loope
jnp
and
add
ret
jae
loope
xchg
fildl
add
ds
bnd
in
fwait
xchg
jp
shll
xchg
mov
mov
test
mov
fninit
push
xlat
push
jl
pop
outsl
mov
mull
inc
ret
sub
mov
mov
mov
repnz
leave
sbb
push
insb
subl
addl
mov
add
add
jecxz
inc
mov
leave
add
jg
sti
xchg
stos
inc
sub
dec
adc
adc
stc
push
repz
cs
sti
xchg
ret
aam
mov
push
cmpsb
sub
mov
xlat
imul
jp
jo
sbb
or
call
or
pop
jge
sbb
adc
hlt
shlb
xlat
mov
mov
mov
sub
xchg
dec
add
movsb
xchg
xor
mov
loope
aas
mov
adc
mov
jnp
adc
mov
jge
mov
cmpsl
cltd
and
mov
sbb
mov
lcall
jo
out
and
lods
push
repz
mov
aad
fsubs
test
xlat
rorl
jle
lock
add
jecxz
dec
ret
iret
cltd
ja
aas
mov
loope
popf
mov
icebp
mov
daa
add
in
jle
leave
aad
push
sub
aad
repz
mulb
icebp
adc
out
xchg
sbb
jne
dec
and
mov
cmp
loope
subl
std
sbb
jae
adc
dec
jecxz
lods
jg
xchg
mov
daa
jle
je
xchg
adc
pop
sbb
fwait
or
mov
or
adc
incl
cld
out
inc
ljmp
mov
loope
xchg
test
fwait
mov
xchg
sbb
push
xor
jno
iret
xchg
add
jo
sbb
mov
imul
mov
add
in
jmp
jp
cmp
ja
lret
sbb
popl
cltd
fildl
push
and
ret
stc
aam
int
jp
dec
jecxz
add
scas
mov
jnp
pushl
xchg
pop
shll
add
lea
fisttpl
and
int
lahf
xchg
cmp
lcall
shll
daa
daa
jle
sub
movsl
and
adc
lds
and
je
sti
pop
xor
dec
bound
dec
cmp
ss
or
outsb
mov
aad
shll
fcmovnu
in
mov
mulb
or
lret
adcw
jns
sbb
gs
fildl
mov
movsl
insl
xlat
in
call
sahf
push
out
fwait
lock
lcall
scas
punpckhdq
outsb
mov
xor
fstl
adc
xchg
shl
dec
ja
add
sbb
mov
mov
aam
adc
std
scas
imul
movsl
jae
jecxz
add
xchg
or
fidivs
mov
sti
adc
out
lds
icebp
xchg
pop
push
sub
jno
xlat
pextrw
movsl
in
insb
rorl
mov
std
xor
mov
mov
popf
mov
in
std
mov
mov
add
push
repz
cmpsb
xchg
or
lds
repnz
popf
mov
cmc
mov
jb
stos
mov
fisttpll
lahf
in
jle
mov
lret
cltd
shrl
push
inc
and
xchg
push
add
fcmovnb
fcoms
mov
or
movsl
sbb
xlat
and
testl
dec
nop
test
rcrb
dec
pop
add
pop
mov
mov
push
popf
cmc
mov
pop
add
adc
aaa
out
jge
xchg
xchg
add
repnz
lret
mov
sbb
inc
rol
adc
sbb
inc
ja
lret
loope
andb
xor
adc
fdivp
or
xchg
imul
mov
out
dec
popf
mov
aad
and
movsl
or
mov
mov
shll
aas
repnz
xor
sbb
cmpsl
inc
or
sbb
sub
dec
or
pop
xor
xor
mov
aas
inc
or
lahf
sub
cmpsl
dec
lds
in
std
xchg
jle
stos
stc
add
or
mov
jo
xchg
mov
int3
leave
fnsave
fstl
xchg
fs
leave
je
cltd
add
xchg
xchg
jge
mov
je
mov
push
mov
and
mov
out
or
fnstsw
jmp
sbb
loope
mov
add
or
pop
xchg
fwait
jae
std
repz
mov
sbb
movsl
out
sbb
lret
lds
jmp
call
adc
imul
jg
scas
ret
mov
cltd
xchg
pop
addr16
outsb
stc
jmp
sub
push
add
aas
pushf
jnp
out
testb
cltd
lahf
sbb
mov
or
imul
mov
sub
stos
jge
ret
rcrl
outsb
mov
fisubs
add
mov
inc
mov
leave
jbe
int
xchg
add
out
mov
xchg
adc
ret
hlt
lods
mov
dec
std
adc
mov
jg
int
aas
out
ja
xchg
movsl
add
mov
shl
lock
ret
mov
popf
ss
aas
xlat
push
aas
cmp
and
aam
mov
xchg
and
adc
sbb
sbb
lods
mov
shll
aas
lods
lods
repnz
jge
cmpxchg
jecxz
inc
mov
push
adc
ss
insb
movsl
inc
lahf
shl
popf
nop
inc
stc
ficomps
out
xchg
xchg
pop
ret
adc
jnp
fldcw
pop
pushf
hlt
sbb
push
mov
clc
loop
adc
cmp
push
popa
adc
test
xlat
js
adc
jb
mov
mov
stc
outsl
movsl
mov
lods
jge
sarl
sbb
jecxz
sbb
xchg
divb
fabs
or
jbe
and
inc
ret
rep
jl
mov
mov
sub
mov
aam
fs
xchg
shl
stos
sarl
dec
jb
add
sbb
ret
pop
jbe
and
fwait
call
std
sub
mov
pop
add
push
jnp
aas
pop
or
cld
mov
ficomps
mov
inc
jb
mov
adc
gs
or
pop
or
pop
push
aad
out
mov
loope
inc
scas
xchg
dec
stos
repnz
mov
aad
mov
sbb
rcrl
push
mov
lret
push
jp
mov
or
mull
jno
pop
sbb
vmulsd
and
mov
mov
pop
in
in
adc
gs
xchg
repz
in
xchg
icebp
sub
aaa
inc
sub
sbb
out
xchg
sahf
fwait
xchg
fisubs
sub
in
mov
adc
pop
test
sar
mov
fstps
xchg
popf
insb
push
dec
pop
mov
push
push
pop
insb
js
lds
dec
adc
xor
imul
ret
lcall
adc
and
lret
cmpsl
rcll
push
mov
mov
add
mov
jmp
sti
mov
push
mov
pop
out
mov
and
fwait
mov
cmp
pop
ret
enter
sub
cmp
inc
loope
shll
mov
std
xor
mov
stc
jbe
add
cltd
clc
ror
jecxz
jo
sar
sbb
fbld
pop
outsb
pop
scas
mov
xchg
xor
gs
mov
xchg
xor
mov
lock
or
xor
pmullw
loop
mov
cmc
or
leave
ss
fsts
js
cmpsb
iret
jbe
mov
push
mov
mov
xchg
aas
push
add
aad
mov
xlat
add
mov
fnstenv
xchg
test
mov
xchg
xor
sbb
es
pop
xchg
add
inc
jne
out
lds
or
xchg
jnp
pop
xor
xchg
add
xchg
dec
fistpll
inc
xchg
pop
mov
and
repz
fldt
icebp
out
cmpsl
push
dec
push
shl
adc
repz
sbb
je
out
sbb
orl
mov
mov
std
clc
insl
mov
roll
clc
loopne
sbb
jecxz
fwait
pop
mov
pop
movsl
dec
iret
leave
shr
data16
nop
stos
cmpsb
or
pop
cmpsb
xchg
cmp
push
aad
adc
movsl
outsl
dec
or
push
jo
xrelease
mov
inc
std
xchg
mov
mov
pop
leave
scas
fbstp
jecxz
cltd
sub
pop
mov
in
lods
testb
in
setno
push
mov
ret
out
mov
jno
scas
or
repnz
into
icebp
cltd
insb
imul
sbb
imul
ret
fmull
outsb
jecxz
gs
negl
add
imul
leave
or
imul
adc
push
imul
and
mov
push
xchg
add
stos
icebp
mov
lret
mov
scas
fwait
ljmp
xor
test
push
rcll
mov
rorl
push
sbb
insl
pop
fdivr
pop
imul
popf
mov
aad
dec
or
xchg
jnp
loope
fwait
and
loop
sbb
aaa
jp
xchg
cmc
lcall
fmuls
mov
xchg
fwait
lahf
xchg
sub
ficompl
imul
out
jbe
loope
testl
loop
repnz
cmc
cld
aad
push
mov
mov
jl
push
mov
mov
out
mov
lds
sbb
sub
daa
rorl
xchg
pushf
filds
movsl
mov
int
and
xchg
nop
mov
repz
cltd
outsl
xor
and
fwait
xor
or
popf
add
aad
push
mov
or
frstor
jge
mov
iret
imul
xchg
sbb
or
cmp
mov
push
mov
mov
mov
repz
movsl
std
xchg
hlt
jns
xlat
xchg
unpckhps
int
fstl
lods
push
pop
std
pop
mov
aas
adc
xchg
popf
test
pop
cmp
adc
jg
adc
xlat
fnop
sub
icebp
mov
dec
clc
mov
mov
sub
cmp
popf
xor
xlat
shrl
sbb
ret
fcmovnu
sbb
rol
std
jbe
mov
pop
xchg
adc
or
cld
pop
pop
push
outsl
dec
fildl
or
jg
xchg
sbb
ss
lret
push
jno
mov
mov
decb
mov
jnp
jg
add
xor
push
dec
es
jno
out
jecxz
add
stos
adc
mov
in
sbb
fstps
xchg
aad
rorb
xor
scas
lods
or
sbb
inc
xchg
fldcw
jg
aad
repz
clc
sub
xchg
cltd
mov
mov
xchg
cmp
nop
test
imul
xor
and
mov
out
gs
mov
in
cli
cmpl
sti
mov
or
sbb
sub
std
mov
mov
cmp
sarl
adc
push
mov
rcrl
sub
rep
jmp
out
ret
or
sub
mov
in
pop
cmc
scas
jge
add
mov
lret
shll
out
lds
mov
lahf
jbe
cltd
adc
cld
or
cmpsl
add
repnz
icebp
imul
mov
stc
sbb
jecxz
xchg
es
push
popf
mov
xchg
es
lock
mov
push
fisttpl
ret
clc
cli
movsb
cwtl
jne
ret
int
mov
push
dec
fstps
mov
aad
nop
adc
xor
lgs
pop
cld
test
inc
subl
xchg
mov
adc
inc
nop
adc
iret
int
xchg
clc
xlat
lods
mov
add
movsl
es
adc
push
sbb
xchg
xchg
scas
and
cltd
shlb
ret
fistpl
jmp
fisubs
xorl
adc
pop
or
and
mov
bound
and
or
lcall
fsts
ffree
js
daa
xor
aad
decl
ja
mov
lret
mov
ret
lods
mov
add
mov
out
sahf
add
shrb
sti
cmpsb
mov
jl
and
jg
mov
mov
andl
or
mov
sarl
iret
sub
test
dec
setae
out
inc
pop
ret
addl
rcrb
or
ja
scas
xchg
mov
jmp
add
inc
jmp
fstpl
push
pop
jbe
aas
lods
xor
loope
iret
stos
daa
scas
sbb
push
jne
adc
mov
sub
mov
mov
sub
pop
fwait
data16
or
jno
mov
out
adc
scas
addl
jl
mov
inc
and
outsb
push
xlat
sbb
outsl
popf
add
iret
jecxz
ret
and
lret
inc
mov
rcll
push
and
pop
pushl
fldl
popl
test
mov
jnp
shll
pop
out
imul
mov
push
jno
pop
xchg
mov
push
xchg
and
xlat
jnp
ja
or
fmuls
sub
mov
mov
mov
jge
or
push
in
movsl
mov
sbb
enter
inc
je
add
repz
sarl
mov
test
jg
dec
and
lret
scas
xlat
mov
jbe
imul
ret
int
mov
hlt
push
fnstcw
jecxz
popf
dec
inc
adcl
js
or
repnz
outsb
sbb
add
pop
fstl
jge
repz
negb
leave
mov
xchg
in
mov
or
mov
add
adcb
xlat
and
pop
in
mov
fmull
adc
out
fnstsw
pop
sub
or
inc
icebp
cmp
scas
mov
repnz
mov
hlt
xor
xor
sub
ret
add
add
xchg
les
add
in
hlt
sahf
add
mov
movsb
xchg
cmpsl
push
stc
mov
outsb
addr16
add
shll
sbb
xchg
sbb
xchg
xchg
mov
lds
adc
sub
xchg
pop
dec
testb
jecxz
jmp
add
ljmp
aas
aaa
adc
test
out
sbbb
pop
mov
sbb
movsl
jne
stc
and
mov
iret
addr16
or
emms
mov
mov
movsb
outsl
icebp
adc
test
shll
cltd
mov
mov
decl
movsl
jmp
shl
loope
add
xchg
pop
jno
leave
ret
adc
xchg
scas
jge
mov
push
divl
movsl
repz
lret
fimull
imul
push
es
popf
cltd
or
adcl
mov
cmp
aaa
hlt
insl
and
int
cltd
popfw
jnp
aas
xchg
idivl
adcl
jecxz
outsl
add
call
or
in
jecxz
jl
cmp
call
icebp
cld
lods
jno
mov
mov
mov
fwait
and
outsb
push
add
aad
mov
aas
ja
xchg
xchg
out
addr16
push
cltd
push
into
rolb
cs
hlt
aad
xor
repz
sbb
add
test
xlat
and
mov
xchg
xor
add
repnz
aas
std
mov
jecxz
mov
repnz
add
mov
mov
stc
fstl
push
out
sub
shr
adc
jo
icebp
pop
cmpsb
lret
out
es
or
loopne
add
pop
sahf
int
dec
aad
sti
mov
dec
jg
fldcw
mov
mov
mov
pop
stc
xchg
pop
pop
orl
icebp
or
mov
cwtl
mov
negl
cld
shrl
mov
cmp
cltd
ret
mov
notl
xchg
add
xchg
cmp
inc
jo
or
jne
mov
leave
fyl2x
pushw
enter
jle
testb
lds
in
leave
inc
dec
sbb
loope
je
sysret
push
lea
dec
jl
add
mov
xchg
sbb
mov
xchg
dec
add
js
mov
xchg
push
ror
lods
std
inc
mov
lock
sub
inc
push
pop
and
out
or
xchg
mov
sbb
popa
mov
jmp
xor
mov
pop
cmpb
in
mov
sub
adc
and
test
les
out
data16
ja
pop
mov
xlat
mov
add
xchg
or
movsl
in
sub
pop
cmp
repz
xchg
and
cmp
cwtl
fcmovnu
in
pop
cmpsb
or
or
cltd
sbb
pop
jge
xlat
aad
adc
clc
pop
inc
das
dec
and
jbe
sbb
stc
push
jns
sbb
outsl
inc
fisttpll
and
or
in
xchg
xor
dec
cltd
scas
leave
jle
pop
xchg
leave
imul
jecxz
jecxz
mov
mov
adc
rcll
popf
aad
sbb
fidivrl
mov
mulb
mov
xchg
shll
mov
mov
add
cmpsb
or
aas
or
rorb
ljmp
int
jg
mov
aad
rcr
insl
mov
aas
or
orl
stc
clc
or
cmc
and
or
cmpsb
fcmovnu
divl
push
mov
xchg
jbe
dec
mov
scas
jle
and
bnd
xchg
loope
push
mov
pop
dec
lret
dec
int
jnp
icebp
sti
idivl
pop
repz
daa
fnstenv
adc
mov
or
jge
divl
hlt
lret
icebp
fsin
lds
or
adc
push
mov
cmpsl
aaa
fwait
leave
cmpsb
dec
in
fmuls
in
sahf
inc
jg
adc
mov
js
les
mov
sbb
aad
jg
mov
pop
aam
movsl
xor
sub
imul
adc
lods
outsl
sbb
jb
sahf
rcrl
movsl
das
pop
add
cmc
repnz
mov
movsb
add
inc
xchg
sbb
add
js
xchg
iret
mov
adc
sub
sbb
repz
xlat
mov
xchg
repnz
add
fstpl
adc
mov
mov
add
inc
cmpsb
and
sbb
nop
movsl
mov
add
std
cmp
mov
cmp
ret
cltd
or
adc
imul
cmc
addr16
pop
ret
clc
test
jae
xchg
repz
sbb
test
rcl
cmpsb
std
test
mov
insl
mov
ret
add
aas
lock
cmp
jmp
ljmp
adc
adc
out
subl
adc
in
test
mov
mov
rclb
mov
mov
mov
shr
adc
mov
sbb
pop
imull
movsb
cmpsl
fwait
es
in
mov
fchs
cmpsb
loop
arpl
mov
dec
adc
mull
repz
loope
jl
lret
ret
mov
aas
lcall
into
push
popf
in
jl
adc
xchg
sti
jnp
add
dec
add
xchg
call
pop
rclb
mov
adc
iret
popf
adc
or
shll
call
cmpsb
out
fistl
aas
xchg
push
fistl
ret
adc
rorl
add
xchg
push
inc
jp
add
add
add
cmp
fwait
pop
ret
and
fwait
sbb
mov
fdivs
mov
and
fnstcw
das
pop
cltd
aad
push
jno
mov
push
repnz
popf
mov
outsb
mov
xor
fnstcw
or
xchg
aas
pop
in
int
adc
xlat
int
fbld
pop
xchg
mov
adcb
jg
jecxz
pop
mov
jp
dec
cmp
scas
and
sbb
pop
popf
xchg
mov
add
ret
testb
or
aas
and
scas
rcll
fs
addr16
lret
mov
mov
aas
je
xchg
mov
outsb
mov
out
int
jecxz
add
add
or
jo
in
push
inc
popf
sub
sbb
xor
test
mov
stc
xor
and
jo
adc
cmp
por
sub
fstpt
pop
inc
add
mov
in
std
pop
jbe
aad
pop
cwtl
loop
push
lock
loope
ss
mov
andl
jle
mov
std
lahf
cs
lods
mov
hlt
mov
in
rcr
pushf
sbb
cmpl
inc
add
in
rol
mov
lds
adc
aam
inc
xlat
jecxz
dec
scas
rcrb
data16
sbb
int
xchg
mov
repz
ja
mov
dec
insb
scas
xchg
addr16
stos
xchg
jno
mov
repnz
int
in
or
adc
ret
xchg
lds
sub
lret
imul
fwait
adc
sbb
aad
xchg
bswap
sbb
or
add
loope
std
ljmp
push
notl
sbb
movsl
scas
cmpsb
xchg
push
lahf
push
ljmp
inc
repz
mov
je
xlat
adc
mov
aas
cmp
jnp
scas
mov
outsb
popf
lret
scas
fwait
dec
fnstcw
inc
cmp
sbb
aad
lds
sbb
mov
cmpsb
pop
push
movsl
sub
mov
push
rep
adc
imul
popf
push
pop
out
xchg
lods
or
add
mov
pop
mov
and
xchg
mov
cmpsb
iret
xlat
mov
repz
adc
aas
jo
and
mov
fwait
mov
mov
xlat
pop
or
xchg
clc
test
xchg
xor
mov
push
mov
cmc
loop
insl
and
sahf
ja
mov
sahf
clc
cmp
pop
cs
icebp
aad
imul
mov
fstl
or
add
mov
leave
dec
int
push
jne
or
and
scas
cmc
jnp
mov
repz
mov
ret
fldl
sub
dec
aas
sbb
cmp
pop
notb
mov
jb
mov
movsl
pop
pop
movsl
out
lret
into
push
cs
xor
gs
out
pusha
sbbb
std
mov
out
cmp
adc
imul
aad
xchg
add
subb
sti
lods
cwtl
out
cs
pop
pop
mov
pop
xlat
std
dec
xchg
add
mov
mov
mov
or
sti
mov
add
sub
std
xchg
xlat
add
xor
sti
enter
cwtl
mov
sbbb
aam
push
pop
adc
repz
lahf
sub
stc
shl
gs
xchg
dec
ret
add
in
orb
popf
or
pop
and
xor
or
xchg
sub
mov
imul
std
mov
pop
xchg
mov
fcomi
gs
mov
lods
and
in
xchg
popf
mov
repz
adc
js
les
cltd
sar
icebp
mov
sbb
push
xchg
adc
or
imul
adc
jnp
loope
fnstsw
push
stc
dec
and
js
popf
adc
outsb
and
mov
jo
mov
int3
loope
cmc
sbb
add
out
xlat
imul
mov
mov
mov
pop
fnstsw
and
aas
ret
push
cwtl
cmp
out
adc
pop
movsl
sbb
clc
shrl
adc
sahf
xchg
or
sti
mov
fnsave
sub
mov
jle
sar
push
cmpsb
add
shrl
pminub
std
addr16
or
add
mov
sahf
movsl
jb
repz
lods
sub
test
les
cmpsl
xchg
add
stos
and
add
leave
shl
or
cmpsl
popf
xchg
mov
lds
xlat
fcmovnbe
test
sti
and
push
xor
repz
adc
or
imul
add
psllq
pop
loope
xor
ret
sbb
ljmp
out
add
xchg
xchg
inc
mov
dec
repz
inc
aas
movsl
jl
ret
idivb
xchg
shll
mov
xchg
xlat
xchg
rol
dec
mov
fidivrs
mov
es
adc
int
xchg
mov
push
add
icebp
hlt
push
mov
pop
xchg
or
and
pop
xchg
sbb
sbb
mov
es
mov
fwait
int3
into
aad
push
mov
inc
icebp
jecxz
lds
fstp
sbb
fcomps
insl
stc
or
pop
jle
mov
add
mov
leave
mov
dec
add
movsl
mov
aas
jl
mov
adc
iret
lcall
sbb
fs
mov
xchg
xchg
or
sbb
mov
xchg
not
scas
repnz
in
lea
fisubrs
cltd
cmpb
addl
stos
xchg
xchg
pop
scas
jecxz
gs
xor
incl
inc
xchg
rol
push
xchg
adc
mov
pop
fwait
rol
data16
inc
stc
scas
push
mov
testl
lret
es
dec
in
mov
popa
leave
mov
or
push
lahf
jle
pop
jbe
sbb
iret
or
dec
mov
inc
fsubrl
outsl
into
mov
push
iret
xchg
mov
add
xor
xor
into
mov
sub
pop
sti
repz
mov
cmpsb
adc
adc
imul
jno
std
pop
or
rcrb
mov
mov
mov
daa
jae
fwait
xchg
mov
adc
xchg
add
pop
push
push
sbbl
inc
in
push
xchg
inc
push
lods
push
inc
xchg
add
pop
inc
dec
mov
lret
es
and
cmp
inc
lods
xchg
fcmovnb
icebp
aas
add
add
mov
inc
inc
or
popl
jmp
cmpsb
pop
push
push
mov
fs
js
je
sarl
sbb
imul
mov
mov
scas
xchg
mov
in
cltd
scas
sub
jne
mov
out
stc
inc
repz
retw
xchg
mov
pusha
into
scas
mov
popf
mov
shrl
mov
push
mov
pushf
js
aad
cltd
imul
mov
cmpsb
leave
push
push
lods
adc
inc
emms
or
mov
pop
rcrl
jnp
psrlq
into
cmp
cltd
imul
pop
dec
dec
inc
shlb
mov
ja
sbb
shll
adcl
xor
and
fdivrs
xchg
mov
dec
scas
movl
icebp
xlat
fxam
rcl
pop
outsb
popf
mov
mov
dec
mov
out
lods
movntq
push
cmp
in
sbb
pop
repz
sub
call
lret
insl
hlt
clc
ret
fld
push
mov
leave
jp
mov
pop
adc
enter
xlat
testb
cmp
or
in
or
in
mov
mov
aam
jbe
repz
add
dec
out
in
inc
ljmp
fwait
iret
mov
xchg
mov
dec
pop
je
adc
fwait
pop
dec
mull
dec
mov
fwait
xchg
mov
adc
jo
or
add
aad
cmp
cwtl
mov
je
add
add
dec
xchg
outsl
sbb
icebp
or
mov
addb
fcoml
not
lds
orb
pop
mov
scas
jecxz
mov
adc
int
jne
mov
sbb
and
and
xchg
std
ljmp
negb
ficoml
inc
adc
mov
leave
pop
and
mov
mov
sbb
sahf
add
shr
push
mov
ret
sub
neg
pop
xchg
andb
ret
scas
cltd
sbb
mov
scas
lods
dec
psraw
sbb
cmpsb
jmp
cli
xchg
xchg
xchg
and
pushl
fucomp
ret
sbb
int3
in
lods
negl
cmpsb
jno
movsl
repz
sub
stc
mov
mov
adc
inc
inc
sub
lds
std
adc
mov
mov
xor
shl
and
or
dec
mov
or
popa
test
aad
fcmovb
fcmovnbe
ret
jmp
sbbl
ja
mov
xor
push
mov
mov
shll
fwait
mov
shrl
jne
mov
jns
in
cli
divl
and
aad
iret
jp
in
test
push
push
adc
xchg
adc
cmp
jns
iret
mov
push
scas
pop
fidivl
sbb
mov
test
xlat
sbb
std
jmp
out
add
xchg
xlat
or
aad
shr
in
addr16
and
mov
negl
mov
rcr
mov
fwait
inc
xchg
sub
adc
cmp
adc
push
rorl
sbb
jbe,pt
lds
adc
int
outsb
xlat
mov
lds
les
add
imul
sar
jo
fwait
dec
xchg
loope
jae
out
and
adc
and
negl
scas
lcall
or
mov
in
lret
xchg
ja
int
loope
loop
cs
cmp
cmp
scas
mov
fiaddl
pop
pop
sti
xchg
xchg
mov
mov
subl
jno
or
fdiv
push
hlt
popa
mov
sbb
pavgw
test
or
popf
xchg
ror
incb
push
mov
mov
jne
sbb
mov
loope
or
mov
add
dec
aad
adc
mov
lret
push
orl
dec
jno
xchg
les
rcl
cs
and
sbb
jecxz
movl
adc
ret
leave
push
lcall
ds
jne
shrl
popl
jg
popf
jbe
mov
call
mov
cmp
or
repz
std
and
aad
testl
pop
jns
push
jecxz
jno
xchg
xchg
aas
mov
fidivrl
shr
mov
dec
push
scas
mov
inc
pop
movsl
outsl
ret
xlat
or
xchg
aas
mov
sti
out
fninit
nop
or
push
or
rorl
es
push
dec
mov
scas
mov
mov
mov
shl
stc
inc
repnz
sbb
jecxz
push
or
fwait
xor
sbb
rol
clc
int
adc
popa
iret
xchg
xorl
cmp
jl
mov
mov
repz
cmp
fmull
mov
mov
mov
loope
test
adc
stos
ja
mov
xchg
adc
push
loope
pop
lock
xor
jmp
cmp
ret
loope
adc
out
stc
xchg
or
jge
add
sbb
jnp
push
lock
jno
or
jno
mov
mov
dec
idivb
push
aas
sbb
and
pop
xchg
icebp
push
add
or
inc
dec
push
aad
outsl
out
popf
xor
xor
xor
mov
idivl
pop
mov
and
push
scas
fdivrs
pushf
mov
movsb
or
add
add
pop
xor
negl
mov
or
popf
push
xchg
xor
adc
sarl
jl
xlat
mov
pop
ret
lcall
je
sbb
scas
xor
sbb
iret
mov
push
repnz
mov
lcall
ja
mov
ret
movsl
insb
jno
in
repz
ljmp
add
and
cmp
std
call
scas
loope
pop
sti
push
xchg
mov
dec
lcall
jne
mull
leave
std
push
fsub
je
pop
mov
std
mov
mov
cmp
out
out
cmpsb
fstl
dec
or
push
mov
out
enter
sti
jnp
or
fyl2xp1
pop
push
mov
mov
dec
jnp
mov
out
mull
mov
cmp
jne
shll
push
xchg
mov
sub
repz
cmpsb
into
xchg
shl
lds
cmpsl
leave
dec
lret
sbb
scas
and
xchg
test
loope
leave
movsl
jno
aas
repz
mov
iret
mov
mov
cmpb
fs
and
dec
dec
push
dec
push
add
xor
aad
notb
ja
mov
ss
xchg
inc
mov
cltd
scas
push
nopl
iret
lret
mov
andl
test
stc
xlat
mov
sub
cmp
mov
loope
xchg
stc
mov
or
jge
adc
call
or
and
add
or
ret
xchg
int
xor
or
mov
shll
loop
push
push
std
sti
fnstenv
mov
ja
scas
ffree
popa
mov
push
pop
ja
mov
scas
add
inc
jb
scas
and
popf
aas
and
rcl
sub
or
xchg
fsts
dec
or
mov
notl
cmpb
pop
aad
bound
adc
xor
add
out
ja
popf
rcrl
sbb
or
sub
dec
shll
cmp
mov
lret
xor
push
mov
cmc
ds
xchg
or
mulb
popf
aad
scas
scas
or
lds
xor
enter
sbb
mov
sti
mov
movsl
push
sub
or
jecxz
add
jno
xchg
mov
and
jl
stos
jne
movsl
int
shll
test
xchg
inc
add
push
je
scas
mov
add
pop
mov
mov
movsl
add
push
mov
sub
adc
cld
fstpt
or
mov
imulb
mov
jb
xchg
fwait
mov
lock
sub
xchg
pop
aad
sti
adc
pmulhw
sub
repnz
add
and
lahf
push
mov
dec
mov
call
push
mov
mov
or
and
sub
int
jnp
jne
and
cmp
xor
leave
aad
push
mov
sub
push
sbb
outsl
cmpsl
pmulhw
adc
cmp
mov
sbb
dec
leave
hlt
add
push
hlt
aaa
lret
adc
add
sub
out
pop
cmp
xchg
jae
mov
sahf
repz
push
in
fnsave
test
sbbb
clc
cmp
jns
scas
lret
jp
xlat
push
mov
jge
repz
xchg
sub
jge
aas
or
fs
test
movl
shll
pop
icebp
xchg
leave
ss
jg
ret
int
mov
insl
and
rcl
push
pop
adc
adc
out
mov
and
adc
sbb
fsts
or
ja
aas
out
dec
repz
xchg
les
or
cltd
mov
mov
mov
mov
idivb
add
ja
shll
push
jnp
xchg
std
fwait
icebp
mov
repz
mov
setge
and
mov
xor
sbb
rcrl
cltd
jo
ret
mov
rcpps
and
jecxz
iret
cmpb
stc
pop
jbe
add
wrmsr
add
and
pop
push
mov
shll
or
sbb
mov
dec
pop
pop
jnp
loopne
stc
stc
pop
mov
iret
xorl
mov
jns
mov
mov
xorl
jp
aas
inc
loopne
test
fpatan
data16
jmp
int
stc
xchg
cld
pop
je
xchg
or
aaa
lret
mov
sub
push
jnp
in
dec
adc
dec
mov
xchg
aam
xchg
mov
jbe,pt
rcr
rcll
das
xchg
adc
scas
xor
or
jg
cwtl
jle
mov
in
or
scas
jmp
in
inc
adc
stc
nop
pop
pop
inc
loope
add
sbb
lret
mov
xlat
mov
xchg
icebp
cmp
repz
out
scas
insl
sbb
test
movsl
and
loop
shlb
imul
cs
jl
xchg
add
movsl
xchg
lret
or
and
cltd
mov
scas
sbb
icebp
jg
movsl
stos
hlt
popa
or
in
sti
shll
jecxz
push
imul
jns
jecxz
sub
xlat
std
sti
in
jle
stos
hlt
in
loope
cmp
and
mov
dec
mov
adc
mov
imul
mov
and
pop
sub
dec
jnp
xchg
inc
mov
shrl
outsl
inc
jg
ret
sbb
roll
loop
mov
adc
nop
loope
mull
xchg
mov
or
sarl
jecxz
icebp
dec
hlt
sbb
insw
leavew
xchg
add
cs
sbb
xchg
mov
adc
xchg
xchg
add
cmp
aas
or
ret
sbb
adc
movhps
cmp
je
ret
icebp
mov
xchg
ret
cmp
mov
inc
fstl
rol
in
mov
cmp
repz
lret
out
add
jl
mov
sbb
es
sbb
mov
test
fisttpl
mov
mov
scas
cmp
addr16
and
lds
mov
not
sbb
and
dec
hlt
xor
fldenv
fnsave
jg
or
xchg
mov
cltd
jecxz
pop
hlt
xchg
int
loope
mov
adc
ja
hlt
roll
icebp
stos
mov
aad
cs
movsl
nop
sub
inc
jo
adc
mov
scas
jecxz
dec
fiaddl
popf
xchg
andl
cmp
roll
fldl
ljmp
shl
xchg
hlt
shll
repz
sub
or
out
mov
push
push
add
jecxz
xchg
in
stos
fnstenv
out
cmp
jmp
jae
divl
push
mov
add
xor
fildl
imul
sti
push
add
mov
std
dec
iret
and
idivl
pop
pop
movsb
sarl
adc
jns
lds
mov
jno
xchg
or
repnz
fstpt
xchg
and
inc
jbe
stos
movsl
pop
or
fstpl
sub
in
fists
or
in
jno
rcll
div
idivl
mov
scas
fxch
orl
or
icebp
push
adc
aad
dec
xor
jle
lock
jb
cltd
mov
test
je
sti
orl
cmc
test
popw
lret
mov
arpl
gs
ja
or
cmp
sbb
pop
cmc
add
lock
test
cld
lret
outsl
stos
sbb
test
xchg
xlat
adc
repz
cmpsl
xchg
add
jg
or
loopne
adc
ss
xlat
xchg
popf
jno
add
loope
lret
mov
or
in
cmp
leave
mov
dec
cmp
or
sbb
jg
in
dec
aaa
rcll
dec
iret
dec
xchg
pop
cmp
inc
xor
outsb
pop
sarb
fnstcw
adc
testl
outsb
jp
call
xchg
pop
fs
xchg
xchg
flds
mov
lret
lahf
push
or
jns
rcll
mov
mov
inc
popf
mov
in
or
jle
shll
adc
mov
out
les
fcoml
and
pop
mov
jecxz
rcrl
iret
pop
shll
sbb
add
int3
jne
adc
inc
ret
ljmp
pop
movsl
mov
in
scas
aas
mov
xchg
rcll
imul
mov
cmc
movsb
adc
cmp
add
adc
shlb
jmp
jp
sub
out
jbe
jecxz
pop
add
adc
stc
mov
jecxz
fstl
fistl
scas
push
add
loope
inc
mov
cmc
scas
sbb
in
or
and
aam
xor
add
mul
xchg
movsl
loope
mov
jnp
clc
add
push
pop
je
fwait
adc
mov
cmpsb
inc
jg
loope
lds
call
into
lret
push
je
xchg
daa
inc
daa
xlat
fcmovnb
popf
sub
popf
jno
out
sbb
mov
mov
xchg
jne
push
leave
add
scas
into
pop
inc
push
jmp
xchg
xchg
mov
sti
xor
ret
fstps
sbb
push
sub
and
inc
mov
mov
pop
in
sub
xor
fstp
lahf
mov
in
add
mov
or
fisubrl
add
push
outsl
iret
mov
or
push
inc
cmp
add
pop
out
lock
hlt
mov
xor
lret
shll
leave
add
es
mov
aad
mov
pop
and
jae
mov
scas
int3
push
popl
orl
sbb
and
in
test
xchg
jbe
jae
dec
inc
lret
and
and
sub
repz
adc
jmp
lods
jbe
shl
shr
popf
cmpsl
inc
fstp
iret
inc
andb
inc
std
add
fwait
add
scas
mov
jle
jg
sbb
mov
dec
push
and
sti
inc
divl
pop
std
or
test
movl
sub
mov
outsb
jbe
adc
xchg
xchg
fwait
push
fists
xor
mov
xchg
aam
cmpsb
adc
lds
pusha
fistl
mov
pop
xlat
std
int
mov
mov
add
mov
push
sub
jg
or
andl
divl
in
inc
add
cltd
in
inc
sti
sarl
adc
roll
outsb
test
stos
or
stc
push
in
sub
dec
mov
jnp
sbb
js
in
jp
lcall
std
pavgw
mov
add
addr16
sbb
loope
sbb
data16
stc
adc
push
add
fwait
push
nop
dec
std
cltd
les
andl
jns
adc
push
cmc
sub
repnz
mov
not
add
outsb
aas
out
jge
xlat
cwtl
jg
jns
pop
ljmp
mov
mov
pop
push
push
dec
loope
adc
std
mov
out
out
push
repz
negl
aas
testb
popf
sbb
jge
repz
mov
and
es
std
cmp
or
call
test
data16
mov
push
xchg
or
aaa
or
repnz
mov
stos
mov
mov
xchg
les
fwait
xchg
pop
or
mov
leave
xchg
and
sub
enter
shrl
add
pop
cmpsb
jle
mov
mov
test
jp
mov
mov
inc
mov
xchg
dec
jmp
and
int3
cltd
daa
fsubrs
push
jbe
jmp
jb
std
sub
sahf
push
aad
rcll
cld
xchg
pop
ja
mov
jg
fcmovu
insl
inc
add
cltd
xchg
mov
mov
adc
es
adc
mov
scas
dec
movswl
cmp
ds
hlt
loopew
xchg
nop
xchg
data16
xchg
cmp
frstpm(287
repz
mov
fs
xchg
sbb
or
sbb
imul
insl
fwait
mov
add
dec
aad
sbb
std
adc
dec
subb
xchg
aas
enter
mov
aas
xchg
stc
xor
icebp
add
loope
or
push
mov
sub
rcll
push
mov
and
adc
out
xchg
mov
call
or
mov
push
outsl
push
scas
test
pop
mov
movsl
sbb
repz
data16
add
imul
pop
dec
movsl
cltd
push
and
icebp
xchg
aas
cli
in
xor
lds
xchg
dec
xlat
int
nop
xor
insb
push
or
iret
mov
fidivrl
aas
ret
or
mov
mov
dec
xchg
pop
sbb
adc
xlat
jle
jb
adc
sbb
stc
xchg
movnti
loope
cld
cli
fidivl
shl
xor
sbbl
adc
and
mov
shrb
pop
mov
mov
lds
xor
cmc
jb
scas
sub
sub
or
jl
cltd
movsl
ret
popl
inc
loope
cmpsb
lea
sbb
test
mov
fldenv
mov
or
mov
adc
inc
iret
subb
outsb
icebp
push
cmp
hlt
jno
mov
mov
popf
add
je
mov
dec
mov
mov
ret
mov
movsl
sbb
add
cmp
mov
pop
aad
sbb
and
dec
outsb
popa
daa
test
fdivl
jmp
push
cmp
xor
movsl
adc
adc
cmpsb
inc
stos
push
call
add
sub
or
ds
jae
repz
movsl
xor
sbb
ss
inc
in
and
addr16
ds
stos
pop
inc
into
scas
cmc
cli
pop
mov
add
pcmpeqb
and
in
loopne
jno
mov
jo
mov
cmpsb
add
mov
push
jb
xor
mov
inc
mov
lret
adc
sar
jecxz
sub
xlat
pop
in
cmpsl
adc
mulb
mov
or
inc
jae
sbb
push
add
cmpsl
push
cmp
pop
divb
sbb
int3
lods
jg
sti
adc
stos
scas
push
in
inc
hlt
mov
and
jne
fistl
repz
testl
or
dec
loope
sub
jb
in
and
jp
add
in
pop
xchg
es
jb
subb
in
fwait
jle
jg
iret
test
jnp
pop
mov
shll
and
sti
push
movsl
fwait
icebp
dec
lock
std
fs
add
leave
mov
movsl
mov
mov
push
popf
or
int3
cmc
adcl
inc
mov
ljmp
add
mov
js
xchg
repnz
jae
inc
aas
aad
add
addr16
cs
mov
xor
inc
scas
dec
paddusb
mov
sar
clc
xchg
push
or
lret
mov
std
add
jne
add
leave
sub
mov
add
fldenv
shr
push
icebp
adcl
movsl
stos
xor
add
or
push
mov
pop
add
mov
add
mov
xchg
xchg
xlat
rclb
mov
fcomip
xor
xor
out
adc
fcmovnb
movsb
pop
rcrl
jno
add
pop
out
inc
push
lret
movsl
aad
rolb
andl
fld
dec
xchg
mov
adcb
std
loope
jo
xchg
push
xchg
xor
sbb
xor
movsb
fnstcw
jp
out
aad
sbb
stos
jns
lret
out
mov
daa
xlat
mov
notl
jbe
icebp
sarl
mov
hlt
adc
sbb
push
push
insb
mov
mov
cmp
adc
add
testb
mov
out
into
imul
lock
xchg
scas
into
movsl
sub
pop
and
shrl
sbb
pop
push
sti
and
iret
data16
notl
imul
stc
cmp
xchg
rorl
or
mov
push
subl
popa
and
icebp
shrl
int
inc
popf
xchg
and
jae
sar
jecxz
cmp
push
in
in
jg
mov
mov
mov
subl
stos
xor
outsb
add
insl
out
and
aas
int3
adc
insb
add
mov
sbb
fwait
xor
inc
cmpsb
test
andl
push
pop
shll
std
inc
jns
sbb
xor
mov
outsl
fwait
scas
sbb
xchg
outsb
jbe
inc
or
dec
cltd
mov
dec
fwait
int3
and
popf
addl
mov
jb
aad
test
mov
leave
stc
or
pop
and
push
push
sbb
aad
clc
rcrl
fwait
js
sub
fsts
notl
push
mov
insl
sbb
gs
jae
nop
test
call
xchg
stos
inc
jecxz
mov
or
test
pop
out
imul
mov
popa
int3
imul
adc
adc
mov
sbbl
popf
mov
stos
hlt
and
sub
mov
jg
cltd
popf
xchg
adc
addl
mov
outsb
sti
testl
je
sbb
mov
loop
mov
icebp
fldlg2
mov
divl
adc
pop
push
jmp
insb
ljmp
adc
sbb
xchg
shr
lea
fstl
fwait
outsl
and
loope
xchg
xor
xor
xor
scas
movsl
adc
dec
into
fldcw
subb
lds
pop
jbe
sbb
cmpsb
stc
jno
test
in
mov
scas
mov
outsb
inc
jle
hlt
fidivl
and
fs
loope
mov
mov
pop
repz
ljmp
add
jle
out
cs
jecxz
insl
xchg
pop
pop
std
dec
scas
outsl
or
mov
mov
add
jg
jmp
and
sub
roll
dec
icebp
movsl
ret
fdiv
and
pop
pop
ja
movsl
fcoml
insl
xchg
fisubrl
cmc
int3
mov
popl
add
mov
xchg
jecxz
add
adc
mov
outsb
xchg
repnz
adc
mov
add
sub
adc
mov
jae
and
pop
mov
aam
sahf
or
sbb
mov
adc
movsl
insl
ja
js
pop
fstl
jecxz
stc
cmc
and
insb
icebp
mov
iret
lret
cmp
or
sbb
xchg
jmp
sbb
loopne
repnz
add
stos
int
adc
sub
xchg
outsl
rcll
mov
clc
xchg
jle
je
lds
cli
repnz
add
outsb
hlt
xchg
cmp
cmp
movsl
adc
push
iret
fcomi
cmp
jmp
push
mov
mov
adc
test
push
mov
push
lret
inc
rcl
cmp
dec
sbb
or
addr16
pop
ret
setle
add
jne
fwait
rcrl
adc
repz
push
push
inc
jl
jo
adc
fcmovnb
imul
mov
mov
mov
shll
mov
aad
les
fnsave
std
repz
sti
emms
or
iret
rcrl
js
xchg
adc
stc
push
lds
xchg
mov
loopne
mov
cmc
fcompp
add
into
inc
adc
xor
bound
jecxz
movl
in
movsl
pushf
es
mov
lds
or
adc
ret
leave
movsl
or
std
xchg
aad
in
or
xchg
or
popa
sbb
mov
ret
hlt
xchg
adc
in
addr16
movsl
xchg
sbb
or
inc
ja
iret
shlb
mov
sub
enterw
incl
jp
in
push
mov
popa
dec
mov
ss
imul
sbb
popf
loope
xor
fwait
in
jle
or
data16
or
add
and
mov
es
in
sahf
jg
rcrl
fxch
or
mov
ror
iret
in
jecxz
cmc
dec
int
ret
adc
adc
sub
test
mov
adc
sti
or
sub
scas
xchg
das
jbe
or
daa
out
aad
mov
fst
aad
push
or
dec
mov
cmpsb
add
dec
ss
mov
shll
mull
lock
dec
iret
dec
dec
cmp
mov
jge
pushl
xchg
ret
loope
add
aaa
int3
cmpsl
xor
mov
sbb
int
pusha
stc
or
add
ret
xchg
lret
icebp
repz
xchg
shll
bound
xchg
adc
xchg
pop
mov
out
lods
aas
mov
mov
dec
jg
aad
add
adc
mov
push
ret
mov
popf
push
or
xor
mov
shrb
icebp
aad
or
mov
lret
scas
rcrl
dec
mov
icebp
mov
aad
sbb
jae
rorl
scas
xlat
stc
test
mov
mov
out
aad
fs
push
jnp
scas
mov
lret
mov
testl
jns
add
fildl
int
ret
mov
pop
dec
psubb
pop
mov
mov
pop
or
setne
mov
or
adc
and
mov
outsl
push
in
pop
movnti
xor
xorb
adc
aas
out
lret
xorb
adc
orl
jb
xchg
mov
and
clc
scas
push
sub
leave
inc
mov
movsl
int3
stc
test
loopne
jbe
sbb
xor
jle
and
rol
mov
rolb
lock
ror
and
xorl
sahf
jno
xchg
leave
adc
repnz
mov
loope
aas
jp
inc
push
daa
sbb
cld
or
sti
stc
icebp
fmuls
fdivs
xchg
xchg
xor
sahf
out
add
push
addr16
mov
repnz
adc
push
iret
jae
xchg
aas
or
add
sti
in
movsb
sub
xlat
movsl
cmc
mov
repz
add
js
ret
cmp
sbb
xor
mov
xchg
inc
inc
imull
jno
adc
aas
pushl
jecxz
sahf
in
pop
or
xor
in
push
aad
sti
sub
sbb
stos
inc
leave
mov
push
ds
sbb
adc
arpl
mov
mov
cs
mov
lods
popf
pop
scas
jno
ret
push
loope
sbb
add
jp
imull
int
xchg
dec
cld
sahf
push
or
test
mull
outsb
add
cs
and
push
xchg
xchg
mov
jge
leave
lock
sbb
lcall
pop
dec
aad
cli
add
mov
xchg
adc
jg
cltd
mov
mov
roll
add
ds
icebp
and
sbb
out
hlt
ficoms
push
jge
rcll
dec
cli
loope
push
test
rorl
add
ja
add
xchg
add
dec
aas
xchg
jecxz
stc
jge
fwait
leave
js
icebp
mov
jb
add
mov
mov
xchg
mov
pop
sarb
mov
repz
popf
mov
xchg
mov
jbe
xlat
jecxz
mov
fdivrp
call
loope
and
js
lahf
sbbl
jle
loope
int
mov
data16
loope
mov
sbb
cmp
stos
cltd
daa
in
mov
out
roll
xor
mov
and
mov
sbb
out
xor
sbb
xchg
stos
repz
adc
add
and
cmc
and
mov
iret
rep
data16
data16
and
into
cmp
dec
dec
jns
fninit
jl
xchg
inc
imul
fsts
or
mov
and
mov
lret
mov
shll
mov
jle
scas
lock
pop
and
repz
repz
jbe
out
push
push
lea
repnz
rorl
jbe
fwait
bswap
loope
adc
leave
jb
xchg
mov
in
repnz
jno
icebp
mov
pop
xchg
sbb
pop
es
andl
jne
mov
jne
mov
mov
mov
add
and
jno
xor
xchg
adc
stc
mov
xchg
xchg
aad
xchg
xchg
sbb
fwait
add
jno
stc
or
adc
icebp
lea
push
mov
out
rcr
int
stc
mov
cmc
dec
and
iret
mov
jmp
pop
mov
jg
lds
int
or
xchg
jae
fwait
mov
insl
sti
inc
xchg
scas
pusha
sti
sub
pop
sti
add
hlt
mov
cmp
iret
outsb
push
adc
mov
xlat
adc
leave
mov
jl
inc
jle
stos
incb
mov
dec
push
stos
cmp
orl
dec
subb
adc
notl
push
pop
inc
mov
add
idivl
mov
push
lahf
cmpsl
pop
sbb
lea
pop
lods
cmp
mov
sahf
jbe
scas
std
ret
rcl
repnz
xchg
repnz
mov
xlat
shlb
dec
cmp
cmpl
mov
stc
inc
cwtl
loopne
imul
fnstenv
sbb
sbb
dec
or
outsl
dec
aad
and
xchg
inc
xor
adc
dec
jb
ja
inc
cmp
stc
sbb
lds
jl
mov
popf
in
mov
mov
stos
mov
sbb
sti
or
mov
jp
cltd
xor
insl
int
sub
mov
add
push
andl
sub
mov
dec
out
jg
jecxz
xchg
je
sti
and
iret
mov
adc
outsl
push
aad
bound
lods
and
sub
add
or
icebp
rcl
cmc
or
mov
cmpsb
sub
mov
setae
sarl
sbb
add
popf
xchg
sbb
outsb
dec
add
shlb
int3
and
daa
sti
je
ret
add
int
sti
pop
jnp
add
fstps
insl
mov
xchg
rol
cmpsl
js
or
adc
lods
fwait
lcall
outsb
adc
xchg
mov
hlt
int
adc
lock
add
xchg
xor
clc
faddl
xor
xchg
inc
or
lds
mov
jecxz
sbbl
xchg
pop
sub
ljmp
xlat
sti
cltd
sahf
xchg
inc
ret
mov
pushl
add
mov
idiv
push
stos
stc
inc
rcrl
or
ret
popf
in
add
in
and
add
outsb
js
mov
movsl
mov
sti
mov
add
and
and
cmpsl
adcl
std
rcrl
loope
inc
sub
or
mov
fst
sar
jle
mov
xchg
in
adc
mov
mov
mov
fwait
testl
inc
addr16
pop
int
jns
mov
sbb
mov
push
add
sbb
icebp
mov
xlat
inc
out
or
pop
ss
inc
in
icebp
cmp
xchg
sbb
ret
add
repz
loope
popa
push
int
xchg
push
cmp
mov
sbb
jg
fwait
jb
stc
repz
lret
push
adc
movsb
mov
add
mov
inc
adc
jbe
cltd
fisttps
pop
and
jae
jecxz
aad
sbb
rcr
subl
aam
mov
pop
xlat
rcrl
dec
popf
hlt
shl
adc
lahf
adc
enter
adc
pop
cmpsb
iret
jecxz
lret
arpl
fwait
or
fidivl
dec
add
mov
rcr
adc
and
push
loope
sti
outsb
cltd
sbb
pop
adc
jno
testb
sti
ret
xor
sbb
or
mov
lret
std
es
mov
in
mov
mov
leave
or
inc
fisttpl
cmc
js
pop
cmpsb
push
cmp
adc
lea
imul
xchg
mov
xchg
ret
push
fpatan
mov
sti
lds
mov
inc
xchg
and
adc
inc
jmp
mov
jecxz
into
cmp
mov
pushf
mov
mov
ds
out
cltd
sbbb
jp
fldenv
in
push
add
jg
xlat
mov
mov
and
xchg
lret
add
mov
movsb
rol
insb
add
jbe
icebp
sar
adc
or
add
std
sbb
push
pop
adc
jbe
mov
mov
and
xchg
mov
mov
lds
ffree
jg
xchg
jl
mov
xchg
adc
sbb
push
cmp
xchg
jg
xchg
addl
lret
xlat
in
aaa
dec
cltd
fstps
inc
mov
inc
aad
inc
sti
sbb
in
rorl
push
and
push
addr16
imul
jne
adc
aad
push
int
xor
sarl
stos
aaa
aad
xor
test
xchg
lods
lods
movsb
cltd
leave
or
leave
cmpsb
dec
out
push
push
imull
pop
in
or
repnz
pushf
jl
mov
je
xchg
adc
fstps
rcrl
adc
stos
leave
imul
mov
mov
imul
in
dec
in
xor
push
add
into
adc
popf
mov
sahf
cltd
xor
pop
adc
shll
popa
adc
push
sub
mov
rcl
scas
mov
test
es
cmp
sti
sbb
out
inc
test
mov
mov
adc
fld
pop
testl
add
xchg
sbb
imul
iret
and
ret
jge
leave
pop
sbb
dec
push
out
dec
adc
movsl
xchg
shlb
enter
lock
add
fnstsw
xorb
into
pop
pop
jne
roll
shll
xchg
scas
mov
hlt
cmp
mov
popf
jg
loope
in
jb
out
xchg
mov
lock
xchg
xlat
add
ret
sub
dec
test
jns
mov
into
fcmovnb
push
push
stos
xchg
lods
xor
divl
iret
inc
mov
mov
jl
stc
jl
test
sbb
rcr
mov
cwtl
jg
out
jo
repz
push
or
aad
es
push
hlt
xor
idivb
lret
call
ret
or
imulb
jecxz
mov
or
sti
iret
xchg
mov
push
imul
mov
test
icebp
jne
xchg
or
mov
loope
and
mov
add
cltd
int
fcmovnb
sbb
dec
aad
cmp
stos
add
ffreep
add
adc
popa
xor
lea
loope
cltd
aad
sahf
ret
imul
pop
call
jbe
add
xchg
sbb
std
int
push
mov
or
and
adc
xchg
sti
jmp
xchg
add
jno
and
jb
aas
pushl
stc
adc
lds
inc
xor
bnd
add
push
mov
sti
dec
jecxz
pusha
scas
pushf
repnz
xchg
frstor
aad
mov
fstps
and
movsl
or
xlat
std
es
push
les
pop
add
addl
testb
jecxz
pop
or
sbb
add
out
loope
rorl
jl
mov
and
cld
cmp
xor
xchg
data16
roll
je
ret
ror
fincstp
push
mov
insl
fwait
adc
mov
xlat
or
scas
leave
out
sbb
pop
xchg
pop
outsl
bound
cmp
icebp
jnp
mov
xchg
xchg
rcll
xchg
cltd
and
sbb
jo
lret
rep
xchg
mov
adc
inc
mov
xlat
mov
stc
lret
jle
mov
inc
xchg
lret
add
add
ja
movsl
xchg
popf
add
and
popf
sbb
mov
shrl
xchg
clc
jge
sbb
fisttpl
pop
xchg
pop
cmovg
jbe
sbb
xchg
sarl
shl
flds
dec
lret
gs
mov
xchg
push
xchg
inc
nop
in
and
int
push
xchg
fldcw
outsb
jmp
mov
sub
cltd
adc
int
enter
sbb
shll
pop
sbb
flds
mov
loope
mov
mov
imulb
or
push
mov
xor
mov
insl
mov
dec
mov
pop
mov
je
fld
and
sahf
add
mov
and
sub
mov
pusha
mov
sti
ljmp
rclw
dec
adc
and
icebp
add
mov
push
imulb
stc
adc
mull
or
ss
or
out
mov
add
or
mov
adc
xchg
and
ret
or
lcall
push
in
inc
push
sahf
sbb
pop
out
or
pop
mov
negb
mov
ret
pop
imul
mov
xchg
or
daa
and
push
cmpsl
scas
in
adc
imul
insb
mov
fnstcw
testl
push
jle
js
push
sarl
adc
hlt
adc
rcll
gs
mov
push
or
pop
sbb
cmp
xchg
stos
in
adc
gs
ljmp
cmp
inc
in
and
fucom
sub
add
or
sar
fsubl
push
and
sub
jmp
insl
sbb
cld
sub
inc
jne
cltd
icebp
mov
leave
sub
or
jbe
inc
setp
and
inc
or
mov
in
icebp
enter
push
scas
in
mov
movsl
aas
pop
outsl
rcrb
cmp
sub
mov
iret
ret
mov
xchg
les
ja
fldenv
stos
stc
data16
aad
inc
mov
mov
sbb
out
test
stos
xlat
sub
xor
daa
decb
mov
xlat
addr16
bound
sbb
mov
cwtl
test
jae
mov
cs
or
xchg
ss
jne
repz
fwait
lds
mov
in
xchg
iret
add
test
rcll
xchg
out
daa
int3
in
jo
bound
sbb
pop
ja
fldenv
pop
in
shll
xchg
or
in
in
outsb
push
push
scas
jb
test
jno
aas
movsl
lods
repnz
jns
or
stc
test
jecxz
mov
fisubs
scas
lds
rorl
adc
jbe
adc
ret
sti
bound
lret
push
push
aas
lds
inc
xchg
lret
xchg
data16
cmp
jecxz
and
jle
xchg
cld
syscall
out
jl
movl
sti
sbb
scas
aaa
leave
cmp
stos
lods
sub
or
jno
lret
cmpsb
push
pop
xchg
movsl
push
xchg
fstps
loopne
or
mov
enter
imul
mov
out
mov
sbb
ja
pop
mov
in
adc
sbb
divl
mov
flds
dec
iret
stc
leave
xor
mov
fnsave
add
and
add
mov
roll
repz
es
add
jns
rorl
cmp
xchg
std
mov
cmpsl
imull
mov
je
movsl
roll
jg
int
jo
mov
clc
lcall
scas
shrl
push
aas
popf
jnp
mov
or
mov
mov
and
adc
jge
shll
dec
xor
int
xchg
jae
aas
and
cmp
mov
fcomps
std
xlat
outsb
mov
jle
jo
jge
dec
mull
lret
adc
out
push
jae
lcall
ret
dec
pop
pop
mov
adc
push
cmpsb
xchg
ss
sarl
add
or
jecxz
inc
lods
fbstp
movsl
int
jecxz
dec
adc
lods
and
fldl
mov
sub
mov
pcmpgtd
sub
sarl
test
loop
aad
adc
std
incl
pusha
addb
mov
repnz
add
mov
ffree
xor
je
int
add
ss
adc
adc
xchg
inc
stc
add
test
add
or
and
add
mov
mov
adc
scas
jge
or
cmp
mov
data16
xchg
push
sub
hlt
add
sbb
jo
lds
aad
push
mov
mov
sub
outsb
mov
inc
call
dec
jae
fnstsw
and
mov
xchg
xlat
iret
dec
mov
mov
mov
test
in
sbb
pop
mov
aaa
mov
test
and
xor
fildl
mov
popf
scas
mov
mov
sarl
xlat
daa
gs
lret
or
popf
stos
ret
jcxz
or
sti
adc
loopne
push
pop
dec
add
in
jbe
iret
sarl
cs
cltd
ja
add
scas
inc
ja
mov
fwait
jnp
and
adc
loope
sub
fldcw
ret
sub
jo
iret
pop
popf
and
or
loop
adc
lds
xor
jg
std
jecxz
cmp
loopne
addb
sub
mov
lret
test
and
lods
sub
into
pop
cmp
xchg
jp
int
ds
popaw
and
xchg
mov
cmp
icebp
pop
aad
ficomps
xor
pop
fwait
sbb
mov
or
mov
scas
xchg
pushf
mov
loope
fcmovb
fsubrl
mov
sbb
ja
mov
dec
adc
and
ret
cltd
jmp
in
adc
add
mov
fisubrs
and
jno
std
repz
pop
dec
adc
out
lcall
inc
sbb
fldcw
dec
sbb
adc
adc
std
aad
cmp
push
and
imul
mov
ljmp
adc
addr16
movsl
out
pop
movsb
jne
sbb
aas
repz
xor
rorb
jno
not
jle
outsb
scas
sub
fnstsw
hlt
sbb
and
int
jo
popf
jno
shl
xchg
shll
push
repz
icebp
incl
jge
add
jle
push
xchg
push
push
jnp
adc
int
mov
iret
scas
cltd
divl
dec
icebp
fstpt
and
xchg
psllq
scas
mov
sarl
add
aad
and
xchg
mov
fcmovne
mov
mov
jns
cs
lret
mov
jnp
xchg
cmpsb
int
adc
std
add
or
aaa
adcl
data16
testl
clc
inc
stc
cmpsl
jl
repz
sbb
movsl
xcrypt-ctr
cmpsl
popf
les
stos
mov
fwait
pop
cltd
sarl
fwait
sbb
fidivrl
or
leave
jge
xchg
into
or
sti
mov
and
int
int3
mov
or
pushfw
push
scas
stos
adc
mov
sub
xor
and
and
mov
rcrl
movlps
repz
in
insb
std
mov
cmc
rep
lret
lds
mov
repnz
push
stc
mov
jo
xchg
or
movsl
sbb
xchg
or
fldcw
jle
shrl
and
xchg
ficoms
fstpt
mov
sbb
cs
jg
loope
jne
popf
jnp
mov
sub
push
lret
mov
mov
jl
push
mov
pop
adc
or
mov
jge
daa
adc
mov
lret
popf
mov
fisttpl
test
loope
je
movsl
cltd
xor
and
inc
xchg
mov
cmpsl
jnp
repz
hlt
sbb
pop
mov
hlt
cmp
std
xchg
sub
push
imul
loopne
sbb
test
jecxz
sub
cmp
leave
aas
or
loope
int
xlat
mov
icebp
mov
ret
lds
in
jns
push
sub
adc
cmp
je
fs
aad
mov
mov
std
lds
xchg
pop
leave
xlat
adc
push
roll
fcomps
or
lds
aas
mov
repz
xchg
xchg
jnp
push
std
and
mov
jo
sbb
repz
fwait
lods
in
add
push
jno
pop
mov
out
add
imul
jecxz
negl
ret
cli
fwait
out
adc
repz
fdivp
mov
mov
fwait
mov
push
adc
xlat
jae
add
fnstenv
sbb
inc
mov
std
and
mov
adc
int
xchg
pop
cltd
fcmovnbe
ds
cmovno
cmp
mov
mov
mull
jb
fnstenv
and
mov
xchg
lds
sbb
test
adc
jecxz
out
push
bound
or
pushf
ja
mov
pop
xchg
xor
es
mov
gs
iret
fwait
shll
and
fldenv
jne
add
out
and
xchg
adc
xor
jae
xchg
pop
and
aad
iret
sahf
mov
stc
sbb
add
ret
cmp
mov
out
icebp
out
jl
add
dec
std
test
jge
scas
mov
mov
outsl
adc
scas
lock
cltd
lret
ret
mov
xchg
leave
push
jp
mov
out
ds
je
lret
sbb
ss
mov
pop
ud1
aaa
fstl
outsb
jg
adc
mov
push
js
test
xchg
btr
mov
popf
iret
sbb
mov
add
push
xchg
fldl
mov
lret
mov
jl
push
cmp
mov
and
in
mov
loope
cwtl
rcrl
mov
js
in
test
xchg
or
xor
in
icebp
pushf
fnsetpm(287
aas
fdiv
dec
insl
insl
in
lds
pop
addr16
stc
xchg
xchg
pop
aad
data16
shr
push
xor
jno
iret
popf
loop
push
xchg
in
cltd
movsl
pop
mov
pop
in
add
add
jae
add
or
imulb
dec
icebp
dec
idivl
adc
leave
testb
dec
aas
ret
sub
cltd
ja
adc
js
aas
mov
mov
movsb
xchg
mov
or
add
push
incl
sbb
mov
xor
mov
dec
cmpsb
hlt
sbb
mov
stos
call
dec
outsl
scas
std
cltd
es
into
inc
xchg
sub
repnz
mov
clc
sub
pextrw
sbb
or
mov
in
xchg
mov
sub
push
mov
ret
push
fsubrs
or
scas
and
adc
int
iret
pop
mov
mov
sbb
adc
inc
sbb
std
mov
lcall
sub
ret
jno
inc
out
push
cmpsb
mov
repnz
popf
fldcw
jnp
in
lds
adc
mov
mov
inc
sub
push
icebp
add
xchg
mov
adc
dec
inc
jb
xlat
cwtl
negb
mov
mov
rol
jnp
stc
enter
jmp
sbb
mov
sbb
call
mov
adcb
sub
jnp
add
inc
and
adcl
ja
scas
cmp
popa
lods
xchg
sub
cmp
xchg
mov
pop
call
jecxz
fadds
fwait
push
dec
add
dec
sarb
div
dec
ss
rcrl
or
inc
add
push
mov
ret
mov
mov
shl
xchg
sbb
jbe
testl
into
xchg
sbb
fisttpl
push
mov
mov
fidivl
in
movsl
xchg
adc
out
push
push
mov
jl
jg
call
cmp
rcl
xchg
jno
pushf
jae
and
fstpt
mov
rorl
aaa
mov
adc
jns
inc
mov
pop
scas
sub
add
xchg
mov
daa
xchg
push
cltd
mov
xchg
in
stc
clc
mov
or
jecxz
int3
xchg
call
sbb
fwait
add
cmpsb
add
ss
repz
adc
lret
mov
sti
mov
mov
lds
or
cmpsb
mov
pop
jge
mov
mov
push
mov
aad
inc
js
pop
ja
add
outsl
mov
xchg
inc
sub
mov
mov
pop
xchg
mov
mov
stc
lods
push
mov
pop
es
or
sbb
jle
mov
mov
std
call
aad
lods
and
mov
shll
daa
xchg
sti
int
loope
push
cmpsl
rorl
movsl
movsl
push
sub
sarl
dec
scas
scas
push
lock
shrl
jo
inc
jge
sti
aad
adc
mov
mov
xchg
sub
sbb
cltd
test
mov
test
xlat
and
mov
mov
inc
fnstcw
xchg
leave
add
sbb
mov
lods
sub
xor
pavgw
sbb
inc
cltd
cs
ja
int
jl
jl
je
popf
lret
adc
and
xchg
and
ret
mov
rcrl
add
and
inc
or
dec
dec
bound
cld
add
mov
mov
not
dec
sbb
jne
out
sbb
mov
cmp
pop
adc
cmp
jnp
aad
or
lock
push
push
leave
sbb
add
ds
adc
dec
add
jno
sti
mov
movl
in
mov
mov
ret
jecxz
es
test
mov
lock
and
out
cmp
pop
shll
icebp
pop
mov
push
inc
mov
mov
mov
xcrypt-cbc
cmpsl
xchg
enter
pop
movsl
inc
push
int
adc
std
ror
jge
or
jo
movsl
rcl
jnp
inc
cld
lret
mov
adc
add
add
xchg
cmp
sbb
pop
dec
pushf
mov
shll
cmc
insb
aad
push
ret
sbb
movsl
inc
out
ret
add
adc
insb
jmp
dec
out
and
dec
movl
loope
test
mov
ficomps
inc
xor
sbb
xchg
je
pop
lret
adc
cmpsl
repnz
inc
xor
lods
push
call
rcr
dec
leave
pop
cli
dec
das
scas
sbb
mov
mov
cmp
or
repnz
addl
je
pop
sub
into
ljmp
add
popf
mov
cs
or
ret
sbb
es
popf
ss
and
lcall
lds
loop
test
in
xchg
jg
adc
or
int
xor
push
ljmp
add
adc
ret
and
adc
sbb
adc
call
add
jbe
adc
push
lock
jno
aas
scas
inc
ja
sbb
adc
stc
jecxz
sbb
and
or
fisubrs
lock
addr16
dec
lcall
mov
mov
test
or
xlat
or
iret
xchg
pushf
adc
mov
add
std
dec
leave
popf
pop
faddp
lahf
pop
jnp
fstl
inc
orl
adc
pop
or
mov
into
adc
mov
xor
xchg
into
jecxz
jns
jnp
adc
mov
frstor
jg
loope
stc
jg
sbb
xor
out
int
pop
pop
sti
jb
xchg
dec
in
in
pop
add
shrb
mov
cmc
aam
mov
filds
dec
int3
in
cmp
lods
jp
popf
xchg
mov
loopne,pn
mov
popf
push
sub
dec
mov
add
jo
jmp
mov
icebp
mov
push
and
setg
jmp
push
out
adc
or
sarl
stc
mov
cmc
icebp
xchg
jecxz
addr16
and
icebp
jmp
in
mov
cld
call
push
ja
pop
or
mov
inc
ret
xchg
jmp
and
fwait
sub
ret
das
inc
xchg
push
dec
int
aas
jae
jecxz
aad
ficoml
int
pop
mov
aad
and
mov
imul
mov
repz
mov
or
daa
and
add
std
and
mov
decl
or
jecxz
xlat
fistl
les
aas
mov
jae
or
fnsave
jae
cmc
js
and
mov
push
or
lret
popf
dec
aad
cmp
in
stos
dec
out
mov
outsb
icebp
mov
popf
lcall
fsts
in
and
mov
fidivl
mov
push
inc
rcll
jns
sub
and
xchg
andb
call
sbb
mov
sbb
scas
ljmp
mov
mulb
aad
addr16
or
pop
sbb
std
loope
fdivs
or
in
mov
and
shr
dec
lds
mov
sub
mov
mov
rol
icebp
mov
movsb
je
fnstsw
fadd
cld
movsl
cld
popa
jae
mov
movl
xchg
xor
popf
scas
adc
nop
iret
xchg
vpaddusw
daa
pop
int
or
push
mov
push
stc
or
clc
outsb
adc
or
or
fsubrl
in
mov
mov
btr
mov
icebp
push
cwtl
mov
fndisi(8087
stos
and
aad
push
xchg
jns
fldenv
mov
lret
outsl
loopne
leave
xchg
add
jo
mov
inc
jg
icebp
jo
in
outsl
insb
fxch
shll
aaa
mov
testl
mov
and
xlat
jl
mov
pop
shlb
adc
lret
jae
out
movsl
std
xchg
push
mov
cmp
rorl
ja
sub
or
mov
mov
divb
xor
mov
adc
imul
mov
ret
movsb
adc
movsb
ja
sti
pand
test
out
push
and
cmp
adc
sbb
arpl
add
sti
cltd
xchg
inc
lods
push
pop
ljmp
or
rcrl
sbb
addr16
or
sbb
add
jg
out
dec
xchg
out
ret
pop
aaa
jno
adc
xchg
test
mov
xchg
loope
into
push
imul
dec
popf
and
fistl
les
inc
jg
out
test
cmovb
sub
rcr
in
mov
dec
scas
adc
jae
push
mov
mov
daa
fwait
pmulhw
pop
mov
ss
iret
xor
xchg
add
jo
rorl
out
popf
sti
dec
inc
lret
cmc
fldt
mov
loope
cli
out
ss
jg
xchg
mov
cmpsb
imul
in
sahf
inc
hlt
cmpsl
popf
icebp
xchg
test
ljmp
or
sbb
movsl
aas
je
adc
add
fstps
inc
cmp
xorl
mov
push
testb
add
sbb
fwait
int
addr16
mov
sub
mov
lds
scas
out
jp
sbb
sub
xchg
out
cltd
adc
xchg
es
mov
rcrl
std
es
sahf
inc
out
fs
mov
sbb
xchg
scas
in
sti
ret
je
rcll
xchg
fwait
and
ss
jecxz
xchg
sbb
notb
repz
lret
or
add
mul
call
mov
jecxz
lea
fwait
push
cs
jmp
xor
adc
loopne
popf
cltd
outsb
int
jbe
pop
lds
insl
out
or
ror
movsl
mov
negl
add
dec
roll
xchg
sbb
mov
xchg
rcrl
push
movsb
pop
sahf
push
lods
sbb
adcl
add
mov
cltd
dec
stc
testl
sbbb
out
test
push
dec
push
popf
pop
shll
push
std
xor
imul
add
int3
mov
cmp
aas
mov
inc
stc
mov
call
loop
sub
or
test
fidivl
xlat
mov
xor
add
sub
add
es
mov
js
sbb
cmpsb
or
jnp
sbb
sbb
xchg
frstor
int
fcmove
or
and
stc
fwait
add
lahf
fstps
shll
adc
push
insl
jnp
mov
cmp
fstps
mov
in
sub
jne
jecxz
std
add
sti
data16
add
in
in
daa
out
jns
inc
xchg
icebp
icebp
je
cli
loope
out
js
inc
mov
xchg
fisttpl
testl
stos
inc
dec
sbb
mov
aad
or
lcall
lret
sti
dec
dec
jnp
xchg
ret
jl
dec
cld
jb
xor
cld
shlb
leave
popf
aas
push
in
scas
ljmp
cmpsb
push
mov
icebp
lret
xchg
inc
jne
pop
and
mov
xor
add
fistl
jecxz
sbb
xchg
adc
dec
jmp
loope
sbb
and
mov
add
pop
js
movsl
scas
add
push
push
add
mov
adc
arpl
or
mov
jle
lea
mov
sar
sbb
icebp
adcl
or
sarl
insl
popf
mov
pop
clc
test
imull
adc
adc
push
pop
test
movhps
cmpsl
daa
cmp
movsl
aaa
in
and
test
mov
adc
je
int
icebp
in
sbb
test
mov
leave
cltd
outsl
and
xchg
jecxz
icebp
push
cli
adc
mov
xchg
mov
cltd
jno
shrl
lods
dec
dec
out
lret
aas
pop
add
mov
sbb
cmp
cltd
ja
mov
or
mov
ret
xor
sbb
sahf
mov
icebp
sbb
scas
cmp
cltd
mov
popa
add
push
mov
repz
subb
jo
rcrl
or
xor
sbb
movsb
js
or
inc
syscall
and
push
fstpt
aad
sarb
andl
mov
lods
in
xchg
cli
jb
int
out
andl
jne
loope
icebp
fwait
xchg
movntps
insl
push
ljmp
fs
add
push
jne
hlt
hlt
ret
adc
or
sub
or
in
add
and
push
nop
mov
mov
insb
shrl
aas
add
insl
mov
sti
lcall
cmpsb
iret
std
xchg
push
jmp
repnz
leave
mov
pop
mov
sti
outsl
xchg
not
and
inc
mov
xchg
shlb
inc
add
jle
stos
sbb
loope
jno
scas
mov
in
lds
iret
aas
stos
xchg
stos
cld
xchg
fwait
jecxz
insb
and
sbb
cmp
adc
fstl
add
sbb
and
sbb
idivl
mov
cmp
and
idivl
mov
pusha
mov
push
dec
aad
mov
ja
movsl
xchg
or
aaa
stc
add
hlt
outsb
sti
icebp
push
cwtl
hlt
in
hlt
push
shl
xor
cltd
dec
out
add
imul
fstpt
lcall
sbb
mov
bound
loopne
sbb
and
and
sbb
idivb
movsl
iret
push
lret
xchg
mov
jl
xchg
cmpsb
pop
jmp
mov
add
mov
or
std
in
repz
xchg
pop
lret
mov
shl
mov
rcrl
ss
ja
fwait
or
sbb
pop
scas
mov
mov
and
rorl
cmp
pop
outsb
adc
movsb
loope
push
mov
rol
push
or
mov
push
ljmp
or
lock
std
rorl
lahf
or
int
add
test
scas
xor
test
dec
imul
es
es
xor
sbb
rcll
sbb
dec
sbb
mul
std
sbb
mov
and
pop
cltd
loop
inc
mov
movsl
fwait
outsb
xchg
pop
les
aam
and
pop
or
mov
xchg
xor
leave
xchg
sarl
inc
xor
jp
pop
lret
jg
mov
mov
clc
shl
or
aaa
loope
fstp
jl
std
imul
adc
cmp
mov
in
cmovp
iret
lock
mov
fistpl
xor
lods
es
cmp
sti
stc
movhps
and
aam
adc
add
div
mov
je
sbb
fwait
dec
push
out
insb
in
in
xchg
aad
shrl
or
xlat
aad
test
jp
icebp
int3
inc
mov
mov
pop
out
or
or
inc
mov
xchg
fstps
or
mov
mov
lds
sahf
pop
and
rclb
imul
mov
sbb
sub
sbb
not
fwait
xchg
repz
and
xor
mov
ja
cmp
into
adc
mov
sbb
outsb
enter
icebp
xchg
xchg
or
popf
mov
inc
or
jnp
or
xor
scas
jno
sub
jmp
sbb
push
scas
ja
aas
mov
aaa
scas
inc
lcall
sub
cwtl
cmpsl
popf
data16
fistpl
mov
add
xchg
mov
push
mov
pop
lcall
cmp
cmp
lds
scas
and
jmp
movsl
jno
sti
sbb
push
and
jno
std
stc
shll
leave
or
lds
mov
add
push
xor
jb
cmp
cmpl
int
xor
or
idivl
mov
dec
or
or
in
inc
push
xchg
icebp
iret
dec
push
iret
sti
add
stc
fwait
out
data16
sub
and
call
adc
fldl
xchg
outsl
dec
rcl
scas
add
mov
or
roll
jb
iret
xor
mov
add
dec
add
sbb
pushl
movsl
imul
aaa
fidivs
dec
jle
icebp
mov
movsb
popa
adc
ds
jns
xor
jg
xor
and
jge
movsl
out
or
sbb
hlt
adc
fldcw
aad
outsb
dec
xlat
jge
sti
sbb
loope
aas
loope
mov
sbb
jno
mov
pop
jg
fnstenv
jecxz
and
xchg
pop
in
xor
jge
incl
xchg
mov
pop
popf
add
std
fsubs
xor
jnp
jb
mov
call
mov
sti
jo
movsl
call
int
sbb
unpckhps
test
jo
sarl
jp
inc
pop
jnp
ret
sub
jge
dec
mov
ss
icebp
movsb
mov
lods
cmc
mov
and
cltd
int
sbb
xchg
ret
sub
icebp
adc
push
es
add
and
push
scas
std
mov
inc
fstps
jmp
bnd
ret
xor
aad
movsl
pop
inc
jg
add
dec
insb
ja
pop
jb
mov
jns
fistpl
cmpsb
sbb
and
js
enter
pushf
mov
xor
fcomps
clc
jl
push
fcompl
ja
mov
cmp
sti
sub
mov
popf
psrld
push
jnp
fcmovnbe
jecxz
jb
or
jecxz
cmpsb
ret
mov
adc
arpl
mov
outsb
loope
sbb
jb
xlat
mov
fwait
sbbb
and
pop
sbbb
mov
mov
iret
or
mov
mov
pop
and
mov
ret
or
cmpsl
mov
mov
sub
sbb
push
dec
out
ficomps
push
push
or
mov
sbb
or
jp
fsubrp
inc
jns
outsb
movsl
leave
scas
mov
fsts
mov
add
loope
sub
mov
and
int
fmulp
inc
jb
or
cmp
data16
xchg
pop
stos
sbb
add
push
push
jne
cltd
mov
scas
in
push
mov
or
adc
mov
xchg
aad
iret
cmpsb
sbb
xchg
in
mov
cltd
out
mov
fidivl
xchg
loope
adc
push
lea
sbb
xchg
sub
mov
mov
dec
xorl
adc
clc
cs
iret
pop
fldl
lds
aad
clc
adc
mov
fisttpl
xchg
out
mov
test
movaps
push
insl
or
test
inc
sbb
lds
pop
lret
xchg
mov
mov
adc
cli
loope
stc
loope
add
sub
pop
xlat
rcrl
jecxz
inc
mov
pop
repz
das
mov
fld
rcrb
sub
setae
pop
pop
push
inc
dec
jno
cltd
mov
stc
pop
add
gs
fldt
fidivrl
inc
iret
loope
and
mov
sbb
test
sbb
xchg
sbbl
out
int
fsin
mov
or
inc
shlb
inc
outsb
pop
fwait
adc
pushf
xchg
shlb
ss
xorl
out
and
mov
popf
loope
fisttps
ljmp
jb
movsl
popf
hlt
mov
mov
scas
mov
loop
jb
mov
mov
pop
xchg
mov
loopne
repnz
push
jge
xlat
fwait
inc
dec
popf
and
sbb
mov
xchg
loop
call
inc
js
adc
or
icebp
rcll
in
test
xchg
mov
push
mov
movsl
mov
ret
inc
jnp
adc
ficoml
push
sub
jle
in
frstpm(287
jb
movl
scas
xchg
xor
icebp
bound
xchg
leave
lock
in
js
test
out
or
out
test
or
cltd
sarl
leave
fbstp
add
and
xlat
jno
pop
lds
movsl
sbb
or
sub
fsts
mov
push
in
adc
adc
mov
repz
icebp
aad
enter
in
jge
pop
mov
lret
stos
cmpsl
addr16
pop
jnp
in
jb
faddl
pop
mov
add
gs
jb
and
mov
mov
sbb
adc
and
or
fldenv
mov
outsb
xchg
mov
dec
stos
lods
cmp
scas
mov
push
sub
push
xor
unpcklps
adc
cli
dec
shl
jge
and
fwait
adc
inc
adc
xchg
ret
pop
xlat
jns
pop
xchg
mov
aad
enter
adc
out
fwait
sbb
daa
dec
mov
cmp
mov
dec
add
popf
stc
mov
fwait
sbb
inc
insl
or
movsl
sub
int
iret
mul
std
jmp
aas
imul
mov
jmp
adc
xchg
mov
lods
and
mov
icebp
mov
pushf
and
adc
and
add
in
push
notb
sub
int
fstl
lds
jnp
mov
cli
mov
mov
fwait
loop
in
rorb
xchg
mov
mov
sbb
fwait
leave
or
icebp
or
fidivrl
xchg
imull
and
cltd
pop
pop
aad
mov
rclb
fwait
aas
adc
rorl
and
push
xchg
pop
loope
je
xchg
unpckhps
sbb
jg
mov
imul
mov
stos
mov
jecxz
xchg
sahf
jbe
std
popf
mov
leave
push
ss
mov
push
adc
xor
mov
jmp
push
data16
or
cld
inc
mov
cmpsb
xlat
lds
subl
mov
jnp
leave
and
lret
mov
mov
and
jg
jns
out
xor
sar
inc
inc
dec
in
add
mov
xor
cs
mov
shll
cltd
xchg
movsl
xchg
add
in
jbe
loope
sbb
sbb
push
pop
movsl
mov
and
inc
repz
adc
xlat
rep
lcall
pushf
add
adc
sahf
pop
and
jle
test
lcall
or
jo
pushf
or
data16
add
xchg
mov
paddusb
lea
adc
cld
xor
xchg
data16
adc
lods
xchg
or
ss
fistl
sbb
or
aad
out
pop
outsl
cmpsb
movsl
xchg
nop
jecxz
outsb
test
adc
adc
xchg
sbb
push
aaa
jmp
xchg
ja
fwait
inc
jl
out
jb
jecxz
pushf
out
xchg
in
ret
add
add
xlat
rol
cmpl
loope
idivb
xchg
add
sbb
mov
aad
xchg
iret
ja
or
adc
mov
mov
push
leave
inc
lret
mov
sub
adc
lods
mov
inc
repnz
aad
jns
movd
fdivrl
mov
sti
mov
jnp
xlat
pop
pop
jecxz
and
inc
fimull
mov
popf
flds
and
lds
shr
push
ja
adc
cwtl
fcmovbe
mov
sbb
or
dec
frstor
mov
mov
fdiv
dec
out
jns
in
mov
syscall
mov
fisttpl
or
out
stc
xchg
lret
push
mov
or
arpl
sbb
pop
test
cmpsb
pushf
addr16
or
inc
leave
fcompl
jmp
shrl
mov
in
dec
dec
xchg
or
sbb
xchg
ret
mov
cmp
mov
pop
sbb
xorl
clc
cs
lods
mov
cmp
mov
or
pop
jb
pop
mov
movaps
sub
and
stos
cmp
mov
adc
cld
repz
cmp
push
xchg
notl
or
loop
aad
push
adc
xchg
sbb
faddp
jl
stos
push
cmc
pop
xchg
rorl
or
testl
test
mov
mov
fstpl
loope
scas
cltd
lods
js
repnz
xor
pop
ret
adc
fdecstp
pop
add
inc
pop
pop
std
outsb
mov
push
mov
xor
loopne
int3
and
pop
popf
mov
sbb
std
scas
push
lret
sbb
fwait
xchg
add
and
test
and
xchg
ret
jl
je
fxch
and
xor
and
cmc
or
ret
sbb
mov
sbb
and
or
cld
pop
push
orl
mov
mov
movsl
lods
xor
cltd
jge
stc
or
jbe
loope
or
jl
xchg
scas
xchg
adc
les
xlat
adc
mov
repnz
cltd
insl
jecxz
cld
and
jb
icebp
lds
imul
ficomps
mov
testb
add
inc
icebp
or
ljmp
dec
mov
aas
inc
dec
and
dec
inc
sbb
shll
jecxz
sti
pop
jmp
add
cmova
dec
pop
ret
popf
xlat
and
jnp
mov
xchg
sbb
mov
notb
lds
adc
clc
std
in
add
inc
pop
sbb
xor
lret
cltd
iret
pushl
rol
xor
pop
outsb
or
scas
popf
xor
mov
or
adc
outsl
shl
and
jmp
popf
add
cltd
sti
push
lcall
jb
aas
mov
js
in
adc
icebp
call
add
repz
ficoml
icebp
mov
syscall
adc
stc
xchg
and
mov
loop
cwtl
jnp
vmovdqa
xchg
xor
jne
xchg
jle
popf
mov
int
nop
add
dec
or
and
and
icebp
adc
xchg
pop
test
adc
popf
loope
fxch
stc
mov
pop
maskmovq
mov
imul
or
clc
fsubrs
sub
jge
flds
test
aas
mov
frstor
test
sub
adc
movsl
xlat
and
in
cmp
lods
lcall
xchg
rcl
sbb
fdiv
hlt
or
jecxz
mov
in
mov
adc
jnp
js
add
cmp
lds
sub
pop
mov
or
mov
jbe
icebp
jecxz
adc
pop
adc
popf
pop
mov
jns
fldl
xchg
pushf
in
add
pop
cs
adc
fcompl
push
je
adc
cmp
testb
stc
mov
scas
insb
cmpsb
xchg
or
shll
movsl
out
lods
mov
mov
or
mov
push
mov
dec
jecxz
pop
mov
iret
mov
scas
sti
jl
fnsave
add
scas
pop
addr16
sbb
scas
cltd
insb
ret
mov
and
fidivrs
dec
xchg
mov
fs
outsl
jb
xchg
pop
fwait
in
mov
mov
aaa
mov
lret
cmp
sahf
mov
push
cltd
mov
mov
xchg
mov
fdivp
cmovbe
dec
cmpsb
mov
out
add
stc
inc
loop
adc
fisttpll
clc
jns
xlat
mov
das
sbb
sbb
push
lods
add
sbb
ljmp
lds
out
out
xchg
mov
shl
adc
mov
pop
shll
cmp
sarl
outsb
push
add
repnz
xchg
cltd
jae
mov
pushf
sbb
out
dec
xchg
fwait
adc
stos
outsl
inc
leave
add
icebp
movsl
aad
mov
cmp
aad
test
sbbl
hlt
sub
mov
mov
mov
fs
shlb
mov
inc
dec
sbb
mov
jb
pextrw
or
repz
fsts
dec
ss
adc
sti
in
mov
sub
xchg
data16
sub
pop
pop
mov
sub
andl
les
add
xchg
mov
out
fnstsw
mov
loop
in
dec
jl
and
xchg
repnz
mov
xor
dec
lcall
jge
cltd
mov
fxam
out
lahf
ret
push
dec
out
and
mov
xor
testb
push
or
xor
jbe
cltd
std
or
or
aad
hlt
lret
mov
das
lods
es
jg
mov
jbe
and
lret
jge
sbb
sub
xlat
xchg
pop
jecxz
jg
jg
in
xchg
sub
adc
cmp
push
gs
outsb
and
lea
push
adc
lea
sbb
popf
scas
repz
push
adc
lds
mov
testl
mov
mov
movsb
lods
and
and
xchg
xchg
mov
iret
subb
adc
ja
lds
sbb
stos
xchg
push
popf
xor
jb
mov
adc
push
adc
ret
jbe
lds
xchg
rorl
push
cmp
cmpsb
rcll
pop
pushw
or
sbb
ret
xor
rol
movsl
adc
cwtl
fsubs
jecxz
mov
setne
mov
mov
ficoml
xlat
outsl
sbb
movsb
xor
stc
mov
pop
jge
jg
mov
sti
scas
lds
mov
mov
sbb
and
add
mov
dec
xor
jno
adc
add
xchg
jp
divl
movsl
add
jne
pop
mov
xchg
or
xor
aas
movsl
mul
sbb
xor
mov
jg
xchg
ljmp
xchg
inc
jg
xchg
jo
pop
sbb
adc
sti
inc
jecxz
movsl
dec
sbb
add
adc
or
test
testb
loope
inc
jle
out
fnstcw
or
xchg
adc
notl
sub
sbb
sbb
sbb
std
or
fstps
pop
lret
inc
jle
clc
xchg
push
repnz
mov
mov
or
adc
adc
dec
jl
and
push
jbe
push
push
cmpsl
mov
test
shll
jg
loope
pushf
ja
aas
lret
sub
popf
pushf
mulb
jecxz
lret
xchg
shrb
sahf
xchg
in
ret
sub
sbb
cli
jge
push
popf
or
mov
pop
negb
or
sub
loope
xchg
xchg
mov
out
mov
xchg
call
ret
push
sahf
adc
jecxz
push
fistpll
adc
jns
sbb
fstpt
add
aad
add
popf
fstps
repz
mov
loope
adc
insl
and
mov
xor
mov
loopne
scas
xchg
loope
jo
and
push
add
add
push
push
imul
xor
xchg
adc
add
outsl
xlat
and
int
negl
mov
push
xchg
lods
call
dec
int
frstor
pop
ret
xchg
add
leave
std
add
pop
aas
jne
repz
xchg
lss
pop
std
mov
es
popf
lcall
mov
fstpt
add
repz
xchg
or
add
lods
jecxz
mov
mov
mov
icebp
int
jnp
sbb
lret
push
mov
mov
inc
pop
dec
addr16
fcoml
into
pop
add
sub
out
adc
fucom
rol
int
and
jne
out
in
sub
enter
sub
pop
lds
mov
lock
mov
mov
pop
push
test
movsl
scas
xchg
adc
lret
xlat
mov
xchg
xlat
mov
cmp
xor
push
cmp
ret
fnstcw
das
loope
mov
loope
cmc
in
cld
insl
mov
jle
hlt
inc
fst
xchg
mov
mov
aad
adc
xchg
xchg
pop
repz
xchg
adc
int
push
mov
cwtl
or
push
leave
xchg
ret
mov
sbb
xchg
cmpsl
dec
aas
aad
push
add
xchg
scas
loope
repnz
jl
int
lods
mov
lret
out
sti
out
dec
add
xchg
xor
push
imul
dec
stc
cmpsb
cmc
shll
mov
in
mov
not
loopne
pop
stc
adc
jnp
fwait
icebp
dec
in
dec
loope
lods
jge
mov
or
mov
cmp
adc
pop
dec
cmc
push
movl
ja
lds
xchg
sti
xchg
or
fisttpll
xlat
jb
fcomi
movsl
sub
and
mov
cmp
daa
aaa
inc
stos
mov
xchg
int
in
stos
ds
xchg
cld
repnz
fnsave
sub
dec
xchg
fxch
push
xchg
imul
cltd
xchg
xor
mov
mov
sti
xchg
dec
in
or
mov
lcallw
cmpsl
repnz
loope
icebp
jp
ret
push
add
mov
jl
outsb
inc
icebp
rcl
mov
imul
mov
dec
add
movsl
roll
lock
daa
jns
adc
movsl
inc
sbb
repnz
mov
dec
gs
sti
mov
fwait
mov
push
leave
out
jge
roll
jne
fisubrl
jae
pop
fwait
mov
jbe
mov
movsl
shlb
pop
sbb
aas
mov
mov
lahf
fdivrs
or
cli
and
mov
dec
aad
pop
adc
push
jo
adc
iret
xchg
mov
mov
xor
inc
mov
xchg
rcl
inc
xor
in
dec
sbb
arpl
pop
test
adc
into
adc
mov
xchg
jo
sbb
daa
cmpsl
lods
mov
jle
inc
repnz
cmc
sbb
add
sbb
nop
and
test
xchg
lahf
movl
sbb
movsl
xchg
repz
inc
notl
fiadds
out
lock
scas
add
xchg
mov
hlt
xchg
mov
iret
or
ss
add
lods
mov
movups
imul
pop
in
call
jl
mov
movsl
sbb
add
ja
or
mov
test
ljmp
cltd
out
icebp
and
outsb
jnp
fld
flds
xorb
xchg
ror
xor
push
or
rcll
js
and
cmc
inc
mov
inc
inc
jg
movsl
lret
testb
or
mov
cmp
cmp
dec
push
xor
mov
in
mov
xchg
and
mov
cli
push
dec
push
into
popf
popa
fwait
std
push
hlt
mov
mov
aas
xchg
shrb
jmp
fwait
and
leave
por
mov
and
lcall
mov
jmp
mov
jo
iret
pop
sub
push
cmc
aaa
aad
jns
ja
sbb
push
cmp
subb
xchg
imul
fdivrp
jle
xchg
leave
aad
cli
shld
cmp
dec
jmp
adc
repz
and
lods
mov
in
int3
sub
or
mov
xchg
cmpsl
xor
ljmp
in
adc
mov
xchg
or
add
push
frstor
or
or
cmc
push
mov
movsl
mov
add
cltd
loop
aas
sbb
ja
mov
std
aam
out
xchg
push
and
js
sbb
repz
in
mov
xlat
adc
xor
sbb
scas
cmpsb
add
push
popf
dec
icebp
adc
ss
jmp
ljmp
loope
mov
ret
jge
cltd
sbb
pop
std
js
rcll
aam
push
shll
cli
daa
ss
mov
mov
mov
adc
adc
xchg
jbe
and
sbb
popf
lds
or
inc
aad
aaa
mov
aas
cli
scas
sbb
divb
aad
popf
sti
or
ja
or
mov
ljmp
adc
pop
movsl
mov
in
fdivrl
loope
jns
mov
sbb
push
fisubrs
xor
stc
scas
jg
mov
scas
iret
rcl
lds
inc
mov
xchg
push
cmc
in
jg
mov
cmc
sbb
mov
mov
cmp
add
repnz
add
mov
sti
fcomi
mov
and
xor
sar
inc
stc
incl
mov
add
fchs
cmpsb
lret
rorl
sbb
dec
jg
xchg
ja
mov
cwtl
mov
lds
add
inc
add
addr16
je
sbb
fnstenvs
mov
rcl
test
sub
mov
cld
lcall
lret
enter
stos
lods
jge
rcrl
dec
push
pop
sbb
sub
in
jg
cltd
jmp
or
and
rorl
mov
xchg
mov
std
mov
mov
into
sbb
rcr
pop
insb
clc
jnp
fsts
sbb
into
inc
pop
aas
xchg
ret
inc
mov
es
or
addb
repz
mov
shll
loope
aas
lret
repz
insl
mov
lret
je
sti
roll
hlt
push
mov
lahf
jno
adc
psadbw
add
add
loope
movsl
rcll
imul
andl
mov
stos
pop
icebp
shl
leavew
pop
in
popf
sub
sub
dec
outsl
jge
ret
add
je
mov
leave
adc
aam
xchg
jb
icebp
pop
stos
pop
add
jle
or
push
xchg
aas
mov
mov
pop
and
shrl
and
lret
es
mov
adc
jmp
cmp
cmc
jge
sbb
fdiv
dec
or
cmp
ja
and
in
mov
adc
data16
add
mov
fistl
mov
dec
out
and
je
add
call
stc
dec
lea
movl
mov
inc
fs
xchg
aam
sti
adc
aad
stos
pop
xchg
jo
mov
leave
cmc
sub
sbb
or
pop
xor
sbb
dec
outsb
jg
sbb
and
sub
vpmullw
push
ljmp
out
pop
cmp
cmp
add
add
es
push
mov
sbb
xchg
in
stc
mov
dec
add
lds
aas
ret
mov
cmpsl
mov
and
pop
lcall
and
mov
data16
outsl
ljmp
xchg
loopne
sar
mov
out
mov
mov
add
fdivp
lods
in
add
loope
pop
out
push
aas
fiaddl
pop
cmp
fstp
aas
aaa
xchg
adc
mov
jnp
loope
je
leave
add
sbb
sbb
insl
sti
jb
add
mov
or
clc
xchg
mov
shl
aas
icebp
stc
pushf
xchg
aaa
xchg
test
lods
xchg
mov
cltd
jl
jno
jecxz
sti
mov
mov
and
inc
icebp
jecxz
mov
stc
mov
adc
mov
leave
mov
je
lcall
add
mov
mov
mov
sub
mov
loopne
inc
scas
pop
push
out
xchg
mov
nopl
fcmovnbe
repz
rol
mov
adc
or
cmp
push
jns
cmp
idivl
cltd
fldenv
std
mov
out
es
jge
add
fwait
or
push
and
dec
leave
loopne
sub
adc
aaa
jge
loope
and
fisubl
test
mov
pop
lock
fildl
xor
inc
imulb
popf
pop
xchg
adc
pusha
add
movsb
or
pop
cmp
sub
call
sub
insl
rorw
out
rcrb
mov
xor
iret
shlb
adc
ret
xchg
push
sbb
negl
cmp
and
shll
inc
pop
scas
push
or
sarb
clc
dec
ds
xchg
push
aas
sub
mov
mov
pop
std
jge
add
adc
xor
data16
call
fwait
int3
and
repnz
out
subl
fidivl
negl
scas
leave
cltd
rorl
inc
rol
int3
xchg
mov
push
lock
sub
sbb
rorl
xlat
mov
fnstenv
lods
repz
orl
jne
mov
xor
ror
and
pop
ss
adc
mov
sbb
mov
popf
int
jecxz
add
pop
lds
aam
ds
loop
xchg
mov
lcall
xchg
sti
imul
adcl
fdivr
jge
mov
scas
inc
mov
data16
int3
adc
lahf
clc
into
mov
sbb
push
adc
rol
ds
test
and
in
adc
int
mov
push
repz
in
scas
mov
inc
dec
mov
mov
or
jns
maskmovq
mov
add
sbbl
xchg
adc
movsl
mov
mov
add
enter
mov
clc
jle
imul
and
dec
jnp
jl
mov
fdivrl
stos
jl
mov
icebp
push
pop
jecxz
pop
pop
sbb
add
xchg
enter
mov
xchg
fwait
into
int
ret
jecxz
addl
jb
cmpsb
mov
loope
adc
mov
or
xor
insl
and
fiaddl
loop
mov
fnstenv
sbb
xchg
enter
cwtl
xchg
popf
adc
jae
jl
out
scas
es
leave
call
xchg
cmp
ret
clc
inc
js
aad
pop
sbb
sbb
fimuls
mov
cmp
loop
sbb
lods
movsbl
call
cmpsb
push
add
fcmovu
lret
fdivp
pop
mov
push
neg
in
fwait
push
test
mov
adc
test
scas
shl
lock
icebp
xchg
ja
adc
xchg
jne
xchg
movlps
and
sti
mov
lret
enter
xchg
stc
jecxz
test
fstl
mov
jbe
sbb
mov
adc
cmpl
scas
cltd
jno
adc
notb
decl
scas
or
pushf
sbbb
xchg
movsb
jnp
std
sbb
push
testb
mov
push
cmp
adc
shll
call
jp
xor
test
stc
adc
jns
jl
mov
pop
out
ret
repz
scas
les
movsl
add
inc
lock
shrl
subb
scas
rcll
popf
xchg
push
xchg
aas
push
ds
mov
stos
ja
inc
roll
cmp
xchg
mov
push
mov
jg
mov
mov
bound
out
dec
rcll
negb
add
ja
mov
push
jb
mov
sub
fwait
mov
scas
xlat
push
daa
xchg
shll
aad
ret
mov
adc
fstpl
mov
xor
mov
insb
imulb
pop
xchg
sbb
jecxz
shlb
mov
xlat
or
and
aad
pop
inc
scas
rcrl
out
mov
in
out
dec
cltd
addl
xchg
in
rol
sbb
outsb
mov
xchg
mov
repz
sub
lds
pop
mov
sub
pop
jg
adc
and
xor
xchg
sti
leave
std
in
add
fdivl
push
mov
imul
dec
repnz
rcl
xchg
jecxz
scas
and
lods
cld
adc
popf
pop
popf
mov
mov
pop
out
cmpsb
icebp
lret
fisubrl
sub
jge
cltd
push
jnp
xchg
mov
or
push
mov
fwait
aas
and
stc
jae
rcr
rcll
mov
add
rol
fstl
andl
iret
add
sbb
mov
int
xor
adc
popf
dec
mov
mov
cltd
or
stos
es
loopne
xlat
in
or
push
ret
sbb
pop
sbb
add
mov
call
xor
cmc
in
xlat
mov
xchg
jge
xchg
or
xor
mov
and
adc
dec
pop
jae
mov
ljmp
out
fmulp
pop
mov
repz
stc
lods
sahf
adc
lcall
mov
fwait
and
mov
xor
mov
out
std
adc
mov
mov
xor
pop
loope
mulb
adc
fdiv
fidivl
and
int
lcall
mov
jo
mov
loop
sbb
pop
adc
inc
psllw
lahf
jb
xchg
pop
repnz
das
loope
add
add
ud1
jbe
pop
sbb
es
lcall
push
cltd
sti
shll
or
mov
or
fildl
pop
mov
cmpsb
loop
idivb
shrl
mov
icebp
aas
mov
sti
cmc
sub
fildl
xlat
js
leave
shll
mov
divb
mov
fwait
shll
loope
mov
iret
or
pop
xchg
sbb
aas
test
jbe
xchg
int
pop
mov
fld
xchg
fadds
or
fstl
cmp
fwait
jnp
adc
or
je
sbb
push
loope
aas
jnp
mov
jae
cli
loop
rcrl
movsl
std
pop
insl
pop
add
xchg
iret
jne
out
xchg
or
loope
outsb
add
mov
xor
dec
lods
mov
movsl
add
mov
lret
jecxz
lcall
movsl
adc
and
pop
pop
aad
jb
shrl
add
pop
aad
push
sbb
movsl
mov
lods
in
setne
xchg
aas
fisttpll
in
add
xchg
pushf
stos
xchg
lcall
mov
outsb
jge
shll
aad
data16
adc
mov
xchg
push
adc
leave
negl
cmp
add
or
lret
or
shl
mov
and
push
outsl
enter
fsubp
in
scas
mov
cmpsb
arpl
push
pop
jg
mov
mov
push
fsts
jbe
dec
out
je
icebp
xchg
fidivl
int3
fldenv
and
adc
inc
cwtl
idivl
fnstenv
add
or
incl
mov
mov
pop
or
pop
mov
mov
mov
pop
jnp
jl
pop
clc
xchg
xlat
adc
movsl
aaa
outsb
and
add
push
outsb
add
dec
shl
xchg
loope
push
cltd
leave
pop
and
xchg
push
gs
push
xor
pop
shrl
out
mov
mov
push
call
xchg
fwait
adc
pop
mov
fprem1
dec
inc
xchg
mov
iret
adc
scas
shl
jae
xchg
es
popf
lds
es
loope
and
pusha
xchg
sbb
jmp
adc
and
stos
jno
lret
iret
xlat
pop
jae
or
in
adc
aad
stos
out
dec
fistl
and
xor
cmp
shll
out
xchg
xchg
mov
mov
pop
ds
add
shl
addr16
push
popf
arpl
out
dec
pushf
repnz
sbb
or
scas
and
inc
or
negl
sbb
in
xchg
xchg
mov
cmp
lock
mov
movsl
xchg
and
dec
mov
out
daa
shrb
dec
std
stc
or
pushf
mov
fiadds
popf
mov
enter
aad
xor
insb
repz
jns
lds
stos
shll
jg
xchg
imull
dec
repz
add
pop
adc
fstpt
and
or
and
sub
js
iret
pop
lds
loope
lock
std
out
clc
lds
sbb
mov
adc
je
xchg
dec
xor
inc
xchg
push
sbb
loop
xchg
xor
mov
mov
roll
sarb
out
mov
scas
cmpsl
sbb
lahf
sbb
stos
loope
dec
cmp
leave
int
lea
cmp
push
cmp
out
jl
push
in
cwtl
pop
sarl
fdivl
loop
adc
or
flds
repz
test
and
or
push
pushf
icebp
add
and
je
adc
jecxz
popf
rorb
sub
adc
fld
cmp
sbb
mov
pop
and
xor
sbbl
movb
ret
pop
pop
lahf
shrl
cmp
pop
bound
data16
pop
xor
out
push
repz
and
or
pop
xor
roll
cmp
loopne
outsb
ret
nop
mov
nop
cltd
inc
cmp
outsb
ficoml
std
pop
dec
int3
sbb
int3
leave
cmp
int3
xor
movsb
ret
xchg
add
xor
jbe
pop
push
xchg
mov
push
outsb
mov
enter
adc
fdivl
bound
sub
add
ret
dec
push
fs
popf
adc
jle
shl
cmp
outsb
inc
sub
jmp
mov
setge
ret
daa
ret
jb,pn
cmp
mov
movsb
pop
jb
leave
por
enter
loope
outsb
enter
rcrl
mov
pop
dec
int
inc
faddp
outsb
addr16
int
ror
xor
dec
xlat
outsb
pop
xchg
fisubrl
fiadds
ret
fidivrl
cmp
inc
ret
sbb
mov
push
std
lret
outsb
xchg
popa
mov
push
pop
mov
ret
sbb
popa
fdivr
and
outsb
pop
rol
std
out
outsb
cmp
mov
iret
jmp
outsb
cmp
pop
jmp
outsb
mov
pop
movsl
xchg
fwait
sbb
stos
test
xchg
int
xlat
stc
scas
sub
shll
mov
cmp
pop
inc
lret
std
testb
add
out
mov
mov
add
or
adc
lret
ja
stc
sub
xchg
imul
sbb
in
pop
mov
push
or
push
aaa
in
mov
je
int
pop
sbb
test
fnstenv
loope
or
mov
inc
cmp
shll
or
lret
testl
out
jecxz
jno
std
or
add
dec
aad
fadds
test
jns
lds
aad
lret
adc
push
paddw
scas
idivl
cltd
mov
idivb
mull
cmp
adcl
push
jne
mov
cmpsb
loopne
and
mov
fisttpl
sbb
fldcw
xor
pop
mov
mov
and
fwait
ja
and
push
add
lock
outsl
int
iret
sbb
sbb
ss
mov
mov
orb
mov
pop
cmc
ror
loop
addr16
popa
mov
rcll
iret
lods
xcrypt-ecb
cmpsl
lea
aad
or
fmul
adc
loope
jno
sbb
test
adc
fwait
pop
lock
scas
xlat
mov
stc
aad
mov
icebp
inc
sarl
fisubs
popf
sbb
shll
pop
imul
popf
or
mov
std
lret
cmp
data16
sbb
aaa
lahf
inc
push
js
push
push
icebp
dec
lds
dec
mov
sbb
iret
inc
add
cmp
xchg
rorl
scas
pusha
jnp
mov
arpl
jge
inc
inc
inc
cs
outsb
arpl
std
mov
mov
push
jae
dec
push
insb
dec
iret
fsts
test
jno
xchg
mov
xlat
sarl
rorb
lcall
in
imul
mov
in
in
sahf
outsb
jmp
and
jg
jno
pop
leave
push
mov
sbb
es
insl
rorl
es
mov
cmp
mov
rclb
fucomip
sbb
repnz
pop
aad
mov
aad
movsl
sbb
pop
mov
fldenv
jge
popf
andb
push
and
cltd
push
mov
ficoml
dec
int3
loopw
in
enter
xchg
imul
jecxz
lods
adc
lea
and
inc
inc
push
rorb
or
rorb
inc
or
cmp
inc
lds
rorl
into
push
inc
shrb
lods
push
xchg
loope
outsb
pop
aas
or
mov
mov
add
fnstenv
adc
rcll
mov
jmp
mov
aas
adc
sub
mov
ja
sbb
add
mov
jae
movsl
adc
xlat
in
sti
popf
dec
es
repz
aad
nopl
xchg
test
or
ds
inc
mov
xchg
sahf
loope
in
sub
lret
inc
mov
sti
test
jg
adc
movsl
int
out
bswap
inc
xchg
fcmovnb
sub
aad
jno
jbe
xchg
iret
nop
or
in
test
pusha
jno
std
icebp
and
adc
xchg
aas
popf
bound
pop
fimuls
and
mov
dec
mov
mov
xlat
popf
mov
cmpsb
int
data16
push
inc
xlat
shll
mov
movsl
idivl
sub
or
aad
cwtl
jnp
ret
jns
stc
leave
loope
arpl
movsb
in
sub
and
ret
out
jne
testl
xchg
sub
add
mov
imul
or
frstor
scas
xor
rcll
rcll
iret
xchg
leave
mov
in
fnstsw
adc
inc
push
cmp
stos
stc
or
mov
cmp
and
add
pop
mov
jae
mov
or
stc
mov
js
movsb
mov
xchg
xchg
roll
mov
add
adc
mov
lret
mov
sbb
outsb
nop
xchg
aad
push
leave
lds
pushf
je
sbb
shl
xchg
mov
push
jno
out
loope
or
out
into
mov
mov
std
xchg
lret
jbe
and
mov
xchg
xlat
jecxz
stos
ret
inc
jmp
push
xchg
cmpsb
shll
mov
std
add
and
xchg
testl
int
or
xchg
mov
mov
jno
std
mov
js
aas
xor
mov
cltd
add
jg
mov
ret
repz
jnp
in
mov
add
cltd
iret
and
fistpl
xchg
jns
jecxz
and
ret
fistl
repz
mov
mov
sar
std
or
stos
mov
mov
movsb
ss
sub
cld
in
pushl
adc
shl
xchg
fldl
icebp
push
cmp
movl
iret
repz
adc
xor
in
adc
adc
pop
cmp
add
iret
lret
mov
dec
or
icebp
outsb
into
shr
scas
xlat
frstor
leave
mov
pop
popa
cmp
js
pop
inc
jg
fisubs
jb
cmp
fstpt
in
cmpsb
pop
scas
pop
pop
out
and
loope
jmp
dec
lds
add
mov
aad
movsl
sbb
dec
xor
xchg
ret
xchg
test
mov
rol
shll
ret
or
out
cltd
addb
inc
icebp
dec
shlb
ret
dec
jecxz
divb
mov
lret
jne
sbb
in
ss
and
or
call
outsb
cld
mov
push
cmp
stc
mov
icebp
scas
and
cmp
stc
movsb
fnsave
or
add
cmp
rcl
stos
leave
rorl
cmpsl
aaa
icebp
pop
je
xchg
movsl
shrl
xchg
loope
jae
fwait
adc
rcll
sbb
adc
mov
fwait
test
icebp
je
xchg
or
popaw
sahf
or
jl
and
push
lahf
sahf
sbb
movsl
xchg
cmpsl
lock
lods
lods
sub
adc
in
daa
jnp
ret
mov
jmp
cwtl
and
ss
in
ret
adc
adc
add
xchg
mov
cmpsl
jle
repz
clc
stos
mov
push
add
jbe
scas
out
iret
pop
push
xchg
xchg
lds
lret
inc
xchg
adc
cltd
cwtl
adc
in
hlt
mov
mov
fsubp
imul
jae
or
frstor
int3
adc
sbb
rolb
std
cmp
push
adc
pop
pop
or
rcll
xor
pop
loope
add
sbb
iret
stos
ja
fcmovnu
fwait
inc
mov
xchg
jecxz
adc
roll
stos
inc
adc
push
scas
xor
aas
lods
cltd
add
xchg
fldt
in
cmp
mov
add
fldenv
sbb
sub
mov
lods
inc
outsb
shll
sahf
cmp
jg
out
jne
add
bound
adc
into
jp
iret
add
repnz
sbb
adc
push
cmc
fwait
inc
mov
enter
adcl
push
xchg
pop
inc
repz
fnsave
mov
out
shrb
or
fwait
or
xor
iret
aas
xlat
mov
mul
repz
push
ss
fxch
mulps
inc
out
jnp
rcrl
icebp
rclb
nop
xchg
data16
movsl
push
xchg
mov
pop
std
fdivl
mov
aad
sbb
jnp
aas
mov
push
mov
imul
es
xor
xchg
mov
jl
ret
cwtl
dec
ss
xchg
scas
adc
and
aas
es
test
xor
or
mov
mov
xchg
testl
mov
mov
jecxz
jns
jno
or
xchg
xchg
in
repnz
hlt
sub
cmpsl
pop
stos
fimull
and
or
in
in
sbb
int
dec
sub
adc
xchg
pop
add
and
xchg
popf
lret
xlat
jns
mov
jbe
aad
mov
in
jge
or
xor
mov
or
mov
adc
cwtl
mov
xor
movlps
int
add
xor
and
mov
push
test
sbb
add
lock
in
or
cmc
pop
shr
mov
icebp
mov
pop
xor
aad
std
mov
jge
call
sbb
inc
push
fwait
mov
inc
ficompl
lret
sbb
aas
icebp
cmpl
ror
lea
icebp
or
push
xchg
pop
mov
sub
jne
or
test
jbe
outsb
mov
fwait
pop
je
rcll
jae
mov
lret
icebp
out
out
int
shll
cmp
dec
cmp
incl
cltd
std
adc
pop
popf
mov
test
mov
push
std
pop
js
fstpl
add
in
test
adc
add
dec
nop
punpckldq
xor
jge
xlat
xchg
sub
and
mov
cltd
int
add
or
ljmp
sbb
jle
into
mov
gs
sti
pop
in
add
mov
and
xchg
or
ret
out
js
ret
push
mov
fldenv
dec
imull
mov
call
shll
jmp
icebp
add
scas
cmp
dec
loope
cmpsl
mov
stos
and
iret
mov
gs
add
and
fucom
leave
int
fcmovnbe
add
mov
mov
pop
xchg
sub
or
leave
sbbb
sti
or
sbb
xchg
pop
scas
roll
out
cmpsb
scas
xchg
adc
fsubl
xor
clc
repz
ficoms
aad
std
push
pop
push
iret
push
xor
and
xchg
out
mov
insl
stc
or
mov
xor
jle
add
popa
ret
mov
aad
aad
xchg
rcrb
clc
and
out
test
fcmovbe
test
les
mov
sahf
addl
loope
add
mov
loope
adc
shll
jg
stc
xchg
jb
scas
mov
mov
addr16
out
dec
jecxz
adc
bound
xlat
aad
outsb
mov
sar
add
icebp
aas
push
jne
xchg
and
psubw
aad
push
sub
and
mov
leave
dec
int
insl
sbb
mov
mov
sbb
or
adc
fisttpll
mov
and
lcall
dec
pmullw
push
in
pop
mov
cld
notl
mov
sbb
test
xchg
out
or
leave
sub
daa
repz
xchg
adc
inc
adc
std
fwait
clc
mov
mov
and
ss
and
inc
test
les
popf
jl
or
xchg
jbe
xchg
pop
sbb
js
xlat
or
mov
dec
or
xchg
pushf
dec
inc
out
scas
push
movsl
cmp
repz
mov
and
and
outsl
movsl
shlw
xor
add
repz
mov
cmp
test
stc
add
jge
mov
popf
testb
mov
pop
mov
xchg
or
add
aas
cltd
cmp
adc
out
ficoms
aas
pop
adc
mov
add
popf
pop
leave
sti
les
rcrl
lock
repz
scas
mov
adc
std
cmc
imul
mov
xlat
fs
cld
add
lahf
dec
fldenv
adc
out
jle
sahf
stos
pop
adc
and
mov
mov
adc
add
or
ss
sbb
dec
in
or
cltd
incl
mov
xchg
into
adc
cmp
mov
pop
pusha
mov
mov
xchg
mov
inc
mov
lods
roll
jp
leave
push
push
sub
or
loope
fwait
sbb
mov
xor
leave
std
pusha
hlt
inc
xchg
in
outsb
mov
add
mov
xchg
mov
leave
adc
adc
imul
aas
add
jl
lock
repz
sbb
pop
sbb
inc
insb
imul
adc
js
sbb
push
mull
outsb
add
icebp
xchg
es
jg
xchg
cmp
mov
out
aaa
mov
lds
shll
clc
loop
mov
mov
ret
stos
xchg
pop
sbb
mov
mov
popf
outsl
mov
sti
pop
adc
outsb
outsl
leave
lret
mov
push
jge
sti
or
jle,pn
lcall
mov
and
pop
ret
inc
pop
sbb
xchg
jmp
mov
and
std
pop
adc
mov
mov
fwait
xchg
outsb
jb
pop
pushf
scas
lods
outsl
in
sti
mov
lock
push
jmp
cmc
imul
or
sbb
pop
roll
dec
stc
leave
push
dec
fistpl
out
mov
std
repz
add
xor
mov
in
out
mov
xlat
leave
inc
mov
test
ret
repz
mov
dec
push
cmp
adc
sbb
push
idivb
popf
or
and
daa
add
daa
test
add
jp
and
cmp
xor
push
test
push
in
pop
sbb
icebp
rorl
scas
stc
add
addr16
ds
ret
mov
xchg
out
notl
or
or
mov
jge
loope
pop
cmp
or
xchg
scas
dec
or
mov
jl
jge
add
lds
dec
mov
jns
mov
sti
mov
scas
mov
out
cmpsl
or
jg
cltd
or
incb
jo
lret
pop
outsb
testl
jle
repnz
js
fwait
and
dec
cmp
xchg
aas
hlt
mov
sti
xchg
std
mov
fxch
mov
mov
std
fwait
cmpsb
sbb
outsb
push
je
leave
adc
paddsb
xor
arpl
jmp
test
xlat
scas
push
fldenv
cmp
sbb
rcrl
imul
mov
or
jne
jg
jecxz
dec
cmp
pop
pop
pop
stc
add
pop
aad
pop
in
inc
jae
idivl
or
adc
aad
icebp
xchg
add
inc
outsl
movsl
xchg
fstps
mov
aas
lock
lret
aad
ds
mov
shl
cmpsb
inc
xor
rcl
test
icebp
aad
xor
mov
or
imul
pop
xchg
std
repz
rorl
out
xchg
xchg
loope
js
mov
inc
or
ret
movsl
xor
fucomip
inc
pop
xchg
inc
mov
mov
scas
push
mov
mov
mov
outsb
stc
mov
adc
lods
or
adc
sbb
out
adc
ss
jecxz
or
sbbb
lret
xchg
scas
clc
out
jl
insl
jp
mov
ret
testl
jo
sbb
and
mov
push
push
insl
notl
adc
sub
popa
xchg
gs
scas
xor
cwtl
daa
fimull
aad
into
mov
lock
roll
in
adc
add
jle
or
cmpsb
insb
mov
mov
stc
ret
jb
pop
mov
inc
stos
in
push
adc
jne
idivl
mov
adc
mov
or
mov
or
mov
or
xchg
sub
ljmp
mov
dec
add
cmp
fldenv
and
cld
mov
clc
mov
fwait
icebp
mov
mov
mov
inc
push
mov
jmp
sbb
xchg
data16
pop
mov
cmc
dec
or
add
xchg
push
lcall
out
mov
mov
jne
decl
in
fildl
jnp
fldenv
pop
xchg
ret
cld
mov
inc
pop
mov
xchg
mov
inc
cmp
adc
push
fwait
jnp
fst
ja
mov
mov
push
mov
sub
xchg
cmpsb
mov
pop
lahf
mov
mov
pop
xchg
addb
lods
push
pop
sbb
push
mov
adc
jae
and
sub
popf
fwait
pop
sbb
fldcw
or
mov
popl
in
mov
imulb
mov
popf
xchg
xchg
sahf
std
mov
or
movsl
and
adc
adc
shll
ss
fstpl
jge
test
scas
jae
div
fwait
add
lock
adc
xchg
adcl
xlat
lret
in
int3
inc
pop
jno
out
xchg
inc
mov
mov
sbb
stos
leave
push
jge
add
push
add
adc
xor
or
lret
or
imul
stos
mov
hlt
push
stc
fldcw
jbe
lret
and
mull
pop
loope
sti
push
insl
into
icebp
mov
daa
pop
test
aaa
rorl
lcall
cmpsb
mov
xchg
jecxz
icebp
jno
sbb
in
mov
leave
push
ret
cmp
sbb
jne
std
pop
decl
mov
movsb
mov
push
jecxz
in
sti
mov
leave
and
xchg
mov
outsl
mov
push
shll
jle
xchg
jbe
xchg
aad
mov
mov
sbb
sbb
xchg
push
jecxz
xlat
xchg
scas
in
or
insl
iret
scas
in
outsb
icebp
xlat
out
lods
sub
int3
pop
rcll
mov
xchg
int
mov
rclb
in
mov
sti
mov
leave
test
insl
pop
lods
and
sub
cltd
ljmp
push
and
mov
mov
fwait
add
cmpsb
testl
repnz
imul
int3
mov
popf
jmp
aad
or
mov
cwtl
lods
add
cmp
mov
fbld
mov
xchg
adc
and
daa
mov
frstpm(287
call
fstpt
xchg
xor
test
mov
popa
movsl
push
cmp
adc
xchg
movsl
pop
dec
sub
rorl
jae
sbb
push
movsl
xlat
mov
jbe
xchg
shll
iret
in
sar
xchg
jecxz
lret
pop
in
aad
lret
mov
pop
rcll
or
push
push
inc
add
xchg
aad
mov
fidivrl
xchg
lret
std
icebp
mov
adc
je
fnstsw
mov
mov
mov
into
fwait
xchg
shr
dec
in
or
jnp
lret
pop
js
push
sbb
repz
cmpsl
cltd
rclb
leave
xchg
cmpsb
aad
add
cmp
leave
and
mov
aas
xlat
jno
movsl
leave
shrl
enter
dec
fwait
or
xchg
add
popf
loope
mov
pop
leave
mov
in
rolb
sub
out
mov
inc
mov
lea
clgi
push
add
out
leave
ror
sbb
daa
push
jmp
in
mov
push
mov
lds
aad
leave
mov
mov
mov
jb
iret
push
leave
sbb
fnsave
popf
xchg
or
pop
lods
cmc
jle
shrl
jnp
add
sub
xchg
scas
imul
int3
sbb
mov
rcll
clc
mov
outsl
lock
nop
mov
movsb
mov
fwait
outsb
push
jbe
lea
cmp
pop
mov
jne
sbb
inc
ret
jecxz
btr
call
add
int
add
pop
movsl
sbb
ss
int
into
call
loope
dec
int
or
js
pushf
pshufw
mov
cmc
jne
lds
incl
mov
scas
xlat
sahf
jg
ret
adc
stc
jle
cld
dec
js
orb
mov
lods
xor
shrb
aad
push
in
insb
pop
mov
je
sbb
movl
aad
notb
shll
imul
clc
dec
xchg
or
adcl
test
jl
imul
dec
dec
jge
adc
mov
mov
lret
in
inc
mov
or
fneni(8087
dec
sti
inc
jg
mov
adc
xor
rcll
and
insl
fsts
mov
rorl
std
or
test
outsl
cmp
lcall
and
mov
xchg
add
mov
xchg
ss
flds
inc
cs
rorl
loope
cmpsb
imulb
sub
rcrl
sbb
subl
outsl
push
icebp
into
jne
mov
dec
adc
cmp
out
lret
xlat
lods
jo
sbb
xor
dec
sub
jle
scas
popf
fsubl
push
xlat
mov
fisttpll
mov
leave
inc
dec
dec
cmp
cltd
mov
lds
push
loope
mov
xchg
mov
lods
mov
stc
jno
shlb
in
adc
add
xor
mov
mov
push
daa
sbb
pop
xchg
scas
pushw
pop
pop
sarl
jge
ret
shll
or
fucomi
rcr
outsb
mov
xor
fucomi
sbb
cmp
lret
movsb
jl
int
mov
xor
push
and
adc
mov
outsb
sub
adc
mov
xorl
stos
into
and
add
jnp
rsm
cld
call
call
sbb
ret
inc
mov
mov
cmp
add
out
and
aad
sti
movsl
mov
mov
add
sarb
scas
mov
repz
std
roll
std
int3
in
cld
sub
jp
outsb
cmp
xchg
mov
push
icebp
addl
jno
repz
test
and
jo
or
pop
and
mov
jnp
push
int
addr16
ror
orb
rcrb
mov
and
mov
pmulhw
enter
mov
outsb
adc
adc
sbb
movsl
sbb
movsl
sbb
jbe
mov
loop
xor
add
cwtl
jl
aas
std
shl
dec
ret
add
mov
aaa
inc
popf
xchg
push
push
sub
aad
dec
movsl
mov
cwtl
outsl
xor
repnz
leave
icebp
xchg
repz
sti
decb
lds
push
pop
xchg
xchg
mov
push
xchg
pop
loope
ljmp
push
jnp
icebp
xchg
imulb
repnz
mov
out
sbb
aam
adc
std
subb
and
jns
shll
int
mov
rcl
call
cld
jl
jl
ss
ret
jg
sbb
mov
movsb
adc
xchg
sub
cmp
rcr
filds
jg
je
movsl
mov
lds
dec
call
ds
imul
adc
sbb
mov
aas
leave
cwtl
in
lock
out
sub
inc
mov
outsb
push
mov
dec
jbe
out
aas
add
mov
sub
int
sub
clc
daa
sti
add
movsb
ljmp
xchg
push
adc
sub
xor
and
lahf
add
mov
dec
in
lods
ret
shrl
sub
mov
loope
or
movsb
rcrl
lea
icebp
je
inc
cltd
mov
mov
cs
xor
rcll
inc
inc
xchg
jo
in
or
rclb
setne
loope
xor
or
rcll
stc
adc
mov
jg
out
lods
mov
sbb
out
cmc
push
std
in
lret
cltd
lahf
push
mov
js
mov
and
sarl
or
xchg
fwait
jo
mov
xor
repz
xor
outsl
jl
and
fidivrs
fistpl
xchg
cmp
loope
pop
or
fisubrl
inc
jp
jb
and
push
or
insl
aam
nop
repz
push
xchg
dec
inc
fisttpll
pop
test
xchg
loop
and
lret
ret
xchg
scas
aam
add
ret
orb
or
jne
add
xchg
fucomp
push
outsb
mov
ja
mov
push
pop
push
inc
loope
imul
loope
stos
test
xchg
sysret
fidivs
xchg
jb
pop
mov
jmp
dec
int
sub
outsb
or
imul
enter
jmp
mov
or
inc
iret
mov
testb
aas
rcl
push
mov
add
repnz
cmp
in
adc
dec
mov
sarl
pop
mov
scas
divl
and
add
xchg
mov
cltd
rcrl
divl
pop
inc
pop
mov
mov
icebp
arpl
cmp
aad
sbb
cwtl
mov
outsb
jbe
or
pop
push
dec
daa
lock
mov
leave
scas
int
aas
add
fidivl
aad
fimuls
insb
sbbl
or
movsl
jo
xchg
pushf
jle
fs
andb
outsl
sub
mov
xchg
lahf
adc
xchg
sti
push
loop
push
or
out
loopne,pt
dec
arpl
cld
outsb
cmp
mov
jecxz
fiaddl
inc
mov
cmc
loop
cld
out
add
dec
inc
frstor
cmp
adc
and
mov
sub
aas
push
lds
mov
mov
pop
repz
xchg
aaa
push
pop
testb
mov
mov
stc
lods
mov
xor
std
scas
scas
add
cmp
or
adc
and
push
and
xchg
mov
cwtl
mov
std
leave
add
in
lods
mov
ret
fcmovu
andl
push
or
jge
mov
and
cmp
test
in
into
pop
lock
leave
faddl
stos
xor
lcall
or
jg
call
push
scas
adc
mov
loope
sbb
mov
and
pop
lahf
cmpsl
jno
mov
xlat
lret
add
dec
mov
movsl
cmp
loope
dec
ret
xchg
fnsave
push
push
je
stc
mov
mov
dec
cmp
inc
outsb
mov
push
pop
clc
lret
outsb
pushf
pop
mov
mov
cltd
and
test
inc
pop
rcll
and
repz
lods
or
in
stos
test
or
add
push
sbb
outsb
sbb
xor
popf
aam
sbb
cmp
sbb
imul
lret
lcall
sbb
test
rol
ficompl
mov
rcll
add
mov
ja
xchg
dec
mov
pop
xor
scas
add
icebp
ljmp
jl
in
mov
cltd
sub
out
int
xor
pop
jbe
add
xlat
imul
lods
seta
mov
dec
xor
iret
add
mov
icebp
inc
inc
outsb
leave
jmp
outsb
dec
mov
mov
shrb
lret
sbb
push
sbb
inc
mov
cld
or
cltd
mov
pushl
add
out
push
push
fwait
mov
mov
sbb
jecxz
loope
test
inc
jge
gs
inc
sti
jge
icebp
shll
stc
rorb
ljmp
pop
fsubr
pop
or
pop
sbb
or
or
mov
std
and
mov
fucomp
pop
shrl
pop
mov
xchg
jbe
dec
xor
outsb
cmp
iret
repnz
in
scas
sbb
inc
pop
popf
ss
sub
idiv
cltd
movsl
add
or
mov
or
cmp
loope
xlat
mov
xchg
xchg
mov
imul
outsl
pop
xchg
sbb
sahf
cltd
std
cmp
mov
fsts
lds
sti
mov
fstpt
jae
cltd
lret
leave
in
fs
stc
mov
cmp
xor
xchg
decl
std
mov
outsl
xlat
popf
or
incl
sub
mov
mov
adc
icebp
and
movsl
mov
mov
cmp
mov
iret
xorb
not
pop
adc
jge
imul
out
mov
or
aad
jnp
add
subl
test
inc
daa
aam
and
mov
lret
mov
out
ljmp
mov
cli
pop
sub
inc
roll
jne
pmovmskb
sbb
mov
out
outsl
xchg
push
add
aad
or
jns
popf
and
cmp
test
adc
shll
icebp
aas
js,pt
shl
fwait
jecxz
and
inc
xchg
faddp
shlb
ficoms
insb
mov
add
popf
fwait
mov
push
orl
adc
scas
xchg
pop
xchg
ret
dec
cmp
addr16
xchg
mov
mov
dec
aam
btr
and
adc
jmp
jg
mov
cmpsl
shlb
xchg
lret
dec
aad
mov
in
adc
pop
lods
jne
mov
mov
insb
sub
adc
dec
cmp
jae
mov
sbb
rcll
sbb
repz
movsl
leave
mov
pop
mov
mov
fwait
sub
movsl
jns
jecxz
pop
sbb
xor
fdivrs
xor
mov
popf
push
push
in
out
flds
cmpsl
aam
out
out
ret
adc
inc
xchg
outsl
lret
les
dec
cmp
push
pop
mov
into
fwait
iret
pushf
dec
ja
xlat
sbb
ja
mov
lods
adc
mov
movsl
adc
icebp
pop
jg
ret
mov
or
les
pop
stos
pop
mov
mov
mov
in
les
inc
xor
movsb
icebp
adc
shl
popf
out
lods
cltd
xor
dec
sub
adc
and
mov
jecxz
pop
jb
add
scas
xchg
xchg
xor
jae
jecxz
lret
fwait
adc
out
negl
aas
xor
or
jne
adc
popf
add
stos
lret
cmp
cmc
outsl
shll
jbe
std
and
xchg
mov
lods
ds
outsb
in
adc
lahf
mov
fldl
and
jg
jne
fwait
pop
loope
push
lds
add
pop
in
divl
xchg
pusha
jp
aad
mov
mov
lods
sub
sub
loope
out
test
in
insb
inc
mov
sbb
push
fdivrp
lret
and
iret
xchg
pop
jecxz
aad
scas
adc
out
movsl
lea
and
jne
xchg
or
xchg
lds
js
sbb
ret
lcall
out
iret
loope
insl
xchg
adc
ss
ret
jl
jg
cltd
xchg
jle
aas
mov
int
sbb
rcrl
jge
mov
jae
xchg
mov
in
adc
ret
leave
pop
xchg
ffree
rorl
aad
sub
xchg
sbb
adc
xchg
sbb
mov
js
pop
add
pop
shll
pusha
addr16
jne
add
int
decl
fwait
xchg
push
sub
ja
mov
stc
imul
iret
xchg
fwait
pop
adc
test
icebp
adc
dec
mov
pop
aaa
mov
add
push
inc
mov
out
test
ret
fwait
clc
outsb
frstor
int
loope
repz
or
ret
mov
sbb
icebp
jl
hlt
mov
jo
stc
cltd
dec
je
int
adc
popf
shll
rcll
xchg
mov
rol
fwait
repz
cmpsb
add
or
movsb
and
xlat
movsl
cmovle
out
push
rcr
lret
pop
xchg
jge
mov
fwait
loope
push
decb
in
daa
je
shll
xlat
mov
add
scas
iret
mov
ret
or
fcmovnbe
icebp
xor
mov
add
jne
xchg
mov
loope
idivl
pop
shll
lcall
mov
mov
ret
nop
popf
out
add
repz
je
xchg
fwait
add
sub
pop
ror
jnp
negl
rcrl
or
mov
dec
xchg
xchg
mov
jbe
sti
sbb
aam
xchg
lds
mov
fidivl
adc
inc
out
add
test
repz
in
sbb
out
and
inc
ret
push
sbb
jge
pop
ret
hlt
enter
xchg
xlat
sub
shll
fwait
xchg
in
rclb
inc
imul
pop
jge
test
hlt
and
shrl
adc
add
in
dec
jge
lret
mov
jecxz
test
or
mov
xchg
push
lret
add
lret
in
xchg
inc
xor
push
icebp
data16
shlb
idiv
jge
icebp
movsl
fnsave
and
sub
mov
hlt
loope
aad
add
add
icebp
shr
adc
ror
and
pushf
inc
mov
scas
mov
sbb
mov
shl
mov
iret
push
aas
mulps
jnp
rorl
orl
add
rcll
sub
mov
jg
ret
je
sbb
mov
popf
and
adc
rcr
push
imul
mov
data16
mov
and
and
add
adc
jnp
ffree
imul
xchg
push
pop
push
pop
push
mov
add
movsl
mov
push
mov
int3
cmpsb
pop
fldcw
push
jnp
and
hlt
mov
push
popf
mov
insl
inc
shlb
imul
mov
cmp
stc
xchg
jge
pop
int
mov
call
pop
push
adc
hlt
jns
mov
jge
in
jae
inc
sbb
mov
push
jmp
pop
cltd
enter
push
jns
das
in
cld
cld
cs
inc
cli
loope
mov
rcrb
inc
sbb
outsb
cmp
ds
and
lcall
dec
sub
mov
and
xchg
sbb
movsl
leave
or
rdmsr
mov
xchg
jmp
sbb
loope
out
lods
xchg
xchg
pop
adc
pop
rol
inc
and
sbb
lods
popf
mov
in
outsl
div
xchg
fabs
pop
incb
fistps
rol
jecxz
mov
aas
adc
sub
sahf
or
jnp
mov
icebp
jp
idivl
sbb
sub
sub
jl
aad
sub
push
stc
rcr
add
in
pop
repz
add
and
mov
sub
hlt
ja
adc
xchg
pop
out
dec
pop
add
dec
mov
sbb
add
xchg
adc
sub
cwtl
sarl
xor
pushf
add
into
add
popf
jnp
and
mov
hlt
push
add
test
xchg
xchg
cltd
pushw
not
sbb
leave
push
add
jo
mov
mov
dec
sahf
fcoml
mov
xchg
out
aaa
mov
jle
sub
sar
dec
push
jno
and
repz
jnp
icebp
mov
andb
xor
or
push
sbb
adc
es
sbb
movsl
adc
cltd
popf
dec
sub
js
xor
mov
and
ffree
sub
ret
jl
cltd
sti
cmp
fiaddl
das
icebp
std
sar
jbe
sti
mov
stc
loope
cmpsb
lret
and
arpl
mov
mov
or
push
in
repz
enter
sarl
icebp
insl
sarl
repnz
fisubs
xchg
cmp
ret
div
fcos
mov
fnstsw
movl
sti
cmp
cltd
cmp
int3
lcall
rcrl
cmpsb
inc
sbb
mov
mov
int3
lret
mov
dec
movups
push
fwait
imul
or
notb
scas
shll
sti
inc
scas
ficoms
out
add
cmp
ret
sub
and
popf
enter
mov
dec
push
sbb
shlb
idivl
fcomi
pop
cltd
mov
and
pop
adc
xchg
lds
xchg
xchg
test
pop
hlt
xchg
mov
push
pop
imul
mov
pop
imul
mov
lea
lds
adc
pop
fldl
out
cmp
fadds
sub
sbb
enter
lds
inc
jb
iret
icebp
jl
and
push
in
cmp
and
in
imul
add
les
adc
daa
add
popf
mov
sbb
addb
fprem
hlt
xor
les
aas
fwait
push
aam
and
mov
into
lcall
in
movsl
addr16
mov
mov
adc
inc
fwait
dec
push
js
aas
add
jle
and
sub
imul
mull
mov
jne
adc
jecxz
fistpl
jle
and
cmp
xchg
or
jmp
xchg
leave
pop
sbb
cmpsb
mov
or
fldenv
or
xlat
dec
sub
jl
cs
dec
xlat
mov
aad
adc
or
movsl
mov
mov
adc
mov
adc
std
in
fwait
ret
sbb
and
inc
aas
add
test
pop
clc
ret
in
mov
add
addl
push
sub
mov
adc
xchg
adc
mov
fsts
mov
add
push
mull
fcmovnb
in
xchg
inc
into
xchg
push
icebp
xlat
shl
push
movsl
ja
mov
push
mov
sbb
movsl
add
cltd
sbbb
xor
lds
fidivs
pop
loop
decb
cltd
out
movsb
xchg
xchg
int
xchg
lock
adc
movsl
xlat
outsl
popa
fstp
fs
loope
pop
jl
stc
ret
shl
fnstsw
cwtl
adc
movsl
lds
add
cmpsl
pop
ret
idiv
shrb
mov
mov
push
cs
pop
jge
mov
xor
inc
adc
sahf
mov
xchg
pop
in
xlat
int
scas
cmp
jnp
adc
or
mov
sbb
loopne
jb
test
je
mov
jp
nop
and
mov
cmpsb
scas
adc
or
sub
or
add
push
rolb
std
dec
insl
add
mov
sbb
je
xchg
dec
pop
jge
xchg
and
outsb
data16
or
mov
jbe
cmp
dec
mov
fwait
js
in
pop
add
pop
shll
mov
sbb
lods
jnp
iret
bnd
mov
cltd
scas
std
inc
xor
push
and
push
in
or
cltd
sub
out
lds
xor
dec
push
bound
ret
icebp
insl
pushf
jl
mov
mov
testl
mov
out
ljmp
ret
pop
xor
pop
add
inc
sarl
add
jge
mov
out
mov
xchg
mov
cmp
call
out
fnsave
adc
leave
add
shlb
mov
mov
imul
dec
dec
xchg
cmp
dec
sbb
movsl
and
movsl
jnp
scas
xchg
pop
cld
pop
movsl
hlt
or
push
icebp
xchg
test
jnp
fwait
inc
adcb
adc
leave
cmp
pop
sti
fwait
mov
mov
jb
scas
mov
pop
shrl
mov
scas
fildl
out
iret
test
testl
outsl
adc
mov
pop
ret
sti
mov
xlat
out
lods
sub
lsl
push
dec
push
and
cltd
stos
fisttpll
pop
mov
lcall
mov
movsl
shl
negl
ds
hlt
idivb
jb
sbb
arpl
xchg
xor
stc
cltd
lds
pop
loope
jge
sti
aad
int
int
sarl
sti
ljmp
test
loope
xchg
dec
lock
pop
adc
repz
or
stc
mov
jge
inc
add
iret
stos
adcb
scas
inc
jno
cltd
sbb
stos
mov
movsb
stos
hlt
test
dec
inc
sub
outsl
fldenv
pushf
xchg
mov
cmp
iret
in
or
mov
push
aam
rep
std
pop
lock
ret
scas
adc
jb
stc
xlat
push
lds
aad
iret
popf
mov
or
pop
cmp
js
mov
fwait
and
into
xlat
loope
jle
or
push
mov
mov
std
xchg
and
mov
andl
movsl
lret
add
sahf
lds
outsb
push
sub
pop
ret
cli
outsl
not
frstor
and
fsts
imul
jge
sub
or
mov
lcall
sbb
mov
int3
mov
shll
and
or
jecxz
ret
mov
mov
inc
popa
sub
mov
fldl
mov
loop
sbb
mov
icebp
aaa
shr
idivb
loope
and
mov
mov
in
inc
add
into
add
setge
adc
incl
stc
cwtl
jbe
xchg
xlat
ret
mov
out
insl
orps
les
inc
aas
or
popa
iret
popf
mov
jecxz
mov
mov
sbb
jne
inc
std
popf
popw
cmp
adc
or
jae
pop
mov
movsb
mov
in
xchg
mov
lds
jecxz
mov
icebp
and
out
push
pop
lds
scas
outsb
dec
in
inc
jge
data16
fidivl
iret
icebp
xchg
jl
repz
or
adc
sbb
outsb
loopne
push
xchg
or
rcl
xchg
adc
pusha
cmp
mov
aad
pop
pop
dec
ss
pushf
shr
fmuls
ret
insl
cltd
idivl
add
xorl
in
mov
mov
add
sbb
jno
or
fwait
and
pop
mov
jno
rorl
ljmp
or
mov
fmull
mov
aad
add
in
or
jecxz
fucomi
xchg
and
push
roll
lret
shll
xlat
mov
adc
mov
gs
fldln2
fucom
xchg
dec
jecxz
fsubrl
icebp
add
inc
xchg
in
jg
flds
lcall
repz
in
xchg
lds
inc
into
notl
mov
and
and
sub
adc
pop
std
jbe
rcll
jge
sarl
xor
xlat
cmp
mov
iret
push
int
adcb
fisubs
pop
xchg
xchg
add
inc
out
lahf
loope
aad
shll
mull
leave
adc
mov
scas
jb
xchg
aad
xchg
adc
jb
or
mov
lods
sbb
addr16
leave
out
adc
dec
or
sub
repz
rcl
mov
mov
repnz
rorl
shr
xchg
xchg
cmp
mov
and
cmp
adc
or
add
pop
mov
fwait
xchg
insl
repnz
leave
movsl
pop
shrb
loope
xlat
xchg
mov
repnz
fnstcw
adc
js
pmulhw
fstp
push
adc
int
out
outsb
idivb
loope
scas
mov
sbb
or
pop
or
add
jecxz
outsb
leave
lds
pop
rcr
jnp
in
xchg
mov
or
sqrtps
and
dec
insl
out
imul
aad
rorl
pop
jle
jbe
xchg
mov
popf
std
add
mov
outsb
cmpsl
push
push
cmp
loope
cltd
add
popf
je
mov
cltd
xchg
rorl
push
jo
fdivs
add
mov
mov
jae
pop
negl
add
xchg
push
xor
iret
mov
sub
subl
mov
pop
push
xchg
cld
daa
jbe
out
mov
mov
adc
int
sub
pop
popf
pop
call
aaa
mov
int
div
sub
or
inc
xchg
pop
sbb
out
xchg
movsb
dec
sub
push
adc
outsb
movsl
psrad
repz
mov
mov
or
xchg
out
jne
adc
sbb
popf
push
es
mov
jae
sar
mov
in
push
pop
xchg
cltd
pushf
popf
xor
mov
lret
adc
scas
in
fisubrl
mov
icebp
nop
jmp
insl
mov
jo
int
xchg
jmp
push
aaa
mov
or
fistl
test
mov
push
negl
adc
mov
fnsave
and
mov
sbb
dec
xor
js
jecxz
scas
add
lds
xchg
pop
inc
std
pop
shlb
mov
dec
fst
outsb
push
mov
movsl
ljmp
mov
mov
push
test
xchg
flds
cmpl
sbb
repz
mov
movsb
inc
sbb
test
icebp
flds
int
imul
sti
popf
mov
push
dec
sar
sbb
add
popf
shrb
pop
fldcw
test
pop
add
adc
or
xchg
seta
xchg
repnz
and
btr
xor
pop
cmpb
pop
xchg
ficomps
sahf
jmp
lret
icebp
mov
hlt
mov
sbb
lods
sahf
loope
adc
testl
and
popf
nop
out
mov
adc
rorl
aad
pop
mov
lret
pop
in
stc
dec
xorl
adc
adc
imul
mov
arpl
std
mov
sarl
add
cld
adc
scas
test
out
pop
sbb
popa
into
xor
lret
jmp
cmp
mov
mov
fst
leave
aad
mov
sbb
xchg
into
add
mov
popf
mov
push
mov
std
inc
or
dec
push
cmp
cltd
add
mov
jnp
sbb
sarl
imul
popf
sbb
jbe
xchg
add
nop
adc
es
jbe
or
orl
add
cmp
dec
xchg
test
sbb
jg
rcr
imul
xlat
pop
ja
add
jp
xchg
aas
mov
ror
in
js
fistl
jns
jecxz
pop
pop
jl
sbb
mov
jge
aas
inc
repnz
pop
mov
inc
mov
flds
mov
xchg
xlat
ja
icebp
inc
mov
add
mov
xor
jo
aad
scas
in
outsb
aas
or
or
rcrl
mov
in
out
and
pop
leave
fwait
mov
add
rcll
outsl
cmp
mov
bound
out
and
ret
xchg
jno
sbb
movsl
xchg
outsb
ljmp
jae
xchg
add
xor
lcall
pushf
mov
add
dec
mov
call
mov
push
je
adc
add
push
les
fcmovnbe
scas
and
insl
cltd
test
or
repz
or
loope
out
divl
adc
adc
xchg
fmull
or
mov
addr16
sbb
mov
push
loop
aas
xchg
mov
dec
mov
add
in
jae
sbb
xchg
cmp
xchg
sbb
movsl
xchg
inc
sbb
and
arpl
pop
and
dec
and
jbe
ret
setge
mov
jno
mov
cmc
out
in
cmpsb
sub
mov
repz
lret
xchg
enter
outsb
pushf
mov
pop
scas
pop
push
xchg
and
insb
in
pop
and
out
cmc
clc
sbb
roll
sub
divb
and
push
mulb
mov
jmp
jecxz
aad
pop
xchg
out
jp
push
xor
out
sbb
xchg
movsl
mov
jp
rorl
push
dec
loope
mov
sub
call
add
add
cltd
dec
mov
les
enter
fists
icebp
push
es
fstps
adc
leave
sahf
notl
mov
push
js
push
mov
jg
mov
jle
sub
lds
out
cmc
in
xchg
cwtl
xchg
lret
jecxz
test
cmp
leave
inc
cld
push
call
or
push
je
sbb
mov
mov
cmp
or
xchg
and
popa
sub
shr
jbe
add
xchg
fwait
in
jno
inc
loope
test
add
add
mov
dec
clc
and
adc
popf
rorb
pop
add
xchg
es
or
insb
neg
add
fstl
mov
mov
xchg
xor
out
imull
fsts
mov
shrl
xchg
add
and
jecxz
icebp
fstpt
or
sbb
popf
negl
pop
mov
adc
sub
push
fldenv
add
adc
mov
imul
xchg
ss
mov
test
cmp
leave
insb
add
and
cmc
xor
cltd
ja
mov
mov
lock
outsb
cmp
aaa
add
test
in
gs
sbb
sti
loope
xorb
stos
jg
movsl
cmpsl
jne
mov
scas
insl
or
sarl
jle
inc
dec
jae
or
jbe
adc
mov
leave
outsb
sarl
mov
jg
sbb
sub
jo
or
xchg
cld
sbb
xor
popf
push
popa
out
push
icebp
push
icebp
or
dec
in
xchg
int3
mov
dec
xchg
or
cwtl
cmp
xchg
js
sahf
and
mov
popl
pop
lret
nopl
add
xchg
add
adc
dec
call
repz
xchg
int
mov
hlt
lock
fldt
cli
sbb
xchg
shlb
mov
and
pop
mov
and
or
sahf
mov
aas
and
sbb
bound
lds
xlat
nop
imul
jno
icebp
adc
test
mov
adc
ror
xor
pop
mov
xchg
xor
adc
incb
sbb
mov
jae
xchg
adc
xchg
dec
rorb
xlat
mov
lock
sahf
cld
int
cmp
in
xchg
out
in
mov
mov
mov
pop
repz
add
fldenv
cmp
xor
addr16
xchg
call
mov
in
shll
ficoms
inc
shrl
xchg
es
push
scas
fiadds
sub
scas
loope
sub
mov
xchg
adc
out
fwait
cltd
adc
lcall
fld
hlt
adc
imulb
push
push
or
out
fldl
dec
ret
xchg
xchg
lea
aas
lcall
jbe
sbb
adc
pop
std
ja
sti
popf
ds
pop
vphaddubw
add
shrl
fwait
mov
mov
or
inc
jno
mov
or
cmp
das
popa
add
repz
pop
arpl
outsb
and
std
dec
cld
fs
mov
lock
loope
cmc
lea
fld
outsl
mov
loop
loopne
out
sbb
mov
adc
add
pop
icebp
testl
sbb
push
std
pop
in
sub
js
cmp
je
sbb
sub
aad
mov
repz
xchg
out
movsl
sbb
inc
mov
adc
pop
shl
xchg
or
popf
mov
add
cmp
lret
sbb
add
jne
aad
inc
xchg
jg
fnstsw
push
and
xchg
xchg
iret
push
mov
fcmovnb
jg
lret
test
xchg
les
mov
shl
pop
aas
mov
stos
into
lcall
out
scas
lret
hlt
or
sti
and
sub
stc
fidivrl
mov
lods
mov
in
stc
dec
lret
mov
xchg
repz
les
cmc
shll
cltd
aas
icebp
paddw
jb
aad
call
aad
loope
je
mov
fwait
lret
cltd
xchg
and
fstpt
mov
jle
mov
std
mov
mov
add
or
in
lret
out
pop
sarl
mov
adc
push
aad
ror
cmc
lcall
mov
xchg
mov
out
or
dec
push
imul
and
cwtl
or
cmp
movsl
mov
lds
mov
popf
mov
and
mov
cmpsb
xchg
sbb
mov
fwait
negb
dec
fnsave
loope
notb
scas
or
sbb
in
bswap
ffreep
jle
testb
shrl
aam
in
mov
xchg
dec
or
or
or
push
aad
dec
mov
popf
adc
in
or
mov
aam
cmp
in
in
or
push
rcll
mov
pushf
mov
inc
adc
mov
psubq
fwait
cwtl
mov
add
inc
imul
movsl
add
jmp
sub
test
mov
in
scas
inc
lods
in
addr16
mov
iret
xlat
jb
fcomi
and
data16
jb
and
xchg
and
xlat
pop
sub
pop
jae
mov
pop
addr16
cmpsl
pop
fstl
pop
jge
and
mov
jb
or
shl
aad
adc
xchg
adc
shrb
pop
insl
adc
pop
mov
std
sbb
shll
or
icebp
push
cmpb
mov
inc
xor
cmc
stc
adc
std
movsl
or
jbe
fwait
popf
cmpsb
pop
out
notb
add
daa
popf
sbb
repz
jb
mov
fldenv
ja
pop
leave
or
mov
mov
push
into
addr16
lret
mov
jo
rcrl
adc
icebp
xchg
mov
negb
mov
jg
decl
ja
stc
mov
dec
adc
movsl
cmpsb
jecxz
mov
xchg
mov
inc
divl
iret
mov
xchg
divl
adc
adc
xchg
insb
sub
setne
jecxz
or
cwtl
push
icebp
repz
repz
or
xchg
cmc
das
stc
mov
sbb
pop
xor
int
add
scas
mov
in
jno
lds
ds
mov
pop
pop
dec
inc
cmp
pop
sub
or
fwait
jge
add
sbb
fdivs
sbb
flds
cmpxchg8b
iret
cld
subl
popf
call
lods
cmp
xchg
pop
loope
sbb
xor
js
in
mov
cmp
fcoml
and
cltd
cltd
pop
insb
jo
cltd
sarb
ret
push
rorb
movsl
icebp
or
aad
or
loop
int
mov
adc
add
leave
mov
in
sbb
xchg
mov
dec
shrb
rol
jmp
icebp
lcall
mov
sbb
repz
mov
addr16
fcmovne
inc
jne
in
mov
xchg
sbb
aas
jp
xchg
inc
pop
adc
popf
icebp
and
pop
jp
add
jbe
inc
sti
movsl
or
mov
lods
xchg
in
cltd
pop
hlt
mov
rorl
movsl
nop
mov
mov
in
inc
daa
aas
and
jg
andl
addr16
rcrl
lods
shll
jno
jb
fwait
call
ret
fwait
movsl
jb
sti
adc
inc
inc
jb
leave
mov
adc
inc
mov
mov
jne
test
rol
pop
mov
mov
mov
cmpl
mov
sub
xchg
movsl
jbe
sbb
jne
loope
or
xchg
jne
leave
or
add
and
jg
adc
and
push
js
lock
pop
add
ja
mov
pop
pop
jecxz
mov
jg
aad
jmp
stos
daa
repz
cmp
enter
mov
mov
or
cmc
pop
xchg
adc
test
xchg
pop
iret
data16
mov
loopne
loop
mov
int
loopne,pn
lods
push
jecxz
mov
movhps
or
daa
jnp
mov
loope
outsb
xchg
xchg
shll
sub
loope
jbe
and
xor
mov
cmp
xchg
rolb
icebp
inc
aad
outsl
aad
sti
fstpt
lds
movsl
dec
cli
daa
jno
add
add
mov
push
mov
xor
adc
sti
insl
mov
sbb
xchg
and
pop
sbb
imul
xlat
sbb
pop
pop
icebp
ss
iret
fisubrl
mov
shl
cmp
mov
mov
es
jbe
fwait
and
push
scas
push
test
adc
daa
mov
std
icebp
bswap
sub
iret
nop
fisttpll
shll
movsl
ud2
shll
cs
cltd
adc
adc
outsb
out
mov
cmp
mov
xchg
stos
in
popf
pop
or
decb
dec
sti
ds
dec
cmpl
repnz
and
ret
aas
setge
sarb
mov
and
shrb
cli
lock
inc
movsl
out
aam
iret
cltd
pop
jmp
jb
xlat
ljmp
jecxz
inc
add
mov
add
or
scas
mov
or
mov
xchg
imul
jno
out
in
aas
lds
xchg
mov
jnp
fistl
xchg
pop
and
mov
add
scas
xor
sti
movlps
movsl
repnz
aad
mov
or
push
lods
fisttpll
adc
and
je
and
mov
fwait
mov
popf
mov
inc
repnz
mov
add
or
aas
jb
icebp
mov
xchg
and
jecxz
std
mov
out
push
push
mov
stos
movsl
mov
sbb
fldl
jno
mov
pop
popf
psllw
icebp
das
mov
pop
sbb
sbb
int
in
fs
pop
sub
lods
mov
push
scas
cmpl
mov
aad
xchg
adc
lds
and
and
mov
outsb
add
add
jb
loope
fcomi
jo
fs
repnz
fwait
scas
mov
sbb
sbb
or
add
ret
mov
fstl
cmp
shll
push
fwait
add
clc
aad
mov
outsb
cmp
aas
ret
orb
jno
mov
seta
adc
sbb
mov
aas
xchg
popl
add
aaa
jns
mov
inc
mov
add
std
hlt
xchg
stc
nop
loope
bnd
mov
cmp
cmp
outsb
mov
sti
ret
xchg
out
mov
pop
or
mov
ja
fwait
and
mov
mov
test
xchg
fcmovnbe
outsl
cli
xchg
in
mov
jecxz
scas
mov
cmp
std
xchg
fldenv
xchg
push
or
pop
movnti
gs
sub
cmpsb
mov
std
inc
pop
jg
fadds
adc
xchg
pop
ret
rcr
fnstenv
sbb
mov
imul
dec
and
jmp
jle
pop
rcrl
push
jo
out
cld
daa
sbbl
sarb
mov
push
andl
jg
in
jle
mov
pop
cmp
add
ds
cmp
cmp
push
inc
movsl
out
mov
iret
inc
adcl
push
inc
add
mov
push
insb
xchg
add
lds
dec
mov
push
das
loope
xor
std
bnd
and
add
in
fdivl
std
adc
dec
xchg
xchg
in
insb
frstor
mov
roll
aaa
test
add
fistl
fnstenv
mov
adc
pop
cltd
dec
jmp
scas
mov
push
fsubs
jno
hlt
popa
or
xchg
aas
repz
adc
pushf
mov
jno
xchg
mov
in
mov
rorl
loope
mov
or
dec
adc
cmp
jno
or
popf
in
fistl
orl
add
jb
ret
sbb
out
add
iret
xorl
ja
movl
mov
aas
mov
negl
push
push
and
stos
adc
loope
adc
ret
in
sub
cmp
xchg
ljmp
data16
mov
sbb
adc
out
rorl
std
mov
jae
add
aaa
and
leave
popf
xchg
shrl
aam
daa
lock
in
push
pop
adc
xchg
sti
mov
mov
sbb
jnp
aad
jb
or
dec
rcl
bound
scas
pop
lret
sbb
xor
stos
or
adc
cmp
or
repz
loope
sbb
cmpsl
mov
movl
ret
cltd
mov
and
out
enter
rol
stos
ror
ss
outsb
xchg
ficoml
dec
add
out
mov
lds
mov
aad
xchg
add
dec
jno
sti
mov
cltd
call
lret
xchg
in
dec
hlt
cmp
mull
lds
or
cs
or
jp
pop
mov
xchg
mov
lods
fstpt
ja
sbb
scas
dec
movsl
daa
cmp
or
iret
mov
xor
notb
sarl
sti
mov
sbb
jmp
mov
inc
mov
pushl
mov
jno
repz
stos
fisubl
cmpsl
lds
xchg
xor
mov
imul
sub
adc
adc
repz
lret
je
shl
shl
setno
mov
add
daa
lods
test
out
outsb
cld
jo
cmpl
sarl
mov
lahf
imul
add
and
sbb
xlat
push
pusha
push
push
mov
mov
or
roll
mov
rorl
out
pop
out
movsl
jns
sbb
mov
stc
in
mov
je
adc
in
clc
add
movsl
fdivrl
lds
adc
fsubp
xchg
mov
push
cmp
pop
test
ja
xlat
xor
scas
sub
or
addr16
cltd
xchg
outsl
dec
dec
jns
xchg
mov
cmp
jno
fisttpl
lock
dec
data16
cmpsl
add
stos
data16
in
dec
jge
rcll
sbb
rcrl
xor
jg
movsl
movsb
xchg
inc
inc
aaa
and
in
scas
aad
xchg
lcall
or
data16
into
fwait
pop
aad
sub
xchg
or
je
add
xor
add
popf
push
outsl
adc
mov
adc
mov
add
and
pop
add
adc
push
push
movsb
push
mov
jno
or
mov
mov
ret
std
xchg
in
jbe
popf
rcll
mov
pop
adc
mov
rcll
or
jmp
setne
iret
lods
dec
sti
mov
mov
adc
jno
in
mov
sbb
mov
adc
addr16
fs
mov
sbb
xor
addl
test
fwait
hlt
fcmove
adc
mov
js
push
outsb
std
into
mov
mov
push
rol
xchg
cld
push
jg
std
mov
arpl
mov
lahf
mov
pop
setnp
imull
mov
sub
dec
mov
cld
jecxz
ljmp
arpl
ficomps
test
xlat
int3
push
in
test
aad
jno
test
xchg
add
stos
mov
int3
int
pop
aad
cltd
xor
sti
cld
fwait
adc
xchg
loope
cmp
popf
jnp
pop
cld
scas
iret
in
imull
adc
lds
scas
in
lret
loope
pop
jecxz
and
testb
mov
lret
fidivrl
fwait
in
mov
adc
push
inc
jb
sahf
jle
rorb
cmc
ficomps
in
mov
rcrl
psllw
jle
movsl
ss
add
loope
mov
xor
push
jns
fiaddl
mov
mov
inc
mov
inc
movsb
shl
repnz
shl
jo
cmpsb
mov
adc
cs
add
and
mov
je
out
neg
xor
sbb
and
mov
mov
add
and
js
add
cmp
xlat
pop
sbb
dec
insl
cmp
addr16
mov
aaa
add
cltd
es
jne
mov
or
mov
inc
inc
cmp
cs
addr16
cltd
fwait
pop
inc
ja
add
inc
mov
dec
cltd
dec
mov
sub
inc
sbb
sub
xlat
xor
sti
sarl
inc
mov
mov
popf
and
andl
cmp
mov
into
pop
mov
mov
and
or
fsts
into
mov
mov
adc
jnp
mov
jle
js
jecxz,pt
or
mov
and
mov
cmpsl
cli
es
add
xlat
or
frstor
addr16
adc
sbb
or
mov
iret
rol
es
mov
aam
decl
rcrb
dec
sbb
xchg
gs
jge
pop
pop
xchg
mov
sahf
or
add
and
mov
adc
add
add
scas
aas
aaa
and
cmc
ljmp
fxch
xor
jg
adc
int
mov
lret
lret
and
or
add
jo
pop
pop
addb
jne
jp
xor
add
aas
call
sbb
ret
cmp
jnp
mov
push
xchg
xchg
subl
out
jge
mov
not
or
clc
call
clc
out
fdivrp
push
jge
icebp
lds
xchg
lret
inc
std
mov
clc
push
popf
sbb
mov
cmc
add
pop
in
stos
mov
aad
fwait
movsl
xchg
or
xchg
add
sub
rorl
cmp
ret
cmp
mov
leave
in
add
insl
stc
faddl
cld
daa
sbb
jg
pop
jg
xor
subb
ficoml
dec
mov
inc
xorl
test
aaa
sbb
repz
jecxz
out
aam
adc
ror
js
xlat
rolb
popf
xchg
ret
xchg
xchg
jns
inc
sbb
adc
add
push
or
outsl
and
add
sti
fcmovnb
xchg
xchg
stc
test
shl
cmp
std
je
jge
shll
or
adc
jns
sub
mov
popf
sbb
sbb
out
mov
sbb
pop
add
inc
mov
je
notl
cmp
std
sti
lds
mov
repz
addr16
fwait
int
loope
icebp
sti
sbb
stc
add
dec
cltd
sbb
jg
shll
mov
lds
incl
jge
leave
xchg
cli
movsl
ljmp
cmp
je
mov
lret
cltd
xchg
mov
add
mov
mov
fistpl
and
cmp
cmp
ljmp
push
ja
mov
gs
xchg
in
int3
jg
fstpt
add
push
add
jp
mov
out
fwait
sbb
mov
mov
adc
mov
xchg
aas
std
pop
jp
ljmp
shll
aad
mov
or
sti
dec
cmp
idivl
cmp
inc
cmp
test
xchg
jnp
dec
cmp
repz
out
mov
ror
inc
mov
pop
out
jb
ret
dec
std
frstor
jns
or
fs
or
cmpsl
sbb
cmp
gs
xchg
sbb
scas
mov
lds
xchg
sub
mov
out
fwait
scas
add
sbb
jo
ror
ds
inc
negb
adc
jle
xchg
add
call
mov
movsb
test
adcb
push
xchg
pop
dec
loope
push
call
xchg
mov
lmsw
icebp
xchg
roll
adc
jo
xchg
iret
test
bound
mov
movb
call
and
inc
std
iret
mov
xor
shl
scas
leave
mov
enter
mov
iret
lods
outsl
leave
fistl
stc
jecxz
mov
dec
add
aad
scas
cmp
adc
jecxz
jl
outsb
xor
xor
fldl
inc
inc
rcll
or
dec
movsl
pop
insl
dec
pop
movsb
out
mov
ja
popa
xchg
iret
outsl
in
dec
rcrl
lcall
adc
inc
adc
stc
in
shrl
mov
ret
jmp
jecxz
out
push
cltd
insl
les
pop
adc
pop
fwait
pop
loope
xchg
enter
or
or
movsl
sbb
call
add
mov
or
iret
movsb
push
adc
int
mov
dec
push
std
aad
out
daa
mov
sbb
clc
js
mov
xchg
jecxz
lcall
jns
pushf
ljmp
insb
movsl
add
push
mov
popf
cvtps2pd
fwait
sbb
fimuls
mov
sbbb
mov
movsl
lods
adc
mov
aad
and
nop
out
adc
cmp
xchg
js
jb
int
fdivrs
addl
or
stos
sar
pop
repnz
adc
std
or
inc
push
cwtl
mov
mov
sub
and
stos
mov
xchg
mov
adc
es
pop
xor
leave
jns
lret
mov
lret
iret
fstpt
sarl
inc
dec
out
fidivs
xor
xchg
outsl
or
std
pop
fninit
fstps
in
jmp
out
js
loope
jnp
mov
mov
outsl
pop
xchg
fsubl
push
clc
xchg
shll
xchg
mov
insl
add
fst
pop
bound
loope
sti
pop
cmp
mov
xor
mov
cmpsb
push
sahf
mov
int3
stc
pusha
jb
int
out
rcll
fwait
icebp
mov
pop
pop
mov
fmulp
repnz
repnz
adc
je
jecxz
mov
out
dec
lock
xlat
outsb
pop
mov
std
mov
xchg
lret
sar
cs
lahf
movsl
add
frstor
pop
cmpsb
lea
sbb
mov
inc
sbb
fsts
mov
xor
mov
hlt
fnsave
stos
enter
mov
push
jbe
pop
push
fwait
add
sbb
bound
sub
cmc
mov
xchg
sub
in
sub
xchg
lahf
sbb
mov
xchg
fiaddl
push
dec
cmpsl
add
cmpsl
jbe
sti
or
mov
mov
xchg
call
pand
mov
mul
add
cmp
mov
mul
sbb
mov
add
mov
icebp
sbb
popf
mov
adc
lock
aas
vpsubsb
sbbl
daa
sub
rolb
xlat
push
outsb
sbb
incl
insl
repz
aas
and
fldl
int3
mov
xor
stc
in
mov
in
loope
dec
out
in
add
leave
popa
mov
lcall
aad
mov
cltd
lds
frstor
js
popf
mov
dec
loopne
rol
pop
test
mov
call
adc
adc
int
push
push
ss
hlt
sub
mov
pop
xor
mov
cltd
xor
mov
mov
mov
adc
adc
sub
add
xchg
push
imul
sub
mov
jge
mov
lock
faddl
mov
shll
sahf
lret
repz
imul
or
mov
loope
mov
xor
sub
adc
pop
mov
mov
push
or
cltd
lahf
movl
seta
aam
dec
mov
jl
negl
movsw
mov
sbb
adc
sahf
btr
add
clc
push
adc
mov
jp
xor
leave
push
jne
rcrl
mov
aad
leave
push
cli
pop
sbb
or
jecxz
jo
leave
mov
lods
out
or
mov
frstor
mov
inc
mov
pop
or
push
add
cltd
jae
mov
adc
fnstenv
push
iret
sbb
lods
in
rcr
dec
movsl
nop
and
subl
loope
leave
jg
in
jno
mov
lock
mov
loope
push
and
adc
jae
pop
sbb
xchg
add
lds
popf
sti
mov
mov
aas
jb
sbb
aas
add
mov
adc
stc
or
es
lods
test
hlt
imul
fdisi(8087
push
das
lcall
popl
pop
subl
dec
sbb
mov
ljmp
fstp
fldenv
lock
lock
or
lock
adc
loope
std
repz
cmp
dec
cmovbe
scas
jecxz
jbe
mov
xlat
adc
mov
leave
int3
jg
mov
mov
test
xchg
pop
mov
mov
xchg
scas
data16
sbb
mov
popf
lock
in
jmp
lods
push
or
lret
or
in
push
add
mov
cmp
leave
ds
xor
xchg
mov
cmpsl
dec
cmp
jno
mov
adc
pop
push
testb
dec
icebp
jae
roll
mov
or
negl
in
pop
jecxz
push
cmp
mov
xchg
movsl
adc
int3
fs
jne
notl
pop
incb
mov
int3
int3
mov
or
je
aad
adc
mov
rcr
in
and
rorl
jp
dec
loop
loope
jl
icebp
hlt
pop
xlat
sbb
pop
dec
adc
sarl
repz
testl
fld
or
cmpsb
lahf
and
mov
repz
fwait
add
out
sub
sub
fwait
push
jle
rcll
mov
mov
ret
mov
inc
dec
loope
mov
adc
call
mov
cltd
xor
add
inc
notl
cltd
iret
xchg
fwait
push
out
dec
mov
jle
jl
cs
xor
fdivrs
push
and
popf
add
push
subl
mov
sub
add
insb
aad
lret
xchg
jecxz
mov
pop
mov
cwtl
inc
nop
outsl
fnstsw
sub
into
push
add
fistpl
clc
sti
jns
xchg
cltd
in
imul
ja
movups
ret
jo
or
stc
sub
insl
cmp
mov
and
inc
negl
std
stos
mov
jno
enter
adc
xchg
mov
aas
mov
dec
or
stc
sbb
mov
add
stos
scas
fbstp
out
stc
cld
addl
mov
sbb
enter
out
push
rorl
xchg
stc
or
or
sbb
in
xchg
int
stc
pushf
jae
or
mov
mov
jbe
ror
movsl
les
div
fyl2xp1
fwait
mov
outsb
xchg
and
ret
add
enter
sbb
pushl
aad
jno
wbinvd
xchg
mov
xor
repz
scas
dec
jge
rcrl
stc
push
mov
xchg
dec
xor
jne
mov
xor
hlt
xor
push
and
dec
lods
imul
cwtl
test
andb
inc
push
xchg
shlb
cltd
add
push
jg
div
popf
std
lods
fdivrs
cmpsb
sub
sti
mov
ja
fisttpll
call
or
xlat
popa
or
ffree
jle
jbe
fwait
rcrl
inc
call
sarl
dec
jge
popf
div
mov
sbb
mov
stos
xchg
mov
and
and
mov
mov
out
rol
cmp
shl
mov
in
xor
fistl
in
call
jno
xchg
icebp
int
cwtl
jge
fldl
aam
xorb
dec
pop
stc
sbb
lea
outsb
mov
xchg
and
or
lret
inc
scas
xor
and
dec
fcmovnbe
adc
mov
icebp
icebp
roll
xchg
jg
sahf
xchg
pop
int
or
push
cmc
aas
xchg
xor
and
subl
mov
mov
fbstp
adc
lds
add
jno
adc
imul
xchg
sbb
insl
and
mov
cmp
mov
in
xchg
mov
mov
adc
pusha
sarl
sti
repz
fxch
jbe
mov
mov
lds
sbb
out
mov
push
xchg
xlat
jb
icebp
mov
xchg
sbb
xor
and
dec
lcall
fadds
pop
mov
pop
mov
mov
add
push
in
test
xchg
leave
divb
movsl
push
inc
sbb
or
fwait
lcall
or
adc
dec
dec
mov
mov
jno
dec
scas
jb
iret
sbb
add
cmpl
adc
adc
dec
clc
push
fmul
fs
fwait
mov
les
into
fnsave
fisttps
popf
or
shl
pop
mov
insb
out
fld
push
fists
inc
sbb
or
fdivrs
in
mov
incl
and
jecxz
xchg
dec
cltd
push
in
notb
or
jnp
pop
les
lcall
or
sbb
insl
stos
push
test
mov
or
jg
cwtl
mov
add
roll
pop
add
push
jp
cmc
dec
enter
add
mov
pop
das
xchg
es
cltd
sbb
aad
jb
sbb
dec
xchg
fistl
out
adcb
insl
pop
jecxz
movsl
dec
sbb
or
inc
decl
jg
mov
loope
loope
mov
test
jl
sbb
dec
sbb
popa
xchg
inc
inc
jmp
push
loopne
fistl
out
mov
pop
lds
sbb
or
xor
sbb
inc
out
sub
stc
repz
leave
mov
xchg
and
mov
push
fwait
sbb
push
enter
cmp
stc
std
xchg
push
or
shrb
je
mov
cmp
inc
jmp
repz
loope
aas
es
push
xor
sahf
xchg
or
mov
pop
xchg
xchg
icebp
jb
add
inc
mov
cmp
mov
cmp
or
icebp
add
xlat
sarl
fsubl
in
data16
jmp
outsl
xchg
mov
out
add
lcall
out
loop
xlat
sbb
mov
inc
outsb
mov
jo
sbb
pop
fwait
adc
sub
adc
xlat
or
mov
jecxz
inc
xor
dec
or
cmpb
jnp
rcrl
mov
jecxz
testl
shll
loope
cld
in
addr16
add
sbb
cli
xchg
push
adc
addr16
add
inc
iret
out
mov
jge
pop
adc
jmp
jb
stc
lret
mov
fnstsw
add
xchg
popa
or
test
popf
addb
adc
push
mov
mov
xlat
test
mov
fwait
adc
cld
lret
ret
in
xchg
shrl
cmp
js
arpl
adc
enter
mov
out
lds
sbb
jp
push
mov
dec
xlat
push
cs
aad
push
leave
ja
out
add
imul
ljmp
mov
add
and
mov
cld
mov
leave
enter
popa
stc
xchg
mov
fldl
lea
shll
mov
jp
iret
pop
pushf
into
shl
rol
push
test
inc
add
mov
mov
dec
scas
leave
push
xchg
push
hlt
mov
sub
loope
iret
mov
repnz
or
or
mov
mov
xlat
icebp
sub
shll
cmpsb
sbbl
int
pop
mov
lret
and
andw
or
jne
mov
sub
dec
mov
xchg
cltd
sub
lcall
loop
fiadds
sbb
inc
pop
fwait
xlat
pop
add
xor
lret
cltd
mov
imul
xchg
cmpsl
movsl
adc
aaa
repnz
rep
mov
test
jg
pop
dec
sbb
lret
lock
push
movsl
sbb
and
iret
in
pandn
pop
mov
mov
bsf
mov
sbb
ret
jb
cmp
push
rcrl
mov
or
scas
out
jbe,pn
add
out
outsb
mov
xor
lcall
mov
test
aad
ss
rclb
sub
cmp
lret
in
add
mov
ret
cmp
pop
cltd
add
rorb
test
mov
movsl
mov
lret
dec
add
jno
std
adc
movsl
xchg
add
lret
xchg
ds
or
mov
or
push
cmp
jl
xchg
and
sub
mov
lret
out
add
xchg
pop
xchg
lea
and
sti
xchg
mov
lds
mov
xchg
mov
or
jge
stc
jle
lret
popf
ljmp
push
out
lock
jge
jmp
scas
out
popa
jno
loope
lods
mov
icebp
ret
lret
rclb
out
jne
popf
aas
or
adcl
cmp
je
mov
fwait
jno
popf
loope
sbbb
mov
and
sbb
push
mov
mov
mov
mov
leave
sar
xor
mull
push
rcll
mov
xor
lock
popf
jnp
pop
dec
es
or
fldl2t
lods
jge
std
xchg
jbe
xlat
leave
aas
enter
pop
stos
cmpsb
mov
pop
sbb
loope
adc
clc
insl
leave
dec
add
int
movsl
inc
enter
jae
jecxz
pop
popf
out
mov
mov
xchg
mov
xchg
cmc
adc
xchg
in
iret
fwait
in
stos
int3
adc
mov
aam
adc
mov
adc
add
cltd
sbb
lret
addl
in
mov
mov
nop
sti
sub
cltd
enter
xchg
or
sti
cmp
xchg
mov
mov
loope
jne
rcl
add
adcl
push
or
mov
pop
popa
mov
cmpl
iret
inc
xorl
add
xchg
adc
adc
rcrl
xor
inc
mov
jecxz
in
movsl
mov
push
xor
lret
sub
jae
cltd
mov
mov
jb
jecxz
xchg
les
aad
movl
aam
stos
ja
xlat
div
neg
fnstenv
and
jnp
xchg
xchg
iret
and
or
mov
rcl
icebp
pop
cmc
leave
pop
iret
cwtl
stc
mov
add
int
cmpsb
enter
dec
repz
push
xchg
mov
sub
cmc
pushf
sbb
data16
ret
clc
mov
adc
sbb
xchg
jecxz
dec
adc
out
in
xchg
or
xchg
mov
dec
fidivrs
rcrl
faddl
rcll
xchg
xor
rorl
and
jae
lds
mov
jge
mov
popf
icebp
movsl
lock
jo
sbb
or
and
pop
bound
xchg
jmp
xchg
or
jbe
lds
dec
mov
adc
ffree
mov
and
xchg
sbb
dec
out
icebp
mov
lret
imul
imull
popf
mov
or
inc
mov
mov
mov
push
jl
jb
or
mov
add
and
lds
or
xor
das
mov
les
push
int
adc
outsb
jle
cs
dec
ret
jp
in
es
adc
rcll
aad
sub
cltd
ljmp
sti
movsb
pand
and
outsl
adc
add
xor
mov
jg
jns
roll
add
fnsave
pop
roll
sub
fisttpll
cld
or
pop
jl
jb
xchg
cmpsl
cmpb
sub
jecxz
fst
insl
loop
add
aad
xlat
push
adc
pop
ret
or
or
xlat
out
add
je
mov
sbb
push
ja
movsl
inc
and
mov
lret
fisubs
aam
int
mov
mov
pop
or
lds
add
aas
xor
mov
ret
add
bswap
xchg
sahf
ss
or
aas
shlb
std
mov
cmpsl
cmp
or
sbb
movsl
add
jno
or
or
loopne
push
mov
mov
dec
in
daa
xchg
push
mov
xchg
test
mov
scas
pop
fnstsw
in
pop
sub
movsl
int3
mov
xchg
and
lahf
jne
add
scas
pushl
adc
xchg
dec
inc
mov
testl
mov
xor
sti
fucom
scas
xchg
cmpsl
fwait
push
nop
xor
out
xor
cltd
dec
xor
or
mov
stc
xlat
aad
cmp
bound
mov
sbb
cli
fwait
pop
cmp
xchg
test
mov
repnz
in
insb
xchg
popa
or
popf
sub
sbb
fstp
cmp
arpl
push
popa
imull
push
push
mov
int
stc
pop
mulb
test
jge
adc
adc
leave
add
push
fstpl
mov
repz
pushf
mov
loop
rcll
rorb
pop
outsb
aas
repnz
add
cs
movsl
ljmp
call
aam
mov
xchg
in
adc
pop
aad
jnp
and
stc
sbb
in
fidivl
push
hlt
out
popf
call
popf
xchg
dec
loope
das
xchg
insb
xlat
sbb
pop
loope
fnsave
xcrypt-cfb
cmpsl
movsl
aas
jns
stc
mov
mov
sub
inc
cmp
lahf
imul
mov
mov
pop
lret
xlat
cmpsl
xchg
inc
lcall
pop
aas
mov
rorl
std
mov
xchg
ret
jo
mov
into
jb
mov
pop
insb
lret
or
adc
mov
push
sub
aad
mov
xchg
jnp
fstpt
push
inc
sbb
mov
loope
inc
sti
lret
pop
mov
add
mov
sub
imul
sub
xchg
fucom
fmul
lret
xchg
cs
mov
pop
ret
sub
add
pop
inc
xlat
mov
add
sbb
sbb
std
mov
xchg
popf
repnz
testb
xchg
dec
scas
in
mov
imul
mov
in
and
pextrw
lods
outsl
rol
mov
mov
lock
pop
icebp
sbb
je
cmpsl
jle
enter
jp
scas
xchg
add
adc
orl
mov
in
iret
rolb
mov
mov
adc
icebp
pop
scas
sbb
scas
cmc
fdivrl
mov
add
stos
sbb
xor
icebp
jnp
jb
movsl
loope
add
out
or
inc
xchg
test
popf
test
lds
sti
bound
mov
push
lret
pop
push
jmp
cmp
mov
leave
push
mov
xchg
sti
push
ret
or
leave
pop
mov
mov
mov
add
iret
or
xchg
jecxz
mov
fisttpl
fadds
adc
nopl
bound
xchg
sub
sbb
sbb
mov
or
adc
sub
push
stc
notl
dec
push
jg
mov
push
repz
loope
adc
fwait
icebp
popa
lods
push
aad
inc
xchg
sbb
add
adc
popf
mov
lret
aad
dec
adc
iret
fstpt
mov
and
mov
mov
sti
fsts
add
popf
hlt
cmc
fnsave
push
xchg
add
dec
in
ja
mov
xchg
add
jno
cltd
scas
mov
push
fiadds
add
cmpsl
push
pushf
stos
repnz
dec
or
fistl
fildl
add
xchg
inc
lock
loope
mov
lods
not
std
sahf
leave
adc
mov
mov
adc
adc
mov
dec
sbb
outsb
mov
xchg
cltd
lret
push
leave
add
jmp
or
cmp
push
leave
jmp
cmp
daa
sub
pop
push
stc
xchg
lcall
dec
dec
roll
lcall
roll
mov
fstps
or
rcrl
jae
add
xchg
fucomp
data16
dec
sbb
dec
in
and
negl
jns
sbb
xchg
out
movsl
stos
jo
and
mov
mov
std
push
hlt
ret
dec
cwtl
mov
adc
jecxz
out
int3
leave
xor
es
psubw
popf
pop
xor
out
sbb
cs
xchg
mov
and
loop
sbb
cmp
mov
dec
and
sarl
add
movsb
cmp
xchg
sub
arpl
mov
mov
test
mov
mov
sti
daa
aas
inc
add
in
xlat
loopne
mov
push
or
pop
mov
fimuls
loope
outsb
in
push
loope
sbb
loope
outsb
mov
add
dec
push
push
loope
shrl
das
loope
xlat
outsb
inc
imul
rcrl
shrb
movsl
cmp
imul
mov
sahf
rcrl
je
cltd
mov
jp
mov
rcrb
mov
popa
sarl
aas
fistpl
fwait
in
sbb
ja
mov
decl
jg
rcll
lahf
mov
cmp
js
rcrl
das
xchg
scas
add
mov
ret
aas
adc
and
lret
out
icebp
shll
sbb
sti
rorl
mov
mov
sbb
mov
jg
std
jbe
ret
mov
rcll
lret
mov
in
jecxz
push
sarl
push
and
pop
popf
ret
xlat
movsl
int
push
mov
sub
mov
jnp
adc
adc
xchg
and
mov
fdivrs
dec
ror
pop
jg
xchg
xor
xchg
adc
outsb
push
pop
push
aam
push
push
inc
push
xchg
fscale
rclb
loope
mov
daa
popf
pop
adc
shll
ja
sbb
aas
adc
stc
sub
out
movsl
mov
aaa
pop
cltd
pusha
xor
sti
adc
mov
and
adc
jbe
fildl
daa
fstl
mov
lret
xor
sarl
xlat
sub
es
aaa
mov
inc
fldl
and
mov
adc
xchg
jo
add
xchg
subl
mov
or
pushf
mov
lds
adc
inc
mov
lret
stc
call
out
or
or
mov
jecxz
outsb
ret
pop
push
std
dec
repnz
pop
fstpt
mov
push
das
xor
movsb
stos
data16
pop
cmpb
inc
pop
movl
lret
cltd
int
jp
sbb
fstps
add
insb
pop
gs
insb
out
xlat
mov
xchg
mov
std
mov
xchg
sbb
cmp
or
addl
pop
pop
jle
cmc
pop
mov
cli
aad
cld
jbe
and
leave
adc
mov
or
int
mov
mov
lds
sarl
repz
int3
cmp
int3
dec
xor
lds
xor
push
pop
cmp
fxch
mov
popf
fwait
lods
test
mov
fdivl
lock
adc
add
adc
add
int
xlat
fwait
or
rol
mov
cmp
dec
dec
out
jno
sysret
movsl
cwtl
add
push
mov
addr16
mov
imul
push
movsl
stc
or
pop
pop
xchg
addr16
call
in
mov
mov
xchg
iret
cmp
icebp
sbb
hlt
aaa
fcomps
xor
mov
daa
scas
pop
mov
mov
xor
adc
int
test
sarl
es
mov
in
xchg
adc
mov
cmp
lret
jmp
jo
add
mov
xor
divl
adc
lret
leave
aas
or
pop
fnsave
jae
divl
icebp
mov
ds
sbb
cwtl
loope
popf
orb
xor
cmpb
in
mov
cmpsb
pmulhw
ret
jns
xor
sti
and
out
pop
subl
mov
popf
mov
out
ffree
and
jo
scas
imul
call
movsl
cmpl
pop
cmp
mov
pop
lret
push
mov
xchg
add
aas
mov
cwtl
add
gs
mov
mov
movsl
add
add
outsb
and
cwtl
jno
add
xchg
mov
xchg
add
shl
fwait
lds
stc
cmc
int
push
add
adc
js
ret
iret
loopne
dec
mov
mov
aad
daa
lcall
hlt
lods
psrlw
and
mov
in
lods
and
popf
mov
xlat
ja
sti
dec
into
add
shll
popf
or
lret
scas
xlat
icebp
inc
mov
inc
fwait
cltd
mov
es
sarl
xchg
outsb
sbbb
movsl
lahf
adc
xor
or
add
shl
fcomi
mov
lods
adc
push
cmp
sub
mov
pop
cmpsb
aam
mov
add
fwait
test
stos
adcb
loopne
mov
fldenv
push
or
mov
add
and
xor
xor
stc
fwait
xchg
std
jp
call
std
insb
or
and
inc
scas
mov
xchg
call
xchg
divb
sbb
clc
and
hlt
fcmovnu
or
push
xor
lret
adc
dec
jno
leave
ret
std
cmc
leave
and
push
fnstsw
xchg
or
lods
and
mov
mov
sub
sub
outsb
test
rcrb
daa
mov
add
dec
sub
outsl
cmpsl
jg
xchg
mov
cwtl
testl
add
mov
mov
adc
loope
js
xor
push
xchg
push
fimuls
aaa
mov
sbb
mov
add
sbb
adc
popf
sbb
mov
xor
mov
cmc
or
aad
adc
cmp
jno
xchg
in
lret
test
aas
int
outsb
pushf
mov
push
ja
divl
sub
rcll
pop
out
pop
loope
inc
xchg
fstpl
jge
aas
syscall
jecxz
loope
jle
sbb
fbld
push
je
int
xor
repz
xchg
jge
nop
xor
outsl
movsb
adc
or
mov
aad
iret
cmp
pop
mov
adc
fsubl
jecxz
pusha
dec
adc
aad
add
imul
jge
scas
hlt
fld
pop
mov
sbb
scas
dec
mov
sub
push
add
pop
je
pop
or
dec
add
aad
mov
int
inc
cmpsl
mov
adc
or
xchg
test
dec
push
pop
iret
adc
dec
outsb
lods
cmp
mov
int
push
pop
or
out
push
add
push
movsl
rcrl
in
mov
cli
lcall
pop
inc
jb
sbb
cmpsb
test
add
inc
xchg
scas
jecxz
sbb
in
mov
sbb
jnp
add
cld
pop
jl
jl
jbe
icebp
movsl
pop
pop
jl
lds
add
out
neg
int3
pop
and
outsb
pop
mov
outsb
push
pop
scas
mov
push
mov
mov
dec
mov
mov
and
mov
dec
aad
shll
mov
cmc
fldcw
out
sbb
int
rcll
scas
xchg
mov
inc
sbb
mov
in
push
shrl
jle
stc
mov
mov
negl
mov
inc
xor
shlb
xchg
mull
lcall
xchg
scas
mov
leave
adc
ficoms
incl
or
sub
xor
push
lcall
xor
ss
mov
xor
adc
out
mov
push
cli
add
mov
arpl
adcl
mov
fsts
add
aam
pop
dec
jp
jmp
xor
stos
adc
add
rol
xor
pop
pop
lcall
sbb
sub
ss
std
adc
push
std
cmp
aaa
sbb
test
orl
jle
sub
imul
sbb
outsb
sbb
mov
jp
add
mov
scas
jbe
mov
sbb
inc
orb
in
dec
loope
loopne
aas
mov
sysenter
add
iret
leave
mov
ja
pop
fnsave
jecxz
mov
paddsw
cmp
es
add
and
lea
or
add
fidivs
fsubrs
mov
inc
icebp
or
or
outsl
aad
std
cmp
cmp
or
xchg
popa
adc
push
mov
adc
add
lods
scas
sub
or
jae
cltd
lds
adc
scas
mov
sbb
nop
jecxz
cmp
in
in
jo
ret
addr16
icebp
stos
in
test
int
lret
aaa
sti
in
enter
xchg
adc
cmp
icebp
stos
fwait
or
fsts
xchg
shll
icebp
jae
sbb
mov
loope
popf
iret
fwait
xchg
pushl
xchg
notl
std
cmp
lods
cmp
inc
sub
shl
icebp
rcrl
or
dec
wbinvd
test
xchg
add
dec
xchg
xchg
ret
or
jb
test
in
or
mov
pop
cmp
pop
jno
xlat
xchg
shr
notb
shl
inc
popf
inc
not
add
movnti
icebp
mov
add
mov
and
sub
and
fisttpll
imul
sbb
stc
call
xor
test
psubw
sub
add
or
cmc
mov
sbb
push
sti
mov
sub
shrb
je
sbb
jp
add
push
push
mov
or
mov
push
ss
jecxz
outsb
stc
sbb
sub
inc
sbb
stos
iret
pusha
repnz
repz
xlat
out
sbb
mov
mov
outsb
mov
aas
add
push
or
mov
rcl
loope
or
or
out
push
mov
andl
cmc
adc
xor
pushw
sbb
add
outsb
jb
mov
rcll
push
or
lods
test
std
dec
xor
add
push
inc
popa
fnstenv
sbb
adc
call
repz
movb
in
jbe
xlat
roll
mov
jp
push
in
ficoml
cmc
out
mov
and
xor
xlat
icebp
inc
mov
stos
sbb
mov
outsb
pop
icebp
rcll
pop
hlt
stc
xchg
rcll
orl
loopne
dec
mov
mov
icebp
mov
addb
xchg
dec
mov
int
jb
hlt
das
inc
stos
inc
add
aam
sarb
inc
xor
pand
lds
stos
inc
rorl
incl
ss
mov
aas
loope
and
push
xorb
jbe
mov
outsb
andl
push
lcall
popf
jge
scas
and
sbb
lods
incb
scas
mov
mov
jecxz
cltd
es
add
pop
mov
outsb
fildl
loopne
mov
push
add
loope
icebp
insl
and
add
pop
out
jmp
and
ret
push
jbe
lret
pop
test
shll
jmp
mov
mov
cmp
adc
mov
xlat
jo,pt
in
imul
or
mov
fs
sbb
rorl
imul
cmp
outsb
iret
scas
mov
or
and
decl
cltd
add
mov
movsl
out
ret
xor
mov
lods
xchg
popf
xchg
mov
icebp
sub
cmp
shll
insb
add
cmp
fwait
pop
movsl
cmpsl
daa
dec
xlat
lods
popf
in
push
in
test
xor
andl
jno,pn
imul
sub
sub
test
ja
xchg
or
out
add
push
sbb
cmp
cltd
pushf
mov
fwait
test
mov
ret
scas
jge
adc
sbb
outsb
insb
or
xchg
jmp
xorl
flds
ret
push
hlt
cmp
std
cmpsb
dec
mov
fstps
mov
xor
fimuls
adcl
cmpl
dec
ret
and
mov
jg
lds
ret
mov
out
es
dec
rcrl
insl
sub
inc
cmp
test
fwait
xor
call
mov
sbbb
push
push
or
lods
xor
repz
dec
adc
pop
sbb
pop
mov
and
sbb
cltd
leave
xchg
icebp
mov
add
sbb
adc
cltd
fwait
or
sbb
je
scas
mov
push
sbb
dec
in
out
popf
add
inc
xchg
xlat
fnop
sub
mov
sbbl
push
popf
iret
jecxz
cmpsl
add
adc
and
or
jecxz
and
fwait
popa
inc
repnz
std
push
aad
sbb
push
cmp
lds
popl
fs
daa
in
add
popa
mov
mov
push
mov
xchg
call
sbbl
lods
ds
mov
mov
push
pop
lcall
mov
loope
xor
inc
in
leave
add
add
dec
cltd
push
push
xchg
sti
jmp
adc
mov
xchg
xchg
iret
iret
mov
leave
in
mov
mov
jno
sbb
mov
lret
adc
iret
ss
out
test
xchg
test
into
ffree
fdiv
ss
or
fistl
dec
clc
bswap
mov
in
push
scas
addr16
std
jo
xchg
mov
and
inc
inc
mov
mov
bound
mov
adc
insb
jb
mov
push
mov
aad
push
mov
fwait
call
adc
popa
push
and
ss
leave
out
subb
pop
rcll
mov
outsl
or
fcmovnb
sti
movsb
mov
adc
es
push
je
sti
in
aad
xor
rolb
fistpl
imul
and
mov
mov
loopne
jb
mov
iret
add
leave
or
scas
adc
sti
lds
lds
iret
jb
out
fsubrl
xchg
cmpsb
stos
dec
jb
pop
xchg
std
sahf
ret
jo
rcll
fyl2xp1
icebp
or
sti
addr16
lret
xchg
xchg
and
mov
push
jecxz
stos
xchg
es
data16
jnp
das
leave
xchg
sahf
dec
clc
push
vpcmpeqw
add
movsb
adc
mov
xchg
data16
sbb
xchg
mov
popf
daa
pop
mov
aas
lret
movsl
shl
fdivs
mov
cltd
jno
fucomi
mov
fdivs
fstpt
out
dec
loope
sbb
and
iret
mov
rcl
lcall
xchg
cmp
or
or
jg
fwait
roll
or
iret
push
jne
aas
scas
xchg
adc
mov
repz
lret
adc
add
adc
jecxz
repz
in
jmp
mov
jmp
or
loope
jge
push
mov
out
mov
imul
mov
icebp
xchg
sbb
lret
mov
out
sbb
aas
movsb
mov
xchg
outsl
inc
inc
adc
jecxz
add
sbb
add
daa
rclb
pop
in
lods
fldenv
mov
repz
or
add
in
pop
rcll
into
xchg
mov
loope
add
fstl
rcr
adc
add
xchg
pop
loope
xchg
fwait
lcall
cmp
sti
xchg
jge
fwait
cltd
mov
arpl
jmp
shr
repz
xor
adc
int
and
pop
inc
and
pmulhw
adc
sbb
mov
ret
adc
push
lcall
xor
aas
clc
mov
sahf
test
int
add
xorl
pop
outsb
adc
stc
inc
cs
insl
sarl
std
dec
adc
mov
mov
mov
cltd
sub
adc
mov
movsl
sbb
mov
jb
in
xchg
ljmp
ret
sbb
xor
push
in
mov
int
call
addr16
mov
mull
fstpt
xchg
xlat
jo
stc
dec
hlt
ss
sar
xchg
ret
add
out
arpl
int
or
cmp
sub
rorl
je
in
jecxz
push
loopne
mov
shll
mov
hlt
mov
icebp
adc
jns
rcl
repz
aas
adc
fldl
cmp
push
xchg
cmc
mov
aad
push
jne
lret
mov
and
leave
ss
in
psraw
dec
and
notl
pushw
or
shll
aad
cmp
xchg
addl
imul
icebp
int
cmpb
mov
stc
repz
pushw
loope
mov
icebp
int3
mov
mov
rcl
ss
sti
or
cmpsb
loope
dec
sbb
shll
aad
imul
sbb
in
cmp
adc
or
mov
jbe
testl
leave
std
xchg
cld
cmp
mov
xchg
test
mov
and
adc
movsl
lods
rcrl
stc
sbb
lcall
xchg
push
mov
xchg
testl
fwait
sub
xchg
mov
add
int3
cmpsl
cmp
pop
or
mov
xchg
xchg
mov
bound
sbb
fwait
icebp
pop
cmp
pop
pop
jl
inc
lds
adc
or
fwait
negl
fldl
jno
xchg
mov
call
scas
loop
mov
mov
xchg
mov
cmpsb
sbb
mov
and
jecxz
int
faddl
adc
outsl
out
xchg
lret
and
add
addl
ja
xchg
scas
mov
shll
icebp
addl
fwait
pop
xor
ss
popf
in
pop
dec
popf
movsb
mov
adc
dec
push
add
jno
pop
mov
nop
repz
adc
aas
jo
xlat
ds
mov
sub
int
and
push
mov
push
and
lcall
add
or
add
and
inc
add
std
fildl
jnp
add
ds
int3
jge
lds
lock
aaa
or
cs
leave
sub
or
mov
icebp
inc
pop
sbb
xor
fidivs
or
into
adc
add
mov
pop
orl
inc
hlt
add
jmp
scas
cmp
daa
and
xchg
ja
movsl
adc
add
sbb
pushf
mov
xor
push
ja
lcall
jl
fdecstp
call
in
xor
dec
adc
push
pop
lock
and
push
sbb
or
icebp
push
and
cmc
icebp
lods
mov
jnp
mov
sahf
leave
add
push
adc
push
ss
shrb
popf
dec
hlt
imul
mov
mov
outsb
xchg
or
scas
fstpt
adc
mov
stos
add
and
pop
fstps
ja
xchg
leave
stc
enter
jle
or
ss
or
jl
pop
int
sub
in
jg
add
sbb
clc
cmp
dec
sti
cmpsb
ret
out
in
mov
jecxz
dec
fstl
sub
cmp
sub
std
es
test
lret
test
in
decl
and
xchg
and
lea
sahf
add
iret
or
dec
mov
movsb
push
std
jge
inc
add
outsb
fld
mov
call
adc
cmp
sbb
test
jo
and
mov
mov
xchg
decb
xlat
push
mov
icebp
adc
rcrl
and
dec
ja
in
nop
jbe,pt
mov
outsb
lds
sub
test
xlat
std
mov
and
sub
loope
repz
jecxz
xchg
sbb
js
cmp
aad
loope
stc
inc
mov
and
faddl
inc
push
pop
sbb
arpl
aaa
lds
ljmp
jmp
std
add
mov
frstor
cltd
xchg
mov
pushf
imul
sbb
or
ss
stos
sbb
dec
scas
push
movsb
imul
inc
and
loopne
out
and
xor
push
aaa
in
mov
popf
pop
or
adc
xchg
mov
mov
mov
cmp
sub
ja
adc
mov
stc
fxam
xor
xchg
icebp
xor
mov
and
add
stos
push
adc
daa
jbe
sarl
cmp
imulb
push
clc
dec
add
mov
dec
jg
idivl
or
das
rclb
sbb
adc
leave
inc
call
mov
inc
sbb
add
lcall
aad
clc
sub
xchg
lods
cmp
add
rcll
and
add
aad
lgs
jecxz
mov
shrb
ror
sbb
scas
movsl
inc
dec
ror
push
inc
inc
cmp
sbb
or
pop
add
lods
popa
inc
div
xchg
test
not
jecxz
push
lds
xchg
pop
into
adc
aas
dec
test
sub
ljmp
fcoms
stc
pop
pop
repnz
aad
sub
loope
movsl
add
cmp
out
and
mull
jbe
movsl
mov
or
jecxz
mov
js
leave
insb
and
aad
sub
and
cmpsb
push
dec
push
sbb
xchg
movb
cmp
jbe
adc
movsl
cltd
add
repz
mov
icebp
pushf
cmpsb
mov
or
cs
gs
leave
cltd
lods
mov
mov
push
int
daa
in
sbb
sbbb
lret
xchg
inc
jecxz
shll
or
gs
sbb
adc
outsb
outsb
out
add
dec
imull
mov
mov
popf
and
ret
and
dec
inc
sti
push
cmp
and
cmp
mov
rcll
xlat
or
aas
loope
cld
adc
sbb
dec
pop
popa
enter
sbb
ss
out
add
in
stc
shll
lcall
aad
cmpb
xchg
popf
or
adc
icebp
ret
loop
subb
or
jecxz
fstps
push
jns
xlat
and
mov
data16
or
push
int
adc
and
cmp
fidivs
ficomps
rorl
add
std
test
push
in
in
sub
dec
jo
adc
xchg
in
and
rcrl
lret
outsb
sbb
jne
in
repz
fwait
rorb
cli
inc
flds
mov
std
outsl
scas
aas
push
cmp
adc
xchg
out
es
jmp
or
cltd
add
push
flds
addr16
cmp
imul
sti
pop
pushl
and
leave
sbb
add
test
addr16
mov
scas
cmp
jecxz
jne
loope
mov
mov
xchg
cmpsl
outsl
int
sbb
aad
mov
fwait
adc
ja
cltd
mov
mov
out
call
ret
fcomi
mov
add
enter
or
or
adc
rcll
mov
adc
xlat
sbb
xor
sti
test
inc
mov
clc
stc
data16
roll
lahf
idivl
xlat
or
imul
mov
or
fwait
xchg
lock
pop
mov
adc
icebp
fwait
mov
sbb
sbb
stc
repnz
fdivl
movq
test
pushl
or
fcmovne
arpl
adc
inc
js
dec
jp
mov
je
cltd
and
in
or
sbb
je
fldenv
lock
int
mov
pop
in
ret
jne
out
mov
testl
out
pop
mov
xchg
call
pop
sbb
scas
mov
aam
imul
aad
mov
test
xchg
pop
add
cwtl
or
mov
xchg
sbb
mov
or
add
push
adc
rcl
xor
xchg
mov
daa
jne
mov
inc
xlat
mov
jnp
aad
jnp
mov
clc
pop
mov
out
mov
pop
mov
fisttpll
pop
mov
addb
aas
mov
inc
mov
lds
mov
xchg
mov
in
js
in
pop
icebp
mov
test
imul
in
shll
fdivl
cltd
sbb
fabs
pop
mov
adc
mov
lcall
scas
mov
rcll
fcoml
or
icebp
sub
repz
mov
inc
mov
mov
add
jnp
iret
fst
movl
and
cmc
lea
rcll
or
icebp
aas
and
xchg
cmp
lods
cld
sbb
lret
jecxz
iret
mov
pop
leave
xchg
cli
stos
lmsw
movsl
push
or
data16
xor
mov
adc
cltd
and
mov
and
and
mov
jecxz
jmp
lds
or
repnz
or
je
ror
xor
adc
dec
pop
xchg
insl
pop
mov
ret
adc
mov
stc
mov
rcll
imul
loope
leave
pushf
push
aad
fnstcw
repz
xor
rcr
mov
icebp
mov
dec
test
jecxz
mov
sti
xchg
fildl
xchg
xchg
mov
pop
aas
shrl
nop
js
fldcw
adcb
out
es
mov
negl
imul
lds
lock
cmp
pushf
aam
mov
lret
sbb
ja
loope
mov
xchg
in
sub
stos
dec
mov
push
xchg
addr16
repnz
add
mov
hlt
ja
nop
movsb
adc
rol
in
mov
push
idivl
stc
xlat
movsl
jae
rcrl
icebp
pop
mov
testl
sbb
add
mov
push
sti
leave
out
fwait
in
xchg
mov
fisttps
test
and
mov
jg
bswap
jge
fwait
jo
mov
shl
adc
mov
add
insl
ljmp
xchg
jbe
mov
lret
jecxz
repz
pop
rcrl
jns
arpl
mov
fsts
andl
vmaxss
stos
or
call
js
ss
popl
fistl
fst
mov
loope
mov
mov
clc
cmpsb
xchg
fucom
fldl
or
and
push
xchg
or
dec
std
cmc
mov
mov
ss
xor
outsb
adc
push
pop
adc
fmull
sbb
ja
xchg
mov
mov
pop
mov
scas
jo
push
pop
jnp
in
lret
decb
stos
mov
test
mov
pop
add
jg
jns
add
cmpsb
daa
in
pop
mov
cmp
loope
sarl
into
jb
pop
mov
xlat
xor
ffree
jecxz
aas
or
xchg
sbb
ja
adc
add
mov
sbb
and
jp
stc
loope
mov
xchg
int3
ljmp
jge
sub
jno
lret
ret
loope
mov
int
cmp
popf
add
sarl
or
xchg
mov
and
testb
addl
lds
ja
shll
inc
add
andb
cmpsl
lock
mov
test
dec
jg
movsl
js
xchg
rolb
or
divl
lods
mov
cmc
aam
repz
lods
adc
stos
std
cld
pop
pop
mov
push
lret
aas
rol
xor
jne
aad
mov
imul
xchg
inc
xor
push
mov
pop
negb
test
scas
ja
ret
inc
cld
add
mov
xor
sahf
sbb
mov
aas
mov
leave
pop
les
fs
loope
push
push
pop
movsl
add
xchg
lret
out
in
fisubl
leave
ret
mov
or
sahf
je
mov
aam
sbb
out
lret
sbb
hlt
xchg
loope
ret
inc
pop
repnz
mov
pop
inc
mov
std
or
jo
fwait
out
loopne
mov
xor
andl
ljmp
xlat
or
dec
mov
aas
sub
fwait
jle
and
jge
jmp
sub
clc
fld
pop
xchg
jae
icebp
sarl
cs
push
ja
cltd
and
jl
in
fwait
jno
fcmovnb
add
ret
lock
or
jbe
sbb
out
ss
out
scas
or
pop
test
jo
ret
adc
mov
sub
jne
rcll
mov
adc
in
mov
in
and
movsl
imul
pushl
fld
movsl
cmp
mov
iret
fstpt
push
or
shrl
cs
mov
xchg
xchg
add
ja
lds
testl
sbb
dec
add
rcll
fldenv
icebp
roll
ret
sahf
sub
mov
jmp
loope
std
xchg
jbe
scas
cltd
clc
cmp
in
jecxz
lock
sub
scas
push
xor
mov
cltd
pop
sarl
mov
jne
shll
insl
lds
pop
popf
repnz
fdivs
leave
sbb
xchg
pop
hlt
scas
jg
fnstcw
push
sbb
imul
pusha
repz
ret
jle
sub
mov
xchg
enter
popf
mov
rcrl
cli
xchg
adcl
pop
pop
pop
cmp
mov
or
repz
sbb
push
cmp
dec
movsl
fstps
retw
outsb
andb
popa
mov
xchg
mov
icebp
lret
repz
adc
lds
int
stos
dec
mov
orl
adcl
stos
das
sub
xlat
inc
stc
sbbb
push
add
popf
mov
sub
mov
pop
fcoms
cmc
jns
or
jnp
aas
popf
cs
or
jnp
mov
stc
pop
cltd
scas
repnz
mov
lret
adc
inc
mov
icebp
mov
imul
or
std
push
mov
inc
push
cmova
dec
out
cmp
and
mulb
test
or
mov
jnp
mov
pop
int
xlat
jp
push
mov
xlat
leave
testl
dec
jp
jmp
jne
inc
clc
or
xchg
mov
lret
in
out
mov
add
adc
push
and
into
mov
push
in
stc
xchg
cmp
pop
xchg
jne
mull
rcll
scas
fyl2xp1
jnp
fcomi
sbb
pop
out
lds
outsb
movl
add
repz
sti
push
movl
mov
testb
mov
in
rorl
add
jecxz
test
pushf
js
test
icebp
leave
cs
daa
aam
cld
and
fcmovb
jne
adc
inc
adc
outsl
imull
jg
or
fidivrs
push
adc
inc
fstpt
notb
xbegin
outsb
add
xchg
jl
leave
popa
push
or
jns
popf
xchg
test
loope
cmp
incl
xor
sbb
push
mov
sbb
stc
or
push
vsqrtsd
repnz
adc
movsl
adc
push
loop
stc
mov
iret
sar
jmp
mov
adc
xor
adc
sbb
mull
std
push
test
movsl
mov
scas
dec
add
decb
pop
fst
jecxz
mov
or
lds
inc
xlat
popf
jb
and
add
jg
pop
mov
cltd
bound
repz
adc
jecxz
or
out
int3
in
mov
mov
dec
js
sarl
adc
xchg
mov
mov
push
mov
xchg
loope
mov
cltd
jns
or
jecxz
negl
add
ret
push
outsb
in
sti
addl
xchg
orl
ja
or
movsl
fstl
mov
cltd
aam
out
jb
or
adc
stos
jno
pop
adc
push
into
mov
sbb
leave
add
jp
cltd
gs
xchg
push
mov
mov
popf
push
inc
xchg
repnz
fistpl
mov
repnz
jmp
xor
mov
sbb
mov
out
adc
cmc
add
add
xchg
xchg
sub
subl
mov
or
sub
leave
popf
scas
jge
xchg
or
loope
xchg
aad
scas
mov
icebp
and
repz
inc
sbb
inc
ret
fwait
iret
mov
and
in
xchg
aad
mov
mov
mov
into
mov
aas
cmp
or
pop
sbb
sub
imul
jge
push
or
push
shll
and
popa
mov
idivl
lret
ret
push
addr16
clc
je
add
jbe
rorl
movsb
mov
pop
inc
lret
arpl
popa
and
mov
lret
ud0
mov
fwait
adc
pop
mov
shll
and
aam
sub
cmp
or
cmp
repnz
or
pop
mov
xlat
pop
scas
scas
pop
mov
movsl
cmp
lret
cmp
inc
or
out
cmc
mov
xor
fs
cld
in
imul
iret
xlat
sbb
or
sbb
xchg
mov
and
roll
add
sbb
filds
xchg
or
outsb
mov
xchg
mov
and
jg
int3
cmpsb
and
xorl
jg
inc
xorb
adc
xor
mov
adc
xlat
and
xchg
mov
repz
das
dec
mov
inc
fucomp
lea
mov
or
sbbl
test
jo
leave
xor
mov
push
cmpl
and
lods
push
xor
pop
push
fcmovne
push
into
xchg
and
sbb
shll
outsb
mov
lahf
lds
xchg
fisttpl
cmpsl
ss
negl
xchg
in
mov
fs
cltd
pop
ja
out
cmpb
mov
cmp
es
mov
mov
and
outsb
pop
lret
or
sbb
jg
sbb
mov
out
mov
popf
sti
int3
cmpsb
enter
sbb
cmc
dec
call
sbbl
or
xor
into
aas
mov
xor
loope
sarl
imul
div
mov
fdivs
xlat
mov
cli
daa
rcl
in
cltd
mov
pop
mov
mov
icebp
cmp
std
jp
scas
mov
stc
adc
mov
sahf
popf
out
fdiv
cmpsb
xchg
xchg
push
sub
inc
leave
sbb
shrl
mov
data16
repz
in
sahf
mov
mov
scas
mov
cltd
mov
dec
insb
movsl
shlb
pop
iret
push
leave
addr16
roll
popa
xchg
cli
mov
repnz
add
loope
add
in
inc
fwait
shrl
aas
mov
or
push
jge
xchg
orb
addr16
icebp
adc
fidivs
xlat
sti
pop
or
mov
push
loope
scas
xchg
add
mov
daa
aas
mov
mov
xor
cltd
add
and
sarl
cltd
and
pop
adc
lret
stos
out
inc
leave
inc
leave
popf
push
cwtl
mov
lds
movsl
adc
std
js
mov
cmc
push
and
adc
mov
es
sub
aam
xor
dec
adc
pop
add
adc
adc
icebp
scas
test
and
adc
jge
imul
rcr
imul
imul
or
jle
lret
hlt
loope
mov
mov
divb
lcall
outsb
jno
pop
inc
loope
mov
mov
lret
out
js
mov
add
ds
jns
sbb
movsb
mov
cltd
mov
dec
test
jnp
int
sbb
lret
lret
fnsave
mov
notl
pop
out
add
push
push
movsl
xchg
cmpsb
cltd
sti
sub
call
je
xchg
adc
add
rcll
sbb
fimull
adc
mov
lods
fld
cli
xchg
sub
xchg
imul
into
leave
cmp
jle
xchg
xchg
jno
and
adc
fisubl
movsl
popf
fwait
jle
and
mov
adc
mov
rcr
mov
repz
jnp
cltd
xchg
add
imul
jno
aas
sar
push
gs
fnstsw
fisubrs
movsl
sti
popf
xlat
or
and
outsl
icebp
mov
xor
mov
shl
lds
mov
insb
jno
sbb
sarl
data16
movsl
xchg
cmpb
orl
sarl
sbb
xchg
xorps
in
lahf
fwait
push
dec
dec
mov
ja
add
mov
movq
sbb
in
adc
test
repz
ds
sub
fimuls
negl
add
mov
icebp
jns
cltd
aas
outsb
pop
test
jbe
psllq
popf
mov
lds
imul
and
fldl
shl
lds
aad
or
fidivs
adc
cmp
xor
out
jne
xchg
ret
leave
pop
mov
sbb
adc
aaa
idivb
push
icebp
push
cmpsb
jge
popf
add
iret
mov
push
inc
mov
popf
sub
nop
aad
xchg
movsl
cmpsl
sbb
jns
xchg
inc
dec
int
bound
lds
adc
fstps
mov
imul
adc
and
jne
iret
call
push
shr
imul
xchg
in
xchg
pop
push
in
addr16
cmp
mov
popf
pop
aas
mov
aas
scas
jle
pop
jo
adc
push
cmp
imul
lret
rol
imul
mov
mov
cwtl
cmp
into
shll
sbb
mov
dec
stc
dec
add
fildll
jecxz
shll
adc
inc
jb
stc
test
sti
scas
xor
es
adc
stc
outsb
in
cmc
add
xchg
xchg
and
cltd
push
xchg
andl
sbb
call
and
iret
aas
pop
sbb
mov
pop
pop
xchg
xchg
cmp
repnz
bswap
xchg
push
cmpsl
add
jge
or
iret
and
cltd
mov
mov
sbb
ret
or
mov
pop
movsl
lcall
ret
xchg
push
inc
xchg
testl
mov
fsts
jne
mov
movsl
stc
jno
lret
pop
popf
adc
outsb
icebp
mov
mov
inc
push
inc
xlat
stc
mov
out
clc
sarb
mov
mov
fwait
js
mov
push
mov
add
push
add
add
leave
sbb
or
cmp
jnp
fincstp
and
idivl
hlt
mov
cltd
lds
stos
mov
add
or
sbb
test
jl
jb
and
stos
leave
xchg
xchg
push
add
mov
push
dec
lea
inc
xor
arpl
mov
mov
fwait
mov
std
adc
xor
or
mov
fldl
roll
pop
iret
lods
cmp
dec
cmc
cmpsl
or
mov
cltd
xchg
into
mov
iret
jnp
shl
movsl
jb
repz
sarl
and
iret
mov
pusha
rcr
rcr
jnp
popf
sti
repnz
mov
sub
std
cltd
inc
cli
inc
sub
push
jecxz
stos
jne
or
cmp
cmp
sbb
sarl
or
out
popa
and
mov
in
mov
in
pop
or
pop
repz
icebp
jg
movd
pop
jo
add
clc
cmove
ret
in
mov
jno
sbb
div
js
jl
loope
cmp
sbb
loope
sub
repz
sarb
decl
mov
fiadds
and
xor
daa
out
inc
or
iret
ds
and
imul
lcall
pop
mov
pop
iret
jno
rorl
fld
xchg
pushf
shr
adc
movsl
popl
cmp
or
sbb
mov
test
dec
lret
es
call
pop
shll
sbb
mov
repz
movsl
or
lret
iret
mov
jecxz
push
fimuls
nop
jne
mov
mov
loope
xchg
jns
or
int
test
mov
jnp
lds
jbe
mov
scas
dec
xchg
mov
ss
notl
flds
icebp
mov
dec
std
inc
in
nop
inc
mov
repnz
add
repnz
push
cmpl
or
sub
fnsave
pmulhw
iret
ret
mov
adc
mov
out
mov
inc
pop
xchg
imulb
mov
scas
not
add
ret
std
out
pop
loope
into
or
or
test
jp
or
sbb
dec
mov
xchg
adc
inc
and
xchg
adc
sbb
rep
ret
mov
cmp
jno
movsl
fldcw
push
dec
push
lds
subl
cmp
fwait
aad
jmp
lds
fists
cld
lret
sbb
stc
sbb
mov
ffreep
adc
sbb
adc
add
decl
dec
xchg
jae
pop
int
mov
xchg
push
xlat
lcall
add
negl
push
pop
jae
sbb
stc
mov
push
xchg
or
pop
cmp
std
sbb
outsb
sahf
icebp
int3
xor
add
xchg
iret
in
jnp
popf
sbb
in
cmc
cmp
ja
lds
xlat
mov
in
cmc
sub
push
adc
shll
jb
fdiv
dec
ret
lret
es
jge
iret
jecxz
adc
lds
mov
fistpl
loope
add
ror
or
scas
add
xchg
ret
fnsave
cmp
ja
rep
xor
mov
mov
aas
fisttps
les
pop
scas
rolb
shrb
aam
rcr
loope
or
push
inc
or
jne
shl
fwait
in
add
stc
js
add
or
repz
xchg
sti
adc
sub
jno
iret
leave
adc
pop
mov
push
or
xor
fwait
repz
iret
psrlq
lret
jp
xchg
enter
jg
in
mov
repz
mov
faddp
fucomi
cltd
cmc
pop
xchg
and
push
std
jne
mov
daa
rol
jg
movsl
testl
pop
test
add
popl
mov
mov
fldenv
add
mov
pop
pop
imul
mov
sti
push
xchg
pop
add
fwait
push
fnstenv
adc
out
es
add
lahf
pop
in
fisttps
mov
scas
mov
xchg
add
inc
jo
rorl
cmp
ret
cmp
movsl
or
mov
ds
iret
mov
xchg
mov
shlb
icebp
mov
pop
movsl
scas
push
cwtl
cmpsl
pop
or
mov
jmp
nop
or
sbb
in
xchg
mov
or
sarb
mov
cmp
ja
stc
scas
mov
div
lret
sub
push
ja
mov
rep
mov
xchg
scas
insl
daa
cmp
push
in
sub
push
dec
dec
arpl
mov
adc
ficoms
ror
repz
push
and
mov
xchg
mov
scas
movhps
hlt
cltd
adc
sarb
int
roll
xchg
lds
out
xchg
add
adc
adc
xchg
pop
sbb
rcrl
int
addr16
movsb
add
mov
or
dec
mov
sub
xchg
adc
push
sbb
jge
inc
inc
jle
es
jg
add
jne
inc
scas
mov
outsb
std
paddusw
inc
adc
mov
out
add
jmp
imulb
out
sahf
cwtl
xchg
stc
mov
out
aad
loope
pop
ret
adc
adc
mov
ret
push
incb
mov
mov
xor
jnp
shll
jle
lret
das
fnstenv
int
sbb
xlat
push
dec
push
push
out
outsl
enter
xchg
or
xchg
cmp
in
sub
pop
dec
sti
push
add
and
add
jmp
fidivl
leave
push
cmp
mov
inc
cmc
pushf
mov
inc
jb
or
sub
jecxz
pop
ja
add
jmp
push
dec
lcall
fdivl
sti
mov
mov
mov
in
cld
rcll
jbe
mov
push
hlt
push
xor
lret
pop
add
xchg
jmp
jge
mul
mov
jle
fwait
mov
outsb
lret
mov
in
je
cltd
or
jns
sbb
bsf
adc
xchg
xchg
xchg
into
cltd
dec
add
scas
ja
mov
or
stc
lahf
inc
mov
add
cmp
scas
xchg
adc
xchg
adc
stc
hlt
sbb
pop
mov
jg
xlat
mov
rcrb
pop
pop
clc
mov
pop
xorb
rcrl
movsl
out
ret
enter
jno
clc
ficoml
iret
stc
addr16
repz
mov
cltd
cmpsl
dec
mov
pop
xchg
outsl
int
lds
aas
les
mov
into
sub
mov
mov
mov
out
in
add
jmp
push
stc
xchg
fwait
cltd
mov
rcll
mov
stc
bound
xchg
mov
popf
mov
mov
jl
ret
hlt
test
push
ja
xchg
add
std
sti
or
movsb
xor
loope
adc
fwait
je
lret
fldcw
lds
sub
mov
jg
mov
ss
cltd
call
das
shlb
mov
repz
mov
pushl
loope
in
adc
xchg
je
sti
xchg
adc
push
or
repz
mov
dec
pop
imul
mov
sbb
fucom
fnstsw
pushf
lret
ja
mov
xchg
scas
jae
movsl
mov
add
add
jne
pop
sti
and
sbb
cltd
imul
xchg
mov
mov
xlat
data16
xchg
lret
imul
aad
imul
jg
out
sbb
add
bnd
adc
lret
ffree
es
mov
scas
mov
int
mov
hlt
sahf
idivl
xor
dec
int
jge
xchg
ret
jo
ja
not
shr
or
pop
xchg
loope
jno
mov
mov
mov
mov
or
fs
jmp
gs
shlb
xor
xchg
sti
loope
enter
xchg
iret
out
icebp
inc
mov
shll
dec
xchg
call
cltd
mov
add
and
mov
sti
and
in
add
stc
mov
mov
in
movsl
mov
subb
add
mov
movsl
cltd
jno
sbb
shl
add
push
aaa
loope
test
lds
stos
dec
fisttpll
and
xchg
rcll
notl
dec
fisttps
pop
loope
enter
or
pop
stos
repnz
add
inc
lret
adc
add
xchg
add
mov
jl
ja
popf
mov
leave
xchg
data16
push
dec
and
adc
and
jbe
mov
iret
adc
sbb
sbb
ret
inc
shrb
fsubl
sbb
mov
push
iret
jg
mov
leave
icebp
es
lcall
or
lahf
in
out
ss
or
mov
adc
mov
inc
or
fstl
repnz
in
mov
in
std
ret
sbb
sub
pop
std
mov
fwait
mov
pop
incl
aaa
aad
loope
lcall
mov
ja
in
incl
sbbl
popf
lock
mov
stc
mov
xchg
addr16
testl
mov
int
jg
add
cmpsb
and
add
outsb
iret
cltd
fnstsw
out
popf
mov
or
sbb
xchg
xlat
add
cltd
xchg
mov
iret
dec
adc
scas
into
stc
data16
push
mov
mov
mov
insl
xor
outsb
adc
dec
xchg
or
cmp
fwait
mov
mov
paddb
xor
cltd
movsl
adc
pop
and
dec
fwait
push
jg
and
mov
pop
into
dec
jl
jo
lret
adc
xchg
mov
xor
scas
or
inc
xchg
jg
xchg
popf
and
cmc
xchg
add
out
fldcw
fwait
mov
daa
rorl
push
loopne
or
addr16
or
push
mov
mov
iret
lret
out
xchg
in
push
mov
in
and
add
popa
xchg
mov
push
cmc
div
push
pop
sbb
sbb
lods
into
movsl
imul
call
aad
xor
ret
mov
fwait
cmp
xlat
lsl
mov
mov
movl
inc
sbb
mov
cmovne
mov
inc
in
in
pop
jecxz
xor
mov
bound
xor
movsl
xor
lahf
cltd
xor
sbb
rclb
frstpm(287
pop
pop
mov
mov
imul
shll
insb
dec
repz
fstpt
mov
mov
adc
dec
add
in
mov
jecxz
vunpckhps
adc
rcrl
sbb
xchg
popl
iret
xlat
lds
test
valignd
jbe
mov
lods
add
adc
jbe
inc
and
outsb
aas
xchg
fdivrp
leave
push
mov
mov
test
jle
ror
sbb
daa
inc
xchg
mov
out
sub
push
cs
out
xchg
dec
dec
scas
cmp
movl
or
add
outsl
sti
movsl
loope
mov
lods
movsl
add
mov
cwtl
and
cmpsb
mov
sbb
cmp
icebp
pusha
cmp
sbb
out
clc
dec
jb
repz
aas
dec
or
add
cld
scas
pop
cltd
aad
fs
lcall
ja
dec
jb
shll
xchg
popf
adc
dec
xchg
mov
or
aam
mov
mov
daa
iret
call
mov
fwait
jbe
mov
test
loop
mov
shrl
aas
inc
insb
pop
adc
out
mov
adc
pop
dec
or
repz
cmp
pop
add
pop
mov
adc
ss
jbe
mov
in
mov
movsb
in
repz
or
icebp
or
xchg
add
int
xor
pushf
xchg
jle
add
mov
je
int
and
sbb
jl
mov
pushf
pop
faddp
xchg
es
inc
mov
cmovne
fisttpl
addr16
pop
and
test
jmp
std
jle
jo
mov
in
imul
pop
adc
xorl
call
test
or
test
rcrl
loop
outsb
notb
jecxz
add
arpl
out
ret
pushf
mov
sub
loopne
in
outsl
xlat
add
mov
imul
add
push
mov
or
out
lcall
mov
jmp
lret
jno
and
push
leave
fcomi
mov
test
es
mov
xor
jmp
push
or
lret
xchg
and
jmp
pop
std
xor
mov
test
sub
outsb
sbb
adc
repz
adc
sub
loop
sub
lock
orb
mov
sti
and
mov
xchg
mov
repz
jmp
lds
pop
pop
shll
sub
add
cltd
lds
test
stc
mov
in
cltd
aad
jne
or
add
sub
loopne
fdivrp
cmp
pop
add
jg
pop
add
add
fdivl
xchg
ret
cmc
push
or
xchg
inc
stos
mov
jbe
in
adc
xlat
lret
imul
mov
mov
test
lea
popf
mov
in
xchg
cmc
adc
es
insb
movsl
scas
out
push
lds
jbe
fnstsw
mov
inc
call
leave
or
adc
stc
ret
mov
mov
fimull
jnp
setae
fwait
or
mov
jecxz
loope
or
pop
mov
fsub
shl
andl
into
xor
outsl
adc
rol
pushl
sbb
add
xchg
aas
add
pop
mov
mov
mov
je
sbb
mov
cmpsl
jb
mov
les
movsl
call
xlat
jno,pn
push
xor
mov
sarl
mov
sti
popf
jb
cltd
pushf
jle
shll
mov
mov
mov
xchg
stc
sbb
mov
je
psrlq
mov
sarl
ret
mov
xchg
xchg
push
cld
pop
aad
adc
add
stos
xchg
mov
push
repz
pop
loope
sbb
out
or
cmp
enter
nop
xchg
push
or
out
rcr
in
clc
mov
mov
adc
jg
xchg
je
iret
or
push
jno
push
xor
mov
or
sub
call
repz
add
clc
or
mov
stos
icebp
ror
push
xor
push
fwait
mov
mov
mov
mov
ret
sbb
imul
movl
imull
repz
mov
push
lret
push
add
out
prefetch
js
imul
mov
push
or
xor
daa
sarb
dec
cltd
mov
mov
test
cmpsb
clc
mov
repz
sbb
ja
mov
ret
scas
stc
ret
repnz
jno
xchg
adc
fbld
fisubs
rcl
xchg
xchg
sti
cmp
or
mov
fwait
scas
or
dec
sti
pop
xor
cmp
push
addr16
decb
jmp
pop
int3
cmc
fsubrl
stc
or
add
int
cmp
popf
imul
mov
xchg
movsb
mov
lock
pop
jp
jle
notl
leave
imulb
ror
mov
fucomi
cltd
push
shrl
mov
xchg
jg
outsl
imul
mov
add
jge
mov
push
jb
cld
loope
ss
dec
iret
xchg
sti
and
ja
out
push
xlat
mov
xor
xchg
sbb
movzwl
outsb
pop
dec
aad
jo
push
imul
lret
and
add
sbb
leave
testl
rcl
or
sbb
xchg
jecxz
bnd
sahf
xchg
pop
adc
je
adc
roll
xor
xor
sub
and
jl
popa
mov
lods
sbb
std
jne
xlat
mov
nop
adc
ja
cmp
inc
clc
cvtdq2ps
jle
sub
jne
scas
sbb
xchg
stos
in
push
adc
pop
cmp
lret
test
mov
test
imul
int
in
mov
popf
shrb
test
cltd
les
or
fistpl
es
push
push
lret
dec
push
adc
sub
les
icebp
sti
les
imul
negl
popf
xchg
push
je
popf
imul
adc
jg
popf
xchg
mov
and
icebp
inc
loope
jo
fwait
sub
rcr
ret
div
nop
xchg
movsl
sti
into
inc
push
sar
in
and
push
xchg
jno
decl
scas
mov
out
loopne
sbb
test
repz
rcll
lcall
cmpsb
sbb
xchg
lock
mov
xchg
in
or
shll
inc
and
notb
loope
repnz
mov
dec
lods
mov
fildl
or
js,pn
push
loope
and
sbb
stc
lds
leave
imul
in
sbb
dec
xlat
flds
xor
lods
aas
sti
mov
mov
fldcw
into
fidivl
inc
dec
xlat
and
xchg
mov
pusha
repz
cmp
gs
sarl
mov
orl
int3
test
push
ret
lret
add
icebp
and
cltd
jg
lds
scas
sub
dec
push
addr16
jl
icebp
shrl
xchg
push
or
out
lds
cmp
xadd
cmp
orl
fcmovu
cmp
mov
mov
sbb
add
dec
outsb
sarb
xchg
rep
lds
jae
cmpsb
sbb
fldt
test
mov
mov
ljmp
aad
ror
aad
jb
daa
sbb
nop
in
pop
call
dec
iret
sub
mov
and
hlt
mov
push
popf
pop
in
push
movsb
add
push
js
mov
and
adc
leave
movq
movsl
icebp
std
imul
adc
and
mov
je
scas
divl
rcr
dec
sbb
mov
mov
icebp
fcmovu
inc
sti
or
sbb
mov
mov
push
scas
popf
push
add
sti
adc
inc
roll
fldenv
xchg
adc
jge
mov
jno
aas
or
cmpsl
scas
mov
je
std
mov
sbb
fst
aas
fwait
out
pop
pushf
dec
cmp
dec
mov
inc
ja
lret
adc
jno
mov
add
jle
push
pusha
imul
mov
mov
lock
jl
icebp
mov
outsb
dec
imul
xor
or
add
cwtl
adc
out
aas
push
fxch
xchg
mov
movsl
add
stc
xchg
pop
repnz
mov
or
sbb
push
inc
je
mov
mov
test
fistpll
mov
mov
mov
mov
je
or
xchg
xor
sbb
fwait
out
aad
repz
jbe
movsl
mov
pop
popf
mov
or
push
fwait
and
dec
imul
add
mov
xlat
add
pop
ja
shll
xchg
stc
repz
shl
sub
iret
mov
pop
adc
sbb
sbb
push
fwait
fsts
jne
or
jle
subb
mov
sbb
stc
and
jg
fdivrl
jge
mov
sbb
jo
mov
lcall
dec
mov
or
movsl
mov
xchg
push
rdtsc
iret
mov
popa
dec
outsb
hlt
cs
dec
xchg
adc
xchg
adc
lahf
in
xchg
icebp
jno
loope
arpl
dec
cli
imul
jnp
pop
js
sub
sbb
lods
add
mov
xchg
fnstsw
lds
rclb
pushf
jno
ljmp
mov
iret
inc
imul
std
js
aad
inc
ja
icebp
ljmp
addb
sti
ds
mov
mov
es
mov
xor
lds
pop
adc
aas
jle
xchg
adc
xor
or
mov
mov
cmc
rorl
mov
or
hlt
orb
addr16
bswap
je
add
push
rcrl
adc
jmp
fstpt
jae
rcrl
mov
xchg
dec
les
cltd
sbb
xchg
aad
movsl
mov
cmpsl
loope
cmpsb
sub
js
cmpsb
or
js
mov
test
mov
add
ror
dec
inc
jae
or
xor
mov
stos
ror
shlb
jecxz
pop
daa
sub
scas
xchg
ret
fwait
div
xlat
frstor
or
sti
adc
shl
inc
sbbl
dec
insl
popf
adc
sbb
ffreep
xchg
lret
push
sbbb
adc
scas
mov
dec
out
shl
xchg
inc
repz
in
cltd
lock
loop
or
sahf
xor
xor
add
xor
inc
and
pop
inc
jge
adc
lods
hlt
lea
jg
mov
aas
cmpl
psubw
mov
scas
xchg
adc
stos
xlat
imul
loope
roll
jle
movzbl
jae
add
add
add
mov
xor
inc
xchg
inc
mov
push
mov
xchg
adc
sub
repz
adc
mov
push
fisttpl
mov
aad
jle
mov
shl
repz
in
add
sub
loope
push
dec
jecxz
popa
adc
xlat
push
inc
inc
mov
out
js
pop
movsb
fimuls
mov
fbstp
jle
cltd
push
cmp
frstor
push
fscale
movsl
aam
mov
mov
xchg
sbbl
pop
sbb
push
sbb
jne
and
scas
push
cmp
sbb
pop
mov
inc
sub
mov
mov
pop
jecxz
js
movl
push
add
cmpb
adc
ds
mov
repz
or
mov
add
sahf
in
push
and
pusha
dec
add
jg
cwtl
jl
sbb
and
data16
jp
sub
mov
bound
ss
fcmovnu
xchg
lds
leave
movsl
xor
pop
mul
mov
sub
xchg
lret
jle
inc
pop
pop
sbb
repnz
hlt
or
sub
cmpsb
inc
rclb
cltd
lcall
repz
clc
sbb
int
xchg
mov
repz
adc
push
xlat
aad
js
mov
xchg
jb
in
data16
ljmp
cltd
mov
repz
cmp
stc
ffree
rcrb
int
subl
aad
cltd
mov
xlat
xchg
fiadds
ds
and
mov
adc
mov
add
scas
je
aas
aad
mov
or
xlat
xchg
lods
dec
jnp
pshufw
xor
rcrl
std
xchg
lods
leave
mov
add
sahf
cmp
add
mov
fsts
dec
icebp
or
mov
cmpsl
enter
and
cmc
test
adc
shll
std
add
inc
scas
ss
movsl
pop
jne
ret
or
mov
fildl
popf
dec
scas
xchg
pop
xchg
or
adc
fstpl
push
push
ret
jecxz
movd
roll
iret
and
adc
inc
cmpl
xchg
inc
syscall
and
mov
push
or
sbb
in
mov
mov
or
not
int
shll
cltd
in
mov
pop
icebp
outsb
xchg
call
mov
lret
inc
lret
cltd
pop
imul
xchg
ljmp
jnp
or
jb
shl
ret
push
int
sub
xlat
or
xchg
pop
in
adc
fdivrs
addb
cmp
xchg
and
popf
sti
sbb
mov
mov
mov
and
push
xchg
xor
and
out
cmovg
inc
push
or
fildl
mov
movsl
xchg
mov
xor
insl
std
or
outsb
add
bound
icebp
mov
push
test
xlat
repz
push
pop
stc
sti
jns
or
mov
lock
addr16
popf
cmpsl
adc
mov
xchg
push
adc
popf
out
fs
scas
ja
mov
xor
cltd
testb
jg
and
jnp
xchg
in
xor
aas
enter
xor
je
popf
mov
mov
fdivl
mov
adc
lea
rcll
scas
mov
icebp
mov
fwait
adc
popf
leave
or
mov
mov
cmpsb
pop
decw
xchg
adc
xchg
dec
inc
ret
push
aad
cwtl
sahf
shl
dec
adc
xchg
cltd
inc
jae
mov
repz
in
sti
mov
jb
pop
jle
mov
cmpsb
dec
mov
jmp
movsl
push
movsb
pop
mov
add
popf
jae
pop
decl
fwait
out
leave
loopne
rcr
mov
cmp
in
repnz
icebp
mov
inc
sbb
jnp
sbb
imul
shrb
test
xchg
loope
movsl
dec
add
popf
fwait
jb
imul
loop
fxtract
sub
cmp
add
pop
mov
lock
lds
or
jo
cltd
and
clc
ja
xchg
ja
in
and
xor
loope
stc
cwtl
repz
fnstenv
test
adc
cmpsl
iret
sahf
jb
aas
repnz
jbe
and
scas
es
ljmp
add
mov
mov
adc
fldz
frstpm(287
cltd
and
sub
xchg
int3
push
outsb
or
fwait
adc
jb
xchg
out
jle
add
adc
out
xchg
stos
out
inc
repz
std
xchg
xchg
add
andb
jno
in
pop
adc
js
stos
pop
ret
test
ljmp
daa
mov
push
mov
repnz
lods
sbb
jl
add
out
div
sbb
xlat
call
sbb
xchg
test
xchg
jg
aas
jl
rcl
scas
out
jecxz
push
push
add
std
fisttpl
rcrl
aad
pushf
push
xchg
adc
lods
hlt
jo
mov
icebp
rorl
into
cmp
aaa
jg
xchg
xor
push
lret
push
fldenv
xor
rclb
shll
repz
into
dec
add
paddusw
flds
fpatan
movsl
xchg
test
ret
cli
xchg
rcll
cmpsb
jg
mov
adc
mov
jecxz
mov
fwait
xor
push
sbb
mov
into
ret
push
leave
add
sysret
mov
cmpsl
cs
outsb
ret
sbb
pop
jmp
inc
jg
xchg
xchg
sbb
xchg
inc
xor
and
or
ja
jecxz
iret
xchg
insb
repz
add
aas
sbb
divl
dec
lods
imul
std
sbb
mov
mov
popa
jae
repz
out
xchg
js
mov
sub
aad
imul
mov
jmp
sbb
jb
cltd
or
cmp
test
or
fists
daa
push
rorb
push
test
jnp
int
mov
xchg
cltd
mov
xchg
add
out
es
in
pop
add
mov
xor
in
push
add
ret
test
dec
mov
outsl
sbb
and
push
mov
push
icebp
popf
cmp
std
sub
jecxz
clc
sti
nop
pop
inc
mov
stc
mov
fsts
mov
int
insb
ficoms
mov
fistps
jecxz
aad
mov
movb
inc
xchg
inc
icebp
out
sbb
fmulp
ljmp
repz
xor
notl
inc
jg
xchg
jae
sbb
cvttps2pi
push
cmp
cltd
pop
mov
popl
jne
xchg
lds
ss
mov
in
mov
rorl
adc
mov
jg
repz
mov
cmc
and
adc
dec
out
stos
dec
sub
rcll
hlt
jbe
adc
test
or
and
push
adc
imul
or
add
jbe
rorl
or
adc
cmp
or
mov
mov
ja
xchg
cmp
popf
adc
push
inc
push
add
adc
aad
iret
adc
scas
incl
adc
ja
rorl
xchg
push
xchg
pop
leave
jnp
add
or
call
cltd
xor
cmpsl
divb
add
xchg
mov
pop
mov
xchg
fldt
enter
mov
push
dec
add
popf
or
mov
xor
test
sub
je
mov
lahf
xchg
insl
dec
xchg
add
pop
xchg
mov
pop
mov
inc
mov
jmp
mov
adc
in
test
negl
add
ret
dec
and
sub
pop
fwait
mov
adc
mov
push
jns
movsl
jle
sbb
cmp
or
lock
or
dec
cmp
ret
jae
add
ror
lods
fldlg2
xchg
mov
scas
adc
pop
mov
ret
fldt
lret
aaa
loop
sub
mov
pop
stc
adc
jne
leave
mov
test
mov
add
dec
fs
lea
call
icebp
jno
mov
rol
fnstsw
inc
sbb
add
mov
shr
scas
outsl
or
or
inc
clc
xchg
fstps
sbb
outsb
aad
icebp
pop
in
dec
lret
sar
inc
cltd
data16
xchg
mov
adc
adc
std
das
ss
in
adc
mov
mov
call
and
add
dec
lea
add
lahf
repnz
mov
and
pop
jle
shll
lock
jbe
mov
xlat
jle
mov
lods
imul
adc
sti
ss
lds
inc
and
mov
daa
dec
out
std
dec
out
and
daa
in
mov
repnz
repnz
xchg
icebp
in
jp
iret
xchg
clc
xor
mov
lahf
out
mov
inc
fstps
xlat
mul
dec
aad
ja
popf
out
xchg
adc
sub
in
sbb
lret
ret
lods
pop
leave
adc
lea
mov
pop
push
inc
incb
pop
jle
hlt
ss
xchg
pop
mov
cmc
inc
popf
pushf
sbbb
sub
xchg
dec
cli
int
sub
insl
add
cmp
sbb
leave
arpl
mov
xor
cmc
pop
mov
fnsave
push
xchg
or
fistpll
pop
lock
ret
cmp
xchg
adc
push
jg
pop
ret
mov
daa
cs
in
fsts
or
or
push
fucomp
adc
jge
stc
jae
shll
aad
mov
cltd
es
mov
push
negl
mov
xchg
imulb
insl
lret
shl
push
lcall
int
test
pop
popf
mov
mov
scas
add
fsts
xchg
outsb
sbb
addr16
rcr
mov
mov
mov
mov
sarl
cmp
imul
adc
addr16
dec
loopne
bnd
mov
std
stc
add
ljmp
pushf
ljmp
stos
xchg
sub
mov
add
stos
sbb
and
loope
outsl
ja
adc
loopne
mov
mov
stos
test
fwait
repnz
add
sbb
pop
dec
icebp
sbb
mov
xchg
add
loope
leave
push
mov
mov
add
out
push
lods
push
lods
insl
movsl
lahf
scas
push
mov
repz
pop
mov
jne
and
sti
test
xchg
jmp
adc
push
mov
rolb
shl
mov
aam
in
mov
test
inc
sub
adc
adc
mov
mov
adc
xor
enter
popf
or
pop
pop
movsl
adc
inc
or
je
rcr
in
sbb
stc
xlat
rcrl
aad
add
stos
scas
ja
sti
xchg
sbb
sti
push
lret
stc
cltd
test
mov
sbb
mov
or
js
fstpl
leave
cmpsl
mov
jge
sub
aad
leave
mov
in
add
lea
pushfw
aad
push
btr
xor
mov
pop
pop
adc
add
mov
ljmp
stc
sbb
pop
cmp
cmp
add
imul
fldcw
xchg
out
mov
or
in
and
jne
or
insb
scas
lcall
cltd
in
imulb
xlat
adc
and
sbb
mov
mov
push
lret
nopl
mov
jg
test
rorl
call
or
xchg
or
cmp
sti
jp
gs
aad
adc
mov
sub
jnp
loope
out
xlat
jne
xor
adc
test
and
nop
adc
mov
xlat
movsl
pop
xchg
pop
xchg
push
test
int
inc
pop
jmp
push
mov
dec
adc
cltd
stos
mov
imul
in
loop
xlat
lock
adc
or
ret
jne
sbb
in
add
xchg
cmp
out
inc
jae
lock
jge
xchg
out
dec
ja
repz
cmp
ss
shll
jge
popf
sar
xchg
mov
mov
in
lds
mov
test
pop
hlt
mov
test
xchg
imul
outsb
push
dec
dec
pop
xchg
jp
adc
cmpsb
xchg
cltd
mov
clc
mov
cmp
sbb
out
leave
mov
add
push
xchg
outsl
fld
std
fwait
mov
mov
xchg
lods
and
aam
xchg
inc
pop
jecxz
lcall
enter
cmp
adcl
test
sahf
fsubrs
pop
stc
sub
pop
sar
xchg
out
xchg
in
mov
test
lret
test
andb
mov
lret
in
pop
inc
in
pop
stc
lds
jno
mul
loope
lahf
enter
into
sbb
add
lret
sbb
xchg
nop
xor
repnz
fwait
je
xchg
rcrl
jl
icebp
insl
jp
rcll
push
popf
lcall
xor
xchg
ljmp
stos
cmpsl
push
cltd
xchg
incb
popf
scas
loope
fwait
mov
or
cmp
cmpsl
popf
and
adc
jnp
aas
lret
scas
xchg
or
fidivl
out
ret
xchg
movsl
decl
jno
fcmovne
xchg
mov
add
hlt
xchg
icebp
inc
lock
lret
in
sbb
adc
dec
lcall
cmp
stc
and
decb
leave
xchg
in
adc
adc
mov
or
add
xlat
inc
sbb
insl
xchg
icebp
mov
xchg
cli
xchg
pop
inc
ret
mov
aas
outsl
scas
adc
loope
or
aad
jnp
xchg
fsts
lret
data16
sbb
xchg
mov
aas
mov
mov
jecxz
insl
stos
dec
aad
loope
jbe
pop
shrl
out
outsb
and
add
jae
mov
xor
popf
mov
jno
or
out
cmp
data16
out
xchg
and
test
xchg
call
xchg
fwait
or
xchg
ret
sbb
adc
adc
shl
subb
lret
cld
sub
mov
xor
or
jl
jl
addl
fwait
mov
enter
jae
fisttpl
lds
cmc
push
xchg
inc
sbb
xor
vsqrtpd
sbb
aas
jmp
stos
push
mov
movsb
xor
cmpsl
mov
jle
pop
xchg
pusha
cltd
pop
movswl
imul
inc
jbe
xchg
mov
scas
decl
mov
jno
xchg
divl
mov
jmp
xchg
push
push
les
scas
sbb
mov
or
cmc
mov
mov
int3
xchg
out
mov
fwait
pop
mov
cltd
mov
jb
mov
and
insb
shrl
adc
loop
mov
jle
add
hlt
push
pop
shr
cmp
outsl
and
xorb
adc
jo
mov
gs
cmp
cmpsb
cmp
adcl
test
stos
mov
cmpl
es
call
insb
mov
or
iret
lret
xlat
sbb
cmc
dec
fscale
cmpsb
jae
aad
adc
clc
xor
iret
aam
mov
xchg
addr16
mov
test
jae
std
sbb
mov
cltd
cmc
popf
xchg
pop
iret
fwait
jge
and
roll
mov
std
mov
mov
mov
mov
ljmp
jns
dec
adc
outsl
or
ficomps
cmpsb
push
aad
std
sbb
adc
lds
pop
or
ret
outsb
cmp
fstl
roll
iret
xchg
popf
fldl
mul
xchg
mov
add
vpacksswb
insl
xor
imul
sub
mov
pop
repz
je
mov
lds
xchg
movsb
adc
sub
jnp
sbb
fmulp
or
pop
pop
mov
or
mov
pushl
mov
jecxz
or
mov
jl
aad
pop
mov
repz
add
jge
sbb
mov
fwait
sbb
bnd
fadds
cmpsb
popf
adc
cltd
jbe
icebp
adc
popl
push
mov
jmp
push
inc
enter
adc
xor
imul
xor
iret
flds
adc
mov
mov
std
xchg
aad
adc
clc
or
xlat
add
jmp
adc
adc
dec
adcb
xchg
repz
xchg
test
movsl
mov
shll
in
movl
xchg
insl
sbb
add
outsb
mov
or
push
jo
cmc
outsb
sbb
loope
jecxz
out
lock
jg
mov
iret
jno
roll
and
addr16
movsb
cmp
adc
test
jns
xchg
testb
pop
rcrb
xor
cld
rcll
jg
jecxz
ljmp
rcll
das
andl
in
sti
sub
rorl
jg
xchg
test
sub
aad
jb
pushl
ret
fdivl
sub
or
out
cmp
mov
fstps
or
adc
fwait
pop
fisttpl
adc
adc
mov
imul
or
or
out
or
loope
repz
mov
aas
xchg
jecxz
inc
xor
mov
xchg
mov
rcll
adc
lret
xor
add
pop
imul
dec
sub
iret
add
xchg
pop
mov
mov
sub
sbb
loope
xor
in
inc
pop
jg
int
and
xlat
icebp
popa
subb
fstpt
push
lds
jecxz
dec
or
ret
jge
iret
mov
out
jp
adc
and
sub
pop
shll
pop
sub
dec
movsl
adc
out
call
push
outsl
xchg
mul
ss
repz
lcall
mov
fldenv
sub
inc
xchg
mov
or
std
and
and
adc
mov
adc
repz
fisubrl
mov
add
aad
jne
iret
lds
cmp
in
in
movsl
pop
ret
mov
test
loope
pop
xor
xor
scas
mov
or
or
cmpsl
mov
in
lret
or
cmp
cmp
xchg
mov
aad
sbb
ss
sbb
or
adc
test
testl
jnp
int
jo
js
popf
std
bnd
jle
mov
fiadds
mov
xlat
repnz
mov
mov
or
fwait
aas
push
inc
jmp
mov
push
iret
ret
xchg
and
pop
call
xor
cmpsl
js
lret
sahf
inc
stc
lock
adc
jge
mov
stos
clc
shll
fisttpll
daa
push
mov
out
iret
addr16
js
or
pusha
mov
mov
repnz
mov
jecxz
jbe
cmp
fwait
jo
xchg
adc
mov
fwait
lret
adcl
outsl
mov
pop
fsubp
movsl
push
inc
and
sbb
adc
cmp
loope
outsb
jbe
decl
mov
daa
dec
sbb
xchg
jno
xchg
std
int
leave
pop
xchg
adc
iret
jle
lock
addb
stc
or
jns
repnz
sub
cmp
aad
xchg
out
pushf
xchg
adc
popf
or
mov
cmp
cltd
add
dec
je
xchg
jg
fsave
aad
pop
dec
push
adc
ds
adc
std
stos
push
gs
cltd
iret
into
sbb
sti
sbb
xor
icebp
add
xlat
in
lcall
jb
sbb
and
fstps
add
fstpl
std
negl
add
sbb
div
xchg
or
out
or
aad
popa
adc
sahf
jge
xchg
shll
pop
add
mov
jmp
mov
out
dec
fimuls
daa
or
mov
lods
mov
fistl
sbb
addr16
push
scas
jne
lcall
movsl
xchg
dec
mov
pop
or
aad
adc
lret
jp
xchg
sub
xchg
mov
and
pop
mov
int3
gs
push
repnz
mov
les
popf
push
insb
call
clc
sbb
add
add
movb
push
dec
repz
or
je
mov
out
in
hlt
mov
mov
adc
xchg
sti
rclb
or
inc
jg
mov
push
std
outsl
loope
xchg
negl
mov
mov
jl
jg
cltd
jle
mov
inc
add
xor
leave
and
fcmovbe
out
push
jecxz
push
aad
jp
adc
mov
movnti
xchg
gs
xchg
std
mov
xchg
pop
shll
xorl
cld
addl
xchg
iret
xchg
scas
sbb
imul
sbbl
outsb
testl
push
sub
add
add
dec
xor
xchg
movsl
add
adcl
and
out
dec
cmp
sub
xchg
push
pushf
jae
and
rcrl
shlb
push
dec
pop
out
fldl
mov
xrelease
xor
jp
lahf
ror
sub
mov
or
in
mov
sbb
pop
mov
push
sub
or
add
subl
stc
mov
mov
nop
and
add
add
fwait
push
ss
outsb
pop
repz
addr16
adc
iret
fwait
sbb
dec
xlat
mov
enter
out
pop
out
add
mov
mov
cmp
pop
icebp
sbb
xadd
mov
xchg
ret
icebp
outsb
sub
pop
ja
aas
pop
je
lds
loop
xchg
xchg
jbe
xchg
fldenv
and
popf
or
sti
push
or
add
std
repz
mov
mov
popf
jae
jo
fstpl
mov
mov
xchg
repnz
or
add
icebp
mov
daa
push
mov
adc
stc
mov
repz
xchg
lock
push
or
push
dec
push
push
pop
out
or
sbb
repz
testb
xor
shlb
xchg
hlt
adc
add
sbb
sub
std
es
adc
jo
jecxz
push
xchg
insl
out
mov
or
rcrl
mulb
and
stc
mov
imul
inc
pop
xlat
ljmp
shll
roll
jbe
lret
loope
cltd
inc
inc
or
add
mov
add
stc
mov
movsl
outsb
psraw
mov
jg
jae
std
add
shr
rcll
shll
sbb
popf
pop
adc
in
in
imul
inc
xchg
jnp
sbb
in
shr
movl
aas
jno
stos
dec
rcll
outsl
mov
sub
sbb
icebp
lds
adc
icebp
adc
loop
loopne
mov
xchg
sti
mov
mov
xchg
mov
and
scas
cli
lahf
rcl
mov
pop
sbb
clc
xchg
leave
std
loopne
outsb
jecxz
dec
cmc
aad
shrl
push
fwait
and
lahf
jb
popf
repnz
cmp
mov
repz
mov
xlat
xchg
rorl
adc
in
outsl
flds
rclb
scas
jl
inc
repnz
jmp
and
pop
jmp
fdivrl
or
xor
mov
jp
movsl
cwtl
mov
mov
clc
stos
mov
or
test
adc
jmp
scas
mov
inc
xchg
add
xchg
adc
lods
imul
loope
or
repz
cmpsl
jg
fnstcw
jno
adc
jl
int
mov
lret
cltd
add
sbb
dec
push
pop
std
imul
aas
in
sbb
push
popf
mov
hlt
and
inc
ret
fisttpll
fistl
mov
push
push
stc
and
sub
movsl
cltd
xlat
mov
add
jno
sti
popf
fnsave
adc
loope
js
cmpsl
pop
lret
out
iret
adc
jbe
bound
mov
imul
inc
dec
call
imul
xchg
scas
repz
mov
ret
push
mov
xlat
std
cwtl
jne
out
in
jecxz
in
or
call
cmpl
in
xchg
fcomi
and
xlat
stos
xchg
and
mov
mov
std
out
or
xchg
mov
jbe
and
loope
fwait
daa
dec
add
mov
inc
xchg
fnstcw
rcrl
mov
or
mov
scas
imul
dec
int3
scas
pop
sub
add
pop
lret
icebp
inc
ret
dec
into
adcl
repz
mov
mov
loope
js
jecxz
pop
dec
cmpsb
popa
cmp
out
movsb
in
flds
jne
iret
mov
cltd
notl
out
shll
stos
mov
jmp
out
sti
movsl
aad
push
xchg
add
roll
or
in
mov
mov
jae
repz
add
add
loop
xlat
pushl
xchg
mov
pop
adc
lret
jmp
loopne
or
xchg
push
or
cs
in
and
mov
es
push
xchg
ror
jge
adc
in
icebp
mov
aas
adc
and
adc
mov
scas
mov
into
mov
pop
popf
bswap
dec
pop
jecxz
aad
lret
or
pop
test
push
jnp
loope
mov
push
dec
scas
or
mov
sarl
sub
loope
fcomi
shl
add
testb
adc
leave
mov
add
inc
inc
or
repz
or
and
mov
mov
xor
xchg
ret
lds
jae
mov
xlat
adc
shll
inc
and
aas
mov
bswap
cmc
or
sub
sub
call
add
test
stc
scas
jo
or
std
jno
in
popf
add
das
cltd
mov
add
mov
lods
js
lds
xchg
jl
mov
xchg
notb
or
xchg
mov
sarl
out
adc
stc
or
out
nop
ljmp
mov
popf
inc
push
in
lock
mov
push
jecxz
pop
loope
fstpt
sahf
sbb
adc
mov
in
mov
clc
or
push
mov
pop
aad
pop
cltd
jae
xchg
fistpl
mov
mov
dec
sub
fstpl
mov
repz
scas
lods
aad
xchg
jne
jo
icebp
xchg
ja
movsl
pop
sbb
jle
xchg
out
inc
add
icebp
cmpsl
mov
mov
movsl
xchg
in
mov
cltd
sbb
push
jns
sahf
pop
fsts
je
mov
dec
jnp
aas
call
cld
ss
mov
fwait
xchg
mov
icebp
rcll
cli
fsts
and
scas
push
jno
sbb
out
lds
mull
stc
enter
fsubrl
xchg
dec
sbb
xor
dec
aad
cmp
inc
jb
in
sub
dec
idivb
push
leave
dec
lret
cs
jnp
pop
add
add
push
emms
scas
shl
mov
jnp
xchg
in
leave
push
inc
adc
xor
jp
jp
inc
shl
ret
stc
shll
mov
push
fiadds
push
aaa
push
fisttpl
int
daa
push
bound
jnp
cld
out
enter
stos
lds
pop
push
ss
and
pop
jecxz
mov
mov
and
cld
popa
xorl
adc
jl
mov
xchg
lds
inc
add
cmpsb
dec
cmpxchg
push
or
inc
repz
cwtd
mov
mov
mov
popa
aaa
mov
es
xchg
cmp
aad
jno
add
xchg
and
mov
ret
adc
stc
push
in
int
repnz
data16
cltd
sti
fsubl
cmc
lock
rep
mov
jmp
loope
push
mov
ret
mov
std
bnd
lds
ffree
xchg
add
hlt
fcomp
pop
cmp
movsb
int
pop
or
sar
sti
rorl
ja
out
mov
leave
repz
mov
je
xchg
aas
rcrl
negl
leave
pusha
lea
inc
sbb
aaa
repz
jbe
pop
lds
add
outsl
adc
mov
rolb
push
mov
mov
add
mov
mov
flds
push
movsb
movb
jno
add
out
cli
insb
sub
dec
sub
rcl
imul
xlat
aad
icebp
fstps
leave
add
sbb
push
ds
aaa
inc
int
dec
cmp
add
arpl
out
enter
sti
lahf
ljmp
movsb
xchg
imul
fcoml
pop
scas
inc
test
mov
je
out
fnsave
jmp
ror
and
lds
xchg
sub
out
int
push
dec
xchg
xchg
repnz
fwait
stos
ficoms
stos
out
mov
pop
xchg
or
pusha
stos
mov
mov
ja
movsl
sub
sub
xor
xchg
loope
and
jb
pop
cmc
mov
lds
xchg
mov
sbb
pop
sbb
iret
push
add
sahf
dec
pop
pop
pop
cltd
cmp
pop
pop
xchg
add
or
add
push
or
xor
sub
repz
sbb
aas
ljmp
xor
cmp
rol
mov
push
mov
in
dec
pop
mov
aad
into
dec
push
ja
lret
movsl
or
shl
jg
sti
dec
add
cmp
roll
dec
sbb
mov
jne
sbb
xchg
mov
repnz
lret
add
setle
cmpsb
mov
push
pop
jge
or
sti
bnd
jle
jmp
daa
popf
data16
jno
aad
xchg
sti
loope
jno
roll
cmc
jg
mov
hlt
rcrl
mul
int
lods
inc
dec
arpl
adc
sahf
mov
es
mov
xchg
fcomip
cmpsb
jns
shll
sub
es
mov
outsb
enter
sti
shlb
mov
xchg
repz
xor
or
jg
add
xchg
loope
xchg
out
and
out
sbb
cmpb
push
mov
push
ss
leave
sbb
fldl
adc
jp
adc
leave
popf
push
shl
or
imul
mov
imul
sbb
fisttps
sti
std
insl
sub
or
dec
in
or
data16
sub
xchg
add
sbb
stc
mov
mov
cmc
sbb
mov
jne
mov
lret
mov
mov
mov
mov
dec
ja
xchg
add
popa
or
enter
shll
icebp
adc
jg
mov
xchg
std
fwait
out
xchg
and
or
stos
aad
popf
sbb
scas
or
cmc
or
xchg
test
mov
in
cmp
sahf
test
aad
scas
xchg
push
int
cld
icebp
adc
testl
xchg
lcall
mov
sbb
aad
pop
shrl
cltd
dec
and
and
ret
repnz
icebp
lcall
std
lock
pop
jle
pop
pop
arpl
fcmovnu
adcl
push
stc
repz
pop
test
push
iret
insb
dec
xor
xor
movsl
or
mov
cmp
dec
jns
xlat
xchg
and
and
repz
movsl
js
sti
ror
mov
clc
insb
test
fsubp
sbb
lret
test
push
lea
aaa
in
mov
pop
or
movsb
pop
popa
in
add
cmp
cmp
and
int3
cmp
aas
and
pmaxsw
jg
and
jno
mov
sbb
pop
xchg
push
cmp
mov
repz
stos
mov
jnp
inc
negb
mov
adc
subl
mov
mov
mov
sub
sub
xchg
mov
repnz
jae
mov
xchg
ss
mov
lea
outsb
aad
mov
leave
or
in
lahf
bnd
xlat
xorl
imul
pop
fistl
add
mov
cmp
or
jno
rcll
mov
iret
hlt
stc
loope
ror
cmc
js
aas
push
into
lahf
in
in
fcomip
dec
xchg
push
jbe
cld
bound
or
imul
mov
in
aaa
in
repnz
cmc
flds
adc
add
pop
sbb
mov
mov
iret
int
mov
loope
xchg
mov
rcll
cmc
sub
sbb
notl
dec
and
push
or
pop
jno
mov
push
pop
add
inc
stos
lahf
or
repnz
leave
lds
add
mov
xor
dec
pop
xorl
inc
and
add
xadd
popf
out
daa
jnp
test
jl
jne
xchg
icebp
std
iret
xchg
add
adc
push
mov
xchg
repz
pop
jle
xchg
jae
mov
adc
or
cs
loope
cmpsb
jle
loope
or
pop
ret
mov
mov
scas
push
and
pop
or
sbb
test
inc
das
inc
push
mov
mov
cltd
frstor
sub
ret
pushf
arpl
add
outsl
xchg
and
or
shlb
hlt
int3
adc
out
mov
aas
lock
pop
into
je
adc
lods
sbb
sub
push
iret
movsb
aad
movsl
push
loope
adc
jbe
fwait
sahf
pop
xchg
in
mov
add
cmp
sahf
insl
mov
push
dec
or
mov
repz
lods
stc
ja
repz
sbb
adc
and
cmp
out
cltd
sub
jmp
jns
jae
popf
rcll
aad
pop
std
sti
adc
cmp
mov
clc
jns
lods
xorl
add
fsts
adc
std
mov
push
push
jg
lds
mov
mov
cmovs
rcll
jmp
mov
iret
push
daa
movsl
or
pop
testl
ljmp
mov
adc
jecxz
sar
adc
sub
sub
or
dec
movsl
lret
jnp
iret
fwait
inc
jg
and
popa
mov
sti
es
shrl
flds
orl
adc
inc
sti
jecxz
sbb
int
jle
mov
and
push
fnstsw
and
movq
jle
xlat
arpl
sbb
xchg
mov
xchg
mov
xchg
movsl
mov
mov
inc
cmp
jno
lret
mov
push
loope
sti
int
movsl
jge
fstl
or
dec
repz
push
pop
push
clc
xor
push
mov
ret
xchg
jno
fwait
sbb
aas
add
xchg
fwait
iret
shufps
scas
jae
xlat
rcll
adc
add
sti
std
xchg
push
data16
loope
and
mov
jmp
rcl
inc
and
and
int
mov
out
aaa
cmp
sbb
xchg
sbb
imul
aas
pop
mov
inc
out
sbb
pop
scas
test
mov
cwtl
inc
repnz
push
xchg
mov
xchg
lcall
lret
movsl
shl
arpl
out
add
or
repz
test
loope
adc
xchg
mov
lods
or
pop
xchg
xorb
mov
stc
add
dec
xor
lock
fisubrl
shll
gs
sbb
pop
add
cmpsb
sbb
imul
or
insb
sub
jecxz
jl
mov
mov
std
cmpsl
es
cli
mov
mov
es
and
fcos
pop
cmp
lock
sbb
add
cwtl
fdivl
adc
jno
adc
js
in
xchg
test
jo
imulb
xchg
iret
mov
data16
or
aas
add
xchg
inc
das
in
std
dec
in
lahf
in
ficoms
or
dec
negl
aad
and
jns
pop
mov
fwait
addl
jl
ret
cmp
fsts
xchg
cltd
and
scas
lret
or
jae
ret
mov
adc
ret
xchg
fnstcw
pop
xchg
shl
xchg
or
fnstcw
cmova
in
hlt
mov
cmpsl
jns
mov
std
clc
ljmp
and
movsb
xchg
jb
pop
into
shll
sbb
sub
ror
xor
xchg
test
inc
sbb
cltd
mov
add
inc
jbe
fldl2t
cmpsb
dec
dec
or
movsl
bswap
je
xchg
stc
and
fldenv
rorb
ret
pop
inc
daa
lret
movsl
dec
or
in
sub
add
leave
repz
dec
cmp
inc
push
pop
scas
xor
or
insl
addb
ja
sbb
xchg
xchg
inc
movsl
repz
mov
xchg
fldt
lods
sub
cld
fisttpll
mov
mov
pushl
add
dec
outsb
add
or
xor
imul
leave
cmc
mov
lock
movsb
mov
popa
jmp
pop
mov
aad
nop
pop
push
sti
adcl
clc
into
mov
in
and
pop
inc
pop
in
dec
lret
or
dec
aas
lahf
int
out
jecxz
push
cs
push
lds
mov
and
pop
xchg
and
std
mov
fcomps
lcall
cmp
outsb
or
inc
stc
popf
mov
xlat
or
jnp
icebp
lret
jb
inc
scas
sub
cltd
leave
lds
pop
int3
dec
clc
fsubl
xchg
stos
fyl2xp1
outsb
std
roll
jns
ret
popf
mov
push
pop
data16
sbb
xor
sbb
xchg
fldl
add
aad
cmp
mov
sti
rol
repnz
adc
pop
leave
mov
mov
add
aaa
lods
lods
andb
jo
lret
icebp
mov
fstpt
mov
shl
mov
push
or
adcl
roll
movsb
loop
cmp
or
and
fisttpll
outsl
add
shll
mov
pushl
fisubrl
or
dec
mov
mov
scas
push
mov
lods
adc
movsl
les
mov
divl
fisttpll
cmp
aad
push
aam
lret
pop
sbb
inc
push
fdivr
cmc
fcompl
aas
push
inc
stc
mov
xchg
imul
in
test
cmp
xchg
pusha
aas
sub
into
hlt
lods
adc
or
pop
inc
jnp
add
cmp
xlat
sti
jnp
mov
xchg
not
jecxz
insb
std
ret
ret
popa
xchg
sarl
push
cmp
adc
rcll
scas
andb
shll
repnz
jo
xchg
cmpb
adc
push
jl
sarl
xacquire
jmp
inc
movsl
add
ss
fwait
or
sbb
push
scas
jne
add
icebp
mov
lcall
mov
or
xchg
or
jo
adc
scas
aam
fldl
jnp
stc
rcr
js
dec
jo
std
out
dec
lods
jecxz
adc
mov
mov
loope
mov
inc
jle
sub
adc
sbb
aas
pop
ret
xchg
cld
mov
adc
push
sbb
xchg
mov
jnp
mov
dec
rcrb
lock
rcll
dec
mov
mulb
fimuls
sahf
and
dec
test
outsb
in
lds
adc
lds
mov
imul
or
mov
es
mov
cmp
dec
insb
jnp
jecxz
insl
jo
repnz
leave
jbe
outsb
and
inc
mov
out
xor
iret
in
add
mov
hlt
dec
or
mov
jecxz
jp
inc
push
jle
mov
add
and
push
jae
mov
add
in
cmp
es
jecxz
inc
in
sub
test
push
mov
inc
mov
paddd
mov
inc
repnz
cmc
lahf
or
in
lret
mov
jp
xor
mov
adc
inc
or
movsl
adc
pop
stc
lea
push
xlat
sbb
jl
je
lds
frstor
add
jg
or
aad
rclb
cmp
jle
adc
and
mov
aas
sub
fnstenv
popf
mov
test
adcl
es
data16
xchg
mov
push
mov
shll
and
adc
add
xchg
xchg
inc
out
cmpl
xchg
out
or
mov
or
cmp
roll
jnp
and
pop
or
adc
adc
mov
xchg
or
iret
add
movsl
pop
mov
push
or
jp
rcll
cmp
out
outsl
shll
mov
xchg
adc
frstor
es
push
jae
popf
or
cmp
je
fs
xchg
and
movsl
and
xor
inc
or
notb
push
out
jne
mov
aad
clc
shll
and
aas
and
cmp
repz
mov
pop
jbe
push
xchg
adc
std
addr16
stc
jb
mov
lods
js
psllw
push
leave
out
shrl
push
sub
fnstenv
divb
lret
shll
dec
je
repz
outsb
and
xchg
inc
adc
imul
xchg
cmc
dec
fstps
js
in
loope
icebp
sub
jae
and
add
push
cltd
scas
outsl
xchg
sbb
mov
leave
int
shll
sbb
mov
add
data16
mov
add
mov
pop
mov
sahf
scas
inc
xchg
push
sub
out
pop
popf
stc
add
push
push
test
mov
addl
mov
jecxz
insl
mov
or
inc
rol
mov
mov
fstpt
mov
loope
add
popf
imul
test
notb
xchg
sub
lret
push
add
sbb
mov
out
xchg
mov
sub
mov
mov
test
push
mov
push
mov
pusha
or
xchg
shl
mov
mov
pop
outsb
mov
add
pand
xchg
aas
jecxz
cmp
mov
add
fucom
jg
ja
push
adc
mov
dec
adc
xchg
xor
loope
mov
mov
sti
adc
aad
mov
pop
rorl
push
fiadds
jl
repz
and
insb
lock
fsts
adc
push
incl
shl
sahf
dec
mov
jge
mov
out
mov
fld
mov
and
mov
adc
adc
inc
jo
mov
aas
out
data16
loope
mov
add
stc
mov
sbb
in
or
inc
cltd
in
cmp
mov
out
lds
xchg
out
scas
cmp
sbb
sbb
and
xchg
cs
in
xchg
sahf
adc
insb
jecxz
pop
fnsave
sub
or
xchg
lret
and
fisttpl
insl
mov
std
outsl
push
cltd
add
xlat
aad
shrl
leave
add
incl
dec
mov
xchg
xchg
in
mov
jbe
iret
xchg
mov
ljmp
sub
adc
les
jl
ret
adc
ret
sbb
leave
roll
xchg
fisttpll
scas
movsl
jg
std
scas
fsts
push
vunpckhpd
lahf
xchg
dec
popf
rcr
insl
scas
or
stc
sub
push
ja
leave
add
ret
shrl
aas
int
xchg
push
inc
fyl2x
das
repz
sub
jecxz
mov
mov
bnd
fwait
mov
shll
loope
aas
xchg
sbb
idivl
mov
insl
jae
adc
syscall
add
enter
inc
aas
fnsave
js
or
mov
mov
mov
lahf
push
call
hlt
cs
lds
aas
orb
popf
jmp
lods
stc
xor
lret
cmpsb
repz
divl
xor
xchg
imul
add
or
and
jp
mov
lret
cld
stc
dec
xorb
jmp
dec
pop
fldenv
push
aaa
cltd
jnp
cltd
mov
xchg
add
mov
fabs
aad
sub
cmp
ds
std
sub
push
leave
jecxz
repz
push
outsb
sti
push
in
adc
scas
fneni(8087
or
out
and
xchg
pop
rcrl
sub
xchg
cwtl
adc
je
std
test
stos
div
mov
mov
int3
add
aad
fstl
imul
sti
icebp
adc
cmp
repz
mov
or
ret
pop
xchg
fwait
adc
icebp
mov
jnp,pn
pop
and
fcoml
pop
adc
ror
stc
or
xchg
mov
out
scas
rcrl
push
mov
mov
test
jmp
stc
mov
cmp
add
mov
aas
mov
push
aad
dec
push
cmpsb
test
loope
mov
ja
sti
testl
or
loope
xchg
push
push
fwait
les
cli
ss
push
or
rcrl
int
aaa
add
notl
gs
xchg
fdivl
xchg
xor
jmp
out
sti
push
push
push
adc
dec
dec
out
pop
push
add
lea
adc
push
rcrb
aas
repz
pushf
mov
mov
sarl
xchg
xchg
push
cmp
xchg
pop
mov
mov
mov
outsb
sarl
aad
aas
xorl
pop
jo
and
pop
insl
jnp
mov
inc
inc
leave
or
jecxz
gs
xchg
xor
xchg
mov
pop
testb
int
aas
add
fnsave
add
fadds
inc
fsts
addr16
faddp
std
es
data16
out
fldt
dec
xchg
mov
int
aas
iret
lods
jle
repz
rcrl
cmpb
in
or
scas
out
xchg
xchg
xchg
subl
imul
adc
and
hlt
fisubs
sub
sti
loop
imul
aad
mov
outsb
std
xchg
sbb
stc
shrb
test
in
push
push
mov
ja
call
in
dec
sar
and
shl
sbb
xchg
push
aad
sub
sti
nop
iret
scas
repnz
adc
xchg
imul
and
sub
mov
aad
and
sbb
outsl
mov
lds
repz
shl
rcrb
test
test
jne
not
repz
add
pop
pop
inc
and
enter
ret
adc
jne
and
add
frstor
leave
scas
pop
mov
icebp
or
leave
sbb
xchg
xchg
loope
jl
aas
sbb
rcrl
cmpsl
in
out
mov
xchg
addr16
adc
pop
cli
mov
adc
scas
xlat
push
lock
mov
ja
or
aam
repnz
mov
adc
xchg
xor
popf
jge
scas
leave
lds
xlat
scas
hlt
stc
sbb
stos
fwait
popf
sbb
add
mov
and
push
push
push
sbb
lret
sub
mov
add
mov
es
xchg
sub
push
pop
push
dec
into
or
ss
mov
hlt
out
movsl
inc
xchg
int3
or
roll
cmpb
iret
fisttpl
mov
in
ret
xchg
notb
sub
not
lret
icebp
mov
xchg
push
std
aad
and
rcll
outsl
mov
adc
sub
std
mov
shl
mov
cmp
ret
mov
adc
test
fwait
and
scas
cmp
icebp
push
hlt
or
movsl
aad
lods
xchg
sahf
or
in
pop
movsl
lret
xor
mov
sti
sub
icebp
mov
lock
or
push
stc
push
cmpsb
mov
imul
dec
pop
mov
cmp
mov
and
fnstenv
jge
mov
sub
fcomps
dec
imul
cmp
or
movups
shl
inc
shl
loope
dec
repnz
call
sbb
or
ret
mov
sbb
mov
shl
popf
add
data16
push
sub
xchg
cmp
imul
xchg
aad
inc
mov
and
cltd
lock
cltd
jb
lret
xlat
js
notl
or
pushf
xor
sbb
incl
adc
ret
and
clc
mov
mov
mov
and
sti
aad
pop
xchg
sub
and
stc
sarl
fstps
aaa
dec
and
add
adc
cltd
out
jecxz
scas
mov
mov
xchg
into
adc
xchg
scas
add
rol
ud0
add
and
iret
jo
sbb
xlat
lret
ret
mov
xchg
pop
sti
je
roll
icebp
adc
mov
xor
inc
or
cmp
inc
nop
aad
push
es
data16
add
add
shl
lahf
mov
movsl
ret
in
pop
mov
jne
aad
lret
or
cmovns
popf
adcl
and
out
shl
jne
sti
jecxz
add
mov
xor
aam
pop
lcall
sbb
mull
cmp
fcmovnb
les
jecxz
or
xor
push
add
les
pop
popf
push
mov
or
mov
push
subl
inc
in
cmp
jl
jecxz
adc
jo
pop
icebp
or
movsl
and
dec
sbb
fst
int
xchg
lret
leave
cmp
xchg
cmpl
and
adc
divl
iret
jno
or
sbb
mov
or
data16
mov
mov
scas
negl
mov
ret
xchg
pop
aad
enter
xchg
frstpm(287
lods
int3
sbb
lds
pop
or
lcall
pusha
std
dec
or
jno
mov
inc
test
sahf
push
or
dec
je
das
inc
mov
fldenv
add
mov
aas
insb
loop
push
icebp
add
mov
out
in
test
aas
jg
or
cmpl
mov
lret
in
fldcw
add
add
pop
sbb
xlat
jecxz
repz
inc
into
loope
scas
add
xchg
mov
outsb
and
or
adc
pop
jb
pop
xchg
imul
imul
sbb
inc
or
and
insb
mov
ja
andl
jecxz
test
jl
imul
dec
es
icebp
fidivrs
xchg
out
push
sub
jb
movsl
jo
mov
sahf
lods
stc
in
dec
ret
jp
push
cmp
shrd
leave
cmp
dec
imul
std
fcomps
xchg
add
adc
pop
stc
jbe
adc
jmp
cli
outsb
push
std
int
sbbl
jecxz
movsl
aas
rcll
js
leave
adc
mov
in
add
cs
and
and
lcall
iret
push
or
stc
xlat
mov
adc
in
aaa
aaa
sbb
and
stc
dec
aas
std
pop
pop
or
incl
or
mov
popa
mov
mov
mov
cld
inc
add
data16
pop
mov
mov
and
out
outsb
dec
mov
fwait
data16
mov
leave
popf
stc
mov
mov
adc
sbb
jbe
or
mov
mov
xchg
repz
ss
adc
movsl
or
sti
je
jecxz
xchg
adc
iret
xor
add
ljmp
imul
xchg
cli
xchg
iret
fwait
push
xor
lods
into
cmp
cltd
sbb
std
stc
jl
and
std
push
enter
test
jb
aas
flds
pop
out
xchg
and
outsl
add
mov
movsb
icebp
ffree
pop
rep
ret
mov
adc
out
mov
ja
aas
add
xchg
jg
jno
and
hlt
negb
int
loope
jns
sbb
repz
pop
and
lahf
fldl
fwait
push
rcrl
pop
xrelease
mov
or
int
in
insl
mov
or
lcall
bsr
add
or
pop
ret
adc
sbb
negb
and
mov
rcrl
pushl
pop
cmp
xlat
aas
insl
sbb
mov
int
adc
mov
rolb
stc
insb
mov
movsl
fsts
ret
scas
data16
fistl
xchg
dec
pop
es
std
sbb
adc
outsb
pop
lret
js
mov
add
std
inc
sbb
hlt
mov
xchg
mov
stos
sbb
ja
and
pop
iret
pushl
xchg
adc
scas
or
pop
bound
xrelease
mov
fnsave
mov
iret
rcll
shlb
sub
and
sbb
add
add
jecxz
adc
out
in
repnz
dec
sub
jae
rcrl
iret
pop
mov
push
outsl
and
and
lret
adc
or
repz
xchg
in
notl
mov
cltd
jl
jl
jno
shrl
xlat
in
xchg
cltd
repz
std
adc
movsl
aas
inc
mov
leave
loope
ss
push
pop
sub
movsl
jmp
cmp
xchg
hlt
pushf
sbb
mov
mov
ret
iret
pop
xor
cmp
lcall
int
ss
add
aad
xchg
xchg
push
mov
mov
icebp
loop
arpl
loope
stos
xor
test
pop
movsl
mov
xchg
js
mov
jg
movsl
mov
mov
mov
mov
xor
aaa
xlat
and
ljmp
xchg
ljmp
sti
add
cs
stc
outsb
mov
in
addr16
enter
pop
cmpsb
int3
xchg
cltd
movsl
out
push
jmp
out
inc
add
ja
scas
sbb
mov
and
dec
jg
adc
fcmovnbe
cmp
aam
int3
arpl
es
pop
mov
int
pop
and
mov
adc
jbe
mov
test
outsb
iret
cltd
test
lds
roll
mov
jle
mov
or
aas
jmp
xchg
adc
adc
std
pusha
mov
repz
add
es
pop
mov
std
repz
not
adc
popa
xlat
mov
stos
loope
sub
mov
sti
shll
mul
jo
mov
in
cmc
enter
aad
les
cmp
std
cmp
js
arpl
adc
mov
adc
dec
or
xchg
add
test
sahf
mov
stos
and
fisttps
pop
cmpsb
jge
rorl
mov
mov
int
fcomi
jp
icebp
stc
iret
sti
dec
push
or
cli
in
std
mov
icebp
enter
js
popf
addb
jno
sti
mov
push
outsl
cmp
xchg
mov
or
cltd
leave
js
xor
xor
push
xchg
push
mov
jnp
mov
pause
xor
arpl
xchg
or
insb
hlt
xchg
shl
loopne
int
pop
addb
mov
pop
or
sbb
lret
inc
fstps
cmpsl
mulb
and
mulb
std
sub
repz
xchg
cltd
scas
cmp
mov
lret
cld
ss
xchg
jle
pop
stos
in
pop
add
movsb
in
dec
cltd
scas
dec
out
addr16
add
jno
mov
leave
add
cmp
cmp
pop
or
mov
mov
fildl
mov
lret
mov
and
mov
dec
push
cmp
out
cld
xlat
sbb
adc
mov
dec
xchg
scas
cli
add
cmpsl
sbb
jg
popf
fldcw
roll
xchg
mov
sbb
mov
icebp
popf
iret
pop
and
sti
push
and
add
in
inc
or
loop
inc
push
jecxz
ret
xchg
cwtl
sbb
popf
testb
xchg
daa
shll
hlt
sbb
int
sbb
aam
add
adc
ret
shll
mov
jmp
jmp
sbb
jmp
mov
dec
mov
fwait
mov
cmp
sbb
mov
daa
aaa
xchg
pop
aad
push
mov
and
mov
addl
xchg
scas
sbb
icebp
enter
and
sti
daa
adc
ja
repnz
repnz
push
mov
lock
add
and
dec
adc
mov
js
shr
flds
outsl
sub
movsl
jne
rorl
icebp
popf
int
test
adc
jae
adc
xchg
xchg
jae
bnd
mov
outsb
lret
stos
mov
mov
xchg
and
mov
xlat
out
shll
loope
mov
adc
in
ja
fistl
mov
mov
cmp
and
movsl
addr16
data16
repnz
mov
and
fwait
sti
add
jge
in
imulb
mov
outsl
xlat
jecxz
or
lds
mov
pop
ss
or
inc
aam
push
mov
iret
or
sbb
jmp
push
iret
push
fstps
daa
stos
dec
or
popf
data16
pop
mov
mov
out
int
movsl
psllw
jecxz
sti
cmp
jno
adc
mov
inc
cld
negb
add
jg
mov
dec
sarb
mov
icebp
sti
clc
add
fwait
dec
adc
out
fcmovnbe
sbb
mov
mov
in
jg
popf
mov
mov
mov
pop
neg
movsl
sbb
insb
xchg
in
cmp
adc
add
add
loope
adc
sbbl
xchg
roll
les
adc
cltd
jmp
pop
mov
xlat
lcall
mov
mov
inc
xlat
mov
push
roll
push
and
add
cmp
adc
out
adc
fisttpll
leave
jle
std
cld
fdivrp
dec
inc
jo
jecxz
jl
sub
fstpt
ret
lret
xlat
or
mov
mov
xchg
adc
jnp
std
mov
iret
je
movsl
adc
jo
shrl
push
xchg
mov
mov
jle
repz
leave
cs
jge
jecxz
jb
rcrl
lcall
ja
leave
mov
jle
cltd
test
inc
xchg
repnz
fs
jecxz
sbb
loope
repz
add
sub
lds
enter
mov
icebp
cs
or
jle
aas
jbe
sbb
scas
jp
or
adc
dec
pause
sub
jne,pn
push
dec
mov
mov
jge
xchg
divb
mov
sub
push
stos
mov
daa
or
aad
fistl
in
add
out
xchg
sbb
out
loope
mov
aas
pop
mov
pop
mov
cmc
in
shll
mov
rcll
jg
mov
shll
popf
lds
xchg
sti
ror
clc
rcl
std
mov
sarl
jbe
or
mov
inc
and
rclb
sti
xor
mov
hlt
ljmp
scas
arpl
fnsave
sbb
mov
pusha
iret
cmp
cltd
fadd
outsb
push
stos
jge
xlat
add
xlat
scas
scas
and
and
cmp
loopne
mov
mov
fcmovnu
flds
mov
cmpsb
mov
push
xorb
sbb
rcl
jge
adc
jge
adc
mov
in
xorb
ljmp
in
xchg
int
add
jno
mov
repnz
rol
std
push
ret
inc
or
mov
mov
sti
mov
mov
mov
pop
fwait
cmc
int3
rcr
xchg
dec
and
mov
shrb
movsl
mov
jle
inc
imul
jmp
out
scas
sbb
cltd
ficoml
aas
rolb
or
test
jne
xchg
rorl
xchg
lcall
jecxz
movsl
insl
lds
gs
shl
int
ret
add
push
movsl
adc
or
repz
lret
aad
mov
loope
xchg
xchg
xor
ror
aad
sbb
jle
repnz
hlt
sub
shll
cmpsb
inc
xchg
sbb
fstps
ret
adc
xchg
psubusw
xchg
insl
enter
stc
xor
repz
xor
xchg
enter
jl
jb
in
mov
inc
adc
dec
push
inc
cltd
jmp
add
testb
sbb
xchg
xchg
xchg
add
pop
xchg
in
idivl
scas
xlat
jne
aas
add
test
fstps
and
cltd
icebp
mov
iret
mov
pop
pop
cmpsb
mov
mov
lcall
fxch
mulb
std
fsubrs
fdivs
leave
daa
xchg
je
data16
mov
add
jno
and
mov
xchg
stc
jg
out
int
jge
xchg
push
cmpl
jbe
notl
cmp
sbb
mov
in
pop
outsb
adc
mov
insb
mov
pop
mov
cltd
jmp
xor
cmp
inc
xchg
mov
or
mov
cmp
int
loope
cli
mull
ret
mov
and
stos
cmc
arpl
mov
jbe
rsm
xchg
insb
inc
iret
mov
sbb
scas
adcl
icebp
gs
leave
ret
es
or
shll
fistpll
add
test
ficomps
daa
stos
dec
orb
stc
jbe
movsl
lds
movsl
shll
adc
loope
add
mov
ds
int3
push
fwait
int3
cmpsl
std
push
fwait
iret
test
hlt
add
mov
jmp
inc
add
cmpsb
and
addb
pushf
test
xchg
popf
add
xchg
fildll
dec
sti
mov
sbb
xlat
scas
xchg
out
fdivrl
fwait
mov
repz
xor
add
mov
aam
push
cltd
adc
mov
loopne
xor
cmc
aad
aaa
push
aas
notl
insl
scas
xlat
popf
aad
dec
orl
adc
push
sti
test
mov
aaa
and
add
xor
jo
pop
aas
in
pop
push
xor
and
add
add
or
mov
inc
orb
clc
movsl
adc
push
push
xchg
outsb
in
cli
jns
mov
jns
movsl
stos
iret
push
dec
push
pop
mov
mov
or
pop
scas
mov
in
outsb
fs
cmp
mov
pushf
cltd
hlt
pop
sbb
test
cwtl
dec
inc
loope
orb
cli
ss
repnz
sbb
jp
imull
xor
in
iret
in
mov
fwait
mov
aad
mov
push
mov
std
sub
or
xlat
sbb
mov
or
inc
add
cwtl
lea
jge
fwait
mov
or
pop
sbb
ja
or
push
test
scas
movsl
xchg
repnz
sub
arpl
stos
out
mov
mov
dec
adc
daa
or
xchg
std
adcl
call
orb
xchg
imul
xor
scas
dec
fwait
dec
jl
cs
push
or
insl
mov
xchg
jnp
pop
fstpt
mov
jl
mov
aad
ret
aas
jecxz
jmp
adc
cmp
outsb
sar
mov
jge
int
pop
inc
bswap
outsl
js
adc
inc
mov
add
xchg
test
mov
jecxz
mov
add
add
push
imul
xchg
cmpsl
mov
rol
add
mov
mov
adc
sub
pop
fnstcw
xchg
push
jl
sbb
adc
push
adc
jl
fsts
lret
mov
xchg
nop
sbb
in
push
pop
push
mov
aas
mov
movsl
call
pop
and
mov
ret
push
push
pop
jns
sarl
clc
rol
out
and
cmp
mov
sbb
ss
pop
out
ret
mov
int
outsb
mov
cld
stc
rolb
sarl
sbb
pop
mov
and
mov
addl
cltd
out
and
mov
data16
inc
cltd
js
leave
mov
out
xchg
aad
mov
mov
ja
adc
mov
rorl
mov
leave
int3
adc
aas
mov
mov
insl
aaa
rcll
add
out
arpl
outsb
clc
scas
or
js
mov
andl
jg
fmuls
mov
and
fwait
repnz
leave
mov
adc
stc
outsl
mov
sbb
pop
cmpsb
int
mov
pushf
test
sbb
pop
es
aad
in
ja
in
jecxz
scas
addb
jno
inc
pop
and
dec
xchg
and
nop
or
jecxz
repnz
mov
stc
sbb
stos
mov
jo
scas
mov
loop
js
loope
mov
outsb
xlat
mov
cmc
xlat
popf
dec
adc
out
mov
in
cmpl
push
nop
pop
lods
or
jecxz
pop
sbb
fcomi
int
jecxz
fstps
insb
xchg
and
xor
or
mov
lods
mov
popf
xchg
cmp
mov
dec
in
pop
leave
or
dec
mov
pop
roll
sti
push
divb
mov
sbb
aam
clc
sbb
imul
mov
aas
mov
jle,pn
test
mov
inc
pop
and
jnp
xchg
mov
lock
popf
or
and
xchg
mov
sub
roll
adc
mov
repnz
push
frstor
fwait
loope
mov
adc
rcll
mov
sub
jo
xchg
mov
add
mov
out
sti
mov
insb
sub
out
shrl
test
lcall
orb
jle
add
mov
out
stc
frstor
scas
add
sub
imul
mov
scas
dec
repnz
repz
adc
mov
mov
xor
jae
stc
fwait
xchg
roll
stos
adc
into
lods
addl
xchg
jo
xchg
iret
jne
xchg
add
mov
int
insl
into
pop
adc
adc
dec
sbb
sti
cmp
rclb
adc
jns
xor
shlb
popf
outsb
shl
aas
xlat
adc
mov
add
dec
add
aad
outsb
ret
insl
inc
adc
fdivrp
sbb
lcall
jbe
pop
iret
popf
mov
das
daa
xchg
inc
mov
mov
add
sub
push
dec
inc
jecxz
arpl
xchg
rclw
insl
adc
enter
pop
and
ret
cmp
jp
loope
mov
movsl
jae
add
stc
sti
sbbl
jg
xlat
je
std
mov
lahf
pop
mov
ja
lds
jg
stc
cmpsl
ja
mov
movsb
rclb
cltd
dec
loope
popf
dec
aaa
xchg
aad
adc
fwait
push
mov
sub
addr16
add
push
dec
jb
test
jl
and
addr16
sub
or
jecxz
cs
mov
fwait
repz
dec
imul
data16
jge
adc
push
add
pop
jno
movsb
inc
shr
loop
push
inc
mov
pop
sbb
xlat
sbb
sub
jge
mov
loope
clc
dec
mov
push
clc
ret
inc
xchg
add
lahf
mov
push
ds
push
xlat
popf
jo
xchg
adc
in
sub
lods
daa
sbb
mov
cmc
aad
decl
add
adc
sbb
lods
test
movsb
out
sub
xor
shll
mov
movsl
into
sti
out
test
cmpsl
xchg
dec
repz
cmp
sub
je
push
or
xchg
sbb
push
stc
ret
es
pop
test
jns
adc
fwait
div
roll
mov
xor
push
mov
call
push
cli
mov
hlt
xor
lahf
jns
sbb
dec
adc
in
cmp
sbb
sbb
call
inc
lret
xlat
shrb
sub
int
leave
cltd
sbb
cmovns
cli
and
cmpsb
cltd
aad
pop
bound
add
mov
and
insb
sub
jae
sti
test
sbb
cltd
test
scas
popf
xchg
out
mov
aad
pcmpgtd
pop
fwait
adc
sub
bound
dec
in
out
jg
xchg
mov
data16
inc
mov
mov
idivl
push
sahf
imul
sub
aas
dec
lret
shl
icebp
jge
lret
leave
fwait
lods
jnp
movsl
arpl
mov
iret
dec
push
mov
out
out
outsb
jbe
mov
addr16
or
add
mov
or
out
in
int
test
add
pop
and
aas
cltd
xchg
push
flds
dec
or
add
bound
pop
mov
scas
mov
sti
or
mov
mov
push
jle
mov
lds
dec
sti
mov
inc
xor
inc
scas
or
lods
call
lret
in
push
and
mov
sbb
push
mov
mov
sbbb
int
add
jbe
add
mov
movsl
or
mov
ljmp
repz
and
xchg
inc
fxch
aad
in
loope
imulb
call
push
mov
call
pop
out
test
mov
stc
mov
call
repz
maskmovq
idivl
and
or
or
jae
mov
hlt
mov
add
cmp
push
cmc
fistps
in
int
aaa
sbb
mov
jge
mov
jp
adc
add
cmp
xchg
mov
add
jne
mov
inc
mov
dec
jmp
jg
and
xchg
shl
movsl
xlat
vdivpd
xchg
dec
and
ret
or
aad
xchg
mov
jle
sahf
fadd
cli
testb
sti
xchg
mov
jecxz
fwait
mov
daa
mov
sar
iret
jmp
push
icebp
in
sbb
insb
mov
pop
std
and
lret
movsb
movsl
adc
mov
ds
xchg
dec
fucomi
lea
lds
mov
movsl
test
jecxz
xor
ds
sarl
mov
xchg
xchg
fbstp
pop
add
add
mov
test
xchg
xchg
jecxz
cmp
mov
pop
andl
aad
dec
and
mov
jge
test
ret
jb
add
jb
sbb
rcrb
xor
fpatan
aas
mov
mov
iret
push
pop
decw
adc
pop
rcll
roll
mov
add
adc
cltd
lret
and
pop
jae
add
aad
sbb
outsl
cmp
and
mov
adc
or
push
jmp
repz
fxch
aad
and
xchg
push
rcll
add
sub
rorb
shl
test
mov
lahf
xor
in
stc
mov
xlat
aas
mov
test
dec
add
int
fistps
xchg
addr16
sbb
daa
mov
sbb
sarl
fwait
add
fldl
aaa
or
mov
push
mov
add
xchg
adc
rolb
in
data16
xchg
sub
mov
lea
mov
fsubs
lahf
xchg
dec
mov
mov
mov
pop
sahf
adc
push
jmp
xchg
fmuls
pop
adc
mov
sbb
rcrl
rolb
hlt
xchg
lret
fcmovnbe
fistps
and
add
test
or
mov
jge
fisttpll
sub
add
aas
sub
jae
test
adc
push
mov
mov
es
mov
xchg
dec
les
pop
or
cs
and
rorl
test
cmp
imul
in
add
add
and
xlat
adc
insl
je
xchg
movsl
xlat
mov
adc
loope
mov
push
inc
insl
pop
testb
fwait
xchg
test
pop
rcr
rcrl
popf
scas
xchg
stc
fcmovne
mov
add
add
mov
aad
int
fiadds
or
out
adc
popf
loope
cmp
in
xchg
sbb
int
fistpl
jp
iret
push
xlat
mov
jmp
cltd
xchg
jecxz
fsts
mov
mov
sub
adc
insb
in
fdivs
and
std
push
popl
andb
mov
mov
ss
mov
pop
scas
lret
movsl
fdivl
cmp
mov
jnp
iret
outsl
pop
mov
jecxz
add
lcall
push
fwait
in
mov
ljmp
pop
lods
subl
ror
movsb
xor
dec
arpl
popf
shl
xchg
mov
fwait
mov
xchg
mov
shrb
jp
push
push
sub
mov
mov
dec
sti
pop
inc
jge
sbb
sub
lret
cmpsb
or
xchg
std
and
imul
rorb
jecxz
jnp
decl
out
ljmp
mov
in
ret
aad
and
jecxz
repnz
iret
and
mov
mov
inc
mov
fwait
repnz
xor
add
scas
cltd
inc
popa
or
js
faddp
lock
xchg
rorb
test
ss
mov
in
xchg
movsl
pushf
xchg
lock
lods
adc
push
sti
int
loope
sarl
jne
pop
mov
or
mov
or
stos
adc
leave
hlt
sbb
xchg
nop
movsl
push
xor
xchg
mov
sub
xor
push
push
dec
sarl
std
cltd
inc
mov
adc
cs
sbb
out
inc
pop
orb
int
incb
hlt
sbb
out
or
lret
int
cmpsl
sarl
xchg
xor
xor
jb,pt
push
push
cmp
xlat
cli
ss
into
ja
lret
mov
mov
fcomps
mov
icebp
fwait
repnz
andl
pop
in
push
adc
inc
in
data16
add
push
andl
inc
mov
movl
fistl
data16
lret
loope
jp
pop
bnd
imulb
popf
add
sub
or
lods
sub
mov
fwait
pop
stc
rol
into
mov
decl
fistl
or
mov
adcb
scas
mov
int
lret
pop
cmp
mov
and
sti
mov
repz
xchg
ja
lds
pop
or
add
data16
cmp
cmp
jge
shll
inc
mov
ret
scas
sti
ret
push
out
aad
js
in
leave
and
adc
cmpsb
mov
or
sbb
in
icebp
idiv
push
into
rolb
cmpsb
xlat
fsubp
insb
icebp
push
mov
leave
repz
xchg
push
pop
fnsave
scas
add
dec
insl
sar
test
frstpm(287
test
xchg
jbe
mov
loope
fwait
mov
jne
mov
push
int3
jnp
leave
popf
or
jo
iret
or
pop
mov
or
mov
xlat
inc
mov
mov
popf
cmp
imul
jl
mov
loope
cltd
or
sarl
add
xchg
movsl
popa
cwtl
inc
mov
pop
lds
ss
lods
xchg
scas
jg
fldt
mov
mov
dec
adc
mov
jmp
mov
fldenv
rorl
sub
movl
xor
lds
in
jge
out
jo
adc
idivl
sti
xchg
sub
cltd
adc
xchg
fadd
cmpxchg
jb,pt
xchg
out
test
aad
lret
sbb
adc
xchg
fisttpl
xor
xchg
mov
sbb
sbb
cltd
xchg
decb
cld
jle,pn
repnz
sahf
dec
inc
popf
adc
mov
loopne
aad
lret
push
in
repz
dec
mov
inc
aas
scas
or
js
and
lahf
pop
dec
dec
ja
mov
xor
mov
xchg
mov
sahf
es
xor
in
mov
add
rorl
jg
jne
icebp
sbb
mov
loope
mov
lods
lds
jl
test
pop
or
leave
fwait
mov
iret
fwait
xorl
add
cmpsb
pop
ljmp
out
pop
push
sahf
mov
fsubl
add
mov
add
sub
sbb
bound
adc
sbb
addr16
cmp
mov
cltd
xchg
or
or
jg
mov
in
jl
xchg
mov
push
mov
ss
sbb
mov
fisubrs
mov
mov
fwait
insb
cmp
adc
shll
int
adc
movsl
icebp
and
xchg
sbb
stos
and
lds
adc
aas
and
aad
jb
add
pop
sar
div
rol
sbb
add
mov
std
cwtl
mov
cmp
aas
lods
push
lds
cmp
push
and
and
and
cmp
dec
test
clc
inc
fdivl
sbb
les
push
xor
mov
jecxz
inc
adc
rcll
push
add
in
or
and
jb
mov
mov
leave
adc
std
insb
jbe
imul
or
jae
mov
sbb
aas
out
xor
mov
lock
adc
repz
and
mov
fildl
sbb
std
jg
inc
fstl
sqrtps
js
or
xor
rcrb
adc
call
add
lret
xchg
adc
js
add
idivb
int
mov
ljmp
out
lret
sti
scas
adc
inc
lcall
leave
into
mov
je
inc
aas
and
mov
sub
pop
sbb
rclb
es
int
roll
pop
and
ret
push
pop
adc
xchg
in
inc
movsb
into
and
or
and
xor
add
jecxz
lock
xchg
in
adc
lea
or
imul
rclb
enter
insl
movsl
rcll
imul
inc
and
iret
mov
mov
fstps
aas
sarb
rcll
enter
mov
adc
mov
into
sti
data16
push
icebp
lret
xchg
lret
jle
xchg
fwait
xchg
mov
in
into
xchg
dec
or
cmpb
jbe
leave
fnstcw
incl
aad
push
adcl
xlat
cmp
frstor
inc
ljmp
unpckhps
iret
lds
ret
push
aad
cltd
push
js
sbb
xchg
adc
or
in
mov
mov
leave
icebp
jb
aad
test
and
jbe
jecxz
leave
std
jnp
scas
iret
xlat
add
out
negl
mov
aad
ror
int
in
inc
es
daa
icebp
and
test
adcl
jbe
or
fnstenv
xor
jne
add
leave
out
iret
aad
lods
in
adc
movsl
inc
or
hlt
and
xor
xchg
loop
ljmp
cltd
xlat
pop
fidivs
mov
or
mov
scas
fists
ss
movsb
mov
out
icebp
mov
xor
pop
test
sti
fwait
xchg
inc
rol
bound
inc
fld
mov
or
xchg
add
push
div
push
xchg
je
shl
sti
test
or
lds
or
popf
mov
mov
mov
decl
sbb
psadbw
push
adc
adcl
sti
inc
stc
jae
xchg
lds
in
loope
xchg
adc
xchg
cmp
ficoml
and
scas
mov
test
mov
pop
bswap
ja
or
ret
or
add
pop
sbb
dec
insl
and
idivl
scas
adc
iret
and
testb
cs
sbb
or
or
adc
mov
daa
not
dec
fsts
xchg
xchg
sbb
mov
jle
je
xchg
or
mov
rcrl
je
inc
lret
and
dec
jle
hlt
jne
out
mov
xor
gs
mov
shl
cmpsl
insl
xchg
or
sub
movsl
or
scas
pop
adc
ja
sahf
scas
sub
pop
add
dec
andl
fwait
mov
pop
imull
mov
in
iret
mov
sub
jae
lcall
mov
cltd
daa
and
jge
rorl
out
jmp
repnz
aad
mov
out
jecxz
sub
insl
data16
mov
sub
adc
daa
adc
xor
and
nop
outsb
rclb
add
inc
inc
les
sbb
fcmovne
lds
xor
std
or
imull
mov
stos
test
adc
rcrl
rep
jo
xchg
xchg
sub
mov
push
push
cmp
adc
pop
sti
and
popa
adc
repz
xchg
shld
fwait
sbb
int
xchg
adc
mov
mov
data16
fndisi(8087
add
mov
push
inc
in
or
dec
sarl
xchg
and
pop
stc
inc
ljmp
test
lock
and
aas
xchg
ret
push
jne
rcll
mov
mov
mov
movsl
lods
jbe
pop
icebp
nop
mov
mov
sub
fwait
cmp
je
sbb
mov
jge
cmp
mov
push
pop
add
xorl
fldenv
ja
jmp
iret
imul
cmp
xadd
in
jecxz
dec
fsts
fwait
push
cltd
rorb
push
nop
pop
and
popf
xchg
jmp
dec
xchg
mov
xor
out
lds
ds
aam
jecxz
push
pop
jge
mov
dec
lcall
or
in
rcr
push
lcall
jae
sbb
sti
pushf
mov
iret
mov
cwtl
and
and
pop
mov
or
xchg
jno
mov
or
pop
dec
mov
subb
xchg
adc
pop
mov
iret
mov
inc
andl
xchg
repz
pop
add
test
subl
xchg
jno
and
repz
push
popf
xor
adc
xor
push
add
mov
xlat
cltd
adc
or
sar
push
jle
lock
xchg
mov
pop
movlhps
cltd
flds
inc
xchg
cmpsb
aas
icebp
in
cltd
outsl
xchg
dec
mov
add
ja
or
iret
xchg
pop
mov
icebp
xchg
pop
scas
dec
subl
jge
mov
jno
sarl
push
adc
pop
aad
mov
mov
mov
mov
pop
and
dec
push
jg
int
lahf
mov
mov
decl
aam
mov
rcr
adc
dec
or
mov
movsbl
subl
repnz
and
xchg
fstpt
or
or
pop
mov
sbb
imul
mov
jns
xchg
and
outsb
push
sarb
in
adc
aas
cmp
xchg
hlt
ficoms
int
and
mov
mov
jge
std
jl
jo
mov
cltd
sbb
jno
ret
xlat
mov
or
dec
movsl
sti
inc
sti
jl
jle
xchg
mov
std
or
int
pop
negb
mov
cs
das
lds
fsubs
imul
pop
dec
pop
push
shll
addl
inc
not
and
leave
mov
add
loope
lds
lock
lret
dec
sub
pop
shll
xchg
and
cwtl
dec
leave
sbb
popf
test
inc
xchg
mov
mov
loope
pop
cltd
paddusw
stc
repz
fldt
scas
mov
or
shll
mov
xchg
clc
xchg
or
shlb
sti
mov
mov
fnstcw
paddw
rcll
pop
mov
pop
push
divl
push
and
roll
repz
ret
mov
cmc
add
pop
mov
in
mov
xchg
adc
ss
out
aaa
mov
scas
pop
cmp
jno
add
int
mov
in
adc
pop
cltd
pop
imull
mov
stos
mov
rcr
sub
sti
in
cmp
insl
fdivrs
shrb
roll
sbb
sbb
or
movsb
call
test
in
stc
fiadds
dec
xchg
inc
aad
push
ss
leave
in
add
imul
mov
in
repz
dec
and
sbb
repnz
mov
stos
mov
jecxz
mov
fldenv
cmpsb
test
sub
mov
mov
out
pop
mov
std
mov
out
mov
shll
inc
inc
pop
mov
pop
sbb
cmp
mov
loope
push
jne
mov
cltd
out
lret
sub
sarb
flds
jecxz
xor
movsl
loop
cmpsl
mov
or
imull
out
call
dec
mov
int
mov
std
shll
mov
xor
insb
hlt
lahf
divl
in
cmp
inc
test
jno
int
cmc
mov
adc
mov
add
test
loop
or
and
shll
imul
add
loope
repnz
rcll
mov
inc
push
pop
or
repz
ljmp
fisttps
add
jo
icebp
jnp
add
seta
std
push
and
in
ja
mov
or
dec
sbb
cmc
mov
mov
std
in
push
fidivrs
scas
dec
ret
lcall
jb
mov
push
jp
fwait
ja
adc
inc
mov
fwait
stc
push
cltd
xor
mov
call
mov
lds
scas
in
js
xchg
mov
repz
pop
xlat
leave
jne
notl
pop
sti
sbb
scas
imul
inc
lcall
sbb
pop
fcomi
scas
sbb
mov
aas
mov
xchg
mov
imul
xlat
outsb
add
loope
out
test
outsb
pop
movsl
sbb
mov
inc
or
addr16
jae
incl
or
pop
stc
fstl
movsb
inc
or
mov
adc
movsl
mov
mov
cmp
pop
dec
bswap
cmpsb
add
adc
std
rclb
mov
xchg
sbb
shrl
pop
push
filds
jno
add
xchg
sbb
jmp
jg
lret
jmp
insb
pop
mov
xchg
and
add
and
mov
jnp
ret
out
cld
aam
or
std
sbb
in
scas
or
pop
roll
jns
decl
std
mov
hlt
xchg
add
adc
data16
mov
inc
movsl
push
cltd
dec
lds
out
cltd
in
outsb
movsl
sub
mov
pop
shll
xchg
stos
es
add
sbb
cmp
icebp
adc
push
ret
and
cmp
hlt
daa
mov
xchg
add
mov
inc
imul
lods
add
mov
add
test
lret
cltd
hlt
icebp
mov
into
add
outsl
loope
out
jecxz
dec
popf
xlat
ret
sbb
sbb
xlat
push
push
or
jns
ret
inc
in
mov
xchg
mov
in
sbb
idivl
jecxz
lret
fucomp
adc
icebp
test
mov
ret
cmpsb
notl
xchg
scas
aas
sti
cmpsb
xchg
in
add
xchg
sahf
adc
xchg
iret
sub
cltd
sub
std
in
or
sarl
icebp
in
scas
push
or
imul
sub
mov
popf
icebp
pop
add
aas
and
pushf
sbb
pop
mov
fnsave
loope
and
jne
int
fwait
stc
leave
mov
fpatan
mov
cs
pop
leave
cs
out
insl
in
in
and
ja
pop
sbb
sahf
imul
xchg
mov
hlt
cwtl
scas
dec
sbb
insb
xchg
jns
or
add
jl
fistl
mov
rcrl
int
jl
es
mov
stos
adc
fstl
xor
mov
incl
fldenv
sbb
mov
mov
iret
ss
lds
stc
popf
dec
aad
xor
out
mov
push
cltd
or
push
icebp
jg
int
xor
aad
xor
ret
hlt
add
pop
push
sbb
and
add
push
cwtl
fldcw
ja
pop
mov
mov
xchg
ljmp
jg
int
scas
in
mov
imul
jbe
xlat
jecxz
pop
out
mov
push
mov
lock
sahf
jle
jb
popf
mov
icebp
xchg
xchg
mov
mov
push
lcall
pop
repnz
add
dec
fwait
and
sbb
std
cmp
jns
add
sbb
test
cltd
mov
aad
dec
fldt
aas
lret
sbb
hlt
mov
adc
or
jecxz
add
mov
adc
out
sti
xchg
mov
mov
xor
test
arpl
sbb
rclb
or
jmp
ret
cs
sub
mov
lret
fwait
xlat
xchg
rcll
push
iret
jae
sbb
pop
fldenv
out
mov
es
lret
scas
movsb
data16
cs
loope
inc
adcl
adc
std
add
sbb
stos
xlat
add
sbb
lcall
dec
sbb
or
jno
cltd
sbb
adc
cld
and
in
sbb
iret
dec
xchg
test
pop
jmp
leave
add
roll
xlat
vmovss
shll
movsl
fwait
or
and
icebp
fst
push
addw
jge
sbb
sbb
mov
fxam
movsl
sub
les
pushf
mov
add
dec
sti
push
adc
cltd
jle
scas
jno
in
andb
ds
push
or
pop
sbb
push
xor
and
ja
cltd
add
repz
sbb
add
inc
cmp
and
pop
or
insl
jns
sbb
pop
pop
cmpsb
inc
mov
popf
jno
loope
hlt
mov
jl
sub
leave
fwait
cvttps2pi
bound
loope
dec
xlat
or
cltd
stos
lret
jp
mov
leave
mov
in
xchg
dec
jecxz
pop
arpl
xchg
int
adc
pop
jge
jb
mov
xchg
add
stos
divl
adc
xchg
mov
inc
pop
xlat
jge
cltd
sbb
add
movsl
mov
repnz
pop
jnp
int
fcmove
inc
pop
pop
aas
in
nop
jne
sbb
fimuls
loope
cmp
mov
sti
int
xchg
mov
xor
faddl
push
cmp
mov
sub
cli
cmp
jg
movups
xchg
pop
push
pop
std
mov
repz
std
roll
js
pop
sbb
or
push
sub
jae
or
pushf
xor
pop
xchg
jecxz
add
outsl
daa
sti
repz
add
xlat
inc
rcr
or
mov
out
push
lock
call
jge
popf
out
movsl
repz
icebp
fcomps
cmp
jae
and
mov
jns
sbb
sbb
es
dec
cmp
stc
int
mov
icebp
test
mov
sbb
cwtl
testl
mov
sbb
xlat
fldl
out
push
cmp
out
cmp
mov
icebp
test
push
rcll
aam
inc
mov
aad
mov
out
in
push
sbb
pop
xor
ret
je
inc
or
xchg
mov
and
cld
push
mov
sti
cmp
iret
dec
mov
mov
mov
loope
arpl
mov
aad
ljmp
pop
xlat
jp
leave
or
lahf
xchg
negb
lret
mov
sbb
icebp
pop
xorl
inc
aas
ret
cltd
out
mov
popf
shll
hlt
xchg
iret
adc
mov
pushf
movsl
enter
fstpt
loope
lods
testb
xchg
mov
mov
sub
call
add
mov
adc
sbbl
loope
shrb
jle
jl
sub
lds
jle
jecxz
xchg
mov
adc
call
push
or
cltd
adc
jns
xchg
test
sub
mov
inc
loop
add
xor
or
mov
mov
mov
inc
outsb
pop
fisttpl
fwait
popf
pop
out
pop
xchg
sbb
push
repnz
lret
cld
pop
es
cs
dec
add
pop
decl
in
fisttpll
cmpsl
rclb
or
repnz
add
mov
orl
xchg
icebp
sub
outsb
sub
sahf
daa
ljmp
inc
imul
mov
xchg
adc
jae
mov
aad
fdivl
mov
adc
push
xlat
rcll
lods
loop
lods
dec
outsb
mov
dec
orl
mov
or
insl
stos
out
std
mov
pop
vpavgb
xor
lret
push
or
arpl
xchg
imul
das
leave
pop
movsb
scas
movsl
es
or
mov
repnz
icebp
ja
mov
mov
push
stc
and
pop
jmp
sub
cltd
mul
lds
sbb
inc
jns
add
xchg
sbb
mov
sbb
jb
lret
fwait
lea
xchg
adc
mov
or
xchg
int
in
add
inc
jo
xlat
std
iret
push
ja
xchg
incl
roll
xor
jl
daa
mov
cmova
fldt
and
notb
sub
leave
roll
mov
dec
xchg
shrl
push
daa
pop
std
mov
flds
lds
xor
mov
scas
int
push
mov
xor
sbb
adc
mov
push
insb
jmp
mov
jmp
fucom
sub
iret
rorl
out
fisubrs
shlb
icebp
cmc
sbb
jecxz
mov
xchg
mov
mov
cs
divl
pop
dec
or
lret
sbb
push
out
jmp
mov
jle
dec
push
mov
popf
js
cltd
dec
mov
or
mov
sub
dec
aad
stc
xchg
fsts
ja
cltd
movzwl
and
push
fnstenv
add
lahf
mov
sub
in
push
movsl
in
xchg
bound
movaps
hlt
shrl
aad
mov
lret
mov
mov
fistpl
stc
mov
pushf
adc
adc
shrb
mov
aad
mov
jns
aas
icebp
cmp
repnz
rcl
repz
je
mov
jg
loope
es
inc
int
sub
cmp
or
lret
movsl
bswap
dec
sbb
int
pop
cltd
pop
test
mov
lods
jb
js
xchg
push
test
lods
aad
cld
je
out
ret
push
or
xchg
mov
stc
adc
xchg
cli
in
repz
xchg
call
addr16
fisubs
cltd
fstpt
xchg
push
xchg
push
sbb
stc
lds
xchg
adc
add
xchg
pop
push
adc
in
xchg
ret
es
movsl
cmp
add
push
ret
adc
sbbl
ja
xchg
pop
jnp
and
adc
aad
xchg
scas
mov
rcrl
mov
push
fwait
ret
dec
seta
popf
jl
js
push
stc
push
std
push
test
loope
daa
aas
pop
adc
mov
scas
notl
movsl
adc
in
and
or
jno
inc
shll
sbb
mul
mov
repnz
sbb
xchg
and
sbb
icebp
mov
out
push
jl
push
stc
xchg
sti
lret
or
in
rol
adc
fnstcw
xchg
loopne
or
xor
jo
out
sbb
pop
imul
int
adc
mov
fldenv
in
mov
or
shll
cmpl
js
adc
clc
pop
rcl
inc
adc
insl
add
ret
xchg
mov
adc
mov
icebp
sub
stos
inc
dec
rcl
imul
jecxz
mov
test
dec
mov
fstpt
nop
mov
stos
lcall
dec
adc
mov
and
scas
mov
in
add
ljmp
cltd
add
mov
adc
xchg
xor
not
ud0
mov
js
mov
sbb
xchg
mov
out
jp
outsb
data16
push
scas
ror
popf
and
xchg
and
icebp
int3
je
jecxz
cwtl
inc
outsb
pop
jne
stc
std
ror
push
pop
push
std
data16
jnp
jecxz
repz
int
jne
sbb
xlat
mov
fmul
mov
inc
mov
or
sti
call
pop
cltd
xchg
shrl
xor
pop
out
sbb
mov
ja
or
stc
inc
dec
scas
fdivl
int
in
sub
mov
mov
mov
daa
cwtl
ss
jo
or
mov
loope
pop
or
pop
inc
jo
or
mov
jmp
js
add
mov
xchg
jno
adc
pop
fstpl
in
mov
test
xor
jge
fldl
mov
jbe
mov
in
jecxz
ftst
sbb
popf
hlt
andl
inc
or
push
mov
mov
pop
jno
icebp
mov
mov
xchg
mov
xchg
xlat
add
jbe
mov
xor
jnp
rcl
mov
inc
test
lea
xchg
push
out
jge
adc
lret
shrb
jae
iret
and
jo,pt
imul
fnstcw
orl
daa
mov
stc
leave
ret
out
mov
movsl
sarl
repz
adc
ret
int
jno
and
inc
lahf
add
mov
xchg
repz
push
push
lret
jne
xchg
lret
mov
adc
repz
jae
xchg
std
daa
repnz
fwait
mov
mov
shl
out
xor
setns
icebp
lret
out
and
out
daa
int
es
cltd
data16
jno
adc
xchg
mov
pop
in
in
jge
aaa
adc
sub
jge
mov
shl
xchg
cltd
or
mov
xchg
leave
or
push
mov
mov
repnz
dec
aad
call
addr16
dec
adc
lahf
lea
xor
jge
fwait
mov
mov
int3
movsl
mov
or
lret
cld
push
dec
imul
cmp
idivb
bswap
xchg
jecxz
fildl
jge
sbb
js
mov
enter
lret
mov
imul
or
pop
in
xlat
pop
movsl
popf
repnz
fcos
stc
jmp
adc
iret
lods
adc
mov
pop
arpl
and
mov
dec
outsl
mov
sahf
mov
or
je
fcoms
push
iret
mov
shrb
pop
dec
or
pop
jecxz
leave
dec
cmpsb
mov
lret
adc
mull
je
std
xchg
lret
xchg
lods
mov
fadd
daa
add
cmc
aas
sbb
mov
scas
mov
pop
cmp
shll
mov
inc
stos
jle
or
stc
negb
adc
push
xchg
add
mov
mov
fadds
aas
mov
sub
or
add
inc
adc
mov
mov
adc
outsl
pmullw
add
xchg
jne
xchg
lds
dec
jno
fistpll
mov
sub
cmp
fisttpll
fwait
dec
fstl
xchg
mov
xlat
std
repnz
mulb
fnstenv
js
icebp
push
jecxz
xchg
inc
adc
add
adc
nop
leave
jge
mov
pop
imulb
jg
mov
push
xlat
jae
aas
fstl
sbb
mov
cmpb
iret
add
jae
add
addr16
xchg
jnp
mov
adc
insb
dec
sti
imul
roll
ljmp
fistps
lahf
inc
pop
repnz
cmc
push
mov
aaa
mov
cmp
inc
jb
icebp
not
cmp
sbb
rol
aad
aas
sub
scas
sbb
cmp
mov
cmc
xor
xchg
xlat
dec
leave
xchg
lcall
mov
or
sub
sarl
call
or
repz
sub
mov
xor
imul
fwait
pop
adc
or
mov
adc
rclb
andl
andl
mov
and
repnz
lret
mov
xchg
add
repz
pop
scas
lcall
mov
jnp
inc
push
cltd
mov
fincstp
mov
and
add
stc
fdiv
xor
xchg
mov
mov
pop
jae
popf
or
add
pop
fldl
push
adc
lret
movsl
scas
psubusw
or
mov
std
popl
cltd
inc
push
loope
repnz
push
fcmovnbe
ret
cli
icebp
cmpsb
jno
xchg
or
add
xchg
mov
sbb
repz
inc
insb
cmp
lea
call
adc
je
aas
jecxz
mov
pop
in
mov
ja
mov
dec
movsl
xchg
loope
divl
ret
and
add
aas
in
aaa
xchg
scas
fwait
xor
mov
mov
sbb
rorl
xor
repz
outsb
pop
icebp
or
adc
js
sbb
xchg
imul
cltd
testl
mov
jbe
negl
scas
pop
and
inc
cmpsb
mov
fdiv
sbb
shll
rcll
or
out
iret
or
in
sbb
mov
into
or
cli
repz
pop
pop
std
cltd
pop
addr16
data16
mov
pusha
jge
sub
mov
ss
mov
and
icebp
dec
fsts
xchg
pop
in
and
mov
aaa
fwait
cmpsb
inc
dec
xchg
popf
xor
push
push
cmc
out
jbe
mov
test
cmp
icebp
or
xor
push
xchg
aad
je
stc
subb
arpl
inc
sub
lret
or
repz
fldl2t
mov
cltd
xchg
mov
in
sbb
rolb
mov
ret
insb
jbe
add
xor
fadd
adc
cs
scas
aas
je
or
insl
sbb
shll
adc
dec
jae
mov
add
lahf
mov
xchg
sbb
mov
pop
rcll
push
cwtl
mov
stc
adc
fldl
test
xchg
sub
loope
cmp
aas
and
loop
sbb
lret
loopne
xchg
stc
mov
mov
adc
divl
mov
xchg
or
xchg
popf
jae
adc
mov
pop
dec
mov
dec
rcrl
or
dec
scas
icebp
stc
or
push
les
popl
adc
subl
add
addr16
aam
inc
ss
pop
aad
or
sti
mov
pop
lock
outsb
cmpsb
daa
cmp
xor
rcll
adc
repz
mov
sbb
lret
dec
icebp
sub
mov
adc
push
cmp
push
push
mov
xchg
inc
jge
scas
fldenv
hlt
add
jb
pop
or
mov
repnz
out
lods
inc
xor
inc
xchg
scas
icebp
dec
xlat
fnsave
aad
mov
add
adc
pop
ss
roll
inc
dec
and
out
pop
lods
aad
jb
mov
jnp
add
pop
mov
aas
mov
cltd
pop
outsb
adc
fsts
mov
push
mov
aas
stc
jbe
setge
aad
test
inc
cmp
movsl
sub
or
stc
sbb
pop
stos
jb
xchg
shl
in
mov
inc
dec
mov
data16
std
xchg
iret
lds
push
cmp
xchg
adc
push
dec
fsubrs
aad
adcl
xchg
or
sbb
cmp
fwait
out
cltd
jo
add
mov
adc
daa
xchg
xor
lods
dec
gs
lret
pop
repnz
mov
lds
aad
add
lock
dec
add
loope
xchg
in
icebp
add
cmpsb
push
pushl
leave
mov
dec
ret
mov
outsl
adc
fwait
mov
dec
iret
jae
mov
sbb
dec
movl
int
fbstp
sahf
cmovg
or
or
aam
xchg
mov
int
popf
lea
out
cmp
scas
add
mov
notl
test
icebp
mov
adc
out
aas
insl
mov
push
jle
hlt
movsb
ret
psubsw
fnstsw
adc
mov
mov
adcb
sub
lock
sarl
mov
xchg
in
shr
outsb
sbb
mov
or
aas
mov
pushf
xor
rcrb
cltd
xchg
add
pop
jbe
mov
xlat
mov
in
add
repz
add
xchg
mov
xchg
jecxz
in
int
stos
stc
add
sbb
clc
dec
popf
icebp
aas
jae
adc
or
imul
das
test
add
jns
rcrl
mov
mov
mov
mov
lds
adc
adc
notb
dec
movsl
mov
lret
xchg
lahf
xor
imul
pop
ljmp
mov
mov
xlat
sbb
pop
fcomps
in
ror
hlt
lahf
int
ret
ljmp
mov
jno
mov
int
cmp
push
std
push
mov
movsl
aas
pop
in
int
jne
adc
jecxz
add
std
loope
gs
jb
into
and
lds
aaa
jne
xchg
fisttpl
sbb
scas
les
xchg
jno
sbb
shl
xchg
fstpl
imul
int
in
lock
lds
mov
rclb
subl
ret
daa
aas
in
inc
fisubs
ja
adc
pushf
add
adc
in
inc
rcll
mov
repz
mov
cmp
xchg
int
seta
das
inc
add
mov
inc
enter
imul
hlt
push
test
pcmpeqd
add
pop
repz
dec
loopne
add
xchg
xchg
out
aas
pop
mov
xchg
stc
stos
mov
mov
pop
mov
push
xchg
xchg
jg
xlat
fstpt
xchg
idivb
rorl
or
icebp
mov
or
dec
rcl
xor
icebp
xchg
std
out
sti
inc
mov
repz
pop
leave
jmp
cmpsl
mov
jae
sbb
in
jmp
add
jge
clc
push
aas
addr16
pavgw
inc
mov
shl
xchg
repz
ffree
js
int
adc
sub
repz
mov
jae
mov
push
jecxz
dec
add
sub
jmp
cmp
out
or
cmpsb
shlb
sub
push
bound
sbb
sub
adc
test
test
fists
ret
xchg
fwait
sub
inc
imul
cmp
add
or
sbb
lret
iret
dec
int
jb
jecxz
aam
out
int3
add
adc
mov
mov
pop
inc
rcr
jg
adc
imul
push
addr16
add
add
pop
setno
out
fsubs
cmpsl
subl
lds
test
outsb
or
lds
inc
xchg
jg
mov
add
mov
mov
sub
or
jge
lret
cld
or
jae
xchg
pop
mov
mov
setae
leave
mov
aad
in
repz
movsb
stos
mov
loope
xor
jmp
inc
lret
jecxz
cltd
push
btc
sbb
sbb
add
ror
std
icebp
mov
pop
icebp
out
hlt
sbb
xchg
xor
cmp
mov
push
outsb
adc
xlat
mov
fldenv
js
xor
or
pop
jmp
cmp
int
cmp
push
fwait
jecxz
movsl
fistpl
inc
inc
inc
mov
int
jae
ret
adc
dec
mov
sti
lock
lock
dec
mov
and
repz
fnstenv
ror
in
add
and
sbb
negl
push
add
sbb
ss
jno
in
pop
sbb
pop
xchg
cli
mov
shrl
aas
or
adc
outsb
mov
jno
mov
int
hlt
mov
or
stos
mov
mov
mov
push
icebp
and
in
ja
sbb
pop
add
testb
loope
xlat
shrl
scas
add
adc
and
or
fwait
fwait
jb
sbb
cmpsl
mov
scas
push
hlt
jb
adc
scas
mov
xchg
sar
jno
xlat
fldenv
xchg
icebp
jl
out
hlt
mov
add
push
xchg
stc
imul
icebp
fxch
cmpsb
lds
leave
rclb
ja
or
popf
xchg
fidivs
inc
jg
stc
mov
shll
cld
add
out
outsl
aad
and
ljmp
sti
mov
out
mov
out
inc
in
out
xchg
xlat
in
xchg
push
jno
or
fdivs
testl
pop
fsubs
in
shll
lret
popf
outsb
xchg
pop
in
shrb
fwait
stc
hlt
stos
xchg
xor
adc
sti
lcall
iret
bound
outsl
xchg
adc
inc
xchg
in
repnz
or
jmp
mov
sub
int
sbb
xchg
mov
mov
fsts
sub
hlt
pop
mov
repz
aas
adc
mov
adc
or
jg
adc
fildl
repz
sarb
mov
je
mov
lret
sbb
int
inc
enter
ficoms
cmp
aad
xchg
and
mov
fadds
lods
in
daa
mov
aas
fwait
jl
sbb
std
js
addr16
xchg
jge
jecxz
lds
xor
fcomi
cmpsl
jecxz
jae
fs
mov
xchg
lods
mov
or
sbb
ret
jno
cmp
jecxz
test
add
mull
outsb
ret
shll
dec
fldt
outsl
and
or
xlat
mov
cltd
nop
adc
loope
dec
fists
in
cltd
scas
mov
mov
fstp
adc
paddsw
cmpsl
jecxz
int
xchg
in
aad
in
add
aas
mov
fldl
scas
into
fisttpll
jo
ds
mov
aad
adc
fsts
adcb
mov
in
mov
std
mull
pop
shrl
add
movsl
sti
leave
lds
in
and
insl
add
orl
and
iret
leave
outsb
clc
adc
lret
add
aad
or
mov
in
push
and
mov
fidivrs
and
lcall
xlat
add
lret
adc
or
mov
outsb
jb
xchg
repz
mov
mov
movsl
xchg
mov
pop
scas
fstl
mov
aaa
aaa
jmp
cmp
sub
or
mov
cltd
or
or
pop
test
and
sbb
push
mov
xchg
pop
mov
mov
cmovg
dec
outsl
cmp
adc
xor
push
repz
test
std
sub
jnp
mov
cmp
pop
adc
movsl
push
ret
push
jbe
and
popf
in
pop
dec
sub
ds
sbb
add
mov
or
fcoms
movsl
jecxz
aaa
ss
mov
cltd
fldl
rorl
ffree
incb
jle
and
sbb
andb
in
jp
outsb
push
ds
xor
int
fstpl
out
cwtl
jne
setns
mov
mov
jecxz
inc
fwait
inc
in
and
icebp
div
lcall
lahf
es
pop
popf
movsl
mov
std
aad
pop
jl
shll
std
aad
xchg
inc
popa
add
cltd
sbb
xchg
out
mov
xchg
ja
iret
mov
in
data16
or
jnp
adc
aad
dec
jne
pop
add
xchg
lret
push
out
daa
jge
xchg
loope
mov
std
data16
xchg
adc
nop
push
ret
jnp
lret
stc
sar
xchg
decb
cmp
mov
hlt
xor
je
fwait
jecxz
push
setae
in
add
dec
cmp
fwait
or
mov
jle
ret
and
clc
pop
mov
xchg
iret
xor
xchg
jle
sbb
mov
ficoml
add
es
imul
mov
data16
pop
scas
xchg
mov
add
sti
aam
call
sub
aad
sbb
sti
cmp
cmp
repnz
icebp
ss
bnd
mov
test
pop
mov
emms
sti
add
test
or
push
jecxz
add
or
les
testb
xchg
mov
arpl
sahf
call
daa
mov
xor
lds
int
aad
adc
mov
cltd
leave
push
imul
ja
rcl
fiaddl
adc
adc
jae
adc
adc
jb
scas
pop
adc
pop
xchg
jg
jge
fcmovnu
jge
jmp
inc
push
add
add
xchg
je
ret
mov
xchg
cltd
add
stc
jne
lds
jno
add
add
lds
std
xchg
leave
mov
in
std
repz
aad
pop
and
sub
cwtl
in
adc
adc
cmpsb
int
repnz
out
cmp
dec
sub
icebp
mov
or
sbb
in
fidivrl
lods
or
add
loope
repnz
out
add
repz
xlat
scas
repz
iret
std
xlat
xchg
mov
ret
loope
sub
sahf
and
hlt
in
mov
notl
mov
push
xchg
ret
enter
fdivp
enter
js
icebp
flds
iret
and
jae
loope
mov
cmp
pop
mov
out
pop
mov
in
adcb
xor
jge
sbb
xchg
es
ret
out
outsb
popf
gs
mov
xchg
mov
aad
setae
cmp
and
cli
pop
jnp
adc
fwait
jle
pop
ja
cltd
push
rcr
dec
push
ja
stc
enter
push
xchg
jo
xchg
and
push
adc
adc
js
decl
out
ret
leave
fidivl
sbb
sbb
pop
sbb
cmc
mov
data16
fwait
xchg
insb
fimull
sti
xchg
sbb
and
loope
int
aad
stc
movsl
cwtl
cmpl
jle
incl
xchg
push
cmpl
stc
icebp
outsl
cmc
push
adc
int
outsl
mov
mov
movsb
aas
mov
mov
sbb
repnz
and
mov
xor
popf
mov
out
or
out
lcall
cmp
aad
lahf
mov
mov
push
test
test
xor
xchg
push
push
icebp
loope
push
dec
scas
mov
cmp
cmp
ret
jae
or
cmp
add
mov
std
sbb
stc
mov
scas
scas
dec
loope
aaa
cmpsb
dec
cmp
or
into
and
iret
lahf
mov
and
add
sub
jge
pop
adc
iret
sub
adc
sbb
xlat
mov
stos
dec
and
push
pop
pushf
or
negb
fstpl
idivl
mov
sbb
cmp
or
inc
leave
inc
mov
cmp
jmp
pop
rcrl
std
add
cld
shll
jg
std
jae
out
mov
xlat
sarl
dec
sub
dec
call
jmp
cltd
sar
data16
adc
mov
mov
aas
mov
icebp
fs
lahf
or
iret
out
in
insl
test
adc
inc
shr
mov
addl
xchg
lds
pminub
jo
pop
sbb
jnp
push
movsl
andb
int3
inc
pop
add
jge
mov
icebp
shl
jae
pop
out
adc
aaa
adc
repz
ljmp
andl
mov
xchg
int
and
mov
dec
push
movsl
xlat
jge
lds
mov
sbb
and
lret
add
adc
pop
test
mov
idivl
xlat
jo
or
mov
jbe
lcall
mov
int
sahf
xchg
and
xchg
mov
bound
sub
shrb
pop
push
xchg
xchg
xor
add
jl
loope
ds
jo
rcrl
scas
sti
leave
rol
xchg
jbe
in
pop
add
insb
dec
rep
pop
iret
out
dec
push
scas
ja
std
or
mov
filds
fildll
mov
aas
xor
and
adc
dec
addr16
mov
subl
adc
or
call
jnp
or
jae
sti
mov
mov
jmp
add
iret
movsl
mov
sbb
ss
lods
pop
rcrb
dec
push
cld
into
jo
ret
cmp
not
test
gs
jbe
sbb
sti
pop
mov
stos
repz
aad
scas
add
idivb
inc
leave
or
or
imul
xor
idiv
icebp
cli
mov
mov
mov
out
pop
mov
out
or
lret
hlt
mov
and
movsl
stos
mov
into
pop
loope
jecxz
arpl
out
into
xchg
test
adc
mov
cltd
inc
idivb
lret
xlat
loope
roll
mov
mov
xchg
pop
stos
dec
inc
xchg
testl
in
aaa
xlat
stos
jecxz
jl
iret
mov
fwait
fwait
in
lods
xchg
outsl
xchg
add
test
xchg
sub
stc
insl
add
fistpl
inc
jp
pop
push
lods
add
pop
rcll
pop
or
imul
popf
out
aaa
scas
lret
movsl
sub
aad
movsl
ret
xchg
inc
iret
ret
and
mov
imul
mov
cmp
cmp
add
femms
add
stc
fnstcw
cltd
jecxz
xlat
mov
pop
aaa
xchg
fadd
xchg
inc
sbb
repz
mov
in
jl
jb
sti
fdivrl
ret
xor
int3
aam
xor
mov
js
clc
sbb
jmp
int
or
mov
jo
in
or
and
sub
cmp
xchg
loope
or
or
negb
sbb
jg
xchg
aas
mov
lds
cmpsb
mov
xchg
out
scas
sbb
repz
icebp
aam
lahf
add
mov
scas
mov
xchg
dec
dec
lret
out
in
insl
adc
mov
adc
lcall
rol
mov
aas
fnstcw
movb
mov
and
jne
cltd
mov
out
push
shll
cmc
rcrb
jl
jo
mov
xchg
fstp
sbb
cltd
shll
push
mov
mov
add
jge
xchg
and
fs
push
out
dec
aas
add
adcl
pop
jp
popa
jmp
push
xchg
push
xchg
loope
lret
or
adc
fwait
ret
fcoms
xchg
out
adc
dec
sbb
sahf
aad
movsl
pop
jle
or
xchg
mov
std
jo,pt
mov
mov
test
cmp
popf
fcomi
cmp
jno
ret
mov
adc
mov
mov
pop
pmaxub
ja
rcll
clc
decb
sbb
scas
and
stc
jecxz
mov
fwait
in
adc
mov
mov
shrb
icebp
movsl
or
mov
aas
inc
iret
outsb
in
pop
mov
mov
es
mov
outsw
into
adc
test
test
and
add
fnstcw
xchg
addr16
adcl
leave
popf
jbe
int
bsr
xchg
dec
xchg
shrl
std
aas
out
mov
sbb
add
sub
aas
ja
out
sbb
xchg
aaa
cmp
stos
xor
fbld
cmp
xchg
pop
jbe
leave
cltd
rcll
xchg
sbb
xor
lcall
add
jge
leave
loope
add
test
xchg
xchg
cwtl
lock
xchg
stc
aas
orl
mov
testb
lods
adc
aad
lret
stos
lds
cld
push
popa
imull
ret
cmp
xchg
sbb
outsb
inc
adc
scas
data16
add
sub
cmp
std
mov
cmp
inc
jg
add
xlat
and
mov
pop
jecxz
sbb
xor
and
push
ret
xchg
icebp
je
mov
enter
loope
xchg
or
in
sbbl
enter
aaa
iret
das
mov
sbb
dec
adc
sbb
xor
push
rorl
es
in
adc
out
mov
fidivs
pop
inc
adc
rcl
sbb
jge
mov
sbb
add
ret
push
shrl
push
in
negl
lods
lret
pop
movl
sbb
xchg
and
and
fcoml
sbb
xchg
lahf
out
dec
push
aam
mov
pop
insl
cwtl
jg
mov
pop
mov
or
mov
sbb
int
je
pop
shrl
shrb
test
loope
movsl
mov
lds
cmc
aad
in
ror
std
lahf
mov
mov
vpsraw
es
cli
in
shrb
call
and
movsb
ja
loope
shll
popf
mov
repz
add
jne
or
jp
lea
in
mov
cmp
pop
mov
shll
fwait
std
test
add
lock
jecxz
icebp
mov
xchg
shll
movb
sahf
lret
fst
popf
pop
jno
mov
jae
movsl
jecxz
into
loope
pop
int
cltd
cmp
int3
iret
int3
pmulhuw
fxch
mov
lret
mov
adc
iret
lea
daa
inc
mov
or
or
inc
cmpsl
ds
std
cmp
cmc
popf
leave
nop
xchg
cmpsb
xlat
and
adc
mov
dec
xchg
ss
popf
mov
xchg
stc
out
notb
icebp
xor
mov
pop
and
cmpsb
cltd
sub
jmp
mov
ds
sarl
imull
shll
sbb
inc
lea
mov
or
cmp
sub
sub
and
ret
iret
mov
mov
rcrl
xchg
add
loope
xchg
add
icebp
adc
or
sti
std
push
rcll
push
sbb
adc
popw
loope
cmp
jo
mov
sti
fstpt
repz
jns
fxam
sub
xlat
in
jne
lds
scas
outsl
call
inc
mov
mov
in
mov
mov
sbb
inc
or
adc
mov
stos
adc
jno
xchg
pop
mov
add
sub
mov
fstp
xchg
or
out
lret
sub
jnp
sti
call
pop
sahf
push
inc
and
xchg
or
pop
mov
outsb
mov
xor
or
lret
jbe
xchg
sti
mov
jae
rol
add
mov
std
adc
scas
mov
xlat
xlat
mov
add
or
aam
nop
rclb
inc
add
daa
prefetchwt1
xlat
jge
fistl
mov
js
shl
pop
roll
int3
cltd
mov
out
cmp
imul
mov
dec
mov
incl
inc
rcll
iret
scas
lods
std
es
imul
mov
xor
loop
mov
adc
or
repz
or
pop
mov
jecxz
adc
pop
add
and
sbb
xchg
lcall
push
andb
lds
rcrb
daa
mov
shl
mov
add
pop
icebp
nop
and
stos
fistpl
scas
test
rcll
inc
add
imul
or
loope
aaa
fdivrp
and
psadbw
lds
xor
pop
or
inc
addb
xchg
mov
mov
aas
testl
rcrl
mov
inc
jecxz
mov
jmp
rcll
repnz
mov
push
mov
jecxz
inc
in
stos
mov
aam
lock
add
mov
push
add
int
orl
mov
stc
cmc
or
fnstenv
ja
pop
loope
mov
jne
mov
ret
sbb
imul
iret
jne
int
mov
shll
mov
rorl
cltd
cmp
add
sarl
out
popf
cltd
jo
mov
out
cwtl
xchg
cmp
jne
mov
inc
push
fistpl
ret
cmp
imul
enter
scas
daa
cmp
push
incl
sub
mov
out
test
pop
std
int
mov
jle
fwait
jbe
xchg
and
dec
xchg
fld
xchg
repz
pop
mov
or
stos
adc
leave
out
pop
jecxz
fildll
int
movsl
pop
outsl
std
or
test
in
bswap
fistpl
addr16
out
mov
pop
out
xlat
mov
shlb
into
test
sahf
pop
aad
in
xchg
cmp
and
push
mov
enter
dec
xlat
pop
push
jge
or
mov
xor
outsb
sub
movq
mov
or
in
repz
es
std
lret
pop
mov
sbb
mov
adc
mov
mov
fildl
aad
lods
mov
repnz
fsubrs
pop
in
and
pop
add
iret
push
pop
add
lret
xor
jg
stc
imul
sbb
aas
mov
add
push
mov
orl
lret
in
fdivl
in
mov
adc
ret
outsl
dec
add
push
inc
mov
int3
fwait
xchg
mov
jecxz
jae
sbb
mov
or
dec
sub
adc
and
fstl
cmp
out
test
leave
scas
rcll
jne
test
add
repnz
repnz
dec
push
add
sub
repnz
scas
jecxz
push
cmp
lock
lods
mov
sub
xlat
popf
dec
sarl
xchg
xor
adc
push
push
mov
fsub
movsl
and
xchg
js
aad
iret
aas
aad
or
adcl
repz
ret
mov
xchg
or
cmc
call
repnz
jge
lds
adc
lds
int
xor
xchg
inc
dec
mov
jae
adc
popf
or
mov
in
outsb
cmc
leave
ret
jecxz
mov
mov
lahf
xchg
lods
std
in
xchg
jge
add
push
out
cld
clc
pop
and
push
mov
std
aas
int
jbe
sbb
iret
ficompl
push
push
or
cmp
movntps
inc
xchg
mov
flds
add
repz
std
fisttpl
mov
add
leave
std
xchg
jb
div
dec
sbb
sub
mov
cltd
sti
mov
jbe
sbb
movsb
adc
hlt
mov
inc
pop
out
push
rcll
mov
adc
or
or
push
dec
lods
and
in
pop
xchg
or
in
cltd
lret
ret
cs
lods
dec
mov
icebp
sbb
incb
jle
mulb
repz
pmulhw
add
outsb
ss
ja
xchg
mov
or
ret
ret
fstps
stos
shrl
and
aad
adc
test
cmpsb
insl
xor
negl
jcxz
mov
ja
mov
jmp
outsb
mov
jno
mov
leave
movsl
movsb
out
and
xor
mov
lcall
outsb
xlat
addr16
xlat
jae
iret
or
add
cmp
xchg
scas
loope
test
test
je
adc
sbb
mov
jb
aas
out
xor
adc
cmovge
add
jne
pop
mov
icebp
repz
sub
mov
dec
sti
sbb
in
clc
adc
push
or
pop
xchg
mov
mov
iret
or
ret
out
outsb
popf
dec
aas
sbb
int
push
incb
mov
add
add
inc
adc
xchg
shll
pop
shrl
jmp
pop
mov
add
shlb
fnstenv
add
mov
iret
inc
add
inc
mov
icebp
pop
inc
test
jns
mov
mov
scas
mov
inc
fistpl
aad
add
jle
je
mov
xchg
adc
lret
mov
in
out
cmc
inc
maskmovq
imull
loope
out
jecxz
test
cmp
pop
inc
dec
pop
in
inc
add
xchg
scas
push
mov
iret
mov
sub
mov
aad
cmova
and
push
cmp
inc
aas
shlb
outsb
inc
jmp
loope
xchg
lds
out
aaa
xlat
xor
std
mov
mov
mov
shll
aad
notb
xchg
iret
aas
loope
mov
jle
inc
in
das
fstl
int
sbb
inc
out
inc
adc
and
mov
popf
dec
lretw
sbb
test
cli
scas
sti
repz
jecxz
xor
popa
pop
push
jl
lret
xchg
jno
scas
mov
idivl
mov
mov
or
fcmovnbe
xchg
and
out
aas
stc
add
or
cltd
popl
mov
aas
mov
jmp
push
and
rcrl
enter
sahf
fldl
push
aaa
out
sbb
xchg
rolb
adc
inc
out
insb
jl
and
in
add
mov
jecxz
lret
aas
xchg
inc
loope
mov
in
add
int
ljmp
add
lods
sbb
push
push
aas
lret
inc
bnd
outsb
and
mov
stc
or
icebp
add
mov
pop
imull
add
ffree
push
inc
mov
xchg
in
aaa
sti
fldenv
addr16
out
push
bound
fmul
repz
or
test
jo
fidivs
mov
adc
or
popf
fists
sahf
push
add
dec
flds
lret
movsb
fstpt
ret
inc
mov
add
push
inc
jg
sti
negl
outsb
push
lret
add
iret
ret
fmul
ds
push
mov
outsb
add
repz
mov
cltd
inc
mov
push
lret
outsb
inc
push
ret
lret
dec
jg
test
sbb
cmp
mov
cmp
sub
add
xlat
mov
out
repz
repnz
jl
fsubs
mov
mov
xchg
in
mov
sub
rorl
mov
pop
mov
std
outsb
daa
movsl
popf
loope
fwait
push
push
stc
sbb
mov
mov
and
xor
mov
adc
push
and
mov
int
mov
mov
out
xchg
add
ss
cmp
dec
aad
shrl
mov
mov
xchg
pop
mov
sub
loope
es
mov
sub
sbb
ficompl
dec
lock
adc
ret
xchg
pop
sahf
cmpb
mov
lcall
stc
pop
movsl
and
scas
sti
std
jae
add
test
dec
aad
addr16
mov
jbe
fsts
outsl
or
jecxz
fwait
push
les
lret
in
mov
bound
movsl
adc
popf
lods
int
loope
leave
into
inc
and
mov
or
dec
fstpt
mov
cmp
aad
and
xchg
pop
mov
int
and
stos
cmp
mov
stc
xchg
std
pop
jmp
inc
pop
lods
mov
sbb
movsl
mov
push
repz
jbe
mov
sbb
lock
call
popf
mov
jmp
shll
adc
mov
mov
aad
popf
or
leave
ret
mov
sbb
or
push
jno
xchg
xchg
iret
test
jb
or
sti
aas
lahf
jbe
add
add
repnz
stos
cmc
mov
or
push
sbb
push
scas
inc
insl
cli
mov
mov
lods
jb
xlat
aad
stos
sbbl
sub
sti
adc
int
jnp
icebp
add
mov
sahf
or
xchg
fnstsw
xchg
lret
jge
or
mov
pop
lret
rcrb
iret
flds
adc
sbb
sub
pop
push
lds
fildl
cwtl
mov
inc
in
out
rolb
jo
in
cmpsl
inc
in
insb
push
xchg
fnsave
mov
cli
movsl
xchg
repnz
or
aad
loope
in
nop
testl
clc
aas
and
add
repz
jp
jge
fwait
shrl
add
in
sbb
xchg
push
aad
ss
cltd
add
pushl
jae
icebp
or
lret
rcrl
push
xor
mov
lods
sbb
lea
pop
outsb
adc
lret
xchg
iret
data16
xor
fnstenv
pop
lret
mov
mov
mov
or
mov
sbb
in
lods
jne
iret
movsl
aad
call
mov
mov
xor
in
imul
xchg
scas
push
iret
cmp
jecxz
fildll
or
or
clc
add
pop
xchg
sub
insl
mov
inc
negb
mov
les
jbe
sarl
mov
in
ds
ret
leave
les
in
jo
mov
in
or
push
adc
xor
mov
std
mov
mov
xchg
leave
adc
lds
fsubrs
xchg
pop
movsl
mov
xor
clc
into
dec
cmpsb
jno
or
int
jns
fs
lret
cmpsl
popw
imul
repz
cs
stc
into
ja
movl
aas
push
pusha
cltd
iret
fists
mov
and
imul
fnsave
lcall
in
andl
test
cmp
inc
and
mov
shl
mov
push
lret
lds
xor
fdivs
mov
leave
xorb
daa
pushf
or
and
xchg
dec
adc
adc
out
mov
jns
adc
pop
mov
movsl
imul
sub
sarl
sahf
roll
push
xor
popf
push
push
xchg
jnp
xchg
aas
notb
fistl
call
dec
iret
cmc
fsubrs
push
or
fstl
decb
popf
jb
pop
mov
std
in
sti
iret
pxor
loope
shll
mov
lret
add
cmp
daa
inc
xchg
cmp
mov
int
jmp
aad
sbbb
mov
popf
dec
out
or
jge
aad
jo
xchg
lahf
outsb
ret
scas
mov
mov
pop
lret
popf
add
lahf
xchg
add
push
jp
or
notl
cmpsb
popf
insb
add
fldenv
cltd
push
or
and
je
or
adc
pop
fmulp
mov
add
dec
mov
aad
xlat
test
ja
add
add
xor
jle
pop
imul
mov
mov
xlat
jo
dec
push
xchg
add
lcall
je
mov
sti
cwtl
xor
lods
dec
lds
ljmp
fnstenv
push
push
test
shl
fildl
sbb
fstps
imull
mulb
stc
mov
or
add
mov
jae
popf
fildl
push
or
mov
mov
mov
dec
hlt
in
mov
push
mov
pop
or
xor
jmp
jmp
scas
icebp
xor
inc
push
pop
cwtl
fisttpll
or
test
sbb
fisubs
cltd
xchg
mull
iret
or
sti
enter
adc
or
in
aas
daa
fldt
mov
lds
ljmp
repz
xchg
mov
icebp
xchg
push
mov
push
adc
fldl
popa
jmp
xor
aas
xor
pushf
ja
adc
mov
mov
cmpsl
mov
sub
sti
xor
mov
sbb
xchg
gs
lahf
dec
push
push
addr16
inc
lods
sarb
lcall
fildl
jb
xchg
mov
lret
out
out
jp
pop
mov
and
fwait
xor
adc
inc
ret
pop
stc
cmpsb
fmuls
mov
jno
popf
xor
sti
cltd
jnp
rcrl
xchg
out
jno
mov
aam
ret
out
add
or
xchg
push
scas
jo
icebp
aas
xchg
cmp
movsl
adc
call
pop
aad
icebp
inc
sbb
icebp
mov
lock
mov
aas
fldl2t
call
std
enter
or
mov
popf
jl
jl
jnp
in
xchg
pop
ret
gs
mov
mov
fmul
flds
je
leave
rcll
rol
mov
or
inc
clc
lcall
add
xchg
stc
lods
push
cltd
aad
mov
int
xchg
and
icebp
inc
movsl
mov
add
pushf
jge
adc
hlt
mov
pop
lahf
xor
cwtl
mov
in
mov
stos
jp
add
loope
adc
cltd
cltd
or
out
arpl
add
jecxz
sbb
xchg
sub
mov
fimuls
idivb
popf
add
test
jb
mov
test
mov
jecxz
out
sub
in
adc
or
bound
xchg
sbb
rclb
adc
lods
faddp
movaps
mov
add
adc
or
idivb
dec
jbe
mov
jbe
std
sbb
cmp
pop
jg
rcrl
sbb
int
cmp
push
or
xchg
popa
pushf
out
push
dec
lock
dec
sti
adc
cs
lahf
push
arpl
adc
icebp
or
sbbl
scas
popf
popf
inc
jae
loope
cltd
leave
and
mov
fst
mov
das
movsl
in
pop
loopne
mov
test
sti
inc
fisttpll
popf
cmp
xor
repz
and
or
dec
popf
fst
outsl
das
fwait
xchg
subl
stc
test
aam
push
sbb
insb
add
and
decl
adc
ret
repnz
jle
fwait
test
mov
les
pusha
xchg
mov
adc
add
mov
out
jbe
stc
xchg
andb
mov
mov
cmpb
sahf
pop
sbb
jg
fdivs
sbb
jecxz
jns
mov
mov
popf
pop
add
shl
sbb
sbb
unpckhps
iret
adc
mov
mov
sbb
out
sbb
dec
add
xchg
or
adc
and
xchg
sarl
mov
mov
add
aad
add
leave
je
adc
xchg
shrl
out
pop
movswl
mov
mov
adc
popf
scas
sub
into
scas
xor
rcll
aas
and
std
xchg
cltd
cmpsb
mov
leave
aad
add
ja
mov
adc
push
adc
mov
dec
aad
jne
and
mov
popl
cmpsb
jae
rorl
mov
dec
mov
jno
mov
pop
adc
fucomp
movsl
fwait
or
mov
xchg
repnz
cmc
sahf
adc
mov
pop
mov
movsb
ja
in
stc
ret
out
xchg
xor
xchg
rcll
inc
dec
aad
lcall
int
mov
rcll
jg
shll
jecxz
stos
mov
repnz
or
lods
pop
mov
std
mov
cmp
ja
out
xlat
cmpsl
mov
add
jno
xchg
pop
fwait
jb
or
les
xor
and
cmp
sti
aad
stc
sub
fnstsw
fnstenv
sarl
add
jl
sub
and
xchg
mov
adc
and
decl
in
cs
jge
rcrb
add
icebp
dec
call
mov
mov
add
mov
dec
fwait
iret
add
mov
insb
sarl
aas
mov
in
adc
push
dec
jg
jecxz
jno
std
or
adc
movsl
sbb
scas
mov
or
jecxz,pt
cmp
test
xchg
dec
mov
shll
bound
mov
push
test
or
lret
ror
pop
add
jge
fnstsw
mov
mov
in
xchg
les
popf
adc
add
or
mov
in
jge
sub
test
or
sub
mov
outsl
fs
pop
cmp
leave
mov
test
movhps
insb
hlt
inc
and
fstl
stos
mov
outsb
push
fs
dec
inc
jnp
xchg
shll
lods
mov
pop
orl
mov
add
xchg
jns
ret
pop
mov
in
fld
pop
shl
mov
aad
push
aad
js
fsubrp
and
insb
fld
jp
push
lds
jle
lret
or
mov
pop
mov
repz
add
dec
js
sbb
repnz
or
push
incl
andl
inc
fdivp
jg
sti
out
push
push
int3
or
repz
ret
outsb
mov
mov
cltd
jbe
add
jmp
push
xchg
xchg
xchg
mov
or
push
xor
movsl
sbb
aad
pop
int
mov
cltd
pushl
iret
or
mov
dec
or
sub
adc
cltd
pop
or
inc
dec
ficomps
in
sahf
jl
jnp
mov
test
pop
lods
repz
mov
leave
lret
jne
movsl
or
fistl
ret
rcl
add
repz
and
xchg
stc
out
push
not
push
ss
adc
push
xlat
fwait
jnp
in
ret
popf
stos
lret
iret
movb
mov
icebp
xor
scas
pop
mull
addl
xchg
popa
stc
decl
shlb
pop
rcrl
xlat
mov
jg
mov
jne
or
and
je
mov
xor
rcrl
add
pop
ljmp
mov
mov
hlt
adc
or
imul
and
sbb
mov
std
mov
repz
iret
lds
repz
addr16
scas
add
jb
out
insl
jecxz
mov
jge
or
sbb
add
add
mov
repz
or
xchg
mov
xlat
cvtps2pi
call
in
adc
inc
iret
xlat
adc
cwtl
xrelease
xor
mov
xor
lods
push
fcmovne
orl
mov
mov
in
fwait
jno
fucom
div
rorl
mov
adcb
out
mov
fldcw
out
dec
popf
outsb
pop
sub
jle
mov
or
stc
mov
add
sbb
into
shll
stos
andl
ja
pop
pop
out
and
adc
in
fstp
xchg
pusha
mov
iret
pushf
dec
ss
sub
leave
cmpsb
mov
out
xor
out
xchg
hlt
iret
inc
xchg
inc
imul
popf
mov
cmp
pop
hlt
pop
mov
mov
not
or
je
out
sti
scas
icebp
pusha
adc
add
mov
mov
adc
or
xor
lds
sub
mov
adc
arpl
addl
mov
neg
jecxz
mov
cmp
stc
xchg
cmp
fiaddl
pop
cmc
js
shll
and
push
fs
xor
in
aam
pop
repz
xlat
pop
mov
dec
xchg
cmp
adc
int
mov
adc
inc
ret
cltd
push
nop
push
loope
in
out
mov
xchg
cmc
in
notl
and
fnsave
and
fimuls
sub
xlat
aad
insb
xchg
push
push
xchg
dec
add
out
jg
or
or
dec
push
sbb
add
fidivrl
inc
and
enter
mov
jg
jmp
fldt
aam
lods
mov
mov
mov
xchg
lret
add
push
int
jnp
mov
push
in
mov
lahf
xor
icebp
mov
in
loope
mov
and
clc
mov
sahf
mov
loope
push
je
repz
fwait
in
cmp
outsb
addr16
inc
sti
or
inc
mov
pop
popf
sbb
mov
inc
lds
push
dec
mov
add
xchg
jns
adc
cmpsb
lods
adc
repnz
mov
aad
shrb
or
mov
repnz
mov
int
pop
movsl
pop
data16
mov
xchg
sbb
fisttpl
nop
movsl
repz
sbbl
push
loope
out
ret
movsb
xor
mov
cmp
jb
shrl
add
idivl
sbb
xchg
cmp
test
xor
sar
scas
out
mov
std
xlat
or
mov
clc
dec
push
cmovo
lcall
adc
jmp
rclb
cld
inc
inc
aaa
cmc
fcoml
icebp
loope
or
mov
mov
push
std
push
es
divl
int3
dec
mov
pcmpgtd
fwait
aad
fs
jge
insl
lods
test
aad
vaddsd
rorl
testb
xchg
or
aas
jecxz
jl
divl
rcr
aad
std
jle
sbb
xchg
aas
pop
mov
sbb
in
jmp
rorb
cmp
mov
jge
aas
mov
mov
mov
mov
adc
adc
in
push
out
fistl
inc
inc
cmp
pushf
adc
dec
jmp
fdivl
stc
aas
out
adc
in
push
cs
jne
fld
xchg
sbb
mov
mov
repnz
icebp
cmpsl
out
lret
stc
add
adc
xor
adc
out
lret
shrb
stc
imul
repnz
ret
fs
idiv
rol
xchg
ss
jno
mov
mov
push
movsl
pop
std
jg
fstpt
and
lock
sub
int
pop
leave
add
mov
aad
frstor
int
nop
push
mov
mov
aas
retw
cmp
outsl
rcll
clc
mov
test
jg
lret
popf
mov
dec
iret
xorb
addl
jo
fsts
or
hlt
lcall
out
movsl
or
outsl
cltd
and
repz
push
mov
mov
xchg
inc
xorl
pushf
jg
out
inc
xor
jno
fwait
xchg
cmc
mov
or
syscall
or
xor
mov
lret
movsl
mov
repz
push
or
xor
xlat
mov
xor
int
cmpsb
leave
mov
and
push
and
movsl
cwtl
dec
aas
jnp
add
mov
xlat
mov
sbb
xchg
mov
adc
out
dec
mov
sbbl
shrb
imul
mov
lea
xchg
lahf
repz
mov
out
mov
and
sub
ret
adc
or
in
je
flds
test
pop
fnstenv
inc
lret
mov
pop
fisubl
imul
ret
aad
fisttpll
cld
shlb
scas
mov
add
cmp
aad
and
xchg
cmp
adc
mov
mov
shll
push
sbb
cmp
sbb
fdivs
ret
mov
adc
or
std
jo
int
aad
stc
repz
jecxz
movsl
adc
stos
mov
jl
cltd
jg
mov
fnsave
ficompl
aad
xchg
mov
lods
es
stos
push
xor
mov
ret
mov
ja
mov
je
movsl
aad
pop
stc
enter
xchg
mov
and
dec
loop
shrl
cmp
cmp
mov
or
incl
mov
icebp
ret
std
adcl
repz
sub
movsw
in
lret
out
mov
pop
out
test
shll
fsubrs
sti
stc
lds
hlt
sti
xchg
fnstenv
xorl
add
jbe
lret
mov
pop
push
xchg
or
aad
and
es
sti
xlat
sbb
icebp
sar
pop
js
test
or
insb
in
sub
add
xchg
sub
xchg
shr
cmp
jl
mov
cs
xchg
mov
pop
loopne
push
xchg
adc
movsb
insb
outsb
scas
call
jbe
xchg
in
sbb
xstore-rng
cmpsl
pop
or
movsl
call
fwait
addr16
mov
mov
movsb
xor
fmulp
popf
pop
jecxz
mov
xor
pop
add
fiadds
aad
mov
jmp
jl
mov
xchg
fistpl
jno
in
add
int
and
jnp
jp
test
jg
pop
fwait
js
sbb
jo
or
fdivs
iret
pop
shl
lea
adc
mov
aad
jge
aas
inc
push
popa
subl
ret
flds
or
loope
pop
notl
jne
xchg
fstpl
in
outsl
adc
add
lret
loopew
insb
adc
mov
mov
and
adc
ljmp
xchg
pop
mulb
mov
scas
mov
adc
mov
scas
shll
fwait
and
push
pop
add
clc
or
scas
mov
jg
in
xchg
xchg
mov
sti
fwait
lret
nop
pop
add
mov
sub
inc
jg
xchg
icebp
jp
add
repz
ret
loope
cmp
js
inc
sbb
addr16
andl
loope
push
fldenv
sbbl
in
cmc
std
pop
adc
add
mov
jle
mov
push
cld
ret
jp
insb
push
push
dec
aaa
daa
mov
cltd
or
push
rcr
dec
pop
fsubrl
pop
or
sbb
xchg
lds
icebp
jg
leave
jge
mov
je
and
shll
pop
aaa
sub
ds
mov
sbb
add
pop
xor
adc
push
aad
ja
movsl
xchg
xchg
lds
mov
mov
xlat
lret
xchg
stc
add
out
mov
or
daa
push
mov
sbb
fnstsw
mov
sbb
sbb
mov
and
mov
loopne
mov
push
lcall
mov
mov
add
gs
xchg
mov
int
cmp
xchg
fwait
sti
sbbb
ds
mov
mov
pop
dec
adc
repz
fisttps
cmp
rorl
divl
mov
cmpsl
add
mov
aam
xor
sahf
leave
sub
cmp
xlat
pop
out
int
and
fstl
adc
inc
shl
cli
add
ljmp
dec
dec
pop
arpl
xor
sar
jbe
xlat
or
or
pushf
xchg
in
mov
or
mov
jge
rcll
and
mov
xchg
push
rolb
fistl
std
mov
xchg
xchg
lret
mov
sbb
ret
mov
and
in
popa
aad
jb
xor
jge
lret
bnd
negb
add
dec
mov
in
es
icebp
repz
jmp
fldenv
fsubl
cmp
stc
ret
cvtps2pd
xlat
mov
xchg
lcall
mov
mov
jb
adc
push
xlat
leave
lret
mov
mov
fstpt
xchg
xor
lds
aad
fwait
outsb
jno
hlt
add
pop
mov
dec
sub
rol
movsl
mov
mov
or
fwait
lahf
ss
incl
mov
push
cltd
repz
sub
xchg
sbb
or
mov
iret
sbb
and
lret
jae
xlat
or
call
popl
out
ss
adc
flds
popf
inc
push
sbb
jne
std
mov
sbb
mov
add
or
mov
mov
idivb
fsts
adc
sub
pop
adc
sbb
sti
mov
movsb
shrl
sbb
subl
or
mov
add
cs
push
push
pop
mov
mov
cmp
jb
mov
hlt
cmp
fsts
cmp
mov
or
xchg
xlat
lcall
clc
mov
sbb
sbb
aad
push
mov
icebp
dec
iret
jb
lret
mov
popf
xchg
sub
movsb
mov
dec
int
pop
dec
pop
pop
lods
ss
repz
sbb
decb
cmpps
jle
sbb
rol
pushf
adc
adc
push
mov
adc
sbb
es
mov
mov
pop
and
stc
inc
push
icebp
add
adc
negb
cltd
movsl
lods
lahf
or
adc
mov
adc
dec
stc
lock
int
shlb
dec
or
jg
mov
or
fsubs
mov
fsubp
repnz
adc
in
movsl
pop
movsl
test
int
das
adc
xlat
mov
push
xchg
xor
or
out
push
aam
xchg
or
in
adc
push
pop
shl
fsincos
push
shrl
popf
xchg
les
lret
push
mov
jecxz
inc
jo
int
jp
jbe
push
std
sti
pop
imul
mov
xlat
divl
sbb
dec
xchg
mov
lret
jle
je
jecxz
std
pusha
jo
mov
xchg
pop
mov
icebp
xor
adc
movsb
xchg
ror
cmp
repnz
popf
and
sti
mov
add
mov
mov
ljmp
mov
aas
pop
cltd
aad
push
iret
jmp
std
xchg
mov
rorl
cmp
std
or
sub
jb
sti
roll
inc
shr
dec
imul
push
lds
mov
mov
iret
mov
in
std
int3
jle
mov
lods
cmp
xchg
mov
pop
in
mov
addr16
in
test
sbb
mov
daa
out
cli
iret
mov
bound
xor
dec
push
xchg
xchg
lcall
pop
mov
inc
jno
or
imul
pop
mov
adc
and
rorb
pop
std
dec
or
dec
not
insb
jae
stc
icebp
add
repz
dec
lea
inc
push
jno
jg
fwait
sbb
out
ds
ja
or
xchg
mov
push
fdivp
pop
adc
adc
movsb
xchg
rol
mov
leave
cmp
es
add
add
adc
in
jno
and
dec
xchg
dec
leave
lds
dec
fwait
jle
int
repz
jae
rcl
cmp
sbb
jle
or
test
push
popf
adc
daa
push
jecxz
mov
sbb
icebp
mov
lcall
insl
scas
mov
add
or
xchg
xor
lds
adc
sbb
push
test
inc
mov
xor
add
in
stos
jle
scas
xchg
jnp
addr16
lahf
out
jbe
data16
into
sbb
call
out
xlat
ret
insb
std
pop
mov
cmc
cmp
xchg
lods
xchg
xchg
jge
and
xorl
and
subb
lret
loope
mov
sub
pop
popf
adc
sbb
fxch
mov
mov
popa
fldcw
lods
jmp
mov
dec
cli
mov
shlb
ret
inc
ret
pop
xchg
inc
add
or
cmp
jecxz
jge
aad
movsb
daa
push
and
int
dec
mov
adc
aad
mov
fs
popf
in
mov
jmp
cmpsb
mov
insl
or
xchg
inc
out
push
mov
out
jecxz
insl
scas
loope
fstps
or
cltd
repz
or
mov
cltd
dec
dec
mov
rolb
lret
or
add
sahf
xor
lcall
mov
mov
push
push
xchg
fstl
leave
add
repz
les
hlt
push
cmpsl
stos
mov
mov
clc
or
dec
imul
add
outsl
xchg
loope
out
cmp
loopne
mov
adc
insl
xchg
scas
ret
sbb
mov
xchg
push
les
adc
mov
mov
cmc
in
jmp
mov
aas
es
pop
test
inc
pop
pop
jle
jp
gs
xlat
cmp
and
cltd
mov
xchg
movsl
fwait
sbb
dec
add
add
dec
imul
mov
popf
mov
ja
repz
mov
stc
xchg
aad
clc
lods
dec
add
stc
stos
jecxz
or
popf
add
jnp
xchg
idivl
mov
sub
push
cmp
cmp
pop
out
mov
test
xor
sbb
and
into
cmp
mov
cltd
dec
mov
lods
or
sub
xchg
push
jmp
popa
cmpsl
add
mov
out
fcmovnb
test
lret
fnsave
xchg
movsl
push
pop
popf
sbb
outsb
xchg
iret
mov
sub
mov
jge
sti
or
or
rcll
dec
aas
int
ljmp
jo
adc
int
fwait
movntps
imul
call
stos
test
out
imul
mov
testl
add
or
lret
lfs
xor
xor
mov
mov
repz
ret
imull
jg
add
in
enter
jle
std
scas
sub
sbb
xlat
hlt
loope
lahf
mov
adc
pop
adc
dec
insl
popf
mov
sti
adc
movsl
jl
dec
add
mov
movl
lcall
and
std
fwait
mov
adc
std
pop
mov
cmp
lret
repz
xchg
ljmp
arpl
xchg
out
jle
pop
clc
jno
mov
sti
xlat
mull
push
aad
arpl
sbb
jno
mov
add
fwait
mov
push
jnp
rcrl
es
int
pushf
mov
adc
sti
imul
aaa
jnp
scas
test
iret
cltd
rol
or
fs
xchg
pushf
dec
into
outsb
dec
and
cld
cmp
push
daa
xlat
sbb
adc
adc
repz
ret
out
jbe
icebp
mov
jmp
daa
lret
add
xor
rcll
movsl
adc
jg
and
cmp
mov
xchg
inc
sub
out
lods
sahf
jecxz
aad
cmp
fwait
iret
outsb
or
xlat
mov
cltd
mov
jg
js
shll
sub
xor
repz
shrl
sbbl
pop
or
std
aam
mov
rep
jno
and
mov
mov
mov
dec
sti
pop
mov
jno
fcomi
cmc
jp
xchg
add
scas
std
aad
add
adc
xor
jae
loop
adc
adc
and
rolb
inc
or
xchg
mov
mov
ret
lcall
ret
jbe
flds
sti
out
aad
mov
divl
sbb
ja
mov
movsl
out
push
pop
or
jo
dec
ret
mov
and
xchg
and
out
cmc
fs
mov
add
pop
or
mov
xor
ljmp
jnp
adc
dec
push
dec
adc
xchg
lret
into
add
jecxz
lret
lcall
sub
dec
repz
std
repz
mov
insl
mov
sbb
popa
push
loope
cmp
cmp
fwait
out
jg
adc
in
je
or
mov
icebp
add
negb
fwait
sub
cmp
jl
aas
jb
xchg
cwtl
mov
in
jae
sti
adc
or
xchg
mov
fwait
or
inc
mov
push
mov
int
movb
stos
hlt
fistpll
mov
sbb
lods
mov
xchg
ficoms
data16
mov
adc
sahf
movb
xchg
outsb
fistl
mov
pop
pop
lea
xchg
test
in
sbb
add
clc
sbb
and
adc
and
adc
xchg
mov
mov
cmpsb
iret
leave
stc
push
fwait
lds
push
dec
jmp
repnz
fsts
dec
xchg
add
push
inc
in
adc
test
std
inc
mov
add
or
popf
mov
mov
or
adc
fcmovnu
adc
testl
pop
and
and
int3
std
xchg
sti
ret
or
mov
xchg
loope
jae
leave
fildl
aad
and
pop
jge
cltd
sti
fcmovne
cli
and
xchg
shlb
ss
sbb
xchg
push
pop
jge
fstpt
or
les
jg
jno
inc
fildl
dec
jecxz
fnsave
popa
pop
or
and
dec
adc
int
ret
std
and
add
cmp
daa
mov
adc
call
popf
fwait
cmp
aas
pop
loope
sahf
in
adc
imul
aas
adc
xchg
inc
movl
mov
inc
inc
imul
lds
outsb
mov
and
push
push
mov
das
or
outsb
shll
jl
jle
cmpsb
roll
push
adc
xlat
fildl
mov
or
in
in
cmpsl
add
jg
jae
xchg
mov
sub
call
sbb
lea
call
xchg
pop
push
jle
mov
shlb
push
frstor
xchg
or
xor
mull
lret
cmp
jge
fsts
jl
pop
out
in
test
scas
in
jae
adc
mov
sub
sub
jae
or
pop
icebp
sub
outsb
cltd
pushf
mov
mov
sbb
mov
fadds
xchg
ret
xchg
cmp
adc
icebp
xor
mov
add
sti
or
and
gs
aad
scas
mov
sbb
xchg
cld
lds
outsb
lods
imul
loope
je
out
cltd
mov
xor
test
ret
sbbw
push
data16
xlat
xor
mov
mov
or
pop
xchg
icebp
scas
mov
sarl
fnstcw
mov
mov
enter
cmpsl
in
sub
iret
cmp
rorl
xchg
xchg
mov
pop
ja
cmova
movsl
and
mov
bound
jb
shll
imull
jno
std
jecxz
mov
xchg
ror
loope
pop
movsb
mov
cmp
push
sbb
mov
xor
rcl
packssdw
sbb
repz
inc
lods
pop
sarl
mov
xchg
aad
movsl
test
cmpsl
scas
or
ljmp
pop
jo
scas
lods
jnp
add
fiadds
mov
repz
add
outsb
pop
stc
mov
popf
sub
dec
pop
pop
scas
insl
test
in
push
enter
add
xchg
pop
rorl
divb
int
out
or
aaa
sbb
push
leave
jecxz
push
mov
xchg
scas
aas
xlat
lcall
adc
mov
add
mov
fwait
stos
enter
mov
call
repz
cltd
mov
outsb
notl
mov
ret
adc
mov
inc
and
repz
pop
dec
sbb
int3
pop
ljmp
xchg
cltd
sub
mov
cmpsl
imul
test
int
scas
es
push
jmp
outsb
pop
stc
mov
ss
repz
mov
sbb
mov
loope
clc
xchg
mov
adc
mov
mov
stc
aad
je
movsb
adc
lcall
jecxz
popa
sbb
pop
inc
ds
popf
aaa
stc
je
add
adc
xchg
xchg
fwait
sti
sarl
fnstenv
or
stos
or
xchg
int
sbb
mov
jae
leave
adc
push
dec
xor
jno
in
xlat
mov
add
push
sbb
mov
dec
in
mov
test
mov
or
add
rcrl
sbb
or
icebp
sbb
popa
fsubs
mov
aad
xor
xchg
sbb
out
das
mov
jecxz
mov
add
loopne
ret
pop
icebp
and
push
call
sti
in
inc
ja
leave
xchg
icebp
and
xorl
ret
fstl
dec
repz
int3
popa
fisttps
pop
dec
cmpb
jg
xchg
repz
repz
xchg
lock
push
incl
cld
fimull
mov
lock
fcmovnu
rcll
mov
cmp
jbe
vunpckhps
movsb
sahf
cli
imul
adc
test
movsl
out
jl
adc
shl
jg
rcl
mov
pop
push
xchg
mov
xchg
dec
adc
loope
lret
dec
fnstcw
rcll
or
and
push
jl
ret
outsl
repz
outsl
xchg
jecxz
sbb
icebp
lcall
xchg
mov
mov
aas
jecxz
loope
or
adc
test
add
je
sbb
scas
cmp
fistpl
imul
sbb
dec
sub
add
std
in
jns
fwait
addr16
scas
jecxz
cmc
jecxz,pt
jl
popf
js
addb
lret
addr16
mov
inc
movsl
aas
fisttpl
mov
lds
jge
icebp
xchg
gs
dec
jb
jecxz
mov
test
dec
pop
cltd
data16
push
xor
mov
inc
std
mov
and
fwait
cmp
stc
jnp
sbb
xchg
mov
mov
cmpsl
or
mov
push
sbb
pop
lret
adc
cltd
scas
mov
mov
std
ret
popf
or
add
sbb
lea
xlat
bnd
in
in
cmp
out
aad
lret
mov
sbb
aas
jecxz
lret
inc
dec
movsl
xchg
and
leave
pop
push
sbb
or
mov
ret
mov
dec
out
fsts
mov
add
mov
pop
add
xchg
shll
dec
je
aas
mov
lods
mov
enter
push
cmpl
arpl
mov
sbb
setae
mov
pusha
push
xchg
aas
xchg
add
jl
popa
test
add
cmp
and
rcll
cmp
mov
inc
or
fldenv
negb
int3
sbb
mov
and
add
xlat
rcrl
or
adc
cltd
pop
inc
add
xchg
dec
rcl
cmp
enter
mov
out
or
in
mov
mov
adc
es
mov
out
add
dec
push
sti
jns
shl
and
incl
pop
xchg
sbb
std
into
and
add
mov
dec
xchg
jb
add
shr
mov
lods
mov
adc
sbb
divl
push
mov
cmpsb
inc
popf
movsl
add
call
shrb
icebp
negl
xlat
shrw
cltd
fisttpll
aad
sbb
and
ret
icebp
dec
jnp
sbb
mull
shll
popf
in
jno
adc
js
and
in
or
mov
dec
adc
adc
or
fwait
sbb
add
mov
adc
movsl
mov
xchg
pop
lcall
mov
sub
int3
clc
and
ret
dec
mov
cmp
scas
leave
mov
iret
push
inc
jnp
adc
hlt
adc
xchg
stos
cmc
ja
jmp
in
fildl
imul
in
repz
xchg
lods
inc
pop
jge
mov
mov
inc
pop
adc
lea
jge
xchg
in
jne
xchg
movsl
aad
sbb
lods
outsl
mov
int
cmpl
xor
lret
daa
xor
mov
jo
inc
push
leave
mov
xlat
mov
dec
scas
aad
idiv
ljmp
push
jno
mov
lods
addr16
out
and
icebp
or
mov
icebp
jg
mov
pop
jge
popf
lret
jbe
fldl
add
stc
movsl
jb
ret
or
mov
sbb
imul
nop
fxch
repz
or
repz
ja
xchg
neg
rcrb
or
mov
jg
add
and
jbe
sub
push
scas
or
mov
mov
sbb
inc
dec
mov
pop
sbb
pop
repnz
cli
pop
jno
rcll
movsb
popf
xor
mov
xchg
mov
and
inc
xchg
mov
mov
and
and
mov
aas
pop
sarb
mov
dec
jns
lds
xchg
xchg
or
loope
or
inc
jno
int
aas
xlat
outsl
xchg
bswap
cwtl
dec
fcmovbe
push
mov
in
lret
in
pop
out
mov
jns
mov
mov
jnp
add
adc
inc
out
lods
pop
jl
xchg
mov
add
xchg
dec
dec
imul
pop
cltd
lods
mov
cmc
mov
ror
addl
addr16
repz
xor
adc
ror
sub
add
add
mov
xchg
cwtl
mov
rcll
scas
popa
mov
aad
add
pop
not
scas
mov
dec
jmp
pop
scas
loop
rorl
fimuls
test
sahf
mov
cmp
mov
xchg
lods
fnsave
adc
cltd
or
scas
test
mov
ljmp
popf
stos
xlat
idivl
add
mov
arpl
mov
je
mov
ja
push
xor
push
into
xor
pop
mov
aad
mov
sub
mov
setns
int
sbb
incl
in
in
add
mov
adc
rcll
lahf
fiaddl
repz
xlat
push
outsb
mov
rcll
ljmp
out
adc
fwait
test
xchg
mov
out
add
add
inc
fmull
xlat
bswap
jo
call
mov
enter
movups
fistl
leave
mov
fidivs
dec
addr16
push
dec
xchg
insl
mov
sti
es
cmc
pusha
or
mov
ret
cmp
push
stc
frstor
xchg
test
inc
mov
sub
lret
or
push
jb
ret
out
push
addr16
adc
jae
sbb
repz
add
push
lds
nop
cmc
jl
loope
stos
fwait
xchg
rcll
sbb
fnsave
mov
loope
mov
leave
push
sbb
add
mov
fistpl
add
out
adc
in
mov
fcmovnb
outsb
jg
repz
sar
sbb
std
iret
fisubrs
mov
roll
mov
mov
fadds
shll
lds
sar
in
mov
inc
push
cltd
mov
xchg
cltd
cwtl
xor
repnz
and
adc
dec
pushf
shlb
adc
mov
xor
arpl
jecxz
js
push
popf
or
pop
jmp
popf
push
push
fdivrl
xchg
mov
cwtl
xchg
pop
movsl
es
loope
sti
pop
sub
sbb
sarl
cmp
jno
xlat
ret
cltd
jmp
push
andl
leave
cmpsl
ss
sbb
mov
dec
and
and
or
and
mov
mov
mov
adc
sahf
jne
sbb
mov
push
sbb
lret
adc
shlb
repz
pop
ficomps
imul
push
xchg
stc
incb
mov
fwait
sbb
pop
ret
int
inc
rorl
dec
mov
cli
frstor
stc
jno
mov
in
inc
push
aas
ror
sti
movsb
test
xor
jle
rdseed
jb
xchg
fstpl
cmp
add
or
cmp
idivb
push
imul
jbe
adc
xchg
testl
jns
gs
lods
leave
or
mov
call
cmp
daa
repnz
jge
jo
shll
sahf
outsb
or
andl
icebp
pop
js
adc
enter
push
gs
inc
pop
nop
xor
cld
push
aad
je
xchg
fwait
inc
push
and
imul
mov
sar
call
adc
push
sbb
pop
dec
or
ds
bound
div
rorl
mov
cld
dec
fld
insl
mov
movsb
insb
mov
repz
out
and
stc
mov
xor
add
mov
and
sbb
outsb
push
cmp
xchg
out
sbb
loope
stos
ss
inc
sbb
add
test
leave
fiadds
imul
lds
int
push
ss
iret
mov
push
sub
dec
divl
xor
sti
xchg
shll
dec
mov
lods
push
xchg
cmp
ffreep
jno
fldl
mov
fistpl
mov
stos
mov
fnsave
and
adc
outsl
mov
sbb
jmp
mov
lahf
cwtl
xchg
add
adc
lcall
inc
jg
or
xchg
sbb
gs
mov
out
ret
icebp
mov
scas
mov
jo
add
mov
stc
enter
out
repnz
decl
rcrb
aad
xlat
mov
pop
repz
stc
cmpsl
xchg
push
in
and
inc
sahf
fistl
mov
loope
hlt
adc
rorb
and
je
fwait
shl
in
insl
add
mov
fyl2x
hlt
add
xor
fiaddl
or
fwait
xchg
gs
stos
lea
sarl
adc
into
inc
out
xorb
sub
mov
inc
addb
ss
mov
pop
add
out
loope
imul
jae
lret
adc
std
adc
aas
clc
sbb
adc
mov
add
cmpsl
sti
mov
mov
sti
leave
jl
jb
notl
mov
movsb
inc
adc
cmp
mov
movsl
add
iret
pop
insb
push
mov
sbb
push
mov
popf
cmc
sbb
rorl
xchg
jnp
lds
inc
adcl
mov
lods
outsb
lea
adc
fldcw
loope
sbb
in
movsb
mov
inc
divl
or
xchg
sbb
mov
jb
or
mov
js
enter
inc
push
fsub
inc
mov
and
cltd
push
fstl
cmc
mov
rcll
sub
cmp
mov
xchg
ss
mov
ss
add
icebp
mov
mov
hlt
leave
fistl
roll
pop
mov
sti
fst
lods
icebp
in
xchg
push
call
jae
xchg
out
scas
leave
sub
movsl
test
xchg
sbb
xchg
iret
sub
dec
xor
data16
dec
leave
mov
mov
insb
mov
jne
aas
test
std
adc
repnz
jle
mov
nop
stos
pop
mov
mov
lcall
sbb
les
cmp
sbb
ret
mov
std
adc
push
movsl
not
popf
xchg
test
pop
xchg
sbb
xchg
adc
movsl
clc
mov
aas
push
mov
sti
lock
sahf
rclb
out
mov
out
shll
cmp
loope
into
cmp
xchg
mov
fildl
mov
leave
dec
popf
sub
loop
or
mov
jle
mov
sbb
and
mov
mov
inc
pop
add
cmc
mov
leave
mov
push
or
adc
push
sti
mov
inc
stc
ret
fdivl
mov
pop
imul
sbb
mov
aad
cltd
scas
sbb
lret
icebp
cmc
jae
and
into
jle
pop
mov
adc
js
sahf
fprem
cmc
aas
jne
adc
fucomp
ds
pushl
mov
aas
adc
jno
scas
dec
decl
jne
pop
fnstcw
mov
leave
adc
out
mov
ret
mov
loope
cmpsb
add
push
stos
dec
lret
in
jnp
scas
mov
sbb
cmp
push
ret
shrl
inc
aad
cltd
scas
push
aaa
aad
leave
or
dec
mov
xchg
mov
and
xchg
mov
mov
test
js
pop
aas
clc
xchg
jnp
jl
je
rcll
stc
jmp
cld
add
cmpsb
jle
repnz
icebp
shl
pop
adc
pop
or
in
jle
jae
popf
mov
fsubl
movl
or
movsl
jbe
out
adc
repz
scas
paddsw
push
xlat
mov
xchg
aad
mov
add
sbb
jno
sbb
mov
es
xor
jno
or
scas
and
adcl
pop
mov
sub
xchg
movsl
ja
mov
xchg
aas
aas
movsl
imul
test
movsl
pop
mov
add
jle
fwait
js
enter
dec
fmuls
pop
stos
sub
rcrl
ret
adc
jno
lods
je
adc
vmovsd
adc
fwait
hlt
add
sar
movsl
shll
loopne
mov
inc
mov
xchg
std
punpckhdq
sti
pop
mov
ss
mov
mov
insl
mov
jne
rorl
pop
jg
sbb
xchg
lods
sbbb
clc
adc
add
cmp
push
jbe
mov
ja
fwait
sar
sbb
outsb
filds
mov
flds
lsl
jle
mov
jle
movsl
cltd
jmp
push
or
inc
jge
popf
into
cmc
repz
mov
sahf
or
int
mov
bt
out
xchg
sbb
sbb
mov
xchg
aad
cmp
jle
jp
in
ret
xadd
in
notl
mov
xlat
push
lret
data16
aas
cltd
aad
cmpsl
inc
xchg
out
mov
mov
lret
mov
xchg
addl
fstpl
mov
je
adc
aaa
lds
or
shll
icebp
xchg
out
int3
cwtl
test
or
adc
dec
mov
aad
jno
xchg
repz
ret
int
pop
mov
add
pop
or
sub
sarl
inc
sbb
mov
mov
mov
std
call
lcall
sbb
cmp
jge
fcmovnbe
mov
sarl
jb
out
out
pop
cltd
cli
sbb
xchg
or
push
in
and
ret
push
dec
and
dec
add
or
xlat
xor
std
divl
movsb
std
cmp
bnd
mov
icebp
mov
bswap
sti
inc
arpl
xor
pop
push
jae
sti
leave
icebp
psubusw
mov
test
std
xchg
fidivs
fistl
leave
or
std
xor
jl
rclb
incb
popa
loope
mov
jl
and
fistl
pop
inc
add
notb
mov
jno
pop
xchg
xlat
cwtl
outsl
std
movsl
popl
jl
ljmp
les
popf
mov
add
leave
cmc
xchg
xchg
sub
sti
push
jns
jecxz
in
dec
aad
mov
xchg
insb
neg
pop
sbb
mov
std
stc
arpl
clc
ret
fstp
clc
sbb
cmpsb
in
fwait
rcll
mov
push
lcall
xor
subl
mov
mov
adcl
xlat
jns
sti
jmp
dec
jns
pushf
jae
and
push
movsb
mov
clc
mov
movsl
gs
sahf
or
jno
test
aad
or
jae
xlat
mov
fucomp
xchg
lods
or
sbb
rolb
adc
mov
and
mov
idivb
cltd
loope
int
aad
pop
icebp
fldenv
mov
or
xor
sub
jne
sbb
xchg
pop
mov
popf
in
jp
and
sub
popf
les
iret
inc
push
icebp
add
lds
xrelease
popl
lea
and
mov
push
dec
mov
mov
add
sbb
push
shr
ret
push
push
into
mov
sar
jecxz
icebp
int3
outsb
or
shl
dec
shrl
pop
icebp
iret
outsb
std
pop
icebp
scas
xchg
mov
cltd
in
jmp
iret
mov
ja
iret
mov
mov
sub
and
repz
leave
scas
dec
xchg
xchg
or
in
adc
popf
add
into
and
and
push
das
sub
sarl
jnp
shll
int
lret
pop
jnp
das
push
adc
ret
mov
cmpsb
icebp
test
add
sbb
rol
xchg
mov
jne
mov
popf
aad
popl
mov
movsl
lock
mov
inc
or
stos
jbe
out
fnstenv
es
in
xchg
sub
scas
jp
xchg
bound
add
fildll
hlt
ficomps
jno
maskmovq
mull
shll
jnp
repz
jecxz
pop
loope
adc
cmp
pop
enter
dec
xchg
sbb
hlt
sbb
mov
or
in
testl
outsl
fdivr
pop
call
jg
sbb
add
jb
mov
repz
aas
shr
hlt
and
push
dec
ss
xchg
push
fstl
sti
sbb
jno
add
cmp
xor
loop
sub
add
and
lret
mov
movsl
ljmp
adc
xlat
imul
popf
loope
in
cmp
neg
lods
ja
xchg
add
jno
movsl
in
add
lds
aam
push
pop
mov
mov
mov
sbb
mov
mov
mov
inc
testl
ret
push
mov
js
jbe
add
cmpsl
sbb
call
mov
les
lods
popf
sbb
xor
xor
and
sbb
or
xor
shl
xorl
add
push
xchg
icebp
mov
sti
dec
xchg
repnz
jmp
js
repnz
cmp
xchg
repnz
lret
mov
ficompl
jbe
rcrl
pop
pop
jle
sub
cmpsl
in
fwait
inc
and
inc
fs
sbb
sbb
add
xchg
sub
shrl
pop
or
mov
shlb
and
or
xor
xchg
inc
in
mov
fnsave
jbe
dec
xchg
cmp
xchg
fdivp
add
or
icebp
test
mov
sbb
lcall
ror
cmp
adc
mov
leave
rclb
adc
aas
ret
mov
outsb
dec
add
lds
fcmovne
dec
sarl
xchg
scas
dec
insb
inc
and
mov
out
daa
add
mov
outsb
jl
push
mov
test
outsb
test
outsb
subl
mov
lcall
mov
xchg
push
mov
adc
or
or
js
cltd
cmpsl
sub
pop
dec
jne
out
xor
lds
adc
adc
adc
inc
jno
repnz
rcll
std
mov
cmp
jecxz
mov
shrl
aad
cltd
xor
sbb
push
xchg
icebp
or
push
lret
int
sbb
loope
mov
sbb
jno
and
ret
xlat
shl
adc
dec
lea
pop
insb
xchg
xchg
inc
in
xchg
pop
orl
iret
popf
push
pop
or
outsb
jmp
repz
adc
movsb
adc
xchg
mov
stos
jge
fsts
js
loopne
addb
rcl
aas
inc
xchg
lret
mov
ret
dec
in
scas
popf
pop
add
jo
or
fnstenv
and
adc
cli
lods
hlt
lods
flds
mov
and
mov
imul
adc
ret
mov
mov
push
jne
jecxz
leave
adc
pop
add
mov
sbb
lds
sub
xchg
sbb
lret
in
jge
inc
jno
mov
int
repnz
jbe
fxam
mov
lds
pop
dec
aad
shlb
adc
cltd
fwait
sub
and
bswap
xchg
loope
ror
jl
addr16
add
mov
xorb
or
scas
mov
incl
xor
in
mov
decl
mov
sub
ss
inc
jne
and
or
adc
loopne
mov
cli
test
jnp
stc
leave
mov
daa
adc
xchg
mov
mov
mov
aas
call
into
shlb
outsb
fcoms
push
outsb
stos
xor
sbbb
cmp
insb
jecxz
mov
push
and
ret
xchg
xorl
aaa
sbb
mov
mov
or
outsb
add
sbb
clc
add
testl
lds
clc
adc
mov
add
cmp
sti
xchg
addr16
xlat
jecxz
out
or
idiv
push
mov
pop
mov
repz
fnsave
in
movsl
movsb
mov
mov
add
js
fwait
loope
add
xbegin
cwtl
hlt
imul
lcall
xchg
add
into
cmpsb
jae
movsl
loope
ret
stc
mov
sbb
adcl
pop
roll
add
imul
jle
mov
jnp
jmp
jg
scas
sbbl
jg
jg
not
repz
stc
fidivl
call
mov
push
push
push
rcrl
stc
sub
dec
inc
xchg
fldl
pop
xchg
cltd
shrb
adc
xor
lds
add
loopne
ret
insb
addl
ja
loope
add
mov
loopne
lea
push
pop
loope
xor
adc
jge
mov
in
call
push
scas
rolb
popl
pop
movsl
sbb
add
repz
or
icebp
cmpl
jne
or
or
mov
iret
pop
sbb
add
and
inc
sub
inc
scas
cmp
mov
cmc
cltd
or
sbbl
add
icebp
orb
loope
xchg
push
std
adc
add
adc
jmp
icebp
push
icebp
cltd
xlat
mov
cwtl
test
pop
jae
adc
mov
adc
xchg
push
mov
inc
repnz
cli
or
mov
add
insb
pop
lret
xchg
cmp
mov
stc
add
adc
div
adc
data16
in
aad
jecxz
push
xchg
jae
mov
popf
xchg
xor
ss
loope
jl
icebp
add
test
lret
pop
aad
pop
dec
sbb
jbe
inc
mov
into
fwait
sbb
and
lock
aam
mov
add
insb
pop
leave
cmc
mov
iret
pop
mov
xchg
scas
popf
mov
fisttpl
mov
sahf
xchg
sbb
adcb
xchg
add
add
inc
ret
sbb
or
cmp
pop
xchg
or
popf
mov
loope
jne
mov
sti
pop
ret
sar
sahf
scas
dec
mov
adc
lcall
outsb
xor
mov
in
dec
decl
mov
sbb
repz
or
adc
mov
scas
int3
sub
ja
sahf
sub
test
fcmovb
ja
ret
shl
movsl
jecxz
adc
leave
repz
mov
pop
cmp
mov
mov
sbb
and
xchg
mov
jb
fildl
mov
repz
sbb
cli
dec
jo
mov
mov
xchg
into
shll
es
mov
mov
mov
pop
test
dec
aad
sbb
adc
or
or
fldt
pop
in
filds
inc
out
sub
fnstsw
rcrl
leave
adc
dec
pop
outsl
fucom
xchg
adc
push
jecxz
out
mov
adc
xlat
sbbl
loope
cltd
iret
and
mov
jae
mov
addr16
fldenv
push
xlat
jno
iret
mov
repnz
mulb
xchg
ret
or
aad
sbb
bound
push
movsl
dec
add
lea
pop
bswap
aad
std
ds
rcrl
test
sub
or
pop
push
outsl
stc
icebp
notl
mov
scas
out
xor
mov
cltd
or
pop
je
pop
fcmovnu
jne
rcrl
loope
iret
push
mov
xchg
aad
mov
rcrl
fstl
mov
mov
iret
adc
ja
shr
cmp
xchg
rcrl
jge
add
or
ffree
inc
outsl
fbld
vpackssdw
mov
pusha
sbb
jl
lock
popf
jg
and
cltd
js
int
lods
loope
mov
iret
add
jmp
leave
and
test
or
sti
sahf
sarl
fwait
mov
jo
out
xlat
fsubrl
cltd
jle
cmpsb
cmp
or
in
fistpll
xchg
push
adc
and
add
rorb
xor
test
ja
or
repnz
cmp
pop
mov
sbb
pop
sub
int
xchg
cmp
mov
movsl
push
add
mov
cltd
ret
xchg
sar
push
and
stos
daa
sub
cmp
imulb
popf
mov
int
mov
imul
imul
pop
icebp
fxch
dec
mov
lea
subl
iret
js
add
sbb
adc
add
dec
fwait
icebp
lret
jg
jne
xchg
xchg
popf
xchg
add
and
inc
push
nop
sub
iret
mov
scas
sbb
setne
push
dec
imul
or
data16
xchg
les
push
cmc
stc
pop
adc
or
flds
fwait
jo
and
leave
mov
dec
popf
fildll
and
inc
push
mov
or
lods
xchg
aad
dec
mov
jno
int
leave
out
fldenv
repz
mov
in
adc
shll
int
orl
adc
mov
icebp
or
add
stc
iret
fnsave
mov
xor
and
sti
jbe
jnp
sbb
mov
or
icebp
and
insl
and
cmovns
rorl
mov
xor
sub
xor
repz
adc
or
xchg
xor
bswap
xchg
xor
fnstcw
cmpsb
sbbb
sbb
push
call
loope
pop
shl
sub
pop
cmp
popf
addl
lods
cmp
push
shl
and
or
mov
push
stc
xchg
lret
cmp
mov
enter
mov
jle
inc
pop
repnz
scas
add
lret
and
jmp
imul
xchg
in
or
and
int3
stc
int
xchg
scas
outsb
or
sti
xor
or
mov
xlat
or
outsl
fwait
aaa
rcll
insb
daa
sbb
or
out
xchg
rcr
outsb
xchg
iret
or
lret
fstpl
movsl
xchg
mov
icebp
testb
fnsave
sbb
popa
or
fldenv
xchg
int
pop
mov
outsb
xchg
aaa
out
jno
push
stc
psrlw
aas
loope
std
xchg
xchg
add
data16
xchg
cltd
jno
or
add
mov
xchg
imul
fildl
ret
jp
icebp
sub
xchg
sub
sbb
mov
jne
cltd
add
or
lahf
popf
es
clc
scas
fwait
xlat
add
mov
xchg
adc
loope
repnz
sub
rol
sbb
aad
mov
int
mov
mov
and
arpl
mov
jmp
loope
inc
mov
mov
data16
outsb
out
movsl
mov
outsl
add
push
push
mov
cmp
cmp
and
fcomi
sbb
addr16
loopew
cltd
or
out
in
xchg
push
mov
aas
stos
jnp
fnstsw
jle
dec
and
xchg
ror
int3
sahf
cmp
scas
test
jle
xchg
or
test
fadds
ss
fistl
sbb
lahf
cmpsl
cmpl
xchg
fwait
jmp
sbb
ror
insb
insl
sbb
inc
sbb
repz
jmp
xor
add
iret
fcmovnb
es
inc
fnsave
aas
mov
aad
mov
push
sub
pop
xchg
xor
xchg
add
xor
or
cmc
xor
popf
data16
xchg
pop
mov
icebp
mov
and
push
js
fwait
cmp
sbb
adc
ret
cltd
lahf
scas
dec
and
or
adc
sahf
add
or
sbb
adc
ljmp
test
and
jmp
jp
repz
add
ret
mov
sbb
cmp
cld
pinsrw
sti
add
call
adc
stc
ret
fs
ret
sub
aad
jl
mov
add
inc
sub
add
push
aad
dec
mov
icebp
pop
xchg
es
xchg
pop
orl
int
jg
or
and
lcall
jbe
or
xchg
adc
sahf
and
xchg
popf
imul
xlat
fwait
ret
ljmp
adc
movsl
cwtl
pop
jge
aad
dec
addr16
or
icebp
out
repnz
jecxz
repz
movsl
xchg
adc
mov
pop
out
jbe
leave
lret
mov
add
lock
xor
mov
rol
sarb
jg
xchg
negb
aas
or
sbb
or
mov
xchg
ss
cwtl
sar
dec
cli
mov
mov
sub
fstpl
or
inc
std
push
daa
ljmp
pushf
fnstcw
adc
adc
movq
popf
mov
xchg
jge
in
clc
mov
xchg
xchg
mov
lret
pushf
int
std
in
rep
icebp
mov
sbb
ds
or
fisubs
xchg
add
in
cmp
add
jne
add
mov
rcll
out
add
sbb
incl
xlat
adc
and
adc
ja
shl
les
mov
pop
clc
int3
or
add
notl
fs
dec
in
ret
jl
xchg
testl
xchg
jo
inc
scas
loope
cltd
int
jecxz
dec
je
pop
ret
inc
addr16
into
xor
or
and
leave
jl
imul
ja
lds
push
add
rcll
add
call
adc
in
jbe
in
int
sbb
imul
bswap
shll
or
add
call
pop
push
sub
movsl
fsts
out
jl
js
inc
fldenv
add
ret
xlat
pop
ja
lds
add
mov
push
aaa
std
or
mov
sbb
xchg
lahf
mov
in
cltd
cltd
std
gs
fst
fstl
mov
rcl
inc
cmpsl
ret
jecxz
cmpsl
pop
and
fnstenv
in
repz
pop
cmc
repnz
inc
pop
adc
imul
stos
add
mov
sti
js
scas
jg
leave
out
xchg
and
cli
cltd
es
push
xchg
adc
insb
mov
repnz
sbbl
flds
mov
pushf
lret
mov
sarl
lcall
xchg
aaa
insb
fstpt
jmp
test
push
pop
clc
movsl
scas
sbb
jmp
xor
jb
lret
notb
or
fnstenvs
sbb
dec
xchg
inc
and
cli
loop
leave
fldenv
pop
shrl
pop
incl
cmp
and
rol
jl
fxch
add
stc
mov
mov
push
jae
fwait
loope
stc
adc
sti
lods
add
ja
sbb
icebp
insb
jle
fsubrs
sbb
int
std
mov
and
push
scas
xlat
mov
jnp
adc
insl
xchg
scas
and
xchg
stos
lret
es
icebp
jbe
xchg
popf
rcrl
xor
std
xor
vcvtsi2sdl
cmp
mov
aam
nop
cld
jnp
roll
add
xchg
dec
jne,pt
icebp
add
aad
push
or
stc
add
dec
movsl
addr16
int3
adc
pop
ret
or
popf
into
js
push
bswap
cmpl
jne
xchg
aas
fwait
std
mov
xchg
lret
fucom
shll
mov
rcl
call
cltd
or
sti
adc
mov
out
jle
negb
mull
mov
dec
fldt
sbb
lret
insl
jg
std
and
mov
bound
mov
scas
cltd
xchg
sti
imul
push
add
or
imul
pop
adc
sti
cmp
fstpl
sbb
push
pop
stc
and
dec
jno
mov
xchg
mov
gs
pop
lret
or
sbb
fbld
fisubl
ss
insl
xchg
loope
loope
jno
or
mov
xchg
push
insl
sti
sub
sbb
outsb
leave
into
std
dec
scas
and
imul
sti
inc
or
adc
mov
mov
aas
repz
movsl
shlb
les
scas
mov
in
test
fwait
insl
aas
inc
enter
cltd
outsl
push
mov
jecxz
aam
xchg
stos
out
rolb
pop
push
out
out
daa
lret
and
jb
xchg
shll
jecxz
adc
mov
pop
ja,pn
or
push
xor
jo
aas
fadds
sbb
loop
out
xor
outsb
pcmpgtd
jne
int
in
aad
inc
adc
pop
add
lcall
xchg
sbb
stos
xchg
and
mov
mov
rcrb
dec
mov
scas
adc
not
scas
jle
jb
mov
icebp
out
mov
outsl
mov
adc
mov
mov
jle
and
leave
jl
mov
dec
or
sub
mov
jae
adc
ret
lret
mov
in
shr
xchg
movsl
or
adc
outsb
pop
or
lds
adc
sbb
imul
xchg
repz
or
mov
loop
aas
enter
and
or
rcrl
ffree
push
adc
mov
sti
sbb
rcrl
add
sub
fwait
popf
mov
pop
movsl
push
iret
in
xor
and
mov
mov
sti
xchg
insb
out
adc
or
or
pop
jne
sbb
xchg
in
xchg
pushf
adc
add
or
roll
jge
dec
aas
pop
jno
and
add
sub
mov
pop
lds
shl
mov
mov
xor
pop
mov
mov
sti
xchg
dec
add
inc
mov
pop
mov
ja
int
fdivrs
insb
add
shrb
out
or
mov
std
pop
sbb
sarl
ret
jno
ss
in
adc
or
add
mov
sbb
mov
mov
aas
shrl
push
mov
pushf
seta
data16
out
push
jno
mov
stc
aas
repz
setge
in
push
int
mov
lock
or
jo
jecxz
ret
icebp
rcrl
mov
mov
pop
cmpl
lock
cli
pop
jno
adc
scas
adc
int
fwait
and
fs
mov
add
xchg
aad
roll
mov
iret
jecxz
dec
mov
aaa
in
xchg
inc
sar
mov
das
and
idivb
pop
push
push
aad
or
cmp
add
jp
inc
jne
aas
xlat
sti
inc
int
in
pop
and
popf
jnp
roll
decb
mov
xor
ret
xchg
iret
cmpsl
jg
and
mov
sub
cmp
add
sti
or
addr16
in
outsb
std
xchg
stos
fnstenv
loope
lock
jnp
sti
xchg
mov
add
dec
adc
and
loope
adc
jae
imul
xchg
sarl
xchg
mov
enter
xchg
rcr
jns
mov
nop
and
std
jae
or
lds
pause
sbb
ja
jecxz
stos
jo
xchg
movsl
push
jp
ss
xlat
xchg
cmp
out
inc
in
mov
fwait
mov
inc
push
jle
out
iret
nop
mov
fistl
or
jecxz
add
cs
ret
jmp
icebp
xchg
enter
ret
icebp
mov
lock
xlat
rcrl
in
rcll
sub
fisttpl
cmp
jg
mov
dec
mov
xlat
or
flds
jl
and
cmc
sbb
call
mov
xchg
sbb
jo
scas
sbb
mov
pop
and
fldz
xor
popf
jb
mov
pop
push
int
out
or
sbb
mov
cmp
sbb
mov
cmc
cmpsl
mov
movsb
mov
stc
dec
sbb
push
dec
jl
jae
mov
add
sub
roll
jle
or
jge
xchg
testb
adc
aad
or
out
sbb
cmc
cmpsb
pop
and
mov
xlat
jg
fldl
dec
jno
cmpsl
js
arpl
ret
mov
and
xchg
inc
or
es
mov
mul
cli
mov
xchg
rcll
jno
inc
mov
enter
push
cmpsb
cmp
sbb
in
and
push
test
add
mov
xchg
shll
pop
mov
pop
or
add
pushf
mov
repz
jle
cld
je
push
fisttpl
fnstcw
cmp
cwtl
xor
jno
jecxz
mov
fldenv
or
mov
je
mov
sub
lods
mov
in
adc
subl
test
add
mov
push
outsb
movsl
xchg
insl
mov
popa
fnsave
or
pcmpgtd
je
aad
cmp
iret
in
jnp
or
lds
clc
jbe
stc
lret
insb
test
mov
ret
into
mov
setb
stos
mov
fstl
shrb
iret
mov
add
mov
sti
adc
fisttpll
sbb
imul
fstps
mov
jecxz
jnp
lock
add
call
mov
push
negl
pop
hlt
add
mov
call
add
inc
ja
int
fnstsw
or
insb
fildll
cmp
jl
sub
sbb
out
nop
scas
leave
xor
shll
push
jb
fwait
popf
faddl
insb
hlt
xor
fisubs
xchg
ret
imul
rcrl
hlt
loopne
mov
xchg
out
cwtl
sub
jno
lss
push
and
xlat
rorl
push
pop
add
mov
xor
sub
jmp
out
xor
sbb
ret
pushf
push
sub
xchg
imul
cmp
sbb
inc
imul
mov
adc
std
incb
cld
sub
sbb
mov
repz
loope
shl
jnp
xchg
aas
xlat
jmp
xor
cs
cmp
ss
sahf
leave
lcall
mov
popf
cld
sub
sbb
bound
and
fstpt
imul
or
mov
xlat
in
sysret
imul
xlat
xchg
repz
pop
dec
repnz
jecxz
xchg
icebp
push
mov
sbb
xor
xor
pop
mov
nop
dec
lret
xchg
jbe
xchg
xchg
or
cltd
fstpl
addr16
add
out
jge
add
loope
fwait
sub
fwait
pop
mov
mov
testl
xchg
lret
mov
mov
je
rcrl
hlt
cmp
xor
push
insl
mov
push
in
inc
pop
lds
lods
fnstsw
aas
pushl
jae
mov
shrb
mov
adc
mov
jg
scas
ss
adc
int
lret
mov
and
data16
sub
mov
lock
loop
mov
popf
std
pushw
adc
add
ljmp
scas
sti
adc
out
outsb
dec
inc
pop
icebp
subl
out
sbb
pop
add
mov
push
ret
add
mov
mov
lret
inc
addr16
xchg
aad
inc
aas
call
pop
xchg
mov
imul
aad
xchg
rep
sub
mov
cs
in
mov
iret
roll
xchg
daa
adc
add
inc
mov
xchg
loope
add
mov
inc
xchg
cmp
icebp
adc
cltd
jae
and
adc
pop
sahf
or
mov
mov
and
sbb
push
les
mov
test
repnz
int3
aas
in
push
in
mov
xchg
cld
sbb
movsl
mov
loope
pop
push
in
ret
popf
add
aad
icebp
lds
adc
fstps
xchg
rorl
xchg
push
sub
sbb
out
lods
lcall
fwait
rcll
aad
mov
stos
xchg
loope
add
mov
fldlg2
mov
adc
mov
outsl
inc
or
rcll
lds
je
scas
jecxz
jle
lock
loope
int
out
imull
mov
ret
iret
stos
ja
sarl
fyl2x
ljmp
push
pop
imul
je
sbb
xor
add
cld
jle
sbb
sbb
mov
push
xchg
in
inc
xor
mov
cld
push
ds
fiadds
adcb
pop
pushf
mov
or
std
test
jae
xchg
iret
aad
stos
dec
negb
pop
movsl
data16
lock
stc
sar
js
pushf
adc
mov
repnz
pop
das
add
outsb
mov
mov
mov
adc
cmp
adc
and
lods
push
pop
fsts
mov
adc
adc
lret
jno
sbb
mov
fimull
in
int3
leave
mov
sarb
mov
jp
sbb
inc
insb
movd
mov
or
cli
pop
in
push
add
loopne
inc
push
jle
mov
pop
jl
jecxz
sbb
fimull
cmp
push
jno
mov
add
std
fimull
sahf
ret
ficomps
mov
shlb
call
imull
scas
pop
sbb
test
std
fstps
jge
hlt
hlt
xchg
fnsave
das
jae
int
pop
mov
rcr
xchg
lret
sahf
jg
mov
xchg
jg
jg
out
pop
mov
std
iret
stos
jno
out
and
push
cmpsb
or
aad
xor
aad
mov
mov
adc
xchg
and
stc
and
add
flds
mov
test
xchg
orb
negl
dec
es
push
leave
movsb
stc
sti
mov
data16
jl
cmp
ja
adc
jbe
int
shrb
cltd
pushf
xchg
push
fadd
rcll
ja
sbb
mov
das
ss
xor
or
mov
mov
add
mov
inc
pop
es
xchg
ret
scas
outsb
mov
adc
mov
xchg
inc
jecxz
xchg
in
fisttpll
rcrl
xchg
mov
int
jo
lret
inc
rcr
stos
mov
jnp
xchg
cld
push
jo
sbb
jecxz
cltd
add
movsl
popa
sbb
xchg
fwait
aaa
sbb
adc
inc
mov
mov
test
and
in
lret
add
cmp
roll
ljmp
push
xlat
icebp
in
jno
popf
xchg
repz
mov
aad
jle
jbe
iret
int
pushf
movsl
cli
add
and
int
shll
or
sub
pop
jge
movsl
dec
mov
mov
mov
add
jns
mov
and
insb
add
adc
sbb
roll
cmpsl
or
sbb
shll
jnp
mov
div
or
adc
mov
jo
int
fsubs
sbb
stos
shrb
adc
lock
scas
movsl
add
xlat
mov
mov
int
imul
mov
add
popa
jno
out
repnz
sbbl
dec
sbb
sbb
mov
cmp
shl
and
mov
cltd
adc
jnp
mov
xlat
xor
popf
mov
out
repnz
imul
testl
mov
hlt
sbb
inc
xlat
aas
xchg
push
mov
fwait
xchg
icebp
lcall
mov
jg
mul
xchg
cmp
in
testl
scas
fstpl
cld
mov
ss
xchg
mov
xor
mov
jecxz
mov
fnstcw
std
adc
movsl
mov
pushl
cmp
add
jecxz
xchg
lret
mov
les
mov
mov
inc
adc
in
add
cltd
repz
in
xchg
in
jae
pop
fnstenv
and
mov
jecxz
stc
and
adc
push
fldt
sub
shll
dec
stc
leave
iret
and
xor
cmp
sub
or
ficomps
push
lret
mov
lret
cmpsl
add
sbb
mov
clc
std
inc
or
test
iret
aas
ja
or
out
dec
shll
aaa
test
or
mov
fxch
jg
adc
je
mov
pop
adc
push
xchg
rcrb
and
adc
adc
jnp
iret
ud1
imul
jp
mov
loope
xlat
mov
lds
lret
jl
scas
dec
clc
xchg
shlb
mov
pop
or
mov
mov
xchg
sti
pop
lret
jne
test
aad
xchg
jle
xor
out
lret
mov
and
add
out
sti
cmp
outsb
add
or
shl
cwtl
or
push
out
setae
add
or
insl
dec
pop
mov
xchg
fstl
pop
or
jg
sbb
jbe
adc
ror
outsb
add
fsubr
cmc
bound
xlat
xchg
cwtl
xor
jge
or
mov
idivl
rcll
js
pop
cld
std
shlb
xchg
shl
mov
filds
jb
xchg
mov
sarl
loop
jge
or
add
adc
movsl
lock
fidivrs
cli
cmp
in
sbb
ret
cmp
fwait
xlat
int
pusha
test
dec
lea
repnz
lcall
call
jge
pop
mov
xor
or
jle
cmpsb
pushf
mov
add
scas
rorl
adc
pop
loope
xor
imul
test
jnp
and
mov
cltd
vshufps
mov
mov
cmpl
jo
sbb
and
fdivs
neg
out
addr16
mov
sub
mov
clc
movsl
in
mov
fistl
fucom
decl
imul
popa
mov
sbb
mov
rcll
into
insb
aad
inc
pop
xlat
ret
jecxz
loope
push
leave
lret
push
mov
ljmp
or
xor
inc
cs
in
aad
ret
stos
or
insl
sti
inc
movsl
mov
lock
int
out
mov
std
mov
mov
sub
fdivp
dec
adc
push
mov
andl
fmull
incb
xchg
jbe
int
notl
std
mov
adc
push
adc
jg
xchg
leave
push
cmp
jecxz
cmpsl
xchg
mov
mov
mov
int
xchg
mov
jbe
or
popf
jno
mov
pop
repnz
mov
cmp
pop
mov
outsb
in
cmc
mov
add
and
int3
daa
xlat
leave
add
lods
inc
jle
hlt
push
int
sbb
mov
popa
add
jecxz
ret
ret
popf
jl
xlat
jl
jno
adc
icebp
pop
push
mov
out
pop
dec
cmp
mov
add
cmc
mov
sub
jmp
aad
dec
into
shll
stos
call
roll
inc
adc
pop
pop
mov
xchg
je
fwait
or
div
mov
repz
xchg
lahf
mov
fwait
add
int
lods
adc
jae
mov
jecxz
aas
je
xchg
fsts
aad
in
and
in
sub
add
icebp
into
jb
push
push
cmpl
bound
imul
fdivrp
mov
rcrl
adc
jmp
lret
psubsw
or
and
ret
or
cli
and
xchg
out
scas
mov
push
inc
push
mov
and
sub
or
dec
scas
add
add
ss
fwait
or
push
adc
and
lret
mov
adc
ds
outsb
jo
sbb
sbb
shl
outsb
ret
adc
jmp
mov
xchg
into
pop
or
es
outsl
int
idiv
mov
xorb
mov
cltd
add
icebp
fwait
adc
stos
mov
stc
lret
push
mov
decl
ss
and
and
jb
icebp
shr
mov
popf
or
sub
out
ja
scas
mov
fstpt
lcall
shll
xorl
adc
pop
je
mov
or
lock
push
out
in
lock
mov
and
out
or
aad
aam
lods
shlb
mov
ljmp
pop
int
in
gs
add
ret
push
sub
les
adc
popf
mov
bound
rclb
int3
fdivr
xchg
je
mov
leave
cmpsb
hlt
lods
es
pop
jl
push
outsl
jl
js
je
sbb
xor
dec
mov
push
mov
adc
xchg
in
mov
cmpsl
mov
add
frstor
mov
out
cli
jne
mov
ret
mov
call
xlat
test
lock
icebp
and
lahf
mov
or
sbb
rorb
jbe
mov
out
or
adc
leave
pop
or
and
sub
fistpl
inc
rcll
jae
mov
pop
add
leave
sbb
or
fimuls
mov
rol
jl
sub
jo
testb
inc
lds
notl
mov
int
and
fwait
inc
xchg
je
mov
fwait
in
testl
in
push
cmp
adc
wbinvd
jbe
movsl
mov
sbb
repz
jo
iret
add
lock
rcl
mov
sub
xchg
movsb
je
xchg
in
je
scas
mov
or
jo
bswap
pop
das
jb
sbb
es
pop
lods
es
ss
iret
punpckhwd
repz
push
fwait
adc
push
testl
xchg
pop
stc
aad
outsb
std
push
je
xchg
ss
sbb
adc
fwait
cltd
xchg
movsl
and
cmpsl
iret
mov
or
xchg
fmuls
pop
mov
jns
frstor
mov
pop
lret
aas
outsl
mov
xchg
sub
or
cmc
xor
sub
ret
xor
adc
add
and
in
push
mov
pop
jno
xchg
pushl
in
testl
inc
fmull
push
dec
or
pop
lret
out
out
xchg
outsb
adc
inc
xlat
jnp
or
push
mov
mov
jge
mov
js
mov
add
jl
jo
and
mov
adc
and
cltd
mov
jbe
xchg
scas
or
xchg
mov
and
mov
lret
pop
out
pop
xchg
scas
and
xchg
adc
es
sbb
movsl
frstor
insb
movsl
lahf
push
std
mul
mov
adc
inc
mov
mov
xchg
fucom
outsl
mov
adc
ret
mov
xchg
or
aas
repz
push
dec
cmpsb
addr16
push
mov
xchg
in
stc
icebp
pop
cmpsb
and
repz
icebp
and
hlt
and
cli
mov
std
test
icebp
lret
test
lods
cltd
mov
push
idivl
in
mov
pop
adc
xchg
test
les
and
cmpl
stc
rorb
xchg
push
js
pop
lds
test
pop
std
mov
mov
mov
adc
push
iret
inc
fwait
scas
push
jnp
mov
push
mov
push
adc
xor
and
or
add
adc
test
xor
lock
mov
das
inc
jmp
cmpsb
adc
mov
aad
flds
pop
sti
into
inc
outsb
or
sbb
adc
mov
int3
loope
and
enter
mov
cmp
push
and
pop
ds
sub
daa
push
rcl
out
mov
shlb
fnstsw
and
aad
jl
ret
mov
mov
push
insb
hlt
mov
xchg
or
add
in
std
lock
lret
sbb
fwait
insb
orl
xor
int
lods
jl
pop
mov
xchg
mov
rorl
mov
sti
xchg
mov
enter
mov
or
je
fistpl
sbb
decl
into
ja
add
imul
jnp
inc
iret
xchg
push
cmp
add
dec
call
jnp
add
adc
stos
icebp
add
iret
xlat
adc
jecxz
rcl
push
inc
fiaddl
push
xchg
mov
popf
sti
dec
cmp
aad
std
pop
xchg
aad
stc
sbb
pushf
mov
arpl
cmc
loope
rcll
ret
mov
stos
xchg
out
cmp
xor
push
sti
lods
xchg
pop
or
vmread
inc
adc
fs
inc
adc
lock
xor
lods
scas
out
gs
mov
outsb
sti
shll
pop
mov
fstps
movsb
xlat
xchg
iret
insl
roll
in
or
adc
stc
xchg
push
adc
lret
push
fwait
mov
lds
int
mov
imul
leave
mull
lds
fstps
dec
lods
addr16
inc
into
sub
inc
dec
ror
dec
sub
mov
or
leave
out
jge
mov
rorb
sbb
mov
sub
adc
sbb
mov
out
mov
sbb
jle
repnz
pop
mulb
popf
xor
sti
mov
add
hlt
rcrl
add
jle
into
fisttps
pop
sbb
or
mov
xchg
push
sub
inc
cmp
and
movsl
cld
fldenv
shll
adc
inc
xchg
test
into
xor
out
neg
inc
or
sub
cld
adc
mov
std
leave
movsl
mov
setl
dec
ljmp
or
sti
adc
or
add
push
pop
ret
mov
mov
or
mov
je
stc
popf
and
or
out
xchg
iret
or
scas
sbbl
and
add
addr16
adcb
sbb
ret
push
or
and
mov
cmpsl
jno
in
mov
repnz
in
scas
cwtl
hlt
fst
sahf
out
xchg
insb
cmpsb
fs
fistl
mov
sbb
mov
out
xchg
in
mov
sbb
je
popf
cltd
pop
mov
mov
mov
sub
cmpsb
sbb
loop
pop
jl
sti
mov
add
bnd
or
clc
mov
es
in
mov
sub
add
pop
mov
mov
adc
out
mov
in
add
sub
cmp
shll
pop
adc
aam
insb
or
sbb
sarb
loop,pn
xchg
sub
out
cmp
js
fwait
adc
iret
mov
rorl
lds
xchg
popf
adc
icebp
aas
pop
hlt
scas
fldl
mov
or
xchg
ss
leave
mov
stos
pushf
jle
bnd
repnz
push
and
sub
rclb
xchg
add
dec
movsl
rorb
sbb
mov
mov
pushf
xor
dec
ret
rorl
xor
mull
lret
clc
mov
sbb
jecxz
xchg
pop
adc
jb
les
mov
int3
push
xchg
call
sbb
mov
add
mov
mov
jne
movsl
notl
dec
xchg
lods
sahf
icebp
inc
mov
mov
and
sbb
lds
popa
aad
loopne
dec
scas
pop
mov
into
inc
adc
std
dec
clc
cmpsl
mov
test
xchg
ja
mov
sbb
in
sbb
mov
decl
xlat
popf
int
hlt
push
lds
xor
in
mov
nop
fwait
cmpsb
adc
in
push
std
pop
incb
push
mov
lds
shrb
in
or
ljmp
leave
enter
cmpsb
mov
in
jae
add
ret
in
sti
outsb
aam
jne
xchg
aas
and
jno
or
lcall
mov
xchg
mov
aad
and
jnp
mov
movsb
andl
and
sbb
mov
aas
xor
xchg
lods
test
cmp
fldenv
aad
dec
cmp
cmc
fsubs
scas
cmp
add
or
xchg
movsl
shrb
jae
stc
lret
fcos
xchg
js
push
xchg
in
xchg
cmp
fcomi
hlt
stos
repz
mov
aad
pushf
sub
sti
out
jnp
adc
add
rclw
xchg
shrl
scas
ret
or
int
mov
rorb
lds
subl
stos
xor
out
aas
mov
leave
loope
mov
int3
or
xor
rcl
xchg
ret
je
add
cmp
fdivrs
xchg
xlat
add
lcall
mov
xor
mov
rorl
idivl
sbb
iret
mov
add
xchg
fldenv
std
push
mov
test
mov
pushf
mov
mov
lea
stos
or
setae
or
fwait
xlat
sarl
pop
subl
add
xchg
mov
push
das
mov
sbb
dec
cmpsl
xor
xor
jne
call
xchg
aad
in
mov
scas
not
in
xor
jnp
fstpt
addr16
outsl
pop
popf
sbb
pop
ja
or
in
sbb
and
xchg
sahf
xorb
subl
outsb
int3
add
aad
repnz
roll
ss
std
adc
out
push
push
add
xchg
mov
mov
cltd
and
aam
lahf
rolb
ret
popf
int
xchg
lret
std
sbb
or
js
inc
jnp
icebp
hlt
xor
sbb
mov
jge
or
inc
inc
cli
add
lcall
icebp
inc
mov
out
pop
xchg
push
pop
stc
mov
fmull
loope
inc
pop
cwtl
inc
hlt
and
cltd
and
pushf
sti
sub
inc
iret
fnsave
popf
mov
adc
insl
inc
mov
repnz
js
xchg
insl
inc
or
data16
lcall
dec
sti
or
mov
fstl
dec
fisttpl
fstpt
std
out
jo
in
sub
stc
pop
ja
xchg
jecxz
les
inc
mov
stc
sarl
adc
movsl
ja
sbb
popf
sti
and
sub
mov
mov
add
add
bound
jne
sarl
bswap
sub
popf
cmp
ret
push
pop
adc
nop
iret
mov
pop
mov
pop
lret
mov
shll
sbb
dec
icebp
jae
int
repz
add
dec
adc
aas
out
xor
insl
cmp
test
mov
hlt
inc
mov
movsb
xlat
jbe
add
shrl
repz
mov
popw
cmpsl
sti
push
icebp
sbb
xor
fs
xlat
rcrl
sahf
cld
and
jecxz
ret
adc
mov
mov
testl
test
dec
lret
lods
or
mov
cmp
adc
mov
insl
inc
lret
and
xchg
mov
repz
mov
jne
mov
mov
daa
js
dec
mov
scas
push
leave
jae
or
pop
and
sahf
add
xchg
and
icebp
lcall
xlat
sti
jecxz
movsl
nop
xchg
std
and
rclb
mov
pop
cs
fisubrs
test
adc
xlat
pop
aas
cld
adc
push
cmp
aad
jg
push
adc
hlt
push
ret
aas
inc
xchg
adc
jp
dec
mov
movsl
jno
mov
fwait
and
leave
xor
or
mov
int
jbe
mov
sti
test
xorl
outsb
in
or
xchg
xor
sbbl
sbbb
int3
mov
icebp
aad
fsubr
addr16
lret
xchg
repz
and
jge
shll
je
lds
xor
icebp
popa
mov
mov
sarl
out
or
sbb
xor
scas
xchg
outsb
jle
cld
imulb
sbb
jne
movsl
dec
shll
pop
test
and
jb
sbb
and
mov
jo
xchg
sbb
es
movsl
mov
xor
call
or
add
cltd
dec
scas
sbb
and
jecxz
xor
sub
cs
mov
and
in
pop
cmp
data16
mov
clc
adcl
cltd
ret
cmpl
pop
jmp
repnz
fstpt
ret
int
or
mov
scas
cltd
xorl
or
rcll
repz
pushf
mov
adc
jne
scas
aad
or
jno
rcr
repnz
sbb
and
mov
out
cmc
sbb
leave
aas
mov
inc
mov
loope
je
cltd
mov
mov
loopne
es
dec
cmp
leave
mov
icebp
test
jns
lock
insb
push
lcall
pop
pop
dec
mov
popf
cmp
dec
mov
mov
aas
jb
adc
icebp
mov
add
mov
sbb
test
dec
mul
adc
ret
loope
xchg
inc
xchg
not
leave
loope
es
dec
xchg
lret
dec
xorb
or
in
sti
rol
mov
xor
nop
je
xchg
mov
lods
fldl
mov
mov
sub
xchg
adc
lcall
mov
in
in
jae
bswap
and
fwait
add
xor
icebp
or
test
xchg
xchg
lds
mov
test
sbb
push
js
cmp
xor
dec
in
pop
ret
mov
insl
loope
rcrb
jbe
frstpm(287
add
dec
mov
ja
or
adc
sbb
sbb
ja
sbb
mov
filds
sub
xor
mov
cltd
mul
loope
push
or
mov
cli
seta
jmp
data16
aam
or
push
add
nop
decb
xchg
stos
stc
es
cmp
dec
lret
inc
cmp
btr
mov
js
mov
test
mov
xor
mov
iret
mov
xor
out
je
or
fidivrs
jecxz
test
sub
shrb
xchg
or
lea
ds
mov
add
iret
mov
hlt
jecxz
stos
movsl
jmp
scas
or
jnp
mov
pop
in
jbe
psrlq
mov
add
bnd
mov
mov
xchg
adc
and
xchg
xor
mov
fstl
aas
in
testl
mov
adc
call
lret
add
mov
inc
ljmp
lds
stos
dec
std
test
cltd
popf
jl
outsb
daa
mov
xor
sub
mov
in
outsb
int3
pop
cmp
cmp
cmp
out
js
xchg
fistps
outsb
lods
mov
ja
adc
inc
iret
jecxz
mov
cmp
pop
add
mov
jb
ds
and
mov
or
pop
mov
xchg
cltd
fwait
mov
xor
lea
push
outsb
push
scas
cmp
inc
or
pop
ds
popa
add
mov
fcmovnu
add
mov
cltd
dec
cmp
orl
fwait
loope
cmp
ja
add
cmpsb
fldl
rol
ja
mov
in
outsb
jae
sbb
xchg
push
xlat
add
dec
or
imul
shll
std
xor
call
and
mov
aas
push
jg
xchg
adc
shll
mov
push
stos
cmp
mov
mov
and
pop
leave
scas
push
movsb
out
stos
pop
js
mov
fwait
mov
push
cmc
mov
mov
popf
out
sub
xchg
pop
pop
sub
fwait
leave
nop
fsts
dec
rorb
arpl
dec
or
sbb
push
adc
jl
jb
ret
out
xlat
test
mov
mov
sub
sbb
sbb
mov
mov
ficoml
sti
movsl
out
mov
fnstsw
sbbb
or
mov
fldt
jge
add
repnz
cld
xchg
add
loop
mov
add
les
lahf
movsl
pop
jl
or
std
jecxz
xlat
mov
sub
lcall
xlat
aad
pushf
jae
mov
stos
mov
shll
fnstenv
mov
xor
push
inc
repz
ud1
ret
ja
fnsave
popf
aad
jp
add
mov
mov
out
les
ret
js
lret
add
xchg
fwait
mulb
repz
fnsave
jno
xor
repnz
loop
mov
mov
sahf
add
fwait
es
out
into
fistpl
roll
jp
jno
in
fisubrl
xchg
push
push
daa
inc
aad
push
mov
daa
rcrl
popf
jnp
mov
scas
aad
daa
pushf
jge
in
or
std
jb
xchg
mov
popf
movsl
sbb
mov
leave
xchg
fcoms
repz
and
aad
push
lds
adc
add
cwtl
rorb
push
leave
cmp
inc
aas
xchg
mov
frstor
stos
int
stos
cmp
in
add
add
mov
mov
int
jecxz
ss
outsb
mov
add
fwait
std
xchg
fstpt
mov
xchg
lds
inc
sahf
jns
xchg
sbb
mov
jno
add
sbb
sti
shll
cmp
testl
mov
cltd
fldt
xchg
stc
push
and
loope
or
hlt
sbb
int3
sbb
adc
mov
lods
cli
cmp
addr16
mov
movsl
sub
add
in
decl
lods
jb
loope
pop
add
out
in
fisubrs
xchg
fldcw
pushf
jmp
add
jne
xchg
loope
pop
adc
cmc
popa
iret
incl
pop
xchg
hlt
add
scas
pop
add
mov
in
sbb
lret
mov
div
xchg
leave
xor
jo
xchg
push
jbe
movsl
pop
sti
push
test
sub
mov
lret
aaa
rcl
mov
adc
stos
test
xlat
mov
aad
shll
sbb
mov
or
aad
mov
iret
jle
icebp
rcr
add
or
jns
mov
xchg
add
in
and
push
xchg
xchg
add
mov
mov
inc
cltd
cmc
roll
in
sub
scas
lods
imul
outsl
fwait
lret
movsl
repnz
dec
xchg
add
mov
jae
adc
lods
push
add
popf
pop
cmp
shll
add
or
jns
or
in
mov
lods
enter
add
mov
and
sbb
call
mov
xor
and
add
ss
sarb
leave
jl
and
mov
add
sbb
mov
push
xchg
sbb
fwait
xlat
movsb
aaa
cltd
loope
xor
lds
mov
push
cmc
or
xchg
popf
mov
or
outsl
in
aad
shrl
jl
gs
in
fwait
jnp
stc
pop
mov
and
popa
xor
cwtl
sub
dec
aad
pop
mov
ja
mov
adc
mov
inc
adc
sbb
mov
push
mul
jmp
repz
cmpsl
in
add
aaa
andl
lock
sub
pop
dec
loope
inc
repnz
sbb
xor
sbb
jb
lds
mov
adc
rcrl
repz
sti
je
mov
into
mov
dec
fstp
dec
out
add
adc
repz
mov
dec
decl
popl
hlt
mov
out
xor
ss
test
dec
inc
aad
daa
cltd
aas
push
mov
fsts
or
xchg
inc
adc
push
ss
jge
cltd
xor
into
ljmp
xchg
push
loopne
scas
fdivs
icebp
add
add
out
inc
jns
outsb
jmp
test
outsb
inc
mov
dec
jns
mov
adc
sbb
inc
aad
mov
scas
es
cltd
mov
leave
xchg
shll
repz
scas
out
sbb
mov
inc
jmp
out
xchg
movsl
pop
dec
mov
lret
push
data16
mov
xor
mov
sarl
push
sub
xchg
adc
dec
std
jecxz
dec
pop
les
int
movsl
ret
out
dec
loope
push
inc
sti
adc
mov
shll
mov
mov
aas
in
lret
inc
dec
mov
and
test
aaa
fnstsw
pop
inc
int
fldcw
inc
inc
jnp
vmread
clc
push
pop
mov
jmp
in
fldl
mov
add
mov
sub
jno
scas
iret
pop
repz
push
loope
ret
int
incb
repnz
enter
xchg
andl
orb
dec
loope
or
xor
or
scas
mov
push
sbb
out
pop
sti
or
neg
out
jl
jl
push
inc
jnp
or
sub
call
hlt
add
sbb
fldcw
in
leave
adc
jle
repz
stos
add
mov
adc
cmpsb
dec
dec
cltd
es
push
inc
xor
psllw
pushf
mov
or
fdivrp
mov
add
mov
pxor
xor
shl
or
in
fwait
out
mov
ret
aas
xlat
into
mov
sar
daa
mov
popf
sbb
fwait
sahf
push
pop
inc
mov
imull
sbb
dec
mov
push
cmp
imul
out
pop
adc
mov
jmp
jle
arpl
out
mov
pop
mov
mov
lds
dec
arpl
xchg
clc
fsub
adc
dec
or
and
out
fdivrs
fisubl
divb
xchg
add
into
rcrl
pop
int
pop
dec
notb
mov
xchg
or
cltd
mov
xchg
mov
cli
fld
mov
fnstsw
xchg
in
pushf
jg
pop
shll
cltd
popf
fnstenv
add
shll
xchg
jecxz
adc
cmpps
incl
xchg
lret
cmp
int
into
jno
pop
adc
cltd
and
movsl
lahf
lods
jecxz
and
adc
add
adc
xchg
testb
or
push
iret
add
outsl
sti
xchg
mov
aas
fwait
idiv
pop
stc
fstpl
sbb
mov
sbb
mov
sbb
in
push
jnp
mov
or
push
pop
push
insb
stos
fldenv
inc
lods
rolb
enter
sub
aad
adc
pop
xchg
xchg
push
daa
adc
xchg
in
xchg
xlat
repnz
xchg
popf
paddusw
sub
ret
xchg
adc
jbe
inc
loope
pop
mov
enter
fcos
xchg
outsb
lds
aaa
mov
or
stos
stos
jb
xchg
in
call
xchg
xor
cltd
sub
stos
ret
xlat
shrb
xchg
adc
xchg
and
pop
mov
scas
adc
cmpsb
int
mov
ja
lds
sbb
pop
mov
jecxz
jns
loope
daa
movups
mov
push
sbb
inc
xor
fsubl
mov
mov
flds
cmp
pop
add
lods
cs
cmp
mov
fxch
fbstp
adc
std
cmp
mov
popa
pop
ljmp
mov
daa
jle
jb
iret
cmc
inc
pop
mov
sbb
icebp
fdivrl
div
pop
xchg
mov
xlat
or
shrl
xor
mov
test
add
and
jbe
or
movsl
lds
pop
mov
in
inc
adcl
push
insb
fsubs
cmovl
cwtl
sbb
and
inc
cmc
bnd
add
dec
jno
ret
or
mov
leave
hlt
fmul
xor
insl
jg
or
and
xchg
rcll
jp
out
xchg
call
ret
mov
fistpl
cmp
cmp
aam
mov
hlt
loop
xchg
mov
out
xlat
adc
outsl
out
stos
add
pop
mov
fwait
or
and
lds
pop
xlat
xchg
in
popf
mov
adc
dec
jno
movsl
out
int
mov
insb
sub
jae
mov
jmp
cltd
or
jecxz
pmulhw
shll
and
idivl
stc
mov
and
add
xchg
std
mov
and
fdivr
jnp
icebp
push
cld
xor
push
mov
mov
xchg
mov
or
out
xchg
cmp
rolb
movsl
sub
jae
sbb
mov
insl
or
out
aad
adc
repz
add
xchg
rcrl
push
aam
fidivrl
jle
mov
call
scas
fwait
pop
or
test
inc
mov
ret
js
roll
in
sbb
and
cmpl
sub
insb
scas
jns
fimull
rol
out
lcall
xor
mov
fisttpll
jmp
push
andl
pop
jnp
mov
push
add
lock
and
jbe,pn
not
int
lds
xor
mov
sbb
xchg
xchg
adc
imul
dec
test
popf
insl
fiaddl
and
jg
or
std
int
rol
mov
adc
cmpsb
lds
or
adc
push
or
adc
mov
mov
cltd
mov
ja
out
ljmp
pop
or
mov
sub
aad
fwait
mov
scas
add
or
ret
icebp
stc
loop
inc
add
cs
push
xchg
or
rorl
xlat
mov
mov
adc
sti
jl
mov
mov
shl
xlat
pop
xchg
std
sbb
js
mov
and
test
je
add
adc
test
test
cmp
push
dec
jecxz
leave
fisttpl
adc
xor
adc
mov
shll
mov
mov
aad
xchg
pop
xchg
or
xchg
fwait
aas
jnp
sbb
inc
push
mov
adc
fwait
add
test
push
mov
aas
movsl
lret
add
mov
fstl
add
cmpb
dec
scas
jp
jmp
jge
mov
lods
cmc
jg
adc
xchg
pop
jbe
rol
and
dec
mov
adc
lret
xlat
mov
fwait
xchg
icebp
or
jo
push
add
adc
mov
mov
mull
add
std
out
outsb
shl
dec
sub
lcall
adc
std
adc
cmpsb
or
divl
mov
pushf
hlt
mov
gs
mov
push
scas
and
or
push
ffree
in
orl
push
std
notb
popf
div
inc
and
daa
mov
rol
cmpsl
ja
mov
insl
lods
dec
popf
mov
mov
jno
jecxz
scas
jb
xchg
xchg
mov
fstps
data16
add
and
xchg
or
jne
ret
fwait
mov
mov
icebp
ss
stos
mov
xor
int
movl
pop
vaddss
shll
in
mov
mov
add
fadd
call
add
inc
xchg
mov
dec
dec
rcrl
sub
jg
mov
in
inc
push
cmc
iret
int
lahf
fsts
fwait
and
xor
xchg
or
lea
dec
movsl
sbb
pop
decl
cmp
fmuls
fstp
jae
jg
or
and
jecxz
sub
dec
mov
and
mov
push
cld
or
xlat
shll
push
mov
and
mov
mov
leave
add
mov
scas
inc
jno
rcll
lds
or
xor
sti
fistl
mov
or
aad
int
push
scas
inc
xchg
push
pop
mov
add
pop
leave
es
movsl
jg
shll
cld
xchg
enter
or
imul
repnz
xchg
data16
mov
pop
jbe
fldenv
iret
adc
in
hlt
addr16
dec
jnp
cltd
add
mov
and
mov
sub
cmp
jge
xchg
xchg
xor
mov
mov
jp
or
cmpsl
dec
sysret
out
iret
sub
mov
out
fcmovne
xlat
ror
cmp
cmpb
enter
add
daa
and
stc
xchg
iret
pop
lods
test
cmpl
ficoms
jmp
fcomi
jecxz
mov
mov
push
and
into
cmp
roll
sti
jno
jg
fwait
jae
iret
lcall
mov
roll
sub
or
lahf
nop
daa
repnz
inc
cmc
dec
pop
fwait
shll
push
and
mov
adc
or
add
cltd
dec
add
mov
sti
adc
xchg
cwtl
mov
js
scas
mov
popf
and
std
nop
adc
mov
popf
fsts
or
mov
mov
jecxz
ss
scas
push
jge
add
repnz
call
sub
cmp
or
mov
dec
jle
or
jnp
ret
shl
je
leave
aad
mov
add
pop
cmp
inc
hlt
jmp
add
fyl2x
sub
xchg
dec
sub
xor
daa
mov
push
or
xchg
mov
scas
mov
add
and
cli
loope
sbb
daa
fldt
jne
adc
xchg
inc
and
ds
in
jg
adc
orb
sub
fucomip
std
in
outsb
mov
decl
mov
icebp
lock
loope
dec
mov
pop
mov
movsl
adc
mov
cltd
aad
scas
popf
into
xchg
lcall
aad
outsb
icebp
sbbl
xchg
dec
or
push
iret
pushf
loop,pt
add
mov
xor
out
cmp
or
repnz
inc
xlat
mov
jge
add
je
stos
js
add
in
cmpsb
mov
sti
add
mov
js
adc
xchg
hlt
push
scas
xchg
push
out
adc
notl
in
jle
xor
mov
fldenv
fisttpll
xchg
nop
cmp
mov
mov
adc
popl
adc
jg
ret
jnp
add
add
test
jnp
xchg
jb
adc
jb
cmpb
scas
outsl
loopne
adc
es
sti
mov
adc
add
into
je
fstl
jne
stc
adc
sti
roll
xchg
jg
jno
mov
repnz
pushf
mov
fnstsw
data16
stos
sub
cwtl
cltd
jl
and
jmp
jl
mov
push
repnz
jle
and
adc
pop
iret
fdivs
xchg
popf
stos
shll
pop
aaa
push
lret
ss
aad
into
lds
dec
add
mov
push
sub
je
add
ret
xchg
xchg
repnz
roll
cmpl
js
and
int
sahf
andb
notb
test
or
xchg
xor
testb
and
rorl
push
popf
pop
jns
xchg
pop
pop
cld
in
add
xchg
bnd
cld
jno
outsb
aas
jl
mov
pop
lods
mov
xchg
sbb
dec
mov
stc
dec
or
pop
out
fdivrl
mov
mov
stc
mov
icebp
mov
repz
bnd
movsl
and
std
stc
push
movswl
jmp
mov
lret
icebp
scas
adc
ret
xor
jge
mov
pop
xor
mov
add
adc
cmp
jl
dec
xchg
mov
out
mov
mov
shll
pop
mov
jb
cmp
lds
jns
jb
sti
pop
nop
sub
xlat
in
adc
add
js
add
insl
adc
dec
adc
xchg
or
std
lods
inc
outsb
mov
dec
mov
shll
stos
nop
jecxz
addr16
imul
lods
lret
mov
daa
mov
push
mov
fidivrs
outsb
jmp
ret
outsb
pop
mov
push
mov
popf
mov
sbb
sbb
outsb
lods
sbbb
out
mov
and
mov
push
mov
lret
mov
push
mov
push
mov
fidivrs
outsb
xor
and
mov
rorb
mov
push
mov
push
leave
adcb
mov
mov
xchg
sbb
fstpl
inc
loope
push
xlat
xchg
popf
add
dec
arpl
or
mov
inc
adc
or
cmpsb
in
add
xchg
mov
icebp
int3
outsb
daa
mov
lock
in
jne
mov
negl
xchg
rorl
and
mov
mov
xchg
xchg
mov
hlt
aam
pmaxsw
out
sti
shl
jge
lock
and
lea
sti
scas
gs
lds
adc
or
mov
sbb
insb
cmp
mov
inc
mov
pop
rcll
insb
xchg
pop
cmpl
xor
je
lds
pop
and
pop
jae
add
xchg
aas
lods
cltd
and
sarb
mov
sbb
jmp
test
and
std
out
adc
and
mov
out
dec
pop
mov
jno
ret
rcll
outsl
jbe
adc
dec
cmp
stc
jno
imul
aam
shl
jg
fwait
mov
ljmp
adcl
stc
aad
fwait
pop
leave
and
rcl
outsl
mov
icebp
cmp
cltd
std
cmp
movsb
fwait
test
std
imul
inc
mov
shrl
sarb
aam
pop
repz
mov
push
ret
mov
inc
pop
sub
or
adc
aas
loope
sbb
sbb
cmp
xor
fadd
add
ss
jl
push
mov
push
pop
push
fwait
xor
sbb
sbb
cmpsl
dec
ret
outsl
mov
mov
mov
inc
inc
rcrb
ljmp
imul
mov
jle
jmp
pop
outsb
test
popf
push
ds
rcr
pusha
xchg
test
jnp
xchg
inc
cmp
pop
push
xor
inc
repz
adc
icebp
outsb
mov
sti
subl
ret
outsb
sub
das
mov
pmaxub
outsb
or
ss
push
inc
ret
mov
add
mov
mov
cld
aad
outsb
mov
cmp
mov
push
push
mov
bound
outsb
fwait
xchg
pop
cmp
dec
jmp
in
sbb
mov
inc
mov
ds
clc
jmp
pop
mov
or
mov
dec
in
outsb
std
sub
icebp
adc
sbb
add
xchg
pushf
or
mov
mov
sbb
mov
lcall
pop
fimuls
sbb
ja
and
cltd
and
popf
mov
xchg
inc
xchg
in
lds
movsl
or
xchg
mov
adc
cmc
jl
mov
mov
mov
and
mov
popf
mulb
iret
out
or
stos
adc
leave
and
xchg
push
jecxz
fwait
arpl
cli
icebp
cmp
ret
fsubl
jns
dec
xchg
stos
pusha
xchg
fwait
insb
sbb
dec
xchg
lds
shr
mov
fwait
bound
inc
sbbb
scas
cwtl
aam
xor
and
sysexit
xor
and
sub
std
add
aad
sub
dec
xor
or
push
sub
sub
movsl
iret
mov
cltd
xor
push
inc
ret
cmpsb
add
cmc
dec
mov
push
ja
popf
lret
xor
inc
lds
mov
adc
push
divb
adc
rcll
sbb
icebp
sbb
dec
xor
xchg
or
shrb
cmpsl
jmp
sub
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
popf
outsb
adcl
adc
icebp
adc
cvtdq2ps
dec
sbb
aas
xor
jecxz
addl
sbb
fstpl
adc
mov
aad
sbb
pop
push
pop
jmp
sti
in
adc
lahf
pop
inc
xor
mov
aam
mov
push
pop
pop
aad
and
add
icebp
adc
xchg
sbb
sbb
inc
xor
xchg
adc
adc
inc
xchg
jl
sbb
sbb
jmp
adc
inc
xor
mov
jmp
jmp
mov
pop
xor
mov
jmp
jmp
mov
pop
xor
mov
jmp
push
push
sbb
push
xor
aam
inc
mov
adc
xchg
iret
sbb
mov
jl
sbb
sbb
adc
adc
in
les
adc
in
call
dec
icebp
xor
adc
popf
pop
std
fstps
fstps
jmp
std
inc
jno
stc
in
jno
add
cmp
aam
popa
push
and
mov
push
inc
cltd
jl
and
popf
les
sbb
int
pop
rcr
vdivpd
pop
mov
pop
mov
pop
add
inc
cmp
pop
iret
adc
shrl
addb
adc
add
add
aas
add
mov
mov
jge
in
inc
mov
cmp
mov
and
add
cmpsb
inc
adc
adc
mov
out
or
mov
repnz
mov
push
or
mov
xor
enter
adc
adc
dec
push
dec
pop
jl
sbb
adc
adc
adc
sub
les
sarb
or
iret
ret
xchg
int
jnp
sub
add
mov
dec
push
in
adc
mov
jge
out
xchg
cs
and
icebp
and
insl
fnstcw
std
and
pop
adc
cltd
jl
and
mov
std
and
jecxz
shl
sbbb
fcoms
mov
pop
sub
jge
mov
xchg
stos
push
adc
adc
xchg
adc
adc
adc
inc
das
adc
jl
adc
add
sub
inc
inc
xchg
jmp
ret
ret
mov
sub
jle
adc
jle
jb,pn
and
leave
aam
call
push
loop
add
rcll
sbb
sbb
push
push
sbb
sbb
in
add
pop
sbb
sub
dec
sbb
int
inc
dec
aad
push
sti
mov
leave
lods
int3
loop
and
orb
push
fisubs
movsb
aas
aas
into
add
pop
mov
adc
dec
pop
ss
push
push
sbb
sbb
sbb
xchg
sbb
adc
and
adc
mov
ret
mov
xchg
xor
pop
adcb
imul
inc
xchg
inc
fwait
out
sbb
inc
adc
add
push
dec
adc
jmp
adc
xchg
adc
sbb
adc
push
xchg
std
adc
addl
cmp
outsb
mov
pop
xchg
cld
inc
xor
loop
int
xor
mov
pop
pop
addb
jbe
mov
adc
loop
sub
cmp
add
out
pop
cmpb
out
push
vcvtps2dq
movsb
mov
pushf
jnp
jo
jmp
mov
xchg
mov
push
int
mov
hlt
dec
das
mov
jecxz
gs
pusha
cmp
pop
movl
and
mov
jb
insl
jecxz
push
adc
and
jge
adc
jmp
pop
xchg
and
je
cltd
cmpsl
adc
lret
std
out
mov
out
cmpsl
jle
xlat
sub
pop
push
std
sbb
jecxz
je
and
cmp
orb
aad
mov
xchg
or
in
test
movsl
movsb
pop
pop
xchg
push
sbb
aaa
jle
xchg
adc
loope
adc
inc
cmovbe
stc
sub
jb
push
cmp
push
dec
sbb
and
and
xor
xor
pop
and
iret
cld
fwait
jne
pop
xchg
insl
jl
xor
sbb
popa
push
inc
leave
js
mov
sarl
and
sti
and
xor
mov
or
jbe
add
push
cmp
rcrl
or
jl
imul
pop
int
xchg
cmp
sub
mov
push
jge
leave
ss
leave
hlt
sub
add
inc
sbb
aad
add
add
fisttps
movsl
cwtl
cmc
or
jp
xchg
xlat
sbb
mov
pop
sbb
adc
shl
lret
or
cld
jmp
std
fmul
out
adc
pop
inc
cmp
cltd
pop
push
add
sbb
xor
sbb
hlt
sub
fcmovnu
adc
pusha
cmpsb
push
in
shl
dec
mov
mov
and
fisttps
pop
add
xchg
push
and
sbb
mov
jb
cmc
pop
leave
int
bound
jno
stc
mov
xchg
jl
leave
mov
out
xor
or
xor
fcompl
mov
or
cmp
sub
or
push
cmp
into
rol
and
and
lods
and
mov
jbe
pop
inc
in
cmp
or
stos
add
and
inc
push
stos
cmp
test
mov
push
sbb
sti
push
mov
mov
jbe
add
and
and
popa
rol
or
pop
push
jnp
fnsave
shl
std
adc
dec
xor
push
sbb
adcl
mov
lods
mov
fistpl
ret
jae
rorl
cmp
test
loopne
out
in
out
adc
ljmp
pop
imul
sti
popf
lds
xchg
mov
fcompl
xor
push
dec
xchg
scas
roll
mov
inc
sbb
inc
add
jmpw
inc
sub
out
aas
adc
movsl
add
jecxz
add
xchg
arpl
push
jns
or
xchg
or
and
int
out
or
in
dec
sbb
sbb
mov
push
sbb
mov
xor
lds
testb
ror
xor
pop
insl
cmc
dec
mov
pop
pop
test
rcrb
ss
movsl
aas
stos
ret
xchg
lret
jno
mov
push
adc
in
sbb
cmp
mov
xorl
mov
or
jae
inc
test
cmp
ffree
inc
or
jne
cmpsl
fcoml
mov
push
and
sbb
xchg
mov
jecxz
push
in
mov
pop
mov
inc
insl
pusha
out
dec
stc
xchg
testb
mov
push
inc
sub
sbb
jge
aad
sbb
adcb
popa
aad
mov
and
and
xchg
adc
mov
xor
mov
in
jle
pop
and
and
jno
shl
mov
push
jecxz
aad
mov
mov
cvtps2pd
sub
mov
je
add
jnp
in
cmp
data16
sbb
sbb
cmp
clc
or
cmp
iret
cmovne
adc
adc
lods
and
in
rcl
popf
mov
cwtl
mov
pop
adc
sbb
adc
jl
ja
iret
mov
out
lds
cld
add
and
pop
or
mov
jno
orb
mov
ss
dec
data16
stc
push
mov
jne
frstor
mov
je
loop
popa
inc
leave
or
ljmp
xor
icebp
dec
mov
lret
sbb
in
xchg
ds
loope
insl
jno
or
out
and
and
cmp
xor
icebp
rcrl
jp
add
sub
pop
inc
xchg
mov
imul
push
cmc
lahf
addr16
pop
cmp
and
mov
and
sbb
jle
jb
inc
mov
or
push
ret
repnz
inc
lret
adc
dec
jbe
xchg
and
xchg
xchg
in
dec
adc
stc
and
xchg
fistps
repz
fstl
jno
adc
iret
sbb
pushf
addr16
fsubs
inc
push
cmp
mov
orb
cmpsb
outsl
into
jnp
pop
xor
in
rcr
mov
xor
xchg
inc
cltd
loop
sbb
fwait
mov
inc
add
pop
mov
adc
je
mov
jmp
test
sub
push
gs
mov
in
out
jmp
sbb
push
adc
ds
fstp
jb
mov
jno
or
add
nop
int3
into
fidivrl
insl
ud2
imul
int3
test
push
bound
gs
and
and
or
and
in
xchg
lret
pop
jmp
and
xchg
push
cld
leave
adc
out
dec
sub
dec
inc
cmp
add
frstor
mov
mov
lods
test
xchg
and
sbb
jp
lret
sbb
mov
dec
sbb
rcl
cmpsb
inc
test
sub
std
sbb
fwait
xor
ja
pop
lret
into
mov
jg
or
clc
lret
ljmp
dec
pop
sub
inc
cltd
inc
push
lret
and
jg
sar
sbb
sbb
pop
and
fldl
dec
mov
int3
test
cltd
mov
test
pop
andb
out
test
addl
cmp
jno
jmp
ret
push
and
les
cmpsl
pop
fmuls
sub
mov
adcl
sub
sub
add
lret
pop
xchg
in
andb
cmp
and
movsl
dec
push
push
rcrl
insl
shl
adc
mul
pop
sbb
jmp
adc
jb
pop
xchg
sub
jl
cmp
sbb
xchg
sbb
and
sbb
xchg
push
sbb
mov
push
lock
sub
jg
subb
sbb
sti
adc
leave
imulb
cld
mov
sbb
cmpsl
lret
jecxz
mov
or
xor
or
jo
mov
and
ret
stc
adc
xor
jle
inc
push
outsb
inc
aaa
push
jecxz
push
loop
rcll
outsl
pop
movsl
xlat
cmc
add
fists
xchg
arpl
movsl
and
or
movsl
es
and
dec
jmp
mov
and
jae
add
xchg
mov
and
popa
shll
aad
fists
addr16
and
orb
jecxz
pop
dec
jns
mov
mov
mov
scas
fildll
rol
movsl
and
testb
mov
adc
sbb
add
sbb
movsl
clc
push
loop
into
push
push
jmp
movsl
sti
xor
cmp
push
inc
lea
adc
mov
xor
pop
in
cmp
push
mulb
cmc
out
shll
cs
in
or
les
dec
mov
xor
ja
pop
popa
pop
or
cmp
and
inc
popf
mov
out
xchg
les
loopne
cld
sbb
sbb
adc
sbb
and
mov
jne
and
or
push
adcb
movsl
xacquire
out
loop
into
sbb
sbb
decl
mov
cs
xchg
adc
adc
pop
ss
scas
out
mov
jg
mov
push
and
cmp
pop
sub
sub
adc
push
fldcw
dec
subl
push
add
movsl
xchg
test
cmc
jbe
pop
in
pop
loope
mov
mov
add
pop
add
mov
lret
cmpsb
adc
add
adc
div
sub
mov
sbb
sbb
mov
sub
fistl
cmp
lret
push
testl
pop
sub
lahf
enter
xor
dec
or
and
sub
xchg
cmpsl
add
movsl
sbb
jecxz
or
jae
pop
iret
int3
shlb
loopne
or
or
xchg
sarl
int
lret
call
jl
add
mov
sbb
push
sbb
mov
mov
mov
nop
in
andl
mov
sub
or
loope
dec
setns
add
cmc
rorl
rcll
ror
aas
sahf
or
jno
nop
mov
subl
sub
in
mov
jg
mov
and
sahf
test
push
dec
repz
int3
mov
dec
outsb
xchg
xlat
and
loope
and
inc
sub
mov
loope
sub
in
test
sbb
adc
push
sbb
mov
sar
pop
adc
pop
push
mov
aad
mov
fistpll
pop
dec
inc
fistps
in
xor
int
sbb
mov
sub
leave
inc
lods
and
push
filds
loopne
add
and
in
insl
in
sub
imul
out
dec
adc
dec
movsl
sti
adc
mov
push
inc
mov
push
sahf
inc
sub
xor
cs
out
and
xor
into
jmp
push
jg
sarl
enter
cmp
jecxz
popf
fcmovu
stos
aas
jb
test
outsb
cmp
sbb
adc
cmp
mov
mov
add
int3
lods
mov
stos
mov
or
fisubl
out
push
sbb
cmp
lcall
add
sbb
pop
mov
sub
jg
xchg
xor
push
adc
sbb
pop
and
sbb
mov
sahf
mov
subl
clc
sahf
xchg
or
mov
test
aad
xorb
es
sbb
sbb
lret
mov
or
push
sub
and
cmp
sub
jge
sbb
sbb
inc
popf
or
push
cmp
test
sbb
xor
inc
dec
adc
fs
mov
pushf
mov
mov
ss
pop
out
pop
mov
mov
aaa
maskmovq
idivl
mov
fld
cli
dec
ss
loope
mov
adc
cmc
lods
bnd
cltd
in
pop
inc
into
dec
sub
stos
sbb
movsl
pop
mov
pop
rcl
push
aas
mov
jae
pop
sbb
lahf
in
insb
jb
jnp
stos
lods
inc
mov
sub
shll
iret
mov
lahf
mov
adc
pop
jno,pt
insb
xchg
add
sub
loope
icebp
pusha
cmp
pop
adc
fdivrp
pop
into
mov
in
pop
shrl
lds
lods
push
sbb
fistpll
xor
sbbb
faddp
jnp
mov
in
ret
xchg
sbb
mov
add
cld
aad
add
sbb
iret
xor
mov
movsl
add
int
mov
cmp
sbbl
pop
scas
and
mov
push
xchg
sbb
pop
xchg
xchg
pop
int
sbb
inc
in
inc
rcrl
iret
aad
xor
pusha
xchg
fistps
mov
adc
mov
ds
sub
cmpl
jecxz
push
jae
push
imul
out
addb
ret
or
inc
inc
dec
xor
pop
mov
mov
loope
mov
fcmovnb
jae
mov
roll
ret
aaa
test
fldl
lods
adc
add
pop
leave
pop
jecxz
and
pop
dec
scas
jno
jle
mov
sbb
int3
lret
test
fnstsw
pop
push
jbe
mov
jmp
pop
cmp
iret
jne
jmp
push
lea
je
jae
bt
stc
push
clc
cmp
call
jmp
movb
lahf
mov
mov
mov
pushf
movsbw
lea
push
pushl
push
movl
mov
movl
jmp
fistps
rcrl
in
movsl
or
movsl
stc
fstpl
lret
leave
bound
fs
mov
out
jl
arpl
dec
mov
ja
adc
out
out
inc
ror
jns
lods
cwtl
mov
and
fldcw
in
mov
adc
rolb
clc
stc
shr
push
jmp
push
lea
je
pushf
movw
pushl
cmp
jmp
cmp
clc
mov
stc
sub
jmp
cmc
add
push
push
pushf
lea
jmp
bt
cmp
pushf
lea
je
cmp
bt
cmp
call
es
jg
lcall
mov
mov
and
mov
cmp
dec
fimuls
mov
mov
dec
mov
mov
in
repz
fisubrs
xchg
adc
and
pop
into
cmpb
pop
int
enter
inc
sbb
mov
idivb
push
sahf
mov
cmpsb
stc
cld
jge
dec
mov
jae
push
daa
mov
and
push
sub
ds
daa
pop
or
add
mov
cmpsl
cld
popa
dec
cmpsb
or
and
push
push
in
rolb
mov
sbbb
pop
ja
cmp
adc
mov
cmc
mov
pusha
test
pop
jb
mov
in
stc
jecxz
dec
aam
push
push
mov
iret
negb
push
mov
push
pop
pop
imul
lret
call
sbb
cmpsl
jl
push
lahf
lds
adc
jp
mov
or
add
push
repz
repz
adc
imul
mov
lods
test
fs
iret
addl
ljmp
xor
sbb
mov
imul
push
aad
popa
mov
mov
pusha
pop
scas
mov
stos
inc
and
les
jge
inc
push
adc
lcall
cwtl
int3
ljmp
mov
lretw
cmp
dec
imul
ljmp
cmp
mov
push
mov
loope
scas
push
insb
mov
jge
xor
in
xor
scas
inc
jae
jb
repz
mov
sub
sub
push
xor
mov
sahf
jno
test
sti
ret
pop
add
xor
mov
aam
dec
inc
mov
dec
pop
addb
vpaddusw
jo
xchg
std
push
cs
insl
add
in
call
int
test
xchg
xlat
lods
subb
mov
sti
jb
push
and
mov
popa
pop
rcr
dec
cmp
jo
imul
dec
xor
or
push
pushf
cmp
dec
push
sahf
lahf
test
xchg
dec
xchg
cmp
movq
xchg
lea
loope
imul
push
and
jge
insb
fsubl
pusha
cmc
sub
mov
cs
scas
xor
sbb
push
in
test
popf
mov
xor
lea
je
call
gs
sbb
lcall
inc
mov
nop
or
fwait
adc
jne
cmp
mov
jg
jbe
cmp
cmp
cld
xor
sub
mov
dec
ljmp
fs
sbb
sbb
inc
lds
pop
mov
jl
push
xchg
loopne
in
fimuls
dec
divb
sbb
dec
les
fs
cwtl
or
addr16
lcall
xor
jns
mov
cltd
xlat
test
int
inc
mov
push
lahf
lahf
mov
mov
xchg
mov
das
xchg
adc
adcb
mov
aas
xor
push
inc
add
aad
inc
ret
lea
jae
push
lea
jmp
lea
call
cmc
cmp
sub
call
ja
push
lcall
sub
pop
movb
repnz
test
into
mov
fimuls
popf
sbb
add
adc
fs
loopne
scas
sti
icebp
pop
in
mov
add
out
sahf
xor
ja
mov
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
dec
insl
mov
or
add
call
push
lea
jae
push
cmp
call
pushf
push
mov
movl
movb
jmp
movzbw
push
mov
push
pushl
ret
call
lea
jbe
call
jmp
clc
cmp
movl
lea
jae
pushf
jmp
jp
popa
xlat
lcall
dec
movl
mov
jne
or
daa
sbb
jle
jno
repz
mov
mov
mov
clc
jb
mov
pop
les
lods
xor
push
jl
sbb
push
jno
pop
shll
push
subb
sbb
mov
jl
movsb
shll
or
insb
into
arpl
je
scas
popa
cld
or
in
les
pop
inc
jmp
and
cmpl
add
push
mov
dec
call
test
pushf
pushf
movb
movw
lea
je
call
stc
sub
sub
mov
test
push
cmpb
pushf
movb
movb
lea
jne
rol
shr
call
sets
call
lea
fcomps
mov
mov
popf
loop
cltd
pop
xchg
das
inc
cmpsb
and
xor
xchg
mov
adc
ja
mov
cmovs
fildll
pop
inc
adc
insb
push
call
jbe
btc
adc
sub
pushf
adc
shl
rol
mov
bswap
mov
xor
pushf
sub
dec
add
cmc
rol
add
shr
lea
lea
btc
mov
btr
sar
pop
add
call
ficoms
out
mov
xchg
push
into
daa
mov
stos
adc
adc
inc
test
insb
cmp
pop
in
int3
cmp
mov
ficoml
or
lret
xchg
in
lret
mov
sub
nop
adc
and
push
fwait
arpl
push
adcl
push
pop
cmpsl
andl
mov
orl
push
ja
push
mov
mov
push
xchg
push
xorl
push
xorl
push
fwait
mov
data16
roll
xor
xchg
or
pop
and
mov
mov
xchg
sbb
mov
or
mov
sbb
xchg
xor
je
or
pop
cmp
scas
xor
mov
dec
cmp
jg
sbbl
call
cmc
rol
pushf
cmp
shr
jmp
lea
jae
movsbl
mov
shl
mov
stc
mov
stc
call
inc
call
mov
jmp
add
shld
add
lea
inc
sub
rcl
call
cwtl
pop
lea
lea
lahf
movb
mov
mov
call
mov
lea
ja
pusha
pushf
movw
pushf
lea
jb
pusha
cmpb
pusha
jmp
jmp
jmp
lea
jne
pusha
dec
bt
cmc
rol
clc
cmp
push
stc
add
push
pushf
cmp
lea
lea
movzbw
mov
mov
push
pushl
pushf
lea
ja
call
pushl
push
pusha
lea
je
push
cmc
test
stc
sub
test
cmp
pushf
call
lea
ja
inc
inc
push
inc
inc
add
adc
xchg
shl
dec
pushf
mov
pusha
inc
mov
not
mov
lea
stc
push
xchg
dec
lea
shl
mov
cmc
cmc
bt
sub
push
rep
pop
pop
push
push
mov
lea
jmp
pusha
jmp
lea
lahf
pusha
mov
push
lea
ja
pusha
push
lea
jb
test
pusha
cmpb
jmp
sbb
lcall
push
int
test
sub
insb
bound
lds
int3
adc
pop
mov
pop
mov
push
ljmp
add
divb
fs
add
dec
outsl
arpl
inc
jb
gs
push
mov
lcall
ret
xlat
dec
mov
jbe
fdivs
xchg
push
daa
imul
test
sbb
lret
jmp
into
or
test
cmp
clc
lret
mov
repnz
sbb
shll
jg
xorl
shl
push
movsbw
pusha
rol
mov
ror
mov
sub
mov
pushf
not
bt
sub
mov
pushl
adc
xor
inc
mov
cmc
test
pushl
pusha
or
call
sub
fstpl
cmp
lret
sub
rcll
jle
adc
push
or
mov
lahf
stc
jl
jecxz
hlt
addb
xchg
fstp
lahf
arpl
movsl
adc
or
and
mov
scas
xchg
lahf
xor
aad
jo
ljmp
jle
cmp
test
imul
jo
cmp
add
xchg
loopne
aad
enter
aaa
mov
bt
cmp
mov
call
push
push
movl
pushf
push
lea
jmp
jne
inc
fstpl
push
shll
call
aas
or
mov
popf
jl
sub
ret
pop
imul
xor
iret
outsw
push
mov
inc
mov
scas
mov
sub
jne
jnp
xchg
mov
sbb
mov
popa
pop
mov
add
dec
sub
adc
jo
mov
pushf
sub
pop
mov
jmp
cmpsb
mov
push
inc
sahf
or
pop
dec
out
push
xor
mov
mov
cmp
xchg
ljmp
inc
popf
idivb
ficoms
inc
mov
ffree
imul
loop
sahf
jge
push
adc
pop
aas
jecxz
popf
lcall
mov
push
mov
movsb
cli
lock
pushf
sahf
push
mov
add
lahf
sbb
in
jmp
sub
sub
shll
cmpsb
jmp
pop
or
mov
outsl
sbb
jae
iret
pop
iret
out
inc
aaa
arpl
inc
sub
cmpsl
jl
inc
jmp
dec
sbb
jne
rorl
or
add
leave
call
lea
jb
bt
clc
pushf
call
and
cmpsb
cli
jg
dec
mov
and
mov
in
out
jne
std
into
outsl
pop
inc
gs
mov
pop
pusha
mov
int
stos
push
jns
mov
in
jae
test
iret
imull
xor
mov
jecxz
insl
arpl
mul
lret
mov
outsl
insb
mov
int3
int
lods
xor
sbb
bound
fistps
shll
mov
jo
dec
pushf
adc
xchg
pop
xor
push
sarl
aam
cmpsb
mov
mov
out
and
mov
jne
xchg
push
sub
cmp
xchg
gs
xor
add
pop
dec
das
sbb
cmp
gs
lods
btc
mov
pusha
btc
btc
sub
test
clc
or
lea
jmp
lea
push
call
call
pusha
mov
movl
jmp
sbb
loopne
cmpsb
cwtl
xchg
add
sub
and
into
testb
icebp
out
test
sarb
sbb
and
incl
fcompl
imul
cld
lds
lahf
iret
fidivs
jecxz
sbb
push
inc
sub
arpl
out
push
mov
sbb
and
outsl
mov
outsl
dec
rorb
and
movsb
inc
mov
divb
mov
pop
cmpsl
cmpsb
sub
std
aad
lahf
mov
iret
jns
sbb
stos
add
add
call
bsr
add
push
sub
lea
call
insb
sub
lcall
or
inc
inc
fists
lods
in
aad
adc
and
push
popf
pop
in
push
jns
cmp
sub
movsl
fidivrl
repz
popf
inc
dec
cwtl
das
inc
popa
jl
ss
data16
jb
adc
mov
or
sbb
mov
and
insl
repz
jge
pop
arpl
es
aad
scas
mov
sahf
sub
je
repnz
movl
call
idivl
jb
fwait
std
sub
dec
xchg
fiaddl
mov
nop
inc
push
pushf
fiaddl
xor
pop
or
in
sub
pop
rcrb
cli
sub
xor
add
scas
push
or
lret
xor
dec
xchg
fwait
fiaddl
xor
fwait
fiaddl
pop
or
sti
pop
xchg
fiaddl
jp
add
fnstenv
pop
pushf
fiaddl
out
aas
lock
or
mov
fiaddl
jp
push
mov
xlat
or
shl
jno
addr16
fiaddl
notb
push
cmp
add
mov
mov
ret
xchg
pushf
fiaddl
add
icebp
inc
insl
push
or
fiaddl
orb
jbe
cmpsl
mov
fiaddl
mov
mov
fiaddl
sub
das
mov
shll
pop
pop
sub
dec
movsb
jnp
pushf
fiaddl
xchg
ja
mov
out
adc
stos
xchg
cli
fiaddl
cmp
bound
lods
pop
jecxz
pushf
fiaddl
mov
inc
cld
fcoms
add
inc
aam
add
outsl
insl
pushf
fiaddl
pop
inc
and
jns
das
pusha
fwait
fiaddl
ficoml
cmpsl
sti
fiaddl
push
mov
pop
pushf
fiaddl
and
bound
inc
ljmp
cs
test
add
pop
daa
aaa
jnp
out
dec
xchg
dec
add
outsl
repnz
fiaddl
mov
dec
scas
ss
fiaddl
push
xor
and
aaa
cld
fiaddl
sbb
popf
scas
xlat
mov
fiaddl
cmp
mov
fiaddl
divb
jns
hlt
leave
xchg
fldl
scas
add
inc
add
out
stc
cmp
push
xor
test
fiaddl
push
inc
int
or
fiaddl
mov
jns,pt
and
fiaddl
stos
xor
add
pop
aam
xchg
pushf
jmp
push
jmp
mov
call
clc
movzwl
shl
mov
pushl
add
jmp
call
mov
cmpsb
in
cmp
pop
dec
xor
jo
push
mov
mov
adc
xchg
jmp
pusha
das
xchg
jmp
pop
es
test
jg
inc
outsl
nop
aad
mov
pop
fisubs
add
rcll
mov
lock
jbe
jecxz
push
popa
loopne
aad
js
and
js
push
test
fdivl
fcoml
das
mov
mov
xor
inc
std
mov
ret
pusha
sub
jbe
xchg
hlt
sbb
in
addr16
dec
orb
pop
ret
sbb
or
decl
adc
mov
jmp
inc
xor
mov
dec
dec
fildl
adc
mov
xchg
mov
or
mov
fwait
sbb
aam
and
popf
xor
mov
fldln2
cmp
xor
sbb
cmpsl
faddp
jmp
cmpl
mov
adc
rclb
and
add
mov
jno
sub
loope
sahf
mov
fildll
popf
outsb
outsb
movsl
adc
lcall
jno
inc
stos
add
and
inc
jnp
or
and
out
lahf
dec
and
fsubs
mov
pop
pop
cmpsb
sub
insl
iret
lret
jle
fcmovb
mov
out
js
mul
mov
xchg
push
add
fwait
cpuid
nop
addl
ljmp
ret
sub
xchg
lock
mov
push
inc
push
lcall
movsb
fstpl
xor
sbb
push
sub
jp
shl
xchg
pop
movsb
push
sbb
jmp
gs
xor
daa
cmp
imul
jmp
pop
lea
jmp
xchg
push
call
pusha
lea
jne
pushf
stos
movw
pusha
push
lea
jmp
mov
in
lcall
in
mov
push
lret
dec
mov
lcall
inc
mov
inc
pop
mov
ljmp
testl
ds
xchg
pop
xchg
daa
xor
roll
lcall
in
mov
popa
pop
pop
hlt
cs
jp
push
out
or
rorl
dec
and
popf
aad
xchg
sbbl
loope
nop
jle
add
pop
add
push
lea
ja
call
lea
je
pushf
push
adc
pushf
pushl
pushf
mov
lea
jmp
pusha
call
lea
jae
pushf
pushf
lea
jmp
enter
movzbw
shr
add
push
dec
sub
inc
shr
or
mov
bt
movzbw
jmp
movsbw
bsr
add
btr
movzbl
xchg
sub
add
btc
shr
inc
rcl
mov
sar
bts
add
dec
add
mov
movsbw
mov
jmp
pusha
push
call
sete
pushf
movb
mov
lea
push
call
adc
mov
add
or
imul
mov
aas
test
fwait
es
jb
hlt
or
inc
push
andl
xchg
adc
dec
stc
xor
mov
loope
cmp
out
xchg
pop
push
test
mov
icebp
jecxz
cmpsl
test
stc
insl
nop
sub
lock
push
cmpb
pusha
pushf
push
call
call
pushf
lea
jg
push
lea
call
stc
bt
cmp
pusha
sub
movl
pushf
movw
call
jae
pop
out
cmpsb
movsl
lcall
sub
dec
or
scas
cmp
ja
imul
jmp
add
mov
out
mov
jns
cs
lods
xor
pop
pop
xor
loop
push
dec
pop
dec
mov
adc
fcmovu
sbb
pusha
les
mov
jl
dec
sub
aad
jmp
inc
add
push
inc
cmpsb
sbb
inc
xchg
loop
jp
jbe
cli
xor
fcompl
js
dec
push
xchg
lds
or
out
mov
repnz
or
mov
scas
xor
hlt
push
xchg
nop
in
movsb
fiadds
stos
sbb
push
xorl
add
mov
insl
pop
lods
mov
leave
aam
sub
pop
xorb
push
inc
or
out
push
jne
mov
bound
out
or
add
inc
and
rcll
add
pop
rorl
or
xchg
pop
cmp
and
mov
loopne
cmp
mov
jae
es
mov
cs
xor
dec
dec
xchg
cmp
and
faddl
lock
sbbb
inc
loopne
mov
pop
push
sbb
aas
fst
adc
dec
lds
nop
xor
mov
mov
xchg
aam
mov
sbb
push
push
in
sub
mov
push
add
inc
and
testl
popa
adc
add
add
add
fisttpl
sahf
in
movsbl
setge
lea
push
mov
pusha
pushl
mov
jmp
mov
mov
push
push
lea
jmp
movl
movzbl
jmp
call
xor
test
stc
repnz
pushf
movb
pushf
mov
lea
jne
test
or
shl
mov
bsr
sub
mov
and
mov
cmp
stc
sub
pusha
mov
pushf
cmc
pushl
popl
sub
clc
call
sbb
stos
jmp
stos
sbb
push
jl
push
inc
inc
ja
test
mov
or
sub
push
jmp
lret
jnp
push
inc
in
pushf
rep
mov
mov
lods
idivl
or
aad
mov
or
imul
mov
fistps
lret
pusha
movl
push
pushf
push
jmp
stos
stc
mov
lcall
clc
pop
fimull
hlt
push
scas
adc
ljmp
or
outsb
mov
pop
dec
jo,pn
mov
sub
push
jb
sub
lret
adc
test
std
pushf
mov
xchg
xchg
mov
mov
sbb
test
outsl
lods
aam
pop
push
int3
nop
mov
lea
pop
dec
data16
or
into
mov
loope
mov
and
stos
ljmp
vfrczps
inc
xchg
sti
jo
dec
inc
mov
fbstp
into
nop
cld
fwait
aas
sub
mov
xchg
sahf
arpl
lahf
xor
int
daa
ficoms
xor
xchg
dec
enter
push
insb
mov
gs
and
int
mov
aas
and
mov
xor
xor
movl
js
mov
pushl
ret
pushl
lea
jb
cmc
stc
cmp
call
push
lea
je
jmp
pushl
push
pushl
pushf
pushf
pushl
ret
call
pushf
pusha
push
call
push
cmpsb
repz
dec
mov
adc
sbb
push
in
cld
mov
and
stos
repnz
leave
std
mov
sti
mov
in
push
jecxz
sub
imul
js
mov
scas
and
mull
xchg
aam
imul
sub
xchg
xor
inc
subl
ja
iret
cmpsb
dec
dec
leave
sbb
mov
mov
and
mov
in
insl
notb
or
or
push
gs
jne
mov
push
dec
sub
ss
add
fidivrl
pop
icebp
pop
mov
lock
in
mov
cli
sub
xchg
movsb
shl
pop
add
lock
hlt
sbb
mov
leave
pop
adc
mov
sub
jl
inc
sbb
icebp
mov
lcall
cli
iret
cltd
insl
push
lea
mov
sub
inc
and
adc
arpl
pushl
push
movb
lea
jmp
jmp
lea
jne
jmp
sub
inc
in
lcall
mov
mov
mov
in
inc
outsl
div
dec
notl
nop
idivb
inc
aaa
add
int3
inc
movsb
adc
sbb
pop
repnz
xchg
mov
imul
scas
iret
pop
imul
push
add
outsb
pop
mov
jno
shl
jno
dec
add
mov
pop
mov
sbb
mov
aaa
imul
sbb
add
std
inc
sbb
push
push
in
jle
mov
jg
jbe
std
out
fs
in
pop
clc
outsl
push
repnz
stc
and
push
xchg
push
jno
shll
mov
out
test
or
xchg
and
jnp
addr16
jns
lahf
mov
stos
push
cld
into
scas
pusha
sti
into
mov
sbb
out
add
mov
ss
mov
call
lret
jne
fs
xlat
pop
sbb
jg
sbb
fnstcw
ror
movsb
lock
clc
rol
pushl
pushf
push
dec
cmc
call
jne
gs
xor
fs
insb
add
call
mov
stc
test
jmp
test
cmp
call
and
popa
aaa
xchg
ss
or
jle
xor
cltd
inc
divl
push
in
adc
ds
sub
xchg
cli
imul
cmp
mov
xor
cmp
add
lea
dec
idivb
movsb
adc
cmc
lods
xlat
out
jbe
add
std
adc
imul
mov
mov
jne
adc
push
sahf
push
iret
ds
sbb
js
leave
icebp
and
mov
das
or
out
jo
sbb
les
test
sub
popf
sub
int
pusha
adc
setg
lea
das
sub
sub
sar
rcl
push
mov
lea
push
cmp
movsbw
or
ror
push
rcl
pusha
jmp
divl
jns
jne
dec
xchg
mull
outsb
shrl
aas
pop
or
xrelease
clc
not
cwtl
sarb
movsl
xchg
mov
sbb
rcll
nop
pop
mov
xor
mov
xchg
cmpl
fisubrs
push
ss
les
nop
subl
or
mov
pushf
push
lea
jmp
add
test
test
or
mov
movl
pushl
lea
je
cmc
jmp
pusha
cmp
pushl
call
movl
pusha
lea
jmp
jmp
mov
test
sub
movw
pusha
rep
movzbw
movsbw
mov
pushl
pushf
mov
push
lea
jmp
jmp
mov
movzbw
bswap
pushf
lea
jne
pop
pusha
pusha
pushl
ret
lea
ja
mov
pushf
inc
call
shrl
lcall
jb
adc
cmp
push
jmp
insb
xchg
mov
fildl
cmp
and
jp
test
cmpsl
pop
mov
daa
jae
dec
sbb
bnd
push
fcom
lret
xchg
negb
pop
push
lods
sub
fstpt
add
pusha
mov
mov
push
pushl
pushf
lea
jmp
lea
jae
bt
mov
shld
add
rcl
mov
and
mov
clc
push
cmp
xor
cmp
push
jmp
pusha
push
movb
call
and
lcall
push
push
insl
rclb
cltd
adc
stos
inc
sti
test
dec
fbstp
lahf
sbb
dec
sbb
mov
xor
inc
inc
stos
mov
sbb
inc
cmp
xor
xor
das
out
pusha
mov
mov
dec
xor
cmpsb
inc
jnp
nop
or
jl
lret
roll
out
and
mov
mov
sub
adc
lret
mov
loope,pn
shlb
xchg
lock
les
pushf
adc
je
add
or
filds
or
push
inc
xchg
fnstenv
mov
jo
pop
or
push
adc
push
ficomps
ljmp
dec
pop
mov
pop
inc
push
xchg
xor
loope
into
fisttps
and
jl
inc
gs
bound
cmpsb
out
inc
mov
sub
shrl
loop
add
out
shlb
inc
into
ljmp
mov
jl
dec
nop
xor
clc
lret
xor
movsl
fildl
lcall
outsb
out
jo
into
pop
xor
push
ljmp
mov
cmp
jnp
adc
cmpsb
mov
nop
jne
enter
cltd
rol
jae
push
add
jo
int
insb
or
fs
divl
xchg
or
daa
cmp
aad
test
push
inc
cmp
push
push
fidivl
in
mov
or
add
pushf
jmp
lea
je
rcr
add
not
mov
call
movw
mov
pushf
call
pushf
lea
call
pusha
lea
jb
pushf
mov
pushl
pushl
ret
jmp
ror
push
movzbl
cmp
bt
mov
shrd
jmp
push
aad
repnz
jmp
mov
jl
push
in
pop
inc
cltd
push
sarb
and
cmp
nop
push
pop
inc
filds
cltd
div
jo
cmp
in
stos
jmp
mov
cmp
add
cli
in
add
add
add
enter
xlat
sbb
movhps
add
add
xlat
sbb
jb
sbb
add
add
add
mov
cmpsb
out
in
stos
add
aaa
mov
pop
stos
lock
filds
push
sbb
xchg
jge
and
es
fldt
xor
insl
pop
ss
pushf
sub
adc
pop
add
pop
cltd
je
cmp
cmpsb
xchg
subl
add
jae
popa
addr16
outsl
js
add
lods
sti
pushl
movl
pushf
lea
jmp
lea
jne
rcr
add
pushf
mov
stc
add
call
test
pushf
test
jmp
in
sbb
pop
mov
test
dec
adc
lods
pop
dec
inc
das
or
push
push
jp
cmp
dec
lods
jb
dec
lods
push
ljmp
mov
inc
in
inc
xor
jno
in
xor
xchg
xchg
addl
dec
inc
dec
mov
aad
test
cmp
mov
cmc
jg
jnp
xchg
pop
mov
cmp
aam
fsub
pop
das
xchg
pop
adc
pop
dec
cltd
adc
sub
cli
test
ljmp
loopne
add
cmp
pusha
lea
jns
push
movb
lea
jb
cmc
jmp
lea
je
cmc
cmp
jmp
push
lea
ja
pushf
add
push
bt
bt
or
pushf
call
and
push
xchg
fwait
pop
arpl
push
mov
push
xchg
ja
mov
pop
cmpsl
andl
mov
orl
push
ja
push
mov
mov
push
xchg
push
xorl
push
xorl
push
fwait
mov
data16
rorl
popf
les
jbe
xor
xor
fs
jmp
mov
call
call
lea
call
pusha
pushl
lea
jne
lea
mov
pusha
push
pushf
lea
jmp
pop
and
lcall
adc
mov
xlat
pop
xor
cmp
in
jnp
jg
and
mov
inc
mov
mov
cmc
shll
jns
pop
loope
dec
cmp
mov
clc
lahf
imulb
xor
push
lods
cld
arpl
mov
shll
popa
icebp
mov
inc
enter
fistpl
sbb
mov
push
fisubrl
adc
inc
ret
mov
popa
inc
cmp
loop
lahf
je
jne
enter
gs
mov
mov
xchg
jmp
mov
into
cmc
lcall
pusha
loope
jg
mov
in
sti
icebp
sub
fcmovne
or
mov
jae
inc
cmpsl
jb
das
mov
dec
movsb
dec
lcall
int
or
and
icebp
jecxz
sub
push
push
xchg
dec
inc
mov
adc
outsb
dec
mov
and
jns
in
adc
arpl
movsl
or
fisubl
sahf
loop
mov
js
insl
repz
and
adc
lods
cmp
adc
lods
test
es
push
sahf
sub
or
lret
pushl
mov
push
lea
call
stos
ret
cmpsb
cmp
lods
add
enter
jle
sub
mov
pop
adc
repnz
mov
shlb
incb
dec
outsb
xor
incb
mov
fidivrl
insl
jge
sub
stos
lea
add
out
leave
mov
stos
mov
data16
cmp
negl
dec
test
xchg
adc
jl
sbb
rorb
popf
cltd
cmp
rclb
decb
pminub
leave
testl
mov
je,pn
xchg
jg
xlat
xchg
es
jb
aad
mov
test
aad
outsl
inc
and
in
pop
add
jbe
ljmp
mov
inc
lea
ss
ja
adc
imul
jp
mov
xor
jmp
xor
test
ss
sub
inc
pushf
xchg
pushf
movb
pushf
jmp
stc
lcall
inc
stos
pop
shlw
stos
sbb
push
cwtl
dec
aad
in
mov
pop
clts
cmpsb
scas
popa
mov
aad
dec
pop
pushf
xor
movsb
int3
push
cmp
add
dec
aam
xchg
test
push
push
icebp
out
push
push
ja
sbbl
add
negl
mov
je
aas
mov
into
or
sub
gs
fdivrs
gs
cmp
xor
jg
sbbb
out
xor
ffreep
mov
je
pusha
in
loopne
ljmp
sbb
mov
lahf
movzbw
lea
pusha
call
clc
cmc
cmc
movzwl
dec
mov
call
push
call
int3
popf
pusha
call
and
stc
lcall
sbb
inc
cmp
out
mov
outsl
inc
xlat
push
inc
outsl
arpl
stos
gs
mov
rcl
or
inc
mov
inc
xlat
mov
dec
sahf
push
jmp
std
jmp
pusha
pop
dec
js
and
repz
cwtl
xor
pushf
xor
inc
mov
add
xlat
mov
dec
and
loope
lods
push
dec
pop
sbb
inc
rolb
add
mov
mov
movb
pushf
lea
call
pusha
jmp
adc
lea
pusha
push
mov
pushl
ret
insb
out
clc
lcall
push
sbb
jmp
inc
xchg
out
js
xchg
mov
cwtl
sub
ret
in
and
cmpsb
dec
mov
sub
lea
into
lcall
push
and
shrl
mov
je
roll
lea
jne
inc
bsf
mov
bt
cmc
push
cmc
add
mov
cmp
push
stc
movzwl
lea
mov
mov
pushf
cmp
pusha
bt
add
jmp
pushl
popl
push
pushf
mov
push
lea
jmp
movsbw
sub
and
mov
cmp
bt
and
stc
stc
add
push
lea
jmp
pop
pushf
call
mov
push
lods
push
movl
pushf
rol
jmp
pop
outsl
stc
lcall
and
js
inc
mov
push
test
out
cmc
into
add
or
clc
imul
fmul
insb
ja
cwtl
loop
mov
mov
mov
sub
pop
iret
adc
leave
mov
addr16
out
xor
or
sub
jecxz
add
mov
orl
out
mov
fnstenvs
fwait
xor
add
std
idivb
inc
orb
int
js
int3
add
and
push
pop
sbb
dec
xchg
xchg
mov
mov
and
xchg
adc
sub
fisubs
sbb
add
inc
mov
in
dec
pop
test
enter
dec
xchg
mov
out
in
mov
pop
sti
jge
enter
outsb
mov
jl
stos
and
ljmp
ret
push
push
repnz
ljmp
lea
je
sar
pushf
xor
lahf
btr
add
mov
mov
bswap
pusha
movzbl
mov
movzbw
shl
xor
cmc
shr
cmc
mov
pusha
stc
cmc
clc
or
pushf
lea
je
lea
jmp
std
fdivrp
lcall
jnp
lahf
push
dec
mov
xor
daa
push
inc
das
mov
outsl
imul
mov
mov
sbb
aaa
imul
test
gs
and
xchg
xchg
dec
sarb
cltd
xor
jp
dec
dec
call
jg
adc
aad
sbb
pusha
stc
cltd
mov
int3
testb
test
xchg
fs
mov
xchg
pop
push
mov
mov
inc
add
add
push
aas
sbb
dec
cmpsb
addl
les
stos
mov
cmp
sub
ljmp
stos
repz
lcall
dec
jns
cs
mov
or
xor
sbb
pop
inc
xchg
scas
lcall
arpl
inc
pop
lods
inc
loopne
mov
add
orb
sbb
outsb
ss
jns
mov
mov
jp
call
enter
popf
cltd
mov
mov
in
rol
negb
and
rorl
stos
sbb
push
jne
jg
sbb
popl
dec
mov
sub
or
sahf
push
pusha
inc
xor
shrb
mov
sbb
push
stos
pop
fistpl
adc
mov
outsl
mov
mov
push
test
mov
lock
mov
jmp
lods
test
scas
rorl
test
outsb
push
jnp
inc
loop
je
test
xchg
mov
xor
sub
ret
mov
pop
mov
imul
sub
adc
inc
mov
in
dec
and
in
fidivrl
adc
out
out
sbbl
in
movl
pusha
call
and
test
push
pop
mov
jp
push
test
daa
dec
jne
adc
es
aas
xchg
add
dec
movsl
insl
pop
jle
jae
arpl
cmpb
outsb
jae
ret
nop
fs
aad
clc
loopne
call
not
mov
pop
bswap
xchg
movsbw
mov
lea
jmp
lods
lock
pop
jle
add
jae
gs
ss
fdivs
and
cmp
ucomiss
mov
jb
add
mov
push
fstps
adc
int
out
ja
insb
insb
push
lret
stos
jo
xchg
mov
jecxz
add
test
adc
and
mov
pop
sub
fsts
mov
into
or
mov
fistpll
sbb
stc
inc
cmpsl
hlt
sahf
in
jns
insb
sahf
leave
dec
dec
aad
dec
xor
dec
fimuls
stc
call
mov
loopne
test
dec
daa
shll
mov
pushl
cmp
fdivp
out
arpl
shrl
les
xor
push
xor
bound
pop
fiadds
inc
sub
movswl
cmp
out
and
into
inc
dec
fildl
xchg
jo
test
push
les
cmpsl
dec
in
xchg
and
movsl
pop
and
push
arpl
enter
sub
xor
lea
jp
pusha
not
pusha
call
not
not
movsbw
pop
pusha
pushf
pushl
ret
jg
inc
lcall
jmp
imul
movsl
xchg
loop
fwait
and
shll
call
leave
dec
int
lods
mov
jb
shll
mov
mov
jmp
lea
repz
or
aas
mov
idivl
fstp
add
add
fcoms
imul
movsl
xor
push
mov
jbe
sbb
mov
pop
clc
flds
xchg
es
or
bswap
call
jmp
cmpsb
sub
cwtl
or
pop
test
cld
addr16
inc
into
iret
mov
and
stos
repz
imul
out
fbld
popa
fidivs
xor
or
popf
inc
hlt
inc
fisubrs
xchg
movsb
add
dec
sbb
jp
enter
mov
cmp
xor
add
notl
je
jmp
imul
sbbl
pop
mov
jb
pop
daa
cwtl
and
cmp
cmp
fcomps
faddl
xchg
push
incl
jge
repz
test
mov
inc
gs
sub
mov
xor
add
jp
scas
pushf
rorl
scas
sbb
add
push
data16
in
xchg
sbbb
shrl
outsl
pushf
pop
lods
stos
cmp
movsl
out
xchg
add
testb
fs
xchg
xchg
fmuls
ja
adc
add
sub
out
sub
popa
notl
push
xor
ret
jmp
mov
mov
jl
adc
movsl
xchg
cmp
fnstsw
jnp
iret
out
out
mov
insb
iret
pop
mov
mov
add
lret
mov
xchg
fldenv
sub
xor
mov
mov
lahf
sbb
cld
cmpsl
pop
xor
dec
mov
and
pop
call
inc
lock
sub
sub
pop
arpl
fcom
xor
jb
sbb
vmread
int
push
shrl
popf
jo
xor
rcll
outsl
clc
out
insl
sub
pop
jp
cmovno
shlb
mov
mov
ret
mov
or
mov
enter
loopne
mov
inc
cmp
inc
fimuls
dec
or
inc
and
adc
call
cmp
rorl
inc
inc
je
xor
mov
pop
testb
mov
cmp
dec
lret
ds
in
lds
in
popa
pop
js
pop
dec
adc
mov
stc
jns
inc
bound
mov
fwait
mov
ss
stos
jae
lock
xchg
xchg
sub
cmpsl
sub
xchg
and
add
adc
decl
repz
mov
bsr
bsr
shl
bswap
add
sbb
mov
bts
movzbw
add
rol
inc
movl
cmp
dec
mov
test
cmp
pusha
cmp
movb
call
or
pop
add
cld
pop
mov
mov
out
pusha
in
imul
push
cmovns
sbb
mov
clc
in
insl
jo
ljmp
push
test
cmp
aam
jg
push
sbb
lret
mov
sahf
pop
nop
orl
cmpsl
cmp
add
mov
inc
scas
adc
pop
cmp
dec
in
inc
push
in
aaa
fsub
mov
sarb
xor
push
cmp
mov
scas
add
jne
pop
stos
jle
xchg
jmp
repnz
int3
xor
push
arpl
pop
mov
sbb
lahf
out
push
jp
cmc
and
dec
mov
sti
lea
sub
das
loope
scas
pop
mov
cmp
pop
dec
and
js
sub
std
inc
test
test
adc
bt
mov
add
call
repz
faddl
fwait
cmpsb
push
fidivrs
lahf
sbb
mov
cmp
inc
push
in
pop
lods
jmp
sarb
arpl
and
push
out
std
push
push
cmp
xor
gs
push
mov
loopne
out
clc
lret
cmp
add
adc
push
pop
into
add
sbb
jae
cmp
repz
push
pop
add
cmp
ds
enter
xor
mov
add
inc
cmp
aaa
jns
sub
add
mov
rcr
xlat
adc
clc
test
cmc
sub
stc
jmp
lea
jbe
shr
stc
sub
sar
pusha
shrd
movzbl
mov
add
inc
mov
adc
add
add
sbb
shr
add
mov
shl
movzbw
sbb
shl
add
not
jmp
jmp
std
mov
dec
inc
lcall
sub
adc
inc
dec
mov
lcall
popfw
push
cli
imul
inc
cmp
insl
mov
es
dec
fwait
mov
push
mov
test
xor
mov
sub
cmpsb
cmc
roll
cmp
insb
push
pop
mov
int
mov
in
dec
ss
adc
push
pop
fstps
xchg
inc
rorb
sbb
add
movsb
fldl
ror
push
mov
iret
and
inc
loopne
push
jns
xchg
push
test
sub
mov
mov
mov
fldt
out
loop
jo
sub
lret
dec
dec
fwait
ret
mov
pop
loopne
pop
sti
lea
data16
ds
movl
call
movl
call
pusha
call
movl
pushf
pushl
pushl
lea
jmp
pusha
pusha
call
mov
lea
jmp
lea
jne
sar
btc
sbb
mov
stc
stc
stc
pushf
add
bt
call
cmp
pushl
jmp
pusha
cwtl
movzbw
lea
movw
jmp
movb
test
mov
test
test
jmp
call
pusha
mov
movsbw
pushl
popl
movb
mov
pop
push
movl
movsbw
lea
jmp
and
push
fwait
cmpsb
ret
push
lret
or
push
mov
fnsave
and
pop
jle
cmp
rorb
or
xor
ret
inc
cltd
mov
sub
or
fldl
or
push
fldcw
push
fwait
cmpsb
push
push
mov
mov
inc
pop
lahf
cmp
dec
shrb
pop
xchg
ret
ret
out
xchg
adc
mov
popf
lret
fisubs
sbb
pop
cli
jno
jl
mov
imulb
sbb
xor
enter
fisubs
icebp
imulb
aas
pop
fwait
cmpsb
icebp
sub
shll
add
sub
mov
js
xor
fs
sbb
xchg
mov
inc
pushf
adc
inc
mov
lret
adc
lcall
cmp
pop
mov
aaa
rorl
nop
and
je
push
and
xor
mov
mov
push
sbb
adc
sti
cli
stc
shrl
add
adc
filds
fisubl
and
mov
inc
xorl
and
jae
bsr
sub
mov
shr
rcl
mov
shld
bt
ror
mov
stc
xor
push
clc
cmc
repnz
lea
jne
pusha
push
lea
jne
dec
bswap
mov
rcl
sub
pushf
lea
stc
pushf
sub
pushf
push
pushl
popl
cmp
cmp
cmp
push
pushf
call
pusha
call
bsr
movb
add
add
shld
mov
mov
not
inc
mov
pushf
stc
mov
cmc
repnz
pushf
pusha
pushl
lea
jne
movsbw
lea
seta
movb
movsbl
jmp
xchg
shl
shr
mov
cmp
sub
pusha
push
jmp
call
call
jmp
fisttpl
fwait
cmpsb
push
in
les
nop
fbstp
nop
fnstenv
movsb
dec
inc
mov
sub
movsl
dec
and
pop
push
pusha
test
push
xchg
ljmp
movsb
or
adc
mov
sahf
adc
pushf
inc
aaa
jbe
sbb
cmp
or
rol
js
ret
dec
mov
ljmp
push
mov
lret
or
ret
mov
cmc
call
cmp
jge
cmp
rol
sahf
jo
adc
les
inc
jnp
movb
dec
sar
cld
popl
movsbl
pushl
mov
lahf
lea
movl
jmp
lea
call
call
cmc
cmc
push
or
pushf
movb
call
pop
mov
or
iret
cmp
scas
int3
out
push
mov
push
adc
nop
and
mov
aas
and
mov
sub
mov
arpl
clc
shlb
push
push
or
test
call
sub
push
mov
mov
xchg
lret
imulb
mov
scas
or
cmpsb
jmp
mov
insb
rclb
mov
test
jo
mov
jnp
ds
jnp
daa
xchg
icebp
fwait
dec
jle
jae
mov
adc
test
and
bound
shlb
sub
jno
dec
rcrl
push
mov
lret
call
fisttpll
pop
push
mov
icebp
lds
ret
mov
or
cmpsb
imul
loopne
mov
pusha
pop
cmc
push
testb
subl
popf
add
dec
mov
sti
gs
out
mov
insl
bound
repz
scas
lods
leavew
dec
sahf
sub
mov
fisttps
mov
pop
jmp
dec
dec
cs
mov
and
neg
sub
sbb
or
inc
mov
jl
mov
add
sub
leave
sub
mov
lret
inc
sbb
int
cmpsb
nop
cmp
or
notb
es
or
mov
fdivl
mov
mov
pusha
jns
adc
push
js
sbb
xlat
in
pop
push
jns
add
es
mov
mov
aam
lcall
inc
cltd
inc
push
inc
push
jmp
mov
mov
push
lret
lret
outsb
jno
pop
fidivl
cmp
dec
rclb
shll
rcrb
lods
inc
push
or
enter
jno
aas
sub
in
lea
adc
clc
enter
mov
jne
push
jmp
out
sub
or
ss
mulb
mov
rep
insl
imul
movsb
push
popf
stc
jno
dec
mov
mov
pop
jmp
cmpsb
cltd
movsl
test
enter
xchg
mov
mov
lock
xchg
out
fimuls
lea
inc
mov
ds
into
mov
xor
sub
mov
add
sbb
movsb
xor
add
add
sbb
push
fistps
add
add
sbb
xor
sbb
test
sbb
add
and
pushf
or
cmpsb
bound
add
fbld
je
xor
shlb
fsubl
negb
fldenv
mov
mov
mov
sub
out
mov
adc
xor
adc
jecxz
mov
sbb
stos
inc
mov
out
call
mov
cmpsb
pop
bnd
dec
mov
enter
and
into
xor
cwtl
int
sub
jmp
icebp
inc
lds
push
mov
insl
out
sub
jno
in
ret
addr16
xchg
das
jb
inc
and
mov
jg
jge
or
out
call
mov
std
xorl
in
daa
icebp
mulb
lahf
sub
or
sbb
and
cli
cs
out
les
aam
xchg
ret
push
int
xchg
in
jp
inc
mov
dec
inc
mov
inc
cmp
adc
loop
cltd
js
daa
out
rclb
or
fs
call
pusha
push
pushl
pushf
lea
jne
movsbw
lahf
lea
mov
push
lea
jmp
pusha
pusha
movl
pushf
movl
pushf
pushl
lea
jmp
add
mov
push
lea
jmp
not
stc
rol
pushf
pushw
popfw
pushf
pusha
inc
pushl
movb
jmp
xchg
cmp
fwait
cmpsb
les
mov
scas
sub
call
and
ret
mov
add
jg
outsl
insb
mulps
popa
push
dec
cmp
add
clc
jmp
lea
jbe
pushf
rcl
add
jno
mov
movsbw
shl
clc
sub
add
bt
jmp
imul
gs
xor
cs
insb
add
mov
cmp
stc
test
mov
pusha
lea
je
test
bt
jmp
pushf
mov
push
movl
movb
pushf
pusha
movl
mov
lea
jmp
call
lea
jae
stc
call
cltd
sub
fwait
cmpsb
mov
push
insl
repnz
mov
test
and
adcl
into
adc
lret
xchg
in
pop
jg
nop
in
pop
jp
jae
lock
mov
pop
and
inc
and
cmp
in
test
add
sbb
or
mov
adc
pop
ret
push
xor
in
stos
mov
push
call
call
cmp
jmp
mov
bts
push
mov
not
movsbw
add
stc
lea
inc
shr
cmc
mov
bsr
cmp
bsf
add
bswap
bswap
bswap
movsbw
mov
pushf
push
mov
pusha
push
jmp
enter
fwait
cmpsb
cmp
out
stc
jle
inc
mov
insl
jne
cmp
sti
into
lret
pop
adc
arpl
push
out
and
mov
and
pop
repz
mov
hlt
test
cmp
xchg
xchg
and
xchg
arpl
push
dec
cld
fstp
xor
pop
movsl
push
mov
mov
stc
sub
cs
test
jnp
dec
and
lock
sarb
jne
mov
cmc
sub
clc
xor
movw
call
push
adc
call
lea
je
jmp
clc
clc
cmp
push
pusha
pushf
lea
je
push
mov
pushf
lea
jmp
push
push
call
out
lahf
adc
or
jl
pop
faddl
mov
mov
dec
ljmp
pop
cmp
mov
inc
mov
xor
mov
ja
mov
int3
sbb
das
adc
mov
xorb
fs
pushl
popl
pushf
pushl
ret
cmp
bt
sub
pusha
push
pusha
pushf
inc
lea
call
push
lock
std
std
mov
xchg
cmpsb
mov
ret
ja
mov
popf
and
add
pop
ss
out
hlt
iret
in
pop
jge
jmp
inc
mov
aam
push
roll
fldenv
adc
test
mov
and
xchg
inc
inc
mov
in
xchg
push
movsb
xor
stos
mov
test
add
loopne
jmp
push
fmuls
cmpsb
adc
xchg
fcoml
jns
pop
sbb
sbbl
pop
mov
jg
inc
mov
sbb
fsubr
pop
push
mov
cmc
rorl
xor
jb
push
test
mov
rol
repnz
and
icebp
loope
bound
into
cmp
ja
repnz
jns
pusha
lea
ja
cmp
clc
add
test
stc
cmc
test
or
call
pushl
stc
xor
clc
cmc
mov
jmp
pop
fwait
sbb
fwait
cmpsb
jecxz
push
mov
jbe
dec
mov
pusha
xor
sbb
mov
cmpsb
push
sub
push
mov
cmpsl
mov
push
aas
mov
or
xor
imul
inc
insb
add
sti
cmpsb
lret
or
jbe
daa
sbb
sbb
mov
repz
xchg
jmp
xor
cli
lret
pop
movsb
xchg
data16
pushf
or
nop
push
lea
je
push
movb
pusha
push
lea
jmp
pushf
call
mov
mov
fwait
cmpsb
dec
dec
scas
cli
popa
lds
xchg
pop
js
push
shrl
movsl
mov
fwait
jo
leave
or
jnp
push
fidivs
shlb
jns
xor
dec
xor
mov
aaa
fisubl
and
out
xor
addr16
dec
incl
mov
pop
stc
jmp
pop
adc
adc
cmp
jmp
fnstsw
dec
cmpsb
pop
fstps
mov
or
lret
das
inc
fildl
xor
rorb
sti
imul
pusha
aad
xchg
pop
int3
push
pushf
xlat
pop
mov
mov
mov
cld
fwait
adc
cmp
push
sub
dec
xor
in
mov
das
sbb
ljmp
inc
and
pop
setae
bswap
movl
lahf
pushf
not
lea
call
movb
push
pushl
movl
mov
mov
lea
jmp
lods
bound
adc
cmpsb
repz
push
dec
mov
xchg
xor
inc
test
in
mov
inc
jmp
clc
aam
mov
pop
sbb
adc
imul
xlat
add
shll
adc
out
aam
int
int
sbbl
rol
call
dec
ljmp
fwait
cmpsb
nop
or
jo
cmp
imul
cmp
insl
mov
aaa
lcall
mov
push
pop
lock
mov
dec
jecxz
in
mov
sub
not
mov
xor
das
xchg
cmpsb
test
shrl
mov
xchg
add
sbb
add
fcoml
out
mov
xchg
sbb
call
sub
and
pop
and
ror
nop
or
out
sub
aam
js
enter
add
mov
push
fwait
xchg
add
cmpsb
mov
mov
testb
jb
mov
or
test
aad
mov
and
idiv
gs
cmpsl
inc
fwait
xchg
dec
lds
or
adc
out
pop
loop
cmpl
sbb
loop
das
jmp
negb
std
pop
xlat
mov
outsl
add
mov
lock
test
xchg
push
aad
test
xchg
inc
dec
xor
hlt
pusha
pop
xchg
mov
sub
outsb
xchg
inc
loop
jmp
pushf
jmp
inc
iret
mov
mov
xor
ret
mov
lds
repnz
pop
ljmp
inc
and
adc
jno
jl
lds
mov
inc
les
mov
cmp
mov
lret
pop
and
loopne,pn
cmc
gs
shrb
fwait
add
in
push
sbb
pop
push
and
stc
dec
rclb
dec
into
fcoms
mov
mov
cmp
shl
cmp
or
sbb
sub
es
out
add
rolb
sbb
dec
and
or
jae
lods
lods
scas
mov
jnp
ret
jnp
lock
jle
mov
mov
dec
mov
fiaddl
or
jg
xor
movsl
or
test
scas
inc
xor
in
rcrl
cmpsl
in
push
pop
lods
cmpsb
dec
insl
sbb
push
mov
lret
or
jmp
fisubrs
jge
testl
and
lock
cltd
push
lds
mov
test
sbb
pop
push
mov
mov
pop
xchg
and
outsl
or
mov
ret
leave
xchg
pop
pop
rcrb
mov
mov
in
aas
test
inc
cmp
jno
push
dec
xor
hlt
mov
icebp
fs
cmp
les
pop
fs
push
filds
inc
sub
jne
test
cmpsb
out
into
adc
and
jo
insw
rcl
outsl
stc
xchg
subb
subl
adc
aaa
popf
mov
cmp
xor
add
test
xor
dec
ljmp
aad
fisubrl
in
mov
xor
in
aas
test
popa
in
lods
sub
ja
aad
adc
mov
xchg
adc
repz
pop
mov
fildl
mov
mov
test
les
jns
imul
mov
les
lods
icebp
and
cmc
out
ret
adc
inc
int3
mov
mov
dec
lret
push
aaa
lds
adc
stos
and
cmp
xchg
and
push
shrb
lock
iret
jmp
push
negl
fstps
clc
dec
aad
add
jns
aam
into
push
das
ret
lock
mov
push
dec
inc
stos
lock
sbb
xor
jnp
mov
or
xchg
jg
ljmp
xor
repz
les
jns
xor
movsl
daa
push
lcall
sbb
cmp
cltd
call
sbb
clc
jb
xchg
jmp
mov
pop
cld
mov
orb
add
pop
push
or
mov
xor
fs
rclb
push
cmp
jo
leave
lods
jbe
movsb
movb
je
jecxz
dec
in
aam
jb
mov
daa
insb
ret
push
test
js
and
bound
lods
lods
adc
jg
mov
cmc
cmc
cmp
sahf
sub
test
rcr
pop
call
cltd
and
test
je
push
xor
out
mov
mov
into
aam
cmpb
jns
inc
pop
ljmp
xorl
xchg
rcll
xor
pop
outsb
mov
pop
inc
xchg
mov
xchg
cmc
cmpb
aam
sub
push
shll
xor
test
jne
mov
mov
jae,pn
add
mov
movsb
jne
rcr
jns
mov
jle
addr16
movsl
das
jno
hlt
cmp
das
out
call
mov
daa
and
xchg
cli
nop
jle
jmp
in
mov
xor
and
pop
lods
lods
mov
aas
mov
xchg
cmpsb
out
loop
nop
jns
sti
xchg
add
and
mov
sub
dec
lea
rcll
xor
sbb
sarl
fstps
js
insl
push
aaa
les
add
aam
sbb
test
divl
in
popf
push
sbb
les
push
div
std
stc
outsb
adc
adc
cmp
xchg
pop
fcoms
shll
sbb
adc
jae
mov
push
stc
decb
aas
fcmovnbe
xchg
in
push
movsl
push
test
adc
adc
jp
push
lods
fisubrs
call
jo
push
lahf
dec
jb
repnz
in
ffree
mov
inc
sbb
mov
xor
cmpsb
mov
lock
cwtl
push
scas
dec
mov
pop
push
in
icebp
mov
and
lods
push
pop
mov
jne
das
sub
fcmovne
jo
movsl
mov
test
inc
rcrb
cs
push
mov
push
pop
ljmp
xor
rclb
out
bound
bnd
mov
sbb
stos
out
inc
cmpsl
push
mov
gs
jbe
push
jge
movsb
xor
sbb
int3
mov
daa
xchg
adc
cld
cmpsl
insb
mov
stc
stos
stos
xor
xor
mov
aad
lds
enter
push
dec
loope
in
cmpsl
inc
cmpsl
sbb
jg
out
mov
mov
aas
out
aas
or
inc
or
mov
or
les
mov
div
push
xchg
xor
movsbw
push
pushf
lahf
push
call
movl
pushf
call
lea
jae
push
lea
jne
jmp
call
test
cmp
mov
pushf
lea
jb
pusha
pusha
test
cmp
call
mov
clc
stc
jmp
je
bswap
mov
movzbl
mov
lea
pushf
call
pushf
movl
movw
push
movl
pushf
pushf
push
lea
jmp
call
call
jno
cld
sbb
shrl
xchg
hlt
inc
mov
imul
ror
xchg
int3
aaa
repz
pop
cmpsb
nop
jg
sbb
addr16
mul
or
jge
and
test
fisubrl
jl
dec
xor
sbb
jns
add
mov
add
or
test
add
add
cld
lea
pushf
pushl
pushl
ret
push
cmp
call
sub
call
mov
bswap
bswap
pusha
mov
pushf
push
jmp
rcll
push
jmp
shl
xchg
pusha
xor
xchg
sub
cltd
les
pop
mov
inc
pushf
out
pusha
enter
movsb
push
pop
lret
cmpsb
test
mov
out
add
fsubs
cmpb
in
fistpll
mov
dec
insb
dec
cmp
es
loop
call
in
or
lret
imul
aas
adc
sbb
adc
aaa
add
shl
push
inc
jle
push
dec
push
or
icebp
pop
mov
sti
fidivl
sbb
scas
mov
xor
orl
ljmp
add
mov
and
mov
dec
pushf
lea
jmp
or
inc
cmp
cmpsl
add
repz
push
or
popf
addr16
testb
repnz
pop
push
shll
lods
or
insl
jb
inc
xchg
lahf
push
inc
pop
adc
mov
and
addr16
enter
rclb
cmpsl
add
jle
push
dec
std
lods
cmp
idivb
xorl
fwait
cmpsb
adc
cld
subb
xor
cmpsl
sub
pushf
int3
iret
push
adc
int
stos
or
punpckhwd
mov
popa
pushf
repnz
hlt
sbb
aas
xor
ror
jbe,pt
pop
fs
inc
xor
scas
xchg
mov
movl
lea
jo
pushl
pusha
pusha
pushl
push
pushl
ret
es
imul
cmpsb
lds
push
test
push
mov
popa
lret
adc
sub
dec
inc
scas
sbb
fcmovb
bswap
sub
cmp
addl
call
int
imul
movsb
mov
hlt
imul
test
pop
adc
mov
fadds
std
in
sbb
mov
mov
sti
push
gs
js
mov
pop
add
iret
mov
iret
inc
mov
loopne
fwait
cmpsb
push
sbb
push
xchg
outsb
in
dec
inc
jge
and
inc
stc
ljmp
int3
lock
adc
inc
mov
or
ss
adc
aaa
or
push
push
add
push
movsl
leave
stos
aam
lods
mov
dec
sarb
sub
stos
movsl
sub
test
ja
pop
fwait
cmpsb
mov
loopew
sahf
cli
xchg
mov
and
arpl
in
out
ret
dec
sarb
xchg
stc
inc
xchg
bnd
xchg
rcl
mov
push
sub
cmp
pop
and
xchg
cmp
mov
aaa
pop
push
push
lods
xor
das
inc
jle
mov
aam
nop
lret
adc
mov
out
loopne
jae
ficoms
in
mov
inc
shll
sbb
mov
les
loop
jp
in
jg
sub
fmul
mov
outsl
cmp
lds
bts
iret
jmp
mov
not
rol
neg
shl
sub
shrd
push
bsf
mov
setbe
clc
pushf
mov
pusha
mov
setae
clc
rol
bts
mov
clc
ror
bswap
xor
mov
pushf
cmp
test
cmp
test
jmp
lea
jbe
adc
and
mov
bswap
mov
add
push
bt
and
mov
adc
bsr
test
add
sbb
movl
bts
mov
bt
cmp
cmp
pushf
lea
jbe
ror
sbb
sub
jmp
lahf
movb
mov
not
pusha
lahf
mov
pushl
lea
pushl
movl
pusha
pushf
movl
jmp
stc
push
add
clc
push
jmp
call
push
pushf
movsbw
movzwl
jmp
pusha
lea
call
jge
push
cmp
jmp
cmp
pushf
call
dec
fimuls
sub
fidivrl
popa
mov
cmp
jg
rcrb
mull
out
outsw
cwtl
repz
ret
xor
sub
and
dec
addr16
clc
cmpsl
out
cmp
pop
popa
mov
icebp
sub
lahf
jne
sub
sarl
mov
out
dec
data16
xor
xlat
mov
ret
je
mov
inc
cmp
mov
and
fsubrs
out
sahf
dec
data16
repz
ret
ljmp
inc
movsb
adc
repnz
xor
scas
mov
dec
xor
mov
fbld
jb
pop
out
inc
cli
xor
stos
dec
mov
lods
mov
stos
dec
mov
pop
imul
push
mov
adc
mov
shll
mov
scas
inc
mov
push
bound
inc
mov
jnp
jmp
mov
movsb
adc
lret
lret
dec
ror
jl
or
sbb
out
enter
mov
nop
jecxz
sar
xchg
fisttpll
jno
and
dec
nop
cmp
push
xchg
cmp
subl
cmp
push
out
enter
cmp
sbb
test
repnz
jne
fwait
cmpsb
mov
pop
mov
xor
sub
push
gs
in
shl
dec
sarb
jg
push
mov
into
cltd
adc
adc
sub
pop
int3
adc
cmp
mov
les
scas
mov
addr16
inc
dec
enter
outsl
fcoml
dec
loopne
jne
xor
and
ds
les
jl
fisubl
sbb
jecxz
test
inc
adc
sbb
sbb
sbbl
ret
inc
jecxz
and
fidivrl
lahf
adc
adc
in
cwtl
stos
sbb
lahf
movsl
bound
fwait
inc
push
out
pop
test
insl
and
call
cmpsb
push
push
popa
xchg
push
mov
push
and
out
movsb
xchg
outsl
ss
nop
addl
and
cwtl
aad
fwait
cmpsb
sub
or
push
push
inc
outsl
push
in
out
inc
cmp
dec
ss
aas
je
shrb
fwait
clc
jne
inc
in
das
rcrb
xchg
cmp
xchg
mov
cmp
or
lcall
out
cmpsb
push
pop
inc
jge
mov
inc
sbb
int
mov
test
push
and
aam
cmpsb
imul
push
pushf
movl
call
jb
clc
and
test
cmp
nop
out
xor
enter
nop
push
lret
movl
pop
enter
mov
adc
shll
movsl
ror
pop
ja
push
cmc
movsb
add
xchg
mov
in
test
es
inc
stos
fcompl
inc
jmp
loope
sbb
clc
fistpl
sbb
out
subb
stos
mov
add
xchg
jle
pushf
pusha
ror
call
ljmp
and
cmp
sahf
test
std
jbe
jecxz
fidivs
dec
cmp
add
or
inc
int
cmc
xchg
push
popa
pop
adc
lcall
mov
push
lods
aas
outsb
cs
inc
add
cmp
repnz
sbb
bound
js
pop
je
fs
gs
pop
aaa
mov
enter
xchg
in
mov
test
cwtl
mov
outsl
adc
adc
pusha
pop
inc
inc
xchg
stos
testl
out
xchg
les
mov
mov
out
clc
divl
daa
dec
std
in
shll
pop
or
movsb
sub
add
popa
insb
inc
insb
insb
outsl
arpl
clc
bt
push
cmp
pusha
pushl
lea
jae
bt
jns
stc
cmc
add
push
movb
call
inc
movb
lea
jmp
jmp
pusha
inc
mov
pushf
lea
jmp
lea
call
jmp
jmp
call
bt
jmp
test
sbb
fwait
cmpsb
adc
push
scas
push
push
mov
jo
ds
jno
fsubs
aad
add
pop
sbb
leave
xchg
push
push
or
mov
fidivl
pop
sub
pop
dec
sub
dec
xor
mov
decl
push
lea
je
mov
xchg
xchg
xchg
lea
not
movzbw
jmp
movb
lea
jb
cmc
cmp
pusha
jmp
add
and
sarb
add
movb
push
push
movsb
mov
dec
in
cmpb
cmp
icebp
sub
xchg
cld
push
mov
cmc
fdivs
icebp
pop
mov
ja
push
sub
or
cli
or
scas
push
mov
ficompl
rcrb
push
push
dec
dec
inc
imul
call
test
fsubr
push
rclb
in
sahf
cmp
clc
pop
rorb
icebp
divb
mov
hlt
mov
jle
jno
and
nop
inc
cwtl
and
push
mov
jo
out
das
insb
inc
subl
sub
shll
iret
xor
jb
inc
mov
pop
jecxz
out
mov
sahf
push
int3
ss
push
xor
aas
xor
pop
scas
sti
out
pop
and
mov
incl
push
cmpsb
loopne
cmp
jo
ret
cmp
pop
sahf
add
adc
pop
ljmp
cs
imul
pop
xchg
out
leave
ja
andl
loopne
jbe
sbb
icebp
divb
icebp
stos
jmp
daa
fwait
cmpsb
xor
jg
inc
mov
adc
leave
ja
push
stos
cmp
or
inc
test
xchg
inc
mov
pop
adc
dec
dec
ds
pop
dec
mov
mov
mov
inc
setle
aas
xor
in
stos
pop
js
gs
testl
push
aaa
push
data16
mov
mov
fwait
sub
jb
push
fmull
addr16
icebp
outsb
bound
sti
sbb
push
push
test
scas
sub
inc
adc
mov
or
add
aam
xor
inc
mov
je
setns
mov
jg
setne
lea
jmp
add
add
mov
push
xchg
lea
call
lea
je
pushf
push
push
pusha
mov
pushf
pushf
jmp
bswap
sub
adc
mov
pushf
call
lods
popw
sub
data16
mov
push
movsb
pop
insl
lret
clc
loop
cltd
insb
imul
add
lea
jae
stos
jge
add
and
xor
int
daa
in
push
push
out
sbb
mov
roll
mov
es
sti
testb
icebp
xchg
loopne
and
clc
fnstenv
or
sub
xor
mov
add
inc
movb
lea
loop
mov
movb
xchg
inc
jne
xchg
jnp
call
push
mov
es
mov
lret
add
mov
mov
std
mov
sti
fisubs
test
pop
pop
lahf
cmp
pop
jmp
scas
stc
pop
fsubl
lds
jmp
fs
xchg
inc
mov
push
dec
xchg
or
fcompl
repnz
inc
or
pop
clc
imul
add
daa
sbb
add
add
add
add
add
add
enter
into
sbb
add
sbb
add
add
add
add
sbb
add
mov
loop,pn
mov
int3
loopne
jo
mov
sub
xcrypt-cfb
cmpsl
popa
lds
scas
daa
adc
sub
dec
sbb
aas
out
mov
decl
bound
std
adc
test
pop
mull
jno
movsl
idiv
and
shrl
into
push
loop
or
xchg
in
adc
inc
std
jne
sti
clc
aam
mov
int
sbb
and
fwait
in
in
jns
xlat
testl
ret
xchg
into
or
mov
or
pop
call
mov
fdivrl
aaa
or
cmp
xchg
mov
sub
xchg
cmovp
das
and
lods
add
sbb
mov
out
fcompl
dec
and
lret
inc
fcmovbe
cmc
dec
ja
mov
jno
into
cmp
xor
lahf
and
cld
jp
fsts
lods
or
push
std
ret
bound
cld
or
imul
pop
popf
les
adcb
pop
mov
xor
test
aad
cmp
cmp
lods
vphadduwq
cmp
jmp
lret
outsb
cmp
jb
rcrb
jle
enter
fimull
jecxz,pt
stc
lock
mov
push
lds
xor
addr16
pusha
mov
jb
pusha
jge
pop
sahf
ja
idivl
sub
or
or
lahf
popa
addr16
aaa
mov
imull
lods
push
push
add
push
js
loop
loopne
jmp
mov
adc
cmp
test
jno
or
dec
mov
mov
cmc
pushf
mov
jne
lea
mov
pop
adc
jge
push
hlt
testb
lock
movsb
jns
push
ljmp
push
jle
out
inc
aam
imul
leave
sub
mov
xor
fldl2t
adc
sbb
clc
sar
push
jg
rorl
sbb
pop
scas
in
push
out
loope
push
mov
sbb
pushf
popa
jo
in
into
repnz
lods
in
dec
mov
inc
pop
fcmovnb
repz
aad
push
inc
scas
outsb
pusha
popa
aaa
push
pop
jp
pop
mov
test
pusha
lock
or
cmp
idivl
ss
mov
ds
pop
movsl
jb
and
insl
push
add
and
mov
repnz
imul
and
mov
lods
sub
dec
repnz
mov
xchg
cmp
mov
push
jne
dec
push
mov
dec
or
iret
sahf
jno
jecxz
out
xor
lcall
les
xor
adc
jbe
dec
xor
sbb
scas
mulb
or
and
inc
rcrl
add
rol
aaa
mov
inc
or
pusha
adc
xor
loope
cltd
pushf
mov
dec
shr
cmp
mov
aam
pop
xor
imul
or
xor
es
pushf
mov
mov
insb
push
incl
xor
scas
mov
push
push
cltd
insb
cltd
gs
fnstcw
or
push
xor
sub
repz
push
lea
ds
mov
aam
or
fs
adc
pop
js
sub
lret
das
je
mov
cmpsb
jo
enter
in
jle
mov
jle
push
cltd
fbld
or
lods
and
pop
sbb
mov
loop
mov
into
push
xchg
dec
popf
sbb
stos
inc
jno
fwait
cld
ds
movsl
xlat
dec
js
stos
push
inc
mov
xchg
add
add
xchg
pushl
js
jb
fs
or
outsl
inc
stc
pop
sti
divl
mov
jns,pt
test
movsb
fmull
pop
sub
test
mov
fistpll
pop
adc
jnp
aas
xor
jp
subl
jns
mov
and
aam
fldenv
add
mov
dec
test
scas
mov
js
cmp
lock
outsb
pop
push
pusha
xchg
xorl
sti
cli
iret
in
and
dec
cmc
pop
movb
push
adc
xor
shlb
mov
pop
in
sub
xchg
mov
add
add
loop
pop
mov
lods
enter
lock
inc
cmp
mov
aas
fistpl
xchg
xor
nopl
dec
inc
arpl
adcb
dec
xor
inc
in
mov
adc
lock
push
scas
into
test
and
push
jl
frstor
pop
add
std
push
pushf
mov
dec
pop
push
outsb
imul
lods
add
shlb
addb
mov
dec
pop
stos
mov
imul
rorb
cmp
cmc
cs
loope
mov
adc
push
popf
test
stc
cmp
add
add
in
jnp
js
cmp
cld
push
sbb
movsl
dec
cs
xchg
in
hlt
inc
sarl
imul
mov
shlb
jno
imul
dec
stos
inc
out
test
mov
sub
cmp
dec
xchg
mov
pusha
testb
aaa
icebp
or
loope
bnd
jae
movsb
and
sbb
dec
std
inc
pop
in
stc
adc
shrb
or
jb
fisubl
cmp
hlt
lea
fbstp
xchg
ss
out
mov
in
mov
jl
daa
fs
iret
jle
lret
jp
aam
stos
dec
test
shll
mov
mov
call
cltd
xchg
cmp
ds
jns
cli
sub
stos
mov
in
xor
adc
sub
test
cltd
jo
out
pop
jns
int
fstl
aas
lods
aaa
jmp
pop
mov
lea
xor
cmp
rolb
mov
jb
dec
sbb
sub
adcl
jle
scas
repnz
ret
icebp
or
push
sub
push
dec
cmp
and
sti
ljmp
shlb
subb
pop
scas
loope
or
ljmp
cmpsl
addr16
sbb
sbb
mov
jb
enter
mov
inc
hlt
fists
movsl
mov
movsb
inc
adc
mov
je
inc
push
imul
sbb
sbb
and
xchg
inc
lret
cmpsl
jo
cmpb
shll
mov
insl
mov
ret
lahf
cmpl
cwtl
or
mov
push
ja
ficoml
sub
mov
fdivrp
les
mov
ja
shrl
cs
jnp
xchg
lret
insb
stos
dec
shll
mov
out
fisttpll
icebp
cltd
enter
jecxz
sbbb
pop
mov
es
mov
and
pusha
repz
cmpl
mov
cmc
movl
push
pop
imul
out
pop
shrl
scas
inc
enter
mov
sbb
push
icebp
sub
cmp
mov
cmp
fnsave
in
shrl
in
push
mov
out
and
mov
dec
mov
ljmp
mov
call
stos
les
add
lret
int
mov
lods
es
mov
and
or
fmuls
mov
dec
mov
and
add
cmp
outsl
pop
mov
fmul
mov
ljmp
mov
fstpl
mov
inc
leave
jp
cltd
inc
xchg
dec
insl
dec
pop
cld
xchg
push
lock
jecxz
mov
xlat
xor
sbb
xchg
sub
sbb
bound
das
rclb
mov
aad
mov
out
and
popa
mov
in
inc
mov
add
rcrl
mov
push
in
sbb
xchg
bound
js
push
mov
mov
inc
or
outsl
ret
or
fwait
push
es
aas
movsb
xchg
insb
pop
add
roll
fnsave
jg
pop
movsl
or
adc
fnstcw
fmul
mov
sti
lock
stos
and
sub
adc
and
push
push
dec
das
xor
out
pushf
mov
pop
push
jle
fnstcw
adc
cltd
xchg
fmull
inc
add
aas
jae
cltd
loopne
jle
ja
pop
and
push
scas
xlat
negb
cmpsl
jge
jecxz
je
cmpsl
cmp
or
iret
pop
stos
pusha
fisubrl
push
or
cwtl
sub
mov
gs
in
jg
lods
shrb
idivb
add
pop
jb
inc
movsl
mov
fcomp
in
cs
rcr
outsl
cwtl
and
sbb
add
jns
cmp
outsl
ja
pop
or
shr
fnstenv
dec
sub
mov
dec
add
bound
pusha
xchg
lahf
stos
fistpll
iret
cmpsb
popf
mov
push
int3
and
mov
lahf
dec
xchg
lds
ss
cld
jl
test
sbb
inc
outsb
sahf
xchg
test
mov
and
sbb
addl
pusha
push
or
jns
sub
sbb
test
xor
ljmp
mov
jo
jae
dec
cmp
stc
cmp
mov
xchg
outsb
add
inc
loope
das
call
leave
in
jno
xchg
jb,pn
imul
fsubs
mov
sbb
xchg
or
jno
int3
imul
stos
mov
sub
mov
dec
mov
jno
movsb
int3
pop
mov
test
scas
jecxz
mov
and
outsb
push
dec
xchg
adc
imul
cmp
jne
ret
pop
mov
xchg
lret
mov
in
mov
sbb
rorl
in
lock
inc
mov
mov
or
pop
sbb
xchg
and
jnp
dec
xchg
mov
sub
mov
and
pop
xchg
push
jecxz
xchg
ret
jp
mov
adc
movsl
out
popa
xor
pop
aam
dec
push
inc
add
int3
push
scas
mov
cmpsb
dec
movsl
pop
orl
pop
mov
sub
arpl
dec
sub
fisttps
fdivs
clc
int
fucomi
pop
dec
cmp
sbb
and
dec
xor
fisubrl
xor
gs
sub
sbb
fs
pop
mov
sbb
jp
adc
shlb
test
mov
pushf
cld
stos
push
xchg
out
ss
jae
fwait
cmp
xchg
cmp
adc
push
in
mov
icebp
xchg
mov
mov
out
push
inc
fs
and
mov
push
mov
mov
repz
xchg
sbb
pop
jge
lods
jae
sbb
xorb
dec
adc
sub
lret
xchg
add
add
test
adc
add
jmp
add
rcl
mov
clc
add
bt
mov
shl
inc
mov
setbe
mov
test
cmp
jg
call
not
call
add
ss
cmpsb
rorb
cwtl
adc
mov
es
mov
xchg
adc
mov
jno
push
fwait
and
loope
cmp
fisttpll
loop
sbb
aam
dec
lret
stos
mov
xor
xor
loope
sbb
jmp
int
mov
lret
in
fildl
add
xchg
sbb
idivb
cmp
mov
dec
aaa
fwait
cmpsb
loope
in
mov
insb
inc
popa
mov
int3
shrl
es
les
iret
lret
xchg
xchg
icebp
in
push
aas
mov
jo
inc
cmp
sarl
cmp
fdivrs
mov
test
dec
aaa
mov
movsl
push
inc
fwait
sub
mov
arpl
inc
sub
das
cltd
adc
in
fcmovnbe
cmp
mov
jg
fldt
jne
movsb
cs
andb
in
sub
jne
pop
js
subl
mov
mov
aam
test
pop
push
test
cli
and
push
jmp
iret
scas
aas
fcmovu
fs
rorb
imul
repnz
jecxz
mov
push
test
add
add
in
add
add
add
enter
xlat
sbb
movhps
add
add
xlat
sbb
jb
sbb
add
add
pushf
lea
je
bt
add
movsbw
rcr
mov
call
nop
dec
and
fwait
cmpsb
setge
lret
push
insb
popa
or
xchg
push
nop
sub
lds
mov
nop
out
pop
aad
mov
push
insl
out
push
and
fld
je
mov
pop
push
icebp
imulb
jae
in
aaa
fwait
cmpsb
test
mov
popa
les
test
sub
adc
inc
xor
or
js
addr16
int
pop
or
or
jne
jge
adc
cmpsb
in
push
aam
cmp
xor
mov
xor
loopne
xorb
add
outsl
jnp
lcall
mov
mov
rcrl
xchg
pusha
in
sub
aaa
xor
and
push
dec
fucomp
mov
test
sahf
push
out
shlb
adc
jmp
pop
dec
sub
mov
push
pushl
popl
pusha
mov
pushf
pushl
ret
mov
jmp
push
mov
bt
test
test
pushf
movb
push
lea
je
push
bt
add
stc
bt
cmp
jmp
jmp
lea
ja
call
cmp
mov
fwait
cmpsb
jne
rorb
sub
test
xchg
inc
add
inc
and
lods
xor
inc
cmp
pop
shrl
jbe
sbb
jno
push
icebp
divb
xchg
aad
mov
fs
pusha
xchg
mov
mov
cmpsl
cmc
xor
bound
adc
mov
xchg
mov
fcmovnb
dec
daa
in
adc
sbb
icebp
mulb
pop
lahf
cmp
add
cmp
xor
int3
ret
lret
cmp
mov
pop
or
aam
mov
jge
dec
data16
aad
adc
lods
dec
pop
xor
test
push
sub
mov
popf
testb
movl
cmpsb
fmul
sbb
sbb
inc
jo
pusha
pop
pop
and
in
call
mov
aam
jle
push
into
pop
jecxz,pn
or
mov
dec
pop
cmc
xchg
adc
jp
dec
call
jae
bt
xor
call
btr
cmp
mov
mov
sub
jg
int
jp
out
ret
xor
rorb
adc
stos
sbb
cmp
xor
lcall
jmp
and
in
mov
mov
outsb
repz
jmp
es
mov
pop
in
stos
ljmp
jae
scas
xor
arpl
hlt
stos
lcall
test
sub
bsf
neg
btr
mov
dec
xadd
mov
sar
bsr
movsbl
add
btr
or
shl
bswap
shr
pushl
bt
xchg
mov
push
shr
add
movzbw
pushf
lea
movzbw
mov
pushl
mov
mov
pushf
lods
stc
movw
mov
cmc
rol
pushf
pushf
pusha
pushf
dec
cmc
cmc
stc
jmp
lea
jo
sub
cmc
push
jmp
negl
pop
out
addr16
sbb
dec
mov
xchg
jle
in
cmp
mov
add
stc
xchg
inc
mov
adc
xchg
mov
jle
imul
lods
ja
dec
in
xor
loopne
cmc
cmp
push
insb
mov
inc
es
cs
jl
sahf
loope
sub
cld
sbb
fwait
cld
out
xchg
pushf
push
test
inc
push
lcall
test
std
lods
sbb
stos
xchg
cmc
sbb
xchg
sbb
daa
fnsave
push
jecxz
insl
or
jecxz
ja
xor
frstor
mov
push
loopne
sub
out
imul
jne
pop
movsb
push
shl
nop
adc
push
or
xchg
stos
orb
pusha
xor
stc
lret
stos
xchg
cmpl
push
sbb
jae
int3
push
clc
leave
push
jmp
pop
mov
cmp
cmpsb
ja
imul
mov
mov
xchg
sbb
bound
call
fwait
rcrl
sbb
jg
call
insl
out
sbb
aaa
fiaddl
hlt
sbb
je
mov
scas
cmpsb
pushf
jns
aas
adc
aad
loopne
andl
lods
dec
and
daa
repz
fidivrs
movsb
push
enter
stc
xor
or
ja
movsl
jne
push
mov
lcall
mov
add
or
cmp
gs
mov
shlb
or
sbb
xchg
lret
xchg
jbe
fdivrs
cld
cmpb
dec
mov
cmpsl
lock
xor
mov
cmc
leave
mov
sti
jp
mov
lea
jne
btc
sub
mov
jmp
mov
lea
call
add
cmpsb
inc
ss
cmc
cmp
push
mov
cmp
adc
lods
leave
shlb
popf
add
sbb
xor
int
stos
push
sub
sti
mov
mov
dec
pop
ret
jge
xor
aas
fiaddl
push
pop
pop
mov
inc
mov
xchg
lcall
in
jge
adc
loop
cmpsl
out
inc
mov
add
vfnmsub213ss
xor
pop
xchg
and
ja
aas
arpl
and
push
mov
push
stos
mov
pusha
add
rol
or
ret
fadds
movsl
shr
pop
enter
add
mov
loope
jno
arpl
and
mov
ja
idivb
sub
and
test
xor
xor
inc
inc
cpuid
sbb
cld
incl
fsubrs
iret
ret
jg
mov
insb
roll
shlb
push
inc
inc
sub
pop
es
rcl
fs
int3
pop
cmpsl
ja
jo
push
xor
dec
push
ss
inc
fldz
push
pop
fcmovbe
pop
out
jns
je
or
sti
ljmp
adc
lret
add
int3
insl
fs
testl
bound
mov
xchg
mov
inc
and
clc
sub
pushl
pusha
movl
pushl
movb
lea
jmp
jmp
imul
lock
ss
jmp
ret
jnp
pop
push
clc
outsb
lcall
fildl
adc
leave
shlb
bnd
popf
roll
vpaddsw
jns
out
add
in
mov
adc
mov
fdivrs
in
ss
adc
movsb
mov
pop
in
fiaddl
in
ret
cwtl
test
or
pop
fmul
addr16
cmp
dec
inc
icebp
lods
sti
faddl
sub
aam
cmp
or
mov
cmp
fisubl
and
mov
lea
jb
cmc
jmp
stc
mov
cmc
add
bsf
inc
clc
movl
bts
mov
push
bt
cmp
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
mov
jg
pushl
setnp
bswap
mov
call
jbe
shld
push
xchg
ror
mov
shrd
clc
btr
neg
add
bts
shl
xor
mov
rcl
shl
btc
add
sar
movl
add
bsf
mov
clc
cmp
pushf
cmp
pusha
call
and
inc
push
cmp
shl
jne
xchg
dec
std
push
dec
nop
fcmovb
and
xor
cld
test
mov
jg
push
jl
jecxz
clc
inc
fwait
cmpsb
cmp
mov
sub
call
pop
int3
stos
dec
ss
xor
cwtl
add
out
rolb
add
shll
cmpsb
push
fwait
aam
jge
cwtl
sub
enter
dec
and
sbb
pop
sub
pop
xor
in
mov
push
sub
clc
pusha
xor
pushf
bt
not
mov
cmc
pushf
rol
test
bt
pushw
popfw
pushf
inc
jmp
push
pusha
movb
push
pushl
lea
jmp
mov
and
jne
call
sub
lods
inc
fwait
cmpsb
push
inc
std
imul
repz
pop
xchg
ljmp
lods
out
inc
xchg
js
pop
jmp
jo
adc
icebp
xchg
iret
frstpm(287
push
push
outsb
cltd
sbb
shlb
das
pop
shll
inc
sbb
cmc
loope
mov
lods
or
pop
fisubl
sahf
sbb
jmp
mov
clc
clc
push
shl
push
call
lea
ja
pushf
stc
movb
stc
imul
movb
push
lea
jle
add
pusha
lea
jmp
lods
lock
movd
mov
inc
aaa
add
mov
cmc
adc
xchg
into
stos
sbb
lods
push
pop
xchg
ja
rep
add
stos
js
xchg
mov
jecxz
add
or
roll
cltd
adc
dec
cltd
out
xchg
imul
mov
cwtl
in
aad
or
sbb
jmp
push
adc
lock
stos
stos
scas
in
fnstcw
xchg
enter
pop
sahf
xor
xchg
iret
fimuls
stc
jmp
mull
mov
inc
pop
dec
and
gs
jge
xchg
add
pusha
mov
out
nop
pop
cmp
fisubs
dec
data16
iretw
sbb
nop
push
aas
xchg
in
mov
xor
push
inc
xor
stc
or
mov
xchg
xchg
and
sbb
mov
xorl
test
out
and
push
iret
pushf
adc
push
int
or
rclb
std
dec
pop
daa
das
insb
jmp
ficoms
cmp
mov
pushl
pushl
mov
push
pushl
ret
movzbw
and
mov
neg
ror
mov
setp
cmp
sbb
inc
mov
jmp
xor
cmpsl
inc
fwait
cmpsb
push
push
lret
jecxz
roll
and
mov
mull
fwait
xor
xchg
jmp
sbb
je
xchg
jnp
push
inc
jmp
xor
movsb
xchg
into
loope
fiaddl
add
xor
mov
adc
repnz
add
push
and
subb
adc
pusha
movb
push
pushl
ret
lds
inc
fwait
cmpsb
xor
ds
pcmpeqw
imulb
jo
dec
xchg
jo
mov
pop
xchg
jmp
stos
and
faddl
push
jb
int
cmc
sub
dec
adcl
inc
sub
jns
mov
or
pop
inc
rcrl
sbb
or
and
stos
subl
add
cmpsl
xchg
mov
out
mov
pop
in
mov
add
xlat
pushf
rep
push
mov
pushl
movb
movw
lea
jmp
sbb
sahf
inc
fwait
cmpsb
pusha
arpl
cs
sti
dec
aaa
xor
orb
repnz
repnz
push
and
lret
aaa
mov
imul
pusha
movsl
repz
jns
ret
mov
popa
pop
lods
cld
adc
mull
aas
lret
mov
rcrl
negl
inc
lds
sbbl
xor
adc
ror
mov
mov
pop
pop
loopne
dec
push
lock
std
std
addb
inc
mov
ret
jae
nop
and
ret
and
push
cltd
adc
lret
xor
pop
sub
jge
or
adc
inc
xor
aam
pop
movl
clc
lcall
cwtl
and
mov
add
int3
inc
inc
xchg
xor
xchg
push
xchg
test
inc
int3
or
adc
jmp
adc
dec
cmp
pushf
lea
je
push
push
lea
jae
stc
call
lea
ja
sub
shl
add
sub
or
call
bt
push
jmp
call
clc
cmp
call
mov
bt
pushf
shr
push
stc
call
pushf
inc
pusha
mov
inc
clc
xchg
neg
bsr
mov
bt
mov
mov
pushl
bt
mov
bt
xchg
sub
mov
cmc
stc
stc
call
cmp
add
push
mov
call
movl
pusha
mov
movl
pusha
pushf
movl
pushf
lea
jmp
push
pushf
sbb
cmpsb
push
lods
sub
inc
mov
or
push
repz
sub
or
xor
inc
leave
sbb
fldenv
add
sub
cli
in
int3
lods
dec
enter
push
xchg
or
xlat
das
sub
mov
leave
fnstenv
pop
mov
into
es
pop
push
dec
xor
daa
jo
add
mov
mov
out
cmp
add
sbb
xor
xlat
icebp
ljmp
or
cmpsl
xchg
and
pop
sbb
and
adc
sbbb
lsl
adc
mov
fs
xor
popa
mov
sbb
sahf
insl
fwait
inc
das
or
out
in
jle
popa
icebp
testb
adc
jns
sbb
cmpsb
out
push
mov
imul
mov
inc
fwait
inc
das
in
xor
mov
lcall
jp
imul
test
enter
ds
inc
imul
scas
lods
out
in
les
dec
fwait
and
jns
sbb
adc
daa
icebp
sbb
nop
lret
fstl
insl
and
xchg
xchg
mov
sarb
cmc
dec
test
fidivrl
and
cmp
cmp
test
push
aaa
mov
test
mov
les
iret
or
adc
popf
xchg
and
lcall
adc
enter
test
or
les
pop
mov
lret
mov
dec
imul
xor
cli
jle
push
push
dec
fwait
cmpsb
push
lods
cmc
dec
int
dec
sahf
xchg
loopne
and
sbb
aam
or
or
and
jge
inc
sbb
aam
xchg
add
lcall
xor
adcl
dec
in
xchg
fisttpll
or
xchg
movsl
or
std
out
cltd
mov
repz
lods
fisttpll
int
lcall
mov
pop
pop
repz
dec
add
sbb
push
in
aam
cmpsb
sahf
movsb
sub
push
ret
sub
aaa
rolb
lock
push
xchg
and
add
dec
inc
ret
xor
out
loopne
leave
movsl
andb
stc
mov
lea
mov
rolb
mov
fwait
cmpsb
jnp
in
xchg
push
xchg
notl
dec
in
push
outsb
jnp
fstps
jecxz
and
add
adc
mov
xchg
jb
jg
mov
inc
loopne
lods
cmp
dec
cmp
add
sbb
jno
add
shrl
sti
jmp
xlat
rep
jp
push
leave
pop
jb
aas
dec
fwait
cmpsb
mov
imul
addr16
and
jge
lea
lods
cmc
movsb
pop
in
js
aam
adc
ss
cmp
mov
cmp
lcall
mov
add
sbb
mov
stc
add
ret
pushf
andl
jbe
negl
aaa
rolb
xor
iret
fxtract
lds
mov
dec
sbb
cmp
xlat
ds
imul
call
cmpsb
fs
jne
dec
mov
jae
xor
rolb
shr
fisttpll
lret
imul
or
gs
xor
jge
subl
push
xor
lcall
addr16
cwtl
xchg
sbb
cmp
xchg
jne
cmp
lds
loop
test
in
enter
cwtl
push
out
aam
mov
test
mov
mov
sub
jle
add
jp
scas
mov
lods
mov
push
test
and
push
or
cmc
ret
mov
push
sbb
mov
dec
xchg
dec
xor
jmp
mov
dec
fwait
cmpsb
ror
das
in
push
lret
clc
dec
aas
and
sbb
pushf
movsw
jmp
cmpsb
inc
lret
repz
std
lcall
xor
ljmp
push
out
push
pop
outsb
faddp
mov
push
cmc
rol
mov
mov
je
stc
push
shlb
dec
fwait
cmpsb
repz
imul
test
xchg
cmc
pop
ret
lock
in
jae
dec
loop
shl
mov
jle
inc
xorb
mov
push
rcrb
scas
xchg
aam
pushf
xchg
dec
and
repnz
mov
xor
out
dec
pushl
rol
jmp
movw
clc
mov
add
call
lods
pushf
rol
mov
jmp
pusha
stos
pusha
pushf
mov
lea
jmp
push
stos
or
cmpsb
and
mov
push
cmpsb
mov
adc
leave
lahf
dec
cltd
jg
lahf
lret
sub
into
mov
nop
lea
mov
cmp
lds
ficoms
mov
shrb
mov
dec
push
pop
push
mov
leave
cmp
repnz
sbb
movsl
add
and
dec
test
fisubrl
dec
fwait
cmpsb
je
int3
and
divl
mov
in
xlat
adcl
int
aas
xor
push
imul
loop
gs
push
jnp
in
mov
and
sbb
lods
xor
jne
adc
dec
aad
fbstp
jnp
mov
lcall
xchg
mov
insb
stc
mov
inc
sarl
fidivl
and
dec
or
inc
cmp
ret
and
in
xchg
into
mov
sub
mov
cmp
popf
mov
sub
cmpsb
aam
cmp
test
imul
push
in
lock
int3
or
jno
adc
insb
mov
pushf
mov
jecxz
push
cmc
aad
icebp
add
dec
adc
inc
cltd
adc
pop
push
clc
stc
cs
out
cmp
movsl
dec
fwait
adc
mov
les
mov
int3
ret
sub
jbe
loop
in
sbb
je
mov
pop
jp,pt
repz
mov
push
and
jecxz
mov
movsb
xchg
pop
movsl
fwait
sbb
sub
jb
adc
jmp
ror
xor
cmc
mov
cmc
push
call
testb
ja
push
mov
addr16
fwait
fwait
push
cmpsw
mov
rcl
bt
rol
pusha
push
stos
call
jmp
pushf
pusha
call
call
dec
sub
sbb
or
btr
jmp
movsbl
movsbl
movl
pusha
lea
movzbl
pop
lea
jmp
push
push
lea
je
pushf
push
push
adc
pushf
push
pushl
lea
jmp
add
inc
js
je
jb
arpl
jae
lea
call
pushf
pushl
lea
jmp
divb
cmp
cmpsb
and
pushf
lcall
jbe
push
in
int3
jno
scas
xchg
mov
pushf
fisttpl
cmp
iret
mov
add
push
mov
pop
shlb
daa
mov
hlt
mov
int
sub
sbb
shl
mov
jl
jae
shll
pop
inc
jnp
lds
adc
mov
scas
flds
scas
test
jmp
js
lds
imul
insl
adc
subl
imul
and
outsb
jne
testb
stos
cld
jbe
lea
js
pusha
test
fstpt
xchg
shll
outsb
lds
mov
in
push
sbb
shll
adc
or
ljmp
rolb
test
mov
or
movb
cmc
ret
in
clc
sahf
les
jbe
addl
jno
mov
inc
cmp
cli
cld
jmp
lret
jns
sbbb
sub
xorb
and
cld
jge
mov
inc
dec
mov
std
imul
xor
pop
add
clc
movb
push
jnp
push
stc
test
pop
and
inc
cmpsb
add
xchg
mov
out
fisubs
lea
negl
push
fwait
popf
sbbb
jae
add
popa
gs
outsl
add
out
cmpb
or
jmp
lock
lea
stos
ret
repz
into
imul
mov
imulb
jl
pop
lock
inc
mov
add
jno
lret
pop
add
lds
pushf
inc
out
fldt
aad
or
mov
stos
ja
lcall
je
lret
fstp
sbbl
mov
xor
cmpl
jns
inc
in
cltd
jne
data16
mov
add
stc
push
icebp
les
jno
outsb
sub
mov
aad
dec
or
push
pop
sbb
mov
sbb
jge
add
lret
xchg
cmc
insb
das
out
repz
mov
dec
insb
adc
fldt
push
lahf
popf
cmp
push
add
xchg
cltd
pop
push
cmc
inc
into
pop
inc
jbe
xchg
decb
or
bound
ret
adcb
call
cltd
cwtl
push
xchg
dec
fstpl
aaa
pop
lea
cmp
mov
pop
cli
cmc
data16
mov
mov
or
test
push
call
ss
mov
push
add
test
mov
out
sub
xor
inc
out
mov
mov
test
pushf
inc
cmp
cmp
sub
cmpsb
paddsw
sbbb
mov
lcall
gs
fcoms
test
daa
pop
je
sbb
shrb
sub
test
lods
push
cmc
jp
ss
jo
push
cmp
mov
lds
and
les
mov
and
cmc
testb
mov
jo
inc
lock
add
push
sti
sar
mov
lret
pushf
pushf
add
addr16
push
and
btc
mov
push
fdivs
das
mov
cmpsb
push
shll
inc
xor
push
jno
pushf
movsb
ss
mov
jb
mov
add
ljmp
stc
jbe
mov
cmc
dec
inc
cmpsb
cmpb
enter
lcall
out
vpaddusw
sub
inc
adc
pop
jb
jae
lret
out
fcomi
filds
adc
test
icebp
fs
jg
test
stos
dec
lret
inc
bound
mov
pop
mov
cmp
lds
test
andl
rcl
or
loop
mov
push
xor
hlt
add
loop
or
xor
push
mov
bound
jg
push
pusha
fildl
hlt
in
lcall
iret
xor
fnstcw
push
test
xor
xchg
and
or
test
daa
fsubp
push
inc
imulb
xchg
stc
lds
loope
mov
jl
mov
dec
repz
mov
push
andl
cmp
mov
mov
lds
pushf
and
cs
das
mov
arpl
mov
lret
sbb
faddp
in
addb
pop
fwait
jmp
popa
or
pop
mov
jmp
stos
cmpsb
xchg
jmp
scas
dec
cmpsb
sbb
fisttpl
adc
stc
lock
insb
outsb
sbb
add
jb
cli
les
xchg
scas
and
push
movsb
add
xchg
push
outsb
mov
cmp
inc
rclb
test
das
inc
insl
popf
xor
dec
hlt
jmp
push
js
dec
and
xor
mov
cmp
push
mov
inc
mov
stos
add
mov
sub
jp
adc
push
pop
mov
out
lods
or
outsb
inc
fcom
nop
addl
jnp
xchg
dec
movb
ret
and
cmc
push
mov
dec
jmp
popa
les
fdiv
mov
mov
sub
movsb
pop
inc
rcl
add
cmp
jae
sti
cmc
push
mov
add
cmpl
mov
jmp
inc
inc
xor
outsl
or
xor
addl
test
or
jnp
cmpsb
mov
das
or
push
jno
dec
mov
pop
sti
jno
jle
les
cltd
call
add
je
aad
pop
insb
outsb
sbb
push
jne
xchg
sbbb
pushf
pop
je
xchg
pop
movsb
mov
ss
addl
shlb
jae
pop
push
arpl
mov
xor
je
cld
fdivrp
adc
and
pop
into
outsb
push
push
add
fcompl
js
insl
pusha
pop
cmp
out
std
lock
sbb
sbb
add
jg
sub
sbb
rolb
aaa
aad
push
sti
push
cli
and
xchg
cmp
jb
dec
stos
or
lea
les
adc
jne
pop
sbb
shrl
cmc
xchg
jb
cli
fistpl
aas
mov
lahf
cmp
ja
incb
and
psubb
repz
push
rol
jl
mov
lea
push
push
and
add
mov
stos
xor
cmp
mulb
push
adc
addr16
insb
hlt
scas
adc
test
mov
cltd
data16
pop
je
adc
mov
or
xor
les
or
push
jo
test
repz
push
loopne
mov
add
imul
jne
push
adc
ret
outsb
in
int3
xor
rorl
test
xor
mov
fcmovnbe
mov
adc
adc
jg
jae
fwait
inc
nop
scas
stos
jmp
ror
jns
mov
adc
jle
repnz
cmpsb
pop
jl
or
mov
call
xor
sahf
add
or
mov
ret
ds
push
stos
add
outsl
call
xor
pop
shrb
push
inc
xorb
in
xchg
sub
mov
pusha
push
push
shll
stc
stos
outsl
mov
mov
cmp
movb
lret
popa
mov
je
mov
push
fcmovnb
out
std
add
in
jmp
and
test
xchg
mov
sbbl
mov
fcomps
adc
andb
out
jno
lds
xor
loop
aas
fidivrs
call
scas
mov
popa
jg
fisubrl
dec
fidivs
sti
test
das
ja
and
add
mov
dec
xchg
aaa
mov
jb
test
stos
add
push
cmp
cmpsb
mov
push
out
pop
ja
jle
cmc
andl
jg
mulb
mov
mov
stc
in
lahf
xor
mov
jne
cmp
cmpsb
mov
jne
mov
movsb
fldl
in
fstpt
inc
std
inc
lock
cltd
cmp
jge
or
dec
add
xchg
mov
repnz
xchg
dec
mov
jb
pushf
movsb
outsb
aad
jne
daa
mov
sbb
lods
or
jnp
rcrl
pop
mov
or
sbb
lret
out
scas
pop
js
fbstp
int
cld
hlt
fisttpll
jle
inc
adc
mov
popf
dec
pop
xorl
pop
jbe
xchg
rcrl
inc
push
lock
je
insl
test
inc
inc
add
shl
adc
rcr
push
mov
int
ss
jnp
adc
and
push
repz
outsb
jns
inc
stc
dec
lds
add
pusha
aam
fldl
mov
call
cmpl
mov
call
xor
mov
and
adcl
add
sub
jmp
sbb
and
add
xor
loope
int
sub
les
jae
decl
arpl
jge
pop
mov
mov
pop
jmp
push
movsb
subl
mov
outsb
fisttpl
mov
lret
xor
ud2
dec
scas
xchg
cs
icebp
jmp
push
and
push
cmc
fnstsw
push
cwtl
mov
ds
and
pop
int
data16
adc
mov
rcrb
outsl
or
dec
stc
clc
pop
fnstcw
not
mov
cmp
scas
inc
jno
aaa
mov
fmulp
add
lret
ret
lds
xchg
jae
cmpsl
cmp
push
test
ds
clc
sbb
pop
ja
mov
addr16
mov
in
mov
fistps
cmp
add
pushf
xor
mov
jno
cmpsb
mov
sub
xchg
je
outsl
clc
dec
jo
cli
jbe
movb
jle
dec
das
jmp
outsb
je
jo
jbe
pop
sub
popf
jno
lcall
std
and
notl
sbb
push
outsb
jb
icebp
adc
push
fidivrs
add
cmp
xlat
iret
adc
fwait
jnp
pushf
ret
mov
nop
cmpsl
cld
xor
xchg
sub
mov
pop
in
add
mov
add
or
mov
cmpsb
les
cwtl
test
insl
cmpsb
jno
incb
hlt
sub
lods
cmp
adc
sbb
loopne
iret
xchg
sub
xor
or
hlt
testb
subb
daa
cltd
dec
or
imul
mov
call
mov
mov
addb
push
or
sbbb
mov
sahf
xor
jge
mov
arpl
bound
mov
mov
insl
sub
add
ret
jmp
dec
and
or
jnp
xchg
test
mov
out
nop
jge
fdiv
xchg
call
movsl
dec
mov
cmp
jg
popf
cmp
fcmovb
shll
je
std
xor
jo
cli
or
cmp
lock
shlb
dec
inc
inc
repnz
es
sbb
push
add
jb
adc
mov
and
jge
jmp
adc
mov
insl
cs
xchg
adc
sbb
addb
lret
and
xor
outsb
push
insl
push
ss
inc
pop
push
pop
rol
push
fstl
jg
xchg
pop
sub
rorb
or
and
ss
pushf
jg
scas
ret
lahf
cmp
jle
jecxz
data16
les
sbbl
pushf
and
push
lds
pushf
xchg
outsl
rcll
dec
clc
cmp
std
cmc
adc
out
adc
mov
pop
cvtps2pd
pop
mov
hlt
and
add
xor
push
mov
cmp
mov
jno
push
dec
data16
jle
or
sub
xor
sti
pop
or
insb
or
inc
cmpsb
adc
mov
sub
lahf
mov
pop
pop
js
or
nop
add
icebp
mov
subb
cmc
insb
inc
fcmovb
cmp
and
jl
add
es
dec
jno
inc
push
mov
lock
mov
es
jl
ljmp
shlb
testb
pop
add
mov
outsb
mov
jmp
faddl
inc
mov
dec
xchg
aas
jae
dec
fld
pop
lea
push
popa
push
nop
fists
cs
pop
jnp
lea
inc
xchg
clc
add
mov
lods
lds
dec
cmpsl
cmp
push
ret
shll
arpl
adc
mov
fstpl
and
jnp
jae
xchg
jbe
pop
fcoml
aam
shr
or
inc
pop
mov
andl
push
or
mov
pop
xor
and
jno
in
scas
jecxz
movsb
aam
add
sbb
add
mov
ja
mov
xor
or
testb
gs
sahf
mov
movsl
inc
jecxz
push
loopne
add
mov
fldl
push
mov
lods
mov
bound
repz
lods
das
les
idivl
ss
stos
push
sbbl
je
and
lcall
xchg
jno
aad
mov
ds
ficoms
push
out
push
pop
negb
inc
mov
xor
dec
inc
test
xlat
pop
add
push
ret
fucomip
pop
lcall
out
dec
lahf
xor
rcrl
mov
es
cmp
mov
repz
dec
ja
jle
fwait
jae
and
or
decl
sbb
push
xchg
dec
adc
inc
pop
jb
push
dec
hlt
stos
lods
jge
xchg
gs
ljmp
adc
jg
inc
or
gs
jle
xchg
cmc
insb
add
push
jbe
addr16
scas
jbe
test
push
imul
sbb
js
movsb
mov
mov
add
mov
out
sahf
stc
cmp
ss
jge
fnstcw
add
inc
push
xor
rol
push
xchg
jmp
sti
lcall
into
outsl
iret
or
or
lds
in
loope
push
and
mov
sarl
arpl
xor
sub
addl
pushf
testb
jbe
xchg
and
cmpb
loop
jg
lea
sub
leave
dec
je
adcl
lds
push
les
aam
xchg
ja
push
mulb
push
push
dec
out
movd
add
insl
les
repz
add
push
or
push
pop
push
aad
lea
cmp
inc
scas
sub
fldl
pop
aaa
adc
jns
repnz
inc
add
sarl
jnp
dec
mov
out
je
jbe
popa
mov
lods
movsl
pop
arpl
mov
inc
sub
jnp
push
and
ss
fisubrl
insb
pop
push
push
inc
mov
jp
pop
loope
xlat
adcb
daa
fwait
cmp
xor
dec
xor
mov
sub
sub
sbb
xlat
mov
inc
out
fisubrl
test
popa
cmp
sbb
insb
or
inc
inc
int
fdiv
in
lret
adc
aam
adc
jno
je
ss
add
ljmp
pop
das
xorl
mov
loope
std
stos
xor
sbb
add
popf
mov
sbb
aaa
jo
add
jmp
xor
mov
xchg
mov
hlt
aam
fiaddl
sbb
lods
shll
xchg
sub
xchg
mov
hlt
rcrl
scas
loop
lea
mov
cmpsb
lds
shlb
jns
repnz
xor
push
mov
adc
jae
mov
test
cwtl
sbb
mov
cmp
movsl
push
rorl
mov
or
xor
jg
iret
inc
push
pavgb
pop
inc
xchg
jns
lea
dec
mov
lods
leave
incb
push
fwait
not
xor
push
xor
icebp
dec
std
push
xor
cmc
sbb
int
add
in
int3
push
icebp
insb
push
outsl
inc
pop
imul
adc
xchg
xor
dec
aam
inc
cmc
push
cmp
adc
jae
test
hlt
xorb
int
or
sub
xchg
sbb
jbe
mov
xchg
push
push
jno
fwait
cmp
inc
jecxz
test
sub
adc
rolb
push
icebp
scas
movsl
jno
sub
xor
sahf
and
add
xor
sbb
jl
in
xor
imul
fmull
mov
mov
adc
push
or
push
cmp
jl
jmp
ss
std
sahf
mov
pop
pusha
adc
mov
fsubs
jge
add
out
not
jge
inc
xor
inc
jecxz
std
outsb
jne
push
lods
xor
jb
adc
xchg
pop
push
jbe
mov
int
test
insl
inc
idivb
not
loope
xchg
push
lds
xor
gs
stc
mov
add
pop
insl
mull
sbb
movsl
movsb
mov
inc
mov
outsb
xor
jle
jl
inc
sub
mov
ds
jb
push
in
ret
dec
into
fadd
push
dec
stc
data16
pop
insl
jl
mov
es
stc
xchg
xchg
sbbl
push
mov
bound
lods
repz
xor
icebp
push
add
jle
push
add
gs
dec
push
gs
cmc
stc
xor
orb
lds
mov
mov
in
ja
iret
adc
shlb
popf
and
outsl
and
je
shrl
dec
sbb
shrb
outsl
fisubrl
shr
add
stos
outsl
fwait
jl
xchg
dec
ffree
gs
mov
repnz
xchg
jne
cmpb
pusha
sub
cmpsl
lcall
stos
lea
mov
jl
repnz
pusha
orl
push
adc
inc
or
and
repz
push
test
push
movsb
jle
fistpll
xor
enter
push
lcall
sub
inc
lahf
sub
jl
les
mov
cld
xchg
cmp
xor
iret
lea
hlt
jae
push
leave
jbe
lds
adc
xchg
shlb
sbb
and
xor
out
add
jae
inc
lock
and
jl
ds
xor
call
mov
leave
jmp
pop
pushf
or
mov
repnz
sbb
ss
fidivrs
inc
inc
dec
push
cmpsb
cmp
xchg
insb
fildl
outsb
adc
mov
int3
test
insb
jl
adc
jbe
lds
mov
ljmp
jae
ja
pop
cmp
push
push
mov
pop
stos
push
jmp
scas
movsb
xchg
add
sahf
mov
xchg
jo
mov
shl
lcall
sub
imul
mov
inc
push
pop
push
adc
sub
scas
fcmovnu
repnz
into
push
idiv
ja
popa
adcb
pop
je
push
mov
lcall
mov
mov
lods
xor
mov
cs
pop
cmp
push
lods
fwait
jmp
adc
pushf
dec
cmp
xchg
not
hlt
scas
lea
sbb
add
imul
je
mov
cmp
mov
int
push
ja
outsb
les
scas
sub
mov
cmp
in
aam
or
sub
lods
lea
inc
icebp
mov
sbb
incb
dec
movsl
adc
cmp
or
mov
mov
test
sub
js
jnp
lods
jae
mov
push
push
adc
xor
jno
je
popf
mov
fstpt
aad
movsb
dec
int
or
and
hlt
jg
ficomps
cmpsb
xor
stc
loope
xchg
or
inc
lods
jae
sub
cmp
cs
mov
cli
jnp
nop
out
stc
adcl
ret
outsb
mov
mov
sub
mov
fwait
jmp
aad
sahf
add
push
inc
inc
popa
xchg
incb
mov
sbb
dec
cld
stc
adc
cmp
xchg
and
push
ja
inc
shrl
mov
push
pop
sbb
cmp
jge
repnz
hlt
add
pushf
push
jno
inc
or
xor
insb
repz
enter
lahf
inc
cli
repz
cmc
ja
fcoml
fbstp
mov
push
ss
lods
add
outsb
or
jg
inc
add
and
xchg
clc
insb
xor
shlb
sbb
jmp
and
jae
lds
idivb
cmp
fldcw
xchg
les
subl
lcall
jl
jno
pushf
cmp
xchg
sarb
sub
push
ret
and
lcall
adc
jns
lcall
sub
in
xor
stc
out
std
dec
rclb
imul
xor
add
jns
and
cmpsb
push
insl
cmpsb
pushf
cmc
adc
outsb
dec
imul
hlt
notb
jbe
sbbl
les
push
inc
xor
pop
add
fstp
es
jp
pop
and
test
xor
add
fsub
xor
inc
scas
les
cmp
add
xor
shr
xor
pop
test
xchg
addr16
repnz
lcall
lcall
sub
ss
rcll
repz
inc
lea
xor
xchg
into
mov
inc
adc
mov
hlt
xor
mov
pop
stos
jno
inc
fcomps
in
clc
neg
das
pop
add
pop
and
mov
arpl
std
sbb
into
xor
cmp
imul
xchg
outsb
adc
aas
test
pop
out
ds
mov
sbb
clc
test
arpl
jns
dec
lods
push
sbb
insb
sub
xor
movsb
ret
pop
jle
repnz
mov
insb
arpl
in
mov
sahf
jbe
inc
pop
adc
pop
movsb
icebp
enter
add
cli
xlat
add
cmp
push
and
adc
inc
cmpsl
repz
sahf
loop
les
iret
sub
ret
and
imul
or
out
or
pushf
inc
ficompl
mov
mov
adc
jmp
sub
aaa
and
gs
push
mov
enter
pop
fwait
mov
inc
mov
or
call
popa
mov
sbb
pusha
xor
mov
pop
push
xchg
inc
mov
shl
dec
test
pop
addr16
popa
stc
mov
bound
scas
sbb
pop
les
push
outsl
fiadds
pop
cltd
inc
cmp
inc
jge
and
cmp
inc
inc
inc
mov
xchg
lret
pop
cmp
xor
mov
les
dec
aam
xor
sti
sub
ficoms
push
sbb
sub
jmp
js
cld
pop
ficoms
sbb
pop
test
movb
out
lret
cmp
popa
lds
repnz
mov
push
cli
adc
or
shll
movsb
push
popa
push
jp
mov
dec
and
out
xlat
mov
je
loop
rol
mov
push
divb
test
cmpb
jle
and
decb
mov
std
sub
mov
xchg
shrb
jge
mov
mov
aad
xor
lea
inc
ds
fidivrs
les
pop
int
or
or
test
sub
rcl
jae
cli
imul
xor
sub
jge
test
sbb
dec
into
cli
aaa
jno
jl
fstpt
iret
or
out
lcall
cltd
mov
sub
negb
and
push
pop
sbb
adc
out
ss
cmp
test
xchg
sbb
add
addr16
jno
ficoms
inc
or
add
jno
push
xor
inc
repz
dec
faddl
cltd
fsubp
lea
lret
xchg
data16
inc
das
push
inc
or
dec
xlat
iret
ss
and
repnz
rorl
insl
cmp
in
icebp
and
into
mov
ja
fnstcw
inc
das
outsl
adc
out
pop
js
in
outsb
out
out
inc
rolb
inc
fldt
jbe
mov
and
mov
jb
test
add
ljmp
call
push
loope
jnp
les
pop
fcomip
push
movsb
sub
push
inc
mov
rclb
lods
ja
fmul
orl
lods
int
xor
movsb
loop
lcall
aam
jg
inc
xorl
or
xchg
mov
inc
divb
leave
jne
addr16
repnz
imul
and
test
lds
pop
push
jo
push
fadd
adc
pop
pushf
arpl
cmc
das
fs
jp
test
push
sbb
movsb
push
testb
cld
arpl
repz
inc
shll
aad
push
or
inc
setp
and
mov
ss
push
les
cmp
pop
jge
pop
daa
adc
push
aam
push
jge
xchg
andl
idivb
xchg
lds
push
in
or
scas
sbb
insb
int3
mov
xchg
mov
adc
stos
jae
fmull
aas
xor
adcb
ds
dec
mov
jle
xchg
dec
loope,pn
lds
pop
mov
scas
jae
imul
cmp
not
add
out
ret
mov
pop
sbb
div
rcl
repnz
add
ljmp
push
mov
into
cmpsb
inc
adc
lahf
fst
jmp
les
fnstcw
dec
jae
pop
jno
cwtl
ljmp
repz
test
shll
push
xor
outsb
cmp
rolb
pop
das
cli
xchg
stos
testb
dec
mov
insb
xchg
divl
aam
lcall
jae
or
std
push
dec
pop
aam
std
adc
dec
mov
mov
lret
lods
cltd
insb
sbb
out
les
nop
dec
jg
jl
rcll
mov
jno
test
sbb
cltd
push
mov
jae
jbe
in
xorb
push
push
rorb
lds
mov
adc
pop
inc
cmpsb
cmc
out
cwtl
out
test
jle
les
add
test
loop
inc
out
roll
shlb
ljmp
and
test
aad
movsb
repnz
les
adc
repz
mov
pop
inc
clc
cmp
mov
dec
pop
fxch
xlat
mov
jl
aad
xchg
jmp
mov
jl
movsb
jle
sahf
je
xchg
adc
outsb
les
inc
xor
aad
enter
fisttpl
fildl
pop
shl
les
test
adc
add
xchg
pop
xchg
pushf
adc
sbb
xor
sub
mov
test
aam
cmp
mov
je
push
dec
mov
icebp
pop
les
mov
xchg
pop
int3
sbb
xor
js
icebp
mov
je
sub
inc
lds
data16
jle
mov
scas
int3
std
lods
cltd
mov
js
and
mov
push
sub
lds
inc
out
mov
movsb
in
jbe
fidivs
cmpsb
add
pop
inc
pop
push
or
stos
int
sbb
dec
mov
xchg
and
cmp
sbb
jl
es
fcom
sbb
jl
xchg
add
mul
add
out
mov
add
rorb
push
dec
mov
jge
loop
stc
out
push
sti
xchg
inc
mov
xchg
in
and
ret
jne
sahf
jle
pop
stc
push
sbb
inc
push
ret
movsb
jb
loopne
xchg
sbb
out
or
add
mov
pop
mov
ss
ja
test
test
and
je
xchg
cmp
push
mov
insl
int3
pop
shll
in
outsl
ds
mov
jnp
mov
cmpsl
and
pop
inc
mov
dec
xchg
pop
gs
cmpsb
push
add
cltd
xchg
incb
mov
xor
mov
fidivrs
mov
cmc
xchg
xchg
pop
sbb
push
mov
ret
xchg
inc
xchg
nop
xor
mov
test
mov
ret
xchg
push
dec
lds
icebp
jo
outsl
clc
cli
push
push
and
mov
rcr
mov
test
roll
cmc
in
sbb
fs
add
ret
div
aad
ss
lea
push
inc
push
and
xchg
sarl
sahf
lret
xchg
pop
out
push
inc
sarl
push
sbbl
into
jnp
insl
iret
std
xor
push
mov
pop
aad
dec
pop
mov
ds
jno
pop
and
push
adcl
jecxz
shr
mov
mov
add
inc
lds
cmp
dec
mov
and
orl
or
jp
pusha
xor
std
adc
cmp
in
xor
xchg
xor
xchg
push
add
xchg
xchg
push
sbb
out
bound
dec
push
mov
xor
pop
ret
push
push
pop
mov
jle
sbb
int
push
cmp
test
xor
xor
push
ss
push
push
movsl
mov
push
rcll
gs
jbe
out
fs
ds
cmpsb
sbb
mov
jbe
outsb
lods
ds
andb
add
pop
xchg
jle
cmp
lea
imul
push
adc
jns
pop
xchg
sbb
scas
das
xchg
cmp
mov
inc
cmovl
movsl
mov
adc
xor
shlb
sub
dec
movb
lds
test
sbb
sbbl
stos
dec
or
notb
xor
dec
mov
sub
les
ficoms
mov
inc
jecxz
add
jbe
push
lret
inc
data16
leave
mov
ljmp
jns
cmp
mov
rcr
out
out
shlb
andl
xchg
jmp
inc
dec
and
mov
sub
mov
lods
mov
popf
pop
pop
ljmp
push
test
and
mov
rol
ss
aaa
pop
cmpsb
pop
out
mov
mov
std
adc
test
and
pop
push
std
mov
xlat
xchg
pop
hlt
adc
into
lods
iret
daa
push
or
mov
fsts
xor
insl
mov
cwtl
xor
xor
xchg
and
lods
jne
xchg
push
sbb
sbb
push
mov
or
ret
jnp
dec
in
sarl
push
cmc
pop
xchg
cmpsb
pushf
es
add
nop
cmp
jge
mov
movsb
xor
or
js
outsb
les
pop
mov
call
push
inc
aaa
push
push
cmc
aad
mov
mov
adc
insb
cli
nop
aaa
inc
in
mov
lds
std
int
xor
into
aaa
mov
movsb
lea
fmuls
out
in
es
sbb
roll
xchg
out
rcl
test
cmp
add
adc
sbb
adc
xchg
pop
cmp
pushf
lock
mov
aad
ljmp
adc
std
adc
add
les
inc
lock
pop
loope
inc
add
das
stos
xchg
sti
mov
mov
lds
inc
xlat
add
mov
insl
jp
sub
adcl
test
aam
cwtl
fsubs
aam
stos
out
js
aas
push
es
leave
and
xchg
rclb
and
outsl
jmp
lock
push
sub
outsb
insl
jo
jae
sbb
ficompl
jle
mov
inc
inc
out
jae
lds
mov
outsb
aad
lahf
jg
inc
addb
mov
andb
clc
jne
daa
and
stos
add
movsb
jge
test
dec
aam
jge
ffree
enter
adcl
ffree
arpl
mov
les
dec
popa
inc
xor
sub
scas
stc
dec
rorb
aad
and
or
jg
cmp
pop
aaa
out
sbb
xor
adc
stc
ret
mov
das
mov
pop
cmp
sbb
movsb
rolb
push
or
push
dec
dec
cmpsb
xor
inc
jnp
insb
repnz
sti
pop
mov
add
inc
cmc
nop
js
dec
add
adc
movsb
jae
and
mov
jno
outsb
icebp
loope
push
jb
or
jl
aaa
jne
xchg
push
pop
in
inc
fisubrs
pop
cmp
imulb
repz
enter
repz
jno
fstl
ret
adc
push
ja
adc
movsb
push
mov
movsl
into
jp
stos
mov
xor
insl
out
mov
lods
stos
xchg
inc
je
test
add
outsl
and
mov
mov
pop
sbbb
aad
push
jb
loop
aaa
lcall
jmp
inc
or
xor
sbb
pop
or
movb
xor
xor
cmp
loopne
fisttpll
dec
mov
cli
mov
shl
fs
aam
aad
inc
jle
hlt
lock
lcall
push
addr16
jge
xchg
scas
jg,pn
fnstcw
sub
test
adc
hlt
sub
mov
mov
mov
cmp
movsb
lods
xor
jmp
sbb
ja
test
mov
imul
sti
rep
add
xor
bnd
in
pop
push
outsl
and
sbb
cmp
les
movsb
sbb
mov
fldt
adc
pop
popf
insb
add
in
loop
jl
or
mov
adc
jno
cltd
jmp
lret
push
lret
jecxz
jle
sbb
test
pop
inc
sub
cmpsb
lods
mov
adc
mov
aad
pusha
push
test
and
in
cmp
dec
je
lcall
stos
inc
mov
scas
and
adc
mov
sahf
or
rcl
popf
out
add
ficoms
ret
ja
js
shll
fldenv
subl
lods
sub
data16
in
xchg
fcmovnbe
mov
adc
mov
jb
call
pop
test
and
mov
cmc
les
cmp
movl
inc
dec
bound
pop
xchg
cmp
jg
xchg
cltd
xor
in
mov
movsb
sub
sbb
and
cmpsb
xlat
loope
xor
fcoml
mov
push
sub
aaa
xchg
jbe
push
jmp
xchg
push
dec
cmp
mov
mov
push
or
xor
xor
test
popa
xor
bound
dec
je
xor
inc
inc
mov
sbb
add
adc
adc
les
mov
push
cwtl
fidivl
cmpsl
lea
in
or
mov
jae
push
daa
pop
fadds
pop
aas
xchg
insl
xor
stos
sbb
lds
bnd
negb
fs
mov
faddl
ljmp
repz
xchg
jne
div
cmp
rclb
dec
mov
sub
add
mov
fnstsw
add
mov
pop
loop
jns
cmc
xor
pop
xor
add
stos
jne
jb
int3
in
push
fcompl
pop
cmp
xor
addr16
scas
jl
int3
out
push
pushf
push
lcall
lods
cld
xchg
xor
jge
jae
inc
loope
cli
dec
add
test
lret
xchg
into
in
jmp
jo
lods
icebp
push
pop
adc
push
aaa
add
repnz
jecxz
or
dec
or
rorl
push
or
cmpsb
stc
aad
sbb
adc
hlt
or
xor
aaa
cwtl
lds
lods
pop
xor
shlb
and
aad
mov
xchg
adc
divl
lds
imul
sbb
dec
aam
adc
loope
mov
into
movsb
adc
imul
sub
mov
pushf
sub
std
les
mov
xchg
in
repz
aaa
mov
scas
and
mov
pop
jg
jecxz
xorl
push
call
out
fadds
inc
daa
popl
mov
addl
repnz
lea
mov
ja
jno
out
cmp
lds
out
push
jbe
mov
clc
pop
jno
dec
jecxz
cmp
test
mov
lcall
mov
gs
ss
loop
inc
andb
scas
lret
lds
lea
aaa
add
cltd
mov
xlat
cmp
inc
dec
push
aaa
fstpt
mov
idiv
in
push
mov
jge
leave
out
push
xor
faddl
fs
mov
push
daa
sbb
jno
mov
xchg
icebp
loope
inc
inc
in
mov
les
sub
loop
push
insl
enter
jae
xor
push
icebp
sbb
les
cmpl
fisubl
xor
cmpsl
shlb
inc
push
pop
shll
and
out
cmpsb
pushf
xor
xchg
inc
push
repz
fxtract
add
xchg
pop
add
mov
imul
in
jnp
add
dec
sub
hlt
les
push
mov
clc
bound
xchg
cli
mov
aaa
out
xchg
sti
push
inc
in
jbe
hlt
xor
mov
lds
sarl
and
fcomip
pushf
pusha
dec
in
xlat
pop
movsl
push
xor
xor
adc
lret
mov
lret
cmp
fisubrs
jne
pop
cli
xor
adcl
cmpsb
inc
shlb
mov
mov
andb
out
sbb
adc
jae
loope,pt
xor
push
movsl
pop
or
inc
adc
in
je
fstps
js
daa
cmp
das
push
push
insl
mov
movsb
aaa
jecxz
dec
lea
insl
xchg
popf
adc
cmp
adc
push
push
in
xchg
mov
fisubrl
lock
rolb
outsl
xchg
cmp
mov
jb
daa
adcb
test
or
stos
popa
lsl
std
xor
call
xchg
mov
nop
or
adc
push
popa
nop
inc
lret
cmp
je
xor
pop
mov
mov
and
mov
mov
repnz
loop
std
lds
pop
mov
or
movsb
lods
les
cmpsb
lret
or
frstor
fs
mov
in
sub
jne
cmp
dec
dec
or
and
mov
xlat
dec
xor
faddl
xchg
flds
xor
ljmp
push
and
mov
sbbl
iret
sar
xchg
cs
cmc
out
jecxz
int3
mov
xchg
adc
xchg
xchg
movsl
fistpll
mov
test
orl
jae
in
repnz
or
lds
repnz
sahf
xchg
add
inc
aad
jns
lods
sahf
test
rdmsr
outsb
iret
test
xchg
xor
sub
inc
push
subl
xor
loopne
adc
call
cli
add
sti
mov
addr16
dec
lds
lcall
cmp
pop
insl
cld
cmp
mov
jge
iret
sub
jb
lea
adc
xchg
push
jle
push
pop
push
dec
daa
les
inc
adc
jg
ret
inc
sarl
nop
dec
add
xchg
sahf
les
mov
inc
in
mov
xor
inc
push
adc
outsl
leave
push
push
icebp
cmp
cli
iret
sbbl
xchg
jge
mov
decl
add
daa
dec
lea
xchg
lds
imul
xchg
std
xchg
lds
xchg
or
jb
cs
dec
xorb
xchg
enter
rcrl
xor
pushl
out
iret
lds
inc
and
xchg
cwtl
add
jle
test
add
cmpsb
in
les
ret
inc
lock
movsb
cltd
and
pop
icebp
les
inc
add
xchg
and
outsl
not
ja
repnz
int3
jae
pop
adc
cld
mov
vpmovmskb
mov
mov
xchg
inc
cmp
in
inc
pop
add
subb
adc
mov
cmpb
shlb
call
and
xchg
xor
mov
cmp
add
xchg
shl
push
pushf
jge
pop
sbb
aas
lods
shrl
adc
xchg
shlb
mov
testb
jbe
cld
jg
mov
nop
inc
jno
mov
or
sub
jecxz
fdivl
adc
aas
mov
iret
jno
mov
es
les
scas
aas
shll
add
into
dec
lods
out
sbb
sbb
cltd
clc
test
fiaddl
xor
cmp
jecxz
push
mov
and
dec
dec
stc
mov
hlt
ds
test
das
mov
rcrl
push
outsb
mov
shlb
and
scas
popf
dec
dec
sub
and
sbb
xchg
jmp
pop
cmp
jbe
lahf
mov
lds
sbb
pusha
repz
dec
sbb
pop
or
jae
test
out
pop
int
add
xor
adc
xorb
or
adc
sbb
aaa
push
push
sub
in
xor
cwtl
movsb
and
lcall
mov
dec
test
lcall
lret
sub
and
jbe
je
mov
jmp
pop
dec
adc
and
jp
xchg
bound
fidivs
mov
test
pop
push
cmp
or
shll
test
in
dec
inc
or
rcll
jne
sub
in
sbb
xadd
jno
aam
push
andb
push
ret
aad
jae
mov
das
sbb
ss
stos
mov
inc
push
xchg
iret
jmp
loop
pop
icebp
sbb
dec
mov
cmpsb
rorb
jb
data16
scas
jg
xor
inc
inc
icebp
inc
pop
test
pushl
sbb
stc
mov
les
inc
rcr
add
inc
mov
outsl
aad
scas
in
adc
cmp
sub
pop
in
push
mov
clc
push
pop
cmp
or
jns
iret
adc
jae
adc
cmpsb
mov
pop
add
nop
ja
pop
dec
dec
xchg
into
pop
andl
test
notb
mov
mov
nop
jbe
cmp
pop
movsl
and
int3
push
mov
ja
gs
add
jae
jbe
pop
outsb
push
add
shl
adc
outsb
test
and
adc
xchg
pop
dec
aam
loop
pusha
sub
add
sub
jno
dec
mov
sbb
ss
lahf
jns
fisubrs
cmp
or
pop
add
aaa
clc
arpl
movsb
cmp
sub
mov
es
in
inc
push
mov
stos
repnz
fcmovne
jle
stos
or
sahf
push
and
dec
xchg
inc
adc
cmpsb
roll
cwtl
push
dec
cmpsb
orl
add
jns
cmp
mov
out
or
add
aas
into
sbb
pop
cmpsb
orl
mov
cmp
loop
pop
fcoml
ja
push
shll
pushf
rcl
jmp
mov
xor
cmc
inc
popa
lds
xchg
jg
aam
push
cmpsb
or
mov
out
xchg
lds
mov
or
cmc
ljmp
cmp
mov
out
add
mov
fdivl
pushf
push
push
test
rep
adc
dec
jge
push
scas
and
cmpsb
in
pushl
std
mov
lds
mov
out
pop
jb
movl
mov
iret
loopne
iret
dec
xor
subl
insl
les
test
ret
mov
fadds
push
ds
movsb
jns
push
outsb
xor
lret
jmp
rcrb
xchg
jecxz
stos
gs
outsl
out
out
sub
loope
lahf
and
jg
jno
dec
cmp
aam
jo
cmc
xorb
sbb
jg
addl
dec
out
inc
mov
cwtl
lcall
fsubrs
ficomps
pop
int3
iret
inc
js
hlt
pop
sbb
mov
daa
dec
dec
jmp
mov
add
les
fistps
jmp
push
call
add
mov
mov
roll
pop
cmpsb
pushf
filds
push
push
sti
pop
cltd
or
pop
je
es
pushf
jbe
scas
sub
adc
pop
ffree
in
push
addb
call
dec
add
mov
imul
push
fs
clc
jno
into
sub
repnz
insl
fwait
dec
popf
jle
mov
xor
push
int3
insb
inc
pop
out
outsl
dec
cmp
ret
out
or
movsb
jne
lcall
sub
pop
addr16
outsb
flds
movsb
fiaddl
mov
icebp
dec
ja
jno
jge
lock
fiaddl
add
cwtl
push
push
js
dec
subb
mov
ficoml
push
rcrl
mov
push
dec
lcall
and
push
adc
rcrb
mov
sbb
ss
andb
mov
scas
pop
mov
cltd
mul
jnp
dec
inc
cmpsb
xor
pop
xor
adc
push
cli
jge
and
dec
lret
iret
test
jge
dec
sub
adc
mov
outsb
cmc
cmpsb
je
mull
push
pop
cmp
add
fadds
lcall
jnp
ljmp
adc
mov
pushf
lods
jnp
shrb
adc
mov
inc
jnp
lock
mov
xchg
jbe
bound
mov
jge
movsb
sbb
xchg
jp
das
xchg
mov
fnstenv
dec
jae
jl
xor
fcmovnb
out
dec
mov
popf
inc
cli
xchg
in
jle
les
cmp
adc
mov
loope
repnz
shl
sub
or
push
lret
cmpsb
imul
mov
scas
jmp
movb
dec
insb
add
mov
mov
loope
popf
xchg
popa
je
mov
mov
sarb
pop
pop
mov
xor
xor
push
out
push
inc
popa
cltd
sub
icebp
adc
mov
int
scas
push
adc
shrb
sbbb
pop
pop
into
pusha
push
loop
add
or
std
and
xchg
cmpsb
mull
inc
dec
testb
loopne
inc
divb
push
out
cmp
insb
xchg
pcmpeqd
xor
jns
repz
xchg
jnp
pushf
stos
xchg
jo
or
or
iret
jg
xor
jle
add
aad
jmp
das
pusha
cltd
mov
int3
and
mov
push
imul
push
pop
lods
out
inc
js
aam
xorl
lcall
push
into
mov
inc
mov
mov
les
dec
xorl
sbb
int
icebp
loopne
or
xchg
fmull
adc
sub
mov
xchg
fwait
int
ret
inc
pop
mov
jg
ljmp
insb
cmp
andl
mov
les
add
hlt
mov
adc
shr
mov
out
std
or
aad
add
push
seta
inc
cmp
pop
mov
jnp
neg
outsl
xchg
jl
mov
test
adc
sub
jmp
daa
push
add
aaa
xor
fsts
mov
imul
push
jae
mov
pop
inc
mov
rcrb
fiaddl
inc
add
add
adc
stc
lret
loope
sub
pop
lods
add
out
aad
xchg
mov
adc
sti
adc
mov
jo
movsb
xor
jge
cmp
pushf
lcall
ret
or
xchg
sahf
test
inc
in
jg
imul
xor
js
cmp
add
std
xorl
bound
adc
sbb
mov
dec
jbe
sub
lods
inc
insb
cli
cmp
rcll
pop
dec
pushf
insl
xchg
xor
mov
fmul
imulb
repz
xor
add
rcr
aam
hlt
cmp
pop
repnz
mov
pushf
pop
aas
out
pop
outsb
mov
scas
xchg
push
aad
dec
pop
adcl
ljmp
jae
pushf
jnp
xchg
inc
sbb
dec
xchg
adc
daa
pushf
cld
jb
jge
fisubrs
inc
adc
pop
leave
xor
jmp
sbb
fmulp
test
sbb
add
xchg
mov
out
inc
xchg
sub
push
arpl
push
gs
ret
mov
xchg
xor
aam
cmpsl
dec
fs
inc
jp
aam
subl
mov
dec
or
xor
call
xchg
pusha
ja
add
ja
jb
int3
out
push
mov
xlat
xchg
fs
aam
push
insl
mov
dec
and
test
inc
inc
jb
push
fsubl
push
xchg
push
dec
or
lcall
sbb
inc
mov
lods
jnp
loopne
xor
cmp
dec
dec
fnstcw
test
cmp
insb
push
ret
jp
shlb
test
adc
cmp
xor
inc
cmp
sbb
push
ss
idivl
test
mov
fld
xchg
jge
or
dec
pop
sbb
int
or
lret
fisubrs
mov
cmc
in
lds
jl
js
cld
lods
cmp
repnz
cli
pushf
dec
bound
ljmp
adcl
jne
out
test
mov
sub
hlt
ljmp
clc
cmp
in
shll
jno
repz
jo
movsb
and
jmp
push
xorl
test
jae
subl
inc
mov
inc
call
hlt
pop
into
faddl
inc
aam
stos
test
data16
in
shl
fnstenv
mov
stos
repnz
or
dec
jns
or
mov
fcoml
outsl
mov
adc
das
xchg
sub
sbb
dec
test
icebp
jnp
mov
inc
xchg
push
add
test
push
sbb
ja
xchg
jge
daa
jp
mov
mov
out
outsl
mov
aam
repz
mov
fnstcw
icebp
sub
sti
dec
sbb
adc
in
inc
xchg
ljmp
or
imul
jno
cmp
mov
dec
and
mov
addl
les
inc
and
push
lcall
xor
jl
push
fnstenv
loope
test
test
mov
push
in
mov
mov
sub
mov
sbb
mov
jle
out
mov
push
xchg
scas
shl
and
iret
mov
andl
push
and
mov
sbb
sub
movsb
out
aaa
les
fldcw
clc
in
push
push
jle
inc
ficoml
adc
jge
cmpsl
decl
ret
filds
sti
inc
movsl
jae
test
sub
or
push
aad
add
leave
add
lahf
bnd
call
lret
ffree
rolb
mov
sbb
scas
mov
push
jae
in
in
jmp
jge
dec
sahf
jl
fsubr
sub
push
mov
movsl
sbb
mov
or
and
dec
xlat
rcrb
push
idivb
pop
loope
cmc
cmp
les
pop
js
jbe
pushf
lods
jge
push
push
roll
cmp
push
xor
ja
cwtl
aam
lea
pop
add
add
inc
rclb
in
add
fsub
push
outsb
movsb
and
aaa
inc
ret
lods
test
add
cli
jbe
negb
dec
sub
jmp
mov
add
pusha
inc
loop
pop
fdivs
jbe
sub
mov
sbb
mov
inc
xchg
adc
cmp
out
sub
outsb
lret
jb
jbe
mov
push
adc
mov
cwtl
div
jge
xorl
xor
insl
inc
sbb
jmp
mov
xor
jae
out
dec
out
inc
and
xchg
jno,pt
mov
les
js
jno
jae
dec
adc
mov
popa
inc
adc
imulb
mov
xorb
enter
sbb
push
cmpsb
push
rcl
bound
mov
xlat
push
add
data16
sbb
outsl
je
push
or
in
pop
cld
stos
and
mov
insl
clc
daa
push
pop
iret
mov
ja
inc
les
jo
adc
lcall
fwait
repz
or
inc
push
sti
cmp
sarb
int
pop
sar
popa
sbb
or
dec
jecxz
xor
add
popa
outsb
pop
in
sbb
xor
repz
push
ljmp
adc
xor
and
sbb
cmp
mov
stos
adc
jecxz
aaa
dec
cli
insb
addl
stc
add
fcmovnu
dec
mov
test
repnz
insl
and
in
adc
lds
fsubrs
inc
les
pop
jl
mov
je
movsl
aaa
push
dec
jae
movsb
ss
mov
cmp
jp
lret
jo
fs
dec
int3
or
adc
cmpsl
add
in
xchg
test
jno
jnp
hlt
enter
in
adc
mov
fsubrp
push
fstps
sub
push
cmp
lods
je
cwtl
fdivr
dec
and
xor
push
js
sub
ds
mov
clc
adc
pop
repnz
jge
aam
test
icebp
in
cmp
and
leave
pop
lods
mov
xor
xor
inc
mov
lods
dec
pop
sahf
popa
iret
insb
mov
jmp
cwtl
cmp
adc
jae
movsb
testb
std
adc
decb
cmp
pop
mov
loop
scas
inc
lcall
mov
leave
shlb
int
push
lret
and
lea
out
imul
pushf
and
les
or
fs
fnstcw
fcmovne
pop
pop
fldcw
add
mov
xor
sub
xor
push
hlt
cld
jnp
test
les
sbb
jecxz
neg
mov
test
xchg
inc
fsts
fildll
add
pop
fisttps
leave
xorb
hlt
inc
add
mov
add
ja
sbb
mov
lods
add
inc
xor
jmp
add
dec
stc
pushf
data16
add
and
or
repnz
or
add
cld
sub
pusha
sbb
dec
adc
push
adc
fisubs
hlt
cli
insl
cmp
xchg
jg
iret
sub
mov
scas
mov
mov
add
dec
inc
fidivl
aad
in
rcr
arpl
fldl
add
jle
in
pushf
pop
pop
shlb
jnp
andl
fs
lds
jbe
imul
loope
cmp
stos
std
mov
mov
sbb
mov
mov
cli
js
jge
sbb
repz
or
loop
push
pop
lods
repz
sub
dec
cmc
call
jne
jle
mov
mov
jbe
rorb
pop
outsl
mov
adc
sub
cmpsb
insb
push
pop
inc
push
stc
jle
outsb
andl
and
in
test
or
cmp
mov
cs
sub
adc
or
js
cltd
stos
lds
lea
xchg
add
xor
ret
or
xchg
sbb
jg
xchg
pop
unpckhps
int
xchg
dec
je
pop
xorb
insb
or
push
lcall
and
mov
outsb
xchg
push
daa
or
bound
pushf
cmp
jge
jg
outsb
and
sbb
lods
dec
mov
test
cmc
add
xor
filds
jns
jno
mov
dec
adc
cld
cltd
jg
mov
jae
push
and
lcall
lds
sarb
out
adc
stos
jb
stos
or
gs
mov
fidivrs
add
shrb
std
push
add
cltd
sub
push
bnd
adc
dec
in
lcall
sub
sahf
push
push
out
push
cmc
xchg
insb
mov
subl
lds
lea
or
in
xor
stos
jmp
cmp
mov
xor
xchg
xlat
sbb
add
sub
aad
add
xor
popf
fwait
push
add
jge
or
adc
lds
aas
sbb
sbb
or
or
pop
lds
and
pop
jae
xchg
jg
aam
jb
les
xchg
mov
mov
imul
pop
cmp
cmpsl
aad
push
repnz
test
jl
xorb
sub
dec
leave
dec
pop
jg
jge
in
popf
lret
ret
pop
and
mov
lea
cmc
and
or
mov
aaa
or
fsubl
pop
cmp
mov
fnstsw
pop
add
inc
nop
je
xor
cltd
inc
in
jmp
xchg
sub
out
int
out
or
mov
xchg
mov
les
xor
scas
stos
idivb
in
stos
push
pop
dec
mov
jge
xchg
movsb
push
les
fnstenv
push
cmc
jl
bound
aam
inc
and
dec
orb
notb
call
mov
scas
pop
mov
jno
xchg
loop
movsb
aaa
ljmp
popf
aaa
adc
movsb
adc
cmpsb
cmp
add
imul
pushl
cmp
cmp
push
rolb
nop
mov
jp
shrb
lcall
dec
mov
cli
mov
jg
in
or
cmp
push
movb
stc
xchg
xchg
push
int
cwtl
shlb
xlat
les
pop
add
sbb
repz
or
fcoms
xchg
jno
rorl
stc
dec
dec
aaa
and
repz
lock
ret
mov
mov
sahf
in
in
cmc
call
into
call
divb
xor
xor
jmp
int3
dec
std
test
xlat
sbb
cmpl
adcl
push
sbb
pop
jno
mov
loope
cmp
js
lcall
xchg
sahf
shrl
push
or
adc
fwait
movsl
adc
mov
cwtl
mov
xchg
dec
or
or
loop
aas
test
popa
out
fmull
push
shll
jne
jno
test
shlb
or
xchg
pop
in
mov
jg
mov
popa
xor
push
in
test
fistl
gs
dec
imul
push
sub
jmp
or
mov
cmpsb
leave
add
sbb
enter
lret
jmp
aad
or
push
test
in
inc
xor
add
adc
das
stc
mov
sbb
lahf
dec
jecxz
push
mov
xchg
fists
fnstsw
push
or
xchg
pop
adc
push
pop
push
dec
mov
push
les
sbb
into
dec
nop
xor
pop
adc
pop
out
testb
out
lock
pop
lds
ljmp
shll
fcoms
rol
fisubrs
loope
ret
dec
ds
pop
rol
sub
inc
or
cmpsl
pop
cmp
and
dec
outsb
pop
hlt
in
push
adc
mov
cmpsb
repnz
jb
imul
iret
xchg
popa
lock
xor
lods
sub
shll
test
cvtps2pi
fisubrl
push
in
mov
mov
hlt
sub
mov
cwtl
hlt
ret
xchg
cmpsb
cli
mov
outsb
jle
mov
pushf
aam
xor
imul
sub
es
or
sub
cmp
insb
jnp
nop
push
inc
jge
fldl
shlb
cli
insb
mov
mov
jl
inc
xor
outsb
ds
outsb
mov
sbb
push
jno
xchg
stos
rorb
cltd
or
test
aaa
flds
mov
leave
add
cmp
sahf
push
fdiv
out
mov
jae
sti
push
pop
xor
push
jns
jbe
lock
and
insb
lea
fisttpl
into
sbb
in
jns
push
cmpsb
mov
les
movsl
repz
pop
lock
orl
out
cwtl
rolb
mov
dec
js
clc
lahf
shrb
cmp
loop
add
sarb
pop
std
insl
push
stos
add
push
xchg
test
mov
adc
je
in
aas
jg
mov
push
dec
jle
inc
xchg
scas
mov
sbb
add
sbb
fidivl
cmp
scas
xor
movsb
clc
aaa
movsl
cmp
and
or
mov
ret
mov
iret
inc
inc
pop
pop
fnstcw
add
cmpsl
scas
dec
out
lock
jle
pop
imul
outsl
rcrb
mov
xchg
cmp
dec
flds
jbe
mov
fcmovb
inc
insl
pop
adc
fs
ss
pop
push
dec
leave
jnp
jbe
ror
dec
test
xchg
cmpsb
jecxz
inc
cmp
jg
clc
mov
xor
ljmp
cld
jmp
jle
mov
fs
push
ljmp
cmp
jns
les
jecxz
into
mov
icebp
decl
mov
clc
ficoml
mov
push
incb
in
mov
shrl
cld
pop
dec
repnz
mull
and
adc
daa
aam
shlb
les
xchg
test
in
out
mov
rcrb
ljmp
adc
push
mov
jne
sbb
into
mov
aas
mov
push
arpl
ret
inc
cltd
leave
jp
inc
enter
cmp
bound
pop
repnz
daa
sub
pop
xor
jbe
mov
and
out
outsl
arpl
sbb
cld
mov
xchg
scas
jne
loope
mov
lods
lcall
mov
mov
add
jl
cwtl
movsb
scas
dec
lea
test
std
xor
cmp
rcll
jno
jle
icebp
sub
or
jp
lock
fistpl
pop
aam
mov
and
icebp
loope
xchg
mov
sub
fnstenv
jl
xchg
xorb
inc
add
aas
mov
cmp
sub
pop
outsl
pop
clc
pop
sbb
and
test
jbe
jno
xor
jne
in
je
adc
pop
dec
xchg
lcall
jo
mov
loope
popf
in
outsl
xor
fistps
or
push
add
pop
rorb
mov
dec
cli
add
adc
cld
push
nop
add
add
or
es
movsl
inc
sub
clc
pop
iret
push
xor
shrl
cmp
movsl
push
mov
sub
js
adc
pop
xchg
add
push
fistl
cltd
loop
and
mov
lock
scas
test
mov
cmpsb
cli
mov
leave
icebp
stc
les
std
jo
outsb
mov
xor
xchg
icebp
cmp
repz
xchg
outsl
pop
or
addl
movsb
jmp
cmp
pop
in
cmpsl
fiaddl
xor
mov
xor
sbb
or
rol
pop
jbe
les
cmpsb
push
or
mov
ret
je
hlt
cli
popa
repz
mov
mov
cwtl
sub
mov
cltd
ret
je
cmc
mov
lds
cmp
jp
add
dec
xor
fnstenv
and
out
mov
mov
sbb
xchg
lret
mov
inc
scas
sbb
test
pop
pushf
add
lods
inc
popf
enter
pop
lds
adc
mov
pusha
sahf
out
add
fmul
popf
mov
mov
data16
mov
rolb
jae
xchg
mov
jbe
pop
leave
pop
lods
cmp
mov
test
ret
sub
inc
jmp
inc
xchg
fimull
xchg
xchg
xchg
push
cwtl
xchg
push
or
lret
sbb
mov
adc
out
sbbl
aaa
jmp
dec
popf
stc
stos
mov
push
dec
push
ds
jecxz
aam
je
jbe
jp
cs
fsubs
mov
stos
jb
mov
aas
xchg
mov
and
inc
jns
inc
dec
xchg
mov
mov
mov
in
mov
cmpsb
sbb
cltd
add
ja
pop
xchg
je
sahf
or
pop
jns
mov
adc
adc
jns
insl
cmp
dec
iret
adc
les
xchg
mov
dec
cmc
lds
cmp
call
sbbb
and
in
mov
push
jae
in
jmp
inc
insb
adc
stos
xor
out
cmp
pop
sbb
fwait
lret
push
mov
jo
fstl
jne
or
clc
test
pop
dec
or
hlt
mov
sbb
add
mov
jg
mov
stc
sub
push
push
and
cmc
lret
out
mov
dec
out
xchg
loop
sub
dec
dec
in
mov
rclb
sbbl
adcb
inc
dec
inc
int3
mov
ret
addb
in
mov
vrcpps
inc
hlt
aam
outsl
rclb
adc
iret
sub
xor
out
or
mov
mov
loope
adc
mov
es
mov
in
leave
std
nop
and
jne
scas
data16
and
jle
sahf
lret
adcl
xchg
cmpl
nop
cmp
pop
inc
mov
test
aas
adc
addl
jns
add
mov
insb
adc
xor
mov
xchg
sarb
mov
fsubrs
cmpsl
ja
jp
lock
mov
outsb
stos
or
rclb
loope
arpl
cmc
sub
add
xchg
jae
jbe
mov
and
inc
hlt
push
int
aam
mov
out
jo
push
loope
xchg
insl
je
mov
pop
jns
aad
in
movsb
inc
sbb
idivb
hlt
push
mov
pushf
in
ret
movsb
pop
popa
subb
lahf
in
out
or
jb
dec
jo
in
mov
test
popf
jno
sbbl
out
jno
loop,pt
out
adc
pop
lock
adcl
adc
ds
mov
add
adc
add
xchg
mov
xor
mov
inc
pop
orb
fisttpll
or
xor
mov
movl
dec
inc
shrb
insb
mov
xchg
add
fstpt
and
repnz
fnsave
les
mov
rorl
pop
xor
cmp
add
pusha
lds
into
cmp
and
adc
and
xor
rcrb
jnp
sub
flds
add
jmp
je
dec
xchg
fiadds
inc
mov
aaa
cmp
cmp
sbb
test
cmp
popf
pop
je
cld
inc
subb
dec
push
mov
inc
outsb
pushf
test
mov
mov
pop
les
pop
cmpsb
push
hlt
xchg
hlt
add
mov
adc
jns
push
sub
cmp
jle
push
jae
push
and
cmpsb
xor
mov
mov
jmp
lods
push
xchg
lods
mov
stc
adc
iret
jl
nop
cmpsb
push
add
jbe
arpl
xlat
int3
dec
add
mov
adc
inc
les
add
stos
jnp
xchg
ja
call
ds
cmpsb
push
movsl
lahf
insb
pushf
dec
pop
and
je
push
sub
xor
push
xor
fadd
mov
mov
test
fists
test
stos
leave
and
inc
mov
test
orl
hlt
pushf
shl
cmpsb
adc
arpl
jmp
jae
push
dec
mov
sbb
jge
inc
in
mov
pop
lea
loopne
sub
cmpsb
mov
hlt
add
gs
hlt
dec
jns
pop
lea
mov
dec
cmp
mov
pop
jmp
nop
fisttpll
sbbb
xor
insl
repnz
les
and
mulps
hlt
outsl
xor
es
push
fimuls
xor
in
dec
pop
aam
imul
rcl
push
mov
push
cld
inc
rolb
mov
inc
dec
hlt
jb
rclb
outsl
adc
lds
enter
or
cmp
sarb
rclb
pop
dec
xor
jo
ds
fisttpll
add
icebp
test
dec
mov
jge
incb
test
sub
leave
das
mov
add
arpl
pop
clc
cli
push
mov
les
xor
dec
inc
inc
inc
sbb
inc
dec
mov
xor
mov
push
outsb
lock
push
aad
scas
mov
icebp
xchg
stos
leave
mov
or
push
adc
cmp
xchg
cwtl
outsb
inc
cs
and
sbb
push
in
mov
insl
cmp
scas
out
sahf
frstor
les
fidivrl
mov
jge
xor
adc
add
pop
inc
cs
stos
imulb
and
pop
xchg
lret
arpl
xchg
ja
imul
test
add
dec
test
jb
jnp
xchg
dec
dec
sub
push
mov
jbe
sub
push
cmpsb
jle
jb
jnp
out
jl
mov
in
mov
push
add
and
xchg
test
push
insb
negb
js
ffreep
xchg
es
imul
push
dec
std
pop
ret
aam
repz
lods
iret
sub
mov
fst
jle
lock
cmp
ss
ljmp
xchg
jae
orl
and
movsl
cmp
sbb
dec
shlb
les
fstpt
pop
gs
push
rcl
ljmp
int
fbstp
add
icebp
addr16
test
scas
ret
fcmovb
pop
inc
or
adc
jne
pop
fs
sti
cs
cwtl
jbe
push
push
loop
shl
jp
cs
jne
or
and
jno
cmp
adc
and
xor
fisttpll
test
jl
out
loopne
outsb
mov
xchg
popf
aad
push
inc
xor
insb
xchg
cmpsl
stc
into
cmpsl
loope
mov
xchg
stos
jae
mov
les
jnp
push
adc
pushf
clc
out
pop
popa
pop
xchg
mov
pushf
pop
repnz
sti
adc
mov
sub
add
data16
and
xlat
pop
mov
rcl
ss
fstl
or
incl
scas
insl
cmp
jae
jae
sbb
iret
dec
sub
repz
mov
shr
cli
aam
mov
cmpl
xchg
jns
lds
faddl
dec
dec
outsb
pop
aaa
mov
fdivl
loope
xchg
cmpsl
dec
cmp
cmp
cmpsb
lret
cmc
inc
xchg
mov
jle
or
stos
jg
ljmp
ljmp
push
adc
adc
idivb
jle
or
ucomiss
mov
jge
std
test
push
cmpsl
fildll
lds
fwait
cmpsl
push
stos
icebp
pop
inc
test
jge
mov
test
insb
repz
loopne
arpl
inc
cmp
mov
je
cmp
mov
shll
mov
inc
or
cmc
cli
scas
leave
iretw
js
cmp
lahf
xor
adc
into
mov
mov
pop
sarl
outsl
dec
les
mov
repnz
ss
and
mov
push
or
pop
jae
and
dec
sbb
xor
xor
and
adc
or
lahf
adc
push
cmp
rclb
aad
mov
dec
xchg
mov
dec
xor
xchg
lds
sub
hlt
cld
roll
jns
or
loop
fwait
mov
test
in
dec
repnz
aas
andb
mov
lods
loop
hlt
arpl
gs
movsb
jbe
xchg
dec
mov
daa
divl
int
jnp
out
dec
mov
negl
pop
jne
adc
push
stos
xchg
rolb
fmull
adc
dec
scas
or
add
hlt
xchg
fs
push
dec
jge
and
subl
popa
and
sub
pop
dec
xor
sbb
in
aas
push
test
ja
or
push
push
and
mov
les
stos
cmpb
test
flds
push
jg
lock
xor
push
and
jge
lock
fstl
push
out
notb
jg
mov
mov
pop
es
icebp
fdiv
xchg
loopne
adc
inc
cmp
aaa
xorl
je
cmpsb
andl
nopl
dec
or
and
cmp
push
jb
sbb
in
pop
push
xlat
mov
lds
jns
dec
les
xchg
xchg
mov
cmp
fnstsw
rolb
cmp
out
xchg
lret
xchg
pop
fisttpll
push
test
mov
movsw
stc
stos
cmp
sub
rcrl
dec
in
scas
mov
lea
pop
pusha
andl
in
movsb
jmp
inc
shll
sub
adc
xor
sub
mov
les
std
clc
add
ds
mov
fcmove
shl
cli
jg
cmpsl
inc
push
and
ljmp
repnz
imul
arpl
cmp
xor
out
ljmp
test
rcrb
sbb
in
ljmp
or
push
cld
les
iret
sbb
hlt
push
fnstcw
push
lds
inc
arpl
or
lods
xchg
loope
sub
or
or
or
push
loopne
insb
xor
jge
mov
sti
push
mov
mov
xchg
push
push
sub
or
mov
cmp
adc
jle
and
mov
adc
and
mov
fiaddl
and
dec
mov
out
xchg
xor
in
add
scas
clc
gs
xchg
jns
rcrb
repz
testb
sarb
aas
pop
arpl
int
cmpb
adc
outsb
inc
xchg
es
sbb
or
mov
mov
ret
in
jne
jmp
loop
rcll
mov
shll
mov
add
pushf
rcrl
scas
mov
popa
add
pusha
aam
out
popf
testl
dec
jl
and
stc
or
sub
bound
andl
repnz
les
sub
pop
pushf
adc
movsl
inc
sbb
cwtl
pop
jae
push
add
push
ret
lret
clc
test
sarl
xor
xchg
cmp
and
cmpsb
pusha
icebp
add
sbb
icebp
unpckhps
rcr
es
js
bound
cmpsb
scas
xor
xlat
movsb
jbe
dec
xor
sbb
xchg
sub
fcoms
xchg
jle
xchg
push
shrl
cmp
and
push
hlt
sbb
and
jecxz
jg
cmp
cmp
cmp
imul
fisttps
mov
cmp
sub
cmc
and
or
jle
add
add
dec
inc
adc
data16
imul
mov
inc
or
lret
mov
cs
clc
aaa
ja
sbb
fadd
mov
xchg
mov
leave
push
and
xlat
cli
in
xor
stos
repnz
push
adc
lds
les
int3
sub
sub
movsl
fadds
out
cli
add
pop
pop
cmp
repnz
mov
sar
xchg
cmp
push
divl
and
scas
and
out
inc
in
jno
inc
test
lds
adc
stos
xchg
loopne
mov
gs
mov
dec
or
add
aas
in
nop
insl
dec
xchg
xchg
loope
pop
lret
xchg
jo
sub
in
cs
cltd
in
sbb
mov
repz
pop
sbb
cmp
sub
cmp
je
xor
test
cmp
mov
fidivrl
xor
mov
pop
mov
outsb
movb
add
shlb
not
or
add
lds
leave
pop
dec
push
adc
cmpsl
cmc
push
into
mov
cmp
xor
jecxz
pusha
adc
fsubs
pop
fnstsw
ficoms
jl
push
push
ret
pop
rorb
mov
nop
in
push
ljmp
adc
fldenv
push
push
mov
sbb
xchg
adc
and
into
addl
lcall
mov
stos
sub
xchg
xchg
lds
cltd
mov
xchg
call
fildl
aas
sbb
ljmp
sbb
scas
jecxz
cmpsb
mov
xor
inc
jo
mov
push
shufps
and
xchg
inc
sbb
xor
fmuls
fwait
jge
mov
mov
pusha
adc
sub
sbb
rcrb
subb
repz
pop
sub
xor
insb
push
xchg
sub
fldcw
xchg
inc
sub
dec
movsb
inc
xor
orb
pop
ret
pop
pop
pop
mov
repnz
mov
daa
xchg
add
mov
or
cmp
pushf
add
sti
adc
cwtl
xor
movsb
sbb
leave
pop
std
daa
lret
rcrl
aam
cmpb
inc
push
fisttpl
xchg
out
mov
sarb
cmpsb
adc
add
mov
mov
add
inc
cltd
jne
js
ss
insl
xchg
and
lds
pop
test
mov
hlt
lcall
lret
adc
ljmp
outsb
and
mov
sub
sub
push
adcl
out
mov
arpl
lcall
ret
ljmp
xor
cmp
jno
out
pop
push
movsl
jl
cmpsb
lods
out
je
and
and
lods
cwtl
insl
or
mov
orl
jae
cmpsl
cmpsb
rcrl
leave
mov
cltd
push
cmpb
or
xchg
lds
in
push
push
dec
xor
xor
aam
pop
aaa
or
pop
notb
xchg
push
ret
push
mov
addl
mov
icebp
orl
mov
xchg
mov
scas
mov
rorl
jecxz
jp
in
lret
pop
movsb
push
sub
sub
sub
movsb
cmc
dec
call
outsb
adc
rcll
xchg
push
xor
imul
hlt
pushf
jne
jbe
loop
clc
xchg
sub
mov
scas
or
and
rclb
push
mov
test
sub
aas
cmp
xor
insl
mov
daa
fstps
fildll
and
mov
pop
adc
jmp
not
or
cmp
dec
mov
and
add
into
hlt
stos
push
xor
or
gs
test
daa
in
test
scas
inc
push
push
icebp
dec
test
mov
push
pop
jge
mov
jae
cmc
insl
cltd
cmc
imul
pop
cmp
adc
cmpsb
jno
jecxz
ret
add
sub
out
icebp
in
push
ds
push
sub
cmc
ret
clc
test
sar
cmpsb
add
outsl
mov
fists
push
cmc
inc
xchg
inc
jb
fldl
pop
xor
in
push
loope
scas
sub
gs
push
insl
icebp
jbe
movsl
cs
subl
push
mov
jns
daa
in
jbe
mov
lds
stc
aad
cmc
add
xchg
in
xchg
roll
sbb
mov
jbe
cmp
lds
divb
std
sbb
fisttps
cmp
loop
cmc
jge
shr
cmp
mov
inc
xorl
icebp
jo
or
lds
mov
test
lcall
jbe
push
icebp
cmpsb
imul
mov
das
jecxz
arpl
shll
push
lds
xor
inc
cmp
push
inc
sbb
cmp
xor
sub
adc
test
test
push
repnz
or
sub
icebp
jbe
add
gs
jbe
inc
add
push
shll
cs
aaa
add
push
inc
push
pop
std
pop
xchg
push
sti
std
jnp
mov
cs
push
imul
pop
ds
fsubl
dec
data16
xchg
cmp
mov
xchg
mov
imul
shll
push
jge
jle
fs
pop
aad
push
shll
jge
xchg
out
rcr
sbb
push
push
push
inc
xor
sbb
or
andl
cmc
lds
fcoml
mov
cli
shll
insl
bound
sub
es
cli
fldcw
lret
or
add
mov
adc
movsl
aaa
xor
mov
cmp
or
cmpsl
mov
dec
ss
sbb
mov
gs
cmpsb
aas
sahf
push
aam
lods
in
push
xchg
nop
dec
leave
iret
sahf
jg
cmp
cwtl
cmp
or
cmp
or
sub
jnp
fld
imul
les
jl
not
add
jge
sub
popf
jmp
fs
push
mov
add
sti
pop
sbb
adc
test
and
add
mov
pop
sub
mov
push
inc
mov
pop
dec
lock
and
push
pop
mov
lret
movsb
push
insl
inc
pop
adc
jb
mov
push
jae
push
rcll
inc
std
popf
jecxz
add
push
xchg
into
push
fcmovu
cmp
or
mulb
sahf
dec
cmp
mov
lods
scas
and
cmp
add
jbe
mov
test
xchg
call
mov
inc
testb
mov
shrl
push
jg
stc
mov
dec
sub
scas
jge
xchg
sbb
in
mov
sub
adc
or
out
mov
push
lds
inc
push
aas
pop
or
jge
out
sbb
pop
lds
lds
imul
mov
in
lods
in
add
push
outsl
loop
mov
lret
jno
lahf
xchg
movsl
lcall
int
pop
movsl
sbb
push
popa
push
and
and
pop
mov
lcall
jge
or
jo
push
loope
mov
iret
inc
lcall
lahf
cmp
scas
into
es
movsb
add
or
data16
fdivs
and
outsb
mov
jbe
imul
clc
xchg
inc
leave
adc
jge
shrl
pop
int
inc
ja
mov
das
js
mov
jbe
push
and
sbb
or
inc
mov
nop
xchg
inc
insb
in
aas
in
pop
in
lds
sbb
jecxz
test
sub
ret
repnz
or
out
push
scas
xchg
or
imul
xlat
lahf
cwtl
pop
bound
iret
test
stos
push
xor
or
cli
sbb
jns
dec
mov
enter
sti
les
fstp
jb
and
inc
test
les
fcmovbe
imul
sti
sbb
inc
xor
sub
sub
dec
pop
adc
jbe
aam
aaa
dec
aas
inc
iret
pushf
jne
push
jp
loopne
std
fs
popl
pushf
lcall
dec
out
mov
xchg
mov
std
lret
andl
arpl
in
rcll
or
rorb
scas
mov
in
xor
sub
mov
fwait
jle
cmpsb
mov
ret
lock
cltd
loop
push
dec
add
xchg
or
repz
sub
int
stos
push
ss
fnstsw
mov
sar
jmp
add
adc
insl
outsb
sbb
loop
cmpsb
negb
imul
pop
xchg
ljmp
mov
fcomp
popf
sub
push
mov
and
divl
push
ljmp
hlt
gs
xchg
popa
lds
push
iret
int3
idiv
add
push
imul
lcall
pop
xor
cli
in
jbe
push
and
dec
pop
sub
sbb
inc
mov
adc
not
pop
pusha
add
xor
xchg
jmp
cwtl
lods
fcmovu
mov
ret
sbb
fcomp
push
je
popa
sub
pop
hlt
mov
inc
adc
sbb
cli
sbb
cmc
nop
fldt
mov
stc
pop
lret
cmpsl
inc
dec
les
adc
in
inc
push
inc
popf
jg
fwait
cmp
ss
jae
adc
inc
fisttpl
cwtl
dec
xlat
push
iret
xor
mov
jmp
cmc
xchg
lds
arpl
pushf
scas
xchg
icebp
dec
xchg
pop
push
or
jbe
cmpsl
sti
cmpsb
jb
or
sbb
inc
out
and
loopne
inc
mov
dec
xor
jne
dec
xor
sarb
scas
je
cld
dec
and
push
inc
pop
adc
lods
and
cwtl
repnz
pop
sahf
pop
movsb
in
popa
pop
je
and
xor
mov
rcl
jmp
jge
clc
cmp
repnz
adc
je
les
push
sub
cmc
mov
jmp
xor
pusha
mov
sbb
xchg
or
das
in
or
mov
mov
es
mov
mov
gs
cwtl
scas
filds
dec
vsubss
jecxz
fdivs
adc
adc
xor
aaa
nop
adc
gs
mov
pop
jg
pushf
loopne
je
jl
sbb
je
cmpsb
inc
outsl
cwtl
les
fwait
in
dec
movsl
dec
pop
ror
pop
mov
out
add
dec
push
insb
les
sahf
fmull
jmp
jl
inc
jne
ficoms
jmp
test
adc
mov
mov
push
lret
in
dec
adc
fwait
dec
cli
sub
pop
int3
push
hlt
je
les
and
cmc
xchg
jmp
push
pop
xchg
movsl
add
mov
pop
xchg
aaa
mulb
or
xor
es
add
inc
aas
xor
inc
ret
nop
jbe
cmpsb
lahf
pop
xchg
xorl
stos
cmp
lods
dec
or
jle
lea
xor
mov
aaa
xchg
shlb
je
and
mov
std
and
mov
lds
aaa
hlt
out
into
dec
push
adcb
in
adcl
ffreep
subb
or
cld
movsb
or
mov
xchg
cmp
mov
je
jl
je
ret
adc
cmpsl
jmp
aaa
outsb
ret
pop
js
fildl
push
lcall
jmp
xor
or
pop
push
jge
insl
test
inc
mov
mov
push
leave
mov
stos
jmp
push
orl
jmp
and
jle
adc
sbb
mov
or
pop
cmp
arpl
aam
movsl
aaa
in
std
sbb
rorb
dec
push
les
jl
and
push
or
mov
dec
stos
pop
and
movsb
jle
xor
orl
icebp
jecxz
cltd
mov
mov
ds
int
jnp
test
mov
mov
mov
jb
pusha
xorl
enter
or
pop
jmp
push
mov
mov
mul
jb
scas
test
xor
int3
pusha
and
jae
dec
and
dec
into
shrl
push
call
inc
mov
aas
dec
rcll
jle
or
jb
mov
push
les
into
ficoms
jl
frstor
push
out
jl
gs
outsb
bound
shll
aam
pop
add
aad
int
mov
cmp
push
sub
loope
test
sub
xor
shl
jns
dec
in
cmp
or
test
inc
pop
mov
jbe
jo
pop
outsb
sub
test
dec
adc
mov
pop
and
add
jb
es
add
push
nop
out
mov
lcall
test
xchg
push
mov
mov
fistps
mov
lea
lret
data16
imul
xor
enter
popf
lea
cmp
pushf
push
fadds
mov
jmp
mov
test
mov
lds
dec
hlt
jne
jns
lea
xchg
in
scas
jge
xchg
hlt
sahf
gs
adc
sub
sub
jno
xchg
lea
stos
push
in
and
insb
adc
insl
bound
sub
or
mov
or
mov
push
lods
imul
adc
data16
inc
adc
cli
sbb
lods
pop
roll
repz
mov
push
xchg
xchg
cld
inc
inc
fwait
push
fcmovu
sub
push
push
cwtl
sti
ljmp
xorb
ret
dec
in
mov
jne,pt
add
fcmovb
and
inc
mov
xchg
daa
xchg
inc
addr16
shl
je
pop
adcl
xchg
xchg
or
inc
adc
xor
arpl
push
js
pop
mov
cmp
stos
loopne
mov
outsb
stos
inc
shll
pop
test
inc
mov
push
test
xchg
xlat
or
fnsave
jnp
mov
movsb
inc
cmp
sub
adc
add
in
mov
cmp
push
insb
aam
in
stc
fldl
pop
sar
mov
les
add
daa
or
xor
pop
jg
fidivrl
shll
xchg
in
jno
xor
out
iret
jo
sub
push
fistl
in
xlat
mov
fcmovnb
jb
add
outsb
push
ja
in
mov
cmpsb
fcmovu
scas
and
cmp
mov
lds
xor
and
pop
sub
leave
xchg
int3
test
push
adc
adc
in
jge
jbe
pop
jo
aam
add
jmp
pushf
rolb
lea
mov
adc
or
or
test
xor
stos
inc
xor
xchg
push
xor
xchg
jo
dec
repz
xchg
cmp
adc
or
mov
ret
stos
mov
push
ds
movsb
pusha
imul
xor
test
fs
idivb
inc
loopne
fsubrp
sub
in
repz
fst
or
idiv
cmpsl
push
push
shlb
imul
test
shlb
inc
xchg
aaa
shlb
insl
inc
lock
cld
mov
outsb
xchg
cli
test
cmp
arpl
inc
test
or
jno
jl
mov
iret
outsb
lds
cmc
push
stc
scas
pushf
xchg
lcall
stos
mov
pop
jl
mov
ret
popf
cmp
cmp
mov
pop
add
rcrb
xchg
push
ret
add
ja
cmpsb
shl
movsb
addl
dec
lret
dec
jae
xor
scas
inc
mov
ret
les
das
cmp
xchg
xchg
cmp
sub
dec
mov
hlt
add
or
sbb
fcmovnbe
sbb
mov
add
in
xchg
push
fidivrs
fistps
movsb
mov
fwait
mov
sbb
mov
mov
adc
pop
test
jns
mov
sub
jmp
inc
inc
inc
add
sub
stc
sub
cmp
push
dec
outsl
outsl
mov
and
lret
scas
in
pop
jl
es
ljmp
mov
mov
push
scas
repnz
stos
xor
add
data16
dec
xchg
imulb
and
push
bnd
sbb
les
pop
rcl
scas
mov
push
xchg
ffreep
push
loop
xchg
daa
xchg
xchg
inc
push
rcll
stos
jecxz
inc
fs
dec
cli
jmp
fdivl
inc
xor
add
cmc
sbbb
outsl
jl
and
xchg
in
aam
sarb
dec
dec
insl
stos
pop
or
lock
clc
cmp
add
fucomp
or
pop
pusha
in
xchg
clc
out
sub
xchg
jmp
ja
into
push
gs
sub
mov
xor
xchg
sbb
inc
fimuls
xchg
pushf
shlb
jg
js
push
mov
adc
and
xor
mov
mov
push
mulb
add
cmp
pop
cmp
out
out
jle
and
push
int3
mov
cmpsb
adcb
les
cmpsl
sbb
inc
daa
xor
fstl
sahf
dec
imul
mov
cmc
jge
jle
repnz
popf
lea
imul
jg
lea
dec
xorl
adc
hlt
repnz
lahf
mov
jbe
push
mov
movsb
stos
clc
aaa
push
push
lea
insl
jg
nop
jns
aad
sub
popf
pop
les
sub
push
ja
sahf
loope
jecxz
lcall
gs
rcl
stos
iret
xor
je
outsl
and
dec
push
in
in
add
mov
push
push
jp
xlat
jnp
fistpll
repz
add
and
int3
in
aas
es
div
jns
mov
adc
xchg
and
popf
mov
dec
adc
shlb
add
int
nop
out
scas
and
push
aaa
adc
sub
push
fidivl
fsubs
and
add
hlt
pop
arpl
pusha
inc
jmp
aas
xchg
out
adc
leave
and
dec
sbb
jp
stos
jae
mov
cwtl
xchg
cmpsb
adc
lds
adc
mov
or
lcall
push
add
scas
sub
mov
rol
add
jns
pop
in
push
into
jno
adc
jmp
mov
pop
push
xchg
mov
mov
les
ljmp
sub
popa
loope
fcomip
dec
push
mov
jnp
fstp
fstl
or
outsb
pop
enter
cli
rcll
jmp
out
push
adc
not
jnp
dec
lcall
icebp
ret
xchg
lahf
cltd
pop
andl
pop
fldl
mov
mov
data16
icebp
aas
push
cmp
out
clc
sub
enter
cmpb
xor
add
lahf
pop
rorl
test
stos
subb
movsb
lea
sbb
mov
or
and
push
inc
cld
mov
je
jmp
nop
sbb
lods
dec
push
cld
mov
dec
pusha
or
lds
inc
or
in
mov
insl
and
pop
xchg
out
std
mov
test
mov
cmp
fldcw
pop
mov
add
hlt
dec
in
push
std
outsl
sub
aaa
mov
fsts
jle
cmpb
pop
mov
jmp
push
and
gs
push
jnp
jbe
inc
mov
push
rolb
and
dec
scas
push
pop
les
int
and
repz
adc
mov
fistpl
or
xchg
push
lds
insl
cmpsb
test
mov
pop
xchg
jbe
cmp
adc
cmp
lock
push
js
pushf
jl
mov
or
or
lds
cmp
jmp
or
cmp
fmuls
mov
and
and
lret
aam
in
jns
cs
xorl
popf
jle
xchg
pop
or
leave
jae
lds
mov
stos
fisubs
shlb
mov
xor
out
add
std
ss
loop
aam
dec
mov
pop
lret
dec
jl
inc
stos
jmp
aas
mov
cmp
pop
pop
add
iret
cmc
and
add
cli
insl
push
add
mov
mov
xlat
test
mov
dec
pop
and
gs
shl
cwtl
and
repnz
lds
mov
adc
cltd
in
inc
ja
sbb
mov
in
mov
adc
xor
stos
inc
fdivr
cmp
mov
aam
cmpsb
movsb
std
in
dec
ret
pushf
test
outsb
inc
and
sub
jae
inc
xchg
cmp
aas
push
inc
movsb
outsb
out
pop
inc
cmp
and
dec
sbb
faddl
aaa
jp
pop
aas
dec
test
loop
jno
lds
in
pop
ret
movsb
mov
std
idivl
xchg
cld
bnd
mov
cmp
push
jb
data16
lds
add
mov
inc
mov
lods
fwait
xchg
call
or
ret
xor
imul
mov
rclb
shrl
jbe
jbe
jp
lea
dec
sub
cmpsb
int
insb
push
in
mov
cmp
arpl
xor
or
aad
inc
jno
adc
cmc
outsl
cltd
cmpsb
out
sbb
jl
dec
fidivrs
jle
jno
sub
mov
lretw
add
dec
jae
incb
and
iret
sbb
aam
repz
addr16
repnz
jne
mov
daa
sarl
sub
add
add
fcoml
jne
outsl
jmp
mov
mov
sbbl
add
lahf
push
xchg
rclb
xchg
popa
out
repnz
push
sub
adc
lret
lret
cmp
les
cmp
mov
add
pop
int
repz
decb
mov
cld
add
enter
sbb
sub
sbb
sar
mov
out
or
mov
xor
stc
test
nop
or
movb
adc
inc
mov
sub
sub
fadds
ficompl
popa
sbb
push
lahf
test
pushf
fwait
repz
jmp
and
dec
les
ljmp
jae
and
les
or
push
dec
out
jmp
cltd
mov
in
mov
jle
xchg
das
dec
cli
andb
adc
jns
pop
es
testl
mov
sti
in
push
push
mov
mov
loope
pushf
test
icebp
scas
dec
adc
and
sub
pop
scas
outsb
iret
jg
les
sbb
cs
jnp
lds
inc
sbb
pusha
mov
push
lret
fcmovb
ret
jp
incl
adc
mov
into
outsb
and
out
add
inc
adc
loope
push
sti
fistpll
add
cmc
aad
push
cs
sub
in
jnp
idivb
andl
or
add
int
leave
xchg
repnz
mov
jbe
pusha
push
sbb
push
or
inc
addr16
jmp
cmp
int3
aaa
iret
stos
add
mov
mov
and
call
jbe
fs
jo
fiaddl
notb
adc
in
mov
xor
jge
sbb
dec
dec
pop
pop
int3
xor
mov
jbe
add
push
lcall
jg
jge
ret
cld
and
push
pop
and
mov
cmc
iret
jle
je
add
nop
xor
sbb
adc
outsl
hlt
repnz
jae
lock
loop,pt
ficompl
mov
aam
mov
inc
adc
ret
mov
je
int
fisubrl
stc
outsb
outsl
fimull
inc
dec
jno
lds
sbb
cmp
sbb
gs
mov
out
fistpl
inc
pop
shll
or
js
lret
aas
adc
fcmovb
xchg
dec
dec
lret
pop
mov
mov
fucomp
sarl
xor
pushf
push
fisttpl
and
push
mov
dec
and
les
fwait
test
jno
les
hlt
stos
jno
dec
movsb
insb
repnz
mov
mov
jle
movsb
pushf
ljmp
das
sub
cmc
outsb
data16
lds
xor
xchg
ja
shr
pop
ret
mov
ss
mov
sbb
loope
mov
int3
add
xor
aam
push
iret
mov
jbe
insb
mov
insb
xchg
fdivrl
stos
cmp
repnz
mov
mov
xchg
fildl
icebp
sub
jmp
dec
std
dec
xorl
lods
pop
push
cmpsb
test
xor
iret
fwait
por
out
dec
jnp
jg
movsb
sarl
in
data16
pop
in
push
add
daa
push
aam
inc
adc
jp
mov
inc
or
fiaddl
add
xchg
add
lds
xor
js
cmp
shlb
add
inc
push
push
mov
xor
cmpsb
mov
cltd
and
xchg
dec
shl
out
div
and
fstpl
mov
scas
push
jl
xlat
in
icebp
mov
mov
ljmp
movsl
jle
or
pushf
lret
stos
mov
inc
adc
push
or
pop
insb
dec
cmp
cmpsl
dec
fst
push
clc
sbb
xchg
bnd
add
in
aam
jmp
add
je
push
push
dec
bound
rolb
ljmp
xor
repz
es
sub
cmc
pushf
pop
std
mov
jecxz
aaa
add
add
push
cltd
cmp
or
pop
adc
jg
pushf
out
sbb
mov
iret
clc
push
repnz
std
test
add
in
push
jbe
lds
les
push
popf
pop
jge
push
pushf
cld
cli
lret
inc
shl
stos
ja
add
inc
or
js
ljmp
lcall
mov
jg
and
cmp
xchg
imul
imul
add
lock
sbb
int3
xor
and
sub
push
imul
xor
jmp
sarb
inc
aaa
jge
scas
repnz
pusha
iret
rorb
sbb
mov
mov
inc
xchg
into
js
push
loope
inc
stos
hlt
cmc
out
or
sti
dec
jle
ret
and
std
dec
mov
rcrb
insl
sbb
dec
loope
push
xor
jb
nop
sbb
cmp
dec
insb
clc
jns
imul
fstp
cwtl
in
stc
push
jb
fldenv
mov
xor
and
mov
mov
pop
repnz
add
fwait
mov
xchg
cmp
pop
iret
mov
push
les
or
dec
sub
and
pop
lcall
jnp
sbb
push
lds
xchg
je
iret
movb
dec
cmp
inc
add
fs
andb
adc
cmc
insl
les
inc
faddl
dec
ja
ja
es
loope
dec
jl
out
jno
pop
xor
jle
mov
fildl
add
dec
jno
dec
hlt
adc
popf
and
shll
mov
cltd
adc
jnp
in
rclb
inc
jp
movsb
inc
mov
les
pop
push
adc
jp
mov
ljmp
adc
cld
sub
jnp
sbb
addl
and
jae
jl
cwtl
lock
rcl
test
push
outsl
ja
xchg
adc
sbb
cmp
xchg
or
inc
xor
xchg
enter
test
sbb
xchg
mov
cmp
negb
mov
dec
dec
dec
xor
push
movsb
les
ja
fs
sti
repz
stos
cmp
les
dec
jne
cwtl
clc
jle,pt
push
jmp
jae
push
cwtl
bound
repnz
pushf
lds
jg
jnp
jmp
in
jne
inc
pop
imul
lea
push
push
fildl
gs
clc
cmp
xor
pop
jae
push
insb
test
push
xor
test
lea
xor
mov
sub
xchg
push
dec
xchg
cld
add
adc
fimull
shll
push
lds
test
lds
mov
xor
leave
mov
mov
adc
mov
movsl
jle
loopne
gs
push
dec
or
sub
ret
in
adc
push
push
push
jge
xor
jl
lret
mov
mov
cmpsb
jae
sahf
cld
jecxz
test
jno
add
xor
xor
xchg
and
xchg
test
jge
push
pop
fnstsw
jne
rcrl
mov
push
pop
dec
inc
jle
pop
stc
inc
pop
in
ret
jle
mov
push
repz
adc
arpl
in
xor
pop
std
ss
mov
filds
inc
int
xor
cmpsb
stc
ficomps
cmp
pop
mov
pop
or
pop
sti
xchg
int
ds
pop
inc
push
pop
fnstcw
movsl
xor
aad
mov
pop
push
lea
push
push
fnstcw
pop
jnp
bound
xor
inc
push
lea
fs
lods
lret
xor
cmp
xor
xor
cs
push
xor
lea
xchg
or
arpl
cmp
pop
push
icebp
adc
repz
xorl
jle
xor
mov
sbb
xor
lds
popf
xor
push
lds
xor
adc
rcll
xor
int
xor
dec
dec
rclb
fnstenv
add
cmp
ds
cmp
adc
pop
jb
push
and
xor
push
lds
mov
mov
lds
dec
mov
jge
pusha
imul
pop
out
push
sahf
lcall
cli
dec
rep
cmpsb
addl
fldt
xor
mov
fcomip
mov
xchg
jae,pt
push
mov
les
dec
cmp
ror
cmpsb
rcr
push
rcrl
cmp
adc
in
or
out
push
mov
add
cltd
xchg
cs
movb
and
mov
jl
inc
ret
mov
sbb
test
into
cmc
cmp
icebp
ja
lods
sub
test
inc
sbb
jnp
loope
pop
insl
imul
je
clc
pusha
push
mov
pusha
lds
jnp
push
mov
sub
je
cmpsb
andl
pop
jo
ret
inc
lcall
xchg
add
movsb
add
jl
ret
int3
popf
mov
lea
lds
shll
mov
pop
xor
imul
cmp
sub
call
movsb
scas
loope
jne
lds
outsl
outsb
ret
leave
or
cld
xchg
test
gs
inc
jl
inc
fildl
adc
adc
pop
mov
xchg
push
stc
in
adc
test
push
popf
add
iret
ja
jbe
jbe
xor
inc
and
movsl
adc
push
lds
mov
rcrl
daa
or
or
adc
arpl
jae
inc
xlat
insl
out
das
aas
xor
scas
mov
cmc
inc
mov
sub
aad
negb
ds
and
aad
cmp
ret
movb
insl
test
mov
mov
xchg
push
lds
xchg
adc
xchg
movsl
push
int
pop
mov
popf
ret
lods
mov
movsl
in
jge
add
inc
test
mov
int3
pop
add
aad
nop
cld
xchg
fldcw
xchg
cmp
and
icebp
push
xor
sti
push
arpl
out
mov
test
pop
inc
sbb
mov
push
push
sub
mov
int
adc
loopne
xor
xlat
test
rcll
mov
cmp
and
push
mov
cmpsb
cltd
add
fimull
cmpl
mov
sbb
inc
jb
push
fldl
imull
shll
xchg
pusha
push
icebp
push
push
push
in
pop
cmp
lds
lea
cmpb
xor
jnp
loopne
xor
adc
push
xchg
repnz
xchg
jbe
sub
into
lds
lret
xor
jae
pop
aad
push
add
out
mov
gs
repz
data16
sbb
xchg
idivb
int
jbe
punpcklbw
mov
inc
sbb
mov
dec
aas
cmp
lea
push
int3
xor
push
or
cs
mov
inc
sbb
fidivrs
das
in
xor
aad
jbe
cmpsb
jecxz
std
push
cmp
fdivrl
xor
xor
mov
push
cmp
sub
xchg
push
shrl
push
dec
roll
loop
lret
cld
inc
pop
movsb
lods
jns
outsl
mov
sbbb
dec
imul
mul
pushl
dec
dec
jl
sahf
jge
jle
les
into
xor
in
pop
fsts
repnz
mov
push
xchg
or
insl
lahf
jbe
push
lock
les
push
sbb
jmp
sbb
fs
and
sbb
out
in
jne
daa
lcall
dec
hlt
int3
movsb
pushf
les
push
cmp
test
sub
add
cmpsl
sub
inc
xchg
ret
pop
aaa
ljmp
push
mov
adc
ja
ret
xchg
add
scas
gs
rcrl
outsb
roll
adc
mov
fwait
inc
cmpl
xor
ret
xor
jge
out
mov
xor
add
or
cmc
or
lahf
lock
mov
jmp
and
lds
pop
xchg
movsb
add
scas
sub
sahf
sbb
cs
mov
xchg
test
rcl
push
push
mov
scas
jns
das
cmpsb
or
stos
andb
insl
dec
mov
outsb
gs
adc
lods
push
lret
or
les
jle
ret
mov
xlat
push
clc
ret
push
inc
mov
push
dec
iret
outsb
cmpsl
push
add
cmp
sub
and
subb
sbb
leave
mov
mov
xlat
std
lds
push
jno
sti
and
mov
push
or
push
mov
loopne
mov
or
in
cs
sbb
dec
and
mulb
dec
sbb
adc
push
aam
ljmp
stos
or
loopne
cmp
rolb
and
dec
cmp
sub
cmc
push
les
jno
shlb
adc
push
mov
sbb
int3
pop
pushl
push
add
cld
lock
mov
fisttps
fsubl
push
outsl
cltd
inc
xorl
outsb
jle
les
cmp
fcmovbe
xchg
lea
nop
stos
fidivrl
into
fdivrp
fstpl
lcall
aam
hlt
out
jge
pop
push
push
dec
xor
lock
xchg
mov
xchg
push
lds
loop
adc
jg
pop
shll
arpl
jo
and
hlt
into
movsl
fldcw
mov
or
mov
jl
je
xor
lret
dec
fisttpl
lds
jnp
dec
in
les
jmp
rcrl
mov
cmpsb
je
or
stc
cmpsl
mov
adc
je
add
jne
ja
push
or
or
loope
xor
or
pop
mov
cmp
sub
dec
das
lcall
lret
pop
or
adc
cmp
cmc
mov
fimull
dec
lds
pop
repz
xchg
out
daa
adc
mov
inc
sbb
fisubrs
out
repnz
push
sub
pop
xor
mov
jl
rcr
jnp
dec
nop
jae
ret
lock
loopne
lock
call
sbb
mov
mov
mov
clc
cmpl
add
loope
cmpsb
fbstp
adc
mov
jl
dec
pushfw
lcall
xchg
lods
jbe
int
fcomp
ds
push
es
subb
mov
mov
repnz
fwait
or
xchg
pop
dec
inc
icebp
insb
cmp
js
in
sub
dec
mov
sti
rcll
push
push
in
inc
and
dec
cmpsl
or
pop
add
lret
divb
jo
add
imul
or
adc
mov
les
or
stos
pushf
or
sub
inc
adc
and
push
popf
xchg
xor
cwtl
lods
and
icebp
xor
mov
xchg
and
jg
sub
sub
push
push
push
adc
push
mov
push
jmp
dec
fsubs
insb
subl
xchg
popl
pop
mov
cltd
lds
and
jecxz
rcl
adc
insb
inc
movsb
test
sbb
jg
cmp
lea
fidivs
les
adc
repz
push
cmp
inc
test
or
lods
xor
or
addr16
outsb
test
ja
out
shlb
test
test
rcrb
fiaddl
jp
xchg
jg
sub
lea
outsb
testb
js
xchg
inc
sub
mov
mov
push
sarl
mov
push
pushf
fcomp
out
push
repnz
pop
fsubrl
pushf
xor
mov
shlb
jns
xchg
inc
lock
loope
call
repnz
xchg
and
aaa
inc
push
xchg
jge
and
jl
pop
dec
jmp
addl
ret
pop
cmp
mov
jno
lret
idivb
cli
mov
jg
arpl
sbb
je
push
fbld
rcrb
popf
in
loope
xchg
jg
int
xchg
ds
dec
or
xchg
int3
dec
push
push
or
aas
push
xlat
lea
cmp
sahf
test
xchg
jp
inc
pop
push
nop
xchg
repnz
or
fsubrs
aad
mov
mov
dec
jae
push
stos
gs
dec
aam
adc
frstor
nop
test
ret
enter
js
icebp
jne
rol
jecxz
pusha
pop
ljmp
outsb
fistl
mov
and
inc
movsb
mov
push
lret
cmp
lods
mov
clc
fwait
or
or
mov
jno
and
daa
shl
jmp
nop
mov
fimull
hlt
lret
mov
mov
push
xor
jns
out
hlt
mov
js
and
fwait
in
fnstsw
leave
push
xchg
sub
and
jno
rcrb
pushf
movsl
addl
shl
dec
mov
ljmp
cmp
in
dec
shrl
jnp
rorl
int3
imul
icebp
or
mov
push
mov
loopne
les
push
dec
xor
loope
xor
pop
xor
xchg
cmpsb
in
test
icebp
cmp
xchg
mov
xor
push
insl
hlt
adc
out
cmpsb
lods
sub
test
adc
push
sub
push
sbb
shl
scas
xchg
std
xchg
into
lds
gs
xchg
cmp
cmp
sub
jle
les
push
pushl
shll
data16
lds
out
mov
orb
sahf
icebp
das
inc
xchg
loopne
mov
lcall
cmpsb
xor
nop
out
dec
jo
movsb
inc
cltd
sub
cmpl
jb
dec
fs
lds
imul
push
std
add
repz
sub
cmc
mov
pop
lds
xchg
pop
imul
ficomps
push
or
cmp
cmp
mov
fdivrs
pop
sbb
jns
adc
pop
mov
stc
movsl
jbe
sub
sarb
scas
jno
aam
in
fwait
repz
or
xchg
daa
out
scas
pop
push
push
clc
les
sub
jnp
inc
mov
fadds
jbe
cltd
dec
jl
sbb
in
push
jmp
cmpsl
mov
adc
lds
add
adc
jecxz
or
pop
pop
mov
aad
or
mov
arpl
push
xorl
cmp
hlt
mov
rcl
sahf
imul
ror
adc
adc
cmp
add
jecxz
jne
cltd
jbe
sub
shr
mov
orl
in
xchg
loop
adc
fsubrp
xchg
jmp
cmpsl
dec
pop
dec
inc
loopne
pop
or
xchg
sub
fadds
mov
inc
les
push
insl
ja
add
xor
dec
aaa
fisubrl
enter
fcmovne
mov
lea
or
and
pop
ds
adc
shrb
adc
mov
cmp
jp
xlat
and
sti
repnz
aas
fildl
inc
into
xor
xchg
fs
data16
adc
xlat
cmc
mov
and
or
bsr
stos
data16
lds
mov
ds
out
and
ret
or
push
imul
fucomip
mov
popa
iret
xor
inc
jl
xor
dec
add
and
jae
add
sbb
cld
clc
mov
imul
xchg
out
scas
loope
mov
mov
jp
test
sbb
pusha
cltd
bnd
add
mov
xchg
dec
cmpsl
mov
jmp
fmuls
cld
cld
loop
sbb
in
pop
stos
sbb
addl
cmp
popf
and
cmpsb
inc
loopne
stc
lret
std
or
pop
pop
inc
mov
sub
imul
inc
xchg
pop
insb
sub
shll
sahf
sar
dec
in
test
stos
jne
jle
mov
movsb
ss
ror
jno
movsl
aaa
mov
ret
push
adc
jno
or
fiadds
pop
into
imulb
and
pcmpeqd
and
xchg
mov
xchg
icebp
and
xchg
aaa
js
mov
jns
sarb
icebp
push
sub
pusha
and
movsl
sarl
out
mov
xchg
push
mov
xchg
mov
out
les
mov
cmp
in
hlt
xchg
mov
xor
lret
dec
lahf
cmc
clc
add
out
std
dec
pop
mov
sub
imul
shr
xor
mov
fisttpll
ret
adc
in
sub
iret
out
cmp
dec
pop
inc
pop
fucom
ficoms
cmp
inc
aad
xor
pop
jae
dec
inc
movsl
sub
xor
xor
es
mov
pop
bound
jne
push
xor
or
lret
pop
sub
ffree
lahf
shrb
mov
mov
cmp
out
xchg
push
lahf
inc
sbb
adc
xchg
mov
xchg
or
ret
cmp
dec
lahf
and
pop
push
fmul
loope
xchg
lcall
mov
js
mov
pop
xchg
rcr
pop
push
fwait
rolb
mov
loopne
and
lcall
mov
jno
imul
sub
or
cmp
leave
cmp
gs
sub
inc
cli
xor
push
add
std
shlb
movsb
shlb
inc
cmp
jl
add
pop
fstl
mov
mov
sbb
sbb
add
adc
adc
add
aad
jb
aam
mov
xchg
jb
jle
xchg
push
jbe
push
jmp
sahf
cmp
adc
out
loop
test
shl
leave
jnp
jno
inc
ja
lods
lods
jl
leave
sarb
sub
push
in
arpl
stos
pop
ja
xchg
sbb
and
push
cli
adc
dec
mov
add
mov
push
shll
push
std
inc
lods
and
mov
pop
cmp
or
pop
lds
std
mov
inc
mov
cmp
std
mov
aaa
fucom
orps
enter
cmp
fldt
mov
cmpsb
ret
out
xchg
pushf
mov
xchg
in
inc
mov
jno
xchg
cmpsb
mov
xchg
aad
decb
xchg
sub
lock
sbb
repnz
jbe
popf
mov
ret
hlt
xchg
test
push
push
jno
and
jb
push
adc
and
nop
repz
arpl
pop
pop
mov
arpl
pop
std
pop
dec
mov
daa
add
ljmp
addl
jecxz
mov
jle
pop
jnp
xor
jmp
jo
add
or
push
je
fisubl
add
jl
dec
mulb
mov
adc
out
ljmp
lret
pushf
mov
and
lea
cmp
and
pop
daa
es
fistpl
addl
iret
pop
cmp
pop
adc
xor
cmpb
stos
cmp
jno
add
les
fsts
scas
push
and
pop
popf
pop
mov
jle
faddl
mov
pushf
in
rcr
xor
push
mov
xor
pop
mov
pop
mov
out
sbb
popf
xchg
out
fstpl
jb
pop
test
mov
cli
cltd
dec
xlat
jns
push
mov
sahf
add
outsb
aad
lods
xor
cmpsl
mov
jecxz
lock
insl
les
ss
roll
inc
out
lods
jle
adc
jg
outsb
xchg
push
pushf
jne
es
cmp
icebp
ljmp
cmp
push
add
test
dec
pop
loop
inc
xor
test
repnz
xor
cmp
push
popa
push
fdivs
jl
mov
mulb
xlat
jb
pop
outsl
je
pop
scas
xlat
mov
and
outsb
rol
xor
pop
adc
shlb
call
shl
mov
jle
pushf
les
stc
ss
jl
sub
movsb
repz
lea
std
or
xlat
aad
rcll
lret
pop
nop
mov
fisttpll
arpl
sub
insl
stc
inc
notb
push
pop
mov
fldl
pop
negb
mov
sar
aam
je
rorb
je
mov
loopne
jne
repnz
adc
iret
fs
test
push
iret
mov
mov
pushf
pop
repnz
pop
dec
faddl
mov
push
test
adc
pop
std
stos
adc
sub
aas
call
push
popf
pop
inc
das
xor
int3
mov
mov
sub
stc
push
imul
sub
lods
inc
pop
add
cmp
cltd
jmp
aad
shlb
les
loope
sub
xorb
iret
pop
dec
lcall
ds
les
mov
adc
int
mov
lods
daa
imull
and
sbb
adc
inc
xor
mov
mov
fs
xchg
pop
test
push
push
rcrl
push
cltd
mov
xlat
jg
out
lea
std
outsb
adc
insl
out
lret
sbb
fldcw
movsl
ja
pop
cs
out
fdivs
jge
add
in
dec
fmull
dec
adc
icebp
sub
mov
fxch
subl
mov
jmp
leave
movsb
cmpsb
sub
inc
xor
dec
sub
xchg
cmp
xor
mov
aam
rcrb
jno
shrl
jecxz
inc
fisubrs
movsb
cmp
faddp
mov
insb
shll
add
adc
in
push
or
xor
mov
mov
cmp
mov
add
push
mull
mov
jle
sub
xor
arpl
jle
insb
adc
adc
and
divl
sahf
push
mov
ret
add
cltd
mov
ja
pushf
jle
mov
or
loop
imull
gs
shll
clc
dec
mov
push
xchg
lock
jbe
sarl
push
xor
mov
add
mov
pop
cli
push
cmp
mov
mov
push
out
movb
decb
vpmovsxwd
inc
add
or
lea
adc
mov
xchg
aam
cmp
test
gs
add
xchg
jmp
testb
outsb
mov
push
dec
jp
mov
adc
aaa
mov
mov
icebp
fdivs
xchg
push
sbb
rclb
push
mov
dec
xchg
cmp
dec
pop
ficoml
enter
aad
pop
outsb
cwtl
inc
xchg
lahf
fs
nop
test
jg
lods
jb
jbe
sbb
pusha
rclb
xor
fcomps
push
add
testb
jle
push
xor
in
xchg
cmp
pushf
ret
adc
and
fimuls
mov
mov
cmp
mov
stos
mov
push
sbb
dec
in
rclb
xchg
jmp
dec
je
stos
mov
push
inc
iret
into
aaa
test
xchg
addr16
shrl
adc
out
imul
fstpl
shlb
inc
mov
add
std
sub
stos
dec
imul
cld
aam
or
lock
aam
pop
movsb
xor
lea
jns
in
inc
enter
mov
fmull
xchg
or
adc
cmp
std
mov
adcl
dec
sbbb
lock
adc
jl
inc
test
mov
iret
jmp
rolb
xor
movsb
scas
push
cmp
adc
fmuls
in
add
cmpsl
stc
inc
cmp
inc
push
add
jae
xchg
outsl
shl
cmp
push
push
in
add
dec
imul
mov
sub
xchg
fsubrl
insb
cmc
mov
push
inc
fldl
jge
data16
xchg
aaa
mov
hlt
add
in
mov
add
ja
adc
jp
cmpsb
dec
mov
js
es
cli
mov
pop
int
cmp
jmp
jne
enter
jae
call
test
push
fwait
mov
dec
test
sarb
outsl
in
frstor
repz
fimull
jae
cli
dec
jns
out
add
aad
or
test
xor
shll
pop
jecxz
sub
jae
sbb
or
mov
cmp
scas
aas
jae
ss
fdivl
in
mov
loope
mov
out
adc
hlt
cmc
les
shll
stos
and
cmp
mov
out
notb
incb
jmp
and
xchg
lods
and
outsb
add
jnp
ja
test
push
fstpl
add
mov
loope
mov
inc
ret
or
pop
shll
in
xor
andl
pop
mov
push
xchg
cs
add
sbb
jl
sub
cmp
ja
inc
lock
xchg
jne
jge
arpl
movsb
clc
fmul
pop
test
cltd
fnsave
inc
ficompl
repz
mov
mov
leave
sbb
stos
stos
cli
cmp
cmp
ret
fs
mov
stos
mov
sub
pushf
inc
je
test
cmp
lds
adc
xor
or
jae
in
out
aad
sub
lds
xchg
mov
adc
push
int3
negl
pop
adc
aaa
sbb
mov
push
movsb
add
test
or
mov
sti
xchg
sbb
jno
aad
push
pop
loop
xchg
call
fisttpll
pop
jle
faddp
jne
addl
push
mov
fs
pop
out
in
pushf
ss
movb
aad
lds
adc
movsb
mov
int
push
int
push
sarl
dec
push
push
cwtl
iret
addl
xchg
xchg
adc
xchg
jecxz
jne
movsb
stos
hlt
jbe
jecxz
sbb
cwtl
icebp
stc
cli
popa
in
push
dec
fistps
incl
pop
lea
inc
add
pusha
pop
aaa
test
sub
xor
pop
jne
push
xchg
pop
push
add
test
jecxz
xor
in
rcrb
xchg
add
daa
jo
into
es
test
inc
xchg
sahf
dec
in
clc
shlb
mov
out
test
xor
ss
pop
stos
or
iret
dec
scas
jbe
test
aad
and
in
push
xchg
cmc
mov
jb
inc
je
sahf
fidivs
cmpb
int3
xchg
repz
push
xchg
pop
je
jp
fwait
pop
cmpsl
push
daa
shlb
sbb
lods
add
imul
data16
push
sub
mov
mov
pop
xchg
sub
push
fcmovnb
dec
mov
push
enter
push
xchg
jmp
push
call
cwtl
add
mov
inc
aaa
bnd
in
jae
lds
push
inc
decl
adc
pop
pop
adc
xchg
aam
out
cmc
mov
mov
insb
out
xchg
fildll
add
ret
sub
jnp
out
push
lods
loope
mov
jne
mov
rorb
jge
jle
ja
ss
sahf
mov
les
iret
pop
cmc
mov
rcrl
or
flds
push
iret
roll
mov
push
fs
xor
movb
les
sar
adc
mov
cmp
inc
xorb
clc
push
xlat
sub
ds
test
rolb
push
inc
out
pop
jne
fdivrp
frstor
inc
int
pushf
pop
inc
aaa
lcall
bound
les
jns
cmpsb
clc
xor
fcmovnbe
movsl
jg
xchg
xlat
mov
jnp
jno
loopne
movsb
cmpsl
icebp
mov
ret
xor
adc
mov
push
in
push
push
adc
call
ljmp
shr
nop
xchg
lds
dec
popf
add
mov
inc
repnz
mov
mov
jle
xchg
or
sbb
inc
ss
pop
mov
adc
fsubrl
popf
bound
sub
xchg
sbb
notb
xorl
xchg
scas
fmul
mov
orl
les
xor
sbb
push
jo
subb
xchg
push
loope
inc
sub
mov
into
hlt
mov
out
mov
push
sbb
testb
ljmp
or
imul
cltd
mov
out
dec
jge
dec
push
loopne
jnp
shlb
cmp
xor
and
shll
pop
sbb
jo
add
outsl
fwait
mov
or
js
ja
rolb
mov
shll
movsb
jb
lahf
imul
repnz
dec
mov
pop
mov
std
clc
sub
pop
pop
cmp
xchg
dec
pop
cld
fisubl
repnz
pop
push
jp
loop
test
add
fldenv
outsl
pop
adc
hlt
dec
outsl
sub
push
insb
es
jne
lock
mov
lds
push
and
xor
jb
scas
and
push
pop
cmpsb
and
inc
aam
mov
jns
sub
lea
pop
mov
pop
add
repnz
mov
lock
push
add
mov
outsl
mov
mov
fildl
xor
mov
cwtl
jae
mov
out
hlt
movsb
repz
stos
mul
mov
rolb
orb
je
out
jecxz
cmpsl
xor
xchg
repnz
outsb
sbb
jle
adc
push
cli
sub
push
movsb
fcmovnb
pop
lods
addb
mov
and
jbe
ss
and
ret
ljmp
xor
sub
jbe
popf
std
nop
push
cli
inc
call
addr16
xor
frstor
fcmovb
testl
cmpsl
shlb
bound
arpl
frstor
adc
fs
in
mov
jle
push
dec
mov
std
out
les
stos
or
movsl
push
dec
mov
jno
mul
jge
out
fs
loop
test
lods
jno
mov
add
or
shrb
push
mov
mov
mov
inc
xchg
test
pop
cld
xchg
daa
nop
jns
push
push
dec
repnz
push
imul
dec
ja
sub
sub
cli
inc
pop
push
pop
scas
cmp
int3
ret
xchg
inc
addr16
rcrl
lods
lahf
cld
adc
in
mov
stos
adc
arpl
xlat
in
and
xor
scas
dec
mov
adc
stc
xchg
push
aad
orl
xor
outsl
jo
sahf
popf
sbb
jb
mulb
lds
and
fldenv
pop
test
lods
jge
or
ljmp
or
fistpl
fdivs
cmp
sub
pop
jnp
fwait
dec
in
adc
gs
jbe
out
push
cltd
mov
or
js
cli
sbb
xor
pushf
mov
jecxz
test
xchg
jmp
cmc
cmp
mov
jne
xchg
sub
inc
jb
testb
or
outsl
push
pop
inc
add
js
jbe
push
leave
mov
sub
shlb
int3
negb
ja
jmp
add
push
cmpsb
mov
aad
pop
les
jp
push
aaa
fadd
aam
fldl
test
std
test
sub
daa
call
mov
and
sti
lds
mov
or
decb
dec
xlat
mov
and
jle
dec
repnz
shl
mov
stos
fnsave
sarb
xor
cmp
roll
mov
ret
aad
les
cmp
xor
mov
fisttps
incb
jns
dec
cmp
fwait
cmp
push
mov
xchg
les
or
les
popa
mov
test
pushf
movl
loop
xor
adc
hlt
pop
mov
cmp
jbe
adc
and
xor
je
popa
test
sub
cmp
shr
icebp
sti
dec
sub
xchg
je
sub
cli
aaa
push
je
mov
mov
xchg
test
lahf
pop
jnp
dec
gs
pop
stos
add
mul
mov
mov
test
daa
jbe
sahf
movsl
mov
fnstsw
aam
inc
mov
mov
adc
and
or
call
lcall
aam
daa
push
imul
fimuls
xlat
sub
inc
aaa
repnz
mov
cmpsb
push
clc
xchg
or
and
ja
stos
test
fildl
or
ret
fsubrl
jne
push
mov
ja
push
or
dec
pop
lret
push
lods
scas
sarl
mov
adc
aad
pop
and
xor
popf
nop
cld
adc
popa
mov
outsl
jb
jl
fistl
popa
ret
shlb
add
push
push
mov
shlb
or
push
xchg
xlat
and
pop
cwtl
xchg
movsl
mov
in
cmp
js
ljmp
in
xchg
pushf
int3
std
in
test
fwait
push
lcall
outsb
jl
lock
lock
leave
mov
jo
inc
into
jne
dec
pop
shr
pop
xor
xchg
insb
andl
mov
fs
pop
arpl
cmp
fnstsw
lcall
imul
inc
mov
add
int3
dec
mov
cmc
fcoml
inc
or
xchg
jne
decl
repnz
jno
lea
push
ds
xchg
sbbb
cld
jp
add
fsubrl
filds
fnsave
add
test
test
push
cld
js
adc
jae
mov
cld
outsb
les
pop
jo
jl
in
xlat
and
or
adc
scas
jg
adc
push
je
mov
lods
pop
in
xchg
pop
aam
jge
cs
es
pushf
and
cmp
stc
inc
inc
fildl
jae
xchg
xchg
sub
addb
ret
cmpsb
test
pushf
and
loopne
lret
sbb
mov
push
push
mov
mov
mov
cmpsb
mov
sub
cmp
xor
inc
clc
add
mov
aaa
mov
push
and
jne
jmp
insb
sub
icebp
adc
mov
in
jns
outsl
push
movsl
xchg
outsl
scas
loop
out
shrb
pop
cld
add
jmp
outsb
in
test
loopne
movsl
pop
shrl
iret
sbbl
jnp
stc
testl
mov
stos
add
data16
insb
push
pop
hlt
test
aas
popf
jl
xor
mov
std
lock
or
es
aaa
mov
pop
lahf
add
andb
and
pop
pushf
push
inc
rcrb
dec
xor
test
sub
cltd
js
inc
shll
in
hlt
cs
and
repz
sbbb
inc
fs
mov
lea
addr16
xor
out
popf
pop
mov
outsl
mov
push
xchg
inc
mov
lds
mov
iret
push
loope
pop
push
movsb
jbe
pop
jle
add
std
cs
scas
xor
pop
fbld
popf
jl
in
push
adcb
ss
pusha
xorl
mov
pusha
cmp
je
enter
inc
pushf
mov
popf
inc
pop
cltd
jmp
ret
dec
pop
inc
shll
shlb
dec
sub
dec
inc
mov
stos
cmp
ret
sub
jg
jbe
push
push
lock
stos
jmp
into
sahf
aaa
dec
and
pop
xor
in
lods
jl
in
sub
push
iret
pushf
push
mov
pop
mov
add
push
add
shrb
test
idiv
ja
jmp
push
cs
or
xlat
js
lds
mov
sti
sarl
xor
rol
sub
dec
lret
jle
cmp
xor
sbbb
inc
fisubrs
cwtl
push
imull
ds
das
adc
xorl
je
inc
andb
dec
sub
push
jmp
loope
fld
in
ss
adcl
jae
roll
mov
add
adc
shl
fiadds
jnp
jge
les
add
mov
sub
push
dec
dec
add
cmp
inc
popf
out
jecxz
jae
adc
mov
insb
pop
mov
jo
call
and
cld
mov
fwait
shrb
xchg
jl
outsb
scas
and
aaa
xlat
adc
pop
dec
jecxz
in
lds
loope
jb
in
rorb
pop
jle
scas
inc
or
lock
xor
fstpl
jmp
test
imul
xchg
dec
pop
push
xchg
jl
adc
sahf
stc
fistpl
xchg
mov
mov
aaa
stc
divb
lcall
inc
jae
fldcw
add
cli
fwait
les
inc
lock
jbe
repnz
xchg
ljmp
pop
jne
mov
inc
add
fbstp
jle
jae
in
mov
jp
push
test
mov
mov
sub
icebp
or
xor
lret
adc
faddl
mov
sbb
add
and
mov
int3
or
xchg
xchg
in
jl
pushf
shlb
addr16
hlt
lock
les
sbb
jo
insb
jecxz
push
outsb
push
cld
cltd
push
inc
insl
sbb
mov
adc
rcrb
daa
int
adc
pop
rcl
pop
jne,pt
outsl
je
sub
pop
add
gs
enter
mov
pop
and
andl
out
orl
clc
jmp
mov
push
cwtl
jmp
loope
insb
jmp
movsb
lcall
out
std
add
into
dec
sbbb
or
inc
push
lods
aam
dec
jge
mov
lock
out
push
and
or
add
popa
sub
and
fbstp
sbb
inc
std
push
aad
dec
and
movsb
and
jno
or
icebp
adc
jg
mov
sub
cmpb
loope
xchg
sub
aam
mov
ljmp
xor
or
jbe
rcrb
lock
fistl
jle
and
sub
repz
pop
push
mov
mov
xor
pop
insl
aas
cmp
iret
mov
xor
cs
push
bnd
jle
cmp
outsb
int3
inc
add
popa
nop
push
icebp
jmp
jbe
les
lret
pushf
stos
rcr
mov
cs
stos
adcl
mov
repnz
test
test
je
je
test
jb
add
add
sbb
les
into
xor
fists
xchg
movsl
pop
pop
movsl
std
mov
pushf
sbb
pop
int3
inc
jg
and
les
push
jp
int3
aas
loope
fiaddl
mov
out
sub
not
aad
adc
enter
icebp
and
add
out
adc
into
ror
push
inc
mov
test
mov
push
icebp
jo
into
xchg
in
out
ljmp
push
gs
mov
movsl
je
daa
add
push
xchg
cmp
add
pop
les
jb
popf
dec
icebp
sub
stos
sti
add
fistpll
lods
or
cmpl
fldl
or
lea
aaa
imul
jnp
mov
xor
iret
sti
lcall
ds
adc
add
stos
sub
sub
loop
out
lock
hlt
in
mov
pop
fsubl
loope
mov
cwtl
ljmp
xchg
loop
aad
mov
sbb
es
orl
fsubs
xchg
rclb
xchg
xchg
shll
ret
orb
jnp
les
and
popf
or
push
add
loop
pop
fisttpll
jbe
add
xrelease
jle
out
repz
inc
cmc
icebp
ljmp
xchg
push
cld
out
jno
les
and
pop
dec
leave
stc
cmp
cwtl
repnz
cld
lcall
xchg
cmp
mov
mov
js
notb
bound
xorb
scas
jae
adc
dec
stos
inc
vandpd
stc
in
arpl
out
push
xchg
add
and
outsl
jg
lcall
mov
dec
aad
xlat
push
mov
and
jno
pop
pop
mov
or
ret
xchg
push
sub
cli
xchg
xor
adc
adc
mov
sub
push
jecxz
jmp
aaa
add
div
lods
dec
add
into
lds
sti
repnz
hlt
dec
pop
fists
cmp
cmp
outsb
and
jno
ljmp
sub
jne
clc
lds
mov
pop
cwtl
shrb
scas
or
test
aas
cmpsl
mov
push
insl
dec
inc
pop
shr
popl
lods
or
xlat
push
jle
push
cmp
lcall
and
shrb
rolb
jae
xchg
xor
dec
inc
cmc
mov
push
sub
js
in
cltd
mov
add
mov
mov
jae
lods
fs
xchg
xchg
movsl
ja
jbe
xchg
lret
mov
sub
xchg
test
cli
mov
sbb
mov
ret
lcall
out
cmp
rcrb
cmp
jno
ret
negb
rcrb
pop
jnp
adc
xchg
pop
dec
mov
lods
pushf
xchg
push
sbb
gs
and
subl
pop
outsb
inc
stc
std
in
decb
adc
jge
sbb
dec
push
fcmovb
push
adc
pop
mov
fistl
shll
aam
insl
lods
lahf
aam
xor
inc
jns
test
sub
enter
sarl
push
or
inc
add
add
jnp
les
or
stos
test
sarl
mov
jge
mov
mov
inc
sbb
ljmp
insb
les
out
pop
push
push
shll
out
jne
gs
xchg
mov
jne
mov
and
roll
pop
adc
or
cmpsl
sbb
cmpsl
sahf
cmpsb
cmp
or
adc
jg
and
add
insb
jae
mov
hlt
test
cmp
xor
mov
int
fcmove
popf
xchg
jnp
fcmove
pop
jg
cmpsl
mov
mov
adc
lret
outsb
gs
aaa
push
lock
sbb
repz
fdivrs
movsb
lock
pop
scas
xor
mov
mov
push
lcall
jmp
push
dec
int3
out
jbe
enter
orl
js
add
inc
mov
fldt
shll
aaa
hlt
pushf
mov
sbb
test
mov
lret
sub
sub
dec
lods
dec
mov
mov
xchg
jg
bound
sub
cmp
aad
push
hlt
cmp
mov
xchg
mov
push
cs
jg
jns
push
mov
xchg
jbe
loop
in
mov
fidivrl
test
xchg
fdivl
sti
xorb
jmp
push
jns
loopne
pop
sbb
ds
sbb
jb
dec
mov
adc
jo
push
movsb
les
jo
push
mov
pop
xlat
adc
lock
pop
call
inc
cli
cwtl
xor
cmpsb
inc
or
pop
jo
mov
add
lds
sbb
xor
mov
fidivrs
fstps
add
shll
leave
ja
movsb
mov
outsl
lds
inc
dec
stos
xchg
add
jge
mov
aaa
fistl
pop
jno
sar
jle
push
jl
loop
jle
mov
ret
ja
push
add
pop
push
push
mov
ret
lcall
ret
fdivp
mov
dec
mov
push
cmc
aam
jl
pop
je
pop
mov
add
aas
or
popf
cmp
ret
fwait
int
adc
lods
scas
mulb
stc
lds
movsb
cmpsl
jmp
push
mov
jp
ss
ficompl
sarb
xchg
inc
test
mov
repnz
in
andl
jne
fsubrs
loopne
dec
lret
and
shl
mov
jg,pt
stc
and
lock
lds
or
mov
rol
push
cmpsb
ret
nop
dec
jno
push
mov
mov
and
xchg
xchg
fs
cmp
xorb
in
fs
push
sub
sub
arpl
ficoml
gs
insl
push
and
loope
lds
mov
and
lods
push
fildll
sbb
inc
inc
sub
fldl
xchg
cltd
mov
in
dec
mov
cmc
lds
jbe
push
pop
sbb
insb
adc
dec
adc
xchg
jnp
adc
mov
cli
or
out
ja
js
sahf
lret
test
dec
add
mov
cs
jno
sbb
fidivrl
push
or
test
leave
sub
pop
ret
cmp
imulb
jg
push
test
mov
lock
mulb
fdivr
mov
ret
or
les
iret
inc
fnstcw
xorb
add
inc
sbb
xchg
fidivl
dec
and
mov
push
outsb
fldl
movq
in
pop
xchg
xchg
test
inc
je
jb
push
sub
pushl
jo
xchg
lods
mov
les
inc
xorl
ja
es
mov
xchg
dec
inc
pop
ja
jmp
rcll
out
pop
fldl2e
lret
or
jmp
lock
push
pop
push
sbb
out
lea
add
or
mov
test
lods
data16
fists
stos
mov
iret
pop
cmc
fdiv
mov
jne
lds
rclb
sub
popf
decl
xor
imul
mov
xchg
lds
inc
cli
sbb
bound
rol
pop
mov
push
inc
or
lds
cwtl
push
add
popf
fucomi
ss
lds
adc
sahf
push
jnp
xchg
jno
xor
les
imul
xchg
mov
loope
xor
popf
pop
mov
scas
test
jmp
loop
movsl
add
jbe
sbb
xor
push
and
lret
outsb
mov
aas
lods
aam
into
and
out
dec
rclb
fsubr
mov
dec
das
adc
mov
ffree
xor
jae
push
rcll
add
aas
into
test
test
mov
xor
dec
rcr
pop
out
nop
adc
mov
pop
xchg
inc
fmull
pop
jne
mov
shll
stos
xor
cmpb
pop
pop
fidivl
mov
out
cmp
jno
shrb
andl
jnp
test
mov
pop
cmp
and
or
leave
dec
out
push
nop
jge
xchg
push
pop
adc
push
cmc
ds
jp
sub
push
ljmp
push
add
sub
jle
xchg
fs
sbbl
or
hlt
jbe
andl
aam
sub
xchg
jle
mov
mov
mov
xor
sub
sbb
mov
mov
push
xchg
fsubs
jae
pop
dec
sarb
inc
fwait
inc
les
je
aad
xchg
sbb
and
or
jge
xchg
aad
xor
stos
jmp
cmpsb
fsubs
push
sbb
dec
pushf
repz
ds
out
arpl
outsl
push
push
rcl
xchg
and
insb
and
push
jl
je
les
cld
mov
out
cmp
mov
xorb
add
mov
lds
xchg
inc
fsubrp
dec
push
adc
sbb
stos
add
loop
faddl
insb
jle
repnz
cwtl
inc
sub
sbb
pop
loop
mov
jecxz
shlw
cmp
fiadds
mov
cmpl
cmp
mov
movsl
sub
lret
xor
push
pop
add
jmp
jnp
jns
in
mov
jg
xchg
cmp
lods
push
xorl
xchg
std
fst
hlt
pop
push
ds
fcmovnb
cmp
mov
daa
subb
pop
popa
mov
int
add
push
mov
push
mov
jge
cmp
inc
xor
fldenv
inc
fmulp
dec
push
mov
hlt
ja
test
stos
bound
sbb
pop
and
xor
ss
push
mov
ljmp
cmp
pushf
mov
cmp
or
xchg
lret
xlat
in
rolb
leave
out
xor
adc
test
aaa
cmpsb
in
hlt
cmp
sbb
sbb
pop
popf
xchg
or
test
rcrb
pop
xchg
xor
cmc
fbstp
add
xor
pop
mov
mov
lds
leave
dec
mov
adc
mov
jge
insl
inc
xchg
fbld
int
sarb
pop
adc
mov
adc
vmulpd
lods
jmp
xchg
aaa
cmc
add
adc
jg
fdivrl
push
mov
jl
mov
jno
lock
mov
insb
lcall
out
sahf
mov
mov
xchg
in
pop
lret
mov
push
inc
jg
pop
add
loopne
repz
xlat
adc
pop
adc
sbbb
mov
push
and
sbb
sub
pop
cld
inc
js
enter
shll
pop
mov
sbb
inc
jbe
shlb
int3
outsl
sbb
pushf
fwait
aas
cmp
fwait
pminub
iret
xlat
bound
push
lds
and
cwtl
in
rcrb
lcall
mov
dec
sub
cmpsb
rcll
or
test
or
xlat
lret
test
mov
test
lcall
push
iret
and
in
popf
pop
cmpsb
shrl
loope
jno
bound
sbb
xor
fcomip
push
xchg
lcall
xchg
inc
mov
lods
ljmp
jl
xlat
inc
ret
jns
ljmp
sbb
cmp
je
ja
cwtl
pop
sub
sbb
or
adcl
inc
push
movsl
xor
fildll
mov
stc
aad
or
mov
mov
mov
pop
push
fldenv
pop
push
mov
push
inc
leave
push
jl
sub
add
fdivr
bound
mov
sarl
push
jge
loop
jne
xchg
das
xor
mov
lods
mov
les
aam
cmp
iret
in
or
fistpll
mov
cltd
sub
fs
pop
push
aas
mov
je
cmp
ror
test
sbb
xor
addr16
nop
pop
test
hlt
pop
cmc
mov
fidivrs
fmul
mov
cmp
gs
fdivr
sbb
sbb
push
jl
shll
pop
and
lahf
mov
mov
sub
sub
test
sub
fsubrl
lock
push
enter
les
jle
lds
dec
iret
xchg
movsb
lock
pop
xchg
push
adc
push
adc
inc
adc
push
icebp
andb
jmp
sbb
xor
aad
outsb
sti
jg
jp
cld
add
inc
and
pop
sbb
bound
mov
cld
rcll
xor
jge
test
and
dec
xor
push
push
in
and
lret
ret
and
test
sbb
xchg
mov
push
icebp
cs
push
in
cmp
fdivr
jb
mov
bound
sub
jmp
subb
fs
xchg
dec
xchg
jo
add
cld
push
sub
inc
and
cmc
dec
xlat
pop
jae
and
hlt
cmp
pop
add
lock
les
push
cwtl
dec
jbe
add
lods
rolb
mov
push
jno
dec
jg
cmp
int
jge
mov
stos
sub
aaa
adc
ss
pop
int
pop
mov
andl
push
iret
sbb
dec
sbb
mov
fcomps
idivb
cltd
sti
cs
pushf
xchg
aaa
lcall
shr
sbb
shrl
ds
cmp
ljmp
aas
sti
in
cmp
das
negb
push
pop
lds
cmp
hlt
pushf
in
jno
and
in
sahf
into
popa
xchg
pop
push
stos
jmp
ss
pop
jmp
lock
rorb
xchg
cmpsb
jle
loopne
xchg
xor
outsb
aas
sbb
in
std
rorl
pop
ficoml
ljmp
ljmp
push
movsl
fsubs
jns
std
and
sahf
popa
hlt
jge
shrl
scas
test
add
and
xor
cmc
fstpl
xchg
out
decl
mov
outsb
aaa
out
adc
add
roll
jg
push
cmp
inc
push
lea
enter
sahf
fmuls
mov
mov
dec
xchg
jno
pop
push
or
cmc
dec
pop
ficomps
jno
fcoml
repz
push
in
mov
les
movsb
adc
daa
or
movsb
push
or
push
xor
imulb
out
xchg
pop
cmpsb
sub
shrb
mov
push
clc
loope
xor
mov
stc
cmp
inc
scas
lea
loope
xchg
pop
mov
outsl
cwtl
push
icebp
nop
sbb
lods
pop
dec
sbb
outsb
test
insl
iret
xor
aaa
jns
mov
and
dec
add
xchg
add
jge
cmpsl
add
aaa
or
dec
adc
cmp
add
mov
mov
daa
andb
jge
jne
lock
cwtl
fldl
xchg
nop
cmp
push
cmp
adcl
add
sti
pop
xor
pop
sbb
jne
je
jno
dec
push
mulb
outsl
mov
push
push
popf
outsl
lret
outsb
and
popf
ret
jmp
add
cmc
shr
or
icebp
in
sub
test
xor
push
into
faddl
mwaitx
scas
jae
pusha
sbb
push
xlat
xchg
cmp
inc
lock
xor
xlat
negl
and
mov
stos
xor
jne
hlt
outsb
push
out
shll
repz
ja
dec
sub
sbb
pop
filds
rcrl
outsb
xchg
inc
test
add
cld
xor
sub
rolb
xchg
jne
cmpsb
data16
pop
xor
add
idivb
jb
push
andb
mov
jne
lds
cmp
loope
mov
dec
int
mov
jns
les
dec
ja
out
shl
sarl
sub
repnz
lds
mov
call
mov
push
loop
push
ds
push
lds
mulb
pop
movb
adcb
leave
pop
inc
mov
inc
sbb
nop
stos
pop
rcr
test
sbb
stos
in
int
mov
cmpsb
push
mov
dec
jg
mov
inc
cwtl
shrb
pop
mov
xchg
cli
insl
sbbb
xchg
add
addl
adcl
lods
add
test
adcb
test
mov
adc
int
xchg
xchg
fucomp
cli
dec
mov
inc
cmp
mov
je
cmp
mov
cmpsb
mul
mov
std
pop
aas
das
cmp
jecxz
shlb
mov
cmp
or
outsl
fwait
dec
sbb
mov
cmp
dec
insl
movsb
mov
lock
inc
sbb
ljmp
and
popa
std
jl
ret
sti
enter
insb
jo
pop
aaa
pushf
out
shlb
adc
or
lods
push
test
jo
lods
fiadds
inc
les
gs
ret
mov
and
outsl
fisttps
lcall
mov
ja
jbe
repnz
addr16
rclb
pop
xlat
adc
sbb
and
and
sbb
data16
jl
xorb
imul
inc
push
and
cmp
cmp
arpl
xchg
inc
sbb
les
bound
mov
addr16
in
mov
inc
cmpsl
push
cmp
fs
hlt
call
and
push
out
cwtl
add
sbb
in
push
lods
icebp
in
test
ja
div
sahf
mov
int3
mov
mov
jns
jbe
xor
add
sbb
hlt
cmpsb
mulb
les
cmpsb
adc
fsubrl
pop
ret
les
inc
cltd
aam
sub
jae
jne
or
adc
outsb
rcr
jno
push
xchg
xlat
aam
dec
add
rorl
je
lock
ss
cmp
repz
int
xor
cmp
mov
xchg
jp
fsubrl
fstpl
cwtl
mov
aas
out
mov
stos
test
cmp
push
lahf
idivb
bnd
push
mov
push
adc
rolb
mov
inc
mov
pop
lcall
repz
mov
mov
xor
fbstp
or
mov
sbb
std
mov
push
outsb
popf
scas
mov
pop
inc
xor
jne
pop
ss
fwait
mov
leave
sbb
ljmp
push
sub
sbb
add
mov
cvttps2pi
pop
fucomp
lcall
sbb
lahf
aaa
sub
lds
movsb
gs
fmul
out
dec
mov
push
shl
jl
cmp
out
movb
dec
cmp
lea
push
xchg
out
rcrb
sbb
add
cmpsl
in
fwait
jp
jge
add
mov
repnz
jno
push
or
lret
fisubrs
cmp
add
xchg
add
and
inc
jae
cmp
jo
mov
into
btc
les
or
mull
lea
addl
aas
mov
les
popa
dec
in
or
push
lods
dec
sbb
jb
pushf
mov
test
imul
push
andb
cmp
in
mov
jns
dec
rcr
imul
lcall
and
jle
sbb
idiv
sbb
inc
and
rcrb
ja
lock
jbe
cmpl
mov
jl
add
mov
cmpsb
sti
and
xchg
imul
cmp
out
xchg
rcr
jecxz
lds
cmp
pop
or
sub
outsb
jge
das
sbb
xchg
fistpl
xchg
aad
clc
ljmp
iret
mov
lcall
bound
mov
fnstsw
outsb
cmpsb
mov
je
dec
inc
push
and
je
arpl
stos
jb
push
push
cvtdq2ps
aam
adc
fs
scas
dec
mov
jnp
testb
cld
inc
xchg
aam
sar
hlt
idivb
xchg
mov
pop
movsb
jle
xchg
orl
push
jg
rclb
cwtl
call
sbb
jno
lcall
mov
inc
and
pushf
pop
cwtl
jnp
cs
mov
jbe
movsb
xor
cmpsl
and
push
outsb
aad
adc
cmpsl
push
push
mov
int
push
movb
inc
cmc
pop
xor
xchg
dec
add
ss
dec
and
out
loopne
rcrb
or
jns
je
test
sub
push
push
adc
stos
sarb
mov
add
pop
or
mov
xor
xchg
adc
or
jmp
cmp
lods
push
lret
add
jge
fsubrl
sti
cmp
jp
mov
jecxz
adc
mov
pop
inc
std
inc
adc
add
clc
test
call
ljmp
test
xor
jmp
mov
add
xchg
xchg
push
std
push
icebp
xchg
aaa
les
jae
sub
ljmp
pop
das
fbstp
xchg
rol
inc
xchg
cs
pop
push
rcl
in
or
mov
movsb
adc
inc
push
dec
fsubl
dec
mov
lods
pop
stc
push
pop
inc
xorb
mov
cmc
and
rcll
fnsave
add
jnp
push
inc
mov
jl
jb
pushf
jb
cmpsb
mov
mov
inc
loop
lods
xor
les
cmp
sbb
and
jmp
inc
push
mov
in
icebp
lds
dec
jle
call
jne
inc
mulb
mov
rorl
jb
std
xor
pop
pop
push
jns
jbe
lds
jmp
sub
mov
pushf
push
pop
jge
lret
mov
daa
test
in
adc
cli
push
and
movsb
loopne
in
mov
jg
xlat
gs
inc
jbe
push
aad
daa
adc
mov
sub
pop
roll
cmp
loope
pop
test
add
andl
das
mov
lret
gs
add
andl
dec
xor
shlb
dec
pop
jae
pop
sub
lods
jne
dec
lods
add
das
scas
add
pop
push
mov
ss
push
movsb
popf
or
push
das
adc
inc
add
mov
sub
pop
lea
xchg
dec
ja
jecxz
subb
dec
pop
cmp
ficompl
xchg
inc
addr16
fdivs
out
bound
xchg
movsl
xchg
jno
clc
test
les
frstor
out
call
pop
xor
jnp
cmc
or
jbe
cmpsb
pop
fs
push
push
leave
jle
cwtl
je
adc
mov
xor
test
out
lcall
pop
adc
xchg
or
push
cmc
add
xchg
or
jl
add
pop
mov
xchg
arpl
adc
xchg
cmpsl
fsubs
add
inc
adc
jne
lock
pop
cwtl
ret
mov
jno
rcr
les
fs
insb
test
dec
dec
aam
sbb
in
push
pop
out
dec
cmpsb
xchg
pop
xor
les
repz
and
or
cld
addb
push
dec
stos
in
xchg
dec
cmp
loope
or
stc
xchg
xchg
ds
adc
data16
lock
aaa
inc
xor
mov
repz
cmp
sub
sub
mov
pop
jbe
repnz
jb
adc
test
int3
dec
inc
cmc
fistl
sub
dec
push
xor
jp
cld
push
add
mov
xchg
jle
add
aam
dec
roll
mov
cmpsb
jle
insb
shll
push
cmp
mov
dec
and
dec
sbb
nop
decl
fcoml
sbb
sub
iret
dec
out
lret
int3
sbb
sub
cmc
fs
ret
out
scas
push
pushf
jg
cmpl
dec
and
sub
lds
into
jmp
hlt
sbb
or
sub
in
jge
fdiv
inc
les
stos
xor
push
mov
fwait
ret
test
lea
fstps
arpl
divl
jmp
xor
xchg
sti
lcall
scas
imul
daa
adc
dec
cld
xor
inc
jb
test
jbe
dec
jmp
or
out
lea
jl
fisttpl
js
stc
sahf
stos
fisttps
pushf
mov
stc
dec
xchg
je
and
icebp
gs
sbb
sarb
push
pop
into
int3
lods
dec
out
cmp
call
les
jnp
hlt
cs
and
push
xor
test
data16
inc
cwtl
add
lds
or
dec
jge
ret
pop
lea
jge
xchg
adc
push
adc
xor
sbbb
cmc
adc
addl
xchg
xchg
jle
xchg
fstpt
in
lret
std
cmp
cmp
pop
mov
pop
movsb
push
push
xor
repnz
adc
aas
push
dec
in
pop
xchg
xorl
push
cli
mov
fldenv
xchg
cltd
aaa
jecxz
outsl
and
call
mov
xchg
mov
outsl
push
sbb
ds
in
lret
push
scas
xor
cmp
outsl
dec
cmp
xor
add
jae
jp
dec
pop
fsubl
add
inc
push
mov
jb
fildl
test
sub
mov
xchg
ds
out
add
jle
les
fwait
cmp
cmp
sti
jae
roll
insb
add
adc
mov
lret
movntps
cmc
icebp
pop
lea
xor
dec
rclb
pop
hlt
lea
test
xchg
arpl
out
add
lret
pop
ss
popa
push
fcompl
add
cmpsl
movsl
or
add
xor
and
addl
cmp
mov
rsm
clc
cmp
sub
aas
ljmp
jmp
movsb
and
repnz
dec
push
fimull
jo
sub
pushf
bound
jns
inc
mov
jbe
pop
movsb
lods
xchg
cmpsb
and
lea
aad
dec
dec
repnz
dec
and
jge
and
aam
shl
shlb
pop
mov
pop
sbbl
jns
add
push
or
int3
ljmp
popf
test
test
test
xchg
and
push
mov
rcrl
push
pop
push
xor
push
add
mov
add
mov
jb
in
pop
stc
adc
add
int3
sbb
dec
mov
adc
push
jne
nop
lds
xor
setl
les
mov
movsb
std
idivl
or
icebp
mov
jmp
jle
push
test
or
mov
fisubrs
dec
mov
fbstp
outsl
mov
mov
xor
and
adc
push
dec
mov
lods
sbbb
push
xchg
shlb
mov
out
jae
jg
jnp
fsub
jno
cli
cld
repnz
inc
aad
mov
add
mov
in
cmp
cmc
lds
and
push
jbe
xlat
lods
xchg
out
push
sbb
in
das
inc
jno
cs
push
jge
std
adc
shlb
jnp
dec
dec
push
outsb
sbb
and
fstps
adc
in
xor
pop
in
jno
faddl
inc
sub
mov
inc
aas
xchg
out
inc
loope
pushl
lds
fadds
pop
adc
push
adc
scas
fcmovnb
call
rcll
mov
sbb
iret
push
addr16
xchg
add
push
dec
movsl
pop
push
mov
lds
mov
xor
push
sti
push
je
push
push
mov
cmc
mov
faddp
dec
cmp
xor
lcall
adcl
xchg
inc
insb
movsb
les
inc
adc
push
outsl
rol
xor
push
out
fldcw
icebp
les
pop
bound
scas
mov
test
lock
arpl
shll
pop
jbe
inc
out
outsl
imul
push
test
cmp
test
cmp
dec
jbe
adc
xchg
jae
mov
adc
fcompl
int3
xor
lods
lods
scas
sbb
adc
in
loop
clc
aam
rorl
idiv
xor
dec
insb
jl
jbe
jb
loop
mov
fidivrl
gs
shlb
lock
leave
test
or
cld
pushf
xor
adc
shrl
repz
fldcw
mov
cli
xchg
inc
in
pusha
xor
jg
mov
xor
fldl
js
mov
or
dec
xchg
add
aas
sbb
testl
test
mov
fstpt
out
xor
in
adcl
ss
pushf
push
jl
in
and
std
stc
or
push
les
les
jo
ljmp
std
xchg
scas
rcrb
cmc
in
rorb
imul
insl
cld
jg
pushf
nop
not
pop
dec
add
push
imul
fdivrl
test
mov
mov
jns
inc
adc
fucomp
push
mov
bound
cltd
mov
mov
xchg
xchg
shlb
shll
fcmovu
addr16
or
cltd
and
jnp
je
stos
dec
dec
dec
inc
cmp
jns
mov
push
push
shll
cmp
mov
cmp
in
pop
jae
lock
sub
sbb
js
push
aaa
xchg
jecxz
push
mov
mov
inc
sti
mov
hlt
iret
inc
pop
std
fisttpll
cmp
pushf
mov
pop
cwtl
push
mov
subl
imull
jg
je
not
ja
or
pop
mov
pop
dec
adc
sti
push
mov
not
jge
push
loope
clc
cs
sub
call
adc
in
push
jmp
out
in
pop
mov
xchg
pop
xor
insl
pop
mov
cmc
jmp
mov
pop
dec
ljmp
lds
mov
xor
and
cmp
add
pop
or
mov
pop
dec
sbb
push
fadds
jl
lcall
out
lcall
dec
inc
negb
pop
jl
loope
shll
mov
jmp
or
jg
push
lods
aaa
loop
lds
ljmp
mov
ds
aaa
pop
leave
mov
xchg
in
mov
push
repz
dec
enter
push
mov
push
pop
adcl
test
scas
in
jae
or
add
sahf
or
xchg
jnp
xchg
subb
out
dec
fisubs
xchg
pop
pop
xor
adc
dec
sbb
push
push
fs
dec
cmp
push
subl
pop
sti
fimuls
jno
sar
scas
mov
push
dec
arpl
mov
lahf
mov
in
fdivr
shll
imul
push
pop
add
mov
mov
lods
jp
mov
xor
fnstenv
das
pop
clc
test
inc
xchg
test
cmc
xor
std
push
push
pop
in
insl
cmc
pop
xchg
mov
push
js
test
or
leave
jg
adc
xchg
push
xor
xor
aas
mov
adc
clc
mov
push
subb
or
mov
pushf
repnz
push
les
xor
movsl
or
ss
fs
jle
pop
cmpsl
adc
push
andl
xor
aas
and
test
mov
add
add
out
push
es
outsb
sub
addl
inc
or
jbe
xor
jle
test
es
add
jge
mov
lret
push
test
pop
lods
xchg
inc
mov
lods
aam
pop
gs
incb
xchg
in
inc
sahf
mov
mov
out
bound
divb
inc
cmpsb
in
xor
push
inc
push
popf
xor
adc
into
pop
push
icebp
xor
pop
popf
icebp
push
shrl
cmp
push
sahf
icebp
push
jg
lds
or
jbe
cmp
add
xor
push
test
test
xchg
das
adc
nop
rolb
gs
add
xor
adc
cmc
adc
adc
jp
xor
push
inc
icebp
lds
movsl
icebp
fimuls
repz
jge
xchg
jbe
or
ljmp
mov
int
mov
mov
add
xor
in
mov
mov
sbb
mov
mov
imul
jnp
mov
cmpsb
outsb
pop
std
stc
push
or
mov
in
jb
int
jb
push
pop
mov
push
push
lds
jge
insl
dec
lods
push
stos
lods
sbb
sub
jl
pop
xchg
in
jo
shl
xchg
es
mov
stos
sub
cmpsb
rcrl
xchg
mov
cmp
xchg
and
push
insl
scas
and
push
scas
mov
stos
fsub
pop
or
adc
test
sahf
inc
ja
fdivrl
out
les
jmp
pushf
cmpsb
lods
pop
lods
jge
test
push
or
rcll
movsl
repz
push
lea
adc
aam
scas
mov
xchg
outsb
loopne
dec
and
movsb
shlb
mov
or
sub
lds
sub
dec
or
clc
push
pop
and
sahf
push
lds
jo
leave
mov
lods
cmp
mov
lock
mov
xchg
in
cmpsb
inc
test
pop
les
aam
js
daa
js
leave
mov
nop
ljmp
movsl
arpl
test
mov
cld
fdecstp
repnz
stos
add
lock
lcall
gs
or
jmp
mov
dec
and
outsb
lods
cmp
repnz
mov
jg
jb
xchg
mov
sub
les
xor
aam
out
xorl
jmp
mov
cwtl
insl
stc
stos
fstenv
inc
cmp
cmpsb
test
aad
call
fwait
xor
mov
or
inc
pop
aam
dec
js
fldt
je
loope
stos
mov
and
or
add
out
stc
filds
lcall
xor
mov
clc
adc
adc
hlt
dec
push
rcrb
into
xchg
jns
pop
dec
fildll
push
aam
es
lea
dec
repz
daa
ss
shll
add
lahf
loopne
xchg
push
dec
loopne
dec
add
adc
aas
cli
aas
leave
call
push
mov
hlt
inc
jnp
adc
inc
jp
aad
xchg
lcall
mov
movsb
push
divb
int3
and
adc
push
or
xor
mov
pop
cmp
ljmp
mov
jle
mov
shll
test
and
popa
push
loopne
imul
add
jge
jmp
cmpsb
jle
mov
push
repnz
popf
sarl
add
sbb
enter
cmc
subb
mov
les
jecxz
push
mov
psadbw
adc
in
sbbb
hlt
pushf
mov
cmc
push
jbe
xor
pop
outsl
icebp
lock
or
hlt
and
out
mov
lds
in
ret
cltd
xorl
ja
mov
jge
sub
aam
mov
add
incb
sbb
cmp
cmp
es
dec
jnp
jb
inc
inc
fcmove
push
lahf
sbb
adc
std
fistpl
mov
dec
pusha
sarb
cwtl
add
adc
shl
jbe
fdivs
dec
loope
inc
add
pusha
lds
dec
shrb
mov
push
aaa
cs
jns
push
cmp
push
popf
jbe
cltd
hlt
jecxz
push
mov
pop
rorl
push
lcall
mov
and
and
pop
mov
scas
insb
mov
fistl
push
jle
lods
inc
mov
add
movsb
sahf
cmp
ret
cmp
and
scas
gs
and
mov
jp
cmpsb
das
dec
mov
test
xchg
or
divl
sahf
inc
lods
push
call
lea
pop
inc
out
dec
adc
sti
dec
inc
popf
sub
jge
adc
enter
jnp
repnz
push
lret
and
mov
idivb
pop
sub
fdivl
mov
ljmp
out
sbb
dec
repz
sub
mov
adc
ljmp
sbb
mov
les
jg
xchg
xorl
ret
sub
mov
iret
inc
mov
mov
push
ljmp
mov
lods
int
push
push
dec
mov
push
inc
cmp
lds
cmp
dec
mov
cmp
cld
jmp
cmove
dec
inc
xor
add
mov
movsb
dec
push
cs
push
cmp
clc
pop
imul
lds
repz
in
dec
rorl
push
test
xor
jnp
dec
aam
cmp
or
scas
addl
push
fstpt
sbbb
loopw
mov
and
xor
lock
pushl
add
call
popw
jo
push
sbb
xchg
cmpsb
rolb
in
mov
jne
mov
mov
cmp
outsb
fs
xchg
sbb
add
cld
filds
fnstenv
dec
mov
psraw
sub
xchg
sbb
push
xchg
jbe,pt
lds
int
insl
mov
leave
fwait
dec
insb
mov
adc
into
or
sti
cltd
and
je
cs
add
jb
push
enter
cmp
loop
pop
in
jno
imul
dec
jae
loopne
mov
xor
jno
loopne
dec
lea
inc
push
icebp
pop
js
mov
or
cmp
inc
cmc
lods
data16
les
cmp
inc
sti
mov
les
std
sbb
push
out
add
push
cmpsl
mov
push
into
cmp
pushf
adc
add
jmp
sahf
test
mov
inc
push
push
sbb
mov
and
outsl
hlt
daa
and
icebp
arpl
jnp
rcll
adc
xorb
pop
xor
add
pusha
inc
sub
into
testb
add
lds
add
gs
jns
mov
flds
dec
je
in
mov
mov
inc
xchg
push
pop
movsb
pushf
or
shlb
shll
and
stos
dec
xlat
pop
adc
mov
stos
mov
pop
xchg
jl
je
andb
jno
shll
and
inc
mov
jo
daa
add
fucom
mov
loopne
mov
xor
add
xor
push
scas
inc
cld
and
iret
push
fst
and
cs
pop
cmp
frstor
or
les
je
xor
lret
imul
sbb
mov
decb
mov
mov
div
adc
add
pushf
call
cmpsb
into
jo
hlt
stc
jne
mov
cwtl
xchg
insl
stos
mov
imul
push
pop
lds
test
mov
mov
imul
xor
out
cwtl
jno
mov
inc
push
cmp
jbe
cmp
jg
jecxz
popf
push
push
jl
pop
cmp
out
jae
clc
add
push
adc
xor
js
xor
push
clc
cmp
dec
cld
xor
add
scas
mov
sub
cmpsl
popf
jp
cmp
push
call
and
mov
lds
xor
ljmp
inc
xor
and
jp
mov
ds
jg
mov
std
div
outsl
push
dec
fs
lods
cmpsl
pop
add
xchg
push
ds
xchg
dec
xor
lods
addl
jbe
dec
mov
sbb
xor
pop
pop
js
mov
out
push
xchg
inc
pop
lea
cli
test
shll
sar
andl
add
test
push
cmp
in
adc
inc
inc
jbe
rcrl
ds
rcrl
inc
xchg
and
dec
outsl
dec
test
cmpb
mov
sbb
mov
adc
popf
adcl
divb
dec
stc
pop
sbb
repz
addl
int
ficomps
add
jl
out
and
jle
fldcw
rcll
test
xor
fsts
push
push
inc
or
jb
dec
dec
mov
push
cmc
stc
aad
add
mov
ficoms
notb
addl
jle
push
xchg
bound
pop
jle
mov
or
jle
xchg
jle
cmpsb
ficomps
icebp
in
rorl
inc
adc
ss
jge
jne
into
rclb
in
xor
sub
stos
or
push
leave
out
mov
sub
ja
dec
push
subb
ljmp
sbb
push
jbe
setp
test
pop
ja
or
test
cmc
fldenv
jno
sub
sti
leave
xor
lods
sub
test
pop
fbld
mov
push
imul
je
fadd
hlt
jmp
fstps
push
jae
test
outsb
lods
scas
out
jg
enter
xchg
sub
xchg
ljmp
lods
cmc
jmp
test
jne
cmp
enter
and
repnz
mov
mov
rorl
in
jnp
rcll
les
push
stos
sbb
pop
dec
mov
out
sub
xchg
xor
sbb
mov
xor
xrelease
out
pop
aad
pop
ljmp
push
fsubr
sub
xchg
cmc
insl
jge
mov
jge
test
adc
test
loop
std
dec
rcrb
inc
out
sub
fs
outsb
jo
scas
push
xchg
testb
ficomps
cmpsl
push
imul
adc
test
adc
fldl
xchg
imul
mov
pop
inc
mov
fdivl
jnp
pushf
jo
movsb
pop
add
jge
je
ljmp
cltd
mov
push
jg
addr16
mov
sar
sbb
jns
push
inc
mov
fldl
sub
les
aad
pop
sbb
or
vpxor
xchg
lret
cltd
pop
lea
lods
mov
fnstenv
xchg
and
stos
cwtl
jmp
lea
test
js
cs
stos
mov
aam
cmpsb
adc
jge
sub
loope
call
pop
les
push
mov
in
out
push
cmpsb
inc
pushf
jbe
ljmp
jb
je
pop
sub
sar
sub
or
lea
fsubrl
fldl
sbb
cmc
std
or
mov
mov
aad
sub
jle
add
les
mov
dec
and
out
or
xor
pop
popa
in
lock
test
push
ret
pop
psrlw
xchg
and
cmpsb
sub
xor
dec
pushf
std
mov
test
cmp
xor
test
add
sbb
dec
sub
mov
lcall
mov
cld
ljmp
cmp
es
dec
jo
std
pop
cs
cmp
xchg
loop
or
les
xchg
dec
jle
add
stos
stos
add
loop
push
outsb
cmp
scas
daa
push
xorl
cmp
add
or
sbb
lods
insb
adc
xor
or
std
xlat
cmp
push
lods
gs
movb
in
pop
in
in
fs
imull
sbbl
cli
repnz
xchg
ss
test
push
ficoml
xor
sbb
ja
mov
addb
sahf
mov
out
xor
mov
sarl
add
dec
push
xchg
stos
fwait
cmp
inc
mov
test
scas
pop
cmp
or
fdivr
pop
jp
add
push
dec
daa
and
cmc
outsb
inc
mov
orb
pop
cld
pop
movsl
push
mov
call
shrl
cmc
sub
in
sbbl
movsb
push
lahf
pop
xor
popa
out
repnz
les
clc
js
hlt
shlb
jmp
shl
cmp
inc
jp
push
sub
inc
pushf
ret
push
mov
flds
jno
fisubl
stos
or
pop
lods
mov
xchg
data16
lret
cmp
adc
stos
mov
push
mov
xlat
scas
outsl
insb
clc
jecxz
xor
add
test
pusha
jecxz
lods
adc
adc
ret
dec
aas
int3
inc
sub
cwtl
jl
sub
and
sub
sub
mov
cmp
sbb
dec
mov
dec
scas
jl
jns
fsubr
pusha
and
mov
vaddpd
movsb
or
aaa
outsb
fnsave
fwait
mov
test
test
or
cwtl
sbb
add
loop,pt
and
inc
scas
push
jge
cmpxchg
popa
mov
xchg
rcrl
test
int3
sub
dec
xchg
shll
fisubl
hlt
cmpsb
shlb
mov
or
sub
or
sub
ljmp
in
dec
xchg
xor
xchg
cwtl
lahf
sbb
xor
mov
clc
test
loope
xor
movsb
and
cmp
inc
pop
jle
enter
addb
jb
xchg
dec
xor
jmp
movsb
dec
adc
push
imul
push
out
and
jbe
les
ja
inc
test
or
fstp
xchg
xchg
int
mov
mov
ret
dec
popf
cmc
les
lcall
sub
jp
mov
cmp
fs
mov
xchg
pushf
inc
fadds
adc
je
jle
push
cmpsb
cmp
popa
jmp
cmp
xchg
data16
repz
pop
jo
repz
jecxz
imul
imul
ja
hlt
jge
js
jmp
dec
bound
loopne
stos
in
push
mov
sti
mov
jns
sub
shl
sub
call
loope
mov
outsl
movb
inc
and
and
enter
into
pop
dec
push
insl
std
repz
xor
clc
and
test
testb
idivb
jge
xchg
popf
pop
mov
jl
mov
loop
dec
dec
gs
sub
notb
mull
jp
xrstor
and
cmp
pop
stc
inc
pop
in
dec
aaa
jmp
mov
in
xor
fistl
imul
jl
adc
aaa
xchg
add
push
das
xorb
or
std
mov
loop
and
push
stos
ret
aas
mov
cld
or
cmp
shll
hlt
les
std
add
ds
inc
jg
out
fnstcw
insb
pop
jg
mov
sbb
shr
loopne
pop
in
xor
stos
test
sbb
xchg
lods
push
add
popa
imul
and
fwait
jg
jge
stos
push
shl
cs
les
xor
xorl
aad
mov
mov
cmp
fdivrs
dec
incl
jno
mov
jle
cmpsb
test
mov
rcll
fldenv
cmc
push
lds
aaa
inc
pushf
jge
mov
dec
je
adc
mov
or
out
aam
xor
sbb
adc
cwtl
fs
and
push
jle
and
fwait
punpcklqdq
xchg
push
arpl
mov
imulb
repz
jbe
test
out
icebp
mov
mov
jae
fildll
and
lds
cltd
inc
call
ret
cltd
dec
test
bound
dec
adc
xchg
popa
into
cmpsl
add
movsb
mov
inc
mov
jns
cmp
subl
sbb
lret
icebp
or
cmp
aaa
xchg
xchg
gs
sbb
adc
sbb
cs
pop
stc
aam
sub
cmc
dec
dec
add
mov
jmp
inc
inc
add
ficomps
xor
sar
ret
pop
call
dec
shl
inc
and
push
test
dec
jae
add
jmp
roll
test
cmp
js
sub
add
ss
and
sub
adc
cmp
mov
fs
cmp
fs
cwtl
dec
mov
jg
mov
shr
jae
mov
fdivrs
cwtl
xchg
xchg
arpl
stc
cmp
aas
movsb
mov
push
mov
mov
dec
fstpt
adc
dec
icebp
shlb
jae
rcll
xchg
outsl
fsubrl
rcr
push
insl
cmp
ja
cmpsb
rorb
jns
hlt
cmp
test
cwtl
xor
push
mov
cmp
outsl
push
arpl
pusha
jmp
in
vandps
inc
jae
lret
hlt
addl
addl
sub
lds
testl
jns
and
aaa
push
aad
cmp
shrb
add
fldenv
add
inc
adcb
and
in
jbe
sbb
neg
jge
aad
stos
mov
xor
cmc
lahf
jbe
xchg
and
scas
jo
add
and
pop
jne
out
aaa
pushf
xchg
negb
add
lahf
mov
repz
sub
cmp
mov
sub
dec
call
std
mov
out
add
sbb
aas
add
pop
mov
mov
hlt
sub
sbb
sti
mov
repz
jge
xchg
add
shll
loop
fwait
aad
je
mov
imul
inc
jbe
lods
nop
cmp
ret
xchg
mov
adc
lds
stos
inc
pop
loope
loop
sbb
mov
cmp
rcrb
cld
mov
dec
cmp
dec
cmp
lds
add
sbb
adc
dec
outsl
out
mov
or
push
into
fsubp
cmp
jmp
fwait
adc
jg
out
push
cmp
cwtl
inc
push
fwait
sti
outsb
and
and
jae
stos
repnz
and
lods
xchg
pop
ds
mov
scas
jnp
cwtl
cmp
aad
fistpll
sahf
inc
mov
jge
iret
mov
adc
xchg
mov
inc
sbb
push
jmp
icebp
cli
inc
shlb
addl
insl
int3
xor
and
mov
jae
or
and
enter
push
fidivrs
cmp
stos
add
or
jb
push
ds
rcrb
cmpsl
cmpsb
adc
jg
xchg
fsubl
jne
dec
bound
jns
push
pop
xchg
std
jae
in
inc
out
jmp
add
loopne
fildll
jo
inc
jle
jbe
push
insb
lcall
push
in
negb
icebp
mov
data16
mov
jb
push
lods
pusha
loope
aam
push
dec
mov
shlb
jno
ss
push
test
dec
enter
test
les
stc
sbb
adc
sbb
rep
icebp
test
fldenv
movb
shrb
icebp
mov
mov
push
movsl
sub
repz
and
or
mov
or
xchg
fucom
mov
xor
push
xchg
mov
repz
les
dec
testb
in
andl
jno
fildl
cld
add
test
dec
ret
adc
test
jbe
loope
dec
pushf
rorb
push
in
aam
test
movsb
subl
loope
mov
insb
les
lahf
pushf
push
and
jle
and
aad
sarb
call
addl
xor
insl
sarb
adc
dec
or
jae
rclb
mov
and
fstps
jbe
pop
jl
or
cmp
fldcw
xchg
test
mov
sub
insl
rorl
lcall
pushf
ss
xor
inc
in
divb
sub
xor
iret
xchg
mov
cs
data16
inc
bnd
test
aas
jg
leave
test
fadds
push
or
aad
xchg
sub
sub
adc
cld
push
jp
pop
aaa
test
fucomip
scas
and
sub
js
sub
mov
cwtl
aad
jnp
dec
sarb
xchg
repnz
jae
pop
into
push
xchg
test
repnz
outsl
cld
sub
shl
cli
loop
sub
lds
data16
testb
mov
push
popf
into
fldlg2
adc
mov
xchg
cwtl
hlt
mov
sbbl
pop
into
bound
ss
in
xchg
sub
and
add
xorl
inc
cmc
pop
vmulpd
mov
pop
inc
add
mov
pop
or
daa
imul
movsl
jbe
test
aam
test
adc
cmp
outsl
or
in
loope
jg
idivl
pop
nop
push
ret
push
adc
inc
jns
iret
cwtl
push
pushf
mov
push
mov
sarl
imul
ss
lds
roll
add
inc
add
dec
sub
and
sbb
fdivr
jge
inc
out
std
mov
jge
mov
xchg
jmp
push
aaa
jg
fcmovnb
imul
jle
fldcw
sub
dec
inc
in
imul
nop
mov
rolb
out
and
insl
or
jle
cmpsl
jl
inc
lods
add
fdivrl
jmp
lcall
pusha
fists
adc
xor
inc
cmp
jge
js
dec
movsb
jl
movsb
push
xchg
insl
in
and
add
icebp
leave
fstl
lahf
pop
xchg
outsb
xchg
fstpt
js
pop
mov
xor
mov
aam
adc
mov
xchg
jnp
jp
outsl
jne
je
jnp
aas
pop
xor
out
dec
xchg
dec
lea
or
lods
inc
sbb
sub
xor
and
mov
xchg
jbe
mov
in
out
dec
repz
stos
xchg
dec
aam
hlt
dec
lcall
loope
aaa
mov
icebp
or
adc
xlat
mov
test
shll
in
jecxz
adc
push
mov
fistpl
add
mov
in
lahf
adc
mov
lret
mov
mov
push
push
mov
push
mov
ret
shlb
xor
sbb
je
sub
jb
mov
jmp
adc
jnp
das
stc
or
loopne
loopne
jbe
xchg
adc
je
les
mov
or
stc
and
mov
add
out
movsb
leave
push
jae
push
shll
sbb
roll
add
ljmp
cs
jg
test
inc
mov
lahf
dec
xor
mov
outsb
lods
cmp
ror
or
pop
aam
out
and
ret
sarl
pushf
int
push
imul
loop
inc
stos
mov
xchg
cmc
jns
aaa
idivl
test
xchg
mov
call
mov
daa
fnstenv
lds
add
fcmovnb
mov
jnp
mov
mov
or
push
int
sbb
out
cmpb
xor
xor
add
sarl
cmp
jle
test
mov
aad
fldt
push
pop
xchg
aas
pop
lds
or
testb
jge
jno
xor
sub
or
add
in
aam
pushf
int3
mov
test
lods
sub
test
gs
movsb
cmp
sbb
into
adc
in
add
sbb
ss
cwtl
ljmp
jmp
xor
or
mov
test
mov
lcall
jmp
push
xor
test
insl
cmp
mov
xchg
pop
push
dec
inc
daa
sti
test
mov
jle
xchg
jno
je
fiadds
repz
lahf
mov
loope
popa
cmpb
mov
mov
jo
push
jbe
es
lods
jno
cmpsb
or
test
jge
adc
cmpsl
cmp
es
fildl
dec
dec
pop
cmp
es
lods
outsb
sub
jge
xchg
mov
out
scas
inc
addb
jbe
adc
addr16
sti
fistl
or
cmp
adc
pop
rol
dec
ret
jns
stc
mov
add
mov
push
ds
sub
icebp
imul
jbe
fld
rcrb
inc
adc
shl
stos
cltd
bound
push
xchg
and
inc
push
cmp
addr16
ret
sub
addr16
test
inc
push
clc
sub
adc
cmp
mov
shlb
icebp
adc
pop
lods
mov
jno
shlb
mulb
stos
xchg
sub
cmp
sarl
jns
cmp
cmc
stos
in
xchg
dec
xchg
mov
xchg
mov
shlb
adc
pop
stc
shrb
pop
and
rorb
test
jmp
cmp
mov
std
jo
xor
in
lahf
jb
in
ss
test
mov
js
or
and
int
push
xor
sub
xor
fsts
jae
or
lods
mov
jge
test
in
sub
push
jbe
int3
jae
pushf
lds
loop
mov
push
cmp
iret
adc
sub
jg
sub
mov
push
lods
or
in
dec
inc
out
cmp
mov
es
cli
hlt
push
lret
add
imul
sub
call
mov
xor
ja
enter
rolb
popa
mov
fisubrs
push
mov
clc
rclb
std
mov
push
ljmp
cltd
mov
fisttps
das
cmp
mov
mov
lock
push
mov
leave
xlat
in
jmp
stos
add
inc
test
and
add
ds
jbe
pushf
mov
stc
aas
shlb
jb
call
mov
push
pop
ss
mov
mov
test
shlb
sub
pop
nop
jge
dec
jle
adc
fsub
dec
jl
jbe
imul
jno
lret
lods
popf
int3
adc
sbb
je
les
inc
push
daa
dec
mov
inc
mov
mov
push
xchg
in
and
andl
or
rcll
xchg
movsb
scas
adc
sbbl
push
andl
rcll
mov
out
or
das
sub
fwait
sti
sbb
enter
dec
adc
movsl
inc
and
xchg
add
mov
jae
and
cmp
cmpl
cmp
mov
pop
pop
adc
icebp
pop
add
stos
rolb
idiv
ret
pop
stos
les
jle
enter
sub
orb
test
pop
ret
outsb
pushf
into
lock
or
scas
cs
sub
pushf
dec
stos
push
imul
test
pop
add
test
mov
pop
push
les
inc
adc
pusha
push
les
jbe
inc
inc
pop
loopne
fcompl
dec
jge
inc
std
xor
cs
mov
jg
or
adc
in
iret
out
sub
or
sub
in
jbe
mov
pop
xchg
frstor
pop
fcomi
adc
inc
pop
js
ret
inc
cmp
cmp
add
or
faddl
pop
hlt
sbb
ljmp
mov
mov
cmpsl
mov
adcb
sub
xchg
cwtl
push
inc
sub
test
andl
loopne
test
jno
xor
pop
aam
fwait
dec
fildl
lahf
mov
push
enter
dec
and
pop
jb
xchg
insl
outsl
bnd
ljmp
cld
or
sub
sbb
mov
es
pop
and
sbb
or
das
into
cmp
movl
inc
sub
sbb
push
dec
sub
ss
push
sti
xlat
test
and
repz
idivb
mov
xor
ljmp
cmpsl
mulb
les
outsb
out
outsl
pop
push
bound
rcrb
cmpsb
lret
xchg
xor
jno
rclb
jge
arpl
shlb
inc
cwtl
cmp
mov
inc
pushf
fdivrs
not
mov
adc
rclb
out
cmpsb
jae
cs
cmpsb
loope
dec
loope
or
xchg
push
add
jns
mull
xor
push
adc
fnsave
stos
add
push
insb
loope
cltd
pop
add
inc
mov
push
pop
fwait
inc
movsl
mov
aaa
xchg
jne
lds
insb
in
mov
or
in
fstl
lock
ret
stos
js
aad
imul
push
loopne
jne
ret
xor
popf
xchg
pop
fiaddl
test
jmp
add
sbb
add
mov
iret
dec
pop
jae
andl
sbb
popa
add
adc
nop
mov
or
insb
std
or
mov
jnp
movsl
dec
or
push
nop
pop
fstpt
imul
jmp
and
scas
inc
dec
dec
adc
sub
cwtl
shrb
jbe
leave
push
frstor
jmp
add
shrl
sbb
sahf
dec
jbe
movsb
xchg
fisttpl
adc
cmpsb
jl
xchg
push
lahf
dec
cmp
push
ss
fld
pop
imul
hlt
shrl
test
loop
xor
xchg
and
inc
lds
sbb
inc
xchg
shr
adc
and
push
jp
dec
subb
fld
inc
inc
cmp
fisttpll
loopne
mov
outsb
and
push
adc
adc
sub
stos
push
inc
adc
aaa
mov
int3
subb
cld
adc
ljmp
sbb
repnz
add
dec
sbb
xor
mov
adc
jnp
xor
sti
mov
std
xor
inc
es
mov
dec
mov
add
cld
jmp
push
std
jg
lods
xor
push
les
dec
pushf
jbe
dec
mov
lods
packsswb
bnd
or
or
or
push
ret
inc
lret
inc
inc
lret
pop
fldt
pushw
dec
je
push
inc
add
push
scas
pop
icebp
dec
fwait
mov
lds
imul
jbe
mov
add
hlt
jno
dec
push
cmp
mov
jb
and
mov
pop
test
movsl
xchg
les
rorl
std
xor
jbe
sub
into
pop
sub
add
lret
xchg
fcomp
stos
cmp
cmp
stc
pop
movsb
pop
mov
outsl
aas
mov
jb
shlb
pushf
jmp
push
repnz
test
pop
mov
mov
pusha
es
mov
xchg
lds
incl
frstor
sub
js
inc
cltd
rcll
iret
lcall
je
int
dec
add
lods
dec
xor
push
push
je
jns
adc
push
dec
cld
jbe
mov
add
dec
push
pushf
and
cmc
movsb
stc
push
clc
in
mov
lds
pop
std
mov
mov
inc
pop
jg
sbb
inc
push
xchg
fcoms
sbb
jb
sti
mov
mov
lea
cmp
incl
out
and
out
push
mov
jne
lock
mov
in
je
push
ret
imul
cmpsb
push
or
pop
xchg
mov
mov
jge
fucom
cmc
jle
lds
or
inc
xor
aaa
aad
jmp
mov
add
daa
fcmovne
out
lcall
xchg
and
dec
in
or
xchg
mov
jb
pop
leave
xchg
mov
flds
push
xchg
les
cmpsb
fnstenv
hlt
push
adc
outsl
jmp
dec
ss
jnp
test
jns
adc
mov
push
xchg
insl
mov
pop
jl
jnp
ja
xchg
je
ja
xor
jno
cmp
mov
pushf
and
mov
xchg
adc
lock
imul
pandn
loopne
es
dec
xchg
sub
jns
in
lds
outsl
movsb
and
cmpsb
and
insb
insb
ret
outsl
sbb
mov
dec
fwait
xchg
test
mov
inc
adc
jne
mov
add
divb
ficoml
pushf
mov
mov
jns
sbbb
cs
sbb
add
data16
mov
stos
notb
adc
int3
and
sub
add
jg
lds
mov
jle
stos
xor
je
popa
in
pushf
add
daa
cmc
loop
add
jge
fwait
fidivl
push
movsb
orb
pop
insb
mov
ret
je
das
sbb
mov
aad
sub
jno
mov
jmp
pop
fwait
inc
out
shrl
mov
in
xchg
add
insb
jl
addl
mov
add
lea
add
psubusw
mov
xor
testb
cmp
insl
or
jnp
stos
imulb
cmp
and
clc
call
cmp
lahf
sahf
loopne
lret
dec
pop
lds
mov
loopne
mov
mov
fsubs
sbb
jle
xchg
cmp
mov
inc
lahf
jg
repz
adc
adc
ds
outsb
in
mov
jb
inc
cwtl
out
dec
mov
pop
sbb
dec
push
lret
push
out
or
dec
add
lods
inc
pop
inc
mov
fiadds
push
es
loope
rcll
not
sahf
lds
mov
call
adc
mov
icebp
adc
mov
aas
xchg
xchg
andb
sarl
mov
cmp
test
add
xchg
mov
xchg
cmc
sbb
gs
inc
sub
stos
push
rolb
arpl
fistps
inc
es
je
xchg
jbe
push
jle
xchg
jae
inc
xor
roll
mov
cmp
enter
push
or
jnp
les
xchg
push
test
xchg
mov
rorb
and
lods
push
daa
push
or
or
xchg
jb
adc
mov
xchg
inc
mov
mov
pop
jnp
jg
insb
mov
movsb
cli
aam
icebp
cmp
sbb
adc
add
fcoms
and
les
ret
mov
mov
subb
xchg
mov
pop
jle
push
sub
jg
mov
fdivr
jns
fst
inc
mov
push
adc
and
mov
pop
add
aas
cmp
inc
push
les
scas
fucomp
pop
cmc
dec
mov
test
daa
add
hlt
popf
clc
jecxz
push
pop
insb
sbb
lret
mov
lret
cs
lret
into
lock
aam
into
lds
fisttps
or
ficoms
fadds
xor
call
sar
das
das
and
test
pop
sahf
xchg
lods
les
push
sbb
hlt
or
pop
inc
je
sbb
lcall
dec
pop
mov
xor
sbb
xchg
lret
mov
jle
jae
cmpsb
xchg
out
into
push
and
lcall
adc
fists
adc
push
cwtl
inc
add
arpl
cmpsl
sti
sbb
outsb
inc
add
test
push
or
dec
push
stos
cmp
inc
push
cmc
stos
int
les
fldl
inc
or
jbe
mov
lahf
inc
dec
and
jmp
fcomip
inc
pop
subb
sbb
pop
jg
out
mov
lods
push
ss
mov
movsb
shr
sub
sbbl
mov
mov
popf
int
les
cmc
xlat
adc
xor
jno
lds
insb
xor
shrl
ss
cli
add
dec
lret
push
jns
cmpsb
jle
push
pop
cwtl
jae
cs
adc
shl
inc
xchg
jb
mov
nop
cmp
sbb
cmp
aaa
out
je
aaa
in
inc
xchg
mov
repnz
cld
test
das
cli
pop
bound
insl
rorl
fs
adc
iret
sub
imul
adc
dec
adc
jg
test
sub
test
adc
sub
push
and
adc
xlat
into
in
push
ja
cli
test
gs
lret
xchg
adc
loope
adc
mov
mov
aad
push
push
test
xor
xor
iret
and
jbe
push
insb
test
jg
push
arpl
loop
arpl
iret
mov
add
test
pushw
iret
ja
push
outsb
sti
fiadds
subl
jns
xor
jo
mov
popa
fcmovnbe
inc
inc
mov
mov
hlt
mov
jle
aas
ljmp
scas
xor
xchg
inc
cs
xchg
add
jbe
push
dec
push
and
jecxz
jae
mov
insl
sti
dec
mov
icebp
movsl
cmp
inc
int
add
jle
sbb
cmp
shll
test
popa
lods
sbbl
xor
ds
inc
add
insl
sbb
mov
aad
aad
cld
lcall
pop
sbb
cmc
mov
inc
roll
dec
or
call
jle
stos
in
xor
mov
aam
cmp
xor
or
test
mov
faddl
ss
mov
sbb
push
fs
sti
xchg
sbb
push
sti
sbb
push
push
dec
lods
sarl
int
cmpsb
pop
icebp
sarb
sbb
push
pop
inc
movb
aad
cmpsb
mov
scas
cmpl
outsb
xor
test
xchg
les
insb
push
jbe
sbb
imul
pop
inc
std
and
inc
jmp
insb
lcall
inc
movsb
call
push
cmc
out
and
dec
fnsave
je
aas
sarb
jle
mov
cmp
aas
pop
lods
lret
test
xchg
pop
mov
in
outsb
xchg
adc
sub
mov
jnp
sbb
mov
mov
sub
std
test
fstpl
xchg
jmp
mov
mov
mov
cmp
xchg
fisubrl
mov
push
xchg
sub
xor
push
jbe
sbb
out
je
mov
mov
les
stos
sarb
sbb
arpl
inc
and
push
xor
stos
jbe
fsubr
and
sbb
adc
scas
out
dec
mov
push
push
jl
lret
or
pop
push
mov
outsb
les
aaa
inc
aad
push
push
rolb
test
push
fdivs
sbb
les
mov
and
std
cmpsb
push
add
mov
shll
stos
mov
xor
lcall
dec
xor
ds
roll
leave
aaa
lcall
or
push
inc
cli
sahf
out
push
das
fwait
mov
xchg
popa
out
in
aaa
loop,pt
dec
jp
adc
or
push
push
cld
xor
in
dec
testb
sub
xlat
xor
in
rcrb
fdivp
popa
adc
test
lods
cli
xchg
mov
insb
inc
dec
mov
xchg
out
mov
push
sarl
dec
mov
xchg
cmp
xchg
movsb
mov
sub
add
jbe
fcmovbe
lods
mov
aas
stos
mov
in
fldenv
sub
imul
loop
out
cmp
mov
mov
lods
inc
jmp
out
or
xchg
inc
test
cwtl
das
je
out
daa
xchg
jmp
lds
fwait
push
xor
stc
pop
push
add
inc
sub
insb
pop
cwtl
inc
jmp
jo
js
xchg
jno
dec
sub
or
or
imul
push
das
lcall
stos
rolb
stos
hlt
push
xlat
add
jno
inc
or
rorb
add
add
jbe
hlt
xor
push
add
out
daa
sub
mulb
stc
jp
outsb
and
jle
sbb
xchg
sti
xor
test
dec
cli
inc
and
ficoml
xor
popa
mov
pushf
jge
jnp
movsb
push
lds
stos
pop
shlb
inc
test
jo
sbb
xchg
jg
pop
add
xchg
faddl
cmp
xchg
mov
push
dec
outsb
data16
movsl
outsl
test
or
jle
insb
pop
push
fwait
mov
mov
movb
sahf
fimull
push
add
popa
fnstenv
aad
ja
aam
pop
jecxz
out
pop
stos
or
xchg
jbe
in
lret
pop
inc
aaa
stos
cwtl
adc
inc
testb
lcall
test
or
and
jb
mov
fisubrl
adcl
sarb
jl
lcall
into
and
and
aad
data16
je
dec
pop
outsb
lods
shlb
fstpl
les
xorl
movsl
insl
push
xchg
and
scas
sbb
test
push
or
mov
test
mov
not
cwtl
mov
jmp
mov
sbb
popa
adc
les
kunpckbw
popa
fiadds
adc
divb
int
cmp
andb
sub
test
mov
outsl
das
rol
add
sub
push
jno
mov
repnz
xor
sbb
mov
cmp
cmc
mov
pop
fisttpl
jge
add
es
daa
decb
pushf
mov
lds
push
cmp
inc
arpl
fsubrp
aam
stos
or
insl
lods
jne
mov
mov
inc
fcmovne
repz
xorb
add
xor
dec
cmp
mov
sbb
sahf
cs
mov
pop
and
sub
stos
mov
jno
jle
push
sti
mov
sbb
pusha
ljmp
jmp
cwtl
out
jnp
add
pop
in
lds
ss
stc
lcall
out
xor
mov
mov
jg
sbb
cmp
outsb
jb
out
add
mov
jle
mov
xlat
out
push
cmp
or
insl
sbbl
jns
je
std
pushl
ja
inc
adc
jle
enter
xor
les
or
shl
mov
aaa
fucompp
sbb
cs
popf
aam
ret
cmpl
fnsave
enter
mov
cmp
lahf
push
pop
mov
cmpsl
cmp
outsb
push
aaa
in
dec
int
test
cs
adc
dec
shll
popa
mov
mov
pushf
test
outsl
sub
push
out
dec
jge
jge
mov
cs
pop
test
add
test
pop
leave
fldt
loope
arpl
xor
cmc
or
fwait
sbb
jno,pn
arpl
add
xchg
mov
stos
les
out
xor
cld
lods
incb
inc
in
addr16
movsb
cmpsb
out
pop
gs
xchg
inc
test
outsb
add
sub
add
popf
inc
cmc
adc
pop
stos
jbe
fcoms
loopne
shr
xchg
mov
testl
adc
fucomi
stos
mov
les
cmp
adc
sub
mov
or
mov
mov
aad
in
mov
imulb
cmpsb
daa
or
dec
shl
cwtl
hlt
push
dec
mov
xchg
jle
xchg
lods
cmp
fisttpl
hlt
cltd
mov
inc
xchg
mov
lret
sbb
into
adc
cmpsb
adc
cwtl
bnd
leave
iret
sahf
lcall
pop
cmpsb
pushf
fwait
aaa
xor
jl
aad
in
adc
shl
xor
mov
hlt
xlat
jle
inc
es
rorb
adc
movsl
ss
cmpsb
cmpsl
rolb
dec
push
add
jno
data16
push
cmpsb
scas
inc
xchg
popa
xchg
ljmp
sbb
inc
in
push
into
or
jg
or
push
insb
ja
jmp
push
stc
daa
inc
mov
adc
xor
xchg
imul
adc
xor
gs
ret
mov
sbb
jmp
test
xchg
pslld
scas
xchg
xchg
das
sub
add
les
pop
sbb
pop
push
adc
sbb
ja
push
shll
mov
arpl
jns
xchg
fxch
test
cltd
xor
popaw
in
les
inc
dec
pop
out
in
xor
in
pop
jmp
push
xlat
push
pop
ss
mov
xchg
xchg
stc
hlt
or
add
ds
test
mov
xor
jo
out
out
push
inc
aaa
push
xchg
cmc
jl
not
jnp
icebp
in
notl
stos
fisubrl
ljmp
dec
cmpsb
fidivrs
inc
test
xlat
sub
lods
lret
add
jno
imul
push
mov
xchg
xchg
cmpsl
test
loopne
or
push
mov
outsb
dec
mov
std
fucomi
dec
xor
rorl
push
sub
mov
cld
jmp
sbb
fisubrs
subl
xchg
fsubl
test
push
cmp
xor
xchg
or
hlt
add
dec
sbb
test
dec
hlt
push
aad
add
mov
iret
aam
cmc
cli
rcl
ret
mov
mov
fisubrs
mov
adc
jg
insl
int3
test
shlb
out
add
outsl
movsl
sbb
lret
insb
cld
lea
fs
vpconflictd
pop
pop
call
iret
lds
mov
popa
les
loope
leave
andb
mov
sub
xchg
sub
and
xchg
push
add
sbb
adc
cmpsb
mov
pusha
jno
jle
stos
jmp
movsb
arpl
clc
pop
popfw
ja
mov
test
cld
test
icebp
lds
testb
hlt
inc
aam
xor
jle
dec
call
shrb
scas
repnz
jge
sub
push
inc
push
xchg
cs
mov
xor
fdivr
xor
and
dec
testb
dec
adc
dec
jl
cmc
inc
cmp
push
xor
add
fsubs
lods
movsb
stc
inc
out
xor
bound
cwtl
cmp
jle
xlat
data16
mov
imul
sub
inc
and
rolb
adc
xor
jns
xchg
cwtl
shlb
jge
fistl
jmp
movsl
xlat
or
fld
push
add
roll
dec
stos
add
or
sub
daa
fcompl
cmp
fwait
jnp
outsb
jle
mov
movsb
xor
pop
in
jb
sub
add
mov
mov
movb
add
enter
xchg
or
rcll
cmpb
mov
mov
mov
fs
pop
adc
inc
inc
mov
jle
aaa
mov
inc
inc
aas
mov
pop
mov
repz
mov
ffree
call
call
dec
fidivrs
or
rolb
inc
mov
jne
inc
imul
std
jge
dec
jg
pop
roll
pop
cmp
sbb
cmpsb
loop
or
lcall
lret
enter
je
test
incb
dec
xor
test
popf
cmp
lcall
stos
xchg
pop
outsl
pop
lret
xor
add
mov
xchg
daa
je
lea
clc
xchg
pop
inc
xchg
cmpsb
aam
pop
data16
mov
leave
cmp
dec
fcoml
sarb
sbb
mov
cmpsb
sbb
std
jae
ljmp
jp
mov
int3
mov
xchg
popf
sub
jb
mov
xchg
popa
sbb
into
xchg
sbb
mov
mov
incb
xor
pslld
in
push
les
clc
fs
fisubrl
aaa
flds
aam
pop
ja
in
hlt
lret
or
nop
push
jb
pop
inc
sbb
fcmovnu
adc
pop
adc
cmp
cltd
faddl
xor
stos
fsts
mov
cmp
mov
sbb
rclb
lcall
movsb
sbb
insl
out
push
jbe
add
jns
mov
hlt
nop
aas
xor
add
sub
xchg
dec
adc
push
adc
sbb
push
gs
jbe
lds
cld
cmp
cs
js
in
pop
imul
popf
jo
xchg
sbb
test
leave
mov
dec
ss
popa
sub
jmp
xor
mov
mov
jl
push
int3
call
in
adc
lea
sbb
fimuls
mov
out
add
mov
inc
push
add
jge
lods
jns
add
jo
lret
enter
cmp
scas
xchg
inc
mov
sub
dec
fdivs
dec
stos
imul
adc
notb
and
xorb
outsb
and
fcomps
hlt
pop
mov
lods
movsb
pop
int3
divb
aaa
in
adc
mov
push
push
jbe
jge
orb
jo
cs
mov
dec
cmc
fnstsw
insb
sub
lret
add
test
out
fs
sbb
xchg
pop
adc
jo
jle
inc
hlt
test
mov
sbb
fbstp
mov
cmpsb
adcl
fstpt
out
out
jo
outsl
pusha
in
adc
sub
inc
and
je
lds
cli
iret
in
cmp
jbe
insl
xchg
fwait
cwtl
adc
push
lods
inc
icebp
jle
repnz
pushf
push
les
and
xchg
in
cmc
loopne
cmc
mov
add
clc
push
es
cmc
hlt
cmp
or
and
cmpsb
cmpsl
int3
add
xor
sbb
decl
jle
mov
std
shll
leave
push
cmp
bound
push
out
cmp
inc
jg
shrl
ror
push
push
mov
iret
lds
jmp
gs
and
aad
lds
rcrb
inc
stos
cmc
sub
iret
cmp
jge
add
jno
pushf
xchg
sub
cmp
and
or
xor
jno
xchg
lcall
mov
jne
stos
clc
dec
or
mov
mov
mov
lods
mov
jp
sub
inc
into
push
movsb
in
pop
jns
testl
int3
add
dec
addr16
andl
roll
cmpsl
cmp
rol
sbb
cmp
pop
jbe
inc
sarb
testb
ficoms
gs
lods
test
add
xor
mov
and
addr16
pop
add
sarl
aad
pop
inc
out
outsl
ss
jbe
add
rclb
adcb
cmp
mov
daa
mov
xorl
mov
cmpsl
cmp
test
dec
pop
xchg
sbb
rol
repz
mov
out
mov
push
pop
movsb
mov
lcall
push
and
jecxz
es
xchg
in
and
lds
je
inc
sbb
roll
in
test
shrl
mov
push
dec
jmp
inc
iret
inc
ret
orb
test
inc
testb
cmp
pop
xlat
xchg
cmp
add
cmp
dec
sub
mov
mov
pushf
jp
lret
jmp
incb
les
loop
xchg
pop
call
xchg
jae
lds
fs
outsb
push
mov
jp
ljmp
dec
test
jo
xor
xchg
cmp
push
lods
mov
cmpl
movsb
adc
sub
jbe
lea
mov
lret
test
outsl
cmp
popf
jmp
imulb
add
dec
mov
xchg
pop
outsb
movsb
lds
or
mov
frstor
movsl
pop
out
mov
int
scas
mov
xchg
les
call
inc
push
outsb
lcall
ret
mov
push
adc
lock
scas
test
aas
push
stos
lahf
mov
jg
add
mov
sbb
inc
cmp
fnstsw
test
mov
mov
lret
mov
fs
rcl
test
outsl
inc
or
add
adc
jmp
sub
and
jp
xchg
cltd
mov
out
jmp
rcl
add
mov
sub
gs
rclb
dec
sbb
divl
mov
clc
add
addl
xor
xchg
xchg
lcall
pop
outsl
insb
clc
xor
ret
jb
jnp
dec
dec
cmc
fisubrl
or
test
lea
inc
mov
aam
test
pop
in
pop
jae
repnz
xlat
outsb
pop
in
bound
cmc
test
fcoml
sbb
dec
test
jp
shrb
iret
js
lods
mov
repz
inc
inc
js
adc
daa
xchg
lahf
lock
sar
sub
push
add
mov
ret
outsl
mov
js
push
add
and
mov
shll
cmp
inc
lock
call
cmpsb
jle
mov
scas
les
sub
cltd
sub
icebp
lret
pop
movsl
jb
and
stos
and
inc
clc
mov
sbb
push
pop
pop
xchg
cmpb
faddl
and
xor
outsb
sub
cmp
adc
imul
div
adc
or
mov
mov
movsb
jne
out
lcall
xor
arpl
shrl
je
lods
imul
ljmp
sub
sbb
sbb
cmp
mov
adc
cmpsb
shlb
xor
test
xchg
cmc
push
jle
mov
repnz
push
test
in
aad
aad
bnd
cld
push
movsb
jle
data16
clc
iret
inc
faddl
push
je
sub
shll
mov
push
fsubl
push
xor
mov
insl
mov
out
out
xor
sbb
jmp
jle
test
aaa
push
inc
adc
pop
cwtl
xchg
jle
iret
shlb
fwait
out
testl
ja
adc
scas
cld
cmp
cmp
lods
dec
mov
mov
dec
jle
push
mov
mov
lods
into
sub
mov
jle
cld
sub
dec
insb
push
mov
ljmp
dec
mov
sbb
arpl
shlb
jbe
jge
push
pop
push
fbld
pop
push
mov
mov
or
xchg
dec
stc
jbe
repnz
jmp
xchg
adc
test
cld
jle
shll
pop
mulb
negl
sub
push
lret
gs
cs
int
inc
push
scas
je
push
arpl
out
inc
xchg
arpl
cwtl
pop
test
inc
lock
lods
inc
test
cmc
or
mov
and
inc
gs
insl
cltd
push
repnz
test
fbstp
repz
scas
fwait
data16
std
push
insl
xchg
sar
aad
insb
addl
fistpll
inc
mulb
jle,pt
mov
mov
call
adc
mov
jbe
adcl
xchg
into
stc
ret
push
adc
push
andl
stc
movsl
test
jno
sbb
push
cs
xor
xor
pusha
test
cmpsb
mov
mov
fwait
das
push
shll
sub
sbb
cli
xor
or
inc
xor
add
or
mov
or
fwait
data16
iret
xchg
add
xor
xor
lds
repz
jge
push
dec
pop
icebp
outsb
adc
push
mov
icebp
out
je
std
in
out
pop
lea
repnz
push
push
push
fiadds
add
pop
test
push
in
repz
jge
push
int
repz
jbe
lds
je
aaa
mov
cmp
pop
push
std
xor
test
add
xor
add
xor
add
mov
push
or
fsubl
pop
pop
scas
inc
xor
jge
cmp
cmp
cmp
cmp
jnp
cmp
xor
js
push
test
insl
adcl
test
inc
xor
pop
xor
add
and
jge
pop
insl
sub
int
insl
pop
inc
ds
pop
cmpsb
pop
inc
push
mov
icebp
xchg
cmp
shll
jnp
cmp
mov
fstl
lea
push
cltd
fld
mov
pop
incl
dec
and
ljmp
and
adc
mov
cmp
daa
insb
and
mov
fstpl
mov
xchg
das
hlt
xchg
mov
int3
jbe
pop
sub
fldt
movsl
mov
in
and
mov
cli
popa
inc
or
push
jae
inc
inc
fisubl
lock
scas
outsb
les
cs
lret
out
ja
push
insb
sub
pop
bound
cmp
cltd
xor
add
sarl
outsb
call
dec
lods
gs
mov
inc
bswap
or
leave
mov
sub
repz
pop
and
sbb
inc
int
sub
test
stos
jle
leave
mov
out
mov
cli
int3
pop
dec
inc
dec
rcrb
iret
jle
rcll
inc
testb
loope
pop
cmp
rol
pop
xor
cmp
xchg
push
jno
xchg
les
hlt
test
call
push
arpl
pop
test
testb
gs
nop
dec
adcb
orb
or
loope
add
aam
dec
mov
aaa
fidivrl
loope
hlt
mov
xchg
push
jbe
or
push
or
pushf
fcoml
lds
insb
fnstcw
cmp
clc
sub
pop
cmpb
aaa
push
dec
shlb
push
add
add
jl
jb
jae
push
or
mov
dec
es
mov
xchg
push
jnp
jnp
push
push
cmc
cwtl
lds
clc
loopne
daa
cmp
lods
out
dec
aam
xchg
shrb
or
mov
mov
or
sahf
jnp
lret
movsb
sub
adc
jl
and
mov
aam
sahf
les
dec
ret
jl
xlat
idivl
dec
mov
cmp
push
adc
stos
jne
repnz
mov
pushf
jne
stc
jle
and
aaa
mov
jmp
lcall
pop
cld
js
iret
fs
mov
pushf
scas
lahf
ss
fdivrs
jmp
fwait
sub
xor
das
cmp
pushf
dec
orb
mov
outsl
test
push
dec
mov
in
gs
or
fcoml
sbb
les
mov
addr16
mov
cmp
dec
xchg
jle
repz
jge
cmpsb
sbbb
jne
jge
sbb
or
stos
push
loope
out
scas
dec
push
inc
cmc
xchg
mov
add
pop
mov
fstl
push
repz
shrl
fcompl
mov
cwtl
mov
xchg
lds
sbb
aam
js
pop
test
mov
ja
jno
adc
lahf
je
jecxz
std
test
dec
pushf
and
ss
mov
jl
iret
lods
adc
jae
inc
sbb
pop
jg
popf
pop
repnz
lds
xor
cmp
addl
pop
int
xchg
xchg
pop
cmpsl
xchg
add
scas
sarb
xor
pusha
cld
jecxz
sub
cld
jl
loop
and
stos
enter
mov
fcmovu
mov
mov
outsl
cmp
shr
or
fstl
dec
push
add
dec
jno
imul
cs
fcmovnbe
xchg
cmp
daa
sbb
jnp
push
lds
daa
aaa
sbb
mov
jmp
jp
aad
xor
cs
xchg
inc
push
add
ljmp
in
shl
push
imul
mov
mov
inc
sbb
adc
mov
ljmp
es
mov
dec
xchg
pop
movsb
add
adcl
xlat
inc
call
ffree
mov
ja
ret
add
aas
stos
cmp
jnp
das
lahf
sbb
mov
ds
or
or
dec
daa
subl
insl
jnp
sbb
add
cld
fdivl
pushf
jbe
jnp
nop
add
cmp
and
jbe
movsb
lds
jne
jae
and
dec
or
sbb
mov
jle
iret
inc
ss
lods
jg
jecxz
hlt
fstpl
loop
jge
fistpl
inc
test
fstp
scas
or
shl
out
nop
ljmp
xchg
adc
sbb
or
adc
imulb
and
hlt
and
in
mov
fdivs
xchg
push
mov
cwtl
rorl
outsb
inc
and
movsb
sbb
aad
cmp
adc
jmp
ljmp
lds
dec
rolb
xchg
jns
push
mov
lock
cmp
xchg
fnstsw
jno
pusha
or
loope
mov
ljmp
push
xchg
and
push
lcall
add
add
stos
xchg
inc
push
cmpsb
and
cli
xor
xchg
sub
in
insb
fidivs
fxch
ss
les
push
dec
into
and
or
jp
ds
inc
inc
cmp
fists
sbb
mov
jno
stos
pop
icebp
mov
cmp
dec
push
call
inc
decl
call
cltd
jmp
cli
je
xchg
cmc
xlat
push
sti
ffree
xor
bound
out
ret
pop
jae
push
lock
imul
outsl
fnstsw
cltd
pop
rcl
pop
mov
stos
mov
push
cmpsl
cmc
xchg
pop
sbb
mov
mov
aas
jbe
test
jne
lcall
and
pop
cmp
outsl
call
sbb
cltd
and
mov
popa
cmc
out
in
sbb
ja
insl
and
pushf
movsb
or
test
jge
push
js
xor
in
shll
mov
cwtl
leave
push
push
mov
sbb
sbb
cmpsb
cmc
add
push
jns
jle
setbe
and
mov
xor
cmpsl
mov
mov
pop
jns
jle
ret
cmp
fidivrs
cmp
fcompl
data16
push
push
adc
add
add
xor
xor
push
mov
xchg
sbb
je
jecxz
push
fstpt
aad
jle
push
in
mov
std
or
push
xor
fnsave
out
test
xor
fcmovnbe
and
aaa
and
movsb
lods
pop
xchg
fs
nop
mov
scas
xchg
or
scas
dec
enter
aam
push
inc
lds
pop
ljmp
andl
aas
and
and
popa
lret
pop
inc
in
incl
jbe
or
and
dec
outsb
cmp
les
adc
pushf
dec
xor
imul
stos
mov
cld
push
lds
xchg
xchg
popf
adc
xchg
and
xchg
jbe
jg
adc
movsb
out
mov
mov
pop
repz
bound
or
movb
mov
jge
iret
shlb
je
fs
xchg
mov
pop
or
push
lds
xor
jle
ja
mov
sti
lcall
inc
mov
lahf
cli
mov
or
lods
mov
push
and
xor
inc
xor
insl
outsb
lret
sbb
xchg
inc
jne
adc
sbb
and
into
fadds
lahf
cmc
mov
cmpsb
and
lret
cmp
mov
adc
out
xor
neg
jns
out
and
and
push
push
inc
xor
roll
xor
sub
cmp
icebp
mov
xor
dec
sub
sbb
push
xchg
jmp
sbb
mov
gs
pop
mov
lock
adc
cmp
adc
cld
sbb
into
insb
push
pushf
lds
dec
popa
inc
cmp
adc
add
xlat
popf
xchg
ficomps
mov
xor
fildl
lds
cmp
dec
jbe
sbb
cmpsb
xchg
push
xchg
mov
jg
lcall
cmpsb
fwait
std
cmc
sbb
cmp
dec
mov
lds
stos
pop
dec
jbe
pop
rorl
xchg
test
sub
sbb
cmc
push
inc
ficompl
lods
sti
shrl
aam
xor
add
lds
outsb
movsl
out
or
mov
xorl
js
pop
and
push
sbbl
mov
cmp
cld
fmull
pop
jle
das
imul
sub
pusha
hlt
dec
lret
sub
xor
in
iret
mov
fstpl
mov
movsl
outsb
js
inc
pushf
and
mov
cmpsb
inc
pop
mov
int3
dec
fimuls
es
fisubrl
hlt
adc
popa
dec
insl
in
int
and
inc
dec
mov
add
out
js
dec
dec
lds
jb
dec
fiadds
mov
jmp
popf
or
inc
fdivrs
adc
sbb
in
sub
dec
xor
dec
inc
stos
push
leave
loop
nop
jmp
xchg
data16
mov
loope
push
sub
sahf
rorb
mov
pop
inc
ds
dec
daa
pop
jg
fucom
xlat
and
xlat
incb
mov
testb
inc
xchg
or
dec
pop
aas
xorb
pop
or
repz
pop
push
movsb
into
dec
or
mov
les
stos
mov
fcoml
js
sub
scas
ja
and
jle
les
jne
scas
loop
insb
xor
les
test
bound
sub
jle
int
nop
dec
cmp
push
cmp
mov
xchg
ljmp
xor
add
in
popf
loop
cmp
movb
jl
popa
addr16
xchg
aas
sahf
jmp
xor
or
and
orl
cltd
das
mov
cmp
lret
jno
shrl
call
ja
lea
add
in
inc
in
or
dec
jl
add
mov
dec
fldt
movsb
push
out
scas
mov
nop
inc
stos
mov
hlt
cmpsl
push
and
mov
add
jl
hlt
scas
loope
pop
sub
dec
cmc
test
pop
xchg
xor
repnz
mov
jnp
mov
ficomps
xchg
cmpsb
aaa
jmp
jno
lcall
push
fdivrs
imull
fistpl
ss
push
insl
dec
shll
inc
xchg
cvtps2pi
cmpl
fwait
aaa
imul
insb
and
cmp
dec
inc
rcrl
fiadds
sub
out
subb
add
jecxz
pop
fstps
rcr
mov
andl
push
das
mov
xchg
mov
and
lcall
add
in
sub
outsb
sub
mov
push
scas
jnp
jge
aad
pop
inc
push
adc
push
and
adc
xchg
push
mov
sub
sbb
rcrb
movsb
lods
test
or
imul
stos
pop
lret
jae
add
or
sub
adc
js
adc
xchg
daa
call
or
xchg
mov
dec
out
repnz
xchg
stc
out
std
mulb
xchg
pop
xor
outsl
ffree
and
dec
mov
jl
mov
lret
xchg
and
faddp
fistps
popf
xlat
pushf
out
lret
mov
hlt
push
into
aaa
ficoml
les
mov
lock
in
jo
dec
jbe
pop
jb
cmpsb
pop
mov
mov
push
call
cs
inc
in
adc
push
stos
fsubp
xchg
aaa
mov
mov
jl
xor
fsts
pop
enter
dec
movsb
jnp
imul
fsub
mov
push
divb
mov
xor
mov
add
jecxz
push
lea
les
jge
fnsave
pop
inc
xchg
lods
call
out
add
or
test
in
push
sub
dec
fsub
inc
pushf
xor
dec
les
cmc
push
sbb
pop
inc
pop
out
ljmp
mov
sti
test
ljmp
xor
lret
loop
sub
mov
out
sahf
cmc
lcall
push
lret
mov
mov
cmp
pop
xchg
in
sbbl
int
dec
sub
and
hlt
adc
push
jmp
adc
or
mov
jns
sbb
pop
inc
mov
loopne
js
outsb
xor
jecxz
jg
pop
movsl
jo
pusha
mov
es
fwait
orl
mov
jge
ret
mov
mov
inc
and
xor
adc
test
fsub
popf
push
lahf
dec
stos
das
xchg
call
xor
subb
mov
roll
pop
push
adc
xchg
cmc
test
pop
cld
or
jne
lds
push
adc
jg
push
push
lods
jb
mov
stos
mov
adc
cs
push
aam
aaa
lret
and
mov
pop
mov
lea
mov
push
stos
sbb
orb
mov
pop
mov
data16
dec
gs
shlb
add
or
lods
cmp
fs
xchg
dec
sbb
and
sbb
adc
pop
push
mov
out
stos
stos
loope
xor
mov
test
sub
xor
adc
cli
sub
mov
mov
sub
xchg
testl
inc
cmpsb
lods
pop
inc
xlat
fs
aas
lods
sbb
lock
andl
sub
lcall
xor
adc
orb
mov
mov
mov
xchg
and
les
fwait
subl
cmp
jnp
stos
ja
or
jge
inc
movsb
pop
mov
test
jb
push
push
sub
jno
fsubrl
xchg
adc
xor
call
mov
pop
cmpsb
mov
mov
pop
xor
fcoml
scas
in
and
mov
pushf
mov
into
xchg
jbe
adc
adcl
popl
fdivrs
xchg
xchg
cmp
adc
cmp
adc
adc
idivb
mov
xor
or
mov
clc
jae
lret
les
add
push
daa
cli
push
insb
stc
js
cwtl
adc
xchg
mov
mov
pusha
jb
push
ljmp
pushf
insb
fisubl
cmp
in
jg
ret
cwtl
out
push
pop
xchg
enter
aaa
das
cmpsb
movsl
sbb
fstpt
scas
jle
sbb
ds
cmp
mov
in
inc
push
cmp
cmp
lea
xchg
divb
or
jno
jne
call
mov
aaa
mov
notb
insb
call
andl
xchg
test
push
adc
and
loope
xchg
das
mov
adc
jbe
in
add
jle
bnd
gs
and
adc
push
jecxz
jno
push
movsb
and
fwait
or
das
jo
cld
sub
imul
inc
mov
pop
push
aam
mov
hlt
pushf
and
cwtl
std
addl
mov
add
lahf
sub
hlt
cmp
mov
push
push
ss
xlat
push
inc
cmp
or
adc
rolb
dec
pop
xchg
xchg
fstpt
cmp
je
inc
mov
lock
aaa
popf
push
repz
jp
dec
push
mov
hlt
push
outsl
cmpsb
daa
xor
xchg
es
cmp
push
push
in
in
push
lret
xor
xchg
imul
add
mov
lods
gs
inc
scas
inc
cltd
in
pop
sub
sbb
lret
stos
rcll
sbb
cld
test
mov
mov
pop
lods
stc
enter
mov
jnp
pop
mov
stc
pop
shll
xacquire
cmpsl
stc
inc
xorl
mov
test
sbb
iret
icebp
sahf
sbb
sub
lock
rolb
jnp
lods
sbb
xlat
cli
test
stos
push
cmp
outsb
ja
add
fdivr
mov
pop
sub
dec
sahf
out
outsb
xorb
subb
repz
jg
xchg
cltd
xchg
out
and
mov
mov
pop
cmc
mov
cmp
push
and
cli
cld
pop
inc
out
mov
pop
lret
cli
pop
cmpsl
arpl
push
dec
shll
stc
mov
pop
add
sbb
int3
scas
cmc
or
aas
negb
into
inc
mov
cmpsl
add
insb
xor
out
lcall
sbbb
jmp
sbb
xor
push
dec
gs
nop
or
adc
mov
adc
xor
loopne
or
push
inc
push
cmpsl
subl
mov
add
lods
into
jbe
sub
mov
pop
ret
enter
es
cmpsb
jle
in
std
aam
adc
aam
push
lcall
lock
xchg
jle
or
cmpsl
push
roll
dec
dec
cltd
xchg
shll
push
notb
xchg
jmp
xchg
incl
outsb
jb
stos
mov
movsb
cmp
std
lret
sahf
insb
mov
pop
jae
mov
insb
adc
mov
call
mov
mov
or
into
aaa
add
pop
jae
mov
or
je
adcl
insb
in
jno
jbe
mov
mov
in
not
cmp
fmull
ret
icebp
push
cltd
call
push
daa
xor
lds
jmp
mov
add
insl
out
jns
pop
jge
mov
jp
cmp
movsb
and
gs
jae
leave
data16
mov
dec
or
xor
stc
xchg
test
insl
sub
cmp
push
and
mulb
pop
or
test
jmp
imul
jmp
push
push
dec
push
pop
push
lret
xor
aaa
push
add
sub
hlt
ss
vpsrlw
fwait
mov
ljmp
mov
mov
out
std
mov
mov
ljmp
sbb
dec
jnp
gs
jmp
or
sub
and
out
dec
cmp
push
or
outsb
add
and
lcall
adc
gs
inc
dec
test
add
lds
out
lods
jmp
scas
insl
les
mov
int
dec
jmp
in
jbe
nop
outsl
cli
clc
adc
adc
call
pop
enter
push
int
push
cmp
mov
sub
je
mov
cli
loop
repnz
les
lret
add
icebp
cmp
inc
cld
inc
sti
lods
fucom
fiaddl
mov
vpacksswb
jno
test
test
lods
dec
xor
in
retw
add
dec
out
and
jno
pop
out
lahf
xor
mov
int3
and
shrb
jmp
ret
jno
jge
les
inc
add
cmc
int
adc
push
fisttps
repnz
ds
xlat
or
or
inc
cld
xor
cmc
out
mov
cmp
andb
enter
rcr
mul
adc
sub
test
jno
fadds
cwtl
or
clc
mov
aad
cmpsb
call
push
pusha
pop
test
or
mov
dec
pop
cwtl
dec
std
rcrb
sbb
sbb
cmpsl
and
fstl
add
push
in
ficompl
add
dec
sbb
cli
xor
jp
jg
jle
mov
aad
lods
inc
cs
adc
aas
jne
fildll
jno
outsb
pushf
mov
aad
aad
test
mov
mov
movsl
call
insb
test
test
in
aad
lcall
xor
jnp
adc
cmpsl
cs
cld
fdivp
dec
loopne,pt
inc
jb
or
cmp
mov
fs
sarl
fcmovne
pop
fstpl
jno
sti
out
or
imul
shll
fwait
or
xchg
add
push
mov
test
pop
inc
lock
adc
pop
push
gs
sbb
inc
add
mov
sub
add
fidivl
sbb
sub
loopne
sub
and
loop
icebp
inc
push
push
xor
popf
sub
inc
divl
push
cmp
xchg
pop
out
push
les
mov
cmp
loope
push
shr
lahf
add
outsb
std
inc
add
xchg
add
push
fnstcw
data16
shrb
jo
mov
stos
jge
jb,pt
dec
sarl
sbb
scas
jno
push
sbb
ss
pop
ficoms
xor
sbb
add
sbb
pop
cld
cs
push
cmp
dec
js
xor
inc
mov
sub
cmpb
mov
loope
dec
xchg
fsubs
sbb
repz
mov
xor
dec
jmp
push
cmp
dec
shlb
adc
insl
insl
or
mov
jno
je
cmp
dec
mov
ret
or
adc
pop
into
andl
pop
lods
sub
pop
sarb
and
jmp
cwtl
shlb
fldt
movsb
inc
testb
cmp
dec
mov
lahf
mov
dec
or
ljmp
cltd
ss
inc
pop
out
cmp
lock
fdivl
push
fisubrs
cmp
movb
and
pop
les
adc
es
js
xor
mov
rcrl
and
push
mov
add
call
popf
pop
fldt
cli
pop
aaa
outsb
mov
fs
jbe
sub
mov
das
push
gs
push
pushf
je
mov
or
jae
ret
cs
fwait
add
mov
inc
xor
mov
mov
push
das
cwtl
in
out
test
inc
mov
incb
cmp
mov
cld
pop
js
mov
test
fwait
sahf
out
jmp
int
cmp
lret
scas
jecxz
adc
test
arpl
xchg
mov
push
shlb
or
jmp
sub
jno
pop
cmp
in
push
sub
je
inc
sub
fiadds
jns
clc
movsb
mov
push
xchg
xchg
cmp
andb
test
test
sti
pop
notb
mulb
adc
adc
int
jge
or
add
loop
pop
xlat
mov
ja
pushf
leave
or
ficompl
out
pop
pop
or
xor
cmpsb
ficomps
mov
add
push
dec
xchg
lea
and
scas
lds
xorb
adc
les
jmp
push
push
out
jmp
cltd
movsb
dec
push
adc
pop
pushf
test
mul
decb
sbb
push
jg
sbb
pop
pop
lds
jnp
push
scas
cs
xor
filds
jno
data16
sbbl
fimuls
out
mov
xchg
rorb
add
jmp
mov
pop
ljmp
mov
scas
lret
aam
dec
and
dec
xchg
jl
jnp
notb
mov
jae
rol
inc
mov
pop
xor
dec
xchg
lahf
push
add
inc
decb
inc
jl
cs
push
sbb
mov
cmc
add
sti
mov
and
pop
xlat
cmp
xor
mov
mov
and
cmpsl
shl
jo
cmp
insl
pushf
push
lcall
mov
or
jmp
xchg
arpl
fnstsw
repz
imul
adc
test
addl
pop
rclb
movsb
mov
xor
dec
aaa
les
loopne
adc
sub
in
xchg
xchg
push
loop
jne
lcall
cld
adc
jp
roll
mov
loop
inc
push
addr16
lcall
sbb
push
mov
pop
imul
repz
adc
push
nop
inc
dec
xchg
dec
in
pop
jle
mov
fs
ret
cmpsl
and
sub
lods
test
push
aas
xchg
fwait
fldcw
xorb
add
and
xor
clc
std
jge
femms
clc
jo
jne
mov
cmpsb
add
jb
scas
mov
decl
loope
call
js
push
test
test
in
push
sub
arpl
mov
arpl
lcall
shrb
mov
adc
mov
cli
adc
loope
push
mov
xor
loope
xor
out
xchg
mov
mov
sub
inc
les
insb
pop
sbb
negb
jl
andb
rorl
fdivrs
cmpsl
inc
rcrl
xchg
popf
mov
cmp
out
imul
lods
inc
or
iret
loopne
jns
mov
stos
outsb
iret
mov
sub
icebp
repz
decb
xchg
mov
ret
adc
lea
outsb
push
inc
fstps
jb
cmpl
sti
cmp
pop
cmpb
dec
mov
stos
push
fdivs
test
shll
cwtl
hlt
sbb
pushf
mov
pop
dec
mov
pop
xchg
mov
fstl
pop
inc
ret
cmp
adcl
mov
cmpsb
repz
inc
into
cmp
vmovaps
xor
leave
cs
fwait
ret
imul
insb
adc
jb
add
xor
cli
xchg
sbb
xchg
pusha
movsl
push
enter
dec
int3
es
inc
subl
cld
and
mov
jne
sahf
mov
or
or
sarl
es
scas
jmp
push
addr16
inc
inc
and
cmp
push
je
and
rcrb
or
das
cmpsb
jmp
addl
int
add
mov
repnz
fsubrp
add
fcomip
test
shl
les
mov
mov
jl
cmpsb
ljmp
popa
adcb
aad
out
and
add
pop
addb
cltd
xchg
jne
lds
scas
add
rcr
mov
pop
adc
pop
xor
outsb
movsl
repz
stos
mov
inc
add
in
or
jl
shlb
xchg
div
jns
adc
lcall
cmpb
sub
pop
cmpsl
push
mov
inc
psubsw
mov
into
mov
xor
lock
cmp
int
jmp
push
inc
sub
das
in
dec
rolb
outsl
test
aaa
sbb
jnp
dec
and
pop
in
popl
lahf
aas
push
jp
fs
push
shl
push
cmp
mov
add
and
add
sbb
sub
in
xchg
mov
pop
fwait
ror
mov
inc
test
jecxz
pushf
shrl
nop
in
push
sub
stos
pop
pop
movsb
push
cmp
shlb
lcall
mov
fcomps
js
mov
sbb
dec
jo
and
jg
les
popa
in
inc
jl
and
xor
push
xchg
sbb
mov
mov
or
sar
imulb
mov
dec
movsb
mov
mov
sahf
ljmp
fcoml
test
push
cmpsb
mov
mov
fwait
les
or
jl
mov
jle
mov
pop
les
xor
add
xchg
jns
fiaddl
movsl
add
test
test
pop
in
cmp
push
xrelease
pop
in
xor
pop
stos
xor
add
dec
adcl
and
mov
jae
rclb
xor
sbb
loope
inc
popa
pop
adc
jge
xor
xor
bound
aas
aam
xchg
cld
je
inc
pop
and
loop
lcall
ret
icebp
jbe
pushf
movsb
movb
cs
outsb
pop
addl
jle
scas
lock
call
cli
cmp
mov
int
cwtl
dec
ret
insb
jmp
sub
lds
jb
xchg
xchg
stos
cmp
cs
lcall
add
bound
testb
inc
into
in
inc
jo
fwait
out
daa
lds
iret
cltd
outsb
mov
gs
xchg
sub
fs
addl
xchg
shrb
je
rorb
pop
jp
outsl
mov
inc
rcl
mov
lods
cmpsb
xor
in
xchg
das
adc
jge
in
les
ficompl
mov
jbe
lds
pop
pop
sub
fsts
mov
gs
sarb
mov
add
adc
cmp
add
or
ret
xchg
insl
sti
dec
in
stos
mov
les
in
pop
cmp
fsub
fimuls
adc
ret
in
inc
out
mov
jbe
arpl
mov
mov
pop
fnstsw
ljmp
imulb
jnp
fistpll
rolb
lds
push
pushf
pop
jmp
pop
jmp
shll
xchg
jecxz
les
lret
rcll
call
stos
inc
push
pop
stc
jp,pt
add
push
fdivl
add
fwait
dec
scas
les
cld
mov
repnz
jmp
or
pop
add
lds
stc
mov
movsl
add
rcrb
sub
push
or
jbe
adc
enter
roll
mov
cltd
xchg
insl
mov
mov
xchg
int
and
pop
shrb
ficoml
cmp
repnz
int
sub
dec
pop
mov
inc
inc
xor
outsb
or
clc
mov
enter
pushf
test
divb
jl
cmpsb
movsb
ss
mov
xor
adc
sbb
dec
xor
leave
and
jle
arpl
daa
cmpsb
sbb
shrl
push
cwtl
inc
or
jae
cli
scas
jne
test
xchg
pop
sub
push
data16
mov
fsincos
xor
arpl
loopne,pn
pop
loope
pop
mov
jb
push
xchg
lret
leave
cmp
pop
xor
adc
scas
rol
or
sahf
mov
mov
cmp
push
ror
dec
push
fsubs
or
lea
gs
test
mov
jg
cmc
sbb
mov
sub
jno
jno
and
pushf
clc
test
xchg
jne
lds
push
orb
cmp
out
adc
mov
loope
cmpl
insb
shr
sub
roll
cwtl
dec
mov
insb
fdivs
sub
jg
add
push
mov
add
fstps
jg
pop
fsubrs
xor
aad
push
push
pop
cmp
mov
orl
scas
inc
mov
mov
dec
insb
cltd
nop
adc
mov
les
popf
pushf
ret
xor
lcall
jg
icebp
les
xchg
jle
mov
push
aam
inc
mov
inc
or
dec
jecxz
mov
dec
shl
sbb
xor
jg
ret
lock
mov
or
lahf
hlt
nop
adc
jle
cs
sbb
mov
js
inc
lds
and
add
fcompl
mov
mov
jecxz
dec
xchg
jmp
jno
test
rolb
repnz
push
sub
dec
cltd
push
mov
ja
mov
mov
mov
dec
pushl
int
adc
push
jmp
iret
add
pop
imul
rcrb
js
push
sbb
pop
and
lds
icebp
mov
fwait
loope
imul
and
pop
ret
mov
and
inc
cmp
mov
or
insb
pop
xchg
add
fstps
gs
xlat
je
test
dec
xor
xchg
xlat
and
jmp
aaa
inc
gs
loope
push
jae
jbe
cmp
sub
cmpsl
dec
cmp
out
gs
jbe
test
or
out
add
push
arpl
pusha
cmp
cmp
jmp
lret
les
pop
push
arpl
cmp
test
mov
test
ds
jne
sbb
subl
loopne
lret
and
pop
cld
push
cmp
add
jnp
enter
mov
mov
dec
xor
xor
inc
inc
sbb
cmpsb
sub
push
push
data16
rolb
vcvttss2si
push
mov
sbb
xor
lret
push
jge
xchg
call
sub
outsl
popf
push
ret
push
jmp
divb
scas
subl
mov
cmpsl
inc
loop
mov
fcomi
loope
mov
add
dec
sbb
popf
ja
cs
ret
pop
dec
dec
mov
sbb
aam
push
filds
add
or
mov
call
stos
push
into
outsl
fistps
push
xor
xor
adc
ror
les
mov
jp
adc
jl
fstl
fld
icebp
out
hlt
mov
jne
ret
xor
inc
lret
sub
mov
mov
mov
lcall
xor
xor
sbb
dec
jnp
aas
rorb
test
jb
xchg
jno
stos
fstpt
adc
jno
data16
rorl
hlt
xor
aam
jle
cmp
jecxz
jo
in
in
stos
adc
inc
jmp
jmp
mov
test
addr16
gs
and
adc
fdivl
cmp
xor
push
mov
push
inc
pop
sahf
push
fdivl
mov
or
test
fwait
adc
lds
jge
les
mov
fnstcw
les
sub
dec
movsb
das
push
mov
out
mov
div
jge
adc
aam
xor
stos
cmp
popa
xchg
xor
hlt
jno
dec
lea
rol
mov
cwtl
cli
test
mov
mov
iret
in
or
xchg
cmpsl
inc
rcl
push
addr16
dec
outsl
inc
aas
mov
sahf
and
or
jbe
fisttps
or
cltd
pop
lods
pop
outsb
test
scas
push
add
lret
les
les
fdivrs
lcallw
mov
or
sub
adc
pop
imul
hlt
pusha
stos
ds
ficoms
push
insl
lret
out
faddl
dec
fcompl
dec
stc
sbb
xchg
jg
mov
fistpll
gs
xor
and
les
repnz
or
mov
push
pop
pop
adc
adc
cmpsl
jno
dec
adc
xchg
dec
inc
inc
movsb
daa
dec
aam
xchg
in
mov
sarl
fcoml
aam
into
push
adc
and
cmc
pop
lds
push
cmpsl
les
sub
arpl
hlt
jmp
add
xchg
cwtl
mov
cmpsb
xor
xor
enter
les
out
fs
das
leave
push
inc
mov
test
ret
push
adc
cmpsb
mov
inc
iret
and
mov
subl
shll
ja
aad
pop
aam
mov
cmp
cmp
out
push
adc
out
dec
cmp
lods
and
addl
push
out
xor
lds
rcr
mov
xlat
mov
adc
pop
sarl
data16
lcall
pop
cmp
movsl
add
or
cltd
push
mov
pop
inc
std
pop
dec
fisubrl
ret
mov
ljmp
ret
xchg
data16
or
push
repz
stos
aad
inc
jge
and
xor
repnz
mov
fwait
decb
mov
push
mov
cmp
stc
mov
orb
fists
fcompl
notb
jg
xchg
xor
jbe
mov
jno
clc
and
in
mov
add
rcrb
dec
out
mov
dec
lds
sti
popf
into
mov
jmp
and
or
in
sbb
xchg
pop
test
sbb
mov
hlt
sub
push
out
je
mulb
shll
inc
xor
sub
push
je
cmpsl
dec
rcl
fwait
repz
leave
adc
aas
jg
mov
or
hlt
xchg
outsl
cmpsl
not
outsb
or
mov
stos
mov
fcompl
xor
push
xchg
lock
and
ficompl
insl
shlb
fs
xchg
xlat
mov
add
jo
dec
adc
lods
pop
icebp
and
ja
popf
hlt
aam
jo
xchg
adc
or
fimull
mov
mov
sub
les
shll
ret
cmp
inc
sar
xchg
test
jne
add
in
leave
pop
lret
icebp
push
pop
in
xor
sub
add
cmpsb
sar
lods
cwtl
aaa
pop
mov
cmp
hlt
sbb
jle
rorb
xlat
and
sarb
cmp
fistl
aam
shrb
xchg
faddp
roll
mov
xlat
push
sub
pop
ljmp
insb
sarb
dec
xchg
push
std
mov
jne
pop
sub
lcall
test
out
hlt
insb
test
ret
jb
pop
jbe
xchg
movsb
pushf
outsb
insb
dec
gs
pop
jl
or
rclb
cmpsl
xchg
popf
push
pop
pop
adc
clc
fs
jno
and
pop
rclb
cld
loopne
cmp
int3
andl
adc
lods
and
test
and
cs
adc
repnz
sbb
mov
flds
mov
popf
mov
dec
add
ljmp
loope
scas
jno
jo
pop
pop
sbb
aas
jae
dec
mov
xchg
fidivl
mov
cmp
pop
xchg
fwait
push
mov
pop
add
in
or
in
jge
jae
jbe
cli
sarl
mov
push
xchg
pop
mov
in
sub
fwait
mov
icebp
pop
or
mov
mov
jno
mov
add
gs
and
test
jle
jle
movb
pushf
ret
mov
mov
outsb
jecxz
jge
jle
cmp
je
lds
jno
sbb
fs
rclb
aam
pop
les
mov
mov
cmp
lds
icebp
cmp
xchg
insb
js
cmpsb
cmp
movsb
inc
or
push
fisubl
out
cmp
xor
add
popf
in
movsl
repnz
xor
push
imul
mov
dec
test
lret
int3
sbb
and
push
push
xchg
lret
cmp
or
mov
mov
sahf
ret
or
and
sbb
gs
leave
mov
lods
aas
ficoms
inc
add
and
ret
dec
adc
loopne
enter
push
les
jnp
xchg
sarb
pop
inc
cmp
push
pop
fadds
xor
rolb
sbb
dec
js
xor
fisttpll
sbb
dec
pop
mov
jae
cli
hlt
lcall
mov
cmp
movsb
jne,pt
dec
rol
xor
repnz
mov
shll
stos
sbb
jns
push
push
sbb
and
and
gs
lret
lds
inc
xorl
iret
jmp
push
xor
add
outsb
xchg
stos
cmpsl
push
mov
mov
inc
sahf
ljmp
adc
addr16
leave
popf
pop
cmp
jnp
inc
jbe
cli
add
sbb
lods
cmc
jb
lcall
mov
push
pop
cld
cmc
stos
in
push
push
lea
popf
fadds
xor
les
jle
dec
cwtl
adc
fld1
std
xchg
outsb
xchg
sbb
in
lret
cmp
lret
test
xchg
pop
shr
xor
mov
jmp
xlat
cmpsl
gs
lret
pop
mov
mov
into
jmp
pop
fidivs
pushf
push
lcall
push
push
ret
fcomps
movsl
pop
dec
pop
push
xchg
mov
mov
shrb
jle
inc
icebp
adc
push
jo
xchg
pop
xchg
jl
les
outsb
fwait
xchg
sub
push
or
fcoml
hlt
pop
scas
les
pop
std
stos
shrb
inc
pop
push
xor
lods
push
movsb
jg
mov
and
add
cltd
jae
sbb
ja
pop
loopne
jns
add
fsts
out
push
push
pop
fsubrl
fisttps
xor
ljmp
xchg
addr16
cmc
inc
dec
cmp
icebp
xchg
stos
jno
push
pop
adc
fisttps
repnz
ds
jg
fisubrl
and
dec
push
mov
xor
iret
push
dec
fbstp
mov
popf
std
or
pop
mov
push
dec
push
cmp
dec
cmpsb
call
les
adc
fst
insb
in
adc
dec
cmp
or
fisubs
sub
xchg
xor
jg
mov
jae
or
push
ss
jg
fimuls
mov
mov
out
cmc
xchg
movsb
lea
fldt
out
pop
jg
pushw
xor
repz
int
dec
flds
scas
addl
outsb
cwtl
inc
test
pop
mov
jp
mov
sbb
and
mov
shrb
inc
mov
push
shll
lods
lods
jp
dec
xor
imul
adc
test
jg
jg
pop
fisttpl
cmp
push
and
insl
sub
xor
fisttpll
push
in
xor
jbe
adc
clc
inc
mov
fnstcw
js
ds
repnz
cmp
stos
testb
adc
rolb
call
popa
lds
out
xorb
stc
test
dec
rorb
jg
mov
in
and
sbb
inc
fsubr
sub
push
cmp
inc
pop
sahf
push
pop
enter
add
sub
aad
je
mov
test
cmp
test
pushl
into
cltd
imulb
mov
inc
and
cmp
jne
stos
lds
mov
push
repz
and
icebp
or
ljmp
cli
pop
jmp
rolb
xor
push
and
sbb
repnz
pop
fimull
iret
nop
jge
scas
int
scas
cmpsb
loope
decb
mov
notl
adc
out
mov
loopne
cli
outsl
ds
sbb
lcall
out
repnz
jns
jle
mov
add
pushl
into
xor
cwtl
test
jecxz
add
mov
and
pop
das
enter
cltd
xchg
dec
xchg
jge
sub
sbb
fsubrs
mov
dec
inc
cmpsl
lea
jg
movsl
add
sbb
pop
mov
fdiv
add
push
push
jo
outsb
adc
mov
jge
and
adc
sti
sub
lahf
bound
mov
sbb
sub
dec
lret
hlt
stos
push
push
dec
test
mov
into
pop
sbb
jmp
sbb
or
aas
scas
xchg
fisttpll
dec
mov
lods
out
push
mov
or
push
pop
andl
jno
vmovupd
mov
outsb
dec
lcall
jbe
mov
pop
inc
mov
cmp
dec
lock
loope
inc
mov
adc
xchg
pop
adc
xchg
sbb
insl
shl
sbb
jnp
scas
cmpsl
mov
out
mov
cli
rorl
aad
push
xor
ficomps
ss
pop
inc
dec
mov
jmp
jge,pn
lds
xor
sub
jbe
lahf
push
stc
cmc
sbbl
dec
out
les
fdivs
mov
pop
fdivrp
add
dec
cmpsl
and
test
pop
jno
jbe
rol
xor
xlat
lock
cmp
mov
cli
pop
or
fdivl
add
jne
sbb
cs
hlt
cmpsb
gs
pop
dec
xchg
shll
dec
shl
mov
enter
std
mov
sbb
jge
stos
mulb
icebp
sub
fcoml
or
lds
sub
out
je
sbb
xlat
xor
mov
cmc
mov
leave
es
xchg
fildl
dec
add
cmc
inc
inc
out
nop
or
aam
sub
dec
dec
paddb
pushf
push
aaa
or
aam
jns
lock
fistpll
mov
xor
xchg
jmp
daa
imul
ss
fdivr
pop
mov
stc
dec
cltd
cmp
fbstp
cmp
add
cmpsl
pop
adc
mov
pop
aaa
inc
mov
jge
push
or
out
sbb
stos
loopne
xor
adcl
popf
repz
into
fwait
aad
fnsave
jae
or
shlb
add
jne
loope
into
lds
dec
pop
ds
adc
sub
xchg
shlb
andnps
adc
mulb
and
jle,pn
scas
mov
popa
lock
bnd
add
cli
lock
mov
lds
pusha
push
push
and
push
js
fldenv
xchg
mov
arpl
icebp
lock
les
mov
outsb
push
stos
mov
movsb
mov
ret
loop
stos
mov
and
or
mov
stos
lods
cmpl
outsl
xchg
xchg
jge
in
clc
pop
xchg
jle
jo
in
jae
adc
sarb
cmpsl
jecxz
sbb
sub
clc
cmp
dec
cwtl
mov
xor
mov
mov
pop
xor
add
mov
imul
jmp
add
in
xchg
test
jge
inc
add
in
pop
pop
into
nop
dec
sub
out
xchg
inc
pop
scas
lds
xor
push
xchg
xor
fwait
das
push
and
xchg
mov
push
jo
push
aad
aaa
movsb
cmp
pusha
jnp
dec
and
mov
pop
pop
or
jb
mov
jne
xchg
mov
inc
sub
test
pop
aam
pop
out
aas
and
cmp
into
jmp
inc
mov
or
xchg
je,pt
xchg
mov
xchg
jle
cmp
pop
mov
les
and
xor
jmp
cmp
movsb
fcompl
jb
pop
hlt
jnp
dec
add
shrb
les
inc
jnp
sbb
outsb
repnz
mov
cmpsb
sti
aas
rolb
cld
rcr
push
push
subb
adc
aas
insb
in
dec
mov
or
insb
xor
sub
or
test
cmpsb
adc
xlat
fdivl
jae,pt
mov
cmpsl
push
or
sub
das
mov
imul
lds
pop
repz
xor
pop
jl
xor
movsb
jge
pop
aam
ss
aam
outsl
lds
cli
test
sti
test
int
mov
shrb
cmpb
sub
dec
dec
sbb
lcall
jmp
mov
jns
xchg
cmpsb
and
data16
xchg
lods
xor
test
xor
cli
cmpsl
xor
dec
jl
cmp
pop
add
sbb
cmp
pushf
cmpsb
outsb
and
hlt
sbb
fucomi
sbb
into
mov
roll
stos
clc
daa
and
jl
mov
leave
add
mov
cli
or
add
ret
lcall
shll
mov
mov
es
imull
sbb
mov
add
sub
loope
mov
je
cmpsl
xchg
add
jb
test
cwtl
shrb
aaa
xchg
es
pushf
vmovdqu
mov
sbb
jae
loope
adc
xchg
or
les
pop
xor
sti
out
call
inc
inc
cli
outsb
inc
hlt
cmp
les
aad
sbb
enter
xor
loopne
fcmovnb
inc
mov
gs
std
pusha
scas
ss
es
fsubrs
test
and
cli
mov
rol
mov
in
test
loopne
xor
in
das
imul
int3
cmpsb
lahf
inc
mov
out
cmpl
dec
jg
mov
enter
insb
fsubl
sub
test
lock
adcl
into
imul
mov
fnstenv
in
in
out
jl
in
xor
xchg
inc
sbb
add
repnz
jp
mov
adc
xor
pop
stos
cli
test
jge
out
and
cmpl
adc
cmc
outsb
cmp
js
jno
jb
fwait
push
sbb
iret
cwtl
inc
test
lds
sub
rol
out
add
push
push
jl
addr16
inc
sbb
test
out
mov
mov
inc
aaa
dec
jg
stc
cmp
imul
sahf
and
clc
push
imul
or
xchg
mov
xor
dec
test
jmp
push
push
insb
push
nop
aaa
adc
mov
jnp
fcompl
push
pushf
adc
sub
xchg
or
std
jne
xchg
test
sbb
daa
xor
adc
mov
arpl
jae
in
psrlq
dec
xchg
mov
test
rcrl
test
xchg
rcll
push
sbb
clc
xor
and
mov
std
les
scas
outsl
adc
les
adc
xchg
in
test
test
adc
test
pop
ss
mov
lea
adc
test
lea
mov
push
nop
xor
mov
test
push
movsl
loop
clc
gs
add
mov
dec
jae
add
das
jne
enter
aad
sub
dec
mov
push
das
mov
test
mov
push
cmpsb
push
cs
sub
mov
stos
push
sbb
xor
mov
or
test
or
pop
cmpsl
jo
bound
ss
jle
aam
notb
shl
push
mov
or
addl
pop
lods
inc
push
movsl
jl
dec
cmp
push
jbe
int3
ds
xchg
jge
aad
xchg
mov
jbe
inc
push
xor
xor
mov
dec
je
mov
shll
jne
jle
rclb
popf
push
in
jle,pt
mov
stc
not
int
fistpl
int
in
push
mov
cmc
rcll
xchg
push
push
in
mov
jb
or
mov
xor
shll
aas
mov
stc
aad
sarl
sbb
adc
lret
xor
jle
fs
xor
xor
xchg
pusha
xor
add
push
icebp
insl
rcll
lds
jbe
inc
mov
mov
insl
jb
adc
int
xchg
add
cmp
xor
bound
aad
cmp
daa
loope
movsl
push
pop
repz
pop
mov
pushf
sub
divl
mov
pop
sub
shrl
jle
stc
fldcw
push
mov
pop
sub
cmp
lock
sbb
push
mul
scas
ret
mov
andb
call
pop
push
mov
jbe
jmp
xchg
xchg
rcrb
push
sbb
jp
sbb
lcall
push
adc
icebp
mov
pop
push
push
cmp
mov
inc
mov
xchg
mov
cld
ret
mov
fistps
je
lds
pop
pop
or
push
jne
cmpsb
adc
xchg
xor
jl
push
cmp
sub
dec
cmp
jne
cmc
jmp
mov
enter
notb
mov
jae
push
and
stos
sub
jbe
mov
cmp
cld
cmp
dec
pop
sbb
out
adc
pop
adc
cld
rcrb
ja
mov
sbbb
outsl
jne
xor
push
insl
pop
imul
jecxz
jg
fwait
cwtl
imul
sub
add
addr16
outsl
mov
jbe
movsl
push
mov
or
mov
repnz
push
mov
mov
ret
and
push
add
ficompl
xor
adcb
cmp
mov
push
mov
ss
rcr
mov
test
or
and
sub
adc
int3
jns
sbb
xchg
fdivl
inc
cmp
ret
jno
push
lods
adc
dec
jnp
mov
push
sbb
adc
stos
mov
push
and
iret
mov
mov
ja
adc
jbe
in
cmpsb
clc
gs
mov
and
sbb
arpl
insl
jns
fildll
aad
insl
or
out
xchg
xchg
out
mov
adc
pop
rolb
or
adc
mov
outsl
push
ret
cmp
lds
xor
mov
jl
lods
adc
push
mov
jbe
addl
push
shrl
or
jne
daa
xchg
sub
and
xchg
mov
sub
jo
testb
pushf
mov
ljmp
mov
fwait
lret
add
sub
cmp
ja
mov
push
notb
push
enter
and
sbb
out
lcall
mov
add
gs
lret
stos
sbb
aad
xlat
add
cmp
sub
enter
sbb
mov
imul
ljmp
cli
std
mov
sub
int
push
inc
sub
pop
cmc
mov
in
mov
push
shll
xorb
dec
dec
and
mov
loope
movb
xchg
flds
mov
xor
fldl
mov
fdivs
jp
insb
or
push
pop
imul
jg
jns
mov
mov
out
pop
and
jecxz
cli
mov
fwait
mov
clc
pop
in
pop
xor
xchg
cmp
jae
mov
sbb
std
into
lret
fdivrp
int
jo
emms
fldt
out
and
lds
ds
roll
dec
pop
out
outsl
add
cmp
jne
loopne
adc
or
js
daa
jns
xchg
cmpsl
sbb
int
scas
add
mov
sub
jns
sub
cmp
stc
lock
insl
add
nop
xchg
pop
pop
sbb
leave
out
imul
imul
in
push
out
lret
sarb
pop
leave
mov
xlat
stos
rcll
fstpl
push
push
mov
jge
pop
pop
mov
xor
jae
popf
insl
adc
xchg
lods
mov
test
xchg
mov
xor
je
pop
imul
mov
mov
out
adc
push
cli
gs
sti
push
xor
push
jge
jbe
or
pop
cld
adc
dec
xchg
sub
cmp
mov
out
push
pop
loopne
jl
out
outsl
inc
sarb
test
push
add
outsl
cmp
das
add
cmc
or
je
test
dec
fmull
in
pop
jns
sub
aaa
add
sub
pop
jae
pop
data16
sbb
push
jne
xchg
inc
push
cmp
out
mov
loope
pop
imul
jle
jnp
sbb
cmp
cltd
push
push
xchg
add
jns
jmp
push
ja
mov
in
pop
mov
push
dec
imul
movb
mov
cmp
sbb
xchg
loop
gs
cltd
lret
mov
mov
rcrb
push
push
jecxz
test
ja
fisubrl
jmp
push
scas
push
xorl
cmpsb
or
push
push
rorb
sbbb
xor
add
aas
inc
leave
jne
addr16
or
pop
xchg
mov
lea
jle
std
outsl
adc
inc
fs
mov
xor
in
aad
or
ss
xor
mov
aam
xorb
add
mov
sub
sbb
jne
mov
idivb
clc
xchg
add
push
test
pop
xor
jbe
cmpsb
or
inc
imul
lcall
les
xchg
xchg
adc
stos
add
xor
xchg
les
adc
insl
pop
in
mov
mov
dec
xchg
cmp
lods
pop
lret
repz
test
pop
adc
dec
subl
ja
lret
sub
sbb
mov
test
add
and
sub
mov
adc
xchg
xor
es
and
push
lock
push
insl
lods
shl
enter
jp
movsl
loope
sub
test
push
jnp
cmp
ror
fstl
imul
add
dec
push
jbe
movsl
cmp
add
test
loope
push
jo
dec
jmp
je
inc
cs
out
cmc
ss
jno
or
jbe
icebp
fs
gs
clc
cmp
test
mov
inc
pop
mov
jnp
pop
out
cmp
mov
inc
mov
xor
jg
cmp
popl
jo
dec
pop
fbstp
outsl
sub
movsl
mov
xor
pop
mov
aas
xchg
mov
mov
stc
mov
mov
inc
insl
mov
int
popf
adc
das
mov
fidivrs
sarl
aas
repnz
shrb
lock
inc
das
fsubs
xorl
mul
cmp
mov
lds
cs
fisttps
sbb
pusha
add
stos
pop
cld
push
jbe
push
sbb
loop
mov
out
data16
mov
jae
xchg
cli
popa
in
cmp
add
cmp
imul
pop
jns
cli
mov
xchg
dec
adc
add
mov
fwait
jecxz
sbb
inc
add
gs
jmp
sbb
mov
and
or
sahf
setno
icebp
pop
dec
insl
and
push
xchg
inc
pop
lea
out
dec
push
divb
jo
push
cmp
adc
and
addr16
push
xor
shlb
push
jecxz
mov
adc
aas
sbb
bound
outsl
mov
push
cld
xor
lret
inc
jmp
or
outsl
xor
add
cmp
inc
adc
sub
push
jb
xchg
enter
pop
mov
xchg
xor
xchg
daa
xor
pushf
pop
or
jbe
ficompl
mov
cmp
js
mov
xchg
xchg
pop
cwtl
sub
outsl
push
sub
inc
int
jg
mov
push
add
lret
sub
fs
cmp
lcall
inc
sub
int
push
rorl
gs
jb
test
mov
fiadds
jne
push
inc
jno
cld
sub
movsl
inc
xchg
xchg
or
ss
add
push
sbb
jg
xchg
jns
je
sub
pop
add
sbb
jae
inc
lods
jmp
jne
xchg
mov
stos
fisubrs
icebp
in
jnp
mov
sbb
jbe
mov
lret
cmc
pop
loope
xor
js
cmp
push
and
xchg
lock
outsl
scas
pop
adc
arpl
or
mul
jle
fiadds
cmp
stos
xchg
insl
test
fmuls
cmpsb
xchg
adc
add
cmpsl
adc
ret
in
jmp
in
mov
mov
mul
in
aad
stc
or
int3
mov
int3
sub
push
xchg
add
sub
lods
mov
add
fcoml
cwtl
adc
pop
or
push
cmc
push
or
int
inc
stos
std
popa
xchg
cmpsl
notb
sub
negb
sbb
push
push
jl
out
test
leave
cmp
push
xor
gs
push
sbb
push
cmp
add
imul
scas
outsb
faddl
push
push
jnp
int
stos
inc
mov
sbb
jmp
jbe
dec
mov
fwait
pop
popf
cmp
sub
lea
ja
inc
cmp
leave
mov
sub
xchg
lea
cmp
inc
mov
jge
and
jo
lret
jne
xchg
scas
cli
lcall
cmpsl
jbe,pn
call
mov
sti
dec
mul
mov
loope
cmp
cmpsb
inc
clc
sti
addr16
es
xchg
jne
lcall
notb
xor
cwtl
test
sbb
lret
mov
ja
jno
or
je
cmp
stos
mov
cli
mov
sahf
jnp
push
lods
xchg
pop
inc
add
mov
fistpll
sub
dec
dec
clc
cmc
xor
sub
cwtl
mov
and
jne
mulb
add
mov
mov
mov
push
pop
jp
mov
mov
push
repz
xchg
jb
dec
dec
push
scas
jno
pop
pop
fistps
stos
popa
int3
pop
dec
insb
out
push
jae
sti
xor
jle
add
push
sub
or
push
lcall
fisubrs
repnz
or
test
frstor
push
mov
lods
outsl
out
mov
jne
mov
mov
scas
in
jns
lods
jl
lea
ja
stos
popf
xor
sbb
sbb
cmp
jne
lods
inc
push
daa
mov
dec
mov
xchg
adc
jle
scas
loopne
lea
xor
imul
xor
mov
lds
cmpsb
push
pop
adc
jnp
sbb
and
repz
push
sbb
stos
mov
pop
clc
insb
cmc
cmp
outsl
push
push
adc
jl
outsl
cmp
fdiv
sub
ret
jmp
jbe
cwtl
cs
test
negb
cmpsl
cmp
xchg
or
sarl
test
mov
lret
hlt
pop
test
jg
push
mov
xlat
enter
jnp
stos
fnsave
pop
pop
shrl
fwait
fs
lcall
ja
mov
dec
dec
jne
or
lods
add
cmp
cmpsb
mov
pop
pusha
jnp
sbb
test
enter
xor
jnp
lds
or
negb
stos
jns
lods
insl
dec
mov
mov
int3
jne
es
jns
push
mov
cmp
jns
and
pop
push
sub
cmp
or
pop
or
push
pop
insb
shrb
sub
popa
sub
cwtl
mov
dec
sbb
mov
notb
shrb
jae
sub
cmp
jbe
imul
dec
loop
dec
lods
in
inc
inc
popa
xor
pop
xor
outsl
scas
jg
imul
jno
mov
lock
and
bound
imul
imul
pop
mov
js
sbb
jl
fwait
add
cwtl
hlt
cmc
negl
inc
jo
stc
cmp
or
pop
mov
cwtl
add
or
lods
pusha
gs
int3
sarb
push
pop
aas
fs
cmpsl
insb
push
aam
jo
lcall
das
in
mov
jl
and
sbb
stos
inc
or
push
or
pop
pmulhuw
loope
mov
dec
loopne
inc
cwtl
aad
pop
std
pop
mov
stos
insl
repz
insb
jbe
lcall
push
ret
sbb
sahf
or
lea
sbb
sbb
jns
dec
bnd
push
jae
stos
mov
or
out
jbe
mov
fwait
add
jg
fisubrs
ljmp
cmp
nop
jne
cwtl
pop
jmp
lds
pusha
add
stos
js
dec
outsl
cmp
fbld
sub
imul
xchg
push
test
or
aad
out
test
out
mov
dec
jmp
pop
mov
mov
loopne
jl
cmp
cmp
pop
test
idivl
movsb
js
aas
into
lods
lds
xchg
inc
add
push
lcall
and
xchg
jge
fdiv
push
stos
pop
adc
inc
cltd
test
ret
vpaddb
and
or
es
movsb
pop
imul
jnp
adc
sbb
cmc
testl
push
scas
aaa
inc
push
pop
aad
pop
out
jns
or
dec
outsl
lret
sahf
mov
mov
jae
scas
pop
shr
mov
bnd
in
adc
loope
aas
xor
mov
movntq
out
loop
xchg
xchg
mov
push
lcall
xor
pop
or
push
cwtl
mov
push
mov
mov
faddl
arpl
jae
inc
es
in
mov
mov
cmp
jl
jo
or
inc
nop
imul
cmp
pop
stc
gs
xchg
lods
pusha
lea
dec
out
add
xor
notb
std
lods
inc
pop
mov
dec
mov
add
fadds
mov
cmpsb
mov
into
pushf
or
jae
inc
js
dec
mov
fwait
xor
adc
ja
jae
insb
and
dec
mov
cmp
sub
ds
adc
xor
dec
lahf
or
xor
xor
pop
jno
jbe
jmp
lea
out
jno
mov
ret
outsl
cmpl
jae
into
sub
inc
mov
lret
adc
je
loopne
cmp
dec
jbe
aad
pop
or
bound
outsl
sbb
add
dec
jge
aad
sub
in
orl
and
sub
pop
out
sub
ss
xor
inc
cmp
inc
lds
mov
mov
or
jnp
nop
negb
js
dec
test
lret
mov
pop
mov
lea
scas
insl
push
cmpl
jge
jns
sti
pop
push
enter
and
or
mov
sbb
pop
lods
jnp
aas
dec
jnp
cmc
out
adc
adc
lods
pop
ja
fwait
jp
pop
frstor
jne
sti
aaa
repz
mov
jnp
or
lret
imul
push
fdivrs
mov
adc
js
pop
dec
mov
dec
rorl
jae
pop
dec
daa
movsb
xor
stos
xorl
sbb
in
push
or
sar
ret
or
pushf
dec
cmpsl
cmc
xchg
rcrl
jecxz
push
jae
repz
int3
push
pusha
push
sti
jl
cmc
pop
cmpsb
out
push
mov
inc
out
jnp
mov
lods
mov
push
fidivs
out
mov
fnstcw
dec
test
mov
testl
mov
sbb
test
inc
sbb
push
orl
push
xlat
ljmp
jle
leave
inc
adc
mov
pop
sbb
jnp
imul
pop
mov
test
jae
jb
or
mov
popf
fwait
pop
ljmp
stos
pop
testb
sbb
inc
push
test
je
test
lret
xchg
daa
jne
sub
rol
sahf
scas
or
fimuls
sbb
jbe
in
mov
sub
xchg
lret
fdivrl
pop
push
test
adc
push
jbe
sbb
lcall
cmp
push
jbe
xorl
data16
jmp
adc
xchg
daa
mov
std
mov
jne
mov
sub
or
mov
jmp
xor
fisttps
push
pop
cmc
clc
inc
xor
mov
test
stos
les
lods
out
data16
xor
leave
es
jnp
xor
sub
and
mov
into
add
mov
cmp
mov
cmp
jno
mov
neg
movsl
and
jo
sub
dec
sbb
mov
sbb
cmp
repz
mov
mov
ss
insb
xchg
sbb
pop
adc
jl
cmc
pop
idiv
cmp
add
out
pop
mov
mov
neg
pop
dec
dec
insb
ss
inc
mov
outsb
daa
icebp
loop
sbb
jne
pop
loopne
pop
dec
sub
cmc
lahf
jge
cld
inc
lret
mov
adc
fldt
push
movsb
jo
jnp
jmp
push
test
bound
nop
jbe
push
mov
dec
jbe
test
inc
jle
jnp
push
std
scas
setb
mov
stos
out
mov
mov
jno
jbe
sbb
pop
pop
pop
pushf
and
in
add
shlb
lret
std
insl
cld
jb
xchg
stos
outsl
add
inc
cmp
ja
scas
dec
sub
int3
mov
jne
xor
test
icebp
sub
repz
mov
or
cmp
sahf
mov
subb
ja
mov
stos
and
fistl
jne
fisttps
jg
jmp
adc
push
xchg
jbe
test
mov
mov
xchg
jns
out
mov
repnz
jge
jb
dec
test
push
push
into
daa
or
insb
mov
jg
push
icebp
lret
ret
add
adc
xor
pop
push
xor
loopne
dec
jl
popa
jne
lods
mov
ss
xor
mov
push
or
lock
lods
sahf
or
das
pushf
adc
movsb
pop
aad
pop
nop
inc
jne
mov
mov
jnp
in
int3
push
or
dec
xor
mov
cmpsl
not
pop
out
in
iret
jae
add
and
xor
or
adc
and
outsl
pop
arpl
scas
insb
inc
jne
stos
aaa
add
inc
nop
js
and
jne
mov
mov
sbb
sub
adc
push
iret
xchg
aaa
pop
cmp
mov
pop
xlat
fwait
lods
stos
iret
mov
jno
stos
push
jae
rcll
outsl
mov
fnsave
cwtl
lds
or
or
mov
lret
call
push
aad
daa
rep
push
aam
in
xor
jnp
cmp
sub
out
push
push
jno
xor
xlat
mov
adc
mov
addr16
mov
inc
js
cwtl
jae
xchg
data16
xchg
fimuls
in
loope
mov
mov
push
jp
mov
pushfw
mov
test
jns
aad
lods
out
jae
xor
jne
ficoms
dec
int3
gs
pop
add
jbe
pusha
add
cmp
notb
pop
mov
data16
or
ss
or
mov
mov
ret
loope
jl
add
mov
ja
push
gs
jmp
jne
and
lret
sti
notb
push
add
cmp
lock
jo
repnz
adc
scas
in
pop
test
into
adc
imul
cltd
adc
jge
jnp
push
and
push
add
std
xchg
fwait
xor
cmp
scas
imul
cmc
mov
movsb
ret
push
mov
js
mov
xchg
dec
aaa
das
push
stos
push
mov
pop
mov
xlat
iret
and
std
pop
mov
and
addl
outsl
roll
je
adc
imul
push
loope
vmwrite
xor
mov
xchg
jecxz
xchg
stos
ja
mov
jae
dec
aas
jns
fidivrs
inc
fldt
mov
fisttpll
jmp
mov
mov
mov
pusha
loop
ret
das
cli
lods
enter
in
inc
sbb
push
sub
lea
inc
mov
mov
les
jno
out
xor
lds
cli
add
add
outsl
les
rorb
roll
fnsave
bound
jno
inc
loope
fstps
jae
inc
xor
sarl
push
mov
sahf
insb
ljmp
movntq
cltd
adc
inc
cmp
push
or
repz
jbe
push
neg
aad
mov
negl
pop
sub
cmc
in
inc
loopne
sub
out
rcrl
dec
imul
ret
scas
cmp
adc
repz
fdiv
inc
jg
xor
push
daa
fldenv
adcl
les
dec
mov
int
mov
xlat
ret
into
test
xor
out
cmp
and
mov
jg
in
repnz
test
dec
and
add
aam
mov
out
fwait
jecxz
jle
and
test
mov
icebp
repz
ss
sub
jno
cmp
cmpl
pop
or
in
stos
stc
mov
jne
dec
into
call
into
mov
scas
shlb
jmp
add
mov
push
mulb
inc
lods
add
pushl
lea
push
scas
dec
mov
fdivrl
cmpl
scas
inc
and
fwait
add
lods
push
fcmovb
arpl
sub
outsl
jae
xor
pop
jmp
test
dec
mov
jae
addl
push
dec
dec
adc
jne
lds
les
jno
jnp
xchg
shlb
cld
xchg
xorl
lock
mov
in
scas
or
xchg
dec
loop
and
fdivrl
sarl
xor
xor
jno
sub
xor
sub
push
add
or
packsswb
pushf
pop
xor
mov
mov
inc
out
inc
aad
in
jne
pop
xor
jg
fadds
or
lret
dec
xor
adc
les
ljmp
outsl
pop
call
dec
inc
or
dec
or
ss
dec
icebp
jg
mov
das
pop
adc
inc
sub
fistl
push
and
arpl
or
ret
xchg
popa
fwait
je
pop
dec
push
bound
mov
test
dec
sti
push
scas
orl
mov
cmp
or
xor
les
add
repnz
vmovapd
mov
adc
inc
ret
xchg
push
xchg
leave
jnp
movsl
loopne
daa
es
fadds
fisttpll
add
fsubrp
popa
loope
ret
movsl
stos
xchg
jbe
inc
movb
add
and
xor
in
sub
adc
jecxz
push
or
rcll
shll
fwait
addl
mov
les
mov
je
sbb
fildl
add
std
sbb
jmp
sbb
repnz
sbb
jp
mov
aaa
and
loope
sub
jbe
inc
mov
ljmp
inc
jmp
in
mov
xor
scas
or
hlt
dec
add
jle
sbb
or
les
sbb
jle
icebp
stc
push
cli
cmpsl
cltd
popf
push
mov
mov
xchg
add
rolb
pop
popf
sub
sub
enter
in
stos
mov
bound
and
pop
cmp
xchg
pop
mov
inc
lcall
mov
dec
lds
push
fdivp
adc
inc
and
adc
outsb
cmp
pop
inc
jge
fcoms
lea
cmp
mov
bnd
mov
sbb
lea
mov
sub
mov
jle
sbb
std
jmp
rorb
push
imulb
push
inc
push
and
jbe
inc
jle
into
and
js
repnz
out
in
cmpsl
bound
arpl
sbb
dec
push
xchg
mov
lea
pop
imul
mov
and
clc
push
cmp
dec
cli
push
mov
aaa
leave
mov
ds
push
lods
push
pop
cmp
xor
mov
mov
jle
pusha
mov
pop
dec
out
cmp
push
dec
pop
dec
fidivrs
leave
add
inc
loop
cmp
aam
lea
inc
lcall
rep
shr
adc
cmp
adc
xchg
add
repz
fdivs
mov
decb
addr16
popf
push
jl
les
dec
push
rep
mov
and
bound
cld
mov
dec
stos
jnp
mov
fsubl
data16
mov
fdivrs
add
xor
and
jmp
pop
push
mov
xchg
jae
arpl
movsb
sbb
push
fmul
push
jmp
sbb
out
cmpsl
add
xor
shll
test
or
divb
out
add
test
add
lds
add
xchg
lahf
lods
cmp
movsb
loopne
jo
ffreep
fildl
add
inc
mov
mov
and
shlb
lock
add
jae
lds
int3
fimuls
nop
sub
cmpl
mov
shrl
mov
push
mov
push
outsb
or
inc
cmp
dec
push
daa
fldl
pop
mov
and
jge
jl
out
dec
push
sbb
std
mov
pop
adc
in
xlat
ds
std
incb
jae
mov
in
repnz
andb
ret
aaa
mov
cmp
leave
xchg
mov
lock
mov
jns
push
je
ret
cmpsb
repnz
lods
cmpsb
and
push
stc
flds
cli
mov
cmp
push
les
or
pop
inc
aad
add
les
add
fadds
setb
lcall
lods
iret
cmp
sub
les
decl
lods
pushf
lods
pop
xchg
and
lds
mov
xchg
dec
and
mov
jle
inc
iret
jno
call
fcoml
imul
jmp
dec
sub
inc
jnp
mov
xchg
jl
mov
ja
test
push
sbbl
inc
out
xchg
fldcw
xchg
mov
inc
int
and
mov
mov
lock
arpl
roll
rcrl
lds
dec
add
jnp
enter
int
jne
imul
pushf
sbb
aaa
or
rclb
push
rorb
jb
stos
inc
rcrl
sub
push
jp
or
pop
jbe
pop
lahf
push
cmp
fisttpl
out
inc
loopne
inc
outsb
mov
test
cmp
std
sub
pop
or
repz
shll
sar
pop
xchg
xor
insl
push
movl
les
fdivr
shll
aad
mov
out
cltd
jne
xor
add
and
aaa
sar
push
int
aaa
jl
rcrl
rcll
sbb
xchg
adc
add
jbe
lds
fstpt
les
jle
fadds
cmp
mov
jnp
lods
sub
popa
enter
adc
cs
pop
dec
cmp
outsl
adc
mov
mov
ja
mov
leave
into
in
dec
push
mov
sub
add
test
call
mov
adc
bound
pop
das
jnp
mov
daa
shl
add
mov
pop
pop
mov
mov
ss
mov
insb
call
mov
dec
cld
sbbl
cmp
jmp
shl
repnz
pop
push
notl
shl
es
mov
mov
ljmp
pusha
cltd
insl
pusha
sub
lock
cwtl
enter
xchg
xchg
sbb
out
mov
lret
and
sarl
movsb
and
std
xchg
fdivl
add
jbe
insl
cmp
gs
loope
lods
jne
inc
or
sbb
aaa
je
add
sti
je
ds
jbe
xchg
jo
push
enter
dec
add
push
aad
mov
sbb
repnz
in
xorl
sub
and
xchg
sub
sub
gs
daa
movsb
into
aam
mov
jae
jmp
sub
fs
lea
cwtl
cld
adc
adc
or
jae
loop
bound
fidivrl
xor
daa
cmp
xor
pop
dec
repz
sub
aas
fnstsw
bound
hlt
cmc
jmp
insl
mov
push
xor
bound
daa
mov
jg
push
jbe
xor
mov
scas
div
inc
lock
jae
out
xchg
lret
fisubs
iret
jae
or
xor
in
in
adc
jg
aam
mov
lods
xchg
sbb
push
dec
jne
es
movsl
daa
push
mov
add
or
test
xchg
fimuls
push
inc
cmc
out
jae
out
clc
push
imul
mov
dec
mov
lea
dec
adc
cmp
hlt
mov
dec
mov
data16
inc
shlb
arpl
mov
hlt
push
jbe
out
jg
enter
idivb
inc
ljmp
mov
inc
add
lcall
sbb
inc
cmpb
inc
lcall
in
adc
adc
aad
dec
arpl
mov
bound
rclb
sbb
mov
push
inc
aad
add
outsl
sub
stc
mov
pop
nop
cmp
mov
push
add
sbb
gs
out
add
lea
add
outsl
adc
sti
movsl
mov
cwtl
add
and
leave
fistpl
test
lods
jbe
push
fiadds
out
pop
adc
cmpsl
push
cld
add
mov
pop
xchg
or
fcoms
jne
add
shll
jae
jle
push
xor
mov
xor
clc
aas
xor
sub
je
xor
push
jg
jmp
mov
fwait
adc
mov
pop
bound
mov
push
add
jb
inc
jne
push
lret
jle
imul
in
push
jnp
outsb
stos
rclb
clc
xlat
scas
xchg
and
xchg
out
or
jmp
cmp
popf
push
cltd
mov
outsl
inc
xor
lcall
fdivl
popa
lds
mov
fsubrl
adcb
jae
aad
int
popf
mov
cmpsl
dec
pusha
test
and
dec
sti
push
lahf
push
pop
lcall
std
out
test
cmp
or
xor
add
jne
pushf
notb
and
sbb
mov
and
jge
es
sbb
inc
mov
test
xor
shl
push
aas
rolb
mov
stc
in
sub
jecxz
negb
mov
lds
lret
ja
dec
push
insb
fcoml
ror
cli
call
dec
movsb
sbb
cmp
movsl
xchg
push
fimuls
aad
mov
ror
cld
add
jo
push
jl
dec
lea
add
xor
mov
aad
in
push
aaa
sub
out
lock
mov
cmp
add
les
xchg
mov
call
bound
ja
jo
cs
fwait
push
pop
pop
cwtl
gs
test
xchg
inc
push
daa
inc
loopne
movsl
rcl
bound
les
shll
xchg
imul
cli
cmp
dec
sbb
xchg
es
cwtl
mov
loopne
stc
out
pushf
pop
add
lods
xchg
std
clc
xor
jo
decb
lcall
inc
test
scas
jne
mov
cmp
cwtl
sti
ljmp
loope
add
lea
xor
faddl
popa
xchg
xor
add
in
and
les
loope
ja
into
inc
mov
pop
rcll
out
je
imul
repnz
xor
fs
adc
add
sub
lret
add
andl
shr
test
andb
addr16
imul
push
and
call
jp
sub
icebp
js
addr16
sub
outsb
dec
fcoms
sub
pop
jecxz
out
movsb
imul
sar
push
gs
out
adc
jle
pop
hlt
xchg
push
dec
cmc
outsb
lret
cmpsw
cmp
xchg
inc
mulps
ljmp
int
das
test
push
movb
ss
jge
pop
xor
insl
lahf
push
cmp
adc
in
mov
scas
into
inc
xor
mov
stos
sub
mov
das
jne
bound
data16
stos
outsb
and
stc
jp
cmp
or
fidivrl
shrl
in
sbb
mov
push
mov
pop
mov
xchg
loop
add
jne
sbb
dec
push
xor
in
out
aas
das
std
ds
bound
xchg
sub
cmpsb
inc
xchg
out
mov
xchg
ss
jne
mov
je
rorb
lock
test
loopne
jne
lods
repz
sahf
mov
or
aad
cld
sub
jne
jmp
jns
cmp
jle
les
mov
lods
xchg
movsb
jae
cmc
mov
js
sub
fdivs
add
mov
daa
arpl
jne
pop
int3
insb
es
fnsave
dec
mov
xor
add
jne
aaa
sar
nopl
mov
testb
addl
and
jne
mov
mov
lcall
xchg
nop
jbe
mov
fistpl
js
mov
cmpsl
fs
arpl
push
lock
cli
xchg
mov
sti
shl
loop
add
jge
xchg
cld
fcompl
xor
jne
push
xchg
scas
jbe
clc
incb
xor
pop
jne
jno
dec
adc
cmp
sub
flds
push
push
iret
out
jbe
fwait
dec
icebp
jne
imul
xchg
pop
mov
cmpsb
fdivr
mov
lahf
test
loop
xor
jae
xlat
cli
neg
popa
pop
in
mov
xor
das
loopne
or
adc
pushf
fdivs
mov
fimull
pop
test
push
ds
jecxz
add
mov
xchg
jae
aas
cmp
pop
mov
cmp
adc
fcoms
push
jae
mov
test
cld
mov
xchg
or
inc
imul
dec
and
lea
jl
inc
mov
jne
addr16
mov
mov
jne
mov
cmpl
daa
pop
xchg
xchg
inc
insl
jmp
jne
pop
mov
jb
dec
std
clc
mov
push
lods
lods
adc
dec
mov
or
es
jae
nop
les
lahf
std
out
pop
mov
insb
jne
loopne
sub
rcll
jne
xchg
dec
pop
cmpsb
xor
inc
jne
xchg
test
es
mov
insl
adc
cmc
cmp
pop
jns
or
mov
lret
ss
popa
clc
cmpsb
cmp
outsb
push
data16
aas
lods
and
pop
jle
jne
frstor
enter
dec
mov
negb
sbb
jne
sahf
out
and
add
sarb
es
jne
loop
sbb
and
shll
fidivs
ljmp
jne
stc
addr16
insb
xchg
adc
jne
cmpsl
xchg
dec
mov
fsubl
inc
push
lods
cmp
ja
mov
adc
or
pusha
outsl
fildl
mov
into
mov
jnp
aam
xor
pop
in
push
adc
add
mov
outsl
jle
orb
xor
iret
mov
leave
fmull
lret
sbb
add
or
imul
sti
sub
lock
mov
mov
or
into
pusha
xor
cmp
jne
pop
stos
pop
stos
pushf
je
jae
xchg
jno
mov
scas
sahf
lea
lcall
test
jne
sub
adc
push
adc
loop
push
imul
jb
fdivs
push
xchg
push
shll
out
stc
mov
sub
repz
xchg
pop
cmp
lods
int
xchg
ss
hlt
mov
mov
mov
adc
inc
or
cmpl
add
daa
mov
sbbb
pop
imul
cmpsl
shrl
inc
sbb
dec
in
cmp
mov
xor
dec
xor
xchg
or
and
popa
jg
cltd
jne
or
and
inc
xchg
jne
lea
fisttpll
shlb
jle
shlb
and
ret
jmp
ljmp
test
mov
xor
lcall
sbb
scas
adc
mov
push
mov
jbe
push
pushf
inc
xchg
sbb
stos
jne
mov
rcrl
lahf
bnd
pushf
int3
ficoml
shll
and
mov
nop
jae
stos
xchg
push
lret
stos
jne
jecxz
mov
repz
sub
jbe
jmp
fisubrs
and
jne
cltd
das
test
pop
jne
scas
test
cmp
dec
xlat
nop
stos
jnp
into
fwait
jne
test
xchg
jne
pop
sbb
jne
repz
and
in
fimuls
es
push
mov
mov
sbb
cmc
jb
dec
jne
xchg
push
sub
push
mov
orl
fwait
cmp
lds
lods
jae
je
js
push
push
push
cmp
xchg
mov
inc
xchg
testb
mov
sti
xchg
lret
xchg
es
sub
xchg
int
or
cmp
jecxz
add
jne
fbstp
mov
sub
push
push
fnsave
negb
cs
aam
ds
addr16
mov
mov
lock
pushf
loope
ss
and
jae
pop
fsubs
sbb
jae
xchg
cs
or
adc
fdiv
mov
psubsb
sti
add
pop
xor
cmp
add
pop
shr
shll
adc
outsl
mov
mov
insb
inc
sbb
mov
inc
aas
xchg
insl
sub
sub
mov
adc
adc
jnp
push
cmp
popa
xchg
aad
mov
scas
sub
stc
push
cwtl
jne
ficoms
pop
add
mov
jle
jae
loopne
test
dec
sbb
scas
pushf
mov
in
subb
jp
adc
mov
jae
jge
fnstenv
jne
lahf
dec
hlt
jg
pop
mov
enter
insl
insl
pop
loop
mov
mov
jne
dec
or
sub
jne
sub
das
sahf
cs
cmc
sarb
push
in
dec
xor
insl
cmp
cmc
mov
jnp
push
sub
sbb
and
add
testb
mov
push
imull
rcrb
shll
xchg
loop
or
mov
push
scas
or
cmpsl
jne
sub
ret
shr
out
jne
lock
dec
stos
adc
xchg
test
mov
jne
mov
arpl
idivb
inc
insl
or
rorb
inc
and
out
mov
lods
loopne
sarl
jne
push
inc
cli
lock
xor
dec
adc
scas
out
cmp
mov
jne
ret
cmp
pop
cmpsb
imul
cmp
mov
inc
popa
xchg
mov
cmp
jbe
sub
mov
lret
push
int3
add
daa
xchg
shll
aaa
cmp
insb
push
sbb
sub
adcl
popa
xchg
cmc
out
bnd
xchg
mov
bound
std
adc
jne
push
inc
stos
cmpsb
inc
dec
inc
jne
adc
movsb
add
fistpll
push
mov
mov
data16
in
push
sbb
cmpsl
into
faddp
jae
dec
sbb
sub
push
iret
movsl
repz
mov
sbb
cmp
daa
dec
or
cltd
aad
mov
pushf
lret
adc
mov
ret
jbe
shlb
mov
punpckldq
imul
popf
jne
jno
shrl
testl
pop
outsl
xchg
jnp
adc
cmc
data16
fisttps
dec
aad
xchg
cmp
and
cmp
repz
out
aas
cmp
mov
negl
dec
jbe
or
cmp
rolb
mov
pop
jmp
xchg
push
adc
loope
mov
dec
in
adc
jne
dec
push
out
mov
sbb
xchg
cmpsb
lcall
cmp
cld
dec
fnsaves
or
push
inc
push
lret
movsb
cltd
stos
scas
les
testl
scas
push
arpl
push
sub
daa
enter
pop
loop
stos
inc
inc
jnp
mov
cmp
lds
or
out
pop
xor
into
xchg
mov
stos
lock
aas
outsl
clc
push
or
sbb
es
fs
ljmp
lds
dec
cmp
adc
or
mov
mov
cmp
push
mov
add
jle
imul
push
pop
in
jne
xchg
andl
rcr
or
icebp
xlat
lods
jae
pusha
cmp
enter
jge
jne
mov
mov
lahf
mov
sahf
jne
pop
repz
fistps
imul
pop
xor
sbb
leave
cwtl
dec
xor
scas
into
inc
cmpsb
jo
sahf
loopne
test
sub
mov
push
les
sbb
cmpsl
cmc
mov
iret
xchg
mov
xchg
pushf
cmp
push
pop
cmp
sub
daa
fidivrs
mov
out
jmp
jecxz
daa
push
scas
pop
outsl
addb
shll
out
push
push
cld
popa
mov
push
in
pop
imul
cmp
mov
enter
jl
mov
dec
addl
loop
jge
xchg
pop
pop
xor
mov
mov
xchg
stos
or
push
stos
sbb
outsb
and
add
bound
pop
sub
out
clc
rcll
ss
clc
notb
dec
icebp
shlb
xchg
dec
stos
pop
sbb
xor
insb
push
pop
fcompl
subl
sub
test
ljmp
xor
mov
sbb
xchg
jns
imulb
into
cmpsb
loop
aaa
gs
cmc
push
leave
inc
pop
fs
repnz
mov
cmp
cmp
xchg
pop
hlt
cmp
jne
jp
dec
popa
mov
push
adc
rolb
dec
and
es
inc
icebp
mov
cli
mov
hlt
or
out
cmc
mov
pop
sarl
cmp
cmp
aas
mov
imul
enter
jb
fbstp
outsb
repz
and
mov
movsl
insl
mov
or
movsl
into
or
xchg
mov
dec
cmp
stos
arpl
ds
fiaddl
repz
pop
movsl
jl
daa
add
push
jae
or
test
loope
in
incl
mov
cmp
ror
jl
lods
xchg
int
mov
repz
pop
cmp
mov
xchg
imul
jns
vmovups
jae
mov
rcrl
cmpsl
lret
pop
mov
push
scas
je
subb
lods
ja
jne
movsb
pop
jnp
jno
xchg
repnz
or
push
rcl
jne
mov
xor
push
dec
into
jne
dec
std
cmp
popf
lret
add
mov
adc
inc
insb
xor
mov
cmovs
jne
das
or
and
push
xchg
sub
rclb
fwait
xchg
pop
jne
repnz
push
lahf
lods
bound
loopne
insb
pop
imul
ljmp
test
in
arpl
insb
fnsave
mov
xor
xlat
push
sub
jae
xor
call
sub
dec
mov
mov
xchg
inc
pop
jne
loop
lods
xchg
add
data16
jmp
rcll
pop
and
cmpl
pop
aas
jb
and
in
lret
jne
xor
pusha
fcmovbe
test
cmpsb
daa
pop
or
mov
aam
mov
cmp
jp
popa
push
imul
imul
shlb
cmp
inc
jae
cmp
iret
jmp
pop
jne
sub
int
jmp
jae
pop
xor
sbb
fidivrs
jne
xor
dec
mov
hlt
jae
inc
cmp
dec
ljmp
movsl
mov
push
pop
and
xchg
cmp
inc
inc
xchg
sub
lret
jne
push
test
and
gs
ja
sbb
decl
in
or
mov
xchg
pop
push
xor
mov
add
int
jecxz
icebp
mov
xor
sub
cwtl
movsb
or
xchg
sahf
push
mov
mov
mov
mov
jge
negb
jne
adc
jo
and
inc
pop
inc
mov
and
lds
sub
ret
idivl
mov
sbb
sahf
data16
sub
cmp
jne
jo
mov
mov
cmpsl
cmp
int
jge
push
lods
mov
mov
push
mov
iret
sarb
nop
sub
mov
cmpsl
cmc
mov
push
push
jae
mov
add
sahf
mov
test
test
pop
inc
cmp
pop
lods
mov
imul
push
adc
mov
jne
and
shrl
loopne
orl
fidivs
xchg
jbe
jmp
les
mov
jbe
sbb
jne
in
aad
lds
jne
clc
jb
lods
or
lret
shlb
xchg
ljmp
aad
jne
cmp
outsl
fcomps
in
pusha
test
notl
pop
fwait
cmp
int3
outsl
iret
cmp
inc
xchg
jb
or
cmpl
adc
lcall
es
mov
in
outsb
inc
jmp
adc
xor
popfw
jne
shll
outsl
imul
call
jbe
push
bound
das
mov
aam
adc
out
std
xor
push
insl
pop
push
ret
movsb
fwait
and
sub
fmuls
sbb
push
bound
pop
imul
dec
cmpsl
and
jbe
xchg
ret
push
das
stos
jno
leave
mov
ss
mov
sbb
inc
lods
enter
xor
iret
mov
push
decb
push
add
or
scas
xchg
mov
sbb
movsb
pop
emms
sub
aaa
testb
lret
hlt
jne
xchg
or
sub
pop
cmp
das
icebp
idivb
js
pop
nop
cmp
test
mov
dec
mov
mov
or
sub
mov
inc
pop
shll
ljmp
jne
aaa
pop
dec
leave
dec
push
mov
pop
xchg
adc
imul
es
mov
iret
outsl
lods
add
dec
filds
push
mov
out
imul
cmc
sub
test
pop
mov
cmpsl
insb
jmp
imul
xchg
sahf
jne
mov
xor
fdivr
pusha
xchg
arpl
sbb
mov
inc
dec
insl
aad
adc
xchg
cmpl
sbb
mov
cmc
test
lods
jne
gs
inc
sbb
jne
jp
xor
ficomps
fs
push
cmp
lods
insl
mov
pusha
inc
jno
push
cmp
iret
mov
inc
pop
jle
jbe
shl
scas
loope
mov
jo
cmp
pop
adc
push
repnz
jnp
add
mov
jecxz
or
and
popl
imul
xchg
xchg
loop
fisubrl
dec
int
mov
xchg
mov
adc
push
jbe
jbe
push
xchg
fstpt
xor
mov
negb
outsb
jne
movsb
into
push
add
add
ret
mov
xor
test
in
pusha
adc
imul
cmp
push
jbe
push
push
test
and
jecxz
stc
ret
mov
in
mov
outsl
lock
mov
enter
pop
mov
pop
mov
push
outsl
or
and
call
jne
mov
xchg
aad
xchg
jne
mov
outsl
sub
sub
push
ss
ja
mov
add
xchg
cmp
push
add
pop
mov
sbb
in
mov
nop
loop
dec
insl
mov
jmp
ljmp
ja
dec
cmp
scas
movsb
lret
jnp
je
jne
lret
jo
stc
xchg
jne
in
movsl
inc
mov
roll
ja
stos
aad
arpl
insl
fmulp
xor
jbe
sbb
push
add
push
sub
cmp
pop
divl
shlb
jne
outsb
fdivs
icebp
rolb
mov
out
andl
adc
xor
adcb
jg
push
xor
inc
into
lret
and
and
ret
ja
mov
push
and
mov
arpl
inc
mov
jne
push
dec
mov
sub
jne
aaa
das
pop
xor
inc
test
mov
push
mov
mov
and
mov
fchs
outsl
data16
sbb
mov
jne
movsb
jb
xchg
sbb
jne
aaa
repz
out
push
pop
inc
xchg
ja
xor
in
adc
fldenv
and
push
outsl
das
or
pop
mov
xor
stos
out
jne
sbb
fdivl
mov
lods
popa
aaa
xchg
fcmovb
call
jno
push
imul
xorl
jo
test
aas
add
pushl
les
pop
xor
mov
in
out
rcl
lahf
addr16
fdivrs
adc
sbb
push
pop
fucomp
cmc
add
popf
inc
cmp
cmp
mov
jns
mov
enter
adc
cmovge
jge
sbb
jne
lret
pop
scas
lds
cmovbe
mov
jge
jne
mov
jg
jg
lea
daa
jbe
or
cli
addr16
xchg
jne
mov
arpl
mov
shlb
jmp
out
idivb
pop
rcrl
jne
and
loope
mov
icebp
adc
sub
xor
jne
push
cmp
and
fcmovne
add
add
fisubs
enter
sub
cmpsb
xor
xchg
mov
cmp
cmpb
push
dec
dec
outsl
push
ret
xchg
rclb
rol
pop
cmpsb
test
fdivr
test
and
mov
ss
ja
jns
out
push
add
jmp
and
fisubs
sub
lods
xchg
push
daa
jle
repnz
push
push
pop
ret
push
fidivrl
aad
jns
push
xchg
repnz
jns
test
pop
cmpsb
and
outsl
dec
test
mov
push
cmc
xor
jp
xchg
sbb
into
cmp
push
popa
or
js
fs
jne
cwtl
movsl
inc
xchg
sbb
jbe
fdivl
and
add
in
int3
mov
mov
inc
dec
jno
fisttpl
ficoms
push
in
out
jle
push
test
in
ss
cmp
ja
jns
mov
outsl
sahf
push
cmp
inc
xor
jne
mov
lock
pusha
imul
xchg
push
movsb
cmp
nop
addr16
idivb
loopne
mov
stos
ss
int
sub
jae
mov
insl
and
adcb
jnp
pop
xchg
sub
lret
jne
dec
inc
scas
cwtl
sub
ret
in
xchg
lds
pop
loope
in
dec
pop
ss
mov
mov
jg
fwait
shll
jbe
test
imul
out
pop
dec
ss
inc
aas
fnsave
mov
inc
sub
out
shlb
xor
push
psrlw
jnp
lahf
dec
adc
jbe
jo
mov
sbb
cwtd
xor
mov
cmp
dec
adc
fucomp
dec
or
lock
xorl
xlat
test
xchg
adc
cltd
add
repz
pop
mov
aad
or
xchg
outsl
push
jne
mov
jb
stos
push
cs
icebp
int
pop
int3
pusha
pushf
notb
inc
sub
stos
xchg
xchg
in
test
sub
std
jb
xorl
inc
adc
or
outsl
cmp
push
xchg
and
push
rcrl
jne
add
call
jne
mul
insl
xchg
data16
push
and
ja
add
notb
jmp
push
mov
pop
paddsw
dec
mov
jmp
cmpsl
mov
sti
jne
inc
mov
loope
out
int
outsl
jne
xor
insb
scas
ficomps
dec
sub
sbb
jae
pushf
aas
inc
push
jb
notl
xchg
pop
scas
jne
sbb
mov
jne
std
xchg
mov
cmp
sbb
push
sub
popf
cld
push
leave
popf
jg
adc
lret
or
sbbl
imul
jne
movsb
xor
inc
pop
roll
call
jne
push
outsb
int3
adc
sub
shll
cmp
sbb
lods
je
mov
jne
cld
in
xchg
jnp
push
jne
loop
daa
push
and
pushf
jbe
xorl
scas
in
jae
mov
fnstenv
adc
push
js
or
fiaddl
mov
jne
aam
imul
cmpsl
inc
cmpl
pop
push
jne
sbb
insl
gs
and
mov
xor
in
mov
cmpsb
or
mov
mov
xor
jne
std
push
cmc
push
jne
ds
out
sub
dec
inc
in
jbe
jno
jne
cwtl
add
mov
sarb
std
testl
pushl
mov
cmpsl
dec
jne
mov
add
jae
jbe
aad
mov
les
insb
lea
mov
ds
outsl
ljmp
xor
iret
popf
es
in
mov
sub
ja
dec
pop
mov
sbb
out
data16
popf
or
push
clc
xchg
sbb
jbe
add
insb
xchg
pop
rcrb
inc
inc
subb
int
cltd
ss
jmp
pop
imul
jno
inc
xchg
dec
mov
shl
dec
xor
jne
and
fldt
iret
inc
and
or
mov
ret
outsl
xor
fcmovu
push
adc
movsb
sub
rorl
or
sub
and
bound
lds
movsl
and
xchg
jge
mov
push
cli
notb
push
ljmp
xchg
jmp
enter
inc
lret
add
dec
repz
inc
xchg
pop
jne
cmp
in
fisubl
imul
sarb
cmp
inc
mov
jp
xorl
arpl
jle
stos
cli
push
jb
jno
std
repnz
icebp
jne
lcall
cmp
adc
movsl
add
aad
xchg
jne,pn
dec
mov
insb
cmp
int
jno
add
adc
outsb
jbe
shrl
push
jg
xchg
inc
icebp
dec
xchg
int3
ret
or
test
mov
xchg
shll
inc
xor
sub
leave
jae
xchg
les
scas
inc
loopne
aaa
and
jle
jne
dec
fsub
inc
fidivl
push
mov
mov
cmp
or
lcall
shlb
pop
popl
adc
xchg
pop
jne
xor
pop
jns
mov
hlt
stos
pop
les
icebp
jne
push
into
mov
mov
add
mov
neg
mov
mov
jle
pop
enter
jo
cmp
and
pop
and
icebp
cmp
mov
frstor
jne
cmc
or
xchg
push
jge
cmp
roll
inc
int
shrl
movb
mov
xchg
cld
inc
mov
jne
mov
adc
adc
mov
cltd
ret
insb
dec
int3
dec
xorb
dec
or
jae
mov
push
fcmovbe
add
fdivs
push
or
cmp
xchg
aad
jg
dec
xchg
enter
add
ret
push
loopne
js
adc
pop
push
in
mov
les
scas
jle
cmp
cmp
push
stos
sahf
cld
mov
repnz
pop
lods
lea
sti
rorb
jb
xchg
or
fadds
cmpsl
jne
je
gs
arpl
les
fimull
xchg
stos
pop
xrelease
xchg
cmc
shlb
xchg
and
jl
enter
cmp
xor
cltd
mov
enter
xchg
jmp
insl
pop
scas
inc
cmp
ss
cmpsb
push
cs
repnz
int3
push
cmp
insl
popa
stos
std
ss
cmp
mov
imul
insl
out
pop
push
fs
test
ja
repnz
lea
cld
pop
outsl
test
data16
mov
scas
adc
addb
out
jle
jae
lds
cmp
sub
loope
out
outsb
pop
iret
push
sbb
xlat
int
rorb
lods
psllw
cmp
rorb
scas
jle
imul
add
jb
adc
dec
fwait
inc
andb
stos
fnstcw
inc
pop
or
push
push
loopne
aad
add
fisttpl
xor
ds
lods
lods
push
add
pusha
ficoms
ja
sbb
iret
imul
dec
test
daa
pop
adc
aas
fbld
mov
lods
or
pop
xlat
fs
lea
stos
mov
out
pop
call
ret
inc
pop
jbe
mov
mov
jnp
sbb
sub
pop
xor
adc
adc
lret
xlat
push
xchg
fistps
pop
mov
inc
or
mov
sub
add
shr
movsl
jo
js
dec
sahf
xor
mov
lock
roll
cmp
mov
fldl
add
inc
adc
lcall
out
dec
lea
pop
repz
sub
out
hlt
mov
xchg
andl
aas
push
push
aad
int3
xlat
out
push
pop
mov
fimull
fistl
mov
pop
or
hlt
mov
or
roll
sbb
mov
in
jno
pop
loope
and
push
aam
ljmp
lahf
mov
pop
in
pop
and
pop
lret
test
cltd
cmp
repnz
jbe
lods
adc
jno
and
add
jmp
test
sub
sbb
stc
ret
mov
push
mov
jo
lea
pushf
xor
cmp
mov
jb
inc
push
popf
dec
jge
push
rolb
cmp
inc
mov
fimuls
js
and
and
fldt
push
cmpsl
push
mov
mov
sbb
cmpsl
les
cmpb
jle
dec
cmp
jecxz
jge
mov
mov
mov
test
ljmp
xor
lahf
cmp
je
sub
lock
pushf
cmpsb
nop
pop
popf
or
sub
pop
jno
pop
mov
mov
testb
les
arpl
lret
or
jmp
inc
sbb
jecxz
lea
sbb
scas
push
and
int
xchg
dec
add
and
fdivs
pushl
xor
jg
jae
push
stos
mov
sub
xor
lret
dec
xchg
mov
mov
out
aaa
adc
jge
add
xor
mov
call
add
sub
mov
pop
ret
sub
test
sub
mov
mov
out
and
movsb
push
repnz
cs
icebp
lahf
dec
adcl
push
lcall
xor
xchg
mov
shll
pop
add
cmpl
add
add
add
push
push
push
jo
jle
insb
inc
adc
loope
call
movsb
arpl
xor
jo
sbbl
xor
or
and
jge
repnz
push
jb
dec
mov
in
adc
stc
or
cmpsb
je
or
mov
cwtl
cltd
jbe
shlb
stos
jae
ljmp
inc
dec
cmp
push
lret
stos
test
sbb
xchg
push
mov
cs
cmpsb
sub
push
jne
out
aas
adc
dec
or
outsb
aad
mov
in
pop
push
orl
dec
fwait
push
xchg
dec
aam
or
jmp
add
adc
add
xchg
call
adc
bnd
cwtl
les
pop
ljmp
pop
adc
frstor
jne
dec
inc
lds
jmp
outsb
push
testb
push
negb
dec
pop
jmp
outsb
jnp
aaa
cmp
sub
dec
push
inc
push
js
js
cwtl
mov
mov
mov
ja
sbb
sbb
inc
fimuls
rorl
push
jg
dec
xchg
lea
cmpsb
loopne
mov
jge
pop
inc
arpl
cmpsl
add
fcmovb
pop
add
inc
neg
mov
add
mov
adc
shll
in
jnp
enter
or
mov
push
sbb
in
jge
dec
pop
int3
test
add
lcall
jge
cmpb
xchg
sub
jmp
orl
jge
clc
push
call
lea
std
fmull
cmp
jns
dec
sahf
aam
cmp
out
rcll
xchg
and
mov
xor
cmp
fldl
iret
lods
mov
dec
outsb
xlat
mov
in
xchg
mov
rorb
pop
mov
xchg
les
push
dec
dec
iret
pop
and
ds
adc
in
and
ja
xchg
lods
push
xorb
shll
xor
lahf
out
mov
call
and
scas
jne
sbb
xor
jle
jne
mov
inc
jne
cmc
xor
loope
jge
sarb
pop
bound
jne
jle
pop
sub
je
ja
cmc
outsl
add
add
into
pop
daa
imul
mov
jp
repnz
xor
loopne
inc
leave
test
daa
push
mov
push
aas
repnz
cltd
divl
xchg
push
or
dec
xor
jbe
push
icebp
pop
imul
imul
or
xlat
mov
in
into
loopne
pop
andl
mov
push
dec
jnp
pop
xor
stc
gs
jg
in
cmp
dec
std
pop
data16
lods
je
movsl
pushf
data16
mov
out
sub
adc
push
dec
adc
xchg
or
cmc
sbb
enter
mov
out
jg
xchg
push
int3
jle
mov
sub
test
add
fxam
or
jne
fimull
cmpsb
push
sbb
xlat
je
pusha
mov
sub
outsl
outsl
xchg
fdivrs
mov
fnstcw
cmp
testb
jb
gs
gs
jbe
push
jne
repnz
or
dec
dec
xor
push
dec
mov
or
movsl
add
push
or
mov
xor
dec
pop
xchg
ja
jle
daa
imul
or
push
outsl
stos
shll
mov
imul
in
pop
jne
push
fmul
out
bound
lds
shrb
outsl
or
jb
add
jne
push
sti
repnz
out
test
clc
daa
mov
mov
cmp
shlb
into
cmpsl
outsb
lods
dec
idivb
stc
jns
fsubp
fisttps
out
mov
rolb
std
pop
stc
jbe
mov
sub
mov
push
outsl
sbb
shrb
cmp
popf
xchg
fmuls
adc
gs
out
jne
clc
push
lds
cmp
incl
in
xor
repz
push
mov
aad
push
test
and
jae
in
loope
jbe
loopne
cmp
and
push
jae
lret
pop
loopne
out
sbb
jne
sahf
mov
ja
add
xchg
adc
xchg
orl
add
mov
jg
in
shlb
stos
out
cmpsl
jae
or
addr16
das
mov
ja
icebp
lods
jae
aad
out
sub
add
cli
jmp
out
jne
pop
pop
cwtl
jle
lahf
jae
insb
push
hlt
push
outsl
mov
push
test
cmp
movhps
rorb
mov
cmpsb
sub
out
addr16
lea
push
xor
sub
lahf
notl
xchg
lock
mov
xor
pop
xlat
stos
adc
insl
xchg
out
scas
dec
stos
mov
add
and
xor
pop
sbb
repz
pop
outsl
inc
or
out
cmpsb
dec
std
lock
test
loope
dec
mov
es
push
xor
addr16
stc
sti
push
push
dec
add
dec
jne
cld
mov
out
stc
lds
dec
iret
xchg
adc
push
xorl
xchg
frstor
cmp
push
lret
jmp
pop
imul
dec
scas
jne
sub
mov
jge
push
push
pop
je
jo
leave
mov
jne
inc
cmp
dec
dec
insb
push
add
adc
sbb
stos
mov
pop
jne
shll
sub
movsb
sub
jne
jecxz
fcmovne
repz
jne
adc
js
aam
jg
adc
pop
xlat
data16
mov
xor
pop
xor
adc
ljmp
jb
icebp
lret
push
jne
stc
out
data16
in
xchg
imul
lods
mov
in
pop
mov
clc
pushf
sub
call
push
rorl
mov
mov
adc
cmp
hlt
push
dec
jne
jo
pop
jno
push
xchg
inc
add
in
aas
fldt
xlat
fwait
out
xor
lock
cltd
xor
or
mov
int3
popf
sub
jp
aaa
dec
jo
mov
clc
insb
jne
cmp
xchg
roll
iret
jbe
mov
outsb
jne
xchg
dec
dec
int
orb
push
pop
loop,pn
gs
jne
fidivrs
cs
cmpsl
repnz
lahf
xlat
jbe
sub
pop
bound
icebp
loopne
in
pop
push
and
repnz
mov
ja
inc
mov
into
cmc
adc
insb
imulb
add
jmp
mov
jne
xor
push
shlb
xchg
adc
jne
inc
outsl
mov
cmp
mov
aaa
xchg
push
jb
pop
ss
jne
iret
aam
jbe
jb
jbe
cltd
cmpsb
fisubl
jne
sti
jecxz
mov
test
jne
push
sub
repnz
jge
inc
leave
jle
jne
icebp
add
imul
mov
jb
xchg
push
pusha
jne
das
incl
jge
jbe
inc
add
clc
test
les
in
mov
mov
jne,pn
mov
mov
jno
subb
fcmovne
fisubs
push
push
out
jbe
shlb
or
xor
cli
bound
loope
jecxz
adc
or
jbe
cmp
mov
imull
out
jne
int
sarb
jbe
xor
call
xchg
jno
std
mov
sub
incb
loope
inc
fs
es
jno
inc
fsubrs
add
pop
xchg
pop
repz
cmp
and
inc
outsl
pop
jle
jbe
insb
fsubr
addb
jae
mov
or
cmp
inc
fs
pop
xor
push
sbb
cs
cmc
push
std
scas
mov
xchg
jns
loopne
push
negb
repz
xchg
push
mov
pushl
or
clc
stos
mov
repz
inc
pusha
aas
ror
int
jne
push
sbb
add
xchg
xor
adc
fistpll
jle
cmp
divb
imul
add
sahf
rcll
push
push
test
sti
out
jnp
dec
shll
js
inc
mov
push
xchg
sbb
xor
jnp
mov
sbb
fsts
xorl
mov
cmp
jne
das
and
leave
xchg
testl
rcll
jo
dec
inc
out
out
mov
out
lock
sbb
dec
dec
outsb
pop
and
ficomps
xor
testb
sub
mov
popf
jge
out
dec
jecxz
cmc
lret
pusha
push
repz
cmp
mov
nop
ljmp
mov
fistps
xchg
xor
aam
orb
jne
icebp
mov
movsb
test
fs
and
mov
cld
mov
mov
mov
mov
pop
jne
add
pop
cmp
sub
outsl
addr16
cmc
decb
dec
xchg
cmp
or
push
push
jne
pop
mov
or
aas
leave
mulb
cmp
xchg
xchg
adc
lret
adcl
xor
jne
pushf
or
loop
repnz
jae
xchg
dec
pop
int3
push
adc
or
imul
outsl
fwait
mov
aaa
jae
es
jo
int
xorb
cmc
lds
and
mov
push
inc
jbe
aad
dec
inc
xchg
xchg
loopne
fiaddl
popf
add
fsubrs
ja
popf
xchg
or
into
jae
mov
sbb
dec
jb
add
cs
xchg
test
in
bswap
mov
mov
xchg
iret
jne
mov
add
jne
test
out
or
pop
outsl
shlb
mov
jne
inc
xor
dec
clc
xchg
in
jmp
or
pop
dec
shrl
jo
lock
mov
loope
pusha
jae
xchg
and
jb
jmp
xchg
inc
cmp
scas
inc
add
push
es
aam
push
jno
out
loope
js
mov
adc
jne
lds
outsl
fisttps
int
bound
ret
xchg
xlat
jg
jnp
and
add
xchg
insb
ss
movsb
imul
fcom
imul
inc
int
fistpll
mov
add
pop
movsl
jbe
hlt
jno
mov
mov
nop
loopne
negb
in
jae
mov
pop
xchg
cmp
adc
pop
pop
pop
pop
cmc
push
test
mov
mov
xorl
addr16
movsb
int3
mov
adc
xor
fwait
cmp
ja
cmp
push
cwtl
jae
iret
out
jb
repz
add
add
jne
or
mov
dec
in
je
out
mov
adc
rolb
das
outsl
cmpsb
leave
loop
jne
icebp
test
dec
rorl
jne
xor
test
push
dec
fidivs
pop
push
outsb
aam
mov
mov
xchg
pop
rolb
mov
add
adc
leave
std
nop
ja
popf
pop
fstpt
add
push
or
dec
lods
inc
fdecstp
inc
jge
push
jns
dec
idivb
jecxz
lret
push
xlat
lea
std
int
and
xchg
lea
in
in
add
jno
imul
outsb
lock
jbe
and
push
imul
jne
out
loopne
sarb
add
add
fdivs
xchg
add
or
push
adc
std
fsub
pop
frstpm(287
mov
shr
adcb
lret
scas
xorb
and
dec
jmp
cwtl
adc
and
and
iret
jne
mov
sti
mov
jp
ljmp
lret
sub
jbe
shlb
leave
xchg
outsl
pop
icebp
xor
xor
mov
ja
pushf
jb
add
cmc
push
punpcklwd
jno
push
pop
xchg
cmpsb
jne
inc
int
pop
daa
aaa
jmp
push
icebp
mov
mov
or
jne
bound
sub
mov
cmp
inc
dec
shlb
add
jnp
push
mov
mov
sbb
dec
ds
ret
stos
lret
jne
pop
popf
imul
jno
jbe
cmc
pop
es
jbe
popf
push
pop
repz
add
jecxz
mov
mov
pop
cmpsb
push
loopne
and
and
dec
cmp
pop
pop
mov
jne
mov
mov
sub
icebp
js
fyl2xp1
pop
push
ss
insb
mov
jle
mov
fisubl
mov
cld
inc
fsts
cmp
xor
mov
mov
push
clc
mov
mov
jmp
daa
insb
mov
and
jg
lock
xchg
jno
test
lea
inc
xchg
ror
mov
and
pop
ja
ss
lret
xchg
cmc
push
iret
fnstenv
mov
imul
mov
test
scas
add
mov
out
out
mov
jo
insl
xchg
ss
lea
push
outsl
adc
mov
mov
arpl
daa
aas
push
push
and
mov
ret
sbb
sbb
xor
insl
adc
js
paddsw
xchg
and
xchg
ja
and
aam
cmc
xchg
xchg
pop
popf
clc
hlt
pop
shll
jge
mov
cmc
pop
adc
xchg
mov
mov
xchg
in
icebp
sbb
std
pop
jmp
insb
push
ja
and
sub
pop
sub
mov
sub
mov
testb
and
and
dec
adc
push
push
push
aad
jl
insl
lahf
sbb
and
test
xor
imul
pop
mov
sbb
mov
and
xchg
and
cmp
sub
sub
adc
adc
repnz
out
push
adc
movhps
xor
fwait
jae
xchg
and
in
jp
sub
mov
ja
cmp
push
cmp
out
insl
adc
xor
push
add
leave
sub
mov
jae,pn
adc
xchg
push
repz
pop
sub
insl
xor
and
imul
out
arpl
aaa
pop
ljmp
and
inc
daa
scas
push
mov
adc
push
popf
mov
js
sbb
xchg
pop
and
and
ja
sub
dec
fimuls
push
std
pop
shlb
pop
mov
and
cmp
push
sbb
and
add
sub
add
mov
inc
cs
jne
adc
sbb
pop
ja
and
hlt
add
add
in
test
push
mov
adc
push
lret
adc
sbbb
xchg
repnz
mov
pop
insl
pop
daa
lret
adc
mov
into
jno
scas
outsl
sub
and
outsl
sub
pop
push
dec
inc
sub
sbb
xchg
mov
int
les
xor
aam
in
sbb
daa
dec
adc
ds
pop
ret
pop
push
dec
sbb
add
and
lods
mov
push
cmp
xor
xor
adc
mull
xor
pop
xchg
sub
cmp
adc
jae
adc
sbb
add
loopne
and
add
aad
xchg
mov
fsubl
mov
std
sbb
and
mov
and
movntq
loope
mov
and
fwait
lea
add
pop
xchg
test
cwtl
inc
sarl
inc
xchg
xchg
mov
pop
stos
insb
mov
ja
xlat
xor
lea
xchg
popfw
sbb
daa
xchg
ss
xchg
in
jne
adc
insl
dec
rdmsr
push
ret
ja
sbb
das
push
sbb
cwtl
aaa
jmp
js
ss
test
pop
test
cmp
jp
pop
and
dec
push
jnp
or
test
adc
sbb
js
pop
cmp
and
js
xor
sub
add
repz
mov
mov
dec
dec
jbe
sbb
test
push
or
pushf
xchg
add
or
ror
mov
push
pusha
sbb
mov
shl
shl
movzbw
or
mov
bswap
pusha
pushf
mov
inc
mov
rol
rol
mov
rcr
clc
xor
sub
lea
xchg
lods
or
neg
rcl
seta
sub
adc
sbb
shl
cmc
xor
cmc
mov
call
add
add
push
add
push
add
rclb
rcrl
pop
enter
add
add
and
push
loop
cmpsb
test
xor
inc
ret
inc
inc
sub
int
aaa
out
inc
stc
in
lock
sahf
cmc
gs
and
xor
pop
jae
adc
in
mov
cmp
add
sub
mov
mov
out
push
shl
or
repnz
insb
add
mov
loope
cmpsb
dec
xlat
cmp
popa
xor
mov
mov
popa
xchg
cmp
xor
out
mov
inc
mov
mov
xchg
adc
movsl
pop
movsb
cmp
lds
popf
stc
sub
lcall
dec
add
and
xor
adc
pop
daa
shlb
sbb
push
adcl
mul
mov
mov
pop
cmp
movsl
sub
jo
mov
adc
mov
lea
jae
jmp
call
ror
cmc
mov
call
adc
loop
cmpsb
mov
adc
push
ret
sbb
sarl
push
cmp
fists
sbb
sbb
adc
dec
int
add
fisubl
in
int
leave
mov
jnp
push
cmp
subl
cmp
push
lea
ja
jmp
stos
push
sbb
pushf
cmpsb
in
sbb
inc
mov
push
shrl
lahf
and
imul
loopne
rcll
loop
test
pushf
es
lock
adc
sbb
lods
or
cmc
mov
in
jo
mov
adc
xor
cmpl
xchg
test
push
or
sub
not
stos
cmpsl
xchg
pop
aas
adc
push
sti
insl
std
mov
pushf
mov
mov
mov
pushf
pushl
ret
cmp
pushf
cmc
or
call
pushf
cmc
push
or
mov
jmp
rol
cmc
add
pushf
call
icebp
fwait
shl
pushf
cmpsb
pop
out
popf
xchg
inc
aas
insb
sbb
xchg
or
popa
jp
cltd
mov
imul
pop
mov
out
xor
lds
aaa
pusha
dec
mov
mov
jmp
mov
mov
icebp
ss
mov
push
adc
aam
pop
or
cwtl
pop
push
je
test
pop
aad
sub
mov
stc
push
fidivl
push
dec
push
mov
mov
and
mov
outsl
jg
mov
enter
xchg
icebp
js
sub
loop
js
push
push
or
add
clc
testb
ds
clc
bswap
ror
mov
pushf
cmpb
jmp
daa
loopne
in
cmpsb
mov
in
sbb
insl
pop
hlt
popa
cmp
adc
mov
push
cmpsb
pushf
adc
xor
pusha
scas
push
ja
test
mov
inc
aad
scas
jae
ljmp
xchg
and
test
mov
adc
mov
lret
xchg
ret
cmp
jmp
push
mov
or
or
pop
xor
pushf
or
xchg
adc
inc
aad
movsb
adc
hlt
push
dec
out
xchg
popl
ret
mov
gs
mov
sbb
xorl
clc
fsubrs
cli
cli
xchg
lea
add
xor
add
call
pushf
movl
movb
movl
pusha
pusha
pushf
lea
jmp
call
pushf
shr
bt
movb
call
stc
test
jmp
add
dec
outsl
popa
fs
imul
add
push
pushf
cmpsb
push
mov
mov
jno
inc
stos
or
pop
push
or
mov
dec
mov
sbb
xchg
xchg
xchg
smsw
dec
sbb
inc
mov
cmp
loop
mov
paddw
push
popf
nop
addl
pusha
sete
lods
call
popf
rdtsc
nop
push
jmp
push
movl
jmp
jmp
mov
mov
movsbw
jmp
add
inc
gs
outsl
fs
gs
imul
add
dec
push
ljmp
loopne
add
into
add
lcall
push
out
cmpsb
stos
pushf
loope
movsb
push
xchg
std
addr16
ja
scas
inc
mov
ljmp
adc
loope
cltd
dec
cwtl
adc
mov
sahf
out
cmp
imul
bound
pop
push
mov
jl
outsb
lret
cwtl
jl
pusha
test
pop
ds
pop
movsl
sbb
jp
pop
cmc
fisubrl
loopne
lea
ja
push
push
movb
call
mov
mov
cmp
bswap
mov
pusha
pushf
bt
and
call
mov
sbb
pushf
cmpsb
adc
or
inc
stos
add
inc
jge
addl
adc
jmp
sub
pop
roll
loop
xchg
xor
dec
dec
das
leave
add
jmp
scas
inc
jb
mov
fcmovnbe
or
inc
enter
push
jmp
push
inc
fcmovbe
cmpsb
add
mov
pop
stos
or
pushf
cmpsb
repnz
push
lret
adc
xchg
push
std
pop
pop
pop
and
bound
pop
xchg
mov
push
sbb
imul
scas
jmp
mov
clc
jns
adc
cmp
xor
test
lea
stc
mov
xor
aad
hlt
fnstsw
std
fwait
shl
pushf
cmpsb
pop
icebp
imul
fwait
sbb
pusha
mov
jo
pop
fs
pop
dec
ret
sub
sbb
push
scas
cli
xchg
mov
dec
adc
sti
pop
pop
movsl
cltd
inc
sub
icebp
mov
xor
popf
jl
xchg
movl
or
mov
addr16
and
ror
xchg
inc
mov
shl
inc
mov
jmp
mov
hlt
out
cmpsb
or
je
adc
cmp
sub
xchg
lock
inc
dec
mov
and
fistps
fstp
sub
ja
insl
out
push
mov
push
enter
jle
mov
test
push
cmp
fstl
aas
pop
push
lods
lcall
inc
mov
sub
or
in
jmp
pop
clc
std
clc
hlt
mov
nop
sub
out
xorl
mov
jae
jno
sbb
pusha
mov
ss
sarl
ljmp
rcll
pushf
cmpsb
mov
add
mov
xor
jmp
hlt
scas
push
dec
ss
or
addr16
outsb
out
inc
dec
fiaddl
mov
inc
mov
xlat
pop
insl
aas
fimuls
xchg
xchg
insl
pop
and
lret
lret
leave
dec
and
xchg
cmp
mov
push
jbe
inc
mov
mov
or
in
adc
lahf
mov
out
cs
mov
and
mov
and
dec
pop
imul
add
or
loope
inc
dec
fcmovu
inc
mov
xchg
stos
jo
cmp
and
pop
adc
and
cmp
es
pop
mov
enter
jecxz
rcr
mov
inc
aas
mov
mov
lahf
lret
ljmp
jae
add
stc
orl
mov
pusha
xorl
lds
inc
imul
lock
cltd
popa
xor
cmc
imulb
les
mov
pushf
lea
jne
sub
movsbw
call
aam
in
jmp
dec
scas
sub
fstps
xor
pop
pop
popa
sbb
cmp
adc
scas
aas
lret
movsl
ja
lahf
sbb
dec
cwtl
cmpsb
out
rolb
adc
insl
jbe
stc
xchg
lds
ficompl
xor
in
fidivrl
jo
cmp
fimull
cmpsl
test
pusha
jmp
js
cmc
jmp
jns
xor
dec
mov
popa
xor
pop
lret
data16
mov
jns
inc
mov
stos
negb
or
sahf
add
fisubrs
lcall
dec
mov
adc
aam
xor
inc
jecxz
push
out
fmull
lahf
daa
addl
not
enter
pop
jmp
cmpsb
lahf
xchg
negb
push
test
aam
xor
sub
push
mov
cmp
icebp
shrl
or
mov
in
and
xchg
cltd
adc
gs
sbb
adc
inc
imul
aam
sbb
push
je
in
outsl
jp
js
cmp
cs
fsub
fmul
arpl
sarb
adc
mov
mov
rclb
in
rcll
out
es
les
sub
adc
cmpsb
aam
fists
inc
xchg
dec
mov
int3
lahf
fmuls
mov
cli
pop
enter
push
test
xchg
sbb
movl
mov
dec
xor
mov
jmp
mov
addb
js
mov
cmp
rorb
mov
inc
btc
xor
pop
test
clc
aam
mov
pop
cmp
add
sbb
sbb
das
movsl
lea
jne
push
pusha
lea
call
pusha
push
pushf
lea
jmp
bt
repnz
push
push
push
lea
jne
shr
movzbl
xor
lea
mov
and
pusha
btr
shl
sub
bts
inc
lea
cmc
sub
pushf
call
call
add
jmp
cmpsb
cmp
mov
pop
stos
repz
lret
movsb
ficompl
sub
jecxz
lds
das
aaa
push
sub
jecxz
dec
dec
inc
idivb
faddp
les
scas
and
in
ret
leave
out
insl
inc
ss
mov
int
or
mov
dec
jl
stc
sbb
call
pop
sub
leave
push
xlat
sbb
inc
in
stos
pop
mov
addr16
repz
cld
fisubs
mov
fistpll
xchg
xchg
sti
insl
repnz
lcall
out
dec
dec
ret
xor
inc
push
or
jno
addr16
arpl
arpl
add
popa
mov
mov
popa
dec
mov
dec
mov
jmp
xchg
fcmovne
mov
mov
jnp
mov
pop
jbe
lods
xlat
sbb
xchg
and
mov
inc
inc
lods
or
inc
add
push
inc
jmp
sbb
addr16
xor
lret
shrl
rorl
sub
pop
popl
mov
in
jne
dec
xchg
and
jle
sub
fcos
hlt
movsb
lcall
mov
sub
or
rolb
ljmp
push
out
push
and
insl
mov
adc
mov
call
push
and
inc
dec
add
and
inc
sub
lea
ja
setg
xchg
call
das
sar
bswap
mov
push
cmc
shl
movb
pushf
push
jmp
push
jmp
push
pushl
popl
pushf
movw
movb
pushl
pushl
ret
push
jmp
xchg
aad
in
pushf
cmpsb
sbb
mov
mov
xor
in
hlt
jno
pop
sbb
mov
xor
das
fldcw
addl
add
cmpsb
fwait
jns
cmp
pop
adc
repz
call
inc
js
out
pushf
cmpsb
repnz
dec
xchg
lock
rcll
test
xchg
repnz
aaa
xor
fsubr
jle
inc
inc
inc
xchg
sbb
xchg
les
dec
in
xor
shrl
test
aaa
icebp
mov
aam
jbe
mov
sahf
lahf
mov
add
xor
sbb
jnp
inc
cmp
imul
add
xchg
add
add
hlt
setp
jmp
rorl
test
pushf
cmpsb
mov
or
or
mov
jae,pn
add
mov
xor
pop
mov
in
popa
sbb
push
lcall
push
add
xor
stos
jg
movsl
pusha
cwtl
addr16
xor
mov
in
mov
popf
setbe
mov
push
bswap
not
mov
xchg
pusha
seto
movsbw
mov
call
not
setno
dec
inc
ror
setne
not
sub
xchg
clc
mov
not
call
cmp
pusha
mov
jmp
pusha
add
sub
stc
cmc
cmc
push
add
jmp
add
sub
ror
sbb
ror
mov
call
bt
test
call
das
aaa
push
jmp
in
aas
ja
pushf
cmpsb
mov
add
fwait
negl
mov
daa
mov
stc
cmp
in
and
jnp
sbb
cs
push
xor
cltd
or
rcrb
inc
call
fldenv
adc
sbb
lahf
mov
lea
and
stos
in
adc
push
into
mov
mov
mov
sti
mov
arpl
aad
mov
daa
lea
insl
rcll
inc
out
dec
repnz
cmc
xchg
mov
cld
loopne
mov
cld
lret
xchg
jmp
movsb
cmp
mov
pushf
cmpsb
mov
and
or
lret
xor
adc
xchg
insl
enter
mov
mov
cwtl
jecxz
pushf
adc
daa
mov
inc
cltd
sbb
addl
fstp
jge
xor
cld
andl
mov
and
fisttpll
lods
test
dec
movsl
mov
mov
adc
aam
dec
mov
fidivrs
rcrb
mov
sbb
mov
and
int3
sahf
jp
xor
hlt
lcall
nop
insb
and
nop
hlt
std
lcall
or
movb
movl
push
pushf
mov
movl
pushf
pusha
pushl
lea
jmp
jo
jmp
pushf
cmpsb
inc
leave
adc
fmul
int
fdivl
mov
mov
sub
cmp
xchg
jecxz
mov
loope
pop
call
out
scas
dec
jbe
mov
test
addb
lods
push
cld
arpl
push
dec
cmp
mov
int3
xor
dec
dec
lods
mov
sbb
dec
adc
jl
cmpsl
jmp
negb
mov
mov
rorl
pushf
popa
dec
ret
mov
imul
lea
aaa
xchg
push
je
sar
inc
and
xchg
cmp
sub
scas
xor
pop
test
sarl
mov
fmul
clc
int3
cld
add
lahf
and
cmc
rclb
adc
daa
mov
dec
mov
test
add
jmp
jmp
jo
adc
in
cwtl
lcall
mov
test
push
jl
xchg
sti
imul
xchg
sbb
inc
mov
ret
jns
cmc
xchg
add
sbb
mov
cld
mov
pushf
xchg
add
ret
shll
lods
push
add
inc
fistl
sub
inc
inc
xchg
test
in
call
dec
and
add
ret
mov
xchg
sub
jb
addr16
fwait
cs
dec
call
stc
cmp
call
jecxz
pushf
cmpsb
push
ficompl
adc
outsb
sub
and
adc
add
mov
pop
ret
jmp
push
mov
test
sahf
aas
dec
out
adc
xchg
mov
fsubrs
adc
or
mov
outsl
adc
loopne
xor
jmp
sahf
inc
dec
xchg
pmuludq
wbinvd
scas
stos
mov
jmp
loop
and
cmpsb
out
jecxz
push
push
notl
ljmp
sarb
inc
adc
mov
jmp
call
cmp
repz
cmpsb
test
out
cmp
push
jnp
or
push
pop
aaa
std
pushl
push
cmpsl
fildl
push
jle
cmp
outsb
test
mov
pop
cltd
stos
test
out
mov
hlt
mov
dec
out
add
jmp
add
pop
xlat
jle
mov
inc
sbb
enter
aad
daa
shlb
dec
ss
ret
push
je
std
add
lock
sahf
test
movsl
add
xchg
or
dec
cmp
jmp
leave
scas
xor
and
stc
cld
movw
pusha
mov
jmp
pushf
call
lea
jb
cmc
jmp
jmp
lea
jne
bt
ror
bsf
setbe
mov
pushf
bt
jmp
pushf
sub
clc
pusha
cmp
cmp
call
not
mov
movzbw
lea
push
pushf
xchg
call
sub
mov
pushf
cmpsb
cmpsl
das
test
aas
mov
test
stos
sbb
fcompl
mov
mov
mov
loop
popf
cli
inc
popf
adc
leave
cmp
jae
add
mov
pop
sbb
inc
inc
mov
pop
push
cmp
sub
pop
inc
and
out
xchg
inc
push
cmp
in
jae
and
repnz
jg
fst
inc
mov
jle
and
int3
shlb
test
mov
nop
xchg
sub
pushf
cmpsb
in
jp
cmp
data16
jnp
das
mov
lock
imul
imul
sbb
push
adc
inc
xor
cmpsb
pop
mov
xor
adc
stc
leave
sahf
ja
cmp
jno
mov
push
lea
jne
not
pushf
not
pushfw
popw
stc
inc
mov
clc
test
sub
call
cmc
cmc
push
or
movw
pushl
movb
lea
je
not
call
clc
inc
jne
pushf
cmpsb
mov
jo
add
xor
pop
and
adc
add
jno
int3
and
mov
cmp
es
bound
or
movsl
mov
out
testl
push
dec
aaa
jg
lret
outsl
inc
mov
mov
iret
add
jg
sarl
rorl
or
sub
cs
stos
mov
sbb
ret
movsl
int
adcl
gs
cltd
jo
lods
mov
push
inc
rorb
push
not
clc
cmc
call
test
mov
cmpb
push
push
pushl
movl
lea
jne
rcl
bsr
cmp
or
mov
push
pushf
cmp
add
push
movzwl
clc
mov
test
push
add
call
jmp
cmpsb
pop
pop
fidivrl
mov
xchg
or
aas
xchg
clc
push
leave
pop
push
xchg
pop
sub
je
lods
xchg
fmull
jo
cmp
jle
sbb
push
ljmp
loop
pop
ss
data16
sub
xchg
add
dec
mov
sbb
and
mov
pop
in
loope
adc
in
lahf
jg
and
pop
push
xor
pop
push
icebp
jecxz
push
and
je
cmc
pusha
clc
cmp
jmp
rep
push
mov
pushl
mov
lea
jmp
inc
pushf
pushf
pushf
call
movl
pusha
pushf
movw
lea
jmp
lea
jne
pusha
pushf
inc
jmp
in
push
push
movl
mov
pusha
movl
pushf
push
lea
jmp
mov
mov
pusha
pushf
jmp
clc
call
pushf
pushl
movl
push
pusha
pushl
movl
pushf
movw
pushf
mov
lea
jmp
jmp
pushf
mov
pushf
movzbw
lea
ja
push
cwtl
lea
jmp
adc
negl
outsl
xlat
xor
or
les
add
xlat
sbb
shll
cwtl
dec
mov
push
push
inc
pop
and
fcompl
jecxz
jecxz
aad
mov
xchg
aaa
shlb
pop
and
loop
call
and
jo
scas
mov
lock
hlt
out
stos
cs
jg
cs
push
jg
imul
or
dec
mov
mov
jmp
ret
pop
jmp
bt
cmc
cmp
call
loop
popf
clc
pushf
cmpsb
xchg
sbb
and
inc
rcrl
popa
pop
add
into
les
js
cwtl
sub
outsb
scas
push
push
fwait
and
enter
sbb
sbb
jmp
and
rolb
frstor
mov
int3
push
pop
xchg
in
out
pop
mov
cmp
imul
test
pop
mov
jmp
aam
push
fsubrs
pop
add
add
mov
mov
dec
sub
jne
movsbw
jmp
pushf
pushf
add
lea
js
pushf
pusha
lea
jne
mov
pushfw
shl
sbb
mov
jmp
bt
call
add
mov
jmp
push
jg
repz
pop
into
ret
aaa
pusha
mov
ss
sub
stos
adc
cs
and
dec
aas
pop
ret
or
das
dec
cmp
sub
pop
repz
notl
cmp
and
jbe
rcrl
out
sbb
fmul
xchg
mov
dec
cmpsl
cwtl
fisttpll
rcr
mov
jae
movsl
out
add
adc
cmp
addr16
mov
pop
pop
sub
pop
popa
xchg
jb
xchg
ret
xor
es
add
je
fildl
pop
xchg
cld
mov
aaa
mov
imul
leave
fisttpl
mov
fcmove
imul
mull
jno
mov
fxch
stos
lea
sub
xchg
adc
stc
outsl
push
push
lea
je
push
call
movw
lea
jne
push
pushf
push
pushf
inc
mov
pushf
push
inc
movl
movw
lea
jmp
out
xchg
pushf
cmpsb
test
aad
jo
push
jnp
sub
or
roll
aas
int3
xchg
push
add
cmpsl
movsb
fdivs
shlb
xchg
adc
insl
mov
lcall
lods
xor
or
shll
test
out
jae
lods
popf
dec
movl
call
jle
inc
sti
pushf
cmpsb
out
js
push
mov
jns
and
inc
push
sub
inc
rolb
aas
sub
fsubl
imul
insl
negb
pop
pop
add
mov
pusha
dec
xor
lock
out
mov
jge
and
push
dec
stos
adc
hlt
pop
in
jae
imul
mov
adc
fmulp
std
ljmp
jo
daa
dec
dec
pop
adc
negl
sbb
jmp
or
hlt
mov
inc
jle
int3
pop
dec
and
rol
pop
mov
sarl
in
les
pushf
movl
pushl
pushl
popl
pushf
push
pushl
mov
pushl
ret
movl
push
pusha
movb
jmp
str
push
pushl
call
add
sti
pushf
cmpsb
inc
enter
sbb
or
popa
mov
gs
aaa
cmp
xchg
test
or
ficoml
sub
lods
sbb
daa
mov
hlt
sub
and
jae
fidivrl
mov
repz
mov
andl
icebp
lcall
lds
xchg
inc
lock
movl
pushf
pushf
movl
movl
movb
push
lea
jmp
lea
ja
pushf
pushf
movl
mov
pusha
pushf
lea
jmp
push
mov
lea
ja
pusha
pushl
not
inc
mov
inc
rcr
adc
pushf
inc
xchg
sete
xadd
sub
ror
mov
neg
sar
mov
pushf
cmp
bt
push
xchg
shld
btc
mov
cmp
sub
movb
rep
lea
mov
push
pushl
movw
mov
lea
jmp
pushf
xor
add
stc
or
jmp
jmp
inc
xorl
pushf
cmpsb
lret
leave
xor
inc
mov
imul
js
lods
les
cs
enter
sbbl
mov
roll
icebp
mov
inc
dec
cld
xor
ds
rorl
or
pop
test
add
xor
or
shll
or
ja
call
pusha
movl
pushf
movw
call
ret
std
pushf
cmpsb
or
inc
xchg
jmp
mov
sti
dec
lds
je
ss
repz
call
push
add
dec
jmp
dec
aaa
insl
or
lcall
push
push
out
jo
add
and
dec
lods
subb
mov
push
jecxz
outsb
bound
insl
std
pushf
cmpsb
xchg
xchg
push
lret
push
insb
mov
fwait
out
cmp
dec
xchg
xchg
xchg
popf
or
jmp
lock
mov
stos
test
or
add
insl
jl
mov
push
cmp
subl
mov
push
pop
out
fmul
mov
xchg
js
cmpl
std
xchg
and
stc
cmp
call
pushl
popl
pushf
push
pushl
ret
cmp
pushl
mov
lea
ja
add
sub
bswap
ror
bsf
add
bsf
mov
shl
mov
pusha
bt
repnz
jmp
pushf
pusha
push
lea
call
pushf
push
call
pushl
lea
jae
test
xor
push
pushf
lea
call
call
jbe
push
lcall
negb
or
out
ja
and
xor
je
test
add
push
cmp
fisttpl
mov
popf
mov
pop
cwtl
loope
pop
push
mov
sub
mov
cmp
sbb
cmp
and
add
inc
cmp
sub
and
sbb
mov
pushf
clc
cmpb
push
pushf
pusha
lea
jne
cmp
xor
lahf
btc
mov
rol
shl
add
adc
mov
stc
push
test
call
fs
stc
ror
test
scas
jne
xchg
loope
loopne
mov
data16
cmpsb
imul
lds
outsl
jo
jno
mov
gs
cmp
into
sbb
adc
negl
adc
pop
pop
mov
sub
fldt
in
clc
jge
sbb
sbb
repz
mov
mov
dec
idivl
jae
dec
mov
test
cmp
loope
add
pop
xchg
pop
push
notb
lds
xor
jle
cmp
jp
jmp
ja
xorl
adc
push
loope
lea
aad
cwtl
xchg
xchg
xchg
into
lea
sar
jecxz
mov
fs
incl
in
adc
xor
xchg
xchg
jp
push
test
jbe
cmc
je
insb
jo
xchg
test
gs
jno
mov
mov
daa
sarl
sbb
cmp
lea
imul
cltd
jge
jge
out
inc
pop
arpl
dec
cmc
jmp
mov
movsl
xor
mov
lret
popa
scas
mov
std
ret
jb
out
outsb
test
adc
cmp
stc
cmpsl
jns
inc
adc
arpl
stos
outsb
mov
xchg
lea
scas
cmp
adc
testb
cmpsb
jne
fiadds
dec
inc
outsl
xchg
int
test
jae
add
jo
adc
adc
adcb
icebp
sbb
xchg
addr16
jne
sbb
int
icebp
pop
inc
or
add
and
movsb
faddl
jno
fxch
sti
hlt
les
dec
mov
cmc
push
movsl
push
xor
repnz
jae
shll
ret
push
ja
xor
test
leave
push
gs
cltd
xor
outsl
add
push
or
push
outsl
cmpsb
push
xor
mov
mov
test
add
or
aam
adc
incl
push
and
jns
gs
jge
gs
test
idivl
das
stc
add
mov
inc
sub
lea
pop
mov
cltd
xor
jge
mov
outsl
pop
jp
outsl
ss
ficoms
outsb
xchg
ds
orl
dec
fs
jecxz
xor
mov
mov
aad
push
cmp
jl
push
adc
es
lea
shrl
jno
dec
imul
adc
inc
repnz
cmp
in
xor
xchg
and
pop
adc
das
ss
inc
dec
add
insl
addl
push
jbe
adc
jge
push
call
pop
inc
popf
inc
repz
jb
incb
or
pop
cmpsb
dec
adc
push
incb
arpl
or
gs
cmp
fs
or
xchg
pop
jns
add
scas
dec
popa
and
scas
xor
outsb
test
jge
sbb
mov
add
outsb
test
jge
outsl
mov
mov
repz
gs
cmc
ret
cmp
movsl
xor
jle
push
cmp
push
test
push
cmp
lea
push
addl
std
add
inc
cmp
xor
into
mov
and
cmp
push
popa
jge
jecxz
test
std
mov
push
subl
sbb
std
lret
insl
fidivrs
std
in
mov
xlat
and
jg
mov
imul
push
jno
int
das
pop
jbe
loop
outsl
push
pop
cmp
adcl
jecxz
cmp
andnps
push
push
jbe
mov
add
mov
addl
or
adc
adc
inc
call
jge
lea
sub
adc
icebp
xchg
std
idivl
movsb
adc
movsl
pop
and
ljmp
adc
mov
xor
je
es
scas
xor
out
mov
push
jbe
mov
push
lds
sbb
push
mov
std
cs
jge
xor
negw
jae
rorl
xor
movlpd
push
imulb
pop
inc
std
adc
test
fdivrl
shrb
popa
sti
pop
push
and
inc
push
call
or
cld
ret
xchg
arpl
mov
push
cmp
imul
int
xor
push
push
jmp
mov
sbb
inc
push
or
cmpl
mov
arpl
lds
into
fidivrl
arpl
add
mov
push
sahf
and
out
adc
std
arpl
mov
jns
xor
sub
xor
jno
repz
adc
sbb
or
test
ds
popf
fidivs
movsb
jbe
lods
popfw
mov
test
or
jno
add
or
xchg
hlt
test
cwtl
lea
adc
cmc
mov
jl
push
jb
out
or
and
adc
push
ret
out
bnd
hlt
and
test
sti
push
insl
lea
out
mov
push
outsl
cltd
std
jge
cmc
xchg
aaa
xchg
popa
je
insl
jge
dec
xor
mov
ficomps
ret
push
jbe
les
sub
jle
or
xlat
arpl
xor
mov
pop
inc
fnstsw
push
fidivrl
adc
scas
push
cmp
mov
mov
test
jno
mov
mov
jno
popf
test
in
push
push
mov
test
jno
dec
jno
push
add
adc
dec
test
mov
mov
add
outsl
out
popa
xor
push
push
push
push
pushf
adcl
jecxz
cmc
out
xor
push
xchg
mov
push
xor
insl
cli
repz
es
add
dec
mov
shlb
aam
test
sub
clc
insl
push
shrb
test
cmc
pop
js
mov
adc
xor
jno
movsb
outsb
outsl
mov
shl
ret
leave
dec
movsl
inc
adc
jl
push
in
test
dec
cmp
into
dec
jbe
add
mov
addb
popf
into
or
xchg
xchg
jle
lea
sti
aas
std
or
dec
jmp
outsb
push
jge
movsl
jmp
push
pop
pop
jle
outsb
aam
xchg
jno
cmc
jbe
inc
push
outsb
cmp
repz
add
into
push
adc
jno
int
jp
mov
mull
ficoms
pop
popf
das
fs
lret
movups
push
rorl
pop
push
sti
fwait
out
div
imul
in
nop
inc
xorl
imul
sub
les
fs
sub
adc
mov
int
movsl
add
xchg
push
scas
add
int
dec
and
sub
out
push
xlat
mov
cmpl
movsl
enter
jno
xchg
jns
push
adc
push
add
jge
push
andl
xchg
ret
push
imul
push
push
es
out
clc
jle
or
dec
xchg
and
mov
and
xchg
lea
imul
pop
scas
aaa
jg
push
insl
push
or
cmc
push
mov
mov
push
push
push
std
mov
mov
push
insl
int
imull
cs
movsl
mov
jno
xor
out
adc
test
mov
mov
and
insl
sahf
stc
fsubrl
ss
mov
gs
ficoms
xchg
mov
into
rclb
push
in
mov
fisttpll
aam
lods
mov
gs
testl
mov
gs
mov
pop
adc
std
insl
sti
xor
cmp
jge
std
insl
xor
test
lret
cmp
mov
push
or
xor
lea
pop
add
gs
mov
inc
mov
cmp
out
push
jg
or
sbb
fisttpll
pop
mov
pop
add
xor
xchg
push
mov
and
jle
push
adc
outsl
ds
sbb
icebp
gs
jae
xchg
movsl
xor
fisubs
dec
xor
xor
dec
out
or
iret
pop
out
sub
jae
xchg
and
lds
push
push
negl
xor
pop
call
icebp
bnd
jae
dec
xor
lret
xor
sub
mov
insl
ljmp
push
and
and
imul
mov
mov
movsb
pusha
jecxz
shll
adc
jmp
mov
cltd
mov
out
inc
aas
jae
xchg
testb
sbb
and
push
cltd
xor
cmp
ficomps
add
cli
lods
pop
ss
pop
jge
dec
aad
test
sub
inc
cmc
mov
cmc
dec
xchg
mov
aad
push
vxorpd
mov
mov
cltd
movsl
or
push
adc
mov
pop
int
add
fs
int
mov
jns
inc
mov
push
lds
data16
imul
cmpsb
xor
push
mov
add
push
and
cs
aaa
arpl
xor
xchg
mov
and
dec
inc
push
and
dec
cmpsb
in
mov
adc
mov
xchg
insl
aaa
fucomp
mov
int
cli
test
mov
mov
in
std
movsb
inc
shufps
push
arpl
or
cmc
push
push
lock
add
or
out
pop
push
sahf
push
inc
cmp
into
test
arpl
stos
mov
sub
in
lods
inc
pop
sub
test
mov
push
in
stc
dec
xchg
lock
pop
add
xchg
and
and
hlt
push
add
test
mov
sbb
push
bound
lret
jo
xchg
cmp
xchg
enter
cmp
dec
and
pop
insl
aam
popf
sub
jbe
and
popf
lea
mov
and
inc
ja
jge
mov
xor
int
into
loop
fisttps
xchg
nop
or
ret
push
push
push
push
test
arpl
aad
cmp
adc
test
sbb
or
rcrb
add
xchg
les
add
jg
mov
scas
lods
aad
test
fnsave
lret
sub
push
arpl
test
fwait
or
adc
dec
es
scas
in
js
or
pop
bound
xchg
push
add
add
sarb
incb
or
cmp
les
test
test
xchg
mov
xorl
dec
bound
cmovle
inc
jne
and
jge
fs
fstl
pop
mov
inc
fs
xor
jle
xchg
je
outsb
daa
xchg
scas
andl
popf
push
scas
scas
xor
dec
lret
xorb
les
lret
test
dec
mov
and
std
stos
push
dec
fidivrs
xor
fcomip
adc
jbe
and
shlb
lods
mov
je
gs
inc
lea
popf
shll
xor
lea
lret
mov
out
mov
mov
add
repz
jge
ja
xor
xchg
test
push
leave
negb
or
repz
shrl
cmc
fdivrl
or
push
mov
movsl
loope
scas
push
sbb
sbbl
stc
paddusw
out
adcb
stos
std
pop
decb
mov
mov
into
jecxz
inc
arpl
into
xchg
fimull
add
add
mov
arpl
cmpl
pop
outsb
data16
mov
push
pop
dec
insl
dec
dec
xchg
cli
out
mov
je
adcb
scas
mov
lcall
push
push
stc
jle
mov
out
dec
rcrl
ret
rcr
push
jecxz
arpl
xchg
push
arpl
push
cmpl
xchg
inc
fs
push
in
or
mov
xorl
push
jmp
mov
push
lea
push
sub
cmp
xor
xchg
dec
sbb
mov
cmpsb
add
insl
pop
push
test
out
pop
int3
xor
lea
cmp
and
mov
jo
in
pop
push
push
testl
jno
gs
mov
push
fs
mov
pop
insl
xor
lea
out
mov
lea
sahf
ljmp
and
xor
addb
adc
and
lea
hlt
mov
inc
mov
cmc
mov
mov
pop
and
out
adc
xor
xor
inc
ss
aad
shl
test
jno
push
mov
push
sub
cli
sub
or
jl
xchg
xor
data16
jp
jne
repz
add
pop
jg
out
jl
jno
jnp
test
xor
jp
jne
pop
inc
les
sti
jno
leave
in
mov
sub
fwait
js
cltd
push
test
inc
jae
jne
pop
clc
cwtl
fidivl
or
mov
push
push
jge
sub
cmp
xor
aad
jne
push
dec
lods
mov
cmpsb
lea
dec
inc
clc
addl
fisttpll
ret
ds
jne
xor
cmc
adc
cmp
test
pop
jbe
mov
adc
dec
jno
jne
pop
mov
mov
adc
mov
lret
gs
xchg
push
inc
push
int
jb
lods
data16
ss
ljmp
jno
cld
mov
addr16
push
pop
push
jbe
cmpsb
mov
jg
idivb
mov
aad
jne
mov
cmc
jae,pn
movsl
xor
push
mov
xchg
ja
push
push
mov
insl
outsl
push
dec
lea
popf
xor
fwait
std
mov
cmc
adc
das
outsl
ss
dec
sbb
push
test
add
jbe
xorl
add
cmc
testb
push
aam
dec
es
shld
push
loop
divb
gs
repz
punpckhbw
testl
pop
adc
shll
in
push
jmp
lea
outsl
and
packsswb
subl
xchg
push
cmpl
loope
adcl
test
mov
and
test
lcall
inc
mov
fs
mov
xchg
push
test
or
push
push
out
movb
xor
and
lds
xor
fiadds
std
test
pop
push
xor
std
test
push
in
cmp
jbe
mov
dec
test
push
fidivrs
push
push
or
dec
mov
scas
and
int
sbb
in
in
push
in
pop
gs
add
lods
les
rolb
cli
xor
out
adc
lds
aad
bound
and
roll
test
inc
in
xor
icebp
pop
lock
aam
jmp
in
inc
and
popf
rorl
mov
jl
jge
xchg
and
xchg
dec
adc
xor
add
push
sbb
push
mov
aad
xor
sbb
xor
stc
arpl
mov
std
je
cmp
and
loope
jle
movsb
fstl
es
shlb
jle
xchg
xchg
movsl
imull
jle
push
cmpsb
mov
sub
scas
aaa
aam
hlt
jge
or
lea
cmp
jae
inc
mov
sbb
movsl
aam
inc
and
insl
cld
or
dec
shll
je
or
xor
das
lods
aad
xor
movl
pop
or
and
lea
int3
popf
adc
jmp
cmp
lds
pop
ss
bound
push
popf
jge
sti
push
dec
mov
movsl
jae
pop
sub
lds
jle
jecxz
addl
cmc
cmp
push
or
pop
jo
cltd
cmp
mov
cmc
movsb
inc
pop
push
arpl
push
mov
jle
pop
cmc
and
push
push
subl
subl
push
cmp
test
std
jbe
xor
lea
cmp
movsl
xor
adc
es
int3
lea
push
cmpsb
cli
xorl
frstor
testb
out
add
push
inc
aas
les
push
push
imul
out
adc
push
idiv
test
cmc
out
cmc
push
insl
repz
xor
cmpsb
cmc
or
loop
incb
aam
xchg
pop
int
inc
push
out
sub
jo
clc
jno
or
mov
push
jno
cli
jno
mov
fsubrp
outsl
and
mov
xor
in
cs
dec
bound
add
pop
mov
test
gs
mov
out
jle
push
and
push
into
mov
out
or
loop
mov
and
aam
xchg
push
mov
mov
imul
and
push
clc
and
data16
push
out
jle
cli
and
fsubrp
and
inc
fsubs
test
and
ds
cs
lret
mull
std
in
adc
mov
xor
mov
sub
fisubrs
outsl
cmp
and
cmp
lods
mov
push
int
add
out
frstor
adc
cmp
sbb
adc
inc
and
inc
add
loopne
push
in
push
pop
stc
nopl
lds
sbb
stc
inc
sbb
dec
or
inc
dec
cmpsb
sub
call
es
or
push
push
movsb
dec
adc
into
inc
add
daa
data16
xor
fbld
sbb
fisubrl
scas
or
xor
aaa
jle
out
dec
es
sahf
outsb
pop
and
popf
mov
test
ds
push
push
inc
orl
out
mov
adc
test
inc
std
and
ds
arpl
xor
mov
movsl
inc
jbe
mov
bound
cmpsb
jle
inc
in
lea
push
scas
inc
incb
and
lsl
int
arpl
or
arpl
cmpl
push
and
arpl
xorl
inc
into
les
jbe
hlt
sub
adc
push
gs
aad
and
push
add
dec
push
scas
popf
rorb
cmpsb
hlt
ds
in
pop
adc
xchg
data16
mov
test
xchg
cmp
pop
add
adc
xor
mov
pop
sbb
test
or
fwait
xor
pop
bound
movb
lea
pop
div
int3
mov
add
adc
roll
push
xor
xorl
xchg
orl
sti
daa
dec
fstl
sub
mov
mov
gs
sbb
jbe
add
idiv
icebp
xor
popf
stc
push
xchg
cmp
inc
rorb
data16
add
es
std
jge
inc
std
xchg
movsl
jecxz
cmc
push
iret
xchg
xor
es
stos
into
sub
fisttps
adc
cmp
insl
pop
dec
in
xor
fcomps
inc
int
pop
divb
sbb
cmc
mov
adc
mov
in
cmp
adc
adc
popa
cmc
push
out
scas
and
mov
fst
adc
cltd
jle
sbb
sti
add
adc
jge
rolb
mov
add
jle
dec
mov
ss
bound
fidivs
mov
jbe
ret
adcl
cmp
xchg
jbe
fidivs
inc
add
scas
popf
inc
gs
push
out
incb
push
jge
xor
out
aad
add
push
add
test
add
fimuls
scas
scas
and
cmpsl
test
push
mov
test
test
inc
xchg
lds
arpl
rolb
and
jne
lahf
mov
lea
loopne
push
fidivs
imul
sbb
inc
push
mov
xor
insl
out
jge
jnp
lea
dec
mov
test
jle
fdivrp
jl
dec
jl
inc
sbb
add
xor
mov
jmp
sarl
and
fwait
xchg
lea
js
sub
jnp
xor
xchg
std
xor
outsb
in
mov
push
repz
fstl
data16
shl
test
push
inc
adc
gs
adc
andl
adc
push
fs
or
jge
test
inc
ss
push
cs
cmp
inc
test
xor
push
repnz
lds
dec
ret
cs
add
pop
push
mov
inc
push
and
and
xchg
lret
sbb
mov
std
ss
adcb
andps
xor
xor
xor
fidivl
adc
cs
scas
xor
enter
xor
std
std
aad
in
push
lds
push
add
popf
push
jbe
std
mov
ds
push
cmp
mov
into
std
cmpsb
int
xor
sbb
cmp
jbe
push
std
ss
test
push
push
cmp
sahf
push
jge
xor
cmp
aad
in
add
jle
pop
test
push
cs
into
xor
insl
dec
test
es
mov
add
mov
cs
mov
jge
sbb
adcl
notb
cmp
cmpsb
pop
jge
mov
adc
fnstsw
jbe
push
std
ss
test
push
cmp
xor
popf
pop
jbe
push
pop
jle
call
stc
shlb
fisubrl
fnstenv
mov
test
into
push
xor
cmc
imul
push
inc
in
sbb
aas
es
adc
rcll
repz
jae
ljmp
decb
incb
jns
dec
push
mov
je
lods
mov
fldt
in
addr16
xchg
subl
fiaddl
inc
xor
and
cmp
roll
add
popf
out
imul
testl
es
insl
rcr
movsl
fisubs
add
push
jl
mov
popa
icebp
fsubl
in
sbb
repz
add
push
lea
push
mov
or
movsl
lds
adc
popf
cmpl
insl
cmp
jne
ds
outsl
jge
insb
mov
mov
ds
sub
divl
outsb
sahf
cmc
add
lea
dec
push
adc
ficoml
stc
jne
lea
enter
movsl
push
test
stos
inc
js
mov
std
xchg
fs
add
mov
dec
cmp
aad
xor
mov
push
push
mov
mov
add
aas
dec
rcrb
inc
scas
outsb
and
aaa
jbe
lret
mov
adc
gs
or
sbb
cmp
mov
push
push
inc
jns
add
sarl
push
mov
mov
sahf
gs
fdivrp
and
push
inc
add
es
dec
es
icebp
add
push
add
mov
mov
jnp
test
stc
js
mov
cmp
or
jbe
in
fwait
pop
fidivs
shrl
cmp
jae
cld
or
jae
popf
pop
cmpsl
mov
es
xchg
cmpsb
mov
mov
imul
xor
divl
xor
sub
daa
in
inc
cmc
or
or
sbb
mov
push
sub
divl
or
stc
pop
sbbl
sti
adc
insl
loope
xchg
adc
xor
insl
nop
jle
in
orl
popf
aas
xor
pop
mov
movsl
int
sbb
cmp
or
rclb
inc
lds
cs
cmp
push
mov
inc
and
jae
fstpl
jbe
jge
xor
mov
enter
or
sti
sub
cmc
stos
add
xchg
movsl
or
pop
fnstsw
out
pop
or
aad
jae,pt
push
inc
pop
outsb
pop
cwtl
out
aad
std
add
xchg
xchg
cmc
xor
test
in
out
jns
mov
dec
jns
inc
in
iret
fstl
xchg
add
lock
dec
xor
sbb
rclb
dec
sarl
add
scas
mov
jge
outsb
pop
gs
aad
jmp
or
inc
sbb
dec
xchg
rol
pop
xorb
cs
push
push
xchg
pop
movsl
sahf
scas
cmpsb
cmp
cltd
iret
ss
add
js
in
inc
xchg
es
jne
pop
orl
mov
std
pop
adc
mov
fnstsw
mov
jecxz
out
in
testl
mov
icebp
sbb
in
shl
bound
aad
hlt
push
dec
and
movsl
test
fildl
mov
or
outsl
cmp
aam
sub
fidivrs
mov
add
outsb
push
addl
scas
popf
idivb
out
push
push
xor
xorl
pop
mov
xor
or
pop
scas
fs
mov
gs
push
cmc
xor
push
pop
mov
pop
mov
jge
inc
cmpsb
fsts
push
outsb
push
dec
subl
mov
cmpl
arpl
or
scas
adcl
mov
push
addl
xlat
popf
cmc
xor
dec
gs
cmpsb
push
mov
addl
push
mov
call
lds
jne
sahf
jbe
rcr
xchg
adc
adc
dec
repz
adc
jle
push
lds
into
push
scas
aaa
push
gs
xor
in
int
jbe
pop
add
std
mov
in
sbbl
jbe
pop
xor
cs
test
push
test
pop
cmp
add
lods
test
ds
push
push
dec
xor
cmp
adcl
push
std
fidivrs
push
mov
push
popf
xor
ss
add
sahf
inc
lds
xor
movsl
test
ss
into
std
inc
in
inc
gs
fidivs
incb
push
dec
pop
rolb
std
xor
movsb
push
in
xor
push
xchg
arpl
mov
dec
std
incb
inc
push
adc
cmc
push
fnsave
xchg
add
into
jb
dec
incb
add
push
movsl
xor
push
fidivrs
lea
cmp
cmp
popf
xor
or
pop
arpl
push
push
fidivs
sti
sahf
hlt
popa
jno
cmp
cmc
xor
lods
push
xchg
push
xor
std
out
xchg
xchg
in
je
push
push
in
sarb
stos
mov
lea
test
test
pop
repz
jmp
test
scas
or
std
cmpsb
xchg
test
outsl
or
sbb
movsl
xor
mov
in
jge
pushl
and
and
iret
mul
lea
std
mov
pop
aaa
repnz
and
inc
and
mov
cmpsb
insl
subb
inc
cld
or
lea
in
mov
lcall
xor
push
nop
push
xchg
mov
fiadds
xchg
mov
push
in
or
outsb
cmp
xlat
xchg
popf
xchg
add
push
jecxz
push
gs
pop
push
jg
loopne
xchg
loope
sub
int
sbb
dec
movsb
dec
test
enter
leave
or
cmp
sbb
popf
push
xchg
stc
jle
ds
push
add
add
add
mov
in
mov
stc
ficoml
arpl
mov
inc
cli
jecxz
data16
std
lods
or
out
or
daa
rorb
add
cmc
inc
mov
xchg
mov
xor
and
dec
or
rcrl
mov
sbb
dec
out
dec
lea
test
cmc
add
push
xchg
xchg
or
int
pop
lods
or
xor
std
jae
pop
jle
add
std
mov
jge
std
outsb
add
aad
push
test
gs
and
aad
push
cmp
push
lea
mov
addl
gs
push
xchg
gs
push
add
iret
or
gs
adc
or
inc
aad
fisubrs
lea
mov
ja
aad
into
sbb
mov
aaa
sahf
add
push
andl
cmovo
sub
adc
mov
je
push
pop
cmp
jecxz
call
adc
in
pop
mov
push
pop
aas
std
push
push
lds
insl
cmp
push
xchg
test
es
ds
insl
inc
adc
in
iret
in
xor
add
es
mov
sahf
pop
inc
int
push
sub
test
fidivrs
bound
dec
pop
dec
dec
jns
mov
fcmovb
fsts
cmp
scas
aad
xchg
or
xchg
jae
jns
cmp
xor
push
cli
movsl
push
add
or
xorl
sub
cmpb
rcrl
inc
sbb
add
inc
loope
or
imul
divb
loope
jne
dec
pop
xor
push
cmp
stc
jbe
test
jbe
xchg
daa
jmp
or
enter
jne
jg
inc
add
int3
and
pop
bound
aas
jmp
xlat
sbb
loope
xchg
in
jns
mov
lea
jae
jmp
add
and
das
ret
jge
dec
lods
xchg
je
jge
and
cmpl
xor
cmp
cmp
push
test
dec
cmp
mov
pusha
and
jge
push
mov
add
push
adcl
dec
pop
icebp
adc
cvtdq2ps
inc
pop
fistpl
add
scas
popf
mov
movsl
xchg
movsl
pop
or
out
mov
ret
mov
test
mov
ror
aad
xchg
arpl
cmpsb
out
or
xchg
inc
test
push
add
mov
push
pop
repnz
test
mov
xor
mov
jne
add
bnd
dec
push
lods
fs
icebp
cmp
mov
imul
stc
push
jle
or
lahf
push
movsl
fs
sub
cwtl
push
icebp
outsl
and
cmpsb
jmp
cmp
data16
pop
push
lods
in
pop
insb
push
mov
in
jno
jg
xor
xor
jge
arpl
ljmp
mov
paddw
and
in
scas
push
sbb
std
cmp
mov
test
jns
and
in
ret
leave
mov
push
dec
out
jae
popl
mov
mov
push
xor
sub
dec
gs
xchg
gs
xor
cs
mov
push
pop
push
jbe
push
repnz
jge
or
pop
int
testb
cmp
pop
inc
xchg
call
push
ss
cmp
cmp
dec
xchg
decl
outsl
mov
xor
neg
sbb
dec
lds
push
dec
jg
jbe
cmc
testb
jne
je
push
jne
and
mov
outsl
push
test
ja
in
cmc
push
pop
rcrl
cmc
push
or
jl
jge
jns
push
test
lea
adc
ds
dec
or
jg
stos
dec
mov
hlt
andl
pop
test
xor
test
icebp
mov
scas
mov
xchg
arpl
mov
xchg
daa
popf
ret
cmp
arpl
sbbl
sti
pop
test
cmp
inc
int
std
std
xchg
adc
ljmp
jg
mov
xor
movups
std
clc
mov
iret
imul
jns
mov
out
dec
popf
movsb
add
cmp
jl
jge
xchg
lcall
jae
inc
add
repnz
push
orb
fnsave
or
shl
jle
mov
pop
push
sub
incl
sbb
sub
sbb
mov
jbe
mov
daa
pop
xchg
push
sar
sbb
loop
scas
sbb
mov
push
adc
xor
cmp
out
ja
mov
push
adc
lea
jnp
mov
ret
call
and
push
adc
stc
stc
sbb
and
mov
push
pop
and
js
xor
mov
push
sub
cs
sbb
scas
cltd
je
xchg
mov
jne
dec
inc
outsl
jle
sub
mov
adc
movsl
xchg
out
mov
push
mov
es
cmpsb
out
ljmp
arpl
xchg
std
sahf
int3
mov
aas
adc
aaa
sbb
and
dec
push
add
push
fcomps
cmpsl
inc
fisubrs
add
in
jmp
movsb
notb
inc
and
mov
add
xchg
mov
test
stos
gs
popf
pmaxub
and
sbb
pushf
cmpl
jbe
out
mov
gs
push
je
out
push
outsl
js
push
mov
inc
xchg
cmpsb
mov
jno
push
lds
dec
hlt
sub
jbe
dec
xor
push
add
ss
ja
inc
pushf
inc
data16
cmpl
lea
std
xchg
inc
xor
gs
or
rorw
lea
adc
or
xchg
push
xchg
shll
lcall
fld
xchg
pop
jbe
into
inc
adc
js
fnstenv
in
xchg
in
mov
jnp
das
into
roll
gs
in
inc
adc
mov
or
pop
jb
xor
rcr
test
shlb
push
mov
int
mov
pop
xor
std
sub
test
lret
jge
add
rcrb
loopne
pop
push
int
push
and
in
jecxz
insl
out
insl
lds
aas
test
mov
sarl
mov
sbb
loope
jae
aad
inc
cmp
xchg
add
or
add
vsubps
and
add
addr16
gs
mov
insl
lret
cmp
sahf
out
cmc
xchg
mov
add
std
stos
add
push
mov
cs
into
fstps
das
pop
mov
in
sbb
xor
pushf
dec
aas
push
mov
dec
push
add
jl
xchg
sub
jae
pop
xor
push
push
xchg
gs
pop
leave
inc
es
pop
in
insb
pop
outsl
cs
mov
stc
pop
push
leave
push
mov
push
xchg
push
mov
out
and
stc
insb
movsl
js
mov
jecxz
sti
aam
loop
jge
sbb
sub
push
xor
mov
pop
aaa
test
in
aam
mov
jge
fdivrl
sub
add
or
xor
jae
movb
add
jmp
jno
sbb
cmp
dec
fs
int
add
lods
add
sbb
sahf
loope
sbb
out
xchg
xchg
mov
xchg
xchg
pop
push
ja
or
inc
dec
jle
mov
pop
insl
pop
xorl
in
mov
dec
add
dec
dec
in
or
popf
mov
arpl
in
lret
incb
insl
iret
jge
dec
mov
popf
jg
push
xor
mov
mov
movsl
jle
js
jnp
popf
lds
fwait
mov
push
add
push
popl
dec
push
lock
test
adc
xchg
cmpsb
or
cs
jg
jae
pcmpeqd
adc
movsb
pop
or
test
pop
popf
into
dec
cmp
in
xor
test
fsubp
test
scas
leave
dec
xchg
cmp
pop
std
mov
in
pop
cmpsb
popf
xchg
push
dec
xlat
pop
outsb
mov
fdivrl
add
mov
pop
test
sub
dec
ljmp
fucomp
mov
repnz
pop
incb
in
sub
dec
insl
rorb
js
push
push
and
movsl
jno
xlat
adc
pusha
outsl
jle
or
repnz
movsl
adc
mov
ficomps
xchg
jg
push
xor
js
jbe
jbe
popf
jbe
sbb
and
sub
sub
push
in
xchg
xorl
test
cwtl
out
gs
xor
faddp
lret
inc
inc
in
std
int
adc
data16
and
push
sbb
push
and
lods
xchg
aam
xor
cmpsb
add
xchg
mov
and
jbe
test
inc
and
data16
push
test
fistpl
adc
popa
xor
adc
xor
lods
xchg
add
into
xor
outsl
cli
ss
imul
inc
xchg
shl
data16
push
adc
packssdw
fstpl
sbbb
in
lahf
dec
dec
out
inc
out
xor
pop
jge
movsl
inc
add
popf
jge
lods
lock
test
pop
lahf
incb
fnstenv
cmpsb
lahf
xchg
jle
ds
lods
jo,pt
xchg
adc
hlt
xchg
add
sahf
orb
popf
stos
and
jg
movsb
lock
jno
dec
fisubrs
mov
pop
loopne
push
ja
adc
inc
pop
data16
jle
test
and
push
push
ds
cmpsl
je
push
xchg
lock
rcrb
cmpsl
and
or
ds
jns
das
push
cmpsl
pop
movsl
inc
xor
mov
sbb
jbe
loop
gs
testl
adc
addps
xor
test
push
idivl
jo
inc
mov
cmpsb
or
lods
je
adc
mov
stos
aas
aad
je
fsubp
movsl
pop
cmpsb
scas
cmp
add
push
xchg
gs
cs
mov
insl
dec
pop
cmc
mov
jae
sbb
loope
jae
lcall
in
aaa
inc
cs
cmp
lahf
pop
movsl
inc
fistpll
xchg
lea
push
pop
push
jle
mov
jbe
dec
dec
pop
jl
sub
push
ss
push
xchg
pop
movsl
xchg
jg
popf
aad
jnp
jmp
shl
xor
cmp
add
mov
sbb
fistpll
out
sbb
and
movsl
xchg
jo
mov
push
insb
outsl
in
adc
push
xchg
bnd
jle
push
dec
mov
cmp
fiadds
scas
addr16
outsl
idiv
jno
push
fldt
sbb
inc
arpl
add
popf
cmp
sbb
pop
cmp
lods
imul
into
dec
pop
mov
xchg
aas
lcall
inc
movsb
movsl
insl
decb
out
test
push
cmp
mov
sti
jb
or
push
push
dec
and
ds
xor
pop
xor
inc
nop
push
adc
cs
adc
sahf
cmpl
push
jmp
cmp
divps
and
push
dec
dec
into
xchg
cli
push
imul
sahf
cmp
cmp
sbb
std
aad
test
sbb
xor
sbb
inc
cmp
cmpsb
xchg
and
jmp
or
add
je
mov
inc
lock
int
xor
push
xor
sub
test
hlt
inc
push
push
in
xor
out
push
sub
loope
outsb
jbe
js
mov
push
repnz
outsb
mov
popf
xor
les
pop
popf
jmp
jge
movsl
xchg
push
push
push
dec
xchg
out
mov
dec
push
adcl
or
cmp
imul
test
lds
out
incb
xchg
xorb
push
js
pop
cmp
roll
push
cmc
push
popf
mov
sbbb
gs
shrb
push
or
stos
dec
sub
inc
jl
adcb
jns
adc
xor
addb
jae
ss
jle
add
push
inc
jecxz
push
xchg
cmp
cmc
add
lds
mov
orl
push
mov
jge
add
in
mov
xor
cld
fisttpll
es
mov
gs
data16
subl
outsb
lds
out
jnp
jle
mov
cld
add
push
cwtl
inc
mov
std
maskmovq
testl
xor
sti
mov
movsl
inc
mov
jbe
push
dec
inc
movsl
ds
scas
iret
lods
cmpsb
test
ds
mov
frstor
in
sahf
lcall
cs
add
std
mov
or
int
call
pop
cmc
lcall
jl,pn
popf
out
sarl
out
jp
insl
std
push
xchg
sbb
pop
in
movsl
stos
add
fwait
push
dec
xchg
pop
scas
test
dec
sbb
mov
xchg
mov
xlat
mov
jge
jmp
cmp
sub
in
jl
data16
xor
int
and
jl
inc
popf
loope
pop
jmp
adc
jl
xchg
pop
outsb
daa
add
jne
mov
ss
pop
inc
int
hlt
or
push
push
jl
lods
xor
jge
dec
pop
mov
xchg
pop
jae,pn
cltd
leave
xor
arpl
gs
aas
mov
mov
int
mov
adc
push
push
scas
fdivrp
scas
inc
push
imul
jle
push
xchg
adc
test
popf
aad
test
lds
lcall
ror
es
xchg
test
add
mov
mov
xchg
test
subl
aam
pcmpgtb
dec
orl
ret
mov
popa
xor
fsubr
xchg
inc
sbb
dec
ds
data16
sahf
sub
insb
nop
outsb
cmp
sahf
movsl
loope
push
mov
lods
into
mov
inc
in
test
mov
mov
jb
cmpsb
jge
push
ljmp
test
loopne
jbe
mov
std
adc
add
cli
inc
push
jo,pt
addr16
arpl
test
sarl
jge
mov
xor
push
pop
psubd
call
xchg
or
lahf
or
mov
jge
inc
std
mov
xchg
add
sbb
add
roll
dec
cmpsb
hlt
int
or
jge
xchg
push
fidivrs
cs
out
movsl
scas
fidivrs
movsl
std
sahf
jg
not
xor
cmpsl
pop
into
push
aad
mov
add
push
cwtl
outsb
fcoms
movsw
outsb
dec
mov
fs
xchg
ds
insl
push
xor
gs
mov
xchg
inc
xorb
mov
xchg
fs
pop
in
lds
fs
cmp
sahf
sub
adc
xchg
jge
mov
pop
mov
inc
es
jb
fldl
dec
sub
jge
dec
adc
lods
flds
jmp
inc
inc
popa
inc
dec
adc
popf
pusha
frstor
jle
mov
jno
xor
pusha
jno
xchg
jnp
push
sbb
mov
mov
aad
js
push
outsb
xchg
shl
pop
arpl
xor
lods
add
inc
out
out
sbb
jp
push
add
lahf
add
insb
mov
insl
lds
imul
xchg
push
movsl
cs
mov
outsb
leave
jbe
arpl
insl
push
dec
inc
shll
push
ss
gs
imul
mov
insl
sbb
aam
fs
inc
insl
ja
orb
jle
pop
xor
sub
cmp
xchg
push
das
xor
std
jmp
test
add
fdivr
shl
jbe
sahf
mov
icebp
scas
xchg
insl
and
push
push
mov
popf
inc
stc
jae
outsb
cmp
xchg
std
and
into
inc
dec
pop
rcll
ret
mov
cmp
fcmovbe
mov
inc
jle
push
pop
mov
mov
inc
jge
insl
sarl
int
fstl
pop
int
push
lods
pop
mov
mov
push
push
add
push
push
movsl
insl
pop
cmp
std
ds
xchg
std
pop
xor
inc
int
out
ss
fdivrs
pop
sbb
popf
cmpsl
mov
lea
or
movsl
sbb
adc
pop
mov
es
into
push
inc
dec
sub
hlt
pop
in
xchg
mov
orb
dec
inc
push
mov
fistps
std
in
movsl
jl,pt
icebp
pop
xchg
pop
mov
icebp
cmp
sbb
jge
aas
aad
mov
jg,pt
inc
add
mov
outsb
sub
sub
pop
adc
xchg
cmpsb
shl
jae
iret
xor
es
test
xchg
fsubs
int
je
and
push
outsl
xchg
xor
or
gs
xchg
gs
add
push
mov
movb
push
rep
outsl
inc
inc
xchg
and
inc
jge
mov
dec
sysexit
cmp
sub
incb
out
sbb
int
mov
push
push
push
aas
in
sub
and
adc
push
insb
mov
sahf
popf
mov
push
xlat
arpl
xor
sahf
fwait
gs
ljmp
xchg
ss
and
mulb
cmp
inc
push
and
addb
sub
rcrb
xor
incl
aam
lods
sub
mov
nop
test
cltd
adc
mov
aas
mov
push
push
push
flds
cmc
pop
scas
or
imul
add
push
xor
add
xchg
std
mov
std
push
stos
dec
mov
adc
ret
decb
cmp
xchg
pop
jge
and
call
data16
pop
cli
arpl
push
imul
mov
outsb
insb
dec
cmp
push
cmp
test
or
repnz
jp
fisubl
jle
test
sub
je
lock
ljmp
cld
cmp
mov
movsl
or
data16
test
pushf
cmpl
ds
mov
test
cli
test
test
pop
gs
fs
enter
inc
mov
pop
frstor
adcl
fisttpll
scas
loope
dec
pop
movsb
fidivs
leave
out
fiadds
jbe
jecxz
mov
dec
std
ss
push
adc
push
sbb
insl
imul
push
dec
ficoms
imul
fldl
add
push
pop
add
cmp
test
in
iret
cmp
in
cmp
ficoms
xlat
cmp
aaa
mov
cmp
or
cmpsb
test
sub
fucom
xchg
mov
cs
subl
int
sahf
popa
js
out
xacquire
popf
jecxz
insl
push
js
and
popf
in
imul
dec
or
dec
push
movsl
xchg
mov
imul
push
push
xchg
adc
pop
in
push
mov
popf
iret
xor
jbe
push
push
int3
int
push
push
fst
jecxz
aaa
es
jle
out
das
decb
test
and
xchg
movsl
ss
std
out
cmp
mov
test
pop
push
xchg
mov
push
data16
xchg
adc
dec
or
push
push
xchg
cmp
push
mov
inc
mov
pop
or
insl
cmc
outsb
mov
jnp
adc
test
pop
push
jecxz
testb
movsl
out
mov
pop
or
fiadds
dec
movsl
mov
adc
lods
pop
outsb
ds
cmp
addr16
xchg
xchg
sahf
loope
xor
jbe
imul
cmp
pop
push
sub
push
push
jl
or
pop
in
push
cmp
push
pop
push
and
and
subb
push
rorb
into
inc
outsb
stc
sbb
std
or
jo
notb
adc
xor
imul
or
insl
xor
in
xor
sub
push
je
movsl
push
insl
xor
mov
inc
pushl
and
xor
push
sbb
pop
iret
fisubs
sbb
fbld
xorl
cmp
shlb
mov
es
test
push
cmp
js
pusha
std
dec
lock
push
sarb
outsb
sahf
test
push
sbb
andb
mov
inc
add
cs
jl
lds
dec
xchg
push
test
xchg
cmpsb
es
xor
lret
jne
outsb
sub
inc
jg
andb
or
and
lea
cmpsb
out
out
push
xor
push
xchg
int
push
push
jbe
cs
aad
loopne
movsl
dec
int
dec
cmp
pushf
cld
push
aas
popf
cmp
aas
insl
das
std
andb
jmp
cmc
dec
or
push
pop
cmp
es
mov
or
jae
in
mov
lods
xor
sub
cs
push
les
pop
test
cmpsl
pop
movsl
dec
mov
mov
xchg
fisubrs
add
mov
sub
adc
ss
test
cs
xchg
popf
mov
arpl
notl
sub
pop
xchg
shrl
jle
push
test
sub
int
push
aad
mov
ljmp
mov
xchg
cld
in
inc
push
jl
out
pop
mov
or
jge
xor
jl
repnz
pop
push
aaa
repnz
pop
lahf
fisttpll
pushf
adcl
cmpsb
icebp
pop
add
pop
repnz
pop
pop
mov
mov
cs
mov
loope
icebp
dec
cld
sub
movsl
xchg
cmp
out
es
cmp
mov
mov
insl
jbe
dec
adc
xchg
popf
and
xchg
cmpsb
hlt
xor
test
jno
adc
test
ds
inc
adc
dec
pop
sub
out
jo
jbe
std
sub
adc
mov
mov
cmp
out
mov
movsl
mov
addl
popa
adc
xchg
add
lea
sub
xchg
repnz
push
adc
pop
jae
mov
repz
sahf
push
test
xchg
xchg
test
insl
jge
mov
imul
mov
fwait
gs
and
add
std
dec
push
jl
push
gs
jmp
mov
sbb
loope
push
fstl
cs
sub
test
std
pop
mov
xchg
cs
jecxz
jno
test
es
orl
das
lds
jle
xor
dec
mov
mov
and
dec
xor
xchg
out
mov
push
mov
sahf
stc
mov
mov
push
or
cmc
xchg
mov
adc
xor
movsl
mov
mov
insl
les
xchg
nop
mov
push
cltd
cld
jbe
adc
shll
cmp
cmpl
lods
fstps
mov
das
lea
xchg
push
cmpl
push
mov
insl
outsl
xchg
hlt
pop
xorl
mov
push
jmp
divb
addr16
in
mov
test
ds
and
adcl
mov
or
jl
subb
push
lds
aas
push
mov
push
and
push
add
push
pop
andb
xor
push
popa
mov
push
btr
repz
out
jbe
dec
hlt
std
mov
lea
mov
notb
call
into
mov
mov
jae
cmp
in
aaa
jle
enter
cmp
xorl
mov
leave
mov
or
add
xchg
ret
or
movsl
sub
fldl
mov
stc
fwait
leave
mov
mov
aad
in
jbe
sarl
iret
xchg
mov
mov
add
mov
insl
xchg
popf
mov
fwait
push
adc
in
test
jmp
test
push
movsl
aad
out
lds
sti
add
mov
rcr
push
sub
ja
int
popa
stc
lret
adc
cmp
mov
xlat
popf
cmc
test
leave
sub
pop
inc
sbb
jno
jbe
sub
fwait
xchg
jp
subl
or
test
and
jle
push
js
or
ret
add
adc
cwtl
push
fisttpl
mov
ds
movsb
test
cli
or
or
sbb
jnp
cwtl
dec
or
inc
loopne
test
push
or
pcmpgtb
mov
test
popf
fwait
xchg
mov
jne
scas
mov
and
setae
xchg
lods
push
mov
cmp
mov
and
xor
imul
iret
movsl
mov
icebp
adc
dec
pop
mov
jg
fcmovne
into
mov
push
xor
lock
scas
scas
pop
jb
sub
fnstsw
loop
gs
int
loope
insl
pushf
inc
test
jbe
pop
xchg
fdivrl
jne
or
data16
cmpsb
mov
xlat
add
ja
mov
bt
mov
repz
out
orb
loope
hlt
add
movsl
lock
es
scas
mov
addl
shr
frstor
int
lods
jne
xor
inc
jg
jnp
in
gs
and
sti
fstl
jp
xor
xor
pop
jbe
lea
xor
push
shrb
cli
fldenv
dec
mov
loope
inc
mov
jle
rclb
jbe
fnstsw
push
cmp
xchg
out
mov
mov
addb
jb
pusha
cs
repz
ret
adc
aas
jno
gs
xchg
scas
lret
sti
mov
mov
mov
cmp
repz
or
add
or
popf
xor
mov
xchg
sbb
lea
mov
xor
fbld
jnp
xchg
xor
xchg
add
aas
jb
int
xchg
int
pop
orl
test
jnp
and
xchg
lea
dec
mov
scas
out
pop
fmuls
test
dec
mov
or
xor
mov
aas
in
ret
push
add
aas
popa
test
insl
mov
add
mov
test
mov
jno
subb
fdivl
push
push
mov
jg
mov
add
lret
insb
pop
jno
xchg
in
inc
xlat
jbe
fnsave
lods
ja
lahf
jns
in
inc
clc
pop
jge
or
jnp
add
shll
jge
xor
xor
mov
lea
inc
test
int3
or
xor
push
pop
nop
xchg
in
add
insl
sbb
adc
xor
cmc
pop
lds
push
add
in
rcrl
jne
cli
fbstp
or
mov
outsl
or
mov
pop
cwtl
stc
sbb
push
mov
roll
cmp
sub
cwtl
iret
aas
adc
jnp
mov
jbe
jle
mov
pop
mov
data16
popa
insl
add
and
xor
adc
cmp
inc
mov
iret
lahf
cltd
jae
pop
push
mov
shll
nop
iret
dec
pop
popf
shrl
push
mov
mov
jo
jbe
push
jmp
addr16
or
test
mov
call
dec
lods
push
push
adc
leave
fiaddl
aad
push
lds
popf
pop
test
outsl
adcl
or
xchg
pop
jbe
push
push
jg
in
repz
js
xlat
xchg
sbbl
loopne
pop
cmc
data16
xor
js
mov
les
mov
mov
outsb
fstl
mov
mov
pop
jo
cltd
outsl
mov
sub
cmp
jae
fdivrp
lds
out
jle
fwait
in
xorl
push
gs
mov
bound
pop
sahf
jae
fisttpll
pxor
fsubr
inc
orb
cmc
xchg
mov
cli
es
imul
movsb
sub
les
les
push
es
mov
stc
ja
pop
cmp
and
sbb
or
cltd
mov
mov
and
and
or
jns
lret
or
and
repnz
jno
lock
add
out
jbe
popa
xchg
outsl
adc
nop
icebp
mov
lock
cmp
mov
jge
nop
push
sti
cmpl
xor
stc
mov
cmp
pop
fiaddl
lahf
aad
xor
push
jno
adc
jae
stos
outsl
dec
mov
inc
iret
push
insb
arpl
fiaddl
insl
negb
imul
pop
insb
nop
mov
sbb
lret
pop
imull
or
daa
ss
lret
add
sbb
or
xchg
test
adc
inc
unpckhps
fnsave
in
sbb
inc
js
test
or
pop
call
out
pop
les
sub
sahf
add
cmpsb
add
insl
cmp
outsb
mov
push
mov
fs
rol
int
out
lds
dec
ret
mov
lods
pop
jae
iret
cs
aam
mov
xor
add
cwtl
mov
test
xchg
iret
mov
push
cmp
shll
adc
pop
jb
adc
adc
xchg
call
push
xor
mov
jle
data16
je
inc
loop
fwait
inc
test
outsb
jle
sbb
rcrl
das
xor
xchg
scas
xchg
icebp
movsl
cmc
or
stos
mov
xchg
sbb
xchg
lea
lods
jg
jge
fisubrl
test
lods
mov
xchg
outsl
ss
stos
test
imul
jo
cs
std
push
mov
sbbl
shll
mov
cli
mov
inc
repz
or
jge
sarb
xchg
xor
jbe
jg
popf
jno
mov
lds
ficoml
sbbl
aad
std
fisubs
xor
xor
lds
lea
iret
std
push
clc
int3
pop
ret
ds
stc
dec
xchg
dec
popf
xlat
jno
mov
push
in
cmpsb
mov
jle
mov
jbe
test
pop
lahf
and
jg
cltd
push
xchg
and
push
stc
push
das
into
push
and
inc
or
orl
daa
scas
xor
push
orb
jns
fwait
push
jle
mov
ret
xchg
add
std
std
lds
arpl
testl
and
cmpsb
scas
push
mov
inc
fstl
in
neg
push
adcl
dec
leave
xchg
in
mov
mov
dec
xor
in
std
mov
push
es
add
add
std
mov
stc
lds
inc
mov
test
and
lret
mov
mov
xchg
jnp
ds
mov
push
popf
aam
mov
xchg
mov
cmp
inc
aam
stc
jbe
xchg
jns
iret
lea
das
popf
push
mov
pop
insl
imull
leave
fwait
lret
or
add
std
mov
pop
testl
out
jge
mov
in
cmpsb
fs
repnz
shrb
or
mov
std
shlb
mov
mov
pop
add
or
inc
push
orl
adc
lds
mov
sub
jns
cmp
pop
out
in
rorl
mov
sahf
fst
shl
das
push
std
and
sub
mov
arpl
in
lods
xchg
xor
push
sbb
pop
mov
test
xchg
xchg
addr16
dec
mov
lods
mov
and
popa
xor
push
mov
xor
movsbl
hlt
jp
push
sbb
xor
or
sarl
movsb
mov
fstl
out
push
jp
lea
xchg
outsb
rclb
jne
or
repz
outsb
mulb
push
or
stos
cmp
sarb
faddl
mov
fmull
mov
out
nop
repnz
inc
std
adc
jnp
icebp
das
xor
push
pushw
sbb
les
ret
cltd
mov
sbb
lods
mov
iret
int
xchg
enter
insl
negl
xor
mov
jb
mov
fimull
loop
sti
push
repnz
mov
testl
jg
out
pop
clc
or
push
sbb
mov
and
push
xchg
mov
repz
lret
ljmp
xchg
xchg
push
push
add
cmpb
pop
sub
or
mov
push
dec
xchg
popf
xchg
cli
stc
push
repz
iret
movsl
add
xor
imull
push
xchg
scas
push
insb
ljmp
pop
sbb
out
inc
xor
outsl
and
xor
popf
or
or
pop
outsl
rclb
jno
and
ret
shlb
ret
jb
jmp
cmp
ret
fwait
adc
movsb
pusha
xor
pop
inc
jno
sub
pop
icebp
sbb
gs
pop
add
push
xchg
mov
cmp
mov
or
ljmp
test
cmp
adc
out
pop
push
jecxz
je
pop
dec
fstpt
jbe
dec
mov
jle
insb
inc
push
add
add
les
pop
push
cs
repz
mov
dec
pop
add
add
jno
jb
jge
jo
lds
add
xor
and
cmc
lea
sti
xacquire
aad
outsl
add
xchg
test
jb
jmp
mov
mov
in
mov
or
xchg
sub
jb
mov
add
inc
xlat
int
mov
push
mov
lds
mov
inc
and
sbb
fstpl
jecxz
scas
in
mov
insb
js
incl
enter
lretw
sahf
xor
xor
xchg
xor
inc
jmp
lcall
cmp
adc
jns
sbb
mov
addl
call
sbb
sbb
aad
jp
xchg
mov
cmpl
aaa
jecxz
mov
inc
xlat
fistpll
mov
cmc
and
xorl
iret
sbb
mov
jns
aad
fldenv
shrl
mov
inc
sahf
das
xchg
xor
gs
and
and
jge
inc
cltd
repz
inc
lods
pop
sbb
iret
std
inc
or
hlt
adcl
out
stos
shrb
pop
push
inc
sub
repnz
ja
cmp
and
xchg
jne
int
mov
data16
vpaddsw
mov
scas
mov
or
iret
add
fimuls
and
or
movsl
jbe,pt
inc
sbb
ret
jno
xchg
add
pop
mov
inc
jae
sub
push
cmp
pop
jecxz
out
jae
iret
push
mov
xchg
cmpsb
add
push
popa
ret
in
mov
jbe
in
or
xor
xor
fnsave
insl
xor
popa
lds
jmp
std
add
inc
cmp
psllw
ret
jb
sbb
outsb
mov
test
in
popf
add
inc
cmp
jno
mov
add
aas
loope
adc
cmc
aad
ja
pop
shrl
pop
sbb
fisttpll
repz
xchg
stc
cmp
mov
xor
daa
dec
or
in
in
leave
add
out
or
push
inc
icebp
push
roll
aad
mov
jae
push
adc
cmp
outsb
int
lds
gs
fnsave
jb
loop
jns
fldenv
push
xor
scas
xorl
dec
mov
shrl
lea
mov
outsb
inc
jns
xchg
and
lea
xchg
or
icebp
sub
push
aad
test
vpmaxub
jmp
xchg
push
push
jle
sarl
je
xchg
jmp
lcall
sti
popa
es
xchg
or
add
dec
add
xor
sub
mov
push
push
sbb
in
push
adc
fwait
imul
add
and
cld
cmp
hlt
ljmp
dec
and
push
ret
jno
pop
or
lea
pop
out
sbb
mov
add
stos
push
jbe
fwait
xchg
pop
mov
das
out
mov
jp,pt
dec
lcall
add
or
push
aam
mov
mov
jge
and
xor
cmp
test
cs
andl
cmc
jle
mov
leave
out
popf
das
push
push
push
xor
insl
imull
push
cmpl
les
test
xchg
pop
hlt
pop
fwait
test
dec
xlat
sbb
add
movsl
lods
inc
mov
out
jp
xor
add
xor
mov
movsl
fnstsw
aad
mov
xchg
int
cmp
push
inc
movsl
dec
add
std
sahf
and
sbb
stc
stc
cmc
std
into
mov
cmpsb
outsb
push
js
cmpsb
pop
mov
sbb
rsqrtps
out
lea
mov
in
xlat
mov
mov
icebp
inc
pop
mov
insl
push
mov
mov
sub
hlt
repz
push
xchg
insl
sbb
movsb
subl
fstl
fidivrs
std
mov
adc
or
inc
ss
xchg
inc
aaa
sti
jge
mov
jnp
push
push
jne
fisttpll
mov
add
jbe
jp
and
mov
pop
out
jne
insb
mov
jle
sub
and
xchg
cmp
push
xor
ffree
dec
push
aam
xor
xor
pop
pop
jne
push
push
xchg
and
jge
sub
mov
pop
sbb
dec
sti
pop
rcr
push
mov
xor
mov
test
pop
pop
mov
mov
jecxz
les
or
js
xchg
mov
mov
cmc
lcall
add
or
ljmp
das
std
std
or
std
out
shll
pop
pop
adc
scas
fs
repnz
insl
mov
std
mov
js
aad
sbb
loopne
aad
inc
cmp
sub
hlt
and
int3
repz
stos
pop
icebp
lods
notb
inc
push
jb
mov
and
je
js
ficoms
cmp
fdivrl
or
int
aad
test
test
aas
mov
inc
decb
icebp
movsl
lea
negl
stos
imul
popf
mov
sub
shlb
or
and
sahf
rcrl
out
xorl
mov
mov
into
cmp
imul
xchg
jne
ja
push
jne
jmp
jmp
jne
arpl
xor
push
adcl
xchg
shrl
rcr
in
stc
mov
imul
lods
gs
pop
jge
xchg
shr
ljmp
outsb
add
mov
icebp
stos
aas
imul
or
aad
fldcw
mov
std
mov
out
lcall
push
cmp
mov
daa
in
mov
sub
jne
testb
xchg
lahf
hlt
add
add
fbld
sub
call
loopne
dec
sbb
push
add
clc
pop
dec
aaa
xchg
inc
lods
sub
mov
std
outsl
push
sahf
xchg
dec
adc
add
je
xchg
or
cwtl
in
mov
xchg
cmp
push
lahf
sti
add
jo
or
pop
outsl
jne
nop
lret
mov
push
ret
hlt
adc
mov
add
jne
push
iret
or
imul
in
cmc
in
imulb
sti
push
jne
jb
push
adc
ljmp
lcall
or
mov
mov
dec
jno
mov
adc
pop
mov
int
mov
std
aad
pop
out
loop
inc
cmp
xchg
mov
std
jecxz
add
sub
sbbl
shr
jecxz,pn
int
xor
imul
decb
mov
cmp
fldl
pop
lcall
or
sahf
mov
jg
fldl
add
dec
stos
mov
hlt
jge
fucomp
pop
ret
jbe
int3
push
xchg
add
int
test
or
cmp
dec
jno
fstl
testl
cmp
arpl
lds
jecxz
add
loope
inc
fistps
insl
outsb
add
xchg
aam
divl
xor
aad
push
mov
pop
sbb
adc
add
adc
jmp
xor
push
test
out
int
inc
mov
pop
pop
aad
mov
mov
in
lret
or
bound
inc
push
dec
roll
dec
fnstsw
push
xor
xchg
pop
jg
inc
mov
adcl
add
movsl
sbb
or
icebp
dec
mov
cltd
push
jbe
add
add
shll
sbb
jle
pop
push
into
sub
aaa
cwtl
iret
and
push
adcb
stos
fldenv
stc
popl
test
or
leave
cmpsl
add
mov
stc
mov
jne
scas
fcmove
outsl
jo
fsts
add
inc
xor
xchg
out
and
adc
lods
jecxz
inc
rcll
or
xchg
adc
inc
push
cmp
rorl
test
test
push
adc
std
repz
xor
pop
push
cmp
and
and
adc
xchg
lods
inc
mov
inc
cmp
sbb
sbb
jne
lds
jbe
pop
dec
repz
jge
das
cltd
cmp
jle
xchg
fldl
popa
push
in
xor
push
sahf
sti
test
gs
gs
mov
cmp
shr
lea
fwait
xchg
out
sti
pusha
shll
orb
lea
mov
fidivl
lea
icebp
rcrl
fiaddl
or
testb
lahf
push
jp
lea
shlb
jp
push
inc
insl
pop
inc
outsl
shll
roll
push
not
movsl
nop
xchg
mov
xchg
adc
cmp
inc
lods
int
icebp
aam
jb
push
fstl
std
mov
push
icebp
pusha
pop
xor
mov
mov
in
xchg
icebp
iret
ss
pop
or
aad
ja
mov
jo
jne
fwait
stos
in
jnp
outsb
out
outsb
adc
inc
mov
ljmp
out
pop
std
jae
dec
push
movb
pusha
scas
in
iret
jno
xchg
frstor
adc
outsb
cmc
sarb
sbb
into
repnz
aad
popa
pop
ror
mov
and
mov
out
mov
mov
jl
lret
jl
adcl
sti
mov
xchg
cmpb
cmpsl
aas
stos
cltd
lea
push
jns
loope
jno
cmp
cmp
test
addl
roll
adc
cmp
xchg
fstl
in
subb
add
push
es
adc
xor
push
push
leave
fs
push
push
mov
or
sbbl
mov
jge
cmp
cmp
mov
lods
mov
mov
push
jle
cmp
gs
testb
jne
push
or
lea
cmp
es
ja
push
repz
stos
xchg
cmpsb
adc
outsb
notb
test
lret
inc
add
in
mov
aaa
movsb
xchg
ret
adc
adc
adc
sbb
bound
movsb
xchg
popf
mov
push
xchg
add
lea
adc
and
mov
pop
lea
and
adc
pop
sahf
aad
mov
andb
notb
pop
xor
xchg
and
mov
rorl
mov
dec
in
pop
pop
mov
decb
jb
pop
je
add
mov
jp
pushf
dec
scas
or
mov
xor
sti
sub
sub
and
lods
xor
std
pop
dec
test
inc
push
test
mov
pop
push
inc
and
xchg
jb
in
sub
scas
mov
push
roll
jno
sahf
fs
dec
mov
jns
xchg
mov
xor
fwait
xchg
mov
xchg
mov
mov
icebp
pop
and
repnz
push
xchg
add
jge
fiaddl
mov
ja
shll
lds
repnz
lds
mov
cmc
fistpll
int
jno
pop
add
lds
dec
in
and
fidivl
scas
jg
jmp
xor
push
sbb
rorl
adcl
mov
and
mov
cmp
pop
inc
lods
sbb
mov
jns
cmp
scas
mov
ret
mov
cmp
dec
test
insl
mov
xor
add
pop
or
aad
and
xchg
mov
dec
pop
jl
add
das
and
insl
js
dec
arpl
lock
inc
gs
cmc
add
aad
int
mov
js
add
aam
cmp
jbe
jbe
push
mov
aad
push
dec
imul
jno
mov
pop
sbb
popf
pop
out
dec
xor
pop
inc
mov
lea
pop
aam
push
pop
mov
test
jl
inc
push
add
lea
or
fisttpll
gs
popa
pop
xorl
xor
sbb
test
jno
sbb
arpl
mov
push
stc
loopne
pop
sbb
dec
push
fstl
and
xor
push
xor
fs
jmp
fisttpll
arpl
jae
and
xlat
adc
iret
adc
xor
roll
mov
mov
sub
cmp
loop
dec
xor
and
dec
cmp
lds
or
fs
sbbl
adc
ret
or
mov
mov
imul
popa
adc
test
icebp
push
in
pop
mov
adc
xor
insl
xor
push
pop
pop
stos
pop
fstl
stc
xor
push
out
dec
sbb
in
sbb
sbb
adc
lahf
mov
adc
adc
aas
mov
test
sti
mov
mov
or
loop
push
js
add
push
loop
aad
out
mov
mov
xor
or
push
push
stos
cltd
mov
jle
xor
mov
test
out
dec
repnz
popf
jae
mov
in
cmp
nop
mov
or
sbb
or
mov
adcb
mov
add
add
add
insl
push
test
ficompl
frstor
push
adc
inc
lret
scas
lea
sbb
test
incb
cmpl
xchg
daa
and
push
adc
dec
mov
adc
xlat
imul
add
xchg
fldenv
in
out
and
insl
xorb
and
jb
xchg
daa
ror
jne
xchg
fldl
rcl
je
mov
cmp
dec
inc
add
test
jns
pop
pop
stc
jne
lea
inc
out
lret
pop
or
jp
push
hlt
pop
jecxz
xchg
nop
mov
jge
rcl
push
fnsave
sbb
mov
mov
loop
iret
xchg
cmp
ss
mov
mov
pusha
pop
es
aas
not
lea
movsl
fmul
cltd
test
popa
shrl
sub
test
or
or
pop
mov
adcl
mov
or
popa
popf
add
aam
cmp
sub
popf
adc
aam
cmp
bound
hlt
popa
mov
stc
pop
fnsave
rol
and
out
aaa
jnp
out
lcall
aaa
jecxz
mov
dec
fs
jmp
inc
mov
mov
iret
cmpl
rcrl
add
loope
xor
insl
dec
dec
sub
push
stc
insl
inc
fstl
popf
jno
leave
cmpsl
rcll
shl
pop
cmc
mov
pushl
dec
out
cli
stc
dec
inc
je
mov
sub
sbbl
mov
mov
push
jecxz
mov
jnp
cmp
insb
sub
test
sub
mov
scas
mov
daa
xchg
lds
pop
cmp
mov
pop
xor
ja
jecxz
jbe
fldl
add
pop
jns
dec
lret
in
inc
jnp
movsb
xchg
add
and
fnstenv
insl
add
outsb
ss
je
ds
ljmp
rcrl
iret
imul
sub
out
cmp
cmp
das
vdivpd
mov
sti
add
pop
roll
das
push
add
cmp
xchg
outsb
push
push
xor
push
aad
pop
lret
cmc
xchg
repnz
jecxz
jb
mov
pop
int
and
xchg
aaa
jecxz
xor
push
push
jbe
push
xchg
jg
subl
aad
push
sti
jns
pop
bsf
insl
jo
xchg
jecxz
jle
xor
icebp
cmpsl
je
shrl
in
subl
xacquire
inc
bound
sbb
inc
jge
sbb
lea
xor
lea
xchg
pop
jge
and
scas
cld
mov
pop
jecxz
aam
xor
lea
pop
adc
stos
out
pop
std
shrl
xchg
jbe
xlat
mov
mov
pop
fnsave
mov
jl
lods
jge
sub
xor
xor
push
shl
lahf
xor
jno
leave
stc
fstpt
jle
jbe,pt
cmp
lret
mov
add
mov
aad
cmc
negl
mov
sub
std
pop
dec
mov
mov
ja
mov
mov
dec
mov
mov
mov
jo
xor
iret
popa
push
mov
jp
fisttpll
cs
push
cmpsb
xchg
iret
or
jne
test
or
inc
mov
pop
out
fs
jbe
inc
jecxz
pop
jae
jbe
data16
in
pop
stos
jmp
dec
mov
jle
or
lret
popa
or
jb
mov
es
jbe
lret
or
jb
xor
movsl
scas
dec
int
ss
in
mov
gs
je
lods
push
dec
pop
inc
outsl
adc
pop
push
xchg
fmull
out
mov
inc
push
test
and
adc
mov
jp
je
jecxz
jp
sub
les
out
out
mov
les
jnp
movsl
pusha
sarl
inc
mov
cmp
orl
jo
imul
jnp
out
aam
lahf
jmp
pop
xchg
roll
xchg
stos
add
mov
out
mov
popf
inc
jge
push
out
jle
and
mov
pushw
fstpl
xor
xlat
incb
fistpll
fnstcw
cmc
mov
addr16
lods
push
pop
mov
int
push
xchg
int3
and
jle
aas
enter
cld
out
addl
lods
lods
ret
jno
fcompl
mov
mov
fdivr
sub
cmp
cmp
cmp
adc
jle
adc
xchg
jne
movsl
jmp
jle
pop
adc
push
int
lea
push
inc
adc
rcll
push
sti
loop
dec
rorl
mov
aad
insl
mov
ret
cmp
fwait
sub
cmpsb
or
mov
sti
testb
popa
int
out
fisttps
cmp
fisttpll
aad
cmc
mov
mov
xchg
xor
jl
popa
ss
inc
outsb
or
jmp
pop
push
data16
movsl
mov
xchg
sti
cmp
sbb
faddl
cmc
rcr
negb
dec
std
adc
mov
in
sbb
orb
mov
pop
and
lcall
ss
jg
jp
lds
xchg
xchg
insl
movsl
push
fcomip
xchg
xchg
fcmovne
xchg
dec
add
aam
mov
scas
les
jb
test
jp
lock
insl
aaa
inc
mov
mov
inc
into
in
or
xchg
insl
inc
jb
add
xchg
push
dec
jbe
cmp
adc
inc
out
fnstsw
cs
and
movsl
add
outsb
pop
cmp
mov
or
push
inc
lods
or
outsb
in
cmp
into
xlat
and
or
xchg
fsts
inc
or
addl
outsb
lds
add
iret
fs
das
jle
jb
jmp
add
mov
in
paddusw
jns
stc
inc
fstl
mov
imul
push
mov
and
lea
pop
cmp
cltd
sbb
mov
icebp
lret
aaa
test
pop
push
sahf
sahf
pop
and
mov
xorb
cmc
ds
pop
pop
cmc
xchg
or
sbb
ss
xor
test
mov
leave
and
jb
inc
rcrl
push
jno
adc
fxam
cmc
subl
push
push
stos
jmp
es
test
test
idivb
fcmove
jg
jecxz
mov
ja
lahf
jl
test
push
pop
in
in
dec
pusha
sarl
dec
repnz
nop
xchg
sbb
fnstsw
push
mov
cmp
jg
int
lret
aam
add
mov
leave
sarl
adc
mov
jge
jbe
shl
inc
mov
push
int
inc
notl
push
push
cli
fistpll
xrelease
repnz
push
cmp
mov
lea
mov
aaa
mov
xor
adc
test
ds
leave
inc
ds
dec
into
adc
mov
imul
jecxz
add
fidivrs
iret
jne
mov
out
jmp
pop
mov
andl
mov
xchg
and
sar
jle
adc
inc
jmp
in
mov
push
fs
lea
outsl
rorl
cmp
aad
push
push
insb
pop
xchg
icebp
loope
out
scas
adc
pop
push
ucomiss
adc
xorps
add
icebp
setb
sub
std
stos
add
imul
adc
sub
mov
jns
cltd
das
insl
or
push
shrl
pop
iret
push
inc
mov
gs
test
xor
dec
mov
add
in
cs
fadds
add
sub
inc
mov
es
cmpsl
sbb
lea
inc
pop
sub
sbb
icebp
sarl
mov
xchg
and
fxch
sti
sbb
xor
aad
mov
pop
mov
cmc
mov
daa
xchg
negl
fucomi
std
fwait
shll
std
clc
repz
fnstenv
insl
or
inc
jecxz
icebp
mov
mov
inc
ret
jo
pop
mov
xorl
jle
ds
ds
gs
pushf
scas
leave
mov
dec
scas
ds
jbe
pop
push
sub
inc
add
pop
or
add
jae
pop
in
cmp
dec
fmul
je
mov
movsl
fnstenv
pop
jl
and
ds
add
adcb
mov
popa
out
mov
jno
lahf
xchg
in
jle
pop
inc
dec
dec
cltd
addr16
push
in
insl
in
push
in
roll
mov
inc
mov
cwtl
xor
lds
add
and
mov
fisttps
aas
push
cmp
dec
pop
push
sbb
sbb
pop
cmc
push
jge
mov
aad
lds
push
push
jnp
frstor
push
cmp
jecxz
xlat
dec
std
mov
lods
sub
pop
in
aad
mov
in
jge
xchg
mov
loop
add
pop
jnp
in
orb
push
insl
jp
xchg
aam
std
shrb
mov
push
lcall
or
ljmp
mov
lds
cld
je
rcrl
or
rorb
add
and
inc
std
jno
out
and
push
push
std
jbe
add
data16
pop
inc
mov
cmpsl
jb
out
mov
fisttpll
lea
ja
leave
lds
jnp
test
stos
mov
mov
push
pop
push
inc
gs
jnp
push
inc
out
ljmp
mov
mov
lock
sub
test
adcb
push
jae
sbbb
shl
push
inc
push
jo
fildl
pop
jb
popf
xor
push
jl
inc
xor
std
cmp
int
icebp
jle
and
xor
sbb
push
adc
pop
pop
inc
jns
add
into
push
xchg
inc
jae
mov
idiv
add
shlb
pop
enter
les
iret
mov
add
push
inc
gs
jp
jmp
xchg
cmp
mov
in
jnp
das
mov
xchg
aam
fnsave
cmpsl
in
jmp
sub
inc
nop
in
negb
pop
mov
cmp
pop
mov
int3
add
popf
jmp
icebp
out
pop
mov
mov
lahf
jne
mov
push
push
jnp
mov
push
inc
out
or
jmp
mov
jl
dec
jne
mov
fucomip
or
out
jle
jle
inc
xchg
test
aad
cs
push
notb
add
mov
ss
inc
jecxz
xor
into
test
xchg
adc
jmp
pop
or
dec
in
dec
jbe
aad
cmp
mov
in
jge
in
sbb
leave
pusha
and
mov
clc
push
sbb
jo
loope
nop
mov
mov
out
inc
ficoms
out
pop
sbb
xchg
mov
sbb
icebp
mov
inc
xchg
mov
mov
fistps
mov
inc
insl
xchg
in
out
xor
test
mov
dec
repnz
mov
lods
xor
imul
fimull
das
int
lods
mov
popa
je
mov
push
sub
push
xchg
fsts
jb
scas
xchg
out
dec
xor
shll
adc
adc
cmc
dec
ret
xchg
movb
pop
push
jge
adc
lea
mov
mov
inc
mov
or
loope
lea
in
pop
pop
test
and
push
ret
icebp
add
xchg
mov
imul
cmc
xor
dec
push
cmp
roll
cmp
movsl
lds
dec
inc
pop
mov
fst
jns
mov
mov
or
dec
fnsave
ficoml
sbb
cmp
cmpsb
in
or
cmpsb
outsb
and
mov
test
push
loop
std
xchg
xchg
jle
or
cs
mov
movsl
inc
mov
int
fildll
loopne
test
inc
cmpsb
dec
add
mov
xchg
push
addl
aaa
hlt
andb
in
pop
data16
cmp
xlat
mov
insl
adc
jne
or
fwait
xor
lods
mov
cltd
jns
inc
push
out
test
popa
inc
into
xor
push
in
ret
mov
scas
push
out
shrb
push
inc
sbb
cmp
dec
jb
in
inc
out
lret
adc
push
in
daa
or
int
scas
inc
adc
push
or
cs
mov
lret
inc
insl
out
test
ret
fnstsw
jne
fnsave
add
sarb
rcr
add
lret
jno
mov
xor
movsb
insl
mov
sub
xlat
mov
iret
cmp
popf
fnstcw
push
add
shlw
xchg
jmp
scas
mov
inc
xchg
pop
test
jnp
cmp
sub
mov
les
out
out
cmp
movsl
pop
jae
sbb
dec
fnstsw
add
jge
frstor
in
inc
cmp
adc
out
pop
icebp
jle
push
pop
pop
jle
addl
inc
fistpl
shrb
loope
dec
jmp
mov
in
jl
fstps
ficompl
int3
jmp
adc
adc
insl
push
push
stos
pop
cmp
adc
es
pop
les
out
movsb
mov
shll
pop
push
mov
xlat
pop
push
dec
mov
inc
jb
xor
int
pop
sub
ret
jnp
cltd
or
pop
cmp
push
jno
jge
sarl
cmp
xchg
xchg
jns
fld
mov
sbbl
jle
jg
adc
lods
inc
mov
or
sar
jns
pusha
add
addr16
xchg
dec
aas
pop
push
data16
adc
pushf
jns
push
fisttpl
daa
push
and
clc
cmpsb
in
outsl
inc
sbbb
outsl
test
push
out
and
jae
sbb
pop
mov
adc
xor
inc
hlt
xor
lods
out
mov
subb
mov
xchg
push
imul
and
xor
je
jb
add
cmp
imul
cmpsb
cmp
lret
andb
test
aaa
mov
add
dec
lea
insl
pop
jp
ja
cmp
push
mov
mov
call
or
fnstenv
adc
addr16
js
and
cltd
ficoms
or
ja
orl
pop
push
fs
jge
leave
bound
mov
xchg
ss
loopne
adc
mov
dec
addb
rclb
icebp
aam
insl
ja
gs
ss
or
data16
cmp
cmp
in
gs
movsl
push
stc
repnz
mov
push
pop
das
pop
add
jno
bound
add
inc
cmpsb
add
inc
or
xchg
add
mov
push
dec
and
jnp
pop
stos
jns
imul
sub
jo
movsl
test
test
repnz
mov
addr16
mov
dec
mov
jno
xchg
repz
adc
lds
les
push
nop
adc
xchg
data16
outsl
mov
push
adc
xor
and
adc
or
outsb
jge
icebp
cmp
pop
inc
cltd
xor
xchg
and
sti
jge
add
idiv
xchg
insl
mov
fmulp
insb
sub
xchg
jmp
cld
lds
adc
lods
outsb
add
icebp
test
les
cmpl
jp
sahf
pop
icebp
jle
cltd
aad
xchg
loope
cmp
dec
cmpsb
mov
xchg
in
mov
jmp
adc
dec
ss
je
dec
xchg
inc
lock
cmc
inc
dec
addr16
into
jl
mov
lds
andl
scas
popa
in
xor
and
jnp
inc
mov
mull
xor
jp
int3
incl
gs
data16
mov
xor
adc
cmc
inc
lea
push
inc
mov
xchg
daa
aad
ss
shrl
jbe
js
out
fwait
jle
sbb
or
outsl
push
sti
cmp
mov
jge
inc
test
leave
clc
movsl
aas
adc
orl
data16
xchg
lea
cmp
xlat
fwait
aad
clc
add
in
jge
into
pop
dec
jnp
orl
jge
cmp
mov
jbe
out
push
paddw
adc
dec
scas
xchg
idivb
push
ljmp
icebp
gs
or
cmp
aad
push
xor
sub
inc
sahf
push
jl
xchg
inc
movsl
out
gs
orl
and
sub
popa
add
popf
pop
jmp
insl
pop
jecxz
add
jo
ljmp
add
lds
jae
xorb
mov
mov
mov
dec
xchg
pop
loopne
push
xor
xchg
or
subl
dec
inc
imul
ja
pusha
jns
sbb
negl
jns
jno
pusha
push
leave
imul
push
dec
out
adc
or
xchg
push
loopne
test
leave
mov
addl
push
icebp
cs
jbe
adc
adc
xchg
or
mov
mov
jge
ja
dec
dec
sarb
adc
xchg
out
xchg
imull
jg
mov
jne
dec
jle
enter
in
aaa
cmp
icebp
insb
mov
and
ja
ljmp
pop
dec
es
mov
enter
or
in
push
pop
lret
inc
clc
sbb
ss
bound
stc
mov
jne
dec
jl
inc
lret
xor
xchg
fsubl
arpl
sbb
hlt
mov
cld
add
and
mov
inc
jg
jl
pop
sbbl
in
ss
pop
es
mov
fmuls
out
sbb
insb
in
jle
mov
loop
jne
cwtl
jge
out
in
pushf
shlb
test
loope
xchg
or
jbe
mov
xor
lock
daa
push
loope
sbb
push
jg
xchg
iret
push
inc
ja
xor
xor
das
lock
mov
cmc
aas
push
negb
incb
sub
lods
push
mov
and
fwait
jb
cwtl
mov
lret
mov
sbb
dec
ret
cld
mov
dec
push
add
pop
cltd
cmp
ret
ss
pushf
idivb
xlat
push
jno
pop
xchg
jbe
xor
ds
stos
jne
push
mov
add
mulb
imul
shlb
sarl
adc
xchg
cmp
jne
or
jne
movsl
sbb
adc
pushf
mov
outsb
pop
out
dec
bsf
and
fcompl
mov
test
movsb
sti
adc
ja
subl
negb
mov
and
xchg
and
std
out
inc
rolb
pop
mov
insb
sbb
sub
inc
addr16
jne
add
jl
sub
xor
out
movsb
jne
fmull
inc
and
in
xrelease
cld
adc
xor
xor
out
mov
test
in
je
popa
mov
loope
jno
jp
and
mov
sbbb
jecxz
sub
cmc
notb
mov
push
mov
pop
movsb
xor
out
test
add
xchg
lcall
fsubp
add
aam
xor
or
mov
mov
sahf
pop
dec
maskmovq
idivl
push
and
jbe
jge
test
outsl
cmp
lret
adc
sbb
loop
outsl
jno
cmpsb
ljmp
imul
outsl
and
cwtl
adc
sbb
arpl
jno
fstpl
sbb
xchg
jge
add
sbb
pop
pop
push
add
pop
into
pop
dec
shll
pop
hlt
sub
xor
call
adc
inc
add
or
std
sbb
sub
cmp
data16
mov
arpl
xrelease
push
pop
test
imul
mov
and
mull
hlt
dec
xor
aam
and
adc
ja
pop
lds
shr
mov
movq
jno
jns
add
lods
mov
dec
inc
adc
jno
jns
sub
insl
sbb
dec
outsl
sbb
shlb
jae
add
repnz
in
or
jns
jnp
js
or
sub
dec
cli
outsl
xor
cmp
lret
mov
movsl
lret
mov
das
stos
sbb
outsl
pop
stc
jae
inc
stc
cltd
lds
push
aaa
dec
jle
xor
mov
call
inc
lds
add
sub
outsb
jae
mov
add
lock
mull
fcomps
pusha
push
and
rclb
jge
push
xchg
jg
gs
cmp
dec
lea
outsl
sub
inc
sbb
mov
das
xchg
jge
xchg
test
mov
fisubl
dec
pop
outsl
xchg
and
cmpl
test
sbb
lock
sahf
jmp
clc
and
cmpsb
sbb
sub
adc
mov
adc
sub
pop
mov
jmp
cs
rolb
push
ss
cmp
out
push
mov
arpl
push
mov
inc
mov
stos
mov
loop
xchg
test
jg
rcrl
xor
cmc
jno
leave
jge
adc
lock
xor
add
cmp
fldenv
push
test
push
pop
addr16
pop
stc
jge
imul
push
push
or
xchg
xor
ljmp
outsl
push
dec
movsb
jge
jno
sbb
xchg
add
jg
sbb
jno
jp
subb
ja
jno
dec
jno
cmpsb
xchg
push
fildll
xchg
repz
xchg
fwait
cmp
sbb
imul
das
icebp
and
stc
jae
test
push
cs
jb
cmp
jge
adc
push
xor
adc
pusha
ret
xchg
sbb
add
mov
pop
dec
xorl
jbe
ja
jnp
cmp
arpl
jbe
jecxz
sbbl
pop
push
stos
jae
mov
add
sbb
clc
push
cmc
out
and
cmp
dec
push
jge
outsl
push
dec
aaa
jle
xlat
adc
and
mov
jecxz
jae
cmp
xchg
mov
in
sbb
xor
outsl
pop
imul
enter
xchg
push
jmp
dec
das
mov
and
shll
gs
imull
dec
ljmp
cmp
xchg
das
ds
xor
mul
movsl
mov
mov
add
xchg
jecxz
stos
sbb
or
arpl
inc
sbb
cmp
dec
jno
lcall
inc
sub
dec
and
mov
ja
push
push
das
outsb
addr16
sub
ret
add
out
mov
sbb
xor
add
or
and
xor
jle
jno
xor
outsb
das
icebp
jae,pt
xor
push
sub
das
addr16
test
out
or
sbb
sub
arpl
insb
xor
xchg
adc
ja
enter
or
test
sub
jnp
jmp
mov
cmp
fistpl
sti
mov
das
dec
xchg
mov
inc
xor
or
adc
sbb
mov
mov
xchg
adc
movb
or
pop
aas
xor
pop
pop
mov
inc
test
mov
cmp
frstor
std
mov
les
mov
cmp
pop
mov
fnsave
lea
mov
xor
cmp
cwtl
test
shl
jnp
aad
movsl
and
sbb
not
movsb
mov
lea
or
sbb
bound
xchg
xchg
jnp
stos
pop
xor
mov
test
jg
je
test
aaa
stos
stc
jns
push
push
dec
ja
dec
ja
cmp
dec
std
jge
and
outsl
dec
imul
and
cmpl
push
jno
lret
xchg
push
fcomp
sbb
clc
inc
sbb
test
das
movsl
mov
jnp
fstpl
mov
cmp
xor
add
sbb
cmp
arpl
test
pop
adcl
push
test
jle
outsl
sbb
insb
dec
cmpsl
inc
jns
ljmp
movb
ja
icebp
adc
aas
test
xchg
insl
pop
popf
ds
push
inc
add
xchg
cmp
daa
mov
or
outsl
xchg
sub
dec
xchg
jl
jmp
andb
mov
mov
iret
imul
sub
insb
or
movsl
fstl
inc
movsb
mov
inc
jecxz
shlb
push
dec
dec
jecxz
addr16
faddl
test
jno
mov
or
mov
mov
mov
cs
ds
stos
std
ja
enter
shlb
loope,pt
xor
aas
xor
js
outsl
stos
in
jg
pop
arpl
sahf
dec
adc
jno
pop
mov
pop
jle
push
or
sahf
out
loope
lret
das
rcrb
dec
pop
xchg
mov
out
sbb
int
test
dec
mov
lea
outsl
data16
jno
insl
shlb
jmp
jbe
out
imul
jg
push
mov
push
insb
lahf
mov
jmp
add
repz
int
fists
mov
adc
sbb
cmp
bound
pop
loopne
std
lods
cmp
add
jnp
jns
clc
fs
pop
lahf
cmp
or
leave
test
xchg
imul
test
mov
jno
xor
mov
imul
xchg
in
or
mov
xchg
pushf
push
sbb
addb
xchg
rclb
cmpsl
test
insl
movsl
sbb
pop
mov
adc
push
test
dec
jae
push
add
add
jae
int
jnp
loopne
decb
outsw
jge
jnp
mov
xorl
mov
mov
push
lret
pop
in
pop
mov
hlt
jno
xchg
nop
or
push
lods
repz
jae
adc
jge
movsl
pop
pop
mov
mov
push
test
inc
cmpsl
outsl
mov
jno
ret
ss
mov
inc
lods
jnp
jae
xchg
mov
ja
cmp
out
sbb
test
sbb
daa
daa
push
jne
xor
repz
shll
ja
xchg
pop
adc
xor
das
icebp
adc
pop
shll
xchg
cmp
pop
mov
popa
cmp
aaa
inc
inc
jne
sbb
and
jne
std
sti
stc
testl
in
loope
mov
mov
fwait
cltd
jne
movsl
mov
jp
js
test
jne
pop
bound
xor
jne
cmp
inc
inc
inc
adc
jne
sbb
sbb
and
bnd
cld
cli
clc
push
add
jne
rcr
fsub
in
loop
mov
mov
mov
xchg
xchg
nop
sahf
pushf
jnp
cwtl
cmpsb
movsb
mov
mov
loop
sub
sti
push
jge
insl
fcomp
ja
fs
xchg
out
xor
std
fdivrs
push
repz
xchg
dec
xor
pop
shl
loop
fadds
xchg
pop
inc
aam
jnp
sbb
loopne
loop
in
jb
in
xor
out
jb
inc
sub
and
loopne
pop
cli
and
arpl
jne
cld
dec
sbb
push
sbb
es
fidivrl
inc
sub
pop
inc
loop
outsl
pop
leave
xor
mov
sub
stos
jne
push
and
lcall
testl
aas
cmp
sub
sbb
ja
xchg
lret
cmp
xor
mov
repz
push
adc
les
imul
pop
cmc
mov
xchg
lcall
jbe
ljmp
mov
mov
leave
cmp
shlb
mov
cmp
add
popw
xor
jne
insl
jmp
dec
daa
sbb
xchg
push
jle
xor
scas
rcrb
mov
jp
out
inc
lock
add
xchg
cli
inc
mov
in
pushl
outsb
and
and
sbb
mov
lds
aaa
cmpsb
xchg
mov
dec
flds
hlt
ss
and
jmp
lods
and
sub
adc
dec
mov
testb
jecxz
jne
in
sahf
test
test
ficompl
ss
mov
je
repnz
sarb
xor
lahf
idivb
jne
mov
adc
jp
push
mov
outsl
testl
movsl
int
outsl
imul
icebp
jne
fisttps
jne
sub
scas
cli
jne
xor
dec
inc
pop
imul
jne
shrb
cmp
mov
xor
pop
jne
shlb
loopne
mov
mov
xor
sbb
adc
out
imul
mov
outsb
jns
jne
inc
cmc
sbb
test
mov
pop
jmp
inc
or
jmp
xchg
pushf
stos
mov
aam
inc
push
mov
jne
cmp
push
adc
sub
enter
fwait
scas
jae
pop
shlb
and
movsl
xlat
hlt
push
and
pop
pop
fisubrl
xchg
scas
jne
in
pop
gs
push
jne
inc
pop
mov
jne
push
mov
cmpsl
cltd
cli
jge
dec
or
movsl
lret
mov
pop
mov
push
cmc
insb
mov
jne
cltd
addr16
xchg
xor
lahf
insb
and
xor
pop
pop
loop
cli
aad
cmc
out
add
jne
test
outsl
mov
in
shl
loope
dec
cmpsl
sub
outsl
ret
dec
lret
into
es
pop
outsl
mov
and
js
loope
xchg
mov
lds
sub
jbe
sub
loope
out
ret
daa
imul
ja
cmpsb
jmp
inc
ss
lds
sub
cmp
dec
fucomip
jne
mov
ja
add
jne
mov
push
jne
adc
mov
dec
testl
inc
dec
ja
data16
push
dec
pushf
add
dec
popf
pusha
data16
adc
in
insl
mov
into
data16
push
scas
inc
inc
push
fists
ja
cmpsb
mov
ss
lock
jle
mulb
imul
pushl
xlat
mov
cmpsl
dec
dec
dec
jne
cmp
mov
jne
mov
mov
jne
into
movsb
xchg
js
popa
push
cmp
jg
mov
out
stos
xorl
xchg
ja
les
cmp
adc
or
jne
adc
repnz
loop
jge,pt
adc
fidivs
mov
loopne
mov
jne
push
cmpsb
ss
fwait
mov
cmc
and
fisubl
aam
out
hlt
clc
pop
idivb
test
jae
pusha
mov
jbe
cmpsl
out
adc
lods
in
in
sbb
adc
in
loopne
push
out
jne
enter
pop
insl
cld
xchg
push
jne
out
int
inc
push
shll
inc
and
outsb
das
or
clc
rcrb
mov
xchg
cld
pop
dec
jo
aaa
jne
or
in
divl
mov
mov
jne
test
sub
mov
adc
hlt
xor
fistpll
jne
jns
mov
fsubrs
arpl
lcall
sub
ja
je
lret
jne
cmp
jl
mov
clc
insl
dec
push
aad
arpl
bound
adc
cmp
pop
jne
stos
jo
mov
mov
dec
cmpsb
push
repnz
dec
sub
sbb
js
jbe
cmp
inc
xor
mov
cmp
push
adc
push
out
mov
idivl
mov
decb
test
call
jne
lret
pop
mov
mov
shl
stos
andl
mov
push
push
cmc
mov
lds
popa
adc
pop
mov
jg
subb
decb
or
je
mov
xchg
pop
movsb
cmc
mov
lcall
xlat
insb
int3
jne
addr16
popa
jnp
sub
push
cmpsb
out
mov
sbb
fdiv
sahf
loopne
cmpsb
jb
in
push
jne
sbb
dec
rcrl
dec
call
sub
subl
xchg
es
or
mov
scas
jnp
jae
inc
lds
pop
mov
loop
jne
fstl
jne
dec
mov
jne
dec
lret
sbb
out
jecxz
xchg
fiaddl
dec
hlt
jne
mov
mov
jne
out
and
sub
cwtl
and
jecxz
push
cmpsl
iret
in
cmp
fiaddl
loope
jno
or
add
xchg
push
push
testl
xchg
ja
cmp
jnp
stos
idivb
push
mov
lods
shll
scas
inc
adcb
loop
dec
outsl
push
sbb
xchg
jb
push
addr16
push
lods
jne
repnz
dec
mov
cmpsb
out
jg
mov
ja
aas
dec
out
push
dec
cld
mov
pusha
inc
in
in
jne
push
pop
pop
jne
sti
xor
mov
mov
mov
stc
add
push
outsb
push
ficoms
pop
daa
mov
movsb
dec
sbb
jbe
addr16
sub
pushf
jne
fcmove
jmp
into
push
dec
nop
mov
insl
insb
inc
jne
add
insb
xchg
data16
adc
movsb
int
dec
enter
adc
sbb
push
ret
loope
dec
sbbl
push
xchg
testl
std
dec
ss
jbe
fisttpl
ja
sbb
jnp
jne
xchg
mov
adc
sbb
ljmp
icebp
push
aas
ret
fwait
jne
loopne
sbb
push
loop
enter
fs
jno
mov
dec
xor
loope
cmp
jne,pt
ret
in
in
jne
out
xor
adc
aam
jne
call
inc
and
jmp
cmc
leave
sti
test
sbbl
cmpl
xor
jge
pop
test
inc
mov
pusha
jb
or
jno
cltd
cmpsb
push
add
or
js
movsl
jae
addl
mov
repnz
popa
jno
push
ja
aam
shlb
imul
inc
lea
adc
hlt
jbe
cmp
sbb
into
sub
je
xchg
cmp
or
mov
fidivrl
stos
test
push
jo
push
push
daa
fbstp
jae
stc
call
ficoml
insl
jge
outsl
lcall
xchg
xchg
and
rcr
xchg
out
xchg
lods
test
movsb
sbbl
xor
ja
iret
lods
test
xchg
shrl
stc
ja
xor
fnstenv
mov
test
lret
das
aad
jnp
mov
jecxz
mov
xor
ja
cmp
sarl
cmpl
das
or
push
ret
mov
jns
dec
daa
dec
stc
stc
jg
xor
inc
outsl
mov
sub
push
lea
sub
lea
jle
push
jge
sub
test
std
mov
mov
and
mov
push
push
and
mov
jle
mov
push
and
das
std
adc
pop
stc
xchg
xor
add
sbb
sbb
sbb
icebp
adc
add
jle
adcl
xorl
add
addr16
jnp
out
mov
or
dec
or
mov
cmp
lock
dec
ja
imul
pop
jl
pop
aaa
dec
push
push
or
pop
or
push
jecxz
insl
negl
or
pop
xor
jge
add
push
cmpsb
push
jle
in
jecxz
add
adc
loope
xor
arpl
xchg
popa
xor
popa
push
jbe
jp
stc
xchg
icebp
pop
vpavgw
mov
push
push
insl
jle
test
std
insl
out
imul
out
js
imul
adcl
addr16
in
cmp
repz
xor
jbe
add
enter
and
xor
jno
xor
pushf
pop
jno
ja
mov
bnd
jae
scas
jns
jge
or
ja
aaa
xchg
xor
inc
jnp
pop
jo
andl
sub
push
test
inc
push
push
nop
xchg
sub
fidivrl
ret
pop
jbe
and
test
inc
add
push
lea
test
aam
cmp
ret
cmp
jno
icebp
fs
addr16
imul
cmpsb
or
mov
mov
cmp
icebp
cmp
out
cmp
and
les
dec
and
stc
movsl
idivl
inc
xor
fists
pop
mov
jg
or
adc
or
sbb
adc
imul
out
mov
insl
movsb
jae
test
lcall
hlt
test
xor
push
and
push
test
lret
xchg
sbb
add
xor
std
mov
andl
cmp
je
or
mov
fisubl
add
push
inc
xchg
xchg
das
adc
insl
rorl
lea
out
aas
xchg
inc
xor
dec
xchg
sbb
or
cmc
je
les
pop
dec
idivl
and
adc
std
push
dec
inc
jp
pop
das
addl
inc
popf
fs
sahf
call
xchg
add
mov
xor
jns
shll
dec
adc
lds
jno
inc
lock
insb
mov
push
xor
andl
xor
push
and
mov
jne
jns
ja
or
xchg
pop
sbbl
sub
mov
jp
jecxz
push
jg
dec
inc
jbe,pt
mov
jg
pop
cwtl
sbb
jle
add
xlat
ljmp
lcall
pop
pop
jnp
test
addr16
xor
xor
add
inc
xchg
lods
pop
dec
jne
cmpsb
pushf
mov
mov
sub
scas
cmp
jle
jne
insb
cmp
dec
xchg
jne
mov
and
clc
jae
push
push
jmp
lcall
mov
xchg
cmpsl
jecxz
popf
cmp
push
sbb
jne
std
testl
addb
jne
mov
nop
dec
xor
xchg
or
addr16
mov
ret
pop
lods
outsb
jne
cmp
out
jns
dec
sub
dec
jl
sbb
mov
ja
pop
jns
push
mov
jge
outsl
in
sub
mov
xor
adc
mov
cmpsb
js
xor
clc
ret
mov
test
aad
lcall
sbb
xchg
std
inc
xchg
int
rclb
sub
jne
jecxz
pop
push
pop
mov
je
scas
popa
lods
bound
push
inc
enter
pop
jne
jmp
popf
or
pop
roll
rcr
test
sub
add
xor
out
xchg
jg
mov
loope
gs
mov
into
fdivl
sub
loopne
jb
int3
dec
cs
mov
popf
cmp
loope
lret
jne
or
cmp
test
sub
cmp
jne
and
loop
js
ffree
sbb
push
lods
inc
xchg
or
jne
inc
jns
shlb
je
testl
fistps
int3
insl
ds
dec
jne
fmull
lea
in
inc
hlt
mov
shrb
pusha
das
jae
test
sbb
push
stos
xlat
shll
rorb
mov
push
int3
ja
mov
pop
cmc
add
lods
adc
inc
jecxz
jae
lret
inc
xlat
sub
jl
lret
cmpl
jne
hlt
adc
inc
into
inc
jae
cwtl
add
adc
pop
mov
jmp
add
xor
add
push
lahf
das
jae
test
cmpsb
lds
in
add
xor
adc
xor
jns
add
and
loop
adc
std
xorl
mov
ja
mov
sahf
jns
ja
pop
mov
adc
xor
jae
test
fstpt
adc
jmp
xchg
sub
cmp
lahf
sub
cmpb
and
jle
repnz
repnz
or
lea
or
jbe
lods
repnz
xchg
sub
outsl
movb
adc
push
es
push
sub
push
xlat
cld
sbb
stos
ret
test
mov
jle
jnp
pop
pop
jle
mov
aas
jnp
andb
shll
dec
scas
lahf
jle
mov
or
pop
xchg
add
das
rorl
aaa
and
imul
jns
inc
cmpsb
cmp
jno
jg
outsl
and
mov
out
js
push
xor
mov
shr
cmp
mov
adc
push
jge
out
rclb
inc
jle
repnz
inc
fcoms
jnp
sbbl
ja
aaa
and
js
adc
sbb
daa
lahf
xor
and
test
ret
out
and
arpl
ja
inc
xchg
xor
push
das
mov
pop
mov
cmp
test
dec
add
mov
xchg
test
outsl
jle
push
mov
ds
pop
call
cmp
jp
out
mov
stc
push
xor
popa
jmp
test
lods
fsubp
movsb
add
adc
fsubs
mov
pop
xor
fdivrl
jns
orl
push
push
mov
sahf
or
and
adc
inc
or
cmp
xchg
jecxz
push
dec
mov
call
push
mov
cmp
xor
push
add
sbb
shlb
aas
cli
add
sub
out
pop
cli
inc
rcll
push
adc
mov
mov
adc
fidivs
push
adc
xchg
push
stc
mov
xor
xor
push
fisttpll
and
loope
push
cs
in
mov
push
pop
xchg
pop
xor
push
fsubrs
in
xor
pop
lods
jge
adc
movsl
icebp
jbe
pop
ret
jns
out
jb
dec
jle
arpl
add
jbe
pop
jg
push
into
cmp
xchg
leave
push
xchg
pop
jae
das
xchg
push
ljmp
fnstcw
pop
mov
shlb
cs
pop
mov
add
mov
in
pop
jb
ds
ss
push
out
sbb
leave
push
sub
push
mov
std
push
mov
dec
stos
sbbb
push
jmp
pop
or
dec
fisttps
lds
ss
mov
push
cmp
sbb
jnp
dec
fisubs
pushl
shll
sarl
push
adc
rcrl
aaa
insb
mov
or
ret
mov
inc
mov
lock
or
std
mov
pop
arpl
repnz
fisubrs
ja
mov
cmp
mov
andb
sti
out
cmp
jle
jle
push
mov
insl
idiv
aam
lods
push
sbb
xchg
sahf
mov
sbb
or
jnp
ljmp
push
mov
add
stc
test
add
sbb
push
clc
push
cmp
hlt
aam
xor
and
pop
xor
das
push
mov
or
dec
repz
fiaddl
shrb
int3
mov
sbb
push
cmpsb
fiaddl
inc
sub
decb
lock
shl
push
inc
or
sqrtps
aaa
dec
sbbb
notl
test
cmp
cmp
xchg
arpl
mov
cmp
fidivrl
js
cmp
adc
int3
jbe
adc
adc
fadds
scas
jns
lds
popf
push
sarl
push
scas
loop
sub
jmp
loop
popf
pop
sarl
and
xchg
add
or
dec
xor
xor
repnz
or
and
inc
ds
aaa
lahf
out
ret
in
mov
xorl
jns
negl
faddl
xor
push
stc
inc
pusha
lds
jnp
add
sti
aaa
ja
jl
cmpsb
mov
icebp
jecxz
sub
xor
fists
out
lds
sti
pop
repnz
jns
pop
iret
pop
inc
mov
mov
addr16
xor
mov
jns
pop
pop
mov
jecxz
shlb
jecxz
inc
add
data16
jnp
enter
int3
mov
mov
mov
ljmp
fs
loop
adc
adc
mov
adc
insl
ja
cld
jmp
test
xchg
push
dec
sub
cmp
xchg
pop
mov
mov
adc
ja
add
in
add
add
mov
inc
adc
inc
sbb
mov
aaa
test
test
sbbl
popa
fldcw
cmp
jg
test
push
rcrl
test
cmp
push
mov
test
test
xor
sub
push
fsubrs
mov
push
test
out
and
test
scas
out
outsl
xor
mov
mov
mov
stos
pop
pop
pop
lock
pop
vpavgw
mov
pop
push
aas
adc
sbb
adc
pop
mov
out
aad
cmpsl
std
test
outsl
and
pop
repnz
adcl
jle
pop
test
fldt
xor
push
jecxz
ss
push
xlat
push
sbb
jge
sub
test
std
dec
pop
insb
inc
movl
loope
inc
stos
jle
push
lds
fmuls
xor
out
xor
aas
or
aaa
push
jecxz
cld
cmp
ret
hlt
or
cmpsb
jno
jae
sub
loope
dec
lahf
aas
push
cmpsl
test
fildll
outsb
push
cs
outsl
pop
mov
sub
and
outsb
jmp
pop
pop
mov
adc
sbb
pop
test
adc
jge
test
push
sbb
xor
je
sub
mov
xor
mov
xor
fsubrs
sub
in
fdivrs
rcll
pop
sub
in
fmuls
js
cmp
fmull
cmc
dec
aam
dec
loop
jb
scas
in
fdivrs
adc
jg
jno
stos
jnp
fldcw
cmpsl
cmp
pop
pop
cmpsl
shll
push
jge
cltd
jp
mov
push
sti
pop
jb
or
adcl
add
pop
adcl
push
add
cmp
mov
push
mov
inc
sub
cmp
test
mov
xor
xor
js
mov
adc
jecxz
cmpl
adc
cmp
push
push
pop
push
cld
test
sub
dec
push
lret
jno
xor
ss
out
jnp
mov
or
xor
addl
popf
or
jle
in
stos
das
ja
push
xchg
rcrl
test
adc
cld
cmp
iret
pop
or
mov
imul
jb
test
adc
fs
mov
mov
fnstcw
icebp
mov
pop
push
adc
push
cwtl
test
push
and
or
xchg
nop
nop
xchg
insb
push
test
sub
xchg
push
std
jnp
int3
pusha
cmp
mov
pusha
add
add
sbb
inc
sti
xchg
xorl
push
in
push
cmpl
sub
mov
inc
and
pop
cmpsl
xor
ret
jne
inc
cmp
rorb
jne
pop
adc
and
add
mov
inc
adcb
ds
lds
lods
insb
aaa
dec
pop
test
xchg
out
mov
outsl
cmp
push
mov
and
lods
divl
sub
mov
dec
fwait
jne
xor
pop
sbb
dec
xor
mov
jne,pt
add
mov
lock
mov
pusha
mov
and
dec
sbb
fldenv
adc
or
xchg
notb
mov
out
pop
push
mov
mov
lcall
lea
jmp
out
movsl
pop
cmc
loop
mov
flds
rclb
mov
add
jne
add
std
mov
push
jp,pn
or
push
xchg
sbb
push
mov
sbb
sub
pop
or
jo
jl
mov
mov
xor
std
addl
inc
mov
xchg
sbb
inc
outsl
add
das
jne
pop
insl
or
or
jne
popa
movsl
jo
xchg
outsl
pop
jl
int3
loope
sbb
inc
adc
jne
cmp
adc
ljmp
add
imul
stos
jne
push
mov
pop
jmp
push
popf
xchg
and
hlt
xchg
inc
pop
or
pusha
push
dec
dec
into
sbb
icebp
pop
mov
fs
mov
pusha
shlb
out
dec
inc
push
scas
ja
fwait
xchg
jo
adc
lret
out
mov
or
movl
sub
cmpsl
mov
fs
sub
movsb
mov
outsl
push
mov
daa
cld
call
push
fcomps
enter
stc
addr16
jmp
loopne
cmovo
in
in
add
ficompl
xor
jo
jb
cmp
sub
stos
inc
scas
subl
mov
fdivs
jp
add
popa
addr16
mov
ljmp
push
aaa
repz
add
dec
dec
mov
jne
sbb
in
xchg
cmp
fsubr
stos
and
xchg
addr16
inc
sbb
je
sub
mov
xchg
jl
lret
push
jne
popa
int3
inc
icebp
dec
jecxz
sub
push
xchg
add
or
mov
imul
sub
dec
push
testl
or
mov
idiv
or
pusha
sbb
dec
notb
lds
dec
cmpsb
inc
cld
bound
pop
mov
sub
jne
outsl
repnz
test
inc
cmp
xorb
cwtl
push
pushf
adc
pop
mov
xchg
jne
dec
mov
sbb
js
out
sub
hlt
cli
lahf
jne
aas
mov
bound
and
jo
cmpsb
pusha
jne
or
dec
int3
adc
jne
or
cld
jae
push
jp
inc
bound
sahf
scas
mov
jle
sub
sbb
div
cmp
mov
push
mov
rclb
dec
inc
insl
dec
fwait
arpl
je
sti
mov
lock
xorb
fildll
lock
xchg
jne
cmp
rcr
popf
ret
pushf
daa
jmp
scas
jne
xlat
dec
ret
or
fnsave
push
sbb
and
pop
fildl
xor
sub
xor
repnz
xchg
bound
cmp
mov
fwait
or
int
loope
xchg
jge
cwtl
test
push
filds
outsl
fisttps
je
jnp
mov
mov
cmp
sub
cmpsb
xor
mov
dec
xor
mov
mov
cli
call
mov
mov
jg
mov
pop
test
es
mov
sahf
jge
adcl
sbb
fistps
mov
lcall
pusha
ret
or
bound
jmp
mov
mov
lds
push
icebp
xchg
lahf
pop
lea
movsb
lahf
insl
dec
xchg
gs
push
ja,pn
add
stos
sub
lcall
fmuls
lods
xchg
xor
sub
repz
jns
stos
pop
sub
lock
lods
mov
dec
adc
test
sub
push
mov
enter
jnp
repz
lahf
outsb
in
jle
jle
stos
fs
and
jge
int3
mov
fidivrl
imul
mov
push
mov
sti
imul
pusha
mov
push
outsl
adc
pop
mov
js
mov
popa
enter
sub
insb
xchg
call
mov
xchg
xlat
iret
mov
xchg
and
bnd
test
and
imul
mov
lahf
inc
call
dec
push
mov
push
jns
jg
xor
jmp
push
jmp
push
cmp
lret
jp
or
xchg
sub
les
sub
xchg
int3
push
outsl
imul
xchg
mov
inc
sbb
dec
leave
mov
xchg
packssdw
sub
notl
int3
shrb
push
std
jo
pcmpeqb
arpl
jbe
lret
rcrl
xchg
out
pop
rclb
out
adc
sub
push
sarb
xchg
imul
adc
lahf
dec
int
les
scas
cmpl
and
outsb
inc
movzbl
dec
sub
inc
cwtl
xor
adc
and
imul
push
mov
adcl
ret
mov
int
mov
pop
cmpsb
jecxz
fcomip
xchg
cmp
sbb
pop
add
jge
jp
jge
dec
stos
mov
lret
cmpl
and
sub
push
and
jno
int3
push
sbb
stos
aad
das
int3
xor
push
add
jb
test
lods
negl
dec
mov
adc
test
ljmp
mov
cmp
xchg
xor
pop
in
sbb
notb
mov
cli
les
mov
je
push
cwtl
decb
popa
scas
jne
fmul
sbb
sub
mov
lock
push
add
ret
movsl
andb
adc
inc
bound
jg
das
and
jne
mov
psubq
cmpsl
subb
sbb
jne
xlat
test
popa
xchg
lods
jne
and
les
jmp
inc
pop
ds
jmp
mov
out
scas
mov
mov
lea
mov
xorb
jne
or
lods
push
lock
bound
and
insb
aad
cmp
push
cmc
lahf
js
inc
mov
add
aam
jne
out
loopne
xlat
cld
jne
pop
loop
mov
cmpsl
dec
jne
xchg
in
js
ljmp
stos
out
add
sbb
dec
popf
andb
jne
clc
add
into
fstps
loopne
mov
fisubrl
mov
inc
lret
scas
addr16
cmpsb
mov
jbe
pop
imul
adc
inc
inc
push
cmpsb
mov
xchg
and
mov
mov
add
jne
ds
push
out
jbe
pop
sti
mov
mov
sub
pop
jmp
jns
xor
sub
rolb
shll
in
stos
mov
cmpb
add
jne
and
imul
sbb
sub
xchg
dec
lcall
sbb
jno
daa
jle
dec
pcmpeqw
adc
js
lahf
cs
ja
dec
cld
pop
jle
scas
pop
adc
push
jne
mov
rclb
jbe
xchg
fidivl
addr16
dec
aam
cmp
jne
mov
sub
jne
cmpsl
push
shlb
ss
jb
lret
cltd
lret
ja
stc
fcoml
mov
test
lret
fsubrp
cmpsl
and
jbe
in
xor
lock
aam
int
pop
movsl
clc
mul
jmp
xchg
pop
bound
test
jne
mov
push
jne
stc
push
andb
scas
fsubp
ljmp
notl
jne
popf
or
hlt
sahf
mov
cmpsb
ret
sti
xchg
mov
or
sub
rcr
mov
mov
ret
pop
push
jne
or
mov
popf
jne
sbb
stos
add
xchg
daa
adc
inc
or
outsl
divl
and
xchg
cmp
pop
push
loop
or
in
dec
cli
enter
cmp
mov
add
push
stc
adc
push
inc
shlb
push
and
lock
sbb
xlat
mov
test
ja
loopne
push
pop
xchg
in
mov
mov
adc
es
cli
stos
loope
popf
sbb
scas
and
jne
jns
mov
out
sbb
mov
add
xchg
clc
imul
cmc
mov
outsl
rclw
insl
add
rcr
lea
xor
mov
push
sbb
lea
mov
add
fwait
movsb
dec
hlt
and
jne
testl
adc
add
stos
idivb
add
divb
ja
jbe
lods
or
daa
loopne
shrl
dec
imul
jl
cmpsb
jne
or
lods
and
ja
lret
fwait
ret
mov
add
inc
pop
int
hlt
je
ja
push
sub
push
test
mov
lcall
push
lods
and
xor
ret
ror
outsl
js
mov
mov
jne
fisttpl
outsl
push
pop
mov
popa
test
jae
push
popf
sub
icebp
and
aas
mov
js
xor
jne
rorb
mov
pop
aas
mov
mov
mov
mov
outsb
negb
xchg
outsl
lods
cmp
negb
addr16
fldenv
rcrb
jne
shlb
jne
aas
inc
loop
push
daa
pop
jne
jecxz,pn
xor
xlat
cwtl
dec
not
adc
mov
cmp
divl
mov
lret
rclb
fwait
lods
popa
lret
lds
mov
lcall
sbb
sub
imull
push
jae
dec
cmpsb
mov
pop
call
mov
xchg
cmc
adc
out
jne
orb
jne
add
rclb
xchg
cmp
data16
xchg
cli
push
inc
push
mov
test
fwait
mov
adc
loop
jne
sbb
iret
clc
adc
mov
sub
fnstsw
add
xchg
stos
jg
stc
mov
neg
sbb
fnstenv
lret
push
jge
inc
aam
jne
loop
rclb
movsl
jbe
out
jbe
mov
xchg
jne
orl
jl
jne
add
stos
mov
shrb
sub
jne
or
dec
ds
add
cli
sub
xchg
aaa
int3
xchg
mov
pop
push
or
mov
pop
call
and
mov
daa
mov
imul
adc
add
addr16
dec
stos
scas
cmp
xchg
bound
sub
fwait
pusha
dec
xor
mov
nop
loop
cld
dec
mov
in
fistpll
loopne
jmp
xchg
shll
pop
or
aaa
mov
gs
push
mov
cmc
inc
dec
xor
pop
xor
jae
push
call
not
push
ret
cwtl
stos
push
sahf
inc
ja
and
jl
push
and
shll
jne
int3
test
or
cld
lcall
jne
hlt
out
sbb
bound
pop
jecxz
stos
jae
dec
cli
xor
movsl
mov
cmp
aam
pop
adc
test
add
cmp
add
dec
or
andl
jle
mov
add
lret
add
sbb
dec
bound
lock
in
xchg
in
mov
movsb
mov
push
jne
aas
rcll
pop
dec
xor
lods
cmp
xor
sbb
push
add
test
arpl
outsl
pop
testl
mov
test
adc
stc
mov
inc
sbb
mov
insb
sub
xchg
dec
jmp
jns
test
push
dec
in
mov
popf
cld
mov
dec
jne
mov
iret
ja
je
jno
and
mov
and
in
mov
xlat
sbbb
jns
loope
pop
sbb
dec
addr16
jne
mov
jne
mov
or
ja
push
clc
mov
bound
sbb
push
dec
jne
lods
push
outsl
imul
inc
pop
fwait
sbb
add
ret
loope
jae
out
adc
jmp
or
add
mov
jno
mul
pushf
xor
mov
jns
test
inc
stos
stc
jbe
pop
rorb
sub
lahf
inc
add
jo
sar
mov
in
gs
pop
aas
outsb
lret
mov
xchg
outsl
enter
int
aaa
fists
push
mov
enter
jp
stos
fptan
loop
mov
jne
sbb
and
or
jne
push
push
xor
dec
mov
in
pop
nop
xor
out
jne
cmp
inc
stos
shrb
es
sub
cld
sub
dec
push
jne
pop
xlat
adc
js
jne
pop
mov
ja
jg
pop
push
or
ss
mov
mov
stc
in
jne
or
cmpsl
xchg
cmp
mov
jne
push
fcompl
ja
cmp
adc
subl
pop
mov
es
xchg
fildll
adc
xchg
jne
push
jb
xchg
dec
lcall
mov
fldenv
ja
nop
iret
pop
push
xor
jne
fldt
pop
xor
and
and
jbe
js
into
fs
mov
out
lcall
movsl
repnz
jne
sub
dec
shlb
xchg
imul
jne
lret
pop
cmp
xor
jne
xor
repz
jns
addr16
mov
adc
cmpsb
dec
lahf
ja
movsl
sub
push
aas
in
std
leave
notb
fldenv
add
push
mov
sbb
pop
and
push
fdivrs
andl
mov
lods
inc
cs
lcall
or
jne
inc
mov
ret
adc
cmp
paddb
push
dec
lret
jne
loop
mov
jne
loope
cwtl
xchg
testl
ja
clc
jle
pop
jb
pushl
lock
pop
pop
popa
jne
pop
shr
dec
pushf
fidivl
das
dec
out
repz
mov
mov
inc
repnz
pop
dec
sub
push
jne
pop
stc
xchg
xor
lods
sti
jne
ret
jl
iret
bound
add
rorb
inc
dec
sub
push
and
imul
std
idiv
into
jne
lahf
sub
mov
enter
cld
imul
mul
jbe
popa
ljmp
mov
pushf
ja
dec
jle
aad
ret
ljmp
rolb
rorl
outsl
mov
adc
js
jne
cmpsb
and
jae
push
into
sbb
xchg
in
sub
sbb
call
xchg
cwtl
jne
iret
adc
xchg
inc
xor
pop
xor
xchg
jae
clc
push
jbe
adc
int
pop
push
ret
enter
lock
xchg
pop
shll
adc
mov
outsl
addr16
dec
jne
push
mov
pop
push
cmp
add
jge
jae
jmp
daa
push
dec
cmp
cs
outsl
dec
flds
cmp
mov
mov
movsb
adc
ja
jg
fucom
cmc
and
mov
inc
add
shlb
aaa
mov
test
lock
out
sbb
imul
sub
adc
push
jno
imul
jne
and
outsl
push
and
pop
jne
sub
xchg
xchg
pop
xchg
mov
mov
test
repz
inc
cmp
push
add
cmp
push
and
jge
mov
or
xchg
daa
cmc
mov
lret
and
cli
push
inc
mov
fidivl
mov
or
testl
mov
jne
ficoml
pop
xchg
push
jne
sbb
dec
mov
jbe
notb
arpl
jne
mov
or
jp
lods
and
pop
outsb
xlat
and
aad
mov
mov
dec
lods
loope
pop
xorl
mov
xchg
sti
xchg
jge
sbbl
xor
pop
outsl
pop
out
push
das
insl
pop
js
outsb
push
push
xor
ja
jo
xchg
mov
shlb
adc
sub
jne
fadds
in
in
cwtl
and
dec
dec
jbe
add
out
sub
gs
sbb
push
popa
addr16
mov
xchg
pop
iret
sbb
xor
jne
sbb
inc
fs
add
push
mov
and
push
dec
sub
jg
inc
loop
jnp
sbb
pop
jbe
enter
mov
bound
pop
stos
cld
jnp
jl
inc
jecxz
cs
mov
mov
push
lock
cmp
push
in
xchg
cmpsl
outsl
mov
enter
dec
daa
or
mov
and
inc
cmp
in
adc
testl
filds
add
xchg
pop
fwait
jne
les
clc
sbbb
adc
scas
fldt
mov
jne
add
xor
xor
jne
cmp
sub
call
jmp
loop
imul
mov
mov
lods
cmp
mov
popf
jl
fwait
jmp
stc
adc
dec
dec
pushf
pop
jne
daa
fstpl
jmp
mov
ja
pop
decl
out
jnp
push
push
ret
sub
test
hlt
sub
fcompl
daa
mov
sbb
sbb
or
in
pop
adc
xchg
shll
add
xorb
dec
inc
cmp
dec
push
sbb
stos
add
mov
adc
adc
push
sub
ret
sbb
das
jbe
cltd
ret
sub
or
sbb
push
into
or
and
test
xchg
jge
adcl
xchg
test
xchg
push
testl
dec
aas
push
mov
adc
stos
or
shll
mov
fstps
loope
jne
cmp
xor
jmp
syscall
je
adc
push
lods
notb
mov
int3
jne
dec
ret
and
andb
xor
xchg
jge
imul
mov
sbb
outsl
mov
rcr
call
in
jne,pt
inc
mov
push
sub
or
addr16
into
fadds
insl
movsl
rol
repz
lret
sbb
and
mov
cld
ficoms
ds
jmp
add
xchg
js
xchg
jne
add
in
insb
imul
xchg
div
jbe
sar
jne
lea
lret
mov
out
ret
arpl
pop
mov
add
cmc
stos
jno
sbb
lcall
lret
bound
dec
aad
and
loop
fisubrs
adc
ret
popa
mov
lcall
mov
jne
loope
rclb
das
and
cs
in
ss
jno
adc
jb
cmp
mov
jle
popf
jne
into
sbb
shlb
fmulp
inc
daa
mov
shlb
aam
gs
ret
mov
scas
mov
push
xor
xchg
push
add
scas
jmp
mov
mov
push
mov
outsb
idivb
pop
lock
sub
mov
adc
loop
movl
imul
dec
aad
adc
push
dec
into
js
or
xchg
popa
jne
mov
lret
stos
jne
movsl
and
addr16
cmp
pop
insb
subl
mov
decl
pop
inc
insl
int
dec
je
lahf
dec
adc
scas
repnz
jle
fcomip
sbb
push
addr16
nop
data16
jl
mov
jae
fsub
enter
out
sub
adc
cmp
cmc
mov
fldlg2
mov
xor
mov
fs
mov
pop
lea
lahf
insb
scas
dec
sahf
jge
jns
mov
sbb
mov
jecxz
add
pop
adcl
mov
lods
cmp
stos
mov
dec
adc
pushf
idivb
pop
lods
jne
sbb
in
iret
sbb
jne
enter
fsubs
jne
dec
out
sub
jp
xchg
imul
push
mov
mov
sub
ret
sub
rcll
pop
and
jne
mov
fsts
les
in
jns
ret
das
or
movl
imul
jne
int3
inc
xchg
xchg
cli
sub
in
divl
lods
push
push
ret
loop
jb
pushf
loopne
fucomip
mov
sub
ret
mov
xchg
repz
ja
dec
fidivl
insl
cld
pop
imulb
aam
jne
xchg
jne
lock
push
cmpsl
sbb
xor
lcall
lret
dec
push
jp
mov
sub
or
movsb
push
notl
add
ja
mov
mov
ret
lods
and
jne
mov
xor
sub
push
aam
jb
mov
outsl
sub
imul
mov
int3
movsl
in
out
adc
dec
sub
jne
sbb
pop
sahf
sub
xchg
mov
call
lret
push
testl
sub
mov
jne
outsl
add
jno
aad
enter
mov
aad
fdivrs
test
lods
jecxz
movsl
jne
in
aam
xchg
pop
pop
jne
ret
rcl
cmp
in
jne
fidivrs
jne
dec
xor
fwait
sarb
dec
jne
outsl
and
lock
fisubrl
jne
push
ret
dec
mov
mov
jne
sbb
leave
lahf
pusha
dec
iret
jne
scas
mov
fidivl
mov
es
push
add
mov
add
std
mov
mov
cmpsb
jne
xchg
jno
jns
mov
jne
out
stos
int
push
imul
push
addr16
std
pop
lahf
mov
pop
stos
or
and
xchg
out
cltd
pop
pop
sub
stos
shlb
push
push
cmpsl
call
push
ret
mov
dec
ja
and
es
js
jne
addr16
and
sbb
stos
flds
fcomip
dec
cmp
fidivrs
sub
mov
jne
in
ds
fs
pop
addr16
cmp
popa
mov
adc
mov
in
test
adc
ljmp
scas
pop
cmpsl
gs
lds
lea
xchg
cmp
out
push
call
mov
sub
stc
in
insl
sub
call
sub
shll
bound
scas
adc
notb
jbe
fildl
stc
pop
ja
push
lods
xchg
mov
test
in
loop
xor
cmp
ret
xchg
push
outsl
add
push
gs
scas
loope
sti
or
adcb
stc
pmovmskb
inc
jb
cmpsl
jecxz
aad
push
add
pop
fwait
cmp
scas
jl
sub
jb
jbe
pop
pop
test
xchg
xorb
xchg
pop
lods
es
test
outsl
leave
xor
mov
fwait
pop
or
pop
insl
test
dec
lods
std
xor
or
aaa
jne
loop
nop
repnz
call
add
mov
mov
addl
sub
lods
aas
push
pusha
orb
mov
mov
xorl
loope
in
scas
orb
cmc
dec
in
pop
adc
andl
cmp
loope
insl
repnz
dec
scas
mov
aad
xlat
xor
adcl
std
jecxz
jbe
jns
out
icebp
xchg
loope
jnp
fisttpll
popa
jmp
xchg
mov
out
fs
jge
and
add
test
enter
add
je
ficoml
aam
xchg
adc
mov
stos
std
outsl
cmp
inc
xchg
ja
sbb
adc
lock
cmp
bnd
sbb
jnp
xor
sbb
mov
push
pop
lods
mov
adc
in
stc
jns
fisttpl
mov
push
mov
pop
xor
cmc
lock
lea
xor
jecxz
dec
call
jno
push
pop
gs
arpl
dec
enter
xor
fldt
test
and
ljmp
mov
cmp
fldl
fidivs
mov
xor
and
in
push
adc
test
mov
stc
outsb
xor
insb
das
or
push
aaa
andl
jge
leave
and
xchg
ljmp
adc
outsl
dec
sub
bound
das
std
jg
xchg
push
or
cmpsl
js
sar
insl
das
addr16
pop
lcall
pop
enter
icebp
insl
xchg
pop
jg
ljmp
lock
popf
aaa
pop
test
dec
cmp
xor
and
imul
enter
jo
mov
nop
jae
cs
cmpsb
or
inc
inc
lcall
jecxz
mov
xor
adc
and
ficompl
xchg
sbb
es
adc
and
in
mov
adcl
jp
and
mov
ss
rolb
clc
or
test
sbb
push
push
jl
mov
in
repnz
dec
pop
sub
filds
pop
push
pop
fucomp
pop
test
pop
sbbl
mov
dec
hlt
outsb
pop
cmc
xchg
loop
push
or
inc
jle
cmp
mov
xlat
jmp
push
nop
test
add
jle
and
cs
xor
sbbb
xchg
sub
or
out
push
xor
cmc
fsubrs
mov
test
inc
pop
imul
push
cs
sbb
adc
movsb
das
outsl
pop
push
mov
or
lahf
mov
in
xor
dec
push
sbbl
negl
sbbl
test
xchg
push
pop
jnp
push
mov
or
outsl
push
andl
jl
push
outsl
mov
aaa
jns
idivl
cmc
pop
test
push
jmp
ret
arpl
pop
int3
mov
stc
lcall
stos
sbb
test
out
inc
lds
mov
mov
jge
out
imulb
jg
das
jge
push
jle
outsl
adc
jle
in
lods
xor
push
xchg
push
ljmp
pop
jae
lds
inc
cmp
pop
orb
pop
out
jbe
dec
test
fcmovu
mov
xor
sarl
jge,pn
xchg
mov
shrl
cs
cmp
jnp
negb
add
mov
mov
prefetch
mov
dec
push
mov
push
std
pop
sub
pop
out
adc
xchg
dec
adc
dec
out
mov
mov
addr16
lea
out
test
jg
xor
inc
sbb
mov
fbstp
out
mov
rcr
mov
fidivs
sub
aam
xchg
dec
lcall
lods
xchg
adc
or
cmpsb
push
sbb
push
xor
xor
adc
aad
xor
mov
sbb
stos
adc
popa
and
or
mov
lock
add
adc
push
pop
nop
sbb
out
imulb
outsb
cmc
gs
idivl
scas
push
in
xor
aaa
lock
push
or
sbb
jne,pt
shlb
inc
push
inc
sub
or
or
or
rcll
jno
dec
jecxz
out
pop
das
sbb
std
xor
mov
and
mov
mov
sbb
cmp
mov
je
repz
pop
out
jae
xchg
subl
sbb
inc
rol
mov
jae
xor
loop
sbb
sahf
sub
hlt
les
lods
push
mov
out
jno,pt
addr16
inc
pop
popa
or
pop
fcmovnbe
mov
xchg
icebp
pop
jnp
inc
sbb
outsb
xorl
imul
imul
jb
mov
movsb
inc
sbb
mov
push
mov
jnp
push
das
call
in
push
cld
cmp
lea
fldl2t
pop
push
xor
push
xor
dec
add
clc
push
andl
and
adc
in
dec
xchg
adc
cld
mov
xor
and
pop
dec
or
cli
xchg
mov
insl
adc
or
jp
out
jmp
adc
nop
jno
popa
jge
cmc
dec
outsb
sbb
test
loope
adc
in
arpl
popa
mov
clc
lret
add
cmp
fwait
and
mov
sbb
pushf
add
mov
pop
mov
pop
cmp
mov
icebp
xor
mov
mov
test
xor
jns
dec
negl
outsb
dec
movsl
add
xorl
jo
jno
and
push
jo
pop
test
and
fcompl
pop
clc
stos
test
xchg
or
fimull
jbe
sub
mov
and
jbe,pt
pop
xchg
stos
loope
lahf
push
push
mov
add
sub
in
std
inc
mov
push
pop
mov
iret
fistpl
xchg
fimull
xchg
mov
leave
cmp
dec
xchg
jne
cmp
jne
sub
test
fcmovbe
jbe,pn
lds
xchg
push
pop
into
cwtl
inc
pop
cmp
popf
fcmove
cmpsl
push
sahf
xchg
adc
jmp
sub
outsl
jns
mov
or
ja
sbb
dec
outsb
jne
cld
lods
jne
movsl
outsl
shll
sub
test
sbb
lcall
pop
adc
ret
dec
popl
jae
in
into
insb
xchg
pop
fiadds
jne
and
fidivl
adc
out
insb
aad
and
xchg
pop
imul
xlat
popa
jne
ljmp
jne
in
push
cli
xor
add
insl
jbe,pt
ja
mov
xlat
hlt
ss
cmp
pop
mov
imul
pop
fsts
or
test
pop
cli
dec
mov
bound
dec
push
add
jb
divb
data16
xlat
push
js
stos
dec
xchg
push
lods
aaa
pusha
repnz
fs
jne
les
sbb
xor
negl
ret
or
cmp
push
mov
jge
ja
mov
push
clc
mov
dec
lret
xlat
jns
imul
clc
iret
movsl
adcb
adc
hlt
scas
pop
jne
sbb
jne
adc
or
lods
arpl
aam
jmp
mov
push
aad
pop
jnp
divl
addl
mov
sbb
and
push
loope
sbb
aaa
jnp
int
push
jns
pop
lods
dec
push
movb
cmp
push
mov
fistpll
xchg
test
pop
lea
mov
mov
ftst
stc
dec
shll
adc
in
out
jns
xchg
or
jne
int3
cs
inc
lock
push
or
sub
or
scas
orl
out
push
les
xchg
mov
mov
mov
xchg
mov
test
xchg
ret
scas
outsb
or
push
imul
in
pop
ja
sbb
or
adc
flds
enter
in
mov
xchg
jge
negb
xor
jg
mov
mov
dec
pusha
jg
ret
call
add
loop
cmp
insb
insb
scas
repnz
andl
dec
mov
mov
push
push
push
gs
xor
mov
fucomp
movb
dec
xchg
mov
adc
or
mov
mov
sbbl
orl
pop
xchg
and
and
and
lods
jge
test
add
add
xchg
sarl
push
movsb
call
dec
mov
stos
in
xor
xor
movsb
push
mov
xor
es
cmp
push
scas
jle
stos
dec
sbb
push
pop
or
pop
sub
dec
jno
sub
sahf
pop
ficomps
or
pop
push
push
adc
fwait
mov
mov
jge
pop
adc
add
loope
mov
test
scas
je
inc
jbe
mov
loopne
outsl
xchg
xchg
jo
stos
insb
stc
xor
jno
xor
inc
pusha
shrb
rcl
mov
iret
jnp
cwtl
std
cmp
shrd
inc
add
sbb
inc
shrl
inc
pop
inc
inc
pop
mov
cltd
rol
mov
sbb
adc
xchg
and
jae
mov
mov
pop
outsb
adc
iret
lds
cmc
pop
or
js
mov
dec
push
pop
lea
cmpsl
shl
jb
outsl
jno
lahf
jbe
fisubs
call
loopne
or
cld
test
es
jle
pushf
jge
jnp
inc
and
mov
jbe
ficomps
jg
jne
repnz
fildll
cmp
push
inc
dec
add
adc
jae
push
pop
nop
sub
mov
enter
xor
jmp
jne
sub
jae
jne
adc
aaa
imul
jbe
sbb
daa
dec
lods
aam
xchg
out
fdivs
dec
aaa
and
sbb
sbb
mov
mov
dec
fsub
sbb
and
jbe
add
jne
into
imul
jne
mov
ret
inc
sub
sbb
scas
fcmovne
fcomps
xchg
scas
mov
dec
rcrl
pusha
jne
pop
fdivr
jmp
mov
jae
xor
stos
push
aam
lret
adc
popa
dec
push
dec
dec
mov
adc
xor
fdivrs
adc
or
push
movsl
leave
lods
outsl
and
push
cltd
lret
fwait
pop
inc
adc
sbb
jle
jae
jne
js
and
mov
sub
lds
jne
xor
sub
sahf
lahf
outsl
jg
cmp
pushf
and
fsubrs
or
fs
mov
test
dec
je
movsb
ds
notb
addr16
sti
jne
scas
arpl
sahf
test
xchg
adc
pop
cltd
lock
mov
jg
xchg
and
cmpsb
sbb
stos
mov
shll
pop
sub
cli
jne
sbb
lods
enter
jne
lahf
inc
mov
jne
inc
mov
sbb
in
les
adc
cmpsb
jne
decb
and
xor
jp
scas
pop
xchg
cs
pop
or
mov
xchg
mov
cmc
jne
stc
out
jno
mov
mov
cmp
add
mov
test
mov
cmpsl
xor
xchg
lea
add
sbb
cmp
movsl
rorl
inc
cmc
enter
mov
mov
int3
lret
jne
test
stos
adc
xor
std
xor
xor
ret
mov
mov
loop
jne
aas
out
les
out
nop
add
push
dec
sub
es
rorl
xchg
push
xchg
jae
scas
stc
adc
ret
jne
lahf
cmp
inc
fidivs
dec
bound
and
addr16
mov
jo
cmp
push
or
fdivrl
aad
push
adc
cmc
outsl
in
mov
inc
adc
jne
xor
or
mov
cmpsb
cld
jne
andb
jmp
jne
mov
adc
ljmp
lods
scas
jbe
jne
out
add
ja
mov
mov
jne
adc
bound
inc
ret
push
dec
dec
dec
push
orb
sbb
mov
mov
pop
jne
sub
mov
mov
int3
daa
mov
call
flds
stos
and
xor
cltd
push
pop
shlb
inc
and
mov
lods
jne
aad
mov
jbe
push
jne
adc
rcrb
sub
jbe
xor
dec
dec
fidivs
mov
lret
sub
dec
call
cwtl
sub
addb
scas
fistps
lcall
xchg
repz
shr
outsl
adc
jle
fwait
jle
xorl
or
cli
xor
std
shll
mov
cld
test
pop
stos
ja
lret
dec
push
mov
dec
sbb
cltd
dec
sbb
xchg
jne
add
push
xor
mov
mov
ss
xchg
das
lahf
adc
repnz
loop
add
mov
inc
scas
adc
fmulp
popf
cld
jb
jne
sub
xchg
jne
mov
sbb
push
popa
btrl
jnp
jae
inc
imul
lds
inc
jne
stos
inc
ficomps
or
jne
push
js
cltd
cmp
repz
jne
fstps
sbb
dec
xor
enter
jae
lret
add
xchg
adc
scas
pop
xchg
clc
mov
jno
xor
pop
and
shrb
imul
lock
stos
jbe
fidivrs
push
and
in
jne
cmp
je
sahf
dec
jne
aam
inc
clc
push
into
loopne
inc
in
ret
push
jne
sub
dec
cmpsb
jne
fdivr
bound
mov
push
cmp
xchg
les
inc
or
jp
sti
or
cmc
clc
push
mov
cmp
stos
loop
jmp
xchg
mov
jne
push
mov
mov
sub
jne
push
xor
fidivrs
pop
inc
push
lahf
pop
outsl
mov
movsb
in
push
cmp
ret
jns
sub
pop
lock
ret
pushf
mov
cmpsl
mov
mulb
adc
xor
jne
pop
into
outsb
in
negl
xor
jne
scas
mov
pop
imul
cmp
cmpsl
repnz
inc
jmp
jne
xor
dec
xchg
sbb
sub
jne
pop
cltd
mov
add
jp
mov
cli
xchg
icebp
ja
jnp
lret
lods
dec
cs
jne
lods
repz
jl
ja
jmp
enter
jecxz
out
add
divb
jne
sbb
shll
cmp
mov
lods
in
test
jmp
mov
scas
sub
adc
pusha
int3
mov
jne
sbb
sub
dec
cltd
cmp
fmuls
and
adc
push
sub
fildll
jecxz
cmp
lcall
jne
push
arpl
lods
push
adc
cmp
or
jb
sbb
and
sub
iret
jne
lock
repnz
mov
ret
cmpsl
xchg
jne
jmp
lahf
mov
sub
imul
add
xchg
bnd
decb
fbstp
test
jns
and
sbb
rorb
mov
stos
jge
lock
loop
jbe
xor
les
cmp
popa
movb
xchg
add
push
roll
test
inc
imul
lret
xchg
pop
icebp
xchg
jmp
xchg
push
mov
cs
cmp
or
int3
inc
jne
xlat
push
and
cmp
fnstenv
push
outsl
lret
mov
mov
fsubl
scas
mov
fdiv
sub
arpl
jge
shlb
push
inc
xchg
out
and
pop
adc
ljmp
jmp
das
jne
ud2
popf
xor
out
push
cli
aaa
mov
stos
cmp
xchg
jne
sub
cmpsb
pop
jne
dec
insb
dec
jne
cmp
mov
fdivs
jp
ljmp
aaa
push
xor
sbb
filds
ret
jne
in
push
fiadds
mov
cmpsb
rcr
mov
xchg
push
loop
ja
nop
in
sbb
push
pop
sbb
nop
jne
mov
cld
jno,pt
pop
adc
jl
jne
clc
fisubrl
push
push
jecxz
cmp
aam
cs
imul
mulb
cmpsl
dec
push
adc
popl
mov
mov
mov
and
or
lods
sahf
jne
mov
sub
imul
jl
add
lods
xor
dec
mov
bound
dec
cmp
fistpll
popa
imull
loop
adc
lret
enter
or
rorb
fwait
in
and
lock
xchg
xchg
out
xchg
sbb
scas
sbb
and
jne
mov
pop
add
inc
shr
aam
inc
pop
xchg
jno
inc
xor
mov
push
ret
xchg
lret
xor
xchg
sub
test
test
in
stc
sbb
dec
lods
pop
lock
pop
sbb
cwtl
negl
test
andl
jo
push
sbbl
hlt
jb
push
sbb
repz
loop
sub
cld
xor
pop
push
mov
jnp
push
enter
adc
and
push
xchg
cmc
test
mov
std
jns
jle
jno
test
pop
sub
add
xchg
xchg
xchg
xchg
jecxz
subb
jae
jns
xchg
cld
sbb
sar
loope
imul
dec
enter
sbb
jno
adcl
cmp
push
das
sub
outsb
mov
mov
cmc
sub
jns
mov
in
and
push
outsl
rorl
pop
test
adc
fmul
aaa
push
adc
pushf
test
mov
fiadds
mov
cmc
inc
into
mov
icebp
inc
xchg
loopne
cmp
pop
stc
cmp
insl
jg
loopne
pop
cmp
xchg
mov
xor
das
pop
test
sbbl
sahf
loop
call
repnz
jae
cwtl
push
hlt
les
outsl
lret
add
jns
cwtl
aas
xchg
sub
sbbl
or
aas
jge
stc
sub
push
push
sub
inc
addr16
test
aas
xchg
fdivrs
push
or
add
cmp
jle
stos
cmp
in
mov
adc
push
fisubl
enter
mov
add
adc
inc
mov
inc
out
lods
xor
gs
mov
pop
aas
stc
dec
cld
rclb
lea
inc
mov
dec
mov
xor
push
cmp
sub
dec
fwait
mov
xchg
out
inc
push
lea
push
xor
mov
or
mov
or
fcoms
inc
push
jb
cwtl
cmp
sub
rolb
outsb
push
sub
xchg
or
adc
jg
pop
jg
cmpl
inc
subl
int
add
jb
xchg
dec
ds
and
sub
pop
xchg
adc
sqrtps
imul
adc
int
adc
mov
or
mov
adc
jg
push
fistl
dec
gs
cld
mov
jg
jb
sub
out
pop
mov
sub
ja
sahf
push
ret
rcrl
icebp
inc
dec
das
lcall
fcomps
add
lds
test
push
lods
jae
pushf
decl
or
daa
es
mov
addb
jae
mov
cmp
fadds
mov
sub
cmc
lock
popa
call
jbe
fimuls
pop
fisttpl
sub
dec
fwait
gs
jne
jb
push
and
lret
bound
hlt
in
xor
mov
lods
pushf
mov
xchg
sub
mov
pop
adc
popa
sbb
sbb
jp
cmp
lret
nop
movsb
push
scas
jge
cmc
push
rolb
cltd
push
mov
pop
push
mov
out
arpl
pop
jbe
andl
mov
xor
pushf
jg
leave
lret
sub
cmp
in
mov
fwait
xchg
inc
sti
cmpsl
jne
aas
arpl
sub
ja
mov
mov
mov
add
xchg
mov
sub
lock
sub
adc
insb
xor
cmp
cmp
jne
lods
pop
push
inc
xor
scas
outsl
mov
repnz
pop
cmpsb
mov
jo
cs
jne
pop
fs
inc
repz
add
mov
jo
insl
xchg
dec
insb
cli
jne
fwait
pop
adc
adc
ds
stos
jecxz
jne
push
lcall
and
adc
das
jmp
mov
add
or
jg
dec
int3
jne
cmp
mov
rorb
mov
lds
cs
jg
xchg
adc
dec
dec
sbb
out
mov
stos
sbb
mov
and
movsl
jne
add
sub
and
sub
xor
or
ret
jge
test
bound
jne
fs
mov
jnp
adc
xor
dec
dec
stos
push
sub
mov
push
stos
xchg
inc
jmp
cmpsb
test
lcall
or
into
leave
jne
push
lods
insb
addb
jae
loop
xchg
cmp
ljmp
lahf
xor
pop
pop
jne
and
mov
mov
popf
notl
sbb
mov
test
jns
lahf
icebp
jns
nop
pop
das
adc
imul
testb
jle
push
jne
int3
mov
js
pop
jne
test
xchg
adcb
jg
stc
jne
or
lds
mov
enter
mov
cmp
loop
mov
push
out
xor
dec
inc
hlt
dec
loop
out
cmpsb
sub
daa
add
lahf
ret
mov
lods
xor
jne
cmpsb
cmp
jne
into
jmp
jne
imul
icebp
test
jl
vpsrld
movl
into
jno
jne
jnp
xor
arpl
stc
pusha
lret
cmp
jne
into
or
or
pop
mov
jne
inc
fisttpl
lods
mov
inc
xchg
or
mov
ljmp
push
aas
add
pusha
aad
ffreep
fwait
andl
std
pop
jns
sahf
movb
mov
or
icebp
jnp
jne
ret
xchg
pop
daa
arpl
jne
and
insb
inc
sub
cmpsl
jne
aam
add
pop
jne
dec
icebp
pxor
jl
push
int
sbb
fistpll
xorb
pop
fisubs
sub
xchg
sbb
push
jbe
jl
in
pop
jne
and
jmp
inc
adc
ljmp
mov
loop
in
push
push
aas
lahf
pop
cmpsl
fnsave
fdivs
cltd
jne
dec
lods
xchg
cmp
popa
xchg
enter
ret
lea
fdivs
push
aam
dec
push
fistps
mov
jne
iret
pop
ror
in
pop
int
jne
add
lods
mov
adc
imul
scas
cmp
out
in
jne
pushf
lods
or
jne
stc
inc
imul
push
dec
add
jbe
aad
and
jne
xchg
cmp
jno
sub
shlb
push
adc
mov
jg
push
in
jne
push
lahf
sbbl
or
testb
xchg
nop
mov
jne
scas
ja
shll
pushf
mov
int
scas
and
mov
cmc
pop
xlat
dec
dec
sbb
push
push
imul
lahf
mov
pop
xor
popa
daa
dec
jne
pusha
mov
int3
pop
mov
cmpsb
dec
movsl
xchg
enter
jb
jnp
xor
jmp
jbe
in
into
punpcklwd
jbe
cltd
mov
jne
push
add
std
outsl
sub
je
lret
xor
fs
testb
hlt
enter
cmp
into
adc
pop
out
jo
ret
xchg
pushl
xchg
mov
pop
and
call
aas
loope
ret
stos
or
in
loopne
outsl
or
push
xor
xchg
ljmp
jl
popa
xchg
sbb
sbb
jno
bnd
ds
popf
push
fnstenv
out
xlat
jo
in
dec
into
adc
jnp
xor
dec
stos
filds
in
sbb
js
xchg
inc
scas
cmc
fdivrs
push
movsl
rcr
into
test
mov
inc
jge
es
cmpl
lcall
outsb
int3
jne
jmp
push
push
pop
xor
cmp
mov
mov
jle
fdivrl
imul
dec
enter
int3
popa
ret
arpl
cli
mov
xor
pop
mov
or
xchg
jne
imull
int
repnz
jne
pushf
lods
scas
rcr
lds
mov
inc
jbe
pushf
rol
ror
arpl
out
jno
mov
aam
outsb
push
scas
xchg
add
cmc
sbb
mov
pop
lahf
insb
pop
fmuls
sub
test
popa
xchg
adc
adc
mov
push
or
cmc
es
sbb
or
scas
outsl
dec
mov
sti
cld
adc
addr16
popf
cmp
xor
or
adc
cli
inc
add
xchg
jb
loop
mov
ds
mov
std
lret
adc
stc
or
jno
cs
fs
add
gs
mov
pop
lock
sbb
lcall
jae
bound
xchg
xchg
shrb
xor
jecxz
pop
xchg
stc
iret
fadds
jle
add
cmc
add
out
xlat
bnd
imul
adc
cmp
pop
and
sahf
push
movsb
test
mov
push
xor
sbb
mov
adc
or
outsl
sbb
mov
fisttps
ret
cmp
pop
test
jp
sbb
in
adc
dec
adc
mov
outsb
loop
adc
adc
dec
pop
test
adc
das
dec
push
adc
inc
pop
test
push
subl
daa
mov
jl
add
or
inc
test
sub
cld
adc
pop
lods
pop
push
cs
sub
jno
out
es
and
lea
stos
pop
jae
jns
and
loop
out
cmp
jmp
inc
push
divb
push
lahf
cmc
adc
inc
push
and
ret
filds
add
jmp
lret
and
adcl
adc
sub
and
jle
inc
xchg
mov
sbb
sub
or
push
inc
pop
mov
jmp
std
sbb
or
ljmp
jmp
scas
fildl
and
sbb
sub
xchg
inc
mov
jb
sub
cli
jmp
es
sbb
and
maxps
dec
test
inc
fcmove
jno
sub
mov
test
lods
mov
mov
lods
pop
and
or
or
jno
mov
movsl
jbe
jns
lock
xor
lods
movl
push
dec
insl
xchg
ret
scas
mov
scas
push
ret
fcoms
pop
sub
jnp
push
loope
sbb
stos
push
push
adc
out
addl
adc
rclb
adc
test
and
mov
pop
lret
pop
add
js
mov
test
in
icebp
repnz
stos
das
xor
jge
push
pop
testl
and
or
add
loop
add
arpl
cmp
inc
xor
jge
pop
jp
mov
aam
fnsave
xlat
push
ljmp
sub
dec
pop
je
or
addl
and
lods
into
rcrl
push
enterw
scas
arpl
dec
test
mov
and
idivl
stos
cld
in
adc
inc
or
sub
push
ljmp
mov
xchg
ljmp
cmp
jmp
pop
and
sbb
std
jbe
test
fstp
cmp
das
push
pop
roll
lahf
cmp
imul
call
mov
pop
sbb
push
das
push
insl
mov
xchg
in
nop
in
insl
mov
add
mov
gs
adc
adc
sbb
sub
pop
icebp
cltd
and
jae
and
test
ja
push
jo
lea
fxam
pop
cmp
std
sbb
in
je
mov
jnp
mov
jno
insl
lea
outsl
arpl
nop
scas
das
and
adc
stos
push
add
jp
lahf
cmpb
loopne
push
ds
xchg
enter
xchg
pop
lock
pop
test
add
inc
push
loopne
in
push
inc
movsl
aas
push
pop
sbb
fistl
popa
pop
test
push
cltd
pop
arpl
mov
fwait
das
das
gs
shlb
push
mov
sti
dec
push
cmpl
nop
jge
out
pop
ja
mov
adc
mov
push
jns
jns
mov
push
jnp
jnp
mov
jl
ljmp
cmc
inc
mov
cld
popl
mov
add
mov
sbb
pop
testl
mov
adc
xchg
inc
adc
push
cmc
push
lds
sti
push
inc
mov
sub
cmp
jge
adc
mov
add
lods
jae
test
jae
adcb
lret
mov
xchg
test
icebp
jge
cli
add
or
jne
cmpl
iret
mov
insb
xor
add
aaa
sarb
stos
pop
push
adc
xchg
sahf
inc
push
push
ja
jns
test
out
hlt
jl
scas
mov
cmpsl
jb
jecxz
inc
adc
cmpsl
xor
outsb
cmp
cld
jge
out
jnp
dec
and
mov
dec
stos
lret
xchg
push
cmp
jno
dec
jns
leave
xchg
cs
std
aaa
lret
daa
pushf
sti
fnstcw
and
xchg
cmp
mov
jo
jbe
ds
loopne
outsb
mov
mov
xchg
push
fists
addr16
test
cmp
aam
jmp
jmp
sub
cmp
adc
fisubrl
sbb
mov
inc
inc
dec
mov
push
scas
lods
jne
outsl
xchg
jnp
loop
mov
notb
inc
icebp
aaa
movsb
and
pop
test
pop
cmpsb
in
lret
loop
lods
stc
xchg
xchg
out
pushf
mov
aad
shll
cmp
add
xor
lea
mov
ss
fadds
push
mov
sahf
aaa
mov
inc
stc
call
mov
insl
jns
lret
or
daa
adc
adc
xchg
scas
xor
orl
cmpl
adcl
push
cmp
mov
dec
shrl
imulb
fnstsw
aam
pop
in
xor
or
test
rolb
jle
movsb
inc
xchg
mov
loopne
das
mov
adc
cwtl
loopne
sti
pop
dec
cwtl
movsb
rclb
xor
test
arpl
stos
mov
jmp
mov
pop
mov
out
cmp
mov
jp
or
in
pop
xchg
mov
mov
icebp
push
push
lods
xchg
xchg
in
test
add
out
aas
sbb
addl
mov
adc
orl
or
pop
loopne
xor
mov
enter
push
testl
negb
aas
mov
mov
test
xchg
out
mov
lret
xchg
jns
fld
push
mov
inc
xlat
ror
mov
xlat
push
cmp
xchg
sti
push
daa
or
test
std
mov
mov
imul
int
lds
mov
pop
jecxz
jge
negb
cli
cmpsb
push
jge
scas
outsl
jp
roll
mov
jns
jns
mov
xor
ja
nop
pop
xorb
xor
push
jns
out
mov
stos
popf
xchg
mov
aam
test
imul
inc
and
push
imul
outsb
cmpl
pushf
mul
pop
mov
xor
jge
adc
xor
loope
out
push
xor
inc
jno
jge
xor
lea
das
inc
xor
adc
lds
add
dec
cmp
push
fimuls
jg
cmp
fnstcw
inc
and
pop
jae
push
push
xor
fsubrs
push
out
or
aam
das
inc
xchg
sbb
pop
lods
rcrb
ss
xchg
add
or
test
mov
jnp
sahf
jns
jns
test
inc
xorb
mov
fwait
cld
sub
in
jns
sub
bound
test
dec
xchg
loop
xchg
push
in
test
aas
das
add
inc
test
testl
mov
jbe
inc
jge
add
xor
insl
test
fisubrs
cwtl
shlb
sbbl
add
movsb
sbbl
inc
test
arpl
aaa
jecxz
enter
aad
push
xor
in
adc
mov
arpl
cs
xchg
jne,pn
inc
add
push
cmp
scas
mov
push
aas
test
in
pop
fldt
adc
dec
inc
push
nop
cs
aaa
ret
push
aas
xor
filds
into
and
push
xchg
pop
pop
cltd
sub
push
jecxz
jmp
xlat
movsb
lret
vorps
arpl
in
dec
cmpsl
pop
call
call
test
aas
stos
and
cwtl
sbb
push
cmpsl
mov
popa
adc
lods
movsb
sub
out
lret
add
fs
xchg
sbb
push
leave
dec
jnp
notl
mov
jae
dec
and
dec
dec
lcall
sarb
fwait
out
outsl
das
push
pop
pop
mov
das
mov
xor
xchg
cli
or
push
mov
outsl
mov
sahf
jl
ret
out
cmp
pop
flds
inc
sub
ja
and
mov
push
add
push
icebp
dec
test
mov
mov
dec
mov
loope
insl
out
mov
mov
cmpl
xchg
ret
in
fwait
leave
and
aas
jp
shl
mov
xor
mov
sbb
push
push
push
aas
pushf
cld
stc
repz
sbb
outsl
add
jmp
pushf
pop
pop
adc
out
adc
inc
sub
xchg
das
shlb
jno
lahf
mov
add
insb
and
dec
sbb
cmp
aam
mov
or
pop
push
fimull
sar
mov
inc
inc
pop
mov
mov
pop
sbb
jb
xor
or
push
mov
jno
fcomps
jne
movb
jb
pop
jmp
or
and
jne
fwait
xchg
popf
ja
push
pop
push
jmp
jmp
insb
jae
fs
jbe
add
mov
or
outsl
fisubl
iret
arpl
jbe
daa
ds
scas
insb
out
arpl
dec
pop
mov
mov
or
lea
mov
adc
data16
test
mov
roll
outsl
into
addr16
icebp
adc
jle
outsl
dec
roll
pop
push
mov
jns
movb
pop
popa
push
roll
jb
sbb
pop
stc
cmp
pop
push
pop
pop
cmp
push
inc
outsl
inc
fildl
popa
inc
mov
add
xlat
hlt
imul
xchg
push
lea
clc
jp,pt
addr16
dec
lret
addr16
pop
push
outsl
stos
mov
insl
pop
push
test
inc
push
xor
xor
jp
push
popa
cmp
or
push
fistl
and
cmp
fidivs
inc
cmpsb
adc
fs
inc
dec
fistpl
outsl
mov
pop
dec
push
dec
push
cltd
sub
fstpt
test
dec
ficomps
xchg
addr16
dec
addl
dec
xchg
fsubrl
add
and
xchg
push
imul
dec
jns
sahf
add
pop
push
cmp
outsl
mov
push
inc
push
inc
imul
hlt
push
cmp
and
test
cli
dec
cwtl
push
lahf
jb
imul
dec
jno
test
inc
inc
push
arpl
outsl
stos
fdivrl
inc
pop
push
fldt
das
mov
sub
cmp
lahf
fistpll
push
mov
jg
cmp
pop
dec
jns
push
inc
push
imul
jmp
jns
cmp
jecxz
add
test
mov
inc
push
imul
loop
arpl
shl
outsl
dec
pushf
pop
push
inc
push
sub
inc
sub
dec
dec
scas
aaa
mov
dec
xor
rorb
ja
pmaddwd
push
inc
std
icebp
jo
mov
iret
xor
testb
hlt
int
test
and
adcl
add
stos
les
mov
lock
pop
fmuls
mov
fwait
cli
loopne
jae
sbb
mull
mov
call
mov
sub
mov
jnp
lods
mov
xor
mov
imul
jae
jns
lds
out
jno
outsl
jno
xchg
push
dec
jp
out
jno
mov
adc
loope
adc
mov
xchg
mov
xchg
jp
adc
adcl
stc
mov
in
movsb
pop
dec
jae
xor
fisttpll
ror
push
jb
jnp
ja
dec
push
and
xlat
jo
add
ja
xchg
xor
inc
cmp
jbe
shll
shl
pop
jae
pop
hlt
sbb
pop
xchg
add
pslld
jno
xlat
ja
lods
mov
sub
dec
sbb
mov
call
shrl
push
inc
fcoms
loope
and
and
or
loope
movsb
push
add
es
mov
lea
popa
or
fiadds
or
and
push
jg
lds
dec
fistpll
cmp
push
jno
loope
aaa
jbe
and
test
pushf
sbb
adc
ljmp
pushf
sub
xchg
aas
ljmp
loopne
sbb
push
movsl
pop
push
pop
or
push
and
jno
and
xor
sahf
jne
cli
ds
mov
push
sub
stos
dec
mov
mov
inc
iret
push
pop
xor
xchg
scas
cmp
pop
xchg
pop
fdivl
stc
xchg
lret
aas
inc
aas
cmp
cmpsb
mov
imul
dec
inc
jg
xrelease
mov
leave
xlat
fldl
push
xorl
iret
mov
mov
sti
movb
jp
add
popf
or
out
outsl
int
pop
mov
add
gs
push
mov
jle
int3
shrl
jnp
push
mov
sub
add
imul
sub
and
arpl
stos
xor
sbb
movsl
imul
push
jb
and
mov
adc
leave
dec
pop
fsts
mov
jge
adc
push
das
cmp
push
sarl
and
test
pop
je
jns
iret
scas
xchg
push
ret
xchg
popf
or
adc
inc
jnp
ja
pop
leave
lock
jae
add
int3
jg
int
or
mov
push
adc
cmp
adc
les
jle
dec
inc
inc
mov
push
jecxz
xchg
sbb
jnp
inc
insb
push
pop
test
es
aam
or
punpcklwd
jp
dec
xchg
xor
js
sub
jbe
inc
pushf
dec
xchg
mov
cmp
and
das
jp
shll
mov
test
mov
pusha
gs
inc
cmp
nop
jne
enter
movsb
mov
testb
ljmp
xchg
jne
stos
je
andb
scas
cmp
in
jne
or
sub
jbe
jg
int
nop
lock
xchg
scas
or
lods
cmp
jne
fwait
mov
fcmovnu
push
or
movsl
cmp
dec
dec
mov
fiadds
xchg
andl
stc
stos
push
inc
sub
fdivs
scas
aaa
cmpsb
jb
pcmpeqw
lock
jne
sbb
push
xor
negb
mov
pusha
lods
jbe
mov
jne
mov
sbb
imul
jge
sub
es
mov
xor
dec
mov
bound
xor
and
xchg
jne
js
lret
fcmovne
sar
jne
cli
fucom
inc
mov
jne
daa
push
fs
lcall
sbb
inc
imul
sub
sub
jne
pop
cs
stos
dec
fwait
ret
jne
push
mov
adc
jnp
jne
mov
inc
sub
xor
sub
jno
rcr
mov
bound
movsl
cmpsl
adc
push
or
cwtl
pop
mov
mov
and
cli
jg
add
jne
in
push
adc
lahf
addr16
inc
jp
jle
test
pop
incb
cmpsl
pop
rclb
test
dec
pushf
pop
pop
dec
mov
fstps
hlt
push
dec
lret
mov
dec
popf
insl
fldcw
adc
movsb
orb
faddp
jmp
push
xchg
xor
push
sbb
shll
mov
adc
ja
push
dec
mulb
repnz
add
sub
xchg
in
clc
cli
lock
addl
ja
cmp
jmp
inc
jne
lds
mov
ret
push
repz
or
or
mov
adc
jae
sbb
cmpsb
cmp
sbb
push
xor
icebp
jne
xchg
repnz
lret
pop
xchg
mov
pop
aad
nop
push
push
and
jne
roll
lea
push
sbb
cwtl
xchg
nop
add
push
shll
lock
insb
cmp
mov
pop
ljmp
inc
cs
fidivrs
hlt
jne
dec
adc
jbe
in
sbb
hlt
xor
mov
mov
cltd
jo
call
cli
in
sarl
test
push
push
jle
push
add
cli
mov
mov
mov
sbb
or
lds
idivb
mov
nopl
adc
nop
cmpsb
out
loopw
pop
imul
lret
inc
dec
xor
push
pop
clc
int3
fnstenv
jne
popa
adc
mov
xchg
aas
orl
sbb
cmc
repnz
cmp
xchg
xor
shll
pop
push
es
lods
mov
sbb
pushf
test
je
les
push
call
mov
jne
repnz
orb
jne
or
adc
sbb
fdiv
add
jae
and
ja
mov
xchg
pop
sub
jmp
cmpsb
stc
dec
imul
loope
shlb
jo
cmpsl
sbbl
mov
jne
add
xchg
ret
adc
cmp
testb
jne
fisubrl
iret
jne
rolb
fistps
mov
and
imul
leave
jne
mov
cmp
xchg
jbe
xchg
mov
jo
adc
neg
pop
lods
repz
jle
mov
or
xlat
fsubrp
daa
dec
jbe,pn
xchg
filds
pop
jne
sbb
and
ss
cmp
xchg
insl
shlb
lret
int3
cwtl
pusha
pop
sbb
and
sbb
jne
ljmp
fistl
aam
int3
jne
ficompl
bnd
mov
je
cmp
sbb
jne
xchg
dec
int3
sub
jne
lahf
out
adc
out
movsl
mov
sub
repnz
jne
shr
sub
cmp
rep
push
cld
xchg
test
xor
aaa
pusha
sbb
sub
cmpsl
jne
sub
ja
call
cli
xchg
pop
cmp
push
in
sbb
fsubl
add
out
scas
inc
sub
bound
fnsave
mov
rorl
mov
loope
jecxz
mov
xchg
mov
sbb
mov
and
in
in
jmp
loopne
xorb
jne
fs
outsb
test
insl
cli
push
and
ljmp
mov
push
pop
aam
jecxz
jo
push
aad
jno
push
mov
cmpsl
cmp
ret
push
jne
shl
loope
out
jne
dec
fcmovb
lea
sub
sub
sbb
not
dec
fwait
daa
jp
mov
dec
mov
jno
in
fstpt
mov
adc
loopne
lahf
push
cwtl
outsl
xchg
xor
mov
push
cmpsb
stos
mov
cmpsl
jge
or
mov
push
lcall
cmp
xchg
data16
ret
xchg
stos
sub
jo
fcoml
or
cli
scas
sbb
mov
xchg
cmp
jbe
adc
cs
ja
popf
fcmovu
xchg
mov
lahf
fwait
adc
movsl
int3
ja
fnstcw
or
mov
cmp
das
ss
out
iret
int3
sub
jle
jne
scas
aas
xchg
cmp
orb
jne
push
movsb
sahf
pop
inc
lret
push
inc
fbstp
mov
and
fs
call
sti
daa
movsl
mov
pushl
div
jbe
lret
ret
fistps
and
jge
cli
cmpsb
sub
hlt
push
jnp
mov
xor
jno
cmp
jecxz
das
jg
push
rolb
adc
mov
negb
addr16
xchg
jge
xor
xor
inc
pop
xchg
pop
rcrb
jge
and
rolb
pop
aas
and
push
int
push
jno
scas
and
or
xor
sbb
test
insl
andnps
enter
inc
in
outsb
sbb
inc
mov
xchg
push
xchg
xchg
adc
hlt
fstp
mov
test
lods
out
adc
ljmp
sbb
jo
call
fstpl
jae
aad
jo
pop
mov
movsb
mov
adc
out
call
mov
out
lea
adc
out
lahf
cltd
push
add
sarl
ljmp
inc
fimull
push
aaa
dec
negb
loop
push
or
mov
mov
xchg
inc
imul
push
mov
jbe
cmp
jecxz
enter
jg
push
scas
jns
mov
pop
outsl
dec
inc
das
aaa
push
sub
mov
mov
dec
inc
outsl
roll
xchg
lret
mov
popa
xchg
ret
mov
xchg
push
push
push
call
es
sahf
or
and
rorb
pop
sbb
imul
cltd
stc
jp
mov
dec
mov
push
mov
and
and
xor
in
mov
movb
les
out
repnz
push
jp
icebp
mov
push
pop
fistpl
ss
push
jge
movl
sub
pop
adc
sub
orl
jnp
inc
mov
out
dec
push
scas
rolb
push
and
dec
lcall
pop
jne
push
jmp
mov
js
mov
inc
fnstsw
sahf
decl
adc
or
xchg
push
addr16
mov
xchg
movsl
mov
xor
ljmp
addr16
dec
push
jbe
lret
inc
lds
mov
jne
mov
add
mov
jmp
data16
lret
mov
pop
stc
jne
cmp
cmp
popf
mov
ds
mov
repz
push
jne
imul
xchg
jns
fwait
inc
mov
aad
loope
dec
cmp
divl
adc
add
sbb
aam
xor
push
sbb
pop
aad
xchg
lock
mov
xlat
or
xchg
mov
das
call
repnz
jne
cmp
out
and
add
aaa
and
outsb
in
outsl
imul
clc
bound
jne
idivl
mov
dec
xor
loope
inc
push
shrl
lods
mov
shl
jg
adc
sub
fs
stc
cmp
repz
jne
mov
or
clc
jne
cmpsb
pop
incl
rolb
es
arpl
mov
dec
lock
jne
adc
xlat
icebp
jmp
and
addl
jne
cmpb
sub
or
shrl
imul
std
adc
xchg
lret
lret
push
sbb
push
inc
into
outsl
add
inc
out
roll
out
jne
fwait
pop
test
or
xchg
mov
pop
add
push
cld
lds
dec
sarl
in
jne
shll
ja
mov
mov
push
outsl
orb
sti
xchg
addr16
xchg
leave
js
and
call
cmc
mov
jne
repz
pop
pop
push
mov
cmp
mov
test
dec
lods
cmpsb
stos
mov
test
cmc
xchg
jmp
jne
enter
and
int3
addr16
scas
xor
lahf
stos
sub
jne
sbb
inc
and
cmp
jne
xor
data16
jne
push
aaa
sbb
push
jg
jne
xor
or
jbe
dec
or
jne
inc
xchg
jmp
fs
cld
mov
xchg
jne
and
sti
lds
pop
jb
clc
mov
fistpl
cmpsb
imul
out
jne
cwtl
cmc
push
mov
call
mov
and
mov
movsl
xchg
dec
jne
xor
lretw
sbb
xchg
mov
repnz
ljmp
enter
daa
out
movsl
sbb
fldt
push
mov
xor
icebp
mov
neg
push
fisubl
pop
insl
movsl
jecxz
ljmp
lret
into
lahf
sub
mov
sbb
push
hlt
inc
shlb
lret
movsl
stos
or
dec
test
push
mov
mov
push
sbb
cmp
shlb
fs
stos
in
xchg
sub
gs
clc
ss
mov
sahf
jne
xchg
shr
xchg
push
jo
ret
sbb
daa
daa
adc
jne
inc
popf
cmpsb
dec
into
ljmp
cmpsl
push
in
sti
popa
add
std
mov
cltd
paddb
dec
subl
leave
sub
sbb
cmpsb
and
or
mov
lods
jne
jp
jbe
fnstenv
das
mov
add
cltd
repz
mov
jno
fisubrl
jo
mov
leave
sbb
sbb
jne
xchg
mov
rcrb
ret
loop
and
add
dec
push
cld
and
jae
adc
mov
jne
imulb
xchg
sbb
dec
inc
jae
jne
fisubrs
cld
add
jl
jbe
mov
leave
jne
mov
jne
sbb
jmp
outsl
dec
outsl
dec
xchg
or
sub
cli
shll
sbb
sub
jg
popf
jmp
add
jne
cwtl
or
mov
push
enter
mov
inc
mov
cmp
mov
jecxz
xchg
icebp
and
scas
mov
cli
stos
jne
mov
cmp
enter
fwait
cmpsb
sahf
push
sub
imul
and
sbb
bound
jne
and
loope
out
pcmpeqw
mov
or
or
das
mov
jg
jae
in
xchg
push
mov
cmp
repz
ret
mov
cmp
test
js
mov
in
imul
fisubl
jne
mov
js
pushf
dec
aaa
frstor
stos
jne
pop
scas
cmp
fldcw
jne
das
and
stos
sarb
add
outsl
push
jne
lret
addl
sub
adc
mov
sub
test
jg
inc
mov
daa
dec
incl
sarb
jg
cmc
mov
push
mov
jno
or
dec
push
mov
sahf
xor
adc
sub
add
or
out
xor
out
mov
mov
sub
nop
filds
xchg
jnp
imul
sub
inc
add
jae
mov
mov
pop
inc
push
mov
push
enter
cld
or
outsb
mov
mov
ret
icebp
adc
inc
adc
add
es
xchg
sub
inc
lcall
dec
in
push
inc
shrb
push
or
repz
and
mov
arpl
add
fidivrs
sbb
notl
popa
and
or
popa
lds
push
jne
add
rcr
adc
lods
das
adc
add
jg
in
adc
or
dec
push
out
xchg
mov
aad
inc
push
jne
and
mov
add
cld
mov
pop
movsb
and
repnz
dec
push
rolb
ficompl
jnp
jne
mov
xor
sbb
divb
xor
lods
inc
or
cmp
popa
lahf
subb
sub
pop
pop
outsl
add
pop
push
mov
in
mov
sbb
cmp
sbbb
movsb
cmp
mov
lahf
gs
out
adc
inc
xchg
mov
subb
lcall
fwait
adc
lret
or
testb
xchg
gs
inc
cwtl
and
dec
leave
and
sahf
enter
jo
push
test
xchg
pop
sbb
test
xchg
push
out
dec
xchg
push
push
push
cmp
testl
and
jbe
addb
sahf
jg
mov
jns
notb
mov
push
stos
js
dec
add
mov
sub
cmp
mov
mov
jne
jb
imul
mov
daa
dec
out
sbb
xchg
pop
adc
or
bound
inc
add
cmp
pop
jp
sti
lods
cmp
mov
lods
jae
mov
jecxz
pop
loopne
mov
xchg
xor
sub
mov
dec
hlt
loope
in
fstpt
and
sbbb
scas
xchg
in
les
adc
push
cmc
cmpsb
mov
arpl
das
xchg
dec
test
add
mov
and
pop
inc
cmpsb
jne
mov
into
repz
shlb
cld
mov
addr16
popa
jp
cmpsl
push
dec
scas
and
xor
cmpsb
pop
lods
jle
add
repnz
mov
loopne
mov
movsb
jne
iret
rcrl
add
cld
jg
push
sti
pop
mov
jne
imul
mov
xlat
mov
jge
dec
decb
notb
lcall
ret
ljmp
daa
imulb
pop
lods
jecxz
xchg
shll
mov
aaa
jne
js
jp
fwait
scas
ja
jmp
dec
sysexit
inc
push
outsl
mov
imul
gs
nop
xor
dec
jne
cmpsb
mov
mov
pop
mov
mov
jne
repnz
pop
les
cmp
repz
add
mov
bound
loope
mov
push
test
aam
mov
xchg
inc
lods
jne
jl
mov
int
sbb
pop
js
movhps
mov
dec
xchg
loopne
insl
pop
std
mov
ljmp
sti
cmpsl
bound
sbb
or
push
inc
shll
xor
fs
cltd
in
dec
call
test
push
jno
lahf
lret
pop
test
pop
sub
xchg
add
and
cs
mov
mov
loopne
ret
inc
clc
push
xor
push
call
inc
ja
mov
push
sbb
pop
outsl
push
ja
test
or
rcrl
xor
enter
outsl
adc
fcmovu
mov
add
sub
lea
push
pop
icebp
sub
lcall
aad
rorl
inc
addr16
xchg
shll
push
push
and
xlat
scas
imul
cmpsb
ja
pop
test
inc
call
push
in
imul
out
inc
dec
fiaddl
pushf
fisubrs
cmpsb
jb
mov
arpl
lods
imul
adc
mov
inc
pushf
jne
push
mov
xorb
lods
adc
ja
adc
mov
jmp
scas
pop
cltd
call
mov
and
jne
fstpl
push
fists
jne
imul
sti
cli
dec
jae
sbb
rolb
push
push
jne
ret
scas
mov
push
mov
pop
jg
jbe
xor
sbb
popa
mov
push
jmp
and
out
stos
jne
ffreep
xor
mov
mov
push
mov
stc
add
movsl
xchg
aam
or
cmc
pop
cwtl
lock
mov
es
push
in
outsl
mov
mov
stos
out
jno
jne
xchg
cltd
jl
or
dec
cmp
enter
in
ret
push
subb
lret
jnp
decb
inc
fcomip
xor
mov
jmp
dec
cmc
in
push
adc
jne
in
mov
cmp
pop
stos
mov
outsb
lahf
jne
mulb
xchg
jne
fadds
cwtl
mov
pop
popf
or
ret
xchg
les
loopne
xchg
xor
xchg
fwait
adc
std
push
sti
jne
sub
into
sbbb
push
xor
push
sub
pop
xchg
mov
cld
lods
ss
rcrl
jne
mov
nop
pop
repnz
adc
shrl
popa
and
mov
addr16
cmp
cmpsl
mov
leave
cmp
movsl
dec
lret
inc
mov
jne
shll
or
xor
arpl
icebp
lcall
jne
jmp
out
lret
inc
jne
xchg
sbb
fmull
ret
xor
out
loop
jg
enter
push
inc
lea
pop
inc
cmpsl
pop
int3
stos
in
bnd
inc
fidivrl
and
mov
jnp
lock
mov
xor
add
daa
fs
jne
jg
sub
mov
dec
sbb
xor
mov
and
mov
scas
testb
lcall
shrl
cmp
aas
test
mov
mov
jnp
out
jle
ret
sub
arpl
test
les
mov
lods
stc
test
in
test
aad
les
inc
mov
mov
stc
pop
out
pop
enter
inc
imul
mov
jno
mov
out
sbb
idivb
xorb
lret
sub
fnstsw
adc
sti
sbb
adc
arpl
pushl
jnp
enter
fistpll
cmpsl
inc
push
jbe
jge
mov
cwtl
mov
fucomi
push
lahf
sbb
cmp
xor
in
cmp
mov
aad
cmp
inc
outsl
pop
shrb
cmp
pop
push
xor
mov
lods
mov
and
cli
sbb
test
xor
mov
je
jge
mov
and
adc
outsw
jnp
aad
cwtl
imul
mov
add
fidivrs
push
cld
sub
or
mov
push
dec
xchg
jl
add
xor
daa
stc
popaw
clc
mov
cli
lea
fs
rolb
bound
jle
andl
push
inc
les
mov
push
or
jbe
dec
jnp
addr16
in
into
ljmp
insl
push
mov
cmp
dec
rcrb
mov
mov
cmp
or
ficoms
cwtl
rcrl
mov
cmp
mov
aas
or
pop
lods
sub
xchg
pusha
push
sub
aam
cmpl
inc
jl
dec
das
mov
out
fcompl
mov
mov
subb
xchg
fsubrs
incb
push
inc
sub
inc
cmpsb
ja
mov
ficoml
xor
inc
xchg
adc
mov
push
add
adc
and
and
divl
lds
or
xchg
cmc
xchg
or
fnsetpm(287
fldcw
cmp
xor
adc
test
ret
mov
xchg
das
sub
mov
xor
add
sub
sahf
cwtl
cmp
xchg
add
xor
dec
xchg
rclb
das
cs
and
repz
dec
cmp
gs
dec
mov
stos
xor
ljmp
xor
lods
mov
into
push
push
dec
loopne
insl
notb
addl
incb
sbb
cmp
mov
cmp
push
push
and
sbb
ljmp
mov
xchg
xor
mov
pop
lret
mov
mov
jae
in
lds
iret
sahf
xor
add
or
cmc
mov
or
sbb
add
xchg
popf
dec
xchg
dec
fisubl
out
popf
jno
cs
inc
aad
sbb
xchg
or
inc
pop
push
cmp
pop
int
xor
test
outsl
lock
nop
jne
inc
jbe
add
mov
jge
sahf
imul
and
jl
push
ret
scas
adc
mov
adcb
mov
scas
or
add
es
mov
adc
shll
adc
cmpsb
jno
in
push
mov
sub
adc
clc
ret
push
aaa
sbb
mov
test
or
lret
inc
mov
jge
inc
jge
mov
lock
clc
aam
lods
jb
sbb
sahf
mov
sbb
xor
adc
mov
sub
fdivl
add
lea
mov
lods
pop
test
inc
aad
jb
xchg
hlt
dec
gs
dec
push
clc
cmp
lcall
test
xchg
mov
or
dec
xor
xchg
xor
aas
push
mov
jle
outsl
adc
adc
jnp
xor
cli
sub
outsl
sub
jle
nop
and
fcmove
mov
repz
xor
hlt
les
dec
mov
lea
jb
daa
cmp
mov
icebp
shll
push
popa
mov
push
cmp
lea
arpl
mov
enter
loop
adc
push
mov
pop
mov
jns
adc
push
insl
call
lahf
push
lods
pop
mov
icebp
pop
mov
push
mov
loop
push
testl
movsl
movsb
gs
test
out
addl
iret
pushf
push
adc
in
lret
xchg
das
enter
outsl
adc
xor
xor
ja
xchg
mov
enter
dec
enter
rcll
sbb
push
mov
mov
add
imul
pop
lea
inc
push
popa
jge
imul
imul
insl
cmp
push
aad
in
mov
pop
rcll
xchg
xchg
push
inc
movsl
rcll
xchg
xchg
push
inc
arpl
adc
je
jae
adcl
pop
and
pop
sbb
rcrl
xchg
scas
push
inc
pop
pop
cmp
pop
jle
les
lcall
std
cmp
pop
pop
shll
fs
and
pop
mov
icebp
push
cmp
lcall
cmpsl
je
aas
mov
dec
mov
jo
je
add
xor
dec
test
aas
jae
mov
sarb
mov
jnp
das
lods
subl
test
jmp
mov
add
push
xor
jns
subl
addb
ja
jnp
aas
imul
loopne
outsl
test
sub
xchg
mov
icebp
shr
or
stc
icebp
call
mov
sub
repz
push
das
cwtl
fistpl
or
adc
mov
popf
repz
std
cmc
fisubl
lret
pop
jae
inc
rcr
mov
adc
adc
aas
enter
lea
xor
leave
fdivl
pop
leave
dec
xor
lcall
lcall
jle
and
lcall
test
hlt
jne
out
add
xor
jae
add
xor
or
push
das
pushf
cs
dec
in
bound
std
imul
fsubr
jne
sbb
push
lods
pop
xchg
xchg
mov
andb
imul
adc
lea
outsb
jle
ljmp
test
mov
add
insb
or
pop
pusha
imull
jmp
sbb
or
push
add
mov
movb
jle
push
push
adc
decb
lock
stc
xor
outsl
push
test
xchg
aam
inc
and
sbb
rolb
fdivrs
test
push
popf
ss
xchg
jns
ja
test
or
fbstp
repnz
or
push
mov
punpcklbw
mov
pop
cmp
add
ljmp
shll
sub
js
jl
or
pop
loopne
pushf
leave
xor
popa
or
hlt
xchg
inc
push
push
push
sub
cmp
push
orb
add
test
repnz
cmp
mov
adc
outsl
and
xchg
inc
ret
push
mov
inc
lret
mov
cmp
adc
xor
aad
pop
enter
lret
or
sbb
mov
adc
inc
add
sahf
push
jbe
push
jns
dec
lods
out
call
sbb
mov
xchg
clc
in
std
arpl
in
sbb
in
adc
loop
nop
jg
sbb
lahf
ret
jecxz
insl
xchg
cmp
cltd
icebp
mov
push
loopne
jnp
mov
jns
dec
push
negl
dec
mov
cmpsl
je
out
xorl
outsl
mov
mov
cmc
pop
dec
push
push
test
and
rolb
lahf
adc
sub
das
and
mov
test
push
mov
and
dec
std
addr16
cmp
pop
dec
stos
xchg
xor
mov
lods
jb
lcall
jno
xor
popf
push
rcr
cltd
or
imul
sbb
dec
fisubrs
xor
adc
sbb
mov
add
add
sbb
aas
das
push
sub
jg
inc
push
inc
cmp
xchg
test
dec
jnp
cld
int3
push
mov
mov
iret
push
inc
inc
pop
mov
jg
sub
push
aaa
adc
push
jg
addr16
and
negb
adc
sub
hlt
fists
dec
sbb
jecxz
addr16
inc
push
popa
adc
cld
cmp
push
fbld
mov
repnz
fists
mov
xchg
andl
jae
dec
scas
dec
add
push
mov
cmpsb
push
maskmovq
notl
xchg
or
sar
aam
pop
cwtl
sbbl
pop
xchg
and
xor
incb
xchg
xorb
jg
adc
aas
adc
test
mov
arpl
sbb
jp
xor
sbb
inc
mov
sbb
into
jge
dec
lea
add
mov
fucomi
jl
js
cmp
sahf
cmp
dec
mov
jo
cld
repnz
dec
mov
pop
push
into
shl
je
jle
dec
fstpl
xchg
ds
ds
inc
pop
fiaddl
je
test
mov
push
push
sbb
mov
mov
mov
stos
add
test
mov
add
adc
lods
repz
outsl
lcall
xor
imul
mov
add
jb
sti
jmp
xor
sarl
push
push
pop
inc
test
cmp
negb
lret
std
fwait
sbb
jmp
push
imull
insl
cmp
fnstsw
out
push
or
and
scas
popf
int
ret
mov
sahf
out
xchg
mov
jne
ja
fadds
ror
lret
sar
bound
addr16
xchg
xor
xorl
push
enter
lea
adc
adcl
mov
push
ljmp
fnstenv
sub
mov
stos
sub
shl
or
xchg
push
test
sbb
mov
push
push
mov
push
cmpsl
or
cmc
dec
fimull
inc
aam
mov
out
loope
push
cltd
cmpsl
cmc
ljmp
pop
fwait
es
je
xor
inc
push
je
insl
and
xchg
std
jns
jb
inc
mov
push
clc
xor
lods
dec
adc
pop
pop
push
aam
das
jge
ja
jg
aad
stc
jg
inc
cmp
aad
pop
pop
cmp
movsl
je
ja
push
mov
cmpl
in
rcrl
rolb
cs
fisttpll
mov
popa
mov
sahf
clc
pop
fiaddl
pop
inc
pusha
in
movsl
fmuls
into
mov
fmull
loopne
jnp
mov
ja,pn
es
fdivp
dec
ret
in
jns
xchg
in
sub
sub
in
fdivp
xlat
das
ja
xchg
in
push
xchg
jns
rolb
jmp
push
out
cmp
test
test
jg
call
mov
dec
xor
ljmp
dec
cmpl
mov
cltd
push
pop
push
jp
dec
xchg
push
mov
dec
icebp
mov
out
rol
imul
cs
xchg
icebp
dec
mov
dec
loopne
mov
out
or
in
sbb
std
lcall
dec
pop
pop
add
sahf
stc
xchg
cmp
lret
out
push
push
imul
rcll
xorl
pop
in
int3
fistpll
jg
jno
or
iret
mov
into
add
cmp
ret
and
push
adcl
lods
jns
fnstcw
add
mov
jnp
pop
pop
xor
mov
int3
fistpll
inc
outsl
movsl
sub
mov
jno
adc
push
mov
jae
insl
sahf
data16
repnz
mov
test
cmp
mov
cmp
icebp
jge
mov
orl
add
xchg
shll
inc
ja
jp
fldl2t
cmp
lea
jecxz
add
inc
sub
cli
aam
sbb
ficomps
jmp
mov
ja
dec
aam
fisubrl
adc
imul
inc
jg
xchg
stos
mov
test
scas
les
pop
idiv
push
jge
lods
test
lea
jae
jl
divl
add
lock
jg
gs
insb
lret
bnd
lock
shl
jo
arpl
les
xor
add
mov
jns
call
xchg
imulb
bound
aad
add
pop
push
mov
subb
test
inc
hlt
les
or
push
jl
in
and
cmp
cltd
testb
fcoms
je
addl
leave
outsb
jg
mov
pop
jnp
cmp
dec
fwait
ja
mov
fxch
push
pop
xchg
or
dec
clc
cmp
mov
adc
hlt
or
popf
idivb
mov
int
sub
sbb
push
hlt
mov
xor
std
or
jae
fimull
loopne
test
jecxz
cmpsl
mov
popa
adc
clc
clc
mov
xor
call
mov
ds
push
inc
adc
pop
jnp
inc
adc
jge
out
test
or
cwtl
push
sbbl
and
test
sbb
out
mov
jge
mov
push
jle
lea
jae,pt
rcr
add
mov
popa
xchg
test
pop
nop
scas
pop
jge
fnstsw
add
mov
lods
mov
sahf
xor
jns
mov
add
fisttpll
or
insl
push
scas
and
or
leave
push
jl
or
xchg
adc
cmp
lea
push
iret
es
lods
insb
pushf
sub
jge
xorl
mov
sub
xchg
das
sub
dec
call
push
sub
dec
sbb
jl,pn
aas
sbb
add
inc
mov
rol
lea
and
sbb
or
test
and
xchg
push
in
ret
sub
test
sub
insb
jge
in
jno
xor
cli
dec
push
pop
fucomip
faddl
xor
test
mov
cld
xchg
xchg
sbb
das
shlb
push
xchg
jecxz
test
cmp
jecxz
push
stos
jae
lock
in
mov
pushf
sbb
fisubrl
and
in
xor
sub
pop
jns
add
mov
xlat
push
out
adc
cld
push
fldcw
int3
push
ds
xchg
inc
out
pop
ja
sahf
jb
fcmovu
or
and
push
test
push
nop
mov
dec
rorl
shll
dec
rorl
add
or
test
stc
adc
inc
call
adc
mov
jae
scas
sub
scas
divl
mov
dec
aas
inc
cmp
nop
scas
sub
icebp
iret
xor
xchg
jno
imul
je
adc
bound
sbb
aas
mov
pop
lret
sub
cmp
in
test
jge
lcall
int
fistl
in
fildl
int
jle
push
add
and
xchg
jle
cmp
insb
inc
lcall
fwait
mov
push
or
inc
xlat
call
mov
outsb
in
pop
jecxz
xlat
lods
push
jg
push
dec
cmpsb
insl
pusha
js
jns
xor
jmp
pop
stc
and
xor
lret
xchg
rcrl
fsubr
mov
mov
add
push
test
jno
stc
in
pop
mov
cmc
jbe
cwtl
loope
adc
cmc
jg
out
std
xchg
inc
lret
mov
aam
sbbl
mov
ja
int
pop
nop
in
out
mov
mov
adc
rol
mov
add
in
push
dec
pop
xchg
cmpsb
sahf
cmp
mov
test
adc
arpl
cmp
es
inc
aam
arpl
aaa
gs
loopne
dec
adc
push
jmp
lock
loop
cld
or
push
xchg
sub
mov
loop
jmp
jmp
imulb
cmp
div
std
jmp
or
push
sbb
ljmp
loop
jae
xor
pop
jp
cmpl
jo
test
push
or
pop
push
sbb
push
adc
jns
jl,pt
sub
and
mov
mov
or
in
mov
dec
cltd
out
mov
mov
sub
adc
xor
push
dec
pushf
jae
stc
iret
inc
push
lea
mov
cmpl
movsb
pop
and
jae
cmpsl
add
xor
mov
icebp
and
xor
outsl
inc
mov
jns
pop
mov
or
rclb
rep
scas
outsl
mov
aaa
xchg
or
stc
add
data16
fidivrs
pop
popa
jge
aas
jg
push
xor
icebp
mov
arpl
icebp
push
pop
addl
test
icebp
test
lcall
call
jp
jns
cmp
sahf
cmp
aaa
pop
test
jp
jge
cmp
scas
outsl
out
jnp
ds
xchg
cmp
adc
push
pop
test
js
icebp
xor
push
lret
mov
mov
das
push
fidivs
test
movsl
dec
mov
icebp
out
adc
push
push
xchg
popf
inc
mov
jle
lret
dec
lods
nop
inc
mov
pushf
imul
scas
inc
push
sbb
pop
repnz
jle
cmc
dec
jmp
push
mov
dec
mov
pop
clc
aaa
mov
dec
push
lods
xor
test
mov
movsb
test
cmp
sub
sub
into
mov
arpl
outsb
jns
jl
inc
xchg
sahf
das
adc
aas
lcall
les
dec
pop
pop
cmp
repnz
jnp
jnp
andl
mov
lods
pop
mov
dec
push
dec
mov
movsb
dec
add
add
push
test
or
fdivrs
sbb
adc
jg
xchg
aam
mov
xchg
pop
aad
out
inc
xor
pop
sub
xor
std
or
xor
inc
xor
repz
or
in
xchg
inc
inc
or
pop
xchg
shlb
pop
inc
repz
lock
or
std
andl
xchg
push
sub
add
mov
push
or
pop
lret
push
cmp
call
scas
fdivr
jnp
and
cmp
insb
jno
lods
sub
sbb
fsub
and
inc
insb
push
add
sarb
pop
fwait
sti
test
and
push
hlt
les
jmp
incb
add
or
add
test
fcmovbe
adc
jnp
xor
cld
dec
push
dec
add
ret
sub
add
test
insl
loope
iret
pop
fcomps
mul
jbe
lods
push
mov
mov
lea
fs
cmp
xor
jae
cmp
lret
push
and
ret
adc
mov
push
shlb
test
rclb
jge
data16
sahf
push
lret
out
and
cmp
adc
dec
push
dec
aas
test
and
imul
jp
outsb
mov
imul
test
mov
sub
push
test
pop
pop
test
pop
fs
sbb
sub
das
jb
lea
mov
arpl
call
mov
sub
nop
mov
jp
push
mov
in
xorl
ror
mov
jno
add
sbb
out
adc
jno
jnp
dec
push
jne
mov
cmp
enter
pusha
sbb
push
mov
repz
jp
push
pop
cmp
inc
repnz
icebp
sub
icebp
xor
in
mov
out
pop
jle
dec
xor
std
std
mov
dec
std
jle
ss
xor
sti
in
fldl
push
sti
jle
ja
ss
icebp
stc
mov
outsb
cmpl
and
push
idivl
mov
add
sbb
out
jns
push
sbb
das
add
adc
aam
mov
mov
mov
cltd
icebp
test
arpl
in
inc
mov
lea
pop
cmc
pushf
pop
test
adc
mov
das
push
mov
mov
stc
push
call
mov
adc
idiv
mov
fisubrl
and
xchg
mov
mov
in
mov
adc
pop
addr16
cld
dec
adc
and
push
lds
or
push
out
repz
imul
jns
push
xorl
cmp
pop
add
add
scas
sbb
adc
shlb
ret
add
ja
xchg
sbb
mov
enter
ds
jne
jae
ja
or
add
test
push
xchg
cmpsl
pop
stc
push
call
push
jle
pop
sbb
jo
pop
lret
mov
fnstenv
das
pop
mov
xchg
push
je
dec
pop
test
xchg
jbe
pop
push
sub
sub
push
pop
mov
aam
test
test
and
ja
movsb
sbb
jge
jg
mov
fs
jb
cs
pop
icebp
push
or
js
sub
je
push
sub
push
icebp
dec
jns
jp
rclb
and
dec
lods
add
lret
xor
aad
pop
lahf
mov
fsubrl
cmpl
dec
fdivrl
jo
not
fsubp
imul
sbb
enter
sarb
sbb
push
ljmp
push
cmp
jmp
jo
xor
jge
xchg
pop
add
adc
cltd
icebp
fldl
push
aaa
fistpll
lret
aas
jle
pop
sub
mov
jge
sbb
loopne
imul
daa
out
sub
jns
dec
jnp
xchg
outsb
mov
mov
repz
jmp
pop
push
cmpl
adcl
pushf
pop
frstor
into
stos
mov
loope
push
dec
xchg
inc
and
popf
pop
push
into
in
and
inc
nop
sub
int3
cmp
call
jl
mov
ljmp
mov
xchg
sahf
xor
mov
adc
push
cmpl
pop
cmpsl
fistpll
sti
pop
lea
cmpsb
pop
iret
data16
add
and
imul
push
sti
adc
cld
push
out
movsb
test
push
pushf
mov
push
stos
in
cld
xor
stc
call
cmp
cld
push
sub
sub
cld
jno
ja
add
mov
lock
adc
pop
imul
pop
xor
ret
and
inc
jecxz
add
fistpll
ficoms
cmpsb
jp
jecxz
xor
sarb
push
dec
xchg
and
jae
lods
jl
out
dec
xchg
leave
dec
stc
and
loopne
jecxz
and
pop
and
or
cmpsb
push
mov
mov
fwait
push
push
dec
xor
jne
xchg
cmpl
sub
inc
xor
fimull
rcrb
xchg
out
lods
in
pop
test
inc
sub
push
inc
pop
mov
mov
mov
pop
scas
mov
imul
mov
push
sub
or
sbb
jecxz
push
loop
adc
push
and
xchg
jecxz
loope
out
jae
sbb
lds
inc
and
test
xor
push
sub
fucom
shr
imul
icebp
mov
out
fcmovnb
stos
lods
loopne
and
mov
negl
mov
and
mov
push
push
sbbl
das
xor
adc
cwtl
fldenv
mov
xchg
mov
or
movsl
test
xchg
cltd
pop
pop
lds
insb
mov
xchg
cmp
leave
xchg
add
fsubs
lcall
push
or
inc
jae
test
test
or
inc
push
sub
bound
in
inc
test
test
mov
cmc
movsl
and
mov
das
xor
fildll
xchg
mov
and
push
pop
test
adc
inc
pop
mov
sbb
sahf
xchg
fistpl
lods
jne
test
xchg
lea
cmp
xor
jmp
xchg
xor
mov
mov
adcl
push
xchg
push
inc
or
push
iret
mov
mov
lds
addl
lcall
add
lea
sbb
jnp
cmp
mov
and
test
push
cmp
out
xchg
xchg
push
adc
add
in
cli
sbb
stc
xchg
pop
lahf
add
es
roll
mov
hlt
mov
mov
ja
adc
xor
sub
mov
cli
cmpsb
insb
add
sub
mov
jno
fwait
xor
test
mov
ret
jb
adc
clc
negb
adc
lock
mov
push
lock
xor
dec
add
mov
jp
mov
mov
pusha
fwait
pop
jg
aas
jp
ljmp
aas
push
jl
sub
adc
adc
sti
dec
scas
adc
inc
dec
dec
out
push
adc
mov
dec
test
enter
xor
xor
bound
dec
and
outsl
fs
outsb
lret
sub
decl
inc
leave
out
int
pop
fiadds
jecxz
xor
lret
jno
xchg
loop
jnp
jnp
std
ja
push
mov
jmp
lods
push
cmp
push
or
inc
inc
pop
ror
adc
mov
call
xor
sbb
xchg
sub
push
test
test
je
push
or
int3
pop
push
jne
jle
aas
xchg
cmc
aad
addl
mov
scas
loope
dec
das
jg
push
jbe
mov
insl
stc
sub
dec
push
in
std
jnp
jg
sbb
test
outsl
in
ds
test
test
clc
push
xchg
imul
sub
test
mov
jp
sub
jbe
mov
repnz
fstps
push
loope
mov
lahf
ja
xchg
loop
pop
std
cltd
push
lea
inc
ds
lods
or
jne
xchg
pslld
mov
cmpsb
xchg
dec
and
fildll
outsb
cmpsl
cs
push
mov
dec
rclb
or
adc
notl
cmp
lods
jae
sti
pop
inc
and
jp
icebp
jl
xor
lea
repnz
sbb
int3
ljmp
popf
sub
shlb
or
push
adc
clc
jne
jp
push
ret
inc
jne
push
loope
xor
lods
dec
jl
loopne
fwait
lds
xchg
mov
jb
xor
xchg
mov
jp
push
jne
loop
pop
pop
mov
xchg
push
test
stos
mov
bound
lock
jl
ss
fsubrl
lods
in
movsl
icebp
cmpsl
mov
pop
leave
pop
fwait
std
mov
jo
inc
mov
mov
mov
xchg
jne
mov
sub
mov
jb
loop
jns
jbe
popa
int3
lods
shlb
xor
pop
mov
xchg
add
je
pop
loop
push
lret
mov
jne
pop
mov
dec
push
insl
jbe
cmp
jbe
or
xchg
push
jne
repnz
or
push
imul
pop
js
lret
outsl
or
mov
xchg
adc
push
stc
mov
in
and
mov
mov
mov
addr16
fidivrs
popf
std
jne
in
mov
or
sbb
std
push
ja
pop
mov
shl
loopne
sub
pop
cmpsb
jb
lcall
jbe
inc
adc
dec
into
insl
jne
xor
add
jne
cmp
jb
adc
push
rcll
sbb
cmp
test
jbe
js
dec
addr16
outsl
sbb
cld
cmp
mov
mov
lock
loop
push
les
jnp
fimuls
fmull
push
push
or
sbb
lret
jb
jne
popf
es
cwtl
sub
mov
aaa
sub
mov
movsl
add
jb
xor
pop
imul
data16
sub
or
sti
insb
jne
pop
inc
call
jne
xlat
faddl
dec
divl
cld
push
dec
push
jne
push
int3
das
cmp
fwait
or
pop
push
shlb
push
mov
rcrb
mov
mov
es
scas
in
push
xchg
xor
pop
aad
jge
ja
rcll
mov
pop
imul
outsl
mov
cmpsb
fnstenv
test
or
mov
jecxz
and
test
push
add
popf
aas
jecxz
popa
and
fstpl
jae
xorl
mov
das
and
lock
jnp
scas
outsl
add
push
es
jge
jge
jge
out
imul
repz
dec
push
sbb
push
jg
aaa
jmp
loopne
fcoms
adc
inc
sbb
push
fwait
icebp
jmp
pop
dec
adc
in
pop
add
in
push
push
out
arpl
push
imul
push
adc
xchg
es
inc
dec
imul
mov
gs
add
add
aam
lods
mov
xorb
jnp
jns
mov
add
nop
mov
push
icebp
imul
push
sub
outsl
das
or
lea
js
push
xchg
push
sub
lea
jl
pop
mov
mov
daa
repnz
push
adc
cmpsb
or
push
mov
xchg
repnz
jg
loop
orl
adc
fmull
js
ljmp
sub
mov
rclb
in
popa
push
in
add
xor
addr16
sub
mov
add
sbb
cmp
or
sbb
ja
sub
xor
aaa
jo
inc
lret
test
mov
adc
repnz
lds
jbe
push
arpl
adcl
sbb
xor
fbld
adc
je
jno
lea
and
xor
addr16
add
mov
xorl
lock
and
adc
cmp
cmp
push
ja
cmpsb
imull
mov
mov
repnz
dec
mov
jle
jp
dec
xchg
outsl
lea
fistl
mov
imul
scas
xor
jge
inc
and
std
andl
testl
ds
pop
push
decl
pusha
add
push
jae
sub
rdpmc
xor
jge
es
jmp
xor
sbb
add
push
cs
inc
lock
rclb
sbb
push
adc
push
or
mov
test
jnp
jge
sbb
xchg
icebp
pop
pop
in
aas
sbb
push
pop
cs
jle
xor
push
dec
scas
repnz
mov
push
sub
lods
icebp
das
sbb
fists
sub
test
push
sub
cmp
das
call
jo
mov
or
lods
and
lods
pop
pop
test
testl
push
adcb
mov
adc
pop
pop
test
push
jp
inc
loopne
cmp
xchg
dec
adc
ja
imul
imul
sbb
inc
test
mov
sub
add
mov
loopne
jno
jle
jns
stc
mov
das
jae
push
leave
push
sbb
inc
std
loopne
or
sbb
repz
test
jno
xor
dec
jns
icebp
inc
jae
sub
adc
lock
repz
repnz
das
cmc
cmp
mov
icebp
in
iret
sti
cmp
ficomps
out
icebp
ficoms
orl
pop
xchg
push
sub
dec
ljmp
mov
push
call
sub
fnstenv
shrb
xor
xchg
lods
icebp
aam
in
push
mov
push
push
mov
or
push
fildl
xchg
iret
repnz
push
jns
roll
test
ja
ja
xor
xor
jns
jnp
adc
adc
jnp
push
jnp
inc
xor
or
push
cmp
inc
or
cwtl
movsl
testl
mov
inc
cli
sbb
inc
or
xor
insb
mov
pop
bound
pop
movsb
jo
imul
sbb
test
pop
sbb
jnp
cmp
mov
push
das
test
or
sub
push
xchg
jge
stos
push
cmp
das
jge
cwtl
sub
xchg
lods
add
ljmp
mov
daa
xor
cmp
nop
scas
das
inc
adc
int3
imul
scas
or
aaa
pop
divl
mov
cmpsl
xchg
scas
adc
sbb
mov
pop
cmp
rcrl
jae
cmp
pop
xor
lret
add
cmpsl
or
or
aas
xor
test
cmp
pop
dec
addr16
out
push
pop
inc
clc
xor
dec
test
inc
sti
cli
addr16
push
in
sti
icebp
sub
xchg
cld
out
jns
pop
std
mov
xor
and
dec
inc
xor
jmp
push
and
cmp
icebp
vpand
cmp
popf
pop
push
fldt
pushf
lock
std
push
sub
push
sbb
rorl
and
js
jg
cld
sbbb
mov
mov
rdmsr
dec
addr16
dec
mov
cmp
and
nop
popl
xor
sbb
jge
mov
push
pop
outsb
iret
jnp
sub
pop
cltd
lock
int
sub
sahf
mov
push
jbe
jnp
test
mov
jge
sahf
inc
and
stc
jge
xor
shlb
push
pop
mov
sbb
dec
push
jmp
lock
cmp
adc
add
pop
jmp
in
xor
outsb
iret
fstps
xor
mov
add
addl
arpl
into
js
or
push
jns
xor
push
aaa
in
lahf
cs
bound
fwait
xchg
adcl
cmp
iret
test
push
add
std
dec
push
add
mov
rolb
mov
cld
push
push
push
inc
movsl
push
jl
push
xor
push
inc
mov
mov
xchg
sbb
mov
cmpsb
dec
bound
xchg
dec
imul
out
imul
cmp
addr16
adc
test
xchg
arpl
xor
sbb
jo
mov
jbe
mov
dec
xchg
fwait
push
add
xchg
sbb
jae
iret
jge
fildll
mov
mov
aas
push
xor
or
out
pop
in
mov
sbb
jmp
in
push
bswap
jge
pop
mov
sub
xchg
ret
xchg
stos
push
sbb
or
aaa
bnd
xchg
dec
mov
xchg
cmp
imul
out
cmp
sub
xchg
adc
xor
jbe
adc
and
adc
xchg
cmp
loope
lret
shl
imul
dec
adc
addl
repnz
enter
std
jnp
das
cmp
jno
xchg
inc
outsl
pop
icebp
jns
jns
push
mov
mov
xor
cmp
sahf
adc
xor
adc
jle
lahf
sbb
or
sub
inc
cmp
fxch
jne
mov
ja
mov
push
iret
mov
cs
or
cmp
repnz
in
and
enter
push
arpl
jg
shlb
push
cmc
xchg
dec
repz
push
mov
and
out
adc
add
cmc
cwtl
push
jg
or
mov
sti
xchg
mov
lret
mov
cwtl
aad
pop
bound
push
sub
push
sub
mov
jbe
xchg
js
test
gs
sti
jbe
xor
adc
cli
sti
lret
dec
rclb
popf
fwait
xchg
mov
cmp
testl
arpl
mov
inc
aam
pop
ja
pop
cmp
and
mov
sar
adc
mov
pop
adcl
out
mov
jb
fs
inc
mov
xor
mov
xor
xchg
vpmacsww
iret
aam
ret
leave
push
adc
ja
xor
jns
das
push
subl
andl
cmpsb
outsl
dec
int
data16
or
outsl
ds
sahf
imul
test
aad
test
in
gs
jecxz
inc
add
or
test
fidivs
fidivrs
out
or
lret
inc
mov
jbe
adc
jg
dec
jge
add
push
arpl
imul
xchg
dec
nop
and
movsb
xlat
jae
xchg
jae,pn
mov
fcoml
cmp
pop
test
orl
pop
repz
inc
mov
and
and
orb
in
cmp
bound
pop
pop
push
insl
lahf
xchg
in
jnp
cwtl
rolb
sub
jne
shll
adc
jns
cmpsb
int
icebp
das
cmp
pcmpeqw
ja
push
jne
xchg
mov
scas
sbb
xor
jo
std
push
fnstsw
popf
sbb
mov
rcrb
aaa
pop
ds
pop
jne
mov
fdivrl
jp
cmp
jne
fidivrl
mov
xchg
js
cmp
clc
fdivrs
stos
mov
fwait
iret
sbb
xor
push
jge
jb
xor
adc
je
icebp
jb
hlt
aad
orl
dec
push
lea
xchg
cmp
jbe
cmp
repnz
xor
js
sbb
mov
jb
aaa
jo
scas
sub
or
and
jbe
and
adc
or
pop
fs
lret
jo
cmpsl
imul
mov
jne
mov
addr16
daa
add
sbb
stos
and
loope
xor
repz
cli
push
sahf
add
jne
cmp
xchg
mov
rcrl
pop
aad
into
call
dec
repz
faddp
sub
jo
add
mov
mov
sarb
xor
sub
pop
ja
inc
push
negl
icebp
mov
push
xor
cmovp
scas
lret
clc
cmp
movsb
sbbb
cmp
push
shlb
mov
sbb
and
stos
xor
sbb
jne
pop
int
xlat
imul
lret
mov
and
stos
aaa
adc
pushf
jo
enter
and
jne
pop
test
jne
jl
mov
jne
fisubrl
mov
std
mov
mov
jle
inc
and
mov
ror
pop
testb
push
ficoml
pop
or
ja
mov
inc
dec
xchg
aaa
outsl
or
dec
scas
or
sub
cmp
cwtl
popf
into
das
lcall
stos
lret
sub
cmpsl
repnz
daa
into
xchg
jne
mov
cli
mov
mov
cmp
std
push
in
ja
js
pusha
insl
push
icebp
shll
fistl
and
iret
rolb
mov
stos
mov
js
jne
stos
mov
in
jne
sbb
outsb
shr
pop
es
cwtl
mov
mov
leave
jle
cmpl
stos
adc
or
outsl
jae
popa
ficompl
pop
lret
movsb
xor
push
fld
neg
inc
mov
and
jo
ja
pop
inc
cmpsb
in
in
pusha
mov
insl
fcomps
icebp
negb
mov
test
dec
std
pop
jnp
lock
adc
sub
and
rclb
ret
mov
addr16
adc
mov
daa
les
mov
xor
inc
jne
lods
data16
nop
cmc
add
pop
dec
loop
or
sahf
fistpll
sbb
in
cmp
jne
jge
das
xor
sub
and
lods
in
fsubs
shll
xchg
jne
jp
in
fbld
iret
sub
and
jae,pt
fmuls
rolb
and
lea
cmc
scas
sub
stc
jne,pt
mov
or
push
hlt
inc
xchg
add
in
scas
jb
adc
jbe
and
cmp
jae
jmp
out
fcoms
jle
mov
adc
jl
xor
pushf
arpl
in
sub
jns
inc
dec
and
and
es
push
dec
adc
xor
fwait
cmp
imul
in
outsl
mov
or
leave
and
jne,pt
cmc
adc
mov
clc
jne
inc
sahf
fisubrs
or
xchg
fs
lcall
int
out
sbb
test
jne
dec
dec
in
or
jne
testl
clc
adc
jne
test
sbb
jne
inc
stc
or
push
cmp
fwait
cld
outsb
es
stos
imul
data16
pushf
ljmp
imul
daa
pop
and
mov
dec
shrb
jmp
sub
jae
lock
sub
in
in
sahf
jmp
mov
mov
dec
bnd
add
sub
or
fdivrp
pop
mov
inc
mov
sub
mov
sub
push
jne
pop
sahf
sub
jne
dec
push
adc
mov
data16
clc
jo
sub
sbb
enter
cld
fildll
lds
push
push
push
xchg
jge
jne
cmpsl
pop
enter
jmp
rclb
loop
repnz
clc
stos
mov
sahf
push
cltd
loopne
dec
sub
shlb
adc
and
outsl
fistps
xchg
in
dec
in
sbb
inc
mov
popa
mov
xchg
arpl
jp
scas
into
out
mov
lock
aam
out
jmp
cwtl
inc
fldenv
jmp
test
mov
adc
mov
enter
loop
les
jne
cmp
mov
mov
stos
insb
leave
scas
clc
out
in
or
add
repnz
mov
jmp
pop
pushf
insl
add
sbb
pop
fdivrs
insl
aam
jbe
daa
rol
out
mov
adc
mov
push
mov
xor
sub
mov
repz
push
cmp
daa
mov
mov
roll
sub
test
nop
jne
iret
xor
push
and
mov
xchg
xchg
xor
jb
add
stos
roll
inc
cwtl
fnstenv
outsl
jne
out
call
xchg
mov
mov
sub
cmc
jbe
add
nop
dec
pop
addl
sbb
jle
and
stos
add
nop
and
popf
sbb
mov
ljmp
call
lods
aaa
mov
repnz
dec
mov
ss
mov
sbb
in
loop
jnp
push
push
test
jne
cmc
mov
mov
aaa
dec
jne
in
add
xchg
fs
repnz
pushf
bound
dec
out
jae
js
pusha
mov
dec
lahf
out
loope
jg
mov
sub
xchg
testb
sbb
fmuls
imul
add
xchg
test
pop
in
xor
xchg
decb
roll
dec
in
int
dec
sub
fdivr
ljmp
mov
sub
sahf
nop
push
shlb
fcmovbe
mov
mov
ja
jmp
in
jge
cs
jbe
iret
rol
jbe
insl
outsb
pop
popa
jno
pop
je
data16
scas
dec
xor
jbe
stos
mov
gs
mov
bound
int3
jne
lods
add
sahf
sub
loope
mov
fmulp
mov
into
xchg
movsl
jne
xchg
push
int
addr16
lcall
lea
ret
dec
jne
test
sub
xor
inc
ljmp
mov
subl
jne
xchg
fbstp
imul
jecxz
pop
xor
jge
daa
push
mov
lds
cmp
lret
pop
je
jo
std
mov
xchg
repz
movsl
lret
adc
mov
movsb
enter
push
cmp
jne
aas
and
and
sub
outsl
out
repnz
xlat
je
pop
cmc
ds
sub
sub
loopne
sub
cmp
imul
dec
jecxz
pop
jne
push
nop
adc
adc
push
ret
jne
xor
dec
mov
out
mov
and
sub
mov
jne
fisubrs
jne
insb
push
mov
rcr
ja
mov
call
jo
inc
pushfw
inc
inc
lods
mov
dec
stos
mov
and
daa
xor
xchg
xchg
inc
gs
jne
sbb
push
int
mov
ja
stos
pop
aam
mov
xchg
dec
fwait
jne
mov
out
addr16
cs
adc
sahf
jbe
lods
movsb
jne
leave
pusha
pop
cli
out
bound
into
add
ljmp
push
lret
jne
xchg
sub
stc
jne
sub
ljmp
mov
dec
jne
cmpsb
inc
sub
push
cmp
pushf
add
mov
arpl
fdivs
test
lcall
lods
jne
shll
addr16
jno
fnstcw
jnp
ljmp
popl
dec
xchg
jne
jecxz
mov
xor
mov
insl
testb
and
jno
leave
lcall
inc
out
cmpsl
push
fs
sub
pop
insl
inc
cmp
pop
jae
out
pop
sub
sahf
cwtl
and
fistps
out
out
jne
scas
jmp
jne
pop
stos
leave
push
fwait
daa
xor
out
adc
push
jge
add
push
sub
xor
fidivrs
in
in
mov
push
popf
jbe
test
in
insb
call
sbb
xor
mov
loop
cmp
idivb
fimull
stos
xlat
adc
js
jne
in
mov
sbb
rclb
adc
jne
sbb
test
dec
into
pushl
and
mov
cmp
dec
movl
push
mov
out
adc
jnp
push
loop
sahf
aam
jne
dec
mov
mov
cmp
fsubs
dec
add
clc
shlb
xchg
lret
scas
mov
test
pop
insl
mov
mov
add
cmp
jae
mov
and
call
testb
stos
ret
add
mov
outsb
loopne
out
shrl
aam
inc
mov
call
movsb
mov
sahf
jne
jl
mov
pushf
adc
int3
pop
fnstcw
cmp
jbe
sbb
adc
pop
jmp
xchg
inc
scas
loop
sub
mov
shl
andb
and
mov
gs
or
push
mov
lahf
push
sub
popl
jne
mov
adcb
push
in
int
repnz
jne
pop
fimull
cmp
daa
hlt
jecxz
mov
pop
adc
jne
fldl
dec
sarl
das
mov
jbe
mov
nop
gs
cmc
add
dec
xchg
aaa
dec
mov
in
jne
out
cmp
jae
sbb
insb
xor
mov
sub
adc
and
jae
mov
push
mov
jne
daa
or
in
cmpsb
addr16
int
fadd
fwait
and
pop
fmull
adc
pop
xlat
push
sarb
js
call
movl
pop
test
rol
sahf
faddl
stos
lock
jne
mov
aaa
inc
mov
lods
pop
stos
or
push
ja
sub
sbb
jbe
out
pushf
pop
jne
pop
mov
push
jne
pop
sub
mov
inc
jne
push
or
pop
jne
popa
xor
subl
iret
cld
fisubrl
sbb
and
push
movsb
xor
jne
out
xor
sbb
int
jne
movsb
mov
clc
jne
imul
sbb
mov
arpl
test
rcrl
jmp
out
or
and
jne
pop
loop
ret
dec
mov
gs
stos
jne
outsb
scas
cwtl
push
loope
fidivs
xor
cmpsl
pop
ja
fists
mov
cs
arpl
in
cmpsl
shlb
leave
lahf
sub
adc
lods
jne
xor
dec
cmc
imul
stos
cltd
xchg
out
pop
adc
ret
aam
pop
push
addr16
ljmp
stc
sbb
jne
repz
mov
mov
jg
and
lods
jne
xchg
dec
xlat
jecxz
adc
addr16
fidivl
jg
test
stos
inc
fcmovnb
mov
test
test
mov
push
dec
dec
mov
out
cmp
sti
add
sbb
fcom
dec
negl
adcl
jne
loope
push
clc
pcmpgtw
pop
xor
outsl
int3
xchg
adc
and
insl
mov
imul
int3
mov
stos
mov
or
adc
or
sbb
insl
in
stos
jne
insb
scas
mov
or
cmp
in
jle
mov
leave
dec
jecxz
pop
cmc
pop
lret
int3
sub
inc
or
mov
roll
adc
jne
xor
fld
lock
in
mov
and
mov
out
xchg
pop
lret
dec
movsb
loopne
imul
dec
sarl
jbe
lahf
inc
xor
add
daa
push
inc
imul
out
dec
pop
mov
sub
jecxz
sub
xor
mov
out
jne
mov
mov
jne
fistps
pop
lods
pop
cmpsl
ja
imul
mov
addr16
or
jl
lods
jne
jns
lea
das
jne
sub
ficompl
jne
sub
test
outsb
mov
mov
or
into
loopne
sub
add
fmull
mov
ja
mov
lret
fnsave
jne
test
addr16
daa
shlb
mov
data16
adc
jg
adc
jne
arpl
dec
rclb
call
adc
cs
aas
pop
sarb
inc
imul
sub
xor
fs
insb
stos
ja
xchg
les
sub
add
push
adc
xlat
mov
sbb
mov
sbb
loopne
mov
cmp
mov
mov
or
xchg
test
cmc
mov
testl
xor
jne
cltd
fidivrl
and
cmp
sbb
mov
sbb
outsl
insb
fimull
dec
inc
stos
pop
shlb
dec
pushf
insl
aaa
pop
xchg
mov
test
stos
or
pop
and
je
add
repz
pop
mov
xor
cmpsl
sub
stos
lahf
pop
xchg
fldcw
push
push
jne
mov
jne
adc
sbb
jmp
int3
dec
dec
ljmp
inc
movsb
jne
push
jne
scas
loopne
out
or
push
sub
adc
int
into
mov
adc
inc
in
sub
inc
fdivrp
iret
xor
cmp
jbe
dec
popa
sbb
out
xchg
fs
ss
sbb
jne
dec
sub
es
cmpsl
mov
cmpl
or
jae
sub
inc
jno
test
out
mov
inc
fldt
popl
es
les
mov
lods
rorb
jle
mov
pop
cmpsb
xchg
mov
scas
jge
cmpsb
lea
xchg
jbe
sub
mov
adc
lahf
bound
repnz
mov
data16
and
outsb
test
add
cmp
jecxz
jne
jnp
pop
in
mov
rorb
adc
mov
adc
push
jne
push
stos
in
icebp
scas
and
add
jne
dec
mov
jmp
cmp
mov
cli
inc
in
sub
adc
lahf
and
sbb
mov
shll
out
sbb
ret
jne
dec
sub
adc
leave
test
fidivl
scas
outsb
mov
lods
or
in
cli
jne
hlt
andb
imul
mov
in
jne
push
cmc
fidivrl
mov
in
cmp
jns
jecxz
adc
mov
insl
xchg
cmpsl
jbe
xchg
cmpsb
mov
scas
shl
dec
pop
mov
mov
mov
cmp
cli
shlb
out
out
dec
out
and
jne
daa
repnz
test
pushw
push
mov
sbb
scas
je
sbb
xchg
inc
jp
jne
pusha
push
hlt
jne
daa
stc
push
mov
lods
ja
pop
cmp
xchg
insl
scas
push
jne
int
fwait
mov
and
sub
cmp
iret
leave
imul
xchg
rorb
and
mov
cmp
fwait
loopne
in
dec
jne
les
jne
lcall
outsl
add
dec
repnz
adc
xor
das
hlt
imul
std
in
add
mov
ja
jne
add
adc
jo
pop
xchg
dec
lret
push
push
stos
sbb
push
bound
popf
jne
cli
cmpsl
xor
rolb
adcl
jecxz
mov
into
jne
lock
aas
cwtl
adc
nop
js
sub
xchg
cmp
or
adc
dec
jnp
push
js
clc
push
adc
frstor
jne
mov
inc
enter
popf
inc
ja
ret
loopne
sbb
xor
sti
jne
adc
mov
jne
outsl
push
push
out
xchg
repnz
push
mov
aam
scas
cmpsb
jne
jp
rorb
cmp
movsb
loope
and
pop
mov
jbe
adc
stc
rcl
push
fdivrp
cmpsl
ret
sub
inc
outsl
shlb
loop
jmp
jae
cwtl
pop
jo
lret
loopne
repnz
mov
jbe
hlt
xchg
loope
sbb
jne
sarb
xchg
cmpsb
inc
outsl
movsb
js
imul
add
lods
adc
scas
jne
push
orl
lds
xor
in
inc
in
xchg
cltd
ret
xorb
xor
pop
mov
push
xchg
jecxz
xor
addr16
jne
and
jmp
out
add
jae
xchg
sub
jns
fcomps
ss
push
int3
js
call
mov
daa
inc
stos
jne
or
fsubrl
jae
pop
jno
pop
imul
out
imul
insb
into
clc
xor
xchg
stc
xchg
mov
or
jbe
xlat
les
cwtl
daa
fs
and
mov
test
mov
pop
and
jo
mov
xchg
les
sub
es
sbb
fnstcw
lods
ret
dec
in
inc
jne
or
xor
cmp
pop
dec
inc
clc
movb
jne
enter
shl
divb
dec
stos
xor
xchg
in
adc
or
fsts
sub
enter
iret
mov
jbe
insb
mull
mov
int3
sub
inc
mov
ljmp
test
jae
lods
sub
test
adc
add
addl
jne
mov
jne
movsb
lahf
and
jne
rcrl
push
test
sarl
pop
adc
out
in
xor
adc
jbe
sarb
pop
and
xchg
jbe
jmp
sub
addb
pop
sub
addr16
adc
or
sbb
jne
dec
cmpsl
xor
sub
cmp
jnp
shr
sbb
cmpsb
in
jne
fnstcw
adc
sub
loop
lcall
or
mov
adc
shrb
or
pop
adc
xchg
mov
outsl
divl
or
cmp
and
int3
jne
pusha
pop
cmpsl
cmp
test
daa
dec
fidivrl
jl
jne
sbb
mov
ja
arpl
mov
mov
mov
fidivs
xchg
nop
mov
jne
loopne
loope
sbb
xchg
mov
dec
into
in
and
or
lret
adc
and
cmp
pop
fsubr
jne
movsb
cmp
inc
aam
push
jns
imul
sub
mov
jne
push
and
ss
mov
sbb
mov
jmp
fdivr
in
pop
leave
sbb
insl
jmp
in
pop
inc
scas
clc
and
mov
leave
xchg
adc
call
cltd
mov
in
ret
das
push
sbb
mov
mov
sahf
mov
lods
push
mov
sbb
enter
lock
fldl
push
ret
fcompl
adc
ss
mov
data16
test
fistl
cmpsb
es
inc
jne
push
xchg
jns
dec
mov
jbe
xlat
test
or
jne
or
daa
incl
jne
sub
dec
and
pushf
jne
fcomps
add
imul
test
scas
sub
stos
mov
stos
cmpsb
enter
xchg
mov
ds
cmp
xchg
mov
cwtl
call
mov
nop
xchg
pusha
jne
cmp
push
jp
pop
and
out
arpl
jne
add
stos
jg
shlb
mov
in
lcall
add
adc
clc
jmp
mov
pop
sahf
movsl
imulb
push
jne
jmp
mov
inc
jne
test
fsubs
in
inc
popa
xchg
adc
stos
pushf
jne
gs
ljmp
inc
stos
stos
data16
mov
sub
dec
inc
add
or
cmpsl
cmp
add
out
js
imul
out
call
xchg
lcall
lods
cmp
enter
mov
mov
sbb
and
loop
cmpsl
mov
repnz
sbb
jne
ljmp
sbb
cmc
adc
jne
cmp
movsb
test
cmc
mov
addr16
cmpsl
sub
mov
pop
lods
jle
push
mov
jbe
cwtl
pop
out
jne
bound
addr16
fsubr
or
add
xchg
arpl
xchg
mov
mov
xchg
lret
test
cmpsb
lret
jne
outsb
in
mov
sarb
out
in
pop
jmp
lods
mov
and
jne
ret
cli
shrb
nop
mov
jo
and
and
jne
adc
ret
cmp
in
add
daa
movsb
or
ss
mov
jbe
sub
stos
mov
push
inc
lcall
in
imul
xchg
test
rcrb
mov
jmp
stc
enter
notb
shlb
fnstenv
scas
sbb
pusha
mov
stos
out
sub
dec
sbb
loopne
mull
cltd
stos
inc
lret
fildll
fsubr
jno
aaa
xchg
mov
sub
inc
xorl
shrb
call
mov
mov
cmc
popf
fmul
mov
lods
ljmp
movsb
xchg
cltd
jo
cmp
idivb
out
fisubl
mov
int3
sub
pop
dec
pop
cmp
addr16
jae
mov
sbb
cli
gs
and
jne
fidivrl
inc
add
neg
js
enter
sub
or
xchg
lods
fs
shr
or
push
pop
mul
jg
cmc
outsl
adc
data16
in
arpl
nop
out
pop
popa
push
stos
rcll
call
sub
xchg
push
and
and
inc
int3
imul
and
cmp
jae
outsl
int3
insl
mov
adc
test
insl
inc
daa
jbe
cmpl
mov
arpl
andl
sbb
push
or
leave
popf
dec
std
popf
outsl
pushf
syscall
je
mov
mov
sbb
xor
icebp
bound
adc
loope
push
xor
push
dec
mov
xchg
mov
xor
insl
fdivs
sahf
push
test
push
jno
add
insl
imul
outsl
out
ljmp
icebp
jae
xchg
jmp
sarl
inc
fldenv
stos
mov
push
aad
pop
lret
int
and
jg
push
jae
push
gs
fwait
xchg
int
jno
jns
mov
add
xchg
popf
adc
dec
fisttpll
mov
mov
or
push
mov
call
or
add
xor
pop
ret
scas
mov
nop
push
jae
insl
pop
dec
push
mov
std
in
adc
xchg
jl
xchg
sub
and
repnz
imul
pop
pop
jl
mov
and
mov
sub
andl
lret
mov
cmp
xchg
xchg
lock
in
push
stc
push
je
mov
pop
ja
mov
popf
lret
pop
mov
movsl
mov
or
arpl
pop
xorl
mov
addb
pop
add
mov
sahf
xchg
icebp
sbbl
sbb
jns
mov
out
scas
ficomps
xchg
push
adc
jle
stos
or
leave
test
pop
bound
cmp
add
sub
out
add
sub
jg
aas
lds
fs
add
xchg
cmp
push
push
add
pop
pop
mov
push
jae
lea
gs
aaa
adc
ss
push
mov
je
adc
out
loop
dec
mov
xor
outsb
jg
jo
jo
jo
jo
jo
jo
jo
jo
adc
orl
push
xor
bound
push
xchg
jns
sub
mov
outsl
lds
dec
dec
dec
mov
sbb
scas
inc
lret
nop
movsl
loopne
xor
rclb
test
mov
testb
aaa
enter
lods
xchg
mov
or
mov
xchg
or
jo
mov
subl
mov
push
int
push
insl
mov
jmp
arpl
xor
adc
or
enter
lcall
imul
inc
mull
mov
inc
jp
sbb
xor
mov
std
stc
pop
lret
imul
es
jno
sarb
adc
jno
adc
dec
popf
sti
arpl
enter
aaa
and
popf
enter
lret
pop
xor
jmp
out
dec
ljmp
mov
lret
fimull
adc
adc
mov
aad
adc
adcl
rorb
push
lea
imul
xor
inc
std
iret
pop
xchg
mov
sbb
sbb
out
sub
adc
jg
in
sahf
call
sub
sbb
sbb
adc
adc
sub
xchg
mov
xor
xor
mov
mov
and
mov
pop
das
sub
pop
jp
add
ret
cmc
xchg
mov
imul
pop
mov
xor
repz
mov
xchg
dec
jecxz
push
jecxz
sbbl
bound
push
add
fadds
dec
lret
ja
mov
push
rcrb
pop
subl
int
dec
mov
and
repz
lea
jb
inc
xor
jnp
mov
xchg
test
inc
insl
sub
sub
pop
mov
dec
mov
jp
mov
lret
jb
dec
fnstcw
and
shr
test
in
dec
scas
fwait
inc
mov
in
or
scas
lret
push
je
lds
mov
int3
leave
push
into
mov
cmp
inc
mov
js
xlat
xchg
inc
lret
and
push
mov
mov
fidivs
icebp
pop
push
push
movsb
sbbl
lods
rclb
mov
xor
lds
leave
dec
aam
leave
leave
jg
xchg
xchg
dec
sbb
adc
cmc
sbb
jae
push
jno
outsl
pop
js
adc
push
mov
jae
ja
aam
push
xor
mov
jne
test
jge
outsl
leave
sbb
fsubrl
pop
outsl
ja
fldt
call
pop
push
push
jns
fwait
int3
push
cmpsl
sbb
xor
movsl
fidivs
adc
adc
pop
xorl
pop
mov
xorps
jne
je
mov
cmp
xor
adc
cmp
jne
sbb
mov
sbb
jne
xor
fisttpll
imull
popa
adc
shlb
popf
push
jle
xor
lock
jg
inc
and
lods
subb
pushf
lods
push
xchg
test
enter
inc
sahf
rolb
adc
test
mov
sahf
mov
lods
adc
mov
clc
jno
icebp
or
test
push
daa
xor
adc
pop
jne
mov
xchg
test
jne
das
push
pop
shll
pop
orl
jne
xchg
xchg
push
mov
fistps
scas
std
xchg
xor
cmp
arpl
sbb
mov
pop
push
stc
popf
push
jbe
mov
jle
adc
nop
inc
popa
pop
ds
sbb
ret
push
rolb
xlat
mov
fcomps
jne
in
movsl
xchg
es
out
cmpsb
and
jecxz
jne
test
add
les
inc
and
loope
mov
and
loop
test
pop
jne
movsb
push
fcoms
ljmp
rcl
xor
rcrl
sbb
cmpsl
ja
mov
mov
ss
iret
mov
pop
mov
mov
xchg
sbb
jne
pop
jb
and
or
sahf
shrl
imul
adcl
mov
pop
jl
dec
and
jae
adc
or
fildll
inc
xchg
sbb
jns
adc
enter
jne
push
mov
jae
pop
cmp
adc
lret
fwait
add
sub
pop
cmp
or
mov
xchg
mov
mov
jne
lock
lret
pop
out
push
xchg
mov
push
faddl
cmp
sti
mov
sarl
and
push
loopne
shll
jne
rol
fstpt
mov
jne
fisubrl
fstpl
out
fisttps
xor
sub
adc
out
pop
stos
dec
jne
dec
xor
ds
push
lds
mov
xchg
inc
pop
mov
pushf
scas
push
jne
dec
mov
ss
dec
cmp
addr16
imul
fisubs
out
lahf
mov
xor
cld
jne
fcmovnbe
cmpl
xor
inc
repz
sub
or
pop
jle
clc
adc
ficomps
sbb
xchg
xor
xchg
jne
mov
shr
jne
mov
iret
cmp
xchg
cli
jne
jecxz
jno
fwait
push
mov
in
pop
mov
pop
es
cmp
and
jne
loopne
pop
loope
gs
jne
bound
scas
xor
sub
sbb
adc
mov
nop
ret
pop
fdivrs
jae
in
pop
gs
mov
sub
cmc
push
faddl
je
call
push
ja
lods
and
lahf
xor
cmpl
jne
in
add
xor
sub
ffreep
adc
rcr
pop
sub
fistpl
add
xor
mov
lahf
adc
cmp
hlt
inc
jae
mov
xor
popa
mov
cli
jne
dec
fs
cmpsb
inc
mov
roll
and
jnp
std
cmc
push
mov
sub
adc
outsl
insl
cltd
mov
stos
adc
cmp
xchg
call
jno
lahf
inc
xchg
inc
mov
and
cmp
fcom
cmp
es
or
orb
xor
jne
xchg
sbb
fwait
outsl
mov
or
das
mov
sahf
aam
xor
hlt
jnp
jp
dec
mov
dec
mov
push
addr16
adc
fmull
rcrb
push
loope
xorb
push
leave
filds
jae
jbe
das
nop
jno
xor
sbb
xchg
fdivs
faddl
adcb
rolb
jecxz
pushw
pop
sbb
insl
mov
mov
jg
xchg
adc
aad
ja
jl
lods
and
mov
mov
outsb
adc
xor
push
loopne
jmp
add
dec
or
jge
in
mov
pop
sbb
jne
adc
aam
outsl
scas
pop
jae
addr16
mov
push
push
jne
mov
xchg
fwait
mov
out
iret
jns
jne
lret
push
xor
or
dec
daa
testb
xchg
jne
cltd
in
jns
dec
or
mov
jne
pop
fldt
mov
les
push
inc
jne
push
aas
add
inc
adc
xchg
fldt
adc
push
push
addr16
std
jne
loope
mov
lods
lods
lahf
push
sbb
sub
jne
out
or
jne
adc
adc
ret
inc
out
jne
icebp
aas
and
pusha
adc
jnp
xor
cwtl
fildll
ds
not
xor
insb
mov
loopne
int3
pushf
mov
sahf
mov
sub
aaa
fstps
mov
and
mov
call
das
insb
ja
adc
div
ljmp
sarb
fwait
and
lret
addr16
xchg
sub
push
lahf
in
xor
sbb
mov
outsl
dec
fistpl
js
jge
test
lock
or
jne
add
hlt
bound
mov
jne
repnz
xchg
xchg
jp
and
shlb
es
and
adc
mov
flds
out
adc
xchg
mov
mov
jne
in
fdiv
fsubl
cmc
movsl
jnp
mov
lds
sub
into
leave
rcrl
mov
call
push
cmp
inc
jne
inc
test
fcmovne
imul
stos
jne
pop
push
loop
mov
repz
lods
jbe
lds
mov
movsl
lret
dec
dec
push
xchg
sub
sub
scas
sub
jbe
repnz
negl
pop
jne
cli
dec
call
add
ret
sbb
daa
or
jp
and
out
outsl
fisttps
mov
mov
xor
into
pop
xorl
adc
inc
jno
xor
inc
jne
lods
out
shll
mov
lcall
movsl
inc
movsl
les
dec
jne
xor
out
ret
jns
xor
outsb
mov
add
pop
mov
jl
adc
inc
xchg
jne
push
push
ja
scas
call
mov
and
imul
cmp
sbb
jne
cmpsl
cld
push
jnp
sbb
scas
dec
mov
je
xor
cltd
sub
jle
mov
jp
cmp
jne
cs
lcall
rcl
stos
negb
inc
dec
cmpsl
je
push
ja
push
lret
dec
jmp
in
bound
lods
hlt
mov
pop
push
outsl
mov
negl
fstpl
inc
sub
cmp
mov
pop
int
jge
sbb
cltd
pop
cmp
fmul
dec
roll
push
pushf
jne
mov
pop
ja
adc
adc
or
mov
aas
jne
jns
repz
fdivs
mov
jo
jne
xchg
loop
enter
dec
loope
leave
pop
inc
jne
daa
push
pushl
je
fistpll
mov
sahf
mov
xlat
mull
mov
jge
xor
ljmp
mov
das
and
adc
xchg
mov
outsl
jo
mov
in
pop
mov
inc
jp
xor
clc
movsb
and
jne
sbb
mov
sub
call
pop
jne
insl
arpl
mov
jne
fst
ficomps
cld
mov
lods
push
sbb
cwtl
jne
push
add
fidivl
inc
clc
stos
push
jns
shr
in
jne
fwait
aaa
add
jne
adc
cmp
or
ljmp
xor
inc
ja
mov
push
mov
mov
outsl
aad
sbb
adc
out
cmpsl
ss
xchg
insb
jne
xchg
imull
test
inc
and
pop
in
lcall
inc
push
pop
sub
adc
inc
iret
xor
pop
loopne
sar
jbe
cmp
sbb
outsl
lret
out
cwtl
test
pop
jne
pusha
or
mov
cmp
nop
inc
add
and
imul
lahf
int
pop
into
lret
shrl
push
addr16
xchg
or
mov
push
mov
adc
push
jecxz
inc
arpl
mov
or
cmc
aad
leave
dec
push
imul
shll
lret
int
mov
jg
or
pop
icebp
pop
xchg
repz
push
jne
leave
orl
pop
mov
inc
insl
sti
gs
mov
testl
into
pusha
sub
jmp
div
jne
in
mov
mov
xchg
pop
int
xor
dec
adc
out
mov
insb
data16
sub
ret
adc
push
sbb
mov
sbb
jne
lret
stc
lret
jne
icebp
sahf
movsl
mov
mov
je
and
cmp
pop
jge
fs
mov
jne
adc
fidivs
or
ja
mov
in
stc
adc
xchg
pop
mov
dec
push
loope
fidivl
rorb
gs
divl
jbe
imul
mov
push
jne
jmp
pusha
dec
add
mov
mov
jge
jbe
data16
push
std
push
outsl
add
imul
mov
add
xlat
adc
ljmp
mov
jne
push
cld
cmp
dec
loop
rolb
pop
fwait
mov
mov
lea
pushf
jne
inc
or
jne
fimuls
xchg
jne
pop
mov
jns
xchg
jne
add
iret
ja
das
mov
mov
adc
cmp
jae
xor
adc
outsl
repz
mov
jmp
jne
scas
cltd
negb
sbb
mov
mov
jne
mov
mov
inc
jecxz
jne
hlt
shll
xchg
int3
outsl
xchg
sub
inc
pop
ljmp
pop
sub
dec
fstl
out
iret
fimull
test
mov
dec
cltd
push
mov
cmc
jle
jecxz
std
xor
stc
repz
inc
fdivl
andl
out
pop
and
xchg
pushl
push
ja
filds
inc
xadd
inc
xchg
out
xorl
dec
add
ja
sar
add
jle
clc
push
xchg
sbbb
jne
pop
inc
out
pop
sub
jp
cmp
jae
mov
pop
lea
xchg
jge
jne
xchg
cmp
aad
jne
and
stc
jne
mov
sbbb
clc
pop
daa
inc
mov
jno
push
xchg
repz
stos
add
imul
in
or
outsl
pop
pusha
cmp
jne
ror
lods
fld1
inc
lock
mov
jmp
mov
aam
mov
fdivp
adc
cli
xchg
decb
mov
cmp
fwait
dec
xchg
mov
std
dec
push
inc
inc
jne
ror
xor
jne
cwtl
addr16
or
push
into
jns
popa
repnz
xchg
popf
add
ja
jl
xchg
pop
ss
icebp
jb
call
es
jne
or
mov
push
jae
sbb
xlat
mov
scas
add
test
fwait
sub
insb
jecxz
xchg
addr16
sbb
mov
inc
pop
test
or
loopne
mov
jne
data16
insb
outsl
xchg
fmulp
adc
jp
jne
pop
mov
out
cwtl
jae
lock
sar
jg
push
clc
mov
add
adc
sub
sbb
inc
add
rep
jmp
sbb
dec
loop
push
inc
jne
mov
sub
xor
out
dec
mov
add
adc
sbb
ja
lods
dec
jl
das
sub
xchg
movsb
xchg
push
stc
jne
out
call
lcall
pushf
mov
xchg
inc
and
iret
aas
push
cmp
mov
or
popa
or
push
nop
inc
jbe
incb
jne
loopne
and
cmp
mov
insb
pop
jle
mov
daa
hlt
or
lcall
push
shll
frstor
bound
sbb
stos
mov
lahf
stos
push
outsl
sahf
mov
or
lret
push
jne
xor
lods
cmp
jb
mov
fisttps
adc
jnp
aad
pop
mov
mov
out
es
bound
ja
mov
in
ss
notb
push
imul
out
sub
inc
and
xchg
or
out
bound
ret
divl
jg
cmpsb
push
xchg
jne
sub
and
push
les
mov
and
inc
and
sti
cmc
mov
add
cmp
or
push
push
das
push
cmp
mov
outsb
xor
jae
loopne
loope
push
push
mov
scas
add
dec
sti
stc
inc
xor
subl
add
mov
stos
enter
dec
movsl
jne
cltd
or
inc
js
es
push
add
pop
xchg
outsl
jb
dec
pop
adc
cmc
dec
std
mov
jne
clc
and
in
ret
or
jne
aaa
mov
stos
dec
jp
stos
loopne
mov
jnp
push
mov
xchg
push
shlb
clc
aam
mov
cmpsb
aas
call
adc
mov
jae
inc
loopne
sub
nop
mov
dec
icebp
orb
cmc
jno
fidivrs
inc
sub
in
movsb
aaa
lds
push
push
scas
sarb
jae
ret
sub
sub
imul
cs
jae
push
in
enter
cmp
das
sarl
aas
xor
mov
roll
inc
pop
xchg
mov
daa
pop
gs
incb
jne
imul
jne
xchg
xor
push
or
stos
std
xchg
jne
push
xchg
out
lcall
fidivl
add
xchg
xor
imul
jne
sbb
sbb
inc
push
repz
test
jp
push
mov
sub
fadd
sahf
sub
sti
mov
in
outsl
sub
fst
sarl
mov
sahf
mov
ds
clc
cmpsl
mov
inc
xchg
pop
jne
aam
push
add
xor
sub
and
add
push
push
mov
push
pop
pop
cmc
mov
and
lock
lret
lea
inc
jb
aad
jns
xor
jmp
movsl
lcallw
mov
clc
pop
xor
mov
subb
xchg
dec
pushf
int3
or
xor
or
cwtl
lds
push
jle
inc
ljmp
in
pusha
jne
pop
cltd
jl
in
pop
jne
stos
xor
push
nop
inc
lods
imul
jbe
cwtl
test
pop
mov
pop
adc
jne
adc
fsub
mov
popf
jne
into
fisttpl
jne
out
sbb
jne
fdivrs
xchg
jne
sbb
jns
shrl
lcall
jne
cmp
jne
loop
xchg
mov
cmp
inc
xchg
ror
aaa
mov
pop
das
movl
cmpsl
es
mov
push
test
cs
aas
neg
popf
scas
and
jne
flds
jmp
push
rolb
lock
and
in
dec
in
add
xchg
icebp
jne
mov
mov
and
scas
adc
inc
es
dec
rclb
loopne
insl
scas
out
jbe
das
cli
and
imul
insb
into
repz
pop
add
xchg
insl
ds
hlt
ja
mov
adc
and
movsl
roll
jge
xchg
ss
test
dec
push
or
mov
fnsave
bound
imul
in
cmc
xchg
leave
enter
inc
sbb
imul
xor
stos
push
je
and
mov
inc
scas
rclb
jne
jno
scas
sub
and
lods
jne
ljmp
outsl
and
imul
out
mov
jbe
dec
cmp
je
enter
in
lret
mov
popf
pop
pop
mov
int3
ljmp
jne
mov
andb
ret
cmpsb
loop
stos
ja
inc
cltd
mov
ret
inc
jae
mov
movsb
adc
or
fsubr
xchg
mov
mov
dec
imul
inc
mov
ret
mov
fwait
inc
xchg
xchg
bound
popf
push
test
imul
jmp
scas
xchg
cmc
dec
iret
sti
jo
addr16
xchg
jno
xor
ret
jne
jo
fwait
jecxz
dec
jp
lods
mov
enter
aas
stos
ja
cwtl
je
clc
cmc
aaa
mov
inc
lcall
insb
adc
jle
cmp
lea
out
adc
sub
dec
dec
stos
mov
ret
jne
int
clc
cmp
jne
pop
add
stos
sahf
and
loopne
adc
out
sbb
lret
jne
adc
aaa
cli
sar
sbb
inc
push
sahf
jne
inc
ror
lcall
mov
jle
mov
sbb
sub
push
int3
or
jne
mov
xor
and
sbb
mov
cmp
mov
mov
pop
aas
mov
push
dec
xchg
cmpsb
iret
cmp
jne
icebp
inc
cmpsl
cmp
ja
ja
push
inc
pop
adc
sub
cmp
add
mov
lock
negl
mov
cmp
loope
inc
outsl
xchg
pop
ret
shl
jg
push
or
cmp
mov
cld
push
pushl
mov
das
cmp
lock
dec
shll
sbb
push
adc
lock
mov
pop
mov
jne
popa
fisubs
dec
inc
divl
ret
fstpt
mov
movl
push
push
rclb
movsl
jge
xchg
aad
adc
imulb
dec
and
jne
in
mov
jmp
lret
adc
jp
cmp
rcrl
sub
leave
mov
bound
pop
xchg
or
xchg
jno
jne
and
mov
fbld
test
jae
cmp
jne
push
in
jp
cmpsl
mov
leave
xchg
jbe
push
stc
ret
not
push
sbb
sbb
jne
movsb
mov
push
sahf
and
jne
icebp
and
adcl
fidivs
int
out
mov
daa
aaa
push
and
mov
or
outsl
ret
sbbb
incb
jbe
int3
les
inc
push
ljmp
addr16
jne
pop
call
in
jne
adc
sbb
add
inc
mov
aaa
ja
insl
cmpsl
xchg
iret
test
ds
daa
jne
out
mov
sbb
push
jbe
ja
jg
jne,pn
push
and
test
fcom
lods
inc
jne
cltd
mov
mov
repz
movl
ret
dec
rolb
cmc
mov
or
xor
mov
xchg
leave
cmpsl
ss
jne
mov
push
sti
jne
iret
dec
js
adc
cmpb
jne
cmp
pushf
dec
inc
push
and
call
jne
xchg
sub
ja
negb
test
xchg
mov
jne
loopne
loop
and
sub
ficomps
mov
pop
call
sub
pop
stos
lahf
sub
push
roll
mov
cwtl
pop
xchg
jmp
scas
mov
add
add
mov
popa
inc
mov
jne
cmpsl
shlb
sub
imul
lahf
imull
call
stc
fs
fstps
push
jae
js
jnp
fwait
scas
out
xorl
sub
jbe
and
dec
mov
mov
into
arpl
inc
push
jbe
cmp
mov
out
dec
enter
dec
push
adc
adc
nop
arpl
and
or
pop
cmp
iret
das
inc
mov
pop
jne
mov
adc
jne
mov
dec
in
push
ja
mov
fwait
insl
ret
or
out
adc
subl
pop
push
dec
xor
call
mov
das
mov
int3
jg
outsb
xchg
push
and
mov
negl
cmp
inc
inc
jnp
jne
mov
nop
xchg
jne
inc
sbbl
jae
sub
pop
jae
arpl
lods
loope
sahf
adc
ja
push
aaa
out
pop
jne
lcall
test
and
inc
dec
lods
je
test
in
jge
mov
inc
pop
movsb
jbe
xchg
mov
sub
gs
jno
jne
testl
imul
jne
adc
mov
jg
or
push
daa
mov
movsl
mov
enter
fsubr
jle
jp
mov
jo
icebp
xchg
mov
inc
push
xchg
das
sub
loop
pop
dec
jne
stos
inc
cmpsl
cwtl
mov
and
rcrb
jmp
fcoml
out
lcall
or
rclb
adc
mov
mov
and
xchg
fbstp
mov
jge
jg
push
and
dec
rcrl
dec
cmc
stc
mov
gs
sub
mov
mov
mov
sti
hlt
fadd
imul
nop
jbe
cmpsb
sbb
test
jne
andb
mov
ss
aam
shlb
enter
int3
std
jae
popa
dec
adc
bndstx
imul
fst
mov
push
notb
gs
mov
sbb
lds
ljmp
mov
lea
movsb
mov
mov
mov
adc
pop
inc
and
leave
addr16
jne
lds
mov
mov
scas
daa
jge
dec
xchg
loop
inc
notb
cmp
ljmp
mov
outsl
stos
inc
add
std
adc
rcrl
inc
mov
adc
loopne
add
test
pushf
outsl
lds
in
cmc
xchg
pop
and
cwtl
test
imul
mov
into
shlb
out
sub
dec
sub
jne
ret
push
aad
push
adc
outsl
mov
pop
push
clc
int
jne
pop
comiss
ljmp
mov
adc
xchg
push
cmp
mov
dec
fcmovne
outsl
in
scas
xchg
rorb
into
push
or
fxch
pop
jnp
and
int
push
jne
pop
xchg
cmovge
cmp
jne
xor
mov
imul
and
xchg
jne
mov
mov
ja
out
call
les
jle
inc
or
inc
outsl
xor
bound
rcl
lret
lret
lahf
jne
jmp
pop
cli
mov
mov
movsl
lret
in
push
push
jg
sub
cli
jbe
push
mov
mov
loopne
xor
rorl
lods
jecxz
lock
mov
cmc
jne
mov
jne
xor
pop
jne
adc
pusha
push
jecxz,pn
jne
leave
sub
lds
adc
inc
xor
test
mov
jne
mov
sub
jne
adc
pusha
scas
in
testl
jbe
into
jae
xchg
mov
push
aad
fiadds
test
ss
xchg
cmpsl
dec
mov
les
push
loopne
jne
or
fstp
hlt
sbb
aad
jne
or
jne
lods
popf
push
sub
jp
jne
out
xor
jecxz
add
mov
xchg
mov
sbb
mov
aad
aam
pop
js
insl
mov
outsb
adc
int3
xor
jne
pusha
ret
push
fwait
inc
add
outsl
aam
mov
jecxz
outsl
xor
pop
fdivrs
pop
jne
es
lods
pusha
clc
lahf
cltd
mov
ljmp
fwait
je
or
push
xor
mov
and
mov
jbe
cli
fsubr
jne
fidivrs
add
icebp
bound
pop
or
add
movsl
popa
fidivl
sbb
mov
out
sahf
mov
inc
cmc
xor
data16
jne
and
mov
cs
leave
ja
pop
dec
mov
push
inc
cmp
push
mov
test
ss
add
mov
jne
xchg
imul
and
lret
cli
repz
jmp
mov
pop
jle
jne
cltd
push
in
out
lahf
movsl
mov
repz
andb
scas
loopne
cs
push
or
cmc
cmp
mov
mov
jne
sbb
mov
int
enter
inc
sti
test
and
push
jne
jb
push
pop
and
mov
jl
xor
jne
sbb
or
inc
mov
sbb
int3
sub
rolb
and
xor
pop
ja
icebp
fisubs
inc
ret
insb
push
add
push
test
mov
pushl
in
mov
ss
popf
xchg
add
test
jbe
divb
jne
mov
dec
pop
jne
stc
or
sub
pop
fidivrl
fwait
sti
pop
pop
jne
add
fnsave
mov
cwtl
js
xchg
xchg
bnd
inc
jne
or
ret
stos
jl
cmp
std
adc
frstor
mov
push
push
ss
outsl
dec
and
mov
mov
divl
push
scas
lods
jmp
xchg
and
jne
push
pop
sbbb
mov
jp
jnp
jne
pop
cmc
inc
xor
add
or
pop
xchg
push
fs
scas
xchg
jne
ret
mov
jge
fistpl
jb
pop
negb
repz
call
sub
jbe
into
lea
pusha
mov
jne
cmp
xor
mov
adc
sbb
mov
divl
add
xlat
pop
pop
and
test
lock
sub
jne
stos
loop
sub
inc
pop
jae
je
cmp
shl
lret
sub
lods
clc
testb
cmp
xchg
xchg
jne
repz
mov
pop
jbe
pop
xor
imul
cmp
and
jne
dec
insb
std
inc
bound
mov
cmp
jne
inc
adc
dec
std
shlb
dec
inc
aad
xor
ficompl
mov
iret
lcall
jne
sbb
mov
fnstenv
mov
inc
mov
ljmp
xchg
fiadds
mov
mov
pop
in
jne
jmp
xor
shll
push
das
inc
notb
jne
sbb
add
mov
dec
pop
je
jo
or
lds
add
inc
bound
adc
lds
jmp
popf
data16
lret
jne
fists
pop
ret
ret
mov
push
jne
adc
nop
iret
sub
mov
bound
sub
fwait
pop
xchg
in
xlat
and
lods
add
and
cwtl
mov
push
jecxz
loope
pop
imul
jnp
jno
imulb
mov
adc
lock
push
add
in
mov
cmp
mov
adc
mov
sbb
lods
cmp
push
lock
cmovnp
jo
out
mov
std
and
dec
jae
lret
adc
call
mov
loopne
shlb
dec
jne
dec
stc
mov
daa
or
jbe
jp
push
mov
in
xchg
inc
jne
add
cmc
xchg
ret
pop
xorl
pushf
out
lods
jne
and
in
pop
pop
jne
sarl
arpl
push
ss
sbb
push
je
ret
aas
mov
insl
xchg
scas
cmp
xorb
xchg
pop
sahf
push
imul
mov
mov
push
lret
xchg
lret
addr16
push
push
dec
bound
mov
jo
add
add
jns
loop
lods
jne
in
data16
dec
sbb
cli
jae
dec
mov
fwait
xor
mov
sbb
iret
sarb
push
add
hlt
lods
jge
push
int3
pusha
jne
cld
leave
xor
outsl
addr16
cmpsl
push
sbb
fmul
and
add
fdecstp
lods
adc
loope
sbb
cwtl
in
jne
or
mov
adc
es
pusha
sbb
and
add
addr16
movsl
xchg
push
sub
outsl
xchg
iret
scas
ret
push
test
jbe
imul
enter
cltd
mov
out
jmp
jne
dec
andl
je
jne
movsb
xchg
ret
cwtl
clc
jne
cli
lods
and
jecxz
aam
add
ret
negl
jmp
jne
faddp
push
test
inc
popa
lcall
imul
fsubr
push
fistpll
mov
and
jle
sbb
jae
push
ja
add
push
xchg
stc
popa
jne
adc
or
lock
bound
add
or
sbb
pop
shlb
inc
stos
cmc
cwtl
xchg
mov
jae
cmp
add
jne
rcr
popa
loope
subl
jne
inc
sahf
in
or
shll
lods
add
push
jp
movsb
shlb
fisubrs
adc
dec
cmc
ret
mov
ds
push
lds
sub
dec
subb
push
testb
mov
sti
push
stos
jne
ret
cwtl
push
inc
lods
xchg
mov
sub
aam
jne
push
cld
or
jne
aad
pop
or
fistps
jle
cmpsl
gs
mov
sbb
jne
and
fwait
pop
aaa
dec
xchg
movb
sbb
imul
stos
std
push
pop
mov
pop
testl
outsl
ljmp
rcr
mov
out
mov
mov
aad
push
or
cld
sti
popf
push
dec
jne
push
adc
out
in
cmpb
outsl
xor
cmp
mov
jne
jle
nop
in
iret
xor
repnz
or
jb
pop
xchg
psubsb
aas
rclb
or
jo
cwtl
cmp
jle
loope
jne
sub
pop
adc
addr16
mov
sub
jne
mov
insb
push
pusha
jne
mov
jmp
mov
js
inc
shll
mov
loopne
fs
cs
arpl
cmp
jne
jnp
xchg
scas
jne
fmull
insb
dec
lds
jne
call
jne
mov
inc
int3
dec
mov
jg
and
jne
test
fmuls
pop
aas
stos
jg
push
scas
or
mov
shll
jb
test
jns
imul
push
jne
dec
cmpsl
dec
or
popa
fnstsw
adc
ljmp
mov
pushf
fld1
jbe
push
pop
xchg
cmp
mov
lret
aad
int
push
in
das
mov
sbb
jge
dec
mov
subl
jnp
and
pop
mov
lds
loopne
aas
outsl
sti
out
cmc
xor
rclb
add
cwtl
mov
push
pop
jne
inc
dec
mov
in
clc
push
jmp
inc
ljmp
mov
popf
mov
movsl
jb
test
push
mov
mov
out
leave
sbb
mov
negl
movsb
fisttpl
sub
pop
jne
and
mov
jne
lret
cmp
lret
shrl
in
ficomps
mov
gs
mov
pop
sub
bound
ljmp
out
lods
lcall
lahf
dec
fcoms
xchg
xlat
in
repnz
inc
aas
cmp
hlt
mov
stc
xchg
xor
sar
jbe
adc
jae
push
sbb
jmp
jne
dec
andl
cmpb
mov
or
popf
cmp
xchg
sbb
fs
and
mov
inc
pop
out
push
shlb
mov
pushf
sub
addr16
xor
insl
push
stos
mov
add
mov
outsl
movsb
es
cmpsl
and
mov
pusha
int
fisttps
pop
bound
and
jb
mov
clc
sbb
loopne
test
cmpsb
pusha
or
popa
jne
outsb
xchg
int3
roll
jne
and
push
fmul
adc
xor
xor
adc
add
jne
mov
dec
mov
sub
pop
sbb
shll
xor
xchg
jne
cwtl
gs
shr
or
jne
xchg
sub
repnz
fs
push
mov
and
dec
jne
add
pop
xor
or
push
xorb
jne
call
mov
pop
es
push
cmp
test
add
out
jne
mov
pop
mov
mov
or
jo
sbb
jne
pop
or
gs
inc
ret
das
rclb
int
lret
xchg
mov
scas
popa
xor
dec
jne
adc
jae
mov
sub
imul
jne
dec
add
cmp
mov
sbb
mov
je
es
inc
jo
lcall
xchg
jne
ljmp
push
mov
cmc
out
sub
aad
sub
xor
jne
cwtl
lock
cmpsl
ret
pusha
push
jne
mov
or
jne
mov
lods
jne
xor
inc
inc
adc
test
into
mov
mov
mov
loopne
pop
push
cltd
push
mov
gs
stos
push
out
or
insb
in
mov
cmp
lcall
daa
ds
aad
inc
jne
sahf
stos
sbb
cmpsb
mov
into
cwtl
and
pushf
jbe
inc
cld
sbb
subl
or
cmp
sbb
mov
jne
or
sub
shlb
fucomi
in
dec
mov
add
pop
cmpsb
jbe
add
cwtl
dec
int3
divb
jmp
imul
dec
rcr
lods
ja
jecxz
fldl
push
daa
das
iret
test
mov
and
jbe
rorb
movsl
jne
sub
rcll
cmp
jne
out
test
and
xor
shlb
fstpl
or
sahf
jne
aaa
scas
inc
stos
xchg
int3
lea
inc
xchg
jne
pop
rorb
pushf
adc
sub
nop
int3
jge
repz
jp
or
popa
daa
imul
jne
cmpsl
test
mov
test
mov
popf
ret
mov
pop
les
xor
aam
sbb
mov
jecxz
cmp
xlat
outsl
negl
cmp
add
ror
js
jo
mov
loop
xchg
cmp
outsl
aaa
ljmp
push
adc
add
xchg
call
mov
lcall
fistps
jae
dec
popf
shl
loope
into
xchg
push
lret
push
repnz
mov
icebp
test
insl
aad
jp
jbe
outsl
out
lret
jae
or
mov
inc
enter
push
fbstp
lret
jecxz
push
or
dec
sti
push
inc
sbb
jne
je
sahf
das
daa
dec
dec
jne
movsb
jle
sub
cltd
scas
ja
loop
mov
xchg
sub
and
jbe
or
sub
jo
xchg
mov
mov
add
enter
mov
adc
xlat
fsubs
xchg
mov
jne
repnz
xor
mov
pop
or
mov
call
cli
sbb
dec
pop
pop
jne
jg
leave
lds
lock
jbe
mov
add
or
xchg
jne
pop
pop
xlat
xchg
inc
ss
mov
jne
sti
mov
ja
cltd
xchg
mov
or
xor
jl
loopne
or
adc
fsts
sub
orb
movsl
ja
gs
in
shlb
das
push
sbb
jne
out
icebp
cmp
mov
jne
ret
into
pop
push
pop
aam
xchg
sub
or
jne
fisttps
lds
jo
push
mov
leave
and
xchg
test
pushl
pusha
sub
sub
imul
adc
mov
mov
repnz
dec
dec
dec
mov
inc
inc
push
stos
in
movsb
pushf
xor
mov
pop
jp
sub
pop
jb
scas
lret
or
jne
in
adc
nopl
fcoml
adc
xchg
mov
cmpb
ficoms
mov
stc
push
lret
das
jge
roll
fsubs
and
pop
mov
jnp
xchg
jle
shl
cmp
pusha
push
insl
push
fstl
xor
popa
popf
addr16
call
clc
subl
and
lret
clc
repnz
jno
loop
out
call
outsb
sub
inc
aas
jne
sub
jae
int3
ret
mov
into
cmp
movsb
cmp
aam
pop
push
mov
inc
jl
push
push
jne
add
js
leave
jmp
push
mov
xor
les
mov
fsubrl
fwait
xor
mov
in
cltd
jne
int3
jmp
cmp
out
addb
pop
inc
jns
xchg
mov
cld
fwait
les
in
outsb
testb
out
push
pusha
out
cmp
cli
jae
mov
jp
xchg
pop
arpl
xchg
lds
cmpsb
mov
jne
inc
std
mov
mov
aam
push
and
jp
out
lret
mov
jne
dec
andb
jne
scas
loope
sub
or
sbb
cmp
cli
cld
mov
mov
sbb
mov
fsubrs
xor
inc
ficompl
cmp
lock
loope
jne
cld
leave
les
movsb
imul
hlt
jnp
stc
xchg
inc
in
mul
dec
iret
mov
mov
jne
cmp
and
dec
ret
mov
adc
adcb
or
jmp
mov
jg
jp
sarl
mov
ss
testb
jne
mov
or
add
rcll
gs
xchg
jnp
sarl
sbb
jne
jecxz
les
aas
mov
cmpl
dec
into
out
and
mov
xchg
dec
out
jne
filds
xor
stos
and
dec
inc
scas
sbb
pop
out
jne
sub
xlat
xchg
clc
movsl
mov
fwait
test
out
loop
enter
lds
jne
call
dec
lret
jge
jne
inc
fcomps
sub
outsl
inc
push
adc
adc
xor
xchg
outsl
lcall
add
repz
loop
jbe
pushf
cmp
cmpsl
inc
insb
or
insl
push
jne
and
jl
nop
jns
sahf
and
add
sbb
adc
rdmsr
ss
mulb
xchg
scas
jno
inc
repz
cmc
mov
out
pop
sub
fchs
in
and
sub
xor
aam
pop
add
jnp
pop
arpl
idiv
addr16
clc
jae
xchg
movsl
fwait
repz
lds
jns
mov
and
ljmp
jne
mov
mov
shll
jne
inc
push
imul
shl
xchg
jg
sbb
leave
jne
push
fidivl
ds
ljmp
push
sub
movsb
sbb
push
add
lcall
mov
pop
dec
pop
cmp
fdivr
test
inc
dec
dec
push
add
sbb
mov
pop
jne
mov
test
mov
lds
dec
popa
and
mov
nop
scas
push
add
xor
mov
add
sub
jecxz
ja
sbb
popa
mov
loopne
xorb
fcmovbe
in
ss
pop
push
adc
jae
jae
mov
cld
dec
sub
clc
or
rcr
pop
orl
stc
mov
xlat
jno
xchg
pop
mov
jbe
jp
jno
jne
adc
idiv
cmpsl
cmp
jne
jecxz
add
into
xchg
stos
jne
push
pop
sub
pop
outsl
mov
ja
push
push
mov
mov
sub
sub
jp
mov
gs
add
lods
testb
mov
mov
in
push
jne
xor
jne
push
add
out
mov
nop
sahf
ret
rcrb
repnz
or
icebp
xor
call
lcall
fistpl
mov
push
cmpsb
adc
nop
add
sub
in
pop
lret
mov
xor
into
jne
sbb
jg
aas
push
arpl
repz
mov
mov
imul
sub
mov
fdivrp
test
loopne
xchg
je
mov
ljmp
mov
cs
adc
lea
pop
aaa
xor
cmp
data16
loope
jae
or
fisttpl
imul
mov
pop
mov
int3
into
fisubl
lret
cmp
jbe
sbb
stc
ret
imul
js
pop
stos
jmp
outsl
cltd
mov
mov
or
xor
push
jne
fnsave
shr
and
aaa
xor
sub
ss
pop
mov
int3
call
ret
sar
sbb
outsl
push
or
scas
and
jne
test
js
jmp
jne
out
push
in
jmp
jne
adc
xor
into
jns
jl
push
fisubrl
out
test
out
xor
dec
jne
jb,pt
xchg
inc
adc
mov
mov
mov
popa
cwtd
dec
xor
xor
cmp
fwait
mov
das
idiv
pushf
popw
pop
shlb
dec
js
in
pop
xchg
ret
jne
inc
stc
dec
daa
xchg
mov
movsb
fwait
int3
add
sbb
push
into
iret
add
push
fadds
loop
adc
test
push
mov
jl
sbb
pop
jb
cmpsl
lret
mov
jle
jne
add
imul
cmp
push
das
loope
in
sar
push
scas
jecxz
aam
cwtl
xchg
out
jne
jmp
lock
mov
into
sub
stos
mov
lahf
outsl
cmp
cs
in
mov
ds
sarb
dec
mov
xor
es
xor
adc
in
pop
sbb
pop
shll
js
loopne
xchg
mov
ljmp
dec
mov
hlt
cmp
dec
mov
inc
outsl
mov
dec
jne
jl
decl
mov
xor
add
sbb
loop
add
xchg
sub
pop
loope
pop
fcomi
xchg
mulb
mov
inc
cwtl
or
pop
and
sbb
pop
cltd
jne
or
andl
in
ret
push
mov
arpl
cwtl
imul
fsubs
andb
mov
loopne
dec
mov
rolb
mov
mov
adc
jae
mov
lahf
mov
xchg
ljmp
pop
cmpsb
xchg
jne
sbb
adc
lcall
popf
sarb
jne
fldl
dec
fstps
pop
cli
and
loop,pn
xchg
cmp
dec
xchg
jne
push
xchg
addb
popa
pop
jne
xor
cmpsl
outsb
in
jae
cmc
popf
shll
ja
cmp
jns
ret
pop
mov
lret
mov
fwait
mov
repnz
dec
fsubrs
aam
iret
cli
mov
mov
ret
mov
push
in
jne
add
push
js
lock
xchg
inc
pushf
cwtl
out
push
cmp
jne
pop
add
adc
mov
outsb
mov
and
rcl
je
jne
pop
data16
and
dec
call
jne
jecxz
nop
sub
cmpl
out
and
ss
mov
es
fwait
out
aas
int3
lret
mov
xor
jae
sarb
xchg
add
mov
mov
xchg
add
je
sub
in
mov
xchg
fdivl
xchg
aas
mov
mov
lods
icebp
inc
sub
sbb
jne
ror
and
out
aam
and
inc
cmp
pop
ja
daa
push
popf
repz
jne
sti
push
aas
ljmp
addr16
in
dec
shlb
pushf
int3
outsb
adcb
adc
mov
gs
mov
mov
dec
or
mov
dec
rorl
dec
jne
mov
lret
ljmp
out
out
lcall
shlb
shlb
out
fcomps
sbb
stos
xchg
popf
cmp
and
mov
mov
movsl
jae
das
aad
test
out
imul
xor
jne
and
inc
aas
imul
sub
adc
pop
jne
mov
mov
xchg
adc
insl
clc
add
jno
dec
ds
scas
or
push
roll
mov
jne
mov
pop
lock
or
cmpsb
addr16
inc
inc
push
mov
xor
or
lods
js
aas
insb
fs
and
mov
xor
cmp
jmp
call
ss
orl
mov
ljmp
inc
jbe
jne
dec
stc
lds
rorl
popa
mov
or
das
push
out
insb
xchg
jne
fs
push
mov
cmp
les
rcrl
cli
jbe
mov
cmp
xchg
cmc
mov
dec
outsb
bound
pop
fnstenv
sbb
inc
push
or
dec
cli
sti
sbb
cld
mov
stc
sbb
dec
jne
iret
ds
or
push
ss
test
shr
daa
stos
jne
and
in
mov
out
jne
out
scas
mov
jne
addb
repz
sbb
bound
mov
in
jne
ret
fstl
int3
jae
sbb
clc
inc
mov
xchg
mov
push
hlt
or
jne
xor
add
pop
popa
cli
ret
dec
xchg
cmp
lods
jmp
ja
lahf
lock
leave
sbb
jne
out
sub
push
jnp
jae
rcl
dec
add
mov
shrb
and
pop
jg
fucomp
pop
fidivs
xor
xchg
clc
fs
push
and
jbe
sbb
insl
jne
sub
adc
lret
stos
lea
jmp
adc
sub
popf
loopne
mov
pop
mov
jl
jne
ret
pop
stos
mov
out
js
mov
inc
dec
aas
insl
sbb
add
add
outsl
aas
clc
pop
jo
movsb
push
cs
adc
loopne
pop
xchg
ss
scas
ds
insl
xor
cmp
push
outsb
push
stos
add
jmp
adc
out
inc
add
cmp
mov
xor
cli
cmp
mov
or
cmc
jne
adc
pusha
jge
cmp
es
add
mov
insl
add
dec
in
jne
call
sbb
jnp
inc
lret
mov
dec
inc
jne
xchg
cmp
mov
scas
jae
pop
imul
push
fldt
std
dec
adc
jbe
lret
out
ret
adc
int3
int
xchg
outsb
not
jo
dec
cltd
sub
mov
out
dec
mov
push
or
jno
sub
xchg
out
mov
jmp
push
decl
jne
sub
lcall
and
add
or
mov
pusha
push
fists
loop
out
jne
jno
add
test
lret
mov
lahf
daa
jne
fstpt
xchg
mov
sub
cmc
sbb
push
mov
xor
cmc
jp
jb
sub
sub
add
test
dec
mov
push
outsb
popf
xchg
jne
loop
dec
inc
ja
xchg
gs
repnz
je
jne
scas
cmpsl
sbb
lcall
sti
mov
sub
lods
cwtl
mov
and
cmp
pop
mov
jmp
fidivrl
aad
inc
xchg
mul
sti
mov
pushf
and
push
jns
movsl
add
or
loop
gs
das
mov
adc
fs
jp
sub
add
dec
cmc
shlb
movsl
bound
jbe
cmp
inc
aaa
pop
jne
lahf
push
lret
nop
cmp
jne
outsb
lods
cmp
pop
testb
loope
dec
shlb
enter
in
push
aaa
out
movsb
subb
in
add
adc
inc
ja
dec
nop
addr16
push
sbb
loope
jae
mov
adc
cmc
or
mov
jne
mov
loopne
addr16
lret
jbe
sbb
jo
insb
jne
test
mov
out
mov
add
mov
clc
fstps
scas
and
andb
ss
fidivrl
das
repnz
and
add
cmp
inc
rorb
insb
je
inc
inc
adc
jecxz
lea
iretw
xor
xchg
in
cmc
mov
add
loopne
inc
cmp
mov
dec
stos
fdivl
movl
ljmp
out
lret
pop
or
cltd
push
scas
mov
jns
jnp
jne
xor
sahf
dec
jae
pop
inc
outsb
jo
sub
adc
daa
cs
stos
mov
inc
jl
addr16
out
mov
jne
mov
shl
or
and
out
ret
xchg
and
push
jne
mov
fcomip
xchg
add
sbb
icebp
bound
cmp
sarl
push
cltd
or
push
jnp
and
lahf
jne
add
bnd
cmp
shlb
push
loop
jne
jae
and
stos
xchg
in
sub
mov
outsl
aam
jmp
cmp
outsl
iret
jmp
cmc
fidivrs
lock
lods
pusha
insl
in
and
xchg
cmpsl
arpl
mov
or
aam
out
aad
out
es
jne
dec
movb
add
sub
iret
sbb
nop
pop
jne
xor
rolb
sahf
jecxz
jne
sub
inc
pop
fiadds
or
stc
pop
outsb
and
add
mov
cmp
sbb
jae
dec
inc
lock
inc
cmp
subl
add
ja
mov
inc
adc
xchg
insl
popf
pop
fwait
in
fs
pusha
mov
test
push
sbb
ffree
jne
lods
int
ret
cmp
xorb
fwait
lods
cmpsl
pusha
dec
clc
jne
cld
cmp
outsl
ret
inc
inc
mov
test
addb
loop
aaa
divl
shll
stos
push
jns
sbbb
fst
push
cmp
jne
ret
in
je
sbb
lret
adc
and
fidivl
popa
push
subl
dec
ja
cmpsb
xor
jno
mov
xchg
pushf
mov
push
push
dec
mov
jns
pop
or
jne
inc
sbb
pop
dec
mov
push
push
and
sbb
mov
xlat
je
add
add
lcall
mov
xchg
shll
cwtl
jb
outsl
lretw
mov
mov
xchg
sub
pop
push
jne
xlat
fisubl
test
ja
ljmp
stc
fs
repnz
dec
jae
lods
mov
mov
inc
push
cmp
jne
ret
insb
inc
insl
mov
cmc
call
sub
xchg
cmp
inc
add
sub
js
les
push
sub
push
int
pop
outsl
xchg
call
mov
mov
xchg
loopne
pop
lret
mov
imulb
push
mov
aam
jecxz
sbb
ds
cli
jp
data16
insb
sub
subb
adc
inc
stc
mov
addl
daa
add
cs
jmp
jne
lahf
jno
and
jne
adc
loop
jle
sub
ja
adc
sbb
inc
jbe
call
xchg
jne
fistpl
and
push
popf
jne
add
cli
mov
xchg
arpl
push
imul
adc
push
pop
mov
sbb
ret
jne
ss
jbe
and
xchg
xchg
cwtl
xchg
ljmp
mov
add
jnp
mov
jle
inc
into
xchg
int3
sbbl
pop
jne
insb
push
lcall
fstl
sbb
lock
shlb
outsb
jne
lcall
ja
sbb
frstor
data16
dec
cmp
clc
hlt
or
jne
push
fnstcw
int
inc
jne
jb
shl
loopne
jne
sbb
xchg
cld
jg
es
xchg
jbe
loopne
cmpsb
or
stos
jae
stos
push
sahf
sbb
pop
bound
jne
fcmovu
fnstsw
inc
aas
jne
push
adc
rorb
cli
cmpsl
mov
sub
sbb
jno
cwtl
pop
jmp
add
in
cld
jne
ret
cmp
xchg
pushf
lret
stc
sahf
jne
mov
mov
pop
inc
data16
mov
pop
add
xchg
clc
inc
jne
xor
imul
ja
xchg
cmp
aad
leave
cwtl
inc
jne
fcmovnbe
cmp
mov
add
aad
jbe
ss
fisubrs
std
push
scas
dec
xchg
leave
xchg
sub
mull
xchg
in
push
pop
inc
les
leave
aas
into
cmp
pop
push
shlb
lds
dec
jne
aas
das
inc
loopne
or
xchg
leave
jne
dec
lods
sub
in
lret
test
lret
sbb
lds
jae
and
cmpsl
cmp
xchg
movsl
adc
and
jne
movsb
mov
ja
add
jge
cmc
mov
inc
pop
imul
add
mov
repz
pusha
jne
leave
loope
sbb
test
add
jne
ret
mov
mov
jns
lods
and
jecxz
mov
addr16
jae
mov
aas
mov
popa
lock
insl
cmpsl
dec
adc
pop
sub
out
cwtl
jne
movsb
jl
rcrl
adc
ja
xchg
jnp
xor
jmp
dec
xchg
pushf
xor
jne
rcll
sbb
ss
cmc
mov
mov
les
scas
mov
push
shll
cmpsl
fdivr
jge
rcrb
push
mov
adc
out
xchg
imul
leave
test
sbb
les
jne
fs
movsb
mov
divb
adc
sub
mov
pop
push
sbb
ret
xchg
add
ss
rorb
sbb
mov
mov
out
lcall
or
and
sbb
xchg
outsl
adc
cmp
pop
jbe
inc
or
popf
dec
call
scas
loop
lods
xor
dec
pop
jne
popa
mov
imul
mov
ret
cmp
mov
pop
cli
daa
mov
mov
clc
inc
jne
fisubs
add
xor
cmpsb
jbe
lds
push
and
jbe
adc
sbb
mov
into
or
cmp
addr16
add
popa
test
sbb
sbb
out
sub
sbb
scas
lds
sbb
test
gs
mov
pusha
pop
xor
xchg
adc
and
aaa
push
push
mov
sub
and
stos
ljmp
jne
dec
dec
outsb
add
adc
stos
push
mov
fwait
push
outsl
mov
ficompl
cld
leave
pushaw
fcmovne
jne
adc
subb
test
out
push
out
and
ja
dec
mov
cmp
sub
shll
mov
jg
imul
outsl
fists
jbe
sub
jne
xor
rcr
xchg
xlat
jae
jno
outsl
fnop
inc
push
mov
xor
lock
push
jne
repnz
pop
je
jge
jae
movsl
mov
sbb
outsb
sub
fnstcw
mov
pop
xchg
pop
pop
jne
mov
xchg
inc
push
mov
lds
pop
shlb
ffreep
cwtl
push
stos
in
jno
sbb
sub
pop
mov
je
xor
cwtl
aaa
dec
stos
mov
push
sbb
aad
pop
sub
ja
push
sarb
out
mov
loop
mov
fnsave
fwait
in
inc
dec
xchg
lahf
call
sub
in
mov
jle
xchg
sbb
and
cld
insl
in
mov
out
add
pop
or
aam
fstp
sub
push
jnp
mov
test
ret
mov
inc
xor
loop
sbbb
aad
hlt
ja
jbe
inc
fnstenv
jb
movsl
iret
shlb
jne
mov
fwait
icebp
jmp
adc
cmp
sbb
pop
shrb
cli
repz
xchg
aaa
or
mov
daa
es
xor
xor
rcrl
out
jbe
rcr
jnp
and
mov
test
mov
leave
dec
or
xchg
xchg
mov
sbb
sub
enter
jmp
sahf
ja
xlat
leave
jne
mov
lahf
inc
mov
add
and
xor
cmp
sti
mov
clc
cmp
int3
data16
mov
imulb
pop
test
jl
into
push
cmpsb
pushf
stos
cmp
sub
fsubrl
xchg
jne
push
mov
nop
mov
imul
testb
add
fwait
cmp
jne
mov
leave
lcall
leave
insl
in
inc
or
shll
pushf
jne
jge
ja
stos
into
xchg
jne
jecxz
loope
jle
pop
and
movb
daa
jne
jmp
mov
lea
jne
adc
icebp
pop
jne
je
aad
jno
or
adc
imulb
dec
fdivrs
outsl
push
mov
push
push
xchg
adc
into
aaa
xchg
mov
add
xchg
jl
popf
jmp
or
cmc
cmp
cwtl
cli
mov
testl
add
repz
out
rolb
xchg
std
cmpsl
mov
ja
loopne
insb
or
and
call
jne
push
xchg
pushf
jne
sti
sub
fistps
test
push
cmpsl
pcmpeqw
push
adc
and
fidivs
inc
imul
push
pop
ja
sbbl
mov
daa
jne
in
cwtl
add
xlat
adc
sbb
mov
insl
mov
div
add
hlt
insl
lods
or
fdivs
jne
xchg
mov
jae
das
or
sahf
lds
add
jne
gs
sub
out
or
pop
aas
leave
sbb
xchg
jmp
xchg
lods
inc
repz
jne
mov
scas
jne
sbb
imul
or
adc
cli
jne
mov
out
jne
call
fsubl
popa
jnp
or
inc
push
jnp
ret
dec
jbe
roll
pop
mov
add
out
push
insl
pop
mov
dec
or
mov
sbb
scas
test
das
xchg
imul
rolb
enter
mov
sbb
lcall
insl
fucomi
jne
pop
and
imul
jne
in
shlb
mov
sahf
jne
enter
or
hlt
sbb
cmp
mov
pop
in
loope
jl
push
jne
movsl
mov
pop
in
dec
cmp
lahf
nop
sub
sbb
in
pop
int3
jne
imul
jge
test
arpl
jbe
mov
and
jbe
mov
mov
sub
push
scas
mov
jne
sub
jne
adc
addr16
push
mov
mov
jno
fcompl
arpl
nop
ss
cmp
fildl
loope
outsl
xchg
imul
jae
jae
lock
dec
adc
stos
add
enter
iret
inc
mov
cmpsb
add
mov
sub
cmc
and
jne
out
je
cmp
jb
jae
push
fsubrl
xor
mov
xchg
mov
sub
sbb
jne
stc
sti
and
jge
mov
pop
ret
inc
hlt
mov
daa
out
mov
aam
mov
jne
push
mov
addr16
mov
imul
aad
jg
lcall
inc
sti
mov
jne
xchg
lods
js
mov
jne
pop
xchg
jae
sbb
into
ror
jne
or
in
mov
cmp
das
test
movsb
imul
sub
idiv
jne
xchg
or
mov
les
outsl
in
jmp
test
stos
push
neg
outsl
fiadds
out
sub
jne
push
or
mov
mov
jne
nop
movsb
sub
push
and
lahf
aaa
es
int
cmp
popf
push
mov
sbb
lret
sahf
sbb
jne
mov
push
das
xor
jne
or
dec
add
mov
ret
jne
xchg
xor
stc
sbb
jne
addr16
sbb
or
mov
shlb
mov
aam
repz
lea
into
negl
sbb
out
inc
dec
jne
push
or
inc
cmp
inc
psubsb
jne
pop
shrb
jne
dec
xorb
jg
jne
push
pop
adcl
xchg
sub
imul
les
cmpsl
iret
jne
data16
divl
sbb
pop
fbld
pop
inc
and
sahf
and
or
and
pop
aad
roll
stos
repnz
cld
add
rcl
rolb
mov
fwait
cmc
lahf
cwtl
push
sbb
hlt
int3
cli
enter
jne
idivl
pop
mov
in
fwait
addr16
jg
insl
adcl
dec
mov
hlt
rcrb
enter
push
cli
jbe
inc
and
jne
push
loopne
dec
mov
xchg
pop
jo
lret
aad
out
ds
ja
scas
sbb
sbb
shrb
repz
cli
and
int
leave
mov
pop
xchg
cmpsl
jne
mov
pop
push
mov
popa
xchg
mov
mov
ja
lods
pop
push
push
adc
insl
jae
in
adc
add
data16
and
mov
add
or
xchg
fcomps
sub
pushf
ljmp
sub
push
inc
inc
dec
mov
clc
mov
push
push
mov
sarl
imul
jae
leave
imul
out
xchg
mov
mov
rcl
bound
push
sub
out
and
fimuls
jae
sbbl
cmp
arpl
stc
or
or
jne
scas
imul
das
pop
jno
xchg
sbb
xor
lcall
ror
inc
xchg
push
mov
dec
nop
push
testb
jne
pushf
and
ja
imul
xor
roll
cmp
mov
jo
pop
pop
sub
sar
fucomp
jne
std
popa
xchg
add
into
popf
sub
sub
sub
lahf
mov
lods
cmp
sub
dec
scas
pop
sub
mov
jne
adc
mov
sub
mov
mov
outsb
mov
ljmp
nop
pop
push
lcall
or
jns
mov
mov
fidivl
dec
es
jmp
pop
out
dec
mov
mov
mov
jne
sbb
mov
insl
lahf
icebp
imul
or
adc
mov
or
adc
jne
out
xchg
test
ljmp
mov
cwtl
outsl
fisubl
cmpsb
xchg
outsl
leave
lea
jbe
out
scas
mov
pop
shll
out
xor
aad
dec
push
in
mov
test
pop
pop
pusha
jmp
mov
jecxz
loopne
sti
orl
mov
stos
fdivs
sbb
add
and
dec
fbstp
test
sbb
jl
scas
out
pop
inc
stos
jmp
jae
xchg
mov
jnp
jne
int
sbb
loopne
sub
or
lret
dec
adc
sar
jne
pop
clc
push
inc
cmp
in
jne
shll
push
fs
sub
jge
mov
add
inc
pushf
das
js
jne
sbb
fwait
mov
shl
ja
push
adc
stos
jne
data16
into
jne
and
insl
lret
test
sarl
or
xchg
int
and
rcrl
lds
fwait
cmc
or
dec
pop
outsb
mov
xlat
xor
pop
pusha
out
add
jne
stos
sub
js
push
pop
daa
add
test
inc
into
mov
xchg
pop
lret
ljmp
xchg
dec
xchg
jbe
lcall
fptan
int
cs
pop
in
sbbl
inc
fldt
mov
fwait
not
leave
jne
in
arpl
mov
or
jecxz
jae
dec
ret
push
xchg
int3
into
xorb
addr16
add
jne
xor
and
in
xchg
ret
das
mov
add
push
ds
mov
iret
push
jl
lahf
loopne
add
ja
xchg
imul
mov
sub
iret
sub
in
stc
jne
jnp
or
adc
jne
out
mov
loope
inc
insl
pop
dec
jbe
inc
inc
xchg
sahf
pop
xchg
es
outsl
sbb
dec
mov
inc
inc
xchg
subb
ljmp
xchg
xchg
dec
and
jmp
bound
add
int3
ret
out
jo
jns
lock
outsl
cmpsb
push
xor
jmp
inc
aad
jne
dec
cld
push
dec
mov
jne
das
mov
jne
mov
mov
test
mov
cmp
cli
lock
mov
lret
cld
or
imul
wbinvd
and
test
lret
inc
xchg
ret
mul
and
jne
cmp
jmp
int
cli
push
cmp
inc
fmull
iret
cld
daa
ljmp
rcll
imul
jo
aaa
pop
push
mov
ret
mov
cmp
scas
jne
notl
jne
ffreep
lds
add
jne
out
mov
mul
in
shrb
outsl
int3
dec
stos
int
movsb
aad
push
ficoms
jno
ret
shl
test
cmpsl
sub
push
scas
cld
sbb
es
adc
sbb
jne
insl
mov
adc
sbb
jne
dec
mov
pushl
jne
adc
cs
inc
outsl
pop
cwtl
pop
nop
cmp
jae
loope
add
jnp
cmpsb
es
jne
pushf
outsl
cs
aam
dec
mov
dec
fsubrs
xor
mov
sahf
out
adc
or
mov
imul
leave
mov
jge
sbb
xor
ja
or
ficoml
or
ret
stos
lret
add
mov
in
rcrb
test
in
stc
dec
jne
push
outsl
cld
lds
cmp
xchg
pop
lods
mov
jne
dec
shl
stc
mov
cwtl
xor
imulb
lock
jne
mov
xchg
jne
push
and
push
outsl
rorb
sahf
mov
leave
cmpl
jae
repnz
inc
lea
aas
xchg
jge
adc
lock
fmul
sbb
jno
sti
stos
push
xchg
shlb
mov
outsl
jbe
ja
jge
xchg
pop
repz
roll
aaa
mov
inc
and
add
pop
mov
movsb
push
xchg
and
cs
stc
rcr
push
jne
mov
frstor
test
add
sub
cmc
push
into
xor
lods
dec
loopne
adc
jne
pop
mov
inc
andb
cmp
and
add
add
lret
xchg
das
stc
dec
jb
pop
cmp
jne
jbe
sbb
mov
loope
xchg
nop
jne
jmp
repz
inc
jne
fistl
jne
addl
jne
jg
and
mov
jmp
xchg
jne
adc
scas
psllw
jbe
negb
push
push
jne
push
nop
pop
add
push
jae
lret
sbb
xor
mov
sub
aas
insl
pop
and
cmc
push
jno
not
jne
and
mov
push
scas
lods
xchg
popf
jae
cmp
adc
mov
push
mov
jae
pop
mov
xchg
clc
cmc
lods
fwait
mov
sbb
sbb
dec
stos
mov
and
orl
pop
ja
inc
or
jbe
add
dec
clc
sub
and
enter
add
mov
mov
test
rol
pop
jne
mov
popa
add
add
scas
xchg
jae
insl
push
cwtl
jmp
dec
add
inc
test
push
shrb
icebp
jae
dec
fs
rcrl
pop
jne
fcoml
ds
repnz
jb
inc
cmpsl
mulb
pushf
jbe
push
pop
enter
jne
xchg
hlt
push
push
scas
and
and
adcl
mov
cwtl
fnsave
sahf
inc
mov
pop
mov
mov
jne
cmc
cwtl
sub
xchg
jne
pop
jl
dec
inc
push
pop
jne
lret
push
arpl
xor
fistpl
push
mov
jne
or
loopne
iret
rorl
dec
repnz
andl
fldt
clc
inc
out
jne
cmp
aas
imul
push
je
xor
mov
xor
push
insb
divl
add
jne
dec
mov
mov
add
xorb
jecxz
jne
xlat
aas
cmc
inc
cmp
mov
jno
aad
inc
shlb
cmpsl
movsl
jl
imul
ja
push
loop
loope
cmp
jle
daa
call
mov
mov
dec
iret
pop
or
std
aam
out
add
xchg
jge
iret
or
mov
sbb
test
jne
cmpsb
pop
push
jnp
fmuls
cld
cmp
mov
ret
clc
xchg
imul
jl
push
push
mov
or
jo
fildl
orb
negl
mov
pop
mov
or
or
add
mov
jne
mov
push
hlt
jne
fcomps
push
jbe
lret
decl
mov
push
mov
push
ss
rcr
xchg
lds
lods
retw
sub
jb
loop
leave
lods
cmp
repnz
test
push
pusha
int3
sbb
or
loope
ja
jnp
mov
pop
sbb
sub
xor
jae
adc
sub
mov
pop
mov
jne
cld
mov
sub
cmc
mov
sbb
dec
pop
fwait
jne
jge
pushf
out
daa
mov
jbe
dec
shr
cmp
pop
jl
push
sahf
fucomi
add
push
inc
sbb
jne
or
aas
xchg
pop
int3
or
rcrl
lcall
int3
mov
push
mov
ss
push
mov
xor
mov
adc
jbe
loop
jbe
je
jne
cmp
dec
lret
cmp
sub
xchg
pop
xor
mov
sub
xor
loope
lea
adc
jmp
and
mov
mov
fcomps
mov
and
adc
insb
push
xorl
adc
mov
fdivrp
xchg
jne
stos
sub
lahf
adc
popf
mov
shl
jne
imul
xchg
clc
push
cmc
jne
mov
int3
xor
jge
ja
lcall
cmp
jae
mov
addr16
jo
mov
and
imul
mov
out
ror
imul
sbb
in
pusha
jne
rcl
arpl
jne
ja
outsl
stos
out
loop
outsl
rclb
stc
push
jb
cmp
push
mov
sub
clc
xor
repnz
sub
fdivs
or
rol
les
lret
bound
mov
ja
xchg
ja
xchg
ss
cwtl
daa
jne
mov
add
std
aaa
outsl
add
dec
jne
in
negb
sub
dec
jae
mov
cmp
push
sbb
lcall
pop
add
xchg
sbb
push
xchg
fdivrp
decl
xor
xchg
and
jae
stc
xchg
ds
jnp
push
int
sub
add
mov
pushf
les
push
jo
test
sub
xchg
hlt
shll
lahf
ss
and
lret
or
jne
pop
sub
xor
mov
lds
jp
jne
add
push
dec
push
sbb
push
pop
fistps
scas
mov
inc
test
cltd
jb
jmp
ret
add
mov
jne
mov
cmp
jns
sti
ljmp
movsb
insl
push
fwait
jg
jne
enter
call
daa
cmpsl
jbe
clc
leave
or
fdivs
int
mov
pop
cmp
mull
inc
fwait
jne
mov
add
dec
push
lock
xor
shrl
jecxz
jne
push
out
cltd
fstpl
jmp
aad
ja
mov
xchg
cmp
lret
and
xchg
jne
enter
push
and
aas
mov
fdivs
cwtl
mov
fldt
jo
pop
push
xchg
data16
shlb
pushf
in
in
mov
cltd
pop
or
divb
lods
jne
lahf
cmpsl
aam
ds
or
mov
stc
ja
add
outsl
stos
cmp
shr
insl
std
cmc
jg
xchg
into
loopne
pop
ret
push
jnp
lods
jne
out
and
jne
sbb
adc
jbe
inc
cmpsl
push
cmp
sub
aas
xchg
ja
xor
push
cmpsb
int3
push
sbb
ja
insb
sub
nop
arpl
lret
or
push
lret
jne
adcb
out
mov
gs
imul
jne
pop
inc
jle
adc
aaa
and
leave
mov
inc
out
and
daa
mov
jne
push
mov
cltd
jno
inc
jmp
mov
es
cmpsl
pop
out
sub
push
mov
mov
out
fld
mov
sub
rcl
sbb
lods
jne
xchg
lock
push
pop
gs
or
mov
jecxz
xchg
inc
test
dec
mov
xor
sbb
jno
adc
dec
push
outsl
lcall
fsubl
xor
mov
outsb
jne
jnp
sbb
cmpsl
ljmp
ss
addr16
lret
out
sub
adc
xchg
ja
inc
cs
leave
ror
lock
fwait
cmp
rclb
inc
ret
adc
and
test
jb
int3
out
fidivs
inc
das
lahf
push
xchg
ret
or
bound
jne
dec
fistps
jne
nop
cmp
ds
xchg
or
cmp
shll
ja
xchg
xchg
jne
push
mov
les
imul
or
lods
mov
mov
jne
rcll
and
jne
jb
bound
push
sub
or
sbb
sub
mov
popa
xchg
jne
sbbl
pop
and
inc
jbe
arpl
out
je
pop
out
lret
xor
pop
sbb
jae
insb
pop
lret
ljmp
push
test
mov
cmp
imul
mov
clc
shll
sub
iret
mov
jne
pusha
repnz
and
jne
xchg
pop
pop
cmpsb
and
jecxz
inc
rcll
call
sbb
imul
pop
push
jns
push
add
imul
fcos
arpl
adc
inc
jge
jmp
aaa
js
shrl
nop
fwait
cld
pushf
outsb
sbbl
jne
xchg
out
mov
adc
jecxz
mov
lea
icebp
mov
fstl
loop
adc
push
jb
pop
out
out
dec
jnp
cmpsl
xchg
aam
inc
adc
loope
ja
aaa
repnz
cmc
lea
push
pop
jne
test
ja
jno
add
in
inc
mov
pop
in
jne
mov
roll
jae
sahf
cmp
cld
push
and
adc
jne
mov
repnz
pop
dec
push
pop
mov
shlb
xor
pop
jne
and
mov
test
enter
mov
rorl
jle
jne
fsubl
push
inc
lds
fadds
test
adc
xchg
std
jne
mov
sub
enterw
ja
scas
jp
ret
jbe
icebp
jecxz
imul
inc
outsl
jl
jne
aas
aaa
sub
in
imul
adc
push
scas
scas
shl
mov
jne
inc
mov
mov
cmpsb
xor
sub
sbb
scas
xchg
out
pusha
lahf
and
das
and
adc
dec
add
shl
lea
lods
pusha
rcrb
jo
mov
sub
pop
mov
in
xor
inc
movsl
mov
cmpsl
and
jne
scas
cld
adc
pusha
sbb
cltd
in
jne
test
les
xor
xorl
jmp
jne
mov
fisttpl
insb
cmp
outsl
xchg
adc
shl
xor
jne
fwait
inc
sbb
lret
jne
jmp
lahf
sbb
dec
pop
mov
dec
xchg
xor
pusha
jne
int
xor
adc
je
loopne
arpl
cmp
stos
out
sar
jae
adcb
mov
out
jp
imul
push
xchg
insb
mov
pop
jno
add
push
add
mov
sbb
divl
shlb
jne
xchg
xchg
mov
repz
xchg
and
pop
jne
or
addr16
add
ja
mov
fsubrl
jne
mov
flds
pop
adc
jae
jns
int3
add
push
cld
sbb
xor
and
pusha
jb
pop
or
jne
inc
xor
add
sbb
push
pop
hlt
arpl
daa
lods
sbb
lahf
std
addr16
mov
pop
outsb
add
ja
pop
xor
cmp
outsl
cltd
shll
jne
cmp
sbb
mov
add
pop
mov
add
idivb
cmp
add
int3
push
mov
sbb
lret
lea
push
lods
lcall
orb
pop
xor
ja
stos
cld
cwtl
push
sub
out
jne
xchg
in
movsl
aam
out
mov
hlt
orl
cmc
pop
mov
jne
sbb
in
add
inc
cmp
je
jae
inc
lea
cld
lret
jae
xbegin
out
das
enter
mov
and
dec
jne
sbb
xchg
or
js
cmp
push
mov
popf
insl
pushf
jne
lahf
pop
lret
push
pop
inc
lods
orb
lahf
mov
or
or
jne
lret
push
cmp
ja
add
aam
push
bound
clc
jne
insb
movsb
sti
es
pop
imul
sbb
pop
push
test
movsb
inc
jne
dec
mov
out
loop
insl
hlt
sub
int
xchg
jo
mov
cmpsb
call
cld
cli
push
icebp
sub
jbe
jl
iret
pop
pop
jne
xorl
inc
pop
fstpl
push
shrl
dec
mov
lods
mov
xor
sub
sbb
lods
add
adc
popf
fnstenv
sbb
jne
cmp
xor
out
clc
jne
mov
or
jne
movsb
sahf
imul
out
sbb
pop
mov
dec
dec
loopne
jne
lahf
adc
push
aam
or
sarb
jne
popf
push
pop
out
push
ljmp
jne
push
leave
sti
cmpsb
scas
mov
pop
cmpsl
push
jae
jne
push
je,pt
pop
out
sub
jbe
xor
lds
sub
adc
fldt
xlat
neg
pop
and
ss
mov
xor
cmp
into
push
out
sbb
in
xchg
add
xlat
pop
jo
jne
xor
and
sub
ljmp
and
popa
leave
xrelease
loopnew
scas
xchg
imul
pop
lahf
xor
xchg
push
int
adc
pop
jg
jne
iret
dec
adc
dec
jns
les
cmc
outsl
cld
js
fistpl
xchg
negb
push
lret
jno
jne
arpl
sub
xchg
lcall
xchg
inc
aad
cmpsl
xorl
cmp
pop
jne
push
inc
sbb
dec
stc
dec
loope
cs
into
imul
xchg
mov
cmpsl
jbe
xor
xor
add
repz
xchg
mov
aas
loope
xor
repnz
leave
iret
in
push
pushf
or
jp
mov
ret
imul
jg
lods
jbe
lea
ja
push
stc
push
inc
ds
fwait
daa
dec
test
mov
jbe
mov
pop
or
fnsave
or
cli
ja
xor
out
inc
test
inc
ljmp
inc
mov
repnz
lods
pop
data16
mov
mov
jge
sbb
in
mov
mull
loop
jmp
adc
cmp
loope
psubw
ja
and
sti
push
jne
sbb
dec
adc
pop
sub
and
repz
lahf
push
mov
out
xchg
jne
push
and
or
mov
cltd
loopne
cmp
in
iret
or
pop
sub
jne
xchg
in
fisttpll
lods
std
sub
cld
jne
lea
ret
and
in
cli
lret
ss
jmp
lock
loopne
cmp
rcl
mov
sarb
test
sarl
sbb
cmp
in
pop
shlb
add
adcb
jae
fs
mov
mov
testb
xchg
push
jne
sbb
jns
cmpsb
mov
fsub
xor
mov
push
mov
jne
repz
pushf
cmp
fwait
popf
into
push
ficomps
mov
jbe
incb
in
dec
push
mov
sahf
in
mov
ss
cli
leave
jae
lcall
cmp
jne
cmpb
es
adc
and
xor
and
jmp
jne
dec
fists
mov
cmc
call
ret
jne
pusha
imul
push
xor
cmp
sub
es
imul
ljmp
inc
adc
xchg
ja
ss
cld
push
jne
pop
ljmp
jne
pushf
das
mov
cmc
sub
sbb
insb
fadds
and
and
out
movsb
outsb
stos
fsubl
dec
push
jle
jno
push
jbe
adcl
in
jne
mov
fucomp
cwtl
jg
pushf
xchg
shrl
out
jge
jp
mul
outsl
or
inc
and
sbb
mov
xor
adc
jno
xchg
ret
sbb
imul
in
xor
leave
pop
rcll
jnp
jne
xor
push
cmpsl
xchg
inc
insl
dec
int3
add
mov
or
repz
clc
lods
arpl
lcall
sub
mov
into
pop
ljmp
scas
in
add
and
jne
push
adc
insl
addr16
jne
cmp
jne
push
idivb
aad
sub
jne
repz
outsl
test
pop
pop
dec
leave
cmpsb
push
sub
fcoms
out
jge
mov
jbe
sbb
jno
sbb
jne
mov
imul
repnz
jg
adc
lcall
dec
pop
inc
sahf
jne
inc
not
sub
leave
mov
shlb
jecxz
je
xchg
inc
inc
push
xchg
sub
or
sbb
and
xor
mov
xor
lock
jl
les
stos
push
lcall
xrelease
xchg
cmp
enter
stc
sbb
ret
cmp
pop
test
sahf
mov
jne
add
mov
enter
pop
cli
xor
add
iret
mov
push
or
inc
imul
cmpsl
cwtl
ss
pop
jne
sti
mov
pop
int3
adc
jne
xor
cmp
adc
mov
sub
popf
sub
insl
mov
xor
mov
xchg
lahf
cmpsl
cli
lods
push
in
jne
jb
imul
and
aad
jmp
adcb
shrb
or
jne
fisubrs
lcall
mov
sti
mov
cltd
leave
sub
inc
add
aad
outsl
sub
mov
and
stos
mov
jbe
pop
stos
ja
fsubr
sub
sub
push
cmpb
stc
popl
and
jno
xchg
mov
loopne
inc
fimull
and
int3
push
stos
dec
xchg
in
loopne
mov
mov
push
mov
outsl
jmp
or
cmp
cmp
or
xchg
push
leave
imul
orl
adc
cmp
xchg
mov
lcall
fistpll
jae
sar
cwtl
aaa
xchg
pop
push
inc
cmp
inc
repz
adc
in
xorb
add
cmp
push
push
cmpb
adc
cmp
fimuls
pop
ss
repz
pop
jne
push
inc
mov
jne
sub
fwait
ljmp
jb
ret
int3
mov
jne
inc
call
mov
fsubp
ret
xchg
xor
xor
adc
lahf
sub
outsl
aam
mov
push
outsl
dec
leave
inc
xchg
pop
push
push
into
jl
sub
idivb
pushf
push
pop
andl
out
pop
dec
sbb
xchg
movsl
jne
cltd
add
push
out
jp
jb,pt
jns
xchg
jne
mov
insb
mov
jne
testl
cld
ja
jl
sbb
xchg
cmpsl
decb
add
dec
lret
or
push
and
mov
mov
roll
dec
outsl
mov
cmp
adc
jne
and
insb
cwtl
ficomps
mov
sub
mov
aas
jne
imul
lcall
shrb
xchg
nop
cmp
jae
mov
leave
and
xor
inc
cltd
jmp
call
adc
jne
in
fwait
in
inc
mov
mov
dec
mov
in
xor
add
inc
push
jb
pop
mov
imul
jne
mov
sub
cmp
push
push
test
add
and
sbb
push
jne
sbb
scas
cmp
lret
jne
sbb
call
dec
sub
lcall
in
aas
pop
outsl
jns
cld
lret
out
sbb
data16
inc
jae
add
xor
lds
sub
add
das
fidivrl
push
lret
rcrl
outsl
cltd
popf
or
inc
loope
mov
push
mov
mov
loopne
iret
mov
jl
mov
stos
popf
dec
lret
mov
cmp
and
xchg
cmp
divl
xor
shll
popf
leave
ljmp
divl
sub
rcrl
sub
movsl
pop
jne
xchg
mov
ret
pop
lds
xor
jb
jne
popa
cmp
inc
push
addb
lahf
aas
sbb
int3
hlt
jmp
jbe
xchg
fisttps
out
je
movsb
fdivrs
xlat
xor
or
test
mov
pushf
xchg
pop
daa
jae
add
nop
call
inc
dec
fcoml
jne
sub
out
jmp
mov
addb
divl
out
loopne
sub
jne
mov
mov
jne
dec
out
fcomi
cmp
enter
test
out
das
jb
pop
out
sub
pop
jg
in
popf
push
xchg
xor
sahf
and
mov
and
mov
dec
jne
rol
mov
ja
in
jne
addr16
jne
mov
sbb
jae
ror
sti
jecxz
mov
imul
lock
fs
push
push
inc
xchg
in
add
lods
xchg
inc
fisttpl
ja
xchg
dec
fdivl
test
mov
and
jge
jne
ss
xchg
mov
scas
das
or
xlat
jbe
xchg
movsl
or
sub
jne
jecxz
jmp
jne
shrl
jg
jno
pop
sub
jbe
mov
cli
aad
movl
jcxz
pop
inc
dec
imul
clc
inc
notl
jne
sti
dec
adc
lea
iret
jnp
lock
jmp
cmp
adc
mov
iret
pop
pop
jnp
ret
jle
movsb
xlat
imul
sbb
inc
inc
sub
sbb
int3
mov
or
movswl
insl
fstsw
jbe
out
mov
xchg
stc
mov
sbb
push
rep
or
mov
xchg
cmc
pushf
sbb
jmp
clc
adcb
cmp
mov
xor
xchg
cmp
mov
call
push
ds
dec
jne
or
andl
mov
jbe
push
sbb
mov
mov
xchg
ret
imul
add
add
jg
mov
mov
mov
rolb
in
and
pop
shrl
xchg
pop
sbb
mov
jne
sbb
aaa
pop
orb
popf
sbb
add
xor
jae
pop
mov
adc
sub
jne
sub
dec
lret
inc
jno
cmp
aad
dec
mov
repz
insl
jnp
inc
fldcw
push
mov
adc
out
jmp
mov
testl
je
insb
sub
add
sbb
imul
out
fs
into
stos
rcll
pop
mov
stos
lcall
flds
dec
pop
aas
daa
shl
js
loopne
jp
movb
fs
les
fdivrl
lahf
mov
pop
data16
outsb
or
std
pop
xlat
jne
out
fisubl
cmc
xchg
dec
xor
push
fisttpll
jle
push
xchg
loopne
ljmp
sub
les
jmp
xchg
xor
pop
ds
jne
dec
clc
ror
sub
js
xor
mov
sbb
cmpsl
nop
lods
ss
jb
jno
ds
sub
cmp
sub
daa
jne
sub
int
push
fildll
lea
pop
je
add
sub
sub
int
ja
xchg
mov
ljmp
push
cmp
repz
xchg
push
rorb
jmp
mov
dec
jbe
xchg
sbb
addr16
cmp
lds
lcall
in
test
mov
jbe
push
dec
in
sub
jo
int
push
out
jne
repz
imul
ja
jbe
jge
adc
jae
and
aam
push
add
mov
fdivp
push
cmc
shll
inc
pop
mov
mov
cmpsl
nop
negb
and
jne
push
xlat
fisubs
lahf
mov
jne
xor
adc
sub
mov
dec
add
addb
clc
mov
xchg
and
or
stc
fs
imul
and
pop
inc
mov
mov
es
in
gs
jne
fisubrl
sbb
popf
jne
cs
jg
push
mov
ja
rcrb
imul
divl
or
stos
dec
mov
icebp
pushf
ja
xchg
mov
sub
loopne
mov
adc
lret
add
xchg
cmp
or
xlat
cmc
mov
or
sqrtps
scas
dec
and
jo
out
es
xlat
mov
rcrb
mov
divb
pop
xchg
xor
inc
jne
insl
les
cmc
es
jne
aam
pop
push
in
jne
ret
lea
mov
outsl
add
popa
in
mov
ja
jmp
call
sbb
jne
add
fcmovb
sub
sbb
int3
not
sub
jne
imul
leave
sbb
jne
mov
and
add
repz
mov
pop
jmp
jle
adc
test
fs
sbb
ja
push
int
cmc
orl
ficoml
aaa
das
dec
or
loope
jge
xchg
lret
imulb
jns
jp
cmp
subl
jne
adc
mov
shrb
pop
sub
sbb
jne
mov
xchg
shlb
or
mov
jae
jbe
push
bound
adc
cmp
jbe
scas
sbb
popa
sti
cmpsl
mov
popf
dec
aam
add
inc
dec
bound
xchg
inc
sbb
test
in
xor
jne
jns
icebp
adc
mov
sbb
inc
xchg
test
arpl
pop
movsb
add
lcall
inc
adc
int
addr16
inc
data16
push
push
push
jp
daa
sbb
aam
stos
xchg
stos
pop
jne
and
push
push
jne
xchg
mov
xchg
cli
in
add
cmc
jne
xor
pop
dec
in
jne
mov
push
push
mov
sarb
lret
mov
gs
jne
xlat
mov
loopne
sbbl
outsl
inc
in
cld
rorl
mov
jnp
inc
xor
lock
mov
jne
add
xor
mov
sbbl
pop
push
mov
jge
jae
mov
bound
jne
mov
js
andb
mov
and
push
push
ss
mov
sub
and
mov
dec
shrl
in
sbb
sub
pop
and
cmpsb
jne
mov
cmp
jae
cld
movsl
addr16
shl
mov
cmpsl
dec
scas
mov
or
cmp
mov
stos
cmp
push
or
jne
movsb
dec
out
xor
daa
sub
jbe
mov
push
ds
sahf
jne
pop
insb
scas
rep
jns
and
mov
test
subl
mov
rol
xor
push
lds
jbe
and
sbb
sbb
jp
cmc
push
add
jo
out
leave
xchg
and
outsb
js
scas
sub
and
iret
scas
jnp
jp
ljmp
xchg
cmp
fnstsw
shl
jno
ljmp
or
jne
adc
mov
test
stos
mov
stos
lcall
outsl
jae
lea
loopne
push
inc
sti
cmp
cmc
or
shrb
jne
push
shrb
insl
lahf
mov
jne
mov
xchg
pop
jne
lods
mov
pop
cmp
bnd
mov
adc
ja
cmp
fdivs
mov
mov
fimull
mov
jne
nop
mov
out
dec
leave
jne
data16
pusha
sbb
mov
shr
jne
pop
out
push
adc
add
adc
xchg
outsb
div
dec
sbbl
jne
xchg
clc
es
sbb
addr16
dec
mov
push
dec
sub
dec
jno
jb
arpl
mov
mov
sub
insl
jbe
dec
mov
inc
ret
cmp
adc
int3
ret
cmp
fidivl
fstps
rcll
jnp
mov
xor
cmp
jne
movsb
fisubrs
out
and
jnp
loope
cmp
sbb
mov
mov
adc
inc
mov
jno
xchg
sbb
sti
movsb
fcomi
rolb
aaa
loop
dec
mov
inc
xor
int3
dec
mov
outsl
cltd
add
shlb
fisttpl
stos
and
ja
leave
lea
clc
dec
jne
and
lock
xor
dec
jle
loop
scas
jne
and
pusha
cltd
in
fcomp
jl
cmpsb
jae
mov
cld
mov
and
mov
xor
clc
mov
sub
adc
inc
and
shlb
fnsave
cmp
push
cmp
xchg
fcmovne
mov
sub
jl
push
jle
imul
sbb
stos
sub
repz
adc
add
jae
subl
jle
inc
mov
dec
mov
jne
sbb
inc
ret
cs
mov
stos
xchg
pop
bnd
jno
insl
mov
or
dec
lahf
fildll
in
popa
sahf
scas
leave
mov
xchg
jae
or
dec
ss
adc
aam
sbb
scas
imul
sub
imul
inc
adc
cmp
jne
push
mov
add
add
mov
pop
sbb
mov
jne
sti
imul
dec
fisttpll
jge
js
stos
mulb
loopne
scas
stos
pop
push
es
jae
jmp
insb
inc
les
into
insl
insb
std
aaa
jne
movsl
jns
imul
mov
mov
push
jb
cmpsl
iret
cmc
shrb
jns
dec
sbb
push
mov
xor
xor
fcmovnb
sbb
push
test
inc
sarl
jne
imul
jnp
in
jmp
pusha
jne
or
cld
lds
insl
cmpsl
fadd
aam
jne
adc
ret
cmp
ja
lret
into
pop
test
idivl
mov
push
fcmovnu
jae
call
xor
fistps
cwtl
fdivl
or
jae
push
clc
cmpsb
jnp
xor
lcall
mov
xchg
negb
pop
outsl
in
mov
cmp
imul
idivb
fisttpll
adc
mov
ja
blci
and
lods
sahf
jmp
rclb
sbb
jne
mov
mov
ljmp
cltd
mov
cmp
ja
jne
mov
mov
imul
mov
push
lds
pop
test
iret
sti
jb
sbb
mov
scas
cmp
sbb
orb
xchg
imulb
and
outsl
jno
outsl
sbb
std
push
movsb
mov
jo
or
fsub
hlt
insl
sbb
push
jae
jge
stos
ljmp
adc
pop
push
divps
aas
sbb
xor
les
fsubrl
xor
out
ja
bound
std
inc
cli
mov
adc
popa
xchg
jne
lods
notl
outsb
insb
sub
into
mov
repnz
xor
inc
test
outsb
jne
enter
subb
popf
dec
aas
clc
push
adc
testb
jne
jo
lcall
lods
arpl
shrb
fsubp
int
jbe
push
addl
pop
imul
xor
stos
jl
in
cli
pop
jne
dec
ficoml
mov
inc
scas
jl
sbb
pop
mov
icebp
mov
mov
xor
mov
cmpsb
outsb
mov
daa
rcrl
push
clc
cmp
mov
push
inc
clc
popf
sbb
mov
mov
repnz
scas
adc
push
outsl
addr16
push
js
cmp
stc
out
xor
and
push
ja
add
sbb
mov
jg
nop
aaa
push
jbe
or
sbb
icebp
pop
ja
sahf
mov
jne
adc
call
jne
insb
jns
sub
insl
loopne
je
test
into
jl
jg
pop
pop
movsl
jne
mov
inc
outsl
sub
add
addr16
bound
jne
pop
pop
push
ljmp
pop
push
add
dec
sbb
pop
outsb
and
add
mov
dec
xchg
xchg
mov
lret
jne
in
popf
fwait
shll
ret
inc
lock
cmp
popf
pop
leave
jge
aad
sbb
jbe
push
data16
fs
push
sti
cmc
xor
fcmovnbe
jne
cmp
int
push
lret
mov
and
mov
push
iret
mul
mov
jne
faddl
jne
xchg
stos
mov
lahf
bound
mov
jne
mov
scas
idivl
mov
xchg
jae
add
clc
into
popa
dec
cmc
stos
and
dec
lods
sub
jne
out
and
ret
mov
add
mov
leave
add
lret
mov
fiaddl
sub
or
outsl
pop
cltd
jmpw
daa
push
push
xchg
mov
mov
lock
or
loop
popa
inc
lret
mov
ret
int3
out
sub
and
fimuls
shll
add
sti
jne
cmc
lcall
in
xorl
sarb
adc
outsl
jne
cmp
or
pop
push
daa
mov
test
addb
and
loope
lret
add
les
cmp
inc
dec
inc
xor
jne
ss
mov
dec
pop
mov
or
xchg
in
pop
inc
push
add
decb
push
aad
fnsave
popa
jne
jae
mov
leave
jne
jge
mov
in
mov
ja
lds
push
pop
mov
fldt
rcr
fmul
into
rcll
ficoms
mov
jmp
mov
fnstsw
add
out
jmp
and
push
in
bound
xchg
cmp
inc
rolb
pop
and
adc
adc
mov
dec
jmp
aam
out
lahf
jne
cltd
movl
outsl
pop
inc
mov
push
mov
dec
hlt
or
cltd
jne
mov
lock
sub
jne
adc
mov
jne
pop
rcrb
mov
jge
stc
outsl
or
jne
or
repnz
pop
nop
dec
in
pop
adc
xchg
in
aad
xor
test
mov
divb
lret
dec
sub
xchg
and
es
movsb
inc
imul
aad
js
shll
clc
push
xor
or
out
sub
fstpl
subl
pop
out
or
cmc
adc
mov
fldcw
pop
outsb
jge
mov
out
push
sub
mov
xchg
and
fisubrs
mov
jbe
in
shrb
xchg
jbe
repz
arpl
add
pop
xchg
ljmp
mov
negl
pop
in
fs
push
rclb
pushl
sub
jne
dec
movsl
in
push
sti
iret
es
pop
pop
add
aad
jne
outsl
enter
mov
sbb
jo
push
pop
scas
jae
or
mov
jg
lahf
xorb
loop
dec
xor
inc
cmp
aad
mov
stos
cs
loope
pop
stc
inc
cmp
add
xchg
imul
test
mov
ljmp
shlb
adc
iret
ds
gs
mov
jne
add
sub
jne
dec
cwtl
pusha
pop
sub
call
add
mov
aad
decl
scas
mov
jp
jnp
cld
fcoms
inc
jae
inc
xchg
pop
cmpsl
inc
xchg
sbb
addr16
sub
inc
shr
cmp
dec
cmpsb
insb
mov
dec
lcall
xchg
jno
jl
lods
scas
add
ss
nop
jne
pop
xor
push
xor
jg
cmp
ljmp
lahf
loopne
jecxz
dec
xor
or
lcall
add
mov
rclb
jne
adc
jne
test
shl
mov
sbb
fistps
jne
mov
fwait
mov
jne
call
pop
dec
jne
out
pop
fbstp
mov
xchg
imul
inc
inc
ret
and
les
dec
cmc
mov
inc
jne,pt
mov
out
sub
mov
fwait
jge
mov
sbb
jmp
mov
in
dec
fadd
and
sbbl
ret
inc
or
outsl
push
sbb
out
mov
jne
add
pop
lret
out
mov
xchg
outsb
lea
in
jp
dec
cmp
ficoms
mov
xor
add
xor
jae
lret
adc
hlt
imul
jne
or
jno
jns
testl
pop
mov
pop
lcall
jne
inc
dec
imul
movsb
lods
mov
sbb
mov
scas
gs
jge
into
mov
cmpsb
neg
es
inc
and
mov
shlb
jecxz
test
cmc
test
pop
mov
movsb
and
loop
jne
add
cld
fwait
pop
adc
loope
xlat
or
sub
lret
lcall
mov
popf
insl
inc
sahf
clc
or
ret
xchg
add
stc
shll
add
jp
mov
jl
jge
lods
or
sbb
jne
mov
jno
jae
add
pop
loop
mov
lods
jne
lds
sbb
lock
jne
daa
ljmp
fimuls
jmp
into
dec
pop
jno
jmp
out
lock
mov
fldenv
fsubrl
inc
scas
cld
insb
aad
jns
xchg
out
movsb
pushf
test
aam
lock
fdivs
sub
cmp
arpl
je
sbb
aaa
lods
jne
sub
dec
add
cmp
dec
mov
xor
mov
enter
stos
fimuls
xchg
ret
pop
clc
jecxz
sti
lret
or
daa
repnz
fcoms
inc
cmp
push
jne
or
mov
pop
cmp
shrb
jge
ficoms
shll
in
mov
movsl
lret
add
negb
jge
push
sti
and
lock
pop
and
movsb
jae
xchg
loopne
sarl
not
or
jne
ja
mov
ljmp
fldenv
rcll
jae
fwait
jns
jne
fstl
jne
jp
negl
push
jne
mov
mov
inc
rolb
addr16
outsl
rcll
es
pop
ds
jne
or
arpl
in
jg
test
mov
mov
push
mov
jae
lret
dec
pop
divl
xchg
fstps
fwait
stos
or
cwtl
mov
push
addl
push
jne
mov
push
jp
jle
jnp
imul
push
lds
inc
test
jbe
gs
imul
push
in
jl
sub
arpl
inc
sbb
out
in
lahf
sbb
lcall
pop
loopne
jne
repz
add
xchg
jmp
lret
pop
ja
clc
aas
dec
xor
rep
lcall
lock
pop
movb
lcall
arpl
jne
push
mov
cmpsl
push
push
jbe
js
mov
jne
lds
out
jne
or
dec
out
loopne
jne
xchg
or
addl
cmp
iret
repnz
mov
jne
jl
xor
adc
mov
push
movntps
daa
jbe
or
in
andl
daa
sbb
arpl
addb
testl
xchg
insb
lds
into
pop
sti
jae
jns
sbb
mov
mov
je
jne
addr16
repz
pushf
and
mov
or
add
jbe
notl
jne
stos
call
imul
push
mov
pop
adc
jb
scas
lods
cmc
pop
loop
jae
mov
bound
xchg
sbb
push
clc
push
pushf
jne
and
les
insb
add
and
cmpsb
rcrl
and
in
jne
mov
jns
push
shlb
xchg
jne
pop
sbb
mov
loope
mov
cmpsl
mov
fildll
clc
adc
dec
test
lcall
add
fmul
int
jmp
add
sub
insl
jmp
shll
mov
push
jp
xor
dec
jne
or
cmpsb
clc
mov
rcrb
ljmp
addr16
and
repnz
pop
orl
or
lcall
xchg
jne
mov
dec
xchg
inc
jbe
jne
fs
jnp
or
les
mov
fdivs
pushf
mov
shlb
mov
inc
jb
dec
loope
cmp
out
pop
lahf
xor
jmp
mov
in
lret
adc
xchg
testb
cmp
mov
mov
outsl
xlat
push
mov
pushaw
test
lret
sub
fdiv
jne
inc
cmp
adc
loopne
jnp
sti
cmp
and
jbe
pop
insb
mov
fildl
pushf
jne
push
in
fs
mov
int
bound
sub
leave
outsb
hlt
outsl
sbb
jbe
icebp
in
shrl
lods
insl
dec
jne
fdivrs
int3
xchg
fwait
sub
add
mov
inc
dec
push
jnp
sbb
int3
sbb
jne
mov
aad
call
cltd
or
cwtl
leave
mov
cmp
fprem1
pop
or
imul
je
insb
iret
xor
push
push
ja
fimull
push
push
push
push
mov
inc
negb
adc
clc
movsb
xchg
aad
dec
loopne
and
dec
ss
cltd
insl
addr16
pop
aas
negb
jne
or
sub
imul
xorb
push
test
jnp
jne
adc
int3
adcl
lock
cmpsl
fidivs
add
xor
dec
xchg
xor
mov
inc
adc
pop
jae
adc
pop
leave
sbb
ficomps
jne
push
jo
dec
movsb
adc
mul
adc
xor
test
and
jne
or
lahf
mov
jecxz
jle
inc
jbe
sti
cwtl
ss
and
lock
push
or
jne
and
jmp
fcomps
mov
in
dec
lret
out
mov
cltd
jne
mov
xor
in
inc
sarb
xadd
movsb
movsl
lret
jne
cwtl
cmp
fs
cmc
test
sbb
pop
lahf
push
cmp
or
push
pusha
pop
out
pop
call
push
xchg
jbe
and
movsl
jne
jecxz
mov
pop
test
jne
adc
loopne
std
enter
data16
inc
ja
jb
mov
jne
leave
jmp
es
dec
add
sbb
mov
stc
mov
pop
pop
stos
lret
ret
je
mov
cmc
movsb
or
jmp
mov
iret
jne
inc
mov
in
cmp
jne
or
jb
xchg
outsw
xor
sub
mov
xor
xlat
scas
xchg
mov
movsb
sahf
ja
mov
in
aaa
mov
subb
sub
pusha
inc
hlt
fcomi
pop
jne
mov
xchg
lret
les
xchg
jne
shlb
mov
or
inc
insb
aam
mov
lcall
in
xlat
jne
xchg
aad
adc
mov
jmp
ror
mov
inc
insl
sub
mov
dec
dec
push
mov
jne
sbb
jecxz
cltd
mov
jb
lds
sbb
cmp
popa
jo
loop
cmpsl
jne
dec
iret
or
jns
add
push
pop
dec
ret
les
inc
sbb
jecxz
aaa
cmp
aam
out
fdivl
add
das
lea
addr16
ja
add
fadds
mov
out
in
je
push
cld
lcall
push
mov
xor
xor
outsl
inc
mov
add
jne
repz
mov
mov
aad
cmp
imul
test
bound
push
mov
add
ja
les
sti
outsb
dec
jne
fcomip
jo
mov
sub
xor
jne
cmp
mov
dec
cltd
cli
jne
pop
cmpsb
pop
pop
adc
mov
mov
ret
push
jne
push
sti
pop
stc
xor
out
sbb
cmp
jne
nop
cmp
jne
inc
mov
cwtl
imul
scas
inc
xor
jne
xlat
jle
into
sub
ljmp
jne
fwait
pop
popf
pop
cltd
jne
inc
or
into
lret
out
dec
dec
push
mov
inc
jecxz
mov
dec
loop
mov
xchg
sbb
shlb
ds
jb
xchg
adc
out
ja
jbe
cwtl
pop
in
call
mov
jne
mov
pop
cmpsl
dec
sbb
iret
insl
push
jbe
dec
mov
mov
nop
decb
or
jo
orl
fiadds
jne
aad
outsl
nop
inc
aaa
into
jnp
daa
sub
popf
pop
jne
xchg
dec
sub
in
pop
insb
inc
imul
pop
jne
push
mov
cmp
es
not
or
jns
and
decb
cmp
jnp
xchg
push
sbb
movsl
push
pop
add
push
mov
notb
ds
sub
push
fcmovbe
jne
adcb
mov
dec
adc
ja
inc
aaa
mov
pop
jo
stc
mov
insl
pop
notb
xor
lods
dec
mov
jne
cmp
stos
inc
jb
add
sarl
add
insb
jne
sub
dec
pop
mov
jne
imull
push
imul
daa
leave
inc
into
and
fistpll
rcrl
cmp
subb
cmp
jo
fld
out
mov
js
lds
jne
clc
xor
xlat
push
xchg
into
push
inc
mov
dec
stos
pop
fcomp
popa
mov
jb
pcmpeqw
add
in
mov
arpl
jg
push
push
or
fs
jg
lock
mov
aad
jne
push
imul
ja
xor
inc
aad
jae
pop
pop
jecxz
pop
xchg
mov
loopne
inc
int
jne
jo
aad
fiadds
inc
fs
movups
pusha
jno
fwait
test
mov
shll
mov
jo
mov
mov
mov
mov
xor
shl
divl
stc
dec
dec
xlat
add
les
scas
and
sub
daa
imul
es
xlat
jmp
jae
int
mov
dec
cld
push
jmp
and
push
mov
in
jle
cmpsb
push
or
sub
mov
pop
sbb
adc
jbe
add
inc
mov
dec
cwtl
pop
add
sbb
insl
adc
lea
daa
push
and
fbld
test
jne
jp
rcl
shrb
jle
fdivl
insl
jecxz
iret
sti
dec
or
jle
jge
neg
cmc
pop
and
bound
sbb
lret
push
pop
sub
mov
in
repz
mov
or
jne,pn
inc
push
clc
aaa
in
test
xlat
push
push
push
push
xchg
aad
xchg
xor
popf
imul
mov
inc
inc
shll
loopnew
fistl
push
fildll
insl
adc
mov
dec
cmp
push
imul
cld
pushf
sahf
sarl
shll
jp
inc
push
outsl
mov
lret
mov
bound
xchg
sbb
fistpll
fisubl
test
repz
mov
and
iret
xchg
jne
addr16
mov
in
fisubrs
rcrb
push
out
dec
pusha
inc
push
xchg
shll
incl
mov
add
in
inc
jne
dec
das
dec
es
fidivl
lahf
outsl
cmp
into
push
lret
adc
jbe
push
cmpsb
push
jnp
out
lcall
add
push
sbb
mov
enter
mov
xor
or
cmp
std
ja
sub
in
jne
sub
dec
test
aam
dec
pop
jne
xchg
cmpsl
push
cwtl
xor
aaa
fcoms
leave
and
insb
iret
stc
ja
shlb
cmpsl
loopne
pop
clc
or
fldcw
cmc
lcall
scas
lret
jne
jmp
mov
push
cmp
pushf
mov
enter
shrb
xor
inc
cmp
stc
add
in
sub
lea
into
andl
jne
lret
bound
mov
lds
outsl
les
push
mov
mov
push
fbld
add
jg
jnp
mov
les
inc
cmp
push
inc
push
cmc
paddd
mov
js
cmp
push
pop
andl
jno
add
ret
sub
jne
out
filds
lahf
pop
xchg
jae
or
aas
movsl
shlb
cmpsl
push
flds
jp
sub
negb
xchg
mov
xchg
mov
cwtl
jg
jne
in
movsb
sahf
mov
in
loopne
test
cmc
daa
push
xchg
and
jb
add
jl
jne
adc
mov
scas
mov
and
addr16
sahf
das
sbb
into
jne
or
mov
mov
pop
icebp
call
and
xchg
mov
push
out
into
or
dec
rolb
data16
leave
outsl
fmul
sub
shl
push
imul
jg
test
imul
mov
dec
daa
inc
push
aad
mov
and
mov
outsb
scas
sub
popa
daa
xchg
or
divl
fisubrs
es
stos
xchg
ss
mov
mov
scas
stos
shl
addr16
add
xor
in
xorl
mov
dec
push
sbb
mov
pop
or
div
cmpsl
lock
sti
jne
sub
loope
cmp
ljmp
stos
daa
test
int3
jae
js
and
decb
jl
data16
cmp
jno
xor
enter
lcall
sbb
jbe
lds
adc
loope
aaa
sbbb
cmp
repz
test
fldenv
dec
std
and
dec
call
test
sbb
movsl
jp
pop
dec
jne
cld
fldenv
lods
nop
shll
sbb
outsl
in
stos
mov
stos
jbe
sub
jp
jne
xor
mov
mov
jns
lahf
mov
rcl
stos
xor
xchg
or
xor
mov
rolb
add
shlb
push
repnz
adc
imul
pop
cmpsb
xchg
scas
imul
cli
test
jne
fwait
push
lret
or
jb
outsl
and
adc
cltd
xchg
xchg
mov
bnd
lret
mov
cli
negl
inc
xchg
mov
mov
ja
shll
or
sti
test
adc
sub
pop
jne
sub
pop
fildl
jbe
fnsave
cmp
xor
sbb
in
jne
push
mov
movsb
jne
stc
or
rcr
jne
aas
ud2
push
ret
jne
add
ss
jns
cmc
xor
dec
ja
lock
into
and
int
sub
pop
cld
fisubl
addr16
imul
inc
in
sub
jne
pushf
push
cmp
xchg
and
lcall
jmp
subl
aas
xor
xchg
push
cwtl
sbb
clc
cmp
xor
mov
xchg
sbb
loope
jge
jbe
fwait
xlat
cmp
lds
xor
jne
imul
mov
sahf
fdivrs
pop
jne
mov
shlb
test
daa
jne
outsb
add
insb
sbb
sub
sub
testb
dec
not
fstpt
xor
mov
xor
addr16
out
xchg
or
ret
push
push
push
xchg
adc
mov
dec
negl
mov
ds
jne
jmp
lahf
mov
pop
sub
jne
mov
fldt
shr
loopne
mov
push
or
pop
sub
mov
cmp
cmp
jne
outsb
out
arpl
jecxz
inc
push
negb
add
pop
push
push
add
or
jne
add
and
pop
les
mov
and
pop
push
inc
mov
mov
xchg
dec
jne
shr
mov
jecxz
add
lods
call
shll
inc
fnstenv
push
dec
outsb
mov
and
or
movsl
mov
jp
pop
inc
push
dec
outsl
push
or
push
sub
repz
fstl
outsl
fmul
lods
jne
int3
loope
sub
mov
gs
rcrb
or
cmp
mov
or
incl
pop
dec
addr16
insb
cmc
je
adc
xor
jne
lea
les
dec
jne
pop
dec
mov
inc
pop
cmpsl
jne
adc
aaa
inc
in
jne
leave
ljmpw
xchg
imul
jne
lea
push
dec
jecxz
push
push
pop
jne
dec
pusha
imul
adc
pmaxub
mov
or
jge
ja
add
outsl
lcall
add
jae
dec
repnz
xorb
mov
dec
test
mov
pop
jbe
push
inc
out
jne
repz
dec
xchg
test
mov
and
mov
mov
fistpl
jne
int3
data16
outsb
sub
dec
fcoml
clc
cmp
mov
out
pop
ja
stos
cmpsb
jge
in
inc
negb
outsl
movsb
loope
outsb
sub
lret
jne
mov
xchg
ljmp
cmpsl
mov
add
and
or
jne
adc
fdivrl
cmp
mov
jecxz
mov
push
jne
pop
mov
fidivrs
push
jne
les
fsub
loope
cmp
lock
nop
in
dec
lret
jmp
push
mulb
lds
xchg
jae
and
pop
xor
repnz
push
movl
sbb
inc
addb
xchg
stos
jne
cld
sub
jecxz
jne
mov
faddp
popw
jp
mov
enter
out
jne
push
mov
dec
sub
mov
jecxz
xchg
fxch
hlt
mov
xorb
leave
inc
scas
lret
cmp
bound
ficomps
cmpsb
test
inc
xor
imul
xchg
jo
scas
sbb
inc
or
xorl
xchg
jne
filds
es
lret
sbb
pop
aad
sub
or
sub
pop
mov
cmpsb
into
mov
and
cli
out
inc
ja
cmp
or
xchg
sbb
out
in
ds
mov
dec
ja
cmp
add
xorb
movsb
cmpsl
vphadduwd
and
push
mov
inc
cs
adcl
ja
inc
add
ds
xchg
jne
mov
ficoml
popf
cmpsl
imul
sahf
mov
ja
ss
leave
xchg
pop
in
loop
int
mov
scas
and
jne
stc
adc
xchg
lea
jne
push
add
jne
les
fcomps
and
sbb
in
mov
push
cld
pop
xchg
and
jne
rcrb
pusha
add
jg
dec
cmp
imul
inc
sti
inc
inc
testl
jne
add
lret
test
and
inc
jae
sbb
rol
jne
nop
adc
sub
lret
mov
mov
sbb
cmpsb
hlt
fucomp
in
xchg
int3
fidivl
push
mov
jmp
mov
dec
jne
cmp
mov
xor
stc
jne
decl
enter
out
pop
cwtl
ja
xchg
push
repz
jp
cmp
sub
ljmp
testb
icebp
and
push
cmp
sbb
call
sub
inc
and
andl
jne
subb
mov
fnstenv
mov
xchg
xchg
jne
fnstsw
jne
jmp
insl
enter
inc
fistpl
pop
mov
insb
notb
dec
or
sbb
stos
pop
or
into
mov
push
divb
and
jle
mov
fidivs
cs
and
jbe
sbb
imulb
mov
lret
fucom
shl
pop
sub
loopne
xor
jne
sbb
sbb
ds
js
popf
cmp
es
sub
mov
jne
fdivs
pop
xchg
mov
pop
jnp
add
mov
mov
rcr
jae
adc
pop
sti
out
or
mov
sahf
mov
sbb
test
adc
loop
ss
push
jg
into
dec
out
sub
imul
jae
jl
adc
inc
push
xchg
lds
xor
mov
and
data16
ja
loope
add
add
xchg
cmpb
popf
mov
xchg
sub
sbb
and
jne
icebp
and
push
movsb
popa
jne
push
test
jg
out
cs
jae
sbb
or
sbb
and
mov
fcmovb
lock
rcrb
fs
fsts
mov
mov
pop
adc
jmp
and
and
dec
fldcw
or
scas
mov
pushf
pop
or
test
mov
aam
enter
pusha
hlt
subb
mov
jne
aas
sbb
aaa
imul
dec
add
inc
pop
jne
int3
and
rol
push
jne
retw
cmp
jne
out
in
clc
pop
dec
mov
lret
xchg
mov
inc
xchg
test
sbb
jne
lahf
ja
jmp
dec
adc
aas
hlt
add
imul
rorb
ret
jne
les
addr16
xchg
enter
dec
xchg
jg
mov
sub
popf
sub
es
sarb
repnz
movsl
inc
xor
xlat
sti
pop
insl
es
xchg
imul
rorb
add
pop
lods
mov
ds
jne
pop
and
pop
sti
lret
bound
xchg
mov
add
jne
mov
xchg
mov
aam
insl
adc
lret
jne
push
sub
aaa
adc
jae
in
incl
jl
fidivrs
mov
popa
ss
jo
mov
xrelease
imul
dec
lret
jbe
push
jne
clc
dec
inc
ss
stos
and
pushf
imul
mov
ja
inc
cmp
cmc
add
test
dec
loop
iret
orl
and
lock
int
call
sbb
jne
cld
and
pop
fisttpl
and
into
cs
add
in
or
jp
adc
sahf
shlb
jne
dec
mov
insl
dec
fwait
mov
adc
icebp
xchg
adc
jbe
loope
jg
iret
or
out
jne
mov
pop
fwait
jne
cli
call
addr16
dec
xor
push
int3
push
cwtl
jnp
sub
clc
xor
dec
inc
jae
subb
sbb
xchg
scas
inc
stos
sub
loopne
cld
fucomi
outsl
adc
fsubrl
inc
sbb
enter
jmp
push
pop
adc
xor
inc
mov
idiv
or
cltd
or
lcall
or
sbb
mov
out
stos
int3
out
call
insb
in
dec
push
jo
inc
lcall
jne
adc
xlat
imull
mov
or
daa
jnp
mov
in
int3
cltd
nop
dec
and
jmp
out
or
mov
repz
and
push
push
mov
jne
pop
push
aam
dec
shll
jne
dec
pop
imul
fbstp
inc
adc
jno
das
jne,pt
scas
cmpsb
adcb
sub
in
adc
and
and
shr
sbb
dec
jo
mov
jae
push
movsb
int
call
ja
gs
lods
xchg
fs
icebp
aas
jbe
fnstsw
cmpsl
xchg
and
jne
sbb
or
mov
dec
stos
icebp
ds
bound
out
pop
jno
add
inc
ficomps
in
repnz
ret
jne
and
nop
sbb
popa
rorb
xor
outsl
cltd
cmpsl
dec
ljmp
lret
or
test
js
iret
sbb
in
mov
mov
mov
xor
xor
hlt
data16
jne
pop
mov
add
jne
movsl
adc
inc
xlat
jle
imul
lret
push
insl
shlb
sbb
nop
leave
jne
add
push
jne
push
out
jmp
test
xchg
cld
sbb
mov
dec
leave
cmp
cmp
mov
pop
dec
pop
jne
jns
popa
xchg
sub
lods
xchg
add
cmp
imul
jae
or
mov
outsl
out
pop
jnp
aas
or
es
sbb
bound
repz
push
xor
ret
ret
out
stos
addr16
popf
pop
jne
mov
and
mov
fs
jae
pop
pop
mov
not
xor
xor
insl
mov
lock
inc
add
jl
adc
mov
cmp
push
fwait
fwait
push
jne
xor
ja
xchg
aas
rol
mov
mov
stos
or
imul
pop
ljmp
sbb
mov
je
shl
lods
mov
mov
aas
inc
imul
jnp
sbb
mov
ret
ja
and
adc
dec
jge
orb
test
loopne
mov
shl
lods
cmc
fdivl
ja
mov
xchg
pop
icebp
fnstenv
jae
add
adc
jne
cmp
scas
sub
mov
or
push
sbb
dec
int3
jne
shrb
pop
pop
scas
lahf
jne
hlt
shrb
jecxz
sbb
pushl
mov
mov
inc
xor
jne
addr16
je
ds
pop
jne
fdivrl
jae
xchg
insl
adc
sub
stc
aas
jne
pusha
inc
les
shll
inc
add
imul
bound
cmp
fucomip
enter
ja
lods
pop
movsl
push
sub
popf
push
mov
push
pop
jne
and
mov
lods
jne
fs
leave
addr16
mov
sbb
mov
test
jne
dec
jo
push
inc
xor
out
add
aad
push
pop
jg
cmp
inc
repz
jge
jne
cs
mov
jne
imul
mov
jns
fidivs
sti
daa
fstpl
jno
sub
mov
into
out
rcrb
sbb
ljmp
add
insb
orl
in
mov
mov
add
jne
sarb
pop
xchg
inc
and
dec
iret
add
out
sub
loop
pop
sahf
xor
ss
les
stos
sub
lret
push
mov
fdiv
jb
sub
daa
jbe
sub
leave
stos
ja
push
xchg
sti
xchg
cmc
cmp
pop
mov
cmpsb
sub
xchg
jne
push
push
xlat
xor
jb
pop
mov
cmp
jl
lods
xor
add
inc
jmp
fiadds
insl
mov
jnp
sub
sbb
popf
mov
scas
sarl
pop
jb
inc
xorb
add
pop
jne
mov
scas
cli
test
ret
call
mov
subb
stos
imul
dec
mov
mov
ds
arpl
jne
fldenv
inc
inc
jmp
push
pusha
aas
sti
push
stos
repz
std
adc
jbe
cltd
mov
lret
aaa
jne
xorl
jne
nop
cmpsl
cld
lock
or
fwait
cli
jno
in
sub
adc
adc
mov
jbe
repz
push
data16
popa
ficomps
out
inc
mov
lahf
call
fiadds
mov
popf
dec
in
jo
dec
mov
int3
sbb
inc
sbb
cmc
sub
and
aas
jno
jne
pop
adc
jne
out
xchg
dec
mov
xor
pop
jne
or
jne
in
ret
mov
jp
inc
loopne
popf
repnz
cmpsb
mov
fnsave
dec
mov
xlat
imul
out
push
pop
cmp
pop
repz
push
negl
loopne
dec
hlt
imul
jne
in
adc
add
pop
cltd
lret
sti
stc
jae
mov
pop
leave
jne
sub
add
push
cmp
lods
pop
scas
jne
test
cmpsl
mov
mov
xor
adc
out
les
sub
pop
cli
ljmp
mov
repnz
neg
int
cmp
dec
pop
add
xchg
sahf
push
out
arpl
fstps
dec
pop
sbb
adc
jbe
fidivs
outsl
push
clc
push
mov
jns
mov
and
ja
in
lock
pavgb
mov
cmc
fisubs
inc
ret
lods
jne
sarl
sbb
xor
inc
and
mov
std
ljmp
sub
repz
into
mov
cmp
mov
or
imul
jns
fstl
mov
mov
fildl
mov
fwait
sbb
sbb
xlat
jne
adc
cltd
stos
outsl
dec
mov
ss
dec
jae
add
xor
xor
xchg
fidivs
fsubl
mov
fisubrl
add
dec
gs
add
in
fcomps
into
adc
jne
or
in
in
sub
xchg
cmpsb
or
lret
movsb
outsl
add
jl
xor
mov
add
arpl
in
mov
inc
je
loopne
inc
xchg
pop
sub
out
data16
mov
jne
adc
or
add
push
push
dec
adc
fwait
jae
sub
mov
stos
sub
sub
ret
adc
mov
test
jne
rcr
gs
mov
pop
inc
pop
bnd
cmp
lgs
xchg
jnp
stos
dec
push
lret
jne
inc
adc
mov
mov
jne
or
mov
mov
stos
jne
xor
stc
orl
dec
in
xchg
ss
lods
cmpsb
call
mov
jns
xor
push
lret
fidivrl
sbb
in
pop
jge
inc
and
fidivs
or
dec
lock
mov
clc
mov
gs
jne
mov
fdivl
or
push
mov
pop
std
pop
cmpsl
int3
inc
jne
dec
jmp
in
add
or
jae
sub
jecxz
push
inc
sahf
jno
pop
das
mov
dec
adc
add
sub
mov
cmp
sbb
movsb
sahf
dec
inc
push
push
xor
pushf
pop
pop
jae
pop
shrl
fmul
jno
ljmp
xor
aaa
push
pop
into
mov
mov
lcall
mov
jo
jle
jl
push
repnz
pop
or
jne
test
fistl
mov
movsl
stos
in
sbb
les
push
add
mov
mov
jne
nop
les
sbb
in
jnp
adc
inc
jbe
jp,pn
ja
mov
xchg
pop
addr16
cltd
mov
jne
mov
loopne
push
test
outsl
lret
jmp
in
aam
mov
insl
roll
push
je
dec
shl
addr16
fwait
pop
orl
jne
inc
aam
xchg
outsl
jb
jne
data16
dec
call
gs
lods
add
stos
leave
xor
xchg
jne
hlt
scas
mov
lahf
loop
addl
fidivs
mov
imul
ret
imul
clc
aas
push
in
and
inc
int
add
xchg
and
push
nop
pusha
jne
dec
dec
fcomip
outsl
sarb
jae
fldl
ja
popa
nop
dec
stos
adc
jae
adc
mov
ja
inc
and
pop
es
fidivl
sbb
fnstcw
jne
mov
outsb
scas
cwtl
jne
pushf
jmp
xor
or
sub
jne
cmp
arpl
add
movsb
jbe
js
int3
outsb
int
jne
fisubrs
xorl
ds
add
jne
adc
mov
push
movsl
xchg
jg
pop
cmp
lock
icebp
xchg
cmp
jne
js
mov
jne
cld
adc
in
mov
and
cmp
out
in
pop
les
jl
inc
insl
ja
jne
mov
mov
mov
int
aaa
jne
stos
rclb
leave
sbb
jnp
mov
cmp
xchg
dec
lret
insl
negb
adc
inc
jne
adc
faddl
xlat
pmaxub
dec
or
stos
ljmp
inc
mov
loope
mov
jne
jge
xchg
cmc
hlt
rorl
adc
sub
pop
or
sub
push
fs
jnp
mov
cli
mov
pop
and
jne,pt
leave
sbb
lock
out
jne
pop
int
in
pop
pop
ds
pop
jne
movsl
scas
xchg
pusha
dec
jae
jne
rorb
sbb
jne
aas
inc
xchg
push
add
lds
push
ss
in
aad
mov
adc
popa
sub
movsl
jg
out
aad
adc
aaa
xlat
loop
jne
fucomip
je
popf
mov
push
lock
mov
jbe
int3
fldt
loopne
imul
pop
jo
insl
mov
lea
repz
adc
add
pushf
fcmovnu
dec
mov
ret
push
ficoml
inc
cli
je
into
lret
jae
in
xchg
inc
out
xchg
mov
inc
sub
pop
pusha
and
jb
jbe
aas
push
jne
addr16
loope
cmpsl
adc
inc
insb
lahf
push
subl
imul
mov
scas
imul
or
jp
loopne
movsl
out
and
mov
push
dec
jne
fwait
imul
pop
rorl
jo
inc
mov
mov
add
sub
xchg
es
add
not
test
jne
notl
out
aam
jne
sbb
scas
pop
lret
lods
xlat
jmp
mov
clc
imul
xchg
add
loopne
jg
cmp
hlt
div
jmp
mov
cmpsb
mov
cmc
mov
pop
jne
jmp
and
daa
fcompl
add
jne
clc
cmp
ljmp
mov
scas
pushf
pop
jae
or
out
ficoms
loopew
dec
divb
jnp
scas
das
imul
insl
jmp
test
stos
mov
aas
jne
data16
sbb
leave
popf
lcall
jo
sub
xor
pop
mov
push
push
ds
mov
jb
adc
pop
es
cmp
inc
daa
mov
popf
jae
imul
push
dec
call
movsb
mov
stc
inc
loope
lret
and
repz
fcoml
loop
or
sub
cmpsb
cmpsb
mov
mov
stos
lcall
testb
rcrl
cmp
xchg
mov
cld
jne
push
mov
mov
imul
mov
jp
imulb
push
xor
sub
mov
sub
out
xchg
jmp
dec
cli
cmp
mov
add
clc
pop
jge
dec
das
shr
sub
and
cmc
sbb
notb
fistpl
iret
lods
test
mov
sub
xor
jbe
add
mov
xor
addl
ret
rorl
mov
cld
cmp
imul
lods
fsubrp
sub
pop
jmp
push
int3
adc
jae
or
sub
out
lretw
jne
sarb
ljmp
jmp
adc
jno
movsl
fwait
cmpsb
jge
jne
inc
sub
loope
gs
mov
add
imul
fnsave
sub
fdivrl
mov
push
cmpsb
and
push
xchg
gs
cld
jne
loope
fdivr
popf
or
das
outsl
jmp
out
shlb
mov
aaa
je
loope
push
xor
fwait
int
add
mov
mov
sbb
cmc
gs
out
inc
xor
sbb
fldt
aad
xor
jne
rorl
jp
inc
loope
mov
fmull
sahf
sub
dec
inc
movsb
sub
mov
mov
jle
imul
lcall
sahf
cwtl
jne
pushf
test
inc
cmp
lahf
xchg
mov
fcomi
jl
jne
jp
xchg
or
fs
lahf
pop
adc
xor
mov
mov
ljmp
cmc
and
fistpll
xlat
jne
inc
mov
rol
loopne
outsl
mov
adc
in
or
xor
xor
imul
notb
jecxz
testl
mov
or
aas
pop
pop
fbstp
push
sbb
dec
out
mov
scas
and
shll
and
popf
pop
xor
cmpsl
xchg
dec
mov
mov
ficoml
xorb
lock
out
mov
outsb
jne
cli
scas
inc
or
mov
and
imul
mov
jne
test
inc
cmp
imul
pusha
and
sahf
xchg
adc
cmc
sub
ss
mov
cwtl
mov
cmp
add
cmpl
jbe
in
jne
xor
pop
xchg
mull
leave
jne
sahf
lcall
mov
jae
mov
mov
mov
mov
inc
lret
pop
hlt
dec
dec
in
scas
jne
mov
and
ret
data16
dec
xlat
fistpl
lahf
xchg
push
out
dec
jne
imul
mov
cmpsl
cmp
sbb
in
and
inc
ror
dec
jne
lods
mov
cwtl
jne
pop
enter
push
xchg
insl
mov
cmc
mov
rcrb
lods
cld
jne
cmpsb
mov
lds
loopne
and
out
push
int3
jne
cmp
adc
jne,pt
mov
xorb
jo
inc
mov
fsts
in
mov
clc
mov
jo
leave
xor
aaa
and
imul
sti
jbe
outsb
sbbl
repz
jne
movsl
int3
mov
out
aaa
and
fdivrs
fimull
fwait
pop
mov
dec
shr
lods
jne
sbb
mov
dec
clc
popf
fnsave
aaa
cmpsb
mov
rorb
mov
sub
and
loopne
push
xlat
dec
in
mov
sbb
lret
pushf
es
clc
xchg
mov
ja
adc
call
xchg
pop
jne
aad
dec
test
and
xchg
pop
mov
sub
mov
int
fsubrl
outsb
push
pop
jne
ror
fsts
or
cmp
mov
sbb
sbb
daa
push
pop
jbe
push
cmpsb
aaa
xchg
enter
int3
dec
cmp
push
fsubr
fwait
cmc
cli
int
fdivl
dec
push
inc
dec
cmp
jae
je
out
loopne
mov
sbb
dec
xor
xor
mov
push
mov
jbe
shll
pop
ljmp
rorl
mov
ret
pop
xchg
sub
jbe
pop
movl
mov
andl
cmp
mov
ja
fcomps
and
or
notb
sbb
push
cld
insl
push
xor
shll
cmp
lods
pop
xchg
repz
jns
orb
sbb
scas
lahf
dec
jno
sti
sbb
mov
xchg
or
lea
lock
adc
ret
inc
jbe
imul
cmp
pop
push
pop
sbb
sarb
pusha
loop
jne
into
inc
fnstcw
jne
mov
dec
push
jne
push
fwait
out
stos
into
pop
or
adc
outsl
cmpsl
and
sub
ss
mov
imul
out
xor
cmp
adc
fwait
popf
pop
test
jne
mov
add
or
lret
in
pop
or
jne,pn
stos
ret
dec
xchg
cmc
fistps
xchg
pop
fildl
fisubl
jle
xchg
adc
sarb
movsl
or
and
sub
fdivs
jmp
orl
mov
lret
test
mov
jg
out
cmp
adc
push
xor
sub
xor
cli
stos
dec
dec
pop
and
sub
mov
lcall
and
bound
popa
pop
insl
dec
dec
hlt
mov
dec
cmp
mov
add
stos
filds
shl
push
mov
cmc
inc
push
sbb
icebp
popa
enter
lcall
test
leave
imul
adc
jmp
xor
inc
lahf
aam
fwait
pop
mov
pop
xchg
outsl
stos
mov
adc
ja
lret
callw
cmp
mov
mov
adc
push
mov
inc
adc
bound
add
insl
jno
pop
mov
aad
add
sub
mov
es
aaa
inc
jmp
out
push
scas
mov
iret
mov
lds
inc
repnz
test
testb
popa
and
ss
cmc
mov
sbb
movsb
and
jne
cmp
and
cmp
sti
jae
out
adc
pop
and
lods
loopne
addb
adc
insb
jbe
bound
sbb
in
scas
xorl
ror
jne
push
jp
sbb
rorb
sub
loopne
jae
push
adc
adc
mov
gs
ds
cwtl
or
and
filds
lods
xor
cmpsb
dec
sahf
push
jbe
mov
and
scas
hlt
shl
jge
xchg
leave
jne
lret
sbb
incl
testl
fimull
jne
fnstcw
pop
jge
xchg
xor
daa
jbe
mov
aaa
stc
rcr
dec
xchg
call
mov
and
stos
mov
push
ret
in
lods
push
xchg
clc
sahf
sub
pop
push
in
or
fdiv
cmp
push
gs
xor
scas
stos
lret
scas
pop
jne
imul
and
cwtl
jbe
popf
adc
sahf
stc
sbb
inc
fisttpll
mov
in
dec
bound
aaa
jb
sahf
aas
adc
scas
cmp
cmp
stos
mov
ret
scas
ret
jae
fcom
mov
push
pop
or
mov
loopne
shlb
jmp
int3
push
or
jne
nop
sahf
cmp
mov
ret
adcl
xlat
jg
arpl
les
cltd
sti
mov
lret
jne
pushf
into
mov
jne
fstpl
xchg
data16
jne
inc
xor
mov
les
scas
mov
jne
mov
cli
adc
mov
add
ds
mov
mov
pop
mov
fisubl
jno
mov
icebp
push
call
mov
movsb
lea
nop
add
jne
lahf
dec
adc
or
jne
je
pusha
pushf
sbb
jne
mov
xchg
jne
ret
mov
out
sub
aaa
push
stos
xor
es
repz
sahf
cmpsl
out
mov
mov
mov
leave
xchg
inc
ret
daa
cwtl
aaa
jbe
sub
imul
lcall
adc
or
add
jmp
or
bound
pop
mov
mov
mov
fcoms
or
pushf
mov
sub
loopne
jb
movsl
popa
scas
mov
sub
gs
test
int
push
hlt
pop
fldt
jne
jp
lds
cmpsl
in
leave
lahf
cmc
outsl
fistpll
popa
sub
adc
mov
lret
jne
inc
jo,pt
adc
jno
jmp
mov
imul
sub
adcl
pop
xchg
xchg
or
ljmp
loop
xlat
adc
pop
mov
xor
inc
jne
inc
pop
out
roll
jmp
and
add
roll
fists
sub
scas
jne
daa
lret
scas
and
jmp
jbe
jbe
test
dec
push
jno,pt
xor
dec
insl
dec
mov
mov
imul
adc
out
ljmp
outsl
push
cli
jecxz
jle
adc
sub
pushf
dec
jmp
or
cmpsb
nop
mov
insl
insb
int3
out
bound
inc
lcall
dec
push
divb
add
and
test
inc
xlat
xchg
sub
push
loope
int3
xchg
lock
addr16
jne
push
int
pop
mov
xor
xchg
push
test
lahf
jo
push
or
int
out
cmc
push
dec
inc
roll
xor
loopne
out
iret
fisubs
cmpsb
add
js
lods
jbe
stos
pop
and
jae
orb
and
insb
arpl
jbe
pop
mov
fwait
push
jne
cld
addr16
repz
or
xchg
pusha
stos
test
call
sub
push
sbbl
jne
inc
mov
pushf
mov
inc
xchg
int
int3
adc
xchg
sub
ret
mov
mov
sarb
loope
jbe
lea
mov
mov
or
cmp
xchg
push
mov
fstpt
push
bswap
shlb
add
jne
dec
mov
jnp
cmpsl
test
or
and
xchg
mov
push
mov
mov
lods
and
loop
xor
mov
scas
lcall
dec
jae
cs
or
mov
test
xlat
mov
int
dec
jne
cmpl
inc
fwait
add
add
jl
jae
sahf
fcom
stos
aad
jne
push
mov
cmpsb
mov
call
fistps
dec
mov
lcall
int3
insb
adc
test
and
jne
or
pop
cld
aam
mov
out
jo
jne
shrb
xchg
pop
jb
cmp
add
ret
xchg
adc
inc
popf
and
test
cmp
pusha
mov
jne
out
stc
or
out
inc
sbb
xchg
ds
push
dec
in
pop
cmp
jne
mov
nop
les
insb
data16
dec
adc
push
jne
xlat
cltd
or
mov
in
jne
xor
rcrl
jne
xchg
sub
movsb
sahf
ficomps
jne
leave
cmp
mov
fnstsw
subb
sti
jne
leave
stos
adc
dec
jne
loope
insl
push
divl
clc
cld
add
cmp
fucomp
stos
in
daa
fwait
pop
jbe
repnz
cmpsl
or
pushf
cmc
push
rclb
mov
clc
nop
sbb
pop
lret
pop
inc
mov
jne
popf
into
and
imul
loope
repz
shll
jb
and
xor
jmp
aas
dec
mov
mov
icebp
daa
in
sub
fiaddl
sbb
stos
and
xchg
outsl
mov
sub
jne
and
popa
cmpsl
sub
mov
cmp
jbe
jns
pop
jmp
inc
pop
outsl
bound
push
sub
in
and
xchg
orl
jne
sbb
xchg
mov
jne
test
mov
js
xor
inc
xchg
pop
jnp,pt
stos
jmp
cmp
dec
push
fs
sbb
push
outsb
jae
mov
push
xchg
xchg
jne
pop
push
inc
mov
jo
addr16
cwtl
sti
out
mov
xchg
lods
and
mov
xor
inc
jne
xor
cmpsb
jne
stos
and
fists
jne
push
lahf
lret
mov
mov
ss
ljmp
dec
inc
xchg
sbb
mov
or
xchg
in
adc
pop
mov
clc
push
xor
fdivl
cmc
test
pop
movsl
cltd
jne
lcall
jne
jo
cmpsl
mov
jp
cmp
add
js
xlat
sub
xor
push
fnstenv
es
mov
fs
in
repnz
aaa
sbb
jbe
into
or
add
add
jbe
jle
lret
mov
pop
fidivs
lods
or
jne
shll
lods
and
out
movsl
xor
loope
inc
push
xor
movb
or
sbb
ljmp
lds
xor
xor
xchg
ret
jg
out
imul
inc
pushf
push
xchg
sub
pop
icebp
sbb
insb
jne
lods
mov
cmp
lods
mov
jne
loopne
and
sub
emms
cmp
push
or
jb
addr16
fdivs
aaa
pop
sub
popf
jae
rcrl
lret
aam
push
dec
mov
push
adc
insl
fstpl
mov
mov
mov
add
mov
mov
test
mov
jne
inc
fsubl
shl
cmp
lock
pop
mov
pop
push
mov
jne
in
or
jne
cmp
subl
lcall
ljmp
dec
loop
clc
aas
mov
mov
imul
cmpsl
lahf
pop
add
pop
jne
sbb
sub
xchg
xchg
adc
push
sub
in
test
rorb
mov
dec
pop
mov
dec
cmp
mov
shl
push
aaa
xchg
imul
and
pop
pop
mov
jne
or
mov
in
jmp
jne
insb
sub
xor
ror
inc
dec
fldcw
or
sbb
adc
add
fisubrl
xor
inc
push
mov
mov
mov
inc
and
inc
jne
lret
push
add
outsl
jne
sbb
cs
ja
loopne
sub
repnz
int3
test
repnz
mov
jne
scas
retw
dec
jne
add
out
mov
xchg
lahf
lock
jne
mov
and
fistps
xchg
mov
fcmove
rorl
aad
xchg
xlat
scas
cmp
jge
movsl
mov
inc
clc
inc
jne
jae
mov
ja
roll
sbb
mov
mov
push
pushf
sbb
imul
cmp
pop
xorb
fisttpll
inc
clc
jne
mov
cld
loopne
repnz
pop
sub
sub
orb
mov
and
shll
sub
jp
push
jne,pt
cmp
das
mov
mov
outsl
add
xchg
dec
out
mov
jne
testb
jne
inc
sbb
lods
pop
cmpsb
or
shrb
push
mov
shlb
push
ss
or
mov
mulb
add
jbe
shlb
jne
mov
outsl
and
adc
pop
push
push
cli
add
mov
xchg
cltd
push
mov
movsb
scas
jbe
dec
int3
pop
push
jne
imul
mov
out
mov
jl
lods
movsl
imul
icebp
out
sbb
out
repnz
sbb
es
movsl
mov
mov
test
aam
xlat
jne
cmpsl
repnz
push
mov
sbb
jns
cwtl
jbe
xchg
ret
das
inc
popf
and
inc
stos
mov
cmp
sub
fidivl
fnsave
lock
jae
mov
sar
xor
push
mov
jne
mov
hlt
loop
pop
pop
inc
adc
clc
es
and
jns
push
in
mov
inc
dec
loopne
lcall
sub
pop
mov
inc
cmpsb
scas
mov
outsl
pop
push
andl
xlat
lods
bound
enter
pop
fdivrl
push
je
jp
jns
jae
and
sub
sub
inc
jbe
cltd
test
xchg
mov
leave
in
add
cmpsb
cs
loopw
gs
fwait
mov
inc
cwtl
jne
adc
outsb
jne
inc
fstpt
or
pop
arpl
xor
jne
mov
bound
dec
mov
rolb
fistpl
dec
dec
out
jne
push
add
sub
jne
sbb
jmp
jp,pn
div
jnp
loopne
inc
mov
sbb
mov
leave
cmc
lcall
pushf
mov
add
push
dec
divb
or
lret
gs
cld
push
sbb
jne
dec
and
adc
test
sbb
adc
xchg
pop
imul
or
loope
cmp
idivb
fstpt
or
jo
cmc
sub
out
pop
enter
scas
lret
es
jnp
jne
loopne
addl
adc
xchg
jbe
push
mov
add
lea
dec
cld
jae
xor
xchg
loopne
jne
call
add
ja
sarb
or
push
jecxz
jne
shl
lcall
and
data16
orl
cwtl
xor
xor
fmuls
jp
cmc
dec
mov
in
scas
stos
call
cwtl
sub
add
pop
es
or
mov
dec
push
mov
jbe
pop
xchg
sbbl
jne
mov
daa
dec
mov
dec
push
or
shrb
jne
jg
mov
jne
and
call
xchg
lahf
test
sub
aam
arpl
lock
lcall
iret
push
dec
inc
int
xchg
dec
xor
xchg
pusha
loopne
mov
sbb
jge
imul
xor
jne
push
cmovle
adc
fnsave
add
sub
xor
lcall
sub
jae
xchg
and
mov
xchg
xorb
adc
lahf
mov
inc
pop
dec
jne
mov
push
or
jl
cmp
ret
movsl
mov
cs
and
into
test
sub
xchg
fnop
sub
xor
imul
dec
cmc
lahf
pop
ja
pushf
divb
sti
mov
jge
rolb
jae
cs
push
mov
push
push
cld
mov
pop
out
decl
mov
pop
aaa
lret
jne
and
inc
pop
lock
cmc
add
jne
and
and
idivl
dec
jne
leave
fwait
lret
inc
inc
jne
inc
jmp
loopne
and
mov
and
inc
pop
mov
push
push
stc
pop
dec
add
inc
out
ja
add
jg
aad
call
mov
cwtl
pop
and
cmp
repz
jae
cld
fiadds
outsl
xchg
inc
rcl
pop
dec
jge
stos
es
call
inc
clc
addr16
loopne
jle
mov
cmp
sub
inc
pop
sti
lea
jae
js
call
call
rcrl
jo
sbb
and
push
sub
jne
sahf
enter
mov
leave
dec
cld
stos
xchg
xor
and
xor
mov
mov
mov
xor
out
dec
push
out
dec
sbb
push
popf
adc
cmp
mov
daa
push
pushl
pop
in
sub
cmp
ret
mov
scas
mov
mov
jne
faddl
fs
insb
and
das
and
jne
push
jno
mov
notb
pop
mov
lods
mov
ret
lods
out
jne
mov
and
jne
shlb
xchg
les
incl
shr
or
or
and
in
push
fistpll
jne
dec
aas
and
add
test
or
mov
lahf
sub
js
in
lods
notl
xchg
test
xchg
sbb
jge
lret
cmp
dec
push
xchg
jbe
loope
inc
jne
dec
xor
cli
lock
clc
jae
ljmp
push
xchg
xchg
mov
mulb
push
scas
push
leave
cmp
cmp
jns
jne
xchg
jb
fs
jne
daa
pusha
and
clc
out
pop
push
fdivl
ljmp
fisubrs
insb
jne
lcall
jne
and
adc
dec
jne
xor
or
mov
inc
cvtdq2ps
shll
fsubrl
testb
lods
inc
jne
out
lret
and
lock
mov
or
mov
push
mov
pop
or
inc
aaa
js
clc
xchg
call
add
pop
loop
jne
pop
pop
lds
mov
mov
mov
lret
inc
dec
inc
bnd
push
or
mov
push
xchg
data16
xor
add
xchg
jne
packuswb
inc
lcall
adc
scas
sbb
cmc
hlt
out
scas
mov
and
xor
ja,pt
aaa
inc
dec
pop
sbb
push
pop
jae
mov
int
mov
scas
ret
sbb
jl
jne
xchg
ds
inc
mov
std
xchg
andl
jne
pop
jp
inc
pusha
cs
mov
or
mov
cmp
push
popf
je
clc
or
jne
pop
imul
cmp
and
jae
sahf
scas
lahf
adc
cmc
lret
push
ja
xor
data16
pop
shrb
jb
jbe
pushf
or
addr16
jne
out
test
cmp
push
popf
sti
iret
inc
sar
cld
jne
nop
jp
test
xor
ja
ds
push
adc
imul
daa
out
xchg
mov
nop
xlat
sbb
sub
ds
mov
mov
jne
and
jne
pop
je
adc
add
jne
and
insl
outsb
fnsave
stos
jne
sub
and
jo
lahf
jp
dec
repz
arpl
push
push
and
fiaddl
in
shll
and
jne
adc
ret
outsl
jne
stos
negb
push
inc
pop
int
and
stc
xchg
out
or
insb
xor
lahf
sbb
lret
ss
jbe
mov
push
ja
sub
pop
mov
xchg
shll
scas
jbe
xchg
imulb
imul
test
jne
mov
mov
jne
sbb
xchg
subl
arpl
xor
inc
jne
cmp
sbb
mov
addb
int3
xor
sbb
jbe
js
repz
xor
jne
ftst
lahf
jnp
add
mov
movsb
sahf
jl
into
dec
es
fs
aad
roll
orl
jne
es
jge
cld
sub
negl
jno
imul
int3
jne
lret
and
shll
gs
adc
jmp
pop
subb
mov
idivl
dec
rorb
inc
cmp
ja
jne
or
imul
pop
or
cmp
inc
cpuid
jne
popa
shrb
call
xor
cwtl
jp
push
mov
cmp
aas
aad
mov
push
xor
dec
xchg
fidivl
push
push
mov
jb
lock
jl
sbb
ja
jmp
sbb
ja
cmc
sub
leave
in
in
or
jne
inc
mov
cmp
dec
mov
jbe
sub
pusha
sub
cmc
xchg
and
xorl
add
jne
jl
sarb
das
cmp
dec
nop
dec
subl
iret
mov
lods
jbe
mov
dec
daa
jle
jne
sarl
les
or
and
sub
bound
call
dec
hlt
jae
xchg
imul
movsb
js
dec
jbe
pop
fstpl
xor
daa
sbb
adc
or
insl
dec
cli
xchg
jbe
scas
fnstcw
mov
jno
push
mov
jne
dec
push
insb
ror
mov
hlt
push
ret
mov
jmp
clc
adc
shrb
adc
push
iret
pop
outsl
jnp
mov
leave
inc
mov
sbb
jne
inc
ss
stos
xchg
xchg
test
insl
fnstsw
mov
push
in
in
adc
movsb
test
xchg
jge
call
xor
jne
xor
lcall
in
dec
push
aaa
mov
xchg
ret
aad
mov
rorl
sbb
das
mov
out
mov
xchg
shlb
push
jno
movsb
sub
sbb
orl
sti
test
fbstp
in
adc
out
ss
sub
jne
dec
and
jne
cmpsb
or
adc
out
sti
cmp
mov
or
fwait
cs
jge
in
inc
or
add
divb
fs
mov
negb
push
or
loopne
dec
shrl
cmp
and
mov
outsb
test
push
mov
and
test
xchg
out
jne
out
imul
push
sbb
jae
jg
popf
mov
imul
lds
test
mov
addr16
jne
flds
out
add
call
and
outsl
cmpsb
in
fadds
ljmp
mov
jne
cmpsl
scas
mov
xchg
popf
insb
es
scas
shl
daa
mov
ret
adc
shlb
inc
jmp
add
add
mov
sti
fbld
cs
jo
mov
sbb
jne
mov
lahf
push
push
jmp
mov
cmp
adc
pop
jbe
jae
xor
push
out
ds
rol
jne
pop
xor
jb
mov
mov
mov
jge
fs
push
ja
and
fadds
int3
mov
out
fistpll
lahf
push
movsl
jne
cmp
jecxz
addl
fnsave
push
cwtl
imul
mov
add
pushf
neg
pop
dec
jmp
dec
jne
xor
cmp
leave
sbb
jae
insl
push
aaa
or
mov
int
sbb
int3
jmp
data16
xor
xchg
pop
pop
cmpsb
je
mov
repz
pushl
jne
fidivrl
xchg
sbb
outsl
jae
lea
jne
and
jmp
leave
imul
outsl
and
pop
xor
push
movsl
scas
dec
jne
xor
aam
dec
mov
jne
dec
data16
mov
jp
aaa
pop
arpl
inc
mov
push
ficoms
sub
popf
dec
testb
ja
sti
nop
jge
or
cmp
and
jne
out
sbb
sahf
add
mov
lock
loopne
push
mov
notl
nop
fadd
fistpl
cmp
inc
and
mov
lret
mov
out
jne
out
xchg
or
jae
outsb
dec
sbb
cli
movsl
xlat
rolb
sub
jo
pop
jno
test
sbb
lcall
jne
or
adc
mov
push
cmp
scas
jno
jmp
negb
data16
jbe
mov
jne
pusha
fildll
mull
mov
jge
cmc
sub
hlt
sub
cmp
movsl
insl
dec
mov
jne
arpl
push
ret
mov
push
jge
inc
xchg
fstpl
jbe
sbb
pop
mov
movsb
adc
and
dec
jne
mov
cmp
xchg
and
and
cvtdq2ps
sbb
mov
jmp
jne
mov
int3
aad
mov
sub
push
lret
int3
loopne
test
scas
mov
mov
shl
xor
push
jne
cmp
aam
sbb
sub
sub
xchg
xor
scas
pusha
pop
push
dec
mov
adc
add
ret
mov
div
add
jnp
sti
cmpsl
cmp
jns
sbb
int
xchg
push
xchg
loopne
pop
xor
fsubrl
xchg
mov
or
jne
xor
adcl
jnp
sbb
sbb
jb
test
outsl
gs
aam
jmp
xorl
pushf
in
lods
outsl
inc
pop
fldenv
xor
lods
in
testb
ja
lret
mov
shll
sub
popf
lahf
lods
inc
ja
mov
xchg
jne
mov
sti
mov
push
push
scas
mov
pop
out
mov
cmp
sbb
lock
popf
jne
add
cltd
bound
mov
das
inc
cwtl
dec
out
rorb
jne
add
or
loopne
xorb
mov
fisubrs
jne
adc
out
mov
jge,pt
xor
jno
mov
daa
push
cmp
push
lds
jmp
lret
jne
lret
push
inc
dec
xchg
push
pop
jne
iret
out
inc
mov
pop
lret
outsl
ret
jbe
jmp
jne
sub
inc
or
aad
fdivrp
push
sub
and
test
imul
jne
movsb
mov
sti
xlat
cltd
sbb
scas
xchg
cmp
jno
push
inc
lcall
push
xchg
test
or
js
pop
je
xor
jg
int
pop
fiadds
sbb
mov
cmpb
jne
and
dec
clc
rcrb
cmpsb
jp,pn
jmp
aam
mov
bound
jne
jae
push
jg
sub
in
ss
in
sub
movsb
cmc
adc
cmp
aad
mov
cmp
and
jne
sub
adc
rcll
jne
sarb
rcll
leave
jmp
sahf
jae
fimull
sahf
repnz
jne
dec
xlat
mov
inc
mov
and
and
xor
data16
jno
je
cmc
repz
xchg
les
jne
lcall
jne
sbb
loop
into
mov
jns
xor
test
jle
mov
push
ror
jne
sub
jnp
cld
andl
inc
push
jne
shrb
jne
imull
adc
pop
mov
in
or
mov
lock
mov
inc
repz
jbe
ljmp
lods
testb
jge
icebp
sub
test
jne
loope
ja
cmp
imul
or
mov
mov
std
fwait
jne
xchg
mov
mov
mov
shlb
pop
push
cmc
aas
jne
inc
sbb
jp
sbb
jne
out
clc
gs
jno
jne
aad
lcall
das
lods
mov
push
and
push
mov
xor
loopne
lcall
add
adc
push
int
xchg
mov
jp
inc
and
ljmp
pop
out
xor
mov
jmp
push
jmp
fst
sub
cmp
sub
int3
loop
pop
outsl
scas
mov
shrb
jne
jecxz
aas
xchg
push
mov
jne
cwtl
loop
inc
mov
imul
pop
sbb
cltd
jne
mov
in
xor
add
arpl
rclb
inc
jne
jno
mov
aas
lock
or
scas
cmpsb
mov
bound
xlat
mov
xor
adc
test
insl
push
lret
clc
jne
xchg
lods
mov
jecxz
dec
divl
arpl
jb
jne
dec
and
sbb
pop
dec
jne
pop
fildl
push
call
lods
push
aas
sub
adc
and
pushl
clc
ljmp
adc
jle
jne
shr
lods
sub
push
mov
and
not
inc
jg
xor
subb
pushw
jne
ret
out
in
pushf
outsl
aam
cmp
mov
mov
fdivp
fidivl
repz
mov
les
cs
mov
call
lock
and
jle
adc
xor
inc
ret
lret
mov
imul
in
inc
aam
pop
sahf
and
adc
pmaxub
clc
push
into
xchg
sub
dec
dec
xchg
ja
jge
jbe
femms
fdivl
loop
rcll
jne
fcmove
xchg
cmp
cmp
mov
nop
cmp
je
pop
insb
jae
dec
jbe
cli
movsb
push
cmpsl
fsubrl
pop
and
scas
rorl
and
outsl
fcmovu
xchg
jbe
jne
imul
jne
push
lods
int3
stos
nop
lea
lcall
push
and
push
jne
jl
shrl
fnstsw
jne
sbb
mov
arpl
mov
sbb
loopne
cltd
rcrl
add
pop
add
jne
filds
insl
jne
aam
jo
jbe
dec
jne
in
jb
fstpt
dec
jne
sbb
popf
loopne
lahf
sub
mov
push
fidivl
clc
rcrl
add
jne
ds
xchg
leave
push
je
xchg
xorb
sub
mov
addr16
dec
clc
push
mov
stos
mov
and
pop
daa
cltd
mov
cmp
pop
fnstenv
xchg
insb
add
pusha
bound
xor
mov
cld
mov
push
inc
xchg
pop
xor
jne
dec
js
or
adc
fbstp
sbb
xor
xchg
mov
decb
mov
test
test
cli
gs
jo
scas
int3
jne
sbb
cmp
push
dec
test
add
pushf
jge
arpl
dec
fdivr
mov
add
fidivrl
sub
jne
stos
out
sbb
push
inc
sub
jbe
imul
pop
jne
dec
mov
andl
lods
mov
jo
jbe
cmp
test
mov
popa
ror
ja
dec
add
or
ljmp
xchg
pop
mov
scas
cltd
fidivl
jne
sti
mov
cld
int3
mov
xor
aas
repnz
gs
icebp
or
push
inc
lods
mov
pop
xchg
push
shll
pop
test
mov
jne
xor
inc
mov
fnstenv
cmp
pop
or
fistpll
roll
scas
aaa
outsl
mov
imul
lcall
mov
fimuls
aam
jne
lcall
xchg
inc
in
out
addb
mov
adc
test
inc
ret
mov
pop
out
mov
mov
es
jne
cmp
cs
xchg
jne
fdivs
push
jne
in
xchg
dec
inc
pop
jne
add
cmp
jne
dec
or
fildll
stos
dec
movsb
lcall
or
int
dec
in
xchg
mov
ret
inc
and
aaa
mov
jne
in
jge
adc
shll
push
inc
cmp
jg
sub
insl
ljmp
mov
lahf
cmpsb
push
adc
jae
aaa
xor
int3
push
mov
jne
mov
jge
dec
xchg
mov
xchg
imul
popf
jnp
cmp
addr16
xor
outsb
cmp
dec
and
bound
jp
loope
adc
cmc
mov
dec
loop
push
imul
into
cld
xor
inc
int3
hlt
xlat
pop
mov
jbe
out
ds
jmp
ja
xor
pop
mov
mov
repz
in
xchg
sbb
dec
es
lods
dec
dec
ficomps
adc
xchg
mov
test
and
push
xchg
mov
leave
or
jne
fisttps
jl
mov
jne
or
jmp
mov
pop
sub
out
xchg
mov
les
into
or
ljmp
popa
mov
jb
mov
mov
sub
jl
push
jecxz
les
jnp
xchg
jbe
push
nop
stc
in
test
jmp
out
hlt
jnp
ja
pop
pop
cli
push
out
cmp
insl
jne
dec
mov
mov
push
inc
jne
add
or
movsl
popf
jne
lret
sbb
jecxz
es
adcb
sahf
aas
jne
xchg
fbld
jne
fisubrl
sbb
loop
mov
popf
sysexit
jne
push
pop
push
adcb
jnp
or
bound
frstor
out
ja,pt
push
pop
lock
jae
xchg
jnp
fnstcw
jae
clc
cmpsl
adc
jne
push
sub
sbb
out
divb
std
aam
outsl
sub
jne
inc
dec
fnstsw
jg
test
shll
mov
jl
mov
orb
lret
mov
push
inc
aam
or
adc
mov
jne
pop
testl
loopne
test
and
xchg
or
incb
pop
adcl
xor
in
xchg
jbe
outsl
xlat
aad
cmc
cmp
push
fsubs
lret
sbb
nop
popf
jne
push
mov
cmp
cmpsb
lds
sub
jl
addr16
xchg
mov
mov
lods
xchg
jle
mov
push
inc
movb
jne
mov
test
jne
lock
movsb
out
dec
cltd
xor
out
popa
pop
movb
inc
in
rcrl
jecxz
iret
jne
loopne
jp
cmpsb
lods
cwtl
sub
jbe
mov
mov
mov
or
mov
adc
jb
lods
mov
cmc
cmp
sub
int
dec
add
imul
adc
loop
dec
xor
test
gs
or
mov
rol
mov
pop
sbb
cmpsb
mov
sbb
mov
dec
jbe
imul
pop
sarl
nop
in
xchg
scas
repz
pop
lret
inc
ret
mov
dec
jne
xchg
sub
mov
sub
movsb
pop
enter
jns
and
out
pop
pop
cwtl
xchg
xacquire
push
push
lret
adc
jae
dec
adc
cwtl
and
push
xchg
sbb
adc
sbb
dec
pop
movsl
leave
bound
iret
loope
shll
aas
jnp
lret
add
jle
mov
mov
sub
je
dec
hlt
int3
dec
sub
dec
jns
in
adc
sbb
mov
outsb
mov
xchg
pop
insl
add
addb
test
fstps
push
clc
jne
aad
fildl
ret
cmp
out
enter
cmp
lcall
sbbb
call
mov
pop
jne
pop
sahf
dec
inc
cld
ret
xor
xchg
out
imull
jne
and
enter
lret
jne
inc
mov
adc
andl
cld
cmp
inc
mov
and
jl
mov
jne
cmp
jmp
jns
or
mov
pop
jb
es
jae
push
push
inc
repnz
adc
imull
clc
inc
les
xor
clc
sub
ss
stos
bound
pop
addb
cwtl
cld
ljmp
mov
and
mov
mov
jne
leave
sbbl
and
jecxz
jbe
popa
in
jle
xor
insb
jo
cmp
lahf
cmp
loopne
enter
out
xchg
movsl
dec
inc
out
jne
lds
cmp
add
add
ljmp
pushf
and
imul
sub
pop
xchg
mov
lods
in
ja
xor
fcompl
dec
cwtl
jne
lret
sub
rcrb
arpl
adc
xor
jo
movsb
insl
or
fdivrl
jg
ret
addl
mov
or
nop
cmp
es
push
xor
call
int3
data16
jne
cld
xchg
out
inc
stc
adcb
and
roll
add
es
mov
fwait
dec
mov
jbe
shlb
arpl
popf
mov
addl
and
jo
lahf
cmp
jne
mov
jno
aaa
add
repz
mov
or
jne
jl
out
push
jmp
add
xchg
in
stos
and
pop
popa
mov
daa
call
jbe
add
dec
outsl
fwait
push
lret
lahf
leave
fidivs
jb
dec
mov
xchg
jne
lods
adc
add
shrl
cmpsb
movsl
jbe
push
push
insl
popa
jle
and
jge
mov
push
inc
movsl
jne
ss
icebp
jae
movsb
ret
scas
xor
push
xchg
jae
cmc
dec
xor
ss
sarl
movsb
popf
jp
jne
idiv
ja
fistps
xchg
jne
dec
jle
fistpl
sbb
inc
cwtl
dec
int3
pop
jo
mov
add
inc
int
addr16
shlb
pop
addr16
adc
mov
or
arpl
jne
adc
cli
pop
and
fidivl
in
or
daa
mov
sub
mov
dec
jne
in
stos
inc
mov
lods
jne
push
stc
cmp
jl
dec
nop
int3
aad
rcr
dec
and
jne
jle
sub
bnd
jnp
xor
dec
jne
push
push
mov
pushf
ret
out
int
jbe
push
dec
inc
jns
pop
outsl
cmp
sub
fcompl
and
lea
xchg
cmc
jne
flds
adc
out
clc
mov
sub
pop
xchg
add
jne
jge
icebp
xor
in
imul
cmpsb
imul
and
mov
lock
mov
jne
mov
xor
jne
or
mov
outsl
scas
rcl
insb
lods
add
fdivrl
ret
cld
int3
mov
int
daa
aam
jne
lcall
or
xor
int3
sub
mov
push
inc
aad
clc
dec
xchg
stc
pop
pop
scas
in
jb
inc
enter
mov
cmc
inc
repz
shlb
sub
xor
xor
dec
jne
jb
xchg
jecxz
and
addr16
or
add
shlb
sar
pop
jns
mov
mov
fwait
je
add
or
or
orb
and
leave
mov
inc
xchg
mov
cli
notrack
das
cmp
xchg
imul
jbe
adc
mov
jne
add
fimull
lret
in
jne
sbbl
out
cmp
mov
jb
jne
jae
outsb
outsl
sub
jne
cltd
imul
filds
bound
sub
ret
jl
mov
jbe
jbe
dec
sbb
mov
je
cmp
and
jbe
pop
sub
jne
push
xor
sub
jno
iret
testl
jp
cli
mov
xor
jne
xchg
pop
xchg
cmpsl
jns
ds
sahf
sbb
enter
dec
dec
and
mov
mov
jne
add
ljmp
cmpb
mov
inc
jne
adc
scas
push
adc
hlt
and
mov
dec
leave
sub
cmp
test
xchg
cmc
negb
xor
imul
and
mov
pusha
jne
cmp
xor
xchg
rclb
mov
push
inc
adc
stos
pop
out
sti
or
aam
out
jno
lock
inc
and
shrl
out
mov
jnp
sub
scas
jne
pop
inc
stc
loop
push
nop
jne
and
lret
jne
cli
cld
rorb
pushl
cmp
loop
jne
loope
arpl
test
xor
out
icebp
jae
sub
imul
pusha
test
rcl
dec
mov
xor
repz
mov
cmp
gs
jg
fidivrl
jge
push
jae
mov
xchg
dec
mul
xor
and
subl
xchg
xchg
lahf
cmp
js
add
stos
or
xchg
pop
sub
pop
pop
scas
jne
pop
mov
cmp
outsb
stos
loopne
xchg
sbb
cmc
inc
sbb
xchg
adc
stos
aad
ret
divps
mov
loopne
jne
cmp
decb
ja
jne
nop
or
in
sub
inc
adc
lcall
xor
es
in
popf
movsl
scas
add
mov
jne
bound
mov
xor
fs
jne
mov
xlat
shll
sub
push
push
mov
adc
js
cltd
push
jne
push
pop
jmp
mov
outsl
pushw
mov
mov
bnd
hlt
mull
mov
and
xor
fldt
cltd
out
cmpsb
inc
loop
mov
cmp
jne
jb
ss
ret
jne
or
adcb
sub
gs
fisubrs
adc
dec
pextrw
jne
negl
mov
test
insl
rorl
jne
push
pop
in
jne
mov
dec
and
imul
and
xlat
js
mov
cmc
repz
ja
pop
add
mov
stos
test
sbb
aas
ja
pop
push
cmp
push
and
sbb
jne
inc
sbb
xchg
rol
jne
rcl
add
mov
call
pop
das
or
ret
fldl
icebp
lcall
insl
call
mov
dec
or
das
mov
inc
jne
mov
aam
mov
andl
stos
aas
out
outsb
or
mov
jne
loope
imul
push
jne
mov
mov
cmp
and
mov
xorb
addr16
push
sbb
ds
cmpsl
das
aam
jne
mull
scas
movsl
mov
movsb
push
mov
ret
inc
hlt
loope
mov
ss
pop
mov
cmp
lock
lret
xchg
push
icebp
inc
jne
adc
and
mov
popl
cmp
jne
iret
cmp
pop
loop
jne
dec
test
into
xchg
rorb
divl
lds
xor
jne
sbb
mov
or
dec
cmp
and
popf
xchg
movsl
pop
shll
inc
test
scas
mov
pop
xchg
mov
hlt
push
cli
out
mov
mov
je
aaa
adc
jne
pushf
sarb
sar
jae
sbb
mov
mov
mov
dec
mov
loopne
clc
xchg
push
inc
icebp
jne
stos
andl
out
and
loope
dec
repnz
insl
sbb
fpatan
or
sbb
call
ja
pushf
cmp
pop
cmc
fucom
sub
in
aam
jne
les
sbb
add
arpl
xchg
sbb
into
cld
mov
jo
rcl
jne
dec
inc
mov
push
push
push
lahf
stos
loopne
sub
jne
push
or
ja
ret
enter
test
pop
fnsave
push
pop
insb
add
mov
jle
int3
mov
clc
sbbb
sti
movsl
orl
jecxz
out
jne
mov
pop
pusha
mov
shll
cmp
mov
push
into
or
out
iret
out
jbe
pop
imull
stos
adc
ja
aad
sub
push
jae
mov
aam
adc
jne
mov
lahf
jp
lret
cli
cmp
mov
js
gs
jmp
push
sbb
pop
lds
stc
jne
push
pop
scas
cmp
cltd
xchg
inc
push
cmpsb
das
xchg
imul
jbe
fsubrs
mov
and
ficompl
lods
nop
jne
pop
loop
add
adc
out
and
outsl
jo
add
sub
nop
loop
or
pop
xor
rcr
mov
jp
fwait
je
xor
dec
fcomi
test
and
push
mov
mov
dec
jne
aaa
addr16
icebp
cli
mov
shl
jle
hlt
pop
pushaw
push
lods
mov
movsb
jo
adc
ja
push
mov
xchg
cmc
aaa
lds
outsb
mov
xchg
icebp
pop
lock
lods
js
subl
push
xlat
cmc
ret
xchg
loop
ficoml
sub
push
dec
mov
sbb
xchg
pop
lock
mov
orb
jmp
leave
add
sub
pop
in
mov
inc
mov
int3
dec
icebp
andl
pop
fstp
push
jb
call
leave
cwtl
mov
adc
or
jne
dec
cmp
pop
push
sbbl
jno
mov
jb
lock
scas
jne
or
and
sub
xchg
pop
xchg
jbe
sbb
stos
add
dec
lods
xchg
jae
pop
jge
outsl
sahf
jno
jne
loop
aaa
je
sub
sub
scas
cs
jne
jo
mov
mov
movsb
outsl
pop
jmp
add
jne
fcmovbe
add
inc
into
jnp
inc
pop
fbld
out
mov
mov
adc
popa
inc
mov
shll
or
ljmp
mov
outsb
cmpsb
dec
pop
pop
jne
xchg
sub
stos
jae
int3
cmpsl
jns
sub
jne
push
hlt
inc
test
mov
imul
jmp
adc
and
mov
int3
push
adc
mov
iret
pop
daa
cmp
call
pop
fsubs
jge
cwtl
sub
push
jbe
emms
mov
mov
mov
sarb
push
sub
jmp
adc
test
xor
loope
sbb
jmp
jne
xor
out
test
cltd
fisubrs
xchg
inc
jne
imul
lahf
scas
push
imul
sti
fwait
sbb
inc
sub
inc
dec
int3
jne
ja
popa
push
je
jne
arpl
mov
sbb
jge
cmp
incb
push
pop
daa
push
add
lahf
int
jne
adc
inc
imulb
aad
mov
jae
fsub
sub
mov
dec
jne
dec
test
iret
ja
jp
mov
cld
or
dec
insb
inc
jnp
and
and
mov
test
mov
add
xor
cmpsl
mov
mov
sbb
out
arpl
push
pop
rcrb
std
jne
mov
cmp
inc
jmp
lret
jae
sub
xorb
sub
mov
stos
and
enter
sahf
mov
jne
imul
fimull
fidivrs
mov
les
cmp
jne
insb
inc
pop
std
aam
insl
jnp
adc
das
les
fwait
popa
xchg
imul
adc
jbe
clc
add
cmpsl
push
fdivr
sub
ljmp
inc
adc
push
jne
in
rcrl
mov
mov
jne
and
dec
or
arpl
fwait
xor
jmp
xor
mov
outsl
inc
lret
filds
shrb
xchg
in
insb
mov
test
js
je
sub
sti
or
mov
sub
jne
loopne
es
pop
in
push
dec
mov
jne
dec
icebp
jns
ss
mov
xchg
xlat
scas
lret
in
sub
imul
dec
jbe
inc
in
cmp
ja
add
out
xchg
loope
shll
rcrb
mov
test
std
jne
stc
sub
sub
lret
loop
cltd
out
jne
add
ds
mov
stc
int3
mov
in
push
scas
mov
mov
ljmp
sub
dec
lcall
divb
jl
jne
test
aad
jne
sbb
ret
dec
fstl
mov
lcall
xchg
call
or
ret
in
fcompl
jbe
das
mov
jne
sbb
pop
jnp
or
xchg
in
sub
jne
ret
mov
mov
xor
out
or
daa
mov
lcall
inc
xchg
cmp
ljmp
push
sub
stos
outsl
inc
pop
sub
jae
pop
jne
push
pop
push
ds
mov
jne
fsubrs
and
xor
xchg
out
lcall
fcmove
dec
std
and
fcom
loop
ss
subb
pop
jbe
notl
sbb
jno
inc
mov
add
fidivl
in
pusha
jne
scas
sbb
int3
incb
xchg
mov
lret
fbld
xchg
aad
push
loop
fcmovnu
cmpsb
xchg
and
jne
push
push
adc
das
jne
jl
fildl
mov
and
inc
aam
jmp
jno
gs
dec
mov
scas
pop
data16
lret
add
sub
and
ficomps
lea
call
xor
cs
sahf
mov
jne
movsl
xor
jae
arpl
inc
loope
mov
xchg
gs
adc
mov
out
lock
mov
mov
push
cwtl
ja
mov
out
sbb
int
fwait
dec
cltd
out
add
mov
push
jne
adc
or
pop
add
jne
push
lahf
pop
daa
cs
out
xchg
movsb
jne
xchg
lcall
call
jge
pop
jne
jmp
rcl
inc
andb
push
hlt
xchg
popf
jno
lods
loop
test
jbe
inc
or
sub
pop
sub
shlb
notl
sub
je
jecxz
inc
push
adcl
xorb
movsb
push
and
and
lret
into
xor
sub
mov
adc
stos
sub
cmpsl
ret
add
mov
fs
jne
aas
inc
pop
loop
add
jne
push
or
pop
mov
cltd
lods
outsl
sub
jecxz
hlt
sub
jne
adc
adc
leave
out
push
jne
stc
std
mov
jae
inc
pushf
dec
lahf
rcrb
mov
out
adc
mov
xchg
rorb
std
in
test
arpl
mov
pop
lock
mov
cmp
xor
adc
sub
sbb
insb
jne
adc
sub
test
gs
and
adc
movsl
dec
sahf
lahf
push
jae
iret
mov
dec
pop
fwait
xchg
mov
add
push
popa
jp
xchg
ss
and
lret
dec
mov
stos
ret
xor
jp
jecxz
fnstenv
loope
ja
xchg
jo
popf
ss
xchg
inc
ja
cltd
addr16
int
sbb
pusha
data16
inc
cld
mov
dec
inc
jmp
subl
outsl
or
mov
pushf
enter
push
jmp
in
sub
mov
lahf
cmc
inc
mov
mov
cmpsl
pop
mov
push
sub
flds
jne
cltd
mov
shlb
test
cmp
adc
mov
xchg
in
add
test
push
bound
sub
ficomps
jg
xchg
cmp
mov
jmp
push
outsl
test
insl
push
push
add
push
jne
inc
add
and
xchg
outsl
or
icebp
std
repnz
jae
push
or
add
adc
es
dec
sbb
jne
push
pop
rorb
inc
adc
fwait
in
sbb
addr16
mov
cmc
ja
lock
scas
mov
jmp
pop
fsubr
fbstp
inc
js
imul
push
sbb
ja
ror
mov
or
stos
add
stos
mov
inc
orb
dec
add
inc
aas
cmp
sbb
dec
xchg
ds
jne
in
mov
mov
mov
ljmp
cmp
in
out
loope
sbb
push
pop
sub
adc
xlat
jne
sub
xor
out
sbb
in
enter
out
push
aas
fs
jne
mov
fistpl
sti
jne
xchg
xor
popa
inc
push
sbb
jae
out
daa
pop
push
and
loop
dec
inc
cwtl
push
jne
out
and
jno
adc
bound
push
dec
mov
imulb
inc
adc
mov
jg
push
sbb
push
and
mov
and
adc
call
jne
shlb
ljmp
and
loopne
xchg
mov
cmp
lcall
adc
xor
cmp
xlat
jne
lock
xchg
mov
int3
push
stc
xor
ret
ds
pop
fisubrs
jne
mov
daa
cmpsb
jne
pop
inc
das
pusha
enter
fbstp
incl
jns
dec
nop
sbb
jne
dec
mov
in
jne
fiadds
rorl
je
jp
in
subb
and
cld
sbb
xor
push
aad
ja
out
mov
lds
repz
ja
mov
insb
push
jbe
popa
in
xchg
jne
adc
add
icebp
and
imul
push
shrl
push
jno
jne
pop
mov
push
cli
outsb
mov
stos
mov
nop
call
movsl
sbb
push
adc
sbb
push
sub
fisubs
aad
pop
pop
xor
jne
dec
std
cmp
add
or
mov
loope
notb
jo
cwtl
pop
sbb
xchg
inc
sbb
cli
rolb
arpl
mov
ja
subb
popa
jne
xor
inc
pop
leave
mov
xchg
stc
rolb
loopne
push
pop
jne
ficoms
add
test
into
push
jne
or
ss
cmp
adc
fiadds
lock
push
mov
dec
ljmp
jcxz
in
fidivs
adc
shrl
scas
inc
adc
lret
fstpl
xchg
sub
push
daa
jbe
mov
jne
ja
cmpsl
push
imul
out
mov
pop
dec
cmpsl
push
jae
mov
or
jbe
gs
jne
incb
pop
jne
sbbb
es
dec
add
fmul
loopne
lea
cmp
dec
aam
test
pop
mov
icebp
test
push
xor
pop
mov
xchg
mov
in
inc
jne
popf
pushf
jp
in
in
stos
pop
jnp
mov
notb
jne
cmp
cli
or
data16
fidivrs
lret
call
test
out
call
mov
out
dec
sbb
sub
pop
jmp
jo
xchg
incl
les
inc
notb
jmp
and
jno
clc
filds
push
lods
jo
mov
pop
cmpsl
add
push
sar
sub
add
repz
pop
jns
mov
jno
adc
notb
xor
out
jmp
jg
shll
rclb
push
add
push
decb
fcomi
jne
test
outsl
jne
and
sub
mov
sub
fistl
xchg
push
jne
inc
inc
adc
jae
pushf
jl
pop
sbb
ss
cmpsl
lods
mov
jne
das
push
imul
roll
xor
push
es
sahf
sub
ja
lods
jne
sub
push
add
sbb
mov
jne
inc
inc
daa
or
fsubrs
mov
adc
loop
dec
lea
lock
sbb
int3
outsl
into
push
inc
mov
bound
ds
inc
mov
popa
xchg
fs
xchg
xchg
dec
loopne
mov
sub
out
sbb
push
movsl
out
xor
jne
push
pop
sub
lods
jne
push
lcall
loop
fidivrs
xor
test
aaa
xchg
mov
jge
cmp
mov
jae
jg
xor
in
stc
imul
xlat
xor
fucomip
mov
sbb
jne
lods
out
xchg
das
push
cmp
aas
out
pop
cli
xchg
sub
sbb
lods
pop
xlat
jne
fcmovnu
shll
loop
jg
mov
icebp
xor
loope
int
xchg
roll
lds
jbe
fs
inc
mov
jo
jmp
push
mov
cmpsb
or
cwtl
sbb
popf
mov
jne
in
das
cmp
jae
jne
push
lds
jne
loopne
sbb
int
in
jmp
es
ss
jne
ret
mov
jne
sbb
es
ds
and
dec
inc
xchg
mov
mov
imul
sub
and
fcomps
jle
cmc
xchg
mov
pop
movsl
jne
jb
cmp
mov
out
mov
scas
ja
shl
gs
or
adc
ret
jmp
dec
imul
fdivp
loope
jp
xchg
repz
add
sahf
sub
iret
jo
cmp
je
imul
ret
xor
or
stc
inc
lea
push
sub
lock
and
gs
cs
cltd
jne
xor
adc
cmp
es
jns
jne
cs
mov
pop
sbb
xorb
stos
xchg
insb
lock
fistps
jg
lret
push
fcmovnu
jne
int3
mov
rorb
inc
jne
das
and
pop
jne
lret
sub
out
pop
sub
or
sub
cmc
out
movsb
and
jbe
ror
adcl
divl
fiaddl
mov
sar
mov
jl
inc
adc
jae
pop
pop
and
pop
lret
mov
aad
inc
cmc
sbb
sub
or
repnz
in
or
push
fldcw
jbe
movsl
mov
inc
xchg
or
push
loopne
jmp
cmpsb
std
cltd
add
aad
jne
cmovle
mov
mov
dec
adc
sbb
cmp
jne
add
inc
or
push
push
aas
jae
movb
push
sub
call
mov
cmc
sub
movsl
mov
lret
mov
sub
jmp
in
int3
dec
lods
and
je
xor
jne
popa
fsts
jne
outsb
adc
mov
fmuls
insl
clc
sbb
outsb
jne
dec
dec
dec
sbb
dec
test
jbe
scas
iret
loopne
cmp
mov
and
call
sbb
cmpsb
add
leave
or
inc
lds
iret
jmp
mov
into
aam
sub
push
jne
push
lret
out
mov
jne
cmp
and
mov
xchg
sbb
mov
int
gs
xchg
sar
addb
xchg
add
in
and
out
and
fbstp
sbb
mov
in
jl
stc
push
and
jne
ds
cmp
add
dec
test
inc
jne
das
rcl
lods
sbb
insl
jb
cmp
out
out
xchg
jmp
fmuls
mov
test
inc
sahf
jbe
jmp
push
xchg
test
jne
shl
fistl
add
jge
jecxz
push
adc
jne
clc
jno
and
addr16
out
ficoml
test
into
sbb
jno
pop
pop
adc
jecxz
xchg
jne
sti
dec
mov
jne
mov
jnp
xchg
jne
nop
pop
lock
mov
mov
popa
and
add
not
or
jge
jo
shlb
rcrl
xor
clc
jmp
adc
adc
shlb
repz
in
aas
push
out
mov
xchg
pop
sbb
ss
jne
test
sub
dec
and
add
loopne
aad
push
fwait
pop
jne
adc
mov
push
sahf
pop
dec
test
popa
pushf
mul
or
jmp
cltd
out
inc
addb
mov
stos
push
jne
arpl
lods
cmp
dec
dec
jne
inc
aaa
jecxz
clc
rolb
jne
das
jl
repz
sub
jne
sub
sbb
mov
fldt
out
je
push
fiadds
pop
loopne
pop
out
sub
out
int3
push
dec
pop
jne
and
mov
xor
daa
in
mov
ret
inc
scas
cmp
inc
or
mov
jge
addr16
jmp
lea
xor
pop
sbb
dec
aas
clc
jb
or
ret
jmp
add
shll
mov
stos
ljmp
stc
je
xchg
xlat
jne
push
cli
fwait
sbb
pop
jne
add
fs
add
xchg
xchg
and
outsl
mov
or
lret
pop
aad
xor
cmc
push
sarb
xor
push
xchg
pop
sub
xchg
movsb
add
jne
sbb
and
adc
andl
mov
jb
jmp
jbe
add
dec
outsl
cmp
shrl
cli
push
pop
into
insl
sti
mov
cmc
mov
jns
inc
leave
jbe
sub
pop
add
or
jb
movsl
mov
fs
mov
mov
dec
stos
xchg
scas
sub
or
imul
aas
mov
int
andl
jne
into
mov
cmp
clc
cmc
fcomi
jnp
mov
jne
cmp
mov
pop
icebp
jne
rcl
ds
cmp
out
and
adc
jbe
mov
cmp
cld
add
int3
xchg
add
mov
movsb
push
scas
addr16
jp
cmpsl
pusha
mov
mov
inc
outsl
pop
push
js
mov
inc
push
jnp
sub
mov
jns
js
or
xchg
xchg
xchg
jae
mov
push
mov
jb
or
shl
mov
jne
mov
sub
imul
leave
push
outsl
lock
stos
das
outsl
push
gs
scas
jae
fildl
in
stos
jle
mov
lcall
sub
pop
push
jne
xchg
mov
fadd
outsl
lret
idivl
ss
xor
inc
clc
out
sub
cmp
jns
mov
xlat
in
jne
add
loopne
out
das
adc
aaa
pushf
jns
shl
sahf
mov
cmp
iret
inc
cmc
push
out
push
jne
out
addr16
inc
push
aas
jne
push
inc
and
cmp
mov
in
push
jne
es
pop
nop
aas
stos
imul
sub
and
jne
push
stos
ret
xor
andl
imulb
mov
inc
jne
mov
ja
pusha
push
test
aad
jae
and
clc
decb
jne
pop
mov
fildll
insb
push
hlt
cwtl
clc
add
ficoms
jne
pusha
pop
pop
ret
ret
jne
fldl
fildl
dec
pop
lahf
mov
jne
add
ljmp
ds
fistps
insl
mov
mov
into
cmp
jne
push
lret
jno
popa
dec
pop
daa
mov
xlat
ljmp
lods
mov
gs
ss
add
insl
push
add
mov
inc
outsl
jae
sbb
sub
fidivs
pop
test
sbb
out
push
ljmp
aad
cmpsl
mov
jne
sub
rcrb
stos
je
roll
filds
sub
ljmp
cltd
cmp
out
and
or
mov
adc
fstpl
jne
in
inc
mov
pop
cmp
movsl
xchg
mov
arpl
push
loope
ds
into
mov
gs
push
fstps
jno
jl
mov
outsl
bound
push
je
das
adc
imul
iret
and
nop
repz
ret
inc
test
push
xchg
xchg
shlb
xchg
dec
xchg
and
pop
pop
imul
sbb
ret
jae
xchg
shlb
mov
mov
mov
dec
jne
aaa
add
sahf
into
outsl
movsb
push
es
addr16
sbb
sub
or
in
cs
scas
xchg
fcmovnbe
mov
aad
hlt
push
ret
mov
push
or
pop
mov
push
and
ljmp
push
mov
loop
push
mov
mov
inc
xlat
xchg
std
xchg
cli
push
daa
xchg
jp
arpl
jg
inc
cmp
fs
loop
add
shll
push
jnp
ret
jae
adc
mov
xchg
push
xchg
test
data16
add
pop
movsb
les
jne
out
inc
dec
cmp
ja
lret
pusha
mov
adc
jne
add
sar
mov
xchg
pop
xchg
mov
xor
mov
jmp
rorl
cmc
rorl
cwtl
add
mov
inc
push
lock
push
xorl
int3
and
icebp
inc
cli
mov
rol
jne
fistl
push
ljmp
rorb
sbb
pop
rcl
aas
push
jne
into
dec
cld
push
stos
fnsave
adc
mov
leave
scas
push
loop
pop
outsl
rcr
mov
sub
xchg
imul
fisubs
int
pop
jl
jne
idivl
or
cmc
mov
cmp
jne
out
sbb
loop
daa
xchg
call
mov
insb
mov
loope
dec
ss
sbb
push
lods
les
adc
mov
push
aaa
jne
fnstcw
leave
imul
cmpsl
call
daa
into
mov
cli
lods
add
adc
movsl
clc
inc
fsubrs
cmc
cwtl
mov
jl
and
jle
push
sbb
shrb
or
push
xchg
mov
jns
xchg
out
xchg
lcall
cmp
in
pop
fidivl
add
sub
mov
js
pop
jae
jp
adc
jnp
shlb
inc
sbb
sti
dec
popf
mov
lds
adc
jbe
in
cmp
dec
dec
sbb
jmp
bound
push
lahf
fdivrs
loop
mov
out
jbe
test
rol
in
dec
inc
loope
xchg
cmp
andl
lods
mov
loopne
cmpsl
jne
cwtl
rcr
mov
mov
jne
adc
push
jne
mov
cld
ds
outsl
jno
loope
adc
cli
jne
enter
test
scas
out
sub
shr
sti
xchg
jmp
push
mov
iret
shlb
xor
and
fwait
ds
add
lods
push
jne
aas
test
dec
lret
out
jne
sub
mov
jmp
jnp
add
or
cmp
sbb
lods
xchg
jne
stos
mov
jae
cs
xchg
push
cmp
mov
push
sti
sub
and
imul
cmc
cmpsb
mov
mov
adc
pop
in
mov
out
lahf
int3
nop
lret
sub
stos
push
leave
roll
std
es
jmp
stos
scas
popa
jne
push
sbb
fldl
jne
in
inc
cmp
fs
enter
xor
xchg
sub
mov
mov
jae
je
pop
add
testl
jbe
gs
cmpsb
shll
lock
cwtl
call
ja
pop
and
int
jo
lcall
pusha
sbb
mov
int3
jne
push
repz
jne
xchg
and
jne
lds
cmp
mov
xchg
xorb
mov
mov
sahf
cmp
pushf
xchg
pop
mov
pcmpgtw
in
pop
push
mov
inc
jbe
sub
push
adc
cld
jae
fistpl
shr
mov
cmp
xchg
int3
jne
push
es
mov
ljmp
lahf
mov
fcomip
pop
rolb
ja
out
dec
or
xor
jne
fiadds
xor
cwtl
dec
pusha
test
ret
xchg
mov
dec
dec
jne
push
stc
pop
cmpsb
ja
pop
pop
jno
mov
add
xor
cmp
mov
jp
xchg
add
and
xchg
mov
mov
test
jne
int3
insb
mov
mov
rcl
cmpl
adc
inc
fisubl
push
sub
popa
mov
cli
nop
int3
pop
sbb
mov
rcrl
mov
push
mov
jae
pop
sub
je
add
shl
jae
push
lret
adc
outsb
jne
and
cli
inc
push
repnz
ja
xorl
scas
jne
scas
lret
imul
jne
sbb
stc
loop
push
jb
lret
in
jne
mov
rcr
jae
imul
inc
adc
xchg
int
jne
sbbl
ja
insl
or
shll
mov
mov
out
scas
dec
dec
jne
sbb
loopne
jne
inc
inc
inc
jno
arpl
imul
testb
enter
outsw
leave
scas
xchg
push
fnsave
mov
cld
das
cli
pop
enter
fbstp
shll
xchg
pop
leave
fs
jne
lea
inc
dec
ss
ja
shll
roll
xorl
xor
xor
adc
jne
mov
ljmp
mov
push
leave
xchg
lcall
sub
outsl
or
outsl
cld
mov
clc
out
jne
sub
out
sub
pushf
data16
je
add
dec
push
mov
jge
mov
jne
cmpsl
or
jne
mov
jg
inc
leave
fisubs
push
cmp
frstor
call
and
dec
sahf
xchg
scas
fwait
mov
adcb
xor
fnstenv
adc
ret
es
outsb
loopne
push
icebp
loop
jne
das
pop
xchg
scas
add
lock
mov
push
fmul
cmp
jne
mov
mov
and
jne
sub
push
dec
cmp
mov
xor
xchg
fnsave
add
movsb
or
push
stos
jo
ret
xchg
mov
cmp
cmp
std
pop
sub
pop
andb
fs
loop
data16
sbb
mov
mov
push
mov
popf
cmp
adc
sbb
inc
or
mov
es
test
insb
sarl
dec
push
push
lods
push
inc
mov
fstpl
pop
jne
mov
outsl
xor
cmp
mov
xlat
sbb
fisttpll
cmc
cmp
mov
insb
pusha
xchg
xor
mov
lahf
lcall
sbb
in
iret
jne
push
sbb
loopne
aas
addr16
sbb
mov
ss
in
popa
lods
jmp
and
fwait
jno
rcrl
jne
jnp
cmpl
andl
stc
les
and
pushf
jp
push
add
dec
adc
shl
lahf
out
xchg
jmp
jnp
mulb
mov
sbb
xor
sbb
cmp
in
mov
xchg
add
leave
or
xor
dec
fnsave
xchg
inc
mov
int
ja
pop
sbb
xchg
sti
dec
in
jne
and
les
push
push
data16
push
mov
outsb
jle
xchg
lods
pop
icebp
mov
mov
stos
mov
testb
out
idivl
sar
cmc
jg
jbe
xor
dec
mov
bound
lods
insb
jne
inc
fs
aaa
sbb
or
fdivs
mov
int3
outsb
add
jno
rcrl
mov
jne
or
and
repnz
xorb
push
cwtl
fwait
cmp
or
fildll
pop
jne
add
in
dec
mov
ja,pt
iret
push
bound
push
pop
push
stos
std
shlb
repnz
mov
mov
into
in
push
mov
and
dec
in
popa
orb
outsl
fisttpll
rcrb
stos
jo
mov
cwtl
in
sub
call
leave
ljmp
jnp
pop
push
or
jb
mov
jne
sbbb
mov
test
cmpsl
mov
outsl
lock
out
sub
jne
out
aad
pusha
and
lea
or
adc
js
pop
dec
adc
cs
repz
imul
out
mov
aad
jne
fcomip
rcll
mov
stc
clc
mov
ss
cmc
xchg
les
ja
jae
paddsb
testb
jne
sub
push
push
ja
decl
out
cmc
mov
inc
lods
lret
rorl
lods
cmp
sub
call
pop
or
mov
cmp
outsl
pusha
aas
cs
ss
fsubrl
lock
dec
es
mov
sbbb
insb
jne
jl
cmpsl
movsl
and
enter
js
mov
out
in
icebp
jne
push
sbb
mov
fstps
scas
xchg
push
out
test
mov
jle
and
out
outsl
cmp
jne
and
pop
pusha
movsl
and
out
sub
dec
jae
jmp
inc
cmp
mov
jne
pop
imul
rcr
jae
popa
fstpt
mov
popf
cmp
outsb
roll
mov
test
xor
dec
jne
lods
in
pop
cmp
loopne
mov
lods
mov
inc
xor
negb
dec
les
xchg
out
fs
pusha
pop
rorb
sbb
pop
push
minps
cld
out
ficomps
ja
mov
xchg
cli
fisttps
jne
in
jl
mov
fmuls
js
jne
dec
dec
daa
out
jne
fwait
push
sub
nop
sahf
lods
outsl
add
int
shll
mov
lock
adc
sub
into
stos
push
mov
jne
or
mul
or
cwtl
jne
mov
sbb
out
lcall
subb
and
mov
cmp
ja
push
divb
je
aas
jp
and
fdivrp
pop
test
sbb
das
jne
lods
imul
subb
lahf
roll
jne
sbb
repnz
cwtl
dec
and
pop
xlat
push
push
imul
add
jp
outsl
xchg
inc
xor
dec
inc
adc
fists
xchg
addr16
ficomps
lret
arpl
bound
push
mov
jne
cmpsb
xor
sub
jne
inc
jo
lods
adc
mov
fnsave
jne,pt
jl
xchg
pop
jb
aas
ja
aad
mov
adc
ja
pop
mov
jns
dec
dec
jbe
sbb
iret
mov
xchg
xchg
jne
movsl
push
add
in
push
adc
fdivl
lret
mov
mov
jne
add
jbe
inc
inc
jne
shr
js
pop
jnp
jne
sub
jo
mov
adc
and
lret
or
dec
add
inc
xchg
push
push
mov
push
out
or
cmp
jnp
cmp
loopne
js
push
lea
or
fldenv
jae
cmp
mov
push
movsb
xchg
sbb
shll
ljmp
scas
or
sub
or
ljmp
sbb
aaa
stos
pop
mov
dec
mov
jnp
and
jbe
push
pop
jo
add
push
jmp
inc
fmuls
sub
mov
in
jae
lock
cmpsb
das
push
and
cli
rcl
repz
xchg
dec
jg
pop
daa
aas
aad
and
sbb
pop
int3
mov
data16
cmp
mov
and
dec
mov
add
lock
push
es
punpcklwd
xchg
add
and
je
pushf
jo
jne
mov
xchg
mov
jne
dec
incb
mov
jne
jmp
and
imul
leave
scas
pop
ror
mov
rol
sub
fdivr
push
jne
insb
stos
sub
int
icebp
jne
loope
es
mov
ret
pushf
cmp
das
je
lret
sbb
cmp
mov
pop
mov
in
xchg
cmp
pop
pop
sbb
aaa
stos
sub
mov
bswap
sbb
jne
lds
lcall
ffreep
jge
xor
push
dec
bound
xchg
jno
stos
pop
mov
pop
lret
ja
lds
sub
pop
cmp
notb
stos
popa
and
push
loop
inc
and
jne
inc
adc
out
jne
add
inc
clc
hlt
jge
add
mov
xor
adc
xchg
dec
fsubrs
jne
enter
in
jne
xchg
es
mov
fs
jb
dec
push
insb
imul
mov
and
je
sub
lret
mov
sbb
fisttpll
sbb
jnp
cmc
ja
lret
push
push
call
jne
jp
and
pop
mov
mov
or
ljmp
js
xchg
jne
and
shl
imul
outsl
fwait
pop
pop
mov
dec
ja
xchg
push
fstpt
ret
loope
mov
push
fsubp
xchg
call
arpl
inc
jae
fs
lahf
jne
repz
int
gs
adc
dec
sti
jne
subb
ret
hlt
and
es
xor
pop
aad
adc
jne
cli
daa
pop
jae
push
les
mov
imul
sub
jo
mov
int3
or
pop
fildl
jne
add
jnp,pn
xor
sub
das
clc
or
icebp
movsl
jne
out
mov
xchg
jae
in
cmp
dec
or
sbb
jg
pop
stos
mov
mov
ss
cmp
imul
std
cmpsb
filds
jne
lods
sbb
cmpsb
jne
fmull
and
lahf
pushl
mov
pop
mov
stc
push
lret
jne
arpl
sub
mov
push
and
dec
push
dec
fidivrl
jno
push
adc
ficomps
es
add
jbe
stos
mov
sbb
lahf
cmpsb
jne
int
mov
clc
test
data16
xchg
pushf
in
push
cmp
popa
cmp
shlb
mov
pop
adc
outsl
fcoms
xchg
movsb
cmp
xchg
lahf
jne
push
ret
lret
outsb
pushf
jne
xor
daa
xchg
adc
jp
mov
mov
mov
inc
pop
jae
push
cmp
jg
mov
pop
xor
fisubs
aam
imul
popf
mov
push
add
dec
cmc
pop
movsb
mov
and
jbe
pushf
pop
fildll
call
cmp
scas
fcmove
push
and
lret
ror
cmpsb
sub
aaa
dec
insl
loopne
and
jne
es
call
and
cmp
add
mov
lcall
daa
insl
idivb
sub
loopne
add
adc
aam
enter
and
add
mov
fidivl
push
loopne
pop
outsl
stc
xchg
mov
scas
stos
stos
rol
fsubl
pop
ljmp
daa
sbb
loop
rcrb
push
fs
fdivrs
cmp
ja
xchg
sahf
add
xchg
mov
push
popf
testl
and
bound
inc
fs
jae
jne
sub
or
mov
popa
xchg
push
push
jne
imul
mov
jle
push
roll
arpl
jne
mov
int3
repz
and
jne
fcmovu
dec
nop
cmc
pop
aad
addr16
imul
adc
cmpl
lock
lcall
sub
lds
jecxz
push
ds
movsb
mov
scas
cmp
fldcw
gs
adc
cltd
cmc
xlat
mov
jne
leave
or
ds
mov
das
cmpsb
test
pusha
jg
mov
jno
jne
and
jae
jne
lret
testl
mov
push
jo
dec
xchg
push
xor
fnsave
xlat
pop
ret
mov
pop
jns
jp
dec
andb
pushf
and
push
fs
jne
mov
cld
shll
mov
add
test
ret
dec
imul
in
imul
jne
aam
sbb
leave
cltd
nop
imul
jp
or
jae
movsb
pushf
dec
xchg
ds
sub
mov
dec
and
and
xor
js
mov
xor
je
jecxz
rol
mov
pop
and
add
jae
fidivs
lret
test
test
jns
pop
ficompl
enter
jbe
dec
xor
xchg
cmp
cmp
fldenv
jne
roll
mov
int3
addr16
or
mov
ja
sbb
jne
fcompl
std
aas
ja
jp
hlt
aam
loopne
add
jne
fwait
sbb
xorb
push
repz
pop
cmpsl
push
sub
int3
into
push
jne
push
jne
repz
jns
inc
rcrl
insl
daa
fdivrl
jne
loope
push
int
pushf
jne
mov
xchg
jne
sbb
or
fdivrs
int3
scas
mov
jnp
mov
rcll
mov
sbb
pop
mov
scas
stos
test
mov
sarl
imul
in
add
sarl
xchg
sbb
jne
enter
int3
and
xchg
cmpsb
or
jns
add
sbb
xor
leave
int3
xchg
jecxz
popf
into
jne
inc
mov
in
cwtl
mov
add
add
outsl
pop
dec
ljmp
xorb
imul
lahf
xor
outsl
daa
and
mov
mov
mov
stos
sbb
jecxz
fistps
dec
xchg
jne
push
mov
push
jne
mov
incb
lods
xchg
xchg
mov
lds
test
dec
movsb
rcrl
mov
mov
jne
or
ds
loop
shll
xchg
mov
int
fs
insb
cmp
or
jne
hlt
and
mov
push
adc
mov
lds
aam
pop
jo
mov
cld
mov
mov
jbe
lods
sbbb
sbbl
gs
fstl
cwtl
iret
sub
int
and
mov
sbb
adc
cmp
xorl
mov
jbe
or
sub
push
outsb
jne
pop
movsb
add
mov
addb
call
pop
xlat
movsl
pushf
sbb
or
jne
cmp
mov
insb
std
push
jne
hlt
enter
addr16
nop
push
cmc
add
scas
jne
pop
pop
xor
subl
repnz
adc
lock
push
pop
inc
inc
jb
hlt
mov
test
dec
clc
pushf
sbb
stos
stos
call
out
fisttpll
pop
dec
test
push
mov
lahf
jne
sti
loope
jmp
pusha
add
and
lea
loop
cmp
xorl
push
movsl
ds
addl
jne
jp
lea
xchg
pop
push
scas
js
jne
cmpsl
and
shl
xchg
stos
mov
das
rcll
stos
daa
subl
scas
jne
sbb
clc
int3
jnp
or
pop
pop
imul
aaa
inc
jne
aad
adc
jne
inc
xchg
sbb
outsl
cmp
inc
rorb
out
mov
add
sub
lock
jne
punpcklbw
jg
sub
inc
out
xor
jne
fidivrs
sub
fcomps
cwtl
sub
jne
mov
out
lods
insl
jnp
idivb
xchg
jne
add
push
xchg
arpl
popa
int3
lods
cld
data16
mov
push
xchg
outsl
fcmovnbe
mov
lahf
iret
xor
mov
inc
in
jae
inc
sub
adc
cmp
bswap
sbb
cmpl
inc
insb
bound
test
lods
mov
sbb
lods
lret
adc
addr16
enter
leave
jne
ret
ds
xor
inc
ss
roll
sub
xchg
sub
push
lret
mov
stc
mov
jne
pusha
loopne
mov
ja
sub
sub
add
inc
icebp
scas
jne
ret
push
pop
cmp
jne
mov
jmp
jne
faddp
je
pop
arpl
orl
mov
pop
mov
loopne
ficoms
jmp
dec
jne
sbb
or
leave
popf
scas
and
lock
bound
out
out
push
lcall
jne
mov
push
movsl
jbe
jne
xchg
in
fdiv
jae
jne
imul
push
fstps
and
sub
jne
popa
sti
leave
mov
cmp
mov
xor
inc
pop
jne
mov
subl
or
pop
insb
jl
pop
stos
hlt
jne
es
rolb
push
lahf
fistpll
fwait
iret
xchg
mov
jne
mov
xchg
mov
jb
jne
daa
cli
cwtl
fwait
popf
cmpl
xchg
jb
outsl
mov
xchg
inc
dec
in
mov
stos
int
test
jne
push
inc
mov
or
jbe
adc
mov
mov
sarb
dec
mov
jne
pop
mov
out
cwtl
rclb
jne
jb
jnp
jecxz
adc
insb
mov
sbb
cli
jne
sbb
int3
and
adc
cmc
insl
jl
jge
imul
hlt
int3
out
jne
inc
cmp
imul
cmp
push
or
out
jae
sub
jne
sub
movsb
cltd
add
aam
dec
arpl
test
lret
pop
xchg
and
fwait
cmpsb
and
mov
stos
or
push
jne
sti
insb
sbb
cmp
mull
jne
inc
jge
neg
repz
pop
rcrb
jne
or
sub
cmpsl
rcrl
push
fistl
adc
mul
fisubrs
jecxz
or
sbb
pop
inc
xor
into
aad
jne
cli
arpl
jmp
inc
adc
pop
xchg
stos
jo
jne
int
mov
jne
jnp
dec
inc
mov
divb
clc
mov
mov
sub
cmp
js
loopne
mov
sbb
xchg
inc
aad
fwait
add
mov
ret
cmpsb
inc
xor
or
push
pop
mov
jne
xchg
ja
repz
movsl
in
mov
and
and
or
mov
jne
pop
int
rcll
inc
loope
xchg
pop
js
pop
in
cmp
ret
mov
cmpsl
lods
push
push
jne
dec
in
cltd
es
add
sbb
pop
loope
adcb
add
shlb
into
cmc
jno
loop
jne
pusha
push
sbb
sbb
fidivrl
je
das
pusha
and
stc
adc
sub
xor
cmp
xlat
lret
outsb
mov
xchg
scas
adc
jne
das
push
rclb
sbb
cmp
jne
lret
fsubl
jge
addb
les
mov
mov
stos
out
or
and
pop
ficompl
sbb
loope
movsl
xchg
adc
mov
mov
not
mov
pop
dec
pop
mov
fmul
or
test
lret
xor
stos
and
jne
mov
pop
sbb
dec
icebp
scas
mov
cmc
mov
mov
jbe
xor
pop
xlat
add
cwtl
in
mov
jmp
repnz
and
in
xchg
loopne
and
mov
mov
inc
adc
nop
sahf
jae
mov
fisttpl
pop
jne
ficoms
push
and
push
jne
mov
jne
loopne
cltd
push
lahf
inc
insl
scas
incl
jp
inc
in
int
adc
xchg
xchg
sub
scas
lret
xchg
dec
push
addr16
pop
cmc
add
out
ja
jne
lahf
std
pop
inc
fwait
pop
shlb
clc
xchg
sarb
jne
push
pop
cmc
loop
adc
inc
mov
pop
sbb
push
jne
enter
push
jnp
jne
push
or
lock
jns
aas
push
mov
cmpsl
cwtl
pop
push
sbb
cmp
or
sarb
sbb
dec
mov
sti
cmp
jp
imul
es
sbb
jne
clc
cs
push
adc
cmpsb
jp
rorb
jne
or
sti
pop
in
ds
shrl
jb
vmovaps
lods
mov
inc
cld
sbb
fbstp
ret
inc
es
mov
push
xchg
lods
sbb
pop
and
cmpsb
movsl
neg
rcrl
xlat
jne
cmpsl
xchg
mov
mov
bswap
fst
or
push
cmp
aaa
je
pop
fisttps
and
mov
fincstp
add
ds
leave
sub
ljmp
and
lock
roll
dec
inc
lea
mov
and
cmc
mov
mov
adc
jg
jbe
inc
jecxz
clc
ja
cmp
jmp
aad
adc
outsl
mov
lcall
stos
rcrl
sbb
jne
out
dec
dec
mov
mov
int3
mov
jnp
or
ss
aam
arpl
jne
sub
pop
fisubrs
sbb
addl
shl
cwtl
outsl
sahf
push
int3
outsb
pop
in
inc
xchg
dec
jne
in
cmpb
jb
cmp
dec
out
add
jne
pop
out
mov
imul
hlt
sbb
lea
into
push
rcrl
imul
fcomp
jne
clc
sub
push
mov
in
jne
and
mov
jne
insb
sbbl
shll
repz
rolb
xlat
sbb
pushf
mov
ret
mov
ret
ret
jo
adc
ds
aam
mov
xor
lret
xor
loopne
jmp
or
cmp
cmc
and
lods
jae
clc
sbb
cs
in
fucomip
cmp
mov
sbb
mov
push
idivb
bound
imul
pushf
jne
movsb
cs
push
xchg
push
scas
loopne
jne
loop
in
repz
mov
jne
hlt
mov
subl
sub
mov
xchg
jae
push
data16
jns
scas
sar
mov
cmp
mov
jne
clc
out
sbb
sbb
pop
lock
aaa
or
xor
or
xchg
cmpsl
lahf
cmp
and
fisubl
jl
mov
inc
jmp
mov
ficomps
shlb
mov
cbtw
inc
jne
mov
push
adc
mov
push
jno
int3
push
mov
roll
xor
fnstcw
cltd
sub
jne
mov
push
and
mov
push
in
xlat
jnp
out
xchg
loope
xchg
jg
jge
imul
daa
dec
es
xchg
adc
dec
xor
jne
ds
mov
ja
sub
lret
jne
xor
add
jb
jne
lods
mull
jne
sbb
inc
jae
xchg
mov
jecxz
or
fwait
sbb
mov
mov
divb
adc
inc
cli
ja
cmp
out
lea
jne
sub
aad
mov
aaa
jne
pop
cmpsb
je
cltd
dec
pop
jae
pop
ret
rolb
push
cmpsl
dec
xchg
fimuls
ja
cmp
dec
stos
adc
add
jmp
and
add
inc
xchg
jno
and
mov
adc
dec
xchg
arpl
mov
inc
adc
or
lods
lret
xchg
sbbl
mov
popa
sbb
jne
imul
insb
jmp
jno
outsl
xor
insl
subb
jl
pop
addr16
ret
insl
xchg
cmp
outsl
inc
pop
inc
jecxz
xchg
xchg
mov
test
dec
addr16
add
out
leave
and
test
insl
push
push
inc
jne
aam
outsb
ja
jne
jbe
stos
xor
imul
mov
cmp
mov
pop
outsl
or
sub
cmpsl
jbe
out
adc
adc
jo
ret
jl
gs
jg
shrl
in
adc
push
es
ja
add
loopne
cmc
push
inc
movsb
ja
das
dec
lret
mov
fwait
popa
loope
xchg
xor
pop
mov
sarb
sbb
inc
in
ja
nop
xor
cmp
clc
gs
sbb
icebp
fldenv
sub
inc
into
repnz
lret
push
dec
mov
jbe
popa
icebp
jp
jne
xor
or
fnstcw
stos
pop
lock
add
adc
jne
mov
xchg
fstl
pop
outsb
repnz
sbb
mov
in
aas
jae
das
push
add
jne
xor
cmp
scas
jmp
jne
push
js
repz
and
jne
pushf
jno
push
outsl
mov
jne
lods
xchg
mov
jno
push
addr16
mov
inc
inc
mov
jne
ljmp
jne
push
adc
cli
dec
roll
xor
pop
jne
jnp
stc
aas
mov
ret
clc
mov
jecxz
stos
loopne
fisttpl
std
popa
bound
sbbl
jne
sub
insb
mov
adc
loop
roll
negb
and
addl
test
lret
pop
or
in
xchg
xor
jne
scas
subb
lret
in
mov
lds
lea
in
cltd
inc
arpl
push
xchg
mov
gs
push
sub
bound
test
jnp
xor
mov
pop
fimuls
je
sbb
sbb
jne
out
push
push
adc
shl
mov
fwait
xchg
aaa
push
aam
jbe
adc
xchg
push
aaa
mov
test
xchg
daa
popa
jne
jle
mov
mov
sub
jbe
stos
sarl
fcoml
fisttpl
xlat
daa
pushf
js
enter
adc
cmp
ficomps
aas
jne
jp
test
cmpsb
ds
addl
mov
dec
jne
inc
add
pop
xor
add
pusha
leave
fdivs
dec
sbb
ficompl
fs
inc
jne
repnz
push
hlt
xor
gs
cmp
jne
push
mov
or
mov
cmp
pop
sub
es
cmp
sahf
push
jne
ret
int
dec
out
out
inc
xor
jne
jno
jmp
sub
test
mov
adc
aas
pop
or
adc
stos
jne
addb
cmp
dec
cmp
push
nop
outsl
sbb
leave
mov
addr16
xor
mov
neg
push
jecxz
pop
jne
and
daa
push
clc
jne
cmpsb
sahf
sub
js
sub
push
adcb
xor
jne
jmp
arpl
pop
lahf
adc
lods
jnp
sti
jne
sub
mov
in
fbstp
mov
subb
jae
lds
sahf
shlb
test
or
jne
jmp
rorl
jne
push
popa
enter
in
jne
lods
fldcw
xchg
add
jae
mov
sahf
int
jne
and
push
jnp
jae
jbe
not
sub
pop
jbe
dec
mov
mov
cmpsb
and
sub
add
push
stos
clc
and
outsl
pop
pusha
adc
lahf
adc
ret
mov
jmp
mov
adc
and
xor
mov
pop
jne
leave
dec
and
mov
repz
or
rorl
bound
test
mov
dec
imul
sahf
testb
jne
sub
stos
wbinvd
popa
jb
fcomps
add
push
in
jne
sbb
iret
push
xchg
mov
or
cmp
cmc
and
cmp
xchg
fildll
xor
jge
xlat
fdiv
cwtl
cs
sbb
inc
and
and
mov
sub
sbb
and
adc
jg
pop
xchg
jb
lods
xlat
jae
cmp
push
rorb
fisttpll
enter
mov
lret
mov
int3
leave
pop
das
dec
dec
loop
dec
int
sti
push
or
jne
inc
add
loope
aas
icebp
jne
fs
pusha
sub
jne
iret
mov
stos
and
lahf
ret
dec
inc
xor
sub
pop
insb
mov
shll
xor
jo
fwait
xorb
mov
rclb
mov
or
pop
jne
lcall
jne
dec
adc
xor
cmpsb
les
add
call
aam
mov
insb
inc
jbe
sub
push
sbb
mov
pop
test
push
loopne
cltd
test
ret
sbb
test
cmp
pop
jp
addr16
push
jne
push
jle
mov
jae
jp
dec
ds
andb
sub
shl
fwait
jge
and
leave
out
clc
fbstp
addr16
lahf
sub
adc
rcl
into
mov
adc
cld
cmp
mov
push
pushf
xchg
fidivrs
sbb
xor
sub
or
cltd
jp
xchg
mov
xchg
mov
or
jb
popa
aad
mov
cld
jne
sbb
lret
inc
and
mov
push
cmpsl
das
dec
jne
mov
xchg
in
dec
out
mov
notl
adc
cmp
or
push
jbe
mov
ljmp
add
ret
cs
insl
es
pop
jbe
sub
lods
add
push
mov
fstps
call
dec
insb
xchg
mov
cmc
cli
inc
lods
loopne
and
shll
push
and
aam
nop
push
mov
and
mov
scas
out
jmp
fwait
and
ja
sub
and
insl
nop
aad
jne
in
sub
addb
sub
push
xor
loope
mov
imul
jge
pop
mov
jbe
xor
test
stos
add
fnstsw
lea
sbb
jne
mov
mov
aas
and
sbb
pusha
add
fists
enter
mov
out
sbb
addl
aam
sbb
pop
adcb
lret
dec
outsb
jne
shll
lret
cmpsb
adc
mov
adc
in
push
dec
cmpsb
scas
and
inc
jmp
push
mull
xchg
push
sbb
jno
dec
adc
mov
pop
xchg
fsubrs
cmp
sbb
lret
mov
xchg
mov
mov
out
xlat
or
adcb
mov
cmpsl
cld
jne
and
xor
sub
movsb
jne
loopne
mov
adc
jne
cld
jg
mov
std
lcall
jne
add
sbb
jne
insb
fnstcw
ds
jmp
jne
sbb
lods
jae
and
add
into
pop
stos
mov
inc
ds
xor
inc
jne
jae
or
dec
sub
aaa
test
pop
ret
mov
sub
or
shlb
xchg
xchg
movsb
and
pop
mov
sub
push
jne
ds
inc
out
xchg
or
mov
dec
pop
mov
xchg
fwait
cmp
jne
dec
pusha
cmpsl
and
jns
jge
jb
dec
shl
ljmp
xchg
data16
pop
push
or
and
push
scas
test
sbb
pop
subb
jne
mov
sbb
add
add
cmp
test
fdivs
rorl
xchg
lret
lock
test
mov
dec
mov
in
movsb
sti
fsubp
lret
mov
out
inc
adc
out
arpl
and
fwait
ror
mov
mov
call
add
notb
mov
mov
and
dec
cld
data16
jne
das
nop
pop
sbb
cmp
push
push
clc
cmp
jne
imul
jge
ja
loop
std
out
xchg
jbe
dec
sbb
cmp
cmc
jae
js
xchg
addl
stc
mov
lods
cmp
mov
lds
push
popa
jae
sbb
mov
push
push
push
fisubs
jne
fcmovne
inc
lret
pushf
imul
ja
js
int3
loopne
mov
pusha
pop
push
pop
lcall
mov
push
stos
hlt
and
dec
fisttpl
insl
mov
test
jae
jnp
daa
je
jbe
pop
cwtl
sbb
add
and
inc
fsubp
sub
adc
sub
jge
cmp
and
pushf
and
mov
pop
and
xchg
rcr
mov
cmpsl
mov
jbe
rorl
sub
adc
xchg
inc
sahf
cwtl
and
jecxz
pop
in
nop
fcomi
push
mov
inc
pop
test
add
jle
jne
into
clc
mov
or
jae
adc
enter
push
dec
aaa
insl
jmp
and
sub
mov
jo
aam
xchg
enter
loopne
sub
dec
fwait
jne
inc
lods
pop
or
cli
shl
rolb
fdivl
and
addb
jp
xchg
jae
sbb
cs
rcl
mov
jne
mov
add
fnstsw
sbb
jne
mov
jecxz
jne
cmp
and
lcall
dec
or
add
mov
movsl
xor
and
pop
jne
dec
jmp
inc
inc
inc
insl
dec
lds
or
jne
cltd
test
pop
and
xchg
dec
jne
loopne
jg
add
xchg
xchg
stos
sahf
sbb
rorb
mov
add
push
nop
sub
mov
sub
pop
jne
xchg
stc
add
push
jne
adc
popf
fstl
jne
popa
data16
aas
repz
in
mov
test
cmpsb
jne
loopne
fbld
sbb
cs
sub
fimull
xor
in
addl
jne
jmp
pop
test
jecxz
ljmp
imul
test
cmp
fstpt
daa
in
xchg
jne
sbb
test
cmp
xchg
fdivrs
and
out
jae
inc
dec
mov
adc
push
mov
jne
push
cs
jno
jmp
cmc
in
lock
cwtl
ret
stos
dec
xchg
jne
mov
adc
jle
dec
pop
dec
push
les
mov
xor
fdivrl
imulb
mov
test
lock
pop
andb
inc
cli
fiadds
mov
mov
push
xchg
ja
fisttpl
insl
bswap
mul
push
dec
push
adc
push
ss
add
pop
push
push
call
push
lahf
dec
xchg
pop
enter
movsl
fisttpl
sub
push
pop
jne
lcall
xchg
movsb
or
notb
and
jae
mov
fdiv
sarb
xchg
not
inc
jno
fistpl
cmp
lcall
fwait
jne,pt
mov
push
loopne
pop
xorb
test
inc
jne
add
test
ja
outsb
stc
or
mov
xchg
inc
mov
ret
push
add
jne
adc
sarb
bound
mov
lahf
sub
jne
xor
adc
xchg
mov
lret
push
jne
push
adc
jno
in
lahf
aaa
sub
dec
xor
lea
sub
incb
ficoml
ja
pop
jmp
sbbl
ret
mov
jb
popa
pop
inc
mov
imul
leave
shlb
cld
pusha
inc
push
and
xor
and
inc
jne
xor
dec
cmp
xor
repz
cwtl
jae
or
popf
bound
cmp
clc
cmp
push
adc
imulb
insl
mov
push
or
rcrb
and
jne
mov
shll
ret
fisttpll
jne
movsl
push
lret
aam
inc
pop
stos
inc
jne
xchg
lahf
push
xor
mov
imul
add
mov
mov
dec
inc
lea
lds
das
add
xchg
dec
and
ljmp
or
dec
sbb
xchg
and
xor
add
shll
xchg
lret
mov
outsl
lret
pop
add
dec
nop
ss
sbbl
aas
jl
xchg
aam
movsb
mov
cwtl
cmp
mov
mov
or
jne
xchg
into
push
jmp
movsb
and
popf
xchg
jne
dec
mov
mov
inc
jne
xchg
pop
xlat
shlb
jne
push
cmp
jns
lcall
aad
xchg
decl
ss
in
pop
jne
fwait
js
or
cmp
outsl
or
mov
iret
ss
add
xor
sti
sub
into
jne
lods
and
xchg
xchg
xchg
cmp
mov
jne
pop
cmpsb
leave
dec
imul
fwait
jbe
sbb
in
jne
daa
imul
mov
insb
push
pop
or
divl
xchg
out
lods
jns
inc
xchg
std
push
fistps
jmp
ja
pop
fwait
sarb
into
dec
inc
mov
imul
jbe
loop
cltd
jne
and
out
fwait
jp
mov
aas
ffree
ficoms
jne
fildl
cld
jecxz
or
loopne
push
movsl
add
push
sti
fwait
stos
jne
push
or
fsubr
ret
scas
push
divb
fiadds
leave
inc
pop
mov
mov
jne
mov
sahf
les
daa
push
xor
xor
int
fnsave
or
pop
subl
jne
pop
mov
push
insl
jle
cmp
pop
outsl
jge
mov
cmp
inc
insb
mov
add
mov
sub
xchg
addr16
test
cmp
xchg
jmp
xchg
and
sbb
push
dec
jne
jl
add
out
out
inc
jae
inc
or
rorl
mov
fnsave
jo
push
dec
sbb
xchg
sbb
add
cwtl
in
or
iret
sarl
popa
les
and
jb
sub
loope
negb
addr16
push
mov
jbe
insl
pusha
pop
add
data16
in
fiaddl
lret
jg
sbb
dec
xlat
subl
push
jbe
leave
arpl
push
jno
fnstcw
loope
add
repnz
jns
xlat
popf
mov
sahf
loopne
inc
jno
inc
imull
pusha
scas
adc
into
sub
xorb
jne
mov
mov
pop
fsub
mov
rorl
dec
jne
in
imul
pop
dec
inc
das
cs
sub
ds
mov
pop
stc
jne
xchg
jge
add
sub
jne
jl
shll
mov
push
dec
mov
loope
jne
cmp
repz
and
push
cmp
fnsave
pop
notb
inc
push
shlb
clc
sbb
xchg
jne
lret
sti
insl
lods
xlat
jo
ja
pusha
inc
stos
lock
xor
lea
xorb
psrlq
cmp
rcrl
jne
dec
xlat
xchg
leave
sub
das
cmp
ljmp
cli
ret
cwtl
xchg
jne
mov
mov
jne
xchg
lock
out
add
sub
jno
xlat
hlt
test
push
jo
addr16
test
negl
adc
call
dec
and
sbb
jne
adc
sub
jne
add
mov
cli
mov
outsl
into
mov
iret
fdivrl
xlat
scas
push
movsb
idivb
aas
cmp
es
jp
adcl
pop
jo
jae
mov
ret
or
xchg
jae
imul
fdivp
push
shlb
xchg
je
notb
in
mov
shlb
push
jne
adc
addl
push
jae
push
in
dec
jne
adc
bound
pop
lcall
mov
fcoml
jo
out
add
std
jbe
rcl
jae
ja
mov
lock
mov
xchg
cmc
add
repz
jb
fmul
push
mov
or
ja
sub
jecxz
xorb
mov
jo
daa
push
jae
sub
dec
sahf
test
jbe
jne
orb
and
inc
nop
add
dec
cmp
pop
xchg
sbbb
pop
pushf
xchg
fidivl
mov
dec
popl
mov
out
mov
imulb
stos
call
xor
jne
outsb
cmp
mov
cmpsl
dec
notb
mov
addr16
jbe
inc
stos
add
int3
xor
addb
xlat
fwait
inc
or
loopne
test
scas
sub
gs
xchg
sahf
xchg
sub
popf
mov
ljmp
mov
or
jno
xor
notb
ret
fbstp
add
sub
addr16
xor
fcoml
int
xchg
mov
insl
pop
jne
andb
cmp
add
stc
or
lahf
testl
dec
inc
negb
lret
mov
cli
sub
neg
mov
mov
adc
out
and
adc
fnstcw
jne
push
sahf
shll
mov
lret
cwtl
call
pop
xchg
outsl
jne
sarb
movsb
data16
je
mov
xchg
outsl
aad
cld
pop
dec
jge
dec
aaa
add
inc
mov
mov
jp
mov
inc
and
jne
jle
cs
or
lret
push
push
les
pusha
mov
jns
cmp
andl
out
sub
imul
ret
push
inc
in
xor
rorb
dec
adc
jne
adc
imul
loopne
nop
jbe
mov
adc
jmp
scas
out
jg
sbb
pop
jne
inc
cmp
mov
xchg
outsl
es
test
js
insl
pop
sbb
mov
and
aaa
and
dec
sbb
das
pop
add
into
inc
stos
jno
pop
outsl
push
add
out
mov
popf
adc
sbb
inc
xchg
push
test
inc
mov
pop
sahf
je
xlat
ja
ja
lahf
pop
mov
scas
jmp
push
sub
add
push
inc
jne
sub
xor
gs
mov
out
inc
div
push
or
je
ja
push
pop
pusha
aaa
ss
xor
icebp
sub
lcall
dec
and
loop
xor
jne
cmp
xchg
pop
push
add
imul
mov
stc
scas
inc
je
sbb
pop
sub
mov
outsb
pusha
push
enter
mov
inc
pop
insl
movsl
push
xchg
dec
outsl
mov
mov
push
pop
mov
jecxz
jne
rclb
cmp
sbb
int3
int3
xor
cltd
cmp
pop
ret
into
adc
inc
cmp
and
inc
cmp
outsb
jne
adc
stos
push
xor
mov
ja
sti
push
lcall
jae
aaa
xchg
or
jmp
xchg
lret
push
mov
sub
mov
imul
ret
inc
add
clc
jne
ficoml
fdivl
lcall
sub
jne
in
cs
jne
ret
jno
inc
add
jne
jnp
xor
jne
and
or
cwtl
int
pop
es
outsl
lds
data16
cmp
mov
xchg
adc
mov
mov
add
jne
jae
cmpb
mov
adc
add
mov
outsb
push
mov
dec
divb
rorb
lock
jbe
jl
and
jne
icebp
fidivrs
mov
mov
mov
jne
bound
mov
jne
mov
xor
repnz
jne
cld
aas
imul
push
mov
dec
pop
pushf
shll
or
inc
inc
push
jns
ds
lret
push
xchg
jo
shll
push
in
xor
popf
inc
stos
cmp
jne
ret
fists
jne
rcrl
mov
xchg
xchg
bound
imul
and
std
push
aad
lock
and
inc
pop
das
mov
dec
add
jl
and
movsl
hlt
mov
push
add
jo
dec
push
jno
and
sahf
sbb
xchg
or
mov
testb
push
sbb
scas
jns
mov
sti
push
jae
or
imul
push
stc
sahf
pusha
idivb
daa
or
cmp
xchg
aaa
jae
movsb
mov
xchg
faddp
jne
data16
dec
mov
addr16
pop
jne
leave
out
mov
jne
cmp
lods
fcmovnbe
aaa
push
cmp
mov
in
outsl
sbb
call
fldt
and
pop
test
out
pop
ja
add
lahf
fs
das
loopne
or
fbld
fstpl
negb
xchg
push
jbe
push
xchg
lds
mov
jae
leave
int3
xor
mov
outsb
scas
out
and
imulb
iret
ret
jne
jb
pop
xlat
add
in
pop
add
ja
mov
icebp
jecxz
daa
cmc
rolb
jp
sbbl
jne
test
pop
into
add
dec
imul
inc
jmp
sub
cmp
pop
mov
test
aad
mov
xor
stos
ficomps
inc
out
and
pop
xor
xorb
sub
jne
add
sub
daa
enter
data16
lods
insb
iret
jne
xchg
cltd
mov
jne
loopne
add
mov
in
loop
and
pop
jne
dec
inc
add
pushl
pop
imul
mov
ja
xchg
inc
ret
ret
jge
push
jae
xchg
adc
psubsw
push
out
dec
xchg
dec
inc
jns
daa
fsubrl
push
xor
xor
bnd
add
roll
and
imul
int
es
loop
mov
pop
lahf
je
andl
jnp
pop
mov
or
sbb
xchg
cmp
mov
cmp
lret
mov
dec
cwtl
test
and
aad
mov
jne
divb
inc
nop
cmp
sub
cs
mov
gs
popa
push
lods
adc
fcmove
jg
scas
jp
xor
sub
cmpsl
jbe
or
testl
mov
mov
sub
add
iret
jecxz
xchg
sbb
arpl
cmpsb
popa
or
sub
hlt
inc
dec
aam
imul
aaa
hlt
out
insb
mov
lret
mov
sbb
imul
mov
jne
xor
fisttpll
loopne
test
push
inc
daa
dec
xor
fbstp
stos
lods
int3
or
outsl
leave
rolb
mov
dec
not
mov
mov
rol
jg
andb
mov
shlb
call
inc
mov
xchg
jae
sbb
mov
and
lret
addb
lds
jns
imul
xor
cwtl
mov
repz
and
loopne
mov
in
std
mov
cmc
fldcw
jns
int3
pop
sub
mov
loopne
xor
adc
js
and
ss
jne
ljmp
jne
mov
mov
add
loope
cli
mov
jns
jne
mov
push
jne
adc
lret
dec
and
sub
cmp
xor
shl
jo
mov
jne
ret
aad
jne
fdivl
mov
js
sar
mov
jne
fdivr
loopne
aad
mov
inc
fidivrl
sbb
pop
sbb
adc
into
repz
jne
test
push
add
jne
ficoml
adc
cmp
movsb
mov
mov
je
shlb
cmp
daa
inc
imul
cmpsb
cmp
push
jb
inc
sub
mov
fldl
addr16
ror
and
jne
sub
cmp
jne
jbe
cli
rcrb
dec
shl
jmp
add
lcall
adc
sbb
push
mov
add
dec
aam
in
daa
orl
mov
fcmovu
sbb
xlat
jne
enter
js
jne
ja
iret
adc
mov
xchg
fldt
and
xchg
jo
push
pushl
in
ret
sti
mov
add
xchg
and
mov
push
inc
pop
fs
popf
sbb
xchg
adc
aam
lock
test
dec
inc
jno
push
mov
test
or
pop
outsl
arpl
push
sub
push
enter
imul
jne
lahf
pop
pusha
fwait
scas
and
jp
mov
add
test
mov
roll
or
iret
sbb
mov
jne
and
sub
out
jne
mov
sub
jne,pn
ficompl
andb
ljmp
test
push
inc
loopne
in
and
imul
lahf
lods
shll
push
js
jmp
notb
mov
pop
jbe
mov
mov
jp
inc
adc
fistpl
jne
adc
ja
xchg
add
inc
ds
int
or
inc
mov
ss
in
and
lock
adc
adc
hlt
cmc
lahf
daa
aaa
int3
fbstp
xchg
movsb
mov
or
in
mov
icebp
fdivs
push
jne
pop
xchg
or
popf
xchg
jne
cs
ficomps
pop
jne
repz
test
jl
jne
xchg
addl
ret
loope
push
jae
cmp
jp
and
imul
mov
jae
lock
imul
lea
rclb
or
mov
jbe
stos
mov
and
xchg
sub
ret
insb
out
adc
ljmp
mov
inc
mov
pop
daa
mov
out
pushf
loopnew
xchg
pop
jne
jp
or
movsb
roll
inc
cmc
aad
scas
dec
sahf
sub
es
or
mov
mov
sub
stos
daa
jne
push
push
jb
or
and
mov
cmpsb
ja
aaa
inc
lahf
jno
jbe
cli
rcll
push
out
pop
jne
mov
jne
js
pop
loop
xchg
into
imul
fidivl
sbb
out
push
sbbl
xor
push
fsubs
aad
es
lods
cld
add
mov
cmpsl
or
inc
jne
mov
mov
cld
fidivrs
add
jbe
jl
mov
mov
cmp
shrl
sbb
idiv
jge
push
enter
mov
lcall
jne
xchg
pop
cli
mov
inc
mov
bound
pop
xor
and
pop
mov
jmp
jne
leave
pxor
call
push
add
sub
add
jge
mov
fnsave
out
and
and
negb
xchg
add
or
imul
add
adc
shl
xchg
in
int
jne
mov
mov
insl
jae
cli
stos
rol
and
loope
push
ljmp
add
jg
es
and
jns
dec
jp
mov
mov
jne
dec
mov
lahf
enter
and
fdivr
cs
insl
jne
pop
jg
adc
mov
adc
cmc
clc
lock
loop
mov
pop
cmp
mov
int
jne,pn
adc
dec
fisubs
sub
xor
ret
ja
mov
negb
mov
pop
ja
lret
dec
push
dec
iret
ss
ss
loop
shl
xchg
in
loope
xor
jne
add
jno
stos
outsb
jne
mov
and
inc
mov
aas
ficoms
cltd
in
jne
dec
pushf
push
lods
hlt
dec
pusha
outsl
and
dec
test
fiadds
or
shl
imul
es
xchg
cli
cmp
mov
in
dec
jne
adc
or
jbe
repnz
ficomps
ljmp
jne
rorl
mov
inc
jne
stos
in
mov
mov
push
imul
and
lcall
dec
stos
mov
in
jl
fiaddl
flds
imul
es
pushf
push
lret
jne
out
mov
jnp
and
pop
int3
cmpsb
adc
sbb
mov
jg
sbb
sub
data16
call
loopne
cmp
mov
sub
jo
sbb
or
jne
lretw
mov
xchg
iret
mov
fs
aas
lcall
jne
mov
loope
sbb
jge
in
repz
in
cwtl
push
movsl
mov
jne
pop
cltd
loopne
cmp
jne
jl
and
insl
mov
mov
dec
gs
repz
mov
nop
push
mov
cmp
and
leave
xor
pop
mov
sub
mov
push
pusha
xchg
loop
sub
adc
pop
mov
push
shrb
daa
jo
insb
sbb
push
dec
mov
rcrb
in
pop
test
mov
repnz
fcoml
pop
and
xor
add
in
fisubrl
lret
rorb
jnp
popa
lods
jne
push
cmp
xchg
mov
xor
das
xchg
jne
ds
inc
cltd
mov
repz
or
jne
in
ja
jae
je
xor
push
mov
sub
jno
sub
scas
lret
shl
imul
call
xchg
or
and
mov
lds
shll
pop
rcr
fcmovbe
jne
inc
cmp
dec
add
xchg
insb
in
and
cmp
in
inc
enter
jmp
je
repz
sarl
outsb
xchg
mov
xor
xlat
cwtl
pop
popa
aad
sub
mov
dec
lcall
add
insl
jne
mov
lock
jne
dec
js
ss
pushf
jne
xchg
mov
sub
nop
mov
push
lods
pop
mov
rcll
in
pusha
leave
pushf
jns
inc
jne
dec
aas
xor
jecxz
mov
in
dec
or
pushl
icebp
jmp
adc
xor
leave
pop
lcall
sub
adc
int3
push
std
cmpsb
scas
stc
jne
adc
push
sbb
ja
mov
sti
outsl
dec
mov
lock
mov
mov
jne
xlat
jle
aam
iret
add
testl
sub
mov
loopne
jae
xor
push
cmp
or
ljmp
xchg
lret
xor
ds
or
jge
shl
mov
cmp
imul
xor
fisttpll
nop
clc
and
outsl
inc
movsb
and
addr16
add
jne
xchg
push
mov
jecxz
mov
pop
shlb
and
int3
jae
sub
ljmp
cmpsb
xchg
sarb
mov
mov
mov
arpl
cmpsb
fmull
mov
pusha
push
push
or
arpl
adc
std
mov
stc
ret
loopne
add
scas
imul
dec
mov
mov
dec
iret
popf
and
das
fisubrs
or
and
je
ret
arpl
mov
hlt
xchg
mov
icebp
scas
cwtl
jle
sub
jb
call
adc
out
fbstp
jne
dec
jl
jp
fcmovne
test
mov
pop
jmp
xchg
fsts
ficoms
js
jae
dec
dec
push
pop
insb
pop
xchg
ljmp
ret
jne
add
mov
mov
sahf
mov
adc
xchg
outsl
and
not
sub
addr16
daa
jne
cli
clc
sbb
iret
fwait
mov
ret
lret
xlat
ja
fnstsw
aad
cltd
xor
and
ljmp
test
sub
and
push
cmp
movsl
sub
out
jne
add
fsub
pop
pop
ss
or
xchg
in
dec
push
fs
jecxz
pslld
lret
push
loope
push
push
ret
mov
jne
inc
ljmp
push
inc
dec
andb
fdivl
das
shrb
inc
addr16
loope,pn
mov
mov
sbb
out
jne
add
bound
jnp
inc
jbe
in
test
mov
push
fwait
xchg
je
jne
jg
shlb
pop
and
mov
sbb
loopne
mov
mov
imul
cs
cwtl
js
pop
jne
xchg
pushf
aam
jne
call
loopne
jne
fcmove
push
mov
pop
mov
jns
jne
call
rcl
pop
or
das
mulb
sbb
outsb
in
int3
jne
fmull
pop
mov
lahf
cmp
loope
xchg
daa
or
sbb
dec
fnstenv
cmc
push
repnz
inc
scas
xor
mov
jnp
clc
or
mov
in
js
sub
push
arpl
jne
clc
push
cmp
outsl
mov
and
add
push
cwtl
xlat
or
sub
add
or
mov
push
xchg
cli
jne
xor
dec
popf
cmp
imul
bound
jp
cmpsb
outsb
pop
and
xchg
pop
sbb
ss
cs
mov
in
lahf
mov
jbe
cwtl
jl
popf
dec
in
dec
scas
push
test
ja
mov
loopne
push
push
add
ret
stos
jae
lret
pop
cmp
or
jne
cwtl
or
jae
push
movsb
push
pop
push
out
bound
das
aam
popf
push
xchg
xchg
jne
push
addb
inc
fldenv
mov
push
sub
lret
imul
jne
fcmovbe
or
pop
das
sbb
arpl
cmp
icebp
jp
pop
add
jmp
rep
push
enter
out
dec
in
ret
sub
pop
mov
jecxz
cmp
cmpsb
jne
and
into
sbb
or
loopne
xor
lcall
jbe
add
push
je
ret
jne
jns
and
imul
dec
aaa
sbb
xchg
imul
decl
mov
cld
mov
leave
mov
push
mov
mov
sbb
xchg
shl
hlt
cmp
jo
or
jne
hlt
scas
clc
xor
shlb
divb
leave
jne
jb
sbb
xchg
sub
outsb
hlt
adc
jae
mov
xchg
push
jae
ljmp
sbb
mov
dec
jne
mov
mov
int3
sarl
xor
aad
cmpsl
mov
mov
sbb
lret
stos
push
mov
xlat
jne
sub
cwtl
aas
jne
fidivrs
push
shrb
ja
xor
mov
in
ret
add
mov
mov
das
shr
pop
ret
insl
mov
jg
mov
adc
aaa
mov
loop
shrl
fldt
jnp
jbe
mov
adc
push
aam
pop
hlt
addl
insl
push
loop
jne
clc
stos
cmc
and
lret
pop
cmpsb
iret
ljmp
jae
lods
cmp
fisttps
mov
call
int3
pop
push
cltd
mov
inc
les
jne
xchg
pop
out
mov
out
jne
jno
inc
pusha
movsb
push
nop
pop
jg
mov
ja
ret
pop
test
sub
loopne
jne
scas
pop
cltd
aam
or
add
or
xchg
adc
das
jne
push
clc
scas
mov
mov
jae
or
sbb
sbb
jne
pop
test
jne
call
jns
jae
ljmp
inc
cmp
insl
mov
aaa
ret
sbb
cwtl
jne
pop
stos
imul
ds
sti
pop
inc
jns
lods
nop
or
jne
enter
inc
insb
pop
outsl
add
mov
sbb
adc
lahf
xchg
aaa
sbb
or
jne
ljmp
jne
loopne
cmp
push
fdiv
inc
rorl
xchg
std
testl
call
sbb
sub
das
cmp
arpl
fwait
xchg
sub
jne
dec
sub
pop
or
xchg
jno
sub
fs
cmpsb
inc
jne
pusha
int
pop
sbbl
stc
push
pop
aad
scas
push
test
fstpt
xchg
jne
movsb
lods
paddq
fdivrl
adc
ja
sbb
loopne
cld
fsts
stc
in
leave
and
mov
mov
inc
loop
inc
outsl
mov
mov
mov
jne
nop
push
addr16
jne
jg
lcall
xchg
aaa
es
inc
mov
cmpsl
ds
xor
sub
and
hlt
xchg
mov
outsl
adcl
xchg
xlat
add
fs
data16
sbb
mov
add
xchg
mov
in
dec
icebp
jne
ret
leave
lea
shl
pop
inc
pop
cmpsb
mov
popf
repnz
sbb
add
inc
and
push
inc
adc
faddl
in
add
iret
pop
cmp
repnz
mov
mov
aaa
sub
jne
cmp
sahf
jbe
jne
cmpsl
mov
stos
push
lret
pusha
orl
sbb
testb
cmp
je
nop
mov
in
dec
sub
jne
into
dec
out
jae
cmp
fistl
inc
jbe
das
mov
xchg
lret
fnstenv
stc
cmp
inc
xchg
loop
ljmp
jne
push
decb
jg
sub
shll
sbb
mov
push
cmpsb
or
cwtl
mov
jne
sbb
dec
cltd
sti
xchg
jne
in
cs
push
test
sbb
pop
stc
pop
jno
xchg
cmp
ffreep
mov
and
or
jne
push
addr16
push
jno
xor
ss
divb
cmpsl
pcmpeqw
inc
pop
jmp
les
add
shll
shlb
inc
push
lret
sub
jl
cmp
jne
pop
in
fst
clc
add
jne
xchg
rclb
ficomps
jg
and
jne
jns
movsl
fdivs
aaa
inc
out
gs
in
ja
idiv
orb
dec
or
xchg
pop
push
jne
add
dec
jne
in
ret
loopne
jae
inc
stc
dec
lea
scas
dec
pop
daa
mov
or
fwait
inc
mov
mov
es
scas
sbb
sub
inc
jl
ja
jb
out
ss
in
jne
fists
sub
div
or
xor
jmp
jo
leave
call
or
je
dec
mov
xchg
and
and
lea
jne
int3
jmp
dec
jne
add
cwtl
jae
sahf
add
lret
push
sbb
fisttps
xchg
xchg
push
xchg
cmp
mov
jb
shlb
pop
jne
mov
cltd
fs
xchg
jmp
js
sub
push
shll
mov
call
les
mov
imul
mov
mov
test
cmpsb
int3
jbe
out
jge
jno
test
ret
pop
pop
out
jb
fldenv
pop
jne
pop
xchg
hlt
leave
outsl
in
push
jne
or
mov
mov
pop
jne
mov
jno
inc
ja
mov
push
gs
push
add
sbb
sbb
imul
test
push
sub
or
cmp
insb
test
xor
and
xchg
mov
js
xchg
mov
cmp
pop
cmp
repnz
popa
mov
js
cmc
xchg
mov
and
in
cs
mov
iret
outsl
sbb
sub
notl
inc
in
movsl
jne
mov
in
push
jg
in
je
mov
jne
sbb
movsb
mov
mov
or
xchg
insl
ret
jne
insb
sub
cmpsb
jne
inc
out
mov
fbld
imul
das
arpl
pop
outsl
cs
inc
push
jnp
adc
inc
and
xchg
dec
ja
jne
stos
pop
mov
jne
cmp
fldcw
jnp
add
pop
cmp
mov
sbb
test
inc
and
mov
push
jne
fcmovnbe
mov
jne
add
adc
mov
or
adc
mov
xorl
and
jmp
mov
push
outsb
cli
add
add
mov
or
mov
fcomps
lods
jbe
data16
mov
xchg
jae
sbb
adc
pop
ret
outsb
insl
push
jbe
adc
lahf
pop
mov
sub
out
insl
sub
dec
mov
xlat
jne
fcmovne
and
cld
pop
xor
outsb
mov
pop
jne
jle
push
int3
scas
xchg
dec
jne
mov
dec
or
mov
cmpsb
jne
dec
adc
sbbl
sbb
lea
aam
push
lds
pop
mov
jp
adc
jne
inc
add
mov
mov
jne
addr16
xchg
jne
sub
dec
sbbb
outsl
int3
mov
xor
push
popf
jne
in
jp
add
xor
loopne
cli
sub
dec
push
mov
ret
repz
adc
dec
aam
xor
daa
int3
jg
cmpsl
jp
mov
adc
mov
stos
and
loop
add
push
jne
push
jo
dec
mov
daa
jne
lret
gs
xchg
pop
getsec
shlb
sbb
pusha
pop
out
ja
imul
adc
push
clc
jmp
jnp
jne
arpl
nop
and
inc
xor
xorb
fnstcw
jne
pop
add
lahf
pop
xchg
jne
lock
pop
imul
lret
ret
add
ret
mov
mov
jae
fsubrp
pop
dec
dec
pop
insl
inc
rorb
insb
sub
cmpsl
pop
mov
fsubp
mov
xchg
add
jno
sub
push
adc
cmp
lods
repnz
sbb
cmpb
xor
jne
in
cmpsl
pop
lcall
inc
cmp
sahf
jne
xchg
rcr
add
ret
stc
sbb
addr16
divb
inc
insl
movsb
ret
mov
pop
fadds
jae
rcrb
and
cmp
pop
xor
shl
jne
xor
jecxz
stos
je
fbld
sbb
leave
andl
cmp
cmp
jne
fisubl
popf
jne
xor
lret
out
mov
hlt
outsl
cltd
lods
subb
xor
sarl
imul
fdiv
xchg
int3
jno
in
out
loopne
mov
jl
jne
mov
inc
jne
and
iret
inc
xchg
pop
jne
shll
pusha
adc
jne
stc
mov
inc
nop
cli
push
and
pop
xorl
cld
scas
inc
xor
sbb
mov
adc
cmp
push
or
repnz
pushf
pop
movsb
sub
lock
jmp
shlb
dec
push
inc
jno
jne
lea
add
negb
inc
loop
mov
fwait
out
cltd
int3
sbb
scas
mov
cmp
adc
imul
push
loope
mov
mov
es
jne
mov
xor
fwait
mov
fcoml
mov
lock
pop
inc
mov
jne
outsl
fstpl
out
push
jae
sub
dec
push
or
bound
lahf
push
sub
into
or
int3
jne
cld
sbb
aam
jmp
push
xor
xchg
incb
sub
dec
cmp
je
pop
mov
int3
mov
mov
loopne
xchg
jp
jae
stos
add
jnp
mov
setne
mov
outsl
xchg
mov
push
fldcw
test
in
outsl
jbe
movb
popa
jae
icebp
jbe
test
mov
adc
jge
int
bound
jae
xor
push
xchg
lret
cmp
mov
mov
inc
stc
pop
sbb
adc
stc
js
mov
cld
cmp
negb
jno
insl
sbbl
movl
rcll
sbb
xchg
out
xor
call
inc
xchg
jle
call
push
popf
mov
stc
aam
mov
mov
test
jnp
or
test
mov
mov
notb
ds
mov
test
sbb
push
mov
sub
mov
push
loop
push
jge
mov
lea
jnp
cmp
arpl
jbe
jecxz
sbbl
sahf
jae
inc
jge
jns
or
adc
adc
out
mov
in
mov
gs
add
arpl
jae
dec
push
fdivp
fisubs
stc
jne
or
mov
test
mov
jge
jno
xorps
insl
jns
out
adc
pop
push
outsl
push
mov
mov
push
ror
and
dec
mov
dec
or
je
xor
sbb
int3
outsl
jge
push
push
mov
adc
divl
and
orb
mov
loopw
and
dec
outsb
ror
frstor
rorb
mov
in
push
adc
jnp
movl
lods
cmp
mov
mov
orb
jnp
jge
add
sbb
hlt
out
lahf
cltd
mov
push
jae
jge
mov
push
mov
pop
push
insb
xchg
xchg
inc
jnp
es
popf
xor
bound
inc
stc
ja
ja
ja
ja
jge
push
inc
sbb
jae
push
test
test
test
adc
mov
jmp
sbb
cmp
sub
mov
popa
mov
imul
sbb
mov
test
push
pop
stc
inc
enter
outsl
jae
pop
sbb
repnz
test
sub
insl
ja
addr16
dec
push
test
mov
scas
mov
sbb
addl
out
jae
push
je
mov
pop
jno
add
lcall
cmp
jle
out
lds
mov
leave
cs
fdivrs
lock
repnz
in
jbe
idivl
ret
das
dec
daa
clc
jo
sub
mov
cwtl
jp
xor
cmp
mov
in
ja
aad
jge
mov
dec
sub
cmp
xchg
hlt
jo
sbb
icebp
lods
xchg
outsl
mov
push
punpckhdq
jns
jb
add
jp
outsl
loope
jmp
cli
xor
add
les
push
fmul
repnz
sbb
mov
pop
mov
push
sub
cmp
orl
jb
jns
aam
subb
mov
lea
add
pop
push
fcmovne
movsb
jg
cmp
and
jae
jge
cmc
std
cmc
cmp
fidivs
pop
cmpsb
push
dec
ja
mov
jbe
lcall
push
xor
push
mov
sbb
cmpsl
popf
push
rorb
adc
push
sub
cmpsb
mov
scas
push
xchg
lret
aaa
popa
xor
fcoml
das
xchg
lret
filds
cmp
lcall
add
xchg
ja
outsl
push
notb
jbe
outsb
xor
scas
push
xor
mov
or
mov
and
mov
imul
jno,pn
push
out
outsl
pop
lds
je
faddl
xor
outsl
and
push
push
cmpl
pop
jae
and
push
aaa
cli
iret
jp
stc
jg
push
sub
and
mov
cmp
das
and
adc
sbb
or
or
inc
hlt
int3
sbb
jb
mov
les
xchg
stos
test
aad
sub
push
mov
sbb
sbb
lret
jg
fld1
xor
sbb
push
jo
xor
jno
lods
jle
leave
cmp
loopne
testl
in
push
sbb
xchg
jle
mov
jp
mov
aas
repz
adc
lret
push
cs
lock
mov
jge
fistl
sub
insl
push
sbb
xchg
int3
lret
popa
cmp
jg
jl
inc
and
call
and
dec
test
imul
ret
mov
loope
imul
inc
cmp
mov
add
cwtl
gs
pop
dec
lock
mov
aas
push
xor
push
cmp
sbb
pop
int3
and
sbb
stos
loop
xor
inc
dec
push
pop
mov
cmp
test
pop
xor
sbb
inc
mov
cmp
sbb
push
jns
dec
jnp
jp
movsl
and
test
push
pop
out
mov
das
icebp
xor
scas
outsl
das
push
adc
repnz
jge
or
jg
ficoms
cmp
push
inc
push
cmp
pushf
xchg
test
xchg
scas
lret
popa
ja
dec
jmp
das
ss
mov
cmpsl
and
dec
pop
pop
loope
pop
jl
jnp
inc
pop
add
cld
jns
jl
jns
sbb
dec
push
aas
xor
jno
xor
repnz
jp
push
aad
jl
nop
jae
inc
hlt
test
pushf
and
int
sub
add
lock
imul
add
dec
push
movsl
adc
aam
mov
gs
cltd
icebp
jge
pop
and
pop
cmp
scas
lret
sub
subl
andl
mov
jae
dec
sub
sub
xor
test
sub
es
adc
sub
inc
fs
movsb
jnp
stos
jle
xor
mov
repnz
incb
ja
mov
mov
xor
stc
test
sbb
aam
dec
lea
mov
push
push
adc
push
pop
jge
dec
add
sbb
push
mov
aam
push
xchg
xorl
add
and
mov
pop
orb
in
dec
adc
mov
bound
jge
stc
mov
jno
push
ja
mov
sar
ret
outsb
push
shlb
mov
iret
xchg
cmc
arpl
ret
push
ficoms
icebp
jae
jnp
jae
jns
scas
pop
jae
mov
adc
pop
xor
lods
jle
mov
cmpl
xor
jecxz
daa
inc
or
push
stc
mov
jle
push
lods
push
mov
xlat
das
mov
sti
movsl
jecxz
repnz
mov
test
adc
iret
push
sbb
out
jbe
dec
cmp
push
dec
orl
test
int3
cmp
outsl
sub
cmp
daa
jle
mov
push
add
inc
incl
xchg
out
sahf
test
test
scas
cmpsb
lods
repz
icebp
cmp
jae
imul
push
xchg
push
xchg
jno
sub
jge
out
adc
je
cmc
push
test
xchg
sbb
inc
push
xchg
cmp
repnz
adc
push
or
sahf
push
cli
insl
mov
into
xor
cmpsb
ss
outsl
inc
cld
mov
addr16
mov
cmc
xlat
push
jle
sbb
inc
lea
scas
out
xchg
cld
mov
movsl
divb
popf
in
jbe
push
cmc
rcrb
cmc
rcrl
jbe
pop
divb
pop
out
add
cmc
cltd
out
in
rcrb
jne
add
out
xchg
adcb
outsb
jne
out
cs
fs
pop
js
out
movsl
test
jns
insb
inc
loop
add
pushf
push
inc
sbb
push
or
loope
int
pop
iret
pop
std
in
scas
cltd
roll
std
fistl
das
pop
int
cmp
sub
push
fildl
andb
arpl
dec
pushw
std
out
pop
jno
aam
adcb
loope
std
xor
rcrl
xchg
pop
jge
push
std
dec
leave
cld
pop
jnp
add
movsl
enter
mov
jge
cltd
jns
push
push
gs
pop
jle
xchg
and
outsb
xor
das
pop
adc
outsl
jmp
int
out
xchg
mov
inc
adc
jnp
push
push
out
sub
cmp
xor
fwait
cmp
cli
insl
arpl
test
push
rdpmc
stos
xor
push
jno
das
popf
sbbl
jae
outsl
shrb
inc
push
cli
jmp
and
or
pushw
out
push
std
xchg
insl
imul
adc
push
sbb
test
or
jno
dec
sbb
out
data16
jno
push
outsl
xor
pop
inc
pcmpgtd
mov
movsb
adc
aas
jge
popf
stc
leave
out
xlat
mov
push
push
jge
jmp
xchg
test
jge
repz
cmp
and
mov
jo
jnp
lahf
movsl
push
and
sahf
add
stos
dec
jecxz
dec
xchg
inc
shll
cmp
pop
pushf
push
notb
testl
icebp
push
pop
rcll
ret
lret
mov
push
lods
push
cmp
negb
scas
ss
arpl
mov
or
popf
push
in
inc
test
mov
cmp
bound
mov
xchg
imul
repnz
xchg
add
popa
rorl
jl
movsb
loopne
sarl
add
sub
dec
adc
sub
push
push
jbe
inc
insl
popa
subl
mov
inc
inc
push
and
mov
dec
dec
lea
in
fnstenv
std
lret
cwtl
test
or
cmp
int
xchg
or
fdivrl
loope
ss
popf
fstpl
aad
fs
xor
sub
int
pop
sbbl
das
scas
mov
jb
sub
cltd
das
dec
push
xchg
jmp
popl
int
sbb
inc
scas
mov
dec
mov
dec
add
cmpsl
pop
xor
xchg
jg
dec
mov
push
sbbl
jg
test
xor
pop
arpl
test
adc
pop
and
jg
xor
das
xchg
in
adc
idivl
pop
mov
xchg
xchg
push
pop
aaa
add
popa
lods
pop
cmp
xor
sub
daa
pop
insl
lea
hlt
sub
adc
mov
cmp
xchg
jno
pop
push
mov
pop
sub
pop
divl
mov
int
test
xor
xor
lds
jno
sub
lret
filds
mov
frstor
jns
dec
std
dec
add
mov
jge
lds
in
es
es
popa
mov
aaa
cmp
imull
test
push
mov
push
and
jb
add
mov
rcl
adc
dec
js
push
jae
sbb
jno
stos
mov
push
dec
and
pop
cmpl
aas
jno
and
inc
jge
cmp
test
xor
dec
and
popf
je
daa
jno
push
repz
icebp
pop
xor
jle
jl
imul
jno
fmuls
fwait
das
icebp
lds
cs
push
push
ds
test
jge
ss
jge
cs
je
test
cs
icebp
push
je
xchg
or
loope
ss
jae
xchg
sbb
insl
or
out
sbb
or
jge
sti
daa
nop
fstpl
push
int
addl
jge
pop
lcall
das
inc
pop
std
cs
push
push
ss
sarl
inc
inc
push
insl
test
sbb
dec
xor
and
push
lea
jae
and
adc
or
mov
xor
pop
icebp
pop
xor
and
push
pop
subl
fidivs
sub
jnp
push
lea
and
sub
in
and
std
sbb
arpl
loope
inc
aad
lcall
pop
sub
leave
scas
adc
mov
fmuls
pop
sbb
mov
adc
scas
popf
cmp
pop
mov
out
sbb
sub
pop
insl
push
xor
adc
dec
mov
xchg
or
or
test
push
data16
jns
scas
shrl
std
push
xor
push
add
jbe
and
inc
cltd
fnstsw
sahf
shll
jge
or
rcl
roll
cltd
push
sub
mov
orl
mov
into
popf
add
sub
adc
sub
jo
pop
inc
popf
sbb
int3
out
insl
sub
imul
adc
aad
int
push
gs
aaa
cmp
decb
jmp
cmp
in
mov
mov
lea
pop
push
test
ffreep
popf
push
popf
push
leave
jnp
lea
popf
xchg
sbb
mov
test
push
outsb
sbb
movsl
outsl
cmp
in
sbb
adc
mov
push
ljmp
std
dec
pop
call
cmp
int
inc
add
lret
push
cmpl
jae
lock
mov
lods
ret
fst
or
jge
scas
std
lret
ffree
jne
sbb
movsl
icebp
cmp
lea
mov
mov
pop
in
push
imul
ss
jmp
aas
daa
xchg
das
bound
in
sub
sbb
push
add
movsl
jle
jo
mov
adc
das
pop
mov
lret
lahf
mov
cmc
xlat
push
repz
hlt
jae
ss
cmp
filds
js
leave
fstpl
and
cmpsb
lods
mov
dec
cmp
jp
xor
shrl
add
imul
inc
dec
ds
add
xchg
inc
dec
aaa
movsl
jbe
inc
push
sti
pop
in
inc
cmpsl
mov
mov
iret
insl
cmp
pop
pop
in
rorl
out
pop
movsl
push
or
add
movsb
inc
inc
xchg
stos
addl
lret
pop
std
cmp
and
ds
inc
cltd
pop
fadds
dec
test
jp
inc
dec
repz
add
int3
mov
adc
cmc
adc
or
xorl
or
test
repnz
push
cmpsb
ret
xchg
sbb
je
xor
stos
scas
jns
cmc
movsl
push
ljmp
xchg
jl
cli
inc
jge
cs
sti
movsb
inc
movsl
pop
jns
xchg
mov
sbb
scas
cmp
xchg
outsl
mov
in
mov
cmp
cmp
pop
insl
insl
sbb
mov
push
or
inc
imul
pop
out
jp
lods
inc
ret
pop
add
jno
push
int
push
insl
mov
jns
sub
scas
shld
std
pop
scas
shlb
adc
jle
lret
cmp
out
into
jg
test
mov
scas
jno
inc
xorl
xor
pop
mov
mov
jne
jge
push
xchg
mov
jge
jp
test
pop
test
add
or
inc
subl
sbb
xchg
sbb
mov
or
push
fistpl
xchg
in
lods
fidivrs
insl
leave
pop
add
imul
cwtl
inc
cmc
adc
pop
ja
pop
andl
cmc
popa
xchg
dec
data16
shrl
mov
or
int
cmp
mov
sbb
sub
adc
insb
outsb
mov
pop
mov
outsb
jns
jge
ds
sub
sub
mov
insl
adc
lock
mov
ss
xchg
pop
dec
in
dec
xchg
pop
aas
test
outsb
es
xchg
add
ds
sbb
xor
push
out
stc
jno
insl
jnp
fldenv
cmp
push
inc
outsl
stos
scas
xor
inc
pop
scas
aas
push
add
add
mov
push
pop
dec
js
ja
ja
sub
adc
mov
scas
js
dec
aad
push
rolb
lds
cmc
add
add
cmpsl
jp
mov
dec
repz
imul
xchg
jae
or
dec
push
mov
and
mov
dec
sahf
jno
sub
lea
adc
popf
aad
insl
mov
sbb
gs
add
cmp
ds
jnp
cmp
push
push
icebp
ss
repnz
dec
stc
xor
in
add
test
inc
loop
insl
jecxz
xchg
jge
cmp
ja
jo
loopne
xor
insl
pop
sbb
add
jecxz
sub
xchg
cmp
add
mov
push
xchg
dec
pop
inc
jns
dec
mov
push
mov
mov
loopne
stos
pop
push
imul
gs
jno
adcb
adc
addb
push
popa
gs
xor
aad
loop
add
ja
out
sbb
cltd
mov
mov
fcmovne
push
rcrb
pop
ret
leave
cld
stos
lods
xchg
and
pop
imul
fstpt
mov
insl
lret
jno
sbb
sub
cmp
push
push
xor
mov
jle
jno
adc
mov
mov
or
push
adc
insl
adcl
sbb
push
push
lea
out
pop
imul
rolb
pmaxsw
and
push
mov
pusha
mov
outsb
pop
cmp
push
cwtl
ds
mov
iret
xor
xchg
dec
cltd
test
adc
jnp
std
icebp
lea
mov
test
push
sub
mov
aad
sbb
jmp
push
sub
mov
mov
sbb
xor
addr16
das
xchg
xor
lret
pop
add
inc
gs
js
aam
std
pop
inc
or
jae
jge
jno
aam
xchg
pop
outsl
pop
adc
jmp
enter
cli
outsl
push
lret
ds
jnp
adc
out
int
leave
and
mov
pop
loopne
test
or
sub
in
or
cld
cmp
mov
mov
xor
sbb
in
adcl
dec
or
orl
jnp
or
and
sbb
movsl
jl
mov
cmp
sbbl
aad
insl
jg
sbb
dec
xor
mov
je
outsl
sti
popa
inc
popf
in
movsl
cmp
cltd
jl
xchg
xchg
insl
mov
and
cltd
mov
fs
shrl
xchg
lea
xchg
imul
sub
imul
test
lds
aas
mov
xor
cmp
vpacksswb
dec
mov
out
mov
push
ss
jg
mov
xchg
xor
jns
adcl
pop
adc
clc
insl
adc
or
outsb
cli
inc
mov
scas
mov
sub
js
stos
xchg
popa
add
scas
andl
add
cmpsl
addr16
mov
dec
inc
sub
loop
aad
mov
pop
cmp
into
repz
push
jns
mov
inc
add
fcoms
adc
mov
xchg
mov
int
addr16
mov
lds
mov
and
clc
push
fst
int
shrl
pop
sti
sbb
cmp
jae
imul
aaa
stc
mov
in
add
out
clc
inc
adc
sbb
insl
mov
rcll
lods
push
adc
icebp
xorb
pop
pop
repnz
mov
fisubrs
xchg
adc
imul
sbb
imul
inc
je
xchg
js
xorl
sub
push
lea
dec
lds
jg
imul
mov
pop
mov
orl
outsb
dec
lcall
mov
pop
dec
xchg
shl
push
mov
sub
sti
pop
adc
dec
icebp
imul
inc
mov
jp
call
jecxz
sti
or
sub
cmp
pop
jge
jge
jecxz
fidivrl
sahf
gs
ss
pop
ds
add
das
inc
push
mov
or
cmpl
jno
jge
int
jo
test
add
jne
lods
xorb
mov
push
outsl
pop
mov
pop
in
pcmpeqw
add
outsb
mov
push
shrl
arpl
mov
xorl
insl
xor
dec
adc
frstor
sub
outsl
mov
pop
stc
aad
mov
imull
aaa
aas
mov
ss
repnz
insb
in
cli
test
jae
mov
cltd
cmp
or
test
jle
sbb
mov
and
dec
xor
andl
lcall
orl
or
pop
sbb
add
add
xor
aaa
mov
mov
outsb
push
outsb
ja
lock
cmp
jno
subl
adc
and
push
jg
and
stc
and
mov
xor
xchg
test
sbb
lock
mov
cmp
cmc
gs
pop
add
pop
push
add
lea
push
pop
dec
pop
add
xchg
or
paddb
push
add
adc
dec
xchg
nop
in
inc
dec
mov
dec
popf
cs
testb
xchg
sahf
imull
jle
cmp
xchg
int
cs
mov
int
sbb
mov
insl
cmpb
jnp
mov
test
pop
sub
mov
stc
sbb
aam
test
push
mov
jnp
pop
movsb
pop
sbb
test
popf
add
lds
push
push
ja
mov
jl
stc
test
xor
cmp
adc
bound
repnz
jbe
xchg
mov
mov
add
es
pop
sub
imul
and
pop
and
push
push
pop
jnp
loop
dec
add
das
xor
push
das
pop
mov
lret
adc
sub
sbb
icebp
lea
out
jns
jnp
and
daa
push
mov
push
imul
jp
lahf
dec
jl
push
test
dec
mov
fwait
movsb
mov
mov
cmp
inc
sbb
add
add
movsl
fwait
xor
addr16
push
sahf
mov
in
or
les
xor
sbb
lea
idivb
inc
shlb
xor
xchg
roll
push
lea
add
in
add
jmp
jge
fs
ja
push
dec
and
shrb
xor
lds
dec
xor
cld
jbe
adc
jmp
inc
mov
xor
mov
inc
cs
shrb
jle
cmc
inc
jle
rcll
dec
mov
loope
inc
xor
cltd
das
sub
push
xchg
xor
adc
dec
jns
cmpsl
mov
mov
repz
sbb
push
fldcw
ds
adc
int
push
lds
rcll
add
dec
xchg
or
dec
es
dec
pop
ljmp
das
adc
dec
rorl
pop
pop
xor
mov
xor
in
icebp
jmp
jmp
das
ss
inc
in
pop
lahf
add
mov
cs
sbb
jle
pop
hlt
xor
cmpl
xor
inc
mov
push
cmp
xor
dec
popa
and
cld
and
out
or
mov
shrl
stc
and
out
lea
icebp
push
jmp
popf
insl
stos
jg
lcall
or
into
cmp
mov
xlat
aaa
add
imul
add
cltd
cs
pusha
jge
sbb
pop
adc
or
sarl
sub
mov
mov
iret
jnp
adcb
cmp
dec
add
test
lret
inc
xor
cltd
adc
rcl
in
xchg
jecxz
sahf
xor
sbb
adcb
and
movsb
popa
xor
inc
adc
imulb
and
xor
push
push
sbb
adc
mov
ret
cmp
inc
addl
mov
cmc
test
mov
js
push
push
lods
insl
movsl
push
imul
mov
mov
das
mov
sub
popf
push
or
cmp
loope
mov
js
mov
dec
int
pop
ds
fs
popl
add
lods
lea
sahf
stc
adc
pop
pop
in
or
mov
jno
mov
popa
jnp
jmp
outsl
and
add
pop
jns
scas
leave
and
popa
cmp
jns
jae
jnp
rolb
push
pop
leave
shrl
push
adc
mov
pop
mov
insl
sub
adc
aaa
inc
dec
xchg
lods
cmp
sbbl
mov
fidivrs
aad
scas
addl
outsb
fwait
psrld
mov
pop
xchg
cmp
test
mov
xchg
cld
insl
das
ds
push
xchg
sub
shl
mov
adc
sub
adc
pop
loope
test
push
xchg
rcll
push
hlt
test
mov
cmp
pop
dec
in
mov
jno
aaa
int
jecxz
sahf
sub
dec
lods
cmp
lods
push
mov
xchg
inc
movsb
push
aas
add
imul
imul
in
insb
mov
loope
and
jno
xchg
adc
scas
fadds
aad
or
or
add
incb
in
cs
popa
and
hlt
push
lods
repnz
pop
stos
mov
iret
add
cmp
mov
mov
inc
daa
dec
push
push
cmp
fnstsw
sub
fs
sbb
fs
in
pop
lahf
mov
iret
fsts
rorb
sub
stc
lods
xor
push
and
pop
jl
mov
adc
or
adc
xor
ret
mov
rorl
jle
add
fiaddl
loop
icebp
mov
out
popf
insl
xchg
lods
insb
into
push
push
fs
and
sub
cmp
aad
test
cmpsl
mov
lods
and
pop
push
pushf
mov
fs
mov
dec
es
or
mov
fwait
cmpsb
cmovbe
mov
push
xchg
jmp
gs
sbb
adc
sbb
push
sbb
je
sub
mov
push
insl
xchg
sbb
mov
inc
xor
into
pop
out
imul
mov
push
popf
mov
pop
jecxz
xor
adc
outsb
add
push
popf
sti
cli
pop
fs
jge
and
fiaddl
lods
add
xor
inc
or
mov
adc
cmc
cmp
shlb
pop
cmp
pop
sarb
pop
test
out
jnp
xchg
cld
add
popa
fists
daa
push
pusha
push
adc
lret
std
and
jnp
add
es
xchg
cmc
loope
pop
insb
sti
push
cmp
add
cmc
mov
orl
sub
aaa
xor
jge
test
rcrb
jb
out
ss
jge
push
loopne
xchg
cmp
mov
test
sub
xor
jno
cmpsl
pop
pop
push
add
dec
lods
fsubrl
cmpl
orl
outsl
xchg
and
dec
aas
mov
les
inc
sbb
dec
pop
add
pop
mov
jecxz
add
es
sub
dec
mov
lret
aas
dec
mov
int
dec
ret
sbb
inc
jecxz
orb
cltd
outsb
outsb
mov
imul
fdivl
fisttps
mov
outsb
push
pop
bound
gs
insl
add
pusha
push
or
ss
add
sbb
test
mov
jg
je
push
and
test
inc
mov
jae
mov
jb
jb
scas
mov
jg
jns
cmpsb
sbb
pushf
jnp
idiv
pop
sbbl
test
sbb
sbb
shll
xor
pop
shrl
gs
jns
test
fiadds
cmpsb
je
test
in
xchg
fwait
arpl
int
test
pop
xchg
inc
lcall
mov
add
adc
jno
pop
fmulp
mov
mov
xchg
xor
leave
in
xor
out
imul
data16
mov
pop
loop
in
push
in
test
pop
pop
and
mov
mov
xor
xor
add
add
mov
jmp
icebp
push
mov
xchg
xchg
sbb
rol
mov
inc
fcoml
dec
mov
sub
xchg
sub
xchg
push
xlat
mov
pop
xor
lods
clc
or
push
jns
cmp
insb
dec
je
jnp
jg
or
mov
add
adc
pop
js
cs
imul
in
push
pop
ret
popa
or
data16
inc
sub
dec
bound
push
xlat
in
cmp
outsb
test
fistpl
shrb
std
add
outsl
lods
push
jno
arpl
stos
bound
repnz
stc
jbe
jmp
psrld
xchg
adc
cmp
xor
sahf
inc
pop
fbstp
stc
push
stc
stc
inc
xorl
cmp
jge
pop
sti
std
dec
add
xor
arpl
in
insb
and
cmp
dec
xchg
dec
pop
inc
cmpb
ret
cmp
jle
jge
aaa
and
adcb
lds
sub
les
xor
insb
insl
movsl
rorl
sbbl
sbb
adc
xor
in
push
xor
add
sahf
mov
rcll
pop
xor
mov
fsts
ljmp
test
fildll
ja
leave
mov
adc
out
sti
ret
fs
lods
and
stos
xchg
sbb
xorl
std
dec
inc
in
or
adc
stos
inc
sbbl
cli
inc
popf
in
popa
int
incb
mov
cmp
in
ss
sbb
jae
or
aaa
popf
lahf
ds
std
shlb
inc
insb
cs
cmp
movsb
mov
pop
xchg
xor
mov
js
rcll
cmp
cmp
cltd
into
insb
cmp
sbb
cmp
mov
shlb
xchg
stos
cmpl
aad
push
pop
pop
add
dec
sahf
or
push
ljmp
mov
inc
insl
mov
mov
pop
stos
lds
fisttpll
push
lods
aaa
call
sub
outsb
push
in
fmul
push
aaa
cmpsl
call
scas
pop
arpl
sub
or
sbb
inc
int
push
out
mov
mov
popa
aas
mov
mov
insl
lds
test
dec
lea
mov
and
jae
int
pushf
int3
outsb
rol
dec
into
push
adc
orl
cs
pushf
push
scas
jg
sub
popf
dec
push
fucom
sbb
dec
lds
insb
or
dec
jbe
loopne
sub
testl
rcrb
scas
add
jle
mov
ret
push
popf
orl
aad
ficoms
jmp
pop
jg
adcb
push
je
pop
sahf
movsl
xchg
ss
mov
or
dec
idiv
cmp
sub
pop
pop
das
das
mov
sbb
mulb
icebp
idiv
insl
fdivrs
sub
mov
cmp
add
push
stos
inc
jge
dec
jbe
or
into
shl
sub
popf
xor
popa
jns
mov
icebp
cmpsb
add
fs
mov
and
dec
adc
movsb
sbb
push
das
std
add
mov
pop
or
mov
and
push
mov
pushf
iret
xchg
aaa
ret
dec
in
cmp
hlt
add
xor
jb
sbb
stos
xor
jmp
in
xor
sbb
mov
cwtl
outsb
mov
movsl
shrb
push
dec
orl
scas
mov
cmp
mov
aaa
sahf
stos
test
repz
iret
rorl
adc
dec
cwtl
fs
hlt
inc
dec
or
mov
mov
mov
test
nop
test
mov
xchg
ja
testb
pop
push
adc
outsl
push
sti
push
inc
xchg
jge
loope
inc
imul
inc
push
jns
jle
dec
mov
dec
xchg
test
js
sub
icebp
dec
cmp
mov
xchg
insb
ss
sbb
mov
dec
scas
nopl
out
insl
cmp
cmp
mov
add
sti
cmpsb
cs
push
xchg
cs
inc
js
inc
mov
lahf
or
cmp
push
push
push
mov
das
sub
loop
and
jp
into
inc
mov
sub
mov
cmp
into
add
sub
mov
and
rep
hlt
imul
push
cs
sbb
stos
mov
sti
push
push
sub
jge
inc
inc
pop
xor
push
dec
mov
adc
push
in
xchg
andnps
in
scas
xor
mov
inc
jns
leave
insb
cs
sub
add
mov
mov
stc
int
mov
sti
xor
inc
pop
push
push
push
adc
aaa
inc
cmp
adc
pop
and
mov
popa
add
std
sar
jle
sub
xchg
jle
and
mov
push
mov
mov
mov
roll
mov
sarl
mov
and
and
pop
clc
push
inc
leave
push
inc
roll
mov
rol
dec
rcr
rorl
cmp
repz
xchg
mov
lods
inc
mov
push
push
aad
in
push
scas
xor
out
cmp
jmp
xchg
aad
out
aaa
mov
in
in
outsb
int
push
inc
cmpsb
fcmovb
sahf
cmp
mov
test
sti
push
sti
loope
into
xor
lea
arpl
stc
shrl
inc
push
test
pop
imul
sbb
subb
scas
xchg
subl
cmp
gs
fadds
ss
mov
xchg
push
das
mov
xor
mov
pop
or
mov
and
int
xchg
aad
cs
sub
push
xchg
int
or
loope
into
scas
pop
push
jle
dec
incb
aaa
ret
mov
fsubrs
xchg
inc
test
int
xor
stos
cltd
xor
xor
jge
test
inc
push
pop
mov
insl
pop
lods
cmp
xchg
sub
jg
sarl
adc
push
sub
xchg
push
add
and
int
inc
xchg
scas
loopne
mov
test
cmp
jnp
das
sbb
jmp
test
xor
jbe
andl
sbb
in
and
notl
pop
inc
popf
jle
and
jg
mov
adc
ja
push
sbb
jo
push
insb
mov
cmp
adc
jg,pt
mov
push
jle
cmp
jo
pop
fstps
mov
mov
sub
and
out
in
ds
push
inc
dec
pop
loopne
cmp
cmp
test
cmp
cmp
inc
jnp
mov
ljmp
add
iret
and
xchg
xchg
jge
mov
jp
sahf
mov
loope
sbb
sub
jmp
inc
cmp
jns
stc
push
xchg
sbb
xorb
inc
inc
ja
clc
in
inc
push
movsb
frstor
fnstsw
lret
int
push
rcrb
pop
addr16
and
jle
xor
stc
xchg
xchg
gs
mov
loopne
test
cs
out
cmpsl
mov
mov
and
xchg
lcall
add
cmp
outsb
adc
addr16
sub
lcall
insb
test
cmp
cld
cmp
inc
movsb
adc
clc
insl
sbb
andl
addl
ja
xchg
cltd
add
xchg
test
icebp
imul
aaa
jno
dec
jae
mov
push
pop
je
xlat
and
out
sahf
push
ljmp
lcall
lea
or
xor
jg
adc
or
dec
sub
push
int
pop
inc
xorl
dec
jg
scas
pop
stc
adc
out
sbb
ret
jge
movsb
mov
scas
lods
sub
sbb
sub
sub
out
xchg
adc
outsl
xchg
adc
jge
adc
jnp
adc
jns
adc
ja
adc
test
add
xor
jnp
sub
std
xor
ljmp
cmp
insl
in
arpl
sbb
mov
mov
dec
jo
mov
and
or
sbb
call
jae
cmpl
inc
xchg
pop
clc
ja
imul
dec
pop
xor
clc
aas
pushf
bound
ds
mov
xor
inc
subl
xor
mov
sub
add
push
jmp
cmp
cmpl
fidivrs
push
xor
std
in
xchg
jp
jno
mov
add
jecxz
ficompl
add
xor
jnp
scas
scas
int
aad
sbb
push
mov
aam
xor
insl
xor
leave
in
in
lds
mov
push
std
sahf
mov
sbb
mov
cmp
in
mov
xlat
pop
mov
out
daa
mov
add
test
cmp
sbb
mov
test
mov
in
dec
xchg
es
ret
dec
xchg
mov
out
jns
pop
mov
ja
loopne
das
pusha
test
cmp
cwtl
push
scas
jge
lret
jnp
pop
cmp
dec
bnd
rol
lcall
pop
pop
leave
leave
pop
movsl
or
sahf
jns
rorb
mov
popa
in
decb
fisttpl
cmp
fcomp
mov
dec
fisubs
andb
shlb
dec
sub
jno
xchg
dec
outsl
lods
repz
fistl
repnz
fadd
ss
sbb
fiaddl
jg
xchg
push
dec
imul
jno
xchg
cmp
int3
pop
xchg
je
cmpsl
icebp
sahf
fadd
call
push
test
fcomps
ss
pop
and
out
clc
nop
js
std
jge
push
stc
sarl
gs
mulb
sub
or
leave
xor
iret
stos
cmc
mov
jle
jle
roll
pop
inc
and
inc
andl
out
sub
sahf
xchg
std
insl
cwtl
jno
jno
xchg
hlt
loop
xor
adc
push
in
inc
jb
jnp
int
xchg
jne
xor
jmp
gs
add
sahf
test
pop
adc
xchg
xchg
sub
fwait
adc
push
sub
dec
cwtl
push
jnp
out
mov
push
adc
test
jno
outsb
and
xor
mov
push
mov
test
into
add
push
lea
out
pop
sti
pop
out
mov
addb
inc
jg
movsl
mov
mov
shrl
mov
xor
sub
jg
mov
rcll
pop
jg
call
test
repz
mov
sub
pusha
mov
cmp
dec
add
in
or
mov
or
and
xchg
jnp
jb
loop
imul
mov
gs
jmp
sub
mov
and
mov
mov
shlb
ja
inc
jg
lods
push
pop
int3
repnz
aad
xchg
jl
cmp
fmull
icebp
stos
xchg
insl
lret
cmp
jle
pop
sahf
jl
in
jb
jmp
sahf
das
mov
adc
push
and
mov
xchg
cmp
les
push
xchg
inc
popa
xor
ficomps
aam
popa
test
cmp
rclb
rcrb
cmc
out
outsl
xor
imul
insb
and
or
pop
dec
pop
jecxz
add
mov
adc
mov
pop
xchg
sarb
cmp
mov
sti
mov
jno
mov
adc
mov
adc
xchg
mov
mov
push
sbb
xchg
hlt
ja
insl
mov
lahf
repnz
sti
dec
insl
pop
push
lea
xchg
mov
stos
shrb
inc
xchg
adc
inc
cld
mov
xor
push
mov
sti
jns
sub
or
lcall
cmp
inc
mov
mov
mov
dec
mov
aaa
popf
push
fldt
jmp
les
std
mov
xor
cs
fs
imul
and
mov
aaa
cmc
fisubrl
aam
pop
lods
xor
pop
inc
sub
adc
sub
pop
mov
jg
ss
push
imul
push
dec
sbb
dec
jae
bound
and
xor
adc
ror
pop
xchg
push
cmp
jmp
cmp
mov
push
aas
call
jns
icebp
pop
ja
sub
cld
cmpsl
subb
imul
loop
pushf
repnz
add
out
sub
lds
lahf
jg
nop
xchg
gs
xor
mov
jno
pop
xor
out
mov
push
int
lods
mov
inc
jnp
hlt
jb
testb
dec
mov
inc
adc
scas
jmp
int
xchg
scas
sti
jne
mov
int
bound
bound
roll
mov
xchg
shl
loopne
aam
push
shrl
sbb
sti
or
xchg
push
rcll
fdivrl
sub
pop
repnz
adc
inc
jns
popa
dec
adc
push
cli
out
hlt
xor
test
push
sub
xchg
mov
push
ret
into
adc
cmc
cmp
fs
rolb
cmp
xchg
rcrl
mov
inc
movsb
aas
xchg
test
inc
lds
push
sbb
and
push
add
mov
dec
push
inc
sahf
jmp
frstor
cmpb
outsb
push
and
push
loop
mov
test
repz
outsl
and
test
ss
sub
cmp
aas
fs
sti
push
fists
or
sub
lds
xor
call
arpl
and
xor
mov
nop
xchg
out
sub
outsb
aas
and
fwait
and
mov
and
sub
outsl
inc
mov
jno
jnp
lods
arpl
shll
jmp
cmc
jno
je
mov
out
sub
out
mov
xor
idivl
jge
inc
dec
push
adc
cmpsb
xor
fs
add
movsl
xchg
jae
mov
repnz
jecxz
pop
outsb
xor
cwtl
push
pop
jmp
stos
xchg
jl
test
jecxz
or
jbe
push
jae
cmpl
fbstp
movsl
leave
jne
mov
outsl
or
pop
cmc
in
jne
mov
decb
inc
push
dec
xor
push
sbb
mov
mov
jge
leave
jmp
mov
int3
mov
out
test
lock
push
pop
mov
inc
xor
jns
lock
cmp
cmc
lods
mov
cs
scas
inc
pop
mov
inc
mov
push
adc
push
jge
shl
mov
xchg
jmp
fld
jno
addb
flds
sahf
addl
xchg
and
sahf
xchg
pop
adc
lods
sahf
cli
out
movsb
addb
sti
repnz
sbb
mov
popa
pop
pop
fisttpll
aam
jns
lea
test
or
shlb
leave
mov
mov
int
mov
jle
xor
mov
in
cmp
inc
in
inc
and
cs
pop
out
mov
imul
inc
sub
bound
adc
cld
lea
push
jbe
pushf
push
jae
or
das
insl
es
add
jno
add
test
xor
outsl
test
jae
ss
push
ret
lds
cmp
mov
in
mov
jge
inc
stc
xor
mov
movsl
out
pop
int3
fstpt
sahf
or
enter
xor
test
push
movsl
ljmp
add
mov
push
call
outsb
mov
stc
xor
inc
cli
jp
add
imul
inc
hlt
inc
jg
inc
insb
push
repz
ss
inc
lods
decl
mov
scas
cmpsb
icebp
xchg
mov
fsubl
add
ret
aam
pushl
jb
mov
mov
xlat
idiv
sahf
test
dec
push
mov
jge
push
test
out
pop
add
jge
sub
add
iret
lods
push
int
into
push
mov
dec
sub
jge
jae
std
xor
enter
stc
popf
lret
sub
inc
dec
cmp
fs
pop
add
push
xor
shll
popa
add
ret
movsl
jns
insl
rolb
xchg
test
es
add
adc
or
cmp
out
inc
rep
dec
push
aam
ret
call
inc
and
cs
jle
lea
adc
dec
mov
inc
and
imul
jg
loope
pop
add
lea
aad
stos
adc
mov
pusha
cmpsb
pop
std
dec
addb
jbe
pop
icebp
insl
push
dec
mov
fistl
inc
das
popf
mov
mov
out
cli
loope
add
sbb
mov
push
mov
sbb
insl
jae
sub
std
lds
mov
filds
xor
jno
push
xchg
jae
dec
cmp
mov
xor
cmp
dec
push
clc
sbb
jg
insl
arpl
pop
dec
mov
out
push
in
xor
jo
mov
repz
aas
in
int
cmpsl
sbb
mov
mov
push
call
xchg
jno
shl
jno
push
fstl
push
std
cld
imul
ljmp
lds
enter
mov
xchg
jb
test
xchg
in
fldl
outsb
xlat
aad
fld
jmp
imul
add
push
rclb
inc
sub
into
out
dec
test
mov
or
sbb
jae
mov
stos
mov
lcall
cmc
sahf
jle
and
in
shl
xor
arpl
mov
add
in
les
push
fldl
lahf
adc
push
jmp
shlb
lock
pop
icebp
dec
fscale
andl
xor
fimuls
iret
or
mov
mov
sub
add
pop
mov
mov
mov
dec
les
in
cmpsb
or
cmc
adc
or
push
and
or
dec
aas
stos
sbb
movsb
mov
xchg
fistps
adc
in
addb
cmp
cmp
testl
js
mov
sub
fistpl
push
add
data16
mov
scas
xor
fnsave
xor
ffree
lret
les
in
les
mov
mov
dec
jmp
in
jle
out
lds
mov
testb
add
lods
xchg
in
clc
and
arpl
mov
xor
mov
loope
mov
xor
and
loope
or
xor
fisttpll
or
in
test
insl
mov
outsb
jge
mov
imul
fbstp
dec
and
sub
push
mov
jnp
push
mov
dec
out
adc
insl
sbb
sbb
loopne
push
fstl
shlb
jnp
jb
shrl
fdiv
adc
cmpsl
xor
into
imul
mov
mov
leave
popa
and
jo
sbb
or
pop
mov
sbb
adc
cmp
je
and
push
mov
scas
bound
cmpsl
mov
fidivs
idivl
addr16
stc
mov
mov
mov
jge
sbb
popf
sub
lds
xor
push
and
cmp
jl
xorl
js
clc
addr16
outsl
mov
and
outsb
popf
add
ja
mov
mov
jnp
lea
repz
push
lods
rcrl
arpl
pusha
mov
dec
jns
xor
mov
fcoml
lea
loopne
push
ret
adc
jo
pop
arpl
sub
mov
push
cs
movsl
fs
cmpl
gs
pop
inc
mov
int
jmp
dec
xchg
fistl
pop
cs
fiaddl
sbb
enter
sub
test
in
stos
insb
repz
push
sub
int
pop
jb
ss
mov
xor
and
stos
mov
cli
push
dec
lds
outsb
push
dec
push
xchg
fldl
sarb
push
inc
sub
and
pop
jcxz
roll
nop
repnz
sahf
rorl
sub
pop
test
shl
dec
and
loope
rol
imulb
xchg
insl
cwtl
insl
cmpl
lret
xchg
ret
xor
fisttpll
jno
mov
fistl
push
xor
fwait
lret
add
ljmp
aaa
std
jg
out
sub
sub
cmc
inc
xchg
icebp
dec
lret
lret
andl
push
xchg
push
add
jno
nop
push
jmp
insl
xchg
inc
ficomps
shlb
hlt
ficompl
push
cli
cmp
gs
xchg
cmp
pop
iret
aaa
xor
rcrb
cmc
imul
gs
pop
xor
lea
cmp
inc
enter
cmp
mov
pop
dec
shlb
pop
mov
addr16
negb
dec
mov
fstpl
and
push
pop
push
cmp
push
xor
mov
test
jmp
and
daa
addl
imul
cmc
inc
or
outsl
jno
jge
sub
lods
cmc
jns
je
xchg
rcll
sub
js
xchg
sub
cmpsb
jg
inc
jno
addr16
lea
pop
loop
mov
out
sub
test
xor
cmpl
out
mov
mov
jl
jge
inc
ret
sti
push
shrl
aad
gs
inc
repnz
add
lret
cmp
aaa
into
mov
dec
inc
cmpb
arpl
stos
test
jns
std
or
movsb
sbb
sarl
pop
test
jle
dec
scas
xor
das
add
ja
dec
imul
dec
jae
jno
hlt
dec
pop
shl
xor
push
mov
push
push
fbld
inc
add
jl
jae
sbb
mov
pop
mov
pop
fildll
fstps
pop
test
jl
pop
stos
dec
repz
rorb
jae
push
jp
mov
sbb
push
js
test
xchg
push
jnp
push
jno
xchg
data16
mov
decb
stos
jecxz
test
xor
mov
bound
leave
pop
jmp
in
pop
fldt
jbe
add
leave
and
jmp
pop
xor
push
adc
ss
xor
ret
jno
sbb
xchg
movsl
je
pop
xor
leave
xchg
xchg
push
push
adc
sbb
cltd
xor
xchg
std
mov
dec
loopne
xor
jle
mov
inc
dec
pop
mov
and
lahf
jle
and
mov
push
stc
sub
inc
push
cmp
aad
fstps
dec
mov
adc
cmp
push
jno
mov
lods
dec
cmpl
mov
mov
std
cmp
mov
push
sbb
outsl
cmpsb
push
je
xchg
divl
xchg
jge
sub
pop
jge
sub
jge
leave
jb
pop
cwtl
push
in
into
jae
dec
loopne
jecxz
push
test
outsl
inc
shll
outsl
sub
mov
add
push
dec
xchg
repnz
pop
xor
mov
insb
sub
stc
movsl
in
and
inc
adc
out
shr
sti
xor
jnp
int
fnstenv
xor
mov
jno
adc
or
sarl
icebp
inc
jno
imul
mov
jno
jns
push
repz
repnz
mov
jle
dec
inc
jb
fistpl
inc
push
aad
mov
add
insl
mov
cmp
pop
movsb
pop
insl
xor
jae
push
inc
sub
cmc
push
pop
out
cmp
push
or
xchg
dec
test
push
cmp
int
or
into
adc
adc
std
cwtl
aas
je
scas
scas
sub
test
xor
adc
and
mov
je
and
jnp
lock
push
jmp
out
int
pop
jns
sbb
sbb
arpl
imul
icebp
test
lea
mov
pop
gs
sbb
outsb
loopne
les
out
mov
std
test
lcall
addl
fucomp
mov
mov
jl
push
adc
pop
push
push
push
sub
out
pop
xor
rorl
into
jl
sbb
outsl
mov
popa
xor
arpl
addl
clc
pop
outsl
jg
aad
jge
jae
nop
xchg
and
xor
addb
in
test
xor
lds
pop
jecxz
subb
cld
cmpsl
mov
jb
mov
stc
lea
cmp
xor
xor
xor
fwait
jbe
xor
jb
xchg
and
lcall
xlat
xchg
jecxz,pn
adc
stos
stos
cld
sahf
loop
mov
les
mov
sbbl
bound
out
dec
mov
pcmpeqd
mov
bound
add
and
jmp
sub
cmpsb
push
sbb
and
fistpl
pop
insl
mov
mov
popa
push
aas
cwtl
or
jmp
jg
aaa
dec
push
xor
into
in
lea
out
xor
jae
stc
popa
sbbb
jnp
pmuludq
jg
sbb
push
sub
push
ljmp
mov
adc
sbb
ds
jg
sbb
sub
cmp
mov
sbb
xchg
scas
cmc
stos
lea
imul
dec
dec
cmc
mov
in
push
pop
add
daa
pop
je
push
dec
out
fsubrl
push
cs
jecxz
loopne
imul
sbb
sti
lea
xchg
sbb
loope
dec
xchg
imul
addr16
pop
mull
addr16
repz
into
adc
mov
sti
mov
cmp
test
xchg
sbb
and
dec
out
xchg
into
fwait
or
dec
jecxz
cmpsl
mov
inc
add
test
ja
je
sbb
leave
mov
and
lods
filds
mov
cli
and
jmp
shrl
loope
and
jmp
mov
cmp
mov
and
imul
inc
fnstsw
xorb
xor
ljmp
jnp
lods
pop
inc
lea
in
call
sub
cltd
pop
fisttpl
push
and
pop
mov
and
cs
inc
cmp
inc
sub
mov
out
mov
jns
js
int
xchg
and
inc
lods
xor
lret
jo
pop
sahf
adc
test
push
orl
fwait
adc
xor
gs
xor
push
subb
dec
mov
cmpsb
int
pop
jg
push
out
xchg
mov
cwtl
sub
mov
dec
jge
in
in
sarl
fs
and
adc
and
mov
xchg
push
mov
dec
sub
icebp
fistpl
or
popa
imul
sar
out
int3
out
repnz
jns
pop
dec
push
and
jmp
and
jno
movsb
out
xchg
xor
pop
or
test
sub
lds
inc
mov
adc
add
jb
cmc
xor
push
mov
cmc
loopne
xor
sub
adc
aas
lea
cmp
imul
dec
test
in
jb
xchg
push
mov
adc
in
pop
cmp
xchg
push
ret
add
clc
ljmp
cmp
jl
jbe
xorl
outsb
mov
stos
dec
jle
sbb
xor
add
decb
clc
mov
out
jae
and
mov
imulb
stc
testb
into
jae
enter
mov
push
xor
insl
mov
cmp
add
sub
mov
sbb
jge
repz
cmpsl
add
addl
inc
cmp
mov
jno
xor
ficoms
out
sahf
lahf
dec
bound
jecxz
cmp
popl
sbb
pop
fistpl
pop
stc
lea
mov
stos
test
jb
jnp
cmpsl
lock
imul
add
imul
outsl
jnp
hlt
cmp
xchg
in
jo
out
mov
pop
nop
xchg
sbb
repz
xchg
insl
call
subl
push
mov
mov
pop
mov
dec
add
mov
mov
mov
cs
dec
sub
jbe
out
insl
mov
xchg
sbb
movsb
cmc
inc
movsl
fildl
daa
and
pusha
mov
xchg
mov
push
inc
popf
jae
mov
add
cmpsl
push
fmull
repnz
or
push
sub
sti
loope
filds
fadds
cmc
aad
adc
or
out
repz
popa
cmp
pusha
repz
sub
cmp
mov
xchg
rorb
jp
cmp
fstps
rcrl
push
push
aam
xor
cmp
sub
aam
lds
pop
push
push
cltd
jmp
mov
jge
insl
stos
sub
mov
stc
mov
gs
orb
mov
push
shl
jns
push
in
test
les
add
mov
and
fstpl
idiv
scas
cmpsb
pop
mov
stos
bound
les
dec
sbb
jmp
ss
xchg
jp
pop
subl
xchg
es
adcl
sub
daa
aaa
push
push
sbb
xlat
and
pop
mov
pop
cmpsl
clc
aam
iret
jge
mov
ficompl
inc
push
cltd
cmp
pop
iret
cmpsl
inc
test
dec
loopne
pusha
inc
jmp
jae
cmpsb
sarb
inc
gs
xchg
mov
mov
xchg
push
mov
mov
int
lds
adc
cmp
mov
aas
scas
jbe
stc
cmp
push
ds
jg
lcall
lahf
adc
bound
xor
sahf
rol
adc
jns
movsl
rorl
gs
jae
push
add
pop
sub
and
pop
ds
inc
rcr
push
mov
add
jbe
add
aam
gs
addl
mov
add
mov
lea
jbe
movsw
test
add
push
out
das
ds
scas
das
inc
xchg
push
dec
push
sbb
aad
push
mov
lds
xchg
popf
fwait
xchg
leave
iret
fdivs
ret
inc
mov
xchg
inc
mov
xchg
or
pushf
int
mov
add
and
insl
ss
arpl
mov
inc
push
push
ficoms
adc
enter
push
inc
mov
int
into
mov
aad
popf
lds
scas
js
xchg
es
or
std
int
lds
mov
les
jae
mov
xor
mov
lock
mov
add
xor
in
stos
inc
push
es
dec
outsb
jle
pop
or
sbb
and
mov
pop
jo
mov
push
jge
inc
ja
out
out
rcrl
ss
popf
push
jle
cmp
xchg
push
ficomps
jl
imul
inc
ffree
in
sub
hlt
movsl
inc
call
dec
inc
add
push
pop
xor
mov
and
xchg
pop
mov
cli
imul
movsl
jo
pusha
nop
add
cmp
mov
sbb
push
lret
and
jecxz
popa
push
fldl
subb
loope
inc
sahf
push
inc
cmc
lds
ja
jge
test
inc
inc
test
push
mov
mov
int
sub
mov
aas
shr
push
xor
add
add
scas
and
jnp
mov
lcall
leave
add
jle
or
inc
dec
clc
adc
int
add
mov
sti
mov
nop
push
aaa
nop
sub
pop
xor
icebp
push
jle
xchg
lret
imul
out
jle
jge
inc
dec
mov
repz
sbb
scas
test
pop
mov
sbb
popa
inc
xlat
jns
pusha
mov
mov
xor
pop
dec
repz
jae
adc
inc
fsts
pop
mov
mov
and
push
iret
aad
xor
push
cmp
push
lods
cmp
adc
pop
cmp
shll
xor
jg
stos
adc
dec
hlt
mov
pop
inc
or
mov
push
mov
inc
loope
and
inc
inc
sub
inc
xchg
pop
mov
insl
add
lcall
xchg
std
cwtl
test
dec
sbb
xchg
mov
mov
add
sbb
cltd
fcoml
fstpt
mov
mov
push
push
push
rcrl
push
xor
adc
pop
xor
xor
lods
inc
cmp
push
testb
jae
stos
test
sub
push
out
pop
stos
loop
loope
push
add
in
adc
cmc
daa
mov
push
stos
jae
lds
add
insl
sbb
test
inc
das
xor
das
sbb
fisttpll
jns
scas
cwtl
push
lea
mov
cmpsb
fcmovb
movsl
pop
mov
cmc
dec
inc
pushl
ds
cmp
add
push
movsl
mov
lods
push
cltd
inc
cmp
sbb
jecxz
add
push
pop
adc
jno
jae
sbb
and
idivb
xchg
shlb
cmp
or
inc
addl
sbb
add
pop
cmp
fs
pop
test
lahf
sbbb
cmp
test
jno
push
jg
shl
mov
pop
inc
nop
sbb
insl
xchg
inc
jnp
push
or
fidivrl
fs
inc
jmp
ret
dec
pop
out
sti
mov
ja,pt
sbb
aam
lock
aas
mov
fbld
inc
push
jnp
aad
cmp
repz
lahf
arpl
dec
sbb
ds
inc
cltd
dec
mov
push
into
movzbl
nop
fs
jae
sbb
pop
movsl
sub
sub
mov
bound
adc
push
bound
fisubl
nop
add
xlat
pop
sbb
or
lods
mov
pop
xor
pop
jge
pop
imul
ja
pop
add
cmp
and
push
out
xchg
lods
pop
movsl
cmpsb
add
and
test
add
and
fildl
push
sbb
sub
xchg
out
add
fdivl
je,pt
add
xor
popf
mov
inc
dec
lret
xchg
inc
daa
adc
movsl
mov
jp
fnstsw
pop
movsl
or
pop
popa
mov
fisttpll
dec
adc
sahf
nop
icebp
xor
or
dec
popa
and
es
mov
test
test
movsl
fnstsw
insb
push
out
and
xchg
rorb
std
push
mov
aad
js
jmp
push
ss
shrl
inc
dec
inc
mov
add
aad
daa
pop
or
idivb
push
into
test
movsl
scas
sub
in
cmpsl
fwait
ds
dec
mov
mov
jno
outsb
push
fcmovne
xor
js
into
insl
sub
xchg
push
jnp
adc
in
jns
mov
ja
pop
push
loope
xor
push
repz
mov
xor
stos
insb
mov
push
jle
outsl
ret
and
std
imul
jecxz
cmp
cld
mov
sbb
test
sub
sbbl
js
fcmove
jecxz
push
lds
add
push
cmc
sub
loop
gs
pop
push
loope
push
aad
or
sbb
int
std
push
stos
or
dec
es
or
pop
std
jmp
mov
lea
cmc
daa
das
dec
jnp
shl
addr16
dec
sbb
cmpsb
es
mov
ficoml
push
jb
mov
pop
xchg
mov
lods
or
dec
lds
xchg
popf
adc
mov
sbb
loopne
mov
out
or
ret
sbb
test
adc
cmp
ss
jecxz
pop
dec
xor
pop
std
int3
into
rolb
push
das
push
rcrl
ret
add
rorb
popa
mov
push
fsubs
lret
call
int
mov
pop
pop
push
cmp
xor
dec
push
aaa
adc
dec
mov
test
or
iret
out
cmc
std
or
cmpsl
repz
sub
push
jl
add
sub
xchg
mov
or
imul
in
dec
and
dec
in
fldl2t
xor
xor
and
or
inc
dec
gs
pop
and
inc
xchg
jge
and
adcb
das
pop
shrl
inc
add
inc
jnp
insl
xchg
ja
jae
in
mov
dec
mov
sbb
ljmp
push
push
int3
pop
repnz
stos
lret
dec
dec
pop
cmp
push
inc
ja
mov
lea
add
jge
int3
fisubrl
add
std
popa
mov
add
bswap
insl
sub
std
jmp
repz
mov
sti
in
inc
pop
xchg
popa
outsl
arpl
or
inc
lret
call
adc
mov
orb
andl
dec
call
push
add
sbb
xchg
push
mov
jae
insl
xchg
inc
adc
in
jecxz
test
xchg
cmp
inc
bound
and
ja
xor
out
jae
adc
jmp
mov
jne
adc
mov
fucomp
mov
and
mov
cs
repz
adc
xor
test
cmp
inc
mov
imul
xchg
jg
jno
push
xor
subb
mov
dec
xor
insb
mov
or
cmovs
mov
std
in
mov
sbb
movsl
jmp
xor
aas
pop
push
and
lock
inc
xor
pop
lods
jle
cs
and
xchg
or
xchg
fwait
pop
mov
rolb
movsl
and
aas
cmp
insb
test
cmp
in
pop
lahf
inc
cli
xor
jmp
lds
sub
sub
icebp
orl
push
ja
sahf
mov
icebp
inc
cmp
and
cmp
pop
out
sbbl
cli
stc
sti
jg
insb
lcall
sahf
dec
ret
flds
sbb
jecxz
fisttpll
mov
shld
push
sarl
cltd
mov
pop
mov
imul
icebp
loope
pop
nop
add
push
loopne
jge
add
aas
movsb
test
push
cmp
dec
xor
test
xchg
add
movsl
sub
popf
xchg
in
push
ret
out
adc
xchg
std
jmp
dec
or
mov
sbb
ljmp
aaa
scas
jae
sub
sti
in
pop
push
or
loop
dec
aam
push
mov
incb
jge
sub
sub
cmpb
inc
nop
jnp
pop
mov
out
lods
ds
push
fwait
inc
mov
cmp
imul
movsl
inc
test
clc
in
push
lcall
push
aad
in
daa
xor
sbb
outsb
jge
aad
mov
ret
into
mov
out
add
test
sbb
cmp
xchg
sbb
mov
pop
cmp
push
in
xor
xlat
push
call
cmp
and
dec
sub
in
sbb
push
fstps
jle
cmp
jecxz
xor
cmp
and
inc
aaa
dec
ljmp
lcall
data16
imul
push
jg
jmp
jmp
jno
popf
or
gs
les
outsl
push
push
insl
mov
aad
push
push
dec
cmpsl
mov
jle
loopew
popf
into
cld
xchg
inc
jp
scas
sub
pop
cmp
jno
cs
sub
rolb
add
mov
adc
adc
inc
add
imull
movsb
stc
sarb
cltd
xchg
fisttpl
gs
leave
mov
jae
icebp
jge
xchg
or
jmp
adc
cmp
push
roll
push
mov
pop
mov
outsb
lods
jecxz
mov
jecxz
movsl
xchg
cmp
je
adc
jo
xchg
sub
pop
jns
sahf
sbb
push
jae
xor
or
sub
sbb
popf
dec
sub
ljmp
pop
xchg
pop
rolb
cmc
pusha
lods
fstps
push
jmp
mov
adc
inc
iret
mov
add
andl
dec
shrl
aaa
in
cmp
or
cmpsb
and
cmpsb
cmp
scas
fs
subl
mov
jmp
aas
sbb
push
pushf
sub
sbb
dec
xchg
in
dec
insl
mov
ss
mov
lods
sbb
test
aaa
outsl
mov
jp
ficoml
ss
stc
in
int
cmp
movsb
mov
loope
jecxz
test
xchg
pushl
jae
imul
add
pop
pusha
mov
sub
mov
inc
push
cmp
pop
bound
and
int
nop
mov
sbb
es
jg
sub
lret
das
imul
outsb
gs
or
dec
lock
pop
xor
inc
adc
loop
push
out
jge
imul
js
mov
fwait
push
xlat
mov
xchg
in
push
aad
std
inc
jmp
pop
sbb
inc
fimull
out
mov
push
cmp
neg
sbb
add
iret
jg
and
fistl
out
push
lcall
test
shll
hlt
adc
and
leave
in
leave
es
add
cmpsb
movl
insl
mov
lahf
stos
add
out
push
push
arpl
outsl
inc
mov
outsl
push
cmp
or
inc
pusha
mov
arpl
ljmp
mov
jmp
mov
shrl
jbe
cmp
xchg
icebp
cltd
and
push
or
sub
gs
or
push
insl
push
cmp
test
std
jbe
sub
jle
sub
int
aad
jbe
mov
cmp
jg
fs
xchg
dec
andb
testl
nop
loop
mov
pop
dec
pop
cmp
push
roll
sbb
add
testl
enter
jbe
mov
es
cmp
outsl
inc
test
int3
push
add
sub
outsb
aam
dec
mov
pop
stc
outsl
xchg
add
xor
xor
mov
mov
add
xor
pop
in
pusha
gs
dec
xor
iret
es
inc
and
xor
xor
subb
inc
push
jge
cmp
jb
popa
ret
int3
sbb
pop
inc
into
sarb
mov
mov
or
movsl
jp
sbb
ret
lea
out
cli
push
push
popf
test
mov
adc
adc
xorl
pop
jb
stos
repz
imul
test
stos
test
aad
push
cmp
xchg
in
dec
int
scas
push
xchg
sarl
mov
icebp
inc
shll
lds
mov
push
mov
sti
in
jmp
pop
jno
out
sbb
add
xlat
adc
xor
push
mov
or
insb
pop
into
mov
push
mov
add
push
cmp
sbb
inc
popa
push
fwait
jl
out
inc
cs
xchg
adc
popa
clc
jle
mov
in
xchg
test
jp
mov
pushf
mov
mov
out
scas
rorl
incb
notb
jne
loope
sti
fisubrs
scas
pop
adc
mov
enter
lods
inc
mov
ljmp
iret
std
test
iret
mov
fistl
inc
stc
xor
out
xor
push
dec
imul
pop
movsl
imul
sbb
sub
sub
mov
jmp
aad
mov
fnstenv
shll
push
sbb
jle
in
sub
lret
fidivl
pop
cmp
lret
mov
add
inc
mov
and
mov
lcall
xor
mov
fnsave
jno
stos
mov
add
dec
fistpll
int3
arpl
xor
daa
dec
mov
fmuls
pusha
adc
adc
mov
out
jae
imul
xor
push
out
ja
push
lret
dec
leave
mov
imul
insb
movsb
lods
icebp
pop
xor
dec
xchg
leave
mov
mov
scas
pop
jae
pop
mov
jmp
push
xrelease
lods
jns
stos
pop
xchg
add
inc
adc
sahf
lea
rorb
int
in
cmp
cmp
push
arpl
push
gs
add
std
arpl
add
xchg
mov
std
push
outsb
jae
aaa
cmp
jbe
xor
cmpsb
stos
cmc
pop
pop
int
je
aas
ret
dec
xor
movsl
int
pop
fldl
xor
mov
or
icebp
out
sahf
sti
fs
sbb
aad
mov
into
inc
jl
pop
push
push
xchg
or
loope
pop
push
int
adc
cmc
mov
dec
pop
gs
leave
ja
imul
jge
mov
arpl
mov
cmp
mov
int
jns
and
je
hlt
out
mov
test
mov
outsl
mov
arpl
mov
and
push
pop
xor
outsb
push
cmpsb
int3
aad
icebp
stos
pop
movsl
mov
aad
xor
mov
add
data16
mov
xor
fldl
xor
mov
mov
sbb
test
in
adc
lods
repnz
popa
mov
fmuls
add
adc
imul
jnp
repnz
loop
jge
test
cmp
mov
loope
jge
and
out
sub
sbb
shll
rcr
cs
test
lahf
dec
cmp
shl
and
shlb
std
jle
push
mov
mov
std
imul
cmp
int
in
push
mov
jge
xchg
js
test
cwtl
sbb
mov
popf
inc
mov
sub
out
fs
cmp
inc
int
cmp
add
xor
fdivrs
icebp
insl
add
sti
outsl
xchg
mov
xchg
pop
add
dec
sarl
andb
xor
fcmovnb
inc
in
popf
out
cmp
xor
fs
in
mov
jge
push
jns
add
push
pop
jnp
icebp
sub
fadd
pop
cmp
push
in
sbb
adc
mov
inc
es
addl
lret
lret
pop
sbb
jns
pop
inc
out
outsb
loopne
xlat
dec
aaa
push
cmp
adc
test
insb
aad
mov
ja
jae
aam
test
inc
push
mov
xor
jle
xor
xchg
pop
mov
add
inc
aaa
lahf
iret
push
or
pop
shl
inc
fadd
dec
call
data16
imul
bound
pop
mov
imul
sub
ds
add
push
and
xchg
jno
sbb
mov
sbb
test
nop
jmp
sub
jmp
xor
sub
cmp
test
lea
jle
push
arpl
xchg
pop
test
jnp
out
sbb
and
sub
mov
push
cmp
roll
data16
sub
aad
in
dec
pop
push
bound
or
sbb
mov
dec
inc
gs
jge
inc
xchg
and
mov
sahf
in
scas
cwtl
insl
in
mov
fildl
test
mov
outsl
sub
pop
aad
inc
mov
jno
or
bound
xor
xor
xorl
mov
outsb
and
imul
shll
flds
xor
aas
inc
dec
jl
dec
xor
icebp
inc
xchg
pop
std
sub
daa
pop
sbb
lea
jae
or
lret
das
leave
sti
lcall
xor
mov
sbb
mov
loope
mov
sbb
psubq
inc
aam
xor
inc
push
repz
icebp
mov
xchg
mov
andl
rol
gs
xchg
jno
xchg
dec
lds
sub
dec
lods
pop
xor
clc
movsl
in
jno
fwait
std
sub
in
lret
pop
ret
fs
xor
mov
pop
xchg
cwtl
sbb
scas
xor
dec
aaa
popa
add
cmp
cmp
jno
adcl
pop
cmp
and
aaa
pop
xchg
xor
in
inc
test
dec
mov
aad
pusha
cli
push
addr16
or
adc
sbb
sub
leave
int
inc
inc
xor
inc
arpl
jo
jns
xchg
and
stos
xchg
push
push
ja
cli
test
jge
aas
push
outsb
aad
lahf
xor
inc
ljmp
sbb
fstpt
push
jecxz
jmp
mov
dec
and
xchg
dec
mov
mov
jecxz
adc
or
test
mov
addb
call
cmp
add
dec
repz
add
push
movsl
push
mov
xchg
dec
jb
out
jae
xor
mov
mov
aad
inc
xor
cmp
cmp
lods
push
xor
stc
aaa
xchg
movsl
imul
jno
sbb
pop
push
dec
dec
cwtl
push
movsl
movsb
jno
add
sbb
push
mov
push
cmc
stos
add
aad
insl
xchg
jnp
inc
clc
data16
test
jae
in
and
inc
push
push
repnz
lods
shl
sbb
cmp
inc
bound
adc
lods
ficoms
mov
test
mov
shll
test
js
add
das
pop
cltd
out
jbe
std
cmp
or
lcall
sub
repnz
or
aaa
inc
in
mov
pop
xor
push
mov
icebp
xsaveopt
and
xchg
std
rol
pop
jl
in
iret
pop
out
loopew
psubusw
mov
lds
add
fidivs
stos
outsb
pop
inc
imul
out
dec
pop
stos
mov
std
cltd
push
aaa
mov
mov
cmc
push
js
jnp
ret
mov
mov
push
xchg
dec
imul
xchg
cmp
adc
pop
xor
insl
arpl
pop
xor
and
add
sti
orl
push
jne
leave
fstpl
push
xchg
mov
addr16
inc
add
mov
arpl
or
xor
pop
sub
ss
cmp
cmp
sub
inc
iret
add
push
sub
cmc
repz
mov
xchg
mov
fstps
jge
das
repz
mov
inc
ret
jbe
jg
inc
jo
jl
xchg
fwait
jnp
xchg
stos
andl
sbb
pop
sbbb
dec
sbb
cmp
arpl
gs
scas
in
inc
push
xchg
lret
push
pushf
pusha
xchg
out
mov
ret
push
xchg
into
cld
mov
scas
aam
push
adc
or
sub
into
dec
mov
xor
popa
pop
pop
insl
mov
cmpsb
add
lret
and
int
xor
mov
sarb
clc
jmp
fnstsw
fnstsw
dec
jg
pusha
pop
es
push
push
jns
ret
mov
push
adc
jge
inc
add
pop
and
mov
adc
sub
test
xor
dec
dec
fwait
mov
fdivrl
int
movsb
mov
aad
mov
insl
lret
in
sub
mov
xor
sbb
inc
jns
filds
ds
mov
mov
aaa
repz
cmp
dec
insb
popa
pop
jae
sbb
daa
add
lahf
adc
dec
popa
leave
add
xchg
lret
and
and
outsb
push
adc
outsl
sti
jle
jnp
movsb
inc
rcll
ret
cmp
adc
mov
sbb
xchg
jge
xchg
and
adc
push
and
nop
int
insl
inc
rcll
dec
insb
xor
in
adc
jge
jnp
jae
dec
jmp
cmpsl
hlt
mov
push
and
data16
aad
pop
xor
jge
push
jnp
adc
daa
cs
lods
push
mov
insl
or
xor
sub
test
or
mov
jno
insb
lds
out
or
outsl
adcl
shlb
jae
ja
data16
stc
sahf
and
xchg
or
rorb
out
sub
jae
push
adc
add
shrb
mov
iret
inc
jno
cmp
pop
fsubs
idivl
mov
adc
sub
mov
mov
sub
call
call
insl
ffree
xor
push
orl
sub
cmp
fs
xlat
jae
xor
stos
mov
out
insl
lods
pop
mov
leave
dec
pusha
cmp
jnp
js
dec
push
jno
push
sahf
or
add
arpl
mov
insb
sub
and
jnp
cld
cmp
jno
cltd
mov
push
adc
fcom
insb
aaa
call
fdivrs
adc
movl
in
call
jmp
insl
add
and
xchg
jge
dec
mov
pop
inc
mov
adc
xor
insl
repz
je
jmp
adc
lcall
std
mov
sahf
pop
inc
shr
stc
dec
pop
adc
sbb
incb
push
dec
jns
xorl
mov
fstps
and
ret
popf
loopne
aaa
fstps
or
loope
out
xchg
faddl
dec
dec
push
xlat
add
sahf
jp
cmp
mov
pop
jno
fpatan
cmp
lds
gs
jno
gs
xchg
push
fisttps
dec
and
and
pop
clc
jnp
jno
aaa
stos
loop
sub
adc
cmp
insl
mov
js
adc
cs
inc
push
popa
repnz
insl
xorb
je
cmp
les
push
std
out
repz
cmp
shrl
inc
push
add
imul
lods
push
dec
outsb
mov
repnz
xchg
pop
inc
and
sub
adc
sti
cmpsl
pop
cmp
lods
movsl
daa
push
mov
les
push
insl
sahf
stc
cld
inc
sub
cli
push
sub
mov
shlb
inc
enter
sub
xor
dec
cmp
jle
dec
xchg
scas
jge
sahf
add
incl
mov
jb
xor
cmp
js
jnp
scas
loope
and
pop
sub
push
mov
lds
sub
sahf
jmp
mov
push
and
inc
push
and
mov
negl
push
repnz
lock
jb
mov
jae
xchg
push
mov
mov
negb
mov
in
sub
push
rcl
and
and
in
outsb
cmp
loopne
mov
int
adcl
xor
jp
mov
addl
inc
mov
fdivl
xchg
addl
popa
rcll
adc
adc
out
out
pop
xor
jl
push
adc
pop
push
gs
and
out
arpl
rcl
dec
les
pop
xchg
arpl
xchg
mov
push
sti
inc
and
in
xor
arpl
addb
push
xor
or
xor
arpl
addl
jecxz
and
into
jno
inc
in
lret
in
inc
push
iret
mov
data16
cmp
cmp
roll
mov
popf
jecxz
jge
popf
mov
cmc
mov
js
rclb
leave
js
sahf
jmp
inc
fildl
jns
iret
mov
cmp
jbe
std
pop
in
pop
dec
xor
mov
sub
aas
mov
sbb
pop
hlt
imul
dec
mov
mov
xchg
pop
mov
pop
les
jno
test
sbb
int
xor
sbb
jno
dec
pop
jle
mov
jge
push
jb
sbb
sbb
ds
mov
sbb
push
stos
pop
dec
imul
xor
int
add
sub
sbb
inc
subl
loopne
cltd
lds
imul
out
mov
mov
or
ss
mov
rclb
add
xchg
xchg
cmpsb
test
pop
filds
jecxz
pop
sbb
fsubrl
std
imulb
cwtl
mov
xchg
js
sub
mov
inc
push
repz
sbb
jmp
xchg
push
mov
es
and
lahf
xchg
jle
and
push
sub
in
lea
jle
jno
sbb
xor
jl
dec
jno
out
dec
adc
mov
pop
inc
ja
mov
loope
cmpsl
sti
jb
push
xchg
xlat
push
incl
fs
lcall
adc
bound
jno
out
hlt
das
pusha
std
addl
outsl
jl
pop
lret
popa
xor
pop
xchg
into
jb
adc
jnp
mov
enter
arpl
popa
xor
push
xor
jns
mov
icebp
ja
fs
xor
add
test
mov
es
jge
insb
xchg
cmp
ljmp
scas
insb
daa
popa
add
aad
cld
adc
cmp
lods
test
or
sbb
fucomip
jnp
jae
adc
and
sub
dec
jge
jno
xor
xchg
lret
int
pop
cmc
push
stc
jp
mov
push
push
test
pop
push
movsl
push
movsl
xchg
jg
ljmp
stos
out
xchg
das
lea
pop
xor
push
mov
std
inc
mov
jo
xchg
jle
out
cmc
ds
fs
mov
xor
push
push
and
push
cltd
icebp
xchg
mov
stc
xchg
shlb
xor
sub
dec
aas
iret
data16
sub
add
cmc
inc
mov
outsb
cs
dec
in
sahf
daa
fimuls
call
mov
sarl
fistpll
les
xchg
aad
fstps
push
fstl
push
sub
ljmp
push
aad
or
xor
xchg
dec
fucomp
jno
mov
push
sbb
xchg
sbb
and
movsl
das
sahf
cs
test
sahf
sub
push
insl
jbe
push
ljmp
xchg
jae
xchg
push
mov
sub
add
xor
out
mov
lea
pop
xor
jg
jno
xchg
add
sbb
mov
dec
mov
jno
jge
pop
dec
lcall
adc
or
mov
pop
push
jl
outsl
pushf
notw
jno
jno
lret
scas
pop
in
add
mov
stc
mov
inc
and
aad
dec
outsl
and
mov
xchg
add
jbe
pop
sub
popf
push
or
mul
pop
jge
and
ficoml
pop
lds
hlt
add
orb
adcl
test
ret
cld
pop
jae
sub
sbbb
aam
test
inc
rcrl
cmp
xchg
add
inc
and
pop
std
test
jno
mov
push
ja
xor
inc
push
jnp
out
sbb
jnp
imul
and
mov
add
lahf
lods
icebp
pop
adc
cmp
iret
inc
sub
dec
push
adc
mov
and
push
arpl
fcoml
xlat
aad
lret
push
lods
repz
stos
sub
dec
push
cs
loopne
push
inc
jns,pn
in
lds
dec
xor
jg
ljmp
sbb
push
sbb
insl
and
add
add
push
insb
daa
sub
or
cmp
dec
nop
xor
adc
or
cmp
gs
scas
xchg
hlt
jns
insl
lods
sub
int3
js
push
inc
repz
pop
bound
cmp
call
test
jp
inc
popa
std
stos
or
cltd
insl
mov
xchg
inc
jno
cmc
jns
in
test
pop
adc
add
dec
pop
dec
les
inc
sub
jg
mov
or
ja
mov
xorl
pcmpgtw
repnz
fwait
icebp
and
mov
aas
data16
and
push
xchg
idivl
popa
xchg
push
aam
jl
daa
dec
push
dec
xchg
sub
mov
dec
jecxz
imul
or
pushf
mov
icebp
cmp
out
dec
icebp
enter
push
jge
dec
sbb
add
aam
cmp
scas
adc
jae
add
push
aaa
xor
jp
push
fmuls
sbb
push
jp
jg
cmpsl
add
mov
pop
jno
sti
dec
std
movsl
and
cltd
adc
sarw
adc
add
or
adc
jge
push
push
rclb
jp
adcl
dec
fsubs
pop
ljmp
cs
insb
fisubrl
repnz
mov
adc
pop
leave
dec
insb
lret
cmpl
pop
pop
mov
ljmp
cmp
xor
imul
jmp
das
test
jbe
pop
mov
add
dec
cwtl
arpl
mov
and
sbb
push
sahf
aas
setae
sbb
jne
pop
sub
fisubs
lret
inc
jl
shl
sub
ljmp
push
jnp
xchg
adc
jmp
pop
out
sarb
outsb
dec
jns
jg
cmpsb
stos
ja
jns
mov
testb
popf
xlat
cmp
movsl
push
mov
lods
ret
and
xchg
xor
je
mov
insl
insl
sqrtps
or
and
dec
xchg
mov
jns
sbb
mov
cmc
pusha
push
adc
lds
arpl
hlt
loop
push
fwait
inc
imul
sahf
stos
mov
xor
or
jmp
pop
add
or
loopne
mov
and
data16
mov
xchg
xchg
idivb
or
in
jle
mov
push
jno
dec
outsl
inc
subl
and
scas
mov
stos
inc
pop
mov
xor
mov
cmp
xor
outsl
or
int
xchg
jge
push
jnp
dec
prefetch
or
dec
leave
add
insl
mov
test
movsl
std
aaa
pop
push
cmpsb
jae
xlat
push
jns
ja
leave
adc
int
push
dec
xchg
test
or
je
fwait
pop
mulb
sbb
mov
mov
mov
rol
sub
pusha
and
pop
push
test
into
test
into
jno
std
in
fnstsw
push
lret
mov
loope,pt
or
xchg
push
push
inc
cmp
lds
rcrl
sarl
stos
or
push
int
sbb
push
cmpsb
cmp
xchg
mov
mov
aam
mov
add
add
rclb
pop
cltd
push
dec
inc
dec
or
add
or
popf
mov
testl
add
stos
dec
xor
addr16
mov
ficomps
push
and
insl
int
jmp
inc
mov
sub
inc
rcl
insl
rcl
sub
imul
jl
or
cmp
push
xchg
ja
mov
stc
inc
out
jbe
outsl
pop
out
test
cmp
cltd
pop
fldl
and
jns
mov
cwtl
int
nop
outsb
cli
insl
adc
jno
rcrb
shll
jle
das
mov
popf
mov
icebp
xchg
scas
sti
insb
and
and
xchg
jmp
pop
in
sbb
push
fmul
dec
int
mov
mov
jae
and
or
loope
std
pop
mov
push
sbb
sti
pushf
add
cmp
sahf
stos
js
ficomps
stc
add
sub
mov
pop
cmp
lods
stc
push
push
arpl
cmp
jecxz
mov
addr16
push
lcall
mov
sbb
sub
test
mov
sub
jmp
sti
mov
es
mov
sub
cli
das
mov
cmp
push
mov
cmpsb
testb
mov
xlat
movsb
and
int
mov
fisubrl
test
movsb
xchg
xchg
lret
mov
and
in
iret
test
stos
scas
push
xor
insb
fildll
jae
cmpsb
push
aad
mov
shll
cmpsb
test
insl
int3
lahf
and
sub
insl
jnp
inc
adc
call
mov
push
icebp
push
shlb
faddp
dec
push
jge
mov
xor
mov
ret
pop
sub
or
fs
mov
gs
les
dec
adc
sbb
jle
dec
test
xchg
inc
daa
push
jg
or
out
add
cmp
xchg
dec
mov
in
pop
mov
scas
bt
push
pop
pop
jnp
mov
inc
je
cmp
lcall
aad
int
mulb
dec
cmp
in
dec
dec
out
mov
adc
cmp
bound
jo
and
lea
test
orl
psubq
dec
mov
inc
divl
push
repz
add
pop
cmpsb
pop
repz
xor
rcrl
pop
test
dec
loop
xor
sarl
jno
ja
in
iret
push
imul
or
mov
fwait
repz
mov
cmpsl
in
inc
mov
sbb
xchg
inc
cld
xor
fwait
pop
and
mov
out
xor
aas
push
mov
push
jle
das
imul
call
repz
movsl
adc
and
push
pop
cmp
aas
sub
insl
cmp
ljmp
stos
test
popa
mov
jno
cmp
outsl
jmp
in
repz
lods
dec
test
vpmullw
pop
lods
pop
mov
cli
mov
cmp
push
nop
cmp
adc
jbe
fisubrs
pop
enter
dec
push
push
adc
xlat
faddp
rcll
cld
and
push
mov
fists
dec
cwtl
push
or
mov
sub
std
cs
sarb
imul
sub
loope
inc
out
jmp
pop
dec
sbb
mov
mov
icebp
fists
insl
gs
out
adc
mov
lock
push
outsl
xlat
loop
mov
jg
adcl
dec
negl
lahf
push
adc
push
dec
adc
push
sub
mov
in
xchg
dec
adc
test
xchg
dec
aam
pushf
mov
xchg
int
adc
pushf
shll
pop
rcrl
mov
bound
jge
lret
adc
adc
rcl
push
cwtl
cld
xchg
pop
dec
dec
leave
jp
add
mov
push
decl
push
cwtl
xor
dec
out
add
xchg
loope
xchg
les
mov
or
fstl
shl
ret
popa
sub
das
add
decb
cmc
test
xor
dec
push
mov
sarl
push
in
inc
test
mov
jae
and
out
pop
aad
ret
loopne
pop
dec
jle
js
fstpt
gs
lret
or
pop
jmp
xchg
jge
std
inc
pop
xlat
pop
sbb
cwtl
push
out
outsl
pop
fimull
mov
ja
js
jae
jp
aad
adc
and
mov
jno
jp
dec
xchg
gs
sub
and
out
and
xor
inc
xchg
jmp
cmp
rcll
stc
jns
imul
fcomps
out
aaa
stc
test
sbb
or
lods
push
inc
fsubrs
repz
pop
xchg
inc
mov
xor
scas
cmc
sub
add
int
popf
dec
mov
fmuls
mov
push
icebp
and
xchg
pop
xor
pop
aaa
in
cltd
sti
inc
lret
xchg
jns
mov
and
insl
popf
jecxz
mov
popa
inc
sti
outsl
cmp
xor
dec
jno
lret
frstor
mov
mov
inc
and
repz
inc
mov
fisttpl
fs
mov
leave
adc
ret
leave
test
add
lods
xorb
cld
mov
push
pop
and
cmp
outsl
xchg
pop
sbb
adc
push
dec
add
cld
imul
cmp
rcrl
dec
insl
in
inc
sbb
cwtl
mov
and
in
imul
in
loopne
or
mov
arpl
inc
stos
out
mov
in
sbb
das
pop
cs
cmp
mov
jl
repnz
jle
jno
push
xor
cmp
fsubr
movsl
push
pop
test
sbb
add
cmp
jnp
push
mov
and
jmp
sbb
mov
idiv
adc
iret
xchg
mull
inc
adcb
sub
push
sub
or
inc
std
push
sbb
adcb
push
dec
outsl
and
inc
enter
pop
sbb
pop
gs
outsl
lods
insb
movsb
add
adc
iret
cmp
pop
push
imul
push
stos
jns
jae
and
dec
mov
inc
std
push
pop
sub
std
stos
bound
insl
xchg
add
pop
cmp
jle
adc
out
int3
je
push
pushf
jnp
or
outsb
mov
mov
jl
pop
add
mov
pop
dec
fisubrs
pop
push
ljmp
icebp
xor
outsl
addr16
xchg
inc
mov
test
and
push
xor
subb
fstpl
inc
dec
dec
repz
subw
into
out
lods
stos
cmp
daa
mov
into
ja
test
scas
mov
sub
lds
push
gs
pop
jl
das
adc
jg
leave
sbb
sbb
add
jge
xor
sbb
pop
sub
xor
cltd
lret
push
xchg
xor
push
jno
int
loop
mov
cmc
jge
icebp
jno
jnp
cmp
pop
ds
push
andl
jns
fimuls
outsl
xorl
int3
pop
inc
les
inc
pop
and
xchg
pop
jae
outsl
sahf
ss
push
lds
incb
stos
sti
push
outsb
or
or
cmpb
int
notl
and
xorl
outsl
sbb
rol
cmp
mov
mov
and
ret
mov
test
std
mov
cld
jnp
mov
mov
jo
jl
shl
fisttpll
xor
imul
out
jg
rcrb
ds
in
fimull
inc
jae,pn
push
ja
sub
and
cmpsb
pusha
cmp
pop
mov
jae
or
repnz
mov
xchg
jmp
jmp
fwait
sti
faddl
imul
sarb
adc
jle
cmp
lcall
out
jae
mov
jno
dec
push
addr16
xor
enter
out
addb
lods
mov
out
outsl
js
gs
psllq
negb
lcall
jl
mov
sbb
cli
imul
outsb
inc
cmp
outsl
inc
mov
lret
sub
pop
push
test
jge
dec
loopne
sub
ror
pop
add
mov
jge
inc
dec
popf
lock
add
out
ret
roll
arpl
clc
movsl
xlat
int
and
stos
subl
pusha
mov
loopne
leave
push
jno
fnstenv
xchg
cwtl
in
icebp
xchg
pop
lret
cltd
cmc
jge
divl
lea
jbe
jno
push
push
imul
ret
jle
jge
insl
jns
leave
jge
xchg
xor
xchg
dec
xchg
xchg
addr16
push
jns
xchg
arpl
mov
mov
sbb
jo
cmp
cmc
push
test
test
ja
jno
ja
shr
mov
jno
outsl
fistpl
stos
add
inc
or
in
ljmp
push
lea
push
dec
xchg
jmp
push
mov
xchg
outsl
dec
mov
xor
add
adc
mov
pushf
int
jb
dec
inc
push
mov
ljmp
jp
aad
adc
and
push
inc
jno
stos
jge
test
cwtl
rcll
into
test
jns
std
inc
sbb
cmp
cmp
sub
les
pop
into
addr16
cmp
jmp
or
gs
stc
insl
shrl
std
repnz
mov
aaa
jae
xor
outsb
push
add
mov
xor
push
mov
icebp
cmp
mov
int3
shl
pop
test
xor
pushf
std
in
sub
sbb
or
xor
jge
adc
js
pop
push
lds
dec
stc
imul
jno
mov
and
jge
fs
jnp
cmp
scas
les
in
lock
jecxz
adc
cmpl
inc
sub
lret
adc
lret
pop
sub
shlb
and
sub
int3
aas
sub
sbb
fstl
push
test
pop
cmc
inc
mov
pop
mov
jnp
lret
fsin
into
mov
je
fildll
jmp
dec
xchg
sbb
jae
cmpsl
fcom
sub
fadds
or
push
sub
aad
jg
pop
enter
pop
mov
mov
jae
mov
or
pop
jmp
mov
pop
ljmp
push
nop
add
dec
sbb
push
cmpsb
push
pushf
std
mov
push
xchg
mov
out
inc
xlat
adcb
and
outsl
push
dec
mov
imul
push
jnp
ss
ljmp
push
daa
loopne
pop
push
ret
insl
xchg
push
cmpsl
aas
and
test
sarb
jmp
int3
add
dec
dec
fsubl
pop
inc
push
inc
mov
dec
jle
dec
ss
ja
jp
add
dec
aad
fildll
sti
xchg
idiv
jno
stos
jno
dec
pop
sub
enter
insb
fldl
jmp
dec
xor
add
in
addr16
outsl
fwait
loopne
push
es
add
mov
xor
dec
xchg
push
cli
data16
roll
xor
aam
add
rclb
test
out
outsl
xchg
adc
in
jno
outsl
jmp
lds
data16
test
fwait
mov
push
xchg
pop
aam
mov
jno
out
cmp
loop
dec
stos
scas
xor
ds
pusha
loop
pop
inc
ja
out
pop
outsl
jmp
and
js
push
jmp
popf
lahf
aaa
mov
aas
and
jge
inc
xchg
push
mov
incb
xchg
inc
pop
outsb
xor
mov
adc
jno
sbb
add
mov
popa
in
out
pop
insb
ret
mov
hlt
and
mov
sbb
repnz
loop
popa
push
in
add
insl
ret
jl
mov
mov
rcll
out
mov
jl
xchg
dec
imulb
lcall
push
outsl
sub
xchg
xchg
stos
gs
je
repnz
xchg
mov
pop
std
mov
fsubs
into
cltd
or
xchg
mov
add
fstpl
xchg
stc
cmpsl
xor
xchg
sar
add
push
sub
add
xor
and
xchg
cmp
aad
movsl
push
out
out
add
or
inc
mov
xor
pop
inc
sti
push
xor
xor
jbe
pop
or
stos
push
jp
fisubrs
pop
jp
cltd
pop
jo
daa
jb
cmpsl
cmovl
das
out
scas
sahf
rolb
sbb
mov
lea
int
inc
rclb
xchg
fimull
daa
divb
je,pn
push
es
xor
cmp
dec
xor
fisttps
mov
jge
jg
stos
jns
das
ss
pop
pusha
lret
dec
inc
sbb
jp
mov
and
adc
sub
mov
push
jnp
dec
arpl
lea
jnp
aaa
xor
int
inc
dec
data16
cmc
in
jge
xor
rclb
insb
in
mov
outsb
or
push
jb
lods
push
jb
cmpsb
stos
mov
and
jle
sahf
mov
mov
ret
leave
xor
movsb
jmp
adcb
cmp
andl
sarl
lods
pop
in
lea
inc
jns
mov
lea
xor
xor
std
push
push
test
inc
cmp
mov
jmp
fisubrl
jae
dec
pop
mov
mov
pop
fucomp
dec
scas
imul
in
xor
mov
add
and
cs
loope
cld
in
mov
aas
pop
pop
ljmp
lods
xor
xor
dec
push
lods
loop
dec
push
std
and
pusha
int
aas
add
lret
xchg
popa
dec
pop
pop
and
fldl
fwait
in
xchg
sub
jge
lds
pusha
lret
out
sub
jl
sub
sbb
fs
inc
dec
xchg
insb
mov
or
scas
jno
mov
add
and
push
and
test
push
adc
jno
mov
sbb
push
and
scas
addr16
cmovb
adcl
push
sahf
outsl
fwait
adc
cld
lea
xchg
mov
push
mov
insl
repnz
pop
cmpl
mov
mov
fsubs
push
repnz
mov
inc
insl
sbb
sti
push
push
add
cmc
call
lea
pop
movsb
push
add
sub
sahf
add
in
jns
psllq
mov
lods
inc
sub
out
scas
jno
in
lock
pop
push
and
jecxz
inc
outsb
xchg
lea
je
outsl
inc
dec
mov
inc
or
cs
xor
and
int
in
in
add
imul
xorl
std
jge
aas
jg
fsubrl
jmp
add
pop
imul
mov
popa
das
std
jnp
cmp
mov
dec
pop
stos
dec
mov
lods
ficoml
rclb
jge
iret
aas
add
lods
mov
je
pop
test
cmpsb
cmp
test
rcrb
clc
push
or
cmp
cmp
jge
jae
mov
jae
cmp
cmp
jae
xor
mov
fildl
cmc
pusha
xor
nop
sbb
movsb
xchg
mov
jge
aas
fstpl
pushl
xchg
jl
icebp
or
das
cmpl
cwtl
in
cmpsl
or
daa
cli
out
and
and
xor
jno
adc
into
pusha
test
push
je
xchg
push
in
ja
jne
iret
jnp
push
fstps
cmc
and
jbe
pop
cmpsb
repnz
mov
lea
jne
sbb
and
xor
std
lahf
mov
decb
mov
and
test
jnp
push
loop
inc
les
jno
xchg
test
push
test
mov
xor
and
js
in
xor
sub
sbb
cmpsb
ds
pushw
jl
jae
cmp
mov
mov
cmp
mov
aaa
stos
jb
inc
in
and
cld
stos
xor
pop
dec
mov
inc
cmp
push
insb
scas
sub
outsl
mov
cltd
lock
pop
jg
into
pushf
inc
cmpsb
rcll
jge
or
cmp
and
pushf
std
mov
frstor
adc
inc
push
test
fwait
adc
pop
push
xor
push
cs
je,pt
test
xchg
push
jle
leave
xor
xor
std
pop
test
scas
mov
mov
jmp
test
jnp
mov
mov
mov
xor
inc
lret
push
jae
int
stc
int3
dec
and
into
push
pop
sbbb
cmp
inc
ds
adc
sbb
xchg
push
sbb
movl
lods
sbb
push
call
aaa
inc
loope
jae
rorl
jle
aad
mov
sahf
or
rcrl
lret
inc
lea
mov
xchg
add
loopne
fisubrl
xor
orl
rclb
lcall
mov
mov
lods
ds
jg
push
jbe
dec
ss
pop
sub
xchg
xlat
push
mov
jp
imul
iret
add
aad
mov
popf
xor
mov
sbb
lcall
outsl
inc
inc
xchg
rcrl
sub
out
push
mul
push
movsl
hlt
cltd
in
dec
es
je
jae
outsl
lahf
dec
sahf
inc
lds
incb
aad
imul
cmpsb
outsb
push
es
fisubs
cmp
sbb
pop
and
fiaddl
lds
xchg
jge
mov
mov
fnsave
mov
add
sbb
xchg
int
xchg
fst
add
arpl
and
jno
test
insl
adc
sub
cmpsl
leave
lods
cmp
adc
xlat
mov
gs
cltd
stc
data16
sti
xor
push
push
arpl
aas
xchg
cmc
mov
mov
cltd
das
leave
loop
xchg
sub
dec
pop
mov
adcl
mov
rolb
mov
xchg
mov
out
add
mov
pop
push
mov
push
add
fldl
mov
cld
dec
mov
dec
insl
fistpl
jl
mov
fcompp
iret
add
sub
and
cmc
pop
imul
enter
add
into
lock
pop
gs
push
mov
add
xchg
bound
push
arpl
adc
mov
imul
cs
add
push
pop
movsl
xchg
dec
aam
movsl
lret
xor
and
push
inc
outsl
frstor
cwtl
mov
mov
popf
mov
add
idivb
adc
fmuls
mov
or
add
xor
mov
popa
xor
push
dec
jg
gs
jge
xor
ja
adc
adc
inc
add
sbb
or
jle
sub
pop
int
jno
clc
shll
pushf
mov
lret
outsb
gs
lahf
or
dec
mov
dec
subb
xor
xor
inc
jns
mov
jle
test
jae
je
loopne
out
fisttpll
xor
fmul
stos
cmc
fstpl
roll
jb
arpl
and
gs
rcrl
xchg
add
xchg
jno
cmp
pop
xchg
mov
jle
mov
es
ret
mov
sar
jl
dec
test
jae
push
sub
dec
outsl
xchg
push
jno
rcr
decb
outsl
jl
icebp
mov
ljmp
shlb
cwtl
in
mov
std
cmovg
xor
movsl
inc
mov
repz
cmp
or
aad
xorb
sarl
dec
out
cmp
in
add
and
test
fwait
fs
jbe
mov
call
popf
mov
xchg
xchg
loop
in
inc
adc
mov
fsts
lds
imul
sbbb
xor
cmp
sbb
jg
sahf
jg
arpl
lods
das
nop
mov
pop
jl
mov
mov
dec
outsb
pop
adc
sbb
pop
cmp
add
pop
es
adc
test
mov
sarb
xor
rclb
inc
inc
jge
push
inc
xor
subl
or
inc
loopne
test
in
and
jge
or
and
imul
pushf
add
sbb
insl
mov
leave
pop
cmpb
sub
fstps
insb
decl
mov
cmc
cmp
jecxz
orl
inc
test
pop
std
xlat
jmp
leave
nop
and
jnp
jmp
jno
imul
gs
outsl
mov
pop
les
mov
aas
xchg
popf
push
push
jns
xchg
push
fwait
xor
jns
fstpt
dec
popf
xor
pop
sub
icebp
add
ret
mov
test
and
xchg
push
lds
andl
int
test
sbb
pop
jg
fsubrl
adc
stos
mov
mov
movsb
fdivrl
jb
mov
faddl
mov
mov
pop
popf
pop
inc
push
xor
jae
aad
adc
andnps
icebp
in
inc
push
js
shl
push
inc
inc
sub
inc
fimuls
shll
pop
inc
shll
faddl
push
push
imul
sbb
js
stos
and
shll
sarb
int
insb
notl
aad
lea
dec
vunpckhps
into
fadds
in
jge
in
xchg
lds
jns
in
movsb
gs
pop
ret
inc
xor
icebp
imul
jae
stc
inc
push
loope
mov
pushf
jno
inc
pop
xor
insl
test
dec
int
jle
outsb
stos
pushf
mov
dec
push
jmp
and
jnp
ds
xor
insl
out
pushf
jns
cmp
out
cmc
lcall
cmc
pop
jae
test
std
adc
mov
test
jae
cmpl
stc
add
mov
mov
cmc
inc
mov
std
push
test
jle
mov
out
mov
test
divb
ret
xor
pusha
mov
repnz
ja
push
mov
movsl
addr16
rclb
jno
and
lret
andb
rolb
imul
add
xchg
icebp
xor
pop
adc
push
mov
outsl
pushf
testl
xchg
dec
push
outsl
pushf
mov
push
push
stc
or
mov
rolb
bound
fwait
test
lods
int
cltd
jle
inc
fimuls
std
cli
test
icebp
movsl
xor
adc
mov
add
mov
xchg
in
or
or
pop
mov
inc
jecxz
adc
or
movsl
insb
in
imul
push
dec
xor
jnp
cli
fnstcw
fcmovu
fisubrs
mov
add
lcall
roll
test
stos
hlt
pop
mov
xor
sub
scas
xor
cmp
ret
xor
or
jmp
seto
push
dec
fcomip
push
sub
push
lds
test
jl
jecxz
sbb
dec
jecxz
jge
popa
dec
aam
sbb
sbb
je
inc
in
push
add
xchg
pop
and
cmp
mov
mov
xor
jmp
pop
enter
aas
jmp
jl
outsl
mov
test
push
jns,pn
jecxz
adcl
icebp
outsl
ja,pn
xchg
xlat
xchg
push
xor
cmp
mov
sbb
dec
sbb
pushl
in
jle
xor
insl
xchg
arpl
dec
cmp
push
and
sbb
ljmp
out
pop
xchg
mov
or
cltd
xchg
fwait
add
in
inc
out
dec
nop
bound
mov
dec
mov
movsl
pop
in
sub
ficomps
xlat
lret
jmp
xchg
xor
out
sbb
pushf
outsb
and
loop
and
in
cmp
shl
push
mov
aas
sub
sbb
lret
cmc
cmp
std
outsl
jbe
mov
mov
dec
std
push
dec
mov
cmc
jl
jns
xor
or
inc
sti
adc
jae
aas
jge
stc
xchg
in
into
push
aam
lds
adc
dec
mov
popa
icebp
push
jecxz
jno
lods
ret
push
pushf
into
cli
xchg
repz
push
inc
aam
sbb
in
popa
int
cmp
mov
mov
out
int
cmp
call
or
icebp
jle
out
lds
cmpsl
stos
add
or
test
pusha
fisttps
stc
rorl
add
xor
adc
stos
cmc
jbe
mov
cmp
xchg
push
pop
in
inc
push
or
imul
icebp
iret
lds
xor
sub
rclb
jae
imul
incl
mov
iret
fbstp
outsl
xchg
push
jge
stos
sbb
add
mov
stos
outsb
adc
mov
xor
orb
or
gs
push
aaa
jmp
add
insb
fnstsw
xor
orl
scas
in
mov
lea
xor
jno
jbe
pcmpgtd
jmp
xchg
push
stos
out
mov
push
inc
push
popf
pop
add
out
jns
jge
or
addr16
jo
xor
adc
dec
xchg
in
in
mov
cmp
inc
xor
mov
fcoml
aas
cmc
sbbl
adc
add
jecxz
mov
aas
mov
test
out
mov
pop
std
sbb
rorl
push
sub
mov
mov
out
inc
push
jl
fstpt
test
mov
jle
fnstenv
add
and
repz
icebp
jmp
or
add
cmp
repnz
rcrl
cmp
loope
cmp
insl
icebp
fbstp
in
pop
xchg
inc
imul
test
add
sbb
stos
ja
cmp
mov
in
outsb
lcall
mov
cmp
insb
mov
push
mov
cmc
or
push
scas
xchg
pop
xchg
xor
ss
sub
inc
and
jae
jge
cmp
adc
sahf
roll
fisubl
jno
es
popf
add
push
adc
cmp
adc
ret
xor
shl
adc
lahf
je
add
push
in
add
sti
pop
jno
pop
or
and
jecxz
inc
xchg
leave
push
lret
jno
imul
pusha
ljmp
xchg
xor
sub
jp
test
frstor
fdivrs
xor
pop
adc
mov
dec
pop
pop
sahf
sti
pushl
ja
cmp
aad
outsb
inc
jp
dec
add
movsl
xor
cltd
push
imul
jg
das
insl
pushl
sub
mov
mov
mov
lahf
push
js
addr16
lods
xor
test
je
or
push
je
test
push
outsl
nop
inc
adc
jle
call
xchg
dec
push
pop
nop
test
shll
jb
dec
or
jo
repz
sub
and
jl
mov
sub
pop
stos
dec
xchg
xor
jge
inc
lea
shrb
nop
in
pop
adc
test
cs
jge,pn
addr16
lahf
js
cltd
and
mov
xchg
sub
dec
push
ja,pn
mov
cmp
adc
stc
mov
mov
popa
add
mov
inc
les
dec
in
sub
sub
aam
push
and
je
popa
xor
mov
dec
adc
mov
cld
xor
mov
insl
repnz
gs
cmc
push
aad
push
pop
inc
filds
and
jae
push
pop
mov
xchg
xor
jnp
adc
testb
std
and
loop
mov
mov
jmp
outsb
mov
lcall
xchg
add
imul
loope
je
mov
cmpsl
rolb
icebp
pusha
stc
jae
imul
pusha
mov
aaa
jmp
test
aaa
inc
jle
movsl
sahf
jp
cld
jge
pop
and
clc
das
out
push
xchg
adc
mov
lea
in
insl
push
xchg
jmp
aas
cwtl
sahf
cs
imul
lods
loop
addr16
stc
xorl
daa
mov
fidivs
roll
aad
mov
add
xor
outsb
std
imul
mov
xor
fiadds
push
push
push
sub
push
push
pop
push
mov
test
pop
xchg
andb
or
push
cmp
mov
sbb
std
cmp
cmp
push
adc
push
imull
add
push
push
shl
xchg
pop
inc
mov
sub
push
mov
mov
adc
pop
movsb
and
jae
add
or
inc
mov
icebp
jge
lret
mov
mov
adc
or
sahf
dec
shrb
add
cmp
mov
test
push
push
cmp
in
pop
jne
fsincos
iret
xchg
mov
pop
dec
loope
inc
lret
mov
xor
sub
jecxz
test
xchg
adc
inc
negb
cmp
fnstcw
out
imul
push
jg
lods
test
push
inc
cmp
insb
xlat
adc
orps
push
sbb
bound
stc
adc
das
dec
mov
xor
loope
rclb
mov
push
test
mov
insl
inc
jae
inc
pop
mov
push
adc
aaa
sub
cwtl
outsb
sub
rol
mull
inc
aaa
sbb
sbb
cmp
pushf
mov
sti
aas
aas
adc
std
sub
sub
popf
xchg
push
mov
icebp
aad
lret
divl
push
jge
and
ret
pop
mov
mov
sub
or
mov
lods
mov
jns
movsl
aaa
mov
push
or
lea
xor
mov
push
sub
sub
es
mov
and
leave
lea
or
cs
cmp
push
pop
jmp
lret
adc
mov
popa
clc
addr16
dec
icebp
pop
scas
addl
mov
add
or
gs
push
daa
stos
sbb
lret
outsb
loopne
inc
filds
stc
out
sbb
push
jnp
or
mov
loop
add
aaa
shl
cmp
idivl
push
and
loope
add
or
xchg
jl
pushf
scas
fidivs
arpl
sub
jns
xor
dec
mov
jns
adc
inc
xchg
fdivrs
jns
mov
pop
add
loopne
push
test
push
lea
cmpsl
inc
xchg
das
sahf
dec
imul
mov
mov
es
mulb
push
xchg
sbb
cs
test
inc
leave
cmpsb
data16
cmc
xor
leave
adc
push
es
lcall
aam
push
dec
xor
push
out
adc
sbb
jno
inc
push
icebp
scas
cmp
mov
insb
xor
das
xor
mov
adc
and
inc
push
scas
inc
imul
sahf
jp
aaa
push
test
or
inc
adc
push
sub
inc
mov
jnp
push
in
inc
jb
gs
dec
jae
inc
std
test
push
loop
xor
jns
jns
idivb
push
push
push
dec
dec
out
sub
lds
es
hlt
fnstenv
inc
mov
push
insl
mov
int3
insl
mov
jp
pop
fcomps
in
adc
sahf
pop
shr
insb
idivl
cmp
mov
inc
mov
xlat
and
in
subb
push
loop
jg
int
cmp
jle
mov
insl
inc
mov
xor
cltd
cmp
sbbl
cld
xchg
xor
pop
sub
aad
sbb
inc
int3
pop
inc
or
into
stos
push
std
std
ja
pop
jge
push
call
or
cmp
jb
cmc
ret
inc
outsl
or
aad
outsl
mov
les
in
xchg
or
push
in
fstl
cmp
clc
aad
pop
cmc
mov
pop
mov
jecxz
jns
cmp
and
ja
xor
test
inc
lea
cmp
dec
xchg
inc
sub
push
lock
out
int3
push
mov
jge
dec
sbb
ja
add
jge
out
mov
jge
mov
cmp
stos
mov
cltd
mov
mov
insl
inc
data16
mov
inc
jbe
gs
lds
and
adc
pop
cmp
mov
lret
push
xchg
jo
dec
sarl
push
mov
mov
call
shrl
pop
stc
adc
xchg
das
bound
call
std
push
aad
add
mov
mov
sti
dec
and
dec
insb
sub
cmp
faddl
push
add
in
jno
insl
xchg
lods
pop
lahf
sub
jecxz
aaa
mov
mov
pusha
ja
scas
xchg
pop
mov
inc
imul
jae
mov
pop
gs
shll
xor
sub
add
adc
fstpt
ss
loop
xchg
mov
xchg
pop
cmp
fistpll
dec
repnz
dec
imul
inc
jl
stos
cmp
inc
ja
sbb
dec
cmp
xchg
aad
or
mov
mov
mov
jno
cmp
rcl
add
fsts
sub
dec
enter
daa
cmp
lds
or
xchg
dec
stos
outsl
idivb
mov
ss
sti
bnd
test
adc
pop
mov
cltd
sbb
ss
inc
das
imull
test
pop
cltd
outsl
dec
push
ror
loope
int
sbb
imul
mov
les
jge
and
mov
sbb
fdivrl
daa
push
pop
or
push
leave
jno
leave
or
loope
dec
daa
push
or
mov
xchg
stos
imul
stc
sbb
les
mov
mov
xchg
xchg
xor
jge
and
ljmp
pop
dec
dec
aam
push
push
dec
pusha
sub
and
push
push
cmp
jae
in
or
push
jge
sbb
je
sub
and
test
iret
mov
mov
das
mov
and
int
push
test
push
es
sub
std
xor
lods
mov
loopne
mov
or
or
popf
imul
xor
arpl
scas
xchg
rol
mov
jae
cmp
sbb
loope
test
mov
mov
and
xchg
xor
in
push
pop
aam
mov
xor
adcl
xor
test
lods
insl
int
leave
pushf
or
mov
mov
pop
rolb
push
repz
jge
cmp
push
adcl
jo
jns
cmp
push
inc
and
xchg
jno
jge
adc
jo
dec
adc
shrb
sbb
jnp
xor
sbb
cmpsb
xchg
pop
inc
inc
data16
pop
arpl
mov
pop
push
popa
mov
push
sti
pushf
dec
mov
xchg
cmc
mov
jge
push
mov
daa
add
mov
mov
fdivl
xchg
ja
adc
ja
pop
loope
sub
scas
pop
fcmovne
push
es
mov
dec
iret
scas
loop
mov
icebp
adc
out
outsb
fcmovu
mov
fwait
mov
jae
repnz
ds
push
addl
jns
push
dec
scas
jecxz
popa
adc
mov
push
hlt
pop
addl
aas
lea
adc
or
mov
fnstcw
outsl
lret
cmc
or
pop
stos
mov
stc
fisubs
mov
adc
int
aaa
sub
loope
addb
add
pop
push
lds
pushf
jno
aad
outsl
pop
pushf
xorl
scas
jl
test
scas
test
push
adc
push
cmp
fsubrl
pop
repnz
mov
pop
cs
mov
adc
pop
xchg
aaa
repz
cmp
cmc
test
data16
pop
in
mov
syscall
gs
jb,pt
test
or
jb
push
mov
rorl
pop
mov
cmp
insl
jge
pop
inc
pop
jmp
ja
gs
out
jae
imul
mov
icebp
ds
or
jle
gs
add
jge
mov
aam
popa
fnstsw
xlat
nop
testl
sbb
push
fnstenv
sub
and
jge
or
int
lahf
jle
xchg
std
popf
mov
mov
and
xor
std
sub
jbe
mov
pop
inc
fnsave
push
inc
push
add
xor
pop
scas
sbb
xchg
fcmovb
mov
xchg
jge
fldl
in
sbb
fnsave
xor
aam
sahf
xor
and
xlat
mov
leave
data16
add
nop
fadds
xor
icebp
inc
xchg
push
xor
aam
fs
pop
and
stos
dec
das
xchg
mov
xchg
xor
lods
xchg
and
ds
mov
fwait
push
inc
dec
icebp
pop
sub
dec
ret
pop
data16
js
jl
mov
popf
xchg
fdivrs
push
push
mov
cmp
xchg
add
xlat
dec
fwait
add
inc
icebp
mov
movsl
clc
aam
loope
mov
jns
or
lahf
ffreep
cmp
dec
inc
xchg
cmp
cmp
push
out
stos
sti
and
fbstp
push
popf
dec
mov
daa
push
sti
shrb
add
stc
mov
popf
mov
adc
test
and
sbb
popf
jno
jmp
fstl
sub
mov
int
or
lret
xchg
pop
push
cmc
insb
mov
in
je
arpl
imul
into
movsl
or
testl
jae
xchg
cmp
icebp
pop
jnp
mov
push
pop
sub
insl
mov
mov
pop
add
imul
and
add
mov
xor
sub
testb
mov
xor
jp
and
sbb
and
sub
mov
loopne
mov
cld
pop
xor
push
mov
stos
sub
pop
out
pop
jp
ss
mov
push
jl
or
sbb
testb
push
or
push
jecxz
lds
rep
mov
jge
cmp
movsb
incl
xor
vandps
into
mov
jle
in
sub
sub
mov
push
cmp
push
cwtl
inc
mov
or
ds
inc
xchg
and
enter
pop
xchg
scas
stos
daa
cmp
roll
daa
addr16
xor
xor
out
test
daa
add
xchg
push
daa
push
xor
jb
shll
inc
and
mov
mov
outsb
mov
xor
xor
ss
adc
mov
ret
popf
jmp
movsl
sub
out
enter
dec
xchg
and
test
fdivr
push
test
mov
jg
stos
ret
ss
jns
pop
push
cmpsb
sbbb
inc
sti
inc
cs
sub
bound
sbb
push
lcall
test
int
jmp
pop
insl
jns
ljmp
loopne
lcall
xlat
pop
xchg
filds
jge
fwait
jg
sahf
loope
cmp
popa
cmpsb
fdivl
push
gs
popf
repz
mov
mov
rcrb
lock
jbe
insl
inc
add
cmc
sub
ret
rolb
imul
out
cmp
cmp
das
repnz
xchg
mov
imul
jb
fadds
xchg
xchg
aaa
jge
mov
rolb
in
xchg
mov
pusha
xor
arpl
test
push
push
cmp
cmp
test
sbb
ss
ret
dec
sub
cmp
dec
xchg
sub
xchg
inc
add
cltd
jbe
add
std
into
cmp
cmp
out
out
sbb
mov
or
daa
stc
xchg
or
jmp
dec
push
mov
pop
pop
sub
push
pop
xchg
xor
scas
sti
fcmovnbe
xorl
popf
mov
ja
lea
std
push
dec
sahf
fs
inc
cmp
es
cld
jge
xchg
mov
pop
jb
adc
jno
sbb
std
jge
inc
clc
sbb
mov
push
loop
insl
sub
jno
sub
and
cmp
jge
icebp
pop
nop
scas
pop
ret
mov
push
xchg
in
push
pop
imul
daa
fcoms
pop
jnp
pushf
loope
aaa
scas
pop
mov
fcoml
fsubrl
pushf
sbb
adc
add
stos
push
lods
and
push
push
xchg
dec
pop
cltd
sar
inc
pop
dec
sti
out
jno
std
pop
xlat
aam
in
push
mov
std
push
pop
imul
mov
popf
sbb
stc
stos
push
gs
incb
jns
jge
popf
fs
dec
in
mov
xchg
mov
jno
pushf
jae
mov
cmpsb
cmc
or
jge
sub
stc
mov
jae
mov
scas
insb
das
arpl
xchg
test
sbb
aaa
outsl
js
mov
shl
pop
stos
pop
je
aam
das
jbe
lea
sub
push
jae
popf
pop
jb
sbb
arpl
jmp
jg
xchg
aas
cmp
sbb
pop
movsl
scas
mov
xchg
fistpll
mov
repnz
pop
rcll
cmpl
out
xor
loop
mov
inc
adc
pop
lds
inc
cmp
ja
adc
push
pop
pop
mov
mov
pop
aaa
cmp
pop
scas
aam
into
dec
push
mov
rol
into
pop
push
sub
popf
rcrl
and
xchg
loope
mov
into
jge
sar
std
sub
movsl
sbb
cmp
in
mov
sub
pop
insl
xchg
stos
movsl
gs
scas
dec
rcl
and
push
cmp
lcall
nop
shrb
js
push
sub
iret
lods
cmp
jg
out
dec
test
shll
es
xor
xchg
mov
in
ljmp
insl
mov
fs
dec
sbb
insl
sbb
mov
push
idiv
ss
insl
dec
jo
dec
int3
adc
push
loope
xor
orl
lahf
mov
fisubl
xor
dec
jnp
cltd
je
add
adc
xor
call
jnp
mov
mov
pop
outsl
push
aam
enter
push
jnp
scas
cmp
outsl
pop
sub
sub
add
and
sbb
lahf
push
adc
fildll
pop
and
out
sbb
push
rcl
int
xlat
gs
orl
rcr
pop
adc
pop
xor
push
cwtl
push
std
jno
rorb
cmp
data16
xchg
mov
ljmp
std
outsl
and
dec
sbb
push
inc
leave
add
fisttpll
adc
inc
push
pop
sub
ss
jle
and
jno
sbb
addl
push
sahf
rcll
mov
imul
mov
sub
inc
lret
imul
add
outsb
enter
cltd
fstpl
add
bound
test
popa
daa
shlb
gs
data16
push
or
nop
sub
outsb
inc
jnp
bound
es
jg
iret
sahf
dec
stos
lea
pop
pushf
into
sahf
pop
out
fsub
gs
lods
xor
psllw
repnz
xor
mov
jae
fwait
xchg
or
enter
sbb
std
jle
sbb
and
pop
dec
push
jno
push
jae
pop
pop
imul
fs
cmpsl
or
jge
xor
adc
cmp
and
out
sbb
xchg
push
jg
pop
das
out
into
fimuls
jl
mov
fsubs
insb
mov
jno
fiadds
mov
daa
mov
jno
movsb
mov
jne
mov
aad
jno
push
xchg
outsl
lds
xchg
mov
push
jnp
push
mov
dec
push
xchg
out
icebp
xchg
push
and
sbb
movsl
outsl
std
inc
icebp
xchg
xchg
push
das
std
jns
mov
jns
mov
jge
mov
add
imul
sub
imul
pop
pop
out
stos
mov
push
hlt
xchg
push
imul
push
in
mov
sar
cmp
push
inc
xor
test
mov
shll
or
sub
fldl
es
or
lcall
shll
gs
fnstsw
mov
in
lret
cmpsl
outsb
xchg
std
das
out
stos
cmp
add
sbb
sbb
fsubs
push
add
cmp
movb
mov
jno
xchg
inc
arpl
dec
cmpsb
sub
insb
add
cld
js
sbb
sbb
pop
push
dec
std
lcall
negl
shrl
mov
mov
std
sub
adc
push
mov
xchg
insl
aas
dec
jge
push
ja
dec
jecxz
adcl
push
xchg
cmc
imul
mov
and
das
mov
push
mov
sbb
aaa
and
dec
insb
mov
pop
xor
sub
andb
fs
jno
inc
pop
jg
aaa
sub
cmpsb
in
int
lahf
int
daa
mov
jbe
xor
into
xor
incl
cmpb
inc
xchg
sbb
mov
push
pop
out
ja
cmp
push
ret
sbb
mov
jg
add
push
mov
daa
sbb
pop
xor
mov
cmp
hlt
out
sahf
jno
pop
rol
pop
fldenv
xchg
or
movsl
xchg
xor
stc
lds
addr16
mov
and
sti
inc
cmp
sti
cmpsb
lods
jl
cmp
pop
mov
out
in
inc
push
xchg
mov
adc
pop
incb
push
testl
es
incb
and
inc
push
cmpsl
gs
xor
aaa
cmp
xor
and
push
test
push
xrelease
sahf
xchg
mov
test
pop
push
push
jp
push
add
pushf
das
push
add
pop
mov
inc
jle
cmp
xchg
fildll
cmp
sahf
sahf
mov
mov
pop
stc
or
dec
jg
sub
adc
xor
xor
push
decb
lahf
ret
nop
test
xor
cltd
push
jno
subl
cmp
mov
xor
insl
outsl
out
call
push
jbe
push
pushf
test
ss
inc
mov
hlt
jno
jno
mov
dec
push
lods
fcoml
cmp
std
or
fbld
dec
out
mov
pushf
xchg
ficompl
test
fstl
xor
lea
lea
push
test
stos
mov
int
in
ljmp
cmp
sbb
add
data16
xchg
cmp
inc
xor
sahf
add
xor
pushf
icebp
cs
daa
add
outsb
fdivrs
ret
addb
xor
jnp
inc
push
jo
test
jo
insl
sub
das
hlt
push
jns
pop
push
and
outsl
outsb
das
idivl
aad
dec
sub
push
fwait
jbe
jge
movsb
jg
sbb
mov
jmp
out
push
jae
xor
jl
clc
insl
jno
aam
insl
jno
xchg
ja
push
mov
jg
jecxz
outsl
cmp
rolb
dec
lret
jle
xchg
in
or
dec
push
movsb
movsb
sarb
enter
dec
insl
test
xlat
bound
sbb
and
adc
jb
push
arpl
lea
adc
lds
ja
xlat
push
jno
gs
sub
adc
push
pop
sbb
aas
mov
dec
cmp
mov
or
xchg
popa
push
adc
insl
adc
mov
inc
insl
cmp
lods
clc
add
ret
xor
dec
inc
sub
popa
cli
imul
sub
jmp
cs
pop
loopne
cmp
mov
push
dec
push
mov
rorb
fisubrl
jae
vmwrite
or
test
jg
imul
fdivrl
lea
fst
mov
adc
stos
sub
enter
insl
lods
jb
out
std
xor
iret
fisubl
or
xchg
inc
imul
in
dec
and
cmp
shl
jle
popf
push
xor
inc
arpl
push
hlt
pop
jno
ljmp
imul
icebp
sub
addr16
loope
xlat
sbb
inc
ljmp
cmp
cmpl
xor
imul
xor
in
inc
pop
mov
push
out
or
or
out
mov
mov
and
or
fldl
mov
pop
insb
int
pop
movsl
dec
divl
movsl
and
xchg
sbb
inc
scas
lret
dec
pop
imul
dec
add
xchg
inc
dec
aam
or
push
mov
push
jbe
scas
jge
addl
andl
push
mov
xchg
mov
test
xor
mov
cmp
or
dec
xor
adc
icebp
je
pop
test
jg
fstpl
cwtl
sub
cmp
rclb
or
adc
imul
ds
cmp
push
mov
mov
push
outsb
jo
pop
cli
adc
cld
popa
or
sbb
pop
jbe
cltd
jae
jle
xchg
or
in
pop
cmc
and
cmp
or
mov
addr16
rcll
and
or
xor
xchg
outsl
popa
mov
sub
mov
add
and
es
mov
jp
inc
cli
testl
cs
cmpl
scas
mov
xor
movsb
pop
sahf
mov
inc
add
and
xchg
cmpsl
mov
test
xor
sbbb
das
jb
jl
xor
jae
pop
adc
test
test
dec
xor
loop
xchg
jbe
xchg
movsl
stos
out
out
cmp
sbb
cs
cmp
xor
imul
inc
sub
pop
loop
popf
shrb
cld
sarl
inc
pop
mov
shlb
ss
lret
out
adc
add
je
cmp
xlat
enter
loop
jnp
cli
cs
std
push
cmp
fbstp
xchg
or
int
test
dec
dec
xor
aad
insb
ss
sub
and
sub
in
add
and
aad
and
idiv
xor
fstl
leave
aad
scas
adc
push
push
fstpl
sbb
hlt
int
cmp
mov
rolb
jbe
in
mov
jae
leave
leave
inc
rcrl
cmc
stc
add
lahf
cmp
adc
ljmp
pushf
mov
std
and
xchg
push
pusha
aaa
scas
mov
test
test
in
rorl
mov
adc
imul
push
popa
mov
scas
inc
mov
jae
jnp
nop
pop
std
not
testb
cmp
cltd
dec
test
lcall
mov
and
mov
fstpt
hlt
loope
sbb
dec
aad
pop
xor
movsl
andl
and
out
sbb
aaa
ss
test
orb
inc
ret
nop
jp
jnp
out
push
and
mov
ret
ret
push
in
imul
jp
jle
pushl
lds
inc
arpl
cmp
sbb
jnp
nop
mov
sbb
and
sbb
pop
ja
scas
lea
fsubs
inc
rcrl
cmp
cli
fmull
or
aas
jns
test
popa
mov
lock
mov
xlat
pop
test
stc
test
xchg
fwait
pop
jne
sbb
jae
pop
sbb
insl
cmp
es
lods
push
out
repz
pop
fcompl
pop
push
pushf
outsl
inc
ror
adc
or
stos
or
cmpsl
xor
test
pop
cmc
cmpsb
insb
test
test
mov
sbb
jbe
rclw
loopne
xchg
out
addr16
mov
call
out
inc
out
popa
and
mov
add
mov
mov
ja
mov
mov
icebp
outsl
pop
scas
add
and
mov
stc
outsl
inc
adc
inc
int3
pop
dec
cwtl
mov
sbb
mov
mov
push
xor
push
cmp
xor
sub
mov
mov
aad
xchg
push
add
mov
aad
jns
cmp
mov
in
mov
jge
das
push
jnp
adc
inc
les
scas
and
std
test
out
aam
out
xor
cmp
ja
sbbb
sub
stc
pop
nop
inc
es
ljmp
pop
loop
jnp
xlat
notl
fildl
jle
inc
sbb
loope
in
into
lahf
and
jnp
sbb
jno
ret
xor
out
push
inc
jge
adc
insl
shr
push
sbb
ljmp
in
push
es
cmpsl
jnp
and
pop
mov
push
jb
push
scas
mov
sarl
push
pop
xchg
std
mov
pop
cmpsb
mov
mov
movsb
xchg
js
flds
xor
aam
orl
sbb
in
movsb
fiadds
push
test
shlb
or
lea
ds
mov
pop
adc
xchg
stos
js
push
lods
jmp
adc
icebp
data16
xchg
or
mov
push
daa
es
xchg
movsl
cmp
push
xor
popf
in
leave
inc
push
jnp
inc
es
clc
dec
inc
or
xchg
mov
popf
jp
cltd
lods
jmp
xor
test
push
js
mov
add
test
pop
xchg
or
xor
ja
sbb
fists
adc
jge
mov
fnstenv
xor
sbb
cmp
addr16
mov
xor
mov
pop
and
pop
pop
aam
xor
xor
push
out
sti
push
test
push
fbstp
dec
push
or
roll
inc
jmp
sbb
xlat
lea
rcrb
cld
pop
imul
pop
sbb
fstpl
sar
inc
pop
mov
cmpl
add
pop
push
es
push
cmpl
mov
xchg
inc
addl
test
insl
xlat
and
or
sub
stc
gs
xor
mov
frstor
jnp
das
mov
lea
test
and
sub
dec
test
out
pop
lds
adc
pop
ret
push
pop
stos
outsb
aas
dec
xor
jl
mov
aaa
popa
push
dec
fs
jg
inc
das
hlt
aaa
xor
test
xadd
lea
sub
jns
fcmovne
icebp
leave
fdivr
cmpsb
add
pop
jle
jnp
add
sub
and
ficomps
notb
insb
insl
mov
movsb
add
std
adc
push
andb
cld
loopne
leave
mov
and
jl
inc
sub
decb
sbb
mov
pop
sbb
inc
cmp
add
ja
xchg
cmpsl
out
out
movsl
sbb
ljmp
popf
xchg
shr
sub
or
and
and
dec
sarb
insb
mov
push
mov
aaa
or
pushf
adc
or
inc
adc
es
out
xchg
push
mov
mov
sbb
dec
xorl
mov
jno
xchg
outsl
mov
jge
adc
out
aas
xchg
mov
pop
negb
pop
mov
loope
mov
pop
jns
adc
mov
mov
in
mov
mov
in
pop
daa
sub
mov
sbb
call
lods
ret
ficoms
xor
sub
mov
sub
jns
mov
int
sub
sbbl
test
sbb
test
add
icebp
and
test
pushf
shll
bound
add
or
fstps
testl
inc
mov
fldt
sbb
data16
pushl
xor
xchg
pop
popl
pop
cltd
push
out
or
xor
push
inc
sub
into
jnp
jecxz
jae
or
loopne
cmp
adc
inc
pop
xchg
insb
push
loope
insl
xor
and
test
and
push
adc
clc
xchg
aaa
xlat
dec
rcrl
and
sub
repz
test
xchg
out
in
xor
jge
insl
int3
sbbb
xchg
int
sbb
and
jmp
sbb
mov
icebp
xchg
push
jae
out
popa
push
scas
add
loope
dec
jns
jae
dec
sbb
xchg
icebp
insl
add
stc
es
inc
xchg
scas
imul
dec
xchg
or
push
jle
hlt
addr16
adc
push
xorl
sub
int
dec
push
jl
scas
or
fmull
jmp
sub
jl
pop
clc
jnp
outsl
cmp
jno
repnz
jge
fs
adc
jae
shlb
lcall
and
push
mov
jbe
int
inc
push
jle
in
test
cmp
fcompl
mov
int
sbb
sahf
sub
test
les
mov
aas
scas
fsts
jp
push
imul
fwait
push
adc
in
fistps
mov
movsb
jl
pop
mov
imul
or
in
je
push
movsl
jecxz
sub
in
cltd
cli
sbb
xor
add
lods
stc
add
inc
mov
pop
test
stos
adc
jge
cmpsb
jle
test
loope
inc
sbb
jle
ffree
and
mov
jecxz
popa
jg
mov
mov
loop
jns
and
dec
ss
jg
mov
adc
leave
or
push
adc
loope
pop
jnp
or
push
lods
pop
test
xor
pop
cmp
jno
std
mov
cltd
mov
aam
mov
add
lods
jno
and
and
imul
daa
out
cmpsb
push
mov
jg
cmc
mov
xor
imulb
sub
sahf
fs
ss
iret
push
addr16
jbe
std
xchg
movsb
aas
mov
test
insl
cmc
mov
mov
out
das
es
xchg
stos
arpl
cwtl
inc
lret
into
sbb
es
loopne
pop
lret
jle
mov
xlat
xchg
cmp
push
lea
and
lcall
jns
outsb
xor
or
lret
es
mov
into
adc
aaa
loopne
insb
dec
fildll
sub
xchg
aaa
ljmp
push
lods
jbe
inc
loop
xor
fstpl
sub
xchg
imul
jg
addr16
xchg
icebp
popa
inc
pop
and
mov
enter
jmp
cltd
lds
mov
pushf
das
mov
popa
mov
stos
sub
js
das
lcall
jge
js
xor
jg
stos
dec
lahf
push
repz
xor
inc
lds
fcmovnu
sub
mov
pop
mov
cmp
pop
ret
sahf
and
jae
pop
imul
xor
sub
mov
xchg
jae
sbb
aam
mov
lods
dec
dec
xor
mov
cmp
mov
push
test
in
lods
add
fwait
cs
jo
sbb
xchg
cmp
pop
ficoms
jbe
arpl
mov
adc
cmc
std
adc
arpl
aas
in
mov
mov
rcl
and
cmp
roll
bound
sti
jge
je
test
sarb
mov
cmp
jg
addl
push
arpl
mov
int3
mov
mov
popa
xor
add
hlt
pop
mov
orb
dec
incb
jg
push
aam
addr16
jnp
sub
sub
xor
mov
jg
outsb
jnp
jnp
cmpsb
bound
lea
nop
xor
jg
data16
xor
in
jnp
sub
pop
lret
push
xlat
xor
push
sub
pusha
jg
push
jnp
xchg
lods
mov
in
mov
or
mov
mov
pop
push
testb
add
cmp
cmp
dec
push
mov
mov
loope
pop
add
les
push
mov
imul
push
xchg
ss
incb
jbe
xchg
xchg
xchg
push
push
push
aad
cmc
enter
in
ljmp
jecxz
dec
pop
push
rcrb
jns
cmpsb
and
popa
xchg
test
sbb
lret
push
data16
jb
push
sbb
xchg
sbb
xchg
jl
jnp
and
ss
dec
mov
xchg
fwait
lahf
rcrl
add
out
in
into
adc
push
repnz
loope
push
adc
lea
xor
jno
cmp
push
pop
push
and
add
jl
jge
test
pop
mov
or
lea
notb
sahf
subl
push
jge
pop
jno
dec
mov
jge
sub
jbe
cld
inc
jnp
out
scas
mov
push
outsb
stc
scas
xor
mov
test
mov
divb
adcl
ss
test
xchg
cmp
cmc
xor
and
psubusw
cmpsb
or
jbe
lea
pop
in
jnp
movsb
cmpsl
into
and
fwait
in
loope
xor
and
or
cmp
fwait
push
faddl
mov
stos
in
mov
lods
mov
mov
fwait
pop
jns
out
jge
out
stc
in
insl
sbb
sub
xchg
cmp
daa
aas
jge
std
xor
or
arpl
call
jne
fsubrp
rcr
or
adc
test
xchg
adc
icebp
and
mov
cmpsl
jg
test
and
mov
fwait
mov
adc
arpl
push
fnstsw
push
xor
inc
xchg
and
sbb
push
outsl
ss
repnz
add
xchg
inc
stc
inc
stc
cmc
xchg
inc
mov
es
adc
lods
icebp
cmp
lret
aas
lret
loop
jno
movsb
fndisi(8087
and
addr16
sbbl
add
xchg
insb
fiadds
add
cmc
jno
insl
data16
lock
pop
push
jno
and
addr16
stos
push
mov
mov
push
insl
and
xor
sbb
cmp
mov
addr16
adc
pop
mov
mov
cmpsl
aaa
or
xchg
adcl
loop
fwait
pop
pushf
int3
mov
negl
push
aaa
and
aaa
or
insl
inc
lods
scas
outsb
cs
addb
pop
mov
xor
jmp
es
ljmp
out
movsb
int
ds
insb
test
fstl
adc
jno
mov
dec
inc
int
dec
adc
imul
push
dec
fwait
mov
in
jns
push
sbb
jge
jae
ja
enter
jmp
pushf
mov
inc
mov
sub
dec
and
imul
pop
sarl
fbstp
or
mov
jno
adc
scas
xor
das
repnz
sub
add
xor
scas
scas
dec
pop
or
sbb
jbe
aad
inc
or
vmovd
jge
insl
cmp
adc
xchg
mov
outsb
iret
aaa
and
in
mulb
and
popa
xor
push
push
and
jae
push
and
push
sub
data16
outsb
xor
inc
sub
adc
pop
into
push
and
sbb
inc
in
ds
and
xor
shll
lods
addr16
or
inc
test
stc
cwtl
test
xchg
mov
mov
in
insl
insl
ret
or
pop
lods
aas
cmp
insl
cmc
out
push
mov
sbb
jmp
adc
xorl
and
pop
test
orl
cmc
int3
jmp
addl
movsb
push
sbb
xchg
mov
xchg
cmpsb
adc
dec
dec
pushf
popf
test
jg
xchg
push
cltd
or
xor
jg
add
push
sbb
add
cmp
out
xor
mov
into
lods
inc
sbb
mov
fnstsw
iret
les
insb
lods
mov
mov
imul
sbb
lret
popa
pop
jns
push
mov
xchg
mov
gs
mov
push
ret
icebp
gs
or
jnp
sahf
mov
pop
and
sbb
mov
and
xchg
and
push
in
add
adc
gs
mov
adc
mov
pop
xchg
add
addr16
jbe
test
imul
adc
mov
shrl
sub
sarb
xchg
loopne
repnz
es
data16
loope
mov
xor
stos
mov
jle
jg
mov
fidivl
mov
sbb
fstpl
push
push
popa
dec
es
idivl
mov
int
andb
dec
andl
out
das
sbb
jge
sbb
daa
and
insl
aaa
in
pusha
mov
xchg
xchg
sbb
xchg
pop
shll
mov
pop
xchg
outsb
cmp
in
inc
std
inc
inc
arpl
orps
pusha
push
nop
stos
cwtl
movq
dec
mov
xchg
push
pop
sbb
push
outsb
mov
dec
or
jbe
pushf
das
push
movsl
int3
popa
das
fst
mov
xchg
sub
adc
data16
movsl
icebp
js
add
loope
andl
inc
push
je
jno
mov
mov
das
adc
inc
adc
or
jno
jno
shlb
stos
aas
inc
das
adc
inc
out
mov
jno
or
xlat
fsts
jmp
push
cli
pop
add
xor
mov
adcb
in
cmp
loopne
xor
in
push
mov
js
sub
add
push
popf
push
mov
mov
xor
sti
sub
jg
outsb
mov
xor
std
notb
test
push
push
cmp
mov
aad
cmc
xor
cmp
sbb
xlat
push
inc
enter
push
inc
rolb
cwtl
mov
daa
xchg
inc
orl
xlat
pop
scas
push
insl
mov
das
sub
jae
jno
std
pop
leave
push
outsl
push
dec
xor
push
outsl
inc
push
mov
jge
jle
adc
outsl
pop
and
sub
mov
sub
mov
arpl
push
inc
jns
outsb
rol
aam
mov
lcall
aam
add
sar
std
imul
imul
out
or
cmp
cmp
add
das
addr16
mov
sahf
inc
mov
fwait
mov
rcrl
xor
dec
fadds
pop
lods
es
dec
cmc
popl
je
jns
loopne
dec
daa
es
dec
repnz
test
xor
pop
xchg
sbb
jecxz
enter
push
test
std
adcl
xchg
xchg
dec
dec
pop
mov
jae
fstps
xor
aas
xchg
sti
cwtl
enter
lods
pop
mov
out
xor
or
adc
lea
xchg
inc
sbb
out
les
xor
push
das
pop
xor
lds
call
jl
and
adc
add
xchg
mov
inc
loope
fxch
push
mov
adc
dec
arpl
icebp
lahf
daa
fwait
scas
vmulps
sbbl
adcl
or
cmp
or
add
mov
std
push
test
xor
adc
push
adc
inc
es
lret
leave
jge
lret
push
cmc
dec
sbbb
rcr
cmc
xchg
jp
jnp
sahf
push
adc
sub
pushf
out
inc
movsb
push
jno
sbb
jae
popa
test
push
xor
ret
out
ret
jb
stos
stc
xchg
adc
or
in
mulb
stc
pop
sbb
and
xchg
repz
jg
enter
ds
adc
movsl
push
push
fldl
sbb
out
loope
mov
movsl
lret
popf
mov
sbb
mov
pop
je
jl
dec
add
xlat
roll
push
mov
imul
xor
stos
add
push
push
popa
std
test
mull
pop
dec
mov
xchg
shrl
sbb
push
inc
push
ror
jae
xor
aas
fiaddl
pop
ljmp
incb
pop
pop
fildll
xchg
insl
pop
jns
lahf
push
std
jecxz
cmc
sbb
mov
pop
push
subb
jge
pop
aaa
test
lods
insb
cmpsb
sahf
cmp
adc
lret
outsb
mov
loopne
fxch
roll
scas
sbb
test
stc
push
push
jnp
pushf
xchg
jb
mov
mov
ret
dec
pop
mov
sbb
push
or
jnp
cltd
insl
push
sbb
sbb
scas
pop
xorl
out
pop
rorl
into
xchg
call
inc
dec
jns
sub
xor
dec
and
xchg
xchg
insl
xor
andb
jge
in
push
dec
lea
mov
orl
pop
arpl
test
rclb
push
mov
fwait
imul
pop
sub
pushf
xor
ljmp
or
fdivrp
js
testb
cmp
mov
jecxz
test
xor
inc
loop
aam
mov
pop
ret
bound
adc
mov
in
outsb
popf
pop
stos
insl
mov
add
cld
dec
push
adc
xchg
loopne
jecxz
shrl
imul
push
jbe
in
jb
pop
cmp
xor
imul
mov
xor
mov
pslld
fsubl
sbb
icebp
gs
icebp
xlat
sub
stc
ds
dec
shlb
xor
enter
shrb
insl
or
mov
dec
popf
insl
mov
adc
test
dec
inc
mov
outsb
cs
cmp
stos
inc
sub
mov
cmp
jo
mov
into
mov
scas
clts
nop
or
inc
data16
push
out
mov
mov
loop
inc
add
xor
pop
sti
lret
jle
jnp
inc
xchg
push
and
or
aas
lea
add
daa
and
cmp
lcall
cmp
lds
cmp
and
int
mov
sbb
sbb
mov
mov
sbb
jle
inc
jg
inc
dec
mov
inc
jecxz
xor
or
jae
add
jmp
aad
in
lds
insl
xchg
mov
data16
sbb
xchg
mov
loopne
repnz
push
cltd
jae
or
push
rorb
test
aam
popf
dec
jg
sbb
outsl
lds
in
stc
jge
xchg
test
push
push
or
jno
or
xchg
push
or
xchg
ds
es
call
mov
cwtl
aam
cmp
sub
mov
adc
cmp
into
add
fldl
fisubl
sbb
push
dec
fisttpl
jmp
pop
dec
mov
repnz
imul
push
call
add
ja
aad
mov
lds
mov
jmp
push
incb
lds
dec
jnp
mov
dec
cmp
push
jae
push
jno
or
and
test
sub
or
mov
dec
lods
jae
scas
mov
inc
xchg
lds
and
dec
xor
jbe
cli
sub
hlt
push
test
repnz
je
test
iret
test
jmp
std
fsubl
lods
cmp
push
lea
leave
sbb
mov
jo
add
lret
ds
xchg
sbb
adc
or
rcl
stc
rclb
dec
idivb
xor
std
mov
in
mov
std
in
aas
je
push
jnp
test
and
popa
adc
sub
and
scas
fdivl
sub
ret
sub
sub
in
cmpl
scas
int
or
int
jbe
xorl
das
cmp
sbb
pop
fildl
ja
or
gs
inc
inc
and
pop
mov
cwtl
outsl
xor
into
sbb
repz
sub
push
push
imul
mov
mov
mov
add
fbld
cmpb
mov
mov
push
shrb
or
repz
pop
xchg
sahf
popa
int
jno
mov
daa
inc
pop
xor
repz
jns
cmp
or
icebp
jl
xchg
out
dec
lods
pop
ss
js
repnz
lea
leave
or
addr16
fsubrs
adc
mov
dec
xor
sbb
int
lea
xchg
or
jnp,pn
ja
sahf
inc
inc
sub
jle
cwtl
or
jns,pt
out
fsubp
mov
xchg
cmpsl
stc
jle
cltd
cmc
add
loopne
aaa
xchg
sti
es
lods
and
rolb
aad
mov
push
jno
cwtl
add
shrl
int
leave
repnz
push
xlat
gs
andb
fsubs
icebp
xchg
loope
pop
sub
fwait
push
xorl
jge
jae
xchg
call
and
dec
mov
fnstenv
repz
stc
js
inc
stc
enter
cwtl
int3
enter
je
jae
jno
rdtsc
mov
mov
push
push
stc
js
into
outsb
jle
xchg
mov
cmc
aas
add
jno
mov
loope
mov
shlb
cmc
sub
lods
push
jo
gs
loopne
jbe
outsl
mov
iret
outsl
mov
cmp
or
leave
add
in
test
xor
rcll
fimull
jb
popa
xor
fwait
xchg
addr16
mov
int3
std
mov
hlt
pushf
xor
and
test
push
imul
adc
mov
cmpsl
mov
insl
das
mov
dec
push
jg
inc
sub
push
das
cltd
cmpl
std
adc
addr16
test
das
mov
cmp
push
imulb
add
mov
roll
data16
xchg
lea
cmp
jo
je
popa
adc
jns
jne
inc
fyl2x
jns
inc
lods
cmc
pop
das
nop
popa
cmp
pop
jg
into
inc
sub
add
push
orl
cmp
lcall
lea
xchg
pop
aam
mov
adc
jb
movsl
jl
das
outsl
addb
aam
jg
dec
nop
mov
cmpsb
notb
inc
outsb
adc
iret
mov
pop
in
shlb
inc
jl
mov
out
sub
lods
fdivrs
test
mov
sub
flds
sub
or
and
cmpl
add
add
pop
pushf
arpl
cmpsl
outsb
inc
add
mov
push
out
aad
in
movsb
fldenv
sbb
sbb
pop
iret
add
in
pop
in
jle
mov
mov
cmc
pop
push
push
aaa
cmp
in
lret
pop
fisubrl
mov
je
and
out
add
shll
fs
insl
insl
push
jno
jge
fldl
lret
flds
xchg
mov
je
scas
cmovp
or
push
xor
sbb
mov
ds
ds
sbb
int
stc
xchg
push
push
shrb
fisubrl
xlat
outsl
push
push
stos
rcll
das
mov
push
arpl
push
dec
shrb
fiaddl
jns
xor
pop
pop
test
jnp
xor
push
xor
push
cmp
mov
mov
data16
fistpl
jle
inc
sbb
sub
push
mov
inc
mov
mov
push
inc
fimull
push
mov
xchg
cmp
jl
cmp
dec
lock
inc
scas
subb
jmp
es
movsb
sbb
rcl
xor
mull
xor
add
inc
mov
loop
push
in
iret
jmp
lods
xchg
lret
lea
stos
aad
inc
sub
movsl
or
xor
and
xor
jg
xor
dec
aaa
ljmp
pop
push
popf
lret
into
mov
cltd
loop
repz
sbb
inc
fucomi
inc
xchg
sub
in
and
andb
sarl
imul
ret
cmp
mov
xor
popa
fidivl
ja
lea
xlat
scas
pop
add
push
cmc
xchg
pop
aaa
push
ja
sbb
sbb
push
out
sub
pop
lret
aad
sbb
std
insb
cwtl
pop
inc
out
lcall
in
ja
inc
or
and
mov
hlt
xor
ds
shll
mov
aam
addb
stc
push
sti
lret
push
sbb
dec
xor
push
dec
dec
pop
icebp
pop
das
out
std
push
sbb
pop
xchg
inc
push
enterw
jecxz
push
movsl
add
push
je
mov
xchg
lret
int3
dec
in
sub
pop
sbbb
xchg
scas
jge
inc
sub
mov
or
jge
adc
sub
sbb
push
cmp
xchg
push
sbbb
es
cli
xlat
iret
inc
pop
movsl
test
cmpsb
xlat
add
movsl
call
pop
mov
in
mov
and
mov
fsubs
jnp
and
pop
incb
sti
movsb
xchg
jg
xchg
jmp
push
dec
in
inc
xlat
outsb
fstp
lret
pop
pop
in
addr16
xor
lea
dec
ja
in
shll
add
hlt
pop
addl
xor
sub
movsb
inc
into
xor
aas
push
push
add
pop
fs
mov
ret
jl
leave
dec
add
js
insl
aad
jbe
cmp
xchg
subl
cltd
fistps
mov
mov
bound
in
in
mov
std
or
imul
and
mov
mov
loopne
sbb
push
inc
push
jo
mov
lds
shr
mov
mov
arpl
stc
xchg
stc
outsb
mov
or
fadd
or
pusha
sarl
sahf
jns
sti
outsb
adc
sub
add
stos
std
and
inc
mov
jo
inc
js
int
lods
pop
adc
jae
sbb
xchg
mov
push
sub
pop
xchg
es
mov
insl
loope
dec
adc
cwtl
sbb
and
xchg
scas
test
jge
inc
mov
add
add
jns
mov
test
mov
faddl
inc
and
loop
sahf
add
cmp
jnp
inc
and
icebp
mov
mov
xchg
dec
pop
aam
sahf
mov
inc
sbb
jecxz
sahf
mov
aad
adc
sbb
enter
int
adc
sbb
lahf
pop
mov
dec
imul
orl
adc
jnp
adc
fwait
xor
call
push
pop
dec
mov
push
pushl
shrl
inc
data16
out
sub
repnz
jg
push
jo
mov
cmpsl
inc
loope
dec
mov
gs
addl
jl
add
pop
adc
movsl
dec
inc
pop
ffreep
sbb
inc
or
fistpll
ljmp
add
mov
xor
popf
sbb
mov
leave
int3
mov
push
outsb
pop
push
leave
es
xchg
push
adc
and
clc
and
mov
sub
mov
xorb
loopne
mov
adc
sbb
adc
data16
mov
lahf
icebp
push
lods
xor
je
jg
lahf
xchg
sbb
lret
lahf
jg
cmp
lahf
xchg
imull
jg
cmp
mov
and
ja
mov
inc
and
cmp
mov
mov
push
dec
add
sbb
lret
pop
mov
out
int3
push
out
push
dec
js
in
outsb
les
mov
shll
bound
cmp
mov
xchg
add
icebp
or
pop
jb
pop
aas
loopne
call
jecxz
mov
add
dec
dec
out
loope
insb
mov
pop
in
mov
adc
fldt
adc
cld
pop
inc
and
popf
adc
fstps
in
sarb
push
insl
iret
jns
imul
iret
add
or
push
xchg
pop
cmp
mov
push
mov
cmp
icebp
jns
imul
call
adc
sbb
icebp
ss
add
dec
icebp
fs
dec
dec
add
cmp
outsb
dec
sbb
repnz
ja
fadds
ja
iret
cli
imul
jg
lds
les
xchg
mov
xor
ja
mov
cmp
mov
fbld
mov
je
inc
into
mov
pushf
pop
repnz
jnp
mov
data16
jmp
dec
mov
cmc
ss
mov
pop
cmp
adc
and
ja
movsb
jge
jae
ds
cmpsb
cmp
xchg
ljmp
xchg
popf
fdivrl
mov
scas
icebp
into
loopne
inc
xor
dec
jns
aaa
or
push
cmp
add
scas
sub
pop
push
inc
jns
inc
dec
cs
rcr
mov
xchg
test
cld
mov
push
inc
mov
test
jge
rcr
popa
sbb
movsl
insl
xchg
push
add
imul
jp
add
and
lods
shr
das
aad
nop
cwtl
push
or
push
les
ss
or
adc
dec
sub
jg
jno
lahf
das
or
jno
fwait
and
addl
xchg
and
pop
xor
and
jecxz
pop
jnp
aaa
push
fwait
pop
sbb
cld
dec
mov
inc
sbb
les
subl
jne
mov
data16
outsl
or
xchg
add
xchg
pusha
add
cmp
adc
sbb
xchg
shll
xor
mov
test
jae
jnp
xor
jge
stos
insb
lahf
mov
int3
jno
jg
xor
or
jns
add
popf
add
jmp
imul
mov
lahf
rcl
xchg
rol
inc
inc
es
inc
lret
insb
outsb
aad
add
pop
cld
xor
lea
in
pop
int
xchg
lea
aad
dec
inc
mov
mov
adc
pop
push
xor
push
fnstenv
push
outsl
lods
insl
out
push
divl
mov
test
out
adc
jne
test
insl
jmp
dec
aad
mov
push
aas
test
push
sahf
mov
aaa
xorl
jne
inc
push
mov
call
les
dec
pop
fidivrs
outsl
imul
sbbb
jnp
movsb
cmp
and
fwait
aam
dec
cli
ss
ss
test
in
outsb
sahf
sbb
and
mov
xchg
and
test
or
ss
add
adc
into
and
mov
adc
sbb
shlb
mov
fbstp
jge
mov
rcll
or
mov
adc
and
jge
lea
xor
jp
fstl
push
lds
int
std
mov
mov
mov
scas
jne
pop
test
lea
fimuls
icebp
sub
mov
test
xor
scas
not
out
inc
push
iret
inc
dec
xor
out
jl
lret
xchg
jno
nop
jmp
xchg
dec
xor
mov
lock
jns
insl
cld
dec
sti
int
imul
test
stos
sub
xchg
test
mov
icebp
sbb
adc
outsl
fwait
lods
addr16
inc
fwait
stos
sahf
fnstenv
and
dec
mov
pusha
imul
pop
add
andl
jnp
push
dec
insl
cwtl
mov
sahf
xor
lock
shrl
pop
cmp
pop
inc
addr16
mov
in
test
jbe
cli
xor
pop
lcall
xor
inc
push
add
insb
and
and
test
sti
stos
lds
loop
jo
adc
jbe
leave
jae
cmpsl
stos
stc
add
jo
insl
mov
imul
insl
movsl
mov
rcr
cmpsl
dec
iret
or
cmpsl
adc
loopne
mov
sub
push
ret
sub
inc
push
int
mov
test
fadds
aaa
xchg
fimuls
shl
mov
arpl
xchg
push
popa
aad
pop
xchg
int
outsl
mov
push
jge
xchg
mov
aam
insl
jns
inc
ja
inc
sti
clc
fidivrs
jns
push
fidivl
jl
out
push
cmp
xchg
jae
cmp
dec
inc
xchg
xchg
adcl
mov
mov
mov
jns
fwait
dec
mov
jns
in
mov
sarl
cld
jns
test
sarb
add
test
shrl
pop
or
xor
fwait
mov
sub
mov
push
shrb
jae
ja
add
push
xchg
jnp
rcr
js
inc
test
adc
sahf
xor
or
outsb
pop
popa
cmpb
and
sub
sub
xchg
push
dec
mov
iret
cltd
add
stos
mov
or
icebp
jl
pop
outsl
mov
cmp
mov
jae
sub
icebp
lcall
sbb
adc
cmp
pop
shr
imul
fidivs
xor
scas
sbb
xor
mov
adc
out
imul
std
stos
adc
insl
sub
aam
and
fisubs
sti
add
test
cwtl
jg
pop
out
mov
xor
mov
and
pop
sbb
in
push
je
cmc
lea
mov
test
gs
add
add
sahf
xchg
jmp
sahf
imul
pop
sahf
or
jge
stos
adc
in
test
ljmp
popa
push
jecxz
jnp
inc
mov
sbb
test
in
aaa
jle
into
xor
setle
cmp
in
dec
sub
test
xchg
notl
imul
mov
sbb
and
sbb
mov
in
mov
add
push
mov
and
sub
es
shll
fidivrs
je
repz
outsl
aaa
push
xor
test
mul
gs
jns
in
mov
jnp
push
lret
insl
roll
shrb
mov
idivl
or
mov
push
loop
add
and
sarb
xor
js
orb
xchg
push
cmp
cmp
push
jg
imul
pop
or
adc
cmp
adc
push
rorl
add
push
popa
push
push
xchg
pop
ja
gs
push
jg
stos
xchg
insl
cmc
pusha
sub
subl
add
lds
and
inc
push
mov
mov
fxch
mov
js
jns
sahf
push
cmp
mov
frstor
xchg
xlat
imul
or
std
push
mov
test
test
jnp
test
arpl
in
cmp
test
jae
sub
inc
and
popf
mov
popa
and
lcall
enter
lds
int
mov
mov
adc
flds
jmp
jge
pop
lahf
insl
xchg
jl
sub
fwait
push
adc
xor
dec
ja
adc
outsl
cld
in
mov
adc
mov
fnsave
fnstsw
in
incl
test
lock
jb
cmp
scas
divl
and
adc
dec
jnp
add
lods
mov
sbb
lret
dec
dec
adc
sbbl
push
dec
lret
adc
call
outsb
mov
push
push
dec
sbb
rorb
insb
lods
pop
pop
out
dec
aas
sti
icebp
xchg
shrb
mov
std
cmpsl
test
cltd
adc
or
test
and
xchg
adc
or
mov
insl
cmp
test
int3
push
inc
out
stos
adc
mov
scas
mov
stos
adc
sub
ret
popf
test
aaa
fildl
in
xor
inc
sbb
and
xor
inc
push
jp
xchg
adc
jp
or
bound
jae
and
xchg
inc
inc
das
jns
mov
xor
mov
cmp
add
inc
into
pop
mov
repnz
fisubrs
jmp
gs
pop
sbb
mov
pop
push
or
dec
popf
inc
mov
jecxz
add
sti
jecxz
inc
mov
cli
sti
sar
inc
fdivp
inc
aad
jns
dec
adc
pop
sbbl
sahf
out
xor
pop
lahf
insb
dec
pop
and
mov
mov
mov
loop
or
test
test
jg
addr16
in
push
enter
test
jl
xor
out
sti
cmp
cmpsl
jl
sub
mov
stos
pushf
push
xor
xchg
icebp
jae
xor
adc
mov
js
sub
cmpsl
cmpsl
in
jns
dec
shlb
es
mov
sar
mov
push
stos
push
out
mov
incl
jmp
data16
addr16
cmp
out
shlb
dec
mulb
push
add
imul
xor
test
cmp
and
jmp
call
jno
insl
in
mov
sahf
mov
call
xor
ret
in
xchg
pop
add
stos
xchg
push
mov
and
cmpl
mov
jb
cltd
test
lods
test
addl
addr16
lods
loope
stos
jle
push
pop
jge
push
std
xlat
jae
lods
pop
shlb
mov
push
ja
ss
push
and
ficoms
test
jl
rolb
cmp
jo
mov
jl
imul
stos
in
mov
sub
ljmp
pop
test
push
jnp
mov
inc
jno
cwtl
pop
cltd
mov
repnz
jae
xlat
lds
push
xlat
jno
xor
imul
pushf
insl
lds
jp
enter
dec
ss
jg
inc
icebp
outsl
xor
das
out
js
cmp
shrl
aaa
aas
outsl
fdivrs
nop
sarl
dec
add
rcrl
into
sbb
cmp
adc
shr
pop
mov
scas
ss
popf
repnz
dec
pop
gs
mov
xchg
adc
incb
mov
pushf
adc
into
xor
sub
push
xlat
ds
push
arpl
mov
pushf
rclb
inc
mov
jns
cmp
mov
cmpl
mov
mov
mov
fnstsw
pop
xchg
pop
gs
sbb
add
sub
pop
push
fidivrl
nop
insl
scas
out
imull
lea
xchg
mov
cmp
sub
pop
jbe
sub
xorl
mov
int
pop
sbb
push
cmp
push
sbb
jnp
cmp
jae
popf
xor
push
adc
push
movsl
dec
sbb
cmpsb
rorl
int3
enter
inc
or
stos
inc
sub
dec
push
aaa
jg
and
cmp
xchg
inc
sbb
push
mov
xlat
sub
mov
cld
lret
jns
cmp
ficoms
or
test
les
or
sbb
jae
insb
pop
cs
popf
and
xor
push
and
adc
mov
dec
sbbl
es
jl
in
pop
test
out
inc
push
ljmp
mov
jns
push
cmc
jae
inc
jg
insb
lahf
add
jl
out
xchg
push
mov
sub
sbb
and
aad
scas
xor
xchg
jno
lcall
aad
imul
dec
insl
push
xchg
push
insl
rolb
xchg
pop
dec
jno
jae
xor
add
mov
lds
rolb
fcom
es
dec
and
popf
cmpsl
testl
jecxz
jns
aam
xor
fwait
icebp
inc
add
sbb
movsl
jp
dec
jae
test
or
push
into
cmp
dec
arpl
xchg
std
int
cmp
jge
in
stos
sti
fiadds
push
out
jno
shll
cmpsl
jbe
xor
xlat
idivb
xor
push
mov
test
sub
and
add
rorb
xor
xchg
lods
fs
sbbb
pop
mov
cmpl
shrl
cmp
mov
outsb
push
cmp
inc
jle
outsl
aas
xor
or
loope
sahf
adc
xchg
ja
out
cmp
inc
adc
push
rclb
mov
fst
ret
cmc
test
or
xchg
fwait
add
mov
imul
jnp
xor
lret
inc
les
cmp
sub
add
jle
insb
fstpt
test
lock
mov
sbb
and
cmp
cmp
test
jns
xor
ds
inc
adc
jns
insl
or
in
int
cmp
jns
lcall
subl
xchg
pop
cmp
gs
rol
gs
je
adc
mov
fcmovb
cs
aad
jl
cmp
sub
dec
lods
orl
xchg
jns
loope
mul
test
lea
sti
insl
inc
push
ja
mov
mov
scas
cmpsb
and
add
xchg
push
loop
or
jb
xchg
sbb
lea
es
into
dec
push
cmc
mov
lahf
movsb
sti
push
adc
add
das
ffree
sbb
subl
loopne
xor
xchg
jno
fucomi
adc
mov
arpl
pop
int
push
dec
imul
popa
in
stos
sbb
inc
imul
ds
or
push
int
outsl
pop
fistpl
and
fwait
adc
aad
cmpsl
ficomps
repz
arpl
cwtl
push
das
aad
jmp
les
scas
nop
jno
sbb
imul
icebp
mov
std
test
push
shlb
mov
pop
xchg
push
addr16
xor
cmp
mov
or
hlt
rcr
test
jl
aad
sbbb
mov
ja
push
popa
or
pop
cltd
cld
pop
test
aas
pusha
stc
movsl
xor
pop
xchg
dec
fnstsw
stc
jg
jmp
aaa
mov
adcb
xchg
stos
mov
pop
push
or
or
pushf
cmp
push
mov
dec
mov
popa
or
xor
aam
mov
icebp
sub
xchg
mov
jnp
jnp
dec
mov
push
das
into
outsl
mov
jns
add
int3
push
jmp
fimuls
add
gs
in
mov
decl
test
imul
pop
arpl
inc
xor
push
decb
stc
jnp
stos
clc
sti
test
push
push
dec
xor
rorl
xchg
es
call
adc
test
jle
and
cmp
cmp
lret
sti
xor
lea
stc
sub
sub
xor
push
test
xor
push
adc
aam
adc
jb
popa
test
jg
sbb
inc
decb
mov
divl
xchg
mov
outsl
pop
pop
int
cltd
mov
fwait
push
std
sub
arpl
out
sbb
shll
adc
jbe
adc
push
xchg
jle
ja
inc
enter
adc
addr16
pop
xchg
add
push
jmp
in
iret
push
xor
sahf
imul
mov
xchg
fldl
sub
mov
stos
popa
lahf
js
xchg
stos
sbb
xchg
and
mov
sbb
sbb
or
jbe
test
push
aam
dec
outsl
jb
arpl
test
shl
cmpsl
sbb
iret
and
jecxz
ljmp
mov
outsl
or
jecxz
push
xchg
cmp
test
fwait
adc
mov
fnstenv
cmpsb
test
pusha
pop
push
sbbb
int
mov
add
push
add
sbbl
and
imul
sbb
xchg
addr16
jmp
dec
cmp
dec
arpl
and
jae
call
fistps
rcrl
test
xchg
int
xchg
in
push
add
pop
stos
push
sbb
ljmp
mov
dec
xor
pop
scas
in
jb
add
jge
push
inc
stc
sub
xchg
arpl
movsb
mov
sbb
cmp
aas
ret
pop
imul
xor
test
ficoms
xchg
sti
je
adc
in
jae
test
test
pop
jmp
xchg
mov
test
sbb
inc
adc
jae
addl
mov
cmpsl
and
and
lahf
in
and
xchg
shrl
mov
mov
push
jno
test
cmpsb
pop
adc
pop
jno
in
aas
ljmp
add
push
rcrl
aam
lods
xchg
push
jb
std
pop
arpl
sbb
fidivrl
pop
inc
push
mov
roll
xchg
dec
outsl
jecxz
lods
movsl
mov
pop
add
pop
sbb
sbb
and
icebp
pop
mov
jns
loop
fistps
cmpsb
push
and
imulb
sbb
and
xlat
icebp
add
inc
dec
or
pop
fcompl
pop
jns
cmp
push
push
sahf
jae
mov
sub
shll
inc
add
shll
outsl
notl
dec
movsl
sub
mov
outsb
pop
shlb
sub
testl
fxam
mov
hlt
adc
and
dec
pop
jge
pop
jg
mov
or
or
xlat
and
adcl
xor
nop
cmp
imul
add
je
nop
dec
jae
jmp
dec
pushf
jnp
cmp
add
xor
mov
jecxz
mov
inc
pop
out
fucomp
repz
hlt
cmpsl
adc
rcrl
sbb
loope
and
sbb
add
lds
aaa
xchg
out
mov
mov
lds
aaa
sti
mov
loop
or
scas
sub
xor
add
pushf
jge
int3
aaa
daa
aam
adc
add
not
movsl
mov
or
mov
insl
aaa
push
stos
out
adc
hlt
stc
jle
jns
out
xchg
test
push
and
ljmp
test
sbb
ror
xchg
aas
add
lret
add
shrl
pop
cmp
std
jg
push
test
fnop
cmp
movsb
test
es
jmp
cmp
jae
test
popf
cs
rol
sub
in
jnp
pop
xchg
ja
push
sbb
xor
xchg
lcall
push
ret
push
jge
jbe
xor
and
push
stos
fs
aas
inc
mov
and
xchg
aad
fiaddl
jp
or
imul
sub
enter
int3
sti
push
jns
cwtl
mov
jp
pop
icebp
insl
pop
jae
sbb
jecxz
lret
mov
push
arpl
bound
fldt
mov
stos
dec
dec
adc
imul
push
movsb
in
push
jle
cmpsb
adc
stc
aaa
sti
ljmp
lods
loope
iret
sbbl
mov
pop
test
pop
jg
pop
loope
cmp
push
pop
incl
jno
dec
pop
add
adc
add
insl
inc
jno
push
pop
add
inc
arpl
movsb
ja
cmp
nop
adc
dec
and
jle
sub
ret
in
ja
push
movl
fbstp
push
ror
push
aaa
jae
dec
outsl
pusha
push
or
inc
jno
test
in
aaa
outsl
cmpsl
into
aaa
jle
push
jns
test
mov
xor
jmp
ficoms
add
lods
notl
les
cmp
and
push
aas
ror
out
adc
inc
aam
stos
loop
adc
insl
mov
sub
adc
imul
fnstcw
adc
mov
inc
inc
aas
push
push
cmp
out
int
ret
aas
push
cmp
cwtl
mov
push
pop
jnp
lods
rcrb
add
nop
push
lea
in
ds
rcll
pop
or
cmpsl
sar
cs
fisttpll
jns
shlb
jnp
ds
sbb
rcr
cmpsl
iret
ljmp
add
ficompl
std
push
fildll
es
pop
xlat
push
mov
cwtl
mov
stc
jns
add
mov
jns
mov
int3
ja
addr16
jns,pn
jg,pt
shll
xchg
pop
cmp
push
pop
cwtl
shrl
test
sub
or
cld
shlb
ja
daa
inc
inc
mov
popf
lcall
clc
jp
mov
pushf
pop
dec
test
fwait
jl
bound
in
fsubr
dec
add
fs
loopne
dec
mov
ret
lret
cmp
pop
mov
fcompl
pop
push
jp
outsb
jae
pushf
and
sbb
adc
push
jo
dec
inc
lcall
jnp
into
ljmp
push
insl
fisubl
mov
cmc
test
xor
jae
xlat
push
push
cmpsb
test
jae
movsl
rorb
xor
push
push
xchg
pop
in
int3
testb
inc
xchg
pop
test
mov
mov
adc
inc
cmp
test
in
addr16
and
xor
or
xor
mov
lcall
movsl
das
xor
movsl
sbb
ret
dec
cmp
pop
inc
jno
jle
and
fcoml
mov
sbb
jecxz
lods
out
adc
inc
mov
icebp
jno
pop
inc
inc
mov
push
bound
pop
pop
pop
movb
pop
fstl
xchg
fistpll
inc
lahf
mov
sub
mov
sbb
fcompl
sbb
inc
arpl
insb
add
pop
lds
xchg
cmp
mov
jb
inc
mov
dec
or
or
imul
inc
imul
and
jnp
sbb
jl
jl
stos
movsb
or
xor
mov
aam
sub
pop
push
jge
xor
sahf
adc
xor
pusha
jbe
lea
mov
cmc
adc
inc
dec
jmp
fwait
test
mov
ror
orl
in
shlb
lea
sarl
adc
imul
mov
push
cmc
lcall
or
aad
dec
inc
jl
add
jge
icebp
les
outsb
pop
dec
gs
xor
pop
xorb
hlt
and
or
xlat
test
cld
ret
icebp
inc
in
cwtl
cmp
inc
adc
ret
cmp
mov
mov
jnp
mov
or
sbb
ret
inc
cli
dec
push
repz
pop
dec
xchg
ss
decb
dec
mov
les
gs
pop
jns
arpl
mov
in
fidivs
xorb
clc
pushf
cld
sbb
or
sub
repnz
ja
adc
xor
jmp
adc
dec
push
jae
lock
scas
test
mov
rcr
fcmovb
or
cmp
sti
push
pop
ret
outsb
test
in
sbb
stos
add
fldl2e
xchg
inc
testb
fbld
pop
or
andps
jae
cld
mov
mov
mov
pop
lods
cmp
insl
pop
std
sbb
in
mov
movsb
leave
push
das
mov
cmpsl
push
js
int3
loope
stos
loope
daa
icebp
dec
mov
xchg
jae
push
subl
scas
in
or
in
adc
lea
xchg
mov
inc
adcl
rorb
ds
cwtl
and
popf
sub
push
int
lods
pusha
mulb
xchg
mov
repnz
fnstenv
pop
xchg
jbe
shll
imul
sub
pushf
outsb
jo
xchg
sbbl
test
out
rcl
xchg
and
push
xorb
xor
push
xor
push
jecxz
pop
cmp
cmpsl
and
sub
mov
push
jo
lret
lds
sbb
xorb
xor
inc
jae
movsb
mov
dec
lods
and
ds
and
cmc
mov
jp
xor
int
iret
jb
aam
push
in
stos
lock
mov
mov
lods
jp
adc
and
notl
das
xor
sub
insb
enter
lea
js
jl
push
xor
mov
jno
idivb
cmpb
jp
push
adc
add
orl
and
xchg
lock
cmp
mov
jno
popa
jno
mov
stc
sub
mov
popf
fidivs
cld
mov
xchg
lret
jne
mov
pop
adc
adc
cmpsb
jno
fstpl
stc
cltd
push
mov
adc
insb
xchg
adc
icebp
pop
imul
xor
rcrb
jmp
das
inc
mov
clc
push
fbld
jmp
jp
stc
das
inc
mov
popf
push
ds
repz
mov
fwait
jbe
xchg
pop
xor
popf
push
mov
and
push
outsl
sbb
stc
dec
push
pusha
out
popa
jge
mov
lahf
xchg
lods
js
dec
adc
lcall
stos
add
push
and
icebp
push
mov
stos
inc
roll
aam
pop
xchg
push
xchg
js
dec
adc
push
push
sub
in
xchg
lds
mov
mov
lea
add
lret
je
jmp
jp
fcmovbe
mov
adc
push
sub
pop
aaa
and
and
push
cltd
xor
jbe
ret
pop
loop
jbe
sahf
pop
sahf
mov
icebp
addr16
sbb
sub
xchg
push
mov
popf
pushf
pop
cmp
pop
cmp
or
push
cmp
cmp
mov
and
cmp
push
sbb
cmp
jno
rcrl
mov
xor
push
inc
xchg
cs
out
cld
push
jle
xchg
and
es
jle
shlb
jae
adc
mov
subb
imul
push
push
mov
insl
out
adc
xor
imul
rclb
andl
mov
out
xlat
and
jnp
pushf
or
js
xorl
push
aad
aam
enter
out
test
je
and
lea
dec
mov
xchg
adc
push
lock
sbb
adc
cld
out
pushf
and
loope
push
inc
mov
mov
mov
and
push
dec
repnz
or
dec
lock
mov
ss
mov
ss
pushf
testb
std
sbbb
clc
cltd
insl
dec
mov
pop
xor
push
fadds
pop
movb
mov
pushf
add
pop
xor
adc
pushf
cli
sbb
push
sbb
pop
repnz
xorl
dec
jle
or
pushf
lds
dec
mov
push
insl
subl
out
add
xchg
push
negb
jnp
push
fld
xor
test
repz
fs
mov
xchg
push
gs
scas
and
sbb
mov
or
and
mov
jl
push
adc
fbld
loope
sub
inc
pop
test
popl
sub
inc
movsb
push
jno
in
and
out
incb
inc
or
add
lcall
shll
inc
xlat
xor
sub
push
in
lods
imul
lods
enter
mov
mov
lret
adc
shll
loope
dec
sub
addb
outsl
imul
sbb
sbb
lahf
jp
push
cld
sahf
outsl
mov
pandn
pop
push
in
fldenv
ds
ss
jnp
popa
pop
jl
test
insl
popa
imul
fstpl
push
gs
scas
push
jns
xor
imul
cmp
inc
jb
xor
xor
lods
pop
outsl
sbb
lea
addr16
lods
aaa
mov
adc
dec
cltd
xor
cmp
rcrl
test
push
insb
jmp
jle
mov
mov
xlat
sahf
popa
mov
stc
and
scas
paddsb
dec
add
mov
dec
fcomps
dec
mov
ja
repnz
or
pop
adc
xor
hlt
test
out
jp
inc
jecxz
ret
mov
push
outsl
jle
jno
jge
push
jns
push
pop
jnp
jp
add
cmp
dec
shlb
in
add
mov
mov
insl
inc
std
fisubrs
inc
bound
dec
push
je
test
pop
int3
cmp
inc
mov
sbb
aaa
in
icebp
xor
pop
pop
ficoml
lods
loop
inc
inc
dec
jecxz
mov
cmp
cmp
in
ds
pop
das
jle
lds
inc
test
mov
aas
test
push
in
adc
dec
cltd
sbb
int
imul
mov
push
insl
sbb
scas
xchg
stos
ficoms
pusha
xor
push
insl
xor
outsl
mov
ret
orl
jge
jns
xlat
jnp
rcrl
cli
cmpl
lods
push
inc
jno
out
idivl
or
imul
jge
lds
pushf
inc
aad
sbb
into
fwait
test
aas
mov
mov
fldcw
jns
test
addl
pop
add
test
adc
xor
in
xchg
inc
mov
xor
jecxz
dec
icebp
dec
jae
popf
xchg
lods
fsts
imul
lods
xchg
insb
std
in
adc
add
sub
jae
ds
inc
jg
leave
mov
xorl
mov
das
lea
lods
shl
cmc
gs
push
xor
push
inc
xchg
in
push
std
test
push
enter
xchg
mov
push
popa
int3
jno
jno
pusha
in
adc
imul
popa
cmp
test
or
jg
push
jge
xchg
ja
xchg
dec
adc
cmp
icebp
out
int
outsb
xchg
jae
jge
dec
push
outsb
mov
fldl
mov
pop
rcll
jmp
sbb
imul
mov
jmp
jno
insl
popa
xchg
test
fwait
test
idivl
fs
mov
adc
jle
mov
push
push
dec
ds
cmp
push
dec
incl
and
adc
cs
mov
sub
add
xchg
sbbl
fnsave
aad
push
inc
jge
lods
stos
sub
ficoml
xor
sbb
push
and
jnp
and
insl
cmp
push
mov
lods
int
pop
jmp
push
std
or
pushf
push
outsl
xor
testl
fucomip
js
ja
jg
mov
test
ret
inc
sub
xor
scas
pushf
jno
push
cmc
jge
sub
cli
sbb
add
repz
adc
dec
cmpl
in
jl
insl
testl
xchg
add
cmpsb
xor
sarl
jmp
stos
test
fsubs
sbb
cld
mov
xorl
xor
mov
or
shlb
mov
cltd
or
inc
inc
test
int
xor
adc
xchg
dec
int
inc
xchg
adcl
lock
cmp
out
push
repz
pop
fistps
jge
mov
add
sbb
movsb
es
aaa
ljmp
decb
mov
cmp
mov
dec
leave
int
mov
jae
xchg
dec
xchg
mov
lret
rcrb
int3
mov
xor
popf
test
imul
int
jae
ret
imul
xor
aaa
stos
cld
rolb
shrl
mull
test
out
jns
test
test
mov
out
bound
cmc
jle
stos
and
stos
sarl
pusha
cmc
fwait
push
fiaddl
cmc
adc
stos
jg
cmp
cmc
nop
aaa
xor
mov
cmc
out
sarl
fidivrl
ss
dec
clc
xor
lahf
test
or
stc
pop
outsb
adc
and
add
mov
adc
jo
dec
cmpsl
jo
dec
outsl
push
gs
pop
sahf
pop
pop
fadds
ljmp
ret
fdivr
in
jp
dec
jp
je
push
mov
push
xchg
jecxz
jnp
sarl
arpl
mov
jns
mov
jns
fistps
scas
xchg
add
pop
add
add
ss
fldl
push
fdivrp
xorl
imul
and
nop
adc
push
cmp
subl
inc
pop
and
xchg
out
fisttps
iret
xchg
iret
das
push
jge
loop
arpl
imul
jb
cmp
mov
test
xchg
cmp
mov
call
scas
jg
cmpsl
xchg
stos
push
push
fsubs
addb
dec
xchg
lds
push
add
fcoms
pop
repz
inc
arpl
loope
xchg
inc
negl
insl
int
rcl
jb
dec
adc
mov
push
dec
js
jg
call
subl
aam
dec
inc
xchg
sysret
or
inc
and
add
lds
mov
mov
sub
lock
pushl
xchg
cmp
pop
jae
sbbl
into
in
and
pop
dec
mov
movsl
stos
mov
mov
rol
add
adc
sub
push
sbb
icebp
sbbb
push
xor
cmp
imul
cli
jmp
imul
fsubs
mov
cmc
das
jge
lds
aas
nop
dec
fimull
aad
fdivrs
xchg
popa
rorl
stos
ds
sbb
xor
mov
cs
fidivs
mov
or
inc
into
pop
out
add
stc
scas
es
sub
push
mov
xchg
and
push
jge
insl
mov
stc
xchg
push
aas
or
mov
cltd
sbb
jge
ret
adc
and
das
adc
push
lahf
mov
sub
aaa
sub
jge
imul
cmp
xchg
imul
sbb
inc
pop
or
xor
push
push
inc
push
xlat
lds
andb
mov
inc
lods
sbb
jge
push
adc
push
inc
inc
jle
mov
fdivrs
mov
jae
inc
and
in
pop
mov
rol
repz
insl
inc
cmp
dec
movsl
push
dec
into
imul
push
arpl
jp
cmpsl
cmp
cmp
stc
icebp
sub
pop
add
cmpsl
xor
add
pop
sbb
sub
jge
and
push
nop
mov
mov
sti
mov
mov
mov
int3
push
roll
repnz
inc
scas
mov
jmp
sahf
and
push
mov
xchg
mov
push
fldl
ds
dec
inc
sub
push
xor
fdivrp
cmp
mov
jbe
lds
test
test
xchg
and
nop
inc
push
loope
mov
and
adc
or
or
in
dec
popa
push
mov
jl
fsts
stos
jno
xchg
popf
addl
loope
ffree
push
loop
fnsave
inc
dec
pop
arpl
popf
icebp
cmpsl
test
repnz
xor
sbb
cmpl
push
notl
xor
dec
sbb
dec
push
icebp
xor
mov
add
push
jnp
inc
mov
cmp
jge
dec
sbb
cmp
jge
daa
icebp
jns
xor
rorl
inc
inc
xchg
stos
adc
out
aam
jb
jecxz
enter
and
mov
or
pop
push
xor
leave
int
jg
cmp
cmp
add
xchg
rcl
cmp
push
push
mov
adc
jg
scas
sub
es
ficoml
push
out
pop
jno
add
mov
pop
pop
bound
mov
fcoms
stos
bound
ret
push
mov
sti
jb
shll
lea
add
or
popf
push
les
and
and
incb
test
dec
call
je
sub
movsl
icebp
sub
jge
lods
clc
push
or
je
filds
pop
pop
icebp
sub
rolb
cld
movsl
in
test
jnp
mov
icebp
pop
scas
aad
cmp
outsb
xor
and
fldl
fiaddl
stc
rolb
data16
and
mov
sbb
push
fdivl
lods
aad
jnp
jb
dec
test
rcrl
cwtl
sbb
and
in
adc
mov
inc
pop
aas
push
aas
jno
mov
scas
stos
subb
inc
out
push
rclb
mov
cmp
add
repnz
outsb
cmp
xchg
dec
sbb
mov
inc
mov
or
cli
cmc
xor
mov
jmp
xchg
pop
xor
cmp
stos
fistpl
and
push
jge
add
faddl
sahf
push
sbb
dec
ret
fcoms
or
cs
push
aad
call
sahf
sbb
into
jge
adc
dec
mov
cmp
not
outsb
gs
std
sbb
sub
ret
mov
std
mov
xchg
in
stos
mov
dec
add
push
stos
or
aam
xchg
sub
loope
imul
pop
or
popf
jns
jl
addb
add
cltd
pop
xchg
icebp
mov
cmc
aad
mov
dec
daa
inc
and
jmp
pop
shlb
dec
mov
lahf
mov
lods
clc
decl
pop
push
inc
mov
fistps
jno
xchg
test
fs
adc
inc
mov
sbb
or
mov
loopne
lea
jae
xchg
xchg
xchg
xorl
dec
sti
cmp
test
cmp
mov
les
mov
xlat
pushf
jl
out
movsb
mov
outsl
aam
cmp
dec
in
sub
aaa
add
out
cmp
inc
call
shlb
cmp
into
int
inc
insl
xchg
push
cmp
hlt
push
lods
jns
scas
or
insb
xor
push
cmp
cmp
movsb
adc
push
lds
xchg
mov
movsb
inc
ror
cmp
iret
aad
adc
sbb
jle
rorl
mov
pop
or
mov
dec
aad
rcl
sbbl
cld
cld
ficoml
pop
loopne
repz
push
xor
inc
pop
jns
push
jno
or
adc
in
mov
pop
fildl
push
jbe
mov
jecxz
bound
daa
fdivrp
std
cmp
xor
jnp
data16
adc
inc
push
fwait
xchg
mov
aad
sahf
xor
push
test
sarl
cmp
xchg
call
jns
push
pushf
imul
add
cli
inc
sub
cmp
test
jl
pop
popl
sbb
sbb
dec
pop
jmp
mov
lods
push
sub
in
and
gs
filds
and
mov
enter
sub
mov
nop
icebp
mov
push
push
or
test
test
outsl
jmp
shl
lea
xor
adcl
leave
push
adc
jge
pop
sub
xchg
stos
push
xor
sub
mov
lods
push
and
int
add
cmp
in
inc
mov
aad
xorl
cmp
loop
popf
xor
insb
icebp
lods
add
xor
sbb
fildl
xchg
inc
xchg
xchg
lods
jle
pushf
insl
add
add
add
jge
imul
jge
inc
mov
arpl
cmpsb
mov
or
popa
and
inc
lahf
xor
fs
test
sub
and
insl
in
orl
cmpsl
cmp
xchg
inc
outsb
mov
in
push
mov
lds
mov
mov
mov
arpl
sub
adc
jle
xchg
sbb
mov
loop
stc
test
stos
jle
bnd
gs
dec
push
test
fidivrs
jae
sbbl
outsb
hlt
push
fisubrs
jge
stos
lods
ret
ficomps
aad
jnp
sbbb
in
sbb
stos
xchg
into
loopne
ficoms
shrl
out
sahf
decb
inc
sbbl
lds
in
sti
in
mov
or
adc
mov
pushf
shrl
push
out
aaa
pop
xchg
lret
cmp
cmp
pop
lods
iret
out
pop
movsl
test
jno
push
imul
outsb
xchg
xchg
xor
cmc
int
jle
in
movsl
test
imul
insl
xchg
xchg
xor
push
push
ss
adc
adc
push
imul
outsb
xchg
xchg
xor
cmc
int
jle
in
movsl
test
imul
insl
xchg
xchg
xor
push
out
add
ljmp
xchg
xchg
xor
push
outsb
ljmp
lods
movsl
test
jno
push
in
imul
sub
xor
push
insl
ljmp
pop
ss
mov
cs
dec
je
test
xchg
push
mov
xor
push
mov
in
enter
icebp
aad
sub
fldl
lea
xor
cmpsb
pushf
out
imull
icebp
scas
das
cs
dec
je
test
xchg
push
mov
xor
push
ret
xchg
enter
icebp
repz
sub
incl
lea
xor
cmpsb
pushf
out
xlat
lods
mov
cs
dec
je
test
xchg
push
mov
xor
push
mov
xor
sub
or
push
lea
xor
cmpsb
pushf
out
std
lods
mov
cs
dec
je
test
xchg
push
mov
xor
push
mov
xor
sub
adc
lea
xor
cmpsb
pushf
out
mov
mov
cs
dec
je
test
xchg
push
mov
xor
push
sbb
xor
sub
sub
and
sbb
or
loop
inc
mov
loopne
test
xor
adcb
inc
xor
adcb
jae
test
xchg
enter
call
hlt
jb
test
xor
push
cmpl
add
clc
andl
addl
sbbl
cmpl
adcl
jecxz
xlat
addl
testl
arpl
ja
mov
lods
repz
in
in
in
in
in
in
in
or
enter
call
or
cmp
xor
push
cmp
cmp
mov
scas
and
pushf
js,pn
outsb
ret
aaa
int
stc
mov
test
into
insb
out
imul
imul
les
dec
in
fmuls
and
push
sub
or
dec
imul
mull
scas
ja
sub
xchg
add
sub
cmp
stos
mov
dec
imul
sbb
dec
in
pushf
mov
sub
push
jge
xorl
jecxz
sahf
loope
pop
sbb
jbe
out
ljmp
repnz
in
mov
outsb
imul
push
aaa
jnp
scas
push
cmp
pop
sahf
sbb
lea
add
pop
js
in
xorl
inc
xchg
push
outsl
inc
fstl
push
test
cmp
cmpsl
movb
mov
push
imul
jl
mov
cmp
inc
jns
stos
hlt
popa
push
ds
adc
push
orb
adc
jb
fstps
aaa
lds
adc
repz
addr16
inc
test
rol
jl
lds
inc
std
adc
jp
mov
pop
fcompl
rcrb
std
es
mov
inc
inc
out
mov
scas
dec
mov
into
sbb
decb
jno
mov
inc
test
jns
dec
dec
and
es
jl
test
ss
xor
fwait
imul
sbb
jnp
mov
pop
jecxz
jno
add
hlt
jbe
inc
lea
inc
out
fldcw
cs
lcall
sti
lea
and
inc
push
lods
cmpb
sub
xchg
inc
push
lods
cmpb
and
mov
mov
push
sub
xchg
inc
push
lods
cmpb
dec
push
movsl
cmpb
sub
xchg
inc
push
lods
cmpb
sub
mov
movsb
push
push
sub
xchg
inc
push
lods
cmpb
sub
xchg
inc
push
xor
xchg
inc
push
lods
cmpb
sub
xchg
inc
push
lods
cmpb
inc
push
lods
cmpb
sub
xchg
inc
push
lods
cmpb
dec
push
movsl
cmpb
sub
xchg
inc
push
lods
cmpb
push
mov
mov
outsl
jle
xor
push
pop
test
push
xchg
adc
rclb
lret
int
push
mov
push
ljmp
movsl
test
pushf
scas
jle
jle
test
rcrb
test
mov
push
xor
cmp
pushf
icebp
stos
cmp
push
sahf
nop
pop
push
mov
mov
pop
incb
ds
push
xor
jle
std
popf
je
test
jge
xor
pop
lcall
movsl
test
pop
dec
into
xchg
data16
scas
pushf
fstl
mov
sti
push
ss
inc
roll
push
icebp
mov
pop
je
test
xchg
push
popf
jge
xor
push
mov
xor
cmp
flds
sahf
push
idivl
addr16
push
xor
ds
pop
je
test
xchg
push
popf
jge
xor
push
lds
sbb
cs
pop
je
sbbl
mov
sub
adc
push
imul
ds
xchg
xor
push
jle
xor
popf
icebp
jle
mov
std
dec
dec
xchg
out
sbb
ljmp
imul
mov
xchg
leave
das
cs
push
cs
ds
xchg
data16
xchg
push
popf
jge
xor
push
repz
enter
icebp
das
cmp
in
lcall
mov
mov
ss
mov
test
jno
push
imul
jle
xchg
xor
push
mov
aad
idiv
movsl
test
enter
icebp
cltd
stos
cmp
push
sahf
cwtl
lods
test
mov
ss
and
movsl
test
jno
push
imul
jle
xchg
mov
lcall
pop
xor
inc
adc
inc
xorb
inc
push
xor
xchg
jb
test
test
sub
xor
xor
je
sbb
push
inc
push
cmp
push
pop
push
test
push
mov
push
mov
jecxz
xlat
push
add
push
and
push
inc
push
aaa
push
arpl
push
adcl
movsb
sbbb
jp
jle
in
lods
push
in
in
or
enter
call
or
adc
dec
or
push
or
cmpsl
or
mov
out
rorl
daa
daa
mov
dec
call
into
dec
or
add
xchg
les
cwtl
repnz
repnz
repnz
clc
repnz
sbb
inc
hlt
cmp
mov
stos
aad
mov
lea
mov
mov
sar
xchg
sbb
cwtl
jns
int
repz
add
imul
push
or
cwtl
stos
nop
loopne
mov
cwtl
jg
subb
inc
cmp
enter
inc
test
sub
xor
jg
repnz
inc
push
mov
pop
pushf
sahf
push
repnz
adc
orl
pop
out
mov
mov
inc
sar
jns
adc
sub
in
lcall
popf
inc
sbb
imul
mov
hlt
inc
jnp
mov
mov
adc
inc
mov
mov
bnd
push
std
out
les
cmpb
sbb
push
dec
imul
jl
xchg
or
push
mov
in
test
mov
imul
pop
cmpsb
fld
lcall
xor
push
add
je
sub
mov
sub
push
sub
addr16
sub
daa
incb
ds
xor
sahf
andb
inc
imul
cmpsl
aam
addr16
dec
addl
jno
dec
dec
lea
out
mov
push
xchg
and
lret
and
frstor
aam
adc
scas
loope
inc
ss
mov
dec
pushf
pop
pop
lods
sub
int
pop
push
cmpl
pop
je
cs
xchg
inc
push
lods
cmpb
sub
xchg
inc
push
lods
cmpb
inc
push
lods
cmpb
sub
xchg
inc
push
lods
cmpb
push
mov
xor
inc
push
lods
cmpb
sub
xchg
cmp
push
push
sub
xchg
inc
push
lods
cmpb
sub
xchg
inc
push
lods
test
inc
push
lods
cmpb
sub
xchg
inc
push
lods
cmpb
inc
push
lods
cmpb
sub
xchg
inc
push
lods
cmpb
push
cwtl
popf
cmp
xor
inc
push
mov
test
dec
sub
dec
arpl
daa
sub
lcall
lods
sub
popa
cld
pop
xor
and
sahf
push
aas
shrl
leave
sub
xchg
push
notl
fwait
andl
dec
dec
out
cmpsl
insb
xchg
dec
sbb
xchg
dec
mov
fsubs
arpl
sub
mov
bswap
mov
dec
xchg
add
stos
pop
in
or
jmp
icebp
mov
pop
pop
cmpl
mov
pop
es
loope
inc
incb
loop
push
mov
popf
in
mov
cmc
xchg
adc
pop
jno
lea
mov
pop
je
daa
mov
out
pop
push
test
mov
ds
cs
mov
xor
fnsave
jno
jns
mov
jle
popa
ret
mov
out
or
sub
inc
xor
push
repnz
xchg
pop
adc
add
xchg
cmp
std
jno
addr16
xchg
cmp
or
mov
sbb
or
mov
das
dec
push
ret
es
xor
daa
and
sbb
nop
jns
pop
lods
shrb
daa
mov
fsubs
jle
mov
xchg
adc
mov
push
in
pop
mov
xlat
movsl
jmp
movsl
mov
out
je
push
jno
mov
jl
dec
cmpsl
push
jge
ja
jl
movsl
stos
enter
imul
scas
out
lods
push
xchg
push
fldl
xchg
ljmp
test
insl
sub
insl
add
enter
fwait
inc
xchg
mov
lods
mov
lds
lret
dec
jno
jmp
jg
subb
mov
pop
or
aam
loopne
repz
sbb
add
and
fistps
pop
xor
mov
rcll
aad
call
fidivrs
ds
pop
das
ret
push
test
jge
loopne
gs
in
sub
sub
imul
lods
xor
add
inc
lcall
mov
popa
xor
pop
aas
in
mov
mov
jns
in
jle
ja
loop
dec
cmpsl
cmp
and
or
cmc
insl
xlat
sti
inc
rolb
sbb
stos
add
aam
sub
ret
sub
fs
in
imulb
imul
loopne
gs
sbb
push
inc
push
arpl
mov
ja
pop
add
decl
jmp
and
inc
subl
lret
sbb
dec
cmp
adc
test
dec
dec
andb
gs
and
lds
test
out
lahf
sub
imul
mov
pop
pop
sub
pop
xchg
cmpsl
leave
adc
arpl
dec
repz
test
xor
xor
add
icebp
int
es
xchg
push
adc
lahf
xchg
and
sub
cltd
leave
mov
roll
jle
int
push
jns
out
mov
jno
bound
int
push
into
and
adc
jg
push
jg
out
shrb
inc
or
lea
sub
inc
push
lds
ret
outsb
adc
jg
jae
cmp
sbbb
jg
aas
jnp
push
and
loope
add
adc
push
nop
xchg
jmp
mov
inc
inc
pop
cmc
jb
lea
jg
lahf
es
outsl
sub
adc
push
fmuls
pop
sub
xchg
loope
test
in
mov
and
test
xchg
cmp
pop
sub
movsl
jle
xorl
std
gs
nop
push
cmp
ds
adc
mov
test
xchg
inc
rcll
xor
dec
mov
imul
push
aad
xor
shrl
test
out
pusha
xchg
jle
and
push
pop
xor
pushf
jnp
xchg
jbe
xchg
jg
push
mov
xor
aad
loop
dec
jb
xlat
int3
scas
xchg
mov
jae
jno
xor
in
jae
pushf
jge
jle
aad
out
pop
scas
jae
xor
jae
push
jp
pop
jno
lret
pop
push
push
inc
das
ja
sub
xor
js
mov
mov
lcall
jno
push
xchg
push
pop
cltd
setne
icebp
jno
jecxz
addl
test
test
pusha
imul
jl
or
mov
stos
addl
scas
mov
push
adc
aad
or
jae
mov
xchg
sub
xchg
mov
das
insl
jb
cmp
xchg
push
and
mov
jg
sub
aad
iret
mov
cmpsb
int
jle
jg
pushf
adcl
sub
jbe
mov
mov
negl
dec
inc
mov
movsl
jge
cmp
or
push
test
jnp
xor
sub
jno
jbe
shr
ja
xor
mov
cmpsb
fs
fiadds
in
test
repnz
mov
jnp
icebp
push
sbb
pop
cmpb
pop
push
pop
jns
cltd
icebp
inc
mov
push
push
aam
mov
insl
cwtl
test
dec
idivl
pop
std
adc
outsl
dec
aad
idivl
flds
jns
pop
icebp
insl
lret
jns
xchg
inc
jns
xor
jns
insb
cli
dec
out
insb
mov
incl
xchg
ja
test
ja
fs
js
stc
mov
jecxz
jl
int
pop
test
cmpsl
ja
bound
dec
cmp
ja
jnp
mov
ja
testb
shll
mov
test
cli
outsb
aad
xor
mov
dec
test
pop
mov
and
jmp
cmp
adc
xchg
fpatan
push
add
icebp
ds
sbb
subl
jbe
in
pop
je
insb
test
sbb
push
aam
incl
adcl
adc
aas
cmp
mov
mov
or
sbbl
xor
or
aam
adc
push
sbb
enter
cmp
adc
push
xor
jle
add
test
xor
push
hlt
aam
das
xor
std
stos
and
dec
xchg
cs
addr16
mov
dec
ja
out
bound
xor
addl
and
jecxz
jae
ds
fadds
scas
xor
imul
hlt
cltd
fidivs
cmp
std
lea
icebp
pushf
mov
lea
cwtl
sbb
lods
lret
repz
in
test
inc
jle
lea
push
pop
inc
inc
jle
scas
xor
push
sbb
lods
cmpsb
add
cmp
incb
in
inc
outsb
and
scas
mov
test
xor
dec
test
inc
std
pop
insl
aas
xchg
lret
sub
ljmp
in
cmp
push
rclb
nop
into
bnd
jmp
jp
cli
fnstsw
test
jne
adc
mov
in
mov
pop
sub
jae
jb
aad
in
push
sub
add
push
and
mov
xlat
mov
out
and
fcomps
sbb
insl
out
mov
xor
stc
fistpl
dec
jnp
mov
jmp
dec
or
dec
bound
jae
dec
and
movb
test
pop
insl
adc
push
cmc
adc
dec
add
mov
iret
jle
sub
mov
adc
cmpsl
jecxz
adc
pop
mov
and
pop
xor
dec
fstpl
fisttpll
iret
ljmp
inc
pop
push
push
pop
xchg
aad
inc
jno
insb
jne
adc
mov
cmpb
cmp
test
cmp
push
repz
mov
xor
nop
push
mov
rclb
dec
sahf
stos
addl
inc
outsl
stos
push
lcall
into
push
pop
outsl
jp,pt
jno
setge
inc
add
insl
int3
push
cmp
hlt
mov
adc
pop
and
pop
sti
aam
cmp
fnstcw
subb
xchg
push
mov
dec
rcrl
cwtl
pusha
adc
out
mov
xor
test
ds
adc
mov
fdivs
xlat
jo
sarl
lock
sarl
jns
jg
mov
ret
add
push
and
testb
fcomi
aad
in
insb
push
cltd
sub
dec
int
pop
xchg
cmp
pop
dec
or
inc
sbb
mov
pop
ror
hlt
out
mov
jns
push
sahf
imul
rcll
ret
xchg
jge
arpl
xchg
cmp
lds
mov
push
push
mov
fs
insl
push
js
push
jg
mov
ja
rolb
mov
lods
inc
mov
mov
divb
jns
jg
lea
ret
stos
push
int3
repnz
push
insb
aaa
test
mov
das
mov
dec
mov
outsl
or
and
dec
sub
and
xchg
idivl
adc
sbb
jnp
imul
adc
xchg
popf
xlat
sbb
ja
mov
xchg
loop
adc
xchg
jo
ret
mov
jno,pn
imul
andl
fmuls
dec
mov
inc
std
jle
mov
fmulp
add
pop
or
xor
pop
xchg
sbb
xchg
mov
sub
xchg
frstor
sahf
xchg
cmp
imul
mov
pop
lcall
pop
and
dec
and
push
je
sti
in
jecxz
adc
adc
out
fnstcw
into
push
pop
jmp
lret
sub
mov
cld
mov
jns
inc
mov
adc
out
fdivrs
sarl
jg
cmp
adc
div
xor
cmp
push
sub
ja
ror
jg
jns
jno
pop
icebp
jnp
andl
aaa
adc
sub
xchg
sbb
jl
push
ja
push
push
jno
mov
insl
sarl
xchg
xchg
mov
and
xor
in
mov
push
dec
mov
push
mov
out
jge
adcl
stc
inc
lea
and
mov
cwtl
sbbl
addr16
or
in
cmp
orl
sti
mov
cmp
arpl
outsl
les
cmc
sbb
and
dec
stc
fmull
in
jge
into
mov
mov
sahf
int
ret
icebp
jge
test
test
jbe
das
in
xor
jle
dec
nop
inc
and
jns
pop
ficoms
daa
jge
popl
xor
popa
jns
test
test
pop
or
loope
cmp
imul
mov
jnp
sbb
and
ss
int
rol
shl
insl
add
mov
adc
pop
push
mov
jge
aaa
push
cmp
jns
mov
rolb
pop
or
mov
pop
adc
in
shl
movsl
inc
xlat
movsb
jns
ss
xlat
xchg
sbb
sbb
inc
ss
fisubrl
pop
ja
dec
movsl
pop
inc
das
repz
adc
jno
pop
inc
aas
les
xchg
roll
gs
lock
ja
movsb
ds
repnz
jl
jns
jns
mov
sbb
push
pop
stos
mov
imul
xchg
cmp
inc
cld
inc
cmp
lods
movsl
pushf
mov
outsl
imul
aad
mov
push
or
aad
insl
popf
pop
cmpsl
add
mov
pop
stc
push
ret
addr16
imul
inc
pop
push
xor
leave
xchg
xchg
das
dec
jge
sahf
jnp
out
mov
movsl
loopne
js
add
addl
divl
xor
sub
push
int3
decb
push
cmp
cld
je
inc
subl
repnz
jbe
imul
push
pop
push
pop
or
andl
aas
aaa
cmp
fwait
testl
cmpsl
sarl
inc
decb
pop
insl
mov
xor
aas
mov
rclb
sub
sarb
or
ret
pop
cmpl
push
jg
mov
mov
ffree
lea
ffree
gs
in
and
mov
out
ret
mov
test
lea
test
jg
aaa
xlat
or
push
or
addr16
pop
aad
xor
insb
dec
sub
pusha
dec
movb
mov
lea
and
inc
cwtl
sti
ret
mov
dec
mov
push
int
push
test
addl
pop
int
pop
fsts
jb
or
stc
test
lret
jecxz
inc
mov
fsubl
repnz
jae
cli
sub
out
clc
push
outsb
cmp
in
mov
mov
adc
sub
or
sbb
fisttpll
and
insl
or
or
pop
mov
inc
push
mov
dec
int
pop
insl
outsl
mov
mov
les
std
shll
and
out
test
xchg
mov
fists
fdivrs
push
ds
and
popa
out
fdivs
js
jae
jb
test
jg
sbb
jns
ljmp
and
mov
and
jns
sub
inc
std
add
lea
mov
cmp
mov
inc
dec
lock
push
sahf
insl
pop
movb
sub
in
std
fst
sbb
inc
lcall
ficoml
pushf
push
and
xlat
arpl
and
cmp
lods
cmpsb
addr16
dec
dec
pop
sub
ds
sub
icebp
stc
fistl
fidivs
and
xor
push
lds
xor
lret
lret
je
daa
nop
lcall
in
push
and
lods
fcomi
arpl
mov
mov
rcrl
pop
ljmp
insl
fs
mov
fwait
push
inc
pop
shr
pop
sub
jmp
xchg
jecxz
insl
jle
stos
adc
push
pop
int3
add
lret
insl
mov
testl
aad
outsl
rolb
push
sbb
xchg
mov
dec
inc
lds
mov
mov
push
jae
addl
push
leave
mov
stos
pop
fists
insl
dec
repnz
orl
aaa
jle
dec
pop
pop
aad
jno
aam
add
test
fucomi
pushf
jno
push
push
xor
fldenv
outsl
jo
xor
icebp
or
xlat
loope
jno
xor
fsubl
cmp
ret
rcrl
adc
pushf
pop
int
pusha
xor
push
pop
and
int
fcmove
filds
popa
adcb
addr16
lods
movsl
sub
jnp
mov
sbb
out
mov
mov
pusha
into
dec
mov
push
dec
incb
or
sub
push
cmp
pop
pop
cmc
mov
pop
lret
pop
mov
in
lret
push
fs
cmc
gs
xchg
cltd
push
mov
mov
movb
mov
xchg
cmpl
aad
jnp
popf
mov
out
cmpsl
mov
push
popf
mov
inc
sbb
out
mov
add
sbb
test
xchg
and
cmpl
jnp
inc
jns
es
jns
xor
inc
ret
jns
cmc
aad
jns
xchg
lea
jns
xchg
push
ljmp
ss
outsb
xlat
ja
bound
cbtw
aaa
pop
pop
sbb
jo
pop
xchg
rcrb
mov
mov
addr16
mov
xchg
mov
jmp
mov
inc
push
jl
mov
inc
mov
push
xlat
frstor
mov
xchg
or
addl
xor
sti
mov
subl
outsb
out
sub
flds
cli
cmp
shll
xor
pop
inc
adc
cwtl
sahf
jg
mov
xchg
mov
hlt
loop
xlat
in
shrb
in
stos
mov
or
mov
arpl
inc
hlt
or
jmp
push
push
sbb
dec
add
icebp
notl
jmp
xorl
sbb
push
xchg
xorl
mov
jns
xchg
jmp
sti
jecxz
push
aaa
pop
and
inc
insb
movb
push
fcomps
test
fwait
pop
or
mov
into
data16
mov
fdivp
sbb
xchg
sub
cmp
pop
aad
mov
jno
adc
or
subb
adc
inc
rep
cli
je
call
xchg
lea
xchg
lcall
or
sbb
std
xor
xchg
aad
sub
ror
cltd
mov
mov
jge
jnp
dec
dec
xchg
mov
loope
adc
sar
push
pusha
cs
je
sti
xor
popf
int
xchg
push
cmp
filds
and
xchg
dec
addr16
cmpsl
cmp
mov
dec
sbbl
dec
popa
xor
jae
jmp
xchg
leave
inc
xchg
ja
imul
mov
cltd
negl
add
into
cwtl
arpl
insl
aad
push
mov
and
jae
mov
outsb
or
test
std
sub
jns
sub
movsl
bound
pop
pop
or
fsts
sbb
adc
and
hlt
sarl
popa
cwtl
cli
movsb
inc
arpl
mov
mov
stos
shll
ret
pusha
sub
inc
dec
scas
repnz
sub
dec
arpl
js
and
dec
xor
and
movsb
jb
lods
push
xlat
mov
sti
push
mov
cli
test
xorl
xor
int3
jno
pop
inc
mov
mov
pop
imul
fs
sub
sub
insb
mov
push
jno
insb
and
in
sub
sbb
xor
push
enter
xor
or
xchg
std
outsl
push
gs
gs
lret
xor
iret
dec
sbb
aad
iret
mul
or
pop
inc
inc
mov
sub
roll
imul
xlat
out
adc
js
xor
ret
mov
inc
insb
in
sbb
sbb
rcl
jle
mov
outsl
mov
jnp
mov
jnp
jecxz
or
jo
xlat
push
or
jge
cvtps2pd
push
mov
sbb
sub
rcrl
clc
xchg
stos
push
cli
stos
mov
inc
xor
dec
cltd
inc
inc
mov
iret
mov
ja
enter
mov
adc
mov
jns
xchg
push
jge
test
sbb
add
jno
adc
dec
orl
ljmp
and
mov
int3
sti
push
fidivrs
data16
and
mov
xor
push
pop
xor
icebp
outsl
test
push
xchg
push
mov
mov
pusha
test
call
sub
jno
subl
mov
jb
mov
call
sub
jge
pop
pop
push
gs
xor
ja
in
loopne
cmp
jg
mov
mov
out
xchg
jg
and
std
ret
inc
aam
das
arpl
add
mov
mov
out
inc
lea
xchg
stc
lea
and
dec
mov
sub
lea
out
and
xchg
or
lahf
pusha
sbb
mov
jnp
mov
jle
cmp
or
insl
mov
add
lods
decl
jae
fisubrl
popf
mov
movsl
and
sbb
sbb
cmp
sbb
xchg
incb
sbb
pop
popa
outsl
insb
xor
fdivl
loop
xor
mov
fs
popf
js
out
outsl
cmp
mov
or
call
mov
call
or
xchg
and
push
cli
dec
pop
fwait
lods
adc
daa
test
insl
ja
xchg
xor
xchg
pop
push
pop
xor
iret
pop
push
stc
pop
cmc
or
mov
xor
inc
xchg
add
sti
jne
xor
push
insl
js
mov
cltd
stc
pop
push
lcall
jno
dec
cmpsb
sub
cmp
mov
mov
cmp
or
icebp
jae
shlb
icebp
std
jns
loope
push
and
cmp
stos
jne
xchg
mov
adc
sahf
stos
test
add
daa
std
push
or
dec
push
sbb
jno,pn
inc
mov
leave
leave
fisttps
jnp
or
dec
sbb
insl
stc
fstl
jecxz
in
incl
jle
cmp
rcll
xor
pop
sbb
decl
lea
mov
pop
adc
jno
cmc
call
and
xchg
and
fnstsw
cmc
popa
insl
mov
sbb
js
rolb
xor
jns
popf
mov
sub
pusha
dec
sub
mov
and
test
cmp
lods
fs
outsl
cmp
daa
cmpsl
clc
fucom
stos
jae
cmp
leave
inc
inc
cmp
mov
adc
subl
jl
mov
adc
xlat
cltd
shrl
and
jnp
aas
out
cli
ds
in
push
test
dec
push
cmpsb
jns
mov
bound
stos
adc
xchg
and
xchg
and
mov
or
inc
dec
ret
mov
fldl
dec
or
das
mov
test
ficompl
sbb
hlt
imul
xchg
inc
adc
pop
add
push
outsl
es
dec
pop
loop,pt
jns
pop
ss
in
xchg
mov
mov
rep
or
outsw
xchg
xchg
mov
add
fld
int
xor
mov
cltd
mov
adc
xchg
test
pop
out
pop
push
inc
xor
loop
add
lods
sub
mov
sbb
callw
sbb
leave
push
out
adc
jnp
dec
xchg
aad
flds
popf
pop
pop
addr16
and
insl
jo
ja
add
push
or
gs
mov
pop
lock
lods
mov
pop
mov
push
mov
lods
jecxz
push
mov
jp
pop
fwait
push
pop
in
test
popl
lret
nop
pop
cs
adc
push
jns
inc
and
add
push
cmp
cmpsl
add
test
mov
sahf
xchg
arpl
mov
imul
inc
xor
sti
lcall
aaa
test
pop
jmp
jo
roll
filds
and
out
or
jmp
ret
mov
dec
pop
push
jg
cmc
cmp
xchg
std
shlb
mov
in
jge
rcr
inc
outsb
ja
add
cltd
push
push
jp
jge
call
stos
dec
sub
stc
fs
arpl
popa
cmp
movsl
push
in
pop
sbb
jmp
mov
inc
sbb
stos
or
mov
xor
gs
in
repnz
mov
jae
cmp
lods
jmp
add
lret
mov
sti
cmp
rorl
aad
add
adc
imul
sbbl
adc
out
insl
mov
ror
add
inc
xor
pop
inc
into
push
dec
sbb
inc
cmp
jg
pop
xchg
sar
loope
outsl
sti
insb
movsl
pop
adcl
jle
mov
and
mov
test
xor
mov
dec
push
roll
test
cmp
sub
xor
cmc
and
mov
movsb
iret
aam
mov
ret
popa
sbb
jo
or
xor
mov
pushf
jge
lock
pushf
inc
lcall
xor
xor
or
sub
aas
popa
scas
inc
pop
mov
sbb
dec
mov
mov
lahf
push
jmp
cmp
dec
mov
push
pop
sbbl
sti
mov
stos
jnp
cmc
push
xor
and
cwtl
clc
into
pop
icebp
xchg
scas
dec
cmp
push
mov
pop
sbb
or
sbb
cmp
ret
cmp
mov
dec
mov
cmp
add
aaa
add
pop
cmp
fistpl
xor
cld
jecxz
and
std
sti
dec
dec
fisubs
push
sub
inc
ss
outsb
cmpsl
aam
push
scas
add
std
pop
push
test
or
cwtl
rorl
jbe
test
push
inc
sub
mov
lods
mov
test
push
bound
cli
es
in
push
mov
pop
mov
dec
xor
cmc
lea
jle
scas
stos
cmp
sbb
repnz
xchg
out
xor
xchg
imul
testl
xor
mov
repnz
mov
xor
popf
imul
testl
xchg
test
test
out
xor
imul
divl
out
xor
adc
imul
xchg
out
xor
imul
negl
out
xor
imul
notl
out
xor
dec
imul
divl
out
xor
mov
mov
gs
sbb
jle
mov
push
inc
or
ds
adc
push
inc
or
mov
pushf
mov
pop
sbb
mov
and
mov
icebp
mov
mov
sub
cs
jl
popf
inc
xor
popf
jmp
push
push
mov
mov
xor
icebp
xchg
xchg
xchg
push
and
xchg
ret
push
push
scas
cs
mov
mov
jmp
push
push
dec
cs
jl
xchg
inc
xor
mov
xchg
push
push
lret
cs
jl
fwait
inc
xor
mov
scas
push
push
cs
out
push
add
stc
inc
test
imul
je
repnz
mov
push
out
test
mov
jmp
push
push
adc
sub
inc
xor
mov
jmp
push
push
cs
jl
popl
popf
mov
jmp
push
push
adc
das
jl
arpl
xor
xchg
mov
push
xchg
arpl
cmp
push
pop
repnz
movsl
je
jnp
xchg
jbe
xor
pop
and
orl
in
cmp
insb
mov
dec
loopne
std
leave
ja
mov
icebp
sbb
into
popa
orb
push
ss
sub
push
add
jno
call
fldl
pop
jmp
cmp
xchg
fimuls
and
lods
roll
and
insb
stc
sub
pop
dec
dec
ret
mov
out
mov
je
adc
add
mov
movswl
sahf
rolb
es
insl
sub
xor
shr
cmp
xchg
aad
adcb
insl
cmc
outsl
xchg
je
pop
fstps
les
mov
adc
jne
jno
jge
and
mov
adc
andl
inc
je
jg
mov
cltd
cmp
cmp
xchg
jmp
cmp
getsec
push
stos
pop
adc
test
in
pop
into
out
mov
adc
in
dec
jg
test
jns
sar
in
imul
adc
jl
inc
das
inc
sahf
lar
imul
je
jno
and
pop
push
sbb
lds
aad
push
scas
outsl
sbb
icebp
outsl
and
test
ja
pusha
sbb
sub
add
mov
std
jg
xor
jle
das
sbb
push
lea
jae
fdivp
adc
cmpl
xor
out
hlt
loop
adc
mov
push
lea
jnp
aas
sbb
mov
jns
enter
shl
jns
mov
sub
mov
add
xchg
or
int
repz
lods
adc
pop
sti
inc
xor
add
push
jg
and
pop
sti
or
xchg
ja
jg
push
push
insl
aad
push
sbb
push
test
adc
aad
adc
sbb
jnp
add
jmp
adc
xchg
mov
stc
mov
pop
inc
loope
lods
les
add
int3
push
pop
add
stos
mov
push
adc
gs
cmp
in
adc
lret
sbb
pop
in
xchg
aaa
add
pop
push
push
xor
jnp
mov
into
inc
dec
push
push
shll
subl
das
incb
popa
stos
xor
sbbl
inc
mov
cmp
xchg
icebp
subl
dec
cmp
fisubs
push
jno
vmwrite
gs
pusha
pop
cmp
jns
and
jg
jns
push
jns
xor
cmp
push
cmp
mov
pop
push
pop
sub
lock
or
popa
cmp
ja
xor
pop
xchg
mov
cmp
fistl
xor
and
aam
or
add
lods
test
je
jno
mov
push
xor
cmpxchg
push
mov
mov
add
cld
or
adc
hlt
xchg
push
syscall
mov
jg
out
or
shll
andnps
imul
pop
pusha
out
pop
es
sbb
int
and
jo
stos
xchg
or
and
test
mov
mov
insb
test
jmp
or
js
push
in
sub
cli
not
jecxz
xor
insl
inc
mov
es
xor
mov
insb
stos
jno
pushf
mov
add
sahf
sbb
das
push
pusha
ror
mov
jae
stos
imul
out
push
push
or
xchg
mov
outsb
add
push
or
pusha
xchg
pop
adc
push
jle
subb
push
dec
stos
shlb
cmp
xchg
inc
add
lret
mov
sub
jno
sub
icebp
jge
repz
jns
dec
js
lods
outsb
in
inc
inc
cmpsb
xchg
mov
mov
int
sub
and
popf
jmp
mov
hlt
cmp
push
in
adc
sahf
jno
push
cmp
push
xorb
sbb
pop
jae
dec
pushf
jg
imull
addr16
xchg
adc
stc
xchg
ja
xchg
cmpsl
dec
xchg
insl
negb
in
out
dec
cmp
popf
add
inc
push
jns
fstps
add
into
jge
aad
jmp
test
fmul
es
inc
push
rcrb
test
int
stos
push
jge
in
and
call
push
imul
pop
and
jle
xchg
adc
jno
pop
imul
xchg
xchg
ljmp
or
fstpt
add
leave
outsl
fisubs
or
pop
xchg
les
inc
out
clc
dec
imul
or
or
pop
mov
push
jmp
lcall
sub
fimuls
repz
push
xor
stos
and
xor
lock
mov
movsb
mov
fisubs
add
fwait
adc
lds
lds
sarl
dec
sub
dec
repnz
push
in
mov
inc
xor
xor
lea
mov
and
jmp
shr
lea
rcll
jge
leave
fsubrs
imul
sub
pushf
mov
jmp
daa
aam
mov
mov
movsb
cmpsb
and
mov
and
adc
sub
adc
jae
jb
mov
sub
cltd
and
jmp
ljmp
shl
push
xchg
ss
in
cmpsl
and
gs
testl
fldl
testb
xchg
or
xchg
arpl
lea
mov
jns
insl
xor
push
jb
jae
mov
ret
fnstenv
jl
leave
mov
sub
movsl
stc
push
dec
pop
rclb
jecxz
popf
cmp
lds
pop
jbe
push
lods
stos
aaa
xor
sbb
xchg
lret
fsubs
jge
inc
orl
pusha
push
addr16
mov
cmp
inc
sbbl
inc
mov
or
aaa
incb
ljmp
ds
stc
sbbb
push
sub
mov
std
mov
fnsave
gs
sbb
iret
inc
shl
sbb
lea
xchg
mov
or
test
or
mov
mov
leave
jl
popl
xchg
mov
jmp
addb
push
mov
fstl
adc
insb
scas
xor
cmp
pop
pop
dec
punpckhbw
or
insl
xor
sahf
test
inc
mov
or
add
dec
pop
loopne
popa
jle
xchg
xchg
xor
mov
mov
xor
adc
xor
repnz
addl
fwait
and
aad
das
aaa
cmpsl
popa
xor
push
call
insb
stos
xor
stc
stos
lods
jle
insb
scas
xor
ljmp
xchg
movsb
xor
stos
xlat
idiv
repnz
add
cli
xor
lods
sahf
inc
and
aaa
xchg
mov
sub
fs
mov
push
sbb
in
fsubrs
inc
rclb
hlt
stos
repnz
sahf
mov
out
rcl
mov
dec
sub
and
push
inc
mov
cmp
popf
inc
mov
xor
dec
pop
gs
push
sbb
pusha
icebp
jae
imul
lods
icebp
add
mov
shrb
or
repnz
pop
sti
imul
scas
jge
or
popf
das
inc
pop
rcr
xor
scas
subl
das
mov
cmpsl
push
cmp
cmpsb
or
xor
push
xor
ss
mov
aad
and
fs
mov
xchg
andl
inc
jno
mov
cmpsl
adc
test
mov
cld
in
imul
popa
xchg
xchg
adc
jb
loopne
roll
addl
jge
or
mov
scas
xor
neg
mov
popa
xchg
lds
ficoms
push
xor
jmp
ficomps
cltd
push
insl
inc
ja
mov
popa
cmp
pop
outsl
mov
xor
ret
jmp
cmp
std
ljmp
pop
cmp
push
stos
pop
lahf
add
xorl
insl
adc
call
lret
or
jno
push
imul
inc
adc
sub
into
addr16
xor
and
icebp
ds
mov
push
aas
subl
sbb
imul
jg
orl
dec
push
out
fistpl
xor
jecxz
fadd
jge
fstpl
or
lahf
jg
mov
or
xchg
or
addl
pop
jno
push
and
pop
movsb
push
xor
out
enter
cmc
jb
push
cs
mov
cmp
int3
popa
pop
pop
stos
add
rorl
jb
repnz
sbb
nop
pop
int3
and
lea
mov
sbb
pushf
inc
xchg
insl
xchg
jg
mov
mov
popf
jl
fwait
inc
iret
stos
rolb
add
and
or
xorb
push
xor
or
cmp
mov
push
sub
std
adc
mov
clc
mov
or
repz
sbb
cmp
nop
push
mov
sbb
xchg
test
lods
push
into
mov
je
ja
xchg
push
push
ret
push
loope
movsl
adc
out
sbb
push
inc
lds
bound
and
dec
pop
xor
call
xchg
adc
enter
push
fnop
xlat
nop
add
gs
xor
pop
xlat
movsb
pop
jo
inc
pop
add
orb
or
adc
notl
dec
xor
add
aad
out
inc
dec
or
mov
stc
inc
push
lea
push
push
push
sbb
sub
inc
dec
mov
cmp
jbe
xchg
std
mov
test
push
adc
es
out
xchg
les
test
outsl
push
adcb
inc
mov
loopne
out
repz
daa
cmp
sbb
sub
lahf
lock
stos
lcall
adc
mov
xor
jno
les
mov
xor
mov
or
cwtl
sbb
and
dec
stc
cs
adc
adc
divl
xor
push
jmp
sub
cld
int
pushf
fldenv
pop
push
loope
push
insl
dec
jno
loopne
adc
sub
cmpb
ss
aam
lock
sahf
adc
mov
lea
lods
je
pop
pop
out
ss
pushf
imulb
test
inc
and
and
push
jb
lds
pop
out
adcb
dec
add
jp
cwtl
jno
lret
notl
insl
fmul
lods
sub
cmp
std
xchg
sub
jle
outsb
push
push
nop
addl
es
and
and
and
mov
leave
push
inc
mov
xchg
test
mov
das
in
shll
cmp
jnp
mov
cld
popf
pop
sub
inc
pop
popa
neg
xor
call
cs
cmp
adc
sahf
xor
mov
adcl
push
jge
xchg
popf
rcrb
push
mov
rolb
push
xor
mov
jno
fcmovnu
jl
mov
or
add
mov
mov
pop
repnz
inc
push
fmull
scas
adc
lods
enter
test
jge
pop
lock
rorb
mov
lods
jp
hlt
and
add
repnz
bound
jnp
jg
mov
cld
cli
imull
and
std
pop
das
je
inc
les
bound
cld
jnp
clc
cmc
add
stos
call
and
sub
add
inc
jg
ds
out
repz
xchg
jbe
ljmp
jle
test
inc
sub
jecxz
fcompl
xchg
fcmovnu
out
xchg
xlat
push
roll
int3
hlt
sbb
mov
in
sbb
xor
fs
push
pop
mov
or
mov
mov
and
sahf
js
jb
imul
jg
or
ja
aad
mov
popa
or
andb
push
imul
jg
dec
insl
dec
and
std
pop
das
shr
movsb
repnz
div
repz
push
pop
push
rcl
lret
sbb
xchg
icebp
cs
sub
addl
ja
enter
int
pop
test
inc
add
mov
pop
mov
jnp
xchg
xor
push
push
testl
in
pop
adc
subl
insl
arpl
sarb
popf
xchg
adc
push
nop
lea
repz
loope
mov
sbb
std
jle
mov
and
lcall
push
push
in
cmpsl
and
repnz
mov
or
xchg
jo
inc
adc
or
fsubrp
out
outsb
mov
jns
pop
out
or
adc
movsb
jl
insl
xchg
in
popf
jp
dec
into
mov
xor
les
fucomp
cmpsl
das
pop
mov
or
push
push
xchg
xlat
lea
inc
aaa
xor
sarl
movsl
fadds
sbb
xchg
icebp
jg
mov
scas
xor
add
fs
out
mov
and
mov
mov
cmp
mov
push
adc
mov
jg
mov
mov
mov
dec
xchg
stos
push
dec
sbb
jo
mov
or
daa
lea
and
repnz
sbb
push
sub
shll
xchg
push
outsb
idivl
xlat
lock
pop
adc
ret
mov
fsubrl
ss
sub
jle
mov
xor
movsb
jge
dec
js
push
mov
xor
imul
mov
cmp
lret
inc
shlb
pop
inc
sub
in
sbb
je
mov
push
xor
xor
lea
rcll
jge
mov
adc
shrb
fdivl
pusha
xor
mov
ret
sub
jle
xchg
addr16
xlat
lret
adc
je
rcll
adc
movsl
stos
das
aam
xor
xor
mov
jg
insl
std
nop
insl
inc
jp
mov
xchg
add
mov
inc
dec
xor
jo
push
mov
dec
cwtl
cld
adc
jle
icebp
cmp
jecxz
xchg
sub
push
sbb
jno
pop
in
push
ja
adc
and
mov
mov
test
xchg
jg
xor
push
icebp
stos
jp
out
jge
inc
sub
jl
ss
push
pop
mov
lods
insl
jle
je,pn
push
push
aas
subl
insl
iret
cli
jo
xchg
mov
arpl
lock
and
fnstsw
push
int
and
sub
xor
xor
push
jle
push
jg
sub
mov
push
in
shll
ss
sti
jge
movsb
mov
push
mov
popf
pop
jb
jbe
movsl
jg
inc
push
stos
loop
xor
adc
js
inc
and
xchg
jae
push
adc
jmp
mov
dec
in
push
jle
out
sub
adc
mov
push
fistpl
les
andl
pop
imul
mov
mov
push
pop
les
sahf
adc
add
jge
sub
or
jmp
jno
jge
icebp
pop
mov
push
das
pop
rcll
jbe
jnp
sbb
jge
push
push
sbb
js
enter
jp
jg
jecxz
ret
sahf
outsl
insb
xchg
mov
push
add
xchg
shll
or
jge
push
dec
lods
int
int
jns
xor
inc
inc
sub
sbb
repz
icebp
xor
sub
and
adc
fs
inc
inc
mov
mov
and
or
jno
addl
add
int
dec
stos
adcl
pop
push
es
es
js
inc
add
test
pop
push
push
cs
js
xchg
push
push
mov
push
int
push
mov
in
xchg
push
xchg
mov
and
das
push
push
inc
dec
mov
xchg
push
imul
scas
xchg
push
imul
lret
xchg
push
imul
jge
in
push
add
adc
insl
push
js
mov
push
mov
push
leave
push
push
mov
push
inc
add
cwtl
push
dec
push
push
xchg
xchg
and
das
mov
and
das
mov
and
das
mov
push
xchg
mov
push
xchg
adc
jl
push
inc
xor
push
mov
daa
and
mov
clc
outsb
push
add
lods
xchg
adc
movsb
jns
push
push
fs
lock
push
imul
out
xor
inc
push
fs
lock
push
imul
stos
jns
push
xchg
gs
stc
fildll
xchg
pop
out
sub
movsl
andb
cwtl
mov
stos
jns
aam
addr16
jg
push
fdivr
jns
xchg
push
bound
push
outsb
xchg
adc
movsb
jns
adc
inc
push
in
ljmp
stos
sarb
jae
into
push
sbb
jp
test
stos
add
pop
pop
call
pop
call
and
sti
arpl
jl
mov
fldt
shr
lret
xchg
jae
sbb
push
sti
pop
aas
sub
mov
test
aas
mov
add
ja
jne
scas
and
xchg
dec
inc
and
jns
sbb
lret
inc
mov
int
mov
out
sbb
or
inc
mov
enter
ljmp
rcrb
jo
int
jg
sub
aas
inc
fbstp
insl
fstps
addl
sub
addr16
push
stc
mov
pop
dec
mov
xchg
sbb
outsl
insl
lock
stos
xor
pop
inc
cmp
and
sbb
jb
pop
mov
imul
int
mov
push
mov
mov
inc
xor
inc
xor
inc
and
pop
popa
cwtl
sahf
call
xor
sub
inc
mov
ud1
and
or
cmp
lcall
icebp
xchg
clc
xchg
mov
mov
mov
xchg
aas
and
mov
hlt
pop
stc
adc
lods
clc
push
push
xchg
and
out
pop
or
and
push
adc
cs
and
mov
je
adc
in
inc
test
xor
push
out
sahf
and
sub
icebp
std
ficomps
fmul
cmpsb
cs
xor
sub
mov
cmp
sub
push
lcall
jmp
std
push
stos
rcrl
push
adc
mov
cmp
and
inc
dec
dec
sub
jg
xor
xchg
push
push
mov
mov
lds
inc
test
mov
cmp
pop
xor
loop
lds
adc
xor
fcompl
in
push
pop
hlt
jb
mov
push
lds
xchg
pop
gs
ret
jg
push
aaa
inc
jae
add
int
mov
dec
pop
jns
or
xor
xchg
hlt
les
test
addl
movsl
sub
stc
xchg
fldl
inc
rclb
addr16
outsb
mov
xorb
test
push
std
mov
jns
mov
andl
mov
mov
jno
cmp
cmp
push
add
add
popf
sbb
movsl
cwtl
rcrb
cmp
int3
push
xchg
shll
lds
hlt
xchg
pmaxub
test
jnp
mov
daa
les
push
lds
fwait
pop
ja
icebp
xorl
or
int
add
xchg
or
repz
add
cmc
xor
je
insl
fwait
mov
int3
ja
std
push
cmc
xor
sub
shrl
loop
ret
push
mov
repz
in
in
jp
pop
stos
pop
pop
cmc
mov
and
cli
dec
fldl
jno
dec
in
push
jge
adc
push
push
mov
and
lahf
lods
jge
mov
jno
push
xor
mov
adc
sbb
xor
pop
mov
in
aam
pop
mov
jle
ja
pop
push
adc
push
nop
pop
add
pop
scas
push
jns
out
fwait
movsl
and
andl
mov
mov
mov
fsubl
das
jle
sub
aad
push
je
jns
dec
cltd
ljmp
sub
stc
ds
xchg
or
shr
mov
xor
add
or
pop
outsb
lea
in
out
insl
dec
out
insl
sub
pop
jmp
push
jle
jg
jle
and
push
sbb
pop
pop
push
jp
cmp
hlt
jle,pt
jecxz
outsl
sub
arpl
cmc
or
mov
mov
std
movsl
insl
mov
sub
push
movsl
mov
outsb
test
pop
ja
mov
pop
and
rol
enter
add
jp
pop
add
push
push
lret
out
sub
jb
test
jle
cmpsl
stc
dec
in
jb
dec
mov
xor
pop
inc
mov
insl
pop
ljmp
ljmp
sbb
lea
jecxz
pop
sti
and
dec
xor
sbb
sbb
out
aas
popa
ret
out
push
jge
jge
adcb
xor
mov
mov
stc
push
xchg
jae
jbe
nop
or
sbb
xchg
addr16
inc
push
xchg
sub
adc
call
cmp
je
or
xor
arpl
xorl
sub
movsb
mov
sub
shl
cmp
test
jns
addr16
mov
xor
push
dec
and
repz
jae
roll
xorl
ret
or
cmp
xchg
xchg
ficoml
adc
imul
test
push
mov
jmp
mov
scas
mov
aad
mov
jecxz
add
add
iret
push
test
jb
decl
mov
adc
mov
xchg
jbe
sahf
ja
rclb
push
aas
fstpl
jns
cmc
out
lock
pushf
sahf
add
cmp
aaa
mov
xchg
mov
lock
addr16
jbe
add
mov
je
jge
das
out
or
jge
fucomi
pop
std
xchg
test
xor
mov
imul
out
or
cmp
popf
js
and
scas
push
adc
in
adcl
or
dec
pop
pop
in
inc
and
jae
insl
faddl
je
jns
aad
jle
ret
adcl
gs
insl
popa
jg
mov
jno
movsl
movsb
xlat
std
outsl
xor
popf
sahf
rol
add
xor
adc
or
sbb
enter
cmpsb
aad
jle
loop
mov
push
add
cmp
cmp
movsl
jg
movsl
mov
out
or
test
cmp
pusha
addr16
sbb
push
rol
icebp
adc
into
lret
das
inc
mov
mov
sti
cli
out
rol
insb
jne
adc
cmp
push
fadds
push
or
mov
fistps
ret
pop
decb
aas
dec
cmpsl
or
xorb
mov
and
test
mov
mov
cltd
push
jnp
orb
bnd
in
cmp
cli
orl
test
add
shll
insl
leave
jae
or
int3
mov
add
inc
and
int
sar
mov
mov
mov
sbb
or
or
jg
aas
mov
adc
icebp
cs
inc
ds
cmp
addr16
xchg
xor
or
push
mov
cmp
jle
push
mov
sub
mov
sbb
add
fisttpl
loop
xorb
sub
std
xor
dec
sbb
mov
push
xor
cmp
shll
outsb
cld
clc
insl
sarb
xchg
adc
push
mov
jge
xchg
dec
pusha
outsb
js
stc
xchg
cltd
es
pop
pop
pop
xchg
out
sbb
pop
push
pop
inc
ds
pmaxsw
outsb
mov
push
jg
sbb
pop
rcrb
cs
pop
pop
mov
cmp
jb
dec
orl
nop
xchg
and
sbb
loopne
insl
cmp
jno
push
push
and
pop
aaa
out
push
xchg
and
sahf
in
stos
push
ret
dec
loop
jge
insl
mov
adc
jp
or
ret
pushf
inc
mov
negl
shlb
pop
adc
jno
insl
add
out
xor
aaa
in
popa
push
aad
in
sbb
push
jae
faddp
loop
in
outsl
daa
cs
cmc
insb
mov
loopne
push
or
dec
sub
push
dec
cmp
lods
mov
and
aad
out
jge
mov
mov
cmc
dec
adc
inc
int
cmp
jge
xchg
ret
inc
sub
and
sub
jmp
pop
xchg
inc
movb
out
pop
incb
push
lods
xchg
es
xchg
enterw
push
movsl
ljmp
in
std
add
movsl
test
mov
cmpsb
lods
psubq
xchg
pushf
int
movsb
imul
xchg
xchg
enterw
push
movsl
ljmp
std
add
test
mov
psubq
xchg
adc
out
pop
mov
push
sub
add
xchg
movsl
enter
push
in
xor
add
inc
mov
movsl
subb
cmpsb
out
mov
pushf
ret
mov
movsl
xchg
enter
nop
xchg
push
ljmpw
movsl
cs
lds
cs
add
movsl
test
or
movsl
subb
adc
aam
lods
push
push
pop
out
ljmp
es
push
sub
mov
das
cs
xchg
pushf
scas
jp
imul
xchg
mov
sub
lods
mov
arpl
push
cmpsb
pushf
out
adc
add
sahf
or
aaa
inc
add
enter
cmpsb
pushf
out
lods
mov
or
cmp
and
mov
clc
and
sub
mov
scas
cs
xchg
int
iret
es
movsl
test
sub
imul
movsl
pop
incb
in
push
inc
add
xor
inc
lcall
pop
loop
psubq
xchg
int
iret
out
movsl
test
jno
push
imul
xchg
xchg
inc
push
movsl
enter
push
in
xor
add
cs
inc
mov
movsl
subb
cmpsb
lcall
out
adc
test
imul
sub
jae
repz
jge
push
addb
sbb
adc
push
cltd
xchg
sbb
rcrl
sarl
add
clc
sti
and
sbb
sti
fs
pop
test
js
mov
mov
jecxz
xlat
add
imul
and
inc
arpl
es
dec
mov
dec
repz
daa
dec
adc
dec
xor
dec
push
dec
xchg
push
test
xchg
push
enter
call
push
hlt
push
sub
push
dec
push
xor
push
push
je
cmpsl
data16
es
sbb
inc
push
cmp
fs
pop
push
test
js
mov
push
mov
jecxz
xlat
push
add
notl
and
pop
push
inc
push
aaa
xor
push
repnz
mov
mov
mov
mov
movsl
dec
mov
cmp
out
push
sbb
fwait
push
xchg
in
scas
lds
js
inc
mov
cmpsb
lods
movb
push
in
mov
les
xchg
mov
mov
xor
inc
and
es
pop
jae
jns
test
std
cmp
push
in
or
lcall
stos
cs
xchg
int
xchg
je
mov
pop
mov
daa
pop
aaa
inc
dec
decl
fldl
mov
push
or
xlat
scas
and
pushf
push
xor
aam
mov
dec
nop
aam
pop
jge
jg
in
shlb
mov
add
lcall
xchg
or
fs
test
sub
push
sub
jno
pop
push
es
pop
lret
add
aam
aaa
jecxz
mov
jle
test
jbe
daa
pushf
xchg
icebp
add
xor
jbe
imulb
cmp
insl
sbb
sub
and
lea
sbb
mov
mov
cltd
jns
push
movsl
js
aas
mov
or
jmp
xchg
stc
fwait
mov
pop
decb
inc
or
insb
add
in
push
aad
sti
dec
popa
iret
xchg
out
mov
inc
test
cmp
add
dec
push
and
mov
push
push
push
mov
inc
xchg
in
daa
sti
pop
push
insb
inc
test
in
and
cmp
out
mov
sbb
inc
mov
out
iret
add
hlt
push
in
lcall
add
je
mov
or
int3
push
cmp
and
ds
mov
add
je
sbb
sbb
jle
mov
mov
adc
pushf
adc
xchg
lret
popa
sub
xor
xrelease
push
aaa
adc
push
cld
std
or
xor
cmp
shl
xor
lret
push
mov
cmp
lods
add
dec
inc
xor
in
mov
aam
mov
lsl
jno
push
lds
sti
sbb
sbb
out
dec
sbb
imul
push
repnz
repz
inc
push
hlt
cmc
outsb
xchg
or
shrb
xchg
fnstcw
aaa
adc
lahf
out
mov
imul
nop
jno
push
arpl
lods
hlt
xchg
scas
fistps
ss
call
push
pop
xchg
imull
mov
loope
loope
popa
bound
xor
mov
jno
sub
jnp
mov
and
mov
rorl
nop
ficompl
out
hlt
mov
adc
scas
fisttpll
push
ss
or
pop
jae
cmp
inc
pop
orb
inc
adc
dec
pop
xor
subb
cmc
dec
jmp
test
dec
lods
pusha
fsts
mov
dec
mov
adc
lods
ss
lea
mov
sbbl
cmp
stos
push
sub
mov
gs
sub
outsl
mov
sub
jecxz,pt
push
cmp
mov
mov
lods
push
cld
movsl
dec
pop
in
lods
fs
sub
mov
cmp
xor
inc
push
lods
cmpb
sub
xchg
cmp
push
push
sub
xchg
inc
push
lods
cmpb
sub
xchg
inc
push
lods
test
xchg
inc
push
lods
cmpb
sub
xchg
inc
push
lods
cmpb
inc
push
lods
cmpb
sub
xchg
inc
push
lods
cmpb
push
movsb
popf
cmp
xor
inc
push
lods
cmpb
sub
xchg
dec
adc
movsb
push
push
sub
xchg
inc
push
lods
cmpb
sub
xchg
cmp
push
push
sub
xchg
inc
push
lods
cmpb
sub
xchg
inc
push
lods
test
xchg
inc
push
mov
stos
jge
cmp
add
adc
addr16
pop
lea
outsl
jle
xchg
dec
out
and
mov
addr16
jno
jge
xchg
lock
hlt
aad
mov
dec
push
mov
mov
ss
leave
divb
outsl
cwtl
repz
jnp
mov
jmp
jns
pop
aaa
iret
adc
test
out
mov
bound
push
bound
in
in
cmp
sahf
out
addl
lea
mov
mov
in
push
mov
push
ljmp
push
inc
dec
js
inc
push
test
xchg
loope
pop
mov
outsb
stos
cmpl
sbbl
outsb
stos
dec
mov
pop
in
out
jnp
pop
mov
pop
out
test
mov
pop
in
mov
arpl
sbb
adc
popa
xchg
std
insl
and
call
mov
clc
test
pop
inc
mov
lahf
in
frstor
sbbb
xor
pop
jmpw
jnp
aam
pop
and
mov
push
mov
mov
inc
xor
mov
push
aam
mov
cmp
cmp
xor
aaa
push
sub
incb
shlb
call
xchg
aam
push
jl
push
dec
push
mov
add
push
lods
sub
sahf
nop
and
and
mov
mov
data16
inc
data16
mov
mov
mov
jmp
xchg
mov
jle
out
dec
orb
incb
jg
lahf
jl
out
mov
stos
push
inc
mov
sub
push
xchg
mov
jge
test
xchg
push
xchg
xchg
xchg
xchg
inc
push
das
pcmpeqb
jle
sbb
jle
stos
cmpsb
jle
js
out
sbb
insb
inc
movsb
jle
scas
jle
test
mov
pop
ljmp
fsubrp
jbe
mov
jbe
push
jbe
push
jbe
push
jbe
mov
in
and
test
lds
mov
pop
cmc
cmpsl
pop
mov
xchg
xchg
ljmp
sub
jbe
pop
dec
dec
push
adc
insl
adc
xchg
jg
lods
outsb
xchg
mov
stos
aas
mov
in
nop
icebp
cmpb
insl
mov
jge
sbb
mov
mov
lods
add
divl
outsl
jmp
mov
and
sub
out
pop
das
and
cld
push
sbb
std
xor
iret
push
js
test
lea
mov
rcl
cmp
fwait
add
and
jg
mov
sub
pop
mov
mov
insl
jg
andb
insl
jp
xlat
sbb
repz
jns
iret
fsubl
ss
test
insb
cwtl
insl
sarl
push
pop
stos
mov
mov
std
stos
mov
sub
cld
shrl
insl
pusha
jae
or
idivl
rorb
aaa
or
outsl
das
jno
jns
mov
jge
pushf
mov
adc
jno
fstpt
popa
push
popa
call
int
popa
insl
jp
loop
pop
icebp
adc
mov
push
push
and
jnp
mov
or
mov
cmpsb
push
inc
jno
mov
lret
test
ret
outsb
xor
dec
push
mov
js
cli
push
test
insl
cmp
pop
push
mov
or
je
repz
mov
push
test
subl
iret
xchg
repz
cmpsl
push
xor
adc
arpl
lods
clc
mov
in
loopne
inc
dec
cmc
in
addl
jmp
pop
or
testb
pusha
pavgw
jae
pop
jl
jnp
int
sub
icebp
loop
pop
mov
xorl
iret
or
fisubl
pop
jg
call
adcl
call
pop
add
and
call
mov
imul
xor
push
or
cltd
inc
jg
ds
fnstsw
aam
push
std
roll
test
leave
jb
test
popa
jbe
pop
pop
insl
bnd
arpl
icebp
xchg
cmpsb
push
jnp
mov
sti
push
cmpsb
dec
jns
adcl
insb
jns
add
jl
out
cmp
jnp
scas
adc
out
sub
inc
sbb
cmc
sub
and
cmp
jg
cmpsl
jo
jg
pop
dec
fwait
popf
daa
daa
push
add
loope
pushf
testl
pop
je
sbb
dec
jne
jg
inc
push
gs
dec
std
insl
jg
scas
and
mov
sbb
mov
adc
fwait
inc
lods
into
pop
imul
inc
je
pop
inc
mov
jg
fidivrl
push
shll
lods
testl
add
mov
std
mov
scas
inc
out
adcl
loopne
dec
adc
gs
aam
cld
popa
push
ja
cmp
lods
icebp
sbb
insl
stos
sti
loop
mov
xor
mov
push
mov
xor
bound
sbb
imul
jns
andl
insl
cmp
push
mov
imul
gs
pop
adc
scas
mov
xorl
or
push
sbb
push
adc
mov
popf
gs
pop
movsb
sub
int
cmp
and
addb
mov
cmp
lods
mov
pop
sbb
cmpl
sti
pop
inc
mov
dec
sub
in
outsb
sub
movsb
jmp
mov
inc
jg
or
pushl
lahf
inc
xor
insl
stos
jmp
sbb
hlt
xor
cmpl
mov
pop
rep
xor
adc
repz
in
cmpsl
mov
cmp
cmp
lds
inc
hlt
sub
test
add
rorb
xchg
cmp
mov
mov
adc
mov
int3
xor
popf
sbb
loop
xor
les
fstpl
mov
ficoms
repnz
mov
cmp
xchg
jmp
push
lock
sbb
add
enter
inc
dec
jp
push
fwait
mov
fldt
cmc
addl
rclb
dec
cmp
loope
mov
clc
mov
push
pop
les
xor
dec
das
push
int3
in
int
xor
add
in
loope
inc
loope
filds
icebp
imul
cmp
push
xor
mov
outsb
xor
jg
push
jg
pop
js
pop
pop
fistpl
scas
or
adc
shlb
push
xchg
jmp
sub
out
sbb
lahf
mov
movsb
sub
jmp
xor
dec
mov
je
jae
inc
mov
jb
int3
push
scas
jb
out
stos
jmp
cmp
sbb
sub
sbb
xchg
lret
jle
pusha
push
xor
xlat
jl
and
popf
sub
xor
cmpl
cmp
and
jbe
imul
xchg
cmp
xchg
push
cmp
pop
enter
stc
ljmp
sbbb
inc
mov
mov
test
test
jae
je
sbb
mov
in
xchg
jmp
adc
xchg
in
dec
cmp
pop
inc
ret
rclb
imul
aad
xor
sub
inc
mov
insl
dec
addl
lret
stos
add
add
mov
lds
fistps
mov
mov
fnstsw
push
mov
cmpsb
lods
cmpsb
push
xchg
push
popf
testl
xor
icebp
out
xlat
les
imul
rcrl
pop
enter
jmp
mov
std
test
add
je
arpl
mov
and
js
adc
mov
movsl
sub
mov
sub
cld
addl
loop
add
cmpsb
pop
dec
pop
mov
mov
lcall
jg
or
push
inc
repnz
dec
scas
jnp
mov
jg
adc
cmpb
popf
add
cmp
in
lods
hlt
lods
adc
mov
std
pop
xor
pop
popf
lds
loope
mov
xlat
pop
sub
scas
pop
sub
wbinvd
mov
and
dec
loop
xchg
scas
inc
lret
add
mov
cmp
xor
xchg
lods
mov
sti
push
push
repz
ds
movsl
ljmp
fmull
fs
pop
adc
cmp
pop
aas
lods
xor
pop
fwait
mov
xchg
dec
shlb
nop
out
std
inc
test
xor
stos
push
dec
jg
loope
cmc
sbb
add
outsl
stos
sbb
sbb
adc
in
or
pop
push
ret
pop
aaa
cmpsb
test
cmp
ja
push
cmp
data16
push
daa
mov
sahf
ja
out
jns
adc
jle
pop
mov
outsl
insl
jmp
and
mov
jle
gs
insl
jo
jns
mov
add
pop
mov
stc
stc
mov
mov
push
pop
movsb
inc
das
xor
jl
and
add
push
jg
es
jnp
push
jae
cmp
lcall
out
jns
adc
jle
inc
jns
div
lahf
mov
adc
sub
repz
inc
push
and
jns
fbstp
push
add
inc
gs
jge
push
in
and
mov
fs
scas
aaa
push
pushf
enter
sahf
lods
mov
sti
repz
mov
push
jg
cmp
sahf
cmp
and
xor
jo
je
jge
jmp
aas
and
add
aas
push
imul
xchg
movsb
faddl
xlat
ffree
sub
rcr
orl
es
je
mov
dec
inc
movsl
lods
xchg
leave
jge
lcall
cltd
mov
movsb
daa
popa
add
push
xchg
mov
insl
or
int
loope
mov
imul
ja
mov
call
roll
jbe
std
imul
xchg
jns
mov
jb
loop
push
sbb
pop
cmc
in
ss
sti
movsl
mov
mov
out
lds
nop
cmpl
lds
xlat
ja
scas
mov
pop
push
int
icebp
mov
xor
rcll
jb
push
popf
cmp
out
add
lods
test
pop
push
jno
addr16
inc
sbb
pop
jbe
filds
fimuls
sbb
gs
loopne
loope
cmp
add
out
push
adc
les
jno
jg
sahf
jns
lds
std
iret
daa
outsl
sahf
jno
jnp
xor
shrl
pop
icebp
jmp
push
push
test
mov
pop
add
and
xor
or
mov
inc
fisttpll
jae
add
xlat
xor
cbtw
jnp
pop
jl
sbb
test
outsb
mov
in
or
icebp
insl
xor
pop
sub
incl
and
scas
push
add
test
lods
stos
in
sub
daa
sub
movsl
fimull
inc
addr16
aaa
add
lcall
mov
cmpsl
mov
sbb
sub
push
and
sahf
addl
or
and
call
addr16
mov
push
pop
adc
pushf
push
mov
jb
decb
shrl
scas
pop
mov
mov
adc
xchg
pushf
movsb
push
mov
movsb
xor
ja
clc
add
imul
xchg
imul
mov
mov
and
ljmp
adc
jp
in
jecxz
sbb
pop
insb
cmp
inc
push
xor
out
xchg
push
je
sahf
scas
fiaddl
jmp
imul
jl
pop
call
push
insl
rcll
dec
mov
je
add
leave
push
mov
mov
sub
repnz
es
and
push
adc
scas
mov
xor
pop
jmp
sbb
repnz
mov
bound
push
sbb
xor
flds
sub
int
pop
mov
fucomip
cli
mov
and
aas
mov
cli
xor
fistpll
push
pop
jecxz
addr16
lods
das
mov
add
push
xor
pushf
mov
cwtl
loope
sbb
testb
sub
and
dec
loopne
sub
pop
ficoms
out
sbb
aam
pop
xchg
and
push
jp
or
in
iret
sarl
mov
addr16
pop
sbb
pop
xchg
mov
imul
popf
inc
das
in
mov
imul
jge
mov
mov
mov
mov
xchg
pop
lds
mov
sbb
push
out
dec
dec
mov
pop
inc
les
adc
subb
push
dec
inc
adc
movsb
sub
jmp
nop
add
popf
adc
incb
mov
cmpsb
add
dec
insl
andl
fistpl
push
and
movsl
dec
fdivrl
cltd
xchg
mul
je
sti
jge
mov
loope
adcl
xchg
jae
push
aaa
int
push
push
sub
ret
mov
pop
push
mov
mov
lret
xor
lods
or
push
aam
xor
stc
stos
scas
push
and
in
jmp
out
xchg
imul
add
mov
sbb
pop
add
es
push
pop
push
icebp
xchg
je
addr16
mov
ret
icebp
xchg
cmp
loopne
xor
mov
push
aaa
outsb
inc
cmp
mov
and
add
mov
jno
xchg
cmp
pusha
fistpll
in
stc
sbbb
xor
inc
sbb
rcr
out
pop
lods
xor
inc
inc
xlat
mov
add
ficomps
dec
faddp
adcb
loop
aaa
pushf
arpl
push
gs
add
cld
inc
inc
lret
adc
mov
mov
mov
jl
pop
popa
scas
mov
popa
inc
pop
xchg
mov
sarl
push
inc
jge
sbb
dec
add
int3
loop
xchg
pop
mov
or
movsb
mov
in
loope
cs
push
dec
xor
imul
test
cmp
sti
stc
pop
pop
mov
mov
shl
pop
push
shrl
jns
mov
mov
out
in
cmp
fstp
inc
or
jp
ficoms
mov
jnp
xchg
popa
sbb
dec
xchg
jns
in
and
pop
dec
inc
insl
stos
mov
inc
std
aaa
insl
mov
mov
mov
jnp
ja
mov
jnp
imul
xlat
rorb
xchg
push
std
push
xor
popa
mov
xor
push
imul
xor
jns
jl
lahf
jle
xlat
and
addl
push
sub
xchg
scas
cmc
cmp
adc
cltd
sub
cmp
leave
aaa
jge
lds
int
dec
lods
cmp
ds
movsl
js
sub
addl
sub
jns
or
jno
cltd
movsbl
mov
inc
bswap
popa
clc
inc
repnz
roll
in
jb
lods
in
pop
push
outsl
cmpsl
mov
pushf
aaa
cwtl
dec
repz
dec
sub
cld
aas
loop
xchg
scas
jnp
cli
imul
stos
in
mov
push
lods
ret
sub
fisubl
or
mov
or
insl
xor
add
rol
jge
add
pop
dec
stos
push
lods
shrl
and
jmp
add
xchg
or
imul
push
sub
push
out
xchg
fstps
jecxz
aad
jae
push
inc
inc
mov
mov
sub
inc
pop
repnz
push
push
mov
clc
insl
icebp
mov
aas
mov
cmp
pop
xor
xchg
xchg
sbb
andl
push
stc
pop
xchg
and
sub
xor
mov
decb
xchg
imul
push
sbb
jnp
xor
push
xchg
xchg
jae
push
jl
imul
out
lods
sub
mov
lods
out
stc
adc
xchg
xchg
push
push
and
xchg
data16
xor
pop
cmpl
inc
inc
xor
arpl
jg
jae
out
out
push
scas
jae
ljmp
xchg
push
push
mov
inc
fdivr
push
daa
fisubrl
ficomps
cs
pop
inc
popf
outsb
nop
jmp
cs
dec
push
lea
mov
cmc
mov
inc
dec
icebp
dec
aas
push
push
outsl
fadds
push
pop
push
mov
aad
pop
mov
xorl
xchg
in
in
icebp
mov
dec
push
lea
movsl
push
sub
in
jecxz
push
in
insl
ffreep
data16
fildll
stos
pop
jge
mov
pop
add
sub
push
and
pop
dec
mov
ja
jb
out
push
mov
pop
test
xchg
jns
or
xchg
lds
add
scas
mov
lods
xchg
in
push
outsl
icebp
flds
inc
adc
jecxz
int
or
add
cmc
xor
xor
adc
fwait
sbb
popf
loopne
int3
add
es
pusha
outsb
mov
add
lret
and
lock
jl
in
and
shrb
leave
data16
nop
popf
dec
sbb
inc
add
insl
mov
push
cmp
in
mov
out
sbb
ret
icebp
nop
xor
cmp
fdivrs
sbbb
loope
adc
xor
lods
das
std
jno
cmc
xor
inc
xor
cld
sahf
icebp
sub
push
adc
push
pop
out
pusha
sbb
lea
outsl
gs
pop
mov
mov
mov
mov
outsl
push
jnp
dec
cltd
xchg
stos
fs
rolb
loop
imull
xadd
jg
je
lcall
lods
jl
cmp
xor
inc
jo
pop
mov
cmp
jbe
cwtl
cmp
cmc
jge
cwtl
dec
mov
or
cld
or
push
bound
add
sub
mov
jecxz
cli
cld
cmp
jge
push
push
xchg
out
movsl
inc
pop
sub
push
out
mov
inc
push
pop
push
movl
outsl
xchg
xchg
lods
std
movsl
jl
mov
mov
mov
mov
cmp
stos
jl
cs
stos
xchg
ret
imul
movsb
xlat
ja
cmpsb
movsb
js
pushf
shl
mov
outsb
cld
test
mov
xlat
lahf
rorb
in
xorb
jecxz
stos
mov
xchg
add
jns
sbb
fstps
std
dec
mov
orl
cmc
pop
arpl
loope
xchg
push
jg
in
insl
mov
pop
mov
aas
pop
add
xorl
ja
mov
dec
jmp
jno
movsl
add
outsb
adc
cmpsl
lea
cmp
mov
or
push
fistl
popf
adc
push
movsb
fincstp
scas
push
dec
fwait
xchg
vpmaxsw
cld
test
push
push
into
imul
loopne
sbb
dec
adc
push
sbb
cmp
and
aad
addr16
cmpl
pop
into
push
inc
outsl
je
fisubs
decl
mov
inc
adc
insl
jge
and
test
lret
sub
adc
jg
sub
xchg
mov
insl
aas
ret
jg
mov
sbbl
sti
frstor
and
mov
lea
jno
dec
bound
or
mov
dec
cmp
adc
ja
lds
jge
cmpsb
push
mov
iret
lea
push
xlat
clc
pop
jg
lea
loope
int
jmp
adc
push
cmp
imul
cltd
xor
add
xchg
xchg
test
sbb
mov
scas
loope
sbb
mov
jb
cwtl
data16
pushl
mov
dec
rorb
ret
dec
in
mov
in
test
mov
faddp
push
and
mov
clc
add
sbb
mov
pushf
xor
repz
dec
jle
jge
js
xor
xor
fdivrl
push
cmp
sti
js
loope
pop
cmp
jmp
xor
ja
ljmp
mov
mov
int3
push
iret
mov
dec
xor
and
adc
insl
aaa
ror
inc
mov
inc
xchg
mov
cmpsb
bound
addr16
aad
sar
push
pop
mov
and
or
jmp
xchg
gs
jecxz
xchg
int
pop
fisttpl
mov
jnp
or
rolb
or
aaa
lods
icebp
ja
and
loopne
inc
mov
jns
pop
dec
pop
lcall
or
test
pop
addr16
mov
out
sahf
mov
stos
addr16
mov
adc
fdivl
bnd
out
sbb
fs
mov
xchg
xchg
push
js
mov
insl
mov
push
pop
fists
rcl
cmpsb
push
dec
imul
xor
pop
lcall
add
jmp
stc
dec
push
or
mov
aam
push
push
pushf
popf
shlb
xchg
push
imul
add
mov
sub
add
pop
std
repz
jg
push
lret
xchg
inc
jle
sub
mov
xchg
jns
pop
dec
xchg
and
mov
mov
cltd
push
dec
mov
test
mov
push
mov
out
adcl
mov
xorl
ret
pop
push
rorl
pop
movsl
mov
dec
lcall
ficompl
push
aam
dec
jle
pop
and
cmp
ret
movsb
test
movsl
push
dec
js
arpl
andb
out
push
xor
push
jg
dec
fsubrp
test
pushf
sbb
and
push
push
mov
leave
inc
jle
push
dec
arpl
fcomp
inc
push
xor
scas
jno
pop
mov
mov
cmp
pop
xchg
shll
ret
stos
rclb
and
xchg
repz
bnd
xchg
sub
test
outsb
jne
mov
out
xor
data16
add
cmpsb
cmpsb
mov
xor
sub
or
jbe
enter
xchg
sub
dec
repnz
popf
or
ret
pop
xor
dec
mov
jnp
cmpsl
std
jns
cli
dec
scas
movsl
jae
sahf
movsl
outsl
test
imul
addr16
lea
cmpsl
test
addr16
outsl
push
push
cwtl
push
push
push
xchg
xchg
lods
addr16
addr16
cmpsl
push
pop
cwtl
and
xor
arpl
rcrb
pop
inc
test
insl
fstl
pushf
imul
pushf
imul
xor
dec
mov
dec
mov
mov
dec
xchg
fs
dec
mov
dec
cmp
mov
or
dec
cmp
xchg
adc
ud2
push
dec
push
or
or
cmp
xchg
adc
ud2
push
dec
test
or
push
dec
fs
fs
pop
icebp
or
dec
rclb
or
push
push
or
fisttps
xor
pop
dec
repz
imul
push
jge
popa
inc
xchg
pushf
pop
jl
push
pushf
insl
subl
cmc
pushf
imul
dec
out
pushf
daa
aad
scas
in
lcall
mov
gs
lea
out
and
push
jge
fstl
push
xchg
js
mov
stos
sbb
add
test
insb
mov
jge
push
lods
cmovge
out
xor
lea
scas
ljmp
or
movsl
mov
cmp
imul
fsubrs
mov
lret
mov
andl
pop
scas
imul
mov
stc
jae
fstps
clc
std
lea
not
cmp
inc
jno
repz
xor
mov
std
outsl
rorl
pop
pop
into
mov
daa
add
lods
pushf
push
inc
lcall
out
test
stc
adc
popa
push
pop
stc
lods
sub
test
test
data16
stos
push
addl
cwtl
std
andb
xchg
test
in
popa
js
fcomps
fiadds
stos
push
mov
xchg
out
lods
into
mov
js
xchg
xor
jae
jno
cmp
cmp
dec
fmull
push
cmpl
cmp
fdivl
loope
cmp
add
sbb
cmp
push
sbb
cmc
jmp
inc
ficoml
stc
xorl
jno
xchg
js
push
sarl
sarb
test
push
mov
push
ja
lock
mov
fcompl
int3
pop
loope
sti
into
mov
js
jno
je
xor
scas
xchg
ja
jno
jno
mov
mov
or
cmpsb
icebp
push
and
push
cmp
inc
je
lcall
push
cltd
ss
xor
insb
lret
xor
push
sbb
mov
flds
push
daa
push
hlt
std
ret
das
inc
int3
loop
jno
or
jmp
ja
jge
jmp
lcall
sub
stos
push
mov
and
sbb
aaa
xor
addr16
adc
jns
test
xchg
push
addl
fsubp
mov
fs
mov
cmpsb
lods
xor
addr16
jno
cmc
mov
loopne
sarl
inc
sahf
add
dec
inc
jge
test
out
add
rcr
cmp
pop
inc
push
xchg
inc
mov
and
push
scas
cmp
dec
jns
jge
jecxz
mov
sbb
push
lea
jge
sahf
enter
jae
test
jmp
jl
push
test
push
test
xchg
mov
cmpsl
dec
js
jns
js
out
push
xor
push
mov
test
test
stos
and
ss
iret
out
cwtl
into
jg
negl
xchg
and
mov
rcr
inc
sub
sbb
push
sarb
fwait
orl
jnp
lea
sbb
insb
jnp
out
ret
pop
cmp
push
push
loope
ret
addr16
repnz
pop
bound
push
jp
sbb
in
sub
mov
aam
lods
pop
testl
pop
lods
pop
push
loopne
gs
imul
in
and
pop
dec
and
mov
lods
bound
pop
sti
dec
and
xor
std
lea
fwait
cli
filds
adc
xchg
popf
pop
push
inc
pushf
inc
cmp
test
inc
shll
sbb
insl
repz
sbbl
loopne
inc
adc
add
popf
jge
inc
adc
std
add
xchg
imul
imul
pop
dec
jmp
pop
push
imul
mov
scas
push
aaa
out
ljmp
repz
add
popa
das
push
scas
sbb
dec
aam
ja
idivl
add
ja
pop
xchg
lea
data16
jl
adc
lahf
adc
mov
dec
cmpsl
push
add
push
fcomps
icebp
test
ficompl
adc
int
inc
add
kmovb
pusha
sbb
movsb
shrl
push
aas
push
ds
mov
jg
xchg
outsl
aas
adc
fstl
es
repz
mov
jno
inc
jno
jo
xchg
mov
fwait
leave
sbbb
pop
aas
rcr
int
into
jo
mov
mov
add
and
jge
aad
repnz
fnstsw
sarl
xchg
fst
inc
hlt
pop
bnd
std
movsl
dec
je
das
sbb
imul
pop
popf
daa
repz
icebp
sub
movsl
cmp
repnz
outsl
sub
add
int3
xchg
xlat
push
mov
push
mov
test
inc
add
int
mov
xchg
fstpl
sbb
nop
push
out
scas
cmp
dec
fsin
loope
pop
xorl
fisttpll
inc
std
mov
bnd
lret
inc
jle
adc
cld
xchg
cmc
jecxz
jp
mov
mull
inc
xchg
divl
push
lds
in
add
stc
mov
mov
lods
pop
inc
icebp
lods
scas
add
cmpsl
aam
mov
ret
movsb
pop
inc
add
movsb
cltd
out
pop
xor
mov
ljmp
inc
adc
lret
inc
decl
fldenv
rcrl
push
inc
sti
movsb
popa
cmpsl
inc
movsb
out
icebp
pop
into
push
js
cmp
int3
ljmp
and
mov
iret
xchg
xlat
addr16
in
mov
frstor
xlat
mov
pop
rcr
xchg
sub
mov
mov
pop
pusha
push
xor
mov
xchg
or
jmp
shlb
cmp
push
fcoml
fildll
js
jg
mov
movsl
and
in
movsl
jle
std
insl
je
pop
push
cltd
jp
insl
insl
mov
sub
xchg
in
mov
mov
sbb
into
cmp
xchg
daa
imul
gs
jp
stc
rcll
out
aam
iret
popa
inc
push
push
iret
popa
jmp
int3
insl
mov
call
out
pop
dec
stc
mov
lods
popa
pop
scas
testl
int
dec
je
xchg
cmpsb
push
xor
jmp
xchg
xor
popa
sahf
mov
push
fmuls
pop
inc
xor
push
scas
dec
roll
cmpsl
out
test
je
lods
cmpsl
pop
movsl
sbb
outsl
cmp
sahf
cli
mov
ja
out
pop
xchg
es
sub
cmp
mov
mov
xlat
lock
xor
push
in
pop
inc
mov
cmp
xchg
or
xor
cltd
neg
adcb
mov
popf
inc
push
repz
adc
out
dec
xchg
xchg
and
lea
inc
mov
push
mov
test
adc
lret
cli
aad
stos
xor
inc
les
pop
cmp
pop
inc
or
das
out
cmpsl
mov
out
mov
sub
lret
mov
int3
and
dec
push
jb
fsubl
sarl
test
je
mov
pop
or
cmc
sub
pop
sti
mov
mov
mov
in
cwtl
fisubrs
pop
lahf
scas
nop
mov
into
fsubl
or
xor
pop
loope
jle
outsb
add
dec
mov
stos
int
insl
je
insl
lea
cli
sbb
lcall
outsb
and
fiaddl
or
and
push
cmc
imul
pop
inc
inc
aad
sti
out
iret
mov
sub
jle
iret
addr16
fld
subl
xor
jb
ss
push
jo
adc
movups
sbb
outsl
aad
push
popf
in
ja
push
jle
xchg
mov
imul
sbb
mov
insl
mov
sbb
jnp
scas
fimull
lret
ljmp
xchg
mov
mov
or
mov
xchg
mov
xchg
adc
lods
fidivs
mov
mov
imul
inc
push
outsb
data16
mov
dec
lods
inc
cmp
cmp
mov
jae,pn
sbb
not
mov
pop
and
sub
push
xlat
add
test
mov
sub
lods
jp
jae
sub
add
pusha
sub
popf
sub
ds
sub
ds
sub
ds
sub
scas
mov
jle
pop
ret
jg
mov
jmp
into
outsl
negl
cld
and
lea
out
in
xchg
xchg
cli
pop
fistps
sub
add
dec
sub
mov
test
push
lds
adc
jns
test
sahf
xchg
test
push
sub
pop
arpl
test
inc
test
ss
cmpsb
data16
cmp
in
test
jle
test
cwtl
dec
pop
ficomps
fs
or
jge
lcall
xor
mov
es
dec
adc
jl
xor
sbb
into
sbb
jmpw
adc
insl
pop
cmc
sub
lods
push
push
lret
test
mov
addl
adc
es
pop
sahf
xor
jno
xchg
mov
pop
xchg
push
jmp
insl
mov
div
add
arpl
gs
aam
xchg
sarl
icebp
shlb
push
or
pop
mov
dec
xor
scas
xor
xchg
or
cmp
fimuls
scas
jns
sbb
inc
ljmp
popa
sbb
sub
cmp
mov
add
mov
imul
sarb
add
and
xchg
mov
jg
cwtl
lods
sbb
add
cmp
out
mov
incb
adc
test
int
subl
push
jb
or
stos
push
cmpsl
inc
jae
outsl
scas
push
mov
jbe
test
leave
pop
into
mov
push
xchg
cmpsb
jae
sbb
std
cld
mov
cmpl
int
addl
movsl
rclb
int3
sarl
popa
int3
mov
out
mov
mov
xchg
mov
add
jbe
movsl
add
xchg
add
push
stc
pop
cmc
imul
test
insl
jo
xchg
gs
jle
test
mov
stc
lods
cmp
fwait
xor
addr16
mov
push
inc
lods
out
push
adc
imulb
push
and
cmp
adc
jns
and
stos
psubw
xchg
push
sub
lea
mov
inc
call
icebp
jne
ret
repnz
add
xor
adcl
mov
sarb
insb
cmp
packuswb
cwtl
out
sub
lret
push
mov
es
jns
movsl
jns
pop
js
inc
sbbl
push
xchg
push
movsb
xor
adc
rolb
mov
leave
or
call
pop
and
mov
loopne
sbbl
xchg
mov
xchg
pop
ret
xchg
and
aas
in
sbb
mov
add
or
ret
ss
jbe
popa
jns
std
inc
cmc
xor
sub
jg
jno
stos
aaa
mov
push
fwait
pop
test
std
loopne
sbb
std
pop
inc
xlat
xor
pusha
imul
aaa
imul
pop
adc
push
das
cs
aad
inc
cltd
jo
xchg
sbb
dec
sbb
ret
lods
inc
lods
aam
stc
or
add
pop
sbb
jge
push
or
gs
mov
repnz
sarl
das
out
mov
pushf
rorl
mov
jg
mov
loopne
inc
mov
inc
rcrb
stos
lret
push
cltd
inc
dec
sbb
stc
pop
mov
sub
mov
cwtl
das
mov
imul
fists
adc
or
inc
or
scas
popa
daa
imul
and
pop
xchg
pop
mov
adc
lret
subl
mov
imul
pop
stc
pop
xor
shll
outsl
outsl
in
dec
mov
fldcw
repz
rcrb
jp
cmp
jmp
mov
dec
pop
insl
cwtl
ja
imul
or
je
lds
fsubrl
sbb
pusha
sbb
sti
xor
push
or
and
js
push
push
stos
out
jae
push
ficomps
jno
add
add
psubb
sbbl
mov
adc
imul
sub
xchg
js
push
pop
xchg
out
icebp
jae
cmpsl
jmp
ror
repnz
add
adc
orb
aad
mov
jnp
push
jg
mov
lods
popl
adc
movsl
push
jg
sbbb
mov
ss
xor
imul
jae
push
xchg
sub
adc
imul
inc
jle
push
push
repz
aaa
push
or
adc
aad
repnz
and
lods
ds
add
add
or
sub
inc
sub
pop
test
in
cmpsb
enter
ret
push
lret
mov
sbb
roll
jle
jbe
insl
in
inc
stos
or
rcrl
push
js
addr16
sub
addl
adc
flds
test
jle
jg
js
gs
sahf
stc
jno
xchg
lcall
push
cmc
xorb
mov
push
aaa
cmc
dec
and
mov
xor
or
icebp
into
push
push
sti
jmp
pop
push
pop
jb
lods
xlat
push
daa
push
jle
jb
jmp
push
push
stos
and
cmpsb
push
mov
stc
in
cmc
sub
mov
cs
pop
andl
sbb
sub
sbbb
mov
jbe
mov
pop
push
add
jae
or
into
das
cs
fistl
fstl
cmp
pushf
icebp
sbb
rcl
and
jg
insb
push
cmpb
push
inc
jb
fdivrl
fsubr
jmp
insl
jnp
flds
outsb
fsubrs
and
pop
lea
je
popa
das
push
xor
jns
dec
cmpsb
movl
push
dec
xor
shlb
or
add
cmp
pop
inc
icebp
inc
gs
test
gs
cmp
cld
and
lods
mov
dec
int
and
pop
push
dec
mov
adc
jge
sarl
push
xor
xchg
dec
pop
jmp
mov
xor
dec
cmp
mov
push
adc
pop
adcl
test
les
add
mov
add
in
cmp
lahf
std
add
ror
dec
fs
sbb
dec
das
cmc
inc
push
adc
xor
push
es
dec
aam
adc
push
es
stos
icebp
sbb
leave
ret
rol
xchg
pusha
gs
xor
pop
gs
sbb
nop
xor
mov
gs
adc
out
push
outsb
sbb
testl
sahf
and
dec
jns
mov
mov
sub
add
cmc
ja
ljmp
and
jae
setno
sbb
push
cmp
inc
jnp
test
sbb
sub
sarl
addr16
dec
fsub
ja
ret
push
rcr
cmp
ss
test
icebp
xor
pop
jb
pop
and
xchg
adc
daa
sbb
lds
cli
push
xchg
sub
daa
pop
cmp
pop
or
fwait
and
into
and
inc
inc
mul
sarb
push
push
mov
adc
pop
pop
mov
ja
rol
cmp
mov
pop
insl
sahf
cmpsl
push
mov
dec
mov
cmc
jg
inc
rcll
fcmovnbe
filds
inc
jae
arpl
pop
push
addr16
mov
fcmovnu
pusha
adc
or
push
lods
fs
adc
sbb
jnp
cmc
inc
sub
pop
push
sbb
adc
jmp
cmpsb
mov
out
add
xor
xor
jle
cld
subb
dec
shrl
pop
repnz
std
add
pop
sbb
arpl
fwait
scas
clc
xchg
imul
testb
adc
xorb
dec
cmc
cmpb
sub
popf
and
fisubl
popf
insl
aaa
insb
sbb
mov
arpl
cmc
and
inc
call
test
dec
pop
pop
flds
jle
lods
sbb
lods
into
imul
std
adc
addr16
imul
les
addr16
les
inc
mov
and
adc
jns
mov
icebp
ja
pop
mov
stos
push
jnp
push
jns
xor
cmpsb
rdtsc
xchg
jno
jge
aaa
ficomps
sub
addr16
xor
cmpsb
lods
push
pusha
mov
out
dec
push
call
jns
push
in
or
loop
pusha
out
andb
dec
xor
lods
mov
mov
lds
xchg
loopne
fisttpl
push
dec
push
in
xor
sub
jnp
ret
mov
inc
ja
mov
adc
imul
mov
popa
xchg
in
mov
das
xchg
repnz
dec
ja,pt
mov
insb
fldl
mov
add
repz
pop
sbb
jae
mov
push
mov
cmpsb
ret
add
jmp
dec
mov
imul
loopne
cmp
jbe
cmpsb
xor
cmpsb
adc
push
test
xchg
push
cmp
xchg
sub
xchg
mov
xor
fst
cld
mov
jle
xor
push
cmpsb
mov
push
xchg
ja
test
jge
clc
std
cmp
xor
incl
jp
jmp
push
jns
pop
test
sarl
fnstenv
xlat
std
test
cmp
test
dec
jle
xor
pop
push
in
dec
fs
cmp
arpl
push
mov
dec
std
or
push
repz
push
jle
jl
sub
lock
std
mov
mov
jl
push
jne
mov
test
pop
cmc
adc
pop
cmp
and
pop
fdivrl
sub
xchg
gs
sbbb
lds
mov
jne
xor
and
xchg
cli
insl
cmp
mov
lods
lock
test
shrb
adc
hlt
fwait
pop
mov
mov
arpl
in
sub
mov
not
or
frstor
lds
pop
pop
cli
je
jge
and
xchg
mov
mov
fcmovb
mov
popa
fprem
or
cmc
fdiv
cmp
pushf
movl
pusha
pushf
movb
movl
mov
push
movl
push
lea
jmp
pushf
jmp
clc
sub
call
jge
test
cmpsb
cmp
sahf
sbb
dec
cmpsl
stc
dec
ljmp
cmp
imul
sbb
outsl
fsubrs
movsb
sbb
enter
and
push
cmp
pop
test
cmpl
movb
jmp
sbb
shll
inc
stos
sbb
gs
fnstenv
movsl
sti
hlt
cmp
les
fcompl
sub
addl
out
test
imul
pop
mov
adc
xor
inc
daa
cld
sbb
movsb
bound
div
dec
pop
repz
cmpsb
inc
ds
mov
dec
mov
jmp
xor
std
jb
push
fwait
out
xor
inc
mov
or
int
jb
iret
cwtl
push
out
outsl
popa
dec
sub
ret
xchg
and
lds
push
shlb
and
or
in
inc
xor
aas
pop
or
div
jge
xchg
pop
sbb
mov
push
mov
std
dec
cmpsb
ds
sub
cmpsl
in
inc
adc
xor
jle
gs
jno
inc
fdivp
sbb
mov
cli
push
stos
and
pusha
mov
fidivl
inc
movsb
push
inc
fwait
dec
inc
lret
and
cld
daa
and
into
int3
dec
inc
idivb
mov
sbb
pop
adc
les
dec
inc
cmc
xchg
jecxz
gs
pop
cmpsl
sbb
test
xor
xor
andl
es
xchg
loop
int
xchg
inc
inc
aad
adc
mov
lret
adcb
xchg
aam
lods
mov
mov
push
dec
or
add
inc
and
imul
fs
pushl
pushf
pushl
popl
mov
pushf
pushl
ret
push
jmp
jo
not
mov
ret
mov
lds
es
imul
jp
adc
enter
scas
jnp
and
lock
movsb
aas
jne
pop
fdivl
insb
jno
sub
or
dec
mov
sbb
cmc
in
lret
sarb
and
adc
iret
addl
adc
test
or
pop
in
mov
jle
in
out
xor
jmp
scas
mov
jae
in
adc
les
xchg
mov
xchg
mov
sar
mov
mov
jmp
test
mov
fnstsw
aad
test
in
pop
dec
mov
xchg
cmp
and
dec
mov
inc
lods
push
inc
in
and
mov
mov
vcvtss2si
mov
shr
loopne
addr16
dec
aas
cmp
inc
je
faddl
jb
out
push
ja
xor
inc
sbb
loop
xchg
fcoml
std
cmp
fisttps
stc
out
in
div
add
add
inc
je
shll
adc
arpl
cmpsb
push
fwait
std
jle
add
lea
rcrb
inc
xchg
or
scas
add
cmp
xchg
adc
push
inc
in
mov
xor
out
imul
add
dec
movups
stc
int
ds
sbb
push
or
cmp
push
sbb
fmuls
mov
sbb
out
xor
cmp
or
mov
mov
div
cmp
cmp
jmp
xor
jge
dec
mov
mov
mov
mov
movsb
ss
mov
mov
ret
sti
sbb
pop
xchg
test
and
out
pop
xchg
xchg
ljmp
std
test
test
add
push
mov
cmp
lods
push
mov
mov
xchg
mov
push
sbb
cwtl
xchg
adc
dec
mov
mov
mov
fwait
pop
stos
test
add
int3
lahf
xchg
cmp
jo
ljmp
sub
add
fs
mov
push
movzwl
movsbw
pusha
movsbw
pushl
lea
bswap
mov
lea
jle
pushf
push
lea
call
pushf
pusha
lea
jne
not
movsbw
mov
push
lea
jmp
jmp
lea
pusha
pusha
push
mov
lea
jmp
mov
cmpsb
sub
mov
fildl
pop
cmp
in
rcll
out
sub
inc
int
xchg
and
jecxz
sbb
or
jecxz
or
in
cmp
out
call
jno
xchg
xchg
stos
test
add
xlat
or
stc
mov
mov
sti
jmp
cmp
lret
out
and
fidivl
mov
inc
pop
or
bnd
pop
or
repz
pop
andl
mov
or
ret
loope
call
imul
add
sub
and
imul
sarb
fimuls
mov
inc
mov
cmp
pop
ss
push
syscall
repz
popa
cmpsb
or
pop
dec
sub
jns
cli
mov
sub
mov
xorb
ss
repnz
popf
add
clc
ds
aas
fistpll
loop
lea
sub
mov
push
inc
add
push
dec
leave
pop
out
rorb
sub
xor
mov
not
cmc
call
bswap
jmp
pusha
pushf
lea
jne
pusha
pushf
pusha
jmp
inc
xlat
xchg
aad
cmpsb
lcall
xchg
repz
xchg
sbb
sbb
xchg
pop
movsl
or
dec
inc
js
iret
pop
xchg
jno
ljmp
aad
je
jge
dec
mov
mov
out
xor
loop
fs
add
and
addr16
jmp
js
push
and
xchg
mov
sub
push
sti
pop
jno
repz
xchg
mov
rcll
fnstenv
cs
es
xchg
cmc
fmull
or
jle
cmc
fadd
lahf
sbbl
push
std
mov
jne
in
aad
xor
push
sbb
jmp
movsl
icebp
cmpsb
cmp
cmc
insl
aam
jp
inc
test
sbb
outsl
jnp
inc
out
mov
daa
rcrl
sub
sbb
mov
adc
aad
insl
sbb
outsb
imul
and
imul
rolb
jb
xor
cli
inc
ss
bound
xlat
mov
cmp
push
js
dec
mov
shlb
in
rolb
flds
mov
out
ret
lods
sarb
data16
fisubrl
repnz
and
sbb
stos
add
mov
outsb
inc
out
or
out
call
aaa
into
repz
push
inc
mov
out
cmp
test
lods
aad
push
in
cmp
sarb
xlat
test
jp
cmp
xchg
push
inc
xchg
mov
inc
push
repz
mov
or
push
or
dec
add
xchg
outsb
sbb
cmpsb
ss
or
sub
shll
scas
push
js
xor
dec
dec
sub
rcll
ficomps
aad
leave
movsl
gs
ret
in
xchg
xor
lret
sbb
insb
cmp
dec
stc
in
loopne
dec
lret
movsl
je
idivb
das
sbb
ret
cltd
je
xchg
nop
xor
inc
jb
fsubs
mov
jne
adc
sub
adc
ret
pinsrw
push
shl
add
push
jle
dec
xchg
imull
sub
xor
sub
sub
mov
mov
dec
mov
mov
inc
js
inc
sub
dec
cld
cmpsl
iret
inc
clc
mov
test
sub
andb
mov
jge
in
cmpsb
loope
lea
mov
add
mov
xor
push
int3
or
pop
in
shrl
mov
sbb
xor
dec
lods
pop
outsl
mov
dec
cmp
mov
repnz
movsb
mov
cmpb
xchg
in
les
cwtl
xor
inc
cmpsl
fmull
fdivr
shrl
notb
lods
cli
jge
xorl
inc
or
pusha
sub
adc
loope
outsl
fcoms
jae
pop
cmp
cld
es
sub
pop
push
stos
cmpsb
jmp
jge
insl
mov
sarl
add
sub
hlt
dec
dec
adc
mov
fcoml
daa
mov
push
push
inc
jae
stc
sub
adc
pop
mov
lock
out
xchg
push
xchg
jl
ljmp
xor
test
and
cmpsl
dec
rolb
loop
sbb
or
nop
xor
movsb
mov
wbinvd
and
sub
sbbb
push
add
sub
cmpl
fcos
aaa
popl
call
pushf
jmp
bt
cmp
pushl
add
push
test
pushf
movl
mov
push
lea
jne
pushf
pushf
push
movw
mov
pushf
push
push
jmp
cmp
cltd
or
movsl
popa
mov
jbe
cmp
or
lahf
and
cmp
cmpsl
jae
clc
cmp
mov
fwait
rorb
xlat
mov
and
popf
lea
jne
bsf
btr
movzbw
dec
xor
lahf
bswap
push
mov
pusha
lea
jmp
mov
pop
lahf
mov
cwtl
lea
jmp
pushf
push
mov
pushf
pushf
movb
mov
pushl
ret
mov
cmpsb
and
mov
mov
int
fbstp
ss
ljmp
lret
and
sub
and
pop
shr
lcall
andl
mov
movsl
dec
pop
ljmp
pop
and
pushf
call
or
call
inc
test
xchg
out
pushf
cld
jp
adc
rcll
lahf
aad
aaa
jns
mov
inc
sub
cli
xchg
pusha
xlat
add
cmp
jbe
xlat
arpl
or
fisubl
sar
popl
cmp
add
add
lods
dec
xor
enter
sub
outsl
ret
inc
or
xchg
lcall
in
jno
out
out
sbb
pop
cmp
pop
or
mov
pusha
stc
in
mov
sub
mov
fbstp
xchg
add
sti
mov
enter
cmp
lods
or
xchg
cmpsw
pushf
ljmp
inc
lods
fnsave
ja
cmpl
jmp
dec
pop
test
push
stos
pop
xrelease
push
popf
mov
psubsw
lods
adc
sub
mov
adc
pusha
cmc
mov
sub
lcall
paddw
sbbl
sahf
xchg
jb
adc
orb
pop
sub
test
mov
mov
mov
outsb
iret
cmp
add
das
test
push
push
push
add
enter
sbb
mov
xchg
jno
in
and
shrb
sarl
xchg
imul
in
pop
adc
mov
sbb
dec
nop
push
xor
and
mov
mov
sahf
bound
mov
adc
ret
push
imul
stc
push
in
cmp
cmpsb
jecxz
fsubl
movsl
repz
xor
hlt
cmpsb
pop
in
in
inc
movsb
lods
add
fwait
or
mov
inc
mov
xchg
jle
inc
and
push
add
out
ret
add
clc
shl
mov
lea
js
call
pushf
mov
call
pushf
lea
je
push
cmp
or
lea
jnp
je
shld
rcl
sub
sar
xadd
shrd
mov
add
mov
push
sub
btr
shr
lea
movsbw
stc
mov
bt
or
pusha
pusha
mov
jmp
test
clc
or
call
lea
pop
pushf
mov
jmp
jmp
adc
push
movw
pushf
movl
pushl
ret
cmp
call
repnz
jnp
push
gs
out
in
ss
dec
ja
les
mov
jle
and
out
pop
rclb
push
int3
jnp
mov
insl
sahf
cmp
test
sub
add
sahf
mov
mov
leave
xor
cmp
dec
mov
push
cmp
lods
lret
imul
aad
fdiv
fs
loopne
add
lcall
add
pop
pop
sub
pop
mov
sahf
jecxz
xchg
push
pop
icebp
mov
push
add
bt
stc
push
pushl
cmp
pop
lahf
pushl
setb
lea
cwtl
lea
mov
call
jmp
popf
cpuid
nop
jmp
mov
movb
mov
jmp
jmp
cmc
mov
cmp
jmp
push
movw
xchg
add
sar
rol
call
movl
push
push
lea
jmp
push
xorl
add
adc
repz
mov
in
xchg
xchg
sub
test
fcmovbe
sti
xor
fistl
xor
cli
idivb
pop
scas
lods
and
cwtl
xchg
xlat
cmp
movsb
clts
jge
test
lea
andl
std
cld
les
cli
adc
mov
adc
incb
mov
gs
mov
scas
stos
sub
fcomp
mov
stos
sub
jg
outsb
pusha
das
fldenv
test
mov
inc
insl
pushf
nop
jmp
mov
flds
fxam
pop
mov
arpl
jmp
mov
js
cmp
das
adc
ror
jecxz
and
mov
push
hlt
lds
push
clc
sub
fnsave
imul
loop
mov
das
adc
enter
lret
test
bnd
je
sbb
call
lea
mov
pushf
pushf
push
pushf
lea
jmp
pushf
pushl
lea
call
call
xor
cld
lea
jno
dec
mov
test
xor
fisubs
aam
sub
mov
mov
pushf
int3
psllq
sbb
add
xor
ds
sub
xchg
sub
dec
or
int
adc
sbb
jecxz
push
pop
push
pop
cmp
lds
lret
mov
adc
adc
out
pusha
push
out
push
cmpl
adc
jnp
mov
push
cmp
cmp
inc
add
inc
mov
mov
mov
dec
xchg
mulb
xor
nop
test
mov
mov
mov
add
pop
push
mov
pushf
ds
and
jne
pop
mov
push
ficompl
xor
mov
cmp
in
arpl
out
or
xchg
xchg
hlt
add
or
inc
aam
mov
arpl
popf
xor
leave
xchg
sub
sbb
mov
lret
ds
negb
pop
and
jo
out
mov
mov
mov
dec
loop
cmpsb
mov
sub
mov
push
mov
dec
jae
adc
jecxz
cmp
xchg
cmp
sub
cmpsl
test
push
imul
mov
push
sub
mov
cmp
in
xor
mov
xorb
or
aas
xchg
add
mov
std
loope
cmpsb
xor
xor
fdivl
mov
xchg
xor
adc
jae
add
inc
cli
lock
adc
call
in
mov
dec
cmp
hlt
jmp
js
sarb
cmpsb
push
cmpsb
adc
cmp
incb
jg
inc
repnz
cmp
adc
idivb
popa
push
mov
insb
loope
movsb
and
sbb
mov
jb
loopne
pusha
pop
and
pushf
or
lcall
int
fistpl
jbe
xchg
loop
mov
sti
lock
nop
int
in
xchg
call
mov
sub
jno
mull
shll
mov
addr16
mov
sub
jg
loop
cmpsb
adc
data16
loopne
mov
dec
mov
xor
and
ja
mov
xchg
mov
dec
add
push
mov
fs
xchg
push
cmpsb
push
imul
addb
xchg
jbe
cmp
test
xor
sbb
or
mov
stos
cmp
mov
je
shr
cld
mov
xchg
adc
jo
leave
mov
xor
dec
adc
jbe
faddl
shrl
movsl
rol
pushf
call
bswap
lea
jmp
test
pusha
lea
je
stc
add
pushf
cmp
call
push
lods
shl
cmpsb
outsl
add
sbb
data16
stos
sbb
rolb
lret
jae
sbb
and
fs
mov
push
ret
addr16
mov
push
push
ret
sbb
xchg
inc
mov
cmp
lock
cmpb
inc
popf
out
cmp
add
mov
ja
imul
fwait
mov
adcb
movsb
mov
sbb
gs
adc
add
pop
mov
orb
out
in
insl
push
out
mov
pop
pop
push
push
vminpd
jecxz
nop
test
dec
cmp
icebp
jg
jp
add
rcl
call
insb
xchg
gs
pop
push
ret
mov
imul
cmpsl
mov
push
pop
jp
pop
out
loop
xchg
movsb
jge
gs
inc
ror
int
pop
jmp
push
out
dec
fcmovnbe
roll
fistpll
inc
aam
inc
xor
sarl
push
jbe
add
mov
sbb
cmp
cmp
sub
and
pop
or
clc
cmp
sbb
ljmp
lret
cmp
shl
push
sub
mov
xchg
cwtl
xchg
dec
mov
cmp
xor
shl
iret
cld
lods
adc
mov
andb
mov
sub
mov
fbld
sbb
sub
adc
lret
and
mov
pushaw
pop
lds
fstl
movsl
mov
xchg
jmp
inc
push
add
mov
cmp
mov
pop
inc
fistps
add
jp
stc
lret
cli
cmp
decl
mov
sbb
mov
sti
lea
mov
movsbl
movsbw
mov
call
mov
lea
je
pushf
pusha
call
lea
jae
call
add
nop
in
cmpsb
outsb
addr16
xor
imul
dec
jns
movsb
adc
notl
cmp
jnp,pt
dec
iret
push
and
insb
push
cmp
fisubs
adc
jb
jge
sub
mov
xchg
push
movsb
xorl
push
adc
push
inc
dec
out
add
sub
pop
push
push
cmp
mov
dec
inc
scas
jl
movl
push
pusha
lea
jae
call
test
add
stc
clc
cmp
jmp
pusha
test
cmp
call
pop
divl
mov
pop
stos
push
xor
ret
leave
aaa
iret
mov
mov
mov
cmpsb
inc
adc
sbb
mov
outsl
cmc
cmp
notb
push
add
cli
and
mov
in
mov
daa
imul
icebp
or
lods
out
cmpsb
push
dec
test
loopne
adc
in
mov
push
push
fldl
scas
and
jno
push
std
inc
incl
loopew
cmpsl
push
test
xchg
inc
adc
xor
and
pop
das
into
mov
repz
pop
out
xor
in
xchg
test
pushl
lea
jne
lea
test
pushf
bswap
mov
pushf
add
cmp
pushf
pushl
test
movzwl
stc
mov
bt
add
pushf
clc
stc
cmc
mov
cmp
pusha
test
pushf
push
lea
je
pushf
add
mov
call
cmp
out
cmpsb
jecxz
enter
push
lods
cmpsb
pop
fldt
adc
dec
inc
mov
mov
mov
rorl
ljmp
sub
dec
mov
fcom
rorb
stos
outsl
shrl
or
pop
imul
add
pop
iret
int
xor
jecxz
testb
mov
adc
test
sti
popf
subl
ljmp
rol
jae
call
mov
fcmovbe
dec
stos
lock
jb
aam
test
dec
and
sarb
mov
iret
out
mov
mov
inc
inc
xchg
jmp
jae
pop
pop
out
mov
fsubs
ja
insl
push
mov
jg
mov
or
lahf
xchg
nop
out
subb
xor
cmpsl
adc
mov
sbb
and
cmp
repnz
data16
add
mov
stos
arpl
sub
or
xor
or
jp
mov
inc
lods
bound
rclb
jp
sub
clc
ret
mov
sub
pop
aam
insl
in
xchg
fs
je
pushf
lea
call
push
pusha
push
lea
jne
movzbw
mov
push
lea
jmp
lea
ja
jmp
pusha
push
mov
movl
mov
pushf
lea
jmp
bswap
not
push
pushl
popl
push
movzbw
call
pusha
mov
pusha
pushf
pushl
push
lea
jmp
add
mov
insl
mov
xchg
pop
jb
xor
or
xchg
cmp
pop
icebp
cmp
sbb
jp
push
mov
cmp
imul
orb
stc
push
subl
les
pop
mov
push
popf
hlt
xchg
test
jno
mov
inc
adc
addr16
shrl
push
xchg
loop
shll
paddq
sub
mov
mov
stos
xor
sbbb
adc
push
pop
into
xor
pop
mov
out
mov
xchg
xor
insb
mov
cmpsb
add
adc
lds
xor
hlt
leave
pushf
xchg
test
jmp
pop
cmc
fwait
sub
adc
call
clc
test
cmp
test
aas
mov
and
in
sarb
mov
push
dec
cmpsb
jmp
mov
or
stc
scas
test
cmp
hlt
mov
in
mov
stos
xchg
iret
loope
test
std
mov
mov
xor
ss
cmp
mov
xchg
sbb
inc
lcall
mov
incl
pusha
xchg
dec
xchg
ror
into
jb
mov
adc
mov
repnz
add
sbb
add
mov
xchg
push
cli
push
stos
ret
cmpsb
outsb
add
pop
stos
adc
rclb
sub
stos
xchg
sbb
xchg
mov
fidivl
cli
pop
scas
sbb
outsl
pop
add
cmp
movsb
clc
sub
mov
orl
lahf
test
adc
xchg
pop
rol
jae
dec
inc
cmp
mov
adc
es
roll
xor
add
loop
insl
jnp
fimuls
ds
xchg
mov
add
test
outsl
gs
subl
mov
pop
js
cs
mov
mov
xlat
xor
ror
sbb
pop
pop
decl
xor
and
ds
sbb
mov
fbstp
mov
icebp
mov
pushf
lea
jae
pusha
pushf
btr
mov
shl
mov
xor
test
bsf
pop
mov
mov
xor
pusha
repnz
push
lea
jne
add
bsf
mov
mov
not
sub
call
leave
fs
mov
ret
adc
out
dec
mov
pop
in
sahf
cs
idivl
cmp
cmp
push
mov
inc
adc
insb
xlat
push
dec
cmp
mov
mov
dec
inc
loopne
push
cmpsb
cmp
dec
mov
inc
mov
inc
inc
mov
scas
and
jmp
or
dec
pop
idivb
xor
mov
adc
stc
sbb
int
cmp
cmc
lret
jb
pop
inc
push
movsl
add
dec
fnsave
sub
test
adc
decl
mov
enter
or
leave
pushf
mov
lea
je
push
movsbw
movsbl
movsbw
lea
jmp
jmp
lea
jb
push
cmc
bt
cmc
cmpb
call
sbb
pop
data16
jb
mov
and
xor
sbb
jbe
sbb
mov
inc
xchg
in
dec
popf
sbb
xor
dec
sti
movsb
daa
test
nop
jno
jne
mov
dec
dec
pop
lret
cmp
mov
sbb
or
mov
dec
loopne
fcompl
test
lods
xor
mov
insl
insb
jae
ret
and
adc
fcoml
or
bound
popa
pop
orl
xor
sti
sub
ret
cmp
adc
daa
ud1
sti
mov
rcll
sti
les
sbb
jae
int3
inc
ret
pop
dec
jl
xor
add
push
cmpsl
push
je
xor
insl
or
testb
jp
mov
and
adc
adc
add
fstpt
pushf
push
cmpsl
pop
mov
cmp
imulb
int
test
xchg
push
clc
orl
addl
lcall
xchg
jmp
fcompl
sbb
mov
adc
sarl
pop
push
mov
clc
jle
inc
mov
sbb
dec
in
xor
sbb
xor
hlt
cwtl
imul
jmp
pop
imul
or
ficompl
jne
xchg
pushf
mov
aaa
xor
aas
xor
push
dec
mov
insb
clc
testb
xchg
std
jecxz
ffreep
fisubrs
or
inc
lock
stos
icebp
imul
sub
push
ror
xor
shrl
dec
js
lds
add
pop
cmp
cmp
mov
dec
aad
xor
pushl
lea
movb
mov
pusha
pushf
mov
lea
jmp
pushf
mov
pushf
mov
call
pushf
mov
jmp
push
mov
pushl
pushl
pushf
mov
lea
jmp
jmp
xor
not
inc
jmp
bts
bsf
lahf
xor
mov
clc
push
test
sub
pushf
mov
movb
movb
pushf
pushf
lea
jmp
pusha
lea
jae
jne
pusha
mov
pusha
pushf
lea
jmp
shrd
ror
mov
bt
add
pusha
lea
jmp
pushf
mov
movw
repz
popl
push
pushf
push
mov
movw
call
stc
not
shl
pushf
movzbl
clc
test
add
pusha
xor
call
aaa
mov
pusha
aad
mov
neg
pusha
mov
pushf
stc
pushf
not
cmc
cmc
stc
not
pushl
pushf
sub
cmc
cmc
stc
and
jmp
jmp
bt
push
stc
add
movl
mov
push
pushf
popl
pusha
pushf
push
movb
pushl
popl
pushl
movb
pushl
pushf
lea
jmp
push
jmp
pusha
movl
call
pushf
mov
lea
jae
push
pushf
push
pushf
jmp
shld
bsf
cmp
ror
movzbl
push
movsbl
call
sub
pushf
pushf
mov
mov
pusha
pushf
pushf
lea
jmp
setne
dec
dec
dec
sbb
xor
pusha
not
inc
btc
adc
and
neg
pop
shl
mov
pushf
bt
sub
pusha
mov
push
mov
pushf
lea
jmp
mov
mov
movb
call
pusha
mov
pusha
jmp
call
pushf
pushl
call
inc
test
not
clc
and
mov
mov
pushf
movw
add
push
push
call
repz
popl
pushf
mov
call
push
call
movzbw
shr
lea
cmp
bt
clc
cmp
jnp
pushf
lea
ja
pushf
shr
rcl
xchg
lea
cmp
pusha
lea
and
rol
sub
bswap
lea
sub
xor
and
call
pushf
call
pushl
pusha
push
mov
call
movzbw
mov
jmp
das
bt
aam
mov
bt
test
call
sub
das
btr
mov
adc
rcl
inc
push
mov
bt
push
bt
add
pusha
push
push
push
mov
pushl
pushl
push
lea
jmp
mov
push
jmp
mov
jmp
pushf
pushf
jmp
inc
sub
cmc
mov
jmp
push
movb
push
repz
popl
call
add
jmp
jmp
mov
pushf
mov
call
pushl
call
cmp
pushl
popf
pushl
movw
pushf
pushf
lea
jmp
mov
mov
pushf
mov
mov
call
mov
pushf
rol
jmp
pushl
popl
movb
push
lea
jmp
jmp
rep
bts
sar
pop
sbb
bswap
push
mov
push
pushl
popf
pushf
push
pushf
pushf
lea
jmp
shl
pushf
test
shr
test
pushf
stc
clc
or
jmp
mov
call
pushf
pushl
popl
pushf
movb
pusha
lea
jmp
mov
lea
jae
popl
pushf
pushl
push
push
lea
jmp
mov
call
sub
stc
mov
call
pushf
pusha
movb
inc
jmp
xchg
call
jmp
lea
ror
bsr
mov
setno
rol
adc
mov
bt
stc
cmc
pushf
add
cmc
pushf
shld
pushf
jmp
inc
pushf
cmc
cmp
test
add
jmp
pusha
pushf
popl
jmp
pusha
pushf
pushf
repz
popl
pusha
call
pushf
popl
jge
pushf
pushl
popl
mov
movl
pushf
lea
jmp
add
pusha
push
push
movb
mov
pushf
pushf
mov
pushf
pushl
lea
jmp
movzbw
test
ror
mov
pushf
test
test
call
jmp
add
mov
lea
jmp
pushl
popl
cmc
add
bt
call
bswap
pushf
mov
call
pushf
mov
movb
lea
jmp
pusha
pushf
mov
mov
lea
jmp
pusha
sub
call
mov
jmp
push
mov
pusha
call
add
jmp
mov
pusha
pushl
push
mov
lea
jmp
jmp
jmp
clc
neg
bt
pushf
jmp
pusha
mov
mov
lea
jmp
add
movb
lea
jnp
inc
cmp
bt
test
cmc
add
cmp
neg
call
add
pusha
pushf
cmc
bt
mov
call
pushf
not
movzbl
bt
bt
add
pushf
add
call
add
pusha
pushl
lea
jmp
cmp
cmpl
pusha
mov
pushf
push
mov
jmp
pushf
mov
jmp
mov
pushl
pushf
popl
push
pusha
movw
pushl
popl
pushl
pushf
lea
jmp
pushf
pushf
popl
pusha
mov
pushl
popl
pushf
pushl
mov
pushf
lea
jmp
add
pusha
pushf
pusha
lea
jmp
pushf
mov
pusha
pushf
popl
pusha
pushl
popl
pushl
lea
jmp
push
jmp
call
call
pushf
mov
call
rol
sub
pushl
bswap
mov
push
mov
pop
push
pushf
popl
call
test
call
jmp
test
mov
push
cmc
clc
sub
pushl
mov
inc
pushf
call
rol
seta
sar
shr
xor
jmp
jmp
add
pusha
lea
jle
mov
pushf
pusha
mov
lea
jmp
jmp
mov
pushf
pusha
movb
lea
jmp
stc
jmp
mov
pushl
push
pushl
movl
lea
jmp
push
mov
jmp
rcl
bt
neg
sub
cmc
test
xor
rol
rol
rol
btc
add
rcl
or
neg
movzbw
mov
test
clc
add
push
mov
push
pusha
jmp
add
cmp
clc
test
pushf
cbtw
cmc
test
movw
cwtl
clc
push
movb
cmp
sub
pushf
mov
mov
push
pushf
lea
jmp
setae
setbe
push
movzbw
mov
movsbw
jmp
pushf
mov
setbe
mov
call
mov
push
lea
jmp
movb
mov
pushf
push
jmp
call
pushf
inc
test
test
bt
call
sub
shr
push
lea
add
and
rcl
adc
rcr
sub
movzbw
lea
mov
movsbw
pushf
movsbl
not
pushf
popl
movzbw
std
jmp
test
add
jmp
mov
call
pushf
mov
pushf
jmp
mov
mov
push
push
mov
pushf
mov
call
mov
pusha
mov
pushf
divl
push
movb
movw
jmp
pushf
popl
jmp
jmp
sub
lea
jae
push
mov
push
movw
lea
jmp
mov
call
mov
movb
jmp
movb
mov
mov
lea
jmp
pushf
mov
push
jmp
adc
cmp
cmp
mov
shl
cmp
mov
cmc
cmp
call
not
movsbw
lahf
setle
push
movsbw
cwtl
cwtl
lahf
mov
jmp
not
mov
pushf
mov
cmc
bt
bt
sub
bt
bt
shl
pusha
mov
jmp
mov
movw
call
pushf
mov
push
movw
pushf
jmp
pushf
repz
popl
call
mov
pushl
pushf
pushf
call
pushl
popl
mov
movb
lea
jmp
sub
neg
movzbl
neg
shr
not
pushf
stc
lea
stc
shld
bsr
lea
sub
pushf
lea
lea
rol
cmp
bts
mov
btc
cmc
inc
add
push
rol
btc
movsbw
mov
and
bts
or
or
add
rcl
movzbw
and
sub
rcl
ror
rol
shrd
not
sar
movsbw
ror
sub
call
pushf
popl
pushf
call
stc
stc
test
sub
test
shr
call
and
das
call
pushl
mov
lea
movzbw
movsbw
pushf
mov
inc
push
movl
xchg
mov
sete
lea
xchg
pushl
movzbl
sets
push
inc
pushf
movsbw
mov
setge
inc
lea
pushl
dec
jmp
mov
mov
pushf
pusha
mov
pushf
pushf
mov
pushl
lea
jmp
mov
call
pushf
pushf
pusha
mov
movb
call
add
call
movb
mov
mov
pushf
mov
call
add
add
cmp
shl
stc
test
mov
cmp
sub
sub
add
push
mov
mov
jmp
pusha
mov
push
pusha
lea
jmp
pusha
test
mov
add
movb
jmp
cbtw
cmp
bt
cwtl
movb
sub
call
mov
jmp
lahf
movsbw
pusha
bswap
mov
pushl
mov
movl
mov
push
lea
jmp
pusha
jmp
bt
add
pushl
lea
jmp
sbb
das
mov
movsbw
pusha
sbb
rcl
mov
sar
mov
bt
add
jmp
stc
mov
add
pushf
pushl
call
jmp
jmp
mov
pushl
popl
pushl
push
mov
lea
jmp
xor
rcl
clc
mov
bt
cmc
test
call
mov
mov
pushl
jmp
jmp
jmp
or
mov
pusha
jmp
mov
mov
pushf
mov
pushl
ret
pusha
jmp
lea
lea
mov
pushf
mov
call
pushf
mov
mov
jmp
lea
jo
pushf
pushf
pushf
call
mov
jmp
aam
mov
cmc
mov
jmp
lea
ja
cltd
mov
rol
lea
shld
shl
call
mov
pushf
pusha
jmp
push
pushf
mov
pushl
pushl
lea
jmp
bswap
mov
push
add
stc
movb
pusha
call
rol
jp
rcl
dec
mov
call
pushf
jmp
movsbw
lea
pushf
dec
cmc
pushf
call
pushf
popl
pusha
mov
pushl
call
shld
mov
btr
cmp
add
not
sub
not
sbb
shld
sbb
mov
pushf
jmp
call
pusha
call
jmp
jmp
movl
call
sub
pushf
movb
pusha
jmp
mov
push
pushf
pusha
lea
jmp
lea
jmp
call
inc
call
rcr
sub
movb
not
pusha
jmp
shrd
shl
mov
cmc
cmc
add
pushf
pusha
pusha
push
lea
jmp
pushl
movb
mov
mov
pushl
pushl
lea
jmp
xor
pusha
movb
jmp
pushf
jmp
pushl
mov
mov
pushf
push
lea
jmp
pusha
sub
clc
cmc
test
pushf
sub
clc
cmc
rol
call
pushf
std
mov
cld
cld
cld
mov
std
cld
jmp
mov
mov
lea
jmp
call
movl
mov
pushf
pushf
pushf
push
lea
jmp
neg
pusha
jmp
pushf
pusha
mov
movl
pushl
mov
movw
lea
jmp
movb
mov
pushl
pushf
push
pushf
lea
jmp
stc
shl
rcr
mov
rcl
push
mov
jmp
jmp
push
push
mov
pusha
lea
jmp
lea
jne
btr
dec
xorb
push
mov
pusha
mov
pushl
lea
jmp
movsbw
pushf
xor
adc
neg
movzbw
movzbw
xor
and
sbb
xor
add
sub
bsr
adc
stc
mov
jmp
test
mov
pusha
sub
pushf
pushf
add
pushf
jmp
mov
cmc
pushf
cmp
sub
clc
cmp
test
bt
shr
mov
call
repz
popl
call
btc
shld
bswap
mov
call
jmp
call
call
jmp
mov
mov
jmp
push
mov
pusha
pusha
jmp
rol
mov
pushf
mov
jmp
call
pushf
popl
jmp
cmc
ror
cbtw
mov
cbtw
sar
mov
dec
bsf
setl
add
mov
clc
sub
push
div
jmp
pushl
call
pushl
popl
movl
pushf
pushf
mov
lea
jmp
mov
movzbw
pushf
std
call
mov
push
mov
pushl
mov
jmp
call
lea
movb
pushl
xchg
movzbw
mov
cld
std
std
pushf
cld
jmp
jmp
call
add
clc
sub
push
mov
movw
pushf
mov
lea
jmp
clc
mov
and
movw
pushf
popl
movl
pushl
mov
pushl
popl
movw
push
lea
jmp
mov
jmp
jmp
pushl
mov
jmp
pushf
pushf
mov
pushf
pushf
popl
mov
movw
pushf
pushf
pushl
popl
pushl
pushf
movw
lea
jmp
mov
jmp
pushl
mov
call
bswap
push
bswap
call
call
mov
pusha
lea
jmp
mov
movw
call
pushl
popl
movb
pushf
pushf
pushf
lea
jmp
aam
or
shld
mov
bt
test
test
pusha
sub
push
call
mov
mov
stc
call
push
mov
push
pushf
lea
jmp
mov
mov
pusha
pushf
push
mov
mov
pushl
mov
lea
jmp
mov
mov
pushf
mov
pushf
push
pushf
pushl
lea
jmp
pushf
push
mov
pushl
movb
lea
jmp
mov
mov
pushf
lea
jmp
mov
mov
jmp
jmp
jmp
not
mov
jmp
xor
pushf
mov
push
pusha
test
add
bt
not
bt
cmp
test
call
mov
jmp
pushl
popl
push
pushf
lea
jmp
mov
push
jmp
decl
call
movb
push
mov
lea
jno
push
jmp
xor
pusha
mov
inc
pushf
pushf
lea
jle
decl
jmp
pushl
popl
pushf
push
pusha
lea
jmp
sbb
stc
shl
call
pushf
popl
movw
lea
jne
popl
pusha
push
push
push
lea
jmp
jmp
pushf
popl
movb
mov
pushf
jmp
jmp
pushf
mov
push
push
pushf
pusha
lea
jmp
pusha
movb
mov
pushl
pushf
pushf
lea
jmp
sub
stc
shr
call
jmp
call
repz
popl
pushf
jmp
sub
cmc
shl
call
call
call
jmp
mov
jmp
pushf
popl
push
push
lea
jg
pusha
pushl
popl
pusha
lea
jmp
cmc
sub
jmp
pushf
mov
movw
pushl
push
lea
jmp
pushf
pusha
mov
push
pushf
lea
jmp
shld
shl
mov
stc
clc
bt
add
pusha
lea
jmp
mov
push
movb
pushf
mov
jmp
add
shr
sbb
ror
mov
test
pushf
sub
cmc
bt
pushl
rol
call
bsf
stc
stc
lahf
mov
cmp
push
rcr
btr
mov
pushl
mov
bt
pusha
add
call
mov
mov
movb
pushf
pushf
lea
jmp
jmp
mov
pushf
pushl
pushl
ret
add
shr
xor
add
bts
movsbw
cmp
lea
neg
bswap
not
lea
movsbw
inc
adc
shr
shr
cmc
add
shrd
ror
or
pop
movzbl
pushf
stc
mov
bt
jmp
pushf
mov
pushf
mov
push
push
pushf
lea
jmp
test
xor
mov
call
mov
pushf
mov
mov
movb
pushf
pushf
popl
jmp
jmp
sar
mov
pusha
push
clc
add
push
lea
jmp
call
add
pusha
pushf
pusha
pushf
lea
jmp
mov
pushf
call
add
stc
movb
neg
lea
jg
push
movl
inc
pusha
bt
add
call
jmp
pushf
popl
push
pushl
pushl
mov
pushl
popl
push
pushf
lea
jmp
pushf
pusha
mov
jmp
call
mov
push
jmp
add
neg
mov
pushf
jmp
movb
mov
mov
jmp
pushf
push
lea
js
popl
pusha
lea
jmp
add
bt
push
stc
add
bt
mov
sub
call
pushf
cmp
add
call
movw
push
mov
call
cmc
add
pushf
pushf
ror
movw
jmp
rcr
sbb
btc
add
movzbw
movzbl
pusha
neg
mov
clc
movb
pushf
xor
call
pushf
jmp
mov
mov
push
mov
lea
jmp
call
rol
mov
stc
bt
mov
pushf
add
pushf
pushf
lea
jmp
cmc
mov
jmp
mov
movw
jmp
movb
cwtl
clc
sub
call
shrd
lea
jb
mov
pusha
lea
jp
pusha
pushf
popl
pushf
call
stc
sub
shl
bt
neg
sub
or
dec
sbb
ror
lea
rcr
mov
clc
add
jmp
cwtl
pop
movsbl
cmp
aas
pop
aad
bsr
xor
pop
das
neg
shrd
pop
not
shl
aad
bsr
pop
das
pushf
pusha
cmc
mov
lea
mov
sete
rol
mov
stc
pushl
dec
mov
rcl
stc
push
test
mov
stc
cld
call
shr
call
mov
not
lea
cld
jmp
pusha
lea
jne
call
sbb
movsbw
mov
stc
cmc
cmp
call
pusha
pushf
mov
pushf
call
push
pushf
call
adc
daa
mov
add
call
mov
pusha
lea
jmp
pushf
popl
jmp
push
movw
jmp
pushl
popf
push
mov
pushl
ret
push
pushf
call
not
sbb
push
mov
pushf
jmp
and
daa
cmc
shld
mov
cmp
clc
test
add
pusha
pushf
pusha
pushf
popl
pushf
jmp
jmp
jmp
call
mov
pusha
pushf
jmp
call
sub
mov
mov
lea
jge
mov
push
movb
pusha
lea
jmp
pushf
pushl
popf
pushf
movl
mov
lea
jmp
pusha
test
test
not
push
not
movb
push
and
jmp
pusha
pushf
pushf
mov
repz
popl
pusha
jmp
pusha
pushl
popl
pushf
pushf
pushl
lea
jmp
push
repz
popl
pushf
mov
call
sub
pushf
pushf
mov
mov
lea
jmp
btr
aaa
btr
btr
mov
movsbw
btc
jo
pop
inc
movsbw
pop
rdtsc
shl
or
bsf
pop
setbe
pop
bt
pop
stc
pushf
mov
cwtl
movzbw
cmc
btr
mov
bsr
mov
shr
mov
bts
btc
mov
stc
std
clc
clc
pushl
popf
pushf
pushf
pushf
push
pushl
ret
mov
not
rcr
rol
setp
mov
call
mov
mov
pushf
mov
pusha
mov
jmp
pusha
mov
push
test
mov
add
pushf
push
movw
pushf
lea
jmp
mov
mov
lea
jmp
call
rol
rdtsc
test
test
sub
pusha
pushl
pushf
call
pushf
mov
call
inc
jmp
test
add
call
mov
jmp
pushl
pushf
mov
movzbw
push
mov
pusha
mov
pusha
mov
bswap
movsbl
lea
movzbw
mov
call
push
jmp
pusha
mov
pushf
pushf
lea
jmp
pushf
call
lahf
call
mov
aas
jle
call
jle,pt
adc
jle
or
jle
adc
jle
or
aas
jle
add
jle
out
aas
jle
or
jle,pt
sbb
aas
jle
or
jle,pt
add
jle
adc
jle
or
jle,pt
sbb
jle
or
jle
or
jle,pt
push
jle,pt
out
aas
jle
or
jle,pt
add
aas
jle
or
jle,pt
add
jle
or
jle
or
jle,pt
or
jle
out
aas
jle
or
jle,pt
push
jle,pt
push
jle,pt
or
jle,pt
or
jle
sbb
jle,pt
sbb
jle
or
jle,pt
or
jle,pt
adc
jle
or
jle
push
jle,pt
push
jle,pt
add
jle,pt
or
jle,pt
sbb
jle
call
jle,pt
or
jle
add
jle
add
jle,pt
adc
jle
or
jle
sbb
jle
adc
jle
out
aas
jle
jmp
jle
sbb
jle,pt
jmp
jle
pop
jle,pt
sbb
jle
adc
jle
or
jle
add
jle,pt
adc
jle
adc
jle
push
jle,pt
adc
jle
push
jle,pt
push
jle,pt
push
jle,pt
jmp
jle,pt
push
jle,pt
add
jle,pt
add
jle,pt
add
jle
sbb
jle
add
jle
sbb
jle
jmp
jle,pt
add
jle
pop
jle,pt
pop
jle,pt
or
jle
ljmp
or
jle
call
aas
jle
adc
jle
adc
jle
adc
jle
adc
jle
adc
jle
out
aas
jle
push
jle,pt
add
jle,pt
out
aas
jle
add
jle
adc
jle
add
aas
jle
or
jle
add
jle
sbb
jle
adc
jle
jmp
jle,pt
sbb
jle
sbb
jle
sbb
jle
add
jle,pt
out
aas
jle
or
jle
add
jle,pt
jmp
jle,pt
add
aas
jle
out
aas
jle
adc
jle
add
jle,pt
add
jle
or
jle
add
jle,pt
add
jle
adc
jle
add
jle,pt
add
jle,pt
add
jle,pt
adc
jle
jmp
jle
add
jle,pt
or
jle
ljmp
lods
or
jle
out
aas
jle
adc
jle
add
jle,pt
adc
jle
or
jle
add
jle,pt
adc
jle
or
jle
add
jle,pt
adc
jle
sbb
jle
sbb
jle,pt
or
jle
out
aas
jle
add
jle,pt
add
jle
sbb
jle,pt
adc
jle
sbb
jle
add
jle
or
jle
adc
jle
adc
jle
sbb
jle
sbb
jle
sbb
jle
pop
jle,pt
or
jle
sbb
jle
out
aas
jle
add
jle,pt
add
aas
jle
add
jle,pt
push
jle,pt
or
jle
add
jle,pt
add
jle,pt
push
jle,pt
adc
jle
add
jle,pt
or
jle
adc
jle
or
jle
or
jle
or
jle
adc
jle
or
jle
pop
jle,pt
adc
jle
or
jle
or
jle
adc
jle
add
jle,pt
add
jle
push
jle,pt
out
aas
jle
or
jle
adc
jle
sbb
jle
or
jle
sbb
jle
adc
jle
push
jle,pt
push
jle,pt
ljmp
fsubr
aas
jle
or
jle,pt
or
jle
sbb
jle
or
jle
or
jle
sbb
jle
sbb
jle
je
push
popl
movb
mov
lea
jmp
mov
pushf
mov
jmp
jmp
add
call
aas
mov
bts
btr
mov
pusha
jmp
pushf
btc
pop
neg
mov
pusha
test
stc
stc
add
movb
pusha
pushf
lea
jmp
pusha
call
pushf
movb
pushf
mov
pushf
pushf
movb
lea
jmp
mov
mov
mov
pusha
push
pushf
pushf
lea
jmp
lea
jne
add
mov
pusha
pushf
mov
pushf
and
cmp
cmp
push
push
jmp
call
pushf
pusha
jmp
bt
movsbw
mov
mov
inc
rol
mov
cmp
stc
sub
clc
bt
pusha
pusha
shr
pushf
call
lea
jne
push
push
push
mov
push
pushl
pushf
pusha
lea
jmp
pushl
popl
pushf
lea
jmp
movl
mov
pushl
popl
pushf
pushf
push
lea
jmp
call
pushl
jmp
add
movb
mov
call
mov
lea
ja
pusha
mov
pushf
mov
push
call
mov
pushf
mov
jmp
add
call
push
mov
mov
lea
jo
push
push
mov
call
not
pushl
movw
rol
stc
stc
call
push
mov
push
call
mov
pushf
pusha
lea
jmp
bsf
mov
lea
bsr
neg
mov
pusha
test
call
call
stc
sub
clc
add
shld
jl
xor
clc
shr
inc
jno
neg
pushf
xor
shld
shrd
sete
or
add
not
mov
pusha
cmc
test
movb
add
bt
push
clc
bt
mov
cmc
cmp
add
mov
lea
jmp
call
sub
test
bt
call
pushf
movw
lea
cpuid
cmc
cmc
bt
push
sub
pusha
jmp
pusha
cbtw
push
test
cwtl
cmc
sub
mov
call
mul
mov
jmp
push
pusha
pushf
popl
pushf
movb
pushl
popl
pushf
mov
lea
jmp
call
pusha
push
pushf
rep
shld
and
bsr
mov
rcl
movsbw
jmp
pushl
popl
pusha
pushf
push
pushf
lea
jmp
pushf
sbb
rol
notl
rol
jmp
pusha
repz
popl
pusha
pushf
call
pushl
repz
popl
movw
pusha
pushf
mov
call
push
jmp
sub
push
clc
shl
call
mov
shr
mov
clc
add
jmp
call
mov
jmp
pushf
pushf
push
repz
popl
pushl
mov
call
jmp
daa
pusha
cwtl
aam
mov
cmc
sbb
sub
btr
mov
jmp
clc
movzbl
jmp
cmp
sub
test
call
add
call
bts
mov
push
add
pusha
pushf
pushl
pushl
lea
jmp
mov
pusha
mov
bt
pushf
test
test
sub
push
movw
movl
pushf
lea
jne
cmc
bt
sub
pusha
movb
xchg
push
pusha
jmp
pushf
jmp
sub
test
or
movw
movb
push
lea
je
clc
xor
test
cmp
jmp
pusha
pushf
pushl
popl
movl
lea
jmp
call
