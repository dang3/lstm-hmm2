jg
call
add
mov
mov
sub
sub
imul
mov
or
repnz
or
push
mov
add
cmp
or
add
sub
sub
add
sub
cmp
movl
popf
cmp
sbb
add
sar
outsl
divl
adc
enter
push
mov
js
fstpl
pop
cmp
and
sbb
xor
lret
or
sub
mov
pusha
sti
pop
sti
cmp
mov
add
rolb
mov
roll
mov
out
add
cmp
sub
or
dec
or
rcr
mov
pop
mov
sbb
cli
out
add
mov
pusha
pop
mov
add
adc
pusha
fcmovnu
or
test
shrb
call
inc
inc
clc
add
inc
decb
add
sub
outsb
in
scas
pop
jo
sub
sbb
push
xchg
adc
and
mov
sti
xchg
mov
pop
add
mov
sub
mov
sub
mov
jle
ret
pop
or
rorb
or
mov
sbb
adc
add
pop
sbbl
pop
cld
test
je
ret
pop
lods
xor
mov
adc
mov
or
push
mov
add
sbb
mov
repnz
ss
mov
dec
push
mov
sub
add
push
mov
push
push
cs
mov
mov
dec
add
mov
add
or
pop
pop
loopne
mov
xchg
jl
scas
jo
ret
bound
adc
rcr
add
out
add
xor
or
gs
out
lock
push
enter
mov
arpl
sub
rorl
cmpsb
push
add
insb
add
xor
mov
pop
cmp
and
inc
imul
mov
lcall
sbb
repnz
mov
neg
cmp
push
mov
add
scas
xor
add
adc
push
out
les
add
jmp
mov
mov
or
adc
adc
add
add
sbb
push
into
sub
add
mov
in
lds
add
xchg
sbb
mov
test
push
int3
pusha
imul
test
sub
shl
call
sbb
inc
mul
adc
or
xchg
push
add
rol
jle
lret
popa
dec
mov
out
sbb
fs
fdiv
andl
mov
dec
push
xor
lcall
mov
sbb
mov
push
ret
loop
or
jb
js
rorb
or
pop
jge
movsb
inc
mov
push
cmp
add
mov
add
fistpll
jbe
sbb
sbb
inc
stc
push
insb
adc
jne
push
adcl
mov
inc
imul
mov
cmp
ret
xlat
inc
cmp
loopne
es
mov
shlb
add
cmp
add
sbb
push
cwtl
add
xor
mov
adc
lods
jmp
mov
rcrb
pop
aad
push
jl
cli
or
icebp
inc
cld
push
xor
and
cs
das
int3
loopne
pop
out
pop
mov
mov
mov
call
mov
mov
incl
enter
adc
sbb
mov
inc
mov
and
xor
popa
icebp
mov
or
scas
test
lock
pop
cs
inc
div
ljmp
jb
or
cmp
cli
adc
sub
sahf
pop
cs
sbb
sbb
mov
push
xchg
adc
rclb
mov
add
and
jbe
popa
fists
ret
stos
ret
rcrl
push
jp
or
cmp
push
leave
ret
call
xchg
add
sbb
mov
push
add
sbb
sub
or
clc
adc
out
push
or
nop
in
shl
xor
lock
add
add
out
pop
test
subb
add
rcl
int3
cmp
add
mov
push
shl
scas
jb
sbb
push
shl
mov
dec
inc
jnp
mov
adc
mov
rcr
clc
jp
fs
adc
pushf
loopne
mov
loopne
add
jb
call
ss
add
movsb
rcl
dec
sbb
add
xor
and
rcrb
sbbb
aad
rol
mov
cmp
pushw
addl
loopne
lds
adc
enter
mov
into
pop
inc
test
xor
ret
add
or
fcoml
mov
enter
shlb
sbb
push
cmp
mov
pop
sbb
push
sub
mov
add
and
mov
bnd
jb
leave
add
and
bndstx
lcall
and
push
scas
jnp
add
mov
dec
mov
mov
bnd
mov
push
pop
sbb
das
jp
stos
lock
mov
adc
add
mov
enter
outsb
sbb
popa
xor
pusha
jb
add
pop
insb
adc
mov
or
lcall
push
inc
push
xchg
add
adc
add
mov
in
adc
adc
clc
sub
sbb
js
sub
dec
lcall
xchg
sub
scas
popa
cmp
sbb
inc
rorl
mov
or
popa
sbb
sub
xchg
lcall
adc
adc
rolb
lods
loop
dec
inc
adc
sub
pop
ret
or
jo
sbb
jnp
or
cmp
int3
lret
inc
add
pop
testb
add
shll
pop
lods
pusha
mov
faddl
cli
add
jo
or
clc
sbb
cmp
lret
pusha
rcr
clc
es
xor
je
cmp
mov
cld
call
hlt
push
stc
sbb
dec
in
or
and
scas
into
push
adc
outsb
adc
mov
adc
rolb
mov
jle
nop
testb
lds
xchg
call
xor
pop
dec
cld
mov
push
sub
sbb
xchg
add
aaa
adc
data16
stos
sub
xlat
arpl
lret
lods
cmpsb
adc
mov
push
test
orb
jo
mov
fstpt
iret
out
in
shrb
test
or
adc
call
cs
mov
insb
es
add
roll
sbb
into
roll
int3
fwait
dec
sub
cmp
jo
icebp
or
pusha
mov
or
cmpsb
cs
fldenv
pop
sbb
scas
fldcw
xor
call
sub
rclb
add
add
adc
mov
enter
adc
pop
mov
rcl
loop
xor
ljmp
sbb
pop
mov
adc
adc
adc
add
aad
push
pop
mov
xor
mov
adc
jbe
push
hlt
pop
test
cmp
xchg
mov
push
xchg
cmp
out
imul
cmp
orl
push
jae
ret
inc
fistl
call
inc
add
roll
cmp
jo
add
sbb
mov
daa
sub
hlt
testl
imul
inc
pop
mov
daa
rcl
jbe
push
mov
jb
in
jp
inc
hlt
lds
lods
shrb
rcrl
lock
mov
or
shrb
dec
push
add
and
pop
aad
add
xor
cmp
xchg
sub
cmp
cvtps2pd
mov
add
aas
and
adc
adc
add
mov
or
adc
sbb
cmp
out
sbb
sbb
sbb
lds
call
lock
jo,pn
sbb
les
sbb
sub
mov
loope
mov
inc
cmp
fcom
xchg
inc
sbb
mov
mov
push
jo
sarb
popa
repnz
loopne
jbe
inc
or
rol
adc
adc
fs
push
test
mov
adc
outsb
cmp
jo
outsl
es
jb
xchg
js
ljmp
cmp
push
out
rcrb
add
cli
xchg
sbb
push
jo
mov
mov
add
divb
add
add
inc
sub
push
mov
pop
mov
scas
or
add
andb
in
mov
loopne
or
jp
mov
mov
lods
or
es
loope
mov
lret
sub
and
mov
adc
sub
sbb
out
das
push
call
lcall
or
xor
pop
inc
add
ret
aaa
negb
orb
or
out
and
or
push
in
mov
nop
mov
and
inc
cmc
rcl
xchg
adc
push
rcl
cmp
sub
add
mov
xchg
pop
adc
ljmp
imul
stos
rorl
loopne
nop
mov
adc
mov
xchg
add
ljmp
xor
icebp
sbb
mov
sbb
subb
pop
rcrb
push
adc
xor
sbb
mov
pusha
out
into
and
dec
add
pop
jl
addl
mov
les
dec
insb
mov
inc
les
and
out
addl
mov
pop
xchg
icebp
pop
mov
mov
into
divb
ret
mov
ret
add
and
sbb
dec
fisubl
call
pop
leave
pop
pushf
add
mov
xchg
add
xlat
pushf
icebp
js
cmp
mov
sub
pusha
add
fmull
add
push
cs
add
ljmp
lods
mov
fs
inc
xchg
jae
cli
ret
and
orl
mov
insb
inc
adc
sub
fbld
push
pop
sub
js
out
sbb
dec
or
jmp
aas
pop
push
lock
adc
sarl
add
adc
jns
cld
sbb
cmp
add
scas
mov
pop
sub
add
leave
js
jo
adc
or
sbb
sbb
push
int3
inc
sub
dec
xor
mov
sbb
sub
lea
icebp
adc
inc
shl
stos
inc
pop
dec
mov
int3
rcll
test
push
icebp
xor
push
popf
mov
aam
loop
imulb
push
pop
sbb
cmp
js
and
stos
or
push
pop
addl
mov
loopne
pop
cs
cmp
add
pop
cmp
sub
lock
test
xor
pop
imul
cwtl
sbb
xchg
and
cmp
sub
data16
pop
pop
adc
jg
push
push
push
push
push
sbb
or
bound
mov
xchg
aam
idivb
rorb
icebp
add
mov
mov
lods
dec
or
or
notb
jo
mov
xor
mov
push
or
movsb
and
leave
gs
xchg
pop
sbb
pop
loopne
push
sbb
sbb
adc
jbe
ljmp
push
stos
sbb
arpl
rolb
xor
aad
movl
cmp
fcom
lock
shlb
push
pop
loope
lcall
mov
xor
jo
sti
call
in
push
and
orb
push
mov
nopl
loopne
jnp
pop
add
divl
out
or
mov
enter
out
push
pusha
scas
imulb
mov
jmp
mov
sbb
push
addb
pop
js
sbb
jbe
xchg
jg
or
adc
js
adcb
inc
lock
or
cld
xchg
push
mov
ret
sbb
xchg
and
mov
xchg
sbb
pop
lret
mov
iret
jo
inc
add
aam
hlt
scas
sahf
movsb
or
mov
add
loope
jnp
and
loope
testl
adc
push
bound
xor
testb
jo
push
mov
push
add
je
push
push
push
mov
and
or
dec
bound
mov
lock
jb
rorl
sub
add
jmp
lds
jmp
push
enter
shll
xchg
add
stos
add
xor
mov
mov
je
pop
inc
jb
add
xchg
pop
bsr
vmwrite
jge
push
sbb
or
ret
push
cmpsl
xlat
add
movsb
in
push
add
sub
rclb
or
ljmp
subl
xchg
xor
pushf
xor
xchg
adc
jb
sub
or
dec
enter
xchg
sub
sub
push
mov
test
push
xor
or
and
rolb
ja
or
lock
addr16
cmp
inc
pop
sahf
mov
mov
add
push
enter
pushf
xor
sahf
and
pusha
inc
subl
add
jp
or
mov
loopne
rorl
push
fcompl
cmpsb
ret
fidivrl
mov
dec
push
fs
js
inc
and
and
push
or
mov
sbb
jae
pop
sbb
cs
sbb
repnz
les
adc
push
inc
rcrl
cmp
loopne
mov
mov
pop
decb
push
psubusw
adc
out
ja
push
push
push
push
inc
xchg
pop
add
aam
pusha
or
mov
arpl
and
dec
test
rolb
sbb
add
int3
in
jae
add
outsb
or
pop
lods
xchg
mov
push
cmp
inc
rcl
pop
sbb
sbb
lock
push
jp
ds
mov
scas
mov
scas
je
mov
push
mov
jbe
negb
push
cmp
mov
mov
adc
jmp
enter
sub
movsb
shll
add
adc
mov
or
lret
push
sti
mov
inc
pop
lock
out
nop
ret
cmpsb
into
xchg
out
or
lret
sbb
xchg
and
jp
dec
inc
loopne
lods
jb
scas
in
or
ret
mov
sbb
xchg
iret
mov
cltd
sub
rorl
pop
inc
fbld
imul
leave
ret
sub
icebp
fs
push
push
push
mov
icebp
pop
rcr
ficoml
lcall
pushf
add
inc
pusha
sub
sbb
jmp
push
mov
call
fcmovnbe
leave
inc
add
xlat
dec
sbb
ljmp
adc
dec
pushf
js
xor
shlb
inc
adc
xchg
xchg
enter
xchg
or
into
add
bound
pushf
jns
push
sarl
or
sahf
add
test
or
add
popa
lcall
add
pop
imulb
or
movsl
shrl
dec
in
mov
es
add
test
movsb
xchg
cmpl
jl
sbb
les
sub
push
xchg
movl
insl
in
rol
xlat
lret
fisubs
sti
jne
mov
fstps
clc
adc
cwtl
sqrtps
dec
jl
jmp
outsb
enter
loopne
push
je
into
mov
inc
dec
je
icebp
out
dec
adc
jo
or
push
inc
test
lods
push
adc
outsl
mov
dec
push
inc
inc
mov
xchg
or
cmpsb
adc
sbb
adc
cmp
mov
scas
push
cli
add
cltd
add
mov
cmp
nop
xchg
pop
rorb
loop
jb
cli
pop
xor
push
test
dec
jge
xor
rolb
in
sub
xchg
inc
add
pop
jp
movb
push
shl
test
push
xchg
push
mov
xor
js
mov
int3
rcrb
repnz
fadds
lcall
ds
js
cs
push
loopne
shr
mov
add
aad
xor
mov
loopne
into
jl
rcl
pusha
test
fistl
adc
mov
lret
mov
es
sub
mov
add
pop
aam
into
insb
push
adc
scas
bound
cmp
push
lret
push
sbb
pop
push
ds
adc
fldt
mov
test
call
inc
adc
push
adc
jo
sub
sbb
sbb
add
pushf
dec
xchg
dec
ja
sarb
push
idivb
rorl
call
or
jl
mov
sub
mov
insb
adc
lds
pushf
adc
ret
adc
or
jo
sbb
add
add
and
test
mov
fmull
mov
loopne
xchg
xor
ds
add
hlt
pusha
fmulp
push
push
push
lods
add
add
dec
mov
xor
movsb
sbb
xor
and
adc
and
fxch
loop
pop
cmp
adc
test
loopne
rcrw
lcall
add
ficoml
pop
pop
rorb
dec
add
mov
leave
cmp
shr
xor
xor
sub
adc
pop
ja
sbb
xor
jne
pop
leave
dec
ret
adc
jo
sub
cmp
add
or
push
mov
rol
loop
adcb
and
cltd
push
into
push
add
sbb
mov
sbb
andl
lods
cmc
add
ljmp
mov
nop
into
in
inc
pop
outsl
enter
sbb
add
aam
jnp
addl
je
push
inc
sbb
xor
cli
add
sub
jo
jmp
aam
fsubl
inc
adc
into
or
movsb
inc
push
cltd
test
xchg
loopne
or
lock
mov
sbb
rolb
lock
rcl
adc
add
fld
pop
stos
aaa
add
mov
add
sbb
lods
testb
and
sbb
into
fsubrl
jns
aam
sbb
mov
adc
cmp
jb
push
pop
ret
xor
addb
mov
pop
test
data16
cmp
lock
lcall
adc
pop
mov
sbb
test
add
in
mov
push
ret
adc
inc
mov
xlat
rolb
xchg
mov
repz
das
mov
js
lahf
in
sub
or
ret
or
push
sub
cmp
lret
ficompl
cmp
sub
movl
add
cmpsb
dec
sbb
inc
mov
or
lock
pop
jo
mov
push
push
dec
gs
stc
ret
and
and
fadd
or
imul
into
mov
pop
mov
sbb
mov
inc
adc
scas
sbbl
mov
pop
xchg
or
ja
movsl
push
inc
aaa
dec
rcrl
add
leave
imul
or
loop
mov
mov
mov
enter
loopne
push
add
jnp
cli
inc
pop
enter
push
xlat
out
or
rcrb
into
repnz
lods
and
icebp
dec
js
add
add
loopne
hlt
sbb
ret
jl
sub
mov
clc
push
inc
sbb
pop
cmp
rcl
push
sbb
dec
inc
pop
sub
enter
or
dec
int3
dec
push
lock
call
xor
pop
jnp
and
mov
shr
ficoms
imul
cmp
and
shll
iret
ret
mov
les
xchg
push
dec
add
roll
in
add
jo
jne
xchg
cmp
pop
pop
and
push
fmuls
stos
ret
add
loop
loopne
cmp
stc
sub
mov
or
jmp
arpl
pusha
and
dec
jbe
xchg
pop
cmpsl
daa
arpl
inc
sbb
addl
sub
shl
pop
push
jo
sbb
inc
mulb
push
mov
loope
fimuls
dec
inc
sub
mov
loopne
xchg
inc
inc
mov
mov
sub
shll
xlat
add
les
test
aas
cmc
push
popf
cli
popf
push
xor
mov
shll
cmp
int3
push
mov
ret
fsubrl
or
lahf
or
int3
and
rolb
and
add
push
jb
push
lock
add
rolb
xor
data16
out
enter
and
pop
pop
js
rclb
sarl
add
add
rcl
mov
lods
insb
lret
imul
lods
cmp
add
add
bound
mov
cmp
hlt
shr
div
push
or
sbb
pusha
cmpsl
icebp
add
xchg
in
cli
rolb
adcb
mov
or
scas
shll
orb
icebp
sbb
mov
daa
xor
pusha
nop
subl
add
je
and
loop
ret
add
mov
lods
ds
pop
xchg
cs
popa
and
lcall
inc
test
loop
or
push
sbb
pop
push
xchg
push
sbb
idiv
add
mov
push
addl
add
mov
not
sbb
outsb
mov
adc
lret
cmp
mov
cmp
dec
dec
dec
hlt
hlt
adc
jmp
mov
adc
or
inc
xchg
addr16
je
test
into
add
loop
push
sub
sbb
sbb
push
dec
xchg
jp
shr
jmp
mov
imul
enter
cmp
in
cmp
idivb
adc
mov
jle
call
cmp
into
adc
ljmp
adc
subl
xadd
test
dec
mov
mov
xchg
or
and
in
mov
mov
mov
test
dec
mov
sbb
sbb
add
shll
and
inc
test
mov
andb
xorb
movb
int3
rorb
dec
into
sub
add
and
jmp
test
or
and
test
test
add
loopne
sbb
push
scas
add
mov
and
or
call
aaa
cmp
test
push
push
sbbb
pop
into
adc
adc
fdivs
cs
out
fdivrs
scas
test
jecxz
cmpsl
shlb
sub
inc
xor
add
sub
hlt
mov
add
mov
add
or
xor
cmp
leave
jb
inc
jl
stc
ucomiss
push
jecxz
or
outsb
les
dec
pop
mov
mov
data16
gs
xchg
jmp
or
pop
add
dec
pushf
jl
ret
ds
sbb
cmp
das
or
rorb
sub
movb
mov
andb
xor
ljmp
or
lods
test
add
cmp
loopne
sub
pop
nop
jo
pop
clc
pop
mov
sbb
mov
rcrb
test
or
je
add
adc
shr
inc
les
div
orl
popa
out
add
ljmp
inc
es
cld
cwtl
lock
mov
push
mov
les
push
pop
adc
pop
outsb
lret
add
jp,pt
sahf
add
mov
sub
adcb
outsb
lock
add
pop
mov
inc
dec
loopne
aad
mov
xchg
sbb
sbb
xor
test
mov
sbb
jl
sub
adc
push
mov
push
enter
cmp
leave
mov
add
nop
dec
imul
or
xor
addb
pop
sbb
push
push
into
and
or
sbb
orl
cwtl
and
ss
adcb
push
sbb
inc
and
jp
add
mov
fstpl
push
mov
loop
icebp
ret
push
sbb
sbb
fsin
add
dec
adc
mov
inc
push
je
loope
scas
lret
adc
or
andl
je
enter
dec
lock
imul
inc
lret
xor
pushf
test
dec
mov
out
mov
or
aad
aas
inc
stc
adc
xor
test
mov
vpshuflw
dec
mov
rorl
push
and
add
sub
js
loopne
mov
xchg
sahf
sbb
icebp
cmpsl
int3
push
mov
sbb
hlt
icebp
xor
shll
adc
push
pusha
cltd
cli
shlb
add
add
xlat
dec
xchg
subb
pop
lock
sbb
pop
inc
dec
in
add
and
sbb
push
jo
fistl
jecxz
in
add
sbb
adc
mov
push
cmp
pushf
mov
imul
mov
mov
shrb
cli
or
sbb
bound
movsb
adc
ret
push
push
push
mov
jmp
leave
mov
rolb
daa
mov
enter
cmpsb
mov
inc
incl
test
or
adc
dec
shrb
ret
mov
sbb
adcl
push
into
pop
jo
les
push
push
stc
pop
cs
push
insl
in
loopne
xor
inc
leave
and
sbb
and
pop
insl
lods
dec
and
or
mov
into
lds
sbbb
inc
cmpsb
xchg
es
dec
lret
adc
arpl
icebp
daa
loop
jne
int3
jne
sub
xchg
or
adc
sbb
pop
mov
adc
movsl
push
mov
or
std
and
aam
pop
dec
call
popa
mov
shlb
mov
dec
jne
shrb
jp
ds
cld
call
adc
pop
adc
int
cmpsl
rolb
sbb
xchg
xor
out
push
std
insb
add
mov
pop
cld
lock
faddl
or
dec
push
mov
adc
jbe
dec
inc
test
add
xchg
clc
cwtl
sbb
lock
outsl
push
dec
call
sbb
adc
je
jnp
sbb
js
adc
pop
repnz
cwtl
mov
cmp
clc
push
lea
pop
dec
dec
pop
push
lret
or
cmc
adc
movsb
leave
test
sub
into
test
pop
cmp
insl
adcb
jo
pop
adcl
shll
pop
bound
xchg
data16
push
movzbl
jns
add
mov
aaa
pop
rolb
inc
out
in
jecxz
pop
cwtl
pop
sbb
pop
shl
lahf
addl
sbb
je
hlt
mov
outsb
dec
bound
sbb
ss
or
xchg
sbb
push
mov
rolb
adc
insb
cmp
inc
jae
jb
adc
adc
mov
sub
into
lods
dec
loop
sbb
lret
pop
loopne
cwtl
mov
int3
test
test
in
call
inc
psrld
or
call
push
ret
sbbl
sbb
rol
or
sub
aam
add
mov
mov
adc
xor
lds
enter
shl
enter
inc
lods
sub
and
push
out
lock
imul
cmpb
addr16
roll
sbb
push
adc
xchg
adc
mov
js
lds
call
push
rcrb
ret
mov
or
sbb
adc
push
xchg
push
pop
fucompp
push
xchg
jo
inc
adc
roll
jo
pop
pop
jmp
aam
test
test
mov
rclb
aam
push
sti
add
mov
xlat
jo
jbe
adc
mov
pop
sbb
loopne
adc
addb
mov
js
mov
lods
pop
or
in
loopne
push
add
aaa
popa
xor
dec
clc
test
sbb
rolb
loop
pushf
sub
pop
and
jp
dec
and
push
push
or
or
es
fdivrl
daa
pop
loopne
cmp
add
sahf
add
cmp
dec
pusha
shlb
xor
jmp
dec
or
inc
imul
push
inc
jno
jbe
add
cltd
pop
inc
push
mov
roll
dec
leave
adc
inc
mov
in
clc
sbb
mov
icebp
dec
fldenv
sarl
cmp
add
xchg
pop
pop
rclb
adc
inc
movsb
pusha
sub
das
adc
scas
push
jnp
push
sbb
adc
fildll
rolb
pop
add
cmpsb
and
iret
rcrl
ret
or
sbb
xor
test
jno
sub
rorl
sbb
xor
ficomps
imul
or
sub
adc
jno
mov
pop
or
add
in
jmp
add
push
add
sub
mov
dec
or
dec
xor
call
sub
imul
loopne
xor
jmp
xor
in
jo
add
adc
xorl
inc
push
cmp
inc
add
add
jb
sbb
sub
dec
dec
xor
subb
mov
cmp
call
enter
bound
or
add
fistpll
adc
sub
cmp
mov
pusha
dec
mov
mov
pop
test
rolb
push
test
sbb
push
jecxz
ret
imul
and
push
cmp
out
dec
or
jle
push
sbb
adc
and
xor
loopne
hlt
mov
adc
test
leave
mov
sbb
xchg
inc
mov
add
push
test
or
arpl
pushf
mov
or
mov
clc
sub
push
mov
les
sbb
and
dec
lock
cs
lret
or
mov
test
and
test
inc
test
cmp
js
or
cmpl
loopne
testb
fdivrs
xchg
ret
ja
inc
data16
adc
add
test
mov
mov
adc
xchg
inc
mov
add
subb
scas
dec
and
dec
ret
sbb
adc
push
inc
dec
xor
hlt
cmp
inc
add
rcr
scas
inc
jae
sub
int3
into
or
andb
repnz
jbe
xchg
xor
adc
loopne
cmp
add
push
pop
xchg
push
mov
inc
xchg
add
dec
adcl
adc
add
loopne
xor
cs
add
aam
xor
mov
fs
shrb
imul
repnz
sarb
test
loop
and
push
mov
bound
sbb
pusha
icebp
sub
and
mov
shlb
or
icebp
inc
test
cmpsb
leave
sbbb
ljmp
jg
enter
mov
sub
inc
or
jle
adc
bound
mov
popa
jmp
jne
sbb
enter
ds
push
sub
or
adc
dec
cmp
cmp
mov
adc
hlt
ret
add
jbe
pop
mov
fsubrs
wbinvd
adc
push
sub
gs
adc
popf
jg
iret
rorb
imul
imul
mov
push
test
adc
fwait
sbb
adcb
dec
sbb
cli
outsb
and
mov
out
out
lea
cwtl
sbb
jp
pop
mov
push
loopne
jg
fidivrs
push
dec
jecxz
shrl
fwait
sbb
clc
or
int3
aad
add
aaa
xor
mov
fstps
push
add
push
jl
sub
push
cld
fldcw
mov
jo
or
das
ret
and
or
xchg
jno
dec
bound
rorb
pop
aam
and
subb
jl
lods
andl
incb
data16
clc
sbb
xchg
mov
and
stc
or
in
mov
jb
enter
cld
jb
push
repz
mov
add
adc
aaa
sahf
push
out
test
inc
push
add
fdivl
jmp
aad
xor
push
stos
and
enter
inc
dec
cltd
cli
push
adc
ret
fisubs
addb
ljmp
out
add
arpl
and
jl
xlat
fcomps
adc
outsb
cmp
into
dec
cmp
or
es
inc
mov
popa
jecxz
inc
sbb
mov
clc
fs
inc
leave
pop
or
adc
aam
aad
mov
pop
je
jbe
push
and
out
jo
shll
out
adc
mov
jp
adc
lea
inc
mov
push
dec
jge
stos
mov
or
xor
rcrb
mov
pop
pop
adc
push
adcb
jge
sub
mov
gs
xchg
add
pushf
lcall
cmp
addr16
sbb
addr16
into
imul
mov
or
dec
into
jle
sbb
icebp
sbb
ret
push
push
leave
and
lock
or
cmp
repnz
jle
add
add
pop
push
scas
sbb
adc
push
add
cmp
push
or
push
push
dec
loope
push
cmp
pop
xchg
in
inc
jl
shll
jge
add
mov
pop
inc
and
fdiv
daa
mov
pop
xor
int3
push
cmc
sbb
pusha
adc
xchg
dec
sub
sahf
mov
shlb
movl
jo
ljmp
jl
push
push
clc
add
sbb
sbb
or
push
cmp
pushf
push
sbb
pop
addr16
dec
sbb
fildl
xchg
sbb
mov
push
cwtl
add
add
and
or
mov
push
inc
aad
mov
adc
sbb
clc
scas
push
or
mov
nop
or
cmpsb
inc
mov
adc
enter
cmp
fs
jno
rclb
sbb
push
adc
adc
push
adc
jns
jo
mov
dec
push
lret
rcl
push
push
push
and
xchg
fcoml
ljmp
push
cli
js
stos
sub
inc
jl
pop
xor
cmp
inc
sub
cmp
xchg
and
aad
adc
je
das
call
pop
addb
push
pop
loope
popf
cmp
push
adc
stos
sbbb
psubb
push
clc
and
add
bound
mov
add
and
jp
popa
aaa
int3
rcl
cwtl
cld
pop
adc
mov
push
rclb
pop
jbe
cmp
mov
dec
loopne
push
ficoml
sbb
je
enter
jb
push
fadds
mov
mov
mov
pusha
adcb
fimuls
push
clc
leave
testb
nop
rolb
inc
cli
clc
add
add
ret
stos
out
lret
or
sbbl
into
add
dec
add
sbb
dec
in
xor
add
mov
push
cmp
orb
ljmp
adc
mov
inc
push
inc
cmp
or
jo
mov
push
adc
mov
dec
or
xor
add
inc
push
aad
fmul
ljmp
or
addb
jno
mov
stos
sbb
mulb
adcl
sbb
mov
rcll
mov
call
mov
jbe
add
enter
and
fistpl
push
push
fwait
cmp
add
mov
popa
sub
adc
cmp
imul
loopne
lcall
es
fcomip
pop
pop
push
jne
test
js
mov
pop
sub
adc
add
adc
jp,pn
inc
mov
and
dec
in
daa
cmp
stos
lock
or
mov
stos
ret
enter
xchg
jmp
xchg
push
ret
dec
push
fcmove
repz
sub
aam
add
xor
movsb
mov
inc
or
and
lret
and
xor
adc
pop
jne
mov
js
lock
aam
js
orb
fs
or
dec
or
pop
loope
cwtl
push
ds
mov
das
sbb
sbb
mov
mov
ss
or
sub
adc
push
xchg
cs
cmp
shll
inc
jmp
dec
xor
mov
imulb
or
rcl
int3
cs
rcl
fs
je
cmp
push
ljmp
insl
movb
mov
mov
adc
ficomps
push
enter
lret
sahf
inc
arpl
mov
mov
test
adc
add
sub
xlat
push
icebp
xchg
mov
mov
adc
ret
add
std
insb
pop
add
dec
xchg
cmp
sbb
cli
sbb
std
data16
add
push
xchg
negb
and
mov
out
xchg
scas
pusha
inc
dec
jb
sbb
mov
movsb
ret
or
jo
ds
xor
cld
jae
push
mov
lock
jbe
inc
or
roll
mov
inc
loope
leave
cmp
je
scas
xor
in
fiaddl
xor
pop
popa
inc
add
jmp
std
js
mov
sbb
xchg
sub
mov
or
lock
mov
xchg
std
ret
aaa
enter
add
sarb
inc
filds
popa
dec
dec
cli
jp
inc
shlb
dec
push
pop
sub
add
and
xchg
jmp
or
fsubrl
xor
jb
sbb
inc
idiv
iret
sahf
xor
add
cltd
dec
push
and
shr
push
sub
mov
icebp
js
lcall
loope
mov
test
and
jb
shl
stos
dec
jp
mov
clc
cltd
adc
add
add
sbb
sbb
iret
negb
ret
mov
sbb
and
ret
ss
leave
push
push
out
sbb
push
test
xchg
xor
mov
pop
rolb
sbb
adc
add
je
push
mulps
dec
sub
nop
add
mov
pusha
inc
fmuls
inc
and
call
sbb
clc
scas
push
mov
inc
js
pop
jnp
jo
or
les
repnz
fcoms
push
loope
or
jp
sbb
hlt
inc
inc
add
xorl
push
sbbb
or
add
mov
push
add
enter
sbb
cmp
mov
or
sbb
jne
push
mov
sub
sbb
pop
pusha
sub
cmp
lock
bound
inc
sub
push
inc
cli
jb
lods
scas
or
fs
add
icebp
push
popa
and
testb
xor
mov
movsb
ds
cmpl
adc
dec
stos
leave
pop
inc
lock
lret
add
pop
shl
orl
lds
add
push
dec
push
or
dec
sbb
pusha
mov
sbb
cmpb
jg
aam
xchg
rol
adc
mov
cli
and
jp
cmpsb
xchg
push
push
push
hlt
wbinvd
inc
lcall
or
mov
pop
fistps
movaps
cmp
mov
aaa
or
aad
push
pusha
dec
sub
ficoml
adc
xor
add
and
inc
js
xor
mov
pop
add
xor
cmp
sub
into
cmp
stc
cmovo
sbb
shrb
leave
ljmp
mov
icebp
xchg
adc
cmp
jno
mov
push
pusha
imul
push
mov
xor
jbe
push
or
cmpsb
js
stos
or
lods
inc
dec
push
sbb
jl
in
and
fstpt
push
jae
push
movsl
push
xor
test
in
or
movb
cmp
pop
adc
or
sub
dec
imul
mov
add
push
cli
mov
inc
mov
push
adc
adc
pop
inc
and
icebp
add
lret
inc
mulps
cmp
sub
repnz
sbb
inc
pop
xor
icebp
jnp
rol
sub
mov
sbb
sub
les
leave
icebp
leave
ljmp
inc
js
add
xchg
push
mov
addl
pop
addr16
sbb
out
dec
and
or
adc
lods
adc
loope
insl
add
loope
inc
sbb
mov
clc
mov
leave
jp
push
cmpsl
popa
add
loopne
or
xchg
xchg
cs
push
stos
ret
push
add
movb
pop
out
aam
ljmp
adc
invd
push
push
cwtl
rolb
stc
lret
sti
xor
cmp
sub
or
into
dec
mov
fiaddl
insl
mov
mov
arpl
mov
mov
cmpsb
dec
sub
aam
leave
sub
adc
or
mov
test
adc
mov
jl
jmp
jae
js
mov
cli
dec
push
sahf
mov
adc
mov
pop
jb
xor
cmp
and
std
or
aaa
push
pop
jo
pop
rcl
add
cmpsl
and
ss
leave
les
xchg
popa
iret
cmpsb
push
cld
mov
daa
hlt
mov
es
xchg
js
call
ret
lea
outsb
test
and
or
lods
ljmp
pop
dec
hlt
sbb
add
mov
sub
push
add
add
jnp
mov
das
icebp
je
loopne
pop
test
push
mov
mov
and
push
push
icebp
or
mov
mov
add
sub
rol
push
xchg
pop
sub
ds
mov
add
rcrb
leave
jmp
outsb
ret
stc
sbb
push
popf
mov
sub
popl
mov
cmp
sub
rolb
rolb
icebp
jle
adc
in
pop
adc
inc
and
xchg
and
add
fnstsw
mov
or
popf
js
push
mov
and
pop
es
shlb
pminub
roll
xchg
cmp
adc
mov
push
xchg
inc
ret
sbb
xor
push
subb
shrb
lock
inc
sub
pop
adc
popf
scas
lahf
jns
dec
ljmp
or
aaa
xor
insb
jmp
mov
notb
arpl
in
call
push
push
int
cld
xor
add
sbb
mov
test
add
hlt
mov
add
add
sub
movb
mov
mov
gs
test
and
push
iret
pushf
jge
inc
adc
ret
or
repnz
and
add
in
adc
mov
mov
enter
add
adc
mov
insl
arpl
push
and
xchg
arpl
adc
push
lcall
loop
jo
mov
out
cmp
rorl
fxch
add
sub
or
ljmp
popa
adc
and
popa
es
add
enter
ret
push
push
pop
add
sbb
adc
or
mov
mov
loop
test
sub
push
sarb
fwait
add
sbb
cmp
add
movsbl
xor
shl
call
add
inc
jmp
push
test
lods
in
lret
dec
loop
xor
filds
cmp
test
punpckhdq
ds
outsl
sub
jbe
sbb
or
sub
data16
adc
xchg
pop
push
ja
adc
daa
inc
sub
or
jle
clc
pop
push
cmp
push
sub
or
and
xchg
push
mov
cmp
add
add
es
jnp
inc
mov
outsb
push
rcrb
popa
cmp
es
sub
je
pop
mov
sub
cmp
nop
jo
mov
lock
mov
jno
loopne
push
and
out
sarb
shr
adc
mov
ficoml
mov
gs
hlt
adc
adc
subl
stc
cwtl
nop
push
or
fs
xacquire
test
xor
jbe
push
test
sbbb
jmp
dec
pop
ds
fists
pop
ret
loopne
sub
nop
adc
hlt
repnz
mov
repz
push
clc
xor
add
pop
add
cltd
js
pushf
mov
or
sahf
sbb
icebp
add
push
or
movsb
add
mov
cmp
adc
sbb
push
sbb
xchg
mov
lea
pop
push
push
inc
mov
inc
push
dec
dec
inc
fcoms
inc
and
call
sbb
or
inc
push
mov
ret
cmpb
rorb
pop
push
popa
loope
push
cmc
or
pop
insb
push
add
cli
pop
cwtl
mov
jno
insb
inc
mov
imul
les
and
fcom
push
or
call
or
sbb
stos
sbb
sbb
lods
popa
pusha
das
push
bnd
mov
lcall
or
mov
call
lds
inc
roll
out
or
lock
mov
cmp
dec
cmp
mov
add
mov
add
sub
sahf
rclb
push
dec
inc
xor
cmp
js
mov
push
cmp
call
rorb
adc
stc
or
rcll
xchg
js
ds
leave
dec
mov
fs
mov
divb
jle
adc
jmp
push
mov
push
pusha
cmp
repnz
sub
mov
clc
and
sub
pusha
pusha
mov
mov
mov
test
or
inc
jb
ds
shlb
jne
pop
add
dec
cmp
aam
xor
jnp
sahf
push
push
pop
inc
in
cmp
mov
inc
call
cmp
les
xchg
pushf
push
imul
add
xchg
dec
dec
into
sti
leave
push
jp
jb
or
loope
test
add
jns
xorb
lock
adc
mov
clc
pushf
or
js
mov
movsl
and
and
popf
sbb
sbb
rclb
xor
sub
sbb
sbb
ss
shr
and
push
sbb
add
test
call
push
lods
clc
sbb
sub
inc
out
hlt
pop
inc
icebp
sub
push
sbb
pop
push
push
ret
lret
adc
pusha
mov
add
sbb
and
lods
iret
mov
inc
das
pop
dec
shrl
sahf
sbb
insb
pop
sub
clc
cli
xchg
mov
adc
enter
mov
call
sbb
in
cld
into
mov
sub
mov
mov
js
out
adc
push
add
add
or
sbb
inc
adcb
xor
mov
jo
and
cmp
sbbl
inc
outsl
outsb
sbb
push
rorb
test
hlt
rolb
mov
fmull
stos
addb
push
ret
rcll
cmc
add
ret
mov
lahf
adc
sbbb
rolb
push
dec
jmp
into
push
adc
and
push
fsubl
ret
call
ret
aam
pop
aas
lret
pop
jno
jl
lahf
or
roll
in
adcb
je
cmp
lock
rorb
pop
cwtl
or
xor
lock
sbb
test
in
xor
push
or
das
mov
xor
ss
or
movsb
addb
inc
mov
call
int3
jb
xor
add
pop
xchg
inc
and
sbb
addl
xor
mov
sahf
xor
sbb
shlb
or
push
adcb
mov
fs
bound
or
and
test
and
int3
xchg
test
out
ret
push
pop
adc
add
leave
bound
adc
outsl
repnz
or
loope
sbb
insl
inc
cmpsb
add
adc
mov
cmp
mov
lea
out
or
add
mov
sub
rcrl
loopne
popw
nop
xchg
xchg
xchg
arpl
scas
push
push
add
adc
in
shr
lods
xor
sub
dec
imul
jb
sbb
std
xchg
push
adc
pop
add
fcmovnbe
sbb
add
jne
adc
mov
xor
sub
jmp
xor
push
inc
adc
fidivl
aad
and
ljmp
mov
jl
fisubrs
call
add
je
xchg
mov
mov
call
ds
pop
fwait
sbb
push
push
push
cmp
fisttpl
push
sub
test
mov
jo
sbb
inc
fs
daa
sub
add
popa
sbb
add
or
adc
push
je
sbb
rorb
daa
lret
pop
push
dec
or
jo
pop
lock
ljmp
lock
call
adc
sub
sbb
jmp
popf
xor
fs
mov
loopne
icebp
add
push
push
mov
jb
cmp
dec
mov
jb
mov
or
fisttpll
fwait
pushf
mov
jbe
jmp
push
push
nop
test
ret
rol
push
cmpsb
insb
pop
ja
sbb
stos
dec
jno
js
mov
fcoms
sub
std
ficoms
jle
dec
or
add
mov
leave
pushf
daa
and
sbb
jns
ja
jne
ret
push
inc
or
jb
test
jbe
dec
ja
push
popf
movaps
jl
dec
sub
push
loopne
fstpt
rolb
dec
outsb
jl
lret
inc
cmp
jb
dec
jge
out
xor
pop
jecxz
jo
sub
dec
sbb
repnz
mov
or
sub
popa
es
sub
adc
inc
jbe
negb
sub
xchg
pusha
popf
loope
push
pusha
cmpsl
xchg
jmp
enter
push
pop
sbb
mov
lods
ljmp
or
icebp
das
loope
pop
ret
mov
int3
or
push
push
mov
sbb
les
vmread
adc
push
push
data16
jmp
neg
jb
inc
adcl
arpl
mov
sub
mov
adc
lcall
icebp
fs
mov
aam
ss
or
insl
push
sbb
xor
mov
sbb
mov
cwtl
int3
or
popf
or
mov
andl
cmp
gs
ret
pop
sub
andb
xchg
test
bsf
das
aam
mov
orb
push
inc
or
test
mov
xor
sbb
or
test
jg
add
dec
popl
cmpsb
push
dec
jecxz
push
xor
add
push
adc
shlb
mov
lret
loopne
sbb
sarb
xor
in
and
xchg
push
ret
clc
nop
sbb
mov
stos
or
jge
or
push
dec
mov
add
mov
xchg
add
mov
inc
insl
jecxz
or
je
rolb
adc
lods
arpl
adc
pop
cmp
sbb
push
pop
rorb
enter
jge
test
push
cmp
cmpsb
notb
add
js
cmp
call
add
pop
xor
shlb
out
add
mov
unpcklps
or
adc
pop
loopne,pn
ljmp
vunpckhps
pop
inc
dec
loopne
aam
mov
sub
lods
or
andb
and
arpl
aas
adcb
fs
inc
add
sbb
call
push
andl
lret
lods
mov
int3
xor
jl
roll
dec
mov
adc
adc
xchg
adc
xor
sub
sbb
test
shlb
inc
arpl
lock
lcall
rclb
rorb
xadd
movsb
loopne,pt
mov
sbb
push
repz
cmp
cli
push
ljmp
and
lock
add
and
mov
push
or
dec
test
lcall
dec
pop
leave
aaa
arpl
fs
xor
scas
iret
inc
inc
sahf
add
addb
fst
js
daa
cltd
adc
lret
adcl
shll
cmp
mov
fucom
add
and
cmp
inc
icebp
icebp
push
es
inc
push
push
in
or
pop
mov
fmuls
mov
adc
and
mov
cmp
icebp
adc
sbbb
test
xor
push
adc
or
inc
sub
cmc
mov
or
lods
jnp
mov
dec
push
add
add
adcb
mov
jp
inc
rol
xchg
test
sub
jno
push
mov
pop
mov
dec
push
adc
lret
or
add
pop
cmp
pop
hlt
inc
cmp
loop
pop
xor
push
pop
push
mov
push
stos
or
adc
sbb
out
dec
or
pop
sbb
test
jo
lea
addr16
dec
sti
mov
jle
dec
xor
call
or
jecxz
push
call
dec
and
out
testb
mov
or
stc
xchg
hlt
icebp
les
cmp
xchg
or
sbb
into
lods
std
clc
and
mov
pushf
and
aaa
xor
mov
sbb
push
dec
inc
ret
andl
pusha
insl
mov
stos
xchg
clc
inc
lock
cmpsl
add
sub
bound
adc
adc
inc
daa
jmp
sub
or
xor
ret
sub
mov
mov
stos
lock
dec
mov
xchg
pop
sbb
ret
lea
sub
clc
rolb
or
mov
sarb
mov
sbb
push
repz
or
add
jo
push
mov
sbb
mov
adc
sbb
popf
test
xchg
repnz
les
inc
lahf
fcmovne
adc
add
cs
add
xor
xor
call
push
dec
pop
cwtl
dec
pop
sub
jp
dec
jl
sub
add
sub
sahf
in
rcrb
inc
inc
dec
sbb
mov
lods
outsl
mov
ljmp
mov
loopne
adc
sahf
jae
mov
mov
jo
ret
dec
cmp
dec
ret
xor
adc
pop
xchg
cmp
jle
xor
lcall
and
adc
inc
js
jo
orl
icebp
inc
push
cmc
jp
and
sarb
mov
xchg
mov
ljmp
in
lcall
xor
push
lret
sbb
cmp
inc
or
icebp
xorb
sub
and
lock
imul
inc
sbb
pop
mov
mov
sub
push
jne
pop
jo
add
jp
push
and
jp
scas
push
adc
jg
mov
inc
add
outsb
mov
aam
xchg
int
pusha
rcrb
stos
femms
sub
rclb
insb
jmp
loopne
out
adc
icebp
push
pop
or
gs
sbb
outsl
inc
aam
sbb
xor
xchg
lock
xor
xchg
sbb
mov
adc
push
push
cltd
jo
mov
pop
rolb
lock
xchg
addr16
sbb
add
add
test
jne
dec
dec
fldln2
inc
bound
ret
push
adc
movsl
enter
arpl
dec
fs
out
adc
push
outsl
pusha
mov
repnz
or
sbbb
sahf
or
xchg
sbb
bound
loop
pop
adc
clc
push
jb
xor
dec
or
sarl
enter
js
icebp
lock
subps
sub
mov
ljmp
push
inc
pop
and
push
add
or
imulb
out
push
call
xchg
or
jge
mov
ret
pop
and
pop
orl
les
scas
or
outsb
mov
aam
jo
pusha
or
into
jecxz
push
sahf
xchg
push
das
jb
pushf
add
add
xchg
scas
jae
fimull
add
dec
cmp
insl
mov
sbb
mov
jle
movb
sahf
leave
lret
xor
sbb
lea
ret
sub
adc
cmp
in
push
sub
repnz
jo
adc
lret
into
loop
xadd
cmp
adc
or
push
enter
add
mov
mov
pop
inc
daa
mov
mov
push
inc
or
xchg
adc
scas
outsb
add
adcb
and
sbb
sub
popa
mov
adcb
aam
push
and
stos
lods
xlat
lret
pop
mov
push
add
add
pop
xor
push
xorb
add
adc
fnstcw
jbe
call
inc
sub
popa
sbb
mov
lret
rcrb
add
and
pop
xchg
jno
ret
or
pop
stos
push
js
or
inc
and
aad
adc
mov
adc
les
dec
add
inc
sbbl
cmp
xchg
lods
adc
pop
nop
ret
test
xchg
xor
dec
sbb
xchg
push
je
rclb
pop
outsl
sub
cmp
ffreep
repz
mov
sub
jnp
adc
orb
rcll
repnz
rcrb
pusha
popa
or
push
fisttpl
push
adc
mov
addb
lods
scas
adc
xchg
jmp
rcrb
dec
repnz
sbb
push
mov
les
pop
and
xlat
call
loopne
fisubrl
sub
push
loop
push
pushf
add
sbb
in
mov
mov
xchg
ret
call
add
adc
popa
push
mov
pop
xor
lods
mov
call
loopne
inc
pop
mov
aam
add
sbb
mov
mov
aad
shrb
cld
out
adc
mov
inc
rclb
icebp
or
out
inc
jmp
or
mov
or
pop
ljmp
ds
mov
xor
sbb
inc
pushf
sbbb
outsb
dec
mov
adc
adc
push
nop
cwtl
scas
rolb
mov
inc
loop
mov
pop
ja
jo
or
flds
mov
push
sbb
xchg
ds
iret
push
mov
cmp
mov
xchg
mov
adc
sbb
jno
mov
sub
xchg
xor
outsl
add
and
rcrb
add
loopne
lock
lret
inc
fbstp
pop
and
or
addl
add
jb
test
adc
cmp
repnz
inc
or
add
sbb
test
pop
lods
xchg
pop
loopne
fsubr
out
out
sbb
repnz
cmp
dec
sub
push
xchg
sub
and
inc
and
or
mov
inc
pop
xchg
sub
scas
daa
cmpsl
and
mul
imul
mov
inc
out
add
loop
xor
add
test
sub
pop
mov
or
push
or
and
or
jl
sbb
out
mov
sbb
push
push
inc
mov
mov
into
fidivs
insb
inc
incb
in
adcb
mov
or
cmp
cltd
sbb
dec
add
ljmp
mov
push
mov
lods
push
lds
shrb
popf
and
rclb
push
or
or
inc
lret
jnp
in
push
mov
and
adc
or
cmp
jb
mov
addr16
addl
dec
add
sub
sub
hlt
test
xor
sbb
adc
mov
xchg
mov
xor
push
nop
scas
aaa
in
cs
adc
jb
loopne
push
xor
cmp
push
add
add
fbld
pop
scas
or
addr16
enter
sbb
inc
or
cmp
jl
pop
ret
cmc
sbb
sbb
in
sbb
adc
movsb
inc
or
dec
loopne
mov
enter
das
aam
or
test
and
mov
add
je
arpl
bound
or
dec
dec
sbb
es
or
xchg
pop
or
dec
dec
xor
punpckhdq
mov
jle
jb
xchg
add
push
js
push
imul
xchg
cld
pop
repz
or
dec
jb
cmp
mov
lret
and
mov
lods
pop
ljmp
ljmp
cli
sbb
sub
pop
sbb
pop
sbb
pop
sub
aad
push
xor
mov
xor
hlt
into
rorl
sbb
stos
movsl
sbb
andb
mov
inc
ljmp
aam
popa
xchg
xor
push
push
adc
lods
repnz
in
mov
push
adc
inc
xchg
and
push
ljmp
fdivrl
scas
pop
das
mov
pop
inc
loopne
xorl
test
adc
frstor
pmulhw
mov
clc
mov
mov
js
divb
mov
mov
or
jge
and
or
jo
push
sbb
lcall
stos
xor
cld
in
sub
or
pop
xchg
sbb
or
lods
cltd
rclb
sbb
mov
and
dec
fiadds
dec
sbb
pusha
nop
cmp
inc
mov
das
push
jo
pushf
and
cmpsl
pop
shlb
and
rcrb
or
nop
add
jecxz
popa
lock
xchg
out
sahf
adc
adc
clc
adc
mov
xchg
pushf
or
ret
mov
stos
sbb
sbb
push
leave
add
dec
test
add
pusha
inc
push
outsl
add
clc
cli
sub
imulb
push
jae
pop
xchg
sbb
xchg
xor
jge
and
rorl
sbb
pop
orl
pavgb
stos
test
leave
ret
push
push
or
stos
insb
mov
add
ljmp
icebp
pushf
cmpsl
and
sbb
inc
jmp
sbb
lahf
rorb
mov
fists
jecxz
or
fcom
lods
mov
aam
cld
push
push
incb
add
adc
xor
sarb
repnz
js
and
sub
xor
jecxz
enter
loopne
cmpsb
and
adc
faddl
sub
insl
pop
push
add
mov
push
test
into
add
mov
adc
and
push
fistl
or
psubsb
adc
movsl
push
pushf
cmp
shlb
mov
push
mov
test
add
push
or
enter
cmp
xchg
movsb
fidivl
in
push
xor
inc
pop
scas
inc
sub
clc
nop
mov
iret
mov
cmp
mov
dec
mov
jne
outsl
xchg
daa
rcll
sbb
fcompl
in
add
into
or
adc
dec
xlat
sbbb
mov
dec
inc
mov
inc
dec
pop
adc
stos
out
ja
mov
push
cmp
add
rol
add
mov
push
popa
and
pop
push
adc
jle
mov
dec
lret
inc
inc
sbb
cli
cli
ljmp
sub
loopne
cmpsb
lods
jo
repz
fndisi(8087
pop
add
lahf
ror
icebp
push
mov
enter
xchg
add
adc
test
xchg
or
sahf
mov
movb
dec
pushf
icebp
loopne
adc
pop
jo
jno
ret
shrl
adc
mov
pop
leave
push
jge
rolb
out
push
and
mov
negb
xchg
jb
dec
test
js
dec
add
xor
adc
addb
mov
fcomi
test
das
imul
dec
int3
push
scas
test
shll
jo
xor
or
pushf
add
mov
push
and
adc
inc
sbb
or
xchg
addr16
enter
loope
inc
insb
fwait
cmp
add
lods
or
lods
enter
test
xor
sbb
mov
int
add
xor
adc
sbb
fs
pushf
xchg
pop
das
daa
loopne
sbb
jno
pushf
cmpsb
push
sbb
rcrb
or
imul
adcb
movsb
mov
inc
dec
cmpl
push
xorb
cmp
xor
push
stc
xchg
scas
adc
push
add
scas
sbb
mov
and
test
sbb
adc
or
adc
addb
and
sub
gs
rclb
cwtl
xor
sbb
jmp
push
sbb
arpl
and
pop
loopne
push
dec
jl
sbb
ret
adc
outsb
sbb
xor
test
lret
faddl
movsb
jecxz
mov
inc
int3
mulb
addr16
jmp
out
test
and
nop
push
or
loopne
ds
add
cmpsl
iret
lret
leave
dec
inc
jp
push
imul
push
daa
xchg
stos
shlb
addr16
decb
es
or
jo
aas
movntps
push
mov
sbb
pop
mov
dec
imul
adc
rorl
faddl
push
mov
ret
fcmovnb
hlt
inc
pop
cmp
or
rorb
lret
xor
add
std
push
cwtl
inc
cmpsl
add
shrb
push
push
jae
mov
test
or
mov
dec
push
sbb
pop
ljmp
and
shl
or
jo
inc
push
enter
sbb
lock
les
movsl
mov
cld
pop
pop
movsb
mov
adc
inc
scas
pushw
push
mov
addr16
or
test
mov
or
sbb
cmp
and
roll
or
xchg
lods
xor
enter
mov
inc
adc
add
cwtl
push
mov
dec
sub
jmp
or
push
sub
or
sub
push
mov
cli
std
sbb
inc
cmpsl
pop
jo
gs
push
dec
pusha
sub
sbb
mov
sbb
jbe
mov
pop
das
add
xor
sbb
aad
xchg
mov
add
ficoml
and
mov
ret
or
push
mov
xor
add
movsb
or
push
add
inc
adc
fidivrl
or
bnd
push
add
cmp
push
jne
and
adc
imul
and
sbb
ret
mov
push
les
rorb
daa
mov
stos
pop
mov
insb
xor
jo
sbb
adc
adc
xchg
pop
bound
mov
movsl
aam
scas
sbb
adcb
cmp
out
rol
lret
cmp
bound
and
sahf
xor
mov
mov
jno
test
add
sbb
test
lods
or
xorl
movb
aad
pop
add
loopne
out
enter
push
pop
cmpsl
movsb
pop
add
inc
loop
sub
adc
mov
rorb
mov
adc
leave
push
inc
out
push
lock
loopne
jns
iret
xor
fucomp
mov
scas
dec
pop
rolb
lret
pop
sub
add
mov
push
outsl
loopne
into
mov
jmp
or
jge
and
orb
in
mov
fcoms
xlat
cwtl
mov
ret
rcrb
push
daa
cmp
xor
ss
loopne
mov
dec
ret
dec
add
getsec
test
pop
sbb
daa
pushf
stos
xchg
hlt
or
pop
lds
into
les
lock
add
add
adc
add
jbe
fs
add
int3
das
add
mov
sbb
dec
mov
out
test
mov
add
sbb
pop
inc
loop
inc
inc
popa
sub
sbb
call
push
add
push
xchg
cltd
jo
add
pop
inc
pop
add
mov
test
dec
lret
inc
inc
xor
jo
testl
adc
adcb
push
mov
or
add
sbb
sbb
daa
mov
push
dec
cmp
fcmovnb
mov
sbb
negl
xchg
pop
sbbl
shll
aad
dec
dec
call
rcll
aaa
int3
ret
repnz
jmp
xor
mov
rol
xor
into
nop
add
lcall
data16
cmp
inc
js
sub
lds
mov
sbb
pop
ds
dec
add
jb
arpl
into
jp
sub
add
out
adc
adc
popa
and
xor
xor
insl
out
pop
sbb
mov
pop
test
push
pop
mov
loopne
or
nop
outsb
pop
add
ret
cwtl
inc
mov
add
push
add
sub
cmp
out
lcall
aas
sbb
push
lock
pop
ss
testb
or
sbb
cmp
add
dec
add
test
rorb
sbb
mov
jb
not
adc
cmp
sbb
cli
jb
mov
xor
int
icebp
test
adc
or
jns
cld
or
adc
pop
jnp
add
and
jno
into
je
test
push
int3
sbb
sti
es
loop
inc
test
cmp
push
push
mov
inc
or
rolb
into
or
ss
ret
in
push
dec
lea
lock
rolb
in
inc
push
inc
in
mov
xor
push
dec
dec
ret
pop
ret
sbb
sbb
dec
or
cmp
jbe
cmp
push
inc
test
sub
sbb
push
sbb
xor
add
inc
mov
ljmp
clc
or
sbb
clc
je
sbb
mov
jnp
mov
je
adc
lods
pop
lret
into
inc
or
cmpsl
shlb
stos
sahf
adc
or
xchg
sbb
xchg
or
jae
xor
subb
test
jp
insb
xchg
mov
jp
in
dec
sbb
in
lret
scas
push
test
shrb
jae
je
sbb
sub
icebp
push
pop
das
daa
popa
and
daa
cmp
jle
repnz
bound
add
push
xchg
or
es
loopne
cmp
inc
fadd
sub
push
sbb
into
pusha
popa
rcrb
push
mov
dec
jp
rorb
jp
sbb
addb
test
das
sub
adc
insl
popf
pop
sbb
pop
mov
out
push
mov
mov
jl
pusha
hlt
xchg
ds
lock
incb
pop
cmp
adc
and
subb
ret
sbbl
in
shlb
add
or
add
rcrb
mov
rol
bswap
outsl
dec
mov
or
add
sbb
test
push
push
adc
je
bswap
mov
sbb
adc
or
add
mov
js
dec
loopne
das
movsb
cmp
rol
add
xor
add
testb
or
rcrb
pusha
lea
sbb
mov
inc
sbbb
sbb
lods
push
lret
xchg
push
leave
or
aad
mov
adc
lret
sub
pusha
in
imul
repnz
pop
xchg
pusha
add
sub
rcll
adc
adc
call
dec
cmp
inc
xchg
loope
pop
or
add
mov
dec
ret
cmpsl
dec
or
add
add
test
jne
or
add
dec
ds
xchg
fnstcw
sahf
or
lock
add
call
movsb
dec
xchg
fcmove
lahf
cli
adc
subl
rcrb
lock
xchg
add
push
clc
les
fcmovne
push
js
test
cs
sbb
iret
test
and
fldl
adc
sub
lock
sahf
pusha
dec
or
xor
add
aam
or
add
add
jmp
jne
mov
adc
enter
ds
daa
dec
nop
jmp
sub
ret
bnd
or
adc
loope
mov
or
test
or
cmp
imul
inc
sub
fdivr
jl
or
cmp
jne
shrl
mov
xchg
fldenv
jmp
dec
xchg
push
cmpb
les
push
adc
xchg
pop
xchg
and
cmp
adc
iret
mov
or
loop
or
js
add
inc
xor
add
jl
lahf
aad
xchg
push
dec
sub
jo
mov
sahf
adc
mov
test
xor
and
xchg
pushf
push
adc
sub
and
cmp
in
xchg
or
sbb
loopne
pop
or
inc
and
adc
and
xlat
pop
add
pushf
push
push
sub
push
add
rolb
pusha
cmp
or
or
jae
jl
push
shl
adc
pop
cwtl
ret
adc
loop
cmpps
out
jo
push
xor
mov
dec
cmpsl
scas
rcrl
sti
popf
and
enter
add
xor
mov
sub
push
push
adc
mov
fs
shl
adcb
pushf
mov
push
add
movl
mov
ljmp
or
sbb
arpl
push
sub
js
push
imul
mov
and
push
jl
enter
movsl
xor
add
add
clc
xor
sub
mov
mov
jp
inc
ret
add
test
shlb
imul
xor
sub
sub
gs
das
inc
and
test
mov
ret
add
into
mov
sti
cmp
inc
push
push
test
adc
sbb
add
xor
mov
jmp
jp
jp
je
add
push
addr16
sub
mov
or
xchg
lret
ret
cli
fsubrp
sbb
shlb
add
cld
lds
cmp
subl
cmp
dec
pop
cmp
ret
aam
pop
outsb
shrb
shlb
cmp
adc
mov
sbb
sub
jmp
dec
out
jb
lods
gs
push
shlb
or
out
rclb
test
mov
xchg
dec
xchg
cs
insb
pushf
adcb
mov
out
push
sarb
inc
loopne
adc
js
lds
popl
xor
lods
inc
push
dec
lea
sub
lret
or
shl
push
dec
mov
leave
jns
xchg
dec
dec
sub
lret
jge
push
daa
and
push
out
inc
shll
loope
sbb
cmp
mov
and
and
push
and
jg
jno
xchg
pop
push
jns
pushf
clc
adc
mov
dec
rcll
mov
adc
in
cld
adc
pop
sbb
lret
js
fstl
roll
adc
mov
or
int3
loope
jmp
and
add
adc
pop
fnstcw
pop
sub
xor
cwtl
outsb
ret
add
adc
mov
adc
addl
bound
and
into
push
jp
clc
inc
pop
addr16
push
adc
adc
fmull
adc
add
cmp
and
inc
mov
and
outsl
mov
xor
inc
add
xchg
data16
notb
adc
inc
xchg
mov
bound
xchg
or
es
mov
inc
arpl
adc
popl
add
call
inc
shlb
gs
ret
test
fadds
dec
into
rolb
sbb
add
mov
push
bound
int
dec
or
mov
and
cmp
test
push
push
sbb
iret
push
ja
test
test
ret
mov
mov
test
add
push
or
sub
sbb
push
add
ljmp
sub
add
les
pusha
pop
sbb
jmp
cwtl
ss
sbb
xchg
push
mov
sbb
les
loop
stos
in
sub
movl
shlb
stos
push
and
addb
arpl
adc
call
or
pusha
pusha
in
fsub
test
sub
xor
cs
pop
out
push
enter
test
mov
mov
mov
jp
or
shr
out
mov
rclb
inc
sub
push
out
nop
dec
or
adc
call
ret
jae
arpl
sbb
and
mov
es
push
add
xor
hlt
or
clc
sbb
adc
pop
mov
adc
push
xchg
xchg
in
mov
push
xor
push
cmp
or
sbb
adcl
xor
add
jg
dec
lahf
push
mov
gs
push
lret
sbb
push
shlb
ret
or
or
ret
cmpsl
je
rcrl
mov
cmpb
and
and
add
or
and
leave
or
push
sbb
xchg
push
push
sub
xlat
roll
mov
push
mov
into
enter
enter
push
scas
pop
push
lea
xor
lock
lods
test
cmp
pusha
or
loop
sbbl
push
es
add
in
pop
mov
or
mov
orb
dec
lret
das
rcrl
sub
pushf
sarb
mov
push
mov
jo
pop
lret
jno
and
pop
xchg
cmpsl
or
or
fs
sbb
pop
outsb
jl
out
outsb
add
adc
pop
call
xor
std
clc
inc
add
adc
fsubs
sbb
mov
push
adc
jne
dec
pop
xor
mov
fs
add
or
xlat
inc
daa
js
pop
imul
pop
cs
sbb
orb
sbb
sbb
xchg
mov
lcall
je,pn
cli
and
cmpl
add
or
pushf
adc
adc
jo
sbb
mov
xchg
cs
loop
xchg
jp
xor
and
mov
add
icebp
cmp
and
dec
test
xor
les
arpl
movsb
adc
pop
cmp
push
nop
adc
popf
jb
jns
pop
xchg
push
pusha
stc
or
out
fmuls
inc
and
adc
adc
cmp
outsl
arpl
cmp
testl
sub
fcmovnbe
cmp
push
int
data16
pusha
hlt
jge
xchg
pop
inc
leave
mov
insb
xchg
pusha
or
push
add
sub
mov
shll
arpl
inc
or
dec
and
addb
mov
add
andb
repnz
jae
je
inc
xchg
xchg
cmp
adc
subl
bnd
pminsw
sub
scas
mov
jg
rcll
add
mov
imul
gs
inc
call
mov
push
inc
xchg
jnp
ljmp
out
daa
shlb
in
xchg
repnz
cmp
cmp
cli
mov
loope
mov
cmpb
inc
pushf
push
call
jo
gs
sbb
into
sbb
push
mov
and
xchg
mov
push
loopnew
pop
movsb
call
or
mov
cli
movl
lock
mov
cmp
iret
sub
mov
test
add
add
inc
fsubl
xchg
pop
mov
ljmp
jp
or
adc
lret
or
popf
sbb
inc
cmp
dec
shll
orl
addl
push
pop
sbb
mov
or
lcall
add
or
mov
mov
pushf
pop
and
aaa
mov
lret
leave
or
push
mov
repz
lock
pop
cli
dec
lea
mov
and
add
xchg
adc
loopne
xchg
sar
scas
inc
jb
inc
cld
into
or
push
aaa
fadd
inc
daa
fidivrs
xor
or
push
lcall
cmpb
mov
dec
jl
jne
pop
lret
and
mov
ficompl
mov
outsb
sbb
out
je
sub
ret
out
mov
push
or
xchg
xchg
sbb
nop
adc
add
jmp
cmp
xadd
notl
push
pop
test
movsl
scas
and
data16
lock
cmp
mov
xchg
mov
cmp
xor
inc
mov
add
or
aaa
add
sbb
or
sub
mov
lock
pop
fimull
test
adc
inc
rorb
lahf
stc
sub
dec
sbb
add
popa
cwtl
lods
andl
push
push
pop
or
ret
mov
sbb
and
rclb
cld
sti
push
loopne
mov
add
or
in
dec
mov
pop
jmp
adcl
call
inc
fiaddl
adc
rcrl
cmp
jmp
adc
dec
lret
dec
hlt
test
add
push
pop
push
clc
mov
push
cmp
mov
incl
pop
jmp
mov
int
sahf
rol
dec
push
movsl
and
jp
adc
pop
loopne
dec
addr16
repnz
outsl
push
leave
mov
xor
sbb
outsl
dec
or
xor
inc
pusha
sbb
scas
add
adc
jne
or
scas
shl
cmp
mov
pushf
or
sahf
add
cli
add
and
loopne
jbe
sbb
adc
insl
sbb
pop
pop
push
add
add
sub
mov
and
and
test
and
mov
inc
adc
jo
cmp
test
xchg
fsts
lret
sahf
pop
cwtl
jl
test
mov
loope
call
jae
or
dec
sub
xor
pushf
xchg
xchg
inc
cmp
and
or
add
xorb
adc
repnz
sub
sub
push
lods
cli
lret
inc
push
push
mov
js
inc
fs
icebp
test
jno
and
dec
lods
xorb
mov
inc
sbb
add
and
add
imul
xor
and
lods
pop
ret
or
sbb
sti
shld
rclb
lods
ret
lods
incb
mov
add
mov
rol
adc
or
mov
mov
icebp
add
pop
push
ss
push
dec
sbb
inc
xor
cwtl
push
sbb
inc
push
loop
and
mov
jne
inc
mov
cmp
ljmp
or
cmp
add
add
jmp
push
push
push
xlat
cmpsb
push
mov
test
push
shl
shl
testb
add
movsb
push
sbb
rorb
call
add
fisubl
out
mov
in
shrb
add
sbb
mov
fsubs
cmp
das
je
clc
mov
mov
xor
jmp
adc
add
mov
aam
jo
xorb
xchg
bound
pop
pop
iret
push
leave
aam
add
sub
outsl
cmp
mov
xor
adc
and
inc
add
or
js
mov
jne
and
jns
adc
test
pop
or
sbb
sbb
pop
add
das
xor
push
shl
ret
jo
adc
add
cmp
int3
add
adc
ret
and
sbb
pushf
inc
das
or
sahf
pop
into
shl
and
mov
ds
or
pop
or
pusha
and
and
dec
xorl
je
adc
outsb
xorb
aam
rcrb
jg
xchg
fxch
and
not
push
push
pop
adc
add
mov
push
ficompl
push
aam
jo
add
movsb
jo
and
subb
jns
jno
cmp
out
sub
movsb
fnstenv
decb
pop
mov
mov
les
ljmp
mov
push
and
mov
inc
xchg
pop
push
out
sbb
jnp
mov
fdivl
ret
inc
push
adc
jnp
push
xor
ja
sbb
loope
mov
bound
mov
add
jmp
imul
cmp
ret
loope
cltd
adc
xchg
jo
shll
cwtl
pop
or
adc
adc
popw
inc
insb
push
cwtl
movsl
push
adc
outsl
subl
push
xor
aad
shlb
and
adc
icebp
into
lock
push
loop
or
fadd
add
nop
add
ret
repnz
sbbb
or
gs
cmp
push
push
movb
push
or
or
pushf
xor
sub
adc
jp
bound
push
ret
push
sub
lret
scas
xchg
outsb
test
lretw
push
bound
aam
sbb
subb
ror
bound
arpl
sub
push
push
pop
adc
xchg
push
adc
cli
insl
or
dec
rorb
ds
push
into
ret
mov
clc
jnp
adc
mov
cmp
jb
mov
sub
push
push
push
adc
inc
js
mov
xchg
pop
ret
mov
xchg
inc
insb
mov
mov
cwtl
cmp
std
pop
push
clc
xor
aaa
rorl
nop
xchg
mov
js
push
jge
aam
hlt
or
out
pop
mov
ljmp
out
pop
pop
jbe
ja
fcomps
inc
mov
adc
add
inc
cmp
daa
add
and
and
push
pusha
insl
mov
cmp
loop
dec
inc
pop
jns
lret
pop
sahf
pushl
arpl
dec
adc
xchg
mov
push
js
push
lret
jle
pop
cmp
pop
sbb
hlt
cmp
mov
or
or
dec
jbe
inc
stos
fstpt
call
inc
faddp
lahf
adcb
scas
sub
roll
pop
jl
pop
add
sbb
outsl
sbb
inc
ret
push
inc
adcb
add
nop
mov
sbb
bound
mov
pushf
pushf
dec
sbb
add
js
inc
mov
lret
xchg
pusha
lods
or
movsl
sbb
cmpsb
pop
fwait
mov
inc
or
pop
rol
push
pop
into
xorl
and
cld
pop
mov
sub
jge
test
enter
push
mov
sub
fcompl
push
sbbb
xchg
js
or
pop
popf
ret
adc
scas
ds
push
or
or
adc
pop
dec
sub
sbb
loop
rorb
rorb
dec
jbe
adcb
fcmovnb
in
enter
and
adcb
lock
or
insb
inc
sub
jmp
xchg
jg
or
sbb
add
into
stos
roll
orb
fimuls
or
test
adc
pop
push
loop
mov
repnz
xchg
repz
sub
cmpsl
adc
in
ret
test
push
xchg
shll
inc
mov
popa
cmp
pushf
xchg
xchg
adc
sub
push
jp
mov
popa
cmc
sbb
xchg
or
sbb
sbb
add
jnp
or
push
pusha
scas
adc
fistps
call
popa
test
mov
adc
jbe
movsb
push
push
les
sarb
andb
cmp
sbb
mov
loop
add
xchg
mov
push
scas
dec
popa
lods
cmpsb
sbb
mov
inc
jo
or
dec
jp
sahf
jb
fstpt
and
shll
xor
sbb
push
call
arpl
sahf
data16
sahf
inc
fadd
lret
xor
xor
rorl
data16
mov
cmp
mov
les
std
sbb
inc
mov
insl
pop
push
addl
pop
sub
daa
adc
aas
nop
mov
divb
jl
rcrl
std
push
push
jl,pn
mov
stc
ds
adc
adc
sbb
imul
mov
push
repnz
dec
movsl
dec
leave
mov
dec
orl
les
stos
bound
addb
shlb
inc
and
inc
scas
mov
shrb
lods
cltd
xor
pop
or
and
jbe
xchg
inc
jne
dec
mov
shl
mov
arpl
pop
push
int3
push
pusha
aam
xor
push
daa
push
movsl
dec
pop
push
ret
sbb
ss
fisubrl
xchg
mov
mov
cmpsl
sub
add
mov
ljmp
push
inc
add
jp
cmp
movsb
call
lods
shlb
pop
ret
push
out
push
push
inc
push
or
arpl
sub
jp
pusha
push
imul
cmp
mov
ret
mov
jle
or
aam
rorl
push
add
lock
xorl
dec
xchg
loop
jb
xchg
jne
lock
pop
dec
rolb
pop
push
cmp
push
fidivrs
pop
js
out
shll
xchg
aam
js
rcrb
mov
movsl
int3
add
icebp
fs
push
xchg
xchg
cli
adc
mov
push
repnz
mov
stc
in
and
nop
sub
mov
cmp
mov
inc
in
scas
push
icebp
mov
cwtl
or
sub
add
xor
mov
xor
xchg
push
push
inc
lea
jno
sub
pop
push
ret
fidivrs
sub
sbb
div
xor
adc
call
xchg
push
std
scas
leave
or
sub
test
subb
popfw
ds
inc
add
sub
inc
and
inc
add
sbb
ljmp
cs
pop
xchg
int3
inc
icebp
pop
cmp
cmp
and
mov
js
inc
jg
xchg
cmp
shl
outsb
or
pushw
jno
xor
inc
loope
pushf
or
cmc
pop
enter
sub
jmp
jbe
or
or
jg
and
xlat
push
pop
jmp
cmp
lahf
mov
add
enter
mov
lret
js
inc
jmp
sub
arpl
les
sbb
dec
xchg
fs
push
jo
adc
mov
sbb
enter
or
xchg
and
cmp
mov
addr16
ret
ds
push
push
pop
push
xor
dec
cmpsl
leave
push
jp
pushf
add
adc
pusha
inc
add
lahf
jne
cmc
and
lods
sbb
xor
movsbl
sbb
or
rsqrtps
js
mov
inc
xchg
push
jge
es
jecxz
pusha
das
inc
lea
sahf
xorl
addr16
test
xor
mov
pop
xchg
imul
push
inc
loopne
mov
jno
jecxz
test
fwait
imul
fidivl
div
shl
clc
pop
mov
popa
or
and
adc
mov
add
dec
push
out
and
and
inc
enter
sub
shlb
ljmp
jmp
lock
mov
test
sub
jb
sub
add
pusha
dec
and
lock
dec
pop
mov
mov
lods
mov
push
shl
push
shrb
jno
psraw
jl
pusha
movb
pop
jle
or
jbe
sbb
cmpsb
popf
sub
mov
dec
sarb
mov
dec
cmp
cmp
push
sarl
push
dec
inc
cmp
cwtl
jle
inc
sub
xchg
sub
cwtl
and
lock
push
xchg
pop
std
ret
xchg
sbb
orb
sub
movsl
shrl
or
loop
pusha
push
mov
inc
mov
ficomps
xchg
js
enter
or
jbe
nop
sub
sbb
or
adc
es
cld
sbb
jl,pn
js
sub
enter
rolb
nop
sbb
inc
rolb
mov
std
xchg
leave
add
loope
cmpsl
decb
add
dec
push
test
test
je
leave
adc
sub
add
in
cmp
add
test
sbb
or
dec
movsb
adc
or
sti
loopne
mov
xor
cmpsb
into
mov
jo
adc
mov
test
push
sub
and
cmpsl
cmp
inc
add
cmp
jae
push
dec
push
push
je
mov
rorb
adc
popf
js
arpl
loope
movsl
js
push
xlat
sbb
pop
pop
lods
mov
adc
add
mov
lcall
push
inc
inc
dec
test
ret
rorb
dec
push
sqrtps
insb
push
bound
loop
scas
dec
cmp
pop
lahf
rcr
das
or
and
inc
mov
xchg
pop
inc
push
add
sbb
jo
inc
add
pop
push
loop
push
repnz
sbb
out
stos
shlb
je
mov
dec
add
stc
ret
inc
loopne
icebp
push
ret
fstps
push
ret
lds
sub
xor
jge
adc
xorl
ret
inc
dec
call
jo
or
push
inc
push
add
or
test
popf
sbbb
call
dec
jbe
mov
sti
push
stos
adc
push
imul
mov
sub
ds
and
dec
cmpsl
movb
pop
dec
adc
arpl
adc
lock
mov
mov
aam
jno
xor
dec
notb
sbb
bts
pusha
jbe
lea
adc
sbb
fsts
sbb
orb
ljmp
test
xor
loopne
fadds
dec
mov
add
add
ficompl
jg
and
sub
sbb
push
adc
add
inc
ret
adc
or
xor
add
dec
sbb
loopne
jbe
push
jge
clc
push
loope
hlt
push
lea
lea
sbb
rolb
mov
push
scas
or
pop
fcomp
add
sbb
js
inc
std
mov
xor
cmp
leave
mov
insb
ret
dec
mov
push
cmp
lods
sbb
add
lahf
push
int
inc
cmpsl
addl
fwait
cltd
pop
inc
scas
add
sbb
pop
or
imul
or
xor
movsb
cltd
shr
lcall
jb
mov
rcll
cwtl
push
inc
xor
push
add
andb
insl
inc
add
ficoms
cmp
icebp
popa
xchg
mov
pop
std
adc
cmpb
xor
or
mov
adcl
xchg
xchg
add
sbb
test
xor
shll
ret
and
jo
xchg
adc
scas
push
call
test
push
pop
sbb
add
mov
call
lock
ret
das
lahf
loop
movsl
mov
mov
leave
lods
addr16
sbb
push
adc
add
fld
sub
inc
les
inc
nop
adc
jecxz
jp
push
es
rorl
rcrb
adc
cwtl
sub
xchg
lret
sahf
lret
das
sbb
lcall
pop
push
outsl
cmpsb
push
ljmp
inc
ret
mov
adc
fs
dec
push
or
dec
fdivrl
test
xorl
sub
sbb
hlt
xor
into
fs
sbb
pop
dec
cmp
les
icebp
dec
or
ret
lret
fnstenv
scas
xor
popf
push
lea
cmp
xor
lret
sbb
test
jnp
out
or
ficoml
shl
ljmp
loope
mov
sbb
repz
sub
push
jl
ja
xor
inc
pop
xchg
push
xor
pop
add
inc
outsb
leave
fwait
into
sbb
or
movsb
inc
cmp
or
add
shl
out
adc
mov
addr16
cmp
and
popf
xor
sub
inc
sub
dec
xor
rcr
pop
pushf
mov
cmpsb
loopne
cmp
sub
xor
jo
es
xor
je
aam
addl
jo
enter
in
and
imul
mov
and
dec
les
push
inc
outsl
enter
adc
add
sbb
xchg
daa
je
sbb
les
loope
hlt
dec
add
mov
add
pop
sub
in
xchg
nop
fdivl
addr16
mov
pop
lods
test
aad
nop
dec
pop
lcall
lea
idivl
and
pop
movsl
in
ds
or
adc
inc
inc
inc
push
or
mov
int
add
add
cltd
jo
movsl
test
mov
mov
or
mov
xor
pop
or
pusha
dec
pop
xor
ret
cmp
add
dec
inc
outsl
cmp
sub
mov
scas
hlt
pusha
rorl
xcrypt-ctr
cmpsl
sbb
or
icebp
mov
pop
mov
inc
sbb
repnz
rcr
enter
hlt
and
imulb
and
outsb
push
and
cmp
pop
push
jp
mov
and
ja
jne
int3
sub
add
mov
adc
mov
push
fistps
and
pop
mov
xchg
pop
adc
add
mov
test
xchg
or
jo
push
mov
aam
pop
push
mov
rcl
adcl
or
rclb
aam
or
cmc
push
popa
xchg
out
stos
pusha
into
mov
jb
dec
popf
or
repnz
andb
sbb
pop
dec
ss
in
and
push
loop
lea
pop
dec
or
in
xor
pop
jbe
add
test
inc
rcll
add
push
pop
xor
mov
jge
icebp
js
inc
lea
outsb
rolb
mov
or
add
mov
xor
dec
inc
push
cmp
adc
xor
or
push
inc
test
sbb
pop
inc
aaa
push
add
xchg
pop
mov
outsb
push
lret
cltd
mov
or
or
add
inc
xchg
sbb
add
inc
push
shl
xchg
pop
jg
sbb
mov
sbb
subb
fwait
sbb
sbb
inc
push
jbe
sub
sub
pop
das
bnd
or
sub
push
mov
cld
cmp
sahf
mov
subb
mov
and
lock
movb
or
cmp
filds
sbb
xor
add
pop
setge
mov
push
or
stos
add
or
pop
or
pop
fcmovb
sub
rdmsr
or
or
cli
js
mov
movsb
mov
push
dec
pop
inc
test
or
cmp
mov
outsl
jecxz
jns
xchg
dec
mov
push
add
cwtl
mov
add
mov
mov
dec
mov
jbe
jb
push
cs
out
in
adc
dec
mov
jle,pn
or
mov
or
out
and
iret
or
int
inc
jl
xchg
sub
xor
sahf
and
in
rorb
and
dec
jl
clc
and
mov
xchg
lcall
cmc
subb
cli
or
les
leave
int3
jne
popa
loope
jbe
cltd
xchg
xchg
test
and
adc
and
adcb
loope
sahf
iret
ss
jb
icebp
push
mov
ljmp
popa
add
push
jb
bound
rolb
or
call
add
jmp
loop
cmp
adc
arpl
and
push
inc
inc
rclb
sbb
fidivl
cmp
xor
movsb
out
sub
sbbl
mov
pop
pop
pop
test
jb
dec
xlat
push
adc
pushf
sub
cmp
adcl
das
dec
arpl
mov
shll
popa
in
adc
js
or
stos
push
mov
push
inc
iret
ret
inc
inc
cmp
lods
lock
add
adc
mov
cmc
adc
decb
aaa
fadd
test
arpl
fsubl
mov
xchg
and
gs
xor
ror
push
jno
pop
clc
sbb
push
push
pop
pushf
imul
sub
jb
sarl
xchg
cmp
fs
cmp
jo
out
sub
pusha
sbb
mov
out
std
or
repnz
push
inc
or
sub
test
test
iret
ds
push
mov
mov
sub
xchg
mov
pop
popf
sti
push
test
sbb
adc
addb
clc
and
imul
test
sbbb
loopne
pop
push
movsb
adc
xchg
fisubrs
ljmp
dec
cwtl
adc
in
mov
icebp
jmp
jo
loopne
lods
cs
cmp
mov
js
testl
and
dec
adc
adc
add
push
push
arpl
or
cmp
mov
sub
lods
cmc
mov
and
pop
sbb
sbb
decb
rclb
adc
lret
lcall
push
sbb
push
mov
lcall
sarb
sbb
jp
shlb
push
and
mov
push
jp
idivb
insb
cmp
icebp
mov
rcl
cmpsb
push
push
and
xor
xor
mov
loop
mov
pusha
mov
cli
sub
push
or
ljmp
test
mov
mov
pop
out
jb
clc
rclb
cmp
insb
or
rol
cltd
or
lret
push
cmp
inc
pop
cld
ljmp
rcl
rcrb
clc
insb
lock
and
inc
cli
or
or
cs
ljmp
sbb
loope
pusha
test
out
nop
fsubrs
lock
add
lret
cmp
sbb
push
test
push
pop
mov
je
pusha
es
or
sub
insb
lods
inc
pop
and
test
sbb
call
xchg
mov
ret
push
orb
push
sahf
aam
jp
dec
inc
or
or
aam
mov
sahf
xchg
jp
ss
ret
testb
or
pop
and
outsl
shll
push
and
sbb
test
jp
daa
dec
stos
ret
xchg
outsb
or
sub
mov
jo
and
dec
mov
popl
add
js
and
dec
mov
shlb
test
call
lcall
lock
add
pop
pop
sub
or
gs
mov
push
std
call
and
shrb
mov
rolb
and
pop
rorl
xor
push
sbb
jns
mov
inc
cwtl
dec
cwtl
sbb
mov
and
push
loop
jo
lret
pop
push
mov
mov
movb
dec
mov
mov
pop
or
js
mov
add
pop
push
push
xchg
pop
jbe
loopne
dec
in
int3
and
push
adc
add
inc
sub
or
push
hlt
es
mov
sub
xchg
adc
adc
lock
xor
shll
fisubl
out
push
jmp
mov
loopne
xor
in
add
mov
test
jbe
push
inc
lock
pop
aaa
jne
xorb
add
rclb
faddl
mov
cmp
push
pop
or
inc
insb
popf
or
sti
mov
and
jae
sbb
loope
popa
xchg
loopne
and
and
loopne
sahf
and
sub
lcall
push
cmpsb
add
push
mov
sbb
jbe
stos
out
inc
pusha
sbb
pop
mov
int
mov
call
mov
mov
mov
mov
push
adc
test
aam
jl
jno
call
cmpsb
mov
popa
pop
or
lods
add
cltd
and
daa
push
cmpsb
inc
fdivrs
lcall
or
je
rcl
xchg
shlb
ret
mov
sbb
lret
add
sti
mov
ret
and
cwtl
pop
les
push
cwtl
sbb
cmp
cmpb
jecxz
hlt
jbe
ds
xchg
aam
shrl
sub
jmp
out
pop
pop
pop
rol
mov
call
aas
pop
dec
dec
leave
mov
adc
mov
mov
push
inc
es
ds
test
sub
sbb
sub
adc
mov
and
shr
aam
lods
stos
xor
lods
roll
shrb
in
sbb
stos
popf
mov
add
mov
mov
pop
or
fbstp
inc
adc
push
rclb
out
cmp
xchg
pop
imul
and
inc
or
roll
push
dec
roll
mov
adc
or
andb
jmp
mov
mov
mov
inc
push
pop
inc
imul
icebp
jns
rcll
mov
or
mov
jle
mov
dec
sub
pop
pop
cltd
fidivl
loop
add
ret
daa
fwait
repz
or
shlb
inc
cwtl
mov
jp
dec
mov
sub
push
xchg
cmp
push
sbb
and
jp
lods
loopne
adc
xchg
outsl
icebp
les
sbb
push
fmull
push
cmp
or
push
orb
movmskps
sbb
push
jns
aad
adc
sub
stc
pop
push
cld
aas
ljmp
push
js
sbb
dec
sub
or
mov
adc
push
and
mov
push
push
lods
pop
cmpsl
or
add
and
adc
daa
dec
test
and
push
cld
test
pop
inc
arpl
insl
jne
xorl
outsl
jl
in
aaa
ret
out
ret
mov
jmp
scas
shrb
mov
and
sahf
and
adc
jle
push
xor
jae
shlb
movntq
in
add
mov
adc
addb
xchg
dec
loopne
ret
rcrb
pop
cmp
xchg
je
pop
testl
adc
leave
aam
lock
cmp
data16
pop
ret
inc
in
inc
mov
pusha
test
xlat
cmp
push
adc
mov
sar
outsb
sbb
aam
fs
or
fs
out
jle
int
test
dec
testb
jmp
into
inc
add
or
dec
xor
push
enter
pop
mov
add
jl
push
mov
mov
sbb
mov
loope
push
push
leave
test
add
or
rcr
add
pop
adc
jecxz
push
sahf
and
lea
and
cmp
xor
arpl
enter
adc
and
cli
into
dec
mov
xor
sub
pop
ljmp
sbb
mov
xor
jge
les
ffreep
add
sbb
loope
add
sbb
xchg
push
rolb
jno
mov
adc
fcoml
dec
and
dec
movsb
cmp
and
movsb
inc
add
mov
sub
das
xchg
push
movsl
popa
shlb
fsubl
sbb
pop
add
xorb
xchg
dec
push
pop
pop
das
stc
pop
inc
xlat
jecxz
ret
cmp
pushf
cmpsl
andb
sbb
popa
or
pop
shlb
sub
ljmp
sarb
add
cmp
sahf
push
inc
mov
mov
pop
ljmp
add
inc
xor
rorb
cmp
mov
ret
insl
mov
test
jnp
outsb
mov
bound
push
rclb
and
loopne
sub
fwait
add
rclb
clc
ss
push
add
pop
inc
pop
in
fistpl
cwtl
pop
hlt
sbb
dec
jge
lret
or
xchg
adc
dec
push
daa
adc
fadds
inc
xor
push
ltr
adc
sbb
cmp
xor
aas
clc
xchg
dec
mov
insb
sub
aam
aad
pop
xchg
pop
mov
mov
adc
ljmp
loop
inc
adc
das
jecxz
aas
fcomps
sbb
sahf
loopne
jo
pop
aas
and
or
cmp
add
pushf
or
mov
or
add
mov
sub
fdivs
add
pop
xchg
or
cmp
fidivs
xor
mov
mov
and
out
sub
push
mov
push
push
xchg
loope
je
filds
add
cmpsl
or
xlat
and
or
and
inc
pop
mov
dec
push
push
push
jbe
inc
adc
lret
addr16
addb
or
jb
sbb
add
inc
mov
sub
sbb
add
and
mov
pop
sbb
cmp
jo
push
jbe
pop
je
daa
or
add
and
inc
sbb
sub
sbb
add
xor
sbb
leave
sbb
jecxz
js
sbb
les
mov
push
mov
in
mov
cmp
mov
test
or
cwtl
push
js
fwait
ret
daa
add
adc
add
sub
and
jo
cmpsl
ficompl
lea
test
sahf
push
push
decb
pop
push
out
or
inc
ds
arpl
sbb
push
xchg
outsl
popa
mov
clc
adc
jp
mov
pusha
mov
cmp
adc
adc
sbb
add
push
push
or
dec
inc
imull
push
insb
cld
cld
xchg
jb
add
push
or
pop
push
ret
and
push
or
adc
ret
cmp
in
pusha
push
lret
outsb
sbb
mov
mov
xchg
repnz
jo
sbb
and
ret
bound
cmp
data16
mov
fildl
daa
arpl
adc
aam
rclb
hlt
dec
ret
add
popa
sbb
cmp
dec
dec
int3
lods
dec
cmpl
orl
push
lea
push
xor
lods
xchg
sbb
incb
and
pop
add
push
loopne
jne
inc
xor
add
adc
ret
dec
ljmp
push
in
adc
dec
es
mov
popf
inc
add
hlt
gs
arpl
pusha
push
nop
dec
mov
movsl
subb
test
cmp
push
add
adc
movsb
arpl
sbb
adc
mov
sub
popf
add
imulb
sahf
cmp
pop
jle
adc
pop
cmc
push
dec
cmp
pop
sub
inc
jmp
push
cmpsb
sbb
xor
dec
sbb
and
or
add
sbb
xor
inc
ja
in
jmp
in
and
inc
rolb
mov
dec
lods
cmpsl
and
repnz
add
or
xchg
cmp
add
and
arpl
mov
mov
pop
hlt
ret
inc
pop
fwait
je
jl
out
in
imul
fbstp
and
push
ja
sbb
xor
aad
or
sub
scas
movsb
inc
xchg
imul
sarl
stos
insl
jecxz
sbb
dec
jl
add
pusha
loop
push
rclb
daa
loope
addr16
add
xor
dec
rcrb
mov
or
push
and
mov
xchg
out
or
push
and
inc
call
jl
and
inc
test
and
push
pushf
or
jbe
pop
sbb
pop
popl
shll
inc
cmp
push
cli
adc
sub
jns
push
bound
into
test
add
add
or
add
jnp
leave
es
push
pop
fildl
xchg
sbb
das
addr16
add
cmp
pop
sbb
addr16
jb
mov
ljmp
jmp
add
lret
gs
xchg
mov
call
gs
adc
mov
popf
push
js
cwtl
nop
push
test
in
test
or
push
sbb
cmp
loope
add
push
push
mov
xor
or
xor
sbb
xor
andb
rol
cli
cld
lods
iret
js
mov
test
popa
jge
mov
ljmp
stc
enter
dec
sub
push
push
test
cli
ret
repz
or
dec
or
mov
subb
mov
out
pop
jb
or
test
push
cli
rorl
pop
push
ljmp
or
xchg
or
nop
lods
mov
sbbb
sub
lock
in
rol
cmp
inc
pop
into
inc
sbb
mov
les
xchg
or
xlat
and
mov
jg
and
inc
scas
push
and
rolb
or
and
mov
les
xor
or
or
shrb
int3
divb
or
add
add
sbb
push
lock
fcoms
mov
sbb
into
mov
insb
add
adc
add
or
xchg
lock
and
fstps
rorb
mov
cmp
inc
inc
movsb
or
inc
xchg
mov
rcl
mov
mov
inc
lock
es
lea
cmp
pop
adc
adc
adc
dec
jge
cmpsl
pop
cmc
test
cmp
xorb
out
dec
ficomps
or
inc
sbb
pop
xchg
cmc
xchg
or
shr
and
mov
add
or
xor
in
mov
push
pop
mov
pusha
or
loopne
sbb
or
adc
add
push
test
imulb
xchg
clc
mov
push
xlat
xor
imulb
dec
xor
push
add
and
cmp
sub
rcrl
leave
rorl
push
push
scas
test
adc
or
add
sbb
or
mov
adc
cmpsb
out
cmp
fimull
adc
jo
daa
and
inc
int3
adc
sbb
std
fisubrl
adc
or
test
xchg
sub
adc
decb
jno
shr
and
ljmp
mov
rclb
cmpsl
xor
and
aam
out
xor
sbb
icebp
rorb
sub
pop
cmp
mov
test
or
xchg
add
sbb
push
stc
add
adc
test
shrb
mov
add
test
push
jp
add
test
dec
push
inc
pop
cmp
inc
mov
sub
mov
jns
pop
add
enter
inc
or
dec
adc
or
int3
jp
arpl
stos
cld
mov
xor
mov
add
jno
xor
adc
cmp
mov
lock
push
ficompl
add
pop
mov
push
pop
dec
and
rol
push
shlb
mov
and
sbb
js
xchg
pop
cmp
pop
js
mov
dec
enter
adc
hlt
rcrb
pusha
dec
bound
pusha
sub
shll
pusha
and
push
cmp
add
stos
subb
lock
inc
test
sub
mov
call
cmp
push
jmp
xchg
pop
inc
add
loopne
js
cs
adc
sub
add
div
into
mov
or
or
mov
push
cli
fsubs
push
stc
inc
mov
aad
dec
mov
sub
hlt
imul
call
cltd
sbb
sbb
or
sahf
test
and
stos
xor
mov
arpl
js
nop
add
ret
push
jbe
xor
sbb
and
mov
xchg
lock
lcall
and
pop
filds
xor
nop
xor
pusha
rcll
popa
xor
stos
or
pop
cmp
ljmp
sub
cmp
pop
fs
cwtl
jno
mov
movsb
aam
fcom
sub
ljmp
or
bound
push
popf
lret
jge
int
mov
add
pop
xor
cwtl
and
lcall
fisubrl
xor
sub
cmp
movsl
and
dec
inc
fs
xlat
pop
test
sbb
mov
fstpl
sbbb
cs
push
inc
push
mov
mov
pusha
int
sbbl
in
mov
xchg
cmp
data16
insb
pushf
sub
scas
add
lock
xchg
sub
bound
ja
and
lock
mul
mov
and
loope
cmp
cmc
dec
cmpsl
jnp
jp
and
or
loopne
adc
fbstp
jge
ret
ficomps
mov
das
repz
or
mov
xchg
or
inc
cmp
cli
js
xor
out
adc
mov
and
pop
or
movsb
inc
shll
call
cwtl
mov
movb
push
dec
fadd
or
inc
jecxz,pn
jle
cmp
jo
xchg
adcl
test
fsubp
mov
adc
lods
inc
iret
sbb
push
stos
rclb
push
cmp
pop
add
mov
add
loope
in
push
lret
in
loopne
insb
sub
push
inc
xor
aam
shl
cmp
inc
inc
mov
and
and
rcrl
inc
fcom
xchg
aam
cmp
add
mov
push
sbb
sbb
or
or
cmp
push
sub
xor
mov
sbbl
add
shlb
jno
push
add
les
dec
cmp
xchg
and
pusha
adc
stc
mov
pop
leave
adc
imul
arpl
inc
in
lock
pop
or
inc
mov
nop
mov
lods
xchg
jne
jo
popf
int3
jae
dec
sbb
sub
jbe
or
mov
mov
ss
rcrb
adc
sbb
add
push
inc
add
mov
mov
or
or
adc
xor
addb
adc
mov
cmp
imul
adc
mov
pushf
add
inc
divb
mov
shll
aad
mov
sahf
into
lret
and
scas
andl
inc
jl
push
xchg
test
adc
rclb
test
dec
data16
inc
mov
and
pop
pusha
inc
test
adc
sbb
sub
mov
pop
pop
xlat
and
or
push
inc
jo
shrb
cmp
push
or
mov
or
xor
loope
jp
into
and
test
bound
lret
xor
mov
js
pushf
cmp
dec
mov
xchg
push
lret
cli
imul
add
test
fisttpl
mov
push
or
adc
shl
sub
sbb
imul
jl
add
mov
sbbl
shl
push
sub
daa
sahf
push
lret
push
test
bound
cli
or
out
jno
mov
adc
mov
xchg
ret
inc
xor
push
adc
sarl
mov
mov
call
push
sbb
fsubr
rclb
loop
sbb
lea
je
lea
and
lock
xor
outsb
mov
jo
gs
cmpsb
outsl
lcall
mov
test
ret
bound
orl
sbb
jp
ss
test
adc
add
sbb
sub
iret
clc
or
inc
jl
xor
adc
fwait
mov
call
adc
mov
adcb
in
push
shl
xor
add
push
and
shll
outsb
push
nop
pop
enter
pop
sub
cmp
into
xor
sub
xor
icebp
push
jl
bound
addb
mov
sbb
sahf
and
add
mov
add
bound
enter
dec
icebp
xchg
sub
inc
pop
jns
arpl
push
dec
lods
sbb
dec
pop
loop
jbe
mov
cli
mov
inc
les
sbb
fwait
mov
repz
pop
dec
and
rcrl
loopne
sbb
push
sbb
sbb
mov
pop
cwtl
fimuls
sub
dec
pop
push
mov
ds
mov
movsl
mov
leave
push
fmull
loopne
addl
mov
sub
mov
nop
cmp
out
xchg
sahf
or
and
sub
aaa
in
sbb
stos
jb
cltd
clc
test
mov
cwtl
sbb
aad
cli
xor
inc
mov
cmp
lret
clc
add
movsl
xchg
push
jno
jle
movsl
mov
lea
paddb
add
call
push
das
nop
mov
mov
mov
dec
jge
push
mov
sbb
sub
lods
je
insb
mov
xchg
inc
outsb
leave
push
ja
bndldx
and
and
int3
xor
test
adc
les
xlat
rolb
pushf
pop
imul
pop
adc
push
inc
mov
adc
pop
or
pop
and
inc
jl
sbb
data16
in
push
mov
out
add
sbb
jbe
rorb
daa
call
sub
inc
out
andb
add
fildl
dec
lahf
cmp
mov
pop
xchg
cmc
aas
xchg
push
adc
push
aaa
movsl
adc
les
cmpsb
cld
in
adcl
dec
ret
aaa
mov
pusha
push
adc
ret
add
js
and
ss
lods
pop
shll
cmp
lcall
dec
lods
add
jno
push
mov
stos
push
add
test
and
sbb
xor
jo
jnp
jno
data16
xchg
lods
rcrl
sbb
lcall
xor
push
xchg
lea
cmp
popf
cmp
or
sbb
leave
push
or
rolb
add
fwait
ret
inc
sub
clc
sub
push
imul
mov
js
movsl
xchg
inc
inc
in
ficomps
jns
movsl
insb
mov
mov
xchg
add
jecxz
ret
xor
hlt
cs
test
and
inc
jmp
xchg
clc
and
mov
call
cld
cltd
test
inc
push
rolb
pushf
int3
outsb
add
popf
push
or
adc
add
test
inc
call
faddl
sarl
xchg
ret
cli
sbb
imul
aad
and
or
ljmp
in
xchg
or
out
adc
sub
les
inc
lea
push
inc
sub
mov
sti
push
push
testl
inc
mov
jl
cmp
cmp
fnstcw
hlt
subl
rorb
add
aad
push
test
mov
mov
cmp
mov
lcall
pop
hlt
in
sub
push
adc
cmp
cmp
in
push
add
jnp
lods
idiv
add
pop
cmp
push
scas
addr16
movsb
inc
and
rcrb
outsl
jb
pop
mov
or
pop
ja
sbb
pop
sbb
pop
xchg
hlt
add
sbb
enter
jnp
mov
pop
js
bound
test
enter
fcompl
adc
or
sbb
mov
xor
int3
jp
cli
mov
loop
out
hlt
rcrb
sbb
rcll
fcoms
repnz
add
ljmp
movsb
addb
in
sbb
inc
mov
or
sbb
and
or
fs
adc
add
lock
push
call
or
sbbl
bound
cmp
into
popa
arpl
lret
inc
mov
sbb
in
sar
shl
ret
shlb
dec
leave
adcb
push
repnz
and
cmp
push
pop
and
cmp
mov
jno
sbb
and
mov
lods
or
icebp
mov
xor
imul
xchg
call
push
adc
cmp
sbb
push
movsl
fstpt
popa
xchg
xchg
xchg
scas
mov
mov
test
adc
cmp
mov
push
pop
xchg
dec
pusha
shlb
xchg
sbb
pop
xchg
sbb
pop
pop
movsb
or
addb
push
xor
negb
sub
movsb
adc
pop
push
xchg
inc
rolb
mov
jne
and
je
pop
or
xchg
nop
xchg
std
lahf
push
pop
or
lods
jmp
cwtl
lods
sbb
sub
sbb
dec
push
jecxz
xorb
sbb
adc
je
pop
aaa
push
int3
pop
mull
push
lea
xchg
xor
and
mov
and
sub
lret
add
mov
call
mov
test
test
dec
xor
add
sbb
xor
pusha
mov
loopne
fidivs
orb
xorb
andb
mov
sub
sub
jo
add
shl
rorl
pop
fsubrs
rclb
xchg
or
lret
js
call
push
push
fadds
cs
aam
push
out
fs
cs
and
dec
sbb
jp
lock
jo
adc
add
sbb
shrl
and
ret
movsb
mov
aas
adc
fdivp
daa
dec
mov
and
xor
cs
test
inc
out
mov
add
pop
leave
fisttpll
mov
outsb
push
lock
sub
mov
mov
clc
add
push
push
insb
pop
cmp
outsl
stc
sbb
mov
jmp
xor
insb
cmp
mov
pop
cmp
and
dec
mov
aam
imul
mov
lret
pusha
insb
fstps
push
xor
in
jecxz
mov
mov
cltd
mov
mov
rcrb
test
outsl
loopne
data16
mov
daa
stc
pushf
xor
test
mov
add
mov
mov
xor
jecxz
lock
push
sbb
cs
jo
push
jno
pop
push
pop
push
jl
inc
cmc
lret
sbb
mov
and
pop
addb
and
pusha
adc
mov
or
push
add
sub
jne
adc
xor
mov
sub
xchg
mov
mov
cmp
push
rolb
mov
or
gs
mov
cmp
mov
mov
mov
test
add
arpl
repnz
pop
jecxz
shrl
mov
xor
push
sti
enter
cltd
nop
aad
sub
mov
sbb
add
pop
or
jno
clc
je
ret
iret
data16
xchg
pop
push
insl
cmp
or
rorb
lea
popa
andl
mov
inc
mov
and
movsl
ret
mov
and
inc
push
call
and
adc
push
popf
add
es
sbb
lcall
movsb
add
or
add
enter
xor
or
call
inc
mov
mov
push
or
cli
inc
cmp
push
aad
xor
dec
test
jp
pop
push
stos
sbb
icebp
and
test
mov
adc
pushf
add
sbb
add
xchg
inc
les
jnp
push
pop
cmp
jo
pop
jmp
mov
sub
clc
loope
fiaddl
shrb
dec
scas
out
testb
das
sub
sbb
and
test
xor
mov
xchg
in
testb
push
push
dec
pop
and
mov
push
push
ljmp
addr16
sub
pop
add
test
out
out
enter
das
movsb
or
xchg
mov
pusha
dec
pop
xor
pusha
add
mov
pop
mov
xor
lea
pushf
mov
in
mov
imul
lret
incl
mov
xor
bound
loop
cmp
push
sbb
or
push
mov
dec
sbb
mov
inc
lods
mov
adc
add
inc
outsb
add
ret
sbb
out
movsb
sbb
and
jo
add
aam
adc
loopw
sbb
sbb
addl
or
cmp
ret
and
sbb
enter
dec
popa
outsb
cmp
adc
enter
xor
fcmovb
xchg
cmp
or
dec
add
data16
cmp
or
data16
movsb
pop
fcomps
cmp
lods
inc
call
add
add
ja
cltd
ret
repnz
fs
dec
sarl
ror
sub
and
or
push
xchg
and
movsb
movb
test
adc
pop
cmp
add
adc
push
mov
xor
enter
push
or
inc
add
cli
xchg
jg
mov
sub
stc
lds
mov
popa
jnp
push
adc
mov
sbb
fmul
cli
rol
shlb
sti
andb
addr16
sbb
add
jo
xchg
pop
inc
pop
loope
mov
mov
repnz
jo
lods
addr16
pop
imul
jmp
ss
pop
inc
mov
pop
mov
and
loope
pusha
and
pop
sbb
enter
add
mov
or
push
cmp
repnz
popw
pop
clc
or
shrb
shll
test
mov
or
push
lea
cmp
rolb
inc
loope
lods
sar
sti
mov
orb
call
lock
push
cwtl
sbbb
ds
mov
js,pt
stc
sbb
mov
test
push
daa
or
idivb
aas
mov
xchg
leave
testb
sbb
lods
add
add
testb
fsub
inc
mov
stos
in
pop
xor
hlt
adc
jecxz
push
mov
mov
cmp
add
lea
int3
das
mov
inc
out
call
or
bt
gs
daa
xor
inc
int
sbb
adc
lods
add
mov
or
pusha
lock
jl
add
dec
cmpsl
xor
data16
ljmp
imul
loop
jp
dec
icebp
jb
rorl
aaa
fisubrs
sbb
dec
cmp
inc
stos
rorl
inc
lcall
jge
lock
or
sub
aaa
mov
add
rcrl
ljmp
les
sbb
jbe
push
push
mov
iret
mov
mov
cmpsl
xor
xchg
mov
mov
push
cmp
pop
xor
mov
push
clc
or
std
xlat
dec
mov
mov
pop
jg
das
add
add
sub
adc
dec
into
shrb
in
pop
or
movsl
mov
push
adc
cmp
push
sbb
test
xchg
sbb
adc
movhps
jb
popa
xchg
push
cmp
stos
add
sbbb
adc
pop
les
inc
push
cmp
add
lds
or
mov
jno
enter
sar
push
repnz
sub
mov
lret
xor
repnz
lods
adc
pop
pop
lret
inc
pop
or
and
jecxz
push
das
xchg
and
xor
push
js
shlb
or
sbb
mov
lock
mov
iret
cld
ja
adc
xchg
add
pop
or
push
jecxz
cmp
xchg
std
sahf
mov
add
pop
vpshad
pop
cmp
add
pusha
pop
or
cwtl
repnz
push
sbb
cmp
mov
xchg
out
je
sbb
pop
dec
dec
sbb
cmp
push
scas
push
outsb
pop
push
push
pop
adc
pop
cli
es
push
add
outsl
sub
pop
testb
adc
pop
jo
and
ret
jmp
std
mov
cmc
inc
ret
adc
nop
or
insb
sbb
xchg
mov
push
xor
xchg
adc
pop
adc
sub
push
mov
ljmp
mov
and
loopne
mov
movb
xor
call
mov
leave
mov
lods
xchg
mov
scas
adc
imul
push
cmp
or
add
pop
and
jb
call
outsb
bnd
das
lret
sub
jno
clc
jmp
pop
dec
imul
mov
mov
in
add
mov
sbb
pop
cwtl
or
movsb
mov
add
test
leave
pusha
mov
jp
int3
or
loopne
lods
pusha
adc
sbb
cld
lods
decb
popa
or
lret
or
cmp
push
push
adc
inc
idivb
cbtw
or
loope
pop
xchg
rcrb
sbb
push
push
daa
mov
push
inc
pop
inc
cltd
jne
adcb
inc
push
imul
pop
mov
pop
xor
leave
neg
pop
adc
stos
add
mov
into
ss
cmpsl
push
sbb
bndstx
adc
inc
sub
inc
mov
insl
or
iret
lret
clc
add
cli
or
iret
enter
sbb
jmp
mulb
sbb
push
and
in
adc
sbb
roll
ret
icebp
pop
jno
push
movsb
ds
inc
movsl
aad
sbb
pop
loop
outsb
shl
loope
dec
test
mov
js
out
mov
into
cwtl
or
pop
push
cmp
inc
adc
add
fmul
xchg
or
invd
or
sbb
movsb
push
add
test
mov
and
addl
cmpsb
push
int3
add
jmp
ljmp
adc
dec
daa
js
lret
mov
ret
mov
cmp
pop
cmp
insb
xchg
pop
ds
rolb
lea
int3
inc
cli
xchg
and
and
mov
and
and
xchg
pushf
jge
adc
inc
rorb
or
je
lods
and
pop
daa
arpl
jp
xor
les
imul
or
mov
js
lcall
adc
dec
daa
test
aam
jbe
push
ret
lahf
orb
lret
push
es
xchg
add
in
adc
pop
rolb
aam
outsb
lcall
xor
add
sbb
bound
inc
dec
xchg
mov
lret
cmpsl
andl
or
mov
adc
inc
sahf
ret
lods
or
fldt
scas
aam
adcb
push
lret
inc
inc
mov
nop
sub
sub
push
sbb
xorl
int
sbbb
inc
inc
ret
dec
push
fisttpll
push
cmp
sahf
inc
outsb
lock
push
shll
xchg
lods
mov
xor
sub
outsl
inc
andb
mov
jp
push
loop
movlps
xor
push
push
push
mov
xchg
mov
leave
pop
mov
leave
mov
or
add
lock
fnstsw
and
sub
sbb
xchg
xchg
dec
loopne
nop
cmp
in
pusha
jne
icebp
stc
mov
dec
mov
nop
aaa
inc
les
mov
lret
dec
lcall
mov
fs
sub
repnz
jp
mov
inc
clc
adc
or
arpl
pop
insb
sbb
dec
lds
popf
add
add
xor
xchg
adc
dec
pminsw
push
inc
andl
add
sbb
stos
adc
cmpl
cmp
data16
sbb
xorb
sti
xor
jo
mov
adc
sbb
xchg
pop
bnd
push
push
sub
adc
inc
popf
push
or
mov
inc
xchg
scas
out
pop
orb
icebp
push
loopne
shl
push
or
test
add
or
lret
adc
sbb
sbb
mov
or
in
cmpsl
sar
or
ret
in
xchg
js
push
pop
dec
push
sub
icebp
mov
jg
xchg
sbb
lods
icebp
jmp
push
lahf
jo
rorl
or
or
faddp
push
popf
lds
dec
pop
pop
mov
fucomp
dec
cmp
movsb
mov
push
and
movsl
mov
inc
or
imul
mov
stos
add
pusha
or
mov
add
xchg
push
fsubrs
hlt
jo
sbb
or
xor
sarb
inc
stos
or
inc
push
xchg
rorl
out
push
movsl
les
addb
es
shlb
ret
pop
xchg
inc
pop
xor
add
cld
test
dec
push
xchg
fwait
test
mov
add
mov
sbb
push
push
xchg
mov
scas
cltd
adc
adc
int3
xchg
push
sbb
push
mov
sbb
arpl
add
loopw
js
lods
adc
cmp
aaa
push
aaa
xor
adc
push
xor
arpl
nop
sbb
rolb
xchg
pop
and
in
pop
add
insl
push
add
or
xchg
cmc
and
push
add
add
cmpsl
test
adc
popa
sub
or
xor
aaa
inc
bndldx
lahf
and
imulb
add
mov
outsl
or
mov
inc
push
faddl
dec
pop
pop
sbb
pushf
mov
rorb
repnz
add
mov
imul
data16
xchg
xor
rcr
scas
pusha
js
enter
enter
xlat
andb
cmp
bound
fimuls
inc
es
and
sub
jl
cmp
aaa
lea
scas
sub
push
or
sub
adc
testb
stos
xchg
daa
xor
scas
xor
pushf
aam
shr
mov
mov
int3
mov
mov
test
sub
dec
pop
sbb
arpl
das
or
sub
lret
adc
lret
jbe
add
loopne
dec
pop
loopne
pop
adc
clc
xorb
xchg
xor
inc
xchg
jmp
fisubrs
sub
ljmp
lods
rcl
lcall
add
xlat
addb
push
and
aad
cmp
scas
inc
enter
xor
adc
pop
leave
cmc
jnp
pop
cmp
cmp
movaps
fwait
or
imul
or
rolb
es
nop
cs
adc
push
mov
sti
add
jno
jno
inc
mov
icebp
gs
test
ljmp
mov
sbb
adc
es
ljmp
movsl
test
and
xchg
and
test
xchg
or
leave
or
aad
out
test
push
sbb
jo
in
sbb
mov
andb
push
dec
adc
cmp
push
adc
cmp
stos
xchg
adc
rclb
aad
into
fwait
mov
pushf
sti
ret
adc
or
xchg
pusha
les
pop
lock
test
pop
mov
sub
loopne
orl
jne
leave
int3
adc
nop
out
push
mov
scas
jg
movaps
fs
sbb
inc
loope
adc
hlt
cmpl
or
mov
adc
repnz
dec
inc
xchg
lock
adcl
ljmp
sahf
xor
test
pop
loop
loope
add
inc
or
dec
add
lock
xchg
loope
jmp
jns
rclb
or
adc
mov
loope
and
pop
sbb
pop
stc
or
mov
rcr
ret
enter
xchg
ret
xchg
gs
setge
pusha
subl
mov
add
xchg
outsl
inc
add
insb
xor
add
clc
into
add
inc
push
stc
adc
das
test
inc
mov
inc
movq
pop
push
out
xchg
pop
and
dec
sub
mov
adc
cli
movb
push
and
out
test
lahf
movb
cmp
dec
rcrb
fisubs
jo
aaa
jp
outsb
sub
add
adc
aas
nop
xchg
xchg
mov
dec
arpl
push
lods
and
cs
cmc
adc
subb
je
add
gs
arpl
mov
push
lock
jle
xchg
sbb
popa
dec
call
xchg
dec
test
mov
cmpsb
adc
call
popf
sub
inc
sub
mov
cmp
pop
jae
lock
mov
cld
and
xor
add
addl
sbb
push
inc
dec
adc
cmp
push
scas
shlb
sbbl
xchg
jo
sbb
rcrb
inc
mov
pusha
in
bound
xchg
sub
into
push
xchg
and
js
stc
xor
jb
pusha
or
cmp
pop
rcrb
into
dec
mov
popa
inc
dec
pushf
or
push
adc
adc
mov
add
inc
ret
enter
xchg
and
cmp
roll
inc
mov
cmp
cmc
dec
cmp
add
sbb
sbb
or
testb
jno
test
sbb
jbe
ljmp
or
ret
sbb
xchg
sbb
jno
out
mov
cmp
int3
ret
lods
mov
push
pop
sub
push
xchg
lret
xor
loop
lret
mov
or
call
daa
mov
or
movsb
xor
pop
cmpb
push
ret
int
insl
int3
and
js
xchg
adc
jl,pt
or
rcrl
inc
popa
lgs
mov
sbb
adc
mov
hlt
leave
cmc
insl
sbb
adc
add
fiaddl
xchg
sysret
ja
mov
or
cmpsb
repnz
sub
mov
sbb
ret
pop
and
test
pop
or
xchg
outsb
lock
sbb
pusha
rcrl
add
dec
xor
pop
shld
pop
rorb
stos
add
inc
add
sbb
add
je
sub
mov
mov
xor
push
jl
push
mov
xchg
mov
mov
pop
push
and
loope
scas
test
jecxz
cltd
out
clc
aas
sub
js
dec
rcrb
or
adc
or
inc
add
js
lods
mov
xchg
pushf
and
mov
test
inc
inc
push
iret
sbb
movsl
in
shl
push
mov
jbe
loopne
jb
call
cmp
sbb
jmp
and
popa
aam
or
add
adc
fwait
iret
jge
sbb
arpl
push
mov
inc
dec
mov
jnp
pop
js
test
add
or
scas
and
cwtl
mov
or
sub
stos
or
out
ret
loope
inc
stos
movsb
rolb
mov
scas
and
ret
adc
stc
mov
std
sub
add
orb
movsl
es
pop
adc
inc
stos
lret
icebp
or
cwtl
push
ja
dec
and
push
pop
sbb
ret
mov
pop
shll
hlt
add
xchg
or
pusha
mov
orb
jecxz
call
adc
sbb
divb
fs
mov
popf
and
xchg
aas
or
xor
rol
inc
push
xor
or
fcmovnb
mov
ja
rcrl
push
sub
stos
adc
insb
stos
pop
enter
cmp
pop
jge
andl
xlat
addb
inc
outsl
inc
mov
adc
mov
stos
and
pop
and
outsb
and
nop
xchg
xchg
add
mov
rorb
outsb
or
inc
sub
mov
mov
mov
add
mov
insb
mov
push
and
sbbl
pop
jp
stos
scas
or
jmp
add
loop
rcrb
into
cs
sbb
mov
pop
dec
ret
adc
sbb
js
push
ljmp
cmp
or
ja
add
stos
push
pop
mov
xor
or
mov
aaa
popf
in
jge
andl
push
or
and
test
mov
loop
push
ror
cli
into
sbb
loop
and
mov
push
in
adc
xor
pusha
cmpsl
xor
inc
rcl
inc
cmp
mov
clc
rcrb
fstl
movsb
push
mov
push
mov
rorl
gs
adc
dec
cmp
fwait
loopne
push
test
bound
inc
arpl
pushf
jmp
nop
fstps
sbb
sbb
mov
or
push
sbb
hlt
sti
sbb
pusha
adc
xchg
xlat
leave
xor
dec
bound
inc
aam
jp
mov
add
call
mov
icebp
push
or
push
outsb
ret
das
fadds
xchg
ret
dec
sbb
push
cli
add
mov
push
les
pop
fdivs
xor
xor
dec
cli
mov
adc
jmp
adc
push
mov
pop
les
or
rcrb
and
mov
aam
adc
leave
push
adc
cmc
or
rol
cmp
sbb
and
pop
push
adc
jo
adc
pusha
or
inc
sbb
rcl
xor
jmp
data16
daa
dec
and
xchg
dec
or
addb
mov
lea
dec
dec
mov
cwtl
pop
jle
inc
and
cltd
sbbb
js
pushf
lock
push
repnz
or
clc
adc
xchg
fwait
aas
mov
int3
dec
adc
and
sbb
les
add
mov
xor
rcrb
push
lods
scas
cwtl
push
and
rorl
jnp
enter
push
dec
jl
loopne
inc
pop
das
adc
and
rcrl
jmp
add
inc
test
push
jle
sub
outsl
adc
lcall
mov
and
jb
add
ror
push
rorl
jle
or
xor
xlat
mov
jns
enter
pop
subb
rorl
pop
jns
cmp
out
inc
push
imul
push
arpl
jb
push
mov
scas
sub
and
adc
dec
daa
lea
imul
push
sub
fisttpll
mov
dec
pop
jne
fmull
sub
bound
dec
incb
in
push
xor
or
std
js
inc
add
or
loope
mov
mov
push
xor
sbb
je
dec
into
aad
sbb
cmp
fadds
pop
push
dec
mov
lea
sbb
push
or
xchg
adc
jp
clc
jnp
mov
or
insb
sbb
imul
cmp
shrb
adc
imul
ret
adc
jl
mov
clc
cmc
leave
ret
and
inc
sub
lock
mov
jb
cwtl
jmp
ds
leave
mov
loopne
or
rcl
add
lcall
cwtl
loopne
rcrb
jmp
sti
and
in
pusha
xchg
push
adc
adc
dec
or
out
loopne
bound
jb
push
aaa
cmovg
xchg
cltd
iret
adc
add
mov
or
lret
decb
sub
adc
js
mov
jno
lret
outsb
add
ljmp
add
push
mov
movaps
clc
dec
fsubr
or
sbb
imul
out
lods
xor
dec
call
fcoml
test
shlb
add
mov
push
adc
aam
test
pop
jb
mov
xor
cmp
sub
sbb
daa
dec
xlat
adc
sub
or
pop
push
shll
insb
imul
movsb
add
popa
cmp
cli
into
add
ljmp
ret
jecxz
pop
cs
or
or
sub
std
rcrb
xor
dec
les
cmp
or
stc
testb
mov
ret
lahf
pushf
dec
sbb
mov
or
int
mov
pop
icebp
pop
adc
sub
adcl
mov
adc
mov
fcomps
adc
xchg
adcb
xchg
lock
mov
adc
or
inc
jle
adc
cmp
cmp
add
les
pusha
shrb
ficoms
scas
mov
jo
mov
test
adc
add
xor
sub
inc
fmull
lock
xor
push
call
cmpsb
scas
sbb
sbb
cmpl
adc
cmp
and
movsl
gs
arpl
dec
sub
icebp
add
xchg
mov
adc
dec
movsb
loop
xor
or
cmp
test
pushf
mov
loopne
pop
fistpl
cmp
xor
sbbl
push
cmp
or
scas
add
sti
sbb
dec
mov
icebp
or
cmp
xor
fdivr
jp
test
push
gs
xchg
push
outsb
jns
lods
inc
pop
imul
mov
div
jp
pop
inc
adc
mov
adc
ljmp
and
push
popl
bound
aas
mov
aad
mov
gs
and
lret
add
jp
sarb
cmp
sub
xor
cmp
adc
outsb
pop
jg
test
rol
jle
or
cmp
loopne
add
push
push
data16
inc
add
xor
xchg
pop
sbb
mov
gs
pop
in
sbb
xchg
or
popl
into
nop
lea
pop
sbb
mov
pop
cli
pop
notl
push
insb
gs
sub
xchg
adc
mov
jae
adc
lea
icebp
mov
mov
inc
or
pushf
push
movsb
popf
mov
loopne
ljmpw
shl
fsubl
cwtl
sbb
pop
inc
leave
push
lods
xor
dec
loopne
sub
push
xchg
out
inc
push
jo
push
sbb
rorb
mov
or
shl
or
pop
movb
outsb
pop
adc
and
pop
mov
scas
or
mov
adc
lea
mov
cs
sbb
imul
pop
sub
mov
and
andl
push
mov
xlat
add
xchg
sbb
popl
nop
adc
loop
push
or
mov
pop
adc
jmp
fsub
mov
js
mov
jo
xor
jbe
sub
mov
add
adc
in
inc
cmp
jl
negb
dec
mov
fists
fstl
cmp
fisubrl
sbb
into
fcmovb
fsubrp
push
fsubs
loope
push
push
pop
jne
xchg
adc
mov
adcl
sbb
clc
or
negb
dec
fnstenv
imul
add
pop
and
mov
sbb
or
leave
call
lea
aam
adc
adc
xor
out
add
or
or
stc
fisttpl
mov
push
sbb
cmc
mov
sbb
sub
sub
lods
std
fdivrp
inc
sbb
and
xchg
xchg
rclb
push
jo
insl
sub
push
sbb
mov
addb
or
sbb
adc
les
sub
inc
hlt
ljmp
js
mov
jg
sbb
inc
mov
add
js
fdiv
push
sar
jge
add
js
and
lds
dec
push
sub
inc
sub
lea
cli
dec
bound
inc
imul
or
ret
push
rcrl
mov
pop
mov
xchg
jne
add
aam
ret
pop
add
hlt
xor
testl
jmp
sbb
mov
and
insl
xchg
subb
add
ret
or
dec
bound
mov
fimuls
scas
inc
sub
mov
pop
mov
xchg
movnti
lea
and
dec
js
cmpsb
adc
es
movsl
xor
push
or
cmpsl
sub
icebp
call
jle
sbb
lds
dec
into
adc
mov
dec
pusha
add
mov
dec
xchg
pusha
sbb
jge
sbb
adc
push
aas
cld
in
add
fdivs
add
js
fs
test
addr16
xchg
test
inc
inc
pop
cmp
or
or
pusha
pop
sub
dec
pop
sub
lret
testl
sbb
mov
cld
into
frstor
push
and
sub
push
lret
jae
mov
pop
dec
jp
sbbl
or
out
out
mov
and
or
scas
dec
dec
cmpsl
xor
mov
push
js
mov
insb
sbb
sub
shll
dec
sbb
jl
rclb
pushf
scas
inc
or
xchg
daa
pop
dec
std
mov
roll
in
iret
dec
mov
jno
mov
cmp
ret
mov
bound
sbb
or
adc
mov
icebp
test
cmpsb
shl
mov
adc
jecxz
repnz
xchg
sarb
mov
pop
int
cmp
into
sbb
push
and
sahf
call
in
mov
jno
mov
orb
mov
icebp
or
sub
sbb
cmp
dec
xchg
mov
cmp
ret
sbb
pusha
dec
ret
ret
or
inc
pop
push
pop
gs
test
fistps
sub
push
inc
sub
insl
std
pusha
mov
mov
jno
jmp
push
push
add
sbb
mov
lods
and
into
add
mov
fst
pusha
sub
mov
jo
lds
jno
push
test
mov
mov
sbb
sbb
loopne
adc
loope
enter
xor
jl
and
lahf
leave
fucomip
insb
lea
fcmovu
dec
mov
inc
shlb
popf
sub
sbb
push
nop
push
test
sbbb
mov
push
mov
or
add
repz
ds
fwait
mov
cmp
outsb
push
mov
cs
rorb
pop
inc
notl
or
imul
dec
js
inc
mov
and
arpl
pop
push
sbb
sar
pop
pusha
dec
xor
push
cwtl
arpl
push
or
push
push
mov
push
rolb
add
xor
dec
and
jb
sarl
sub
xlat
and
orb
js
mov
pop
mov
lods
mov
sbb
cmp
xor
or
adc
mov
clc
or
repz
add
sbb
ret
pushf
push
mov
loop
sbb
or
push
xor
xchg
add
sub
sahf
push
loop
in
lods
call
push
into
loop
sub
jno
rclb
xor
sbbb
sbb
dec
add
dec
mov
int3
pop
mov
test
sbb
imul
cld
cmp
popa
lea
inc
adc
jns
sbb
jecxz
push
xchg
test
push
shl
add
push
and
adc
rcrl
sbbl
and
sbb
mov
and
lea
sbb
rolb
loope
push
fdiv
mov
inc
push
mov
xchg
fidivs
add
adc
add
cmp
pop
jne
rcl
rclb
lea
jb
mov
popa
push
mov
int3
ss
pop
inc
xchg
inc
insb
or
xor
jle
call
lock
xchg
in
ret
je
adc
push
scas
adc
jbe
jle
xlat
test
shll
into
and
jle
dec
roll
push
pop
sbbb
ret
inc
mov
mov
daa
push
or
je
inc
es
xchg
popa
sbb
ret
dec
xchg
or
pop
xor
inc
pusha
dec
push
push
sbb
pop
loopne
paddq
adc
push
jge
xor
push
fildll
push
gs
inc
push
arpl
insl
adc
in
push
inc
cltd
pusha
movsb
jl
fisubl
xchg
inc
pop
mov
sub
mov
sub
add
or
add
mov
movsl
lods
mov
ret
push
icebp
faddl
rcrl
mov
push
int3
mov
bound
inc
je
mov
shl
pop
js
dec
sahf
mov
push
add
stos
stc
nop
js
inc
fstpl
add
sbb
add
sbb
cwtl
dec
pop
rcl
shl
rclb
repnz
inc
sbb
nop
or
sbb
inc
andb
jp
push
ss
mov
fbld
incl
xor
sbb
js
inc
daa
sbb
jne
aad
xor
pop
clc
div
rcrb
jne
test
jb
sub
in
cld
fdivrs
and
sbb
sbb
cmpsl
push
dec
cmpsb
or
pusha
jo
orl
xchg
add
subl
and
cmpsb
sbb
xor
pop
xor
popa
movsb
inc
push
push
cmp
ljmp
rclb
shr
shlb
mov
loope
inc
jns
pusha
sbb
in
ds
push
cmp
outsb
cmp
push
mov
xchg
and
enter
imul
mov
and
rcll
and
xchg
enter
les
jo
xchg
adc
stos
push
pop
or
sbb
jp,pn
mov
mov
ds
incb
cmp
dec
insb
loopne
adc
test
pop
inc
sub
mov
pop
mov
inc
ljmp
add
jl
add
repz
pusha
ret
and
int3
xorb
je
cmp
pop
mov
cli
in
repnz
hlt
scas
inc
test
push
pop
dec
push
shl
inc
call
sbb
repnz
and
add
ds
mov
sub
bound
mov
push
aad
in
jle
mov
lock
or
test
mov
inc
mov
hlt
pop
outsb
xor
shrb
test
rol
and
xor
imul
rcrb
ficompl
xchg
mov
gs
cmp
hlt
mov
xlat
inc
loop
and
mov
add
mov
cmc
add
jb
outsb
lret
mov
xchg
or
rcrb
pop
test
pop
inc
cs
add
cmpsb
or
xor
fldt
cmp
popf
jbe
cmc
rolb
or
jb
add
loop
add
sbb
fmuls
cmp
ret
inc
and
test
adc
and
jle
loopne
inc
vfmsub231ps
andb
les
loope
les
adc
aaa
faddp
xchg
jno
xchg
add
rolb
imul
push
test
enter
cmpsb
sbb
adc
dec
mov
shrl
jmp
test
scas
push
adc
and
addb
xor
bound
test
mov
push
daa
cmp
test
pop
mov
outsl
cmc
les
pop
insb
insb
cmp
addl
or
and
sub
fidivl
xchg
or
rorl
imul
test
mov
clc
nop
push
testl
testb
jmp
loope
adc
inc
add
daa
cmpsl
push
test
sar
mov
mov
testb
xchg
fiadds
push
lods
xor
adc
sbb
adc
popa
mov
pop
push
pushf
dec
cli
push
fwait
ret
pop
into
insl
inc
pop
loop
scas
mov
xlat
xlat
outsl
or
jne
fdivrl
dec
mov
enter
dec
push
cwtl
pop
test
aam
les
xor
push
add
xchg
ror
addb
xchg
bound
sub
mov
jmp
sbb
pop
cmp
pusha
add
push
push
push
enter
add
mov
pop
pusha
add
repnz
add
hlt
dec
dec
cmp
add
pop
testb
pusha
and
jmp
subl
add
mov
inc
jns
shll
call
mov
or
bound
orl
insb
mov
sbb
add
or
mov
out
test
js
call
xchg
or
pop
mov
sub
xchg
js
or
pop
or
inc
or
rcrl
cmp
shrl
loopne
push
ljmp
add
inc
test
sbb
test
inc
push
insb
mov
mov
mov
pop
rolb
rcrb
lock
insb
nop
int3
lock
stos
sbb
add
mov
mov
psrad
nop
test
nop
push
cs
mov
jb
and
and
cmp
movsl
icebp
sbb
inc
push
push
cld
or
lahf
rcr
ss
sub
sub
or
mov
add
or
sbb
jne
pusha
lods
inc
rolb
pop
clc
gs
xchg
sbb
aaa
mov
cmp
sarb
or
into
and
adc
xor
mov
inc
sub
pop
push
and
test
push
push
andl
adc
sub
sub
sbb
push
adc
cmpb
test
and
js
xor
add
add
and
sbb
int3
jl
sub
ror
fildl
fistpl
push
cltd
clc
sub
and
add
mov
pop
inc
mov
mov
jno
int3
or
mov
sbb
mov
dec
sbb
js
pop
jp
mov
or
rorl
and
or
push
push
insb
xor
incb
lea
dec
stc
imul
push
jb
mov
dec
aam
adc
xlat
xor
outsb
dec
inc
sbb
fildl
adc
lgdtl
mov
lahf
sub
xor
fs
sbb
pop
xchg
push
xor
pop
jge
rolb
and
psubw
inc
jg
pushw
push
inc
mov
or
scas
loop
push
addr16
arpl
dec
inc
ret
dec
arpl
je
fcompl
lock
pop
test
lods
and
mov
and
adc
mov
pushf
inc
xchg
daa
cmp
mov
mov
call
icebp
orb
inc
pop
mov
xchg
adc
or
dec
mov
add
push
add
call
sub
jg
enter
cwtl
mov
repz
adc
jge
dec
lea
test
loop
sub
or
or
sub
lods
or
pop
test
push
or
sbb
add
inc
lret
adc
mov
inc
mov
lret
or
xor
es
ljmp
insb
pop
cmc
cmpsb
scas
shrb
mov
push
nop
mov
subl
jo
fbld
inc
push
xor
jno
dec
adc
mov
inc
test
mov
inc
pop
adc
dec
or
mov
inc
sbb
cmp
sbb
mov
xor
rorb
or
adc
pusha
das
loopne
cmp
and
push
inc
inc
dec
lahf
sbb
sbb
pop
movsb
fdivl
cmc
or
adc
shll
cmp
sbb
sub
ja
dec
loopne
or
push
or
and
aad
cmc
int3
jo
cmp
jmp
cld
adc
mov
jno
push
jl
mov
inc
sub
sub
add
shr
push
or
or
pusha
lds
enter
inc
cmc
nop
mulb
mov
pop
pop
sub
aaa
cmpsb
adc
outsb
cmp
adc
shlb
sub
dec
pop
cld
sub
add
lds
jno
and
sub
popa
mov
jle
es
imul
mov
xchg
sub
rcr
ss
addb
cmpl
data16
xchg
movb
mov
je
push
cmp
dec
xchg
add
inc
sbb
push
rclb
aad
movsb
cwtl
mov
sub
unpckhps
sub
stos
lret
sub
and
nop
cs
lock
pop
test
sub
js
mov
push
ds
xchg
mov
inc
outsl
sahf
ret
jne
popf
lret
cmpsl
into
clc
cwtl
and
sarb
sbb
mov
data16
shr
into
or
scas
roll
adc
insb
test
cs
adcb
adc
rcrb
shl
cwtl
cli
movsl
add
push
sbb
sbb
divl
out
pop
xor
add
or
les
cwtl
or
or
ljmp
stos
mov
shr
sbb
flds
sub
mov
rol
fistpl
xchg
inc
or
sbb
dec
push
add
sbb
mov
dec
and
sub
pusha
xchg
or
call
dec
or
leave
xor
adc
xchg
push
mov
test
sbb
subb
adc
jl
ror
xchg
adc
outsb
add
mov
les
xor
mov
and
leave
add
xchg
push
icebp
fs
jae
into
mov
adc
int3
add
adc
stos
icebp
push
mov
test
stos
inc
sub
pop
imulb
int3
add
inc
mov
and
dec
sbb
pop
adc
inc
addr16
jl
cli
jb
inc
scas
test
jb
pop
xor
sbb
inc
shrb
cmp
jnp
pop
adc
scas
ss
loopne
pop
pop
cmpsl
sbb
jmp
xor
into
js
push
add
sbb
xor
js
or
adc
dec
fs
or
rcrb
popa
leave
mov
ljmp
lret
aaa
push
cmp
ss
lret
xor
ljmp
loop
daa
test
inc
sbb
gs
mov
push
lods
mov
adc
movsl
paddb
mov
dec
loopne
popf
jo
xchg
pop
and
or
xor
jg
mov
push
sub
cmpsb
and
xchg
xor
loop,pn
mov
rolb
mov
popa
dec
mov
mov
adc
movsl
leave
loope
daa
push
or
cld
popa
mov
rclb
sub
rcrb
test
or
aam
inc
and
js
push
aam
jmp
rcrb
or
mov
add
je
sbb
adc
dec
adc
arpl
inc
dec
inc
orb
repz
ljmp
ja
lea
pop
xor
pushf
popa
hlt
xor
adc
xchg
sbb
pop
push
xchg
sar
mov
or
adc
imul
mov
sub
jo
xchg
jp
push
xchg
sbb
loope
adc
aad
cmp
pop
lret
pop
xchg
mov
add
sub
jg
ret
loop
push
shrl
xor
ss
shrl
out
pop
mov
ljmp
xor
mov
adc
dec
push
jb
aad
cmc
push
push
hlt
mov
daa
and
imul
jno
adc
adc
cmovo
or
imul
mov
pop
sbbl
push
stc
mov
aad
mov
ret
das
and
jmp
aam
scas
push
add
mov
pop
push
adc
push
push
cvtps2pi
jno
clc
sbb
movsl
push
push
mov
dec
jp
subl
ja
lods
xor
sbb
add
jle
shll
xchg
pop
in
out
lods
test
popa
xchg
popa
addr16
xor
inc
loop
inc
sbb
add
test
popa
dec
and
xchg
sub
adc
jmp
cmp
add
xchg
push
sub
adcb
pop
add
dec
mov
addr16
ret
cmp
push
inc
sub
jge
jp
cmc
jp
in
pop
enter
mov
test
pcmpgtd
leave
add
movsb
cmp
jne
xor
xor
into
sahf
rclb
sub
mov
ret
sbb
loope,pt
aam
and
lods
dec
adc
aam
cmp
sbb
sbb
push
pop
pusha
or
call
mov
sub
loopne
into
add
xchg
adc
lock
and
pop
aam
adc
xchg
loope
shll
sbb
mov
adc
lret
nop
test
cmpsl
lock
xchg
insb
test
mov
adc
ss
test
mov
mov
and
xchg
or
add
loop
and
sarb
adc
pushf
repnz
and
jne
loope
adc
inc
mov
loopne
sbb
rol
pop
lret
cwtl
sbb
sub
stc
jle
mov
cmp
inc
ret
ljmp
add
pop
bound
movb
leave
mov
push
test
or
or
cwtl
ret
pop
sbb
adc
fdecstp
xor
clc
arpl
popa
add
push
andb
dec
hlt
inc
je
aam
adc
jp
dec
std
xchg
imulb
enter
sbb
cwtl
jmp
and
movsl
mov
xchg
push
jl
adc
inc
ret
rcl
fcoms
jmp
mov
sbb
dec
push
sbb
inc
push
pushf
adc
push
js
mov
push
sub
adc
sbb
outsb
ds
dec
rcrb
inc
imul
sbb
aas
or
sbb
outsb
sbb
adc
adc
sub
xchg
ljmp
or
loope
mov
xor
sbb
test
fwait
push
mov
pop
bound
and
ds
stos
rorl
sbb
pop
adc
push
shrb
xchg
ret
jmp
hlt
enter
popa
inc
popa
cmp
lods
or
bound
sbb
xor
inc
out
and
add
lcall
jb
xchg
push
sbbb
es
sub
out
pop
mov
pushw
adc
push
mov
ljmp
add
mov
out
xchg
pushf
notl
xchg
mov
mov
popf
or
jnp
jo
and
icebp
xchg
insb
sub
lahf
pop
int3
insb
mov
sbb
push
push
ret
fcoms
and
nop
bound
and
push
push
out
add
inc
sbb
rolb
jno
sarb
loopne
xchg
dec
and
jns
jbe
fs
sbb
mov
push
cmp
mov
push
jbe
or
nop
lcall
and
sub
jne
jmp
popa
into
cmpps
xchg
jge
and
clc
jno
cmp
or
push
push
int3
orb
or
loopne
pop
xorl
out
push
inc
xorb
dec
and
adcb
sbbl
mov
pushf
mov
jl
test
push
jl
or
fistpll
loope
sbb
lods
ds
or
dec
xor
daa
in
push
dec
scas
and
icebp
add
mov
push
push
outsl
add
jle
cwtl
xor
add
jnp
jge
outsl
sbb
scas
in
xor
and
xlat
inc
or
push
sbb
mov
cld
mov
cmp
mov
fimull
test
sbb
stos
push
jno
jbe
lea
and
lock
add
repnz
adc
adc
mov
inc
cli
imul
clc
add
shl
mov
or
push
ljmp
fldl
addb
insl
or
inc
lods
push
or
cs
cmp
leave
and
movsb
push
es
push
push
add
movsl
jbe
inc
movsb
pushf
dec
cwtl
inc
inc
mov
int
sub
js
add
mov
push
xor
lods
or
rcr
dec
or
inc
push
ret
xchg
mov
mov
fstl
mov
into
movsb
or
movsb
outsb
mov
lods
and
add
arpl
scas
jo
add
aad
xchg
pop
hlt
lock
leave
add
mov
or
pop
roll
mov
lock
mov
cmp
dec
adc
cmp
xchg
cwtl
push
pop
adc
lock
cmp
aad
lea
mov
movsl
enter
push
mov
xchg
jp
or
sbb
adc
iret
mov
insb
adc
subb
sub
out
mov
sbb
sub
or
mov
adc
int3
pop
sbb
and
shr
repnz
pop
rcrl
add
and
push
add
sbb
or
test
inc
pop
mov
xchg
sub
cmp
xlat
js
sbb
sub
cltd
xor
or
inc
jbe
xchg
dec
sarl
test
loopne
in
jle
xchg
push
pop
adc
push
mov
xor
shl
and
js
mov
sbb
mov
imulb
dec
sarl
dec
dec
and
loopne
push
add
mov
cmp
and
loop
ret
ds
arpl
mov
push
out
xor
push
icebp
lock
adc
push
in
xor
xlat
dec
and
rolb
test
pop
ss
and
dec
push
mov
mov
add
das
sbbl
movsb
pop
rolb
dec
stc
mov
aaa
inc
xchg
adc
xchg
pop
andl
add
add
mov
loope
mov
or
test
push
add
mov
pusha
pop
js
and
xchg
jno
das
mov
clc
add
ds
adc
pusha
pop
xchg
adcb
lret
nop
clc
add
push
fs
adc
lods
dec
jl
dec
sbb
sar
aam
jae
push
lock
dec
push
cmpsl
mov
pop
rcl
popa
roll
mov
cmp
int
in
dec
sbb
fnstenv
push
outsb
sub
dec
pusha
push
xor
sbb
ret
mov
dec
jne
adc
into
xchg
iret
push
mulb
dec
mov
dec
mov
jo
cmp
in
sbb
rolb
js
les
testl
daa
loopne
pop
and
lret
push
shld
mov
sbb
pop
ret
mov
sbb
ficomps
mov
or
xchg
cwtl
rorb
and
sbb
or
pop
push
mov
jp
xchg
and
movsl
enter
and
sbb
adc
cwtl
cmp
mov
mov
sbb
dec
mov
and
lds
mov
lcall
pop
dec
cmpsb
test
js
sbb
sbb
dec
adcl
mov
ljmp
popa
ljmp
notb
mov
push
sbbl
push
ja
jnp
and
lret
repz
bnd
mov
or
cmpb
leave
stc
or
pop
add
lcall
imul
icebp
les
aam
mov
lods
icebp
inc
mov
mov
mov
xor
sbb
in
ljmp
push
push
cwtl
xor
in
rolb
push
and
or
fstl
or
dec
mov
rclb
ret
jb
enter
xchg
loop
jmp
mov
and
movsb
dec
loopne
xchg
xor
pusha
or
sub
mov
pop
mov
mov
sub
subb
dec
dec
pop
mov
into
inc
es
clc
mov
data16
mov
addb
inc
arpl
subl
fs
loopne
add
xchg
mov
adc
dec
push
mov
lock
adc
pop
div
xor
rcrb
push
push
cmpl
jge
clc
xor
jmp
sub
std
or
xor
adc
into
mov
push
add
push
bound
pop
push
or
or
push
xlat
es
ret
jne
add
daa
cmc
and
ljmp
xor
jp
pop
push
or
rorl
dec
loope
out
cmp
sub
in
arpl
jno
cmp
mov
adc
xor
mov
xor
std
sub
jecxz
add
pop
cmp
sbb
and
add
push
pop
imul
aam
dec
cld
or
insl
les
jo
popa
aam
push
outsb
mov
cmp
sub
gs
or
mov
or
adc
or
jle
test
sarb
adcb
out
jae
sbb
push
xor
in
rolb
js
jle
mov
lods
xchg
in
jge
xor
lods
andl
mov
jno
inc
jp
sub
lock
mov
dec
fwait
pushf
pop
popf
mov
add
test
lds
push
sbbb
cltd
pusha
or
arpl
mov
mov
fbstp
and
or
jbe
pop
add
loope
pusha
jns
jbe
arpl
cmp
fs
in
jge
push
and
xor
loopne
es
or
jp
lock
xchg
or
adc
pop
lret
adc
push
inc
push
cmp
and
movsb
xchg
sub
cmpsl
imul
cmc
shlb
in
enter
dec
rorl
mov
inc
mov
das
or
les
aad
mov
cmp
arpl
or
jb
rorl
push
mov
adc
in
orl
add
adc
xor
shll
adc
adc
clc
mov
andb
add
ja
xorl
xor
das
movsl
adc
loope
cmp
push
sub
push
aam
ljmp
pop
inc
mov
mov
adc
adcb
gs
push
dec
je
sbb
push
gs
inc
jne
mov
inc
loopne
lea
sbb
push
push
mov
cli
mov
pop
ret
adc
xchg
lret
ds
jl
pusha
loopne
loopne
movsl
ljmp
inc
dec
pop
or
clc
xorb
add
sbb
lret
scas
sbb
ret
aam
jnp
jbe
sub
push
add
or
inc
lods
cmp
pushf
push
lods
ljmp
pop
mov
lock
sbb
popa
xchg
cmp
xchg
sub
push
add
mov
testb
xor
add
or
add
test
inc
pop
jg
stos
aaa
sub
push
cmp
sbb
pop
mov
inc
dec
push
jns
xor
pusha
lods
sub
outsb
mov
imul
add
adc
leave
loop
pop
inc
int
fwait
add
rcll
ret
inc
sub
call
jb
outsb
mov
dec
add
jmp
add
push
xor
mov
je
mov
mul
lret
pop
cmpl
jp
xor
in
mov
xchg
adc
divps
push
cmpsl
xchg
xchg
dec
lret
jl
cmp
sbb
lock
inc
or
push
mov
add
jg
xchg
xchg
mov
sahf
imul
test
dec
rol
sbbl
cltd
jnp
xor
mov
or
pop
cmp
mov
push
xor
push
fwait
mov
test
repz
add
jo
negb
ljmp
cmpsl
shlb
xchg
xchg
mov
jg
sti
push
mov
lods
or
mov
nop
pop
jg
call
cltd
dec
add
pop
aam
push
addl
add
pop
rcr
jge
lock
lcall
mov
lock
add
sbb
popa
ljmp
sahf
lods
ds
ret
sub
rolb
ret
and
das
test
xchg
adc
jecxz
test
add
push
mov
mov
push
or
sub
enter
inc
dec
xchg
fistpll
cmp
shl
ret
loope
bound
inc
movsb
ret
lds
sbb
xor
sbb
add
cmp
mov
adc
call
mov
push
sbb
push
icebp
insb
sub
pop
rorb
pusha
mov
js
sbb
jge
adc
arpl
push
xchg
add
lods
inc
movsb
push
ret
jge
mov
stos
pop
add
das
out
repnz
lods
inc
cmp
add
jno
popf
inc
clc
xchg
push
mov
sbb
test
add
sub
pop
pop
jno
add
jp
or
adcl
mov
lods
lahf
xchg
cli
pop
int3
scas
adc
stc
cmp
shr
insb
pop
pop
adc
loop
dec
mov
mov
aam
xor
enter
xor
sub
add
sub
add
push
icebp
and
cld
push
mov
adc
dec
stos
rol
cmp
imul
test
scas
adc
and
sbb
aam
sbb
imul
dec
movsb
push
jp
fstps
or
xor
movsb
shrl
mov
lods
dec
imul
adc
dec
sbb
imul
push
mov
cmc
sbb
or
or
mov
sbb
inc
adc
es
loopne
xor
xchg
popf
mov
add
pusha
sub
in
pop
shrb
cmp
out
push
imul
inc
and
or
or
aam
cld
jmp
pusha
pushf
add
sbb
cmp
jge
sub
mov
sub
dec
cmp
add
and
rorl
and
jmp
jns
nop
mov
lcall
jbe
shll
and
mov
divl
jo
clc
sbb
cmp
cmp
cmpsb
sbb
xor
lods
ss
mov
sub
pushf
inc
or
mov
iret
pop
aam
or
ljmp
jbe
or
aam
xchg
add
jp
adc
mov
leave
into
xchg
in
ret
cmp
into
out
push
les
dec
cmpb
sbb
dec
add
jmp
and
subl
jo
sbb
pop
daa
outsl
test
push
inc
jmp
cmpsb
pop
pop
cmc
ficoml
jb
adc
cmpl
ljmp
add
loop
rcrl
push
dec
pop
sahf
nop
mov
in
cmp
mov
cmp
gs
inc
nop
xchg
xor
stc
rcl
push
je
fisubrl
insl
xchg
loope
xorb
mov
lea
pop
fwait
mov
adc
dec
bound
cwtl
push
daa
or
and
push
cmp
mov
ret
nop
xor
add
inc
inc
lods
mov
cmp
adc
mov
dec
clc
or
out
sub
add
mov
pop
inc
adc
jle
int
sub
loopne
sbb
mov
mov
iret
adc
repnz
jne
inc
mov
das
sub
lea
xor
rclb
cmp
aam
pop
push
dec
imul
mov
dec
rcl
or
or
jne
ret
or
hlt
or
push
fwait
call
or
xorl
jp
or
out
ficoms
dec
pop
cmp
subb
jb
rorb
xchg
mov
xor
leave
xchg
push
jp
lret
clc
scas
dec
popa
sbb
arpl
or
enter
dec
or
sbb
push
arpl
push
sub
lods
pop
sub
or
dec
cmp
adc
pop
push
imul
mov
push
inc
pop
xlat
mov
xor
or
or
test
xor
sbb
lods
fisubrs
add
mov
ror
clc
jecxz
dec
xor
push
mov
add
shll
orl
add
addl
pop
xchg
fadds
dec
adc
loop
push
jns
sbb
sbb
jp
and
jmp
mov
adcb
add
jecxz
add
sub
push
rolb
imul
shll
shlb
sahf
dec
cmp
sbb
mov
or
cmp
sbb
adc
cld
add
and
add
mov
push
repnz
into
in
adc
neg
and
jecxz
lock
add
rcrl
cmp
dec
mov
add
test
push
mov
xor
sbb
inc
ss
inc
ret
jbe
xchg
and
repnz
jle
xor
cmp
xchg
dec
mov
add
xchg
pop
fidivl
cli
mov
cmp
push
xor
xor
or
subl
cmc
add
pop
push
mov
add
pop
jp
mov
lret
or
sub
pop
mov
sub
cmp
inc
sahf
sbb
rolb
call
add
push
xor
mov
and
js
sbb
pop
mov
jmp
jnp
add
mov
push
nop
push
pusha
pushf
push
fimuls
or
clc
cmpb
or
ret
shlb
push
or
mov
push
xor
lock
mov
fwait
add
and
jp
mov
rclb
inc
faddp
pop
stos
out
add
js
loopne
lret
cmpl
fisttpll
add
add
jmp
aam
adc
pop
popf
pop
insl
push
outsl
jns
lret
push
xchg
jns
lods
outsb
arpl
shll
rcl
jmp
or
push
push
ljmp
sub
and
fwait
add
rclb
ss
mov
jmp
sbb
in
cmpsl
push
xchg
mov
js
mov
xchg
adc
sarb
cltd
lret
clc
jl
push
shrb
dec
pop
popl
or
push
in
dec
jge
or
cmc
pusha
sti
insb
or
fadds
add
cmp
or
jns
test
push
push
mov
xchg
or
mov
enter
pop
sub
es
inc
stos
rclb
rcrb
push
mov
mov
sub
popa
jecxz
mov
lods
imul
inc
add
rcrb
loopne
lcall
loop
ret
pop
cmpl
inc
lret
jno
loope
mov
movsb
xchg
ljmp
and
jge
push
jecxz
int
sub
test
loop
outsl
loope
push
add
add
add
movsb
jo
dec
les
push
mov
adc
popf
mov
sub
jle
adc
inc
sbb
push
mov
mov
and
rcll
push
ret
adc
xchg
pop
or
popf
add
mov
cli
aam
mov
lcall
mov
adc
add
inc
test
cmpsb
hlt
lods
push
in
pop
and
xchg
sbb
cltd
roll
add
cwtl
add
cmpsb
ret
adc
sub
loope
sub
rolb
mulb
mov
cmp
push
add
xchg
sbb
adc
xor
sub
nop
and
out
and
ret
ss
mov
mov
push
ret
push
sub
inc
call
sub
jp
nop
ret
add
cli
push
mov
lods
pop
repnz
sub
repz
add
loopne
fwait
mov
push
les
push
add
call
adc
or
mov
add
cmpsb
movsl
pop
lahf
leave
test
js
test
pusha
fisubl
test
push
sahf
push
inc
inc
lock
pop
outsl
fcmovbe
sub
sbb
into
xchg
sub
js
mov
or
mov
pop
add
test
bound
lock
mov
mov
and
add
repnz
cld
es
sbb
and
and
push
add
rorl
or
inc
js
pop
jo
movsl
xchg
push
je
fadds
mov
in
ret
into
bound
add
fstps
inc
arpl
ret
pop
inc
cmpsl
xchg
push
clc
xor
popa
push
push
cmp
int3
scas
and
lret
xor
add
test
loopne
sbb
lods
inc
jne
mov
cmp
xor
mov
jle
nop
daa
pusha
test
mov
lock
shlb
ret
ret
sbb
ret
xchg
mov
mov
in
xor
lock
cmc
pop
loopne
cs
adc
rcll
or
sbb
mov
adc
xor
and
mov
rclb
es
rcl
mov
xchg
sbb
push
nop
sbb
or
out
loopne
mov
sti
rorb
jbe
and
and
out
aam
xchg
rcrb
je
or
ret
enter
icebp
dec
push
test
sarb
jnp
sbb
mov
add
nop
pop
sub
rcrl
xor
loope
fiadds
sbb
fs
inc
lock
or
iret
push
adc
sarb
lods
dec
xor
push
add
or
popa
dec
push
scas
lods
in
and
mov
jno
scas
or
cmp
aam
int3
daa
and
addl
pop
mov
nopl
lcall
push
push
inc
std
add
mov
in
push
cmp
adc
jle
iret
pop
or
push
xchg
ljmp
scas
addb
xor
push
or
faddl
lret
push
pop
adc
mov
shl
add
jle
cmp
adc
arpl
push
lret
xor
mov
mov
js
test
cmp
add
sbb
jbe
adc
cmp
addr16
or
and
sbb
jb
dec
xchg
xlat
nop
hlt
jae
xor
sbb
push
sub
add
pushf
rcrb
aam
sahf
or
push
js
pop
pop
and
or
cmp
or
xor
loopne
bound
xchg
pushf
sbb
pushf
cli
jo
xor
xchg
or
adc
out
mov
popf
sbb
repnz
or
insl
cmp
cld
sub
push
lgs
push
and
or
lock
push
icebp
xchg
push
fcoml
push
push
xchg
inc
sbbl
les
inc
and
fdivp
movb
xchg
prefetcht0
push
les
pushfw
inc
lods
aad
bound
cwtl
push
dec
inc
inc
jb
xchg
and
push
in
push
dec
pop
mov
mov
xlat
or
sbb
push
lock
std
or
xor
lods
xor
cs
loopne
pop
or
push
ret
add
xor
jo
lcall
mov
das
test
pop
out
ret
fwait
jo
xor
mov
rcrb
mov
mov
dec
mov
out
push
mov
jno
push
shlb
cwtl
rorb
gs
mov
or
push
nop
cmp
test
xorb
leave
mov
push
mov
js
push
add
push
add
xchg
push
cli
cltd
cmp
mov
out
mov
arpl
or
dec
ret
xor
inc
or
test
and
pop
nop
xor
mov
or
nop
jae
xor
sub
mov
dec
fistps
sbb
mov
mov
test
adc
xchg
inc
addb
imul
pop
push
xor
aam
andl
imul
add
dec
orb
inc
inc
sahf
jecxz
jecxz
or
and
adc
js
push
cmp
lcall
rorb
movsb
inc
rclb
add
xchg
icebp
imul
pop
pop
dec
and
xor
xchg
push
fs
cmp
xlat
sbb
dec
imul
jno
push
ret
cld
mov
add
inc
mov
divl
push
mov
xor
shll
inc
mov
ja
add
mov
outsb
push
mov
enter
bnd
pusha
add
icebp
cmp
icebp
jb
sbb
xchg
inc
inc
shll
sub
dec
les
ficompl
inc
add
cmp
icebp
es
xor
inc
lods
inc
sub
push
xchg
add
mov
enter
rorl
out
pushf
ror
outsb
push
mov
cltd
hlt
inc
or
out
les
xlat
adc
push
or
xor
mov
push
or
out
inc
add
shlb
popa
test
das
add
loopne
mov
aam
sub
push
cmp
add
mov
mov
mov
jmp
and
push
enter
inc
subl
pop
pushfw
lods
in
cli
cmpsl
push
mov
cmp
cmp
cmp
mov
adc
scas
js
lods
push
insl
mov
mov
iret
dec
outsb
ds
sbb
or
daa
dec
add
lock
in
loop
jp
sbb
mov
outsl
sbb
dec
ds
cmc
sbb
cmp
inc
sbb
xor
clc
rcrb
and
pop
push
push
mov
js
push
sbb
xchg
test
pop
sbb
sbb
imul
xorl
icebp
in
mov
sub
sbb
hlt
push
dec
cltd
inc
mov
lock
push
pop
lea
sub
outsl
sbb
pop
add
jb
mov
adc
sahf
push
mov
xchg
adc
lods
xor
bound
inc
movsl
dec
dec
lret
xor
xchg
orb
adc
sbb
out
adc
imul
fs
push
cmp
scas
outsb
daa
add
lcall
call
xchg
sbb
push
or
rclb
mov
mov
mov
jns
rol
scas
int
mov
mov
add
and
adc
pop
dec
leave
jg
mov
notb
enter
dec
cli
or
sbb
cmp
dec
ret
mov
and
sbb
inc
adc
repnz
add
nop
push
test
push
sub
add
xor
adc
sub
mov
or
mov
cwtl
inc
sbb
add
xor
inc
shlb
push
xchg
inc
cmpsb
pop
push
or
out
mov
leave
into
adc
push
and
adc
stos
mov
imul
pop
leave
js
mov
add
xor
sbb
ss
xor
jno
scas
mov
push
mov
jl
mov
cli
push
and
int3
push
aad
stos
lods
add
roll
mov
adc
adc
jo
cli
cmp
jp
movups
mov
scas
mov
test
sbb
and
sarb
jo
jg
repnz
or
cmpb
andb
mov
shrb
mov
fnstsw
mov
shr
dec
add
inc
adc
xchg
push
rorb
mov
stos
xlat
mov
add
lret
scas
pop
push
xchg
adc
mov
add
pop
adc
pop
xchg
andl
inc
insb
cmp
adc
push
add
jb
sbb
bound
or
movsl
fs
cs
push
and
lret
lock
jo
mov
test
adc
and
xchg
and
loop
adc
hlt
mov
insb
or
jne
or
sub
fucom
rorb
push
aas
enter
cmp
ret
dec
sbb
cltd
js
loope
int3
cwtl
insb
pop
cmpl
rcrl
test
enter
adc
mov
jg
lret
rdpmc
repnz
pop
sub
lcall
cmpsl
or
adcl
add
rclb
add
cmp
adc
or
fcomps
and
pop
ret
movb
aas
stos
push
xor
xor
sub
xchg
xchg
sbb
mov
sbb
cmpsl
das
stos
and
lea
add
add
inc
ss
lock
sbb
icebp
mov
xchg
pusha
pop
shrl
cli
cmp
jno
add
popl
outsb
and
pop
adc
shld
mov
xor
mov
das
jl
xor
mov
sbb
add
push
in
and
ret
push
sbb
test
das
loope
adc
in
xchg
cmp
add
int3
rorb
cmp
movsl
mov
or
outsl
pushf
cmp
rcrb
jno
sbb
push
pop
push
add
or
lret
divb
popf
cltd
add
aaa
test
aaa
dec
sbb
into
push
int3
das
add
pushf
sbb
rclb
push
movb
sbb
pop
jb
es
xor
push
leave
push
mov
add
dec
jecxz
mov
dec
xchg
lock
add
xchg
bound
mov
mov
icebp
push
loopne
mov
dec
fdivl
inc
cmpsl
or
mov
xchg
insb
dec
xchg
into
or
mov
mov
mov
xchg
adc
mov
arpl
in
clc
loopne
mov
push
cltd
popa
jmp
dec
sbbl
ret
insl
add
bound
xor
xor
inc
sarb
mov
imul
insl
jle
fbld
movsb
ja
call
xor
sbb
jp
or
pop
pop
push
push
mov
jbe,pt
test
movsl
push
and
movsb
and
arpl
xchg
mov
int3
mov
and
sbb
xchg
pop
or
adc
movsb
adc
shrl
verr
mov
out
cmpsl
addb
adc
adc
subb
sahf
sub
rclb
cmp
imul
xchg
mov
in
and
movsl
mov
andb
lods
lods
xchg
nop
pop
cli
push
xor
dec
dec
rol
js
negb
icebp
js
fs
sbb
mov
mov
cmp
cmp
pop
cmp
and
add
ret
mov
iret
subb
sub
sahf
push
inc
add
into
mov
dec
xor
loopne
in
add
aad
add
popa
or
andb
sub
pop
dec
push
mov
push
add
push
outsl
cwtl
xchg
cmp
mov
inc
call
rol
inc
pop
daa
pop
pop
and
cmp
test
dec
cmp
or
sub
xor
dec
js
leave
out
xor
or
push
and
jl
loope
mov
mov
cmp
push
lods
add
mov
adc
jns
pop
push
jmp
sbb
add
inc
dec
cmp
lahf
mov
ljmpw
xchg
test
jno
enter
hlt
lock
push
xchg
push
sarl
sbb
arpl
enter
xchg
sbb
ficompl
dec
mov
cmc
xchg
andb
orl
punpckhbw
pop
or
lock
ljmp
xor
add
mov
les
mov
adc
aam
sbb
js
pop
dec
adcl
xor
sbb
sub
pop
or
push
inc
xchg
loop
popf
test
adc
inc
adcl
add
sub
loop
stc
fmul
sbb
lcall
add
rorb
mov
mov
dec
xorl
js
fiaddl
cmp
rcl
fldt
roll
sbb
cmp
inc
pop
adc
pop
fistpll
mov
dec
imul
clc
aas
int3
dec
and
sbb
daa
adc
inc
mov
push
push
sbb
add
inc
and
enter
nop
inc
jecxz
orb
mov
xchg
push
ret
and
les
sahf
dec
pushf
mov
xor
jl
lods
push
addb
call
xor
or
jo
dec
jl
pop
ja
xor
dec
sbb
dec
insl
mov
adc
rcl
dec
gs
adc
ljmp
mov
or
popa
add
add
sub
cmp
or
adc
fnstenv
mov
hlt
mov
mov
std
mov
or
mov
xchg
push
icebp
lret
mov
rorl
popa
add
add
adc
inc
test
imul
sahf
enter
inc
inc
lock
loop
js
fwait
xchg
jp
mov
push
pop
mov
lahf
outsb
dec
movb
rcl
cli
pop
sub
fcmovnb
pop
les
lods
dec
xor
jmp
leave
add
push
xchg
pop
hlt
or
rclb
push
push
popa
jns
cmp
popa
lcall
fxch
xchg
xor
loope
sbb
jo
repnz
mov
rcll
push
xchg
or
dec
inc
pop
shll
or
mov
sub
mov
inc
jp
inc
ss
add
add
or
cmp
and
sbb
pop
sbb
aaa
cwtl
push
and
xor
add
mov
pusha
add
mov
push
stc
lret
cmp
imul
mov
mov
xor
dec
or
aas
arpl
xor
inc
and
xchg
sbb
jmp
dec
imul
icebp
pop
xchg
cli
or
pop
imul
jo
add
scas
je
dec
push
dec
push
lock
and
mov
test
imul
adc
fldl
inc
pop
inc
pop
inc
push
fisttps
jecxz
push
mov
push
push
shl
or
movsb
or
adc
pusha
loop
mov
das
ret
or
scas
dec
pop
je
enter
icebp
add
xchg
pop
int
nop
sub
nop
inc
das
or
xchg
push
push
push
pop
push
mov
sbb
add
xchg
xor
mov
push
mov
jp
sub
ficoml
inc
repz
xchg
lods
imul
and
and
aam
adc
out
and
sbb
mov
add
loopne
inc
iret
pop
sahf
pop
aam
mov
xor
pop
sub
lea
je
and
gs
pop
xlat
cmp
or
jge
xor
call
dec
enter
mov
dec
es
into
and
adc
sbb
lods
les
addb
call
mov
mov
js
mov
push
mov
or
pushf
cmp
mov
push
push
xor
add
dec
scas
add
add
add
inc
fld
cmp
mov
xchg
mov
add
sbb
dec
pop
push
xchg
or
sarb
add
dec
sti
into
shlb
lods
inc
loopne
aad
sbb
jmp
loop
sub
adc
repnz
sbb
pusha
mov
mov
sub
jmp
cmp
loope
pop
or
js
bound
pop
inc
stos
and
adc
cmp
dec
cmp
add
cli
mov
lods
push
popa
lods
in
jl
mov
or
sbb
js
dec
divb
test
je
xchg
push
ljmp
cmp
adc
xchg
icebp
jno
jnp
inc
daa
test
xchg
push
sti
sub
mov
mov
mov
pop
or
sub
mov
lea
xabort
or
add
xor
add
mov
jae
add
push
sub
ss
and
dec
mov
dec
mov
adc
adc
sahf
adc
push
xchg
inc
mov
adc
dec
push
xor
pop
rol
jmp
inc
jmp
outsl
fsubrl
xchg
add
mov
adcb
xor
push
dec
js
xchg
inc
cwtl
ret
mov
cmc
ret
into
inc
mov
dec
pop
or
mov
pop
xchg
sbb
in
mov
xchg
shr
adc
adc
xor
fdiv
es
add
arpl
shll
fs
ret
add
hlt
inc
shrb
lods
xchg
lock
and
pusha
xchg
ds
imul
inc
enter
dec
inc
mov
or
xor
add
leave
insb
sub
sub
call
add
stos
sub
or
jecxz
adcl
xor
pop
aam
insb
lret
ret
xorl
jo
inc
adc
data16
mov
and
or
aam
inc
stos
sbb
cmp
ljmp
arpl
shlb
lock
dec
push
lahf
xchg
adc
push
xor
pop
pop
sub
mov
ret
test
sbbb
fs
sbbl
sbb
adc
push
dec
out
rol
dec
fldenv
sbb
aaa
es
mov
cmp
mov
push
add
fadds
lds
xchg
xchg
and
mov
xorl
test
movsl
mov
jnp
inc
push
cmp
ret
lock
je
ja
ljmp
adc
adc
xchg
dec
sub
jne
adc
xor
aam
lock
jns
pop
and
jb
mov
and
add
push
out
lea
add
pushf
inc
jmp
and
mov
add
aam
popa
sbb
das
mov
in
jge
fcomip
add
mov
jo
lcall
ret
ret
mov
pop
adc
pop
add
mov
jae
mov
adc
popf
sub
popa
jle
adc
adc
enter
and
daa
inc
pop
dec
mov
xchg
dec
push
in
sahf
mov
mov
add
test
mov
aaa
in
cmp
inc
testb
inc
and
hlt
or
lcall
movsb
cli
mov
or
xchg
out
push
dec
dec
add
push
jg
pop
dec
rclb
xchg
jge
add
jno
xor
enter
ss
and
mov
xor
arpl
lret
fnstcw
pop
rcl
cmp
mov
mov
loop
push
cmp
jne
cmp
inc
pop
mov
sbb
xlat
push
sahf
fs
aad
inc
push
sahf
test
mov
mov
mov
xor
cmc
cmp
push
sbb
sbb
scas
pop
push
int3
pop
dec
stos
mov
xchg
imul
cmp
push
xor
repnz
or
lock
sub
cmp
stos
dec
arpl
shlb
or
and
adc
or
loopne
mov
push
mov
fldl
enter
add
add
lret
sub
sub
or
lods
or
push
stos
fsubrs
push
addb
sub
leave
ljmp
cwtl
pop
daa
jne
out
cmp
cltd
or
rcr
adc
sub
adc
ret
mov
or
push
icebp
xchg
sbb
xor
push
insb
or
inc
push
lret
and
push
shlb
or
mull
mov
push
add
cmpl
aad
and
jo
mov
add
outsl
push
and
sbb
test
aad
notb
pop
cs
addb
gs
or
inc
addr16
xor
popa
cmp
xor
xor
adc
jo
xchg
jo
jmp
mov
mov
add
pop
adc
pop
pop
xchg
inc
test
or
cmp
test
xor
imul
and
stc
mov
xchg
movsl
pushf
faddp
popf
add
aas
mov
loope
mov
xchg
in
nop
mov
and
cld
or
lock
dec
push
dec
adc
or
or
add
fstl
outsb
add
push
test
test
cmp
add
popa
push
subb
pop
add
cmc
xchg
movsb
inc
mov
xchg
scas
mov
xchg
rorb
loopne
adc
clc
addr16
or
jge
and
scas
cli
std
movsb
sub
xchg
setne
lret
add
cmc
addl
mov
int3
or
arpl
inc
mov
js
dec
mov
xchg
mov
aaa
test
lods
int3
test
or
sarl
wbinvd
mov
xor
push
cs
xor
xor
repnz
or
insl
imul
inc
xchg
shlb
testb
inc
outsb
inc
push
push
mov
push
lock
inc
sbb
and
ret
jo
hlt
and
clc
cwtl
dec
cmp
sub
outsb
sbb
cmp
repnz
call
jmp
icebp
or
xchg
or
rcl
xchg
test
pushf
mov
rol
add
test
rcrb
push
push
cmpsb
push
jbe
push
add
or
movsb
and
mull
push
inc
jmp
out
or
add
test
imul
lock
inc
xor
sbb
xchg
cmp
loop
insb
and
or
dec
insl
aam
test
and
jmp
pop
dec
test
aam
inc
loope
js
jbe
ja
mov
cmpsb
test
or
movb
or
sub
pop
rcl
lods
ret
inc
adcl
nop
adc
dec
insb
or
movsl
mov
leave
inc
mov
push
btc
and
ret
sbb
xor
sbb
mov
or
lcall
pop
test
popa
and
inc
int3
sbb
hlt
mov
push
scas
lods
movl
add
push
sbb
gs
scas
sub
sbb
mov
pop
and
or
int
mov
js
lock
cli
sahf
push
rcll
mov
jmp
lods
mov
js
mov
cmpsl
fld
roll
dec
loopne
or
loopne
cmc
or
xchg
imul
into
ss
push
out
sub
das
addr16
push
in
rolb
icebp
inc
pushf
add
je
cmc
xor
imul
xor
push
rcrb
clc
imul
and
xchg
pusha
rclb
dec
cmpsb
adc
pop
pop
jb
jp
xorb
xor
fstps
stos
and
rcrl
or
popa
rorb
cmp
sbb
sbb
inc
ret
js
adcl
inc
icebp
ret
fldl
mov
cmp
mov
in
not
push
push
rorb
sbb
lcall
fcmovb
lods
mov
xor
pop
push
popf
test
lock
fcoms
enter
adc
and
inc
stos
jge
lods
and
cmp
mov
cmp
sub
xchg
mov
sbb
mov
mov
shll
in
or
jae
inc
push
push
out
add
nop
or
pop
rol
addl
adc
icebp
and
sahf
mov
and
test
push
scas
adc
jmp
adc
add
call
xchg
sbb
ja
in
inc
insb
icebp
mov
dec
in
jge
popa
inc
mov
je
or
add
pop
mov
add
daa
pop
mov
imul
cmp
adc
cmpsb
cld
xor
dec
es
ret
add
adc
xchg
adc
xchg
test
mov
cmpsl
les
xchg
mov
mov
fdivrs
inc
dec
adc
xchg
add
jmp
xchg
adc
xor
ds
hlt
ret
imul
ljmp
pand
cmp
imul
add
jecxz
dec
fst
add
adc
mov
fwait
sub
dec
lods
outsl
inc
push
mov
sbb
pop
add
sbb
adc
cmp
call
ret
push
push
shrb
je
jne
fcomps
roll
and
sbb
adc
rcrb
idivl
xor
or
dec
incl
jge
pusha
lods
mov
dec
mov
cmp
inc
pop
hlt
shlb
lea
rol
ja
pop
inc
pop
lods
push
jle
loop
loope
repnz
sbb
test
dec
dec
dec
dec
int3
sbb
xor
cmp
negb
mov
mov
call
int3
adc
int3
adc
push
adcb
pop
outsb
mov
call
sbb
movsb
mov
loopne
push
rclb
jl
mov
pushf
movsb
test
dec
pusha
jmp
into
adc
lock
add
outsl
or
les
xlat
sbb
xchg
into
add
hlt
add
mov
aam
and
mov
and
adc
cmc
and
rolb
add
adc
sarl
scas
imul
mov
pop
cmp
stos
pop
add
aad
cmp
leave
xchg
pop
movsl
add
movsl
mov
sbb
xlat
add
cmp
ljmp
add
and
cmpsl
loopne
mov
xor
mov
mov
mov
adc
mov
inc
sbb
cmpsl
into
jbe
clc
inc
xchg
adc
push
int
push
sbb
out
push
sbb
shl
jge
xor
push
in
imul
enter
pop
lret
dec
add
pop
xchg
xor
cmp
add
js
hlt
push
ret
inc
and
into
sub
lods
ljmp
cwtl
push
clc
popa
loope
and
in
mov
inc
pop
repnz
call
inc
adc
add
mov
or
stc
push
push
and
mov
jmp
enter
xor
lock
inc
add
mov
adc
or
jg
and
hlt
sbb
xchg
loopne
mov
xor
adc
out
roll
push
fisubrs
sub
nop
lock
outsb
adc
or
jno
sub
cmpl
push
leave
or
add
inc
sbb
addb
pop
enter
mov
fstl
aas
jl
lods
dec
adc
mov
or
dec
pop
or
add
adc
push
sub
mov
lds
push
xor
dec
xchg
cltd
mov
lods
jp
push
cmp
and
mov
dec
faddl
cltd
xor
pop
into
push
add
inc
gs
lods
addl
cwtl
jp
jne
pop
xchg
rcl
sub
or
jnp
adc
loope
in
test
into
mov
pusha
in
adc
clc
mov
movsl
cmc
sbb
loopne
les
jmp
and
xorl
cmpsl
loopne
les
ret
jne
test
and
pop
pop
or
ja
cltd
sbb
add
loope
bound
in
ljmp
cmp
mov
rolb
add
and
lock
call
sbb
and
xchg
sub
adc
mov
int3
inc
arpl
mov
lret
ror
test
xchg
jle
push
test
or
leave
jmp
pop
pop
cmp
pop
sub
sub
cmp
adc
js
jle
dec
js
add
fmulp
xchg
or
add
shll
and
add
mov
push
xchg
xchg
clc
leave
add
push
mov
push
mov
dec
inc
fwait
lcall
inc
sbb
das
xor
cmp
rol
pop
jg
mov
pop
aas
pop
jb
and
or
xor
pop
xlat
jecxz
rolb
enter
std
ret
jmp
sub
ds
mov
js
push
loope
mov
mov
mov
sub
push
add
jge
sbb
adc
push
xlat
fld
pop
and
rol
adc
fisubs
xchg
sbb
dec
push
lock
push
ficoms
loope
sub
and
js
lods
jno
loop
sbb
imul
les
test
or
fdivr
subl
adc
notb
insl
pop
sbb
cmpsb
mov
mov
rcrb
daa
mov
xor
push
add
pushf
sub
mov
push
popa
dec
aam
cli
mov
rclb
or
lret
cmp
lret
cli
out
adc
aad
jne
loopne
pop
xchg
lock
xchg
mov
shl
ret
cmp
sub
call
or
jecxz
mov
mov
loopne
adc
xor
fcmovnb
lret
add
enter
scas
rcrb
cmp
adc
push
gs
xchg
dec
iret
js
cmc
and
addr16
addb
stos
les
shrb
sbb
rorb
roll
daa
cmp
dec
jl
cmp
push
add
bound
add
and
mov
add
push
xor
fiadds
mov
add
sub
jns
jp
jp
fnstenv
test
push
lock
adc
imul
cmp
imulb
mov
sbb
pop
pop
pusha
or
mov
push
nop
sbb
sub
fwait
cmp
lds
pop
lret
add
add
sbb
add
and
lds
or
push
push
or
or
leave
imul
adc
nop
jle
xor
pop
lds
xchg
dec
cmp
mov
orb
js
loope
pushf
mov
add
pushf
fld1
sub
sbb
cmpl
call
push
add
jle
cmpsl
sbb
insb
syscall
push
mov
xchg
adc
mov
je
push
push
xchg
int3
sub
daa
or
add
ret
dec
sbb
xor
cmpb
xor
or
push
verw
jo
fs
xor
pop
leave
xchg
inc
ljmp
sbb
sub
sbb
and
and
outsb
xchg
jmp
or
xchg
lock
leave
add
push
test
rolb
inc
lods
push
addb
aam
pop
and
lock
aaa
cmpsb
mov
popa
cs
jp
scas
clc
push
cmp
xor
jl
faddl
mov
inc
pop
sub
sbbl
sub
or
pop
in
cmp
push
mov
aad
mov
cmp
cwtl
lret
mov
enter
xchg
and
arpl
or
in
xchg
ds
mov
mov
daa
add
dec
add
mov
jnp
loop
jne
stos
sarb
pop
dec
dec
bound
inc
push
cmp
std
mov
inc
aas
and
mov
pop
xchg
inc
cmp
test
rclb
outsl
push
es
ficomps
orl
test
mov
inc
arpl
out
sbb
mov
mov
pop
inc
add
ret
mov
and
xor
xor
or
add
mov
and
push
setbe
pop
pushf
adc
leave
sbb
mov
incb
cltd
js
or
mov
call
test
pop
push
repz
mov
push
sbb
nop
inc
pop
jnp
int3
mov
adc
dec
adc
dec
rolb
mov
stos
add
sub
popa
lea
nop
push
adc
sub
mov
ret
jne
adc
adc
popl
or
out
or
daa
add
push
push
test
add
mov
movsl
or
aaa
fisubs
ret
insb
rcll
push
sbb
in
stc
jne
fs
out
or
mov
jae
xchg
sbb
xor
xorb
roll
je
sbb
ror
add
jmp
pusha
push
icebp
or
sahf
add
sbb
fstp
inc
jl
jo
loopne
or
and
and
and
andb
in
arpl
hlt
push
add
push
pushf
sbb
je
movsb
das
xor
dec
add
fstps
mov
xchg
sahf
pushf
adc
test
pop
dec
fldl
icebp
mov
xor
and
cmp
adc
mov
rcl
divl
loopne
push
push
js
mov
pusha
and
repz
add
leave
js
or
dec
je
sub
push
test
cli
mov
sub
adcl
and
and
xchg
mov
adc
mov
cld
add
and
jo
or
mov
mov
sub
jmp
enter
fwait
cmp
add
lods
sbb
sub
mov
fst
aas
add
movsl
lock
js
sbb
adc
test
stos
call
aaa
mov
xchg
jle
inc
ret
mov
rcl
inc
push
mov
pop
mov
cs
jmp
cwtl
jecxz
test
jbe
shrb
int
sbb
aam
pop
cmpsb
sbb
pop
adc
sbb
jo
xor
dec
rorb
dec
mov
xchg
orb
adc
jb
das
mov
sub
pusha
aam
lea
enter
or
cmp
inc
cmp
or
movsl
sub
pop
pop
dec
jmp
out
pushf
push
mov
daa
mov
aam
fwait
push
cmp
cli
adc
xor
test
push
dec
jmp
or
push
jg
adc
popf
nop
push
xchg
cmp
sbb
lea
push
lcall
xchg
clc
fcoms
mov
and
and
mov
and
adc
push
or
rorb
adc
ja
addl
ss
adc
arpl
loopne
pop
and
nop
xor
dec
pop
ja
add
add
pop
and
add
insb
cmp
imul
pop
pushf
cmp
insb
mov
and
mov
mov
dec
jb
add
mov
rcl
xor
add
and
pop
add
divb
dec
in
dec
ja
repnz
lret
jmp
xor
mov
adc
fsub
das
imul
dec
or
pusha
sbb
test
cmp
push
xchg
push
adc
dec
loope
mov
jns
push
lock
lods
das
push
inc
sti
pop
clc
add
lret
andb
lcall
mov
test
cmpsl
xor
scas
or
pop
adc
mov
or
mov
add
mov
je
adc
test
or
mov
add
lret
jge
sbb
push
loope
push
rol
fnop
dec
pop
pop
ficompl
mov
icebp
lock
jo
or
popa
sub
insl
js
inc
sbb
xor
mov
mov
add
cmp
andb
and
ret
mov
pop
push
sub
cs
jge
jno
xor
or
in
inc
push
arpl
stc
clc
popf
sbb
pop
dec
mov
daa
push
or
pop
dec
pop
mov
xor
test
sub
pushw
into
mov
lcall
mov
xchg
frstor
jne
sarb
sbb
push
mov
js
inc
mov
mov
push
xchg
jb
xorl
xchg
loope
lret
pop
mov
fstps
xchg
inc
jae
xlat
sbb
adc
dec
bound
insb
loopne
add
adc
ss
shl
add
xor
jo
lcall
xorb
mov
fisubl
ljmp
add
arpl
push
stos
sahf
mov
cmp
mov
add
mov
add
shrl
and
std
ljmp
in
sub
cltd
loopne
mov
call
test
push
testl
ret
push
fxtract
push
jns
andb
stos
or
sbb
adc
out
adc
adc
icebp
push
xor
pop
mov
add
mov
cmp
xchg
ja
pop
mov
adc
push
outsb
je
mov
or
hlt
push
xor
dec
dec
dec
adc
es
push
push
rolb
and
leave
repnz
or
xchg
pop
jmp
or
add
add
push
and
enter
xlat
adc
mov
xor
arpl
pop
push
push
push
les
mov
mov
dec
dec
sbb
mov
ljmp
mov
or
mov
push
test
shl
xchg
mov
rclb
sub
push
incb
add
push
push
pop
shll
jle
ljmp
loopne
or
sub
leave
aam
nop
add
mov
movsl
add
scas
pop
adc
test
xor
push
jb
cmpsb
sub
sti
repnz
add
mov
jecxz
movb
loopne
cltd
xchg
add
popa
je
mov
adc
add
cmp
out
xchg
jns
lock
xchg
or
adc
or
adc
push
sbb
cmp
xchg
imul
sub
adc
out
mov
movsl
xchg
pop
push
mov
test
and
lret
jb
sub
xchg
ljmp
jl
idivb
jl
rol
mov
insl
push
fmull
mov
add
rcrb
sub
inc
sbbl
loopne
xchg
adc
je
sahf
and
and
add
outsb
in
push
clc
inc
shrl
lea
add
dec
ffreep
push
push
sbb
pop
push
mov
inc
cld
sbb
and
adc
arpl
clc
add
and
popa
leave
jmp
test
add
or
and
fdivrl
mov
sbb
xchg
dec
clc
or
ret
and
movsb
pop
xor
or
pushf
or
dec
pushf
mov
sbb
mov
call
gs
test
bound
and
adc
mov
in
add
mov
xor
mov
ret
add
pop
or
shl
clc
popa
ret
mov
cmp
add
js
adc
mov
dec
les
scas
push
and
mov
into
push
push
push
lret
clc
popa
sub
pushf
or
xchg
add
inc
movsb
lock
es
mov
sti
decl
js
mov
or
adcb
nop
sbb
mov
gs
out
adc
or
or
aas
nop
cmp
jge
enter
or
pop
kmovw
addl
lock
leave
xor
in
xchg
xor
mov
push
outsl
lret
mov
push
push
sub
popa
je
mov
sahf
mov
adc
adc
jecxz
rclb
adc
sub
rcrb
js
cmp
leave
add
inc
and
adc
rclb
sub
and
adc
xor
add
mov
xor
loope
fsubl
hlt
xchg
aad
sbb
mov
push
pusha
lds
cli
add
or
pusha
mov
sub
jns
rolb
mov
xor
xchg
bound
add
jno
mov
push
push
movsl
pop
pusha
sbb
mov
sub
push
movsb
stos
xor
adcb
pop
sbb
notl
adc
pop
ror
dec
and
xor
pop
mov
insb
lds
push
jae
add
gs
add
sbb
push
adc
js
repnz
cwtl
movb
sub
add
push
loopne
in
adc
orb
mov
or
lret
test
sub
lcall
xchg
pusha
sbb
mov
xchg
cmpsb
xor
or
add
addb
inc
popf
es
adc
mov
jecxz
cmp
sub
push
je
loope
scas
iret
mov
rcr
ret
bound
push
enter
or
or
lea
shlb
xchg
pusha
ss
cmpsb
cwtl
push
mov
mov
je
inc
jge
hlt
test
and
and
pop
enter
incl
xchg
andl
fcom
pop
mov
mov
xchg
push
je
jnp
cmp
push
adc
in
mov
arpl
add
test
lret
adc
pop
add
xor
ljmp
imul
pop
insb
xchg
test
imul
mov
ret
inc
movsb
xorb
or
sub
lret
cmp
stos
popf
push
xor
mov
mov
test
sbb
fcoms
add
lret
loop
lahf
pop
xor
add
jp
ror
loop
sbb
movsl
mov
mov
test
bound
test
xchg
push
loop
xchg
cli
jmp
mov
js
das
nop
in
imul
and
imul
ds
or
adc
sbb
addl
iret
xor
movsb
test
and
jge
fs
inc
add
fs
repnz
jne
loope
scas
test
jne
jo
push
je
push
orb
fiadds
rcl
sbb
sbb
mov
sbb
mov
mov
and
xchg
mov
pop
or
cmp
sbb
xchg
lds
ret
push
sub
dec
push
inc
stc
test
push
adc
jno
push
mov
icebp
das
dec
xchg
pop
xlat
mov
fidivrs
cmpsl
test
xor
add
jecxz
sbbb
mov
aam
pop
and
nop
inc
stos
adc
pop
add
jle
or
and
xchg
cs
cs
daa
test
lret
mov
test
mov
outsb
repz
pop
lahf
and
sub
and
sbb
aas
push
divb
adc
out
jo
and
jp
sbb
out
repnz
sbb
leave
jp
cmp
rolb
and
rcrb
inc
pop
sbb
fnstenv
in
leave
test
mov
icebp
insl
adcb
xchg
mov
orl
sarl
xchg
push
mov
and
lods
adc
pop
imul
ds
pop
push
pop
ljmp
dec
ret
fimuls
stos
xchg
cmpsb
arpl
ret
outsb
subb
scas
push
call
xor
adc
add
movsb
adc
and
xchg
mov
or
jle
mov
lea
nop
push
sbb
shl
cli
testb
or
jbe
ret
je
add
ds
xor
insb
cmp
sbb
mov
outsl
adc
cmp
ret
les
mov
dec
or
push
rorb
mov
shrb
bound
and
or
or
in
xchg
jmp
lods
mov
ja
data16
and
ret
lods
inc
push
mov
sbb
in
mov
lods
or
test
cmpsl
push
aam
or
pop
or
or
dec
out
mov
sbb
nop
fwait
pop
or
adc
loope
jo
stos
rcrb
add
pop
imul
pop
pop
ljmp
xor
pop
aas
fidivs
je
add
loopne
fcoml
xchg
cmpsb
jmp
push
sbb
add
shrb
out
inc
push
ljmp
cmp
sub
cwtl
adcb
add
ficoms
jmp
movsb
push
mov
adc
jne
xchg
dec
insb
shrl
pop
test
mov
movsl
xchg
in
popa
int
ljmp
and
js
loope
add
andb
aas
mov
sahf
js
add
insb
xchg
add
clc
js
jmp
lcall
sbb
subb
or
or
jmp
and
and
push
add
les
and
add
cmpsl
push
xchg
push
xchg
cmp
sub
leave
pop
loopne
dec
add
fsubl
or
mov
mov
fyl2x
xor
or
jecxz
and
jmp
ja
movsb
aas
or
adc
movsl
or
dec
xchg
cmp
adc
add
cmc
nop
mov
sub
adc
xor
mov
test
push
int3
cmpsl
lods
adc
pop
or
imul
pusha
shlb
ret
ret
mov
pop
mov
jle
xchg
and
and
cltd
adc
add
aam
jns
xlat
sbb
add
sbb
inc
dec
in
or
push
mov
and
add
inc
xor
js
add
ss
sti
and
subl
cltd
xchg
sbb
out
loopne
aam
idivb
add
and
xor
push
sbb
fstp
fldt
in
sub
jae
xchg
pop
repz
or
add
inc
outsl
sub
repz
pop
jge
inc
add
mov
push
test
ret
sbb
inc
lret
lret
lods
dec
cmp
loopne
pop
push
stos
into
lods
pop
sahf
inc
jns
movsb
icebp
daa
mov
mov
sbb
mov
sub
pop
cmpsl
adc
dec
adc
jp
cs
xor
shlb
push
cmp
daa
sbb
xchg
rol
mov
cmp
leave
cmp
sbb
ja
sbb
or
frstor
popf
or
bound
iret
nop
iret
pop
out
daa
adc
pop
xor
xor
test
sbb
or
loopne
push
adc
test
push
roll
and
mov
ljmp
pop
xchg
inc
pop
stos
inc
add
outsl
imul
xor
pop
and
push
jecxz
mov
cmp
shll
mov
adc
rclb
ljmp
push
inc
testl
push
clc
jo
mov
cmp
jnp
popf
repnz
cli
xor
aam
fdivp
pusha
add
call
push
test
mov
mov
adc
push
out
sar
rolb
aaa
test
pop
lock
push
sub
mov
mov
lods
neg
lock
pop
pop
or
pusha
and
lret
jmp
and
stc
push
movsl
movsl
push
cmp
fdivrl
ret
cmp
ffreep
stos
push
push
and
sbb
inc
jmp
rol
cli
sub
test
inc
lock
sbb
inc
sub
enter
adc
fistpl
cmpsb
insb
clc
sbb
mov
xor
icebp
xor
mov
enter
jg
add
and
adc
imul
leave
inc
cmpps
mov
lret
enter
inc
stos
imul
mov
arpl
dec
inc
or
add
push
jb
dec
sub
inc
ljmp
mov
adc
jae
ret
xor
sbb
imul
and
inc
or
sub
dec
sahf
push
jne
pushf
lock
push
scas
and
insb
dec
inc
add
jne
cmp
loop
push
addl
lds
rorb
loopne
dec
pop
inc
sbb
inc
movsl
xchg
or
xchg
dec
sub
inc
shlb
add
add
loopne
test
inc
and
cmc
xchg
sub
or
mov
or
add
cmpl
pushf
cltd
mov
inc
rorl
add
fmulp
into
mov
push
pop
lcall
clc
xchg
jmp
outsb
arpl
sub
xor
lret
mov
aaa
jmp
add
xor
dec
xor
pop
clc
movsb
mov
sbb
rolb
test
test
pop
dec
frstor
and
test
test
jne
lret
sahf
pop
insb
push
clc
fcompl
dec
push
xor
cmp
fxch
test
jp
adcl
jbe
xor
in
jecxz
adc
lock
sub
rclb
xchg
jl
je
data16
mov
icebp
pushf
pop
and
ficoml
sub
cli
adc
daa
aam
mov
or
jmp
out
bound
adcb
imul
inc
sbb
ret
mov
jae
push
push
test
jbe
into
addl
shll
or
or
mov
sub
xchg
fiaddl
mov
sbb
jb
inc
sbb
or
lock
rcrb
push
loope
hlt
das
adc
in
sbb
adc
lods
xlat
xor
out
lock
cmp
pop
mov
adcl
push
push
pusha
jp
cmp
jb
jmp
rol
push
icebp
mov
je
notb
inc
popa
lods
cmp
out
mov
mov
jecxz
pop
xor
es
dec
in
mov
arpl
addl
mov
push
adc
sti
subb
push
ret
mov
test
andb
push
sar
mov
dec
and
pop
adc
add
push
gs
nop
cmc
cmp
fidivs
sub
xor
push
pop
loopne
add
and
hlt
inc
sti
insl
dec
lock
push
pop
push
and
jmp
and
fmuls
adc
imul
test
jl
int3
lidtl
inc
into
mov
pop
fdiv
adc
xor
or
loope
mov
adc
adc
and
cmpb
sub
sub
test
inc
push
adc
cmpsb
adc
inc
xchg
je
mov
icebp
lods
sbbb
enter
dec
loopne
jecxz
add
push
data16
daa
sbb
ret
cltd
mov
or
idivl
dec
lea
stc
arpl
cs
push
push
cmp
mov
sub
xor
in
add
insl
sbb
xor
sub
clc
add
icebp
inc
push
xor
push
fists
rolb
xchg
xchg
ja
inc
cs
pusha
sub
xchg
outsb
iret
int3
cmp
and
and
imul
popa
sub
xor
mov
imul
lds
adc
movsb
insl
or
out
cld
add
sbb
lret
push
jne
ljmp
cmpsb
sahf
and
clc
aaa
or
jo
pop
das
imul
push
pop
cli
ret
or
cs
testb
mov
imul
movsb
fcoml
imulb
add
test
and
sub
cmp
fiadds
jae
ror
dec
xchg
and
ljmp
rolb
orb
push
mov
orb
fcomps
cmc
push
jp
push
or
jns
push
pop
adc
movb
push
and
mov
inc
cmpsl
add
mov
stos
add
sub
dec
sbb
cltd
xchg
pusha
rcr
add
clc
dec
sub
dec
mov
cmp
xlat
or
xor
stos
cmpsb
add
adc
sarb
xchg
adc
mov
xchg
xor
cmc
test
idivb
mov
rclb
test
inc
or
push
xchg
ret
pop
daa
test
push
jp
mov
xchg
jmp
mov
inc
push
addr16
and
mov
sbb
arpl
mov
push
ret
mov
xor
hlt
inc
lret
pop
jne
sbb
sbbb
sbb
and
add
out
dec
adcl
dec
mov
lea
adc
mov
lods
pop
pop
or
mov
pushf
add
push
dec
sub
fcomps
sahf
adc
sbb
fdivrl
mov
insb
cmp
sbb
jmp
mov
mov
sti
pop
int
sub
pop
andb
sbb
loopne
inc
js
rorb
in
push
xchg
dec
dec
pop
mov
lcall
in
sub
lods
mov
mov
add
xchg
pop
sub
mov
xor
mov
mov
jo
pop
popf
in
push
shr
pushf
fisubl
ficoml
cltd
sub
add
sbb
push
je
xchg
push
gs
adc
add
cwtl
lea
xchg
sub
cmc
loopne
jnp
bound
aam
js
mov
push
or
jne
leave
repnz
push
mov
fyl2x
adc
mov
adc
sbb
cmp
dec
fs
mov
adc
pop
sbb
scas
lahf
lds
into
sbb
leave
or
adc
xchg
movsb
cmp
push
pop
inc
and
lret
lret
dec
add
and
xor
and
xchg
jmp
mov
or
sbb
into
lods
inc
imul
inc
repnz
inc
sub
push
data16
add
scas
inc
test
fmuls
add
dec
pop
lcall
dec
or
cli
mov
icebp
jb
cmp
and
mov
paddsb
test
rcll
and
pop
data16
iret
adc
pop
xor
leave
jecxz
outsl
push
lods
movsl
mov
adc
xor
inc
xor
add
adc
ret
int
adc
int
sub
mov
inc
jecxz
sbb
mov
and
push
add
mov
jl
shlb
inc
xor
cmp
dec
push
and
or
sub
sbbb
mov
inc
jno
or
data16
jb
iret
mov
xorb
shll
pusha
add
mov
cs
insl
lea
fiadds
jb
loope
or
sbb
imul
call
icebp
movsb
or
addl
mov
push
popf
push
xor
pop
jmp
mov
or
push
or
xchg
or
daa
pop
adc
xchg
cmp
ret
jp
lods
xor
pusha
nop
andb
pop
xor
mov
loope
mov
adc
xchg
adc
mov
mov
sti
movsl
xchg
sub
pushf
pop
movsl
adc
xor
inc
test
inc
push
and
daa
movsb
sbb
or
outsl
pop
push
mov
adc
loope
add
clc
mov
sub
adc
leave
push
xor
xlat
je
xchg
dec
das
xchg
js
push
jne
or
cmp
add
dec
clc
xchg
arpl
call
repz
mov
xor
incb
sbb
jo
mov
push
add
test
add
adc
pop
sub
ror
xchg
lods
add
jo
push
push
add
adc
pop
xorl
push
push
sub
lret
xchg
or
inc
mov
xor
or
xor
mov
cmp
enter
fadds
dec
xchg
aad
cmp
sbb
dec
add
mov
negb
repz
arpl
mov
mov
inc
lods
pop
sbb
das
pop
inc
inc
out
fcmovnu
sbb
loopne
sbb
movups
lahf
test
xchg
or
xor
and
xlat
sbb
sub
popa
jecxz
cmc
add
add
or
arpl
jp
dec
mov
jmp
dec
sbb
rolb
inc
mov
es
push
call
xchg
shll
ljmp
ljmp
push
inc
das
ljmp
inc
and
aas
add
or
sub
or
adc
cmp
test
mov
sub
sbb
jge
pop
shlb
add
cld
add
je
mov
mov
xchg
mov
jp
or
sub
nop
mov
arpl
daa
ret
add
adc
cmpb
mov
sbb
inc
and
cli
clc
enter
popa
add
or
mov
aad
sub
mov
push
sbb
imul
js
movsl
xor
and
cmpsl
mov
sbb
clc
ret
adc
cmp
in
add
aad
add
pop
push
xchg
jo
adc
cmp
sub
push
les
cmpsl
shlb
mov
dec
mov
daa
xor
leave
icebp
or
cmpsl
aaa
movsl
psubsb
rorb
sbb
loope
adc
inc
or
push
jno
mov
cmpsb
push
adc
xchg
fdivs
icebp
push
jb
mov
mov
add
or
inc
add
das
xor
and
pop
ljmp
insl
insb
mull
jb
sbb
dec
or
mov
lret
les
xor
push
imul
icebp
lahf
mov
add
cmp
push
loopne
shrb
adc
incl
add
cltd
sbb
dec
xchg
xor
mov
adcl
repz
pop
jns,pt
xchg
or
jns
sbb
push
dec
xchg
add
int3
nop
insl
push
inc
popa
test
js
mov
cmc
add
inc
cmpsl
xchg
inc
lahf
aam
mov
or
pop
test
orb
jo
push
and
xchg
jnp
pop
or
shlb
movsl
lret
xchg
inc
stos
mov
pushf
jmp
dec
push
jbe
dec
xchg
push
scas
and
and
iret
adc
mov
je
fstl
shrb
loopne
pop
and
mov
pusha
sub
dec
cmp
loop
sahf
push
scas
or
fwait
pop
xchg
sub
mov
mov
inc
hlt
adc
ret
into
rclb
push
sbb
imul
into
ljmp
push
sbb
into
push
add
inc
rcl
add
push
cmp
clc
clc
xor
iret
lea
clc
mov
inc
or
pop
rolb
xor
push
shlb
es
mov
xor
or
sarl
movsl
mov
xchg
ss
aam
rclb
subl
jne
xchg
jecxz
and
ds
or
mov
les
pop
adc
and
loope
xchg
mov
or
cvttps2pi
cmp
or
lret
cltd
jb
cltd
sbbb
sarb
sbb
and
sahf
xchg
pop
pop
jg
and
cmp
and
pop
cmc
aam
cwtl
dec
sbb
or
sbb
dec
adc
xchg
shl
fs
xchg
test
cmp
sbbb
mov
xor
outsl
out
sbb
mov
sbb
mov
js
sbb
rolb
adc
add
mov
loope
es
sbb
dec
mov
fs
out
xchg
and
push
adc
jbe
xchg
mov
push
and
insb
mull
test
sub
xchg
cmp
lret
jmp
and
cli
adc
or
into
push
pop
rclb
xchg
or
loopne
add
and
data16
add
push
outsl
sbb
lods
xchg
dec
push
out
leave
lret
xor
dec
pusha
jne
les
pop
and
loope
and
scas
mov
add
or
arpl
adc
rcrb
das
lods
outsb
loope
mov
and
push
ljmp
cli
add
mov
adcl
add
mov
shlb
pop
loopne
adcl
adc
and
and
repnz
mov
inc
xchg
add
bswap
sbb
rorb
jp
or
mov
jne
bound
adc
mov
jne
movsb
xor
mov
and
clc
rcrb
push
xchg
movsl
push
loop,pn
into
jne
fs
xor
xor
dec
push
and
add
or
mov
and
data16
xchg
movsb
adc
rorl
push
jle
mov
xchg
movsb
sub
mov
das
nop
mov
xchg
dec
add
push
je
lock
jnp
nop
xchg
add
jb
rolb
push
mov
mov
pop
add
jmp
mov
push
mov
dec
and
push
pushf
loop
xchg
mov
andl
dec
mov
icebp
bound
leave
dec
sub
cmp
pop
test
sub
dec
roll
cmp
sub
inc
push
xchg
xchg
sarb
push
bound
xor
push
orb
or
les
test
cmp
jne
loop
mov
ret
xor
mov
leave
ds
mov
stos
cltd
push
xor
imul
pop
sbb
xchg
or
fidivrs
xchg
mov
mov
dec
xor
or
xchg
add
xchg
xchg
mov
enter
mov
jno
and
cmp
add
pop
cli
xor
xchg
sub
push
push
dec
ret
cmp
ret
enter
ljmp
add
and
pop
mov
mov
jb
stc
lods
sbb
adc
inc
sbb
inc
out
cmpsb
icebp
or
movsb
sub
jo
cmp
sbb
add
rcr
out
or
into
pop
sub
dec
insl
jns
sub
sbb
pop
insl
mov
mov
enter
aaa
cs
jmp
adc
xor
mov
sbb
inc
pop
add
in
fistps
adc
mov
jp
nop
cmp
xor
add
xchg
sbb
add
mov
pop
sbb
xchg
orb
sub
push
test
cmc
or
pop
add
ret
outsb
mov
xchg
shlb
aad
pushf
add
cli
stc
add
mov
imul
sahf
jno
roll
je
push
or
mov
lret
out
mov
adc
cmp
or
enter
xor
and
rorb
sbb
rcrb
sbb
in
adc
stos
rcll
add
test
inc
add
sub
ljmp
push
push
add
adc
clc
sub
lcall
cmc
mov
pushf
cmp
adc
movsb
dec
sbb
std
adcb
bound
xchg
dec
push
sbb
cmc
add
fwait
nop
jb
dec
lock
sbbl
and
xchg
xor
push
xor
or
lock
sub
fcoml
mov
ret
cs
and
dec
ret
dec
stc
push
pop
pop
pop
add
je
cwtl
jmp
sbb
sub
lret
adc
jp
loop
lods
or
push
js
add
lret
dec
rolb
add
xchg
mov
iret
cmpsl
sub
mov
addb
push
int3
sub
mov
adcl
loopne
test
cmp
inc
enter
inc
adc
inc
dec
add
and
call
add
imul
les
sbb
add
or
and
hlt
stos
dec
test
push
mov
xorb
cltd
push
ret
movsb
mov
jne
sbb
cmp
xchg
sbbb
pop
das
in
dec
mov
mov
mov
lock
add
and
pop
mov
and
loopne
sbb
cltd
adc
inc
jg
out
sbb
jp
push
pop
rolb
lock
or
cmp
pop
mov
add
cmp
rorb
cld
push
dec
or
push
inc
repnz
imul
loop
add
mov
or
aas
test
orl
test
out
scas
leave
push
aam
push
or
cmp
xchg
lret
or
push
xlat
repnz
das
fs
lea
and
sbbl
dec
add
cmp
inc
ja
test
mov
sbb
gs
inc
jo
or
and
push
rolb
jo
add
push
lock
cmp
pop
data16
jnp
push
xor
and
push
or
ret
sub
ret
ljmp
sub
sbb
outsb
sbb
add
or
imul
mov
or
fsubrl
cs
dec
ja
push
clc
cmp
inc
inc
add
cmp
and
dec
js
popf
sbb
lea
fiadds
jl
mov
adc
test
lods
sahf
mov
dec
sub
adcl
jmp
jb
and
or
sub
cmp
mov
clc
es
xchg
mov
cmp
mov
and
sbb
cmp
repnz
ljmp
inc
inc
adc
inc
out
orb
adc
arpl
sbb
out
xchg
rclb
test
shl
sbb
push
pop
add
or
mov
sti
add
dec
push
add
scas
mov
dec
or
pushf
lods
mov
mov
test
adcl
in
data16
rorb
add
inc
or
les
xor
xchg
or
rclb
leave
push
sbb
or
sub
popf
cwtl
sub
insb
pushf
push
jecxz
sub
mov
push
sbb
mov
imul
adc
aam
and
call
test
mov
addr16
push
xchg
and
dec
sub
adc
push
and
adc
push
adc
movsl
add
cs
or
sbb
xor
int3
adc
xor
and
jb
push
out
add
push
push
push
popf
lods
or
jne
ljmp
xchg
pop
aaa
enter
rolb
pop
filds
test
test
xlat
adc
pop
daa
or
rcl
mov
test
sub
nop
mov
lods
mov
movl
sub
mov
int
xor
xchg
aam
imul
loopne
cmp
pop
sbb
popf
aam
add
and
js
sub
push
inc
imul
xchg
sbb
add
pop
pop
ss
adc
mov
sahf
or
in
add
add
std
fs
cmp
adc
sbb
push
rclb
sub
das
jb
imul
pusha
insb
icebp
mov
mov
jg
or
adc
mov
or
jp
add
add
leave
mov
mov
lret
lcall
add
pop
and
cmpsb
fidivs
pop
dec
lcall
into
addl
movb
inc
int
sbb
roll
mov
sarb
cwtl
cmp
fisubl
leave
pop
mov
add
pushw
data16
mov
jp
in
rclb
xorb
push
cmpb
fldenv
fsubr
mov
orb
das
jo
adc
test
gs
adc
pop
das
mov
jmp
inc
es
rol
sbbb
daa
icebp
sti
movups
lods
stos
shlb
adc
xchg
clc
mov
cli
cmp
cmpb
push
shlb
ficompl
leave
dec
xchg
nop
xchg
orb
pusha
mov
cmp
dec
inc
in
ljmp
add
dec
shr
idivb
or
sbb
add
push
scas
ds
dec
inc
sbb
inc
pop
add
lods
cs
inc
pop
in
in
mov
or
jp
rcr
fisubs
fisubrl
or
and
sub
aad
fwait
xchg
sahf
je
xchg
adc
mov
and
add
xchg
add
mov
loopne
jae
inc
sbb
xor
mov
test
lods
ffree
fsubrs
pop
sbb
xor
in
arpl
aad
xchg
stos
leave
fwait
mov
add
mov
nop
xchg
xor
lock
jle
mov
fldt
out
or
ds
inc
daa
inc
aas
repz
addr16
ret
mov
cltd
dec
shll
add
push
int
ss
mov
mov
xorb
inc
loopne
sub
sbb
mov
adc
and
add
mov
or
push
dec
sbbb
cmp
xchg
outsb
add
add
sub
sbb
xchg
adc
jb
inc
sbbb
rolb
push
jns
and
jo
mov
jmp
outsl
enter
and
dec
inc
pusha
lea
push
daa
es
jl
or
pop
pop
mov
xor
add
fildl
xchg
shll
sub
clc
test
or
cwtl
lret
ss
mov
or
push
push
test
pop
cmp
test
sub
pop
dec
arpl
mov
jmp
fcomi
les
pop
arpl
jp
sbb
movsb
popa
inc
cmp
leave
scas
jp
inc
mov
shll
shll
fists
jge
or
push
bound
adc
push
jb
lret
sub
add
dec
negb
cmp
dec
adc
shlb
or
push
and
mov
inc
mov
enter
dec
mov
gs
mov
pop
xchg
and
in
push
jp
dec
in
stc
xor
adc
addb
cmpb
nop
pop
shlb
dec
jmp
ds
insl
dec
inc
lods
test
lea
cli
shlb
sbb
call
pop
adc
dec
push
ret
xor
int3
sarb
shl
sbb
add
mov
out
mov
push
or
mov
push
sbb
pop
mov
mov
or
jmp
pop
jl
lock
dec
sbb
dec
insl
adc
or
push
and
push
pop
leave
rolb
mov
ret
imul
add
add
and
mov
faddl
mov
push
rolb
mov
ret
cmp
loop
lcall
shrl
arpl
cmp
or
push
jmp
lret
cmp
lcall
inc
pop
pop
adcb
mov
ret
pop
hlt
imul
lock
mov
rcl
add
loope
inc
cmp
or
and
sbb
jne
ret
scas
stos
pop
test
ljmp
rcrl
cmp
enter
dec
mov
cltd
jo
inc
movsb
popl
adc
outsl
test
adc
jno
pusha
pop
outsl
pop
adc
mov
add
fs
imul
push
push
cmp
mov
mov
pop
rclb
inc
pop
dec
sub
pop
sbbb
lods
push
not
mov
test
les
cli
xor
push
test
inc
push
sbb
test
test
ljmp
xchg
inc
push
clc
inc
mov
add
fdivrs
roll
fldl
adc
dec
lods
aas
xor
ret
sub
fidivrl
sbb
lret
and
dec
xchg
cmp
jns
sbb
bound
xor
cld
mov
imul
cwtl
shrb
push
adcl
sub
lods
inc
inc
jl
adc
or
popa
or
call
sub
inc
jl
and
and
pop
or
loopne
push
sbb
ljmp
dec
mulb
or
rcrb
popa
inc
dec
or
outsb
push
mov
push
add
mov
movl
xchg
mov
jb
xchg
mov
jbe
js
mov
inc
ret
jp
aas
stc
adc
xor
jo
push
fimull
and
xor
cmc
out
subb
lds
jne
push
ja
add
adc
fistl
mov
cmovo
sub
mov
xor
push
add
inc
js
repnz
mov
mov
lods
push
add
movsb
adc
add
xor
rol
sub
xchg
insl
xchg
lods
or
cmp
lods
mov
cmpb
clc
add
add
adc
add
adc
fs
push
pop
push
mov
or
push
pop
adc
add
dec
ret
mov
add
sub
cwtl
or
mov
mov
mov
mov
test
mov
test
movsl
xchg
cmp
xor
pop
out
push
push
and
mov
ret
fildl
insl
negl
shrl
insb
mov
mov
out
or
or
dec
fistl
lds
cmp
movsl
testb
mov
sub
clc
shl
ret
mov
cmpsl
sahf
or
mov
sbb
pusha
aam
rclb
cltd
adc
ret
or
imul
ret
push
mov
add
xchg
push
bound
ret
data16
mov
fdivl
and
push
lret
push
mov
xlat
mov
adc
dec
out
fdivl
sbb
inc
cltd
pop
mulb
xchg
cli
or
xorb
dec
sahf
cwtl
xchg
adc
insb
adc
gs
xor
pop
shlb
or
addl
lock
add
dec
and
sub
sarb
nop
push
mov
add
lahf
sahf
inc
ret
fdivl
push
or
sub
adc
xchg
addl
es
adc
call
xchg
cmpsl
add
push
mov
and
mov
fstl
cmp
rcll
fsubp
add
mov
insb
call
lock
ret
dec
jp
push
and
xor
movsb
add
adc
and
dec
imul
xchg
xchg
loopne
imul
or
jne
imul
bndldx
sub
sbb
lcall
jmp
loopne
pop
and
cmp
insb
je
pop
adc
inc
push
xchg
xor
insb
push
dec
pop
dec
cmp
mov
xchg
bound
sbb
adc
xchg
and
int3
sub
sub
pop
adc
push
pop
adc
xor
jecxz
subl
pop
mov
mov
les
lods
inc
push
lea
adc
and
or
add
xchg
ret
sti
push
movb
int3
test
adc
test
adc
xchg
rcrb
push
ror
sub
adc
inc
xchg
outsl
jecxz
cmp
ds
pop
mov
adc
aaa
add
outsb
js
shrb
or
imul
cs
sti
adc
push
outsb
shl
inc
dec
xor
pop
mov
push
pop
or
ss
and
insb
and
out
xor
or
inc
cmp
sub
ds
or
inc
pop
and
pusha
bound
adc
clc
pop
lods
lock
test
stos
ret
inc
nop
divb
inc
hlt
mov
nop
test
ss
pop
inc
in
dec
sbb
mov
test
clc
test
inc
dec
cmp
and
push
imul
rorb
xchg
icebp
xlat
cvtpi2ps
xchg
pop
gs
or
aam
add
pop
sbb
ret
lret
mov
push
enter
jp
sbb
dec
cmp
es
movl
ret
or
mov
pop
fsubl
imul
jno
imul
stos
add
push
int3
or
push
jb
repnz
sub
add
xchg
push
ret
test
pop
clc
or
sub
imul
cltd
mov
push
bound
add
xor
arpl
mov
in
fwait
jns
lahf
add
jecxz
sbb
mov
xchg
xor
or
adc
push
mov
add
enter
cltd
inc
pop
movsl
inc
sahf
mov
test
lods
cmp
xchg
mov
rorl
repz
inc
sbb
and
cmc
stc
push
add
jecxz
xor
dec
inc
and
fcoms
push
sbb
add
push
mov
addb
push
pop
push
cld
inc
or
dec
lock
loope
cmp
pusha
dec
push
inc
movhps
rcll
enter
ret
loope
xor
rcrb
pop
xchg
sbbl
push
imul
push
or
sub
dec
imul
sub
cmp
and
dec
ja
mov
adc
ljmp
xor
dec
inc
jae
stos
or
sbbb
push
or
xor
pop
lcall
dec
add
xchg
push
inc
dec
inc
mov
jge
das
adc
cmp
push
add
add
jo
or
stos
ds
inc
add
xor
ret
lods
scas
btc
lret
or
or
jp
in
ret
int3
and
add
inc
or
sbbb
jmp
mov
mov
movsb
xchg
loopne
enter
add
push
cmp
jl
dec
cmc
rcll
and
and
and
and
fwait
adc
mov
cmp
lret
add
and
cs
icebp
jno
lods
loopne
ss
add
ja
imul
repz
and
and
mov
test
ret
aam
or
gs
mov
sbb
das
add
orb
mov
cmp
roll
and
aam
adc
subb
xchg
cmp
aam
dec
add
addb
and
jno
push
loop
inc
je
adc
push
xchg
insl
daa
add
es
inc
or
xor
outsb
inc
dec
mov
adcb
mov
mov
xorb
sbb
addb
pcmpgtw
sysexit
sbb
mov
inc
ds
and
push
add
push
out
cmp
sbb
push
aas
cmp
cmp
loop
gs
rcll
mov
push
add
sahf
lock
sub
mov
add
inc
inc
inc
insl
test
add
jecxz
inc
bound
call
rolb
ljmp
repnz
or
and
dec
into
xchg
mov
pop
xor
punpckhwd
test
sbb
sbb
or
mov
jmp
push
popf
xor
push
mov
stos
lods
shll
and
fimull
dec
dec
stc
and
sbbb
pop
mov
jnp
cmp
sbb
cmpsl
mov
loopne
in
mov
pop
mov
sub
dec
cmc
and
lret
aaa
cwtl
push
push
jo
cmp
sub
mov
sbb
adc
sbb
insl
or
cs
pop
jno
test
pop
sahf
adc
mov
add
fsubp
or
add
sbb
and
mov
mov
dec
or
js
outsl
sarb
adc
sbb
sub
jb
cmp
fidivl
lock
fcompl
imul
dec
push
add
xor
pop
test
mov
call
sahf
adc
or
push
or
cmc
mov
popa
xor
fs
pusha
ds
out
leave
sub
xchg
int3
cld
mov
and
loopne
jp
aas
js
aad
hlt
add
ljmp
call
and
in
lea
pop
cwtl
das
adc
ret
mov
pop
enter
xor
add
rclb
addr16
insl
add
xor
sti
cs
clc
jp
popa
shlb
cmc
or
ja
shll
and
sahf
add
add
mov
pop
xchg
jp
pop
stc
sbb
add
cmp
adc
subb
dec
pop
rclb
lock
sbb
sbb
cmp
ret
addb
jle
xchg
mov
mov
mov
outsb
cwtl
mov
mov
es
clc
sub
push
and
push
jno
hlt
clc
sub
dec
and
add
and
cwtl
enter
and
push
rcrl
lfs
push
ss
push
jb
sbb
mov
sub
loopne
xchg
xchg
mov
and
rorb
push
xorl
aam
mov
cld
or
jecxz
loop
mov
fcmovnu
xchg
je
xchg
push
dec
inc
pop
xor
mov
andb
pop
cmp
xchg
dec
sbb
xchg
scas
sub
out
xchg
and
adc
adc
aad
icebp
push
fcompl
xchg
push
xlat
cs
inc
add
cmc
movsl
lahf
inc
cmp
out
sbb
push
xor
xchg
popa
fdivrs
pop
call
shrb
rol
mov
bt
inc
inc
out
mov
and
push
loope
ficomps
push
cli
adc
out
sbb
subb
push
adc
scas
shr
xchg
fisubl
aas
cmc
mov
out
sbb
push
ror
clc
js
push
jne
adc
test
mov
add
or
mov
xchg
pusha
cmp
adc
lock
stos
pushf
mov
enter
xchg
fldl
nop
lret
rcrl
lock
sub
dec
jp
out
icebp
push
mov
test
add
pusha
je
or
inc
push
into
test
adc
repnz
les
out
mov
push
cmpsl
adc
test
leave
add
xchg
dec
lods
adcl
sbb
or
pop
adc
inc
push
cli
test
push
or
mov
sbb
fdivl
dec
xchg
or
sbb
sub
pop
loopne
jmp
ljmp
sbb
dec
sbb
xor
push
push
out
cmpsl
and
jne
xchg
pop
jge
jg
sub
add
js
fnstcw
push
sbb
pop
test
jl
or
add
loope
lret
loopne
mov
pop
aas
subb
or
cli
rclb
add
sbb
jmp
js
add
lds
xor
pusha
add
cli
es
movsb
or
or
push
push
ret
das
enter
pusha
test
loopne
push
sahf
in
jecxz
movsl
and
pop
mov
add
loop
ret
adc
sub
mov
jb
inc
add
int
mov
inc
fmull
sub
push
ss
adc
sbb
cwtl
ljmp
mov
sbb
cmp
mov
notb
call
add
daa
or
rcl
pop
or
push
movsb
mov
xor
push
push
adc
ret
adcb
mov
pop
mov
push
leave
add
jge
pusha
shrl
pusha
adc
ss
sarb
addb
clc
sub
test
pop
mov
fdivrp
lea
in
loopne
add
push
mov
in
push
out
xchg
xchg
pop
filds
jno
in
push
pop
aaa
mov
mov
pop
sub
pop
jns
or
int3
stos
push
lret
mov
test
dec
and
inc
je
and
mov
in
xor
sbb
lret
mov
ret
repz
mov
and
xor
test
jno
mov
aam
sbb
pushf
inc
repz
dec
mov
fimull
mov
aad
je
lahf
jno
sub
mov
fwait
stc
sbb
sub
xchg
fs
andl
repnz
add
mov
test
mov
das
insb
pushf
test
xor
cmc
sub
push
shl
imul
insl
jge
scas
mov
stos
jae
jmp
inc
xchg
lods
or
repnz
in
ja
mov
dec
and
lret
loopne
mov
or
add
addr16
xlat
fists
pop
lahf
clc
movsl
mov
in
mov
daa
jmp
push
cltd
mov
icebp
out
lret
mov
mov
adcb
aas
scas
mov
cmp
aas
cmp
pop
rol
add
pusha
rclb
mov
push
mov
fdivp
lret
mov
jge
and
in
lret
mov
cmp
ffreep
xor
sti
repnz
stc
fcompl
inc
xchg
cltd
adc
aad
repnz
lret
sub
xor
xchg
fcomi
jg
scas
mov
dec
shll
test
jl
mov
das
aaa
dec
clc
rcl
scas
js
or
outsl
jo
lret
xchg
sbb
in
adc
pushl
lret
mov
ret
and
dec
or
adc
mov
mov
mov
jge
loopne
daa
das
jo
or
out
out
jns
sbbl
add
out
sub
add
xor
mov
into
inc
stos
je
loopne
sti
in
push
inc
mov
mov
mov
aam
pop
aas
orl
sub
jle
and
aaa
std
and
sub
scas
mov
adc
jecxz
jp
inc
push
fsubrp
xchg
jns
xchg
loopne
pop
or
mov
jns
xchg
aam
test
and
adc
in
push
roll
inc
inc
movsl
push
sbb
jmp
test
sbb
mov
pop
jns
adc
mov
hlt
stc
xchg
popf
xchg
push
pop
jns
cmovne
push
mov
jle
ds
pop
jns
xchg
mov
pushf
mov
in
adc
repnz
xchg
push
stc
imul
push
pop
xchg
xchg
push
fidivrs
jns
and
incl
jl
in
jnp
fisubs
push
adc
lret
mov
das
xor
xchg
xor
in
sub
ficompl
arpl
sarl
mov
add
stos
mov
lret
imul
scas
mov
mov
mov
aaa
lahf
cld
sub
mov
mov
mov
repnz
pmulhuw
xor
faddp
repnz
push
aaa
cmp
push
rorl
sub
enter
add
sub
or
scas
mov
ret
xor
jle
scas
mov
xchg
inc
shrb
mov
mov
xor
call
adc
ror
mov
push
jnp
or
xlat
fcmovb
xor
scas
mov
sub
ret
cmp
addr16
rcll
and
mov
pop
aad
jns
lret
punpckhbw
aam
cwtl
inc
sbb
in
jns
xchg
push
mov
fdivrs
or
xchg
push
pop
test
stc
xchg
in
xchg
test
mov
pop
cmpsl
push
fdivrp
jb
and
xchg
fucomip
push
or
xchg
jge
pop
jns
xchg
stos
jge
into
push
and
leave
add
xchg
push
bound
scas
fldlg2
outsb
test
push
pop
jns
cs
mov
enter
mov
xchg
fidivrs
in
mov
hlt
pop
mov
jg
inc
imul
js
fisubs
dec
in
arpl
in
push
pop
test
jnp
mov
jp
inc
inc
test
xchg
push
pop
jns
rcrl
or
push
jmp
in
and
dec
insl
and
and
ficoml
sub
adc
iret
div
in
call
jge
push
hlt
adc
pandn
mov
xchg
leave
je
popa
push
icebp
movsb
sar
out
xor
xchg
push
pop
mov
fsubr
out
imul
pop
jns
push
mov
dec
push
stos
test
push
pop
jns
xchg
cld
ss
in
mov
insb
dec
mov
mov
dec
lahf
faddl
mov
cmpl
ja
insl
xor
jne
daa
lret
jle
cmp
leave
push
enter
out
scas
mov
out
imul
pop
sbbb
mov
mov
repz
sarl
fistpl
adc
and
lret
mov
call
mov
mov
sbb
mov
mov
fists
leave
ljmp
scas
fdivrp
jb
mov
mov
or
adc
pop
gs
and
mov
shl
repz
mov
gs
sub
testb
cmp
mov
repnz
cmc
push
adc
dec
and
lret
add
hlt
cltd
adc
jmp
sub
jle
mov
mov
xchg
mov
xor
and
jg
dec
xchg
lock
add
sub
cmp
jbe
sti
add
int3
cmpsl
arpl
xchg
das
scas
fadd
jnp
dec
or
pop
and
mov
das
push
gs
mov
out
push
add
xchg
outsb
mov
lahf
ds
mov
or
cmp
es
xlat
inc
and
addr16
pop
jns
xchg
adcl
xor
cmp
jg,pt
cld
adc
pop
push
jle
into
loopne
sub
inc
out
lahf
aas
js
sub
cmpsl
sub
jmp
cld
stc
repz
faddl
je
rep
sbb
pop
mov
test
lahf
aas
jg
fldenv
test
sbb
rcr
mov
xchg
into
push
aad
in
mov
out
pop
lahf
add
jmp
stc
sbb
sbb
js
dec
mov
cmp
jno
in
mov
aad
in
push
pop
adc
lcall
push
insb
xchg
push
pop
jns
movsb
add
filds
pop
jns
inc
ret
mov
push
push
pop
sbb
dec
push
or
lahf
out
and
sub
push
pop
movsb
std
insl
xchg
mov
xchg
pop
adc
jns
aas
ss
outsl
adc
inc
pop
aaa
sbb
pop
jns
jns
hlt
pop
repz
fnstenv
push
jns
xchg
ja
sbb
mov
mov
in
push
pop
arpl
jmp
ror
shlb
xchg
in
gs
out
stos
mov
push
pop
jns
inc
or
outsb
leave
test
mov
arpl
hlt
pop
xchg
mov
jg
repnz
dec
aam
lcall
ljmp
in
iret
test
repnz
mov
lret
cmp
rcll
mov
sub
orb
sbb
mov
pop
test
mov
mov
repnz
dec
imul
cli
xchg
aas
push
insb
cmc
mov
cli
frstor
mov
mov
lret
stos
stos
or
jge
add
add
scas
mov
fldl
orl
sub
shlb
sub
and
adc
scas
mov
lock
fildll
sti
and
loopne
mov
dec
xlat
leave
jle
and
lret
aas
ds
in
add
cmp
scas
mov
dec
xor
call
cltd
pop
stos
scas
mov
add
mov
and
cmc
imul
lret
or
dec
out
in
dec
sub
loop
mov
rorb
mov
xor
sub
daa
nop
fwait
insl
xchg
clc
in
aad
push
enter
stc
repz
mov
or
mov
rcrl
jg
xchg
jl
imulb
pop
sub
test
repnz
outsl
pop
xor
or
std
jnp
out
xchg
sub
dec
out
fucomip
icebp
sub
bnd
or
lret
push
hlt
outsl
shrl
sub
and
sub
repnz
shr
mov
std
mov
push
or
in
sub
lcall
pop
std
jge
push
xchg
and
fdivr
into
leave
mov
das
jp
pop
mov
inc
popf
mov
mov
cmpsl
pusha
ret
jne
repnz
out
mov
mov
mov
test
add
lods
add
push
jl
ss
mov
aas
adc
push
dec
lret
in
imul
pop
lods
fwait
mov
out
push
lea
lretw
xchg
ja
mull
dec
add
movsb
lret
push
lret
hlt
ss
or
pop
xchg
sub
cmp
mov
mov
loop
std
xchg
mov
jns
xchg
sub
inc
sub
dec
mov
xchg
dec
jnp
and
adc
mov
pop
inc
mov
out
data16
test
adc
cmpsl
xor
mov
loopne
std
xchg
cli
aas
mov
jp
pop
jns
xchg
mov
inc
sbb
sub
icebp
lret
xchg
push
pop
xchg
andb
lock
shll
icebp
sti
scas
scas
lods
testl
jmp
mov
cmc
cmc
outsw
stc
mov
lahf
aas
jb
mov
arpl
popf
iret
lahf
pop
ljmp
jo
mov
jno
lret
out
mov
push
cld
inc
mov
sbbb
loopne
ja
sahf
ljmp
pop
repnz
rorl
sub
xchg
push
pop
jns
sbb
movsb
fst
jae
xchg
les
push
pop
jns
rclb
pop
pushf
jecxz
or
inc
mov
ds
pop
jns
xchg
push
hlt
dec
cltd
stos
call
ret
jb
xchg
push
pop
pop
cltd
je
cmpsl
push
ret
cwtl
xor
repnz
xchg
mov
ret
xlat
aas
scas
or
scas
mov
dec
div
sbb
xchg
push
fsubrp
subb
aas
gs
mov
xchg
lods
mov
jns
add
sub
and
bound
out
mov
fbld
mov
mov
mov
xor
mov
scas
mov
aaa
lahf
jae
cmp
xchg
push
pop
jns
sahf
lahf
cmp
decl
aaa
fwait
jnp
pop
jns
xchg
test
repz
pop
xchg
inc
cmpsl
push
adc
pop
out
xchg
jne
xlat
add
xchg
ja
mov
inc
leave
data16
pop
test
ja
pop
repnz
aas
and
mov
push
pop
jns
mov
mov
cmc
cmp
jle
out
pop
jns
xchg
mov
fists
int3
sub
xor
xchg
ja
xorl
dec
movsb
sarb
dec
jecxz
push
pop
jns
incb
popa
mov
push
pop
jns
movsb
or
push
pop
cld
sub
jg
mov
xor
or
mov
in
push
lds
cmp
cltd
pop
dec
push
pop
jns
nop
inc
dec
fnsave
push
pop
jns
xchg
jns
mov
std
lea
hlt
mov
jns
xchg
push
and
push
mov
add
leave
mov
dec
sarl
pop
xchg
pop
pop
cmp
iret
lahf
aas
call
cmp
adc
lret
arpl
stc
repz
dec
cmp
push
or
jp
push
fdivrp
pop
les
push
mov
sub
push
mov
mov
scas
sub
jns
adc
les
lret
mov
mov
pop
xchg
jp
scas
mov
ret
push
scas
add
inc
out
dec
xor
pop
icebp
mov
dec
fstpt
mov
cld
movsb
xor
out
adcl
dec
icebp
jp
lret
sub
push
fdivrs
cs
jo
push
scas
mov
subl
sub
push
int3
pop
jg
lea
loopne
or
stos
repz
mov
out
lahf
aas
mov
std
xor
sbb
fldt
div
orl
sub
into
pop
jmp
pop
sarl
mov
stc
jb
jle
idiv
jle
cs
shrl
lahf
aas
jg
in
mov
mov
dec
in
lcall
in
sub
and
xlat
loopne
in
sub
sub
movsl
xchg
daa
jnp
sti
aam
jns
push
lds
pusha
sub
incb
mov
jle
or
scas
gs
sbb
jecxz
adc
in
push
fwait
jp
imul
add
lahf
ja
pop
jns
cmc
cmp
xchg
add
mov
in
aas
popf
add
aaa
mov
lret
or
scas
cltd
daa
cwtl
pop
dec
xchg
sub
test
xchg
push
dec
mov
cmp
cmpxchg
push
mov
stos
in
sub
jle
jne
dec
fistpll
lret
jo
loop
pop
clc
in
repnz
sub
in
jnp,pn
out
fists
das
mov
in
cmp
imulb
xchg
sub
jle
or
pop
leave
jecxz
out
push
mov
scas
mov
lods
xor
cmpsb
cmp
push
leave
sti
repnz
enter
and
lahf
lret
mov
jmp
inc
xor
stos
sbb
icebp
clc
inc
out
xor
mov
and
pop
jmp
decb
in
cs
rorb
cmc
in
iret
lods
jae
ljmp
scas
or
xchg
sub
mov
pop
or
das
mov
scas
mov
pop
das
nop
sbb
sbb
push
fimuls
jle
jmp
in
mov
mov
out
pop
pop
mov
xchg
repnz
mov
bound
pop
jecxz
xor
mov
sbb
pushf
jl
lret
pop
scas
mov
out
subb
sub
mov
in
or
andb
sub
outsl
push
pop
jns
sar
icebp
pushf
inc
mov
mov
fstpl
in
cmp
push
popf
or
mov
sub
in
das
push
pop
clc
pop
ret
lret
iret
dec
jmp
ret
pop
jns
sbb
rorl
sbb
pop
jns
fisttpll
sub
push
mov
xlat
sbb
push
aaa
scas
jg
inc
mov
push
pop
jns
arpl
lcall
mov
dec
lds
in
sbb
push
sbb
jns
popa
mov
in
push
jno
mov
test
dec
pop
cwtl
ja
gs
xor
mov
pushf
in
jl
xchg
pop
daa
negl
in
pop
test
xchg
hlt
push
pop
enter
in
push
mov
outsl
pusha
jmp
stos
sub
sub
jg
jns
out
cmp
dec
xchg
push
pop
jns
bnd
push
cmc
cld
jbe
jne
aad
jp
jns
xchg
jae
pop
fcmovnbe
inc
rorb
call
data16
mov
cli
lock
in
pop
jns
popf
lock
inc
jbe
ret
and
adc
lea
lock
push
lods
ds
cmp
test
or
dec
and
xor
sub
bound
inc
push
sub
out
jb
push
test
fsubl
scas
mov
and
ja
jae
xor
fldenv
data16
mov
lret
cs
xor
pop
sbb
pop
out
mov
lea
mov
sbb
mov
jmp
pop
fnop
outsb
lret
xchg
ja
aas
outsl
sub
insb
sbb
mov
testl
mov
repz
out
jns
xchg
cmp
mov
push
mov
mov
outsl
cli
xor
cld
push
divl
shll
dec
xor
sahf
stos
jno
or
jno
cmp
add
popf
pop
jns
frstor
lcall
cmpsl
sub
neg
aaa
mov
in
push
aas
subl
ret
pop
xor
inc
std
pop
sbbb
mov
popa
jmp
push
sahf
and
xchg
pop
fidivrl
jg
cld
cmpsb
mov
inc
lahf
and
jle
mov
and
lahf
mov
pop
lods
mov
sarb
cld
stc
jno
je
xchg
adcb
add
mov
cwtl
stos
dec
and
sub
pop
dec
ret
sub
repnz
inc
int
call
xor
stc
repz
cvtpi2ps
jp
mov
imul
jg
jge
inc
repnz
gs
out
inc
fists
or
rcrl
stc
dec
mov
pop
dec
test
in
jns
xchg
lret
mov
xor
cmpsl
xor
xchg
push
imul
cs
push
movsl
dec
fists
into
push
jae
leave
jb
stc
fmul
lahf
jns
fnstsw
arpl
dec
hlt
lods
das
enter
jle
jl
jl
sbb
push
out
js
aaa
insl
lret
iret
lahf
aas
addr16
pop
add
cld
inc
xchg
push
fsubp
rcrl
inc
fdivrs
orl
lret
sub
sub
test
or
test
scas
sub
inc
sub
inc
sub
sub
push
push
sarl
lock
xor
add
sub
inc
push
loope
sub
lock
jo
sub
sub
or
mov
lea
sub
sub
pop
push
mov
sub
in
cmp
mov
push
add
pop
mov
outsl
sub
pop
adc
pop
sub
sub
sub
push
xor
sub
sub
push
rorl
sub
mov
pop
sub
das
test
pop
sub
dec
sub
sub
mov
outsl
sub
imul
sub
inc
sub
sub
push
push
rorl
adcl
test
das
sub
push
add
pop
loope
test
sbb
xchg
push
sub
sub
test
pop
sub
cmp
pop
sub
sub
mov
incl
add
add
cmp
sub
xchg
dec
sub
sub
mov
pop
insl
decb
mov
mov
jg
sub
lahf
sub
sub
push
rcrl
sub
movsb
addb
sub
sub
unpckhps
sub
add
sbb
iret
sub
cmp
dec
sub
sub
or
add
sbb
mov
shr
pop
sub
inc
sub
jg
repz
jne
push
js
shrl
sub
movsb
andb
sub
test
add
push
sub
sub
orb
push
sub
sub
or
sub
outsl
adc
inc
sub
push
mov
sub
dec
test
adc
mov
pop
sub
or
pop
inc
add
sub
dec
push
loope
sub
add
sub
sub
inc
test
roll
pop
pop
sub
xchg
push
cmp
sub
into
aad
jae
dec
test
adc
push
xor
lock
xorb
daa
test
iret
sub
dec
add
and
sub
sub
inc
test
or
js
sub
mov
sub
dec
test
adc
add
cmp
sub
orl
push
sub
sub
adc
jg
stos
pusha
and
int3
jae
mov
sub
stos
pusha
add
iret
pop
dec
test
in
adc
loop
rcrl
cmp
ret
aas
sub
stos
loopne
adc
sahf
or
das
aas
jmp
pop
sub
add
cmp
sub
sub
jo
pop
jg
cvttps2pi
adcb
add
or
cmp
sub
test
sub
js
cmp
lahf
sub
or
sub
jl
loopne
sub
sub
push
rorl
sub
push
xor
test
adc
cmp
inc
sub
sub
mov
scas
sub
or
pushf
cvttps2pi
clc
push
loope
sub
sub
or
je
sub
pop
orb
movsl
ret
jg
scas
test
pop
sub
dec
add
or
xchg
iret
mov
and
sub
test
outsl
sub
or
cmp
sub
and
scas
sub
adc
out
sub
test
and
inc
add
push
rorl
sub
or
outsl
sub
loope
loopne
sub
sub
orb
cvttps2pi
adc
sub
push
loope
test
sub
xchg
pop
outsl
sub
inc
adc
sub
add
into
xchg
jg
fsubrs
and
pop
sub
sub
sub
mov
dec
sub
or
inc
add
sub
add
js
sub
orl
push
sub
sub
test
jg
mov
sub
sub
cmp
lock
sub
sub
orb
aas
sub
jo
or
lods
sbb
dec
daa
adc
sub
push
loope
test
sub
xchg
or
ljmp
or
sub
push
loope
test
sub
xchg
or
lahf
sub
mov
dec
sub
and
dec
add
sub
mov
dec
sub
push
xor
pop
sub
adc
cvttps2pi
sub
psubb
dec
sub
sub
add
sub
jl
pusha
fildll
sub
test
pop
ljmp
add
sub
pop
test
aas
sub
adc
fdivr
dec
sub
adc
push
sub
sub
cmp
mov
sahf
push
sub
sub
sub
test
sub
sub
pop
sub
push
jo
or
sub
or
sub
in
mov
in
or
lahf
ror
scas
or
loope
add
or
xlat
outsl
mov
sub
mov
sub
sub
dec
test
scas
sub
orl
sub
adc
ljmp
inc
test
dec
sub
js
mov
sti
mov
sub
sub
or
dec
test
test
sub
clc
push
loope
sub
sub
mov
pop
dec
add
sub
ret
out
sub
sub
dec
mov
pushf
sub
outsl
test
push
sub
sub
push
loope
add
push
push
mov
rcll
cmp
sub
orb
push
sub
sub
xor
sub
sbb
cmpsl
sub
sub
xchg
push
js
sub
sub
adcb
adc
sub
sub
test
sub
xchg
push
js
sub
and
sub
sub
add
orb
outsl
sub
inc
mov
dec
pop
cwtl
push
push
clc
push
sub
sub
ret
adc
daa
pop
test
mov
orb
sub
sub
cs
mov
sub
sub
inc
test
lahf
sub
orb
sub
sub
aaa
push
mov
sub
movsb
adcb
cmp
lock
sub
sub
test
ud0
mov
lahf
sub
sbb
lock
sub
sub
push
rorl
fists
or
sub
inc
adc
dec
cmp
ret
das
inc
ss
xchg
or
push
sub
sub
test
mov
roll
pop
scas
sub
xor
sub
sub
adc
pop
sub
test
scas
xchg
or
sub
sub
cs
lock
sub
sub
test
add
sub
push
roll
out
sub
orb
pop
sub
sub
sub
mov
pusha
scas
sub
iret
sbb
sub
sub
xchg
or
pop
sub
dec
test
mov
sub
inc
add
test
mov
sub
pop
push
loope
sub
mov
cvttps2pi
mov
decb
xor
mov
loope
add
loopne
clc
push
sub
sub
dec
add
sub
push
mov
or
sub
add
js
loope
sub
sub
add
cmpl
cmp
pop
sub
pushf
jmp
pop
pop
xor
mov
mov
push
rcrl
sub
push
loope
incl
jg
in
push
sub
cpuid
cmp
dec
sub
sub
push
xor
xor
pop
dec
aas
fisttps
and
mov
push
rorl
pop
sub
push
push
cmp
sub
sub
test
and
incl
pop
sub
adcl
lods
movsb
sub
sub
jl
pusha
pop
sub
sub
push
rcll
sub
cmp
cs
sub
sub
push
loope
sub
sub
push
rcrl
sub
push
cmp
ja
or
inc
bswap
dec
sub
adc
jg
cmp
daa
out
sub
cmpsl
xor
adc
jg
ljmp
push
push
loope
sub
sub
movsb
ret
sub
sub
add
or
sub
pop
sub
ljmp
push
jo
or
sub
mov
mov
sub
sub
orb
setg
hlt
shrl
lock
lock
sub
sub
inc
add
sahf
push
cmp
aas
sub
pop
popa
sub
cmp
pop
ljmp
sub
jg
sub
pop
dec
lock
jo
or
sub
sub
jg
sub
dec
in
lret
test
pop
sub
sub
push
mov
loope
pusha
dec
sub
sub
test
mov
js
add
xchg
or
sub
sub
adc
das
sub
dec
test
fildll
push
roll
sub
sub
xchg
or
sub
add
or
sub
sub
add
push
sub
dec
sub
sub
or
or
test
cld
mov
aas
mov
or
pandn
sbb
xchg
sub
sub
push
adc
sub
and
in
das
push
push
add
or
sub
sub
cmp
jo
sub
sub
push
rcrl
pop
mov
dec
sub
unpckhps
or
das
sub
and
sub
add
sbb
js
sub
sub
pop
push
sarl
test
sub
test
pop
sub
inc
sub
iret
mov
dec
sub
test
mov
pop
scas
sub
xchg
or
sub
sub
js
mov
sub
call
addb
sub
sub
push
rorl
nopl
sub
push
rorl
cvttps2pi
sub
sub
inc
sub
sub
push
roll
sub
sub
nop
or
sub
unpckhps
push
sub
sub
sub
test
sub
orb
pop
sub
or
sbb
orb
inc
stc
addl
cmp
lahf
sub
dec
test
iret
sub
sahf
or
sub
sub
inc
test
adc
xchg
push
loope
sub
lock
ret
iret
sub
dec
add
sub
cmp
dec
sub
sub
movsl
ret
sub
test
dec
sub
adc
sbb
sub
xchg
push
push
sub
sub
push
cmp
pop
inc
jbe
sub
inc
test
adc
pop
push
loope
sub
pusha
or
aas
inc
add
sub
dec
add
mov
sub
pop
test
dec
out
call
pop
sub
sub
pop
push
cmp
das
add
sub
add
dec
mov
dec
sub
sub
mov
das
sub
add
add
cmp
sub
sub
loopne
sarl
adc
push
dec
sub
sub
inc
subb
call
pop
xchg
ja
repnz
lods
xchg
add
push
outsl
lahf
pop
sbb
in
xor
sbb
ja
aas
mov
xor
lods
repnz
int
repz
lahf
fcmovnb
scas
xchg
insl
mov
sbb
mov
fs
and
xchg
aaa
or
sahf
test
out
pop
sbb
xor
ss
outsl
cmp
sbb
sahf
repz
scas
mov
rclb
inc
mov
mov
sub
cmp
lret
lret
test
push
mov
sub
int3
pop
sti
cmp
jne
adc
out
loopne
xchg
sub
lea
cld
stc
repz
scas
fldenv
cli
popl
cld
dec
pop
out
pop
dec
sub
insb
dec
in
jnp
sahf
lods
mov
mov
pop
pop
mov
fnstcw
sbb
mov
xchg
setle
lret
add
out
pusha
jo
xchg
test
notl
addl
mov
mov
nop
scas
std
sbbb
cmc
push
or
jns
xchg
pop
popl
test
call
mul
xchg
push
pop
mov
cmpsb
xchg
sub
lock
cld
jb
scas
fwait
hlt
ja
mov
aas
and
mov
iret
loop
xchg
jns
xchg
ja
cmp
mov
psrld
push
ret
fcmove
in
push
pop
ljmp
cmp
jmp
pop
icebp
pop
jb
scas
ja
pop
insl
mov
jg
fstpt
jg
repz
push
pop
jns
xchg
mov
jge
in
outsb
jno
ljmp
xchg
push
xor
and
xor
xchg
push
pop
leave
sbb
inc
mov
xchg
aam
clc
fistps
pop
jns
mov
movsb
xchg
mov
mov
mov
ss
cld
push
out
stc
nop
push
lods
imulb
xor
mov
je
outsb
jecxz
stc
repz
cmpsb
cmp
repnz
fs
mov
cld
mov
mov
or
sahf
test
out
lahf
test
mov
or
adc
inc
add
lea
cld
stc
out
sub
shrl
lret
int3
mov
pop
vpsrlw
mov
cld
stos
push
aas
xchg
sub
push
test
scas
mov
pop
sti
and
mov
mov
repnz
les
push
sbb
mov
or
out
lret
sub
cmpsb
add
jg
jno
xor
sub
pop
cmp
pop
sub
mul
jno
lcall
es
adc
repz
mov
push
mov
lock
mov
mov
dec
fs
push
sub
adc
sub
lret
sub
jae
iret
add
out
push
cmpsb
inc
lret
cmc
cmc
test
jg
cld
call
push
iret
int3
loop
cmpb
lods
das
push
pop
add
nop
mov
jo
xor
fwait
pop
aad
loope
cwtl
or
repz
or
fiaddl
clc
jl
jg
cld
in
iret
das
je
xchg
bnd
out
mov
repz
lahf
sbb
lds
push
and
mov
cld
stc
pop
adc
dec
loope
push
mov
repnz
into
sbb
imull
jno
out
filds
pushl
loopne
mov
mov
shrb
mov
fbld
lret
rclb
sbb
stos
popa
or
lret
sub
out
insl
das
and
sbb
push
fsubrp
and
lahf
dec
jno
inc
pushf
pop
jns
xchg
pop
ret
push
ret
icebp
push
mov
in
push
xlat
or
stos
mov
outsb
dec
adc
xor
ficoml
mov
js
iret
pop
mov
mov
leave
mov
mov
mov
xchg
outsl
mov
push
cli
xor
cld
cld
stc
mov
jge
pop
mov
xor
mov
dec
fidivs
mov
test
das
mov
inc
jg
sahf
adc
cld
or
mov
es
ljmp
mov
aas
out
aas
icebp
xchg
fnstenv
outsb
aas
and
pop
sarl
cs
gs
push
xor
loopne
dec
or
jg
add
xlat
inc
sub
out
lods
dec
repz
lahf
ljmp
shrb
cld
stc
outsl
shll
fdivp
push
jge
sub
sbb
in
ja
pop
pop
add
mov
loope
leave
xchg
push
pop
jns
and
jnp
popl
lea
push
pop
jns
pop
dec
push
and
inc
and
in
loop
cmc
std
cmc
push
mov
pushf
scas
out
xor
xchg
ja
or
dec
add
cltd
add
jns
mov
xchg
or
pop
jns
aam
sub
jmp
sarl
sub
add
mov
mov
sarl
stos
clc
out
dec
lahf
aas
call
push
mov
js
lret
es
pop
stc
repz
add
inc
xchg
pop
adc
cwtl
sbb
std
sub
aas
jg
cld
addr16
movsl
mov
cmpsl
push
jecxz
das
sbb
dec
jne
dec
hlt
push
xor
ffreep
lret
iret
stos
or
cmp
scas
scas
mov
rorb
xor
stos
cmp
pop
mov
ret
idiv
cmpsl
je
mov
sub
jnp
jmp
xor
pop
sti
sub
mov
push
dec
mov
lahf
push
mov
out
adc
dec
jge
sub
xor
aad
pop
repnz
push
idivl
push
jae
ljmp
lret
mov
mull
mov
mov
pop
inc
lea
outsl
loopne
mov
imul
cld
cld
stc
repz
pop
pop
mov
pop
push
lret
lea
xor
out
aas
test
repz
xchg
call
outsb
in
jnp
jg
xchg
inc
out
cmp
mov
sahf
je
or
iret
test
scas
mov
mov
mov
stos
aaa
push
jecxz
loop
sub
loop
adc
mov
cld
stc
repz
cld
adc
dec
jmp
icebp
stos
ja
iret
lahf
aas
jg
aad
in
xor
dec
sahf
stc
mov
push
jae
dec
add
sbb
and
inc
xchg
aas
jg
xlat
aas
mov
pop
or
mov
sti
push
pop
iret
test
scas
test
mov
mov
das
scas
mov
mov
push
ss
inc
mov
jb
xchg
xchg
adc
out
or
mov
das
push
ficomps
ret
or
sub
sub
sbb
add
mov
jmp
cmp
scas
jl
sub
cld
stc
add
jg
jae
sahf
xchg
lahf
xor
push
push
cmp
push
mov
or
push
cld
stc
repz
xor
add
jle
jnp
inc
int3
adc
adcl
pop
jmp
fildll
fcompl
out
les
fiadds
sbb
lcall
clc
cli
xlat
call
setge
clc
pop
jns
xchg
push
mov
pop
lods
xor
and
jl
hlt
add
loope
inc
xlat
xor
mov
jp
std
sbb
pop
jge
jns
fnstsw
imull
sar
repnz
mov
js
shll
xchg
insb
add
cld
rorb
cmp
ds
fwait
cmc
out
pop
cmpsl
pop
add
je
jg
jno
ds
xor
mov
xchg
pop
pop
jg
cld
stc
inc
mov
inc
dec
pop
xlat
sti
mov
pushf
inc
push
orb
aam
imul
mov
push
push
stc
add
cmp
fisubs
mov
test
test
int
cltd
pop
jns
xchg
cmp
aas
mov
fldl
cs
mov
mov
repnz
and
jp
clc
in
xchg
and
mov
mov
mov
fidivrs
cmp
mov
inc
jns
xchg
push
push
popf
xchg
pop
inc
in
fmull
mov
pop
adc
pop
mov
aam
in
ja
mov
loop
mov
outsl
xor
idiv
je
mov
jno
sub
jns
inc
lods
imul
lahf
jg
cmp
and
cmp
sti
jne
mov
mov
subb
lret
or
xchg
add
js
sub
xchg
call
adc
repnz
leave
loopne,pn
pop
popa
scas
cmpsl
dec
push
pop
cmp
mov
sub
shlb
pop
imul
xlat
repnz
pop
inc
repnz
xchg
push
ljmp
and
lods
daa
xchg
jg
ret
pop
mov
adc
xchg
jno
mov
jg
cld
jle
movsb
loop
mov
push
aam
mov
push
adc
out
lahf
sbb
adc
push
pop
jae
loop
cld
stc
pop
adc
jl
lcall
adc
mov
hlt
pop
out
lahf
aas
adc
inc
adc
mov
cld
stc
repz
and
stc
adc
dec
cld
xor
push
xchg
and
push
outsb
das
addr16
mov
fdivr
rcll
pop
loop
mov
lret
js
adc
push
mov
movsb
xor
repnz
ljmpw
dec
ror
push
jno
xchg
ja
inc
pop
mov
sbb
add
fs
sub
or
dec
or
lock
in
add
repnz
repnz
jge
dec
repnz
insl
cld
cli
imul
push
aas
jns
dec
fimull
lret
sbb
jp
gs
in
and
lret
rorl
jge
jns
xchg
dec
stos
loop
xchg
ds
mov
mov
xchg
push
push
movsb
in
pusha
xor
fcomps
or
std
push
sahf
loop
scas
jg
sub
jbe
or
stos
inc
loop
sbbl
stc
repz
jno
cmp
and
xchg
cmp
rclb
pop
inc
aad
sub
js
mov
xor
mov
lock
iret
aam
ret
mov
jl
es
and
add
repnz
jg
mov
or
stc
repz
jns
hlt
push
jle
jbe
data16
push
and
jle
cld
int3
movsl
ja
enter
pop
xor
lret
push
pop
add
pusha
mov
push
or
xor
mov
sub
fsubp
lret
stos
cmp
inc
fldcw
push
test
in
lret
test
rorl
inc
fiaddl
and
xchg
push
jmp
cmp
in
push
pop
adc
mov
sbb
dec
out
loop
xchg
sub
mov
pushf
lret
lea
scas
rcr
inc
xlat
mov
shrl
rcrb
stc
repz
mov
mov
faddl
mov
clc
pop
clc
clc
daa
stos
clc
scas
xor
aas
jg
cld
mov
repnz
ret
incb
das
mov
jnp
add
fwait
adc
rcrb
repz
xchg
adc
nop
or
push
seta
jg
sub
pop
cmp
outsb
lcall
ficomps
insl
data16
cli
inc
sti
pop
pop
dec
stos
push
pop
in
mov
push
xchg
in
iret
mov
es
cld
stc
repz
dec
popf
mul
and
add
jae
mov
aad
push
xor
iret
aas
mov
in
add
mov
ss
ret
inc
adc
jb
push
pusha
lock
lods
inc
loopne
mov
stos
into
dec
lret
mov
sub
jne
cld
inc
clc
repnz
jecxz
xor
mov
lahf
aas
jg
pop
sub
adc
arpl
imul
iret
or
nop
xor
xlat
je
je
imul
imul
mov
lahf
sub
jns
xchg
aaa
pushl
cmp
rorb
or
push
pop
inc
lahf
aas
push
mov
lahf
sub
push
pop
jns
out
pop
pop
out
nop
mov
adc
push
movsb
inc
xchg
push
push
in
jle
loope
aam
leave
lahf
vmread
and
push
pop
jns
pop
xor
ja
or
call
in
mov
push
xor
sub
pop
jns
xchg
int3
sti
sub
into
xchg
out
test
clc
push
jecxz
test
scas
rcrl
stos
and
inc
pop
shlb
repz
ljmp
mov
jge
mov
jg
cld
adc
addr16
jo
cmp
in
xor
lahf
dec
push
cmp
faddl
pop
lret
xchg
aas
or
xor
aaa
mov
repnz
aas
sub
into
scas
leave
loop
pop
jne
jmp
cld
sbb
mov
test
lea
out
lahf
aas
aad
push
into
imul
std
repnz
repz
out
loopne
outsb
repnz
mov
adcl
xchg
push
fisubrs
jno
mov
aam
pop
pop
jns
xchg
jnp
data16
or
inc
imulb
out
lahf
aas
mov
mov
jb
jnp
cld
stc
repz
fmuls
ret
sub
xchg
adc
fmull
xor
movsb
xchg
aas
jg
addr16
sub
rcll
call
dec
lret
xchg
push
pop
daa
xchg
cmpsl
cmp
pop
iret
pop
orl
add
stc
repz
gs
sub
lret
imul
and
jg
mov
mov
inc
mov
daa
adc
adc
cmc
ss
xchg
bnd
fdivr
mov
mov
sbbb
xchg
ja
jg
jmp
loopne
sub
pop
pop
jns
jecxz
xor
add
xorl
xchg
cmp
jmp
movlps
pop
jle
cld
scas
dec
fists
adc
mov
scas
mov
add
sbb
insl
out
jg
jnp
lret
stc
mov
iret
jmp
iret
lret
mov
rcl
lds
pop
scas
mov
cmpsb
test
cmp
and
jg
aam
int3
inc
fisubrs
cld
stc
repz
daa
in
ljmp
test
cmc
xor
das
jg
loopne
leave
lret
rclb
test
rorb
jg
lods
mov
pop
test
mov
out
mov
xchg
jp
jne
out
xchg
sub
stc
xchg
sub
xor
pop
xchg
jns
mov
scas
mov
jl
outsl
mov
cmp
jg
mov
or
das
adc
jae
xchg
inc
dec
lret
jle
hlt
dec
outsl
rorl
int3
dec
pop
es
pop
scas
mov
call
sbbb
sti
adc
das
lahf
mov
mov
push
into
cmpsl
add
sbb
inc
jns
int
fidivrs
or
aam
arpl
in
clc
add
mov
sub
int
test
fistl
adc
lahf
xchg
push
pop
jns
insb
add
jmp
lcall
fs
in
mov
cld
addl
in
fisttpll
dec
jg
sub
sub
xchg
push
push
mov
outsl
lahf
push
outsl
pop
shrb
lret
xchg
push
pop
fsubr
cmp
pop
mov
fcmove
sub
cmc
pop
and
dec
aas
out
dec
inc
stos
adc
scas
mov
les
mov
dec
adc
push
mov
hlt
lret
xor
das
aas
incl
loop
adc
rorb
test
xor
mov
cmpsb
icebp
mov
pop
call
mov
je
lock
mov
inc
xor
mov
in
xlat
sbbl
in
sub
and
test
mov
out
pop
fidivrs
pushf
mov
fstpl
add
das
push
dec
sbbl
mov
cld
stc
test
pop
xchg
cmpsl
fldcw
stc
sbb
pop
repz
add
mov
cmc
xor
stos
ret
sub
jge
mov
fxch
xchg
push
add
dec
xchg
or
fucom
lret
cmp
or
fimuls
xor
mov
fwait
je
fimuls
in
iret
lahf
aas
aas
push
xor
in
xor
adc
in
xchg
cmc
dec
test
ja
inc
outsl
dec
xchg
sub
bound
xchg
lds
and
pop
cld
fsubrs
mov
push
dec
mov
out
xchg
sub
and
sti
cltd
test
jmp
cmp
out
inc
rclb
into
or
dec
sti
repnz
xchg
adc
pusha
pop
leave
pop
mov
in
dec
sub
lret
mov
das
pop
push
cmp
add
sub
int3
add
add
mov
push
or
repnz
lcall
cld
or
ret
fs
scas
loopne
mov
lahf
aas
jg
xchg
jne
in
mov
in
pop
pop
sti
repz
or
push
fcomi
dec
bound
sarb
loopne
stos
mov
lea
lret
lods
and
or
ljmp
xchg
dec
push
push
or
repnz
jle
out
loope
cmp
xchg
mov
add
mov
jg
rolb
xchg
jg
adc
shld
stc
lods
push
cmpb
adc
jg
ficomps
xor
mov
stos
jns
xchg
pop
pop
xor
adc
aam
mov
test
lcall
aam
shrb
mov
pop
sbb
lret
out
into
push
pusha
push
repz
fldt
xchg
cmp
sub
fs
and
cwtl
mov
mov
push
notl
mov
fimull
lret
xor
and
testl
out
iret
pushf
jg
lock
dec
cmp
sub
inc
outsl
adc
pop
add
fcompl
push
pop
iret
cli
in
fs
insl
in
int
je
shrl
lret
cmpsb
ja
nop
out
or
mov
hlt
in
dec
jns
jno
cmc
popa
scas
scas
mov
pop
es
pop
xlat
int3
push
mov
repnz
xor
dec
xchg
mov
mov
popf
rclb
scas
dec
iret
pusha
stc
repz
pop
xchg
in
pusha
pop
mov
out
dec
into
rcrl
cld
fcoml
ss
ror
pushf
xchg
call
push
mov
xchg
sub
ja
sub
adc
push
cli
repnz
sub
add
mov
xchg
push
fimuls
out
and
pop
mov
ljmp
mov
test
loopne
repz
rclb
jle
lea
out
lahf
pop
out
ficomps
mov
icebp
adc
and
stc
repz
mov
pop
loopne
jg,pt
adc
cltd
xor
addr16
lret
bound
push
popl
mov
pop
addr16
cld
cld
sar
pushf
mov
pushf
dec
xchg
ret
ret
lret
mov
popa
inc
mov
sub
stos
dec
jge
push
mov
mov
stc
repnz
jle
mull
rorl
in
push
add
leave
push
popf
adc
xchg
push
pop
fbstp
pop
in
mov
clc
cmc
xchg
push
pop
jns
xor
or
or
pop
cltd
jle
lea
pop
ljmp
lea
or
dec
scas
cmp
repnz
arpl
lret
lahf
xor
jg
cli
les
scas
mov
test
outsl
repz
jge
test
sti
in
sub
adc
fucompp
cmc
jp
xor
icebp
sarb
pop
scas
aad
cmpsl
shll
push
inc
push
gs
sbb
iret
out
jne
mov
sub
stc
repz
loop
pop
sbbb
jns
cmpsb
aas
inc
adc
jg
cld
into
cmpsl
lock
mov
stc
push
call
iret
lahf
ret
xchg
jbe
jge
jb
mov
shrb
push
jg
xchg
lahf
scas
movb
xor
lahf
aas
lods
mov
sti
dec
mov
xor
repz
push
sub
insb
cmpsb
dec
int3
cmp
out
repz
addr16
int3
mov
xchg
xor
fstl
mov
lahf
aas
jg
out
pop
mov
push
jg
jbe
xor
out
mov
or
add
xrelease
stos
pop
jle
cld
mov
mov
in
xchg
mov
ja
add
jecxz
mov
add
xorl
inc
and
pop
xchg
ficompl
jg
cld
stc
cmp
aas
adc
mov
mov
sub
aas
je
jle
xchg
cmpsb
sub
loope
mov
inc
in
into
shl
repz
mov
movsb
ret
xor
scas
in
cld
aas
jg
cld
orl
dec
jne
pop
inc
adc
cmpsl
fwait
lods
notb
in
iret
lahf
xchg
cs
sub
clc
ret
mov
test
das
inc
dec
out
xchg
in
stc
repz
pop
add
insb
fiadds
sub
aas
push
fwait
push
mov
adc
std
pop
repnz
lret
mov
push
push
mov
jns
push
mov
scas
mov
push
or
out
leave
dec
imul
lret
fstpt
pop
scas
mov
fistps
outsl
sub
lods
sub
pop
lahf
mov
jle
fisubrs
repz
sbb
pop
movb
jle
sti
in
push
push
jecxz
push
dec
insl
ja
insl
cmp
out
out
sub
inc
loop
xorl
jns
pop
iret
lahf
aas
jg
mov
mov
mov
addr16
xor
fsubp
xlat
cli
repnz
inc
in
sti
stc
add
in
filds
xchg
dec
push
mov
cld
inc
popl
xchg
scas
jle
not
pushf
xchg
or
jle
das
dec
sub
mov
mov
mov
mov
adc
in
xor
incb
mov
aas
jg
cld
icebp
cmpb
out
loop
push
xchg
cmc
push
sub
call
sub
push
add
cmp
repnz
pop
aas
and
scas
sub
lods
xchg
mov
in
cmp
xor
lahf
adc
aad
push
mov
mov
lret
mov
mov
jp
pop
stc
data16
jle
repnz
xchg
mov
push
repnz
dec
ja
mov
jp
cld
aam
aam
lcall
scas
xor
test
inc
lods
dec
fucomi
mov
xchg
pushf
movswl
aas
adc
insl
pushf
icebp
cmp
sar
imul
xchg
test
jp
daa
mov
cld
ret
loope
mov
jb
and
and
jns
lret
iret
lahf
jg
insb
and
stc
fucom
adc
dec
jmp
lock
std
pushf
lea
jle
mov
jnp
cld
sub
or
push
mov
scas
mov
je
push
mov
pop
mov
and
scas
mov
lock
inc
ret
icebp
aas
cltd
fwait
mov
repnz
lods
dec
test
lods
in
mov
imul
test
mov
cld
stc
repz
sbb
pop
inc
fdiv
dec
adc
ror
lahf
aas
jg
xchg
dec
ds
push
repnz
mov
repnz
into
loopne
sar
dec
in
sbb
out
lret
sub
andb
cwtl
mov
mov
jo
outsl
iret
sbb
outsl
cmc
sbb
mov
adc
mov
cmp
sbb
insb
push
xchg
nop
fbld
push
pop
jns
insb
push
jg
xorb
xchg
es
js
xchg
es
paddw
stc
mov
test
gs
iret
out
lret
xchg
ja
mov
pop
in
adc
stc
xor
inc
mov
das
sub
mov
jl
int3
and
push
in
comiss
lahf
movsl
jnp
gs
callw
repnz
mov
imul
push
and
pop
adc
xchg
inc
lock
fisttpll
adc
push
in
dec
idivl
xchg
dec
inc
fisubrl
arpl
or
in
xchg
in
cmp
push
ss
mov
sbb
xchg
push
push
fidivs
jnp
repz
arpl
mov
outsb
fwait
bound
mov
lret
mov
sbb
push
jo
push
das
scas
mov
movsl
repnz
iret
push
jnp
std
std
adc
pop
getsec
mov
add
int
pop
ja
mov
scas
mov
test
imul
imul
lret
mov
shlb
xchg
rolb
loope
xlat
repnz
jp
push
mov
out
je
les
pop
cld
inc
cmp
sub
jns
in
outsl
add
lret
mov
mov
inc
in
sub
push
gs
fcmovb
mulb
xchg
sbb
scas
mov
sbb
cmpsl
cld
xor
mov
das
sbb
das
jnp
mov
inc
lret
xchg
sub
pop
mov
add
mov
and
repnz
push
pusha
fdivrs
jmp
mov
mov
inc
add
clc
xor
es
aas
mov
ret
mov
iret
vpcomud
in
sub
repz
push
loope
xchg
cs
ret
pop
sub
mov
dec
add
dec
mov
inc
and
pop
cld
sub
xor
ror
xor
push
jbe
cld
and
dec
ja
pop
jns
cmp
call
pop
xchg
pop
aas
mov
les
jnp
data16
xchg
negb
inc
pop
jmp
xchg
je
std
push
jg
fidivrs
xchg
ja
mov
loopne
out
sbb
push
pop
jecxz
xchg
lahf
cmp
add
rcr
mov
mov
pop
scas
or
inc
imul
ds
int
cli
iret
mov
jg
cld
cmp
jns
jbe
mov
mov
lcall
mov
and
cld
jecxz
lods
cmp
ss
jle
cld
stc
xlat
loop
sbb
mov
sub
inc
je
cs
sub
repnz
jecxz
fadds
out
fidivl
cld
stc
mov
enter
push
mov
lahf
aas
jg
cmp
outsl
insl
mov
test
jns
std
mov
cmp
pop
int3
cmp
xchg
push
enter
lret
dec
fildll
ja
pop
jns
push
fstl
pop
ja
xchg
sub
jns
xchg
jl
mov
mov
sarl
xchg
push
mov
rorl
sbb
push
pop
inc
cmp
jb
repnz
pop
jns
sahf
push
dec
pop
push
into
jb
ja
mov
mov
out
imul
outsl
and
xor
in
adcb
lods
pop
mul
in
ja
fiaddl
adc
aas
or
jns
or
push
daa
sbb
sub
in
or
sbb
stc
pop
sti
xchg
pop
pop
cli
jns
xchg
push
fldl
sub
sub
cmp
add
add
cltd
sti
xchg
lahf
xchg
lahf
jmp
sub
mov
lock
in
outsl
xchg
fcoml
or
sub
mov
std
repnz
xchg
mov
mov
out
pop
andb
out
add
inc
dec
mov
data16
xchg
xchg
add
scas
and
insb
pop
cld
scas
xor
subb
or
sub
repz
aam
mov
enter
repz
lcall
fs
push
sbb
and
pop
xchg
sti
in
sub
cmp
xor
lret
mov
rcrb
das
scas
mov
loopne
pusha
outsl
int
gs
scas
jg
cmp
icebp
sub
stos
mov
inc
lret
push
pop
inc
xor
push
sbb
jne
and
push
dec
jge
ja
iret
out
adc
aam
popf
js
aas
adc
mov
xor
push
or
xchg
lahf
aas
cwtl
mov
xchg
pop
stc
pop
shrb
and
jbe
icebp
repnz
mov
jge
jnp
repnz
shrb
jl
sahf
sbb
test
in
push
fdivrl
xchg
xor
mov
cmp
into
pushf
pop
xchg
arpl
sub
rcrl
je
pop
or
pushl
mov
mov
pop
mov
cmp
add
push
das
jle,pn
pop
jns
add
xchg
fwait
clc
mov
push
mov
pop
jns
xchg
std
popf
lret
cmp
inc
pushf
cmc
mov
jns
xchg
push
pop
xlat
dec
out
out
jge
outsl
movsl
xchg
push
pop
aam
jbe
bound
mov
pop
mov
or
sti
repnz
out
movsb
mov
dec
lock
and
lahf
int3
and
jle
cmc
hlt
add
pop
icebp
jae
pop
int3
mov
cltd
cli
repnz
in
les
iret
les
cld
push
jg
cld
inc
jnp
cmp
hlt
xchg
hlt
sti
cwtl
repz
lahf
movsl
and
ljmp
jge
pop
xor
mov
stc
stc
sub
cwtl
mov
add
jg
repz
call
mov
cli
and
jle
js
pop
sub
sbb
xor
imul
mull
movsb
cs
loope
mov
aas
or
jg
iret
nop
cmpsb
bound
in
movsl
lret
out
lahf
popf
add
pop
push
rolb
iret
mov
push
push
shll
movntq
jge
stc
repz
enter
dec
aam
and
mov
aas
jg
sub
or
inc
lods
xchg
mov
out
lahf
pushw
mov
push
dec
insl
pop
scas
mov
pop
cwtl
enter
sub
jnp
sub
fsubrp
lret
sub
orl
movsb
or
pop
scas
decb
enter
mov
mov
ficomps
mull
cmp
adc
in
lcall
lret
inc
lahf
aas
jg
push
jae
in
jnp
out
das
sub
push
dec
add
lret
iret
or
sbbb
or
lret
sbb
pop
mov
aas
jg
inc
fwait
insl
and
push
jae
push
jp
push
stc
stc
repz
xor
adc
aaa
dec
add
mov
mov
dec
adc
fwait
add
lds
xchg
push
cmp
loop
sbb
sub
std
std
cmp
xchg
cld
out
or
xor
push
jb
xchg
push
mov
dec
cli
mov
push
fdivrp
movsl
insl
ljmp
dec
popf
jl
jno
pop
jns
aam
push
addr16
or
out
das
fcomps
std
sahf
mov
mov
repnz
nop
add
daa
push
xor
mov
jg
cld
arpl
out
pop
pop
dec
sbbl
xor
lahf
push
lret
adc
jae
pop
jo
jmp
and
jg
cld
stc
pop
mov
cmp
mov
adcb
test
das
aas
jg
or
sahf
inc
in
out
lahf
mov
in
movsb
loop
shll
clc
xor
xchg
outsl
out
out
cmp
das
lahf
aas
jg
push
shll
mov
pop
inc
std
jb
fisttpll
sbb
shl
std
xor
testb
ficomps
daa
push
adc
out
decb
fstps
hlt
scas
dec
stos
popf
mov
outsl
out
sub
fldl
pushf
push
pop
pop
push
scas
mov
outsl
push
cmpsl
in
or
sbb
cs
mov
inc
roll
xchg
cld
cltd
fisubs
or
mov
add
inc
push
out
lahf
inc
ror
push
mov
fiaddl
stc
push
into
jmp
mov
inc
adc
out
lahf
aas
gs
sub
mov
cld
stc
repz
add
cltd
rcrl
cltd
cmp
push
dec
iret
lahf
aas
jg
inc
es
rcrb
or
in
imul
repnz
shlb
daa
nop
xchg
jmp
rcrb
sbb
xchg
push
pop
jns
pop
repz
in
add
mov
pop
jns
scas
and
scas
test
inc
inc
mov
fisubs
pop
pop
jns
xchg
jle
cmp
pop
clc
jle
xchg
inc
cli
sbb
mov
stc
cld
jle
sub
mov
pop
mov
cltd
jns
adc
cmpb
lods
xchg
and
and
data16
and
aad
subl
repnz
sbb
imul
and
scas
sbb
movsb
in
psubusb
flds
lret
mov
lahf
xchg
mov
push
fwait
clc
sti
in
lret
out
inc
pop
getsec
mov
ds
inc
call
dec
sub
js
popf
or
mov
in
data16
out
cmp
lret
popa
or
aas
loop
or
ret
aad
leave
popl
pop
mov
cld
add
out
xchg
fistpll
jle
aas
cmp
mov
mov
push
jg
aas
mov
in
popf
mov
out
stos
pop
outsl
cmpsb
ja
pop
jns
xchg
lcall
adc
ds
xchg
push
lret
out
jb
lret
cmc
xchg
in
emms
jg
pop
pop
push
mov
dec
iret
xchg
jb
pop
jns
xchg
sub
pop
mov
dec
fwait
mov
out
lret
dec
aam
xchg
dec
xor
into
and
in
push
pop
dec
cltd
lahf
ds
xchg
push
mov
ficoms
test
leave
push
sbb
pop
shl
add
in
cmpsl
inc
sbb
movsl
push
cmc
imul
out
shrb
fs
dec
push
and
pop
stc
cld
stc
repz
movsb
fs
pop
inc
push
andb
jg
pop
jle
sti
lods
sub
cmp
mov
mov
in
lahf
mov
loop
rorb
xor
div
out
fucomip
fistpll
dec
mov
lcall
or
iret
test
in
pop
jns
ret
lahf
mov
push
fbld
pop
add
xchg
push
out
xor
pop
cmpb
fimuls
inc
fisubrs
ret
adc
dec
cli
mov
jg
pusha
rcll
imul
rorl
lcall
outsl
iret
pop
cmc
xorb
sub
sub
mov
xchg
cmp
shll
inc
jne
pop
pop
movsb
pop
shr
dec
jg
out
fisttps
shrb
lret
bound
push
fdivrp
out
and
cmpsb
pop
xor
pop
insb
jmp
jo
in
push
push
fisttps
outsb
in
push
fimuls
dec
lret
mov
xchg
ja
pop
jns
push
mov
inc
stos
fsubs
mov
jns
in
ret
mov
mov
and
mov
dec
adc
jle
stos
pop
incb
les
add
xchg
aas
add
fbld
jo
mov
lret
mov
sbb
repnz
jle
call
push
mov
adc
add
in
and
aaa
ret
and
pavgb
popa
push
xchg
scas
mov
mov
mov
mov
es
sub
adc
pop
and
pushf
scas
in
movsl
mov
jl
or
test
jl
ja
fidivrs
sahf
lret
and
rclb
add
aas
jg
mov
push
xor
mov
jmp
iret
pop
sub
jle
jge
stc
repz
sbb
xchg
cli
pop
cmpb
decb
fisttps
inc
mov
das
aas
jg
cmp
shll
clts
push
repz
cs
add
xrelease
cmc
insl
jl
stc
push
mov
adc
mov
jmp
push
das
jg
jno
cmpsb
addr16
fcoml
ljmp
push
pop
fisubrl
and
pop
cld
stc
repz
add
mov
fistps
cmp
lahf
aas
jg
mov
pop
cmpsb
xor
xchg
test
scas
mov
filds
in
fsubp
fmull
into
outsl
add
orb
das
aas
dec
mov
push
lods
push
roll
shr
xchg
iret
pmaxsw
adc
pop
or
in
pop
outsb
or
dec
in
push
daa
jns,pt
fstpl
mov
insl
jb
rorl
push
jecxz
fcoml
repz
push
pop
and
dec
shlb
dec
lea
pop
jns
and
lret
push
je
pop
in
or
out
shrb
stc
push
push
push
cmp
repz
into
mov
shlb
mov
and
filds
and
clc
repnz
lret
in
nop
lea
lods
jp
aas
stc
repz
ficomps
arpl
int
dec
push
adc
lret
jmp
adc
cmp
test
lret
sub
jl
jns
dec
sbb
lahf
movsl
cmpsb
jp
jecxz
enter
ret
pop
sub
inc
dec
push
fadd
jmp
push
lret
outsl
pop
inc
incl
jmp
jae
lcall
loopne
jle
or
scas
mov
mov
push
pop
das
xor
in
sub
or
lahf
aas
adc
pop
cld
lea
inc
es
lock
repnz
push
repnz
fdivrp
sti
repnz
or
sub
pop
dec
call
inc
out
fdivs
add
and
jmp
cld
stc
mov
jns
xchg
sbb
hlt
or
dec
inc
lea
das
jg
ss
out
xor
out
lahf
cmp
push
xchg
and
addl
and
add
xlat
pushf
bswap
addr16
dec
mov
lret
dec
mov
cmp
dec
lcall
loope
and
mov
and
xchg
addr16
pop
out
mov
sub
adc
and
sub
in
loop
jecxz
out
or
loope
push
cmc
jb
and
fadd
lahf
outsl
mov
jns
iret
pop
sbb
cmpsl
das
mov
ret
cld
cld
sbb
call
fdecstp
mov
lahf
aas
jg
mov
push
xor
push
jbe
pop
ret
fwait
mov
sbb
stos
jnp
cli
in
cmp
jae
xchg
fistpll
stos
aas
jg
cld
push
adc
flds
sahf
or
pop
ret
test
or
out
inc
lods
mov
mov
cmc
in
push
repz
mov
pop
out
jg
cld
stc
add
mov
shll
xlat
pandn
jae
mov
idiv
repz
int
or
bound
adc
rolb
jle
cld
hlt
xchg
xchg
and
gs
lahf
aas
mov
xchg
sbb
sbb
stc
repz
in
dec
xchg
orl
repz
pop
and
mov
repnz
push
jp
repnz
sti
mov
jmp
pop
mov
push
pop
jns
ret
jno
cmpsl
vcvtsi2ss
or
add
stc
mov
lret
lret
imul
mov
cld
sbb
push
mov
jns
dec
and
ss
sbb
jg
loopne
fisttpll
pop
lret
xchg
aaa
scas
mov
int
pusha
adc
shl
xor
sbb
inc
aam
ja
repnz
sbb
mov
lcall
dec
sti
hlt
nop
jne
shll
mov
enter
mov
mov
aaa
mov
out
dec
loopne
xor
xor
decl
mov
mov
sbb
lret
popa
jg
aas
mov
sbbb
out
outsl
out
fsub
iret
movsb
inc
mov
test
ss
repz
cld
stc
repz
cs
dec
repz
popf
push
incl
iret
lahf
aas
jg
sbb
jge
xor
mov
sub
jbe
hlt
in
dec
aas
jmp
ds
mov
out
loope
lods
adc
fdivrl
xchg
negb
jne
add
xchg
mov
mov
iret
push
cltd
xchg
lods
dec
mov
int3
dec
pop
clc
repnz
test
aaa
mov
out
sub
and
pop
mov
aas
cmpsl
jg
dec
std
repz
fstps
cmc
jle
sbb
cmp
mov
mov
pop
xor
outsl
xor
aaa
ret
mov
adc
xchg
pushw
cltd
mov
sbb
sbb
push
popa
loope
push
mov
or
lahf
mov
enter
in
insl
cwtl
dec
or
in
out
add
cmp
jne
pop
in
pop
xor
scas
jb
and
push
dec
rcrl
lahf
mov
lret
cmp
push
fwait
scas
jg,pt
sub
lret
jle
pop
mov
nop
stos
lret
mov
add
repnz
shll
mov
out
adc
xchg
fwait
push
fld
mov
dec
push
repnz
fwait
fs
xlat
lret
out
xchg
sub
cmp
pop
or
loopne
xchg
mov
add
lahf
lods
xor
adc
inc
mov
in
cmpsb
pop
scas
push
mov
pop
xor
ret
push
pop
jns
or
cwtl
or
in
lea
pop
jg
fsubr
jmp
in
ja
mov
rcll
faddl
in
pop
leave
lahf
gs
lret
mov
aas
push
ret
insl
lahf
mov
rol
mov
dec
mov
arpl
repz
push
mov
xor
arpl
sub
push
cmp
pop
or
dec
jmp
mov
out
shll
aad
jmp
pop
jmp
sub
mov
test
fst
sbb
gs
pop
icebp
xchg
or
aaa
push
out
mov
push
aaa
js
push
clc
sub
add
stc
xchg
and
and
fidivrs
jg
cld
sbb
adc
dec
addl
push
xchg
repz
lahf
pop
stos
insl
sbb
imul
sub
lcall
cmpsl
mov
nop
mov
call
xchg
ja
jns
or
ret
cwtl
rcrl
pop
pop
jns
add
pusha
add
jg
push
in
scas
out
std
sub
dec
and
cmp
test
test
comiss
std
mov
movsb
pop
lock
stc
pop
dec
int3
cld
pop
rcr
je
add
push
pop
lahf
adc
data16
sahf
jl
xchg
cs
jp
cmpw
cld
stc
mov
test
and
push
jae
aas
jg
xor
out
jne
dec
shlb
stc
repz
pop
aad
bound
ret
rcl
mov
pop
sbb
sbb
and
xchg
xchg
pop
out
dec
add
dec
sbb
fsts
repnz
jg
and
jbe
dec
pop
add
jge
rcll
jnp
fmull
xor
cmp
out
pop
and
iret
aas
add
xor
dec
cs
pop
repnz
cmp
lahf
dec
enter
out
cli
push
test
loop
mov
cld
stc
or
subl
add
pop
movsb
xchg
aas
adc
xchg
negb
lock
mov
mov
jb
repnz
mov
mov
sbb
imull
out
jle
mov
add
dec
dec
adc
push
mov
push
jl
je
and
ja
push
bound
repnz
jnp
push
push
cmp
push
mov
jno
fcoml
mov
sbb
repnz
inc
xor
push
popf
pop
ret
jno
out
pop
pop
insb
mov
js
sub
ret
stc
stc
cld
push
mov
pop
aam
mov
iret
cs
xlat
fldl
lock
sub
dec
sbb
adc
rcr
and
scas
mov
inc
lods
ret
cmpsl
sbb
xchg
cmpsl
scas
mov
fs
cmpsb
or
and
and
cli
in
sub
ret
lods
sub
jg
cld
add
jmp
fdivs
mov
iret
lahf
aas
arpl
cmpsb
mov
cld
cld
stc
repz
scas
and
in
out
nop
xor
lahf
enter
xchg
mov
lahf
pop
loop
and
stc
cli
icebp
xor
sbb
lcall
mov
fidivl
jne
push
fidivrs
pop
xchg
mov
sarl
adc
push
push
dec
lock
mov
cld
xor
mov
xorb
lret
enter
int
shlb
jns
fcmovbe
cli
mov
jp
jo
cmpsb
pop
sub
popf
filds
mov
aas
xlat
enter
push
mov
inc
in
rcrb
test
out
jg
sub
scas
mov
xchg
imul
dec
sti
push
xchg
push
or
sti
fcmovbe
xchg
push
pop
jns
je
jmp
int
ljmp
outsl
aas
pop
push
aaa
std
jns
inc
test
jnp
in
add
int
test
in
ja
push
sbbl
add
dec
push
leave
ficoms
mov
out
inc
dec
jle
add
mov
out
xchg
mov
lds
pop
inc
push
pop
test
fdivrp
and
push
pop
jns
cli
xor
dec
mov
or
fistl
jns
add
repnz
adc
xchg
fcomi
cmp
mov
aas
mov
push
mov
jl
xlat
xchg
out
in
stc
repz
rsm
test
popf
out
pusha
out
movsl
out
je
push
mov
pop
mov
cmc
ljmp
cld
add
pop
mov
pop
and
lods
icebp
xchg
lods
sub
out
push
push
push
push
out
in
out
int
scas
mov
xchg
inc
jp
cmp
cmp
xor
cld
stc
test
jle
testb
pusha
and
lret
sbb
pop
xor
mov
leave
sub
jo
jae
aam
mov
cld
stc
cmpsb
xchg
ds
clc
pushf
push
std
push
jl
dec
lret
lahf
aas
mov
jmp
dec
out
rcrb
clc
fnstcw
movsb
into
dec
andl
mov
xchg
lahf
aas
jg
fisttps
mov
inc
in
mov
and
mov
jg
in
movsl
lret
jp
push
dec
jne
out
lahf
into
inc
mov
pop
les
nop
cld
stc
xchg
icebp
pop
xchg
cmp
pushf
mov
add
mov
push
lret
xor
adc
pop
lret
push
lcall
pop
jns
lret
inc
and
mov
shlb
popl
scas
ret
jns
xchg
push
daa
movsb
lods
push
lahf
mov
add
jge
popa
in
push
pop
popf
lds
push
cmp
bound
push
pop
jns
jg
ss
pop
call
mov
in
repz
lret
das
mov
mov
xchg
sbb
sub
inc
lea
imul
add
and
inc
ja
out
das
push
pop
out
inc
popa
push
inc
or
lret
ret
fwait
ret
out
jle
add
dec
mov
scas
mov
pop
aam
stos
lahf
add
test
add
in
sub
mov
scas
xchg
push
pop
jns
jno
xchg
jns
dec
push
mov
push
pop
jns
test
or
mov
jns
xchg
and
xchg
inc
arpl
jg
jnp
xchg
movsl
shrb
push
divb
jns
pusha
cmpsb
jecxz
das
ljmp
out
std
add
stc
out
insb
imul
mov
push
js
xchg
sub
mov
xchg
sbb
mov
mov
jne
leave
cli
mov
out
jle
roll
loopne
mov
mov
leave
sub
fidivl
ds
mov
scas
mov
mov
lahf
jp
mov
pop
repnz
mov
cs
jmp
sub
aad
mov
out
and
sub
pop
or
enter
insb
sbb
lret
mov
jle
je
sbb
cld
stc
in
add
sub
xchg
xor
das
sbb
std
jge
fstl
outsl
dec
call
add
cwtl
push
pop
jns
fists
dec
push
inc
pushf
push
xchg
cli
mov
mov
mov
jne
and
repnz
ficompl
imul
sub
das
lcall
je
or
loope
xor
inc
sub
int3
and
mov
pop
sbb
ss
mov
pop
repnz
sbb
ret
ljmp
icebp
sti
sar
cmp
jmp
lret
xchg
cli
and
jmp
sub
jae
ret
mov
mov
xchg
fnstsw
push
das
pop
outsb
fists
sbb
outsl
jg
mov
popf
js
jge
and
and
lahf
aas
inc
mov
jae
pop
lret
in
xchg
cmpb
mov
cli
and
inc
jb
jns
xchg
push
sti
mov
pop
cs
push
inc
rcrl
scas
ds
xchg
mov
xchg
xchg
and
mov
gs
push
divl
pop
push
or
cld
sar
lds
mov
sar
cltd
push
sbbl
das
jg
add
ret
sahf
aas
sahf
loope
cltd
repz
test
iret
jae
dec
cmc
push
in
jle
cld
stc
js
mov
jle
mov
or
xor
sub
pop
les
popa
cs
loope
mov
dec
fstps
cltd
repnz
mov
mov
mov
in
sub
lahf
mov
jnp
push
lret
or
shrb
dec
lahf
lock
jg
cld
outsb
stc
xor
std
outsb
fs
cwtl
dec
xchg
lds
int
push
push
out
mov
fs
jg
aas
out
jge
push
sbb
movsl
add
das
lahf
fldl
push
push
pop
out
mov
pop
stos
test
xchg
cmp
xchg
addr16
sbb
jle
dec
scas
mov
mov
mov
popa
rorl
fiaddl
push
repnz
pop
xchg
push
jmp
lahf
lret
mov
push
mov
sahf
iret
sub
add
xor
mov
lret
das
mov
into
sub
mov
pop
xchg
mov
push
inc
push
mov
dec
loopne
dec
jmp
in
ds
jne
testl
mov
in
add
pusha
mov
mov
repnz
cli
not
jle
psrlw
repz
xchg
jo
push
fdivrp
adc
ja
lea
and
pop
jns
cmp
jp
lahf
push
xchg
xrelease
in
das
jb
ss
out
and
fs
adc
mov
lods
or
dec
out
add
push
xchg
lahf
aas
sbb
pop
xor
push
mov
stos
ja
sub
mov
jp
stc
cmp
push
cmpsl
jae
fdivrp
std
pushl
test
pop
push
cld
or
xchg
and
pop
in
sahf
sbbb
sub
fldl
in
movsb
mov
sbb
scas
cs
xchg
push
lret
adc
or
in
int
add
fistpll
cld
inc
fiadds
loope
sti
aam
addb
aas
aas
and
pop
jo
push
pop
jne
jo
repnz
xchg
mov
mov
fistps
cmp
sub
and
cmc
mov
shl
pop
clc
in
das
cld
jle
sbb
sbb
imull
in
outsl
mov
rorb
fucomi
repnz
fistl
call
cmpsb
movsb
repz
push
dec
jp
movsl
mov
cwtl
out
jg
cld
stc
or
in
fiaddl
idiv
lea
mov
and
outsb
cmp
dec
insl
jae
sub
aaa
or
cld
jb
jl
sbb
pop
scas
xchg
daa
mov
insb
dec
testb
mov
push
mov
inc
addr16
in
imul
cld
stc
repz
xchg
inc
insb
lock
push
mov
test
aas
jg
xchg
mov
ss
push
ljmp
cli
sub
cmpsb
mov
push
fimuls
add
decb
pop
loope
push
and
jns
pop
js
lods
adc
test
imul
pop
add
in
push
pop
add
stos
cld
test
fwait
out
aaa
mov
mov
push
gs
call
pop
adc
xchg
ja
jno,pn
lds
pop
dec
loopne
jb
repnz
mov
inc
fsubrl
pop
clc
and
decb
test
sub
jl
jns
xchg
out
lahf
jg
das
mov
fimuls
loop
in
iret
push
ret
sbb
mov
leave
setne
jns
test
loope
sarl
mov
das
mov
push
outsl
test
jno
xlat
call
xlat
stc
sahf
mov
mov
sbb
jns
xchg
ja
sti
push
scas
or
mov
mov
in
push
pop
push
rorb
push
mov
test
sahf
pop
xorb
jns
mov
push
fidivrs
les
jns
xchg
pop
jge
mov
int3
repz
xor
in
push
sahf
lock
mov
orl
xor
iret
scas
mov
jg
xchg
addr16
jae
xor
mov
and
cmp
push
pop
imul
pop
gs
adc
outsl
pop
outsb
mov
call
sbb
jg
cld
into
andl
or
nop
dec
js
sbb
xchg
xor
xchg
iret
lahf
scas
or
ja
xchg
icebp
jns
lret
imul
jo
inc
pusha
push
das
jge
dec
xchg
shrb
push
pop
test
or
push
int3
mov
aas
jg
push
and
cmp
ljmp
divps
ds
sbb
mov
cld
stc
int
icebp
mov
aas
push
int3
notl
adc
test
iret
lahf
aas
and
mov
push
addb
cld
stc
repz
dec
and
fisubl
xchg
sbb
jge
mov
popf
pop
ja
mov
or
mov
pop
lcall
outsb
dec
ret
stc
aaa
lock
into
inc
gs
insb
js
xor
aas
push
mov
fcompl
add
stc
repz
mov
call
sub
mov
test
cld
subb
mov
and
loopne
iret
push
and
mov
and
jg
pusha
jle
test
push
sbb
repz
lahf
ret
and
repnz
int
jg
jns
cld
stc
in
dec
aaa
loopne
push
push
cmp
cld
mov
fiadds
lcall
mov
das
pop
stc
sarb
mov
js
mov
xchg
lds
mov
repnz
jb
loop
insb
shrb
cmp
movsl
lret
mov
stos
divb
jl
ret
push
cmpsb
repnz
or
gs
pop
test
push
out
sbb
data16
inc
jo
and
ds
incb
jne
repnz
pop
sbb
aam
pop
cmc
mov
cmc
lret
sub
mov
in
sub
movsb
mov
jne
icebp
xchg
inc
data16
scas
mov
xor
jmp
idivb
ret
sahf
or
inc
les
jg,pn
cwtl
dec
mov
test
push
fisubrs
xor
sti
cmpsl
cmpl
lods
jnp
mov
lods
insl
and
out
fwait
mov
std
repnz
pop
push
jmp
ja
mov
shll
inc
sbb
cmp
jo
xor
pop
aad
fists
lods
xchg
mov
sbb
mov
rcr
movsl
jge,pn
jb
pop
jg,pt
dec
adc
mov
dec
daa
mov
jne
iret
scas
mov
sbb
cld
stc
repz
jne
cmp
push
test
xchg
fdivl
or
outsb
lret
movsl
das
aas
jg
cmc
xchg
pop
rcrb
mov
outsb
sub
shrb
mov
mov
out
pusha
loopne
sub
sbb
push
ror
inc
mov
in
sub
inc
mov
shll
inc
es
xchg
iret
cld
stc
adc
scas
shrb
cs
pop
dec
fidivrl
addr16
aas
jg
or
cld
fs
and
mov
dec
stc
repz
outsb
pop
push
xlat
cmp
cs
xor
pop
cld
mov
mov
repz
mov
lahf
aas
jg
into
leave
add
dec
leave
xchg
adc
xchg
xchg
cmp
jmp
sti
repnz
add
jl
mov
loopne
movsb
pop
scas
pop
test
xor
out
fcoms
lods
or
xchg
mov
fdivrp
mov
in
scas
in
in
mov
test
dec
movsb
ror
lahf
idivb
and
lret
mov
and
aam
scas
mov
aaa
push
xchg
inc
movswl
mov
inc
out
lret
leave
sub
adc
movntps
push
popa
cmp
dec
or
movsb
scas
mov
sarb
in
cmpsl
ds
test
add
cmp
push
pop
or
scas
jl
in
dec
outsb
cmp
mov
dec
cmp
mov
jo
mov
dec
in
sub
cmp
std
repnz
push
shl
mov
int
stc
rep
sahf
cmpsl
jne
loopne
sub
in
jle
dec
cld
xchg
mov
fcomps
jmp
pop
xchg
iret
dec
dec
sbb
inc
push
stc
aad
lret
or
repz
push
mov
shl
sbb
scas
inc
out
cld
stc
add
sahf
xchg
dec
inc
pushf
enter
dec
repnz
data16
rclb
repnz
or
scas
int
jle
lcall
sub
in
loopne
jne
aam
fadds
std
cmp
jno
mov
jl
aaa
lret
out
scas
push
lret
and
sti
mov
xchg
das
and
sbb
cld
pop
int3
lahf
sbb
push
fimuls
lock
test
mov
pop
jns
xchg
pop
mov
loopne
cs
fdivp
in
push
addl
test
out
iret
push
cld
stc
sbbl
jmp
mov
pop
jle
lret
pop
pop
stos
das
xor
iret
int3
sub
enter
push
jg
mov
adc
xchg
cltd
xchg
les
mov
pcmpeqw
mov
sub
repnz
xchg
iret
aam
je
xchg
xchg
enter
sbb
sub
pop
lock
ret
sub
jg
cmpb
lcall
add
jns
push
jecxz
or
dec
roll
arpl
fildll
mov
sbb
iret
or
or
push
pop
jns
xor
mov
sub
lret
in
jbe
pop
add
fsts
add
mov
sub
xlat
das
xor
stos
cld
stc
repz
sbbl
sub
aas
jg
daa
mov
jmp
dec
or
repz
in
imul
inc
nop
lret
repnz
jecxz
lret
or
cmpsb
sub
mov
cmp
test
push
insb
pop
pop
push
mov
test
in
add
scas
pop
roll
mov
lods
pop
loopne
mov
sbb
lret
jmp
psrld
cli
or
lret
mov
xchg
push
jmp
repz
mov
leave
xor
test
aam
out
mov
inc
imul
fstp
lock
loop
cmp
lret
iret
roll
sub
jl
sub
inc
mov
iret
mov
xchg
mov
mov
lods
or
pop
iret
lahf
aas
jle
pop
mov
sbb
sub
aad
hlt
repnz
or
mov
and
stc
fs
xchg
cmp
fsubrp
and
mov
in
outsl
jns
out
jno
cli
repnz
incl
inc
bound
add
aas
lea
mov
inc
push
sub
pop
pop
jns
add
or
loope
lahf
push
push
iret
lahf
pop
push
decb
stos
outsb
pusha
cmp
mov
xchg
mov
sub
pop
push
mov
xchg
jae
cmp
jbe
mov
jg
inc
outsb
test
popf
nop
or
lcall
xchg
lret
lock
pop
cmc
ja
das
fstps
out
sub
jo
iret
test
scas
lods
jne
and
push
pop
mov
mov
in
lods
push
fucom
xor
inc
or
jl
add
das
popf
daa
xor
jno
dec
fildll
lahf
aas
imulb
out
fistps
insl
pop
jns
fnsave
out
scas
jns
adc
shlb
xchg
dec
hlt
mov
xchg
push
lret
gs
pop
shrb
cli
or
popf
push
lret
add
sub
lods
mov
inc
sbb
shl
lahf
aas
cmp
cs
test
in
adc
div
sub
aas
leave
ds
sbb
clc
push
pop
jl
jl
jno
mov
pop
dec
or
jg
dec
and
ror
outsl
pop
int3
in
and
lahf
les
scas
xchg
lret
xor
sbb
sti
gs
cmc
and
out
aas
or
push
xlat
dec
int3
dec
mov
stc
pop
add
pop
xor
scas
pop
pusha
test
pop
test
repz
sbb
repnz
outsb
cmp
arpl
jmp
mov
jg
jle
test
push
nopl
sbb
mov
xchg
jns
or
xor
add
push
pop
stc
mov
lods
loop
pop
inc
sahf
mov
in
loop
lock
sbb
icebp
bound
xchg
rcl
cmp
mov
bt
ds
call
and
repnz
insb
pusha
adc
pop
mov
bound
les
das
cld
das
or
scas
mov
hlt
insb
nop
mov
popf
inc
mov
repnz
xchg
sub
jge
les
scas
mov
mov
or
mov
or
scas
mov
pop
push
ret
and
scas
sub
lret
leave
or
jle
incl
gs
lea
mov
fdivs
fisttps
jne
jbe
sbb
sub
sbb
jns
stos
lahf
pop
repz
imul
jns
popf
adc
inc
push
sub
jl
jp
incb
insl
sbb
repz
sub
iret
lahf
aas
pop
jno
mov
movsl
sahf
icebp
dec
dec
nop
add
stc
repz
mov
int
pop
sti
test
jmp
nopl
push
pop
jns
adc
adc
adc
aas
pusha
pop
jns
xchg
xor
pop
push
aas
xchg
lahf
pop
or
dec
pop
outsb
xchg
adc
repz
in
push
aas
in
sbbb
cmp
popf
addb
jle
cld
mov
fldl
and
mov
fmulp
push
cmp
cld
cmpsb
movsl
jp
in
out
mov
das
mov
aam
aad
mov
js
lret
mov
push
jge
pop
jns
mov
cmp
cmp
add
pop
mov
xor
js
mov
mov
dec
adc
dec
sub
lds
ja
xchg
repnz
js
inc
dec
rolb
push
adc
xchg
jmp
inc
xchg
lahf
sbb
rep
call
icebp
lods
mov
mov
out
scas
pusha
shll
fsubrs
lcall
es
mov
sub
enter
rcrl
adc
pop
loope
fldcw
faddl
repz
test
addr16
aas
jo
adc
lret
lea
lea
adc
sub
sbb
leave
inc
jno
pcmpgtd
cmc
in
cltd
ret
pushf
pop
repz
aaa
js
add
sahf
push
xchg
xchg
je
jg
pop
cmpsb
ja
in
out
push
int3
mov
dec
decl
out
shrb
stos
lret
lret
sub
insl
stc
xchg
hlt
lret
xlat
mov
pop
inc
push
aad
jg
cld
push
mov
cli
popa
and
int
mov
pusha
push
insb
out
inc
out
push
xor
scas
dec
xlat
pop
jge
ret
pop
xor
add
xchg
dec
imul
jns
das
popl
das
scas
sub
das
sahf
stos
or
jbe
xchg
sarb
and
test
mov
fidivrl
xlat
cmpb
out
scas
scas
iret
lods
dec
out
xchg
mov
mov
and
cld
stc
jb
mov
data16
sub
sti
xor
jns
xchg
aas
cs
jno
jb
cmp
and
xchg
push
pop
mov
test
pop
jns
pop
std
inc
cmpsb
push
jl
mov
jge
sbb
jns
loopne
es
das
das
and
pop
lds
xchg
jge
js
inc
pop
in
cmp
lahf
leave
jo
mov
lock
xor
repnz
dec
ds
pop
cmpsl
and
sub
mov
sti
les
in
cmp
scas
mov
pop
loop
fisubrl
cmp
vphaddubq
adc
aam
repnz
pushf
dec
inc
lds
pop
sbb
into
xchg
inc
iret
lret
mov
loope
pop
aam
int
out
mov
testl
add
lahf
aas
mov
jmp
dec
lret
pop
rcr
fbstp
call
cld
stc
repz
out
cmc
hlt
fwait
and
imul
aas
jg
in
insb
ret
or
mov
repz
movsb
mov
shl
xchg
test
aas
jg
cld
lret
or
xchg
add
push
jp
dec
pop
cmp
shrd
lods
xchg
mov
test
aas
and
mov
jle
sub
das
add
mov
mov
sub
sbb
and
mov
lret
jnp
xchg
lock
adc
aam
lret
mov
or
dec
fldenv
cld
cmp
aad
jo
jl
mov
imul
jle
stos
pop
scas
and
das
imull
aas
mov
repnz
or
add
jmp
mov
xchg
dec
inc
xchg
cwtl
pop
pop
insb
mov
rcrl
pop
aad
nop
jne
xor
repnz
pop
xchg
andb
lret
sub
sbbl
lret
outsl
jmp
push
movsb
imul
test
adc
jge
lret
inc
cmp
sub
mov
gs
ljmp
jp
repnz
in
cmp
push
mov
in
ret
mov
mov
dec
jl
push
sbb
pop
ja
sub
sub
leave
out
in
cmp
pop
fucomip
daa
add
aas
jp
adc
stc
pop
dec
fs
lods
dec
sbbb
cs
mov
cmpsl
nop
mov
iret
xor
sub
decl
add
add
jo
into
stos
inc
sbb
out
lahf
aas
sarb
int
push
loope
mov
mov
out
pop
inc
scas
leave
das
sbb
ficoms
scas
in
mov
ja
mov
dec
or
sbb
push
out
lahf
pop
push
mov
fldl
cs
mov
repnz
sarl
push
sub
aas
or
cld
popf
sahf
cmp
rcr
xchg
lahf
idivl
imul
pop
sahf
xchg
repnz
in
jecxz,pn
sub
nop
fs
lret
mov
dec
es
out
xor
movsb
int3
and
repnz
sbb
cmpsb
push
sbb
dec
jecxz
std
std
outsl
inc
dec
adc
push
jl
mov
sub
unpcklps
iret
mov
lret
mov
insb
mov
stos
pop
scas
mov
xorl
dec
pop
repz
iret
aas
mov
test
push
popf
iret
sbb
pop
jns
lret
and
das
icebp
jns
into
sarl
pop
into
sahf
jle
popf
xor
aad
mov
enter
hlt
jo
inc
mov
sbb
je
sbb
stc
or
repnz
pop
xchg
mov
add
aad
scas
in
mov
jl
mov
dec
cmp
lret
cli
pop
imull
mov
jg
mov
xchg
sbb
stc
repz
jle
adc
mov
jne
daa
mov
in
data16
scas
cld
add
repnz
jae
outsb
ficoml
jge
inc
mov
mov
xor
fdivrl
loopne
mov
pop
inc
inc
fwait
aam
inc
adc
stc
repz
enter
jo
pop
mov
je
fnstenv
dec
stc
imul
lahf
aas
inc
shlb
rcl
jo
iret
clc
in
pop
add
clc
std
dec
inc
mov
test
add
shl
ljmp
lods
cld
add
aad
ret
int3
ds
std
jge
in
jo
jg
daa
jb
lahf
hlt
adc
imul
mov
das
lahf
xchg
loop
adc
xor
outsl
sub
lock
icebp
adc
jg
dec
sbb
movsb
xor
scas
and
bnd
sbb
call
jno
out
nopl
ret
pop
push
sbb
mov
mov
andb
mov
test
aaa
xor
dec
sti
ret
repnz
or
mov
movsb
mov
cmp
xchg
cli
sti
lock
sti
iret
roll
ljmp
push
fisubrs
sub
clc
jnp
repnz
repz
lods
push
fisubrl
push
das
cwtl
inc
dec
jle
jg
dec
cmp
fsubrl
mov
aas
daa
jo
cwtl
and
push
scas
push
cld
stc
repz
mov
mov
xchg
sub
divb
lahf
aas
jg
pop
movsb
imul
jg
rcrb
out
inc
loope
int
ja
aaa
mov
out
cmpl
scas
fmuls
xor
cld
out
lahf
aas
bound
call
mov
or
add
leave
and
out
mov
cld
stos
leave
rcrl
jno
scas
mov
mov
lahf
jp
jnp
scas
jno
das
jle
push
loop
std
jb
mov
pop
push
cmp
in
or
loopne
and
jbe
jnp
sub
nop
mov
in
mov
jl
rorb
xchg
push
fdivrp
push
shrl
xchg
pop
loop
and
push
pop
jns
stos
loope
push
test
in
xchg
xchg
adc
xchg
cmpsl
mov
xchg
fwait
xchg
pop
mov
enter
out
inc
jns
xchg
ja
roll
cmc
push
out
sub
arpl
pop
pop
cmpsb
es
inc
sbb
repz
movsb
dec
inc
lea
aad
mov
out
jle
add
fldcw
sub
pop
add
and
scas
out
push
sti
pop
or
stc
repz
cs
and
pop
or
test
jg
xchg
push
push
mov
jo
cli
gs
frstor
out
das
mov
dec
stc
in
loop
cld
cld
stc
rep
xorb
jne
sbb
decb
pop
cmovns
jo
sti
in
sub
pop
sbb
js
push
cwtl
and
bswap
sub
mov
sub
pushf
sub
fdivp
or
icebp
lods
mov
out
sbb
mov
push
jo
adc
sbb
fstps
dec
jp
lret
aas
movsl
jns
mov
inc
jge
ja
sub
jg
and
stos
data16
scas
mov
ja
stc
es
sub
pop
pop
lret
test
pop
push
jae
lds
jp
mov
lahf
aas
jg
add
xor
test
in
out
sbb
mov
mov
mov
sub
imul
rolb
outsl
sub
iret
inc
sub
jle
and
out
and
add
repz
mov
sub
adc
outsl
mov
jmp
out
out
push
dec
jno
mov
and
sbb
sub
shrl
mov
mov
push
popa
lahf
pop
sbb
sahf
int
int3
mov
fstl
into
xchg
jecxz
mov
mov
jmp
jl
inc
decl
rcrb
test
das
xchg
push
pop
push
jl
repnz
repz
mov
cmp
mov
cld
insb
repnz
test
outsb
lahf
dec
add
mov
cmp
cld
stc
xchg
add
nop
dec
xchg
mov
jne
out
test
je
jle
jg
push
rcr
mov
outsb
mov
jle
cld
cs
pop
push
push
xchg
push
and
jnp
insb
in
das
ja
daa
adc
roll
jns
outsb
je,pn
mov
mov
jge
in
ss
mov
push
fdivrp
sti
decl
adc
mov
dec
leave
mov
icebp
in
adc
fldt
aas
push
stc
aas
das
lahf
lods
idivb
sub
or
push
lods
mov
repnz
loopne
mov
mov
cmp
mov
cmc
adc
xor
stos
test
call
scas
int3
movsl
jmp
push
jg
cld
stc
inc
inc
xor
lea
xlat
pop
or
and
lahf
aas
jo
icebp
jo
and
negb
or
mov
test
sub
jnp
popa
movsl
or
xchg
out
lahf
aas
xchg
mov
xor
fisttpl
cmc
andb
fnstcw
test
jbe
das
aas
jg
adc
imul
out
cmpsb
mov
sbb
popa
xor
mov
mov
add
mov
arpl
ret
cmp
lret
popa
mov
and
in
xchg
sub
aas
gs
push
lahf
testb
loop
pop
ja
cs
loopne
out
lahf
aas
das
jmp
xchg
pop
dec
out
sahf
adc
xchg
jo
aas
lds
jae
fiadds
jmp
repz
jl
jecxz
loopne
lret
cmpsl
sahf
test
cld
cld
stc
pmaxub
in
jecxz
mov
clc
mov
lret
out
ljmp
sbb
les
lret
mov
idiv
es
and
jle
repnz
test
fwait
sarl
jg
mov
loope
sub
cs
das
test
mov
lahf
add
rcrb
jp
mov
nop
add
lds
mov
jl
in
call
into
das
pop
repz
hlt
or
out
shll
xor
andb
cld
pop
stc
clc
xor
into
add
mov
es
das
cmp
adc
mov
pop
xchg
in
xlat
dec
fs
jg
mov
fdivrs
ja
das
sub
and
or
xor
push
out
rolb
imul
arpl
cmp
in
call
cmp
jnp
xchg
cmc
in
inc
dec
sahf
and
in
dec
lret
mov
or
test
mov
mov
fs
data16
or
in
xchg
jno
and
push
adc
aam
ja
push
repz
stos
icebp
ss
lock
xchg
cmp
repz
mov
enter
stc
dec
cmpsb
push
cltd
jg
cld
stc
iret
in
test
sbb
shr
sub
adc
sbb
loop,pn
xlat
cs
jne
push
cs
repz
lahf
ja
push
adc
repz
iret
pop
pop
and
stc
mov
aaa
xchg
aad
cmp
loopne
xchg
lahf
jg
das
adc
mov
pop
ds
xchg
add
xor
movsl
or
in
push
push
lock
stc
repz
push
sub
inc
sarb
stc
mov
out
pop
fstl
mov
xor
jg
jle
xor
mov
lahf
and
fistpl
test
cmp
lret
aaa
adc
mov
inc
movsl
decl
xor
ror
pop
movsb
sub
mov
popa
mov
cltd
mov
push
cltd
sub
inc
sbbb
and
das
jno
mov
stc
repz
inc
cs
cmp
jge
sbb
cld
gs
push
nop
dec
cltd
pop
cmp
out
lahf
pop
cwtl
mov
sub
jg
cld
stc
cmpsl
and
leave
xchg
test
jmp
out
lahf
aas
mov
sub
fsubrl
in
xchg
inc
push
testl
lahf
xchg
mov
xchg
sub
sbb
mov
jbe
push
cmp
xchg
decb
gs
mov
mov
popl
ret
mov
and
iret
lahf
jg
jb
lods
loop
in
popf
repnz
pop
jl
cld
stc
repz
pop
mov
ja
push
addr16
call
out
decb
mov
hlt
mov
mov
repnz
enter
cmp
sub
and
fsts
add
idiv
cld
stc
repz
xor
xor
mov
fdivrp
fwait
ljmp
jns
pop
mov
in
xchg
cmp
pop
fbld
adc
int3
jle
or
adc
inc
scas
ljmp
pop
cmp
repz
lahf
rcrb
dec
in
add
fcmove
fucomip
into
lock
mov
jg
add
xor
repnz
inc
arpl
jnp
adc
out
lret
sub
js
xchg
divb
xchg
jle
repnz
sbb
xchg
inc
out
lret
lahf
aas
aas
push
imul
cmpsl
push
mov
sar
pop
dec
xlat
sub
cld
stc
repz
push
xchg
xchg
adc
std
leave
arpl
pushf
adc
jg
cmp
xchg
push
sbb
inc
fiadds
mov
nop
or
xor
xchg
push
pop
stc
loopne
ljmp
sbb
lds
jns
lret
mov
out
sbb
dec
fimull
push
xchg
xchg
mov
jecxz
mov
sbb
adc
lds
loop
cld
stc
adc
add
sbbb
push
test
sub
shlb
add
push
fstpl
adc
adc
cmp
lock
out
test
adc
sahf
sub
cmp
xor
xor
daa
iret
lahf
pop
scas
xchg
movsb
shr
test
cld
jb
fnstsw
jle
push
movsb
mov
pop
decb
dec
mov
aas
aas
dec
loop
scas
je
rclb
jnp
lock
inc
jo
mov
loopne
adc
jecxz
subb
cld
stc
repz
hlt
dec
mov
cmp
daa
aas
jg
fwait
xor
orl
aas
faddp
je
mov
add
fdivrl
into
fs
add
in
aas
call
popf
pop
xchg
int3
and
sbb
adc
lret
xchg
push
fcoml
push
mov
jno
lret
mov
jbe
ja
push
xor
mov
inc
mov
or
outsb
add
cmp
out
insb
fsubrp
fists
aas
mov
int3
pop
cmp
or
outsl
pop
push
push
jg
lret
xchg
push
pop
jns
test
xchg
add
or
or
test
std
pop
ljmp
out
jns
into
daa
push
pop
stc
pop
in
jo
mov
jo
aas
jg
add
movsb
rol
cmp
inc
jg
test
or
ja
cwtl
lock
cld
jg
fcomps
fsubl
or
adc
xor
adc
sbb
arpl
in
sub
je
sub
push
lcall
and
arpl
out
clc
dec
push
inc
cmpsb
push
call
add
call
cmp
xchg
je
cmp
push
repz
inc
jl
xchg
sub
aaa
enter
shl
out
and
sbb
sub
adc
sub
dec
shl
movsb
inc
mov
cmpb
add
or
pop
xchg
mov
lahf
aas
mov
icebp
sti
xchg
fsubl
xchg
jo
stc
repz
stos
mov
mov
lds
lahf
aas
jg
xor
dec
addl
dec
adc
mov
sbb
ds
inc
into
sub
mov
aad
stc
repz
das
xlat
push
fsubs
mov
xchg
mov
pop
jo
jnp
rcrl
pop
in
jle
stc
cmp
movq
mov
js
iret
jmp
scas
mov
jge
mov
int3
in
int3
scas
inc
sbb
xchg
decl
gs
push
scas
inc
in
ret
lods
xchg
out
pop
push
sbb
icebp
in
push
sti
mov
fwait
in
push
sti
repnz
or
lahf
mov
cld
dec
sahf
out
test
mov
xchg
ja
out
popa
sub
push
and
pop
clc
push
out
iret
lahf
aas
aas
ds
push
pop
dec
int3
jl
jns
addl
mov
inc
fmuls
sub
lret
in
push
cltd
add
dec
das
addb
cmp
xchg
push
pop
test
xchg
mov
aas
mov
mov
add
sub
xor
icebp
lret
push
sub
outsb
inc
inc
jge
clc
arpl
jmp
subl
cld
mov
mov
sub
rcll
xchg
lahf
pop
sbb
lret
sub
arpl
out
int3
or
pop
cs
pop
jno
add
xor
out
cmpsb
xchg
or
sub
lds
mov
pop
sub
pop
inc
test
mov
scas
mov
mov
dec
inc
fisubs
cmc
mov
int
stc
inc
test
xchg
gs
mov
xchg
adc
test
rep
das
scas
mov
or
and
aas
jg
push
push
inc
sub
mov
mov
repz
mov
lds
notl
inc
xchg
insb
in
jp
add
lret
xchg
push
aad
inc
fcoms
movsl
jl
and
outsl
aaa
cli
jbe
xchg
push
adc
iret
lahf
aas
jg
jl
jne
sub
dec
test
andb
aad
ss
ret
out
dec
pop
jle
data16
popa
hlt
or
cld
out
mov
sbbb
lds
repz
lahf
and
pusha
test
fcmovnbe
mov
cld
stc
push
rorb
leave
pop
or
movsb
lods
clc
in
ja
pop
shrl
pop
ret
xchg
push
pop
jns
aaa
out
lret
sbb
jbe
loope
call
jne
cltd
insb
adc
stc
aad
lahf
aas
jg
fisubs
jae
je
inc
mov
add
iret
sub
aas
xor
jo
sbb
xor
jl
adc
mov
or
iret
lahf
aas
jg
sub
lods
jns
stc
leave
jp
cmc
repnz
mov
imull
repnz
in
movsl
pop
pop
pop
or
dec
pop
fpatan
in
faddp
xor
daa
push
repnz
xchg
mov
movhlps
decl
ds
xor
jmp
mov
xor
add
cmp
jg
and
mov
dec
jmp
lahf
jo
xor
fwait
mov
dec
push
pop
pop
or
mov
jle
dec
aam
scas
mov
outsb
dec
es
adc
scas
mov
sbb
imul
mov
mov
aam
push
into
xchg
fsts
add
pop
in
push
mov
inc
rcrb
pushf
aam
xchg
push
pop
jns
push
xor
xchg
adc
in
jl
adc
cmp
cld
xchg
sub
into
push
int3
sub
iret
lahf
aas
jg
mov
pop
dec
adc
nop
jp
dec
icebp
rcll
scas
aam
clc
in
das
jg
lcall
arpl
iret
cmpsl
xchg
fisttpll
aad
inc
mov
jb
push
pop
sbb
pop
inc
xchg
push
mov
sub
decb
notl
xor
clc
repnz
cmp
mov
jmp
sti
sti
rsqrtps
mov
pop
js
xchg
xor
scas
jg
lea
fistpl
mov
xchg
loope
mov
and
fists
pop
push
cli
add
in
idivl
mov
pop
pusha
jg
cld
dec
ds
pop
mov
xchg
or
iret
lahf
aas
push
dec
icebp
sub
mov
inc
stc
xor
in
mov
jle
push
aas
mov
jg
cld
sub
fisttpll
push
push
ds
and
sub
das
sbb
add
out
out
scas
mov
test
mov
xor
cmp
pop
mov
ds
idivb
cld
stc
repz
test
divl
sbb
lahf
aas
jg
xchg
gs
cwtl
repz
cmp
pslld
out
out
insl
adc
test
repz
mov
outsb
sub
adc
sub
sub
jle
repnz
cmpl
lcall
insb
lahf
aas
jmp
pop
or
mov
mov
jne
test
stc
repz
enter
add
data16
fdivl
sub
outsl
psubsw
inc
xchg
jle
repnz
ljmp
out
adc
jg
out
jae
test
test
out
xchg
iret
lahf
jo
movl
sbb
pop
scas
mov
push
sbb
das
mov
xchg
mov
mov
repz
in
das
jg
jnp
fwait
ss
filds
and
mov
scas
sbb
imul
cwtl
cmp
mov
dec
xchg
jns
in
mov
jbe
dec
ja
jno
das
push
fidivrs
inc
cmp
and
and
imul
jl
jle
inc
das
cmp
mov
mov
push
jl
jge
ficoml
sub
or
aam
push
lock
push
mov
fdivrp
jb
hlt
adc
clc
and
xorb
jb
xchg
cmpsb
xchg
movsb
mov
data16
sarb
out
clc
in
imul
adc
jg
cld
inc
push
inc
push
pop
repnz
mov
int
mov
aas
mov
pop
out
mov
mov
sti
enter
scas
add
lcall
mov
mov
add
aas
jg
add
xchg
pop
test
mov
addr16
push
rclb
jl
adc
mul
out
dec
sub
dec
insl
xor
cmpsl
xchg
pop
repnz
adc
adc
in
rcll
fistps
orl
repnz
iret
lret
ds
ret
scas
xchg
aas
inc
inc
movsb
push
dec
pop
cmp
jns
xor
xchg
mov
push
ds
dec
ret
jb
sbb
sub
out
repnz
out
pushf
loopne
iret
aas
mov
pop
cmp
jno,pt
sub
push
and
or
pop
lahf
mov
lahf
aas
jg
mov
inc
cmp
inc
aas
xor
iret
pop
mov
or
outsl
in
cmp
fildll
aad
imulb
loope
mov
das
push
lea
and
or
iret
cs
stc
repz
push
mov
fistpl
mov
sbb
leave
ret
xchg
test
dec
loopne
in
or
out
repz
jg
test
filds
pop
push
dec
fcmovnu
js
scas
out
lahf
aas
fst
insb
mov
pop
xlat
add
xchg
icebp
in
mov
and
out
sub
pop
divb
je
cld
stc
repz
out
sbb
jecxz
outsb
inc
inc
adc
fbld
xchg
mov
hlt
lahf
pop
mov
mov
dec
push
das
and
adc
lahf
aas
cld
jge
jg
rclb
sti
cld
stc
repz
rcl
hlt
daa
sbb
ja
push
push
ja
jle
dec
xchg
add
mov
movmskps
lret
in
sub
push
mov
movsl
movsl
daa
dec
cltd
das
push
ljmp
aas
jg
cld
into
adc
rol
aaa
dec
mov
push
stc
cs
jb
inc
and
add
sahf
xor
iret
lahf
aas
imul
icebp
xor
int3
cmp
cld
xor
scas
ret
cmc
int3
lcall
stc
cld
sbb
cmc
mov
mov
jmp
repnz
push
sub
rorl
mov
lret
scas
call
leave
sub
xchg
decl
pop
scas
mov
stos
int
in
push
mov
add
lret
mov
sub
loopne
cld
rol
dec
push
pop
lock
aas
mov
aas
jg
sahf
xchg
push
mov
fstl
mov
mov
iret
pop
xchg
jne
pop
les
lret
bound
sub
pop
scas
mov
scas
fbstp
sbb
mov
test
xchg
pop
lods
cmpsl
daa
dec
and
lahf
aas
jg
push
mov
out
or
jns
popf
xor
cld
stc
repz
cld
dec
int
loopne
or
jnp
xor
and
scas
sub
pop
xchg
shlb
jns
xor
jge
test
sbb
dec
les
or
mov
xchg
aaa
mov
ficompl
inc
jg
jae
cmpsl
fisubrs
int
pop
out
jl
push
gs
dec
jg
repnz
repz
or
in
test
enter
cmpl
ficoms
lods
cmp
mov
aas
jg
jle
cli
std
sub
cmp
inc
adc
mov
outsb
xchg
pop
scas
mov
cwtl
cmp
call
sbb
icebp
inc
cmp
shll
aam
ja
adc
fisubrs
stc
scas
lods
test
fwait
insl
repnz
in
jle
jmp
iret
inc
js
mov
sub
pop
mov
mov
js
sub
xor
push
sahf
dec
out
push
cmp
imul
mov
dec
jg
xchg
and
and
mov
mov
mov
xchg
cmpsb
das
popf
out
push
mov
xchg
iret
jmp
cmpb
ds
cli
stc
jecxz
and
jecxz
leave
or
repz
inc
ja
pop
fucomip
mov
outsl
scas
mov
scas
aad
int3
das
cmovg
lods
push
stos
pushf
mov
lret
nop
jne
hlt
jmp
mov
sub
imul
xor
sar
fwait
cli
imull
dec
push
fistpll
pop
sub
jle
test
sbb
pop
rclb
stc
mov
mov
pusha
int
lea
lods
jb
xchg
push
in
inc
cld
mov
push
fwait
sbb
or
bnd
xor
in
test
or
mov
stos
cmc
mov
inc
cs
mov
mov
inc
ret
std
mov
movsb
out
dec
hlt
clc
adc
cmp
stos
push
mov
dec
scas
mov
or
jg
cld
or
mov
call
repz
lahf
xor
inc
dec
inc
test
cld
stc
xchg
pop
pextrw
xchg
daa
shll
nop
push
mov
pop
push
pop
dec
cmp
pop
in
and
pop
das
and
adc
mov
sbb
arpl
mov
iret
jp
mov
scas
push
jle
fs
js
imul
push
ror
mov
cld
in
fsubr
clts
and
imul
ds
scas
mov
inc
xchg
int
sahf
popf
sub
mov
jns
mov
inc
repnz
loopne
dec
icebp
repnz
add
out
lcall
or
scas
mov
faddp
cmp
sbb
mov
mov
jmp
jp
stos
mov
repnz
pop
into
xchg
scas
sbb
cltd
fs
jle
mov
mov
clc
repnz
iret
xchg
xor
sbb
int3
sub
aas
mov
std
ds
aam
sbb
iret
dec
mov
std
clc
or
inc
and
ret
mov
push
jns
dec
shll
jmp
sarb
cld
stc
mov
cld
jmp
sbb
pop
xor
lret
iret
lahf
aas
or
cmp
daa
xor
ret
push
repz
movsl
les
and
out
dec
mov
add
jg
data16
push
xor
mov
loop
das
add
cld
stc
repz
add
sub
or
out
pop
iret
lahf
aas
jg
xlat
sub
nop
cmp
jg
cltd
mov
jns
repnz
sbb
dec
addr16
out
xchg
push
pop
mulb
in
lret
cmp
faddl
lods
js
xchg
icebp
mov
jl
pop
pop
stos
xchg
fs
repnz
mov
push
lahf
aas
jg
out
adc
adc
outsl
lcall
out
aas
call
das
sbb
add
fldenv
das
dec
mov
jle
inc
mov
jne
push
das
aas
aas
cs
pop
or
jmp
fdivs
mov
cmp
xchg
pop
dec
scas
and
or
pop
mov
pop
push
fimull
fisttps
scas
mov
xor
in
and
dec
les
lret
call
and
cmp
mov
scas
aad
mov
call
sub
add
shrb
sbb
push
fsubrp
pop
xchg
sbb
roll
insl
fcmovb
adc
test
lret
mov
lods
leave
jmp
fwait
push
jl
aas
enter
xor
iret
lahf
jg
dec
xchg
sbb
rcrl
stc
repz
leave
adc
push
into
mov
icebp
das
lock
lahf
aas
jg
inc
xchg
and
push
xchg
dec
pop
cld
test
push
push
or
dec
test
inc
les
decb
test
dec
and
mov
arpl
lret
iret
fnsave
ja
ds
jns
in
shlb
push
clc
mov
pop
in
das
push
mov
xchg
popf
out
ds
push
fdivrp
jb
xor
xchg
pmaddwd
jmp
push
fdivp
in
das
xchg
out
adc
pop
push
jmp
mov
push
pop
jns
sub
loopne
je
pop
jns
testl
lds
sub
fists
mov
pop
jns
sti
jg
cmp
sarl
xchg
pop
jle
pop
inc
mov
mov
cs
pop
in
push
out
fdivr
test
std
out
aam
mov
dec
sub
ds
xlat
sahf
add
repnz
and
lods
jae
stc
repz
es
gs
pushf
jb
in
aas
jg
cld
xor
filds
mov
push
iret
or
push
mov
and
pop
jge
jle
mov
iret
lret
pop
sub
jb
in
idivl
addr16
mov
mov
repnz
mov
imul
fdivrp
jb
fsubl
insb
and
and
insb
dec
dec
lds
ljmp
cmp
mov
stc
and
outsb
push
cld
push
cld
and
icebp
das
jge
insl
icebp
jp
std
int3
jp
aas
aas
push
jns,pn
push
jmp
xchg
fldcw
sub
loopne
iret
ja
popf
fidivrs
stc
repz
rolb
sbb
add
test
out
fldenv
mov
shll
push
dec
loopne
out
sub
push
je
ret
sbb
pop
jecxz
lahf
pop
add
xor
lahf
adc
pop
fildl
stos
jmp
enter
or
in
das
cmpsl
or
in
push
pop
sbb
into
xor
sarb
iret
mov
sahf
push
das
hlt
jmp
test
scas
mov
cmp
or
sub
mov
repnz
xor
xchg
scas
xor
xchg
ja
mov
fistpl
xor
jns
xchg
push
sarl
dec
cmp
mov
aam
pop
jns
xchg
movsl
dec
stos
cmc
lcall
cmp
xchg
push
int
cmpsb
xchg
dec
bnd
pop
push
ds
cld
leave
bound
xor
notl
mov
fmull
push
popf
cwtl
outsl
dec
mov
sub
es
je
outsl
iret
jg
jg
jg
outsb
mov
push
jae
addr16
je
movsl
push
or
cmp
das
push
pop
jnp
shlb
cli
rcr
inc
cltd
out
loope
mov
int
decb
pop
adc
movsl
xchg
pop
mov
xchg
in
mov
in
shlb
sahf
sbb
outsb
mov
mov
int3
cmp
out
in
inc
decb
sarb
xchg
ja
jns
cmp
jecxz
mov
push
fidivrs
mov
jb
inc
scas
int
gs
jns
lret
mov
cmp
xor
and
push
ljmp
iret
inc
pop
sahf
push
shrb
sti
xor
and
addr16
std
ljmp
out
and
dec
cld
stc
repz
mov
clc
arpl
add
xchg
push
fidivrs
add
notl
push
pop
jns
jg
sbb
jae
pop
orl
jns
xchg
addl
xor
jns
xchg
push
testb
push
mov
mov
pop
sbb
cs
sbb
jle
jl
lret
out
fidivs
mov
es
pop
pop
xor
aas
mov
cmc
inc
dec
aas
iret
mov
cld
stc
repz
sub
cmp
and
inc
imul
jg
cmpsl
das
cmc
testl
inc
ljmp
jle
stos
aas
incl
or
jle
mov
push
subl
iret
lahf
leave
fiaddl
jbe
cld
mov
jg
cld
stc
push
mov
jg
sub
jb
test
jns
sub
iret
xchg
aas
pop
mov
jl
cmp
aaa
repnz
dec
or
or
lods
cmp
in
push
es
movl
daa
testl
sahf
nop
push
outsb
iret
mov
cmpsb
dec
mov
stc
pop
hlt
mov
mov
mov
pop
subb
pop
mov
mov
dec
jae
addr16
pop
xchg
jg
test
std
pop
subb
fs
fimuls
repnz
outsb
cmp
add
dec
fisttpll
imul
dec
cli
push
frstor
mov
pop
into
repz
sbb
in
in
or
lahf
pop
call
xor
out
adcb
mov
sub
xchg
mov
sahf
push
push
repnz
hlt
pushf
xor
shlb
scas
mov
and
fwait
jo
aam
scas
mov
dec
pop
push
ljmp
fsubl
scas
fmulp
lahf
mov
gs
into
mov
dec
jle
mov
incl
aad
test
repnz
insl
dec
lds
push
sahf
test
or
lret
mov
lea
iret
mov
jle
repnz
push
push
push
ljmp
jle
pop
xor
xchg
mov
dec
jl
cli
dec
inc
movsb
hlt
cld
stc
rep
push
out
outsl
adc
dec
jg
cmp
aas
jg
outsl
loope
mov
stos
adc
scas
inc
stc
repz
or
jb
cmp
or
andb
cld
and
cwtl
das
lods
adc
mov
inc
es
xchg
iret
lahf
cmp
andb
es
pop
cld
pushf
mov
push
mov
xlat
push
pop
jns
scas
and
fidivrs
jno
cmp
setb
fs
pushf
mov
imul
outsl
not
cld
das
pop
dec
dec
mov
cltd
xchg
aas
pushl
icebp
add
push
ds
push
push
inc
fadd
pop
ror
lahf
leave
mov
sbb
jle
inc
outsb
mov
xchg
push
faddp
xor
push
int3
xchg
pop
loopne
jle
or
jns
or
imul
icebp
fcomps
in
mov
dec
pop
das
xchg
cmp
push
popa
test
arpl
rcl
in
push
pop
int3
ja
and
popl
pop
jns
out
push
pushf
cli
and
jg
cld
sar
sbb
jne
fldenv
xchg
xor
in
ja
mov
aas
mov
mov
std
jb
repnz
enter
scas
cmp
repnz
aas
cs
shll
and
fsincos
in
xor
in
and
or
mov
push
lret
dec
xor
lret
pop
scas
bound
loop
lods
and
xchg
ja
pop
lret
sbbb
mov
xlat
daa
and
ret
dec
push
daa
pop
ss
ficoms
aas
jg
cld
push
add
leave
add
dec
inc
stos
adc
das
lahf
hlt
lret
out
dec
ljmp
lret
out
ja
push
shl
mov
pop
xchg
les
push
pop
pop
ja
out
shll
in
mov
rclb
cmp
jns
stos
mov
dec
into
scas
mov
sti
std
out
or
or
sbb
mov
adc
push
pop
sbb
lret
sub
sarl
lods
pop
daa
mov
out
jg
jmp
inc
stos
lahf
lret
inc
sub
mov
das
ja
cmp
cltd
pusha
xchg
cltd
push
sbb
shlb
or
pop
push
pop
jns
aaa
adc
add
and
or
and
dec
imul
dec
mov
mov
and
pop
add
mov
pop
sbb
jns
xchg
ja
or
test
mov
push
int3
les
push
pop
stc
push
stc
jge
mov
js
imul
push
clc
test
xchg
sub
jl
ljmp
fmuls
sub
cmc
aaa
cli
in
in
pop
aaa
cmp
js
mov
pop
jns
xchg
mov
adc
orl
jns
xchg
push
lds
adc
adc
xchg
push
pop
push
mov
fs
jp
jns
mov
pop
jns
lcall
cmp
mov
faddl
inc
scas
jecxz
pusha
mov
push
mov
push
test
sub
mov
addr16
pop
dec
enter
scas
and
aas
stc
sbb
repnz
in
mov
xchg
xor
xor
adc
outsl
ss
mov
sbb
push
dec
push
or
test
aas
int
push
xchg
mov
stc
repz
cmp
push
mov
movsl
popf
pop
mov
cmp
sub
into
sub
pop
fidivrs
jno
mov
cltd
aam
in
push
mov
xor
jecxz
mov
jle
cld
jb
imul
dec
rolb
add
mov
outsb
jne
mov
out
lahf
ftst
shll
mov
and
repnz
stos
pop
push
pop
sub
ds
ja
jg
push
leave
mov
pop
popf
rcrb
mov
xchg
les
sahf
or
sbb
push
fsubrp
stos
mov
out
nop
daa
test
xchg
push
pop
jns
in
add
push
js
fsin
jle
sub
movsb
pop
jns
xchg
shlb
rclb
cmpsb
mov
cli
pop
shrb
out
data16
pushf
ds
fwait
stc
stc
repz
xchg
add
xor
sbb
jp
xchg
xchg
cmp
mov
pop
scas
push
sbb
fwait
lcall
jge
xor
push
dec
push
das
test
popa
scas
mov
idivb
aam
shll
out
sbb
mov
push
cmp
jnp
jmp
stc
repz
adc
xchg
push
sub
das
loopne
or
stc
xor
sub
mov
fsubr
xchg
lock
in
das
out
sbb
test
ret
ret
dec
nop
in
push
fidivrs
adc
dec
ficoms
pop
inc
adc
shrl
in
test
mov
dec
arpl
inc
xchg
scas
mov
ret
sub
out
mov
sbb
fcomi
aaa
push
or
incl
mov
pop
leave
add
into
sub
in
iret
lahf
pop
iret
add
and
mov
int
stc
and
push
mov
jo
mov
aas
jg
testl
mov
pop
mov
cmp
add
xchg
iret
jbe
adc
pop
mov
cld
stc
repz
mov
sub
ss
add
aas
jg
arpl
mov
mov
push
repz
sarb
pop
out
repnz
push
data16
cld
dec
clc
repnz
sbb
leave
jl
cs
mov
pop
negl
in
stc
xchg
mov
imul
cmpsl
ret
push
pop
scas
cmp
or
das
push
pop
push
lods
outsl
les
mov
lahf
lock
add
mov
adc
scas
repnz
dec
sbb
les
ja
xchg
rcll
sbbb
movsbl
adc
sbb
add
sub
call
nop
or
fildll
xor
cmp
adc
jle
cmpl
pop
push
push
repz
adc
cmp
cld
stc
and
push
popa
repz
xor
push
push
sbb
iret
lahf
aas
in
jge
loope
movsl
sbb
fwait
adc
stc
rep
imul
push
das
jg
cld
dec
push
jmp
jnp
xchg
pop
or
es
xchg
ja
clc
in
fiadds
ds
push
sbb
in
push
pop
nop
cmp
push
outsb
pop
fwait
xchg
push
pop
jns
or
gs
push
sub
push
jbe
push
bound
jns
data16
arpl
cmp
mull
ljmp
sub
das
mov
cli
sub
jle
cld
adc
jecxz
out
cwtl
push
jae
out
and
mov
cld
sti
cmp
jns
mov
cli
cmc
push
sahf
push
mov
cwtl
mov
pop
add
aas
fisttpll
out
mov
push
das
xchg
mov
into
stos
movsl
jle
cli
repnz
addr16
pop
aas
movsl
mov
cld
push
xchg
jg
cld
mov
xor
and
in
das
lahf
add
push
xchg
fucomip
cmp
out
xchg
push
pop
jns
and
xor
icebp
or
jns
sub
stc
aaa
nopl
lret
in
inc
jp
lahf
and
lret
xchg
ja
mov
mov
pop
cli
in
mov
sub
sbbb
or
nop
dec
adc
iret
lahf
or
fnstcw
adc
mov
les
mov
sbb
into
pop
mov
mov
rclb
mov
mov
sbb
leave
xchg
push
fsubp
xor
sub
ss
or
jbe
mov
jns
outsb
xchg
sahf
mov
scas
mov
iret
enter
add
mov
das
adc
pop
mov
pop
scas
mov
ljmp
repz
outsb
rcrl
movq
cmpsb
jg
sub
stc
lahf
or
push
add
stc
repz
lahf
mov
rorb
ss
or
repnz
lret
outsb
scas
xor
scas
les
jns
in
fists
stos
lock
mov
pusha
sbb
cs
xor
ja
sub
inc
scas
push
lahf
pop
xchg
imul
repz
mov
cli
adc
cmpsl
movsb
fstpt
cld
stc
loop
lds
faddl
cltd
pop
cmp
lahf
aas
mov
mov
aas
adc
clc
gs
lock
ljmp
jg
cld
into
pop
jle
and
shl
inc
xchg
stc
iret
lahf
jg
into
ficompl
out
add
js
repz
adc
das
cmpsb
loopne
std
pop
int3
cmp
in
mov
xor
out
jmp
dec
xor
aam
out
inc
pop
iret
dec
rcl
ljmp
mov
lcall
jecxz
pusha
or
scas
aas
jg
cld
faddp
ficoml
fmuls
add
das
repnz
les
inc
mov
stos
sbb
scas
mov
push
push
mov
inc
inc
and
nop
xchg
xor
mov
out
add
cmovbe
cli
outsb
lea
fsts
mov
aas
jg
cld
aam
dec
jns
add
and
mov
pand
out
lahf
or
mov
adc
inc
mov
aad
shll
push
sub
lret
inc
int
in
aas
addps
push
xchg
fmuls
pop
jns
or
jl
pop
push
popf
lock
add
xchg
push
sbb
xor
iret
and
mov
dec
pop
ja
scas
sbb
mov
push
pop
jns
cmp
xchg
std
mov
imul
xchg
push
cmpsb
sti
and
adc
mov
cld
stc
adc
xlat
sbb
adc
push
mov
push
imul
mov
inc
out
rorb
repz
jle
sahf
jns
out
jno
mov
push
mov
test
iret
push
lea
and
lods
cwtl
les
enter
repnz
mov
and
rorl
sub
fists
cli
jo
insb
iret
xchg
aam
inc
cli
jge
push
lock
mov
mov
out
xchg
mov
pop
outsl
jmp
sbb
sti
sub
push
outsb
int
je
jg
add
hlt
adc
jge
mov
pop
ds
loopne
mov
popf
jbe
inc
push
pop
jns
sub
xchg
out
pop
xchg
aad
mov
add
negb
in
cld
lea
dec
xchg
lock
jns
xchg
push
jle
ss
imul
pop
mov
dec
inc
lahf
dec
insl
inc
pop
scas
push
pop
jns
sbb
les
fsubrs
jge
std
jb
xchg
sbb
das
jmp
mov
hlt
mov
fucom
xchg
push
fidivrs
shlb
dec
out
pop
pop
jns
and
mov
outsl
mov
in
mov
div
and
movsl
cmp
fdivrp
xor
push
sub
enter
mov
lahf
sbb
and
repnz
adc
mov
cmp
rclb
xchg
push
fidivrs
adc
rcr
stc
jo
jmp
ss
repz
cltd
out
out
les
mov
bound
inc
adc
clts
out
sub
lcall
sbb
push
mov
mov
mov
flds
mov
xchg
mov
std
scas
cmpsl
push
pushf
ret
and
outsl
scas
hlt
sti
repnz
dec
mov
sub
loope
pop
jo
mov
cmp
push
mov
cmc
sbb
mov
push
dec
fisubrs
out
setle
sub
div
out
sub
cld
stc
cmp
xchg
inc
xchg
movsb
push
insl
add
push
shl
iret
lahf
aas
or
and
xlat
mov
loope
jg
dec
jecxz
fdivr
jp
sub
iret
lahf
aas
sub
pop
je
adc
push
cmp
aas
adc
or
mov
out
repnz
iret
lahf
aas
insb
loop
scas
cmpsl
dec
xchg
adc
push
out
fldl
mov
push
xchg
mov
add
out
shr
out
lret
adc
mov
mov
cmp
and
and
sbb
aas
test
out
lahf
test
mov
mov
xor
xor
xchg
cmp
jg
cld
xor
dec
ret
popa
icebp
adc
adc
xchg
ljmp
push
or
ja
pop
push
inc
jg
loope
dec
mov
repnz
dec
and
jo
call
in
hlt
out
mov
iret
xor
outsl
loop
jmp
sub
mov
in
scas
stos
push
cli
push
sub
mov
lret
lcall
pop
pop
das
scas
mov
sbb
pop
cmpsl
sbb
pusha
inc
rclb
xchg
pop
dec
cld
pop
jg
fsubr
mov
idivl
bound
iret
lahf
pop
aam
pop
push
and
add
fsubrl
iret
hlt
lret
ss
outsb
xor
out
mov
in
and
lahf
mov
dec
xchg
sub
out
pop
lahf
movsl
xor
iret
lahf
jbe,pn
mov
push
inc
repz
add
mov
pop
jns
loopne
pop
jge
test
push
inc
mov
xchg
and
adc
stos
fiaddl
inc
ret
lahf
xchg
insl
sahf
xchg
adc
mov
inc
aas
sub
sub
les
es
sub
mov
cmp
xchg
mov
push
pop
jns
jmp
ficoml
clc
popf
mov
xchg
pop
jns
xchg
rorl
adc
mov
inc
aaa
xchg
xor
clc
jge
lock
lahf
inc
ficoms
movsb
fldcw
jb
xlat
xchg
ja
jp,pt
ja
ret
pop
jns
fnsave
pop
iret
pop
add
inc
lret
pop
mov
jbe
jno
test
jnp
inc
cmpsb
inc
lahf
insl
pusha
outsl
cld
stc
add
cs
mov
mov
push
dec
jnp
and
stc
push
leave
dec
pop
jl
mov
iret
lahf
aas
cli
mov
inc
in
ficoms
stc
std
repnz
repz
push
mov
pop
imul
ret
scas
and
pop
std
pop
xor
popa
imul
cld
nop
cli
ja
in
fists
addr16
in
and
pop
jg,pt
cmp
insb
dec
mov
movsb
jno
lahf
cld
stc
mov
daa
push
push
or
std
jl
push
pop
pop
jle
jecxz
and
xor
das
sub
jns
or
hlt
and
aad
or
lds
dec
push
int
pcmpeqw
mov
pop
xor
inc
js
pop
neg
sahf
leave
shlb
in
mov
jg
insb
mov
sub
lcall
aas
jmp
cli
into
test
pusha
das
mov
mov
andl
mov
cld
stc
sub
sbb
stc
push
pop
mov
cltd
lret
ds
pop
xchg
xchg
cmp
mov
sub
sub
fwait
ljmp
mov
scas
xorl
iret
lahf
push
subb
add
inc
icebp
dec
fldt
adc
repnz
scas
mov
lret
mov
test
stos
xchg
and
mov
mov
iret
mov
xor
into
dec
jle
repnz
ja
xor
xor
mov
ja
mov
cmp
inc
pop
pop
jns
xchg
aas
and
mov
nop
cmp
cli
adc
or
movq
and
iret
lahf
aas
pop
cmpxchg
sub
jg
jg
mov
dec
fdivl
repz
lahf
rclb
push
dec
js
and
mov
jg
cld
stc
pop
loope
pop
pop
sbb
fs
cmp
push
sub
iret
lahf
aas
add
outsl
inc
push
mov
scas
xchg
cld
stc
repz
lea
ljmp
jecxz
lahf
aas
jg
mov
xchg
lock
addr16
adc
mov
cli
repnz
jge
stc
int
pop
xor
movl
shrb
push
fmulp
loopne
es
fidivrl
xchg
fmull
xchg
lahf
aas
decl
inc
shll
or
out
loopne
mov
inc
adc
stc
stc
pop
sbb
lahf
dec
lcall
call
xor
jo
repnz
cs
negb
jae
popa
and
xchg
xchg
sub
xor
out
lcall
sbb
jp
in
pop
ljmp
repz
lahf
in
cwtl
xor
add
mov
loopne
jns
add
repnz
push
lea
xchg
ljmp
lea
lds
sti
sbb
int
addr16
inc
mov
enter
repz
mov
les
mov
jge
xor
aas
inc
mov
add
jmp
fiaddl
pop
dec
sub
out
dec
pushf
dec
xchg
scas
add
mov
aas
iret
cli
mov
jne
rolb
lock
das
mov
lret
sub
adc
xor
jns
repnz
cs
pcmpeqd
xor
mov
push
pop
inc
sub
fs
aaa
lret
push
cli
pop
fs
jb
cmp
fidivrs
aas
xchg
ss
adc
iret
lahf
aas
fiaddl
rorl
fdivl
imul
dec
xchg
inc
outsb
and
test
addr16
cld
stc
mov
xlat
xlat
fistpl
push
mov
aas
jg
mov
rorl
daa
sti
rcrb
ror
adc
mov
lret
iret
ss
jo
movsb
cmpsb
inc
outsb
inc
mov
out
in
lahf
jno
mov
pop
jmp
mov
add
outsb
lods
bound
pop
loope
scas
rep
loope
cmc
jmp
sahf
pop
cs
fcomps
mov
add
leave
xchg
sub
mov
scas
das
lea
int3
push
jl
cld
cld
stc
repz
stc
push
hlt
xchg
lds
sbb
mov
sub
xchg
mov
in
sbb
cmpsl
mov
fdivrl
xlat
fnstsw
xchg
insl
dec
scas
mov
and
xchg
mov
jp
in
arpl
and
add
xchg
mov
bound
cs
stos
xor
out
lahf
aas
or
lods
out
fldenv
fdiv
nop
push
push
stc
mov
mov
cmpsl
inc
mov
aas
jg
cld
loop
popf
adc
je
or
sbb
xchg
loope
pop
and
inc
in
ja
mov
in
icebp
sti
lcall
inc
mov
jb
xchg
into
jle
push
mov
rcpps
jg
sub
out
jecxz
adc
adc
lahf
pop
sbb
js
stos
and
xchg
je
fdivrl
xor
adc
xor
cmp
jmp
dec
inc
dec
in
push
pop
lret
pop
push
or
inc
mov
gs
push
pop
jns
orl
test
dec
mov
insb
sub
scas
jb
mov
into
scas
daa
dec
iret
lods
adc
mov
dec
sbb
inc
cmp
lret
xchg
in
jbe
aas
jg
cld
inc
fisttps
stos
add
push
mov
sbb
loop
rclb
repz
push
jle
rep
jmp
jge
sahf
es
cld
stc
adc
sbb
pop
pop
push
mov
aad
lods
jno
leave
out
sbbb
mov
outsb
ss
inc
xchg
pop
das
popf
shrl
and
iret
or
pop
mov
lret
sub
pop
scas
setge
jns
mov
cltd
fisttps
daa
jmp
cmp
aam
cmpsb
xor
mov
rclb
fdivr
repnz
loopne
inc
cmc
pop
in
cmc
ret
test
mov
pop
cli
pop
enter
incb
push
loopne
mov
pop
outsl
mov
lahf
aas
xor
je
icebp
cwtl
mov
repz
mov
dec
std
lcall
outsl
test
insl
push
or
sub
repnz
aad
cmp
sbb
lods
pop
lods
daa
xchg
pop
inc
adc
mul
out
jbe
inc
lods
mov
push
and
aas
aas
jecxz
push
mov
cmpsl
mov
fisttps
sub
add
mov
shlb
sarl
mov
mov
out
lahf
gs
repnz
pusha
imul
push
hlt
jl
hlt
divl
iret
mov
adc
out
sahf
sub
jle
mov
cmp
push
pop
push
mov
ss
icebp
out
sbb
pop
add
ret
cmpsb
jle
cld
pop
test
imul
jg
jns
add
xor
pop
dec
pushf
nop
inc
popf
sbb
aas
iret
scas
mov
jae
cmp
cmpsb
repz
sbb
das
and
aas
adc
gs
pop
dec
mov
mov
mov
iret
insl
gs
adc
add
rorb
aas
mov
in
push
ljmp
scas
sti
in
out
repnz
jae
inc
sbb
rcr
iret
lret
mov
je
add
sbbb
bnd
or
aam
int
jae
movsb
daa
push
decb
or
test
stos
movsb
test
xchg
pop
scas
call
jg
cld
stc
xlat
add
and
lahf
outsb
std
or
mov
cmp
lahf
aas
ret
pop
mov
nop
xchg
dec
sub
iret
addr16
sub
xchg
jmp
mov
inc
adc
xor
sub
pop
rol
fdivs
sbb
outsl
les
aas
scas
jo
negl
xchg
in
out
lret
movsl
xchg
aad
jle
dec
adc
ljmp
sbb
pop
outsl
jl
push
mov
mov
mov
cld
mov
mov
shll
inc
sbb
cltd
sub
cmpl
jle
lret
lock
push
sbb
cmpsl
lret
xchg
push
pop
mov
loop
dec
push
cmp
and
out
aaa
mov
test
jg
cld
call
lea
pop
xchg
das
ja
daa
jb
inc
repnz
pop
ret
fstps
push
jge
in
xchg
jmp
in
gs
bnd
in
push
ficomps
pop
or
sarl
lock
or
cwtl
out
cmp
in
xchg
and
dec
ficoms
jns
add
mov
jne
icebp
negb
pop
jns
xchg
pop
pusha
cmpsl
test
out
icebp
data16
add
mov
jge
shll
rorl
inc
xor
subl
cmp
rcll
in
gs
mov
mov
jnp
and
test
sub
ffreep
xchg
xchg
cmp
fisubrs
repnz
repz
repnz
imul
rcr
push
mov
jl
fdivrp
test
hlt
ret
test
jae
jmp
cltd
sbb
js
or
fdivrl
mov
loop
stc
repz
out
in
sbb
call
popa
cmp
mov
ja
mov
loop
adc
iret
lahf
aas
rclb
cltd
in
mov
pop
dec
xor
int3
cld
stc
repz
jo
popf
pusha
outsb
jecxz
filds
push
cmpsl
inc
sub
jg
jl
je
insb
pop
xchg
das
push
setle
je
mov
push
insb
stos
adc
push
sbb
jg
mov
mov
das
cli
repz
jne
mov
out
lahf
aas
add
sub
mov
push
mov
repz
inc
movsl
je
icebp
aad
scas
mov
popa
mov
jno
outsl
xchg
mov
cmpsb
loop
fwait
xlat
jne
fstpl
leave
xor
inc
imul
andb
shrb
push
pop
loop
nop
dec
xchg
or
stc
repz
fsubp
xchg
or
push
pop
mov
aas
mov
push
hlt
pop
ja
fdivr
out
sbb
jg
xchg
mov
adcl
add
sbb
or
jmp
sbb
nop
iret
jo
mov
andb
jmp
repnz
cmp
jmp
sbb
cld
push
scas
mov
ds
mov
out
lahf
aas
aad
insl
mov
push
mov
cmp
cmpsb
xchg
loopne
sbb
loop
adc
sub
gs
fistps
add
sahf
jecxz
sbb
fistpl
les
movsb
cmpsb
or
stc
repz
push
lahf
pop
and
xchg
bswap
lahf
jg
mov
sbb
repnz
push
data16
ret
mov
outsb
jg
hlt
adc
cwtl
push
and
jle
out
lahf
aas
int3
push
add
imul
sti
cld
stc
repz
push
jge
out
cltd
iret
lahf
aas
jg
jns
rcll
mov
outsl
cld
stc
repz
lods
mov
stc
push
mov
xchg
lahf
loopne
mov
mov
mov
push
lds
out
outsl
and
aam
pop
jg,pt
push
dec
mov
std
repz
sub
jp
sbb
sbb
inc
add
scas
inc
popf
mov
ss
xor
mov
scas
mov
and
mov
bound
mov
lods
pop
imul
hlt
sbb
iret
aaa
mov
add
popl
mov
ficoml
jne
jp
pop
sbb
sahf
pop
fidivrs
or
aas
mov
jl
and
and
mov
bound
push
pop
cld
stc
dec
out
in
pop
imul
movsl
xor
out
decl
insl
call
sub
and
mov
dec
or
mov
lret
xchg
hlt
imul
popa
pop
mov
lret
das
out
dec
cld
pop
pop
lods
xor
mov
xor
or
add
std
xchg
mov
bound
or
jnp
das
lahf
aas
sbb
inc
out
xchg
or
mov
out
inc
xor
pusha
sbb
push
and
jg
cld
clc
into
sub
cli
rcrb
mov
or
repz
lahf
push
mov
icebp
fsts
xchg
clc
jg
cld
stc
and
push
icebp
imull
sub
iret
lahf
aas
xor
mov
popa
push
cld
stc
repz
adc
das
mov
pop
data16
adc
out
ja
jg
or
lahf
mov
xchg
hlt
in
cmc
in
test
sahf
lret
cli
xor
fidivrs
mov
jg
cld
into
lret
xchg
mov
loope
sarb
je
out
lahf
push
push
mov
mov
cmp
cmc
repnz
mov
inc
jg
cld
or
inc
addb
out
lahf
aas
sti
ret
mov
xchg
mov
div
lret
and
pusha
pop
cs
test
rcl
ljmp
loope
mov
add
jns
fldl
iret
shl
fiaddl
daa
rcll
lret
xchg
push
sub
daa
jnp
aad
mov
pop
jns
pop
aad
xchg
mov
mov
in
dec
inc
dec
leave
loopne
lret
popl
add
and
fildll
jne
pop
jle
cld
sahf
cs
js
xorl
pop
push
adc
decl
mov
cmp
lret
stos
fisubrs
cmpsb
push
mulb
fnstenv
js
shll
mov
je
adc
outsb
xchg
push
fdivrp
jg
test
mov
gs
jge
in
leave
js
inc
cmpsl
and
mov
adc
xchg
push
shll
mov
clc
pop
sub
dec
aas
mov
mov
mov
pop
repz
lahf
sub
loop
pusha
pushf
fstp
shll
cld
stc
out
mov
mov
and
pop
out
out
push
repz
fcmovb
fwait
lret
mov
jns
xchg
aas
fisubl
addr16
addb
xchg
push
add
scas
sbb
and
into
popa
jb
xchg
push
pop
push
loope
shr
out
and
fisubl
repz
into
xchg
xor
push
xor
cld
or
adc
sahf
xchg
mov
repz
lahf
pop
mov
jecxz
inc
and
jmp
stc
xchg
shlb
imul
xor
in
ja
ret
dec
test
les
mov
jns
fists
out
inc
fcoml
sub
mov
xorl
fidivrs
push
jl
fistpll
fistpll
dec
testb
in
push
sub
fwait
mov
mov
xchg
push
pop
inc
jmp
adc
push
fidivrs
ja
in
sahf
mov
pop
shrl
mov
gs
lods
rcrl
das
mov
negb
mov
mov
icebp
mov
adc
in
aam
or
adc
adc
xor
test
jg
sbb
xor
repz
xchg
cld
pop
jns
xchg
mov
nop
fucomip
pop
cld
and
cmpsl
imul
add
pop
or
gs
xchg
jnp
lcall
sarl
cmp
mov
rorl
xor
xchg
mov
in
andl
push
cmp
ror
xchg
adc
cwtl
pusha
xchg
aas
jg
push
test
xchg
cmpsl
pop
je
ljmp
loopne
xor
lgs
test
ret
add
iret
aad
dec
xchg
sbb
pop
fisubl
in
out
sub
stc
shr
sbb
cmp
jge
nop
iret
lahf
aas
jg
hlt
sub
or
cmp
jns
lret
out
dec
inc
add
outsl
aam
and
sbb
dec
popa
push
xlat
xor
pop
jns
or
or
shr
mov
fidivs
cs
sarb
lahf
aas
jg
pop
rcr
addb
or
cld
stc
repz
ljmp
lret
lret
xchg
insb
je
aas
jg
repnz
mov
xchg
fiadds
mov
xchg
in
in
mov
dec
in
aaa
rorb
pop
cmp
orl
jns
inc
rcrl
lods
dec
daa
ret
mov
lret
xchg
cmp
mov
cwtl
sub
jle
pop
sub
bswap
sti
loope
fidivrs
shrl
xlat
les
pcmpeqw
jmp
repnz
aam
clc
fldt
idivb
mov
mov
arpl
out
push
lret
shlb
insl
call
sub
jns
and
dec
inc
sub
pop
scas
mov
mov
cmp
or
inc
mov
xchg
mov
movsb
xchg
xchg
lahf
out
push
cld
stc
repz
fildl
lock
push
imull
xor
jnp
mov
jg
aam
xchg
stc
lret
add
dec
fwait
imul
dec
frstpm(287
or
fs
rorl
in
sub
pop
pop
jns
or
cmc
add
in
mov
stos
xchg
gs
adc
mov
clc
movsl
daa
inc
in
push
pop
push
out
leave
jne
pop
fidivrl
jb
pop
dec
hlt
jb
xchg
je
mov
repnz
dec
dec
out
popa
std
jae
arpl
lcall
enter
jne
xor
pop
jle
xchg
jg
pop
mov
flds
lret
mov
or
sbb
repnz
pop
pop
call
xchg
adc
sbb
repnz
aad
sub
xlat
pop
lock
scas
mov
lret
inc
cmp
or
in
dec
pop
mov
rolb
hlt
or
arpl
jbe
and
js
xchg
clc
daa
lahf
mov
xor
lock
mov
and
subb
clc
sti
add
mov
jg
xor
fdivrp
repnz
les
je
xchg
lcall
leave
dec
push
xor
mov
ljmp
push
xor
mov
or
inc
fbstp
bound
sbb
repnz
dec
outsl
sbb
pop
sbb
jg
enter
add
push
in
stc
repz
int3
inc
dec
daa
cmp
scas
jne
xchg
fisubs
cld
repnz
xchg
cmp
add
jg
pop
lds
call
cmpsl
fstps
pop
dec
leave
push
cmpsl
mov
stc
cli
pusha
addb
js
dec
lods
dec
test
xchg
iret
lahf
aas
add
jnp
dec
mov
repnz
add
dec
daa
push
sub
mov
mov
lahf
mov
push
adc
imul
jbe
lret
mov
cld
stc
mov
xchg
sbb
nop
dec
pop
jle
out
push
mov
mov
inc
jae
cli
mov
test
in
and
pushf
shll
iret
scas
cmpb
push
popf
xchg
scas
jae
and
push
div
out
std
inc
inc
pop
aad
dec
daa
outsl
test
cmp
pop
push
push
dec
in
lcall
pop
xchg
push
pop
jns
pop
jno
mov
mov
mov
ss
push
pop
jns
pop
or
clc
mov
push
pop
add
hlt
lret
cmp
fidivrl
imul
adcl
aas
xchg
xchg
insl
in
leave
and
fstl
fisttpll
xchg
in
push
pop
fwait
lods
mov
fcomi
gs
decb
jns
or
pop
adc
fimull
in
push
mov
repnz
outsl
cmp
rorl
lret
dec
mov
cmp
mov
push
cmp
add
cmp
and
in
push
ds
push
mov
subl
push
pop
mov
add
sub
cmpl
fisttpl
shl
outsl
lock
std
inc
pop
scas
dec
mov
pmullw
fimuls
add
xlat
arpl
or
jns
pop
jbe
or
shlb
das
jg
jge
xor
pop
xchg
fwait
pop
inc
add
repnz
aad
inc
scas
xor
mov
scas
xchg
mov
push
xor
mov
test
stos
sub
das
stos
iret
lahf
aas
shll
mov
stc
repz
lds
mov
mov
gs
imul
fidivs
pop
jmp
stc
repz
pusha
mov
inc
lahf
andl
stc
cld
aaa
add
mov
jo
cmpsl
in
jg
cld
stc
rcrb
cmp
mov
pop
dec
ret
pusha
insl
ret
aas
and
notb
lods
dec
lret
sub
daa
iret
sbb
in
add
in
push
std
pop
adc
mov
push
dec
test
sti
jg
cmp
outsb
int3
outsl
jg
in
test
cmp
in
cmp
fldl
mov
dec
pop
jns
lret
fdivl
ret
das
aas
pop
into
test
push
mov
jbe
cmp
sub
push
mov
aaa
in
andl
scas
or
lret
push
xchg
push
pop
jns
insb
mov
fsubrp
add
jns
jl
rol
out
sbb
xor
cmp
xchg
adc
xchg
and
fstl
xlat
iret
mov
clc
and
pop
or
andb
push
push
mov
sahf
pop
js
or
pop
in
jnp
into
jl
or
xor
scas
out
test
and
nop
mov
add
popf
and
add
insl
cmp
call
pop
adc
cli
ja
repz
sbb
mov
jne
imul
inc
pop
push
sahf
stos
jge
imul
or
out
std
and
xor
adc
iret
mov
test
pop
jae
daa
cmpsb
sub
repnz
inc
mov
fs
fistpll
in
adc
imul
rclb
ja
fdivrp
pop
lock
lahf
mov
ret
or
jecxz
out
js
adc
dec
inc
pushf
mov
insb
cld
repnz
add
fbstp
cmpsl
adcb
push
scas
out
cltd
push
pop
div
insb
mov
out
rclb
mov
inc
in
cld
or
cmp
pop
sbb
es
mov
rcl
in
jne
shlb
clc
and
pop
in
xor
sbb
pop
out
xchg
cld
or
lds
in
lcall
inc
enter
test
sub
out
loopne
push
xchg
inc
jno
mov
sub
jle
sti
repnz
sbb
jg
jbe
mov
mov
out
pop
fucomp
loope
jp
orb
out
scas
subb
pop
and
ds
sub
enter
out
outsl
rcll
and
psubsw
gs
jg
cld
stc
pop
pushf
outsb
outsl
icebp
loope
stos
bound
inc
mov
lods
pop
ds
mov
jle
iret
mov
lahf
aas
jg
and
mov
mov
cwtl
int
mov
ja
repz
or
roll
pop
mul
cmp
or
pop
inc
insb
push
pop
das
scas
mov
out
jo
bound
or
mov
mov
into
fldt
push
enter
in
das
repz
jne
stc
lock
pop
fisttps
or
shlb
xchg
push
mov
pop
pop
mov
js
sub
inc
cld
std
dec
xchg
js
pop
out
fdivrs
jae,pt
add
iret
lahf
aas
jg
add
adc
adc
mov
daa
mov
stc
repz
loopne
push
and
mov
aam
popf
inc
xor
nop
xchg
mov
jg
popf
jle
push
add
add
mov
push
pop
jns
push
fdivrs
push
daa
fs
push
pop
jns
mov
and
cmpsb
das
pop
mov
jb
xchg
cmp
imul
into
mov
push
mov
mov
popa
push
subl
and
push
cli
in
and
movsl
push
sahf
stos
pop
sub
leave
mov
ret
push
pop
ret
xchg
sub
ffreep
xchg
fcomps
xor
mov
subb
aas
rolb
aas
icebp
adc
adc
adc
sub
stc
add
das
stos
add
pushl
mov
or
push
mov
xchg
lahf
aas
jb
push
mov
dec
sub
andb
incl
repz
push
pushf
xchg
mov
insb
sub
das
mov
add
dec
das
outsl
jo
repnz
stc
repz
leave
or
popa
stos
adc
push
shlb
lahf
aas
jg
popa
call
mov
out
insl
jae
mov
mov
sbb
sub
push
add
xchg
shl
xchg
xchg
ja
cmp
cmp
jne
orb
imull
mov
mov
fs
dec
push
pop
lret
xchg
push
pop
adc
and
std
stc
stc
xor
mov
jo
fsubrp
lcall
push
fidivrs
inc
mov
adc
xor
roll
and
outsb
pusha
jae
or
dec
into
aaa
sub
pop
push
and
cwtl
xor
scas
mov
adc
filds
inc
in
lds
repnz
pop
jecxz
lret
icebp
push
shll
sub
jne
mov
adc
shrb
sub
jge
xor
xor
mov
idiv
repnz
and
pop
jg
jl
adc
aam
xchg
xor
sub
out
out
out
lret
sub
and
out
mov
scas
mov
clc
bound
daa
dec
addl
cmpsl
mov
in
pop
or
mov
mov
ffree
stos
pop
paddw
mov
int3
mov
leave
pop
xchg
mov
lret
ds
sub
mov
sub
outsb
sub
movsl
test
dec
cli
testl
aam
adc
lock
jbe
push
loope
adc
cld
add
in
inc
cmp
sbb
fsubrs
lahf
aas
jg
cmp
clc
sahf
or
test
aas
aas
aam
pop
out
shl
dec
leave
xchg
inc
ror
sub
pop
add
stc
repz
enter
insl
pop
sti
push
std
push
xor
rcrl
lahf
aas
jg
cld
inc
or
pop
jmp
or
imul
repz
insb
sbb
aam
xor
fxch
lret
mov
fiadds
sub
stos
add
scas
mov
add
xor
stos
adc
xchg
adc
sbb
aas
push
ds
cld
hlt
inc
dec
mov
ds
gs
jns
mov
movsl
popf
gs
repz
pop
addr16
xchg
jnp
and
or
loopne
jg
or
add
sub
dec
push
push
dec
lock
pop
ds
test
cs
movsb
std
repnz
test
jle
jno
subb
dec
aaa
cli
arpl
out
lahf
xchg
jns
pop
mov
inc
adc
subb
push
jp
call
mov
add
nop
lahf
ljmp
gs
jg
jg
outsb
jbe
sub
mov
dec
cmp
shl
add
ss
leave
push
inc
fmull
lahf
in
and
sub
scas
lods
jle
mov
pop
xchg
push
ret
cld
inc
ds
push
popa
rcll
cmp
jbe
repnz
and
lahf
aas
adc
stos
lods
lock
add
sub
xchg
in
pop
dec
fidivrs
in
in
sti
and
lcall
outsb
dec
jns
xchg
push
jecxz
cmp
xor
fwait
mov
enter
xchg
push
pop
cmp
les
and
adc
fstp
mov
cmpl
adc
test
jns
dec
orb
jnp
out
or
mov
jns
test
stos
lret
push
rorb
in
sbb
pop
jns
xchg
and
pusha
sub
xchg
ret
mov
out
test
xchg
ja
sub
sti
aad
mov
xchg
movsb
out
popa
adc
inc
int3
and
lret
sub
and
fisubrs
mov
jmp
mov
lea
xchg
cli
lahf
out
push
xlat
push
jno
and
cld
stc
xrelease
loopne
mov
movaps
scas
aam
iret
xchg
aas
jg
adc
xchg
mov
cld
stc
repz
jge
or
xor
ds
cld
gs
pop
clc
pushf
aaa
mov
sub
test
iret
lahf
aas
mov
arpl
call
aam
xchg
je
repz
rolb
cld
stc
adc
xchg
cli
into
inc
jnp
lahf
aas
jg
sbb
into
and
mov
in
sbb
incl
repnz
xchg
iret
xchg
repz
hlt
cmp
sub
mov
sub
pop
outsl
mov
push
jge
aas
mov
fimull
mov
dec
minps
and
xchg
call
mov
mov
cmp
in
dec
push
xchg
push
cmc
enter
test
fdivrs
pop
loopne
repz
cs
repnz
and
sub
insl
and
or
loope
outsl
dec
cmp
loope
scas
mov
mov
jl
cld
stc
inc
lea
cmp
add
mull
xchg
hlt
inc
decl
push
dec
pop
lods
and
imul
cld
scas
repz
fst
dec
push
xor
ljmp
lahf
jne
sub
or
inc
add
mov
jae,pn
push
mov
ret
das
scas
mov
test
mov
mov
xchg
mov
aaa
rcl
iret
std
scas
mov
loop
iret
lahf
inc
stos
lods
or
adc
icebp
outsb
pop
jecxz
iret
lahf
pop
push
cltd
out
je
push
mov
cltd
and
repz
xchg
test
xchg
cmp
and
aas
jg
or
cmp
push
lods
push
ja
dec
sub
out
lahf
enter
jle
je
inc
aam
cmpsb
pop
std
jge
stc
js
xchg
out
das
jno
xchg
push
fdivrp
iret
dec
inc
xor
sub
pop
std
outsb
dec
ret
pop
jns
aam
pop
mov
scas
cmc
fistps
adc
in
mov
shr
jp
adc
pop
mov
das
push
pop
pop
pop
fstpl
loope
mov
scas
lahf
mov
ud2
insl
iret
repnz
xchg
sub
in
sbb
std
int
cld
inc
cli
xchg
dec
test
daa
into
mov
lret
jg
das
jg
aas
sbb
mov
sahf
xchg
mov
sub
inc
ror
scas
push
jne
inc
cs
push
mov
sub
add
gs
repz
pop
fdivrp
pushw
aas
mov
pop
add
out
lahf
pop
cmp
aad
jne
cld
iret
lahf
arpl
repz
iret
or
mov
call
cmp
lahf
jg
sahf
xor
mov
xor
icebp
lret
out
jmp
punpcklbw
pop
sub
loopne
push
outsl
jecxz
mov
ja
ja
adc
xchg
pop
jns
xchg
jmp
cmp
es
dec
test
flds
js
lods
push
mov
adc
sbb
das
fisttpl
push
shrb
and
jg
jle
cld
jns
mov
fadd
loop
movsl
leave
sbb
sahf
cmp
dec
adc
dec
fldl
das
jge
jle
mov
sub
loopne
aas
cmc
lret
into
add
imul
test
pop
cmp
xchg
mov
shl
repnz
ja
sbb
in
arpl
and
mov
mov
jns
cmp
cwtl
sub
adc
cld
scas
pop
fucomi
xchg
popf
and
cmp
xchg
int3
and
scas
iret
lahf
pop
inc
mov
fistpll
push
ret
cli
repnz
out
sbb
inc
sbb
mov
cld
add
inc
mull
mov
scas
sbbb
lds
ficompl
xchg
add
in
mov
iret
xchg
nop
pop
out
fildll
test
arpl
jo
sub
shlb
cmpsl
frstor
jae
scas
mov
jg
fcoml
mov
fisttpl
mov
lret
out
scas
mov
jp
cmpsb
cmp
lahf
dec
push
mov
xchg
jns
test
cld
pop
test
into
mov
decl
xchg
stc
repz
and
clc
insl
cld
in
ss
ss
stc
cld
pop
inc
sub
jp
stc
repz
push
mov
or
add
aas
jg
cld
push
int
movsb
lods
ja
outsb
in
popf
shl
out
lahf
push
int3
and
xor
fldcw
cld
stc
fld
lahf
mov
sbb
xlat
gs
add
iret
lahf
aas
imul
in
std
sub
leave
xchg
cwtl
adc
cld
stc
repz
outsl
inc
push
call
stos
mov
sub
aas
jg
into
adc
jnp
dec
dec
dec
add
cld
stc
rep
mov
jb
je
inc
movsl
mov
xor
or
or
clc
in
inc
stc
fimuls
fsubrp
movsb
dec
mov
push
cwtl
arpl
mov
das
pop
mov
test
out
out
shrb
adcl
mov
jns
in
or
gs
dec
ret
jl
inc
je
ljmp
in
das
iret
hlt
scas
fidivrs
stc
retw
mov
mov
sub
mov
in
push
shlb
add
xchg
in
jno,pn
subb
cltd
or
fsubrs
ret
cmp
xchg
pop
das
jmp
mov
outsb
lcall
jbe
mov
sti
repz
lahf
lock
mov
push
pop
addb
int
jle
cld
stc
fiaddl
mov
push
cltd
add
ja
mov
lock
setb
xchg
imul
push
cltd
out
shll
in
push
pop
in
sub
gs
xchg
sub
xor
xor
sbbb
and
mov
pusha
jl
fists
sub
out
mov
or
dec
call
stc
repz
jae
sbb
aad
jbe
xchg
pop
daa
mov
mov
pop
jg
push
pop
jns
adc
and
call
pop
jns
sbb
addr16
addr16
mov
clc
pop
jns
xchg
nop
pop
cmp
int3
test
sub
in
das
push
jo
js
gs
jmp
push
pop
jns
movsl
add
push
shrb
mov
lahf
aas
mov
movl
stc
repz
sbb
or
insb
adc
jb
aas
cmpl
cld
inc
sti
pop
cmpsl
sub
dec
or
inc
aaa
jecxz
iret
lahf
xchg
adc
int3
clc
xchg
int
mov
fcmovne
sub
jae
pop
ret
cld
repnz
lcall
mov
test
aas
jg
xchg
in
pop
adc
hlt
sbb
repnz
in
aam
mov
out
pop
outsb
pushf
cli
mov
inc
and
roll
jg
mov
xchg
cli
repnz
jbe
int3
in
cltd
int3
out
lahf
pop
xor
dec
mov
mov
lret
mov
cmp
arpl
loop
push
movsb
das
movsb
lret
inc
loopne
inc
fisttpll
and
inc
jge
scas
xor
jo
roll
jns
mov
orb
push
sub
dec
push
fidivrs
arpl
cmp
jns
xchg
dec
lahf
push
loop
dec
fs
adc
adc
lret
dec
mov
dec
repnz
test
loop
mov
lods
rcrb
scas
mov
jge
inc
hlt
aam
cli
pop
sub
notl
je
pop
lods
xor
aaa
lcall
mov
clc
adc
lcall
cs
pop
jns
clc
repnz
cmpsl
cmp
cmpb
lds
and
stos
add
mov
push
dec
scas
cld
stc
repz
shl
bound
mov
mov
loope
mov
jns
push
mov
push
stc
das
mov
dec
xchg
mov
mov
in
ja
xchg
push
push
push
test
sarl
pop
jns
xor
mov
clc
scas
iret
pop
pop
jns
pop
outsl
ret
es
fcoml
out
mov
pop
jg
rcpps
pop
loope
in
jb
mov
mov
sar
fdivl
push
fdivrp
inc
dec
lods
mov
xchg
mov
test
lret
int
clc
pop
and
das
mov
rclb
repnz
push
sub
or
movsl
dec
data16
pusha
cld
insb
jae
mov
orl
clc
lahf
aas
inc
jl
lcall
pminub
test
cmp
pop
push
mov
aad
xchg
push
pop
mov
aad
scas
out
cmp
mov
adc
push
pop
jns
or
pop
test
in
ret
scas
inc
stos
jne
adc
ret
push
adc
mov
psubq
fcomps
mov
cli
lea
adc
mov
aas
push
mov
rclb
shl
and
inc
std
into
pushf
and
out
mov
movsb
inc
push
xor
jmp
cld
stc
notb
sub
mov
mov
sbb
fwait
xchg
and
and
mov
xchg
jmp
pop
stos
jmp
cli
sub
loope
lret
icebp
xchg
or
sub
cmp
nop
outsb
loopew
cmp
mov
decb
mov
push
loop
insl
mov
out
lahf
aas
mov
push
ss
and
cld
stc
repz
xor
xchg
mov
dec
mov
pop
out
mov
lds
dec
lods
xor
lret
fisttps
repz
pop
inc
stos
xchg
pop
scas
mov
je
outsb
xor
pop
or
pop
jns
dec
sbb
xlat
pop
and
inc
xchg
jl
ja
out
das
mov
mov
and
add
pop
rolb
dec
add
jg
aaa
mov
or
stc
repz
mov
mov
mov
sub
pop
jg,pt
pop
mov
clc
lret
pop
jo
push
jl
mov
out
pop
jne
add
pop
cmc
lret
fstpl
push
fildll
adc
jg
cld
stc
shlb
pop
mov
dec
dec
adc
or
aas
xchg
sub
dec
fistpl
jns
sahf
sub
scas
mov
add
mov
xchg
mov
loopne
lret
pop
fiadds
fisttps
inc
hlt
aas
mov
cmp
dec
push
cmp
dec
mov
iret
lahf
jg
scas
cmp
ljmp
div
out
cmp
xor
push
jg
pop
pop
movsl
arpl
xchg
mov
dec
aam
cmpsb
repz
lahf
xchg
lret
adc
sbb
jg
cld
stc
jp
scas
sub
cld
jne
inc
jge
loopne
xchg
lahf
aas
push
in
xchg
negb
repz
imul
xlat
mov
mov
fdivrl
mov
stc
repz
dec
std
or
ficompl
in
aaa
std
xchg
mov
pop
xchg
dec
xor
jns
pop
insl
pop
jns
xchg
xchg
test
jns
jbe
ret
mov
xchg
push
inc
call
inc
cmp
notb
pop
mov
leave
or
repnz
cmpl
inc
out
or
cmpsl
adc
pop
jns
xor
fldt
divb
jge
ja
sub
cwtl
dec
cmp
jnp
pop
push
push
mov
sbb
les
push
fldcw
lcall
dec
shrb
repz
mov
xchg
lds
push
repnz
mov
mov
mov
out
mov
add
cld
stc
repz
and
in
andl
mov
and
jg
add
push
pop
out
gs
repnz
fistps
out
es
test
inc
das
scas
mov
test
dec
adc
mov
bswap
and
push
cld
mov
sub
loop
lret
rcll
test
jg,pt
push
mov
cs
out
scas
sahf
push
push
stc
dec
std
xor
data16
icebp
or
lock
xchg
cld
stc
sahf
mov
and
mov
jo
iret
lahf
aas
or
insl
out
fidivl
popa
pop
jns
repnz
cwtl
les
out
jnp
mov
cs
pop
pop
ret
xchg
mov
cmpb
fildll
dec
scas
mov
out
pop
add
cltd
sub
cmp
mov
dec
mov
in
push
loop,pn
push
xchg
pop
pop
xchg
push
pop
jns
push
inc
pop
xor
sub
xchg
jns
gs
mov
test
mov
mov
out
add
neg
das
lahf
aas
or
cltd
repnz
in
push
pop
jns
loop
dec
push
vpackssdw
sub
jns
xchg
cli
or
divl
call
outsl
fstp
mov
push
in
test
pop
jns
pop
js
push
mov
loop
pop
adc
sbbl
test
jb
inc
push
jg,pn
cld
stc
out
jge
xor
bnd
subb
mov
add
push
sbb
pop
scas
mov
lcall
out
loope
dec
add
cmpl
cli
out
lock
scas
sub
xor
out
jg
adc
clc
in
imul
iret
lahf
pop
outsb
int
push
cwtl
imul
cld
jp
and
out
aam
icebp
dec
fs
xor
psubb
mov
xor
push
cli
in
imul
sub
lock
pop
cld
sahf
das
mov
mov
xor
jle
inc
dec
jg
cld
stc
ljmp
jne
stc
gs
out
lahf
aas
sub
stc
mov
cld
out
or
cld
stc
rep
cwtl
add
popa
shll
js
xchg
ja
jle
and
iret
mov
and
jb
cmpsl
mov
loopne,pt
repz
mov
jbe
push
call
stc
aas
mov
mov
fldcw
cltd
dec
jne
sbbl
mov
punpcklbw
lahf
xchg
mov
in
mov
mov
fs
cld
stc
repz
mov
movl
mov
aas
jg
ficoml
fdivl
xor
shlb
pusha
pop
pop
jb
and
xchg
push
xchg
popf
jno
lcall
incb
sub
sub
mov
jg
movsb
fstpt
push
sub
popa
push
mov
and
gs
mov
idivl
mov
inc
dec
xchg
mov
mov
pop
cmp
xchg
movsl
aas
loope
fisttps
and
jle
push
je
out
lahf
xlat
add
int
enter
xorb
dec
fcomps
out
xchg
jno
jle
jl
cmp
in
pop
pop
ror
jne
lahf
aas
jg
test
je
mov
and
stc
repz
add
pop
or
mov
pop
shll
lock
adc
stc
int
hlt
jb
jg
movsb
push
fwait
imul
and
mov
or
das
lahf
lret
cltd
and
mov
out
xchg
pop
scas
aaa
add
fsubrs
pusha
xchg
push
pop
jns
jae
mov
xor
pop
jns
add
outsl
cmovo
mov
pop
les
inc
sahf
outsl
decb
stc
repz
hlt
aad
int3
or
jecxz
sub
pop
push
cld
dec
cmp
sub
out
shrd
mov
sub
jmp
jno
dec
cmp
sub
test
aam
stc
cmpsl
aas
cmp
iret
outsb
dec
sbb
jg
imul
aad
mov
popa
dec
lods
ds
repz
xchg
std
cmp
in
and
cli
pusha
pop
cmpsb
and
inc
mov
sbb
lret
inc
and
test
cld
stc
repz
leave
je
leave
xchg
sbb
test
push
fdivrs
mov
cli
jg
aad
ljmp
es
daa
pop
lahf
iret
test
loopne,pn
xchg
inc
sahf
jle
das
jg
call
mov
lcall
mov
jecxz
fimuls
outsl
iret
lahf
aas
jg
subl
sbb
jmp
loop
adcb
jmp
cmpsl
xchg
add
repnz
pop
adc
sub
sub
add
cmp
iret
mov
sar
and
out
push
pop
shrb
push
jo
call
jo
pop
adc
adc
femms
pop
mov
lret
sub
cmc
dec
or
sbb
dec
insb
jmp
push
in
sub
fisubrl
lret
in
mov
scas
mov
push
mov
out
xor
mov
and
shrb
out
push
nop
data16
push
hlt
mov
gs
insb
fldl
xor
jo
roll
imul
push
and
aam
sbb
sti
in
stos
push
xchg
and
or
cmc
dec
test
stos
repnz
xchg
sub
xor
lcall
dec
mov
scas
mov
jmp
mov
xorb
ret
aam
jl
sbb
arpl
ret
repnz
dec
in
pop
rcr
lcall
lret
stos
call
sbb
sub
jbe
sub
test
jae
insl
insb
int3
pop
test
mov
scas
aaa
aam
or
adc
lret
pop
loopne
cld
mov
sub
pop
or
add
repnz
int
pop
cmp
lret
cmp
add
aam
fidivrl
out
out
sub
fdivrs
jae
add
addr16
mov
push
xchg
inc
push
hlt
push
sti
in
jg
push
mov
sub
lahf
in
idiv
pop
inc
lahf
lahf
mov
adc
pop
jns
rol
inc
fdecstp
and
test
cmp
stc
mov
aam
ja
insl
lret
sahf
pop
fs
xchg
mov
sub
fnsave
outsl
pop
sub
xchg
push
pop
jns
fcmovb
xchg
xchg
les
cmp
jle
int3
push
pop
jns
stos
and
pusha
mov
xchg
jo
out
les
cmpsb
mov
stc
cs
mov
cld
stc
repz
stos
sti
cmpl
or
xor
inc
mov
mov
pusha
mov
movsl
outsl
mov
sub
pop
xchg
ja
jl
mov
data16
repnz
cmp
dec
adc
xchg
idiv
xchg
out
adc
imul
je
pop
jns
fisttpl
add
js
dec
stos
mov
pop
jns
xchg
cmpsl
daa
rorb
adc
jb
xchg
push
adc
sti
addr16
pop
in
pop
or
jnp
arpl
aas
mov
mov
scas
rolb
xlat
imul
js
cmp
cmc
fwait
inc
out
scas
lods
adc
mov
mov
inc
divl
dec
cmp
or
jns
xor
inc
sti
sub
js
jae
sbb
insl
or
mov
loop
sarb
pop
sbb
aam
pop
inc
das
pushl
enter
scas
loopne
iret
lahf
pop
push
jg
sub
or
push
test
pop
mov
jmp
cwtl
lret
hlt
fs
lret
iret
lahf
jle
clc
in
xor
or
add
out
ffreep
scas
or
xor
in
pop
mov
std
ja
repz
jnp
repz
out
sbb
push
imul
cmp
pop
fnsave
jns
xchg
ja
ja
inc
mov
js
push
pop
stos
movsl
xor
and
gs
and
out
pop
sbb
scas
xchg
cmp
sahf
adc
cmp
jg
cld
xor
xor
iret
adc
fcoml
fstl
out
and
lods
mov
push
pop
jns
cmp
pop
lods
sub
xchg
push
pop
jns
push
xchg
aad
iret
pop
fidivl
ja
lret
xchg
rcrl
out
cld
stc
xchg
icebp
cmp
dec
repnz
ds
jg,pt
rclb
add
sbb
pop
pop
das
popa
out
ds
pop
inc
setp
dec
push
fdivrl
sbbb
cmpsb
insl
out
sbb
or
lahf
jg
pop
or
icebp
out
add
xor
xchg
icebp
in
iret
in
lret
push
fstpt
ljmp
in
das
ds
pusha
fcmove
imul
mov
fmuls
repz
in
jne
xchg
aas
jg
fwait
sbb
jecxz
cmpsl
pop
test
xor
stc
repnz
fildll
sarb
xorl
pop
dec
pop
fsts
push
jge
push
xchg
push
pop
jns
mov
and
sub
push
shl
mov
in
fstpt
rorl
neg
aas
jg
cld
add
push
xor
push
fmuls
das
lahf
leave
lods
stos
data16
cltd
fildll
push
pop
jns
in
jo
mov
adcl
std
jnp
in
jge
movsl
and
inc
outsl
call
fidivrs
inc
xchg
xchg
js
repnz
sub
xchg
push
pop
jns
xchg
js
pop
fdiv
cmp
push
pop
jns
mov
arpl
cli
cmpsl
test
sub
in
jae
hlt
aam
arpl
cmpsl
dec
cld
jnp
icebp
in
push
test
sti
inc
mov
testl
dec
and
fists
mov
mov
sbb
call
repz
dec
ds
fdivp
cltd
sub
cld
stc
and
and
or
js
and
scas
gs
inc
aam
pushl
add
repz
lahf
in
sub
xor
sub
dec
inc
outsb
mov
cld
stc
lahf
mov
pusha
and
xchg
into
jle
jg
das
mov
cs
cmp
fsubl
ret
iret
cld
dec
xchg
xchg
mov
sub
lock
cld
xchg
shrl
in
mov
mov
lahf
scas
jle
lret
xchg
lahf
pop
xchg
pop
outsb
jno
push
xor
rcrl
scas
add
mov
pop
jns
pusha
stos
inc
js
scas
jno
push
xor
add
jns
lret
xchg
jne
cmp
lahf
icebp
fistps
std
jnp
jge
inc
mov
ss
add
out
ds
mov
iret
lahf
aas
jg
cs
add
arpl
pop
dec
jle
jmp
mov
mov
repnz
inc
xchg
push
lret
add
lods
hlt
aas
jg
pop
and
jg
inc
sbb
mov
jb
cltd
inc
call
mul
lods
or
cmp
das
adc
imul
fists
xchg
dec
sbb
int3
jg
cld
sbb
ret
fiadds
das
inc
out
lahf
aas
adc
or
adc
xlat
in
popa
push
inc
int3
ficomps
lahf
aas
jg
jg
push
hlt
shll
call
shll
jns
repnz
inc
push
repz
sti
in
push
pop
cmp
xor
movsb
mov
lret
jb
repnz
xor
push
pushf
lahf
sub
mov
sub
cs
jge
fcomps
cmc
orl
enter
es
insb
xchg
ret
ja
dec
jge
xchg
add
aas
imul
cmc
stos
xor
into
sbb
xchg
cmp
pusha
mov
cld
cltd
push
mov
dec
inc
mov
cltd
fnstenv
pusha
or
iret
lahf
aas
dec
sahf
dec
push
insl
inc
cmp
cs
shl
lahf
inc
sbb
lret
addr16
mov
sbb
dec
and
push
in
push
pop
mov
mov
mov
xchg
push
pop
jns
lcall
jle
mov
ljmp
insb
lds
pop
adc
fstl
das
jecxz
and
xor
outsl
outsl
xchg
mov
out
pop
setne
lahf
mov
xchg
iret
outsb
push
pop
jns
jge
sbb
loopne
push
fcmove
add
xor
scas
xor
stos
pop
bound
outsl
cmpsb
cmp
test
outsl
stc
stc
repz
sti
cmp
repz
dec
jl
xor
jle
or
mov
mov
aas
cltd
mov
push
push
and
mov
xchg
push
pop
inc
mov
stc
pop
gs
add
or
das
push
pop
jns
add
sbb
pop
push
in
test
testb
or
out
mov
sahf
not
jle
sti
repnz
mov
and
js
repz
repnz
iret
xchg
repnz
cltd
ret
mov
or
pop
sub
test
or
repz
push
cmp
scas
int3
cmp
fildl
mov
cmpl
gs
js
push
lret
decb
xadd
dec
push
xchg
mov
and
sub
push
add
xchg
into
hlt
insl
inc
repnz
lahf
aas
sbb
call
fnstsw
inc
jg
jecxz
cmp
cmpsl
or
jnp
dec
stc
lret
or
lahf
aas
jg
push
jne
mov
rcrb
ljmp
jecxz
in
fwait
lods
loop
iret
sbb
dec
mov
xchg
aas
jg
or
and
dec
mov
leave
adc
mov
lret
out
lahf
mov
pop
and
test
pop
jmp
aas
mov
mov
mov
lret
pop
and
cltd
imul
in
das
push
jnp
icebp
insb
dec
scas
jb
js
add
push
pop
jns
cs
pushf
es
pop
enter
adc
out
shr
cmpl
jle
jg
cld
stc
xchg
inc
gs
inc
pop
mov
insb
popa
das
sub
popa
andl
inc
call
jle
cld
stc
repz
jb
adc
mov
jno
mov
aas
jg
xchg
jb
jmp
and
mov
jecxz
mov
pop
inc
jmp
movsl
xchg
push
out
mov
popf
out
lahf
aas
sbb
sub
jmp
out
hlt
repnz
lods
inc
ja
mov
rorl
cmp
ljmp
mov
dec
fs
push
mov
iret
lahf
pop
mov
jns
cmp
loope
lahf
pop
ja
push
pop
cli
sub
bts
les
sub
clc
jbe
cld
cld
stc
sbb
jnp
inc
and
dec
mov
rorb
add
inc
lcall
xchg
sub
adc
xchg
jge
jno
out
pop
scas
mov
mov
xchg
jae
add
pop
add
leave
aaa
lods
mov
ljmp
jge
cs
or
jp
pop
leave
inc
repnz
enter
xchg
mov
push
sbb
imul
clflushopt
sub
mov
cmp
jae
adc
sar
xor
decb
mov
into
mov
inc
jnp
out
lahf
aas
and
push
xchg
sub
xchg
fcomps
xchg
int3
cld
cld
stc
xrelease
and
sub
loop
jge
sbbb
mov
pop
or
shlb
mov
jne
imul
xchg
cwtl
sub
jle
jl
dec
lret
inc
negl
mov
in
sbb
cltd
xchg
mov
test
jle
mov
or
repnz
sub
decb
iret
ret
dec
mov
cli
repnz
out
outsl
xchg
or
fidivrs
or
sbb
out
push
data16
adc
jns
inc
ljmp
dec
in
aas
jg
hlt
notb
dec
sub
mov
and
mov
sbb
daa
adc
jg
cld
stc
and
dec
out
fdivr
pop
in
ljmp
iret
lahf
aas
sub
sub
or
and
or
xor
repz
jae
cmp
cld
xchg
clc
jbe
outsl
fdivp
jl
icebp
inc
inc
or
iret
lahf
aas
jg
and
push
rcrl
repz
sub
push
das
test
stc
jbe
jae
sbb
lahf
aas
jg
test
fistl
pop
cwtl
mov
out
mov
fdivp
in
movsb
stc
es
xor
jle
jl
ds
andl
xlat
sbb
sar
mov
add
lods
inc
cld
jb
fnsave
dec
adc
sbb
or
lahf
cmp
repnz
xchg
mov
popa
les
in
outsl
shrb
iret
es
mov
stc
repz
test
out
cltd
mov
cld
das
test
test
mov
sarb
dec
cmc
or
notl
inc
stos
and
ret
out
mov
out
js
sub
fdivrl
loope
sti
repnz
repz
iret
jle
push
inc
idiv
push
dec
outsl
dec
xchg
aas
sub
lret
and
je
add
stc
pop
mov
fiadds
test
adc
or
cmp
push
and
out
inc
cltd
arpl
pop
adc
inc
mov
addr16
pop
or
loop
cmpsb
push
jmp
jns
packsswb
xchg
xchg
xchg
push
shll
cs
jcxz
popa
push
ret
sub
xor
mov
dec
jge
push
jnp
imul
sbb
sbb
lock
cmc
sbb
cwtl
adc
repnz
sti
popa
lret
int
into
jmp
mov
cmp
xor
cmp
inc
mov
pusha
std
dec
mov
adc
xchg
das
sub
jle
dec
add
or
jns
call
repz
testb
jg
xchg
addr16
dec
dec
in
push
pop
mov
lahf
xor
movsb
mov
in
jbe
sub
std
adc
sub
enter
ja
jle
push
addr16
xor
das
lar
pop
jns
xchg
sub
mov
in
lret
push
jmp
lret
pop
inc
aas
mov
pop
hlt
out
into
xor
std
dec
stos
add
xchg
imull
mov
scas
ljmp
push
pop
cmp
jle
push
dec
mov
fists
pop
inc
push
pop
jns
push
cmpl
scas
adc
fnsave
dec
hlt
xor
fstpl
mov
add
sbb
sbb
stc
repz
repnz
pop
cs
cld
pusha
call
loop
mov
add
jge
add
mov
mov
iret
pop
stos
pop
insl
test
iret
daa
imul
lret
jns
inc
cmp
movsb
adc
sub
lret
mov
adc
xlat
sub
inc
xchg
sub
insl
or
pusha
push
inc
leave
pop
repnz
sub
fidivrl
out
in
pop
loope
clc
sbb
add
cld
inc
cli
inc
mov
fcompl
mov
aas
jg
xchg
push
ret
push
pop
cmpl
les
iret
lahf
aas
fisubs
xor
cmp
xorb
out
hlt
enter
fwait
and
enter
add
ss
xchg
lahf
movsl
and
mov
pop
jns
fildll
sub
fwait
sbb
jo
in
push
pop
pop
sbb
push
xor
push
pop
pop
mov
lcall
lret
mov
sbb
and
sub
mov
pusha
push
dec
adcl
lret
push
cli
stos
push
dec
mov
inc
iret
movsb
in
sub
push
jno
sub
stc
add
pop
dec
mov
lahf
aas
jg
dec
jnp
adc
sbb
jne
push
imul
iret
out
rorl
cs
cmc
in
loope
add
xchg
scas
mov
je
xrelease
mov
das
icebp
ljmp
jns
fiaddl
sarl
scas
adc
push
jo
outsb
scas
xchg
mov
dec
jg
jg
imul
movsl
out
pop
and
scas
sahf
lods
aas
fst
pop
inc
and
adc
repnz
in
andb
out
lods
inc
ret
pop
shrl
pop
jg
imulb
sar
out
mov
mov
push
je
int3
xchg
cld
repnz
repz
pushf
push
ja
xchg
mov
test
lahf
roll
stc
out
xchg
jg
cld
adc
scas
jne
pop
daa
popf
xchg
hlt
pop
jne
pop
sub
mov
xor
sarl
push
mulb
repnz
leave
stos
stc
imul
lcall
scas
mov
fstpl
mov
pop
out
lret
pop
xchg
aas
test
dec
aas
std
bnd
scas
push
and
xchg
pop
pop
out
stc
rcrb
mov
inc
and
xor
dec
dec
ret
repz
jle
cld
xchg
jmp
mov
jl
push
out
xchg
inc
mov
jmp
add
int3
js
shl
lret
pop
mov
shll
pop
roll
add
mov
lods
lea
stc
and
outsl
faddl
push
test
sar
push
das
aas
jg
clc
int3
sbb
enter
and
shll
add
xchg
cmp
inc
mov
mov
dec
sub
push
in
jmp
ret
imul
dec
cld
stc
repz
jle
into
mov
mov
pop
dec
lahf
aas
jg
pop
push
jle
xor
les
arpl
sbb
sahf
pop
xchg
fdiv
pop
cmp
lea
pop
cld
insl
jle
jecxz
push
pop
cwtl
jne
mov
mov
mov
inc
scas
mov
cmp
inc
das
popa
jbe
jg
fdivl
push
fidivrs
pop
iret
dec
icebp
sub
add
and
xchg
test
cmp
add
mov
pop
in
fbld
fimuls
in
xchg
pop
test
jns
out
ja
pop
out
outsl
mov
scas
jecxz
in
aas
or
jno
hlt
call
movsl
aaa
inc
sub
lods
das
rcll
and
dec
jbe
mov
cld
imul
test
inc
sub
or
ret
jp
sub
cmp
loop
and
sbb
dec
nop
lret
cld
fsqrt
in
sub
inc
loop
add
dec
out
aas
jg
or
arpl
push
data16
mov
repnz
scas
insb
shr
adc
push
cli
das
mov
jge
iret
xor
mov
mov
lret
lahf
push
decl
repz
jae
sub
xor
push
pusha
push
in
ret
sbb
loopne
dec
in
shrl
push
pop
jns
mov
jmp
test
fnstcw
in
dec
into
mov
dec
aam
dec
jg
mov
in
call
push
popf
stos
icebp
rcll
mov
lret
add
push
adc
outsb
leave
insb
cmc
mov
aas
push
outsl
dec
adc
add
adc
out
push
mov
mov
jne
decb
mov
mov
cwtl
jl
mov
xor
cli
mov
cltd
xor
inc
push
mov
ljmp
dec
or
filds
push
and
sti
mov
int
mov
jg
sub
mov
inc
aaa
add
jbe
jecxz
iret
mov
jmp
pop
iret
mov
sbb
push
pusha
mov
mov
or
call
mov
in
int3
adc
into
or
inc
pop
lret
scas
sbb
stos
lea
mov
mov
jle
or
shll
scas
mov
repz
or
mov
out
dec
icebp
lret
xchg
pop
and
mov
dec
in
cmpb
xor
mov
push
mov
lret
addr16
mov
add
fwait
sub
aaa
jo
rclb
pop
jns
xchg
add
fisttps
mov
jg
inc
and
cmp
lret
stc
aaa
sbb
icebp
mov
stc
repz
in
dec
mov
and
je
inc
mull
fdivp
dec
xchg
ja
jg
sbb
sbb
xor
stc
xchg
icebp
in
mov
xchg
sti
repnz
nop
pop
cld
lds
fdivs
inc
pop
ds
push
loopne
les
and
push
pop
inc
out
faddl
lahf
aas
jg
ds
adc
lds
cs
xor
jns
imul
es
leave
ds
das
push
xchg
ja
pop
out
les
loopne
sti
paddsb
jns
fisttpll
sbb
in
sub
dec
sti
or
frstpm(287
add
jns
xchg
push
movsl
std
fldcw
cmpb
andl
iret
rcrb
mov
inc
das
jg
jg
lret
fimuls
push
sub
iret
lods
xlat
scas
scas
cs
pop
stc
xchg
cmc
lret
sbb
lret
movsb
ds
lahf
jns
jg
pop
rcrb
sub
hlt
fadds
fsubl
repz
lahf
ret
sub
dec
gs
lahf
in
add
jg
cld
stc
out
insl
shrb
lods
ja
xor
mov
dec
mov
fldpi
shll
scas
xchg
repnz
or
or
mov
nop
or
mov
pop
inc
jecxz
xor
jg
mov
inc
lea
push
mov
test
pushf
and
in
cmpsb
cmp
pop
jns
out
outsb
mov
fists
lods
popa
sub
div
in
dec
inc
and
out
loope
inc
mov
push
pop
mov
les
add
mul
push
pop
fiaddl
pop
push
mov
mov
jns
xchg
push
or
cmpsl
mov
adc
sub
scas
add
mov
repz
sbb
push
pop
jns
sub
in
lret
mov
cmp
out
outsl
call
xchg
scas
loopne
dec
mov
mov
out
rorl
xor
xchg
inc
incl
push
mov
pushf
pop
mov
iret
idivl
clc
push
or
outsl
std
movsl
xchg
pop
sarb
shrb
test
ror
dec
jne
into
and
push
push
fs
loopne
out
ja
inc
orl
cld
stc
aaa
gs
xor
sbb
mov
jecxz
lret
test
and
call
fstpt
hlt
or
xchg
pushl
repz
adcb
dec
stc
in
outsl
xchg
sbb
mov
add
pop
lods
in
mov
sub
out
lahf
movsbl
xor
lret
mov
pop
jmp
inc
scas
xor
push
addr16
in
inc
pop
leave
xchg
cmpsb
ja
iret
add
xor
mov
and
add
dec
addr16
test
xchg
pop
insb
cmp
add
lahf
mov
andl
dec
ss
cld
inc
clc
repnz
popf
push
leave
out
mov
xchg
push
fimuls
ret
mov
inc
push
pop
jns
push
sub
cmp
jp
lret
add
lret
xchg
sbb
imul
sti
jnp
mov
rorb
aad
pop
pop
or
cld
cmp
das
movsl
inc
rcrl
pop
outsb
icebp
les
ss
int3
add
or
scas
mov
lods
les
movups
cmp
lret
add
insl
mov
mov
mov
outsb
mov
lahf
cmp
repz
inc
pop
pop
cmp
out
dec
dec
cmpsl
mov
cld
stc
jmp
fistpll
adc
xchg
sbb
cmc
insb
mov
mov
les
mov
sub
add
xor
xor
out
mov
sub
jge
adc
xchg
fdivr
mov
out
mov
je
adc
dec
jae
pop
rclb
lret
ss
aam
loop
in
loope
fistpll
mov
stos
fsubs
iret
mov
pushf
movsl
and
or
decl
adc
mov
sbb
cmp
in
xchg
movd
and
sahf
or
jns
clc
mov
adc
push
outsb
dec
pop
push
push
inc
int
sbb
xchg
jne
int3
mov
shlb
cmpsb
jle
test
int3
xor
or
stos
dec
in
ja
pop
xchg
mov
jne
clc
repnz
cmc
and
sahf
mov
sti
inc
pusha
adcl
jno
mov
xlat
lret
iret
das
movsb
push
adc
lret
mov
or
dec
call
pmaxub
lret
cli
cmp
mov
sbb
mov
xchg
popa
sbb
aam
mov
mov
dec
jge
lahf
pop
mov
imulb
inc
mov
lret
out
and
fwait
sub
stc
hlt
mul
xlat
inc
cld
inc
ret
pop
es
xor
and
lahf
aas
push
or
push
xchg
in
dec
cld
stc
repz
out
push
hlt
mov
ret
and
imul
jne
adcb
dec
sahf
imul
xlat
mov
lods
inc
mov
outsb
addr16
fisttpll
push
mov
call
push
pop
jns
inc
out
xor
xor
scas
pushf
dec
fnstsw
jns
adc
das
add
pop
lret
or
jmp
jb
cwtl
scas
mov
fidivrs
and
scas
aaa
mov
pop
daa
sub
pop
pop
jns
inc
lret
repnz
ja
push
pop
and
hlt
inc
cmpsb
mov
jle
in
pushf
inc
or
retw
sbb
xlat
cli
in
fidivs
xchg
je
aas
jle
fistps
fbld
or
cmp
xchg
push
sub
pusha
movsb
xchg
pop
ss
lret
xchg
push
pop
add
shlb
popf
outsl
mov
lret
pusha
mov
sub
subl
scas
mov
mov
inc
mov
mov
mov
out
lea
ja
aas
xchg
push
stos
sahf
js
and
jns
xchg
lret
adc
test
stos
sbb
outsb
je
ret
jo
mull
popl
jg
add
test
or
jmp
in
lahf
adc
addr16
loopne
xchg
ja
mov
add
lcall
xchg
push
fisubrs
lret
push
xchg
ret
shl
sbb
mov
cs
lahf
test
insb
inc
mov
jl
fidivrs
mov
mov
repnz
lahf
xor
lods
test
lret
aas
enter
addr16
stos
das
or
icebp
lret
sub
push
cmpsb
popa
into
xchg
repz
out
jns
pop
repnz
ret
call
outsb
daa
mov
mov
test
push
xchg
mov
loopne
sub
les
faddl
js
xlat
push
fisubrs
fwait
clc
cld
add
setb
rcr
dec
mov
loope
mov
mov
jg
dec
jbe
je
push
xor
imul
scas
jns
call
fsubrl
and
inc
push
cmp
inc
addr16
xchg
aas
mov
scas
adc
in
cltd
or
jg
push
div
mov
jae
sbb
xchg
push
pop
cmp
xchg
clc
mov
aad
nop
pop
mov
jns
pop
or
mov
notl
into
subb
jbe
notl
fsts
push
lret
out
jle
scas
mov
das
inc
mov
xchg
mov
jle
jge
or
das
pop
or
scas
fs
jl
add
cmc
enter
ja
mov
scas
mov
enter
lahf
adc
cmp
mov
or
mov
xchg
jns
fstpl
mov
jns
rclb
push
pop
pop
cmpsl
xchg
call
and
jns
pushf
movb
addr16
mov
sti
idivl
in
add
out
mov
jne
inc
dec
push
xchg
mov
iret
sbb
in
fists
add
ja
xchg
pop
ds
dec
int3
int3
cli
int
fistpll
dec
and
call
xchg
scas
jae
sarb
cld
mov
sbb
arpl
fs
aas
stc
repz
scas
sbb
imul
popa
push
cld
pop
pop
mov
mov
jb
imulb
std
in
jl
mov
xchg
and
aam
cmpsl
lret
sub
push
lea
jp
mov
stc
movsb
pusha
sti
pop
xchg
jns
push
stc
test
jge
pusha
cmp
aas
lods
dec
mov
jg
cld
nop
popa
sub
inc
xor
jecxz
and
out
xchg
iret
lahf
lods
sub
xor
sbb
lods
and
jecxz
push
xchg
sbb
sti
jecxz
jb
outsl
jno
rclb
mov
sbb
daa
mov
in
lret
sub
pop
mov
scas
lret
rorl
cmp
inc
cmp
jl
repnz
push
mov
mov
movsb
add
int
in
jle
lea
loopne
cmp
out
pop
inc
out
fldl
pop
inc
dec
loopne
cmpsb
scas
jle
repnz
jns
andb
pop
cmp
cmpsl
out
rcr
adcb
insl
sbb
dec
pop
add
or
orl
xchg
dec
jle
cmp
pop
sbb
jmp
or
mov
push
dec
cld
cmp
aam
and
pop
jle
scas
cmp
es
sbb
into
gs
stos
pusha
iret
xchg
inc
lret
jo
jo
push
mov
aas
mov
addr16
pop
in
ds
inc
nop
mov
adc
out
iret
mov
das
and
cmpsb
out
mov
scas
sbb
jge
repnz
into
jle
sbb
lahf
push
imul
push
xor
dec
rolb
or
roll
imul
jb
pop
loop
mov
idivb
xchg
xor
adc
or
xchg
push
pop
jle
ret
mov
std
xchg
inc
pop
pop
jns
out
lahf
jp
pop
rol
jg,pt
cld
mov
or
mov
enter
mov
lea
pop
in
mov
hlt
in
push
ret
pushf
imull
add
lret
mov
jp
inc
xchg
faddl
mov
xor
scas
mov
sbb
in
sbbl
cmc
sbb
scas
movsb
sbbb
inc
es
in
push
inc
pop
xchg
mov
push
xchg
pushf
in
push
pop
int
pop
ret
and
in
pop
filds
xchg
push
pop
jns
daa
jge
in
fadd
xchg
repnz
aad
xchg
icebp
out
enter
dec
scas
outsl
xor
xchg
scas
cmc
mov
push
daa
test
xchg
dec
or
in
push
jge
push
pop
scas
rcrl
inc
ret
into
ljmp
or
in
iret
fisubrs
mov
and
xchg
mov
push
push
push
hlt
in
iret
push
scas
cmp
lods
test
in
cld
stc
cmpsl
mov
repnz
pop
mov
iret
lahf
aas
jg
leave
test
popa
mov
stc
stc
repz
aas
insb
dec
cs
jo
insb
inc
sbb
lret
ret
outsl
pop
cmp
lret
mov
push
fwait
outsl
dec
xor
scas
mov
shl
stc
shrb
xor
dec
mov
repz
rcrb
ss
jg
cld
stc
xchg
aas
hlt
or
sbb
dec
mov
xchg
ja
shld
mov
sti
bound
shl
xchg
push
pop
jns
test
jno
push
inc
or
rcrl
pop
stos
icebp
jnp
sarl
sbb
fistl
sub
dec
sbb
std
repnz
daa
jle
xchg
push
or
adc
lahf
jg
mov
jge,pt
into
xchg
stos
or
lret
iret
sbb
xchg
or
ret
mov
pop
cld
jns
or
xorb
outsl
adc
shrb
lahf
aas
jg
imul
movsb
je
movsl
mov
lret
sub
jmp
mov
cmc
repnz
fsincos
imul
out
xchg
iret
mov
adc
sahf
dec
pusha
push
das
sub
mov
mov
loope
outsb
repz
xchg
cmpsb
xor
fwait
mov
mov
push
in
dec
cld
outsl
xor
lahf
or
mov
cltd
roll
movsl
cmp
in
push
fidivrs
lods
inc
pxor
out
in
xchg
push
pop
jns
fsubl
push
out
add
inc
pop
jns
fstpl
dec
mov
cmp
sbb
adc
xchg
push
enter
mov
jnp
cmp
pop
dec
das
ja
pop
insl
jne
outsb
sti
pop
pop
aas
and
mov
cld
push
shlb
add
das
mov
sub
ret
push
sub
das
inc
and
lahf
pop
loope
fimuls
jb
lods
xchg
mov
repz
imul
test
sub
push
arpl
scas
loopne
jo
ds
lahf
aas
jg
imul
add
lret
rcrl
das
mov
out
and
xor
sub
xchg
lahf
aas
jg
insl
pop
pop
stos
or
sbb
or
fnstenv
mov
ret
cmp
aam
sbb
les
dec
cld
fimull
je
cmpsb
das
iret
mov
iret
lahf
aas
ljmp
adc
loope
fnstenv
stc
rep
cmp
mov
pop
out
test
jg
adc
cwtl
aas
push
mov
push
iret
lahf
aas
sbb
jb
fs
int
jle
repnz
lret
jp
sbb
aas
cmpsb
inc
icebp
jmp
lret
sub
hlt
repz
inc
stos
lahf
std
jle
repnz
rcr
xor
sarb
pop
bswap
fists
stos
test
aam
fmuls
add
sub
stos
mov
in
nop
inc
xchg
pop
stc
mul
inc
into
mov
in
in
sub
ljmp
and
push
lcall
lret
sub
gs
jo
jg
cld
add
andl
fcomi
xchg
sbb
adc
mov
pop
jae
sahf
mov
enter
adc
test
in
ds
cld
stc
adc
jmp
mov
sub
pop
and
xor
pop
cmp
jo
and
ljmp
xor
lahf
aas
jg
pop
push
xchg
pusha
aaa
int3
push
push
xlat
xor
out
pop
in
shll
mov
lahf
and
imul
test
dec
lods
ds
out
lahf
aas
pavgb
jp
pop
imul
cld
stc
repz
lahf
xor
xchg
or
pop
jle
add
iret
adc
ffreep
stc
push
pop
jns
adc
arpl
dec
lahf
xchg
cmp
xchg
in
les
pop
lods
sbb
out
lods
nop
repz
das
push
mov
repz
es
in
hlt
sub
xchg
push
pop
jns
cltd
cmp
sub
icebp
inc
aad
scas
cld
jb
mov
in
cwtl
inc
movsb
inc
dec
stc
aam
mov
and
mov
pop
scas
out
lret
sub
outsl
faddl
repnz
daa
jmp
in
lahf
dec
xchg
scas
mov
std
repnz
clc
ja
das
subl
push
jl
or
dec
mov
loope
sub
push
mov
ds
jae
pop
mov
adc
insb
add
or
repz
outsb
pop
adc
inc
aad
or
fildll
jg
cld
mov
xchg
dec
sub
and
sarb
bswap
xchg
out
lahf
mov
mov
jne
adc
cld
stc
lcall
insl
mov
es
lret
out
punpckldq
aad
sbb
adc
icebp
scas
cli
mov
negb
mov
sbb
sbbl
pop
ds
outsb
cmp
adc
out
das
out
lret
pop
andb
cmp
mov
scas
das
lods
cmp
sub
clc
jae
andb
les
aad
mov
out
jle
lret
xor
out
stos
call
jge
pop
dec
outsb
test
stc
repz
inc
jno
push
inc
adc
sbb
pop
jp
push
jecxz
cld
bnd
xchg
xlat
lods
pop
dec
dec
gs
test
or
lea
sub
in
iret
and
ja
mov
cld
stc
mov
jecxz
sub
push
cwtl
pop
jne
cmp
arpl
mov
sbb
enter
iret
femms
push
cmp
out
out
aaa
xor
scas
mov
push
xchg
adc
mov
inc
das
jg
lret
jne
push
mov
sub
test
rclb
pop
outsl
sbb
daa
adc
cmp
jg
shlb
fwait
cmpl
rolb
xlat
push
dec
mov
mov
cwtl
mov
out
lahf
dec
clc
inc
xor
gs
jg
int3
push
sub
out
leave
in
lahf
aas
mov
imul
cmp
jl
sti
in
xchg
in
inc
data16
inc
xchg
aad
mov
xor
lahf
shlb
scas
dec
stos
mov
xchg
push
pop
pop
leave
adc
lcall
lods
inc
stos
jmp
ljmp
pop
mov
cmpsl
ja
xchg
out
lahf
mov
les
xchg
pop
das
add
push
jg
cld
stc
out
pop
pop
push
popa
sub
push
dec
out
lahf
aas
movsb
aad
sub
cltd
pop
stc
rcrb
cld
cld
stc
repz
cltd
push
fdivrp
pop
jmp
inc
dec
mov
sub
mov
shrl
xor
loope
das
cmp
inc
cmpsb
mov
in
iret
shlb
pop
ljmp
fstl
inc
cmp
call
xchg
lret
push
pop
jns
pusha
enter
xlat
cltd
push
repz
icebp
lret
xchg
incl
mov
outsb
jle
cld
stc
popf
xchg
push
test
inc
addr16
pop
jns
mov
sbb
sbb
repz
dec
push
pop
push
pop
dec
sub
jmp
repnz
push
pop
pop
xor
mov
out
lahf
aas
enter
scas
or
inc
shl
or
push
enter
or
in
iret
lahf
aas
aas
mov
cmp
mov
scas
gs
lret
cld
stc
repz
andb
ds
xchg
pop
out
pop
jmp
das
push
mov
push
sub
test
orb
jg
cld
stc
xor
xchg
lcall
mov
ficompl
loop
repnz
lds
xor
repnz
dec
mov
arpl
or
daa
cli
push
jle
push
je
imulb
stc
xor
repnz
sahf
aas
or
mov
pop
aas
into
in
das
mov
push
mov
inc
add
stc
repz
jmp
arpl
test
jnp
pop
fidivrs
jbe
mov
sbb
int3
inc
inc
aas
mov
decb
adc
xor
aas
sbb
jl
fxch
xchg
push
fimuls
jb
cwtl
stos
push
scas
testb
push
mov
ljmp
fisubs
mov
jns
xchg
aas
cmc
int
cli
leave
mov
idivl
push
in
push
pop
cwtl
sbb
push
adc
pushf
jae
cmpsl
lret
mov
out
lahf
jnp
jb
fstl
jns
cmp
mov
jle
and
stc
cmp
xor
dec
jle
pop
jg
jg
xchg
dec
adc
adc
iret
lahf
pop
ds
mov
out
jno
cmp
das
jg
mov
or
repz
adc
scas
test
fisttpll
stc
repnz
out
and
cmpsb
mov
mov
adc
out
jo
inc
xchg
xor
sub
jle
adc
mov
clc
movsl
loope
sub
sub
jns
add
mov
push
fsubp
xchg
or
dec
adc
fwait
and
imul
lahf
cmc
lods
mov
cmp
cli
jg
sarl
jb
pop
pop
or
cs
mov
push
jae
lahf
aas
jg
dec
mov
std
mov
movsb
mov
fidivs
in
out
xchg
pop
mov
xchg
sbb
mov
scas
out
and
xor
cmpsl
pop
pusha
jo
or
repnz
pop
iret
mov
dec
cmp
push
outsl
and
outsl
jmp
loopne
aaa
push
scas
mov
rolb
pop
lcall
jg
repnz
inc
stos
or
inc
mov
lret
mov
lods
sbb
das
scas
mov
mov
xor
adc
cs
iret
scas
movsb
fsubrl
mov
sbb
push
sbb
add
in
test
fnstsw
or
dec
loop
stos
shlb
outsl
xchg
push
pop
jns
mov
mov
push
adcb
jle
add
lret
leave
shll
pop
adc
pop
sub
jg
cld
xor
test
call
out
xlat
xor
repz
lahf
cmp
jge
push
repz
mov
cld
stc
addr16
cmp
mov
add
lea
nop
aas
dec
pop
mov
xchg
push
pop
jns
fimull
cmp
es
je
push
rolb
jl
in
and
shlb
ja
test
cli
imul
enter
lret
fldcw
jo
sti
aad
adc
paddb
sub
cmpsl
jo
push
jl
inc
sub
jo
in
pop
mov
dec
int
stos
ret
lret
dec
mov
scas
sub
pushf
iret
iret
pushf
insb
push
into
call
pusha
scas
mov
shll
cmpsb
or
jnp
mov
outsl
xor
or
std
push
inc
pop
push
sti
sub
dec
ret
cmp
xchg
das
push
mov
popf
inc
das
add
shrb
sub
jle
add
les
mov
out
push
popa
pop
cmpsl
push
outsb
xchg
mov
dec
mov
jns
mov
pop
adc
out
lahf
or
add
hlt
push
cli
in
dec
xlat
shlb
lock
xchg
aas
jg
mov
fmul
in
dec
add
aam
mov
adc
push
andl
cltd
shll
dec
xchg
push
mov
repz
adc
xor
sub
dec
mov
iret
push
pusha
cmpsl
aas
jg
cld
mov
stc
sbb
push
xor
in
ja
dec
and
das
imul
xor
jp
cwtl
test
mov
jns
cltd
jae
adc
dec
xlat
xchg
add
dec
jge
in
xchg
cld
sub
add
pop
and
stc
repz
push
sub
lock
mov
lahf
aas
jg
in
fs
cld
cmp
imul
jecxz
iret
mov
loopne
scas
push
outsb
mov
adc
lret
lahf
ss
sahf
mov
lahf
jg
out
js
lret
das
or
add
jle
repnz
fbld
sti
int3
inc
iret
imul
imul
cmpsl
inc
sarb
idiv
repz
lds
cltd
stos
jns
js
outsl
movsb
inc
dec
add
stc
add
fildl
aas
xchg
iret
lahf
aas
jg
clc
add
int
add
sub
popf
mov
mul
out
pop
xchg
call
and
sub
xchg
push
pop
fsubp
ds
daa
xor
push
fdivrp
jb
pop
scas
ds
inc
call
pop
jns
xchg
pop
mov
loope
lods
inc
dec
enter
in
fstl
push
enter
scas
xchg
fistps
sub
daa
push
xlat
lahf
lret
mov
sbb
inc
orb
ljmp
mov
xchg
cld
stc
add
fdivp
add
mov
int
ja
jle
enter
loopne
mov
dec
mov
psubsb
movsl
out
fwait
sarl
inc
add
dec
jge
aad
out
test
cmp
adc
test
cmp
cld
push
cli
repnz
xchg
lahf
add
fistpl
jmp
jle
sarl
dec
mov
push
mov
pop
mov
or
das
ds
stc
or
je
cltd
fwait
adc
lahf
aas
mov
dec
cmp
test
in
out
cmpsb
jo
add
in
lods
cld
xchg
clc
push
jmp
outsb
mov
sub
xchg
cmp
dec
xor
push
sub
jg
mov
out
push
loope
pop
mov
in
iret
fwait
icebp
mov
cmp
les
adc
lahf
roll
sbbl
push
sub
in
xchg
mov
fsts
xchg
stos
bound
fstl
adc
mov
es
push
fcompp
mov
outsl
ja
aaa
mov
shlb
mov
repz
inc
jecxz
xor
les
inc
sub
jle
lret
inc
or
popa
mov
cli
in
xchg
xor
cmp
and
loop
xor
jg
cld
sbb
outsl
lret
imul
mov
jnp
cmc
inc
push
mov
fwait
pop
ror
stos
or
adc
mov
pop
ficoms
mov
pop
dec
ds
pop
and
fcomp
lahf
aas
jg
dec
mov
arpl
jo
out
iret
adc
or
add
scas
mov
adc
inc
lahf
std
push
test
push
scas
mov
ffreep
mov
pushf
daa
adc
repnz
sarl
dec
sbb
adc
cmp
and
arpl
notl
decl
pusha
pop
mov
negl
ret
outsl
cmp
out
aam
mov
imul
in
int
scas
iret
add
ljmp
out
cld
fdivrs
cs
adc
jbe
jno
cmp
jno
dec
ret
jle
repnz
dec
aas
xor
jg
pop
inc
sbb
call
cmp
push
pop
jns
lret
xchg
out
xlat
aas
fcomi
outsl
push
sub
sti
jb
xchg
push
lods
xchg
push
inc
adc
fsts
or
daa
cld
sti
and
das
iret
ret
shr
repz
fbstp
ficoml
repz
je
lock
lahf
aas
enter
int3
add
sub
jns
inc
int3
adc
scas
xorl
jmp
in
fabs
aam
lods
out
jg
repz
jg
mov
jno
lret
dec
lahf
jl
pop
out
or
sbb
scas
mov
or
ds
aam
dec
sub
ret
xchg
out
mov
fwait
push
mov
mov
jl
lds
lret
xchg
pusha
dec
imul
clc
add
mov
xchg
sub
movsl
cmc
icebp
sub
cltd
pop
popa
ret
dec
cld
lcall
pop
jns
stos
out
add
cmp
repz
clc
outsl
pop
ret
and
jge
icebp
repz
push
fdivrp
repnz
mov
insl
sbb
test
dec
jl
in
pop
negb
adc
push
lret
out
mov
xor
or
sarb
das
push
sub
xor
sbb
les
in
xchg
sub
or
movsb
mov
cld
stc
repz
int
and
pushf
xor
mov
or
pop
jg,pt
push
mov
jne
mov
out
pop
mov
fidivrs
gs
inc
stos
or
cld
stc
rep
jb
jl
cmpsl
inc
mov
out
fwait
xor
lds
jl
cltd
or
out
fildll
push
pop
jns
ss
jne
dec
test
test
cs
repnz
pop
mov
stos
repnz
mov
adc
cmp
in
jecxz
fistl
add
dec
filds
ja
push
push
fisttps
pop
jns
xchg
inc
xchg
dec
dec
xchg
jne
ds
stc
mov
push
jns
xchg
push
push
pop
out
dec
push
lods
mov
in
push
pop
fldl
mov
push
mov
cltd
adc
inc
xchg
push
pop
jns
sbb
pop
jecxz
inc
and
pop
jns
filds
hlt
cmpsb
lret
mov
mov
pop
xor
stos
add
into
sub
out
imul
lahf
dec
add
push
fists
mov
jne
pop
fbld
and
lret
push
xchg
popa
jmp
mov
jg
cld
or
xchg
jne
add
inc
sbb
scas
mov
mov
adc
loopne
sub
in
popa
mov
adc
imul
mov
jg
cld
cs
add
outsb
pop
push
lret
sbb
sub
jne
notb
sub
mov
pop
shlb
call
inc
sbb
in
addb
in
add
or
mov
mov
inc
ret
inc
nop
scas
dec
dec
aas
cmc
dec
seta
dec
dec
dec
mov
repnz
xchg
sub
cmpb
cmc
lods
push
stc
jo
jmp
fdivrp
outsl
dec
xchg
xor
sbb
sbb
and
ljmp
jb
mov
movsl
cmp
and
push
fnsetpm(287
mov
lcall
fimull
lret
fucom
cs
scas
out
enter
lahf
sti
repnz
push
pusha
test
cmp
mov
iret
lret
mov
inc
andl
mov
jnp
scas
mov
push
loope
sub
data16
or
iret
das
test
out
out
test
sbb
cld
stc
repz
pop
aad
cmc
addr16
dec
push
sbb
aas
jg
mov
push
test
and
out
push
fnsetpm(287
inc
mov
sub
stc
inc
mov
aas
jg
jp
loopne
adc
iret
insl
fs
cmp
xchg
aas
jg
xchg
sbb
mov
pop
mov
das
lahf
in
adc
push
pop
mov
shlb
push
mov
inc
dec
jmp
dec
cmp
fidivrl
repz
dec
out
xchg
and
mov
mov
stos
pusha
cmp
push
mov
lret
out
negb
mov
lock
out
mov
push
shlb
xchg
popf
fdivl
pop
scas
mov
mov
scas
jns
push
cmp
daa
daa
jnp
jne
fdivr
xchg
imul
mov
push
inc
push
inc
push
repnz
adc
and
movsl
das
jmp
fildll
push
pop
jns
cmp
mov
xor
jl
in
fwait
jno
pop
aaa
stos
pusha
movsl
mov
cmpsl
rclb
add
add
gs
scas
lahf
cmp
das
icebp
aam
das
push
pop
jns
jmp
push
xor
scas
xor
sbb
push
aas
mov
cmp
je
lds
inc
lret
lahf
sbb
add
push
pop
jns
dec
push
js
mov
arpl
xchg
pop
dec
das
insb
adc
fistpll
jns
mov
cld
add
fcmove
iret
lahf
jg
out
repnz
cmp
dec
outsl
cld
stc
repz
dec
mov
aam
emms
mov
or
pop
sar
pop
push
repz
fsubrs
jg
cld
out
fst
sbb
lods
das
dec
pop
mov
ljmp
dec
dec
sti
lahf
in
outsl
int3
push
jns
xchg
jle
cld
stc
cmpsb
mov
rcl
lret
iret
push
outsl
xchg
mov
dec
or
adc
ror
scas
mov
push
mov
cld
adc
xor
clc
repnz
add
xor
fildl
pop
cld
mov
fnstsw
jae
add
lahf
jo
pop
rolb
in
sub
fmull
shlb
repnz
das
repz
jl
cmp
cs
mov
jge
mov
data16
jno
sub
or
adc
xlat
clc
repnz
adc
scas
sub
stc
repz
std
js
xorl
lcall
cld
push
add
repz
sub
iret
lods
in
scas
mov
push
mov
outsb
stos
dec
xchg
cli
repnz
xchg
xchg
mov
fadds
jg
lret
out
push
out
sbb
aas
out
mov
fisttps
inc
mov
ret
xchg
or
in
add
lahf
aas
aas
mov
mov
jnp
sahf
testl
push
test
cmpsb
out
jle
cld
stc
and
push
jbe
jbe
fildll
cmpl
add
and
scas
inc
mov
movsb
fisubl
push
adc
cmp
adc
xchg
push
fsubrp
xchg
stc
mov
xor
scas
push
pop
jns
push
es
in
xchg
mov
add
in
ret
lcall
mov
xchg
push
jmp
mov
fdivrp
in
mov
das
push
pop
xchg
filds
popa
dec
dec
imul
setb
xor
lret
mov
lcall
jl
addb
jl
pushf
test
out
cltd
subl
xchg
stc
fbstp
fstl
adc
jge
push
movsb
dec
mov
xchg
push
pop
repnz
pop
ret
xchg
sbb
push
pop
jns
and
ds
pusha
aaa
js
loopne
cli
cmp
out
aam
lret
jmp
sub
lds
pop
iret
mov
pop
cld
inc
jns
andb
xchg
outsb
pop
in
ja
sti
repnz
iret
fucomip
lods
jb
lcall
jle
cld
jb
jne
push
stos
outsl
mov
cmp
leave
pop
test
jp
jno,pn
cli
xadd
repnz
xchg
lea
push
sbb
fisubrs
call
in
sub
inc
mov
aad
cld
dec
clc
sbb
cmp
cld
xchg
pop
dec
mov
inc
xor
loop
or
in
hlt
dec
jns
repnz
mov
cmpsb
mov
repnz
in
push
pop
idiv
mov
add
inc
push
insb
fcoml
dec
aam
jno
out
adc
jns
loopne,pt
sub
pop
pop
mov
ret
xchg
lahf
push
xchg
or
enter
repnz
stos
sub
adc
scas
adc
cld
dec
clc
std
imul
jne
bound
jnp
add
imull
or
jns
fnstsw
dec
iret
stos
mov
add
lcall
pusha
inc
imul
lret
pusha
jmp
jg
mov
das
lahf
fwait
jmp
adc
cld
xor
das
das
push
push
xor
pop
jg
jbe
jmp
sbb
ds
das
xchg
push
pop
jns
mov
aas
cmp
jecxz
or
pushf
push
fdivrp
xor
xchg
pop
mov
adc
jl
pop
jns
xchg
je
dec
pop
jno
sub
mov
pusha
push
add
push
stos
pusha
vpmaxsw
lahf
nop
add
cs
or
out
hlt
aas
mov
cmp
outsl
sahf
or
and
out
mov
testb
aas
sub
stc
mov
inc
dec
pop
pop
or
mov
aam
mov
test
movsb
pop
push
jle
movsb
adc
flds
cli
inc
aas
mov
test
pop
and
and
xchg
hlt
lcall
fcmovu
pusha
jne
pop
popa
movsl
push
pop
jns
sbb
lds
shrb
ret
sub
orl
leave
lea
dec
into
lahf
jne
stc
inc
daa
inc
adc
sbbb
push
scas
mov
lods
lahf
ja
sbb
jl
fstl
cltd
mov
mov
int3
pusha
inc
popf
mov
ds
lret
ljmp
lea
inc
pusha
ror
scas
mov
cli
mov
in
pop
gs
repz
loopne
jb
outsb
and
pop
jne
das
jg
cld
idivl
sahf
or
insb
call
fmulp
lahf
aas
dec
mov
dec
xlat
mov
out
cs
push
mov
clc
pop
dec
add
std
jb
and
stc
and
lahf
jg
bound
adc
push
jbe
sbb
cld
stc
repz
fs
sub
xchg
mov
or
in
adc
ret
imul
aad
jmp
loope
lcall
push
outsl
adc
and
outsb
jl
cld
stc
outsl
mov
sar
fdivrs
cltd
test
and
push
mov
push
sbb
loope
fstpl
das
icebp
and
and
jmp
out
mov
jl
lea
xchg
pmaddwd
in
daa
hlt
ds
dec
jg
pop
and
push
jmp
sub
popa
movsb
negl
dec
test
idiv
das
scas
mov
adc
dec
inc
pop
ds
ret
dec
adc
mov
or
repnz
scas
sbb
ds
arpl
xchg
jbe
pushf
lock
aam
xchg
xchg
jbe
nop
mov
fiadds
dec
dec
pusha
into
ficoml
lahf
aas
sarl
pop
or
and
test
cmp
fildl
movsl
push
jne
in
das
push
xchg
rcll
mov
sub
jmp
add
or
pop
pop
push
lret
lahf
aas
jg
inc
sub
cmpsl
repnz
call
xchg
pop
shl
mov
in
out
lcall
add
out
das
lods
pop
push
adc
mov
sarb
lds
push
dec
hlt
rclb
out
jle
mov
mov
inc
testl
scas
mov
movb
jl
add
pop
idiv
in
push
stos
mov
pop
jns
xchg
mov
xchg
and
in
push
cmp
insb
sbb
lahf
ret
mov
jno
popf
out
pop
adc
and
movl
dec
scas
inc
mov
repz
nop
sbb
cmp
sahf
repz
xchg
jbe
inc
lds
sti
in
mov
sti
insl
in
pop
scas
aad
imul
je
cmpsb
xlat
xchg
repnz
add
aam
stc
mov
xor
inc
lods
repnz
mov
jl
or
jb
repnz
push
out
sbb
scas
mov
sbb
movsb
lods
shl
popa
js
and
mov
icebp
testl
sbb
sahf
iret
aas
mov
mov
sbb
pop
test
cmp
mov
dec
cmpsl
int3
mov
dec
movl
jle
inc
int
pushf
fsubrl
aas
sub
insb
fwait
sbb
rcrb
add
jns
repnz
jl
dec
arpl
das
xchg
ss
and
aas
jg
dec
mov
sahf
mov
pinsrw
or
or
ljmp
sahf
mov
scas
cld
stc
mov
je
mov
push
and
xchg
iret
lahf
aas
frstor
fwait
push
sub
out
xor
repnz
loopne
jecxz
aas
imul
out
lods
test
hlt
inc
test
rcr
add
adc
repnz
popf
push
mov
push
gs
xchg
mov
cmp
lcall
and
dec
pop
mov
stos
push
imul
inc
cs
sbb
jns
fstpl
pop
test
aad
sub
add
das
inc
mov
pop
imul
pop
jge
repnz
andb
pushf
pop
test
clc
cld
stc
xorl
ds
lea
stc
push
pop
jle
xchg
lahf
cmp
in
lret
lahf
jg
mov
jns
mov
jle
cld
fwait
jmp
pop
in
mov
mov
rcrl
inc
or
lret
iret
into
subl
and
xor
repz
mov
iret
sbb
mov
sti
sti
adc
mov
ss
stos
xor
jnp
lret
rclb
scas
daa
dec
adc
or
or
fdivrl
sbb
cmp
bound
xchg
test
sti
jnp
jns
xchg
ja
popf
adc
mov
mov
iret
lret
xchg
push
pop
jg
and
icebp
icebp
push
inc
shlb
mov
jg
xorl
xchg
push
pop
stc
mov
sbbl
xor
mov
rorl
jmp
clc
std
bnd
call
jo
xchg
push
fdivrp
das
jo
dec
call
adc
sbb
mov
pop
jns
cmp
mov
push
xor
lock
xchg
pop
popf
rorb
jb
cld
xchg
mov
push
add
lock
and
aas
jg
xchg
and
and
stc
jnp
stc
repz
push
sti
nop
or
xchg
jae
xchg
out
jle
cld
stos
adc
mov
xor
ret
cmpsl
mov
push
jle
push
push
stos
inc
lret
jecxz
aas
mov
je
dec
mov
or
lahf
repnz
stc
mov
and
aas
xor
sti
inc
add
xchg
xor
and
sahf
jg
cld
stc
add
push
inc
fistps
dec
jmp
in
lahf
aas
xchg
jae
mov
xor
fwait
jg
mov
repz
mov
jle
hlt
bound
bound
jg
cld
mov
dec
rcl
addb
push
sub
scas
jl
xchg
mov
xchg
cs
out
imull
movsl
sub
ss
inc
jle
ljmp
fcompp
xor
cmpsb
cld
pop
and
jmp
dec
xchg
incb
mov
es
xlat
sbb
mov
das
shlb
jl
cmp
pop
call
fists
push
je
xchg
in
in
inc
je
test
dec
adc
mov
jle
lahf
aas
test
gs
and
loope
mov
mov
mov
or
push
jle
jg
cmp
cli
lahf
or
in
push
pop
sti
mov
test
dec
mov
aas
mov
fisttpll
fs
push
fcmove
lahf
aas
jg
int3
push
inc
add
xchg
lds
mov
xchg
jno
and
add
jmp
push
mov
push
jle
jg
mov
dec
cld
ss
ljmp
shrb
repnz
lret
sub
das
dec
sbb
pop
xor
das
icebp
into
test
jbe
rorb
add
mov
jge
push
rcll
call
mov
xchg
xor
mov
mov
rol
in
imul
cmpl
jmp
subl
stos
je
leave
push
add
jbe
lods
ret
cld
sahf
repnz
xor
pop
sbb
dec
sbb
repz
inc
mov
jp
sbb
add
push
xchg
repnz
jne
fnstenv
jg
inc
mov
loope
pop
adc
push
or
out
lahf
sub
lret
test
sbb
addr16
xchg
inc
or
stc
xchg
movsb
stos
push
sahf
std
jb
enter
lret
pop
outsl
in
or
js
mov
push
test
adc
sarb
imul
aas
pop
repz
das
scas
sbb
push
sahf
mov
iret
jmp
jo
push
std
mov
sub
movsl
mov
adc
iret
sbb
jge
push
pop
jns
pop
cmp
in
pop
inc
cmpsl
adc
push
xor
or
sbb
mov
mov
xchg
push
pop
jns
fistpll
les
jb
and
add
and
mov
mov
xchg
es
mov
dec
lock
repz
push
pop
les
iret
dec
cmc
in
push
xchg
hlt
lret
pop
sub
and
sub
dec
aas
jg
cld
ds
pop
xchg
enter
popa
add
aas
icebp
sub
imul
mov
mov
scas
mov
mov
mov
leave
scas
sub
dec
in
and
in
sub
out
pop
pop
pop
pushf
loopne
popa
aaa
cld
sbb
das
outsl
xor
lcall
sub
out
xchg
ret
out
xchg
push
fidivs
or
sub
pop
jns
aas
mov
push
sbb
outsl
hlt
pop
mov
aaa
mov
sbb
daa
jl
mov
pop
jae
inc
sub
lock
cmp
filds
lahf
int
pushf
push
test
addr16
or
mov
add
and
and
xchg
push
pop
hlt
jmp
sub
repz
js
pop
jns
out
rol
ja
and
pushf
fisttpll
push
arpl
pop
mov
pop
mov
outsb
fmuls
outsl
addr16
repz
pop
or
and
imul
mov
jg
cld
lahf
jae
in
push
mov
cmpsl
shl
movsl
dec
xor
ret
in
mov
jns
fnsave
filds
mov
sub
mul
xchg
push
in
dec
mov
fcoml
insb
dec
cmp
jge
xor
outsl
xchg
shrl
hlt
in
sarb
scas
fidivrs
stc
mov
outsl
imul
lahf
fisubl
xchg
push
push
psubd
sub
sub
pop
fsub
and
int
fdivrs
das
out
mov
in
rcr
insb
lcall
movsl
mov
scas
je
les
mov
add
mov
lahf
aas
mov
mov
arpl
stc
repz
mov
adc
in
push
sbbb
xlat
or
jge
add
push
cmc
iret
lahf
aas
jg
mov
pusha
inc
sub
dec
jnp
lods
adc
sub
stc
repz
add
jecxz
fadds
das
aas
jg
and
fistpl
icebp
rsqrtps
or
iret
lahf
mov
or
fnstcw
repnz
pop
or
dec
jb
test
xor
sbb
push
cmp
insb
push
scas
scas
jmp
xchg
push
fldcw
pop
std
jb
lock
ss
lds
out
xchg
jb
xchg
aas
jg
sub
push
xchg
mov
fs
lahf
mov
push
inc
lret
mov
out
xor
cld
stc
sahf
sahf
xchg
or
clc
jnp
pop
jg
call
sub
lahf
cmovle
gs
shlb
mov
sti
xchg
inc
cmp
pop
xlat
pop
or
mov
dec
jno
add
add
xchg
in
data16
sbb
das
jae
adc
sub
into
sti
call
lods
sahf
repnz
pop
jle
data16
cli
xor
and
iret
lahf
aas
pushf
xchg
dec
popa
lahf
loopne
out
xlat
xchg
dec
icebp
repnz
repz
push
rorb
adc
dec
cld
xchg
aas
push
push
shlb
enter
scas
push
mov
mov
or
out
lahf
aas
repnz
mov
jge
orl
test
enter
pusha
jo
mov
or
xor
xchg
cmp
mov
adc
dec
jo
stc
repz
adc
xor
xor
cmp
rcrl
inc
stc
push
mov
add
mov
loopne
repz
cs
jmp
arpl
mov
or
cmp
cld
rorl
fnstenv
stos
divl
outsl
fcomip
fdivrl
stos
jbe
xchg
pop
das
xchg
or
pcmpeqb
mov
jae
shrl
sbb
or
lods
repnz
pushf
push
call
bound
mov
mov
add
push
mov
cmp
pop
xchg
aas
jg
sub
in
out
std
and
push
mov
lahf
aas
adc
mov
sbb
pop
add
sub
scas
push
push
shlb
xchg
inc
leave
rclb
jge
jno
in
adc
stc
data16
xchg
jnp
cmpsl
sbb
add
push
scas
insl
mov
sub
or
sub
outsl
mov
imul
lret
popa
leave
ficoms
mov
mov
pop
scas
int
in
mov
or
mov
aad
add
test
mov
lret
sbb
pusha
repz
cs
call
shlb
psubsb
adc
daa
sub
dec
or
scas
dec
movsb
out
iret
mov
jbe
das
add
pop
jg
pop
jns
xchg
and
push
mov
cmp
dec
add
jle
add
jle
mov
and
add
aas
lea
lret
mov
mov
lret
shl
sub
jo
bound
add
notb
scas
mov
dec
mov
ffreep
jo
negb
iret
cmpsb
outsb
ret
adc
jb
mov
sub
and
jns
std
sub
lock
xchg
adc
outsl
loop
pop
scas
mov
push
pop
mov
mov
pop
dec
mov
mov
mov
addr16
mov
push
pushl
lcall
dec
outsl
ret
jnp
je
mov
lret
inc
lock
popf
loop
jo
jg
pop
mov
mov
outsl
dec
stc
repz
xor
mov
push
jg
bound
gs
jg
cld
out
jne
push
mov
sub
ret
addr16
leave
popa
pop
mov
cld
fisubrs
or
gs
jl,pn
lret
mov
repz
adc
dec
sub
int3
stc
fisubrl
cwtl
xlat
add
mov
xchg
ja
aas
fisubs
mov
push
gs
jns
push
imul
test
dec
adc
pop
jns
xchg
stos
mov
mov
mov
push
mov
int3
adc
pop
iret
rcrb
in
sbb
pop
lea
addb
lret
xchg
push
inc
imul
cmp
mov
and
cld
stc
mov
and
and
add
xor
sti
fidivs
jl
int
sub
outsl
cmp
out
stos
lods
cltd
jg
and
lret
repnz
aas
jg
lret
xor
loop
gs
xchg
add
iret
lahf
mov
sub
ja
out
ss
jb
out
mov
push
out
and
lahf
ja
dec
jg
cmp
pop
xlat
clc
mov
xor
mov
repz
scas
pop
and
mov
xchg
dec
icebp
mov
leave
out
jecxz
punpcklbw
arpl
and
outsb
out
lahf
jg
sub
outsl
push
mov
push
pop
sbb
cld
stc
repz
and
mov
jle
push
lds
jns
or
cmc
jge
pop
jns
scas
in
gs
pushf
xchg
mov
fstl
adc
popf
cli
sub
in
lock
std
and
out
repnz
cli
or
or
dec
lea
scas
cld
scas
pop
fists
sub
das
daa
jno
jge
mov
repz
jbe
xor
or
and
out
jle
xlat
jle
test
mov
movsb
jne
scas
mov
out
sbb
mov
aad
test
mov
in
sbb
in
mov
mov
test
xor
mov
and
dec
stos
or
jl
cld
stc
aas
loope
iret
cmp
mov
imul
mov
aas
scas
rorb
and
es
jns
inc
pop
mov
dec
shl
push
jp
push
popa
dec
cmp
in
sbbl
mov
in
push
fimuls
push
mov
push
xor
pop
jns
cld
aas
ffreep
dec
icebp
lahf
adc
stc
repz
sbb
andl
mov
pop
sbb
add
xor
lock
ja
lret
iret
pop
shrl
sarl
mov
pop
jns
xchg
sub
cmp
adc
mov
outsl
mov
loopne
xchg
je
das
push
pop
jns
xchg
loop
int
clc
cli
ss
call
rcl
inc
int3
dec
dec
or
mov
outsl
pop
cwtl
addr16
and
adc
jl
sahf
sub
fst
jns
mov
inc
fcomip
pop
rcr
xchg
enter
out
imul
stc
repz
jo
fidivrs
loopne
negl
fsubrs
out
pop
popw
loop
imul
jns
mov
inc
call
test
fbstp
jp
loopne
sub
push
idivb
adc
repz
dec
fcoms
xrelease
shrb
mov
clc
pop
cmp
fbld
loope
repz
cmpsb
cs
cld
stc
xchg
fs
inc
sub
int
jmp
pusha
xchg
iret
lahf
aas
enter
pop
jle
mov
clc
in
lods
aam
jg
iret
dec
repz
rcr
pop
sbb
push
xor
dec
mov
repnz
rcrl
jle
divb
cmp
pop
dec
aam
fdiv
lret
xor
lret
sbb
mov
or
add
enter
dec
xchg
sub
insb
out
loopne
sarb
xchg
ja
in
jno
in
and
xchg
push
pop
cltd
sub
in
fistpll
push
sbb
pop
jns
icebp
lock
mov
push
mov
jns
xchg
mov
sub
imul
gs
lahf
mov
in
push
jnp
sbb
cmp
in
push
pop
adc
inc
jp
ljmp
jns
add
hlt
lods
or
ss
scas
hlt
daa
mov
and
fnstsw
cld
stc
xchg
sahf
or
jp
xlat
mov
adc
pop
jg,pt
inc
loopne
add
xor
push
das
cmpsb
hlt
fsubp
iret
pop
orl
jg
cmp
sahf
int
and
inc
rolb
cmpsl
dec
loop
out
les
mov
sub
jg
add
sbb
sub
add
rcpps
mov
lahf
aas
sbb
sbb
test
das
sub
cld
stc
repz
adc
fsubl
fstpt
dec
lahf
aas
jg
sahf
and
sbb
push
inc
sbb
xchg
lret
out
cmpxchg
repnz
xchg
roll
testl
decl
xchg
or
cmpsl
inc
out
addr16
ja
pop
and
cmpsb
push
std
jnp
in
sub
dec
sbb
out
cwtl
ret
in
push
fisubrs
movsl
fnstsw
iret
jg
xchg
push
pop
jns
pop
test
mov
push
fisubs
in
outsl
add
push
lahf
push
shll
inc
jnp
jg
scas
lahf
mov
inc
das
push
xor
lahf
ret
pop
sbb
mov
into
sub
sarb
out
sub
pushf
or
fstl
lock
mov
mov
pop
ret
jecxz
mov
in
imul
cmp
jmp
addr16
in
fisubrl
mov
lret
pop
rcrl
jmp
pop
adc
mov
mov
gs
lret
add
mov
mov
jecxz
mov
adc
lock
mov
popa
stos
jge
sbb
pop
mov
mov
pop
movb
xlat
out
mov
cmc
adc
push
aas
icebp
sbbb
pop
jg
das
push
pop
sbb
shlb
notrack
mov
xchg
lahf
aas
das
inc
jno
push
mov
in
out
into
hlt
mov
lahf
or
cmp
push
clc
andl
sub
pop
sbb
pop
inc
and
out
mov
sbb
fwait
lahf
out
mov
scas
mov
es
adc
adc
lret
mov
jl
cli
sub
sub
sbb
addr16
loopne
psubsb
scas
jl
mov
mov
in
or
push
mov
iret
fwait
push
subl
push
mov
incb
mov
aas
sahf
mulb
inc
or
push
test
aad
xor
lret
mov
ffreep
xorl
mov
push
dec
mov
sub
popa
or
mov
xacquire
enter
mov
aas
add
ret
inc
cmpsb
push
jp
xchg
lcall
and
in
out
lds
sub
or
stc
mov
lock
sub
or
lret
xor
pop
loope
jo
out
out
lret
out
hlt
xor
iret
sbb
decl
test
mov
cld
stc
aam
loop
jne
fidivrs
pop
dec
div
aas
fwait
addr16
iret
lahf
aas
nop
or
shlb
imul
ljmp
adc
jmp
push
jle
cli
in
in
cwtl
je
sub
and
pop
rorl
sub
fimull
ds
adc
jnp
clc
mov
adc
stc
outsl
lea
and
lret
add
mov
insb
lock
sub
mov
dec
fsubs
pop
mov
subb
jnp
in
inc
int3
call
cmovle
jns
fsub
out
adcb
push
js
sbb
jns
adc
sub
inc
lock
jb
dec
lcall
fstpt
push
fdivrp
cmp
cmp
or
xor
in
cmp
push
or
xchg
push
mov
in
mov
repz
mov
adc
repnz
into
popf
andl
cld
jge
mov
sti
cmp
cli
dec
lret
xchg
iret
lahf
ds
insl
mov
shrl
mov
repnz
clc
imul
fldenv
fnstsw
sub
push
mov
insb
pop
jns
scas
mov
lods
mov
jl
dec
insl
sub
lret
pop
and
cli
mov
cmp
in
push
pop
xchg
adc
xchg
pop
or
icebp
xchg
push
pop
jns
and
outsl
nop
sbb
mul
popf
inc
loop
pop
scas
fistps
adc
jns
xchg
push
jge
sub
adc
push
pop
jb
jl
jo
mov
mov
scas
cld
jb
add
sahf
lcall
repnz
insl
outsl
ja
mov
rolb
jmp
jg
mov
into
decl
js
fstl
pop
lahf
aas
lds
jnp
pop
add
xor
jns
lret
fcoms
aad
xlat
pop
les
dec
jns
into
lahf
jg
pop
and
push
movsl
ja
stc
repz
jno,pt
jl
leave
adc
push
mov
jg
cld
cmp
in
arpl
and
outsl
lea
out
lahf
and
xchg
je
or
in
jae
add
cld
stc
stos
clc
mov
xor
or
fdivrl
cmp
dec
rcr
lahf
aas
shlb
lcall
fildll
jl
in
int3
dec
sbb
shl
dec
adc
sbb
cld
mov
ds
or
imul
pop
scas
gs
arpl
sub
scas
insl
daa
fwait
mov
mov
lahf
inc
fldenv
fstps
int
stos
decb
jns
xchg
out
mov
push
push
or
test
dec
xchg
out
cmp
mov
in
fbld
pop
aas
popf
sub
sbb
dec
lcall
jo
rol
pop
into
stos
or
mov
enter
das
sti
aam
mov
mov
xchg
pop
add
cltd
lods
outsl
orb
xchg
lahf
jg
dec
sahf
cwtl
mov
sub
lahf
lea
sahf
pop
dec
std
test
pop
pop
jns
mov
aaa
dec
in
or
mov
lret
xchg
jbe
lds
xchg
pop
jns
and
xor
movsb
mov
lcall
mov
neg
jl
mov
scas
stos
mov
xchg
push
sbb
mov
push
mov
cmp
xor
push
incl
pop
jae
fsubl
lahf
rcrl
push
pop
fists
inc
jnp
xchg
jg
cs
jecxz
pop
fistps
sbb
mov
stc
repz
push
xchg
xor
outsl
or
jo
aas
jg
pop
cmpsb
std
scas
cld
sahf
popa
call
out
lahf
fcoml
push
loopne
ja
cmp
std
repnz
mov
dec
loop
cmp
fistpl
dec
shrb
fs
movsl
inc
xor
mov
add
call
dec
sbb
lret
mov
mov
fs
movsl
ja
scas
mov
int3
sub
icebp
fisubs
push
rep
jmp
dec
in
inc
mov
sub
repnz
and
notb
xchg
out
mov
cld
lcall
mov
pop
mov
aas
jg
mov
sub
adc
stc
repz
add
adc
and
std
stos
push
mov
jp
sub
and
pop
mov
ss
aad
push
jle
out
lahf
dec
loopne
aaa
pop
mov
and
stc
pop
stos
mov
jl
ror
cmpb
cli
xchg
mov
fcompl
push
aas
cmp
outsl
and
mov
out
lahf
bound
movsb
lods
pop
cld
fst
lahf
mov
pop
xchg
mov
repnz
cwtl
sbb
shll
xor
shlb
xor
lcall
xchg
decb
imul
mov
cld
stc
dec
sbb
rolb
js
pop
scas
in
pusha
lahf
aas
aas
and
ljmp
repz
jl
or
xchg
xor
and
test
fcomi
mov
cmpsl
insl
ret
outsb
add
jle
clc
insl
mov
xor
mov
dec
repz
lret
sbb
jns
lds
inc
lret
cld
stc
or
or
mov
stos
mov
hlt
inc
ret
xchg
jmp
scas
xchg
lock
sub
sub
dec
jnp
pop
mov
adc
rcrb
fs
sub
pop
sbb
cmpb
lods
stos
add
cmp
data16
fistl
jg
xchg
ja
mov
or
or
dec
out
lahf
aas
imul
inc
lret
dec
mov
dec
cwtl
outsl
add
scas
les
fdivrl
inc
hlt
xchg
aaa
out
iret
lahf
aas
jg
aaa
pop
mov
int
outsl
lock
adc
sahf
js
loopne
push
inc
mov
mov
aam
jge
mov
xchg
es
mov
push
and
scas
mov
shlb
aas
int
dec
xor
testb
mov
aas
mov
ret
push
fdivrl
cs
mov
pushf
add
mov
scas
xchg
xchg
outsl
fstpl
ss
loopne
out
jb
mov
aaa
mov
je
or
in
ds
cmp
pop
adc
jl
xor
push
push
in
lahf
aas
cmp
push
jp
xchg
push
mov
pop
loop
sahf
shlb
dec
lods
pop
inc
mov
aas
jg
and
rcl
out
popa
mov
jp
fnstcw
repz
push
xchg
cli
mulb
lcall
pshufw
nop
mov
repnz
aas
cmp
test
movsb
xchg
fcompl
in
mov
sub
inc
scas
push
cmp
adc
lods
pop
jle
dec
test
out
lahf
call
cltd
mov
cld
jg
cld
stc
push
xchg
fadds
call
dec
jne
pop
fadd
jns
iret
lahf
aas
xchg
mov
cmp
mov
out
bound
repz
test
mov
rorl
in
push
insb
xchg
jbe
movntq
and
leave
xchg
mov
push
pop
cld
stc
repz
arpl
and
inc
std
sub
cs
ret
jl
into
insl
jg
jg,pt
lcall
pop
dec
pushf
or
mov
jmp
out
scas
incb
mov
xor
or
or
jle
cld
add
int
repz
xchg
jge
jmp
ja
mov
loopne
setg
xchg
loopne
mov
sbb
mov
test
lret
in
xor
jbe
lea
mov
sub
and
jle
add
scas
mov
jo
leave
jg
popf
mov
sti
in
hlt
out
mov
cltd
std
mov
sbb
negb
pop
repnz
sub
scas
insb
addl
sbb
pop
mov
jno
lds
mov
pushf
adc
into
pop
mov
repnz
jmp
pop
cmp
scas
out
repz
shrl
aaa
cmp
or
jle
sub
sub
idivb
and
dec
nop
xor
faddl
pop
out
pop
push
jno
xchg
cmp
daa
aas
out
dec
das
inc
add
mov
xchg
jg
decb
in
adc
mov
pop
mov
xor
repnz
das
aas
or
test
repz
outsb
sarb
adc
inc
push
jno
test
cmp
cltd
xor
js
mov
mov
jge
scas
push
mov
pop
push
sub
outsl
jp
repnz
jmp
pop
lock
aam
cmp
pusha
add
stc
movsb
pop
test
iret
popf
add
push
adc
lret
iret
lahf
aas
fucomi
lea
sbb
fldl
mov
in
mov
xchg
outsl
test
add
xchg
pop
call
lret
pusha
fucomip
out
test
mov
cmp
and
xchg
or
sbb
outsl
xor
lock
mov
jo
repz
inc
pop
ds
cmc
stos
addr16
mov
lret
lahf
cmp
lock
jmp
jg
popl
or
ds
stc
repz
add
mov
je
lock
stc
xchg
push
fidivrs
es
sbb
pop
in
and
cld
push
scas
mov
insb
cwtl
xchg
dec
arpl
xchg
lahf
jle
push
rclb
jg,pt
cld
loopne
xchg
cmp
call
jb
inc
xor
pop
insb
push
cmpsl
mov
cld
pop
lret
scas
enter
es
fdivs
or
cmpsb
add
out
popa
repnz
fists
or
and
test
imul
jecxz
dec
aad
dec
outsb
stc
xchg
xor
data16
adc
nop
xchg
cmp
mov
adc
jmp
push
sahf
mov
scas
sbb
pop
andb
fldt
push
adc
push
scas
xchg
lahf
jg
xor
lds
lret
sub
sahf
cld
sub
xor
or
out
mov
mov
add
adc
sbbl
out
in
out
in
enter
shrb
mov
xchg
push
mov
cmp
jb
fiaddl
aad
mov
out
mov
inc
jle
cld
adcl
inc
movsb
xor
sbb
mov
adc
cmp
lcall
sbb
repnz
xor
xor
nop
sbb
mov
scas
mov
imul
mov
jns
sub
pop
int3
xchg
push
mov
inc
push
ds
jae
shl
inc
xchg
pop
insl
pop
sub
push
fsubrp
pop
movsb
dec
lods
inc
incl
inc
cmpsb
es
sbb
nop
outsl
add
jns
jo
pushf
stos
or
jecxz
push
fdivrp
mov
dec
aas
cmp
mov
xchg
cmp
dec
rolb
push
mov
fidivrs
pop
push
mov
clc
jb
iret
fidivrs
in
jbe
mov
pusha
comiss
xchg
push
sti
mov
mov
inc
or
xchg
scas
and
push
fnstcw
fnstcw
stos
or
in
movsb
pop
scas
push
out
mov
pop
outsb
int3
sub
pop
xchg
adc
or
pop
mov
push
mov
das
gs
and
mov
pop
out
lahf
pop
add
adc
cs
insb
stc
repz
add
call
mov
push
andl
cmp
dec
incl
or
ds
ds
dec
aas
shlb
repz
xor
jb
fwait
jnp
out
dec
repnz
lret
push
loopne
inc
loopne
pop
cmp
sub
jo
cld
rcrb
andl
dec
inc
and
lahf
aas
rorl
sbb
dec
push
test
xlat
jl
fisttps
mov
sbb
adc
fiadds
pop
and
push
push
sar
pop
mov
mov
mov
sbb
ja
iret
xor
sub
push
enter
scas
adc
div
lret
out
jle
into
jo
and
lret
sub
and
lock
lret
jne
adc
divl
fistps
add
cli
jmp
cs
push
cs
fildl
cmpb
popa
sbbl
aaa
das
call
pop
out
nop
out
jns
xchg
or
leave
es
je
cmp
xor
jns
xchg
push
cmp
mov
pop
int3
push
pop
seto
sbb
mov
jle
or
mov
jg
push
mov
cmp
pop
out
mov
and
jne
mov
lahf
aas
jg
adc
pop
xchg
mov
sub
pop
enter
lret
daa
push
mov
push
aad
pop
out
hlt
cmp
lret
adc
iret
lahf
sub
sbb
cld
stc
repz
push
test
mov
in
dec
push
sahf
push
es
dec
insb
out
or
jne
mov
add
pushf
ds
in
and
int3
fs
repnz
out
sbb
lret
les
add
mov
mov
movsb
ja
xchg
stc
add
mov
int3
or
mov
es
iret
ret
iret
jmp
daa
das
mov
pop
cld
inc
rolb
and
ret
hlt
cmpl
and
xchg
out
pusha
loopne
jae
or
enter
insb
mov
inc
loope
out
sub
repnz
mov
mov
pop
rorl
ret
jns,pt
pop
rorb
jge
movsl
das
mov
std
repnz
aaa
scas
cmpsl
inc
rcll
jle
sub
mov
pop
mov
aas
jg
pop
sti
push
push
popf
xchg
fwait
inc
pop
cld
sti
in
mov
lahf
jo
dec
cmp
mov
jmp
scas
idivl
popa
aas
fiaddl
mov
pextrw
test
sbb
jle
or
xchg
pop
xchg
outsl
fisubrs
adc
or
in
test
out
aas
mov
and
dec
lahf
inc
aam
iret
lds
lock
push
xchg
inc
out
mov
mov
cmp
inc
dec
sbb
sahf
aas
xor
and
call
repnz
lret
pop
push
ljmp
out
ds
add
int3
outsl
gs
das
or
mov
push
loop
add
test
lret
add
dec
xchg
add
sub
adc
mov
ss
pop
clc
adc
aas
or
dec
fbstp
adc
out
xorb
adc
imul
xchg
xor
xchg
sub
sbb
push
popa
sub
or
rorl
into
xor
icebp
enter
inc
fwait
sarl
aas
pushl
sub
ret
or
repz
jle
dec
fdivr
cli
fistps
mov
jle
cld
aas
cmc
incl
adc
clc
mov
enter
out
fldenv
hlt
lods
cld
stc
mov
jecxz
in
push
leave
xchg
leave
rclb
mov
mov
popa
push
lcall
jg
shlb
sub
stc
repz
push
sahf
addr16
xchg
xor
mov
and
xchg
cld
push
lds
outsl
aam
fs
decb
xor
dec
aam
aam
fwait
shll
mov
sub
lds
leave
fbld
sub
and
out
in
ret
sbb
lahf
scas
xchg
inc
repnz
push
and
rcll
test
sub
mov
das
add
cwtl
inc
loop
sub
aas
inc
jo
mov
out
in
add
push
in
mov
js
nop
iret
mov
lcall
out
lahf
add
ret
mov
sbb
dec
shll
jne
out
inc
sti
push
outsl
push
and
jl
push
stc
cld
mov
scas
lea
mov
aas
adc
jne
fisubl
mov
pop
ja
movsl
sbb
jo
rep
mov
sub
push
push
outsl
sbb
gs
pop
jns
gs
lret
dec
cmpsl
sbb
add
xor
repz
dec
push
sub
cmc
mov
push
dec
xchg
jb
sbb
adc
push
cld
jns
xchg
ja
arpl
ss
add
aas
adc
lock
pushl
aas
sarl
in
inc
shrl
outsl
mov
mov
je
movsb
incb
decl
cmp
movsb
shrl
sbb
popa
cs
jne
xchg
cmp
adc
add
aas
jg
push
lds
pop
xchg
pop
std
rol
inc
sahf
jge
in
xor
fidivs
xlat
je
mov
cmpsl
sbb
add
outsb
push
and
and
adc
nop
sarl
cld
xchg
jo,pn
mov
out
cld
stc
repz
mov
fisubrs
fs
dec
inc
dec
nop
enter
jle
and
frstor
jle
sbb
cld
inc
aam
out
push
syscall
pop
sub
jg
daa
lahf
aas
jg
jl
jl
jbe
mov
lds
jg
repnz
cmpsb
add
mov
shl
lret
pushl
xchg
popf
push
fmull
jb
xchg
aaa
call
int
stc
into
add
jp
jp
fs
fdivrp
mov
pop
add
xchg
pop
lods
movsb
je
jg,pt
mov
in
push
aam
add
loope
stc
add
push
push
sbbb
cmp
and
addr16
mov
aas
jg
andb
int3
mov
xchg
repnz
lahf
fiaddl
nop
std
movsl
or
ss
out
xor
scas
xor
cld
stc
repz
movsl
ss
lret
xor
dec
xorb
lods
dec
scas
lods
cmp
adc
xchg
jle
aas
mov
jle
xchg
lcall
enter
pop
out
sub
in
in
inc
clc
dec
js
inc
dec
notl
leave
push
fisubrs
repz
xor
pop
push
scas
rclb
dec
xchg
leave
adc
cld
pop
stc
repz
adc
dec
icebp
jp
push
xchg
xor
adc
in
iret
mov
scas
jo
push
fwait
sub
stc
repz
jle
or
push
int3
pop
imul
or
popf
cld
or
aam
lock
jle
les
sub
inc
aas
ljmp
sub
test
xchg
test
cli
sbbl
cs
aas
push
mov
inc
test
pushf
jnp
insb
loopne
paddb
cltd
xor
lock
repz
ds
inc
leave
push
dec
scas
sbbb
dec
imul
icebp
das
sbb
push
testl
dec
ror
clc
mov
fucomi
xchg
mov
cs
in
lahf
sbb
stc
mov
add
gs
jne
jg,pt
add
ljmp
mov
test
out
mov
ret
add
and
repnz
dec
lock
sbb
and
clc
adcl
pop
mov
stos
aas
xor
aas
jg
dec
cs
xchg
push
mov
in
mov
jg
daa
imul
fistpll
inc
sbb
xchg
iret
mov
negb
mov
inc
loop
mov
xlat
jg
into
push
jle
jle
es
pop
popa
ret
and
aas
inc
pop
std
and
in
insb
add
and
iret
mov
loope
jle
cmp
out
xchg
test
cmc
push
out
mov
scas
push
sahf
xchg
cmp
xchg
dec
mov
lods
sbb
lahf
adc
filds
adc
in
cmp
pop
add
lock
scas
fs
xchg
andl
jo
xchg
push
pop
pop
push
data16
jb
sbb
mov
xor
add
pusha
push
push
fcoml
fiadds
cs
out
or
pop
movsb
aas
mov
scas
mov
jb
adc
mov
std
jg
out
scas
inc
dec
and
test
stc
stc
repz
loop
or
push
les
mov
into
inc
xor
mov
mov
lret
pushf
add
jle
mov
adc
and
inc
out
into
or
leave
rorb
outsl
or
loopne
out
scas
jno
fdivrl
dec
pusha
stc
push
scas
jns
dec
inc
insb
nop
aas
jl
scas
hlt
sub
cltd
ret
shrd
mov
lahf
and
test
dec
lret
repz
or
test
int
xchg
shlb
aas
jecxz,pn
mov
fcmovnbe
inc
lcall
sbb
out
mul
iret
scas
mov
jp
push
hlt
sbb
fbstp
pop
sbbl
jns
xchg
imul
in
xchg
jge
ret
pop
sub
in
push
pop
lahf
or
enter
int
pop
pushl
mov
push
imul
jne
cmp
inc
in
addr16
out
cwtl
js
mov
fisttpl
or
cld
stc
mov
sub
mov
pop
and
das
jg
mov
mov
stc
repz
orl
mov
mov
cmp
stc
push
cld
add
cld
fs
jns
cld
sbb
adc
dec
xor
aaa
xchg
cmp
out
lahf
add
mov
test
aam
aas
aas
mov
adc
inc
pushf
shll
rolb
or
adcb
mov
inc
daa
scas
sub
rclb
cmp
pop
push
pop
data16
mov
rorb
into
and
xorl
out
pop
push
ret
rcrl
iret
lahf
aas
mov
mov
aaa
fsubrs
in
in
jmp
fwait
xchg
int3
outsb
ds
and
push
jg
mov
cld
sbb
mov
push
test
aas
jg
sbb
sbb
fs
es
cmp
mov
lods
mov
lock
test
cli
aaa
lahf
push
mov
clc
push
inc
clc
sbb
gs
inc
in
mov
cmpb
xor
aas
xchg
popf
add
outsb
fidivrs
dec
pop
xchg
dec
loopne
leave
out
xchg
jb
mov
scas
cli
pop
push
jg
jmp
xchg
inc
adc
dec
testl
stc
mov
xchg
daa
loop
out
clc
ret
mov
and
cmc
repnz
cmp
sub
pop
leave
push
mov
aas
cmp
mov
dec
iret
aas
scas
mov
sbb
sbb
mov
pop
lret
xchg
sub
fimull
mov
int3
xchg
inc
test
or
pop
cmc
loope
out
cmp
fdivrs
mov
into
fnstenv
aas
push
cmp
out
loope
insb
ret
hlt
mov
sub
xchg
aas
jg
incl
xchg
lret
imul
scas
cmpl
jmp
xchg
lock
push
sbb
jle
add
loop
pop
loop
fisubrl
dec
inc
outsb
dec
xchg
lret
jg
addb
push
mov
pop
xchg
or
scas
adc
movd
daa
jge
into
cmc
inc
loope
inc
cmc
cwtl
ljmp
mov
sub
test
lret
pop
fiadds
sub
frstor
dec
call
add
lcall
lcall
imul
push
xchg
pop
pop
jns
lods
jg
and
inc
dec
xchg
adc
cwtl
xchg
push
fidivrs
mov
lods
inc
lea
cmp
sub
inc
fisubs
sbb
pop
test
rclb
lret
jnp
repz
pop
or
cmp
stc
and
add
xchg
imul
sahf
pop
js
movsl
mov
fnstsw
push
lret
inc
mov
lods
push
pop
jns
push
mov
iret
jo
and
jb
xchg
out
jo
test
movsb
mov
repz
aaa
xchg
sub
cld
mov
mov
std
cmpsl
pushl
jl
xchg
mov
mov
aas
pushl
fnstcw
mov
in
shll
cmp
scas
mov
sub
mov
push
iret
mov
aam
xor
call
cli
ja
and
jns
push
jl
out
int3
xchg
repnz
xor
dec
stos
mov
mov
jg
inc
cld
daa
mov
jae
sub
cld
dec
mov
int
sahf
out
gs
iret
movl
rorb
scas
lock
push
lcall
jg
rcrb
sbb
pop
mov
psubw
out
add
xchg
adc
cmp
mov
repnz
or
pop
fdivs
pop
cmp
lahf
sbb
outsb
jne
fldl
and
aaa
mov
jg
cld
cs
out
inc
dec
shrb
push
aam
inc
sub
ja
pusha
hlt
pmuludq
ds
fmull
xchg
jg
pop
mov
mov
test
fiadds
repz
lahf
scas
aad
jge
fs
pop
iret
addr16
jbe
mov
jnp
jle
xchg
pop
sbb
jne
push
sar
mov
add
es
sub
aas
shl
xchg
add
inc
jle
js
xchg
sahf
outsb
mov
stc
cmpsl
sti
push
hlt
mov
pusha
in
out
cwtl
sub
mov
das
mov
in
jns
fcompl
test
loopne
lret
sub
loope
xor
ds
jecxz
jge
aas
jg
inc
ds
aad
mov
sbb
pusha
cld
xchg
test
xchg
cmp
jg
outsb
pop
mov
popa
enter
outsb
dec
adc
stc
jg
inc
ljmp
sub
iret
lahf
aas
adc
push
rcrb
out
xorb
jae
js
push
les
das
or
xor
faddl
lahf
nop
out
shr
ffreep
and
or
out
and
mov
pop
ja
xchg
add
push
iret
stc
lahf
xchg
inc
in
cmpps
lods
jecxz
jmp
stc
test
push
dec
xchg
jo
mov
fwait
lret
add
in
imul
and
stc
repz
orl
outsl
ret
sbb
jg,pt
cld
push
inc
scas
icebp
push
cltd
jns
sub
pop
cmp
xchg
insl
repz
mov
in
cwtl
jbe
mov
pop
sbb
mov
add
jb
arpl
mov
jg
mov
or
std
cmc
mov
lret
add
cmpsb
cmp
xchg
push
mov
mov
sub
lret
lods
push
cld
push
sbb
cmp
cmpsb
out
pop
decb
fcmovu
call
lods
mov
lret
mov
or
test
and
nop
jmp
mul
mov
mov
push
xchg
loope
dec
xchg
fcomi
out
cs
dec
cmp
pop
sbbb
aas
addl
xchg
mov
arpl
repz
mov
dec
pop
sub
enter
cld
stc
movsl
or
push
xor
ds
push
rcrb
push
repnz
lock
addr16
dec
and
jb
sbb
jns
mov
jns
sbb
sahf
gs
lcall
fnstcw
loopne
pop
lret
iret
xchg
mov
jle
jmp
mov
jecxz
push
mov
mov
push
mov
mov
mov
ss
mov
testl
ficoms
repnz
cmpsl
or
fdivl
xor
push
rcll
shl
outsl
sub
test
add
pushf
sub
fidivrs
loopne
pop
lods
lahf
inc
and
jg
pop
enter
dec
add
faddl
xchg
test
loop
scas
push
repnz
vpmadcswd
pop
add
addr16
push
mov
fidivs
inc
sahf
xchg
mov
mov
xchg
push
pop
jns
sub
mov
outsb
or
jb
cld
inc
cld
xor
adc
repz
dec
and
aas
test
fnstcw
jge
cld
mov
mov
call
scas
aam
xor
or
ret
mov
outsb
cmp
jne
mov
push
aas
popf
ret
jl
add
push
pop
jle
sub
mov
sti
add
adc
jle
or
faddp
fidivrs
mov
xchg
aas
daa
adc
mov
mov
dec
mov
pop
scas
mov
pop
sbb
pop
mov
add
xchg
push
in
filds
inc
xchg
in
insl
cltd
sbb
daa
pushf
dec
xchg
mov
insl
add
xor
mov
mov
jne
loope
std
pop
pop
add
js
dec
jmp
push
fisubrl
repnz
out
adc
inc
testb
or
cld
stc
pop
icebp
in
and
mov
xchg
dec
data16
sub
xchg
xor
add
fwait
sub
aas
mov
push
insb
clc
or
pop
sarb
pop
jns
fstl
inc
mov
iret
dec
inc
dec
lret
arpl
adc
cmp
fisttpl
aas
mov
paddb
xchg
ret
jae,pn
cmp
pop
jg,pt
aam
adc
sub
cld
push
ret
jo
mov
das
and
push
xchg
idiv
and
dec
mov
mov
int
mov
xchg
scas
adc
add
add
and
cmp
mov
rorl
lret
jnp
dec
cmc
gs
in
sub
mov
shll
push
aam
cmp
lret
mov
xor
jns
pop
fwait
adc
scas
mov
bound
ret
lods
dec
lret
fs
lret
mov
jg
dec
ds
push
clc
test
ljmp
xchg
cmp
xchg
scas
or
push
fdivl
mov
arpl
add
mov
clc
subl
lea
adc
jg
cld
ret
pop
and
inc
xorps
lahf
aas
inc
addr16
xchg
pop
sbb
jnp
stc
repz
outsb
sahf
xor
xor
mov
call
mov
clc
jg
pop
inc
dec
mov
js
iret
aas
mov
aas
xchg
jl
shrb
and
cmpl
adc
ffreep
test
sbb
pop
jle
movsb
testb
xchg
scas
sub
stc
repz
sub
pop
roll
jnp,pt
jne
gs
ds
in
fdivs
cmp
jl
scas
cld
cld
stc
or
out
test
inc
sub
jno
iret
lahf
pop
adc
jno
adc
or
stc
repz
ja
repz
mov
cmp
aas
jg
repnz
outsb
test
pop
in
mov
stc
repz
addr16
dec
mov
mov
xor
xor
dec
aas
jg
cld
or
hlt
das
aam
mov
sub
lock
jmp
dec
in
cld
mov
repnz
repz
lds
mov
xchg
sub
add
dec
clc
repnz
adc
ljmp
push
test
pop
scas
pop
cmp
stc
repz
mov
xchg
mov
mov
xchg
lahf
push
jle
div
data16
mov
mov
mov
lahf
rolb
or
xor
cltd
xor
mov
mov
fdivrp
jb
loop
lods
dec
xchg
inc
ret
jns
xchg
push
fidivl
mov
xchg
in
push
pop
cmp
dec
lret
dec
mov
loopne
ja
pop
jns
mov
inc
cmp
mov
jo
pop
jns
xchg
aas
xchg
jg
adc
js
jae
pop
mov
push
dec
cs
mov
jecxz
std
sbb
popf
iret
fisubrs
adc
loope
addr16
repz
mov
dec
pop
imul
cmpsb
pop
sub
fidivrs
in
xchg
xchg
ss
push
scas
leave
dec
xorb
in
push
leave
hlt
inc
mov
pop
jb
push
fdivrp
jnp
push
out
push
fnsave
pop
pop
pop
jno
inc
jmp
enter
das
push
dec
inc
mov
cmpl
mov
lret
inc
xchg
aam
std
sti
rorl
cmc
sbb
aas
jg
fs
cmp
mov
dec
cwtl
or
dec
lret
lahf
ret
movsb
jle
cli
repz
ret
into
sbb
in
movsb
jno
mov
mov
int
jecxz
js
lret
sbb
pop
dec
into
movsb
test
jl
add
jne
jge
pop
fsubrp
cmp
insl
mov
jns
popf
insb
out
gs
push
lret
rcrl
inc
call
jns
cmp
pop
scas
mov
adc
and
pusha
nop
lret
xchg
jg
mov
adc
fldenv
repnz
dec
std
dec
inc
negl
add
cli
sti
dec
and
incl
inc
idivb
xchg
xchg
adc
pop
jns
fldl
pop
iret
lret
imul
test
xchg
push
jns
loope
mov
popf
shrb
xchg
push
pop
mov
icebp
sub
out
push
ror
mov
xor
add
and
cmpsb
jbe
jg
cld
xchg
daa
sahf
cli
je
cmpsb
enter
xchg
fdivrs
cld
iret
lahf
pop
push
fiadds
mov
das
lahf
jg
sub
ds
movsl
sbb
gs
mov
test
daa
xor
out
das
sbb
into
jmp
ret
mov
add
mov
adc
lahf
jg
push
popf
pop
dec
dec
mov
add
cld
stc
repz
imul
arpl
xor
xchg
fldcw
loope
cmp
dec
scas
inc
sub
dec
mov
mov
jns
sub
decb
xchg
mov
xchg
ja
xchg
nopl
dec
sub
dec
add
popf
push
test
and
mov
repz
bnd
in
inc
sahf
xchg
or
pushf
inc
add
daa
mov
cld
outsl
loope
mov
adc
fwait
int
pop
bound
mov
daa
iret
das
xorb
fcoms
pop
notrack
arpl
outsb
dec
aam
mov
inc
aas
jg
test
xchg
jle
xchg
out
lahf
jbe,pn
maxps
shrl
stc
cld
stc
test
or
ss
pop
jns
fsub
shrl
cmp
fmull
dec
sbb
jns
fstl
jg
popf
insl
inc
and
inc
mov
cmp
xchg
push
push
xchg
push
pop
jns
adc
add
mov
pusha
jns
int3
adc
push
lock
xchg
cmp
mov
lds
jmp
cld
stc
test
mov
sahf
push
stc
adc
jmp
lahf
aas
jg
mov
inc
inc
mov
mov
out
xchg
mov
cmpsl
insb
mov
jo
test
subl
insb
stos
test
nop
into
mov
repnz
lcall
test
mov
or
xor
cmp
jnp
das
jg
scas
imul
ljmp
pop
aas
and
test
lock
stc
repz
cs
pop
mov
cltd
push
popf
and
mov
jbe
mov
sub
pop
stos
test
fdivp
imul
repz
shlb
insb
or
dec
movsl
pop
iret
lahf
aas
jg
pop
movsb
call
jp
cmp
add
jmp
fmuls
scas
pop
arpl
cs
cld
stc
repz
lret
ja
xchg
in
mov
xor
sub
iret
lahf
aas
jg
sub
lock
xchg
sub
jns
repnz
repz
iret
or
xchg
push
pop
and
shlb
das
inc
push
xor
das
outsl
inc
out
outsl
lcall
xchg
out
std
in
xor
dec
jmp
stos
pop
cmc
add
repnz
dec
mov
pop
dec
xor
ljmp
das
cmp
jmp
jns
test
outsl
lcall
repz
xchg
push
push
iret
jb
add
adc
stc
xchg
add
sub
inc
xchg
outsb
cli
xchg
in
aas
jg
cld
sub
push
loop
mov
mov
shlb
lahf
fimuls
mov
dec
mov
repz
or
mov
clc
cmp
scas
xchg
push
fidivrs
ja
test
stc
xchg
in
ret
clc
cmp
aad
data16
scas
mov
cmp
outsb
xchg
fldz
mov
pop
jns
jg
jmp
inc
push
adc
mov
mov
inc
mov
pop
inc
ret
and
xor
in
push
xor
pop
mov
push
lcall
sub
jbe
dec
sbb
push
push
sbb
sbb
xor
cmp
mov
cmpsl
sti
or
aam
cmp
mov
and
xchg
mov
add
das
ja
mov
out
pop
loopne
xor
pop
iret
xchg
aas
add
aad
ljmp
fstp
daa
inc
cmpsb
imul
pop
xor
push
sub
jb
repz
cli
out
mov
jge
ds
iret
lahf
aas
jg
or
sti
les
repz
xor
or
out
movsb
into
mov
jae
cs
cmpsl
push
das
aas
jg
ljmp
push
pop
fsubs
enter
lret
pop
xchg
mov
in
fisubrs
pop
repnz
push
nop
es
add
icebp
jbe
mov
xchg
das
scas
mov
or
pop
inc
addl
in
mov
lret
es
outsl
cmp
int
jns
xchg
push
jb
ja
outsl
mov
jecxz
cmpsb
aad
push
fnstsw
and
mov
sbb
int
fildll
stc
filds
sub
test
xchg
stc
repz
dec
xchg
pop
lahf
jl
leave
mov
das
jg
cld
negl
dec
decb
jmp
fistpll
pop
push
das
inc
adc
aad
cmp
mov
repz
test
pop
xchg
dec
enter
adc
bound
cld
jno
sub
clc
sbb
mov
pop
in
xor
jnp
jle
jl
add
fisttpl
inc
sahf
aas
jl
xlat
pop
push
addr16
std
fidivrs
in
outsl
je
add
adc
push
cmp
adc
or
add
cmpsl
dec
sbb
clc
stos
jbe
adc
jp
sbbl
sbb
sub
arpl
lock
add
dec
mov
pop
adc
lock
js
scas
pop
in
jns
sti
in
sbb
sti
paddusw
in
push
pop
dec
nop
xchg
xchg
dec
push
jb
push
scas
icebp
scas
push
outsb
xor
cld
push
mov
sti
repnz
xchg
pop
jle
les
leave
bound
mov
int3
shld
push
loop
and
inc
mov
fstl
popl
sarb
insb
sbb
into
push
enter
jle
es
in
add
sahf
das
je
stc
pop
popl
dec
call
ljmp
ljmp
mov
or
repnz
adc
in
rcr
jne
pop
inc
sub
cmc
lret
jle
sub
inc
outsl
jns
mov
or
push
mov
xchg
lahf
ljmp
ds
repnz
aam
jg
inc
lfs
pusha
loope
in
stc
repz
dec
out
xchg
outsb
inc
cmpsl
in
repnz
subl
ret
push
int
call
push
add
mov
aam
cld
push
adc
jnp
out
repnz
xchg
add
jle
push
insb
clc
dec
push
mov
push
mov
rcr
mov
mov
xor
aas
sub
push
sar
xor
pop
or
inc
sbb
jle
cld
cld
fldcw
clc
xor
sub
mov
inc
je
or
push
icebp
ljmp
repz
xchg
sahf
iret
pop
mov
jle
clc
aaa
repnz
dec
fcmovbe
lahf
loop
arpl
addr16
dec
push
rorl
arpl
aaa
cmpsb
xor
test
iret
loopne
xor
cmp
outsb
divb
int
add
dec
sbb
mov
dec
xchg
pop
scas
mov
adc
cmp
rolb
and
jae
jg
cld
stc
jmp
mov
sbb
je
je
push
mov
rolb
pop
aam
outsl
mov
jle
cld
rorl
jae
mov
iret
lahf
push
test
mov
push
mov
mov
pop
pushl
jo
out
cmovo
arpl
mov
mov
mov
hlt
dec
inc
ficoml
ud0
in
ja
mov
dec
mov
dec
aad
xchg
xchg
pop
ds
dec
mov
fimuls
xchg
out
aas
mov
jae
test
mov
sbb
shld
sub
sarl
dec
out
inc
aam
xor
fadds
cltd
pushl
mov
xor
lock
or
aas
rorb
mov
fstpl
adc
filds
push
jg
cld
stc
leave
jno
fwait
and
cmp
pop
stc
xor
aas
lods
mov
adc
rcll
jmp
pop
sarb
pop
inc
cli
repnz
mov
mov
aas
stc
lock
jge
iret
fisttpl
gs
lock
mov
idivl
jnp
bound
andb
out
hlt
adc
arpl
out
imul
xor
pop
push
xchg
loop
iret
lahf
aas
pop
jge
shl
and
xchg
hlt
imul
mov
pop
dec
adc
cmp
xlat
jge
mov
jl
mov
popa
sti
mov
shll
lods
pop
test
gs
and
add
xchg
ret
lret
dec
mov
inc
sbb
insl
cld
jl
hlt
in
out
filds
fstps
xlat
in
inc
adc
into
pop
rclb
inc
fldenv
das
ja
mov
inc
pop
out
lea
mov
loope
cmc
cli
push
andb
mov
pop
dec
xchg
dec
add
fwait
clc
bnd
inc
ret
dec
push
xchg
dec
sub
push
pop
repz
lahf
scas
mov
cmp
insb
dec
xor
jp
push
out
inc
sahf
iret
sbb
pusha
add
nop
xor
rclb
lahf
pop
jns
mov
adc
dec
fidivrs
ficoml
or
lahf
pop
sahf
mov
negb
bound
loopne
stc
stc
repz
push
cmc
and
or
pop
jle
and
je
repnz
mov
dec
test
lock
icebp
aas
dec
test
in
and
add
pop
lahf
push
and
xchg
mov
aam
shll
xor
jg
call
out
lahf
pop
out
jb
inc
rcr
or
or
cld
stc
repz
aaa
outsl
movsl
scas
adc
push
mov
cs
push
jle
lahf
aas
jg
jmp
repz
cmp
ds
scas
mov
std
cmp
insl
popf
lret
iret
pop
sarb
faddl
adc
les
lret
push
jno
setne
jns
push
mov
sub
add
sbb
sti
jb
cmpb
into
mov
lahf
pop
loope
pop
adc
insl
mov
out
stc
repz
arpl
and
lds
dec
fdivr
inc
cld
repnz
jo
lret
jge
loopne
sub
jecxz
pop
daa
push
cld
into
loope
int3
jmp
cld
stc
jp
out
into
test
mov
fs
lahf
aas
dec
imulb
repz
out
inc
xchg
jl
lods
jbe
mov
push
nop
sbb
mov
pop
mov
int
jge
test
push
setge
cld
cld
cmp
mov
pop
mov
out
lahf
aas
xlat
jnp
in
popa
or
sub
stc
repz
mov
cmc
push
pop
or
jg
mov
or
outsb
xchg
lahf
out
ljmp
mov
cwtl
push
xor
in
scas
inc
std
lret
hlt
decb
jmp
pop
adcl
sarb
inc
ja
or
or
pop
xchg
xor
jns
lret
xchg
mov
xchg
or
push
je
push
pop
iret
outsl
dec
enter
popf
es
cmp
push
cld
outsl
push
mov
in
sub
xor
push
pop
jns
inc
ljmp
cmp
inc
xchg
push
in
aas
add
xchg
dec
insb
orb
dec
lret
iret
lahf
aas
test
push
jp
pop
adc
repz
call
cmpsb
add
lret
jo
gs
xchg
movsb
cmp
addr16
inc
xchg
outsl
movsb
inc
fcompl
in
jg
jno
cmp
int3
xchg
sbb
sub
add
test
iret
popl
mov
dec
loope
adc
jecxz
ds
rorl
cld
cld
stc
lret
push
jecxz
dec
or
xchg
pop
ja
lods
inc
dec
fnstenv
xchg
push
fidivrs
fadds
jecxz
cs
std
jb
xchg
inc
add
fbstp
fdivrl
aaa
lods
test
or
int
jge
iret
xchg
push
pop
jns
cmpsb
cmp
xchg
xor
int3
sub
sti
ja
add
andb
jg
sub
push
or
cmp
insl
pop
pop
outsl
inc
xchg
xor
gs
cs
jns
xchg
test
daa
add
mul
cmp
inc
jns
xchg
push
aaa
imul
and
push
lret
jl
out
add
out
test
cwtl
and
cltd
push
repz
cli
and
or
pop
xabort
inc
jg
adc
std
repnz
sub
mov
or
jle
std
add
adc
cmp
pop
jle
clc
mov
out
mov
mov
test
push
xchg
scas
mov
ficompl
cmp
insb
cmc
mov
repnz
aad
sub
mov
out
xchg
sub
enter
mov
scas
mov
push
in
inc
in
cmpsl
and
cmpsb
inc
cmpsl
jg
cli
in
lds
je
pop
xchg
outsl
lock
mov
push
cld
and
xlat
or
lret
imul
add
and
lret
mov
pop
pushf
dec
int
xchg
or
out
ds
push
cli
sub
popf
arpl
repnz
lret
out
jle
adc
mov
and
sub
jp
ljmp
sub
lcall
dec
adc
cs
lahf
mov
outsl
ljmp
imul
dec
mov
mov
dec
cld
sti
mov
mov
arpl
jo
jle
cmp
aas
aas
and
xlat
outsb
mov
dec
push
in
iret
lahf
lods
and
xor
xchg
xchg
pop
stc
daa
icebp
out
jge
aas
jmp
enter
push
fdivrp
repnz
and
mov
mov
jns
xchg
sbb
mov
mov
xor
in
ja
js
aaa
pop
decl
je
cmp
pop
xchg
push
pop
jns
sbb
cmp
mov
pop
jns
pushl
jb
movaps
jb
fidivrs
jg
das
cmp
inc
push
cmp
mov
call
xchg
lahf
jae
iret
test
nop
lahf
lods
out
sarb
sbb
push
mov
cld
stc
repz
dec
fimull
cmc
leave
repz
cmpl
sbb
mov
xor
jge
in
and
call
jge
xchg
xchg
push
or
sub
lock
in
push
pop
std
outsb
insb
rclb
dec
push
nop
stos
pop
ret
or
pop
sub
jne
out
lahf
pop
sahf
push
jnp
repnz
imul
mov
pusha
mov
jp
inc
sub
dec
arpl
sub
cmp
jae
adc
mov
mov
es
orb
and
mov
aas
mov
in
adc
les
lahf
or
jb
dec
jmp
sahf
or
sub
lret
cld
mov
xchg
and
hlt
jg
cld
stc
cmp
jae
bound
fpatan
jns
leave
push
das
ja
push
jl
push
arpl
mov
jecxz
repz
dec
sti
inc
icebp
cmp
movsb
fldenv
call
pop
push
mov
jmp
sar
out
orl
mov
xchg
xchg
mov
fcoml
popf
enter
in
sub
xor
jg
cld
adc
addr16
and
mov
loope
out
lahf
aas
xchg
iret
and
xchg
cs
and
xchg
dec
cld
stc
repz
pop
cmp
pop
cmp
or
xor
testb
loope
push
or
out
xchg
mov
jge
inc
ficoms
pop
add
adc
out
xor
cld
xor
inc
faddp
xorb
xchg
daa
xchg
and
mov
dec
jno
imul
cli
lcall
add
into
shl
xchg
and
repnz
inc
out
xor
xchg
push
push
cld
push
add
mov
mov
shll
repnz
notb
pop
jg
cmpsl
psubusw
imull
imul
aas
inc
fistpl
insb
in
jg
sbb
fisubs
out
push
out
into
sub
imul
repz
arpl
cwtl
fiadds
lock
ds
inc
push
jl
sahf
bnd
xorb
push
ljmp
fdivrp
scas
xchg
xchg
je
xlat
jp
mov
out
and
scas
mov
cmp
lock
adcl
pop
push
inc
adc
popa
mov
lods
inc
sahf
fs
in
mov
sbb
ret
mov
stos
leave
and
adc
repz
sbb
jg
pop
shrl
dec
push
dec
mov
das
push
pop
jns
inc
aad
jno
xchg
or
or
sub
jg
call
sub
mov
push
pusha
or
fbld
or
xchg
cmp
out
jle
cmp
lds
fildll
insb
pop
int
ss
lahf
aas
mov
mov
insb
imul
cld
stc
repz
repnz
mov
fadds
pop
jo
jg
cld
stc
pop
addr16
movsl
cmp
mov
xor
aas
out
mov
rcll
or
mov
stos
repz
adc
aas
jg
push
cmp
lea
stos
push
pop
xchg
cmp
inc
aaa
jb
jge
mov
jle
cld
outsb
sub
push
leave
addr16
test
dec
mov
pusha
call
lahf
jg
pop
and
sbbl
jbe
das
lahf
aas
push
pop
pop
pop
mov
out
jmp
out
stos
adc
push
jmp
repz
aam
fldt
dec
cmpb
jg
cld
stc
xchg
pop
adc
adc
or
lcall
data16
sbb
and
decb
pushf
pop
push
addr16
cmc
sub
orb
pop
xor
dec
lahf
jg
xor
out
xor
add
je
movl
cmp
xchg
adc
ds
sub
inc
lret
add
arpl
js
lahf
push
test
arpl
leave
repz
out
out
stos
adc
lods
mov
adc
mov
inc
jg,pt
and
shlb
cltd
push
jb
iret
rcrb
outsb
aam
das
test
xchg
fs
xchg
mov
incb
out
lret
inc
scas
inc
mov
shlb
cmp
or
jle
test
repz
pop
js
test
sbbb
jns
loope,pt
pop
fildll
cmp
lret
iret
lahf
dec
or
pusha
das
aas
adc
out
or
vandps
xor
nop
out
dec
cmpl
xchg
test
pop
mov
orl
int
seto
mov
scas
cmpb
xlat
call
lea
jge
in
out
imulb
jl
or
imul
jle
sub
fbld
stc
cmpsb
insl
lea
lahf
pop
adc
pushf
inc
mov
ret
aam
inc
or
es
std
in
cmc
jge
cmp
iret
invd
inc
dec
adc
mov
cmpsl
movsl
mov
push
sbb
dec
jbe
aas
flds
rdpmc
add
and
or
xor
in
xchg
mov
push
xchg
dec
and
jp
cld
lcall
xor
pop
mov
icebp
aam
inc
sahf
aas
xor
xor
xchg
addl
pop
or
repnz
cmp
dec
pop
dec
mov
mov
sub
lcall
dec
mov
ficomps
mov
notb
dec
popf
xor
or
sbb
add
into
push
or
and
int
push
lods
and
xor
adc
and
adc
mov
scas
lock
and
out
push
push
jnp
sahf
jns
cmp
mov
adc
stc
repz
dec
shll
inc
sbb
mov
inc
cmpsb
jmp
addl
fisttpll
and
push
arpl
icebp
lods
cld
cmp
add
add
lock
daa
aas
cmp
xchg
jae
fsubp
xchg
mov
jg
xchg
dec
icebp
cli
je
daa
mov
cmp
mov
pop
push
mov
int3
outsb
add
jbe
jl
xchg
cld
add
pop
rcrb
int3
add
jnp
pusha
cltd
push
aas
test
add
or
fstps
lret
cmp
mov
scas
lea
iret
and
imul
sub
add
pop
or
jp
int3
and
xchg
sahf
stc
mov
sbb
lahf
inc
inc
jno
loopne
sub
cmc
enter
sbb
pushf
sbbb
repnz
pop
jle
out
pop
iret
cmp
cmp
or
lods
in
std
lcall
movsl
push
das
pop
dec
out
pop
and
xchg
cld
mov
mov
repnz
repz
sub
xchg
add
cld
pop
mov
mov
mov
xchg
into
cltd
iret
xlat
notb
repz
adc
aam
out
loopne
movhlps
push
incl
movsl
enter
add
add
outsl
sub
push
xor
test
cs
push
rorl
and
rcrb
or
aas
jg
cld
into
jne
les
les
mov
out
lahf
cmpsb
outsb
and
and
mov
cmc
push
adc
out
sub
arpl
or
cmpl
incb
cmp
in
mov
cmp
add
and
and
stc
add
aaa
sbb
aas
jg
lods
mov
outsl
jbe
dec
in
fildl
ja
test
stos
jp
sub
xchg
mov
add
out
dec
inc
aaa
pop
mov
mov
jecxz
pop
fistps
lahf
js,pt
nop
popf
push
fsubrl
push
into
push
pop
dec
or
stc
repz
fstpt
and
and
repz
add
jl
xchg
jl
fildl
add
stc
imul
rcrb
xor
cli
or
jns
xchg
jns
cmp
jg
insl
lds
or
aas
mov
mov
lods
mov
dec
mov
iret
lahf
push
push
in
jge
sub
sub
bound
cld
stc
or
addr16
outsb
push
icebp
arpl
xor
adcb
fimuls
sub
out
xchg
lock
sti
xchg
pop
dec
call
cld
stc
repz
sbb
lods
je
lret
lods
jne
ror
fisubrs
mov
setg
dec
cli
xchg
loop
push
add
lahf
shrb
lar
repnz
fdivrs
or
lahf
imul
and
or
cli
in
inc
imulb
dec
leave
pop
xlat
lret
xchg
mov
push
frstor
scas
leave
ret
mov
dec
std
loop
jle
cld
or
xor
push
es
adc
lock
aad
push
jg
xor
enter
loopne
push
aas
lahf
mov
add
jg
pushf
push
add
mov
mov
mov
fisubl
pop
nop
aas
jg
fisubrs
jl
lret
cld
push
adc
pop
rorb
mov
aas
jg
mov
cmp
sbb
pusha
adc
sbb
lock
movsb
mov
ret
jno
add
das
jae
inc
aad
fildll
xchg
aam
ja
mov
clc
and
dec
and
repnz
fdivrp
loop
xor
inc
or
pop
jp
pop
cs
loopne
sbb
lret
dec
inc
pop
mov
das
iret
das
movsb
dec
insb
pop
scas
mov
ss
in
imul
pushf
cli
lcall
or
push
imul
addr16
icebp
inc
mov
out
imul
add
jge
fwait
sbb
add
xchg
aad
dec
enter
xor
inc
inc
out
or
das
pop
or
out
shl
stc
repz
push
sub
dec
push
movsb
pop
aaa
mov
lret
rcr
mov
and
fbstp
jne
cmpsb
pop
pop
ja
ds
and
push
bound
xchg
mov
xchg
popf
in
dec
icebp
cs
in
rcrl
aas
mov
jne
add
dec
push
pop
dec
daa
aas
and
and
insb
ds
pop
jns
shlb
iret
lahf
xchg
xor
nop
lahf
out
jo
in
inc
cmpsb
incb
pusha
push
out
rcll
lock
add
mov
subl
lea
mov
inc
xor
xchg
mov
popf
inc
mov
jg
pop
inc
repz
jbe
dec
jne
sbb
in
push
loopne
hlt
mov
lock
jnp
daa
lahf
sub
ja
pop
ss
ja,pt
jns
fucomp
jo
mov
popa
icebp
aad
dec
mov
push
cmpsb
testb
fucom
pop
leave
in
es
popf
cmovle
repz
jns
sub
sbb
data16
add
mov
push
and
jne
ds
mov
xchg
ja
mov
pop
jns
mov
push
pop
xorl
inc
push
mov
jge
cmp
stos
inc
insb
mov
shll
sbb
or
jo
dec
pop
jns
jo
or
sarb
cltd
inc
jbe
pop
iret
and
push
outsl
jecxz
outsb
fstl
fildll
mov
push
jns
rorl
xchg
jge
pop
cmc
push
test
lret
xchg
sub
loope
lock
sbbb
inc
jp
stc
add
adc
in
jle
out
sbb
sti
sub
in
jl
test
pop
jl
push
movsl
fisubl
loope
iret
mov
cmc
pop
mov
lock
in
shr
xchg
pop
push
outsb
push
lret
repnz
dec
pop
ljmp
ror
sub
mov
push
outsl
ret
push
xchg
pop
lods
mov
mov
stc
repz
pop
xchg
int3
dec
mov
mov
cld
inc
fcoms
pusha
fstpt
pop
xchg
ja
xchg
xchg
pop
lahf
mov
push
pop
jns
sahf
cmp
pop
call
das
mov
sub
lods
pop
repnz
add
fistps
lock
xor
sub
adc
pop
dec
clc
bnd
int3
xchg
sub
stc
repz
sub
xchg
aaa
push
mov
lahf
aas
jg
sub
testb
mov
out
nop
fbld
mov
pop
ret
lock
mov
lods
das
push
fstpt
adc
xchg
scas
loopne
or
outsl
rorl
ss
push
pop
jns
repz
adc
pop
pop
jns
xchg
add
xor
dec
fwait
inc
flds
and
pop
into
das
out
stos
sub
call
inc
xor
add
mov
repz
fildl
xchg
out
in
mov
mov
cld
mov
lcall
sub
jmp
dec
clc
push
mov
xchg
mov
pop
jns
inc
cmpsb
daa
loopne
mov
test
push
lahf
jg
jg
mov
in
and
daa
lock
insb
push
les
xchg
sbb
int3
jns
xchg
push
cmc
xor
or
lods
daa
lret
push
mov
jae
pop
jae
xor
testl
outsb
jmp
inc
cmpb
shl
out
lahf
aas
add
inc
arpl
pop
xchg
pop
mov
cld
stc
jne
mov
insb
hlt
out
mov
lahf
aas
jg
mov
push
dec
jnp
mov
fnstsw
cmp
shl
enter
loopne
cld
bound
jbe
mov
cmpsl
out
mov
testb
fdivrp
mov
std
sub
mov
jns
xchg
lea
jp
fprem
call
into
jns
xchg
push
in
movsb
cmpsb
js
psubw
pusha
dec
push
lret
pop
mov
out
dec
push
mov
repnz
movsb
imul
cli
in
sub
pop
out
xchg
cli
out
or
dec
clc
xchg
hlt
in
scas
or
cmc
das
out
pusha
xor
lea
fldenv
add
lret
lret
mov
push
shrb
mov
daa
fs
in
or
sub
fwait
jle
pushf
push
inc
push
lods
mov
mov
cltd
scas
jo
test
out
push
arpl
bound
add
mov
lods
mov
push
pop
mov
sub
push
pop
add
cs
lods
out
sbb
mov
pop
ds
xchg
push
pop
jns
cmpsl
jl
imul
mull
mov
aam
pop
push
aaa
pop
sahf
pop
push
dec
cld
stc
repz
pop
fcoms
sbb
repz
das
aas
jg
and
sbb
movsl
in
or
add
outsl
enter
mov
scas
push
les
push
ja
pop
jns
xlat
sbb
xor
dec
push
fbld
stos
test
inc
cmp
mov
imul
pop
jns
gs
test
ljmp
jns
aaa
mov
push
pop
jmp
outsl
xchg
pop
les
xchg
pop
dec
pop
je,pn
jle
and
jns
aad
mov
and
aas
dec
ret
lahf
mov
inc
scas
mov
outsb
dec
cmpb
lods
das
fsubrl
rcll
jecxz
xor
lahf
xor
imul
lods
test
push
pop
repnz
out
cmp
fdivs
mov
mov
lods
pop
mov
xchg
add
fldt
es
loop
dec
inc
aas
sbb
aas
test
mov
add
cmpsl
addr16
iret
repz
das
out
mov
int
jmp
jg
cld
stc
mov
lret
ss
loope
cmp
out
lahf
aas
jge
arpl
paddsb
cld
stc
repz
rorl
push
subb
lret
jle
xor
sbb
std
ss
scas
mov
addr16
dec
enter
pop
aad
arpl
mov
sub
pop
repnz
es
stc
and
int
test
inc
data16
sbb
jmp
scas
sub
jb
mov
out
xchg
adc
push
shll
shlb
sti
mov
jb
imul
repz
mov
insl
frstor
nop
nop
or
jns
mov
mov
rolb
or
in
inc
cmpsb
mov
fbstp
test
out
sbb
js
and
es
cmp
mov
lret
repnz
sbb
sub
rorb
cld
xchg
cs
pop
mov
push
ss
aas
movsl
inc
ds
std
xor
hlt
lret
out
in
in
xchg
sub
out
sbb
inc
in
pop
out
iret
push
pusha
push
sarl
int
mov
jbe
push
pop
or
out
notb
fidivrs
dec
int
sbb
mov
scas
cli
cmp
iret
lahf
jg
into
in
mov
add
fisubrl
js
repz
test
adc
out
jb
das
fmuls
dec
and
adc
adc
dec
push
in
pop
ror
fdivrl
in
test
cmc
loopne
stos
cmp
pop
aas
mov
xchg
push
pop
mov
dec
out
test
jmp
or
pop
mov
addr16
sbb
das
aas
mov
cmp
lcall
pop
jle
test
or
js
add
ja
and
rolb
scas
mov
mov
push
pop
jns
jmp
fwait
jns
fs
loopne
lock
hlt
in
fisubrs
and
stc
inc
stos
xlat
add
or
pushf
push
add
xchg
push
call
test
rcrb
das
sub
dec
pop
and
addr16
jmp
xor
daa
push
clc
in
xchg
cmp
stos
negb
stc
cld
stc
repz
xchg
jns
adc
jg
sub
push
push
clc
cmp
rcl
stc
xchg
push
arpl
in
jg
adc
test
sub
stc
xor
outsl
int3
call
mov
pop
inc
fwait
xchg
pop
dec
push
leave
jnp
gs
dec
jns
mov
sbb
mov
popa
mov
out
pusha
or
iret
lahf
aas
inc
pop
daa
or
add
repnz
repz
cmp
out
cmp
cmp
fdivrp
fs
push
mov
idivl
xlat
xor
cmp
inc
lods
mov
jl
repnz
outsb
fld
mov
in
lahf
aas
mov
pop
mov
stos
sbb
jnp
push
das
lahf
pop
ljmp
mov
out
in
shrb
mov
mov
sub
or
sub
fidivrl
cmp
fidivrs
mov
or
sahf
or
shll
imul
dec
movsl
or
sti
in
sub
int
cltd
cs
xchg
xchg
seta
scas
mov
and
inc
stos
enter
and
cmpsl
outsb
dec
enter
out
fwait
push
scas
adc
or
jb
imul
stos
cmp
orb
repz
fwait
loopne
xorl
ret
test
mov
in
fnstcw
movsb
lahf
aas
aas
mov
imul
jns
frstor
mov
arpl
mov
mov
xor
outsl
jge
mov
mov
or
add
cmpsl
ljmp
in
ret
mov
fcmovb
or
cld
stc
dec
push
aad
xor
call
nop
in
ja
sti
cmp
fsubs
inc
fisubrs
lea
xchg
cmc
jb
leave
jb
aad
jge
sbb
xchg
push
fdivrp
aas
std
push
iret
out
js
inc
jecxz
rorl
scas
jg
pop
jns
lcall
out
gs
lret
cld
fistpl
in
pop
jmp
mov
clc
dec
outsl
test
cmc
lret
xchg
push
dec
or
stos
je
add
cld
stc
test
pop
es
scas
stc
pop
nop
dec
mov
leave
mov
jb
and
pop
jle
std
ret
popf
dec
int3
es
in
repnz
jl
out
popa
pushf
les
mov
aas
rorb
cmp
inc
imul
push
fwait
jbe
call
cli
adc
outsl
scas
fs
das
adc
jl
cld
stc
lcall
std
ret
inc
mov
in
ja
mov
shrl
mov
push
pop
jns
xchg
mov
sub
stos
repnz
subl
jge
in
mov
adc
das
jg
out
mov
test
mov
faddl
in
repz
push
sbb
bound
mov
add
jb
xchg
push
call
cmp
cmpsl
push
xchg
jbe
push
fdivrp
sbbl
mov
iret
data16
push
imul
in
es
pushl
lret
jge
in
xlat
ljmp
mov
stos
js
repnz
adc
and
or
into
lret
ds
pop
mov
outsb
fsts
pop
les
repnz
aam
jmp
adc
pop
cmp
scas
mov
cmpsl
push
mov
jno
pop
xchg
int3
out
sbb
lret
jns
dec
outsl
popa
in
loope
subb
stos
test
push
adc
lahf
aas
ja
inc
xchg
push
inc
stos
addb
dec
stos
ffree
out
mov
add
scas
jp
inc
cld
repnz
dec
shll
inc
add
movsb
inc
leave
test
adc
and
jne
mov
inc
adc
mov
shl
fbld
jg
mov
outsb
inc
jge
insl
push
mov
repz
jecxz
call
repz
call
scas
mov
push
sub
mov
rorb
loop
mov
pushl
jg
and
clc
dec
xorl
hlt
jl
out
lahf
sbb
pop
lret
inc
das
in
es
clc
ja
out
data16
inc
cli
outsl
mov
jmp
ret
test
and
jns
and
test
add
iret
cmovl
outsl
pop
xor
push
jp
pop
rorb
add
dec
jge
sahf
subb
cmpsb
sbb
pop
xor
lods
imull
pop
lea
faddl
mov
aas
outsb
mov
sbb
cld
and
inc
mov
lock
.byte
.byte
jg
call
add
mov
mov
sub
sub
imul
mov
or
repnz
or
push
mov
add
cmp
or
add
sub
sub
add
sub
cmp
movl
popf
cmp
sbb
add
sar
outsl
divl
adc
enter
push
mov
js
fstpl
pop
cmp
and
sbb
xor
lret
or
sub
mov
pusha
sti
pop
sti
cmp
mov
add
rolb
mov
roll
mov
out
add
cmp
sub
or
dec
or
rcr
mov
pop
mov
sbb
cli
out
add
mov
pusha
pop
mov
add
adc
pusha
fcmovnu
or
test
shrb
call
inc
inc
clc
add
inc
decb
add
sub
outsb
in
scas
pop
jo
sub
sbb
push
xchg
adc
and
mov
sti
xchg
mov
pop
add
mov
sub
mov
sub
mov
jle
ret
pop
or
rorb
or
mov
sbb
adc
add
pop
sbbl
pop
cld
test
je
ret
pop
lods
xor
mov
adc
mov
or
push
mov
add
sbb
mov
repnz
ss
mov
dec
push
mov
sub
add
push
mov
push
push
cs
mov
mov
dec
add
mov
add
or
pop
pop
loopne
mov
xchg
jl
scas
jo
ret
bound
adc
rcr
add
out
add
xor
or
gs
out
lock
push
enter
mov
arpl
sub
rorl
cmpsb
push
add
insb
add
xor
mov
pop
cmp
and
inc
imul
mov
lcall
sbb
repnz
mov
neg
cmp
push
mov
add
scas
xor
add
adc
push
out
les
add
jmp
mov
mov
or
adc
adc
add
add
sbb
push
into
sub
add
mov
in
lds
add
xchg
sbb
mov
test
push
int3
pusha
imul
test
sub
shl
call
sbb
inc
mul
adc
or
xchg
push
add
rol
jle
lret
popa
dec
mov
out
sbb
fs
fdiv
andl
mov
dec
push
xor
lcall
mov
sbb
mov
push
ret
loop
or
jb
js
rorb
or
pop
jge
movsb
inc
mov
push
cmp
add
mov
add
fistpll
jbe
sbb
sbb
inc
stc
push
insb
adc
jne
push
adcl
mov
inc
imul
mov
cmp
ret
xlat
inc
cmp
loopne
es
mov
shlb
add
cmp
add
sbb
push
cwtl
add
xor
mov
adc
lods
jmp
mov
rcrb
pop
aad
push
jl
cli
or
icebp
inc
cld
push
xor
and
cs
das
int3
loopne
pop
out
pop
mov
mov
mov
call
mov
mov
incl
enter
adc
sbb
mov
inc
mov
and
xor
popa
icebp
mov
or
scas
test
lock
pop
cs
inc
div
ljmp
jb
or
cmp
cli
adc
sub
sahf
pop
cs
sbb
sbb
mov
push
xchg
adc
rclb
mov
add
and
jbe
popa
fists
ret
stos
ret
rcrl
push
jp
or
cmp
push
leave
ret
call
xchg
add
sbb
mov
push
add
sbb
sub
or
clc
adc
out
push
or
nop
in
shl
xor
lock
add
add
out
pop
test
subb
add
rcl
int3
cmp
add
mov
push
shl
scas
jb
sbb
push
shl
mov
dec
inc
jnp
mov
adc
mov
rcr
clc
jp
fs
adc
pushf
loopne
mov
loopne
add
jb
call
ss
add
movsb
rcl
dec
sbb
add
xor
and
rcrb
sbbb
aad
rol
mov
cmp
pushw
addl
loopne
lds
adc
enter
mov
into
pop
inc
test
xor
ret
add
or
fcoml
mov
enter
shlb
sbb
push
cmp
mov
pop
sbb
push
sub
mov
add
and
mov
bnd
jb
leave
add
and
bndstx
lcall
and
push
scas
jnp
add
mov
dec
mov
mov
bnd
mov
push
pop
sbb
das
jp
stos
lock
mov
adc
add
mov
enter
outsb
sbb
popa
xor
pusha
jb
add
pop
insb
adc
mov
or
lcall
push
inc
push
xchg
add
adc
add
mov
in
adc
adc
clc
sub
sbb
js
sub
dec
lcall
xchg
sub
scas
popa
cmp
sbb
inc
rorl
mov
or
popa
sbb
sub
xchg
lcall
adc
adc
rolb
lods
loop
dec
inc
adc
sub
pop
ret
or
jo
sbb
jnp
or
cmp
int3
lret
inc
add
pop
testb
add
shll
pop
lods
pusha
mov
faddl
cli
add
jo
or
clc
sbb
cmp
lret
pusha
rcr
clc
es
xor
je
cmp
mov
cld
call
hlt
push
stc
sbb
dec
in
or
and
scas
into
push
adc
outsb
adc
mov
adc
rolb
mov
jle
nop
testb
lds
xchg
call
xor
pop
dec
cld
mov
push
sub
sbb
xchg
add
aaa
adc
data16
stos
sub
xlat
arpl
lret
lods
cmpsb
adc
mov
push
test
orb
jo
mov
fstpt
iret
out
in
shrb
test
or
adc
call
cs
mov
insb
es
add
roll
sbb
into
roll
int3
fwait
dec
sub
cmp
jo
icebp
or
pusha
mov
or
cmpsb
cs
fldenv
pop
sbb
scas
fldcw
xor
call
sub
rclb
add
add
adc
mov
enter
adc
pop
mov
rcl
loop
xor
ljmp
sbb
pop
mov
adc
adc
adc
add
aad
push
pop
mov
xor
mov
adc
jbe
push
hlt
pop
test
cmp
xchg
mov
push
xchg
cmp
out
imul
cmp
orl
push
jae
ret
inc
fistl
call
inc
add
roll
cmp
jo
add
sbb
mov
daa
sub
hlt
testl
imul
inc
pop
mov
daa
rcl
jbe
push
mov
jb
in
jp
inc
hlt
lds
lods
shrb
rcrl
lock
mov
or
shrb
dec
push
add
and
pop
aad
add
xor
cmp
xchg
sub
cmp
cvtps2pd
mov
add
aas
and
adc
adc
add
mov
or
adc
sbb
cmp
out
sbb
sbb
sbb
lds
call
lock
jo,pn
sbb
les
sbb
sub
mov
loope
mov
inc
cmp
fcom
xchg
inc
sbb
mov
mov
push
jo
sarb
popa
repnz
loopne
jbe
inc
or
rol
adc
adc
fs
push
test
mov
adc
outsb
cmp
jo
outsl
es
jb
xchg
js
ljmp
cmp
push
out
rcrb
add
cli
xchg
sbb
push
jo
mov
mov
add
divb
add
add
inc
sub
push
mov
pop
mov
scas
or
add
andb
in
mov
loopne
or
jp
mov
mov
lods
or
es
loope
mov
lret
sub
and
mov
adc
sub
sbb
out
das
push
call
lcall
or
xor
pop
inc
add
ret
aaa
negb
orb
or
out
and
or
push
in
mov
nop
mov
and
inc
cmc
rcl
xchg
adc
push
rcl
cmp
sub
add
mov
xchg
pop
adc
ljmp
imul
stos
rorl
loopne
nop
mov
adc
mov
xchg
add
ljmp
xor
icebp
sbb
mov
sbb
subb
pop
rcrb
push
adc
xor
sbb
mov
pusha
out
into
and
dec
add
pop
jl
addl
mov
les
dec
insb
mov
inc
les
and
out
addl
mov
pop
xchg
icebp
pop
mov
mov
into
divb
ret
mov
ret
add
and
sbb
dec
fisubl
call
pop
leave
pop
pushf
add
mov
xchg
add
xlat
pushf
icebp
js
cmp
mov
sub
pusha
add
fmull
add
push
cs
add
ljmp
lods
mov
fs
inc
xchg
jae
cli
ret
and
orl
mov
insb
inc
adc
sub
fbld
push
pop
sub
js
out
sbb
dec
or
jmp
aas
pop
push
lock
adc
sarl
add
adc
jns
cld
sbb
cmp
add
scas
mov
pop
sub
add
leave
js
jo
adc
or
sbb
sbb
push
int3
inc
sub
dec
xor
mov
sbb
sub
lea
icebp
adc
inc
shl
stos
inc
pop
dec
mov
int3
rcll
test
push
icebp
xor
push
popf
mov
aam
loop
imulb
push
pop
sbb
cmp
js
and
stos
or
push
pop
addl
mov
loopne
pop
cs
cmp
add
pop
cmp
sub
lock
test
xor
pop
imul
cwtl
sbb
xchg
and
cmp
sub
data16
pop
pop
adc
jg
push
push
push
push
push
sbb
or
bound
mov
xchg
aam
idivb
rorb
icebp
add
mov
mov
lods
dec
or
or
notb
jo
mov
xor
mov
push
or
movsb
and
leave
gs
xchg
pop
sbb
pop
loopne
push
sbb
sbb
adc
jbe
ljmp
push
stos
sbb
arpl
rolb
xor
aad
movl
cmp
fcom
lock
shlb
push
pop
loope
lcall
mov
xor
jo
sti
call
in
push
and
orb
push
mov
nopl
loopne
jnp
pop
add
divl
out
or
mov
enter
out
push
pusha
scas
imulb
mov
jmp
mov
sbb
push
addb
pop
js
sbb
jbe
xchg
jg
or
adc
js
adcb
inc
lock
or
cld
xchg
push
mov
ret
sbb
xchg
and
mov
xchg
sbb
pop
lret
mov
iret
jo
inc
add
aam
hlt
scas
sahf
movsb
or
mov
add
loope
jnp
and
loope
testl
adc
push
bound
xor
testb
jo
push
mov
push
add
je
push
push
push
mov
and
or
dec
bound
mov
lock
jb
rorl
sub
add
jmp
lds
jmp
push
enter
shll
xchg
add
stos
add
xor
mov
mov
je
pop
inc
jb
add
xchg
pop
bsr
vmwrite
jge
push
sbb
or
ret
push
cmpsl
xlat
add
movsb
in
push
add
sub
rclb
or
ljmp
subl
xchg
xor
pushf
xor
xchg
adc
jb
sub
or
dec
enter
xchg
sub
sub
push
mov
test
push
xor
or
and
rolb
ja
or
lock
addr16
cmp
inc
pop
sahf
mov
mov
add
push
enter
pushf
xor
sahf
and
pusha
inc
subl
add
jp
or
mov
loopne
rorl
push
fcompl
cmpsb
ret
fidivrl
mov
dec
push
fs
js
inc
and
and
push
or
mov
sbb
jae
pop
sbb
cs
sbb
repnz
les
adc
push
inc
rcrl
cmp
loopne
mov
mov
pop
decb
push
psubusw
adc
out
ja
push
push
push
push
inc
xchg
pop
add
aam
pusha
or
mov
arpl
and
dec
test
rolb
sbb
add
int3
in
jae
add
outsb
or
pop
lods
xchg
mov
push
cmp
inc
rcl
pop
sbb
sbb
lock
push
jp
ds
mov
scas
mov
scas
je
mov
push
mov
jbe
negb
push
cmp
mov
mov
adc
jmp
enter
sub
movsb
shll
add
adc
mov
or
lret
push
sti
mov
inc
pop
lock
out
nop
ret
cmpsb
into
xchg
out
or
lret
sbb
xchg
and
jp
dec
inc
loopne
lods
jb
scas
in
or
ret
mov
sbb
xchg
iret
mov
cltd
sub
rorl
pop
inc
fbld
imul
leave
ret
sub
icebp
fs
push
push
push
mov
icebp
pop
rcr
ficoml
lcall
pushf
add
inc
pusha
sub
sbb
jmp
push
mov
call
fcmovnbe
leave
inc
add
xlat
dec
sbb
ljmp
adc
dec
pushf
js
xor
shlb
inc
adc
xchg
xchg
enter
xchg
or
into
add
bound
pushf
jns
push
sarl
or
sahf
add
test
or
add
popa
lcall
add
pop
imulb
or
movsl
shrl
dec
in
mov
es
add
test
movsb
xchg
cmpl
jl
sbb
les
sub
push
xchg
movl
insl
in
rol
xlat
lret
fisubs
sti
jne
mov
fstps
clc
adc
cwtl
sqrtps
dec
jl
jmp
outsb
enter
loopne
push
je
into
mov
inc
dec
je
icebp
out
dec
adc
jo
or
push
inc
test
lods
push
adc
outsl
mov
dec
push
inc
inc
mov
xchg
or
cmpsb
adc
sbb
adc
cmp
mov
scas
push
cli
add
cltd
add
mov
cmp
nop
xchg
pop
rorb
loop
jb
cli
pop
xor
push
test
dec
jge
xor
rolb
in
sub
xchg
inc
add
pop
jp
movb
push
shl
test
push
xchg
push
mov
xor
js
mov
int3
rcrb
repnz
fadds
lcall
ds
js
cs
push
loopne
shr
mov
add
aad
xor
mov
loopne
into
jl
rcl
pusha
test
fistl
adc
mov
lret
mov
es
sub
mov
add
pop
aam
into
insb
push
adc
scas
bound
cmp
push
lret
push
sbb
pop
push
ds
adc
fldt
mov
test
call
inc
adc
push
adc
jo
sub
sbb
sbb
add
pushf
dec
xchg
dec
ja
sarb
push
idivb
rorl
call
or
jl
mov
sub
mov
insb
adc
lds
pushf
adc
ret
adc
or
jo
sbb
add
add
and
test
mov
fmull
mov
loopne
xchg
xor
ds
add
hlt
pusha
fmulp
push
push
push
lods
add
add
dec
mov
xor
movsb
sbb
xor
and
adc
and
fxch
loop
pop
cmp
adc
test
loopne
rcrw
lcall
add
ficoml
pop
pop
rorb
dec
add
mov
leave
cmp
shr
xor
xor
sub
adc
pop
ja
sbb
xor
jne
pop
leave
dec
ret
adc
jo
sub
cmp
add
or
push
mov
rol
loop
adcb
and
cltd
push
into
push
add
sbb
mov
sbb
andl
lods
cmc
add
ljmp
mov
nop
into
in
inc
pop
outsl
enter
sbb
add
aam
jnp
addl
je
push
inc
sbb
xor
cli
add
sub
jo
jmp
aam
fsubl
inc
adc
into
or
movsb
inc
push
cltd
test
xchg
loopne
or
lock
mov
sbb
rolb
lock
rcl
adc
add
fld
pop
stos
aaa
add
mov
add
sbb
lods
testb
and
sbb
into
fsubrl
jns
aam
sbb
mov
adc
cmp
jb
push
pop
ret
xor
addb
mov
pop
test
data16
cmp
lock
lcall
adc
pop
mov
sbb
test
add
in
mov
push
ret
adc
inc
mov
xlat
rolb
xchg
mov
repz
das
mov
js
lahf
in
sub
or
ret
or
push
sub
cmp
lret
ficompl
cmp
sub
movl
add
cmpsb
dec
sbb
inc
mov
or
lock
pop
jo
mov
push
push
dec
gs
stc
ret
and
and
fadd
or
imul
into
mov
pop
mov
sbb
mov
inc
adc
scas
sbbl
mov
pop
xchg
or
ja
movsl
push
inc
aaa
dec
rcrl
add
leave
imul
or
loop
mov
mov
mov
enter
loopne
push
add
jnp
cli
inc
pop
enter
push
xlat
out
or
rcrb
into
repnz
lods
and
icebp
dec
js
add
add
loopne
hlt
sbb
ret
jl
sub
mov
clc
push
inc
sbb
pop
cmp
rcl
push
sbb
dec
inc
pop
sub
enter
or
dec
int3
dec
push
lock
call
xor
pop
jnp
and
mov
shr
ficoms
imul
cmp
and
shll
iret
ret
mov
les
xchg
push
dec
add
roll
in
add
jo
jne
xchg
cmp
pop
pop
and
push
fmuls
stos
ret
add
loop
loopne
cmp
stc
sub
mov
or
jmp
arpl
pusha
and
dec
jbe
xchg
pop
cmpsl
daa
arpl
inc
sbb
addl
sub
shl
pop
push
jo
sbb
inc
mulb
push
mov
loope
fimuls
dec
inc
sub
mov
loopne
xchg
inc
inc
mov
mov
sub
shll
xlat
add
les
test
aas
cmc
push
popf
cli
popf
push
xor
mov
shll
cmp
int3
push
mov
ret
fsubrl
or
lahf
or
int3
and
rolb
and
add
push
jb
push
lock
add
rolb
xor
data16
out
enter
and
pop
pop
js
rclb
sarl
add
add
rcl
mov
lods
insb
lret
imul
lods
cmp
add
add
bound
mov
cmp
hlt
shr
div
push
or
sbb
pusha
cmpsl
icebp
add
xchg
in
cli
rolb
adcb
mov
or
scas
shll
orb
icebp
sbb
mov
daa
xor
pusha
nop
subl
add
je
and
loop
ret
add
mov
lods
ds
pop
xchg
cs
popa
and
lcall
inc
test
loop
or
push
sbb
pop
push
xchg
push
sbb
idiv
add
mov
push
addl
add
mov
not
sbb
outsb
mov
adc
lret
cmp
mov
cmp
dec
dec
dec
hlt
hlt
adc
jmp
mov
adc
or
inc
xchg
addr16
je
test
into
add
loop
push
sub
sbb
sbb
push
dec
xchg
jp
shr
jmp
mov
imul
enter
cmp
in
cmp
idivb
adc
mov
jle
call
cmp
into
adc
ljmp
adc
subl
xadd
test
dec
mov
mov
xchg
or
and
in
mov
mov
mov
test
dec
mov
sbb
sbb
add
shll
and
inc
test
mov
andb
xorb
movb
int3
rorb
dec
into
sub
add
and
jmp
test
or
and
test
test
add
loopne
sbb
push
scas
add
mov
and
or
call
aaa
cmp
test
push
push
sbbb
pop
into
adc
adc
fdivs
cs
out
fdivrs
scas
test
jecxz
cmpsl
shlb
sub
inc
xor
add
sub
hlt
mov
add
mov
add
or
xor
cmp
leave
jb
inc
jl
stc
ucomiss
push
jecxz
or
outsb
les
dec
pop
mov
mov
data16
gs
xchg
jmp
or
pop
add
dec
pushf
jl
ret
ds
sbb
cmp
das
or
rorb
sub
movb
mov
andb
xor
ljmp
or
lods
test
add
cmp
loopne
sub
pop
nop
jo
pop
clc
pop
mov
sbb
mov
rcrb
test
or
je
add
adc
shr
inc
les
div
orl
popa
out
add
ljmp
inc
es
cld
cwtl
lock
mov
push
mov
les
push
pop
adc
pop
outsb
lret
add
jp,pt
sahf
add
mov
sub
adcb
outsb
lock
add
pop
mov
inc
dec
loopne
aad
mov
xchg
sbb
sbb
xor
test
mov
sbb
jl
sub
adc
push
mov
push
enter
cmp
leave
mov
add
nop
dec
imul
or
xor
addb
pop
sbb
push
push
into
and
or
sbb
orl
cwtl
and
ss
adcb
push
sbb
inc
and
jp
add
mov
fstpl
push
mov
loop
icebp
ret
push
sbb
sbb
fsin
add
dec
adc
mov
inc
push
je
loope
scas
lret
adc
or
andl
je
enter
dec
lock
imul
inc
lret
xor
pushf
test
dec
mov
out
mov
or
aad
aas
inc
stc
adc
xor
test
mov
vpshuflw
dec
mov
rorl
push
and
add
sub
js
loopne
mov
xchg
sahf
sbb
icebp
cmpsl
int3
push
mov
sbb
hlt
icebp
xor
shll
adc
push
pusha
cltd
cli
shlb
add
add
xlat
dec
xchg
subb
pop
lock
sbb
pop
inc
dec
in
add
and
sbb
push
jo
fistl
jecxz
in
add
sbb
adc
mov
push
cmp
pushf
mov
imul
mov
mov
shrb
cli
or
sbb
bound
movsb
adc
ret
push
push
push
mov
jmp
leave
mov
rolb
daa
mov
enter
cmpsb
mov
inc
incl
test
or
adc
dec
shrb
ret
mov
sbb
adcl
push
into
pop
jo
les
push
push
stc
pop
cs
push
insl
in
loopne
xor
inc
leave
and
sbb
and
pop
insl
lods
dec
and
or
mov
into
lds
sbbb
inc
cmpsb
xchg
es
dec
lret
adc
arpl
icebp
daa
loop
jne
int3
jne
sub
xchg
or
adc
sbb
pop
mov
adc
movsl
push
mov
or
std
and
aam
pop
dec
call
popa
mov
shlb
mov
dec
jne
shrb
jp
ds
cld
call
adc
pop
adc
int
cmpsl
rolb
sbb
xchg
xor
out
push
std
insb
add
mov
pop
cld
lock
faddl
or
dec
push
mov
adc
jbe
dec
inc
test
add
xchg
clc
cwtl
sbb
lock
outsl
push
dec
call
sbb
adc
je
jnp
sbb
js
adc
pop
repnz
cwtl
mov
cmp
clc
push
lea
pop
dec
dec
pop
push
lret
or
cmc
adc
movsb
leave
test
sub
into
test
pop
cmp
insl
adcb
jo
pop
adcl
shll
pop
bound
xchg
data16
push
movzbl
jns
add
mov
aaa
pop
rolb
inc
out
in
jecxz
pop
cwtl
pop
sbb
pop
shl
lahf
addl
sbb
je
hlt
mov
outsb
dec
bound
sbb
ss
or
xchg
sbb
push
mov
rolb
adc
insb
cmp
inc
jae
jb
adc
adc
mov
sub
into
lods
dec
loop
sbb
lret
pop
loopne
cwtl
mov
int3
test
test
in
call
inc
psrld
or
call
push
ret
sbbl
sbb
rol
or
sub
aam
add
mov
mov
adc
xor
lds
enter
shl
enter
inc
lods
sub
and
push
out
lock
imul
cmpb
addr16
roll
sbb
push
adc
xchg
adc
mov
js
lds
call
push
rcrb
ret
mov
or
sbb
adc
push
xchg
push
pop
fucompp
push
xchg
jo
inc
adc
roll
jo
pop
pop
jmp
aam
test
test
mov
rclb
aam
push
sti
add
mov
xlat
jo
jbe
adc
mov
pop
sbb
loopne
adc
addb
mov
js
mov
lods
pop
or
in
loopne
push
add
aaa
popa
xor
dec
clc
test
sbb
rolb
loop
pushf
sub
pop
and
jp
dec
and
push
push
or
or
es
fdivrl
daa
pop
loopne
cmp
add
sahf
add
cmp
dec
pusha
shlb
xor
jmp
dec
or
inc
imul
push
inc
jno
jbe
add
cltd
pop
inc
push
mov
roll
dec
leave
adc
inc
mov
in
clc
sbb
mov
icebp
dec
fldenv
sarl
cmp
add
xchg
pop
pop
rclb
adc
inc
movsb
pusha
sub
das
adc
scas
push
jnp
push
sbb
adc
fildll
rolb
pop
add
cmpsb
and
iret
rcrl
ret
or
sbb
xor
test
jno
sub
rorl
sbb
xor
ficomps
imul
or
sub
adc
jno
mov
pop
or
add
in
jmp
add
push
add
sub
mov
dec
or
dec
xor
call
sub
imul
loopne
xor
jmp
xor
in
jo
add
adc
xorl
inc
push
cmp
inc
add
add
jb
sbb
sub
dec
dec
xor
subb
mov
cmp
call
enter
bound
or
add
fistpll
adc
sub
cmp
mov
pusha
dec
mov
mov
pop
test
rolb
push
test
sbb
push
jecxz
ret
imul
and
push
cmp
out
dec
or
jle
push
sbb
adc
and
xor
loopne
hlt
mov
adc
test
leave
mov
sbb
xchg
inc
mov
add
push
test
or
arpl
pushf
mov
or
mov
clc
sub
push
mov
les
sbb
and
dec
lock
cs
lret
or
mov
test
and
test
inc
test
cmp
js
or
cmpl
loopne
testb
fdivrs
xchg
ret
ja
inc
data16
adc
add
test
mov
mov
adc
xchg
inc
mov
add
subb
scas
dec
and
dec
ret
sbb
adc
push
inc
dec
xor
hlt
cmp
inc
add
rcr
scas
inc
jae
sub
int3
into
or
andb
repnz
jbe
xchg
xor
adc
loopne
cmp
add
push
pop
xchg
push
mov
inc
xchg
add
dec
adcl
adc
add
loopne
xor
cs
add
aam
xor
mov
fs
shrb
imul
repnz
sarb
test
loop
and
push
mov
bound
sbb
pusha
icebp
sub
and
mov
shlb
or
icebp
inc
test
cmpsb
leave
sbbb
ljmp
jg
enter
mov
sub
inc
or
jle
adc
bound
mov
popa
jmp
jne
sbb
enter
ds
push
sub
or
adc
dec
cmp
cmp
mov
adc
hlt
ret
add
jbe
pop
mov
fsubrs
wbinvd
adc
push
sub
gs
adc
popf
jg
iret
rorb
imul
imul
mov
push
test
adc
fwait
sbb
adcb
dec
sbb
cli
outsb
and
mov
out
out
lea
cwtl
sbb
jp
pop
mov
push
loopne
jg
fidivrs
push
dec
jecxz
shrl
fwait
sbb
clc
or
int3
aad
add
aaa
xor
mov
fstps
push
add
push
jl
sub
push
cld
fldcw
mov
jo
or
das
ret
and
or
xchg
jno
dec
bound
rorb
pop
aam
and
subb
jl
lods
andl
incb
data16
clc
sbb
xchg
mov
and
stc
or
in
mov
jb
enter
cld
jb
push
repz
mov
add
adc
aaa
sahf
push
out
test
inc
push
add
fdivl
jmp
aad
xor
push
stos
and
enter
inc
dec
cltd
cli
push
adc
ret
fisubs
addb
ljmp
out
add
arpl
and
jl
xlat
fcomps
adc
outsb
cmp
into
dec
cmp
or
es
inc
mov
popa
jecxz
inc
sbb
mov
clc
fs
inc
leave
pop
or
adc
aam
aad
mov
pop
je
jbe
push
and
out
jo
shll
out
adc
mov
jp
adc
lea
inc
mov
push
dec
jge
stos
mov
or
xor
rcrb
mov
pop
pop
adc
push
adcb
jge
sub
mov
gs
xchg
add
pushf
lcall
cmp
addr16
sbb
addr16
into
imul
mov
or
dec
into
jle
sbb
icebp
sbb
ret
push
push
leave
and
lock
or
cmp
repnz
jle
add
add
pop
push
scas
sbb
adc
push
add
cmp
push
or
push
push
dec
loope
push
cmp
pop
xchg
in
inc
jl
shll
jge
add
mov
pop
inc
and
fdiv
daa
mov
pop
xor
int3
push
cmc
sbb
pusha
adc
xchg
dec
sub
sahf
mov
shlb
movl
jo
ljmp
jl
push
push
clc
add
sbb
sbb
or
push
cmp
pushf
push
sbb
pop
addr16
dec
sbb
fildl
xchg
sbb
mov
push
cwtl
add
add
and
or
mov
push
inc
aad
mov
adc
sbb
clc
scas
push
or
mov
nop
or
cmpsb
inc
mov
adc
enter
cmp
fs
jno
rclb
sbb
push
adc
adc
push
adc
jns
jo
mov
dec
push
lret
rcl
push
push
push
and
xchg
fcoml
ljmp
push
cli
js
stos
sub
inc
jl
pop
xor
cmp
inc
sub
cmp
xchg
and
aad
adc
je
das
call
pop
addb
push
pop
loope
popf
cmp
push
adc
stos
sbbb
psubb
push
clc
and
add
bound
mov
add
and
jp
popa
aaa
int3
rcl
cwtl
cld
pop
adc
mov
push
rclb
pop
jbe
cmp
mov
dec
loopne
push
ficoml
sbb
je
enter
jb
push
fadds
mov
mov
mov
pusha
adcb
fimuls
push
clc
leave
testb
nop
rolb
inc
cli
clc
add
add
ret
stos
out
lret
or
sbbl
into
add
dec
add
sbb
dec
in
xor
add
mov
push
cmp
orb
ljmp
adc
mov
inc
push
inc
cmp
or
jo
mov
push
adc
mov
dec
or
xor
add
inc
push
aad
fmul
ljmp
or
addb
jno
mov
stos
sbb
mulb
adcl
sbb
mov
rcll
mov
call
mov
jbe
add
enter
and
fistpl
push
push
fwait
cmp
add
mov
popa
sub
adc
cmp
imul
loopne
lcall
es
fcomip
pop
pop
push
jne
test
js
mov
pop
sub
adc
add
adc
jp,pn
inc
mov
and
dec
in
daa
cmp
stos
lock
or
mov
stos
ret
enter
xchg
jmp
xchg
push
ret
dec
push
fcmove
repz
sub
aam
add
xor
movsb
mov
inc
or
and
lret
and
xor
adc
pop
jne
mov
js
lock
aam
js
orb
fs
or
dec
or
pop
loope
cwtl
push
ds
mov
das
sbb
sbb
mov
mov
ss
or
sub
adc
push
xchg
cs
cmp
shll
inc
jmp
dec
xor
mov
imulb
or
rcl
int3
cs
rcl
fs
je
cmp
push
ljmp
insl
movb
mov
mov
adc
ficomps
push
enter
lret
sahf
inc
arpl
mov
mov
test
adc
add
sub
xlat
push
icebp
xchg
mov
mov
adc
ret
add
std
insb
pop
add
dec
xchg
cmp
sbb
cli
sbb
std
data16
add
push
xchg
negb
and
mov
out
xchg
scas
pusha
inc
dec
jb
sbb
mov
movsb
ret
or
jo
ds
xor
cld
jae
push
mov
lock
jbe
inc
or
roll
mov
inc
loope
leave
cmp
je
scas
xor
in
fiaddl
xor
pop
popa
inc
add
jmp
std
js
mov
sbb
xchg
sub
mov
or
lock
mov
xchg
std
ret
aaa
enter
add
sarb
inc
filds
popa
dec
dec
cli
jp
inc
shlb
dec
push
pop
sub
add
and
xchg
jmp
or
fsubrl
xor
jb
sbb
inc
idiv
iret
sahf
xor
add
cltd
dec
push
and
shr
push
sub
mov
icebp
js
lcall
loope
mov
test
and
jb
shl
stos
dec
jp
mov
clc
cltd
adc
add
add
sbb
sbb
iret
negb
ret
mov
sbb
and
ret
ss
leave
push
push
out
sbb
push
test
xchg
xor
mov
pop
rolb
sbb
adc
add
je
push
mulps
dec
sub
nop
add
mov
pusha
inc
fmuls
inc
and
call
sbb
clc
scas
push
mov
inc
js
pop
jnp
jo
or
les
repnz
fcoms
push
loope
or
jp
sbb
hlt
inc
inc
add
xorl
push
sbbb
or
add
mov
push
add
enter
sbb
cmp
mov
or
sbb
jne
push
mov
sub
sbb
pop
pusha
sub
cmp
lock
bound
inc
sub
push
inc
cli
jb
lods
scas
or
fs
add
icebp
push
popa
and
testb
xor
mov
movsb
ds
cmpl
adc
dec
stos
leave
pop
inc
lock
lret
add
pop
shl
orl
lds
add
push
dec
push
or
dec
sbb
pusha
mov
sbb
cmpb
jg
aam
xchg
rol
adc
mov
cli
and
jp
cmpsb
xchg
push
push
push
hlt
wbinvd
inc
lcall
or
mov
pop
fistps
movaps
cmp
mov
aaa
or
aad
push
pusha
dec
sub
ficoml
adc
xor
add
and
inc
js
xor
mov
pop
add
xor
cmp
sub
into
cmp
stc
cmovo
sbb
shrb
leave
ljmp
mov
icebp
xchg
adc
cmp
jno
mov
push
pusha
imul
push
mov
xor
jbe
push
or
cmpsb
js
stos
or
lods
inc
dec
push
sbb
jl
in
and
fstpt
push
jae
push
movsl
push
xor
test
in
or
movb
cmp
pop
adc
or
sub
dec
imul
mov
add
push
cli
mov
inc
mov
push
adc
adc
pop
inc
and
icebp
add
lret
inc
mulps
cmp
sub
repnz
sbb
inc
pop
xor
icebp
jnp
rol
sub
mov
sbb
sub
les
leave
icebp
leave
ljmp
inc
js
add
xchg
push
mov
addl
pop
addr16
sbb
out
dec
and
or
adc
lods
adc
loope
insl
add
loope
inc
sbb
mov
clc
mov
leave
jp
push
cmpsl
popa
add
loopne
or
xchg
xchg
cs
push
stos
ret
push
add
movb
pop
out
aam
ljmp
adc
invd
push
push
cwtl
rolb
stc
lret
sti
xor
cmp
sub
or
into
dec
mov
fiaddl
insl
mov
mov
arpl
mov
mov
cmpsb
dec
sub
aam
leave
sub
adc
or
mov
test
adc
mov
jl
jmp
jae
js
mov
cli
dec
push
sahf
mov
adc
mov
pop
jb
xor
cmp
and
std
or
aaa
push
pop
jo
pop
rcl
add
cmpsl
and
ss
leave
les
xchg
popa
iret
cmpsb
push
cld
mov
daa
hlt
mov
es
xchg
js
call
ret
lea
outsb
test
and
or
lods
ljmp
pop
dec
hlt
sbb
add
mov
sub
push
add
add
jnp
mov
das
icebp
je
loopne
pop
test
push
mov
mov
and
push
push
icebp
or
mov
mov
add
sub
rol
push
xchg
pop
sub
ds
mov
add
rcrb
leave
jmp
outsb
ret
stc
sbb
push
popf
mov
sub
popl
mov
cmp
sub
rolb
rolb
icebp
jle
adc
in
pop
adc
inc
and
xchg
and
add
fnstsw
mov
or
popf
js
push
mov
and
pop
es
shlb
pminub
roll
xchg
cmp
adc
mov
push
xchg
inc
ret
sbb
xor
push
subb
shrb
lock
inc
sub
pop
adc
popf
scas
lahf
jns
dec
ljmp
or
aaa
xor
insb
jmp
mov
notb
arpl
in
call
push
push
int
cld
xor
add
sbb
mov
test
add
hlt
mov
add
add
sub
movb
mov
mov
gs
test
and
push
iret
pushf
jge
inc
adc
ret
or
repnz
and
add
in
adc
mov
mov
enter
add
adc
mov
insl
arpl
push
and
xchg
arpl
adc
push
lcall
loop
jo
mov
out
cmp
rorl
fxch
add
sub
or
ljmp
popa
adc
and
popa
es
add
enter
ret
push
push
pop
add
sbb
adc
or
mov
mov
loop
test
sub
push
sarb
fwait
add
sbb
cmp
add
movsbl
xor
shl
call
add
inc
jmp
push
test
lods
in
lret
dec
loop
xor
filds
cmp
test
punpckhdq
ds
outsl
sub
jbe
sbb
or
sub
data16
adc
xchg
pop
push
ja
adc
daa
inc
sub
or
jle
clc
pop
push
cmp
push
sub
or
and
xchg
push
mov
cmp
add
add
es
jnp
inc
mov
outsb
push
rcrb
popa
cmp
es
sub
je
pop
mov
sub
cmp
nop
jo
mov
lock
mov
jno
loopne
push
and
out
sarb
shr
adc
mov
ficoml
mov
gs
hlt
adc
adc
subl
stc
cwtl
nop
push
or
fs
xacquire
test
xor
jbe
push
test
sbbb
jmp
dec
pop
ds
fists
pop
ret
loopne
sub
nop
adc
hlt
repnz
mov
repz
push
clc
xor
add
pop
add
cltd
js
pushf
mov
or
sahf
sbb
icebp
add
push
or
movsb
add
mov
cmp
adc
sbb
push
sbb
xchg
mov
lea
pop
push
push
inc
mov
inc
push
dec
dec
inc
fcoms
inc
and
call
sbb
or
inc
push
mov
ret
cmpb
rorb
pop
push
popa
loope
push
cmc
or
pop
insb
push
add
cli
pop
cwtl
mov
jno
insb
inc
mov
imul
les
and
fcom
push
or
call
or
sbb
stos
sbb
sbb
lods
popa
pusha
das
push
bnd
mov
lcall
or
mov
call
lds
inc
roll
out
or
lock
mov
cmp
dec
cmp
mov
add
mov
add
sub
sahf
rclb
push
dec
inc
xor
cmp
js
mov
push
cmp
call
rorb
adc
stc
or
rcll
xchg
js
ds
leave
dec
mov
fs
mov
divb
jle
adc
jmp
push
mov
push
pusha
cmp
repnz
sub
mov
clc
and
sub
pusha
pusha
mov
mov
mov
test
or
inc
jb
ds
shlb
jne
pop
add
dec
cmp
aam
xor
jnp
sahf
push
push
pop
inc
in
cmp
mov
inc
call
cmp
les
xchg
pushf
push
imul
add
xchg
dec
dec
into
sti
leave
push
jp
jb
or
loope
test
add
jns
xorb
lock
adc
mov
clc
pushf
or
js
mov
movsl
and
and
popf
sbb
sbb
rclb
xor
sub
sbb
sbb
ss
shr
and
push
sbb
add
test
call
push
lods
clc
sbb
sub
inc
out
hlt
pop
inc
icebp
sub
push
sbb
pop
push
push
ret
lret
adc
pusha
mov
add
sbb
and
lods
iret
mov
inc
das
pop
dec
shrl
sahf
sbb
insb
pop
sub
clc
cli
xchg
mov
adc
enter
mov
call
sbb
in
cld
into
mov
sub
mov
mov
js
out
adc
push
add
add
or
sbb
inc
adcb
xor
mov
jo
and
cmp
sbbl
inc
outsl
outsb
sbb
push
rorb
test
hlt
rolb
mov
fmull
stos
addb
push
ret
rcll
cmc
add
ret
mov
lahf
adc
sbbb
rolb
push
dec
jmp
into
push
adc
and
push
fsubl
ret
call
ret
aam
pop
aas
lret
pop
jno
jl
lahf
or
roll
in
adcb
je
cmp
lock
rorb
pop
cwtl
or
xor
lock
sbb
test
in
xor
push
or
das
mov
xor
ss
or
movsb
addb
inc
mov
call
int3
jb
xor
add
pop
xchg
inc
and
sbb
addl
xor
mov
sahf
xor
sbb
shlb
or
push
adcb
mov
fs
bound
or
and
test
and
int3
xchg
test
out
ret
push
pop
adc
add
leave
bound
adc
outsl
repnz
or
loope
sbb
insl
inc
cmpsb
add
adc
mov
cmp
mov
lea
out
or
add
mov
sub
rcrl
loopne
popw
nop
xchg
xchg
xchg
arpl
scas
push
push
add
adc
in
shr
lods
xor
sub
dec
imul
jb
sbb
std
xchg
push
adc
pop
add
fcmovnbe
sbb
add
jne
adc
mov
xor
sub
jmp
xor
push
inc
adc
fidivl
aad
and
ljmp
mov
jl
fisubrs
call
add
je
xchg
mov
mov
call
ds
pop
fwait
sbb
push
push
push
cmp
fisttpl
push
sub
test
mov
jo
sbb
inc
fs
daa
sub
add
popa
sbb
add
or
adc
push
je
sbb
rorb
daa
lret
pop
push
dec
or
jo
pop
lock
ljmp
lock
call
adc
sub
sbb
jmp
popf
xor
fs
mov
loopne
icebp
add
push
push
mov
jb
cmp
dec
mov
jb
mov
or
fisttpll
fwait
pushf
mov
jbe
jmp
push
push
nop
test
ret
rol
push
cmpsb
insb
pop
ja
sbb
stos
dec
jno
js
mov
fcoms
sub
std
ficoms
jle
dec
or
add
mov
leave
pushf
daa
and
sbb
jns
ja
jne
ret
push
inc
or
jb
test
jbe
dec
ja
push
popf
movaps
jl
dec
sub
push
loopne
fstpt
rolb
dec
outsb
jl
lret
inc
cmp
jb
dec
jge
out
xor
pop
jecxz
jo
sub
dec
sbb
repnz
mov
or
sub
popa
es
sub
adc
inc
jbe
negb
sub
xchg
pusha
popf
loope
push
pusha
cmpsl
xchg
jmp
enter
push
pop
sbb
mov
lods
ljmp
or
icebp
das
loope
pop
ret
mov
int3
or
push
push
mov
sbb
les
vmread
adc
push
push
data16
jmp
neg
jb
inc
adcl
arpl
mov
sub
mov
adc
lcall
icebp
fs
mov
aam
ss
or
insl
push
sbb
xor
mov
sbb
mov
cwtl
int3
or
popf
or
mov
andl
cmp
gs
ret
pop
sub
andb
xchg
test
bsf
das
aam
mov
orb
push
inc
or
test
mov
xor
sbb
or
test
jg
add
dec
popl
cmpsb
push
dec
jecxz
push
xor
add
push
adc
shlb
mov
lret
loopne
sbb
sarb
xor
in
and
xchg
push
ret
clc
nop
sbb
mov
stos
or
jge
or
push
dec
mov
add
mov
xchg
add
mov
inc
insl
jecxz
or
je
rolb
adc
lods
arpl
adc
pop
cmp
sbb
push
pop
rorb
enter
jge
test
push
cmp
cmpsb
notb
add
js
cmp
call
add
pop
xor
shlb
out
add
mov
unpcklps
or
adc
pop
loopne,pn
ljmp
vunpckhps
pop
inc
dec
loopne
aam
mov
sub
lods
or
andb
and
arpl
aas
adcb
fs
inc
add
sbb
call
push
andl
lret
lods
mov
int3
xor
jl
roll
dec
mov
adc
adc
xchg
adc
xor
sub
sbb
test
shlb
inc
arpl
lock
lcall
rclb
rorb
xadd
movsb
loopne,pt
mov
sbb
push
repz
cmp
cli
push
ljmp
and
lock
add
and
mov
push
or
dec
test
lcall
dec
pop
leave
aaa
arpl
fs
xor
scas
iret
inc
inc
sahf
add
addb
fst
js
daa
cltd
adc
lret
adcl
shll
cmp
mov
fucom
add
and
cmp
inc
icebp
icebp
push
es
inc
push
push
in
or
pop
mov
fmuls
mov
adc
and
mov
cmp
icebp
adc
sbbb
test
xor
push
adc
or
inc
sub
cmc
mov
or
lods
jnp
mov
dec
push
add
add
adcb
mov
jp
inc
rol
xchg
test
sub
jno
push
mov
pop
mov
dec
push
adc
lret
or
add
pop
cmp
pop
hlt
inc
cmp
loop
pop
xor
push
pop
push
mov
push
stos
or
adc
sbb
out
dec
or
pop
sbb
test
jo
lea
addr16
dec
sti
mov
jle
dec
xor
call
or
jecxz
push
call
dec
and
out
testb
mov
or
stc
xchg
hlt
icebp
les
cmp
xchg
or
sbb
into
lods
std
clc
and
mov
pushf
and
aaa
xor
mov
sbb
push
dec
inc
ret
andl
pusha
insl
mov
stos
xchg
clc
inc
lock
cmpsl
add
sub
bound
adc
adc
inc
daa
jmp
sub
or
xor
ret
sub
mov
mov
stos
lock
dec
mov
xchg
pop
sbb
ret
lea
sub
clc
rolb
or
mov
sarb
mov
sbb
push
repz
or
add
jo
push
mov
sbb
mov
adc
sbb
popf
test
xchg
repnz
les
inc
lahf
fcmovne
adc
add
cs
add
xor
xor
call
push
dec
pop
cwtl
dec
pop
sub
jp
dec
jl
sub
add
sub
sahf
in
rcrb
inc
inc
dec
sbb
mov
lods
outsl
mov
ljmp
mov
loopne
adc
sahf
jae
mov
mov
jo
ret
dec
cmp
dec
ret
xor
adc
pop
xchg
cmp
jle
xor
lcall
and
adc
inc
js
jo
orl
icebp
inc
push
cmc
jp
and
sarb
mov
xchg
mov
ljmp
in
lcall
xor
push
lret
sbb
cmp
inc
or
icebp
xorb
sub
and
lock
imul
inc
sbb
pop
mov
mov
sub
push
jne
pop
jo
add
jp
push
and
jp
scas
push
adc
jg
mov
inc
add
outsb
mov
aam
xchg
int
pusha
rcrb
stos
femms
sub
rclb
insb
jmp
loopne
out
adc
icebp
push
pop
or
gs
sbb
outsl
inc
aam
sbb
xor
xchg
lock
xor
xchg
sbb
mov
adc
push
push
cltd
jo
mov
pop
rolb
lock
xchg
addr16
sbb
add
add
test
jne
dec
dec
fldln2
inc
bound
ret
push
adc
movsl
enter
arpl
dec
fs
out
adc
push
outsl
pusha
mov
repnz
or
sbbb
sahf
or
xchg
sbb
bound
loop
pop
adc
clc
push
jb
xor
dec
or
sarl
enter
js
icebp
lock
subps
sub
mov
ljmp
push
inc
pop
and
push
add
or
imulb
out
push
call
xchg
or
jge
mov
ret
pop
and
pop
orl
les
scas
or
outsb
mov
aam
jo
pusha
or
into
jecxz
push
sahf
xchg
push
das
jb
pushf
add
add
xchg
scas
jae
fimull
add
dec
cmp
insl
mov
sbb
mov
jle
movb
sahf
leave
lret
xor
sbb
lea
ret
sub
adc
cmp
in
push
sub
repnz
jo
adc
lret
into
loop
xadd
cmp
adc
or
push
enter
add
mov
mov
pop
inc
daa
mov
mov
push
inc
or
xchg
adc
scas
outsb
add
adcb
and
sbb
sub
popa
mov
adcb
aam
push
and
stos
lods
xlat
lret
pop
mov
push
add
add
pop
xor
push
xorb
add
adc
fnstcw
jbe
call
inc
sub
popa
sbb
mov
lret
rcrb
add
and
pop
xchg
jno
ret
or
pop
stos
push
js
or
inc
and
aad
adc
mov
adc
les
dec
add
inc
sbbl
cmp
xchg
lods
adc
pop
nop
ret
test
xchg
xor
dec
sbb
xchg
push
je
rclb
pop
outsl
sub
cmp
ffreep
repz
mov
sub
jnp
adc
orb
rcll
repnz
rcrb
pusha
popa
or
push
fisttpl
push
adc
mov
addb
lods
scas
adc
xchg
jmp
rcrb
dec
repnz
sbb
push
mov
les
pop
and
xlat
call
loopne
fisubrl
sub
push
loop
push
pushf
add
sbb
in
mov
mov
xchg
ret
call
add
adc
popa
push
mov
pop
xor
lods
mov
call
loopne
inc
pop
mov
aam
add
sbb
mov
mov
aad
shrb
cld
out
adc
mov
inc
rclb
icebp
or
out
inc
jmp
or
mov
or
pop
ljmp
ds
mov
xor
sbb
inc
pushf
sbbb
outsb
dec
mov
adc
adc
push
nop
cwtl
scas
rolb
mov
inc
loop
mov
pop
ja
jo
or
flds
mov
push
sbb
xchg
ds
iret
push
mov
cmp
mov
xchg
mov
adc
sbb
jno
mov
sub
xchg
xor
outsl
add
and
rcrb
add
loopne
lock
lret
inc
fbstp
pop
and
or
addl
add
jb
test
adc
cmp
repnz
inc
or
add
sbb
test
pop
lods
xchg
pop
loopne
fsubr
out
out
sbb
repnz
cmp
dec
sub
push
xchg
sub
and
inc
and
or
mov
inc
pop
xchg
sub
scas
daa
cmpsl
and
mul
imul
mov
inc
out
add
loop
xor
add
test
sub
pop
mov
or
push
or
and
or
jl
sbb
out
mov
sbb
push
push
inc
mov
mov
into
fidivs
insb
inc
incb
in
adcb
mov
or
cmp
cltd
sbb
dec
add
ljmp
mov
push
mov
lods
push
lds
shrb
popf
and
rclb
push
or
or
inc
lret
jnp
in
push
mov
and
adc
or
cmp
jb
mov
addr16
addl
dec
add
sub
sub
hlt
test
xor
sbb
adc
mov
xchg
mov
xor
push
nop
scas
aaa
in
cs
adc
jb
loopne
push
xor
cmp
push
add
add
fbld
pop
scas
or
addr16
enter
sbb
inc
or
cmp
jl
pop
ret
cmc
sbb
sbb
in
sbb
adc
movsb
inc
or
dec
loopne
mov
enter
das
aam
or
test
and
mov
add
je
arpl
bound
or
dec
dec
sbb
es
or
xchg
pop
or
dec
dec
xor
punpckhdq
mov
jle
jb
xchg
add
push
js
push
imul
xchg
cld
pop
repz
or
dec
jb
cmp
mov
lret
and
mov
lods
pop
ljmp
ljmp
cli
sbb
sub
pop
sbb
pop
sbb
pop
sub
aad
push
xor
mov
xor
hlt
into
rorl
sbb
stos
movsl
sbb
andb
mov
inc
ljmp
aam
popa
xchg
xor
push
push
adc
lods
repnz
in
mov
push
adc
inc
xchg
and
push
ljmp
fdivrl
scas
pop
das
mov
pop
inc
loopne
xorl
test
adc
frstor
pmulhw
mov
clc
mov
mov
js
divb
mov
mov
or
jge
and
or
jo
push
sbb
lcall
stos
xor
cld
in
sub
or
pop
xchg
sbb
or
lods
cltd
rclb
sbb
mov
and
dec
fiadds
dec
sbb
pusha
nop
cmp
inc
mov
das
push
jo
pushf
and
cmpsl
pop
shlb
and
rcrb
or
nop
add
jecxz
popa
lock
xchg
out
sahf
adc
adc
clc
adc
mov
xchg
pushf
or
ret
mov
stos
sbb
sbb
push
leave
add
dec
test
add
pusha
inc
push
outsl
add
clc
cli
sub
imulb
push
jae
pop
xchg
sbb
xchg
xor
jge
and
rorl
sbb
pop
orl
pavgb
stos
test
leave
ret
push
push
or
stos
insb
mov
add
ljmp
icebp
pushf
cmpsl
and
sbb
inc
jmp
sbb
lahf
rorb
mov
fists
jecxz
or
fcom
lods
mov
aam
cld
push
push
incb
add
adc
xor
sarb
repnz
js
and
sub
xor
jecxz
enter
loopne
cmpsb
and
adc
faddl
sub
insl
pop
push
add
mov
push
test
into
add
mov
adc
and
push
fistl
or
psubsb
adc
movsl
push
pushf
cmp
shlb
mov
push
mov
test
add
push
or
enter
cmp
xchg
movsb
fidivl
in
push
xor
inc
pop
scas
inc
sub
clc
nop
mov
iret
mov
cmp
mov
dec
mov
jne
outsl
xchg
daa
rcll
sbb
fcompl
in
add
into
or
adc
dec
xlat
sbbb
mov
dec
inc
mov
inc
dec
pop
adc
stos
out
ja
mov
push
cmp
add
rol
add
mov
push
popa
and
pop
push
adc
jle
mov
dec
lret
inc
inc
sbb
cli
cli
ljmp
sub
loopne
cmpsb
lods
jo
repz
fndisi(8087
pop
add
lahf
ror
icebp
push
mov
enter
xchg
add
adc
test
xchg
or
sahf
mov
movb
dec
pushf
icebp
loopne
adc
pop
jo
jno
ret
shrl
adc
mov
pop
leave
push
jge
rolb
out
push
and
mov
negb
xchg
jb
dec
test
js
dec
add
xor
adc
addb
mov
fcomi
test
das
imul
dec
int3
push
scas
test
shll
jo
xor
or
pushf
add
mov
push
and
adc
inc
sbb
or
xchg
addr16
enter
loope
inc
insb
fwait
cmp
add
lods
or
lods
enter
test
xor
sbb
mov
int
add
xor
adc
sbb
fs
pushf
xchg
pop
das
daa
loopne
sbb
jno
pushf
cmpsb
push
sbb
rcrb
or
imul
adcb
movsb
mov
inc
dec
cmpl
push
xorb
cmp
xor
push
stc
xchg
scas
adc
push
add
scas
sbb
mov
and
test
sbb
adc
or
adc
addb
and
sub
gs
rclb
cwtl
xor
sbb
jmp
push
sbb
arpl
and
pop
loopne
push
dec
jl
sbb
ret
adc
outsb
sbb
xor
test
lret
faddl
movsb
jecxz
mov
inc
int3
mulb
addr16
jmp
out
test
and
nop
push
or
loopne
ds
add
cmpsl
iret
lret
leave
dec
inc
jp
push
imul
push
daa
xchg
stos
shlb
addr16
decb
es
or
jo
aas
movntps
push
mov
sbb
pop
mov
dec
imul
adc
rorl
faddl
push
mov
ret
fcmovnb
hlt
inc
pop
cmp
or
rorb
lret
xor
add
std
push
cwtl
inc
cmpsl
add
shrb
push
push
jae
mov
test
or
mov
dec
push
sbb
pop
ljmp
and
shl
or
jo
inc
push
enter
sbb
lock
les
movsl
mov
cld
pop
pop
movsb
mov
adc
inc
scas
pushw
push
mov
addr16
or
test
mov
or
sbb
cmp
and
roll
or
xchg
lods
xor
enter
mov
inc
adc
add
cwtl
push
mov
dec
sub
jmp
or
push
sub
or
sub
push
mov
cli
std
sbb
inc
cmpsl
pop
jo
gs
push
dec
pusha
sub
sbb
mov
sbb
jbe
mov
pop
das
add
xor
sbb
aad
xchg
mov
add
ficoml
and
mov
ret
or
push
mov
xor
add
movsb
or
push
add
inc
adc
fidivrl
or
bnd
push
add
cmp
push
jne
and
adc
imul
and
sbb
ret
mov
push
les
rorb
daa
mov
stos
pop
mov
insb
xor
jo
sbb
adc
adc
xchg
pop
bound
mov
movsl
aam
scas
sbb
adcb
cmp
out
rol
lret
cmp
bound
and
sahf
xor
mov
mov
jno
test
add
sbb
test
lods
or
xorl
movb
aad
pop
add
loopne
out
enter
push
pop
cmpsl
movsb
pop
add
inc
loop
sub
adc
mov
rorb
mov
adc
leave
push
inc
out
push
lock
loopne
jns
iret
xor
fucomp
mov
scas
dec
pop
rolb
lret
pop
sub
add
mov
push
outsl
loopne
into
mov
jmp
or
jge
and
orb
in
mov
fcoms
xlat
cwtl
mov
ret
rcrb
push
daa
cmp
xor
ss
loopne
mov
dec
ret
dec
add
getsec
test
pop
sbb
daa
pushf
stos
xchg
hlt
or
pop
lds
into
les
lock
add
add
adc
add
jbe
fs
add
int3
das
add
mov
sbb
dec
mov
out
test
mov
add
sbb
pop
inc
loop
inc
inc
popa
sub
sbb
call
push
add
push
xchg
cltd
jo
add
pop
inc
pop
add
mov
test
dec
lret
inc
inc
xor
jo
testl
adc
adcb
push
mov
or
add
sbb
sbb
daa
mov
push
dec
cmp
fcmovnb
mov
sbb
negl
xchg
pop
sbbl
shll
aad
dec
dec
call
rcll
aaa
int3
ret
repnz
jmp
xor
mov
rol
xor
into
nop
add
lcall
data16
cmp
inc
js
sub
lds
mov
sbb
pop
ds
dec
add
jb
arpl
into
jp
sub
add
out
adc
adc
popa
and
xor
xor
insl
out
pop
sbb
mov
pop
test
push
pop
mov
loopne
or
nop
outsb
pop
add
ret
cwtl
inc
mov
add
push
add
sub
cmp
out
lcall
aas
sbb
push
lock
pop
ss
testb
or
sbb
cmp
add
dec
add
test
rorb
sbb
mov
jb
not
adc
cmp
sbb
cli
jb
mov
xor
int
icebp
test
adc
or
jns
cld
or
adc
pop
jnp
add
and
jno
into
je
test
push
int3
sbb
sti
es
loop
inc
test
cmp
push
push
mov
inc
or
rolb
into
or
ss
ret
in
push
dec
lea
lock
rolb
in
inc
push
inc
in
mov
xor
push
dec
dec
ret
pop
ret
sbb
sbb
dec
or
cmp
jbe
cmp
push
inc
test
sub
sbb
push
sbb
xor
add
inc
mov
ljmp
clc
or
sbb
clc
je
sbb
mov
jnp
mov
je
adc
lods
pop
lret
into
inc
or
cmpsl
shlb
stos
sahf
adc
or
xchg
sbb
xchg
or
jae
xor
subb
test
jp
insb
xchg
mov
jp
in
dec
sbb
in
lret
scas
push
test
shrb
jae
je
sbb
sub
icebp
push
pop
das
daa
popa
and
daa
cmp
jle
repnz
bound
add
push
xchg
or
es
loopne
cmp
inc
fadd
sub
push
sbb
into
pusha
popa
rcrb
push
mov
dec
jp
rorb
jp
sbb
addb
test
das
sub
adc
insl
popf
pop
sbb
pop
mov
out
push
mov
mov
jl
pusha
hlt
xchg
ds
lock
incb
pop
cmp
adc
and
subb
ret
sbbl
in
shlb
add
or
add
rcrb
mov
rol
bswap
outsl
dec
mov
or
add
sbb
test
push
push
adc
je
bswap
mov
sbb
adc
or
add
mov
js
dec
loopne
das
movsb
cmp
rol
add
xor
add
testb
or
rcrb
pusha
lea
sbb
mov
inc
sbbb
sbb
lods
push
lret
xchg
push
leave
or
aad
mov
adc
lret
sub
pusha
in
imul
repnz
pop
xchg
pusha
add
sub
rcll
adc
adc
call
dec
cmp
inc
xchg
loope
pop
or
add
mov
dec
ret
cmpsl
dec
or
add
add
test
jne
or
add
dec
ds
xchg
fnstcw
sahf
or
lock
add
call
movsb
dec
xchg
fcmove
lahf
cli
adc
subl
rcrb
lock
xchg
add
push
clc
les
fcmovne
push
js
test
cs
sbb
iret
test
and
fldl
adc
sub
lock
sahf
pusha
dec
or
xor
add
aam
or
add
add
jmp
jne
mov
adc
enter
ds
daa
dec
nop
jmp
sub
ret
bnd
or
adc
loope
mov
or
test
or
cmp
imul
inc
sub
fdivr
jl
or
cmp
jne
shrl
mov
xchg
fldenv
jmp
dec
xchg
push
cmpb
les
push
adc
xchg
pop
xchg
and
cmp
adc
iret
mov
or
loop
or
js
add
inc
xor
add
jl
lahf
aad
xchg
push
dec
sub
jo
mov
sahf
adc
mov
test
xor
and
xchg
pushf
push
adc
sub
and
cmp
in
xchg
or
sbb
loopne
pop
or
inc
and
adc
and
xlat
pop
add
pushf
push
push
sub
push
add
rolb
pusha
cmp
or
or
jae
jl
push
shl
adc
pop
cwtl
ret
adc
loop
cmpps
out
jo
push
xor
mov
dec
cmpsl
scas
rcrl
sti
popf
and
enter
add
xor
mov
sub
push
push
adc
mov
fs
shl
adcb
pushf
mov
push
add
movl
mov
ljmp
or
sbb
arpl
push
sub
js
push
imul
mov
and
push
jl
enter
movsl
xor
add
add
clc
xor
sub
mov
mov
jp
inc
ret
add
test
shlb
imul
xor
sub
sub
gs
das
inc
and
test
mov
ret
add
into
mov
sti
cmp
inc
push
push
test
adc
sbb
add
xor
mov
jmp
jp
jp
je
add
push
addr16
sub
mov
or
xchg
lret
ret
cli
fsubrp
sbb
shlb
add
cld
lds
cmp
subl
cmp
dec
pop
cmp
ret
aam
pop
outsb
shrb
shlb
cmp
adc
mov
sbb
sub
jmp
dec
out
jb
lods
gs
push
shlb
or
out
rclb
test
mov
xchg
dec
xchg
cs
insb
pushf
adcb
mov
out
push
sarb
inc
loopne
adc
js
lds
popl
xor
lods
inc
push
dec
lea
sub
lret
or
shl
push
dec
mov
leave
jns
xchg
dec
dec
sub
lret
jge
push
daa
and
push
out
inc
shll
loope
sbb
cmp
mov
and
and
push
and
jg
jno
xchg
pop
push
jns
pushf
clc
adc
mov
dec
rcll
mov
adc
in
cld
adc
pop
sbb
lret
js
fstl
roll
adc
mov
or
int3
loope
jmp
and
add
adc
pop
fnstcw
pop
sub
xor
cwtl
outsb
ret
add
adc
mov
adc
addl
bound
and
into
push
jp
clc
inc
pop
addr16
push
adc
adc
fmull
adc
add
cmp
and
inc
mov
and
outsl
mov
xor
inc
add
xchg
data16
notb
adc
inc
xchg
mov
bound
xchg
or
es
mov
inc
arpl
adc
popl
add
call
inc
shlb
gs
ret
test
fadds
dec
into
rolb
sbb
add
mov
push
bound
int
dec
or
mov
and
cmp
test
push
push
sbb
iret
push
ja
test
test
ret
mov
mov
test
add
push
or
sub
sbb
push
add
ljmp
sub
add
les
pusha
pop
sbb
jmp
cwtl
ss
sbb
xchg
push
mov
sbb
les
loop
stos
in
sub
movl
shlb
stos
push
and
addb
arpl
adc
call
or
pusha
pusha
in
fsub
test
sub
xor
cs
pop
out
push
enter
test
mov
mov
mov
jp
or
shr
out
mov
rclb
inc
sub
push
out
nop
dec
or
adc
call
ret
jae
arpl
sbb
and
mov
es
push
add
xor
hlt
or
clc
sbb
adc
pop
mov
adc
push
xchg
xchg
in
mov
push
xor
push
cmp
or
sbb
adcl
xor
add
jg
dec
lahf
push
mov
gs
push
lret
sbb
push
shlb
ret
or
or
ret
cmpsl
je
rcrl
mov
cmpb
and
and
add
or
and
leave
or
push
sbb
xchg
push
push
sub
xlat
roll
mov
push
mov
into
enter
enter
push
scas
pop
push
lea
xor
lock
lods
test
cmp
pusha
or
loop
sbbl
push
es
add
in
pop
mov
or
mov
orb
dec
lret
das
rcrl
sub
pushf
sarb
mov
push
mov
jo
pop
lret
jno
and
pop
xchg
cmpsl
or
or
fs
sbb
pop
outsb
jl
out
outsb
add
adc
pop
call
xor
std
clc
inc
add
adc
fsubs
sbb
mov
push
adc
jne
dec
pop
xor
mov
fs
add
or
xlat
inc
daa
js
pop
imul
pop
cs
sbb
orb
sbb
sbb
xchg
mov
lcall
je,pn
cli
and
cmpl
add
or
pushf
adc
adc
jo
sbb
mov
xchg
cs
loop
xchg
jp
xor
and
mov
add
icebp
cmp
and
dec
test
xor
les
arpl
movsb
adc
pop
cmp
push
nop
adc
popf
jb
jns
pop
xchg
push
pusha
stc
or
out
fmuls
inc
and
adc
adc
cmp
outsl
arpl
cmp
testl
sub
fcmovnbe
cmp
push
int
data16
pusha
hlt
jge
xchg
pop
inc
leave
mov
insb
xchg
pusha
or
push
add
sub
mov
shll
arpl
inc
or
dec
and
addb
mov
add
andb
repnz
jae
je
inc
xchg
xchg
cmp
adc
subl
bnd
pminsw
sub
scas
mov
jg
rcll
add
mov
imul
gs
inc
call
mov
push
inc
xchg
jnp
ljmp
out
daa
shlb
in
xchg
repnz
cmp
cmp
cli
mov
loope
mov
cmpb
inc
pushf
push
call
jo
gs
sbb
into
sbb
push
mov
and
xchg
mov
push
loopnew
pop
movsb
call
or
mov
cli
movl
lock
mov
cmp
iret
sub
mov
test
add
add
inc
fsubl
xchg
pop
mov
ljmp
jp
or
adc
lret
or
popf
sbb
inc
cmp
dec
shll
orl
addl
push
pop
sbb
mov
or
lcall
add
or
mov
mov
pushf
pop
and
aaa
mov
lret
leave
or
push
mov
repz
lock
pop
cli
dec
lea
mov
and
add
xchg
adc
loopne
xchg
sar
scas
inc
jb
inc
cld
into
or
push
aaa
fadd
inc
daa
fidivrs
xor
or
push
lcall
cmpb
mov
dec
jl
jne
pop
lret
and
mov
ficompl
mov
outsb
sbb
out
je
sub
ret
out
mov
push
or
xchg
xchg
sbb
nop
adc
add
jmp
cmp
xadd
notl
push
pop
test
movsl
scas
and
data16
lock
cmp
mov
xchg
mov
cmp
xor
inc
mov
add
or
aaa
add
sbb
or
sub
mov
lock
pop
fimull
test
adc
inc
rorb
lahf
stc
sub
dec
sbb
add
popa
cwtl
lods
andl
push
push
pop
or
ret
mov
sbb
and
rclb
cld
sti
push
loopne
mov
add
or
in
dec
mov
pop
jmp
adcl
call
inc
fiaddl
adc
rcrl
cmp
jmp
adc
dec
lret
dec
hlt
test
add
push
pop
push
clc
mov
push
cmp
mov
incl
pop
jmp
mov
int
sahf
rol
dec
push
movsl
and
jp
adc
pop
loopne
dec
addr16
repnz
outsl
push
leave
mov
xor
sbb
outsl
dec
or
xor
inc
pusha
sbb
scas
add
adc
jne
or
scas
shl
cmp
mov
pushf
or
sahf
add
cli
add
and
loopne
jbe
sbb
adc
insl
sbb
pop
pop
push
add
add
sub
mov
and
and
test
and
mov
inc
adc
jo
cmp
test
xchg
fsts
lret
sahf
pop
cwtl
jl
test
mov
loope
call
jae
or
dec
sub
xor
pushf
xchg
xchg
inc
cmp
and
or
add
xorb
adc
repnz
sub
sub
push
lods
cli
lret
inc
push
push
mov
js
inc
fs
icebp
test
jno
and
dec
lods
xorb
mov
inc
sbb
add
and
add
imul
xor
and
lods
pop
ret
or
sbb
sti
shld
rclb
lods
ret
lods
incb
mov
add
mov
rol
adc
or
mov
mov
icebp
add
pop
push
ss
push
dec
sbb
inc
xor
cwtl
push
sbb
inc
push
loop
and
mov
jne
inc
mov
cmp
ljmp
or
cmp
add
add
jmp
push
push
push
xlat
cmpsb
push
mov
test
push
shl
shl
testb
add
movsb
push
sbb
rorb
call
add
fisubl
out
mov
in
shrb
add
sbb
mov
fsubs
cmp
das
je
clc
mov
mov
xor
jmp
adc
add
mov
aam
jo
xorb
xchg
bound
pop
pop
iret
push
leave
aam
add
sub
outsl
cmp
mov
xor
adc
and
inc
add
or
js
mov
jne
and
jns
adc
test
pop
or
sbb
sbb
pop
add
das
xor
push
shl
ret
jo
adc
add
cmp
int3
add
adc
ret
and
sbb
pushf
inc
das
or
sahf
pop
into
shl
and
mov
ds
or
pop
or
pusha
and
and
dec
xorl
je
adc
outsb
xorb
aam
rcrb
jg
xchg
fxch
and
not
push
push
pop
adc
add
mov
push
ficompl
push
aam
jo
add
movsb
jo
and
subb
jns
jno
cmp
out
sub
movsb
fnstenv
decb
pop
mov
mov
les
ljmp
mov
push
and
mov
inc
xchg
pop
push
out
sbb
jnp
mov
fdivl
ret
inc
push
adc
jnp
push
xor
ja
sbb
loope
mov
bound
mov
add
jmp
imul
cmp
ret
loope
cltd
adc
xchg
jo
shll
cwtl
pop
or
adc
adc
popw
inc
insb
push
cwtl
movsl
push
adc
outsl
subl
push
xor
aad
shlb
and
adc
icebp
into
lock
push
loop
or
fadd
add
nop
add
ret
repnz
sbbb
or
gs
cmp
push
push
movb
push
or
or
pushf
xor
sub
adc
jp
bound
push
ret
push
sub
lret
scas
xchg
outsb
test
lretw
push
bound
aam
sbb
subb
ror
bound
arpl
sub
push
push
pop
adc
xchg
push
adc
cli
insl
or
dec
rorb
ds
push
into
ret
mov
clc
jnp
adc
mov
cmp
jb
mov
sub
push
push
push
adc
inc
js
mov
xchg
pop
ret
mov
xchg
inc
insb
mov
mov
cwtl
cmp
std
pop
push
clc
xor
aaa
rorl
nop
xchg
mov
js
push
jge
aam
hlt
or
out
pop
mov
ljmp
out
pop
pop
jbe
ja
fcomps
inc
mov
adc
add
inc
cmp
daa
add
and
and
push
pusha
insl
mov
cmp
loop
dec
inc
pop
jns
lret
pop
sahf
pushl
arpl
dec
adc
xchg
mov
push
js
push
lret
jle
pop
cmp
pop
sbb
hlt
cmp
mov
or
or
dec
jbe
inc
stos
fstpt
call
inc
faddp
lahf
adcb
scas
sub
roll
pop
jl
pop
add
sbb
outsl
sbb
inc
ret
push
inc
adcb
add
nop
mov
sbb
bound
mov
pushf
pushf
dec
sbb
add
js
inc
mov
lret
xchg
pusha
lods
or
movsl
sbb
cmpsb
pop
fwait
mov
inc
or
pop
rol
push
pop
into
xorl
and
cld
pop
mov
sub
jge
test
enter
push
mov
sub
fcompl
push
sbbb
xchg
js
or
pop
popf
ret
adc
scas
ds
push
or
or
adc
pop
dec
sub
sbb
loop
rorb
rorb
dec
jbe
adcb
fcmovnb
in
enter
and
adcb
lock
or
insb
inc
sub
jmp
xchg
jg
or
sbb
add
into
stos
roll
orb
fimuls
or
test
adc
pop
push
loop
mov
repnz
xchg
repz
sub
cmpsl
adc
in
ret
test
push
xchg
shll
inc
mov
popa
cmp
pushf
xchg
xchg
adc
sub
push
jp
mov
popa
cmc
sbb
xchg
or
sbb
sbb
add
jnp
or
push
pusha
scas
adc
fistps
call
popa
test
mov
adc
jbe
movsb
push
push
les
sarb
andb
cmp
sbb
mov
loop
add
xchg
mov
push
scas
dec
popa
lods
cmpsb
sbb
mov
inc
jo
or
dec
jp
sahf
jb
fstpt
and
shll
xor
sbb
push
call
arpl
sahf
data16
sahf
inc
fadd
lret
xor
xor
rorl
data16
mov
cmp
mov
les
std
sbb
inc
mov
insl
pop
push
addl
pop
sub
daa
adc
aas
nop
mov
divb
jl
rcrl
std
push
push
jl,pn
mov
stc
ds
adc
adc
sbb
imul
mov
push
repnz
dec
movsl
dec
leave
mov
dec
orl
les
stos
bound
addb
shlb
inc
and
inc
scas
mov
shrb
lods
cltd
xor
pop
or
and
jbe
xchg
inc
jne
dec
mov
shl
mov
arpl
pop
push
int3
push
pusha
aam
xor
push
daa
push
movsl
dec
pop
push
ret
sbb
ss
fisubrl
xchg
mov
mov
cmpsl
sub
add
mov
ljmp
push
inc
add
jp
cmp
movsb
call
lods
shlb
pop
ret
push
out
push
push
inc
push
or
arpl
sub
jp
pusha
push
imul
cmp
mov
ret
mov
jle
or
aam
rorl
push
add
lock
xorl
dec
xchg
loop
jb
xchg
jne
lock
pop
dec
rolb
pop
push
cmp
push
fidivrs
pop
js
out
shll
xchg
aam
js
rcrb
mov
movsl
int3
add
icebp
fs
push
xchg
xchg
cli
adc
mov
push
repnz
mov
stc
in
and
nop
sub
mov
cmp
mov
inc
in
scas
push
icebp
mov
cwtl
or
sub
add
xor
mov
xor
xchg
push
push
inc
lea
jno
sub
pop
push
ret
fidivrs
sub
sbb
div
xor
adc
call
xchg
push
std
scas
leave
or
sub
test
subb
popfw
ds
inc
add
sub
inc
and
inc
add
sbb
ljmp
cs
pop
xchg
int3
inc
icebp
pop
cmp
cmp
and
mov
js
inc
jg
xchg
cmp
shl
outsb
or
pushw
jno
xor
inc
loope
pushf
or
cmc
pop
enter
sub
jmp
jbe
or
or
jg
and
xlat
push
pop
jmp
cmp
lahf
mov
add
enter
mov
lret
js
inc
jmp
sub
arpl
les
sbb
dec
xchg
fs
push
jo
adc
mov
sbb
enter
or
xchg
and
cmp
mov
addr16
ret
ds
push
push
pop
push
xor
dec
cmpsl
leave
push
jp
pushf
add
adc
pusha
inc
add
lahf
jne
cmc
and
lods
sbb
xor
movsbl
sbb
or
rsqrtps
js
mov
inc
xchg
push
jge
es
jecxz
pusha
das
inc
lea
sahf
xorl
addr16
test
xor
mov
pop
xchg
imul
push
inc
loopne
mov
jno
jecxz
test
fwait
imul
fidivl
div
shl
clc
pop
mov
popa
or
and
adc
mov
add
dec
push
out
and
and
inc
enter
sub
shlb
ljmp
jmp
lock
mov
test
sub
jb
sub
add
pusha
dec
and
lock
dec
pop
mov
mov
lods
mov
push
shl
push
shrb
jno
psraw
jl
pusha
movb
pop
jle
or
jbe
sbb
cmpsb
popf
sub
mov
dec
sarb
mov
dec
cmp
cmp
push
sarl
push
dec
inc
cmp
cwtl
jle
inc
sub
xchg
sub
cwtl
and
lock
push
xchg
pop
std
ret
xchg
sbb
orb
sub
movsl
shrl
or
loop
pusha
push
mov
inc
mov
ficomps
xchg
js
enter
or
jbe
nop
sub
sbb
or
adc
es
cld
sbb
jl,pn
js
sub
enter
rolb
nop
sbb
inc
rolb
mov
std
xchg
leave
add
loope
cmpsl
decb
add
dec
push
test
test
je
leave
adc
sub
add
in
cmp
add
test
sbb
or
dec
movsb
adc
or
sti
loopne
mov
xor
cmpsb
into
mov
jo
adc
mov
test
push
sub
and
cmpsl
cmp
inc
add
cmp
jae
push
dec
push
push
je
mov
rorb
adc
popf
js
arpl
loope
movsl
js
push
xlat
sbb
pop
pop
lods
mov
adc
add
mov
lcall
push
inc
inc
dec
test
ret
rorb
dec
push
sqrtps
insb
push
bound
loop
scas
dec
cmp
pop
lahf
rcr
das
or
and
inc
mov
xchg
pop
inc
push
add
sbb
jo
inc
add
pop
push
loop
push
repnz
sbb
out
stos
shlb
je
mov
dec
add
stc
ret
inc
loopne
icebp
push
ret
fstps
push
ret
lds
sub
xor
jge
adc
xorl
ret
inc
dec
call
jo
or
push
inc
push
add
or
test
popf
sbbb
call
dec
jbe
mov
sti
push
stos
adc
push
imul
mov
sub
ds
and
dec
cmpsl
movb
pop
dec
adc
arpl
adc
lock
mov
mov
aam
jno
xor
dec
notb
sbb
bts
pusha
jbe
lea
adc
sbb
fsts
sbb
orb
ljmp
test
xor
loopne
fadds
dec
mov
add
add
ficompl
jg
and
sub
sbb
push
adc
add
inc
ret
adc
or
xor
add
dec
sbb
loopne
jbe
push
jge
clc
push
loope
hlt
push
lea
lea
sbb
rolb
mov
push
scas
or
pop
fcomp
add
sbb
js
inc
std
mov
xor
cmp
leave
mov
insb
ret
dec
mov
push
cmp
lods
sbb
add
lahf
push
int
inc
cmpsl
addl
fwait
cltd
pop
inc
scas
add
sbb
pop
or
imul
or
xor
movsb
cltd
shr
lcall
jb
mov
rcll
cwtl
push
inc
xor
push
add
andb
insl
inc
add
ficoms
cmp
icebp
popa
xchg
mov
pop
std
adc
cmpb
xor
or
mov
adcl
xchg
xchg
add
sbb
test
xor
shll
ret
and
jo
xchg
adc
scas
push
call
test
push
pop
sbb
add
mov
call
lock
ret
das
lahf
loop
movsl
mov
mov
leave
lods
addr16
sbb
push
adc
add
fld
sub
inc
les
inc
nop
adc
jecxz
jp
push
es
rorl
rcrb
adc
cwtl
sub
xchg
lret
sahf
lret
das
sbb
lcall
pop
push
outsl
cmpsb
push
ljmp
inc
ret
mov
adc
fs
dec
push
or
dec
fdivrl
test
xorl
sub
sbb
hlt
xor
into
fs
sbb
pop
dec
cmp
les
icebp
dec
or
ret
lret
fnstenv
scas
xor
popf
push
lea
cmp
xor
lret
sbb
test
jnp
out
or
ficoml
shl
ljmp
loope
mov
sbb
repz
sub
push
jl
ja
xor
inc
pop
xchg
push
xor
pop
add
inc
outsb
leave
fwait
into
sbb
or
movsb
inc
cmp
or
add
shl
out
adc
mov
addr16
cmp
and
popf
xor
sub
inc
sub
dec
xor
rcr
pop
pushf
mov
cmpsb
loopne
cmp
sub
xor
jo
es
xor
je
aam
addl
jo
enter
in
and
imul
mov
and
dec
les
push
inc
outsl
enter
adc
add
sbb
xchg
daa
je
sbb
les
loope
hlt
dec
add
mov
add
pop
sub
in
xchg
nop
fdivl
addr16
mov
pop
lods
test
aad
nop
dec
pop
lcall
lea
idivl
and
pop
movsl
in
ds
or
adc
inc
inc
inc
push
or
mov
int
add
add
cltd
jo
movsl
test
mov
mov
or
mov
xor
pop
or
pusha
dec
pop
xor
ret
cmp
add
dec
inc
outsl
cmp
sub
mov
scas
hlt
pusha
rorl
xcrypt-ctr
cmpsl
sbb
or
icebp
mov
pop
mov
inc
sbb
repnz
rcr
enter
hlt
and
imulb
and
outsb
push
and
cmp
pop
push
jp
mov
and
ja
jne
int3
sub
add
mov
adc
mov
push
fistps
and
pop
mov
xchg
pop
adc
add
mov
test
xchg
or
jo
push
mov
aam
pop
push
mov
rcl
adcl
or
rclb
aam
or
cmc
push
popa
xchg
out
stos
pusha
into
mov
jb
dec
popf
or
repnz
andb
sbb
pop
dec
ss
in
and
push
loop
lea
pop
dec
or
in
xor
pop
jbe
add
test
inc
rcll
add
push
pop
xor
mov
jge
icebp
js
inc
lea
outsb
rolb
mov
or
add
mov
xor
dec
inc
push
cmp
adc
xor
or
push
inc
test
sbb
pop
inc
aaa
push
add
xchg
pop
mov
outsb
push
lret
cltd
mov
or
or
add
inc
xchg
sbb
add
inc
push
shl
xchg
pop
jg
sbb
mov
sbb
subb
fwait
sbb
sbb
inc
push
jbe
sub
sub
pop
das
bnd
or
sub
push
mov
cld
cmp
sahf
mov
subb
mov
and
lock
movb
or
cmp
filds
sbb
xor
add
pop
setge
mov
push
or
stos
add
or
pop
or
pop
fcmovb
sub
rdmsr
or
or
cli
js
mov
movsb
mov
push
dec
pop
inc
test
or
cmp
mov
outsl
jecxz
jns
xchg
dec
mov
push
add
cwtl
mov
add
mov
mov
dec
mov
jbe
jb
push
cs
out
in
adc
dec
mov
jle,pn
or
mov
or
out
and
iret
or
int
inc
jl
xchg
sub
xor
sahf
and
in
rorb
and
dec
jl
clc
and
mov
xchg
lcall
cmc
subb
cli
or
les
leave
int3
jne
popa
loope
jbe
cltd
xchg
xchg
test
and
adc
and
adcb
loope
sahf
iret
ss
jb
icebp
push
mov
ljmp
popa
add
push
jb
bound
rolb
or
call
add
jmp
loop
cmp
adc
arpl
and
push
inc
inc
rclb
sbb
fidivl
cmp
xor
movsb
out
sub
sbbl
mov
pop
pop
pop
test
jb
dec
xlat
push
adc
pushf
sub
cmp
adcl
das
dec
arpl
mov
shll
popa
in
adc
js
or
stos
push
mov
push
inc
iret
ret
inc
inc
cmp
lods
lock
add
adc
mov
cmc
adc
decb
aaa
fadd
test
arpl
fsubl
mov
xchg
and
gs
xor
ror
push
jno
pop
clc
sbb
push
push
pop
pushf
imul
sub
jb
sarl
xchg
cmp
fs
cmp
jo
out
sub
pusha
sbb
mov
out
std
or
repnz
push
inc
or
sub
test
test
iret
ds
push
mov
mov
sub
xchg
mov
pop
popf
sti
push
test
sbb
adc
addb
clc
and
imul
test
sbbb
loopne
pop
push
movsb
adc
xchg
fisubrs
ljmp
dec
cwtl
adc
in
mov
icebp
jmp
jo
loopne
lods
cs
cmp
mov
js
testl
and
dec
adc
adc
add
push
push
arpl
or
cmp
mov
sub
lods
cmc
mov
and
pop
sbb
sbb
decb
rclb
adc
lret
lcall
push
sbb
push
mov
lcall
sarb
sbb
jp
shlb
push
and
mov
push
jp
idivb
insb
cmp
icebp
mov
rcl
cmpsb
push
push
and
xor
xor
mov
loop
mov
pusha
mov
cli
sub
push
or
ljmp
test
mov
mov
pop
out
jb
clc
rclb
cmp
insb
or
rol
cltd
or
lret
push
cmp
inc
pop
cld
ljmp
rcl
rcrb
clc
insb
lock
and
inc
cli
or
or
cs
ljmp
sbb
loope
pusha
test
out
nop
fsubrs
lock
add
lret
cmp
sbb
push
test
push
pop
mov
je
pusha
es
or
sub
insb
lods
inc
pop
and
test
sbb
call
xchg
mov
ret
push
orb
push
sahf
aam
jp
dec
inc
or
or
aam
mov
sahf
xchg
jp
ss
ret
testb
or
pop
and
outsl
shll
push
and
sbb
test
jp
daa
dec
stos
ret
xchg
outsb
or
sub
mov
jo
and
dec
mov
popl
add
js
and
dec
mov
shlb
test
call
lcall
lock
add
pop
pop
sub
or
gs
mov
push
std
call
and
shrb
mov
rolb
and
pop
rorl
xor
push
sbb
jns
mov
inc
cwtl
dec
cwtl
sbb
mov
and
push
loop
jo
lret
pop
push
mov
mov
movb
dec
mov
mov
pop
or
js
mov
add
pop
push
push
xchg
pop
jbe
loopne
dec
in
int3
and
push
adc
add
inc
sub
or
push
hlt
es
mov
sub
xchg
adc
adc
lock
xor
shll
fisubl
out
push
jmp
mov
loopne
xor
in
add
mov
test
jbe
push
inc
lock
pop
aaa
jne
xorb
add
rclb
faddl
mov
cmp
push
pop
or
inc
insb
popf
or
sti
mov
and
jae
sbb
loope
popa
xchg
loopne
and
and
loopne
sahf
and
sub
lcall
push
cmpsb
add
push
mov
sbb
jbe
stos
out
inc
pusha
sbb
pop
mov
int
mov
call
mov
mov
mov
mov
push
adc
test
aam
jl
jno
call
cmpsb
mov
popa
pop
or
lods
add
cltd
and
daa
push
cmpsb
inc
fdivrs
lcall
or
je
rcl
xchg
shlb
ret
mov
sbb
lret
add
sti
mov
ret
and
cwtl
pop
les
push
cwtl
sbb
cmp
cmpb
jecxz
hlt
jbe
ds
xchg
aam
shrl
sub
jmp
out
pop
pop
pop
rol
mov
call
aas
pop
dec
dec
leave
mov
adc
mov
mov
push
inc
es
ds
test
sub
sbb
sub
adc
mov
and
shr
aam
lods
stos
xor
lods
roll
shrb
in
sbb
stos
popf
mov
add
mov
mov
pop
or
fbstp
inc
adc
push
rclb
out
cmp
xchg
pop
imul
and
inc
or
roll
push
dec
roll
mov
adc
or
andb
jmp
mov
mov
mov
inc
push
pop
inc
imul
icebp
jns
rcll
mov
or
mov
jle
mov
dec
sub
pop
pop
cltd
fidivl
loop
add
ret
daa
fwait
repz
or
shlb
inc
cwtl
mov
jp
dec
mov
sub
push
xchg
cmp
push
sbb
and
jp
lods
loopne
adc
xchg
outsl
icebp
les
sbb
push
fmull
push
cmp
or
push
orb
movmskps
sbb
push
jns
aad
adc
sub
stc
pop
push
cld
aas
ljmp
push
js
sbb
dec
sub
or
mov
adc
push
and
mov
push
push
lods
pop
cmpsl
or
add
and
adc
daa
dec
test
and
push
cld
test
pop
inc
arpl
insl
jne
xorl
outsl
jl
in
aaa
ret
out
ret
mov
jmp
scas
shrb
mov
and
sahf
and
adc
jle
push
xor
jae
shlb
movntq
in
add
mov
adc
addb
xchg
dec
loopne
ret
rcrb
pop
cmp
xchg
je
pop
testl
adc
leave
aam
lock
cmp
data16
pop
ret
inc
in
inc
mov
pusha
test
xlat
cmp
push
adc
mov
sar
outsb
sbb
aam
fs
or
fs
out
jle
int
test
dec
testb
jmp
into
inc
add
or
dec
xor
push
enter
pop
mov
add
jl
push
mov
mov
sbb
mov
loope
push
push
leave
test
add
or
rcr
add
pop
adc
jecxz
push
sahf
and
lea
and
cmp
xor
arpl
enter
adc
and
cli
into
dec
mov
xor
sub
pop
ljmp
sbb
mov
xor
jge
les
ffreep
add
sbb
loope
add
sbb
xchg
push
rolb
jno
mov
adc
fcoml
dec
and
dec
movsb
cmp
and
movsb
inc
add
mov
sub
das
xchg
push
movsl
popa
shlb
fsubl
sbb
pop
add
xorb
xchg
dec
push
pop
pop
das
stc
pop
inc
xlat
jecxz
ret
cmp
pushf
cmpsl
andb
sbb
popa
or
pop
shlb
sub
ljmp
sarb
add
cmp
sahf
push
inc
mov
mov
pop
ljmp
add
inc
xor
rorb
cmp
mov
ret
insl
mov
test
jnp
outsb
mov
bound
push
rclb
and
loopne
sub
fwait
add
rclb
clc
ss
push
add
pop
inc
pop
in
fistpl
cwtl
pop
hlt
sbb
dec
jge
lret
or
xchg
adc
dec
push
daa
adc
fadds
inc
xor
push
ltr
adc
sbb
cmp
xor
aas
clc
xchg
dec
mov
insb
sub
aam
aad
pop
xchg
pop
mov
mov
adc
ljmp
loop
inc
adc
das
jecxz
aas
fcomps
sbb
sahf
loopne
jo
pop
aas
and
or
cmp
add
pushf
or
mov
or
add
mov
sub
fdivs
add
pop
xchg
or
cmp
fidivs
xor
mov
mov
and
out
sub
push
mov
push
push
xchg
loope
je
filds
add
cmpsl
or
xlat
and
or
and
inc
pop
mov
dec
push
push
push
jbe
inc
adc
lret
addr16
addb
or
jb
sbb
add
inc
mov
sub
sbb
add
and
mov
pop
sbb
cmp
jo
push
jbe
pop
je
daa
or
add
and
inc
sbb
sub
sbb
add
xor
sbb
leave
sbb
jecxz
js
sbb
les
mov
push
mov
in
mov
cmp
mov
test
or
cwtl
push
js
fwait
ret
daa
add
adc
add
sub
and
jo
cmpsl
ficompl
lea
test
sahf
push
push
decb
pop
push
out
or
inc
ds
arpl
sbb
push
xchg
outsl
popa
mov
clc
adc
jp
mov
pusha
mov
cmp
adc
adc
sbb
add
push
push
or
dec
inc
imull
push
insb
cld
cld
xchg
jb
add
push
or
pop
push
ret
and
push
or
adc
ret
cmp
in
pusha
push
lret
outsb
sbb
mov
mov
xchg
repnz
jo
sbb
and
ret
bound
cmp
data16
mov
fildl
daa
arpl
adc
aam
rclb
hlt
dec
ret
add
popa
sbb
cmp
dec
dec
int3
lods
dec
cmpl
orl
push
lea
push
xor
lods
xchg
sbb
incb
and
pop
add
push
loopne
jne
inc
xor
add
adc
ret
dec
ljmp
push
in
adc
dec
es
mov
popf
inc
add
hlt
gs
arpl
pusha
push
nop
dec
mov
movsl
subb
test
cmp
push
add
adc
movsb
arpl
sbb
adc
mov
sub
popf
add
imulb
sahf
cmp
pop
jle
adc
pop
cmc
push
dec
cmp
pop
sub
inc
jmp
push
cmpsb
sbb
xor
dec
sbb
and
or
add
sbb
xor
inc
ja
in
jmp
in
and
inc
rolb
mov
dec
lods
cmpsl
and
repnz
add
or
xchg
cmp
add
and
arpl
mov
mov
pop
hlt
ret
inc
pop
fwait
je
jl
out
in
imul
fbstp
and
push
ja
sbb
xor
aad
or
sub
scas
movsb
inc
xchg
imul
sarl
stos
insl
jecxz
sbb
dec
jl
add
pusha
loop
push
rclb
daa
loope
addr16
add
xor
dec
rcrb
mov
or
push
and
mov
xchg
out
or
push
and
inc
call
jl
and
inc
test
and
push
pushf
or
jbe
pop
sbb
pop
popl
shll
inc
cmp
push
cli
adc
sub
jns
push
bound
into
test
add
add
or
add
jnp
leave
es
push
pop
fildl
xchg
sbb
das
addr16
add
cmp
pop
sbb
addr16
jb
mov
ljmp
jmp
add
lret
gs
xchg
mov
call
gs
adc
mov
popf
push
js
cwtl
nop
push
test
in
test
or
push
sbb
cmp
loope
add
push
push
mov
xor
or
xor
sbb
xor
andb
rol
cli
cld
lods
iret
js
mov
test
popa
jge
mov
ljmp
stc
enter
dec
sub
push
push
test
cli
ret
repz
or
dec
or
mov
subb
mov
out
pop
jb
or
test
push
cli
rorl
pop
push
ljmp
or
xchg
or
nop
lods
mov
sbbb
sub
lock
in
rol
cmp
inc
pop
into
inc
sbb
mov
les
xchg
or
xlat
and
mov
jg
and
inc
scas
push
and
rolb
or
and
mov
les
xor
or
or
shrb
int3
divb
or
add
add
sbb
push
lock
fcoms
mov
sbb
into
mov
insb
add
adc
add
or
xchg
lock
and
fstps
rorb
mov
cmp
inc
inc
movsb
or
inc
xchg
mov
rcl
mov
mov
inc
lock
es
lea
cmp
pop
adc
adc
adc
dec
jge
cmpsl
pop
cmc
test
cmp
xorb
out
dec
ficomps
or
inc
sbb
pop
xchg
cmc
xchg
or
shr
and
mov
add
or
xor
in
mov
push
pop
mov
pusha
or
loopne
sbb
or
adc
add
push
test
imulb
xchg
clc
mov
push
xlat
xor
imulb
dec
xor
push
add
and
cmp
sub
rcrl
leave
rorl
push
push
scas
test
adc
or
add
sbb
or
mov
adc
cmpsb
out
cmp
fimull
adc
jo
daa
and
inc
int3
adc
sbb
std
fisubrl
adc
or
test
xchg
sub
adc
decb
jno
shr
and
ljmp
mov
rclb
cmpsl
xor
and
aam
out
xor
sbb
icebp
rorb
sub
pop
cmp
mov
test
or
xchg
add
sbb
push
stc
add
adc
test
shrb
mov
add
test
push
jp
add
test
dec
push
inc
pop
cmp
inc
mov
sub
mov
jns
pop
add
enter
inc
or
dec
adc
or
int3
jp
arpl
stos
cld
mov
xor
mov
add
jno
xor
adc
cmp
mov
lock
push
ficompl
add
pop
mov
push
pop
dec
and
rol
push
shlb
mov
and
sbb
js
xchg
pop
cmp
pop
js
mov
dec
enter
adc
hlt
rcrb
pusha
dec
bound
pusha
sub
shll
pusha
and
push
cmp
add
stos
subb
lock
inc
test
sub
mov
call
cmp
push
jmp
xchg
pop
inc
add
loopne
js
cs
adc
sub
add
div
into
mov
or
or
mov
push
cli
fsubs
push
stc
inc
mov
aad
dec
mov
sub
hlt
imul
call
cltd
sbb
sbb
or
sahf
test
and
stos
xor
mov
arpl
js
nop
add
ret
push
jbe
xor
sbb
and
mov
xchg
lock
lcall
and
pop
filds
xor
nop
xor
pusha
rcll
popa
xor
stos
or
pop
cmp
ljmp
sub
cmp
pop
fs
cwtl
jno
mov
movsb
aam
fcom
sub
ljmp
or
bound
push
popf
lret
jge
int
mov
add
pop
xor
cwtl
and
lcall
fisubrl
xor
sub
cmp
movsl
and
dec
inc
fs
xlat
pop
test
sbb
mov
fstpl
sbbb
cs
push
inc
push
mov
mov
pusha
int
sbbl
in
mov
xchg
cmp
data16
insb
pushf
sub
scas
add
lock
xchg
sub
bound
ja
and
lock
mul
mov
and
loope
cmp
cmc
dec
cmpsl
jnp
jp
and
or
loopne
adc
fbstp
jge
ret
ficomps
mov
das
repz
or
mov
xchg
or
inc
cmp
cli
js
xor
out
adc
mov
and
pop
or
movsb
inc
shll
call
cwtl
mov
movb
push
dec
fadd
or
inc
jecxz,pn
jle
cmp
jo
xchg
adcl
test
fsubp
mov
adc
lods
inc
iret
sbb
push
stos
rclb
push
cmp
pop
add
mov
add
loope
in
push
lret
in
loopne
insb
sub
push
inc
xor
aam
shl
cmp
inc
inc
mov
and
and
rcrl
inc
fcom
xchg
aam
cmp
add
mov
push
sbb
sbb
or
or
cmp
push
sub
xor
mov
sbbl
add
shlb
jno
push
add
les
dec
cmp
xchg
and
pusha
adc
stc
mov
pop
leave
adc
imul
arpl
inc
in
lock
pop
or
inc
mov
nop
mov
lods
xchg
jne
jo
popf
int3
jae
dec
sbb
sub
jbe
or
mov
mov
ss
rcrb
adc
sbb
add
push
inc
add
mov
mov
or
or
adc
xor
addb
adc
mov
cmp
imul
adc
mov
pushf
add
inc
divb
mov
shll
aad
mov
sahf
into
lret
and
scas
andl
inc
jl
push
xchg
test
adc
rclb
test
dec
data16
inc
mov
and
pop
pusha
inc
test
adc
sbb
sub
mov
pop
pop
xlat
and
or
push
inc
jo
shrb
cmp
push
or
mov
or
xor
loope
jp
into
and
test
bound
lret
xor
mov
js
pushf
cmp
dec
mov
xchg
push
lret
cli
imul
add
test
fisttpl
mov
push
or
adc
shl
sub
sbb
imul
jl
add
mov
sbbl
shl
push
sub
daa
sahf
push
lret
push
test
bound
cli
or
out
jno
mov
adc
mov
xchg
ret
inc
xor
push
adc
sarl
mov
mov
call
push
sbb
fsubr
rclb
loop
sbb
lea
je
lea
and
lock
xor
outsb
mov
jo
gs
cmpsb
outsl
lcall
mov
test
ret
bound
orl
sbb
jp
ss
test
adc
add
sbb
sub
iret
clc
or
inc
jl
xor
adc
fwait
mov
call
adc
mov
adcb
in
push
shl
xor
add
push
and
shll
outsb
push
nop
pop
enter
pop
sub
cmp
into
xor
sub
xor
icebp
push
jl
bound
addb
mov
sbb
sahf
and
add
mov
add
bound
enter
dec
icebp
xchg
sub
inc
pop
jns
arpl
push
dec
lods
sbb
dec
pop
loop
jbe
mov
cli
mov
inc
les
sbb
fwait
mov
repz
pop
dec
and
rcrl
loopne
sbb
push
sbb
sbb
mov
pop
cwtl
fimuls
sub
dec
pop
push
mov
ds
mov
movsl
mov
leave
push
fmull
loopne
addl
mov
sub
mov
nop
cmp
out
xchg
sahf
or
and
sub
aaa
in
sbb
stos
jb
cltd
clc
test
mov
cwtl
sbb
aad
cli
xor
inc
mov
cmp
lret
clc
add
movsl
xchg
push
jno
jle
movsl
mov
lea
paddb
add
call
push
das
nop
mov
mov
mov
dec
jge
push
mov
sbb
sub
lods
je
insb
mov
xchg
inc
outsb
leave
push
ja
bndldx
and
and
int3
xor
test
adc
les
xlat
rolb
pushf
pop
imul
pop
adc
push
inc
mov
adc
pop
or
pop
and
inc
jl
sbb
data16
in
push
mov
out
add
sbb
jbe
rorb
daa
call
sub
inc
out
andb
add
fildl
dec
lahf
cmp
mov
pop
xchg
cmc
aas
xchg
push
adc
push
aaa
movsl
adc
les
cmpsb
cld
in
adcl
dec
ret
aaa
mov
pusha
push
adc
ret
add
js
and
ss
lods
pop
shll
cmp
lcall
dec
lods
add
jno
push
mov
stos
push
add
test
and
sbb
xor
jo
jnp
jno
data16
xchg
lods
rcrl
sbb
lcall
xor
push
xchg
lea
cmp
popf
cmp
or
sbb
leave
push
or
rolb
add
fwait
ret
inc
sub
clc
sub
push
imul
mov
js
movsl
xchg
inc
inc
in
ficomps
jns
movsl
insb
mov
mov
xchg
add
jecxz
ret
xor
hlt
cs
test
and
inc
jmp
xchg
clc
and
mov
call
cld
cltd
test
inc
push
rolb
pushf
int3
outsb
add
popf
push
or
adc
add
test
inc
call
faddl
sarl
xchg
ret
cli
sbb
imul
aad
and
or
ljmp
in
xchg
or
out
adc
sub
les
inc
lea
push
inc
sub
mov
sti
push
push
testl
inc
mov
jl
cmp
cmp
fnstcw
hlt
subl
rorb
add
aad
push
test
mov
mov
cmp
mov
lcall
pop
hlt
in
sub
push
adc
cmp
cmp
in
push
add
jnp
lods
idiv
add
pop
cmp
push
scas
addr16
movsb
inc
and
rcrb
outsl
jb
pop
mov
or
pop
ja
sbb
pop
sbb
pop
xchg
hlt
add
sbb
enter
jnp
mov
pop
js
bound
test
enter
fcompl
adc
or
sbb
mov
xor
int3
jp
cli
mov
loop
out
hlt
rcrb
sbb
rcll
fcoms
repnz
add
ljmp
movsb
addb
in
sbb
inc
mov
or
sbb
and
or
fs
adc
add
lock
push
call
or
sbbl
bound
cmp
into
popa
arpl
lret
inc
mov
sbb
in
sar
shl
ret
shlb
dec
leave
adcb
push
repnz
and
cmp
push
pop
and
cmp
mov
jno
sbb
and
mov
lods
or
icebp
mov
xor
imul
xchg
call
push
adc
cmp
sbb
push
movsl
fstpt
popa
xchg
xchg
xchg
scas
mov
mov
test
adc
cmp
mov
push
pop
xchg
dec
pusha
shlb
xchg
sbb
pop
xchg
sbb
pop
pop
movsb
or
addb
push
xor
negb
sub
movsb
adc
pop
push
xchg
inc
rolb
mov
jne
and
je
pop
or
xchg
nop
xchg
std
lahf
push
pop
or
lods
jmp
cwtl
lods
sbb
sub
sbb
dec
push
jecxz
xorb
sbb
adc
je
pop
aaa
push
int3
pop
mull
push
lea
xchg
xor
and
mov
and
sub
lret
add
mov
call
mov
test
test
dec
xor
add
sbb
xor
pusha
mov
loopne
fidivs
orb
xorb
andb
mov
sub
sub
jo
add
shl
rorl
pop
fsubrs
rclb
xchg
or
lret
js
call
push
push
fadds
cs
aam
push
out
fs
cs
and
dec
sbb
jp
lock
jo
adc
add
sbb
shrl
and
ret
movsb
mov
aas
adc
fdivp
daa
dec
mov
and
xor
cs
test
inc
out
mov
add
pop
leave
fisttpll
mov
outsb
push
lock
sub
mov
mov
clc
add
push
push
insb
pop
cmp
outsl
stc
sbb
mov
jmp
xor
insb
cmp
mov
pop
cmp
and
dec
mov
aam
imul
mov
lret
pusha
insb
fstps
push
xor
in
jecxz
mov
mov
cltd
mov
mov
rcrb
test
outsl
loopne
data16
mov
daa
stc
pushf
xor
test
mov
add
mov
mov
xor
jecxz
lock
push
sbb
cs
jo
push
jno
pop
push
pop
push
jl
inc
cmc
lret
sbb
mov
and
pop
addb
and
pusha
adc
mov
or
push
add
sub
jne
adc
xor
mov
sub
xchg
mov
mov
cmp
push
rolb
mov
or
gs
mov
cmp
mov
mov
mov
test
add
arpl
repnz
pop
jecxz
shrl
mov
xor
push
sti
enter
cltd
nop
aad
sub
mov
sbb
add
pop
or
jno
clc
je
ret
iret
data16
xchg
pop
push
insl
cmp
or
rorb
lea
popa
andl
mov
inc
mov
and
movsl
ret
mov
and
inc
push
call
and
adc
push
popf
add
es
sbb
lcall
movsb
add
or
add
enter
xor
or
call
inc
mov
mov
push
or
cli
inc
cmp
push
aad
xor
dec
test
jp
pop
push
stos
sbb
icebp
and
test
mov
adc
pushf
add
sbb
add
xchg
inc
les
jnp
push
pop
cmp
jo
pop
jmp
mov
sub
clc
loope
fiaddl
shrb
dec
scas
out
testb
das
sub
sbb
and
test
xor
mov
xchg
in
testb
push
push
dec
pop
and
mov
push
push
ljmp
addr16
sub
pop
add
test
out
out
enter
das
movsb
or
xchg
mov
pusha
dec
pop
xor
pusha
add
mov
pop
mov
xor
lea
pushf
mov
in
mov
imul
lret
incl
mov
xor
bound
loop
cmp
push
sbb
or
push
mov
dec
sbb
mov
inc
lods
mov
adc
add
inc
outsb
add
ret
sbb
out
movsb
sbb
and
jo
add
aam
adc
loopw
sbb
sbb
addl
or
cmp
ret
and
sbb
enter
dec
popa
outsb
cmp
adc
enter
xor
fcmovb
xchg
cmp
or
dec
add
data16
cmp
or
data16
movsb
pop
fcomps
cmp
lods
inc
call
add
add
ja
cltd
ret
repnz
fs
dec
sarl
ror
sub
and
or
push
xchg
and
movsb
movb
test
adc
pop
cmp
add
adc
push
mov
xor
enter
push
or
inc
add
cli
xchg
jg
mov
sub
stc
lds
mov
popa
jnp
push
adc
mov
sbb
fmul
cli
rol
shlb
sti
andb
addr16
sbb
add
jo
xchg
pop
inc
pop
loope
mov
mov
repnz
jo
lods
addr16
pop
imul
jmp
ss
pop
inc
mov
pop
mov
and
loope
pusha
and
pop
sbb
enter
add
mov
or
push
cmp
repnz
popw
pop
clc
or
shrb
shll
test
mov
or
push
lea
cmp
rolb
inc
loope
lods
sar
sti
mov
orb
call
lock
push
cwtl
sbbb
ds
mov
js,pt
stc
sbb
mov
test
push
daa
or
idivb
aas
mov
xchg
leave
testb
sbb
lods
add
add
testb
fsub
inc
mov
stos
in
pop
xor
hlt
adc
jecxz
push
mov
mov
cmp
add
lea
int3
das
mov
inc
out
call
or
bt
gs
daa
xor
inc
int
sbb
adc
lods
add
mov
or
pusha
lock
jl
add
dec
cmpsl
xor
data16
ljmp
imul
loop
jp
dec
icebp
jb
rorl
aaa
fisubrs
sbb
dec
cmp
inc
stos
rorl
inc
lcall
jge
lock
or
sub
aaa
mov
add
rcrl
ljmp
les
sbb
jbe
push
push
mov
iret
mov
mov
cmpsl
xor
xchg
mov
mov
push
cmp
pop
xor
mov
push
clc
or
std
xlat
dec
mov
mov
pop
jg
das
add
add
sub
adc
dec
into
shrb
in
pop
or
movsl
mov
push
adc
cmp
push
sbb
test
xchg
sbb
adc
movhps
jb
popa
xchg
push
cmp
stos
add
sbbb
adc
pop
les
inc
push
cmp
add
lds
or
mov
jno
enter
sar
push
repnz
sub
mov
lret
xor
repnz
lods
adc
pop
pop
lret
inc
pop
or
and
jecxz
push
das
xchg
and
xor
push
js
shlb
or
sbb
mov
lock
mov
iret
cld
ja
adc
xchg
add
pop
or
push
jecxz
cmp
xchg
std
sahf
mov
add
pop
vpshad
pop
cmp
add
pusha
pop
or
cwtl
repnz
push
sbb
cmp
mov
xchg
out
je
sbb
pop
dec
dec
sbb
cmp
push
scas
push
outsb
pop
push
push
pop
adc
pop
cli
es
push
add
outsl
sub
pop
testb
adc
pop
jo
and
ret
jmp
std
mov
cmc
inc
ret
adc
nop
or
insb
sbb
xchg
mov
push
xor
xchg
adc
pop
adc
sub
push
mov
ljmp
mov
and
loopne
mov
movb
xor
call
mov
leave
mov
lods
xchg
mov
scas
adc
imul
push
cmp
or
add
pop
and
jb
call
outsb
bnd
das
lret
sub
jno
clc
jmp
pop
dec
imul
mov
mov
in
add
mov
sbb
pop
cwtl
or
movsb
mov
add
test
leave
pusha
mov
jp
int3
or
loopne
lods
pusha
adc
sbb
cld
lods
decb
popa
or
lret
or
cmp
push
push
adc
inc
idivb
cbtw
or
loope
pop
xchg
rcrb
sbb
push
push
daa
mov
push
inc
pop
inc
cltd
jne
adcb
inc
push
imul
pop
mov
pop
xor
leave
neg
pop
adc
stos
add
mov
into
ss
cmpsl
push
sbb
bndstx
adc
inc
sub
inc
mov
insl
or
iret
lret
clc
add
cli
or
iret
enter
sbb
jmp
mulb
sbb
push
and
in
adc
sbb
roll
ret
icebp
pop
jno
push
movsb
ds
inc
movsl
aad
sbb
pop
loop
outsb
shl
loope
dec
test
mov
js
out
mov
into
cwtl
or
pop
push
cmp
inc
adc
add
fmul
xchg
or
invd
or
sbb
movsb
push
add
test
mov
and
addl
cmpsb
push
int3
add
jmp
ljmp
adc
dec
daa
js
lret
mov
ret
mov
cmp
pop
cmp
insb
xchg
pop
ds
rolb
lea
int3
inc
cli
xchg
and
and
mov
and
and
xchg
pushf
jge
adc
inc
rorb
or
je
lods
and
pop
daa
arpl
jp
xor
les
imul
or
mov
js
lcall
adc
dec
daa
test
aam
jbe
push
ret
lahf
orb
lret
push
es
xchg
add
in
adc
pop
rolb
aam
outsb
lcall
xor
add
sbb
bound
inc
dec
xchg
mov
lret
cmpsl
andl
or
mov
adc
inc
sahf
ret
lods
or
fldt
scas
aam
adcb
push
lret
inc
inc
mov
nop
sub
sub
push
sbb
xorl
int
sbbb
inc
inc
ret
dec
push
fisttpll
push
cmp
sahf
inc
outsb
lock
push
shll
xchg
lods
mov
xor
sub
outsl
inc
andb
mov
jp
push
loop
movlps
xor
push
push
push
mov
xchg
mov
leave
pop
mov
leave
mov
or
add
lock
fnstsw
and
sub
sbb
xchg
xchg
dec
loopne
nop
cmp
in
pusha
jne
icebp
stc
mov
dec
mov
nop
aaa
inc
les
mov
lret
dec
lcall
mov
fs
sub
repnz
jp
mov
inc
clc
adc
or
arpl
pop
insb
sbb
dec
lds
popf
add
add
xor
xchg
adc
dec
pminsw
push
inc
andl
add
sbb
stos
adc
cmpl
cmp
data16
sbb
xorb
sti
xor
jo
mov
adc
sbb
xchg
pop
bnd
push
push
sub
adc
inc
popf
push
or
mov
inc
xchg
scas
out
pop
orb
icebp
push
loopne
shl
push
or
test
add
or
lret
adc
sbb
sbb
mov
or
in
cmpsl
sar
or
ret
in
xchg
js
push
pop
dec
push
sub
icebp
mov
jg
xchg
sbb
lods
icebp
jmp
push
lahf
jo
rorl
or
or
faddp
push
popf
lds
dec
pop
pop
mov
fucomp
dec
cmp
movsb
mov
push
and
movsl
mov
inc
or
imul
mov
stos
add
pusha
or
mov
add
xchg
push
fsubrs
hlt
jo
sbb
or
xor
sarb
inc
stos
or
inc
push
xchg
rorl
out
push
movsl
les
addb
es
shlb
ret
pop
xchg
inc
pop
xor
add
cld
test
dec
push
xchg
fwait
test
mov
add
mov
sbb
push
push
xchg
mov
scas
cltd
adc
adc
int3
xchg
push
sbb
push
mov
sbb
arpl
add
loopw
js
lods
adc
cmp
aaa
push
aaa
xor
adc
push
xor
arpl
nop
sbb
rolb
xchg
pop
and
in
pop
add
insl
push
add
or
xchg
cmc
and
push
add
add
cmpsl
test
adc
popa
sub
or
xor
aaa
inc
bndldx
lahf
and
imulb
add
mov
outsl
or
mov
inc
push
faddl
dec
pop
pop
sbb
pushf
mov
rorb
repnz
add
mov
imul
data16
xchg
xor
rcr
scas
pusha
js
enter
enter
xlat
andb
cmp
bound
fimuls
inc
es
and
sub
jl
cmp
aaa
lea
scas
sub
push
or
sub
adc
testb
stos
xchg
daa
xor
scas
xor
pushf
aam
shr
mov
mov
int3
mov
mov
test
sub
dec
pop
sbb
arpl
das
or
sub
lret
adc
lret
jbe
add
loopne
dec
pop
loopne
pop
adc
clc
xorb
xchg
xor
inc
xchg
jmp
fisubrs
sub
ljmp
lods
rcl
lcall
add
xlat
addb
push
and
aad
cmp
scas
inc
enter
xor
adc
pop
leave
cmc
jnp
pop
cmp
cmp
movaps
fwait
or
imul
or
rolb
es
nop
cs
adc
push
mov
sti
add
jno
jno
inc
mov
icebp
gs
test
ljmp
mov
sbb
adc
es
ljmp
movsl
test
and
xchg
and
test
xchg
or
leave
or
aad
out
test
push
sbb
jo
in
sbb
mov
andb
push
dec
adc
cmp
push
adc
cmp
stos
xchg
adc
rclb
aad
into
fwait
mov
pushf
sti
ret
adc
or
xchg
pusha
les
pop
lock
test
pop
mov
sub
loopne
orl
jne
leave
int3
adc
nop
out
push
mov
scas
jg
movaps
fs
sbb
inc
loope
adc
hlt
cmpl
or
mov
adc
repnz
dec
inc
xchg
lock
adcl
ljmp
sahf
xor
test
pop
loop
loope
add
inc
or
dec
add
lock
xchg
loope
jmp
jns
rclb
or
adc
mov
loope
and
pop
sbb
pop
stc
or
mov
rcr
ret
enter
xchg
ret
xchg
gs
setge
pusha
subl
mov
add
xchg
outsl
inc
add
insb
xor
add
clc
into
add
inc
push
stc
adc
das
test
inc
mov
inc
movq
pop
push
out
xchg
pop
and
dec
sub
mov
adc
cli
movb
push
and
out
test
lahf
movb
cmp
dec
rcrb
fisubs
jo
aaa
jp
outsb
sub
add
adc
aas
nop
xchg
xchg
mov
dec
arpl
push
lods
and
cs
cmc
adc
subb
je
add
gs
arpl
mov
push
lock
jle
xchg
sbb
popa
dec
call
xchg
dec
test
mov
cmpsb
adc
call
popf
sub
inc
sub
mov
cmp
pop
jae
lock
mov
cld
and
xor
add
addl
sbb
push
inc
dec
adc
cmp
push
scas
shlb
sbbl
xchg
jo
sbb
rcrb
inc
mov
pusha
in
bound
xchg
sub
into
push
xchg
and
js
stc
xor
jb
pusha
or
cmp
pop
rcrb
into
dec
mov
popa
inc
dec
pushf
or
push
adc
adc
mov
add
inc
ret
enter
xchg
and
cmp
roll
inc
mov
cmp
cmc
dec
cmp
add
sbb
sbb
or
testb
jno
test
sbb
jbe
ljmp
or
ret
sbb
xchg
sbb
jno
out
mov
cmp
int3
ret
lods
mov
push
pop
sub
push
xchg
lret
xor
loop
lret
mov
or
call
daa
mov
or
movsb
xor
pop
cmpb
push
ret
int
insl
int3
and
js
xchg
adc
jl,pt
or
rcrl
inc
popa
lgs
mov
sbb
adc
mov
hlt
leave
cmc
insl
sbb
adc
add
fiaddl
xchg
sysret
ja
mov
or
cmpsb
repnz
sub
mov
sbb
ret
pop
and
test
pop
or
xchg
outsb
lock
sbb
pusha
rcrl
add
dec
xor
pop
shld
pop
rorb
stos
add
inc
add
sbb
add
je
sub
mov
mov
xor
push
jl
push
mov
xchg
mov
mov
pop
push
and
loope
scas
test
jecxz
cltd
out
clc
aas
sub
js
dec
rcrb
or
adc
or
inc
add
js
lods
mov
xchg
pushf
and
mov
test
inc
inc
push
iret
sbb
movsl
in
shl
push
mov
jbe
loopne
jb
call
cmp
sbb
jmp
and
popa
aam
or
add
adc
fwait
iret
jge
sbb
arpl
push
mov
inc
dec
mov
jnp
pop
js
test
add
or
scas
and
cwtl
mov
or
sub
stos
or
out
ret
loope
inc
stos
movsb
rolb
mov
scas
and
ret
adc
stc
mov
std
sub
add
orb
movsl
es
pop
adc
inc
stos
lret
icebp
or
cwtl
push
ja
dec
and
push
pop
sbb
ret
mov
pop
shll
hlt
add
xchg
or
pusha
mov
orb
jecxz
call
adc
sbb
divb
fs
mov
popf
and
xchg
aas
or
xor
rol
inc
push
xor
or
fcmovnb
mov
ja
rcrl
push
sub
stos
adc
insb
stos
pop
enter
cmp
pop
jge
andl
xlat
addb
inc
outsl
inc
mov
adc
mov
stos
and
pop
and
outsb
and
nop
xchg
xchg
add
mov
rorb
outsb
or
inc
sub
mov
mov
mov
add
mov
insb
mov
push
and
sbbl
pop
jp
stos
scas
or
jmp
add
loop
rcrb
into
cs
sbb
mov
pop
dec
ret
adc
sbb
js
push
ljmp
cmp
or
ja
add
stos
push
pop
mov
xor
or
mov
aaa
popf
in
jge
andl
push
or
and
test
mov
loop
push
ror
cli
into
sbb
loop
and
mov
push
in
adc
xor
pusha
cmpsl
xor
inc
rcl
inc
cmp
mov
clc
rcrb
fstl
movsb
push
mov
push
mov
rorl
gs
adc
dec
cmp
fwait
loopne
push
test
bound
inc
arpl
pushf
jmp
nop
fstps
sbb
sbb
mov
or
push
sbb
hlt
sti
sbb
pusha
adc
xchg
xlat
leave
xor
dec
bound
inc
aam
jp
mov
add
call
mov
icebp
push
or
push
outsb
ret
das
fadds
xchg
ret
dec
sbb
push
cli
add
mov
push
les
pop
fdivs
xor
xor
dec
cli
mov
adc
jmp
adc
push
mov
pop
les
or
rcrb
and
mov
aam
adc
leave
push
adc
cmc
or
rol
cmp
sbb
and
pop
push
adc
jo
adc
pusha
or
inc
sbb
rcl
xor
jmp
data16
daa
dec
and
xchg
dec
or
addb
mov
lea
dec
dec
mov
cwtl
pop
jle
inc
and
cltd
sbbb
js
pushf
lock
push
repnz
or
clc
adc
xchg
fwait
aas
mov
int3
dec
adc
and
sbb
les
add
mov
xor
rcrb
push
lods
scas
cwtl
push
and
rorl
jnp
enter
push
dec
jl
loopne
inc
pop
das
adc
and
rcrl
jmp
add
inc
test
push
jle
sub
outsl
adc
lcall
mov
and
jb
add
ror
push
rorl
jle
or
xor
xlat
mov
jns
enter
pop
subb
rorl
pop
jns
cmp
out
inc
push
imul
push
arpl
jb
push
mov
scas
sub
and
adc
dec
daa
lea
imul
push
sub
fisttpll
mov
dec
pop
jne
fmull
sub
bound
dec
incb
in
push
xor
or
std
js
inc
add
or
loope
mov
mov
push
xor
sbb
je
dec
into
aad
sbb
cmp
fadds
pop
push
dec
mov
lea
sbb
push
or
xchg
adc
jp
clc
jnp
mov
or
insb
sbb
imul
cmp
shrb
adc
imul
ret
adc
jl
mov
clc
cmc
leave
ret
and
inc
sub
lock
mov
jb
cwtl
jmp
ds
leave
mov
loopne
or
rcl
add
lcall
cwtl
loopne
rcrb
jmp
sti
and
in
pusha
xchg
push
adc
adc
dec
or
out
loopne
bound
jb
push
aaa
cmovg
xchg
cltd
iret
adc
add
mov
or
lret
decb
sub
adc
js
mov
jno
lret
outsb
add
ljmp
add
push
mov
movaps
clc
dec
fsubr
or
sbb
imul
out
lods
xor
dec
call
fcoml
test
shlb
add
mov
push
adc
aam
test
pop
jb
mov
xor
cmp
sub
sbb
daa
dec
xlat
adc
sub
or
pop
push
shll
insb
imul
movsb
add
popa
cmp
cli
into
add
ljmp
ret
jecxz
pop
cs
or
or
sub
std
rcrb
xor
dec
les
cmp
or
stc
testb
mov
ret
lahf
pushf
dec
sbb
mov
or
int
mov
pop
icebp
pop
adc
sub
adcl
mov
adc
mov
fcomps
adc
xchg
adcb
xchg
lock
mov
adc
or
inc
jle
adc
cmp
cmp
add
les
pusha
shrb
ficoms
scas
mov
jo
mov
test
adc
add
xor
sub
inc
fmull
lock
xor
push
call
cmpsb
scas
sbb
sbb
cmpl
adc
cmp
and
movsl
gs
arpl
dec
sub
icebp
add
xchg
mov
adc
dec
movsb
loop
xor
or
cmp
test
pushf
mov
loopne
pop
fistpl
cmp
xor
sbbl
push
cmp
or
scas
add
sti
sbb
dec
mov
icebp
or
cmp
xor
fdivr
jp
test
push
gs
xchg
push
outsb
jns
lods
inc
pop
imul
mov
div
jp
pop
inc
adc
mov
adc
ljmp
and
push
popl
bound
aas
mov
aad
mov
gs
and
lret
add
jp
sarb
cmp
sub
xor
cmp
adc
outsb
pop
jg
test
rol
jle
or
cmp
loopne
add
push
push
data16
inc
add
xor
xchg
pop
sbb
mov
gs
pop
in
sbb
xchg
or
popl
into
nop
lea
pop
sbb
mov
pop
cli
pop
notl
push
insb
gs
sub
xchg
adc
mov
jae
adc
lea
icebp
mov
mov
inc
or
pushf
push
movsb
popf
mov
loopne
ljmpw
shl
fsubl
cwtl
sbb
pop
inc
leave
push
lods
xor
dec
loopne
sub
push
xchg
out
inc
push
jo
push
sbb
rorb
mov
or
shl
or
pop
movb
outsb
pop
adc
and
pop
mov
scas
or
mov
adc
lea
mov
cs
sbb
imul
pop
sub
mov
and
andl
push
mov
xlat
add
xchg
sbb
popl
nop
adc
loop
push
or
mov
pop
adc
jmp
fsub
mov
js
mov
jo
xor
jbe
sub
mov
add
adc
in
inc
cmp
jl
negb
dec
mov
fists
fstl
cmp
fisubrl
sbb
into
fcmovb
fsubrp
push
fsubs
loope
push
push
pop
jne
xchg
adc
mov
adcl
sbb
clc
or
negb
dec
fnstenv
imul
add
pop
and
mov
sbb
or
leave
call
lea
aam
adc
adc
xor
out
add
or
or
stc
fisttpl
mov
push
sbb
cmc
mov
sbb
sub
sub
lods
std
fdivrp
inc
sbb
and
xchg
xchg
rclb
push
jo
insl
sub
push
sbb
mov
addb
or
sbb
adc
les
sub
inc
hlt
ljmp
js
mov
jg
sbb
inc
mov
add
js
fdiv
push
sar
jge
add
js
and
lds
dec
push
sub
inc
sub
lea
cli
dec
bound
inc
imul
or
ret
push
rcrl
mov
pop
mov
xchg
jne
add
aam
ret
pop
add
hlt
xor
testl
jmp
sbb
mov
and
insl
xchg
subb
add
ret
or
dec
bound
mov
fimuls
scas
inc
sub
mov
pop
mov
xchg
movnti
lea
and
dec
js
cmpsb
adc
es
movsl
xor
push
or
cmpsl
sub
icebp
call
jle
sbb
lds
dec
into
adc
mov
dec
pusha
add
mov
dec
xchg
pusha
sbb
jge
sbb
adc
push
aas
cld
in
add
fdivs
add
js
fs
test
addr16
xchg
test
inc
inc
pop
cmp
or
or
pusha
pop
sub
dec
pop
sub
lret
testl
sbb
mov
cld
into
frstor
push
and
sub
push
lret
jae
mov
pop
dec
jp
sbbl
or
out
out
mov
and
or
scas
dec
dec
cmpsl
xor
mov
push
js
mov
insb
sbb
sub
shll
dec
sbb
jl
rclb
pushf
scas
inc
or
xchg
daa
pop
dec
std
mov
roll
in
iret
dec
mov
jno
mov
cmp
ret
mov
bound
sbb
or
adc
mov
icebp
test
cmpsb
shl
mov
adc
jecxz
repnz
xchg
sarb
mov
pop
int
cmp
into
sbb
push
and
sahf
call
in
mov
jno
mov
orb
mov
icebp
or
sub
sbb
cmp
dec
xchg
mov
cmp
ret
sbb
pusha
dec
ret
ret
or
inc
pop
push
pop
gs
test
fistps
sub
push
inc
sub
insl
std
pusha
mov
mov
jno
jmp
push
push
add
sbb
mov
lods
and
into
add
mov
fst
pusha
sub
mov
jo
lds
jno
push
test
mov
mov
sbb
sbb
loopne
adc
loope
enter
xor
jl
and
lahf
leave
fucomip
insb
lea
fcmovu
dec
mov
inc
shlb
popf
sub
sbb
push
nop
push
test
sbbb
mov
push
mov
or
add
repz
ds
fwait
mov
cmp
outsb
push
mov
cs
rorb
pop
inc
notl
or
imul
dec
js
inc
mov
and
arpl
pop
push
sbb
sar
pop
pusha
dec
xor
push
cwtl
arpl
push
or
push
push
mov
push
rolb
add
xor
dec
and
jb
sarl
sub
xlat
and
orb
js
mov
pop
mov
lods
mov
sbb
cmp
xor
or
adc
mov
clc
or
repz
add
sbb
ret
pushf
push
mov
loop
sbb
or
push
xor
xchg
add
sub
sahf
push
loop
in
lods
call
push
into
loop
sub
jno
rclb
xor
sbbb
sbb
dec
add
dec
mov
int3
pop
mov
test
sbb
imul
cld
cmp
popa
lea
inc
adc
jns
sbb
jecxz
push
xchg
test
push
shl
add
push
and
adc
rcrl
sbbl
and
sbb
mov
and
lea
sbb
rolb
loope
push
fdiv
mov
inc
push
mov
xchg
fidivs
add
adc
add
cmp
pop
jne
rcl
rclb
lea
jb
mov
popa
push
mov
int3
ss
pop
inc
xchg
inc
insb
or
xor
jle
call
lock
xchg
in
ret
je
adc
push
scas
adc
jbe
jle
xlat
test
shll
into
and
jle
dec
roll
push
pop
sbbb
ret
inc
mov
mov
daa
push
or
je
inc
es
xchg
popa
sbb
ret
dec
xchg
or
pop
xor
inc
pusha
dec
push
push
sbb
pop
loopne
paddq
adc
push
jge
xor
push
fildll
push
gs
inc
push
arpl
insl
adc
in
push
inc
cltd
pusha
movsb
jl
fisubl
xchg
inc
pop
mov
sub
mov
sub
add
or
add
mov
movsl
lods
mov
ret
push
icebp
faddl
rcrl
mov
push
int3
mov
bound
inc
je
mov
shl
pop
js
dec
sahf
mov
push
add
stos
stc
nop
js
inc
fstpl
add
sbb
add
sbb
cwtl
dec
pop
rcl
shl
rclb
repnz
inc
sbb
nop
or
sbb
inc
andb
jp
push
ss
mov
fbld
incl
xor
sbb
js
inc
daa
sbb
jne
aad
xor
pop
clc
div
rcrb
jne
test
jb
sub
in
cld
fdivrs
and
sbb
sbb
cmpsl
push
dec
cmpsb
or
pusha
jo
orl
xchg
add
subl
and
cmpsb
sbb
xor
pop
xor
popa
movsb
inc
push
push
cmp
ljmp
rclb
shr
shlb
mov
loope
inc
jns
pusha
sbb
in
ds
push
cmp
outsb
cmp
push
mov
xchg
and
enter
imul
mov
and
rcll
and
xchg
enter
les
jo
xchg
adc
stos
push
pop
or
sbb
jp,pn
mov
mov
ds
incb
cmp
dec
insb
loopne
adc
test
pop
inc
sub
mov
pop
mov
inc
ljmp
add
jl
add
repz
pusha
ret
and
int3
xorb
je
cmp
pop
mov
cli
in
repnz
hlt
scas
inc
test
push
pop
dec
push
shl
inc
call
sbb
repnz
and
add
ds
mov
sub
bound
mov
push
aad
in
jle
mov
lock
or
test
mov
inc
mov
hlt
pop
outsb
xor
shrb
test
rol
and
xor
imul
rcrb
ficompl
xchg
mov
gs
cmp
hlt
mov
xlat
inc
loop
and
mov
add
mov
cmc
add
jb
outsb
lret
mov
xchg
or
rcrb
pop
test
pop
inc
cs
add
cmpsb
or
xor
fldt
cmp
popf
jbe
cmc
rolb
or
jb
add
loop
add
sbb
fmuls
cmp
ret
inc
and
test
adc
and
jle
loopne
inc
vfmsub231ps
andb
les
loope
les
adc
aaa
faddp
xchg
jno
xchg
add
rolb
imul
push
test
enter
cmpsb
sbb
adc
dec
mov
shrl
jmp
test
scas
push
adc
and
addb
xor
bound
test
mov
push
daa
cmp
test
pop
mov
outsl
cmc
les
pop
insb
insb
cmp
addl
or
and
sub
fidivl
xchg
or
rorl
imul
test
mov
clc
nop
push
testl
testb
jmp
loope
adc
inc
add
daa
cmpsl
push
test
sar
mov
mov
testb
xchg
fiadds
push
lods
xor
adc
sbb
adc
popa
mov
pop
push
pushf
dec
cli
push
fwait
ret
pop
into
insl
inc
pop
loop
scas
mov
xlat
xlat
outsl
or
jne
fdivrl
dec
mov
enter
dec
push
cwtl
pop
test
aam
les
xor
push
add
xchg
ror
addb
xchg
bound
sub
mov
jmp
sbb
pop
cmp
pusha
add
push
push
push
enter
add
mov
pop
pusha
add
repnz
add
hlt
dec
dec
cmp
add
pop
testb
pusha
and
jmp
subl
add
mov
inc
jns
shll
call
mov
or
bound
orl
insb
mov
sbb
add
or
mov
out
test
js
call
xchg
or
pop
mov
sub
xchg
js
or
pop
or
inc
or
rcrl
cmp
shrl
loopne
push
ljmp
add
inc
test
sbb
test
inc
push
insb
mov
mov
mov
pop
rolb
rcrb
lock
insb
nop
int3
lock
stos
sbb
add
mov
mov
psrad
nop
test
nop
push
cs
mov
jb
and
and
cmp
movsl
icebp
sbb
inc
push
push
cld
or
lahf
rcr
ss
sub
sub
or
mov
add
or
sbb
jne
pusha
lods
inc
rolb
pop
clc
gs
xchg
sbb
aaa
mov
cmp
sarb
or
into
and
adc
xor
mov
inc
sub
pop
push
and
test
push
push
andl
adc
sub
sub
sbb
push
adc
cmpb
test
and
js
xor
add
add
and
sbb
int3
jl
sub
ror
fildl
fistpl
push
cltd
clc
sub
and
add
mov
pop
inc
mov
mov
jno
int3
or
mov
sbb
mov
dec
sbb
js
pop
jp
mov
or
rorl
and
or
push
push
insb
xor
incb
lea
dec
stc
imul
push
jb
mov
dec
aam
adc
xlat
xor
outsb
dec
inc
sbb
fildl
adc
lgdtl
mov
lahf
sub
xor
fs
sbb
pop
xchg
push
xor
pop
jge
rolb
and
psubw
inc
jg
pushw
push
inc
mov
or
scas
loop
push
addr16
arpl
dec
inc
ret
dec
arpl
je
fcompl
lock
pop
test
lods
and
mov
and
adc
mov
pushf
inc
xchg
daa
cmp
mov
mov
call
icebp
orb
inc
pop
mov
xchg
adc
or
dec
mov
add
push
add
call
sub
jg
enter
cwtl
mov
repz
adc
jge
dec
lea
test
loop
sub
or
or
sub
lods
or
pop
test
push
or
sbb
add
inc
lret
adc
mov
inc
mov
lret
or
xor
es
ljmp
insb
pop
cmc
cmpsb
scas
shrb
mov
push
nop
mov
subl
jo
fbld
inc
push
xor
jno
dec
adc
mov
inc
test
mov
inc
pop
adc
dec
or
mov
inc
sbb
cmp
sbb
mov
xor
rorb
or
adc
pusha
das
loopne
cmp
and
push
inc
inc
dec
lahf
sbb
sbb
pop
movsb
fdivl
cmc
or
adc
shll
cmp
sbb
sub
ja
dec
loopne
or
push
or
and
aad
cmc
int3
jo
cmp
jmp
cld
adc
mov
jno
push
jl
mov
inc
sub
sub
add
shr
push
or
or
pusha
lds
enter
inc
cmc
nop
mulb
mov
pop
pop
sub
aaa
cmpsb
adc
outsb
cmp
adc
shlb
sub
dec
pop
cld
sub
add
lds
jno
and
sub
popa
mov
jle
es
imul
mov
xchg
sub
rcr
ss
addb
cmpl
data16
xchg
movb
mov
je
push
cmp
dec
xchg
add
inc
sbb
push
rclb
aad
movsb
cwtl
mov
sub
unpckhps
sub
stos
lret
sub
and
nop
cs
lock
pop
test
sub
js
mov
push
ds
xchg
mov
inc
outsl
sahf
ret
jne
popf
lret
cmpsl
into
clc
cwtl
and
sarb
sbb
mov
data16
shr
into
or
scas
roll
adc
insb
test
cs
adcb
adc
rcrb
shl
cwtl
cli
movsl
add
push
sbb
sbb
divl
out
pop
xor
add
or
les
cwtl
or
or
ljmp
stos
mov
shr
sbb
flds
sub
mov
rol
fistpl
xchg
inc
or
sbb
dec
push
add
sbb
mov
dec
and
sub
pusha
xchg
or
call
dec
or
leave
xor
adc
xchg
push
mov
test
sbb
subb
adc
jl
ror
xchg
adc
outsb
add
mov
les
xor
mov
and
leave
add
xchg
push
icebp
fs
jae
into
mov
adc
int3
add
adc
stos
icebp
push
mov
test
stos
inc
sub
pop
imulb
int3
add
inc
mov
and
dec
sbb
pop
adc
inc
addr16
jl
cli
jb
inc
scas
test
jb
pop
xor
sbb
inc
shrb
cmp
jnp
pop
adc
scas
ss
loopne
pop
pop
cmpsl
sbb
jmp
xor
into
js
push
add
sbb
xor
js
or
adc
dec
fs
or
rcrb
popa
leave
mov
ljmp
lret
aaa
push
cmp
ss
lret
xor
ljmp
loop
daa
test
inc
sbb
gs
mov
push
lods
mov
adc
movsl
paddb
mov
dec
loopne
popf
jo
xchg
pop
and
or
xor
jg
mov
push
sub
cmpsb
and
xchg
xor
loop,pn
mov
rolb
mov
popa
dec
mov
mov
adc
movsl
leave
loope
daa
push
or
cld
popa
mov
rclb
sub
rcrb
test
or
aam
inc
and
js
push
aam
jmp
rcrb
or
mov
add
je
sbb
adc
dec
adc
arpl
inc
dec
inc
orb
repz
ljmp
ja
lea
pop
xor
pushf
popa
hlt
xor
adc
xchg
sbb
pop
push
xchg
sar
mov
or
adc
imul
mov
sub
jo
xchg
jp
push
xchg
sbb
loope
adc
aad
cmp
pop
lret
pop
xchg
mov
add
sub
jg
ret
loop
push
shrl
xor
ss
shrl
out
pop
mov
ljmp
xor
mov
adc
dec
push
jb
aad
cmc
push
push
hlt
mov
daa
and
imul
jno
adc
adc
cmovo
or
imul
mov
pop
sbbl
push
stc
mov
aad
mov
ret
das
and
jmp
aam
scas
push
add
mov
pop
push
adc
push
push
cvtps2pi
jno
clc
sbb
movsl
push
push
mov
dec
jp
subl
ja
lods
xor
sbb
add
jle
shll
xchg
pop
in
out
lods
test
popa
xchg
popa
addr16
xor
inc
loop
inc
sbb
add
test
popa
dec
and
xchg
sub
adc
jmp
cmp
add
xchg
push
sub
adcb
pop
add
dec
mov
addr16
ret
cmp
push
inc
sub
jge
jp
cmc
jp
in
pop
enter
mov
test
pcmpgtd
leave
add
movsb
cmp
jne
xor
xor
into
sahf
rclb
sub
mov
ret
sbb
loope,pt
aam
and
lods
dec
adc
aam
cmp
sbb
sbb
push
pop
pusha
or
call
mov
sub
loopne
into
add
xchg
adc
lock
and
pop
aam
adc
xchg
loope
shll
sbb
mov
adc
lret
nop
test
cmpsl
lock
xchg
insb
test
mov
adc
ss
test
mov
mov
and
xchg
or
add
loop
and
sarb
adc
pushf
repnz
and
jne
loope
adc
inc
mov
loopne
sbb
rol
pop
lret
cwtl
sbb
sub
stc
jle
mov
cmp
inc
ret
ljmp
add
pop
bound
movb
leave
mov
push
test
or
or
cwtl
ret
pop
sbb
adc
fdecstp
xor
clc
arpl
popa
add
push
andb
dec
hlt
inc
je
aam
adc
jp
dec
std
xchg
imulb
enter
sbb
cwtl
jmp
and
movsl
mov
xchg
push
jl
adc
inc
ret
rcl
fcoms
jmp
mov
sbb
dec
push
sbb
inc
push
pushf
adc
push
js
mov
push
sub
adc
sbb
outsb
ds
dec
rcrb
inc
imul
sbb
aas
or
sbb
outsb
sbb
adc
adc
sub
xchg
ljmp
or
loope
mov
xor
sbb
test
fwait
push
mov
pop
bound
and
ds
stos
rorl
sbb
pop
adc
push
shrb
xchg
ret
jmp
hlt
enter
popa
inc
popa
cmp
lods
or
bound
sbb
xor
inc
out
and
add
lcall
jb
xchg
push
sbbb
es
sub
out
pop
mov
pushw
adc
push
mov
ljmp
add
mov
out
xchg
pushf
notl
xchg
mov
mov
popf
or
jnp
jo
and
icebp
xchg
insb
sub
lahf
pop
int3
insb
mov
sbb
push
push
ret
fcoms
and
nop
bound
and
push
push
out
add
inc
sbb
rolb
jno
sarb
loopne
xchg
dec
and
jns
jbe
fs
sbb
mov
push
cmp
mov
push
jbe
or
nop
lcall
and
sub
jne
jmp
popa
into
cmpps
xchg
jge
and
clc
jno
cmp
or
push
push
int3
orb
or
loopne
pop
xorl
out
push
inc
xorb
dec
and
adcb
sbbl
mov
pushf
mov
jl
test
push
jl
or
fistpll
loope
sbb
lods
ds
or
dec
xor
daa
in
push
dec
scas
and
icebp
add
mov
push
push
outsl
add
jle
cwtl
xor
add
jnp
jge
outsl
sbb
scas
in
xor
and
xlat
inc
or
push
sbb
mov
cld
mov
cmp
mov
fimull
test
sbb
stos
push
jno
jbe
lea
and
lock
add
repnz
adc
adc
mov
inc
cli
imul
clc
add
shl
mov
or
push
ljmp
fldl
addb
insl
or
inc
lods
push
or
cs
cmp
leave
and
movsb
push
es
push
push
add
movsl
jbe
inc
movsb
pushf
dec
cwtl
inc
inc
mov
int
sub
js
add
mov
push
xor
lods
or
rcr
dec
or
inc
push
ret
xchg
mov
mov
fstl
mov
into
movsb
or
movsb
outsb
mov
lods
and
add
arpl
scas
jo
add
aad
xchg
pop
hlt
lock
leave
add
mov
or
pop
roll
mov
lock
mov
cmp
dec
adc
cmp
xchg
cwtl
push
pop
adc
lock
cmp
aad
lea
mov
movsl
enter
push
mov
xchg
jp
or
sbb
adc
iret
mov
insb
adc
subb
sub
out
mov
sbb
sub
or
mov
adc
int3
pop
sbb
and
shr
repnz
pop
rcrl
add
and
push
add
sbb
or
test
inc
pop
mov
xchg
sub
cmp
xlat
js
sbb
sub
cltd
xor
or
inc
jbe
xchg
dec
sarl
test
loopne
in
jle
xchg
push
pop
adc
push
mov
xor
shl
and
js
mov
sbb
mov
imulb
dec
sarl
dec
dec
and
loopne
push
add
mov
cmp
and
loop
ret
ds
arpl
mov
push
out
xor
push
icebp
lock
adc
push
in
xor
xlat
dec
and
rolb
test
pop
ss
and
dec
push
mov
mov
add
das
sbbl
movsb
pop
rolb
dec
stc
mov
aaa
inc
xchg
adc
xchg
pop
andl
add
add
mov
loope
mov
or
test
push
add
mov
pusha
pop
js
and
xchg
jno
das
mov
clc
add
ds
adc
pusha
pop
xchg
adcb
lret
nop
clc
add
push
fs
adc
lods
dec
jl
dec
sbb
sar
aam
jae
push
lock
dec
push
cmpsl
mov
pop
rcl
popa
roll
mov
cmp
int
in
dec
sbb
fnstenv
push
outsb
sub
dec
pusha
push
xor
sbb
ret
mov
dec
jne
adc
into
xchg
iret
push
mulb
dec
mov
dec
mov
jo
cmp
in
sbb
rolb
js
les
testl
daa
loopne
pop
and
lret
push
shld
mov
sbb
pop
ret
mov
sbb
ficomps
mov
or
xchg
cwtl
rorb
and
sbb
or
pop
push
mov
jp
xchg
and
movsl
enter
and
sbb
adc
cwtl
cmp
mov
mov
sbb
dec
mov
and
lds
mov
lcall
pop
dec
cmpsb
test
js
sbb
sbb
dec
adcl
mov
ljmp
popa
ljmp
notb
mov
push
sbbl
push
ja
jnp
and
lret
repz
bnd
mov
or
cmpb
leave
stc
or
pop
add
lcall
imul
icebp
les
aam
mov
lods
icebp
inc
mov
mov
mov
xor
sbb
in
ljmp
push
push
cwtl
xor
in
rolb
push
and
or
fstl
or
dec
mov
rclb
ret
jb
enter
xchg
loop
jmp
mov
and
movsb
dec
loopne
xchg
xor
pusha
or
sub
mov
pop
mov
mov
sub
subb
dec
dec
pop
mov
into
inc
es
clc
mov
data16
mov
addb
inc
arpl
subl
fs
loopne
add
xchg
mov
adc
dec
push
mov
lock
adc
pop
div
xor
rcrb
push
push
cmpl
jge
clc
xor
jmp
sub
std
or
xor
adc
into
mov
push
add
push
bound
pop
push
or
or
push
xlat
es
ret
jne
add
daa
cmc
and
ljmp
xor
jp
pop
push
or
rorl
dec
loope
out
cmp
sub
in
arpl
jno
cmp
mov
adc
xor
mov
xor
std
sub
jecxz
add
pop
cmp
sbb
and
add
push
pop
imul
aam
dec
cld
or
insl
les
jo
popa
aam
push
outsb
mov
cmp
sub
gs
or
mov
or
adc
or
jle
test
sarb
adcb
out
jae
sbb
push
xor
in
rolb
js
jle
mov
lods
xchg
in
jge
xor
lods
andl
mov
jno
inc
jp
sub
lock
mov
dec
fwait
pushf
pop
popf
mov
add
test
lds
push
sbbb
cltd
pusha
or
arpl
mov
mov
fbstp
and
or
jbe
pop
add
loope
pusha
jns
jbe
arpl
cmp
fs
in
jge
push
and
xor
loopne
es
or
jp
lock
xchg
or
adc
pop
lret
adc
push
inc
push
cmp
and
movsb
xchg
sub
cmpsl
imul
cmc
shlb
in
enter
dec
rorl
mov
inc
mov
das
or
les
aad
mov
cmp
arpl
or
jb
rorl
push
mov
adc
in
orl
add
adc
xor
shll
adc
adc
clc
mov
andb
add
ja
xorl
xor
das
movsl
adc
loope
cmp
push
sub
push
aam
ljmp
pop
inc
mov
mov
adc
adcb
gs
push
dec
je
sbb
push
gs
inc
jne
mov
inc
loopne
lea
sbb
push
push
mov
cli
mov
pop
ret
adc
xchg
lret
ds
jl
pusha
loopne
loopne
movsl
ljmp
inc
dec
pop
or
clc
xorb
add
sbb
lret
scas
sbb
ret
aam
jnp
jbe
sub
push
add
or
inc
lods
cmp
pushf
push
lods
ljmp
pop
mov
lock
sbb
popa
xchg
cmp
xchg
sub
push
add
mov
testb
xor
add
or
add
test
inc
pop
jg
stos
aaa
sub
push
cmp
sbb
pop
mov
inc
dec
push
jns
xor
pusha
lods
sub
outsb
mov
imul
add
adc
leave
loop
pop
inc
int
fwait
add
rcll
ret
inc
sub
call
jb
outsb
mov
dec
add
jmp
add
push
xor
mov
je
mov
mul
lret
pop
cmpl
jp
xor
in
mov
xchg
adc
divps
push
cmpsl
xchg
xchg
dec
lret
jl
cmp
sbb
lock
inc
or
push
mov
add
jg
xchg
xchg
mov
sahf
imul
test
dec
rol
sbbl
cltd
jnp
xor
mov
or
pop
cmp
mov
push
xor
push
fwait
mov
test
repz
add
jo
negb
ljmp
cmpsl
shlb
xchg
xchg
mov
jg
sti
push
mov
lods
or
mov
nop
pop
jg
call
cltd
dec
add
pop
aam
push
addl
add
pop
rcr
jge
lock
lcall
mov
lock
add
sbb
popa
ljmp
sahf
lods
ds
ret
sub
rolb
ret
and
das
test
xchg
adc
jecxz
test
add
push
mov
mov
push
or
sub
enter
inc
dec
xchg
fistpll
cmp
shl
ret
loope
bound
inc
movsb
ret
lds
sbb
xor
sbb
add
cmp
mov
adc
call
mov
push
sbb
push
icebp
insb
sub
pop
rorb
pusha
mov
js
sbb
jge
adc
arpl
push
xchg
add
lods
inc
movsb
push
ret
jge
mov
stos
pop
add
das
out
repnz
lods
inc
cmp
add
jno
popf
inc
clc
xchg
push
mov
sbb
test
add
sub
pop
pop
jno
add
jp
or
adcl
mov
lods
lahf
xchg
cli
pop
int3
scas
adc
stc
cmp
shr
insb
pop
pop
adc
loop
dec
mov
mov
aam
xor
enter
xor
sub
add
sub
add
push
icebp
and
cld
push
mov
adc
dec
stos
rol
cmp
imul
test
scas
adc
and
sbb
aam
sbb
imul
dec
movsb
push
jp
fstps
or
xor
movsb
shrl
mov
lods
dec
imul
adc
dec
sbb
imul
push
mov
cmc
sbb
or
or
mov
sbb
inc
adc
es
loopne
xor
xchg
popf
mov
add
pusha
sub
in
pop
shrb
cmp
out
push
imul
inc
and
or
or
aam
cld
jmp
pusha
pushf
add
sbb
cmp
jge
sub
mov
sub
dec
cmp
add
and
rorl
and
jmp
jns
nop
mov
lcall
jbe
shll
and
mov
divl
jo
clc
sbb
cmp
cmp
cmpsb
sbb
xor
lods
ss
mov
sub
pushf
inc
or
mov
iret
pop
aam
or
ljmp
jbe
or
aam
xchg
add
jp
adc
mov
leave
into
xchg
in
ret
cmp
into
out
push
les
dec
cmpb
sbb
dec
add
jmp
and
subl
jo
sbb
pop
daa
outsl
test
push
inc
jmp
cmpsb
pop
pop
cmc
ficoml
jb
adc
cmpl
ljmp
add
loop
rcrl
push
dec
pop
sahf
nop
mov
in
cmp
mov
cmp
gs
inc
nop
xchg
xor
stc
rcl
push
je
fisubrl
insl
xchg
loope
xorb
mov
lea
pop
fwait
mov
adc
dec
bound
cwtl
push
daa
or
and
push
cmp
mov
ret
nop
xor
add
inc
inc
lods
mov
cmp
adc
mov
dec
clc
or
out
sub
add
mov
pop
inc
adc
jle
int
sub
loopne
sbb
mov
mov
iret
adc
repnz
jne
inc
mov
das
sub
lea
xor
rclb
cmp
aam
pop
push
dec
imul
mov
dec
rcl
or
or
jne
ret
or
hlt
or
push
fwait
call
or
xorl
jp
or
out
ficoms
dec
pop
cmp
subb
jb
rorb
xchg
mov
xor
leave
xchg
push
jp
lret
clc
scas
dec
popa
sbb
arpl
or
enter
dec
or
sbb
push
arpl
push
sub
lods
pop
sub
or
dec
cmp
adc
pop
push
imul
mov
push
inc
pop
xlat
mov
xor
or
or
test
xor
sbb
lods
fisubrs
add
mov
ror
clc
jecxz
dec
xor
push
mov
add
shll
orl
add
addl
pop
xchg
fadds
dec
adc
loop
push
jns
sbb
sbb
jp
and
jmp
mov
adcb
add
jecxz
add
sub
push
rolb
imul
shll
shlb
sahf
dec
cmp
sbb
mov
or
cmp
sbb
adc
cld
add
and
add
mov
push
repnz
into
in
adc
neg
and
jecxz
lock
add
rcrl
cmp
dec
mov
add
test
push
mov
xor
sbb
inc
ss
inc
ret
jbe
xchg
and
repnz
jle
xor
cmp
xchg
dec
mov
add
xchg
pop
fidivl
cli
mov
cmp
push
xor
xor
or
subl
cmc
add
pop
push
mov
add
pop
jp
mov
lret
or
sub
pop
mov
sub
cmp
inc
sahf
sbb
rolb
call
add
push
xor
mov
and
js
sbb
pop
mov
jmp
jnp
add
mov
push
nop
push
pusha
pushf
push
fimuls
or
clc
cmpb
or
ret
shlb
push
or
mov
push
xor
lock
mov
fwait
add
and
jp
mov
rclb
inc
faddp
pop
stos
out
add
js
loopne
lret
cmpl
fisttpll
add
add
jmp
aam
adc
pop
popf
pop
insl
push
outsl
jns
lret
push
xchg
jns
lods
outsb
arpl
shll
rcl
jmp
or
push
push
ljmp
sub
and
fwait
add
rclb
ss
mov
jmp
sbb
in
cmpsl
push
xchg
mov
js
mov
xchg
adc
sarb
cltd
lret
clc
jl
push
shrb
dec
pop
popl
or
push
in
dec
jge
or
cmc
pusha
sti
insb
or
fadds
add
cmp
or
jns
test
push
push
mov
xchg
or
mov
enter
pop
sub
es
inc
stos
rclb
rcrb
push
mov
mov
sub
popa
jecxz
mov
lods
imul
inc
add
rcrb
loopne
lcall
loop
ret
pop
cmpl
inc
lret
jno
loope
mov
movsb
xchg
ljmp
and
jge
push
jecxz
int
sub
test
loop
outsl
loope
push
add
add
add
movsb
jo
dec
les
push
mov
adc
popf
mov
sub
jle
adc
inc
sbb
push
mov
mov
and
rcll
push
ret
adc
xchg
pop
or
popf
add
mov
cli
aam
mov
lcall
mov
adc
add
inc
test
cmpsb
hlt
lods
push
in
pop
and
xchg
sbb
cltd
roll
add
cwtl
add
cmpsb
ret
adc
sub
loope
sub
rolb
mulb
mov
cmp
push
add
xchg
sbb
adc
xor
sub
nop
and
out
and
ret
ss
mov
mov
push
ret
push
sub
inc
call
sub
jp
nop
ret
add
cli
push
mov
lods
pop
repnz
sub
repz
add
loopne
fwait
mov
push
les
push
add
call
adc
or
mov
add
cmpsb
movsl
pop
lahf
leave
test
js
test
pusha
fisubl
test
push
sahf
push
inc
inc
lock
pop
outsl
fcmovbe
sub
sbb
into
xchg
sub
js
mov
or
mov
pop
add
test
bound
lock
mov
mov
and
add
repnz
cld
es
sbb
and
and
push
add
rorl
or
inc
js
pop
jo
movsl
xchg
push
je
fadds
mov
in
ret
into
bound
add
fstps
inc
arpl
ret
pop
inc
cmpsl
xchg
push
clc
xor
popa
push
push
cmp
int3
scas
and
lret
xor
add
test
loopne
sbb
lods
inc
jne
mov
cmp
xor
mov
jle
nop
daa
pusha
test
mov
lock
shlb
ret
ret
sbb
ret
xchg
mov
mov
in
xor
lock
cmc
pop
loopne
cs
adc
rcll
or
sbb
mov
adc
xor
and
mov
rclb
es
rcl
mov
xchg
sbb
push
nop
sbb
or
out
loopne
mov
sti
rorb
jbe
and
and
out
aam
xchg
rcrb
je
or
ret
enter
icebp
dec
push
test
sarb
jnp
sbb
mov
add
nop
pop
sub
rcrl
xor
loope
fiadds
sbb
fs
inc
lock
or
iret
push
adc
sarb
lods
dec
xor
push
add
or
popa
dec
push
scas
lods
in
and
mov
jno
scas
or
cmp
aam
int3
daa
and
addl
pop
mov
nopl
lcall
push
push
inc
std
add
mov
in
push
cmp
adc
jle
iret
pop
or
push
xchg
ljmp
scas
addb
xor
push
or
faddl
lret
push
pop
adc
mov
shl
add
jle
cmp
adc
arpl
push
lret
xor
mov
mov
js
test
cmp
add
sbb
jbe
adc
cmp
addr16
or
and
sbb
jb
dec
xchg
xlat
nop
hlt
jae
xor
sbb
push
sub
add
pushf
rcrb
aam
sahf
or
push
js
pop
pop
and
or
cmp
or
xor
loopne
bound
xchg
pushf
sbb
pushf
cli
jo
xor
xchg
or
adc
out
mov
popf
sbb
repnz
or
insl
cmp
cld
sub
push
lgs
push
and
or
lock
push
icebp
xchg
push
fcoml
push
push
xchg
inc
sbbl
les
inc
and
fdivp
movb
xchg
prefetcht0
push
les
pushfw
inc
lods
aad
bound
cwtl
push
dec
inc
inc
jb
xchg
and
push
in
push
dec
pop
mov
mov
xlat
or
sbb
push
lock
std
or
xor
lods
xor
cs
loopne
pop
or
push
ret
add
xor
jo
lcall
mov
das
test
pop
out
ret
fwait
jo
xor
mov
rcrb
mov
mov
dec
mov
out
push
mov
jno
push
shlb
cwtl
rorb
gs
mov
or
push
nop
cmp
test
xorb
leave
mov
push
mov
js
push
add
push
add
xchg
push
cli
cltd
cmp
mov
out
mov
arpl
or
dec
ret
xor
inc
or
test
and
pop
nop
xor
mov
or
nop
jae
xor
sub
mov
dec
fistps
sbb
mov
mov
test
adc
xchg
inc
addb
imul
pop
push
xor
aam
andl
imul
add
dec
orb
inc
inc
sahf
jecxz
jecxz
or
and
adc
js
push
cmp
lcall
rorb
movsb
inc
rclb
add
xchg
icebp
imul
pop
pop
dec
and
xor
xchg
push
fs
cmp
xlat
sbb
dec
imul
jno
push
ret
cld
mov
add
inc
mov
divl
push
mov
xor
shll
inc
mov
ja
add
mov
outsb
push
mov
enter
bnd
pusha
add
icebp
cmp
icebp
jb
sbb
xchg
inc
inc
shll
sub
dec
les
ficompl
inc
add
cmp
icebp
es
xor
inc
lods
inc
sub
push
xchg
add
mov
enter
rorl
out
pushf
ror
outsb
push
mov
cltd
hlt
inc
or
out
les
xlat
adc
push
or
xor
mov
push
or
out
inc
add
shlb
popa
test
das
add
loopne
mov
aam
sub
push
cmp
add
mov
mov
mov
jmp
and
push
enter
inc
subl
pop
pushfw
lods
in
cli
cmpsl
push
mov
cmp
cmp
cmp
mov
adc
scas
js
lods
push
insl
mov
mov
iret
dec
outsb
ds
sbb
or
daa
dec
add
lock
in
loop
jp
sbb
mov
outsl
sbb
dec
ds
cmc
sbb
cmp
inc
sbb
xor
clc
rcrb
and
pop
push
push
mov
js
push
sbb
xchg
test
pop
sbb
sbb
imul
xorl
icebp
in
mov
sub
sbb
hlt
push
dec
cltd
inc
mov
lock
push
pop
lea
sub
outsl
sbb
pop
add
jb
mov
adc
sahf
push
mov
xchg
adc
lods
xor
bound
inc
movsl
dec
dec
lret
xor
xchg
orb
adc
sbb
out
adc
imul
fs
push
cmp
scas
outsb
daa
add
lcall
call
xchg
sbb
push
or
rclb
mov
mov
mov
jns
rol
scas
int
mov
mov
add
and
adc
pop
dec
leave
jg
mov
notb
enter
dec
cli
or
sbb
cmp
dec
ret
mov
and
sbb
inc
adc
repnz
add
nop
push
test
push
sub
add
xor
adc
sub
mov
or
mov
cwtl
inc
sbb
add
xor
inc
shlb
push
xchg
inc
cmpsb
pop
push
or
out
mov
leave
into
adc
push
and
adc
stos
mov
imul
pop
leave
js
mov
add
xor
sbb
ss
xor
jno
scas
mov
push
mov
jl
mov
cli
push
and
int3
push
aad
stos
lods
add
roll
mov
adc
adc
jo
cli
cmp
jp
movups
mov
scas
mov
test
sbb
and
sarb
jo
jg
repnz
or
cmpb
andb
mov
shrb
mov
fnstsw
mov
shr
dec
add
inc
adc
xchg
push
rorb
mov
stos
xlat
mov
add
lret
scas
pop
push
xchg
adc
mov
add
pop
adc
pop
xchg
andl
inc
insb
cmp
adc
push
add
jb
sbb
bound
or
movsl
fs
cs
push
and
lret
lock
jo
mov
test
adc
and
xchg
and
loop
adc
hlt
mov
insb
or
jne
or
sub
fucom
rorb
push
aas
enter
cmp
ret
dec
sbb
cltd
js
loope
int3
cwtl
insb
pop
cmpl
rcrl
test
enter
adc
mov
jg
lret
rdpmc
repnz
pop
sub
lcall
cmpsl
or
adcl
add
rclb
add
cmp
adc
or
fcomps
and
pop
ret
movb
aas
stos
push
xor
xor
sub
xchg
xchg
sbb
mov
sbb
cmpsl
das
stos
and
lea
add
add
inc
ss
lock
sbb
icebp
mov
xchg
pusha
pop
shrl
cli
cmp
jno
add
popl
outsb
and
pop
adc
shld
mov
xor
mov
das
jl
xor
mov
sbb
add
push
in
and
ret
push
sbb
test
das
loope
adc
in
xchg
cmp
add
int3
rorb
cmp
movsl
mov
or
outsl
pushf
cmp
rcrb
jno
sbb
push
pop
push
add
or
lret
divb
popf
cltd
add
aaa
test
aaa
dec
sbb
into
push
int3
das
add
pushf
sbb
rclb
push
movb
sbb
pop
jb
es
xor
push
leave
push
mov
add
dec
jecxz
mov
dec
xchg
lock
add
xchg
bound
mov
mov
icebp
push
loopne
mov
dec
fdivl
inc
cmpsl
or
mov
xchg
insb
dec
xchg
into
or
mov
mov
mov
xchg
adc
mov
arpl
in
clc
loopne
mov
push
cltd
popa
jmp
dec
sbbl
ret
insl
add
bound
xor
xor
inc
sarb
mov
imul
insl
jle
fbld
movsb
ja
call
xor
sbb
jp
or
pop
pop
push
push
mov
jbe,pt
test
movsl
push
and
movsb
and
arpl
xchg
mov
int3
mov
and
sbb
xchg
pop
or
adc
movsb
adc
shrl
verr
mov
out
cmpsl
addb
adc
adc
subb
sahf
sub
rclb
cmp
imul
xchg
mov
in
and
movsl
mov
andb
lods
lods
xchg
nop
pop
cli
push
xor
dec
dec
rol
js
negb
icebp
js
fs
sbb
mov
mov
cmp
cmp
pop
cmp
and
add
ret
mov
iret
subb
sub
sahf
push
inc
add
into
mov
dec
xor
loopne
in
add
aad
add
popa
or
andb
sub
pop
dec
push
mov
push
add
push
outsl
cwtl
xchg
cmp
mov
inc
call
rol
inc
pop
daa
pop
pop
and
cmp
test
dec
cmp
or
sub
xor
dec
js
leave
out
xor
or
push
and
jl
loope
mov
mov
cmp
push
lods
add
mov
adc
jns
pop
push
jmp
sbb
add
inc
dec
cmp
lahf
mov
ljmpw
xchg
test
jno
enter
hlt
lock
push
xchg
push
sarl
sbb
arpl
enter
xchg
sbb
ficompl
dec
mov
cmc
xchg
andb
orl
punpckhbw
pop
or
lock
ljmp
xor
add
mov
les
mov
adc
aam
sbb
js
pop
dec
adcl
xor
sbb
sub
pop
or
push
inc
xchg
loop
popf
test
adc
inc
adcl
add
sub
loop
stc
fmul
sbb
lcall
add
rorb
mov
mov
dec
xorl
js
fiaddl
cmp
rcl
fldt
roll
sbb
cmp
inc
pop
adc
pop
fistpll
mov
dec
imul
clc
aas
int3
dec
and
sbb
daa
adc
inc
mov
push
push
sbb
add
inc
and
enter
nop
inc
jecxz
orb
mov
xchg
push
ret
and
les
sahf
dec
pushf
mov
xor
jl
lods
push
addb
call
xor
or
jo
dec
jl
pop
ja
xor
dec
sbb
dec
insl
mov
adc
rcl
dec
gs
adc
ljmp
mov
or
popa
add
add
sub
cmp
or
adc
fnstenv
mov
hlt
mov
mov
std
mov
or
mov
xchg
push
icebp
lret
mov
rorl
popa
add
add
adc
inc
test
imul
sahf
enter
inc
inc
lock
loop
js
fwait
xchg
jp
mov
push
pop
mov
lahf
outsb
dec
movb
rcl
cli
pop
sub
fcmovnb
pop
les
lods
dec
xor
jmp
leave
add
push
xchg
pop
hlt
or
rclb
push
push
popa
jns
cmp
popa
lcall
fxch
xchg
xor
loope
sbb
jo
repnz
mov
rcll
push
xchg
or
dec
inc
pop
shll
or
mov
sub
mov
inc
jp
inc
ss
add
add
or
cmp
and
sbb
pop
sbb
aaa
cwtl
push
and
xor
add
mov
pusha
add
mov
push
stc
lret
cmp
imul
mov
mov
xor
dec
or
aas
arpl
xor
inc
and
xchg
sbb
jmp
dec
imul
icebp
pop
xchg
cli
or
pop
imul
jo
add
scas
je
dec
push
dec
push
lock
and
mov
test
imul
adc
fldl
inc
pop
inc
pop
inc
push
fisttps
jecxz
push
mov
push
push
shl
or
movsb
or
adc
pusha
loop
mov
das
ret
or
scas
dec
pop
je
enter
icebp
add
xchg
pop
int
nop
sub
nop
inc
das
or
xchg
push
push
push
pop
push
mov
sbb
add
xchg
xor
mov
push
mov
jp
sub
ficoml
inc
repz
xchg
lods
imul
and
and
aam
adc
out
and
sbb
mov
add
loopne
inc
iret
pop
sahf
pop
aam
mov
xor
pop
sub
lea
je
and
gs
pop
xlat
cmp
or
jge
xor
call
dec
enter
mov
dec
es
into
and
adc
sbb
lods
les
addb
call
mov
mov
js
mov
push
mov
or
pushf
cmp
mov
push
push
xor
add
dec
scas
add
add
add
inc
fld
cmp
mov
xchg
mov
add
sbb
dec
pop
push
xchg
or
sarb
add
dec
sti
into
shlb
lods
inc
loopne
aad
sbb
jmp
loop
sub
adc
repnz
sbb
pusha
mov
mov
sub
jmp
cmp
loope
pop
or
js
bound
pop
inc
stos
and
adc
cmp
dec
cmp
add
cli
mov
lods
push
popa
lods
in
jl
mov
or
sbb
js
dec
divb
test
je
xchg
push
ljmp
cmp
adc
xchg
icebp
jno
jnp
inc
daa
test
xchg
push
sti
sub
mov
mov
mov
pop
or
sub
mov
lea
xabort
or
add
xor
add
mov
jae
add
push
sub
ss
and
dec
mov
dec
mov
adc
adc
sahf
adc
push
xchg
inc
mov
adc
dec
push
xor
pop
rol
jmp
inc
jmp
outsl
fsubrl
xchg
add
mov
adcb
xor
push
dec
js
xchg
inc
cwtl
ret
mov
cmc
ret
into
inc
mov
dec
pop
or
mov
pop
xchg
sbb
in
mov
xchg
shr
adc
adc
xor
fdiv
es
add
arpl
shll
fs
ret
add
hlt
inc
shrb
lods
xchg
lock
and
pusha
xchg
ds
imul
inc
enter
dec
inc
mov
or
xor
add
leave
insb
sub
sub
call
add
stos
sub
or
jecxz
adcl
xor
pop
aam
insb
lret
ret
xorl
jo
inc
adc
data16
mov
and
or
aam
inc
stos
sbb
cmp
ljmp
arpl
shlb
lock
dec
push
lahf
xchg
adc
push
xor
pop
pop
sub
mov
ret
test
sbbb
fs
sbbl
sbb
adc
push
dec
out
rol
dec
fldenv
sbb
aaa
es
mov
cmp
mov
push
add
fadds
lds
xchg
xchg
and
mov
xorl
test
movsl
mov
jnp
inc
push
cmp
ret
lock
je
ja
ljmp
adc
adc
xchg
dec
sub
jne
adc
xor
aam
lock
jns
pop
and
jb
mov
and
add
push
out
lea
add
pushf
inc
jmp
and
mov
add
aam
popa
sbb
das
mov
in
jge
fcomip
add
mov
jo
lcall
ret
ret
mov
pop
adc
pop
add
mov
jae
mov
adc
popf
sub
popa
jle
adc
adc
enter
and
daa
inc
pop
dec
mov
xchg
dec
push
in
sahf
mov
mov
add
test
mov
aaa
in
cmp
inc
testb
inc
and
hlt
or
lcall
movsb
cli
mov
or
xchg
out
push
dec
dec
add
push
jg
pop
dec
rclb
xchg
jge
add
jno
xor
enter
ss
and
mov
xor
arpl
lret
fnstcw
pop
rcl
cmp
mov
mov
loop
push
cmp
jne
cmp
inc
pop
mov
sbb
xlat
push
sahf
fs
aad
inc
push
sahf
test
mov
mov
mov
xor
cmc
cmp
push
sbb
sbb
scas
pop
push
int3
pop
dec
stos
mov
xchg
imul
cmp
push
xor
repnz
or
lock
sub
cmp
stos
dec
arpl
shlb
or
and
adc
or
loopne
mov
push
mov
fldl
enter
add
add
lret
sub
sub
or
lods
or
push
stos
fsubrs
push
addb
sub
leave
ljmp
cwtl
pop
daa
jne
out
cmp
cltd
or
rcr
adc
sub
adc
ret
mov
or
push
icebp
xchg
sbb
xor
push
insb
or
inc
push
lret
and
push
shlb
or
mull
mov
push
add
cmpl
aad
and
jo
mov
add
outsl
push
and
sbb
test
aad
notb
pop
cs
addb
gs
or
inc
addr16
xor
popa
cmp
xor
xor
adc
jo
xchg
jo
jmp
mov
mov
add
pop
adc
pop
pop
xchg
inc
test
or
cmp
test
xor
imul
and
stc
mov
xchg
movsl
pushf
faddp
popf
add
aas
mov
loope
mov
xchg
in
nop
mov
and
cld
or
lock
dec
push
dec
adc
or
or
add
fstl
outsb
add
push
test
test
cmp
add
popa
push
subb
pop
add
cmc
xchg
movsb
inc
mov
xchg
scas
mov
xchg
rorb
loopne
adc
clc
addr16
or
jge
and
scas
cli
std
movsb
sub
xchg
setne
lret
add
cmc
addl
mov
int3
or
arpl
inc
mov
js
dec
mov
xchg
mov
aaa
test
lods
int3
test
or
sarl
wbinvd
mov
xor
push
cs
xor
xor
repnz
or
insl
imul
inc
xchg
shlb
testb
inc
outsb
inc
push
push
mov
push
lock
inc
sbb
and
ret
jo
hlt
and
clc
cwtl
dec
cmp
sub
outsb
sbb
cmp
repnz
call
jmp
icebp
or
xchg
or
rcl
xchg
test
pushf
mov
rol
add
test
rcrb
push
push
cmpsb
push
jbe
push
add
or
movsb
and
mull
push
inc
jmp
out
or
add
test
imul
lock
inc
xor
sbb
xchg
cmp
loop
insb
and
or
dec
insl
aam
test
and
jmp
pop
dec
test
aam
inc
loope
js
jbe
ja
mov
cmpsb
test
or
movb
or
sub
pop
rcl
lods
ret
inc
adcl
nop
adc
dec
insb
or
movsl
mov
leave
inc
mov
push
btc
and
ret
sbb
xor
sbb
mov
or
lcall
pop
test
popa
and
inc
int3
sbb
hlt
mov
push
scas
lods
movl
add
push
sbb
gs
scas
sub
sbb
mov
pop
and
or
int
mov
js
lock
cli
sahf
push
rcll
mov
jmp
lods
mov
js
mov
cmpsl
fld
roll
dec
loopne
or
loopne
cmc
or
xchg
imul
into
ss
push
out
sub
das
addr16
push
in
rolb
icebp
inc
pushf
add
je
cmc
xor
imul
xor
push
rcrb
clc
imul
and
xchg
pusha
rclb
dec
cmpsb
adc
pop
pop
jb
jp
xorb
xor
fstps
stos
and
rcrl
or
popa
rorb
cmp
sbb
sbb
inc
ret
js
adcl
inc
icebp
ret
fldl
mov
cmp
mov
in
not
push
push
rorb
sbb
lcall
fcmovb
lods
mov
xor
pop
push
popf
test
lock
fcoms
enter
adc
and
inc
stos
jge
lods
and
cmp
mov
cmp
sub
xchg
mov
sbb
mov
mov
shll
in
or
jae
inc
push
push
out
add
nop
or
pop
rol
addl
adc
icebp
and
sahf
mov
and
test
push
scas
adc
jmp
adc
add
call
xchg
sbb
ja
in
inc
insb
icebp
mov
dec
in
jge
popa
inc
mov
je
or
add
pop
mov
add
daa
pop
mov
imul
cmp
adc
cmpsb
cld
xor
dec
es
ret
add
adc
xchg
adc
xchg
test
mov
cmpsl
les
xchg
mov
mov
fdivrs
inc
dec
adc
xchg
add
jmp
xchg
adc
xor
ds
hlt
ret
imul
ljmp
pand
cmp
imul
add
jecxz
dec
fst
add
adc
mov
fwait
sub
dec
lods
outsl
inc
push
mov
sbb
pop
add
sbb
adc
cmp
call
ret
push
push
shrb
je
jne
fcomps
roll
and
sbb
adc
rcrb
idivl
xor
or
dec
incl
jge
pusha
lods
mov
dec
mov
cmp
inc
pop
hlt
shlb
lea
rol
ja
pop
inc
pop
lods
push
jle
loop
loope
repnz
sbb
test
dec
dec
dec
dec
int3
sbb
xor
cmp
negb
mov
mov
call
int3
adc
int3
adc
push
adcb
pop
outsb
mov
call
sbb
movsb
mov
loopne
push
rclb
jl
mov
pushf
movsb
test
dec
pusha
jmp
into
adc
lock
add
outsl
or
les
xlat
sbb
xchg
into
add
hlt
add
mov
aam
and
mov
and
adc
cmc
and
rolb
add
adc
sarl
scas
imul
mov
pop
cmp
stos
pop
add
aad
cmp
leave
xchg
pop
movsl
add
movsl
mov
sbb
xlat
add
cmp
ljmp
add
and
cmpsl
loopne
mov
xor
mov
mov
mov
adc
mov
inc
sbb
cmpsl
into
jbe
clc
inc
xchg
adc
push
int
push
sbb
out
push
sbb
shl
jge
xor
push
in
imul
enter
pop
lret
dec
add
pop
xchg
xor
cmp
add
js
hlt
push
ret
inc
and
into
sub
lods
ljmp
cwtl
push
clc
popa
loope
and
in
mov
inc
pop
repnz
call
inc
adc
add
mov
or
stc
push
push
and
mov
jmp
enter
xor
lock
inc
add
mov
adc
or
jg
and
hlt
sbb
xchg
loopne
mov
xor
adc
out
roll
push
fisubrs
sub
nop
lock
outsb
adc
or
jno
sub
cmpl
push
leave
or
add
inc
sbb
addb
pop
enter
mov
fstl
aas
jl
lods
dec
adc
mov
or
dec
pop
or
add
adc
push
sub
mov
lds
push
xor
dec
xchg
cltd
mov
lods
jp
push
cmp
and
mov
dec
faddl
cltd
xor
pop
into
push
add
inc
gs
lods
addl
cwtl
jp
jne
pop
xchg
rcl
sub
or
jnp
adc
loope
in
test
into
mov
pusha
in
adc
clc
mov
movsl
cmc
sbb
loopne
les
jmp
and
xorl
cmpsl
loopne
les
ret
jne
test
and
pop
pop
or
ja
cltd
sbb
add
loope
bound
in
ljmp
cmp
mov
rolb
add
and
lock
call
sbb
and
xchg
sub
adc
mov
int3
inc
arpl
mov
lret
ror
test
xchg
jle
push
test
or
leave
jmp
pop
pop
cmp
pop
sub
sub
cmp
adc
js
jle
dec
js
add
fmulp
xchg
or
add
shll
and
add
mov
push
xchg
xchg
clc
leave
add
push
mov
push
mov
dec
inc
fwait
lcall
inc
sbb
das
xor
cmp
rol
pop
jg
mov
pop
aas
pop
jb
and
or
xor
pop
xlat
jecxz
rolb
enter
std
ret
jmp
sub
ds
mov
js
push
loope
mov
mov
mov
sub
push
add
jge
sbb
adc
push
xlat
fld
pop
and
rol
adc
fisubs
xchg
sbb
dec
push
lock
push
ficoms
loope
sub
and
js
lods
jno
loop
sbb
imul
les
test
or
fdivr
subl
adc
notb
insl
pop
sbb
cmpsb
mov
mov
rcrb
daa
mov
xor
push
add
pushf
sub
mov
push
popa
dec
aam
cli
mov
rclb
or
lret
cmp
lret
cli
out
adc
aad
jne
loopne
pop
xchg
lock
xchg
mov
shl
ret
cmp
sub
call
or
jecxz
mov
mov
loopne
adc
xor
fcmovnb
lret
add
enter
scas
rcrb
cmp
adc
push
gs
xchg
dec
iret
js
cmc
and
addr16
addb
stos
les
shrb
sbb
rorb
roll
daa
cmp
dec
jl
cmp
push
add
bound
add
and
mov
add
push
xor
fiadds
mov
add
sub
jns
jp
jp
fnstenv
test
push
lock
adc
imul
cmp
imulb
mov
sbb
pop
pop
pusha
or
mov
push
nop
sbb
sub
fwait
cmp
lds
pop
lret
add
add
sbb
add
and
lds
or
push
push
or
or
leave
imul
adc
nop
jle
xor
pop
lds
xchg
dec
cmp
mov
orb
js
loope
pushf
mov
add
pushf
fld1
sub
sbb
cmpl
call
push
add
jle
cmpsl
sbb
insb
syscall
push
mov
xchg
adc
mov
je
push
push
xchg
int3
sub
daa
or
add
ret
dec
sbb
xor
cmpb
xor
or
push
verw
jo
fs
xor
pop
leave
xchg
inc
ljmp
sbb
sub
sbb
and
and
outsb
xchg
jmp
or
xchg
lock
leave
add
push
test
rolb
inc
lods
push
addb
aam
pop
and
lock
aaa
cmpsb
mov
popa
cs
jp
scas
clc
push
cmp
xor
jl
faddl
mov
inc
pop
sub
sbbl
sub
or
pop
in
cmp
push
mov
aad
mov
cmp
cwtl
lret
mov
enter
xchg
and
arpl
or
in
xchg
ds
mov
mov
daa
add
dec
add
mov
jnp
loop
jne
stos
sarb
pop
dec
dec
bound
inc
push
cmp
std
mov
inc
aas
and
mov
pop
xchg
inc
cmp
test
rclb
outsl
push
es
ficomps
orl
test
mov
inc
arpl
out
sbb
mov
mov
pop
inc
add
ret
mov
and
xor
xor
or
add
mov
and
push
setbe
pop
pushf
adc
leave
sbb
mov
incb
cltd
js
or
mov
call
test
pop
push
repz
mov
push
sbb
nop
inc
pop
jnp
int3
mov
adc
dec
adc
dec
rolb
mov
stos
add
sub
popa
lea
nop
push
adc
sub
mov
ret
jne
adc
adc
popl
or
out
or
daa
add
push
push
test
add
mov
movsl
or
aaa
fisubs
ret
insb
rcll
push
sbb
in
stc
jne
fs
out
or
mov
jae
xchg
sbb
xor
xorb
roll
je
sbb
ror
add
jmp
pusha
push
icebp
or
sahf
add
sbb
fstp
inc
jl
jo
loopne
or
and
and
and
andb
in
arpl
hlt
push
add
push
pushf
sbb
je
movsb
das
xor
dec
add
fstps
mov
xchg
sahf
pushf
adc
test
pop
dec
fldl
icebp
mov
xor
and
cmp
adc
mov
rcl
divl
loopne
push
push
js
mov
pusha
and
repz
add
leave
js
or
dec
je
sub
push
test
cli
mov
sub
adcl
and
and
xchg
mov
adc
mov
cld
add
and
jo
or
mov
mov
sub
jmp
enter
fwait
cmp
add
lods
sbb
sub
mov
fst
aas
add
movsl
lock
js
sbb
adc
test
stos
call
aaa
mov
xchg
jle
inc
ret
mov
rcl
inc
push
mov
pop
mov
cs
jmp
cwtl
jecxz
test
jbe
shrb
int
sbb
aam
pop
cmpsb
sbb
pop
adc
sbb
jo
xor
dec
rorb
dec
mov
xchg
orb
adc
jb
das
mov
sub
pusha
aam
lea
enter
or
cmp
inc
cmp
or
movsl
sub
pop
pop
dec
jmp
out
pushf
push
mov
daa
mov
aam
fwait
push
cmp
cli
adc
xor
test
push
dec
jmp
or
push
jg
adc
popf
nop
push
xchg
cmp
sbb
lea
push
lcall
xchg
clc
fcoms
mov
and
and
mov
and
adc
push
or
rorb
adc
ja
addl
ss
adc
arpl
loopne
pop
and
nop
xor
dec
pop
ja
add
add
pop
and
add
insb
cmp
imul
pop
pushf
cmp
insb
mov
and
mov
mov
dec
jb
add
mov
rcl
xor
add
and
pop
add
divb
dec
in
dec
ja
repnz
lret
jmp
xor
mov
adc
fsub
das
imul
dec
or
pusha
sbb
test
cmp
push
xchg
push
adc
dec
loope
mov
jns
push
lock
lods
das
push
inc
sti
pop
clc
add
lret
andb
lcall
mov
test
cmpsl
xor
scas
or
pop
adc
mov
or
mov
add
mov
je
adc
test
or
mov
add
lret
jge
sbb
push
loope
push
rol
fnop
dec
pop
pop
ficompl
mov
icebp
lock
jo
or
popa
sub
insl
js
inc
sbb
xor
mov
mov
add
cmp
andb
and
ret
mov
pop
push
sub
cs
jge
jno
xor
or
in
inc
push
arpl
stc
clc
popf
sbb
pop
dec
mov
daa
push
or
pop
dec
pop
mov
xor
test
sub
pushw
into
mov
lcall
mov
xchg
frstor
jne
sarb
sbb
push
mov
js
inc
mov
mov
push
xchg
jb
xorl
xchg
loope
lret
pop
mov
fstps
xchg
inc
jae
xlat
sbb
adc
dec
bound
insb
loopne
add
adc
ss
shl
add
xor
jo
lcall
xorb
mov
fisubl
ljmp
add
arpl
push
stos
sahf
mov
cmp
mov
add
mov
add
shrl
and
std
ljmp
in
sub
cltd
loopne
mov
call
test
push
testl
ret
push
fxtract
push
jns
andb
stos
or
sbb
adc
out
adc
adc
icebp
push
xor
pop
mov
add
mov
cmp
xchg
ja
pop
mov
adc
push
outsb
je
mov
or
hlt
push
xor
dec
dec
dec
adc
es
push
push
rolb
and
leave
repnz
or
xchg
pop
jmp
or
add
add
push
and
enter
xlat
adc
mov
xor
arpl
pop
push
push
push
les
mov
mov
dec
dec
sbb
mov
ljmp
mov
or
mov
push
test
shl
xchg
mov
rclb
sub
push
incb
add
push
push
pop
shll
jle
ljmp
loopne
or
sub
leave
aam
nop
add
mov
movsl
add
scas
pop
adc
test
xor
push
jb
cmpsb
sub
sti
repnz
add
mov
jecxz
movb
loopne
cltd
xchg
add
popa
je
mov
adc
add
cmp
out
xchg
jns
lock
xchg
or
adc
or
adc
push
sbb
cmp
xchg
imul
sub
adc
out
mov
movsl
xchg
pop
push
mov
test
and
lret
jb
sub
xchg
ljmp
jl
idivb
jl
rol
mov
insl
push
fmull
mov
add
rcrb
sub
inc
sbbl
loopne
xchg
adc
je
sahf
and
and
add
outsb
in
push
clc
inc
shrl
lea
add
dec
ffreep
push
push
sbb
pop
push
mov
inc
cld
sbb
and
adc
arpl
clc
add
and
popa
leave
jmp
test
add
or
and
fdivrl
mov
sbb
xchg
dec
clc
or
ret
and
movsb
pop
xor
or
pushf
or
dec
pushf
mov
sbb
mov
call
gs
test
bound
and
adc
mov
in
add
mov
xor
mov
ret
add
pop
or
shl
clc
popa
ret
mov
cmp
add
js
adc
mov
dec
les
scas
push
and
mov
into
push
push
push
lret
clc
popa
sub
pushf
or
xchg
add
inc
movsb
lock
es
mov
sti
decl
js
mov
or
adcb
nop
sbb
mov
gs
out
adc
or
or
aas
nop
cmp
jge
enter
or
pop
kmovw
addl
lock
leave
xor
in
xchg
xor
mov
push
outsl
lret
mov
push
push
sub
popa
je
mov
sahf
mov
adc
adc
jecxz
rclb
adc
sub
rcrb
js
cmp
leave
add
inc
and
adc
rclb
sub
and
adc
xor
add
mov
xor
loope
fsubl
hlt
xchg
aad
sbb
mov
push
pusha
lds
cli
add
or
pusha
mov
sub
jns
rolb
mov
xor
xchg
bound
add
jno
mov
push
push
movsl
pop
pusha
sbb
mov
sub
push
movsb
stos
xor
adcb
pop
sbb
notl
adc
pop
ror
dec
and
xor
pop
mov
insb
lds
push
jae
add
gs
add
sbb
push
adc
js
repnz
cwtl
movb
sub
add
push
loopne
in
adc
orb
mov
or
lret
test
sub
lcall
xchg
pusha
sbb
mov
xchg
cmpsb
xor
or
add
addb
inc
popf
es
adc
mov
jecxz
cmp
sub
push
je
loope
scas
iret
mov
rcr
ret
bound
push
enter
or
or
lea
shlb
xchg
pusha
ss
cmpsb
cwtl
push
mov
mov
je
inc
jge
hlt
test
and
and
pop
enter
incl
xchg
andl
fcom
pop
mov
mov
xchg
push
je
jnp
cmp
push
adc
in
mov
arpl
add
test
lret
adc
pop
add
xor
ljmp
imul
pop
insb
xchg
test
imul
mov
ret
inc
movsb
xorb
or
sub
lret
cmp
stos
popf
push
xor
mov
mov
test
sbb
fcoms
add
lret
loop
lahf
pop
xor
add
jp
ror
loop
sbb
movsl
mov
mov
test
bound
test
xchg
push
loop
xchg
cli
jmp
mov
js
das
nop
in
imul
and
imul
ds
or
adc
sbb
addl
iret
xor
movsb
test
and
jge
fs
inc
add
fs
repnz
jne
loope
scas
test
jne
jo
push
je
push
orb
fiadds
rcl
sbb
sbb
mov
sbb
mov
mov
and
xchg
mov
pop
or
cmp
sbb
xchg
lds
ret
push
sub
dec
push
inc
stc
test
push
adc
jno
push
mov
icebp
das
dec
xchg
pop
xlat
mov
fidivrs
cmpsl
test
xor
add
jecxz
sbbb
mov
aam
pop
and
nop
inc
stos
adc
pop
add
jle
or
and
xchg
cs
cs
daa
test
lret
mov
test
mov
outsb
repz
pop
lahf
and
sub
and
sbb
aas
push
divb
adc
out
jo
and
jp
sbb
out
repnz
sbb
leave
jp
cmp
rolb
and
rcrb
inc
pop
sbb
fnstenv
in
leave
test
mov
icebp
insl
adcb
xchg
mov
orl
sarl
xchg
push
mov
and
lods
adc
pop
imul
ds
pop
push
pop
ljmp
dec
ret
fimuls
stos
xchg
cmpsb
arpl
ret
outsb
subb
scas
push
call
xor
adc
add
movsb
adc
and
xchg
mov
or
jle
mov
lea
nop
push
sbb
shl
cli
testb
or
jbe
ret
je
add
ds
xor
insb
cmp
sbb
mov
outsl
adc
cmp
ret
les
mov
dec
or
push
rorb
mov
shrb
bound
and
or
or
in
xchg
jmp
lods
mov
ja
data16
and
ret
lods
inc
push
mov
sbb
in
mov
lods
or
test
cmpsl
push
aam
or
pop
or
or
dec
out
mov
sbb
nop
fwait
pop
or
adc
loope
jo
stos
rcrb
add
pop
imul
pop
pop
ljmp
xor
pop
aas
fidivs
je
add
loopne
fcoml
xchg
cmpsb
jmp
push
sbb
add
shrb
out
inc
push
ljmp
cmp
sub
cwtl
adcb
add
ficoms
jmp
movsb
push
mov
adc
jne
xchg
dec
insb
shrl
pop
test
mov
movsl
xchg
in
popa
int
ljmp
and
js
loope
add
andb
aas
mov
sahf
js
add
insb
xchg
add
clc
js
jmp
lcall
sbb
subb
or
or
jmp
and
and
push
add
les
and
add
cmpsl
push
xchg
push
xchg
cmp
sub
leave
pop
loopne
dec
add
fsubl
or
mov
mov
fyl2x
xor
or
jecxz
and
jmp
ja
movsb
aas
or
adc
movsl
or
dec
xchg
cmp
adc
add
cmc
nop
mov
sub
adc
xor
mov
test
push
int3
cmpsl
lods
adc
pop
or
imul
pusha
shlb
ret
ret
mov
pop
mov
jle
xchg
and
and
cltd
adc
add
aam
jns
xlat
sbb
add
sbb
inc
dec
in
or
push
mov
and
add
inc
xor
js
add
ss
sti
and
subl
cltd
xchg
sbb
out
loopne
aam
idivb
add
and
xor
push
sbb
fstp
fldt
in
sub
jae
xchg
pop
repz
or
add
inc
outsl
sub
repz
pop
jge
inc
add
mov
push
test
ret
sbb
inc
lret
lret
lods
dec
cmp
loopne
pop
push
stos
into
lods
pop
sahf
inc
jns
movsb
icebp
daa
mov
mov
sbb
mov
sub
pop
cmpsl
adc
dec
adc
jp
cs
xor
shlb
push
cmp
daa
sbb
xchg
rol
mov
cmp
leave
cmp
sbb
ja
sbb
or
frstor
popf
or
bound
iret
nop
iret
pop
out
daa
adc
pop
xor
xor
test
sbb
or
loopne
push
adc
test
push
roll
and
mov
ljmp
pop
xchg
inc
pop
stos
inc
add
outsl
imul
xor
pop
and
push
jecxz
mov
cmp
shll
mov
adc
rclb
ljmp
push
inc
testl
push
clc
jo
mov
cmp
jnp
popf
repnz
cli
xor
aam
fdivp
pusha
add
call
push
test
mov
mov
adc
push
out
sar
rolb
aaa
test
pop
lock
push
sub
mov
mov
lods
neg
lock
pop
pop
or
pusha
and
lret
jmp
and
stc
push
movsl
movsl
push
cmp
fdivrl
ret
cmp
ffreep
stos
push
push
and
sbb
inc
jmp
rol
cli
sub
test
inc
lock
sbb
inc
sub
enter
adc
fistpl
cmpsb
insb
clc
sbb
mov
xor
icebp
xor
mov
enter
jg
add
and
adc
imul
leave
inc
cmpps
mov
lret
enter
inc
stos
imul
mov
arpl
dec
inc
or
add
push
jb
dec
sub
inc
ljmp
mov
adc
jae
ret
xor
sbb
imul
and
inc
or
sub
dec
sahf
push
jne
pushf
lock
push
scas
and
insb
dec
inc
add
jne
cmp
loop
push
addl
lds
rorb
loopne
dec
pop
inc
sbb
inc
movsl
xchg
or
xchg
dec
sub
inc
shlb
add
add
loopne
test
inc
and
cmc
xchg
sub
or
mov
or
add
cmpl
pushf
cltd
mov
inc
rorl
add
fmulp
into
mov
push
pop
lcall
clc
xchg
jmp
outsb
arpl
sub
xor
lret
mov
aaa
jmp
add
xor
dec
xor
pop
clc
movsb
mov
sbb
rolb
test
test
pop
dec
frstor
and
test
test
jne
lret
sahf
pop
insb
push
clc
fcompl
dec
push
xor
cmp
fxch
test
jp
adcl
jbe
xor
in
jecxz
adc
lock
sub
rclb
xchg
jl
je
data16
mov
icebp
pushf
pop
and
ficoml
sub
cli
adc
daa
aam
mov
or
jmp
out
bound
adcb
imul
inc
sbb
ret
mov
jae
push
push
test
jbe
into
addl
shll
or
or
mov
sub
xchg
fiaddl
mov
sbb
jb
inc
sbb
or
lock
rcrb
push
loope
hlt
das
adc
in
sbb
adc
lods
xlat
xor
out
lock
cmp
pop
mov
adcl
push
push
pusha
jp
cmp
jb
jmp
rol
push
icebp
mov
je
notb
inc
popa
lods
cmp
out
mov
mov
jecxz
pop
xor
es
dec
in
mov
arpl
addl
mov
push
adc
sti
subb
push
ret
mov
test
andb
push
sar
mov
dec
and
pop
adc
add
push
gs
nop
cmc
cmp
fidivs
sub
xor
push
pop
loopne
add
and
hlt
inc
sti
insl
dec
lock
push
pop
push
and
jmp
and
fmuls
adc
imul
test
jl
int3
lidtl
inc
into
mov
pop
fdiv
adc
xor
or
loope
mov
adc
adc
and
cmpb
sub
sub
test
inc
push
adc
cmpsb
adc
inc
xchg
je
mov
icebp
lods
sbbb
enter
dec
loopne
jecxz
add
push
data16
daa
sbb
ret
cltd
mov
or
idivl
dec
lea
stc
arpl
cs
push
push
cmp
mov
sub
xor
in
add
insl
sbb
xor
sub
clc
add
icebp
inc
push
xor
push
fists
rolb
xchg
xchg
ja
inc
cs
pusha
sub
xchg
outsb
iret
int3
cmp
and
and
imul
popa
sub
xor
mov
imul
lds
adc
movsb
insl
or
out
cld
add
sbb
lret
push
jne
ljmp
cmpsb
sahf
and
clc
aaa
or
jo
pop
das
imul
push
pop
cli
ret
or
cs
testb
mov
imul
movsb
fcoml
imulb
add
test
and
sub
cmp
fiadds
jae
ror
dec
xchg
and
ljmp
rolb
orb
push
mov
orb
fcomps
cmc
push
jp
push
or
jns
push
pop
adc
movb
push
and
mov
inc
cmpsl
add
mov
stos
add
sub
dec
sbb
cltd
xchg
pusha
rcr
add
clc
dec
sub
dec
mov
cmp
xlat
or
xor
stos
cmpsb
add
adc
sarb
xchg
adc
mov
xchg
xor
cmc
test
idivb
mov
rclb
test
inc
or
push
xchg
ret
pop
daa
test
push
jp
mov
xchg
jmp
mov
inc
push
addr16
and
mov
sbb
arpl
mov
push
ret
mov
xor
hlt
inc
lret
pop
jne
sbb
sbbb
sbb
and
add
out
dec
adcl
dec
mov
lea
adc
mov
lods
pop
pop
or
mov
pushf
add
push
dec
sub
fcomps
sahf
adc
sbb
fdivrl
mov
insb
cmp
sbb
jmp
mov
mov
sti
pop
int
sub
pop
andb
sbb
loopne
inc
js
rorb
in
push
xchg
dec
dec
pop
mov
lcall
in
sub
lods
mov
mov
add
xchg
pop
sub
mov
xor
mov
mov
jo
pop
popf
in
push
shr
pushf
fisubl
ficoml
cltd
sub
add
sbb
push
je
xchg
push
gs
adc
add
cwtl
lea
xchg
sub
cmc
loopne
jnp
bound
aam
js
mov
push
or
jne
leave
repnz
push
mov
fyl2x
adc
mov
adc
sbb
cmp
dec
fs
mov
adc
pop
sbb
scas
lahf
lds
into
sbb
leave
or
adc
xchg
movsb
cmp
push
pop
inc
and
lret
lret
dec
add
and
xor
and
xchg
jmp
mov
or
sbb
into
lods
inc
imul
inc
repnz
inc
sub
push
data16
add
scas
inc
test
fmuls
add
dec
pop
lcall
dec
or
cli
mov
icebp
jb
cmp
and
mov
paddsb
test
rcll
and
pop
data16
iret
adc
pop
xor
leave
jecxz
outsl
push
lods
movsl
mov
adc
xor
inc
xor
add
adc
ret
int
adc
int
sub
mov
inc
jecxz
sbb
mov
and
push
add
mov
jl
shlb
inc
xor
cmp
dec
push
and
or
sub
sbbb
mov
inc
jno
or
data16
jb
iret
mov
xorb
shll
pusha
add
mov
cs
insl
lea
fiadds
jb
loope
or
sbb
imul
call
icebp
movsb
or
addl
mov
push
popf
push
xor
pop
jmp
mov
or
push
or
xchg
or
daa
pop
adc
xchg
cmp
ret
jp
lods
xor
pusha
nop
andb
pop
xor
mov
loope
mov
adc
xchg
adc
mov
mov
sti
movsl
xchg
sub
pushf
pop
movsl
adc
xor
inc
test
inc
push
and
daa
movsb
sbb
or
outsl
pop
push
mov
adc
loope
add
clc
mov
sub
adc
leave
push
xor
xlat
je
xchg
dec
das
xchg
js
push
jne
or
cmp
add
dec
clc
xchg
arpl
call
repz
mov
xor
incb
sbb
jo
mov
push
add
test
add
adc
pop
sub
ror
xchg
lods
add
jo
push
push
add
adc
pop
xorl
push
push
sub
lret
xchg
or
inc
mov
xor
or
xor
mov
cmp
enter
fadds
dec
xchg
aad
cmp
sbb
dec
add
mov
negb
repz
arpl
mov
mov
inc
lods
pop
sbb
das
pop
inc
inc
out
fcmovnu
sbb
loopne
sbb
movups
lahf
test
xchg
or
xor
and
xlat
sbb
sub
popa
jecxz
cmc
add
add
or
arpl
jp
dec
mov
jmp
dec
sbb
rolb
inc
mov
es
push
call
xchg
shll
ljmp
ljmp
push
inc
das
ljmp
inc
and
aas
add
or
sub
or
adc
cmp
test
mov
sub
sbb
jge
pop
shlb
add
cld
add
je
mov
mov
xchg
mov
jp
or
sub
nop
mov
arpl
daa
ret
add
adc
cmpb
mov
sbb
inc
and
cli
clc
enter
popa
add
or
mov
aad
sub
mov
push
sbb
imul
js
movsl
xor
and
cmpsl
mov
sbb
clc
ret
adc
cmp
in
add
aad
add
pop
push
xchg
jo
adc
cmp
sub
push
les
cmpsl
shlb
mov
dec
mov
daa
xor
leave
icebp
or
cmpsl
aaa
movsl
psubsb
rorb
sbb
loope
adc
inc
or
push
jno
mov
cmpsb
push
adc
xchg
fdivs
icebp
push
jb
mov
mov
add
or
inc
add
das
xor
and
pop
ljmp
insl
insb
mull
jb
sbb
dec
or
mov
lret
les
xor
push
imul
icebp
lahf
mov
add
cmp
push
loopne
shrb
adc
incl
add
cltd
sbb
dec
xchg
xor
mov
adcl
repz
pop
jns,pt
xchg
or
jns
sbb
push
dec
xchg
add
int3
nop
insl
push
inc
popa
test
js
mov
cmc
add
inc
cmpsl
xchg
inc
lahf
aam
mov
or
pop
test
orb
jo
push
and
xchg
jnp
pop
or
shlb
movsl
lret
xchg
inc
stos
mov
pushf
jmp
dec
push
jbe
dec
xchg
push
scas
and
and
iret
adc
mov
je
fstl
shrb
loopne
pop
and
mov
pusha
sub
dec
cmp
loop
sahf
push
scas
or
fwait
pop
xchg
sub
mov
mov
inc
hlt
adc
ret
into
rclb
push
sbb
imul
into
ljmp
push
sbb
into
push
add
inc
rcl
add
push
cmp
clc
clc
xor
iret
lea
clc
mov
inc
or
pop
rolb
xor
push
shlb
es
mov
xor
or
sarl
movsl
mov
xchg
ss
aam
rclb
subl
jne
xchg
jecxz
and
ds
or
mov
les
pop
adc
and
loope
xchg
mov
or
cvttps2pi
cmp
or
lret
cltd
jb
cltd
sbbb
sarb
sbb
and
sahf
xchg
pop
pop
jg
and
cmp
and
pop
cmc
aam
cwtl
dec
sbb
or
sbb
dec
adc
xchg
shl
fs
xchg
test
cmp
sbbb
mov
xor
outsl
out
sbb
mov
sbb
mov
js
sbb
rolb
adc
add
mov
loope
es
sbb
dec
mov
fs
out
xchg
and
push
adc
jbe
xchg
mov
push
and
insb
mull
test
sub
xchg
cmp
lret
jmp
and
cli
adc
or
into
push
pop
rclb
xchg
or
loopne
add
and
data16
add
push
outsl
sbb
lods
xchg
dec
push
out
leave
lret
xor
dec
pusha
jne
les
pop
and
loope
and
scas
mov
add
or
arpl
adc
rcrb
das
lods
outsb
loope
mov
and
push
ljmp
cli
add
mov
adcl
add
mov
shlb
pop
loopne
adcl
adc
and
and
repnz
mov
inc
xchg
add
bswap
sbb
rorb
jp
or
mov
jne
bound
adc
mov
jne
movsb
xor
mov
and
clc
rcrb
push
xchg
movsl
push
loop,pn
into
jne
fs
xor
xor
dec
push
and
add
or
mov
and
data16
xchg
movsb
adc
rorl
push
jle
mov
xchg
movsb
sub
mov
das
nop
mov
xchg
dec
add
push
je
lock
jnp
nop
xchg
add
jb
rolb
push
mov
mov
pop
add
jmp
mov
push
mov
dec
and
push
pushf
loop
xchg
mov
andl
dec
mov
icebp
bound
leave
dec
sub
cmp
pop
test
sub
dec
roll
cmp
sub
inc
push
xchg
xchg
sarb
push
bound
xor
push
orb
or
les
test
cmp
jne
loop
mov
ret
xor
mov
leave
ds
mov
stos
cltd
push
xor
imul
pop
sbb
xchg
or
fidivrs
xchg
mov
mov
dec
xor
or
xchg
add
xchg
xchg
mov
enter
mov
jno
and
cmp
add
pop
cli
xor
xchg
sub
push
push
dec
ret
cmp
ret
enter
ljmp
add
and
pop
mov
mov
jb
stc
lods
sbb
adc
inc
sbb
inc
out
cmpsb
icebp
or
movsb
sub
jo
cmp
sbb
add
rcr
out
or
into
pop
sub
dec
insl
jns
sub
sbb
pop
insl
mov
mov
enter
aaa
cs
jmp
adc
xor
mov
sbb
inc
pop
add
in
fistps
adc
mov
jp
nop
cmp
xor
add
xchg
sbb
add
mov
pop
sbb
xchg
orb
sub
push
test
cmc
or
pop
add
ret
outsb
mov
xchg
shlb
aad
pushf
add
cli
stc
add
mov
imul
sahf
jno
roll
je
push
or
mov
lret
out
mov
adc
cmp
or
enter
xor
and
rorb
sbb
rcrb
sbb
in
adc
stos
rcll
add
test
inc
add
sub
ljmp
push
push
add
adc
clc
sub
lcall
cmc
mov
pushf
cmp
adc
movsb
dec
sbb
std
adcb
bound
xchg
dec
push
sbb
cmc
add
fwait
nop
jb
dec
lock
sbbl
and
xchg
xor
push
xor
or
lock
sub
fcoml
mov
ret
cs
and
dec
ret
dec
stc
push
pop
pop
pop
add
je
cwtl
jmp
sbb
sub
lret
adc
jp
loop
lods
or
push
js
add
lret
dec
rolb
add
xchg
mov
iret
cmpsl
sub
mov
addb
push
int3
sub
mov
adcl
loopne
test
cmp
inc
enter
inc
adc
inc
dec
add
and
call
add
imul
les
sbb
add
or
and
hlt
stos
dec
test
push
mov
xorb
cltd
push
ret
movsb
mov
jne
sbb
cmp
xchg
sbbb
pop
das
in
dec
mov
mov
mov
lock
add
and
pop
mov
and
loopne
sbb
cltd
adc
inc
jg
out
sbb
jp
push
pop
rolb
lock
or
cmp
pop
mov
add
cmp
rorb
cld
push
dec
or
push
inc
repnz
imul
loop
add
mov
or
aas
test
orl
test
out
scas
leave
push
aam
push
or
cmp
xchg
lret
or
push
xlat
repnz
das
fs
lea
and
sbbl
dec
add
cmp
inc
ja
test
mov
sbb
gs
inc
jo
or
and
push
rolb
jo
add
push
lock
cmp
pop
data16
jnp
push
xor
and
push
or
ret
sub
ret
ljmp
sub
sbb
outsb
sbb
add
or
imul
mov
or
fsubrl
cs
dec
ja
push
clc
cmp
inc
inc
add
cmp
and
dec
js
popf
sbb
lea
fiadds
jl
mov
adc
test
lods
sahf
mov
dec
sub
adcl
jmp
jb
and
or
sub
cmp
mov
clc
es
xchg
mov
cmp
mov
and
sbb
cmp
repnz
ljmp
inc
inc
adc
inc
out
orb
adc
arpl
sbb
out
xchg
rclb
test
shl
sbb
push
pop
add
or
mov
sti
add
dec
push
add
scas
mov
dec
or
pushf
lods
mov
mov
test
adcl
in
data16
rorb
add
inc
or
les
xor
xchg
or
rclb
leave
push
sbb
or
sub
popf
cwtl
sub
insb
pushf
push
jecxz
sub
mov
push
sbb
mov
imul
adc
aam
and
call
test
mov
addr16
push
xchg
and
dec
sub
adc
push
and
adc
push
adc
movsl
add
cs
or
sbb
xor
int3
adc
xor
and
jb
push
out
add
push
push
push
popf
lods
or
jne
ljmp
xchg
pop
aaa
enter
rolb
pop
filds
test
test
xlat
adc
pop
daa
or
rcl
mov
test
sub
nop
mov
lods
mov
movl
sub
mov
int
xor
xchg
aam
imul
loopne
cmp
pop
sbb
popf
aam
add
and
js
sub
push
inc
imul
xchg
sbb
add
pop
pop
ss
adc
mov
sahf
or
in
add
add
std
fs
cmp
adc
sbb
push
rclb
sub
das
jb
imul
pusha
insb
icebp
mov
mov
jg
or
adc
mov
or
jp
add
add
leave
mov
mov
lret
lcall
add
pop
and
cmpsb
fidivs
pop
dec
lcall
into
addl
movb
inc
int
sbb
roll
mov
sarb
cwtl
cmp
fisubl
leave
pop
mov
add
pushw
data16
mov
jp
in
rclb
xorb
push
cmpb
fldenv
fsubr
mov
orb
das
jo
adc
test
gs
adc
pop
das
mov
jmp
inc
es
rol
sbbb
daa
icebp
sti
movups
lods
stos
shlb
adc
xchg
clc
mov
cli
cmp
cmpb
push
shlb
ficompl
leave
dec
xchg
nop
xchg
orb
pusha
mov
cmp
dec
inc
in
ljmp
add
dec
shr
idivb
or
sbb
add
push
scas
ds
dec
inc
sbb
inc
pop
add
lods
cs
inc
pop
in
in
mov
or
jp
rcr
fisubs
fisubrl
or
and
sub
aad
fwait
xchg
sahf
je
xchg
adc
mov
and
add
xchg
add
mov
loopne
jae
inc
sbb
xor
mov
test
lods
ffree
fsubrs
pop
sbb
xor
in
arpl
aad
xchg
stos
leave
fwait
mov
add
mov
nop
xchg
xor
lock
jle
mov
fldt
out
or
ds
inc
daa
inc
aas
repz
addr16
ret
mov
cltd
dec
shll
add
push
int
ss
mov
mov
xorb
inc
loopne
sub
sbb
mov
adc
and
add
mov
or
push
dec
sbbb
cmp
xchg
outsb
add
add
sub
sbb
xchg
adc
jb
inc
sbbb
rolb
push
jns
and
jo
mov
jmp
outsl
enter
and
dec
inc
pusha
lea
push
daa
es
jl
or
pop
pop
mov
xor
add
fildl
xchg
shll
sub
clc
test
or
cwtl
lret
ss
mov
or
push
push
test
pop
cmp
test
sub
pop
dec
arpl
mov
jmp
fcomi
les
pop
arpl
jp
sbb
movsb
popa
inc
cmp
leave
scas
jp
inc
mov
shll
shll
fists
jge
or
push
bound
adc
push
jb
lret
sub
add
dec
negb
cmp
dec
adc
shlb
or
push
and
mov
inc
mov
enter
dec
mov
gs
mov
pop
xchg
and
in
push
jp
dec
in
stc
xor
adc
addb
cmpb
nop
pop
shlb
dec
jmp
ds
insl
dec
inc
lods
test
lea
cli
shlb
sbb
call
pop
adc
dec
push
ret
xor
int3
sarb
shl
sbb
add
mov
out
mov
push
or
mov
push
sbb
pop
mov
mov
or
jmp
pop
jl
lock
dec
sbb
dec
insl
adc
or
push
and
push
pop
leave
rolb
mov
ret
imul
add
add
and
mov
faddl
mov
push
rolb
mov
ret
cmp
loop
lcall
shrl
arpl
cmp
or
push
jmp
lret
cmp
lcall
inc
pop
pop
adcb
mov
ret
pop
hlt
imul
lock
mov
rcl
add
loope
inc
cmp
or
and
sbb
jne
ret
scas
stos
pop
test
ljmp
rcrl
cmp
enter
dec
mov
cltd
jo
inc
movsb
popl
adc
outsl
test
adc
jno
pusha
pop
outsl
pop
adc
mov
add
fs
imul
push
push
cmp
mov
mov
pop
rclb
inc
pop
dec
sub
pop
sbbb
lods
push
not
mov
test
les
cli
xor
push
test
inc
push
sbb
test
test
ljmp
xchg
inc
push
clc
inc
mov
add
fdivrs
roll
fldl
adc
dec
lods
aas
xor
ret
sub
fidivrl
sbb
lret
and
dec
xchg
cmp
jns
sbb
bound
xor
cld
mov
imul
cwtl
shrb
push
adcl
sub
lods
inc
inc
jl
adc
or
popa
or
call
sub
inc
jl
and
and
pop
or
loopne
push
sbb
ljmp
dec
mulb
or
rcrb
popa
inc
dec
or
outsb
push
mov
push
add
mov
movl
xchg
mov
jb
xchg
mov
jbe
js
mov
inc
ret
jp
aas
stc
adc
xor
jo
push
fimull
and
xor
cmc
out
subb
lds
jne
push
ja
add
adc
fistl
mov
cmovo
sub
mov
xor
push
add
inc
js
repnz
mov
mov
lods
push
add
movsb
adc
add
xor
rol
sub
xchg
insl
xchg
lods
or
cmp
lods
mov
cmpb
clc
add
add
adc
add
adc
fs
push
pop
push
mov
or
push
pop
adc
add
dec
ret
mov
add
sub
cwtl
or
mov
mov
mov
mov
test
mov
test
movsl
xchg
cmp
xor
pop
out
push
push
and
mov
ret
fildl
insl
negl
shrl
insb
mov
mov
out
or
or
dec
fistl
lds
cmp
movsl
testb
mov
sub
clc
shl
ret
mov
cmpsl
sahf
or
mov
sbb
pusha
aam
rclb
cltd
adc
ret
or
imul
ret
push
mov
add
xchg
push
bound
ret
data16
mov
fdivl
and
push
lret
push
mov
xlat
mov
adc
dec
out
fdivl
sbb
inc
cltd
pop
mulb
xchg
cli
or
xorb
dec
sahf
cwtl
xchg
adc
insb
adc
gs
xor
pop
shlb
or
addl
lock
add
dec
and
sub
sarb
nop
push
mov
add
lahf
sahf
inc
ret
fdivl
push
or
sub
adc
xchg
addl
es
adc
call
xchg
cmpsl
add
push
mov
and
mov
fstl
cmp
rcll
fsubp
add
mov
insb
call
lock
ret
dec
jp
push
and
xor
movsb
add
adc
and
dec
imul
xchg
xchg
loopne
imul
or
jne
imul
bndldx
sub
sbb
lcall
jmp
loopne
pop
and
cmp
insb
je
pop
adc
inc
push
xchg
xor
insb
push
dec
pop
dec
cmp
mov
xchg
bound
sbb
adc
xchg
and
int3
sub
sub
pop
adc
push
pop
adc
xor
jecxz
subl
pop
mov
mov
les
lods
inc
push
lea
adc
and
or
add
xchg
ret
sti
push
movb
int3
test
adc
test
adc
xchg
rcrb
push
ror
sub
adc
inc
xchg
outsl
jecxz
cmp
ds
pop
mov
adc
aaa
add
outsb
js
shrb
or
imul
cs
sti
adc
push
outsb
shl
inc
dec
xor
pop
mov
push
pop
or
ss
and
insb
and
out
xor
or
inc
cmp
sub
ds
or
inc
pop
and
pusha
bound
adc
clc
pop
lods
lock
test
stos
ret
inc
nop
divb
inc
hlt
mov
nop
test
ss
pop
inc
in
dec
sbb
mov
test
clc
test
inc
dec
cmp
and
push
imul
rorb
xchg
icebp
xlat
cvtpi2ps
xchg
pop
gs
or
aam
add
pop
sbb
ret
lret
mov
push
enter
jp
sbb
dec
cmp
es
movl
ret
or
mov
pop
fsubl
imul
jno
imul
stos
add
push
int3
or
push
jb
repnz
sub
add
xchg
push
ret
test
pop
clc
or
sub
imul
cltd
mov
push
bound
add
xor
arpl
mov
in
fwait
jns
lahf
add
jecxz
sbb
mov
xchg
xor
or
adc
push
mov
add
enter
cltd
inc
pop
movsl
inc
sahf
mov
test
lods
cmp
xchg
mov
rorl
repz
inc
sbb
and
cmc
stc
push
add
jecxz
xor
dec
inc
and
fcoms
push
sbb
add
push
mov
addb
push
pop
push
cld
inc
or
dec
lock
loope
cmp
pusha
dec
push
inc
movhps
rcll
enter
ret
loope
xor
rcrb
pop
xchg
sbbl
push
imul
push
or
sub
dec
imul
sub
cmp
and
dec
ja
mov
adc
ljmp
xor
dec
inc
jae
stos
or
sbbb
push
or
xor
pop
lcall
dec
add
xchg
push
inc
dec
inc
mov
jge
das
adc
cmp
push
add
add
jo
or
stos
ds
inc
add
xor
ret
lods
scas
btc
lret
or
or
jp
in
ret
int3
and
add
inc
or
sbbb
jmp
mov
mov
movsb
xchg
loopne
enter
add
push
cmp
jl
dec
cmc
rcll
and
and
and
and
fwait
adc
mov
cmp
lret
add
and
cs
icebp
jno
lods
loopne
ss
add
ja
imul
repz
and
and
mov
test
ret
aam
or
gs
mov
sbb
das
add
orb
mov
cmp
roll
and
aam
adc
subb
xchg
cmp
aam
dec
add
addb
and
jno
push
loop
inc
je
adc
push
xchg
insl
daa
add
es
inc
or
xor
outsb
inc
dec
mov
adcb
mov
mov
xorb
sbb
addb
pcmpgtw
sysexit
sbb
mov
inc
ds
and
push
add
push
out
cmp
sbb
push
aas
cmp
cmp
loop
gs
rcll
mov
push
add
sahf
lock
sub
mov
add
inc
inc
inc
insl
test
add
jecxz
inc
bound
call
rolb
ljmp
repnz
or
and
dec
into
xchg
mov
pop
xor
punpckhwd
test
sbb
sbb
or
mov
jmp
push
popf
xor
push
mov
stos
lods
shll
and
fimull
dec
dec
stc
and
sbbb
pop
mov
jnp
cmp
sbb
cmpsl
mov
loopne
in
mov
pop
mov
sub
dec
cmc
and
lret
aaa
cwtl
push
push
jo
cmp
sub
mov
sbb
adc
sbb
insl
or
cs
pop
jno
test
pop
sahf
adc
mov
add
fsubp
or
add
sbb
and
mov
mov
dec
or
js
outsl
sarb
adc
sbb
sub
jb
cmp
fidivl
lock
fcompl
imul
dec
push
add
xor
pop
test
mov
call
sahf
adc
or
push
or
cmc
mov
popa
xor
fs
pusha
ds
out
leave
sub
xchg
int3
cld
mov
and
loopne
jp
aas
js
aad
hlt
add
ljmp
call
and
in
lea
pop
cwtl
das
adc
ret
mov
pop
enter
xor
add
rclb
addr16
insl
add
xor
sti
cs
clc
jp
popa
shlb
cmc
or
ja
shll
and
sahf
add
add
mov
pop
xchg
jp
pop
stc
sbb
add
cmp
adc
subb
dec
pop
rclb
lock
sbb
sbb
cmp
ret
addb
jle
xchg
mov
mov
mov
outsb
cwtl
mov
mov
es
clc
sub
push
and
push
jno
hlt
clc
sub
dec
and
add
and
cwtl
enter
and
push
rcrl
lfs
push
ss
push
jb
sbb
mov
sub
loopne
xchg
xchg
mov
and
rorb
push
xorl
aam
mov
cld
or
jecxz
loop
mov
fcmovnu
xchg
je
xchg
push
dec
inc
pop
xor
mov
andb
pop
cmp
xchg
dec
sbb
xchg
scas
sub
out
xchg
and
adc
adc
aad
icebp
push
fcompl
xchg
push
xlat
cs
inc
add
cmc
movsl
lahf
inc
cmp
out
sbb
push
xor
xchg
popa
fdivrs
pop
call
shrb
rol
mov
bt
inc
inc
out
mov
and
push
loope
ficomps
push
cli
adc
out
sbb
subb
push
adc
scas
shr
xchg
fisubl
aas
cmc
mov
out
sbb
push
ror
clc
js
push
jne
adc
test
mov
add
or
mov
xchg
pusha
cmp
adc
lock
stos
pushf
mov
enter
xchg
fldl
nop
lret
rcrl
lock
sub
dec
jp
out
icebp
push
mov
test
add
pusha
je
or
inc
push
into
test
adc
repnz
les
out
mov
push
cmpsl
adc
test
leave
add
xchg
dec
lods
adcl
sbb
or
pop
adc
inc
push
cli
test
push
or
mov
sbb
fdivl
dec
xchg
or
sbb
sub
pop
loopne
jmp
ljmp
sbb
dec
sbb
xor
push
push
out
cmpsl
and
jne
xchg
pop
jge
jg
sub
add
js
fnstcw
push
sbb
pop
test
jl
or
add
loope
lret
loopne
mov
pop
aas
subb
or
cli
rclb
add
sbb
jmp
js
add
lds
xor
pusha
add
cli
es
movsb
or
or
push
push
ret
das
enter
pusha
test
loopne
push
sahf
in
jecxz
movsl
and
pop
mov
add
loop
ret
adc
sub
mov
jb
inc
add
int
mov
inc
fmull
sub
push
ss
adc
sbb
cwtl
ljmp
mov
sbb
cmp
mov
notb
call
add
daa
or
rcl
pop
or
push
movsb
mov
xor
push
push
adc
ret
adcb
mov
pop
mov
push
leave
add
jge
pusha
shrl
pusha
adc
ss
sarb
addb
clc
sub
test
pop
mov
fdivrp
lea
in
loopne
add
push
mov
in
push
out
xchg
xchg
pop
filds
jno
in
push
pop
aaa
mov
mov
pop
sub
pop
jns
or
int3
stos
push
lret
mov
test
dec
and
inc
je
and
mov
in
xor
sbb
lret
mov
ret
repz
mov
and
xor
test
jno
mov
aam
sbb
pushf
inc
repz
dec
mov
fimull
mov
aad
je
lahf
jno
sub
mov
fwait
stc
sbb
sub
xchg
fs
andl
repnz
add
mov
test
mov
das
insb
pushf
test
xor
cmc
sub
push
shl
imul
insl
jge
scas
mov
stos
jae
jmp
inc
xchg
lods
or
repnz
in
ja
mov
dec
and
lret
loopne
mov
or
add
addr16
xlat
fists
pop
lahf
clc
movsl
mov
in
mov
daa
jmp
push
cltd
mov
icebp
out
lret
mov
mov
adcb
aas
scas
mov
cmp
aas
cmp
pop
rol
add
pusha
rclb
mov
push
mov
fdivp
lret
mov
jge
and
in
lret
mov
cmp
ffreep
xor
sti
repnz
stc
fcompl
inc
xchg
cltd
adc
aad
repnz
lret
sub
xor
xchg
fcomi
jg
scas
mov
dec
shll
test
jl
mov
das
aaa
dec
clc
rcl
scas
js
or
outsl
jo
lret
xchg
sbb
in
adc
pushl
lret
mov
ret
and
dec
or
adc
mov
mov
mov
jge
loopne
daa
das
jo
or
out
out
jns
sbbl
add
out
sub
add
xor
mov
into
inc
stos
je
loopne
sti
in
push
inc
mov
mov
mov
aam
pop
aas
orl
sub
jle
and
aaa
std
and
sub
scas
mov
adc
jecxz
jp
inc
push
fsubrp
xchg
jns
xchg
loopne
pop
or
mov
jns
xchg
aam
test
and
adc
in
push
roll
inc
inc
movsl
push
sbb
jmp
test
sbb
mov
pop
jns
adc
mov
hlt
stc
xchg
popf
xchg
push
pop
jns
cmovne
push
mov
jle
ds
pop
jns
xchg
mov
pushf
mov
in
adc
repnz
xchg
push
stc
imul
push
pop
xchg
xchg
push
fidivrs
jns
and
incl
jl
in
jnp
fisubs
push
adc
lret
mov
das
xor
xchg
xor
in
sub
ficompl
arpl
sarl
mov
add
stos
mov
lret
imul
scas
mov
mov
mov
aaa
lahf
cld
sub
mov
mov
mov
repnz
pmulhuw
xor
faddp
repnz
push
aaa
cmp
push
rorl
sub
enter
add
sub
or
scas
mov
ret
xor
jle
scas
mov
xchg
inc
shrb
mov
mov
xor
call
adc
ror
mov
push
jnp
or
xlat
fcmovb
xor
scas
mov
sub
ret
cmp
addr16
rcll
and
mov
pop
aad
jns
lret
punpckhbw
aam
cwtl
inc
sbb
in
jns
xchg
push
mov
fdivrs
or
xchg
push
pop
test
stc
xchg
in
xchg
test
mov
pop
cmpsl
push
fdivrp
jb
and
xchg
fucomip
push
or
xchg
jge
pop
jns
xchg
stos
jge
into
push
and
leave
add
xchg
push
bound
scas
fldlg2
outsb
test
push
pop
jns
cs
mov
enter
mov
xchg
fidivrs
in
mov
hlt
pop
mov
jg
inc
imul
js
fisubs
dec
in
arpl
in
push
pop
test
jnp
mov
jp
inc
inc
test
xchg
push
pop
jns
rcrl
or
push
jmp
in
and
dec
insl
and
and
ficoml
sub
adc
iret
div
in
call
jge
push
hlt
adc
pandn
mov
xchg
leave
je
popa
push
icebp
movsb
sar
out
xor
xchg
push
pop
mov
fsubr
out
imul
pop
jns
push
mov
dec
push
stos
test
push
pop
jns
xchg
cld
ss
in
mov
insb
dec
mov
mov
dec
lahf
faddl
mov
cmpl
ja
insl
xor
jne
daa
lret
jle
cmp
leave
push
enter
out
scas
mov
out
imul
pop
sbbb
mov
mov
repz
sarl
fistpl
adc
and
lret
mov
call
mov
mov
sbb
mov
mov
fists
leave
ljmp
scas
fdivrp
jb
mov
mov
or
adc
pop
gs
and
mov
shl
repz
mov
gs
sub
testb
cmp
mov
repnz
cmc
push
adc
dec
and
lret
add
hlt
cltd
adc
jmp
sub
jle
mov
mov
xchg
mov
xor
and
jg
dec
xchg
lock
add
sub
cmp
jbe
sti
add
int3
cmpsl
arpl
xchg
das
scas
fadd
jnp
dec
or
pop
and
mov
das
push
gs
mov
out
push
add
xchg
outsb
mov
lahf
ds
mov
or
cmp
es
xlat
inc
and
addr16
pop
jns
xchg
adcl
xor
cmp
jg,pt
cld
adc
pop
push
jle
into
loopne
sub
inc
out
lahf
aas
js
sub
cmpsl
sub
jmp
cld
stc
repz
faddl
je
rep
sbb
pop
mov
test
lahf
aas
jg
fldenv
test
sbb
rcr
mov
xchg
into
push
aad
in
mov
out
pop
lahf
add
jmp
stc
sbb
sbb
js
dec
mov
cmp
jno
in
mov
aad
in
push
pop
adc
lcall
push
insb
xchg
push
pop
jns
movsb
add
filds
pop
jns
inc
ret
mov
push
push
pop
sbb
dec
push
or
lahf
out
and
sub
push
pop
movsb
std
insl
xchg
mov
xchg
pop
adc
jns
aas
ss
outsl
adc
inc
pop
aaa
sbb
pop
jns
jns
hlt
pop
repz
fnstenv
push
jns
xchg
ja
sbb
mov
mov
in
push
pop
arpl
jmp
ror
shlb
xchg
in
gs
out
stos
mov
push
pop
jns
inc
or
outsb
leave
test
mov
arpl
hlt
pop
xchg
mov
jg
repnz
dec
aam
lcall
ljmp
in
iret
test
repnz
mov
lret
cmp
rcll
mov
sub
orb
sbb
mov
pop
test
mov
mov
repnz
dec
imul
cli
xchg
aas
push
insb
cmc
mov
cli
frstor
mov
mov
lret
stos
stos
or
jge
add
add
scas
mov
fldl
orl
sub
shlb
sub
and
adc
scas
mov
lock
fildll
sti
and
loopne
mov
dec
xlat
leave
jle
and
lret
aas
ds
in
add
cmp
scas
mov
dec
xor
call
cltd
pop
stos
scas
mov
add
mov
and
cmc
imul
lret
or
dec
out
in
dec
sub
loop
mov
rorb
mov
xor
sub
daa
nop
fwait
insl
xchg
clc
in
aad
push
enter
stc
repz
mov
or
mov
rcrl
jg
xchg
jl
imulb
pop
sub
test
repnz
outsl
pop
xor
or
std
jnp
out
xchg
sub
dec
out
fucomip
icebp
sub
bnd
or
lret
push
hlt
outsl
shrl
sub
and
sub
repnz
shr
mov
std
mov
push
or
in
sub
lcall
pop
std
jge
push
xchg
and
fdivr
into
leave
mov
das
jp
pop
mov
inc
popf
mov
mov
cmpsl
pusha
ret
jne
repnz
out
mov
mov
mov
test
add
lods
add
push
jl
ss
mov
aas
adc
push
dec
lret
in
imul
pop
lods
fwait
mov
out
push
lea
lretw
xchg
ja
mull
dec
add
movsb
lret
push
lret
hlt
ss
or
pop
xchg
sub
cmp
mov
mov
loop
std
xchg
mov
jns
xchg
sub
inc
sub
dec
mov
xchg
dec
jnp
and
adc
mov
pop
inc
mov
out
data16
test
adc
cmpsl
xor
mov
loopne
std
xchg
cli
aas
mov
jp
pop
jns
xchg
mov
inc
sbb
sub
icebp
lret
xchg
push
pop
xchg
andb
lock
shll
icebp
sti
scas
scas
lods
testl
jmp
mov
cmc
cmc
outsw
stc
mov
lahf
aas
jb
mov
arpl
popf
iret
lahf
pop
ljmp
jo
mov
jno
lret
out
mov
push
cld
inc
mov
sbbb
loopne
ja
sahf
ljmp
pop
repnz
rorl
sub
xchg
push
pop
jns
sbb
movsb
fst
jae
xchg
les
push
pop
jns
rclb
pop
pushf
jecxz
or
inc
mov
ds
pop
jns
xchg
push
hlt
dec
cltd
stos
call
ret
jb
xchg
push
pop
pop
cltd
je
cmpsl
push
ret
cwtl
xor
repnz
xchg
mov
ret
xlat
aas
scas
or
scas
mov
dec
div
sbb
xchg
push
fsubrp
subb
aas
gs
mov
xchg
lods
mov
jns
add
sub
and
bound
out
mov
fbld
mov
mov
mov
xor
mov
scas
mov
aaa
lahf
jae
cmp
xchg
push
pop
jns
sahf
lahf
cmp
decl
aaa
fwait
jnp
pop
jns
xchg
test
repz
pop
xchg
inc
cmpsl
push
adc
pop
out
xchg
jne
xlat
add
xchg
ja
mov
inc
leave
data16
pop
test
ja
pop
repnz
aas
and
mov
push
pop
jns
mov
mov
cmc
cmp
jle
out
pop
jns
xchg
mov
fists
int3
sub
xor
xchg
ja
xorl
dec
movsb
sarb
dec
jecxz
push
pop
jns
incb
popa
mov
push
pop
jns
movsb
or
push
pop
cld
sub
jg
mov
xor
or
mov
in
push
lds
cmp
cltd
pop
dec
push
pop
jns
nop
inc
dec
fnsave
push
pop
jns
xchg
jns
mov
std
lea
hlt
mov
jns
xchg
push
and
push
mov
add
leave
mov
dec
sarl
pop
xchg
pop
pop
cmp
iret
lahf
aas
call
cmp
adc
lret
arpl
stc
repz
dec
cmp
push
or
jp
push
fdivrp
pop
les
push
mov
sub
push
mov
mov
scas
sub
jns
adc
les
lret
mov
mov
pop
xchg
jp
scas
mov
ret
push
scas
add
inc
out
dec
xor
pop
icebp
mov
dec
fstpt
mov
cld
movsb
xor
out
adcl
dec
icebp
jp
lret
sub
push
fdivrs
cs
jo
push
scas
mov
subl
sub
push
int3
pop
jg
lea
loopne
or
stos
repz
mov
out
lahf
aas
mov
std
xor
sbb
fldt
div
orl
sub
into
pop
jmp
pop
sarl
mov
stc
jb
jle
idiv
jle
cs
shrl
lahf
aas
jg
in
mov
mov
dec
in
lcall
in
sub
and
xlat
loopne
in
sub
sub
movsl
xchg
daa
jnp
sti
aam
jns
push
lds
pusha
sub
incb
mov
jle
or
scas
gs
sbb
jecxz
adc
in
push
fwait
jp
imul
add
lahf
ja
pop
jns
cmc
cmp
xchg
add
mov
in
aas
popf
add
aaa
mov
lret
or
scas
cltd
daa
cwtl
pop
dec
xchg
sub
test
xchg
push
dec
mov
cmp
cmpxchg
push
mov
stos
in
sub
jle
jne
dec
fistpll
lret
jo
loop
pop
clc
in
repnz
sub
in
jnp,pn
out
fists
das
mov
in
cmp
imulb
xchg
sub
jle
or
pop
leave
jecxz
out
push
mov
scas
mov
lods
xor
cmpsb
cmp
push
leave
sti
repnz
enter
and
lahf
lret
mov
jmp
inc
xor
stos
sbb
icebp
clc
inc
out
xor
mov
and
pop
jmp
decb
in
cs
rorb
cmc
in
iret
lods
jae
ljmp
scas
or
xchg
sub
mov
pop
or
das
mov
scas
mov
pop
das
nop
sbb
sbb
push
fimuls
jle
jmp
in
mov
mov
out
pop
pop
mov
xchg
repnz
mov
bound
pop
jecxz
xor
mov
sbb
pushf
jl
lret
pop
scas
mov
out
subb
sub
mov
in
or
andb
sub
outsl
push
pop
jns
sar
icebp
pushf
inc
mov
mov
fstpl
in
cmp
push
popf
or
mov
sub
in
das
push
pop
clc
pop
ret
lret
iret
dec
jmp
ret
pop
jns
sbb
rorl
sbb
pop
jns
fisttpll
sub
push
mov
xlat
sbb
push
aaa
scas
jg
inc
mov
push
pop
jns
arpl
lcall
mov
dec
lds
in
sbb
push
sbb
jns
popa
mov
in
push
jno
mov
test
dec
pop
cwtl
ja
gs
xor
mov
pushf
in
jl
xchg
pop
daa
negl
in
pop
test
xchg
hlt
push
pop
enter
in
push
mov
outsl
pusha
jmp
stos
sub
sub
jg
jns
out
cmp
dec
xchg
push
pop
jns
bnd
push
cmc
cld
jbe
jne
aad
jp
jns
xchg
jae
pop
fcmovnbe
inc
rorb
call
data16
mov
cli
lock
in
pop
jns
popf
lock
inc
jbe
ret
and
adc
lea
lock
push
lods
ds
cmp
test
or
dec
and
xor
sub
bound
inc
push
sub
out
jb
push
test
fsubl
scas
mov
and
ja
jae
xor
fldenv
data16
mov
lret
cs
xor
pop
sbb
pop
out
mov
lea
mov
sbb
mov
jmp
pop
fnop
outsb
lret
xchg
ja
aas
outsl
sub
insb
sbb
mov
testl
mov
repz
out
jns
xchg
cmp
mov
push
mov
mov
outsl
cli
xor
cld
push
divl
shll
dec
xor
sahf
stos
jno
or
jno
cmp
add
popf
pop
jns
frstor
lcall
cmpsl
sub
neg
aaa
mov
in
push
aas
subl
ret
pop
xor
inc
std
pop
sbbb
mov
popa
jmp
push
sahf
and
xchg
pop
fidivrl
jg
cld
cmpsb
mov
inc
lahf
and
jle
mov
and
lahf
mov
pop
lods
mov
sarb
cld
stc
jno
je
xchg
adcb
add
mov
cwtl
stos
dec
and
sub
pop
dec
ret
sub
repnz
inc
int
call
xor
stc
repz
cvtpi2ps
jp
mov
imul
jg
jge
inc
repnz
gs
out
inc
fists
or
rcrl
stc
dec
mov
pop
dec
test
in
jns
xchg
lret
mov
xor
cmpsl
xor
xchg
push
imul
cs
push
movsl
dec
fists
into
push
jae
leave
jb
stc
fmul
lahf
jns
fnstsw
arpl
dec
hlt
lods
das
enter
jle
jl
jl
sbb
push
out
js
aaa
insl
lret
iret
lahf
aas
addr16
pop
add
cld
inc
xchg
push
fsubp
rcrl
inc
fdivrs
orl
lret
sub
sub
test
or
test
scas
sub
inc
sub
inc
sub
sub
push
push
sarl
lock
xor
add
sub
inc
push
loope
sub
lock
jo
sub
sub
or
mov
lea
sub
sub
pop
push
mov
sub
in
cmp
mov
push
add
pop
mov
outsl
sub
pop
adc
pop
sub
sub
sub
push
xor
sub
sub
push
rorl
sub
mov
pop
sub
das
test
pop
sub
dec
sub
sub
mov
outsl
sub
imul
sub
inc
sub
sub
push
push
rorl
adcl
test
das
sub
push
add
pop
loope
test
sbb
xchg
push
sub
sub
test
pop
sub
cmp
pop
sub
sub
mov
incl
add
add
cmp
sub
xchg
dec
sub
sub
mov
pop
insl
decb
mov
mov
jg
sub
lahf
sub
sub
push
rcrl
sub
movsb
addb
sub
sub
unpckhps
sub
add
sbb
iret
sub
cmp
dec
sub
sub
or
add
sbb
mov
shr
pop
sub
inc
sub
jg
repz
jne
push
js
shrl
sub
movsb
andb
sub
test
add
push
sub
sub
orb
push
sub
sub
or
sub
outsl
adc
inc
sub
push
mov
sub
dec
test
adc
mov
pop
sub
or
pop
inc
add
sub
dec
push
loope
sub
add
sub
sub
inc
test
roll
pop
pop
sub
xchg
push
cmp
sub
into
aad
jae
dec
test
adc
push
xor
lock
xorb
daa
test
iret
sub
dec
add
and
sub
sub
inc
test
or
js
sub
mov
sub
dec
test
adc
add
cmp
sub
orl
push
sub
sub
adc
jg
stos
pusha
and
int3
jae
mov
sub
stos
pusha
add
iret
pop
dec
test
in
adc
loop
rcrl
cmp
ret
aas
sub
stos
loopne
adc
sahf
or
das
aas
jmp
pop
sub
add
cmp
sub
sub
jo
pop
jg
cvttps2pi
adcb
add
or
cmp
sub
test
sub
js
cmp
lahf
sub
or
sub
jl
loopne
sub
sub
push
rorl
sub
push
xor
test
adc
cmp
inc
sub
sub
mov
scas
sub
or
pushf
cvttps2pi
clc
push
loope
sub
sub
or
je
sub
pop
orb
movsl
ret
jg
scas
test
pop
sub
dec
add
or
xchg
iret
mov
and
sub
test
outsl
sub
or
cmp
sub
and
scas
sub
adc
out
sub
test
and
inc
add
push
rorl
sub
or
outsl
sub
loope
loopne
sub
sub
orb
cvttps2pi
adc
sub
push
loope
test
sub
xchg
pop
outsl
sub
inc
adc
sub
add
into
xchg
jg
fsubrs
and
pop
sub
sub
sub
mov
dec
sub
or
inc
add
sub
add
js
sub
orl
push
sub
sub
test
jg
mov
sub
sub
cmp
lock
sub
sub
orb
aas
sub
jo
or
lods
sbb
dec
daa
adc
sub
push
loope
test
sub
xchg
or
ljmp
or
sub
push
loope
test
sub
xchg
or
lahf
sub
mov
dec
sub
and
dec
add
sub
mov
dec
sub
push
xor
pop
sub
adc
cvttps2pi
sub
psubb
dec
sub
sub
add
sub
jl
pusha
fildll
sub
test
pop
ljmp
add
sub
pop
test
aas
sub
adc
fdivr
dec
sub
adc
push
sub
sub
cmp
mov
sahf
push
sub
sub
sub
test
sub
sub
pop
sub
push
jo
or
sub
or
sub
in
mov
in
or
lahf
ror
scas
or
loope
add
or
xlat
outsl
mov
sub
mov
sub
sub
dec
test
scas
sub
orl
sub
adc
ljmp
inc
test
dec
sub
js
mov
sti
mov
sub
sub
or
dec
test
test
sub
clc
push
loope
sub
sub
mov
pop
dec
add
sub
ret
out
sub
sub
dec
mov
pushf
sub
outsl
test
push
sub
sub
push
loope
add
push
push
mov
rcll
cmp
sub
orb
push
sub
sub
xor
sub
sbb
cmpsl
sub
sub
xchg
push
js
sub
sub
adcb
adc
sub
sub
test
sub
xchg
push
js
sub
and
sub
sub
add
orb
outsl
sub
inc
mov
dec
pop
cwtl
push
push
clc
push
sub
sub
ret
adc
daa
pop
test
mov
orb
sub
sub
cs
mov
sub
sub
inc
test
lahf
sub
orb
sub
sub
aaa
push
mov
sub
movsb
adcb
cmp
lock
sub
sub
test
ud0
mov
lahf
sub
sbb
lock
sub
sub
push
rorl
fists
or
sub
inc
adc
dec
cmp
ret
das
inc
ss
xchg
or
push
sub
sub
test
mov
roll
pop
scas
sub
xor
sub
sub
adc
pop
sub
test
scas
xchg
or
sub
sub
cs
lock
sub
sub
test
add
sub
push
roll
out
sub
orb
pop
sub
sub
sub
mov
pusha
scas
sub
iret
sbb
sub
sub
xchg
or
pop
sub
dec
test
mov
sub
inc
add
test
mov
sub
pop
push
loope
sub
mov
cvttps2pi
mov
decb
xor
mov
loope
add
loopne
clc
push
sub
sub
dec
add
sub
push
mov
or
sub
add
js
loope
sub
sub
add
cmpl
cmp
pop
sub
pushf
jmp
pop
pop
xor
mov
mov
push
rcrl
sub
push
loope
incl
jg
in
push
sub
cpuid
cmp
dec
sub
sub
push
xor
xor
pop
dec
aas
fisttps
and
mov
push
rorl
pop
sub
push
push
cmp
sub
sub
test
and
incl
pop
sub
adcl
lods
movsb
sub
sub
jl
pusha
pop
sub
sub
push
rcll
sub
cmp
cs
sub
sub
push
loope
sub
sub
push
rcrl
sub
push
cmp
ja
or
inc
bswap
dec
sub
adc
jg
cmp
daa
out
sub
cmpsl
xor
adc
jg
ljmp
push
push
loope
sub
sub
movsb
ret
sub
sub
add
or
sub
pop
sub
ljmp
push
jo
or
sub
mov
mov
sub
sub
orb
setg
hlt
shrl
lock
lock
sub
sub
inc
add
sahf
push
cmp
aas
sub
pop
popa
sub
cmp
pop
ljmp
sub
jg
sub
pop
dec
lock
jo
or
sub
sub
jg
sub
dec
in
lret
test
pop
sub
sub
push
mov
loope
pusha
dec
sub
sub
test
mov
js
add
xchg
or
sub
sub
adc
das
sub
dec
test
fildll
push
roll
sub
sub
xchg
or
sub
add
or
sub
sub
add
push
sub
dec
sub
sub
or
or
test
cld
mov
aas
mov
or
pandn
sbb
xchg
sub
sub
push
adc
sub
and
in
das
push
push
add
or
sub
sub
cmp
jo
sub
sub
push
rcrl
pop
mov
dec
sub
unpckhps
or
das
sub
and
sub
add
sbb
js
sub
sub
pop
push
sarl
test
sub
test
pop
sub
inc
sub
iret
mov
dec
sub
test
mov
pop
scas
sub
xchg
or
sub
sub
js
mov
sub
call
addb
sub
sub
push
rorl
nopl
sub
push
rorl
cvttps2pi
sub
sub
inc
sub
sub
push
roll
sub
sub
nop
or
sub
unpckhps
push
sub
sub
sub
test
sub
orb
pop
sub
or
sbb
orb
inc
stc
addl
cmp
lahf
sub
dec
test
iret
sub
sahf
or
sub
sub
inc
test
adc
xchg
push
loope
sub
lock
ret
iret
sub
dec
add
sub
cmp
dec
sub
sub
movsl
ret
sub
test
dec
sub
adc
sbb
sub
xchg
push
push
sub
sub
push
cmp
pop
inc
jbe
sub
inc
test
adc
pop
push
loope
sub
pusha
or
aas
inc
add
sub
dec
add
mov
sub
pop
test
dec
out
call
pop
sub
sub
pop
push
cmp
das
add
sub
add
dec
mov
dec
sub
sub
mov
das
sub
add
add
cmp
sub
sub
loopne
sarl
adc
push
dec
sub
sub
inc
subb
call
pop
xchg
ja
repnz
lods
xchg
add
push
outsl
lahf
pop
sbb
in
xor
sbb
ja
aas
mov
xor
lods
repnz
int
repz
lahf
fcmovnb
scas
xchg
insl
mov
sbb
mov
fs
and
xchg
aaa
or
sahf
test
out
pop
sbb
xor
ss
outsl
cmp
sbb
sahf
repz
scas
mov
rclb
inc
mov
mov
sub
cmp
lret
lret
test
push
mov
sub
int3
pop
sti
cmp
jne
adc
out
loopne
xchg
sub
lea
cld
stc
repz
scas
fldenv
cli
popl
cld
dec
pop
out
pop
dec
sub
insb
dec
in
jnp
sahf
lods
mov
mov
pop
pop
mov
fnstcw
sbb
mov
xchg
setle
lret
add
out
pusha
jo
xchg
test
notl
addl
mov
mov
nop
scas
std
sbbb
cmc
push
or
jns
xchg
pop
popl
test
call
mul
xchg
push
pop
mov
cmpsb
xchg
sub
lock
cld
jb
scas
fwait
hlt
ja
mov
aas
and
mov
iret
loop
xchg
jns
xchg
ja
cmp
mov
psrld
push
ret
fcmove
in
push
pop
ljmp
cmp
jmp
pop
icebp
pop
jb
scas
ja
pop
insl
mov
jg
fstpt
jg
repz
push
pop
jns
xchg
mov
jge
in
outsb
jno
ljmp
xchg
push
xor
and
xor
xchg
push
pop
leave
sbb
inc
mov
xchg
aam
clc
fistps
pop
jns
mov
movsb
xchg
mov
mov
mov
ss
cld
push
out
stc
nop
push
lods
imulb
xor
mov
je
outsb
jecxz
stc
repz
cmpsb
cmp
repnz
fs
mov
cld
mov
mov
or
sahf
test
out
lahf
test
mov
or
adc
inc
add
lea
cld
stc
out
sub
shrl
lret
int3
mov
pop
vpsrlw
mov
cld
stos
push
aas
xchg
sub
push
test
scas
mov
pop
sti
and
mov
mov
repnz
les
push
sbb
mov
or
out
lret
sub
cmpsb
add
jg
jno
xor
sub
pop
cmp
pop
sub
mul
jno
lcall
es
adc
repz
mov
push
mov
lock
mov
mov
dec
fs
push
sub
adc
sub
lret
sub
jae
iret
add
out
push
cmpsb
inc
lret
cmc
cmc
test
jg
cld
call
push
iret
int3
loop
cmpb
lods
das
push
pop
add
nop
mov
jo
xor
fwait
pop
aad
loope
cwtl
or
repz
or
fiaddl
clc
jl
jg
cld
in
iret
das
je
xchg
bnd
out
mov
repz
lahf
sbb
lds
push
and
mov
cld
stc
pop
adc
dec
loope
push
mov
repnz
into
sbb
imull
jno
out
filds
pushl
loopne
mov
mov
shrb
mov
fbld
lret
rclb
sbb
stos
popa
or
lret
sub
out
insl
das
and
sbb
push
fsubrp
and
lahf
dec
jno
inc
pushf
pop
jns
xchg
pop
ret
push
ret
icebp
push
mov
in
push
xlat
or
stos
mov
outsb
dec
adc
xor
ficoml
mov
js
iret
pop
mov
mov
leave
mov
mov
mov
xchg
outsl
mov
push
cli
xor
cld
cld
stc
mov
jge
pop
mov
xor
mov
dec
fidivs
mov
test
das
mov
inc
jg
sahf
adc
cld
or
mov
es
ljmp
mov
aas
out
aas
icebp
xchg
fnstenv
outsb
aas
and
pop
sarl
cs
gs
push
xor
loopne
dec
or
jg
add
xlat
inc
sub
out
lods
dec
repz
lahf
ljmp
shrb
cld
stc
outsl
shll
fdivp
push
jge
sub
sbb
in
ja
pop
pop
add
mov
loope
leave
xchg
push
pop
jns
and
jnp
popl
lea
push
pop
jns
pop
dec
push
and
inc
and
in
loop
cmc
std
cmc
push
mov
pushf
scas
out
xor
xchg
ja
or
dec
add
cltd
add
jns
mov
xchg
or
pop
jns
aam
sub
jmp
sarl
sub
add
mov
mov
sarl
stos
clc
out
dec
lahf
aas
call
push
mov
js
lret
es
pop
stc
repz
add
inc
xchg
pop
adc
cwtl
sbb
std
sub
aas
jg
cld
addr16
movsl
mov
cmpsl
push
jecxz
das
sbb
dec
jne
dec
hlt
push
xor
ffreep
lret
iret
stos
or
cmp
scas
scas
mov
rorb
xor
stos
cmp
pop
mov
ret
idiv
cmpsl
je
mov
sub
jnp
jmp
xor
pop
sti
sub
mov
push
dec
mov
lahf
push
mov
out
adc
dec
jge
sub
xor
aad
pop
repnz
push
idivl
push
jae
ljmp
lret
mov
mull
mov
mov
pop
inc
lea
outsl
loopne
mov
imul
cld
cld
stc
repz
pop
pop
mov
pop
push
lret
lea
xor
out
aas
test
repz
xchg
call
outsb
in
jnp
jg
xchg
inc
out
cmp
mov
sahf
je
or
iret
test
scas
mov
mov
mov
stos
aaa
push
jecxz
loop
sub
loop
adc
mov
cld
stc
repz
cld
adc
dec
jmp
icebp
stos
ja
iret
lahf
aas
jg
aad
in
xor
dec
sahf
stc
mov
push
jae
dec
add
sbb
and
inc
xchg
aas
jg
xlat
aas
mov
pop
or
mov
sti
push
pop
iret
test
scas
test
mov
mov
das
scas
mov
mov
push
ss
inc
mov
jb
xchg
xchg
adc
out
or
mov
das
push
ficomps
ret
or
sub
sub
sbb
add
mov
jmp
cmp
scas
jl
sub
cld
stc
add
jg
jae
sahf
xchg
lahf
xor
push
push
cmp
push
mov
or
push
cld
stc
repz
xor
add
jle
jnp
inc
int3
adc
adcl
pop
jmp
fildll
fcompl
out
les
fiadds
sbb
lcall
clc
cli
xlat
call
setge
clc
pop
jns
xchg
push
mov
pop
lods
xor
and
jl
hlt
add
loope
inc
xlat
xor
mov
jp
std
sbb
pop
jge
jns
fnstsw
imull
sar
repnz
mov
js
shll
xchg
insb
add
cld
rorb
cmp
ds
fwait
cmc
out
pop
cmpsl
pop
add
je
jg
jno
ds
xor
mov
xchg
pop
pop
jg
cld
stc
inc
mov
inc
dec
pop
xlat
sti
mov
pushf
inc
push
orb
aam
imul
mov
push
push
stc
add
cmp
fisubs
mov
test
test
int
cltd
pop
jns
xchg
cmp
aas
mov
fldl
cs
mov
mov
repnz
and
jp
clc
in
xchg
and
mov
mov
mov
fidivrs
cmp
mov
inc
jns
xchg
push
push
popf
xchg
pop
inc
in
fmull
mov
pop
adc
pop
mov
aam
in
ja
mov
loop
mov
outsl
xor
idiv
je
mov
jno
sub
jns
inc
lods
imul
lahf
jg
cmp
and
cmp
sti
jne
mov
mov
subb
lret
or
xchg
add
js
sub
xchg
call
adc
repnz
leave
loopne,pn
pop
popa
scas
cmpsl
dec
push
pop
cmp
mov
sub
shlb
pop
imul
xlat
repnz
pop
inc
repnz
xchg
push
ljmp
and
lods
daa
xchg
jg
ret
pop
mov
adc
xchg
jno
mov
jg
cld
jle
movsb
loop
mov
push
aam
mov
push
adc
out
lahf
sbb
adc
push
pop
jae
loop
cld
stc
pop
adc
jl
lcall
adc
mov
hlt
pop
out
lahf
aas
adc
inc
adc
mov
cld
stc
repz
and
stc
adc
dec
cld
xor
push
xchg
and
push
outsb
das
addr16
mov
fdivr
rcll
pop
loop
mov
lret
js
adc
push
mov
movsb
xor
repnz
ljmpw
dec
ror
push
jno
xchg
ja
inc
pop
mov
sbb
add
fs
sub
or
dec
or
lock
in
add
repnz
repnz
jge
dec
repnz
insl
cld
cli
imul
push
aas
jns
dec
fimull
lret
sbb
jp
gs
in
and
lret
rorl
jge
jns
xchg
dec
stos
loop
xchg
ds
mov
mov
xchg
push
push
movsb
in
pusha
xor
fcomps
or
std
push
sahf
loop
scas
jg
sub
jbe
or
stos
inc
loop
sbbl
stc
repz
jno
cmp
and
xchg
cmp
rclb
pop
inc
aad
sub
js
mov
xor
mov
lock
iret
aam
ret
mov
jl
es
and
add
repnz
jg
mov
or
stc
repz
jns
hlt
push
jle
jbe
data16
push
and
jle
cld
int3
movsl
ja
enter
pop
xor
lret
push
pop
add
pusha
mov
push
or
xor
mov
sub
fsubp
lret
stos
cmp
inc
fldcw
push
test
in
lret
test
rorl
inc
fiaddl
and
xchg
push
jmp
cmp
in
push
pop
adc
mov
sbb
dec
out
loop
xchg
sub
mov
pushf
lret
lea
scas
rcr
inc
xlat
mov
shrl
rcrb
stc
repz
mov
mov
faddl
mov
clc
pop
clc
clc
daa
stos
clc
scas
xor
aas
jg
cld
mov
repnz
ret
incb
das
mov
jnp
add
fwait
adc
rcrb
repz
xchg
adc
nop
or
push
seta
jg
sub
pop
cmp
outsb
lcall
ficomps
insl
data16
cli
inc
sti
pop
pop
dec
stos
push
pop
in
mov
push
xchg
in
iret
mov
es
cld
stc
repz
dec
popf
mul
and
add
jae
mov
aad
push
xor
iret
aas
mov
in
add
mov
ss
ret
inc
adc
jb
push
pusha
lock
lods
inc
loopne
mov
stos
into
dec
lret
mov
sub
jne
cld
inc
clc
repnz
jecxz
xor
mov
lahf
aas
jg
pop
sub
adc
arpl
imul
iret
or
nop
xor
xlat
je
je
imul
imul
mov
lahf
sub
jns
xchg
aaa
pushl
cmp
rorb
or
push
pop
inc
lahf
aas
push
mov
lahf
sub
push
pop
jns
out
pop
pop
out
nop
mov
adc
push
movsb
inc
xchg
push
push
in
jle
loope
aam
leave
lahf
vmread
and
push
pop
jns
pop
xor
ja
or
call
in
mov
push
xor
sub
pop
jns
xchg
int3
sti
sub
into
xchg
out
test
clc
push
jecxz
test
scas
rcrl
stos
and
inc
pop
shlb
repz
ljmp
mov
jge
mov
jg
cld
adc
addr16
jo
cmp
in
xor
lahf
dec
push
cmp
faddl
pop
lret
xchg
aas
or
xor
aaa
mov
repnz
aas
sub
into
scas
leave
loop
pop
jne
jmp
cld
sbb
mov
test
lea
out
lahf
aas
aad
push
into
imul
std
repnz
repz
out
loopne
outsb
repnz
mov
adcl
xchg
push
fisubrs
jno
mov
aam
pop
pop
jns
xchg
jnp
data16
or
inc
imulb
out
lahf
aas
mov
mov
jb
jnp
cld
stc
repz
fmuls
ret
sub
xchg
adc
fmull
xor
movsb
xchg
aas
jg
addr16
sub
rcll
call
dec
lret
xchg
push
pop
daa
xchg
cmpsl
cmp
pop
iret
pop
orl
add
stc
repz
gs
sub
lret
imul
and
jg
mov
mov
inc
mov
daa
adc
adc
cmc
ss
xchg
bnd
fdivr
mov
mov
sbbb
xchg
ja
jg
jmp
loopne
sub
pop
pop
jns
jecxz
xor
add
xorl
xchg
cmp
jmp
movlps
pop
jle
cld
scas
dec
fists
adc
mov
scas
mov
add
sbb
insl
out
jg
jnp
lret
stc
mov
iret
jmp
iret
lret
mov
rcl
lds
pop
scas
mov
cmpsb
test
cmp
and
jg
aam
int3
inc
fisubrs
cld
stc
repz
daa
in
ljmp
test
cmc
xor
das
jg
loopne
leave
lret
rclb
test
rorb
jg
lods
mov
pop
test
mov
out
mov
xchg
jp
jne
out
xchg
sub
stc
xchg
sub
xor
pop
xchg
jns
mov
scas
mov
jl
outsl
mov
cmp
jg
mov
or
das
adc
jae
xchg
inc
dec
lret
jle
hlt
dec
outsl
rorl
int3
dec
pop
es
pop
scas
mov
call
sbbb
sti
adc
das
lahf
mov
mov
push
into
cmpsl
add
sbb
inc
jns
int
fidivrs
or
aam
arpl
in
clc
add
mov
sub
int
test
fistl
adc
lahf
xchg
push
pop
jns
insb
add
jmp
lcall
fs
in
mov
cld
addl
in
fisttpll
dec
jg
sub
sub
xchg
push
push
mov
outsl
lahf
push
outsl
pop
shrb
lret
xchg
push
pop
fsubr
cmp
pop
mov
fcmove
sub
cmc
pop
and
dec
aas
out
dec
inc
stos
adc
scas
mov
les
mov
dec
adc
push
mov
hlt
lret
xor
das
aas
incl
loop
adc
rorb
test
xor
mov
cmpsb
icebp
mov
pop
call
mov
je
lock
mov
inc
xor
mov
in
xlat
sbbl
in
sub
and
test
mov
out
pop
fidivrs
pushf
mov
fstpl
add
das
push
dec
sbbl
mov
cld
stc
test
pop
xchg
cmpsl
fldcw
stc
sbb
pop
repz
add
mov
cmc
xor
stos
ret
sub
jge
mov
fxch
xchg
push
add
dec
xchg
or
fucom
lret
cmp
or
fimuls
xor
mov
fwait
je
fimuls
in
iret
lahf
aas
aas
push
xor
in
xor
adc
in
xchg
cmc
dec
test
ja
inc
outsl
dec
xchg
sub
bound
xchg
lds
and
pop
cld
fsubrs
mov
push
dec
mov
out
xchg
sub
and
sti
cltd
test
jmp
cmp
out
inc
rclb
into
or
dec
sti
repnz
xchg
adc
pusha
pop
leave
pop
mov
in
dec
sub
lret
mov
das
pop
push
cmp
add
sub
int3
add
add
mov
push
or
repnz
lcall
cld
or
ret
fs
scas
loopne
mov
lahf
aas
jg
xchg
jne
in
mov
in
pop
pop
sti
repz
or
push
fcomi
dec
bound
sarb
loopne
stos
mov
lea
lret
lods
and
or
ljmp
xchg
dec
push
push
or
repnz
jle
out
loope
cmp
xchg
mov
add
mov
jg
rolb
xchg
jg
adc
shld
stc
lods
push
cmpb
adc
jg
ficomps
xor
mov
stos
jns
xchg
pop
pop
xor
adc
aam
mov
test
lcall
aam
shrb
mov
pop
sbb
lret
out
into
push
pusha
push
repz
fldt
xchg
cmp
sub
fs
and
cwtl
mov
mov
push
notl
mov
fimull
lret
xor
and
testl
out
iret
pushf
jg
lock
dec
cmp
sub
inc
outsl
adc
pop
add
fcompl
push
pop
iret
cli
in
fs
insl
in
int
je
shrl
lret
cmpsb
ja
nop
out
or
mov
hlt
in
dec
jns
jno
cmc
popa
scas
scas
mov
pop
es
pop
xlat
int3
push
mov
repnz
xor
dec
xchg
mov
mov
popf
rclb
scas
dec
iret
pusha
stc
repz
pop
xchg
in
pusha
pop
mov
out
dec
into
rcrl
cld
fcoml
ss
ror
pushf
xchg
call
push
mov
xchg
sub
ja
sub
adc
push
cli
repnz
sub
add
mov
xchg
push
fimuls
out
and
pop
mov
ljmp
mov
test
loopne
repz
rclb
jle
lea
out
lahf
pop
out
ficomps
mov
icebp
adc
and
stc
repz
mov
pop
loopne
jg,pt
adc
cltd
xor
addr16
lret
bound
push
popl
mov
pop
addr16
cld
cld
sar
pushf
mov
pushf
dec
xchg
ret
ret
lret
mov
popa
inc
mov
sub
stos
dec
jge
push
mov
mov
stc
repnz
jle
mull
rorl
in
push
add
leave
push
popf
adc
xchg
push
pop
fbstp
pop
in
mov
clc
cmc
xchg
push
pop
jns
xor
or
or
pop
cltd
jle
lea
pop
ljmp
lea
or
dec
scas
cmp
repnz
arpl
lret
lahf
xor
jg
cli
les
scas
mov
test
outsl
repz
jge
test
sti
in
sub
adc
fucompp
cmc
jp
xor
icebp
sarb
pop
scas
aad
cmpsl
shll
push
inc
push
gs
sbb
iret
out
jne
mov
sub
stc
repz
loop
pop
sbbb
jns
cmpsb
aas
inc
adc
jg
cld
into
cmpsl
lock
mov
stc
push
call
iret
lahf
ret
xchg
jbe
jge
jb
mov
shrb
push
jg
xchg
lahf
scas
movb
xor
lahf
aas
lods
mov
sti
dec
mov
xor
repz
push
sub
insb
cmpsb
dec
int3
cmp
out
repz
addr16
int3
mov
xchg
xor
fstl
mov
lahf
aas
jg
out
pop
mov
push
jg
jbe
xor
out
mov
or
add
xrelease
stos
pop
jle
cld
mov
mov
in
xchg
mov
ja
add
jecxz
mov
add
xorl
inc
and
pop
xchg
ficompl
jg
cld
stc
cmp
aas
adc
mov
mov
sub
aas
je
jle
xchg
cmpsb
sub
loope
mov
inc
in
into
shl
repz
mov
movsb
ret
xor
scas
in
cld
aas
jg
cld
orl
dec
jne
pop
inc
adc
cmpsl
fwait
lods
notb
in
iret
lahf
xchg
cs
sub
clc
ret
mov
test
das
inc
dec
out
xchg
in
stc
repz
pop
add
insb
fiadds
sub
aas
push
fwait
push
mov
adc
std
pop
repnz
lret
mov
push
push
mov
jns
push
mov
scas
mov
push
or
out
leave
dec
imul
lret
fstpt
pop
scas
mov
fistps
outsl
sub
lods
sub
pop
lahf
mov
jle
fisubrs
repz
sbb
pop
movb
jle
sti
in
push
push
jecxz
push
dec
insl
ja
insl
cmp
out
out
sub
inc
loop
xorl
jns
pop
iret
lahf
aas
jg
mov
mov
mov
addr16
xor
fsubp
xlat
cli
repnz
inc
in
sti
stc
add
in
filds
xchg
dec
push
mov
cld
inc
popl
xchg
scas
jle
not
pushf
xchg
or
jle
das
dec
sub
mov
mov
mov
mov
adc
in
xor
incb
mov
aas
jg
cld
icebp
cmpb
out
loop
push
xchg
cmc
push
sub
call
sub
push
add
cmp
repnz
pop
aas
and
scas
sub
lods
xchg
mov
in
cmp
xor
lahf
adc
aad
push
mov
mov
lret
mov
mov
jp
pop
stc
data16
jle
repnz
xchg
mov
push
repnz
dec
ja
mov
jp
cld
aam
aam
lcall
scas
xor
test
inc
lods
dec
fucomi
mov
xchg
pushf
movswl
aas
adc
insl
pushf
icebp
cmp
sar
imul
xchg
test
jp
daa
mov
cld
ret
loope
mov
jb
and
and
jns
lret
iret
lahf
jg
insb
and
stc
fucom
adc
dec
jmp
lock
std
pushf
lea
jle
mov
jnp
cld
sub
or
push
mov
scas
mov
je
push
mov
pop
mov
and
scas
mov
lock
inc
ret
icebp
aas
cltd
fwait
mov
repnz
lods
dec
test
lods
in
mov
imul
test
mov
cld
stc
repz
sbb
pop
inc
fdiv
dec
adc
ror
lahf
aas
jg
xchg
dec
ds
push
repnz
mov
repnz
into
loopne
sar
dec
in
sbb
out
lret
sub
andb
cwtl
mov
mov
jo
outsl
iret
sbb
outsl
cmc
sbb
mov
adc
mov
cmp
sbb
insb
push
xchg
nop
fbld
push
pop
jns
insb
push
jg
xorb
xchg
es
js
xchg
es
paddw
stc
mov
test
gs
iret
out
lret
xchg
ja
mov
pop
in
adc
stc
xor
inc
mov
das
sub
mov
jl
int3
and
push
in
comiss
lahf
movsl
jnp
gs
callw
repnz
mov
imul
push
and
pop
adc
xchg
inc
lock
fisttpll
adc
push
in
dec
idivl
xchg
dec
inc
fisubrl
arpl
or
in
xchg
in
cmp
push
ss
mov
sbb
xchg
push
push
fidivs
jnp
repz
arpl
mov
outsb
fwait
bound
mov
lret
mov
sbb
push
jo
push
das
scas
mov
movsl
repnz
iret
push
jnp
std
std
adc
pop
getsec
mov
add
int
pop
ja
mov
scas
mov
test
imul
imul
lret
mov
shlb
xchg
rolb
loope
xlat
repnz
jp
push
mov
out
je
les
pop
cld
inc
cmp
sub
jns
in
outsl
add
lret
mov
mov
inc
in
sub
push
gs
fcmovb
mulb
xchg
sbb
scas
mov
sbb
cmpsl
cld
xor
mov
das
sbb
das
jnp
mov
inc
lret
xchg
sub
pop
mov
add
mov
and
repnz
push
pusha
fdivrs
jmp
mov
mov
inc
add
clc
xor
es
aas
mov
ret
mov
iret
vpcomud
in
sub
repz
push
loope
xchg
cs
ret
pop
sub
mov
dec
add
dec
mov
inc
and
pop
cld
sub
xor
ror
xor
push
jbe
cld
and
dec
ja
pop
jns
cmp
call
pop
xchg
pop
aas
mov
les
jnp
data16
xchg
negb
inc
pop
jmp
xchg
je
std
push
jg
fidivrs
xchg
ja
mov
loopne
out
sbb
push
pop
jecxz
xchg
lahf
cmp
add
rcr
mov
mov
pop
scas
or
inc
imul
ds
int
cli
iret
mov
jg
cld
cmp
jns
jbe
mov
mov
lcall
mov
and
cld
jecxz
lods
cmp
ss
jle
cld
stc
xlat
loop
sbb
mov
sub
inc
je
cs
sub
repnz
jecxz
fadds
out
fidivl
cld
stc
mov
enter
push
mov
lahf
aas
jg
cmp
outsl
insl
mov
test
jns
std
mov
cmp
pop
int3
cmp
xchg
push
enter
lret
dec
fildll
ja
pop
jns
push
fstl
pop
ja
xchg
sub
jns
xchg
jl
mov
mov
sarl
xchg
push
mov
rorl
sbb
push
pop
inc
cmp
jb
repnz
pop
jns
sahf
push
dec
pop
push
into
jb
ja
mov
mov
out
imul
outsl
and
xor
in
adcb
lods
pop
mul
in
ja
fiaddl
adc
aas
or
jns
or
push
daa
sbb
sub
in
or
sbb
stc
pop
sti
xchg
pop
pop
cli
jns
xchg
push
fldl
sub
sub
cmp
add
add
cltd
sti
xchg
lahf
xchg
lahf
jmp
sub
mov
lock
in
outsl
xchg
fcoml
or
sub
mov
std
repnz
xchg
mov
mov
out
pop
andb
out
add
inc
dec
mov
data16
xchg
xchg
add
scas
and
insb
pop
cld
scas
xor
subb
or
sub
repz
aam
mov
enter
repz
lcall
fs
push
sbb
and
pop
xchg
sti
in
sub
cmp
xor
lret
mov
rcrb
das
scas
mov
loopne
pusha
outsl
int
gs
scas
jg
cmp
icebp
sub
stos
mov
inc
lret
push
pop
inc
xor
push
sbb
jne
and
push
dec
jge
ja
iret
out
adc
aam
popf
js
aas
adc
mov
xor
push
or
xchg
lahf
aas
cwtl
mov
xchg
pop
stc
pop
shrb
and
jbe
icebp
repnz
mov
jge
jnp
repnz
shrb
jl
sahf
sbb
test
in
push
fdivrl
xchg
xor
mov
cmp
into
pushf
pop
xchg
arpl
sub
rcrl
je
pop
or
pushl
mov
mov
pop
mov
cmp
add
push
das
jle,pn
pop
jns
add
xchg
fwait
clc
mov
push
mov
pop
jns
xchg
std
popf
lret
cmp
inc
pushf
cmc
mov
jns
xchg
push
pop
xlat
dec
out
out
jge
outsl
movsl
xchg
push
pop
aam
jbe
bound
mov
pop
mov
or
sti
repnz
out
movsb
mov
dec
lock
and
lahf
int3
and
jle
cmc
hlt
add
pop
icebp
jae
pop
int3
mov
cltd
cli
repnz
in
les
iret
les
cld
push
jg
cld
inc
jnp
cmp
hlt
xchg
hlt
sti
cwtl
repz
lahf
movsl
and
ljmp
jge
pop
xor
mov
stc
stc
sub
cwtl
mov
add
jg
repz
call
mov
cli
and
jle
js
pop
sub
sbb
xor
imul
mull
movsb
cs
loope
mov
aas
or
jg
iret
nop
cmpsb
bound
in
movsl
lret
out
lahf
popf
add
pop
push
rolb
iret
mov
push
push
shll
movntq
jge
stc
repz
enter
dec
aam
and
mov
aas
jg
sub
or
inc
lods
xchg
mov
out
lahf
pushw
mov
push
dec
insl
pop
scas
mov
pop
cwtl
enter
sub
jnp
sub
fsubrp
lret
sub
orl
movsb
or
pop
scas
decb
enter
mov
mov
ficomps
mull
cmp
adc
in
lcall
lret
inc
lahf
aas
jg
push
jae
in
jnp
out
das
sub
push
dec
add
lret
iret
or
sbbb
or
lret
sbb
pop
mov
aas
jg
inc
fwait
insl
and
push
jae
push
jp
push
stc
stc
repz
xor
adc
aaa
dec
add
mov
mov
dec
adc
fwait
add
lds
xchg
push
cmp
loop
sbb
sub
std
std
cmp
xchg
cld
out
or
xor
push
jb
xchg
push
mov
dec
cli
mov
push
fdivrp
movsl
insl
ljmp
dec
popf
jl
jno
pop
jns
aam
push
addr16
or
out
das
fcomps
std
sahf
mov
mov
repnz
nop
add
daa
push
xor
mov
jg
cld
arpl
out
pop
pop
dec
sbbl
xor
lahf
push
lret
adc
jae
pop
jo
jmp
and
jg
cld
stc
pop
mov
cmp
mov
adcb
test
das
aas
jg
or
sahf
inc
in
out
lahf
mov
in
movsb
loop
shll
clc
xor
xchg
outsl
out
out
cmp
das
lahf
aas
jg
push
shll
mov
pop
inc
std
jb
fisttpll
sbb
shl
std
xor
testb
ficomps
daa
push
adc
out
decb
fstps
hlt
scas
dec
stos
popf
mov
outsl
out
sub
fldl
pushf
push
pop
pop
push
scas
mov
outsl
push
cmpsl
in
or
sbb
cs
mov
inc
roll
xchg
cld
cltd
fisubs
or
mov
add
inc
push
out
lahf
inc
ror
push
mov
fiaddl
stc
push
into
jmp
mov
inc
adc
out
lahf
aas
gs
sub
mov
cld
stc
repz
add
cltd
rcrl
cltd
cmp
push
dec
iret
lahf
aas
jg
inc
es
rcrb
or
in
imul
repnz
shlb
daa
nop
xchg
jmp
rcrb
sbb
xchg
push
pop
jns
pop
repz
in
add
mov
pop
jns
scas
and
scas
test
inc
inc
mov
fisubs
pop
pop
jns
xchg
jle
cmp
pop
clc
jle
xchg
inc
cli
sbb
mov
stc
cld
jle
sub
mov
pop
mov
cltd
jns
adc
cmpb
lods
xchg
and
and
data16
and
aad
subl
repnz
sbb
imul
and
scas
sbb
movsb
in
psubusb
flds
lret
mov
lahf
xchg
mov
push
fwait
clc
sti
in
lret
out
inc
pop
getsec
mov
ds
inc
call
dec
sub
js
popf
or
mov
in
data16
out
cmp
lret
popa
or
aas
loop
or
ret
aad
leave
popl
pop
mov
cld
add
out
xchg
fistpll
jle
aas
cmp
mov
mov
push
jg
aas
mov
in
popf
mov
out
stos
pop
outsl
cmpsb
ja
pop
jns
xchg
lcall
adc
ds
xchg
push
lret
out
jb
lret
cmc
xchg
in
emms
jg
pop
pop
push
mov
dec
iret
xchg
jb
pop
jns
xchg
sub
pop
mov
dec
fwait
mov
out
lret
dec
aam
xchg
dec
xor
into
and
in
push
pop
dec
cltd
lahf
ds
xchg
push
mov
ficoms
test
leave
push
sbb
pop
shl
add
in
cmpsl
inc
sbb
movsl
push
cmc
imul
out
shrb
fs
dec
push
and
pop
stc
cld
stc
repz
movsb
fs
pop
inc
push
andb
jg
pop
jle
sti
lods
sub
cmp
mov
mov
in
lahf
mov
loop
rorb
xor
div
out
fucomip
fistpll
dec
mov
lcall
or
iret
test
in
pop
jns
ret
lahf
mov
push
fbld
pop
add
xchg
push
out
xor
pop
cmpb
fimuls
inc
fisubrs
ret
adc
dec
cli
mov
jg
pusha
rcll
imul
rorl
lcall
outsl
iret
pop
cmc
xorb
sub
sub
mov
xchg
cmp
shll
inc
jne
pop
pop
movsb
pop
shr
dec
jg
out
fisttps
shrb
lret
bound
push
fdivrp
out
and
cmpsb
pop
xor
pop
insb
jmp
jo
in
push
push
fisttps
outsb
in
push
fimuls
dec
lret
mov
xchg
ja
pop
jns
push
mov
inc
stos
fsubs
mov
jns
in
ret
mov
mov
and
mov
dec
adc
jle
stos
pop
incb
les
add
xchg
aas
add
fbld
jo
mov
lret
mov
sbb
repnz
jle
call
push
mov
adc
add
in
and
aaa
ret
and
pavgb
popa
push
xchg
scas
mov
mov
mov
mov
es
sub
adc
pop
and
pushf
scas
in
movsl
mov
jl
or
test
jl
ja
fidivrs
sahf
lret
and
rclb
add
aas
jg
mov
push
xor
mov
jmp
iret
pop
sub
jle
jge
stc
repz
sbb
xchg
cli
pop
cmpb
decb
fisttps
inc
mov
das
aas
jg
cmp
shll
clts
push
repz
cs
add
xrelease
cmc
insl
jl
stc
push
mov
adc
mov
jmp
push
das
jg
jno
cmpsb
addr16
fcoml
ljmp
push
pop
fisubrl
and
pop
cld
stc
repz
add
mov
fistps
cmp
lahf
aas
jg
mov
pop
cmpsb
xor
xchg
test
scas
mov
filds
in
fsubp
fmull
into
outsl
add
orb
das
aas
dec
mov
push
lods
push
roll
shr
xchg
iret
pmaxsw
adc
pop
or
in
pop
outsb
or
dec
in
push
daa
jns,pt
fstpl
mov
insl
jb
rorl
push
jecxz
fcoml
repz
push
pop
and
dec
shlb
dec
lea
pop
jns
and
lret
push
je
pop
in
or
out
shrb
stc
push
push
push
cmp
repz
into
mov
shlb
mov
and
filds
and
clc
repnz
lret
in
nop
lea
lods
jp
aas
stc
repz
ficomps
arpl
int
dec
push
adc
lret
jmp
adc
cmp
test
lret
sub
jl
jns
dec
sbb
lahf
movsl
cmpsb
jp
jecxz
enter
ret
pop
sub
inc
dec
push
fadd
jmp
push
lret
outsl
pop
inc
incl
jmp
jae
lcall
loopne
jle
or
scas
mov
mov
push
pop
das
xor
in
sub
or
lahf
aas
adc
pop
cld
lea
inc
es
lock
repnz
push
repnz
fdivrp
sti
repnz
or
sub
pop
dec
call
inc
out
fdivs
add
and
jmp
cld
stc
mov
jns
xchg
sbb
hlt
or
dec
inc
lea
das
jg
ss
out
xor
out
lahf
cmp
push
xchg
and
addl
and
add
xlat
pushf
bswap
addr16
dec
mov
lret
dec
mov
cmp
dec
lcall
loope
and
mov
and
xchg
addr16
pop
out
mov
sub
adc
and
sub
in
loop
jecxz
out
or
loope
push
cmc
jb
and
fadd
lahf
outsl
mov
jns
iret
pop
sbb
cmpsl
das
mov
ret
cld
cld
sbb
call
fdecstp
mov
lahf
aas
jg
mov
push
xor
push
jbe
pop
ret
fwait
mov
sbb
stos
jnp
cli
in
cmp
jae
xchg
fistpll
stos
aas
jg
cld
push
adc
flds
sahf
or
pop
ret
test
or
out
inc
lods
mov
mov
cmc
in
push
repz
mov
pop
out
jg
cld
stc
add
mov
shll
xlat
pandn
jae
mov
idiv
repz
int
or
bound
adc
rolb
jle
cld
hlt
xchg
xchg
and
gs
lahf
aas
mov
xchg
sbb
sbb
stc
repz
in
dec
xchg
orl
repz
pop
and
mov
repnz
push
jp
repnz
sti
mov
jmp
pop
mov
push
pop
jns
ret
jno
cmpsl
vcvtsi2ss
or
add
stc
mov
lret
lret
imul
mov
cld
sbb
push
mov
jns
dec
and
ss
sbb
jg
loopne
fisttpll
pop
lret
xchg
aaa
scas
mov
int
pusha
adc
shl
xor
sbb
inc
aam
ja
repnz
sbb
mov
lcall
dec
sti
hlt
nop
jne
shll
mov
enter
mov
mov
aaa
mov
out
dec
loopne
xor
xor
decl
mov
mov
sbb
lret
popa
jg
aas
mov
sbbb
out
outsl
out
fsub
iret
movsb
inc
mov
test
ss
repz
cld
stc
repz
cs
dec
repz
popf
push
incl
iret
lahf
aas
jg
sbb
jge
xor
mov
sub
jbe
hlt
in
dec
aas
jmp
ds
mov
out
loope
lods
adc
fdivrl
xchg
negb
jne
add
xchg
mov
mov
iret
push
cltd
xchg
lods
dec
mov
int3
dec
pop
clc
repnz
test
aaa
mov
out
sub
and
pop
mov
aas
cmpsl
jg
dec
std
repz
fstps
cmc
jle
sbb
cmp
mov
mov
pop
xor
outsl
xor
aaa
ret
mov
adc
xchg
pushw
cltd
mov
sbb
sbb
push
popa
loope
push
mov
or
lahf
mov
enter
in
insl
cwtl
dec
or
in
out
add
cmp
jne
pop
in
pop
xor
scas
jb
and
push
dec
rcrl
lahf
mov
lret
cmp
push
fwait
scas
jg,pt
sub
lret
jle
pop
mov
nop
stos
lret
mov
add
repnz
shll
mov
out
adc
xchg
fwait
push
fld
mov
dec
push
repnz
fwait
fs
xlat
lret
out
xchg
sub
cmp
pop
or
loopne
xchg
mov
add
lahf
lods
xor
adc
inc
mov
in
cmpsb
pop
scas
push
mov
pop
xor
ret
push
pop
jns
or
cwtl
or
in
lea
pop
jg
fsubr
jmp
in
ja
mov
rcll
faddl
in
pop
leave
lahf
gs
lret
mov
aas
push
ret
insl
lahf
mov
rol
mov
dec
mov
arpl
repz
push
mov
xor
arpl
sub
push
cmp
pop
or
dec
jmp
mov
out
shll
aad
jmp
pop
jmp
sub
mov
test
fst
sbb
gs
pop
icebp
xchg
or
aaa
push
out
mov
push
aaa
js
push
clc
sub
add
stc
xchg
and
and
fidivrs
jg
cld
sbb
adc
dec
addl
push
xchg
repz
lahf
pop
stos
insl
sbb
imul
sub
lcall
cmpsl
mov
nop
mov
call
xchg
ja
jns
or
ret
cwtl
rcrl
pop
pop
jns
add
pusha
add
jg
push
in
scas
out
std
sub
dec
and
cmp
test
test
comiss
std
mov
movsb
pop
lock
stc
pop
dec
int3
cld
pop
rcr
je
add
push
pop
lahf
adc
data16
sahf
jl
xchg
cs
jp
cmpw
cld
stc
mov
test
and
push
jae
aas
jg
xor
out
jne
dec
shlb
stc
repz
pop
aad
bound
ret
rcl
mov
pop
sbb
sbb
and
xchg
xchg
pop
out
dec
add
dec
sbb
fsts
repnz
jg
and
jbe
dec
pop
add
jge
rcll
jnp
fmull
xor
cmp
out
pop
and
iret
aas
add
xor
dec
cs
pop
repnz
cmp
lahf
dec
enter
out
cli
push
test
loop
mov
cld
stc
or
subl
add
pop
movsb
xchg
aas
adc
xchg
negb
lock
mov
mov
jb
repnz
mov
mov
sbb
imull
out
jle
mov
add
dec
dec
adc
push
mov
push
jl
je
and
ja
push
bound
repnz
jnp
push
push
cmp
push
mov
jno
fcoml
mov
sbb
repnz
inc
xor
push
popf
pop
ret
jno
out
pop
pop
insb
mov
js
sub
ret
stc
stc
cld
push
mov
pop
aam
mov
iret
cs
xlat
fldl
lock
sub
dec
sbb
adc
rcr
and
scas
mov
inc
lods
ret
cmpsl
sbb
xchg
cmpsl
scas
mov
fs
cmpsb
or
and
and
cli
in
sub
ret
lods
sub
jg
cld
add
jmp
fdivs
mov
iret
lahf
aas
arpl
cmpsb
mov
cld
cld
stc
repz
scas
and
in
out
nop
xor
lahf
enter
xchg
mov
lahf
pop
loop
and
stc
cli
icebp
xor
sbb
lcall
mov
fidivl
jne
push
fidivrs
pop
xchg
mov
sarl
adc
push
push
dec
lock
mov
cld
xor
mov
xorb
lret
enter
int
shlb
jns
fcmovbe
cli
mov
jp
jo
cmpsb
pop
sub
popf
filds
mov
aas
xlat
enter
push
mov
inc
in
rcrb
test
out
jg
sub
scas
mov
xchg
imul
dec
sti
push
xchg
push
or
sti
fcmovbe
xchg
push
pop
jns
je
jmp
int
ljmp
outsl
aas
pop
push
aaa
std
jns
inc
test
jnp
in
add
int
test
in
ja
push
sbbl
add
dec
push
leave
ficoms
mov
out
inc
dec
jle
add
mov
out
xchg
mov
lds
pop
inc
push
pop
test
fdivrp
and
push
pop
jns
cli
xor
dec
mov
or
fistl
jns
add
repnz
adc
xchg
fcomi
cmp
mov
aas
mov
push
mov
jl
xlat
xchg
out
in
stc
repz
rsm
test
popf
out
pusha
out
movsl
out
je
push
mov
pop
mov
cmc
ljmp
cld
add
pop
mov
pop
and
lods
icebp
xchg
lods
sub
out
push
push
push
push
out
in
out
int
scas
mov
xchg
inc
jp
cmp
cmp
xor
cld
stc
test
jle
testb
pusha
and
lret
sbb
pop
xor
mov
leave
sub
jo
jae
aam
mov
cld
stc
cmpsb
xchg
ds
clc
pushf
push
std
push
jl
dec
lret
lahf
aas
mov
jmp
dec
out
rcrb
clc
fnstcw
movsb
into
dec
andl
mov
xchg
lahf
aas
jg
fisttps
mov
inc
in
mov
and
mov
jg
in
movsl
lret
jp
push
dec
jne
out
lahf
into
inc
mov
pop
les
nop
cld
stc
xchg
icebp
pop
xchg
cmp
pushf
mov
add
mov
push
lret
xor
adc
pop
lret
push
lcall
pop
jns
lret
inc
and
mov
shlb
popl
scas
ret
jns
xchg
push
daa
movsb
lods
push
lahf
mov
add
jge
popa
in
push
pop
popf
lds
push
cmp
bound
push
pop
jns
jg
ss
pop
call
mov
in
repz
lret
das
mov
mov
xchg
sbb
sub
inc
lea
imul
add
and
inc
ja
out
das
push
pop
out
inc
popa
push
inc
or
lret
ret
fwait
ret
out
jle
add
dec
mov
scas
mov
pop
aam
stos
lahf
add
test
add
in
sub
mov
scas
xchg
push
pop
jns
jno
xchg
jns
dec
push
mov
push
pop
jns
test
or
mov
jns
xchg
and
xchg
inc
arpl
jg
jnp
xchg
movsl
shrb
push
divb
jns
pusha
cmpsb
jecxz
das
ljmp
out
std
add
stc
out
insb
imul
mov
push
js
xchg
sub
mov
xchg
sbb
mov
mov
jne
leave
cli
mov
out
jle
roll
loopne
mov
mov
leave
sub
fidivl
ds
mov
scas
mov
mov
lahf
jp
mov
pop
repnz
mov
cs
jmp
sub
aad
mov
out
and
sub
pop
or
enter
insb
sbb
lret
mov
jle
je
sbb
cld
stc
in
add
sub
xchg
xor
das
sbb
std
jge
fstl
outsl
dec
call
add
cwtl
push
pop
jns
fists
dec
push
inc
pushf
push
xchg
cli
mov
mov
mov
jne
and
repnz
ficompl
imul
sub
das
lcall
je
or
loope
xor
inc
sub
int3
and
mov
pop
sbb
ss
mov
pop
repnz
sbb
ret
ljmp
icebp
sti
sar
cmp
jmp
lret
xchg
cli
and
jmp
sub
jae
ret
mov
mov
xchg
fnstsw
push
das
pop
outsb
fists
sbb
outsl
jg
mov
popf
js
jge
and
and
lahf
aas
inc
mov
jae
pop
lret
in
xchg
cmpb
mov
cli
and
inc
jb
jns
xchg
push
sti
mov
pop
cs
push
inc
rcrl
scas
ds
xchg
mov
xchg
xchg
and
mov
gs
push
divl
pop
push
or
cld
sar
lds
mov
sar
cltd
push
sbbl
das
jg
add
ret
sahf
aas
sahf
loope
cltd
repz
test
iret
jae
dec
cmc
push
in
jle
cld
stc
js
mov
jle
mov
or
xor
sub
pop
les
popa
cs
loope
mov
dec
fstps
cltd
repnz
mov
mov
mov
in
sub
lahf
mov
jnp
push
lret
or
shrb
dec
lahf
lock
jg
cld
outsb
stc
xor
std
outsb
fs
cwtl
dec
xchg
lds
int
push
push
out
mov
fs
jg
aas
out
jge
push
sbb
movsl
add
das
lahf
fldl
push
push
pop
out
mov
pop
stos
test
xchg
cmp
xchg
addr16
sbb
jle
dec
scas
mov
mov
mov
popa
rorl
fiaddl
push
repnz
pop
xchg
push
jmp
lahf
lret
mov
push
mov
sahf
iret
sub
add
xor
mov
lret
das
mov
into
sub
mov
pop
xchg
mov
push
inc
push
mov
dec
loopne
dec
jmp
in
ds
jne
testl
mov
in
add
pusha
mov
mov
repnz
cli
not
jle
psrlw
repz
xchg
jo
push
fdivrp
adc
ja
lea
and
pop
jns
cmp
jp
lahf
push
xchg
xrelease
in
das
jb
ss
out
and
fs
adc
mov
lods
or
dec
out
add
push
xchg
lahf
aas
sbb
pop
xor
push
mov
stos
ja
sub
mov
jp
stc
cmp
push
cmpsl
jae
fdivrp
std
pushl
test
pop
push
cld
or
xchg
and
pop
in
sahf
sbbb
sub
fldl
in
movsb
mov
sbb
scas
cs
xchg
push
lret
adc
or
in
int
add
fistpll
cld
inc
fiadds
loope
sti
aam
addb
aas
aas
and
pop
jo
push
pop
jne
jo
repnz
xchg
mov
mov
fistps
cmp
sub
and
cmc
mov
shl
pop
clc
in
das
cld
jle
sbb
sbb
imull
in
outsl
mov
rorb
fucomi
repnz
fistl
call
cmpsb
movsb
repz
push
dec
jp
movsl
mov
cwtl
out
jg
cld
stc
or
in
fiaddl
idiv
lea
mov
and
outsb
cmp
dec
insl
jae
sub
aaa
or
cld
jb
jl
sbb
pop
scas
xchg
daa
mov
insb
dec
testb
mov
push
mov
inc
addr16
in
imul
cld
stc
repz
xchg
inc
insb
lock
push
mov
test
aas
jg
xchg
mov
ss
push
ljmp
cli
sub
cmpsb
mov
push
fimuls
add
decb
pop
loope
push
and
jns
pop
js
lods
adc
test
imul
pop
add
in
push
pop
add
stos
cld
test
fwait
out
aaa
mov
mov
push
gs
call
pop
adc
xchg
ja
jno,pn
lds
pop
dec
loopne
jb
repnz
mov
inc
fsubrl
pop
clc
and
decb
test
sub
jl
jns
xchg
out
lahf
jg
das
mov
fimuls
loop
in
iret
push
ret
sbb
mov
leave
setne
jns
test
loope
sarl
mov
das
mov
push
outsl
test
jno
xlat
call
xlat
stc
sahf
mov
mov
sbb
jns
xchg
ja
sti
push
scas
or
mov
mov
in
push
pop
push
rorb
push
mov
test
sahf
pop
xorb
jns
mov
push
fidivrs
les
jns
xchg
pop
jge
mov
int3
repz
xor
in
push
sahf
lock
mov
orl
xor
iret
scas
mov
jg
xchg
addr16
jae
xor
mov
and
cmp
push
pop
imul
pop
gs
adc
outsl
pop
outsb
mov
call
sbb
jg
cld
into
andl
or
nop
dec
js
sbb
xchg
xor
xchg
iret
lahf
scas
or
ja
xchg
icebp
jns
lret
imul
jo
inc
pusha
push
das
jge
dec
xchg
shrb
push
pop
test
or
push
int3
mov
aas
jg
push
and
cmp
ljmp
divps
ds
sbb
mov
cld
stc
int
icebp
mov
aas
push
int3
notl
adc
test
iret
lahf
aas
and
mov
push
addb
cld
stc
repz
dec
and
fisubl
xchg
sbb
jge
mov
popf
pop
ja
mov
or
mov
pop
lcall
outsb
dec
ret
stc
aaa
lock
into
inc
gs
insb
js
xor
aas
push
mov
fcompl
add
stc
repz
mov
call
sub
mov
test
cld
subb
mov
and
loopne
iret
push
and
mov
and
jg
pusha
jle
test
push
sbb
repz
lahf
ret
and
repnz
int
jg
jns
cld
stc
in
dec
aaa
loopne
push
push
cmp
cld
mov
fiadds
lcall
mov
das
pop
stc
sarb
mov
js
mov
xchg
lds
mov
repnz
jb
loop
insb
shrb
cmp
movsl
lret
mov
stos
divb
jl
ret
push
cmpsb
repnz
or
gs
pop
test
push
out
sbb
data16
inc
jo
and
ds
incb
jne
repnz
pop
sbb
aam
pop
cmc
mov
cmc
lret
sub
mov
in
sub
movsb
mov
jne
icebp
xchg
inc
data16
scas
mov
xor
jmp
idivb
ret
sahf
or
inc
les
jg,pn
cwtl
dec
mov
test
push
fisubrs
xor
sti
cmpsl
cmpl
lods
jnp
mov
lods
insl
and
out
fwait
mov
std
repnz
pop
push
jmp
ja
mov
shll
inc
sbb
cmp
jo
xor
pop
aad
fists
lods
xchg
mov
sbb
mov
rcr
movsl
jge,pn
jb
pop
jg,pt
dec
adc
mov
dec
daa
mov
jne
iret
scas
mov
sbb
cld
stc
repz
jne
cmp
push
test
xchg
fdivl
or
outsb
lret
movsl
das
aas
jg
cmc
xchg
pop
rcrb
mov
outsb
sub
shrb
mov
mov
out
pusha
loopne
sub
sbb
push
ror
inc
mov
in
sub
inc
mov
shll
inc
es
xchg
iret
cld
stc
adc
scas
shrb
cs
pop
dec
fidivrl
addr16
aas
jg
or
cld
fs
and
mov
dec
stc
repz
outsb
pop
push
xlat
cmp
cs
xor
pop
cld
mov
mov
repz
mov
lahf
aas
jg
into
leave
add
dec
leave
xchg
adc
xchg
xchg
cmp
jmp
sti
repnz
add
jl
mov
loopne
movsb
pop
scas
pop
test
xor
out
fcoms
lods
or
xchg
mov
fdivrp
mov
in
scas
in
in
mov
test
dec
movsb
ror
lahf
idivb
and
lret
mov
and
aam
scas
mov
aaa
push
xchg
inc
movswl
mov
inc
out
lret
leave
sub
adc
movntps
push
popa
cmp
dec
or
movsb
scas
mov
sarb
in
cmpsl
ds
test
add
cmp
push
pop
or
scas
jl
in
dec
outsb
cmp
mov
dec
cmp
mov
jo
mov
dec
in
sub
cmp
std
repnz
push
shl
mov
int
stc
rep
sahf
cmpsl
jne
loopne
sub
in
jle
dec
cld
xchg
mov
fcomps
jmp
pop
xchg
iret
dec
dec
sbb
inc
push
stc
aad
lret
or
repz
push
mov
shl
sbb
scas
inc
out
cld
stc
add
sahf
xchg
dec
inc
pushf
enter
dec
repnz
data16
rclb
repnz
or
scas
int
jle
lcall
sub
in
loopne
jne
aam
fadds
std
cmp
jno
mov
jl
aaa
lret
out
scas
push
lret
and
sti
mov
xchg
das
and
sbb
cld
pop
int3
lahf
sbb
push
fimuls
lock
test
mov
pop
jns
xchg
pop
mov
loopne
cs
fdivp
in
push
addl
test
out
iret
push
cld
stc
sbbl
jmp
mov
pop
jle
lret
pop
pop
stos
das
xor
iret
int3
sub
enter
push
jg
mov
adc
xchg
cltd
xchg
les
mov
pcmpeqw
mov
sub
repnz
xchg
iret
aam
je
xchg
xchg
enter
sbb
sub
pop
lock
ret
sub
jg
cmpb
lcall
add
jns
push
jecxz
or
dec
roll
arpl
fildll
mov
sbb
iret
or
or
push
pop
jns
xor
mov
sub
lret
in
jbe
pop
add
fsts
add
mov
sub
xlat
das
xor
stos
cld
stc
repz
sbbl
sub
aas
jg
daa
mov
jmp
dec
or
repz
in
imul
inc
nop
lret
repnz
jecxz
lret
or
cmpsb
sub
mov
cmp
test
push
insb
pop
pop
push
mov
test
in
add
scas
pop
roll
mov
lods
pop
loopne
mov
sbb
lret
jmp
psrld
cli
or
lret
mov
xchg
push
jmp
repz
mov
leave
xor
test
aam
out
mov
inc
imul
fstp
lock
loop
cmp
lret
iret
roll
sub
jl
sub
inc
mov
iret
mov
xchg
mov
mov
lods
or
pop
iret
lahf
aas
jle
pop
mov
sbb
sub
aad
hlt
repnz
or
mov
and
stc
fs
xchg
cmp
fsubrp
and
mov
in
outsl
jns
out
jno
cli
repnz
incl
inc
bound
add
aas
lea
mov
inc
push
sub
pop
pop
jns
add
or
loope
lahf
push
push
iret
lahf
pop
push
decb
stos
outsb
pusha
cmp
mov
xchg
mov
sub
pop
push
mov
xchg
jae
cmp
jbe
mov
jg
inc
outsb
test
popf
nop
or
lcall
xchg
lret
lock
pop
cmc
ja
das
fstps
out
sub
jo
iret
test
scas
lods
jne
and
push
pop
mov
mov
in
lods
push
fucom
xor
inc
or
jl
add
das
popf
daa
xor
jno
dec
fildll
lahf
aas
imulb
out
fistps
insl
pop
jns
fnsave
out
scas
jns
adc
shlb
xchg
dec
hlt
mov
xchg
push
lret
gs
pop
shrb
cli
or
popf
push
lret
add
sub
lods
mov
inc
sbb
shl
lahf
aas
cmp
cs
test
in
adc
div
sub
aas
leave
ds
sbb
clc
push
pop
jl
jl
jno
mov
pop
dec
or
jg
dec
and
ror
outsl
pop
int3
in
and
lahf
les
scas
xchg
lret
xor
sbb
sti
gs
cmc
and
out
aas
or
push
xlat
dec
int3
dec
mov
stc
pop
add
pop
xor
scas
pop
pusha
test
pop
test
repz
sbb
repnz
outsb
cmp
arpl
jmp
mov
jg
jle
test
push
nopl
sbb
mov
xchg
jns
or
xor
add
push
pop
stc
mov
lods
loop
pop
inc
sahf
mov
in
loop
lock
sbb
icebp
bound
xchg
rcl
cmp
mov
bt
ds
call
and
repnz
insb
pusha
adc
pop
mov
bound
les
das
cld
das
or
scas
mov
hlt
insb
nop
mov
popf
inc
mov
repnz
xchg
sub
jge
les
scas
mov
mov
or
mov
or
scas
mov
pop
push
ret
and
scas
sub
lret
leave
or
jle
incl
gs
lea
mov
fdivs
fisttps
jne
jbe
sbb
sub
sbb
jns
stos
lahf
pop
repz
imul
jns
popf
adc
inc
push
sub
jl
jp
incb
insl
sbb
repz
sub
iret
lahf
aas
pop
jno
mov
movsl
sahf
icebp
dec
dec
nop
add
stc
repz
mov
int
pop
sti
test
jmp
nopl
push
pop
jns
adc
adc
adc
aas
pusha
pop
jns
xchg
xor
pop
push
aas
xchg
lahf
pop
or
dec
pop
outsb
xchg
adc
repz
in
push
aas
in
sbbb
cmp
popf
addb
jle
cld
mov
fldl
and
mov
fmulp
push
cmp
cld
cmpsb
movsl
jp
in
out
mov
das
mov
aam
aad
mov
js
lret
mov
push
jge
pop
jns
mov
cmp
cmp
add
pop
mov
xor
js
mov
mov
dec
adc
dec
sub
lds
ja
xchg
repnz
js
inc
dec
rolb
push
adc
xchg
jmp
inc
xchg
lahf
sbb
rep
call
icebp
lods
mov
mov
out
scas
pusha
shll
fsubrs
lcall
es
mov
sub
enter
rcrl
adc
pop
loope
fldcw
faddl
repz
test
addr16
aas
jo
adc
lret
lea
lea
adc
sub
sbb
leave
inc
jno
pcmpgtd
cmc
in
cltd
ret
pushf
pop
repz
aaa
js
add
sahf
push
xchg
xchg
je
jg
pop
cmpsb
ja
in
out
push
int3
mov
dec
decl
out
shrb
stos
lret
lret
sub
insl
stc
xchg
hlt
lret
xlat
mov
pop
inc
push
aad
jg
cld
push
mov
cli
popa
and
int
mov
pusha
push
insb
out
inc
out
push
xor
scas
dec
xlat
pop
jge
ret
pop
xor
add
xchg
dec
imul
jns
das
popl
das
scas
sub
das
sahf
stos
or
jbe
xchg
sarb
and
test
mov
fidivrl
xlat
cmpb
out
scas
scas
iret
lods
dec
out
xchg
mov
mov
and
cld
stc
jb
mov
data16
sub
sti
xor
jns
xchg
aas
cs
jno
jb
cmp
and
xchg
push
pop
mov
test
pop
jns
pop
std
inc
cmpsb
push
jl
mov
jge
sbb
jns
loopne
es
das
das
and
pop
lds
xchg
jge
js
inc
pop
in
cmp
lahf
leave
jo
mov
lock
xor
repnz
dec
ds
pop
cmpsl
and
sub
mov
sti
les
in
cmp
scas
mov
pop
loop
fisubrl
cmp
vphaddubq
adc
aam
repnz
pushf
dec
inc
lds
pop
sbb
into
xchg
inc
iret
lret
mov
loope
pop
aam
int
out
mov
testl
add
lahf
aas
mov
jmp
dec
lret
pop
rcr
fbstp
call
cld
stc
repz
out
cmc
hlt
fwait
and
imul
aas
jg
in
insb
ret
or
mov
repz
movsb
mov
shl
xchg
test
aas
jg
cld
lret
or
xchg
add
push
jp
dec
pop
cmp
shrd
lods
xchg
mov
test
aas
and
mov
jle
sub
das
add
mov
mov
sub
sbb
and
mov
lret
jnp
xchg
lock
adc
aam
lret
mov
or
dec
fldenv
cld
cmp
aad
jo
jl
mov
imul
jle
stos
pop
scas
and
das
imull
aas
mov
repnz
or
add
jmp
mov
xchg
dec
inc
xchg
cwtl
pop
pop
insb
mov
rcrl
pop
aad
nop
jne
xor
repnz
pop
xchg
andb
lret
sub
sbbl
lret
outsl
jmp
push
movsb
imul
test
adc
jge
lret
inc
cmp
sub
mov
gs
ljmp
jp
repnz
in
cmp
push
mov
in
ret
mov
mov
dec
jl
push
sbb
pop
ja
sub
sub
leave
out
in
cmp
pop
fucomip
daa
add
aas
jp
adc
stc
pop
dec
fs
lods
dec
sbbb
cs
mov
cmpsl
nop
mov
iret
xor
sub
decl
add
add
jo
into
stos
inc
sbb
out
lahf
aas
sarb
int
push
loope
mov
mov
out
pop
inc
scas
leave
das
sbb
ficoms
scas
in
mov
ja
mov
dec
or
sbb
push
out
lahf
pop
push
mov
fldl
cs
mov
repnz
sarl
push
sub
aas
or
cld
popf
sahf
cmp
rcr
xchg
lahf
idivl
imul
pop
sahf
xchg
repnz
in
jecxz,pn
sub
nop
fs
lret
mov
dec
es
out
xor
movsb
int3
and
repnz
sbb
cmpsb
push
sbb
dec
jecxz
std
std
outsl
inc
dec
adc
push
jl
mov
sub
unpcklps
iret
mov
lret
mov
insb
mov
stos
pop
scas
mov
xorl
dec
pop
repz
iret
aas
mov
test
push
popf
iret
sbb
pop
jns
lret
and
das
icebp
jns
into
sarl
pop
into
sahf
jle
popf
xor
aad
mov
enter
hlt
jo
inc
mov
sbb
je
sbb
stc
or
repnz
pop
xchg
mov
add
aad
scas
in
mov
jl
mov
dec
cmp
lret
cli
pop
imull
mov
jg
mov
xchg
sbb
stc
repz
jle
adc
mov
jne
daa
mov
in
data16
scas
cld
add
repnz
jae
outsb
ficoml
jge
inc
mov
mov
xor
fdivrl
loopne
mov
pop
inc
inc
fwait
aam
inc
adc
stc
repz
enter
jo
pop
mov
je
fnstenv
dec
stc
imul
lahf
aas
inc
shlb
rcl
jo
iret
clc
in
pop
add
clc
std
dec
inc
mov
test
add
shl
ljmp
lods
cld
add
aad
ret
int3
ds
std
jge
in
jo
jg
daa
jb
lahf
hlt
adc
imul
mov
das
lahf
xchg
loop
adc
xor
outsl
sub
lock
icebp
adc
jg
dec
sbb
movsb
xor
scas
and
bnd
sbb
call
jno
out
nopl
ret
pop
push
sbb
mov
mov
andb
mov
test
aaa
xor
dec
sti
ret
repnz
or
mov
movsb
mov
cmp
xchg
cli
sti
lock
sti
iret
roll
ljmp
push
fisubrs
sub
clc
jnp
repnz
repz
lods
push
fisubrl
push
das
cwtl
inc
dec
jle
jg
dec
cmp
fsubrl
mov
aas
daa
jo
cwtl
and
push
scas
push
cld
stc
repz
mov
mov
xchg
sub
divb
lahf
aas
jg
pop
movsb
imul
jg
rcrb
out
inc
loope
int
ja
aaa
mov
out
cmpl
scas
fmuls
xor
cld
out
lahf
aas
bound
call
mov
or
add
leave
and
out
mov
cld
stos
leave
rcrl
jno
scas
mov
mov
lahf
jp
jnp
scas
jno
das
jle
push
loop
std
jb
mov
pop
push
cmp
in
or
loopne
and
jbe
jnp
sub
nop
mov
in
mov
jl
rorb
xchg
push
fdivrp
push
shrl
xchg
pop
loop
and
push
pop
jns
stos
loope
push
test
in
xchg
xchg
adc
xchg
cmpsl
mov
xchg
fwait
xchg
pop
mov
enter
out
inc
jns
xchg
ja
roll
cmc
push
out
sub
arpl
pop
pop
cmpsb
es
inc
sbb
repz
movsb
dec
inc
lea
aad
mov
out
jle
add
fldcw
sub
pop
add
and
scas
out
push
sti
pop
or
stc
repz
cs
and
pop
or
test
jg
xchg
push
push
mov
jo
cli
gs
frstor
out
das
mov
dec
stc
in
loop
cld
cld
stc
rep
xorb
jne
sbb
decb
pop
cmovns
jo
sti
in
sub
pop
sbb
js
push
cwtl
and
bswap
sub
mov
sub
pushf
sub
fdivp
or
icebp
lods
mov
out
sbb
mov
push
jo
adc
sbb
fstps
dec
jp
lret
aas
movsl
jns
mov
inc
jge
ja
sub
jg
and
stos
data16
scas
mov
ja
stc
es
sub
pop
pop
lret
test
pop
push
jae
lds
jp
mov
lahf
aas
jg
add
xor
test
in
out
sbb
mov
mov
mov
sub
imul
rolb
outsl
sub
iret
inc
sub
jle
and
out
and
add
repz
mov
sub
adc
outsl
mov
jmp
out
out
push
dec
jno
mov
and
sbb
sub
shrl
mov
mov
push
popa
lahf
pop
sbb
sahf
int
int3
mov
fstl
into
xchg
jecxz
mov
mov
jmp
jl
inc
decl
rcrb
test
das
xchg
push
pop
push
jl
repnz
repz
mov
cmp
mov
cld
insb
repnz
test
outsb
lahf
dec
add
mov
cmp
cld
stc
xchg
add
nop
dec
xchg
mov
jne
out
test
je
jle
jg
push
rcr
mov
outsb
mov
jle
cld
cs
pop
push
push
xchg
push
and
jnp
insb
in
das
ja
daa
adc
roll
jns
outsb
je,pn
mov
mov
jge
in
ss
mov
push
fdivrp
sti
decl
adc
mov
dec
leave
mov
icebp
in
adc
fldt
aas
push
stc
aas
das
lahf
lods
idivb
sub
or
push
lods
mov
repnz
loopne
mov
mov
cmp
mov
cmc
adc
xor
stos
test
call
scas
int3
movsl
jmp
push
jg
cld
stc
inc
inc
xor
lea
xlat
pop
or
and
lahf
aas
jo
icebp
jo
and
negb
or
mov
test
sub
jnp
popa
movsl
or
xchg
out
lahf
aas
xchg
mov
xor
fisttpl
cmc
andb
fnstcw
test
jbe
das
aas
jg
adc
imul
out
cmpsb
mov
sbb
popa
xor
mov
mov
add
mov
arpl
ret
cmp
lret
popa
mov
and
in
xchg
sub
aas
gs
push
lahf
testb
loop
pop
ja
cs
loopne
out
lahf
aas
das
jmp
xchg
pop
dec
out
sahf
adc
xchg
jo
aas
lds
jae
fiadds
jmp
repz
jl
jecxz
loopne
lret
cmpsl
sahf
test
cld
cld
stc
pmaxub
in
jecxz
mov
clc
mov
lret
out
ljmp
sbb
les
lret
mov
idiv
es
and
jle
repnz
test
fwait
sarl
jg
mov
loope
sub
cs
das
test
mov
lahf
add
rcrb
jp
mov
nop
add
lds
mov
jl
in
call
into
das
pop
repz
hlt
or
out
shll
xor
andb
cld
pop
stc
clc
xor
into
add
mov
es
das
cmp
adc
mov
pop
xchg
in
xlat
dec
fs
jg
mov
fdivrs
ja
das
sub
and
or
xor
push
out
rolb
imul
arpl
cmp
in
call
cmp
jnp
xchg
cmc
in
inc
dec
sahf
and
in
dec
lret
mov
or
test
mov
mov
fs
data16
or
in
xchg
jno
and
push
adc
aam
ja
push
repz
stos
icebp
ss
lock
xchg
cmp
repz
mov
enter
stc
dec
cmpsb
push
cltd
jg
cld
stc
iret
in
test
sbb
shr
sub
adc
sbb
loop,pn
xlat
cs
jne
push
cs
repz
lahf
ja
push
adc
repz
iret
pop
pop
and
stc
mov
aaa
xchg
aad
cmp
loopne
xchg
lahf
jg
das
adc
mov
pop
ds
xchg
add
xor
movsl
or
in
push
push
lock
stc
repz
push
sub
inc
sarb
stc
mov
out
pop
fstl
mov
xor
jg
jle
xor
mov
lahf
and
fistpl
test
cmp
lret
aaa
adc
mov
inc
movsl
decl
xor
ror
pop
movsb
sub
mov
popa
mov
cltd
mov
push
cltd
sub
inc
sbbb
and
das
jno
mov
stc
repz
inc
cs
cmp
jge
sbb
cld
gs
push
nop
dec
cltd
pop
cmp
out
lahf
pop
cwtl
mov
sub
jg
cld
stc
cmpsl
and
leave
xchg
test
jmp
out
lahf
aas
mov
sub
fsubrl
in
xchg
inc
push
testl
lahf
xchg
mov
xchg
sub
sbb
mov
jbe
push
cmp
xchg
decb
gs
mov
mov
popl
ret
mov
and
iret
lahf
jg
jb
lods
loop
in
popf
repnz
pop
jl
cld
stc
repz
pop
mov
ja
push
addr16
call
out
decb
mov
hlt
mov
mov
repnz
enter
cmp
sub
and
fsts
add
idiv
cld
stc
repz
xor
xor
mov
fdivrp
fwait
ljmp
jns
pop
mov
in
xchg
cmp
pop
fbld
adc
int3
jle
or
adc
inc
scas
ljmp
pop
cmp
repz
lahf
rcrb
dec
in
add
fcmove
fucomip
into
lock
mov
jg
add
xor
repnz
inc
arpl
jnp
adc
out
lret
sub
js
xchg
divb
xchg
jle
repnz
sbb
xchg
inc
out
lret
lahf
aas
aas
push
imul
cmpsl
push
mov
sar
pop
dec
xlat
sub
cld
stc
repz
push
xchg
xchg
adc
std
leave
arpl
pushf
adc
jg
cmp
xchg
push
sbb
inc
fiadds
mov
nop
or
xor
xchg
push
pop
stc
loopne
ljmp
sbb
lds
jns
lret
mov
out
sbb
dec
fimull
push
xchg
xchg
mov
jecxz
mov
sbb
adc
lds
loop
cld
stc
adc
add
sbbb
push
test
sub
shlb
add
push
fstpl
adc
adc
cmp
lock
out
test
adc
sahf
sub
cmp
xor
xor
daa
iret
lahf
pop
scas
xchg
movsb
shr
test
cld
jb
fnstsw
jle
push
movsb
mov
pop
decb
dec
mov
aas
aas
dec
loop
scas
je
rclb
jnp
lock
inc
jo
mov
loopne
adc
jecxz
subb
cld
stc
repz
hlt
dec
mov
cmp
daa
aas
jg
fwait
xor
orl
aas
faddp
je
mov
add
fdivrl
into
fs
add
in
aas
call
popf
pop
xchg
int3
and
sbb
adc
lret
xchg
push
fcoml
push
mov
jno
lret
mov
jbe
ja
push
xor
mov
inc
mov
or
outsb
add
cmp
out
insb
fsubrp
fists
aas
mov
int3
pop
cmp
or
outsl
pop
push
push
jg
lret
xchg
push
pop
jns
test
xchg
add
or
or
test
std
pop
ljmp
out
jns
into
daa
push
pop
stc
pop
in
jo
mov
jo
aas
jg
add
movsb
rol
cmp
inc
jg
test
or
ja
cwtl
lock
cld
jg
fcomps
fsubl
or
adc
xor
adc
sbb
arpl
in
sub
je
sub
push
lcall
and
arpl
out
clc
dec
push
inc
cmpsb
push
call
add
call
cmp
xchg
je
cmp
push
repz
inc
jl
xchg
sub
aaa
enter
shl
out
and
sbb
sub
adc
sub
dec
shl
movsb
inc
mov
cmpb
add
or
pop
xchg
mov
lahf
aas
mov
icebp
sti
xchg
fsubl
xchg
jo
stc
repz
stos
mov
mov
lds
lahf
aas
jg
xor
dec
addl
dec
adc
mov
sbb
ds
inc
into
sub
mov
aad
stc
repz
das
xlat
push
fsubs
mov
xchg
mov
pop
jo
jnp
rcrl
pop
in
jle
stc
cmp
movq
mov
js
iret
jmp
scas
mov
jge
mov
int3
in
int3
scas
inc
sbb
xchg
decl
gs
push
scas
inc
in
ret
lods
xchg
out
pop
push
sbb
icebp
in
push
sti
mov
fwait
in
push
sti
repnz
or
lahf
mov
cld
dec
sahf
out
test
mov
xchg
ja
out
popa
sub
push
and
pop
clc
push
out
iret
lahf
aas
aas
ds
push
pop
dec
int3
jl
jns
addl
mov
inc
fmuls
sub
lret
in
push
cltd
add
dec
das
addb
cmp
xchg
push
pop
test
xchg
mov
aas
mov
mov
add
sub
xor
icebp
lret
push
sub
outsb
inc
inc
jge
clc
arpl
jmp
subl
cld
mov
mov
sub
rcll
xchg
lahf
pop
sbb
lret
sub
arpl
out
int3
or
pop
cs
pop
jno
add
xor
out
cmpsb
xchg
or
sub
lds
mov
pop
sub
pop
inc
test
mov
scas
mov
mov
dec
inc
fisubs
cmc
mov
int
stc
inc
test
xchg
gs
mov
xchg
adc
test
rep
das
scas
mov
or
and
aas
jg
push
push
inc
sub
mov
mov
repz
mov
lds
notl
inc
xchg
insb
in
jp
add
lret
xchg
push
aad
inc
fcoms
movsl
jl
and
outsl
aaa
cli
jbe
xchg
push
adc
iret
lahf
aas
jg
jl
jne
sub
dec
test
andb
aad
ss
ret
out
dec
pop
jle
data16
popa
hlt
or
cld
out
mov
sbbb
lds
repz
lahf
and
pusha
test
fcmovnbe
mov
cld
stc
push
rorb
leave
pop
or
movsb
lods
clc
in
ja
pop
shrl
pop
ret
xchg
push
pop
jns
aaa
out
lret
sbb
jbe
loope
call
jne
cltd
insb
adc
stc
aad
lahf
aas
jg
fisubs
jae
je
inc
mov
add
iret
sub
aas
xor
jo
sbb
xor
jl
adc
mov
or
iret
lahf
aas
jg
sub
lods
jns
stc
leave
jp
cmc
repnz
mov
imull
repnz
in
movsl
pop
pop
pop
or
dec
pop
fpatan
in
faddp
xor
daa
push
repnz
xchg
mov
movhlps
decl
ds
xor
jmp
mov
xor
add
cmp
jg
and
mov
dec
jmp
lahf
jo
xor
fwait
mov
dec
push
pop
pop
or
mov
jle
dec
aam
scas
mov
outsb
dec
es
adc
scas
mov
sbb
imul
mov
mov
aam
push
into
xchg
fsts
add
pop
in
push
mov
inc
rcrb
pushf
aam
xchg
push
pop
jns
push
xor
xchg
adc
in
jl
adc
cmp
cld
xchg
sub
into
push
int3
sub
iret
lahf
aas
jg
mov
pop
dec
adc
nop
jp
dec
icebp
rcll
scas
aam
clc
in
das
jg
lcall
arpl
iret
cmpsl
xchg
fisttpll
aad
inc
mov
jb
push
pop
sbb
pop
inc
xchg
push
mov
sub
decb
notl
xor
clc
repnz
cmp
mov
jmp
sti
sti
rsqrtps
mov
pop
js
xchg
xor
scas
jg
lea
fistpl
mov
xchg
loope
mov
and
fists
pop
push
cli
add
in
idivl
mov
pop
pusha
jg
cld
dec
ds
pop
mov
xchg
or
iret
lahf
aas
push
dec
icebp
sub
mov
inc
stc
xor
in
mov
jle
push
aas
mov
jg
cld
sub
fisttpll
push
push
ds
and
sub
das
sbb
add
out
out
scas
mov
test
mov
xor
cmp
pop
mov
ds
idivb
cld
stc
repz
test
divl
sbb
lahf
aas
jg
xchg
gs
cwtl
repz
cmp
pslld
out
out
insl
adc
test
repz
mov
outsb
sub
adc
sub
sub
jle
repnz
cmpl
lcall
insb
lahf
aas
jmp
pop
or
mov
mov
jne
test
stc
repz
enter
add
data16
fdivl
sub
outsl
psubsw
inc
xchg
jle
repnz
ljmp
out
adc
jg
out
jae
test
test
out
xchg
iret
lahf
jo
movl
sbb
pop
scas
mov
push
sbb
das
mov
xchg
mov
mov
repz
in
das
jg
jnp
fwait
ss
filds
and
mov
scas
sbb
imul
cwtl
cmp
mov
dec
xchg
jns
in
mov
jbe
dec
ja
jno
das
push
fidivrs
inc
cmp
and
and
imul
jl
jle
inc
das
cmp
mov
mov
push
jl
jge
ficoml
sub
or
aam
push
lock
push
mov
fdivrp
jb
hlt
adc
clc
and
xorb
jb
xchg
cmpsb
xchg
movsb
mov
data16
sarb
out
clc
in
imul
adc
jg
cld
inc
push
inc
push
pop
repnz
mov
int
mov
aas
mov
pop
out
mov
mov
sti
enter
scas
add
lcall
mov
mov
add
aas
jg
add
xchg
pop
test
mov
addr16
push
rclb
jl
adc
mul
out
dec
sub
dec
insl
xor
cmpsl
xchg
pop
repnz
adc
adc
in
rcll
fistps
orl
repnz
iret
lret
ds
ret
scas
xchg
aas
inc
inc
movsb
push
dec
pop
cmp
jns
xor
xchg
mov
push
ds
dec
ret
jb
sbb
sub
out
repnz
out
pushf
loopne
iret
aas
mov
pop
cmp
jno,pt
sub
push
and
or
pop
lahf
mov
lahf
aas
jg
mov
inc
cmp
inc
aas
xor
iret
pop
mov
or
outsl
in
cmp
fildll
aad
imulb
loope
mov
das
push
lea
and
or
iret
cs
stc
repz
push
mov
fistpl
mov
sbb
leave
ret
xchg
test
dec
loopne
in
or
out
repz
jg
test
filds
pop
push
dec
fcmovnu
js
scas
out
lahf
aas
fst
insb
mov
pop
xlat
add
xchg
icebp
in
mov
and
out
sub
pop
divb
je
cld
stc
repz
out
sbb
jecxz
outsb
inc
inc
adc
fbld
xchg
mov
hlt
lahf
pop
mov
mov
dec
push
das
and
adc
lahf
aas
cld
jge
jg
rclb
sti
cld
stc
repz
rcl
hlt
daa
sbb
ja
push
push
ja
jle
dec
xchg
add
mov
movmskps
lret
in
sub
push
mov
movsl
movsl
daa
dec
cltd
das
push
ljmp
aas
jg
cld
into
adc
rol
aaa
dec
mov
push
stc
cs
jb
inc
and
add
sahf
xor
iret
lahf
aas
imul
icebp
xor
int3
cmp
cld
xor
scas
ret
cmc
int3
lcall
stc
cld
sbb
cmc
mov
mov
jmp
repnz
push
sub
rorl
mov
lret
scas
call
leave
sub
xchg
decl
pop
scas
mov
stos
int
in
push
mov
add
lret
mov
sub
loopne
cld
rol
dec
push
pop
lock
aas
mov
aas
jg
sahf
xchg
push
mov
fstl
mov
mov
iret
pop
xchg
jne
pop
les
lret
bound
sub
pop
scas
mov
scas
fbstp
sbb
mov
test
xchg
pop
lods
cmpsl
daa
dec
and
lahf
aas
jg
push
mov
out
or
jns
popf
xor
cld
stc
repz
cld
dec
int
loopne
or
jnp
xor
and
scas
sub
pop
xchg
shlb
jns
xor
jge
test
sbb
dec
les
or
mov
xchg
aaa
mov
ficompl
inc
jg
jae
cmpsl
fisubrs
int
pop
out
jl
push
gs
dec
jg
repnz
repz
or
in
test
enter
cmpl
ficoms
lods
cmp
mov
aas
jg
jle
cli
std
sub
cmp
inc
adc
mov
outsb
xchg
pop
scas
mov
cwtl
cmp
call
sbb
icebp
inc
cmp
shll
aam
ja
adc
fisubrs
stc
scas
lods
test
fwait
insl
repnz
in
jle
jmp
iret
inc
js
mov
sub
pop
mov
mov
js
sub
xor
push
sahf
dec
out
push
cmp
imul
mov
dec
jg
xchg
and
and
mov
mov
mov
xchg
cmpsb
das
popf
out
push
mov
xchg
iret
jmp
cmpb
ds
cli
stc
jecxz
and
jecxz
leave
or
repz
inc
ja
pop
fucomip
mov
outsl
scas
mov
scas
aad
int3
das
cmovg
lods
push
stos
pushf
mov
lret
nop
jne
hlt
jmp
mov
sub
imul
xor
sar
fwait
cli
imull
dec
push
fistpll
pop
sub
jle
test
sbb
pop
rclb
stc
mov
mov
pusha
int
lea
lods
jb
xchg
push
in
inc
cld
mov
push
fwait
sbb
or
bnd
xor
in
test
or
mov
stos
cmc
mov
inc
cs
mov
mov
inc
ret
std
mov
movsb
out
dec
hlt
clc
adc
cmp
stos
push
mov
dec
scas
mov
or
jg
cld
or
mov
call
repz
lahf
xor
inc
dec
inc
test
cld
stc
xchg
pop
pextrw
xchg
daa
shll
nop
push
mov
pop
push
pop
dec
cmp
pop
in
and
pop
das
and
adc
mov
sbb
arpl
mov
iret
jp
mov
scas
push
jle
fs
js
imul
push
ror
mov
cld
in
fsubr
clts
and
imul
ds
scas
mov
inc
xchg
int
sahf
popf
sub
mov
jns
mov
inc
repnz
loopne
dec
icebp
repnz
add
out
lcall
or
scas
mov
faddp
cmp
sbb
mov
mov
jmp
jp
stos
mov
repnz
pop
into
xchg
scas
sbb
cltd
fs
jle
mov
mov
clc
repnz
iret
xchg
xor
sbb
int3
sub
aas
mov
std
ds
aam
sbb
iret
dec
mov
std
clc
or
inc
and
ret
mov
push
jns
dec
shll
jmp
sarb
cld
stc
mov
cld
jmp
sbb
pop
xor
lret
iret
lahf
aas
or
cmp
daa
xor
ret
push
repz
movsl
les
and
out
dec
mov
add
jg
data16
push
xor
mov
loop
das
add
cld
stc
repz
add
sub
or
out
pop
iret
lahf
aas
jg
xlat
sub
nop
cmp
jg
cltd
mov
jns
repnz
sbb
dec
addr16
out
xchg
push
pop
mulb
in
lret
cmp
faddl
lods
js
xchg
icebp
mov
jl
pop
pop
stos
xchg
fs
repnz
mov
push
lahf
aas
jg
out
adc
adc
outsl
lcall
out
aas
call
das
sbb
add
fldenv
das
dec
mov
jle
inc
mov
jne
push
das
aas
aas
cs
pop
or
jmp
fdivs
mov
cmp
xchg
pop
dec
scas
and
or
pop
mov
pop
push
fimull
fisttps
scas
mov
xor
in
and
dec
les
lret
call
and
cmp
mov
scas
aad
mov
call
sub
add
shrb
sbb
push
fsubrp
pop
xchg
sbb
roll
insl
fcmovb
adc
test
lret
mov
lods
leave
jmp
fwait
push
jl
aas
enter
xor
iret
lahf
jg
dec
xchg
sbb
rcrl
stc
repz
leave
adc
push
into
mov
icebp
das
lock
lahf
aas
jg
inc
xchg
and
push
xchg
dec
pop
cld
test
push
push
or
dec
test
inc
les
decb
test
dec
and
mov
arpl
lret
iret
fnsave
ja
ds
jns
in
shlb
push
clc
mov
pop
in
das
push
mov
xchg
popf
out
ds
push
fdivrp
jb
xor
xchg
pmaddwd
jmp
push
fdivp
in
das
xchg
out
adc
pop
push
jmp
mov
push
pop
jns
sub
loopne
je
pop
jns
testl
lds
sub
fists
mov
pop
jns
sti
jg
cmp
sarl
xchg
pop
jle
pop
inc
mov
mov
cs
pop
in
push
out
fdivr
test
std
out
aam
mov
dec
sub
ds
xlat
sahf
add
repnz
and
lods
jae
stc
repz
es
gs
pushf
jb
in
aas
jg
cld
xor
filds
mov
push
iret
or
push
mov
and
pop
jge
jle
mov
iret
lret
pop
sub
jb
in
idivl
addr16
mov
mov
repnz
mov
imul
fdivrp
jb
fsubl
insb
and
and
insb
dec
dec
lds
ljmp
cmp
mov
stc
and
outsb
push
cld
push
cld
and
icebp
das
jge
insl
icebp
jp
std
int3
jp
aas
aas
push
jns,pn
push
jmp
xchg
fldcw
sub
loopne
iret
ja
popf
fidivrs
stc
repz
rolb
sbb
add
test
out
fldenv
mov
shll
push
dec
loopne
out
sub
push
je
ret
sbb
pop
jecxz
lahf
pop
add
xor
lahf
adc
pop
fildl
stos
jmp
enter
or
in
das
cmpsl
or
in
push
pop
sbb
into
xor
sarb
iret
mov
sahf
push
das
hlt
jmp
test
scas
mov
cmp
or
sub
mov
repnz
xor
xchg
scas
xor
xchg
ja
mov
fistpl
xor
jns
xchg
push
sarl
dec
cmp
mov
aam
pop
jns
xchg
movsl
dec
stos
cmc
lcall
cmp
xchg
push
int
cmpsb
xchg
dec
bnd
pop
push
ds
cld
leave
bound
xor
notl
mov
fmull
push
popf
cwtl
outsl
dec
mov
sub
es
je
outsl
iret
jg
jg
jg
outsb
mov
push
jae
addr16
je
movsl
push
or
cmp
das
push
pop
jnp
shlb
cli
rcr
inc
cltd
out
loope
mov
int
decb
pop
adc
movsl
xchg
pop
mov
xchg
in
mov
in
shlb
sahf
sbb
outsb
mov
mov
int3
cmp
out
in
inc
decb
sarb
xchg
ja
jns
cmp
jecxz
mov
push
fidivrs
mov
jb
inc
scas
int
gs
jns
lret
mov
cmp
xor
and
push
ljmp
iret
inc
pop
sahf
push
shrb
sti
xor
and
addr16
std
ljmp
out
and
dec
cld
stc
repz
mov
clc
arpl
add
xchg
push
fidivrs
add
notl
push
pop
jns
jg
sbb
jae
pop
orl
jns
xchg
addl
xor
jns
xchg
push
testb
push
mov
mov
pop
sbb
cs
sbb
jle
jl
lret
out
fidivs
mov
es
pop
pop
xor
aas
mov
cmc
inc
dec
aas
iret
mov
cld
stc
repz
sub
cmp
and
inc
imul
jg
cmpsl
das
cmc
testl
inc
ljmp
jle
stos
aas
incl
or
jle
mov
push
subl
iret
lahf
leave
fiaddl
jbe
cld
mov
jg
cld
stc
push
mov
jg
sub
jb
test
jns
sub
iret
xchg
aas
pop
mov
jl
cmp
aaa
repnz
dec
or
or
lods
cmp
in
push
es
movl
daa
testl
sahf
nop
push
outsb
iret
mov
cmpsb
dec
mov
stc
pop
hlt
mov
mov
mov
pop
subb
pop
mov
mov
dec
jae
addr16
pop
xchg
jg
test
std
pop
subb
fs
fimuls
repnz
outsb
cmp
add
dec
fisttpll
imul
dec
cli
push
frstor
mov
pop
into
repz
sbb
in
in
or
lahf
pop
call
xor
out
adcb
mov
sub
xchg
mov
sahf
push
push
repnz
hlt
pushf
xor
shlb
scas
mov
and
fwait
jo
aam
scas
mov
dec
pop
push
ljmp
fsubl
scas
fmulp
lahf
mov
gs
into
mov
dec
jle
mov
incl
aad
test
repnz
insl
dec
lds
push
sahf
test
or
lret
mov
lea
iret
mov
jle
repnz
push
push
push
ljmp
jle
pop
xor
xchg
mov
dec
jl
cli
dec
inc
movsb
hlt
cld
stc
rep
push
out
outsl
adc
dec
jg
cmp
aas
jg
outsl
loope
mov
stos
adc
scas
inc
stc
repz
or
jb
cmp
or
andb
cld
and
cwtl
das
lods
adc
mov
inc
es
xchg
iret
lahf
cmp
andb
es
pop
cld
pushf
mov
push
mov
xlat
push
pop
jns
scas
and
fidivrs
jno
cmp
setb
fs
pushf
mov
imul
outsl
not
cld
das
pop
dec
dec
mov
cltd
xchg
aas
pushl
icebp
add
push
ds
push
push
inc
fadd
pop
ror
lahf
leave
mov
sbb
jle
inc
outsb
mov
xchg
push
faddp
xor
push
int3
xchg
pop
loopne
jle
or
jns
or
imul
icebp
fcomps
in
mov
dec
pop
das
xchg
cmp
push
popa
test
arpl
rcl
in
push
pop
int3
ja
and
popl
pop
jns
out
push
pushf
cli
and
jg
cld
sar
sbb
jne
fldenv
xchg
xor
in
ja
mov
aas
mov
mov
std
jb
repnz
enter
scas
cmp
repnz
aas
cs
shll
and
fsincos
in
xor
in
and
or
mov
push
lret
dec
xor
lret
pop
scas
bound
loop
lods
and
xchg
ja
pop
lret
sbbb
mov
xlat
daa
and
ret
dec
push
daa
pop
ss
ficoms
aas
jg
cld
push
add
leave
add
dec
inc
stos
adc
das
lahf
hlt
lret
out
dec
ljmp
lret
out
ja
push
shl
mov
pop
xchg
les
push
pop
pop
ja
out
shll
in
mov
rclb
cmp
jns
stos
mov
dec
into
scas
mov
sti
std
out
or
or
sbb
mov
adc
push
pop
sbb
lret
sub
sarl
lods
pop
daa
mov
out
jg
jmp
inc
stos
lahf
lret
inc
sub
mov
das
ja
cmp
cltd
pusha
xchg
cltd
push
sbb
shlb
or
pop
push
pop
jns
aaa
adc
add
and
or
and
dec
imul
dec
mov
mov
and
pop
add
mov
pop
sbb
jns
xchg
ja
or
test
mov
push
int3
les
push
pop
stc
push
stc
jge
mov
js
imul
push
clc
test
xchg
sub
jl
ljmp
fmuls
sub
cmc
aaa
cli
in
in
pop
aaa
cmp
js
mov
pop
jns
xchg
mov
adc
orl
jns
xchg
push
lds
adc
adc
xchg
push
pop
push
mov
fs
jp
jns
mov
pop
jns
lcall
cmp
mov
faddl
inc
scas
jecxz
pusha
mov
push
mov
push
test
sub
mov
addr16
pop
dec
enter
scas
and
aas
stc
sbb
repnz
in
mov
xchg
xor
xor
adc
outsl
ss
mov
sbb
push
dec
push
or
test
aas
int
push
xchg
mov
stc
repz
cmp
push
mov
movsl
popf
pop
mov
cmp
sub
into
sub
pop
fidivrs
jno
mov
cltd
aam
in
push
mov
xor
jecxz
mov
jle
cld
jb
imul
dec
rolb
add
mov
outsb
jne
mov
out
lahf
ftst
shll
mov
and
repnz
stos
pop
push
pop
sub
ds
ja
jg
push
leave
mov
pop
popf
rcrb
mov
xchg
les
sahf
or
sbb
push
fsubrp
stos
mov
out
nop
daa
test
xchg
push
pop
jns
in
add
push
js
fsin
jle
sub
movsb
pop
jns
xchg
shlb
rclb
cmpsb
mov
cli
pop
shrb
out
data16
pushf
ds
fwait
stc
stc
repz
xchg
add
xor
sbb
jp
xchg
xchg
cmp
mov
pop
scas
push
sbb
fwait
lcall
jge
xor
push
dec
push
das
test
popa
scas
mov
idivb
aam
shll
out
sbb
mov
push
cmp
jnp
jmp
stc
repz
adc
xchg
push
sub
das
loopne
or
stc
xor
sub
mov
fsubr
xchg
lock
in
das
out
sbb
test
ret
ret
dec
nop
in
push
fidivrs
adc
dec
ficoms
pop
inc
adc
shrl
in
test
mov
dec
arpl
inc
xchg
scas
mov
ret
sub
out
mov
sbb
fcomi
aaa
push
or
incl
mov
pop
leave
add
into
sub
in
iret
lahf
pop
iret
add
and
mov
int
stc
and
push
mov
jo
mov
aas
jg
testl
mov
pop
mov
cmp
add
xchg
iret
jbe
adc
pop
mov
cld
stc
repz
mov
sub
ss
add
aas
jg
arpl
mov
mov
push
repz
sarb
pop
out
repnz
push
data16
cld
dec
clc
repnz
sbb
leave
jl
cs
mov
pop
negl
in
stc
xchg
mov
imul
cmpsl
ret
push
pop
scas
cmp
or
das
push
pop
push
lods
outsl
les
mov
lahf
lock
add
mov
adc
scas
repnz
dec
sbb
les
ja
xchg
rcll
sbbb
movsbl
adc
sbb
add
sub
call
nop
or
fildll
xor
cmp
adc
jle
cmpl
pop
push
push
repz
adc
cmp
cld
stc
and
push
popa
repz
xor
push
push
sbb
iret
lahf
aas
in
jge
loope
movsl
sbb
fwait
adc
stc
rep
imul
push
das
jg
cld
dec
push
jmp
jnp
xchg
pop
or
es
xchg
ja
clc
in
fiadds
ds
push
sbb
in
push
pop
nop
cmp
push
outsb
pop
fwait
xchg
push
pop
jns
or
gs
push
sub
push
jbe
push
bound
jns
data16
arpl
cmp
mull
ljmp
sub
das
mov
cli
sub
jle
cld
adc
jecxz
out
cwtl
push
jae
out
and
mov
cld
sti
cmp
jns
mov
cli
cmc
push
sahf
push
mov
cwtl
mov
pop
add
aas
fisttpll
out
mov
push
das
xchg
mov
into
stos
movsl
jle
cli
repnz
addr16
pop
aas
movsl
mov
cld
push
xchg
jg
cld
mov
xor
and
in
das
lahf
add
push
xchg
fucomip
cmp
out
xchg
push
pop
jns
and
xor
icebp
or
jns
sub
stc
aaa
nopl
lret
in
inc
jp
lahf
and
lret
xchg
ja
mov
mov
pop
cli
in
mov
sub
sbbb
or
nop
dec
adc
iret
lahf
or
fnstcw
adc
mov
les
mov
sbb
into
pop
mov
mov
rclb
mov
mov
sbb
leave
xchg
push
fsubp
xor
sub
ss
or
jbe
mov
jns
outsb
xchg
sahf
mov
scas
mov
iret
enter
add
mov
das
adc
pop
mov
pop
scas
mov
ljmp
repz
outsb
rcrl
movq
cmpsb
jg
sub
stc
lahf
or
push
add
stc
repz
lahf
mov
rorb
ss
or
repnz
lret
outsb
scas
xor
scas
les
jns
in
fists
stos
lock
mov
pusha
sbb
cs
xor
ja
sub
inc
scas
push
lahf
pop
xchg
imul
repz
mov
cli
adc
cmpsl
movsb
fstpt
cld
stc
loop
lds
faddl
cltd
pop
cmp
lahf
aas
mov
mov
aas
adc
clc
gs
lock
ljmp
jg
cld
into
pop
jle
and
shl
inc
xchg
stc
iret
lahf
jg
into
ficompl
out
add
js
repz
adc
das
cmpsb
loopne
std
pop
int3
cmp
in
mov
xor
out
jmp
dec
xor
aam
out
inc
pop
iret
dec
rcl
ljmp
mov
lcall
jecxz
pusha
or
scas
aas
jg
cld
faddp
ficoml
fmuls
add
das
repnz
les
inc
mov
stos
sbb
scas
mov
push
push
mov
inc
inc
and
nop
xchg
xor
mov
out
add
cmovbe
cli
outsb
lea
fsts
mov
aas
jg
cld
aam
dec
jns
add
and
mov
pand
out
lahf
or
mov
adc
inc
mov
aad
shll
push
sub
lret
inc
int
in
aas
addps
push
xchg
fmuls
pop
jns
or
jl
pop
push
popf
lock
add
xchg
push
sbb
xor
iret
and
mov
dec
pop
ja
scas
sbb
mov
push
pop
jns
cmp
xchg
std
mov
imul
xchg
push
cmpsb
sti
and
adc
mov
cld
stc
adc
xlat
sbb
adc
push
mov
push
imul
mov
inc
out
rorb
repz
jle
sahf
jns
out
jno
mov
push
mov
test
iret
push
lea
and
lods
cwtl
les
enter
repnz
mov
and
rorl
sub
fists
cli
jo
insb
iret
xchg
aam
inc
cli
jge
push
lock
mov
mov
out
xchg
mov
pop
outsl
jmp
sbb
sti
sub
push
outsb
int
je
jg
add
hlt
adc
jge
mov
pop
ds
loopne
mov
popf
jbe
inc
push
pop
jns
sub
xchg
out
pop
xchg
aad
mov
add
negb
in
cld
lea
dec
xchg
lock
jns
xchg
push
jle
ss
imul
pop
mov
dec
inc
lahf
dec
insl
inc
pop
scas
push
pop
jns
sbb
les
fsubrs
jge
std
jb
xchg
sbb
das
jmp
mov
hlt
mov
fucom
xchg
push
fidivrs
shlb
dec
out
pop
pop
jns
and
mov
outsl
mov
in
mov
div
and
movsl
cmp
fdivrp
xor
push
sub
enter
mov
lahf
sbb
and
repnz
adc
mov
cmp
rclb
xchg
push
fidivrs
adc
rcr
stc
jo
jmp
ss
repz
cltd
out
out
les
mov
bound
inc
adc
clts
out
sub
lcall
sbb
push
mov
mov
mov
flds
mov
xchg
mov
std
scas
cmpsl
push
pushf
ret
and
outsl
scas
hlt
sti
repnz
dec
mov
sub
loope
pop
jo
mov
cmp
push
mov
cmc
sbb
mov
push
dec
fisubrs
out
setle
sub
div
out
sub
cld
stc
cmp
xchg
inc
xchg
movsb
push
insl
add
push
shl
iret
lahf
aas
or
and
xlat
mov
loope
jg
dec
jecxz
fdivr
jp
sub
iret
lahf
aas
sub
pop
je
adc
push
cmp
aas
adc
or
mov
out
repnz
iret
lahf
aas
insb
loop
scas
cmpsl
dec
xchg
adc
push
out
fldl
mov
push
xchg
mov
add
out
shr
out
lret
adc
mov
mov
cmp
and
and
sbb
aas
test
out
lahf
test
mov
mov
xor
xor
xchg
cmp
jg
cld
xor
dec
ret
popa
icebp
adc
adc
xchg
ljmp
push
or
ja
pop
push
inc
jg
loope
dec
mov
repnz
dec
and
jo
call
in
hlt
out
mov
iret
xor
outsl
loop
jmp
sub
mov
in
scas
stos
push
cli
push
sub
mov
lret
lcall
pop
pop
das
scas
mov
sbb
pop
cmpsl
sbb
pusha
inc
rclb
xchg
pop
dec
cld
pop
jg
fsubr
mov
idivl
bound
iret
lahf
pop
aam
pop
push
and
add
fsubrl
iret
hlt
lret
ss
outsb
xor
out
mov
in
and
lahf
mov
dec
xchg
sub
out
pop
lahf
movsl
xor
iret
lahf
jbe,pn
mov
push
inc
repz
add
mov
pop
jns
loopne
pop
jge
test
push
inc
mov
xchg
and
adc
stos
fiaddl
inc
ret
lahf
xchg
insl
sahf
xchg
adc
mov
inc
aas
sub
sub
les
es
sub
mov
cmp
xchg
mov
push
pop
jns
jmp
ficoml
clc
popf
mov
xchg
pop
jns
xchg
rorl
adc
mov
inc
aaa
xchg
xor
clc
jge
lock
lahf
inc
ficoms
movsb
fldcw
jb
xlat
xchg
ja
jp,pt
ja
ret
pop
jns
fnsave
pop
iret
pop
add
inc
lret
pop
mov
jbe
jno
test
jnp
inc
cmpsb
inc
lahf
insl
pusha
outsl
cld
stc
add
cs
mov
mov
push
dec
jnp
and
stc
push
leave
dec
pop
jl
mov
iret
lahf
aas
cli
mov
inc
in
ficoms
stc
std
repnz
repz
push
mov
pop
imul
ret
scas
and
pop
std
pop
xor
popa
imul
cld
nop
cli
ja
in
fists
addr16
in
and
pop
jg,pt
cmp
insb
dec
mov
movsb
jno
lahf
cld
stc
mov
daa
push
push
or
std
jl
push
pop
pop
jle
jecxz
and
xor
das
sub
jns
or
hlt
and
aad
or
lds
dec
push
int
pcmpeqw
mov
pop
xor
inc
js
pop
neg
sahf
leave
shlb
in
mov
jg
insb
mov
sub
lcall
aas
jmp
cli
into
test
pusha
das
mov
mov
andl
mov
cld
stc
sub
sbb
stc
push
pop
mov
cltd
lret
ds
pop
xchg
xchg
cmp
mov
sub
sub
fwait
ljmp
mov
scas
xorl
iret
lahf
push
subb
add
inc
icebp
dec
fldt
adc
repnz
scas
mov
lret
mov
test
stos
xchg
and
mov
mov
iret
mov
xor
into
dec
jle
repnz
ja
xor
xor
mov
ja
mov
cmp
inc
pop
pop
jns
xchg
aas
and
mov
nop
cmp
cli
adc
or
movq
and
iret
lahf
aas
pop
cmpxchg
sub
jg
jg
mov
dec
fdivl
repz
lahf
rclb
push
dec
js
and
mov
jg
cld
stc
pop
loope
pop
pop
sbb
fs
cmp
push
sub
iret
lahf
aas
add
outsl
inc
push
mov
scas
xchg
cld
stc
repz
lea
ljmp
jecxz
lahf
aas
jg
mov
xchg
lock
addr16
adc
mov
cli
repnz
jge
stc
int
pop
xor
movl
shrb
push
fmulp
loopne
es
fidivrl
xchg
fmull
xchg
lahf
aas
decl
inc
shll
or
out
loopne
mov
inc
adc
stc
stc
pop
sbb
lahf
dec
lcall
call
xor
jo
repnz
cs
negb
jae
popa
and
xchg
xchg
sub
xor
out
lcall
sbb
jp
in
pop
ljmp
repz
lahf
in
cwtl
xor
add
mov
loopne
jns
add
repnz
push
lea
xchg
ljmp
lea
lds
sti
sbb
int
addr16
inc
mov
enter
repz
mov
les
mov
jge
xor
aas
inc
mov
add
jmp
fiaddl
pop
dec
sub
out
dec
pushf
dec
xchg
scas
add
mov
aas
iret
cli
mov
jne
rolb
lock
das
mov
lret
sub
adc
xor
jns
repnz
cs
pcmpeqd
xor
mov
push
pop
inc
sub
fs
aaa
lret
push
cli
pop
fs
jb
cmp
fidivrs
aas
xchg
ss
adc
iret
lahf
aas
fiaddl
rorl
fdivl
imul
dec
xchg
inc
outsb
and
test
addr16
cld
stc
mov
xlat
xlat
fistpl
push
mov
aas
jg
mov
rorl
daa
sti
rcrb
ror
adc
mov
lret
iret
ss
jo
movsb
cmpsb
inc
outsb
inc
mov
out
in
lahf
jno
mov
pop
jmp
mov
add
outsb
lods
bound
pop
loope
scas
rep
loope
cmc
jmp
sahf
pop
cs
fcomps
mov
add
leave
xchg
sub
mov
scas
das
lea
int3
push
jl
cld
cld
stc
repz
stc
push
hlt
xchg
lds
sbb
mov
sub
xchg
mov
in
sbb
cmpsl
mov
fdivrl
xlat
fnstsw
xchg
insl
dec
scas
mov
and
xchg
mov
jp
in
arpl
and
add
xchg
mov
bound
cs
stos
xor
out
lahf
aas
or
lods
out
fldenv
fdiv
nop
push
push
stc
mov
mov
cmpsl
inc
mov
aas
jg
cld
loop
popf
adc
je
or
sbb
xchg
loope
pop
and
inc
in
ja
mov
in
icebp
sti
lcall
inc
mov
jb
xchg
into
jle
push
mov
rcpps
jg
sub
out
jecxz
adc
adc
lahf
pop
sbb
js
stos
and
xchg
je
fdivrl
xor
adc
xor
cmp
jmp
dec
inc
dec
in
push
pop
lret
pop
push
or
inc
mov
gs
push
pop
jns
orl
test
dec
mov
insb
sub
scas
jb
mov
into
scas
daa
dec
iret
lods
adc
mov
dec
sbb
inc
cmp
lret
xchg
in
jbe
aas
jg
cld
inc
fisttps
stos
add
push
mov
sbb
loop
rclb
repz
push
jle
rep
jmp
jge
sahf
es
cld
stc
adc
sbb
pop
pop
push
mov
aad
lods
jno
leave
out
sbbb
mov
outsb
ss
inc
xchg
pop
das
popf
shrl
and
iret
or
pop
mov
lret
sub
pop
scas
setge
jns
mov
cltd
fisttps
daa
jmp
cmp
aam
cmpsb
xor
mov
rclb
fdivr
repnz
loopne
inc
cmc
pop
in
cmc
ret
test
mov
pop
cli
pop
enter
incb
push
loopne
mov
pop
outsl
mov
lahf
aas
xor
je
icebp
cwtl
mov
repz
mov
dec
std
lcall
outsl
test
insl
push
or
sub
repnz
aad
cmp
sbb
lods
pop
lods
daa
xchg
pop
inc
adc
mul
out
jbe
inc
lods
mov
push
and
aas
aas
jecxz
push
mov
cmpsl
mov
fisttps
sub
add
mov
shlb
sarl
mov
mov
out
lahf
gs
repnz
pusha
imul
push
hlt
jl
hlt
divl
iret
mov
adc
out
sahf
sub
jle
mov
cmp
push
pop
push
mov
ss
icebp
out
sbb
pop
add
ret
cmpsb
jle
cld
pop
test
imul
jg
jns
add
xor
pop
dec
pushf
nop
inc
popf
sbb
aas
iret
scas
mov
jae
cmp
cmpsb
repz
sbb
das
and
aas
adc
gs
pop
dec
mov
mov
mov
iret
insl
gs
adc
add
rorb
aas
mov
in
push
ljmp
scas
sti
in
out
repnz
jae
inc
sbb
rcr
iret
lret
mov
je
add
sbbb
bnd
or
aam
int
jae
movsb
daa
push
decb
or
test
stos
movsb
test
xchg
pop
scas
call
jg
cld
stc
xlat
add
and
lahf
outsb
std
or
mov
cmp
lahf
aas
ret
pop
mov
nop
xchg
dec
sub
iret
addr16
sub
xchg
jmp
mov
inc
adc
xor
sub
pop
rol
fdivs
sbb
outsl
les
aas
scas
jo
negl
xchg
in
out
lret
movsl
xchg
aad
jle
dec
adc
ljmp
sbb
pop
outsl
jl
push
mov
mov
mov
cld
mov
mov
shll
inc
sbb
cltd
sub
cmpl
jle
lret
lock
push
sbb
cmpsl
lret
xchg
push
pop
mov
loop
dec
push
cmp
and
out
aaa
mov
test
jg
cld
call
lea
pop
xchg
das
ja
daa
jb
inc
repnz
pop
ret
fstps
push
jge
in
xchg
jmp
in
gs
bnd
in
push
ficomps
pop
or
sarl
lock
or
cwtl
out
cmp
in
xchg
and
dec
ficoms
jns
add
mov
jne
icebp
negb
pop
jns
xchg
pop
pusha
cmpsl
test
out
icebp
data16
add
mov
jge
shll
rorl
inc
xor
subl
cmp
rcll
in
gs
mov
mov
jnp
and
test
sub
ffreep
xchg
xchg
cmp
fisubrs
repnz
repz
repnz
imul
rcr
push
mov
jl
fdivrp
test
hlt
ret
test
jae
jmp
cltd
sbb
js
or
fdivrl
mov
loop
stc
repz
out
in
sbb
call
popa
cmp
mov
ja
mov
loop
adc
iret
lahf
aas
rclb
cltd
in
mov
pop
dec
xor
int3
cld
stc
repz
jo
popf
pusha
outsb
jecxz
filds
push
cmpsl
inc
sub
jg
jl
je
insb
pop
xchg
das
push
setle
je
mov
push
insb
stos
adc
push
sbb
jg
mov
mov
das
cli
repz
jne
mov
out
lahf
aas
add
sub
mov
push
mov
repz
inc
movsl
je
icebp
aad
scas
mov
popa
mov
jno
outsl
xchg
mov
cmpsb
loop
fwait
xlat
jne
fstpl
leave
xor
inc
imul
andb
shrb
push
pop
loop
nop
dec
xchg
or
stc
repz
fsubp
xchg
or
push
pop
mov
aas
mov
push
hlt
pop
ja
fdivr
out
sbb
jg
xchg
mov
adcl
add
sbb
or
jmp
sbb
nop
iret
jo
mov
andb
jmp
repnz
cmp
jmp
sbb
cld
push
scas
mov
ds
mov
out
lahf
aas
aad
insl
mov
push
mov
cmp
cmpsb
xchg
loopne
sbb
loop
adc
sub
gs
fistps
add
sahf
jecxz
sbb
fistpl
les
movsb
cmpsb
or
stc
repz
push
lahf
pop
and
xchg
bswap
lahf
jg
mov
sbb
repnz
push
data16
ret
mov
outsb
jg
hlt
adc
cwtl
push
and
jle
out
lahf
aas
int3
push
add
imul
sti
cld
stc
repz
push
jge
out
cltd
iret
lahf
aas
jg
jns
rcll
mov
outsl
cld
stc
repz
lods
mov
stc
push
mov
xchg
lahf
loopne
mov
mov
mov
push
lds
out
outsl
and
aam
pop
jg,pt
push
dec
mov
std
repz
sub
jp
sbb
sbb
inc
add
scas
inc
popf
mov
ss
xor
mov
scas
mov
and
mov
bound
mov
lods
pop
imul
hlt
sbb
iret
aaa
mov
add
popl
mov
ficoml
jne
jp
pop
sbb
sahf
pop
fidivrs
or
aas
mov
jl
and
and
mov
bound
push
pop
cld
stc
dec
out
in
pop
imul
movsl
xor
out
decl
insl
call
sub
and
mov
dec
or
mov
lret
xchg
hlt
imul
popa
pop
mov
lret
das
out
dec
cld
pop
pop
lods
xor
mov
xor
or
add
std
xchg
mov
bound
or
jnp
das
lahf
aas
sbb
inc
out
xchg
or
mov
out
inc
xor
pusha
sbb
push
and
jg
cld
clc
into
sub
cli
rcrb
mov
or
repz
lahf
push
mov
icebp
fsts
xchg
clc
jg
cld
stc
and
push
icebp
imull
sub
iret
lahf
aas
xor
mov
popa
push
cld
stc
repz
adc
das
mov
pop
data16
adc
out
ja
jg
or
lahf
mov
xchg
hlt
in
cmc
in
test
sahf
lret
cli
xor
fidivrs
mov
jg
cld
into
lret
xchg
mov
loope
sarb
je
out
lahf
push
push
mov
mov
cmp
cmc
repnz
mov
inc
jg
cld
or
inc
addb
out
lahf
aas
sti
ret
mov
xchg
mov
div
lret
and
pusha
pop
cs
test
rcl
ljmp
loope
mov
add
jns
fldl
iret
shl
fiaddl
daa
rcll
lret
xchg
push
sub
daa
jnp
aad
mov
pop
jns
pop
aad
xchg
mov
mov
in
dec
inc
dec
leave
loopne
lret
popl
add
and
fildll
jne
pop
jle
cld
sahf
cs
js
xorl
pop
push
adc
decl
mov
cmp
lret
stos
fisubrs
cmpsb
push
mulb
fnstenv
js
shll
mov
je
adc
outsb
xchg
push
fdivrp
jg
test
mov
gs
jge
in
leave
js
inc
cmpsl
and
mov
adc
xchg
push
shll
mov
clc
pop
sub
dec
aas
mov
mov
mov
pop
repz
lahf
sub
loop
pusha
pushf
fstp
shll
cld
stc
out
mov
mov
and
pop
out
out
push
repz
fcmovb
fwait
lret
mov
jns
xchg
aas
fisubl
addr16
addb
xchg
push
add
scas
sbb
and
into
popa
jb
xchg
push
pop
push
loope
shr
out
and
fisubl
repz
into
xchg
xor
push
xor
cld
or
adc
sahf
xchg
mov
repz
lahf
pop
mov
jecxz
inc
and
jmp
stc
xchg
shlb
imul
xor
in
ja
ret
dec
test
les
mov
jns
fists
out
inc
fcoml
sub
mov
xorl
fidivrs
push
jl
fistpll
fistpll
dec
testb
in
push
sub
fwait
mov
mov
xchg
push
pop
inc
jmp
adc
push
fidivrs
ja
in
sahf
mov
pop
shrl
mov
gs
lods
rcrl
das
mov
negb
mov
mov
icebp
mov
adc
in
aam
or
adc
adc
xor
test
jg
sbb
xor
repz
xchg
cld
pop
jns
xchg
mov
nop
fucomip
pop
cld
and
cmpsl
imul
add
pop
or
gs
xchg
jnp
lcall
sarl
cmp
mov
rorl
xor
xchg
mov
in
andl
push
cmp
ror
xchg
adc
cwtl
pusha
xchg
aas
jg
push
test
xchg
cmpsl
pop
je
ljmp
loopne
xor
lgs
test
ret
add
iret
aad
dec
xchg
sbb
pop
fisubl
in
out
sub
stc
shr
sbb
cmp
jge
nop
iret
lahf
aas
jg
hlt
sub
or
cmp
jns
lret
out
dec
inc
add
outsl
aam
and
sbb
dec
popa
push
xlat
xor
pop
jns
or
or
shr
mov
fidivs
cs
sarb
lahf
aas
jg
pop
rcr
addb
or
cld
stc
repz
ljmp
lret
lret
xchg
insb
je
aas
jg
repnz
mov
xchg
fiadds
mov
xchg
in
in
mov
dec
in
aaa
rorb
pop
cmp
orl
jns
inc
rcrl
lods
dec
daa
ret
mov
lret
xchg
cmp
mov
cwtl
sub
jle
pop
sub
bswap
sti
loope
fidivrs
shrl
xlat
les
pcmpeqw
jmp
repnz
aam
clc
fldt
idivb
mov
mov
arpl
out
push
lret
shlb
insl
call
sub
jns
and
dec
inc
sub
pop
scas
mov
mov
cmp
or
inc
mov
xchg
mov
movsb
xchg
xchg
lahf
out
push
cld
stc
repz
fildl
lock
push
imull
xor
jnp
mov
jg
aam
xchg
stc
lret
add
dec
fwait
imul
dec
frstpm(287
or
fs
rorl
in
sub
pop
pop
jns
or
cmc
add
in
mov
stos
xchg
gs
adc
mov
clc
movsl
daa
inc
in
push
pop
push
out
leave
jne
pop
fidivrl
jb
pop
dec
hlt
jb
xchg
je
mov
repnz
dec
dec
out
popa
std
jae
arpl
lcall
enter
jne
xor
pop
jle
xchg
jg
pop
mov
flds
lret
mov
or
sbb
repnz
pop
pop
call
xchg
adc
sbb
repnz
aad
sub
xlat
pop
lock
scas
mov
lret
inc
cmp
or
in
dec
pop
mov
rolb
hlt
or
arpl
jbe
and
js
xchg
clc
daa
lahf
mov
xor
lock
mov
and
subb
clc
sti
add
mov
jg
xor
fdivrp
repnz
les
je
xchg
lcall
leave
dec
push
xor
mov
ljmp
push
xor
mov
or
inc
fbstp
bound
sbb
repnz
dec
outsl
sbb
pop
sbb
jg
enter
add
push
in
stc
repz
int3
inc
dec
daa
cmp
scas
jne
xchg
fisubs
cld
repnz
xchg
cmp
add
jg
pop
lds
call
cmpsl
fstps
pop
dec
leave
push
cmpsl
mov
stc
cli
pusha
addb
js
dec
lods
dec
test
xchg
iret
lahf
aas
add
jnp
dec
mov
repnz
add
dec
daa
push
sub
mov
mov
lahf
mov
push
adc
imul
jbe
lret
mov
cld
stc
mov
xchg
sbb
nop
dec
pop
jle
out
push
mov
mov
inc
jae
cli
mov
test
in
and
pushf
shll
iret
scas
cmpb
push
popf
xchg
scas
jae
and
push
div
out
std
inc
inc
pop
aad
dec
daa
outsl
test
cmp
pop
push
push
dec
in
lcall
pop
xchg
push
pop
jns
pop
jno
mov
mov
mov
ss
push
pop
jns
pop
or
clc
mov
push
pop
add
hlt
lret
cmp
fidivrl
imul
adcl
aas
xchg
xchg
insl
in
leave
and
fstl
fisttpll
xchg
in
push
pop
fwait
lods
mov
fcomi
gs
decb
jns
or
pop
adc
fimull
in
push
mov
repnz
outsl
cmp
rorl
lret
dec
mov
cmp
mov
push
cmp
add
cmp
and
in
push
ds
push
mov
subl
push
pop
mov
add
sub
cmpl
fisttpl
shl
outsl
lock
std
inc
pop
scas
dec
mov
pmullw
fimuls
add
xlat
arpl
or
jns
pop
jbe
or
shlb
das
jg
jge
xor
pop
xchg
fwait
pop
inc
add
repnz
aad
inc
scas
xor
mov
scas
xchg
mov
push
xor
mov
test
stos
sub
das
stos
iret
lahf
aas
shll
mov
stc
repz
lds
mov
mov
gs
imul
fidivs
pop
jmp
stc
repz
pusha
mov
inc
lahf
andl
stc
cld
aaa
add
mov
jo
cmpsl
in
jg
cld
stc
rcrb
cmp
mov
pop
dec
ret
pusha
insl
ret
aas
and
notb
lods
dec
lret
sub
daa
iret
sbb
in
add
in
push
std
pop
adc
mov
push
dec
test
sti
jg
cmp
outsb
int3
outsl
jg
in
test
cmp
in
cmp
fldl
mov
dec
pop
jns
lret
fdivl
ret
das
aas
pop
into
test
push
mov
jbe
cmp
sub
push
mov
aaa
in
andl
scas
or
lret
push
xchg
push
pop
jns
insb
mov
fsubrp
add
jns
jl
rol
out
sbb
xor
cmp
xchg
adc
xchg
and
fstl
xlat
iret
mov
clc
and
pop
or
andb
push
push
mov
sahf
pop
js
or
pop
in
jnp
into
jl
or
xor
scas
out
test
and
nop
mov
add
popf
and
add
insl
cmp
call
pop
adc
cli
ja
repz
sbb
mov
jne
imul
inc
pop
push
sahf
stos
jge
imul
or
out
std
and
xor
adc
iret
mov
test
pop
jae
daa
cmpsb
sub
repnz
inc
mov
fs
fistpll
in
adc
imul
rclb
ja
fdivrp
pop
lock
lahf
mov
ret
or
jecxz
out
js
adc
dec
inc
pushf
mov
insb
cld
repnz
add
fbstp
cmpsl
adcb
push
scas
out
cltd
push
pop
div
insb
mov
out
rclb
mov
inc
in
cld
or
cmp
pop
sbb
es
mov
rcl
in
jne
shlb
clc
and
pop
in
xor
sbb
pop
out
xchg
cld
or
lds
in
lcall
inc
enter
test
sub
out
loopne
push
xchg
inc
jno
mov
sub
jle
sti
repnz
sbb
jg
jbe
mov
mov
out
pop
fucomp
loope
jp
orb
out
scas
subb
pop
and
ds
sub
enter
out
outsl
rcll
and
psubsw
gs
jg
cld
stc
pop
pushf
outsb
outsl
icebp
loope
stos
bound
inc
mov
lods
pop
ds
mov
jle
iret
mov
lahf
aas
jg
and
mov
mov
cwtl
int
mov
ja
repz
or
roll
pop
mul
cmp
or
pop
inc
insb
push
pop
das
scas
mov
out
jo
bound
or
mov
mov
into
fldt
push
enter
in
das
repz
jne
stc
lock
pop
fisttps
or
shlb
xchg
push
mov
pop
pop
mov
js
sub
inc
cld
std
dec
xchg
js
pop
out
fdivrs
jae,pt
add
iret
lahf
aas
jg
add
adc
adc
mov
daa
mov
stc
repz
loopne
push
and
mov
aam
popf
inc
xor
nop
xchg
mov
jg
popf
jle
push
add
add
mov
push
pop
jns
push
fdivrs
push
daa
fs
push
pop
jns
mov
and
cmpsb
das
pop
mov
jb
xchg
cmp
imul
into
mov
push
mov
mov
popa
push
subl
and
push
cli
in
and
movsl
push
sahf
stos
pop
sub
leave
mov
ret
push
pop
ret
xchg
sub
ffreep
xchg
fcomps
xor
mov
subb
aas
rolb
aas
icebp
adc
adc
adc
sub
stc
add
das
stos
add
pushl
mov
or
push
mov
xchg
lahf
aas
jb
push
mov
dec
sub
andb
incl
repz
push
pushf
xchg
mov
insb
sub
das
mov
add
dec
das
outsl
jo
repnz
stc
repz
leave
or
popa
stos
adc
push
shlb
lahf
aas
jg
popa
call
mov
out
insl
jae
mov
mov
sbb
sub
push
add
xchg
shl
xchg
xchg
ja
cmp
cmp
jne
orb
imull
mov
mov
fs
dec
push
pop
lret
xchg
push
pop
adc
and
std
stc
stc
xor
mov
jo
fsubrp
lcall
push
fidivrs
inc
mov
adc
xor
roll
and
outsb
pusha
jae
or
dec
into
aaa
sub
pop
push
and
cwtl
xor
scas
mov
adc
filds
inc
in
lds
repnz
pop
jecxz
lret
icebp
push
shll
sub
jne
mov
adc
shrb
sub
jge
xor
xor
mov
idiv
repnz
and
pop
jg
jl
adc
aam
xchg
xor
sub
out
out
out
lret
sub
and
out
mov
scas
mov
clc
bound
daa
dec
addl
cmpsl
mov
in
pop
or
mov
mov
ffree
stos
pop
paddw
mov
int3
mov
leave
pop
xchg
mov
lret
ds
sub
mov
sub
outsb
sub
movsl
test
dec
cli
testl
aam
adc
lock
jbe
push
loope
adc
cld
add
in
inc
cmp
sbb
fsubrs
lahf
aas
jg
cmp
clc
sahf
or
test
aas
aas
aam
pop
out
shl
dec
leave
xchg
inc
ror
sub
pop
add
stc
repz
enter
insl
pop
sti
push
std
push
xor
rcrl
lahf
aas
jg
cld
inc
or
pop
jmp
or
imul
repz
insb
sbb
aam
xor
fxch
lret
mov
fiadds
sub
stos
add
scas
mov
add
xor
stos
adc
xchg
adc
sbb
aas
push
ds
cld
hlt
inc
dec
mov
ds
gs
jns
mov
movsl
popf
gs
repz
pop
addr16
xchg
jnp
and
or
loopne
jg
or
add
sub
dec
push
push
dec
lock
pop
ds
test
cs
movsb
std
repnz
test
jle
jno
subb
dec
aaa
cli
arpl
out
lahf
xchg
jns
pop
mov
inc
adc
subb
push
jp
call
mov
add
nop
lahf
ljmp
gs
jg
jg
outsb
jbe
sub
mov
dec
cmp
shl
add
ss
leave
push
inc
fmull
lahf
in
and
sub
scas
lods
jle
mov
pop
xchg
push
ret
cld
inc
ds
push
popa
rcll
cmp
jbe
repnz
and
lahf
aas
adc
stos
lods
lock
add
sub
xchg
in
pop
dec
fidivrs
in
in
sti
and
lcall
outsb
dec
jns
xchg
push
jecxz
cmp
xor
fwait
mov
enter
xchg
push
pop
cmp
les
and
adc
fstp
mov
cmpl
adc
test
jns
dec
orb
jnp
out
or
mov
jns
test
stos
lret
push
rorb
in
sbb
pop
jns
xchg
and
pusha
sub
xchg
ret
mov
out
test
xchg
ja
sub
sti
aad
mov
xchg
movsb
out
popa
adc
inc
int3
and
lret
sub
and
fisubrs
mov
jmp
mov
lea
xchg
cli
lahf
out
push
xlat
push
jno
and
cld
stc
xrelease
loopne
mov
movaps
scas
aam
iret
xchg
aas
jg
adc
xchg
mov
cld
stc
repz
jge
or
xor
ds
cld
gs
pop
clc
pushf
aaa
mov
sub
test
iret
lahf
aas
mov
arpl
call
aam
xchg
je
repz
rolb
cld
stc
adc
xchg
cli
into
inc
jnp
lahf
aas
jg
sbb
into
and
mov
in
sbb
incl
repnz
xchg
iret
xchg
repz
hlt
cmp
sub
mov
sub
pop
outsl
mov
push
jge
aas
mov
fimull
mov
dec
minps
and
xchg
call
mov
mov
cmp
in
dec
push
xchg
push
cmc
enter
test
fdivrs
pop
loopne
repz
cs
repnz
and
sub
insl
and
or
loope
outsl
dec
cmp
loope
scas
mov
mov
jl
cld
stc
inc
lea
cmp
add
mull
xchg
hlt
inc
decl
push
dec
pop
lods
and
imul
cld
scas
repz
fst
dec
push
xor
ljmp
lahf
jne
sub
or
inc
add
mov
jae,pn
push
mov
ret
das
scas
mov
test
mov
mov
xchg
mov
aaa
rcl
iret
std
scas
mov
loop
iret
lahf
inc
stos
lods
or
adc
icebp
outsb
pop
jecxz
iret
lahf
pop
push
cltd
out
je
push
mov
cltd
and
repz
xchg
test
xchg
cmp
and
aas
jg
or
cmp
push
lods
push
ja
dec
sub
out
lahf
enter
jle
je
inc
aam
cmpsb
pop
std
jge
stc
js
xchg
out
das
jno
xchg
push
fdivrp
iret
dec
inc
xor
sub
pop
std
outsb
dec
ret
pop
jns
aam
pop
mov
scas
cmc
fistps
adc
in
mov
shr
jp
adc
pop
mov
das
push
pop
pop
pop
fstpl
loope
mov
scas
lahf
mov
ud2
insl
iret
repnz
xchg
sub
in
sbb
std
int
cld
inc
cli
xchg
dec
test
daa
into
mov
lret
jg
das
jg
aas
sbb
mov
sahf
xchg
mov
sub
inc
ror
scas
push
jne
inc
cs
push
mov
sub
add
gs
repz
pop
fdivrp
pushw
aas
mov
pop
add
out
lahf
pop
cmp
aad
jne
cld
iret
lahf
arpl
repz
iret
or
mov
call
cmp
lahf
jg
sahf
xor
mov
xor
icebp
lret
out
jmp
punpcklbw
pop
sub
loopne
push
outsl
jecxz
mov
ja
ja
adc
xchg
pop
jns
xchg
jmp
cmp
es
dec
test
flds
js
lods
push
mov
adc
sbb
das
fisttpl
push
shrb
and
jg
jle
cld
jns
mov
fadd
loop
movsl
leave
sbb
sahf
cmp
dec
adc
dec
fldl
das
jge
jle
mov
sub
loopne
aas
cmc
lret
into
add
imul
test
pop
cmp
xchg
mov
shl
repnz
ja
sbb
in
arpl
and
mov
mov
jns
cmp
cwtl
sub
adc
cld
scas
pop
fucomi
xchg
popf
and
cmp
xchg
int3
and
scas
iret
lahf
pop
inc
mov
fistpll
push
ret
cli
repnz
out
sbb
inc
sbb
mov
cld
add
inc
mull
mov
scas
sbbb
lds
ficompl
xchg
add
in
mov
iret
xchg
nop
pop
out
fildll
test
arpl
jo
sub
shlb
cmpsl
frstor
jae
scas
mov
jg
fcoml
mov
fisttpl
mov
lret
out
scas
mov
jp
cmpsb
cmp
lahf
dec
push
mov
xchg
jns
test
cld
pop
test
into
mov
decl
xchg
stc
repz
and
clc
insl
cld
in
ss
ss
stc
cld
pop
inc
sub
jp
stc
repz
push
mov
or
add
aas
jg
cld
push
int
movsb
lods
ja
outsb
in
popf
shl
out
lahf
push
int3
and
xor
fldcw
cld
stc
fld
lahf
mov
sbb
xlat
gs
add
iret
lahf
aas
imul
in
std
sub
leave
xchg
cwtl
adc
cld
stc
repz
outsl
inc
push
call
stos
mov
sub
aas
jg
into
adc
jnp
dec
dec
dec
add
cld
stc
rep
mov
jb
je
inc
movsl
mov
xor
or
or
clc
in
inc
stc
fimuls
fsubrp
movsb
dec
mov
push
cwtl
arpl
mov
das
pop
mov
test
out
out
shrb
adcl
mov
jns
in
or
gs
dec
ret
jl
inc
je
ljmp
in
das
iret
hlt
scas
fidivrs
stc
retw
mov
mov
sub
mov
in
push
shlb
add
xchg
in
jno,pn
subb
cltd
or
fsubrs
ret
cmp
xchg
pop
das
jmp
mov
outsb
lcall
jbe
mov
sti
repz
lahf
lock
mov
push
pop
addb
int
jle
cld
stc
fiaddl
mov
push
cltd
add
ja
mov
lock
setb
xchg
imul
push
cltd
out
shll
in
push
pop
in
sub
gs
xchg
sub
xor
xor
sbbb
and
mov
pusha
jl
fists
sub
out
mov
or
dec
call
stc
repz
jae
sbb
aad
jbe
xchg
pop
daa
mov
mov
pop
jg
push
pop
jns
adc
and
call
pop
jns
sbb
addr16
addr16
mov
clc
pop
jns
xchg
nop
pop
cmp
int3
test
sub
in
das
push
jo
js
gs
jmp
push
pop
jns
movsl
add
push
shrb
mov
lahf
aas
mov
movl
stc
repz
sbb
or
insb
adc
jb
aas
cmpl
cld
inc
sti
pop
cmpsl
sub
dec
or
inc
aaa
jecxz
iret
lahf
xchg
adc
int3
clc
xchg
int
mov
fcmovne
sub
jae
pop
ret
cld
repnz
lcall
mov
test
aas
jg
xchg
in
pop
adc
hlt
sbb
repnz
in
aam
mov
out
pop
outsb
pushf
cli
mov
inc
and
roll
jg
mov
xchg
cli
repnz
jbe
int3
in
cltd
int3
out
lahf
pop
xor
dec
mov
mov
lret
mov
cmp
arpl
loop
push
movsb
das
movsb
lret
inc
loopne
inc
fisttpll
and
inc
jge
scas
xor
jo
roll
jns
mov
orb
push
sub
dec
push
fidivrs
arpl
cmp
jns
xchg
dec
lahf
push
loop
dec
fs
adc
adc
lret
dec
mov
dec
repnz
test
loop
mov
lods
rcrb
scas
mov
jge
inc
hlt
aam
cli
pop
sub
notl
je
pop
lods
xor
aaa
lcall
mov
clc
adc
lcall
cs
pop
jns
clc
repnz
cmpsl
cmp
cmpb
lds
and
stos
add
mov
push
dec
scas
cld
stc
repz
shl
bound
mov
mov
loope
mov
jns
push
mov
push
stc
das
mov
dec
xchg
mov
mov
in
ja
xchg
push
push
push
test
sarl
pop
jns
xor
mov
clc
scas
iret
pop
pop
jns
pop
outsl
ret
es
fcoml
out
mov
pop
jg
rcpps
pop
loope
in
jb
mov
mov
sar
fdivl
push
fdivrp
inc
dec
lods
mov
xchg
mov
test
lret
int
clc
pop
and
das
mov
rclb
repnz
push
sub
or
movsl
dec
data16
pusha
cld
insb
jae
mov
orl
clc
lahf
aas
inc
jl
lcall
pminub
test
cmp
pop
push
mov
aad
xchg
push
pop
mov
aad
scas
out
cmp
mov
adc
push
pop
jns
or
pop
test
in
ret
scas
inc
stos
jne
adc
ret
push
adc
mov
psubq
fcomps
mov
cli
lea
adc
mov
aas
push
mov
rclb
shl
and
inc
std
into
pushf
and
out
mov
movsb
inc
push
xor
jmp
cld
stc
notb
sub
mov
mov
sbb
fwait
xchg
and
and
mov
xchg
jmp
pop
stos
jmp
cli
sub
loope
lret
icebp
xchg
or
sub
cmp
nop
outsb
loopew
cmp
mov
decb
mov
push
loop
insl
mov
out
lahf
aas
mov
push
ss
and
cld
stc
repz
xor
xchg
mov
dec
mov
pop
out
mov
lds
dec
lods
xor
lret
fisttps
repz
pop
inc
stos
xchg
pop
scas
mov
je
outsb
xor
pop
or
pop
jns
dec
sbb
xlat
pop
and
inc
xchg
jl
ja
out
das
mov
mov
and
add
pop
rolb
dec
add
jg
aaa
mov
or
stc
repz
mov
mov
mov
sub
pop
jg,pt
pop
mov
clc
lret
pop
jo
push
jl
mov
out
pop
jne
add
pop
cmc
lret
fstpl
push
fildll
adc
jg
cld
stc
shlb
pop
mov
dec
dec
adc
or
aas
xchg
sub
dec
fistpl
jns
sahf
sub
scas
mov
add
mov
xchg
mov
loopne
lret
pop
fiadds
fisttps
inc
hlt
aas
mov
cmp
dec
push
cmp
dec
mov
iret
lahf
jg
scas
cmp
ljmp
div
out
cmp
xor
push
jg
pop
pop
movsl
arpl
xchg
mov
dec
aam
cmpsb
repz
lahf
xchg
lret
adc
sbb
jg
cld
stc
jp
scas
sub
cld
jne
inc
jge
loopne
xchg
lahf
aas
push
in
xchg
negb
repz
imul
xlat
mov
mov
fdivrl
mov
stc
repz
dec
std
or
ficompl
in
aaa
std
xchg
mov
pop
xchg
dec
xor
jns
pop
insl
pop
jns
xchg
xchg
test
jns
jbe
ret
mov
xchg
push
inc
call
inc
cmp
notb
pop
mov
leave
or
repnz
cmpl
inc
out
or
cmpsl
adc
pop
jns
xor
fldt
divb
jge
ja
sub
cwtl
dec
cmp
jnp
pop
push
push
mov
sbb
les
push
fldcw
lcall
dec
shrb
repz
mov
xchg
lds
push
repnz
mov
mov
mov
out
mov
add
cld
stc
repz
and
in
andl
mov
and
jg
add
push
pop
out
gs
repnz
fistps
out
es
test
inc
das
scas
mov
test
dec
adc
mov
bswap
and
push
cld
mov
sub
loop
lret
rcll
test
jg,pt
push
mov
cs
out
scas
sahf
push
push
stc
dec
std
xor
data16
icebp
or
lock
xchg
cld
stc
sahf
mov
and
mov
jo
iret
lahf
aas
or
insl
out
fidivl
popa
pop
jns
repnz
cwtl
les
out
jnp
mov
cs
pop
pop
ret
xchg
mov
cmpb
fildll
dec
scas
mov
out
pop
add
cltd
sub
cmp
mov
dec
mov
in
push
loop,pn
push
xchg
pop
pop
xchg
push
pop
jns
push
inc
pop
xor
sub
xchg
jns
gs
mov
test
mov
mov
out
add
neg
das
lahf
aas
or
cltd
repnz
in
push
pop
jns
loop
dec
push
vpackssdw
sub
jns
xchg
cli
or
divl
call
outsl
fstp
mov
push
in
test
pop
jns
pop
js
push
mov
loop
pop
adc
sbbl
test
jb
inc
push
jg,pn
cld
stc
out
jge
xor
bnd
subb
mov
add
push
sbb
pop
scas
mov
lcall
out
loope
dec
add
cmpl
cli
out
lock
scas
sub
xor
out
jg
adc
clc
in
imul
iret
lahf
pop
outsb
int
push
cwtl
imul
cld
jp
and
out
aam
icebp
dec
fs
xor
psubb
mov
xor
push
cli
in
imul
sub
lock
pop
cld
sahf
das
mov
mov
xor
jle
inc
dec
jg
cld
stc
ljmp
jne
stc
gs
out
lahf
aas
sub
stc
mov
cld
out
or
cld
stc
rep
cwtl
add
popa
shll
js
xchg
ja
jle
and
iret
mov
and
jb
cmpsl
mov
loopne,pt
repz
mov
jbe
push
call
stc
aas
mov
mov
fldcw
cltd
dec
jne
sbbl
mov
punpcklbw
lahf
xchg
mov
in
mov
mov
fs
cld
stc
repz
mov
movl
mov
aas
jg
ficoml
fdivl
xor
shlb
pusha
pop
pop
jb
and
xchg
push
xchg
popf
jno
lcall
incb
sub
sub
mov
jg
movsb
fstpt
push
sub
popa
push
mov
and
gs
mov
idivl
mov
inc
dec
xchg
mov
mov
pop
cmp
xchg
movsl
aas
loope
fisttps
and
jle
push
je
out
lahf
xlat
add
int
enter
xorb
dec
fcomps
out
xchg
jno
jle
jl
cmp
in
pop
pop
ror
jne
lahf
aas
jg
test
je
mov
and
stc
repz
add
pop
or
mov
pop
shll
lock
adc
stc
int
hlt
jb
jg
movsb
push
fwait
imul
and
mov
or
das
lahf
lret
cltd
and
mov
out
xchg
pop
scas
aaa
add
fsubrs
pusha
xchg
push
pop
jns
jae
mov
xor
pop
jns
add
outsl
cmovo
mov
pop
les
inc
sahf
outsl
decb
stc
repz
hlt
aad
int3
or
jecxz
sub
pop
push
cld
dec
cmp
sub
out
shrd
mov
sub
jmp
jno
dec
cmp
sub
test
aam
stc
cmpsl
aas
cmp
iret
outsb
dec
sbb
jg
imul
aad
mov
popa
dec
lods
ds
repz
xchg
std
cmp
in
and
cli
pusha
pop
cmpsb
and
inc
mov
sbb
lret
inc
and
test
cld
stc
repz
leave
je
leave
xchg
sbb
test
push
fdivrs
mov
cli
jg
aad
ljmp
es
daa
pop
lahf
iret
test
loopne,pn
xchg
inc
sahf
jle
das
jg
call
mov
lcall
mov
jecxz
fimuls
outsl
iret
lahf
aas
jg
subl
sbb
jmp
loop
adcb
jmp
cmpsl
xchg
add
repnz
pop
adc
sub
sub
add
cmp
iret
mov
sar
and
out
push
pop
shrb
push
jo
call
jo
pop
adc
adc
femms
pop
mov
lret
sub
cmc
dec
or
sbb
dec
insb
jmp
push
in
sub
fisubrl
lret
in
mov
scas
mov
push
mov
out
xor
mov
and
shrb
out
push
nop
data16
push
hlt
mov
gs
insb
fldl
xor
jo
roll
imul
push
and
aam
sbb
sti
in
stos
push
xchg
and
or
cmc
dec
test
stos
repnz
xchg
sub
xor
lcall
dec
mov
scas
mov
jmp
mov
xorb
ret
aam
jl
sbb
arpl
ret
repnz
dec
in
pop
rcr
lcall
lret
stos
call
sbb
sub
jbe
sub
test
jae
insl
insb
int3
pop
test
mov
scas
aaa
aam
or
adc
lret
pop
loopne
cld
mov
sub
pop
or
add
repnz
int
pop
cmp
lret
cmp
add
aam
fidivrl
out
out
sub
fdivrs
jae
add
addr16
mov
push
xchg
inc
push
hlt
push
sti
in
jg
push
mov
sub
lahf
in
idiv
pop
inc
lahf
lahf
mov
adc
pop
jns
rol
inc
fdecstp
and
test
cmp
stc
mov
aam
ja
insl
lret
sahf
pop
fs
xchg
mov
sub
fnsave
outsl
pop
sub
xchg
push
pop
jns
fcmovb
xchg
xchg
les
cmp
jle
int3
push
pop
jns
stos
and
pusha
mov
xchg
jo
out
les
cmpsb
mov
stc
cs
mov
cld
stc
repz
stos
sti
cmpl
or
xor
inc
mov
mov
pusha
mov
movsl
outsl
mov
sub
pop
xchg
ja
jl
mov
data16
repnz
cmp
dec
adc
xchg
idiv
xchg
out
adc
imul
je
pop
jns
fisttpl
add
js
dec
stos
mov
pop
jns
xchg
cmpsl
daa
rorb
adc
jb
xchg
push
adc
sti
addr16
pop
in
pop
or
jnp
arpl
aas
mov
mov
scas
rolb
xlat
imul
js
cmp
cmc
fwait
inc
out
scas
lods
adc
mov
mov
inc
divl
dec
cmp
or
jns
xor
inc
sti
sub
js
jae
sbb
insl
or
mov
loop
sarb
pop
sbb
aam
pop
inc
das
pushl
enter
scas
loopne
iret
lahf
pop
push
jg
sub
or
push
test
pop
mov
jmp
cwtl
lret
hlt
fs
lret
iret
lahf
jle
clc
in
xor
or
add
out
ffreep
scas
or
xor
in
pop
mov
std
ja
repz
jnp
repz
out
sbb
push
imul
cmp
pop
fnsave
jns
xchg
ja
ja
inc
mov
js
push
pop
stos
movsl
xor
and
gs
and
out
pop
sbb
scas
xchg
cmp
sahf
adc
cmp
jg
cld
xor
xor
iret
adc
fcoml
fstl
out
and
lods
mov
push
pop
jns
cmp
pop
lods
sub
xchg
push
pop
jns
push
xchg
aad
iret
pop
fidivl
ja
lret
xchg
rcrl
out
cld
stc
xchg
icebp
cmp
dec
repnz
ds
jg,pt
rclb
add
sbb
pop
pop
das
popa
out
ds
pop
inc
setp
dec
push
fdivrl
sbbb
cmpsb
insl
out
sbb
or
lahf
jg
pop
or
icebp
out
add
xor
xchg
icebp
in
iret
in
lret
push
fstpt
ljmp
in
das
ds
pusha
fcmove
imul
mov
fmuls
repz
in
jne
xchg
aas
jg
fwait
sbb
jecxz
cmpsl
pop
test
xor
stc
repnz
fildll
sarb
xorl
pop
dec
pop
fsts
push
jge
push
xchg
push
pop
jns
mov
and
sub
push
shl
mov
in
fstpt
rorl
neg
aas
jg
cld
add
push
xor
push
fmuls
das
lahf
leave
lods
stos
data16
cltd
fildll
push
pop
jns
in
jo
mov
adcl
std
jnp
in
jge
movsl
and
inc
outsl
call
fidivrs
inc
xchg
xchg
js
repnz
sub
xchg
push
pop
jns
xchg
js
pop
fdiv
cmp
push
pop
jns
mov
arpl
cli
cmpsl
test
sub
in
jae
hlt
aam
arpl
cmpsl
dec
cld
jnp
icebp
in
push
test
sti
inc
mov
testl
dec
and
fists
mov
mov
sbb
call
repz
dec
ds
fdivp
cltd
sub
cld
stc
and
and
or
js
and
scas
gs
inc
aam
pushl
add
repz
lahf
in
sub
xor
sub
dec
inc
outsb
mov
cld
stc
lahf
mov
pusha
and
xchg
into
jle
jg
das
mov
cs
cmp
fsubl
ret
iret
cld
dec
xchg
xchg
mov
sub
lock
cld
xchg
shrl
in
mov
mov
lahf
scas
jle
lret
xchg
lahf
pop
xchg
pop
outsb
jno
push
xor
rcrl
scas
add
mov
pop
jns
pusha
stos
inc
js
scas
jno
push
xor
add
jns
lret
xchg
jne
cmp
lahf
icebp
fistps
std
jnp
jge
inc
mov
ss
add
out
ds
mov
iret
lahf
aas
jg
cs
add
arpl
pop
dec
jle
jmp
mov
mov
repnz
inc
xchg
push
lret
add
lods
hlt
aas
jg
pop
and
jg
inc
sbb
mov
jb
cltd
inc
call
mul
lods
or
cmp
das
adc
imul
fists
xchg
dec
sbb
int3
jg
cld
sbb
ret
fiadds
das
inc
out
lahf
aas
adc
or
adc
xlat
in
popa
push
inc
int3
ficomps
lahf
aas
jg
jg
push
hlt
shll
call
shll
jns
repnz
inc
push
repz
sti
in
push
pop
cmp
xor
movsb
mov
lret
jb
repnz
xor
push
pushf
lahf
sub
mov
sub
cs
jge
fcomps
cmc
orl
enter
es
insb
xchg
ret
ja
dec
jge
xchg
add
aas
imul
cmc
stos
xor
into
sbb
xchg
cmp
pusha
mov
cld
cltd
push
mov
dec
inc
mov
cltd
fnstenv
pusha
or
iret
lahf
aas
dec
sahf
dec
push
insl
inc
cmp
cs
shl
lahf
inc
sbb
lret
addr16
mov
sbb
dec
and
push
in
push
pop
mov
mov
mov
xchg
push
pop
jns
lcall
jle
mov
ljmp
insb
lds
pop
adc
fstl
das
jecxz
and
xor
outsl
outsl
xchg
mov
out
pop
setne
lahf
mov
xchg
iret
outsb
push
pop
jns
jge
sbb
loopne
push
fcmove
add
xor
scas
xor
stos
pop
bound
outsl
cmpsb
cmp
test
outsl
stc
stc
repz
sti
cmp
repz
dec
jl
xor
jle
or
mov
mov
aas
cltd
mov
push
push
and
mov
xchg
push
pop
inc
mov
stc
pop
gs
add
or
das
push
pop
jns
add
sbb
pop
push
in
test
testb
or
out
mov
sahf
not
jle
sti
repnz
mov
and
js
repz
repnz
iret
xchg
repnz
cltd
ret
mov
or
pop
sub
test
or
repz
push
cmp
scas
int3
cmp
fildl
mov
cmpl
gs
js
push
lret
decb
xadd
dec
push
xchg
mov
and
sub
push
add
xchg
into
hlt
insl
inc
repnz
lahf
aas
sbb
call
fnstsw
inc
jg
jecxz
cmp
cmpsl
or
jnp
dec
stc
lret
or
lahf
aas
jg
push
jne
mov
rcrb
ljmp
jecxz
in
fwait
lods
loop
iret
sbb
dec
mov
xchg
aas
jg
or
and
dec
mov
leave
adc
mov
lret
out
lahf
mov
pop
and
test
pop
jmp
aas
mov
mov
mov
lret
pop
and
cltd
imul
in
das
push
jnp
icebp
insb
dec
scas
jb
js
add
push
pop
jns
cs
pushf
es
pop
enter
adc
out
shr
cmpl
jle
jg
cld
stc
xchg
inc
gs
inc
pop
mov
insb
popa
das
sub
popa
andl
inc
call
jle
cld
stc
repz
jb
adc
mov
jno
mov
aas
jg
xchg
jb
jmp
and
mov
jecxz
mov
pop
inc
jmp
movsl
xchg
push
out
mov
popf
out
lahf
aas
sbb
sub
jmp
out
hlt
repnz
lods
inc
ja
mov
rorl
cmp
ljmp
mov
dec
fs
push
mov
iret
lahf
pop
mov
jns
cmp
loope
lahf
pop
ja
push
pop
cli
sub
bts
les
sub
clc
jbe
cld
cld
stc
sbb
jnp
inc
and
dec
mov
rorb
add
inc
lcall
xchg
sub
adc
xchg
jge
jno
out
pop
scas
mov
mov
xchg
jae
add
pop
add
leave
aaa
lods
mov
ljmp
jge
cs
or
jp
pop
leave
inc
repnz
enter
xchg
mov
push
sbb
imul
clflushopt
sub
mov
cmp
jae
adc
sar
xor
decb
mov
into
mov
inc
jnp
out
lahf
aas
and
push
xchg
sub
xchg
fcomps
xchg
int3
cld
cld
stc
xrelease
and
sub
loop
jge
sbbb
mov
pop
or
shlb
mov
jne
imul
xchg
cwtl
sub
jle
jl
dec
lret
inc
negl
mov
in
sbb
cltd
xchg
mov
test
jle
mov
or
repnz
sub
decb
iret
ret
dec
mov
cli
repnz
out
outsl
xchg
or
fidivrs
or
sbb
out
push
data16
adc
jns
inc
ljmp
dec
in
aas
jg
hlt
notb
dec
sub
mov
and
mov
sbb
daa
adc
jg
cld
stc
and
dec
out
fdivr
pop
in
ljmp
iret
lahf
aas
sub
sub
or
and
or
xor
repz
jae
cmp
cld
xchg
clc
jbe
outsl
fdivp
jl
icebp
inc
inc
or
iret
lahf
aas
jg
and
push
rcrl
repz
sub
push
das
test
stc
jbe
jae
sbb
lahf
aas
jg
test
fistl
pop
cwtl
mov
out
mov
fdivp
in
movsb
stc
es
xor
jle
jl
ds
andl
xlat
sbb
sar
mov
add
lods
inc
cld
jb
fnsave
dec
adc
sbb
or
lahf
cmp
repnz
xchg
mov
popa
les
in
outsl
shrb
iret
es
mov
stc
repz
test
out
cltd
mov
cld
das
test
test
mov
sarb
dec
cmc
or
notl
inc
stos
and
ret
out
mov
out
js
sub
fdivrl
loope
sti
repnz
repz
iret
jle
push
inc
idiv
push
dec
outsl
dec
xchg
aas
sub
lret
and
je
add
stc
pop
mov
fiadds
test
adc
or
cmp
push
and
out
inc
cltd
arpl
pop
adc
inc
mov
addr16
pop
or
loop
cmpsb
push
jmp
jns
packsswb
xchg
xchg
xchg
push
shll
cs
jcxz
popa
push
ret
sub
xor
mov
dec
jge
push
jnp
imul
sbb
sbb
lock
cmc
sbb
cwtl
adc
repnz
sti
popa
lret
int
into
jmp
mov
cmp
xor
cmp
inc
mov
pusha
std
dec
mov
adc
xchg
das
sub
jle
dec
add
or
jns
call
repz
testb
jg
xchg
addr16
dec
dec
in
push
pop
mov
lahf
xor
movsb
mov
in
jbe
sub
std
adc
sub
enter
ja
jle
push
addr16
xor
das
lar
pop
jns
xchg
sub
mov
in
lret
push
jmp
lret
pop
inc
aas
mov
pop
hlt
out
into
xor
std
dec
stos
add
xchg
imull
mov
scas
ljmp
push
pop
cmp
jle
push
dec
mov
fists
pop
inc
push
pop
jns
push
cmpl
scas
adc
fnsave
dec
hlt
xor
fstpl
mov
add
sbb
sbb
stc
repz
repnz
pop
cs
cld
pusha
call
loop
mov
add
jge
add
mov
mov
iret
pop
stos
pop
insl
test
iret
daa
imul
lret
jns
inc
cmp
movsb
adc
sub
lret
mov
adc
xlat
sub
inc
xchg
sub
insl
or
pusha
push
inc
leave
pop
repnz
sub
fidivrl
out
in
pop
loope
clc
sbb
add
cld
inc
cli
inc
mov
fcompl
mov
aas
jg
xchg
push
ret
push
pop
cmpl
les
iret
lahf
aas
fisubs
xor
cmp
xorb
out
hlt
enter
fwait
and
enter
add
ss
xchg
lahf
movsl
and
mov
pop
jns
fildll
sub
fwait
sbb
jo
in
push
pop
pop
sbb
push
xor
push
pop
pop
mov
lcall
lret
mov
sbb
and
sub
mov
pusha
push
dec
adcl
lret
push
cli
stos
push
dec
mov
inc
iret
movsb
in
sub
push
jno
sub
stc
add
pop
dec
mov
lahf
aas
jg
dec
jnp
adc
sbb
jne
push
imul
iret
out
rorl
cs
cmc
in
loope
add
xchg
scas
mov
je
xrelease
mov
das
icebp
ljmp
jns
fiaddl
sarl
scas
adc
push
jo
outsb
scas
xchg
mov
dec
jg
jg
imul
movsl
out
pop
and
scas
sahf
lods
aas
fst
pop
inc
and
adc
repnz
in
andb
out
lods
inc
ret
pop
shrl
pop
jg
imulb
sar
out
mov
mov
push
je
int3
xchg
cld
repnz
repz
pushf
push
ja
xchg
mov
test
lahf
roll
stc
out
xchg
jg
cld
adc
scas
jne
pop
daa
popf
xchg
hlt
pop
jne
pop
sub
mov
xor
sarl
push
mulb
repnz
leave
stos
stc
imul
lcall
scas
mov
fstpl
mov
pop
out
lret
pop
xchg
aas
test
dec
aas
std
bnd
scas
push
and
xchg
pop
pop
out
stc
rcrb
mov
inc
and
xor
dec
dec
ret
repz
jle
cld
xchg
jmp
mov
jl
push
out
xchg
inc
mov
jmp
add
int3
js
shl
lret
pop
mov
shll
pop
roll
add
mov
lods
lea
stc
and
outsl
faddl
push
test
sar
push
das
aas
jg
clc
int3
sbb
enter
and
shll
add
xchg
cmp
inc
mov
mov
dec
sub
push
in
jmp
ret
imul
dec
cld
stc
repz
jle
into
mov
mov
pop
dec
lahf
aas
jg
pop
push
jle
xor
les
arpl
sbb
sahf
pop
xchg
fdiv
pop
cmp
lea
pop
cld
insl
jle
jecxz
push
pop
cwtl
jne
mov
mov
mov
inc
scas
mov
cmp
inc
das
popa
jbe
jg
fdivl
push
fidivrs
pop
iret
dec
icebp
sub
add
and
xchg
test
cmp
add
mov
pop
in
fbld
fimuls
in
xchg
pop
test
jns
out
ja
pop
out
outsl
mov
scas
jecxz
in
aas
or
jno
hlt
call
movsl
aaa
inc
sub
lods
das
rcll
and
dec
jbe
mov
cld
imul
test
inc
sub
or
ret
jp
sub
cmp
loop
and
sbb
dec
nop
lret
cld
fsqrt
in
sub
inc
loop
add
dec
out
aas
jg
or
arpl
push
data16
mov
repnz
scas
insb
shr
adc
push
cli
das
mov
jge
iret
xor
mov
mov
lret
lahf
push
decl
repz
jae
sub
xor
push
pusha
push
in
ret
sbb
loopne
dec
in
shrl
push
pop
jns
mov
jmp
test
fnstcw
in
dec
into
mov
dec
aam
dec
jg
mov
in
call
push
popf
stos
icebp
rcll
mov
lret
add
push
adc
outsb
leave
insb
cmc
mov
aas
push
outsl
dec
adc
add
adc
out
push
mov
mov
jne
decb
mov
mov
cwtl
jl
mov
xor
cli
mov
cltd
xor
inc
push
mov
ljmp
dec
or
filds
push
and
sti
mov
int
mov
jg
sub
mov
inc
aaa
add
jbe
jecxz
iret
mov
jmp
pop
iret
mov
sbb
push
pusha
mov
mov
or
call
mov
in
int3
adc
into
or
inc
pop
lret
scas
sbb
stos
lea
mov
mov
jle
or
shll
scas
mov
repz
or
mov
out
dec
icebp
lret
xchg
pop
and
mov
dec
in
cmpb
xor
mov
push
mov
lret
addr16
mov
add
fwait
sub
aaa
jo
rclb
pop
jns
xchg
add
fisttps
mov
jg
inc
and
cmp
lret
stc
aaa
sbb
icebp
mov
stc
repz
in
dec
mov
and
je
inc
mull
fdivp
dec
xchg
ja
jg
sbb
sbb
xor
stc
xchg
icebp
in
mov
xchg
sti
repnz
nop
pop
cld
lds
fdivs
inc
pop
ds
push
loopne
les
and
push
pop
inc
out
faddl
lahf
aas
jg
ds
adc
lds
cs
xor
jns
imul
es
leave
ds
das
push
xchg
ja
pop
out
les
loopne
sti
paddsb
jns
fisttpll
sbb
in
sub
dec
sti
or
frstpm(287
add
jns
xchg
push
movsl
std
fldcw
cmpb
andl
iret
rcrb
mov
inc
das
jg
jg
lret
fimuls
push
sub
iret
lods
xlat
scas
scas
cs
pop
stc
xchg
cmc
lret
sbb
lret
movsb
ds
lahf
jns
jg
pop
rcrb
sub
hlt
fadds
fsubl
repz
lahf
ret
sub
dec
gs
lahf
in
add
jg
cld
stc
out
insl
shrb
lods
ja
xor
mov
dec
mov
fldpi
shll
scas
xchg
repnz
or
or
mov
nop
or
mov
pop
inc
jecxz
xor
jg
mov
inc
lea
push
mov
test
pushf
and
in
cmpsb
cmp
pop
jns
out
outsb
mov
fists
lods
popa
sub
div
in
dec
inc
and
out
loope
inc
mov
push
pop
mov
les
add
mul
push
pop
fiaddl
pop
push
mov
mov
jns
xchg
push
or
cmpsl
mov
adc
sub
scas
add
mov
repz
sbb
push
pop
jns
sub
in
lret
mov
cmp
out
outsl
call
xchg
scas
loopne
dec
mov
mov
out
rorl
xor
xchg
inc
incl
push
mov
pushf
pop
mov
iret
idivl
clc
push
or
outsl
std
movsl
xchg
pop
sarb
shrb
test
ror
dec
jne
into
and
push
push
fs
loopne
out
ja
inc
orl
cld
stc
aaa
gs
xor
sbb
mov
jecxz
lret
test
and
call
fstpt
hlt
or
xchg
pushl
repz
adcb
dec
stc
in
outsl
xchg
sbb
mov
add
pop
lods
in
mov
sub
out
lahf
movsbl
xor
lret
mov
pop
jmp
inc
scas
xor
push
addr16
in
inc
pop
leave
xchg
cmpsb
ja
iret
add
xor
mov
and
add
dec
addr16
test
xchg
pop
insb
cmp
add
lahf
mov
andl
dec
ss
cld
inc
clc
repnz
popf
push
leave
out
mov
xchg
push
fimuls
ret
mov
inc
push
pop
jns
push
sub
cmp
jp
lret
add
lret
xchg
sbb
imul
sti
jnp
mov
rorb
aad
pop
pop
or
cld
cmp
das
movsl
inc
rcrl
pop
outsb
icebp
les
ss
int3
add
or
scas
mov
lods
les
movups
cmp
lret
add
insl
mov
mov
mov
outsb
mov
lahf
cmp
repz
inc
pop
pop
cmp
out
dec
dec
cmpsl
mov
cld
stc
jmp
fistpll
adc
xchg
sbb
cmc
insb
mov
mov
les
mov
sub
add
xor
xor
out
mov
sub
jge
adc
xchg
fdivr
mov
out
mov
je
adc
dec
jae
pop
rclb
lret
ss
aam
loop
in
loope
fistpll
mov
stos
fsubs
iret
mov
pushf
movsl
and
or
decl
adc
mov
sbb
cmp
in
xchg
movd
and
sahf
or
jns
clc
mov
adc
push
outsb
dec
pop
push
push
inc
int
sbb
xchg
jne
int3
mov
shlb
cmpsb
jle
test
int3
xor
or
stos
dec
in
ja
pop
xchg
mov
jne
clc
repnz
cmc
and
sahf
mov
sti
inc
pusha
adcl
jno
mov
xlat
lret
iret
das
movsb
push
adc
lret
mov
or
dec
call
pmaxub
lret
cli
cmp
mov
sbb
mov
xchg
popa
sbb
aam
mov
mov
dec
jge
lahf
pop
mov
imulb
inc
mov
lret
out
and
fwait
sub
stc
hlt
mul
xlat
inc
cld
inc
ret
pop
es
xor
and
lahf
aas
push
or
push
xchg
in
dec
cld
stc
repz
out
push
hlt
mov
ret
and
imul
jne
adcb
dec
sahf
imul
xlat
mov
lods
inc
mov
outsb
addr16
fisttpll
push
mov
call
push
pop
jns
inc
out
xor
xor
scas
pushf
dec
fnstsw
jns
adc
das
add
pop
lret
or
jmp
jb
cwtl
scas
mov
fidivrs
and
scas
aaa
mov
pop
daa
sub
pop
pop
jns
inc
lret
repnz
ja
push
pop
and
hlt
inc
cmpsb
mov
jle
in
pushf
inc
or
retw
sbb
xlat
cli
in
fidivs
xchg
je
aas
jle
fistps
fbld
or
cmp
xchg
push
sub
pusha
movsb
xchg
pop
ss
lret
xchg
push
pop
add
shlb
popf
outsl
mov
lret
pusha
mov
sub
subl
scas
mov
mov
inc
mov
mov
mov
out
lea
ja
aas
xchg
push
stos
sahf
js
and
jns
xchg
lret
adc
test
stos
sbb
outsb
je
ret
jo
mull
popl
jg
add
test
or
jmp
in
lahf
adc
addr16
loopne
xchg
ja
mov
add
lcall
xchg
push
fisubrs
lret
push
xchg
ret
shl
sbb
mov
cs
lahf
test
insb
inc
mov
jl
fidivrs
mov
mov
repnz
lahf
xor
lods
test
lret
aas
enter
addr16
stos
das
or
icebp
lret
sub
push
cmpsb
popa
into
xchg
repz
out
jns
pop
repnz
ret
call
outsb
daa
mov
mov
test
push
xchg
mov
loopne
sub
les
faddl
js
xlat
push
fisubrs
fwait
clc
cld
add
setb
rcr
dec
mov
loope
mov
mov
jg
dec
jbe
je
push
xor
imul
scas
jns
call
fsubrl
and
inc
push
cmp
inc
addr16
xchg
aas
mov
scas
adc
in
cltd
or
jg
push
div
mov
jae
sbb
xchg
push
pop
cmp
xchg
clc
mov
aad
nop
pop
mov
jns
pop
or
mov
notl
into
subb
jbe
notl
fsts
push
lret
out
jle
scas
mov
das
inc
mov
xchg
mov
jle
jge
or
das
pop
or
scas
fs
jl
add
cmc
enter
ja
mov
scas
mov
enter
lahf
adc
cmp
mov
or
mov
xchg
jns
fstpl
mov
jns
rclb
push
pop
pop
cmpsl
xchg
call
and
jns
pushf
movb
addr16
mov
sti
idivl
in
add
out
mov
jne
inc
dec
push
xchg
mov
iret
sbb
in
fists
add
ja
xchg
pop
ds
dec
int3
int3
cli
int
fistpll
dec
and
call
xchg
scas
jae
sarb
cld
mov
sbb
arpl
fs
aas
stc
repz
scas
sbb
imul
popa
push
cld
pop
pop
mov
mov
jb
imulb
std
in
jl
mov
xchg
and
aam
cmpsl
lret
sub
push
lea
jp
mov
stc
movsb
pusha
sti
pop
xchg
jns
push
stc
test
jge
pusha
cmp
aas
lods
dec
mov
jg
cld
nop
popa
sub
inc
xor
jecxz
and
out
xchg
iret
lahf
lods
sub
xor
sbb
lods
and
jecxz
push
xchg
sbb
sti
jecxz
jb
outsl
jno
rclb
mov
sbb
daa
mov
in
lret
sub
pop
mov
scas
lret
rorl
cmp
inc
cmp
jl
repnz
push
mov
mov
movsb
add
int
in
jle
lea
loopne
cmp
out
pop
inc
out
fldl
pop
inc
dec
loopne
cmpsb
scas
jle
repnz
jns
andb
pop
cmp
cmpsl
out
rcr
adcb
insl
sbb
dec
pop
add
or
orl
xchg
dec
jle
cmp
pop
sbb
jmp
or
mov
push
dec
cld
cmp
aam
and
pop
jle
scas
cmp
es
sbb
into
gs
stos
pusha
iret
xchg
inc
lret
jo
jo
push
mov
aas
mov
addr16
pop
in
ds
inc
nop
mov
adc
out
iret
mov
das
and
cmpsb
out
mov
scas
sbb
jge
repnz
into
jle
sbb
lahf
push
imul
push
xor
dec
rolb
or
roll
imul
jb
pop
loop
mov
idivb
xchg
xor
adc
or
xchg
push
pop
jle
ret
mov
std
xchg
inc
pop
pop
jns
out
lahf
jp
pop
rol
jg,pt
cld
mov
or
mov
enter
mov
lea
pop
in
mov
hlt
in
push
ret
pushf
imull
add
lret
mov
jp
inc
xchg
faddl
mov
xor
scas
mov
sbb
in
sbbl
cmc
sbb
scas
movsb
sbbb
inc
es
in
push
inc
pop
xchg
mov
push
xchg
pushf
in
push
pop
int
pop
ret
and
in
pop
filds
xchg
push
pop
jns
daa
jge
in
fadd
xchg
repnz
aad
xchg
icebp
out
enter
dec
scas
outsl
xor
xchg
scas
cmc
mov
push
daa
test
xchg
dec
or
in
push
jge
push
pop
scas
rcrl
inc
ret
into
ljmp
or
in
iret
fisubrs
mov
and
xchg
mov
push
push
push
hlt
in
iret
push
scas
cmp
lods
test
in
cld
stc
cmpsl
mov
repnz
pop
mov
iret
lahf
aas
jg
leave
test
popa
mov
stc
stc
repz
aas
insb
dec
cs
jo
insb
inc
sbb
lret
ret
outsl
pop
cmp
lret
mov
push
fwait
outsl
dec
xor
scas
mov
shl
stc
shrb
xor
dec
mov
repz
rcrb
ss
jg
cld
stc
xchg
aas
hlt
or
sbb
dec
mov
xchg
ja
shld
mov
sti
bound
shl
xchg
push
pop
jns
test
jno
push
inc
or
rcrl
pop
stos
icebp
jnp
sarl
sbb
fistl
sub
dec
sbb
std
repnz
daa
jle
xchg
push
or
adc
lahf
jg
mov
jge,pt
into
xchg
stos
or
lret
iret
sbb
xchg
or
ret
mov
pop
cld
jns
or
xorb
outsl
adc
shrb
lahf
aas
jg
imul
movsb
je
movsl
mov
lret
sub
jmp
mov
cmc
repnz
fsincos
imul
out
xchg
iret
mov
adc
sahf
dec
pusha
push
das
sub
mov
mov
loope
outsb
repz
xchg
cmpsb
xor
fwait
mov
mov
push
in
dec
cld
outsl
xor
lahf
or
mov
cltd
roll
movsl
cmp
in
push
fidivrs
lods
inc
pxor
out
in
xchg
push
pop
jns
fsubl
push
out
add
inc
pop
jns
fstpl
dec
mov
cmp
sbb
adc
xchg
push
enter
mov
jnp
cmp
pop
dec
das
ja
pop
insl
jne
outsb
sti
pop
pop
aas
and
mov
cld
push
shlb
add
das
mov
sub
ret
push
sub
das
inc
and
lahf
pop
loope
fimuls
jb
lods
xchg
mov
repz
imul
test
sub
push
arpl
scas
loopne
jo
ds
lahf
aas
jg
imul
add
lret
rcrl
das
mov
out
and
xor
sub
xchg
lahf
aas
jg
insl
pop
pop
stos
or
sbb
or
fnstenv
mov
ret
cmp
aam
sbb
les
dec
cld
fimull
je
cmpsb
das
iret
mov
iret
lahf
aas
ljmp
adc
loope
fnstenv
stc
rep
cmp
mov
pop
out
test
jg
adc
cwtl
aas
push
mov
push
iret
lahf
aas
sbb
jb
fs
int
jle
repnz
lret
jp
sbb
aas
cmpsb
inc
icebp
jmp
lret
sub
hlt
repz
inc
stos
lahf
std
jle
repnz
rcr
xor
sarb
pop
bswap
fists
stos
test
aam
fmuls
add
sub
stos
mov
in
nop
inc
xchg
pop
stc
mul
inc
into
mov
in
in
sub
ljmp
and
push
lcall
lret
sub
gs
jo
jg
cld
add
andl
fcomi
xchg
sbb
adc
mov
pop
jae
sahf
mov
enter
adc
test
in
ds
cld
stc
adc
jmp
mov
sub
pop
and
xor
pop
cmp
jo
and
ljmp
xor
lahf
aas
jg
pop
push
xchg
pusha
aaa
int3
push
push
xlat
xor
out
pop
in
shll
mov
lahf
and
imul
test
dec
lods
ds
out
lahf
aas
pavgb
jp
pop
imul
cld
stc
repz
lahf
xor
xchg
or
pop
jle
add
iret
adc
ffreep
stc
push
pop
jns
adc
arpl
dec
lahf
xchg
cmp
xchg
in
les
pop
lods
sbb
out
lods
nop
repz
das
push
mov
repz
es
in
hlt
sub
xchg
push
pop
jns
cltd
cmp
sub
icebp
inc
aad
scas
cld
jb
mov
in
cwtl
inc
movsb
inc
dec
stc
aam
mov
and
mov
pop
scas
out
lret
sub
outsl
faddl
repnz
daa
jmp
in
lahf
dec
xchg
scas
mov
std
repnz
clc
ja
das
subl
push
jl
or
dec
mov
loope
sub
push
mov
ds
jae
pop
mov
adc
insb
add
or
repz
outsb
pop
adc
inc
aad
or
fildll
jg
cld
mov
xchg
dec
sub
and
sarb
bswap
xchg
out
lahf
mov
mov
jne
adc
cld
stc
lcall
insl
mov
es
lret
out
punpckldq
aad
sbb
adc
icebp
scas
cli
mov
negb
mov
sbb
sbbl
pop
ds
outsb
cmp
adc
out
das
out
lret
pop
andb
cmp
mov
scas
das
lods
cmp
sub
clc
jae
andb
les
aad
mov
out
jle
lret
xor
out
stos
call
jge
pop
dec
outsb
test
stc
repz
inc
jno
push
inc
adc
sbb
pop
jp
push
jecxz
cld
bnd
xchg
xlat
lods
pop
dec
dec
gs
test
or
lea
sub
in
iret
and
ja
mov
cld
stc
mov
jecxz
sub
push
cwtl
pop
jne
cmp
arpl
mov
sbb
enter
iret
femms
push
cmp
out
out
aaa
xor
scas
mov
push
xchg
adc
mov
inc
das
jg
lret
jne
push
mov
sub
test
rclb
pop
outsl
sbb
daa
adc
cmp
jg
shlb
fwait
cmpl
rolb
xlat
push
dec
mov
mov
cwtl
mov
out
lahf
dec
clc
inc
xor
gs
jg
int3
push
sub
out
leave
in
lahf
aas
mov
imul
cmp
jl
sti
in
xchg
in
inc
data16
inc
xchg
aad
mov
xor
lahf
shlb
scas
dec
stos
mov
xchg
push
pop
pop
leave
adc
lcall
lods
inc
stos
jmp
ljmp
pop
mov
cmpsl
ja
xchg
out
lahf
mov
les
xchg
pop
das
add
push
jg
cld
stc
out
pop
pop
push
popa
sub
push
dec
out
lahf
aas
movsb
aad
sub
cltd
pop
stc
rcrb
cld
cld
stc
repz
cltd
push
fdivrp
pop
jmp
inc
dec
mov
sub
mov
shrl
xor
loope
das
cmp
inc
cmpsb
mov
in
iret
shlb
pop
ljmp
fstl
inc
cmp
call
xchg
lret
push
pop
jns
pusha
enter
xlat
cltd
push
repz
icebp
lret
xchg
incl
mov
outsb
jle
cld
stc
popf
xchg
push
test
inc
addr16
pop
jns
mov
sbb
sbb
repz
dec
push
pop
push
pop
dec
sub
jmp
repnz
push
pop
pop
xor
mov
out
lahf
aas
enter
scas
or
inc
shl
or
push
enter
or
in
iret
lahf
aas
aas
mov
cmp
mov
scas
gs
lret
cld
stc
repz
andb
ds
xchg
pop
out
pop
jmp
das
push
mov
push
sub
test
orb
jg
cld
stc
xor
xchg
lcall
mov
ficompl
loop
repnz
lds
xor
repnz
dec
mov
arpl
or
daa
cli
push
jle
push
je
imulb
stc
xor
repnz
sahf
aas
or
mov
pop
aas
into
in
das
mov
push
mov
inc
add
stc
repz
jmp
arpl
test
jnp
pop
fidivrs
jbe
mov
sbb
int3
inc
inc
aas
mov
decb
adc
xor
aas
sbb
jl
fxch
xchg
push
fimuls
jb
cwtl
stos
push
scas
testb
push
mov
ljmp
fisubs
mov
jns
xchg
aas
cmc
int
cli
leave
mov
idivl
push
in
push
pop
cwtl
sbb
push
adc
pushf
jae
cmpsl
lret
mov
out
lahf
jnp
jb
fstl
jns
cmp
mov
jle
and
stc
cmp
xor
dec
jle
pop
jg
jg
xchg
dec
adc
adc
iret
lahf
pop
ds
mov
out
jno
cmp
das
jg
mov
or
repz
adc
scas
test
fisttpll
stc
repnz
out
and
cmpsb
mov
mov
adc
out
jo
inc
xchg
xor
sub
jle
adc
mov
clc
movsl
loope
sub
sub
jns
add
mov
push
fsubp
xchg
or
dec
adc
fwait
and
imul
lahf
cmc
lods
mov
cmp
cli
jg
sarl
jb
pop
pop
or
cs
mov
push
jae
lahf
aas
jg
dec
mov
std
mov
movsb
mov
fidivs
in
out
xchg
pop
mov
xchg
sbb
mov
scas
out
and
xor
cmpsl
pop
pusha
jo
or
repnz
pop
iret
mov
dec
cmp
push
outsl
and
outsl
jmp
loopne
aaa
push
scas
mov
rolb
pop
lcall
jg
repnz
inc
stos
or
inc
mov
lret
mov
lods
sbb
das
scas
mov
mov
xor
adc
cs
iret
scas
movsb
fsubrl
mov
sbb
push
sbb
add
in
test
fnstsw
or
dec
loop
stos
shlb
outsl
xchg
push
pop
jns
mov
mov
push
adcb
jle
add
lret
leave
shll
pop
adc
pop
sub
jg
cld
xor
test
call
out
xlat
xor
repz
lahf
cmp
jge
push
repz
mov
cld
stc
addr16
cmp
mov
add
lea
nop
aas
dec
pop
mov
xchg
push
pop
jns
fimull
cmp
es
je
push
rolb
jl
in
and
shlb
ja
test
cli
imul
enter
lret
fldcw
jo
sti
aad
adc
paddb
sub
cmpsl
jo
push
jl
inc
sub
jo
in
pop
mov
dec
int
stos
ret
lret
dec
mov
scas
sub
pushf
iret
iret
pushf
insb
push
into
call
pusha
scas
mov
shll
cmpsb
or
jnp
mov
outsl
xor
or
std
push
inc
pop
push
sti
sub
dec
ret
cmp
xchg
das
push
mov
popf
inc
das
add
shrb
sub
jle
add
les
mov
out
push
popa
pop
cmpsl
push
outsb
xchg
mov
dec
mov
jns
mov
pop
adc
out
lahf
or
add
hlt
push
cli
in
dec
xlat
shlb
lock
xchg
aas
jg
mov
fmul
in
dec
add
aam
mov
adc
push
andl
cltd
shll
dec
xchg
push
mov
repz
adc
xor
sub
dec
mov
iret
push
pusha
cmpsl
aas
jg
cld
mov
stc
sbb
push
xor
in
ja
dec
and
das
imul
xor
jp
cwtl
test
mov
jns
cltd
jae
adc
dec
xlat
xchg
add
dec
jge
in
xchg
cld
sub
add
pop
and
stc
repz
push
sub
lock
mov
lahf
aas
jg
in
fs
cld
cmp
imul
jecxz
iret
mov
loopne
scas
push
outsb
mov
adc
lret
lahf
ss
sahf
mov
lahf
jg
out
js
lret
das
or
add
jle
repnz
fbld
sti
int3
inc
iret
imul
imul
cmpsl
inc
sarb
idiv
repz
lds
cltd
stos
jns
js
outsl
movsb
inc
dec
add
stc
add
fildl
aas
xchg
iret
lahf
aas
jg
clc
add
int
add
sub
popf
mov
mul
out
pop
xchg
call
and
sub
xchg
push
pop
fsubp
ds
daa
xor
push
fdivrp
jb
pop
scas
ds
inc
call
pop
jns
xchg
pop
mov
loope
lods
inc
dec
enter
in
fstl
push
enter
scas
xchg
fistps
sub
daa
push
xlat
lahf
lret
mov
sbb
inc
orb
ljmp
mov
xchg
cld
stc
add
fdivp
add
mov
int
ja
jle
enter
loopne
mov
dec
mov
psubsb
movsl
out
fwait
sarl
inc
add
dec
jge
aad
out
test
cmp
adc
test
cmp
cld
push
cli
repnz
xchg
lahf
add
fistpl
jmp
jle
sarl
dec
mov
push
mov
pop
mov
or
das
ds
stc
or
je
cltd
fwait
adc
lahf
aas
mov
dec
cmp
test
in
out
cmpsb
jo
add
in
lods
cld
xchg
clc
push
jmp
outsb
mov
sub
xchg
cmp
dec
xor
push
sub
jg
mov
out
push
loope
pop
mov
in
iret
fwait
icebp
mov
cmp
les
adc
lahf
roll
sbbl
push
sub
in
xchg
mov
fsts
xchg
stos
bound
fstl
adc
mov
es
push
fcompp
mov
outsl
ja
aaa
mov
shlb
mov
repz
inc
jecxz
xor
les
inc
sub
jle
lret
inc
or
popa
mov
cli
in
xchg
xor
cmp
and
loop
xor
jg
cld
sbb
outsl
lret
imul
mov
jnp
cmc
inc
push
mov
fwait
pop
ror
stos
or
adc
mov
pop
ficoms
mov
pop
dec
ds
pop
and
fcomp
lahf
aas
jg
dec
mov
arpl
jo
out
iret
adc
or
add
scas
mov
adc
inc
lahf
std
push
test
push
scas
mov
ffreep
mov
pushf
daa
adc
repnz
sarl
dec
sbb
adc
cmp
and
arpl
notl
decl
pusha
pop
mov
negl
ret
outsl
cmp
out
aam
mov
imul
in
int
scas
iret
add
ljmp
out
cld
fdivrs
cs
adc
jbe
jno
cmp
jno
dec
ret
jle
repnz
dec
aas
xor
jg
pop
inc
sbb
call
cmp
push
pop
jns
lret
xchg
out
xlat
aas
fcomi
outsl
push
sub
sti
jb
xchg
push
lods
xchg
push
inc
adc
fsts
or
daa
cld
sti
and
das
iret
ret
shr
repz
fbstp
ficoml
repz
je
lock
lahf
aas
enter
int3
add
sub
jns
inc
int3
adc
scas
xorl
jmp
in
fabs
aam
lods
out
jg
repz
jg
mov
jno
lret
dec
lahf
jl
pop
out
or
sbb
scas
mov
or
ds
aam
dec
sub
ret
xchg
out
mov
fwait
push
mov
mov
jl
lds
lret
xchg
pusha
dec
imul
clc
add
mov
xchg
sub
movsl
cmc
icebp
sub
cltd
pop
popa
ret
dec
cld
lcall
pop
jns
stos
out
add
cmp
repz
clc
outsl
pop
ret
and
jge
icebp
repz
push
fdivrp
repnz
mov
insl
sbb
test
dec
jl
in
pop
negb
adc
push
lret
out
mov
xor
or
sarb
das
push
sub
xor
sbb
les
in
xchg
sub
or
movsb
mov
cld
stc
repz
int
and
pushf
xor
mov
or
pop
jg,pt
push
mov
jne
mov
out
pop
mov
fidivrs
gs
inc
stos
or
cld
stc
rep
jb
jl
cmpsl
inc
mov
out
fwait
xor
lds
jl
cltd
or
out
fildll
push
pop
jns
ss
jne
dec
test
test
cs
repnz
pop
mov
stos
repnz
mov
adc
cmp
in
jecxz
fistl
add
dec
filds
ja
push
push
fisttps
pop
jns
xchg
inc
xchg
dec
dec
xchg
jne
ds
stc
mov
push
jns
xchg
push
push
pop
out
dec
push
lods
mov
in
push
pop
fldl
mov
push
mov
cltd
adc
inc
xchg
push
pop
jns
sbb
pop
jecxz
inc
and
pop
jns
filds
hlt
cmpsb
lret
mov
mov
pop
xor
stos
add
into
sub
out
imul
lahf
dec
add
push
fists
mov
jne
pop
fbld
and
lret
push
xchg
popa
jmp
mov
jg
cld
or
xchg
jne
add
inc
sbb
scas
mov
mov
adc
loopne
sub
in
popa
mov
adc
imul
mov
jg
cld
cs
add
outsb
pop
push
lret
sbb
sub
jne
notb
sub
mov
pop
shlb
call
inc
sbb
in
addb
in
add
or
mov
mov
inc
ret
inc
nop
scas
dec
dec
aas
cmc
dec
seta
dec
dec
dec
mov
repnz
xchg
sub
cmpb
cmc
lods
push
stc
jo
jmp
fdivrp
outsl
dec
xchg
xor
sbb
sbb
and
ljmp
jb
mov
movsl
cmp
and
push
fnsetpm(287
mov
lcall
fimull
lret
fucom
cs
scas
out
enter
lahf
sti
repnz
push
pusha
test
cmp
mov
iret
lret
mov
inc
andl
mov
jnp
scas
mov
push
loope
sub
data16
or
iret
das
test
out
out
test
sbb
cld
stc
repz
pop
aad
cmc
addr16
dec
push
sbb
aas
jg
mov
push
test
and
out
push
fnsetpm(287
inc
mov
sub
stc
inc
mov
aas
jg
jp
loopne
adc
iret
insl
fs
cmp
xchg
aas
jg
xchg
sbb
mov
pop
mov
das
lahf
in
adc
push
pop
mov
shlb
push
mov
inc
dec
jmp
dec
cmp
fidivrl
repz
dec
out
xchg
and
mov
mov
stos
pusha
cmp
push
mov
lret
out
negb
mov
lock
out
mov
push
shlb
xchg
popf
fdivl
pop
scas
mov
mov
scas
jns
push
cmp
daa
daa
jnp
jne
fdivr
xchg
imul
mov
push
inc
push
inc
push
repnz
adc
and
movsl
das
jmp
fildll
push
pop
jns
cmp
mov
xor
jl
in
fwait
jno
pop
aaa
stos
pusha
movsl
mov
cmpsl
rclb
add
add
gs
scas
lahf
cmp
das
icebp
aam
das
push
pop
jns
jmp
push
xor
scas
xor
sbb
push
aas
mov
cmp
je
lds
inc
lret
lahf
sbb
add
push
pop
jns
dec
push
js
mov
arpl
xchg
pop
dec
das
insb
adc
fistpll
jns
mov
cld
add
fcmove
iret
lahf
jg
out
repnz
cmp
dec
outsl
cld
stc
repz
dec
mov
aam
emms
mov
or
pop
sar
pop
push
repz
fsubrs
jg
cld
out
fst
sbb
lods
das
dec
pop
mov
ljmp
dec
dec
sti
lahf
in
outsl
int3
push
jns
xchg
jle
cld
stc
cmpsb
mov
rcl
lret
iret
push
outsl
xchg
mov
dec
or
adc
ror
scas
mov
push
mov
cld
adc
xor
clc
repnz
add
xor
fildl
pop
cld
mov
fnstsw
jae
add
lahf
jo
pop
rolb
in
sub
fmull
shlb
repnz
das
repz
jl
cmp
cs
mov
jge
mov
data16
jno
sub
or
adc
xlat
clc
repnz
adc
scas
sub
stc
repz
std
js
xorl
lcall
cld
push
add
repz
sub
iret
lods
in
scas
mov
push
mov
outsb
stos
dec
xchg
cli
repnz
xchg
xchg
mov
fadds
jg
lret
out
push
out
sbb
aas
out
mov
fisttps
inc
mov
ret
xchg
or
in
add
lahf
aas
aas
mov
mov
jnp
sahf
testl
push
test
cmpsb
out
jle
cld
stc
and
push
jbe
jbe
fildll
cmpl
add
and
scas
inc
mov
movsb
fisubl
push
adc
cmp
adc
xchg
push
fsubrp
xchg
stc
mov
xor
scas
push
pop
jns
push
es
in
xchg
mov
add
in
ret
lcall
mov
xchg
push
jmp
mov
fdivrp
in
mov
das
push
pop
xchg
filds
popa
dec
dec
imul
setb
xor
lret
mov
lcall
jl
addb
jl
pushf
test
out
cltd
subl
xchg
stc
fbstp
fstl
adc
jge
push
movsb
dec
mov
xchg
push
pop
repnz
pop
ret
xchg
sbb
push
pop
jns
and
ds
pusha
aaa
js
loopne
cli
cmp
out
aam
lret
jmp
sub
lds
pop
iret
mov
pop
cld
inc
jns
andb
xchg
outsb
pop
in
ja
sti
repnz
iret
fucomip
lods
jb
lcall
jle
cld
jb
jne
push
stos
outsl
mov
cmp
leave
pop
test
jp
jno,pn
cli
xadd
repnz
xchg
lea
push
sbb
fisubrs
call
in
sub
inc
mov
aad
cld
dec
clc
sbb
cmp
cld
xchg
pop
dec
mov
inc
xor
loop
or
in
hlt
dec
jns
repnz
mov
cmpsb
mov
repnz
in
push
pop
idiv
mov
add
inc
push
insb
fcoml
dec
aam
jno
out
adc
jns
loopne,pt
sub
pop
pop
mov
ret
xchg
lahf
push
xchg
or
enter
repnz
stos
sub
adc
scas
adc
cld
dec
clc
std
imul
jne
bound
jnp
add
imull
or
jns
fnstsw
dec
iret
stos
mov
add
lcall
pusha
inc
imul
lret
pusha
jmp
jg
mov
das
lahf
fwait
jmp
adc
cld
xor
das
das
push
push
xor
pop
jg
jbe
jmp
sbb
ds
das
xchg
push
pop
jns
mov
aas
cmp
jecxz
or
pushf
push
fdivrp
xor
xchg
pop
mov
adc
jl
pop
jns
xchg
je
dec
pop
jno
sub
mov
pusha
push
add
push
stos
pusha
vpmaxsw
lahf
nop
add
cs
or
out
hlt
aas
mov
cmp
outsl
sahf
or
and
out
mov
testb
aas
sub
stc
mov
inc
dec
pop
pop
or
mov
aam
mov
test
movsb
pop
push
jle
movsb
adc
flds
cli
inc
aas
mov
test
pop
and
and
xchg
hlt
lcall
fcmovu
pusha
jne
pop
popa
movsl
push
pop
jns
sbb
lds
shrb
ret
sub
orl
leave
lea
dec
into
lahf
jne
stc
inc
daa
inc
adc
sbbb
push
scas
mov
lods
lahf
ja
sbb
jl
fstl
cltd
mov
mov
int3
pusha
inc
popf
mov
ds
lret
ljmp
lea
inc
pusha
ror
scas
mov
cli
mov
in
pop
gs
repz
loopne
jb
outsb
and
pop
jne
das
jg
cld
idivl
sahf
or
insb
call
fmulp
lahf
aas
dec
mov
dec
xlat
mov
out
cs
push
mov
clc
pop
dec
add
std
jb
and
stc
and
lahf
jg
bound
adc
push
jbe
sbb
cld
stc
repz
fs
sub
xchg
mov
or
in
adc
ret
imul
aad
jmp
loope
lcall
push
outsl
adc
and
outsb
jl
cld
stc
outsl
mov
sar
fdivrs
cltd
test
and
push
mov
push
sbb
loope
fstpl
das
icebp
and
and
jmp
out
mov
jl
lea
xchg
pmaddwd
in
daa
hlt
ds
dec
jg
pop
and
push
jmp
sub
popa
movsb
negl
dec
test
idiv
das
scas
mov
adc
dec
inc
pop
ds
ret
dec
adc
mov
or
repnz
scas
sbb
ds
arpl
xchg
jbe
pushf
lock
aam
xchg
xchg
jbe
nop
mov
fiadds
dec
dec
pusha
into
ficoml
lahf
aas
sarl
pop
or
and
test
cmp
fildl
movsl
push
jne
in
das
push
xchg
rcll
mov
sub
jmp
add
or
pop
pop
push
lret
lahf
aas
jg
inc
sub
cmpsl
repnz
call
xchg
pop
shl
mov
in
out
lcall
add
out
das
lods
pop
push
adc
mov
sarb
lds
push
dec
hlt
rclb
out
jle
mov
mov
inc
testl
scas
mov
movb
jl
add
pop
idiv
in
push
stos
mov
pop
jns
xchg
mov
xchg
and
in
push
cmp
insb
sbb
lahf
ret
mov
jno
popf
out
pop
adc
and
movl
dec
scas
inc
mov
repz
nop
sbb
cmp
sahf
repz
xchg
jbe
inc
lds
sti
in
mov
sti
insl
in
pop
scas
aad
imul
je
cmpsb
xlat
xchg
repnz
add
aam
stc
mov
xor
inc
lods
repnz
mov
jl
or
jb
repnz
push
out
sbb
scas
mov
sbb
movsb
lods
shl
popa
js
and
mov
icebp
testl
sbb
sahf
iret
aas
mov
mov
sbb
pop
test
cmp
mov
dec
cmpsl
int3
mov
dec
movl
jle
inc
int
pushf
fsubrl
aas
sub
insb
fwait
sbb
rcrb
add
jns
repnz
jl
dec
arpl
das
xchg
ss
and
aas
jg
dec
mov
sahf
mov
pinsrw
or
or
ljmp
sahf
mov
scas
cld
stc
mov
je
mov
push
and
xchg
iret
lahf
aas
frstor
fwait
push
sub
out
xor
repnz
loopne
jecxz
aas
imul
out
lods
test
hlt
inc
test
rcr
add
adc
repnz
popf
push
mov
push
gs
xchg
mov
cmp
lcall
and
dec
pop
mov
stos
push
imul
inc
cs
sbb
jns
fstpl
pop
test
aad
sub
add
das
inc
mov
pop
imul
pop
jge
repnz
andb
pushf
pop
test
clc
cld
stc
xorl
ds
lea
stc
push
pop
jle
xchg
lahf
cmp
in
lret
lahf
jg
mov
jns
mov
jle
cld
fwait
jmp
pop
in
mov
mov
rcrl
inc
or
lret
iret
into
subl
and
xor
repz
mov
iret
sbb
mov
sti
sti
adc
mov
ss
stos
xor
jnp
lret
rclb
scas
daa
dec
adc
or
or
fdivrl
sbb
cmp
bound
xchg
test
sti
jnp
jns
xchg
ja
popf
adc
mov
mov
iret
lret
xchg
push
pop
jg
and
icebp
icebp
push
inc
shlb
mov
jg
xorl
xchg
push
pop
stc
mov
sbbl
xor
mov
rorl
jmp
clc
std
bnd
call
jo
xchg
push
fdivrp
das
jo
dec
call
adc
sbb
mov
pop
jns
cmp
mov
push
xor
lock
xchg
pop
popf
rorb
jb
cld
xchg
mov
push
add
lock
and
aas
jg
xchg
and
and
stc
jnp
stc
repz
push
sti
nop
or
xchg
jae
xchg
out
jle
cld
stos
adc
mov
xor
ret
cmpsl
mov
push
jle
push
push
stos
inc
lret
jecxz
aas
mov
je
dec
mov
or
lahf
repnz
stc
mov
and
aas
xor
sti
inc
add
xchg
xor
and
sahf
jg
cld
stc
add
push
inc
fistps
dec
jmp
in
lahf
aas
xchg
jae
mov
xor
fwait
jg
mov
repz
mov
jle
hlt
bound
bound
jg
cld
mov
dec
rcl
addb
push
sub
scas
jl
xchg
mov
xchg
cs
out
imull
movsl
sub
ss
inc
jle
ljmp
fcompp
xor
cmpsb
cld
pop
and
jmp
dec
xchg
incb
mov
es
xlat
sbb
mov
das
shlb
jl
cmp
pop
call
fists
push
je
xchg
in
in
inc
je
test
dec
adc
mov
jle
lahf
aas
test
gs
and
loope
mov
mov
mov
or
push
jle
jg
cmp
cli
lahf
or
in
push
pop
sti
mov
test
dec
mov
aas
mov
fisttpll
fs
push
fcmove
lahf
aas
jg
int3
push
inc
add
xchg
lds
mov
xchg
jno
and
add
jmp
push
mov
push
jle
jg
mov
dec
cld
ss
ljmp
shrb
repnz
lret
sub
das
dec
sbb
pop
xor
das
icebp
into
test
jbe
rorb
add
mov
jge
push
rcll
call
mov
xchg
xor
mov
mov
rol
in
imul
cmpl
jmp
subl
stos
je
leave
push
add
jbe
lods
ret
cld
sahf
repnz
xor
pop
sbb
dec
sbb
repz
inc
mov
jp
sbb
add
push
xchg
repnz
jne
fnstenv
jg
inc
mov
loope
pop
adc
push
or
out
lahf
sub
lret
test
sbb
addr16
xchg
inc
or
stc
xchg
movsb
stos
push
sahf
std
jb
enter
lret
pop
outsl
in
or
js
mov
push
test
adc
sarb
imul
aas
pop
repz
das
scas
sbb
push
sahf
mov
iret
jmp
jo
push
std
mov
sub
movsl
mov
adc
iret
sbb
jge
push
pop
jns
pop
cmp
in
pop
inc
cmpsl
adc
push
xor
or
sbb
mov
mov
xchg
push
pop
jns
fistpll
les
jb
and
add
and
mov
mov
xchg
es
mov
dec
lock
repz
push
pop
les
iret
dec
cmc
in
push
xchg
hlt
lret
pop
sub
and
sub
dec
aas
jg
cld
ds
pop
xchg
enter
popa
add
aas
icebp
sub
imul
mov
mov
scas
mov
mov
mov
leave
scas
sub
dec
in
and
in
sub
out
pop
pop
pop
pushf
loopne
popa
aaa
cld
sbb
das
outsl
xor
lcall
sub
out
xchg
ret
out
xchg
push
fidivs
or
sub
pop
jns
aas
mov
push
sbb
outsl
hlt
pop
mov
aaa
mov
sbb
daa
jl
mov
pop
jae
inc
sub
lock
cmp
filds
lahf
int
pushf
push
test
addr16
or
mov
add
and
and
xchg
push
pop
hlt
jmp
sub
repz
js
pop
jns
out
rol
ja
and
pushf
fisttpll
push
arpl
pop
mov
pop
mov
outsb
fmuls
outsl
addr16
repz
pop
or
and
imul
mov
jg
cld
lahf
jae
in
push
mov
cmpsl
shl
movsl
dec
xor
ret
in
mov
jns
fnsave
filds
mov
sub
mul
xchg
push
in
dec
mov
fcoml
insb
dec
cmp
jge
xor
outsl
xchg
shrl
hlt
in
sarb
scas
fidivrs
stc
mov
outsl
imul
lahf
fisubl
xchg
push
push
psubd
sub
sub
pop
fsub
and
int
fdivrs
das
out
mov
in
rcr
insb
lcall
movsl
mov
scas
je
les
mov
add
mov
lahf
aas
mov
mov
arpl
stc
repz
mov
adc
in
push
sbbb
xlat
or
jge
add
push
cmc
iret
lahf
aas
jg
mov
pusha
inc
sub
dec
jnp
lods
adc
sub
stc
repz
add
jecxz
fadds
das
aas
jg
and
fistpl
icebp
rsqrtps
or
iret
lahf
mov
or
fnstcw
repnz
pop
or
dec
jb
test
xor
sbb
push
cmp
insb
push
scas
scas
jmp
xchg
push
fldcw
pop
std
jb
lock
ss
lds
out
xchg
jb
xchg
aas
jg
sub
push
xchg
mov
fs
lahf
mov
push
inc
lret
mov
out
xor
cld
stc
sahf
sahf
xchg
or
clc
jnp
pop
jg
call
sub
lahf
cmovle
gs
shlb
mov
sti
xchg
inc
cmp
pop
xlat
pop
or
mov
dec
jno
add
add
xchg
in
data16
sbb
das
jae
adc
sub
into
sti
call
lods
sahf
repnz
pop
jle
data16
cli
xor
and
iret
lahf
aas
pushf
xchg
dec
popa
lahf
loopne
out
xlat
xchg
dec
icebp
repnz
repz
push
rorb
adc
dec
cld
xchg
aas
push
push
shlb
enter
scas
push
mov
mov
or
out
lahf
aas
repnz
mov
jge
orl
test
enter
pusha
jo
mov
or
xor
xchg
cmp
mov
adc
dec
jo
stc
repz
adc
xor
xor
cmp
rcrl
inc
stc
push
mov
add
mov
loopne
repz
cs
jmp
arpl
mov
or
cmp
cld
rorl
fnstenv
stos
divl
outsl
fcomip
fdivrl
stos
jbe
xchg
pop
das
xchg
or
pcmpeqb
mov
jae
shrl
sbb
or
lods
repnz
pushf
push
call
bound
mov
mov
add
push
mov
cmp
pop
xchg
aas
jg
sub
in
out
std
and
push
mov
lahf
aas
adc
mov
sbb
pop
add
sub
scas
push
push
shlb
xchg
inc
leave
rclb
jge
jno
in
adc
stc
data16
xchg
jnp
cmpsl
sbb
add
push
scas
insl
mov
sub
or
sub
outsl
mov
imul
lret
popa
leave
ficoms
mov
mov
pop
scas
int
in
mov
or
mov
aad
add
test
mov
lret
sbb
pusha
repz
cs
call
shlb
psubsb
adc
daa
sub
dec
or
scas
dec
movsb
out
iret
mov
jbe
das
add
pop
jg
pop
jns
xchg
and
push
mov
cmp
dec
add
jle
add
jle
mov
and
add
aas
lea
lret
mov
mov
lret
shl
sub
jo
bound
add
notb
scas
mov
dec
mov
ffreep
jo
negb
iret
cmpsb
outsb
ret
adc
jb
mov
sub
and
jns
std
sub
lock
xchg
adc
outsl
loop
pop
scas
mov
push
pop
mov
mov
pop
dec
mov
mov
mov
addr16
mov
push
pushl
lcall
dec
outsl
ret
jnp
je
mov
lret
inc
lock
popf
loop
jo
jg
pop
mov
mov
outsl
dec
stc
repz
xor
mov
push
jg
bound
gs
jg
cld
out
jne
push
mov
sub
ret
addr16
leave
popa
pop
mov
cld
fisubrs
or
gs
jl,pn
lret
mov
repz
adc
dec
sub
int3
stc
fisubrl
cwtl
xlat
add
mov
xchg
ja
aas
fisubs
mov
push
gs
jns
push
imul
test
dec
adc
pop
jns
xchg
stos
mov
mov
mov
push
mov
int3
adc
pop
iret
rcrb
in
sbb
pop
lea
addb
lret
xchg
push
inc
imul
cmp
mov
and
cld
stc
mov
and
and
add
xor
sti
fidivs
jl
int
sub
outsl
cmp
out
stos
lods
cltd
jg
and
lret
repnz
aas
jg
lret
xor
loop
gs
xchg
add
iret
lahf
mov
sub
ja
out
ss
jb
out
mov
push
out
and
lahf
ja
dec
jg
cmp
pop
xlat
clc
mov
xor
mov
repz
scas
pop
and
mov
xchg
dec
icebp
mov
leave
out
jecxz
punpcklbw
arpl
and
outsb
out
lahf
jg
sub
outsl
push
mov
push
pop
sbb
cld
stc
repz
and
mov
jle
push
lds
jns
or
cmc
jge
pop
jns
scas
in
gs
pushf
xchg
mov
fstl
adc
popf
cli
sub
in
lock
std
and
out
repnz
cli
or
or
dec
lea
scas
cld
scas
pop
fists
sub
das
daa
jno
jge
mov
repz
jbe
xor
or
and
out
jle
xlat
jle
test
mov
movsb
jne
scas
mov
out
sbb
mov
aad
test
mov
in
sbb
in
mov
mov
test
xor
mov
and
dec
stos
or
jl
cld
stc
aas
loope
iret
cmp
mov
imul
mov
aas
scas
rorb
and
es
jns
inc
pop
mov
dec
shl
push
jp
push
popa
dec
cmp
in
sbbl
mov
in
push
fimuls
push
mov
push
xor
pop
jns
cld
aas
ffreep
dec
icebp
lahf
adc
stc
repz
sbb
andl
mov
pop
sbb
add
xor
lock
ja
lret
iret
pop
shrl
sarl
mov
pop
jns
xchg
sub
cmp
adc
mov
outsl
mov
loopne
xchg
je
das
push
pop
jns
xchg
loop
int
clc
cli
ss
call
rcl
inc
int3
dec
dec
or
mov
outsl
pop
cwtl
addr16
and
adc
jl
sahf
sub
fst
jns
mov
inc
fcomip
pop
rcr
xchg
enter
out
imul
stc
repz
jo
fidivrs
loopne
negl
fsubrs
out
pop
popw
loop
imul
jns
mov
inc
call
test
fbstp
jp
loopne
sub
push
idivb
adc
repz
dec
fcoms
xrelease
shrb
mov
clc
pop
cmp
fbld
loope
repz
cmpsb
cs
cld
stc
xchg
fs
inc
sub
int
jmp
pusha
xchg
iret
lahf
aas
enter
pop
jle
mov
clc
in
lods
aam
jg
iret
dec
repz
rcr
pop
sbb
push
xor
dec
mov
repnz
rcrl
jle
divb
cmp
pop
dec
aam
fdiv
lret
xor
lret
sbb
mov
or
add
enter
dec
xchg
sub
insb
out
loopne
sarb
xchg
ja
in
jno
in
and
xchg
push
pop
cltd
sub
in
fistpll
push
sbb
pop
jns
icebp
lock
mov
push
mov
jns
xchg
mov
sub
imul
gs
lahf
mov
in
push
jnp
sbb
cmp
in
push
pop
adc
inc
jp
ljmp
jns
add
hlt
lods
or
ss
scas
hlt
daa
mov
and
fnstsw
cld
stc
xchg
sahf
or
jp
xlat
mov
adc
pop
jg,pt
inc
loopne
add
xor
push
das
cmpsb
hlt
fsubp
iret
pop
orl
jg
cmp
sahf
int
and
inc
rolb
cmpsl
dec
loop
out
les
mov
sub
jg
add
sbb
sub
add
rcpps
mov
lahf
aas
sbb
sbb
test
das
sub
cld
stc
repz
adc
fsubl
fstpt
dec
lahf
aas
jg
sahf
and
sbb
push
inc
sbb
xchg
lret
out
cmpxchg
repnz
xchg
roll
testl
decl
xchg
or
cmpsl
inc
out
addr16
ja
pop
and
cmpsb
push
std
jnp
in
sub
dec
sbb
out
cwtl
ret
in
push
fisubrs
movsl
fnstsw
iret
jg
xchg
push
pop
jns
pop
test
mov
push
fisubs
in
outsl
add
push
lahf
push
shll
inc
jnp
jg
scas
lahf
mov
inc
das
push
xor
lahf
ret
pop
sbb
mov
into
sub
sarb
out
sub
pushf
or
fstl
lock
mov
mov
pop
ret
jecxz
mov
in
imul
cmp
jmp
addr16
in
fisubrl
mov
lret
pop
rcrl
jmp
pop
adc
mov
mov
gs
lret
add
mov
mov
jecxz
mov
adc
lock
mov
popa
stos
jge
sbb
pop
mov
mov
pop
movb
xlat
out
mov
cmc
adc
push
aas
icebp
sbbb
pop
jg
das
push
pop
sbb
shlb
notrack
mov
xchg
lahf
aas
das
inc
jno
push
mov
in
out
into
hlt
mov
lahf
or
cmp
push
clc
andl
sub
pop
sbb
pop
inc
and
out
mov
sbb
fwait
lahf
out
mov
scas
mov
es
adc
adc
lret
mov
jl
cli
sub
sub
sbb
addr16
loopne
psubsb
scas
jl
mov
mov
in
or
push
mov
iret
fwait
push
subl
push
mov
incb
mov
aas
sahf
mulb
inc
or
push
test
aad
xor
lret
mov
ffreep
xorl
mov
push
dec
mov
sub
popa
or
mov
xacquire
enter
mov
aas
add
ret
inc
cmpsb
push
jp
xchg
lcall
and
in
out
lds
sub
or
stc
mov
lock
sub
or
lret
xor
pop
loope
jo
out
out
lret
out
hlt
xor
iret
sbb
decl
test
mov
cld
stc
aam
loop
jne
fidivrs
pop
dec
div
aas
fwait
addr16
iret
lahf
aas
nop
or
shlb
imul
ljmp
adc
jmp
push
jle
cli
in
in
cwtl
je
sub
and
pop
rorl
sub
fimull
ds
adc
jnp
clc
mov
adc
stc
outsl
lea
and
lret
add
mov
insb
lock
sub
mov
dec
fsubs
pop
mov
subb
jnp
in
inc
int3
call
cmovle
jns
fsub
out
adcb
push
js
sbb
jns
adc
sub
inc
lock
jb
dec
lcall
fstpt
push
fdivrp
cmp
cmp
or
xor
in
cmp
push
or
xchg
push
mov
in
mov
repz
mov
adc
repnz
into
popf
andl
cld
jge
mov
sti
cmp
cli
dec
lret
xchg
iret
lahf
ds
insl
mov
shrl
mov
repnz
clc
imul
fldenv
fnstsw
sub
push
mov
insb
pop
jns
scas
mov
lods
mov
jl
dec
insl
sub
lret
pop
and
cli
mov
cmp
in
push
pop
xchg
adc
xchg
pop
or
icebp
xchg
push
pop
jns
and
outsl
nop
sbb
mul
popf
inc
loop
pop
scas
fistps
adc
jns
xchg
push
jge
sub
adc
push
pop
jb
jl
jo
mov
mov
scas
cld
jb
add
sahf
lcall
repnz
insl
outsl
ja
mov
rolb
jmp
jg
mov
into
decl
js
fstl
pop
lahf
aas
lds
jnp
pop
add
xor
jns
lret
fcoms
aad
xlat
pop
les
dec
jns
into
lahf
jg
pop
and
push
movsl
ja
stc
repz
jno,pt
jl
leave
adc
push
mov
jg
cld
cmp
in
arpl
and
outsl
lea
out
lahf
and
xchg
je
or
in
jae
add
cld
stc
stos
clc
mov
xor
or
fdivrl
cmp
dec
rcr
lahf
aas
shlb
lcall
fildll
jl
in
int3
dec
sbb
shl
dec
adc
sbb
cld
mov
ds
or
imul
pop
scas
gs
arpl
sub
scas
insl
daa
fwait
mov
mov
lahf
inc
fldenv
fstps
int
stos
decb
jns
xchg
out
mov
push
push
or
test
dec
xchg
out
cmp
mov
in
fbld
pop
aas
popf
sub
sbb
dec
lcall
jo
rol
pop
into
stos
or
mov
enter
das
sti
aam
mov
mov
xchg
pop
add
cltd
lods
outsl
orb
xchg
lahf
jg
dec
sahf
cwtl
mov
sub
lahf
lea
sahf
pop
dec
std
test
pop
pop
jns
mov
aaa
dec
in
or
mov
lret
xchg
jbe
lds
xchg
pop
jns
and
xor
movsb
mov
lcall
mov
neg
jl
mov
scas
stos
mov
xchg
push
sbb
mov
push
mov
cmp
xor
push
incl
pop
jae
fsubl
lahf
rcrl
push
pop
fists
inc
jnp
xchg
jg
cs
jecxz
pop
fistps
sbb
mov
stc
repz
push
xchg
xor
outsl
or
jo
aas
jg
pop
cmpsb
std
scas
cld
sahf
popa
call
out
lahf
fcoml
push
loopne
ja
cmp
std
repnz
mov
dec
loop
cmp
fistpl
dec
shrb
fs
movsl
inc
xor
mov
add
call
dec
sbb
lret
mov
mov
fs
movsl
ja
scas
mov
int3
sub
icebp
fisubs
push
rep
jmp
dec
in
inc
mov
sub
repnz
and
notb
xchg
out
mov
cld
lcall
mov
pop
mov
aas
jg
mov
sub
adc
stc
repz
add
adc
and
std
stos
push
mov
jp
sub
and
pop
mov
ss
aad
push
jle
out
lahf
dec
loopne
aaa
pop
mov
and
stc
pop
stos
mov
jl
ror
cmpb
cli
xchg
mov
fcompl
push
aas
cmp
outsl
and
mov
out
lahf
bound
movsb
lods
pop
cld
fst
lahf
mov
pop
xchg
mov
repnz
cwtl
sbb
shll
xor
shlb
xor
lcall
xchg
decb
imul
mov
cld
stc
dec
sbb
rolb
js
pop
scas
in
pusha
lahf
aas
aas
and
ljmp
repz
jl
or
xchg
xor
and
test
fcomi
mov
cmpsl
insl
ret
outsb
add
jle
clc
insl
mov
xor
mov
dec
repz
lret
sbb
jns
lds
inc
lret
cld
stc
or
or
mov
stos
mov
hlt
inc
ret
xchg
jmp
scas
xchg
lock
sub
sub
dec
jnp
pop
mov
adc
rcrb
fs
sub
pop
sbb
cmpb
lods
stos
add
cmp
data16
fistl
jg
xchg
ja
mov
or
or
dec
out
lahf
aas
imul
inc
lret
dec
mov
dec
cwtl
outsl
add
scas
les
fdivrl
inc
hlt
xchg
aaa
out
iret
lahf
aas
jg
aaa
pop
mov
int
outsl
lock
adc
sahf
js
loopne
push
inc
mov
mov
aam
jge
mov
xchg
es
mov
push
and
scas
mov
shlb
aas
int
dec
xor
testb
mov
aas
mov
ret
push
fdivrl
cs
mov
pushf
add
mov
scas
xchg
xchg
outsl
fstpl
ss
loopne
out
jb
mov
aaa
mov
je
or
in
ds
cmp
pop
adc
jl
xor
push
push
in
lahf
aas
cmp
push
jp
xchg
push
mov
pop
loop
sahf
shlb
dec
lods
pop
inc
mov
aas
jg
and
rcl
out
popa
mov
jp
fnstcw
repz
push
xchg
cli
mulb
lcall
pshufw
nop
mov
repnz
aas
cmp
test
movsb
xchg
fcompl
in
mov
sub
inc
scas
push
cmp
adc
lods
pop
jle
dec
test
out
lahf
call
cltd
mov
cld
jg
cld
stc
push
xchg
fadds
call
dec
jne
pop
fadd
jns
iret
lahf
aas
xchg
mov
cmp
mov
out
bound
repz
test
mov
rorl
in
push
insb
xchg
jbe
movntq
and
leave
xchg
mov
push
pop
cld
stc
repz
arpl
and
inc
std
sub
cs
ret
jl
into
insl
jg
jg,pt
lcall
pop
dec
pushf
or
mov
jmp
out
scas
incb
mov
xor
or
or
jle
cld
add
int
repz
xchg
jge
jmp
ja
mov
loopne
setg
xchg
loopne
mov
sbb
mov
test
lret
in
xor
jbe
lea
mov
sub
and
jle
add
scas
mov
jo
leave
jg
popf
mov
sti
in
hlt
out
mov
cltd
std
mov
sbb
negb
pop
repnz
sub
scas
insb
addl
sbb
pop
mov
jno
lds
mov
pushf
adc
into
pop
mov
repnz
jmp
pop
cmp
scas
out
repz
shrl
aaa
cmp
or
jle
sub
sub
idivb
and
dec
nop
xor
faddl
pop
out
pop
push
jno
xchg
cmp
daa
aas
out
dec
das
inc
add
mov
xchg
jg
decb
in
adc
mov
pop
mov
xor
repnz
das
aas
or
test
repz
outsb
sarb
adc
inc
push
jno
test
cmp
cltd
xor
js
mov
mov
jge
scas
push
mov
pop
push
sub
outsl
jp
repnz
jmp
pop
lock
aam
cmp
pusha
add
stc
movsb
pop
test
iret
popf
add
push
adc
lret
iret
lahf
aas
fucomi
lea
sbb
fldl
mov
in
mov
xchg
outsl
test
add
xchg
pop
call
lret
pusha
fucomip
out
test
mov
cmp
and
xchg
or
sbb
outsl
xor
lock
mov
jo
repz
inc
pop
ds
cmc
stos
addr16
mov
lret
lahf
cmp
lock
jmp
jg
popl
or
ds
stc
repz
add
mov
je
lock
stc
xchg
push
fidivrs
es
sbb
pop
in
and
cld
push
scas
mov
insb
cwtl
xchg
dec
arpl
xchg
lahf
jle
push
rclb
jg,pt
cld
loopne
xchg
cmp
call
jb
inc
xor
pop
insb
push
cmpsl
mov
cld
pop
lret
scas
enter
es
fdivs
or
cmpsb
add
out
popa
repnz
fists
or
and
test
imul
jecxz
dec
aad
dec
outsb
stc
xchg
xor
data16
adc
nop
xchg
cmp
mov
adc
jmp
push
sahf
mov
scas
sbb
pop
andb
fldt
push
adc
push
scas
xchg
lahf
jg
xor
lds
lret
sub
sahf
cld
sub
xor
or
out
mov
mov
add
adc
sbbl
out
in
out
in
enter
shrb
mov
xchg
push
mov
cmp
jb
fiaddl
aad
mov
out
mov
inc
jle
cld
adcl
inc
movsb
xor
sbb
mov
adc
cmp
lcall
sbb
repnz
xor
xor
nop
sbb
mov
scas
mov
imul
mov
jns
sub
pop
int3
xchg
push
mov
inc
push
ds
jae
shl
inc
xchg
pop
insl
pop
sub
push
fsubrp
pop
movsb
dec
lods
inc
incl
inc
cmpsb
es
sbb
nop
outsl
add
jns
jo
pushf
stos
or
jecxz
push
fdivrp
mov
dec
aas
cmp
mov
xchg
cmp
dec
rolb
push
mov
fidivrs
pop
push
mov
clc
jb
iret
fidivrs
in
jbe
mov
pusha
comiss
xchg
push
sti
mov
mov
inc
or
xchg
scas
and
push
fnstcw
fnstcw
stos
or
in
movsb
pop
scas
push
out
mov
pop
outsb
int3
sub
pop
xchg
adc
or
pop
mov
push
mov
das
gs
and
mov
pop
out
lahf
pop
add
adc
cs
insb
stc
repz
add
call
mov
push
andl
cmp
dec
incl
or
ds
ds
dec
aas
shlb
repz
xor
jb
fwait
jnp
out
dec
repnz
lret
push
loopne
inc
loopne
pop
cmp
sub
jo
cld
rcrb
andl
dec
inc
and
lahf
aas
rorl
sbb
dec
push
test
xlat
jl
fisttps
mov
sbb
adc
fiadds
pop
and
push
push
sar
pop
mov
mov
mov
sbb
ja
iret
xor
sub
push
enter
scas
adc
div
lret
out
jle
into
jo
and
lret
sub
and
lock
lret
jne
adc
divl
fistps
add
cli
jmp
cs
push
cs
fildl
cmpb
popa
sbbl
aaa
das
call
pop
out
nop
out
jns
xchg
or
leave
es
je
cmp
xor
jns
xchg
push
cmp
mov
pop
int3
push
pop
seto
sbb
mov
jle
or
mov
jg
push
mov
cmp
pop
out
mov
and
jne
mov
lahf
aas
jg
adc
pop
xchg
mov
sub
pop
enter
lret
daa
push
mov
push
aad
pop
out
hlt
cmp
lret
adc
iret
lahf
sub
sbb
cld
stc
repz
push
test
mov
in
dec
push
sahf
push
es
dec
insb
out
or
jne
mov
add
pushf
ds
in
and
int3
fs
repnz
out
sbb
lret
les
add
mov
mov
movsb
ja
xchg
stc
add
mov
int3
or
mov
es
iret
ret
iret
jmp
daa
das
mov
pop
cld
inc
rolb
and
ret
hlt
cmpl
and
xchg
out
pusha
loopne
jae
or
enter
insb
mov
inc
loope
out
sub
repnz
mov
mov
pop
rorl
ret
jns,pt
pop
rorb
jge
movsl
das
mov
std
repnz
aaa
scas
cmpsl
inc
rcll
jle
sub
mov
pop
mov
aas
jg
pop
sti
push
push
popf
xchg
fwait
inc
pop
cld
sti
in
mov
lahf
jo
dec
cmp
mov
jmp
scas
idivl
popa
aas
fiaddl
mov
pextrw
test
sbb
jle
or
xchg
pop
xchg
outsl
fisubrs
adc
or
in
test
out
aas
mov
and
dec
lahf
inc
aam
iret
lds
lock
push
xchg
inc
out
mov
mov
cmp
inc
dec
sbb
sahf
aas
xor
and
call
repnz
lret
pop
push
ljmp
out
ds
add
int3
outsl
gs
das
or
mov
push
loop
add
test
lret
add
dec
xchg
add
sub
adc
mov
ss
pop
clc
adc
aas
or
dec
fbstp
adc
out
xorb
adc
imul
xchg
xor
xchg
sub
sbb
push
popa
sub
or
rorl
into
xor
icebp
enter
inc
fwait
sarl
aas
pushl
sub
ret
or
repz
jle
dec
fdivr
cli
fistps
mov
jle
cld
aas
cmc
incl
adc
clc
mov
enter
out
fldenv
hlt
lods
cld
stc
mov
jecxz
in
push
leave
xchg
leave
rclb
mov
mov
popa
push
lcall
jg
shlb
sub
stc
repz
push
sahf
addr16
xchg
xor
mov
and
xchg
cld
push
lds
outsl
aam
fs
decb
xor
dec
aam
aam
fwait
shll
mov
sub
lds
leave
fbld
sub
and
out
in
ret
sbb
lahf
scas
xchg
inc
repnz
push
and
rcll
test
sub
mov
das
add
cwtl
inc
loop
sub
aas
inc
jo
mov
out
in
add
push
in
mov
js
nop
iret
mov
lcall
out
lahf
add
ret
mov
sbb
dec
shll
jne
out
inc
sti
push
outsl
push
and
jl
push
stc
cld
mov
scas
lea
mov
aas
adc
jne
fisubl
mov
pop
ja
movsl
sbb
jo
rep
mov
sub
push
push
outsl
sbb
gs
pop
jns
gs
lret
dec
cmpsl
sbb
add
xor
repz
dec
push
sub
cmc
mov
push
dec
xchg
jb
sbb
adc
push
cld
jns
xchg
ja
arpl
ss
add
aas
adc
lock
pushl
aas
sarl
in
inc
shrl
outsl
mov
mov
je
movsb
incb
decl
cmp
movsb
shrl
sbb
popa
cs
jne
xchg
cmp
adc
add
aas
jg
push
lds
pop
xchg
pop
std
rol
inc
sahf
jge
in
xor
fidivs
xlat
je
mov
cmpsl
sbb
add
outsb
push
and
and
adc
nop
sarl
cld
xchg
jo,pn
mov
out
cld
stc
repz
mov
fisubrs
fs
dec
inc
dec
nop
enter
jle
and
frstor
jle
sbb
cld
inc
aam
out
push
syscall
pop
sub
jg
daa
lahf
aas
jg
jl
jl
jbe
mov
lds
jg
repnz
cmpsb
add
mov
shl
lret
pushl
xchg
popf
push
fmull
jb
xchg
aaa
call
int
stc
into
add
jp
jp
fs
fdivrp
mov
pop
add
xchg
pop
lods
movsb
je
jg,pt
mov
in
push
aam
add
loope
stc
add
push
push
sbbb
cmp
and
addr16
mov
aas
jg
andb
int3
mov
xchg
repnz
lahf
fiaddl
nop
std
movsl
or
ss
out
xor
scas
xor
cld
stc
repz
movsl
ss
lret
xor
dec
xorb
lods
dec
scas
lods
cmp
adc
xchg
jle
aas
mov
jle
xchg
lcall
enter
pop
out
sub
in
in
inc
clc
dec
js
inc
dec
notl
leave
push
fisubrs
repz
xor
pop
push
scas
rclb
dec
xchg
leave
adc
cld
pop
stc
repz
adc
dec
icebp
jp
push
xchg
xor
adc
in
iret
mov
scas
jo
push
fwait
sub
stc
repz
jle
or
push
int3
pop
imul
or
popf
cld
or
aam
lock
jle
les
sub
inc
aas
ljmp
sub
test
xchg
test
cli
sbbl
cs
aas
push
mov
inc
test
pushf
jnp
insb
loopne
paddb
cltd
xor
lock
repz
ds
inc
leave
push
dec
scas
sbbb
dec
imul
icebp
das
sbb
push
testl
dec
ror
clc
mov
fucomi
xchg
mov
cs
in
lahf
sbb
stc
mov
add
gs
jne
jg,pt
add
ljmp
mov
test
out
mov
ret
add
and
repnz
dec
lock
sbb
and
clc
adcl
pop
mov
stos
aas
xor
aas
jg
dec
cs
xchg
push
mov
in
mov
jg
daa
imul
fistpll
inc
sbb
xchg
iret
mov
negb
mov
inc
loop
mov
xlat
jg
into
push
jle
jle
es
pop
popa
ret
and
aas
inc
pop
std
and
in
insb
add
and
iret
mov
loope
jle
cmp
out
xchg
test
cmc
push
out
mov
scas
push
sahf
xchg
cmp
xchg
dec
mov
lods
sbb
lahf
adc
filds
adc
in
cmp
pop
add
lock
scas
fs
xchg
andl
jo
xchg
push
pop
pop
push
data16
jb
sbb
mov
xor
add
pusha
push
push
fcoml
fiadds
cs
out
or
pop
movsb
aas
mov
scas
mov
jb
adc
mov
std
jg
out
scas
inc
dec
and
test
stc
stc
repz
loop
or
push
les
mov
into
inc
xor
mov
mov
lret
pushf
add
jle
mov
adc
and
inc
out
into
or
leave
rorb
outsl
or
loopne
out
scas
jno
fdivrl
dec
pusha
stc
push
scas
jns
dec
inc
insb
nop
aas
jl
scas
hlt
sub
cltd
ret
shrd
mov
lahf
and
test
dec
lret
repz
or
test
int
xchg
shlb
aas
jecxz,pn
mov
fcmovnbe
inc
lcall
sbb
out
mul
iret
scas
mov
jp
push
hlt
sbb
fbstp
pop
sbbl
jns
xchg
imul
in
xchg
jge
ret
pop
sub
in
push
pop
lahf
or
enter
int
pop
pushl
mov
push
imul
jne
cmp
inc
in
addr16
out
cwtl
js
mov
fisttpl
or
cld
stc
mov
sub
mov
pop
and
das
jg
mov
mov
stc
repz
orl
mov
mov
cmp
stc
push
cld
add
cld
fs
jns
cld
sbb
adc
dec
xor
aaa
xchg
cmp
out
lahf
add
mov
test
aam
aas
aas
mov
adc
inc
pushf
shll
rolb
or
adcb
mov
inc
daa
scas
sub
rclb
cmp
pop
push
pop
data16
mov
rorb
into
and
xorl
out
pop
push
ret
rcrl
iret
lahf
aas
mov
mov
aaa
fsubrs
in
in
jmp
fwait
xchg
int3
outsb
ds
and
push
jg
mov
cld
sbb
mov
push
test
aas
jg
sbb
sbb
fs
es
cmp
mov
lods
mov
lock
test
cli
aaa
lahf
push
mov
clc
push
inc
clc
sbb
gs
inc
in
mov
cmpb
xor
aas
xchg
popf
add
outsb
fidivrs
dec
pop
xchg
dec
loopne
leave
out
xchg
jb
mov
scas
cli
pop
push
jg
jmp
xchg
inc
adc
dec
testl
stc
mov
xchg
daa
loop
out
clc
ret
mov
and
cmc
repnz
cmp
sub
pop
leave
push
mov
aas
cmp
mov
dec
iret
aas
scas
mov
sbb
sbb
mov
pop
lret
xchg
sub
fimull
mov
int3
xchg
inc
test
or
pop
cmc
loope
out
cmp
fdivrs
mov
into
fnstenv
aas
push
cmp
out
loope
insb
ret
hlt
mov
sub
xchg
aas
jg
incl
xchg
lret
imul
scas
cmpl
jmp
xchg
lock
push
sbb
jle
add
loop
pop
loop
fisubrl
dec
inc
outsb
dec
xchg
lret
jg
addb
push
mov
pop
xchg
or
scas
adc
movd
daa
jge
into
cmc
inc
loope
inc
cmc
cwtl
ljmp
mov
sub
test
lret
pop
fiadds
sub
frstor
dec
call
add
lcall
lcall
imul
push
xchg
pop
pop
jns
lods
jg
and
inc
dec
xchg
adc
cwtl
xchg
push
fidivrs
mov
lods
inc
lea
cmp
sub
inc
fisubs
sbb
pop
test
rclb
lret
jnp
repz
pop
or
cmp
stc
and
add
xchg
imul
sahf
pop
js
movsl
mov
fnstsw
push
lret
inc
mov
lods
push
pop
jns
push
mov
iret
jo
and
jb
xchg
out
jo
test
movsb
mov
repz
aaa
xchg
sub
cld
mov
mov
std
cmpsl
pushl
jl
xchg
mov
mov
aas
pushl
fnstcw
mov
in
shll
cmp
scas
mov
sub
mov
push
iret
mov
aam
xor
call
cli
ja
and
jns
push
jl
out
int3
xchg
repnz
xor
dec
stos
mov
mov
jg
inc
cld
daa
mov
jae
sub
cld
dec
mov
int
sahf
out
gs
iret
movl
rorb
scas
lock
push
lcall
jg
rcrb
sbb
pop
mov
psubw
out
add
xchg
adc
cmp
mov
repnz
or
pop
fdivs
pop
cmp
lahf
sbb
outsb
jne
fldl
and
aaa
mov
jg
cld
cs
out
inc
dec
shrb
push
aam
inc
sub
ja
pusha
hlt
pmuludq
ds
fmull
xchg
jg
pop
mov
mov
test
fiadds
repz
lahf
scas
aad
jge
fs
pop
iret
addr16
jbe
mov
jnp
jle
xchg
pop
sbb
jne
push
sar
mov
add
es
sub
aas
shl
xchg
add
inc
jle
js
xchg
sahf
outsb
mov
stc
cmpsl
sti
push
hlt
mov
pusha
in
out
cwtl
sub
mov
das
mov
in
jns
fcompl
test
loopne
lret
sub
loope
xor
ds
jecxz
jge
aas
jg
inc
ds
aad
mov
sbb
pusha
cld
xchg
test
xchg
cmp
jg
outsb
pop
mov
popa
enter
outsb
dec
adc
stc
jg
inc
ljmp
sub
iret
lahf
aas
adc
push
rcrb
out
xorb
jae
js
push
les
das
or
xor
faddl
lahf
nop
out
shr
ffreep
and
or
out
and
mov
pop
ja
xchg
add
push
iret
stc
lahf
xchg
inc
in
cmpps
lods
jecxz
jmp
stc
test
push
dec
xchg
jo
mov
fwait
lret
add
in
imul
and
stc
repz
orl
outsl
ret
sbb
jg,pt
cld
push
inc
scas
icebp
push
cltd
jns
sub
pop
cmp
xchg
insl
repz
mov
in
cwtl
jbe
mov
pop
sbb
mov
add
jb
arpl
mov
jg
mov
or
std
cmc
mov
lret
add
cmpsb
cmp
xchg
push
mov
mov
sub
lret
lods
push
cld
push
sbb
cmp
cmpsb
out
pop
decb
fcmovu
call
lods
mov
lret
mov
or
test
and
nop
jmp
mul
mov
mov
push
xchg
loope
dec
xchg
fcomi
out
cs
dec
cmp
pop
sbbb
aas
addl
xchg
mov
arpl
repz
mov
dec
pop
sub
enter
cld
stc
movsl
or
push
xor
ds
push
rcrb
push
repnz
lock
addr16
dec
and
jb
sbb
jns
mov
jns
sbb
sahf
gs
lcall
fnstcw
loopne
pop
lret
iret
xchg
mov
jle
jmp
mov
jecxz
push
mov
mov
push
mov
mov
mov
ss
mov
testl
ficoms
repnz
cmpsl
or
fdivl
xor
push
rcll
shl
outsl
sub
test
add
pushf
sub
fidivrs
loopne
pop
lods
lahf
inc
and
jg
pop
enter
dec
add
faddl
xchg
test
loop
scas
push
repnz
vpmadcswd
pop
add
addr16
push
mov
fidivs
inc
sahf
xchg
mov
mov
xchg
push
pop
jns
sub
mov
outsb
or
jb
cld
inc
cld
xor
adc
repz
dec
and
aas
test
fnstcw
jge
cld
mov
mov
call
scas
aam
xor
or
ret
mov
outsb
cmp
jne
mov
push
aas
popf
ret
jl
add
push
pop
jle
sub
mov
sti
add
adc
jle
or
faddp
fidivrs
mov
xchg
aas
daa
adc
mov
mov
dec
mov
pop
scas
mov
pop
sbb
pop
mov
add
xchg
push
in
filds
inc
xchg
in
insl
cltd
sbb
daa
pushf
dec
xchg
mov
insl
add
xor
mov
mov
jne
loope
std
pop
pop
add
js
dec
jmp
push
fisubrl
repnz
out
adc
inc
testb
or
cld
stc
pop
icebp
in
and
mov
xchg
dec
data16
sub
xchg
xor
add
fwait
sub
aas
mov
push
insb
clc
or
pop
sarb
pop
jns
fstl
inc
mov
iret
dec
inc
dec
lret
arpl
adc
cmp
fisttpl
aas
mov
paddb
xchg
ret
jae,pn
cmp
pop
jg,pt
aam
adc
sub
cld
push
ret
jo
mov
das
and
push
xchg
idiv
and
dec
mov
mov
int
mov
xchg
scas
adc
add
add
and
cmp
mov
rorl
lret
jnp
dec
cmc
gs
in
sub
mov
shll
push
aam
cmp
lret
mov
xor
jns
pop
fwait
adc
scas
mov
bound
ret
lods
dec
lret
fs
lret
mov
jg
dec
ds
push
clc
test
ljmp
xchg
cmp
xchg
scas
or
push
fdivl
mov
arpl
add
mov
clc
subl
lea
adc
jg
cld
ret
pop
and
inc
xorps
lahf
aas
inc
addr16
xchg
pop
sbb
jnp
stc
repz
outsb
sahf
xor
xor
mov
call
mov
clc
jg
pop
inc
dec
mov
js
iret
aas
mov
aas
xchg
jl
shrb
and
cmpl
adc
ffreep
test
sbb
pop
jle
movsb
testb
xchg
scas
sub
stc
repz
sub
pop
roll
jnp,pt
jne
gs
ds
in
fdivs
cmp
jl
scas
cld
cld
stc
or
out
test
inc
sub
jno
iret
lahf
pop
adc
jno
adc
or
stc
repz
ja
repz
mov
cmp
aas
jg
repnz
outsb
test
pop
in
mov
stc
repz
addr16
dec
mov
mov
xor
xor
dec
aas
jg
cld
or
hlt
das
aam
mov
sub
lock
jmp
dec
in
cld
mov
repnz
repz
lds
mov
xchg
sub
add
dec
clc
repnz
adc
ljmp
push
test
pop
scas
pop
cmp
stc
repz
mov
xchg
mov
mov
xchg
lahf
push
jle
div
data16
mov
mov
mov
lahf
rolb
or
xor
cltd
xor
mov
mov
fdivrp
jb
loop
lods
dec
xchg
inc
ret
jns
xchg
push
fidivl
mov
xchg
in
push
pop
cmp
dec
lret
dec
mov
loopne
ja
pop
jns
mov
inc
cmp
mov
jo
pop
jns
xchg
aas
xchg
jg
adc
js
jae
pop
mov
push
dec
cs
mov
jecxz
std
sbb
popf
iret
fisubrs
adc
loope
addr16
repz
mov
dec
pop
imul
cmpsb
pop
sub
fidivrs
in
xchg
xchg
ss
push
scas
leave
dec
xorb
in
push
leave
hlt
inc
mov
pop
jb
push
fdivrp
jnp
push
out
push
fnsave
pop
pop
pop
jno
inc
jmp
enter
das
push
dec
inc
mov
cmpl
mov
lret
inc
xchg
aam
std
sti
rorl
cmc
sbb
aas
jg
fs
cmp
mov
dec
cwtl
or
dec
lret
lahf
ret
movsb
jle
cli
repz
ret
into
sbb
in
movsb
jno
mov
mov
int
jecxz
js
lret
sbb
pop
dec
into
movsb
test
jl
add
jne
jge
pop
fsubrp
cmp
insl
mov
jns
popf
insb
out
gs
push
lret
rcrl
inc
call
jns
cmp
pop
scas
mov
adc
and
pusha
nop
lret
xchg
jg
mov
adc
fldenv
repnz
dec
std
dec
inc
negl
add
cli
sti
dec
and
incl
inc
idivb
xchg
xchg
adc
pop
jns
fldl
pop
iret
lret
imul
test
xchg
push
jns
loope
mov
popf
shrb
xchg
push
pop
mov
icebp
sub
out
push
ror
mov
xor
add
and
cmpsb
jbe
jg
cld
xchg
daa
sahf
cli
je
cmpsb
enter
xchg
fdivrs
cld
iret
lahf
pop
push
fiadds
mov
das
lahf
jg
sub
ds
movsl
sbb
gs
mov
test
daa
xor
out
das
sbb
into
jmp
ret
mov
add
mov
adc
lahf
jg
push
popf
pop
dec
dec
mov
add
cld
stc
repz
imul
arpl
xor
xchg
fldcw
loope
cmp
dec
scas
inc
sub
dec
mov
mov
jns
sub
decb
xchg
mov
xchg
ja
xchg
nopl
dec
sub
dec
add
popf
push
test
and
mov
repz
bnd
in
inc
sahf
xchg
or
pushf
inc
add
daa
mov
cld
outsl
loope
mov
adc
fwait
int
pop
bound
mov
daa
iret
das
xorb
fcoms
pop
notrack
arpl
outsb
dec
aam
mov
inc
aas
jg
test
xchg
jle
xchg
out
lahf
jbe,pn
maxps
shrl
stc
cld
stc
test
or
ss
pop
jns
fsub
shrl
cmp
fmull
dec
sbb
jns
fstl
jg
popf
insl
inc
and
inc
mov
cmp
xchg
push
push
xchg
push
pop
jns
adc
add
mov
pusha
jns
int3
adc
push
lock
xchg
cmp
mov
lds
jmp
cld
stc
test
mov
sahf
push
stc
adc
jmp
lahf
aas
jg
mov
inc
inc
mov
mov
out
xchg
mov
cmpsl
insb
mov
jo
test
subl
insb
stos
test
nop
into
mov
repnz
lcall
test
mov
or
xor
cmp
jnp
das
jg
scas
imul
ljmp
pop
aas
and
test
lock
stc
repz
cs
pop
mov
cltd
push
popf
and
mov
jbe
mov
sub
pop
stos
test
fdivp
imul
repz
shlb
insb
or
dec
movsl
pop
iret
lahf
aas
jg
pop
movsb
call
jp
cmp
add
jmp
fmuls
scas
pop
arpl
cs
cld
stc
repz
lret
ja
xchg
in
mov
xor
sub
iret
lahf
aas
jg
sub
lock
xchg
sub
jns
repnz
repz
iret
or
xchg
push
pop
and
shlb
das
inc
push
xor
das
outsl
inc
out
outsl
lcall
xchg
out
std
in
xor
dec
jmp
stos
pop
cmc
add
repnz
dec
mov
pop
dec
xor
ljmp
das
cmp
jmp
jns
test
outsl
lcall
repz
xchg
push
push
iret
jb
add
adc
stc
xchg
add
sub
inc
xchg
outsb
cli
xchg
in
aas
jg
cld
sub
push
loop
mov
mov
shlb
lahf
fimuls
mov
dec
mov
repz
or
mov
clc
cmp
scas
xchg
push
fidivrs
ja
test
stc
xchg
in
ret
clc
cmp
aad
data16
scas
mov
cmp
outsb
xchg
fldz
mov
pop
jns
jg
jmp
inc
push
adc
mov
mov
inc
mov
pop
inc
ret
and
xor
in
push
xor
pop
mov
push
lcall
sub
jbe
dec
sbb
push
push
sbb
sbb
xor
cmp
mov
cmpsl
sti
or
aam
cmp
mov
and
xchg
mov
add
das
ja
mov
out
pop
loopne
xor
pop
iret
xchg
aas
add
aad
ljmp
fstp
daa
inc
cmpsb
imul
pop
xor
push
sub
jb
repz
cli
out
mov
jge
ds
iret
lahf
aas
jg
or
sti
les
repz
xor
or
out
movsb
into
mov
jae
cs
cmpsl
push
das
aas
jg
ljmp
push
pop
fsubs
enter
lret
pop
xchg
mov
in
fisubrs
pop
repnz
push
nop
es
add
icebp
jbe
mov
xchg
das
scas
mov
or
pop
inc
addl
in
mov
lret
es
outsl
cmp
int
jns
xchg
push
jb
ja
outsl
mov
jecxz
cmpsb
aad
push
fnstsw
and
mov
sbb
int
fildll
stc
filds
sub
test
xchg
stc
repz
dec
xchg
pop
lahf
jl
leave
mov
das
jg
cld
negl
dec
decb
jmp
fistpll
pop
push
das
inc
adc
aad
cmp
mov
repz
test
pop
xchg
dec
enter
adc
bound
cld
jno
sub
clc
sbb
mov
pop
in
xor
jnp
jle
jl
add
fisttpl
inc
sahf
aas
jl
xlat
pop
push
addr16
std
fidivrs
in
outsl
je
add
adc
push
cmp
adc
or
add
cmpsl
dec
sbb
clc
stos
jbe
adc
jp
sbbl
sbb
sub
arpl
lock
add
dec
mov
pop
adc
lock
js
scas
pop
in
jns
sti
in
sbb
sti
paddusw
in
push
pop
dec
nop
xchg
xchg
dec
push
jb
push
scas
icebp
scas
push
outsb
xor
cld
push
mov
sti
repnz
xchg
pop
jle
les
leave
bound
mov
int3
shld
push
loop
and
inc
mov
fstl
popl
sarb
insb
sbb
into
push
enter
jle
es
in
add
sahf
das
je
stc
pop
popl
dec
call
ljmp
ljmp
mov
or
repnz
adc
in
rcr
jne
pop
inc
sub
cmc
lret
jle
sub
inc
outsl
jns
mov
or
push
mov
xchg
lahf
ljmp
ds
repnz
aam
jg
inc
lfs
pusha
loope
in
stc
repz
dec
out
xchg
outsb
inc
cmpsl
in
repnz
subl
ret
push
int
call
push
add
mov
aam
cld
push
adc
jnp
out
repnz
xchg
add
jle
push
insb
clc
dec
push
mov
push
mov
rcr
mov
mov
xor
aas
sub
push
sar
xor
pop
or
inc
sbb
jle
cld
cld
fldcw
clc
xor
sub
mov
inc
je
or
push
icebp
ljmp
repz
xchg
sahf
iret
pop
mov
jle
clc
aaa
repnz
dec
fcmovbe
lahf
loop
arpl
addr16
dec
push
rorl
arpl
aaa
cmpsb
xor
test
iret
loopne
xor
cmp
outsb
divb
int
add
dec
sbb
mov
dec
xchg
pop
scas
mov
adc
cmp
rolb
and
jae
jg
cld
stc
jmp
mov
sbb
je
je
push
mov
rolb
pop
aam
outsl
mov
jle
cld
rorl
jae
mov
iret
lahf
push
test
mov
push
mov
mov
pop
pushl
jo
out
cmovo
arpl
mov
mov
mov
hlt
dec
inc
ficoml
ud0
in
ja
mov
dec
mov
dec
aad
xchg
xchg
pop
ds
dec
mov
fimuls
xchg
out
aas
mov
jae
test
mov
sbb
shld
sub
sarl
dec
out
inc
aam
xor
fadds
cltd
pushl
mov
xor
lock
or
aas
rorb
mov
fstpl
adc
filds
push
jg
cld
stc
leave
jno
fwait
and
cmp
pop
stc
xor
aas
lods
mov
adc
rcll
jmp
pop
sarb
pop
inc
cli
repnz
mov
mov
aas
stc
lock
jge
iret
fisttpl
gs
lock
mov
idivl
jnp
bound
andb
out
hlt
adc
arpl
out
imul
xor
pop
push
xchg
loop
iret
lahf
aas
pop
jge
shl
and
xchg
hlt
imul
mov
pop
dec
adc
cmp
xlat
jge
mov
jl
mov
popa
sti
mov
shll
lods
pop
test
gs
and
add
xchg
ret
lret
dec
mov
inc
sbb
insl
cld
jl
hlt
in
out
filds
fstps
xlat
in
inc
adc
into
pop
rclb
inc
fldenv
das
ja
mov
inc
pop
out
lea
mov
loope
cmc
cli
push
andb
mov
pop
dec
xchg
dec
add
fwait
clc
bnd
inc
ret
dec
push
xchg
dec
sub
push
pop
repz
lahf
scas
mov
cmp
insb
dec
xor
jp
push
out
inc
sahf
iret
sbb
pusha
add
nop
xor
rclb
lahf
pop
jns
mov
adc
dec
fidivrs
ficoml
or
lahf
pop
sahf
mov
negb
bound
loopne
stc
stc
repz
push
cmc
and
or
pop
jle
and
je
repnz
mov
dec
test
lock
icebp
aas
dec
test
in
and
add
pop
lahf
push
and
xchg
mov
aam
shll
xor
jg
call
out
lahf
pop
out
jb
inc
rcr
or
or
cld
stc
repz
aaa
outsl
movsl
scas
adc
push
mov
cs
push
jle
lahf
aas
jg
jmp
repz
cmp
ds
scas
mov
std
cmp
insl
popf
lret
iret
pop
sarb
faddl
adc
les
lret
push
jno
setne
jns
push
mov
sub
add
sbb
sti
jb
cmpb
into
mov
lahf
pop
loope
pop
adc
insl
mov
out
stc
repz
arpl
and
lds
dec
fdivr
inc
cld
repnz
jo
lret
jge
loopne
sub
jecxz
pop
daa
push
cld
into
loope
int3
jmp
cld
stc
jp
out
into
test
mov
fs
lahf
aas
dec
imulb
repz
out
inc
xchg
jl
lods
jbe
mov
push
nop
sbb
mov
pop
mov
int
jge
test
push
setge
cld
cld
cmp
mov
pop
mov
out
lahf
aas
xlat
jnp
in
popa
or
sub
stc
repz
mov
cmc
push
pop
or
jg
mov
or
outsb
xchg
lahf
out
ljmp
mov
cwtl
push
xor
in
scas
inc
std
lret
hlt
decb
jmp
pop
adcl
sarb
inc
ja
or
or
pop
xchg
xor
jns
lret
xchg
mov
xchg
or
push
je
push
pop
iret
outsl
dec
enter
popf
es
cmp
push
cld
outsl
push
mov
in
sub
xor
push
pop
jns
inc
ljmp
cmp
inc
xchg
push
in
aas
add
xchg
dec
insb
orb
dec
lret
iret
lahf
aas
test
push
jp
pop
adc
repz
call
cmpsb
add
lret
jo
gs
xchg
movsb
cmp
addr16
inc
xchg
outsl
movsb
inc
fcompl
in
jg
jno
cmp
int3
xchg
sbb
sub
add
test
iret
popl
mov
dec
loope
adc
jecxz
ds
rorl
cld
cld
stc
lret
push
jecxz
dec
or
xchg
pop
ja
lods
inc
dec
fnstenv
xchg
push
fidivrs
fadds
jecxz
cs
std
jb
xchg
inc
add
fbstp
fdivrl
aaa
lods
test
or
int
jge
iret
xchg
push
pop
jns
cmpsb
cmp
xchg
xor
int3
sub
sti
ja
add
andb
jg
sub
push
or
cmp
insl
pop
pop
outsl
inc
xchg
xor
gs
cs
jns
xchg
test
daa
add
mul
cmp
inc
jns
xchg
push
aaa
imul
and
push
lret
jl
out
add
out
test
cwtl
and
cltd
push
repz
cli
and
or
pop
xabort
inc
jg
adc
std
repnz
sub
mov
or
jle
std
add
adc
cmp
pop
jle
clc
mov
out
mov
mov
test
push
xchg
scas
mov
ficompl
cmp
insb
cmc
mov
repnz
aad
sub
mov
out
xchg
sub
enter
mov
scas
mov
push
in
inc
in
cmpsl
and
cmpsb
inc
cmpsl
jg
cli
in
lds
je
pop
xchg
outsl
lock
mov
push
cld
and
xlat
or
lret
imul
add
and
lret
mov
pop
pushf
dec
int
xchg
or
out
ds
push
cli
sub
popf
arpl
repnz
lret
out
jle
adc
mov
and
sub
jp
ljmp
sub
lcall
dec
adc
cs
lahf
mov
outsl
ljmp
imul
dec
mov
mov
dec
cld
sti
mov
mov
arpl
jo
jle
cmp
aas
aas
and
xlat
outsb
mov
dec
push
in
iret
lahf
lods
and
xor
xchg
xchg
pop
stc
daa
icebp
out
jge
aas
jmp
enter
push
fdivrp
repnz
and
mov
mov
jns
xchg
sbb
mov
mov
xor
in
ja
js
aaa
pop
decl
je
cmp
pop
xchg
push
pop
jns
sbb
cmp
mov
pop
jns
pushl
jb
movaps
jb
fidivrs
jg
das
cmp
inc
push
cmp
mov
call
xchg
lahf
jae
iret
test
nop
lahf
lods
out
sarb
sbb
push
mov
cld
stc
repz
dec
fimull
cmc
leave
repz
cmpl
sbb
mov
xor
jge
in
and
call
jge
xchg
xchg
push
or
sub
lock
in
push
pop
std
outsb
insb
rclb
dec
push
nop
stos
pop
ret
or
pop
sub
jne
out
lahf
pop
sahf
push
jnp
repnz
imul
mov
pusha
mov
jp
inc
sub
dec
arpl
sub
cmp
jae
adc
mov
mov
es
orb
and
mov
aas
mov
in
adc
les
lahf
or
jb
dec
jmp
sahf
or
sub
lret
cld
mov
xchg
and
hlt
jg
cld
stc
cmp
jae
bound
fpatan
jns
leave
push
das
ja
push
jl
push
arpl
mov
jecxz
repz
dec
sti
inc
icebp
cmp
movsb
fldenv
call
pop
push
mov
jmp
sar
out
orl
mov
xchg
xchg
mov
fcoml
popf
enter
in
sub
xor
jg
cld
adc
addr16
and
mov
loope
out
lahf
aas
xchg
iret
and
xchg
cs
and
xchg
dec
cld
stc
repz
pop
cmp
pop
cmp
or
xor
testb
loope
push
or
out
xchg
mov
jge
inc
ficoms
pop
add
adc
out
xor
cld
xor
inc
faddp
xorb
xchg
daa
xchg
and
mov
dec
jno
imul
cli
lcall
add
into
shl
xchg
and
repnz
inc
out
xor
xchg
push
push
cld
push
add
mov
mov
shll
repnz
notb
pop
jg
cmpsl
psubusw
imull
imul
aas
inc
fistpl
insb
in
jg
sbb
fisubs
out
push
out
into
sub
imul
repz
arpl
cwtl
fiadds
lock
ds
inc
push
jl
sahf
bnd
xorb
push
ljmp
fdivrp
scas
xchg
xchg
je
xlat
jp
mov
out
and
scas
mov
cmp
lock
adcl
pop
push
inc
adc
popa
mov
lods
inc
sahf
fs
in
mov
sbb
ret
mov
stos
leave
and
adc
repz
sbb
jg
pop
shrl
dec
push
dec
mov
das
push
pop
jns
inc
aad
jno
xchg
or
or
sub
jg
call
sub
mov
push
pusha
or
fbld
or
xchg
cmp
out
jle
cmp
lds
fildll
insb
pop
int
ss
lahf
aas
mov
mov
insb
imul
cld
stc
repz
repnz
mov
fadds
pop
jo
jg
cld
stc
pop
addr16
movsl
cmp
mov
xor
aas
out
mov
rcll
or
mov
stos
repz
adc
aas
jg
push
cmp
lea
stos
push
pop
xchg
cmp
inc
aaa
jb
jge
mov
jle
cld
outsb
sub
push
leave
addr16
test
dec
mov
pusha
call
lahf
jg
pop
and
sbbl
jbe
das
lahf
aas
push
pop
pop
pop
mov
out
jmp
out
stos
adc
push
jmp
repz
aam
fldt
dec
cmpb
jg
cld
stc
xchg
pop
adc
adc
or
lcall
data16
sbb
and
decb
pushf
pop
push
addr16
cmc
sub
orb
pop
xor
dec
lahf
jg
xor
out
xor
add
je
movl
cmp
xchg
adc
ds
sub
inc
lret
add
arpl
js
lahf
push
test
arpl
leave
repz
out
out
stos
adc
lods
mov
adc
mov
inc
jg,pt
and
shlb
cltd
push
jb
iret
rcrb
outsb
aam
das
test
xchg
fs
xchg
mov
incb
out
lret
inc
scas
inc
mov
shlb
cmp
or
jle
test
repz
pop
js
test
sbbb
jns
loope,pt
pop
fildll
cmp
lret
iret
lahf
dec
or
pusha
das
aas
adc
out
or
vandps
xor
nop
out
dec
cmpl
xchg
test
pop
mov
orl
int
seto
mov
scas
cmpb
xlat
call
lea
jge
in
out
imulb
jl
or
imul
jle
sub
fbld
stc
cmpsb
insl
lea
lahf
pop
adc
pushf
inc
mov
ret
aam
inc
or
es
std
in
cmc
jge
cmp
iret
invd
inc
dec
adc
mov
cmpsl
movsl
mov
push
sbb
dec
jbe
aas
flds
rdpmc
add
and
or
xor
in
xchg
mov
push
xchg
dec
and
jp
cld
lcall
xor
pop
mov
icebp
aam
inc
sahf
aas
xor
xor
xchg
addl
pop
or
repnz
cmp
dec
pop
dec
mov
mov
sub
lcall
dec
mov
ficomps
mov
notb
dec
popf
xor
or
sbb
add
into
push
or
and
int
push
lods
and
xor
adc
and
adc
mov
scas
lock
and
out
push
push
jnp
sahf
jns
cmp
mov
adc
stc
repz
dec
shll
inc
sbb
mov
inc
cmpsb
jmp
addl
fisttpll
and
push
arpl
icebp
lods
cld
cmp
add
add
lock
daa
aas
cmp
xchg
jae
fsubp
xchg
mov
jg
xchg
dec
icebp
cli
je
daa
mov
cmp
mov
pop
push
mov
int3
outsb
add
jbe
jl
xchg
cld
add
pop
rcrb
int3
add
jnp
pusha
cltd
push
aas
test
add
or
fstps
lret
cmp
mov
scas
lea
iret
and
imul
sub
add
pop
or
jp
int3
and
xchg
sahf
stc
mov
sbb
lahf
inc
inc
jno
loopne
sub
cmc
enter
sbb
pushf
sbbb
repnz
pop
jle
out
pop
iret
cmp
cmp
or
lods
in
std
lcall
movsl
push
das
pop
dec
out
pop
and
xchg
cld
mov
mov
repnz
repz
sub
xchg
add
cld
pop
mov
mov
mov
xchg
into
cltd
iret
xlat
notb
repz
adc
aam
out
loopne
movhlps
push
incl
movsl
enter
add
add
outsl
sub
push
xor
test
cs
push
rorl
and
rcrb
or
aas
jg
cld
into
jne
les
les
mov
out
lahf
cmpsb
outsb
and
and
mov
cmc
push
adc
out
sub
arpl
or
cmpl
incb
cmp
in
mov
cmp
add
and
and
stc
add
aaa
sbb
aas
jg
lods
mov
outsl
jbe
dec
in
fildl
ja
test
stos
jp
sub
xchg
mov
add
out
dec
inc
aaa
pop
mov
mov
jecxz
pop
fistps
lahf
js,pt
nop
popf
push
fsubrl
push
into
push
pop
dec
or
stc
repz
fstpt
and
and
repz
add
jl
xchg
jl
fildl
add
stc
imul
rcrb
xor
cli
or
jns
xchg
jns
cmp
jg
insl
lds
or
aas
mov
mov
lods
mov
dec
mov
iret
lahf
push
push
in
jge
sub
sub
bound
cld
stc
or
addr16
outsb
push
icebp
arpl
xor
adcb
fimuls
sub
out
xchg
lock
sti
xchg
pop
dec
call
cld
stc
repz
sbb
lods
je
lret
lods
jne
ror
fisubrs
mov
setg
dec
cli
xchg
loop
push
add
lahf
shrb
lar
repnz
fdivrs
or
lahf
imul
and
or
cli
in
inc
imulb
dec
leave
pop
xlat
lret
xchg
mov
push
frstor
scas
leave
ret
mov
dec
std
loop
jle
cld
or
xor
push
es
adc
lock
aad
push
jg
xor
enter
loopne
push
aas
lahf
mov
add
jg
pushf
push
add
mov
mov
mov
fisubl
pop
nop
aas
jg
fisubrs
jl
lret
cld
push
adc
pop
rorb
mov
aas
jg
mov
cmp
sbb
pusha
adc
sbb
lock
movsb
mov
ret
jno
add
das
jae
inc
aad
fildll
xchg
aam
ja
mov
clc
and
dec
and
repnz
fdivrp
loop
xor
inc
or
pop
jp
pop
cs
loopne
sbb
lret
dec
inc
pop
mov
das
iret
das
movsb
dec
insb
pop
scas
mov
ss
in
imul
pushf
cli
lcall
or
push
imul
addr16
icebp
inc
mov
out
imul
add
jge
fwait
sbb
add
xchg
aad
dec
enter
xor
inc
inc
out
or
das
pop
or
out
shl
stc
repz
push
sub
dec
push
movsb
pop
aaa
mov
lret
rcr
mov
and
fbstp
jne
cmpsb
pop
pop
ja
ds
and
push
bound
xchg
mov
xchg
popf
in
dec
icebp
cs
in
rcrl
aas
mov
jne
add
dec
push
pop
dec
daa
aas
and
and
insb
ds
pop
jns
shlb
iret
lahf
xchg
xor
nop
lahf
out
jo
in
inc
cmpsb
incb
pusha
push
out
rcll
lock
add
mov
subl
lea
mov
inc
xor
xchg
mov
popf
inc
mov
jg
pop
inc
repz
jbe
dec
jne
sbb
in
push
loopne
hlt
mov
lock
jnp
daa
lahf
sub
ja
pop
ss
ja,pt
jns
fucomp
jo
mov
popa
icebp
aad
dec
mov
push
cmpsb
testb
fucom
pop
leave
in
es
popf
cmovle
repz
jns
sub
sbb
data16
add
mov
push
and
jne
ds
mov
xchg
ja
mov
pop
jns
mov
push
pop
xorl
inc
push
mov
jge
cmp
stos
inc
insb
mov
shll
sbb
or
jo
dec
pop
jns
jo
or
sarb
cltd
inc
jbe
pop
iret
and
push
outsl
jecxz
outsb
fstl
fildll
mov
push
jns
rorl
xchg
jge
pop
cmc
push
test
lret
xchg
sub
loope
lock
sbbb
inc
jp
stc
add
adc
in
jle
out
sbb
sti
sub
in
jl
test
pop
jl
push
movsl
fisubl
loope
iret
mov
cmc
pop
mov
lock
in
shr
xchg
pop
push
outsb
push
lret
repnz
dec
pop
ljmp
ror
sub
mov
push
outsl
ret
push
xchg
pop
lods
mov
mov
stc
repz
pop
xchg
int3
dec
mov
mov
cld
inc
fcoms
pusha
fstpt
pop
xchg
ja
xchg
xchg
pop
lahf
mov
push
pop
jns
sahf
cmp
pop
call
das
mov
sub
lods
pop
repnz
add
fistps
lock
xor
sub
adc
pop
dec
clc
bnd
int3
xchg
sub
stc
repz
sub
xchg
aaa
push
mov
lahf
aas
jg
sub
testb
mov
out
nop
fbld
mov
pop
ret
lock
mov
lods
das
push
fstpt
adc
xchg
scas
loopne
or
outsl
rorl
ss
push
pop
jns
repz
adc
pop
pop
jns
xchg
add
xor
dec
fwait
inc
flds
and
pop
into
das
out
stos
sub
call
inc
xor
add
mov
repz
fildl
xchg
out
in
mov
mov
cld
mov
lcall
sub
jmp
dec
clc
push
mov
xchg
mov
pop
jns
inc
cmpsb
daa
loopne
mov
test
push
lahf
jg
jg
mov
in
and
daa
lock
insb
push
les
xchg
sbb
int3
jns
xchg
push
cmc
xor
or
lods
daa
lret
push
mov
jae
pop
jae
xor
testl
outsb
jmp
inc
cmpb
shl
out
lahf
aas
add
inc
arpl
pop
xchg
pop
mov
cld
stc
jne
mov
insb
hlt
out
mov
lahf
aas
jg
mov
push
dec
jnp
mov
fnstsw
cmp
shl
enter
loopne
cld
bound
jbe
mov
cmpsl
out
mov
testb
fdivrp
mov
std
sub
mov
jns
xchg
lea
jp
fprem
call
into
jns
xchg
push
in
movsb
cmpsb
js
psubw
pusha
dec
push
lret
pop
mov
out
dec
push
mov
repnz
movsb
imul
cli
in
sub
pop
out
xchg
cli
out
or
dec
clc
xchg
hlt
in
scas
or
cmc
das
out
pusha
xor
lea
fldenv
add
lret
lret
mov
push
shrb
mov
daa
fs
in
or
sub
fwait
jle
pushf
push
inc
push
lods
mov
mov
cltd
scas
jo
test
out
push
arpl
bound
add
mov
lods
mov
push
pop
mov
sub
push
pop
add
cs
lods
out
sbb
mov
pop
ds
xchg
push
pop
jns
cmpsl
jl
imul
mull
mov
aam
pop
push
aaa
pop
sahf
pop
push
dec
cld
stc
repz
pop
fcoms
sbb
repz
das
aas
jg
and
sbb
movsl
in
or
add
outsl
enter
mov
scas
push
les
push
ja
pop
jns
xlat
sbb
xor
dec
push
fbld
stos
test
inc
cmp
mov
imul
pop
jns
gs
test
ljmp
jns
aaa
mov
push
pop
jmp
outsl
xchg
pop
les
xchg
pop
dec
pop
je,pn
jle
and
jns
aad
mov
and
aas
dec
ret
lahf
mov
inc
scas
mov
outsb
dec
cmpb
lods
das
fsubrl
rcll
jecxz
xor
lahf
xor
imul
lods
test
push
pop
repnz
out
cmp
fdivs
mov
mov
lods
pop
mov
xchg
add
fldt
es
loop
dec
inc
aas
sbb
aas
test
mov
add
cmpsl
addr16
iret
repz
das
out
mov
int
jmp
jg
cld
stc
mov
lret
ss
loope
cmp
out
lahf
aas
jge
arpl
paddsb
cld
stc
repz
rorl
push
subb
lret
jle
xor
sbb
std
ss
scas
mov
addr16
dec
enter
pop
aad
arpl
mov
sub
pop
repnz
es
stc
and
int
test
inc
data16
sbb
jmp
scas
sub
jb
mov
out
xchg
adc
push
shll
shlb
sti
mov
jb
imul
repz
mov
insl
frstor
nop
nop
or
jns
mov
mov
rolb
or
in
inc
cmpsb
mov
fbstp
test
out
sbb
js
and
es
cmp
mov
lret
repnz
sbb
sub
rorb
cld
xchg
cs
pop
mov
push
ss
aas
movsl
inc
ds
std
xor
hlt
lret
out
in
in
xchg
sub
out
sbb
inc
in
pop
out
iret
push
pusha
push
sarl
int
mov
jbe
push
pop
or
out
notb
fidivrs
dec
int
sbb
mov
scas
cli
cmp
iret
lahf
jg
into
in
mov
add
fisubrl
js
repz
test
adc
out
jb
das
fmuls
dec
and
adc
adc
dec
push
in
pop
ror
fdivrl
in
test
cmc
loopne
stos
cmp
pop
aas
mov
xchg
push
pop
mov
dec
out
test
jmp
or
pop
mov
addr16
sbb
das
aas
mov
cmp
lcall
pop
jle
test
or
js
add
ja
and
rolb
scas
mov
mov
push
pop
jns
jmp
fwait
jns
fs
loopne
lock
hlt
in
fisubrs
and
stc
inc
stos
xlat
add
or
pushf
push
add
xchg
push
call
test
rcrb
das
sub
dec
pop
and
addr16
jmp
xor
daa
push
clc
in
xchg
cmp
stos
negb
stc
cld
stc
repz
xchg
jns
adc
jg
sub
push
push
clc
cmp
rcl
stc
xchg
push
arpl
in
jg
adc
test
sub
stc
xor
outsl
int3
call
mov
pop
inc
fwait
xchg
pop
dec
push
leave
jnp
gs
dec
jns
mov
sbb
mov
popa
mov
out
pusha
or
iret
lahf
aas
inc
pop
daa
or
add
repnz
repz
cmp
out
cmp
cmp
fdivrp
fs
push
mov
idivl
xlat
xor
cmp
inc
lods
mov
jl
repnz
outsb
fld
mov
in
lahf
aas
mov
pop
mov
stos
sbb
jnp
push
das
lahf
pop
ljmp
mov
out
in
shrb
mov
mov
sub
or
sub
fidivrl
cmp
fidivrs
mov
or
sahf
or
shll
imul
dec
movsl
or
sti
in
sub
int
cltd
cs
xchg
xchg
seta
scas
mov
and
inc
stos
enter
and
cmpsl
outsb
dec
enter
out
fwait
push
scas
adc
or
jb
imul
stos
cmp
orb
repz
fwait
loopne
xorl
ret
test
mov
in
fnstcw
movsb
lahf
aas
aas
mov
imul
jns
frstor
mov
arpl
mov
mov
xor
outsl
jge
mov
mov
or
add
cmpsl
ljmp
in
ret
mov
fcmovb
or
cld
stc
dec
push
aad
xor
call
nop
in
ja
sti
cmp
fsubs
inc
fisubrs
lea
xchg
cmc
jb
leave
jb
aad
jge
sbb
xchg
push
fdivrp
aas
std
push
iret
out
js
inc
jecxz
rorl
scas
jg
pop
jns
lcall
out
gs
lret
cld
fistpl
in
pop
jmp
mov
clc
dec
outsl
test
cmc
lret
xchg
push
dec
or
stos
je
add
cld
stc
test
pop
es
scas
stc
pop
nop
dec
mov
leave
mov
jb
and
pop
jle
std
ret
popf
dec
int3
es
in
repnz
jl
out
popa
pushf
les
mov
aas
rorb
cmp
inc
imul
push
fwait
jbe
call
cli
adc
outsl
scas
fs
das
adc
jl
cld
stc
lcall
std
ret
inc
mov
in
ja
mov
shrl
mov
push
pop
jns
xchg
mov
sub
stos
repnz
subl
jge
in
mov
adc
das
jg
out
mov
test
mov
faddl
in
repz
push
sbb
bound
mov
add
jb
xchg
push
call
cmp
cmpsl
push
xchg
jbe
push
fdivrp
sbbl
mov
iret
data16
push
imul
in
es
pushl
lret
jge
in
xlat
ljmp
mov
stos
js
repnz
adc
and
or
into
lret
ds
pop
mov
outsb
fsts
pop
les
repnz
aam
jmp
adc
pop
cmp
scas
mov
cmpsl
push
mov
jno
pop
xchg
int3
out
sbb
lret
jns
dec
outsl
popa
in
loope
subb
stos
test
push
adc
lahf
aas
ja
inc
xchg
push
inc
stos
addb
dec
stos
ffree
out
mov
add
scas
jp
inc
cld
repnz
dec
shll
inc
add
movsb
inc
leave
test
adc
and
jne
mov
inc
adc
mov
shl
fbld
jg
mov
outsb
inc
jge
insl
push
mov
repz
jecxz
call
repz
call
scas
mov
push
sub
mov
rorb
loop
mov
pushl
jg
and
clc
dec
xorl
hlt
jl
out
lahf
sbb
pop
lret
inc
das
in
es
clc
ja
out
data16
inc
cli
outsl
mov
jmp
ret
test
and
jns
and
test
add
iret
cmovl
outsl
pop
xor
push
jp
pop
rorb
add
dec
jge
sahf
subb
cmpsb
sbb
pop
xor
lods
imull
pop
lea
faddl
mov
aas
outsb
mov
sbb
cld
and
inc
mov
lock
iret
push
aad
pop
mov
jnp
rep
push
scas
movsl
std
mov
mov
ss
mov
cltd
push
repnz
iret
or
sbb
push
das
scas
mov
cmp
cwtl
inc
mov
loope
insl
cmp
je
or
cs
pop
clc
es
xchg
dec
jle
inc
outsb
jne
and
jecxz
mov
xchg
das
push
pop
fildll
add
xchg
mov
test
cmp
mov
adcb
push
or
jg,pt
aam
xchg
ja
xchg
mov
outsb
aad
add
pushf
sub
in
sbb
adc
add
lahf
push
xorb
test
andb
lcall
rcrl
es
xchg
sbbb
mov
movsb
cmpb
add
pop
push
cmpb
incl
sub
inc
call
dec
in
in
xchg
jg
inc
scas
push
mov
push
lret
orb
adc
loopne
cmp
fs
dec
subb
cmp
inc
push
test
gs
and
xor
mov
mov
subb
inc
xor
or
push
fidivrs
mov
out
jbe
adc
insl
jl
xor
push
mov
scas
adcl
sbb
add
push
orb
add
orb
add
sar
push
jg
xchg
pop
xor
inc
push
movq
add
pop
xchg
cmpsb
push
imul
out
rolb
repnz
popa
loopne
sub
and
aas
and
add
es
popl
scas
push
mov
clc
add
cmpb
pop
or
int3
out
pusha
jo
add
in
lock
xor
xorb
movsb
aam
rol
mov
sbbb
adc
add
incl
jle
add
adc
adc
push
andb
pop
mov
mov
mov
insb
mov
pop
scas
mov
call
mov
cld
inc
test
sbb
dec
incl
movsl
es
add
mov
push
or
and
rolb
mov
repz
loopne
lock
jg
movsl
subb
push
sbb
or
dec
or
orb
sbb
cmpb
push
lods
dec
mov
sbb
xchg
into
subb
mov
inc
pop
push
sar
pop
mov
xchg
mov
rolb
lock
sub
outsb
push
xchg
lahf
xor
scas
cmpb
loopne
fildl
xor
imul
or
lock
lret
sbb
pop
fisubrs
push
ret
rclb
orb
ds
lea
mov
sbb
or
test
push
das
xchg
inc
or
jne
and
out
lock
es
add
add
aam
pop
subb
lret
popf
jg
mov
loop
fs
movsl
xor
mov
nop
lahf
or
xchg
test
or
daa
adc
pop
pop
dec
adc
pop
lahf
mov
out
cmp
xchg
in
push
fildl
mov
dec
sbb
pop
aas
addb
jg
sbb
dec
push
test
hlt
in
adc
orb
push
adc
cmp
subb
or
subb
test
dec
pusha
stc
ds
in
push
adc
out
sub
sub
lret
pushf
outsb
mov
xchg
das
ja
aas
and
js
pop
xorb
adc
subb
lret
xchg
arpl
sbb
mov
pop
and
or
repnz
repnz
cmp
aam
push
out
loope
adc
stc
lcall
adc
dec
loopne
dec
cs
jo
or
scas
mov
xor
das
sbbb
add
push
js
aas
ret
push
adc
cmp
or
decl
sbb
or
test
pop
out
aam
sub
sub
test
jo
dec
dec
dec
loopne
andb
jno
lcall
add
cmpb
test
sbb
out
aas
pop
mov
lcall
xchg
in
orl
dec
pusha
jns
int
and
subb
dec
push
adc
ret
lahf
orb
ror
xchg
inc
pusha
repnz
inc
orb
or
dec
cmpb
sbb
push
inc
mov
sbbl
mov
test
int3
sbbl
add
loop
outsl
or
or
aad
cmp
xchg
sbb
in
test
xor
aas
mov
sub
lods
daa
sahf
dec
dec
and
incl
repnz
mov
cmpsb
dec
adc
add
push
subb
test
das
inc
inc
dec
subb
loope
aam
and
or
pop
xchg
sbb
push
lret
mov
aas
mov
movsl
xor
movsl
orb
add
or
repnz
fldl
or
incl
cli
fistps
mov
adc
or
or
xorb
fldenv
push
dec
loopne
cmovg
leave
xchg
shlb
mov
jmp
lret
cmp
into
insl
shl
push
iret
jb
mov
push
sbb
add
sbbb
push
xchg
lcall
lahf
mov
mov
lahf
inc
mov
js
add
sub
push
adc
or
lods
das
test
jl
sbbb
out
andl
aam
scas
lahf
xor
add
mov
and
push
adc
jg
jge
out
aam
xchg
scas
cmpb
ss
cwtl
xlat
aas
inc
jo
mov
subb
pop
pop
dec
test
sub
ficompl
mov
iret
sbbb
shlb
inc
dec
pusha
stc
ds
dec
sub
imul
jo
orb
inc
sti
push
outsl
imull
or
mov
subb
pop
aas
adc
xchg
das
push
repnz
mov
scas
mov
xchg
outsb
mov
sbb
insl
mov
movsl
orb
mov
test
dec
loopne
or
dec
cmpb
dec
cmpsl
nop
mov
cwtl
add
cmpb
push
mov
add
test
outsl
xchg
cmpb
add
jo
sub
aaa
movsb
cmc
or
rolb
test
into
rorl
adc
loop
add
test
pop
sub
and
push
das
das
inc
inc
dec
sbb
imul
add
orb
add
cmp
cmp
or
test
outsl
add
aam
sbbb
iret
mov
scas
add
in
aam
cmpb
mov
cmp
or
push
ds
cli
sbb
sarl
mov
sbb
enter
fistps
push
push
adc
dec
insb
pop
jp
das
push
scas
add
dec
inc
xchg
and
pushf
aam
scas
aam
iret
adcb
push
adc
in
cmpb
out
jl
jbe
mov
cmpsb
rolb
jmp
lcall
and
add
add
in
inc
push
jb,pn
xchg
dec
dec
loopne
stc
popl
into
push
imul
subl
pop
bound
mov
xor
subb
outsl
repnz
push
in
push
andb
and
cmpb
lock
mov
mov
das
fiaddl
nop
movsl
or
das
ss
dec
loopne
sahf
adcb
mov
iret
inc
movsl
ss
lret
mov
push
adc
cmp
pop
push
adc
adcb
stc
out
adc
xlat
repz
add
loop
lcall
sbb
pop
out
inc
test
or
aas
add
inc
adc
clc
test
out
frstor
adc
mov
repnz
pop
movsb
cmpb
loopne
cld
movsb
xor
adc
or
add
xchg
lahf
dec
jge
fsubrs
scas
iret
jns
jl
aam
into
sbbl
push
adc
cmp
pusha
subb
hlt
push
dec
ror
and
push
adc
js
adc
push
subb
or
testl
sbb
xchg
add
jno
filds
filds
or
iret
addl
jg
or
leave
inc
leave
push
dec
test
andb
xor
or
icebp
das
gs
test
lods
lahf
addb
decb
pop
mov
pop
movsb
aam
outsb
sub
inc
push
sbbb
lcall
into
or
pop
or
sub
test
test
pop
orb
loopne
cmp
test
dec
aas
lcall
cmp
push
mov
addb
test
orb
lcall
jo
mov
mov
inc
packssdw
lret
orb
sbb
push
pusha
testb
jae
inc
xlat
mov
sbbb
das
stc
popa
ret
and
or
std
or
lcall
ljmp
mov
call
repnz
jne
lcall
aaa
mov
push
dec
lahf
fnstcw
lock
sti
repnz
outsb
imul
jle
cld
xchg
mov
adc
cmp
jo
inc
xchg
ja
pop
sti
stos
add
es
pop
adc
sub
jb
pop
mov
lds
jns
in
sub
cmp
inc
mov
cld
dec
pop
outsb
out
cwtl
lods
pop
pop
mov
cmp
or
pop
insl
roll
into
add
sub
shrb
cmpsl
ljmp
cmc
push
mov
and
repz
leave
mov
sub
sub
adc
adc
sub
jo
xchg
xchg
add
sbb
cld
and
cld
sbb
aaa
test
mov
mov
add
add
repz
mov
cmp
out
mov
stc
int3
das
push
dec
filds
pop
jg
pusha
les
mov
add
cs
sbb
int3
and
mov
add
sub
cld
mov
dec
dec
sbb
dec
sbb
imul
dec
pop
cmp
add
sahf
outsl
adcl
fildl
repnz
and
push
lea
adc
pop
adcb
mov
xchg
iret
out
mov
sbb
mov
popf
insb
faddl
lahf
enter
scas
dec
sarl
xor
mov
jns
or
stc
cld
push
push
ficoms
jmp
jecxz
xchg
sub
push
repnz
pop
mov
mov
cmc
repnz
or
mov
and
shll
scas
fs
aam
stc
add
imul
push
int
cmpsb
ds
pop
dec
pop
aam
inc
adc
sti
aam
int3
pop
mov
faddl
pop
cmp
test
xor
pop
jg
or
lods
jge
jno
push
jl
dec
and
push
psubusw
mov
adc
adc
push
scas
jg
push
cmpsb
mov
sbbl
out
xor
in
mov
shlb
in
rol
andl
femms
xchg
cld
add
in
dec
mov
addr16
jbe
lahf
cmp
incb
add
aad
shlb
in
inc
dec
jle
jle
add
scas
movsl
out
inc
bswap
mov
or
cli
ljmp
scas
sbbb
in
pop
jle
cmp
test
xchg
mov
mov
push
dec
sub
and
leave
jae
mov
ds
scas
nop
out
inc
and
mov
adc
mov
iret
enter
push
mov
push
mov
test
and
inc
sub
lret
sub
sbb
pushf
jl
xchg
out
das
and
test
sub
mov
xor
adc
lret
xor
les
lock
cmpsl
loope
push
movb
xchg
xchg
pop
jns
ss
xor
push
mov
add
xchg
xchg
push
push
fs
add
subb
mov
test
xchg
push
pop
bound
ja
stc
adc
pop
in
pop
cmc
mov
jp
loop
sbb
movsl
icebp
sbb
fs
push
push
shll
fistps
insl
inc
imul
cmc
leave
js
mov
adc
cli
adc
test
jns
cld
or
cmpsl
or
cmp
insl
mov
jne
mov
lods
jbe
jbe
imul
fsubs
lret
loope
aas
sub
es
jmp
pop
sbb
push
fimull
pop
fcompl
push
add
movl
push
cmp
xor
push
fsts
xchg
adc
push
or
es
inc
nop
push
pop
psubsw
out
sub
ret
pop
ja
jno
iret
lahf
jg
out
cmp
mov
ficomps
in
xor
rcr
cmc
jne
loope
mov
lock
xchg
push
aam
or
xchg
aad
decb
int
and
pop
repz
cli
jae
cmp
lret
add
pop
mov
jecxz
push
xchg
push
jle
cmp
mov
fs
pop
jns
fldcw
mov
ljmp
orl
sub
inc
rcll
add
add
pusha
push
mov
push
adc
jns
test
or
cld
scas
mov
inc
stos
movb
jb
lods
repz
idiv
cmc
lods
jp
dec
outsl
pop
mov
clc
sbb
dec
stos
jne
aas
jg
out
mov
pop
int
and
repz
or
lret
iret
mov
cmp
scas
es
js
repz
add
call
jo
cld
stc
addr16
js
in
push
stos
add
mov
inc
movsb
jmp
mov
rol
aas
lock
mov
cmc
fcmovnb
dec
mov
inc
jg
imul
and
das
lahf
aas
fidivl
cmp
pop
scas
mov
sbb
loop
and
and
or
xchg
push
pop
mov
and
cmc
lret
pop
pop
jns
movsl
inc
fisttpll
cmp
insb
or
inc
push
cmp
mov
pop
sti
mov
fsubrl
fsubl
push
pop
jge
dec
and
jp
outsl
dec
filds
sub
fildll
adc
add
es
lret
in
xor
push
nop
pop
fimuls
mov
je
jae
movb
pusha
loopne
sbbb
jmp
in
iret
das
outsb
pop
rcrl
mov
stc
jb
jle
out
cmp
pop
leave
loopne
jle
mov
stc
repz
pop
mov
adc
pop
aad
sub
lret
sub
mov
mov
sub
sub
rcrl
sarb
pop
clc
data16
arpl
xchg
mov
sahf
or
loopne
in
data16
or
aaa
sbb
ficoms
push
stc
mov
dec
int
xchg
sbb
cs
jle
cld
nop
fcomip
sti
fiadds
rcrb
push
out
mov
sbbb
adc
pop
in
orb
enter
jg
imul
dec
or
dec
lret
mov
out
xchg
or
and
nop
jmp
out
lahf
incb
pop
add
pop
xchg
or
lods
ds
stc
data16
fs
and
insb
adcb
filds
fsts
jl
push
jecxz
leave
repz
lods
adc
loopne,pt
jnp
std
ja
rol
daa
loop
lock
into
les
or
and
rcll
add
jecxz
add
outsb
mov
dec
int
pop
scas
xchg
push
pop
loopne
out
lret
sub
mov
dec
gs
cld
push
clc
repnz
inc
mov
test
xor
jg
pop
xchg
jne
ss
mov
mov
adc
xchg
in
and
subl
loopne
add
insb
popa
jg
xchg
je
adc
pusha
and
add
sbb
sub
je
je
sub
jne
pop
dec
fsubs
das
iret
pop
jg
or
add
outsb
jle
sbbb
mov
push
shll
stos
adcb
add
and
mov
jne
loopne
sbbb
inc
lods
xor
or
push
sahf
jmp
add
adc
scas
orb
xchg
add
cmp
outsl
xor
aas
xacquire
sbb
rolb
sbb
pop
aam
pop
test
add
xchg
lea
or
cmp
mov
movd
and
into
call
pop
jle
mov
add
inc
out
jo
sldt
add
addb
into
xor
icebp
mov
jno
int
mov
das
or
xchg
xchg
lods
into
into
add
jl
cld
stc
insl
test
mov
sarb
das
ja
xlat
adc
cmpsb
dec
ds
incb
xor
jns
test
cltd
pop
add
stc
add
and
scas
and
repnz
and
and
or
dec
lret
sbb
mov
mov
loop
test
lcall
filds
repnz
sbb
cltd
sbb
jns
cmp
test
ds
lds
inc
loop
jne
add
rcrb
pop
movsl
mov
xor
fsts
xor
cld
inc
push
imul
sbb
jo
sbb
in
rcl
jg
mov
stc
mov
pop
imul
stc
cld
movb
and
sbb
insb
mov
ds
jo
std
iret
test
pusha
unpckhps
data16
outsl
pop
not
or
stos
jp
adc
in
out
jg
mov
mov
mov
loope
rcrb
ror
jns
lret
mov
push
dec
adcb
add
iret
das
fs
cmpsb
test
cmp
dec
stos
mov
es
iret
xchg
std
jbe
in
imul
dec
adc
cwtl
jp
mov
pop
add
and
and
pop
loopne
push
es
scas
ret
orb
hlt
sti
mov
lahf
cmp
cld
ljmp
sub
sub
scas
gs
in
lahf
shll
sbb
cmp
decl
scas
cmp
in
js
mov
fimuls
or
idivb
push
xor
push
ja
cmp
outsl
fcmovbe
jmp
lret
xchg
xchg
jo
jp
inc
dec
cmp
out
movsbl
add
jb
xchg
ss
dec
int
and
cld
stc
or
cli
jo
imul
xchg
cmc
lret
and
inc
clc
jp
push
stc
add
sahf
lret
pop
add
and
push
push
repnz
adc
in
movsb
lahf
dec
dec
loopne
cld
sahf
xlat
pop
out
xchg
sbb
xchg
out
fidivs
adc
adc
add
jnp
push
fisubrl
mov
mov
mov
in
aad
repz
aam
mov
xchg
dec
movsb
leave
add
cld
lock
or
icebp
push
and
stc
test
jl
mov
mov
inc
clc
push
xchg
imul
pop
das
iret
dec
adc
shrl
call
xchg
jbe
leave
sahf
sarb
repz
dec
jg
mov
pop
pop
add
dec
iret
push
cmp
dec
out
es
mov
in
adc
iret
lahf
aas
jg
xor
cld
inc
sub
in
adc
gs
enter
shrb
push
dec
rcr
and
pop
seta
popa
adc
jo
xchg
decb
mov
dec
xor
pop
dec
ret
subb
dec
andb
jg
mov
mov
dec
pop
adc
jo
inc
out
xchg
fidivrs
popf
xor
jl
inc
arpl
adc
stc
ret
inc
enter
rcll
adc
inc
iret
fistps
aas
aas
adc
adc
lods
sbb
and
hlt
enter
or
daa
aas
add
pop
ret
adc
xchg
lahf
and
cld
cld
dec
nop
adc
lods
jb
sbb
mov
test
mov
das
in
cmp
cmp
fimuls
ret
ret
mov
adc
mov
jno
adc
add
lcall
int3
adc
das
int3
adc
mov
pop
mov
in
xor
enter
les
lret
xlat
nop
pop
adc
sub
inc
or
or
outsl
or
data16
push
lcall
pushf
mov
pop
mov
outsl
adc
jb
pop
xchg
adc
fsubrs
push
faddp
adc
les
push
jge
in
int3
adc
outsl
jno
pop
xorl
mov
sub
jl
hlt
jl
lret
outsb
ret
shrd
lahf
push
xor
outsl
adc
stc
repz
mov
mov
xor
scas
mov
inc
nop
mov
push
pop
mov
fcoms
mov
mov
jecxz
loopne
loope
fcoms
lcall
inc
sub
push
jge
push
sub
loop
pop
scas
pop
pop
cmp
mov
inc
rcrl
outsl
inc
xchg
sbb
push
sub
push
pop
add
in
jecxz
pop
clc
or
lock
ret
inc
sahf
pop
ficomps
call
scas
pop
out
lcall
xchg
lock
pop
lahf
fcmovnbe
pop
cs
pop
jns
sbb
ret
out
pushf
dec
push
test
sbb
cmpsl
in
and
cmp
push
mov
sbb
xchg
andl
and
add
icebp
dec
and
cmp
and
cmp
daa
dec
and
mov
les
mov
and
push
lahf
and
movsb
pop
repnz
lret
iret
push
jge
inc
xor
jae
pop
pop
lcall
pop
je
xor
les
sbb
lock
push
lea
xchg
add
das
nop
aas
nop
push
jb
pop
sbb
je
dec
adc
inc
out
xor
arpl
pop
cld
stc
ffree
gs
xchg
cmp
std
push
ljmp
xchg
cli
imul
repz
into
mov
adc
icebp
inc
adc
mov
mov
or
scas
mov
inc
movsl
ljmp
jo
jnp
dec
in
mov
jle
jns
and
in
sbb
insb
lahf
aas
jg
sbb
fadd
daa
negl
mov
outsl
jmp
mov
les
ljmp
std
pop
jecxz
dec
int
int3
push
jns
xchg
ja
pop
pop
cli
sbb
loopne
insb
lret
jle
jl
bound
add
lahf
ja
out
lahf
aas
pop
jmp
dec
insb
sub
pop
les
stc
repz
test
dec
out
add
andl
daa
lret
mov
push
pop
out
dec
into
ret
xchg
icebp
sti
out
ja
lahf
outsb
idivl
xor
mov
pop
add
mov
sub
pop
inc
inc
test
adc
aas
aas
jle
pop
ret
push
ret
and
test
aam
xchg
sub
jns
cmp
outsl
subb
add
push
lods
test
jg
xchg
fwait
sbb
lods
jae
push
mov
mov
jg
inc
xchg
pop
push
push
cs
sub
jle
and
cltd
mov
mov
adc
push
adc
call
sbb
push
or
adc
stc
and
push
mov
sbb
adc
jl
mov
xchg
adcb
sbbb
adc
adc
sbbb
adc
das
call
int
out
testb
outsb
mov
loop
xchg
cli
bound
mov
mov
in
push
pusha
jle
lret
adc
test
fildll
fistps
repz
or
cmpsb
dec
movsl
jle
cld
stc
sbb
repnz
repnz
cmp
fwait
in
pop
mov
inc
sbb
das
scas
mov
inc
dec
cmc
adc
mov
pop
inc
out
sar
lret
arpl
pop
jg
cmp
adc
cmp
jmp
rcr
or
leave
repz
cs
mov
pusha
repz
cs
popf
and
and
push
adc
pop
dec
repnz
scas
xchg
das
loope
iret
pop
pop
ret
ljmp
mov
ret
dec
jge
ffreep
pop
pop
and
icebp
pusha
popa
mov
mov
movsl
ds
lret
inc
test
dec
rorb
sbb
jns
xchg
sub
sbb
mov
mov
outsl
sub
insb
repz
out
nop
cs
add
scas
mov
leave
movsl
and
xor
mov
orb
cs
movups
dec
in
out
movd
stos
jno
or
jno
les
add
adc
scas
sub
mov
mov
or
jo
cs
pop
and
sub
xchg
loopne
jo
cmp
mov
and
xchg
pop
fidivrl
or
sarl
lahf
mov
pushf
cld
insl
faddp
and
add
jp
lods
mov
shlb
je
jno
jle
xchg
pop
jl
outsb
lcall
cwtl
add
stc
repz
jnp
test
mov
inc
adc
repz
lahf
out
sub
loope
stc
inc
int
call
arpl
stc
xchg
xor
lock
inc
add
jge
adc
es
sarb
cmpsb
add
test
adc
sahf
fadds
sub
adc
jo
int
mov
nop
into
lret
dec
stc
repz
test
in
push
les
or
cld
pavgw
cmpsl
xor
and
or
sbb
dec
stc
push
jns
pop
jb
jb
dec
add
jns
shl
out
xchg
push
rorl
lods
das
enter
cld
stc
adc
jne
lods
sbb
push
mov
lods
verr
es
jg
rcrl
dec
fcoms
decb
sub
add
jbe
lahf
aas
add
fistpll
dec
popf
inc
jmp
xchg
dec
adc
lret
movsb
add
gs
arpl
clc
mov
mov
jle
lcall
ret
cmp
push
mov
cmp
mov
dec
push
repnz
mov
and
mov
dec
add
rclb
aas
and
js
inc
mov
mov
and
test
lea
les
test
cmp
daa
or
push
or
icebp
pop
mov
push
or
and
cmc
adc
imul
int3
adc
sub
movsl
inc
or
pop
adc
pop
fs
les
add
movsb
hlt
add
jmp
js
push
ja
rclb
icebp
pop
push
adc
sbb
and
mov
sub
mov
inc
icebp
mov
shlb
add
mov
adc
mov
pop
add
mov
movsb
shrl
sub
xchg
insl
and
mov
ret
ret
or
pop
adc
mov
iret
push
or
add
pop
xor
insb
ret
xor
orb
mov
roll
adc
in
push
xchg
mov
jne
rorb
shlb
inc
xchg
js
fwait
js
jecxz
inc
sbb
pop
jl
rcll
pop
cmp
pop
dec
cli
push
movsl
mov
leave
enter
popf
sub
pop
addl
xor
add
adc
orb
push
mov
adcb
popa
sbb
sbb
sbb
es
dec
sbb
push
xchg
rol
xor
int3
pop
dec
and
add
call
lea
add
mov
gs
mov
js
dec
cmpsb
js
jnp
adc
sarl
adc
push
test
mov
mov
and
pop
jno
and
or
shrl
xor
je
pusha
add
leave
test
xor
mov
hlt
xlat
ret
xchg
clc
mov
or
test
push
sub
push
hlt
or
jno
sub
mov
pop
xchg
loope
nop
pause
sbb
pop
xchg
cltd
popa
call
cli
nop
mov
jo
or
les
pop
push
adc
inc
add
xor
and
ret
dec
push
sbb
xchg
xorb
or
ss
and
lds
lea
adc
inc
jecxz
xor
or
call
addr16
ljmp
ljmp
push
out
dec
push
xchg
sbb
gs
jns
pop
jns
aam
pop
scas
into
xchg
movsl
and
or
aad
cltd
testb
data16
into
mov
or
out
sub
dec
or
mov
popf
inc
adcl
fstps
xchg
cmp
adc
subl
sbb
lea
cmp
jge
mov
jmp
push
jb
add
add
dec
inc
es
jbe
stos
xor
hlt
mov
inc
push
fdivrp
sub
aaa
jbe
dec
cmp
xorl
add
scas
sar
es
js
gs
sub
inc
inc
addr16
sahf
push
movsl
sub
inc
inc
jecxz
inc
inc
add
pop
ss
aas
mov
sub
fldenv
cmp
adc
es
lds
pop
sbb
and
shll
popf
mov
addr16
adc
push
out
xchg
xchg
add
push
aad
icebp
sbb
dec
jecxz
cmp
movsb
or
xchg
cwtl
in
xchg
adc
sbb
data16
add
dec
push
mov
das
ret
push
pop
jmp
enter
pop
in
pop
test
inc
dec
pop
add
mov
push
lret
call
ds
insl
inc
cltd
xor
scas
sub
test
xchg
notb
fcomps
add
inc
push
sub
lods
push
cmp
xchg
pushw
sbb
add
or
xchg
and
inc
xchg
dec
fcmovnb
and
cmp
subl
call
add
das
mov
and
lock
daa
cmp
adc
repnz
add
push
les
aaa
adc
cmp
movsb
mov
clc
repz
in
rolb
mov
test
add
cli
inc
sbb
inc
push
daa
dec
sarb
mov
pop
or
ja
enter
cld
add
es
js
popl
push
scas
sub
xor
dec
inc
jp
pop
imul
sarb
shrb
loop
lret
ss
sbb
mov
pusha
stc
add
mov
push
sbb
std
or
push
or
jecxz
lds
and
clc
cmpl
negl
xor
adc
dec
or
rol
adc
lds
mov
enter
jo
inc
nop
sub
addr16
xchg
dec
pop
push
pop
repnz
mov
sbb
daa
adc
and
mov
fnsave
jno
xchg
out
pusha
pop
in
and
rorb
negb
shr
inc
cmpl
mov
pop
sbb
aad
je
mov
xor
fisubrs
inc
lcall
and
xchg
stc
enter
popa
jne
mov
dec
or
cmp
js
stos
add
lock
int3
xchg
loopne
orb
int
sahf
or
add
push
jp
into
lret
adc
nop
movsb
test
cmp
addl
jno
movsl
clc
jne
inc
mov
test
unpcklps
inc
jnp
int
sarb
adc
int3
or
xorb
rclb
push
adc
adc
nop
inc
push
or
push
and
or
inc
push
test
ficomps
nop
sub
push
xchg
movsl
and
cmp
dec
ret
push
inc
and
xchg
rcll
mov
lea
and
add
jl
lods
lock
sahf
and
in
jbe
or
loope
pop
adc
sbb
mov
mov
push
sub
enter
lcall
xlat
mov
push
cli
out
daa
insb
sub
xor
bound
and
arpl
cli
cs
push
lret
mov
add
xchg
sahf
cltd
push
popa
js
pop
sbb
push
cmp
bound
shr
stos
mov
in
loopne
jno
or
sbb
testb
push
test
les
out
pop
xor
push
cmc
ds
mov
out
add
rcl
lea
ss
push
xor
ss
shll
dec
shrb
mov
mov
or
jp
sbb
out
rolb
movsb
in
adc
mov
mov
seto
xchg
mov
adc
dec
xchg
add
xchg
sahf
in
cmp
fs
dec
lahf
mov
adc
or
es
ja
or
cwtl
sarb
or
or
and
mov
pop
xchg
fsts
mov
xor
sbb
xor
pop
xchg
sub
or
sbb
pop
or
pop
cmova
push
inc
cltd
mov
sbbb
inc
test
sbb
gs
sbb
dec
add
mov
pop
and
or
and
icebp
add
mov
add
push
xor
aam
cld
or
inc
mov
or
sub
out
mov
dec
or
adc
mov
sub
push
rolb
add
add
imul
push
inc
sbb
pop
lods
pop
inc
lret
pop
loope
mov
push
xchg
xor
lea
pop
and
push
inc
xor
daa
mov
movsl
adc
and
in
sbb
mov
mov
inc
adc
add
int3
fmull
add
xor
jne
push
sbb
dec
arpl
sbb
dec
push
add
popf
pusha
lea
inc
adc
adc
and
dec
sbb
adc
sahf
lret
addl
test
adc
test
sub
xchg
xchg
sahf
add
fwait
out
pop
xor
sbb
scas
add
cmpsb
push
jnp
sbb
nop
fadds
add
and
adc
sub
xchg
fisttpl
cmc
dec
fisubl
ret
shll
sbb
cmp
in
push
lock
or
push
ss
call
xor
mov
xor
loope
sbb
xor
mov
icebp
dec
shlb
sub
push
ss
test
jo
js
jns
adc
nop
adc
mov
mov
jae
repnz
or
ret
mov
add
div
lret
ss
push
adc
or
push
push
pop
jb
push
cltd
pop
add
push
lea
adc
enter
fstps
xlat
adc
hlt
ss
inc
xchg
lock
lahf
sub
adc
mov
or
or
or
adc
dec
mov
mov
add
sub
adc
push
jmp
jae
pop
mov
adc
pop
and
pop
rclb
mov
dec
and
pop
pop
sbb
mov
jle
mov
shlb
psraw
ret
test
les
pop
push
xchg
nop
jo
dec
stc
sbb
loope
mov
test
nop
pop
mov
and
mov
outsb
adc
push
and
pop
and
xchg
or
mov
mov
or
rcl
dec
sub
mov
rorb
mov
mov
push
sub
adc
lea
or
ljmp
pop
push
test
aam
inc
adc
shlb
fcmovnb
add
and
push
and
outsb
loopne
adc
lock
ljmp
sbb
icebp
pop
sarb
xchg
mov
pop
mov
add
push
mov
and
pop
mov
add
ror
and
or
ret
inc
stos
cld
cmpsl
add
mov
xchg
loope
or
in
adc
call
push
xchg
adc
sti
cmp
pop
xchg
loopne
je
inc
and
lahf
and
loopne
pusha
jnp
fwait
les
movl
jp
test
lret
add
mov
loopne
ficoml
push
dec
out
clc
add
sarb
cltd
shlb
std
add
ret
pop
ljmp
rorb
push
movsb
pop
adc
in
sbb
shr
push
push
cmpsl
int3
scas
shrb
xchg
xchg
adc
and
add
ljmp
push
sbb
pusha
add
push
cmp
adc
adc
xor
sbb
mov
int
mov
call
dec
imul
xchg
inc
and
ret
dec
or
or
cmp
adc
shl
and
jecxz
test
pop
out
jno
push
gs
popa
dec
movb
push
out
mov
scas
jmp
xchg
ficomps
mov
in
loope
dec
ljmp
adc
or
pop
add
aad
movsb
repz
popa
js
xchg
cmp
mov
sbb
mov
idivb
dec
adc
xor
dec
or
ret
push
mov
mov
js
cs
push
pop
scas
hlt
dec
sarb
out
loopne
lret
mov
ja
clc
push
inc
test
mov
icebp
out
add
jmp
xor
xor
mov
in
pop
lock
adc
mov
xor
jno
out
adc
fdivs
rolb
or
nop
add
pop
and
dec
stos
in
shll
outsb
out
icebp
sbb
or
mov
or
test
push
fmul
xchg
aad
or
xor
add
inc
ss
leave
popa
nop
bound
aaa
dec
movsb
daa
pop
cmp
xchg
scas
shll
push
push
add
stc
jno
hlt
mov
adc
jmp
bound
shrb
nop
mov
push
mov
and
xchg
xchg
xor
ljmp
and
fstps
and
pop
sbb
pop
sub
sbb
pop
sbb
les
mov
jecxz
insl
pop
adc
sbbb
cmp
clc
add
inc
rorb
mov
inc
shlb
mov
lea
xchg
stc
sbb
add
add
or
push
cmpsb
fildl
mov
add
cmp
ret
and
add
xchg
imul
addb
mov
sbbb
push
inc
or
lcall
or
leave
addr16
lds
jns
lock
sub
daa
js
mov
aad
icebp
cli
rorb
pop
fldcw
pop
pop
xor
in
imul
push
push
test
sub
push
mov
cmp
inc
inc
jne
xor
sub
dec
ljmp
xchg
push
pusha
cmp
and
or
pop
jp
mov
inc
mov
dec
mov
jnp
clc
add
sub
add
add
out
push
sub
pushf
in
jecxz
adc
rcl
push
repnz
cmpsl
xchg
in
rorl
inc
dec
xchg
roll
rol
ret
fcomps
pop
fdivr
pop
adc
sahf
rorb
dec
mov
icebp
pop
or
dec
stos
test
sbb
adc
dec
push
shl
add
sbb
pushf
push
clc
dec
xchg
cwtl
push
movsb
xor
stos
fcompl
push
pop
dec
dec
nop
stc
loopne
pop
push
sbb
mov
or
rolb
sbb
mov
ret
cmp
pop
mov
enter
or
jp
and
and
pop
sahf
cmp
lods
loopne
loop
fmulp
dec
inc
rorl
xchg
arpl
pop
adc
push
pop
adc
inc
outsb
cmpsb
mov
cltd
movsb
or
or
inc
jno
pop
sub
inc
xchg
sarl
mov
lret
jo
popa
inc
scas
mov
inc
lock
adc
sbb
popa
jo
loop
cmp
sbb
mov
popf
shl
repz
adcl
jl
in
loope
pop
in
push
inc
cs
xchg
mov
mov
rcl
pop
mov
sub
push
mov
inc
cmp
xchg
test
dec
loopne
lret
adc
fwait
cmp
aad
mov
fdivr
sbb
push
mov
inc
mov
lahf
mov
mov
jl
or
ret
jns
pop
cmp
push
jge
pop
or
stc
jle
xchg
jmp
aas
es
inc
das
add
or
pop
mov
xchg
pop
out
pop
out
sbb
daa
sub
adc
aaa
fs
add
pop
mov
lret
dec
add
mov
stc
push
xor
mov
inc
shl
lret
push
pop
xor
mov
nop
sbb
xor
aad
mov
fwait
jae
add
ror
rolb
inc
fsubrs
and
stos
push
jo
loop
mov
shlb
shlb
clc
and
push
roll
es
jecxz
in
xchg
adc
or
or
xor
and
push
icebp
inc
mov
jne
stos
or
aam
mov
or
cli
pop
in
xor
fcomi
repnz
sbb
mov
lcall
xchg
dec
sbb
rorb
test
int3
jb
xchg
inc
nop
fcompl
cld
rcll
dec
xchg
jno
sub
cmp
lret
dec
mov
pop
dec
insl
enter
gs
lds
add
fdivr
add
or
mov
hlt
adc
jecxz
dec
je
pop
ja
and
ret
icebp
xchg
mov
divl
cmp
inc
addr16
mov
rorb
pop
pushf
pop
sub
mov
loop
lds
inc
and
push
in
dec
cmp
xor
xor
jp
or
push
adcl
dec
mov
pop
mov
xchg
into
fcmovnb
lret
or
shl
mov
js
and
es
add
adc
popf
xorl
cmp
and
or
hlt
mov
mov
xchg
mov
mov
or
xor
sub
jge
xor
and
enter
jmp
lea
cltd
int3
data16
cmp
in
filds
repnz
xchg
inc
add
or
pop
mov
dec
mov
and
aad
cmp
xchg
jecxz
mov
loope
adc
jge
xchg
jp
xchg
mov
ss
fsubs
scas
cmpsb
sbb
rcrb
or
shlb
sub
lds
jecxz
insb
push
add
fbstp
dec
movq
and
sbb
xchg
push
fildll
mov
adc
jl
pop
inc
mov
sbb
and
jo
or
sbb
lcall
sbb
jnp
lea
push
aam
inc
push
push
mov
fnstsw
sbb
push
hlt
push
inc
outsb
aas
test
test
push
ss
sbb
mov
xor
out
jmp
fwait
les
stos
jne
jmp
jmp
or
ret
push
cmp
scas
add
addb
push
movsl
cmp
testb
push
daa
pop
jl
out
inc
pop
add
shr
dec
pop
ret
ja
adc
add
xchg
push
cmp
out
pop
sbb
pop
adc
aas
jne
in
ss
push
pop
cmp
movsb
pop
push
mov
inc
test
dec
or
lock
stc
or
pusha
mov
into
cmp
repnz
dec
rorb
xchg
and
sbb
or
scas
ret
adc
leave
mov
mov
and
push
mull
mov
push
mov
je
adcb
xchg
push
mov
mov
xlat
add
dec
nop
loop
into
mov
popa
ret
lea
movl
xchg
shlb
jb
jp
or
cmpsb
ljmpw
pusha
hlt
add
pop
fimull
enter
pop
add
test
popa
idivl
rclb
ret
cli
adc
and
aad
push
imul
or
sbb
inc
xor
stos
jle
inc
mov
data16
dec
jne
lahf
xor
hlt
cmp
fisubs
loopne
push
jne
and
jo
pop
aam
adcl
les
dec
sbb
mov
int3
push
es
xor
loopne
rclb
or
sarb
shlb
xor
adc
movsb
mov
push
push
mov
fsts
add
insb
adc
xchg
addb
fadds
jmp
push
add
movsb
rclb
aad
nop
push
test
mov
dec
xor
add
popl
jecxz
mov
inc
cmp
add
jecxz
push
movsl
mov
pop
mov
xor
jo
mov
push
lods
shlb
mov
add
and
out
push
scas
push
sub
test
out
push
add
loopne
inc
dec
mov
sub
fs
cmpsl
rcrb
or
mov
jecxz
jecxz
loopne
xor
fs
fnsave
and
xor
daa
push
push
and
shlb
pop
fwait
mov
gs
xorb
and
mov
adc
mov
sbb
aam
cmp
and
push
mov
in
es
cmp
adc
dec
lods
inc
mov
adc
jo
sub
xchg
imulb
xchg
dec
cltd
sbb
notb
mov
call
ljmp
push
and
pop
adc
aad
inc
ljmp
fimuls
or
repnz
pop
pop
xchg
mov
inc
pop
lret
add
test
imul
enter
loope
xor
push
icebp
out
cmp
mov
sbb
cltd
xor
popa
or
ja
scas
push
push
xchg
icebp
push
adc
or
jl
dec
dec
ss
mov
mov
imul
fs
jbe
push
std
orb
out
jp
and
or
cmovae
loope
and
and
lock
shr
adc
xor
sbb
adc
cmp
mov
push
mov
xorl
mov
scas
cmp
add
fmuls
aad
or
sbbl
out
adc
jo
pushf
popa
mov
or
daa
out
adc
lds
dec
lods
add
sbbb
lea
push
add
xchg
lea
sahf
jae
aam
pop
cwtl
mov
pushf
sbb
sarb
pop
xchg
inc
mov
or
mov
shll
dec
dec
daa
push
fwait
sbb
test
dec
insb
adc
nop
sub
mov
mov
xchg
mov
xchg
mov
loopne
push
xor
push
fldt
pop
fimuls
add
push
call
pop
in
or
add
test
push
add
push
add
push
pusha
inc
add
cmp
call
and
xchg
mov
pushf
dec
mov
push
adc
movsb
add
sub
add
pop
fadds
mov
out
mov
lea
sbb
and
imulb
and
pop
cmp
push
sub
sbb
inc
mov
iret
push
xorl
loop
mov
xlat
lret
mov
rcrb
scas
sbb
cmp
rol
dec
mov
push
pop
pop
mov
shrl
mov
jecxz
pop
add
loop
xchg
push
call
jmp
xchg
push
and
movsl
shl
test
mov
xor
shrb
adcb
in
lret
popa
sbb
mov
mov
addl
int3
or
xor
jb
xchg
push
loopne
mov
fildl
insl
ljmp
insl
loop
push
mov
cmp
popa
adc
sarl
mov
push
sbb
sbb
lea
or
pusha
sbb
icebp
gs
push
cwtl
enter
ds
psubq
inc
outsb
loopne
ds
add
popa
sahf
and
jecxz
pop
push
ret
lock
das
add
xchg
mov
movsl
adc
aas
cmpsb
movsl
xor
jmp
jo
add
mov
fs
dec
lahf
push
adc
cmp
mov
and
mov
clc
pop
cmp
pusha
xchg
nop
xorl
push
adc
or
mov
xor
mov
push
clc
mov
out
sbb
fdivrl
andb
xchg
pop
or
or
pop
inc
xlat
scas
xor
scas
push
stc
adc
lret
xchg
and
aad
lret
sbb
pop
daa
ret
enter
adc
mov
lret
cmp
mov
sbb
push
push
loopne
mov
add
adc
ss
push
subl
lods
push
jns
push
or
jno
xor
fsts
aaa
es
xchg
addb
cmc
mov
scas
aad
inc
popa
mov
sbb
mov
iret
xchg
add
jl
aas
cwtl
test
ret
mov
adc
xor
imul
adc
push
sbb
pop
rolb
push
push
ret
pop
and
repnz
fsubl
xchg
pop
push
jmp
cli
sub
sbb
mov
sbb
sub
sbb
jns
dec
ljmp
inc
jb
mov
mov
les
loope
outsl
sbb
mov
and
sbb
shll
lret
ret
outsl
lods
mov
xchg
enter
push
mov
pop
clc
add
mov
nop
test
subl
inc
ja
fs
testl
popa
iretw
pusha
sbb
testl
cli
leave
sub
dec
sub
mov
sbb
test
ds
popf
mov
scas
or
sbb
mov
add
inc
sub
or
mov
cltd
rcll
iret
and
or
push
dec
addb
push
or
insl
dec
or
ss
imul
lock
pop
test
push
loope
jbe
xorl
dec
mov
lret
xor
add
sub
test
adc
jne
add
fdivrl
repnz
sbb
adc
lock
inc
mov
rorb
add
jno
arpl
dec
nop
movl
out
mov
jp
jb
push
rcrl
mov
pop
into
push
add
mov
add
jns
mov
mov
into
loopne
mov
dec
adc
fs
nop
xor
cmp
xor
xchg
clc
sbb
xchg
mov
pushf
adc
add
pop
stc
insb
adc
dec
inc
inc
xor
add
push
enter
enter
mov
clc
push
js
adc
cmp
adc
xchg
xor
push
movl
sahf
push
test
mov
addl
pop
lret
mov
das
into
sbb
sbb
pusha
jne
dec
ret
bound
rcll
xchg
andb
or
mov
femms
jo
adc
mov
js
das
lods
cmpb
loope
sbb
jmp
push
loopne
daa
movb
test
dec
add
icebp
pop
inc
dec
pop
sub
add
pop
pop
xlat
inc
push
es
push
mov
jge
sbb
xabort
jns
xlat
dec
jnp
leave
test
cmp
sbb
push
cmpsl
push
or
push
stc
jmp
mov
xchg
dec
inc
xor
mov
mov
jbe
test
xchg
pusha
xor
addb
add
loopne
sub
jmp
insb
mov
test
lret
shll
popf
dec
jb
adc
or
mov
push
popl
shrb
daa
hlt
adc
cwtl
push
loop
rorl
insb
popa
sbb
add
or
add
mov
jae
xor
bound
adc
cmp
sub
fdivl
les
push
into
adcb
sub
shlb
adc
clc
or
push
mov
push
sbb
fs
dec
sbb
mov
js
sbb
push
pop
js
push
loope
imul
sbbb
fs
add
adc
sbb
sbb
inc
jb
pop
and
jecxz
push
dec
sahf
rorl
test
sbb
push
sbb
popf
pop
adcb
adc
or
xor
sub
call
or
je
sbb
fwait
imulb
movsl
sahf
negb
adc
loopne
push
dec
inc
dec
js
add
xchg
add
fdivp
fstpl
cwtl
cmp
cmp
adc
push
or
xchg
add
lods
mov
test
ljmp
dec
push
inc
ret
add
inc
sbb
pop
cmp
push
adc
xor
push
mov
add
sbb
lret
ret
mov
je
inc
inc
sbb
and
lock
lcall
jl
iret
andl
movsl
sarb
xchg
cmp
sub
adc
jne
ds
sarb
mov
sub
mov
ret
sbb
adc
pop
sbb
adc
aam
mov
lea
std
mov
popa
fisubs
inc
cwtl
or
inc
sbb
cmp
insl
xchg
push
xlat
jp
sarb
mov
rclb
push
shlb
dec
dec
sbb
inc
push
xor
push
push
adc
add
adc
jno
outsl
dec
jecxz
add
ret
adc
cmovne
fdivs
adc
pop
dec
xchg
add
cmpsl
mov
ds
adc
mov
cmp
loopne
arpl
ret
or
adc
jbe
cwtl
shr
and
adc
jnp
fidivrl
cwtl
shrb
mov
xchg
ret
or
sbb
sbb
mov
push
mov
or
adc
dec
cwtl
mov
leave
sub
inc
sub
cld
inc
push
sbb
shlb
jae
out
imul
jae
arpl
movb
mov
rcr
or
sbb
mov
push
xor
or
cmc
jp
xor
push
sbb
xchg
ret
adc
fiadds
cmp
xor
add
inc
adc
mov
and
mov
xor
mov
call
dec
js
cwtl
roll
int3
adc
sub
orb
out
add
movsb
dec
dec
mov
cld
adc
inc
push
sbb
cmp
xchg
and
mov
jecxz
pop
dec
call
jle
sub
or
add
push
subl
adc
add
insb
push
or
test
scas
ret
sub
inc
ljmp
inc
movsb
sar
mov
or
or
addb
mov
adc
js
das
mov
and
sbb
or
mov
jge
add
dec
outsl
mov
ret
icebp
pop
int
lods
push
pop
out
in
xchg
push
or
lock
lods
add
push
das
adc
mov
call
test
test
xor
jne
dec
add
gs
imul
add
jb
loopne
lret
js
push
pop
stos
aaa
mov
add
mov
push
jecxz
xchg
clc
cmp
roll
mov
jle
test
add
xchg
or
in
mov
scas
cs
adcl
nop
popf
adc
jg
aad
movntps
les
dec
out
xor
ljmp
leave
scas
mov
lahf
sbb
psubd
xor
adc
adc
int
add
ret
mov
in
xchg
stc
or
cmp
outsb
rclb
jbe
and
adc
lahf
ss
loope
dec
mov
xor
inc
adc
mov
inc
jne
daa
push
orl
add
and
popa
pusha
rcl
mov
adc
push
fcomps
sub
test
add
notb
into
cmp
mov
adc
xor
inc
xchg
or
cmp
dec
mov
mov
shlb
leave
mov
add
fildl
out
push
jbe
cmpsl
cli
sbb
xchg
adc
test
stc
add
dec
push
ret
inc
push
add
mov
loope
adc
inc
xchg
movsl
push
stc
lods
pop
sub
int3
add
rclb
lret
mov
mov
xchg
jno
inc
in
xchg
pop
fwait
shll
push
xorb
xor
ret
pop
mov
add
xor
fcompl
leave
repnz
add
stos
xor
cmp
or
ds
fs
dec
mov
inc
or
adc
imul
insl
mov
lods
push
jne
dec
subb
ficoml
aam
mov
sub
xchg
lods
dec
fwait
inc
adc
sub
jo
cmp
scas
insb
ror
sub
jne
push
push
and
aaa
or
sbb
and
mov
sub
ret
int
and
gs
or
push
cmpsl
scas
insb
and
in
and
and
insl
dec
enter
and
loopne
add
and
adc
sahf
sub
push
sahf
test
jno
inc
pop
imul
xchg
leave
xor
dec
test
push
dec
loopne
push
adc
and
xor
aad
pop
jg
fmuls
mov
sub
cmc
adc
call
out
push
lock
aad
arpl
sbb
cli
ret
imul
inc
fcomps
daa
enter
or
sahf
jo
sub
pop
or
mov
cli
cmp
and
push
popa
inc
push
sbb
jl
mov
sub
and
loopne
or
aad
pop
push
test
mov
repz
jne
xchg
adc
addr16
adc
sbb
and
and
cwtl
mov
loopne
cli
inc
add
sbb
jo
push
enter
xchg
dec
fs
out
xor
movsl
pop
div
mov
xor
adc
add
mov
jl
inc
pop
mov
add
adc
stc
icebp
pop
adc
push
add
jne
add
pop
sub
mov
into
jo
cmpl
out
shl
loopne
sbb
es
add
out
push
adc
dec
or
inc
ror
scas
mov
addb
and
sbb
sbb
pop
rcr
and
mov
out
add
lcall
sub
lods
xchg
lcall
xchg
clc
and
test
clc
inc
shl
test
xor
sahf
cltd
scas
lret
mov
inc
mov
lcall
shll
popa
andl
push
add
insb
fsubl
ficoms
cltd
mov
or
push
dec
xchg
push
jns
rcr
movsb
dec
icebp
xor
shl
outsb
mov
pop
pop
cmp
add
insb
add
shrb
push
popa
mov
and
addl
xor
adc
repnz
or
jl
rorl
out
lret
nop
pop
dec
loopne
adcb
xor
xchg
sbb
and
movsb
inc
cmpsb
daa
pusha
mov
sub
add
stos
insb
call
clc
les
inc
xor
mov
rcrb
sbb
jl
sub
mov
repnz
add
xchg
and
and
cwtl
roll
lock
pop
imul
xchg
inc
inc
and
jno
or
fdiv
lods
mov
out
sbb
and
inc
jno
sbb
scas
lret
loop
rcrb
loopne
cmp
add
dec
add
mov
xor
out
dec
xchg
jmp
jb
divb
or
wbinvd
or
outsl
mov
in
ret
vpslld
test
lock
or
sbb
dec
mov
or
rorb
push
insb
add
test
insb
push
and
in
push
rolb
sbb
xchg
mov
enter
xchg
pop
fists
js
negb
fcoml
pop
icebp
and
add
cmp
fwait
mov
mov
leave
outsb
test
cmp
and
jge
dec
xor
into
pop
or
shlb
nop
pop
mov
movsl
push
mov
push
and
cmpsl
and
ret
rolb
fimuls
pop
rolb
into
negb
inc
pop
dec
mov
xorl
jo
arpl
and
adc
enter
push
mov
jge
xorl
imul
and
mov
icebp
add
loope
mov
xor
and
pop
mov
add
dec
inc
add
mov
sbb
mov
sbb
stc
mov
fstpt
xor
daa
fs
dec
imul
push
dec
shll
or
dec
fistpll
rorb
stc
inc
js
mov
inc
inc
mov
adc
dec
xchg
inc
data16
hlt
sub
sbb
xchg
loopne
inc
pop
xlat
mov
das
sub
lret
lock
ret
jno
mov
and
in
shr
imul
sbb
shll
aam
inc
cmpsl
mov
sbb
gs
mov
push
mov
dec
dec
popa
aam
or
inc
gs
jns
push
cmc
xor
or
xor
test
jb
sti
lret
adc
aam
mov
jns
push
add
lods
in
ret
dec
jb
jp
loopne
ds
js
or
dec
mov
cmpsb
xor
cmp
add
adc
xchg
mov
cmp
cld
jo
pop
add
das
sbbb
push
rclb
sbb
lahf
daa
leave
push
rolb
inc
cmp
inc
mov
es
push
cmpsb
push
addb
lret
jno
add
add
inc
push
mov
shl
inc
ja
sbb
pop
adc
aam
cmp
pushf
jle
xchg
int
sarl
into
xchg
idiv
or
sub
scas
lods
mov
inc
int3
lret
divb
cwtl
pusha
mov
int
aam
push
pop
push
push
aas
add
dec
push
les
insl
mov
xchg
mov
fs
sub
cmp
pop
jmp
cli
or
jl
pop
mov
pop
sub
repz
xchg
sub
enter
dec
inc
mov
push
lods
or
pop
xadd
xor
outsb
pop
jl
or
pop
sbb
rcrl
push
mov
clc
lfs
cmpsb
icebp
mov
add
jb
bound
movsb
notb
push
loopne
mov
cmc
stc
and
mov
dec
push
ds
xchg
lretw
leave
xor
xchg
insb
and
scas
paddw
lret
dec
data16
and
lahf
sbb
loop
add
sub
imul
fdivrl
cmpsl
fimuls
sbb
jmp
inc
xor
xchg
imul
sub
adc
lcall
fdivl
je
and
pop
not
movsb
mov
add
pop
mov
pusha
rorb
lods
jecxz
inc
cmp
sbb
ss
rcrl
xor
dec
sbb
cmpsb
sbb
incb
xor
enter
into
sbb
shll
xor
mov
pop
dec
shlb
ret
xor
mov
aam
test
push
in
sbb
or
xor
aam
repz
in
pop
jp
outsb
cmc
repnz
inc
sbb
sbb
imul
jmp
mov
or
mov
jo
pop
sub
dec
xlat
fcompl
dec
pop
push
sbb
jns
nop
adc
pop
ss
fnstsw
or
xor
mov
add
fiaddl
xor
call
mov
cmp
into
push
popa
push
movsl
mov
shrb
adcl
loope
mov
dec
adc
adc
int3
ss
ret
leave
jp
lret
or
push
mov
adc
lret
push
push
mov
adcb
popa
test
inc
add
xchg
jb
jp
shr
cmc
clc
call
xchg
test
test
ror
add
pushf
xor
rcl
mov
jnp
pop
fdivs
ret
adcl
mov
lock
push
xchg
xchg
ja
add
adc
je
inc
inc
jge
sub
add
add
call
inc
loop
xchg
dec
sub
jmp
push
pop
push
inc
mov
or
imul
rcr
push
lcall
pop
rolb
and
xor
pop
out
add
jp
insl
dec
or
addl
test
ret
and
mov
push
or
leave
add
stc
push
or
sub
cmp
inc
dec
loopew
adc
ret
bound
mov
xchg
push
adc
pop
add
fnstcw
scas
add
adc
pop
mov
mov
cmpl
add
dec
add
loopne
add
sbb
add
test
mov
je
sbb
cwtl
idiv
push
psrld
mov
sub
jnp
adc
ret
test
loop,pt
mov
sarb
not
je
add
inc
cmp
push
or
out
xor
inc
ljmp
push
xchg
mov
add
push
fwait
popa
dec
push
fptan
scas
add
add
push
sbb
loope
loop
loop
xor
pop
in
incb
gs
sub
shll
loopne
inc
aas
jl
add
pop
out
movsl
das
inc
xchg
inc
imul
lock
add
data16
cli
mov
inc
sbb
mov
cmpl
test
int3
jp
mov
xchg
mov
or
adc
lcall
gs
and
inc
add
shlb
les
mov
aas
pop
push
in
loope
inc
add
inc
inc
dec
ficoml
bound
push
lret
sub
inc
or
lret
es
adc
aas
lock
adc
ret
xchg
test
test
test
mov
push
dec
pushf
xor
push
jp
cs
adcl
or
cwtl
int3
sub
cmpsb
sbbb
xor
es
sub
mov
aaa
lock
addl
sub
or
mov
ljmp
and
push
jg
push
dec
cmp
adc
lock
cmp
rolb
or
cmpsl
lcall
shll
sub
xchg
jecxz
aad
hlt
shl
push
push
fstl
cmp
imul
or
add
add
dec
cmp
inc
sbb
enter
andl
imulb
sbb
loopne
ret
cmpb
mov
ret
pop
repnz
adcb
inc
inc
xchg
mov
sub
add
rcll
xchg
in
dec
adc
popa
in
or
ret
icebp
loopne
das
inc
push
dec
cli
push
rorb
sub
add
mov
or
jo
and
xchg
push
adc
pop
and
daa
inc
jb
aad
popa
jne
iret
sbb
das
adc
add
out
or
inc
test
sub
adc
mov
add
in
arpl
push
imul
sbb
dec
xchg
in
add
sub
add
sub
imul
cmpsb
icebp
or
adcb
adc
mov
push
jg
rorb
sub
fidivs
push
fisubrs
push
retw
mov
movb
test
stos
xor
hlt
push
fimull
pop
and
adc
or
lods
outsl
cltd
ljmp
ljmp
inc
adcl
rcrl
mov
xchg
adc
hlt
loopne
imulb
pusha
and
xlat
xor
mov
mov
sbb
add
lret
lret
add
cltd
imul
sbb
or
or
gs
out
movsl
aad
icebp
imul
jecxz
or
into
pusha
and
pop
sbb
mov
inc
and
aam
rcrb
add
mov
sbb
push
nop
pop
push
data16
int3
rolb
dec
in
pop
pushf
sbb
inc
cmpsb
sub
sbb
and
ja
xchg
lea
push
and
xchg
dec
xchg
sub
sbb
jo
addb
mov
into
pop
lock
add
lods
add
xchg
dec
insb
movsl
xchg
mov
cmp
sbb
or
push
out
jl
sub
inc
mov
scas
xlat
dec
xchg
mov
push
subl
mov
dec
xor
dec
pop
outsb
or
adc
dec
cwtl
sbb
call
imul
cmp
dec
pop
js
mov
or
repnz
stos
es
add
inc
scas
test
mov
sub
jno
and
sub
cwtl
xchg
mov
mov
repnz
rorl
add
ret
pop
push
je
mov
and
dec
add
jmp
in
mov
inc
cmp
sbb
lret
sub
int3
rcll
fwait
or
push
addr16
aas
push
or
adc
xor
push
pop
mov
cwtl
bnd
sub
lea
push
movsl
add
push
cmp
or
mov
xor
mov
test
imul
xor
push
popf
or
and
sbb
adc
adc
test
movsb
xchg
shl
test
sbb
mov
shrb
nop
sahf
int3
pop
lods
fs
and
mov
scas
icebp
ret
fs
xchg
xor
fistps
jecxz
out
xor
jmp
add
lret
sbb
push
sub
mov
pop
jns
adc
scas
ficoml
stos
xorb
shlb
xchg
dec
dec
or
cmp
fadds
fistps
into
pop
add
sbb
pushf
ror
dec
xor
iret
sub
cli
mov
mov
lods
push
push
push
xchg
lock
xchg
aaa
xchg
sbb
rorl
int
test
out
loope
sarb
cmp
sbb
gs
xor
test
push
and
ljmp
add
xor
adc
push
cwtl
jne
inc
test
fstps
pop
ficomps
loopne
adc
call
xor
aaa
fmull
pop
and
aam
mov
inc
add
rclb
jae
mov
stos
push
into
sub
subb
movsb
lods
add
orb
fs
mov
movsb
sarl
pushf
mov
sbb
mov
sbb
pop
sahf
test
repz
call
or
aam
jb
hlt
xlat
cmp
and
push
shlb
pop
sub
push
jecxz
adc
das
inc
add
mov
movups
mov
or
mov
add
cmpl
lahf
fimull
cmp
push
adc
js
nop
dec
add
lods
mov
jae
popa
lods
test
div
nop
lea
push
loope
fsubl
mov
inc
pop
pushf
test
sbb
lea
pusha
add
sub
shrl
sbb
mov
mov
push
ljmp
add
inc
test
movsb
lock
test
or
jp,pn
or
push
leave
add
nop
add
cltd
aam
dec
jmp
push
ss
sub
and
lock
push
dec
movsb
cmpsl
lock
xor
sub
push
fadds
popf
rol
or
pusha
push
dec
sbb
add
pusha
popa
ljmp
lock
push
stos
adc
sub
ljmp
pop
sub
sub
rorl
adc
adc
rcrb
and
sbb
js
and
rcrl
scas
ret
loopne
xor
lcall
cmp
adc
andb
adc
jb
mov
out
test
mov
pop
adc
sub
pop
push
mov
mov
lock
xchg
pop
stos
sbb
add
ljmp
xchg
cmp
pop
push
xchg
push
add
dec
add
popa
and
or
sbb
cmpsl
dec
fwait
loope
and
sbb
lret
or
insl
sbb
aas
xchg
mov
sbb
pop
enter
push
sbb
cmc
movsb
dec
mov
and
lock
xchg
ss
sbb
jb
mov
sahf
and
shrb
dec
or
xchg
push
push
add
call
sub
adc
packuswb
pushf
mov
mov
lods
lds
or
ret
pop
jle
cmpsl
aam
dec
jbe
or
ja
je
or
add
cmp
adc
orl
pop
xor
jo
or
loopne
inc
mov
push
sub
add
pop
pushf
jecxz
adc
mov
jb
mov
add
xchg
pop
cmp
pop
inc
data16
outsl
invd
lret
nop
push
xchg
pop
sbb
movsb
lea
in
sub
rorl
pop
sbb
pop
dec
or
dec
sbb
bound
push
iret
jp
aad
imull
rolb
call
pop
xchg
cmp
inc
sbb
push
andl
pop
dec
scas
rorb
mov
fwait
or
add
push
cmp
sbbb
fwait
xchg
dec
sbb
shl
fs
xchg
mov
xchg
test
push
xchg
mov
mov
iret
or
pop
leave
mov
fsubl
adc
and
pop
add
adc
xchg
popf
loopne
or
adc
jmp
aas
rcr
enter
insb
fisttpll
ljmp
add
lret
cmp
mov
dec
or
insb
ret
cli
fistpl
pcmpgtd
cmp
hlt
and
and
mov
lret
dec
lret
and
sbb
leave
pop
dec
xor
push
call
mov
cs
jmp
rcr
shlb
add
stos
sub
mov
iret
adc
push
subb
sbb
rolb
pop
ret
aam
int3
js
sbb
call
ljmp
nop
sub
xchg
mov
cmp
push
mov
add
jmp
stc
sbb
dec
outsl
lret
shlb
roll
push
mov
mov
xchg
pop
mov
and
jnp
pop
rorl
and
or
dec
ljmp
cwtl
sti
or
aad
stc
sub
das
fcoms
cmpsb
loop
or
inc
push
jns
ret
mov
cmc
mov
push
sub
jo
inc
test
fwait
js
ljmp
xor
push
inc
loopne
xchg
jmp
shrb
cmp
mov
popf
je
or
mov
cltd
jge
leave
rclb
or
mov
inc
jecxz
not
fisubrs
movl
cli
addl
and
mov
xchg
dec
ljmp
cmp
test
faddp
test
pop
inc
jmp
sub
fidivl
xchg
out
push
jb
xchg
mov
movsb
mov
imul
sahf
add
adc
ret
xchg
movsb
loope
adc
popa
lock
inc
mov
mov
xchg
add
adc
xlat
sbb
sbb
cld
es
add
sub
daa
loope
dec
mov
dec
mov
or
jp
mov
daa
dec
pop
stc
sub
dec
push
inc
rcrb
mov
mov
mov
add
mov
push
es
stos
mov
ds
xchg
xchg
mov
jp
jbe
push
inc
lods
xor
roll
or
sbb
lds
data16
and
ret
rolb
lea
inc
movsb
jno
push
xchg
bound
add
add
xchg
cmc
sbb
lea
insb
xlat
lcall
dec
jge
aad
push
pop
push
pop
clc
jmp
jne
sbb
jecxz
mov
or
mov
les
or
dec
pusha
in
movsb
cmp
stos
rorl
xor
pop
add
pop
mov
mov
mov
add
push
lcall
jl
cmpl
ret
or
inc
movsb
xor
adc
rcr
xor
mov
or
clc
xchg
inc
loope
jp
filds
add
neg
adc
cmpl
sbb
rolb
lock
ljmp
xor
mov
fildl
xchg
fs
enter
imulb
pop
add
lret
and
test
and
sub
or
sub
push
adc
shr
jp
in
jns
sbb
shlb
icebp
inc
push
mov
cmc
mov
add
lret
or
addb
imul
mov
pop
test
push
test
jl
loope
sysenter
into
loop
sub
add
imul
mov
xchg
dec
mov
adc
push
xchg
jge
or
fwait
sbb
es
cmp
pop
iret
adc
add
push
push
out
or
inc
inc
push
and
inc
pop
xchg
jmp
pop
jo
and
ret
cmp
rorb
adc
add
jge
mov
mov
call
lock
or
sbb
push
js
rcrb
imulb
xor
xchg
lods
popa
jecxz
jb
add
xchg
ds
mov
sub
jae
and
xchg
lods
inc
jmp
dec
insl
cmp
mov
mov
adcl
xchg
adc
dec
cmp
sbb
xorb
mov
arpl
pop
sbb
jno
xchg
or
or
inc
sub
or
dec
and
xchg
push
mov
loopne
mov
sbb
mov
sub
jmp
cmp
pop
mov
fwait
mov
or
sahf
test
das
pop
ret
pop
aam
lcall
push
stos
push
pop
jl
imul
mov
pop
push
sbb
mov
adc
lock
pop
pushf
xorb
cmp
cs
jae
cld
adc
adc
jno
outsb
cmp
into
mov
mov
and
subl
mov
lret
push
xor
js
xor
into
rclb
add
sub
push
and
adc
lret
cltd
inc
js
movsl
test
inc
xor
inc
and
adc
push
add
xor
rclb
cmp
jmp
dec
adc
mov
pop
sbb
or
out
movsl
rclb
pop
dec
rol
cmp
sbb
cmp
and
adc
imul
sub
pushf
mov
divb
loopne
not
xchg
shll
lcall
xchg
lods
dec
mov
cs
add
dec
imul
pop
outsb
rcrb
into
ret
dec
stos
dec
ljmp
dec
data16
cmp
or
rolb
or
push
xor
lret
dec
xor
rorl
stos
add
dec
daa
aaa
sarb
adc
adc
sbb
push
scas
in
mov
or
fdivrs
inc
sbb
cmpsb
push
push
adc
mov
cmp
pop
pop
dec
idivb
loopne
rcrb
jbe
push
or
xchg
jne
and
dec
or
or
or
outsb
imul
rorl
imul
xchg
ds
in
xor
add
jg
sbb
push
sbb
push
into
mov
xor
mov
mov
sub
jb
clc
imul
in
sbb
mov
jno
or
call
push
cs
movsl
sub
inc
inc
dec
cmc
lds
sbb
and
xor
adc
rcrl
cmp
cmp
inc
movsl
ljmp
test
push
xchg
jp
out
cmp
xor
ja
push
pop
inc
xor
in
mov
jb
scas
jo
popf
divb
fwait
cmc
dec
cmp
mov
nop
scas
icebp
adc
add
clc
loopne
xorb
outsl
add
nop
enter
cmpsb
xchg
inc
in
dec
jmp
cmpsb
or
test
nop
or
call
cltd
add
jg
shufps
test
cmp
mov
inc
or
jp
or
xchg
adc
push
out
sbb
mov
jnp
dec
leave
and
and
cmp
notl
stc
add
jo
pop
int3
clc
dec
jo
dec
push
rclb
push
shr
dec
mov
sbb
xchg
mov
adc
pusha
xor
add
push
gs
xchg
add
shrb
xor
or
call
test
leave
inc
mov
imul
inc
lods
je
lea
pushf
mov
addr16
mov
xor
ljmp
inc
adc
or
push
mov
cwtl
and
cmpsb
dec
xchg
push
cmp
fiaddl
hlt
loopne
les
cwtl
cwtl
lret
iret
inc
ret
out
add
push
xor
add
or
lret
add
push
inc
sub
std
jb
cmp
jmp
das
movsl
les
daa
mov
fsubr
enter
jl
lret
xchg
or
rclb
adc
cmp
sarl
into
loop
pusha
rolb
icebp
cwtl
cwtl
test
inc
testb
loop
test
sbb
inc
xlat
cmovg
or
adc
scas
icebp
pop
insb
mov
iret
nop
inc
add
xor
ljmp
in
shlb
and
add
lods
dec
pushf
push
pop
pop
ret
adc
push
sti
sub
fimuls
aam
xor
movsb
lret
mov
dec
fisubrl
add
imul
xor
ljmp
loopne
xchg
dec
pop
add
test
inc
add
inc
inc
imul
lock
dec
mov
rol
adc
and
mov
filds
add
out
hlt
xor
imul
pop
test
inc
lret
sbb
push
ret
test
ret
inc
ja
sbb
lret
push
xor
ss
dec
mulb
xchg
adc
addb
cwtl
cmp
sub
pop
data16
push
rolb
xchg
pop
enter
stos
std
movl
xchg
pop
and
loop
in
je
jo
test
cli
clc
push
xchg
pop
cwtl
sub
xor
shlb
ret
pop
into
and
rorl
popf
sub
push
mov
aam
ss
mov
test
mov
mov
cli
es
aaa
or
xchg
adc
test
dec
nop
adc
mov
jge
out
push
movsb
inc
cmp
push
ss
mov
pop
sbb
fdivr
sbbl
pusha
cmp
sbb
pop
and
sarb
imul
cmp
enter
sub
jnp
sbb
js
jmp
movl
adc
fs
push
les
pop
into
cmp
int
mov
aad
xor
jno,pn
mov
stos
xchg
sbb
mov
ss
fimull
call
call
imulb
xchg
mov
push
jbe
lods
add
jo
ficoml
fnstcw
movsb
adc
or
mov
iret
push
std
cmp
or
mov
cmp
inc
adc
cmpsl
mov
test
sbb
and
pop
sub
inc
push
cltd
pushf
mov
or
stc
or
xor
loopne
mov
lcall
mov
and
sahf
icebp
add
or
or
cli
fwait
pusha
inc
subb
xor
jo
mov
inc
mov
and
bound
adc
hlt
dec
dec
pusha
sbb
add
stc
push
cmpsl
subl
movsb
sub
mov
cli
add
sub
xor
inc
je
and
jno
jns
sub
sbb
xchg
mov
jne
pusha
cltd
xor
and
or
pop
push
pop
adc
sbb
or
or
lret
and
push
dec
ret
repnz
mov
push
inc
xlat
mov
test
xor
mov
pop
dec
sarb
pop
sub
popa
push
loope
ficoms
les
shlb
sub
sub
repnz
or
inc
push
mov
rclb
dec
leave
sbb
and
mov
xor
dec
sbb
lahf
xchg
test
sarl
or
adc
dec
rcrb
inc
add
inc
aam
mov
add
push
testb
ss
loop
mov
test
pop
sbb
das
push
mov
fs
or
movsb
push
push
push
mov
xchg
loop
lods
and
call
sbb
adc
add
dec
dec
cs
decb
jecxz
loopne
lret
test
adc
adc
push
adc
cli
and
icebp
cmp
and
cmp
repnz
adc
inc
inc
and
pop
adc
jmp
xchg
adc
popf
pusha
lods
or
or
inc
movsl
add
dec
xchg
cmp
mov
push
pop
pavgw
iret
push
mov
dec
sub
xlat
shrb
add
jb
and
fxch
pop
add
inc
or
ret
or
pop
jne
pop
les
push
adc
sbb
lcall
adc
pop
pop
xchg
icebp
enter
push
ret
loop
mov
or
flds
pxor
and
or
xchg
jne
and
shlb
sbb
or
out
scas
or
adc
xchg
sub
in
sbb
sahf
xor
or
insb
test
adc
jmp
cmp
popa
pop
add
mov
dec
fimull
popaw
ljmp
rcrl
ds
into
inc
das
jmp
clc
lods
mov
ss
lock
adc
sahf
xlat
test
test
je,pt
or
lods
stos
add
adc
movsb
adc
aad
or
mov
mov
fwait
cmp
mov
imulb
adc
mov
or
int3
pop
dec
movsb
add
and
test
rcrb
push
hlt
xor
ror
nop
cli
repnz
enter
inc
and
dec
loop
lds
mov
cmp
jmp
jns
xlat
lret
shrb
lds
xlat
test
daa
call
and
mov
xchg
pushf
adc
jo
cli
es
mov
loope
pop
and
loope,pn
sub
inc
shlb
push
pop
adc
inc
lods
sub
mov
mov
sbb
cli
clc
adc
fildl
or
inc
out
mov
adc
push
xchg
mov
pop
mulb
data16
es
das
pop
sarb
xchg
ret
cli
add
inc
lock
add
sbb
rcrb
into
fsts
adcb
sub
pop
js
pcmpgtw
xor
cmp
lret
fidivrs
pop
fcomp
mov
leave
mov
negb
inc
rorl
mov
dec
lret
stos
xorl
add
notl
pop
sbb
xor
inc
xchg
scas
mov
sub
or
subl
mov
push
push
rorl
sbb
sbb
lods
imul
pop
add
imul
mov
xor
cmp
xchg
sbb
and
btc
cmp
cmp
inc
fld
repnz
subb
and
inc
call
adc
xor
shl
mov
loop
pushf
xor
pop
in
lock
xchg
jbe
xor
sub
pushf
test
mov
mov
mov
sar
jnp
mov
adc
push
mov
ds
sbb
adc
js
pop
xchg
sub
nop
nop
mov
aam
adc
pop
sub
jo
push
cmpsb
sbb
sbb
mulb
mov
jl
adc
outsb
sub
adc
xlat
mov
add
and
dec
in
icebp
sbb
adc
psadbw
xor
xlat
mov
push
pop
mov
add
mov
mov
mov
xchg
repz
or
push
ret
mov
xor
mov
mov
insb
mov
addl
ret
pushf
jp
pop
outsl
add
ror
test
aam
sbb
cmp
popa
dec
sub
xchg
repnz
sbb
adc
or
pop
jnp
fistpll
or
xchg
adc
dec
mov
or
add
mov
inc
xchg
clc
push
xlat
push
and
pop
rcrb
mov
or
enter
insb
aam
adc
add
shrb
and
pop
sub
sub
sub
add
jno
jnp
sbb
mov
fs
adc
push
fldcw
pop
jmp
sbb
out
adc
dec
sub
mov
aaa
mov
sahf
nop
dec
push
adc
inc
stos
add
jns
and
cmpsb
stos
inc
xchg
test
or
mov
add
and
mov
scas
push
add
sub
mov
xor
jmp
mov
pop
je
jp
push
add
cmp
push
enter
sbb
inc
arpl
jl
push
cli
aas
ljmp
cltd
add
pop
insl
cmp
adc
jb
xor
sub
je
or
cwtl
or
cmp
shlb
mov
cs
or
insl
add
leave
cmp
ret
xchg
into
icebp
push
pop
pop
add
pusha
sub
add
movsl
cs
push
pop
les
rdmsr
mov
popa
jne
les
pop
pop
pop
cltd
mov
clc
aas
out
mov
sbb
adc
mov
jno
inc
fmuls
shlb
int3
push
or
mov
pop
add
pop
fisubrs
ret
aad
sarb
adc
and
inc
les
fnsave
inc
cmp
je
inc
iret
push
push
aam
ror
jecxz
inc
test
lret
add
jne
pusha
pusha
jb
jmp
xor
sub
sbb
mov
xor
or
mov
cmp
xchg
je
mov
loop
sbb
rcrl
ljmp
stos
cmp
das
dec
rclb
test
xchg
ret
push
push
or
dec
imul
xchg
jle
jl
ret
add
arpl
sbb
push
lock
push
idivb
clc
push
pushf
add
loopne
aam
or
movsb
popa
pusha
and
dec
insb
jns
or
pop
sbb
aaa
lcall
and
push
out
mov
leave
push
push
sub
loopne
orl
mov
hlt
pushf
push
push
adc
cmpl
ret
jmp
adc
dec
dec
nop
jb
test
cmp
mov
cmp
test
dec
cmp
shlb
loopne
jae
push
sub
inc
pushf
push
ja
ljmp
sub
xor
lock
loopne
shlb
ret
js
sub
adc
cmpsb
sbb
ret
xchg
rorl
pop
loopne
inc
int
test
and
xor
les
add
lds
and
aam
lret
jmp
sahf
sub
add
inc
adc
push
aad
cmp
xor
sarl
cwtl
adc
sub
std
pop
ljmp
cmovnp
pop
sti
mov
fs
pop
inc
aad
inc
and
loope
pop
or
and
jp
pop
in
orb
sub
push
cmp
push
rol
lret
dec
mov
testb
mov
push
jp
push
sbb
cmpsb
jno
mulb
mov
test
andb
inc
enter
cs
int
xlat
les
mov
negb
or
dec
cmp
dec
fdivrs
cwtl
movsb
add
fcoml
inc
lods
mov
dec
mov
add
popa
sahf
and
adc
mov
sbb
xchg
or
mov
hlt
add
call
and
je
test
pop
cmc
ficompl
xchg
xchg
mov
sbb
cwtl
hlt
xor
test
imul
aam
subb
add
ret
sbb
push
popf
ds
add
adc
xor
xorl
xlat
call
push
or
mov
push
cmp
cmp
sbb
fidivrl
jg
inc
js
ret
imul
mov
andb
ja
rorl
adc
mov
pop
and
sbb
and
fildl
cmpsl
adc
xchg
sbb
sti
ret
pop
ljmp
cmpsl
mov
enter
xchg
add
loopne
mov
repnz
in
lds
jbe
adc
mov
jbe
and
inc
jo
and
cs
es
loopne
lods
movsl
test
mov
and
xchg
icebp
xchg
fidivs
inc
jle
dec
sbb
adc
sub
pop
inc
clc
cmp
pop
popf
lds
jno
pop
push
sbb
sahf
xchg
cmp
lock
insl
cwtl
push
dec
and
ret
ror
push
cwtl
sub
mov
or
testl
sub
adc
imul
and
icebp
popa
mov
outsl
movsb
dec
add
add
into
adc
leave
dec
dec
mov
daa
or
ljmp
mov
mov
rclb
sub
jecxz
pushf
jl
sarb
adc
or
js
or
or
test
shlb
pop
mov
orb
nop
mov
mov
jmp
out
jo
add
add
daa
or
add
sbb
mov
push
mov
pusha
test
mov
and
xor
sbb
and
dec
cmp
in
and
push
push
enter
inc
mov
push
jne
clc
rolb
sbb
lea
push
pop
adc
xchg
or
enter
add
rcr
mov
push
and
enter
jae
call
jecxz
je
or
adc
mov
pop
mov
pop
inc
lret
fs
arpl
dec
sub
dec
cmp
xchg
inc
shlb
shlb
fs
mov
cmpsl
jge
cltd
and
mov
pop
sbb
mov
lret
push
pop
jecxz
jo
sbb
enter
sbb
or
push
nop
dec
push
rcrb
fidivrl
call
push
mov
movsl
clc
in
or
stos
add
and
xor
mov
push
pop
add
jns
lods
add
or
add
push
pop
mov
or
jbe
aam
adc
sbb
inc
int3
dec
xor
push
stos
sbbb
cltd
cmp
mov
addr16
mov
addps
add
or
das
sub
out
arpl
js
test
cmp
sbb
shlb
xchg
dec
xchg
jo
ss
inc
cwtl
dec
add
lods
push
aaa
test
loop
ss
popa
cmp
push
adcb
cmovge
pop
cmpsb
push
popa
dec
pop
or
jmp
push
or
push
cmp
and
sub
jo
jle
push
xchg
pop
inc
lcall
lods
lods
pop
ret
test
andb
mov
lret
scas
dec
dec
loope
orb
xchg
popf
mov
cmp
or
sbb
nop
or
imul
xor
aam
ds
repnz
sub
jp
rclb
sbb
sbb
bound
cmp
mov
mov
inc
lods
or
sbb
add
out
cmp
xor
out
loopne
or
sub
mov
push
fld
fildll
push
lea
add
sahf
pop
pop
ret
lea
std
inc
imul
pop
clc
movsb
out
mov
pop
and
sbb
and
lahf
pop
loope
pusha
cld
push
js
and
and
enter
test
out
stos
lock
mov
aam
dec
sub
in
cltd
dec
mov
sahf
or
xchg
clc
lock
hlt
lds
popa
pusha
iret
cmp
or
or
lcall
push
xor
sbb
scas
inc
xor
push
or
dec
lods
jl
data16
pop
or
add
roll
pop
dec
jb
ror
shl
gs
cmpsl
adc
mov
xor
inc
jmp
test
and
cmp
mov
loopne
xor
xchg
rol
insb
outsb
push
push
push
adcb
pop
or
stc
sbb
movsl
lahf
mov
pop
cmp
test
adc
cmovns
or
cmp
fs
pop
xchg
xchg
push
jp
jbe
je
push
sub
add
mov
subb
dec
call
xchg
hlt
jns
add
cmp
add
pop
es
mov
sub
or
mov
ss
sbb
icebp
xchg
scas
dec
push
cmp
icebp
rorb
arpl
test
lahf
adc
mov
stos
daa
loop
sbb
js
or
mov
pop
xor
xchg
or
push
adc
cmp
loopne
dec
shl
mov
add
pop
sbb
bound
mov
jns
cmc
jp
fwait
mov
push
orl
notb
adc
jge
cmp
jo
sbb
test
loopne,pn
lods
rclb
clc
push
or
push
push
arpl
inc
jb
add
rclb
pushf
add
push
push
out
call
les
mov
shrb
in
jne
fistps
pushf
ret
adc
cmc
pop
insb
repz
adc
add
pop
adc
and
xorl
clc
mov
xchg
adc
inc
hlt
fwait
pop
pop
sbb
jb
adc
xchg
sbb
add
adc
je
push
add
imull
sub
scas
sub
bound
push
repnz
call
xorb
lods
push
add
add
enter
push
nop
and
scas
mov
fildl
aam
rol
push
xchg
cmp
pop
loope
rclb
cmpb
or
jb
and
ret
call
loope
adc
nop
cmp
xchg
sbb
insb
imul
inc
cltd
push
push
mov
xchg
sbb
push
imul
lret
lret
mov
xchg
jo
cmpsl
and
mov
es
fdivs
xchg
push
stos
inc
dec
xchg
cli
dec
ret
rol
cmp
repnz
test
popa
xchg
push
and
or
leave
or
iret
leave
xor
or
or
fs
xchg
xor
daa
rclb
or
aam
or
mov
pop
int
fwait
adc
rolb
inc
sub
cmp
xchg
xor
repnz
cmp
fs
or
or
cmc
cld
push
inc
loopne
cmp
add
adc
and
pop
or
movsl
orb
sti
sbb
ljmp
fadd
jmp
loopne
inc
sbb
lock
int3
bound
jmp
daa
shl
xor
iret
ja
add
push
push
pushf
push
adc
sbb
and
in
xchg
cs
xor
fistpl
cltd
lods
sub
add
in
pop
pop
daa
insb
mov
insl
xchg
out
adcb
orl
sbb
or
lea
xor
xor
mov
int
bound
aam
xchg
test
cmp
add
leave
or
add
mov
add
ret
dec
repnz
rcrb
and
insb
clts
shl
push
loopne
nop
add
outsl
cmp
push
test
sub
daa
loope
sub
mov
addr16
sub
lret
cltd
xchg
sbb
pop
je
lcall
push
outsl
mov
aam
xchg
dec
sti
imul
js
push
stos
aad
movsl
and
enter
and
jecxz
out
leave
cmpsl
or
mov
int3
mov
sbb
xchg
mov
daa
movsl
cmp
xchg
in
enter
loop
rolb
pop
test
fmull
pop
jo
dec
inc
pop
nop
aaa
test
mov
popf
cli
sub
dec
movsl
out
jo
and
xchg
or
pop
orl
hlt
rorb
outsl
call
pop
or
sub
jns
xor
cwtl
stos
jp
movsl
xchg
or
sub
push
sub
sbb
xor
out
xor
or
dec
and
dec
testb
outsl
dec
sbb
addb
fldcw
sub
mov
pop
dec
xor
icebp
push
cmp
dec
loopne
or
and
jp
dec
mov
xorl
insb
pop
dec
cmp
inc
leave
xchg
or
dec
orb
add
dec
ds
push
es
cmpsl
shll
movsb
and
dec
mov
loopne
mov
push
inc
std
addb
mov
lds
addr16
lret
pop
push
push
sahf
inc
mov
inc
dec
test
dec
sbb
addl
mov
inc
push
dec
push
push
mov
inc
pop
cmp
mov
jg
push
xchg
sbb
cs
and
out
clc
push
push
pop
xchg
aaa
add
icebp
jo
add
cmp
dec
test
sbb
xchg
push
fistl
icebp
or
jae
or
nop
sub
sbb
movsl
push
and
and
shll
pop
es
call
into
add
push
pop
sbb
adc
orb
jo
jecxz
sbb
cmp
jmp
pop
push
mov
dec
aas
pushf
xchg
pop
loope
jl
sbbl
cwtl
lock
xchg
leave
xor
test
icebp
dec
push
in
inc
adc
lret
shlb
aas
sub
pop
arpl
aaa
mov
or
push
add
xor
popf
or
and
add
push
movsb
mov
or
inc
or
and
and
xor
xchg
lea
aam
adc
movsb
je
rclb
mov
pushf
sbb
jp
push
and
push
inc
movsb
or
xchg
inc
xorps
lahf
test
inc
pop
inc
pop
push
loope
pop
fnstcw
sbb
outsl
pop
mov
cmpsb
lcall
sub
lret
or
leave
mov
call
push
cmc
jo
xchg
push
jp
mov
arpl
nop
ret
xchg
dec
cmp
cmp
xchg
push
ror
pop
ss
adc
push
add
xchg
add
js
rcrl
sbb
cld
xchg
scas
cmc
fs
mov
jae
push
and
andl
dec
in
and
xchg
xchg
mov
das
jne
loope
pop
clc
adc
inc
idivl
add
pop
int3
dec
arpl
inc
xchg
sbb
mov
add
mov
bound
sub
test
cmp
pushf
call
sub
adc
push
pop
das
loop
mov
cmp
mov
movsb
push
into
hlt
sbb
jne
and
or
shrl
leave
push
and
dec
push
sahf
cli
push
ljmp
cmp
sbb
mov
stos
leave
lcall
push
cmpsb
and
test
mov
enter
push
cmpsl
clc
cli
jp
xor
push
les
decb
sbb
pop
inc
pop
mov
xchg
fstpt
jb
rcrl
sbb
pop
push
push
pop
pusha
mov
push
pusha
xchg
pop
jp
or
sub
adc
xchg
scas
rolb
and
aaa
add
loope
or
add
jge
lea
push
shr
add
into
js
aam
sbb
sbb
sbb
insb
jl
divb
adc
inc
stos
sub
repnz
push
orb
shr
add
and
adc
nop
cmpsb
adc
rorb
aam
adcb
and
add
rol
aam
mov
mov
cmp
lret
in
mov
or
push
dec
or
lds
adc
or
rolb
ss
cmp
jne
out
icebp
leave
push
xor
in
movsb
roll
test
jle
sub
loop
or
push
add
push
mov
jb
pushf
popa
push
sbb
dec
mov
push
xchg
sbb
push
cli
adc
add
lea
mov
adc
inc
or
cmp
test
inc
inc
mov
jne
loopne
inc
iret
nop
and
or
push
pop
cwtl
pop
mov
mov
jg
jecxz
xor
dec
adc
shlb
and
pop
fs
add
add
or
jl
add
dec
or
cmp
nop
into
and
or
sar
jmp
ret
or
or
das
dec
jp
adc
xor
or
inc
popf
inc
sbb
fisttps
xchg
mov
add
stc
lock
cmp
xchg
push
ds
mov
add
data16
inc
lea
rcrl
nop
dec
add
mov
xor
add
push
leave
jl,pn
pop
mov
loope
and
ret
rol
add
xchg
xor
mov
push
mov
daa
pop
shlb
sbb
movsb
push
inc
test
or
aam
or
jns
imul
dec
mov
rorb
fiadds
ss
mov
rolb
mov
xchg
cs
mov
inc
xchg
or
jne
mov
mov
inc
andb
pop
mov
sub
push
pop
sahf
pop
jne
xor
dec
in
stc
decb
xchg
push
adc
sarb
dec
insl
adc
or
dec
lea
xor
fwait
adc
and
leave
je
or
repnz
cmp
cli
das
les
shrb
sbb
push
repnz
jne
push
xchg
orps
xor
xchg
adc
fimuls
xor
rolb
push
xchg
jb
cmp
rcll
xchg
insl
sbb
inc
adc
inc
rcrb
and
xor
sub
xchg
test
inc
add
js
mov
jmp
jns
xchg
push
ss
jmp
rclb
or
pusha
sahf
push
mov
mov
test
hlt
or
pushf
push
loope
and
aaa
xchg
aad
push
xchg
xor
daa
jge
pop
sub
push
nop
adc
cmp
shll
mov
lock
cld
lock
mov
lock
push
lods
bound
test
jb
push
pop
gs
and
fs
push
jle
lods
add
or
std
xor
add
rclb
ds
cmp
aaa
adc
sub
dec
jo
adc
inc
or
and
xor
punpcklbw
out
xchg
push
jo
and
and
cmp
sub
pushf
or
ljmp
adc
adc
mov
jo
add
fists
and
notb
mov
xchg
loope
add
push
inc
inc
lahf
outsb
mov
xchg
xchg
call
sbb
mov
popa
in
inc
or
test
adc
dec
shll
dec
bound
add
aaa
aas
pop
aad
fiadds
xchg
xchg
fwait
add
adcl
sub
inc
mov
punpckhbw
sub
sbb
out
sbb
add
lods
push
push
push
outsl
fistpl
pop
sbb
or
daa
dec
sbb
cmpsl
or
cwtl
inc
mov
adc
mov
jo
add
pusha
add
pop
int
cmpsb
lea
lods
int
xor
cvtdq2ps
sahf
xorb
nop
ret
scas
stos
mov
cmp
in
xor
or
sub
sbb
xchg
add
cmpsb
wbinvd
mov
loopne
rcrb
xchg
sub
es
lret
stc
sahf
add
daa
sub
add
or
out
push
adc
cmp
pushf
mov
mov
cltd
mov
mov
imul
add
xchg
mov
add
mov
mov
inc
rorb
loop
rcrl
lea
lret
inc
jnp
bound
leave
mov
adc
lea
mov
aam
pop
jl
lea
jmp
and
or
and
rclb
push
and
inc
lret
cmc
test
mov
enter
in
dec
in
dec
pop
xor
pop
bound
pop
clc
mov
mov
in
out
adc
setnp
fisttpll
fstl
test
mov
popa
insb
jmp
iret
adc
or
cmp
pop
xchg
ret
dec
cmp
fstl
lock
mov
mov
rcrl
jecxz
fdivr
xor
lods
sbb
mov
push
push
lcall
loopne
add
mov
xor
in
aam
movsb
pop
out
mov
xchg
mov
mov
pop
or
xor
adc
or
push
lahf
dec
xchg
call
adc
ljmp
sbb
das
cltd
mov
mov
cli
std
or
sub
push
fists
adc
cmc
cmp
and
jbe
jmp
xchg
sbb
jno
sub
ljmp
and
xchg
or
push
arpl
push
out
inc
js
pop
or
push
sbb
jecxz
lret
mov
push
and
shll
add
fwait
mov
ret
add
sub
push
adc
dec
add
inc
inc
cmpsl
pop
add
push
mov
aas
add
js
xor
xchg
mov
imul
clc
adc
dec
inc
cmpsl
pop
rcrb
mov
leave
pop
mov
outsb
adc
cwtl
shrb
jge
hlt
xor
testl
rclb
xchg
hlt
xor
mov
nop
mov
xor
js
ret
adc
ret
pop
mov
or
mov
out
mov
pop
shlb
add
adc
fs
push
xorb
sbb
sub
push
xor
and
adc
adc
xor
add
jno
pusha
daa
add
mov
push
loope
adc
inc
inc
or
xchg
sbb
push
inc
pop
add
inc
aam
jnp
or
iret
pop
sbb
adc
mov
lret
inc
jo
add
pushf
ds
movsl
pop
aam
xor
adc
sahf
movsl
xchg
xchg
mov
test
movsb
adc
movsl
xor
and
xchg
hlt
imul
faddl
adc
mov
loope
ja
xor
inc
jo
push
call
enter
xchg
xchg
xor
ret
fcoml
push
sub
add
push
shrb
push
and
cld
mov
xchg
in
xchg
out
or
push
bound
adc
dec
mov
addr16
adc
fcmovbe
pop
stos
xchg
js
push
inc
pop
adc
lods
add
into
sub
mov
in
mov
in
test
sti
lock
enter
subl
or
mov
cmp
and
xor
aam
push
sbb
movsb
cmp
mov
lcall
enter
movsl
inc
lods
dec
clc
add
xorb
sbb
cmp
js
lock
mov
and
es
push
jbe
jbe
pushf
mov
dec
sub
adc
jp
dec
ret
and
sbb
lret
and
jecxz
push
stc
or
mov
cmp
arpl
imul
addl
scas
pop
sub
test
test
loope
xor
bound
mov
inc
fcom
flds
pop
mov
push
mov
jp
or
pop
jl
pop
es
sub
das
push
push
aam
push
leave
sub
sbb
scas
push
add
gs
enter
cwtl
sub
pop
cmpsl
aam
pusha
pop
inc
cmc
add
mov
push
testl
jne
mov
xorb
js
mov
add
data16
add
mov
jmp
or
movsl
or
add
movsl
aam
xchg
and
sbb
xorb
push
sbb
mov
sbb
push
imul
jb
cmp
dec
rcr
add
lret
pop
adc
into
or
add
xor
and
mov
mov
fistps
fcmovb
add
or
rolb
sbb
dec
xlat
aam
cmc
lahf
mov
test
or
push
or
or
sbb
daa
in
aam
mov
pushf
sbb
inc
cmp
add
sbb
xor
scas
push
into
rol
push
filds
mov
jno
pop
sub
add
cmp
or
mov
dec
aam
xor
leave
add
loop
subl
rolb
mov
push
inc
test
sub
outsb
sahf
mov
ret
sbb
loop
popa
mov
sbb
clc
mov
xchg
mov
sbb
icebp
insl
lods
or
inc
sbb
xchg
ss
xchg
js
mov
inc
popf
int3
xchg
lock
xor
mov
das
push
jge
das
inc
sub
xor
dec
mov
mov
push
orb
cmpsl
lret
rclb
icebp
addb
pop
mov
and
sti
es
call
xchg
leave
movsb
and
and
lds
sbb
jle
ds
and
aaa
add
mov
or
cs
shl
bound
inc
imul
xor
pop
mov
shll
sbb
sub
out
mov
push
ds
adc
lret
mov
or
pop
test
nop
jbe
xor
sbb
je
push
or
test
loope
xor
dec
ffree
fdivrs
inc
or
movsl
out
inc
sbb
dec
rorl
or
dec
push
call
icebp
and
ljmp
lock
into
divb
xor
cmc
cld
mov
add
iret
in
rorl
loop
or
pop
movsb
push
js
sub
add
fidivrs
or
test
xlat
dec
add
add
add
pop
cmp
push
mov
push
arpl
scas
sbb
loopne
dec
sub
sbb
mov
dec
test
add
push
xchg
sbb
into
push
clc
ret
andl
lret
into
jmp
xlat
jmp
std
inc
sbb
nop
inc
clc
add
pusha
sbb
or
sbb
mov
add
mov
clc
mov
sbbb
imul
push
popa
mov
sbb
imul
cmpb
mov
add
rorl
add
jp
mov
push
push
ret
cmp
pop
mov
test
sub
jmp
shlb
or
mov
add
xor
xor
cmp
pop
sub
push
dec
inc
int3
xor
ljmp
xchg
pop
adc
sbb
ljmp
cmc
aam
or
iret
add
notl
cmpsb
xchg
pop
nop
std
cli
sbb
xchg
pop
shlb
fs
pop
add
sub
roll
rolb
imulb
jb
lret
ror
pop
lods
xchg
mov
dec
jle
addr16
pop
lahf
inc
mov
das
cmc
inc
clc
les
sub
add
sub
and
push
pop
and
scas
bound
lret
sub
pushf
or
cmp
add
into
pushf
push
int3
xor
ret
data16
sbb
or
jmp
or
gs
mov
inc
inc
das
mov
inc
pop
inc
rorl
pop
inc
pop
add
test
lret
mov
mov
pop
js
push
lods
jecxz
cmp
mulb
add
testb
dec
fnstsw
and
dec
sbb
pusha
add
push
cmpsb
in
xchg
fidivl
or
test
dec
dec
sub
stc
adc
aam
sbb
jmp
sbb
adc
out
pusha
loopne
jmp
mov
mov
icebp
ror
push
and
inc
ds
roll
test
mov
sarl
stos
or
orb
push
lods
andps
adc
adc
or
pop
mov
sub
andb
jnp
xchg
and
inc
or
fadds
lds
mov
sbb
imul
fs
adc
push
jle
push
test
and
fadd
movsl
jnp
jl
leave
add
add
int3
imul
ljmp
or
cmp
jb
pop
jp
or
bound
pop
fwait
xchg
popa
divb
add
dec
or
pushf
rolb
mov
xor
popa
and
dec
mov
xor
add
stc
or
pushf
lods
or
dec
ds
dec
sbb
or
insl
pushf
jo
dec
js
movsb
and
push
xor
cmp
inc
mov
aam
es
hlt
add
sub
insb
inc
push
and
imul
pop
xor
inc
mov
push
and
inc
push
sbbb
inc
sub
dec
popa
stos
sbb
sbb
imul
push
add
dec
push
xchg
sbb
lahf
rolb
insl
enter
push
jp
les
jp
aaa
xor
imul
nop
sbb
and
sbb
xchg
add
lock
js
or
les
jg
add
sbb
cmpsl
pop
adc
ljmp
add
movsl
mov
sub
xchg
inc
inc
xor
dec
or
mov
popf
pop
mov
sbb
cltd
push
shrb
jle
and
test
arpl
sub
loope
xor
jo
xchg
test
movlps
sbb
xchg
shl
push
adc
pop
or
adc
or
fldenv
cmp
or
ret
das
sbb
ret
movsl
xchg
push
pushf
lods
sbb
xchg
jo
sub
push
or
add
pop
cmpsb
jge
mov
mov
or
rclb
test
call
jp
lock
mov
fdivrp
adcb
lds
xchg
add
call
add
cs
mov
add
sub
xchg
roll
gs
jecxz
jb
mov
sar
and
add
cmc
xchg
popf
add
mov
xadd
jo
gs
adc
loopne
loope
mov
adc
lea
xchg
or
and
mov
test
add
jmp
cltd
or
aam
mov
outsb
cli
mov
sahf
aad
push
lea
push
imul
sbb
sbb
in
cmpsb
fcmovb
adc
sbb
and
sbb
push
and
test
repnz
or
lea
sbb
add
push
arpl
aas
outsb
push
sub
out
dec
dec
push
dec
fldl
mov
or
lds
loopne
rclb
and
sub
in
mov
or
cltd
xchg
mov
mov
push
xchg
and
inc
out
xor
push
lock
and
mov
xor
and
pushf
nop
fdivr
stos
movsb
lock
mov
mov
push
mov
subb
dec
xchg
push
lods
xor
push
pop
cmpsb
and
push
dec
nop
add
xchg
movsb
movb
es
push
dec
jecxz
pop
push
outsb
add
ds
enter
xchg
sbb
mov
inc
inc
inc
ljmp
fnstenv
pusha
shll
dec
in
mov
sbb
push
fcmove
push
cmp
push
or
lea
mov
xchg
and
or
mov
mov
push
or
call
sbb
out
or
sahf
cmp
out
and
xlat
roll
rclb
pop
nop
and
mov
xchg
adc
sbb
loopne
mov
je
and
add
lea
jp
jg
in
or
and
ljmp
repnz
adc
js
shl
push
and
jge
mov
adc
sub
dec
cmpsl
icebp
sub
shlb
sub
gs
mov
nop
cld
adc
pop
jns
clc
jae
lcall
push
sbb
fimuls
add
fcmovb
adc
enter
rolb
mov
rcrb
imul
ficomps
mov
pop
arpl
inc
mov
jbe
mov
sbb
cmpsl
sbb
xchg
xor
or
daa
sbb
fildll
in
fstps
jp
and
ret
subb
jmp
mov
sarl
movsl
xor
and
jne
adc
icebp
dec
mov
into
cltd
xchg
xor
mov
test
inc
mov
mov
adc
inc
movsl
sub
cs
or
xor
mov
adc
xor
imul
aam
pop
mov
mov
test
mov
add
sub
adc
mov
inc
mov
and
shlb
mov
jp
pop
les
cs
aam
ss
and
incb
mov
mov
adc
js
jmp
adc
insb
add
dec
inc
xor
test
sub
daa
jo
push
popf
pop
mov
outsb
jnp
adc
fcoms
xor
adc
rclb
xchg
ret
ds
daa
cmc
clc
mov
lds
mov
inc
xchg
and
arpl
and
add
push
inc
lock
push
add
jmp
ss
test
add
lret
loopne
sub
or
adc
and
adc
adc
xorb
in
loop
cmc
pop
pop
push
push
mov
push
sub
hlt
imul
xchg
addr16
lahf
dec
leave
lret
add
sbb
sbb
fwait
insl
cltd
mov
sbb
call
jb
repnz
lcall
add
mov
js
ds
orb
xchg
scas
bound
push
test
or
sub
xor
mov
dec
faddp
and
xor
or
setb
or
cmc
adc
push
sbb
fcompl
push
mov
dec
stos
lea
xlat
sar
pop
dec
cmp
dec
or
cli
or
cltd
addb
dec
adc
jne
lods
subb
movsl
xchg
xor
das
icebp
cmp
sahf
cwtl
arpl
test
xor
inc
sbb
xor
push
xchg
loop
mov
jns
pop
mov
xor
add
dec
dec
decb
pop
push
faddl
lock
and
jo
sarb
push
dec
push
push
pop
adc
pop
and
push
sbb
add
rolb
shrb
mov
loopne
faddl
dec
jmp
sub
add
fistpl
orps
jge
cmp
mov
or
mov
or
loop
jp
push
roll
test
sbb
sbb
adc
aam
cmpb
pop
loope
pop
xchg
sub
sbb
mov
and
lods
and
lahf
les
mov
faddl
jbe
adc
pop
xor
sahf
xchg
push
add
pop
cs
push
arpl
sbb
outsl
mov
dec
push
cmp
adc
jo
and
movsb
jb
gs
push
adc
shrb
pop
adc
dec
sub
pop
mov
cmp
cli
or
jmp
mov
cmp
rcrb
test
mov
jp
mov
or
xchg
or
sub
dec
mov
in
xchg
mov
push
nop
xchg
inc
sub
lock
xor
loop
or
je
jb
pop
aad
lret
sbb
mov
push
mov
inc
mov
pop
or
cmp
cmp
subl
icebp
dec
adc
aam
pop
cltd
adc
xor
add
rclb
push
sbbb
mov
or
mov
jb
movsb
mov
inc
inc
push
jecxz
pop
or
int3
rorb
cmpb
pop
fsubl
cli
jp
outsl
or
push
push
mov
ret
fdivl
movsl
mov
add
addr16
clc
roll
loope
add
xchg
fs
add
rcll
jle
cmpl
cmpb
jmp
push
add
mov
jge
ret
inc
push
loop
push
push
and
push
mov
std
xchg
into
test
push
push
inc
jmp
test
lock
mov
push
scas
adc
push
and
andl
xchg
xchg
pop
mov
ds
push
xchg
add
orb
cpuid
pop
xor
xchg
sbb
dec
bound
add
add
imul
pop
xchg
xchg
dec
insl
mov
xchg
aaa
jmp
and
xchg
ljmp
aaa
cmp
jmp
cmp
movsb
add
loope
or
dec
xchg
mov
adc
cwtl
orb
loope
ret
in
or
test
mov
xor
xor
dec
fbld
movsb
pop
in
loop
pop
and
sbb
mov
mov
inc
cld
add
test
mov
add
xorb
mov
mov
push
insb
adc
xor
dec
and
or
pop
pop
pushf
lock
addl
adc
jns
rorl
add
movb
push
mov
cmpsb
hlt
orb
push
daa
fstl
adc
int3
test
loopne
iret
nop
xor
or
enter
push
mov
pop
add
scas
or
and
data16
mov
and
movsb
sub
or
adcl
mov
sbb
and
leave
sarb
gs
sub
icebp
mov
test
jns
push
xor
cli
mov
aam
mov
inc
out
push
int3
and
ficomps
negl
mov
dec
dec
xor
or
adc
or
shlb
shlb
fwait
mov
mov
daa
xchg
test
xor
call
pop
or
or
jb
inc
jo
or
in
push
rorb
add
les
cs
xchg
mov
lods
xor
xor
or
test
push
dec
sub
sbb
roll
mov
popa
ret
cwtl
add
clc
and
or
jnp
ret
and
xor
loope
add
aam
or
testb
sub
push
adc
daa
decl
adc
mov
imul
or
xor
add
jo
ljmp
inc
nop
popf
push
nop
call
lahf
rorl
cmpsl
nop
roll
sbb
xchg
shll
jno
sub
add
roll
gs
xchg
cmp
roll
sbb
dec
jmp
sub
and
push
lret
call
testb
cmp
xchg
js
pop
test
out
mov
mov
xchg
pop
testl
fs
fucomi
xchg
ret
ret
inc
lcall
cmp
in
lods
xchg
sub
dec
into
insl
fs
mov
call
sbb
repnz
push
add
or
sbb
cmpl
rolb
pushf
adc
mov
dec
orb
pop
fs
lea
xlat
shlb
orb
push
movsb
add
xor
add
mov
add
sub
push
cmc
gs
fcompl
pop
dec
adc
mov
iret
lock
mov
inc
test
push
sub
cwtl
mov
sub
icebp
dec
pop
rclb
adc
mov
mov
xor
enter
sbbb
movsl
pop
xchg
mov
movsl
push
push
sbb
jp
dec
insb
icebp
lods
jno
hlt
cmp
dec
adc
xor
mov
inc
movsb
pop
push
pop
push
inc
inc
sub
add
imul
xor
push
mov
ret
mov
sti
jo
mov
mov
adc
xlat
dec
sbb
test
jecxz
sbb
lcall
pop
addr16
or
push
inc
shll
je
mov
dec
cltd
jo
adc
sbb
sub
les
sub
mov
jge
pop
rorb
jle
notb
out
sbb
or
adc
adc
sbb
dec
jl
adc
pop
pop
loop
jp
test
test
dec
nop
mov
inc
cs
stos
mov
imul
scas
mov
mov
sbb
inc
xor
mov
jno
xor
rorl
adc
pop
inc
cmp
scas
data16
add
xor
push
stos
dec
inc
pushf
or
dec
int3
push
in
out
inc
push
adc
int3
and
popf
popf
adc
pop
stc
sbb
mov
dec
xchg
xchg
add
stc
pop
add
cli
push
add
out
es
mov
push
xchg
mov
mov
and
fwait
sub
popa
inc
and
pop
mov
mov
jbe
and
sbb
test
sbb
push
cmp
adc
jmp
add
sbb
or
add
jnp
push
ret
test
in
cmp
jo
mov
cmp
mov
fwait
rcl
fidivrl
mov
inc
jp
lret
jl
sbb
sbb
rcr
push
orb
cmp
lea
bound
adc
jo
repnz
sbb
mov
push
pop
shrb
xchg
ret
shrb
adc
scas
and
pop
sbb
xchg
lock
lods
imul
dec
sub
push
subb
xor
int
aam
pop
pop
and
inc
mulb
sbbl
bound
sub
jle
xchg
jle
push
rol
pop
mov
xor
jp
pop
and
adc
nop
pop
sahf
add
and
adc
scas
jne
dec
ja
rorb
cmc
cmp
add
sbb
push
movsl
leave
sbb
mov
jecxz
clc
xchg
imul
sub
add
rclb
loope
test
movsb
pop
into
add
and
dec
mov
mov
push
test
shlb
cmp
pushf
mov
xor
ret
sbb
jmp
mulb
xchg
adc
sub
and
and
ret
or
add
sbb
or
lret
inc
imul
sbb
and
add
sti
push
jle
mov
cmp
test
jmp
pop
adc
sbb
jo
jne
xor
ljmp
cmpl
xchg
mov
dec
dec
rclb
and
xor
test
sarl
add
mov
pop
push
into
int
add
push
dec
pusha
jmp
or
xchg
xor
or
lods
xchg
into
fnstcw
pop
jb
jg
mov
pop
jne
dec
jp
pusha
andl
cli
jmp
lret
pop
loop
push
sbb
shll
daa
mov
add
lret
jle
sbb
inc
loopne
in
popf
mov
femms
lcall
aam
shlb
sub
fwait
adc
shll
mov
pop
xor
add
xchg
pop
shlb
add
add
sbb
push
pusha
movsb
or
and
repnz
add
loope
js
test
and
add
mov
inc
push
jmp
push
sahf
or
pop
dec
adc
push
adc
or
push
enter
loope
insb
idivb
dec
or
xor
and
add
add
or
add
sbb
add
mov
mov
inc
rorb
or
dec
push
loop
sub
dec
sub
loopne
rolb
or
add
movsb
or
mov
pop
sub
sbb
ljmp
mov
mov
and
xor
inc
test
js
gs
aaa
xchg
sahf
aam
cmpb
hlt
sbb
shlb
rcll
clc
lea
das
jl
cmp
and
packuswb
cli
xchg
lcall
test
sti
or
inc
daa
xor
inc
or
xor
addr16
sub
xchg
and
push
call
jge
push
rorl
aaa
and
and
popa
or
rcrb
shll
pop
clc
je
clc
or
rorb
dec
shlb
mov
adc
shr
sbb
int
sbb
pusha
add
pop
lcall
xchg
fcompl
mov
loopne
push
sub
ja
push
push
xchg
xchg
push
call
cmp
imull
add
loopne
daa
xor
push
jecxz
cmp
fadds
add
mov
cmpsl
mov
sub
jne
pusha
sbb
and
or
mov
xor
sbb
pop
dec
enter
mov
mov
insb
sub
mov
or
test
lret
les
dec
sub
dec
popa
daa
lahf
rorl
fcmovnb
imul
push
and
fmul
cli
or
inc
xchg
movups
ret
adc
stos
mov
add
int
ss
jecxz
xor
loope
mov
or
sub
push
dec
inc
sbb
xor
xor
sbb
cltd
ret
add
push
lds
sbb
or
andb
push
xorl
cld
jecxz
mov
xor
inc
push
cmc
or
fwait
push
imul
shll
mov
sbb
push
adc
pusha
and
rolb
push
rcrb
xchg
inc
push
push
lea
push
mov
or
cmp
mov
lods
clc
sub
dec
pop
dec
ret
rorb
xor
bound
test
scas
add
shll
pop
jp
mov
xchg
sbbb
enter
es
inc
or
inc
mov
dec
sub
shrb
mov
pushf
test
xchg
mov
movsb
sbb
xor
not
cmp
mov
sbb
cli
inc
mov
lds
adc
push
std
les
sub
jge
or
or
pop
jp
ljmp
xor
shll
adc
out
add
mov
enter
test
scas
popa
jg
pop
or
ja
insb
mov
mov
mov
mov
xor
je
pusha
sub
jbe
js
push
inc
js
and
movsb
or
xchg
ret
jo
xor
sbb
sub
add
icebp
push
cmp
lds
iret
lods
mov
in
sbb
dec
mov
leave
inc
gs
or
add
add
jecxz
mov
adc
stos
lods
adc
jle
sub
xchg
gs
jp
push
test
hlt
dec
dec
dec
dec
lret
or
insl
pusha
fs
sub
rcll
sbb
fptan
dec
ret
cmp
aam
sub
adc
lea
addr16
push
loope
out
stc
adc
cmp
cmp
xchg
test
lods
or
xlat
add
mov
push
mov
dec
pop
mov
sub
inc
mov
jb
aad
clc
or
jmp
xor
fnsave
adc
popf
cmpsl
cmovnp
push
ss
sbb
mov
jecxz
and
js
dec
int
xor
bound
fcmovnbe
xchg
insb
mov
test
push
dec
sbb
test
adc
push
xlat
outsb
mov
movsl
jns
rcrb
call
test
add
push
xlat
rolb
mov
imul
adcb
inc
test
push
clc
jge
imul
jle
push
fcoms
cmp
hlt
mov
insb
sbb
lea
pop
ret
int3
xchg
jnp
push
adc
xor
nop
cmp
push
cmp
add
pop
push
notb
testb
sub
or
xor
call
loope
cmp
sub
ss
adc
sub
nop
insl
dec
mov
inc
pop
cli
adc
push
cltd
mov
jmp
mov
jp
loopne
in
lcall
adc
sub
rcll
js
icebp
jl
gs
lods
push
sarl
cmp
lock
js
or
jo
xchg
mov
or
or
sbb
push
add
lret
jae
lahf
aam
repnz
sbb
ret
add
outsl
adc
mov
push
inc
ror
xchg
movsb
or
jne
dec
rcl
cmc
sahf
pop
or
push
mov
leave
xchg
and
loop
dec
mov
scas
sbb
sbb
mov
adc
dec
xor
and
pop
inc
push
xorb
sbb
andl
aam
rorl
ja
sbb
mov
sub
fsubl
jl
or
sbb
dec
das
add
add
xchg
xor
mov
shll
imul
sub
dec
pop
jb
dec
xchg
fidivl
scas
arpl
fistpll
mov
les
ret
pop
pop
sbb
movl
dec
stos
test
fistl
sbb
pusha
pop
fcomps
inc
cltd
mov
ret
xchg
ds
and
xchg
stos
mov
add
scas
stos
leave
cmp
xchg
inc
add
jp
test
mov
ret
gs
cmp
cmp
sub
sbb
jbe
add
loopne
adc
sbb
push
pop
xchg
cmc
xchg
mov
sbbb
stos
and
es
or
mov
xor
icebp
add
pop
adc
pop
inc
and
bound
jl
aam
insb
ljmp
js
jg
adc
std
sub
or
mov
imul
movsb
inc
or
add
out
mov
into
lods
adc
hlt
aad
cmc
jp
pop
jno
test
sbb
js
push
outsl
dec
insl
mov
ljmp
or
xchg
or
andb
outsb
rcrl
sbb
call
call
mov
cvtpi2ps
and
mov
test
add
in
mov
mov
cmpsl
sahf
imul
mov
ljmp
xchg
or
cwtl
push
mov
adc
ror
sbb
aas
rcll
lret
sbb
daa
scas
rolb
push
push
jo
and
jecxz
jecxz
shll
arpl
add
ljmp
sbb
dec
adc
shlb
or
js
xchg
dec
fwait
lods
push
or
sub
or
lret
call
andb
inc
push
cmp
push
lahf
mov
cmp
pop
shlb
add
inc
nop
xchg
bound
mov
dec
sbb
lahf
roll
pop
xor
lock
sbb
js
xchg
sahf
mov
mov
bound
movsl
add
mov
pop
dec
push
sub
mov
test
jne
add
jno
cmpsl
or
sub
cmc
inc
push
and
pop
cmp
inc
popa
dec
cmp
fldt
pop
dec
and
idivb
adc
sbb
adc
popa
stos
xor
movsb
mov
or
lods
pusha
add
add
jbe
movsl
imul
jl
pop
add
sbb
inc
dec
test
adcb
mul
fildl
or
xchg
mov
lods
push
and
iret
lods
add
mov
lea
add
mov
movsl
sbb
add
cli
data16
mov
lods
mov
or
mov
xrelease
xor
addl
adc
inc
rcll
faddl
sub
movsb
data16
inc
jmp
jno
pusha
ljmp
sub
movsb
lods
cmp
or
lock
xor
dec
cmpsl
xor
push
xchg
pop
or
dec
psubusw
and
rclb
test
jae
pusha
adc
pop
das
sub
dec
popa
leave
gs
daa
xchg
fs
sub
mov
adc
mov
gs
enter
mov
xchg
ljmp
mov
inc
dec
outsb
sub
roll
mov
and
xor
nop
adc
and
dec
or
push
or
and
stos
xchg
cmp
shll
dec
das
jl
pop
dec
pop
outsl
mov
sarl
dec
pop
cmp
jmp
mov
sarb
sbb
test
add
sub
movsl
or
test
push
loope
call
and
cmp
test
pop
and
popf
sbb
nop
xor
out
rcll
ret
sahf
or
cmp
addb
sub
imul
sahf
or
test
mov
js
add
sbb
ds
cmp
mov
and
fdivs
pop
sbb
pop
daa
sub
jl
js
adc
sbb
adc
sbb
ds
and
test
into
or
inc
subl
dec
adc
push
js
cmp
xchg
push
sahf
loopne
jno
nop
popf
jo
in
gs
lea
popf
sbb
ret
movsl
push
sbb
push
add
xchg
nop
add
xor
adc
test
sti
sbb
test
mov
cmp
aad
leave
pop
icebp
ss
inc
inc
inc
outsb
adc
loope
pop
push
shlb
adc
adc
inc
ret
cmp
mov
lods
cld
fdivrl
in
add
popa
cmp
or
adc
mov
push
lods
stos
push
or
or
and
jnp
mov
outsl
or
mov
push
adc
rorb
push
sub
push
dec
loop
push
jne
jl
pop
sbb
xor
mov
je
dec
adc
mov
pop
adc
or
xor
or
jle
nop
sub
pusha
add
mov
or
rcrb
add
mov
ret
test
daa
sbb
sbb
mov
mov
scas
scas
pop
mov
add
imul
cmp
rcrl
push
mov
inc
adc
xor
orl
xchg
cs
fs
sbb
inc
jge
jnp
inc
or
jle
adc
sbb
push
es
adc
and
fistps
lods
int3
push
push
mov
pop
jo
mov
jo
add
inc
inc
rolb
mov
sbb
or
and
je
jp
sbb
add
mov
rorb
dec
push
cmp
jno
push
jp
push
xchg
je
loopne
or
int3
add
sbb
push
and
imul
mov
mov
je
nop
popa
cmp
hlt
cmc
or
addr16
test
loop
stos
rorl
pusha
push
fisttpl
adc
cs
test
mov
or
adc
cltd
mov
cmp
or
jmp
xor
push
repnz
mov
push
pop
push
jp
cmp
xorb
jo
inc
sbb
insb
loope
inc
loopne
xchg
mov
cmpsb
into
inc
addr16
push
push
orb
inc
xor
roll
sub
xchg
xor
loopne
inc
jl
pop
rorl
dec
pop
mulb
push
push
sti
pop
push
dec
push
sub
mov
adcb
mov
adc
loop
mov
mov
cmp
mov
sub
fwait
into
inc
cmp
add
lods
xchg
mov
loop
add
push
movsb
fildl
xlat
fwait
sbb
rol
das
loop
add
cmp
ret
add
xor
mov
mov
sbb
dec
inc
dec
or
filds
add
out
push
xchg
rol
clc
lcall
scas
pop
imul
test
addr16
jmp
fisubrl
jp
movsb
int3
js
inc
rcrb
loop
sbb
insb
xor
and
or
dec
rolb
mov
nop
in
test
sahf
push
loop
xor
fisttpll
subl
or
or
lret
inc
lret
sub
or
lods
jl
js
add
xor
leave
ret
push
cmpsb
les
nop
mov
test
fs
mov
push
push
mov
call
rorb
jbe
adc
mov
mov
sbb
mov
call
add
sub
pop
test
jne
xchg
scas
mov
pop
and
and
sub
mov
adc
push
mov
mov
and
mov
push
pop
cs
jge
lea
push
push
dec
jl
mov
testb
je
outsb
addr16
mov
aam
add
pop
cmp
push
fwait
adc
inc
add
add
or
jge
mov
mov
or
and
paddd
pop
pop
ret
mov
cmpl
fistpll
mov
and
adc
pop
pop
lahf
rorb
je
rorl
mov
je
mov
cmp
add
sbb
push
add
add
and
or
push
jl
outsb
jmp
and
pop
cmp
in
jne
cmp
aad
mov
sub
mov
mov
mov
lock
cmp
adc
mov
jno
pop
inc
xorb
adc
loopne
inc
xor
xor
adc
test
and
cmpl
add
in
in
mov
pusha
and
xchg
pop
jnp
ss
mov
nop
jae
loope
add
out
loope
push
test
jns
lock
iret
mov
or
pop
je
jbe
hlt
pop
or
mov
sbb
cmp
jne
andl
mov
xor
push
mov
add
add
adc
push
lcall
mov
bound
push
outsb
test
aam
rcll
mov
daa
lea
dec
add
fiaddl
fs
inc
cmp
cmp
mov
sarl
loop
jle,pn
cmp
das
dec
or
inc
pop
sbbl
addl
cmp
nop
sub
cmp
icebp
push
scas
or
push
cmp
mov
out
imul
sahf
rcrl
lock
pop
jmp
shll
pop
pop
push
sbb
cld
mov
or
jmp
inc
or
inc
sarl
iret
sub
pop
leave
bound
testb
xor
je
lea
add
mov
jae
cmp
jne
push
sbb
fisubs
or
cmp
sbb
rcrb
pop
fmul
ja
or
mov
jp
sbb
push
cmp
jne
mov
inc
push
je
test
xchg
movzbl
pop
jle
inc
mov
sbb
out
jmp
cmpb
or
jbe
inc
int
sahf
fstpl
and
push
into
scas
push
aad
divl
fstpt
sbb
jp
push
in
xor
dec
cmp
je
cmp
je
inc
fisttps
xchg
pop
push
add
call
leave
push
lea
cmp
mov
xor
jns
pop
cmp
cmp
je
push
push
jae
call
xchg
and
fdivrs
pop
push
pop
push
pushl
icebp
pushf
pop
jmp
fdivrp
les
std
outsb
jne
pop
decl
sub
xchg
pop
mov
or
add
cmp
add
push
jnp
push
mov
push
xor
incl
mov
cmp
sahf
mov
adc
push
push
push
fs
js
push
push
push
aas
jle
mov
push
cld
or
test
or
dec
dec
xchg
and
mov
imul
adc
mov
cmp
rol
cwtl
sbb
adc
lds
and
jge
movl
imul
cld
cli
aaa
cmp
dec
add
sub
push
add
cli
jecxz
out
jl
test
je
shl
orb
fildll
push
test
loopne
adc
aad
into
in
fdivrl
add
add
cmp
inc
cmp
mov
inc
mov
testb
ror
in
stc
lret
or
adc
jne
jne
dec
bound
decw
sbb
pushf
add
mov
push
add
das
enter
jo
mov
incl
mov
scas
or
add
inc
jmp
and
sub
ret
add
cmp
or
inc
pop
orb
outsb
or
sbb
jecxz
shlb
sbb
xchg
ret
shr
mov
dec
test
add
mov
movb
inc
bound
repz
cmovle
jle
or
divb
add
sbb
imul
jno
add
add
jg
popa
mov
sbb
daa
sbb
insb
pop
lds
mov
dec
hlt
push
jbe
add
inc
sub
xor
and
mov
push
jne
aad
push
cld
pop
fld
xchg
test
inc
addr16
jbe
cmp
cs
mov
ds
jg
ret
outsb
or
mov
sbb
inc
mov
pop
cmp
sbb
outsl
cli
int
add
push
mov
call
push
jmp
xor
fldt
je
cmp
jmp
and
inc
sbb
sbb
cld
daa
pop
mov
push
cmpl
add
roll
dec
dec
or
fisubrl
je
rorb
idiv
or
sub
or
fidivl
call
jmp
scas
or
mov
es
xorb
pop
pop
pop
xchg
jnp
ret
sub
mov
sub
fs
push
shrb
lret
add
lea
insb
lock
fiadds
andl
jb
pushf
movb
mov
aas
jmp
inc
lds
mov
repnz
lcall
adc
cmp
stos
add
cmp
mov
fsubrp
test
cwtl
add
mov
cmp
pop
out
mov
shll
pusha
or
cmp
inc
push
roll
or
add
fwait
jl
jmp
mov
and
push
cmp
loopne
test
clc
mov
cmp
test
jne
push
push
push
adc
test
inc
and
pusha
subl
cmpsl
dec
rolb
cltd
pop
test
mov
mov
idivl
add
fildl
xor
jne
add
sbb
nop
push
pop
jmp
push
sbb
ret
dec
neg
sbb
cmc
sbb
mov
cli
clc
cmp
pop
push
loope
and
inc
ds
push
orb
adc
push
clc
jne
or
add
addb
add
sub
insl
dec
pop
or
mov
pushl
pop
cmp
pop
insb
mov
rorl
loope
out
jo
fistps
in
pop
or
cmpl
ret
sub
je
xor
mov
cmpl
dec
int3
push
les
jl
fs
leave
nop
or
adc
inc
jmp
adc
dec
xor
push
cmp
jl
fdivrl
push
scas
leave
call
push
leave
call
insb
push
lea
test
pop
test
fwait
sbbb
fwait
mov
in
stos
dec
testl
push
icebp
je
mov
mov
divl
mov
adc
incb
inc
fs
and
mov
je
jno
lds
aam
ds
dec
and
fsubrs
or
jl
out
adc
jb
fidivs
bnd
ret
popl
jo
sbb
fs
cli
stos
mov
shll
push
or
push
or
push
sub
mov
or
push
mov
test
adc
ret
in
filds
add
imul
ret
int3
push
inc
xor
pop
inc
xor
jnp
popa
xchg
rorl
ss
or
testl
insb
andb
inc
adc
cmpsb
loopne
ss
andl
jbe
je
push
push
lea
push
push
pop
pop
orb
mov
js
dec
push
sbbl
xor
pop
or
std
mov
or
mov
jmp
fldl
xchg
mov
xchg
jmp
mov
mov
jg
sub
in
fldt
je
mov
push
push
sbb
ret
pusha
lea
loopne
sbb
shlb
shl
js
imul
xlat
int3
clc
pop
aas
inc
fcom
mov
in
movsb
sbb
push
or
xor
mov
je
pushl
or
inc
mov
mov
icebp
push
mov
shl
cmp
xlat
dec
sbb
fstps
loopne
and
push
cli
jmp
and
ss
icebp
testl
push
adc
out
mov
mov
pop
pop
and
punpckldq
adc
pop
lret
sub
push
push
clc
sbb
add
and
enter
cs
cmp
pusha
inc
into
cmpsb
jge
and
lods
cmp
and
mov
cmp
push
cmpsb
and
and
and
jo
lods
dec
cwtl
lcall
adc
cmpsl
popaw
mov
ss
sub
adc
dec
sti
jl
in
ljmp
scas
cmp
ret
pushf
pushf
jl
in
mov
xchg
jns
add
cmp
shr
xor
incb
decl
jne
push
push
scas
clc
pop
test
adc
cmc
subl
or
adc
adc
fldl
or
jne
inc
addl
sar
sub
fildl
jl
mov
movzbl
cs
or
cmp
sti
push
movzwl
repnz
cmp
mov
sbb
adc
out
and
fisubs
cmp
mov
xor
mov
mov
test
adc
xor
cwtl
iret
out
mov
je
xor
push
stos
call
pop
cmp
ret
loopne
and
andl
mov
loopne
jne
rep
stos
mov
jecxz
push
cmpb
mov
test
subb
inc
incl
addl
xchg
dec
movsl
enter
inc
out
andl
lahf
lea
clc
inc
pop
mov
sahf
sub
je
mov
ja
mov
sbb
add
cmp
ja
sub
mov
out
jo
nop
popl
jbe
inc
inc
cmpb
loope
lcall
cld
add
roll
mov
int3
pop
push
mov
push
and
ret
mov
jle
jge
mov
jns
loop
lret
in
fucomp
or
inc
cmp
jno
jo
in
test
push
rorb
add
stos
add
push
loope
pusha
or
pop
cmpsl
sub
orl
fmuls
mov
sub
mov
jo
mov
cwtl
jne
dec
ficoml
push
pusha
ljmp
mov
sub
mov
cld
jne
mov
sub
add
je
nop
je
test
or
je
movsb
mov
int
or
push
or
push
popa
shll
jecxz
addl
pop
rcrl
out
push
in
push
push
inc
inc
dec
in
inc
sub
mov
mov
or
jb
mov
movb
push
lea
jg
push
push
jo
adc
shll
enter
inc
mov
jg
mov
shr
or
and
rep
inc
inc
mov
out
mov
push
push
in
cli
call
sbb
jb
adc
pop
mov
inc
std
cmp
xchg
pop
mov
pushf
cmp
rcrl
dec
in
ljmp
pop
xchg
lea
test
je
pop
in
mov
adc
nop
loopne
sbb
add
inc
cmp
mov
mov
or
mov
sti
ret
inc
in
inc
jb
or
xchg
enter
mov
in
pop
xor
adc
jp
push
popf
cmp
and
loopne
or
mov
idiv
adc
test
xchg
xor
sbb
push
clc
xchg
pushf
je
pushf
scas
jmp
sbb
xor
mov
pop
push
sti
jmp
sbb
push
mov
jmp
lea
pop
ficoms
roll
iret
cs
aad
add
cmp
mov
xor
lock
and
jg
shrl
mov
dec
and
cli
add
bound
add
int
scas
mov
or
std
jmp
cld
rorb
mov
inc
int3
mov
inc
vunpcklps
shr
dec
pop
mov
push
insb
sarl
xlat
loope
xor
ret
pop
cli
daa
test
jo
cmp
cmp
andb
inc
ficompl
mov
insb
mov
sub
xorl
test
and
lret
push
pushf
cmp
adc
daa
lahf
rcr
mov
sub
add
mov
mov
in
mov
push
je
jo
add
test
lock
pop
add
adc
adc
xor
xchg
mov
adc
jb
and
sub
ret
adc
std
cld
mov
ficoms
jne
sub
xor
cmp
cld
js
jbe
clc
jb
sbb
fildll
inc
jb
rep
jmp
inc
popl
jg
sahf
out
hlt
jb
and
test
jns
in
rorl
nop
or
push
cmp
mov
mov
pusha
mov
or
lods
pop
repnz
mov
dec
sarl
dec
add
add
fsubrp
nop
cmpsb
nop
inc
inc
inc
inc
jg
jns
jnp
or
push
int3
push
les
lods
movsb
pushf
mov
mov
out
sahf
out
call
out
sahf
lock
hlt
clc
clc
cld
push
adc
jne
scas
sbb
or
mov
iret
mov
nop
add
adc
pop
mov
push
xchg
nop
cmp
repz
sbb
or
je
into
jl
cld
jmp
repz
or
xchg
xor
sbb
mov
lret
xchg
xor
out
popf
sbb
nop
push
cwtl
push
mov
mov
add
dec
lods
mov
adc
inc
fisubl
add
nop
dec
shll
add
dec
dec
orl
fidivs
cmp
dec
push
pop
sahf
out
jns
ja
sbb
sbb
out
sbb
adc
out
sahf
out
or
or
out
xchg
add
or
ret
repz
mov
mov
add
pop
jnp
adc
daa
outsl
push
push
push
fbld
imul
cmpsb
loopne
fidivs
aad
xchg
clc
push
xor
sub
push
push
ja
mov
push
jne
sub
jp
pop
inc
cmp
and
add
std
cmp
test
mov
je
sub
daa
jmp
push
adcb
repz
mov
loope
dec
shlb
or
fstp
int
xchg
mov
xor
pop
or
into
push
ds
jge
aam
or
cli
inc
dec
jb
jmp
test
lods
jnp
test
add
jno
jl
jle
pop
sbb
cld
push
shr
cli
jp
imul
es
jge
mov
inc
xor
xor
adc
roll
clc
jne
sarl
jge
push
dec
pop
push
or
iret
jbe
mov
cmp
les
xchg
or
mov
jae
mov
pusha
shr
lea
not
and
decb
push
ljmp
mulb
shl
pop
inc
mov
outsl
insb
dec
push
jns
mov
mov
lahf
adc
clc
sbb
sbb
insb
sar
add
aas
testb
adc
shlb
cs
mov
xor
and
roll
mov
dec
pop
cmp
dec
jbe
mov
lret
cmp
scas
ss
cmpb
jbe
cli
jle
imul
gs
sub
jl
jnp
lret
and
cs
fldt
pop
inc
xchg
jnp
or
sahf
cwtl
movsl
jle
jl
pop
add
cs
or
and
cmp
sub
jl
push
mov
outsl
repnz
pop
dec
mov
or
cs
arpl
sbb
and
mov
jae
cmpb
push
mov
shll
jmp
or
sbb
jmp
dec
sub
in
std
adc
pop
add
cmp
aas
cld
pusha
test
cmp
sbb
inc
inc
enter
lods
fidivrs
mov
fisttps
mov
jo
loope
add
movsb
andb
push
fcomip
sahf
pop
int3
aas
cmp
push
or
jbe
jnp
jae
adc
push
decb
lock
adc
inc
andl
and
ss
jne
push
pushl
mov
adc
mov
jmp
pop
test
add
and
enter
cli
mov
adc
push
lea
push
xchg
mov
mov
decl
jbe
imul
cmpsb
sub
jmp
mov
pop
mov
cltd
int
rclb
cmp
pop
aaa
jecxz
aam
dec
pop
in
lock
cld
mov
pop
shr
sbb
mov
jmp
aam
adc
je
not
call
sbb
fdivrs
fistps
lahf
call
and
decb
iret
jne
add
cmp
jb
jae
fnstsw
jne
mov
cmp
dec
adc
in
jmp
xor
dec
jae
cmpl
testl
in
es
es
out
aam
sti
testb
rcrb
or
cltd
lods
pop
mov
mov
mov
pusha
pop
icebp
jp
jne
jmp
sub
mov
xchg
pop
mov
insl
add
and
jo
push
mov
aaa
sbb
or
mov
jne
mov
or
or
push
call
add
mov
mov
in
dec
scas
into
jne
int
mov
enter
jl
shl
inc
jmp
mov
stc
xchg
sub
cli
icebp
test
add
cmp
jle
pop
cmp
cli
je
adc
popa
inc
jge
mov
clc
cmp
shll
lea
out
and
mov
decb
jne
stos
subb
and
jmp
das
push
sub
insl
inc
inc
and
push
insb
xor
mov
adc
jp
fs
push
fdivr
add
ljmp
fstps
xchg
push
jl
test
xor
push
gs
test
in
scas
push
std
or
mov
or
mov
scas
adc
cmp
loopne
jl
jmp
push
or
sbb
add
mov
mov
aaa
aam
je
mov
mov
cld
int
jge
fs
inc
add
xor
mov
inc
lea
jne,pt
sbb
out
pop
mov
cmp
hlt
hlt
das
pop
xlat
and
adc
mov
movsb
cmp
pop
and
jne
mov
pop
aad
mov
push
das
pushf
cmp
je
cmpsl
sbb
or
cmpl
kandw
or
daa
pop
adc
je
cmp
adc
fs
xor
sarb
or
adc
jbe
leave
je
rcl
data16
dec
dec
mov
push
push
add
lds
mov
test
sahf
pop
add
mov
addb
imul
push
insb
xorl
inc
or
add
cmp
or
out
add
push
push
addb
cld
cmpsl
aad
mov
xchg
add
scas
push
push
cli
ja
lea
dec
in
mov
psubsb
mov
or
inc
cld
lock
cmp
pop
dec
dec
add
sub
sub
jbe
add
adc
add
or
add
mov
dec
or
mov
jbe
push
inc
fs
inc
test
pop
mov
mov
push
test
hlt
mov
jne
or
mov
pop
lret
shr
cld
push
lret
pushf
inc
mov
pop
add
dec
add
addr16
addr16
mov
lods
sar
or
fs
and
shr
jnp
cld
push
sub
or
fucomi
add
push
call
jnp
push
and
sbb
push
and
adc
out
lcall
pop
pop
push
jp,pn
push
mov
ljmp
movb
and
loop
jne
jmp
imul
and
inc
dec
je
and
aas
jne
pop
push
pop
idivb
cmp
jecxz
je
inc
cmp
iret
clc
adc
pop
ret
mov
ja
fdivl
or
and
enter
xor
jno
and
xor
repnz
add
sub
or
adc
das
jne
jb
sbb
push
dec
lock
shlb
cmp
insl
or
pusha
jne
inc
push
repnz
test
sbb
inc
and
pop
nop
jne
pusha
test
push
push
push
pop
push
popa
cmp
scas
jecxz
and
mov
sub
inc
pop
popa
sti
int3
jmp
inc
cmp
dec
and
aaa
jnp
push
sub
jle
decl
mov
adc
pop
pop
pop
rcl
fisubl
sbb
aas
xchg
mov
mov
xchg
lret
mov
lret
mov
xor
lret
jae
and
pop
add
ret
adc
outsb
and
dec
subb
mov
cmp
or
or
dec
cmp
and
push
mov
mov
xorl
add
stos
jmp
call
in
int
and
push
cwtl
fadd
loopne
rcrl
xor
dec
lock
cmp
je
testb
je
jl
pusha
roll
mov
stos
jg
dec
addl
bound
decb
imul
or
data16
out
shlb
cli
fbstp
enter
lock
data16
push
add
sub
push
push
sbb
xor
je
lods
movsl
lock
gs
dec
push
rclb
lcall
fadds
icebp
dec
and
sbb
add
jo
push
ret
adc
pop
cmp
inc
in
mov
and
dec
mov
inc
in
inc
push
xchg
push
mov
stos
call
pop
mov
sbb
xchg
or
js
push
sbb
push
sbb
push
pop
push
mov
loopne,pt
je
lret
push
dec
or
lock
hlt
faddl
push
push
lock
push
jmp
pop
negb
mov
cmp
sub
jmp
jmp
cmp
shlb
pushf
adc
inc
inc
out
inc
add
mov
add
or
dec
je
fisubs
xchg
push
mov
hlt
jb
neg
stc
pop
popa
add
push
sub
into
dec
rcl
sub
rolb
or
push
fimull
je
rep
je
inc
dec
test
fxch
ds
push
push
jg
test
sar
test
nop
rolb
cld
sbb
push
jb
dec
jg
test
jnp
in
test
or
push
mov
out
test
fs
push
ljmp
repz
push
ror
in
scas
mov
inc
mov
and
pop
push
js
push
xchg
jp
jg
inc
mov
inc
mov
iret
jnp
hlt
push
cld
sbb
push
or
sbb
mov
jg
iret
jnp
aas
or
pop
push
dec
jg
push
jnp
loopne
cmp
sub
scas
sub
jae
or
add
loope
inc
add
jb
mov
or
mov
in
js
lock
in
mov
in
cs
lret
add
add
aam
iret
push
inc
rolb
incl
int
out
add
jb
outsb
je
insl
and
jb
jb
add
or
pop
testb
and
inc
add
in
cmpsl
and
push
xor
cmp
sub
insb
out
in
in
aaa
je
and
imul
outsl
dec
scas
jl
aaa
outsb
outsl
je
or
push
arpl
not
inc
data16
imul
adc
jae
fs
imul
lret
jne
push
jbe
jb
jne
data16
jnp
push
dec
arpl
arpl
insb
push
mov
and
gs
das
mov
adc
and
out
lods
jge
cmp
bound
push
fs
push
shrd
jb
lcall
nop
outsl
or
jne
je
leave
fwait
insl
ljmp
arpl
loopne
bound
imul
rolb
jb
add
addr16
insl
dec
or
inc
xchg
insl
insb
pop
xor
xchg
adcb
ja
pusha
pop
push
cmp
sarb
push
jae
push
xor
imul
add
or
or
decl
shlb
hlt
sub
jae
inc
sub
and
dec
imul
lods
jns
or
inc
sbb
and
push
test
fimull
inc
mov
cmp
rorb
aas
cmp
ds
gs
popa
fs
add
gs
pop
jne
daa
pop
push
sub
jg
dec
push
gs
popa
addr16
outsl
js
add
dec
xor
ja,pn
dec
mov
popf
dec
push
jmp
pop
sahf
add
push
pop
lahf
xchg
mov
push
jno
add
jle
xor
pop
imul
js
add
arpl
dec
add
fldt
cmp
or
sbb
add
lea
xchg
pop
jb
mov
leave
and
push
mov
or
xchg
mov
adc
and
mov
mov
or
or
enter
hlt
adc
adc
jb
adc
adc
mov
sbb
xchg
and
sbb
push
js
cmp
inc
jns
jp
cld
sbb
dec
adc
mov
mov
pop
xor
dec
sub
ret
adc
add
add
cmp
cmpb
das
cmpsb
fisttps
mov
sbbl
mov
cltd
mov
cmovo
add
mov
sbb
in
mov
mov
push
add
mov
xchg
outsl
mov
xor
fcomp
loopne
jb
jle
xchg
push
dec
push
clc
add
mov
cmp
sub
cmp
dec
dec
add
test
cmp
mov
sub
shlb
and
mov
movsb
or
adc
push
push
adc
mov
mov
add
dec
gs
jo
insb
insb
outsl
arpl
ja
push
dec
outsl
fs
gs
popa
outsb
or
lahf
jge
hlt
push
je
data16
outsb
outsw
and
insl
insl
sbb
outsb
inc
push
gs
jle
dec
push
test
arpl
dec
int
je
push
mov
push
mov
arpl
push
outsb
push
jo
adc
pmulhuw
insb
add
sbb
popa
insl
mov
jb
gs
frstor
push
rorl
jae
nop
fidivrs
fs
les
outsl
dec
mov
sahf
std
pusha
inc
jns
mov
sub
xchg
stc
lret
shll
add
sar
in
push
inc
push
jns
sbb
jb
jl
imul
rcrl
dec
fs
popa
insb
jne
sbb
loope
xor
sub
dec
inc
std
inc
push
shr
in
jl
pop
inc
gs
dec
jns
cmp
push
push
push
fidivl
adc
insb
sbb
mov
fcoml
arpl
xchg
ficoml
aad
adc
in
je
outsb
movsb
mov
sub
push
aas
sti
sub
movsl
push
rcll
inc
push
or
mov
and
gs
inc
fs
and
inc
rorb
sub
pop
pusha
sbb
inc
or
pop
inc
inc
dec
sub
sbb
jmp
mov
inc
pop
push
push
movsb
arpl
in
inc
mov
or
mov
xchg
and
mov
push
into
push
and
sahf
je
cld
roll
mov
jno
bound
rorl
sbb
push
jg
lahf
cmpsl
fsts
call
sar
cwtl
mov
cltd
mov
fcompl
dec
jae
sti
loopne
sbb
outsl
jmp
adc
sbb
cmpsb
insb
inc
jno
sbb
into
shrl
in
lea
push
shrb
imul
test
sub
subb
jne
jl
dec
sub
sub
insl
daa
inc
insb
addr16
jne
dec
sbb
dec
inc
out
xor
jnp
adc
add
fmuls
lock
add
add
incl
inc
add
push
sub
and
push
jg
mov
mov
inc
add
push
add
jns
jns
shr
std
mov
jge,pt
add
xor
pop
add
cmp
pusha
or
out
xor
popf
insb
mov
add
syscall
add
xor
add
lcall
jl
adc
outsl
sti
aaa
add
add
cs
test
mov
in
std
pop
shrl
push
add
inc
sbb
fs
lahf
insl
in
lcall
jbe
push
add
add
cli
shrb
dec
sub
cmpsb
mov
inc
add
pop
push
je
imul
push
sti
pop
dec
repnz
aam
jle
add
arpl
fmull
push
xchg
or
sahf
not
outsb
inc
adc
repz
jle
push
xlat
cs
outsb
pop
shl
or
sbb
or
adcl
mov
xor
dec
imul
aaa
into
lock
andb
xchg
cmp
pop
jae
fdivp
xchg
pop
adc
lock
sbb
adc
cmp
pop
clc
inc
popa
jnp
rcrl
mov
into
ret
adc
pop
lcall
adc
fisubrl
xlat
fidivs
roll
xchg
cmp
inc
add
push
ret
cmpsb
mov
es
sbb
fiaddl
push
mov
jnp
scas
cmpsb
jge
fbstp
movsb
repnz
xchg
data16
push
loopne
xchg
push
sub
add
cmc
mov
lcall
or
add
mov
mov
test
inc
ja
ret
mov
rolb
imul
dec
cmp
add
sti
shl
and
dec
cmp
xor
jge
js
fadds
add
push
test
rol
lock
std
sahf
jbe
enter
add
push
flds
pop
add
mov
lcall
test
aam
sub
fiadds
adcl
add
pop
lods
in
sbb
scas
cmp
xchg
xchg
imul
hlt
mov
cld
inc
shll
xchg
inc
add
imull
jp
dec
lahf
xchg
sarb
add
add
hlt
shll
call
push
out
jae
sbb
jne
icebp
adc
add
enter
lock
pop
or
cmpsl
cmpsb
mov
stos
loope
xchg
into
jle
movsb
xchg
fidivrs
or
lock
cmp
xchg
inc
aad
fwait
xlat
cmp
or
dec
add
add
testb
or
test
mov
add
pop
dec
add
repnz
inc
add
jno
sbb
push
addb
mov
add
dec
roll
xchg
add
mov
aam
rolb
xor
fwait
imulb
add
mov
test
lret
andl
and
inc
add
loopne
stos
sbb
pop
sub
add
rcl
outsl
jg
out
push
lods
cmp
imul
stos
add
leave
addr16
hlt
add
mov
jp
dec
lock
bound
inc
pop
mov
add
bound
cmp
and
jp
sbb
fs
int
lods
pop
and
inc
inc
pop
sar
rclb
add
jns
xor
adc
push
lock
clc
adc
cmp
cltd
mov
test
cmc
jl
xor
add
and
add
test
or
inc
imul
iret
add
xor
lock
add
arpl
ss
mov
inc
es
sahf
stc
sar
call
or
add
pop
enter
hlt
ja
dec
fadds
pushf
out
push
pop
out
lock
or
add
cmpsl
ds
clc
js
push
bound
cmp
add
dec
pop
testl
mov
xchg
negb
xor
adc
pop
mov
sbb
xor
xor
or
cmp
adc
mov
or
push
push
push
test
cmovl
xor
inc
or
adc
or
call
inc
jecxz
xor
aas
push
adc
xor
imul
mov
and
push
xor
adc
push
sbb
jg
pop
sbb
adc
pop
inc
imul
movlps
or
inc
adc
or
adc
push
enter
or
xor
xor
insl
sti
cs
mov
and
adc
pop
adc
or
push
inc
adcb
add
add
push
outsl
sbb
adc
xchg
adc
or
push
movups
xchg
add
push
ret
sbb
pop
add
repnz
cmp
sub
sbb
add
dec
push
or
sbb
sub
sub
add
sub
or
or
or
or
push
dec
add
push
sbb
adc
or
mov
insl
mov
loop
inc
cmpsb
cmp
adc
push
cmpl
or
cwtl
adc
or
adc
cmp
adc
pop
jo
fwait
das
inc
or
push
sbb
xor
lods
sbb
pop
lods
inc
add
adcb
and
sbb
aaa
out
stos
paddsw
or
push
add
add
inc
fmuls
add
adc
mov
loopne
sub
add
bound
dec
adc
add
mov
cmp
jae
je
push
inc
inc
dec
jne
loope
push
adc
mov
pop
ljmp
push
add
inc
outsl
jae
inc
adcl
fidivl
les
jmp
inc
jle
inc
lock
xor
sbb
cmp
dec
push
scas
cmp
cmpsb
add
mull
jb
inc
cmp
pop
stos
add
cs
dec
sbb
rolb
mov
fsubr
dec
rcrb
loopne
int3
js
iret
or
and
push
test
inc
les
mov
fadd
add
sti
add
and
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
