dec
inc
push
dec
pop
push
xchg
pusha
call
pop
mov
add
add
mov
mov
add
shr
je
mov
xor
sub
stos
rcl
loop
cmp
je
add
add
jmp
popa
pop
cltd
mov
scas
mov
sub
adc
dec
jmp
mov
pop
push
xchg
adc
dec
in
cmp
popl
fsubrs
xor
sti
scas
lock
insl
decl
mov
adc
cmpsb
xor
xchg
mov
lret
xchg
aaa
dec
and
in
cmc
add
pushf
or
test
mov
push
xchg
pop
adcb
xor
pop
mov
or
cmp
mov
or
push
lods
jbe
setle
sbb
fcmovb
jecxz
dec
jnp
fidivs
pop
mov
int
mov
or
xor
push
scas
cmpps
jp
xor
inc
ljmp
sub
sbb
sub
sbb
out
mull
loop
loop
push
mov
gs
mov
inc
pusha
enter
jecxz
dec
test
jp
push
adc
mov
pop
cmc
sbb
aaa
ret
ja
xor
mov
mov
test
jnp
or
sbb
ss
and
jb
xor
mov
pop
mov
incb
fs
adc
fldcw
pop
mov
xchg
dec
dec
in
out
ja
dec
stc
lods
pop
pop
leave
push
and
insl
mov
sub
sbb
mov
dec
adc
jno
xchg
fldenv
rolb
xchg
ss
es
shll
push
in
dec
int3
sub
xchg
pop
pop
push
in
imul
sub
add
mov
fstl
leave
ror
cli
or
out
ja
arpl
pop
sub
icebp
loopne
add
sbb
inc
out
mov
icebp
add
mov
std
mov
das
fimuls
imul
cmp
and
cwtl
xor
mov
nop
xchg
int
adc
or
out
add
inc
push
and
aaa
lods
scas
jbe
add
test
jne
xchg
out
mov
je
pop
cwtl
sub
popfw
pop
std
loop
scas
fcomp
andl
push
sub
test
icebp
fcoms
scas
sbb
add
adc
and
leave
mov
aam
clc
inc
adc
je
mov
aas
fxch
lahf
stos
fildll
cld
addl
inc
in
icebp
jo
xchg
mov
jne
xchg
push
rcrl
in
inc
xchg
push
cmp
sbb
adc
xor
and
push
pop
add
addr16
outsb
and
mov
aam
pop
mov
data16
sbb
jge
test
es
pop
lahf
in
cmovo
xor
xorl
sbb
push
lahf
std
jmp
add
adc
dec
fwait
lcall
jecxz
cmp
addl
push
sub
cmp
dec
xor
cmp
test
nop
mov
int
pop
enter
jb
repz
sub
ret
test
xchg
add
and
cltd
es
out
dec
test
xchg
dec
movsb
arpl
dec
dec
shr
je
lcall
es
cmp
cwtl
ret
subl
sub
xchg
pop
inc
sub
dec
call
inc
xor
insb
pop
js
aaa
xor
xchg
add
std
ret
sub
inc
test
stc
pop
inc
push
faddl
cli
cld
andl
test
mov
cmp
je
les
jae
add
pusha
mov
iret
int3
inc
cmp
lods
cmp
push
mov
push
lahf
insb
in
mov
ficoml
inc
mov
iret
pusha
pop
pop
test
xchg
cmp
push
cs
sbb
ret
mov
arpl
es
fistps
inc
cmp
hlt
add
loope
sti
xor
dec
sbb
ds
mov
or
mov
shlb
xor
shll
sub
jns
mov
push
stos
dec
mov
sbb
pop
stc
and
and
sbb
out
push
mov
jle
das
std
xchg
in
jl
in
xchg
inc
and
data16
mov
je
in
mov
and
xchg
nop
adc
mov
js
lods
mov
imul
aad
fnstenv
push
cmp
fsub
mov
adc
pushf
test
stos
movl
movsb
nop
cmp
loopne
xor
dec
cmpsb
mov
mov
mov
int
movsl
outsb
adc
push
or
ljmp
pusha
arpl
sub
push
dec
test
adc
sbb
fxch
mov
and
orl
pusha
cmpsl
test
repnz
daa
jle
mov
mov
cld
dec
std
aad
into
xchg
fstl
hlt
or
sbbb
jmp
hlt
sbb
add
xchg
out
push
add
jge
lea
mov
fwait
pop
cwtl
push
fcmove
repz
ret
leave
cli
in
adc
mov
or
xchg
outsl
or
inc
jae
xor
sub
arpl
pop
outsl
ja
pop
mov
call
cmp
test
inc
es
sbb
fldenv
aas
inc
push
das
sahf
xor
andl
repnz
cmpsl
adcl
cmpsl
adc
push
mov
test
jbe
int3
sub
fildll
stc
das
sarb
dec
mov
les
xchg
call
pop
jmp
push
arpl
popf
pop
jo
into
nop
int3
imull
mov
sahf
loop
sub
jle
sub
es
cmp
adc
add
fcom
xor
arpl
xlat
fimuls
cmpb
sub
cmc
xchg
pop
push
mov
jecxz
cmpsb
movsb
add
loop
sbb
add
test
gs
push
sub
cmc
or
push
pop
dec
fldl
pop
or
call
clc
repz
gs
push
lods
pop
pop
fxch
nop
jbe
nop
insl
cmp
push
loopne
xchg
lock
mov
std
adc
mov
xchg
sub
stos
fnstcw
arpl
mov
mov
xor
fildl
mov
add
xchg
or
pop
fsubs
and
test
xchg
xor
fisubrs
xor
mov
jae
fsubs
xor
dec
notb
xchg
xlat
repz
in
fldl
xchg
sub
aad
scas
adc
push
jge
inc
inc
push
inc
iret
adc
mov
inc
pop
ds
jne
sbb
loopne
adc
adc
push
cmpsb
sub
jg
arpl
loopne
mov
stos
jne
pop
xchg
adc
cmp
add
shlb
or
ljmp
out
and
icebp
lock
aaa
js
cli
hlt
int
enter
jg
and
adc
add
and
jecxz
add
push
loop
lahf
je
ret
je
orl
popf
sub
shll
dec
pop
nop
jbe
fidivl
mov
mov
fcoml
mov
into
es
push
into
jle
iret
push
jnp
andb
rcl
xorl
inc
in
push
mov
xchg
sti
and
hlt
fsubrl
push
pop
add
pushf
adc
fists
inc
je
test
inc
sub
lret
call
aaa
stc
lcall
lea
test
mov
in
hlt
jae
idivb
mov
popf
shlb
outsb
pop
xlat
fstl
mov
cli
mov
lds
fwait
jne
xor
jge
mov
mov
dec
lock
jl
out
lea
fmuls
and
aad
push
ret
cmp
jmp
pop
mov
jb
mov
adc
cltd
cmp
aam
fildll
aad
add
pop
add
or
daa
imul
mov
roll
xor
aam
sub
xchg
inc
stos
sub
cmp
lcall
outsb
dec
xchg
mov
gs
das
add
leave
call
daa
or
cltd
ss
and
or
mov
push
sbb
dec
dec
cmpsb
jb
dec
test
xor
pop
popf
sub
cli
mov
loop
rorl
imull
ds
nop
adc
or
decb
lods
dec
out
xchg
clc
push
inc
pushf
xor
and
fistpl
push
mov
sbb
repnz
sbb
sbb
mov
inc
pop
xchg
and
push
data16
fcmovne
in
jge
ljmp
inc
sahf
lods
sbb
adc
insl
or
bound
jl
cwtl
mov
sbb
sti
mov
mov
dec
call
xchg
rcr
lret
in
aaa
enter
movsl
mov
cltd
ficoml
sbb
lods
test
into
sub
mov
push
js
ds
imulb
inc
jge
ret
rcrb
pcmpeqd
data16
pop
dec
shrb
dec
pcmpeqd
int
add
pushf
dec
insb
xchg
inc
call
fistpll
dec
ds
pcmpeqb
cmp
mov
xor
adc
repnz
rorl
addb
mov
and
cmp
adc
xchg
push
sub
dec
aas
les
mov
inc
loop
mov
jo
hlt
fldcw
mov
or
das
add
loopne
aam
fcompl
arpl
pop
mov
insb
cmpb
sti
shl
mov
clc
jbe
test
fstl
outsl
push
outsb
icebp
imul
std
dec
xchg
add
mov
xor
and
lea
hlt
mov
test
jp
mov
mov
test
pop
mov
pop
or
in
inc
not
jp
mov
adc
out
movsb
push
cld
mov
mov
cwtl
add
fiaddl
mov
inc
inc
loopne
inc
and
ss
jno
jg
mov
mov
scas
sub
mov
repz
orl
lods
addr16
sub
mull
cs
inc
das
mov
ret
rcrl
popaw
bound
pushf
std
push
dec
jb
setns
bound
sub
xchg
jmp
fs
xor
jecxz
dec
pop
or
and
mov
or
mov
rolb
sbb
xor
cmc
mov
pop
aaa
push
adc
mov
mov
or
movsl
sbb
subb
push
adc
mov
ss
add
add
xchg
mov
or
mov
pushf
dec
in
cmpsb
xchg
jmp
add
jg
or
mov
icebp
lods
and
cmp
mov
test
sbb
xor
scas
fldl
shll
pop
les
jecxz
inc
mov
push
out
push
scas
sub
sub
jb
sar
pop
cmpsl
test
xchg
mov
mov
cmp
mov
cmc
test
js
sbb
cmp
adc
mov
pop
add
jbe
dec
cmp
add
daa
xlat
ret
ja
iret
xchg
or
cld
inc
sbb
add
pop
or
imul
out
push
cmp
pop
daa
mov
push
loope
dec
xor
push
loop
test
aaa
arpl
pop
pop
sbb
addr16
push
ja
xor
mov
mov
mov
cmpl
jp
push
cld
ret
and
jo
push
and
add
jmp
int
stos
cmpsb
inc
jecxz
mov
inc
in
jp
mov
rdmsr
cmp
repnz
popl
mov
movsb
mov
in
mov
sub
clc
mov
inc
scas
mov
sbb
xchg
xchg
jg
repnz
and
outsl
mov
cmpsb
sarl
sbb
imulb
xor
ficoms
fstps
xor
dec
add
sbb
pop
add
and
xchg
sbb
jbe
cmp
movl
xchg
rclb
dec
sbb
push
lcall
lds
lret
mov
fmulp
jne
jb
bound
xor
jecxz
adc
push
repnz
adc
mov
pop
add
xchg
and
popf
pop
movsl
fsubrs
xchg
or
xor
inc
test
nop
pop
xor
popf
jg
rol
mov
pop
mov
loopne
pop
and
mov
jns
mov
in
iret
mov
hlt
xchg
pop
or
std
sub
xchg
inc
push
stos
pop
cmp
shrl
ret
cmc
insl
pop
sti
leave
pop
icebp
lods
lahf
shll
int3
addb
mov
fcmove
inc
cmp
ret
ds
mov
push
lds
cli
test
xchg
xchg
xchg
pop
jae
cmpsl
aad
test
sub
lret
cmp
jecxz
bnd
das
jo
repz
outsl
mov
push
ret
sbb
incl
jns
mov
pushl
insb
rolb
iret
ficoms
push
xchg
mov
std
mov
mov
mov
adc
les
dec
and
outsb
aaa
in
cld
xchg
mov
pusha
pushf
sbb
fstpl
dec
mov
jo
sbb
std
or
insl
lret
ret
lret
stos
bswap
add
cli
xor
add
and
push
and
adc
adc
orb
add
lods
arpl
scas
inc
xor
or
or
mov
repnz
repz
arpl
or
imul
js
add
adc
xor
je
mov
jle
mov
popf
mov
dec
clc
in
int3
push
pop
ficoms
repz
and
push
mov
sbb
pushf
and
cmpsl
adc
dec
test
jb
or
inc
nop
fimull
adc
bound
insb
fcoms
lahf
movsb
push
out
xor
cmpsl
insl
mov
rcl
dec
adc
lret
mov
ss
call
and
gs
cmp
bound
mov
ret
fadds
out
add
mov
mov
mov
or
fst
pushf
rol
icebp
xor
inc
movsl
fiaddl
arpl
pop
jae
adc
cs
pop
mov
sti
arpl
jp
add
mov
mov
shl
sbbb
adc
mov
inc
push
xchg
lods
push
cs
mov
inc
jne
mov
mov
xor
jnp
push
inc
xchg
in
lods
jo
xlat
jp
rorb
das
xchg
aad
fstp
fs
xor
mov
outsl
fstp
cmc
pop
lahf
inc
add
shrl
in
mov
jp
js
sub
dec
stos
in
insb
cs
clc
test
dec
add
aad
mov
stos
test
addr16
sbb
movsb
sbb
cmp
jecxz
sub
dec
subl
addb
call
sub
xchg
inc
adc
mov
jbe
or
jecxz
ffreep
sub
notl
dec
cs
dec
mov
je
shlb
int3
call
cwtl
mov
lods
dec
into
and
jb
mov
js
adc
adc
ret
push
push
mov
mov
es
lock
fdivrl
clc
push
cmp
inc
inc
addl
in
jmp
sub
inc
into
rcrb
out
in
lock
aas
push
inc
add
push
sbb
fsubrp
pop
mov
lea
cmp
addr16
push
and
loop
add
mov
hlt
xlat
mov
add
mov
ret
push
lret
or
pop
mov
mov
inc
sub
jp
xor
test
sub
add
ja
ss
div
dec
cld
and
cmp
inc
nop
jg
int3
or
scas
outsl
ss
das
pop
popf
stos
cmp
xchg
pop
cvtpi2ps
imul
es
dec
push
lret
les
mov
push
dec
pop
mov
pop
cmpsb
sti
imul
mov
and
pop
or
ljmp
sub
mov
pushf
cld
sub
pop
cmp
adc
cmp
dec
lahf
cwtl
nop
pop
push
scas
es
inc
ficoml
pop
mov
mov
cwtl
out
sub
mov
dec
bound
loopne
frstor
dec
sbb
lret
std
imul
sbb
xor
fbld
sbb
push
xchg
fmul
jno
dec
add
push
and
cmp
cmpsb
outsl
push
pop
pusha
gs
fucom
add
aad
fwait
mov
outsb
cmp
xor
xor
jae
leave
and
mov
mov
out
out
in
stos
fldenv
mov
push
cld
test
sub
ja
out
dec
pop
cmp
inc
jge
test
mov
sbb
mov
jno
mov
sub
sbb
sbb
call
xor
hlt
imul
popa
hlt
mov
addr16
jmp
or
cmc
pop
push
mov
cs
sti
xchg
rol
lods
mov
clc
or
fisubs
adc
movsb
pop
jne
pop
cmp
icebp
jno
inc
int
lret
dec
andb
inc
inc
add
pusha
loopne
mov
dec
adc
mov
jbe
dec
cmp
test
out
in
std
pop
and
les
hlt
addb
int3
add
xchg
imul
inc
and
not
movsl
mov
xor
stos
out
rcl
or
add
cwtl
rcll
push
push
mov
inc
pop
out
rorw
push
or
addr16
mov
xchg
mov
jno
sub
mov
sub
pushf
shlb
sub
test
jns
mov
call
cli
shl
inc
xchg
inc
stos
test
and
stc
cld
pop
add
jle
fsubs
cmp
dec
negl
stos
push
outsb
arpl
sarl
xchg
insb
test
inc
adc
ret
pop
xchg
push
movsb
pop
push
fwait
imul
lahf
xor
push
inc
pop
inc
cmp
ljmp
adc
adc
lea
mov
xchg
inc
in
lock
je
inc
in
jecxz
mov
clc
xor
adc
icebp
adc
cmpsl
repnz
data16
mov
repz
xor
mov
shl
arpl
and
addr16
clc
mov
dec
das
es
mov
fstps
mov
outsl
mov
mov
push
inc
push
inc
sarl
cmp
or
rcll
pop
mov
leave
in
and
test
mov
sbb
mov
in
sbb
lds
andl
gs
fldenv
stc
out
rclb
fwait
jecxz
adc
mov
jo
mov
lahf
mov
fistpll
sbb
enter
mov
adc
mov
jbe
xor
ret
push
push
jae
sbb
jg
cmpsl
frstor
call
dec
xchg
addb
inc
push
in
lock
mov
sbb
js
or
fs
jmp
push
ret
push
mov
aaa
fdivr
decb
adc
clc
sub
sub
cmc
test
adc
lahf
jae
cmp
mov
xor
inc
xor
xchg
sbb
mov
mov
add
inc
incl
std
test
sbb
mov
lock
jg
repz
xchg
and
sub
ret
lods
push
out
add
pop
jmp
jl
cmp
scas
cmp
adc
fistpl
sub
mov
testl
ljmp
and
mov
ja
lcall
cmpsl
decb
jo
xchg
orl
mov
xchg
or
in
fsubp
xor
lret
mov
fwait
cmpsl
mov
cld
and
imul
sahf
pop
inc
outsl
imul
pop
out
add
dec
aam
mov
loopne
mov
or
push
sub
sbb
push
fwait
jns
lods
pop
addb
fcomps
pop
xchg
mov
mov
sub
cmpsl
mov
fwait
test
jecxz
aaa
or
fdivl
adc
test
push
xlat
inc
lea
test
dec
negl
cwtl
sub
jae
sbb
fidivrs
pop
push
jecxz
imul
sbb
popf
int3
mov
nop
loop
push
adc
lock
ljmp
jne
es
xlat
mov
cmp
pop
pop
inc
shlb
stc
jne
sub
mov
fdivs
out
jp
lds
movsb
inc
pop
or
jle
inc
dec
sahf
inc
cmp
adc
jbe
push
rorl
xchg
cmp
xchg
loope
dec
imul
sti
sub
push
mov
or
mov
icebp
cmp
mov
test
outsb
in
inc
inc
fbstp
sbb
stc
scas
nop
jecxz
xor
xchg
sbb
pop
mov
sbb
out
sub
loopne
sub
mov
aaa
xchg
test
jno
leave
adcb
idivl
cwtl
cmp
cli
lods
cmp
stc
or
jmp
roll
cli
aas
shlb
sbb
daa
and
fwait
stos
dec
stc
out
adc
mov
scas
xchg
mov
jl
shrl
lock
lods
cmp
xchg
scas
subl
xchg
inc
rol
aas
lahf
outsl
adc
repz
sbb
lcall
sub
xchg
jl
out
repnz
incl
jns
xchg
mov
pop
xor
hlt
fs
scas
and
xchg
nop
loopne
movsb
push
cmp
mov
cmp
sub
lods
loopne
inc
mov
xor
mov
faddl
ror
sahf
inc
ds
cmp
inc
js
rcr
mov
es
add
cmp
int
nop
jne
jno
pop
stos
jl
mov
mov
jno
mov
pop
push
je
sbb
jle
xor
sahf
or
inc
push
inc
inc
jns
les
repz
dec
jae
andl
xor
nop
movsb
dec
dec
xchg
movb
lret
je
adc
and
push
out
add
sbb
mov
out
jle
or
dec
inc
cmp
mulb
push
mov
jne
xor
stos
adc
jg
xchg
mov
push
out
push
mov
inc
sahf
loope
lods
enter
mov
cmp
mov
xor
and
inc
mov
mov
dec
jecxz
mov
xlat
stos
loopne
ret
or
mov
add
aas
stos
mov
inc
jle
mov
jnp
aaa
push
sti
stc
dec
or
test
call
inc
shrl
mov
pop
or
push
xlat
shll
int
loopne
inc
bound
shll
and
les
inc
add
pop
xchg
out
stos
sbb
rcrl
and
jnp
push
sbb
out
cs
xor
cmpsl
push
dec
sbb
pop
into
cmp
and
mov
cmp
mov
push
mov
out
adc
je
cmc
ficoml
jmp
xor
inc
xor
pop
shrb
add
cmc
cwtl
jbe
ljmp
mov
cwtl
lahf
mov
cmp
xchg
sti
fwait
and
adc
or
pop
ss
nop
mov
popf
mov
sub
jge
jae
pop
adc
jge
scas
mov
adcb
jnp
andl
push
hlt
sbb
mov
scas
jb
imulb
shrl
dec
cli
jmp
rcll
rclb
sahf
fucomp
inc
jb
ret
ret
ds
pop
imul
dec
add
movsl
fdiv
or
aad
or
fisubrl
arpl
xchg
inc
sbb
jmp
movsb
or
cmp
add
lock
mov
mov
test
mov
sbb
sbb
xchg
sub
cltd
xor
xor
pop
lcall
dec
sbb
cs
inc
ja
pusha
mov
fwait
clc
xchg
outsb
jo
adc
cli
sub
fildll
into
negl
clc
xor
stos
pop
dec
xchg
int3
in
cmp
mov
add
mov
push
jno
sbb
aaa
xchg
lds
sbb
pop
dec
aad
mov
mov
xor
adc
pop
push
xchg
mov
jae
xchg
xchg
jb
add
addr16
inc
add
pop
dec
mov
out
or
jl
lds
jne
add
cmpsl
cltd
xor
mov
pop
outsl
insb
mov
pop
push
mov
dec
or
xor
mov
inc
xchg
mov
xchg
lock
aas
ror
test
gs
mov
pushf
insl
add
sub
jb
cmp
add
sbb
xorl
add
cmp
sub
push
mov
dec
rolb
loope
pop
dec
test
cli
xor
adc
jmp
cld
cmp
mov
fwait
das
adc
das
stos
mov
inc
clc
pop
sahf
or
mov
aas
leave
and
pusha
lret
push
sarb
dec
ljmp
inc
adc
iret
sub
jmp
sub
cmpb
pop
mov
sub
jns
sti
mov
push
xor
mov
push
xlat
adc
push
test
ficomps
jecxz
leave
inc
mov
lds
and
and
movsb
dec
xor
push
cmp
fs
ficoms
mov
icebp
imul
xchg
popa
xchg
mov
mov
xor
mov
sbb
or
xor
fucomi
in
mov
mov
cmpsb
outsb
pusha
fstpt
out
jns
loop
mov
dec
jo
dec
lret
rolb
push
ds
sti
std
mov
mov
mov
icebp
jl
dec
sub
outsl
ljmp
cli
mov
inc
dec
out
addr16
enter
dec
fucompp
or
add
jbe
mov
shll
idiv
fwait
xchg
mov
pop
cmp
or
mov
mov
out
cmp
mov
ja
and
jne
imul
cmp
cld
push
stos
std
cmp
mov
das
push
scas
mov
cwtl
lret
cmc
jae
sub
cmp
xor
cwtl
adc
pop
outsb
mov
loope
loop
subb
xlat
sub
inc
sbb
pop
or
loopne
ffree
test
dec
mov
jns
xlat
inc
fldcw
insl
enter
sub
aad
lods
jle
and
scas
or
pushf
arpl
adc
push
mov
pop
lea
roll
add
outsb
arpl
pushf
cmp
gs
cmp
mov
aas
inc
test
das
and
cmp
rorl
ret
sbb
les
imul
inc
mov
jns
in
and
fsubrs
xor
clc
jp
lcall
in
inc
jae
lods
pop
jmp
or
fldt
cwtl
pop
jecxz
inc
enter
sub
mov
scas
in
xchg
test
push
push
stos
pop
pop
inc
popa
cli
or
and
js
mov
test
lret
mov
cmp
adc
stos
and
push
fidivs
sti
xchg
cmp
mov
outsb
push
sahf
pop
daa
inc
xlat
cmpsb
mov
add
jl
push
jae
addr16
out
xor
xchg
or
mov
dec
mov
scas
jmp
into
xchg
stos
adc
mov
shl
add
movsl
lods
xlat
jg
stc
pop
cmpsl
jl
ret
enter
sbbl
add
stos
aaa
out
or
cld
ret
add
cmp
sti
stc
popa
sti
inc
mov
push
fbstp
pop
xlat
mov
loope
lret
pop
loopne
jae
dec
je
jp
icebp
sub
xchg
lret
sbb
pop
movsl
inc
lret
xchg
int
pop
ja
pop
adc
sahf
adc
inc
xchg
xchg
or
sub
in
cmp
mov
in
xchg
pop
jmp
stc
jne
adc
test
pop
or
push
arpl
out
dec
sbb
lahf
call
ja
xor
jo
sub
outsl
jo
sub
insb
cltd
xchg
jb
xor
jb
mov
inc
push
leave
sub
xchg
aas
repz
jl
adc
lcall
cmc
xor
test
push
fcomip
xlat
jl
addr16
lcall
lahf
enter
or
lret
cli
pop
sti
jne
mov
mov
fcmovnu
test
adc
adcb
in
push
push
cli
sbb
js
rcrl
fsubs
jae
negl
ljmp
fstpt
jge
lret
dec
loope
mov
sarl
arpl
ja
sbb
sub
cmpb
push
dec
mov
in
xchg
mov
out
dec
sbb
dec
mov
jg
mov
test
lds
rorb
cmc
aaa
sbb
aad
sbb
fimull
xor
cld
xor
mov
aas
xchg
icebp
push
xor
fdivl
sbbl
mov
loope
mov
push
jmp
or
int
les
inc
sbb
fstpt
das
flds
sbb
mov
cmp
mov
int
movsb
xchg
dec
xor
test
dec
jns
jae
addr16
pop
adc
and
jg
sti
pop
ret
call
cmp
data16
loopne
jo
xor
test
mov
dec
xchg
jp
cmp
push
jno
jl,pt
xchg
aas
popa
int3
adcb
mov
dec
push
in
orb
fwait
inc
adc
pushf
fdivs
lret
jle
movl
mov
in
jb
mov
xchg
xchg
pop
stos
test
shrl
insl
out
sbb
push
push
and
push
or
jl
xor
fnstenv
ja
jl
bswap
jne
mov
outsl
lds
fndisi(8087
adc
and
mov
mov
pushf
ficompl
ret
xchg
stos
in
out
mov
std
cmp
loop
rcl
cli
dec
std
and
cmovbe
imul
outsl
ja
test
cmp
push
mov
mov
pop
pushf
sub
movsl
ret
fnstenv
mov
add
js
pop
fwait
out
std
adc
pusha
lds
mov
xor
adc
fdivr
inc
and
jne
and
cmp
mov
out
jg
aam
xor
data16
mov
andl
sbb
cli
cmp
notb
lret
dec
outsb
loope
ljmp
push
inc
add
cltd
lret
xor
adc
sti
mov
aad
mov
sarl
sbb
push
mov
cmpsb
shrb
cli
xchg
inc
sbb
fldl
xchg
mov
add
or
push
mov
pop
jno
inc
loop
xlat
loope
jb
push
jo
sbb
repz
or
popf
cmp
iret
mov
xchg
mov
inc
cmp
fmull
sbb
ds
mov
ja
aaa
xlat
jl
push
call
lds
lea
pop
rcrl
lcall
jle
push
mov
dec
jge
icebp
mov
movsl
xor
and
inc
xchg
std
push
bound
xchg
mov
adc
roll
mov
std
lea
mov
or
lds
xlat
out
arpl
es
bnd
jns
add
inc
les
in
ds
or
xchg
gs
aaa
scas
sahf
adc
xor
insb
loop
jl
xchg
xchg
or
xchg
cli
inc
jo
jl
add
and
jmp
push
mov
cmp
cld
push
adc
add
sub
xchg
xor
jbe
push
stc
cwtl
je
cld
stos
cmp
ret
aas
mov
sbbl
sub
inc
inc
clc
popf
adc
and
inc
adc
cwtl
test
or
pop
lods
adc
mov
mov
hlt
cmp
lret
call
or
mov
dec
xchg
jecxz
adc
and
je
ljmp
mov
or
dec
in
fmuls
jge
lock
sub
xor
addl
loopne
lcall
xlat
daa
popa
adc
sarl
push
mov
test
adc
icebp
lds
jmpw
push
dec
fstps
lock
js
xchg
inc
ljmp
shrl
mov
mov
sub
push
cmpsb
mov
stos
and
lsl
scas
lret
nopl
xlat
imul
loop
adc
xchg
outsl
dec
orb
out
lret
push
adc
in
push
daa
push
xchg
ljmp
push
sti
and
insb
or
add
cmc
popl
inc
ret
jl
mov
insb
sbb
lods
outsb
lods
xchg
sti
and
out
ss
lods
adc
imul
daa
adc
arpl
in
out
push
ss
xchg
pushf
sub
inc
or
mov
xor
scas
test
sbb
test
popf
add
jmp
dec
add
jns
out
dec
aaa
xchg
xchg
xor
in
dec
jmp
jg
scas
in
xor
nop
int
and
js
mov
xchg
push
in
dec
mov
xchg
pop
ja
adc
jb
or
add
mov
jmp
cld
sbb
adc
mov
testb
sub
cli
inc
fcmovne
push
push
sub
xchg
decb
pop
mov
cmp
mov
inc
cmpsl
mov
sbb
dec
xor
inc
push
mov
ja
sub
je
filds
push
aad
rcl
jo
fcomip
test
sub
sbb
xchg
movsb
add
shll
test
scas
inc
in
pop
xor
xor
push
adc
and
push
jl
push
mov
push
xor
xlat
xor
int
pusha
jnp
fxch
xchg
jl
xorl
inc
lret
or
call
push
es
adc
js
loop
into
aad
dec
stc
mov
inc
cmp
jbe
adc
xchg
add
lock
sbbb
ret
movb
jl
ljmp
ljmp
cs
in
xchg
addr16
and
sahf
jnp
push
sbb
add
adc
dec
aad
fdiv
fbstp
xor
pusha
cmp
repnz
cs
arpl
mov
pushf
data16
lret
arpl
sbb
jmp
jbe
xor
mov
xlat
mov
push
shl
cmc
jns
push
ljmp
repnz
ljmp
jbe
test
scas
jbe
push
jmp
sub
mulb
jp
gs
mov
jge
sbb
lock
psllw
xor
lods
adc
sub
xchg
xchg
and
pop
rolb
sub
mov
dec
enter
mov
ds
jno
mov
cmp
inc
out
mov
mov
jge
jg
out
jnp
xchg
dec
push
xchg
sbb
movsb
retw
pop
out
inc
and
push
cmp
dec
fiaddl
inc
mov
dec
inc
rcll
out
ja
inc
lret
sub
popf
cmc
scas
popa
clc
mov
fcoml
shlb
notl
push
jb
mov
scas
out
lea
stos
fwait
stc
dec
jbe
hlt
mov
dec
add
adc
loop
xor
jbe
clc
adc
out
scas
test
add
cmp
sbb
inc
and
or
or
mov
dec
cli
cld
sub
or
sahf
xchg
sbb
adc
xchg
jo
sbb
cs
sahf
sbbb
mov
cs
test
cld
mov
dec
adc
xchg
movb
std
sbb
mov
rolb
aad
loope
jmp
or
test
pop
insl
push
or
xchg
cmp
inc
fildll
sbb
pop
std
xchg
sbb
and
cmpsb
cltd
mov
fists
mov
jnp
lahf
push
push
adc
pop
sbb
xchg
repnz
aas
or
dec
jl
cli
in
inc
sub
xor
aas
push
mov
sar
push
stos
popa
mov
push
mov
xor
popa
pop
add
addr16
inc
rorl
out
fidivrl
cmp
pusha
shl
dec
lds
sbb
sbb
xchg
mov
pusha
ficoms
mov
pop
push
dec
clc
pop
push
ljmp
mov
movsl
mov
incb
xchg
mov
popa
lds
xchg
sbb
test
scas
push
push
in
aam
mov
jne
int
or
nop
pop
fmulp
out
sbb
push
aam
enter
sub
dec
sub
and
test
lds
pop
in
arpl
xchg
xor
sbb
fidivrs
out
push
jmp
mov
lret
clc
or
xlat
ret
sbb
repnz
nop
push
add
dec
push
std
inc
jecxz
xor
inc
pop
push
add
pusha
xor
xchg
ficoms
xchg
cli
rorb
mov
lds
push
xor
aam
clc
push
rcrl
sub
je
in
jb
sbb
push
add
ret
movsl
and
ljmp
pop
int
or
jo
mov
js
inc
mov
mov
ds
mov
push
xchg
mov
pop
sub
cld
hlt
pop
rolb
enter
lock
pop
mov
lcall
or
out
or
cwtl
lret
fisubrs
mov
lods
dec
sbb
cmp
idivl
call
dec
inc
test
dec
fstp
push
add
int
arpl
xchg
clc
dec
xlat
ja
xorl
pop
sub
sbb
add
gs
sbb
int3
add
mov
xor
je
cli
cld
shlb
and
cmp
sbbl
inc
adc
mov
push
sti
ret
int
and
stos
ss
mov
mov
pop
add
xchg
push
icebp
add
lods
jle
mov
nopl
stos
mov
sub
xchg
hlt
add
push
adc
and
leave
jg
outsb
sbb
or
sub
jg
cli
push
dec
or
les
lds
mov
mov
cmpsl
or
dec
aam
mov
mull
std
sub
mov
add
int
push
dec
pop
outsl
cld
je
lret
mov
lret
cmp
pop
ss
jecxz
js
pop
je
mov
mov
adc
add
xchg
mov
leave
nop
sub
dec
daa
mov
sbb
les
cli
jge
or
xchg
jp
mov
stos
mov
addr16
orb
gs
cmpsb
lds
pushf
dec
mov
stc
inc
ret
arpl
lahf
mov
sub
fisttpl
add
cmp
push
mov
adcb
cs
sub
cltd
cmc
std
cmpsb
cmp
inc
fwait
mov
cmp
mov
stos
cmp
aaa
pop
into
into
jae
xchg
lods
sub
inc
adc
adc
xchg
movsw
pop
into
mov
xchg
inc
pop
mov
nop
adcb
or
mov
enter
xor
add
dec
or
jo
mov
repz
push
out
sub
pop
jns
push
std
xor
insb
sub
cmp
cld
xchg
and
dec
pop
sub
cmp
jo
into
imul
push
rcrl
mov
xchg
iret
dec
xchg
pop
sarl
adc
xchg
insb
dec
ret
mov
sbb
cs
pop
inc
pop
std
jo
lahf
sbb
scas
jnp
notb
and
sbb
cwtl
mov
mov
lods
fidivrs
loopne
sbbb
pop
call
or
mov
nop
and
cmc
movb
rclb
mov
repnz
add
jb
lods
xchg
out
mov
rclb
inc
hlt
fists
adc
sub
lret
adc
pusha
push
outsl
mov
nop
mov
mov
sbb
inc
outsl
cmpsl
dec
push
dec
add
call
mov
sti
jae
sub
jae
cmp
in
test
mov
xlat
aaa
adc
movsl
loope
inc
mov
leave
pop
mov
sti
stc
xchg
sub
pop
xor
scas
popa
xchg
lret
mov
jno
cs
or
jb
pusha
dec
inc
lock
repz
jg
pop
cmp
movsl
rcrb
enter
push
jne
imul
adc
adc
fists
pop
ds
push
sbb
movsl
sub
jmp
and
jno
fisttpll
sub
pop
mov
dec
xlat
add
adcl
out
sbb
and
stc
adc
test
outsl
fldenv
adc
sub
and
int
enter
idivb
mov
dec
out
outsb
inc
in
outsb
adc
dec
pusha
data16
repnz
xor
sbb
jb
push
scas
push
subb
push
mov
lret
rcl
in
dec
je
cmp
sub
inc
aad
inc
mov
dec
out
movzbl
gs
rcrl
cmpsl
std
cmp
out
mov
aaa
nop
sahf
daa
cmp
dec
xchg
mov
jecxz
in
sub
cli
jo
pop
arpl
and
or
stos
add
push
fwait
leave
lock
or
in
jne
rcr
and
rcl
sbb
cmp
ja
mov
test
imul
dec
add
push
sbb
cmpsl
je
cmpsb
cmpsb
outsb
enter
les
xchg
out
addr16
imul
aam
popf
add
pop
pop
adc
jge
xor
adc
in
addr16
mov
adc
cmpsl
loope
pmaxub
cmp
sbb
push
lret
aaa
dec
out
call
js
call
xchg
pusha
xor
pop
in
add
or
pushl
mov
cmp
sub
cli
in
lahf
addr16
fwait
out
ljmp
pusha
pop
or
xchg
sbb
lahf
ds
jo
imul
dec
shlb
rclb
fwait
into
xor
fstpt
aad
sub
adc
addb
mov
add
sub
and
mov
dec
fisttpl
add
xor
jge
shr
mov
pop
imul
inc
and
dec
and
hlt
jl
jmp
cltd
aas
pop
cwtl
push
pusha
mov
xchg
inc
lds
ret
out
xchg
subb
mov
es
mull
cmp
sub
mov
adc
and
lea
xor
xchg
mov
lock
aad
scas
movsb
pop
jb
rorb
xchg
add
dec
mov
sbb
lea
enter
test
xchg
push
testl
daa
incb
xlat
cmc
mov
lret
ret
call
lahf
and
stos
daa
loop
fstpl
imul
or
pop
aas
dec
fisubs
scas
loope
mov
shll
mov
imul
movsb
js
or
xchg
xchg
adcb
aad
mov
daa
adc
into
cmp
adc
pop
fstpt
repz
inc
inc
push
imul
pushl
fsincos
shll
or
scas
mov
xchg
das
fninit
jnp
cmc
std
xchg
pop
and
adc
push
nop
mov
sbb
cmpsb
std
mov
sbb
ret
mov
fucomp
insl
notl
sub
jmp
rcl
es
addb
xchg
sub
outsb
inc
popf
jmp
gs
out
mov
mov
lret
decl
mov
pop
push
sahf
insb
sbb
ljmp
xchg
jae
mov
jb
push
repz
mov
xchg
pop
jno
ljmp
mov
add
adc
jbe
stos
in
ss
shl
ja
adc
jle
dec
pop
mov
divb
test
adc
xor
fbstp
dec
cmpsb
roll
aas
inc
jle
jecxz
imul
pop
push
xor
or
pop
cmp
imul
or
outsl
pop
jae
sub
mov
jge
mov
out
or
call
ret
stc
xor
xchg
mov
xchg
mov
out
outsl
daa
adc
pop
lahf
pop
cmc
in
mov
out
dec
lock
test
aaa
xchg
adc
mov
aad
int
mov
ror
mov
stos
cmc
adc
ret
mov
js
jo
mov
into
leave
mov
sub
call
js
inc
in
js
or
test
and
pop
rcrb
jne
add
clc
scas
mov
fiadds
sarl
add
adc
movsb
fld
jmp
xor
xor
mov
jl
sti
mov
sti
lock
xor
scas
inc
std
mov
pop
bound
inc
xchg
into
sub
cmpsb
ja
pop
in
cmpsl
and
aad
pop
or
repnz
inc
addr16
add
and
loop
dec
cwtl
incl
out
inc
xchg
cmp
jl
insl
je
std
xor
test
add
fcmovu
insl
xlat
mov
ret
push
ds
xchg
stc
dec
or
es
push
mov
iret
dec
xor
cmp
arpl
outsb
jmp
push
jmp
mov
leave
daa
add
in
or
ja
sub
pop
sbb
std
leave
push
iret
ret
sub
in
pop
ret
rcll
xlat
lcall
cmp
xorl
add
adc
xchg
cli
cmp
bnd
jns
jnp
xorb
inc
cld
inc
sbbl
mov
adc
and
and
xchg
cmc
inc
les
mov
cs
test
cwtl
add
adc
dec
xor
pop
adc
mov
pushf
dec
mov
pushf
imul
mov
pusha
push
jp
out
jno
lods
and
mov
sarb
cmpsl
fwait
adc
out
push
sub
inc
dec
lahf
lahf
iret
and
jle
and
cmp
sub
mov
mov
scas
mov
jl
cltd
inc
xor
and
pop
loopne
int
or
in
push
dec
aas
mov
ljmp
jnp
sub
jecxz
mov
mov
loope
and
orb
push
ret
cwtl
or
dec
pop
pop
cli
ljmp
arpl
sbb
cli
mov
dec
jno
shl
fdivl
dec
dec
and
lret
cltd
jle
nop
dec
mov
enter
mov
pop
hlt
adc
ret
xchg
fs
test
loop
filds
scas
adc
fadd
dec
mov
add
mov
dec
imul
out
adc
or
popa
loopne
mov
sbb
in
cli
dec
adc
dec
outsl
inc
cmp
pop
inc
add
sar
test
xor
fs
xorb
lret
inc
xchg
cwtl
or
jp
xlat
pop
insl
mov
jmp
adc
inc
or
nop
in
mov
xchg
cs
outsl
stc
andl
inc
cmp
add
and
cwtd
push
leave
xchg
mov
xor
int
mov
les
mov
addr16
int
pop
jb
add
cmp
sahf
and
xor
pop
call
pop
and
fcoml
fsubrl
je
into
inc
test
mulb
xchg
pop
ds
mov
imul
ss
stos
mov
in
in
xchg
outsl
push
jno
pop
ljmp
inc
sbb
lods
mov
ror
push
push
inc
movsl
push
adc
out
loopne
pushf
mov
pop
add
mov
adc
aam
xorb
mov
sbb
dec
lret
jns
lea
imul
loope
xchg
cmpsb
mov
pop
or
adc
jno
gs
fdivrs
adc
and
test
push
bound
shll
inc
push
push
mov
or
add
inc
xor
test
sub
sub
inc
gs
mov
cmp
adc
push
xchg
push
dec
push
mov
sub
int3
xchg
add
jmp
jmp
xchg
std
lods
adc
ljmp
push
out
call
mov
repz
scas
mov
xchg
fdivrp
loopne
push
data16
cli
pop
xor
jge,pt
cmp
insb
jne
jl
pop
adc
test
loop
push
xchg
and
jecxz
xchg
popa
outsl
cvtps2pd
inc
jae
imul
aaa
insb
xor
add
loop
push
pop
movsl
pop
mov
lahf
aaa
jl
repz
or
mov
push
fistl
div
xor
rcr
call
mov
xchg
mulb
mov
int3
add
stos
dec
xchg
cmc
jl
mov
mul
jge
add
leave
xor
dec
in
push
rcll
sahf
outsb
lea
cmp
adc
mov
add
push
add
mov
inc
lock
cmp
sbb
mov
sbb
fildl
test
adc
addl
mov
cltd
fs
fwait
enter
pop
pop
add
test
ret
xor
mov
stos
jne
inc
clc
mov
insb
jp
lcall
push
js
xor
es
daa
and
stos
or
pop
cmp
les
jo
outsl
lahf
xor
sbb
adc
gs
js
dec
faddp
paddd
push
push
push
cmp
icebp
mov
lock
ds
jmp
or
mov
fcmovnbe
pop
and
jne
inc
xchg
cmpsl
sub
mov
or
das
ja
aas
add
int
ficoml
dec
xor
push
xchg
add
in
dec
mov
dec
sbb
fs
mov
fst
cmp
mov
jne
add
call
push
popa
sub
pop
xchg
jnp
into
cmp
lods
rclb
fwait
test
ret
test
repnz
xor
push
jno
sbb
sbbb
negl
daa
push
hlt
subb
pop
inc
das
test
sub
jne
pusha
data16
daa
mov
xchg
push
mov
daa
in
cld
jb
pop
push
inc
xor
lret
sti
test
shrl
xor
cmp
cltd
roll
and
lds
inc
jmp
outsl
fcmovb
or
mov
testl
mov
sub
dec
gs
pusha
sbb
pop
jmp
inc
std
shl
xor
lock
lcall
inc
clc
in
pop
ljmp
jmp
xor
ds
fistpl
inc
xchg
cmpsl
repnz
mov
call
nop
and
inc
cli
xchg
sbb
dec
jge
mov
xor
ret
sbb
mov
int3
jae
cltd
jle
subl
pushf
mov
xchg
mov
lret
dec
add
jne
pusha
adc
sub
movsl
stos
pop
sti
sbb
lea
xor
cmp
sub
inc
push
js
bound
cltd
mov
add
adc
mov
sub
loope
cmpsl
popa
dec
cmpsl
bound
dec
sbb
jge
jae
mov
xchg
mov
std
dec
lds
adc
stos
pop
out
sub
inc
xor
push
mov
mov
cmp
push
shrl
push
push
push
lahf
cwtl
jbe
call
xor
call
jge
or
movsb
and
mov
cmpsb
sbbb
jnp
mov
jae
mov
std
imul
fisttpll
insb
jle
pushf
xchg
add
das
cmc
and
test
xchg
fcomps
add
or
mov
push
adc
add
test
inc
or
sub
insl
xor
cmp
sbb
out
std
adc
xor
stos
mov
push
shll
pop
aad
dec
fs
sub
push
pop
jecxz
leave
push
xchg
cli
ret
lcall
push
outsl
and
fnstcw
mov
sbb
orb
cmp
xchg
bound
out
push
out
ss
imul
inc
jecxz
push
loope
cmp
or
xor
call
cmc
dec
push
mov
scas
mov
mov
mov
inc
int
dec
scas
sbb
push
daa
es
mov
stc
nop
popf
clc
dec
push
fwait
jg
in
dec
data16
sbb
xchg
lods
push
in
and
and
inc
aaa
pop
push
push
nop
mov
xchg
pop
inc
clc
jg
xchg
addb
mov
mov
push
popf
out
mov
lods
add
adc
jg
mov
inc
dec
in
les
or
loop
loop
mov
je
rcrl
dec
sub
cmp
push
mov
jle
dec
mov
adc
xchg
pusha
mov
xchg
cmp
out
xor
add
jns
fldcw
ljmp
ret
into
sbb
movsl
mov
cmp
and
daa
movsl
lcall
lcall
and
insl
stos
rorb
js
fimull
rcrb
mov
insb
in
rcrb
fmuls
test
add
jmp
push
push
mov
nop
popf
add
dec
pop
mov
dec
or
add
jp
sar
inc
insb
out
sbb
mov
cmpsb
sub
cld
cmp
dec
sarb
and
pop
jno
loope
sbbl
inc
cli
or
pop
out
sub
ljmp
pop
sub
sub
or
scas
mov
mov
cmp
inc
cli
or
hlt
xchg
push
sbb
punpcklwd
inc
push
pop
scas
iret
sbb
cli
jo
movsb
jnp
dec
push
inc
jp
mov
jne
add
das
adc
pop
sbb
les
dec
cs
mov
lea
ds
xchg
xchg
rcrl
xor
dec
dec
adc
imul
cld
or
mov
xchg
fucomip
sub
leave
mov
dec
inc
ret
aad
mov
push
divl
or
imul
push
and
pop
mov
mov
push
sbb
cmpl
xorl
ret
out
mov
or
pop
xchg
loope
add
push
fwait
ret
push
dec
loopne
jl
or
cmp
mov
lods
repz
dec
inc
shlb
mov
rcl
xor
mov
vpsraw
fs
xor
scas
addr16
ljmp
das
push
inc
sbb
in
lret
aam
lods
in
cmpsl
cli
and
js
fucomp
and
aam
movsl
jecxz
jmp
setb
lods
push
int
setl
out
mov
mov
or
pop
jle
stos
jo
push
jge
lret
push
lcall
sahf
push
popf
imul
ja
add
test
adc
add
or
inc
mov
shl
int
imul
fwait
cld
and
repz
cmpsl
std
sub
call
into
pop
mov
pop
call
dec
les
xor
xor
push
xchg
fstps
push
movsl
cmp
ret
and
mov
repz
fs
push
or
xchg
jb
xchg
icebp
sbb
dec
adc
lea
push
movsl
mov
cmp
sbbb
test
mov
in
jno
rcl
hlt
mov
mov
es
inc
pusha
pop
outsb
arpl
ror
ljmp
pop
inc
jb
cmp
adc
clc
or
ret
push
test
jmp
fisttpll
movsl
mov
xchg
xor
fcmovnb
or
jge
or
pop
xor
sbb
and
xor
mov
pop
jmp
fwait
xor
mov
pop
inc
pop
outsl
adc
xlat
cmp
outsb
adc
loope
jle
out
into
sarb
sbb
mov
insb
nop
ljmp
push
lods
dec
inc
out
jecxz
mov
es
sub
and
test
mov
cld
out
add
sbb
or
loop
sbb
mov
movsb
dec
ficompl
inc
aaa
sbb
mov
xchg
ret
stos
stos
pop
push
nop
lods
xor
pop
jbe
jmp
pop
dec
shll
xor
pusha
and
mov
jecxz
pop
and
sti
addb
xchg
fidivl
insb
push
pop
pop
sub
pop
pop
orb
mov
xchg
sbb
mov
clc
inc
mov
or
out
mov
pop
and
fs
sbb
sub
je,pt
sbb
gs
sub
push
fwait
jecxz
repnz
or
test
xchg
xchg
stc
sbb
gs
pop
push
fldenv
sbb
fcmovnbe
adc
xor
nop
test
gs
xor
ret
push
aad
jmp
pop
mov
movsl
in
mov
lock
cld
jg
mov
nop
adc
mov
arpl
fcomps
or
jne
sti
shll
les
stc
inc
sub
shrb
and
int3
cmp
or
sub
inc
add
jnp
hlt
lahf
pop
rcrl
pop
cmp
scas
loop
xchg
ljmp
cmp
jg
jmp
pop
jbe
loope
jmp
sbb
add
insb
dec
fimuls
insl
mov
add
rcrl
mov
pop
arpl
mov
cmpsl
xchg
fstl
aaa
out
lock
and
clc
push
mov
popl
xchg
inc
or
daa
test
and
into
add
cmp
das
push
pop
adc
cld
xchg
out
cmp
test
sub
dec
jmp
xlat
pop
cmp
ja
in
addr16
add
jge
das
add
cltd
xchg
jp
sub
mov
enter
andb
ds
mov
ja
mov
jl
sub
jo
insb
dec
negb
pop
jbe
stos
fsubp
pop
std
jae
daa
cmpsb
loopne
push
sbb
jnp
cmp
jns
jle
jle
jns
push
inc
lcall
stc
in
pop
push
push
pop
rep
fsub
pop
inc
fbstp
push
shll
faddp
dec
arpl
cmpsl
dec
or
inc
or
push
push
inc
mov
repz
add
sahf
int3
or
pop
mov
jnp
mov
push
sarl
dec
loope
xchg
shl
push
dec
xor
jl
adc
jl
clc
hlt
bound
adc
mov
mov
push
lods
in
clc
ljmp
lock
xchg
push
mov
mov
pop
rcrl
mov
pop
mov
inc
dec
inc
mov
adc
insb
fisubl
mov
clc
shll
aad
cmp
int3
imul
push
xor
pop
jbe
rcl
out
cmp
push
cmc
adc
or
in
adc
xchg
mov
insl
add
cwtl
mov
inc
std
add
fisubrs
mov
mov
mov
pop
xchg
ds
xchg
cmp
adc
adc
sarb
mov
and
stc
roll
or
and
xor
imul
sub
mov
cmp
push
test
and
clc
mov
inc
xor
es
xchg
dec
test
jle
enter
lret
arpl
out
pop
cwtl
call
or
inc
sarl
sbb
imul
fchs
pushf
lods
imul
add
es
mov
and
sbb
and
cmp
cmp
fisttpll
xlat
push
mov
sub
xchg
fistpl
lcall
add
adc
test
push
addps
ret
dec
push
cmp
ds
out
aad
pop
inc
fstl
mov
lret
js
movsl
movsb
pop
xor
mov
ret
push
xchg
je
rcr
aam
dec
sub
jnp
and
xor
lock
dec
outsb
add
jmp
adcl
mov
je
fs
mov
sub
les
ss
lahf
js
inc
in
pop
sbb
ss
insl
repz
mov
ret
outsl
enter
clc
loope
rcr
cmp
les
mov
mov
cmpsl
cmpsl
pop
xchg
pop
pushf
jns
push
sbb
cmpsl
jle
jl
inc
push
lahf
mov
clc
repnz
popa
push
cwtl
out
dec
mov
fadd
jno
dec
fsubl
pushl
ja
addr16
sub
icebp
sub
rcrl
movsl
sub
add
shl
daa
xor
popa
sub
push
or
loop
pop
sbb
push
xchg
repnz
outsb
cmp
pushf
jmp
mov
inc
inc
stos
sbb
push
aam
push
scas
insl
mov
loopne
fcomp
jnp
rcrl
xchg
popa
cmp
sarb
std
cld
xor
add
mov
stc
in
mov
sub
in
mov
js
into
xor
pop
les
dec
mov
jp
aas
fcmovu
sbb
jp
inc
sub
negb
push
jecxz
in
and
cmp
cmpsl
push
jg
jns
ja
pmulhuw
inc
rorl
xor
lcall
aaa
add
lcall
xchg
clc
jne
orl
and
fwait
cmp
bound
out
sub
insl
sub
mov
gs
xor
inc
mov
lods
xor
add
pop
sub
jae
add
adc
insb
inc
aad
scas
xor
mov
cmp
and
pop
inc
mov
sub
mov
int3
ss
mov
inc
adc
call
mov
popa
ret
cltd
push
ljmp
out
mov
push
add
fiadds
push
out
popa
cmp
push
addr16
cmc
or
testl
sub
idiv
mov
adc
dec
lods
pop
adc
push
lods
push
mov
sbb
aaa
leave
je
movsb
loope
push
insl
insb
fcoms
sub
lahf
mov
es
fists
xchg
xor
popf
pop
cmp
add
push
add
out
icebp
xchg
add
mov
rcll
adc
insb
adc
pop
hlt
fsub
xchg
adc
add
mov
and
out
cwtl
jecxz
pop
lods
lahf
popa
xor
bound
in
imul
mov
dec
cmc
sti
mov
shll
cli
push
add
dec
stos
ficomps
dec
add
sbb
jge
aad
lret
mov
lahf
sub
cmpsb
add
shlb
fldcw
mov
or
jne
daa
mov
or
std
scas
add
icebp
cltd
or
aad
inc
cmpsb
pop
xchg
sub
inc
pop
jo
dec
fadds
sar
iret
inc
je
add
out
aam
xchg
stc
add
mov
push
adc
mov
andl
fs
jno
aad
jns
std
mov
fcmovb
push
xlat
lods
ret
pop
in
mov
or
jp
call
inc
popf
sbb
mov
outsb
push
sbb
fwait
aaa
push
jno
mov
ret
mov
or
lods
xchg
sbb
mov
push
sahf
orl
pop
and
mov
xor
das
inc
jae
jp
scas
xor
and
mov
push
xor
pop
orb
pop
push
xchg
pushf
jno
mov
in
adc
repz
xchg
add
mov
pop
jmp
ficoml
mov
das
lcall
adcb
ret
cwtl
xor
jle
lret
dec
push
ljmp
jmp
or
xchg
stos
xor
inc
mov
xchg
icebp
scas
ja
cmc
int
lea
adc
xor
out
cwtl
cmp
xor
or
daa
jge
sub
adc
jl
pop
mov
cmc
jne
aad
adc
xor
je
adc
xchg
ss
outsb
sub
dec
fwait
xchg
jbe
rol
push
push
addr16
stos
jecxz
mov
mov
movb
mov
popf
cld
or
fnstsw
ret
lods
ja
lods
xor
push
xchg
fs
movsl
shrl
dec
push
lret
leave
fdivrl
xchg
ret
push
sahf
out
sbb
out
inc
leave
cs
xchg
xor
aas
mov
inc
jns
fs
test
addr16
mov
xchg
inc
cmc
mov
es
jg
adc
in
pop
icebp
inc
push
mov
in
stc
or
xchg
iret
mov
daa
inc
xchg
repz
pop
fistps
pop
pop
dec
pop
mov
and
adc
mov
lret
xchg
fnstsw
xor
mov
movsb
sub
cltd
xchg
ds
sub
jp
jno
dec
aad
push
loop
mov
loope
sbb
mov
cli
adc
xchg
and
sub
cmp
pop
icebp
xor
mov
push
mov
jnp
in
cltd
push
stos
rorl
not
test
add
adcl
test
scas
jmp
push
push
mov
pop
push
xchg
xchg
cmp
imul
inc
jns
imulb
xor
fldl
sbb
or
js
aam
cmc
aad
mov
outsb
arpl
fwait
inc
gs
pop
push
push
xchg
push
out
imul
frstor
out
mov
fnclex
int3
cwtl
add
jb
jl
sbb
ret
xchg
mov
add
sub
imul
xchg
cmc
xor
ds
daa
push
in
mov
ss
outsl
repnz
jns
data16
push
loop
daa
sub
inc
divb
xor
jle
lods
xlat
cmpsl
mov
mov
stos
stc
pop
test
jnp
jmp
push
leave
jp
into
pusha
sub
in
inc
and
mov
push
jle
outsb
xchg
xchg
cwtl
icebp
inc
inc
fdivr
sub
pop
inc
rolb
cmp
xor
and
pushf
and
lahf
lcall
les
jle
xorb
in
aaa
shll
sbb
jmp
add
and
jle
add
sbb
xor
push
adc
rolb
or
push
lods
repz
push
xchg
xchg
inc
adc
fs
adc
stos
lea
xchg
clc
rol
cli
pop
and
add
loop
ja
dec
lods
push
idiv
push
int
bound
mov
lahf
sub
jb
jmp
mov
icebp
xor
mov
push
loope
iret
jle
xor
sbb
mov
jbe
ljmp
mov
outsl
lods
leave
js
ja
aaa
and
mov
bound
scas
mov
lods
pop
cmp
mov
mov
cmpsb
dec
lcall
or
dec
jns
push
sub
pop
jno
out
fisttps
xchg
xor
cs
jo
mov
xchg
jno
inc
sub
or
inc
lret
mov
jmp
jo
dec
mov
cmp
in
push
dec
in
hlt
adc
sbb
add
lahf
xor
inc
subl
add
jmp
mov
pop
pop
cmpsb
lret
push
mov
adc
movsb
mov
xor
mov
sahf
inc
jb
pushf
call
lret
fiadds
lcall
out
aaa
push
out
into
inc
jb
dec
mov
mov
flds
mov
lret
sub
push
add
add
jg
mov
pop
push
lret
fs
test
mov
bound
dec
jge
xchg
iret
and
jne
pop
lds
movsb
push
scas
add
testb
and
lahf
adc
dec
mov
inc
test
dec
or
mov
hlt
jb
cmpsl
jecxz
out
xchg
fcomps
sub
out
mov
addr16
iret
sarb
or
add
or
add
js
jb
scas
or
and
jne
shl
cmp
sbb
lods
pushf
incl
mov
stos
out
sub
jl
cmp
jb
pop
add
jecxz
ret
icebp
gs
jp
lods
cltd
push
out
pop
sahf
adc
je
aad
cmp
and
in
pusha
mov
inc
bound
push
jle
adc
xor
sub
int3
sub
out
sbbl
cld
movsb
dec
into
sti
clc
pusha
push
pushf
xor
out
mov
mov
ja
in
cli
je
rorl
ljmp
mov
sti
hlt
cmp
sbb
push
stos
orb
std
hlt
cmp
jecxz
mov
pop
sub
imul
mov
mov
mov
mov
adc
mov
jns
dec
add
sub
inc
pop
gs
dec
or
ja
into
movsbl
push
cmp
jecxz
aad
sbb
mov
xor
cmpsl
arpl
xchg
decb
xchg
icebp
je
mov
adc
stos
rcr
xor
test
ss
loope
pop
jo
ds
mov
std
repz
dec
xchg
fcoms
mov
mov
or
adc
loopne
sub
xchg
std
insl
and
cwtl
out
or
mov
add
push
inc
fsubl
mov
in
pop
xchg
and
stos
int
sbb
mov
testl
sub
or
jnp
test
popa
fsts
xor
sub
fisubl
cmp
lds
push
xchg
push
pop
mov
jae
pop
xchg
push
push
insb
jge
sub
pushf
mov
cld
sbb
cmpsb
aam
add
pop
lds
bound
sbbl
jp
or
rcr
mov
push
xchg
loopw
push
cld
nop
xor
dec
ret
xchg
lds
xchg
sbb
das
fcom
inc
pop
dec
push
inc
lret
mov
out
sbb
mov
hlt
mov
push
lds
lock
fcmovb
pop
rorl
push
inc
inc
jecxz
xor
cli
sarb
xchg
mov
addb
push
lcall
pop
scas
subb
inc
int3
push
dec
xlat
test
divl
inc
lret
popf
add
ret
dec
jecxz
test
aad
xor
sbb
adc
xchg
in
ss
jge
mov
test
dec
xor
mov
jne
pushf
pop
cmp
into
sbb
imul
nop
imul
pop
jbe
dec
mov
fisubrl
pmuludq
dec
mov
subb
loop
and
mov
stos
push
lock
sub
out
mov
mov
push
or
leave
cmc
dec
outsl
mov
loopne
inc
test
mov
or
sub
mov
push
jge
mov
jo
iret
jmp
jo
xor
call
add
cs
pop
xor
and
cmp
out
lods
pop
mull
aad
rcrl
mov
mov
movsb
and
cltd
fdiv
cmc
inc
scas
enter
outsb
cltd
dec
lods
dec
sahf
lods
inc
andl
adc
pop
push
shrb
ror
add
mov
push
ret
adc
in
mov
mov
out
cmpsb
sub
imul
cmp
lcall
pop
xlat
adc
inc
fbstp
test
push
xchg
add
dec
in
movsl
inc
leave
sbb
fldlg2
test
dec
xor
xor
inc
hlt
pop
cltd
fwait
xor
js
mov
out
clc
mov
sub
sbb
lret
sti
leave
ds
ds
movsl
inc
pusha
push
add
clc
mov
lods
mov
dec
mov
add
xchg
nop
fcmove
mov
shrl
enter
xchg
shrb
popf
lea
or
inc
es
mov
rolb
push
dec
rcrl
popf
inc
in
pop
cmp
mov
pop
xchg
ljmp
sub
je
xorb
sub
sti
rcr
mov
xor
mov
outsb
stc
sbb
adc
or
lock
das
mov
orl
adc
sbb
xchg
push
or
insl
ret
loop
lret
mov
mov
cmpsl
bound
push
or
or
inc
dec
mov
das
jle
sti
lahf
jns
stc
aas
scas
ret
ret
xchg
cmpsl
pushf
sub
sub
and
and
adc
xchg
cwtl
xor
loope
adc
aaa
cmp
mov
cmp
push
ss
xchg
cmp
pushf
push
xor
inc
roll
in
cmp
sbb
sbb
xchg
sahf
out
jbe
xor
out
fsub
int
orl
bound
rorl
xchg
xchg
shll
je
cmp
lcall
adc
stos
jmp
out
xor
out
in
mov
jae
cmp
sti
adc
fistps
cmp
fimuls
pop
mov
inc
inc
test
mov
jae
dec
and
lret
lret
je
jbe
add
and
setne
imulb
push
dec
test
sbb
rorl
daa
cmpsl
xlat
xor
sbb
pop
es
sbb
push
lret
ret
jmp
xor
scas
rol
and
inc
mov
rcrb
in
lods
add
fcoml
sub
mull
xchg
mov
arpl
out
push
lret
in
rolb
mov
xchg
test
cmp
aaa
adc
cwtl
mov
jbe
jmp
in
ljmp
stc
inc
push
sub
push
xlat
shrb
aaa
pop
add
xlat
inc
clc
pop
pop
adc
jbe
jmp
and
mov
dec
popf
mov
xchg
mov
in
ret
fnsave
stos
jnp
xchg
jae
pusha
fidivrs
jo
xchg
dec
ja
jmp
push
cltd
sarl
popl
in
and
mov
add
mov
scas
sub
mov
fcomps
ja
bound
lcall
fstp
add
lds
sbb
popa
sbb
mov
fsubl
mov
ds
enter
lods
adc
fcomps
mov
push
shlb
in
xor
ror
cmp
inc
cs
sbb
mov
popl
mov
pop
sbb
bound
notb
lahf
jne
test
ja
sub
xchg
push
fistpll
shlb
mov
or
jae
xor
dec
stos
adc
xor
mov
push
stos
mov
daa
imulb
int
pop
mov
faddl
cmp
test
xchg
dec
mul
les
mov
lcall
sti
and
sub
mov
inc
loope
jge
popa
sbb
pop
arpl
push
add
bound
hlt
cmpsl
xchg
enter
aam
mov
or
pop
jmp
scas
inc
fcmovne
test
inc
ret
fbld
xlat
pcmpgtw
iret
dec
mov
push
adc
xchg
sbb
stos
scas
push
lods
adc
in
pop
add
mov
in
leave
loope
das
inc
dec
xchg
and
sbb
jbe
movsb
pop
movsl
push
pushf
decl
fstpl
das
pop
lds
andb
pop
iret
or
sub
inc
pop
and
je
xchg
or
iret
or
sub
jae
and
push
push
fwait
adc
je
stc
jnp
sbb
mov
jge
jg
sub
loope
scas
cmpsb
add
gs
in
sarl
mov
pusha
in
inc
int
jmp
sub
out
dec
es
shlb
pop
and
loop
cmpsl
arpl
cmp
aad
jmpw
dec
mov
adc
mov
loope
sub
movsl
xchg
xchg
mov
push
popa
cmpsb
scas
mov
dec
pop
sub
xchg
iret
dec
pop
lods
in
outsb
popa
leave
push
scas
mov
in
inc
addr16
add
adc
fs
scas
and
fistpll
int
in
add
test
inc
mov
gs
mov
mov
loopne
and
iret
adc
jp
or
popf
sti
cmpsb
js
inc
or
sbb
inc
or
aas
out
repnz
sbb
lods
dec
repz
loope
or
fnstenv
aaa
adc
test
rcl
inc
negl
mov
incl
xchg
xchg
sbb
in
jb
in
cmp
jmp
jecxz
scas
outsb
hlt
jmp
inc
lds
cltd
push
cli
xchg
or
dec
sub
popf
dec
adc
mov
cli
loope
scas
mov
sbb
loope
lock
in
push
and
sarb
jmp
aad
sbb
add
or
xchg
push
les
mov
jns
out
hlt
ds
es
inc
aaa
insl
inc
cmc
inc
sub
rsm
jmp
cmp
pop
adc
pop
push
pop
sub
cmp
push
hlt
xchg
pop
fs
movsl
scas
outsb
push
inc
push
lahf
dec
push
mov
push
loope
or
jo
push
icebp
push
and
fildl
and
or
xchg
stc
xor
jo
imull
flds
jb
nop
outsl
iret
sub
and
rcr
maskmovq
negl
mov
add
movb
lahf
out
dec
or
mov
sbb
adc
cwtl
xor
cmp
mov
cltd
xchg
cmp
je
mov
pushf
mov
int
pop
out
in
fnstsw
repz
cmp
adc
and
jno
loope
xor
push
sbb
icebp
out
xchg
insb
testl
mov
mov
cmp
scas
int3
fmull
mov
add
std
fildll
xchg
push
inc
jbe
xchg
or
loopne
xchg
jo
jecxz
pushf
jae
push
pop
sbb
pop
incl
add
pop
mov
cmp
add
fwait
add
cmp
subb
popf
in
cmp
pop
sub
test
pop
sti
push
dec
cmp
jp
ljmp
daa
push
inc
fcomps
dec
cli
xchg
add
adc
andl
push
xchg
mov
fs
test
dec
pop
dec
scas
lds
shl
inc
and
sbb
xlat
push
pushf
push
jge
cmp
out
add
imul
mov
sti
aad
arpl
xor
dec
or
dec
mov
mov
push
into
cwtl
add
addl
ret
into
mov
jl
adc
adc
mov
mov
call
loop
mov
hlt
icebp
xor
or
mov
aad
pop
sbb
mov
jl
mov
mov
jnp
movsb
clc
lods
lock
dec
es
cmc
out
or
in
mov
mov
rolb
cmp
dec
int3
xchg
push
leave
ds
nop
shrb
xorb
mov
pusha
lea
push
hlt
or
fmul
movsl
xorl
shrl
mov
iret
push
cmp
mov
sbb
or
rclb
mov
cmp
push
sub
jmp
shl
xchg
nop
mov
cmpsl
adc
pop
in
and
lret
xor
cltd
sar
pop
sbb
jg
outsb
fistl
loope
sti
fsubp
ret
int3
mov
push
ret
sub
sahf
mov
int3
cmp
cmp
hlt
mov
movsb
fcomps
into
outsb
add
xor
out
gs
jns
mov
sub
int
cmp
mov
add
mov
cmp
cld
cmp
sub
jg
cmp
insl
imul
cmpsb
mov
xchg
push
add
repnz
mov
sbb
dec
sbb
int3
or
xchg
in
cmp
sbb
mov
test
or
adc
jle
or
xor
sbb
pop
mov
int3
pop
add
stc
xchg
or
andb
fs
push
sub
icebp
stc
insl
stc
and
inc
sahf
push
movups
xor
int3
jne
inc
and
call
mov
arpl
out
sbb
fbld
pop
ret
lds
test
popf
and
pop
insb
jle
dec
hlt
or
sub
mov
fstpl
inc
cmpsb
push
and
pushf
mov
cmpsl
xchg
je
aam
div
push
lods
sbb
shll
mov
jb
ja
cmp
imulb
jns
jo
ret
jle
cmp
sbb
mov
roll
cmpsl
cmp
ss
fstpt
jae
push
and
cmp
repnz
sbb
test
pop
xor
push
and
out
dec
pop
push
mov
push
jno
fs
imul
rclb
push
sub
icebp
adcl
mov
pop
testl
jns
cmp
mov
sahf
je,pt
mov
lods
loopne
jnp
fiadds
inc
sub
jb
divl
int3
or
pop
pop
lcall
iret
sbb
out
jle
dec
pop
sbb
std
and
pusha
lahf
fmull
test
push
mov
push
aam
stos
iret
jo
or
in
pop
jle
push
test
es
sarl
xor
icebp
inc
or
mov
enter
das
or
xlat
sbb
and
imul
aam
dec
push
mov
out
dec
mov
mov
sub
jo
jne
mov
pop
popl
ja
cli
push
pusha
lcall
rclb
jb
inc
ja
incb
sti
xchg
jmp
fstpl
mov
dec
lret
and
push
jge
insl
mov
pop
shll
or
into
inc
push
mov
push
lea
or
xor
jns
lods
addr16
leave
in
dec
cwtl
push
sahf
lds
jg
push
mov
repnz
inc
pop
cmp
sub
cs
jo
pop
data16
cmp
pushf
repz
iret
pop
mov
pop
rcll
cmp
js
or
mov
mov
xchg
jecxz
inc
inc
lock
sub
xor
add
cmp
ret
icebp
mov
int3
dec
or
mov
or
dec
add
int3
xchg
int
adc
sub
hlt
or
mov
adc
sub
sub
cmp
rcr
mov
adc
push
dec
hlt
loopne
movsl
and
shll
out
and
xor
dec
gs
setnp
andb
fisttpl
xchg
in
jl
push
daa
scas
jb
aas
div
mov
out
call
test
dec
leave
mov
unpckhps
dec
aaa
push
xchg
jb
or
cli
ret
mov
nop
and
mov
cmp
jnp
mov
push
fnsave
cmp
xchg
push
and
xchg
mov
sub
enter
cmc
stos
mov
cld
push
xchg
add
hlt
xchg
mov
mov
push
in
cmpsb
mov
into
and
sti
shll
sub
cmc
mov
or
xchg
dec
imul
dec
push
testl
popa
sbb
mov
push
divb
xchg
xlat
cmp
scas
inc
jg
lahf
loopne
cld
adcb
sti
lods
insb
insl
mov
popf
nop
mov
or
mov
dec
sbb
es
mov
dec
pop
add
nop
js
insb
testl
popf
orb
mov
call
pop
add
mov
inc
inc
push
mov
das
stc
ds
dec
dec
mov
dec
ret
push
or
test
push
inc
sarl
fistps
jge
imul
aam
scas
mov
mov
sub
movsb
push
and
and
aam
std
insl
jno
addr16
mov
xchg
orl
mov
and
jp
fildll
fnsetpm(287
ret
inc
imul
xchg
aam
lds
out
push
outsl
jg
mov
pop
sub
mov
push
scas
add
lcall
fmuls
loop
xchg
mov
mov
sub
mov
clc
xor
mov
mov
test
ret
int3
fmuls
push
scas
or
lahf
add
mov
pop
xor
outsb
cmp
lret
or
fcmovne
lahf
mov
fadds
mov
test
jb
sbb
lret
jo
iret
loop
sub
mov
cmp
mov
xchg
or
dec
ret
in
add
sub
or
lret
jo
lahf
adc
sub
cmp
inc
das
mov
push
std
aam
sbb
dec
repz
xchg
test
pop
inc
xor
loope
mov
pop
bound
dec
push
push
repnz
imul
not
mov
pop
add
jns
add
dec
dec
inc
jl
in
push
ja
push
test
pushf
mov
mov
gs
into
pop
mov
xlat
out
fwait
jns
mov
lret
push
test
push
int
in
rorl
bswap
aam
inc
inc
jae
push
inc
xor
loopne
int3
xchg
sub
adc
mov
insb
or
test
mov
xlat
aad
cmp
mov
int3
and
out
add
xor
mov
arpl
mov
fdivr
sarb
pop
mov
into
ret
add
xchg
add
pop
pushl
inc
mov
mov
or
bound
cmp
pop
mov
mov
mov
fstps
mov
cwtl
test
bound
and
push
stos
out
mov
push
mov
jl
sbb
sub
int3
mov
sub
cli
scas
shlb
mov
repz
jns
bsr
push
pop
std
jno
inc
test
cmp
mov
aaa
outsl
jae
fs
or
test
add
dec
std
ret
jnp
mov
mov
add
pop
out
ret
push
cmp
xchg
cmp
and
sbb
shrl
mov
adc
test
sbb
jo
flds
push
xchg
gs
xchg
call
jo
stos
add
scas
or
cmc
movsl
xlat
repz
mov
lds
int3
iret
push
repnz
push
push
xor
ret
aad
or
cmp
popf
lcall
imul
jg
mov
jge
jo
xor
rcll
xor
cmp
xchg
sbb
lds
rcll
jae
aam
fisubrl
rorb
adc
lea
cmp
fistps
push
dec
mov
push
mov
insl
out
inc
icebp
sbb
push
lret
insl
lea
movsl
test
inc
out
xor
filds
and
or
scas
and
test
pop
and
xchg
subl
inc
fs
mov
jb
adc
lea
in
scas
xacquire
push
push
and
mov
jno
mov
enter
inc
loope
dec
iret
sub
sbb
sub
dec
test
popa
pop
mov
pop
pop
imul
sub
fadd
iret
push
mov
iret
mulb
repnz
sbb
jge
xor
call
xchg
fdivs
adc
or
cld
test
pop
loope
and
fnstcw
sbb
aad
je
sti
ret
rol
cmp
mov
and
pop
xor
mov
outsb
mov
movsl
mov
dec
add
repz
out
icebp
lret
jl
repz
pushf
add
lock
cmp
jns
test
xor
inc
fcomps
adc
outsb
sbb
std
xlat
add
iret
scas
out
aam
adc
inc
add
jbe
xchg
pop
jne
cmp
mull
mov
lret
stos
mov
adc
push
cmpb
call
cmp
sub
jo
aas
roll
leave
jle
push
std
pop
fsubrs
fldcw
cmp
cmpsl
add
xchg
pop
jge
lret
xorw
jno
jb
lods
adc
sbb
pop
cmp
cmp
inc
add
push
add
mov
call
in
ljmp
xchg
mov
push
pop
cld
xor
pusha
out
in
adc
movsl
stc
jne
sbb
xor
and
mov
push
divb
and
out
pop
cwtl
sbb
pop
mov
xor
mov
gs
mov
imul
ljmp
inc
mov
mov
mov
cli
pop
icebp
out
bound
jg
sub
cmp
pop
mov
jnp
daa
aas
ret
mov
icebp
dec
add
outsb
mov
in
or
push
movsb
loopne
ret
cwtl
out
inc
mov
addl
add
movsl
sbb
inc
lods
push
mov
aas
cwtl
dec
xor
out
dec
and
icebp
filds
icebp
push
mov
cmp
jb
aad
test
fildll
enter
sub
adc
fists
addr16
outsb
movsl
das
les
inc
push
inc
push
dec
push
dec
push
insl
iret
roll
lahf
jmp
push
add
jge
jl
je
dec
xchg
fisubrl
adc
xchg
enter
xchg
ljmp
inc
sbb
fdivs
mov
aas
cmp
xchg
adc
lcall
dec
push
fisubrl
xor
js
inc
dec
and
xor
enter
adc
cli
dec
xorl
pop
jp
ljmp
xchg
adc
push
xchg
pop
lock
cmpsl
add
xchg
idiv
in
or
iret
xchg
in
rcr
gs
movsb
bound
in
jo
into
mov
mov
loop
inc
mov
fisubrl
cmp
jno
jg
or
movsl
stc
popf
fdivrs
xor
mov
xchg
push
dec
test
lahf
in
add
xchg
mov
mov
fisubrl
or
inc
xchg
rolb
fstps
fsub
sbb
mov
insl
fiaddl
pop
mov
in
xchg
or
lahf
push
idivl
lret
in
shlb
sbb
inc
inc
mov
mov
mov
push
jne
sti
in
lock
xor
out
adc
cmpsl
dec
mov
mov
fs
cli
mov
mov
cmpb
pop
xchg
insb
inc
ret
shrl
dec
into
xchg
sbb
inc
les
sub
xor
pop
push
clc
pop
mov
leave
dec
popl
rcr
mov
cmp
cli
clc
nop
aam
mull
sbb
lock
cmp
mov
into
push
mov
push
add
sbb
dec
daa
sub
and
in
cmp
lret
mov
adc
lcall
xchg
in
sub
cli
pop
and
fs
adc
dec
push
jmp
sub
cmp
dec
push
outsl
xchg
cmp
or
js
cmpsb
add
and
fnstsw
push
popa
enter
in
lea
outsb
adc
orb
xor
and
cmpsb
rorl
rorb
mov
or
push
arpl
sub
sbb
pop
xor
and
rcll
mov
xor
aas
push
mov
fisubrl
shlb
push
jne
fwait
add
test
call
mov
or
xor
das
clc
stos
dec
xchg
inc
dec
sub
addb
mov
and
repnz
xchg
pop
add
jae
je
mov
xor
aaa
in
inc
bnd
push
addb
addr16
sbb
adc
das
js
test
mov
sbb
add
cs
mov
push
mov
mov
fs
jp
les
pusha
sub
sbb
sub
xor
xchg
inc
lahf
sbb
nop
push
push
inc
fwait
shrl
out
aas
jne
push
sbb
add
mov
jg
pushf
cmpsb
scas
jmp
mov
test
xchg
ror
pushf
lds
adc
lret
cmc
mov
push
test
sbb
jnp
mov
or
or
pushf
int3
mov
stos
sub
and
icebp
and
sti
push
out
stos
mov
mov
add
add
stos
dec
mov
movsb
adc
in
sti
bound
fadds
pop
adc
data16
lret
dec
icebp
push
jmp
cmp
mov
icebp
cmp
sub
mov
loop
xchg
mov
in
dec
fsub
sbb
iret
mov
dec
lods
cmpsb
sbb
xchg
jno
jnp
fwait
adc
pop
sub
pushf
mov
jecxz
jp
xchg
lds
cmpsb
jns
sub
popa
adc
cmpsb
data16
push
fistps
dec
stos
pop
push
xabort
mov
pop
es
insl
rorb
fmull
rclb
nop
and
pushf
fisttpl
movsb
push
je
decl
or
xchg
xor
pop
out
lahf
stos
test
fisttps
xchg
fwait
jle
sub
pop
jge
das
int3
and
in
aaa
rorb
loope
testb
pop
dec
outsl
es
and
les
je
jo
sbb
int3
ljmp
xchg
test
pop
stos
mov
hlt
or
jb
sti
mov
mov
adc
test
dec
jge
cmp
adcb
je
mov
popa
jge
inc
ja
iret
add
mov
lea
out
xchg
cs
fisubs
outsl
xchg
sub
sbb
adc
int
ja
inc
out
testb
mov
rolb
roll
stos
ret
adc
jp
cmpsb
cmp
addr16
shll
incb
add
and
dec
push
ja
adc
cmp
test
test
dec
xchg
outsb
sarb
and
inc
pop
je
lods
add
pop
mov
fdivr
inc
cwtl
icebp
gs
push
push
popf
xchg
add
pop
and
add
ret
sahf
lcall
fimull
inc
add
ja
xor
aad
mov
sti
dec
sbb
sti
lock
mov
ret
sbbb
push
out
test
jnp
mov
les
std
jl
mov
dec
mov
ss
js
lcall
les
xchg
dec
cmpsl
inc
scas
pushf
out
idivl
lahf
gs
xchg
dec
or
movl
rcll
adc
pop
rorl
inc
jl
inc
jge
jle
xchg
xor
aad
xchg
dec
cltd
xchg
add
mov
mov
push
popl
xor
in
xchg
stos
ss
sbb
test
ret
fstpt
mov
and
lods
mov
in
inc
and
int3
and
push
bound
push
cld
ret
cld
fnsave
fsub
mov
xchg
jb
fwait
sub
in
cmp
mov
sub
and
fldcw
pop
insl
into
sub
orl
pop
mov
sub
mov
sahf
dec
loope
mov
sbb
dec
sbb
outsl
jcxz
popf
mov
fnstcw
sbb
cmp
xchg
imul
mov
iret
jae
ja
sub
xchg
xchg
inc
cmp
movsb
out
sub
ss
std
xor
enter
sahf
pop
jno
sti
jns
scas
fisubs
ljmp
je
or
add
inc
stc
fld
cwtl
movsl
icebp
int
xor
test
push
xorb
movsl
int
es
aaa
mov
negb
and
jno
fsubl
push
cmp
shlb
mov
jle
pop
in
adc
pop
inc
xchg
and
jl
ret
out
inc
cwtl
mov
dec
popw
pop
push
movsl
pop
rorb
lcall
in
inc
mov
adc
out
stc
mov
in
inc
loop
sbb
pop
scas
push
push
sbb
cs
lret
in
jbe
mov
ljmp
bound
sti
sahf
or
ficomps
scas
fisttpll
mov
loopne
movsb
das
rcll
mov
xchg
mov
leave
mov
sub
xchg
xor
xchg
and
adc
jo
out
inc
mov
ret
in
repnz
adc
sbb
sbb
insb
out
xchg
jmp
mov
pop
cmp
add
sahf
mov
mov
cmpsl
jnp
push
outsb
pop
inc
or
push
mov
xchg
push
adc
into
inc
leave
cs
mov
push
push
aaa
sbb
or
push
loope
sbb
jbe
test
dec
mov
sub
cmp
ret
cmp
fsubl
xor
adc
add
daa
lcall
lret
lcall
jg
cmp
push
pop
lahf
ffreep
scas
fistpll
cmpsb
imul
enter
sub
cmpsb
mov
aaa
into
mov
lods
cmp
mov
sub
out
cmp
in
add
divb
les
or
enter
loopne
ret
inc
sti
aad
in
scas
xor
lock
push
outsl
adc
rcrl
jo
jne
push
scas
inc
rcll
add
jecxz
fmul
aaa
lret
imul
ficomps
mov
xchg
sub
cld
or
mov
adc
imul
mov
add
cs
cld
adc
inc
gs
shll
mov
fucom
sti
add
leave
mov
xchg
pop
mov
pop
imul
jo
or
pop
inc
mov
dec
jecxz
hlt
scas
cmp
or
jns
repnz
push
inc
mov
test
and
xchg
mov
mov
lds
add
scas
mov
and
xchg
mov
insb
mov
call
outsl
add
or
data16
pop
mov
outsb
pop
sbb
sbb
out
lods
loop
pop
sub
movsb
xor
pop
dec
fninit
lds
loopne
xor
subb
push
dec
idivb
pop
cli
mov
filds
inc
lods
ss
push
xor
test
add
inc
repnz
sbb
sbb
test
xor
jmp
mov
xchg
xor
pop
xchg
xchg
or
push
pop
xor
icebp
lods
sbb
orb
out
les
testb
push
or
or
and
mov
mov
push
sbb
push
movsb
cmp
divl
adc
jnp
movsl
icebp
cmc
aas
xlat
jbe
jnp
cmp
loope
popf
sub
mov
mov
xor
jp
pushf
pusha
aas
jnp
mov
repnz
imul
sbb
int
insl
add
aad
inc
push
call
leave
ror
mov
je
rcpps
sbb
xchg
push
and
xchg
inc
jp
xchg
popa
mov
push
or
call
hlt
outsb
popa
jge
or
add
ret
pop
mov
mov
icebp
sub
in
add
fists
and
pop
and
push
iret
pop
es
stc
and
cmp
ss
mov
jae
mov
xor
stos
mov
mov
mov
mov
or
scas
js
fisubl
and
mov
sub
xchg
ds
movsb
pop
imul
mov
pop
cmp
inc
adc
jnp
in
iret
movsl
cmp
ret
inc
aam
mov
cs
in
ja
outsb
sub
xor
xchg
test
in
or
arpl
scas
mov
clc
jns
je
jp
mov
pminsw
mov
fldt
jns
or
mov
lods
mov
pop
jno
test
dec
rclb
out
pop
xor
jb
cmp
sbb
mov
mov
or
lods
loopne
nop
outsb
push
sub
cmp
adc
dec
sbb
out
jnp
sub
rorl
jno
pop
inc
int3
out
idivb
fs
inc
sub
jb
add
mov
fcompl
cltd
mov
xchg
mov
rcll
push
sbb
aam
lea
lds
mov
jb
cmp
hlt
cld
lods
or
push
push
inc
cs
jae
adc
mov
cmc
xor
sub
mov
out
mov
cli
or
stc
jmp
clc
or
insl
sub
cmovo
cwtl
mov
mov
xor
jl
out
ficomps
or
mov
push
cmp
dec
popf
stos
or
pop
cmp
jo
jno
cmp
outsl
leave
jle
adc
or
and
outsl
movsl
pop
cli
push
add
addr16
push
decl
call
shll
add
ljmp
jmp
jns
inc
xorb
loop
arpl
dec
cwtl
dec
in
subb
mov
cltd
gs
testb
cld
popf
rolb
mov
je
xor
pusha
mov
daa
into
idivl
push
in
adc
lret
mov
rcl
pop
lret
adc
fmull
jnp
aaa
or
pop
inc
xchg
sbb
sub
mov
mov
pop
mov
xor
push
mov
adc
repnz
scas
aad
xlat
aas
cmp
add
mov
mov
mov
shll
fisttpll
jg
loopne
outsl
pop
shll
jbe
aam
jb
mov
mov
sbb
sarl
loope
or
and
icebp
or
jle
andl
orb
jb
dec
ljmp
clc
test
sbb
filds
ret
popa
pop
fsubrp
push
add
stos
and
adc
dec
pop
addl
daa
xchg
jb
hlt
sub
arpl
sahf
and
repnz
cmp
adc
add
sbb
sub
test
pop
cmc
sub
mov
pop
inc
outsl
gs
mov
in
mov
mov
pop
fninit
jae
out
cmp
cmc
sub
mov
bound
repz
out
jo
lret
xchg
xchg
mov
push
out
daa
sub
or
fsubr
nop
and
adc
mov
arpl
jno
and
ret
cli
clc
mov
xchg
and
push
imull
push
or
int3
cld
ljmp
cmpb
jnp
sbb
pop
xchg
data16
iret
je
cli
jmp
jge
xor
dec
test
mov
push
ds
fcoml
pop
and
sbb
lods
add
jns
sti
and
cmc
repz
lea
out
repz
loope
stos
mov
loopne
sub
cmp
hlt
enter
mov
test
cmc
int3
pop
cmp
test
dec
sub
decl
adc
shrb
lock
out
paddw
jle
cmc
mov
pop
xlat
nop
sahf
insl
negl
and
out
aad
pushl
mov
dec
adc
in
push
inc
std
lret
dec
xor
insb
into
pop
inc
push
dec
push
shrb
pop
outsl
imul
sub
outsb
dec
push
mov
mov
jecxz
push
xchg
dec
mov
mov
shll
sbbl
movsl
jge
movsl
int
popl
iret
jecxz
jmp
mov
cmpsb
inc
pop
inc
jb
cmc
stc
xchg
mov
mov
push
pop
orl
popa
outsl
add
mov
mov
lea
mov
push
mov
mov
sti
dec
inc
es
lods
push
push
pop
inc
jne
call
lock
mov
ja
add
jno
fisubs
fisubl
xor
dec
movsl
std
std
insl
aas
adc
pop
pusha
mov
imul
jl
xchg
and
sahf
in
fwait
mov
cmp
ret
jo
sbb
hlt
jno
cmpsl
dec
cs
icebp
out
popa
stos
testl
mov
jo
inc
mov
roll
repz
push
aad
push
push
hlt
lds
ffreep
out
jl
nop
cli
jmp
shll
loope
inc
mov
adc
push
inc
mov
cmp
mov
and
mov
sbb
sub
jp
inc
mov
repnz
cwtl
mov
loop
or
jne
cmp
inc
pop
sub
cmp
mov
pop
mov
mov
out
rcl
inc
cmpsb
orl
lods
mov
push
and
push
clc
push
in
leave
push
cmc
fdiv
rolb
adc
movsb
addr16
mov
add
hlt
outsb
mov
fbld
xchg
adc
sub
repz
and
stos
add
loop
push
call
cmp
fs
and
adc
jl
xchg
jno
cli
cmp
push
sar
es
push
std
jmp
sbb
fucomp
test
mov
jae,pn
mov
mov
insb
mov
out
sar
out
popa
movsl
sub
xchg
cwtl
sub
leave
and
adc
push
outsb
outsl
les
mov
std
mov
call
frstor
mov
add
jl
jbe
imul
cmp
xchg
jbe
cmp
push
pop
cs
and
sbb
sub
dec
in
lahf
ss
outsb
jl
push
scas
push
adc
xor
enter
insl
lods
shll
cmp
outsl
xor
ficoms
bswap
cmp
mov
jp
rcrb
pop
and
sbb
xor
add
adc
stos
add
je
jle
clc
pushl
fldt
add
iret
inc
lret
jne
mov
add
gs
inc
sbb
xor
sahf
aam
sub
jne
and
das
push
ret
cmp
mov
sbb
jp
sti
fcomip
cmp
loop
mov
aad
dec
add
push
pop
jb
scas
xchg
jl
xorl
jp
mov
push
xchg
orb
orl
pop
pop
enter
scas
lret
mov
or
cmp
mov
xlat
je
xchg
jp
ljmp
mov
jmp
add
loop
mov
dec
and
adc
dec
insl
idivb
in
mov
outsb
out
popa
dec
outsb
mov
push
or
push
int
xor
std
dec
sti
sbb
lea
cmp
in
lret
xor
jbe
mov
mov
pop
gs
mov
clc
pop
in
cltd
leave
mov
or
rcll
lret
ret
pop
jne
out
pop
cld
mov
cltd
sbb
int3
push
pusha
push
mov
jecxz
cmpl
push
leave
jmp
clc
sub
ds
push
lret
push
pop
add
insl
adc
flds
xor
shrl
movsl
fdivs
test
cmp
inc
jno
fsubl
cmc
fwait
in
into
mov
mov
or
mov
gs
pop
bound
out
mov
add
sub
test
cli
mov
pop
dec
into
ljmp
jo
out
lret
mov
loope
roll
jns
or
lods
shll
cs
sbb
xor
lock
testl
subb
rcrb
lcall
jg
or
adc
inc
sub
fistps
and
cltd
stc
pushf
sbb
xor
cmp
daa
enter
sarb
push
push
xor
dec
pop
sahf
sbb
push
hlt
rcrl
inc
dec
ret
and
std
in
xchg
dec
lcall
xlat
pop
repz
shl
cmp
roll
lret
je
mov
fs
xor
movzwl
xchg
pop
in
pop
and
rcrb
fisttpll
pcmpgtd
pop
xchg
mov
cmp
shrb
inc
subl
sub
ret
fldenv
lcall
sub
std
movsl
fnstcw
mov
idivl
out
insb
mov
sbb
ljmp
jo
cmp
sub
rcll
addr16
cwtl
dec
and
push
aaa
fstp
add
rorl
addb
adc
mov
xchg
inc
jb
std
pop
adc
cmc
and
push
dec
cs
out
stos
or
jae
js
cmp
and
or
push
popa
inc
ljmp
mov
callw
dec
inc
lret
imul
popa
lcall
je
xchg
out
or
dec
popa
insl
add
rcr
inc
xlat
das
cmp
jbe
addr16
ret
addr16
mov
adc
mov
stos
pop
ds
and
mov
adc
pop
jp
cmpsl
dec
cwtl
mov
mov
adcb
and
cld
sbb
jmp
jecxz
xor
aaa
jbe
or
icebp
mov
mov
cmpsb
sbb
jmp
into
inc
push
xchg
mov
incl
or
push
lret
mov
mov
repz
or
sti
repz
xchg
cmp
jl
shlb
in
lds
dec
daa
movsb
mov
pushf
rorb
inc
clc
mov
icebp
xchg
sbb
xchg
fwait
cli
jns
lret
jae
pop
clc
stos
test
int3
out
stos
aaa
fbstp
loope
aaa
xor
and
shll
adcl
mov
out
jo
cmc
sub
rclb
add
out
dec
pushf
mov
cs
push
fsubs
fmull
jp
stos
sbb
clc
inc
xlat
ss
aas
cmpsb
insl
std
cmp
rorb
fimuls
aad
jle
mov
imull
dec
mov
jmp
imul
fistpll
into
mov
inc
mov
push
repz
das
push
lds
rcl
lods
pushf
inc
pop
pushl
pusha
std
in
inc
jge
scas
add
adc
mov
scas
movsb
dec
daa
sarl
stos
out
cmp
enter
insb
fs
inc
lea
lcall
jle
aaa
movsl
ret
test
pop
pop
and
add
dec
cmp
fwait
lods
insl
movsb
cmpsb
sub
cs
cmc
lock
xor
lods
sub
push
fildll
je
jp
mov
adc
test
mov
xchg
stos
pop
fistpll
inc
xlat
jge
out
mov
pop
xor
cmp
cmp
test
and
iret
lea
dec
nop
sbbb
sbb
loop
xchg
xchg
sarl
inc
jno
pop
call
loope
xor
les
cwtl
lret
cmpb
ret
inc
ja
jg
shll
cld
mov
inc
mov
xchg
adc
jo
lock
addr16
cmc
mov
sbb
dec
rcll
fidivrs
push
mov
fcmovu
jge
jge
popa
inc
stos
gs
aas
mov
cmpsl
adc
test
sub
add
sahf
test
mov
imul
add
mov
mov
jle
bound
pop
hlt
jle
pop
test
imul
inc
das
ljmp
lret
xchg
jp
mov
lret
pop
jmp
mov
mov
sub
or
cs
mov
jecxz
scas
sub
push
rcr
ja
loop
mov
std
and
movsl
add
sbb
es
push
loop
aam
movsl
jg
mov
inc
shr
addr16
aaa
jns
testl
xor
sub
and
xor
pop
test
int3
push
or
and
daa
jle
lahf
mov
mov
call
adc
in
pushf
sysret
dec
mov
push
andb
jb
aas
mov
sub
fucompp
mov
mov
mov
or
add
addr16
xor
ljmp
pop
aad
mov
push
push
addl
mov
inc
dec
cmpsb
push
cmp
jns
lahf
mov
xor
xchg
sbb
addr16
jmp
mov
push
sahf
stos
dec
out
pop
jb
clc
sub
lahf
mov
dec
add
ss
cmc
lods
adc
mov
ljmp
push
pop
mov
rcl
cld
icebp
cli
xchg
cbtw
paddusb
sub
jns
mov
add
out
cltd
daa
leave
nop
push
outsl
push
xchg
push
notb
movsl
sbb
je
sbb
dec
cmp
adc
jae
in
mov
mov
pop
pop
das
add
in
sbb
movsl
daa
stc
dec
lahf
pop
iret
lcall
pop
xchg
jae
pop
jmp
lret
add
adc
jno
mov
popa
sahf
ja
ds
mov
inc
adc
pop
pop
mov
adc
out
pop
or
jp
pushf
test
jnp
in
mov
add
adc
lds
dec
jge
sbb
add
mov
push
sbbb
mov
xor
je
and
cmc
pop
xchg
sbb
out
jmp
pop
cmpsl
sub
push
jae
ds
aaa
rclb
bound
inc
sub
xchg
mov
cmp
pop
faddl
cmc
adc
adcb
cmp
enter
and
cli
mov
mov
dec
mov
inc
xchg
in
lahf
jmp
push
mov
fstl
cmc
adc
clc
lahf
mov
in
push
adc
cld
mov
or
sbb
and
fs
mov
lock
dec
jl
sub
iret
add
popa
sub
mov
fs
push
pop
sub
rcll
mov
mov
sub
pop
xchg
out
push
fsubrl
mov
jecxz
inc
clc
in
mov
jnp
imul
pop
movsb
gs
cmpb
lods
daa
das
icebp
stos
cmpsb
neg
fstpl
mov
das
out
pop
pop
push
sub
sub
in
add
data16
rcrb
jmp
out
in
outsb
pop
jb
inc
mov
jns
mov
ja
dec
sub
in
mov
call
pop
aad
xor
adc
sbb
xchg
sub
pop
pop
push
int3
add
jl
int
clc
loopne
xor
xchg
add
mov
mov
push
and
add
lds
adc
xor
das
cmpsl
int3
mov
enter
mov
mov
mov
ret
divb
cmp
sub
mov
jge
and
shl
cmp
cmpsl
dec
mov
cs
andb
jb
jo
push
ja
stos
mov
fisubl
mov
outsl
mov
dec
loopne
xchg
sbb
lret
rclb
mov
pushf
sahf
cmp
adc
xchg
mov
dec
jno
mov
mov
outsl
int
dec
adc
push
cltd
in
fcmove
jnp
repnz
call
xchg
mov
sbb
jno
sbb
loope
fisttpl
scas
insb
lcall
lret
mov
loop
mov
or
insb
movl
insl
sub
daa
pop
into
les
pop
jno
fsts
jecxz
or
out
scas
sub
enter
and
fisubrs
daa
lcall
sub
adc
and
popf
push
jns
add
dec
jmp
pop
pusha
stos
movsl
mov
and
es
arpl
ja
stc
mull
nop
cmp
je
fldt
in
jno
sub
jecxz
mov
and
mov
testl
test
pop
adc
ret
jne
pop
jecxz
mov
cli
xor
xor
add
add
inc
lahf
div
lret
xchg
add
pushf
roll
add
mov
dec
iret
inc
xchg
cli
dec
mov
fistpl
int3
gs
in
dec
scas
jbe
scas
jno
mov
xchg
cmp
out
xchg
cmp
cs
dec
jns
push
push
xchg
jmp
lock
movsb
cmp
mov
imul
lods
test
lcall
lret
adc
push
test
inc
repz
xorl
mov
xchg
mov
adc
inc
test
dec
bound
jnp
repnz
sub
fldcw
mov
clc
mov
shlb
inc
add
dec
add
mov
pop
cmp
and
mov
mov
sbb
cmp
imulb
push
mov
nop
fstl
iret
ss
sub
mov
xor
out
stos
push
out
mull
ljmp
push
lock
push
aas
push
sub
sbb
lods
add
test
test
sub
fstpt
add
out
jnp
sti
sbb
mov
mov
cmpsl
cmpb
push
cmpl
and
jb
mov
push
cltd
rorb
ljmp
mov
jge
xchg
ja
hlt
push
out
xor
inc
scas
xor
mov
sub
push
adc
mov
mov
rorb
cmp
dec
repnz
lea
pusha
lcall
mov
mov
mov
inc
mov
jp
loope
jg
xchg
andl
jl
ds
into
jo
mov
cld
lcall
jae
adc
stos
inc
and
pop
push
jp
lcall
sub
fwait
nop
enter
add
int
jecxz
pop
mov
sub
out
push
xor
sub
icebp
dec
cmpsl
arpl
adc
repnz
call
fcomps
add
cmp
popa
loopne
shr
inc
testb
scas
mov
mov
inc
ret
stos
mov
cltd
mov
dec
push
xchg
mov
stos
lret
aam
cmp
popf
and
lea
cmp
in
xchg
lcall
data16
and
push
or
cmp
fs
or
decl
jp
test
or
add
aam
mov
jae
cmp
lret
mov
push
test
push
push
stos
das
rcr
sub
fstpl
fldt
stos
push
add
inc
push
sbb
pop
cwtl
xor
das
sbb
in
add
add
cmp
pop
ficoms
lahf
jo
lahf
jne
lret
rolb
sub
push
xor
std
xlat
mov
addr16
into
and
insb
int3
push
jl
addr16
mov
inc
int3
sub
mov
mov
lcall
fwait
inc
imul
dec
dec
push
outsb
cmc
xor
orl
jns
jmp
pop
and
shlb
sbbb
sbbl
cmpsb
or
push
xlat
push
and
xor
pop
mov
scas
mov
sub
clc
mov
push
cmp
mov
mov
jno
loopne
inc
fildl
jnp
arpl
push
push
adc
daa
dec
xchg
sbb
ljmp
sub
fimuls
iret
xchg
push
dec
inc
lret
mov
dec
in
and
inc
scas
rolb
in
dec
cld
stos
adc
push
daa
jnp
xchg
ror
lcall
mov
addr16
push
cmpsl
nop
sub
mov
xor
xor
add
outsl
pop
push
push
filds
xchg
adc
lea
imul
cmp
sar
data16
sub
mov
or
pop
mov
scas
jg
lret
add
gs
pop
dec
pop
jne
loop
aad
sub
mov
xchg
imul
int
mov
fadd
pop
repnz
xor
pusha
add
jle
lds
sub
mov
push
cs
cmpsl
cmp
arpl
adc
data16
dec
dec
adc
fsts
sub
xchg
lea
stos
lcall
outsb
and
mov
jp
pop
outsb
xor
mov
xor
adc
xchg
xor
and
loop
pop
cmp
test
movsl
mov
je
test
ret
pusha
lea
lret
push
fisubs
sbb
leave
js
sub
popf
cltd
sub
push
scas
in
shlb
icebp
cli
mov
inc
jmp
enter
mov
js
mov
sub
mov
xor
dec
out
pop
cmp
mov
or
push
in
cmp
push
sub
leave
dec
ja
and
mov
inc
rcll
xchg
inc
fidivrl
mov
idiv
repnz
inc
inc
sub
dec
pushf
aas
mov
outsb
cmc
xchg
out
fs
add
mov
xchg
push
out
aaa
rol
or
mov
sub
data16
mov
sbb
mov
sub
cwtl
imul
add
mov
lret
pop
aam
mov
addr16
aas
ja
into
pop
sbb
and
iret
lock
insb
and
pop
test
xor
dec
and
sub
sbb
cli
jb
xor
fsubs
mov
aaa
mov
mov
sub
or
shl
xor
popf
pop
popf
aam
cli
cld
adc
ljmp
shrb
mov
push
lea
pop
imul
sub
ret
pop
pop
mov
xlat
outsl
pop
mov
jbe
incl
mov
mov
les
ffreep
loopne
rorl
jae
nop
sbb
ljmp
lods
sbb
jnp
fadd
xchg
fwait
inc
loopne
dec
xchg
loop
fisubrs
pop
lds
fadd
jo
jo
insl
idiv
and
adc
sub
sub
in
jmp
pop
or
loopne
mov
fstps
add
pop
mov
ret
out
mov
and
lahf
out
inc
repnz
adc
cmc
loopne
inc
les
adc
cmp
and
inc
push
scas
mov
cmc
pop
and
adc
add
int3
popa
cwtl
insb
mov
rcrl
repz
test
clc
dec
push
xor
fcomp
icebp
movsb
cs
cld
fistl
into
jmp
es
xor
and
repz
movsb
xchg
sub
lret
in
mov
insl
inc
lret
mov
addb
roll
sbb
loop
fidivrl
sbb
outsb
fldenv
ss
push
xor
ds
sbb
aam
mov
pop
cmp
xlat
xchg
lds
add
push
notb
push
mov
add
fcmovb
adc
push
sar
mov
or
stc
pushf
stos
adc
mov
mov
mov
mov
mov
lea
xchg
fcoms
pop
mov
sub
lahf
pop
and
adc
inc
inc
bnd
cld
test
jge
or
dec
xor
fnstcw
lods
pop
fs
mov
scas
ds
xchg
xchg
xchg
xchg
xchg
cmp
pop
push
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
xchg
xchg
xchg
xchg
xchg
xchg
adc
pop
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
