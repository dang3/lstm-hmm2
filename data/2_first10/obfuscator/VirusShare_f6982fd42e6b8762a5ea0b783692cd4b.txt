pop
mov
push
mov
inc
and
mulb
fsubs
imul
ret
and
stos
jg
test
mov
inc
mov
call
pusha
bt
mov
adcl
shl
cltd
pop
cs
jl
dec
xor
pop
xchg
aas
xchg
adc
arpl
add
mov
das
mov
mov
shlb
ja
sbb
mov
arpl
bound
push
hlt
pusha
js
test
jns
xchg
inc
sbb
sbbb
push
out
sub
mov
nop
lcall
inc
xor
cmp
out
xor
adc
out
mov
aas
jmp
iret
jge
add
dec
xor
stc
mov
or
xchg
out
aam
lcall
pop
cld
ds
inc
dec
adc
mov
loop
ret
or
dec
call
mov
repnz
and
je
cmc
cmp
pusha
jmp
cli
xor
mov
cmp
fucomi
push
sahf
mov
rorl
icebp
sub
xchg
jbe
sbb
or
inc
out
shll
xchg
les
xchg
xchg
iret
lock
fistl
sar
insl
test
cmp
jg
mov
and
insl
sbb
into
into
dec
in
insl
cmp
mov
xchg
xchg
jecxz
jns
ss
je
push
cltd
ret
in
fiaddl
or
loop
bswap
push
and
btc
btc
push
shl
sbb
mov
sub
cmp
sub
mov
inc
movsbw
mov
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
les
jecxz
lahf
bt
bsr
stc
mov
setle
bt
mov
bt
push
shl
shld
and
mov
clc
cmc
sub
call
jg
cli
mov
test
push
xchg
test
adc
stos
out
and
ret
jl
repz
xchg
jbe
xchg
rcrl
shlb
stc
divb
sub
pusha
cmc
cmp
add
sub
xor
into
imul
mov
mov
lea
push
aaa
popf
lea
fcompl
aaa
js
push
jge
and
test
outsb
insl
test
ret
adc
and
sar
je
add
mov
add
adc
pushf
push
lea
jmp
cwtl
aam
jle
cli
inc
mov
and
dec
cmp
mov
in
hlt
xor
das
std
pop
lahf
sar
mov
repnz
decw
les
mov
shlb
ljmp
loopne
ds
push
loope
push
mov
dec
movsl
jnp
scas
inc
or
xchg
lock
loop
mov
stc
shll
xor
gs
inc
aaa
pusha
leave
clc
daa
sbb
inc
ficompl
aas
nop
pop
push
aaa
push
xchg
xchg
sti
jno
out
sbb
mov
pushf
sbb
sub
popa
push
mov
sti
push
mov
xchg
out
std
cs
mov
jmp
out
repnz
jnp
inc
stos
repz
cmp
adc
inc
xchg
mov
add
pop
jo
cmp
cmp
mov
stc
sbb
stc
dec
push
mov
jmp
xor
jg
cli
fildl
call
stos
stos
mov
xchg
xor
add
or
andl
gs
or
loop
stos
inc
adc
xchg
xchg
sarb
push
xchg
lahf
cltd
xchg
rcrb
inc
fwait
xor
movsb
push
cmp
std
inc
rorl
and
xchg
mov
popf
and
sti
arpl
mov
jb
cmpb
push
push
mov
ret
ds
mov
xor
fsubr
out
push
adc
push
ret
jnp
pushf
movl
pushf
pushf
movw
mov
pushf
pushf
mov
movb
pushl
ret
cmp
pushf
lea
ja
jmp
lock
adcl
mov
push
fistl
inc
mov
repz
mov
rsqrtps
jecxz
jmp
stos
xchg
sub
out
mov
fidivrl
aad
out
mov
jmp
adc
scas
insl
addl
xlat
rorl
insb
sub
daa
inc
cmp
lret
lods
scas
adcl
jb
mov
sub
cmpsb
sbb
imul
imul
sbb
inc
jnp
rorl
mov
stc
pusha
and
jb
xchg
data16
xchg
int
fwait
adc
adcl
fstpl
daa
push
mov
push
push
out
dec
add
sbb
idiv
add
lcall
subb
imul
jbe
test
repnz
sub
push
or
xlat
lret
pusha
lcall
cltd
mov
fimuls
mov
leave
outsb
test
or
pop
mov
test
mov
xor
mov
nop
lret
lret
cmp
scas
call
mov
sub
push
mov
fs
add
pushf
pushf
lea
jne
pusha
lea
call
pushf
pusha
pushf
pushf
lea
jmp
stos
out
adcl
push
mov
call
int3
fnstsw
and
inc
add
stos
out
ljmp
leave
xchg
sub
jae
xchg
nop
jne
xchg
push
iret
sbb
cmp
ljmp
rcrl
add
adc
test
in
sbb
cmc
cmpsl
enter
inc
popf
dec
not
pop
cmc
stos
lret
ljmp
pop
xchg
pop
pop
pop
dec
out
pop
add
mov
aaa
ds
les
cmpb
xchg
loop
pop
clc
scas
fdivs
cmpsb
sbb
sti
xor
out
or
mov
and
add
mov
mov
stc
inc
cmc
xlat
push
jns
xchg
pop
addr16
push
add
add
int3
loopne
lcall
dec
sbbb
jbe
scas
jmp
lods
push
sti
cmp
hlt
push
lcall
fcomi
push
adc
sahf
lea
je
stc
add
clc
cmp
push
lea
jb
bt
stc
cmp
jmp
lea
ja
dec
and
stc
rcr
sub
shl
add
push
shld
cmc
pusha
mov
mov
mov
test
bt
cmp
jmp
lea
jae
pusha
sub
pushf
jmp
and
test
movb
add
pushf
pusha
movl
lea
jmp
sbb
test
xchg
mov
jne
pop
jo
lock
mov
jbe
movsl
js
xor
jmp
daa
cmp
cmp
jg
repnz
sarb
adc
push
es
in
shl
pusha
jmp
call
inc
iret
cmp
xor
pop
pusha
xchg
fmull
inc
inc
pop
pop
pusha
or
inc
xchg
stc
xor
std
add
lret
aas
mov
add
int
inc
mov
test
jecxz
mov
testl
in
and
ja
push
das
int
lahf
mov
jne
stos
adc
clc
push
mov
mov
mov
adc
mov
arpl
es
inc
inc
subb
mov
ja
stos
es
outsl
cmc
xchg
imul
dec
push
and
test
es
jg
jge
push
mov
pop
push
mov
pop
push
push
mov
cmp
cmpsb
fstp
jmp
pop
iret
sbb
lret
aaa
mov
dec
jecxz
cmpsb
mov
xchg
xor
pusha
xor
mov
cwtl
in
or
js
xchg
insb
mov
mov
or
xchg
push
push
cmp
dec
jb
dec
and
push
fs
les
push
push
pop
jg
jle
out
or
lock
outsb
mov
fwait
adc
lea
jp
or
mov
shld
call
bt
or
call
mov
xchg
mov
pushf
push
mov
movzbw
pushf
movsbl
mov
pushf
pushl
call
mov
lods
shr
neg
jmp
out
pop
xchg
popa
sbb
sub
inc
mov
xor
cs
sti
js
lock
xchg
or
enter
cmp
sbb
dec
mov
jnp
rorb
clc
icebp
xor
mov
imul
fistpll
pop
push
addl
adc
lods
cmc
xor
into
adc
outsb
into
adc
jle
pop
test
adc
mov
mov
test
inc
xchg
cmp
adc
je
rol
btc
bsr
bt
add
lea
setbe
sub
adc
shrd
bts
shr
bsf
mov
add
add
bts
bswap
pusha
add
push
push
mov
pushf
clc
stc
shr
cmc
clc
movb
cmc
cmp
push
movl
lea
je
push
stc
cmc
cmp
jmp
ljmp
ja,pt
sbb
jnp
aad
ja
sub
cli
mov
test
cmp
adc
out
arpl
pushf
add
aam
sbb
cmp
jl
add
pop
mov
push
cli
fwait
in
or
xor
or
daa
popf
daa
fnstcw
xor
daa
xor
enter
mov
jb
sub
scas
mov
in
es
shr
popf
in
xor
jecxz
aad
fiadds
mov
pushf
mov
not
bswap
lahf
pushf
lea
pushf
movb
call
mov
call
repz
adc
nop
cli
pushf
int
push
js
sub
sbb
lock
cmp
add
int3
int
popa
int
movsl
pusha
dec
les
gs
xor
dec
shrb
mov
ja
jno
movsl
jo
inc
lds
stc
arpl
xchg
mov
mov
xchg
push
wrmsr
sub
inc
jno
addl
xchg
jo
xchg
cmpsl
mov
cmp
and
inc
dec
mov
inc
jae
adc
sub
jbe
in
test
int3
xchg
pop
inc
insl
inc
push
lret
or
dec
xchg
in
mov
stc
or
adc
out
das
test
dec
stos
mov
arpl
test
adc
mov
push
ret
out
push
xchg
xchg
fildll
mov
fistl
adc
test
mov
andl
push
or
pop
out
cmp
jne
xchg
test
icebp
sbb
push
mov
out
outsl
sahf
mov
xor
jo
ss
mov
push
ret
rcl
mov
shr
pushf
pushf
jmp
mov
lea
ja
jmp
mov
bt
jmp
pusha
call
sti
sbb
ljmp
mov
out
pop
repnz
push
cmpsb
pop
orb
aam
out
stos
and
xor
in
loopne
cmpb
push
test
rcrl
insb
loop
mov
mov
sub
test
jne
jecxz
out
insb
xchg
out
out
lcall
stos
rclb
dec
xchg
scas
ljmp
dec
mov
fisubrs
push
add
push
imul
mov
inc
jmp
repnz
sbb
xchg
mov
lret
or
jbe
sahf
mov
ljmp
stos
test
adc
cmp
outsb
mov
jo
sbb
mov
xchg
fists
dec
pop
call
sti
push
sub
add
xor
and
fimuls
add
sbb
out
lret
cmpsb
stos
mov
inc
push
dec
push
out
jno
and
sub
xchg
test
mov
sub
adc
sahf
fldenv
loope
xchg
pop
test
mov
daa
nop
leave
sub
adc
adc
xchg
xchg
xchg
cs
pop
fs
jo
out
fcmovnb
xchg
jbe
fwait
mov
test
push
pushf
xchg
into
dec
ficoml
dec
xchg
xchg
pop
imul
out
mov
mov
sub
decl
int
pop
and
add
mov
xchg
inc
mov
jns
movsl
mov
enter
mov
push
int
inc
jl
stos
adc
cmpl
imul
fs
ja
or
stc
jmp
rorb
repz
gs
xchg
mov
in
lahf
push
xor
cwtl
dec
je
fcmove
sbb
dec
outsl
mov
into
iret
fcmovb
adc
rol
int
lsl
fldenv
imul
jmp
ror
inc
ret
and
pop
dec
loope
jl
inc
push
loop
dec
jmp
fs
dec
mov
xorb
push
xor
nop
push
adc
dec
pop
js
add
inc
lods
lods
ret
lret
xchg
xor
mov
sar
xor
fwait
xlat
mov
jge
daa
push
ror
adc
mov
add
fwait
xor
outsb
bound
adcl
out
cmpb
cmpsb
iret
or
xor
mov
aaa
or
sbb
inc
in
stos
jge
mov
call
cld
test
pop
push
cmp
cmp
cmpsl
or
add
in
popa
pop
inc
movsb
movsb
pop
dec
ja
jecxz
push
pop
mov
push
push
aaa
push
pop
inc
sbb
jno
stc
pop
iret
add
fsubrs
xchg
or
pop
mov
fs
mov
pop
jl
xchg
in
sbb
mov
lds
ljmp
inc
aad
push
pop
jecxz
cmpsl
imul
je
in
pop
das
mov
scas
mov
jl
xor
ljmp
pop
push
jle
or
dec
xchg
mov
dec
push
inc
mov
out
push
push
fldt
orl
aam
test
js
sarl
mov
dec
pushf
add
sbb
mov
icebp
repnz
mov
xor
and
pop
push
xor
cs
cltd
xchg
mov
jb
fcomps
adc
das
movsl
jo
mov
sub
lcall
ret
adc
sub
loopne
xchg
out
loopne
ficoms
rolb
jnp
jecxz
pop
pop
rolb
jecxz
lret
lret
xor
pop
out
sub
test
cmpl
sbb
shrl
push
lea
ja
jmp
lea
call
cmp
cmp
pushf
pushf
lea
jae
push
test
call
xchg
shlb
sub
ds
test
aam
lea
push
sub
or
mov
adc
add
aam
adc
jo
imul
fwait
adc
idivb
push
mov
ficoml
jno
push
stc
and
nop
xchg
mov
jae
sub
sar
xor
cmpsl
mov
repnz
sahf
clc
xor
mov
popa
call
out
jecxz
pop
mov
sbb
rorb
test
sbb
dec
and
mov
insb
ret
ljmp
and
les
movw
cmc
pushf
movzwl
bt
mov
call
pusha
movl
jmp
sbb
jmp
xchg
out
push
in
iret
add
add
push
add
imul
in
push
dec
mov
jns
int
push
addr16
cmpsb
psrlw
push
jl
aad
xchg
fstl
cmpsl
jp
add
mov
cmp
lcall
mov
jge
aad
xlat
adc
fs
sahf
fwait
adc
inc
xor
mulb
shlb
adc
jg
pop
cmpl
movsb
aad
and
adc
push
xchg
hlt
xor
punpcklbw
jbe
adc
mov
xchg
inc
push
outsl
pop
imul
iret
adc
and
clc
imul
pop
pop
or
sbb
dec
sub
mov
cmc
or
cmp
cmpb
fistl
pop
js
jbe
mov
sarl
mov
and
test
lret
cmpl
lea
jb
cmp
clc
pusha
pusha
cmp
movb
lea
jae
sar
mov
inc
movsbw
bswap
mov
adc
mov
pushf
mov
xor
test
jmp
call
pushf
mov
dec
sub
jge
test
test
shl
push
pushf
lods
pushf
push
jmp
mov
cli
jb
in
std
push
cmpsl
enter
lods
in
lahf
ja
mov
aad
dec
xlat
cmp
jae
inc
in
or
pop
xchg
mov
fldl
and
push
add
add
stos
movsb
sbb
push
inc
adc
fcoms
add
inc
sti
sub
push
pop
mov
mov
push
mov
and
leave
leave
in
push
outsb
inc
dec
mov
cwtl
scas
push
dec
les
jns
or
out
es
push
cwtl
push
lea
call
pusha
jmp
xchg
loope
nop
cli
imul
iret
fadds
cmpl
mov
mov
scas
lahf
push
sbb
repz
push
loop
xchg
adcl
inc
mov
cmp
xchg
cmp
inc
fcmovne
enter
out
jno
cmpsb
xor
div
das
mov
iret
repz
fs
out
sbb
shll
stos
jge
xlat
dec
aas
in
mov
cmpsl
dec
in
ja
lds
loope
sbb
inc
cltd
mov
add
aad
pop
mov
rolb
push
cmp
inc
adc
inc
mov
loop
nop
cli
pop
lret
movsl
into
fisttps
stos
or
inc
dec
pop
mov
popf
out
shll
sub
and
rol
pop
jnp
icebp
sub
ss
hlt
insl
data16
cmp
lea
pop
aam
rolb
pusha
inc
jo
pop
repnz
fdivr
jae
ja
bnd
jecxz
pop
js
repnz
ja
negl
aam
cmp
mov
mov
jbe
bsf
mov
bt
cmp
clc
cmpb
call
cmc
cmc
bt
movzwl
pushf
btc
cmc
mov
pushl
movb
add
stc
mov
pushl
pushf
test
pushf
lea
jb
je
cmc
bt
add
cmp
test
pushf
call
movsb
loopne
xchg
nop
cli
push
sar
sub
clc
push
pop
arpl
out
addl
inc
movsl
mov
sub
mov
push
cmp
and
pusha
icebp
pop
and
mov
ljmp
mov
and
xlat
pusha
lcall
movsb
sub
lds
and
pushf
mov
dec
cmpsb
repz
cltd
call
add
jecxz
cli
arpl
mov
popa
adc
jge
mov
push
xchg
filds
aaa
cmp
sbb
bound
mov
in
nop
cli
insb
mov
mov
hlt
dec
outsb
ja
add
gs
xor
jns
sub
add
fcomps
out
lods
jmp
inc
mov
mov
pop
pop
pop
test
aas
jns
call
mov
imulb
hlt
ret
xlat
push
aad
or
mov
inc
aad
cs
leave
leave
push
inc
aad
mov
cmp
sbb
and
stos
and
call
lea
jb
cmp
test
cmpb
jmp
push
pushf
pushf
pushf
movb
movl
push
pushl
lea
jmp
jmp
je
xchg
nop
cli
rclb
sub
fsubr
push
jae
and
icebp
and
ds
sbb
dec
test
xchg
inc
push
xchg
aam
jbe
in
sub
cmp
lock
enter
loope
sbb
shl
inc
inc
push
mov
insb
xor
xchg
mov
cmp
inc
push
insl
jecxz
fidivl
loopne
cltd
sar
pinsrw
adc
cli
nop
xchg
int3
int3
adc
cli
fcmove
sbb
mov
cmp
ja
in
sbb
outsb
mov
xchg
sahf
aad
jmp
inc
xchg
nop
cli
into
pop
inc
popa
lcall
dec
lcall
loopnew
and
cmp
movsl
mov
vmread
xchg
cmpl
add
and
test
lods
aad
aad
adc
aam
mov
or
es
xchg
xchg
repz
das
js
ficomps
push
shrl
or
pop
push
xchg
js
nop
cli
add
dec
les
sub
push
and
test
jmp
sbb
push
inc
cmpb
fld1
pop
or
fwait
cwtl
mov
xchg
push
mov
sbb
push
iret
sbb
pop
add
mov
leave
add
je
or
push
inc
jle
dec
add
xor
in
mov
or
pop
xchg
ja
push
mov
push
push
xchg
xchg
aad
daa
es
push
mov
xor
xchg
popf
mov
cmp
call
jmp
ret
jecxz
nop
cli
imul
cmp
aas
pusha
lahf
mov
mov
ret
lods
push
movsl
push
jl
jns
test
ficoms
lret
mov
pop
jae
stos
xor
shll
mov
adc
and
inc
sbb
scas
mov
fwait
int3
orb
orb
repz
adc
iret
out
and
scas
cli
movsl
testb
pusha
addr16
add
dec
outsl
popa
fs
imul
add
pushf
add
jge
enter
and
mov
pushf
push
pushl
ret
movl
push
pushf
lea
jmp
in
add
nop
cli
mov
cs
cwtl
icebp
push
in
push
daa
inc
xchg
enter
outsb
sub
inc
leave
sbb
rorl
pop
fucom
mov
hlt
cmc
hlt
das
cmpsl
dec
sarl
sbb
dec
loope
pushf
jae
jne
push
cmovs
or
dec
lds
jb
fldenv
arpl
xchg
inc
sbb
fcomi
icebp
sub
adc
or
rclb
xor
xchg
nop
cli
mov
xor
outsb
mov
dec
and
xor
shr
lods
push
fisttps
add
fldl
inc
scas
cmp
mov
test
jmp
cmp
lea
movsb
into
or
or
aaa
lods
lods
lcall
mov
movsl
fsubl
inc
sub
jmp
int
inc
inc
cld
pushf
mov
lea
ja
push
lea
jb
clc
call
cmc
stc
pusha
pusha
cmp
movb
jmp
jmp
inc
push
mov
jmp
stc
outsl
push
xchg
nop
cli
fcoml
testl
sahf
negl
xorl
xor
inc
cmpb
call
xchg
xor
scas
stos
out
pushf
in
fisubrl
insl
push
dec
dec
aas
jnp
inc
mov
sbb
add
inc
adc
push
xchg
add
orl
add
cld
cmp
mov
pop
rcrl
ja
or
test
xchg
nop
cli
cmp
outsb
scas
call
insl
sahf
testl
push
cmp
fldl
pop
sbb
pop
cmp
ja
in
adc
mov
cmp
jnp
xor
ja
inc
pop
jl
lock
mov
das
mov
push
jb
mov
in
mov
mov
loop
ja
inc
pop
mov
je
in
dec
movsl
adc
mov
in
cmp
mov
mov
push
cltd
clc
mov
int3
mov
nop
cli
cmp
filds
xor
fdivs
mov
xor
push
outsl
stos
out
ss
push
and
add
div
pop
dec
sbb
adc
rcrl
out
sub
mov
cli
imul
pop
and
mov
scas
mov
scas
mov
push
mov
sti
xor
adc
es
jp
jne
add
js
jp
call
lods
mov
aaa
pop
aad
arpl
aaa
ss
add
nop
cli
addr16
push
mov
sub
ret
sbb
push
pop
adc
scas
movl
sarl
and
mov
cmp
pop
sub
and
adc
mov
pop
mov
lods
xor
mov
cmpsb
pop
sub
adc
mov
lahf
pushf
xor
lret
cltd
mov
pushl
pushf
roll
imul
divb
adc
sub
dec
cwtl
nop
cli
aad
inc
pusha
shl
push
lea
mov
adc
add
hlt
mov
fbstp
jle
es
mov
pop
ds
jns
repz
repz
notl
cld
ss
daa
inc
das
popl
mov
sub
cwtl
aad
jne
aad
sub
inc
cmp
into
inc
fwait
and
mov
add
cmpsl
xlat
mov
pop
je
movsl
pop
dec
mov
pop
cld
mov
lahf
xchg
in
ret
sub
int3
jmp
stc
xor
pop
int
cmp
add
cmp
pop
xlat
jmp
int3
or
cwtl
nop
cli
jne
imull
sub
lods
add
cmp
mov
mov
fs
sub
mov
xchg
mov
pop
cmp
int
push
dec
mov
xor
jecxz
fstl
push
insl
js
push
push
int
push
or
roll
xchg
mov
dec
xchg
mov
out
adc
mov
sbb
stos
shll
dec
adc
mov
cli
sbb
pop
cmpb
cmpsl
fsub
or
pop
rcl
insl
loopne
shrl
pop
jge
scas
xchg
jbe
sbb
ficompl
add
mov
inc
rcl
div
imul
dec
add
mov
push
cmp
adc
push
stc
sub
mov
jmp
popa
js
ds
add
mov
push
cltd
mov
dec
pop
pushf
fwait
xor
cli
jle
cwtl
adc
cld
push
mov
orl
jno
in
test
sub
inc
mov
es
cmpb
lods
xor
scas
xlat
clc
or
out
cmc
and
stc
outsl
jns
inc
mov
inc
cmp
hlt
das
push
gs
mov
roll
addr16
push
ja
loop
mov
lea
inc
js
fsubp
cmp
ret
inc
xchg
pop
mov
mov
sti
and
movsbw
add
adc
call
dec
test
nop
cli
repnz
pushf
adc
cmp
insl
mov
push
and
jae
imul
test
or
pop
push
int
mov
cld
pop
cmp
les
sbb
mov
cwtl
mov
push
mov
aaa
mov
inc
mov
aaa
mov
in
or
imul
sbb
sub
add
pop
imull
outsb
lds
leave
add
jb
in
in
mov
mov
out
pop
cli
xchg
dec
mov
mov
sub
xchg
xor
and
cmp
or
stos
out
cltd
xchg
hlt
lea
xor
mov
sub
insl
xchg
jle
add
je
pushl
imul
sti
shll
test
ret
cld
cmp
ret
cmp
cmp
mov
movl
push
sahf
mov
cmp
js
push
out
call
aaa
lods
xchg
fwait
nop
cli
sbb
aad
daa
mov
sub
pop
lods
fidivs
push
xor
sti
pop
xor
loope
push
push
aas
cwtl
sarl
movsl
xchg
iret
inc
pop
cltd
insb
push
mov
and
hlt
sbb
aad
or
pop
xchg
std
mov
rorb
pop
rcl
in
int
sbb
push
or
ficoml
pusha
outsl
and
adc
mov
cmc
mov
into
pop
in
bsr
bsf
mov
call
pushf
call
enter
nop
cli
inc
jne
fbstp
inc
mov
xlat
and
mov
fs
pop
cmp
sbb
mov
mov
dec
int3
popa
bswap
and
pop
or
sub
addr16
rcr
mov
jo
add
jbe
or
xchg
in
daa
sub
pop
repz
popa
mov
aam
mov
fisubs
jb
mov
daa
adcb
inc
jo
cmpsb
in
arpl
xchg
mov
dec
loope
ljmp
mov
inc
lods
sbb
sbb
sbb
push
add
cmp
mov
jmp
test
xor
fwait
in
pop
lods
mov
push
mov
push
loope
repz
mov
sub
clc
xor
sub
arpl
jge
cmc
frstor
pusha
jns
out
push
cmc
incl
cmp
cli
push
cmc
push
and
wrmsr
lahf
mov
fldcw
push
mov
pop
les
and
add
imul
dec
jo
outsb
add
rorb
shl
clc
clc
stc
xor
jmp
push
lea
jb
pushf
push
push
pushl
ret
shrd
lea
add
cmc
xor
mov
cmp
mov
clc
repnz
pusha
jmp
inc
mov
and
jp
or
jbe
loopne
xor
enter
lcall
adc
daa
dec
and
dec
iret
xchg
fcmovbe
inc
mov
sub
push
repnz
pop
lahf
sbb
dec
ds
repz
negl
cmpsl
push
negl
and
js
ss
insb
mov
mov
inc
arpl
jmp
dec
ret
xorb
add
in
call
xchg
into
mov
nop
cli
cmp
daa
js
ljmp
pop
or
js
scas
mov
mov
inc
sbb
cmp
jp
mov
sub
pop
mov
roll
mov
fwait
add
dec
jmp
sub
jno
mov
push
fisubl
jecxz
mov
push
mov
insl
into
test
cmp
fsts
or
and
data16
pop
xchg
xlat
aam
hlt
stos
xchg
in
adc
ja
or
jl
mov
pop
mov
pop
pop
mov
add
add
push
js
push
adc
cwtl
divl
jle
dec
adc
fwait
push
sub
or
sbb
clc
inc
inc
cltd
fs
mov
lods
inc
pop
cmp
inc
and
in
loopne
repnz
jle
nop
xlat
xchg
dec
dec
dec
inc
xor
sahf
leave
mov
jbe
mov
jns
aas
sbb
stos
xor
inc
rcrl
loopne
dec
dec
mov
out
stc
int3
sbb
pusha
jmp
jl
dec
lret
xchg
imul
clc
xchg
mov
sub
mov
mov
fnsave
mov
push
cmpsl
insl
movsb
lret
ljmp
cwtl
leave
rolb
lea
jbe
push
adc
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
jns
lahf
nop
cli
out
pop
xchg
cli
push
test
ljmp
inc
cmc
inc
push
enter
repz
jmp
fcmovnu
dec
mov
jnp
adc
mov
adc
mov
leave
xor
sti
cli
stc
out
das
movsl
icebp
repnz
push
repnz
popf
in
stos
icebp
adc
mov
push
enter
jne
dec
pop
jo
ja
mov
and
and
lock
xor
cwtl
arpl
or
scas
push
mov
mov
es
xlat
je
mov
cmp
cmp
cmp
sahf
test
std
ds
cmp
icebp
mov
aam
xchg
call
aas
mov
fcmovu
popl
pop
sbb
push
push
mov
test
pop
fsubl
xor
movsl
mov
icebp
xor
xor
mov
jmp
cmp
jmp
push
pusha
push
xchg
pushf
jmp
or
mov
xor
mov
ljmp
xor
dec
out
sbb
jg
push
scas
jnp
jmp
aad
xchg
and
ds
or
dec
jno
jecxz
add
movsl
loope
test
push
loope
and
push
push
push
addr16
cld
ss
mov
les
lods
aad
jecxz
cmp
add
pusha
nop
aam
push
mov
mov
push
sub
stos
stos
push
dec
push
push
cltd
addr16
push
jg
movsl
in
sbb
pop
lea
dec
ja
in
sub
inc
lea
ja
clc
stc
test
push
sub
movzbl
jmp
push
pushf
mov
pushf
pushl
ret
shrd
stc
add
xor
pushf
pushf
mov
pushl
shr
clc
push
cmp
jmp
sbb
cli
add
mov
lcall
adc
dec
add
or
mov
loop
jl
lcall
test
mov
out
pop
mov
pop
dec
push
loop
jmp
cmp
mov
dec
shrl
dec
xchg
std
cmp
mov
insb
pop
popl
sbb
push
xchg
xchg
pop
data16
les
out
push
cmp
fadds
lods
in
daa
jb
call
aaa
je
mov
push
lods
lods
mov
jmp
push
outsb
mov
scas
sbb
xor
fnstsw
cmpsl
sbb
dec
inc
jg
sub
pop
or
xchg
lret
cld
stc
outsl
stc
mov
sahf
fdiv
out
addr16
mov
sbb
xchg
fs
jo
inc
arpl
lahf
ss
test
icebp
fists
enter
jl
push
jae
mov
imul
loop
inc
jae
mov
and
mov
adc
or
mov
pop
outsl
daa
pusha
lea
je
pusha
pusha
pushf
lea
jmp
xor
cli
fldl
adc
xchg
fildl
out
xor
jb
divl
lret
mov
pop
dec
int
pop
push
cwtl
lds
push
mov
sub
mov
daa
cli
xchg
jg
pop
cltd
add
jne
or
jo
lods
dec
outsl
nop
inc
jnp
fnstenv
vpcmpeqw
stos
hlt
test
aas
mov
icebp
shrb
shrb
test
sbb
call
jecxz
test
pop
sub
push
and
je
add
pushl
mov
pushf
mov
mov
pushf
pushl
ret
push
mov
lea
je
push
stc
jmp
jmp
or
cli
mov
sub
es
push
xor
push
xlat
xchg
jecxz
mov
aas
adc
sub
repnz
cmp
fimull
push
jne
dec
inc
mov
inc
sub
pop
push
dec
adc
orl
adc
mov
add
cs
adcb
xor
icebp
jo
in
add
cmp
add
push
jge
jecxz
pusha
stos
cmp
or
test
sbb
in
arpl
nop
cli
mov
in
push
push
pusha
mov
xor
mov
lret
jbe
adc
mov
mov
mov
orl
adc
xor
jne
mov
mov
jns,pt
lahf
sub
nop
shlb
dec
cwtl
stc
pop
dec
pop
aam
mov
mov
xor
jo
jns
sahf
mov
mov
push
add
das
jne,pn
repz
xchg
aad
dec
scas
iret
inc
mov
lahf
lea
jmp
dec
shll
mov
aad
xchg
mov
dec
jo
cs
in
mov
mov
mov
sub
std
out
push
ljmp
adc
pop
std
arpl
mov
push
xchg
or
mov
or
push
push
mov
xchg
std
shl
out
sub
inc
fwait
jp
add
pop
outsb
in
jle
sub
jmp
mov
lock
and
mov
cld
mov
inc
push
movsl
nop
cli
je
mov
or
test
pop
iret
idiv
xchg
gs
or
sub
outsl
ret
dec
mov
das
and
in
btc
jo
sbb
mov
jo
pusha
fwait
push
daa
shlb
mov
hlt
dec
ret
sbb
cld
lcall
push
test
pop
adc
sub
fwait
mov
mov
shrl
pop
into
in
and
aam
sahf
cmc
and
ljmp
stos
out
mov
ret
dec
pop
nop
xchg
out
orl
neg
mov
shrd
cmp
mov
cmc
pushf
call
jb
int
nop
cli
push
sahf
cmpsl
lock
mov
jp
fcomp
mov
inc
sbb
push
or
inc
scas
and
sub
cmpsl
xchg
nop
int3
daa
mov
inc
jnp
int
fs
jae
cmc
fidivrl
std
imulb
loop
and
cmp
shll
in
les
imul
popa
jb
scas
dec
sub
in
ret
loope
ficoms
xchg
stos
or
scas
jmp
adc
dec
dec
loopne
sti
add
fs
je
clc
pusha
cmp
cmp
jmp
sbb
bt
and
or
mov
pusha
jmp
or
mov
lea
jp
je
xchg
bswap
add
cmp
bt
rcr
sub
xchg
bsr
movzbw
shr
sub
mov
clc
sub
sar
shr
add
xor
add
pusha
mov
bt
test
shr
call
pop
xchg
jnp
nop
cli
add
out
xor
sub
cld
cld
mov
pushl
loopne
fwait
mov
loopne
fwait
sub
jp
in
pop
cmpsb
incl
inc
lods
lds
test
mov
adc
repz
sbb
fistpl
jno
jecxz
mov
jae
mov
fnstcw
repz
or
jmp
into
aad
test
mov
ret
arpl
xor
mov
push
cmp
icebp
pop
push
cltd
loopne
jbe
outsb
stos
ja
jp
out
cmp
mov
lret
push
test
jnp
cmp
jmp
ds
lods
call
out
ret
dec
cmp
adc
leave
inc
sbb
xchg
mov
mov
ljmp
das
jge
xchg
or
clc
xor
in
inc
jae
inc
push
popf
jp
in
vmovdqa
sti
mov
mov
sub
movsb
cli
into
pop
mov
hlt
movsb
cli
aas
test
out
das
cs
cwtl
cmpsl
out
and
inc
adc
mov
cmp
test
call
setne
push
lea
movw
pushf
pusha
call
repnz
fs
aas
mov
mov
add
out
or
or
mov
xor
cmp
add
lret
push
mov
xor
ljmp
test
sar
shll
cli
jbe
cmp
pop
pop
aad
mov
test
or
jecxz
cli
dec
adcb
nop
cli
cmovs
mov
clc
and
mov
lock
mov
or
lods
xchg
mov
inc
lahf
adc
aad
sub
jecxz
lds
mov
out
and
lods
inc
std
push
sbb
cmp
jo
pop
push
pop
in
and
jge
scas
sarb
pop
cmp
aad
subb
pop
jmp
fnstenv
leave
cli
fs
lock
into
fs
jae
mov
decl
faddl
shl
inc
lea
xchg
mov
test
pop
or
ja,pt
loope
xor
xchg
mov
sbb
cmp
daa
lock
arpl
jmp
test
test
arpl
xchg
in
jecxz
xor
fdivrp
push
and
or
inc
mov
ret
adc
rcl
bound
or
cmp
dec
rorb
cltd
movsl
call
fwait
adc
test
xor
mov
shlb
stos
adc
sbb
dec
je
bound
mov
xchg
lahf
pand
rol
pop
xchg
mov
jno
shlb
hlt
sbb
push
outsl
insb
or
jns
mov
shll
cltd
ror
or
ljmp
xor
data16
sahf
xlat
push
inc
inc
addr16
sub
inc
jp
call
add
xchg
nop
out
aam
loope
cmc
push
push
mov
enter
clc
push
call
inc
mov
sbb
jmp
test
das
push
popa
mov
xlat
fistpl
fldcw
push
test
inc
mov
cwtl
mov
dec
jnp
jp
fs
lahf
sbb
mov
fs
cwtl
cltd
aam
outsb
lods
xchg
mov
lods
xchg
rol
test
dec
lods
lods
shll
push
orb
hlt
xchg
sbb
inc
or
mov
mov
nop
cli
cmp
mov
push
popf
into
pop
jo
jb
stos
mov
mov
outsl
stos
clc
int3
push
daa
and
xchg
icebp
mov
lods
out
cmp
push
lods
out
popl
out
and
push
adc
add
mov
mov
insl
insb
popa
mov
push
push
ss
dec
dec
push
rcrl
es
in
cmp
inc
lahf
into
or
fisubrl
mov
jle
add
and
nop
cli
lods
and
xor
or
push
sbb
mov
mov
loope
jbe
mov
cmpsb
cmc
repnz
xorl
add
icebp
insl
inc
rclb
shrl
loope
xor
insb
test
inc
xchg
mov
stos
and
call
in
stos
cwtl
sub
lods
fucomp
jg
std
sbb
pop
sub
imul
outsl
imul
sbb
cmc
sub
mov
dec
mov
add
mov
aas
test
cli
insl
jbe
dec
jns
sti
cld
sbb
cli
adc
je
mov
adc
or
bound
bound
mov
mov
cmp
jno
aaa
pushf
cmp
mov
xor
mov
mov
cmp
arpl
out
xor
mov
not
sub
adc
dec
movb
lea
movsbw
movzbw
not
mov
push
lea
mov
movl
pushf
call
je
xchg
lods
nop
cli
sti
je
push
outsl
cwtl
icebp
or
and
xchg
fists
pminub
adcl
imul
mov
lock
cmp
pop
sahf
aas
jns
mov
jae,pt
cld
mov
xlat
xor
shlb
pop
insl
jnp
insl
jp
mov
incb
add
add
test
and
dec
scas
testb
cmc
test
push
push
pushf
jmp
push
inc
setnp
pusha
not
not
not
jmp
rorb
scas
nop
cli
mov
dec
mov
test
pop
push
add
loop
dec
xchg
pop
add
loop
adc
cmp
hlt
xor
dec
mov
nop
mov
sbb
scas
cli
lods
nop
jp
dec
mov
lret
mov
nop
cli
daa
push
rcrl
jl
es
dec
jno
mov
lahf
cmp
pop
lods
mov
out
sti
push
jbe
push
add
jnp
cli
inc
leave
data16
out
push
loopne
pop
subl
jbe
mov
add
and
inc
add
pop
inc
je
adc
push
mov
stos
hlt
jmp
rolb
jne
mov
xchg
inc
lods
rep
rorl
rep
nop
cli
jnp
lods
out
pop
adc
push
push
test
mov
jge
int
stos
in
xchg
sub
pop
es
sbb
test
or
fldt
fists
test
cwtl
jge
cmp
bound
mov
xor
in
add
sbb
mov
push
push
jbe
mov
outsl
push
xchg
mov
and
add
xchg
sub
addb
xor
xor
cmpb
lea
call
lea
call
sub
cli
aad
pop
push
in
ss
add
and
push
gs
sub
add
pop
sub
lret
mov
loope
into
push
pushf
imul
inc
inc
adcb
gs
inc
push
and
adc
ss
cs
sbb
xor
js
pop
mov
dec
adc
xchg
dec
xchg
or
int3
pushl
push
movb
lea
je
push
pusha
movb
push
lea
jmp
add
inc
gs
imul
inc
add
dec
xor
pushf
add
and
in
push
outsl
jle
pusha
push
mov
cwtl
shlb
fs
or
movsl
xlat
xchg
in
mov
pop
xchg
out
mov
fstl
xor
lods
dec
jb
sar
xlat
mov
add
mov
lahf
ror
repnz
repnz
out
sbb
dec
pop
xchg
in
or
loopne
jle
aas
repnz
imul
movsl
int3
sti
xchg
xchg
cmpsl
scas
nop
cli
push
addr16
mov
out
negl
push
mov
xor
sahf
iret
inc
mov
movsl
mov
adc
fwait
in
jbe
sbb
xor
pop
xchg
jne
stos
in
cmp
testl
cwtl
data16
clc
or
insb
in
push
mov
clc
dec
popa
rolb
mov
clc
jecxz
sub
stos
sbb
aaa
jbe
mov
xor
mov
xchg
jle
out
int
push
cmp
jmp
pusha
mov
rcr
shrd
rcl
btr
mov
stc
test
sub
push
pushf
call
icebp
sub
mov
push
pushf
popf
push
daa
pop
rcl
dec
test
in
out
mov
sbb
scas
dec
push
fs
cld
jo
scas
out
addr16
out
arpl
test
jns
ljmp
popa
xlat
add
inc
aad
xor
gs
gs
negb
jns
mov
loopne
dec
imul
jle
ljmp
sbb
test
jp
push
stos
or
xchg
jp
or
fadds
pop
mov
and
bound
push
mov
jae
pop
pushf
mov
jmp
lea
ja
inc
pushf
inc
inc
lea
not
pusha
call
mov
cli
fwait
movsb
in
pop
xlat
sbb
fs
in
add
js
jmp
fwait
add
pop
sub
pop
cli
xlat
dec
ret
hlt
push
test
xchg
hlt
aas
js
mov
jno
call
or
mov
mov
sti
int
pop
mov
subl
cmpsl
adc
jle
mov
in
es
std
push
pop
xchg
out
inc
inc
in
rorb
int
in
sub
arpl
inc
outsl
test
mulb
sar
in
push
mov
xchg
iret
mov
nop
cli
and
out
aaa
mov
or
fisttpll
nop/reserved
and
xchg
xor
xchg
bound
mov
mov
test
sbb
out
out
dec
pop
inc
push
pop
sarb
xor
ret
test
add
push
dec
mov
and
lret
in
in
xor
fcompl
cli
adc
xchg
les
out
les
shrb
xor
pop
mov
sub
fstpl
mov
and
cmp
pushl
popl
jmp
lea
jne
bt
movsbw
mov
stc
clc
sub
jmp
repnz
push
pushf
movb
call
sbb
in
sbb
stos
shl
xor
add
cltd
sub
adc
mov
daa
movsl
call
jp
push
out
mov
test
push
mov
cwtl
rorb
adc
ja
repnz
and
push
andl
pop
xchg
enter
mov
push
push
jo
popl
and
or
cmc
pop
lret
pop
push
dec
jp
test
scas
fstl
jbe
add
cli
insb
pshufw
arpl
stos
pusha
push
sahf
adc
mul
jne
stc
out
push
dec
movsl
out
inc
cltd
rorb
sub
add
adc
stos
out
js
std
xchg
mov
cwtl
loope
jns
mov
lcall
jo
mov
mov
lret
call
mov
nop
cmp
out
fadd
enter
movsb
adcl
shll
lahf
sub
cmp
dec
and
ds
test
je
xchg
repnz
out
shrl
mov
jp
add
mov
pop
or
jns
and
scas
movsl
movsb
dec
std
clc
sub
cmp
xlat
das
xor
mov
xor
cmp
lock
mov
xchg
cmpsl
aas
dec
cmp
scas
jae
scas
jns
pop
cltd
dec
stos
mov
mov
aad
push
mull
mov
jo
pop
lds
mov
add
jbe
leave
mov
rcrl
mov
mov
cmp
ret
mov
out
or
or
icebp
iret
pop
out
fwait
es
scas
hlt
dec
or
xchg
scas
cmp
dec
jbe
test
cmp
mov
inc
call
and
test
xchg
in
sbb
inc
push
xlat
sub
pusha
repnz
imul
cmp
sub
mov
jecxz
cwtl
inc
cmp
sub
add
push
enter
dec
sub
jo
cli
or
pop
out
psubb
mov
cmpsl
cmpsl
not
pop
call
cmp
aam
pop
in
mov
jmp
mov
mov
shrl
cmp
test
mov
frstor
sbb
call
jo
push
js
enter
sti
mov
repnz
lea
xor
pushf
fcmovbe
push
add
mov
ss
cmpsl
pop
movsb
imull
or
lret
cltd
imul
std
outsb
iret
fsubr
fistpll
mov
notl
inc
mov
ljmp
rcrb
jne
push
sub
fs
cmpsl
xor
scas
lods
mov
mov
mov
push
jbe
loopnew
mov
mov
mov
xchg
icebp
mov
stc
sub
cmp
ficomps
dec
mov
aam
sbb
mov
pop
es
stos
fwait
pop
adc
sbb
dec
cmc
add
or
cmp
pop
aam
pushf
inc
andb
dec
les
mov
mov
ss
pop
jl
dec
mov
icebp
pop
mov
dec
or
jp
xchg
mov
mov
or
dec
add
lods
pushf
mov
dec
clc
cmp
inc
stos
lret
mov
cmp
push
add
lcall
mov
incl
cmc
mov
fnsave
fs
jmp
mov
aam
sbb
enter
ficoms
ds
mov
int
scas
mov
push
call
add
and
clc
icebp
mov
jl
call
xlat
cmp
mov
outsb
test
sub
inc
and
fs
pop
nop
mov
fsubrs
jp
arpl
adc
das
invd
scas
adc
cmp
cmp
test
inc
cmp
loope
sarb
add
mov
mov
out
mov
inc
std
imul
imul
movl
mov
jo
mov
add
mov
mov
mov
cmpsl
push
xorb
xlat
mov
add
adc
andb
mov
adc
xlat
gs
xor
xchg
negl
mov
add
and
mov
adc
add
add
mov
mov
mov
rorb
in
icebp
stos
cmp
pop
loop
fmul
mov
and
sub
loope
ss
inc
pop
mov
sub
pop
pop
cmp
cmp
in
int
or
mov
ja
movsb
shlb
inc
xor
in
mov
adc
ljmp
daa
mov
jle
stos
pop
pop
mov
pop
cmpsl
and
or
lahf
test
sub
sub
mov
fsubs
iret
fadds
cmp
xchg
fwait
js
flds
fidivrl
fistpll
ret
inc
scas
mov
and
mov
aas
and
pop
sub
fstpt
push
popf
sub
mov
jg
xor
test
xor
cmp
mov
loopne
sbb
dec
sbb
sbbb
movsb
jl
scas
sub
mov
imul
les
sub
jg
test
mov
mov
mov
shrb
mov
rol
clc
bound
shlb
daa
add
test
mov
cmp
mov
cmp
mov
xor
movsl
lret
stos
cmp
mov
cmp
inc
loope
cmpb
stos
cmpsl
push
mov
aad
sti
pop
mov
and
pop
cmpsl
xchg
movsb
ds
cmp
and
lods
push
mov
mov
and
imul
mov
fsubs
cmpsl
test
mov
inc
pop
std
clc
test
xchg
jmp
mov
mov
mov
cmpsl
aas
jge
mov
sub
fstpt
push
cmp
loope
mov
loopne
ds
pusha
lods
mov
clc
mov
mov
sub
mov
daa
ds
and
mov
and
pusha
push
lds
loopne
mov
movsl
fisubrl
pusha
movsl
jecxz
cmpsl
popa
mov
xchg
fwait
lock
sbb
cmp
mov
inc
popa
push
lcall
frstor
add
inc
mov
jmp
dec
cmp
adc
mov
or
mov
daa
cmp
push
sbb
inc
jle
imull
cmp
mov
mov
add
stos
mov
sbbb
jecxz
les
mov
xlat
pushf
mov
mov
xchg
lods
cmpsl
aaa
push
mov
cmp
int3
jp
fsubrl
dec
cld
mov
imul
cmc
push
mov
xor
sub
addl
shrb
jge
mov
push
pop
sbb
xor
cmp
add
cltd
mov
lcall
push
jo
sbb
sti
fdivrs
aam
pop
mov
dec
andl
int
clc
or
stos
sub
mov
fildl
push
iret
test
rcr
sbb
mov
lock
add
dec
aam
fsubs
sbb
fidivrl
cmp
bound
push
test
mov
add
inc
bound
out
cmpsl
movsb
ret
or
push
dec
add
inc
fisttps
and
mov
mov
repz
rorb
push
outsb
lret
test
pop
mov
xor
mov
mov
cmpb
cltd
cmp
push
aas
mov
mov
ss
loope
imul
aam
sbb
or
movsb
jbe
ds
fs
mov
mov
iret
mov
jmp
mov
xor
cmpsl
mov
sub
mov
dec
clc
stos
ljmp
addl
sub
dec
or
out
pop
or
jmp
dec
jb
mov
or
mov
addb
dec
sti
aam
cmp
push
ret
mov
cmpsl
jne
aas
xchg
cwtl
push
mov
pusha
mov
iret
aas
test
cmp
lds
stc
aam
mov
fwait
lds
jns
cmp
push
test
aaa
mov
jns
push
xchg
inc
mov
out
mov
aam
push
jl
fdivs
clc
mov
sub
loopne
call
ja
ljmp
ret
idivl
iret
mov
imul
fnsave
mov
shl
negb
mov
pop
pop
ret
mov
fdivs
mov
movsb
dec
dec
jmp
std
aas
loopne
inc
sub
aam
dec
lret
test
mov
sub
fisttpl
ljmp
or
int
lods
fs
inc
clc
or
mov
not
sub
pop
fwait
dec
mov
cmp
mov
lods
or
movsb
lds
cmp
idivl
jnp
sub
fsubs
xor
cltd
or
dec
out
xchg
inc
xor
inc
repnz
outsb
cmc
cmp
pop
stc
ficoml
ds
xlat
inc
ds
mov
pop
movsl
iret
push
fucomp
js,pt
mov
add
jae
add
sbb
pop
lahf
int3
daa
jns
jl
repnz
in
push
xor
push
inc
cmpb
cmp
pop
cmp
fdivr
mov
cmp
and
jnp
popf
lock
mov
mov
test
ds
out
and
lea
sbb
jp
cmp
mov
push
enter
movsb
pop
loop
pop
lods
stc
mov
jo
add
mov
es
rol
and
jmp
shlb
mov
mov
dec
cmpsl
mov
mov
and
push
and
xor
mov
mov
sbb
cmpsl
adc
sbb
test
test
scas
fsubp
test
aam
loope
pop
push
jmp
mov
cltd
jge
add
or
add
movsb
ljmp
jp
mov
out
ds
adc
repnz
jne
scas
push
pop
mov
pop
mov
gs
or
iret
cmpsl
fnsave
xchg
mov
in
aaa
mov
loop
repnz
jno
and
push
mov
xchg
testl
mov
xchg
xchg
nop
int3
mov
pop
call
dec
cltd
iret
xchg
je
sbb
aad
mov
push
adc
push
push
push
icebp
xlat
dec
dec
lock
jo
xor
out
mov
mov
insl
cmp
sub
jge
cmc
sub
jb
mov
mov
mov
repnz
fs
out
xchg
dec
hlt
sbb
aam
mov
sub
mov
mov
push
and
dec
jmp
adc
jnp
enter
cwtl
int3
dec
cmp
cld
and
test
jmp
out
mov
cmp
ja
sbb
adc
in
mov
lret
sub
pop
aam
popf
adc
shrl
and
hlt
mov
xchg
cmp
enter
xchg
adc
xor
mov
into
lds
stos
push
push
ljmp
je
inc
stc
addb
pop
aam
rcrb
dec
mov
loopne
leave
enter
mov
jp
int
enter
icebp
sub
js
cltd
into
cmp
loopne
scas
jo
mov
test
jb
jne
mov
mov
cltd
mov
je
imul
and
jg
and
sub
sbb
ja
mov
pop
std
arpl
lock
clc
or
idivl
clc
cmp
cmpsb
mov
push
xlat
xor
pop
lea
mov
jnp
outsl
mov
mov
aaa
or
xchg
sti
scas
or
fdiv
fistl
and
icebp
out
scas
jbe
movsb
push
lea
mov
mov
mov
pop
dec
jno
leave
pop
mov
push
loope
test
ljmp
mov
sbb
mov
testl
lret
pop
sub
dec
pop
std
push
js
aad
testb
insb
sti
jno
lret
nop
int
fisttpl
outsl
rolb
and
out
sub
insb
shrl
stos
mov
push
sbb
scas
call
imul
iret
cltd
sub
mov
loope
mov
fwait
mov
lock
sbb
xchg
out
popf
test
sbb
loope
fsubr
mov
loop
cmp
mov
inc
in
dec
inc
orl
leave
pop
mov
ficompl
inc
out
add
xor
daa
jne
loope
dec
dec
and
cmp
and
into
fucom
enter
aam
insl
mov
sbb
mov
sub
out
gs
sub
mov
add
sar
out
mov
aam
jno
enter
xchg
mov
sbb
mov
stos
mov
cltd
scas
xor
aam
inc
stc
stos
or
jl
or
iret
fiaddl
daa
and
jns
jne
jecxz
mov
iret
pop
test
and
std
jo
adc
adc
adc
xor
sub
mov
cmpsl
mov
nop
inc
or
mov
inc
int
scas
mov
loope
movsb
adc
loop
movsl
mov
or
jns
add
pop
xorb
jp
cltd
and
jge
adc
aam
mov
movsb
fwait
cmp
mov
mov
xchg
mov
aad
fs
pusha
test
cwtl
cmp
mov
dec
loop
ja
and
and
and
out
ror
sub
pop
sbb
inc
mov
or
push
rcrl
push
mov
roll
pop
mov
mov
repz
mov
mov
push
ficomps
jns
dec
cmp
mov
ja
test
mov
nop
fdivrl
fdivs
testl
inc
sub
hlt
jmp
popf
xchg
rol
test
jno
and
mov
jecxz
cmp
rorl
fmuls
add
sar
dec
test
pusha
mov
fst
mov
mov
cmpsl
ffree
xor
xchg
mov
enter
negb
idivl
cmp
lods
mov
cmpsl
pop
mov
in
stos
out
out
mov
out
int3
cmp
or
addr16
cwtl
mov
enter
test
mov
das
movsb
mov
xlat
jl
aad
cmp
icebp
mov
xlat
adc
mov
fdiv
or
mov
adc
jnp
mov
outsl
js
dec
pusha
cmpsl
cmp
test
mov
cmp
ret
push
xchg
fdivl
insb
pop
cmp
jne
or
mov
add
push
fnstcw
push
mov
adc
test
xchg
add
inc
mov
xlat
fisubrl
ss
push
jnp
push
xor
push
sub
add
mov
insb
xchg
je
rorb
popa
aas
sub
dec
fidivrs
push
mov
clc
mov
movsb
loopne
bound
sbb
and
adc
inc
fxtract
jnp
xchg
mov
ss
push
sarb
xor
push
out
and
in
jge
mov
sbb
shll
add
cli
mov
push
adc
or
aas
adc
aam
out
mov
lahf
and
push
xchg
sbb
and
jno
cmp
mov
in
jmp
cmp
mov
push
aam
sbb
icebp
xchg
xchg
fnsave
jae
lods
out
push
push
aam
inc
or
outsl
mov
dec
cmc
pop
dec
adc
int3
jnp
pop
dec
sub
xor
lahf
dec
clc
shll
aaa
push
pop
and
cmp
jbe
adc
sub
clc
mov
push
hlt
into
stos
sub
jl
outsl
lods
pop
push
movsb
sbb
subb
aas
icebp
nop
jns
adc
mov
scas
add
fs
mov
stos
std
outsl
mov
cmpsl
sarl
ficoms
aam
fmuls
fdivrl
outsl
jnp
loope
push
pop
rcll
stos
ret
popa
add
mov
mov
mov
xor
xchg
cmp
push
lret
scas
fdivs
cmp
ds
hlt
fidivs
icebp
mov
pop
add
mov
mov
inc
stc
pop
insl
mov
jl
sbb
xchg
dec
sub
dec
or
pop
jb
andl
and
out
lcall
mov
push
aam
ss
into
jb
jbe
mov
mov
mov
ja
fwait
sbb
dec
sbb
call
das
iret
mov
mov
fcomps
clc
adc
jl
cmp
add
lahf
icebp
int
mov
adc
pop
cmp
dec
call
jmp
and
out
or
inc
mov
pop
mov
inc
sbb
out
pop
out
mov
popf
jbe
push
or
cmp
mov
sbb
ret
aam
cmp
sbb
js
mov
cmp
pop
xlat
repz
movsb
push
push
xor
xchg
sti
mov
mov
mov
dec
shl
mov
mov
mov
cmp
cld
push
sub
adc
sbb
push
call
jnp
popf
pushf
and
out
sub
in
cmp
inc
lahf
adc
scas
mov
icebp
mov
xchg
jl
cmp
sub
pop
pop
dec
or
sarb
push
aam
push
and
cmp
shll
aam
sti
stos
jecxz
cmp
leave
mov
xchg
je
mov
xor
adc
sbb
int
jae
bound
popf
idivb
loope
xor
pop
mov
mov
xchg
popa
fldt
adc
mov
loope
inc
jmp
adc
sbb
mov
sub
mov
rorb
fcoms
adc
stc
or
cmp
add
btr
cld
add
addl
mov
xlat
mov
shlb
shll
cmc
les
pop
lret
jmp
fs
push
xor
loop
pop
and
loop
jecxz
ds
sub
fmuls
and
inc
mov
push
mov
jne
sbb
or
push
cmp
rcl
fstl
mov
arpl
fstp
shl
aad
mov
sub
scas
add
iret
icebp
jns
mov
pop
mov
mov
xchg
pop
jmp
into
test
sub
sbb
cmp
repz
add
sarl
cs
push
fists
negl
roll
jl
mov
cmp
xor
pop
push
sub
repz
imul
arpl
imul
xchg
push
dec
aam
adc
dec
adc
adc
add
pop
inc
push
ret
movsb
mov
mov
jae
xchg
outsb
cmpsb
mov
or
mov
je
cmp
fdivs
arpl
leave
das
push
mov
jae
xor
sub
gs
roll
jl
fs
and
adc
mov
fwait
inc
adc
push
jge
jge
in
mov
push
jmp
mov
jne
inc
cwtl
movsb
sub
push
mov
add
test
xchg
cmp
flds
inc
or
movsb
sub
xchg
push
mov
mov
jecxz
das
mov
cmpsl
rcrb
shl
fldenv
test
mov
out
daa
add
mov
add
sub
mov
and
and
pop
cmp
jle
cmp
pop
mov
and
sub
xchg
aad
fwait
mov
mulb
jae
mov
add
stos
push
push
repnz
mov
testl
push
lcall
mov
cmpsw
int
sbb
mov
jecxz
mov
aam
nop
adc
popa
and
jp
call
out
inc
lds
sub
jns
ss
icebp
ja
lock
out
mov
fmul
fs
or
fcomip
negl
scas
test
mov
adc
pop
in
mov
xorb
scas
rcrb
rorl
mov
mov
cmp
aas
stos
mov
icebp
or
sub
dec
repnz
sub
shr
loope
ret
jg
nopl
pop
pop
shll
aad
iret
aam
out
ret
sub
sbb
xchg
mov
popf
popf
jbe
imul
call
and
fcoms
clc
out
aam
rcr
mov
pop
mov
mov
xlat
adc
cmpsl
ja
inc
jae
add
stos
shlb
and
pushf
rcl
sarl
lods
test
imul
scas
pop
movsb
jl,pn
dec
jmp
push
xor
mov
adc
imul
movsl
push
std
sarl
xchg
push
pop
ds
mov
or
add
fsubrs
sub
test
in
jnp
adc
mov
nop
dec
or
cwtl
cmp
clc
jg
inc
pushf
mov
rorl
cmp
cmp
in
sbb
loop
fwait
xlat
fcoml
push
loopne
mov
push
mov
inc
cld
and
xchg
test
fldt
sbb
sub
iret
cmp
sbb
mov
xchg
jae
cmp
or
cmc
or
fdivp
out
inc
stos
ficomps
dec
push
jg
jl
test
xchg
out
aam
cmp
and
or
lds
sbb
lods
and
fwait
mov
in
pusha
ljmp
dec
mov
aam
add
mov
cmc
loope
pop
xor
les
into
mov
ljmp
subb
jbe
dec
sub
cwtl
mov
cmpsl
mov
cmp
lahf
fists
and
inc
out
mov
in
arpl
add
imull
cmp
shrl
and
fistps
movl
and
aas
jnp
or
or
test
test
xor
aas
out
mov
mov
jnp
mov
add
mov
cmp
leave
lods
std
aad
mov
cmc
hlt
and
mov
pusha
cmp
mov
lea
push
pop
jmp
sti
mov
mov
test
mov
fidivs
push
rol
dec
cs
sti
dec
cli
mov
pushf
data16
scas
pop
mov
dec
cmc
xchg
xor
pop
pop
mov
inc
pop
in
stc
enter
pop
mov
popa
dec
xor
xchg
int3
ss
insb
add
mov
lahf
hlt
bound
out
pop
lods
push
fsubrs
and
popa
fwait
cmpsl
inc
loope
add
enter
jge
fnstenv
adc
cs
mov
scas
mov
pop
div
mov
sub
cmp
cmp
sub
mov
dec
jns
inc
sub
mov
lret
mov
add
push
mov
stos
lods
pop
jb
iret
xor
les
movsb
testl
test
bound
push
cmpsl
ficoms
fs
mov
inc
mov
pop
adcl
mov
xor
out
xchg
and
std
or
sbb
sub
add
fists
xchg
aaa
out
xchg
enter
aam
and
mov
mov
inc
mov
and
cld
mov
ret
cmp
mov
xchg
push
cmc
jno
in
out
test
sar
leave
or
insb
sbb
adcl
iret
add
or
lds
add
mov
fwait
xor
mov
mov
lock
jbe
mov
int3
jne
mov
cmp
mov
out
and
cltd
mov
jno
fnsave
dec
inc
pop
and
mov
push
or
sub
inc
push
inc
jae
ds
stc
mov
pop
fwait
mov
lcall
sarl
push
cltd
jne
shrb
xor
xor
int3
shlb
outsl
loop
jae
adc
jne
pop
cltd
scas
sti
mov
sbb
in
push
pushl
cmp
stos
outsb
adc
lock
mov
mov
jb
push
jo
dec
pxor
push
repz
imul
daa
lock
cwtl
mov
adc
adc
sbb
hlt
lods
xchg
cmp
out
and
das
ss
sub
jb
xchg
push
mov
sti
hlt
rcr
inc
test
std
push
or
mov
mov
cmp
insl
notl
pop
lahf
inc
sub
leave
push
mov
loopne
cmp
mov
xchg
pop
sahf
dec
mov
or
fdivl
fwait
lcall
sbb
jno
std
in
js
loope
negl
dec
jl
test
jne
repz
sbb
fbstp
push
push
sub
adc
mov
dec
cltd
cltd
adc
rolb
pop
sahf
pop
std
bound
or
push
pop
cmp
jns
mov
lds
adc
cmpsb
out
and
push
gs
data16
push
mov
add
insb
cmp
xor
pop
into
cmc
dec
movsl
jle
scas
pop
cmpsl
movsb
mov
in
add
xor
stos
bound
sub
in
leave
and
dec
sub
push
sub
pop
mov
jl
add
iretw
mov
push
xchg
das
out
call
mov
pushf
adc
ds
pop
divl
loop
dec
repz
fisubl
sbb
cmpl
mov
or
test
pop
aas
jle
ret
pop
mov
push
movsb
pop
push
xor
sbb
inc
xor
out
shrl
nop
or
stos
je
jmp
mov
xchg
xchg
fcmovbe
ja
jns
push
cwtl
inc
pushf
dec
jbe
inc
sub
cmp
sarl
mov
mov
mov
int
mov
push
test
loope
movsb
cmp
lds
dec
and
dec
sub
cli
xchg
iret
jo
hlt
bound
cmp
movsl
sub
fnstcw
add
and
int
adc
jae
mov
flds
sahf
add
jmp
add
mov
leave
jmp
lock
out
aam
pop
and
inc
nop
fimull
stos
jb
push
inc
push
loopne
inc
push
pop
mov
push
cmc
xor
mov
mov
cltd
dec
iret
repnz
cmp
push
mov
rorb
ss
push
in
sarb
js
dec
xor
or
inc
add
push
pop
in
into
xchg
mov
into
in
negb
xlat
dec
push
mov
cmp
testl
sub
mov
or
sbbl
xor
imul
dec
push
lahf
pop
xchg
movb
sbb
inc
mov
jae
and
inc
mov
sub
dec
cwtl
stos
sahf
or
shrb
rcr
cmp
subb
mov
repnz
test
cli
mov
ret
adc
mov
add
lcall
fsubr
sarl
aam
sub
mov
mov
pop
and
fdivs
add
lret
and
mov
cltd
jg
mov
dec
pop
je
fildll
aas
cmpsl
test
jno
fldt
cmpsl
xlat
in
mov
inc
std
push
cwtl
or
and
jp
iret
sbb
js
aam
int3
subb
test
fs
mov
mov
mov
aaa
shl
adc
cmpsl
cmpsb
inc
cmp
out
inc
sub
mov
cmc
and
mov
inc
je
cmp
sbb
sbb
fwait
idivl
dec
enter
iret
testb
cmpsb
test
lret
stos
dec
int
push
cli
hlt
cmp
fcomi
cmp
push
call
jbe
jl
mov
cwtl
cmpsl
xor
xor
mov
adc
pop
mov
and
xor
outsl
cmp
lcall
mov
jl
jp
sub
cmp
jo
test
mov
cltd
cmp
lcall
xor
dec
jmp
js
lods
mov
inc
rolb
enter
int3
xchg
cwtl
add
mov
xchg
push
in
or
push
push
push
cmpsl
cli
mov
sbbb
sub
stc
insl
xlat
lret
add
add
test
lret
scas
cmp
lahf
jnp
repnz
mov
arpl
mov
lcall
push
push
sbb
adc
and
mov
cmp
scas
mov
mov
dec
or
push
imul
mov
ds
dec
popa
scas
jecxz
aam
xchg
sub
shlb
cwtl
lcallw
pop
inc
fldt
popa
in
or
dec
movsb
daa
sti
xchg
push
mov
mov
pop
sbb
mov
cmpsl
push
addr16
jbe
sarl
arpl
fcoms
add
and
jge
mov
mov
jge
mov
stos
arpl
es
dec
in
pushl
push
mov
push
inc
mov
sub
mov
cmp
dec
stc
mov
ss
test
cmp
cs
movsl
dec
jmp
xlat
scas
lret
add
dec
test
cmp
mov
popa
mov
lock
sbb
fisubrl
push
push
push
cmpsb
mov
xchg
mov
push
cmp
jne
push
mov
jbe
rclb
fsubs
xchg
adc
pop
sbb
enter
xor
insb
mov
out
and
or
add
cmp
js
rcl
imul
in
addr16
push
jnp
adc
movsl
push
stc
daa
push
subl
aam
enter
and
mov
sub
test
aas
insb
iret
clc
imul
cmp
sar
dec
negl
insb
inc
push
push
loope
mov
push
stos
push
scas
ret
mov
fistps
aam
cmp
clc
xchg
rorl
lock
cmp
adc
in
aam
cmp
test
mov
or
jbe
mov
sbbl
popa
sbb
mov
adc
add
addr16
sbb
lock
and
aaa
mov
ds
xchg
cmp
nop
jae
mov
mov
mov
in
sub
dec
push
aaa
add
inc
dec
adc
test
clc
sub
jp
negl
mov
aaa
jp
cmc
inc
cmp
dec
mov
inc
movsl
or
shlb
cmp
sub
sahf
push
pop
movb
pop
cmp
sbb
sahf
stos
mov
out
clc
pop
shrl
pop
sahf
rcl
neg
mov
add
jle
stc
sbb
pop
popf
in
mov
cmp
dec
mov
and
add
mov
dec
mov
pop
xchg
lods
lea
test
fistl
sarb
incb
testb
add
lret
push
mov
or
out
loop
and
add
cmp
test
sbb
aam
stc
cmp
ret
jg
call
sbb
cmp
imul
and
add
enter
movsb
pop
add
aad
pop
pop
xor
fisttpll
fldenv
fstl
dec
mov
insl
pop
pop
inc
out
mov
addb
fs
lret
call
cwtl
sbb
loopne
mov
jecxz
mov
out
mov
fbld
out
mov
cmp
add
mov
cwtl
jns
stos
cmpl
mulb
lods
sbb
in
out
add
std
cmp
mov
mov
dec
jb
mov
push
inc
push
dec
jl
pusha
ljmp
sbb
lret
cmp
roll
mov
movsb
fsub
cli
mov
push
hlt
sub
pop
sub
int3
dec
sub
aam
imul
fdivrs
fisubrl
sti
das
faddl
inc
sbb
mov
es
mov
mov
aas
lcall
mov
loopne
ja
out
mov
inc
sbb
mov
xsavec
lea
cmp
sub
shll
inc
cmpb
mov
jl
int
lret
cmpsl
stc
lds
cmp
xor
jle
mov
divl
fdivs
dec
xor
loopne
push
jecxz
pop
mov
daa
jp
mov
aam
lcall
add
fwait
cs
pop
lea
push
push
ds
fists
je
cmp
and
fcomps
or
fdivs
adc
loopne
sub
lods
cltd
cld
dec
push
js
into
stc
imul
pop
sbb
jb
xor
mov
pop
out
pop
pop
or
pop
nop
mov
mov
ja
sahf
popf
mov
lods
in
pop
imul
pop
cli
pop
jp
or
push
aas
or
fbld
mov
sub
or
aas
dec
sub
pop
and
insb
cmp
xchg
or
cmp
loopne
xlat
jle
aam
sti
jmp
stc
pop
test
mov
lret
jmp
hlt
shl
fstpl
test
pop
sbb
data16
push
aam
xor
cltd
push
lock
stos
mov
idivl
sub
jo
push
sbb
in
insb
xor
cltd
xchg
push
cmp
jmp
xor
arpl
int
clc
ds
mov
icebp
xchg
lcall
mov
repnz
loop
cli
push
push
shll
sbb
lret
jae
loope
or
adc
mov
cmp
pop
popf
jnp
test
aam
repnz
and
stos
xchg
stos
bound
lcall
pop
je
push
sahf
push
cld
mov
test
gs
notb
sbb
mov
sub
pushf
mov
lds
cmp
sub
out
insb
subl
jb
repz
mov
in
fmul
inc
cmp
test
loop
lock
mov
or
fbld
data16
aam
sbb
pop
jo
jbe
inc
lock
mov
jmp
cmpsl
jl
bound
mov
jg
scas
fbstp
or
in
jge
or
cmp
cmp
xchg
lock
pushl
in
inc
in
out
mov
pop
cs
movsb
cwtl
dec
loope
add
out
add
mov
rclb
mov
rolb
mov
or
rorb
mov
stos
adc
sub
jl
hlt
aas
jmp
fists
std
cmp
mov
jp
jbe
xor
movzbl
lea
mov
icebp
in
aam
bound
leave
outsl
pop
mov
dec
add
popa
inc
cmp
sbb
dec
jle
cmp
add
stos
lcall
xchg
cmpsb
mov
mov
fcom
dec
dec
mov
sub
cltd
xchg
out
je
and
sar
mov
sahf
mov
mov
nop
aaa
xchg
movsl
jmp
pop
jno
das
jbe
dec
into
and
aad
jo
push
idiv
stc
stos
jne
clc
inc
or
pxor
leave
cwtl
mov
pop
mov
adc
loopne
movsb
adc
inc
int
mov
mov
outsl
xchg
and
negl
ljmp
cmp
gs
scas
inc
fmuls
stos
fcmovnb
mov
loop
cmp
cmp
outsb
out
and
mov
loopne
pop
testb
push
mov
sub
loope
and
movsb
dec
sbb
adc
sbb
xchg
insb
xor
scas
cmp
mov
int3
daa
xor
xor
das
jae
rorb
mov
aam
jge
divl
pop
jge
mov
and
int
test
mov
add
add
sbb
jo
adc
sub
mov
mov
popf
add
jecxz
add
pop
dec
gs
xchg
lods
sub
mov
and
xchg
rcl
pop
xor
xor
or
leave
dec
repz
outsl
sbb
add
push
int3
testl
hlt
and
test
ret
test
cmp
pop
xor
sahf
add
cli
fmuls
repnz
mov
adc
decl
sub
pop
je
adc
enter
xlat
mov
fwait
ret
out
inc
mov
outsb
leave
cmp
shll
aam
mov
ret
scas
cmp
sahf
stos
aaa
scas
mov
add
pop
aam
shrl
cltd
movsb
xchg
sbb
sbb
aad
jecxz
ds
xchg
mov
mov
int
xlat
cmpsl
cltd
jle
out
xor
test
lret
stos
mov
popf
xor
aam
ret
xlat
int
jp
sub
ret
jno
sub
std
add
xchg
pushf
adc
mov
pop
mov
pop
popf
bound
daa
dec
dec
test
insb
insb
enter
sarl
jmp
aaa
cmp
xchg
push
push
mov
mov
and
push
mov
ss
mov
aad
outsb
mov
lock
pop
and
das
or
scas
inc
mov
rorb
mov
dec
aam
cli
xor
popf
cmp
outsb
adc
js
inc
mov
mov
jns
nop
push
inc
cmpsl
inc
mov
sbb
push
sub
mov
pop
cmp
int3
stc
leave
and
cltd
jg
sbb
jmp
pop
cmp
insb
pop
movsl
inc
mov
lret
or
in
lahf
fcmovne
mov
xchg
jecxz
fidivrl
jmp
cmpsl
inc
mov
add
mov
jle
mov
neg
rcrb
cmp
jo
mov
stc
mov
push
sub
jp
inc
cmp
jge
mov
stos
ret
out
xor
out
cli
movsb
aam
mov
xor
push
rclb
dec
add
test
mov
jbe
jmp
sub
xchg
cmpsl
xchg
insl
in
add
push
clc
lods
sbb
fcomps
pop
xor
and
sbbb
ret
pop
mov
je
xchg
mov
or
sbb
cmp
and
pusha
in
xchg
pop
cmp
jne
insl
mov
test
add
xchg
adc
mov
xor
sbb
out
mov
xchg
out
insb
sbb
cltd
pop
cmpsl
add
ss
aam
push
clc
das
lcall
dec
cmp
mov
sarb
inc
leave
mov
test
fcmove
jbe
push
mov
xchg
les
inc
testl
mov
add
mov
mov
insl
jl
add
movsl
cmc
add
mov
in
imul
lret
iret
repnz
in
cmc
mov
das
sbb
mov
hlt
dec
mov
add
and
cmpsl
jecxz
cmp
mov
xor
loop
cmp
aam
lea
addb
adc
enter
xorb
cltd
outsb
mov
xlat
or
jbe
test
rcrl
xchg
mov
sahf
fidivrs
cmp
les
mov
out
pop
sub
cmp
pop
movsb
sbb
sub
xlat
pop
push
xchg
adc
cltd
leave
lcall
negl
rol
push
sub
mov
ss
icebp
in
lds
int
pop
mov
cmp
test
xchg
sahf
push
lods
push
and
sbb
sarb
fidivrl
loopne
xchg
lock
mov
lahf
loopne
push
sub
adc
pushf
repnz
jns
push
shrl
xor
repz
out
daa
push
lret
mov
and
scas
insl
outsb
repnz
jp
mov
push
jnp
mov
xchg
cmp
push
ljmp
dec
mov
mov
test
cmc
mov
pop
lret
mov
fdivr
enter
sub
aam
jmp
xlat
cmpsl
outsb
bound
pop
fsubrp
leave
push
aam
cld
clc
pusha
fs
mov
sub
shl
cmp
gs
fbld
loope
mov
sysenter
mov
je
js
or
pop
pop
and
movsl
cmp
sbb
stos
mov
sbb
mov
xorb
and
cld
lods
xlat
jne
sbb
lods
and
mov
loope
push
jbe
movsb
icebp
pop
imul
mov
push
in
test
or
aad
sub
mov
popa
adc
xchg
or
pop
mov
fnstenv
pop
nop
mov
mov
rol
icebp
sbbl
data16
repnz
dec
adc
idivb
push
push
out
adcb
outsb
cmp
cmpsb
lds
test
shr
testl
cmp
mov
xlat
rclb
out
mul
dec
jge
shl
jae
js
cmp
push
ret
dec
xchg
mov
mov
pop
and
adc
movsb
cmpsl
mov
push
cmpsl
insl
inc
lret
cmpsl
movsb
aad
sarb
mov
nop
mov
or
or
inc
xor
cmpsl
mov
repz
jmp
mov
aas
and
popa
jo
cmpl
and
mov
mov
push
sbb
pushf
enter
mov
mov
push
mov
fsubs
jns
scas
push
mov
sub
popa
sbb
mov
sub
aad
push
pop
ficoms
pusha
andb
mov
cltd
aam
insl
jl
fdivrs
mov
fs
and
loop
mov
xor
jmp
dec
test
sar
sti
jge
mov
ret
and
cmp
push
dec
mov
rorl
jne
ficoms
mov
aam
or
filds
and
or
stos
mov
aam
adc
sbb
fwait
add
inc
xor
jle
cmc
xor
and
pop
and
std
and
idivb
fsubl
int3
dec
fildll
fstpt
mov
mov
int
fcom
add
repnz
fs
and
adc
popa
addr16
cmp
sbb
pop
jae
out
inc
jno
sbb
jl
aam
sti
shr
jp
mov
decl
rcl
sbb
mov
dec
inc
mov
mov
std
jmp
mov
dec
lea
mov
pop
mov
mov
out
push
ja
daa
cmp
mov
mov
enter
loope
cmp
aam
lret
sbb
iret
loop
out
out
jns
test
es
jnp
fs
cmp
inc
aam
movsb
ss
insb
fsub
outsl
xchg
push
or
jbe
add
cwtl
sub
les
shlb
mov
fdivrl
rolb
xlat
mov
fmull
sub
cmc
sbb
pop
pop
cmpsl
cmp
or
sbb
sub
cli
mov
pushf
popa
mov
dec
aam
ret
xchg
jecxz
pop
shlb
lcall
mov
or
test
mov
mov
idivb
movsb
jo
popf
dec
sar
fsub
shll
das
pop
pusha
jg
aam
mov
inc
xchg
mov
test
stos
in
dec
sub
mov
dec
std
and
adc
leave
jnp
mov
mov
cmp
in
sahf
ss
push
cmp
jbe
loop
scas
mov
pusha
pop
clc
xorb
or
sbb
xor
pop
movsb
pop
fldt
fmull
dec
mov
data16
pop
popa
cmp
xchg
xchg
xchg
outsl
dec
sbb
sub
rclb
dec
out
iret
jne
sti
sbb
insl
push
movsb
jge
les
xlat
subb
sbb
loopne
mov
icebp
push
stc
les
out
fdivl
sbb
mov
add
pop
arpl
adc
not
ljmp
xchg
sbb
cs
push
mov
fwait
inc
jp
rcr
sbb
ds
aam
orl
ja
cmpsb
pop
cmpsb
fdivrl
movsb
mov
push
les
jecxz
out
into
bound
aas
cltd
imul
or
add
mov
lea
sub
insl
xor
iret
cltd
mov
das
xchg
inc
lds
jae
pop
jp
push
loope
fiadds
and
pop
loop
mov
sbb
pop
and
enter
cmp
jns
ss
cmp
shrl
fildll
push
jo
fcompl
dec
cld
gs
into
dec
inc
push
jmp
jno
test
mov
mov
inc
pop
xor
orl
pop
test
adc
mov
push
jmp
dec
cmp
fildll
shll
inc
aam
inc
jmp
and
es
mov
xor
enter
jl
pop
fwait
xchg
or
push
lods
in
fisubrs
imul
scas
sub
dec
push
ss
and
and
jmp
lahf
arpl
sub
std
add
out
out
jge
jecxz
in
cmp
cmpsl
push
fsubrs
sub
jmp
fmul
fnsave
ficoml
lahf
xlat
cld
les
mov
mov
push
stc
daa
aaa
in
pop
cmp
lea
jmp
ljmp
imulb
pop
outsl
push
xchg
mov
jp
cwtl
incl
adc
push
dec
stc
sub
mov
mov
sbb
sub
inc
mov
add
in
and
test
stc
add
insl
pop
aam
pop
scas
nop
jmp
inc
inc
fdivr
rcll
movsb
push
jmp
inc
ss
mov
mov
sbb
jmp
mov
and
push
and
faddl
std
movsl
fidivs
sbb
adc
lods
adc
sbb
push
mov
stc
outsl
jle
shlb
dec
jnp
jnp
mov
das
mov
movsb
mov
mov
jb
sbb
scas
pop
cmp
les
leave
adc
xchg
mov
jbe
stc
sbb
mov
in
lock
bound
add
movsb
addr16
xchg
aad
addl
jns
cltd
push
mov
ljmp
mov
outsb
sbb
cmpsl
sub
push
out
stos
jge
mov
jmp
mov
aas
add
test
loope
mov
xchg
push
sahf
sbb
xchg
fldenv
ds
pushf
ds
daa
jmp
pop
mov
fwait
xlat
and
insl
lcall
mov
bound
lock
outsb
call
lret
repz
mov
cmp
sbb
cmpsb
rolb
in
sarb
dec
cmp
fstl
das
mov
rorb
push
jno
mov
dec
jmp
stos
add
sahf
adc
jp
ret
scas
pusha
std
pop
xchg
roll
addr16
mov
push
int3
mov
push
push
jnp
mov
mov
inc
xchg
and
pushf
out
movsb
jmp
add
icebp
add
cmp
mov
sahf
pop
rorl
cmp
cs
mov
mov
mov
jge
outsl
sub
mov
xorl
sarl
pop
cmp
or
cmp
mov
push
mov
movsb
in
enter
xchg
fimuls
scas
loope
lret
pop
mov
jbe
jns
add
in
inc
loop
sahf
mov
daa
push
dec
jp
loope
out
push
icebp
ror
rolb
in
loopne
pushf
test
movsb
ret
jns
leave
leave
jp
xor
mov
bound
out
inc
and
fstp
mov
scas
movsb
cmpb
push
inc
and
test
mov
pop
movsl
or
xchg
sbb
repz
cmpsl
cmp
cmp
mov
int
cld
leave
sub
cwtl
push
stos
movsb
mov
cmp
cmp
mov
mov
sbb
xor
fsubr
je
and
push
outsl
dec
jp
mov
scas
pop
sub
add
fsubs
add
cmpsl
pusha
cmp
ret
dec
dec
aam
sub
inc
mov
shlb
sub
jns
into
in
repz
sbb
push
lret
jo
push
jnp
and
mov
or
fcmovne
enter
jg
sub
jo
loopne
movsb
mov
idivl
jge
mov
and
fwait
jl
fmull
ret
mov
fdivrs
lock
cld
push
jno
daa
pop
adcb
cmpsb
push
outsb
or
orl
je
mov
mov
out
leave
mov
cltd
out
lods
popf
jmp
in
or
scas
mul
push
dec
mulb
pop
fbld
mov
inc
adc
jmp
jmp
js
jge
dec
or
pop
mov
mov
mov
pushf
cwtl
mov
insb
insl
add
in
jp
out
push
shlb
push
mov
sub
clc
jp
into
cld
adc
cmp
nop
sub
sbb
add
sub
popa
mov
push
into
pop
mov
mov
xlat
les
or
add
iret
pop
mov
pop
mov
loop
jno
jns
xor
mov
add
dec
fnstenv
das
add
fnstenv
aam
mov
daa
jb
pop
sbb
loop
lods
movsb
scas
cmpsl
lcall
dec
dec
cmp
into
xlat
xchg
cmc
adc
call
mov
jb
cs
popf
cmp
mov
lcall
fistl
pop
and
testb
cmp
fdivs
sbb
mov
mov
mov
mov
aam
cmp
filds
cmp
mov
lods
xchg
popa
adc
outsb
push
push
push
insl
mov
daa
pop
fiaddl
add
cmp
xchg
ja
aam
mov
or
push
out
sbbb
loopne
cltd
stc
cmpsl
jns
cld
movsl
fldl
sbb
dec
adc
pop
call
mov
fldt
push
and
loop
lock
inc
mov
xor
adc
out
ret
sbb
inc
fcomip
jmp
bound
dec
stos
mov
stos
dec
inc
lcall
gs
incb
mov
and
movsb
loopne
cmp
stos
mov
cmpsb
jo
lods
cmp
push
movsb
sbb
add
out
mov
cmp
cmp
sub
into
lret
pop
push
pop
aam
pop
outsl
pop
mov
push
mov
mov
mov
fildll
fldenv
and
pop
mov
fnstenv
adc
aas
aad
dec
push
int
jge
aad
fwait
ljmp
cmp
movsb
inc
test
mov
sbb
fwait
pop
enter
sbb
mov
mov
pop
xor
out
push
push
stos
aam
push
out
mov
cltd
lret
sbb
loopne
popf
stc
sub
xlat
movsb
jno
mov
aam
push
and
sbb
cmp
shl
mov
cmp
in
and
test
in
in
ja
pushf
loope
imul
lahf
dec
test
stc
aam
inc
scas
mov
jbe
cwtl
mov
adc
mov
mov
iret
dec
mov
hlt
dec
mov
setge
pop
pop
loope
mov
pop
roll
jne
stos
pop
mov
aam
outsl
push
jae
pop
int
aam
sbbl
daa
test
dec
fdiv
pop
adc
shlb
xlat
lea
addr16
xor
icebp
inc
mov
call
mov
cmp
sbb
fbld
inc
out
push
and
out
cmc
fisubl
addr16
les
dec
icebp
ss
mov
mov
or
ja
dec
mov
adc
sub
sarb
imul
push
cmp
push
ret
xor
mov
popa
inc
sti
cld
cmp
aad
movsb
rorb
mov
loope
in
test
loop
sub
pop
fiadds
pop
lahf
lea
sub
movl
sub
js
sbb
jnp
push
and
je
andl
es
addr16
leave
jmp
subb
arpl
test
lds
popa
xchg
pop
out
mov
push
dec
shll
inc
or
test
cmp
mov
push
insl
pop
jmp
sbb
mov
outsb
scas
pop
xchg
mov
cmpsl
xorl
stc
push
ss
and
fcmovu
jl
idivl
or
cmpsl
rorb
mov
ljmp
sub
loope
mov
fcom
mov
mov
lds
sub
mov
cmc
lret
push
add
push
xchg
mov
jmp
shll
cmc
add
mov
movsb
mov
ss
mov
adc
pushf
add
movsb
pop
xorl
add
int
push
xchg
decl
mov
ret
fcoms
jo
shr
sar
jmp
and
call
add
rolb
enter
inc
negl
xor
int
mov
jg
mov
testl
and
mov
sub
dec
sbb
or
xor
popa
aam
popf
push
xor
and
add
test
iret
adc
mov
fsubs
in
jbe
dec
or
cmp
or
stos
sbb
lret
mov
xchg
pop
push
xlat
fsts
fsubrs
int
iret
call
and
fists
into
pop
add
mov
cld
add
xchg
sub
cmp
in
shll
mov
push
push
xor
leave
pop
sbb
mov
enter
out
push
inc
cmp
lods
xor
popa
add
push
shrb
mov
adc
xlat
cmc
lcall
mov
mov
pop
jp
sbb
lods
push
mov
repz
xchg
xor
jb
cmp
rcrl
mov
sbb
shrb
jno
dec
add
test
sub
lret
mov
mov
dec
movsl
inc
add
push
mov
or
insl
rorb
mov
or
or
movsb
xor
cmp
enter
xchg
pop
mov
mov
mov
imul
or
stos
dec
scas
scas
cli
ljmp
adc
loop
ficoml
leave
mov
dec
cmp
daa
subb
mov
call
jmp
addr16
cmpb
xor
test
xor
movsb
dec
lods
pusha
ffreep
jmp
sub
insl
sbb
cmp
jp
fcompl
mov
popa
imul
lret
or
adc
in
inc
xchg
rcl
sarl
lret
xlat
movsb
imul
divb
or
sbb
cmp
jo
cmp
scas
inc
int
push
fucomp
fsub
adc
movsb
sbb
jo
jmp
lcall
cmp
xor
addr16
push
mov
aam
add
jl
fdivr
mov
lret
out
scas
mov
pop
push
mov
and
sub
dec
inc
sbb
xlat
movsb
add
mull
fsub
cmpsb
out
jmp
jp
mov
into
pop
and
sbb
lcall
mov
lods
xor
jl
mov
shrl
mov
push
mov
mov
lret
addr16
outsb
xor
xchg
cmpsl
sub
xlat
or
addr16
enter
dec
pop
cwtl
dec
shlb
xchg
ret
stc
or
int3
insb
cmp
cmp
ret
pushf
mov
bound
pushf
dec
mov
mov
mov
movsb
xchg
mov
iret
mov
cltd
bound
out
jmp
cmp
push
cltd
cmp
mov
clc
stc
mov
push
push
sbb
std
push
adc
call
lcall
jg
mov
mov
add
mov
fists
mov
mov
mov
mov
loopne
popaw
jl
push
and
shlb
insl
mov
mov
mov
ljmp
mov
cmp
pop
add
stc
cmp
mov
lcall
pop
sbb
cmpsl
push
cmpl
fcmovne
aam
xorl
push
add
xchg
xorl
cmpsl
mov
int3
aaa
jne
scas
dec
loopne
stc
pop
repnz
inc
pop
rolw
push
adc
jbe
mov
cmp
and
xchg
loope
stc
out
enter
andl
das
jne
fdivrs
sub
sub
sub
mov
mov
inc
mov
aam
shl
iret
cmp
sub
fdivl
or
outsb
jge
testl
addl
sbb
sub
mov
orb
stc
nop
mov
in
dec
stos
inc
mov
adc
adc
mov
add
rorb
mov
xchg
addr16
dec
add
pop
cwtl
cltd
sub
rep
inc
incb
ffreep
jecxz
inc
cmpsb
aad
in
stos
int
popa
jnp
movsb
jecxz
shlb
enter
xor
pop
cmp
in
and
mov
test
rcl
jle
out
aaa
or
fwait
or
lahf
aas
sub
push
sub
test
out
mov
xlat
fs
mov
sbb
mov
leave
ret
stc
stos
cmp
aad
mov
inc
test
mov
dec
and
mov
mov
inc
mov
cmp
jle
arpl
shl
and
int3
xchg
add
cli
mov
stos
test
and
je
push
mov
sub
repz
in
push
mov
movsb
jge
call
or
lcall
xor
cwtl
or
sbb
out
mov
filds
cmp
jmp
lods
or
xor
icebp
xlat
es
and
cmp
mov
add
or
clc
stos
stc
or
mov
jmp
fidivrl
sbb
sub
out
fwait
cmp
and
mov
or
fcmove
lcall
ret
xlat
sti
hlt
and
rclb
sahf
in
aam
jmp
sbb
sub
cmp
aad
lcall
add
jl
ljmp
adc
mov
pop
inc
lea
mov
punpckhbw
inc
sub
lods
push
pushf
fwait
fcomp
daa
andl
data16
rcrb
aam
mov
insl
rcrl
mov
sub
aaa
out
sbb
gs
es
xchg
cmp
aam
mov
jp
mov
rclb
xor
lea
pusha
ss
ja
xchg
enter
mov
mov
xlat
insl
cmp
mov
or
xor
ret
pop
aas
xchg
rclb
lea
in
shll
xlat
push
push
xor
dec
lea
andl
or
dec
sbb
testl
mov
cmpsl
divl
mov
inc
push
mov
cli
xchg
mov
inc
pop
out
mov
xchg
adc
jns
es
jle
xor
ljmp
xchg
push
mov
scas
retw
test
add
pusha
jae
xor
xchg
leave
mov
das
sbb
jne
jle
aam
aas
xchg
stc
rol
sub
mov
into
push
xchg
mov
insl
push
push
lds
mov
ss
or
int3
push
fsub
cmp
mov
out
xorb
inc
das
xlat
cs
loope
add
aas
cmp
add
outsl
scas
lock
cmp
mov
or
jnp
leave
ja
jle
pop
xchg
out
xor
imul
pop
jg
sub
out
cltd
push
mov
mov
test
mov
rcr
cmpsl
sub
bound
ret
ds
sbb
nop
inc
pop
stc
imul
ss
push
rorb
or
mov
add
stc
dec
les
cmp
sub
and
lcall
cmp
fsts
shll
ss
mov
xor
adc
scas
mov
lahf
sub
mov
pop
mov
pop
mov
sarl
mov
push
fsubrs
lcall
imul
inc
and
lds
adc
stc
out
mov
hlt
fs
sarb
loop
push
sub
lods
pop
mov
rcl
jl
sbb
xor
repnz
mov
dec
ds
xchg
cmpsb
pop
fldcw
mov
xlat
fisubs
std
cwtl
addr16
jp
sbb
aam
and
mov
dec
cmp
mov
mov
out
mov
adc
js
xchg
sarl
loop
pop
xor
sbb
cmpsl
adc
mov
xor
ss
out
enter
add
stos
sub
scas
jl
dec
fdivs
pop
movsb
add
pop
insl
sbb
faddl
sub
es
int
pop
fistl
mov
stc
jne
xor
inc
adc
dec
cmp
ror
adc
popf
incl
andb
inc
call
scas
jecxz,pt
mov
call
rcr
push
and
lret
mov
sub
in
lock
test
fistpll
orl
outsb
pop
push
or
loope
loope
fcom
aad
mov
addr16
mov
fcmovnbe
shlb
cmp
xchg
mov
sbb
or
mov
jnp
test
aam
inc
mov
inc
dec
sub
mov
pop
jge
fnstcw
jge
mov
in
sar
ss
cmp
fildll
mov
dec
sub
sbb
xor
aad
jge
cmc
aaa
imul
mov
addr16
xor
out
je
loop
adc
ret
loop
icebp
xchg
add
shlb
sbb
fsubl
shrb
out
sti
jge
inc
movsl
pop
mov
xor
adc
sbb
cmpsb
lret
inc
fsubl
pop
push
insl
rcr
repnz
addr16
jg
sbb
fdivrs
repz
jne
test
movsb
das
inc
aam
cld
test
lret
gs
add
hlt
cmp
fs
aaa
rcl
jns
jbe
adc
fcmovnbe
or
cmp
cmp
arpl
mov
cmpsl
dec
pusha
mov
mov
lcall
dec
sbb
lds
imul
inc
pop
push
dec
xchg
pop
cmpsl
mov
xor
fdivrs
push
adc
mov
push
lock
imul
add
enter
enter
xchg
fcmovnu
stc
outsb
cmp
stos
and
ret
adc
dec
stos
or
sub
dec
add
arpl
mov
lret
fistpl
mov
repz
arpl
mov
xchg
inc
sub
jl
xlat
sub
jae
mov
sub
cmc
adc
jmp
fcmovnbe
mov
scas
movsb
out
outsl
cmp
xchg
add
int
push
es
stos
or
push
pop
stc
sub
xor
jmp
inc
data16
subl
rcrb
dec
fucom
out
pop
lahf
push
dec
mov
push
add
mov
test
cmpb
cmc
dec
mov
loopne
insl
jb
out
push
ds
int
testl
in
mov
inc
mov
cmp
loope
lea
fistpll
fwait
movsb
push
fdivrs
xor
lret
movsb
pop
cs
inc
xor
out
std
cmpsl
mov
fninit
mov
cmp
inc
jo
mov
mov
mov
jmp
cmp
pop
mov
enter
push
and
add
mov
mov
loop
and
sbb
addr16
xor
jmp
lcall
mov
enter
fsubrs
and
push
lea
fdivs
lahf
mov
daa
aad
ds
sub
ffree
mov
es
push
lahf
test
adc
outsb
dec
and
jp
xor
arpl
punpckhwd
gs
das
cmp
mov
repz
xchg
dec
jo
xor
ror
cmp
cmp
jns
sub
pop
mov
icebp
cmp
imulb
iret
scas
jns
sub
int
or
arpl
fsubs
sub
or
mov
mov
out
pop
mov
stc
mov
sbb
rcll
int3
xchg
mov
jp
divl
push
cwtl
mov
cmp
dec
and
loop
sbb
push
loop
add
mov
bound
mov
stos
loop
mov
fldl
ljmp
pop
mov
in
sarb
sub
ficoms
inc
cmpsl
adc
cmp
lods
sbb
mov
data16
cltd
sub
or
gs
mov
shrb
popf
daa
mov
and
dec
int3
xor
movsb
test
inc
stos
sbb
pop
or
imul
add
xchg
pop
and
test
xor
pop
pop
mov
mov
adc
div
push
mov
cltd
ljmp
rcr
and
movb
clc
sti
lcall
mov
sarl
pop
adc
xor
jecxz
movsb
stos
rcl
add
mov
mov
sub
inc
adc
mov
mov
out
sub
inc
pop
jmp
cmc
push
cmp
test
jmp
popa
push
and
cli
inc
in
imul
ss
mov
std
adc
or
sub
adc
cmp
add
cmpsl
stos
es
pop
adc
jb
sbb
in
jbe
or
mov
mov
aas
movsl
jp
fs
hlt
dec
mov
add
sbbl
mov
mov
inc
pusha
push
fmuls
sti
inc
xor
inc
shlb
and
mov
adc
imull
nop
mov
xor
loopne
mov
sar
cmc
jae
imul
push
jmp
or
je
cmp
test
out
dec
pop
mov
pop
das
jo
call
mov
mov
mov
jae
cmpsl
mov
bound
int3
movsb
push
jge
xchg
test
jp
sarl
xor
fmuls
mov
movsb
sub
dec
stc
lahf
cld
mov
sub
sahf
or
pushf
mov
inc
jo
xlat
dec
mov
sti
fstps
into
mov
mov
mov
sub
inc
arpl
add
shl
in
dec
mov
lret
sbb
repz
out
fcmove
jg
sbb
push
out
aam
push
enter
xor
out
test
das
inc
jp
les
inc
mov
adc
or
lods
adc
pop
addr16
mov
arpl
and
fs
xchg
lods
lret
cwtl
pusha
rcrl
sahf
test
inc
pop
gs
aam
xchg
or
jl
inc
inc
shr
mov
popf
rorb
mov
or
call
mov
cmpl
push
cwtl
or
testl
push
lcall
cli
fisubrs
xlat
lods
mov
push
mov
in
loopne
jmp
xor
mov
sub
in
push
pop
out
ficomps
fsubs
mov
sbb
lahf
mov
jmp
and
inc
sub
lods
adc
inc
cmpsl
mov
mov
test
inc
xor
pop
cmp
arpl
movsl
sbb
movsl
aas
popa
xchg
shrl
adc
mov
jbe
jp
insl
mov
outsl
pop
es
cmp
dec
enter
push
mov
cmp
mov
sub
inc
in
and
dec
add
inc
decl
sbb
js
pop
mov
aam
mov
movl
or
cmc
idivb
mov
xchg
adc
xchg
mov
cld
cmpsl
sbb
icebp
sbb
in
push
inc
lret
fistpl
addr16
mov
xor
lds
xchg
fcoml
popa
pushf
xor
ret
or
aam
ret
mov
loop
add
iret
sbb
mov
pop
mov
scas
fcomps
mov
iret
stc
incl
inc
stc
xor
xor
fdivr
lcall
dec
cli
stos
dec
fsubl
daa
scas
mov
jns
fstpt
and
in
cld
push
leave
jo
sbb
xchg
out
add
xchg
add
arpl
cmp
push
ja
adcb
scas
call
fcom
repz
push
push
sub
and
ror
fwait
movsb
jae
bound
add
cmp
loope
dec
or
cmp
icebp
add
addr16
xor
push
mov
les
push
stc
roll
fiaddl
and
or
cmpb
and
mov
xchg
lret
cmp
push
adc
add
mov
lock
push
and
enter
push
jae
cwtl
test
stos
rcll
enter
addl
dec
aas
imull
insl
shrb
rol
pop
cmp
sbb
das
test
xchg
insb
aad
stos
das
aam
mov
mov
out
mov
mov
lods
pop
xor
sub
mov
and
xchg
dec
out
sub
jb
sahf
or
xor
arpl
dec
imul
adcl
or
lahf
jb
cmp
out
cmp
daa
xchg
mov
xor
aas
and
imul
jnp
add
sbb
pop
outsb
ud0
icebp
xor
push
jecxz
sti
enter
or
pushf
stos
jecxz
cmpsw
movsb
jbe
insl
popa
out
movsb
lods
mov
mov
test
mov
fmuls
and
fcoms
mov
mov
jg
pop
mov
int3
adc
out
mov
sbbb
aas
pop
dec
ljmp
sbb
xchg
popa
andb
mov
mov
inc
or
mov
jae
in
leave
fidivrl
aam
jo
pop
or
icebp
mov
fildl
lret
mov
jo
in
cmp
jge
cmp
adc
cmp
and
sub
and
cmpsb
sti
test
cltd
jge
push
dec
cwtl
lret
sbb
mov
mov
shrl
sahf
aam
dec
xchg
cwtl
out
test
mov
cmp
jmp
mov
pop
pop
iret
mov
into
pop
xchg
data16
repnz
sbb
test
add
fisubrl
xor
sbb
cmp
mov
add
sbb
jne
adc
pmulhuw
jecxz
insl
out
mov
inc
sbb
inc
jne
jl
je
cmp
ret
loope
cmp
das
aad
pop
out
sub
lret
fsubrs
mov
stos
and
call
xlat
mov
dec
ds
aas
shll
dec
cmp
mov
shrb
or
xor
push
jge
rorb
cmp
mov
mov
push
lock
popa
fstpt
shlb
in
loop
jmp
cmp
fbstp
lods
loopne
sbb
loope
xor
int
sti
test
jmp
lret
or
jg
dec
roll
push
xor
shl
add
mov
scas
mov
or
mov
fcompl
mov
scas
cli
movsl
lret
sbb
and
cmp
cmpsl
stc
repz
incb
rdpmc
xor
jae
rcrl
dec
cld
and
push
cmp
push
cli
sbb
jae
jne
and
enter
mov
mov
shlb
cmpsl
scas
test
std
xor
pushf
out
dec
adc
and
cmp
sub
push
or
test
cmp
mov
mov
fidivrs
fisubrl
push
sbb
xor
xor
adcl
punpcklwd
mov
fcomp
je
leave
pop
pop
jns
insl
popf
and
loope
mov
mov
js
ret
sar
mov
arpl
and
mov
lds
fnstcw
js
test
jecxz
mov
cmp
movsl
scas
push
mov
clc
imul
xor
push
cwtl
sti
lods
arpl
rorb
xlat
inc
mov
jns
sti
bound
push
mull
add
imul
bnd
cmp
pop
jbe
inc
stc
aam
jb
repz
xor
inc
dec
sarb
push
fadd
sar
aad
stos
imul
sub
pop
imul
movsl
loop
push
xor
pop
add
push
mov
cmp
stos
out
imul
leave
jo
nopl
out
or
out
jno
lds
das
push
mov
hlt
xchg
ret
aam
dec
pop
sti
and
xchg
cmp
lods
pop
scas
out
pop
and
inc
ss
movsb
xor
dec
dec
in
mov
icebp
pop
insb
call
or
and
inc
mov
fcompl
aaa
dec
sbb
dec
loope
pop
mov
mov
mov
cld
dec
sbb
insb
rorb
and
inc
cli
lret
push
lret
aam
sbb
and
push
out
outsl
addr16
idiv
inc
jmp
cli
cltd
nop
hlt
inc
imull
aas
stos
pusha
xchg
mov
les
mov
jp
das
scas
aam
dec
js
and
xchg
sub
into
mov
xchg
test
stc
mov
adc
jge
fistpll
test
xchg
pop
shll
scas
repnz
gs
out
outsb
test
push
inc
test
ljmp
mov
mov
pop
inc
cmp
lock
leave
cmp
stc
rclb
decb
es
pop
or
daa
sahf
add
clc
bound
adc
dec
je
sbb
cmp
inc
add
popf
shr
sub
sub
fistpl
push
shlb
rcrb
test
inc
push
pop
jne
mov
imul
mov
or
aam
jbe
mov
movsb
mov
push
ret
sbb
dec
daa
jle
lahf
adc
mov
mov
fmuls
xchg
and
fstpl
cmp
subl
ja
outsb
cld
enter
pushw
lret
add
sub
sbb
popf
nop
fwait
mov
out
add
xor
in
std
mov
mov
out
loop
movsl
loop
insl
xlat
scas
je
aam
add
sub
movsb
xor
fwait
lods
int3
pop
rol
sbb
mov
in
mov
stos
mov
dec
movsb
outsb
mov
dec
inc
rcll
imul
es
sbb
jbe
push
xor
inc
jno
rcll
adc
into
mov
movsb
fcompl
sti
lret
inc
ret
ret
xor
aad
lahf
mov
mov
aaa
mov
aad
dec
lret
adc
lret
inc
jmp
test
out
into
and
push
xchg
addr16
sub
test
in
push
mov
aam
mov
fwait
cwtl
sbb
mov
stos
add
push
imul
mov
stc
jne
inc
inc
daa
mov
fadd
mov
jl
hlt
fmuls
stc
jmp
jl
cmp
xor
or
movsl
mov
mov
mov
out
mov
jb
mov
imul
ljmp
cld
jmp
push
loopne
jp
mov
or
dec
cmc
stc
sbb
arpl
mov
repz
dec
mov
and
and
jecxz
jb
insb
push
out
test
aam
imul
loop
orl
stc
push
xor
mov
mov
dec
loop
dec
aam
fsubp
cmp
dec
dec
adc
movsb
inc
pushf
dec
mov
fldl
sti
xor
mov
jb
xor
push
out
in
dec
bound
fwait
pusha
cmp
aaa
mov
xchg
ds
mov
and
push
pop
loope
sbb
ja
hlt
int3
mov
fsub
mov
pop
rolb
mov
into
jo
jbe
ret
push
or
test
rol
popa
lods
and
lods
mov
mov
int3
jb
fnstcw
scas
dec
push
pop
cmp
mov
leave
out
je
sbb
cmp
sbb
std
fs
push
mov
mov
inc
movsb
jbe
xchg
enter
adc
cmp
adc
sarl
enter
mov
sbb
xchg
test
in
lds
lea
test
jmp
fdivs
sbb
sub
out
cmp
xor
fcmovbe
jle
outsb
mov
divl
lods
mov
push
or
fdivs
fadds
and
inc
sub
pop
aad
jp
sbb
sub
inc
ja
imul
idivl
mov
pop
fcomps
or
movsb
out
xchg
cmpsl
add
mov
mov
inc
add
dec
and
outsb
in
xchg
mov
inc
lea
clc
cmp
xchg
lock
mov
jb
stos
stc
mov
sbb
shl
xlat
pushf
cmp
add
fsts
jecxz
and
stos
jl
and
jno
loope
sub
cmp
es
cmp
aam
add
outsl
lcall
lods
push
pop
jo
jp
aaa
adc
gs
out
pop
movsb
xchg
cltd
dec
pop
xor
push
push
pushf
aad
sbb
std
push
imul
sbb
inc
mov
cltd
dec
and
call
imul
jmp
xchg
jmp
sbbb
aam
mov
sbb
pusha
ljmp
push
cmp
rcrl
mov
shl
int3
sbb
inc
cwtl
jne
pushl
pop
fs
jo
jb
sbbb
sbb
mov
ss
out
pop
xchg
xor
xchg
or
aam
or
fwait
inc
or
enter
push
outsl
stos
adc
insl
movsb
repnz
aad
jne
jmp
insb
mov
sub
idiv
pop
or
ret
movsl
daa
sub
fidivrl
scas
das
push
jle
inc
test
cltd
mov
imul
jnp
gs
mov
inc
out
mov
push
or
popw
add
jmp
jp
or
imul
or
loope
movsl
xlat
add
inc
inc
cmp
ja
xchg
add
mov
xor
jg
push
cltd
pushf
shll
dec
mov
pop
arpl
jne
cld
jmp
add
adc
push
lea
mov
mov
push
addb
cmp
sbb
inc
mov
pop
jg
ds
add
or
int3
cmpsl
mull
adc
push
shrl
lock
mov
jmp
insl
test
rolb
cmp
push
ja
dec
or
mov
hlt
sbb
inc
adc
ret
push
lock
shrb
clc
mov
scas
pop
fdivs
divl
mov
frstor
mov
bound
data16
movsl
out
cmpsl
and
aam
in
daa
in
add
mov
dec
lret
or
xchg
inc
jmp
inc
mov
push
shrl
push
lods
cmpsb
cld
xor
sbb
popf
lahf
mov
cmp
in
icebp
pushf
call
jp
sub
mov
jnp
ds
fldenv
xchg
clc
lret
cli
hlt
or
dec
inc
imul
fsubl
dec
int
daa
sbb
cmp
movsb
sti
and
sub
call
cli
roll
enter
inc
jb
je
jns
pop
mov
fs
std
pop
mov
cmc
pop
subl
outsl
adc
ss
mov
mov
movsb
jno
sti
js
dec
rorl
ljmp
jmp
jmp
push
aam
jecxz
or
insl
stc
add
pop
mov
and
sbb
aam
lods
add
das
pushf
add
imul
rorb
xchg
ds
mov
aam
push
push
bound
dec
lds
lea
mov
scas
test
outsl
push
cmp
xchg
sub
add
mov
mov
cmp
out
mov
xchg
mov
jmp
push
out
inc
xchg
sti
xchg
fadd
adc
dec
repnz
in
lahf
jmp
mov
fldl
stos
sbb
and
adc
add
icebp
stc
pop
fwait
ss
dec
pop
sbb
push
std
cli
mov
aaa
sub
cmp
out
inc
js
push
lret
outsb
sti
shlb
cmpsb
mov
cltd
dec
xor
mov
or
push
xchg
pop
test
fsubs
fs
sub
mov
sbb
mov
mov
lds
andb
leave
inc
lahf
push
sub
icebp
cmpsb
psubq
jbe
mov
dec
sbb
pop
cmp
scas
mull
stc
aas
cmp
pop
dec
inc
movsl
sbb
pop
cld
adc
test
cmp
std
push
out
inc
cmp
mov
jp
ds
mull
je
pop
or
mov
jo
inc
and
mov
test
push
repnz
cmp
call
xchg
testl
cmp
cmp
dec
jne
clc
scas
rdtsc
push
sub
or
jbe
fdivrs
ja
sub
jae
fistps
test
div
mov
inc
fsubs
mov
lods
mov
in
in
sti
push
mov
gs
sub
mov
push
jno
xor
mov
gs
cli
cmp
stos
cmp
xor
mov
and
dec
in
push
rcr
pop
or
and
ficomps
jno
test
or
mov
pop
adc
outsb
jo
insl
shl
mov
out
and
sub
mov
push
and
inc
fbstp
jne
loopne
mov
pop
mov
movsb
cmc
pop
add
sub
pop
test
insb
sarl
int3
das
adc
arpl
pusha
pushf
movsb
mov
mov
mov
loopne
mov
mov
jl
sbb
inc
pop
daa
stos
and
sub
xor
test
adc
out
adc
subb
xchg
dec
mov
sub
and
arpl
and
and
mov
fdivs
adc
mov
sub
push
adc
xchg
push
mov
push
out
dec
int
rorb
push
aam
cmpsb
jecxz
and
dec
mov
outsl
loopne
push
addr16
enter
decb
jp
aam
mov
in
loop
mov
inc
gs
adc
jle
mov
xchg
fadd
test
and
mov
insb
sub
movsb
sahf
mov
mov
test
mov
test
stos
add
xor
push
adc
mov
mul
cmp
push
fldenv
aam
xor
fwait
lret
xchg
lret
cs
bound
dec
jmp
jecxz
aam
jmp
mov
iret
inc
ret
and
inc
movsb
in
sbb
mov
lock
mov
scas
scas
xchg
adc
dec
aas
aam
xorl
cmpsl
int3
pop
test
test
sbb
dec
xchg
xchg
insl
fcmovne
dec
inc
pushf
dec
inc
or
xchg
jge
sub
ret
xor
mull
std
jp
fdivr
mov
sbb
fbstp
notb
aad
cmpsl
mov
jno
and
cltd
or
sbb
jbe
sub
mov
cmp
out
rolb
repz
xor
mov
aam
mov
test
rcrl
sbb
mov
mov
fisttps
mul
sub
iret
bound
aad
pop
pushf
dec
pop
popf
sarb
loope
mov
mov
test
sbb
dec
cmp
push
jnp
pop
arpl
jno
aad
mov
inc
movsl
cli
ja
push
sub
sahf
loopne
shlb
imul
pop
sub
xor
daa
pop
inc
gs
je
popf
sub
add
data16
push
movsb
inc
and
mov
sbb
xor
mov
aam
xor
divl
pop
push
sbb
sbb
sub
cmp
ds
and
and
jmp
aas
dec
xor
jmp
sub
scas
fildl
mov
push
fs
cmp
jbe
aam
lods
loop
inc
sbb
movsb
jecxz
xchg
fadds
xor
stos
dec
xor
dec
xor
mov
xor
jge
mov
dec
and
mov
inc
imul
pop
mov
mov
std
sub
xor
cmp
daa
or
xchg
bound
aam
lcall
dec
mov
pop
fdivr
pop
movsb
sub
je
ljmp
cmpl
inc
cmp
xchg
dec
inc
and
cs
mov
movsb
push
ret
sub
test
fadd
dec
lods
sub
out
push
inc
mov
sbb
leave
cli
jo
sub
sbb
inc
push
xor
repnz
les
loop
dec
cmp
add
mov
mov
jecxz
sarb
ficoms
insb
sub
stc
add
inc
sahf
lds
or
mov
in
inc
mov
cmp
inc
pushf
fsubrl
std
xor
xor
pop
pushf
adc
aas
jns
in
out
repz
stc
jmp
leave
sbb
cmp
mov
adc
mull
imul
cmp
lahf
mov
jbe
out
test
iret
adc
sbb
and
xor
shr
push
daa
loopne
cmpsl
movsb
sti
xor
pop
popf
imul
or
lret
pop
fdivrp
stc
hlt
in
xor
cmp
sub
dec
xor
mov
cmp
dec
pop
test
mov
hlt
leave
shlb
les
xchg
xchg
ret
ja
mov
data16
push
les
bnd
xchg
popa
add
dec
mov
sbb
lcall
pop
dec
mov
aam
add
mov
mov
mov
xchg
fcmove
xorl
sbb
sub
sbb
push
lock
cli
cmc
push
loopne
aam
push
jae
stc
add
aad
mov
mov
outsb
xchg
cmp
cmp
test
movsl
movsb
push
jg
stos
mov
addb
ja,pn
out
fcomp
xlat
mov
enter
xor
cmp
sub
iret
insl
mov
mov
xor
out
mov
xchg
jp
int3
dec
pop
enter
fiaddl
popf
out
movsb
mov
mov
adc
out
shlb
inc
lods
sbb
mov
add
mov
xor
ret
hlt
shlb
cmpsb
jbe
add
mov
mov
roll
pop
enter
stc
or
aam
rcl
lods
push
dec
or
push
stc
mov
inc
jmp
bound
pop
jmp
mov
pop
pusha
fildll
fistpl
rcr
jle
idivl
fs
xor
push
pop
mov
cs
pop
stos
mul
lcall
outsl
scas
movsb
out
roll
popa
mov
or
dec
cli
lret
adc
stos
mov
xchg
xchg
push
ljmp
loopne
in
cmp
jnp
mov
andl
cli
ja
jmp
cwtl
mov
pusha
push
rclb
out
cltd
or
cmp
mov
jae
push
add
pop
call
loop
jl
les
and
push
and
or
hlt
push
sub
insb
scas
popf
or
cmp
enter
lea
or
sub
push
mov
in
shlb
into
mov
test
mov
sbb
filds
xchg
test
sbb
cmp
cmp
cwtl
sbb
iret
cmp
xchg
pop
or
test
push
insb
jb
je
adc
dec
test
aam
mov
cmp
lds
mov
enter
inc
aas
mov
jg
add
cmc
outsl
clc
lock
add
jnp
adcb
int3
sbb
clc
cmpsb
divl
rol
test
fsubs
xchg
fnsave
sub
outsb
pop
lods
not
in
cmp
jl
mov
and
cli
mov
enter
sub
mov
jbe
add
ljmp
dec
xchg
xchg
insb
and
sbb
cli
aas
mov
mov
jmp
arpl
imul
lcall
adc
mov
cld
loopne
adc
movsl
addl
cmp
shrb
adc
aam
imul
pop
mov
pop
insb
cs
cmpb
dec
push
pop
popf
mov
aam
movsb
sbb
xchg
mov
in
popa
xchg
xchg
shr
fldcw
loope
cmp
stc
add
out
push
mov
xor
lock
push
loopne
and
xchg
push
mov
push
mov
test
repz
aaa
insl
sub
xchg
pop
ss
mov
cmpb
cmp
ljmp
cld
mov
enter
adc
ret
insl
ss
stos
pop
add
mov
mov
mov
inc
cmp
bound
call
push
push
mov
mov
mov
scas
int
pusha
aam
testb
xchg
sbb
repnz
sbb
inc
fsubrs
lcall
pop
inc
sbb
nop
cwtl
jl
pop
scas
pop
mov
outsl
std
push
inc
ss
adc
adc
in
pop
aaa
dec
sahf
push
or
inc
fwait
mov
fldcw
cmp
sarl
cmp
sub
push
scas
jg
scas
stc
das
add
movsb
sbb
icebp
mov
xor
adc
pop
mov
rclb
nop
jg
xor
lds
andl
mov
scas
fld
pop
mov
xchg
fnstenv
cmp
inc
pop
daa
xor
or
xor
daa
xlat
cmpsb
mov
push
loope
pop
stc
gs
mov
mov
push
push
testl
test
ret
test
dec
inc
xor
scas
fcoms
sti
mov
pop
cmp
clc
rcrb
jmp
repz
xorl
mov
pusha
mov
push
mov
and
mov
push
or
ja
test
mov
andb
xor
cmpl
out
mov
rolb
nop
dec
rcl
ror
fmuls
jp
ret
xor
jae
sbb
xor
jbe
popa
push
pop
dec
stc
ss
cmc
cs
and
and
mov
out
test
testl
rep
cmp
mov
cmc
add
inc
mov
imul
dec
push
add
pop
mov
popa
jecxz
shrl
popf
cmp
ja
xor
pop
cmp
shl
movsb
out
and
je
hlt
ljmp
mov
mov
enter
ljmp
inc
push
adc
push
cmp
mov
add
loop
loope
adc
fs
jecxz
out
in
xor
adc
adc
add
ds
outsb
inc
fdivrs
push
pop
inc
scas
or
add
dec
sub
mov
mov
mov
inc
inc
cmp
xor
mov
insl
jecxz
push
inc
xor
ficompl
jl
fwait
testl
dec
rcrb
pop
popa
daa
das
sub
adc
popf
jge
push
push
insb
fbld
cmp
mov
sar
movaps
sub
fidivl
enter
xor
or
fsts
in
mov
sti
add
inc
jmp
addl
jno
sub
jae
mov
mov
adc
jb
sub
cmpsb
jmp
or
pop
cmpb
data16
loope
mov
sti
xchg
push
sarl
push
loope
loop
pop
inc
loop
scas
test
inc
pop
push
inc
mov
movsb
mov
out
dec
pop
clc
push
and
popf
mov
sub
scas
cmp
loope
iret
jns
mov
mov
xor
addr16
cmpb
sub
cmpsl
stos
icebp
movsb
adc
or
iret
cwtl
and
ret
flds
dec
fstl
out
cwtl
aad
pop
cmp
in
cmp
add
repz
push
sbb
sbbl
int
pushf
imul
sti
jmp
jmp
inc
stc
test
addb
movsl
or
loope
repz
mov
push
mull
movsb
add
jmp
dec
cmp
das
enter
inc
inc
enter
movsl
fadds
pusha
pop
cltd
sub
icebp
test
shlb
pop
mov
lahf
dec
sbbl
stos
inc
xchg
xchg
out
pop
testl
push
fsubs
and
mov
mov
add
xor
hlt
mov
adc
cltd
test
lea
das
cmpsl
rorl
rcrb
add
inc
or
jmp
cmc
jp
mov
data16
jmp
mov
jmp
and
cmp
fwait
add
cs
outsl
fidivrs
add
cmp
test
shl
pushf
out
cmpsl
push
mov
mov
sub
push
fistl
ret
xchg
popf
cmp
in
inc
pop
dec
mov
cmp
hlt
in
enter
in
sbb
shrl
lcall
mov
dec
push
add
jp
lcall
adc
ja
lahf
push
aam
mov
pop
sub
mov
les
outsb
loopne
fwait
pop
in
xchg
push
mov
and
push
cmp
sti
push
sahf
es
dec
call
cs
loop
push
dec
stc
cmc
mov
dec
in
lahf
mov
pop
inc
dec
xor
mov
stc
dec
cmp
jp
mov
mov
movsb
fdivs
ficompl
adc
jae
mov
dec
outsb
stos
scas
and
adc
xlat
push
xchg
lahf
cmp
jecxz
stos
xchg
mov
sbb
rcrl
into
jne
cmpb
dec
add
mov
or
and
sub
dec
mov
ret
dec
aam
cmpsb
pop
add
aaa
jp,pt
sub
xor
outsl
add
mov
mov
out
leave
dec
int
jae
popf
ljmp
test
pop
shll
aad
push
ds
inc
and
mov
pop
mov
mov
mov
stos
scas
or
es
and
sub
imul
pop
lret
push
pop
mov
cmp
mov
or
pop
mov
cmp
add
xor
push
leave
pop
jno
inc
mov
ds
movsb
or
aad
lahf
mov
dec
lds
cwtl
aam
mov
lcall
movsb
push
enter
xchg
xor
not
inc
jle
pushf
and
push
mov
cmp
jmp
and
or
dec
sub
adc
mov
cmpsl
dec
sub
dec
mov
cmc
ja
mov
dec
pop
loop
push
or
mov
inc
movsl
pop
mov
adc
test
jne
test
jb
lods
cmpsl
xor
dec
test
mov
arpl
cltd
jno
xor
mov
or
test
stc
pop
mov
stos
dec
dec
loop
cltd
sbb
and
push
or
stc
decb
mov
lods
xchg
mov
jne
inc
loopne
jns
xor
mov
inc
xor
sub
popf
xor
adc
insb
mov
stos
andl
xor
mov
jmp
dec
xlat
subl
test
fisttpll
leave
adc
pop
jmp
inc
daa
fdivs
or
ss
mov
in
push
int
aam
outsl
clc
pusha
cmp
repz
mov
jbe
xchg
gs
cmp
mov
adc
fiaddl
addr16
or
jl
adc
pop
push
jns
adc
iret
inc
rcrl
fidivrl
mov
arpl
cmc
jb
aas
add
pushf
movsl
xchg
test
mov
sbb
je
pop
inc
pushf
dec
mov
mov
outsl
shr
mov
sbb
push
addr16
cmp
or
lods
jecxz
add
aad
test
inc
cld
mov
fimuls
ljmp
movsl
or
test
adc
fdivrs
fs
cmp
cmp
ja
mov
pop
push
pop
mov
loopne
inc
and
jg
dec
subl
sbb
and
dec
aas
cli
clc
inc
xlat
enter
iret
repz
mulb
mov
call
push
and
repnz
cmp
cmc
cmp
or
adc
adc
cmp
js
frstor
ljmp
mov
dec
scas
mov
sub
daa
inc
test
add
xlat
cltd
jecxz
mov
stos
push
leave
fistpll
mov
movsb
aam
mov
jno
addr16
mov
pop
imul
into
arpl
lcall
repz
and
aam
mov
cmp
mov
lods
enter
xlat
aaa
xchg
mov
mov
das
sub
push
xchg
push
fistpl
insb
popa
repnz
add
stc
mov
stc
mov
stos
in
inc
inc
sbb
jl
movsl
movsb
adc
and
dec
mov
jl
test
cmp
pop
daa
dec
test
sub
aam
and
movsb
pop
lock
dec
or
mov
ret
out
je
mov
jae
push
fdivrs
xor
scas
push
mov
leave
or
ffree
cmp
cld
dec
adc
out
inc
in
add
mov
mov
xchg
dec
aas
xorl
aam
push
and
mov
lcall
jecxz
fs
sub
sub
dec
stc
pop
mov
sti
pop
add
pusha
pop
movsb
and
mov
shrb
arpl
push
push
adc
je
in
cmp
push
xor
adc
sub
mov
mov
call
mov
popf
bound
and
inc
out
stc
jg
xor
popf
test
sahf
repnz
mov
cltd
and
int3
jle
mov
cmp
push
cli
inc
inc
jnp
lods
push
mov
xlat
out
pop
mov
or
adc
popa
dec
sti
add
pop
popa
insl
repz
mov
sub
insb
daa
dec
dec
das
shrb
fldcw
add
cmpsb
adc
cmp
stos
std
test
xor
dec
jg
xchg
hlt
sbb
fucomip
movsb
xor
popa
cld
push
xchg
or
jp
and
into
add
cmp
dec
je
pushf
scas
jmp
rorl
add
and
and
and
adc
mov
cmp
sbb
and
jp
mulb
mov
aam
dec
push
in
aad
or
dec
jmp
stos
xchg
mov
or
sub
scas
icebp
jmp
shl
movsb
mov
movb
insl
pushf
pop
sarb
sbb
jne
stos
icebp
xlat
lcall
dec
movsl
loop
xor
adc
stc
jl
lahf
sub
ds
pop
mov
fistps
fbstp
xchg
mov
cli
sarl
jns
mov
cmpsl
pop
dec
aam
adc
push
idivb
in
add
cmc
inc
arpl
jmp
movsb
test
stos
mov
fs
xor
cmp
jge
popf
sbb
pop
stc
cs
jbe
jb
cmc
lcall
mov
cmp
cmc
mov
scas
stos
sbb
adc
mov
push
stc
fs
cmpsb
pop
insl
jecxz
sbb
jne
ds
mov
aam
xlat
cld
adc
mov
movsb
jb
mov
sub
xor
loop
sarl
movsl
mov
cltd
mov
or
sbb
sbb
sahf
lods
sbb
inc
xor
adc
or
popf
in
lods
cmpsl
dec
cmp
lret
ljmp
in
arpl
ret
mov
pop
repz
mov
mov
push
mov
hlt
test
out
les
es
fdiv
test
or
dec
call
pop
js
out
loop
out
mov
test
cmc
mov
movsb
pop
cmp
sbb
mov
cmpsl
lods
or
in
xchg
push
mov
nop
enter
test
pop
dec
xor
lds
mov
pop
stos
aas
aam
or
jp
test
les
mov
mov
lds
dec
stos
movsb
mov
jge
cltd
popa
push
pop
arpl
std
cmp
or
scas
in
test
adc
aam
lock
in
in
cwtl
in
mov
mov
or
mov
add
push
in
or
push
mov
dec
cltd
fimuls
and
push
mov
pop
fmuls
loope
lret
mov
jmp
inc
out
stc
test
xorb
pop
dec
mov
test
jge
sub
adc
dec
jnp
int3
inc
and
or
into
leave
cmp
ficompl
lret
mov
and
movsb
mov
outsl
add
loopne
cmp
pmaxsw
add
mov
call
popa
arpl
das
xlat
fnstenv
dec
adc
imull
lods
fisttps
shl
mov
movsl
push
icebp
idivl
test
dec
inc
movsb
push
insb
jg
xor
sub
cmp
sbb
and
flds
xlat
imul
aad
or
cmp
dec
test
dec
pop
jb
jno
loope
or
imulb
stc
fistpll
xchg
sahf
es
out
outsb
mov
rolb
cmp
aad
testb
mov
movsb
xor
mov
push
mov
inc
push
mov
cltd
push
mov
sbb
lret
dec
int3
js
pop
sti
inc
mov
or
jbe
imul
cmpsl
add
sbb
sub
ret
pop
arpl
sub
lret
shll
or
lea
xorb
push
loopne
pop
adc
repnz
ss
add
stos
mov
xchg
push
imul
test
mov
popf
pop
shll
dec
je
sbb
int3
pop
fmuls
pop
and
fdivrs
xchg
mov
fnstenv
ss
mov
jne
sub
arpl
sbb
or
push
adc
sbb
pop
test
fildll
push
mov
cmp
arpl
lods
orl
out
mov
dec
aam
test
popf
mov
out
dec
ret
roll
unpcklps
dec
add
or
inc
es
jle
mov
mov
or
jecxz
xor
hlt
imulw
mov
clc
push
dec
stos
or
mov
mov
subb
dec
jle
sbb
mov
and
nop
push
cmp
mov
add
test
pop
stc
fldl
je
popa
rep
mov
movsl
cmpsl
mov
pushf
mov
and
jae
mov
scas
cmp
arpl
repz
das
dec
xchg
add
lret
cltd
or
int3
sbb
adc
data16
gs
cmp
movsl
mov
repz
movsl
or
outsl
xchg
popa
xchg
cmpsl
cmp
sbb
lahf
push
into
push
bound
sti
push
add
imul
enter
out
xorl
jecxz
cs
int
cltd
push
imul
clc
movsb
fbld
and
xor
inc
sbb
stos
ljmp
shrl
in
push
into
movsl
sahf
dec
cli
ja
sti
pop
sbb
push
iret
or
push
enter
out
aaa
insb
pop
stc
fs
arpl
jnp
mov
or
mov
sti
data16
ret
fcomps
cwtl
pop
jp
movb
mov
cmp
mov
sub
mov
push
or
cmc
mov
push
jecxz
mov
icebp
dec
xor
scas
and
fisttps
jge
sbb
add
js
cmpsb
fidivrl
call
push
loope
insb
mov
add
das
fiaddl
push
test
inc
int
sbb
jo
sub
push
inc
std
and
or
mov
dec
xchg
fimuls
pop
mov
inc
loope
lret
mov
stc
outsb
popa
sub
jno
add
out
popf
mov
adc
cmp
lods
not
pop
mov
stos
test
jns
js
or
mov
aas
pop
popf
xchg
mov
sub
push
gs
mov
inc
pusha
in
mov
int
push
cmpl
sbb
push
mov
mov
in
add
aam
test
mov
imul
out
pop
inc
cltd
outsl
lcall
lahf
scas
add
mov
loop
jmp
popf
pop
dec
xor
loop
xor
aas
cmpsb
rcrb
cmp
add
addl
rcl
mov
fucomp
mov
pop
inc
mov
mov
pop
dec
cmpsl
pop
popa
add
jae
lcall
dec
fs
fs
mov
cld
leave
and
sbb
sub
int3
jbe
adc
inc
stc
and
sub
mov
movsl
test
ljmp
jmp
ds
dec
test
cmpsb
das
xchg
or
pop
add
sarb
popf
mov
sub
lret
jns
xor
mov
flds
mov
add
cmp
lods
xor
or
xor
jmp
push
xorb
nop
mov
or
pop
arpl
xor
aam
mov
adc
xor
inc
jnp
mov
dec
jo
jns
aam
popa
stc
sti
push
shlb
or
daa
or
push
cmp
xchg
push
lret
arpl
and
mov
leave
xor
aam
mov
inc
xor
aas
pop
arpl
cwtl
stos
scas
xchg
dec
out
inc
mov
lods
mov
inc
or
and
jno
aad
lods
dec
mov
leave
gs
test
mov
les
adc
add
inc
mov
sbb
push
cwtl
les
pop
adc
outsl
test
or
inc
lret
mov
or
inc
lods
loope
test
std
sbb
adc
in
mov
xchg
mov
inc
pop
dec
rolb
sub
sbb
das
xor
xchg
inc
testb
xor
jp
or
xchg
sub
outsl
mov
aad
lret
rorb
sbb
jne
and
dec
adc
and
loopne
pop
sbb
adc
scas
popf
pop
cltd
mov
or
stos
pop
and
add
add
mov
push
pop
xor
mov
aam
lds
jge
and
add
shll
arpl
jecxz
or
out
pushl
mov
xlat
xlat
cmpsl
sbb
cmp
gs
dec
insl
filds
mov
sarl
push
inc
and
add
cmp
adc
mov
xchg
popf
int
aaa
xchg
xchg
testl
iret
jnp
lahf
xor
arpl
int3
lcall
add
sti
popf
stc
inc
scas
sbb
adc
add
add
xchg
lahf
adc
popf
shrl
mov
pop
fs
outsb
orl
ret
in
pop
cmp
popa
frstor
int
repnz
ja
stc
aam
ret
sbb
adc
and
fcompl
dec
daa
inc
dec
and
jno
cmp
xchg
adc
sahf
xchg
in
xchg
xlat
testb
sbb
cmpsl
dec
loop
xlat
outsl
adc
cmp
jmp
xchg
pop
mov
push
cli
mov
incb
sub
fcmovb
pop
jnp
inc
dec
inc
mov
cs
sbb
lcall
out
jb
sarb
cmp
jecxz
test
in
or
sub
in
loop
push
xlat
nop
mov
out
adc
push
outsb
mov
and
addr16
aam
cmc
jno
scas
ja
mov
sub
testb
jns
cmpsb
xor
in
mov
pusha
ret
insl
outsl
scas
lcall
aad
mov
mov
lds
cmp
scas
or
loope
loopne
cmp
inc
stos
dec
mov
out
mov
cmp
test
mov
sub
stos
mov
imul
inc
dec
jne
sub
pushf
movsl
pop
iret
lods
and
jnp
mov
cmp
mov
aam
adc
mov
mov
xor
and
mov
push
test
and
inc
cltd
sarl
cmp
scas
loopne
mov
inc
loopne
xlat
mov
enter
ror
fildll
push
test
in
jp
fldl
mov
cmp
fcmovbe
and
dec
xchg
arpl
and
inc
mov
xor
add
aad
mov
sub
jns
movsl
mov
mov
sub
out
jge
add
rcrl
lret
aad
pop
out
ja
int3
subb
jno
mov
fdiv
mov
iret
into
mov
mov
mov
pop
testl
in
pop
xchg
mov
shlb
xlat
dec
out
lcall
fdivrs
mov
cmp
movsl
out
add
popf
inc
stos
rcrb
add
imul
and
add
testl
cmpsl
rclb
jecxz
mov
push
mov
inc
andl
movsb
sbb
add
mov
popf
popf
or
inc
sub
loop
imul
push
out
je
sub
aam
dec
das
add
inc
dec
dec
insl
test
hlt
add
push
mov
xchg
and
mov
das
lret
cmp
hlt
cmp
sbb
mov
mov
ds
daa
daa
outsl
add
jne
mov
ljmp
movsb
mov
scas
popf
dec
sti
jmp
test
mov
inc
pop
fcoml
out
jl
xchg
jp
xchg
pop
adc
pop
roll
scas
pop
push
mulb
push
mov
xchg
add
gs
aas
popf
cmp
sub
add
andb
fdivs
pop
or
add
cmpb
mov
mov
lods
add
add
cwtl
movsb
popa
mov
xchg
mov
popf
mov
imul
mull
mov
sub
cmp
test
out
aaa
mov
daa
inc
push
out
sbb
out
jmp
sub
pop
shr
push
in
mov
cmp
dec
mov
or
out
dec
fsubs
cmpsl
pop
scas
cmp
inc
cld
sahf
fdiv
imul
neg
mov
lods
cmpsl
push
lods
inc
sub
sarl
xchg
jmp
shlw
out
popf
iret
ljmp
push
popf
es
xchg
ret
cmpsl
sti
jbe
inc
repnz
out
xor
je
sbb
imul
jbe
dec
in
cld
insl
dec
imul
std
sbb
aam
sub
xchg
and
push
jg
repnz
or
cmp
test
jne
sahf
sub
and
mov
add
dec
push
ljmp
xchg
cmpsl
aam
popa
and
inc
and
push
sbb
jp
cmpsl
test
shrl
dec
popa
clc
jbe
mov
lock
xchg
sar
ja
jecxz
out
cli
jae
cmpb
sbb
mov
cmp
sbb
movsb
add
loope
cltd
adc
cltd
dec
repnz
dec
or
or
mull
mov
insb
cli
js
ja
jmp
pushf
jb
js
jge
mov
mov
pushf
aam
sbb
aam
fbstp
cld
lods
stos
xor
or
loope
movsl
adc
push
loope
out
addr16
push
pop
add
imul
cmp
test
add
lahf
lcall
js
sub
push
xor
sub
mov
adc
or
lds
mov
inc
mov
js
mov
dec
imul
mov
add
pop
mov
adc
rorl
pop
pushf
aaa
repz
jb
mov
xchg
rclb
test
out
fst
gs
xchg
sahf
add
mov
or
int3
lods
xchg
fists
mov
inc
pop
pop
xorl
pushf
mov
lods
adc
xor
mov
jmp
scas
adc
call
mov
sub
inc
fwait
mov
in
aam
into
fnstsw
dec
push
sub
imul
mov
addr16
add
pop
push
dec
stos
icebp
pusha
adc
sahf
arpl
push
in
xor
mov
sbb
push
sbb
add
xchg
xchg
mov
negl
mov
push
push
mov
inc
mov
mov
add
in
stos
xchg
xor
in
mov
in
sub
enter
pop
aad
push
sbb
sahf
test
sbb
in
xchg
dec
mov
aam
negl
and
or
push
lock
mov
subb
mov
leave
push
mov
mov
inc
jmp
dec
add
xor
cltd
dec
hlt
mov
inc
subb
mov
dec
jl
loop
xlat
dec
es
fnstsw
xor
mov
addr16
adc
stos
or
out
enter
adc
fisubl
mov
or
out
mov
cmp
pop
outsl
cltd
into
push
imul
iret
or
hlt
mov
fdiv
lock
rcr
mov
pop
dec
addr16
je
push
cmp
xchg
add
mov
dec
fmuls
flds
lods
lods
jecxz
dec
je
dec
lods
or
jbe
dec
push
mov
popf
and
in
shrb
jp
sti
fwait
rcl
stos
inc
movsbl
movq
xchg
and
imul
cmp
adc
pop
lahf
jp
fdivp
in
mov
das
pushf
mov
loopne
sbb
jp
add
cmc
out
push
jge
lods
fisubs
or
sub
pop
jp
test
std
fmul
push
cmp
lods
ficomps
inc
sbbl
rorb
inc
xchg
jae
sub
loope
scas
jns
and
xchg
push
xor
loopne
mov
fimull
inc
popf
mov
cld
dec
lret
std
imul
mov
shl
push
arpl
scas
push
mov
out
mov
xchg
xor
loopne
push
iret
jmp
rorl
stos
enter
scas
or
and
icebp
jne
xchg
bound
mov
cmp
and
mov
aam
mov
dec
stc
inc
xchg
ret
insb
pop
xor
lea
and
repnz
mov
add
xor
and
sub
mov
pop
or
movsb
data16
xor
in
pop
test
sbb
imul
push
ss
jp
xor
je
mov
shlb
movsb
rcrl
mov
insb
jmp
andl
add
mov
outsl
mov
into
cmp
push
ret
outsl
add
jae
ret
dec
out
mov
es
sbb
jo
mov
sub
fadds
pop
add
mov
or
stc
xchg
cmpsb
cmp
pop
std
inc
or
add
jbe
out
pop
inc
stc
popf
nop
pop
xchg
iret
mov
aaa
mov
shll
aam
xor
add
out
dec
pop
lret
ret
scas
and
or
dec
iret
xor
push
jmp
add
or
cmp
dec
cltd
pop
sahf
pop
dec
mov
xchg
popa
or
stc
enter
and
add
and
cmc
mov
sbb
aaa
loop
or
hlt
mov
sahf
mov
sar
mov
test
in
fstps
cli
out
and
je
pushf
xor
cltd
xchg
in
out
jl
push
xor
xor
insl
jno
clc
cltd
imul
fsubr
subl
rcrl
jge
dec
hlt
add
mov
mov
lds
mov
xor
iret
xor
roll
mov
or
cmp
mov
rolb
mov
loop
inc
test
test
sub
cmp
fs
dec
adc
hlt
xor
loope
add
mov
enter
lods
rcll
scas
sub
int3
sbb
mov
ficoml
mov
dec
test
scas
cmpb
dec
stos
dec
cmpsl
int3
pushf
pop
lcall
or
in
loope
mov
cmp
in
push
dec
mov
outsl
adc
sbb
aam
pushf
sub
movsb
pop
orl
pop
rcl
push
push
jnp
aam
inc
xor
fdivrs
pop
sbbb
pop
inc
xorb
cmp
fbld
mov
adc
cwtl
push
adcb
cmc
sahf
mov
js
mov
pusha
rcrb
xor
and
icebp
mov
sub
loopne
mov
mov
mov
sub
or
in
mov
push
cltd
ljmp
roll
lock
pushf
test
jns
mov
inc
xchg
mov
xchg
dec
mov
into
hlt
jge
dec
pop
fists
addr16
sub
stos
adc
fwait
lods
fdivrs
jmp
testb
out
aam
loope
imul
dec
ja
or
dec
fcomip
push
adc
or
sbb
pop
ret
fcomps
xchg
mov
inc
mov
shlb
mov
hlt
and
inc
mov
mov
and
mov
loope
and
jno
inc
mov
push
sub
jae
push
inc
mov
mov
mov
mov
fimull
jne
bound
or
lods
pushf
repnz
or
adc
or
fs
sub
mov
aam
stc
ret
mov
xor
xchg
push
xor
outsb
pop
clc
fnstsw
push
test
xor
jns
xchg
xchg
call
call
stos
test
xor
mov
out
mov
pop
and
enter
enter
adc
shl
arpl
loopne
fbstp
addr16
dec
cmp
test
fwait
push
lods
fstpl
add
es
pushf
mov
cmp
inc
pusha
mov
rclb
xlat
decl
mov
push
cld
sti
cmpb
jl
mov
pop
cmp
mov
mov
mov
iret
mov
xchg
adc
and
loopne
add
cwtl
push
adc
sub
insb
fsubr
inc
enter
inc
orl
decl
mov
stos
and
or
mov
into
inc
and
add
les
jnp
bnd
cmpsl
movsb
cmp
out
add
and
adc
xor
push
in
sub
mov
sub
fadd
xchg
lcall
popa
and
popf
cmp
or
outsl
adc
xchg
jmp
aam
jnp
rcll
inc
and
cmp
jecxz
loop
mov
sbb
int
and
shlb
adc
adcb
pop
mov
mov
rcrb
sub
jl
lea
or
pop
sbb
and
mov
lock
xchg
sbb
pusha
mov
insb
mov
iret
jb
testl
adc
mov
dec
mov
mov
lret
inc
mov
inc
std
push
cmpl
mov
xor
leave
popa
mov
cmp
out
cmpsl
mov
jl
iret
mov
xchg
psraw
add
mov
pusha
mov
dec
adc
or
and
add
loope
cwtl
scas
dec
adc
data16
aas
push
das
jl
sbb
jmp
ss
mov
or
shlb
out
mov
shll
cli
jbe
mov
cmp
out
or
sub
out
aam
mov
add
mov
fsubrs
pushf
push
jmp
ds
mov
movsb
xor
test
mov
cmp
push
and
lcall
into
mov
pop
aam
mov
out
test
push
outsl
stos
mov
pop
cli
int3
push
pushl
sub
movsb
pop
cwtl
mov
and
mov
ret
and
pop
pop
sti
arpl
xor
mov
dec
fdivrl
iret
clc
mov
scas
dec
movsl
sbb
mov
mov
lret
sbb
fsubs
add
adc
adc
dec
aam
dec
mov
lods
sub
inc
mov
pop
imull
dec
leave
mov
cmp
xlat
sbb
mov
ja
jbe
sbb
in
movsl
pop
cmp
mov
lock
cmp
and
inc
stc
push
fcoms
xchg
hlt
sti
insb
adc
mov
push
cmp
lea
jmp
pop
jmp
out
mov
sarl
inc
stc
inc
sbb
sbb
and
xor
gs
lds
sbb
fdivrs
inc
cli
into
dec
js
in
rclb
std
out
repz
fs
movsl
addr16
ljmp
rcl
stc
mov
and
pop
in
mov
or
add
orl
and
xor
ror
sbb
sbb
xorb
int
xor
lds
out
mov
aam
push
stos
xchg
cmp
jl
mov
int
sbbb
enter
jp
loope
pop
in
mov
lahf
or
fisubrl
mov
mov
popf
mov
inc
inc
mov
cli
inc
cmpsb
movsb
sbb
jae
iret
and
xlat
sbb
xor
sbbl
stos
pop
jb
imul
testb
mov
pop
xor
or
lcall
pushf
and
imul
sub
mov
scas
test
test
dec
pop
pop
fnstsw
shlb
lcall
or
pop
mov
imul
cs
fcmovnu
push
ds
es
and
push
jmp
imul
js
ret
aam
leave
xlat
add
xchg
lcall
int
mov
pushf
fisubl
cld
mov
mov
outsb
leave
adc
repz
loop
add
sbbb
es
cvttps2pi
and
adcl
loop
fistps
stc
out
mov
mov
mov
xchg
shrl
pop
push
cmc
and
mov
int3
aad
cld
mov
xchg
and
add
or
jnp
push
jae
mov
aas
popf
fmulp
cmp
mov
jecxz
cmp
cmp
xchg
xor
fadds
push
dec
xchg
stos
lods
mov
sub
in
mov
andb
pop
getsec
sbb
mov
stc
jg
out
or
mull
stos
stc
mov
ficompl
out
rorb
sbb
dec
daa
push
dec
por
rcl
xor
cmp
mov
fwait
add
xchg
mov
mov
sbb
mov
xchg
ficomps
popf
mov
push
or
outsl
imul
loope
sbb
loopne
jmp
xchg
or
cmc
popa
inc
sub
aam
imul
mov
cltd
mov
imul
push
das
sub
pusha
out
loopne
loopne
loop
bound
scas
pop
subl
out
fbstp
or
loopne
dec
aaa
hlt
pushf
and
cmp
xor
add
jae
pushf
in
pop
dec
fs
adc
push
mov
mov
in
mov
mov
outsb
jecxz
je
push
ret
cwtl
mov
xor
imul
bsf
iret
xor
aam
popa
dec
add
cmp
mov
inc
xchg
xchg
xor
gs
mov
xchg
int3
push
cmp
stc
xor
outsl
push
jnp
jecxz
pushl
mov
test
arpl
dec
mov
mov
sbb
xchg
xor
mov
mov
lock
cmp
fstpl
pop
adc
xchg
out
cs
mov
pop
ret
jb
add
add
xchg
pushf
std
mov
sbb
lret
inc
dec
mov
mov
mov
aam
push
push
fstpt
push
out
pop
or
add
push
aam
sub
xor
cli
cmpsb
jmp
lcall
cltd
rclb
mov
dec
jmp
lock
mov
scas
and
filds
lock
xchg
adc
adc
or
std
enter
cmc
jmp
mov
mov
call
stc
push
push
fstps
das
dec
adc
cmp
or
xchg
mov
orb
push
cmp
jp
inc
xor
or
enter
sub
shll
inc
lds
or
mov
negb
bound
dec
mov
cltd
inc
loope
movsb
adc
jo
popf
mov
inc
ja
outsb
inc
inc
jmp
adc
std
popf
mov
cmp
sbb
mov
add
xchg
jp
out
mov
ds
push
push
hlt
sbb
jns
lea
add
dec
sbb
mov
bound
lret
loope
repz
inc
dec
aad
pop
movb
rcrb
cltd
mov
aaa
cmpsb
dec
dec
inc
hlt
lods
pop
push
jecxz
ror
inc
push
inc
ljmp
subl
mov
mov
aam
cltd
popa
jo
sub
imul
jb
push
or
cmc
popf
movsb
ror
into
pop
cmp
arpl
xchg
add
dec
pop
enter
pop
lea
outsl
dec
mov
xor
mov
fwait
push
and
dec
enter
xor
in
insl
add
xlat
into
mov
out
es
arpl
mov
adcl
jb
aam
mov
adc
cmpsl
adc
push
sarl
push
movl
mov
mov
sarb
add
out
std
inc
add
push
mov
jp
or
mov
aam
cmpsb
cli
hlt
jae
dec
xchg
stos
jbe
add
cmp
outsb
mov
mov
loope
aaa
enter
mov
and
fcomip
into
mov
pop
ljmp
out
sahf
add
pop
mov
les
sub
cmp
sub
dec
ja
pop
call
scas
je
add
sbb
fs
pop
pushf
and
inc
push
ja
data16
ss
cwtl
push
pusha
add
sbb
in
or
xor
test
mov
mull
and
mov
in
xor
sub
clc
push
int3
sbb
movsb
repz
aas
mov
add
dec
cmp
dec
mov
and
push
mov
pusha
jb
mov
sti
cmovl
outsl
scas
pop
rorl
cs
mov
inc
dec
enter
stos
mov
adc
cmpsl
in
inc
fisttpll
test
fimull
jmp
pop
imul
movsl
pop
and
test
sarl
mov
movsb
testl
das
jl
dec
addr16
ret
sbb
mov
sahf
rcrb
or
xor
stos
dec
repnz
jnp
ficomps
arpl
add
std
mov
mov
xor
mov
add
lret
xlat
cmp
or
jecxz
ror
xlat
test
cld
add
data16
daa
sub
mov
mov
xchg
inc
ret
mov
cmpsl
movsb
mov
push
dec
sub
in
mov
idivb
pop
mov
ss
mov
jmp
mov
push
iret
inc
mov
popf
jmp
add
sbb
in
ret
les
add
aam
gs
in
int
imul
mov
and
pop
adc
dec
aas
sub
scas
mov
jno
lcall
test
and
xlat
mov
and
sbb
lret
cwtl
xor
jb
dec
in
sub
out
push
cmpsb
xchg
cmp
inc
cld
pop
mov
mov
and
hlt
xor
cli
inc
arpl
cmpsb
loop
cs
cmp
pop
sti
and
inc
sti
jp
sar
das
lods
rorl
dec
inc
enter
or
mov
scas
mov
cmp
jae
lea
iret
pop
push
fsubr
sub
pushf
or
loopne
stos
jge
sbb
push
add
mov
in
fists
xor
std
xchg
and
dec
lock
jmp
scas
test
dec
dec
xor
loope
mov
je
sarb
into
mov
idivl
imul
xchg
repz
sbb
pop
stc
aam
in
xlat
jecxz
sbb
dec
pop
adcb
push
cmp
jmp
cmp
cmc
in
cli
aas
cmp
test
mov
xchg
mov
outsb
mov
and
ds
jne
or
subb
cmpl
or
xchg
jmp
nop
jmp
jecxz
inc
push
fcoms
sarb
sbb
arpl
add
das
stos
cmp
dec
repz
mov
mov
pushl
loope
jno
push
push
mov
cmp
and
xchg
sub
subl
je
push
xor
xchg
adc
jecxz
push
fsubs
pushf
pop
mov
jmp
shlb
sbb
ror
enter
dec
cmp
loopne
aaa
in
or
dec
in
and
or
mov
mov
dec
push
add
call
icebp
cmp
dec
js
fnsave
icebp
leave
popa
test
cmp
cmp
das
cmp
pop
jns
xlat
loopne
push
leave
ja
data16
les
push
test
notb
dec
cld
testl
cmpsl
sub
or
mov
jle
imul
into
mov
and
subl
out
mov
les
and
loopne
inc
cmc
and
pop
lds
in
inc
fs
lods
mov
xor
stc
clc
jl
cmpsl
fs
popa
cmp
fsubl
rorb
fidivl
scas
dec
adc
icebp
pop
loop
addr16
xchg
lock
in
cltd
push
adc
testl
xchg
add
lcall
ljmp
sub
fiadds
cli
push
mov
data16
lea
outsb
pop
stos
mov
and
cmp
call
or
mov
movsb
out
je
inc
inc
sub
inc
pop
mull
and
push
sahf
jo
xor
test
dec
cltd
mov
pop
adc
scas
xchg
pop
fildll
mov
out
out
sbb
mov
scas
sbb
jecxz
jp
xorb
orl
add
mov
pop
dec
fmul
divb
fld
mov
ds
rcrb
push
es
mov
mov
mov
in
cmc
sahf
jl
push
dec
or
fwait
into
sbb
adc
mov
js
enter
push
mov
xchg
pop
out
or
movsb
and
add
out
scas
adc
lds
pop
push
leave
push
lret
les
and
mov
mov
jp
mov
cmp
fisubrs
shlb
enter
popa
xchg
stc
mov
xor
xchg
xchg
add
mov
cmp
dec
mov
movsb
mov
pushf
imull
sarb
cmp
movsl
loopne
lret
pop
dec
xor
mov
imul
je
dec
daa
lcall
dec
pop
lds
shlb
sub
lods
mov
dec
and
inc
dec
mov
jb
lock
dec
sbb
push
sub
mov
insl
icebp
das
aad
shl
pop
dec
imul
push
aam
xor
push
jmp
or
das
out
push
mov
fs
into
lds
sbb
pop
inc
lret
sub
shrl
cmp
enter
cmc
mov
test
dec
negb
fwait
dec
xor
sub
andb
test
jmp
aas
sbb
das
mov
sbb
lock
setl
std
sbb
mov
stc
mov
imul
sub
pop
shll
fidivrs
in
inc
xchg
hlt
out
adc
adc
pop
push
mov
scas
int
push
in
mov
inc
in
dec
pop
mov
cmovs
filds
fidivl
int3
popf
adc
mov
mov
sub
mov
outsb
mov
dec
lods
pushw
add
push
cmp
ljmp
cwtl
cmc
fcom
sbb
popf
xchg
pop
je
add
sub
adc
stc
in
xor
aam
inc
xor
arpl
cld
shl
pop
rcl
dec
icebp
ja
mov
sbb
lret
jp
subl
or
fs
aam
nop
inc
mov
jo
xchg
and
clc
fiadds
sbb
clc
scas
sbb
inc
pop
sub
enter
inc
gs
iret
ja
jne
or
mov
cmp
add
push
iret
movsb
xor
out
fwait
int3
push
addl
out
or
pop
lods
mov
shrl
icebp
xor
cmp
pop
sub
xor
int3
and
mov
mov
xchg
arpl
xchg
cwtl
pusha
jne
js
jns
pop
pop
aaa
mov
divl
xchg
negl
popf
dec
rorb
orb
bnd
mov
fistl
je,pt
int3
les
sbb
shlb
adc
cli
aam
xchg
dec
jns
cli
daa
test
aaa
cmp
adc
and
jg
adc
dec
and
dec
mov
es
dec
jg
push
cmpsl
es
lcall
insb
pop
xor
xchg
jl
leave
add
out
rorl
or
rorb
dec
andl
lock
jne
or
fsubrs
mov
scas
loop
movsb
xlat
int
dec
push
aam
cmpsb
lahf
push
cmp
sahf
cmp
loope
xchg
jb
sahf
loope
outsl
sar
pop
jl
jl
aam
pop
cmpl
andl
lock
sub
cs
pop
dec
mov
test
aam
lods
jmp
jp
sub
leave
test
cmp
loop
sub
call
sbb
sarl
sub
ljmp
mov
into
rorl
sahf
aam
mov
cmp
mov
xor
imul
jo
fcmovnbe
cmp
data16
xchg
loop
insl
and
jnp
xor
popf
push
lods
push
movsb
cwtl
fidivrl
rcll
cld
push
imul
jne
pop
and
int3
out
lock
ss
fstpt
jbe
cmp
or
sbb
out
decl
shll
outsb
mov
push
js
dec
inc
jge
outsb
jns
repz
push
inc
xlat
repnz
cmp
adc
mov
or
psllw
stos
xchg
lock
and
mov
mov
fists
and
cmpsb
sub
mov
leave
mov
decb
out
mov
add
pop
or
inc
int
hlt
cld
lcall
mov
mov
jb
lret
sti
sub
sbb
sbb
pusha
sub
roll
xchg
add
lods
cmp
cmpsb
mov
cld
inc
pop
fsubl
dec
inc
out
mov
ljmp
std
sub
fisubs
cmp
inc
fsts
sbb
sub
push
sub
sub
in
and
push
int
scas
test
addr16
mov
dec
js
cmp
dec
stc
cwtl
cmpsb
sarl
push
jmp
mov
daa
outsb
xchg
sub
xlat
cmp
pop
sbb
in
fildl
jae
outsl
mov
mov
test
cmp
push
fildll
xchg
bound
pop
inc
mov
mov
sub
sbb
aam
aaa
lock
inc
aam
cmpb
xor
aam
ret
add
test
sub
sbb
mov
lock
outsb
xor
or
lock
fs
adc
nop
rorb
adc
loopne
pusha
cwtl
mov
outsb
xchg
aas
cmp
xchg
sbb
sti
xchg
pop
inc
or
sbb
fbld
push
and
sub
scas
outsb
aam
in
out
cmp
ror
hlt
jecxz
push
negb
adc
cli
test
push
pushf
mov
xchg
adcl
ret
push
push
ljmp
popf
call
adc
xor
xlat
pushf
pop
adc
andl
xorb
test
mov
fs
add
not
or
xor
jbe
and
test
xchg
xor
daa
xlat
xor
subb
shlb
mov
push
cli
mull
in
dec
xlat
jo
jbe
cld
repz
fadd
xlat
subl
pushf
ljmp
subl
movsb
fcomp
dec
push
iret
mov
cmpl
jg
imul
push
adc
mov
pop
sbb
fildll
aam
xchg
cmp
mov
lock
ret
iret
jge
aad
pushf
pop
aam
mov
fs
loop
loope
data16
in
mov
sbb
dec
repnz
sub
loop
out
sub
enter
jecxz
subb
pop
dec
mov
cld
in
outsb
fmuls
inc
ljmp
and
sti
orb
ja
in
cmp
push
pop
pop
mov
sahf
mov
outsl
clc
aam
cld
xlat
pop
stc
pop
das
or
and
jl
mov
fsub
fwait
shl
jb
rorl
rclb
decb
repz
lods
sbb
add
movb
fsubs
pop
nop
rep
push
xchg
sbb
cmp
punpckhdq
leave
dec
fcoms
mov
bound
or
mov
rcll
cmp
jmp
sbb
aas
jae
fs
dec
les
and
out
int
gs
jl
fistps
aam
cmc
pop
stc
popf
mov
scas
stc
fldt
cmp
outsl
sub
loope
movsl
loope
xchg
cmp
inc
cmp
xor
and
xchg
dec
lods
push
aad
adc
push
js
cltd
fnstsw
repz
mov
add
mov
stc
mov
leave
and
inc
adc
push
loop
adc
cld
mov
flds
xchg
adcl
out
aam
movl
mov
xchg
nop
mov
lods
jb
jl
xlat
ljmp
stos
push
or
mov
and
rcll
cltd
out
mov
add
rorl
fdivs
enter
jne
mov
icebp
lock
mov
dec
adc
ljmp
add
xor
sbb
cmp
push
push
pop
pop
sarb
aam
mov
sub
fistps
dec
shl
aad
sti
scas
dec
iret
mov
repz
jo
loop
xor
lcall
scas
jo
mov
xorl
jg
mov
mov
loope
imul
pop
inc
jge
pop
pop
stc
push
stc
push
stc
inc
js
addr16
cmp
sahf
jecxz
sbb
xchg
xor
sub
movsl
movsb
cli
js
addl
stc
int3
push
lcall
mov
mov
pop
lds
popf
icebp
xchg
cmp
sub
int
inc
cltd
mov
subb
mov
xlat
stos
loop
and
add
xchg
ljmp
aam
cmpb
cmp
jp
xchg
lcall
jbe
cmp
leave
repz
jae
cmpsb
repnz
dec
std
ds
movsb
pusha
insb
arpl
adc
mov
pop
mov
mov
ret
xchg
js
dec
xor
loope
dec
ds
or
pop
inc
ret
add
cmpl
ret
mull
lds
inc
or
mov
cli
push
fs
mov
add
ds
cmc
cmp
inc
fcomps
subb
mov
stos
subb
dec
cmpsl
jmp
pusha
jns
mov
popf
cmp
mov
pop
ss
push
movsb
fldenv
add
out
mov
enter
pushf
mov
mov
dec
iret
adc
das
cmpsl
cmpsb
mov
lods
icebp
ljmp
and
js
movsb
or
mov
adc
aam
lea
push
adc
stos
jp
stos
add
popa
scas
sub
jecxz
in
fstpl
jb
lea
cltd
dec
xchg
test
inc
cld
push
pop
in
mov
xchg
iret
pop
sub
into
lret
push
leave
jno
mov
arpl
gs
or
jno
mov
jnp
add
or
pop
loopne
xlat
mov
mov
sub
aas
dec
in
arpl
xchg
pop
pushf
jmp
sub
and
iret
xor
std
cmp
aad
out
xor
jg
scas
lea
iret
mov
mov
sbb
cs
adc
pop
pop
dec
xor
lds
mov
mov
xchg
sbb
out
sbb
jo
out
loop
mov
dec
xchg
outsb
push
mov
jae
les
or
cmpsb
mov
dec
inc
stos
icebp
std
cs
aaa
stos
cltd
pop
push
dec
mov
add
push
lret
add
aam
out
cmovo
or
adc
xchg
leave
repz
iret
jge
mov
sti
cwtl
cmp
mov
push
mov
mov
mov
pushf
mov
mov
sbb
scas
lcall
and
mov
aam
xor
mov
mov
push
mov
popf
sub
mov
mov
xchg
mov
or
icebp
pop
mov
aaa
out
pop
push
loope
cwtl
or
sbb
subb
cmp
mov
sbb
neg
mov
jg
adc
fdivs
xor
xor
cmp
sub
pushf
dec
ss
adc
cmp
cmpsl
pop
rolb
push
divb
std
mov
mov
sbb
int3
and
add
into
xchg
add
movl
adc
insb
das
test
rcrl
cmp
push
mov
push
fmuls
movsb
lods
inc
fcmovbe
xchg
cmc
pop
or
out
roll
imul
mov
jmp
sahf
pop
arpl
lods
pop
or
jnp
lcall
cwtl
aam
sahf
std
mov
jne
cli
enter
or
pusha
repnz
sbb
cld
sbb
jecxz
movsb
or
adc
out
xlat
mov
popf
sbb
dec
jge
ja
cmp
call
xlat
mov
add
fdivrl
xchg
testl
mov
add
push
mov
dec
xor
mov
es
rclb
inc
rolb
sub
xchg
jnp
push
popf
jecxz
ss
ja
jecxz
push
sbb
inc
fstps
push
divl
inc
sub
sbb
fld
mov
cvtps2pd
jae
repnz
mov
cmpsb
push
daa
mov
sbb
mov
pop
inc
movsb
out
xchg
or
jns
xor
cmp
jb
scas
out
cmp
aam
fs
pop
push
aas
and
pop
int
mov
je
pop
shlb
cmp
icebp
sub
dec
cmp
mov
aam
rcr
sbb
test
jmp
aaa
push
xorl
aam
mov
push
cmc
lret
stos
mov
cmp
mov
xchg
loop
mov
hlt
clc
or
adcl
insl
and
mov
out
sub
push
std
pop
outsb
dec
jmp
pop
imul
pushf
add
test
mov
shll
into
test
jbe
loop
mov
push
hlt
mov
out
clc
dec
jb
testb
inc
jb
and
push
scas
push
clc
lahf
cmpb
push
addr16
xor
imul
out
mov
lahf
mov
ljmp
fimull
mov
out
xor
mov
xor
push
dec
jno
test
movsb
or
sahf
and
movsl
popa
or
add
int3
lret
pop
add
loope
pop
lret
shll
pushf
xchg
leave
and
mov
sbb
dec
shll
imul
sub
fnstsw
mov
adc
or
dec
cld
aam
pop
aam
xchg
or
lods
fcompl
movsb
push
inc
add
insb
xor
xchg
dec
insl
inc
arpl
dec
insl
pop
and
popf
jecxz
mov
mov
les
rcrb
inc
mov
mov
pop
repnz
inc
lods
test
gs
xor
mov
xchg
sbb
push
insb
addr16
and
xchg
hlt
fbld
mov
cli
hlt
push
leave
sub
mov
popf
sbb
add
fdivl
test
inc
cmc
test
inc
lret
push
xchg
xchg
adc
in
mov
and
test
jp
mov
xor
jb
in
pop
cs
in
insb
mov
js
and
into
fdivrs
mov
dec
push
cs
mov
mov
dec
add
out
gs
lahf
pop
movsb
insb
adc
pop
sub
rol
aaa
fstp
ftst
adc
arpl
jb
sub
stos
pop
lock
movsb
mov
sbb
hlt
lock
rorb
sub
aam
insl
aad
xchg
pop
pusha
push
cmp
sbb
mov
push
int3
jg
fdivrs
jns
fcompl
mov
bound
std
imul
cmp
cmp
repnz
cmp
xor
sbb
xor
stos
fcomps
pop
loope
xor
pop
mov
aas
ja
pop
sti
and
nop
mov
ret
out
cmp
aaa
imul
in
cmp
push
pop
addr16
nop
dec
mov
sbb
mov
nop
xor
xchg
xchg
aam
jae
push
xchg
mov
jge
pop
sub
add
adc
xor
in
data16
push
ret
sub
inc
mov
movsb
jae
dec
pop
or
ds
out
repz
adc
bound
pop
popa
test
les
mov
fldz
mov
mov
and
mov
test
push
hlt
aam
cmp
push
std
inc
cmp
popa
or
negb
jbe
repz
les
push
aam
cli
ds
and
icebp
icebp
popf
test
mov
dec
pop
setge
adc
into
jl
cmpsl
call
ret
aam
and
adc
jb
adc
dec
out
dec
idivl
aas
inc
out
outsl
xchg
stos
dec
mov
and
aam
fstpl
fucom
mov
ret
pop
mov
mov
shll
jmp
inc
imul
xorb
xchg
jbe
mov
out
sub
lods
push
pop
push
mov
insl
mov
scas
aam
les
aaa
mov
or
add
mov
scas
mov
fnsave
enter
test
in
test
xchg
jg
pop
out
cmp
and
inc
mov
out
inc
push
clc
addr16
or
push
movsl
dec
cwtl
popa
lods
mov
test
jecxz
push
stos
push
sub
arpl
int3
mov
xchg
into
sub
movsb
imul
fcos
pop
cli
push
cmp
notl
addr16
push
push
pop
lock
sbb
lods
add
leave
in
cmp
adc
jecxz
pop
movsb
mov
dec
aas
push
and
pop
and
int
sbb
arpl
inc
sub
sarb
mov
xlat
cwtl
mov
mov
mov
mov
push
imul
mov
jp
push
mov
push
mov
sub
mov
cli
xor
jmp
mov
decb
arpl
sti
push
inc
les
pushf
rcll
cmpsl
aam
xchg
lds
out
dec
sahf
cmpsl
out
test
in
add
mov
aam
inc
cmp
push
cmpsb
push
test
add
inc
movsb
dec
arpl
cmp
mov
enter
mov
mov
xchg
adcl
mov
addr16
and
add
in
pop
inc
add
mov
aad
push
mov
mov
mov
inc
jecxz
mov
add
into
pop
cli
sbb
cmp
ss
sbb
mov
ja
loop
push
fwait
push
aas
nopl
cmp
int
not
addl
or
cwtl
jmp
xchg
stos
mov
lds
movl
or
repz
jp
sub
sub
test
lods
dec
or
cmp
jne
cld
test
push
xchg
loop
cmc
xchg
ret
sbb
test
mov
ja
dec
sarb
inc
pop
and
inc
inc
out
mov
jae
cmp
and
mov
addl
sub
mov
andl
xlat
xor
mov
sahf
stos
pop
loopne
cmpsb
cmp
cld
mov
mov
stc
scas
push
insl
leave
and
std
xlat
movsb
dec
scas
roll
arpl
mov
in
and
scas
data16
fisttpl
mov
pop
inc
pusha
fsubl
scas
je
adc
cmpsb
pop
mov
lods
orb
pop
push
pop
in
mul
jbe
mov
sbb
push
js
sti
daa
inc
btr
lahf
cld
push
inc
sbb
mov
cmp
in
int
add
out
into
ja
fwait
cmpsl
or
jg
inc
cmp
dec
xor
mov
loop
dec
ret
sub
xor
aas
mov
xchg
out
push
xorb
sub
iret
scas
hlt
add
add
sub
mov
push
jne
xchg
xor
mov
enter
and
dec
push
out
fstp
jb
loopne
push
loopne
mov
es
insl
aaa
inc
lods
stc
xchg
subb
lods
hlt
test
push
mov
movsb
push
jg
jne
sub
inc
jmp
pop
loopne
int3
fmuls
jecxz
mov
imul
stos
mov
mov
mov
lds
addr16
dec
mov
les
mov
stos
lcall
hlt
movl
cmp
mov
inc
or
shll
and
stos
in
movsl
adc
adc
push
xor
inc
ja
adc
sbbb
xchg
enter
fs
ljmp
adcb
adc
pop
aam
aas
push
push
mov
arpl
cmp
cmc
jmp
aam
addr16
scas
push
movsb
sub
insb
std
popa
fistpl
dec
rep
je
push
pop
pop
je
cmpsl
leave
daa
lahf
jns
stc
inc
subb
xor
fiadds
push
leave
xor
xchg
xchg
mov
pop
jbe
inc
push
arpl
test
cmp
jecxz
andb
rcl
adc
movsb
in
or
fcomps
mov
or
mov
mov
stos
scas
cmp
and
inc
cmp
add
pop
add
in
xchg
pop
mov
mov
adc
mov
ja
push
pop
xorb
shrl
movsl
sbb
inc
jbe
adc
dec
je
orl
xchg
pop
jnp
orl
pop
test
or
arpl
fdiv
test
mov
pop
call
pop
and
jecxz
fwait
stos
dec
aam
and
sub
ja
cli
mov
into
xchg
xor
xor
pop
out
dec
push
push
fiaddl
cmp
add
into
sar
cmp
pop
cmp
into
inc
roll
ds
sti
bound
loopne
movsb
not
dec
and
es
shll
imul
or
addr16
out
inc
mov
xchg
push
dec
push
push
push
xor
mov
movsb
sbb
lret
gs
and
jge
sbb
stc
enter
test
cmc
sbb
jbe
dec
sub
ja
sbb
cmp
sub
scas
fs
dec
nop
movsb
cwtl
lahf
mov
pop
std
or
popa
repnz
pushf
pop
sub
push
fwait
add
cmp
ret
mov
stc
cmp
cmp
sbb
jp
and
mov
cli
xor
dec
ljmp
pushf
mov
lret
leave
iret
lcall
push
or
dec
or
lret
sbb
sti
and
lds
sbb
pop
flds
call
outsl
inc
cmpl
int3
sarb
or
jp
fadds
scas
sub
loopne
mov
je
dec
cmp
sub
loopne
das
stc
adc
pop
cmpsl
cmp
bound
mov
scas
jecxz
jmp
leave
leave
out
mov
stos
add
aam
stc
ret
cmp
sbb
and
loop
push
sbb
arpl
call
or
call
scas
out
adc
fwait
dec
dec
xchg
pusha
lods
test
movsb
sbb
pop
out
jmp
fildl
adc
mov
pop
pushw
adc
and
xorl
dec
mov
shlb
pop
push
mov
ficomps
pop
adc
hlt
sub
aam
popf
mov
jb
mov
pop
inc
stc
mov
cmp
movsl
clc
sarb
xchg
mov
inc
addr16
lret
sbb
adc
lahf
jl
jae
in
pop
xor
jge
jecxz
inc
cwtl
mov
arpl
in
cmp
and
fstps
ljmp
cmova
inc
xchg
pushf
or
pop
or
out
xor
or
aam
test
push
lods
sub
aam
jns
jge
add
in
cs
and
xchg
andl
xor
adc
xor
lret
or
pop
popf
gs
add
adc
mov
push
mov
inc
sbb
mov
lea
add
mulb
lods
das
test
mov
dec
jo
jnp
push
push
xchg
mov
rorl
jo
mov
inc
and
and
lea
sbb
pop
mov
xor
enter
xor
leave
es
push
jmp
cmp
daa
repz
int3
incb
push
daa
jle
push
cmpl
cmp
in
rclb
xchg
aas
or
mov
fcoms
lahf
iret
into
push
mov
xlat
and
xadd
mov
xchg
bound
add
ret
mov
jg
loop
adc
pop
std
les
fmuls
jmp
lret
insb
mov
fstpl
jl
pop
imul
pop
push
test
add
or
fnsave
push
cmp
cmp
inc
scas
sti
dec
mul
sub
dec
xor
or
stos
das
out
movsb
ljmp
sbb
mov
add
out
negl
xor
retw
std
push
negl
fisubrs
jle
cmpsl
out
inc
ljmp
decb
push
and
frstor
imul
pop
mov
pop
pusha
xor
inc
not
pop
int
negl
in
jo
dec
rol
dec
inc
xlat
fnsave
fidivs
sbb
adc
pop
xchg
xor
rcrb
sbb
pop
lret
push
mov
leave
mov
or
mov
or
out
clc
and
inc
fistpl
xor
fcoml
addl
sub
sub
out
mov
xor
clc
sbb
js
pop
jb
adcl
jmp
inc
in
inc
mov
push
scas
in
sub
push
mov
mov
movsb
xorb
mov
data16
sbb
imul
mov
lea
push
pop
add
dec
jp
leave
dec
mov
mov
rolb
in
bound
mov
pop
test
cmpsl
add
addl
mov
sbb
push
jo
mov
fsubr
cwtl
enter
cmc
fdivr
pop
daa
sub
push
mov
cmp
add
jno
cmp
push
jnp
popf
sbb
inc
inc
jge
dec
xchg
ret
push
test
test
out
repz
adcl
cmp
pop
push
sbb
stos
add
jecxz
jne
mov
pusha
pop
out
mov
fdivs
repnz
cmp
iret
jmp
fcompl
jmp
or
and
xor
outsl
push
cmpsb
mov
xchg
mov
icebp
neg
adc
mov
sbb
insl
sar
repz
rcrb
sbb
and
hlt
enter
add
xor
mov
aaa
outsb
mov
adc
dec
stc
and
fstpt
enter
add
decb
daa
fdivrs
pop
decl
fstpl
cmpsl
cmp
test
mov
inc
mov
aam
cmc
xlat
jge
add
loopne
push
sbb
test
cli
andb
sub
or
aam
cmpsl
jmp
shrl
adcb
andl
add
xor
jmp
fsubrs
jo
out
rol
jg
in
inc
or
enter
jle
repz
mov
notl
mov
es
inc
adc
test
mov
mov
hlt
insb
dec
cmp
mov
mov
lret
or
adc
enter
xchg
dec
btcl
sub
pop
mov
int3
mov
dec
sbb
lock
sub
fsubs
sti
cmp
mov
stos
sub
cli
xchg
cmc
pop
push
dec
dec
aad
imul
rcl
daa
pop
mull
in
xchg
jnp
idiv
sub
mov
int3
sahf
call
dec
repz
push
in
pop
inc
mov
js
mov
arpl
mov
mov
mov
adc
out
mov
and
jecxz
dec
test
pop
cmp
inc
hlt
mov
add
insl
xchg
lods
pop
and
popf
fstps
mov
dec
cmp
pop
xor
mov
das
popa
dec
add
aad
fnstcw
cmpb
out
les
push
pop
ret
movsb
xchg
and
fldenv
sbb
je
test
outsl
ret
jecxz
cmp
mov
aaa
int3
add
dec
jge
cld
das
jl
out
movsb
in
test
stc
into
inc
mov
adc
rol
pushf
mov
insb
or
sub
cmp
int
mov
or
scas
je
movsb
inc
testl
mov
stc
mov
add
xchg
cmp
mov
loop
scas
push
jmp
lret
xor
mov
jne
xchg
out
mov
lcall
fstl
push
loopne
test
pop
and
or
and
mov
cs
sti
fwait
movsb
and
add
mov
push
pusha
icebp
in
test
insl
cmp
out
inc
xchg
sub
sub
mov
push
fnstcw
mov
add
lea
dec
pop
test
orl
mov
mov
cld
out
gs
push
sub
mov
cmpsl
push
subl
cmp
jbe
cltd
add
ss
mov
lea
xor
push
ret
addr16
loope
inc
popf
mov
dec
push
add
mov
push
or
mov
ret
sbb
push
or
test
addr16
xchg
mov
adcb
jnp
loopne
and
lds
mov
add
lock
inc
rcrl
push
stos
loop
ds
mov
xor
faddl
repz
in
hlt
fistpll
jnp
addb
outsb
ficompl
jno
xor
mov
leave
jns
add
fldl
mov
hlt
lcall
add
stos
xor
shlb
repnz
jo
xchg
les
shll
nop
cmp
ret
out
in
pop
outsl
iret
xchg
or
lret
fnsave
mov
fcomp
mov
cmpb
adc
push
mov
push
stc
adc
and
lods
scas
cmp
add
repnz
sbb
into
xchg
push
fistpll
shrl
aam
cmpsb
cmp
mov
lea
mov
iret
xlat
out
cmpsl
repnz
fs
aad
stc
mov
mov
gs
add
es
adc
loopne
xchg
cmp
dec
push
lcall
mov
and
arpl
repz
or
loope
popa
subl
pop
into
jge
pop
cld
xchg
mov
pop
lcall
rcrl
mov
in
aaa
pop
adcl
int
popa
daa
add
lcall
insl
repz
sbb
xorb
iret
dec
les
lcall
pop
sahf
test
loopne
test
inc
lds
stc
aam
push
push
mov
dec
scas
mov
idivb
inc
cmpl
movsl
in
aaa
cwtl
imul
stos
xchg
xchg
inc
and
jbe
add
push
lds
sbb
mov
inc
les
inc
in
daa
sbb
bound
popfw
push
jmp
mov
xchg
add
mov
mov
dec
ja
inc
js
mov
dec
inc
pop
loope
sbb
mov
jbe
sbb
aam
pusha
adcb
sbb
adc
jl
cmp
inc
add
dec
pop
iret
enter
shll
testl
cld
sbb
jae
icebp
fadds
mov
lahf
jb
mov
and
sub
dec
add
pop
repnz
jp
push
lret
out
cmp
in
jp
mov
ds
dec
sarb
sbb
or
jp
cmpsl
rcrl
test
outsb
jmp
repz
ret
and
jecxz
loopne
cmp
lods
add
xchg
and
push
cmp
lret
cmp
out
ja
mov
mov
movl
out
dec
data16
dec
sbb
mov
inc
xchg
mov
dec
xor
fists
sub
popa
jmp
mov
pop
cmpsb
jnp
cmpsb
clc
stos
push
mov
xchg
test
xor
or
in
xlat
insl
sub
xchg
and
jae
loop
cmc
aam
inc
jo
and
dec
test
sub
rcl
mov
js
mov
cmp
sub
mov
scas
mov
movsb
in
mov
jae
out
lods
xor
es
add
sub
scas
int3
pusha
mov
and
jg
mov
adc
popf
lret
test
push
jl
mov
inc
outsl
bsf
call
addr16
mov
cs
loopne
mov
std
mov
ja
mov
lods
mov
mov
lods
mov
push
sahf
out
xchg
loopne
jmp
popf
or
aas
inc
popa
xorl
and
stos
fs
jo
sbb
movsb
pop
sti
fstl
jg
cmp
cmp
jle
mov
imul
hlt
lock
inc
lods
mov
push
lods
bound
test
movsb
inc
push
inc
pop
stos
mov
sbb
popa
aas
addr16
aad
enter
stos
jmp
inc
aam
and
fimuls
cmp
push
pop
and
dec
mov
in
xor
mov
inc
mov
mov
xor
enter
adc
or
outsl
mov
cmpsl
pop
test
sbb
fs
gs
jp
icebp
mov
inc
sbb
jge
mov
cmp
cmpl
inc
and
or
xor
sbb
adc
xor
int3
mov
or
mov
loopne
mov
pop
fmuls
sub
psrlq
jmp
in
fdivrp
loop
mov
inc
out
divb
push
loope
mov
sbb
rclb
test
lcall
inc
lret
roll
test
cmp
and
adc
mov
push
jp
xchg
adc
lods
mov
imul
xlat
pop
insb
inc
dec
inc
mov
xor
scas
aam
aas
jp
nop
in
add
cmp
int
andl
rorb
cmp
add
sbb
xor
lock
inc
loope
mov
pop
aam
push
mov
movsb
daa
fcmovb
pop
cmpsl
lahf
xchg
stc
xor
cmpsb
xchg
mov
repnz
adc
and
pcmpeqb
popa
nop
add
pop
das
in
flds
jge
lock
jg
mov
movsb
inc
iret
xor
xorl
or
pushf
cmp
pop
inc
mov
add
negb
iret
test
sbb
out
xor
divl
or
outsb
adc
in
pop
data16
cmpl
sub
mov
iret
mov
or
aam
pop
inc
lcall
inc
cmp
mov
mov
or
stc
movsb
sub
out
fldcw
or
in
xor
cmp
sti
sub
pop
push
mov
or
stos
loopne
mov
std
pop
jl
pmovmskb
arpl
fwait
aam
and
inc
fdivrl
aas
cmp
gs
div
mov
push
pop
ds
movd
push
cltd
enter
int3
xcrypt-cbc
cmpsl
xchg
jb
js
pop
xchg
scas
shr
out
dec
fwait
cmp
mov
cld
xorb
cwtl
pop
xor
fldcw
mov
or
mov
xlat
movsb
jae
jno
mov
mov
aaa
add
cmpsl
out
in
pop
cmp
sub
enter
cmp
mov
sti
xlat
xchg
mov
mov
mov
sub
es
aaa
sub
lcall
jp
and
sbb
mov
adc
jmp
fistps
movsb
jmp
incb
scas
add
lea
xor
nop
mov
mov
adc
xchg
jmp
scas
cli
cmp
jmp
fdivs
repz
jge
jecxz
mov
scas
test
mov
cmpsl
fucom
sbb
or
dec
out
sbb
xor
xchg
lahf
test
mov
hlt
jl
test
out
inc
mov
lods
aad
xor
into
sahf
xchg
add
cmpb
cmp
rcrl
sarl
dec
stc
and
xlat
es
test
xor
fiadds
out
mov
movsb
jmp
sub
add
test
push
and
cmp
cmp
xchg
iret
jae
inc
fstps
ss
sbb
js
or
mov
lret
data16
icebp
sub
fidivs
mov
outsb
pop
inc
fbld
cmp
inc
adc
mov
scas
ds
stos
add
or
popa
scas
movb
or
cwtl
fbld
mov
jmp
add
push
in
cld
in
mov
pop
orl
add
lea
arpl
inc
jle
enter
or
fucomip
push
fwait
dec
inc
divb
mov
outsb
inc
out
aaa
lds
jecxz
aam
xorl
mov
shlb
stc
aam
or
fnstcw
jl
pop
popa
test
mov
dec
mov
mov
js
insl
sbb
jl
mov
dec
jnp
ljmp
in
loop
sbb
shrl
sahf
idiv
lock
jge
hlt
jg
movsb
sahf
jge
inc
mov
dec
cli
addl
fidivrs
icebp
adcl
mov
pop
push
xchg
rcr
movsb
mov
out
or
nop
aam
dec
int
jge
stos
add
sub
cmp
jecxz
jne
adc
cmp
add
add
sahf
sub
cmp
aam
or
fwait
or
aam
inc
push
add
sbb
push
mov
add
mov
outsb
lods
cld
enter
jl
fsubrl
lock
aam
or
fsubrl
cmp
xchg
add
mov
mulb
add
push
ret
push
or
dec
mov
adc
add
push
jnp
pop
mov
scas
mov
or
stos
stos
popf
mov
pop
fcom
lret
cli
out
shlb
push
jmp
or
push
and
mov
push
inc
inc
inc
mov
and
push
data16
popf
test
dec
stos
insl
enter
mov
xlat
test
jp
and
and
ds
out
lret
cmp
adc
and
outsb
and
cmp
jo
data16
sub
movsb
and
sub
cld
rorb
out
mov
outsl
inc
adc
xlat
cli
scas
and
test
jno
aam
nop
dec
and
popf
mov
aam
and
xchg
mov
mov
bound
jbe
xor
pop
nop
mov
or
mov
jns
out
sbb
clc
pushf
out
lcall
and
ljmp
mov
cmpsl
jmp
cmpsl
mov
add
push
pop
xchg
mov
cmpsl
or
popf
dec
mov
push
jmp
aad
xchg
fisubrl
and
outsb
test
lcall
dec
mov
push
push
or
cmpsl
ss
pop
sbbb
push
mov
aam
and
int3
imul
xor
push
mov
dec
inc
inc
sbb
andl
je
push
arpl
mov
sub
pop
push
iret
rcrl
mov
or
mov
and
into
hlt
ja
mov
sbb
push
fs
outsl
push
in
or
idivb
fnstenv
mov
mov
jne
sti
adc
loopne
add
mov
fsub
aaa
inc
mov
cmp
in
mov
jmp
xor
mov
ds
add
in
cs
in
mov
push
mov
jne
aam
add
and
xor
lcall
dec
and
mov
mov
mov
push
mov
cltd
pushf
sub
push
sbb
xor
xlat
xchg
mov
inc
xchg
orb
xor
lret
mov
stc
inc
scas
jne
xlat
sbb
stc
jp
mov
mov
fcoml
sub
and
mov
and
ljmp
jb
adc
dec
mov
xor
jp
loope
into
dec
mov
stos
fmuls
sbb
mov
adc
les
out
andb
dec
lods
insl
fndisi(8087
inc
fmuls
mov
jb
dec
mov
lds
cmp
test
dec
cmp
daa
cwtl
sbb
into
lods
movsb
mov
sarb
xchg
mov
adcl
outsl
aad
enter
pop
cmc
xchg
add
lcall
pop
loopne
and
mov
xchg
mov
insl
dec
add
inc
mov
mov
scas
adc
push
add
outsl
aas
sbb
jb
jo
mov
leave
cmpsl
cmp
in
test
jge
call
data16
inc
sbb
mov
and
addr16
jecxz
pop
arpl
call
sbb
xchg
sbb
in
mov
ret
cltd
mov
ja
dec
lea
add
dec
mov
push
shrb
outsb
or
cmp
movsb
outsl
mov
pop
inc
xlat
inc
cmp
mov
fistpl
pop
mov
pusha
fcom
add
test
mov
add
dec
mov
and
sub
pop
xor
sub
in
push
cmp
mov
mov
std
sahf
sbb
jbe
icebp
xlat
pushf
jne
es
add
fs
pop
mov
sbb
push
fcoml
dec
inc
mov
pop
movsb
pop
sub
fmuls
jae
in
lcall
lea
imul
mov
inc
cwtl
lods
jg
pop
sbb
sbb
xor
rcrl
xor
aaa
hlt
pop
fs
enter
push
fimuls
test
mov
lret
pop
and
lret
mov
jno
aam
bound
addr16
shrl
or
fwait
sbb
xchg
test
out
and
fnclex
mov
cld
pop
cmp
insb
push
mov
rorb
inc
ret
inc
movmskps
daa
dec
or
mov
leave
jmp
mov
cmpsb
sbb
push
sbb
sbb
lret
mov
jge
xor
sbb
jp
mov
adc
cmpsb
test
add
test
push
loopne
sub
lock
loop
sbb
push
add
dec
xchg
sub
jecxz
push
xchg
mov
into
leave
notl
outsb
dec
jp,pn
jae
lea
inc
idivb
fsubrs
and
mov
fsubrs
cmc
ja
sbb
insl
test
movsb
fsub
imul
jb
push
into
int
test
stc
aas
ja
lds
pop
icebp
into
icebp
inc
mov
add
jne
ret
and
enter
rorb
scas
aas
mov
sti
and
pop
push
xchg
sbb
aam
hlt
xlat
push
mov
scas
roll
mov
test
stc
push
jp
in
pop
cli
out
mov
sub
in
inc
lahf
lcall
mov
or
fdivrs
dec
fcomps
jge
aad
ja
jge
lahf
sub
inc
divl
mov
cmp
mov
outsl
rcl
popf
jmp
add
mov
movsb
mov
arpl
add
inc
sbb
or
lds
mov
cmpsl
adc
imul
xlat
pop
jmp
pop
push
stos
cmc
push
lahf
mov
arpl
xchg
cs
add
test
dec
pop
lahf
jb
movsb
inc
jbe
cmp
add
adc
mov
jne
lcall
popa
in
sub
hlt
enter
jge
inc
scas
sbb
loopne
lret
subl
arpl
pop
pop
xor
lods
xchg
popf
loope
pop
testl
mov
jnp
add
fnsave
call
lret
lcall
push
enter
mov
stc
lahf
pop
xorb
or
cmp
mov
hlt
arpl
inc
mov
pop
es
xchg
mov
and
bound
pop
jp
sub
nop
daa
xor
jnp
sbb
fisttpll
dec
sbb
xchg
cld
loope
fucomp
cmpsl
and
adc
sbb
sbb
jp
test
pop
sbb
xchg
mov
sahf
pop
hlt
andb
inc
inc
icebp
or
mov
mov
and
and
mov
mov
arpl
loope
cmp
in
mov
and
aam
xchg
jb
cmp
mov
gs
scas
sub
sbb
mov
fnsave
lea
test
push
mov
xor
std
push
rolb
adc
jmp
jb
loope
outsb
mov
fdivs
sub
mov
daa
stc
inc
push
pand
sub
js
js
pop
push
push
ja
addr16
test
in
cli
aad
bound
inc
bnd
mov
es
mov
cs
int
cmp
aam
or
ret
das
arpl
push
sub
xlat
or
jb
out
insb
rcrl
enter
stos
outsb
hlt
dec
ja
dec
xor
push
push
movsb
insl
pop
cmp
inc
adc
data16
push
push
pop
aad
push
movsb
popf
fadd
cmp
mov
inc
mov
add
daa
mov
dec
xor
lods
dec
aam
addl
and
movsb
scas
xchg
push
js
push
mov
jbe
ja
or
and
loopne
addr16
cmp
movsl
cmp
mov
hlt
cmp
push
shlb
divl
mov
mov
fnstenv
dec
test
fmull
dec
iret
add
popa
dec
movsl
sbb
and
xchg
jge
fwait
mov
scas
mov
pusha
mov
addr16
xchg
pop
loop
cmpsl
faddp
test
inc
mov
cmp
push
test
push
adc
xor
xor
aaa
add
sub
mov
adc
pop
pusha
popa
add
mov
xlat
add
addl
xor
incl
sub
dec
jecxz
mov
pop
fsub
test
pop
jl
js
movsb
and
aaa
xor
xchg
xchg
cmc
fwait
add
ficomps
dec
push
xlat
mov
push
pop
aam
and
pop
call
xchg
in
test
dec
cmc
pop
pop
orl
add
dec
sbb
rclb
popf
mov
inc
lahf
scas
and
add
stc
hlt
jle
loope
lret
mov
add
pop
sbb
xlat
mov
cltd
sub
and
popa
cmpsl
pop
je
sbb
test
and
aam
in
mov
mov
jb
sti
rep
scas
or
cmp
outsb
mov
mov
cmp
stc
xchg
sub
mov
jns
outsl
pop
adc
lret
sub
xor
pusha
sub
adc
xchg
sbb
idivb
cli
lock
addr16
fwait
mov
dec
xchg
sbb
sbb
pop
enter
aam
scas
add
jnp
mov
xchg
test
aad
jbe
pop
mov
xchg
call
movsb
pusha
das
mov
pop
push
int
lods
out
inc
loop
jle
sbb
mov
inc
outsl
dec
loopne
xor
es
in
loop
cmpsl
cmp
inc
or
lcall
mov
sbb
aam
add
sub
popf
bound
mov
icebp
leave
nop
mov
inc
leave
mov
aam
roll
adc
repz
fcmovu
mov
cli
out
push
add
jg
pop
push
adc
gs
push
or
mov
sub
in
es
stc
sbb
das
cmpsl
sub
pusha
cmpsb
test
dec
gs
xchg
cmp
imul
or
pop
es
out
out
pop
add
call
repz
test
dec
mov
sbb
jecxz
rorb
scas
ljmp
icebp
fucomp
pop
and
arpl
jecxz
cmp
fwait
sub
and
arpl
into
movb
cmpsl
cld
jno
mov
fcom
cld
insb
xor
negb
xor
dec
xchg
cltd
imul
push
les
imulb
fld1
mov
clc
pop
cmp
into
mov
mov
mov
sarb
jmp
daa
or
cmp
xor
mov
jmp
into
push
mov
call
inc
cmpsl
jno
mov
adc
iret
aam
dec
and
inc
push
popa
inc
shlb
test
out
xor
and
push
mov
stos
sbb
cs
push
cmp
out
hlt
or
mov
movsb
dec
inc
pop
add
ljmp
lret
loop
or
test
xor
jp
or
mov
clc
cmp
lcall
mov
lret
out
rorl
ja
pusha
aam
mov
or
aas
xchg
xorb
es
pop
enter
inc
dec
push
cmpsb
imul
cwtl
scas
xchg
rol
sub
mov
rorl
int3
cmp
inc
frstor
pushf
cmp
sub
adc
pop
mov
btr
lret
dec
and
sbb
xor
ret
xor
clc
mov
or
aaa
mov
xor
or
xor
pop
shlb
cmp
loope
inc
test
pop
cmp
je
dec
enter
popf
fsub
addb
aam
pushf
sbb
mov
stos
mov
push
pop
jno
xchg
enter
aas
popf
push
incl
int3
dec
add
jns
cmp
es
mov
sbb
loope
push
jnp
stc
cmpsl
mov
shrb
jl
divb
jmp
jae
scas
mov
dec
arpl
popa
xorb
arpl
repz
out
add
fsubs
test
mov
movsb
mov
jg
std
je
xchg
in
pop
xor
shll
dec
jo
dec
push
in
push
lret
cmpsl
mov
adc
jb
iret
dec
xor
push
mov
pop
bound
fcmovnb
push
jnp
enter
mov
je
add
cli
or
cmp
add
rorl
test
xchg
fnsave
mov
and
ljmp
aad
test
loope
outsl
pop
aam
or
push
pop
sub
xchg
in
pop
adc
sub
lcall
xchg
mov
hlt
jmp
cs
inc
stos
testl
lea
orl
enter
xor
fildll
popl
fcoms
test
push
aaa
push
orl
add
push
mov
cwtl
inc
cmp
int
push
call
push
jae
cmp
cwtl
movsl
scas
xor
icebp
aam
mov
pushf
ficoms
xchg
sbb
aam
in
adc
xor
addb
shll
mov
dec
mov
xor
and
sbb
pusha
notl
adc
adc
jmp
cmpb
fnsave
pop
popa
movsb
sub
dec
jmp
inc
inc
mov
cmp
dec
mov
icebp
sbb
sbb
xor
jnp
out
sub
shlb
jecxz
cmp
sbb
push
lcall
shll
add
scas
movsb
pop
fiadds
and
adc
arpl
push
rcl
xchg
push
divl
dec
notb
fdecstp
outsb
add
les
cpuid
inc
ret
ret
andb
stos
or
add
outsl
fldt
subb
outsl
mov
pop
xchg
mov
popf
mov
cmp
jg
mov
inc
jge
sub
xor
fs
loope
inc
push
pusha
dec
xchg
jb
xor
jecxz
sub
xlat
push
push
xchg
xor
outsb
lcall
stos
test
dec
jmp
xchg
sbb
aad
inc
and
dec
dec
jmp
iret
scas
inc
push
mov
jmp
sub
sbb
ret
shll
gs
pop
fstps
pop
lea
mov
add
ret
sahf
adc
dec
aam
pop
lods
mov
sub
sub
inc
mov
lea
sbbb
add
stos
dec
add
scas
sub
inc
scas
or
aad
dec
lcall
outsl
and
dec
mov
jl
or
loop
testl
and
clc
popf
push
cwtl
fnstsw
je
enter
jns
xchg
xchg
popf
push
imul
std
cmpsl
dec
inc
inc
mov
cmp
out
adc
in
mov
aam
loope
push
sbb
xchg
push
cmp
in
mov
sub
sub
movsb
mov
inc
rol
cli
outsl
aam
pop
rcll
mov
mov
xchg
mov
sub
mov
adc
push
cltd
aam
loop
sti
xchg
inc
jae
shll
or
aam
push
call
or
ja
cmp
ret
pop
inc
xchg
les
sub
mov
and
fldcw
push
xor
push
and
sahf
dec
fimull
test
js
pop
mov
jb
std
imul
popf
lods
cs
dec
fistpl
stos
scas
mov
dec
xor
cmp
dec
xchg
ret
lret
popf
push
cmc
mov
adc
push
or
movsb
or
in
es
idivl
xchg
or
test
mov
cmp
aam
lock
adc
sub
sbb
into
sub
inc
mov
cmp
fldenv
aaa
fcomip
push
out
cmp
movsb
xor
in
out
push
xchg
sub
lea
or
push
mov
lods
in
pop
sub
insb
push
xchg
mov
add
mov
shll
test
dec
add
outsb
push
add
xchg
lods
scas
stos
sub
cmpsl
movsb
fistpl
ds
mov
stos
mov
stos
add
xchg
mov
lods
std
cmp
pushf
outsl
xor
aam
or
daa
sbb
fsubrl
xlat
mov
hlt
fisttps
into
sbb
mov
sbb
mov
and
lods
int3
mov
xor
fwait
push
and
push
mov
mov
xchg
pop
cmp
xor
and
cld
js
and
mov
dec
cmpl
mov
jo
imulb
js
or
aam
popf
idivb
xlat
test
pop
xor
dec
cmp
movsb
daa
lret
aam
jne
sub
xor
jg
in
test
mov
mov
das
cli
mov
movsb
inc
jo
clc
xchg
je
testl
lret
lret
rorl
and
ljmp
xlat
inc
outsl
lods
adc
ss
sbb
xor
xor
std
adc
and
inc
icebp
sub
pushf
lret
push
out
xor
or
aam
jmp
inc
lret
sub
lods
out
add
xchg
notl
idivl
bound
fcomi
xchg
ret
cmp
enter
mov
outsb
gs
out
sub
sti
cmp
pop
lcall
and
xchg
mov
add
imul
jle
jo
mov
icebp
shr
rcrb
fs
sbb
clc
pop
cmp
sub
pusha
leave
aam
lods
pop
add
jns
xchg
scas
aad
mov
xor
fisubl
sub
mov
movsb
or
mov
lods
dec
and
xchg
adc
stc
icebp
mov
decb
sub
mov
dec
dec
aam
test
xchg
sbb
sti
sbb
sbb
xor
out
dec
dec
fisubrs
decl
sub
fsub
cmpb
mov
pop
icebp
out
jbe
inc
cmp
push
aad
jp
xchg
enter
xchg
add
aaa
jno
mov
rolb
sub
pop
mov
andl
test
mov
in
push
inc
or
mov
or
add
cmp
lea
push
xor
popf
dec
pop
out
push
inc
loop
adc
sbbb
jb
cmc
fidivl
fbstp
mov
call
xlat
test
aas
xor
push
sbb
xor
xchg
inc
cli
in
inc
cwtl
icebp
out
lock
inc
aaa
loopne
movsl
loope
pop
in
je
stc
fbld
ret
lods
mov
mov
arpl
out
adc
and
inc
out
pushf
call
pop
dec
ja
nop
inc
out
cmp
cmc
flds
and
push
add
call
inc
sub
mov
cmp
movsb
or
dec
dec
and
or
or
mov
fcomps
aam
out
ljmp
mov
cmpsb
js
inc
pop
cmp
iret
mull
dec
cmpsb
pop
enter
imul
mov
outsw
sbb
sub
das
push
cmpsl
xchg
dec
and
dec
mov
mov
test
xor
mov
lcall
or
call
fistpl
cmp
dec
stc
add
ret
xlat
or
xchg
out
and
mov
jg
sub
mov
dec
test
sbb
idivl
stos
mov
rol
mov
add
loop
xchg
jge
xor
int3
dec
lret
jmp
inc
adcl
mov
pusha
mov
shlb
aam
lret
mov
into
pop
and
test
push
cs
mov
dec
inc
sbb
pop
imul
test
jns
mov
xchg
stos
out
addr16
or
cmc
loop
cmc
cmp
test
mov
movsb
subl
xor
roll
mov
xchg
inc
fwait
daa
pop
mov
out
inc
inc
fsubrs
and
inc
lods
mov
testl
jb
add
xchg
loopne
push
ja
adc
shrl
add
jp
dec
into
rol
mov
xor
push
jbe
mov
adc
andb
into
push
ja
jae
xchg
pop
test
pop
mov
or
or
xlat
mov
fdivl
dec
loope
mov
dec
lret
in
cmp
pushf
cmp
cmp
sbb
in
jbe
add
sar
xchg
lcall
add
js
lret
in
mov
popa
mov
nop
cmpb
ret
fldt
jmp
sub
mov
fucom
mov
mov
cmpsl
cmp
dec
push
cmp
daa
mov
lea
insb
dec
int
jecxz
pushf
pop
lods
and
lcall
rcll
sub
mov
insl
in
lock
enter
cltd
jae
in
ffree
cmp
iret
and
cmp
gs
cmpsb
xchg
or
add
lods
mov
sub
fdivs
inc
xor
lahf
shlb
xchg
mov
dec
xlat
int
aam
fwait
dec
in
xchg
adc
inc
test
mov
shr
idivl
notb
jae
mov
scas
mov
xchg
or
stos
and
inc
jp
mov
scas
test
sub
out
aam
jl
cmp
imul
movsb
and
pop
lcall
mov
or
out
pop
push
fisubrl
pusha
pop
negb
sub
mov
shrl
gs
xor
xor
ds
sbb
cmc
cltd
popa
or
pushl
adc
add
xchg
jo
pop
xor
decb
cmpsl
lret
jge
pop
stos
addl
dec
sar
imul
mov
pushf
pusha
inc
jbe
lcall
in
adc
mov
aad
gs
add
cmp
in
out
roll
inc
cmc
je
push
sbb
pop
pop
mov
dec
mov
bound
fs
addl
sub
movsl
into
cmp
jo
jmp
ds
or
jmp
scas
mov
pop
js
test
in
pop
cmc
mov
and
pop
jae
pop
ds
pusha
xor
rcl
dec
sti
pop
in
and
add
mov
jb
jle
mov
fisttpll
decl
sbb
push
adc
int
jb
pop
adc
clc
xchg
jno
fdivs
jb
cmp
aam
xor
xchg
andb
xchg
sub
push
outsl
fcom
enter
test
sbb
push
in
and
inc
stos
mov
xor
dec
dec
rorl
inc
or
test
addr16
pop
repnz
movl
or
pop
dec
fcom
ss
mov
out
and
negl
loope
jmp
add
add
xchg
lock
push
loop
enter
mov
jp
jo
xor
pop
or
inc
int3
cmpsb
cld
pop
andl
rclb
mov
pop
xor
fists
sbb
hlt
es
push
adc
sbb
dec
sub
cltd
mov
ljmp
adc
mov
clc
andl
pop
jecxz,pt
pushf
stc
sbb
testb
mov
inc
ljmp
sub
inc
xchg
jbe
loop
inc
pop
sub
into
lahf
popf
lock
pop
ja
jae
subl
pop
enter
in
clc
imul
outsb
cmp
add
test
call
sbb
andl
ljmp
je
stc
mov
mov
cltd
mov
inc
xchg
in
and
dec
pop
add
sub
mov
rcrl
and
bound
test
xor
add
jbe
popa
ret
mov
adcb
loope
pop
or
push
iret
enter
push
test
xchg
pop
aam
mov
xlat
movsb
rcrb
adc
cltd
pop
adc
cmpb
mov
fwait
mov
out
int
mov
stos
add
xchg
cld
cmc
or
test
scas
mov
cld
inc
stc
das
xchg
jae
jge
jmp
mov
cli
flds
and
leave
push
lcall
lahf
rclb
call
jno
add
ror
aas
cmp
rolb
sar
adc
mov
inc
je
push
fmull
in
mov
mov
pop
xor
subl
sbb
hlt
inc
mov
movb
adc
stc
sub
lock
mov
incl
sbb
sbb
mov
in
cmp
sbb
inc
shlb
jae
jl
ljmp
into
sbb
adc
and
push
popf
ret
ljmp
ret
fdivs
movsb
popf
dec
ja
das
mov
mov
sbb
xor
stos
pop
pop
arpl
mov
sbb
stos
mov
std
in
sbb
push
sbb
in
popf
mov
movsb
mov
or
gs
mov
mov
fisubs
cwtl
and
xchg
hlt
sbb
or
and
mov
mov
add
or
cmp
and
sub
lret
dec
mov
jg
add
addr16
adc
enter
pop
repz
daa
pop
xor
subb
test
pushf
mov
pop
cmp
shll
jecxz
xchg
push
dec
pushf
icebp
add
enter
scas
push
aas
mov
repnz
in
lret
lahf
push
std
and
fisubs
leave
push
dec
push
pop
jmp
xor
fs
and
cltd
fmul
rclb
icebp
aaa
jb
mov
xchg
aam
icebp
sub
sti
pushf
repnz
lcall
mov
stos
add
push
mov
inc
sar
test
xchg
mov
fildl
sbb
rcrl
xchg
and
and
fs
enter
loope
or
mov
lret
cmp
mov
xchg
xorl
ds
sarb
ret
pushf
sbb
xlat
popf
push
sbb
sarl
xchg
cmpsl
pop
divb
cmp
aam
scas
out
sti
movsb
aad
add
bound
ret
push
movsl
fs
inc
int3
std
xchg
das
mov
dec
bound
movsl
sbb
movl
mov
cmovs
daa
aam
mov
cmp
pop
jge
iret
adc
dec
cli
imulb
dec
fcmovb
mov
aam
ds
fisttpl
andl
js
rclb
gs
xor
test
inc
sbb
xchg
jmp
pop
dec
cmp
mov
cmp
iret
jnp
jb
sub
sub
lods
mov
insl
sbb
outsl
fstpt
lods
fdivrl
adc
movsb
jmp
inc
int3
pushf
lock
stos
or
sarl
inc
mov
out
not
mov
inc
mov
outsl
scas
stc
inc
dec
add
aam
push
jae
jmp
lcall
sbb
pop
xchg
rol
or
test
push
jp
hlt
jmp
pusha
ficoms
clc
mov
int
rcl
push
mov
and
pop
in
fadds
xor
jl
call
and
xor
mov
pop
or
mov
addb
cmpsb
xchg
mov
push
idivl
dec
in
ror
pushl
jge
setnp
aam
xor
or
sub
xor
cmp
mov
ret
mov
les
testl
jae
and
negb
out
aam
loopne
sub
inc
mov
or
push
mov
dec
add
lahf
or
inc
repz
mov
out
pop
scas
les
inc
out
mov
div
sub
sbb
xor
aam
fs
insb
in
jecxz
sub
ret
pushf
movsb
lret
mov
jno
and
ud2
push
dec
lds
out
mov
loop
pop
test
pushf
mov
enter
cs
shlb
sub
inc
fldl
mov
pop
or
aam
in
fildll
test
aad
dec
cmp
movsl
sbb
mov
inc
fwait
lcall
mov
lds
test
sti
mov
pushf
and
pop
loope
mov
pop
adc
mov
xor
in
mov
cmp
imul
cmc
or
jp
sub
jne
gs
mov
dec
cltd
bound
mov
adc
inc
enter
out
mov
inc
cmp
xor
pop
movsb
or
jne
in
fstpt
jp
xchg
jg
push
ss
dec
jo
out
cld
roll
lret
arpl
fwait
scas
mov
rorb
cmp
xor
mov
push
sub
stc
mov
icebp
cs
pop
xchg
es
pop
adcb
dec
cwtl
les
fcom
and
mov
adc
inc
cli
dec
sbb
jmp
mov
lea
adc
movsb
sbb
and
sbb
inc
repnz
pop
ret
out
and
enter
movsb
addr16
push
pop
cli
sbb
and
xor
xor
divl
pop
in
pop
xchg
xor
xchg
mov
sub
dec
insb
push
or
lahf
test
cmp
mov
andl
aas
aam
jne
testl
mov
adc
bndldx
xchg
dec
sbb
ljmp
les
sbb
fld
sub
test
aad
jmp
dec
mov
mov
cmp
gs
daa
inc
loopne
ljmp
out
loope
xchg
jp
xchg
xor
nop
mov
lods
add
inc
bound
adc
addr16
cmp
mov
mov
inc
and
data16
or
sbb
int
push
fmuls
mov
cmpsl
mov
movsb
pop
xor
mov
sti
sahf
mov
fs
mov
mov
add
out
inc
cwtl
xchg
push
and
stc
iret
jns
sti
arpl
divl
inc
in
outsl
jb
and
push
jecxz
sbb
sti
pop
movsb
je
pop
arpl
xor
or
pop
jl
pop
mov
xchg
insb
in
aas
cmc
dec
xor
xchg
mov
stos
mov
aam
int3
adc
stos
icebp
or
loopne
or
cmp
sub
dec
mov
xor
or
movsb
jne
pop
mov
and
jge
ja
or
jl
xchg
xor
mov
repz
inc
cmp
scas
push
lock
xor
xor
and
out
lds
nop
pop
dec
and
jae
call
jns
aam
xlat
push
in
cmp
pop
sub
outsl
sbb
data16
sub
sti
out
push
shlb
ja
dec
outsb
in
ret
mov
mov
pop
sub
and
insb
shrb
lock
pop
mov
inc
jecxz
mov
aaa
cwtl
in
or
cmp
mov
pushf
jge
dec
lahf
mov
imul
movsl
test
sar
sbb
add
jb
ret
aam
xor
scas
negb
js,pn
mov
rclb
out
popf
daa
pushf
negb
dec
stos
lahf
pop
aas
mov
xlat
cli
les
mov
rcrb
scas
add
xor
and
jne
enter
aam
scas
pop
ja
mov
int
fdivrs
sbb
lret
pop
insl
mov
leave
loop
pop
jmp
xchg
arpl
les
push
faddl
idivl
sbb
xchg
sbb
sub
leave
in
in
fdivl
aam
das
mov
out
inc
pop
div
sahf
jbe
and
xor
outsl
cmc
repnz
mov
inc
xlat
mov
and
outsb
popf
into
xor
jno
mov
sbb
and
mov
sbb
jns
in
jge
pop
xlat
in
popf
pusha
mov
aaa
cmp
pop
ja
cmpsl
xchg
pop
scas
push
pop
mov
movsb
jl
mov
mov
cmp
and
lods
shll
inc
out
cmp
jge
and
jp
and
divb
sub
mov
mov
popf
dec
cs
stos
mov
inc
push
inc
sbb
cmpsl
sub
into
bound
cmpsl
addb
lret
aam
es
sahf
filds
sbb
fiaddl
orps
repz
cmp
mov
aad
or
stos
clc
inc
mov
pop
or
mov
cmp
mov
pop
lcall
cmp
cli
int
lds
sub
mov
ss
out
add
sub
dec
in
cmp
arpl
mov
lret
sarl
bound
push
subl
or
mov
mov
xchg
mov
fbstp
clc
mov
popf
cltd
cmpsl
lods
rcrb
adc
mov
cltd
mov
pop
test
xor
jg
push
sti
shlb
pop
cmp
mov
push
adc
pop
sar
fadd
fbstp
in
lret
fnstcw
cmp
sbb
lcall
fs
loopne
les
cwtl
lds
mov
sbb
ds
aam
stos
jp
into
repnz
out
in
inc
xor
or
test
push
sarl
enter
jge
fmul
outsl
stos
cltd
loopne
mov
jbe
les
imul
xchg
inc
cmpsl
or
cmp
mov
aad
cmp
and
xchg
mov
cs
stc
fcoms
dec
incb
or
cmpsl
dec
lds
cmc
dec
pusha
adc
in
lds
xchg
xchg
cmpsl
ljmp
mov
imul
mov
cmp
dec
adc
push
fucomip
ja
jmp
mov
xchg
cmp
sub
xor
hlt
xor
mov
sub
aam
inc
int
lods
movl
std
lcall
jmp
scas
lods
pushf
test
add
iret
jne
pop
into
adc
fnstsw
test
xor
call
scas
bound
movsb
idivb
mov
jp
es
stos
inc
stc
inc
pop
sbb
inc
dec
inc
add
out
insl
fidivrl
sbb
jb
cmpsl
loope
rol
out
rolb
cmp
lock
mov
incl
out
data16
lods
clc
or
inc
popa
cld
lcall
mov
jmp
cld
jne
in
aam
test
iret
aas
jecxz
loop
dec
cmpsb
mov
dec
js,pt
aam
loop
lods
or
inc
pop
aad
enter
cltd
and
jno
adc
mov
xchg
mov
aas
mov
push
lods
sti
or
xor
push
cmpl
mov
scas
ret
jo
inc
dec
mov
jg
movsb
jmp
pop
pushf
xchg
xor
sub
test
stc
aam
inc
adc
sti
les
and
add
scas
lea
mov
aad
repnz
leave
or
and
add
mov
sub
lret
outsl
mov
das
cmpsb
aam
sbb
mov
jge
sarl
int
std
mov
aam
movb
xchg
adc
and
sbb
xchg
aas
push
mov
mov
sbb
sti
mov
es
or
or
dec
push
into
xor
mov
enter
iret
xor
push
repnz
inc
imul
data16
int3
jecxz
cmpsl
dec
adc
subb
jns
dec
sbb
dec
sbb
push
push
pop
fmuls
or
inc
mov
pushf
mov
cmp
add
xor
jbe
nop
mov
fsubs
sub
xorb
mov
mov
popa
test
sub
lds
lea
decl
mov
adc
mov
xlat
sub
push
stc
mov
lea
stc
scas
mov
push
ja
xor
mov
mov
push
cltd
leave
pop
jo
push
shlb
lock
mov
mov
and
movsl
xchg
pushf
push
inc
ja
ljmp
hlt
mov
loopne
inc
xlat
cmp
ds
xor
cmpsb
inc
mov
xchg
adc
lds
test
les
test
std
and
sbb
inc
and
aam
xlat
sub
inc
adc
push
rorl
dec
and
sub
adc
popa
mov
pop
movsb
mov
mov
pushf
adc
jmp
aam
hlt
stc
lret
pop
fidivs
sbb
add
sbb
sahf
xor
hlt
xor
loope
pop
push
mov
icebp
orb
push
inc
pop
add
push
mov
test
lods
mov
into
mov
call
mov
into
cvtpi2ps
loopne
cld
test
xchg
fwait
mov
leave
inc
adc
mov
mov
insl
cmp
cmp
or
into
lock
or
test
xchg
test
popa
daa
and
or
fsub
push
cmpsl
dec
and
cmp
ljmp
and
sti
cmp
add
sub
rolb
xor
aam
jl
rorb
mov
stos
cmp
sub
pushf
mov
out
pushf
dec
and
loopne
shll
cmpsb
scas
pop
movsb
mov
enter
pop
fidivl
cmc
fistpll
or
lahf
mov
lcall
incb
xlat
ja
add
xor
shr
pop
sub
loope
ss
int
cmp
mov
sbb
xor
push
jno
pushf
push
sbb
test
pusha
shl
mov
xor
orb
jge
mov
stc
mov
mov
dec
jno
sbb
ja
mov
sub
enter
cld
cmpb
repnz
stc
sbb
popf
xlat
outsb
xchg
cmc
cld
jg
jmp
pushf
jecxz
jbe
mov
mov
arpl
aam
or
jno
add
pop
loopne
mov
cli
sbb
sub
add
stc
loopne
sub
xchg
lret
sbb
lock
pop
push
mov
push
addb
mov
xor
pusha
mov
sub
aam
jp
cmc
mov
cmp
jae
mov
xor
pop
arpl
push
sub
adc
jne
gs
mov
add
push
xchg
sbb
in
ds
inc
subl
mov
pop
xor
aad
dec
push
out
cmp
stos
loope
push
mov
and
inc
sub
push
maxps
insb
xchg
pop
xor
pop
ja
aad
push
test
push
pop
test
add
mov
sub
cmp
insl
enter
cltd
xor
not
ret
jp
pop
loop
insb
aaa
mov
cltd
mov
sub
push
or
scas
movsl
int3
mov
sti
pop
movsb
xchg
fmuls
mov
mov
mov
out
mov
add
test
pop
out
sbb
sbb
ds
loop
fwait
repz
mov
loop
insl
fcomi
aam
daa
sbb
mov
jnp
add
fdivrl
jo
arpl
pushf
aad
std
xor
push
jne
js
test
sbb
icebp
fs
mov
lret
dec
and
les
add
mov
xor
xlat
shll
outsb
adc
out
sbb
cmp
popf
xor
pop
cmp
mov
div
xor
sbb
dec
inc
addl
imul
jno
in
sahf
inc
rcrl
imul
fists
mov
fsubrs
scas
enter
mov
mov
mov
fdivr
dec
cmp
rcl
push
lcall
fs
jecxz
lret
push
decb
mov
stos
dec
or
ja
gs
add
mov
iret
mov
mov
or
pop
pop
mov
dec
movntps
push
mov
iret
leave
in
je
cmp
jbe
mov
std
cmpsl
neg
or
inc
dec
pop
cld
das
lahf
push
mov
sbb
test
cmp
movsl
cmp
out
mov
rol
xor
cmp
fsubs
pop
loope
loop,pn
in
add
in
xchg
lret
insl
mov
sbb
ror
popf
aam
fdivs
mov
cwtl
nop
clc
push
ret
out
ljmp
scas
pop
mov
addr16
out
in
sbb
popa
push
loopne
pop
push
int3
adc
push
jns
out
cmp
ss
inc
loop
mov
ds
ficoms
xlat
outsb
push
jp
hlt
jle
mov
fnstsw
xchg
insl
lods
push
popa
push
xor
push
stc
mov
jne
or
jo
pop
inc
ud0
and
dec
stc
and
push
cmc
rorl
movsl
dec
stc
not
inc
pop
xor
sbb
mov
mov
pop
and
mov
add
aas
xchg
fdiv
add
fwait
mov
xor
pop
js
imul
and
jo
popf
mov
lahf
cmp
movsb
cmp
adc
pop
aam
insb
daa
adc
push
jp
stc
aam
sbb
lret
add
xor
push
aam
jnp
hlt
stc
xor
stos
inc
enter
jno
aam
scas
mov
add
loop
mov
jb
jmp
cmp
sbb
or
clc
and
mov
mov
and
inc
movsb
and
cmp
shl
mov
xchg
popa
cmpsl
pop
aaa
mov
push
cmp
mov
scas
mov
and
lahf
mov
test
ss
sub
jge
sbb
mov
push
xor
test
xlat
sbb
shrb
or
cmpl
xchg
inc
pop
enter
sub
cmp
add
mov
push
fsubs
and
popf
movsl
iret
int3
cmpsl
jbe
loopne
and
js,pn
sbb
test
pop
cmp
mov
lret
sub
add
leave
ret
mov
xchg
pushf
stc
cli
mov
fdivl
outsb
test
mov
pop
shrl
fsubp
les
inc
movsb
cmp
gs
jae
inc
daa
mov
setb
push
pushf
mov
inc
aam
std
nop
cmp
sbb
adc
push
mov
or
or
add
adc
movsb
mov
int3
adc
ja
mov
inc
movsl
xchg
xor
aam
mov
stos
popf
cmp
roll
xor
jne
subl
and
adc
lods
mov
leave
lea
xchg
neg
bnd
inc
aam
mov
sub
and
sbb
xchg
add
cltd
mov
jae
bound
sbb
fsub
andb
push
mov
andl
mov
jns
mov
lcall
cmp
mov
icebp
jae
adc
inc
mov
cmp
sub
dec
insb
push
mov
je
mov
scas
sub
inc
sub
cltd
sub
dec
in
xor
es
les
mov
movsb
cmp
push
jle
mov
cmp
mov
test
mov
iret
les
out
push
mov
fidivrl
dec
xor
mov
fildll
fld
add
xor
sbb
cmpsl
push
push
mov
push
xchg
sbb
mov
loopw
ja
push
mov
sahf
mov
cld
pusha
mov
into
stos
sbb
add
sub
cmp
mov
icebp
push
adc
test
pushf
mov
mov
dec
cmp
xchg
xor
mov
movsb
pop
add
cld
sbb
adc
push
scas
cmc
mov
pop
xor
aam
jns
dec
dec
mov
mov
mov
stos
xor
push
cmp
popf
stos
add
push
sbb
mov
hlt
or
stc
mov
xchg
push
xchg
stos
push
or
mov
pop
iret
sub
fcomip
mov
mov
pop
movsb
subl
enter
jg
xor
pop
adc
push
add
pop
cmp
mov
pop
xchg
test
movsb
inc
aas
movb
aam
sub
cmpsl
xor
dec
cmp
loop
push
scas
pop
mov
cmp
pop
std
mov
pop
test
iret
out
push
rorb
mov
ret
pushf
xchg
ss
lcall
cmp
mov
sar
cld
xchg
sti
sbb
andb
mov
cmp
jg
mov
push
xor
cld
loopne
xchg
dec
push
std
shl
adc
pop
mov
out
inc
movb
in
cmp
clc
sqrtps
jecxz
pop
and
and
sbb
sbb
adc
out
sub
scas
out
or
push
cmp
out
lods
sbb
js
sub
stos
add
roll
dec
jmp
pop
mov
mov
cltd
loop
outsl
fucomip
repnz
fcom
cmpsl
xchg
cmp
imul
arpl
das
jbe
mov
add
and
xchg
xor
daa
dec
mov
sub
test
sbb
sub
xchg
jg
mov
das
lea
xchg
cmpsl
inc
in
push
or
inc
hlt
push
sbb
in
xor
paddw
loop
in
ret
mov
sub
lea
xor
lods
iret
addr16
mov
pop
cmp
lods
adc
test
enter
sarb
cltd
sub
xor
mov
test
cmp
sub
jg
in
mov
test
jae
push
xchg
sub
inc
jns
mov
leave
scas
inc
mov
testl
imul
xchg
rorb
sbb
push
sbb
std
jg
ret
gs
mov
and
out
in
pop
pushf
mov
sub
mov
sub
in
mov
daa
dec
dec
adc
cmp
mov
xlat
pop
stos
xorb
mul
add
xor
lret
std
sub
inc
inc
out
dec
fnstcw
lret
sub
scas
int3
stos
fsubrl
jmp
inc
lods
sub
mov
inc
shll
aam
mov
int3
xor
or
add
lahf
pop
enter
cmp
in
sub
rcll
dec
aam
mov
es
adcb
or
jo
cmpsl
mov
lods
cs
add
mov
pop
imul
lea
mov
andb
ds
mov
pop
movsb
jo
xchg
push
push
jge
test
dec
lds
les
pop
or
lret
mov
jecxz
or
into
fisubrl
and
and
mov
lcall
out
popa
xchg
andl
ffree
adcl
cli
cmp
testb
mov
in
fs
xor
addb
sub
rcrl
adc
enter
cs
hlt
ja
fwait
movsb
add
sbb
cmp
lret
or
out
cmp
push
xlat
inc
outsb
jle
enter
hlt
dec
pop
cwtl
fisttps
loop
sti
hlt
fs
icebp
repz
and
stc
add
mov
aam
repnz
pop
adc
jl
add
xlat
push
rorb
mov
mov
addr16
testl
lret
adc
sti
ret
pop
adc
adc
cmpsb
scas
or
ljmp
lock
ljmp
out
and
cmp
sbb
ja
mov
sub
mov
pop
adc
lret
lahf
sbb
lds
in
rolb
sub
mov
addl
fcomps
mov
aam
mov
jecxz
push
or
or
sub
mov
cld
mov
daa
fwait
out
imul
jb
repz
mov
cld
sbb
shlb
mov
push
dec
add
daa
sub
cld
xlat
dec
mov
cmp
out
mov
leave
stos
sub
scas
rol
xorb
xor
jb
aam
and
xlat
mov
mov
jl
int
je
neg
sbb
sbb
sbb
or
int3
inc
sbb
push
jns
mov
cmp
cmp
mov
or
clc
or
movsb
sbb
int3
shufps
fstps
jnp
cwtl
sub
roll
and
sbb
mov
in
imul
out
fsubrs
ss
mov
xor
cmp
add
mov
aam
mov
stos
js
rcr
gs
inc
jb
or
dec
inc
mov
sbb
bound
arpl
push
inc
es
push
faddl
pop
aas
jne
mov
cmp
push
dec
clc
xchg
stos
stos
enter
pop
pushf
mov
cmpsl
mov
sarl
shlb
arpl
sbb
or
pop
test
cmp
mov
fwait
sbb
jae
notl
ds
loope
bound
aam
iret
aam
cmp
lcall
test
pop
push
stos
sarb
xor
fnsetpm(287
aam
push
out
add
push
pusha
ret
xchg
mov
ret
pusha
xor
push
add
or
add
inc
jmp
outsl
lds
hlt
mov
sub
je
je
jl
stos
pop
inc
jl
btc
xor
hlt
std
ret
and
outsb
loope
add
dec
inc
mov
mov
mov
mov
sub
lock
jle
mov
and
add
popa
sbb
cmp
mov
fwait
scas
adc
mov
inc
mov
inc
stc
or
jbe
arpl
xor
add
cmp
adc
push
dec
mov
push
ja
fwait
mov
pop
mov
cmp
mov
movsl
sahf
in
mov
ret
inc
cmp
adc
pop
movsb
xchg
stc
adc
jae
jne
or
pop
add
lods
jmp
rcl
orl
rcrl
push
fisubrl
mov
or
fldenv
cmc
add
push
inc
mov
ljmp
xchg
stc
xchg
xor
mov
loopne
mov
faddl
in
lea
sub
adc
adc
push
cli
pushf
jae
lcall
leave
in
addr16
sti
fstps
mov
push
pushf
ss
loopne
fcomps
not
adc
xlat
push
adc
ss
mov
push
mov
adc
orb
jb
add
mov
add
add
mov
cmp
movsb
out
xor
leave
dec
ljmp
loope
dec
inc
fwait
movsl
aas
jecxz
or
sahf
and
enter
mov
xchg
jp
leave
adc
ret
dec
sbb
mov
scas
push
mov
mov
xchg
out
or
repnz
sbb
mov
and
or
push
push
fcmove
outsl
pop
mov
lods
jecxz
pusha
jmp
mov
iret
or
test
xchg
cwtl
push
jno
xor
out
ss
pop
push
test
sbb
loopne
sub
mov
jnp
fstpl
mov
add
mov
out
imul
mov
jnp
push
pushf
jb
jmp
fmul
jbe
jbe
fbld
int
inc
mov
cmp
lcall
pop
or
add
movsb
into
sbb
inc
das
or
mov
stos
inc
clc
cmp
inc
or
test
and
add
mov
fstpt
insb
popf
jns
aad
ljmp
pop
jns
push
test
cmpsb
lock
or
mov
andb
mov
or
mov
ja
in
out
fcom
dec
push
ja
std
xchg
mov
mov
mov
ja
stos
pop
adc
xor
fdivrs
mov
ljmp
push
test
mov
cmp
stc
lret
outsl
enter
jge
pop
sbb
fldt
pop
mov
call
lret
sub
jmp
jno
cmp
out
mov
fidivrs
inc
aam
push
sub
test
roll
jp
ja
rol
adc
int3
shlb
aad
movsb
sbb
xchg
nop
mov
add
mov
push
insb
jl
lret
repnz
js
cmp
pop
dec
out
into
jnp
add
mov
mov
xchg
push
setp
and
add
in
popf
xchg
push
lock
xor
stos
sbbb
pusha
sub
in
cmpb
cwtl
adc
dec
mov
mov
loopne
pop
lahf
push
add
adc
sbb
cs
mov
adc
test
cmp
insb
adc
mov
dec
cmp
xchg
stos
pushf
mov
and
add
xchg
loope
cmpsl
dec
and
dec
imul
inc
leave
pusha
int3
negl
or
loope
rcrl
or
adc
xchg
xor
and
sub
ret
stos
fisubs
mov
pop
int3
dec
adc
jbe
scas
outsb
negb
js
dec
mov
out
jp
out
sbb
stos
sub
sti
add
sub
fists
xchg
fnstsw
outsl
push
jg
cmp
sbb
fists
add
fiadds
push
push
insb
dec
cli
fidivrs
pop
sub
jecxz
mov
mov
xchg
adc
xchg
pop
outsl
push
push
mov
iret
fadd
sub
cltd
jg
jb
fmuls
xchg
push
inc
in
aam
cmp
ljmp
stos
mov
mov
adc
movsb
lods
add
in
or
dec
add
icebp
sbb
ret
fsubs
scas
adc
test
es
sbb
enter
iret
push
mov
mov
por
push
xchg
outsb
in
ds
add
std
enter
pushf
icebp
loope
bound
fmuls
test
jle
inc
fsubs
sub
jo
cld
sbb
mov
mov
leave
pusha
stos
dec
cmpsl
push
pop
mov
testb
pop
push
insl
adcl
adc
push
mov
test
mov
popl
inc
arpl
dec
popa
enter
into
sub
int
or
jns
xchg
xor
xorl
cmp
aaa
mov
mov
mov
xor
dec
cmpl
sbb
dec
test
rcl
mov
hlt
jg
lea
xor
outsb
lcall
push
mov
lds
popa
out
lret
fstps
sbb
mov
sbb
mov
inc
cmp
testl
jmp
xchg
adc
lahf
dec
xchg
xor
movsb
inc
pop
popf
dec
dec
jae
adc
mov
add
mov
adc
ret
shl
inc
mov
mov
mov
in
dec
jmp
ljmp
pop
into
mov
aam
test
test
xlat
add
sub
andb
bound
stos
pop
pusha
cmpsl
sub
sbb
sub
subb
push
mov
hlt
xchg
cld
insl
mov
sbb
xchg
in
das
and
inc
scas
xorl
sub
loop
mov
fmuls
in
je
fwait
mov
xor
mov
xlat
sbb
push
and
test
data16
dec
inc
fcomps
xchg
xchg
lret
cltd
or
sbb
dec
pusha
sub
or
cmp
mov
int3
pop
mov
xchg
cs
sub
xchg
stc
jle
repz
or
mov
repnz
sbb
sub
out
je
sub
lods
pop
sbb
mov
add
mov
lock
inc
movsb
sbb
repnz
rcrb
icebp
and
fs
dec
test
mov
stos
daa
hlt
aam
lds
jb
sub
movsb
cmp
movsb
rcrb
dec
sub
ret
mov
mov
dec
jae
add
pushf
add
dec
cs
mov
pop
xchg
jl
fucomp
sub
scas
mov
popf
adc
out
mov
enter
scas
lcall
loopne
loope
xor
mov
cmp
mov
push
push
fcoms
inc
stos
les
cltd
decb
jecxz
mov
pop
pop
ja
aam
or
cs
sahf
and
mov
or
movsb
imul
adc
adc
ljmp
addb
pop
fidivrs
xor
pop
mov
scas
dec
dec
leave
les
mov
loopne
mov
mov
fs
imull
rorl
xor
mov
sub
jmp
imul
test
mov
popf
aam
or
xchg
inc
cltd
jbe
sbbl
lock
and
xor
js
imul
cmp
and
add
push
fwait
mov
pop
push
xor
jge
or
jecxz
mov
mov
test
sar
sub
xorl
arpl
repz
pop
xor
mov
ss
xchg
loop
loopne
sahf
jl
hlt
arpl
repz
mov
xor
adc
jp
loopne
movsb
scas
test
fistpll
cmp
lds
aas
fdivr
jl
cmp
cmp
and
test
add
cwtl
aaa
sti
rcl
es
mov
xchg
mov
jb
scas
xlat
stc
sbb
add
xchg
jo
jge
jno
mov
cmp
and
mov
fmuls
lods
stc
adc
dec
add
jns
pop
dec
and
mov
mov
jmp
inc
lcall
xchg
and
cmp
jmp
fcoms
xor
ja
push
jp
cld
pop
xchg
sti
or
dec
xor
orl
sbb
push
sbb
mov
mov
jae
cmp
mov
push
sbb
mov
add
push
add
scas
rorb
shll
scas
out
test
testb
leave
pop
into
pop
mov
idiv
sbb
dec
or
jno
mov
cld
testb
mov
xlat
shlb
pop
mov
add
sub
inc
orb
test
xchg
xor
pusha
sti
enter
or
jge
mov
stc
mov
cwtl
out
pop
fsubrs
add
scas
jns
sbb
add
or
in
inc
out
push
or
sti
insl
bound
nop
test
into
xor
sub
gs
lods
mov
dec
inc
test
divb
add
aas
inc
xchg
jo
add
sbb
imul
mov
daa
hlt
jmp
arpl
adc
mov
dec
dec
call
push
lea
imul
rcll
dec
pop
mov
lea
sbb
bswap
lcall
cltd
mov
jg
inc
inc
add
xbegin
push
jmp
inc
xlat
movsb
dec
xchg
imul
add
cmpsb
lret
mov
mov
fdivs
mov
xchg
mov
in
fistpl
in
pop
inc
fstpl
xor
shlb
stos
pop
out
jp
xchg
push
mov
mov
sbb
decb
mov
pop
insl
daa
sbb
jmp
div
outsl
push
mov
mov
lret
lea
cmp
xchg
mov
inc
lods
mov
adc
les
or
xlat
inc
jb
inc
cmp
sbb
mov
pop
or
faddl
in
and
in
mov
mov
mov
mov
mov
loopne
cmp
in
mov
pop
lock
lock
inc
inc
pop
ror
daa
ror
repnz
mov
xor
mov
jmp
pop
cmp
cmpsl
push
movsb
and
inc
push
cld
aad
stos
jl
mov
xchg
push
sub
xchg
mov
mov
popa
add
add
mov
shrl
sbb
xchg
mov
flds
xchg
repz
sbbl
shrb
or
xchg
sbb
cmc
into
dec
jmp
inc
and
ljmp
mov
sbb
xchg
push
xor
cmp
pusha
pop
adc
mov
adc
call
xor
scas
sub
add
dec
pop
cmpsl
mov
adc
aad
mull
sbb
test
dec
test
push
sbb
jmp
loop
lds
mov
pop
mov
sub
fldl
mov
aaa
mov
fwait
push
fiadds
cs
push
pop
fsub
adc
fcmovbe
incb
gs
mov
adc
cmp
outsb
cmp
shrl
mov
jge
pop
rcr
popa
add
pop
out
fistps
xchg
in
dec
push
pop
sbb
sub
jo
xchg
repnz
dec
jbe
push
inc
pop
into
jp
add
sbb
popa
daa
insl
shlb
dec
sbb
xchg
sub
insl
sub
sbb
addr16
adc
dec
add
mov
jl
push
lahf
enter
mov
adc
call
cmp
push
jg
pop
jmp
jmp
ja
mov
sbb
jp
mov
jne
shlb
sub
call
sarl
stc
inc
out
push
imul
sarb
adc
jmp
sbb
cmpsb
icebp
clc
xor
fistl
lcall
movd
std
nopl
jmp
in
lods
dec
cmp
jle
adcb
in
cli
and
movsb
mov
jno
sub
loop
loope
dec
inc
inc
test
negl
test
or
pop
in
ja
push
xlat
movsb
cmp
jmp
shrl
pop
rorl
fadds
enter
mov
aam
les
pop
mov
mov
xchg
loopne
sub
mov
cmp
push
ret
sub
jecxz
rcl
xor
or
sarb
mov
add
fldlg2
mov
incb
fdiv
cmp
xor
sbb
andl
dec
fiaddl
inc
gs
in
jl
xchg
pop
cmp
cmc
popf
cmpsl
mov
aas
xorl
add
cltd
rolb
sub
mov
jb
mov
jbe
mov
push
dec
sub
inc
test
mov
xlat
sub
dec
push
or
xchg
movsl
out
les
inc
mov
jne
cmpsl
jne
dec
cmpsl
xchg
stos
xchg
mov
dec
add
fbld
bound
push
arpl
cs
test
push
xor
xor
aam
bound
mov
pop
pop
repnz
out
add
ret
jb
jecxz
popl
jo
mov
int
jge
movsb
add
mov
cli
sbbl
pusha
aam
add
enter
das
cmp
out
sub
add
mov
out
xor
sar
or
sub
dec
jge
pop
jmp
or
das
push
imull
xor
xchg
pusha
leave
push
mov
push
rcr
int
rcrl
or
mov
dec
test
icebp
xor
xorb
aam
daa
mov
popf
int3
xchg
inc
andb
icebp
jmp
loop
sti
push
pop
aam
fistps
fisttpll
loope
cmp
fisubrl
jae
ror
repnz
mov
adc
and
inc
rcrb
pop
pop
int
push
and
jmp
loopne
or
mov
xchg
in
sub
adc
sub
jo
rol
pusha
js
sub
in
sti
ror
insl
adcl
jecxz
xchg
out
rol
pop
push
mov
dec
loope
adc
mov
movsb
cwtl
inc
pop
mov
cmp
cwtl
rorl
in
loope
jns
ficoms
daa
lea
xor
iret
push
popf
cmp
dec
dec
ret
cld
cmc
movsl
pop
icebp
mov
imulb
stc
enter
xchg
dec
mov
sub
es
leave
push
dec
in
sbb
xchg
filds
cmc
mov
or
adc
and
roll
cwtl
jg
jo
adc
cmp
xchg
cmp
stc
outsl
dec
les
inc
ret
sar
inc
mov
jl
iret
mov
arpl
jno
test
or
xchg
xchg
mov
dec
inc
repnz
lcall
adc
and
aad
movsb
sti
aaa
pop
jnp
mov
lods
adc
mov
cltd
sub
ja
stc
sub
dec
scas
adc
fbstp
sub
es
testl
mov
addl
dec
mov
mov
cmp
pop
pop
mov
jno
xor
hlt
adc
test
fcmovu
fcoms
cmpsb
aad
enter
cmp
aam
dec
or
xchg
dec
mov
pop
icebp
inc
in
fs
rcl
adc
add
pop
mov
push
fsubrs
in
mov
mov
loopne
push
cmp
mov
daa
loope
mov
mov
jge
push
xor
cmp
push
mov
in
xor
inc
jo
push
jge
add
mov
fcmovnu
aam
movsl
cmp
pop
out
lcall
inc
mov
filds
inc
sbb
xor
mov
loope
jbe
jb
je
pop
test
ja
xchg
sbb
je,pn
pop
adc
stos
nop
mov
aaa
mov
pop
sub
addr16
stos
jl
repz
or
ret
fwait
add
pop
xor
mov
sbb
xor
cmc
mov
out
loop
lret
mov
jb
jne
dec
in
imul
rorb
outsb
add
sub
push
jge
push
push
arpl
test
push
fldt
sbb
enter
mov
shlb
jno
fadd
dec
lret
in
jecxz
mov
int
push
pop
scas
push
mov
daa
mov
dec
jge
stos
adc
repnz
imul
in
sub
ja
scas
add
dec
in
cmp
mov
dec
mov
repz
dec
add
push
add
lods
movsl
xchg
test
jmp
xchg
jl
pop
ficomps
ret
mull
xchg
mov
cmpsl
mov
mov
push
xchg
dec
shrb
arpl
in
mov
cmp
inc
add
movl
xor
add
sbb
pushf
cmp
loopne
pop
push
lret
popf
pop
popf
out
dec
hlt
les
adc
sbb
aas
stos
adc
inc
sti
aaa
subb
lret
loop
sbb
enter
xchg
dec
push
sub
mov
inc
cwtl
mov
push
mov
dec
cmp
aam
std
adc
ss
insb
and
dec
addr16
rcr
sub
loop
pop
js
ret
pop
jmp
ret
mov
loope
fiadds
adc
bound
std
insb
enter
loop
pushf
xor
popf
fcomps
aam
or
push
psubq
jb
mov
fimull
stos
scas
jg
mov
mov
sbb
xlat
popa
les
mov
cmpsl
sbb
sub
fimuls
cmp
pop
cmpl
push
popa
mov
arpl
shrb
loopne
mov
xchg
sbb
cmp
ja
insb
popa
mov
adc
shrb
or
in
addr16
sahf
xchg
in
fiaddl
add
cs
xchg
dec
test
insl
daa
pop
hlt
pop
pop
jecxz
aad
inc
shl
sub
out
cmp
sbb
arpl
adc
daa
add
push
push
dec
leave
inc
mov
ss
jmp
cmp
sarl
add
and
sub
xchg
add
push
test
jmp
orb
or
and
cmp
jne
xlat
in
cmc
push
sub
adc
scas
out
lods
shrb
lods
jb
and
fadds
mov
aaa
ret
int3
jp
xor
les
cs
sbb
test
scas
mov
mov
adc
lock
push
jmp
fadds
mov
mov
jne
sbb
xchg
adc
bound
add
cmp
aam
sub
enter
scas
clc
jae
bound
fdivrs
in
mov
jae
mov
mov
movsb
push
cmp
add
pushf
loop
mov
jne
loope
sub
icebp
fs
xchg
loop
dec
addr16
dec
rorb
dec
xor
jp
and
outsb
cmp
in
add
das
sbb
mov
cmp
sub
cmc
dec
out
aas
orb
stos
test
sarl
mov
repz
cmp
xor
fnstenv
repz
mov
notb
lahf
cmpsl
lea
mov
out
sub
rolb
xlat
cmp
test
mov
lret
pushf
test
popa
sub
inc
fdivrs
jmp
cmpsl
dec
ss
fistl
adc
insb
pop
push
mov
and
xchg
inc
jecxz
fwait
pushf
incb
jmp
movsb
mov
popf
push
inc
pop
iret
push
add
xchg
xor
in
push
jp
jae
push
jp
jns
mov
dec
or
jb
mov
es
cmp
in
scas
movsb
call
mov
sub
or
insb
jo
mov
pop
aaa
jae
mov
mov
jne
ljmp
cmp
lds
xchg
lods
xor
adc
and
iret
in
push
hlt
jg
jle
jg
mov
xchg
out
mov
inc
loop
mov
sbb
loope
enter
adc
cmp
jae
in
dec
jae
rcr
mov
test
lcall
mov
push
mov
cmp
and
aam
add
popf
and
lcall
outsb
or
inc
fcomps
or
cmpsl
mov
paddq
incl
xor
cmpsl
aam
and
sub
dec
mov
jmp
cmp
push
push
xchg
inc
xor
dec
push
jno
adc
pushf
cs
clc
fisubl
stc
sti
mov
lret
stc
mov
dec
out
mov
push
mov
fs
jo
sbb
inc
clc
dec
jae
mov
testl
ds
mov
stos
or
sbbl
mov
mov
ror
pop
sbb
cmp
or
stc
mov
jbe
mov
out
push
test
dec
adc
sub
aas
addb
mov
and
rcr
pop
and
ss
cmp
outsb
or
incb
mov
xorb
ret
into
xor
bnd
int3
mov
inc
xor
jp
mov
push
imul
mov
lea
loop
rorl
dec
pusha
icebp
push
pop
cltd
leave
dec
add
jge
xchg
mov
hlt
movsl
or
pop
sbb
aaa
repnz
inc
fs
dec
jbe
jp
mov
cmp
jbe
adc
xchg
jmp
popf
pop
fistps
cld
xor
or
pop
loopne
sti
inc
mov
gs
xchg
mov
out
and
push
and
loope
and
pusha
xchg
and
jl
in
ss
in
push
mov
mov
ret
rcl
lods
leave
sbb
sti
testl
cmc
ja
lret
jl
mov
or
xchg
ds
sub
pop
cltd
cmp
inc
pushf
ret
dec
sub
mov
inc
ss
lret
add
das
les
xor
adc
mov
xchg
and
and
sub
xor
mov
jb
jle
test
sbb
es
test
sub
rcrb
xorb
dec
jmp
repz
stc
cmp
jns
jp
jne
inc
jle
sahf
sbb
loop
cli
mov
mov
ret
sbb
ja
dec
inc
int3
jb
icebp
shll
mov
push
jne
sub
xchg
lret
pop
and
add
mov
stos
adc
mov
fcomps
xor
cmp
dec
xchg
dec
aam
pop
jne
not
icebp
in
xor
cwtl
cmp
rclb
pusha
pop
lret
fcom
mov
subb
pop
fldt
fidivs
sub
pop
add
int3
xor
stos
lcall
cmpsl
mov
push
sti
adc
push
ljmp
stos
fdivr
add
test
fdiv
adc
xor
mov
aam
pop
lea
rcll
scas
and
cmp
xor
mov
xchg
outsl
push
mov
mov
pop
jp
imulb
mov
jmp
inc
push
or
sub
pop
push
das
add
pop
xlat
aam
out
dec
clc
xlat
mov
std
jge
or
dec
stc
movsb
inc
jge
xor
inc
mov
movsb
dec
notl
loopne
and
mov
fisubrl
cmp
pop
cmp
popf
ss
sbb
icebp
test
inc
mov
mov
jne
shll
or
popa
dec
mov
xlat
and
out
mov
mov
fcmovbe
xchg
jmp
inc
leave
out
cmpsl
mov
movsb
sbb
mov
and
addb
jp
fcoml
cmp
sub
addl
rorb
mull
dec
mov
jns
insb
sub
cmp
fsubrs
inc
inc
push
shrb
movsb
xor
adc
addr16
fisttps
xchg
sub
add
pop
pushf
roll
xchg
test
or
xlat
in
jns
rolb
out
mov
into
ficomps
jns
es
fidivl
mov
clc
fistps
shrb
lret
push
push
lock
scas
lret
cmpsl
movsb
fidivrl
inc
dec
xlat
in
sbb
mov
clc
or
mov
push
xchg
leave
call
out
mov
roll
or
cs
mov
jne
mov
jl
lret
mov
pop
and
clc
sbb
push
jg
mov
test
das
lods
dec
mov
aam
jns
cmp
xlat
xor
and
stc
xor
sub
in
cmpsb
or
fbstp
popa
sbbl
seto
cld
ds
xlat
inc
fcmovu
mov
add
adc
mov
mov
dec
sti
cmc
mov
sub
lds
adc
xchg
pop
sbb
mov
scas
aaa
movsb
stc
adc
dec
sub
or
cwtl
shlb
scas
mov
sbb
notb
repnz
and
ss
dec
and
stos
adc
xchg
jecxz
mov
jge
aas
shrb
fistpll
mov
cli
sbb
mov
jne
mov
rcrl
out
lds
shlb
mov
in
jg
bt
movsb
add
arpl
stc
in
test
scas
sub
xor
mov
add
data16
cmp
imul
repnz
cmp
or
push
inc
dec
inc
xor
mov
rcrb
mov
cmp
or
and
or
adc
loopne
dec
cmc
xchg
fs
mov
pop
aas
ja
jo
jle
dec
out
push
ljmp
mov
adc
pushf
push
add
outsl
dec
es
movsb
xor
out
xor
ljmp
fisttpll
pop
pop
hlt
push
sarb
pushf
out
rcll
gs
cmp
mov
sub
add
xchg
rclb
andl
add
int3
sbb
lahf
xor
mov
sbb
fidivrs
in
aad
or
xor
and
movsl
xchg
loopne
pop
stc
jbe
aaa
adc
dec
xor
out
dec
imull
xchg
ss
jnp
dec
int3
enter
xchg
xor
adc
lcall
adc
xor
stos
test
popf
dec
ljmp
inc
ds
add
std
outsl
mov
les
inc
out
std
notl
lock
aad
xchg
and
mov
movsb
ljmp
inc
repnz
cwtl
movsb
or
shr
repz
hlt
pop
dec
imul
push
mov
pop
and
sub
aam
cs
fistpll
mov
arpl
scas
aam
movsb
test
jmp
fwait
xchg
stc
mov
adc
aam
mov
pop
xorl
dec
sbb
lods
out
push
stos
xor
adc
pop
mov
bound
daa
je
pop
or
and
lods
stos
dec
imul
inc
mov
hlt
adc
popa
pop
jne
cmp
add
and
pusha
mov
xchg
not
mov
jge
insb
mov
enter
repz
imul
data16
fcomps
adc
jecxz
mov
ljmp
stos
inc
hlt
leave
std
sub
xchg
pusha
lds
inc
and
shrb
mov
mov
mov
stos
bound
inc
scas
push
je
pop
xlat
and
inc
xchg
push
mul
lea
sti
dec
pop
stos
addb
pop
adc
mov
test
and
fistl
mov
loopne
loope
and
jb
stos
imul
jl
idivl
popa
lret
pop
lahf
cmc
or
cmp
int3
inc
movsb
xchg
mov
jmp
ja
push
bound
mov
push
aam
dec
out
test
mov
or
aas
mov
or
cmp
or
adc
xchg
popa
jns
pop
inc
notb
testl
les
leave
repnz
movsb
iret
jo
data16
mov
and
pop
fildll
jno
mov
not
fcomp
insl
pop
fnstenv
cmp
jge
insb
pop
pop
cmp
xlat
loope
stc
push
mov
inc
ret
xlat
movsb
and
loope
sub
or
sub
add
sar
ret
repnz
mov
adc
dec
push
add
jno
mov
test
popa
ret
inc
fstps
fildll
aad
sbb
stc
or
outsl
aad
mov
outsl
es
dec
cld
lock
jne
ss
xchg
sbb
mov
jl
xor
xchg
iret
adc
fsubrl
es
lret
incl
pop
test
sbb
or
lds
ret
pop
mov
jl
pushf
add
subl
fs
mov
push
pushf
jg
stc
insb
movsl
cwtl
mov
push
push
sarb
xor
inc
std
mov
mov
in
or
jne
sahf
aam
push
dec
out
jo
jns
aad
test
test
roll
xchg
mov
mov
and
xlat
sub
out
pop
cld
jne
ja
xchg
out
mov
cmp
cmp
adc
mov
loop
cmp
mov
lahf
pop
dec
arpl
mov
mov
das
mov
or
inc
sub
xchg
or
jge
push
js
ret
add
test
imul
mov
xor
pop
test
xor
xchg
andb
add
adc
push
dec
inc
clc
and
mov
xor
insb
mov
inc
hlt
jmp
arpl
repnz
imul
sbb
outsb
mov
ds
je
bound
mov
mov
push
xchg
lock
lods
arpl
lods
and
pop
stos
lret
leave
dec
roll
xlat
subl
mov
imul
popf
mov
sub
shll
in
nop
lods
dec
pop
xor
xchg
xor
faddl
out
xor
mov
in
pop
xor
xchg
cmpsl
aam
add
adc
mov
pusha
movsb
mov
ss
mov
adc
enter
icebp
lret
xor
sbb
pop
add
adcl
sti
pusha
mov
mov
scas
fcomps
add
aam
push
lcall
or
xor
cmp
loopne
int
fwait
aam
inc
mov
enter
aam
push
inc
mov
jb
mov
dec
inc
jge
or
mov
scas
pop
xchg
orb
enter
gs
mov
add
movsb
mov
in
mov
stos
test
rorb
inc
std
leave
loope
cwtl
movsb
pop
xchg
inc
xor
dec
fs
std
dec
adc
mov
outsl
xlat
lock
jbe
les
mov
arpl
in
fdivl
in
movsl
stc
xlat
lret
pop
aad
fdivs
jb
fistpll
cmp
add
mov
loope
mov
xor
shlb
mov
dec
mulb
mov
hlt
inc
cmc
mov
mov
add
and
cmpsb
mov
mov
movsb
xchg
xor
hlt
dec
sub
mov
scas
jae
mov
push
out
jb
movsl
fwait
rclb
enter
scas
sbb
xor
outsl
push
lods
and
jb
xchg
popa
imul
sub
and
cmpsl
mov
fsts
sahf
add
movsl
dec
ss
incb
lcall
cli
inc
cmc
ds
adc
rclb
mov
push
movsl
decl
pop
jl
icebp
imul
scas
mov
and
mulb
xchg
cld
push
jnp
mov
mov
aaa
push
aad
mov
inc
mov
inc
dec
aad
cmp
test
les
xchg
fidivrs
jmp
add
mov
into
sahf
mull
jno
xchg
inc
mov
xchg
ret
add
inc
and
mov
push
insb
mov
xchg
jl
sub
outsb
fistl
mov
sbb
enter
and
or
shl
xchg
call
sub
loop
cmp
stc
jle
call
mov
shrl
shll
cwtl
xchg
jb
fsubrs
test
loop
and
pop
pusha
popa
test
call
in
mov
fstps
cmp
push
iret
loopne
outsb
stc
add
aam
movl
imul
aas
lds
popa
stos
xchg
leave
add
inc
push
mov
inc
mov
lods
add
into
shr
mull
sub
inc
sub
loope
fwait
pop
mov
xlat
idivb
pop
pop
or
xchg
ret
mov
test
sub
out
lea
pushf
add
pop
sub
add
loopne
mov
mov
add
mov
mov
xor
mov
lods
mov
push
cmpsl
movsb
sahf
jp
insl
shr
sub
fdivr
or
dec
xchg
outsb
repz
pop
arpl
mov
or
cltd
lock
dec
pop
aaa
jno
data16
movsl
adc
aam
out
aam
lds
sar
cmp
push
outsb
arpl
addr16
xchg
out
jns
in
sbb
stos
lcall
mov
push
arpl
pop
xchg
cmp
and
scas
jge
lret
pop
add
mov
decb
mov
daa
mov
test
mov
adc
or
add
lahf
mov
dec
hlt
fistl
outsl
adc
fsubrs
jmp
cld
out
out
inc
je
loopne
pop
fisttps
xor
movsl
xor
lds
scas
mov
push
push
rcrb
mov
aaa
inc
out
jg
xor
mov
fisubrl
int
or
int3
fwait
mov
xchg
test
and
mov
pop
lods
mov
mov
dec
add
repz
movsb
xor
notl
lret
xchg
dec
inc
rolb
in
daa
cmp
test
test
push
dec
jle
mov
xor
mov
jnp
stos
xlat
jns
dec
and
mov
inc
or
insb
or
push
sbb
int3
xchg
subb
adc
iret
sub
ss
xorb
jb
push
jmp
mov
cltd
push
lahf
out
fsubl
dec
jge
mov
push
add
in
inc
cmc
cmp
sub
sti
mov
jb
mov
nop
jmp
orl
mov
xchg
adc
dec
push
xor
xor
lds
loope
and
xor
rcl
out
cltd
ljmp
mov
repnz
sahf
cmc
jmp
ss
negb
dec
fs
dec
test
mov
cmp
push
les
sub
jp
in
sub
push
jecxz
out
jle
sub
or
xchg
push
inc
xor
pop
cmc
faddl
cwtl
loope
push
vmovaps
std
into
lods
add
fcoms
mov
xchg
mov
dec
xchg
mov
popf
xchg
std
int
mov
outsb
mov
xor
xor
iret
xchg
mov
lds
mov
mov
pop
and
ja
aam
pop
xor
mov
pop
inc
fisubl
or
into
fnstenv
fcmovnu
test
pop
into
sub
pop
in
testl
push
pop
aam
sbb
out
inc
repnz
add
pop
mov
dec
insl
cmc
push
mov
pop
xor
xor
notl
das
fcos
inc
jmp
test
inc
stos
jae
repz
lods
stos
jno
or
testl
jno
lods
push
hlt
cmpsl
cmp
leave
jmp
enter
dec
call
mov
xchg
sub
jmp
and
cmp
repnz
sub
lcall
mov
xor
and
push
sbb
movsb
idivb
ja
mov
mov
xorl
scas
jmp
mov
ljmp
dec
popa
dec
jmp
jmp
decl
mov
and
pop
or
out
test
jge
bound
xchg
cltd
dec
dec
jmp
es
iret
cmp
sbb
xchg
inc
popa
sarb
xchg
aas
test
negl
je
outsb
mov
add
xor
inc
lea
sti
hlt
lret
xchg
jmp
push
jb
pop
xor
loopne
enter
and
xchg
call
xchg
dec
push
lds
inc
inc
push
and
inc
addr16
aam
mov
cmp
xchg
das
mov
mov
in
mov
xchg
and
inc
xor
mov
or
andb
out
ljmp
lret
lahf
mov
push
pop
flds
scas
arpl
mov
mov
mov
mov
mov
daa
xchg
pushf
push
stos
jmp
pop
pushf
notl
pop
cmpl
mov
movsl
pusha
into
mov
mov
or
xor
xchg
and
inc
jg
pcmpeqd
addb
jnp
and
pop
pop
mov
nop
cmp
jle
push
cmp
test
xor
hlt
das
and
mov
xchg
push
mov
cmp
mov
pop
push
aam
mov
loopne
adc
stos
popf
cmp
mov
sahf
add
sub
loope
stos
sub
mov
stos
sub
push
ljmp
xlat
push
and
pop
lock
pop
loopne
pop
or
imull
test
notl
mov
lahf
xlat
testb
xor
outsb
mov
cmp
shl
sbb
aas
fucomp
xchg
xor
xchg
aam
adc
xchg
or
adc
bsr
mov
jecxz
fdiv
xchg
outsb
lea
jns
mov
repnz
cltd
jo
addr16
loope
dec
add
loope
dec
es
jno
aam
cmpsb
add
mov
pop
aad
idivl
jo
in
inc
cli
cmpsl
jno
in
push
fsubrs
in
mov
aam
add
aaa
and
mov
mov
fisubrs
sbb
inc
fcomps
fldt
inc
ljmp
xchg
push
cmp
xor
testl
ljmp
ds
call
jno
and
scas
roll
jns
and
rolb
xchg
and
pushf
unpcklps
or
fildl
das
and
mov
mov
sbb
mov
inc
add
repnz
lret
jne
mov
out
sbb
frstor
aaa
jbe
inc
ds
cmp
orb
out
sub
loopne
shrl
mov
cmp
negb
add
cltd
aam
cmpsb
cmc
dec
jae
xor
hlt
dec
orl
xor
cmp
jg
aam
mov
jno
movsl
leave
mov
push
cmp
inc
fistpll
cmp
fs
adc
leave
imul
fldt
dec
xchg
ficomps
cmp
mov
jg
ljmp
cmpsb
push
pop
pop
out
aam
imul
mov
sub
xchg
pushf
enter
mov
rcl
lock
movsb
jnp
pop
lods
push
cmp
xchg
cmp
shll
mov
push
xor
int3
add
jmp
dec
sbb
push
pop
loopne
orl
cmp
movsb
fucomi
xor
push
xor
lods
xchg
test
bound
pop
cld
push
mov
mov
dec
cmp
arpl
xor
cmp
lret
adc
fadds
test
pop
repz
or
sub
mov
mov
or
mov
clc
pushf
sub
add
shll
jne
aad
lods
and
in
xlat
cmp
stos
loope
enter
addr16
mov
out
int3
pushf
popf
shlb
lret
lds
insb
mov
fdivr
adc
mov
bound
pop
sub
fistl
loop
mov
jle
adc
xor
sub
jp
jne
push
cmpsb
popa
gs
adc
movsb
fsubrs
xor
loope
jae
ret
mov
mov
jp
push
jne
jne
loope
dec
ss
cmp
out
mov
pop
shlb
cmc
sbb
push
test
cmp
mov
mov
frstor
movsb
pop
rcrl
mov
xchg
subb
fwait
xchg
push
and
xor
fwait
dec
outsl
gs
push
sbb
cli
bound
cmp
sarl
pushf
xchg
cmp
movsl
cli
adc
or
stos
enter
pushf
dec
fisttpl
or
out
mov
cmp
outsl
mov
xorb
mov
cmpsb
loope
es
push
test
sub
scas
icebp
rclb
mov
or
add
mov
mov
sarb
jnp
test
jbe
icebp
mov
adc
lds
test
lods
add
stc
jmp
rorl
add
in
push
divps
movsb
jne
xlat
dec
in
stos
pusha
inc
cs
insl
ds
test
mov
cmp
mov
xor
add
fimuls
lds
fnsave
mov
subl
mov
leave
mov
cmp
js
pop
stc
pop
cmpsb
iret
rcl
pop
inc
jle
cli
data16
pop
mov
dec
repz
mov
in
shld
fidivs
sti
shlb
call
pop
aam
push
jmp
int
aad
das
jl
dec
fmul
pop
mov
and
add
and
fadds
push
enter
inc
jp
dec
aas
lea
les
mov
jb
stc
mov
inc
inc
fmuls
mov
popf
xchg
int
fsubrp
xchg
jb
das
cmpsl
sbb
mov
shlb
testl
jecxz
jmp
aas
cmp
cmpsl
out
int
jb
test
pop
xlat
inc
aam
mov
sbb
mov
adc
inc
stos
push
mov
mov
movsl
popf
loopne
cmpsl
test
jo
mov
cmc
sahf
pop
nop
dec
push
ss
add
enter
rolb
mov
add
and
sbb
rolb
pop
div
xor
cmp
stc
stc
dec
inc
clc
push
int
push
or
into
cli
rcrb
out
xchg
add
rolb
je
mov
add
add
fs
aas
pop
sub
xchg
sbb
aam
int
pop
adcl
jmp
sbb
popf
mov
dec
cmp
bound
aam
movsl
stos
adcb
pop
mov
mov
mov
wrmsr
cmp
push
mov
subl
xchg
lods
xor
adc
mov
in
aad
cmp
xchg
jp
test
jne
and
xor
gs
cmp
iret
mov
or
jns
loopne
adc
fdivl
cwtl
mov
shrb
out
dec
movsb
adc
jno
sbb
test
sahf
or
jae
mov
jp
push
les
fnsave
xchg
aaa
shrl
mov
ja
inc
popa
mov
cmpsl
mov
cmp
arpl
stos
popa
test
std
or
xor
xor
fdivs
dec
jb
call
in
cmp
mov
inc
jmp
fisttps
fwait
adc
jecxz
dec
loopne
xorl
sub
xchg
pop
mov
adc
push
inc
mov
inc
dec
mov
pop
xor
pusha
sub
mov
movsb
mov
loop
clc
or
cmp
outsb
or
imulb
mov
scas
ljmp
clc
pop
or
out
mov
inc
jl
popf
xor
mov
aaa
popl
push
in
jg
sbb
pop
xchg
mov
mov
xchg
xchg
jg
dec
xor
cmpsl
sarl
lods
or
je
xchg
cmp
xchg
mov
add
mov
orl
pop
xor
cmpsl
dec
jb
mov
cmp
inc
dec
mov
dec
loope
sbb
movsb
mulb
loope
adc
aas
lret
cmp
or
subb
aaa
pop
sub
mov
scas
lods
pop
push
xchg
lcall
repz
cmp
and
pop
cmpsl
add
push
xlat
and
aaa
in
lock
inc
mov
movsb
xchg
adc
adc
cmp
jmp
sti
in
ja
in
mov
orl
mov
push
enter
ret
out
rcrl
and
xor
cli
xchg
inc
mov
test
data16
inc
and
lea
mul
adc
ss
popf
add
not
mov
cmp
mov
bound
push
cmp
bound
and
imul
push
rorl
inc
pusha
push
stc
or
cmp
cmp
push
cmp
lret
movsl
cmp
rcr
or
xor
mov
jmp
icebp
xlat
add
or
sbb
xchg
dec
decb
out
scas
dec
iretw
cmpsb
cmpsl
push
inc
jp
sti
ds
ret
ficoml
pop
sbb
cmp
or
aam
jns
xchg
add
mov
sub
add
not
movsb
mov
add
push
stos
cmpsl
pop
fimuls
xor
movsb
or
movsl
mov
into
aam
pop
add
mov
flds
jne
in
jmp
bound
jno
or
and
jo
daa
xlat
call
pop
pop
pop
mov
ja
push
or
push
inc
add
xor
outsl
shlb
cmpsl
cld
in
mov
das
push
in
movsl
jl
xchg
in
call
mov
pop
dec
mov
leave
pop
dec
ljmp
and
movsb
mov
mov
lods
cmp
int3
cmp
xchg
mov
xorl
jl
jo
into
sar
enter
cmpsl
jp
mov
stc
icebp
or
sbb
scas
mov
and
sbb
insl
cmp
aaa
movsl
add
in
shlb
cmpsb
mov
daa
add
rolb
call
jbe
pop
cltd
add
test
inc
inc
pop
adc
xchg
mov
mov
loope
das
popl
aaa
outsb
rorb
stos
aam
insl
fdivs
outsl
mov
pusha
lret
and
repnz
xorl
inc
inc
js
faddl
and
addr16
and
aaa
gs
sub
jl
das
pop
and
mov
and
cmp
adc
notl
push
mov
mov
inc
lock
sbb
inc
xor
pop
or
jmp
pushf
lcall
mov
xchg
adc
rcl
mov
push
jg
add
nop
aam
fmulp
jg
mov
mov
shlb
iret
icebp
or
outsl
fcmovne
adc
sar
sub
xor
movsb
fdivrs
inc
faddl
repz
enter
idiv
scas
out
aaa
mov
pushf
push
and
loop
fmull
sub
lea
push
pushf
out
stos
mov
test
fidivl
gs
fildll
xor
dec
jge
test
push
dec
mov
jmp
aad
push
mov
pop
jne
aam
iret
mov
xor
lret
sbb
inc
iret
or
imul
movsb
xor
add
push
cs
ja
cli
add
aas
cmp
movsl
rcrb
shr
push
cld
test
mov
push
or
std
cmp
add
inc
int3
shll
jbe
repz
cld
stos
outsb
sbb
rcll
movsb
xor
bound
mov
sub
push
dec
bound
in
mov
inc
jb
or
fildl
jl
mov
sub
in
arpl
pop
pop
sub
pop
cmp
repnz
ret
or
mov
roll
out
std
inc
or
dec
mov
ret
add
stc
xchg
movsb
shll
jg
aam
scas
lea
mov
inc
mov
dec
cmpsl
add
push
cli
lods
pop
cmp
lock
push
test
jl
loop
movsb
adc
add
in
push
gs
stc
and
xchg
sbb
aam
pushf
add
mov
lret
orl
imul
mov
jns
xchg
lea
cmp
aas
sbb
cmpb
pushf
dec
inc
call
jns
data16
pop
adc
lcall
dec
push
mov
movsl
add
dec
adc
mov
sti
stos
inc
cwtl
rorl
pop
or
sbb
mov
cmp
pop
imul
aas
leave
cs
xlat
iret
stos
mov
out
xchg
push
xchg
jecxz
jb
inc
inc
out
fists
mov
xchg
and
xchg
or
nop
test
add
mov
ret
push
sub
rcrl
movlps
ss
sub
lret
ja
and
out
mov
test
cltd
movsb
enter
xchg
adc
jecxz
daa
movsb
cmp
jg
out
arpl
mov
in
xor
cmp
idivb
shll
les
mov
cmp
inc
cmpsb
repz
xchg
rcl
add
out
enter
dec
mov
int
cmp
mov
or
sbb
sub
test
fadds
test
fisubs
fwait
andb
movsb
push
jmp
in
insl
ffreep
ret
mov
mov
mov
int
stos
iret
pop
movhps
jns
test
xchg
mov
jb
sub
loope
jnp
cs
lret
aaa
out
mov
cmp
inc
ja
nop
mov
out
repz
or
psubsw
lahf
sub
daa
ja
ret
sbb
mov
cmp
std
push
or
repz
pop
roll
mov
ljmp
mov
iret
jo
add
sub
or
pop
inc
mov
push
mov
in
mov
filds
mov
lret
fdivs
inc
imull
sbb
jmp
xchg
loope
cmpsb
loope
lds
inc
dec
inc
inc
pusha
fcomps
xchg
data16
mov
or
xchg
pushf
add
and
hlt
scas
mov
out
test
inc
in
dec
arpl
push
mov
scas
ljmp
jl
add
ljmp
das
icebp
jmp
pop
rolb
adc
popa
call
inc
jo
sbb
sbb
inc
int
dec
adc
test
xchg
adc
mov
daa
imul
lea
dec
xlat
push
arpl
jg
and
ds
pop
mov
into
or
mov
cmp
inc
outsl
test
fs
inc
call
mov
js
aas
mov
dec
add
ds
adc
andl
stos
idivl
out
xchg
sbb
pop
sbb
movsl
xor
add
mov
es
test
filds
std
and
aas
test
pop
jae
inc
psllw
jae
aas
sbb
pop
stc
xchg
mull
fbld
fildll
mov
mov
jp
scas
int
pusha
pop
lods
inc
sbb
push
adc
mov
mov
mov
popa
add
mov
mov
in
insl
sbb
bound
adc
test
add
cmpsb
aad
mov
sub
stos
out
test
xlat
sbb
loopne
sbb
notl
xchg
cmp
fisubrs
add
call
out
aaa
cmpsb
or
or
dec
mov
loop
cmpsl
lret
out
and
mov
inc
into
arpl
dec
push
scas
pop
clc
cmc
adc
lods
and
cs
mov
mov
inc
jmp
jg
ret
cmp
dec
shl
mov
sbb
outsb
adc
aam
mov
outsl
pop
mov
movl
xchg
into
add
cmp
sub
xchg
cwtl
mov
push
cli
jge
imull
sub
push
stos
pop
pop
ja
pop
fcoms
adc
xchg
xchg
aam
mov
in
faddl
repz
jmp
push
fmuls
addr16
inc
ret
out
xor
hlt
mov
lcall
mov
ds
loop
sub
sbb
aam
dec
xlat
push
mov
js
addr16
movsb
xor
ret
push
iret
add
add
out
rorl
xchg
out
cmp
dec
sub
js
hlt
std
cmp
mov
mov
jno
jmp
jns
int3
xchg
xchg
outsb
nop
test
cwtl
mov
fwait
shlb
gs
das
into
cmc
aas
popf
cmp
loope
xchg
dec
rolb
arpl
lahf
sti
mov
hlt
mov
pushf
repz
lds
loope
lods
pop
adcl
push
cmp
jno
jecxz
mov
cmpsb
test
dec
inc
xlat
cwtl
repz
cmp
pop
rcrl
nop
int
mov
fmulp
leave
xlat
rolb
xchg
testb
inc
lret
stc
jbe
dec
clc
add
or
popa
inc
icebp
cmp
test
or
and
lret
movsb
sbb
push
mov
dec
mov
mov
and
sbb
pop
xor
xchg
loope
cmc
leave
loope
pop
jge
es
ljmp
out
or
call
in
pop
add
test
or
fprem1
lret
fmull
mov
adcl
inc
je
lcall
sahf
or
fmuls
rcl
cmp
aaa
jo
rorl
xor
scas
push
push
sub
cmp
mov
sub
test
mov
jnp
dec
or
add
fidivs
fdivr
or
xchg
pop
sub
hlt
and
add
dec
inc
call
rcr
loope
sarl
add
icebp
in
or
stc
test
ret
jge
mov
sbb
pop
stos
pop
sbb
mov
mov
jb
add
lea
cmp
stc
jae
out
xor
mov
add
xor
test
dec
adc
lahf
inc
es
pop
pop
shrl
cmp
test
cmp
jmp
sbb
mov
pop
dec
leave
adc
outsl
dec
push
mov
stos
adc
and
fildl
cld
or
jnp
jl
shld
pushf
xor
pop
sbb
push
mov
loope
cmc
pop
pop
xor
push
fisubl
mov
mov
add
sub
ret
adcb
xor
cs
mov
stos
sti
enter
ret
dec
add
mov
and
sbb
cmp
gs
cmp
cs
jmp
mov
std
pop
cmp
pop
cmp
mov
xchg
pushl
outsl
pop
push
mov
imul
aam
jmp
cmc
cmp
sub
cmp
shl
inc
or
sub
stos
mov
fists
jae
sub
es
jbe
dec
sub
imull
shll
cmp
ja
movsb
mov
into
arpl
or
out
sbb
orb
or
lock
mov
in
cmpsl
aam
hlt
dec
aad
mov
stc
sub
cmp
lock
jbe
sarb
outsb
dec
test
in
jg
andl
pop
fidivrl
push
scas
dec
dec
imul
loopne
sarb
pop
and
sbb
out
in
jmp
inc
xor
mov
lret
fists
dec
jecxz
mov
and
movsb
pop
in
pop
mov
shrl
jmp
outsl
hlt
cmp
in
call
jbe
add
ja
mov
mov
fstl
mov
pop
lcall
push
push
testb
loopne
sarb
mov
pop
push
outsl
jl
es
mov
mov
sbb
out
xchg
push
or
fstpl
aas
repz
adc
test
mov
or
add
and
pusha
out
out
pushf
and
mov
rorl
das
insb
fsubp
ljmp
push
scas
fwait
inc
dec
aaa
dec
movsl
decl
nop
pop
push
mov
popl
imul
stos
cmp
dec
in
cltd
push
insb
dec
or
fnsave
test
ja
rol
lret
jmp
fidivs
pushf
repz
sub
mull
pop
and
xor
scas
mov
xchg
and
mov
cmp
call
enter
inc
ret
mov
add
sub
fsubrs
sbb
js
xorb
mov
rclb
insl
fisttpl
mov
mov
in
leave
cwtl
imull
and
xlat
push
xchg
adc
pop
xlat
lcall
shll
imul
pop
mov
push
mov
mov
mov
mov
addb
lea
es
push
mov
int
ss
pop
and
outsb
das
pop
mov
mov
mov
pop
enter
pop
cmp
add
inc
popf
mov
sbb
jno
sub
mov
mov
jb
adc
mov
inc
bound
lods
xor
sbb
loop
mov
jg
out
push
arpl
fildl
les
mov
mov
int3
imul
enter
aad
mov
xchg
xlat
outsb
sub
dec
stc
rorl
mov
cmc
movsb
inc
pop
pusha
add
mov
cmp
pop
jmp
cwtl
lahf
iret
mov
cmpsl
scas
pop
sub
lret
jge
mov
or
lcall
stc
testl
and
sbb
jnp
mov
xor
jg
pop
mov
cmp
push
pushf
jg
cmp
adc
cmp
fisubl
or
adc
aam
loope
addl
outsl
test
cmp
xor
jl
lcall
mov
cmp
mov
ror
lret
inc
ret
cmp
cmc
push
xlat
outsl
rcl
aam
mov
int
and
dec
add
xorb
repz
daa
mov
and
or
mov
inc
int3
push
cwtl
add
lret
mov
inc
fnstsw
mov
mov
jae
ret
scas
jno
mov
lods
mov
pushf
xchg
add
or
mov
std
leave
and
jmp
outsb
lret
popf
repz
jb
addr16
mov
cmp
icebp
pop
pop
sbb
xor
and
push
inc
sub
fldt
sbb
out
fdivl
sbb
or
inc
int
call
std
orl
xchg
cmp
dec
sbb
out
std
les
outsb
sbb
clc
push
sub
adc
orl
xor
sbb
adc
ja
subl
cld
jne
sub
xor
pop
xor
mov
inc
loop
repz
jmp
lock
push
icebp
out
movsl
cmp
xorl
fidivrl
add
mov
inc
xor
pop
cmp
fprem1
ror
jnp,pn
sahf
ret
jmp
js
flds
sub
jmp
hlt
mov
stos
cmp
pop
push
pop
cltd
jnp
add
pop
mov
mov
or
jb
cmp
lret
push
mov
xor
scas
jne
arpl
mov
sub
pop
aam
or
pop
mov
sub
mov
les
outsl
inc
repnz
adc
fdivs
into
adc
adc
and
jno
mov
fsub
mov
repz
adcb
gs
xor
mov
add
mov
mov
arpl
in
mov
xchg
lret
xlat
or
faddp
xlat
add
sub
in
sbb
xchg
test
jecxz
pusha
icebp
inc
dec
mov
push
adc
sub
jb
adc
shll
sub
push
sub
cmp
jg
fnstsw
sbb
jbe
ret
ror
sbb
popf
xor
stos
mov
pop
jae
or
mov
jmp
jp
pop
push
cmp
and
mov
fadds
sarb
sub
dec
stc
clc
mov
mov
inc
mov
sbb
xchg
jne
mov
add
inc
test
outsl
xor
mov
cli
test
mov
add
dec
stos
and
dec
mov
rorb
popa
enter
pop
fmuls
pop
andl
stc
or
push
mov
aam
daa
pushf
xchg
cmp
xchg
xchg
out
test
lea
xor
pop
into
arpl
inc
andb
and
cmp
push
mov
subl
dec
sti
inc
dec
in
cmp
or
jge
xchg
popf
shrb
push
adc
addr16
sub
inc
sub
inc
cmp
std
aaa
sub
les
shlb
mov
stos
mov
push
sub
mov
test
shll
movsl
int3
stos
lcall
andb
push
test
ret
mov
push
outsb
push
lods
out
sbb
mov
test
shll
dec
and
inc
mov
in
mov
dec
in
inc
loopne
ljmp
pop
dec
je
adc
test
cmp
adc
or
leave
stc
stos
cmp
dec
ja
int3
imul
js
test
push
popf
and
jnp
test
cmp
call
push
mov
andl
stos
cmp
ret
out
cmp
stc
sub
push
popa
push
xor
and
cli
aam
cld
cld
inc
pop
lret
in
push
shlb
mov
into
sbb
sarb
inc
dec
cmpsb
imulb
shlb
pop
mov
shrl
rorl
sbbb
ret
movsb
std
mov
mov
shlb
movsl
aas
add
mov
int3
and
xor
int
mov
mov
out
pop
loop
pop
or
dec
sbb
push
cmpsl
cmp
pop
aad
dec
xor
add
out
xchg
loope
dec
pop
in
cmpsl
popf
and
ror
lahf
and
jecxz
push
cmp
ja
stos
out
xchg
inc
pop
xchg
pop
data16
or
xchg
lods
push
dec
scas
dec
jno
dec
ja
out
aad
or
pop
xchg
push
push
stc
aaa
mov
movsb
xlat
lahf
cmp
mov
sub
xchg
sub
sbb
xor
imull
scas
movsb
inc
imul
mov
push
xor
mov
push
ret
cwtl
fnstsw
or
call
jmp
xchg
adc
jne
or
mov
mov
pusha
mov
adc
cmp
fstpl
stc
adc
loop
mov
aaa
xlat
push
add
sub
pop
idivl
into
add
push
sahf
popl
das
in
repz
inc
sbb
insb
xchg
ljmp
sbb
lods
and
mov
testl
sbb
jb
enter
mov
dec
test
outsl
mov
cld
sbb
push
mov
pop
movsb
jle
fdivl
jbe
adc
mov
loop
lods
or
xor
lcall
sbb
stc
dec
stos
insl
cmpsl
test
cwtl
and
sti
cmp
jb
jge
sub
adc
aam
jl
xlat
sbb
lds
xor
sti
in
nop
out
mov
cmp
iret
ret
or
xor
ds
adc
and
test
iret
scas
jmp
and
xchg
sub
or
mov
pop
aaa
jb
pop
xchg
lret
adcw
in
pop
insl
sub
stc
adc
push
jp
inc
dec
out
sbb
pusha
xchg
dec
aam
mov
cmovs
shr
bound
cs
mov
aas
clc
or
jp
xchg
popa
aam
bound
sub
sti
es
ret
inc
inc
and
jp
and
sub
inc
aad
mov
sub
pop
fldcw
sbb
mov
test
aaa
stos
dec
xor
stos
idivl
fdivr
dec
iret
jmp
leave
lret
imul
mov
xchg
push
jg
or
cmp
xchg
push
mov
hlt
out
fsubl
ret
xlat
aas
push
fldenv
or
test
lods
or
push
shll
mov
mov
and
sub
ficomps
xchg
or
stos
or
mov
jp
and
adc
xor
sarb
mov
inc
idiv
dec
sbb
fwait
lfs
inc
data16
mov
xor
mov
cmp
inc
or
sbb
leave
jge
xor
rolb
inc
pop
cs
movsl
out
iret
ss
sub
aad
pop
jns
mov
imul
and
pop
ja
sub
jp
out
mov
inc
sbb
or
cmp
loopne,pt
sub
jnp
and
xor
push
ffree
cmp
movsb
cmc
pop
cli
add
test
js
cmp
and
jmp
push
dec
daa
enter
push
xlat
popa
pop
xor
inc
fcom
push
inc
mov
push
loopne
sbb
in
lret
push
enter
ret
mov
or
iret
push
popa
sub
outsl
es
outsl
jl
cmp
cli
adc
inc
mov
pushf
pusha
xchg
inc
es
cmp
in
pushf
outsb
dec
cmp
mov
pop
cli
out
jmp
push
ljmp
movsl
cli
imul
or
lea
push
inc
cli
lcall
scas
stc
or
xor
xchg
fisubl
xlat
and
cmp
jmp
jns
dec
push
mov
popa
mov
movsl
nop
jne
movl
rcrb
sahf
scas
mov
dec
jmp
adc
faddl
cld
mov
lea
mov
xor
rol
jmp
dec
aad
ret
or
leave
pop
test
aam
mov
cs
dec
stc
je
stc
dec
ret
lret
jg
sbb
sbb
sbb
jns
sub
ja
aad
xor
adc
jnp
sbb
xor
cs
mov
pop
xchg
push
sarl
xchg
pusha
mov
pop
and
repnz
pop
dec
jmp
add
out
sub
mov
bound
push
jmp
cmp
mov
movsl
sbb
sbb
push
fimull
mov
cltd
push
movsb
push
daa
cmp
inc
pushf
jecxz
jne
and
mov
inc
out
mov
jg
out
xchg
adc
icebp
daa
sbb
test
sbb
lret
push
push
out
ja
inc
das
cmp
inc
inc
stos
in
xchg
and
cmp
xchg
stos
leave
hlt
in
push
pop
sub
mov
mov
mov
sub
push
adc
test
jmp
lahf
dec
ljmp
xchg
or
and
cltd
push
pextrw
xchg
jecxz
pop
xchg
cmpsl
daa
loope
in
mov
push
pop
mov
add
xchg
mov
pop
test
aad
in
push
push
jbe
jmp
bound
xor
mov
dec
xchg
js
mov
mov
and
negl
adc
mov
ret
mov
imul
pop
lea
out
mov
test
sub
gs
jl
jne
adc
mov
mov
push
je
push
iret
pop
aam
jge
mov
daa
mov
mov
stc
insl
xor
jl
sub
push
push
xchg
pop
mov
cmp
pushf
enter
bound
xchg
sbb
add
push
pop
xor
lahf
cmc
mov
push
adc
or
popf
xor
rcrl
xchg
lahf
aaa
and
cmp
loope
dec
out
subb
roll
in
push
pop
mov
jl
insl
outsb
aas
and
repz
aad
rcrl
pop
mov
mov
loop
mov
pop
filds
enter
cli
dec
sbb
mov
lds
mov
in
mov
push
lret
out
stos
lds
sahf
sarb
mov
lods
mov
add
int3
pop
sbb
mov
or
cmc
imul
test
fsubr
test
test
dec
pop
stc
cmp
xchg
repz
scas
dec
es
test
adc
sahf
xor
pop
aas
and
dec
mov
nop
pop
pop
mov
inc
cmp
mov
mov
jp
jecxz
shrl
push
mov
sub
cld
popa
xchg
xchg
mov
ja
mov
cmpsb
sub
aam
arpl
ret
sbb
pop
mov
jo
mov
push
mov
enter
pop
shr
mov
mov
das
dec
mov
test
mov
cwtl
aam
cmp
lcall
lret
add
aaa
lret
push
ljmp
mov
dec
aas
inc
adc
popf
jnp
sti
adc
inc
out
repnz
xor
sbb
in
cmpsb
push
lcall
mov
out
call
ret
scas
push
mov
cmc
inc
testl
pop
loope
jl
loope
mov
cwtl
dec
popa
lea
cmp
fildl
mov
daa
test
mov
push
jne
sbb
dec
dec
insl
movsl
pop
movsb
jg
cmp
aam
decl
addl
inc
cmpl
pop
stos
mov
mov
pop
stc
push
sbb
add
xchg
insb
or
cmpsb
fsub
in
pop
fidivs
mov
mov
pop
notb
inc
add
cld
popa
arpl
rcrl
mov
xchg
cmp
in
xor
lock
jl,pt
outsl
add
out
cmp
mov
or
test
mov
pop
addb
jmp
push
dec
mov
loop
movsl
fcmove
xchg
mov
inc
call
mov
lea
dec
movsb
enter
cmp
mov
mov
pop
mov
mov
aam
jp
lahf
push
out
mov
bound
dec
lahf
pop
add
mov
and
cmpsl
outsl
add
inc
cltd
push
cli
cld
mov
repnz
imul
cmpsb
xor
mov
cmp
ss
orl
xchg
mov
dec
cmpsb
inc
fistl
insl
test
dec
xchg
adc
fldenv
fisttpll
and
pop
idiv
stos
xchg
sbb
fadd
dec
xchg
out
inc
arpl
leave
xor
sbb
sbb
cmpsb
xchg
out
mull
loop
lods
xchg
and
jns
sbb
push
mov
testb
sub
repnz
and
mov
adc
pusha
fxtract
push
mov
cmp
ljmp
in
int
xor
in
sub
push
or
daa
icebp
xchg
repz
mov
call
sti
mov
popa
mov
stos
mov
movsl
or
pop
mov
xchg
mov
scas
movsb
inc
mov
jb
mov
jp
add
in
fistps
mov
leave
jge
in
add
stc
jne
and
scas
sub
movsb
shl
inc
popa
cmovnp
adc
daa
aam
mov
jae
add
ja
xchg
inc
cli
in
mov
jp
adc
out
les
cmpsl
push
jmp
or
mov
clc
pxor
mov
add
jmp
scas
ret
lock
sub
daa
mov
movsl
and
fadds
mov
loopne
inc
xor
es
mov
cvttps2pi
jge
aam
les
das
mov
sub
and
test
dec
jp
cli
fcomip
sub
ret
in
xchg
div
scas
subb
adc
push
aad
mov
subb
testl
fs
hlt
cmp
std
popa
fsubrl
aad
lcall
jle,pt
pop
lret
cmpsb
lcall
pop
push
loopne
push
mov
outsl
xor
pop
ja
packssdw
cmp
dec
push
pop
pop
jae
xor
out
lods
mov
loopne
add
aam
mov
jo
adc
xorb
icebp
test
pop
int3
mov
mulb
or
add
nop
outsl
dec
stos
or
xchg
ficompl
repz
fildll
int3
out
loop
cmpsb
cld
out
mov
cmp
movsl
jp
fdiv
xchg
mov
movsb
adc
xchg
ljmp
jo
xor
mov
scas
adc
and
mov
iret
pop
xacquire
sub
out
inc
dec
add
pop
out
je
fsubs
mov
push
mov
pop
inc
xor
out
mov
in
outsb
inc
mov
xor
loopne
pop
mov
cmp
iret
ret
sbb
fmull
aam
outsb
add
fistpl
push
addr16
jmp
lods
mov
cmp
sub
jl
cmp
sub
mov
out
hlt
mov
mov
jmp
aaa
add
xchg
cmp
cmpsl
dec
or
jne
mov
cs
xchg
xor
ds
mov
inc
stc
lds
sub
or
aam
jge
and
or
dec
loopne
inc
leave
push
repnz
pusha
icebp
and
and
and
cmp
xchg
arpl
xor
sbb
lcall
mov
cmp
jp
andl
fs
push
mov
pop
testl
mov
inc
sub
jo
cmp
sbb
mov
mov
shl
lcall
or
adc
addb
dec
aas
inc
xchg
mov
gs
cmc
sub
cltd
xchg
and
fwait
stc
je
xchg
cltd
add
outsb
sbb
add
test
jae
dec
nop
aam
sub
adc
shll
push
outsl
test
ds
lea
cmp
orb
insb
idivl
cmp
stos
addr16
idivb
jg
pushf
rcrb
mov
scas
pop
push
cmp
mov
loopne
mov
pop
pop
dec
inc
add
es
or
ja
pop
dec
ret
movsb
jp
in
push
cmpsl
jge
sbb
dec
bound
sub
adc
cmp
bound
cmp
aas
xchg
into
xor
cmp
sub
popa
hlt
sub
xor
or
sbb
out
add
adcl
adc
std
test
lahf
fisubl
inc
cld
mov
aas
cmpsl
sub
adc
lods
lds
subl
ss
mov
xor
cwtl
ret
mov
add
cwtl
sbbb
jbe
test
cmp
sub
lcall
cli
pop
pusha
mov
jne
xor
out
cmp
mov
test
scas
gs
pop
cs
insl
mov
push
imul
outsl
add
and
dec
mov
out
lock
lock
shlb
scas
mov
and
adc
ds
out
in
insl
pop
cmpsl
mov
rcrb
sub
aad
int
outsb
ficompl
xchg
cmp
sti
cmpsl
dec
roll
mov
daa
mov
adc
in
jnp
fcomp
sub
inc
enter
push
jmp
cmpsl
and
mov
inc
aad
mov
inc
cmp
push
cmp
scas
xchg
fstl
sbb
mov
lock
bound
mov
lret
xor
shll
mov
nop
mov
fs
cli
add
imulb
xchg
inc
push
jb
jbe
cmc
int3
popf
test
nop
mov
mov
mov
loopne
jge
and
cmpsl
xor
pusha
xor
and
fs
out
dec
pop
and
cwtl
cmc
jge
mov
push
xor
es
or
sub
pop
sub
xor
sub
lret
bound
sbb
xlat
lahf
xchg
xor
pop
fists
pusha
dec
orb
pushf
mov
rclb
repz
pop
sub
fsubrl
inc
out
call
mov
mov
jp
dec
fucomip
mov
outsb
add
call
stc
cld
lret
mov
sbb
mov
dec
popf
loope
decb
xor
adc
dec
xor
test
xchg
jo
xor
mov
add
or
cmp
jno
mov
jmp
enter
or
stc
mov
scas
pusha
rcrb
lahf
inc
jb
pop
rclb
dec
and
shlb
call
movsl
popa
movsb
add
mov
out
pop
cltd
dec
push
sub
andb
xchg
gs
setno
mov
mov
xor
fwait
jno
sub
enter
push
or
cmpsl
jnp
mov
xor
mov
add
cltd
test
lcall
xchg
movsb
mov
sbb
jns
test
ret
mov
mov
sti
mov
into
outsl
and
js
enter
rcl
sub
mov
popf
or
cs
add
lea
dec
leave
mov
dec
inc
mov
daa
negl
jo
cli
enter
xchg
daa
out
inc
cmc
ja
test
mov
dec
xor
das
xchg
into
jl
bound
aas
jmp
loop
jmp
test
pop
out
and
xchg
cli
loopne
sub
out
pusha
fcoms
gs
pushf
push
cmp
dec
and
aam
mov
dec
fcoms
mov
inc
mov
dec
cld
push
jae
enter
out
sub
lea
adc
cmp
or
fidivs
cld
cmp
enter
rolb
stos
jle
add
mov
stc
jne
dec
stos
mov
pop
fmul
xor
or
jae
pop
sarl
add
jle
or
cmp
ds
mov
sub
ret
xchg
pusha
cmpsl
mov
jecxz
pop
or
mov
out
shl
mov
movsb
test
mov
mov
out
testl
mov
test
addr16
pop
sub
mov
dec
inc
out
mov
xor
shrl
and
das
push
cmp
add
xor
cmpsl
outsl
mov
loop
mov
lods
call
in
enter
push
loop
mov
pop
stos
aad
add
dec
fnstenv
or
out
xchg
adc
xor
jmp
lea
jmp
aas
cld
inc
adc
dec
sbb
push
out
leave
jae
xorb
or
jmp
dec
aam
xor
movsb
fmuls
sbb
sbb
movsb
mov
add
int3
mov
xor
xchg
and
data16
and
icebp
and
push
mov
movsl
and
bound
cmp
test
int
sbb
out
sub
shlb
sarl
int3
mov
dec
adc
nop
lahf
in
cmpsl
lock
insb
mov
aam
in
sub
pop
sub
out
mov
xor
orb
decl
xor
testl
mov
mov
enter
clc
cltd
call
xor
xor
out
jbe,pn
add
mov
adc
add
mov
cmp
inc
andl
or
loop
aam
push
inc
sbb
jmp
stos
jmp
cmp
and
jnp
push
aad
aam
mov
loope
ss
js
dec
inc
and
imul
aad
loopne
jmp
aam
and
addr16
fiadds
jge
mov
ret
mov
and
adc
mov
insl
repz
pop
mov
add
xchg
enter
jnp
push
adc
insl
jle
aam
popa
outsl
ffree
pop
lods
lods
add
jg
pushf
mov
int3
divb
add
scas
lds
sahf
jo
sub
bound
test
int
xor
mov
mov
imul
lcall
call
sub
loop
out
testb
sti
fcmovbe
mov
mov
sbb
mov
cmp
movb
lcall
xlat
sahf
and
jmp
out
push
xor
sarl
shlb
jp
push
jnp
mov
call
outsl
sub
xchg
add
popa
mov
and
bound
or
lods
inc
mov
and
pop
xor
add
mov
ds
mov
popf
daa
adc
inc
sbb
jmp
lahf
out
enter
mov
mov
cpuid
xchg
out
fstpt
jmp
cmpsb
data16
inc
jge
fsubrl
mov
mov
das
shl
add
xchg
mov
push
or
add
fadds
pusha
adc
mul
cld
aam
xorl
mov
cmp
pop
push
or
negl
mov
jnp
in
add
xchg
xor
aam
mov
and
popa
cmpsl
add
out
stos
pop
pop
inc
leave
fisubrs
aas
popa
or
cmc
or
das
mov
xor
mov
ret
movsb
xor
adc
aam
push
loopne
outsb
mov
mov
and
or
mov
pop
or
mov
pop
enter
pop
sub
in
std
aas
iret
xorl
jb
mov
mov
dec
and
mov
mov
cwtl
inc
cmp
dec
outsb
cmp
dec
xchg
mov
repnz
inc
gs
dec
adc
mov
testb
ljmp
lcall
and
in
xor
ret
inc
jmp
sbb
mov
negb
nop
imul
out
lds
int3
jmp
in
mov
sbb
rclb
push
or
jo
push
jns
mov
cmp
mov
xor
fsubrs
leave
inc
inc
lods
adc
das
mov
arpl
xor
in
repz
or
lahf
xchg
ror
add
add
fiadds
mov
mov
push
negb
xchg
xchg
clc
mov
aam
mov
inc
dec
cmc
xchg
add
mov
sbb
mov
loopne
xor
lcall
je
repnz
adcl
dec
cmp
push
xorl
insl
mov
push
scas
sub
xlat
ss
add
iret
add
cmp
scas
adc
pop
icebp
mov
pushf
jmp
aaa
jb
loop
add
std
pop
and
fisubs
sub
lret
dec
push
cmp
mov
out
dec
xchg
push
xor
mov
dec
inc
xchg
scas
pusha
mov
movsb
out
jecxz
mov
jg
movsl
mov
popf
aam
lretw
pop
inc
frstor
pop
repz
imul
mov
push
and
mov
adcl
push
dec
stc
xchg
clc
adc
in
push
test
outsb
and
dec
mov
cmp
cmp
fcoms
mov
xchg
inc
ds
cmp
pop
mov
pop
test
ljmp
aam
add
movsb
cmp
bsr
ja
jge
out
repz
iret
or
jle,pn
mov
cs
dec
repz
loopne
pop
pop
lds
add
jbe
cli
and
dec
xor
idiv
jge
cmpsb
mov
mov
jmp
inc
or
dec
mov
xchg
dec
subl
in
jo
dec
ret
jl
pop
cmp
aad
fbstp
mov
fimull
cmp
ja
jae
iret
cmp
pop
cmp
in
js
in
out
repnz
xchg
lret
jecxz
dec
movsb
cmp
sbb
fucom
out
jb
jp
pop
in
sub
je
mov
inc
int3
pop
mov
fisttpl
imul
add
push
pop
stc
sub
jmp
cmp
inc
mov
push
dec
repnz
popa
jl
mov
repz
pushl
jne
js
pop
test
mov
loope
add
push
out
dec
mov
inc
aas
clc
cmp
imul
add
adc
je
movsb
pop
insb
out
jp
subb
xor
rorb
jg
cld
fs
inc
sbb
mov
xchg
mov
cmpl
fbstp
lret
adc
orb
xor
add
jmp
les
sub
mov
xor
mov
or
mov
inc
stos
adc
shlb
mov
dec
and
pop
hlt
dec
mov
jecxz
adc
mov
jl
in
push
arpl
aaa
addr16
dec
idiv
mov
add
sbb
lods
push
sbb
xor
clc
mov
ljmp
and
mov
inc
loope
into
or
or
cmp
inc
adc
mov
mov
popa
test
ficomps
jns
mov
lcall
popf
shll
rcl
push
pop
popf
push
jecxz
cmp
fildll
mov
inc
int
adc
sbb
andb
divl
sbb
push
gs
idivl
jp
cmp
icebp
out
push
in
sbbb
fsubrl
hlt
mov
test
mov
cmpsl
sti
sub
cli
lods
inc
test
xor
mov
push
stos
in
push
aam
mov
inc
adc
or
jbe
test
aad
sti
and
clc
repnz
stos
fimull
dec
scas
mov
mov
rorb
mov
cmp
mov
xor
or
aas
mov
sub
cmpsl
or
cmc
push
mov
popa
ljmp
roll
cmp
outsb
popa
xchg
sahf
sahf
outsb
adc
js
mov
sti
add
test
pop
imul
adc
in
inc
xchg
xor
mov
je
fs
jbe
add
mov
push
jp
mov
dec
mov
mov
push
and
sti
pop
movsb
imul
xchg
mov
out
pop
jno
dec
xor
cltd
push
mov
mov
ret
mov
cmpsl
iret
das
aam
mov
test
in
repz
inc
out
pop
push
gs
xor
push
mov
sbb
lcall
xchg
stc
lea
xchg
nop
sub
mov
push
xchg
cmp
cltd
sub
shll
jmp
push
fcomps
popf
fnstsw
push
popf
fs
push
cmp
iret
mov
enter
rcrl
fidivrl
ja
gs
add
mov
int
or
imul
inc
lods
int3
cwtl
out
dec
inc
test
mov
jmp
xchg
xlat
mov
scas
mov
gs
sarb
outsl
mov
fsubrs
das
insb
fistpll
sub
sti
pop
or
dec
sub
xor
mov
sub
cmp
scas
adc
push
push
mov
icebp
pushf
outsb
pop
enter
pop
sub
in
imul
into
add
mov
stc
mov
adc
mov
mov
pop
cmc
pop
psubb
lcall
leave
mov
mov
bt
aaa
inc
testl
mov
sti
sbb
or
push
inc
mov
xlat
test
lds
ret
leave
jg
lret
out
jge
std
mov
push
call
js
outsb
enter
out
loopne
sub
jl
aam
outsb
dec
mov
cmp
xchg
cmp
and
das
pop
insb
shrb
dec
add
mov
push
and
loope
dec
inc
sbb
dec
sub
jb
test
lcall
sub
jmp
xchg
sarb
mov
push
fildll
int
sbb
loop
dec
and
adc
js
mov
adc
sbb
sbb
push
cmp
mov
mov
shll
arpl
mov
pushf
cs
push
test
push
push
inc
mov
dec
mov
sub
mov
loop
idiv
mov
aam
xchg
sub
push
stos
call
stos
cld
inc
imul
cmp
loop
sahf
adc
pushf
and
mov
hlt
sub
rorl
jge
and
neg
jo
push
movsb
aaa
adc
pop
daa
imul
std
dec
sbb
test
xor
mov
pop
xor
outsl
sbb
test
and
in
jp
popa
mov
mov
mov
das
aaa
push
cmp
pop
lock
je
test
dec
stc
adc
dec
cmp
add
sbb
mov
push
es
pop
pop
shll
sti
xchg
iret
ret
xor
cli
jp
punpcklwd
mov
cmp
mov
sbb
mov
jecxz
lds
cmp
add
lods
add
jg
cmpsl
cmp
inc
ret
outsl
adc
fdivl
pop
xchg
aaa
and
dec
mov
add
je
lds
iret
aas
xor
xchg
aad
push
cli
fnstcw
ss
shl
mov
subl
iret
and
mov
in
mov
test
pop
pop
and
jl
movsb
mov
mov
in
and
loope
ja
push
sub
ja
inc
mov
rorl
jmp
sub
cpuid
mov
ret
popf
mov
mov
push
xor
lea
fdivr
lahf
loope
inc
mov
mov
or
cmp
es
mov
pusha
test
push
test
add
pop
jge
das
cmpl
pushl
xor
jns
xchg
out
cmp
sub
loope
jo
xchg
or
xor
movsb
loopne
mov
xchg
scas
in
stos
mov
xor
or
xchg
inc
mov
out
xor
mov
add
jge
in
mov
pushf
rcrl
add
ret
cltd
pop
or
out
sbb
mov
push
pop
mov
xor
lods
mov
movsb
push
mov
adc
ljmp
lahf
mov
jo
in
add
pop
enter
push
lea
xchg
jne
sbbl
sub
ret
data16
jbe
loope
jmp
ljmp
xchg
push
jmp
mov
or
test
dec
ret
cmc
cmpsb
stc
mov
rolb
xchg
push
and
popf
aam
mov
and
mov
out
jp
test
mov
push
aam
jmp
mov
rorb
gs
sbb
sub
test
fbstp
or
in
dec
mov
stc
pushf
xlat
std
mov
in
sub
and
or
cmp
jmp
cmp
aam
les
divl
sahf
mov
dec
out
ficomps
xor
push
and
ss
lret
cs
mov
insl
push
lods
and
aad
mov
inc
rclb
stc
movsb
hlt
pop
dec
aaa
dec
outsl
xlat
cmp
je
scas
cmp
arpl
movsb
into
pop
jl
enter
clc
in
stos
testl
inc
xor
in
andl
movsb
pop
popf
out
xor
push
push
movb
xchg
cmc
stc
out
loopne
push
je
cmc
dec
add
ja
or
mov
jl
add
orl
pop
cmpsl
shl
pop
push
jle
movsb
and
mov
les
mov
mull
sub
or
jle
lock
add
test
sahf
movsl
ror
stos
bound
sbbl
push
lret
dec
cmpsl
mov
dec
push
dec
xchg
stos
inc
dec
push
sbb
xchg
and
cmp
and
addb
jl
or
rcrl
sbb
shlb
divl
stc
jmp
fisubrs
or
xchg
pop
jne
sub
and
sbbl
adc
arpl
divb
dec
cmp
and
pushl
adc
bound
scas
outsb
out
push
pop
dec
xchg
call
xor
js
sub
dec
aad
shl
outsl
pop
jb
or
out
and
lods
int
outsl
cmp
cmp
sti
or
mov
inc
les
pop
inc
mov
add
in
leave
pop
les
cltd
aad
sbb
loop
das
movl
sbb
fmull
pop
jb,pt
aaa
pop
dec
pop
cmpsl
icebp
fistpll
stos
mov
xlat
test
rorb
ret
aam
addl
dec
mov
decb
mov
xchg
push
mov
outsl
inc
loope
shlb
mov
addr16
jp
cwtl
xor
lcall
pop
sub
mov
mov
negb
and
addb
fsubrl
lahf
or
xchg
cmp
mov
lods
movsb
xlat
pop
dec
sti
mov
decb
sar
mov
jno
enter
xchg
sti
leave
aam
cmp
mov
mov
movl
push
and
movsb
shr
filds
cltd
adc
loop
add
loop
xor
or
dec
iret
test
jmp
mov
frstor
out
popf
xor
aam
jp
sub
imul
test
pushf
jge
jge
adc
inc
pop
jbe
jmp
movsb
xlat
push
pop
dec
into
mov
and
repz
loope
jb
pop
lret
ljmp
mov
rcr
stos
inc
push
call
jmp
and
stos
inc
mov
mov
xchg
movsl
inc
mov
out
pop
das
push
out
jp
out
mov
cmc
stc
sahf
adc
cmc
std
add
cmp
pop
cmc
xchg
mov
repnz
in
pop
xlat
xchg
sub
jg
outsb
add
cmp
test
popa
cmp
imul
lds
ljmp
mov
or
lods
sbb
mov
adc
mov
test
mov
imulb
je
push
mul
mov
jp
loopne
mov
pop
mov
je
ja
fwait
shl
cmp
pop
dec
pop
frstor
fsubr
pop
mov
pop
add
xchg
jnp
sbb
test
int3
clc
inc
xchg
nop
js
jb
push
loopne
icebp
xchg
or
push
stos
mov
mov
loopw
fdivrs
fadds
sahf
pop
xor
inc
pusha
mov
push
push
ljmp
add
cmp
and
pop
cmp
jg
push
mov
into
arpl
xchg
std
mov
shrb
jge
sub
push
in
pop
cmp
cmp
xor
outsb
test
jno
cmp
subb
pop
xchg
popf
or
xor
inc
dec
outsb
enter
shrl
mov
jb
repz
pop
mov
stos
cltd
ljmp
or
sbb
jp
lret
repnz
lods
iret
imul
inc
test
stos
mov
or
out
or
in
mov
mov
fistps
out
mov
ds
dec
jo
imul
in
xchg
les
dec
hlt
scas
mov
sahf
mov
and
nop
or
push
inc
out
rcll
fsubrs
sub
leave
cmp
mov
fwait
mov
popa
cmp
cmp
decb
scas
pop
rolb
and
icebp
popf
into
arpl
cmp
fistpll
xchg
fmull
iret
xchg
and
leave
or
test
stc
aam
insl
sahf
in
jmp
sbbl
add
pop
fiaddl
stc
sub
insl
mov
mov
out
pop
xchg
jecxz
repnz
testl
mov
in
lret
int
add
outsl
std
leave
repnz
into
pop
lcall
add
aad
movsl
xlat
mov
lea
addl
mov
mov
xchg
mov
mov
jnp
pop
outsl
daa
push
pop
in
cmpsl
mov
sub
clc
mov
popa
pop
xchg
in
mov
jmp
push
jb,pn
jns
addr16
stc
mov
dec
test
sbb
jg
ds
xor
mov
and
test
enter
sub
pop
popa
sarl
pop
adc
jle
cmp
dec
sub
cmp
sbb
jp
mov
movsb
sbb
out
push
subb
in
xor
push
rcl
call
test
mov
jb
push
movsb
dec
push
adc
jge
mov
int3
pop
push
enter
adc
or
stos
xchg
or
and
shll
sahf
jbe
add
add
lods
jmp
cmpsb
mov
inc
mov
movsb
jb
sbb
mov
test
xchg
pusha
rcrl
imul
in
outsb
sub
xor
cmpsb
into
cmp
fcomps
lcall
mov
inc
je
sub
in
mov
pop
pop
xchg
mov
and
movsb
pop
or
push
cmp
xor
mov
popf
pop
test
das
sarl
in
aaa
push
and
popa
fbld
mov
cmp
cwtl
or
loopne
and
or
cmpsl
jo
in
xor
pop
xchg
clc
aam
cmp
mov
test
stc
mov
sub
mov
pop
pushf
ret
in
das
push
stos
cmp
enter
dec
pop
cmovbe
das
in
dec
adcb
repnz
mov
push
js
xor
mov
pop
ds
inc
mov
scas
scas
pop
xchg
push
mov
push
push
xchg
dec
push
jmp
mov
out
mov
sub
mov
andl
add
lcall
fstpt
dec
sbb
or
mov
and
movsl
bound
and
mov
shrl
lea
cmc
inc
lret
call
adc
scas
mov
rcrl
pop
repnz
dec
sub
notb
jno
dec
pop
insl
sub
xchg
push
adc
xchg
push
ret
sub
das
mov
add
push
xorb
xchg
mov
and
test
jmp
mov
jmp
popa
cmp
orb
movsl
xor
fistl
jae
xor
ljmp
int3
loope
xor
out
and
add
mov
popa
mov
mov
or
add
stc
jne
into
mov
mov
loop
aaa
leave
xlat
mov
adc
adc
jmp
ret
xlat
lret
add
lods
les
or
xchg
pop
jp
xor
in
mov
enter
sub
shl
push
test
pop
jl
andl
stc
cwtl
inc
ret
pop
pop
ss
pusha
das
mov
mov
mov
push
and
popa
add
cld
mov
mov
add
in
jecxz
pop
or
dec
cltd
int3
cs
pop
or
stc
mov
je
inc
dec
jp
cs
add
icebp
adc
aad
sub
leave
inc
or
imull
adc
jne
cmp
test
or
divb
unpckhps
insb
sbb
pop
or
lods
leave
pusha
cmp
cmc
lea
mov
and
loopne
mov
xchg
xor
pop
scas
mov
pusha
dec
and
popa
cmp
aam
mov
xchg
mov
dec
mov
push
outsb
test
mov
sbbl
lret
pop
loop
inc
lock
mov
and
or
sub
int
into
sub
pop
fsts
mov
sub
in
xor
mov
jno
jl
aam
daa
ljmp
push
loopne
aam
xor
xchg
test
mov
mov
jb
sub
cmp
xchg
loope
js
lret
aaa
mov
xorb
mov
arpl
xor
in
sbb
cmpsb
jg
out
loope
jb
das
adc
and
inc
sub
test
movsb
sbb
jnp
into
sbb
cmp
sub
call
inc
cmpsb
iret
inc
jge
xlat
mov
jb
add
jl
dec
jecxz
inc
mov
dec
push
aam
rorb
stc
cmpsl
jp
mov
pop
inc
inc
adc
cmp
inc
stc
cmp
mov
add
xor
test
xchg
ficompl
bound
jno
jl
jg
inc
fwait
in
lcall
inc
sbb
cltd
jp
dec
dec
sbb
mov
jno
in
dec
jns
xchg
into
lds
inc
jne
sub
jmp
xlat
mov
lds
hlt
fstl
mov
ljmp
jbe
call
inc
mov
adc
mov
lret
inc
ret
mov
int
test
je
xor
sub
out
mov
pop
or
jnp
cmp
ljmp
loop
dec
xchg
loop
xchg
lea
pushf
xor
std
xchg
test
int
movsl
inc
loope
jbe
shrb
enter
mov
ds
xor
iret
jbe
xchg
mov
ds
inc
ds
pop
xchg
scas
cs
add
mov
int3
mov
test
dec
xchg
mov
mov
sbb
dec
es
lods
sub
sub
jp
rolb
cmpl
or
in
loope
sbb
jbe
or
addl
cld
pushf
imul
jg
inc
test
ss
ret
imul
push
js
jo
js
pop
negb
repz
stc
adc
sbb
xor
xor
jo
fmuls
fimuls
cmp
andl
cli
aam
dec
or
mov
lret
jl
popf
xor
rolb
mov
jg
insl
jnp
ror
cmp
andl
int3
jns
dec
pop
jecxz
ss
cmp
dec
and
or
jne
cmp
pop
xor
sarl
addr16
subl
xchg
ds
repz
adc
lods
xchg
add
and
dec
cmpsl
sbb
jmp
popa
mov
mov
mov
mov
sbb
lahf
lret
mov
pop
mov
and
add
mov
iret
pushf
mov
in
cmp
inc
inc
mov
stc
or
inc
add
lea
shr
js
mov
outsl
push
rclb
pusha
fsub
sub
outsl
test
inc
mov
and
cmp
inc
in
loop
mov
rcl
shll
daa
stc
sbb
pop
cltd
xor
or
icebp
fcoms
ret
fwait
arpl
cmp
mov
loop
cmp
and
repz
ja
lret
addb
das
adc
xor
mov
adc
jmp
rorb
xlat
andb
push
mov
dec
in
lods
adc
aam
je
mov
mov
inc
mov
hlt
inc
hlt
ret
sarl
and
sbb
adc
inc
lods
aas
hlt
dec
xchg
xchg
insb
orl
rclb
das
jmp
inc
xor
dec
loop
ss
sub
jle
in
sti
push
pop
ss
or
xor
xor
je
add
enter
and
sub
loopne
xchg
add
pushf
xor
mov
jg
mov
in
or
xchg
add
or
push
and
cltd
bound
shll
push
lcall
cmc
mov
testl
test
push
push
mov
cmc
pop
push
sub
aam
shl
movsb
dec
test
push
mov
push
mov
scas
aam
mov
mov
out
rolb
push
pop
stos
sahf
mov
cmp
inc
inc
add
sub
sbb
psrlq
xchg
repz
adc
loopne
add
loope
mov
sbb
xlat
xor
dec
shlb
dec
aam
sub
sub
mov
ja
push
adc
sarl
inc
imul
or
jg
cmp
cmp
bt
ret
out
cmpsl
push
mov
mov
jo
xor
sbb
add
jbe
cmp
pop
filds
mov
int
lock
loopne
add
mov
cs
adc
mov
mov
mov
pop
mov
push
mov
or
mov
scas
insl
out
out
jb
fsts
std
mov
outsb
cmp
or
bnd
ds
dec
ss
in
jp
std
imul
cmp
mov
push
xlat
movsb
sub
xor
hlt
xor
pop
inc
pop
inc
rorb
leave
fisubs
jge
stos
mov
mov
or
jmp
testb
mov
cmp
mov
movsl
dec
or
mov
in
lahf
out
and
cmp
push
stos
stos
xlat
fcomps
or
das
xor
dec
hlt
jp
jge
mov
inc
xlat
test
repz
into
dec
stos
mov
sub
sarb
pop
imul
out
test
cmc
sbb
not
xadd
addb
mov
int3
stos
cmpsb
divb
fisttps
xchg
aam
dec
pop
push
aam
add
mov
arpl
xor
jecxz
cmp
lret
adc
movd
add
mov
jle
push
cmp
popf
sbb
push
je
mov
pop
dec
cmp
mov
aam
cmp
adc
imul
lock
mov
jp
xchg
push
jl
lahf
std
pop
scas
out
jnp
aas
aam
inc
sbb
cmp
xchg
cmpsb
pop
push
inc
or
mov
jo
dec
cmp
std
xor
adc
aaa
sub
ljmp
je
sbb
jns
jmp
test
subb
ss
movsb
stc
ret
mov
clc
in
or
mov
ficoms
inc
sbb
pusha
decb
shl
jmp
mov
cmpsl
inc
mov
mov
jmp
and
push
mov
cmpsl
shrb
push
popa
in
lds
adc
aam
in
lea
mov
jp
cltd
dec
aad
dec
bound
push
cmpsb
mov
push
and
stc
aam
adc
les
push
enter
dec
sub
lahf
test
sub
mov
enter
jl
lcall
mov
fcomip
cltd
out
inc
xchg
cltd
enter
xchg
cwtl
jno
sbb
stc
int
cli
jmp
sub
in
dec
mov
cmp
sarb
aam
adc
xchg
das
xchg
fwait
insl
pop
mov
cmp
pusha
int
fdiv
xor
loopne
mov
aam
jecxz
push
fstpl
outsb
xor
and
sti
into
xor
mov
shlb
push
mov
out
inc
ret
dec
push
jl
bt
test
mov
sti
addr16
dec
xchg
dec
popa
push
mov
and
dec
popa
imulb
pop
sahf
imul
stc
mov
push
testl
sti
shlb
imul
cmpsl
mov
daa
add
enter
pusha
inc
sub
pop
cmp
rol
out
sahf
sbb
mov
mov
xorl
mov
mov
mov
mov
mov
add
jns
rcr
fadd
das
mov
andl
and
jg
test
jbe
push
push
fcmovnbe
arpl
pop
mov
js
adc
in
movsb
out
sub
pop
pop
push
andb
pop
inc
ret
aam
adc
pop
mov
push
dec
movsl
sbb
stos
push
adc
leave
sub
pop
arpl
cwtl
movsb
lret
ss
outsl
mov
jmp
fwait
or
jb
mov
rcl
icebp
aam
sbb
sbb
add
jp
stos
xchg
rol
mov
popf
mov
data16
inc
mov
loope
ja
cmp
fcmovnbe
mov
pusha
enter
mov
inc
stc
out
adc
test
xor
lcall
cli
push
nop
fbstp
ss
mov
cmp
out
xchg
inc
xchg
pop
data16
daa
lea
loop
add
stos
push
jno
mov
rorl
ds
lret
cmp
sbb
cs
sub
push
jmp
mov
cmp
pop
mov
test
stos
int3
cmp
enter
xchg
sbb
add
mov
fsubrs
cwtl
dec
out
mov
jns
hlt
in
pop
and
dec
add
data16
push
sub
mov
add
mul
and
xchg
cmp
add
es
int3
bound
pop
inc
adc
and
pusha
inc
out
push
inc
aaa
lods
enter
imul
dec
push
leave
outsb
mov
cld
pop
xor
repnz
mov
jecxz
fimull
fildll
add
dec
add
pop
cwtl
cmp
out
outsl
xor
xor
outsb
jne
dec
js
jecxz
loopne
test
bound
xor
leave
mov
test
cmp
lock
scas
jmp
pusha
or
pop
inc
inc
loopne
mov
sbbl
sbb
dec
add
outsl
mov
dec
and
arpl
push
out
lret
aaa
clc
dec
mov
mov
pop
in
test
xlat
scas
sbb
mov
fs
les
inc
movsl
in
pop
repnz
outsb
shrb
icebp
adc
dec
aam
mov
pop
mov
iret
dec
pusha
or
mov
out
test
movsb
shl
mov
js
fiaddl
push
push
and
bound
jne
out
dec
cmp
mov
mov
mov
mov
lods
lds
jecxz
jne
jbe
push
or
or
push
cmpsl
scas
jbe
cmp
cmp
xchg
addps
sbb
dec
xor
adc
lods
mov
mov
inc
sub
push
mov
loopne
fstpl
mov
xchg
cli
stos
add
cmp
and
jmp
lcall
jl
insl
aam
insl
xchg
movb
inc
jmp
xor
pop
mov
pop
mov
sbb
and
pop
movsb
sub
mov
scas
lea
mov
mov
push
lcall
mov
and
or
add
push
xor
mov
jp
arpl
sahf
mov
out
adc
inc
sahf
cmp
aam
into
out
push
adc
cwtl
sahf
sbb
shll
xchg
popf
xchg
cmp
jo
cmp
leave
xor
sub
test
xchg
shlb
inc
xchg
daa
call
fs
cmp
arpl
jnp
pop
dec
out
cmpsl
add
in
bound
mov
int3
xchg
lret
pop
movsl
and
enter
xchg
dec
mov
fbld
insb
cmp
mov
in
jp
jns
ret
shll
sbb
mov
in
lods
fdiv
dec
out
int3
hlt
test
out
pop
imul
mov
or
pop
loop
cwtl
ds
mov
jge
xor
dec
ss
test
jnp
loope
scas
in
jb
dec
jne
xchg
xchg
dec
int3
jbe
arpl
mov
or
popa
mov
fs
or
add
fisubs
add
outsb
lock
fmuls
addr16
push
fwait
das
xchg
lods
repz
test
pop
outsl
arpl
aaa
inc
adc
aaa
jo
mov
stos
xchg
push
loop
pop
shlb
cltd
call
shrl
arpl
rcll
mov
pop
imul
xchg
mov
mov
or
out
adc
push
pushf
mov
mov
mov
out
sahf
in
mov
sub
or
roll
orl
test
inc
mov
aam
add
pop
enter
flds
popa
out
dec
mov
mov
cmp
or
int3
pop
jmp
push
inc
in
mov
mov
das
xchg
cmc
mov
mov
mov
pop
ja
subl
cli
rep
pop
aad
iret
shrl
in
sbb
sub
mov
sbbb
hlt
inc
jne
repnz
jecxz
fidivrs
or
add
mov
fdivl
push
scas
iret
call
movsb
xchg
shrb
mov
fidivl
insb
loope
call
dec
js
or
out
jecxz
mov
pop
xchg
inc
loopne
idivl
xchg
inc
xchg
cmp
nop
cmp
lea
pxor
dec
pop
mov
add
popa
inc
mov
jb
lods
mov
cmp
pop
es
cmp
xchg
out
add
add
rcrb
xor
popa
mov
xor
inc
xchg
xlat
cmp
mov
pop
movsb
inc
xor
aas
xlat
mov
gs
fs
std
aam
leave
inc
ja
fisttps
jb
lods
aam
and
insb
outsl
mov
pand
in
pop
dec
jecxz
cmp
add
dec
and
xlat
arpl
stc
movsl
test
mov
sub
inc
and
pop
sar
mov
jp
testb
add
mov
mov
data16
inc
jnp
push
lahf
sub
inc
insl
mov
add
rcrl
test
mov
fdivrp
xor
decl
testb
adc
mov
iret
rcrb
dec
xor
popf
arpl
repz
push
xor
bnd
mov
ljmp
rcl
mov
pop
insb
in
stc
push
sub
lcall
push
sarb
pop
sub
xlat
sbb
test
ja
loopne
mov
in
cli
outsl
andl
scas
or
pop
pop
cld
xor
shrb
sbb
mov
shll
aas
popf
push
lds
aaa
dec
clc
push
xchg
jae
and
iret
aad
shlb
jns
aaa
adc
rorl
jo
divl
inc
dec
or
lds
jne
sbb
in
outsb
mov
sti
mov
mov
inc
loope
cmpsl
dec
daa
shlb
xchg
testl
test
bsr
loopne
xor
je
pop
pop
int
pop
aaa
or
push
in
enter
add
sbb
sbb
pmaxsw
lods
bound
xor
and
push
loop
mull
jge
xchg
lcall
std
and
sbb
aam
jge
xchg
push
sahf
std
ficompl
fsubrl
cmp
pop
push
mov
std
cmp
loopne,pt
jg
test
stc
aam
call
ss
add
lcall
scas
sbb
dec
fnstenv
cmpsl
leave
cmp
or
enter
fldenv
aad
dec
mov
mov
ret
rol
mov
xorl
lds
pop
ret
adcl
sbb
addr16
in
pop
cmp
sti
js
popf
inc
or
movsb
jae
xchg
icebp
or
pushf
add
add
inc
mov
or
out
inc
mov
xorl
mov
jo
int3
inc
mov
mov
cmp
mov
mov
frstpm(287
gs
mov
jp
fdivr
mov
cmp
mov
aam
loope
int3
pop
add
mov
cmp
enter
lcall
movsl
test
negl
in
inc
and
sbb
adc
mov
mov
jp
and
xchg
addl
jmp
mov
add
and
pop
sbb
stc
in
pushfw
cmpsl
movsb
imul
cmpsl
test
aaa
bound
jbe
pop
inc
xchg
sub
ficoms
aad
ljmp
cld
or
jp
add
dec
hlt
cmp
lahf
inc
loope
repz
call
mov
out
inc
popa
test
jae
lea
lahf
jmp
inc
rol
push
inc
pop
mov
jecxz
push
lods
popf
daa
arpl
cmp
dec
rcrb
pop
incl
in
aad
jnp
clc
sub
sub
outsb
sbb
push
and
mov
jmp
mov
popl
mov
out
sahf
loop
lods
mov
ffree
outsl
notl
leave
xorb
les
mov
add
repz
in
movsb
scas
push
lret
aam
add
lahf
cmp
or
push
jecxz
cmp
sub
jbe
test
ljmp
xor
daa
mov
sub
add
icebp
addr16
addr16
jmp
lds
adc
mov
xlat
cld
push
loop
inc
into
test
adc
cmpsb
clc
add
ja
lds
cmp
outsb
enter
mov
xchg
push
jns
push
jle
in
and
inc
push
outsb
sti
xchg
testl
mov
ficompl
pop
xor
jmp
enter
dec
xor
mov
jp
mov
test
popf
std
aaa
subl
xchg
pusha
dec
lea
cmp
cmpsl
dec
mov
and
xchg
jmp
mov
movq
and
mov
xor
aad
mov
test
add
and
imul
ja
mov
imull
cmp
fdivrs
mov
inc
mov
or
sub
mov
lea
jmp
sahf
sbb
or
mov
scas
andb
fsubr
pop
jnp
rcr
push
jb
push
jbe
or
popa
ja
je
mov
add
xor
mov
int
cmp
xchg
push
xchg
lcall
pop
add
xchg
sub
movsl
scas
mov
dec
push
or
ja
aad
cld
sub
hlt
enter
in
icebp
out
xor
push
mov
mov
cmp
aas
outsl
popf
loope
xchg
or
addr16
xlat
outsl
lock
sbb
cs
cmp
pop
int3
pop
sbb
pop
inc
jl
mov
mov
inc
push
jmp
es
mov
mov
pop
mov
popa
imul
inc
enter
ror
dec
push
aad
dec
in
sbb
jl
test
cmp
cmp
jp
test
pop
fstpl
aam
cld
sbb
movsb
push
addr16
js
xchg
popa
lcall
dec
push
scas
xchg
mov
les
es
dec
cmp
hlt
sub
insl
xchg
pop
xlat
jne
mov
sti
cmp
or
xor
mov
loopne
sbb
push
insl
jnp
push
lods
mov
insb
rolb
mov
and
in
scas
jb
in
rcrb
dec
inc
stc
dec
lock
mov
and
add
dec
mov
sub
or
push
mov
sti
mov
arpl
mov
rolb
rclb
pop
or
xorb
fbld
enter
jle
gs
stos
aam
aad
add
imul
add
xor
loopne
mov
test
sub
loop
movlps
rolb
dec
dec
lahf
test
mov
adc
lret
add
adc
stos
pop
push
shll
subl
sarb
in
xor
mov
rol
mov
cwtl
mov
icebp
movsb
stos
adc
fldenv
andl
aam
loop,pn
cmpsl
ja
int
add
into
mov
mov
pop
push
xchg
jns
jle
adc
stos
inc
scas
ss
dec
mov
adc
out
aam
rcl
stos
andl
cmp
or
aam
lods
push
sub
test
popf
in
xor
add
rep
mov
inc
mov
shr
inc
ljmp
or
ja
movsb
mov
add
test
out
inc
test
scas
mov
aam
scas
js
push
enter
outsl
sbb
shr
andb
adc
rcrb
ja
sahf
xchg
out
sti
push
mov
sbb
movsb
sbb
pop
inc
xchg
jmp
aam
into
or
lret
mov
dec
fcoms
leave
xor
jmp
xchg
pop
xor
sub
inc
and
ret
sbb
idiv
hlt
mov
cli
cmp
jb
testl
lock
repnz
std
mov
daa
mov
loop
add
test
dec
jge
jne
ljmp
sbb
mov
add
aas
loopne
ret
stos
xor
iret
lods
dec
push
jp
std
mov
aas
jno
pop
mov
mov
sub
mov
enter
push
out
daa
shlb
mov
mov
dec
leave
and
lods
in
dec
rcrb
pop
ja
add
loope
push
and
shl
pop
das
aad
fdivrs
jnp
fwait
pushf
xor
add
test
dec
std
fisttps
jmp
outsl
decl
scas
mov
xor
cli
mov
lahf
out
mov
int3
cmp
lcall
je
pop
fstpt
inc
sbb
sarb
mov
out
sbb
lock
lea
arpl
or
inc
cs
dec
popa
mov
repz
or
cmp
mov
mov
ficompl
mov
jp
stos
out
cmpsb
lods
push
add
enter
stc
or
je
and
imul
and
cmpsb
sub
cmp
jne
mov
push
dec
outsl
mov
pop
aas
jbe
dec
fidivrl
scas
jg
dec
mov
rcr
dec
lret
lahf
test
roll
cmp
lcall
push
shrl
leave
push
stc
pop
sti
mov
lods
mov
adc
dec
shlb
mov
mov
inc
in
jle
xchg
cmc
xlat
test
mov
pop
fwait
stc
enter
fisubrl
and
inc
stos
in
stos
daa
adc
jnp
scas
sahf
enter
adc
lret
and
ss
dec
bound
and
icebp
cltd
or
test
stc
stos
sub
add
aaa
in
inc
xchg
cld
scas
pop
and
xchg
not
push
addr16
inc
mov
xor
mov
mov
and
adc
cmp
imul
lret
popa
rolb
or
out
mov
jmp
aad
jb
movsl
shl
int
mov
orl
and
jbe
add
shl
xchg
xor
xchg
mov
dec
sahf
cli
xchg
mov
nop
adc
ret
popf
enter
scas
movsb
inc
mov
push
mov
stos
cmpb
movsb
pop
push
lret
orb
arpl
out
out
mov
lock
aam
mov
add
sbb
xchg
repnz
jecxz
xor
dec
addr16
sahf
aam
add
cmovle
out
xchg
outsl
push
inc
js
fsts
dec
hlt
jle
ljmp
jp
ret
ds
psllq
mov
push
sub
mov
dec
pop
fstps
dec
movsb
subb
pop
fcom
cmc
ficomps
fs
and
dec
cmp
loope
or
push
push
out
mov
pop
add
sub
ds
inc
sub
hlt
dec
int
xor
mov
pop
out
mov
rclb
loop
sub
xor
pop
std
push
ja
inc
loop
push
pop
mov
aam
orb
sub
jmp
xchg
push
repnz
mov
mov
inc
sti
pop
sbb
cmpsb
adc
cld
mov
xor
hlt
xchg
jecxz
sbb
and
jge
addr16
iret
pushf
mov
mov
dec
ja
les
fisttps
aam
mov
scas
xor
in
cmp
mov
add
lds
cmc
mov
sbb
les
popf
sbb
lret
sub
aas
sbb
xor
jmp
aaa
and
pop
sub
pop
pop
and
xchg
dec
cmc
cwtl
fsubs
js
inc
test
inc
pusha
mov
cmpsl
sub
cmp
mov
daa
test
dec
hlt
arpl
xor
sbb
out
jno
test
sbb
xlat
jne
jmp
mov
js
cmp
js
mov
jl
add
pop
stos
or
je
fidivl
nop
lock
adc
arpl
push
jmp
das
cmp
aam
scas
int3
jmp
mov
adc
popf
xor
outsl
rorl
sarb
dec
jbe
out
test
leave
cmp
mov
fdivrs
je
insb
les
andb
push
insb
cmp
dec
cmpsl
add
xlat
dec
mov
sbb
and
pop
es
cli
jp
mov
lods
loope
mov
fmul
xchg
add
orb
ljmp
pop
lods
add
mov
push
repnz
pushf
xlat
movsb
into
dec
cmp
les
sahf
in
ret
and
outsl
mov
in
arpl
cli
scas
std
cmp
loop
or
push
ret
adc
enter
xlat
movq
or
sub
in
in
add
adc
scas
fidivs
es
push
pop
in
inc
ret
cmp
loope
mov
or
loop
filds
int3
sbb
xchg
jecxz
xchg
jbe
aad
add
incl
pop
jmp
or
fists
jg
lret
jecxz
mov
scas
je
mov
ja
mov
inc
aam
dec
gs
jmp
inc
cmp
add
pop
in
mov
outsb
data16
lods
or
scas
mov
jl
andb
add
dec
and
daa
cmp
loop
adc
jno
cwtl
aaa
mov
jl
mov
inc
push
push
adc
or
aam
pop
or
insb
or
iret
mov
fiadds
adc
sub
jle
cmp
adc
xor
leave
jmp
lds
mov
pop
push
inc
xchg
scas
repz
sbb
xlat
sbb
inc
xchg
aam
hlt
scas
mov
mov
in
das
inc
sbb
push
or
jns
mov
mov
fists
cmp
movsb
mov
mov
stc
aam
testb
mov
fdivs
jo
icebp
mov
adc
pop
jge
mov
or
and
ljmp
mov
xor
sti
jbe
pop
jge
dec
fwait
enter
xchg
or
mov
psllq
aam
mov
loop
sbb
mov
lahf
outsl
aam
xchg
jmp
sbb
movsb
xchg
mov
jo
or
push
mov
scas
push
lret
dec
scas
cmpsl
xchg
and
arpl
outsl
jp
sub
mov
sbb
das
mov
fdivrs
mov
testl
push
scas
push
xchg
inc
jge
push
negl
ljmp
mov
adc
xorb
in
cmp
divl
push
sti
xchg
mov
cmp
and
cmp
or
xor
pop
mov
pop
test
adc
movl
ret
sbbb
lods
js
aam
cmp
lods
outsl
push
rclb
loope
sbb
xor
call
mov
aam
in
push
mov
push
mov
mov
test
ja
loope
adc
cli
ss
inc
mov
insl
push
adc
test
ud0
aam
lahf
xchg
add
ljmp
pop
dec
jno
stc
aam
push
push
pop
cmpsl
jmp
xor
cvtps2pd
xchg
stc
inc
push
xor
add
test
mov
sbb
mov
mov
aas
lcall
pop
jge
or
xor
mov
out
fbld
sbb
es
in
bound
push
add
shrl
lahf
push
mov
sarb
out
mov
lret
fwait
mov
pusha
and
enter
movsb
inc
push
xor
insl
jo
pop
and
aam
cmpsl
mov
dec
xorb
subl
jmp
jecxz
inc
xor
enter
mov
cmp
nop
fwait
in
push
pushf
xor
or
and
xchg
sub
mov
mov
outsb
push
sti
add
cwtl
mov
lcall
outsb
and
aaa
aas
or
cmpsl
adc
es
movsb
sbb
cmp
or
ljmp
lock
outsb
cli
adc
sbb
or
push
jne
icebp
loope
scas
mov
imul
dec
movsb
cmpsl
movsb
fwait
cmp
cmp
mov
idivl
cmp
rolb
add
or
sbb
leave
adc
movsb
ss
aam
mov
push
in
sarb
dec
lods
cmp
out
arpl
cmp
jl
xchg
cmp
sub
sub
andl
mov
and
and
add
hlt
arpl
dec
push
movsb
int
imul
jecxz
imul
negb
ret
cmpsb
insb
xlat
jp
cltd
add
mov
mov
rcrb
negl
xchg
add
add
push
inc
push
jl
add
cltd
sub
sub
pop
outsl
dec
mov
jne
mov
push
stc
ret
fcompl
int3
add
lds
negl
in
imul
sub
xchg
sbb
pop
dec
sub
testb
mov
mov
int
ja
loope
xchg
hlt
sub
addb
push
adc
cs
repz
xor
xchg
lret
test
mov
inc
pop
cmc
addr16
xchg
lock
adc
and
mov
push
xor
cmp
loopne
jns
fs
xchg
sub
clc
out
jne
clc
movsl
dec
shl
pop
push
mov
and
out
das
cmp
hlt
or
adc
movsb
xchg
sbb
movsl
enter
scas
mov
out
pop
push
and
sbb
pop
lcall
into
inc
aad
mov
movsb
lret
ss
push
adc
sub
int
out
andb
ret
push
xchg
push
push
push
fmuls
ds
in
dec
mov
mov
add
cmp
pusha
xchg
loop
aam
push
xorl
cmp
dec
fwait
push
push
mov
insl
sarb
push
testb
loop
cmp
pop
aaa
in
jle
xor
bound
scas
mov
dec
pop
cwtl
test
inc
jae
inc
xchg
stc
xchg
mov
push
jmp
es
pop
push
mull
mov
fcoml
adc
es
mov
imul
push
movsl
mov
xor
inc
andb
push
inc
imul
cmpsb
aam
js
fldcw
and
cmp
fdivl
std
loopne
icebp
test
stc
out
or
hlt
sarl
ds
out
adc
sub
mov
lcall
pop
not
popa
ja
or
mov
xor
mov
jne
jl
cmp
fisttpl
sbb
adc
pop
clc
inc
leave
or
push
fstps
scas
jmp
pop
mov
stc
lock
cmpsl
lock
out
lcall
jmp
cmp
lcall
insb
mov
xor
icebp
inc
cmp
imul
shr
cmpsb
outsb
sub
mov
sub
cmpsb
mov
mov
mov
call
adc
xlat
xchg
je
sbb
or
mov
outsl
sub
xorb
mov
lret
test
test
mov
pop
pusha
lods
outsl
in
inc
pop
movsb
ja
mov
inc
sbb
ds
stc
and
dec
mov
out
push
popf
xor
mov
subb
fsubp
scas
cmp
dec
xchg
fcoml
adc
jl
xchg
cmp
sub
xor
jmp
pop
and
scas
movsb
and
jge
stc
sub
inc
into
ljmp
or
mov
mov
out
cmp
fisubrl
cli
stc
ret
and
pop
dec
test
sub
sbb
in
mov
jge
push
aaa
ficoms
sbb
outsl
xlat
mov
adc
out
out
call
lds
jae
mull
aam
mov
mov
jge
iret
lods
push
sti
push
pop
in
xchg
enter
stos
sbb
push
test
arpl
jb
push
movsb
xchg
cwtl
loop
xchg
ds
add
inc
pop
push
push
psrld
xchg
push
push
out
iret
bound
mov
je
negl
or
rcrb
push
int
push
sahf
ss
movsb
push
ss
stos
dec
fldl
push
adc
icebp
sbb
xor
sbb
mov
dec
popa
outsl
cmp
lret
pop
lds
push
jno
dec
xor
fisttps
sub
pop
fiadds
push
repnz
lods
dec
loope
or
aas
sbb
stos
or
scas
in
and
jno
add
dec
lret
sub
inc
pushf
mov
popf
addr16
mov
imul
jg,pn
repz
movsb
ret
lret
mov
jl
pushf
dec
push
xchg
sahf
icebp
jp
test
jbe
adc
mov
or
jp
mov
dec
inc
mov
jecxz
int
jp
aam
rorl
push
cs
and
dec
add
ficompl
in
lret
adc
adc
sub
cmp
scas
mov
jmp
add
ljmp
adc
aaa
xchg
push
scas
movsb
inc
outsb
js
cltd
xchg
lahf
xor
movd
call
xchg
es
sbb
imul
js
stos
out
fidivl
mov
mov
sti
xchg
shlb
dec
pop
jl
adc
loop
ud0
mov
in
inc
icebp
xchg
stos
stos
aas
dec
clc
xor
and
cmpsb
and
inc
pop
cmp
lcall
sarl
mov
aaa
mov
outsl
out
add
xorb
xorb
push
cmp
leave
adc
fistpll
pop
pop
mov
jecxz
lea
add
mov
inc
in
gs
sbb
and
jnp
movsb
lret
inc
cmp
and
nop
jbe
mov
lock
scas
aaa
jmp
andb
orl
sbb
or
test
popa
ljmp
arpl
cmp
ficompl
aam
inc
mov
mov
movsb
cmp
lods
jle
or
or
xlat
lock
fsubs
jecxz
cmp
sub
cwtl
out
sub
cmc
mov
fs
or
jne
push
xlat
pushf
inc
sbb
out
sahf
jnp
add
adc
xchg
cmp
mov
push
std
inc
in
imul
arpl
dec
mov
sbb
cmc
and
mov
adc
push
jmp
lret
into
mov
addr16
scas
cli
insl
inc
mov
adc
arpl
jae
ficompl
ds
xchg
xchg
call
fistps
enter
cmpsb
dec
jae
and
sub
pushf
mov
fsts
xor
mov
lods
aam
jp
and
gs
mov
dec
bound
push
arpl
fbstp
ret
jae
pop
in
add
push
and
xor
scas
mov
xlat
mov
cli
clc
cmp
into
outsl
mov
loope
inc
popf
popf
mov
repnz
push
add
and
mov
pop
add
sti
scas
aas
xor
aam
ret
fsubs
push
pushf
aam
sub
ss
and
adc
ljmp
cmpb
leave
push
mov
add
fildll
lods
jg
push
adc
and
cmp
mov
and
and
out
inc
frstor
mov
or
cwtl
pop
sbb
mov
test
test
test
in
dec
sbb
adc
xchg
das
inc
cli
rcll
pusha
pop
sarl
inc
outsl
xlat
dec
mov
and
out
imul
movsb
stc
ficompl
scas
les
mov
mov
dec
push
ds
out
ds
or
movsb
push
add
out
or
fists
scas
mov
out
ljmp
inc
xchg
aaa
popa
xor
or
xchg
fcompl
shlb
mov
hlt
dec
orb
shll
or
add
mov
outsl
test
sbb
popl
adc
movsb
pop
push
sarl
loopne
mov
enter
push
into
aad
mov
les
sti
lcall
lea
cmc
xor
sbb
cmpl
dec
outsb
data16
xor
test
mov
dec
pop
popa
sub
lds
push
cmpsb
ljmp
test
and
cli
xor
jge
xor
mov
mov
pop
add
bound
xor
push
mov
or
fldenv
aad
scas
enter
xchg
sub
adc
shl
jne
mov
mov
rcl
push
mov
in
lds
repz
mov
xchg
fcoml
push
sbb
inc
dec
xor
add
movl
cwtl
je
xchg
idivl
daa
mov
mov
lods
add
mov
jae
lcall
mov
or
xchg
mov
in
aam
arpl
mov
mov
jno
mov
mov
js,pn
dec
xchg
fcomps
stos
adc
jne
mov
lahf
je
adc
jp
xchg
cmp
fwait
leave
cmpsb
sbb
sbb
or
push
lfs
and
fwait
sbb
dec
fcom
pusha
cmp
sub
add
fstps
addr16
pushf
inc
xlat
je
hlt
decb
rcrl
imulb
pusha
mov
adc
clc
xor
fsubrs
cmp
adc
sub
nop
cltd
out
mov
movsb
sbb
inc
jp
push
pop
pop
mov
ficoml
mov
dec
imul
inc
sbb
repnz
sbb
xor
cmp
aam
das
xchg
lods
test
inc
sub
cmp
out
jb
rcrb
xchg
and
pop
adc
leave
popa
cmp
xor
mov
lea
pop
test
test
dec
jns
mov
outsl
movsl
and
dec
sbb
fstpl
lds
add
aaa
jnp
mov
addr16
and
jns
push
and
mov
outsl
js
mov
dec
out
mov
lcall
jb
lret
jae
scas
addr16
out
out
and
mov
and
mov
inc
jno
dec
lret
pushf
bound
inc
xchg
loope
inc
test
or
mov
pop
push
xor
mov
call
mov
aam
jecxz
mov
rcll
mov
ret
or
and
movsb
jg
stc
dec
out
or
in
fcomps
sbb
subb
and
pop
push
and
outsl
enter
rorl
daa
lcall
push
outsl
pop
lods
sub
mov
loope
aad
or
xlat
scas
outsb
inc
pop
sarl
adc
sbb
mov
cli
sub
jmp
arpl
ljmp
ret
mov
pop
sub
cmp
xchg
dec
out
sbb
je
add
adc
stos
aas
dec
xor
jns
fsubrl
sti
daa
enter
test
or
add
adc
xchg
mov
pop
inc
in
sub
xchg
sbb
adc
inc
mov
mov
clc
adc
stc
xor
xor
mov
adc
mov
or
adc
jp
mov
ss
add
sub
jmp
int3
sti
daa
xor
pop
pop
ret
mov
push
sub
sarl
mov
movsl
int
popf
loopne
fistpll
lahf
or
inc
mov
dec
in
adc
sbb
mov
inc
pop
test
outsb
xchg
imul
popa
das
aas
or
and
push
and
cmp
out
scas
jne
mov
jo
cmpsl
mov
repz
test
xchg
loop
insb
das
mov
into
stc
aad
cs
push
add
mov
stos
push
and
lods
int3
mov
cwtl
push
jae
aam
cmp
pushf
sbbl
add
mov
jo
pop
fstpt
pop
xchg
movsl
jne
test
jl
cmpsl
lahf
xor
sbb
jno
xchg
mov
sbbl
cmpl
es
aas
add
cmc
xchg
dec
mov
sbb
or
call
xor
fnstsw
mov
lahf
lahf
sub
fstl
xor
mov
xchg
call
push
faddp
imul
sarb
enter
sub
add
add
dec
aas
loope
jbe
mov
inc
cmp
dec
aaa
cmp
mov
xchg
rcrl
test
dec
es
and
push
addr16
fwait
scas
lcall
movzbl
scas
aas
dec
or
cmp
sbb
fnsave
mov
std
push
pop
add
outsl
jno
loop
mov
dec
aam
jb
aam
repnz
cs
adc
call
movsb
stc
and
xor
push
repnz
and
loop
into
rorb
out
push
mov
loope
sbb
cmp
clc
add
pop
adc
mov
inc
repz
insb
adc
lcall
sti
test
sbb
mov
cmpsl
jl
adc
rolb
sub
xchg
fidivl
mov
xor
lods
adcl
or
int
dec
mov
mov
push
shll
ss
push
in
mov
inc
and
xchg
jae
add
and
xchg
test
pushf
insb
add
sbb
jl
daa
jle
jp
inc
lock
ret
hlt
adc
push
pop
xchg
shrb
add
inc
jecxz
add
pop
push
mov
mov
pusha
or
sub
mov
ret
sub
pop
mov
or
out
jmp
popf
mov
dec
mov
push
sbb
push
scas
jnp
xchg
adc
jmp
insl
lcall
mov
aam
rcr
or
inc
xor
movsb
lea
ret
test
mov
mov
bound
lds
arpl
test
xor
sbb
fcompl
rolb
cwtl
dec
cmp
stos
jnp
lods
outsb
test
popf
push
inc
cltd
repz
mov
mov
mov
sbb
sbb
shrb
popf
jge
shll
out
mov
push
adc
xor
and
outsb
sub
xor
mov
and
dec
add
scas
ret
sbb
adc
or
mov
jno
mov
sbb
js
or
jmp
data16
cs
dec
xor
into
mov
pop
adc
enter
shll
insb
iret
adc
sti
mov
add
adcb
sbb
sarb
int3
dec
push
icebp
in
mov
mov
xchg
cmp
lcall
cld
add
cmp
sbb
in
xor
in
mov
xchg
ds
jp
outsb
mov
xchg
add
in
or
inc
lods
filds
stc
mov
dec
mov
out
cmovl
and
cmp
or
int3
jecxz
mov
and
les
lret
sbb
aas
aam
lret
xchg
out
dec
fwait
adc
scas
les
mov
add
mov
test
mov
nop
into
test
clc
xor
xorl
push
rcl
jl
push
push
ss
nop
mov
in
pop
movsb
pop
xlat
mov
cltd
ljmp
imul
mov
test
lock
arpl
mov
scas
lahf
jno
ljmp
shlb
pushf
pop
inc
addb
ja
dec
and
dec
inc
fldcw
out
cld
sub
inc
mov
fsubrl
and
loop
mov
pop
fidivrl
ja
out
sar
cmpsb
out
rcrl
nop
scas
mov
pop
jecxz
inc
cmp
push
mov
stc
cmp
pop
sub
dec
sub
add
push
xchg
push
mov
sbb
in
mov
mov
stos
mov
lcall
sbb
mov
ss
mov
jmp
or
nop
stc
lods
cmp
fnstsw
push
outsl
out
movsb
aaa
jnp
sbb
dec
mov
movsb
lcall
jge
mov
andl
mov
mov
jbe
pop
repz
es
stc
cmp
movsb
aad
sbb
divb
ja
popa
lea
mov
lds
in
xor
pop
sbb
loop
inc
test
xor
das
jecxz
mov
jne
mov
arpl
out
mov
lret
test
or
pushf
cltd
imul
push
lds
ss
popa
mov
punpckhbw
mov
dec
mov
mov
pop
mov
xor
out
pop
es
loopne
out
dec
cmpl
add
mov
jmp
out
aam
sub
or
sbb
gs
cwtl
and
xlat
andb
movsl
adc
scas
es
jl
sti
mov
xchg
test
adc
xor
cmp
mov
arpl
popf
jle
lcall
cmc
push
aas
stos
test
sbb
cmp
lea
fwait
clc
xlat
pop
popf
jecxz
xchg
push
stos
push
pusha
push
sub
loope
ror
pop
loope
loopne
adc
jnp
mov
stos
mov
ja
mov
arpl
rol
fists
scas
movl
repz
stos
scas
dec
or
iret
xor
jne
insb
or
out
push
push
test
push
mov
ljmp
inc
lds
push
inc
decl
repnz
mov
cmp
in
aad
jne,pn
sbb
ss
mov
lret
pop
pop
jp
cltd
jp
push
adc
sarb
dec
jb
adc
xor
into
jp
jnp
dec
push
xlat
dec
cmp
inc
mov
push
xor
cmp
out
out
loopne
xor
add
pop
xchg
bound
enter
fdivs
xor
rorl
sub
arpl
or
aad
lret
fists
popa
subb
rcll
adc
out
test
aam
clc
sbb
dec
pop
jno
pop
xorl
mov
and
daa
dec
orl
pop
mov
pop
int
push
jp
mov
jmp
loopne
ds
inc
pop
pop
pushf
sahf
out
nop
test
push
cmc
mov
sbb
call
outsl
in
cmpsb
rclb
data16
mov
cmp
int
cmp
ret
popf
pop
iret
jae
cmc
testl
rcl
pusha
and
imul
cld
push
jmp
and
or
push
xchg
xor
mov
xor
xchg
sbb
inc
movsl
ret
mov
mov
int3
jecxz
sub
stos
ret
jecxz
jno
sti
push
mov
decb
jb
mov
jbe
fldz
lcall
xorl
ja
shrb
and
negl
jbe
xlat
jg
jb
movsb
sub
push
mov
shrl
mov
xor
testb
jge
cmp
or
jle
xlat
push
cmp
rcr
add
sbb
iret
popf
xlat
in
cmp
xchg
mov
dec
mov
icebp
adc
ljmp
mov
add
in
and
cs
ja
lock
push
lock
adcb
jns
or
mov
mov
ds
mov
xchg
cli
repnz
pop
mov
lcall
cmpsb
loopne
xchg
mov
inc
or
sub
aas
or
leave
cmp
sub
pushf
jp
mov
inc
sub
mov
push
add
xchg
sbb
rol
inc
inc
push
outsl
push
outsb
dec
scas
jge
mov
push
insb
inc
divb
mov
cmp
jne
popa
addl
sub
shll
hlt
or
jge
fs
push
addb
dec
in
incl
sbb
and
sbb
add
mov
mov
dec
mov
jnp
dec
jb
sti
push
xor
cmp
call
xchg
mov
inc
cmpsl
test
jmp
loopne
mov
lds
mov
shrb
xorl
inc
and
mov
mov
mov
dec
jne
cmp
mov
xor
sub
dec
mov
outsl
std
jl
inc
jb
jecxz
jmp
aam
loop
inc
jne
cmp
in
mov
mov
fptan
xchg
pop
mov
inc
sbb
icebp
mov
bound
popa
inc
cmp
xor
mov
loope
mov
imull
or
xchg
cmpsl
rolb
inc
mov
movsb
mov
xor
cs
push
inc
dec
mov
or
mov
pusha
adc
xor
aaa
cltd
jp
bound
dec
pop
sbb
sbb
mov
pushf
daa
xor
add
hlt
ret
lock
xor
mov
xchg
pop
sub
sub
mov
mov
mov
aam
arpl
pop
daa
movsl
cmpsl
mov
insl
pop
dec
out
packuswb
xor
enter
in
dec
stos
shrl
inc
ficomps
test
jno
popa
or
inc
dec
in
pop
aas
push
mov
cld
add
and
repnz
inc
jno
hlt
jecxz
sbb
push
and
mov
or
xor
xchg
shll
into
xlat
dec
int
shl
outsl
cmpsb
xor
inc
add
mov
nop
cld
dec
inc
int3
cmp
dec
popf
out
sbb
cwtl
inc
adc
push
out
dec
rolb
pop
insl
xor
call
jae
sbb
out
repnz
sub
mov
and
cwtl
je
push
mov
popf
cmp
test
lea
cmp
fwait
in
test
movsb
dec
cli
xlat
arpl
insb
stos
mov
sub
sbb
jmp
pop
add
jp
mov
int3
inc
push
aam
sub
pop
adc
mov
push
pop
notb
stc
iret
leave
mov
xlat
aas
mov
aas
xchg
int3
inc
xlat
gs
or
aam
loopne
or
sbb
mov
and
into
sbb
scas
sub
fisubs
sub
cltd
pop
or
dec
sbb
cmp
aam
repnz
inc
test
sub
dec
push
push
test
cltd
call
xchg
cltd
and
sbb
gs
mov
inc
lret
mov
mov
jno
cmovnp
xor
xlat
movsb
popf
les
gs
cmp
aaa
push
or
or
cmp
cmp
std
mov
movsb
mov
mov
xor
lahf
cwtl
cmp
loop
jge
cmp
mov
mov
push
popf
sbb
xchg
and
test
arpl
shlb
add
xchg
pushf
push
jmp
sub
push
xchg
xor
outsl
and
xor
push
test
out
jg
mov
fldl
xchg
repz
sar
out
dec
or
outsb
mov
std
xor
inc
or
pop
xlat
xchg
or
aam
jne
jmp
stos
call
cmpsb
cmp
mov
cmp
push
sbb
inc
sub
loopne
popf
and
mov
in
repnz
push
clc
setno
cmpsb
add
in
xlat
scas
js
cltd
mov
testb
ljmp
nop
mov
out
loop
out
inc
xor
pop
adc
testl
and
cmp
dec
sbb
ljmp
je
mov
hlt
cs
or
sbb
cmc
leave
xchg
dec
mov
xchg
cs
iret
mov
sti
xchg
fsubr
aam
ja
aam
shl
cmpsb
jg
test
and
xchg
pop
or
push
cmp
mov
xchg
push
mov
add
popf
je
and
inc
jns
jle
shr
mov
pop
add
test
cmp
jnp
imul
cmp
stc
xor
fsubs
out
xchg
mov
scas
cli
push
out
pop
mov
cmp
in
jmp
fsubrl
in
xor
dec
cmp
loope
cmpl
xchg
aas
cmp
add
hlt
cmpsl
inc
movsb
je
pop
fistps
arpl
xlat
data16
inc
cmp
sbb
cltd
loope
xor
loop
sbb
iret
subb
daa
std
or
add
or
stos
mov
outsb
scas
or
inc
mov
mov
inc
mov
pop
mov
dec
inc
cmp
mov
sub
mov
out
inc
stc
fadds
test
or
mov
imul
add
push
mov
jp
sub
repnz
xor
jl
sub
addr16
mov
call
test
inc
inc
lods
cld
cmp
repz
inc
fnstsw
push
std
mov
xlat
decl
sbb
jl
dec
mov
out
fldt
dec
mov
cld
loope
push
fcomi
icebp
xchg
por
loope
adc
fwait
test
mov
aam
ret
roll
xchg
jg
in
mov
stos
scas
or
pop
inc
rorb
mov
es
add
movsb
rcrb
xorb
add
cmpsb
mov
leave
nop
cmpsb
or
mov
daa
pushf
xchg
std
adc
and
pop
loope
ss
mov
mov
test
inc
pop
xlat
daa
add
aam
cmp
mov
cmp
jns
popa
stos
in
fwait
inc
fwait
pusha
pop
dec
jno
dec
dec
xor
cmp
aam
out
stos
sub
loop
cmpsl
jnp
or
iret
xchg
push
daa
cmpsl
movsb
cmp
shll
mov
subl
sub
insb
xchg
mov
cs
push
jne
xor
pop
add
movsb
mov
enter
pusha
shl
jmp
pop
ror
scas
cmovae
jne
push
adc
pop
negb
jno
int
pop
and
stos
int3
xchg
arpl
into
lcall
inc
lahf
in
int
add
xor
movsb
leave
jg
stos
cmpw
shlb
push
mov
add
loopne
adc
aad
cs
aam
sub
xchg
jb
pushf
mov
cmpsl
cmp
ud2
aaa
insb
inc
cmp
dec
jp
push
push
ds
sarb
movsb
fadds
mov
cmp
add
in
cmp
ffreep
jmp
divl
adc
mov
hlt
inc
subl
or
push
jb
out
jmp
fwait
outsb
out
jb
out
add
cmc
loop
in
add
or
pushf
insl
xor
into
inc
cmp
and
mov
sub
add
mov
ret
sub
aam
push
cld
inc
fldcw
dec
ljmp
sub
stc
mov
fdiv
xchg
push
stos
sub
pusha
adc
xchg
loopne
or
aam
adc
int3
ss
nop
orl
dec
rcll
and
lea
jne
mov
aad
pop
xor
gs
cmp
dec
sbb
jmp
pusha
hlt
jmp
arpl
leave
out
cs
cmp
dec
fcmove
add
les
jb
aam
lds
dec
push
mov
inc
cmp
out
lret
fcom
outsl
inc
inc
aaa
sub
imul
cmp
xor
xor
lret
pcmpeqw
stos
inc
mov
aam
add
sub
int3
xor
xlat
push
pop
testl
push
sub
cli
lods
xchg
gs
add
aam
sbb
jns
push
dec
es
or
sbb
pop
sbb
pop
das
lahf
or
aam
bound
sbb
mov
mulb
or
adc
shlb
mov
insl
cmc
push
mov
jo
clc
mov
in
pop
mov
sub
sub
test
inc
cmpsl
push
aam
or
or
fisttps
cmp
lds
mov
cmp
or
sbb
mov
imul
sahf
dec
fcmovnu
aam
fwait
mov
lods
jl
pop
pop
ss
jns
jmp
dec
ficompl
sub
jb
xlat
inc
mov
ljmp
movsb
fstps
push
movb
mov
inc
mov
aam
add
add
cmp
cwtl
mov
loope
or
inc
sub
aam
sub
in
mov
test
scas
and
cmpsl
gs
rcrl
dec
mov
sbb
fstpl
out
adc
push
stos
sub
sub
in
test
loop
or
mov
mov
jns
xchg
shlb
lcall
test
mov
test
add
cmp
je
sbb
stc
push
test
stc
or
stc
cmp
in
push
aas
stc
add
sti
and
pop
bound
popf
outsl
pop
xchg
mov
in
xor
cs
pop
mov
xchg
fdivrs
and
rolb
jge
adc
or
dec
stc
sahf
dec
dec
mov
popa
sarl
sub
ret
aam
mov
test
cmpsl
cmp
out
ja
xchg
stos
push
aam
and
lods
jecxz
sarb
ja
adc
dec
adc
mov
inc
hlt
fdivrl
scas
movl
imul
push
sbb
int3
fs
sahf
and
jl
push
sbb
jo
ss
mov
scas
rcrl
ss
dec
sti
or
out
not
cld
in
xchg
rol
int3
or
nop
out
push
xor
sub
dec
out
cmp
jne
mov
enter
push
adcl
pop
push
inc
adc
cmp
sti
rolb
es
push
add
gs
sub
inc
inc
inc
mov
pop
imul
push
out
adc
mov
inc
inc
out
dec
pushf
aas
sub
in
pusha
enter
je
lods
popa
xchg
push
or
push
xchg
jle
inc
xrelease
xchg
push
adc
jnp
int3
and
jp
inc
sub
jg
enter
adc
push
xchg
mov
xchg
leave
mov
inc
fcomps
pusha
sbb
fsub
stc
aam
outsl
sub
pop
adc
mov
jb
mov
das
push
es
inc
rclb
test
insl
jle,pn
pushf
or
call
and
mov
lock
aam
xchg
or
scas
sbb
and
aas
or
push
cmp
clc
push
test
sub
and
dec
scas
loop
int3
jnp
inc
es
xchg
sbb
inc
and
icebp
mov
test
enter
mov
mov
inc
rorl
pushf
jecxz
cmpl
jnp
aam
inc
daa
jmp
xchg
ret
icebp
movsb
fnclex
hlt
test
dec
dec
ret
push
xor
cs
mov
sbbb
mov
andl
scas
xor
enter
imul
cld
scas
pop
stos
dec
movsb
fadd
or
fmull
sarb
test
loope
addr16
or
sub
outsl
int
mov
xlat
hlt
push
pushf
jmp
addr16
mov
jmp
lods
into
mov
push
pop
jmp
add
jl
enter
dec
dec
sub
or
stos
mov
dec
sub
cwtl
pop
add
in
rcrl
inc
sbb
scas
add
aaa
cmp
mov
loop
movsl
mov
mov
pusha
call
movsb
sarb
xor
cmp
bnd
lcall
stos
or
sbb
popa
and
jo
adc
movsb
sbb
aas
int3
cld
mov
and
cld
mov
cmp
ja
and
sbb
mov
enter
sbb
sub
mov
sbb
or
das
push
and
add
outsl
mov
popf
inc
mov
lock
and
cmp
and
pushf
pop
xchg
movsb
xchg
dec
lcall
mov
fidivl
fwait
outsl
std
inc
cwtl
aam
mov
sbb
repz
fxtract
add
ljmp
sbb
ficoms
xchg
lods
inc
jb
stc
adc
scas
and
push
test
jmp
fcomps
add
cmp
movsb
mov
xchg
sti
pusha
loop
pop
popa
or
adc
mov
push
mov
pop
sahf
mov
inc
inc
test
aad
add
and
pusha
jns
mov
cmc
mov
sub
aam
pop
mov
xchg
dec
lcall
repz
stc
xchg
push
fmuls
pop
jecxz
jns
aam
xchg
movsb
pmaxub
push
and
aas
add
mov
popf
dec
lret
cld
insb
int
scas
scas
aam
int3
mov
mov
lret
mov
sbb
adc
jns
xor
add
mov
mov
mov
add
xor
push
hlt
pusha
pushf
dec
pop
jmp
rclb
pusha
insl
shlb
cld
mov
popf
incl
iret
adc
mov
loopne
or
shlb
mov
shll
bnd
bound
xchg
fmul
fimull
mov
loop
cs
popf
or
loopne
mov
or
add
pop
push
fiaddl
rcrb
sbb
leave
out
loop
fwait
mov
out
test
stos
jne
and
add
call
scas
inc
cmpsb
push
cld
fsts
mov
push
push
xchg
xor
les
int3
addr16
pop
inc
movsb
les
orl
push
fsub
dec
mov
cs
sbb
into
pushf
shl
mov
loope
cmp
scas
ror
mov
mov
jnp
push
pushf
mov
push
mov
dec
es
and
sbb
pop
xchg
dec
xor
dec
ds
je
cmp
std
fwait
or
test
mov
outsl
pop
scas
cwtl
cmpsl
popa
or
jne
stos
outsl
repnz
dec
adc
xor
xchg
stos
cmp
xor
and
mov
dec
pop
cltd
or
sbb
and
xor
mov
jge
leave
mov
cld
cmpsb
mull
sbb
mov
xchg
push
arpl
cmpsl
rcrb
lods
ss
mov
mov
lods
mov
jno
sbb
add
dec
dec
jge
jp
push
jno
loope
clc
sbbl
and
aas
mov
dec
out
sbb
or
sbb
not
test
add
xchg
fdivrs
fsubl
xlat
movsb
inc
inc
mov
notl
jmp
movsb
pop
mov
lds
dec
int3
ficoml
sahf
mov
dec
jo
imul
dec
out
lods
push
dec
sbb
pusha
or
push
adc
or
outsl
test
pushf
push
push
sbb
cmp
lea
in
sub
cs
push
xor
stc
loop
cmp
add
into
or
and
arpl
inc
and
movsl
sub
xchg
shrl
xor
popa
push
adc
mov
out
inc
iret
out
mov
inc
sub
pop
int
push
imull
cmp
pop
push
pushf
mov
movsb
jno
jp
push
movsl
sub
out
add
jp
fwait
lcall
or
pop
push
cld
out
mov
push
test
lcall
push
mov
adc
call
aas
aam
inc
movsb
imul
sti
jno
mov
aam
mov
mov
js
iret
addb
adc
mov
mov
aas
push
mul
and
in
add
outsb
aam
sti
negl
push
jecxz
or
xchg
ret
test
jne
lock
cmp
mov
jle
movsb
rclb
arpl
mov
xor
in
mov
and
outsl
sub
or
inc
stc
mov
out
mov
add
out
cmp
push
pushf
test
mov
lds
popf
movsl
cltd
popf
jmp
cmpsl
lods
ss
adc
jbe
loopne
adc
xor
outsl
dec
out
insb
adc
jg
mov
into
mov
xchg
cmp
lret
js
popa
test
mov
aam
or
insl
jl
inc
and
fimull
adc
push
add
mov
adc
xchg
cmp
nop
adc
insl
mov
iret
bound
int3
inc
xchg
js
mov
mov
mov
repnz
cmc
mov
pop
arpl
insl
shll
aas
rclb
xchg
popa
in
sti
cmp
and
dec
add
andl
xchg
test
dec
fimull
jbe
mov
adc
or
cmp
inc
cli
jnp
sbb
xor
iret
test
dec
inc
ljmp
sub
fistl
push
pop
fnsave
ja
out
notb
movsb
incl
inc
xchg
std
test
mov
das
enter
rorb
or
push
vprotw
cmpsb
cmp
or
lds
jbe
mov
cmp
fnstsw
data16
xor
jle
mov
pop
fcoml
imul
mov
das
cmc
xchg
lahf
cmp
push
ret
cmp
clc
sbbb
shll
loopne
or
test
dec
leave
mov
xchg
jp
mov
push
fcoms
test
fisttpl
inc
out
rolb
fs
cmp
das
add
and
sub
mov
imul
mov
lret
outsb
loop
mov
shr
lods
jle
push
stos
sub
add
loop
push
lcall
inc
aas
add
add
xchg
sarb
jp
mov
push
pop
cmp
pusha
pushf
lock
mov
mov
loopne
mov
xchg
mov
out
imul
outsl
mov
fsubr
dec
jnp
jmp
sbb
xchg
scas
into
push
mov
dec
out
lret
pop
jne
jecxz
cld
jnp
mov
popf
add
cmp
call
mov
adc
adc
lcall
xor
jnp
loop
testl
pop
xchg
sbb
lods
movsb
es
or
popa
mov
and
mov
pop
xchg
add
fistpl
cmpl
sbbb
je
das
push
stos
fstps
orl
fwait
mov
daa
push
xlat
into
push
jp
ja
push
in
xor
cld
xchg
leave
mov
or
pop
xorb
jne
in
mov
aad
sub
sbb
mov
adc
sbb
adc
push
jecxz
add
cltd
fwait
mov
loop
mov
dec
mov
lods
lahf
sbb
lea
inc
data16
cltd
or
xlat
movsb
pop
hlt
jg
bound
xor
jle
jb
push
movsb
sub
fldt
test
xlat
in
xor
ror
cli
inc
lcall
lahf
jnp
push
in
fnstcw
xor
mov
push
pop
aas
mov
outsl
fbstp
dec
js
cmpl
dec
ror
mov
cmpl
in
comiss
mov
sbb
insl
movsl
mov
int3
pop
inc
adc
mov
lcall
cmp
pusha
movsb
xchg
mov
xchg
inc
mov
push
mov
test
mov
pop
out
xchg
inc
fadds
ret
movsb
dec
mov
ja
scas
cmpsl
adc
mov
xchg
mov
sub
jb
xchg
es
out
cmp
in
stos
mov
or
into
test
test
loop
xchg
jl
xor
cmp
mov
jb
or
pop
inc
and
and
mov
scas
sub
sub
lds
gs
ds
cmp
int3
mov
mov
lret
sub
dec
mov
dec
mov
inc
fistpll
jg
mov
jle
mov
jno
inc
dec
aad
int3
aam
dec
cmp
xchg
mov
xor
jge
lods
lahf
add
adc
daa
into
and
jg
cmp
adc
inc
in
loop
pop
add
jge
test
das
pop
dec
rcl
mov
pop
mov
push
sarb
js
aam
loope
gs
xchg
jb
or
and
cmpsl
bound
pop
xchg
leave
jecxz
in
iret
xor
orb
sub
mov
imul
mov
mov
jecxz
sbb
mov
dec
sub
les
ja
ss
push
sti
push
cmp
and
inc
mov
xor
push
scas
popl
jbe
adc
xlat
aad
aam
out
addb
dec
fwait
mov
fisubl
in
icebp
mov
mov
cmpsl
stos
in
pop
loope
mov
dec
pop
imul
or
fiaddl
xlat
movsb
and
mov
adcl
rcr
sar
outsb
jns
aam
pop
outsb
mov
arpl
xchg
sub
divb
add
add
xchg
idivb
mov
push
cmc
mov
or
test
icebp
xor
add
pushf
or
rcl
fdivrs
mov
mov
loope
enter
aam
add
in
push
or
jl
mov
mov
cmp
dec
sub
jns
scas
mov
jmp
push
mov
push
lcall
dec
sti
jmp
cmp
mov
aas
scas
aam
push
ss
inc
mov
aam
loope
cwtl
cmp
shr
xor
pop
pop
sub
scas
cld
sbb
aam
push
shl
sub
enter
fs
fisubs
push
mov
xor
add
mov
push
ror
shrb
mov
fs
scas
sarl
xor
aam
aas
mov
daa
pop
mov
push
lret
loope
jecxz
pushl
and
xchg
jmp
into
sbb
push
pop
xchg
sahf
push
xchg
jge
test
jp
repnz
xchg
mov
sbb
lret
jae
pushf
dec
outsl
mov
flds
pop
mov
jecxz
mov
dec
ds
ljmp
mov
sbb
mov
js
rolb
lahf
xchg
lea
push
or
fistps
and
aas
mov
xchg
cmp
aam
sbb
lea
popa
add
outsb
cmp
jp
xor
in
stos
pop
addl
dec
mov
not
jmp
sahf
push
jno
hlt
mov
arpl
jb,pt
addb
xchg
loop
stos
mov
and
leave
outsl
ds
jp
inc
adc
push
mov
jbe
jp
sbb
cltd
sub
and
mov
scas
mov
mov
ss
mov
pop
mov
push
push
leave
into
out
cli
jmp
xchg
sbbl
lods
add
jne
cmp
cmp
or
mov
push
sub
pop
adc
fisttps
movsl
push
xor
adc
or
add
cmp
mov
lcall
push
jb
add
jge
imul
adc
jnp
ss
aam
push
dec
gs
push
cmp
xor
sahf
add
int
sbb
scas
fwait
aam
push
dec
stos
pop
aad
int
pop
jne
shr
sahf
shl
mov
xchg
test
aaa
lret
xchg
jg
sbbb
iret
or
clc
add
lds
out
adc
lods
pushf
and
in
jnp
movsb
movsl
or
adc
movsb
add
and
cmp
call
addb
sahf
mov
xchg
push
arpl
or
fnsave
imul
subl
fnstsw
adc
lock
fidivrl
addl
popa
cmpsb
adc
xor
loope
stc
mov
out
jbe
mov
aad
jbe
shrb
in
gs
mov
pop
cmp
in
out
jg
inc
inc
outsb
pop
or
adc
jne
cmpl
mov
movsb
les
rcrb
pop
movsb
repnz
jae
or
push
xor
or
fildl
pop
sub
and
pop
out
test
lods
or
add
movsb
in
cmp
test
add
add
dec
add
in
dec
sbb
out
or
pop
outsl
jecxz
inc
out
jp
insb
in
mov
push
fisttpl
into
minps
sbb
cmp
dec
pop
nop
bound
ja
hlt
ret
jmp
ret
mov
add
arpl
jne
xchg
adc
mov
aaa
in
mov
mov
filds
add
shrb
jno
fbstp
mov
into
jge
and
call
mov
imul
fwait
lock
in
mov
mov
sub
fisttpll
pop
adc
dec
mov
jp
and
popf
mov
mov
push
cmp
cmp
xchg
mov
loope
jg
xchg
sub
scas
jmp
mov
inc
mov
dec
cmp
cmp
stos
push
mov
xlat
adc
sbb
movsb
cld
or
mov
lahf
lcall
rcrb
pop
mov
in
sbb
inc
sbb
scas
aam
lods
jb
cltd
iret
sahf
push
loopne
mov
outsl
push
and
imul
lea
hlt
pushf
stc
and
jle
mov
mov
add
das
loop
cmp
cmp
fsubs
dec
orl
loop
lcall
cld
xchg
lret
repz
push
inc
dec
mov
mov
mov
pop
push
cli
or
push
mov
shl
push
mov
inc
bound
lods
mov
lock
jg
jl
inc
fisubl
rcrl
jl
jb
cmpb
insb
push
test
cmp
push
fdivrl
lcall
cld
xlat
fucomp
incb
addr16
inc
stos
int
mov
sbb
sbb
jne
mov
cmp
cmp
test
add
ds
jb
inc
ret
pop
mov
adc
xchg
ret
enter
mov
adc
orl
mov
inc
fcomps
sub
add
push
mov
xor
cmp
add
jno
fldt
out
push
jp
imul
divb
push
cmp
out
adc
xlat
in
std
xchg
test
popa
test
add
mov
jmp
mov
popl
push
jp
jmp
pop
outsb
jmp
xchg
stc
pop
scas
and
ret
lahf
lcall
lods
pushf
aam
enter
iret
mov
add
popa
arpl
ja
enter
cli
scas
xchg
jge
data16
movsb
fmul
cltd
mov
mov
jge
rolb
sub
adc
mov
mov
dec
inc
leave
push
mov
lret
imul
mov
outsl
jmp
inc
incl
insl
iret
jbe
loopne
add
push
jge
fbld
iret
sub
cltd
pop
lea
pop
dec
adc
cmp
sub
mov
pop
add
lds
inc
xlat
jb
lea
out
pop
lret
xchg
enter
je
dec
jl
mov
jo
pop
sti
mov
shlb
sbb
fistpll
fistps
dec
mov
push
mov
enter
stos
sbb
popa
or
lods
mov
adc
xchg
xchg
inc
mov
enter
cmp
je
pop
idivl
cld
push
and
pop
add
imul
paddsw
ljmp
aaa
and
movsb
stc
mov
subl
hlt
mov
xor
pop
int3
das
rolb
pop
cli
add
test
aam
add
movsb
jg
scas
pushf
xchg
stos
lahf
movsb
mov
mov
ja
movsb
push
add
aad
mov
movsb
lds
stos
mov
add
adc
int3
or
push
popa
sub
stc
cmp
push
xchg
mov
imul
movl
sbbl
pop
inc
fldl
and
pushf
mov
jne
sarl
stos
ss
push
pushf
mov
cmpb
rcl
or
push
test
cmp
jl
lods
popf
movsb
pop
mov
fnsave
not
into
mov
sub
add
out
data16
pusha
mov
xor
push
test
jnp
jge
and
pop
fsubs
mov
add
dec
int
and
scas
or
lock
push
sbb
push
repnz
out
adc
mov
repz
xchg
gs
fimull
adc
mov
sbbl
mov
jbe
ret
enter
mov
sub
fldl
mov
jmp
jp
xchg
xor
lods
inc
call
add
xchg
gs
mov
fadd
lret
cli
ja
xchg
iret
dec
aam
pop
inc
loope
and
inc
and
adc
or
mov
cmc
xor
mov
sub
or
out
das
shll
inc
add
insl
cmp
mov
outsl
shll
test
adc
or
in
cmc
add
movsl
adc
and
lea
movsb
jle
cmc
das
stos
inc
test
out
inc
js
jbe
stos
mov
xorl
cmp
lcall
add
jns
sarl
mov
gs
cmc
push
andl
pop
cwtl
inc
cmc
orl
js
dec
lret
arpl
arpl
mov
xchg
add
adc
pop
mov
dec
push
inc
imul
mov
add
into
cmc
fsubrl
rolb
push
lea
insl
das
push
push
sub
test
iret
dec
leave
sub
imul
fidivs
push
shrb
repnz
dec
lahf
sub
aam
out
dec
pop
mov
mov
xchg
jo
sub
cmp
mov
idivb
jge
into
cmp
lock
sbb
xchg
mov
mov
popl
stos
push
loope
adc
fwait
dec
pop
sbb
out
mov
dec
enter
adc
inc
lret
lods
je
or
or
inc
pop
cmpb
push
mov
mov
pusha
repz
fldl
mov
mov
hlt
push
les
rep
add
inc
gs
mov
and
mov
jb
push
adc
sbb
inc
bound
fbstp
push
ffree
mov
pop
dec
daa
jge
mov
ret
mov
sub
sub
inc
mov
sub
lods
pushf
aad
sbb
mov
aas
sbb
or
scas
loope
add
sahf
xlat
or
mov
xchg
ljmp
jp
nop
jne
mov
mov
inc
lret
std
int3
mov
cmpsl
jecxz
push
into
neg
test
jecxz
jge
push
pop
roll
addb
imul
add
dec
push
repz
insl
ljmp
loope
ja
cs
adc
enter
or
and
jae
mov
lcall
cmc
mov
inc
dec
xchg
dec
xchg
cmc
cmp
dec
sub
jp
and
sbb
mov
gs
jp
inc
mov
mov
mov
mov
scas
gs
xor
and
mov
mov
scas
cmp
in
push
cli
lahf
cmp
push
mov
mov
aaa
fnstenv
call
add
add
and
push
mov
imul
cmc
sbbb
inc
dec
icebp
ficompl
or
mov
push
dec
scas
add
xchg
sti
and
push
mov
sbb
imul
addr16
sti
negb
rcl
jge
sbb
lret
jg
lds
call
or
insl
sub
mov
jns
stos
je
rcrb
xlat
sub
cmp
cmp
aad
test
icebp
jl
mov
jecxz
and
pop
mov
ja
fwait
enter
clc
into
mov
or
add
cmp
test
mov
cli
inc
loopne
push
test
sbb
add
cltd
fisubrs
scas
mov
mov
mov
inc
loopne
enter
and
cmp
xor
enter
enter
loopne
and
jae
pushf
aas
mov
int3
idiv
pop
lret
pushf
cld
lods
xorl
jae
mov
insb
jae
dec
notb
fdivs
mov
dec
mov
xor
iret
add
sub
xchg
enter
jmp
mov
cli
out
es
push
lods
scas
movsb
sub
enter
mov
or
adc
fdivl
sub
rorb
mov
sti
sub
sbb
xor
stos
jmp
je
outsl
push
test
mov
cmc
jo
ss
mov
or
pop
mov
je
movsl
stos
outsb
adc
jge
cmp
stos
mov
aaa
xchg
and
in
mov
push
mov
add
rclb
inc
rolb
int3
mov
aaa
jge
aas
subl
ja
xchg
dec
mov
jae
daa
in
fimull
movsb
cmpb
shl
outsl
mov
lods
xchg
jb
inc
mov
test
lahf
aaa
cli
scas
movsb
jge
and
lret
or
popf
or
mov
mov
stc
aam
lock
in
fs
mov
cmp
fistpll
xor
movsb
clc
mov
test
loop
out
add
lods
sbb
xchg
movsb
out
dec
fs
or
dec
andl
xchg
cmp
push
cmp
and
inc
mov
xor
pushf
sbb
loopne
fdivrl
nop
jp
stos
mov
fisubrs
dec
popf
push
loopne
mov
cmp
sbb
das
icebp
cmp
dec
lock
pop
mov
ss
dec
sub
mov
adc
test
dec
mov
out
fstpt
xor
es
mov
testb
jecxz
xchg
mov
aam
mov
das
mov
test
xchg
jo
sub
incl
shrb
subl
enter
push
pop
test
xor
sahf
mov
dec
push
cmp
cs
or
cwtl
adc
xor
movl
loope
imulb
pusha
cmp
mov
sbb
pushf
cltd
xlat
ljmp
dec
inc
mov
outsl
les
push
cmp
lcall
dec
inc
repnz
jne
adc
test
inc
enter
add
movsb
aas
push
hlt
stos
aam
rcl
and
add
sbb
test
inc
test
psraw
movsb
sub
loope
ja
gs
and
ficoml
testb
push
pusha
popa
xor
mov
xor
sub
dec
add
test
push
cltd
adc
dec
xor
add
sbb
andl
inc
jge,pt
mov
loopne
call
jbe
add
enter
xchg
sub
shll
xchg
pop
pop
out
mov
bound
add
std
cmp
sbb
sub
mov
xchg
mov
lret
notb
test
andb
inc
inc
insw
jmp
popa
mov
insb
mov
mov
in
xor
cmp
out
push
sbb
ldmxcsr
divl
add
mov
mov
mov
bound
cmp
xor
mov
pop
movsb
frstor
jg
std
gs
xor
fisubrs
lea
inc
sti
jnp
cmp
pusha
lret
out
in
adc
inc
cmc
stc
adc
push
pop
mov
inc
dec
add
push
je
mov
pop
aam
orb
jle
inc
push
jb
icebp
mov
das
inc
jne
arpl
int3
imul
cmpsl
xchg
lods
pop
xchg
out
inc
cld
mov
push
push
inc
and
mov
and
out
jae
mulb
xor
imul
push
inc
rorl
add
cmp
fistl
enter
mov
fsubl
jne
cld
aam
and
mov
popf
leave
arpl
adc
cmp
repz
out
imul
arpl
lcall
xchg
aam
mov
lock
cmp
pop
scas
leave
push
cmp
jb
mov
mov
fisttpl
xor
adc
outsl
jmp
sub
and
mov
or
push
xchg
test
lret
fcomp
das
and
aam
push
out
gs
or
jmp
jbe
fcoms
inc
sbbb
pop
xor
scas
jmp
push
icebp
mov
jno
das
popa
xorl
andl
jno
aam
adc
shll
pop
push
add
xor
jecxz
lahf
xor
ret
inc
push
sub
rcr
rcrb
push
nop
xor
stc
les
push
arpl
mov
call
out
and
in
xor
push
mov
xchg
iret
mov
shrb
xor
push
mov
dec
pop
xor
aad
push
arpl
cmp
mov
jb
ds
enter
jbe
popf
push
lahf
jmp
xchg
insb
out
mov
pop
loope
jle
lock
jae
pusha
outsl
sbb
or
es
dec
pusha
xor
nop
repnz
xchg
mov
mov
mov
adc
cmp
pushf
mov
mov
sub
subb
mov
in
sbb
sbb
orl
xlat
mov
stos
arpl
mov
push
idivb
aam
mov
and
sbbb
pop
push
loop
cmp
cmp
sub
cmp
lahf
sub
add
enter
clc
fdivrs
mov
add
loopne
cmc
scas
inc
mov
movsb
das
lods
dec
sbb
and
and
pop
movsb
mov
push
inc
sub
mov
loop
push
loop
stc
in
repz
enter
mov
cld
inc
push
mov
aam
sbb
fldl
addr16
test
fcoml
repz
xchg
pop
fdivrs
pop
push
adc
je
mov
inc
jo
sub
cmp
outsb
push
jmp
xor
lea
jmp
pop
pop
outsl
dec
shlb
cmp
pandn
cmp
lds
pop
mov
les
lods
jnp
loop
loope
lea
mov
adc
lcall
outsl
das
int3
out
popf
lret
addl
xchg
add
in
add
and
andb
and
lods
xchg
cmp
addr16
pop
jge
lahf
mov
add
jle
mov
mov
js
idiv
adc
cmp
push
movsb
outsl
xor
ffree
push
mov
fbld
add
es
lcall
mov
out
cltd
mov
fmul
cmp
sti
mov
popf
lods
xor
cmp
clc
mov
jmp
movsb
mov
mov
loop
movsl
imulb
push
mov
daa
xor
xchg
scas
es
js
inc
pushf
jp
bound
mov
and
mov
xlat
into
xchg
addr16
sbb
ret
add
sahf
lods
push
xchg
cmp
lods
xor
add
jns
in
mov
arpl
dec
jnp
mov
sub
add
and
test
data16
mov
xchg
loop
fcoms
mov
aam
dec
pop
xchg
enter
out
test
ds
aam
adc
or
pop
aas
cmp
out
or
les
cmc
sub
xchg
pop
jo
fimull
std
hlt
mov
popf
adc
ds
mov
and
mov
or
cmp
dec
jmp
aam
mov
in
shlb
sbb
std
out
cmp
aam
add
fnstcw
push
adc
cmp
inc
lcall
xchg
cmp
mov
mov
repz
cmp
pop
aam
mov
rcrb
rcll
imul
clc
aad
jmp
dec
jae
jecxz
aaa
or
push
mov
add
or
mov
ds
stc
movsb
jo
cli
repnz
test
cs
daa
mov
adc
ljmp
or
icebp
lahf
jne
in
xchg
mov
cmpsb
inc
lretw
jno
dec
add
cltd
js
movsl
dec
imul
aas
xorb
bound
push
andl
out
push
in
mov
inc
or
gs
mov
lret
into
add
xchg
mov
pushf
sbb
pushf
inc
nop
sub
fmulp
jge
lret
xchg
cmpsb
inc
add
mov
popa
aam
or
cmp
mov
push
cwtl
mov
faddl
cmp
into
ss
push
xor
sti
sub
movsl
cld
ds
pop
fs
dec
and
cmp
and
push
loopne
arpl
imul
xchg
ljmp
jp
stos
xchg
mov
cltd
imul
push
xchg
loopne
or
mov
adc
and
pop
xor
push
or
fdiv
mov
test
dec
bound
dec
shld
jge
pop
or
pop
adc
xor
push
pop
dec
or
xor
xor
mov
cmp
mov
push
nop
mov
pushf
inc
jecxz
add
dec
xor
cmp
sub
pushf
leave
cmp
in
clc
sub
int3
in
cltd
sbb
mov
lods
sbb
jbe
jne
jo
mov
aad
mov
aam
test
adc
stc
mov
cmpsl
mov
outsb
das
add
or
lret
mov
add
hlt
faddl
mov
shll
cmpsb
lret
push
out
shlb
lds
xchg
les
add
push
dec
mov
arpl
mov
sub
das
sub
rorb
fcoms
popa
push
cwtl
movsb
xchg
adc
sub
ljmp
mov
push
lcall
popa
scas
and
sub
push
sbb
clc
mov
mov
mov
and
and
push
push
mov
inc
call
cmp
mov
sbb
dec
aam
stos
ja
pop
outsl
mov
ss
jmp
cli
jg
inc
jns
and
int3
add
sti
das
js
out
mov
jecxz
fnstsw
popf
mov
push
lods
add
insl
push
inc
cmc
mov
xlat
test
add
subl
lock
cmpsl
inc
and
mov
shll
shlb
daa
fcom
data16
push
or
fdivr
mov
into
xchg
xor
mov
sbb
ret
mov
fistpll
aam
and
cmp
out
nop
xchg
icebp
mov
aam
lea
xor
push
jl
stos
add
sub
sub
jmp
jp
pusha
xor
pop
dec
add
sub
fdivr
adc
imul
and
add
inc
or
push
push
int3
jno
aam
push
push
jne
xor
movsb
aam
popa
sbb
movsl
popf
ds
cs
push
jmp
adc
movsb
fsubs
dec
leave
adc
pop
push
in
addr16
cmpsl
adc
test
adc
mov
mov
movsb
xor
jle
fstpl
mov
xchg
sbb
aaa
or
fadds
cltd
and
and
xchg
lods
enter
inc
pop
or
mov
repnz
mov
mov
sbb
mov
clc
popf
add
out
subl
dec
daa
mov
jns
addb
mov
adc
mov
dec
jg
out
push
inc
jno
cmpsl
jne
stos
pop
adc
xchg
sbb
pop
out
loope
hlt
sbb
es
sub
leave
jmp
mov
and
cld
cmpsl
and
sub
cmp
xlat
ja
jl
and
dec
mov
cmp
shl
mov
inc
jge
mov
and
mov
xor
jmp
push
push
mov
idivb
cld
xchg
lcall
bound
fdivs
popf
out
repz
fisttpll
std
cmpsl
rcrl
dec
es
dec
push
xor
popa
and
aam
stos
cmp
mov
in
add
jns
nop
jl
enter
cmp
aam
out
add
mov
test
mov
xor
jecxz
in
aam
daa
loopne
popf
push
and
gs
in
imul
push
inc
pusha
orl
cwtl
adc
adc
pop
jecxz
dec
and
into
xor
sbb
sbb
lds
test
mov
aas
sbb
cmpb
jmp
pop
test
iret
mov
insb
xor
xchg
mov
mov
fs
test
mov
mov
cld
js
adc
mov
pusha
xor
cmp
sarl
push
fcoms
pusha
pop
xchg
sub
int3
rol
pushf
fcoms
push
cmp
cwtl
test
das
dec
add
inc
mov
adc
loope
lock
jnp
das
jle
jmp
push
mov
icebp
jg,pt
adc
leave
popa
idivb
addr16
inc
outsb
gs
mov
movsb
jle
sbb
pushf
aam
orb
out
pop
sub
pop
or
test
mov
jo
insb
dec
sub
mov
pop
xchg
es
push
dec
cwtl
jl
adc
or
sub
push
xor
pop
enter
notb
popf
popl
stc
push
inc
mov
sarl
hlt
hlt
mov
jmp
xchg
scas
popa
mov
inc
popf
add
mov
movsb
lea
stos
xor
jmp
and
sbb
lds
cmc
pushf
stc
les
jecxz
fs
in
cs
not
sahf
out
lods
or
cmp
pop
mov
dec
call
js
movsb
jge
jnp
loopne
hlt
js
rorl
loopne
push
pop
lea
pop
pop
lret
call
mov
aam
xchg
dec
sbb
pop
fisttpll
int
xchg
pop
ret
dec
xor
sub
test
loop
test
dec
scas
mov
out
push
mov
lock
xorl
hlt
xor
imul
jp
or
or
jmp
sbb
adcl
push
mov
cmp
shrb
dec
je
and
mov
movsb
stos
jle
xchg
inc
bnd
mov
jg
rep
arpl
add
adc
mov
mov
sbb
lods
xor
add
int3
int
mov
fwait
inc
xor
fdivs
das
cmp
jmp
mov
xor
fmuls
and
pop
push
mov
mov
shlb
roll
jb
pop
push
stos
mov
cwtl
and
fistl
fsts
cmp
aam
fiaddl
fucomi
testb
icebp
clc
aam
dec
push
cmpsl
pop
xor
popf
js
daa
fldenv
cltd
dec
scas
xor
sub
mov
inc
test
adc
pop
jl
sbb
add
scas
into
sbb
mov
hlt
int
or
sbb
imul
mov
pushf
int3
aam
inc
stos
mov
test
scas
jb
fldz
std
pop
xchg
mov
test
mov
hlt
pop
sub
xor
xor
je
subl
inc
cmpsl
aaa
xchg
push
sub
in
ret
cltd
xbegin
aas
out
iret
sub
in
cmp
loopne
mov
aam
adc
fiaddl
das
sub
aas
gs
push
insl
or
cs
sub
xor
rolb
lcall
mov
jo
mov
dec
out
mov
cli
xchg
inc
test
xor
pushf
xor
cmp
out
xchg
in
lret
repnz
es
sub
mov
data16
dec
xchg
mov
xchg
mov
cmp
cli
mov
movsb
cli
shl
test
jne
pop
pusha
and
add
iret
sahf
mov
mov
jp
stc
dec
insl
pushf
push
aam
xchg
mov
add
or
popa
inc
hlt
leave
cwtl
jns
test
or
sbb
insl
scas
dec
iret
stos
scas
into
in
ljmp
cltd
shrl
outsl
add
push
add
in
xchg
mov
add
sbb
andl
dec
add
cmp
mov
sbbl
movsb
push
aas
test
in
leave
rcll
push
push
jg
cs
cltd
lret
icebp
push
lret
inc
adc
jmp
push
insl
jno
pop
mov
mov
push
jo
xchg
popf
jns
xchg
adc
stos
mov
and
sub
mov
js
das
dec
int
and
ljmp
sbb
test
out
cld
rcr
mov
push
ds
test
fwait
dec
outsl
inc
cmp
fisubrs
inc
shr
insb
xor
incb
and
and
xchg
adcl
inc
ja
rorl
lcall
mov
fidivs
repz
mov
loope
cmp
push
insl
dec
mov
cwtl
subl
loop
push
xchg
popf
or
notl
cmpsb
sub
jnp
cmp
jmp
hlt
jmp
loop
std
mov
dec
cmpsl
xchg
sub
gs
xchg
dec
ljmp
xor
xchg
xor
lds
es
xor
xchg
and
out
jae
inc
ja
pushf
cld
je
arpl
mov
cmp
aam
fisttps
mov
ret
hlt
aas
xor
jg
negl
sub
loop
push
dec
ja
lods
inc
pop
cwtl
jecxz
add
adc
ja
outsb
fldl
loop
sub
sbb
loop
int
mov
add
dec
and
xor
push
inc
lods
add
mov
enter
out
push
ja
ret
enter
mov
aaa
loopne
cmp
ficomps
into
dec
es
and
shlb
arpl
dec
jne
push
jle
cmp
dec
loop
test
jecxz
ja
jo
mov
stos
or
pop
jmp
pop
stc
aam
stos
sbb
leave
adc
sub
test
mov
aaa
sahf
adc
je
or
cmp
loopne
mov
movsb
pop
jne
cwtl
sbb
rcr
inc
pop
and
jmp
testl
adc
shlb
popf
add
inc
xchg
push
lea
cmp
arpl
pop
les
sbb
cmp
rcrl
sub
jb
movsb
int3
imul
aam
cmpsl
test
movsb
loope
insb
or
inc
push
xchg
adc
cmp
add
mov
in
enter
dec
das
xor
mov
xchg
add
out
dec
or
cmpsl
mov
loopne
dec
mov
jns
daa
out
stos
or
fcomps
sbb
cmp
or
mov
pop
sub
cmp
in
jge
fsubs
add
lret
in
push
add
jmp
inc
cmc
hlt
mov
pop
pusha
sub
jae
aad
sbb
aaa
jmp
mov
mov
mov
jns
add
jb
mov
xchg
rcr
jmp
lds
cmp
into
pop
inc
ja
enter
imul
xchg
in
aad
mov
test
pushf
outsl
div
xchg
sti
or
popf
jns
jecxz
push
shr
les
dec
popl
icebp
fstpl
sub
rorb
lret
in
jns
cmp
int3
xchg
out
mov
sbb
xchg
pop
xchg
sbb
jmp
mov
and
lock
xor
inc
repnz
push
xchg
shrl
pusha
or
movsb
dec
and
sarb
mov
into
mov
cltd
push
mov
jecxz
and
mov
jecxz
mov
mov
out
ss
jg
outsl
push
bound
lea
xchg
enter
ja
and
into
bound
sbb
fisubl
xor
call
sbb
mov
pop
ss
xchg
jmp
testl
int3
ljmp
shl
xor
push
lea
cltd
or
xorl
or
fsubrs
mov
stos
add
iret
sbb
orl
stos
jecxz
push
ret
mov
jb
inc
pop
xchg
pop
xchg
cmp
xor
cmp
dec
sbb
mov
mov
sub
or
test
or
add
push
jp
test
pop
and
mov
hlt
mov
add
cltd
stc
mov
popa
es
cmp
fidivl
push
mov
xor
push
push
das
and
mov
mov
mov
mov
sub
sub
scas
and
shlb
pop
add
jmp
inc
out
push
xchg
cmp
mov
inc
sub
das
andl
sub
jp
jbe
inc
mov
out
xor
adc
aaa
or
push
cmp
cmpsb
mov
mov
negb
cmp
mov
movsb
test
scas
mov
push
inc
stos
in
inc
es
cs
and
lcall
fidivrs
mov
rclb
mov
jmp
mov
daa
insb
mov
or
sub
out
mov
inc
dec
sbb
rcll
add
lea
mov
mov
push
cwtl
jbe
and
divl
imul
data16
xor
ljmp
pop
loop
sub
mov
dec
cmp
aam
mov
icebp
fs
and
enter
mov
and
pop
data16
je
jbe
cltd
outsb
in
push
stos
fs
pop
mov
test
dec
dec
out
sub
push
xor
sub
sarl
pushf
push
stc
pop
dec
inc
mov
inc
push
lahf
mov
jno
int
lret
or
bound
loope
out
sub
in
adc
xchg
inc
fbld
out
mov
pop
stc
xchg
movsb
ret
rcll
cmpsb
lret
sbb
lret
insb
fmulp
mov
aaa
enter
add
cmp
mov
jbe
ret
out
in
mull
inc
ja
add
dec
xchg
or
xor
mov
xor
push
inc
adc
ret
mov
lret
movsl
xchg
add
sbb
lcall
jecxz
and
mov
clc
rcll
pop
dec
es
lret
fildll
push
mov
ja
out
jne
sbb
dec
jbe
add
rcl
jnp
or
push
imull
pcmpeqb
ljmp
jmp
cmp
ret
inc
mov
jo
add
mov
xorb
loope,pn
cli
loope
inc
xchg
pushf
pop
mov
xchg
bound
sub
pop
xchg
xchg
inc
and
outsb
mov
mov
jl
test
pusha
cmp
xlat
cltd
push
test
inc
pop
pop
inc
aam
mov
lods
aas
or
cmp
cmp
cltd
pop
mov
cwtl
pop
adc
mov
sub
jl
sub
and
adc
idivl
push
push
jo
inc
das
add
fnsave
cmpb
ret
into
lds
xchg
add
cwtl
adc
xor
ret
mov
jns
lods
imul
inc
cmp
jb
loope
testl
mov
fsubs
stos
dec
add
inc
pushl
pop
push
mov
sbb
mov
dec
dec
push
and
icebp
js
in
mov
arpl
mov
pop
cmp
mov
jns
sbb
sbb
packuswb
add
movsb
enter
and
sub
mov
xor
lret
loopne
int3
mov
lret
inc
mov
jp
repnz
arpl
mov
adc
dec
loope
sub
jne
js
push
dec
sub
call
popa
cmp
call
jmp
fmul
mov
dec
add
xchg
popa
test
and
and
mov
pop
fldenv
mov
and
test
sub
pop
sub
mov
jae
push
sub
adc
add
mov
int3
jp
aam
mov
and
mov
movsl
mov
mov
movsb
or
mov
cmp
mov
imul
mov
mov
loopne
pop
jge
mov
sbb
aam
aad
dec
xchg
pop
mov
mov
loopne
sbb
testb
ds
jg
mov
aas
pop
sbb
jb
fisttpl
lea
popf
enter
mov
test
loop
push
push
mov
jbe
call
push
cmpsb
xorb
mov
sbb
loop
fstp
mov
and
movsb
mov
outsl
dec
fisubrl
cmp
jmp
mov
pop
sbb
jmp
lret
les
pop
aam
jno
jp
rol
pop
pusha
inc
addr16
pop
movsb
sbb
adc
leave
jecxz
incb
cmp
lea
jmp
std
push
pusha
icebp
bound
inc
and
or
push
sub
mov
adc
or
push
mov
or
test
in
fiaddl
test
add
test
mov
lods
jae
xchg
push
mov
iret
sahf
push
mov
addb
mov
mov
mov
addl
shr
popa
loope
mov
pop
mov
testb
fisttpl
xchg
jbe
out
pop
mov
add
dec
cmp
jnp
aam
repnz
ret
cwtl
jo
xchg
imul
or
mov
pop
or
mov
clc
pop
sub
out
mov
sub
mov
xor
mov
dec
jns
int3
iret
mov
mov
sub
push
sbb
xorb
es
sub
movsb
rolb
ds
out
repz
test
aad
push
sub
scas
xor
dec
add
push
mov
xchg
xor
sti
lret
pop
xchg
pop
icebp
or
inc
inc
mov
mov
mov
xor
xor
ja
mov
add
lcall
subl
push
testl
xorb
sbb
inc
enter
jge
std
bound
jge
push
cmp
adc
xor
or
xchg
insb
jmp
xchg
mov
pop
pop
inc
or
pusha
inc
cs
fldl
sbbl
cmp
dec
into
lret
ffreep
test
and
cs
or
mov
push
push
aad
mov
loope
cli
sar
xor
bound
jae
push
imul
mov
cwtl
call
les
js
mov
imul
hlt
jp
sbb
sub
or
cwtl
hlt
call
xlat
dec
xor
lahf
arpl
xor
mov
mov
in
out
and
mov
cmpsl
dec
out
ret
jns
mov
pop
sbb
cmp
xchg
ja
imulb
fwait
leave
mov
out
cmp
cmc
lret
les
sub
ret
inc
movsb
fsubs
adc
cmp
iret
and
push
lock
inc
fs
inc
inc
testl
sbb
popa
inc
push
adcl
cmp
pop
or
add
lods
data16
add
push
lods
icebp
dec
push
sbb
not
fs
adc
lock
andb
test
pushl
mov
mov
lods
ljmp
xor
and
aam
fisubl
jo
dec
fs
mov
jb
jmp
cltd
sub
aam
sahf
adc
cmp
enter
or
inc
jecxz
xchg
cmp
cmp
adcl
hlt
mov
inc
fdivrs
ljmp
out
mov
cmp
das
or
filds
sub
xlat
mov
jne
and
inc
add
mov
stc
cmpl
divl
jg
sub
fidivrl
les
shrb
xchg
je
push
add
mov
or
and
add
xor
lods
les
jg
mov
push
xchg
pop
push
test
lcall
insl
data16
sbb
add
add
mov
mov
loope
adcl
lret
xchg
xor
popf
mov
xor
lcall
mov
xor
mov
xchg
jbe
sbb
call
mov
cmpsl
negb
cmp
cs
inc
lock
add
pushf
fmuls
call
jl
inc
jno
loopne
xor
mov
or
or
inc
leave
adc
xchg
fwait
inc
dec
inc
das
dec
jns
sub
or
jmp
mov
mov
mov
loopne
je
mov
es
jnp
jbe
popf
daa
dec
jecxz
or
das
lods
inc
xchg
mov
xchg
push
std
aam
fadds
fwait
mov
cmpsb
pop
ja
cmp
xor
movsb
jns
in
lds
mov
shl
add
and
cs
fcomps
enter
fdivrl
mov
les
mov
inc
mov
sbb
xchg
mov
push
popa
pop
pusha
xor
outsl
add
subb
hlt
loope
shll
and
pop
inc
sbb
es
cvtps2pd
pop
sbb
jne
popf
es
test
dec
cmp
xorl
jne
in
out
scas
sarb
pop
xchg
enter
mov
scas
jmp
ret
rol
dec
mov
shll
aam
dec
movsb
mov
out
pop
or
outsl
icebp
aam
push
mov
pop
call
xchg
mov
and
subl
pop
pop
dec
xchg
cwtl
push
jb
sbb
shlb
cmp
pop
inc
leave
and
into
push
add
dec
xlat
xchg
push
inc
and
pop
aam
test
es
test
pop
push
pop
pop
loope
aad
idivl
stc
mov
cmp
cmp
xchg
inc
rcr
movsb
xor
dec
jle
ret
pop
add
inc
test
jg
adc
imul
xchg
jp
cmp
movsb
mov
mov
shlb
clc
xor
outsl
and
aad
mov
out
rclb
daa
mov
bound
sbb
in
lods
popa
int3
inc
subl
rcrl
xchg
in
add
popa
outsl
shll
fisttpl
inc
cli
stc
mov
dec
scas
js
push
mov
mov
cld
inc
add
rorl
mov
inc
jns
shll
add
pop
dec
aad
dec
xor
cmp
dec
sarl
add
out
jp
and
aam
andb
aam
add
in
fucomi
test
test
xchg
pushf
outsb
and
adc
add
dec
inc
and
movsb
dec
sbb
test
jecxz
cmp
and
mov
out
cmp
test
arpl
inc
movsb
mov
sub
mov
fnstenv
mov
dec
ret
mov
into
in
cmp
lds
jb
cmp
repz
test
pop
andb
add
movswl
cmp
popa
pop
jno
out
inc
enter
int3
imul
dec
push
add
cltd
subl
push
call
xor
cmp
pushf
adc
mov
bound
out
insl
pop
js
add
loope
inc
icebp
xor
sarb
inc
xor
mov
dec
cmp
lods
sahf
or
in
mov
out
fs
or
dec
mov
sub
push
outsl
mov
mov
sub
dec
jp
cmp
fwait
sbb
lods
xchg
xor
fstpl
pop
lods
dec
cmp
inc
mov
stc
or
movsl
lds
mov
and
xchg
mov
stos
loopne
xchg
icebp
push
test
addb
popf
fdivrl
loopne
push
or
in
clc
mov
mov
test
adc
cmp
popa
pushf
and
hlt
leave
in
mov
adc
into
mov
or
mov
aam
ret
jno
push
push
sbb
pop
and
lret
lods
add
sbb
cmp
ja,pt
mov
fnstcw
mov
and
movsb
sbb
xor
lock
push
rcrb
out
cmp
cmp
testb
or
outsb
std
ja
sbbl
loope
xor
mov
jp
ds
adc
icebp
lods
lods
aam
jne
dec
or
stc
push
fcmovnu
inc
mov
pop
mov
lcall
stc
dec
pop
inc
xchg
insb
mov
jmp
popa
repz
mov
jl
daa
cmp
xchg
mov
xchg
fdiv
xchg
xchg
stos
add
das
ror
pop
inc
fbstp
mov
arpl
push
jae
pop
in
int3
adc
mov
mov
aam
filds
arpl
jl
movsb
ror
fiaddl
inc
leave
mov
add
ret
or
pushf
mov
aam
sub
jne
rcll
ljmp
leave
mulb
dec
ja
mov
dec
jecxz
inc
ja
adc
ds
ja
lods
je
data16
lret
aas
ss
popf
mov
add
dec
sub
popf
and
stc
adc
add
daa
lcall
jmp
jecxz
stos
inc
inc
mov
cmpsl
and
sbb
pop
gs
nop
xlat
shrl
out
jmp
sbb
and
mov
aam
mov
test
ljmp
push
lret
lahf
sub
ljmp
loope
ds
push
lahf
hlt
outsb
ljmp
test
and
sub
push
pushl
dec
mov
loopne
aad
mov
pop
cmp
ja
adc
xchg
cmp
hlt
xchg
cmp
push
clc
test
dec
and
mov
mov
data16
ucomiss
xchg
je
and
cmpsl
movsb
fadds
xchg
add
lret
mov
add
cmp
mov
rorb
push
imul
jne
and
jecxz
shlb
test
cmp
das
add
mov
nop
cmp
adcl
mov
lcall
push
mov
cmp
or
loopne
sbb
adc
leave
test
xchg
aad
sub
cmp
enter
pushf
xchg
sub
push
aam
je
das
mov
jbe
loop
mov
xor
inc
dec
addr16
xor
adc
xor
jns
cmpl
mov
xchg
and
pop
dec
jne
rclb
icebp
push
ja
divb
add
popa
xchg
jmp
repz
and
mov
fcmovb
or
in
and
sub
mov
std
icebp
adc
ljmp
lcall
xchg
je
and
pop
ds
shl
pushf
xchg
and
movsb
pop
xchg
adc
adc
pusha
jbe
cmc
popf
or
adc
out
movsl
lock
arpl
divb
in
fldl
add
loop
scas
cmp
leave
loop
inc
loopne
das
or
xchg
test
bswap
mov
xchg
cld
xchg
sti
loopne
xchg
pushf
fwait
sbb
mov
loopne
sbb
and
or
call
xor
bound
sbb
push
insl
dec
jmp
movsb
loope
fwait
push
pop
movsl
pop
stc
inc
push
stos
fisttpll
ja
dec
cmp
inc
push
test
xor
imul
call
aam
adc
cld
adc
dec
mov
in
orl
dec
cmp
stos
add
push
popf
pop
xlat
fcompl
cmpsl
idiv
pop
mov
jne
sbb
int3
push
mov
mov
add
sbb
popf
jb
pop
pop
fsts
lret
addr16
cmp
jmp
inc
sub
pop
out
dec
ja
jns
mov
mov
jge
lahf
dec
sarb
cmc
fsubrl
jne
aas
cltd
dec
cmpb
mov
stos
mov
mov
jg
xchg
jl
mov
push
test
incb
call
test
fidivrs
cld
arpl
mov
lock
mov
pop
cmpsb
xchg
aam
in
inc
das
sbb
add
add
arpl
mov
cld
pop
lahf
cmpsl
add
mov
aam
leave
mov
dec
jne
cmp
ja
sahf
cmp
push
mov
test
ljmp
or
add
enter
cmp
fs
pop
cld
inc
pop
jbe
cmp
fildll
fisubl
push
dec
aaa
iret
mov
sub
adc
add
xchg
dec
loop
sbb
aaa
not
out
negb
bound
pop
inc
inc
add
mov
pop
xchg
frstor
inc
pop
cmc
bound
xchg
es
inc
mov
ficoms
dec
inc
aas
addr16
ljmp
push
das
shl
xor
dec
rorb
dec
add
in
pushf
out
dec
lahf
rclb
jmp
add
mov
out
call
adc
add
and
sub
xlat
or
sbb
dec
scas
gs
fistl
lret
nop
jbe
add
cmp
orl
push
mov
inc
addr16
push
mov
movsb
pop
cmpsb
sub
daa
mov
dec
xor
clc
mov
xchg
test
dec
cmp
test
adc
pop
xchg
popf
add
xchg
push
jp
test
jae
jne
adc
pop
cmp
cmpb
cltd
into
rcll
pop
stc
incl
jl
xchg
dec
jmp
dec
xchg
leave
shr
je
mov
inc
call
movsb
sbb
mov
mov
sar
xor
mov
mov
test
arpl
in
pop
xlat
push
jp
cmp
cmp
notb
mov
mov
xchg
fsubl
mov
push
and
nop
outsl
ss
push
push
rolb
mov
stos
outsb
scas
test
mov
jae
jbe
cltd
outsl
ss
xchg
pop
xchg
loope
xchg
fbld
cld
xchg
fisttpll
testl
in
in
faddl
inc
xor
bound
shl
fcom
adc
movsb
negl
mov
jbe
dec
mov
aas
pop
daa
xor
jg
cmpb
stos
fcomi
fimull
adc
popf
mov
mov
mov
rorb
pop
arpl
jmp
popf
mov
cmp
cmp
mov
jbe
and
pop
aad
pusha
push
or
mov
mov
in
jne
mov
jg
pushf
in
iret
pop
stc
imul
or
repz
scas
lds
lahf
add
insl
sub
xchg
inc
mov
jecxz
mov
dec
xor
fisubrs
sub
xchg
jb
inc
or
rcrl
sti
xchg
jno
enter
push
inc
mov
mov
inc
mov
cmp
lcall
mov
mov
jno
pop
xor
push
pop
mov
ret
imul
movl
jbe
inc
in
stos
fidivs
popf
xchg
aam
fs
bound
inc
inc
sti
mov
mov
les
jns
jmp
pop
cmp
cli
mov
or
jp
pusha
outsb
xchg
push
xchg
enter
es
xor
fmull
push
sub
aam
cwtl
loopne
test
sub
mov
mov
stc
rcrb
sub
xchg
xlat
dec
ljmp
movsb
in
data16
jmp
sub
jg
inc
mul
inc
mov
and
stos
pop
cmp
pop
adc
jo
mov
xor
loop
mov
enter
mov
mov
xlat
dec
in
xchg
mov
sub
jg
xor
dec
sbb
mov
bswap
in
xor
adc
mov
xchg
cld
adc
cmp
or
jl
mov
push
xchg
scas
into
imull
into
jle
scas
add
sbb
in
or
xchg
sub
dec
imul
jno
inc
pop
cmp
mov
mov
dec
icebp
roll
sub
mov
test
push
mov
lcall
mov
dec
lock
iret
add
inc
test
jmp
pop
mov
out
sub
mov
sub
xchg
out
pop
pop
or
jae
xor
xchg
loop
lcall
sbb
leave
xor
test
add
push
mov
mov
daa
ja
mov
inc
xor
pushf
mov
add
stc
in
mov
out
lds
sub
ret
mov
movsl
out
sbb
sub
sbb
aam
mov
or
inc
xor
idiv
clc
fdivr
add
call
cmp
jle
push
cmpsl
dec
push
cli
jno
ljmp
push
stos
test
outsl
call
mov
xchg
loopne
mov
adcl
adcb
out
push
sbb
mov
or
mov
mov
or
push
ret
mov
sti
pusha
push
mov
shr
pusha
stos
enter
xlat
fnsave
cmp
std
add
popa
mov
icebp
push
adc
aam
test
mov
pop
out
aam
pop
jmp
inc
sub
jae
fadds
movsl
jne
insb
add
push
sub
sbb
xor
push
mov
imull
push
popa
pop
bnd
pushf
jecxz
cmp
push
cmpsb
mov
rorl
rcrb
femms
ret
push
popf
cmp
leave
in
mov
or
mov
sarl
lret
or
popf
arpl
push
mov
inc
pop
pushf
and
addr16
mov
mov
mov
dec
enter
inc
ljmp
outsb
inc
mov
scas
jl
loop
adc
jle
andl
jmp
movsl
ret
fdivrs
aam
cmpsb
clc
icebp
mov
push
sub
negl
sub
mov
test
jbe
fnstenv
mov
aam
mov
fdivs
add
or
mov
add
cmp
xchg
inc
push
pavgw
jge
pop
inc
push
and
dec
loope
fsub
aam
iret
in
fs
aaa
lods
inc
adc
mov
fcoms
pop
add
ljmp
inc
xor
and
mov
test
clc
aam
testl
inc
cli
jae
lcall
jmp
sar
vpcmpeqb
sbb
sbb
inc
divb
out
push
xchg
lods
loop
inc
adc
arpl
and
push
clc
in
adc
mov
es
pushf
and
inc
loop
fsubrs
xor
and
xlat
inc
into
dec
fildll
ds
negb
lcall
cmp
xor
test
jnp
movsl
sub
jp
pushf
pop
ficoml
sbb
or
lcall
inc
adc
ret
clc
mov
dec
outsb
dec
sbb
or
popa
ds
or
push
or
out
push
aaa
push
jb
hlt
out
mov
mov
xchg
push
stos
in
mov
xchg
and
jne
jg
adc
hlt
scas
or
ljmp
aad
out
mov
hlt
lods
data16
aam
orl
decl
stc
lcall
and
adc
mov
mov
cmp
pop
orb
mov
bound
cmpsl
pop
mov
jmp
inc
jne
out
into
or
popf
sub
push
sub
repnz
out
jmp
pushf
jp
rcrl
decb
lcall
sbbb
inc
shrb
jns
xor
pextrw
push
jne
loop
pop
push
dec
fldenv
loopne
rcll
in
in
mov
orl
xchg
jae
ja
dec
mov
or
in
mov
or
movsl
pop
mov
mov
pop
in
mov
mov
cwtl
mov
std
pushf
fnstsw
jl
mov
jne
push
inc
xor
ljmp
pushf
cmp
xor
ficompl
cli
dec
cmp
mov
add
rcrb
rorb
or
ret
dec
inc
cmp
inc
mov
fs
jo
adc
mov
add
inc
arpl
xchg
jo
pop
and
fcmovbe
xchg
cmp
std
mov
out
mov
push
cli
mov
out
and
xlat
lahf
inc
lea
sbb
pop
mov
and
push
lods
push
jp
xchg
fdivrl
leave
jecxz
je
ror
out
aad
and
inc
cmpsl
mov
push
mov
cs
stc
in
andb
ret
aaa
inc
add
xlat
and
mov
out
mov
subb
xlat
arpl
jp
mov
popa
aaa
jnp
dec
mov
stc
inc
pushf
popf
or
fldl
jnp
mov
test
sarb
inc
xlat
push
adc
dec
push
adc
jno
sbb
adc
mov
loope
jmp
rorb
cmc
pop
stc
scas
mov
lods
jae
push
cmpsl
cmc
inc
loopne
mov
add
inc
scas
out
scas
xchg
stos
push
dec
test
orb
and
jb
jae
mov
sbb
imul
cmp
cmp
xchg
cmp
decl
fwait
adc
test
vminpd
int3
fs
je
jg
sbb
pushl
leave
push
push
dec
jge
pop
xor
cmp
mov
movsb
jbe
pop
mov
and
aaa
sub
sahf
flds
pop
xor
clc
mov
out
mov
out
in
inc
cmc
es
and
les
mov
inc
sbb
xor
popf
dec
ror
enter
or
mov
mov
sub
push
push
mov
push
lods
mov
stc
mov
orb
testb
ret
clc
inc
addl
mov
inc
xchg
pushf
fnsave
mov
nop
call
hlt
sub
clc
push
mov
and
leave
cmp
fucomi
push
out
push
push
lods
pusha
lea
iret
mov
repz
push
lock
mov
pop
test
pop
lea
pop
xor
mov
sub
mov
jge
bound
dec
aaa
sub
sbb
sbb
mov
cmp
add
inc
sbb
sbb
sti
outsl
mov
mov
mov
daa
lcall
jb
mov
cmpsb
repnz
lods
sub
mov
mov
fsubrl
jne
xchg
in
jge
dec
sub
sub
ret
outsl
xor
enter
insl
mov
adc
in
lods
mov
js
aam
mov
cmpsl
movsb
rolb
inc
mov
mov
repz
scas
add
push
xlat
sbb
dec
mov
sub
mov
int3
xchg
icebp
inc
insl
xor
mov
je
popf
ljmp
into
pop
out
jbe
js
ja
jno
iret
popf
xchg
mov
inc
mov
cmpsl
jmp
or
push
jmp
aaa
into
dec
rolb
cmp
pop
xor
inc
aas
inc
sub
insb
iret
cmp
mov
arpl
movsb
rclb
pop
aam
jge
xchg
add
mov
jo
mov
fdivrs
push
pop
jecxz
mov
push
add
sub
adc
out
xorb
mov
bound
dec
mov
ret
std
sub
jb
repz
sub
push
test
movsb
clc
cmp
aam
in
repnz
and
lahf
mov
lods
test
and
insl
push
in
mov
sub
cld
gs
rep
mov
in
mov
dec
int
cmpl
loopne
pushl
xchg
jmp
mov
mov
hlt
pop
popa
sbb
loope
das
bound
adc
lea
dec
and
sub
stos
dec
xchg
lret
je
xor
stos
add
daa
sbb
xchg
call
inc
dec
push
xor
jp
inc
daa
in
mov
push
xor
cmp
xor
fs
mov
mov
lock
std
rdpmc
fmull
jno
out
mulb
loope
mov
mov
in
nop
adc
mov
push
clc
int3
inc
xchg
mov
inc
mov
fmuls
test
xlat
movsb
mov
icebp
adc
lcall
add
cmp
lods
aaa
orb
dec
mov
pop
mov
outsb
mov
in
sbb
popf
xchg
fnsave
xchg
jb
fdivs
arpl
clc
gs
scas
shll
aaa
push
jmp
ljmp
xchg
sub
call
mov
lock
enter
pop
jmp
jno
adc
ja
adc
pop
inc
push
daa
add
mov
ljmp
mov
out
loop
pushf
mov
fldenv
scas
mov
mov
push
xchg
pop
aam
movsl
negl
hlt
fidivrl
in
bound
mov
mov
add
inc
dec
mov
adc
out
dec
xchg
push
inc
pop
inc
pushf
cmpsb
jno
rorl
out
cld
sub
mov
outsl
mov
dec
jb
mov
out
rolb
in
dec
dec
mov
mov
xchg
mov
xchg
inc
mov
movsb
push
sbb
loope
mov
filds
sbb
repnz
test
int3
jge
and
mov
mov
lahf
into
xchg
mov
das
popa
add
cmp
sti
jne
iret
jmp
repz
xlat
shrb
cmp
xor
inc
mov
cmpsb
and
jne
jmp
arpl
and
lock
sbb
sub
aad
sbb
popa
dec
insl
push
sbb
clc
cmp
test
popa
inc
dec
in
ja
lock
enter
lds
test
mov
dec
lock
icebp
pop
aaa
xchg
sti
sub
or
out
sbb
cmp
adc
not
adc
addr16
stc
and
aam
mov
lock
sbb
sub
ss
sub
mov
in
and
outsb
out
bound
or
fidivrl
loope
bts
lea
mov
stos
xlat
leave
push
aas
pushf
xchg
sub
mov
mov
fwait
sbb
sbb
dec
je
sbb
mov
iret
push
push
shrl
cld
test
mov
pop
cltd
mov
ss
aad
mov
mov
sbb
out
mov
mov
pushf
mov
cmp
xchg
cmp
shrl
jnp
dec
jg
xchg
cmp
or
fistpll
fadds
shlb
inc
jmp
outsl
push
pop
and
or
lahf
mov
push
sahf
jge
inc
and
push
xlat
je
jbe
mov
pop
jmp
xlat
xor
sbb
jbe
stos
adc
cmp
or
cli
cmc
aas
gs
movsb
push
sbb
fwait
inc
test
enter
push
shlb
shr
jnp
dec
lods
jae
aad
push
ljmp
scas
iret
sub
dec
inc
adc
movsl
pop
mov
in
repz
ds
das
mov
test
pusha
sbb
mov
fistps
add
or
or
mov
cmp
mov
inc
movsb
pop
inc
out
mov
lock
call
mov
and
xchg
arpl
dec
sbb
xor
stc
imulb
stos
mov
mov
jae,pn
ret
sbb
jp
cmp
dec
xor
dec
sbb
mov
lcall
dec
lods
clc
mov
movsl
cmp
data16
ret
es
cmpb
mov
loop
loop
cmp
test
mov
xchg
dec
mov
cmp
stos
into
movsb
fsub
data16
movsl
pop
imull
inc
test
popf
push
sub
jns
and
out
loope
jmp
fstpt
movsb
movsb
popa
adc
cltd
and
xchg
jle
adc
mov
aam
adc
push
enter
mov
daa
pop
mov
scas
adcb
outsl
xchg
test
mov
repnz
dec
pop
mov
adc
out
test
or
jnp
mov
pop
fistps
cmpsb
stc
xchg
adc
add
inc
xchg
inc
fiaddl
rolw
aam
aad
pop
dec
mov
jmp
xorb
js
mov
xor
cs
movsl
mov
mov
adc
cmp
hlt
mov
imul
dec
in
std
in
cmp
sub
and
lcall
mov
push
pop
inc
jo
jbe
ret
scas
decl
je
add
lret
add
dec
ss
scas
cmp
mov
or
iret
xor
std
mov
push
xchg
cli
jg
xchg
loope
dec
pop
xchg
pusha
rcrb
test
push
mov
mov
adc
cld
in
cmp
hlt
mov
mul
movsb
es
xor
das
push
adc
dec
scas
ljmp
xchg
jecxz
sub
int
enter
mov
imull
hlt
push
and
inc
pop
pop
test
or
fdiv
xchg
sub
dec
jb
popf
lret
test
or
je
gs
scas
cs
outsb
sti
cltd
cmp
test
mov
cmp
std
mov
add
and
or
loop
push
out
or
je
add
push
inc
pop
fyl2xp1
and
xchg
test
push
cmp
pop
aam
imul
jne
ja
sbbl
andl
mov
or
fdivrs
mov
mov
sub
icebp
loop
push
std
push
cmp
nop
xchg
popa
pop
test
pop
add
sub
mov
xchg
xchg
jb
ficompl
mov
mov
lods
sub
enter
loope
fdivrs
imul
mull
mov
jno
out
mov
mov
popa
mov
sti
fbstp
pop
dec
test
inc
popa
sub
mov
and
xchg
arpl
push
rolb
mov
cld
gs
mov
testb
push
mov
inc
stc
fsubrs
in
cs
mov
stos
shlb
nop
clc
movsb
or
xchg
xchg
shll
xchg
aam
mov
jno
cli
push
pusha
subb
mov
xor
mov
add
sub
cld
hlt
lret
lea
add
int3
loop
pop
xlat
dec
rcll
mov
int
or
inc
push
outsl
cld
sub
mov
out
inc
lcall
fsubs
std
sbb
or
push
sub
cltd
sar
in
jmp
xchg
enter
pop
pop
out
mov
cs
loopne
mov
mov
stc
cld
iret
jge
test
jmp
pushf
xor
cmc
and
loop
test
or
push
cs
sbb
adc
orb
jl
or
cmp
sub
inc
sub
inc
pop
and
inc
mov
cmp
sbb
ret
imul
sbb
xchg
adc
imul
aam
sahf
cmp
lret
popa
rcll
mov
ret
rorl
or
mov
loopne
mov
ljmp
out
jbe
daa
mov
stos
sbb
xor
out
rolb
sahf
cmp
int3
lods
mov
cwtl
mov
hlt
cs
xor
clc
popa
adc
jno
push
aaa
movb
or
jne
jecxz
in
rolb
sub
int3
ljmp
clc
dec
scas
add
lcall
cmp
jmp
mov
insb
clc
and
andl
aam
inc
out
mov
arpl
sub
mull
push
or
fbld
push
outsl
xchg
imul
add
std
mov
inc
js
enter
mov
adc
sbb
lock
lods
and
xchg
lret
sbb
xchg
or
mov
lea
jge
xor
pop
mov
lahf
dec
mov
and
xor
jae
pop
cmp
lcall
insb
mov
test
lock
cwtl
out
and
adc
adc
cmp
dec
adc
inc
pop
jl
leave
jno
cmp
mov
test
jo
cld
sbb
movsb
in
sub
test
shrl
xor
mov
popf
repz
int
mov
mov
stos
and
pop
xchg
rorb
fimuls
xchg
push
inc
mov
adc
cli
mov
jecxz
les
iret
push
ds
ret
dec
cmp
xor
sar
mov
add
cmpb
push
lcall
and
andb
mov
imul
stc
hlt
rcl
xorb
out
pushf
imul
lds
into
mov
out
or
leave
cwtl
dec
dec
xor
mov
lahf
push
pop
mov
inc
xchg
inc
scas
mov
rcrl
fmuls
inc
push
shrl
push
daa
adc
rol
adc
jne
in
outsl
aaa
sbb
ds
xlat
sbb
push
or
push
daa
dec
popf
mov
pop
mov
cmp
pusha
mov
fpatan
mov
std
xchg
jl
out
mov
clc
lcall
sub
xchg
mov
cli
xchg
or
out
fmuls
fiadds
push
fmul
add
add
arpl
les
push
mov
rolb
das
mov
fbstp
mov
xor
lods
ja
ljmp
or
adc
sbb
xchg
push
lahf
lods
and
das
es
rcrl
lcall
addl
dec
shrl
inc
xor
mov
inc
mov
push
lds
cmp
sbb
lret
push
xor
push
decb
cmp
aaa
add
dec
sub
push
pop
cmpsb
mov
inc
xor
jns
pop
dec
sbbb
idivl
shll
jge
inc
add
mov
pop
xlat
movsb
sub
in
mov
add
vpsllq
out
popa
jecxz
push
inc
and
mov
push
mov
mov
pop
cmp
push
xchg
mov
rclb
sub
xchg
xor
cltd
or
jge
or
xchg
fisttps
enter
out
sub
subb
stos
adc
loope
inc
sbb
xor
inc
dec
cmp
xchg
mov
sbb
scas
in
cmpsl
andb
lds
hlt
dec
ret
in
sub
and
sub
jne
jmp
xor
ljmp
xlat
mov
sub
outsl
inc
push
xor
movb
xchg
sbb
fsubl
add
imull
push
mov
jg
jp
xchg
pop
pop
scas
and
lcall
or
push
mov
mov
pushf
mov
sbb
lds
enter
rorl
js
repz
mov
sub
mov
loop
add
pop
add
or
repnz
scas
in
test
movsl
or
mov
popa
push
outsl
loopne
and
sub
stc
pop
jb
rolb
lcall
add
push
mov
stc
jp
popf
bound
jno
jo
popa
loope
fdivrl
mov
loop
add
sub
inc
test
dec
js
lock
movsb
jl
inc
mov
jne
mov
call
inc
mul
xchg
out
mov
ret
inc
int3
ljmp
add
cmp
xor
adc
mov
sti
cmp
push
xchg
ret
mov
sarb
pop
or
insb
mov
jmp
movsb
adc
push
dec
push
gs
adc
pop
dec
jmp
sbb
testb
cld
cwtl
xchg
test
cmpsl
push
stos
out
test
fidivrl
stos
mov
stos
pop
ljmp
sbb
adc
sub
xchg
sbb
stos
outsb
and
jl
inc
and
mov
jmp
adc
xlat
adc
push
jecxz
daa
add
out
add
jbe
aas
pusha
jnp,pt
out
xchg
pop
jae
rolb
sub
orl
dec
notb
inc
ret
in
dec
xchg
inc
mov
mov
test
add
pop
pop
rcl
push
rclb
jecxz
addr16
dec
mov
jp
dec
add
mov
je
dec
stos
pop
lcall
mov
inc
or
push
mov
insb
stos
mov
in
dec
cmpb
cld
cmp
ficoms
in
test
mov
sbb
push
mov
dec
out
lahf
sub
mov
ljmp
mov
das
push
jmp
jp
push
mov
push
dec
push
mov
lods
pushf
in
xchg
mov
inc
sub
mov
pushf
aad
pop
test
fwait
fs
sub
jne
fstpt
sahf
add
jmp
scas
push
sbb
divps
dec
scas
pushf
pop
mov
mov
dec
mov
jno
mov
pop
mov
mov
outsl
jge
popf
call
mov
mov
les
gs
xor
incl
lcall
filds
push
imul
pop
jle
fimuls
imul
mov
popa
pusha
jbe
shlb
jb
add
lret
or
iret
pop
cmpsb
out
xchg
ljmp
cmp
int
roll
insl
pop
cmp
in
idiv
mov
pusha
mov
out
cmp
mov
call
add
pusha
adc
mov
mov
ficoms
inc
sti
push
scas
cmp
cmp
fadds
lret
xor
mov
ds
cmc
mov
fldcw
lods
mull
and
push
jge
inc
jge
sbb
cmp
cmp
cmp
jl
fcom
mov
add
xchg
test
or
imull
imul
sbb
and
filds
jg
adc
push
xorl
loopne
or
popf
pop
rclb
mov
test
add
mov
je
mov
shrb
loope
push
cmp
cld
pop
xchg
sti
mov
add
pushl
insl
dec
rclb
jecxz
dec
inc
mov
push
inc
popa
fisttpll
dec
xchg
pop
rorl
push
adc
loop
sti
inc
leave
and
outsb
les
stos
cmpsl
aas
aam
pop
dec
stos
jb
pop
and
loopne
mov
les
adc
nop
mov
jmp
lahf
js
push
jbe
mov
sti
aaa
sub
mov
mov
mov
cs
add
add
sarb
jno
adc
data16
sbbb
mov
int3
cmpl
div
xchg
add
ljmp
movsl
les
pop
jecxz
addb
loope
sti
mov
sarb
repnz
fisubs
mov
or
in
popf
xor
and
call
mov
out
mov
out
mov
fmuls
mov
mov
test
shll
dec
xor
fwait
fs
jb
loopne
push
popa
xchg
negl
adc
nop
ret
loope
dec
imul
push
xor
xchg
mov
mov
jmp
icebp
orb
addr16
xchg
andb
push
xlat
mov
push
ja
out
orl
clc
pusha
arpl
push
ror
and
fld
push
insb
dec
sbb
ja
sarl
pop
xchg
fst
sbb
xchg
movsb
aaa
rcrl
jle
xchg
mov
sbb
popa
inc
cli
filds
cmpsl
dec
dec
mov
push
sub
cmpsl
mov
inc
lods
mov
mov
xlat
mov
and
jg
fisttpl
fs
sub
test
mov
add
sbb
inc
iret
xor
aad
dec
ret
ja,pn
je
sbb
lret
lock
mov
sub
ss
ret
and
shrb
jge
fs
xchg
pop
dec
cmc
dec
jmp
jecxz
mov
test
aaa
stos
imull
das
or
cmp
outsb
inc
inc
dec
aam
dec
pop
movswl
lret
shl
inc
or
movsb
add
lods
dec
mov
in
fs
jbe
dec
mov
mov
cmpsl
mov
sub
int
out
scas
es
out
add
fadd
aam
and
push
xor
xchg
sbb
mov
popf
lds
cmpsl
mov
test
sub
push
hlt
cmp
pushf
mov
adc
adc
jl
sahf
mov
and
test
cli
stc
bound
mov
adc
push
adc
out
aam
xor
arpl
movb
rol
js
or
and
jmp
sbb
jne
pop
sarb
enter
cmp
push
sti
pop
loope
push
test
and
sbb
unpckhps
leave
fs
fucomp
pop
lcall
insb
and
sub
mov
sub
js
sub
adc
xchg
lds
mov
mov
xor
and
push
adc
or
aaa
adc
mov
mov
inc
xchg
jmp
jnp
push
pop
dec
dec
inc
mov
cmp
scas
pop
addr16
xor
stos
or
into
loope
in
dec
cmp
enter
sub
inc
mov
cmp
mov
ret
add
mulb
mov
sbb
push
add
mov
push
test
cwtl
lret
or
cmp
insb
mov
stc
or
add
jns
pop
push
ja
cmp
lcall
loopne
sub
arpl
hlt
mov
cmpsl
pop
adc
clc
or
repnz
sahf
cmpsb
in
ret
pop
dec
call
mov
mov
imul
sti
ss
std
jmp
jb
xor
shlb
xor
cld
dec
fnstenv
mov
pop
or
xchg
sub
test
test
test
cmp
rcl
test
sarl
aam
push
clc
ss
ret
js
jl
in
add
nop
dec
je
mov
aas
out
and
inc
shlb
jecxz
sti
dec
xchg
adc
sub
jp
sub
jno
add
xchg
in
je
outsl
or
in
cmc
int3
pushf
mov
inc
hlt
mov
sub
mov
mov
sbb
out
jmp
add
jg
in
jl
sub
mov
pop
jmp
dec
dec
pushf
mov
aam
not
xchg
xchg
mov
pop
xor
cmc
fstps
mov
dec
jb
and
pop
insb
or
xor
fdivrs
dec
arpl
jecxz
rcll
cmp
mov
or
loop
subl
out
mov
lock
jmp
leave
ja
enter
mov
in
nop
cmpl
pushf
test
sbb
stc
pop
subb
imul
popa
sub
in
int
mov
in
ja
xlat
clc
aam
mov
loop
inc
dec
jns
mov
out
and
xchg
in
ds
faddl
push
int
jb
lods
pop
adc
push
jmp
cmp
sbb
into
cmp
loope
xor
xor
stc
lods
fildl
sar
testb
hlt
lock
scas
mov
mov
cmpsb
mov
cmp
pop
out
mov
icebp
out
add
clc
ffree
test
aam
xor
jp
imul
idivb
stos
cltd
sub
sub
jp
sbb
notl
sub
add
sub
btr
enter
rorb
mov
icebp
push
in
mov
jno
xor
sbb
push
dec
mov
lods
and
cmp
mov
das
xchg
jne
sbb
jecxz
push
je
imul
mov
mov
stos
adc
push
test
cltd
mov
arpl
testl
orb
mov
xor
popa
je
lods
icebp
rorb
push
adc
enter
dec
xor
push
test
sbb
in
shll
scas
std
push
mov
movsb
movhlps
xor
loop
ffreep
fidivrs
nop
dec
pop
mov
xchg
sub
pop
test
mov
push
cld
movsb
xor
cmp
fldl2t
adc
mov
mov
lock
push
push
icebp
sub
loope
sub
call
xchg
sub
inc
pop
cmp
xchg
dec
divl
fdivrs
xchg
pop
movsl
sti
mov
movsb
xor
mov
jp
cmp
mov
mov
pop
stos
fdivrl
mov
loope
or
jae
cmpsb
xor
testb
adc
in
mov
mov
outsl
pop
sub
add
fistpl
lea
mov
aam
pop
xlat
repz
les
outsl
call
sbb
fidivrl
mov
int3
clc
cmp
popa
cmc
mov
jb
popf
roll
packsswb
mov
mov
push
inc
lcall
aas
push
jae
pop
add
fistps
rorl
movsl
dec
dec
push
sub
sub
mov
stc
scas
js
adc
das
outsl
fildl
and
cmc
inc
dec
bound
dec
push
xchg
xor
test
jmp
rcrb
xchg
mov
leave
push
imul
or
repz
fwait
std
sub
mov
and
into
inc
mov
push
sub
or
sub
imul
lret
sahf
sub
xchg
or
inc
idivb
aam
lods
gs
pushf
push
andl
xor
jnp
mov
loope
stos
mov
pushf
sahf
rclb
popf
shll
and
inc
cmp
mov
scas
add
call
paddsw
pushf
and
popa
dec
repz
add
sub
scas
lcall
sti
nop
cltd
dec
inc
xchg
pop
int
mov
ds
addr16
add
addr16
bound
dec
imul
add
sub
f2xm1
insl
bound
dec
insb
arpl
sbb
mov
jnp
out
mov
pop
fidivrl
fincstp
push
in
in
and
rol
or
mov
mov
lcall
jns
add
jl
daa
jp,pt
cmp
add
mov
lcall
mov
xchg
out
pop
fs
push
xchg
into
cmpsl
pop
or
lret
sub
xor
xor
mov
xor
xchg
xchg
mov
cmp
insl
xorl
add
addb
jmp
std
cmp
xchg
inc
fdivl
shlb
inc
outsl
mov
cmpsl
aaa
xchg
cs
fwait
push
sti
xor
rclb
jl
fcompl
enter
outsl
xlat
jne
jg
mov
scas
std
push
fwait
adc
dec
repz
lea
mov
loopne
push
popf
mov
or
push
jne
in
inc
mov
sub
rorb
loope
testb
xor
cltd
out
inc
or
pushf
cmp
in
adc
add
cltd
mov
mulb
fidivrl
add
pop
xchg
xor
mov
out
mov
dec
cmp
loopne
aaa
cli
jmp
cltd
adc
xchg
fwait
dec
inc
ljmp
imul
adc
mov
out
repz
je
or
dec
and
or
ds
inc
xor
mov
dec
notb
cmp
sub
and
movsb
xor
push
push
sarl
outsl
mov
arpl
sub
test
imull
cmp
inc
pop
adc
in
jns
ret
dec
mov
insl
lahf
push
lea
xor
dec
jmp
insb
es
sbb
loope
xchg
or
cs
popf
pop
mov
in
inc
imul
cli
cmpsb
mov
sbb
or
or
stos
add
jmp
js
js
jp
enter
adc
mov
aad
push
push
test
and
loop
inc
inc
fs
lcall
add
negb
ret
dec
movsb
pusha
test
pop
fbstp
or
movsb
cmpsb
stos
lahf
add
push
shrb
dec
pushf
and
cmp
movsl
xlat
test
mov
shr
hlt
repz
push
inc
rcll
sbb
in
mov
negb
cmpsl
divl
push
mov
mov
scas
jnp
cmpsl
lods
stos
push
loope
jbe
scas
sti
jp
mov
xor
inc
nop
dec
sub
int
mov
mov
mov
ret
stc
mov
mov
pop
xchg
imul
jnp
iret
add
pop
fs
rcl
iret
popa
cmp
rorb
inc
test
mov
push
adc
add
mov
mov
push
popa
aam
rcrl
adc
fstps
xor
fmull
hlt
push
fs
jbe
andl
push
and
pop
fimull
fisubrl
flds
mov
movsl
cmpsl
loopne
arpl
sbb
lds
scas
arpl
lods
lahf
mov
push
xchg
mov
cs
inc
cmpsl
cmp
aas
push
mov
sub
inc
xor
mov
imul
pushf
fisubrs
jb
fldl2t
mov
aam
sub
mov
inc
ja
add
icebp
and
out
dec
rcrl
stc
cmp
iret
adc
jnp
pop
mov
popa
subb
sub
jmp
lahf
cmp
mov
mov
dec
xor
aam
sub
lods
out
xchg
ltr
scas
jae
into
mov
mov
jle
imul
enter
xchg
loopne
pop
popa
out
mov
add
int
arpl
mov
mov
je
fisttps
cmpsl
mul
popa
std
push
sarl
push
ror
or
fcomp
scas
addr16
inc
and
jp
add
cwtl
jp
addr16
loope
push
push
lea
xchg
jecxz
cmp
inc
push
xor
ja
lcall
inc
xchg
pop
hlt
pushl
jnp
popa
jnp
test
es
lea
das
fidivl
call
lock
lret
lret
in
cmpsl
push
cmp
adc
mov
mov
loope
loop
xor
xchg
in
in
adc
testl
stos
das
mov
inc
or
orl
hlt
arpl
outsl
icebp
xor
movsb
shrl
ret
add
jmp
mov
in
nop
mov
leave
cmc
mov
iret
add
mov
adcb
mov
enter
movsb
fsubrs
int
pop
jp
lods
fcomip
jb
cmpsb
pop
push
jecxz
jns
shlb
mov
push
jge
mov
cld
in
sti
stc
inc
mov
test
inc
and
repz
out
dec
mov
push
jp
push
adc
sar
es
test
push
mov
jno
jb
mov
add
mov
or
adc
arpl
call
xorl
aam
fs
aad
inc
push
jns
cmpb
adc
sbb
aam
add
test
jae
lea
data16
outsb
sbb
fld
aam
add
leave
cltd
loope
pop
fdivrs
mov
add
or
inc
aaa
cmpsl
dec
or
in
sub
mov
sbb
sahf
push
test
loop
andb
jne
mov
dec
dec
sbb
mov
scas
pushf
pop
lods
popf
leave
xor
lds
insl
pandn
outsb
ret
fbstp
mov
lahf
in
hlt
mull
in
dec
mov
sbb
in
and
addr16
loope
add
xchg
inc
mov
imul
jae
imul
push
mov
nop
sarb
add
outsb
jl
mov
shl
mov
popa
sbb
das
jge
icebp
mov
aam
jecxz
jp
add
sbb
xor
xlat
movsb
xor
dec
test
aad
jge
cmp
test
addr16
outsb
loopne
bound
cs
jecxz
ds
mov
xor
insb
jp
cmp
xchg
ja
movsl
jl
pop
je
sub
sbb
out
cmpsb
dec
or
ficompl
mov
or
sti
add
into
aad
jmp
shlb
sar
and
das
or
adc
out
repnz
leave
dec
push
lock
lcall
pop
notb
repz
xlat
into
test
daa
pop
adc
push
shlb
out
sub
cmp
or
les
popf
cmp
mov
jmp
test
add
sub
ret
or
popa
sub
hlt
jp
and
and
sbb
sbb
mov
jmp
add
andb
mov
mov
jno
mov
jp
sahf
pop
mov
orl
icebp
in
nop
cwtl
popf
xor
lods
jge
mov
mov
jle
data16
mov
lds
sbb
mov
test
inc
jno
adc
push
insb
add
xchg
aam
movsb
jecxz
inc
dec
cmpsl
loope
jno
xchg
or
and
and
movsb
popf
mov
hlt
in
out
std
and
stos
loope
cmpsl
jae
stc
imul
std
and
les
xchg
lcall
jmp
pop
mov
sbb
dec
inc
mov
sbb
cwtl
dec
aas
push
sbb
pop
insb
jle
test
jns
leave
inc
mov
std
not
dec
cli
loopne
xorl
jmp
fadds
sti
outsl
mov
mov
movsb
sarb
push
test
ds
mov
xor
aam
xchg
ja
push
or
cmp
pop
mov
sub
xchg
in
loop
push
mov
icebp
or
push
mov
pop
or
mov
scas
loop
stos
nop
xor
out
roll
sub
cmpb
mov
or
in
xchg
xchg
inc
jmp
pusha
add
pop
mov
jp
cmp
ljmp
cmp
scas
mov
mov
jl
ss
cwtl
test
rorb
jle
add
cwtl
frstor
js
mov
fisttpll
cmpsb
rcr
cmpsl
ficompl
add
outsb
sbb
aaa
stc
fildll
ret
xchg
mov
jne
jne
xchg
mov
xchg
push
andb
bound
mov
pop
sbb
inc
cmpsl
cmp
mov
jbe
loopne,pt
lahf
pop
lcall
sbb
or
adc
push
lds
fmull
fldcw
mov
test
lods
inc
mov
add
mov
xor
sbb
cmpsb
lea
push
sbb
cmpsl
push
mov
jns
sti
xchg
cltd
adc
mov
add
mov
dec
aaa
in
mov
mov
mov
mov
mov
push
repnz
ret
jp
lret
daa
xchg
stc
jo
cld
mov
adc
ret
sti
push
mov
stos
cmp
lea
mov
mov
xchg
sti
scas
int3
adc
sub
stos
scas
pop
cmp
and
fsubrl
mov
adcl
sub
jl
loopne
fs
jecxz
sub
mov
jb
mov
mov
xchg
mov
adc
push
clc
mov
aas
mov
mov
or
fisubl
sub
mov
mov
push
scas
jbe
and
shrl
fadd
or
scas
jl
mov
sub
cs
mov
cmp
and
testl
test
lahf
fbstp
mov
cld
adc
scas
nop
sub
es
inc
fldenv
dec
ret
or
mov
sbb
cmp
lea
mov
xor
or
xor
push
cmp
scas
inc
sbb
lods
aam
arpl
or
jb
scas
lret
aas
sbb
sub
inc
sub
andb
inc
xor
cmp
dec
mov
or
addr16
scas
fldl
lock
cmpl
test
cmp
mov
push
mov
cs
xchg
clc
and
js
mov
out
frstor
iret
mov
pop
mov
sub
js
dec
repz
push
clc
jecxz
cmpsb
sub
jl
cmpsl
nop
pop
in
imul
push
sbb
pop
add
pop
cltd
lret
adc
mov
jmp
test
adc
jns
xbegin
test
aas
test
mov
xor
adc
sbb
mov
jns
mov
sarb
xor
stos
cmp
pop
ret
or
mov
xchg
xchg
add
ss
sub
fwait
repnz
add
in
mov
cmp
inc
mov
adc
or
mov
dec
stos
mov
and
mov
test
sub
jge
adc
cmp
add
out
subl
adc
popa
loopne
mov
mov
mov
pop
into
shrl
mov
out
jbe
test
dec
fidivrl
idivl
jb
ret
daa
mov
or
clc
lock
jno
mov
test
out
cmpsl
mov
mov
xchg
xchg
jl
int3
stos
and
push
pushf
loopne
out
cmp
arpl
or
inc
cmp
fildll
mov
cli
mov
mov
jb
and
pop
call
notl
cmp
movsl
and
xchg
pop
push
or
dec
sbb
rcrb
scas
jns
aaa
mov
jg
popf
mov
adc
cmp
pop
pop
loopne
xchg
repnz
out
mov
sti
es
leave
add
pop
mov
mov
cli
sub
int
cwtl
or
pop
rol
sub
jl
fisttpll
add
out
imul
push
aaa
fdivrs
mov
inc
cmp
jbe
stc
sub
mov
sub
fcomps
xor
xchg
lods
idivl
sbb
inc
movsb
movsl
js
sub
js
cmc
repz
mov
cmp
fnstcw
pop
mov
inc
pushf
mov
mov
sbb
js
rcrl
fstpt
fdiv
mov
xchg
dec
xchg
push
scas
sub
or
mov
sarb
sbb
mov
sub
gs
scas
fnstcw
or
in
rorb
cmpsl
xchg
or
adc
mov
sub
mov
mov
jo
sarb
and
mov
in
notl
mov
xchg
sub
mov
aaa
cmpsb
test
sahf
sbb
subl
add
ss
xor
je
adc
test
or
sub
xor
mov
cltd
je
dec
out
mov
and
xor
pop
mov
push
dec
dec
cmp
inc
loop
lret
test
mov
cli
fnstsw
mov
jl
sub
arpl
je
rcrb
sub
lods
sbb
push
sbb
fs
and
fldl
mov
xchg
mov
adcl
jl
adc
jne
fbstp
or
xchg
mov
sbb
xchg
cmp
cs
cmp
mov
fcomps
xor
or
cmp
sub
into
shrb
test
test
nop
fidivl
mov
cmp
lahf
rorb
sub
jne
lds
rolb
stos
mov
push
mov
nopl
inc
shlb
clc
sub
bound
mov
test
mov
mov
mov
ljmp
mov
mov
xchg
jp
mov
imul
divb
mov
lods
xchg
xchg
dec
shrl
xchg
test
mov
sbb
xorl
and
push
idivl
stc
pop
pop
or
cli
or
mov
dec
cld
mov
jb
sbb
sbb
rcl
lret
test
sbb
test
iret
cmpsl
adc
mov
mov
lods
test
mov
mov
cld
cmp
iret
mov
jp
inc
sti
loopne
mov
mov
loop
fidivl
mov
insb
mov
fistpll
mov
cwtl
mov
or
fnstenv
repz
mov
mov
or
cmp
sbb
into
jge
jnp
lods
cltd
std
stos
sbb
and
mov
cmp
es
mov
adc
lods
mov
adc
push
aaa
fdivrl
loope
mov
leave
adc
js
test
or
rorb
add
mov
aaa
xchg
inc
stos
pop
sbb
aas
icebp
sarl
mov
clc
sub
or
cmpsb
and
xor
push
pop
lds
notl
rcl
push
cmp
es
cmp
xor
and
cmpsl
add
mov
sbb
pop
fidivrl
daa
mov
test
lods
inc
mov
lea
popf
push
cmp
cmp
ja
outsb
sbb
sarb
cli
cmp
adc
push
mov
ds
push
scas
jo
cmpsl
sbb
mov
add
negl
call
xchg
loope
xor
xchg
std
mov
into
dec
fildll
pop
xchg
cmp
mov
mov
add
pop
mov
adc
jo
fisubrl
in
fwait
sahf
cmpsb
bound
mov
and
das
and
lods
repnz
lahf
jp
pop
jne
aas
xlat
cmp
add
push
ss
xlat
adc
dec
loope
cmp
xchg
fisubrl
in
es
shrb
push
dec
mov
pop
mov
clc
xor
rcrb
sti
xor
jl
add
ret
xor
jecxz
sbb
mov
test
stc
and
test
sti
or
sbb
cmp
sti
lcall
lods
pop
mov
add
cmp
sub
sbb
cmpb
js
and
movsl
notl
xchg
cld
or
lods
jo
lret
xchg
jmp
insb
mov
cmp
xlat
mov
sbb
sub
mov
pop
nop
scas
hlt
jecxz
sbb
jmp
fs
movsl
out
cmp
push
mov
sbb
pop
jge
mov
fimull
lret
sub
sbb
cmp
push
mov
pop
or
xor
stos
fistpll
xchg
cs
mov
or
leave
sub
cmp
mov
dec
mov
mov
mov
loop
imul
jl
shll
mov
push
out
ljmp
test
shlb
aas
push
mov
mov
sbb
out
push
cmpsl
cmp
inc
mov
lret
repnz
mov
test
test
sbb
call
mov
mov
cmp
std
push
call
mulb
cmp
mov
inc
sti
and
xchg
and
jge
sub
cmp
pop
stos
or
lods
jl
movsl
mov
mov
xor
adc
movsb
lret
shrb
xor
add
fdivs
test
mov
clc
mov
mov
xchg
testl
xchg
cmpsb
cmp
in
lods
or
loop
add
mov
outsb
cld
test
icebp
jl
negl
pop
aas
mov
scas
mov
jecxz
lds
mov
mov
fsts
jno
ss
fstpt
out
cmpsb
mov
mov
out
mov
ja
mov
jns
cmpsl
pushf
into
mov
das
stos
sub
push
xchg
aas
pop
xchg
push
loop
mov
push
sarb
cmpb
sub
data16
clc
jnp
ja
cmp
lds
popa
fbld
fildll
mov
cmp
scas
pop
mov
and
mov
sbb
fldenv
mov
shlb
sbb
sbb
mov
cmpsb
pop
mov
dec
and
and
fstpl
inc
aad
mov
bound
rcrl
or
mov
hlt
jl
xorb
das
cmp
lds
jae
mov
mov
cmpsb
cld
mov
rorb
cs
mov
insl
mov
mov
shlb
pusha
mov
int3
fcmovne
iret
xchg
call
mov
pushf
mov
lret
xor
test
stc
stc
fistps
fsubs
addl
inc
sti
pop
add
dec
cmp
sub
out
mov
cltd
pusha
cmp
dec
xchg
add
add
rcl
lock
mov
sub
dec
les
cmp
sbb
pop
xchg
add
rcrb
test
sarl
lods
xor
int
xlat
mov
mov
mov
lods
cli
sbb
fnstcw
cmp
stos
rorb
mov
dec
mov
or
mov
fistps
aaa
jno
jl
inc
sub
xchg
bound
and
xchg
cmp
jns
xor
inc
mov
cmp
and
sbb
jo
shlb
mov
dec
inc
sbb
scas
bound
adc
ja
cmp
shrb
or
jnp
in
aas
push
mov
mov
mov
cmpsb
xlat
sbb
cmpsb
cmpb
sbb
pop
lods
int3
fldt
fistpll
mov
aaa
push
sbb
ds
mov
mov
subw
mov
adc
sarb
cmp
das
mov
movsb
adc
mov
push
out
xor
mov
xlat
or
xor
cmp
mov
leave
mov
inc
test
dec
inc
cmp
sbb
cmp
test
jp
xor
and
das
xchg
aaa
mov
and
nop
js
xchg
cld
mov
xchg
in
shlb
insl
pop
sarl
cmpsb
lods
sbb
scas
and
scas
out
mov
adc
xchg
pop
fwait
inc
mov
xor
stc
push
ja
mov
inc
mov
test
sub
out
scas
insb
cltd
enter
adc
xchg
sub
pop
xor
xchg
shlb
out
push
outsb
cmp
leave
sub
testl
out
cld
popf
dec
adc
out
subb
cmp
aas
mov
lcall
mov
stc
lret
int3
pop
imull
subl
xlat
add
mov
xchg
out
pop
sbb
sbb
mov
ljmp
sbb
fidivs
mov
sub
mov
test
arpl
loop
mov
lahf
mov
mov
sub
fwait
psubw
out
mov
mov
add
and
fsubrs
mov
mov
push
inc
clc
jmp
dec
mov
and
lahf
adc
cmp
mov
int
stos
xchg
cltd
daa
aaa
jecxz
mov
les
add
iret
test
test
ss
fildll
mov
pushf
int3
sbb
cmpsb
sub
and
sahf
cmp
cmpsb
call
aas
adc
mov
sub
lods
cmp
jl
sbb
mov
adc
jno
aam
mov
js
shrl
and
mov
repnz
cmp
lods
aas
cld
into
movsb
leave
cmpsl
cmp
mov
add
aaa
jae
sbb
push
daa
pushl
xchg
mov
sbbb
pop
adc
mov
mov
jno
test
mov
addr16
sarb
and
ds
mov
xlat
mov
outsl
mov
sbb
fwait
or
pop
lea
push
push
xchg
jmp
imul
out
mov
lods
mov
rcrl
xchg
clc
fisttpl
ret
mov
cmp
or
sub
jg
out
mov
mov
sti
stos
adc
loope
sub
or
test
fcomps
mov
mov
mov
gs
lahf
sub
fdivs
ret
sbb
push
cmp
mov
xor
loope
out
mov
sub
cmpsb
jle
mov
mov
or
sub
scas
and
lods
mov
mov
repnz
xor
sbbb
add
movsb
pop
adc
mov
mov
mov
mov
pop
jl
fsubrs
xchg
addr16
mov
ret
add
rcr
add
ds
mov
cmpsb
add
fsubrs
stos
fdivrs
popf
mov
or
mov
cmp
or
mov
xchg
repz
xchg
vmovupd
mov
dec
or
mov
sbb
pop
andl
test
iret
nop
push
lods
iret
sub
jle
ss
loopne
sub
in
inc
sbb
jne
cmp
out
sbb
fucomip
pushf
fwait
mov
scas
inc
xchg
mov
fs
dec
push
test
dec
or
or
jecxz
popa
push
mov
decl
add
clc
jp
push
stos
mov
daa
cwtl
movsb
andb
pop
daa
hlt
cmp
or
and
and
inc
pushf
mov
fldcw
nop
out
ss
scas
xchg
out
arpl
btc
test
inc
dec
decb
arpl
rcl
syscall
fcomi
mov
shrb
xor
test
ret
cmp
cmpl
or
sub
orl
or
jb
into
pop
lahf
aam
mov
scas
jb
mov
dec
out
bound
stos
push
push
mov
and
cltd
mov
pop
insl
jmp
add
fadds
hlt
in
xchg
shlb
cld
rcl
test
cmp
int3
stos
xchg
aam
or
mov
int3
adcb
sbb
movsb
or
mov
movsb
or
jecxz
sub
xor
push
fwait
enter
mov
test
stc
xorb
xlat
daa
sub
adc
or
outsl
mov
fcomps
fsts
fisttps
dec
jb
sub
lods
sbbl
jl,pn
fidivrl
push
or
sbb
call
lret
nop
leave
sbb
gs
push
or
hlt
push
icebp
fwait
adc
pop
cmp
icebp
adc
push
rcrb
xor
and
dec
sbb
xchg
scas
popf
ljmp
push
sub
mull
mov
dec
mov
mov
das
jmp
add
popa
ja
sarb
lea
push
push
push
xor
pop
fisubs
gs
mov
inc
fadds
movsl
mov
pop
adc
test
or
jno
sub
mov
shlb
dec
push
sbb
test
rcrb
fildl
sbb
sub
loop
xchg
in
pop
fcomps
mov
ja
repnz
repz
push
lahf
or
sbb
xor
xchg
mov
jo
dec
push
mov
arpl
mov
in
mov
stos
xchg
lret
xchg
lret
insb
or
sarl
or
add
insl
mov
loope
aas
dec
xor
clc
xchg
hlt
cmpb
mov
dec
mov
repz
popf
mov
sbb
sbb
add
xor
dec
rcrl
pop
jge
dec
push
loope
pop
pushf
sub
scas
mov
cmp
sub
scas
mov
movsl
sub
aad
pop
stos
inc
scas
imul
outsl
cmc
out
scas
bound
jge
je
fmuls
xchg
test
leave
in
xchg
inc
mov
jbe
out
jb
and
mov
imulb
and
cmp
in
mov
pop
mov
dec
mov
lret
in
and
sbb
std
adc
fmul
mov
push
add
rcr
sbb
ja
sbb
mov
and
add
mov
push
pop
loope
scas
mov
sbb
pop
nop
xor
push
into
pop
mov
pusha
sbb
aam
sub
mov
dec
lds
nop
mov
add
int3
lret
push
ss
test
call
jo
ds
std
dec
pop
aam
or
pop
into
daa
mov
rcrb
mov
mov
jle
inc
sub
mov
cmp
repnz
xchg
out
js
mov
add
ja
sbb
push
and
and
shrb
pop
push
mov
in
pop
mov
sub
dec
sbb
mov
and
in
lods
mov
adc
pop
cmpl
push
aaa
repz
sbb
jbe
iret
mov
insl
cld
mov
out
fistpll
movsb
aam
xchg
dec
xchg
jae
out
and
mov
mov
daa
cwtl
mov
jne
adc
mov
outsb
or
testb
addr16
add
movsb
cli
dec
and
mov
pop
int3
dec
xor
fcmovbe
mov
into
push
cmp
mov
push
dec
test
mov
xchg
mov
cmp
mov
aam
jbe
pop
cmp
cwtl
cmp
inc
imul
outsb
out
jp
jne
xor
mov
dec
pop
cmp
inc
pusha
hlt
ss
popa
xchg
push
mov
rolb
movsb
sbb
xchg
mov
fimull
mov
iret
xor
sub
add
xchg
inc
and
into
or
decl
adc
out
lret
and
gs
nopl
test
ffreep
sbb
pop
fstps
data16
pushf
cmp
or
data16
mov
push
and
shrl
inc
sbb
dec
loope
cli
jo
ret
pop
imul
enter
aas
insb
mov
cmp
mov
cmpsl
or
test
and
dec
stos
mov
cmp
mov
not
dec
outsl
dec
fldenv
lahf
sbb
cmc
push
push
push
dec
jne
mov
insb
or
xor
stc
pop
xchg
addb
movsb
in
sahf
sub
aaa
std
push
cli
hlt
mov
mov
and
fwait
inc
xchg
sti
sbb
dec
push
fisubrl
mov
lock
pop
pop
out
je
jecxz,pt
sbb
fucom
cmp
jo
call
pop
movsb
out
mov
cmp
cs
cmpsl
mov
xchg
sbb
mov
int
xlat
ja
xor
pop
mov
add
popa
out
cmpsl
pushf
mov
mov
xor
loop
std
into
adc
loopne
cmp
mov
sbb
add
sub
cmp
jmp
jecxz
lcall
notl
loope
lods
xchg
push
xlat
mov
out
subb
call
mov
lret
sub
pop
cmpsb
std
mov
mov
test
mov
popa
xlat
adc
sub
aam
push
mov
ds
dec
cmc
mov
in
adc
loopne
push
add
arpl
outsl
shr
std
sub
iret
mov
sbb
mov
jp
in
imul
loopne
mov
daa
fs
gs
mov
or
or
cmp
mov
pushf
mov
and
dec
lds
pop
outsb
sbb
or
push
movsb
xchg
mov
mov
movsb
fmull
cmp
pop
mov
lret
sbb
outsl
loop,pt
mov
sti
andb
mov
sbb
in
xchg
repz
shrd
dec
or
out
test
nop
popf
shlb
and
bswap
js
shlb
or
fcmovnbe
outsl
and
icebp
mov
outsb
push
dec
out
sub
insb
daa
dec
dec
in
pop
mov
vmaskmovdqu
icebp
divl
sbb
popf
mov
subb
shlb
cmp
xchg
pop
hlt
jge
inc
push
xchg
arpl
cmp
inc
jb
ret
outsb
adc
pop
cmp
data16
jecxz
lcall
das
sub
ss
rcrl
push
mov
xchg
dec
jo
and
popf
movsl
scas
xchg
cmp
mov
xchg
mov
cmpsl
movsl
adc
andl
xor
hlt
mov
mov
fidivrs
add
sub
sbb
hlt
js
scas
ja
subb
into
aas
rcrb
in
test
sbb
mov
xor
pusha
or
dec
mov
into
mov
sub
mov
pop
aam
jmp
sub
sub
das
decl
mov
adc
jg,pn
adc
cmp
fimuls
dec
jno
xor
xor
sub
mov
dec
cwtl
xor
mov
std
test
cmp
loope
dec
bound
fsubs
ljmp
int
mov
mov
fwait
jno
and
clc
ja
dec
sbbl
jg
mov
jno
mov
mov
sbb
add
pop
out
add
fldl
pushf
ja
fiaddl
cld
mov
cmp
in
stos
test
ret
push
inc
aas
mov
add
push
lods
lcall
leave
push
daa
add
jb
add
mov
jecxz
cmp
insb
mov
and
mov
xor
cmp
sbb
filds
dec
cmp
imull
cmp
push
inc
popa
ss
int3
xchg
hlt
or
pop
jg
sub
test
mov
lahf
stos
mov
mov
ss
dec
pop
or
mov
mov
xor
pop
cmp
fmull
xor
out
xor
aas
movl
jne
andb
jns
inc
aam
pusha
pop
fisttpll
into
stc
es
stos
mov
movsl
fsubrs
inc
loopne
scas
sub
ljmp
mov
push
insl
sub
ds
mov
dec
or
arpl
fwait
mov
adc
and
add
push
lods
add
pop
push
fisubl
in
fstpt
fs
inc
fcomi
gs
sbb
inc
cmp
xlat
jns
xchg
test
ss
fbstp
pop
stc
inc
scas
in
sti
mov
add
sub
fcom
ret
fdivs
not
sub
les
andl
lahf
icebp
xchg
scas
pop
bound
scas
pusha
and
shlb
sbb
sub
nop
mov
cmp
idiv
in
loope
pop
lret
daa
dec
xchg
fsts
jge
mov
int
imul
aas
movsb
sbb
sarl
cmp
lret
ficompl
inc
loope
hlt
or
ret
enter
lcall
inc
inc
pop
int3
jb
mov
rorl
add
scas
sbb
mov
aam
fmul
test
cmp
dec
das
test
adc
inc
insl
adcl
mov
sub
inc
xchg
imul
shrl
push
jmp
cmp
cltd
push
movl
jns
aam
out
dec
jbe
enter
and
cmp
adc
xor
fwait
das
int
inc
lds
sub
mov
add
sti
mov
ja
jne
mov
xchg
dec
aad
xor
scas
push
xor
mov
bnd
jmp
mov
jno
sti
sti
sarb
call
int3
and
xor
fistl
cmp
movsb
jne
xor
outsl
repz
mov
sbb
or
movsl
cmp
aam
mov
sbb
and
inc
dec
lock
add
jno
mov
mov
xchg
dec
stc
push
sbb
in
sub
mov
sbb
cmpsl
dec
int
dec
xchg
dec
sbb
inc
add
mov
dec
add
pop
and
sub
cmc
dec
stc
inc
out
in
mov
cld
push
sahf
sbb
mov
sbb
movsb
inc
aad
mov
int
test
ss
mov
outsb
and
adc
out
dec
in
or
fdivr
ljmp
mov
cs
imul
out
sar
mov
mov
and
loopne
stos
cmpb
pop
cmpsb
pop
adc
rcll
repnz
fucomi
jns
scas
iret
fildll
shll
cmp
sbb
mov
scas
mov
jmp
fildll
movsb
jg
push
fildl
pop
ja
add
xchg
pushf
xchg
pop
aas
cmp
out
movsb
stos
add
dec
lahf
aam
jno
aam
mov
pop
stc
loope
mov
add
loopne
shll
sub
dec
pop
mov
xchg
cmp
outsl
das
pop
mov
loop
stos
or
add
sbb
scas
cmp
test
test
gs
xchg
jle
mov
or
add
in
enter
sub
xchg
mov
inc
and
cmpl
xchg
adcl
lds
push
fimuls
and
arpl
in
js
loop
lahf
dec
xor
inc
stos
in
push
mov
mov
rcrl
outsb
or
mov
inc
push
cmp
jne
push
mov
lods
inc
mov
loop
jl
push
ficompl
pop
dec
lods
sub
test
std
inc
rcll
hlt
xor
mov
pop
movsb
push
jnp
sub
sub
loopne
xchg
mov
mov
inc
cmc
shlb
xchg
subl
pop
dec
scas
xchg
cmp
or
filds
fists
mov
lods
movsb
loop
das
dec
adc
xchg
or
mov
mov
mov
mov
jmp
imul
pushl
inc
or
jg
call
dec
aam
decl
dec
jae
aaa
or
repz
hlt
aaa
jo
in
sub
cmp
outsb
sub
xchg
xchg
mov
push
js
sbb
and
mov
ficompl
xchg
imulb
xchg
out
stos
enter
lock
clc
lret
push
std
lods
pushf
rcrb
or
aas
adc
test
out
jge
rol
mov
repz
movsb
lahf
adc
into
mov
stos
mov
hlt
test
cmpsb
sub
in
push
sbb
fcoms
xlat
sub
mov
pop
addb
cmp
int3
jne
mov
pop
xchg
sarl
call
ret
addb
inc
jae
jle
dec
out
sbb
aam
sahf
clc
cmp
pusha
push
ja
mov
lds
push
dec
out
aas
push
shrb
loope
mov
lret
call
mov
mov
stc
outsl
icebp
sbb
xor
lret
mov
enter
mov
pop
dec
mov
sbb
push
inc
add
xlat
ja
jecxz
dec
push
mov
dec
sbb
mov
mov
sub
test
enter
dec
mov
jo
test
popf
cs
icebp
or
or
xchg
dec
xchg
fcmovnu
xorb
mov
test
outsl
push
lods
popf
lret
push
sbb
test
pop
push
jmp
push
outsb
sub
jp
push
orb
inc
mov
mov
mov
lcall
movsb
jae
mov
in
in
dec
repnz
dec
data16
xor
and
xor
arpl
in
sub
ret
add
rorl
test
popf
adc
add
cmp
mov
or
add
stc
mov
arpl
movsl
and
mov
add
stos
fbstp
out
mov
arpl
adc
fistl
dec
in
ret
xor
orl
outsl
dec
popf
xchg
aam
mov
push
fsubrl
mov
mov
mov
dec
inc
lret
push
mov
add
ds
ss
xor
stos
cmp
fisubs
pop
adc
ret
popf
mov
jmp
fsts
jl
pop
add
xchg
pop
in
cwtl
mov
jne
aam
cmpsb
pushf
inc
sub
popa
jl
sbb
jp
arpl
lods
sbb
push
ret
mov
fiadds
fdivrp
mov
push
add
test
or
pop
stc
sbb
enter
mov
repz
xor
dec
mov
or
pop
jecxz
out
lcall
loope
idivl
add
in
cld
push
pop
mov
es
shr
fisubs
pop
push
pushf
bound
scas
cmp
pop
inc
add
add
jecxz
xchg
mov
ja
fs
and
enter
imull
xlat
rcrb
mov
jecxz
and
je
lret
fldcw
and
xchg
push
xchg
gs
lea
pop
loope
loope
sbb
mov
lret
cmp
push
jne
add
cmpsl
adc
and
cmp
repnz
je
out
jl
rorb
jmp
adc
lea
es
sub
fstpl
lret
enter
mov
and
fists
subb
jo
cli
lods
add
push
iret
xlat
hlt
xor
repz
mov
enter
cmc
mov
data16
or
cmp
lods
mov
xchg
das
repz
jp
movsb
subb
and
adcl
mov
es
rcrl
sbb
dec
mov
inc
inc
lock
jb
add
or
arpl
ret
mov
icebp
dec
mov
cmp
and
and
xchg
lret
sub
mov
outsb
push
das
sub
scas
ss
rolb
movsb
mov
loopne
mov
pop
loopne
or
xchg
scas
cmp
sbb
test
jle
nop
dec
pop
cmp
mov
rorl
mov
icebp
movsl
dec
mov
lock
lods
push
stos
sbb
xor
cmp
xor
mov
test
jno
push
cli
andb
sub
lea
mov
std
ljmp
mov
jge,pt
inc
rorb
dec
jbe
mov
pushl
xor
cmp
mov
pusha
rorb
jmp
jecxz
push
das
xor
loope
outsl
outsl
dec
jbe
test
out
test
int
sub
loope
xor
pusha
bound
push
idivl
mov
sahf
ds
dec
lcall
test
pop
iret
push
inc
aam
add
push
and
cmpsl
push
les
call
dec
mov
dec
rolb
mov
dec
inc
cltd
std
push
sbb
inc
popa
xor
sbb
popa
rcll
mov
push
push
cli
inc
jecxz
xchg
rcll
fisubl
mov
push
aas
sub
pusha
push
scas
xchg
xor
and
mov
add
ljmp
push
and
mov
jl
xor
popf
sbb
mov
pop
dec
mulb
loop
test
mov
cmpsb
mov
jge
mov
add
loop
jb
sbb
fdivr
test
mov
jle
incl
mov
xchg
rorl
sub
add
addr16
cmp
test
push
dec
mov
mov
aaa
mov
mov
mov
pop
pop
push
outsb
mov
dec
mov
and
adc
adc
out
int3
stos
in
les
mov
jp
pop
sbb
fldl
xchg
notl
cld
mov
and
enter
sbb
fldpi
xchg
fidivrs
dec
lret
cmp
cmp
xchg
and
push
mov
push
in
mov
imul
and
mov
mov
scas
fcompl
out
fucomi
aad
cmp
in
fs
lock
iret
cmp
in
shrl
sti
negb
ret
mov
scas
ja
xchg
fsubrs
stc
pop
loop
ret
lods
dec
cmpsl
iret
xchg
or
insb
popa
add
loope
leave
arpl
mov
and
add
add
jnp
add
unpcklps
lcall
stos
roll
dec
xchg
mov
bswap
fbstp
imul
ss
mov
push
push
xor
jbe
aad
ret
add
push
aaa
outsb
jne
add
cmp
cmp
pop
pop
arpl
rcl
sbb
test
mov
dec
outsl
and
mov
and
int
fistl
sub
jns
enter
xor
push
cwtl
das
data16
out
jmp
pop
mov
dec
popf
aam
push
aad
cli
rorb
adc
mov
pop
test
orl
mov
dec
mov
mov
daa
das
lret
xchg
xor
sub
push
and
out
dec
mov
push
cmp
dec
inc
out
mov
mov
mov
pop
movsb
movsl
lcall
or
test
jno
stos
ret
fcomps
aad
cltd
cmp
push
adc
mov
xor
xlat
movsb
adc
jecxz
add
out
push
mov
std
xor
fbstp
out
dec
cmpsb
insl
or
test
mov
mov
loop
adc
sti
enter
or
divl
insl
sub
and
out
sbb
xor
loop
mulb
sbb
into
daa
outsb
mov
insb
fwait
cmp
jno
push
insb
jg
pop
jecxz
enter
cmp
insb
mov
leave
in
adc
in
pop
out
sahf
inc
mov
adc
nop
dec
sbb
orb
xor
inc
hlt
mov
outsb
iret
cmp
add
push
jp
inc
or
insb
mov
mov
jno
rcrb
stc
mov
cmp
cmp
mov
cmp
cmp
or
sbb
in
sub
movsb
mov
jno
daa
cltd
push
adc
adc
hlt
push
repz
js
fs
add
sub
orb
sub
popf
jbe
scas
rep
sarl
push
scas
dec
arpl
lods
fbld
shll
outsb
jle
mov
cld
or
outsb
std
hlt
mov
cmpsb
dec
add
mov
inc
pop
out
and
aaa
loopne
mov
aam
subb
shrl
addl
adc
or
ret
jb
pop
int
cmp
loop
push
or
inc
int3
test
cmp
mov
insl
ja
outsl
and
mov
add
movsl
fs
jecxz
lahf
mov
cli
xor
imul
test
ja,pn
aad
pop
fs
push
sub
push
repnz
pop
cmpsb
popf
fimull
loop
out
mov
out
lods
push
pop
sarb
push
rolb
jns
xchg
lock
pop
andl
js
js
and
mov
and
add
xchg
pop
sbb
xchg
fndisi(8087
xor
popa
test
out
test
xchg
lock
lds
movsb
in
add
jecxz
and
iret
dec
mov
call
js
mov
push
xor
test
fdivrs
or
push
lcall
popf
aam
nop
dec
loope
jge
ret
adc
mov
hlt
inc
popa
cld
sti
inc
sahf
xor
inc
dec
repz
pop
les
shl
xchg
sub
dec
mov
adc
add
or
sbb
arpl
int
arpl
loopne
hlt
shlb
leave
or
xor
sbb
adc
stc
xchg
push
outsl
adc
and
mov
fwait
ret
addb
icebp
cmp
sarb
mov
je
cmp
pop
or
add
mov
cld
dec
rol
pop
inc
mov
pop
pop
mov
vpcmpeqw
nop
fldt
clc
pop
daa
subl
mov
adc
aam
mov
stos
sbb
or
push
mov
jne
mov
andl
push
jg
out
incl
in
add
jmp
xor
popf
mov
and
shrl
movsb
xlat
sbb
push
cwtl
sbb
mov
rolb
leave
jge
xor
or
push
test
dec
icebp
insl
nop
jne
xchg
out
dec
mov
pop
and
inc
ja
mov
add
xor
or
pop
bound
push
out
scas
movsb
xchg
pop
mov
push
push
add
xchg
mov
adc
mov
adc
lcall
iret
test
xchg
dec
mov
aad
add
sbb
push
cmp
mov
arpl
add
adc
xchg
or
cmp
sbb
pop
and
nop
mov
dec
ja
ret
out
sbb
adc
cmpsl
in
fsubrs
aam
lret
movsl
movsb
test
dec
xchg
inc
cltd
xchg
adc
cmc
fldl
lock
add
mov
cld
jge
movsb
inc
enter
mov
popa
ds
xlat
outsb
rcrl
sarl
cmp
mov
enter
loope
jl
mov
jns
mov
popf
bnd
lds
mov
data16
mov
mov
repz
and
cmpsl
inc
xor
fidivs
data16
or
aam
sbb
lahf
dec
fmul
sub
mov
sub
cmp
sub
loop
xor
mov
dec
xlat
stos
testb
mov
in
dec
mov
shrl
es
lock
aam
dec
lock
rol
cmp
mov
jae
mov
popa
pushf
out
aaa
test
and
sbb
bound
xor
data16
jecxz
loopne
pop
fwait
loope
enter
lret
cmp
out
movsb
fdivs
addr16
orl
fiadds
mov
insl
int3
xor
mov
dec
or
and
inc
aaa
std
push
jg
ljmp
movsb
mov
scas
rcrb
jbe
mov
stos
pop
imul
sbbl
dec
add
ret
xchg
xor
sub
cmp
frstor
data16
add
push
mov
cmp
mov
fstpt
ret
fucom
scas
je
cmpsl
fists
insl
pop
leave
stos
popw
xchg
cld
sub
enter
inc
sbbb
cmp
xchg
xor
bound
inc
and
call
mov
mov
insl
bound
lea
ds
push
int
shrb
push
repz
add
ljmp
enter
sbb
mov
pop
lods
dec
cmp
mov
pop
aam
loop
lret
sub
xor
cmp
adc
and
pop
int
and
movsb
xor
xchg
inc
pusha
jbe
shlb
fadds
movsb
clc
cli
in
dec
outsb
jecxz
popa
add
jns
stos
ss
dec
mov
stc
jp
dec
gs
add
dec
inc
clc
divb
dec
jmp
es
movsb
dec
sub
inc
xchg
push
jp
lahf
add
xor
mov
cmp
dec
cmpsl
out
cmp
add
inc
hlt
adc
std
inc
cmp
pop
aam
aaa
xadd
cmc
push
push
sbb
imul
addr16
shlb
cmpl
call
hlt
sbb
test
icebp
lods
pop
or
and
jnp
int3
push
js
rcl
jge
shrl
aaa
stos
ret
sahf
adc
loopne
cld
xchg
pushf
cmp
out
std
cwtl
iret
push
inc
mov
mov
outsb
stc
mov
outsb
cmp
aad
pop
mov
pop
loopne
mov
sub
addb
add
frstor
movsl
inc
popa
pop
add
ja
pop
enter
cli
mov
dec
push
inc
stos
jno
push
mov
cltd
cmpsl
test
in
lret
aam
sbb
bnd
sub
stc
or
and
loopne
cmpsl
xor
into
sbb
xchg
arpl
mov
lock
lds
imul
and
jmp
into
xor
sub
insb
push
push
pop
test
inc
das
nop
jmp
fdivs
push
cmp
mov
stc
dec
jnp
es
ss
enter
lea
dec
in
dec
inc
hlt
jg
mov
sub
cmpsl
lret
xchg
pop
and
test
or
rorl
mov
cmp
mov
push
ljmp
aam
push
jmp
popa
xor
sub
sbb
ret
jmp
mov
js
shr
pop
xlat
cmp
insl
loopne
cmpsl
jbe
sub
pop
ud0
cs
sbb
push
or
cli
fcmovu
leave
fwait
in
lret
jmp
and
or
es
adc
bound
lea
xchg
divl
xchg
mov
xor
cmp
out
lea
inc
dec
jl
pop
adc
insb
daa
sub
inc
shlb
mov
sub
lret
sub
testb
mov
add
xor
add
push
jmp
mov
in
xchg
xchg
orb
jbe
pop
mov
loopne
pop
pop
ret
stc
mov
push
jge
aad
fucomip
stc
cwtl
jp
sbb
cs
inc
mov
pop
shrl
sub
or
jg
adc
mov
cmp
lret
aam
inc
addr16
pop
sub
mov
test
jo
dec
mov
cmp
scas
xor
loop
dec
ret
loope
cld
int3
push
bound
mov
pop
sahf
in
data16
fmuls
push
jno
or
out
movsl
jo
imul
jae
jmp
mov
dec
mov
lahf
or
jb
jmp
call
mov
xchg
xor
cmc
out
in
mov
xchg
cmp
inc
and
mov
pop
sti
fidivrl
call
inc
inc
and
test
adc
adc
cld
pop
pop
adc
scas
cmp
jns
mov
popa
dec
push
enter
fmuls
mov
xlat
out
push
or
mov
stos
dec
movsb
mov
mov
jecxz
cmp
pusha
subl
sti
xor
imul
mov
mov
aam
mov
mov
lds
repnz
in
popf
mov
or
aam
mov
fcomps
and
divb
shl
jb
add
mov
lods
cltd
push
and
push
mov
and
mov
adc
xor
inc
test
inc
lahf
mov
out
dec
jno
daa
arpl
test
push
ljmp
cmp
or
cmpsb
mov
push
dec
sbb
decl
or
ds
cli
xchg
add
jp
repz
movsb
pop
imul
hlt
fdivrl
loopne
in
sub
mov
push
or
pop
loop
test
jb
ljmp
cmp
fsub
ljmp
mov
pushf
outsl
jnp
jmp
ret
cmpsl
or
leave
rorl
out
adc
scas
std
scas
es
lea
aad
cmpsb
xchg
fadds
lock
sub
push
in
xor
lcall
jbe
es
movsb
fldl
shrd
and
mov
ret
add
dec
pop
mov
jmp
adc
movsb
fcoms
adc
pop
aas
fmuls
mov
arpl
lret
mov
mov
jle
jb
shll
jmp
mov
or
dec
xor
push
push
jb
loope
cmp
outsb
es
testb
adcb
xchg
shll
pop
out
aam
lods
jmp
xorl
gs
pushf
std
jle
cmpsl
inc
or
movsb
inc
lahf
stos
rcrb
pop
and
hlt
sub
fnsave
aaa
mov
lds
test
rcr
mov
out
into
mov
pushl
push
mov
mov
das
scas
mov
mov
das
cmc
adc
subl
inc
pop
or
jp
jne
lret
adc
pop
rorb
inc
shlb
fcomps
movsl
xor
sub
sub
sub
bound
stos
lahf
jmp
enter
scas
sbb
cwtl
cld
out
mov
rcrb
loop
pop
push
stos
jle
sub
scas
inc
lods
pop
aam
inc
push
call
pop
ret
fdivs
rcrb
pop
je
mov
in
fcoml
xor
jecxz
pop
and
setge
and
xlat
repz
push
mov
sbb
mov
shrb
jmp
mov
pop
add
dec
mov
pop
fidivl
lea
xchg
mov
lret
or
push
scas
cmp
jnp
fnsave
loopne
dec
push
idivl
adc
cmpsb
jl
sbb
cltd
and
mov
gs
jg
cmpsl
or
ror
popf
stos
mov
stc
fists
cmp
pop
mov
aaa
loop
cmc
ror
cmpsl
movsb
xor
push
mov
cmp
dec
in
pop
or
and
xor
testb
dec
bound
cmp
mov
and
sbb
dec
movsl
mov
mov
and
stc
push
dec
imul
sti
ret
int
fistpll
mov
roll
orb
jbe
adc
in
sub
add
pop
mov
xchg
or
jmp
rolb
mov
arpl
cmc
sbb
imul
andb
adc
faddp
sub
mov
mov
push
ljmp
xor
movsb
or
xchg
mov
mov
mov
pusha
inc
dec
add
scas
add
sub
imull
stos
cmp
aam
or
jg
rorl
data16
lahf
sbb
sbb
xchg
mov
out
xchg
in
xor
add
cmp
pop
mov
mov
cltd
fistpl
pop
mov
dec
push
scas
inc
sbb
call
fcoms
mov
enter
das
aam
loop
sub
rorl
sub
sub
pop
jmp
jecxz
add
ljmp
pop
cmp
xchg
mov
pop
mov
mov
aas
pushf
stos
mov
outsb
jmp
lock
lret
sahf
andl
cmp
jno
movsb
repz
inc
or
mov
call
aam
jp
xlat
adc
cmp
mov
arpl
add
and
pop
sub
loope
imulb
and
fildl
fdivs
je
xchg
xchg
lahf
loop
iret
xchg
inc
inc
xor
stos
push
xchg
mov
pusha
xor
and
push
push
loopne
mov
push
int3
fists
insl
in
xor
dec
xor
jg
adc
stc
jno
add
faddl
fmul
inc
lds
fwait
jmp
mov
push
fucom
addr16
loop
mov
sarb
loopne
neg
mov
loopne
sub
imull
pusha
das
push
inc
sub
mov
dec
xchg
ljmp
jae
push
insl
mov
add
push
adc
popf
jbe
movsb
jne
pop
add
outsl
push
pushf
push
imul
push
movsb
pop
popa
popf
cmpsb
push
mov
mov
sbb
ljmp
bound
out
sbb
sbb
orl
jge
push
ret
aad
sahf
mov
cmp
cmp
cmp
inc
jp
push
add
or
mov
stos
lahf
inc
jno
fmull
or
dec
lods
pop
cmc
mov
sbb
test
in
mov
jg
adc
test
ja
nop
or
mov
nop
cmp
jo
movsl
shl
pushf
cld
fwait
loop
fimuls
pop
jae
jmp
out
jmp
mov
fwait
add
fdivs
bound
js
out
insl
dec
popf
jo
adc
scas
xchg
or
mov
in
mov
sub
add
int3
aam
mov
push
fwait
xchg
enter
in
jmp
popf
popa
dec
and
xchg
jb
mov
mov
xor
push
adc
lods
and
stc
pop
mov
mov
jmp
add
sub
mov
gs
cmc
pusha
out
xchg
mov
mov
jae
rorb
xchg
fcmove
lods
pop
inc
jb
ret
popa
in
cmp
cmp
xchg
pop
adc
xor
fwait
mov
push
loop
jmp
xchg
cmp
lret
mov
pop
popf
sbb
and
movsb
xchg
dec
add
into
or
sbb
scas
paddsw
cmpsb
dec
cmp
ret
xor
ja
pop
cmp
mov
adc
das
sbb
test
jne
data16
cli
and
mov
int
mov
outsb
mov
add
push
xor
dec
push
imul
mov
push
aam
push
rcl
lahf
pop
add
mov
mov
stos
incl
adc
pushf
fadds
test
in
push
or
push
inc
and
aam
fildl
push
out
dec
rclb
and
mov
shrl
cmc
out
jg
cmp
and
mov
push
push
xor
popa
shlb
add
mov
ja
icebp
adc
cmc
shlb
arpl
cltd
push
add
das
xchg
cmc
jns
inc
stos
sarl
scas
sub
and
mov
jge
jge
and
imul
inc
mov
add
out
loopne
ss
xor
cmpl
divb
dec
dec
mov
imul
or
aam
ret
sub
stc
mov
mov
mov
in
in
fwait
xor
jns
int
loope
fildll
stos
xorl
hlt
cli
dec
mov
sbb
stc
rcl
add
pop
or
cli
jnp
mov
outsl
mov
dec
icebp
outsb
inc
iret
outsl
and
sbb
aas
dec
xorl
popa
sbb
mov
in
mov
scas
fdivl
push
fldenv
and
ja
shlb
adcl
cli
enter
orb
dec
in
das
outsb
shlb
cmpsl
mov
ljmp
xor
lcall
dec
leave
cld
hlt
int3
push
add
popf
push
loopne
or
xor
jmp
inc
xlat
icebp
iret
imul
mov
sub
cmp
dec
cmc
nop
int3
sub
sbb
aam
jg
insb
pop
lret
adc
fcomps
sub
stos
mov
addl
es
inc
ja
mov
cmp
cmc
adc
mov
lods
jle
push
ja
aaa
ss
sub
adc
stc
mov
loopne
mov
ror
int3
pop
push
sub
dec
dec
jne
pop
jno
pop
lret
mov
mov
mov
sub
inc
int3
adc
cmp
shl
test
add
jp
pop
aad
push
xchg
inc
push
cmp
ret
or
cld
xor
stos
push
or
iret
shl
scas
mov
test
sub
push
mulb
ja
lret
scas
enter
cmpsl
adc
jns
aam
mov
inc
mov
enter
icebp
aam
out
in
stos
jno
or
mov
fnstsw
cmp
push
popf
ret
mov
in
ja
dec
or
cs
orb
xlat
mov
shl
scas
mov
cli
sahf
in
imul
xchg
pop
test
cmp
lods
cmc
insl
out
aam
shrb
jge
or
push
mov
jmp
sarl
int
int3
cli
js
mov
adc
ja
cmp
insb
aam
rorl
xor
stos
and
dec
dec
xor
mov
cmp
add
ret
mov
rcll
imul
pop
lods
popf
mov
cs
das
addr16
inc
mov
mov
sub
shl
insb
adc
test
mov
dec
cmp
jmp
push
cmp
loope
add
xchg
push
add
push
outsl
cmp
cld
sti
sub
add
pop
sbb
add
adc
adc
pop
xchg
mov
dec
lods
stc
add
aas
fmuls
cmpsb
cmpsl
sar
out
sbb
popa
inc
adc
fdivs
jmp
mov
idivl
xor
jno
adcb
enter
inc
outsb
dec
dec
push
pop
les
mov
je
daa
xchg
out
mov
pusha
test
addr16
xor
aaa
aas
push
add
mov
shrb
cmp
and
inc
xlat
adc
rorl
popa
aam
adc
pop
add
dec
sti
add
or
mov
jge
adc
test
fsin
jp
insl
mov
inc
inc
in
int3
jecxz
jg
loopne
roll
std
jecxz
push
ret
in
cs
adc
mov
scas
repz
insl
scas
cmp
cmpsl
fwait
sub
mov
fidivrl
xorl
xchg
test
bound
test
mov
test
aam
repnz
jp
test
jns
mov
aam
or
arpl
daa
cmp
test
mov
push
jmp
xchg
test
pop
adc
adc
ljmp
jmp
ja
rol
pop
jge
inc
in
mov
arpl
lret
mov
sub
movsb
clc
push
xchg
push
sbb
dec
test
push
jb,pn
lcall
jnp
mov
clc
imul
xor
add
shrb
push
xchg
movsb
push
aad
jnp
push
mov
mov
rclb
push
hlt
cmp
fadds
rolb
and
dec
mov
pop
insb
cmpsl
cmp
mov
enter
xchg
or
mov
mov
sub
and
adc
sub
fsubrs
and
leave
call
ds
lret
sysret
cmpsl
fimuls
xchg
pop
or
jns
mov
rcrb
xchg
and
mov
dec
rcrb
and
icebp
mov
popa
cmp
subb
pop
xchg
lahf
add
or
push
enter
push
test
xchg
dec
jmp
fistps
fsubrs
stos
call
das
insl
mov
pushf
lret
popf
xor
cmp
adc
jmp
je
mov
or
xor
sub
adcl
pop
ja
aam
mov
pusha
add
pop
push
inc
dec
in
aam
dec
cli
xchg
push
and
loop
or
mov
ja
inc
inc
test
push
inc
fs
popf
bound
lret
mov
add
movsl
insb
aam
push
iret
aam
repnz
hlt
add
xchg
outsb
leave
jp
lcall
mov
mov
aam
cmp
shlb
mov
aad
les
stc
xchg
fs
bswap
cmp
pop
stc
daa
out
and
out
mov
mov
fisttpl
xor
idivl
test
adc
fimuls
cmp
rcl
test
jno
or
mov
test
inc
fcomps
mov
or
btc
mov
dec
hlt
call
and
scas
rol
gs
mov
bound
fisttpll
xchg
mov
shrl
xchg
out
movsb
call
pop
cmp
or
pop
insb
xor
cmp
pop
cmc
rorb
test
mov
xchg
sti
ret
insb
mov
lret
jg
mov
cwtl
movsb
shrl
mov
mov
xchg
mov
mov
xor
xchg
fmull
and
mov
mov
rorl
or
shrb
dec
mov
adc
or
dec
pop
dec
inc
scas
mov
dec
jmp
cmp
mov
inc
fisttps
movsl
cmp
cli
data16
aam
rolb
inc
cwtl
nopl
and
in
loope
mov
inc
sub
out
scas
pop
mov
ss
jg
enter
inc
je
add
xor
mov
inc
push
xchg
sub
scas
or
das
mov
jge
fistps
insl
pop
imull
ljmp
ret
hlt
push
out
popf
iret
mov
or
pushf
cmp
jnp
nop
divl
inc
xor
aam
push
xorl
jge
stos
stc
test
cmp
ret
mov
out
clc
rcl
in
stc
pop
cwtl
out
dec
cmp
rorb
xchg
movsb
data16
fstpt
icebp
jb
adc
insb
add
mov
xor
sub
cmpsl
aam
inc
popf
or
mov
insb
mov
pop
inc
jne
ja
movsb
jns
ret
push
xchg
mov
mov
loop
mov
mov
mov
add
int3
mov
mov
shlb
sub
add
out
mov
dec
jb
lods
add
dec
inc
push
inc
arpl
dec
pop
icebp
int
das
stc
enter
bound
int3
xlat
outsb
adc
mov
aaa
pop
enter
inc
pop
aas
mov
dec
dec
pop
call
jno
mov
dec
mov
xchg
push
and
push
pop
or
and
xor
adc
sub
mulb
cs
cmpsl
jl
pop
jbe
cwtl
orb
mov
arpl
je
shlb
jecxz
jae
add
out
push
xchg
outsb
daa
lret
mov
inc
cmp
and
pop
push
and
dec
mov
dec
fsubrs
shr
bound
push
icebp
aaa
in
jg
mov
les
jge
nop
call
outsb
pop
mov
ljmp
lock
lcall
xchg
rorl
enter
xlat
xchg
hlt
jne
out
jb
daa
mov
cmp
call
adc
orl
repz
scas
xchg
cli
cmpl
cmp
pop
pop
inc
inc
out
das
ret
jecxz
and
or
movsb
icebp
leave
test
ffreep
and
push
and
add
pop
fsubrs
outsb
adc
lea
rcrl
xor
ss
push
loop
xor
jp
cmp
fcomip
movsb
sbb
imul
add
aam
loop
jbe
lea
repz
movsb
mov
fimuls
inc
ss
pop
cld
repnz
fimull
mov
dec
push
inc
loope
mov
sbb
cmp
mov
inc
cmp
mov
test
add
cmpsl
cwtl
movsb
adc
jns
push
ss
fists
add
mov
enter
pop
xor
xor
mov
into
and
mov
xor
or
jmp
cmpsl
xchg
dec
lods
mov
mov
scas
and
dec
mov
insw
sub
sub
loopne
jb
movsb
inc
cmpb
jle
cmp
popa
test
js
mov
test
cmp
popf
jge
inc
xchg
sbb
and
mov
mov
imul
dec
out
clc
divl
xor
inc
cmp
jmp
push
shl
addr16
pop
fists
dec
mulb
aaa
pop
aam
leave
and
mov
mov
push
negl
dec
sub
sub
or
xor
andl
add
push
and
in
repz
clc
cmpsl
pop
sbb
sub
int3
jb
ds
movsb
fsubrs
lods
sarb
clc
dec
out
mov
hlt
rolb
es
pop
subb
mov
orb
push
xor
rcrl
mov
roll
pop
xchg
iret
out
mov
push
add
adc
sub
aas
sbbl
and
loope
dec
ss
lcall
xlat
arpl
xchg
ret
jmp
inc
int3
cmp
out
aam
shlb
pop
pop
add
adc
inc
clc
nop
pop
cmpsl
insb
movsb
out
pop
xchg
testl
rol
movsb
outsb
sti
js
sbb
sub
mov
and
enter
scas
movb
sti
mov
ret
push
adc
mov
in
loopne
in
inc
cmp
iret
jb
outsl
sub
jmp
sub
inc
clc
cwtl
pop
xor
mov
push
inc
cmp
cwtl
test
push
mov
test
daa
sahf
cmp
xorb
enter
cmpsl
adc
data16
cltd
xchg
pop
jns
int3
sub
mov
roll
dec
icebp
mov
cmp
sarb
push
shll
push
pop
popa
imulb
stos
lfs
sti
movsb
addps
mov
lea
int
outsb
fwait
pusha
cmp
push
sahf
xchg
sti
les
inc
scas
fisttps
sbb
clc
dec
divl
add
and
aaa
idivb
sub
stc
nop
mov
imul
mov
pop
or
mov
scas
fcmovb
daa
lods
aad
and
ja
cld
xchg
and
into
cwtl
call
push
pop
or
mov
test
insb
or
cmpsl
mov
sbb
dec
mov
std
aad
lret
ret
sbb
mov
inc
jne
pop
or
fmuls
stos
in
aam
cmp
stc
mov
dec
sub
xchg
out
inc
dec
mulb
push
xchg
faddp
and
cmpsb
inc
jno
cmp
fldt
sti
lret
inc
add
cmpb
imul
inc
mov
jg
cwtl
add
imul
filds
xor
adc
cmp
subl
xor
mov
fidivs
aam
aaa
test
lods
fnstsw
push
adc
and
lods
jmp
xorl
xchg
pop
or
test
push
push
xor
mull
rcll
or
xor
lahf
mov
xchg
jge
or
in
dec
cmp
push
mov
nop
pushf
shll
out
test
fsub
fldcw
popf
push
stc
mov
ret
ja
pushf
push
enter
xchg
out
pop
ds
scas
pop
ss
add
push
mov
fsub
mov
mov
or
ss
push
decb
in
jne
dec
jecxz
xor
mov
movsb
pop
inc
mov
lahf
stos
adcl
shrb
push
mov
and
mov
scas
cmpb
sbb
imul
inc
enter
pushf
mov
loop
jbe
stc
daa
dec
add
outsl
mov
stos
in
inc
decl
leave
and
or
xor
andl
add
sbb
or
movsb
sbb
pop
sbb
add
or
and
push
loopne
sub
lea
es
dec
daa
call
aam
bound
dec
idivl
mov
loope
push
popf
cmp
push
inc
call
push
repz
aam
enter
cmp
mov
leave
jo
mov
hlt
mov
mov
or
jo
mov
enter
adc
in
leave
insb
push
sbb
out
pop
call
xchg
and
imul
mov
add
or
mov
xorb
shlb
add
or
insb
inc
pop
clc
cmp
cmpsl
mov
jo
add
jl
xchg
pop
icebp
xorb
xchg
mov
jmp
add
mov
push
push
xchg
jecxz
inc
rcr
call
int
xchg
mov
ffree
daa
jmp
push
jae
insb
dec
stc
xchg
mov
mov
dec
inc
loope
jmp
bound
and
data16
mov
rolb
lock
xchg
mull
pop
xor
sbb
pop
adc
jl
lcall
addb
xor
out
out
push
push
sti
mov
adc
out
mov
mov
xchg
aam
lods
das
cmp
fsts
jno
pop
mov
stc
movsb
and
mov
cld
xor
mov
cmpsl
int
pop
out
jmp
xor
lock
push
movsb
and
jae
xlat
push
xchg
inc
dec
scas
mov
mov
jno
sub
add
fistps
mov
or
jbe
imul
push
xor
rolb
mov
jecxz
sbb
in
shlb
lods
lea
or
mov
inc
je
mov
popf
das
pusha
popf
cmp
jbe
dec
sub
inc
cmpsl
movsb
mov
sbb
jmp
mov
psrlw
mov
ja
stos
inc
fdivrs
pop
mov
push
xchg
cmp
cmpl
popl
or
inc
dec
mov
lea
mov
mov
inc
imul
stc
and
mov
adc
addl
scas
scas
sub
add
jmp
adc
fsubrl
fadds
jno
mov
pop
jl
arpl
addl
imul
and
out
cmp
lahf
idivl
inc
cmpsl
stc
insl
dec
push
sub
mov
adc
and
sbb
xlat
int3
jnp
lcall
clc
jmp
jb
gs
push
and
and
fmuls
jmp
xchg
adc
icebp
mov
sbb
lahf
adc
aam
xchg
mov
push
movsl
cmpsl
enter
mov
mov
jae
inc
out
pop
enter
and
subb
jo
lcall
mov
push
iret
or
aas
add
jno
loope
inc
jmp
dec
adc
xor
mov
popa
mov
outsl
mov
into
int
mov
mov
sub
or
mov
push
loopne,pn
or
icebp
or
pop
xchg
jns
aad
sbb
movsl
push
add
push
ficompl
pop
shr
test
icebp
xchg
cmp
pop
pop
mov
xor
mov
cmp
aas
arpl
es
fnstenv
inc
dec
addr16
stc
dec
jns
es
popa
sbb
xchg
lock
push
mov
xchg
mov
imul
daa
push
mov
cmp
insl
repz
scas
fdivrl
xchg
jecxz
mov
mov
jbe
mov
cs
repz
test
int3
stc
mov
pushf
imulb
daa
shl
ss
push
imul
mov
aam
sbbb
xchg
popa
mov
out
movsb
outsb
and
mov
cs
pop
loope
mov
sahf
jmp
inc
dec
jns
sbb
jno
imul
into
mov
cmpsb
subl
push
dec
leave
push
jecxz
cli
xor
push
stos
xchg
aam
and
mov
out
mov
ret
mov
and
add
add
cmpsl
mov
sub
inc
jecxz
out
mov
mov
cmpsb
and
mov
pop
das
cmp
jmp
out
lahf
fistl
jecxz
arpl
adc
leave
lcall
jb
in
jmp
fnstcw
es
adc
or
fcmovu
loopne
not
lods
aaa
ja
mov
aam
pop
pop
dec
ja
loop
out
and
aam
dec
int
std
sarb
mov
pop
mov
fst
jl
mov
xor
jp
or
push
lods
pop
mov
xchg
sti
add
imulb
cmpsb
rcrl
cmp
sub
je
pop
xchg
mov
dec
xchg
into
or
sbb
lock
popf
dec
dec
test
cmpsb
cmp
iret
sub
popa
inc
sbb
cmp
clc
and
pop
out
addr16
cmp
loope
clc
lods
aam
popf
dec
jae
mov
or
inc
push
cmp
add
outsb
popf
and
out
test
sar
push
push
sub
ds
cmp
inc
rcrb
and
mov
icebp
out
movsb
pop
daa
fildll
sub
sbbl
pop
pop
mov
pop
insl
test
movsb
lcall
cmc
shlb
bound
imul
and
jo
cmp
jp
xchg
mov
movl
xchg
mov
pop
xchg
mov
fidivs
lods
incl
mov
jbe
scas
dec
xor
lcall
inc
sub
mov
xchg
leave
js
cmp
jmp
add
mov
cmp
bound
stos
fidivrs
mov
cs
pop
fisubl
test
sbb
dec
shlb
and
cmp
das
push
ss
push
pop
jae
and
decb
push
shlb
and
aam
inc
notb
aas
cli
sbb
fidivs
jnp
lods
xor
dec
rcl
loop
mov
arpl
sub
push
cltd
ljmp
movsb
test
loopne
inc
sbb
ds
stc
popa
scas
cltd
push
scas
pushf
add
rcl
add
popa
adc
aas
dec
xor
pop
push
popl
and
clc
outsl
inc
mov
mov
test
sub
or
dec
test
jo
add
test
push
movsb
jno
inc
sbb
mov
fidivrl
lods
sbb
mov
dec
jecxz
inc
mov
dec
inc
test
ljmp
pusha
adc
rcl
subb
sti
lods
mov
mov
ss
jne
lcall
mov
sub
clc
sub
lds
scas
lods
in
rcl
adc
les
lock
sbb
jmp
or
arpl
mov
int
lcall
js
jl
dec
insl
mull
mov
les
mov
arpl
push
mov
mov
dec
pop
icebp
aad
pop
push
jbe
fldt
sahf
lret
cmp
pop
mov
movsb
cltd
aam
cltd
mul
xchg
pushf
push
mov
popa
xlat
pusha
xchg
cmp
mov
sbb
ret
lcall
out
addr16
stos
rolb
scas
leave
jmp
cmp
into
lahf
shll
push
fistl
cli
iret
jge
repnz
xor
add
lcall
je
push
mov
ss
mov
adc
lret
lcall
jge
adc
bound
mov
mov
icebp
out
sub
fstps
lret
mov
jnp
stos
enter
jne
mov
xor
mov
and
mov
int3
sub
xor
mov
iret
xor
or
sar
xchg
push
or
mov
push
out
add
mov
cli
aam
inc
call
js
dec
cmp
fs
cmp
loopne
sub
push
sbb
insb
xchg
mov
js
sahf
movsl
orl
xchg
cld
xchg
push
push
adc
cmp
mov
or
movsb
fcomip
cmp
pop
aam
jge
ficompl
xchg
pop
stc
aam
inc
sub
jo
mov
or
out
or
inc
rol
sbb
sbb
test
out
sarb
adc
es
popf
std
mov
sbb
sub
loop
jae
cmp
inc
jb
adc
aam
push
jo
inc
call
decl
inc
push
dec
jp
sbb
divb
pop
pop
push
pushf
in
inc
adcb
mov
outsb
insl
sub
orl
popf
push
repz
in
mov
hlt
inc
shl
stc
in
push
mov
aam
mov
imul
sbb
cmp
adc
mov
jno
mov
pushf
flds
sub
mov
shrb
cld
adc
into
xor
mov
out
aam
cli
mov
or
jnp
rolb
add
inc
xor
mov
push
inc
cmc
icebp
in
dec
outsb
pop
test
mov
pop
ss
adc
in
dec
popf
fdivl
push
inc
leave
pusha
imul
dec
xchg
or
inc
lods
iret
push
dec
pop
incb
mov
in
add
jmp
mov
rcll
sbb
inc
out
pop
mov
jae
sub
push
dec
push
fimull
aaa
xlat
mov
cmp
mov
lock
fmulp
or
sbb
or
lret
test
aad
out
aam
lahf
mov
sbb
in
cmp
ret
test
jl
mov
add
cmp
aaa
clc
or
sti
loope
or
pop
iret
flds
push
sub
mov
bound
fildll
push
cmp
sahf
jae
jmp
sbb
and
rcrl
dec
cmp
dec
lds
mov
adc
add
shll
je
sbb
jb
inc
cmp
pop
sub
sbb
jb
mov
mull
mov
sbb
fcmovne
mov
stc
jo
popf
ljmp
add
mov
loope
ja
rolb
orb
aad
sbb
sbb
pop
xchg
ficoml
cmp
xchg
mov
aam
addb
mov
mov
xchg
cs
sub
mov
jg
jne
insb
cmp
lods
popa
and
pop
pushf
je,pt
mull
inc
sarl
jl
cwtl
das
popf
shl
popf
test
iret
mov
sub
loopne
cmp
and
orb
outsl
sub
mov
sub
leave
arpl
iret
mov
adc
jge
mov
negl
pop
xchg
and
sbb
inc
in
test
enter
lock
or
hlt
inc
pop
mov
jbe
xor
mov
jmp
rcrl
in
andl
lods
aam
mov
dec
cli
push
and
jo
aas
movsl
mov
mov
mov
mov
cs
in
mov
mov
iret
cld
sub
and
stos
fsubs
stc
jmp
out
les
xchg
sub
cmc
cltd
pop
out
pop
or
xlat
cltd
dec
lods
movsb
fisubs
dec
xchg
es
jp
lcall
cmc
aam
les
and
es
les
cli
aaa
es
mov
shrl
add
jae
mov
mov
je
jmp
mov
xchg
int3
mov
repz
sub
cmp
inc
mov
out
pop
and
xchg
out
dec
sub
lret
mov
mov
movsb
mov
push
inc
fsubrs
stos
jno
jns
fwait
mov
sub
adc
cwtl
movsb
jge
xor
into
mov
jge
mov
push
sub
mov
mov
inc
sti
fbstp
cmp
xor
test
cmc
inc
jo
add
fadds
mov
mov
inc
dec
inc
pop
push
loop
pusha
in
xor
sti
mov
cmp
mov
stos
out
and
pop
ja
add
adc
mov
xor
sub
cmpsl
xchg
jg
ljmp
fsubs
aam
pop
xchg
inc
cmp
cmp
das
cli
mov
jg
stc
loopne
dec
ret
adc
lahf
push
mov
dec
aaa
pop
pushf
pushf
push
cltd
dec
sub
jno
iret
and
std
push
inc
aas
pop
push
and
add
or
mov
cmc
xchg
aam
dec
scas
popa
rcll
xor
jg
jle
fdivs
inc
xor
xchg
pushf
ret
jl
fldl
pusha
and
aam
mov
mov
loopnew
sbb
jmp
stc
sub
les
xchg
aam
and
orl
adcb
xlat
jnp
cmpsl
jp
xor
jne
sti
sbb
mov
out
xor
push
and
addr16
and
mov
faddp
adc
sub
ret
stc
mov
mov
enter
scas
loop
fdivrs
inc
sbb
icebp
add
ror
jl
lcall
lcall
jl
loopne
mov
xor
mov
jnp
mov
jae
in
mov
mov
xor
mov
stc
fsubl
outsl
mov
mulb
add
or
shr
dec
mov
and
scas
mov
rcl
sbb
std
push
aaa
xchg
mov
xor
cli
aam
push
or
xor
mov
mov
pop
sbb
xor
and
jae
divb
mov
sub
test
sbb
loopne
dec
out
les
arpl
cmpsl
mov
lods
sub
loop
sbb
or
pop
aad
movsb
pop
stc
mov
das
mov
lea
sti
xor
cli
pop
jns
xor
out
mov
pop
sub
mov
test
mov
add
insl
cmp
hlt
sub
mov
and
cmp
ret
mov
ljmp
xorb
dec
jns
and
pop
jg
mov
insb
jmp
jnp
dec
ljmp
mov
cmpsl
pop
xor
addr16
push
fwait
insb
jnp
dec
cli
lds
mov
mov
aaa
xchg
into
pop
in
sbb
aam
lds
in
inc
push
mov
stc
ja
push
mov
inc
pusha
pop
pop
add
adc
cmp
push
cli
js
aam
pop
dec
push
push
sub
outsl
ret
push
add
pop
fidivrl
test
rep
dec
pop
mov
and
loope
mov
popf
shll
mov
movsb
mov
orl
test
bound
cwtl
cli
lahf
loope
xor
test
cmp
sbb
sbb
and
aaa
jp
cmp
pusha
ret
mov
in
aam
cmp
out
add
sub
sti
or
push
jp
inc
cmp
shrb
mov
pusha
js
test
movsb
imul
imul
cmp
adc
sub
and
mov
ret
mov
sar
mov
test
nop
mov
pop
or
mov
pop
psubsb
push
loope
movsb
push
dec
jge
lahf
dec
mov
insb
rcrl
testb
fs
into
mov
test
jo
pop
cmp
aam
in
xchg
push
lcall
or
add
inc
fs
jne
enter
mov
mov
mov
lock
sbb
mov
jge
lahf
mov
push
repnz
jmp
out
lret
dec
pop
mov
repz
push
lds
inc
daa
inc
and
das
hlt
inc
fstpl
aas
ljmp
shlb
aam
pop
jmp
cmp
adcl
not
jbe
mov
dec
add
stc
mov
into
in
mov
dec
sbb
ret
pop
les
xor
push
xor
xlat
dec
add
int3
cli
call
ja
movsb
sub
mov
sarl
inc
enter
das
jae
inc
dec
enter
incb
pop
pop
cmc
mov
in
cmp
or
push
cmp
pop
add
rorl
cld
outsl
mov
test
or
fsubs
push
and
cmp
sahf
aas
or
subl
fcom
and
sti
fmul
out
mov
adcl
xlat
add
sarl
fidivl
jnp
jg
clc
cmpsl
movsb
in
stos
repnz
ds
pop
mov
sbb
pop
sbb
mov
inc
pop
std
mov
in
in
lret
popf
sarb
aam
adcb
cmc
imul
fwait
test
arpl
push
and
or
aam
xchg
xor
es
jecxz
adc
push
leave
mov
xor
fdivrs
mov
rorl
push
fwait
test
das
aas
dec
push
or
cmp
mov
stos
addr16
cmpsl
pop
inc
loop
adc
fldl
aam
xor
jb
or
and
xor
js
lahf
movsl
push
stc
xor
test
insl
push
sbb
dec
push
insl
cmc
std
ffreep
sbb
pop
scas
cli
in
test
mov
adc
testb
xor
pop
mov
xor
push
jns
mov
add
divb
mov
inc
sub
test
jg
repnz
inc
cltd
movsb
sbbb
pop
push
pop
icebp
test
outsl
cmp
shl
xor
sub
or
pusha
aam
aas
mov
cmp
xchg
mov
mov
mov
mov
pop
jb
je
add
loopne
outsb
inc
int
cmp
lahf
ret
bound
movsb
xchg
pushf
pop
xor
add
in
mov
push
ds
xlat
fdivs
aam
mov
sub
mov
clc
mov
mov
or
sti
or
aam
xchg
stc
xchg
icebp
insl
sbb
mov
mov
or
movsb
test
dec
cmp
movsl
pop
out
pop
into
rcrb
add
mov
inc
or
xchg
add
pop
and
or
pushf
adc
cmp
add
or
aad
cmpsl
inc
xchg
dec
out
mov
iret
add
clc
xor
or
popa
add
or
addb
adc
bound
loope
stos
add
jae
sub
dec
cmp
rorb
dec
sub
xor
test
sar
push
or
mov
out
inc
mov
mov
loop
sahf
test
sub
dec
inc
mov
out
scas
daa
mov
push
ljmp
inc
arpl
ret
aam
dec
lret
lret
adc
inc
inc
inc
mov
dec
fs
inc
or
cmp
lods
rclb
dec
dec
aam
push
ja
outsb
cmp
aam
dec
rol
push
call
pop
pop
push
icebp
ja
lcall
mov
pushf
enter
and
test
mov
mov
ss
inc
xchg
xor
mov
push
push
xchg
xor
sbb
sub
sbb
sti
movsb
cmp
bound
mov
sub
push
pop
inc
pop
cmpsl
push
push
cmp
inc
test
ret
mov
pushf
xchg
iret
sub
adc
imul
mov
loope
scas
popa
movsb
test
add
leave
adc
clc
movsb
mov
xchg
int
and
add
adc
xchg
test
or
mov
mov
jp
das
dec
and
nop
and
mov
bound
mov
and
mov
push
imul
mov
rol
test
mov
jae
jp
inc
dec
dec
out
call
sub
push
sti
shr
sbb
scas
mov
cmpsb
pop
dec
decb
cmp
jns
negl
or
inc
into
cld
cmpsb
cmp
enter
mov
pop
aam
dec
push
lea
mull
inc
stos
repz
stos
mov
mov
inc
fs
movsb
cs
push
aad
jg
xchg
mov
nop
stc
adc
push
ret
push
dec
insl
add
aam
fcmovnb
jnp,pt
das
add
aad
fidivrl
push
sub
mov
aas
fs
imul
mov
xor
in
fists
cld
and
mov
mov
bound
mov
mov
insl
lret
push
dec
mov
mov
sti
adc
scas
sub
movb
mov
mov
test
int3
dec
loope
sahf
into
imul
les
cmp
insl
mov
fsts
mov
cmp
in
aam
cwtl
lret
popf
cld
loopne
enter
pushf
ss
fdivs
sub
stos
cmp
mov
std
ds
xchg
xlat
and
jbe
inc
int3
mov
test
nop
shrb
jl
lret
or
mov
es
aam
mov
cmp
adc
ret
jecxz
nop
add
xchg
and
mov
sbb
orb
testl
lret
in
movsl
loopne
daa
loopne
dec
shl
pusha
pop
adc
aaa
mov
jle
mov
outsl
mov
sub
ds
bound
test
adc
iret
outsb
inc
mov
sub
add
jg
outsl
sub
push
sub
mov
mov
xchg
sbb
ss
scas
cmp
inc
loop
dec
cmp
dec
xchg
add
xor
jmp
xor
and
std
fdivs
push
stos
adc
sub
cmp
jp
popf
aam
shr
mov
jmp
pop
leave
push
sub
mov
jbe
sar
test
lret
dec
adc
lcall
enter
cmpsl
loope
xlat
out
sahf
mov
jno
and
xchg
jp
push
jbe
pop
jg
iret
stc
xchg
pop
add
xchg
jl
jns
adc
loop
pushf
stos
dec
and
inc
push
rclb
sbb
mov
jle
sub
cmp
fsubrs
rorb
lret
inc
dec
cmp
cltd
xor
cld
insb
clc
lods
loop
insb
xchg
cmp
or
daa
frstor
jg
mov
mov
mov
cmp
jge
add
sub
mov
sbb
mov
test
lea
and
push
fdivs
dec
cmp
andb
or
xchg
popa
cli
or
sbb
push
hlt
xchg
aam
cmp
icebp
cmp
push
cmpsb
ja
jae
add
sub
push
cmova
mov
inc
cs
dec
popf
repz
or
mov
mov
stc
mov
lahf
xor
fisttps
rclb
jge
bnd
xor
out
push
popa
and
mov
push
and
and
inc
sbb
xor
mov
xorl
outsl
adcl
outsb
xor
push
cmp
pusha
mov
mov
movsb
jb
cmpb
aam
test
mov
jo
push
ret
xor
stc
outsb
scas
mov
mov
add
cmpsb
lcall
test
dec
xchg
popa
leave
dec
push
in
popa
dec
add
jg
dec
mov
mov
test
push
dec
jb
xor
outsb
xchg
cmpsl
fidivl
fsubrs
xor
pusha
jno
pmaxsw
xchg
sub
aaa
bound
ss
sbb
rcl
test
inc
shrl
cmp
mov
fistl
aaa
cld
mov
dec
dec
dec
sub
ficompl
in
sbb
pop
pop
sub
out
std
movsl
daa
push
sub
jns
ds
stc
xorb
mov
fcoml
in
stos
mov
sub
mov
mov
or
xchg
ror
and
xor
aam
lret
push
inc
mov
movsb
cmpsl
ljmp
mov
je
test
jb
sub
cmpsb
in
scas
les
mov
adc
mov
dec
lea
mov
xchg
jae
mov
mov
push
pop
fcmovne
cmp
mov
cmpsl
push
loop
test
push
inc
jb
out
push
or
jb
push
icebp
lea
out
inc
rcrb
pop
inc
dec
pop
cld
mov
outsl
add
add
push
cmc
and
mov
push
movsb
cmp
jns
loopne
out
int
add
sub
push
iret
or
mov
in
into
enter
sbb
jo
inc
movsb
scas
test
ljmp
xlat
pusha
int
bound
sub
push
jge
pop
dec
push
adcb
jp
cld
and
mov
adc
cmpsl
loope
repnz
subl
sbb
mov
or
jl
mov
int
es
mov
cmpl
xchg
lods
inc
pop
cmpl
cmp
inc
xlat
mov
cltd
add
enter
sub
mov
fadds
jle
mov
filds
fdivs
pushf
adcl
fldt
xchg
in
cmpsl
scas
lcall
push
pop
data16
std
gs
pusha
aas
dec
pop
cmpsl
dec
mov
test
addr16
inc
and
mov
leave
mov
insb
setl
andl
int3
push
add
loope
mov
mov
and
cmp
dec
xor
subl
popa
mov
cs
les
xchg
scas
flds
dec
mov
xor
xchg
jmp
aam
lods
adc
loope
add
xchg
mov
mov
jmp
mov
inc
xchg
aas
inc
test
jmp
sub
mov
mov
out
sahf
jg
xchg
repnz
mov
sbb
filds
fnstcw
das
cltd
imul
sub
push
mov
mov
je
lcall
mov
fmull
xchg
iret
inc
mov
and
loope
int3
imul
loopne
adc
and
xor
sahf
mov
jle
hlt
pop
and
xchg
rolb
add
xorl
mov
insb
decb
mov
sub
repz
push
pop
aam
inc
or
repz
mov
dec
jmp
push
stos
pop
inc
ret
andl
lret
mov
sbb
hlt
fstp
lods
sub
pop
dec
les
outsl
or
mull
pop
movsb
clc
cmp
jbe
inc
xchg
fcoms
inc
mov
dec
ja
mov
out
xchg
cltd
adc
lret
jb
xchg
ja
xorl
ffree
jge
js
and
push
je
fdivr
fdivl
lock
push
int3
push
or
les
pop
xchg
movzwl
pop
mov
lret
int3
xor
cmp
cmpsl
mov
test
mov
mov
in
inc
repnz
call
xchg
cltd
mov
stos
addl
xor
negb
into
test
enter
ja
or
push
xor
mov
test
fsubs
add
aaa
xchg
sbb
or
cwtl
push
inc
test
lea
pop
in
leave
pop
je
push
fldt
aam
add
orb
enter
aad
popf
push
push
js
inc
subb
xorb
stos
jmp
and
imul
data16
lods
add
dec
stc
rcrb
stc
add
je
adc
xchg
pop
enter
add
mov
movsb
or
xchg
andb
loope
out
pop
fwait
lahf
mov
push
mov
push
or
hlt
lods
mov
leave
int3
adc
xchg
mov
mov
cld
int
int3
cmp
push
repnz
pushf
mov
ffreep
data16
adc
sbb
lods
jecxz
enter
jb
sub
cld
dec
stc
push
mov
into
lcall
inc
mov
mov
stos
into
jl
popf
jge
out
jbe
push
pop
add
or
das
fnop
and
pop
iret
movsb
fs
stc
aam
mov
sub
sbb
subl
push
lock
pop
rcrb
and
inc
iret
call
jne
mov
inc
iret
sbb
mov
xchg
jno
aas
int3
jp
fsubrs
jmp
jge
in
enter
adc
xchg
cmp
js
movb
push
mov
mov
add
add
imul
and
sbb
in
adc
movsb
jp
dec
ror
sahf
popf
xchg
outsl
inc
adc
dec
iret
add
add
xchg
sub
xor
aam
call
ja
aad
mov
mov
xchg
pusha
pop
icebp
and
sarl
pop
daa
cmp
mov
add
repnz
inc
insb
pop
sbb
cmpsb
stos
std
adc
mov
cwtl
popa
or
cmp
xchg
shlb
pop
test
dec
inc
mov
or
loop
in
loop
inc
fdivs
jg
adc
int3
movsb
xor
fsubl
cltd
sbb
adc
push
rol
or
stos
pushf
and
std
mov
stc
mov
sbb
dec
jnp
push
scas
sub
lods
loope
movsb
es
xchg
lods
xchg
popa
fcomps
push
mov
jp
push
jmp
aas
sub
cmp
pop
pop
sahf
lret
or
pop
test
mov
daa
imul
std
jbe
and
sub
lods
jecxz
mov
push
sbb
xchg
push
push
push
ljmp
adc
push
mov
xlat
and
test
jmp
pop
dec
mov
loopne
sub
cmpl
test
mov
faddl
out
test
popa
pop
xchg
test
and
dec
mov
cmp
or
in
sbb
xchg
or
push
mov
insl
mov
lock
sub
fcomp
rolb
mov
sub
sbb
jecxz
jmp
dec
lcall
mov
sub
leave
jle
stos
rcr
sbb
sbb
out
test
movsl
lret
popf
and
inc
insl
ret
les
repz
inc
dec
push
fs
stos
adc
loope
sub
in
aam
mov
adc
in
int3
orl
stos
shlb
fnstsw
mov
jecxz
dec
scas
and
je
cs
bound
pusha
decl
lahf
mov
pop
and
cmovg
ffreep
dec
and
hlt
outsb
movsb
arpl
adc
test
ret
mov
stc
rcll
les
inc
inc
sti
xchg
jns
loope
xchg
cmc
cmp
outsl
mov
dec
arpl
aam
pusha
push
out
sub
dec
and
jle
and
cmp
fnstenv
inc
mov
push
lcall
push
jmp
fcompl
push
sarl
aad
mov
mov
mov
cmc
hlt
cli
mov
pop
xchg
pop
es
sbb
repnz
mov
mov
sub
dec
xor
js
aam
xor
and
or
xchg
aam
aaa
iret
out
adc
inc
pop
outsl
rorb
lea
loopne
push
stos
cmpsl
xchg
jmp
aam
sub
inc
cltd
stc
sub
test
movsb
and
lods
in
cltd
jmp
test
loopne
jp
out
icebp
cmp
mov
in
or
xorb
dec
and
push
sub
add
mov
hlt
sub
jne
mov
pop
icebp
xlat
movsb
lret
lods
inc
add
push
jo
sub
pop
push
mov
and
push
test
push
repz
adc
push
shlb
scas
insb
icebp
mov
imul
adc
sbb
mov
pop
inc
inc
add
and
xchg
out
imul
stos
sahf
mov
and
cmp
test
inc
mov
adc
dec
mov
inc
cmc
lods
subb
dec
in
dec
and
jae
xor
not
int
sbb
or
cmp
scas
insl
call
jmp
push
scas
movsb
sub
mov
addr16
hlt
cli
push
and
les
ret
icebp
add
frstor
dec
xor
mov
or
push
insb
cld
pushf
loopne
popf
pop
fs
gs
xor
movsl
mov
bound
mov
or
push
and
cmp
mov
int3
inc
cmp
out
hlt
ds
pop
lcall
add
push
jge
stos
scas
cmp
cmp
adc
mov
and
push
cmp
cmp
jp
loope
cmp
stos
jecxz
jecxz
mov
std
out
rclb
sub
lret
add
cmp
inc
das
sub
or
and
test
stc
cli
mov
enter
dec
cwtl
mul
mov
pushf
pop
cld
bound
inc
rorl
lcall
movsb
popa
js
mov
mov
mov
mov
push
dec
dec
icebp
cmp
lods
pop
and
or
loope
add
push
out
mov
and
mov
data16
sub
lret
mov
andb
stc
loope
mov
adc
sub
fisttpll
nop
cmpl
add
stc
push
mov
adc
push
adc
aam
insl
jae
sbb
test
cs
mov
mov
cwtl
mov
cmc
xchg
fcoml
in
std
pushf
add
sbb
stc
jo
iret
cmpl
pusha
ja
xor
mov
out
mov
loope
adc
mov
rclb
mov
pop
inc
in
repnz
shll
inc
mov
aam
xchg
loopne
lods
xchg
int
mov
inc
loopne
jbe
test
sub
jg
and
mov
inc
adc
mov
jecxz
aas
cmpsb
popa
repz
sub
int3
and
jecxz
fdiv
scas
and
push
dec
insb
mov
enter
fs
fwait
aam
stos
mov
push
mov
sub
test
enter
scas
mov
mov
inc
repnz
mov
xchg
out
lret
dec
push
push
and
sub
adc
mov
xor
mov
out
or
add
addr16
pop
xchg
out
xchg
sbb
mov
popf
or
loop
call
and
jmp
sbb
sub
and
cli
shr
js
adc
mov
aaa
insb
fsubs
inc
sbb
dec
push
pusha
jno
mov
pop
hlt
lds
negb
lods
and
or
jo
fldenv
cmp
mov
inc
mov
loop
fstpt
dec
movsb
pop
jbe
js
adc
cwtl
out
aam
push
push
jae
cmpl
aad
fidivrl
mov
lods
pop
push
push
int
repz
imul
sub
mov
enter
xchg
mov
cmp
cmp
outsl
cmp
movsb
push
push
cmp
cltd
jp
dec
out
mov
fcoms
mov
aam
aaa
cmp
jp
and
mov
repnz
mov
add
aam
insb
lret
lret
inc
in
jmp
xchg
mov
call
and
hlt
ret
add
pop
mov
push
ss
and
xchg
jo
mov
mov
repz
fcoml
push
stc
sti
inc
int
int3
cld
dec
cli
cmpsb
sbb
mov
daa
fsub
push
scas
orl
mov
aam
int
lds
icebp
insl
out
aam
sub
sbb
stc
or
push
icebp
cmp
dec
cli
xchg
out
push
mov
sub
outsb
imul
adc
cmp
pop
mov
or
push
push
loop
jne
je
sarb
mov
jbe
push
aam
pushf
rorb
int3
xchg
outsb
out
mov
or
movsb
in
push
pop
mov
mov
or
mov
daa
js
pushf
data16
subb
fisubrs
cmp
outsb
insb
les
std
and
int3
fbstp
cwtl
je
xor
jmp
push
mov
cmp
aas
loopne
pop
popaw
out
adc
lds
ds
dec
jecxz
mov
sbb
mov
and
sub
push
mov
cmp
adc
sbb
rcll
jb
les
or
inc
pop
hlt
std
mov
mov
xorl
andb
inc
aad
pop
jmp
mov
pop
jecxz
dec
sbb
mov
inc
scas
mov
mov
xor
add
mov
das
cwtl
dec
fwait
cmp
jge
sti
push
xchg
mov
jnp
cmpsb
int
pop
mulb
mov
ja
add
jo
movsb
add
pop
outsl
test
popl
in
stos
pop
sub
das
pop
adc
leave
cmpsb
cmp
inc
inc
push
xchg
test
jp
pop
jmp
jg
xchg
mov
inc
aas
adc
lods
jo
popa
adc
sub
lock
rcrl
or
jne
stc
mov
and
and
pop
mov
lea
dec
xchg
outsl
shr
movsb
cltd
xor
in
mov
mov
shl
in
lahf
scas
push
popf
ja
int
stos
gs
cmp
lods
int
shlb
push
add
sub
lds
cld
stos
cltd
and
adc
movsb
push
pop
pop
leave
xchg
bound
int3
aam
dec
mov
ret
dec
push
fldenv
sbb
pop
xchg
ret
add
sbb
cli
cmp
cmpsb
jns
sbb
fs
fsubs
rorl
xchg
rcrb
mov
lea
es
into
mov
hlt
jno
nop
roll
add
sbb
popa
sub
push
mov
sbb
dec
dec
pop
add
dec
mov
sar
xchg
cltd
dec
out
mov
enter
push
dec
jae
fstpt
fidivs
dec
arpl
mov
mov
xchg
sti
dec
or
pop
loope
div
cli
add
decb
ljmp
imul
add
adc
popf
mov
cmp
xor
and
out
hlt
or
jae
add
inc
pop
gs
in
test
sbb
je
clc
mov
std
inc
lods
inc
jl
fistps
imul
lock
push
jecxz
aas
mov
inc
adc
jns
ss
cmpsl
pop
xchg
adc
or
jbe
xchg
popf
inc
push
xor
jecxz
fidivs
sbb
push
xchg
mov
rcll
push
and
mov
add
sub
xor
in
sbb
inc
adc
mov
test
mov
testb
stos
cmp
jecxz
cmp
fwait
pop
mov
loopne
sbb
sti
mov
aam
stos
rcll
push
adc
or
add
mov
ffree
cs
or
shlb
cmp
loope
stc
dec
pop
testb
jmp
adc
mov
fists
repz
sub
das
fdivrs
mov
arpl
mov
adc
outsl
pusha
push
cmp
inc
stos
or
sub
xor
outsl
fdiv
out
gs
aad
cmpsl
mov
cmc
out
std
int3
andb
push
in
and
pop
aam
repnz
subps
in
sub
push
jmp
xchg
mov
in
xor
xchg
cwtl
scas
dec
shrb
jp
cmpb
lcall
jnp
mov
cli
push
lret
jl
jbe
into
movsb
cmpsl
mov
arpl
xchg
fcmovnb
cmp
mov
repz
sub
xor
jmp
cmp
out
test
orb
add
push
jb
test
rcrl
enter
out
aad
inc
mov
adc
or
sub
inc
jns
in
test
adcl
pop
gs
lea
inc
jno
icebp
cmpsl
aam
mov
test
cmpsl
sbb
sub
in
xchg
and
dec
mov
jmp
xor
cmpl
in
mov
lret
fdiv
scas
arpl
das
jae
lret
mov
subl
leave
outsb
adc
xchg
dec
insl
out
icebp
lcall
cmpsl
lret
out
sbb
dec
bound
gs
jae
sub
push
jp
push
adc
mov
push
ret
test
inc
pop
mov
test
mov
mov
rcll
neg
mov
and
andb
negl
push
shrl
mov
add
test
mov
lea
daa
sub
popf
push
ja
in
dec
or
or
cld
xchg
fadds
mov
xchg
cmpsl
dec
and
fldcw
aam
jb
push
jmp
aaa
enter
out
push
jo
popf
mov
mov
lret
mov
in
xor
jl
mov
sarb
int
in
insl
mov
cmp
add
cwtl
jne
push
mov
and
call
mov
sbb
mov
mov
mov
insb
hlt
ret
jb
outsl
lcall
fdivrs
pop
push
add
call
ss
mov
out
dec
xor
js
jmp
hlt
fldt
ss
lcall
lock
push
push
je
ret
adc
fcoml
xor
hlt
sub
adcl
sbb
pop
in
cmp
pusha
lret
jle
add
pop
mov
inc
jno
cmpsl
outsl
cmp
ret
lods
xor
in
adc
mov
jno
and
stc
dec
and
popa
addr16
hlt
pop
scas
ja
push
dec
jne
gs
test
ret
inc
sbb
mov
lret
out
lods
in
mov
jp
mov
cmp
pop
enter
xchg
outsb
mov
jnp
dec
aad
xchg
and
enter
add
xor
jp
stc
cmp
arpl
inc
bound
pop
pop
dec
daa
and
adc
jl
imul
pop
sbb
xor
jmp
cltd
or
push
inc
xor
fidivrl
or
out
pop
mov
test
sbb
in
icebp
cli
lcall
pop
cmp
stc
cmp
mov
ret
das
mov
dec
lea
lahf
test
mov
into
dec
adc
test
dec
aad
mull
or
add
jns
rcll
xchg
out
inc
into
imul
stc
sti
test
dec
xorb
cmp
xor
test
push
push
cli
dec
inc
frstor
sbb
into
dec
pop
popf
repnz
cmp
lahf
jmp
aam
scas
aam
popa
jl
lret
aam
inc
mov
les
mov
mov
lock
pop
and
jne,pn
mov
push
hlt
icebp
cmp
repz
xchg
sbb
mov
jmp
or
dec
cli
inc
jb
test
sti
pop
movlps
adc
enter
pop
imul
sarl
out
mov
sub
push
aam
xor
loop
sub
outsl
je
mov
and
iret
pop
mov
and
outsl
sahf
lcall
outsl
cs
dec
dec
xchg
in
ret
fadds
loopne
ficompl
adc
add
int3
dec
pop
jb
or
rorl
push
pop
je
orb
mov
loop
mov
xlat
clc
movsb
xchg
lcall
out
shll
add
movsl
outsl
scas
dec
pop
mov
add
lahf
mov
mov
pop
in
aam
cmp
cmp
lods
inc
enter
mov
leave
mov
dec
pop
fldl
sub
lock
out
mov
cmp
lods
sbb
mov
push
ret
repnz
mov
adc
shrb
pop
push
dec
inc
scas
imul
loop
push
jno
mov
lods
dec
imul
das
xchg
add
cmp
call
int
jns
and
mulb
sar
aad
cmp
lret
addr16
cmp
dec
push
inc
in
out
mov
gs
scas
mov
mov
mov
add
push
les
pop
jnp
aaa
loope
or
and
repnz
push
fnstcw
mov
enter
dec
dec
cwtl
xchg
scas
out
leave
push
inc
and
jno
cmc
jp
sub
cmp
xchg
mov
mov
iret
push
dec
adc
out
xchg
insl
mov
and
cmpsl
int
jle
or
dec
sub
pop
enter
fimuls
aam
pop
add
movsb
push
fwait
mov
repz
insl
push
or
in
mov
pop
movsb
lock
mov
mov
and
mov
mov
loope
and
cpuid
jns
mov
jb
push
cmp
fnstenv
bound
cmp
xorl
pop
sbb
cmp
aam
sti
mov
mov
in
dec
adc
in
sbb
inc
lods
or
inc
ret
xchg
push
stc
xchg
inc
cmp
or
into
inc
xor
aad
loopne
sbb
jnp
mov
cmp
enter
in
cwtl
cmp
es
fisubs
xor
shl
or
sbb
mov
sbb
push
mov
push
jae
loope
cltd
inc
ret
icebp
sub
push
or
scas
sarl
imul
jae
mov
and
xchg
inc
mov
ds
stos
loop
or
sub
ret
ret
notl
aam
inc
stc
clc
scas
arpl
push
fucomip
xchg
adc
leave
loop
pop
ss
add
fnstcw
jmp
xchg
push
pop
repnz
sub
push
dec
pop
add
dec
incb
test
pusha
cld
xor
inc
movsb
adc
cmp
sbb
mov
rcll
xchg
out
push
addb
push
hlt
push
ja
lds
mov
mov
mov
jecxz
xchg
xor
sbb
aam
mov
cmp
loopne
pusha
loop
mov
sub
sbb
sub
sub
jae
add
xchg
xor
and
int
jl
xor
add
popa
dec
xor
fcompl
cmpsl
mov
leave
negb
outsl
mov
shl
movsl
xchg
mov
pop
ja
ss
sbb
mov
popa
icebp
int
out
in
xor
test
clc
out
mov
ret
jmp
icebp
ret
jb
fisubs
test
scas
mov
imull
sbb
addb
rolb
rorl
into
xchg
fmuls
scas
es
int3
mov
jmp
movsb
mov
je
inc
jbe
repnz
inc
push
inc
dec
lds
cmpsl
mov
cmp
or
pop
outsb
jo
sbb
daa
scas
cmpsl
stc
inc
sub
pop
or
fcom
sub
push
xor
add
mov
das
bound
sbb
pop
loope
add
clc
mov
ss
int3
push
clc
fdivr
mov
les
sbb
repnz
lret
imul
fistl
ret
xor
mov
jle
push
int3
sqrtps
sub
lret
lock
outsl
cltd
push
and
cmp
dec
cmpsl
dec
out
sub
je
in
negb
mov
and
mov
in
jb
nop
jl
adc
adc
movsb
jmp
shll
add
sbb
es
nop
push
fadds
inc
outsl
jnp
iret
mov
cmp
cld
dec
stos
push
jno
das
jmp
add
ret
mov
test
sub
in
jnp
inc
pusha
jnp
mov
gs
push
ffree
cld
cmp
mov
gs
cld
mov
pop
mov
jecxz
fiadds
sub
xchg
add
push
mov
in
pop
cmpsb
ffree
mov
ds
mov
xor
mov
out
lret
push
fdivp
stos
ja
or
movsl
cs
rolb
repnz
sahf
sbb
bound
das
rcrl
mov
push
sub
sbb
pop
mov
pop
shlb
aaa
push
mov
mov
arpl
aam
shll
dec
xchg
sbb
or
mov
popa
mov
jns
or
aam
mov
out
mov
outsb
mov
xchg
icebp
lds
shr
gs
xchg
lret
push
mov
stc
ja
into
pop
aam
in
cld
push
xchg
sarl
push
test
xchg
xchg
cli
xchg
jne
js
fwait
notb
mov
or
and
pop
mov
mov
pop
repz
or
mov
mov
out
ret
movsb
jg
loop,pn
lret
scas
movsb
test
add
adc
bound
pushf
jecxz
pop
mov
cmpsl
sub
and
jp
loop
je
xlat
movsb
mov
or
cmp
int
fcoml
cld
test
push
mov
mov
jecxz
dec
xchg
iret
mov
decb
cwtl
xchg
in
enter
cld
pop
dec
scas
hlt
mov
pop
cs
adcl
and
push
cld
xchg
ja
mov
add
jmp
mull
mov
adc
pop
add
mov
dec
cwtl
imul
inc
mov
aas
cmc
aam
cbtw
pop
dec
inc
jb
stos
pop
inc
sub
into
mov
leave
jo
mov
mov
nop
insl
ds
sub
xchg
mov
mov
or
jge
pop
cmp
aaa
xor
mov
add
scas
ret
lcall
addb
xor
imulb
adc
cmpsb
inc
out
in
xchg
andb
jl
mov
dec
mov
rolb
popf
bound
rcr
pop
xchg
adc
clc
rcr
push
das
es
dec
loop
rorb
mov
mov
out
and
movsb
lahf
add
mov
enter
lcall
and
or
push
in
jl
pop
mov
add
cmp
imul
pop
enter
test
mov
push
aaa
cs
lcall
in
cmp
cmp
mov
ficompl
loope
shrl
cld
xchg
mov
in
inc
xor
out
lods
rsm
sbb
ret
bound
dec
out
es
sbb
repz
xchg
in
outsb
fwait
movsb
inc
mov
mov
loop
xor
and
cmpsl
xchg
add
sti
enter
fs
inc
sbb
add
loope
jmp
xor
inc
jns
mov
cmp
pop
cmpl
xor
lcall
aam
cmpsb
cli
fsts
pop
stc
fidivl
mov
loop
shr
inc
cmp
inc
daa
jecxz
aas
inc
push
dec
inc
lret
mov
in
loop
sbb
test
pop
fcompl
stos
mov
je
mov
nop
jbe
xchg
mov
int3
sub
out
adc
mov
cmp
jg
mov
adc
clc
push
sbb
mov
sub
xchg
movsl
hlt
pop
adc
clc
or
sbb
movsb
xchg
shrl
pop
cmp
xlat
add
rcl
imul
hlt
aas
cs
rolb
inc
mov
pushf
adc
jmp
jl
ret
stc
dec
push
mov
dec
dec
arpl
jmp
in
pop
cmp
dec
push
mov
stos
jge
shlb
cltd
xchg
adc
jge
inc
push
and
xchg
fisubrl
out
add
mov
jae
sub
mov
stos
pop
arpl
ljmp
cmp
aad
cmp
test
call
and
pop
xchg
shll
inc
adcb
cld
loop
shl
xor
enter
subl
insl
call
dec
and
xor
lock
inc
fistpl
mov
rorb
push
fistpl
sub
call
cmp
add
popf
sbb
push
xor
ds
and
inc
xor
mov
in
cs
addr16
cmp
mov
bound
inc
sar
add
push
adc
mov
and
pop
stc
mov
outsl
jb
adc
mov
sbb
cmp
dec
mov
dec
lret
adc
fwait
jge
enter
sub
stc
sub
les
fildl
nop
outsl
stc
mov
aam
movsb
outsb
mov
outsl
mov
icebp
pop
add
fsubrs
sub
push
loope
mov
xor
and
cs
rcl
mov
mov
movsl
dec
into
inc
scas
or
insb
inc
sbb
mov
jne
and
pop
pop
inc
dec
mov
xchg
sub
pop
mov
cmp
popf
mov
cmp
test
inc
pusha
dec
jns
test
or
in
fcomps
pop
in
mov
push
movsb
cmp
arpl
sub
sub
sub
popf
mov
int
repnz
mov
pop
xchg
addr16
xor
das
lahf
dec
mov
outsl
jmp
dec
imull
cmp
push
addr16
and
sub
jp
nop
mov
xlat
xor
jge
loop
mov
fadds
mov
imul
pushl
shl
popf
jge
lea
xor
sub
adc
mov
pop
jl
ret
out
outsb
pop
pop
hlt
cmp
or
scas
addr16
push
mov
shl
add
cmpsl
movsb
movsl
in
jb
rcr
test
inc
jp
pushf
mov
mov
out
adc
sahf
mov
mov
movsb
mov
cmp
or
dec
stos
dec
jecxz
pop
sub
and
fadds
test
mov
pop
xor
mov
push
xchg
xchg
mov
jnp
idivb
mov
inc
lock
xor
jl
pop
jbe
out
sahf
jbe
arpl
in
cmp
out
pop
lods
mov
test
push
mov
cmp
fdivrs
or
pop
cmp
cmpsb
or
aam
mov
gs
sub
cs
test
inc
lret
mov
lods
int3
push
test
hlt
arpl
cmp
push
cmp
xor
sub
jp
out
dec
idivl
movsb
or
pop
add
lock
rolb
or
out
sub
outsb
cmp
fimuls
adc
mov
sti
xor
addr16
dec
sub
and
aam
popf
add
in
sbb
cwtl
dec
lret
mov
pop
leave
push
push
cmp
cmpsl
adc
fsts
cmc
arpl
dec
dec
cmp
scas
xchg
test
sub
popa
xchg
in
xor
push
adc
enter
data16
es
rolb
in
adc
ja
xlat
repnz
fstpt
pushf
fidivrl
xor
into
and
xchg
test
push
cmp
push
jns
gs
mov
clc
cmp
aam
xlat
ja
or
fdivs
ljmp
loope
pop
mov
pop
lods
clc
dec
cli
xchg
mov
fwait
xchg
mov
sbb
mov
mov
jmp
and
sub
ds
jno
aad
lahf
dec
or
mulb
pop
jle
xor
pop
aam
sti
fdivrs
stos
into
mov
scas
scas
pop
jecxz
mov
lret
push
idivl
div
js
aad
test
mov
popf
ja,pt
sbb
inc
lret
out
push
jo
icebp
fcoms
xor
mov
mov
jae
std
jmp
imull
xchg
fstpt
arpl
andl
or
cmp
loop
mov
clc
fisubs
out
loop
sub
mov
addr16
loop
dec
xchg
int
lcall
mov
bound
dec
rclb
jp
inc
sub
aam
mov
and
stc
mov
mov
out
inc
lds
xor
pop
jbe
mov
imul
jp
aam
mov
ficomps
mov
pushf
stos
out
jmp
push
aas
int
mov
push
mov
iret
roll
mov
inc
jg
inc
or
rclb
loopne
mov
stos
cmc
add
sbb
shl
or
outsb
dec
xor
int3
shll
adc
nop
cmp
jns
out
push
and
call
stos
mov
in
and
push
mov
cmp
call
adc
mov
adc
push
enter
sub
or
inc
jmp
push
xchg
jo
xchg
adc
dec
cs
push
mov
add
mov
or
add
inc
loope
jge
inc
dec
imul
cmpsl
mov
into
subb
bound
xor
sub
fimuls
push
fsub
es
pushf
add
shlb
fld
xchg
cmp
dec
mov
sbb
cmp
mov
xlat
sub
daa
lcall
jge
mov
cmpsb
dec
cwtl
shrb
and
mov
and
mov
fsubrs
push
outsl
dec
push
cmpsb
pop
mov
cmpsb
xchg
cmp
int
popf
jle
repnz
add
imul
dec
lret
mov
ffree
mov
dec
mov
push
dec
sbb
push
cli
push
mov
xchg
outsl
je
pop
mull
jg
sub
out
fbld
xor
lret
popa
mov
insl
jno
jmp
mov
into
sub
push
xlat
cli
addr16
or
cld
cmp
xor
popa
mov
daa
popa
jmp
test
aas
aas
in
mov
push
lock
inc
mov
sbb
add
js
loopne
inc
loopne
adc
xchg
into
andb
ss
mov
mov
mov
sbb
mov
cmpsb
lds
imul
les
and
sbb
out
popa
xchg
xchg
inc
pop
adcb
lret
jecxz
pop
faddp
pop
and
cmp
xor
rclb
ret
loope
enter
dec
pop
idiv
inc
add
fadds
push
shrb
aaa
pop
bound
fmuls
mov
jb
jg
fs
addr16
test
and
imul
aad
mov
cmp
jae
push
dec
ljmp
sarl
pop
testl
les
aaa
clc
jmp
aam
xchg
hlt
imul
shlb
mov
sbb
mov
inc
shl
and
enter
stc
cmp
test
aam
and
jmp
aad
aas
pop
shll
cmpsl
fcom
insl
dec
mov
shrl
inc
push
movsb
pop
loop
emms
stc
mov
jbe
jmp
mov
mov
fst
ret
loop
xchg
enter
mov
inc
decl
mov
aam
enter
mov
loop
dec
or
mov
movsb
dec
mov
add
dec
test
sbb
aad
jbe
mov
jecxz
xlat
and
movsb
or
jmp
aam
sub
jge
pushf
movsb
sbb
test
sbb
scas
dec
pop
sub
inc
arpl
mov
lret
imul
inc
shll
outsl
cmp
outsl
test
jmp
sti
pop
sahf
negb
ss
in
mov
aam
mov
sub
hlt
mov
xor
movsb
inc
lods
std
push
xchg
sbb
xchg
mov
ss
dec
sub
add
testl
in
lahf
lcall
mov
leave
jmp
cmp
pop
ja
repnz
push
stc
inc
inc
push
dec
push
lret
add
aam
pop
ds
jge
iret
enter
pop
or
add
xchg
aaa
or
mov
cmp
rcrb
int
iret
jg
xor
cmp
je
xor
loope
imul
icebp
lds
idivb
loope
adcb
and
xor
cmp
or
call
lret
push
aaa
mov
loopne
cmc
sub
xchg
fidivrs
jnp
sbb
sbb
inc
push
cmpsl
sbb
mov
inc
jp,pn
xorl
and
test
cmp
std
add
push
or
push
in
mov
push
cmp
mov
loope
sarb
mov
out
add
cwtl
ss
pop
push
pop
stos
scas
icebp
dec
push
add
pop
and
nop
shl
xor
mov
ds
aad
test
hlt
jmp
push
aam
xchg
andl
mov
sub
jecxz
push
sbb
xor
negl
int3
and
sbb
ljmp
fisubs
sbb
sub
insl
add
xor
mov
lea
dec
enter
mov
fildll
repnz
ret
inc
cltd
sub
jge
data16
jecxz
jle
adc
aaa
lret
sub
subl
pop
cmp
repz
insb
cmpsl
test
and
sbb
mov
mov
andb
repz
sub
adc
dec
leave
pusha
idivl
je
dec
roll
sub
jmp
mov
xor
punpckhbw
xor
sub
decl
push
xchg
or
cmp
movsl
out
adc
adc
ss
mov
pop
scas
xlat
lret
pop
dec
dec
add
hlt
ret
inc
adc
cmpb
sbb
into
out
or
dec
stos
outsb
lcall
sub
stc
pushf
inc
leave
xchg
mov
inc
lret
xchg
adc
and
pop
out
stos
mov
cwtl
lret
push
mov
dec
mov
push
cmp
pop
jmp
iret
adc
sbb
cmpsl
testl
mov
mov
test
inc
dec
and
jp
scas
cmpsb
aam
pushf
psubw
cltd
or
xchg
adc
mov
test
add
sti
sbb
inc
mov
es
lcall
ds
movsb
cs
stc
mov
adc
sbb
stc
jg
or
jp
dec
mov
ja
fsubrs
stos
stos
adc
sti
test
pushf
out
mov
xchg
mov
sahf
mov
xchg
adc
ret
mov
stos
lcall
xchg
mov
pop
inc
jecxz
insb
stos
add
repnz
mov
movsb
sbb
jb
ret
adc
inc
scas
movsb
in
hlt
jns
pop
mov
sbb
push
int
fsub
scas
mov
div
and
adc
xchg
sti
mov
push
mov
icebp
cmc
leave
icebp
mov
cmp
loope
mov
pop
movsb
cld
xlat
out
subl
aam
packssdw
enter
pop
mov
pop
pop
fs
shlb
aam
or
mov
cmpsb
sti
pop
popf
cltd
repz
in
enter
divps
push
iret
dec
add
pushf
mov
shrb
outsl
mov
into
out
jp
mov
xchg
xchg
adc
and
shlb
mov
sub
push
add
jnp
pop
adc
out
shlb
xor
push
shl
and
sub
add
mov
fcoms
mov
scas
lea
aam
xchg
stc
rcrl
push
or
and
out
arpl
and
idivb
cmc
mov
pop
jmp
stc
sbb
sub
mov
loopne
imul
mov
jae
mull
adc
mov
movsb
jmp
rcr
mov
hlt
inc
adc
aas
and
cltd
mov
pop
into
inc
jbe
mov
adc
aad
aaa
rorb
sbb
mov
fsts
xor
xchg
out
mov
imul
inc
inc
or
xchg
ljmp
cmp
aam
rcrb
iret
mov
shr
add
call
stc
xor
mov
jg
mulb
mov
in
ret
sub
mov
loope
fldenv
cmp
loope
stos
outsb
movsb
fwait
sarl
rclb
pop
lds
mov
insl
aaa
lods
lret
dec
test
push
cmp
inc
lods
outsl
scas
movsb
or
lret
aam
call
adc
cwtl
mov
data16
in
insl
xchg
and
insb
repz
sub
aaa
xchg
jl
rcll
jmp
pop
inc
sbb
push
sbb
mov
movsb
dec
mov
mov
int
out
aam
pop
rcr
idivl
lahf
xlat
fsubr
inc
shll
cmp
andl
mov
lods
ffreep
pop
jb
mov
mov
inc
jp
push
aaa
je
orl
jp
dec
hlt
xor
call
out
mov
xchg
xor
inc
dec
int
jbe
push
mov
xor
mov
mov
sub
dec
hlt
cmpsl
mov
xchg
mov
jmp
pop
xchg
test
stos
nop
pop
popa
xchg
jbe
sti
ret
mov
sub
jbe
roll
inc
cli
push
ret
push
ds
pop
loopne
and
aas
orb
aam
popf
cmp
imul
loop
not
cmp
jbe
jecxz
ret
bound
fbstp
jl
loopne
enter
fs
out
fcmovbe
std
jo
std
xchg
jb
dec
xor
adc
mulb
popa
int
xchg
xor
movsl
nop
pop
pop
into
dec
or
fsubrs
jb
sub
dec
nop
pop
or
aas
sub
nop
repnz
xlat
pop
cmc
or
packuswb
add
shr
sub
popl
push
mov
dec
lock
jno
cltd
ljmp
shrl
sub
rcll
loop
stos
stos
mov
popa
mov
sti
sub
xchg
mov
cld
decl
jb
adc
bound
std
xlat
add
add
inc
xchg
push
cmp
outsb
pop
mov
mov
mov
popf
shrb
cli
mov
dec
mov
jne
and
outsl
mov
out
and
cmpsb
jg
stc
loop
pushl
scas
inc
enter
mov
and
cmp
call
mov
push
mov
fbstp
test
xor
call
movsb
push
add
imul
outsl
cmp
jne
sahf
xchg
testl
and
notl
int
mov
inc
jge
pop
jl
lahf
sub
insl
push
dec
jge
test
push
fbld
daa
pop
ja
jg
insl
enter
pop
push
sub
aam
in
jns
mov
mov
jle
ret
repnz
rorb
cmp
test
or
shlb
add
fidivrl
fmul
pusha
jmp
cmpl
in
inc
push
jmp
imull
rcr
mov
test
cltd
mov
xor
fsubrl
pop
and
cmp
fs
imul
outsb
mov
or
inc
stc
jecxz
or
int
je
pushf
mov
cmp
cmp
and
dec
cmp
ja
in
adc
popa
andl
push
stos
mov
cmp
scas
xchg
ret
sbb
dec
xor
icebp
xchg
mov
ja
pop
xor
ud0
repz
shll
push
mov
ljmp
sbb
push
sbb
cmp
pop
lret
mov
popf
pop
mov
into
lahf
dec
mov
into
xor
dec
cmp
cmp
mov
and
inc
pushf
inc
ss
xlat
and
pop
sub
cmp
sti
lret
lea
cmp
cmpsl
xchg
rcrl
xor
push
fldcw
sbb
rorb
bound
insb
iret
cli
mov
or
xchg
or
push
in
data16
loopne
sbb
aam
out
push
push
subb
in
es
pop
lea
push
fildll
sahf
frndint
pusha
stos
adc
dec
js
insl
pop
dec
dec
stc
adc
push
and
out
jp
mov
lods
sub
or
scas
arpl
fs
dec
insl
pop
cld
cli
adc
fadd
fwait
sub
push
mov
lret
pop
mov
je
pop
ficomps
fadds
lahf
data16
inc
cmc
or
push
popa
xchg
cmp
push
push
xlat
mov
lods
ret
loopne
fcmovne
sbb
mov
movsb
sahf
or
dec
popa
mov
enter
cmp
aad
mov
test
fbld
mov
in
pop
jp
mov
pop
cmp
cli
cmp
aam
dec
xchg
lret
dec
or
inc
cmp
loopne
push
xor
dec
adc
cmp
sub
scas
hlt
dec
lret
fldt
mov
lret
jno
or
adc
cmp
out
mov
sbb
in
aam
aaa
negb
mov
das
sub
and
fcmovu
test
jae
mov
lods
aam
push
inc
or
push
pop
adc
popf
lcall
sbb
xchg
sub
and
fbld
popf
das
out
dec
sbb
outsb
stc
inc
jb
xlat
shl
arpl
and
jne
fidivrs
imul
xchg
fdivrs
das
jp
insl
mov
cld
push
ds
dec
shll
rcrl
add
push
call
jmp
test
mov
xchg
or
jmp
pop
out
fcomi
icebp
aam
xchg
js
out
out
pusha
icebp
pop
lahf
test
stc
insl
inc
jb
ret
les
mov
aam
pop
push
lock
es
jbe
leave
jnp
jmp
lds
movsb
inc
pop
popf
cmp
bound
mov
push
cmp
popa
and
cmp
dec
ja
js
fnstcw
jnp
adc
adc
and
jecxz
inc
loopne
shll
ret
push
mov
dec
mov
aaa
fcompl
xchg
jge
ds
pop
cmp
sbb
or
popa
add
imul
stc
enter
jo
outsb
mov
aas
mov
dec
loop
xchg
add
inc
jmp
xchg
mov
icebp
in
dec
mull
xor
inc
adc
jp
xchg
out
add
gs
mov
push
lea
repnz
rcr
mov
dec
roll
loope
sbb
add
or
pop
cmpsl
mov
test
adc
movsl
mov
mov
stc
mov
in
pushf
lahf
cmp
test
repnz
adc
mov
jecxz
mov
popf
or
cmpsl
xchg
and
xlat
pop
dec
movsb
or
lods
mov
dec
lret
xor
test
mov
gs
lea
fnstenv
sbb
popa
test
dec
jno
push
mov
mov
xchg
imull
xor
loope
mov
or
pop
pushf
aam
scas
inc
inc
std
xlat
loopne
into
xorl
iret
jg
jo
mov
insb
das
xor
inc
jnp
sbb
icebp
in
pop
dec
or
and
cmp
out
pushf
bound
lret
iret
ficoms
inc
repz
sub
mov
cmp
cmp
inc
hlt
mov
mov
jns
cmc
jmp
lea
or
leave
fwait
js
iret
or
mov
adc
xchg
enter
addr16
mov
fiaddl
mov
xchg
lods
fidivs
js
aaa
sbb
cltd
mov
ljmp
adc
stc
mov
movsl
cmpl
ds
divl
insb
mov
xchg
cmp
cmp
cmp
mov
aam
es
jo
pop
xchg
sbb
ds
mov
loop
jb
popa
xor
clc
or
movsl
cmpl
jg
sbb
jae
mov
popa
add
lock
dec
popf
cmp
jbe
sbb
sti
hlt
enter
out
aam
xchg
inc
or
cmovl
cmp
inc
mov
fcoml
cli
mov
and
loopne
pop
xchg
mov
js
and
nop
mov
and
jns
mov
je
push
out
sub
mov
dec
push
add
lds
lock
mov
mov
or
inc
fidivl
imul
rcll
mov
movsb
or
inc
enter
jno
push
push
test
sbb
icebp
push
loop
iret
dec
and
jne
ds
dec
rclb
js
popa
ds
test
shlb
xchg
ds
popf
sbb
inc
aad
je
pop
pop
loopne
and
push
mov
cmc
sub
insl
mov
pop
lods
mov
subl
test
inc
sub
hlt
cmpsl
mov
mov
sarb
cmc
adc
mov
scas
movsb
in
test
mov
and
lahf
je
mov
aam
outsl
or
out
mov
cmc
lods
popf
mov
notb
mov
adc
ss
add
int3
lahf
push
rorl
jl
xor
pushf
test
cli
xchg
inc
xor
ret
push
arpl
mov
add
and
pop
lods
shrl
add
or
outsl
aam
loopne
cmpsb
cmpsb
or
stos
sbb
and
xchg
or
cmp
xor
fstp
pop
jmp
movsb
jle
jg
aam
adc
add
frstor
and
ja
int
int3
inc
adc
inc
or
xor
roll
lods
jge
dec
mov
fnsave
cmpsb
mov
movsb
jnp
and
add
sbb
cli
cmp
xchg
int3
not
sub
mov
mov
pop
pop
test
test
pop
mov
out
mov
add
stc
outsl
jecxz
push
shr
les
xor
mov
push
enter
js
sbb
jbe
push
pop
mov
inc
shrl
jns
sbbl
call
ja
out
inc
test
orb
mov
iret
loopne
cmpsb
ss
scas
pop
sub
out
lock
cmp
mov
cmpsb
inc
test
or
dec
adc
pop
mov
aam
popa
jnp
subl
add
xor
in
fcompl
iret
jp
mov
pop
call
inc
mov
add
inc
je
call
aas
dec
xchg
mov
in
xchg
mov
pushaw
push
and
push
inc
jbe
out
bound
sub
jecxz
adc
dec
cmp
in
test
sbb
mov
pop
xchg
stc
mov
in
or
cltd
lahf
sti
push
xchg
add
out
ja
lods
add
or
fimull
cmp
in
sbbb
test
outsb
jne
mov
hlt
in
or
stos
pop
outsl
push
mov
cld
aas
or
jmp
mov
in
cmc
lods
xorl
movsb
xchg
pop
xchg
sub
xchg
shrl
dec
out
fisubl
xor
mov
aas
movsb
repz
out
ffree
jno
xor
cltd
mov
pusha
jne
arpl
mov
loopne
adc
in
pop
mov
adc
jns
sbb
xor
shl
in
cmc
clc
mov
dec
jb
mov
aam
in
fmull
xlat
sub
andb
jne
mov
xchg
imul
loop
shrb
sti
je
adc
arpl
mov
xor
cmpsl
scas
dec
cmp
je
push
xchg
sub
xor
xchg
sub
pushf
insl
gs
jb
fstpt
sub
negl
lret
in
add
sub
jl
fcompl
movsb
cmp
cmp
lock
mov
inc
fwait
mov
test
sti
push
hlt
mov
cmp
adc
movsb
fsubrs
dec
cmpsb
scas
add
push
aam
cld
sub
or
and
adc
inc
mov
inc
mov
mov
sub
or
adc
cmp
std
push
pop
xor
fnstenv
and
cmp
xchg
sub
outsb
and
jmp
mov
xchg
mull
in
cmp
test
sbb
fdivs
cmp
adc
add
xor
iret
scas
sbbl
out
cmp
repz
add
movzwl
inc
inc
cmp
push
jne
add
stc
mov
push
push
loope
rolb
repz
mov
xor
lock
loope
aam
jne
les
into
aad
lahf
sbb
inc
jo
pop
jno
xor
rolb
out
mov
inc
pop
fadd
inc
mov
xor
mov
and
outsb
loopne
mov
inc
lods
fcomps
mov
jle
dec
hlt
je
mov
lahf
cmpsl
popa
in
mov
bound
sub
pop
adc
mov
add
adcl
cmp
mov
jmp
pusha
ja
push
enter
shrl
aam
mov
loop
addr16
dec
fdivrs
jmp
mov
mov
scas
insb
jbe
pop
testb
or
mov
movsb
rcrl
sbb
mov
cmp
mov
scas
xlat
movsb
imul
inc
shll
std
cmp
sbb
mov
and
pusha
dec
cmp
std
enterw
cltd
lahf
xor
call
movsl
cmc
jg
popa
lret
lock
cmp
dec
add
adc
mov
dec
incl
xchg
sub
test
movsb
jo
ds
mov
sub
stc
enter
push
lret
pop
test
add
cmp
shll
into
jle
int
inc
or
fwait
push
addr16
fcomps
mov
mov
dec
fwait
mov
scas
loope
push
les
xchg
outsb
pop
popa
imulb
add
arpl
pop
outsb
lock
or
enter
aaa
sub
sub
dec
iret
bound
xor
pop
cmp
cmp
andb
dec
and
mov
mov
sub
lahf
scas
and
int3
das
enter
test
mov
or
out
dec
jo
inc
adc
adc
fidivs
cmp
dec
hlt
mov
popa
inc
or
add
dec
pop
mov
movsl
mov
xorl
icebp
pop
mov
sbb
mov
icebp
loopne
inc
aad
not
mov
mov
icebp
loop
jg
aam
mov
add
jo
clc
mov
mov
imul
aad
jmp
mov
mov
mov
clc
loopne
mov
and
stc
mov
mov
sbbb
ljmp
cmp
sub
stc
pop
in
repz
mov
jmp
out
lock
pop
aas
mov
mov
mov
stos
lcall
push
mov
or
jne
aam
mov
or
dec
add
mov
in
repnz
dec
mulb
push
pop
mov
adc
imulb
or
cmpsb
mov
jno
lret
jge
iret
mov
lds
sti
mov
add
ds
notb
pop
stc
mov
ja
outsl
mov
sub
adcb
jl
loopne
mov
mov
cwtl
jnp
lock
rolb
xchg
jns
test
mov
sub
pop
mov
sti
and
push
push
das
sub
or
mov
scas
outsl
push
push
cld
ja
aaa
in
rcll
cmpsl
andb
cmp
xchg
xor
xchg
push
lea
out
rorb
xor
lock
sbb
int3
scas
movsl
xor
and
imul
call
cmp
loope
stos
adc
or
aam
lods
mov
inc
repnz
mov
jo
mov
jecxz
push
cmc
inc
popa
call
xchg
or
movsl
ljmp
outsl
std
xchg
inc
stos
mov
movsb
xlat
add
lret
xlat
pop
pop
pop
pop
fdivl
pop
outsl
rclb
mov
iret
cmpsb
sub
ret
rorb
xchg
cmpsl
movsb
je
arpl
aam
lods
inc
filds
scas
mov
aam
sub
sub
cs
pop
inc
xchg
or
fsubl
cmpsl
mov
leave
js
mov
bound
sahf
aam
scas
mov
jo
inc
imul
enter
inc
adc
in
push
sahf
jge
out
dec
fnsave
aaa
outsl
cmp
enter
loop
cmp
out
into
jmp
sub
sub
dec
add
or
mov
or
popf
enter
cmp
in
lds
adc
inc
jb
das
inc
ljmp
scas
int3
fsubl
adc
in
sbb
xor
div
pushf
sahf
sub
and
dec
das
shl
inc
out
aaa
je
loop
rol
cmpsb
xchg
outsb
mov
mov
mov
mov
mov
adc
ds
and
aaa
mov
and
mul
sub
pop
xor
mov
xchg
or
ret
addr16
and
push
jmp
push
movsb
cmp
mov
lds
push
arpl
inc
dec
push
jns
lcall
push
add
jae
xlat
shrb
fs
inc
and
mov
xor
sub
jge
mov
pop
sub
sbb
popa
xchg
fildl
mov
test
mov
fisttps
mov
xor
arpl
das
addr16
movsb
shrl
mov
push
push
lahf
push
out
mov
inc
mov
push
ret
adc
push
cwtl
cmp
sbb
js
cmp
push
in
pushf
push
fnstsw
adc
icebp
xchg
pop
or
rol
and
cmp
add
sti
sbb
mov
repnz
lock
int3
roll
aam
test
jne
or
andl
aam
lret
ja
aad
push
xlat
stc
stos
dec
out
out
cs
call
cmpsl
pop
sub
int3
into
mov
and
jb
lahf
mov
bound
mov
cmp
xchg
mov
xor
inc
pop
loope
lret
pop
ret
inc
call
in
mov
sub
inc
dec
into
mov
push
inc
js
js
xlat
xchg
das
nop
ss
or
xchg
jo
mov
into
in
mov
daa
xchg
enter
mov
loope
clc
ret
pop
dec
mov
mov
add
mov
js
adcl
fldcw
aam
push
icebp
popf
push
imul
pusha
dec
add
mov
roll
xchg
ja
aam
sub
xor
mov
xor
movntps
or
fstps
mov
pushf
cmpsb
inc
xchg
xor
cmp
adc
ss
rorl
mov
stos
aam
sbb
in
sbb
int3
push
imul
sahf
fidivl
lock
loope
out
sub
movsb
dec
xchg
mov
ds
jp
pop
punpcklbw
test
int
sub
shrb
repnz
jecxz
mov
mov
jecxz
bound
aam
inc
cmp
popl
stos
inc
popf
or
in
fdivrs
push
mov
fmul
xchg
je
popa
mov
out
int3
lret
fdivrl
xor
mov
lods
dec
mov
movsb
mov
imul
iret
divl
lcall
je
sub
ret
out
add
add
xor
jo
xor
mov
sub
test
nop
loopne
xlat
insl
push
jecxz
test
pusha
mov
adc
aam
lods
mov
mov
cwtl
loop
lret
in
sti
mov
or
lcall
inc
pop
mov
mull
xor
aas
mov
mov
pop
mov
in
ja
sub
fsubs
add
or
or
mov
add
test
jecxz
push
movsb
or
pop
sub
fs
aam
dec
push
jns
dec
prefetcht1
sbb
notb
lret
mov
leave
jge
cmp
mov
ds
dec
cld
popa
ja
ret
mov
cmp
mov
loope
leave
lock
xchg
out
das
mov
fs
mov
lcall
ja
outsb
iret
push
xor
mov
pop
mov
shr
mov
add
sbb
push
fcomp
mov
in
push
add
sqrtps
stos
add
out
repz
fldenv
orl
pushf
add
std
shl
mov
and
lcall
ficomps
cmp
dec
lock
mov
sub
ficomps
fidivl
das
mov
jns
push
in
push
pop
mov
sub
jne
adc
dec
iret
mov
and
ret
mov
stos
jecxz
insl
push
mov
hlt
test
add
mov
lea
xchg
cmp
pushf
fwait
hlt
cmc
add
jle
loopne
and
daa
mov
movsb
lods
sbb
jge
push
adcl
mov
xchg
cmp
scas
inc
push
dec
fstp
mov
loope
hlt
lcall
or
jae
test
cld
jmp
mov
fwait
jp
jbe
xchg
xor
mov
pushf
mov
and
call
fstps
lds
xor
pop
popa
testb
cltd
push
xchg
stc
nop
lock
xor
loope
shlb
pop
pop
pushf
inc
cli
jl
mov
pushf
xchg
sbb
popa
mov
push
jmp
or
dec
shlb
stos
jo
mov
lahf
adc
mov
stos
inc
je
pop
leave
icebp
and
out
or
std
xchg
xchg
mov
sub
sub
pushf
scas
add
xor
fcoml
imul
shlb
cmp
movsb
xchg
pop
pop
aas
ds
aaa
mov
pop
imul
in
fsubrs
cmp
les
fistpll
sbb
cmp
pushf
pop
adc
xchg
js
aam
adc
dec
je
mov
dec
dec
mov
hlt
movsb
inc
xchg
mov
xor
adc
movsb
mov
pushf
nop
fsub
aaa
mov
repz
loop
inc
cmpsl
movsb
push
testb
xor
or
call
inc
in
leave
loopew
outsl
jmp
cmp
push
pop
stos
or
fs
cmpl
fisubrs
fstl
sub
cs
push
iret
ds
xor
iret
or
repz
hlt
and
mov
subb
jne
dec
pop
enter
mov
aam
sub
mov
add
popa
fs
xchg
mov
in
test
je
icebp
test
sub
pop
jp
adc
sahf
outsb
push
test
repz
or
inc
out
loop
inc
jne
dec
jge
repz
popa
mulb
push
mov
int
mov
in
repz
xchg
ficomps
popf
sarl
daa
cmp
test
insl
lret
pop
add
aaa
xor
fsubrl
out
lcall
movsb
les
pushf
stc
call
cmp
mov
push
cmp
sbb
fs
dec
lods
stos
out
sbbl
xchg
or
hlt
add
and
pop
inc
popl
push
aam
aam
jmp
sub
and
out
aam
push
loope
xlat
rclb
arpl
fwait
iret
fbld
pop
pop
jg
xchg
pushf
mov
push
enter
mov
mov
popl
mov
sub
pop
xchg
mov
xor
inc
in
push
or
cmp
mov
cmovle
lods
mov
add
cmp
leave
mov
mov
ret
loopne
dec
ret
movsl
xchg
aaa
cmp
push
dec
sbb
xchg
out
lret
repz
neg
mov
test
pop
stc
fdivrs
loope
imul
jp
aaa
pop
cwtl
xor
cli
dec
xchg
stos
adcl
sub
imul
ret
scas
sub
jb
xor
sub
or
lock
repnz
inc
scas
rorl
pop
movsb
push
xor
sbb
cmp
mov
xchg
cmp
push
pop
pop
sub
sub
inc
mov
popa
adc
int
cld
rorb
arpl
add
mov
inc
mov
xor
mov
fsubrs
lods
rcll
mov
cli
mov
loope
pop
xor
mov
pop
rcl
mov
jmp
pop
imul
in
sub
inc
testl
xorb
loope
pop
adc
xchg
adc
clc
add
dec
mov
mov
jmp
sti
xorb
out
mov
sub
mov
jnp
xchg
and
mov
adc
lret
xchg
aaa
pop
xchg
mov
loope
sbb
ret
insl
ret
dec
xor
lcall
arpl
xor
rcl
sbb
jmp
stc
pop
call
dec
loopne
mov
repnz
mov
aaa
push
add
idivb
cld
pop
pop
or
mov
xchg
dec
outsl
loopne
popf
cmc
pop
bound
add
out
ljmp
push
add
test
sbb
adc
mov
mov
cld
mov
xlat
mov
push
and
xlat
lods
inc
js
mov
sub
jbe
add
test
ret
mov
sbb
xchg
gs
pop
aaa
cmp
pop
mov
lcall
ja
lret
test
aaa
mov
adc
stos
sbb
jne
int3
pop
inc
mov
into
cmp
sbb
out
test
out
je
pop
bound
mov
cltd
jmp
sub
cmpsl
xchg
xchg
repz
cmp
hlt
push
out
mov
lcall
incb
and
clc
ficoms
add
inc
push
rcrb
sub
addb
repz
out
inc
add
cmp
and
loope
outsl
sub
jno
dec
cmpsl
imul
lods
cmpsb
aas
jg
std
jo
mov
mov
mov
mov
loope
aam
test
cmp
mov
aas
imul
popa
jnp
test
test
loope
or
mov
and
cmc
mov
scas
out
or
jg
push
jne
ss
cmp
cmpb
mov
ret
add
jecxz
add
xchg
mov
xor
daa
jo
sub
jg
fs
lods
mov
mov
xor
outsb
pusha
mov
daa
xor
adc
popa
and
sub
sub
sub
pop
aam
or
mov
into
ret
cmp
mov
ss
adc
rol
push
fisubrl
dec
and
add
adc
jae
push
scas
inc
packuswb
push
stos
ffree
int
mov
aam
mov
lahf
xchg
in
xor
sbb
pop
mov
dec
and
pop
pop
mov
jge
mov
push
lods
fsubs
mov
xchg
push
movl
pushf
int3
addr16
in
adc
rcll
jl
iret
loop
stos
sbb
sub
imulb
aas
xor
fcomps
adc
je
fadds
add
sbb
arpl
scas
lcallw
outsl
inc
neg
cld
push
sti
xorl
arpl
stos
aam
inc
ret
inc
ss
pusha
jb
xchg
jae
dec
lods
cmp
aas
enter
jae
add
pushf
int
js
movsb
cmp
cltd
ljmp
popf
push
or
in
pop
push
jno
adcb
push
scas
loop
pop
jb
pop
out
lods
imul
out
inc
cmpsb
faddl
fmull
repz
mov
sub
inc
jne
aam
jne
xchg
fucomp
out
and
cmp
aam
insl
xor
sub
lock
ficompl
cmp
int3
pop
cwtl
cmp
rorb
testl
cmpsl
fstps
mov
cli
mov
mov
repz
mov
pop
mov
aam
subl
and
out
adcb
rcl
mov
mov
pop
xor
aaa
xchg
mov
jb
jo
inc
loope
out
mov
bound
lock
lods
fistps
inc
es
int3
setns
mov
push
mov
icebp
hlt
lret
repz
stc
or
pop
mov
imul
or
xchg
aam
or
xchg
out
dec
icebp
or
bound
and
cmovns
inc
jbe
jl
cld
mov
addb
dec
adc
fcom
sbb
and
sub
fs
or
movsb
xor
or
loope
mov
sbb
mov
and
test
mov
push
iret
mov
mov
mov
scas
lcall
stc
rcll
pop
xchg
repnz
stos
and
scas
inc
mov
mov
loop
jl
mov
lcall
hlt
mov
call
enter
mov
mov
cltd
xchg
xor
lock
int3
fiadds
pop
push
test
push
aam
mov
fdivr
push
inc
out
pop
mov
xorl
adcb
ret
sub
mov
jno
lea
paddusb
movsb
or
inc
push
pop
in
or
div
imul
movsb
lcall
jne
jg
sarl
aam
in
inc
testl
int3
pop
adc
shrb
cmp
push
test
jno
mov
stc
adc
es
rorb
mov
dec
out
loop
mull
out
sar
shll
push
aas
lret
mov
out
loop
cmp
adc
shll
lahf
in
jmp
popf
and
cmp
xchg
and
mov
arpl
dec
movsl
mov
push
pop
mov
xchg
xor
test
pop
fstpl
and
loop
dec
stc
cltd
mov
sub
aam
ja
sbb
and
stc
aam
decb
pushf
inc
pop
daa
push
hlt
dec
js
int
cmpsl
les
dec
xor
jp
je
mov
stc
mov
adc
arpl
scas
movsb
mov
scas
push
sahf
nop
enter
lret
ja
enter
scas
jbe
aas
mov
mov
mov
dec
loopne
mov
das
orl
jmp
xchg
test
fadd
mov
into
mov
cli
out
adc
xor
add
stos
icebp
test
daa
push
aam
xor
pop
inc
mov
push
push
lock
cmc
push
and
pusha
pop
cmp
ja
in
jle
imul
mov
sbb
das
dec
cmp
sub
lock
mov
outsb
sub
sub
leave
pop
pop
out
int
and
je
dec
and
jmp
lea
in
je
bound
push
dec
je
arpl
cli
or
mov
imul
dec
sbb
out
sbb
fnop
xchg
jo
fsubrs
push
dec
jmp
dec
and
fadds
rolb
rcrb
popl
xor
iret
cmp
enter
fcmovnu
cmpsl
fists
add
xchg
out
cmc
es
dec
mov
add
cmpsl
test
or
mov
sub
js
icebp
lods
rcrl
lret
mov
add
adc
fdivr
adc
cmp
cld
xor
jns
ljmp
mov
loope
dec
and
andl
adc
aad
sub
cli
xchg
lods
lret
repnz
sbb
inc
out
in
sbb
jmp
cs
cmc
stos
dec
add
popf
inc
mov
push
sbb
inc
dec
jp
loope
stc
fwait
dec
out
out
cmp
inc
add
stos
cmpl
enter
jbe
inc
and
mov
outsl
mov
dec
movsl
jle
arpl
rcl
stos
test
adc
stc
cld
xchg
cmc
xchg
push
ds
test
subb
sub
mov
movsb
add
mov
xchg
popa
sub
bound
fwait
cmpsl
and
sub
ss
es
dec
ja
add
je
fwait
cli
enter
mov
sbb
dec
test
test
mov
out
dec
push
push
out
mov
int
movsb
popf
repz
pop
negl
fs
leave
sahf
jb
pusha
mov
mov
jge
add
cmp
in
xchg
test
add
lods
inc
mov
das
dec
push
xor
icebp
ja
enter
or
sbbb
xchg
xchg
imull
mov
jb
dec
sarb
lock
mov
inc
push
push
ljmp
fs
nop
mov
push
test
adc
repz
or
insl
or
add
aas
pop
sbb
rolb
mov
lds
out
push
idivb
xchg
rorl
ss
cmpsl
jl
xor
out
mov
mov
pop
ja
test
pop
nopl
test
jge
sbb
aam
pushf
jo
mov
jbe
call
stc
arpl
sub
xchg
sub
jmp
rclb
outsb
xor
fimull
fldenv
push
loop
jl
iret
and
mov
add
add
xor
lea
cld
xchg
cli
mov
jecxz
xchg
pop
fisubrl
mov
xchg
adc
test
xchg
or
mov
inc
stc
shll
mov
mov
out
xor
inc
xor
xor
bound
sub
push
ss
mov
lock
popa
xor
sahf
sub
and
loop
pop
mov
addr16
loop
xor
mov
xchg
push
adc
pop
sbbl
movsb
shrl
mov
lea
add
xchg
scas
push
mov
dec
daa
rorb
jp
mov
cmp
add
mov
cmpsb
fstps
and
mov
fistl
ror
scas
sbbb
jbe
sbb
lret
fs
inc
cmp
mov
jle
pop
fistl
dec
xorb
and
push
outsb
add
push
adc
shll
hlt
into
in
cltd
cmp
jo
dec
idivl
dec
pop
mov
sub
pop
rol
pusha
cmpl
xchg
sub
cld
dec
enter
shrl
lea
adc
cmp
cmp
repnz
movsb
cmp
out
jo
xchg
lret
outsl
jmp
adc
sub
sub
shrl
shr
push
movsb
cmp
enter
shrl
cmc
mov
xchg
aas
adc
insl
mov
imul
js
pop
mov
testl
jle
mov
adc
sbb
mov
repnz
in
gs
test
xchg
xor
xor
ds
fwait
enter
hlt
lock
shrb
stc
cmp
dec
stos
in
scas
stc
ja
and
sub
adc
add
repz
mov
xor
int
inc
movsb
ljmp
xchg
movsb
inc
xor
mov
ret
loopne
repnz
push
arpl
mov
out
stos
pop
xchg
ret
mov
xchg
mov
outsl
jmp
xor
loopne
jp
pop
clc
jle
xchg
mov
sub
in
popf
imul
mov
insb
mov
arpl
dec
mov
ljmp
pushf
cltd
fcmovbe
jge
xchg
pop
cmp
mov
or
push
aaa
push
popf
and
mov
mov
jecxz
mov
or
mov
fcompl
enter
outsl
xchg
adc
cs
imul
cli
ss
inc
mov
fdivrs
mov
int
adc
push
dec
lea
loopne
mov
mov
mov
sub
xor
dec
rcrb
rcr
or
xchg
jmp
and
or
or
or
out
mov
mov
lods
scas
aaa
sbb
int3
cmp
lods
add
cmp
scas
bnd
push
xchg
dec
enter
mov
jecxz
sub
cmc
sbb
mov
adc
and
in
stos
push
mov
fmuls
jae
movsb
pop
push
pop
jmp
stc
sub
jb
add
and
xlat
xor
jmp
jae
sbb
mov
cmp
xchg
shll
rorb
aas
enter
dec
daa
lods
pusha
dec
shll
mov
stos
je
fidivrl
or
mov
jae
nop
mov
jnp
int3
xlat
movsb
cs
popf
outsb
add
xor
cmc
mov
lahf
pop
fsubl
xchg
in
jecxz
xor
loop
sbb
ja
and
insl
sub
xor
hlt
jl
loop
das
dec
cs
cwtl
dec
outsl
xor
scas
cs
push
ds
fxch
push
in
repnz
xchg
emms
lcall
xor
les
sub
xor
shlb
mov
je
js
mov
and
or
addl
jnp
push
and
pop
mov
test
sti
notl
inc
push
sbb
test
xchg
cmpsl
mov
lods
adc
push
add
fnstcw
nop
xor
dec
int
sbb
fneni(8087
and
repz
sbb
mov
cmpsl
movsb
push
sbb
sahf
push
mov
dec
loopne
push
mov
add
or
mov
sahf
xchg
decb
inc
inc
fistps
sahf
fnstsw
mov
scas
xor
lods
add
sub
xchg
mov
mov
test
aam
mov
frstor
mov
push
pop
ja
push
jno
rorl
outsb
fmuls
test
jge
inc
test
pop
xchg
shrl
mov
movsb
sbb
mov
std
adc
xor
lea
pop
shll
push
adc
and
add
inc
iret
mov
xor
mov
sub
loop
cmp
push
in
inc
mov
pop
adcl
jbe
mov
dec
sti
sti
je
xchg
pushf
shlb
ret
mov
outsl
xchg
mov
gs
cmp
rcl
loopne
add
int
sbb
rorb
cmp
xor
mov
jl
jge
push
hlt
aad
sub
and
pop
push
cld
lcall
stc
dec
div
xor
aaa
xchg
lret
jge
inc
outsl
mov
std
mov
sbb
dec
adc
adc
cwtl
cli
cwtl
ror
dec
jmp
lret
idivl
movsb
cmp
lods
sub
add
mov
sub
divb
fs
add
jae
mov
adc
adc
test
push
mov
or
aam
and
cltd
stos
cltd
jo
iret
outsl
add
divl
js
aam
movsb
adc
jnp
lea
shl
sub
frstpm(287
ljmp
int
pop
fdivrl
push
push
in
aam
shlb
jae
lods
sbb
cmpl
mov
iret
sahf
out
dec
into
mov
sub
mov
sub
jecxz
cmp
addb
mov
outsl
adc
enter
sub
fsubs
jge
shrb
dec
sbb
mov
or
mov
sarl
cmp
mov
loope
xchg
cmp
sub
xchg
idiv
cmpb
pop
movntq
xorl
push
sbb
and
aaa
mov
stos
aaa
sbb
and
jbe
loope
dec
fisttps
dec
jb
add
adcb
in
pop
sub
aaa
je
cmp
scas
inc
lret
mov
mov
imul
aam
ja
test
sbb
scas
addr16
scas
and
push
daa
push
fwait
xchg
daa
push
mov
idivl
mov
mov
incl
rcrl
sub
in
pushf
ja
adc
out
dec
mov
pusha
clc
mov
fdivrl
and
cltd
arpl
mov
in
rolb
jbe
push
sub
or
jns
jge
insb
adc
aam
add
sbb
ret
lock
fcoms
pop
and
add
aam
cltd
dec
outsl
mov
cmp
cmp
pop
and
sub
inc
shrl
xchg
test
mov
in
push
pop
pop
and
addb
pop
repz
iret
cld
inc
mov
cmpl
pusha
das
mov
arpl
mov
aam
mov
add
paddsw
fbld
inc
es
push
or
ja
mov
lret
stos
enter
pop
test
jmp
dec
add
sbb
imull
int
sub
pop
xor
fisubs
and
repnz
rcll
add
xchg
and
add
cmc
push
test
popf
repz
aam
cld
cmp
enter
scas
ss
xchg
shlb
pop
jbe
xchg
cmpsb
ja
xchg
pop
int3
sbb
jae
shrb
lahf
scas
add
jb
in
xchg
divb
cmpsl
out
addr16
adc
and
mov
aam
loopne
adc
fistps
xor
mov
outsl
inc
cmp
and
mov
std
adc
rcr
or
jmp
cmp
jge
cmpsl
sub
es
jg
xchg
idiv
loop
loope
cmovle
add
push
adc
mov
push
rclb
outsl
mov
xchg
ret
xchg
inc
jge
pusha
cmp
mov
mov
dec
jne
aaa
sub
test
xchg
mulb
inc
aas
pop
enter
out
movsb
or
sahf
lods
mov
dec
fs
jp
xor
jmp
sbb
lods
loop
fcomps
push
mov
mov
mov
daa
push
rcrb
mov
shll
or
push
dec
lret
roll
sub
gs
sarl
dec
mov
mov
icebp
push
daa
popa
or
mov
js
in
push
mov
pop
fistps
movsb
ds
jg
nop
popa
add
xchg
mov
sub
inc
movsb
in
mov
mov
test
pop
adcl
adc
mov
in
mov
dec
add
xchg
mov
rorb
dec
cmp
adc
roll
or
mov
leave
addl
aam
jge
insb
ja
pop
lods
jle
mov
neg
pop
loope
shrb
sarl
insl
cmp
cmp
cmp
ret
mov
inc
dec
lea
pusha
jp
push
or
out
jne
add
and
cwtl
inc
cmp
adc
dec
pop
mov
add
test
mov
mov
mov
pop
test
aam
mov
jmp
lahf
jns
cs
fistpll
xchg
sbb
ret
dec
out
dec
mov
in
cmp
mov
test
pop
andb
mov
xor
pop
pusha
mov
push
std
out
lds
mov
fs
jge
sbb
sub
testb
mov
repnz
ljmp
adc
or
lods
int
mov
mov
push
loop
pop
sub
sbb
jle
xor
idivb
ja
mov
mov
adc
into
aam
dec
bound
fs
fadd
dec
push
inc
sbb
leave
push
jmp
fsub
sbb
add
out
mov
push
test
xchg
frndint
mov
lods
mov
wbinvd
mov
add
push
cmpb
loope
fnstcw
mov
lock
jp
push
ror
rcr
shl
mov
adcb
push
push
stc
fcoms
xor
popf
mov
out
outsl
inc
stc
mov
divl
sarb
jmp
sub
mov
fs
ret
ja
push
js
scas
test
cmpsl
std
lds
cmpsl
push
js
dec
mov
cmp
cmp
movsb
es
rorb
cmpsl
out
ss
sbb
mov
ljmp
inc
add
out
fcoms
jbe
cmpsl
xor
negl
push
pop
arpl
jp
adc
and
out
daa
or
and
sbb
rclb
xor
xor
fildll
xlat
push
mov
adc
jmp
outsl
test
sub
in
cmp
mov
xchg
pop
dec
adc
push
push
push
mov
insl
ret
jnp
lods
ret
jp
mov
int3
mov
ret
bound
inc
xchg
jl
sbb
aam
in
xchg
pop
or
cmc
mov
popa
xchg
fdiv
sti
mov
pop
mov
xor
fists
ja
inc
mov
xor
adc
ljmp
push
arpl
insb
jg
loope
mov
stc
stos
pop
int
aaa
add
sbb
cmp
faddp
mov
push
adc
mov
or
fbld
xchg
fmuls
stos
stc
neg
mov
aaa
sbb
shll
mov
jne
sbb
movsb
in
fwait
sub
sub
sar
sub
cmp
mov
jp
mov
aam
repz
mov
mov
jge
aas
xor
stos
ffree
cmp
adcb
movsb
xlat
xor
shl
test
mov
loopne
sti
fisubl
mov
and
imul
movsb
xchg
sti
scas
hlt
test
push
inc
xor
pop
cmp
lcall
lods
fcmovb
and
jno
stc
push
mov
xchg
call
in
lea
movsb
mov
pop
out
sub
movsb
add
fcomps
cli
fwait
imul
pop
sub
cmp
mov
aas
or
imul
inc
ret
adc
inc
mov
test
nop
push
cmp
jmp
out
xchg
in
lods
fdivs
cmp
inc
push
dec
mov
loop
or
mov
fidivs
jg
add
aad
sbb
sub
xchg
leave
scas
cmp
push
dec
xor
mov
pop
mov
call
scas
mov
push
shl
ljmp
addl
inc
je
pop
and
call
pop
les
movl
mov
outsb
mov
mov
test
jp
mov
negb
gs
pop
push
adc
stc
mov
xchg
fcomps
jb
cmp
inc
aaa
mov
fadd
sub
lcall
test
push
dec
sub
into
jnp
mov
push
lea
das
cld
mov
push
fsubrl
and
jmp
and
fisttps
add
sub
sbb
shrb
pop
push
push
movsb
es
js
lods
cmp
pop
fbstp
call
mov
jmp
mov
adc
fidivrs
insl
inc
and
pop
xchg
xchg
sbb
je
inc
mov
adc
scas
bound
lods
inc
mulb
movl
sub
inc
xor
mov
mov
cli
in
pop
movsb
inc
pop
popa
fistpl
out
pop
and
ja,pt
dec
rcl
xlat
movsb
jmp
push
sub
pop
mov
mov
popf
stos
stos
dec
inc
sub
repnz
xor
call
push
and
lcall
addr16
dec
outsl
enter
mov
dec
add
xor
mov
icebp
mov
add
inc
sub
cli
jecxz
iret
pop
add
jns
out
jp
push
add
mov
cltd
xchg
xor
sub
loope
xchg
aas
cmp
jmp
rorl
add
test
add
call
pop
push
push
fidivrl
cmp
es
rcll
dec
mov
mov
aam
mov
shl
loopne
cmp
sbb
pop
std
inc
push
lret
jns
adc
ja
jg
or
sbb
or
mov
jle
fdivrs
ret
and
xchg
lret
pop
push
push
into
enter
inc
cmp
aam
dec
lods
push
enter
shlb
loopne,pn
and
pop
loop
ss
rorl
in
push
rolb
ds
pop
lods
dec
push
mov
mov
fildl
and
push
stc
cmp
aam
sub
imul
push
sti
xor
mov
pop
cld
mov
cmp
xorl
adc
mov
adc
test
cmpsb
jnp
push
fistpll
lret
adcb
xchg
aam
add
cmpsl
movsb
or
inc
mov
xchg
push
inc
call
test
movsb
fadds
lfs
or
dec
cmpsb
or
loope
push
push
inc
ds
call
sbb
nop
sub
pop
cwtl
cltd
ljmp
mulb
add
outsl
mov
nop
or
push
add
out
jmp
xchg
adc
mov
pusha
mov
mov
pop
cmpsl
cmp
xor
xor
jbe
jmp
sbb
xchg
stc
lcall
mov
and
pop
test
or
movsb
popa
dec
lcall
arpl
std
enter
mov
outsl
cld
loop
scas
adc
aam
loop
cmc
stc
cwtl
dec
mov
ret
sub
inc
gs
mov
pushf
add
fwait
cmpsl
sahf
push
pop
mov
subl
xchg
push
add
das
inc
rclb
jp
scas
jb
mov
cmpsl
jmp
and
int3
call
dec
pop
dec
jecxz
or
adc
cltd
jecxz
or
mov
inc
fsubs
lahf
sub
fwait
lahf
test
mov
lods
test
jmp
cmp
mov
orb
pop
adc
sub
dec
popf
out
js
scas
in
out
push
imul
xchg
out
xchg
mov
or
idivl
cmc
sbb
push
mov
xchg
aam
inc
or
andb
pushf
rolb
ja
or
fdivs
mov
in
ss
stos
gs
mov
jle
pop
int3
sbb
loope
lret
mov
mov
popa
aad
lahf
cmp
cmp
mov
jns
mov
mov
mov
orb
adc
jecxz
adc
rcl
into
cmp
dec
mov
sbb
mov
xchg
mov
cmpsl
xchg
lret
sbb
push
jl
int3
push
mov
lods
pop
sarl
adc
push
repnz
xchg
dec
add
cmp
push
loopne
cmpsl
mov
push
jne
dec
daa
mov
xchg
call
add
adc
jecxz
and
insl
sub
mov
or
adc
bound
xchg
push
jecxz
jo
inc
xor
and
loop
push
mov
and
jge
out
leave
shll
push
cmpsl
push
filds
aas
push
dec
ds
and
mov
xchg
xor
dec
mov
mov
loope
leave
pop
repnz
pop
dec
mov
push
inc
cmpsl
in
dec
insl
cmc
aam
les
movsb
xor
mov
xor
call
into
hlt
mov
mov
test
xchg
mov
insb
cmp
out
dec
jp
push
in
mov
jmp
rcrb
dec
hlt
cs
mov
into
mov
mov
jl
mov
xchg
cmc
shll
cmp
cltd
add
leave
mov
adc
stc
ret
ret
iret
fidivs
mov
mov
dec
bound
add
add
addr16
fists
stc
ja
outsb
jae
loop
dec
push
xlat
or
inc
cmp
inc
xor
adc
movsb
xor
xchg
or
jp
mov
mov
roll
xor
fisttpll
scas
jg
enter
dec
xor
neg
movsb
adc
dec
test
ja
inc
es
cltd
push
mov
arpl
push
inc
rorl
jmp
dec
xor
pop
sarb
enter
cmpl
scas
ds
and
sub
and
mov
int3
or
arpl
iret
jo
subl
insl
dec
lcall
fstpt
xchg
cld
mov
mov
aaa
cmc
xchg
jo
cmp
out
rorb
inc
mov
repz
xchg
add
sbb
shr
xchg
loope
inc
aas
sub
movhps
test
jne
mov
loop
daa
pop
dec
ftst
mov
repz
imull
dec
adc
ja
sub
and
mov
mov
dec
adc
pusha
inc
mov
push
add
sbb
cmp
sub
gs
mov
add
cmp
push
into
insb
iret
dec
enter
or
aam
jae
loopne
jns
dec
xorl
out
in
xchg
or
dec
fidivrl
ljmp
xor
call
mov
add
sbb
arpl
mov
or
testl
sarb
insb
xor
test
mov
push
es
stc
jns
xchg
mov
lock
or
out
ja
pushf
icebp
stc
out
pop
bound
paddsw
lcall
adc
sub
rolb
mov
mov
ret
mov
add
in
fwait
or
pusha
aad
stc
xor
dec
daa
dec
mov
cmp
jle
out
ss
cmp
iret
xor
sbb
push
xchg
mov
jb
jmp
push
movsb
xor
loop
fistpl
cmp
sub
mov
inc
push
insl
test
mov
inc
mov
test
mov
mov
cmp
cwtl
or
out
stc
fcoms
fadds
jecxz
xorb
mov
push
sub
loope
add
adc
nop
dec
push
pop
lret
imul
inc
sub
xor
mov
mov
ds
fnstsw
add
std
and
xchg
dec
mov
dec
cmp
dec
addr16
mov
mov
sbb
rcrb
inc
xchg
push
mov
jb
test
xlat
repnz
mov
scas
icebp
fsubrs
daa
enter
mov
insb
std
mov
push
popa
in
loop
add
add
jno
repz
fwait
popf
xor
dec
mov
mov
and
sbb
mov
add
and
rolb
cld
test
add
inc
jl
out
jbe
mov
or
mov
mov
sub
mov
int
aas
lret
jp
movsb
cmp
dec
add
xchg
out
int
mov
daa
movsb
stc
outsb
jmp
dec
sbb
cltd
mov
das
outsl
ret
push
popf
inc
int3
les
mov
das
add
mov
push
pushf
xchg
iret
lock
inc
cmp
pushf
fs
enter
lcall
mov
cmp
pop
cmpsb
out
xor
and
jp
xchg
cli
xor
movsb
movsb
mov
and
add
dec
es
dec
mov
mul
sahf
sbb
outsb
mov
mov
popf
out
inc
aas
arpl
insl
ds
dec
cmp
sub
jb
sbb
icebp
mov
or
xlat
mov
popf
jbe
addr16
test
call
scas
shlb
out
fwait
jnp
scas
fstps
dec
ds
lea
stos
repz
lea
neg
inc
scas
or
mov
aad
lahf
jmp
inc
push
or
add
mov
popa
imul
mov
push
in
cmp
dec
fstl
push
sub
lods
fsubs
xchg
sbb
fs
subb
movsl
jp
jge
jno
mov
jo
sar
jno
imul
mov
movsb
call
mov
out
icebp
mov
sahf
sti
xorb
push
mov
pusha
jmp
clc
mov
repz
mov
sub
clc
bound
scas
add
ret
movsb
adc
fucomi
mov
fdiv
clc
dec
push
sub
jmp
mov
mov
xchg
jmp
mov
xchg
imul
in
and
mov
jns
sub
jns
shll
or
aaa
dec
push
movsb
outsl
sub
mov
in
mov
mov
sbb
jecxz
jb
cld
xor
cmp
loop
faddl
aam
add
cli
mov
ja
add
fcoms
mov
fldcw
aam
xor
lea
mov
push
mov
mov
out
lahf
lock
enter
mov
mov
fldt
push
test
in
scas
aam
inc
xchg
std
mulb
push
jno
hlt
and
icebp
dec
push
or
call
pand
lcall
xor
jecxz,pt
xlat
add
or
mov
or
sub
add
faddl
pop
adc
xchg
and
mov
popa
imull
out
jmp
or
sbb
int3
xor
jo
jo
jae
mov
push
ret
test
mov
mov
pop
jo
test
dec
inc
jmp
sahf
push
lea
inc
ret
rcll
jo
mov
jle
pop
stos
outsl
sub
mov
stc
xor
xor
aam
add
xor
sbb
and
jg
adc
cmp
pushf
enter
cmp
inc
lcall
pop
xor
inc
inc
stc
mov
jae
and
jb
xor
addr16
mov
xor
imul
pop
out
cmc
scas
stos
inc
es
nopl
stos
mov
lcall
push
pop
add
std
loop
mov
ljmp
cltd
jmp
cld
orb
pop
aam
mov
dec
dec
push
cmpsl
mov
icebp
ficomps
mov
stos
sbb
or
gs
imul
sbb
push
lods
ret
les
test
shrb
xor
xchg
push
ds
mov
mov
lcall
xchg
pcmpgtw
jmp
sbb
cmpsl
repz
cmp
xor
rolb
lahf
mov
loop
icebp
mov
xchg
rcrl
cli
dec
sti
mov
movsb
fsubrs
mov
ret
inc
jecxz
rcrl
gs
aaa
les
hlt
cmc
mov
icebp
inc
popa
jecxz
out
mov
xchg
mov
and
fs
insl
pop
pop
push
pop
test
stc
or
nopl
cmp
shlb
lret
push
and
mov
bound
mov
jmp
xchg
out
jp
out
mov
roll
div
jb
add
cs
ret
cld
cli
mov
imul
ds
inc
ljmp
fbld
mov
mov
or
pop
shl
cmpsl
add
repz
out
aam
mov
push
mov
dec
ss
mov
fcmovb
and
jmp
mov
push
sub
aaa
not
cli
or
mov
mov
aam
inc
jge
fstpl
fmuls
popa
mov
aam
test
xchg
jmp
add
movb
imul
stos
jbe
psadbw
xor
loop
dec
call
xchg
mov
les
sbb
mov
lahf
mov
push
rorb
mov
pop
test
cmc
enter
stc
inc
js
sbb
push
lock
sbb
inc
xlat
push
push
loop
add
mov
movsb
dec
sbb
outsl
mov
add
sti
add
cmc
cmp
sbb
shrb
outsb
and
jp
adc
mov
sbb
jge
das
outsl
notl
or
inc
dec
mov
out
popf
out
jb
lea
enter
jae
adc
maskmovq
add
call
sub
and
lds
call
jo
clc
mov
mov
push
inc
xchg
xor
cmc
lret
repnz
loope
dec
arpl
dec
lret
out
dec
std
or
in
cs
cmp
mov
xchg
lret
cmpsl
pop
mov
jecxz
jmp
loope
xchg
clc
leave
jns
and
aas
decl
add
stos
mov
aam
jbe
jne
int
std
fnstcw
adc
lods
jg
gs
inc
icebp
lods
icebp
addr16
ss
mov
stos
pop
and
pop
cmp
xchg
push
je
arpl
sti
ficomps
xchg
scas
es
dec
imul
mov
dec
rcr
jmp
stc
and
lea
aad
cmp
mov
js
pop
and
es
int3
fisttps
inc
or
in
mov
pop
xor
jl
js
add
test
sbb
cmc
mov
xorb
icebp
mov
movsb
in
jecxz
hlt
xor
nop
pop
cwtl
xchg
leave
or
sar
test
xchg
mov
dec
rcrl
jb
mov
mov
test
or
jl
mov
test
aas
sbb
les
inc
std
mov
lret
test
jbe
aam
rcll
gs
cmp
push
out
scas
push
xor
mov
call
mov
fwait
outsl
rcrb
into
cmpsb
in
or
pushf
fimull
pop
sbb
movsb
mov
mov
scas
cmpsl
ljmp
mov
cmc
dec
pop
inc
icebp
pop
pop
pop
push
aaa
mov
nop
test
icebp
addl
lods
jne
ret
inc
cs
push
add
loop
jns
cmpsl
inc
arpl
aas
in
pop
scas
sub
push
int
pushl
dec
xchg
add
int
icebp
enter
inc
xor
movsl
xchg
stc
outsl
mov
mov
mov
push
dec
push
in
cmp
xchg
pop
clc
in
js
mov
xorl
repz
fsubrs
popf
mov
push
adc
add
into
lods
cmp
mov
mov
lods
stos
iret
mov
arpl
pop
pushf
fcos
fdivrl
ss
pop
pop
adc
out
hlt
leave
ret
test
mov
add
lods
imul
pop
loopne
adc
xchg
xor
lods
das
data16
test
dec
push
cmp
pop
and
icebp
and
lahf
imul
fmuls
aam
in
lret
movsb
in
add
xchg
cmc
push
cmp
inc
sub
arpl
mov
and
push
dec
inc
cmpsb
xchg
jb
mov
jmp
jnp
and
mov
rorl
xchg
and
sbb
mov
aam
test
cmp
mov
push
inc
sarb
cltd
stos
jo
mov
mov
mov
cwtl
pop
xchg
xor
int
shlb
sbb
ret
sbb
aam
subl
pop
mov
ja
mov
setbe
or
stc
mov
imul
repnz
into
push
cmpsl
mov
push
popa
sbb
dec
push
xor
jl
sub
adc
loop
mov
movsb
fidivrl
popa
icebp
pop
test
push
dec
lds
push
out
inc
xchg
push
jg
aam
and
mov
cmpsb
bound
inc
dec
popf
add
jns
shll
pop
dec
inc
cmp
cmp
push
mov
jbe
and
adc
fbld
aam
add
adc
pop
pusha
stc
cmp
jl
cmp
nop
aam
mov
or
push
push
jne
arpl
inc
test
mov
mov
mov
aas
add
mov
lcall
adc
xor
lret
movb
add
or
iret
xchg
jbe
scas
inc
mov
cwtl
add
jmp
lea
data16
fisubrl
sbb
mov
aaa
mov
mov
js
add
mov
mov
lret
mov
jp
mov
lock
xor
dec
or
mov
cmp
jge
ret
mov
xor
dec
notb
fnstsw
insl
inc
mov
lret
aaa
in
lret
and
pop
cmp
in
push
cltd
arpl
cltd
mov
in
pop
hlt
mov
cltd
out
mov
jmp
pop
scas
xchg
arpl
je
cld
test
jmp
mov
mov
mov
jmp
icebp
scas
stos
cmc
cmpsb
xlat
xor
js
lahf
fwait
aad
or
adc
push
inc
aam
jecxz
or
sub
pop
cmp
and
mov
sub
popf
mov
icebp
pop
addr16
mov
pusha
cs
fs
inc
fidivrs
mov
das
je
movsb
or
stos
cmp
loope
mov
out
gs
aaa
cmc
mov
mov
hlt
sub
mov
mov
dec
out
lods
decl
mov
jecxz
inc
in
add
dec
mov
arpl
test
hlt
addl
inc
data16
mov
pop
cmc
adc
cmp
pop
shl
jle
jb
fmulp
imul
sub
inc
mov
lret
ja
fcoms
ljmp
mov
sti
add
jb
lret
lret
xchg
rorb
jp
ja
dec
mov
mov
push
fstps
arpl
pop
push
lds
pop
cmp
pop
xchg
lea
mov
daa
hlt
mov
imul
aam
mov
jg
int3
pop
xchg
movsl
out
jp
cmp
ds
dec
divps
popa
or
popf
out
addb
mov
sbb
or
xchg
loope
xor
testb
or
test
shrb
xlat
dec
cmp
mov
and
repz
sbb
call
pop
data16
sub
mov
cmc
popf
sub
subb
adc
call
movsb
pop
lock
sub
aam
mov
rcrb
adcb
push
fisttps
lea
or
jmp
sarb
ret
mov
movsb
das
sbb
imul
xor
inc
dec
out
cmc
js
sbb
loopne
add
mov
stc
aaa
or
mov
push
fidivs
sub
movsb
pop
je
test
xchg
pushf
add
aad
push
scas
sub
mov
cld
dec
scas
jo
mov
mov
mov
sbbl
mov
test
lcall
add
data16
sbb
test
mov
push
sub
sub
fs
lret
sub
into
aam
stos
mov
int3
dec
into
add
cmc
jbe
in
push
sbb
cs
aam
pop
lods
dec
scas
mov
xchg
xchg
enter
dec
xchg
test
ss
cmpsb
and
aam
hlt
sarb
cmp
shll
js
xor
cmpsl
cld
out
cmp
mov
shrb
dec
add
dec
inc
test
shlb
jb
mov
aas
stc
mov
stc
into
mov
or
popa
in
mov
add
jl
mov
jecxz
test
pusha
stc
mov
leave
aaa
cmp
cmp
inc
out
dec
pop
dec
or
movntq
sub
adc
jp
lcall
fstpt
lret
pop
mov
push
ja
add
sbb
sti
xchg
mov
push
mov
sub
insl
outsb
imul
fisttpl
xor
pop
ret
pop
aas
mov
std
jnp
pusha
popf
pop
mov
in
pop
dec
movsb
jb
pop
int3
jmp
mov
and
push
addr16
jmp
and
mov
loopne
and
sbb
stos
rorl
adc
lock
mov
mov
shl
dec
add
xor
jmp
std
fcoms
out
cmp
dec
fldcw
aaa
andl
lret
clc
xorb
sub
xchg
jo
jbe
xor
ds
jmp
sbb
xor
sbb
stc
ret
jl
sub
mov
cmpsl
sbb
jo
je
push
daa
mov
inc
cmp
ret
aam
mov
mov
and
push
dec
popa
outsl
dec
cmp
aam
outsb
pushl
scas
sub
adc
ja
iret
test
ja
ror
or
insl
jle,pn
loop
int3
lods
xlat
loope
idivl
xchg
inc
test
and
adc
push
push
jmp
dec
sbb
lea
xchg
mov
mov
outsb
loop
or
mov
enter
sbb
dec
add
out
nop
mov
xor
inc
roll
mov
and
mov
insb
ret
xor
andb
shll
shlb
jbe
push
test
xchg
sbb
test
xor
adc
cmp
and
cwtl
cmp
adc
aam
mov
push
pop
inc
mov
mov
in
sbb
push
push
xor
cmp
cmp
outsl
jbe
arpl
fcoms
mov
enter
push
inc
mov
popf
jp
dec
cmpsl
call
cwtl
add
push
loopne
mov
loop
faddl
out
cmp
pop
lods
xchg
fwait
movsb
mov
idivl
dec
add
cmp
inc
test
mov
inc
xor
dec
cltd
repz
pop
cmp
mov
inc
mov
ret
ret
xlat
mov
stos
adc
cli
fsubr
out
mov
jmp
repnz
clc
jecxz
nop
dec
dec
xlat
sub
sub
out
test
xchg
imul
sbb
loopne
loopne
out
adcb
mov
mov
out
push
gs
xchg
fmuls
pop
incl
xor
gs
inc
shrb
int
nop
mov
push
cmp
sub
jne
xchg
scas
aam
call
cmp
repz
aad
popf
rorb
insl
popa
loope,pn
cwtl
in
test
out
jmp
dec
iret
shll
add
divl
cmp
jo
inc
or
mov
sbb
pop
movsb
clc
addr16
mov
mov
pop
xchg
sub
or
dec
mov
xchg
xchg
rep
xorl
cbtw
sbb
popf
or
bound
mov
scas
dec
into
andb
mov
jae
and
int
cmp
sbb
mov
test
cmp
jbe
cmp
mov
sub
mov
xchg
sti
push
mov
or
jae
xorl
inc
add
sub
sarl
mov
cmpsl
movsb
jl
push
mov
cld
xchg
mov
ret
sub
jmp
mov
cmp
fcoms
cmpsl
cmpsl
jge
and
frstor
ds
lods
subb
pop
divb
push
dec
andl
shr
adcl
mov
orl
xor
push
cmp
gs
sub
mov
adc
mov
add
std
and
nop
out
mov
movsb
in
adc
loop
jb
jnp
es
dec
mov
jp
jecxz
mov
or
out
sahf
xor
jg
and
cmc
xor
cmpb
adc
idiv
faddl
and
popf
mov
scas
mov
aas
in
mov
pop
subl
addr16
pop
pushf
mov
jge
repnz
into
cli
inc
or
ret
loope
and
xchg
js
hlt
mov
aas
dec
adc
scas
xor
and
push
cwtl
dec
cmc
ret
or
push
add
in
cs
mov
aaa
cmpsb
sti
jne
sbb
xor
enter
jp
fsubs
xor
test
stc
push
int
lods
mov
push
into
insb
mov
mov
test
and
dec
sub
ds
movsl
mov
fnstenv
fidivrl
adc
imul
sub
mov
sub
dec
gs
aam
cmc
mov
mov
arpl
sbb
aam
lahf
imull
shr
pushf
push
mov
sbb
pop
dec
arpl
or
dec
mov
jae
and
dec
pop
sub
lret
sub
xchg
mov
mov
and
pop
arpl
into
mov
mov
or
lea
xchg
fdivrl
lods
cmp
cmp
test
mov
cld
mov
cmpsl
lods
movsb
pop
jmp
ret
jbe
das
pop
enter
mov
or
das
pop
mov
mov
inc
add
aam
fdivl
sarl
sub
movsb
jns
ror
in
or
rorb
stos
jp
out
inc
nop
or
jmp
pop
dec
add
pop
stos
stos
xchg
jge
sti
mov
lea
enter
stc
bound
out
push
pop
outsb
repnz
mov
adc
cmp
xchg
test
loopne
sbb
add
mull
inc
push
fwait
xchg
iret
jnp
jb
test
scas
mov
iret
fdivrs
xchg
xor
mov
mov
mov
mov
and
cli
inc
imul
add
adcl
push
loop
sub
sbb
stos
lahf
cmp
dec
sbb
pusha
push
mov
or
sub
xchg
cltd
leave
adc
jl
mov
shrl
test
xlat
xor
popa
inc
sub
cmp
popa
je
out
daa
jmp
ss
popf
orb
test
and
dec
cmp
and
adc
movsb
push
fsub
mov
dec
push
mov
sub
cmpsl
frstor
pushf
mov
xor
in
mov
outsb
adc
jns
mov
cwtl
movsb
adc
push
adc
lret
ljmp
mov
xchg
xor
lods
cmc
or
lcall
ja
mov
aad
jae
movsb
inc
cld
clc
loope
dec
mov
mull
frstor
jmp
mov
push
lock
stos
xchg
xor
jo
lcall
mov
mov
sbb
leave
lock
data16
mov
mov
in
rcl
xor
and
sub
mov
add
mov
pop
and
setle
lods
push
les
icebp
aaa
pop
pusha
mov
add
and
dec
push
jmp
xchg
mov
dec
inc
add
add
cmp
dec
pop
adc
lods
test
or
mov
cmp
out
dec
xor
cmpsl
loope
test
xchg
xor
mov
dec
pop
adc
negl
dec
call
iret
outsl
pop
jmp
icebp
js
test
pop
mov
mov
mov
call
bound
push
test
push
sub
dec
adc
in
dec
add
inc
and
es
mov
out
push
pushf
mov
scas
or
inc
jb
and
push
aas
les
mov
aam
arpl
jmp
sbb
hlt
popf
aam
pop
cs
je
inc
mov
lahf
ror
mov
ljmp
inc
lds
sbb
mov
inc
xor
xchg
pop
std
push
faddl
sahf
adc
pop
lds
out
inc
dec
outsl
stc
in
rclb
cmc
add
sti
dec
sahf
add
xor
jle
loope
sar
mov
xchg
loop
das
pop
scas
movsb
add
and
pop
enter
jmp
les
lds
cltd
outsl
mov
loop
aas
add
and
lahf
les
and
mov
rclb
mov
push
ja
add
loop
mov
add
mov
ret
xchg
sbb
movsl
les
push
fisubrs
int3
mov
sbb
cmp
or
insb
or
shr
dec
sti
aaa
fmul
arpl
sub
or
xchg
in
push
cmpl
cwtl
fmul
push
xor
ss
xchg
movsb
xchg
test
pop
aam
inc
aaa
scas
adcl
aam
add
cltd
or
filds
pop
sbb
xchg
loopne
or
inc
xchg
add
movsb
stos
push
out
ret
and
icebp
sub
dec
arpl
mov
jb
dec
lods
or
decb
test
mov
pop
push
and
push
pop
not
inc
push
push
inc
test
outsb
jg
jmp
mov
arpl
and
mov
cmpsl
xchg
push
movsb
inc
add
xchg
pop
scas
bnd
fstpt
cmp
sub
testb
lret
inc
dec
scas
arpl
stc
fs
or
mov
iret
dec
push
sub
dec
addl
pushf
xchg
imul
mov
push
in
lods
xchg
push
int
out
mov
stos
sbb
mov
aas
sbb
pushf
lods
pop
dec
ja
mov
dec
fnstsw
adc
push
rcrb
je
xchg
sbb
mov
sbb
icebp
mov
pop
xor
jecxz
cmp
ret
pop
movsb
jne
loope
add
insl
stc
subl
or
mov
push
push
push
push
jg
outsb
mov
or
fdivr
push
adc
loope
cmc
addr16
inc
sub
or
stos
sub
out
cmp
pop
xchg
xor
popa
sbb
dec
sub
add
xor
jp
push
inc
or
outsl
jp,pn
out
ja
outsl
aam
shr
xor
jns
and
mov
shlb
dec
cmc
loop
push
mov
jmp
in
aam
or
cmp
pusha
test
dec
and
inc
mov
push
aad
mov
lcall
arpl
fildl
pop
jecxz
pop
cltd
lret
push
fbld
aam
mov
hlt
cmp
add
rolb
pusha
adc
orl
rclb
sub
dec
aam
mov
sbb
insb
xchg
inc
mov
popa
icebp
loope
aam
insl
fisttpl
rcrl
insl
lret
cmpsl
cmp
xchg
int
inc
mov
hlt
sarb
xor
dec
arpl
loop
push
push
rorl
xchg
mov
mov
adc
dec
neg
mov
cmp
mov
add
mov
push
add
xor
shl
mov
cmpsl
push
dec
add
hlt
orb
sahf
add
push
into
jmp
pop
jne
bound
push
mov
mov
push
ret
pop
jns
inc
stos
fistpll
adcb
repz
nop
and
int
pop
xchg
add
mov
aam
loope
flds
push
sti
inc
outsl
cmc
sti
push
mov
add
mov
es
enter
addl
xor
stos
mov
pop
fstl
push
aaa
fdivrp
idivl
test
loopne
imul
xlat
out
sub
dec
mov
pop
fwait
mov
pop
andl
dec
rol
push
or
into
pop
jae
and
push
sbb
xor
mov
repz
ror
aam
jg
xor
xor
pop
dec
lock
lea
mov
ljmp
idivb
ja
inc
xorb
sbb
xorb
and
add
dec
call
pushf
xchg
mov
xchg
std
divb
out
mov
shlb
dec
mov
sbb
mov
aaa
scas
adc
jl
jmp
inc
mov
outsl
mov
mov
mov
inc
mov
dec
aad
mov
in
sub
dec
vpsraw
out
rep
dec
in
cmp
add
push
arpl
xor
loop
ja
mov
or
imul
les
mov
stos
inc
mov
loopne
inc
mov
xchg
and
int3
inc
sbb
xchg
mov
add
push
lock
mov
pop
adc
xchg
push
xor
fidivs
stc
roll
inc
mov
or
add
icebp
mov
sbb
cld
add
xchg
dec
or
xor
jg
cld
inc
adc
push
movsb
add
lods
push
push
jb
fimull
decl
cmp
sub
dec
stc
jo
mov
sub
in
push
and
test
dec
mov
mov
inc
adc
pushf
add
mov
aam
push
orb
stos
cmc
pop
nop
add
push
xchg
xorl
cmp
push
jge
aam
lcall
loop
xor
mov
push
xor
shlb
dec
add
push
and
mov
stc
adc
cmp
pusha
push
sub
fstpl
lea
test
mov
add
xchg
out
mov
test
test
push
in
pop
mov
movsb
dec
loop
xor
roll
sbb
xorl
dec
popa
insb
pop
mov
push
aaa
sbb
fcmovbe
sub
cs
mov
sarl
cmp
pop
jmp
incb
push
lret
rclb
cmp
sub
in
cmp
pop
cmpsb
rolb
rcl
dec
lret
lret
dec
insb
out
mov
or
mov
idivb
add
stc
dec
test
jge
int
mov
dec
mov
or
pop
int3
andl
xchg
es
movsl
pusha
leave
cmpb
in
std
cmpsl
cmp
int3
sub
adc
data16
dec
ss
dec
in
adc
sub
jno
imul
dec
mov
test
pop
push
shll
iret
push
inc
or
jne
pop
stos
leave
cmp
xchg
dec
inc
add
pushf
leave
rcrl
movsb
sub
xlat
xchg
rcrb
mov
cld
add
jp
cmp
lea
xor
and
icebp
cmpsl
mov
push
push
cs
stc
and
in
fdivs
sub
adc
les
lds
les
rclb
loope
adc
jnp
bound
xlat
popa
sqrtps
fnstsw
cmc
fucomp
scas
sub
mov
jl
inc
xor
sub
les
pushf
cmpsl
pop
mov
test
lret
add
aam
mov
mov
dec
js
inc
les
rcll
dec
xchg
mov
lods
movsb
movsl
sub
cmp
aam
push
insl
sub
stc
outsl
in
jl
lods
inc
push
xchg
cmp
mov
stc
andb
lods
mov
or
mov
fstp
pop
mov
adcb
sbb
add
xchg
xchg
mov
xor
bound
sbb
test
push
fwait
ds
loopne
movsb
pop
pop
inc
div
sbb
ror
push
pop
out
inc
add
out
movsb
xor
jbe
arpl
loope
das
out
sbb
dec
adc
inc
pop
lret
sbb
lock
hlt
sbb
jmp
jg
add
test
cmp
mov
cwtl
mov
pop
inc
or
xor
dec
aam
xor
sub
push
xchg
push
pop
enter
fildll
pop
cwtl
aam
aad
push
xchg
gs
daa
mov
xorl
pop
add
cmp
jp
fisttps
idivl
adc
iret
sub
fisttpll
es
dec
cltd
sub
rorl
test
scas
das
or
fisubl
xchg
push
lcall
mov
pusha
loopne
lret
popf
pop
jge
sub
sbb
cmp
cld
mov
movsb
jp
lahf
jp
cltd
std
inc
mov
dec
mov
test
hlt
orl
pop
mov
xchg
mov
jns
sahf
scas
pushf
scas
cmp
lret
and
test
cmp
mov
pop
movsb
icebp
clc
mov
sub
lcall
mov
mov
cmp
push
loop
xchg
out
pop
pop
dec
jbe
sub
jns
mov
sarb
or
add
sub
add
inc
xchg
push
ret
pop
cmp
das
xor
push
jbe
outsl
push
dec
push
sub
jnp
ljmp
movsb
cmp
out
test
push
lcall
aam
add
lea
popf
sahf
loop
clc
sbb
outsl
mov
push
insl
adc
adc
pop
test
and
pop
mov
fs
inc
add
gs
cmp
leave
add
pop
js
test
pushf
add
adc
jo
cmpsl
mov
jmp
pop
push
or
cmp
std
hlt
mov
xor
cs
loope
inc
or
jecxz
shll
stc
cld
mov
add
pop
mov
and
mov
dec
lahf
insl
pusha
jnp
scas
jno
mov
and
adc
loop
mov
popa
insb
mov
xchg
mov
pop
movsl
cli
jbe
add
mov
iret
mov
push
sub
push
movsb
mov
je
dec
pop
out
xor
int3
cmp
aam
cwtl
jmp
or
mov
dec
and
aam
inc
sti
shll
outsb
lock
pop
mov
adc
popf
faddl
mov
pop
mov
adc
aam
add
pop
add
fcoms
aam
push
aad
sbb
sbb
xchg
stos
loope
add
out
mov
pop
adc
cmc
cmp
call
rorb
mov
inc
out
aas
shll
cld
xchg
mov
fdivs
sub
mov
cmp
jbe
add
sbb
dec
and
cmpsl
mov
mov
add
jecxz
leave
popf
adc
sbb
sub
cmp
lods
jl
decb
xchg
dec
loope
cmp
out
mov
sbbl
shrb
adc
adc
adc
aam
dec
cmc
sub
xchg
pop
mov
imul
inc
mull
sti
xchg
je
cltd
mov
mov
cmp
cmp
and
dec
mov
ljmp
fsubs
lods
cmp
ljmp
push
mov
bound
cmpsl
adc
mov
xchg
cmp
mov
xabort
pop
pop
loop
popf
and
push
mov
push
orb
loope
addr16
fincstp
or
sbb
test
xchg
pop
lahf
out
pop
and
orl
pop
cmp
sub
pop
dec
dec
and
mov
cmp
mov
and
cmp
push
xchg
loop
push
les
push
and
insb
scas
pop
inc
sub
sub
mov
test
inc
in
clc
mull
dec
adc
cmp
adc
sub
mov
cmp
out
xchg
cmp
enter
in
mov
mov
push
or
add
cmp
sti
outsl
mov
xchg
add
dec
fsubrs
pop
sarb
ja
fisubl
ja
addr16
js
jnp
xchg
stos
into
fsubrs
mov
push
dec
out
in
sbb
push
in
pop
aam
insb
cmpsb
xor
enter
xchg
lret
pop
in
imul
adc
shlb
mov
sbbl
sti
push
fidivrs
in
imul
dec
fsubrl
inc
lods
gs
stos
inc
xor
cmp
pop
push
mov
push
pusha
xlat
movsb
loop
add
inc
cli
mov
inc
mov
stos
inc
xor
mul
xchg
inc
mov
cltd
mov
lcall
pop
mov
xor
dec
pop
xlat
not
popf
enter
movsb
test
sarb
fcmovnbe
and
mov
in
enter
int3
in
xchg
pushf
incl
shll
test
dec
or
daa
or
adc
inc
xchg
mov
ds
dec
lcall
sbb
rcrb
mov
iret
stos
push
dec
fwait
subb
nop
std
loop
fadd
aaa
out
dec
sbb
repz
xchg
inc
push
mull
jge
mov
xchg
adc
movsl
inc
aad
cmc
loope
call
ret
test
es
mov
or
mov
dec
mov
outsb
cli
jecxz
mov
scas
dec
add
movsl
in
mov
add
test
or
fsubrs
dec
mov
rolb
cmp
out
daa
xlat
inc
xor
cmpsb
and
imul
mov
and
icebp
push
fisubrs
mov
outsb
and
shrl
out
mov
inc
rclb
stc
add
cmp
test
and
in
jp
outsb
ja
mov
daa
loopne
test
ret
scas
js
push
lods
pushf
lret
xor
mov
cmp
pushf
inc
imul
pop
into
jns
or
mov
mov
xchg
test
cwtl
lret
stc
pop
xchg
std
andl
vsubps
push
push
dec
ljmp
push
xor
inc
enter
pop
mov
stc
ffreep
imul
add
push
mov
mov
popf
popa
dec
jb
add
std
out
xchg
push
and
insb
mov
push
sub
sub
in
int3
lahf
jp
pop
fcomip
cmpsl
cwtl
and
dec
sti
sbb
mov
mov
or
inc
aam
lret
mov
popf
push
sub
jo
rcll
dec
cmp
push
leave
or
add
or
xchg
insb
xchg
pop
mov
mov
mov
popa
aaa
test
pop
xchg
push
pop
es
or
pop
mov
push
adc
rclb
cmc
push
test
ffreep
add
sbb
in
jecxz
mov
les
cmpb
adc
enter
out
mov
out
cmpsl
cli
adc
dec
push
add
push
push
hlt
lcall
or
mov
decl
pop
scas
hlt
scas
mov
sbb
loopne
repnz
sbb
test
mov
mov
cmpsl
sti
hlt
cmp
or
test
arpl
add
or
pop
push
mov
sti
adc
push
test
add
cmc
and
sub
cmp
in
std
jbe
mov
xchg
xor
loope
xchg
clc
mov
sub
push
jbe
aam
push
subb
js
mov
popa
adc
test
mov
shll
xor
dec
scas
rorb
mov
ljmp
sbb
js
aam
mov
imul
push
stc
dec
inc
add
scas
in
mov
es
pusha
push
dec
adc
mov
push
push
xchg
xchg
jmp
mov
add
sbb
loopne
les
pop
mov
xchg
popf
daa
imul
in
loopne
push
jmp
jo
push
movsb
mov
jecxz
aam
ljmp
lods
xchg
xchg
test
ds
cld
pop
lea
sub
push
push
add
adc
loope
cmp
mov
popa
stc
pop
mov
jns
push
xchg
fmuls
dec
and
sbb
jbe
cmp
pop
xor
aaa
out
adc
test
or
xchg
aaa
leave
cli
pop
cmc
aaa
loope
dec
stos
push
movsb
lret
in
jge
pop
push
adc
push
scas
lret
mov
enter
ss
push
xorl
cs
arpl
jle
fisttpl
js
sbb
mov
mov
pop
pop
inc
cs
out
pop
xchg
stos
add
mov
adc
enter
stc
push
arpl
mov
pop
push
push
push
sub
sbb
lods
out
mov
repz
pushf
mov
stc
ret
in
add
cmc
movsb
pushf
adc
xchg
fdivs
lret
cmp
scas
xchg
xor
cmp
mov
aam
mov
mov
and
hlt
pop
notl
mov
pop
push
mov
jb
mov
in
rcpps
sti
or
sub
cmp
dec
lcall
fistpll
cmp
pusha
popf
and
add
jge
mov
outsl
add
mov
inc
mov
test
jge
push
out
popa
sti
adc
stos
and
pop
test
shll
or
pop
sub
cmc
cmpsl
xchg
dec
scas
testl
cmpsl
adc
mov
and
xlat
outsl
mov
rorb
sub
sahf
push
jle
and
cmp
dec
sbb
nop
nop
mov
and
scas
inc
jo
js
mov
mov
rcrl
sbb
lret
push
rcrb
cmpsb
and
andb
mov
dec
pusha
pushf
dec
loope
outsb
dec
rcrl
sarl
subl
and
stc
fsubl
in
mov
ret
lock
into
sub
mov
mov
cmp
movsl
lods
test
shll
or
bound
adc
mov
sub
sub
ljmp
cmp
mov
jg
or
cmp
pop
xchg
lret
cmp
xor
and
gs
sub
dec
xchg
push
test
ljmp
sub
adc
stos
and
mov
jne
xor
out
pop
adc
mov
cmp
inc
jg
jbe
mov
iret
rcrl
jbe
lods
and
and
pushl
mov
push
inc
mov
cmpsl
sarb
push
jo
outsl
mov
mov
aam
add
pop
mov
rorl
mov
xchg
add
mov
out
sub
loop
push
movsb
and
iret
cmp
and
cld
mov
push
icebp
cld
xchg
jbe
iret
dec
push
push
fdivrl
stc
mov
loop
out
or
sbb
push
sbb
pop
pushaw
ja
ret
or
sbb
sbb
sahf
cmpsl
sti
mov
cmp
cmc
add
and
xchg
std
jmp
mov
test
mov
mov
cmc
add
inc
and
ret
repz
jno
sbb
mov
adc
cmp
out
mov
inc
fdivrs
add
stc
test
pop
mov
push
popa
xor
xor
adc
out
cwtl
cmpsl
stos
push
lret
les
and
dec
into
movsl
inc
add
stc
outsl
popa
adc
cmp
cmp
cltd
movsb
cmpsb
xorb
notb
xor
negl
dec
ss
and
scas
fsts
adc
cmp
rcrb
pop
sub
popa
lcall
enter
inc
repz
sbb
loope
jmp
mov
aam
or
shll
xchg
rorb
test
sub
adc
inc
mov
insl
xor
into
push
inc
dec
lret
cmc
test
pop
mov
movhps
and
xor
add
push
rorb
mov
inc
fimull
pop
imull
std
repz
mov
lds
mov
sbb
adc
mov
mov
stos
dec
lods
lea
aas
in
push
mov
fwait
scas
cld
movsb
lret
sbb
rcr
mov
cs
rolb
inc
jmp
fdiv
push
jbe
inc
shrl
test
pop
push
mov
jl
daa
xlat
shld
jnp
add
push
dec
push
xor
sbb
mov
ja
jge
or
mov
sbbl
jno
frstor
cmpsb
sub
fsubrs
mov
shrl
sub
nop
mov
hlt
repnz
dec
sbbb
adc
loope
sti
cs
xchg
fwait
cmp
pop
adc
clc
fdivs
sbb
push
in
sub
mov
lods
jmp
cwtl
pop
cli
pop
inc
cmp
jg
mov
aam
dec
dec
aaa
adc
mov
adc
jp
popl
insl
push
jae
mov
hlt
add
inc
test
mov
mov
cmp
dec
xlat
and
iret
mov
test
inc
je
dec
and
pop
dec
xchg
mov
dec
stc
and
and
es
cmpsb
cmp
ror
mov
push
lds
mov
mov
jl
testl
aas
dec
push
das
fcmovbe
out
pushf
aam
lds
push
xor
xlat
mov
cmp
test
lret
clc
cmpsl
push
mov
into
cmc
mov
mov
fbstp
add
popa
test
xchg
mov
bound
cmp
or
add
shll
push
lret
mov
int3
inc
fcmovb
jb
or
cmp
mov
xor
and
in
pop
push
int3
cmpsl
fsubr
dec
movsl
test
adc
inc
pop
sub
xor
iret
mov
inc
mov
xchg
es
sub
dec
pop
dec
xchg
pop
adc
mulb
xlat
jbe
mov
gs
cmp
pusha
inc
mov
and
push
pop
in
je
mov
pop
lea
mov
arpl
jp
sub
repz
cmp
dec
out
jecxz
xchg
or
mov
mov
jae
adc
sbb
ja
frstor
nop
out
ficompl
cmpsl
addr16
mov
jge
loop
or
aaa
jecxz
xchg
sub
pushf
sub
or
and
pop
aam
lods
xor
pop
lret
mov
call
idivb
xchg
repz
sub
and
dec
inc
inc
arpl
pushf
pop
nop
movsb
cmp
fimuls
mov
cmc
out
mov
adc
sub
shlb
sub
lret
mov
mov
mov
ljmp
ja
mov
adc
and
jbe
je
and
pop
mov
or
mov
xchg
sbb
iret
in
mov
stc
outsb
imul
enter
mov
xchg
mov
shr
rcrb
sbbl
xor
adc
jne
les
dec
out
jp
jmp
jmp
jnp
xor
add
add
idivl
ret
xchg
pop
inc
dec
cmp
std
or
push
roll
lds
call
ret
xor
add
test
pop
cmc
dec
in
addr16
mov
and
pop
notl
aam
pop
and
push
sub
push
aaa
cmp
mov
arpl
movsb
adc
aaa
out
fildl
mov
ja
xchg
movsb
clc
sub
sbb
call
test
add
inc
lock
cmp
mov
data16
scas
movsb
lahf
mov
sub
stc
and
mov
fnsave
sahf
lds
pop
mov
cli
out
push
dec
repnz
inc
sub
push
repz
jbe
aas
mov
add
incb
push
or
cmp
cmp
sub
adcl
xchg
dec
dec
outsb
pop
sub
ss
mov
stos
daa
mov
and
aad
fwait
loope
xchg
fs
sub
jg
scas
lock
in
jns
call
xor
cmp
xchg
mov
dec
out
mov
nopl
mov
jmp
mov
inc
fxch
inc
addr16
fnstsw
ja
xor
mov
adc
fmuls
cmpsb
fbstp
rorb
movsl
outsb
sub
and
out
dec
movsl
push
sbb
xchg
xchg
andb
push
insl
jb
iret
mov
sbb
dec
adc
sub
sbb
pop
and
aam
stc
mov
pushf
lahf
or
or
ljmp
cmp
aas
lret
xorl
imul
inc
push
mov
mov
scas
xor
lcall
mov
pop
shll
repz
adc
or
mov
scas
sub
add
andl
add
mov
jno
adc
arpl
dec
stc
in
ja
je
scas
arpl
clc
ja
pop
cli
insl
outsb
jns
ror
add
lea
mov
jno
xchg
dec
outsl
rcrb
popf
lea
mov
jge
rclb
in
dec
rclb
pusha
arpl
out
insb
leave
popf
mov
sbb
cltd
out
iret
jnp
cmp
push
pcmpeqd
arpl
addr16
pushf
ss
fbld
dec
cmc
xchg
pop
push
inc
sbb
jmp
into
dec
add
bound
aam
xchg
inc
jge
lret
xchg
hlt
test
test
out
orl
inc
mov
and
add
in
je
sbb
mov
je
test
mov
xor
dec
adc
jecxz
xchg
loopne
test
dec
inc
mov
out
nop
ljmp
jge
das
popf
iret
xchg
scas
mov
cli
mov
push
lahf
fdivs
loope
add
pushf
push
fdivs
test
or
shl
inc
addr16
mov
jns
xor
mov
mulb
push
jbe
adc
test
mov
enter
loopne
cmpsl
stc
jne
dec
mov
loop
pop
in
cltd
inc
jb
test
jo
mov
in
aam
int3
xlat
sub
cmc
ja
adc
inc
jmp
and
bnd
sub
movsb
sti
repz
pop
popa
outsb
mov
and
out
push
cmp
adc
pop
ss
das
movsb
push
dec
inc
mov
fisttps
pop
add
xor
outsl
jle
int3
jl
out
sub
negl
inc
xchg
adc
sub
mov
aam
and
stos
out
add
enter
jp
mov
int3
or
aam
ja
push
or
cmp
inc
mov
mov
mov
mov
pushf
aaa
mov
rcl
pop
dec
jmp
lods
iret
sub
into
cld
xchg
std
sub
in
push
movsl
inc
leave
cmp
out
insb
into
fsubrl
nop
xor
mov
sar
iret
into
sbb
sbb
cmp
outsl
cmc
cmpsb
xor
lret
popf
sbb
xor
pop
pop
test
imul
xor
add
mov
cmp
aas
dec
jne
ret
lret
mov
das
xor
sbb
out
movsb
add
xor
inc
aaa
jmp
mov
jle
mov
stos
inc
aam
push
or
push
mov
in
jmp
xchg
xor
xor
or
insl
sti
int
inc
adc
stc
ret
popf
inc
mov
pop
mov
cmpb
pop
jmp
adc
ret
ret
es
shl
push
out
mov
pop
cmp
xchg
pop
mov
stos
sbb
sub
inc
mov
xchg
push
fcomp
aam
fidivs
jnp
adc
mov
push
push
mov
fcoms
inc
lea
mov
inc
mov
repz
mov
sti
push
out
cmp
pop
ss
loop
dec
cld
insl
dec
popf
pop
leave
aaa
cmp
push
inc
test
mov
cld
test
aas
out
mov
xchg
dec
mov
ss
out
mov
xchg
push
test
pop
aam
arpl
iret
adc
xor
daa
dec
mov
dec
roll
mov
push
jmp
jecxz
mov
scas
scas
lret
mov
sub
sbb
push
in
es
rorb
sbb
sti
repz
shl
pop
mov
and
in
lret
mov
fsubl
daa
mov
fs
js
mov
xor
inc
cli
jge
loope
jb
orl
std
mov
insb
xor
popf
pause
or
sub
jne
ljmp
ja
jo
or
dec
push
lret
mov
adc
loopne
adc
dec
and
add
push
loopne
out
push
je
testl
jo
and
js
push
aas
mov
inc
add
mov
pop
jae
shll
xor
jp
mov
mov
in
mov
inc
xor
add
lock
xorl
cltd
call
lods
cmp
cmc
mov
int
stc
cmp
negb
popa
adc
sbb
mov
dec
daa
insl
sub
int
lods
mov
repnz
fnstenv
mov
push
in
popa
sub
fs
cli
fdivrl
rorb
test
ds
scas
mov
adc
adc
daa
repnz
notl
mov
out
arpl
mov
scas
test
adc
push
sub
cmp
push
or
jmp
inc
sbb
xor
jle
inc
sbb
mov
dec
jbe
pusha
and
push
mov
lea
subb
inc
fldt
aam
lret
add
cltd
out
into
dec
sbb
sub
out
popa
push
sub
test
adc
mov
pop
clc
and
bound
loope
and
pusha
xlat
ret
test
rcrl
xor
daa
data16
pop
inc
xor
or
out
jmp
push
xor
xor
mov
push
scas
push
mov
popa
sbb
dec
cltd
pop
mov
mov
mov
dec
add
jbe
mov
pop
mov
pop
je
cmp
cmp
idivb
mov
dec
push
stc
shl
sbb
pop
or
aam
lcall
jmp
mov
sarb
dec
sbbb
jbe
call
mov
aas
xchg
or
daa
mov
int3
jp
divl
sbb
mov
scas
fcoml
cmp
leave
mov
and
xor
icebp
or
sarl
mov
iret
sub
insb
iret
jp
cmp
loopne
je
scas
loope
push
push
out
inc
jne
mov
pop
push
cmp
out
and
xchg
mov
lahf
push
mov
dec
mov
arpl
cmpl
cmpsl
mov
push
push
xchg
test
xchg
leave
outsb
inc
jge
repz
lcall
inc
mov
add
cmp
scas
push
hlt
push
cs
stc
sub
popa
lret
int
xchg
jg
data16
dec
out
xchg
cmp
xchg
xor
imul
inc
jne
jg
imul
je
rclb
fsubs
mov
aas
clc
ja
mov
enter
iret
or
and
aas
mov
sub
divl
add
pop
inc
adc
ljmp
dec
sub
jge
pop
xchg
pop
inc
fbstp
mov
sub
pop
cli
icebp
inc
pusha
sahf
sbb
dec
pop
in
jg
insb
sub
sbb
jo
push
or
cli
xchg
cmp
sarb
xor
lret
xor
repz
sub
pop
repnz
mov
or
mov
jl,pt
cmpb
movsb
test
inc
dec
push
jmp
jmp
test
and
xchg
push
xor
adc
popa
push
fisubs
sbb
pop
mov
lcall
cmp
cmpl
pusha
cmp
mov
mov
jae
mov
mov
dec
or
bnd
mov
xor
insb
in
sti
stos
aas
xor
mov
push
divl
xchg
xchg
jbe
xchg
dec
bound
mov
and
mov
xchg
xlat
dec
ja
xor
push
mov
repz
lcall
push
call
aad
push
movsb
and
jl
sbb
add
mov
jns
cmp
and
jno
lret
mov
mov
mov
push
aaa
mov
jge
in
aad
rcrl
dec
aas
dec
sub
aam
das
fwait
xchg
and
sbb
dec
sti
scas
test
je
movsl
pusha
dec
xor
pop
dec
inc
leave
test
lahf
ret
push
push
sti
es
cmp
push
dec
sbb
lahf
adc
lock
insb
out
loopne
sbb
inc
fwait
jbe
mov
hlt
xchg
add
adc
xor
jbe
out
pusha
mov
and
cmpsl
inc
test
jmp
xor
push
in
inc
mov
and
xrelease
mov
out
mov
sbb
or
xor
sub
dec
mov
mov
cmp
vmovaps
jb
loop
stc
or
mov
cmp
push
mull
push
sub
out
and
mov
nop/reserved
adc
fcoms
dec
sub
mov
mov
or
idivl
mov
call
dec
pop
mov
push
addb
lods
aaa
xorl
test
add
lcall
pushf
jno
mov
gs
cmpsl
sub
cmp
jo
push
popf
mull
dec
jge
orb
shll
clc
xor
or
fadds
gs
into
sarb
lods
repz
push
aam
adc
sub
stos
rorl
xchg
push
ljmp
outsl
fldl
jae
jmp
loope
mov
cmp
xchg
mov
gs
dec
cmp
arpl
popf
ja
mov
into
xor
shll
daa
adc
rclb
fcoms
or
shlb
jbe
or
and
cmpsl
in
push
test
dec
repnz
ljmp
stos
aam
in
iret
fdiv
cmp
xor
dec
in
clc
xchg
and
pusha
mov
in
mov
int
jb
lds
fists
aam
adc
inc
sbb
pop
mov
and
push
mov
out
xchg
inc
out
test
into
or
aam
xchg
mov
hlt
aad
jl
adc
in
push
lret
ds
xor
mov
mov
jno
cwtl
push
scas
mov
add
cmpsl
pusha
outsb
pop
aam
mov
lods
push
mov
push
cmp
es
add
mov
mov
lcall
mov
jns
movsb
enter
sub
mov
sbb
mov
call
divl
decb
sbb
js
jg
mov
sub
xor
pop
push
pop
adcl
mov
popa
adc
pop
adc
loope
lods
adc
fwait
mov
dec
pop
dec
loope
int
lods
rolb
cld
ljmp
shr
fisubrl
lret
cmp
push
in
xor
fbld
xchg
enter
dec
cmp
xor
outsb
cld
rcr
out
pop
xchg
stc
out
repz
icebp
scas
add
cld
arpl
sub
cmpl
fistpll
xor
push
in
or
push
mov
es
sub
xchg
xor
lahf
out
test
add
pop
movsb
out
adc
mov
rol
loop
call
nop
mov
mov
cmp
aaa
pop
test
arpl
in
test
in
inc
pusha
test
mov
outsl
xor
adcl
hlt
icebp
dec
movsb
add
int
adc
out
dec
mov
fbstp
stc
adc
push
sub
stos
pop
mov
or
cmpsl
sbb
out
mov
cmp
shlb
out
xlat
imul
iret
dec
push
add
int
pop
dec
pop
and
and
mov
adc
stos
sub
dec
ret
dec
sub
inc
mov
xchg
mov
pop
lret
or
mov
cmp
push
inc
std
mov
cwtl
and
mov
pushf
or
inc
jmp
or
shlb
outsl
or
popf
fcom
push
pop
or
jecxz
fldenv
test
les
ss
pop
repnz
jb
lock
cmc
sbb
in
bound
imul
ja
add
dec
fstpl
lods
push
movsl
sti
xchg
repnz
jg
aam
lods
mov
movsb
out
xchg
mov
add
inc
loopne
mov
out
fidivrs
or
pop
fsubrp
fadds
mov
cli
mov
push
dec
notl
in
in
arpl
push
or
xor
ds
jge
adc
stc
lcall
in
sahf
pop
fdivrl
inc
sub
out
xchg
scas
out
mov
roll
aad
mov
xchg
cmpsl
inc
jbe
stc
loope
or
or
pop
pop
clc
jb
dec
enter
sub
mov
cmp
aam
pop
xorl
popa
xor
scas
mov
sbb
inc
lock
and
mov
and
push
add
mov
mov
add
adc
add
jae
pop
fnstcw
adc
jmp
flds
in
xor
sti
fldl
je
add
or
outsl
nop
jo
cmpsl
mov
mov
add
fadd
mov
jp
mov
and
dec
popa
push
inc
pop
or
push
rcrl
mov
int
add
icebp
cmpsl
mov
ljmp
inc
or
mov
int
movsl
js
std
pop
inc
je
pop
movsb
orb
stos
mov
add
jp
bswap
into
cld
mulb
outsl
fs
jle
cmp
mov
pop
jp
test
mov
add
in
test
or
notl
sub
stos
and
data16
sub
jecxz
cld
jle
fsubs
xchg
jl
and
enter
repz
mov
mov
ficoml
sub
cld
mov
jmp
mov
fstl
aaa
inc
lea
add
xor
or
xchg
enter
lret
movsb
mov
cli
fdivrs
dec
mov
popf
mov
push
mov
into
jecxz
push
jecxz
subl
and
jne
and
cmpsl
movsl
xchg
jecxz
mov
xchg
movsb
push
and
mul
mov
sti
dec
inc
enter
add
mov
in
jbe
sub
in
lret
enter
out
xor
mov
fsubs
xchg
mov
call
clc
mov
je
mov
out
mov
mov
sbb
adcb
repnz
es
sub
mov
enter
outsl
mov
jmp
cltd
repnz
lcall
out
in
test
adc
cmp
mov
lock
xor
pop
mov
push
imul
stc
cmpsl
loop
insl
xchg
mov
iret
ja
cmp
out
or
mov
lcall
fstp
xor
xor
sbb
call
xor
arpl
bsr
mov
or
lods
cltd
xchg
out
jg
iret
lock
and
aam
in
das
movsb
adc
test
dec
or
adc
lcall
push
mov
aam
cmp
mov
arpl
and
in
mul
mov
hlt
push
or
cmp
cwtl
add
push
sbb
fsub
mov
cmp
js
test
iret
pushf
sub
add
dec
lea
lret
push
xchg
ds
push
aad
push
adc
fnsave
ret
notl
std
xchg
int3
pop
push
fistl
mov
lahf
xor
ret
mov
cmp
imul
xchg
push
mov
ljmp
fisubs
mov
movsb
out
pop
gs
les
mov
sti
mov
pop
lods
mov
and
fidivrl
rcrl
push
adc
xchg
xorb
out
arpl
dec
hlt
xchg
push
pop
ffree
push
ret
and
jno
dec
movsb
jge
pop
pop
adc
ljmp
xchg
xchg
rorl
adc
jmp
inc
leave
rcll
shlb
and
mov
iret
sbb
das
lods
dec
mov
add
mov
cmp
push
aas
adc
cmp
mov
and
lods
xchg
rcl
stc
cmp
inc
mov
enter
les
test
dec
dec
out
icebp
loop
test
orb
cmpsl
adcb
mov
push
rcr
scas
mov
mov
pop
ret
iret
xchg
xor
les
pop
mov
mov
enter
mov
push
rcrl
dec
push
or
das
test
loop
int3
popf
add
push
stc
mov
movsb
cs
xor
data16
push
push
aas
inc
aad
and
imul
popa
rol
pushf
scas
loop
clc
rolb
icebp
mov
lods
sub
pop
insb
xor
sbb
arpl
sbbb
xchg
cmp
sbb
xor
jnp
push
sub
sahf
test
cmp
out
es
pop
push
xor
int3
xchg
cmp
cmp
push
cltd
push
xor
inc
cmpsb
or
int3
addr16
stc
cmp
gs
cmp
xor
mov
movsb
out
jp
imull
pop
and
stc
dec
xor
sbb
push
orl
cmp
stc
pop
in
pop
popf
mov
cld
cmp
pop
xor
push
push
inc
cmc
and
dec
scas
shll
cld
inc
out
pop
test
sbb
arpl
mov
inc
mov
movsl
pusha
cs
dec
push
xor
mov
sbb
sbb
hlt
cmc
sbb
inc
lods
stc
push
add
mov
ds
das
xor
cwtl
lock
mov
ja
lods
je
movsb
xor
jge
dec
jae
fildl
mov
mov
mov
rolb
hlt
test
mov
mov
loope
sbb
push
pop
mov
imul
mov
push
mov
or
cmc
xor
cmpsl
les
call
adc
fdivr
dec
and
or
push
sbb
inc
insl
xor
fstl
shrb
or
jb
xor
dec
xchg
sub
mov
sti
bound
lods
xchg
cmc
pop
xchg
sti
xchg
test
rolb
jno
mov
mov
mov
inc
pop
add
mov
xor
popf
mov
add
cmp
push
xchg
das
push
dec
add
xchg
lret
ds
xchg
fisubl
test
sub
ss
xchg
inc
repz
jle
mov
sub
xchg
inc
ljmp
and
inc
lods
xchg
fbld
aam
xor
leave
clc
mov
cmp
push
rcl
out
in
clc
jp
push
int3
or
repz
ss
mov
into
cli
idiv
mov
loop
or
xchg
jle
cmp
mov
inc
das
je
cmp
lret
cld
adc
testb
aam
pop
lea
enter
test
jecxz
lea
sti
xorb
dec
sub
test
test
fsubrl
add
lds
in
push
inc
jmp
jne
loop
ret
add
divl
sbb
cmp
sahf
and
arpl
ret
cltd
add
neg
mov
stc
cmpl
mov
fcomp
xchg
mov
stc
jecxz
push
mov
mov
pop
mov
in
aam
jo
sbb
fldl
jge
mov
repz
stc
bt
push
sbbl
lods
loope
sbb
gs
xlat
mov
aas
mov
push
loope
rclb
mov
lret
pop
aam
loop
cs
mov
in
and
addr16
push
mov
cs
int
sbb
bound
dec
xor
and
or
fcomps
popl
sbb
pop
mov
mov
int3
call
or
test
pop
add
in
xor
int
cwtl
roll
popf
rolb
add
filds
out
inc
stc
cmp
enter
ret
mov
push
clc
scas
mov
mov
cmpsb
mov
pushf
mov
jno
xor
incl
ret
push
mov
dec
lcall
in
xchg
or
ret
cmp
sub
sub
and
sti
mov
inc
mov
test
mov
push
ret
sbb
xor
mov
push
ds
rclb
push
loop
and
xchg
jmp
sbbl
inc
pop
push
inc
jmp
mov
push
pop
sbb
aam
xor
cmp
sbb
icebp
movsb
cs
dec
cltd
addr16
rcll
cmp
xchg
and
or
xlat
ja
flds
popf
sti
xchg
xchg
mov
inc
push
out
std
out
add
xchg
and
sarb
jmp
fadds
fldenv
arpl
sbb
or
mov
pushf
xchg
cltd
ds
in
lds
sbb
and
setg
add
lods
inc
jmp
mov
shrl
stos
jae
jp
orb
mov
push
mov
cs
and
or
pop
inc
in
mov
xor
push
in
imul
mov
xchg
insb
mov
sub
dec
imul
and
mov
mov
xchg
dec
stos
cmp
aam
jo
inc
push
repnz
mov
icebp
mov
shlb
icebp
xchg
cmp
orl
lret
aam
inc
and
pop
pop
stos
scas
pop
scas
sbbl
cmc
aaa
jno
mov
minps
pushf
jecxz
sub
cmp
pop
push
testl
push
cmpsl
fchs
test
mov
xor
mov
imul
xor
sbb
jno
fdivs
mov
and
insl
cmpsl
inc
outsb
addb
mov
divl
sub
fstl
and
xorl
inc
push
cmp
mov
testb
pop
push
mov
arpl
jecxz
fimuls
stos
push
add
out
es
aam
dec
rol
call
pop
ss
xor
mov
add
mov
and
loopne
loop
repz
xchg
sub
outsl
cmpsl
ret
xchg
mov
pop
sub
cwtl
sub
pusha
fcoms
stos
push
add
push
adc
sti
jae
adc
lds
clc
lcall
add
pop
test
push
ret
jp
fidivs
jb
jb
add
test
sbb
xorl
jg
iret
imul
clc
jge
mov
arpl
jmp
jg,pn
aam
add
in
in
addb
and
pop
mov
mov
jne
cmp
mov
dec
dec
add
xor
stc
adc
mov
fs
xchg
sub
inc
adc
jo
js
jg
cltd
mov
jl
push
xchg
xor
push
std
lahf
in
enter
outsb
out
add
push
jp
add
out
jge
lds
test
rcrl
mov
cld
test
add
jle
mov
mov
movsb
into
xchg
pop
push
jmp
or
loope
add
fdivs
in
inc
pop
pusha
test
sahf
mov
push
test
test
push
leave
sahf
pop
inc
scas
movl
test
std
mov
aas
pop
cmp
das
cmp
pop
xchg
xor
mov
mov
lahf
sahf
pop
lret
aad
lods
popa
insb
push
dec
mov
icebp
mov
mov
cmp
xor
xchg
popf
repnz
inc
out
and
cmp
mov
add
ds
popa
mov
lcall
stc
dec
sahf
imul
fsubrs
mov
popf
xlat
cmp
xchg
repz
mov
js
fwait
or
in
bound
xchg
inc
pop
inc
sub
dec
fcompl
test
fdivr
scas
test
jl
xorb
mov
enter
test
shrb
add
xor
sub
in
jb
repnz
inc
imul
pop
das
xorl
mov
push
jmp
pop
insb
decb
and
jecxz
enter
sti
lahf
xchg
jb
test
scas
scas
lods
push
jg
cmp
dec
je
repz
jno
add
or
shlb
push
sbb
in
mov
andb
sbb
aam
rol
jmp
mov
imul
inc
div
add
sub
in
inc
loopne
stos
insl
adcb
ret
mov
jle
mov
rcrw
mov
cmp
sar
sub
xchg
ja
or
pusha
cs
mov
inc
inc
lods
and
jne
cmp
mov
cmp
popf
popf
add
fiadds
mov
aam
xchg
push
outsb
pop
pop
shll
test
dec
negl
in
lods
movsl
fwait
xchg
rcrl
jl
inc
adc
sub
scas
xchg
push
push
movsb
mov
adc
xor
or
arpl
cltd
or
xor
push
pop
mov
push
cld
inc
dec
mov
mov
pushf
in
stos
dec
je
push
fwait
mov
stos
or
and
sahf
frstor
cmp
scas
sub
testl
dec
xchg
xor
movsl
movsl
aaa
xchg
pop
lcall
xorl
pop
add
mov
xchg
add
clc
dec
pop
mov
maskmovq
mull
out
mov
jmp
sub
scas
push
mov
pop
pop
out
mov
mov
add
pop
fsubrs
and
stos
sahf
insb
enter
adc
in
add
js
fadds
shlb
mov
push
xchg
repz
outsb
fbld
leave
push
repnz
inc
fs
pop
add
or
mov
in
insb
add
jbe
cmp
loope
push
rcll
cmpsl
jmp
lds
addr16
loop
push
arpl
arpl
xchg
mov
pop
dec
adc
jge
aas
rorb
pop
bound
and
pop
aam
jp
mov
aad
scas
lods
into
sbb
test
jg
mov
rol
mov
xchg
mov
mov
dec
xor
cmp
cmpsb
sub
or
stos
fmul
xchg
sub
je
mov
xor
pushl
ss
jmp
mov
mov
mov
cmpsl
leave
movsb
sbb
push
mov
add
cmp
loop
int3
xchg
in
push
jb
cli
jmp
jo
lock
fidivs
frstor
jae
add
mov
shll
sbb
xchg
add
popa
sub
sbb
aaa
les
cltd
ljmp
bound
add
movsb
insl
out
mov
mov
popl
cld
mov
cmpb
ja
out
jbe
add
push
data16
xor
aam
push
push
and
stc
cmp
pop
inc
xlat
scas
iret
loopne
add
fdivs
jae
xor
dec
push
addl
pop
push
mov
mov
mov
movl
mov
dec
jae
sarb
test
shrl
iret
and
aam
inc
rcl
pop
push
cmp
jg
scas
int
iret
mov
aam
ss
movsb
notb
jge
pusha
and
mull
xor
outsl
cltd
sti
jnp
push
mov
aad
sbb
scas
mov
add
ja
jl
enter
sahf
jl
shlb
test
jo
ret
add
insl
push
mov
cmc
mov
sub
ljmp
jp
push
mov
adc
inc
add
insl
mov
rorb
popa
lds
test
xchg
pop
jbe
and
sbbl
push
pop
mov
mov
sub
and
adc
dec
in
test
imul
cmp
daa
xchg
mov
out
call
mov
xor
mov
inc
mov
dec
inc
and
popf
mov
adc
xchg
cmc
lahf
or
daa
iret
repnz
mov
idivl
push
dec
adc
xor
mov
mov
xorl
add
mov
cmpsl
or
xchg
in
ja
cmp
mov
push
cmpsl
cmpsl
xchg
jmp
lahf
out
xchg
mov
popa
inc
leave
jo
lahf
mov
cmp
fmul
mov
mov
call
andl
popa
lcall
xlat
xor
add
cmp
mov
pushf
mov
mov
jle
sub
jnp
lret
jg
sbb
mov
push
or
sub
mov
cmp
sbb
mov
stc
loope
mov
mov
sub
mov
out
xchg
xlat
xchg
rclb
negl
xlat
mov
mov
inc
sub
cmp
xor
fildl
mov
sub
cmpsl
das
test
sub
xor
mov
int3
cmp
xchg
adc
or
mov
loope
mov
adc
mov
cs
out
fsubrl
out
sub
scas
cmp
mov
pop
inc
xchg
push
lret
mov
cmp
xor
mov
sbb
push
xchg
test
pop
imul
xor
lds
int3
sub
test
bswap
divl
test
subb
add
out
mov
aas
adc
lahf
cmp
in
xor
xchg
mov
mul
cmpsl
xor
cmp
add
xchg
cmp
outsb
mov
std
pop
inc
or
sbb
jge
sbb
out
xor
out
sub
enter
cmp
test
push
sbb
cs
mov
mov
cmc
ljmp
shrl
xor
xor
cltd
daa
inc
inc
push
mov
repnz
cmp
xor
or
xor
jge
rorb
cmpsl
clc
mov
jno
sbb
test
push
es
xlat
sub
mov
incl
roll
mov
jecxz
jae,pn
insb
stos
mov
popa
sub
pop
mov
cltd
lds
sbb
fcoml
nop
xor
inc
push
cmpsl
mov
mov
pop
lods
sub
test
ret
leave
gs
sbb
push
push
mov
lods
and
jmp
fnstenv
inc
repz
mov
das
cmp
xor
push
cs
out
das
mov
and
adc
push
cltd
mov
mov
mov
xor
jns
inc
push
cmp
xor
repz
pop
dec
je
xor
push
leave
lds
mov
jbe
subb
or
cltd
or
jns
imul
mov
jecxz
mov
add
cs
test
mov
nop
scas
xchg
push
pushf
mov
out
and
pop
lahf
and
rclb
add
ror
hlt
push
leave
add
insb
xor
sbb
sbb
xlat
idivl
add
outsb
stos
mov
jno
fnsave
sub
sub
fbld
cs
pop
fstpl
cli
in
pop
xchg
xor
bound
jno
inc
subb
jb
cmpsl
into
in
mov
jno
cli
push
sub
inc
test
lcall
add
xlat
or
lods
mov
adc
cmp
imull
inc
loopne
add
xor
mov
add
inc
jmp
imul
mov
mov
push
cs
pop
mov
loope
aad
jmp
xchg
jge
lret
push
mov
adcb
pusha
fbstp
jae
mov
mov
mov
repz
mov
mov
sub
cwtl
mov
std
mov
sar
pop
mov
mov
xchg
inc
inc
out
xlat
imulb
jb
dec
jo
inc
mov
rcrl
call
in
pop
or
mov
push
nop
jbe
addr16
pusha
cwtl
xchg
test
jl
dec
push
mov
outsl
imul
adc
mov
jne
mov
sbb
out
pop
cmpsl
leave
out
pop
out
xlat
cmp
and
fwait
pushf
sbb
arpl
cmpsb
ror
stc
jp
sbb
cltd
jne
sbb
aaa
xchg
dec
rclb
imul
mov
sub
jns
jns
loope
rcrb
call
js
stos
cli
dec
mov
adc
fcoml
fstps
daa
mov
and
lods
sub
dec
stc
cmpsl
mov
mov
divl
mov
sub
jnp
adc
cmpsl
loopne
cmp
lret
mov
icebp
shlb
xchg
mov
and
insl
mov
mov
adc
cmp
ret
mov
fs
jae
imul
push
ss
dec
arpl
xchg
push
dec
repnz
fnstcw
pop
mov
xchg
sti
xchg
and
out
mov
cmpb
mov
mov
rcrl
mov
aas
sbb
aad
scas
jns
mov
lret
mov
jg
and
data16
jl
adc
jns
xor
frndint
add
in
cmp
inc
add
scas
testl
cmpsl
jnp
or
mov
je
fdivp
in
jl
mov
jae
ja
mov
jmp
insb
or
cmp
jns
lods
mov
rcrl
rolb
shll
in
divb
xchg
mov
sti
lahf
shl
outsl
and
jle
mov
iret
mov
inc
inc
push
lret
dec
cmp
neg
pop
int
mov
cmp
in
stc
mov
in
push
jg
fdivrl
mov
shlb
call
ret
mov
jae
mov
jns
mov
pusha
pop
mov
and
mov
mov
stc
xchg
adc
out
cmc
pop
bound
fcmovnb
hlt
cmpsb
mov
aas
cmpsl
push
mov
sbb
mov
mov
mov
cmpsb
leave
mov
xchg
imul
xor
fwait
sbb
push
mov
xlat
xor
pop
lds
addr16
cmp
cmp
rdtsc
sarl
adc
adc
mov
mov
sahf
push
repz
imul
mov
jp
mov
cmp
icebp
inc
mov
stc
pushf
dec
cmp
mov
xor
jle
cli
push
mov
adc
fstl
adc
and
es
sub
mov
fcomip
repz
push
push
mov
movl
mov
mov
mov
or
pusha
lea
add
xlat
push
loop
dec
in
scas
and
dec
jae
mov
pop
rcl
push
repz
push
or
cmpsl
aaa
add
in
clc
lods
adc
stc
data16
mov
add
xchg
add
mov
je
adc
mov
fwait
ds
push
addl
pop
or
mov
outsl
dec
and
iret
mov
sbb
push
ss
scas
jg
sbb
push
rcr
xor
jns
add
testl
pop
add
popf
jecxz
and
add
shl
pop
mov
hlt
pusha
sbb
add
push
xor
mov
popa
or
sub
inc
lcall
jo
movsl
cmpsl
jmp
mov
lret
cli
pop
and
adc
testl
scas
cmp
adc
test
mov
int
mov
hlt
xchg
xlat
idivl
add
cwtl
pop
push
sub
notb
mov
testl
mov
repnz
mov
mov
xchg
pusha
ror
inc
jle
gs
mov
cmp
sbb
rorb
lcall
cmpsl
or
mov
in
jl
add
cld
stc
mov
fwait
sbb
jle
out
jbe
scas
adc
call
enter
sub
fimuls
stc
shl
mov
mov
push
push
mov
xchg
cld
or
mov
stos
nopl
mov
pop
mov
stos
xchg
inc
sbb
mov
mov
repz
jmp
sbb
mov
dec
xchg
ss
imul
mov
insb
movsb
sti
popa
mov
xchg
aaa
es
mov
test
bound
mov
test
dec
cli
dec
pop
xor
aam
mov
fisttpll
jge
inc
rcrb
cmp
mov
negl
aad
and
in
mov
mov
push
mov
adc
in
mov
cmp
mov
push
ljmp
mov
xor
push
inc
and
pop
dec
ret
mov
test
pushl
call
mov
iret
cmp
mov
ret
hlt
dec
lret
cmpsl
fld
lcall
idivl
mov
out
mov
push
shlb
mov
or
xchg
mov
jmp
stc
adc
fbstp
or
mov
mov
dec
cld
rcrl
nop
xor
testl
dec
or
add
jle
test
leave
lea
and
push
mov
pusha
in
mov
clc
inc
mov
sub
ds
mov
movsb
inc
inc
test
jge
jp
rol
mov
lods
ret
adc
lods
jle
sub
xor
cmpsl
add
xchg
mov
mov
fcomp
call
pop
lock
xor
adc
or
sub
fidivrs
mov
adc
xchg
addr16
subb
test
xor
cmpsl
shlb
mov
out
mov
dec
icebp
repz
mov
daa
call
dec
cmp
adc
icebp
in
mov
inc
out
push
je
push
cwtl
mov
cmpsl
jmp
std
jl
mov
jecxz
adc
aad
mov
stos
pusha
fwait
cwtl
popa
cmpsb
insl
rcrb
push
sahf
push
xchg
mov
inc
or
cmp
add
sub
xchg
cmpl
add
mov
hlt
testl
and
daa
subb
mov
movsb
fdivrl
cltd
xor
pop
mov
mov
xlat
jl
mov
rclb
mov
rclb
fisttpl
testb
and
out
mov
xchg
aad
mov
es
lahf
push
xor
jo
fisubl
sub
mov
pop
sbb
cmpsl
cli
lahf
pop
sahf
stc
pop
mov
and
ret
stos
cmp
jns
sbb
scas
cmp
and
adc
push
or
pop
cmp
xlat
stc
out
xorl
stc
xchg
rcl
out
mov
shll
mov
mov
int
push
pop
bound
imull
loope
pop
sti
and
jns
xorl
inc
ja
in
imul
fsubs
js
cmpsl
cmp
adcl
adc
testl
mov
add
push
xchg
sti
movsb
pop
xchg
mov
inc
add
ds
cmp
je
xlat
push
jb
scas
lcall
jns
mov
mov
cmp
and
shll
mov
popa
subb
or
mov
sbb
sbbl
in
pop
pop
fdivrl
inc
or
mov
dec
jg
xor
mov
mov
mov
inc
mov
fucom
std
push
xchg
and
mov
mov
sahf
cmp
ficoms
fcmovnu
decb
dec
sbb
pop
shrb
push
mov
ficomps
lret
inc
cwtl
pop
mov
add
stos
mov
push
xlat
dec
ds
pop
lret
mov
sahf
in
cmp
fisubrs
xor
pop
pop
push
mov
aas
in
cmp
pop
sbb
pop
sub
jg
lahf
add
dec
lret
test
mov
mov
icebp
jnp
std
jns
mov
out
cs
jle
sbb
sahf
pop
mov
into
xor
mov
jns
cmp
jno
xchg
mov
aas
sbb
test
inc
mov
xor
std
shrb
lret
jmp
in
cwtl
cmp
repz
shll
mov
jle
sti
sahf
adc
mov
mov
in
cmp
mov
jb
pop
pop
and
sti
xor
fnstsw
mov
xor
xor
ficomps
div
mov
sub
cmp
pop
or
mov
fidivrs
xchg
ja
fmulp
insl
daa
jg
or
mov
mov
push
jecxz
call
mov
pop
cwtl
jo
jge
sbb
mov
cmp
lahf
sub
cmp
rcrb
jg
add
or
pop
xchg
std
mov
mov
es
cmp
jecxz
cmp
push
jmp
pushf
push
pop
jae
mov
adc
daa
sahf
rorb
xlat
push
mov
ljmp
in
cmp
pop
push
mov
aas
cmpsl
fistpl
rclb
jmp
test
mov
cmp
push
push
mov
pushfw
mov
pop
pop
addr16
mov
jle
int3
ss
in
es
cmp
das
data16
fisubs
mov
loopne
lods
mov
test
mov
cmp
fdivrp
test
outsl
cmp
sbb
enter
jo
pusha
jle
xor
mov
xor
mov
gs
daa
cmp
fucomp
shlb
fucom
mov
std
pusha
push
inc
pushf
insb
mov
shll
es
cmp
pop
cmpsb
cmpsb
pop
cmp
je
enter
or
jmp
pop
aaa
jns
pop
or
or
sbb
test
sarl
push
dec
loopne
sbb
pop
jle
iret
or
push
mov
and
sahf
orl
insl
fidivs
sti
fdivrp
mov
adc
sub
dec
cmpsl
clc
mov
mov
mov
xchg
mov
fcomp
idiv
fistps
mov
lret
cmpl
arpl
mov
jl
mov
mov
cmp
jmp
scas
cwtl
cmp
addr16
adc
mov
rcl
sarb
mov
and
mov
shlb
fdivrs
sar
outsb
cli
fidivrs
pop
out
arpl
clc
gs
stos
dec
aaa
mov
mov
mov
and
fistpl
pop
or
shrb
iret
shlb
mov
cmpsb
lahf
fs
cs
lods
inc
mov
fnstsw
std
rorb
pop
stos
popa
push
push
xor
jl
pop
orb
adc
or
push
ret
jno
adc
or
stos
cmp
mov
xor
sub
popa
pop
mov
lock
cld
or
leave
lods
mov
mov
mov
mov
fdivrp
and
push
jns
push
push
mov
ljmp
fcmovnu
es
mov
movsl
pushf
cmpsl
mov
pop
pop
mov
rcrb
xor
stos
push
xor
lret
mov
cli
aas
fdivrp
or
mov
sti
ret
ds
cmp
mov
jle
rcrl
movsb
rcl
adc
pop
das
mov
aas
cmp
std
dec
lret
pop
sub
jb
cmpsl
xchg
mov
fldl
jns
std
roll
jns
mov
cltd
ds
pop
stos
xor
lods
jmp
loopne
std
sbb
js
outsb
test
jg
cmpsb
test
cmp
and
mov
cld
std
in
sarl
ds
cmp
arpl
lcall
test
sahf
mov
fdivrp
iret
jns
pop
inc
popa
scas
cmpsl
idivb
dec
pop
push
xor
jl
or
sub
lahf
pop
cmp
mov
fstl
ss
std
adc
cmp
cwtl
js
dec
sahf
dec
rclb
push
and
mov
or
jmp
adc
push
inc
jg
mov
idivb
xor
cmp
cmpsl
cmp
jmp
or
sahf
xor
fidivrs
dec
mov
jge
ret
pushf
cmpsb
mov
push
adc
push
pop
mov
jg
lahf
insl
daa
and
shl
mov
fnstsw
cmp
loopne
popf
jae
add
movsb
loopne
pushf
loop
mov
mov
and
add
in
fsubp
ror
adc
sub
mov
xor
ficomps
lahf
mov
ljmp
mov
mov
std
in
cmp
push
mov
sbb
in
mov
pop
in
cmp
jle
insl
push
stc
lahf
pop
jge
xor
scas
add
mov
mov
loop
jg
mov
sub
mov
mov
push
loope
inc
mov
xor
lahf
js
fwait
out
sbb
jle
sahf
cld
or
int
aaa
scas
insb
mov
xor
popa
or
or
push
test
mov
jmp
xchg
mov
in
es
cwtl
or
fistpll
sub
xchg
ds
push
xor
clc
ds
fimuls
pop
fistps
mov
pop
stc
enter
mov
jg
sub
movsl
mov
sbb
fstl
rclb
cmp
pop
aaa
jnp
xchg
sub
or
pop
lods
jp
popa
cmpsl
and
jmp
loopne
data16
arpl
cmp
sarl
or
mov
or
cwtl
out
add
cmpsl
mov
jmp
lods
stos
xor
sub
fdivp
jnp
sarb
mov
jl
popa
inc
or
stos
sti
lahf
jne
test
adc
and
lods
std
cmp
inc
xor
fidivrs
loop
adc
jle
sahf
data16
sbb
mov
jns
xor
xchg
aas
adc
ja
sub
pop
mov
adc
std
into
mov
dec
aam
mov
xlat
pop
xchg
mov
jle
movsl
ljmp
arpl
imul
lea
cmp
pop
push
dec
je
sub
sar
mov
mov
lods
push
dec
shl
mov
push
mov
or
stos
lods
ds
pop
das
cmp
cmp
insb
jns
gs
fiadds
sbb
xor
es
mov
push
add
divl
ret
aas
cs
lock
push
mov
jg
shlb
mov
std
lahf
push
sub
mov
cmp
pop
imul
popa
lock
sarb
mov
inc
jb,pt
cmp
inc
loop
pop
xor
leave
mov
in
call
scas
mov
and
mov
cwtl
std
cmp
mov
lods
ljmp
shrb
add
lods
jns
jno
adc
fs
imul
stos
jp
jl
popa
out
push
push
out
add
sbb
in
cmpsl
stos
pop
mov
stos
push
push
mov
jmp
push
inc
out
mov
rcl
mov
std
in
es
sbbb
sub
pop
ret
scas
popa
mov
stc
dec
scas
stc
ja
imul
mov
mov
cmp
lahf
orl
mov
mov
pminsw
push
cmpsl
ds
xor
mov
testb
into
ljmp
insl
pop
mov
loope
fsubl
out
mov
push
cmp
mov
loope
mov
sti
xor
jmp
and
xor
rclb
inc
mov
add
mov
lods
inc
in
inc
jecxz
ficoms
fisubrs
cmp
cld
add
sub
jg
lahf
popa
jl
cmp
jne
fdivrp
adc
push
sar
stos
cmp
cmp
push
mov
movsb
shll
push
in
inc
cmp
cmp
aad
or
pushf
jo
movsl
out
mov
std
add
lods
loope
ds
mov
pop
sbb
mov
cltd
daa
pop
xor
out
repz
sbb
and
jns
lods
or
dec
or
cmp
insl
cltd
sahf
sbb
mov
dec
rcrb
sbb
jg
lret
mov
jge
cmc
std
add
ds
mov
shrl
dec
scas
or
data16
imul
cmp
pop
or
mov
mov
je
and
std
lcall
cmp
cmpsl
out
jle
xor
jl
push
lock
mov
pop
push
leave
mov
mov
cmp
ds
inc
inc
inc
mov
push
cmp
lcall
pop
sub
outsb
jle
mov
jmp
jge
jne
loope
jmp
jp
pushf
jne
in
pushf
scas
pusha
repnz
movsl
mov
and
fnsave
test
xchg
imul
cmp
cmpsb
mov
adc
test
aam
mov
sbb
mov
out
test
xor
or
sbb
mov
std
mov
pop
mov
ret
out
sub
jle
pop
mov
push
int
mov
xor
div
loop
shrb
out
mov
xor
mov
popf
ficomps
or
test
mov
inc
in
lods
cmp
std
jg
stc
out
into
mov
push
rclb
rcl
mov
pop
shlb
and
dec
stos
repz
fdivrp
cmpl
loopne
mov
dec
fistpl
shll
sbb
stos
sti
lods
cmp
adc
mov
push
mov
fidivrs
popa
xchg
jns
push
popa
push
mov
jle
pushf
ds
jnp
xchg
imul
jg
mov
inc
xchg
cmpsl
mov
enter
imul
imul
push
cmp
mov
in
shlb
popf
dec
xlat
dec
mov
dec
mov
shll
lcall
or
mov
cmp
or
and
out
mov
lods
cmp
mov
adc
arpl
ljmp
jmp
mov
shrb
push
fcomp
push
in
shll
shlb
loop
lods
in
es
data16
mov
mov
xor
fidivrs
decb
jge
cmp
and
test
mov
arpl
push
and
js
sub
mov
shrb
out
insb
aas
aad
cmp
and
mov
aam
mov
inc
fdivr
push
xor
movsl
sbb
bound
xchg
in
mov
and
insl
ret
sarb
mov
fcmovu
push
mov
mov
sub
ficomps
test
pop
sub
pop
adc
jg
xor
dec
cmp
and
es
imul
pushf
pop
loope
push
repz
cmp
or
scas
stc
rcr
or
aas
subl
hlt
xor
es
mov
mov
push
jae
jo
popa
cmpsl
rcrb
out
cmc
stos
sub
icebp
ljmp
sbb
and
push
lds
or
js
test
mov
push
mov
lret
std
in
xlat
mov
pop
or
jne
fcomps
mov
fsubp
loopne,pn
sub
test
xor
jns
cmp
mov
mov
add
arpl
sub
andl
and
cmpsb
popa
rorl
fimuls
xor
or
push
xchg
scas
mov
in
es
pop
adc
and
lods
test
mov
fildl
mov
cmc
dec
adc
shll
inc
cmp
mov
push
clc
sahf
add
mov
and
jp
or
stos
and
lret
xor
cmp
mov
lods
loopne
sub
mov
out
push
mov
clc
in
cmp
pop
xor
gs
hlt
mov
fsubp
push
add
jns
popa
push
mov
sbb
scas
inc
jg
lahf
bound
mov
sub
arpl
incb
pushf
fisttpll
repnz
rcl
mov
ds
jns
jle
popa
fbstp
sub
test
add
sbb
jae
pop
aas
inc
xor
jns
mov
enter
out
cmp
in
cmp
std
or
inc
adc
int
cmp
bound
mov
ret
pop
test
mov
and
pop
out
es
aas
or
dec
out
jg
popa
sbb
pop
leave
scas
test
frstor
mov
dec
push
xor
and
scas
mov
in
es
stc
dec
sahf
das
shlb
pop
fiadds
shrl
outsb
or
test
jae
lods
mov
add
fiaddl
adc
sbb
cmp
pop
sbb
loope
and
gs
mov
sbb
sahf
mov
pop
fisubs
js
in
lea
cmp
jmp
ficomps
shll
mov
cmpsl
or
mov
sub
stos
xor
mov
jge
inc
lods
cmpsl
sub
sbb
sahf
lods
imul
data16
pushf
movsl
movsl
fdiv
sub
mov
pusha
pop
cmp
jno
in
jne
xchg
mov
fdivrs
or
sbb
fisubrs
imull
lret
bound
or
sub
lods
mov
xlat
outsl
test
aas
hlt
sbb
pop
aas
push
or
or
lods
sbb
ljmp
fcomip
mov
cmp
mov
ret
ret
std
or
fstps
or
or
lods
movd
jl
sbb
sbb
push
mov
xlat
pop
out
mov
lahf
cmpl
leave
xor
fcomp
in
sti
jbe
push
push
cmp
loopne,pt
ret
jae
push
pop
adc
pop
pop
or
cld
sarl
xchg
mov
sahf
addl
aam
mov
cld
pop
mov
fsubr
pop
les
or
adc
lret
cmpsl
mov
xor
fidivrs
mov
push
fbstp
nop
lock
call
mov
pushf
jb
or
sar
call
dec
mov
sbbl
add
insl
mov
jmp
jg
lahf
outsb
lret
iret
sarb
cmpsl
test
lret
sbb
jecxz
mov
outsb
pushf
jno
cmp
jl
imul
xchg
rcrb
mov
pop
aas
test
dec
mov
pop
loop
sbb
sub
rcrl
cmp
xor
ret
jmp
pushf
push
and
xor
dec
dec
sub
shlb
fsubp
sbb
sub
dec
movsb
mov
pop
popa
cmc
nop
and
pop
sbb
xchg
pop
push
icebp
sub
cmp
mov
sbb
and
mov
and
xlat
jbe
sahf
mov
xor
xor
fsubs
and
pop
cmp
aas
fisubrs
lahf
xor
stos
cmp
xchg
scas
push
dec
add
mov
shl
rcrb
clc
push
test
sbb
sub
push
shr
dec
push
dec
dec
mov
setb
sub
sbb
mov
cmp
seto
xor
add
mov
inc
rcr
rcr
xor
pushf
push
call
bt
test
cmpb
pushl
movw
lea
jne
rcl
mov
cmc
jmp
aas
mov
adc
cli
or
test
inc
push
or
addb
push
cmpsb
cld
cmc
pop
sub
fcmovu
xchg
out
cltd
rolb
xchg
lock
jno
shl
push
jnp
inc
pop
pop
cli
rclb
xchg
jnp
pop
mov
imul
pop
sbb
dec
pop
nop
leave
adc
mov
cmp
fldenv
lahf
add
xor
in
rclb
mov
add
and
mov
mov
or
and
scas
jns
jl
and
stos
aam
cmp
cs
imul
in
ror
mov
filds
out
lock
xchg
cmp
sub
push
pop
fimuls
dec
jl
pushf
push
stos
add
pop
aad
les
cld
xor
jno
mov
sub
sahf
in
pop
mov
dec
pop
into
sbb
xlat
or
insw
add
std
mov
call
nop
push
jmp
xchg
cli
jae
xchg
mov
pusha
cltd
cli
cmp
clc
outsb
lahf
out
daa
loop
out
and
daa
loop
and
push
outsb
fisttps
jb
aam
push
in
shlb
inc
fstl
and
mov
dec
push
push
and
pop
lds
cmc
pusha
cltd
mov
adc
xchg
std
lret
sbb
call
add
call
jbe
enter
jl
loop
pusha
mov
in
das
jp
rol
push
shl
mov
pusha
call
in
bound
xchg
cli
cwtl
or
xor
push
cwtl
mov
in
mov
pop
popf
xlat
push
add
cmpsl
or
mov
cmp
lods
fdivr
push
jmp
dec
lret
lock
jns
push
std
lcall
addr16
leave
xor
test
loope
jg
xor
pop
loope
imul
dec
gs
sub
fimuls
cmp
popa
mov
push
xchg
cli
cmpsl
or
inc
mov
sub
mov
or
scas
dec
fs
push
sub
iret
fwait
movsb
filds
insl
mov
cld
arpl
inc
fucom
lret
push
cwtl
xchg
mov
push
divb
cmp
inc
pop
xor
lahf
mov
shlb
dec
inc
dec
sbb
cld
cltd
mov
push
lock
sbb
dec
or
data16
mov
mov
and
push
push
xchg
xchg
jae
or
ja
in
inc
jae
stc
sbb
sbb
cltd
test
cmpsb
mov
push
lea
jne
pushf
pusha
movb
push
stos
mov
lea
jmp
lea
ja
jmp
inc
jl
pop
xchg
cli
jmp
push
addr16
cmp
ds
outsb
xlat
mov
xchg
push
jb
fcompl
add
fwait
jbe
cld
cmp
jno
fiaddl
call
mov
or
out
or
outsl
loopne,pt
dec
jmp
outsb
imul
lcall
jb
stos
lods
stos
mov
hlt
jno
xor
movsl
movsl
dec
hlt
jno
xchg
xchg
insl
in
adc
xlat
push
push
popf
jb
or
xchg
mov
into
pop
rorl
js
pusha
lea
call
call
sbb
sbb
mov
push
pop
cwtl
cltd
mov
xchg
pop
negb
inc
jg
mov
ljmp
inc
int
sub
xchg
in
arpl
mov
mov
and
outsl
sub
adcl
pop
mov
test
push
push
aas
xchg
stos
in
push
movsb
or
adc
lcall
cmp
push
mov
pop
aam
cmp
pop
pop
jne
sti
mov
xchg
enter
shrl
sub
add
add
push
pop
imul
mov
mov
inc
pop
sbb
icebp
cmp
pop
arpl
mov
sti
xchg
add
inc
fstpl
push
push
cltd
push
ds
pop
stc
ja
mov
and
add
fmull
bound
adc
and
imul
scas
push
add
loop
sbb
call
test
ds
imul
jo
mov
mov
bound
sbb
fiaddl
mov
push
mov
arpl
je
mov
and
jbe
sbb
jge
sbb
or
cmpsl
movsb
sbb
adc
and
aam
dec
ljmp
mov
fisubrl
jnp
test
mov
mov
and
insb
insb
xchg
daa
mov
ds
add
test
test
pop
xor
sbb
sbb
dec
mov
inc
push
nop
icebp
push
cld
pop
xchg
xchg
sarb
xor
mov
inc
xchg
mov
in
ffreep
cli
push
or
movsl
jae
jmp
xchg
mov
sub
push
jp
push
adcb
jp
mov
das
or
lds
cmp
xlat
lock
mov
jle
mov
adc
jmp
mov
btc
push
or
movsbw
shl
mov
bswap
test
shl
push
cmp
setp
jmp
imul
dec
jne
mov
stc
pop
imul
bound
jne
popa
cmp
sub
mov
std
jae
jle
pop
nop
shrl
ror
rcll
incl
js
mov
push
xchg
dec
movl
push
jmp
dec
lock
pushf
ljmp
pusha
lahf
push
in
xor
nop
scas
scas
lea
fsub
arpl
lds
xchg
cli
dec
mov
dec
rcll
jl
out
push
jge
mov
outsb
push
cwtl
stc
add
add
or
mov
dec
fdivs
sub
mov
aas
cmp
dec
in
mov
sbb
in
out
mov
js
cltd
cli
repz
stos
cwtl
push
cmp
lock
jne
mov
dec
jmp
into
sbb
cmp
xchg
fwait
cli
ss
jge
fwait
stc
push
out
clc
add
mov
or
jle
add
cmp
movl
jmp
xor
sbb
add
stos
hlt
adc
and
or
bound
ss
call
cmc
cmp
stos
jp
int
add
leave
cwtl
nop
jl
shll
xor
jo
lods
aam
ficoml
imul
adc
fptan
shlb
dec
cwtl
pop
test
insl
mov
or
and
call
mov
cli
mov
dec
xchg
cwtl
shll
push
test
rcll
and
mov
jge
adc
aad
incl
sbb
xchg
fucomi
loop
dec
cld
mov
push
arpl
shlb
mov
ret
pop
adcb
pop
sbb
jo
mov
and
ds
pop
shrb
std
mov
arpl
mov
bound
or
fisttpl
movsb
arpl
and
xor
arpl
xchg
lock
mov
and
adc
aam
pop
adc
mov
mov
repnz
sbb
cli
dec
lahf
shr
push
test
cmpsl
or
mov
cmp
xor
mov
outsb
jnp
scas
enter
xlat
push
add
shll
imul
inc
rcl
fcmovu
js
xchg
or
lea
rcl
mov
imul
and
or
cli
cmc
mov
fwait
mov
cli
xchg
imul
sub
cmp
mov
dec
out
rolb
inc
mov
dec
mov
test
out
xor
mov
fadds
jb
stos
xor
lret
mov
loop
insl
or
xchg
adc
jge
cltd
leave
fs
push
or
insb
or
nop
shl
hlt
pop
jo
adc
mov
xor
xchg
mov
xor
cmp
aaa
lea
in
add
popa
insb
inc
jb
gs
sub
ffreep
sbb
incb
pusha
jns
xor
mov
jne
add
pop
xchg
ljmp
inc
test
inc
stc
iret
xor
imul
lret
cli
adc
es
cli
push
cmp
bts
mov
cmp
test
pushf
cmpb
pushf
pusha
lea
jne
bts
xor
sar
clc
and
sbb
mov
and
test
add
shl
or
mov
pusha
test
pushl
lea
je
pusha
push
pusha
lea
jmp
pushf
pushf
bt
test
push
call
mov
push
pushl
ret
aaa
lods
xchg
push
xchg
cli
sbb
cmp
scas
daa
pusha
test
ss
mov
lcall
in
and
cmp
mov
insl
push
out
adc
jbe
fwait
test
loopne
gs
add
insb
mov
lret
sub
int
inc
or
adc
cwtl
and
ret
je
hlt
lcall
xor
dec
dec
mov
pushf
iret
inc
add
aad
fnstenv
das
cs
sub
cwtl
push
push
fldcw
les
fsts
mov
divb
mov
jbe
push
sahf
ja
jno
stos
mov
or
pop
stos
stos
in
xchg
cmovo
ss
cmc
push
imull
or
inc
pusha
pushf
js
mov
cmp
pop
fwait
out
sbb
les
sub
jb
add
ja
add
jne
sbb
data16
out
sbb
push
mov
mov
cmp
sbb
out
cmp
aaa
aam
sahf
popf
cld
add
fsub
push
push
pushf
mov
in
cmp
pop
out
sbb
xchg
sub
mov
call
aas
mov
pop
xchg
cli
and
cmc
ss
or
push
mov
outsl
jbe
and
mov
in
jbe
jmp
test
mov
inc
shll
daa
pusha
and
cs
leave
adc
test
fwait
cmp
mov
pop
mov
xchg
mov
jno
sahf
je
clc
sub
xchg
or
roll
xor
outsl
jbe
sbb
xchg
mov
sub
pop
or
xor
loop
add
xchg
cli
jns
inc
xchg
in
aaa
js
lret
gs
cwtl
xor
in
jbe
dec
data16
jo
cmp
loop
xchg
push
pop
js
iret
out
je
pop
jecxz
lahf
lods
jne
add
testb
repnz
mov
add
sahf
mov
nop
test
mov
rcrl
and
cmpsb
int
adc
xchg
ret
das
dec
lods
gs
imul
bt
bt
call
inc
andb
cli
ficoms
mov
jnp
mov
cmp
xor
inc
cmp
or
lea
mov
push
dec
jmp
push
dec
and
inc
xor
insb
jae
loope
fidivs
sbb
pop
push
outsl
outsb
xchg
dec
cmp
push
ror
bts
mov
stc
cmpb
mov
movl
jmp
movl
pop
cmpsl
lock
jp
in
dec
sahf
fucomip
jmp
rcll
or
ljmp
stos
and
cmp
into
mov
inc
cltd
fstps
or
fldcw
addr16
sub
jmp
dec
jl
and
arpl
xchg
or
in
imul
and
mov
pop
mov
fcomps
pop
cmpsb
or
add
xchg
cmpsl
and
repz
shlb
lcall
sti
add
icebp
pop
pop
repnz
jle
movsb
movsl
mov
mov
or
test
lds
rorl
ficoml
adc
xchg
mov
jg
sbb
fsub
out
jb
push
dec
xchg
in
xchg
or
arpl
sbb
cmp
pop
cmpsb
or
fidivrl
dec
lahf
push
mov
call
push
test
xchg
cli
icebp
and
sub
testb
jns
rcrl
push
pop
leave
xor
and
pop
cltd
adc
jnp
test
add
jnp
shrb
cmc
es
xchg
push
in
pop
mov
out
sub
aas
aam
aas
cmp
push
enter
xchg
or
cmp
xor
xor
in
pop
xor
cwtl
cmp
scas
cli
pop
lret
popa
mov
lods
scas
ljmp
shrb
dec
jne
fcomp
or
in
sub
sub
rclb
cmp
inc
pop
mov
pop
mov
rolb
fldl
mov
cmp
ss
popa
cmp
or
pop
lock
push
adc
mov
fwait
xlat
rol
jmp
in
cmp
in
mov
pop
mov
sub
and
jbe
shrb
cmp
or
outsb
jge
shr
sub
push
inc
notb
xchg
dec
in
inc
and
cli
enter
cld
or
pop
mov
mov
fistpl
enter
xor
push
jge
lods
and
ret
pop
ljmp
fwait
pushf
adc
xor
stos
cmp
popl
cmc
pusha
inc
ss
cltd
fdivrl
loopne
sbb
xchg
adc
cmp
movsl
jnp
adc
add
mov
in
test
pop
repnz
outsl
cwtl
out
pop
movsb
add
xchg
mov
out
in
sub
icebp
fidivs
xchg
jnp
ds
pushf
cmp
pop
jnp
sbb
pop
mov
push
jae
fcoms
clc
and
cli
add
repz
into
out
mov
imul
or
mov
fwait
mov
dec
imul
xlat
test
into
xchg
hlt
adc
je
xchg
subl
les
push
rorb
and
pop
mov
pop
in
loop
in
mov
ljmp
push
push
lea
add
sub
in
add
sub
push
mov
repnz
jo
es
cmp
xlat
test
xchg
cli
jmp
cmp
xor
xor
addr16
imul
test
loope
jge
rol
pop
je
lcall
out
lea
scas
and
cmp
or
aam
fwait
add
ja
shlb
test
cmp
xchg
scas
inc
shll
stos
xchg
scas
inc
loopne
out
les
stos
sbb
mov
sbb
sbb
or
inc
pop
lock
jne
pushf
call
pushl
mov
pushl
pushl
ret
movb
lea
jae
xchg
mov
mov
dec
dec
inc
setne
jmp
daa
popf
andb
out
pop
sub
shrl
or
aas
hlt
arpl
cmp
push
cmc
xchg
jne
mov
cmp
out
popa
lcall
aaa
and
iret
clc
outsb
fidivrl
scas
cmp
push
inc
push
inc
fildl
fwait
leave
jge
repz
lods
adc
outsl
lahf
add
pop
movd
loop
roll
sbbl
in
sbbb
mov
repnz
pop
jbe
mov
outsl
adc
leave
repz
les
dec
add
cli
xchg
add
pop
or
adc
or
andb
roll
hlt
dec
push
lds
jg
sub
push
pop
scas
and
lock
push
cld
icebp
push
inc
test
cmp
in
push
pop
mov
out
push
and
cmp
sbb
pusha
movl
jmp
and
daa
xchg
cli
mov
scas
xlat
fdivs
inc
cmp
ss
cs
xchg
in
es
jns
mov
jae
movsb
hlt
cmp
insb
imul
inc
out
dec
test
and
jno
les
lahf
fistl
xchg
adc
xchg
and
lock
loopw
outsl
outsl
and
sub
enter
adc
sub
xchg
xchg
insb
ret
and
xor
cmp
jp
sub
fs
je
lea
jmp
shlb
sub
ss
cwtl
or
push
scas
mov
cwtl
xchg
xor
imul
hlt
xor
add
jmp
lcall
in
or
sbb
mov
js
mov
mov
call
cmc
adcl
ret
sti
cmp
xor
pop
sarb
xchg
push
pushf
xlat
add
fs
outsb
sahf
xchg
popf
jmp
and
into
aaa
jae
add
push
add
jb
add
xor
pop
outsb
lds
cmp
push
imul
lahf
pop
cmp
xchg
cli
rorb
jecxz
inc
xchg
and
or
nop
popa
or
pop
nop
mov
mov
push
mov
xchg
push
loope
in
addr16
mov
in
addr16
addr16
push
push
jb
clc
daa
xchg
in
ret
jg
bound
xor
lea
je
push
mov
push
lea
jmp
test
leave
sub
les
repnz
mov
es
pop
femms
aam
stos
xchg
aaa
and
jns
xor
sti
mov
mov
xlat
lret
xchg
mov
das
add
lret
xchg
aad
xchg
leave
mov
sar
cmpsl
imull
aad
imulb
call
das
sub
adcl
idiv
jl,pn
jl
lcall
push
xchg
xchg
jns
stc
pusha
ss
push
jge
cmc
inc
mov
and
mov
dec
lahf
push
xchg
jl
mov
lock
fdivr
push
pop
enter
pushf
int
notl
es
or
cli
imul
sahf
adc
mov
in
loope
push
ret
in
in
loop
cmpl
mov
aaa
xor
mov
rcrl
adc
and
mov
mov
movsl
xor
cltd
fs
mov
adc
lea
std
jmp
les
xor
cmc
cmc
cmp
jmp
inc
jl
inc
push
mov
or
pop
xchg
loopne
pop
or
pop
test
stc
cmpb
call
adc
in
adc
mov
cwtl
leave
cli
add
addr16
push
push
or
xchg
addr16
mov
leave
ja
flds
out
xchg
in
pop
and
inc
lods
mov
or
cs
lahf
xor
cmpsl
mov
call
inc
jl
adc
sbb
mov
inc
mov
pop
xchg
pop
xor
daa
cs
inc
mov
divb
jge
pushf
stos
mov
ret
cmp
sub
lret
movsl
aaa
cwtl
shl
jmp
mov
psubsb
filds
adc
mov
mov
mov
and
test
dec
aas
fcoml
fisttpl
jno
dec
inc
xorb
pop
jne
cli
and
movsb
movups
shll
in
leave
rorb
ja
in
push
or
xor
or
mov
and
scas
stc
pushf
jl
out
outsl
scas
inc
bsr
jmp
cmp
sub
nop
add
int3
or
clc
cli
xchg
rcrl
outsb
lds
lahf
sub
inc
nop
xlat
dec
xorl
aad
or
or
cmpsb
clc
outsl
arpl
cmp
xor
shll
orb
clc
outsb
out
pop
and
jnp
xchg
repz
lock
das
sub
cmp
into
ja
adc
int3
cmp
sub
ljmp
add
movsb
aad
outsl
bswap
and
loope
lods
outsl
jbe
push
sub
push
mov
insl
inc
push
mov
dec
sub
cwtl
roll
movsb
in
push
pop
inc
xchg
test
inc
cs
adc
sbb
arpl
fsub
push
xchg
add
stos
data16
imul
sbb
cli
mov
and
leave
and
sub
xchg
lds
mov
jns
sub
cmc
rcrb
sbb
or
rcrb
xor
inc
cwtl
jmp
or
xorb
fdivp
mov
mov
jl
sub
jmp
pop
pop
dec
ret
add
xor
out
cmpl
jbe
test
inc
imul
fsubr
fnstsw
scas
inc
enter
test
push
sbb
push
inc
mov
gs
dec
jl
sub
or
outsb
insl
test
sub
loop
sub
adc
std
dec
inc
inc
mov
jg
mov
cmp
mov
dec
test
repnz
stos
sbb
inc
inc
mov
xchg
lods
add
test
popa
in
mov
cwtl
inc
jl
cs
cwtl
inc
jl
mov
loopne
dec
outsl
in
sub
xchg
push
dec
cs
pusha
mov
xchg
adc
pop
cwtl
inc
jl
test
mov
inc
jl
addb
int
xchg
test
and
outsb
outsb
and
adc
inc
mov
in
es
cld
pop
insb
xchg
repnz
test
add
pusha
aam
cmc
mov
add
mov
inc
in
jecxz
inc
loop,pn
sub
push
xorb
inc
dec
push
nop
and
test
push
scas
mov
cli
sub
lcall
test
and
pop
mov
fs
mov
pop
mov
and
ret
pop
jle
aas
mov
jl
in
pop
adc
cli
sub
loop
pushf
int
daa
js
push
sbb
sti
adc
rorb
enter
cmpsb
pop
add
or
jnp
fdivrs
ret
jb
cltd
or
dec
test
ljmp
dec
int3
push
xchg
testl
lods
movsl
jo
es
sbb
dec
dec
xorl
movsl
cmpsl
xlat
fwait
mov
les
mov
jecxz
push
sbb
push
icebp
inc
aaa
cwtl
stc
dec
mov
xor
xchg
scas
mov
dec
insb
in
inc
sti
push
cmp
pusha
repnz
movb
call
jmp
mov
aad
xchg
cli
dec
insl
pop
and
lret
cmp
mov
imul
mov
xor
call
dec
mov
add
push
pop
in
in
xchg
sub
push
loope
lcall
jle
inc
mov
pusha
pop
test
cld
lcall
mov
dec
xchg
cwtl
mov
inc
push
xchg
and
dec
pop
lds
dec
mov
adc
dec
cs
cli
punpcklbw
jmp
lods
fsubp
jbe
mov
xchg
lock
outsl
ficoms
xor
test
sbb
push
mov
dec
insl
mov
cs
jp
mov
aam
dec
shrl
cmp
sbb
psrad
in
xchg
mov
mov
xchg
int
lods
lods
sti
leave
loop
xor
jecxz
lods
or
jecxz
test
flds
inc
mov
cs
jp
shl
xor
bound
xchg
cli
fnstcw
jnp
std
dec
loopne
or
mov
adc
shl
mov
iret
shl
mov
inc
mov
je
sub
cmpl
dec
add
mov
jp
loopne
cs
dec
stos
cli
mov
xchg
cli
pop
jle
or
ret
adc
jle
push
jns
lcall
sub
stos
aam
pop
loope
icebp
xchg
mov
mov
leave
inc
imul
add
adc
adc
jecxz
pop
mov
imul
adc
cmp
pop
shrb
xchg
shr
outsl
cmp
mov
xchg
push
xchg
fdivrp
jne
das
xchg
cli
loop
adc
into
aaa
mov
inc
cltd
pmulhuw
push
test
xchg
shr
adc
popa
mov
vpmacssdql
jns
rcl
jbe
add
jb
dec
mov
repnz
ficompl
jne
or
mov
pop
xchg
leave
add
scas
add
int
lahf
inc
scas
add
testb
and
stos
test
hlt
arpl
add
orl
das
xchg
cli
sub
cmp
push
std
inc
adcb
out
icebp
cmp
nop
shr
or
mov
cmp
adc
stos
jmp
out
insb
popa
fisubrl
les
stos
cld
dec
mov
imul
test
jp
mov
mul
jle
out
sub
cmpb
jb
xchg
or
mov
jg
outsb
stos
jg
scas
add
pop
xchg
repnz
jb
mov
jbe
les
inc
dec
pop
out
cmpsl
inc
orb
and
jg
xchg
cli
testb
xchg
lret
in
mov
push
leave
sarb
stos
jne
cmc
stos
stc
push
mov
cmpsl
jecxz
sub
stos
addb
js
jae
popa
cmpl
xchg
xlat
cmp
sarl
jne
ror
xor
pushl
xchg
pop
inc
es
sarl
nop
lea
psrld
aaa
fdivr
push
inc
cmpb
scas
aaa
jle
or
sub
movb
sub
jle
push
les
daa
jle
loope
adc
sbb
jbe
in
inc
mov
jo
push
test
push
xchg
push
stc
mov
jmp
call
in
add
aas
jo
ljmp
leave
fidivrl
cmp
ds
dec
pushf
add
mov
pop
xchg
fsubrs
mov
push
and
inc
sub
fwait
mov
add
es
adc
mov
push
jns
in
iret
add
shlb
xchg
lods
cmpsb
loop
and
rclb
fisttps
popa
dec
lds
mov
fsub
add
lock
fists
xchg
lret
jecxz
jle
hlt
xchg
lret
jecxz
pop
pusha
push
sahf
notl
fcoml
mov
sub
cs
pop
ret
decb
aaa
jl
pusha
lahf
imulb
and
xor
mov
push
pusha
pushf
pushl
ret
mov
cli
mov
outsl
mov
jb
aam
ss
jle
pusha
clc
addl
movsb
sbb
jp
int3
leave
add
shrb
push
aaa
xor
xor
or
push
push
jne
sbb
push
or
sub
mov
movsl
xchg
sub
cmc
dec
mov
push
dec
je
cld
xor
or
dec
mov
or
lods
xchg
les
hlt
push
xor
inc
dec
pushf
int
push
mov
pop
jae
xlat
outsl
xchg
push
and
cmc
imul
and
adc
imul
xchg
mov
cld
aas
xor
loopne
ret
lret
jno
aad
leave
data16
pop
add
imul
pop
xor
sub
xchg
mov
and
cli
dec
into
pop
out
lods
and
jp
push
lea
adc
jmp
imul
rolb
leave
inc
into
aad
dec
orb
adcl
stos
sbb
mov
out
xchg
cli
outsl
test
sub
pusha
mov
pop
rcrb
or
js
fucomp
iret
cmp
ljmp
mov
pop
pop
push
pop
xor
ss
or
pop
cmc
mov
sub
xchg
aam
pop
xchg
add
push
sbb
lds
addr16
movsb
adc
push
or
insb
mov
pop
mov
adc
es
mov
pushf
add
sbb
fstpl
add
push
cltd
lock
cs
jl
lret
jg
push
ret
insl
aam
or
pop
adc
inc
push
xor
cs
insb
add
lret
xor
dec
dec
mov
sbb
and
jl
jnp
xlat
lock
rorb
xorb
cmc
imul
fiaddl
cmp
pop
xchg
xor
data16
mov
dec
sbb
mov
call
jb
mov
and
in
or
lahf
fisttpl
fisttpl
test
push
add
arpl
inc
push
push
xchg
or
inc
cmpsb
xchg
push
cmp
xor
ret
in
jo
in
push
hlt
mov
push
push
aas
mov
fmull
push
adc
lret
sub
pop
dec
mov
mov
dec
push
sti
test
insb
add
push
out
jbe
mov
sti
mov
cmpsl
enter
ljmp
ljmp
mov
out
mov
push
popa
nop
int3
pop
loope
pop
adcl
aam
xchg
cli
cmp
pop
push
imul
lahf
lock
icebp
jne
pop
pop
inc
loope
in
jno
add
dec
lds
jp
sbb
xchg
mov
subb
ja
inc
xlat
inc
pop
pusha
pop
iret
push
icebp
out
cltd
sbb
nop
dec
sub
sti
sti
pop
test
sub
sub
arpl
lds
xchg
ror
out
sub
mov
dec
dec
xchg
or
xor
inc
cld
cmp
cmp
jnp
cmp
push
cmp
jnp
ds
sbb
cmp
pushf
ds
mov
jnp
ds
jnp
sbb
jnp
mov
fwait
cld
pushf
popf
mov
fidivs
scas
pushf
mov
lea
jne
jmp
or
ss
cli
mov
xor
mov
mov
xchg
and
mov
sub
test
je
or
rcrl
inc
cmp
add
addl
bound
lcall
insl
sbb
imul
cmp
cmpsl
xlat
outsb
shlb
jbe
xchg
mov
xlat
dec
xchg
or
hlt
push
dec
pop
insb
xchg
stos
roll
pop
push
popf
fsub
sbb
xor
cs
cs
mov
ss
cli
dec
imul
decl
ficoml
push
fsubl
mov
mov
cmp
test
stos
xchg
pop
push
xchg
and
dec
dec
ret
adc
jl
int3
or
jae
inc
test
xor
inc
jge
insl
mov
push
decl
or
les
mov
fisttpll
roll
outsl
bound
xor
inc
mov
ficoms
jb
xchg
jp
xchg
dec
ret
ret
push
mov
or
test
jbe
lcall
ss
cli
das
mov
in
aaa
mov
aas
loope
int3
sub
mov
dec
push
mov
push
mov
clc
outsb
inc
cmp
and
in
dec
inc
push
dec
adc
insb
popf
adc
jge
ja
call
test
sbbb
out
push
in
imul
dec
and
jge
stos
mov
sbb
movsb
mov
mov
stos
mov
jl
stos
or
pushf
add
jno
mov
stos
sbb
mov
pop
pop
jmp
std
cmp
scas
iret
inc
pop
stos
or
out
sbb
push
mov
and
dec
inc
sub
mov
dec
sbb
in
sbb
xchg
int
adc
xchg
aad
mov
std
in
mov
xor
imul
mov
iret
out
lds
insb
mov
cmp
mov
mov
xor
fwait
ljmp
or
sbb
ret
or
iret
and
add
push
jmp
xchg
cli
jae
adc
cmp
mov
outsl
cwtl
lcall
fsubp
js
ret
xchg
scas
int3
in
cwtl
mov
sub
lock
mov
add
xor
pop
xchg
adc
popa
rcrl
cli
and
out
mov
jmp
mov
sub
aad
notb
lock
das
and
jecxz
adc
sub
adc
sub
mov
arpl
cmp
dec
test
cmp
cmp
jl
xchg
cli
repz
cmpsb
cmpsl
enter
hlt
add
mov
stc
xor
jmp
xchg
or
daa
les
push
mov
out
in
imul
lods
mov
sbb
lods
pop
loope
jae
icebp
repnz
test
cmp
jl
jae
jge
repz
jae
xchg
enter
xchg
fsubrp
inc
pop
lret
cmpsl
sub
adc
mov
cmp
mov
cli
data16
loopne
xor
xchg
incb
mov
loopne
inc
dec
pop
repz
int3
xor
xchg
sub
push
jge
jp
jo
bound
movsl
push
jg
cli
and
sti
jno
cmp
lods
jg
jns
ds
mov
mov
outsb
xorl
leave
inc
xor
dec
add
dec
add
add
and
mov
and
out
gs
mov
push
insb
add
arpl
xchg
cli
mov
cmc
push
xchg
adc
dec
push
mov
sub
mov
mov
mov
pop
mov
cmc
jno
mov
lahf
lock
sub
enter
xor
imul
stc
sbb
sub
rolb
inc
mov
mov
sub
in
repz
mov
inc
insb
sub
test
sbb
cli
addr16
dec
xchg
divb
pusha
mov
push
lods
sti
and
ljmp
fwait
mov
adc
cmc
imul
mov
aaa
xor
mov
movl
sbb
pop
xor
ja
push
pop
mov
xor
addb
sub
pop
pop
sub
xor
mov
andl
mov
xchg
cmc
xor
cmp
dec
mov
mov
inc
mov
sti
imul
ficoms
movsb
ja
dec
mov
and
jl
lea
jecxz
push
dec
adc
or
adc
daa
and
adc
or
jnp
or
jbe
stos
mov
loop
and
sbb
into
nop
sarl
hlt
and
popf
out
shl
lret
shr
push
mov
hlt
das
das
mov
add
insb
orl
in
add
enter
clc
jle
xchg
aad
leave
aas
and
xchg
cli
lods
lods
idiv
pop
xchg
cli
sbb
mov
dec
dec
mov
loop
mov
xchg
ror
jae
push
or
js
aaa
std
ljmp
clc
subl
add
arpl
sti
adc
dec
sub
xorb
mov
pop
xlat
dec
jmp
mov
ret
mov
lods
aas
mov
lea
inc
inc
fidivrl
mov
xor
and
stos
dec
pop
scas
out
in
movsl
cmpl
jle
lock
test
cmpl
mov
jmp
out
sahf
divl
ficoms
sbb
dec
xor
je
movb
inc
insb
cmp
mov
jge
sub
stos
lret
les
rorl
outsl
inc
dec
dec
dec
sbb
dec
fstpt
mov
add
cwtl
dec
inc
arpl
vsubss
lds
xor
xlat
fmuls
lods
mov
testl
pop
xchg
push
mov
aad
xchg
cli
dec
mov
dec
fwait
mov
pushf
std
pop
push
jb
mov
pop
stos
and
inc
jno
stos
xor
test
add
dec
and
xchg
imul
cld
fsubrp
pop
arpl
or
ja
ljmp
lods
call
into
into
cmpl
lods
adc
outsb
outsl
cmpsb
fnsave
addps
jnp
sahf
lds
pop
xorb
movsb
mov
sub
aam
nop
mov
push
xor
aas
shlb
push
dec
das
shlb
aam
in
dec
mulb
inc
jg
mov
fwait
sub
movsb
in
mov
mov
push
aas
pusha
jg
lds
jmp
and
sub
mov
and
imulb
cmp
mov
sahf
fcomip
or
es
or
push
push
daa
cmpb
mov
add
sub
inc
sbb
imul
sbb
jl
movsb
roll
idiv
mov
out
aas
xchg
mov
lahf
cmp
push
lcall
jecxz
inc
pop
sub
push
dec
mov
repz
inc
les
push
stc
aas
sbb
incb
and
dec
test
push
nop
fchs
and
jle
push
push
ret
mov
div
xorb
dec
incl
rol
push
mov
xor
insb
test
mov
or
out
adc
in
loope
add
ficompl
rclb
sub
jb
loop
xchg
xor
mov
out
and
cld
jb
out
and
pop
push
mov
std
fs
or
daa
inc
jne
and
or
lock
les
push
sbb
cmp
cmp
cmc
sub
jmp
add
inc
gs
outsl
fs
gs
imul
add
cli
jbe
xor
dec
lods
add
clc
in
es
add
pop
rcrb
push
dec
in
add
add
add
jmp
je
mov
cld
imul
xor
lock
dec
lock
xorl
ds
jp
sti
add
mov
xchg
cli
cld
or
jecxz
and
dec
lock
mov
lock
jb
in
adc
sbb
out
adc
aam
iret
pop
add
add
push
vpshlb
push
jns
mov
mov
dec
scas
scas
arpl
push
pop
xchg
xor
mov
push
push
dec
pushf
xchg
lahf
jle
in
insb
ljmp
adc
mov
lret
sub
xchg
data16
inc
test
out
ja
push
xchg
cmpsl
fiadds
add
int
repz
scas
pushf
jmp
call
inc
xchg
cli
mov
and
pop
and
mov
fwait
pop
mov
rol
jg
inc
pop
pusha
lahf
adc
jno
mov
xlat
mov
call
ss
xor
pop
push
xchg
mov
inc
out
mov
bnd
adc
imul
fcmovu
fcoms
inc
ljmp
test
jb
or
jnp
jp
stos
lahf
mov
jp
sub
push
inc
mov
xor
dec
mov
jb
or
stos
arpl
or
shl
and
mov
cli
xor
pushf
or
ljmp
outsl
stos
cmp
jg
pop
ds
cmp
and
out
and
jb
cld
gs
cmp
pop
jbe
lods
jmp
and
cli
dec
mov
or
repz
std
inc
xchg
mov
xor
ret
int3
aad
mov
jp
fbstp
xchg
mov
push
rolb
inc
rolb
pop
pop
iret
dec
cli
xor
or
sbb
add
test
cltd
repnz
lock
push
les
js
mov
xor
stos
shl
out
es
mov
nop
dec
adc
lea
push
pushf
pushl
ret
jne
rolb
cli
inc
push
ret
mov
aas
mov
inc
jnp
movsl
add
pop
testl
and
sar
pop
sbb
repz
ror
cmp
pop
push
jecxz
adc
popf
add
pusha
pushf
sbb
pop
andb
mov
shrb
push
sub
rcr
repz
fs
repnz
gs
jmp
pop
iret
sbb
stos
out
aas
inc
fimuls
test
mov
and
movzbw
setl
lahf
movb
push
mov
not
cwtl
push
lahf
lea
pushf
jmp
not
mov
movb
movw
inc
bt
stc
jmp
mov
pusha
movb
pusha
lea
jmp
lea
jne
not
movzbw
lea
movb
mov
push
movsbl
movzbw
lahf
lea
je
push
pusha
call
lea
ja
pushf
movw
pusha
lea
jb
cmp
cmpb
push
pusha
jmp
xchg
int3
mov
xchg
cli
cmp
adc
outsb
cmpsl
rcl
sbb
pop
mov
cmp
in
popw
xor
insl
inc
subb
push
mov
lods
fdivs
ljmp
jnp
hlt
and
fucomi
mov
xchg
insb
mov
fcomp
mov
inc
loope
jnp
loope
daa
es
faddl
xor
jns,pn
ss
movhps
inc
xchg
cli
in
das
inc
jno
add
outsl
loopne
or
mov
xor
pushf
adc
sub
sbb
mov
jecxz
dec
push
jo
pop
push
loop
cmp
aas
mov
mov
cmp
push
mov
leave
lock
vrcpps
or
lahf
push
gs
cmp
adc
outsl
pushf
cmp
cwtl
mov
lea
lea
movzbw
mov
pusha
movsbw
mov
push
jmp
rorl
inc
xchg
cli
mov
and
or
jp
lea
in
sub
adc
jne
ss
inc
into
inc
mov
lods
mov
xor
push
cli
addr16
test
ret
inc
pop
cmp
or
test
mov
inc
sbb
aad
cmp
xor
ja
sbb
pop
lea
cltd
stos
mov
add
sbb
mov
in
cmp
mov
xor
jg
and
pop
pop
push
call
in
inc
push
test
add
jge
jns
sbb
adc
sti
ret
jle
cmpsb
push
mov
rcr
jl
lods
jle
sbb
mov
add
pusha
loope
mov
and
mov
and
xor
and
dec
and
pushl
inc
and
cmp
pop
inc
les
pushf
cld
and
cmp
jnp
inc
and
jno
pop
inc
and
loope
dec
and
add
add
pop
sbb
and
push
std
pop
jnp
fbstp
inc
sub
pusha
mov
sbb
in
test
inc
aaa
add
test
adcl
mov
jle
test
popf
cli
mov
jge
movsb
push
and
cld
out
daa
sbb
and
add
ret
into
in
in
or
movsl
dec
fwait
mov
es
inc
lock
xlat
lret
mov
cmp
cmp
xchg
movsl
push
and
inc
test
xlat
pop
xor
sahf
inc
mov
mov
iret
and
xor
data16
addr16
xchg
xor
fsubs
out
stos
pop
sub
notl
mov
mov
divl
sbb
movsb
aaa
xor
mov
mov
pop
push
mov
test
cltd
inc
fwait
lahf
call
dec
negb
fwait
sti
lahf
in
scas
shlw
xlat
ja
ds
cmp
stc
sbb
rcrb
push
push
mov
and
and
cmp
jl
leave
xlat
xor
mov
mov
jbe
mov
leave
scas
sbb
leave
test
mov
pusha
fwait
ja
add
and
cmp
ds
sti
mov
mov
scas
cmp
fcomp
mov
aaa
scas
mov
fdivrs
enter
mov
fcmovnbe
clc
ja
cmp
xchg
sub
js
inc
ja
mov
jnp
sbb
fdivrs
mov
shl
mov
mov
aaa
mov
fadd
xchg
test
loopne
mov
cwtl
pop
cmp
sarb
jmp
cmpsl
and
fdiv
js
mov
test
test
lret
and
mov
mov
xlat
or
in
rcl
cmp
negl
cmp
test
mov
cltd
std
lods
cmp
mov
inc
iret
pusha
cmpsl
test
cmp
scas
divl
cmp
mov
daa
sub
xchg
mov
cmpsb
mov
test
cmpsl
sub
dec
pop
mov
pop
sbb
mov
mov
rorl
xchg
mov
or
mov
mov
push
mov
mov
popf
ljmp
cmc
mov
jmp
mov
orb
and
add
mov
mov
cmpsb
sbb
mov
fnstcw
outsl
mov
mov
in
ret
mov
or
xor
jns
cmc
dec
push
fldcw
mov
mov
fstpt
xchg
test
push
pop
mov
cmp
push
sbb
cmpsb
popa
iret
js
stos
jo
inc
cmp
in
mov
pop
xchg
pop
cmp
cmp
mov
xchg
fsubrl
cmp
inc
call
shll
jge
dec
mov
jmp
dec
jge
int
cmpsb
xlat
mov
pop
rcrl
mov
xor
mov
outsl
bound
cmp
cli
jp
mov
dec
mov
xchg
push
fcos
cmp
jg
xor
repnz
lcall
mov
cmp
pushl
push
lcall
out
mov
cmp
inc
arpl
fsubl
aam
lods
repnz
cmpsb
in
inc
lret
sub
mov
roll
cld
enter
sarb
dec
shl
lods
lock
add
fsubl
repz
pop
xchg
mov
mov
xchg
add
cmpsb
mov
and
or
lret
cwtl
enter
and
scas
xchg
xchg
mov
xor
lods
adc
shlb
mov
loopne
sbb
jns
cltd
push
stos
mov
rcl
sub
test
negl
cmpsb
test
mov
stc
movsl
add
dec
rcrb
mov
sarb
add
repnz
fdivl
sbb
mov
sub
es
rol
stc
add
rclb
sti
loop
in
xlat
lahf
mov
sub
jns
cwtl
popa
jmp
xchg
jbe
jns
cwtl
in
sti
adc
xchg
mov
sbb
cwtl
js
mov
jns
jbe
int3
roll
xchg
cwtl
xchg
call
jns
cli
adc
mov
xchg
repz
or
mov
cmp
pop
pop
cmp
sbb
jns
in
cmp
test
and
pop
loopne
into
jns
ja
pop
cmp
loope,pt
mov
mov
leave
aaa
mov
stc
pop
jl
lcall
adc
push
mov
cmc
lds
mov
movl
fnstenv
pop
mov
and
nop
les
cltd
mov
cli
pop
adc
les
sub
call
and
loopne
fbld
test
shll
sbb
sbb
mov
loope
dec
mov
imul
xor
cwtl
movsb
fisubrl
lods
ja
cwtl
jp
or
cwtl
shr
loopne
cmp
clc
jnp
mov
in
mov
popl
mov
mov
ds
pushf
pop
pop
pop
scas
repnz
mov
and
mov
fidivrl
jbe
cmp
xlat
cmp
fdecstp
mov
mov
mov
mov
jmp
stos
sub
mov
xlat
or
sbb
mov
mov
ljmp
dec
scas
sti
cltd
cmpsb
cmpsb
dec
sti
xor
fsubrl
dec
fidivrs
jp
fadd
cmpsb
dec
cld
and
mov
movsl
sub
cmp
pop
stos
jns
dec
cli
mov
fnstsw
test
pop
jge
cld
or
rcrl
mov
mov
push
cmp
aaa
imul
cmp
cmp
ret
jns
jns
jns
mov
and
fnstcw
lods
inc
mov
mov
mov
int3
mov
clc
popa
mov
pop
sti
pusha
popa
lcall
cmc
or
mov
inc
stos
loope
sub
fcomps
fisttps
push
cmpsl
std
mov
sbb
mov
addb
dec
add
mov
ljmp
stc
in
mov
or
cmp
mov
iret
movsb
iret
iret
fs
ret
dec
in
jecxz
xor
fstpt
pop
popf
and
es
sub
clc
and
lret
and
jl
leave
clc
mov
cmp
jnp
imul
fcmovnu
mov
clc
shll
lock
mov
scas
cmpsb
and
outsb
in
add
cmp
add
gs
mov
or
sti
jmp
mov
inc
inc
jp
or
test
jle
mov
sub
add
dec
lock
std
cwtl
insb
cwtl
jle
shl
xor
mov
mov
shll
repz
cmp
pop
ss
fisubs
push
sbbl
inc
jge
out
mov
cmp
xlat
je
movsb
push
sbb
cmp
jp
cmpsb
int
mov
sub
cmc
movsl
in
movsl
push
loopne
mov
test
mov
mov
ficomps
jecxz
cmp
shlb
js
sarb
sbb
aaa
add
loopne
leave
xorl
jp
xlat
sti
leave
pusha
fcomip
mov
add
fstpt
xor
cmp
add
dec
daa
mov
mov
cmpsb
or
xor
shlb
ds
jl
mov
dec
mov
sbb
mov
cmp
cmp
sub
movsl
cmp
mov
and
and
stos
mov
pop
sbb
and
cmp
scas
jl
sub
fldenv
loopne
cmp
pop
mov
enter
mov
mov
test
jne
sbb
lods
in
xor
cmp
mov
or
shll
stos
outsb
cmp
hlt
mov
adc
decl
sahf
out
imul
ds
pop
leave
movsl
cmp
sbb
jecxz
stos
outsl
or
xchg
add
andb
sub
sti
mov
cwtl
mov
ss
cmp
rol
lods
fistpll
aaa
dec
outsl
stos
add
mov
and
push
sub
fistpll
mov
decb
pop
cld
or
and
jmp
inc
cmp
and
fnstsw
clc
inc
xor
mov
into
cmp
inc
add
xor
adc
mov
in
and
pop
aaa
in
clc
dec
sub
jb,pt
loopne
mov
ds
mov
cmp
add
das
and
movsl
iret
and
mov
imul
frstor
mov
sbb
mov
and
popf
inc
scas
add
daa
rclb
push
je
jge
add
inc
and
sbb
jb
add
fcmovnb
test
test
and
mov
lods
faddl
test
sub
mov
xor
and
cmpsl
sub
addr16
add
and
jle
cmpsl
and
loopne
mov
dec
mov
mov
cmp
enter
fadd
ljmp
and
jmp
mov
js
xor
enter
pushf
loopne
lcall
mov
arpl
sub
sbb
bound
and
scas
mov
mov
xor
imul
push
cmp
mov
cmp
mov
test
in
fsin
fildl
cmpb
pusha
mov
test
mov
add
out
lret
add
lods
pop
cmp
ret
gs
scas
push
fdivr
rcrl
and
loope
mov
cmpsl
mov
adc
test
pop
test
insl
movsl
xchg
and
inc
out
push
test
pushf
movsb
aaa
push
es
addb
shr
std
loope
and
mov
pusha
sahf
cmp
lret
cld
dec
cmpsl
int3
mov
xchg
jle
mov
sti
mov
sub
inc
daa
sbb
cmp
mov
sub
mov
test
xor
into
push
mov
mov
mov
loope
leave
pop
ret
test
pusha
sarl
out
outsb
movsl
xchg
inc
popa
cmp
mov
je
bound
enter
inc
cmp
in
sub
mov
popa
cmp
dec
jno
pop
mov
fsubrs
out
xor
ret
pushf
dec
pop
sbbb
mov
xchg
xlat
jno
sbb
lods
mov
insb
mov
cmp
cmpsl
repz
pop
push
dec
and
adc
popa
stos
lock
lds
add
std
ficomps
push
cld
xor
cs
add
out
lret
and
sbb
add
mov
cmp
fisubl
and
inc
mov
add
pop
pop
popa
jecxz
fnstcw
cmp
mov
test
lods
xchg
movsl
cmp
or
pop
inc
fcmovnu
fisubrs
cmpb
mov
jb
mov
fcmovnb
inc
mov
xor
jge
mov
ss
xor
mov
xor
fstpl
imul
mov
subb
outsb
mov
inc
loopne
mov
sbb
pop
test
aaa
xchg
push
js
inc
pop
mov
mov
lret
mov
or
sbb
enter
jns
and
cli
sub
cmp
pop
jge
int3
loope
sub
jp
xor
shll
ja
out
inc
and
adc
mov
add
add
mov
cmp
imulb
aad
movsb
mov
sahf
jl
stos
notb
in
stos
jp
cmp
sub
sub
inc
gs
mov
repz
stc
addl
movsb
and
mov
loopne
sbb
popa
lods
cmpsl
lods
jno
hlt
das
inc
lods
mov
and
aad
cmp
and
fdiv
cmp
add
push
mov
mov
push
pop
sbb
push
pushf
sbb
cmp
cld
jmp
stos
cmp
stos
dec
lods
movsb
popa
cld
stc
test
mov
shlb
dec
cmc
cmc
pop
xlat
mov
pop
popa
mov
fimull
addl
bound
js
pop
daa
xchg
cmp
xlat
add
out
and
xor
and
clc
inc
dec
test
and
pop
cmp
mov
adc
push
push
mov
cmpsb
and
inc
out
mov
sbb
xlat
cmp
ffree
pop
dec
pusha
mov
cmp
and
mov
mov
cmp
xchg
push
arpl
adc
neg
mov
and
out
fldt
mov
cmp
popf
and
pusha
stos
mov
cmp
aas
and
mov
cmp
inc
sbb
mov
enter
fbld
out
shlb
inc
scas
pop
cmc
pop
cmp
mov
mov
sub
and
pop
cmpsl
and
data16
popa
mov
outsb
sub
inc
mov
js
mov
stos
in
fsubs
mov
gs
cmp
testb
and
mov
push
movsb
push
test
out
mov
cmp
xchg
jecxz
sub
enter
pop
cli
sub
mov
dec
add
cli
jns
mov
sti
sub
mov
cmp
movsb
cmp
cmpsl
sub
mov
daa
ror
iret
and
in
test
aas
add
ror
es
cmpsl
lods
loope
loop
mov
cmp
andb
inc
and
std
nop
cmp
dec
ljmp
jle
pop
mov
addb
mov
cli
ret
sbb
pop
test
jmp
jecxz
mov
fsubrl
out
mov
mov
rolb
int
mov
fwait
test
out
push
daa
aas
mov
dec
xlat
arpl
imul
cli
stos
daa
lods
stos
aas
movsb
mov
sub
scas
jmp
mov
sub
iret
repz
test
cli
xorl
sti
test
push
cmpsb
jmp
aam
iret
aam
mov
ljmp
shll
cmp
add
cli
inc
cmp
pop
or
iret
js
add
rclb
jb
in
push
mov
lret
lcall
xor
add
stos
movsb
jne
mov
sbb
mov
inc
push
mov
cmp
cmc
jecxz
std
ror
rcrl
mov
cs
mov
stc
jo
stc
lds
jp
push
test
clc
insl
test
divl
sub
pop
push
push
jmp
loope
cmp
xor
stc
fistpll
inc
mov
inc
fsubr
fdivs
dec
jg
repz
xor
ret
cs
mov
mov
sbb
mov
jae
and
scas
ret
mov
mov
in
movsb
sub
mov
add
icebp
jecxz
push
movsl
fldpi
addr16
test
xor
out
push
shll
shl
mov
enter
shr
inc
push
jns
es
inc
call
loope
arpl
out
mov
push
mov
mov
jmp
cmp
call
xor
mov
mov
mov
rorl
pop
push
xlat
dec
jnp
pop
lret
jg
fldln2
ss
dec
nop
mov
and
xchg
out
repnz
pop
shlb
mov
stos
daa
cmp
adc
xor
jmp
inc
rcll
or
cmpsl
mov
fsub
fsubs
daa
xor
cli
enter
dec
mov
jbe
imull
cmp
push
and
jle
mov
js
clc
cmp
sbb
jge
loope
cs
inc
cmp
mov
adc
fcomps
mov
inc
subl
cli
fisttps
rorb
jl
fcomip
xor
or
out
xchg
adc
push
pop
or
xchg
or
mov
mov
xor
add
movsb
jno
ret
jecxz
xchg
mov
andl
sti
in
dec
mov
nop
pop
push
ja
insl
inc
mov
cltd
pop
xorl
mov
sbb
icebp
sbb
push
loopne
cmpsb
jl
jb
or
jp
loopne
testb
mov
or
out
inc
pop
xchg
cli
mov
dec
in
cs
nop
test
mov
push
add
xor
ja
lahf
sar
jne
adc
rol
or
in
inc
inc
sub
xor
clc
or
xor
sti
dec
mov
sub
dec
test
loop
out
push
out
push
push
testb
jae
int3
jne
xor
pop
mov
cmp
insl
pop
test
jne
adc
and
inc
cmp
cmpsb
cmc
push
mov
sahf
movsl
in
addr16
bound
sar
popl
fs
jne
bswap
movb
call
add
add
and
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
pop
mov
add
add
add
add
addb
add
xchg
and
add
add
adc
add
cmp
add
push
ss
add
add
sub
xor
aad
sbb
pop
and
add
add
add
and
add
xor
add
add
add
cli
mov
or
xchg
mov
fsubr
pop
dec
mov
movsl
mov
sub
push
mov
outsl
mov
imulb
loop
sbb
inc
pop
mov
jb
dec
ret
adc
loope
jbe
je
cmpsb
mov
cmp
call
pop
fs
adc
call
lret
xchg
dec
push
into
and
jp
enter
ffree
pop
xchg
cli
or
popf
into
pop
sti
fs
addr16
call
das
jmp
call
fwait
adc
jbe
lock
aam
popa
lea
jne
add
sbb
push
cmpb
fiaddl
nop
pop
mov
xor
rclb
cmc
jmp
iret
adc
lahf
div
lods
mov
insb
lcall
or
jae
xchg
ljmp
xor
nop
out
and
fsubs
jbe
xchg
xchg
ret
sbb
pop
fisubrs
rclb
aas
int
mov
cwtl
mov
push
push
cmp
movsl
jnp
adc
in
sub
xor
inc
lcall
mov
add
test
push
jl
xor
jmp
arpl
inc
mov
mov
movb
jmp
inc
mov
sbb
xchg
loopne
jb
aam
mov
inc
orl
sbb
in
sbb
adc
inc
push
inc
repnz
sbb
ljmp
loope
adc
lret
je
sbb
les
or
adc
jno
call
cmp
or
xorb
pop
mov
into
pop
cmp
jmp
into
pop
cmp
push
inc
cmp
sbb
shl
cs
cmc
js
rclb
jmp
cmp
lea
jg
lea
lahf
bswap
lea
movsbw
push
push
mov
mov
call
add
dec
insl
popa
addr16
imul
je
outsl
jns
adc
pop
xchg
cli
mov
outsl
cwtl
mov
lret
cmp
out
dec
mov
push
aas
sbb
jp
lret
ljmp
jecxz
xchg
cmp
dec
lods
jle
out
mov
lret
std
mov
mov
jp
jmp
xchg
js
sub
lock
xor
and
fstl
cmpl
mov
pop
mov
cmp
sub
dec
mov
xor
data16
inc
and
adc
pushf
jmp
lea
jne
pusha
mov
mov
push
mov
pushf
lea
call
jmp
icebp
sub
lcall
pop
mov
addr16
push
jl
mov
jecxz
rep
pop
add
cmp
and
mov
push
lods
cmp
sbb
push
inc
mov
int
fwait
add
sbb
int
add
repz
mov
dec
pop
test
cmp
in
in
jmp
cmp
push
pushf
lea
je
cmc
push
movb
cmp
pushl
lea
je
pusha
lea
jmp
lea
call
cmc
bt
stc
cmp
jmp
stc
outsl
push
pop
xchg
cli
cmc
ss
cwtl
shll
movsb
mov
aaa
pop
jns
mov
adc
sahf
sub
ja
mov
ljmp
pop
adc
out
pop
adc
in
sti
into
inc
inc
jnp
or
mov
mov
icebp
jle
inc
imul
popa
xchg
sti
and
lcall
adc
or
sub
mov
adc
aas
jle
aas
and
inc
cld
jmp
mov
pushl
pushl
ret
push
xchg
jbe
xchg
cli
aas
mov
int
fwait
adc
jbe
xor
pop
loopne
sbb
subl
out
sub
dec
jl
je
xchg
dec
mov
pop
lret
mov
scas
movsl
loope
lods
sbb
sbb
in
outsl
add
inc
dec
push
inc
push
xchg
les
add
sub
ja
fst
or
or
jecxz
or
lret
pushf
inc
pop
sub
jle
fs
jae
clc
cmp
push
bt
cmp
mov
lea
jae
cmp
jmp
test
lea
jg
cmp
pushf
lea
jb
cmp
cmp
test
cmp
jmp
pop
lea
xchg
cli
cli
sub
pop
or
fsubp
lea
adc
clc
xchg
mov
ret
flds
mov
ja
pop
sbbl
loopne
jb
mov
ljmp
repz
inc
mov
pop
mov
insb
mov
push
jne
mov
pushf
rorl
lahf
mov
add
stc
call
call
cli
mov
das
mov
scas
out
cmp
mov
adc
mov
adc
mov
inc
lret
fdivr
jae
out
lds
daa
sbb
mov
cmovae
cmp
sbb
mov
push
inc
jl
imul
das
pusha
imul
jmp
and
xchg
xchg
rcrl
sahf
mov
xor
lds
dec
mov
mov
pop
dec
push
pusha
orl
sub
cmp
mov
pop
in
jge
insl
mov
xchg
fstpl
adc
jmp
popf
ss
push
out
pop
push
int
push
adc
iret
aaa
cmpsb
les
and
lret
ret
cmpsb
xchg
loop
pop
dec
daa
cmpsb
jle
mov
jb
loopne
mov
adc
and
fdivs
bound
movl
pushf
push
pushf
mov
push
push
pushl
push
pushl
ret
aam
das
pusha
xchg
cli
mov
dec
stos
sti
cld
push
testl
sbb
lock
and
xchg
faddl
jbe
or
mov
shr
fcoms
loop
in
mov
cltd
xchg
dec
rorb
push
repz
sub
sbb
pop
pop
push
jl
cmp
sbb
push
dec
pop
push
std
fs
xchg
xchg
mov
jae
rcrl
push
jo
inc
mov
push
ja
jmp
push
xchg
mov
sub
and
out
inc
call
push
inc
subl
and
xor
dec
mov
xchg
and
popf
dec
xchg
aad
inc
sub
or
lcall
xchg
outsb
hlt
xor
sub
pop
hlt
stc
add
adc
jle
lds
sbbb
sti
cmp
call
aaa
insw
add
xchg
cli
ljmp
pop
mov
sbb
dec
push
sarb
sub
repz
mov
and
adc
test
xor
in
in
or
jecxz
inc
push
mov
inc
mov
lcall
xlat
adc
mov
ret
sub
popa
aad
push
push
push
mov
adcb
cli
jo
adcb
adc
xor
or
loopne
cs
cmpsl
repnz
mov
mov
pusha
xchg
cli
cli
adc
push
jnp
adc
add
pop
add
arpl
adc
repnz
mov
add
mov
out
dec
loopne
aas
jp
mov
std
or
and
aaa
lods
fidivrs
mov
stc
mov
outsl
loopne
out
pop
mov
sub
test
push
cmp
gs
popa
sbb
jmp
mov
mov
push
pusha
lea
jmp
pushf
lea
je
test
pushf
cmp
pusha
or
pushf
movw
push
lea
jne
je
push
aam
and
sub
stc
sets
mov
sar
mov
ror
shld
shr
lea
test
mov
bt
pushf
call
pushf
mov
jmp
sbb
in
daa
inc
mov
cmp
out
dec
mov
ret
pop
lock
aam
cmp
jb
sahf
push
stos
out
jae
cwtl
sbb
jl
jo
mov
add
loopne
push
shrb
popa
sub
outsb
leave
push
sub
mov
sub
inc
push
test
dec
mov
shll
das
das
mov
xor
lret
mov
or
adc
or
or
dec
fisubrs
ss
enter
xchg
cli
jo
xchg
fwait
in
and
mov
inc
movsl
or
cmpsb
cmp
sti
adc
push
dec
push
inc
mov
cmpsb
add
out
leave
std
icebp
mov
inc
jae
adc
lcall
jne
dec
in
arpl
xchg
xchg
or
mov
adc
std
cli
jo
pop
dec
sub
out
aaa
xor
bound
data16
nop
sbb
stos
push
xorb
pop
cmpsb
loope
cs
cmp
and
lds
int3
xor
mov
inc
popf
aam
loop
mov
fimull
pop
adc
xorb
add
bt
cmp
jmp
pusha
pushf
andl
sti
and
out
xor
add
cs
mov
mov
mov
leave
xor
lea
or
insb
pop
lret
shr
sbb
jno
sahf
adcl
pop
rcrl
cltd
ds
cmpsl
mov
or
mov
xor
enter
shr
daa
pop
iret
xchg
les
push
push
int
into
xchg
les
sbbl
ret
cmp
cmc
add
int3
fcomi
xchg
testb
lock
fs
cli
mov
and
jb
in
xchg
out
adc
sbb
repnz
repz
stos
add
imul
inc
and
cltd
test
and
cli
jo
add
insl
cmpsb
pushf
adc
ja
add
add
push
es
xorb
icebp
sub
cmpsb
pusha
xchg
lock
inc
pop
shl
gs
cwtl
xlat
dec
movsl
in
bound
ret
shlb
leave
leave
aas
and
xchg
cli
fwait
pushf
in
cs
mov
cli
push
int3
fisttpll
pop
xor
inc
and
nop
test
xchg
push
in
dec
cld
mov
push
out
lahf
dec
xchg
das
cmc
mov
aad
imul
hlt
fnstcw
mov
mov
cmp
pop
dec
jb
xorb
push
out
push
dec
and
mov
out
push
dec
xchg
jno
xchg
ljmp
xorl
jae
cmp
and
mov
cmovnp
gs
cli
mov
pop
fildll
push
ret
xor
adc
loope
sti
ds
popa
ret
add
cltd
aam
push
iret
enter
jp
js
daa
push
sub
cmpsb
pushf
adc
dec
jge
xor
cmp
or
frstor
movsl
push
lock
adc
test
test
and
adc
jmp
cmp
dec
mov
imul
ret
pop
test
enter
push
cltd
cli
and
ja
imulb
lret
lds
mov
cmp
ja,pt
shrl
inc
pop
add
jo
in
fstl
jnp
xchg
pop
rol
std
loop
and
cmp
sbb
dec
xorl
scas
dec
movsl
loope
ss
sub
cld
icebp
push
jp
test
add
adc
mov
clc
cltd
pop
neg
jae
icebp
mov
pop
dec
loop
xor
pop
cmp
adc
adc
add
pop
aam
rcrl
aas
popf
cmpsb
mov
pop
mov
ljmp
inc
mov
dec
int
cmp
mov
mov
sbbl
cmp
mov
or
gs
fidivrl
push
mov
stc
out
imul
imul
imul
jge
mov
mov
mov
mov
in
scas
jp
inc
mov
scas
jp
or
adc
sub
movsb
sbb
add
jecxz
out
test
stos
mov
cli
scas
movsb
adc
jmp
out
testl
dec
push
inc
jns
cmpsb
rcrb
stos
pop
push
pop
cmpsb
sbb
lret
addr16
ljmp
pop
dec
inc
or
cmpsb
out
mov
sti
je
or
fdivl
pop
rcl
xchg
mov
jmp
push
add
test
push
inc
nop
leave
mov
sbb
add
fcomps
in
push
mov
rcr
iret
inc
inc
and
imul
dec
call
loope
out
mov
jp
mov
add
xchg
sar
push
or
sub
je
dec
xor
add
inc
xorb
cld
lock
aaa
or
scas
pop
sbb
rorl
mov
ret
popa
push
scas
test
lods
mov
shll
dec
in
daa
pusha
push
lcall
mov
or
stos
sbb
mov
mov
jb
mov
inc
mov
jnp
lea
jno
and
push
daa
xor
fsub
scas
jge
pop
int3
and
fcoms
mov
daa
xor
and
cmp
or
mov
test
sti
insb
daa
add
aas
or
mov
xor
cmp
xor
out
sub
shr
pop
movsb
inc
ss
mov
and
jbe
div
mulb
testb
sub
and
mov
scas
mov
inc
test
movsb
sti
inc
test
push
cmpsb
roll
inc
pushf
rol
clc
clc
stc
sub
pushf
call
dec
xchg
cli
hlt
sbb
shl
xor
movaps
fildll
cmpb
stc
imul
pushl
pop
lea
nop
arpl
roll
dec
mov
clc
insl
adc
aas
mov
lods
out
sub
insl
mov
inc
addl
insb
stos
ficoml
pusha
addr16
aad
jae
mov
push
or
xchg
stos
inc
xchg
sarl
mov
pop
mov
jge
pop
mov
bound
icebp
inc
sbb
fstpt
movsl
outsl
mov
push
inc
cwtl
daa
out
ret
aas
fsts
popa
stc
loop
mov
pusha
aam
out
dec
cltd
lret
aaa
jb
push
ja
jb
or
or
mov
adc
outsb
xlat
mov
xchg
add
test
sbb
jl
dec
mov
jl
dec
sub
or
push
es
adc
inc
jle
mov
cli
movb
jno
add
pop
js
or
or
pop
es
int
insb
aad
cwtl
mov
pop
jae
cmp
shl
mov
int
insb
js
icebp
les
out
cmp
add
xchg
mov
jecxz
leave
push
sub
imul
pusha
aad
aam
adc
fs
loope
addr16
popf
hlt
push
lret
imul
or
jmp
sub
lcall
dec
mov
mov
lahf
add
mov
je
cwtl
jno
adc
inc
mov
imul
and
in
jecxz
pop
dec
sbbb
push
or
jl
dec
mov
movsl
cltd
ss
xchg
into
clc
and
sub
les
stos
adc
lds
inc
fimuls
cwtl
enter
sbb
mov
mov
and
sahf
out
sbb
fldl
mov
cmp
and
jo
inc
mov
sub
or
jb
pusha
cmp
stc
cmp
pushf
lea
jb
jmp
xchg
or
push
cli
js
cmp
lock
fistl
scas
jno
and
adc
loope
push
hlt
mov
sahf
movsl
int3
pop
sbb
cwtl
mov
stos
out
jg
shl
dec
test
movsl
sbb
or
lret
xchg
dec
cld
fidivrs
imul
jno
mov
insb
dec
jno
push
pop
aad
insb
dec
jno
loop
stc
cmp
ja
fucomp
sbb
xchg
or
xor
out
adc
pushfw
popw
rol
pusha
mov
cmp
neg
pusha
pushf
pushf
mov
inc
pushf
pushf
call
daa
bound
xchg
cli
mov
and
insb
frstor
cwtl
adc
pop
jbe
sbb
out
cmc
rcrb
les
push
mov
gs
daa
xchg
cmc
int3
sbb
mov
fistpl
sti
clc
xor
jmp
out
movl
bound
or
and
sbb
ljmp
mov
sbb
mov
xchg
hlt
arpl
call
jecxz
adc
call
push
dec
dec
dec
cs
push
push
add
imul
sbb
add
bound
fcomip
movsl
in
andb
cmp
test
stc
int3
add
fadds
or
and
pop
push
test
shlb
cs
mov
shlb
lea
xchg
cwtl
xchg
rcrb
leave
and
aas
push
or
mov
xor
movsl
sbb
lret
arpl
sbb
sub
sub
jnp
lret
sbb
testb
sbb
push
pop
cmc
negb
test
repz
imul
mov
ds
xlat
scas
adc
sarb
adc
mov
dec
adc
mov
fwait
sbb
inc
xlat
dec
adc
fadds
outsl
shrl
or
adc
and
and
inc
pop
daa
lods
shlb
js
cmpsl
fiadds
xlat
rclb
inc
fcoms
mov
sbb
inc
sahf
or
addr16
xor
es
ret
stc
sti
cmc
xor
sbb
fcomip
sub
cltd
sbb
sahf
out
pop
jle
icebp
add
lret
lcall
call
adc
mov
movsb
lods
arpl
fsts
mov
leave
insb
adc
nop
or
movsl
pop
movsl
in
xor
shlb
xor
mov
xchg
xchg
scas
cmc
leave
loope
xchg
xor
scas
lds
cwtl
cmp
clc
iret
xchg
cmp
cmp
inc
mov
mov
xor
mov
test
xor
ret
movsb
pop
lret
cmc
or
adc
jbe
movswl
mov
add
cmc
xor
mov
adcb
jmp
mov
push
cltd
std
dec
scas
and
push
lret
scas
adc
movsb
lock
outsb
out
icebp
and
cmp
sub
shrd
xchg
xchg
mov
jge
cmp
in
xchg
sbb
es
add
ret
movsb
mov
pop
mov
or
mov
jecxz
pusha
aad
mov
outsb
mov
and
mov
out
std
ds
aas
mov
or
aas
bound
std
aaa
mov
aam
jmp
adc
loopne
mov
sbb
adc
xchg
mov
xor
push
ret
daa
test
clc
es
movsb
js
fwait
insb
adc
cmpsl
nop
negl
aam
clc
sar
call
jmp
dec
sub
cmp
clc
es
test
bound
cmpsb
cmc
cmpsb
daa
mov
sbb
std
mov
call
loope
andb
lcall
xlat
push
adcb
js
jo
data16
adc
andl
mov
mov
iret
aam
es
popa
mov
inc
pop
jne
cmp
sahf
hlt
sub
sub
mov
in
cmp
or
dec
js
inc
xchg
mov
mov
jns
shrl
inc
xchg
pop
mov
ds
rol
pusha
mov
push
add
xor
or
cmp
negl
loopne
pop
lea
mov
rolb
iret
sub
xchg
jmp
xchg
gs
mov
lret
and
mov
iret
std
mov
fildll
lret
dec
pop
rcrb
out
xchg
ja
addr16
or
pushf
int3
mov
repz
aaa
cmpl
mov
in
addr16
dec
fbstp
adc
cmp
push
push
sbb
mov
stos
dec
aas
cmp
rcrl
or
jnp
sbb
shll
cmp
cmpsl
lock
aam
xchg
mov
xchg
xor
fidivl
cmp
mov
add
dec
clc
push
sub
mov
cwtl
clc
mov
and
sbb
cmpsb
mov
into
sbb
jecxz
mov
xlat
loope
fstpt
add
sbb
jl
jmp
cmp
mov
cmp
movsb
mov
add
movsb
cmp
mov
sar
push
shrl
mov
inc
add
sbb
call
pop
pop
fwait
outsb
mov
mov
aas
mov
xchg
into
xor
roll
mov
dec
add
ret
ret
je
and
movsl
stc
push
incl
mov
mov
cmp
ds
lea
fdivr
jmp
fyl2xp1
loop
cmp
inc
cmp
add
std
in
jns
fnsave
mov
mov
shl
sub
xor
push
lock
mov
in
mov
sbb
mov
divl
xor
mov
xor
sarl
jl
in
jno
ret
insb
or
xchg
ss
adc
pop
ror
add
clc
shrb
pop
bound
add
jl
bound
sbb
pop
iret
daa
pop
into
repnz
mov
rcr
xor
mov
sub
test
mov
jno
xlat
repz
mov
mov
xor
negl
outsl
icebp
cwtl
enter
test
sbb
rcl
sub
xchg
fwait
jge
clc
and
sbb
add
mov
mov
jb
dec
fwait
mov
in
sub
sub
fs
xorb
scas
mov
push
add
add
jl
lahf
ljmp
push
fidivl
adc
inc
and
test
sbb
es
inc
cmp
cmp
jecxz
nop
cmpsl
or
mov
rol
nop
cltd
mov
mov
incl
lahf
add
dec
das
jns
mov
pop
push
sbb
sbb
pop
inc
stc
loop
sub
inc
mov
jbe
add
in
inc
out
test
push
cmp
push
pusha
stc
xor
push
xor
out
cmp
sub
add
add
out
scas
divl
mov
scas
pop
das
fimuls
mov
loopne,pt
inc
adc
icebp
mov
sar
jl
inc
mov
push
sbb
addl
loopne
out
jl
ret
loopne
cltd
dec
xor
add
fistl
rcr
scas
mov
inc
das
scas
dec
cmp
or
jg
mov
mov
orl
dec
and
xorl
in
fwait
das
dec
and
xchg
in
jbe
cmp
icebp
inc
sbb
ja
jmp
mov
in
cmp
ja
mov
sub
mov
mov
or
insl
sbb
das
xchg
fwait
popa
mov
les
nop
les
int3
imul
das
aam
cs
push
add
scas
pop
push
sub
bswap
loop
data16
inc
fwait
repnz
pushf
mov
out
cli
mov
jb
cmp
stos
inc
sub
xor
cmp
int
cmp
mov
xor
mov
mull
loop
add
fdivrl
cmp
jecxz
mov
mov
xlat
daa
pop
clc
cwtl
and
pop
or
add
cmp
jb
or
ret
mov
clc
fcomi
mov
ljmp
dec
cwtl
pusha
in
fs
lock
sti
lcall
fstpt
pop
and
mov
mov
cmp
pop
push
sub
jnp
shlb
jecxz
js
lds
rclb
inc
xor
scas
inc
mov
mov
xchg
gs
jle
lods
cmp
adc
xor
sti
jmp
arpl
lcall
cmp
jbe
arpl
add
cmp
int
dec
mov
fldt
das
mov
mov
js
fcmovnb
push
adc
sub
and
das
jecxz
std
ret
dec
sub
and
shll
cltd
mov
push
xchg
lcall
mov
scas
inc
mov
mov
mov
mov
jmp
cmp
jg
lods
loop
in
lods
sub
scas
stos
push
sub
into
mov
pushf
test
mov
fmull
lahf
pop
cmp
mov
mov
xor
xor
test
les
dec
mov
cmp
xchg
movsb
clc
cmpb
mov
dec
outsb
out
ss
ss
add
pop
in
je
fistpl
pushaw
mov
jne
cmp
leave
fldenv
mov
push
int
popa
in
test
dec
pusha
stc
mov
call
lcall
mov
mov
push
dec
cmp
xor
mov
mov
cmp
dec
js
push
scas
addr16
xor
push
fldt
push
insb
mov
xor
and
pop
pop
xchg
lret
or
sub
mov
xor
imul
scas
mov
icebp
mov
push
cmp
cmp
cmp
push
mov
jp
clc
sub
test
push
cwtl
mov
fistps
sbb
icebp
xor
mov
dec
test
mov
fmulp
mov
jmp
sbb
jmp
mov
data16
aam
clc
enter
stc
loopne
mov
push
jp
or
add
push
mov
dec
dec
cmp
cwtl
lahf
sbb
jnp
scas
xor
je
lods
jnp
mov
lea
ds
jo
xor
push
shlb
scas
mov
sbb
mov
cmp
dec
xor
mov
xor
xor
dec
mov
mov
xor
das
push
xchg
xor
pandn
xor
sub
in
lods
cltd
lods
mov
or
mov
jp
or
mov
scas
cmc
jnp
cld
enter
clc
lahf
pop
out
test
or
cmpl
das
out
shll
stos
xlat
ret
sub
lods
test
sub
xchg
test
test
shrl
xchg
sti
leave
cmp
sub
in
dec
xchg
clc
je
lods
je
jl
mov
mov
das
adc
mov
jno
pop
mov
jbe
sbb
cwtl
imul
insb
mov
mov
out
sub
loop
or
int
mov
fisttpl
inc
scas
cmp
mov
lods
mov
int
repz
pop
test
int3
ret
inc
cmp
stc
and
or
mov
mov
lret
pushf
sub
cmp
lods
icebp
shlb
ja
pop
adc
and
scas
int3
fdivrs
jns,pn
outsb
mov
sarl
or
or
mov
fld
cmp
mov
mov
mov
rcrl
or
push
data16
popl
inc
mov
mov
inc
mov
mov
hlt
fstpt
cmp
addr16
dec
xchg
repz
std
test
sub
mov
out
mov
fadd
xchg
lret
fs
pop
stc
mov
jmp
testl
sbb
adc
fdivrl
movsb
cmp
or
add
jb
cmpsb
jne
loope
jnp
inc
cld
cmp
mov
dec
mov
sarb
cmp
jg
jl
sti
pop
and
aas
cmp
adc
movsb
sbb
lret
dec
and
sub
cwtl
dec
mov
jecxz
bswap
fsubr
mov
sti
ja
or
sub
out
movsl
cmp
loop
or
movsl
movsb
dec
icebp
shlb
mov
pop
in
mov
jbe
add
push
rcr
shr
mov
push
ja
pop
orb
dec
test
call
sub
mov
mov
scas
in
lret
lds
and
cmpsb
aad
lret
inc
jmp
add
fnsave
clc
loope
test
cmp
dec
jmp
js
shll
jne
cld
lcall
dec
lret
test
shll
mov
ds
sbb
pop
fwait
cmp
pop
add
sahf
inc
mov
sbb
pop
ss
dec
daa
lock
xor
mov
lods
push
dec
pop
repnz
shrb
imul
mov
scas
jp
je
stos
or
test
adc
mov
mov
mov
mov
mov
lcall
add
fs
mov
adc
mov
xor
mov
cwtl
or
fbstp
shl
jecxz
fdivrs
sbb
mov
mov
fildll
mov
sti
mov
sbb
mov
cmp
lods
sti
mov
mov
pop
fdivl
inc
mov
xor
inc
mov
loope
mov
xor
aas
inc
push
ljmp
and
das
dec
inc
xor
cmpsb
jecxz
xlat
roll
shlb
aaa
test
sbb
jbe
lock
pusha
adc
bound
scas
mov
xor
mov
mov
sub
jg
push
xchg
jg
shr
jns
out
jp
shll
cmp
xor
icebp
ror
dec
bsr
mov
pop
lea
hlt
popf
inc
pop
xor
pop
fnstcw
or
int3
inc
push
fisttpl
or
test
out
cmp
std
mov
jns
insb
fisubs
test
xor
dec
leave
sub
xor
bound
cmp
in
dec
repnz
xchg
les
mov
mov
les
cli
scas
mov
or
lahf
lcall
sub
test
mov
in
js
xchg
fnstenv
scas
ficompl
mov
sub
xchg
in
movsb
sbb
scas
push
stos
lock
gs
cli
mov
test
push
jmp
sub
test
cmp
xchg
and
scas
sub
mov
or
pop
jae
xchg
inc
lret
orl
and
popf
add
ret
adc
jmp
cmpb
or
mov
push
push
in
jne
insb
ss
xor
dec
push
pop
or
dec
gs
inc
int3
test
fmulp
inc
inc
cwtl
fwait
sub
repz
cmp
mov
or
lahf
cmc
fdivl
cmp
pop
pushl
ljmp
fwait
xlat
xor
dec
or
mov
mov
loope
pop
pop
inc
inc
or
lret
int3
ljmp
ss
mov
call
pop
inc
ljmp
aam
stos
xchg
outsb
enter
mov
es
pop
mov
sub
or
shrb
js
scas
jnp
js
ljmp
add
push
jle
mov
pop
sub
xor
mov
gs
mov
loope
adc
pop
and
pop
inc
and
push
pop
sar
add
sbb
in
xor
nop
jo
add
cmc
je
and
imull
add
push
repnz
pop
xor
sti
mov
or
push
sub
lret
fwait
nop
sbb
cmp
xor
sub
mov
stos
mov
test
dec
scas
sbb
outsl
out
test
shll
xchg
inc
test
xor
and
mov
fld
push
outsb
div
and
jl
pop
stc
cmpsb
shrb
pop
mov
sub
mov
or
and
nop
aam
clc
test
mov
mov
mov
mov
rclb
mov
mov
int3
ds
fsubrl
sub
fnsave
lret
fwait
test
pop
cmp
loop
cld
add
mov
jbe
add
jbe
xorb
mov
xor
in
sub
pause
rcrl
adc
scas
jl
mov
push
leave
mov
lahf
hlt
xchg
push
cmp
dec
loope
inc
sub
sbb
aam
xchg
sbb
fisttps
pop
add
sbb
cmpsl
std
lds
adcb
mov
xor
ljmp
mov
sbb
xorl
sti
jp
mov
mov
rorl
push
xor
mov
dec
xchg
mov
lret
mov
mov
sti
mov
xor
mov
orl
mov
ljmp
pop
lea
fld
sub
sub
movsb
mov
pusha
frstor
cmpsb
push
xchg
mov
sti
mov
test
scas
scas
sub
cwtl
addl
mov
rcrb
leave
jl
xor
fisttpl
xchg
aam
xchg
mov
jmp
cs
sbbb
aam
dec
sbb
jns
mov
call
mov
xchg
decl
enter
mov
shlb
mov
lret
and
sub
test
fidivs
push
mov
xor
or
loop
out
in
pop
lock
mov
and
dec
or
shlb
and
add
push
sub
or
scas
jns
call
fnsave
lods
stos
mov
dec
ret
hlt
lret
inc
das
or
sub
jmp
mov
mov
mov
cmp
push
or
scas
cmp
lcall
or
pop
stos
push
mov
mov
xor
mov
fprem
scas
test
rolb
test
xchg
sbb
leave
cmpsb
rcrb
lods
int
clc
mov
shlb
pop
lret
leave
mov
ret
xchg
push
scas
mov
or
pusha
aad
sbb
or
mov
xchg
sub
cmp
cmpsl
inc
cmc
icebp
ljmp
pop
inc
xor
fnstsw
jecxz
movsb
in
std
decl
mov
mov
test
fsubl
adc
leave
mov
int3
fisubrl
mov
test
xor
mov
in
aam
pushf
cmp
test
les
lret
jne
pushf
sarb
mov
push
jecxz
movsl
and
and
inc
mov
hlt
pop
bound
call
xor
mov
cmp
lahf
xchg
addb
es
or
into
notl
dec
mov
orb
arpl
dec
lods
xchg
mov
adc
call
cmp
int
imul
adc
dec
les
scas
xlat
dec
in
icebp
cmc
mov
mov
imul
inc
ljmp
cmc
rorb
mov
mov
sbb
mov
imul
scas
sbbl
jge
jmp
mov
mov
sbb
fldcw
dec
mov
enter
fstpt
dec
repnz
cmp
jge
lock
daa
sahf
ret
mov
popl
ficoms
stc
mov
mov
dec
cmc
sub
sub
and
repz
testb
mov
ret
ja
mov
daa
mov
loop
xor
inc
imul
imul
inc
call
push
xor
inc
fldcw
ljmp
dec
cmp
js
add
mov
pop
mov
inc
repnz
mov
push
or
cmp
add
inc
pop
and
mov
jne
pop
mov
sub
xchg
fstps
mov
mov
jge
mov
mov
hlt
or
xor
inc
jle
aad
addr16
jo
bound
inc
pop
call
inc
cmp
push
cld
sarb
mov
push
inc
push
mov
mov
xchg
mov
ds
dec
fiadds
jns
xchg
mov
cmpsb
ror
stos
arpl
aas
xchg
imul
inc
adc
xor
mov
in
cmp
jp
pop
les
xchg
call
incl
ljmp
mov
das
dec
jecxz
call
rcrb
fstpl
xchg
mov
jnp
repnz
sti
idivl
sarb
mov
in
out
pop
mov
stc
cmp
sub
mov
xor
syscall
flds
cld
mov
pusha
aad
mov
fucomi
xor
fnstenv
shll
les
sbb
test
mov
jecxz
test
jns
mov
out
jo
mov
cmp
adc
push
sti
aaa
cmpsb
mov
xchg
add
sub
xchg
rcl
shll
std
cmp
insb
mov
xor
and
inc
pop
and
jae
sbb
test
into
jb
pop
mov
mov
pop
mov
sbb
jnp
outsb
icebp
daa
inc
jmp
push
jmp
sbb
push
call
push
xlat
lds
dec
mov
dec
imul
push
dec
aas
lcall
loope
lret
scas
dec
adc
lahf
movsl
jo
outsl
mov
dec
dec
mov
pop
or
ret
test
mov
xchg
sub
mov
shrb
fwait
inc
cli
mov
sub
aas
cmp
add
inc
adc
lcall
jmp
test
xchg
sbb
sarl
rcll
jns
sub
shrl
xchg
pextrw
push
insb
aaa
cld
lahf
daa
out
in
rclb
mov
pop
lcall
loopne
movsb
hlt
aad
ss
pop
or
xor
add
inc
int
out
mov
mov
inc
test
out
bound
pushf
insb
hlt
xchg
push
xchg
scas
jp
or
stc
pop
and
dec
out
sahf
cwtl
xchg
cmp
cmp
lods
out
dec
jle
stos
pusha
ud1
fidivs
mov
lret
adc
pop
imul
testl
inc
loope
ljmp
jmp
and
mov
gs
mov
popa
inc
in
mov
mov
push
in
fmull
movsb
mov
sbb
mov
xchg
sti
out
xor
cs
pop
pusha
icebp
rcl
mov
lods
es
dec
pop
ret
mov
cmpsl
mov
andb
movsb
cmp
mov
das
stos
cmp
and
enter
dec
ds
nop
add
fisttps
sbb
test
fsts
xchg
divl
mov
shll
or
jns
call
cmp
imul
push
std
mov
pop
sahf
insl
icebp
enter
cmpsb
pop
addr16
push
mov
mov
xor
or
dec
addr16
push
outsl
xor
sti
int
dec
loopew
pop
andb
mov
addr16
and
fwait
sub
xlat
out
stos
jg
mov
cmp
pop
int
xor
pop
mov
inc
inc
push
shr
mov
enter
push
jae
pop
sbb
repz
testl
mov
cmpsl
ljmp
movsl
mov
clc
and
lret
lock
add
sbb
jo
ja
cmpb
es
arpl
lods
adc
fxch
daa
mov
mov
pushl
aam
int3
mov
mov
ss
mov
pop
divl
pop
mov
xlat
or
inc
dec
repnz
pop
insb
dec
sub
imul
adc
imul
mov
sbb
mov
adc
and
mov
push
pusha
ja
cltd
xchg
leave
mov
pop
imul
cld
pop
addr16
inc
test
pop
and
cs
xchg
lock
movb
pop
and
dec
stos
dec
lods
rcll
adc
xchg
out
dec
mov
xor
dec
jp
or
xor
or
in
mov
out
aaa
rclb
jb
adc
sub
clc
mov
fwait
sub
movsl
fucom
das
gs
dec
sbb
int
movsl
pop
sar
pop
dec
subl
mov
mov
gs
jnp
pusha
pop
xchg
into
xchg
fsubrl
adc
cmp
mov
sbb
lods
mov
inc
jmp
push
stos
lret
orl
neg
mov
sub
inc
xchg
sahf
cmp
jnp
pop
pop
mov
inc
dec
daa
xor
pushf
leave
push
sbb
stos
js
dec
jmp
pop
pop
mov
sti
and
or
repnz
mov
xchg
cmp
lds
paddusw
dec
movsb
js
dec
mov
mov
jne
dec
rcrl
rcrb
inc
jl
mov
scas
push
fcomps
inc
fisubrs
mov
aam
xor
add
test
leave
jge
mov
push
aad
sbb
or
lret
ret
cs
int
jmp
mov
icebp
lock
popa
cmpsb
or
test
inc
sub
cmpsl
shll
xchg
mov
mov
dec
xchg
cwtl
pop
ror
int3
push
test
mov
int3
add
xor
xchg
ss
jae
cs
leave
mov
filds
ret
stos
mov
stc
mov
int3
sti
out
and
mov
cmpsl
mov
dec
sarb
mov
jmp
mov
jns
aaa
roll
inc
xor
dec
leave
jmpw
imull
movsl
mov
data16
in
sti
sub
push
xchg
enter
fs
les
std
lret
shrl
movsl
repnz
cmp
mov
inc
fs
out
sub
or
rorl
paddw
adc
xor
inc
nop
inc
mov
sti
jmp
jae
cmp
mov
test
inc
rcrb
add
mov
xor
mov
es
sub
lock
push
add
lock
push
push
jp
push
mov
es
jmp
hlt
es
mov
cmpsb
pop
es
mov
inc
insb
pop
test
es
fwait
insb
mov
mov
mov
insb
push
mov
adc
int
outsb
dec
jmp
lret
gs
add
dec
sub
ds
das
or
jns
add
jecxz
call
xor
test
imul
icebp
int
xchg
clc
loopne
loopne
lods
loope
in
es
pop
cmp
mov
pop
mov
popf
jo
popa
and
and
mov
add
mov
mov
icebp
test
leave
out
in
orb
call
sahf
inc
aaa
ret
test
clc
sbb
cmp
mov
mov
fldcw
xchg
fcoms
mov
sti
and
or
mov
loop
mov
adc
into
movsl
mov
ficoms
jns
sub
fisubs
loop
pop
xor
mov
xor
mov
xor
inc
xchg
std
out
adc
fsub
jmp
mov
push
arpl
xor
inc
fisubs
mov
inc
scas
inc
lods
movsb
icebp
mov
jecxz
test
add
call
and
lea
scas
pop
movsb
in
sbb
scas
mov
dec
mov
dec
jae
mov
iret
das
cmp
rclb
and
loopne
lahf
xor
lret
dec
out
js
pusha
cmp
mov
lods
outsl
ljmp
in
jl
arpl
fnstenv
mov
sbbb
fidivrs
pop
cltd
dec
ja
test
incl
enter
mov
test
lret
lea
lcall
xchg
stc
movsl
sub
sbb
clc
push
sti
pop
cmp
mov
mov
rcll
dec
and
or
mov
mov
mov
xor
mov
cmp
adc
lods
lods
xchg
adc
ja
movsl
into
imul
imul
pop
mov
xchg
popa
push
mov
sbb
mov
add
enter
mov
mov
mov
mov
push
test
mov
lret
inc
mov
inc
mov
add
ret
push
ret
loope
pop
movsb
test
outsl
sar
cli
clc
aam
xlat
add
push
orb
jmp
fwait
test
in
cmp
jnp
iret
in
and
outsl
rcrl
fwait
test
scas
or
or
xor
sbb
shll
mov
test
and
insl
jp
sub
xor
mov
aaa
sub
xor
les
mov
push
movsb
cmpsb
sbb
push
cmc
rolb
xor
inc
xchg
mov
xchg
jecxz
fsubl
sub
lret
imul
cmpsl
movsb
repz
out
fcoml
mov
sub
inc
mov
mov
ljmp
dec
mov
lcall
lds
repz
and
dec
adc
push
push
xor
in
and
mov
ljmp
int
inc
stos
repz
inc
fcoml
loope
iret
mov
pop
sub
ja
bound
jns
andb
pop
sbb
jp
andb
add
bound
lret
jmp
lock
sub
xor
test
lods
aam
clc
sti
movsb
test
shrl
stos
cli
lret
fwait
fs
lret
aad
jns
les
call
lahf
sbb
fldcw
fstl
mov
dec
sbb
rorl
in
rcl
jmp
xor
sbb
int
and
fsubrs
aam
leave
fcomps
sbb
roll
push
sub
and
sub
and
mov
add
data16
and
les
jb
add
dec
je
mov
and
sub
jecxz
mov
subb
pusha
and
scas
out
sub
call
jge
push
or
mov
loope
mov
and
mov
leave
fwait
jp
mov
out
xchg
mov
pop
pop
stc
lret
xchg
mov
ja
pop
dec
mov
pop
mov
mov
test
orb
xchg
add
cmp
mov
cs
cmc
adcl
hlt
aas
and
or
mov
pushf
orl
orl
arpl
les
aas
sbb
sbb
or
adc
out
adc
fwait
enter
jb
mov
sbb
insl
push
jns
mov
daa
test
fsubrl
add
inc
dec
into
mov
stc
mov
dec
adc
ss
test
and
movsb
xlat
out
and
iret
imul
lret
jl
jns
imul
and
hlt
add
icebp
and
dec
jl
pop
je
ljmp
hlt
call
mov
sbb
iret
ror
outsl
adc
stos
in
dec
dec
lcall
mov
scas
movsl
mov
xor
shl
and
pop
mov
lahf
paddusb
mov
aad
xchg
mov
int
xchg
or
mov
popa
mov
mov
std
sub
push
sbb
int3
add
lret
in
mov
loop
lahf
jp
mov
dec
repz
inc
push
mov
push
pop
sub
arpl
outsb
aas
lock
mov
push
inc
repz
dec
cmp
adc
out
les
xor
ret
pop
adc
rolb
jmp
in
push
aas
call
mov
ret
add
int
mov
pop
mov
mov
mov
out
out
push
jp
mov
mov
adc
or
or
mov
push
mov
test
add
daa
mov
subb
jno
fnclex
ret
call
aam
dec
or
xor
xor
mov
inc
repnz
sbb
orb
cmc
repz
adcb
fnstcw
stos
enter
sbb
aad
sub
push
jns
imul
xor
xor
xor
cmp
clc
jae
mov
enter
jno
fistpl
mov
xchg
inc
aas
cmp
popa
jecxz
aaa
lods
lods
test
sub
pop
xlat
scas
adc
in
push
sub
ss
movb
sub
cmp
mov
jl
lods
fldt
test
inc
ret
loop
and
mov
outsl
loopne
lods
scas
jmp
ljmp
mov
sbb
xor
and
push
mov
xchg
add
hlt
and
imul
enter
fdivl
imul
inc
out
ret
inc
mov
cmp
arpl
fiadds
data16
pop
xor
dec
cmpl
shll
and
and
sbb
fmul
loope
popl
xor
mov
xor
jno
fsubl
or
mov
xchg
cltd
rcrl
dec
push
xchg
fisubrl
mov
aad
icebp
jmp
jmp
clc
mov
pop
inc
mov
fs
mov
mov
es
stc
popa
jl
push
out
add
test
movsb
hlt
lret
mov
bound
inc
add
cmpsb
enter
movsl
pop
scas
xor
cld
bound
adc
jae
push
sarb
rcrl
loopne
push
jnp
xchg
out
addb
fwait
shll
xor
arpl
sbb
mov
mov
pop
mov
jecxz
shll
lds
movsb
pusha
sbb
adc
xor
mov
lds
inc
mov
jno
fcompl
popa
jp
pmulhuw
and
mov
je
outsl
mov
scas
sbbl
jecxz
cmp
mov
call
bound
sub
dec
daa
mov
sbb
clc
es
xchg
scas
ficoms
sbb
fcmovne
cmp
sbb
popa
leave
scas
sub
sub
imul
andl
inc
test
xor
and
push
decl
mov
out
push
xor
jmp
jae
dec
fnstenv
popf
rorb
xor
inc
in
fldln2
inc
lret
insl
clc
in
jo
mov
aam
and
leave
inc
mov
test
jle
cmpsl
pop
sub
pop
sub
ficompl
sbb
mov
das
sbb
and
mov
or
out
scas
and
inc
cmpsb
imul
jecxz
and
inc
and
arpl
imul
fdivrs
nop
sarl
aaa
imul
fstps
popa
sbb
addr16
jmp
push
add
mov
jno
lret
xchg
jnp
mov
ds
lret
and
mov
adc
mov
and
dec
add
arpl
test
cmpsb
add
dec
sub
cld
pusha
subl
cmp
in
xor
mov
lods
pop
push
sti
repnz
fst
adc
or
sbb
xlat
jae
sarl
movsb
jne
or
jecxz
daa
fwait
or
rclb
mov
pop
xchg
jge
flds
jl
sti
xchg
fisttps
cmp
or
dec
jp
popf
jns
or
test
or
or
mov
not
push
mov
into
fcmovnb
and
sar
pop
shr
mov
and
loope
out
divl
xor
shlb
cmp
dec
fcompl
ret
add
dec
ror
xor
push
xor
aam
dec
jnp
loope
and
cmp
adc
mov
das
mov
lret
mov
mov
jge
cli
add
fstpt
pushl
aas
xorb
fisubrl
ret
insb
jp
xchg
popa
in
mov
jo
push
sarb
mov
dec
je
int
mov
orb
sbb
jo
pop
lahf
and
rclb
add
xlat
mov
pop
sbb
bound
push
pusha
lea
mov
cs
cmp
dec
push
pop
jnp
fnstcw
arpl
movsb
jbe
dec
cmp
sbb
pusha
jo
outsl
sub
cmp
test
mov
arpl
repz
in
inc
xor
inc
adc
je
add
jle
lods
jb
je
leave
xor
data16
scas
mov
jecxz
inc
fisubrs
nop
stc
xor
mov
sub
xor
sub
mov
sti
xchg
cmc
push
and
scas
iret
lods
in
cmp
in
fldenv
pmulhw
mov
push
mov
popf
xor
aaa
add
pushf
jp
inc
je
pop
jp
cmpsb
adc
sub
push
push
enter
pop
jecxz
fidivs
mov
mov
sub
add
ljmp
inc
cmc
xchg
in
fnstcw
movsb
loope
es
lcall
int
fistps
lahf
xor
fxch
fildll
or
jge
daa
mov
lea
sbb
and
cmp
ss
and
adc
fnstenv
sub
xchg
in
mov
outsl
fucomi
and
popf
sbb
mov
lahf
jle
xor
mov
adc
lds
dec
lahf
inc
push
adc
adcl
lds
aas
lahf
addr16
xor
lds
data16
jg
mov
mov
movsl
dec
jecxz
jg
ret
dec
ret
inc
sub
test
shlb
jnp
scas
jne
jge
data16
jge
mov
cwtl
sbb
rcrl
test
movsl
jb
adc
insl
mov
fldt
pop
xor
jne
dec
lds
movsl
movsb
mov
aad
incb
add
xor
aas
xor
imul
xor
add
fstps
loop
xor
aaa
sbb
pop
test
mov
xlat
gs
test
scas
inc
dec
stos
ret
jg
lods
inc
aaa
bound
mov
sub
cld
cmc
sbb
shrb
pushf
fcmovnu
inc
mov
je
dec
jecxz
jle
mov
test
jbe
cmp
lahf
jno
in
sbb
push
pushf
inc
movsb
xlat
cmp
subb
and
sub
dec
ficomps
int
ficomps
lahf
test
stc
inc
fsubrp
mov
arpl
psubusw
push
mov
cmpsb
pop
incl
cmp
f2xm1
in
cmpsl
cmpb
mov
cmpl
sbb
adc
dec
adc
sahf
sub
les
stos
sahf
sub
mov
movsl
sahf
dec
ljmp
les
inc
sahf
pusha
pushf
mov
sahf
dec
mov
out
push
les
adc
mov
ja
inc
jl
movsb
pushf
fldt
daa
xchg
jecxz
jle
xchg
repz
test
aas
dec
decl
pop
inc
sbb
push
pop
sbb
dec
aas
push
sbbb
aad
push
test
push
inc
pop
cmc
dec
mov
sbbb
aad
and
pop
adc
in
sbb
ret
xor
sti
idivl
adc
movb
rorb
inc
inc
xchg
shll
fs
popa
aaa
xchg
inc
fwait
push
mov
ret
cltd
xor
mov
scas
movsb
mov
test
push
aam
cli
mov
or
out
xchg
orb
mov
gs
movsl
fldcw
add
sub
inc
lea
mov
xor
std
fmulp
cld
or
aam
popf
xchg
cmpsb
mov
std
pop
cmp
hlt
add
int
cli
pop
push
sar
data16
fstpt
inc
inc
sbb
jl
xor
cmp
sbbb
sarl
and
es
test
dec
push
lock
inc
fsubl
gs
pop
enter
jge
add
sub
in
leave
pushf
mov
mov
jp
xor
mov
pop
mov
or
inc
mov
mov
pushl
lahf
repz
popf
pop
test
popf
sub
popf
pop
add
popf
data16
jge
add
fucomi
jge
lods
jge
arpl
cmpl
push
pop
mov
pop
dec
jbe
push
mov
pop
dec
ss
pop
nop
sub
cmp
je
cmp
aas
or
es
mov
test
je
dec
cmp
add
jb
gs
subl
stos
arpl
sub
bound
or
outsl
sbb
xor
sbb
fidivl
xor
xchg
mov
sbb
sti
push
std
cmp
pop
sbbl
arpl
sbb
and
mov
push
mov
push
jo
pop
sbb
mov
sub
cld
es
and
icebp
jecxz
push
xchg
cmp
lds
cld
das
in
mov
add
adc
stc
sti
cld
inc
ja
repz
into
dec
enter
push
pop
out
inc
adc
iret
lcall
sbb
inc
mov
repz
jmp
test
push
fistl
sub
testl
dec
adc
jge
mov
fdivrl
inc
mov
xor
cmp
xchg
cwtl
bound
jmp
mov
cli
cmp
aaa
mov
fwait
cmp
bound
xor
jne
lret
cmp
js
mov
ja
push
xchg
sbb
cmp
fstps
cmp
sub
pop
push
movsb
inc
and
mov
sbb
shl
dec
inc
adc
xorb
sbb
in
mov
pushf
dec
pop
xor
testl
insl
dec
in
and
mov
test
dec
inc
xor
mov
lret
lds
inc
orl
pushf
imul
push
aad
clc
sbb
jl
pushl
jl
adc
dec
adc
mov
cld
bound
push
inc
inc
loopne
push
dec
push
sub
mov
mov
jno
mov
rorl
mov
pop
mov
push
popa
scas
mov
and
ret
rclb
cltd
and
mov
pop
xor
imul
pop
push
cs
and
fcmovnu
mov
mov
popa
pop
and
loop
inc
xor
mov
arpl
mov
shlb
cmpl
leave
mov
xor
cmp
and
dec
in
jno
xchg
loop
mov
shll
add
in
repnz
lcall
stc
mov
mov
cmp
xor
add
push
lock
dec
sbb
cld
push
aad
ljmp
shrl
mov
sub
lds
adc
jg
push
xor
fdivrl
lret
mov
mov
adc
icebp
dec
imul
mul
pop
dec
lahf
repz
rorl
sti
adc
and
addr16
xchg
in
push
sub
adc
cmpl
sti
adc
inc
mov
xor
xor
xorl
push
sub
scas
cwtl
pop
sub
fildll
and
mov
lahf
inc
popf
jp
sbb
fldt
loopne
lds
cmpsb
mov
mov
jae
pop
mov
and
pop
dec
mov
jno
jbe
inc
add
cmp
pop
sub
es
or
cs
cmc
and
xchg
loope
in
out
cmp
push
cmp
in
test
js
mov
rorb
xor
push
aaa
fcomi
aam
jnp
mov
orb
rcrl
fwait
rcll
fwait
test
push
in
rcrl
fwait
inc
dec
mov
mov
jnp
adc
sbb
jnp
in
test
xchg
mov
mov
dec
in
jmp
jnp
aad
mov
sbb
xchg
out
lahf
fcoms
dec
orl
mov
mov
pop
cmpsb
andl
pop
pop
cmp
adc
sub
sbb
imul
cmp
mov
add
aaa
mov
lea
ret
insl
imul
cmpl
sbb
mov
fistpl
pop
adc
loope
inc
movsb
repz
lcall
fs
sub
mov
sbb
jns
sbb
shlb
popa
loope
int
mov
sbb
add
out
mov
push
lahf
sbb
xchg
sbbl
push
data16
cli
adc
cli
ret
movsb
pop
imul
fnstcw
cli
pop
mov
outsb
pushf
lret
test
pop
jge
dec
decb
xchg
ret
popa
shlb
and
sub
sbb
mov
cmp
cli
adc
gs
sub
jmp
add
push
fiaddl
jmp
add
cmp
fstps
fcmovbe
sbb
fcmovb
mov
ss
stc
mov
cmp
mov
mov
loop
or
and
mov
mov
lds
inc
mov
mov
aaa
mov
jne
mov
mov
add
mov
stc
sarb
cmc
dec
cmp
lcall
outsl
mov
loop
jne
lods
lcall
mov
scas
roll
lcall
pushf
int3
mov
mov
add
idivb
rolb
es
repz
cmp
test
cmc
xchg
mov
mov
gs
and
popf
and
lea
push
jo
xchg
and
cmp
cmp
shlb
cmpsb
movsb
test
out
in
mov
jp
sub
mov
fcomps
push
add
rclb
mov
call
imul
outsb
push
mov
jmp
test
shrd
shrb
mov
sbb
pushf
xchg
cmp
movsl
in
pop
sub
and
and
int
cmp
cmp
mov
inc
mov
in
cmp
fldenv
mov
cmpsb
xor
mov
add
inc
mov
insl
mov
and
rcrb
imul
cmp
ja
fstpt
andb
js
pop
test
sbb
mov
jecxz
sbb
cs
in
fcmovnb
jecxz
and
inc
arpl
and
dec
mov
je
and
ja
jmp
push
cmp
adc
ds
pusha
in
call
mov
in
dec
xchg
cmp
loop
ret
movsb
xor
push
insb
call
lock
add
fsqrt
stc
mov
jmp
int
mov
adc
fld
fsts
pop
jge
jno
mov
or
fistpl
mov
aaa
add
lret
add
jno
mov
xchg
lods
aam
inc
imul
mov
mov
push
icebp
std
roll
fprem1
fidivs
sbb
clc
fnstenv
fsts
ljmp
cmp
push
lahf
push
push
fstpl
adcb
fistl
imul
jno
push
in
or
add
add
sbb
incl
and
fnstcw
pusha
ljmp
mov
pop
clc
aam
cmp
sbb
sub
sub
fdivs
xchg
jns
dec
subb
lock
clc
push
cltd
test
mov
cli
cmc
test
outsl
jmp
rorl
mov
addr16
aam
sbbb
cltd
sub
mov
cli
sbb
neg
pushf
mov
loope
in
pop
jmp
arpl
xchg
mov
sbb
outsl
movb
bound
add
sub
or
mov
add
or
iret
xchg
popf
or
lret
les
popf
icebp
mov
jns
xchg
mov
mov
mov
cmc
lcall
inc
pop
loopne
test
xor
sub
jmp
insb
leave
inc
mov
pop
cmp
sub
lds
inc
pop
test
mov
ja
xchg
in
cmp
daa
les
push
pop
xor
pop
lods
movsl
cltd
mov
pop
xor
xor
mov
adc
adc
jmp
mov
pop
mov
stc
std
xchg
imul
jge
popa
leave
inc
shr
inc
lahf
dec
pushf
push
push
jecxz
pop
fisubs
cmp
mov
push
repz
sbb
mov
lret
xor
arpl
add
clc
test
xor
out
int
rcrl
movsb
popa
cmp
add
ret
sbb
push
shl
xchg
mov
sarb
push
enter
sub
fidivrs
js
mov
mov
jmp
fsubs
add
adc
cld
outsl
mov
and
or
aaa
xchg
sub
clc
cltd
xor
pop
xchg
clc
rcrl
clc
sbb
movsl
mov
cmpb
jns
out
aas
fsubl
roll
daa
xor
cmpsb
data16
pop
cmp
mov
xor
xor
cmp
ja
daa
or
pop
out
jl
mov
xchg
lods
sub
outsb
mov
jge
xchg
jle
and
cltd
mov
cmpb
pop
sub
outsl
lds
mov
addb
enter
popf
or
inc
mov
into
xchg
mov
mov
repz
sarb
frstor
xor
mov
in
cwtl
sar
in
mov
sti
mulb
sbb
dec
mov
fistpl
add
fnstcw
cwtl
sar
cwtl
in
jb
out
sub
jmp
inc
cmp
mov
mov
ss
dec
loopne
xlat
pop
push
dec
fsubrs
cmpsb
push
js
dec
aam
lahf
leave
add
mov
shrb
cltd
sbb
fstps
mov
rolb
cltd
sbb
jg
sbb
and
aas
sub
fstpt
inc
sub
mov
pop
mov
cli
sub
sbb
xchg
lock
bound
out
add
lea
stos
mov
mov
shrl
cmpsb
mov
and
inc
mov
jae
mov
cmp
pop
mov
pop
mov
and
jns
mov
cmp
mov
lods
notl
cmp
stc
movsb
xchg
and
lds
leave
lcall
std
push
xor
shl
jnp
push
xlat
cltd
loope
addr16
mov
pop
sub
lahf
dec
aas
inc
sub
sub
addr16
jecxz
ficomps
lahf
cltd
mov
leave
mov
and
mov
test
test
cmp
stos
daa
and
mov
xor
mov
ret
and
std
cltd
in
mov
jge
push
sub
out
mov
xor
repnz
add
sbb
sub
movsb
inc
dec
mov
cmpsb
mov
jmp
jl
sub
mov
pop
sahf
icebp
xlat
fidivs
or
push
sbb
cmp
popa
push
push
mov
mov
roll
andb
mov
jp
add
dec
or
sub
adc
fadd
cs
repz
scas
pop
sub
sbb
aas
adc
sub
mov
push
loopne
mov
add
xorl
sar
cwtl
rcrl
mov
push
scas
adc
mov
inc
cmp
push
test
mov
gs
jne
mov
cmpsl
xchg
mov
xchg
mov
pop
mov
idivl
mov
or
out
nop
xlat
adc
iret
decb
rclb
gs
ror
mov
dec
imul
cwtl
shlb
clc
idiv
jno
lret
mov
stc
negl
cmp
fiadds
test
out
insl
idiv
cli
push
sub
and
icebp
js
cltd
inc
adc
test
fsub
stc
movsb
mov
dec
loope
xlat
adc
or
mov
repz
jb
jp
movsb
xor
xor
cmp
cmp
fisubs
sbbb
loope
ljmp
mov
xor
mov
cltd
lahf
fisttps
sbb
arpl
jnp
xlat
fcomps
or
cmp
dec
pushf
aaa
sbb
addl
iret
std
xorb
and
mov
add
mov
es
dec
push
inc
in
mov
dec
mov
inc
xlat
mov
or
xchg
mov
cmp
cmp
pop
fiaddl
push
call
sbb
sarl
pusha
faddp
orl
fs
mov
sbb
xor
fldl
andb
sbb
mov
aaa
dec
inc
cmp
popf
rclb
fsubrs
push
inc
cli
xor
sub
mov
jmp
test
pop
popf
jl
add
dec
idivl
xlat
sub
shrb
rcrl
bound
mov
xor
and
or
adc
hlt
imul
xchg
lahf
push
or
pop
mov
xor
xor
movsb
stos
leave
add
fnstcw
xor
in
or
mov
cmp
cmp
cmp
aam
sarl
andl
adc
dec
cltd
test
and
jae
push
clc
addr16
fsubrs
lods
test
outsl
sub
out
cld
mov
aaa
jns
je
je
fdivrp
push
cmp
out
inc
add
js
adc
push
clc
popa
add
and
cmp
cmp
mov
mov
jmp
mov
andb
push
or
mov
cwtl
dec
sbb
xlat
adc
sarl
push
xchg
stc
adc
inc
cmp
mov
and
mov
testb
fiadds
dec
cmc
fdivrl
in
jmp
jle
ffree
pop
mov
cmp
outsl
repnz
or
fs
mov
fcmovnb
adc
mov
ljmp
mov
pop
mov
xchg
push
sub
mov
mov
and
mov
aam
push
push
jbe
cmp
inc
jle
lcall
jl
mov
shl
orb
add
add
int
inc
jge
jmp
mov
mov
idiv
inc
jl
mov
rcrl
jg
push
mov
sbb
jp
pop
int3
cmp
adc
inc
lret
lahf
aam
clc
or
ret
mov
cli
fwait
sbbl
rcrl
mov
outsl
adc
pop
enter
push
ret
add
cmpsl
lret
aad
js
mov
pop
mov
mov
bound
pusha
jo
push
lods
repnz
cmp
cld
sbb
sarb
shlb
mov
mov
fs
mov
add
adc
sti
std
cmp
adc
adc
xor
pop
iret
loopne
je
xchg
pop
cmpsb
jle
cmp
inc
mov
adc
jmp
repnz
dec
or
push
out
sbb
xchg
cmp
sub
mov
xchg
lcall
dec
jmp
add
adc
cmp
jne
xchg
cmp
jecxz
and
and
fnstcw
aam
testb
pop
sbbl
dec
mov
jb
sbb
mov
push
and
ss
test
mov
push
std
data16
out
pushl
loope
mov
shlb
mov
pop
aas
testl
mov
clc
sbb
cmc
cltd
pusha
pop
lock
imul
les
mov
pop
cmp
inc
decl
sub
push
std
enter
les
nop
mov
xchg
inc
xchg
or
sbb
jmp
push
adc
subb
mov
cmp
stos
ljmp
inc
add
addr16
scas
jo
js
enter
cmp
pusha
aam
sub
jns
push
cmp
frstor
popa
inc
pminsw
or
sti
add
inc
sbb
stos
add
xchg
sbb
arpl
jb
xor
cltd
pop
xchg
daa
inc
fiaddl
mov
adc
mov
in
mov
pushf
cmp
dec
scas
push
sbb
mov
sub
mov
insb
inc
mov
jbe
push
jns
call
daa
mov
mov
sub
fidivrl
sub
cli
sbb
mov
loop
pop
mov
insl
cmpsl
repnz
push
movsb
mov
pop
mov
aas
mov
test
mov
cmp
fidivrs
push
mov
cltd
mov
addb
pushf
jo
addb
aas
dec
cmp
cmp
iret
call
add
in
mov
out
cwtl
stos
aam
test
lods
inc
cmp
iret
clc
pop
test
or
mov
inc
repnz
and
sub
mov
jmp
cmp
dec
into
and
rorb
pusha
xor
and
scas
sub
lret
cmp
pop
or
push
shr
fstpt
mov
mov
jle
sti
mov
jp
xor
arpl
stc
mov
movsb
test
xlat
stos
push
aam
xor
lods
aaa
out
push
loop
mov
dec
cmp
cmp
addb
jno
daa
inc
in
pop
movsl
js
fxch
fldenv
in
testl
cmp
sti
dec
jne
jb
mov
sub
push
imul
xchg
out
sbb
mov
push
ds
ret
push
cli
mov
test
mov
adc
add
pop
jle
inc
push
inc
xor
add
movsl
jle
and
sbb
mov
js,pt
js
enter
fcoms
jnp
jp
loopne
push
cmp
imul
into
stos
sbb
push
addb
and
inc
mov
push
lret
pop
mov
cmp
iret
jp
ds
lods
sti
bound
push
mov
mov
mov
mov
scas
repz
mov
sub
or
sbb
xlat
push
push
mov
std
push
ds
or
mov
dec
and
lcall
lret
inc
fidivrl
and
sub
rcl
xor
lea
or
cmp
call
push
pop
test
cmp
cmpsb
xlat
sahf
cmp
int3
ret
test
mov
pop
lods
jg,pt
mov
inc
pop
push
mov
aas
inc
scas
sub
jbe
negb
and
jo
cwtl
mov
mov
lret
decl
mov
std
lods
mov
incb
or
loopne
cld
popf
ds
in
adcb
xchg
sbb
cmp
mov
mov
loope
mov
test
jp
sbb
js
sbb
dec
push
enter
cwtl
call
cli
add
nop
in
loopne
inc
loopne
adc
mov
loopne
sub
pop
jne
cld
xchg
out
mov
fistpl
fsqrt
dec
push
test
ficomps
neg
arpl
push
aad
adc
mov
fadd
and
pop
rcrb
mov
aad
cmp
or
adc
inc
mov
jno
mov
xchg
pop
lock
add
adc
cltd
js
sbb
mov
and
add
mov
pop
pop
inc
lcall
adc
stos
out
mov
mov
add
mov
orb
ror
mov
xchg
jmp
mov
cmp
aaa
mov
adc
inc
jp
jle
out
mul
mov
push
test
lea
pusha
sub
and
xchg
jmp
mov
sbb
xchg
or
sbb
stos
push
test
cmp
lret
stos
push
mov
dec
insl
push
mov
mov
dec
sti
lea
jg
lcall
fcoml
sub
and
xlat
mov
push
fildll
jae
xchg
mov
sarb
scas
mov
test
adc
rcl
sbb
daa
lret
cmp
xlat
add
mov
adc
movsl
mov
sub
inc
cltd
mov
or
xlat
test
fwait
adc
xor
cltd
div
lods
repz
fnstsw
xchg
xlat
mov
test
cmp
pop
mov
movsb
sub
push
add
jo
adc
sub
dec
jecxz
and
sub
pushf
mov
xor
mov
sub
imul
pop
subb
es
in
mov
inc
cmp
xor
pushl
bound
push
sbb
nop
lock
cld
mov
in
inc
cltd
cmp
adc
jecxz
jo
push
sbb
lods
and
shll
mov
insb
outsb
pop
push
rolb
cmp
fdivrs
dec
aad
rcl
sti
lds
lret
lock
dec
es
and
roll
adc
cmp
addr16
cs
sbb
pop
cmp
push
daa
insb
pusha
sbb
arpl
int3
xor
dec
pusha
xlat
pop
inc
mov
and
loopne
dec
cmpb
aad
and
icebp
inc
lea
add
mov
pushf
inc
and
std
mov
mov
dec
popa
mov
pushl
sbb
add
mov
xlat
enter
and
subl
test
sub
gs
inc
fstps
cmp
sub
push
pushf
fdiv
push
lock
add
cltd
das
lcall
inc
stc
pop
sbb
clc
call
xor
cmpsl
mov
mov
xorb
clc
loope
pop
mov
mov
jecxz
pop
out
pop
pop
sbb
sub
fdivr
xchg
fnop
cmp
jmp
push
lea
into
out
std
mov
mov
rcrl
jecxz
loop
shrb
sbbl
xchg
lock
sbb
or
jne
loope
sti
mov
jne
cli
or
cmp
pop
xchg
mov
sti
rcrl
cmp
mov
data16
and
dec
clc
mov
ret
pushf
dec
in
icebp
rorl
pushl
sarl
std
jle
neg
stc
aad
pop
out
mov
lods
fisubrl
cmp
loope
or
ja
add
jne
and
pusha
cmpsb
sti
shlb
and
cli
cmp
pop
loop
jns
imul
fnstcw
leave
jne
cmpsb
mov
jnp
mov
out
clc
xlat
inc
cwtl
inc
sbb
pop
inc
or
shlb
fcomps
mov
jecxz
add
inc
xlat
dec
adc
sbb
mov
adc
loopne
aam
out
fisttps
or
clc
lock
fisubs
fistpl
imul
loopne
push
pop
call
fstpt
jl
divl
repz
das
jbe
mov
sti
fcoms
mov
or
sti
and
push
cmpsl
test
ret
mov
gs
fprem
scas
js
sbb
push
ret
lock
jno
test
bnd
leave
fs
ds
popa
ss
clc
es
stos
sbb
adc
mov
out
xlat
sarb
pop
xchg
pop
repnz
out
loope
cltd
stos
scas
imul
lret
mov
sub
aas
je
fistps
loope
push
xchg
push
fistps
mov
mov
loopne
or
popf
jae
adc
scas
or
sub
mov
test
mov
jmp
aam
imul
add
sti
sub
inc
lock
pop
push
or
mov
adc
mov
jnp
mov
sbb
sub
fdivrs
js
mov
sub
cmp
mov
nop
aas
pop
xchg
scas
sub
popl
cmp
imull
sbb
inc
mov
or
mov
xchg
in
lret
test
adc
mov
clc
mov
mov
in
cs
mov
pushf
pop
push
sbb
mov
mov
dec
and
jb
jecxz
mov
sub
mov
pop
cld
movsb
and
cmp
cmp
stc
es
and
dec
push
dec
sti
jnp
lahf
add
push
pusha
mov
scas
cmc
xor
jno
loope
mov
bound
jnp
enter
pop
pop
mov
insb
push
pop
push
es
and
inc
fistpll
mov
and
adc
mov
mov
neg
pop
popf
leave
fdivrs
pop
inc
inc
add
inc
stc
jecxz
test
and
mov
movsw
pop
xorl
push
in
mov
xor
addr16
fwait
popf
imul
sub
pop
mov
pop
mov
fdivrs
stos
add
mov
pusha
mov
lret
adc
mov
inc
xchg
sbb
mov
mov
out
or
push
dec
sub
stc
xlat
test
cltd
inc
xlat
sub
mov
and
gs
fmull
out
add
loop
cmp
jmp
add
das
push
push
ljmp
test
arpl
scas
inc
mov
dec
cli
dec
cmp
adc
mov
cmp
add
shlb
mov
or
rclb
mov
movsb
xchg
mull
mov
jg
adc
cmp
mov
lret
mov
jb
xor
daa
ret
fiaddl
mov
mov
cs
jl
mov
cmp
scas
cmpsl
push
xor
mov
push
pop
fidivrl
sbb
in
xor
mov
sub
sub
xor
mov
mov
cmp
mov
sbb
mov
arpl
call
mov
adc
fstpt
dec
push
xor
push
mov
filds
sbb
dec
rolb
mov
mov
pop
out
pushf
push
add
mov
xbegin
lret
cmp
mov
dec
cld
mov
stos
outsb
aaa
cmp
shrl
fnstcw
xor
scas
es
xlat
add
adc
pop
test
add
dec
pop
and
inc
imul
adc
pop
xorb
cmpsl
daa
push
xlat
pop
inc
cmp
sub
bound
loope
mov
jnp
addr16
sahf
icebp
test
adc
fwait
call
shl
inc
xchg
loopne
aam
les
enter
pop
xor
mov
mov
shlb
mov
das
rorb
addb
in
out
insb
pop
adc
out
fisubrs
fnstsw
jp
mov
lods
popf
mov
sti
mov
add
iret
fisubl
and
ja
divl
enter
lea
dec
popf
dec
cmp
inc
cmp
fisubs
dec
or
cmp
xor
cmpsl
mov
adc
dec
mov
ds
push
in
jns
sub
sub
xor
cmp
shl
movsl
inc
mov
mov
sub
jmp
sub
test
pop
lods
sub
dec
cld
das
sbb
xlat
cmp
inc
mov
mov
xor
mov
dec
cmp
push
scas
fnstsw
pop
or
pop
lods
cmp
jecxz
mov
ja
es
mov
stos
jl
out
in
stc
jecxz
sbb
mov
and
add
pop
sub
adc
cmc
sbb
mov
pop
adcb
lock
xor
push
mov
inc
jns
mov
test
jne
and
add
mov
or
testl
or
popf
aaa
cmp
cmp
lea
sti
iret
dec
pop
movsb
push
dec
pop
lahf
jge
jge
scas
arpl
mov
das
mov
mov
sub
movsl
mov
aam
in
loope
jnp
pop
loopne
pop
orb
add
xchg
inc
inc
mov
pusha
sbb
push
push
mov
cmp
popa
mov
cli
mov
ljmp
inc
and
call
aam
mov
xlat
jno
dec
sbb
mov
mov
mov
dec
dec
div
mov
add
pop
mov
mov
mov
and
cmp
cmp
dec
lcall
in
sarb
mov
mov
xchg
sbb
mov
mov
cli
mov
cmpl
in
jle
mov
mov
mov
cmpsb
push
call
adc
jl
mov
cli
pushf
cmp
daa
jns
mov
and
push
in
enter
jge
leave
imul
add
pop
jbe
dec
insl
mov
jb
daa
cmpsl
pop
enter
bound
ljmp
subb
dec
sub
add
mov
push
hlt
aad
and
jbe
ret
dec
and
jl
inc
into
jge
jae
mov
daa
mov
shl
loop
mov
and
mov
mov
enter
mov
mov
jo
dec
shrb
fnstcw
mov
cmpsl
sti
dec
popa
inc
ljmp
cmp
mov
js
add
add
sub
movsb
or
mov
dec
pop
cmp
sub
mov
test
or
call
loopne
lahf
movsl
scas
addr16
adc
sbbb
frstor
jmp
fsubp
fcmovbe
lcall
ficompl
popf
shlb
addr16
push
xchg
js
mov
cli
into
loope
xchg
enter
movsl
mull
jp
pop
xchg
ret
lea
into
cmp
enter
sahf
mov
inc
xor
shrl
cmp
cmp
fincstp
aad
mov
shll
dec
cltd
xchg
fdivl
jns
mov
sub
call
aam
sub
mov
aam
xlat
or
mov
and
cmp
dec
or
cmp
lods
xchg
push
es
mov
insb
adc
std
fisubl
mov
fimull
xchg
pop
subb
addb
mov
mov
nop
pop
jns
out
fildl
enter
mov
les
jmp
mov
mov
es
jnp
icebp
jno
cmpsb
loope
testb
inc
and
jmp
mov
lods
insb
sti
mov
rcr
lods
pop
aam
inc
arpl
arpl
ret
cmp
mov
out
xchg
mov
imulb
xchg
daa
xchg
push
cmp
push
or
or
das
pop
lock
mov
jnp
into
cltd
or
test
mov
lods
cmc
add
mov
xchg
fistpll
sub
aam
into
loopne
pop
imul
pop
pushf
push
jno
daa
dec
xlat
mov
xor
enter
jle
mov
and
int
sub
cmp
mov
lcall
js
dec
insl
cwtl
add
stos
add
mov
movsl
into
mul
inc
cmpb
out
aad
inc
in
inc
mov
hlt
xchg
jae
or
xchg
mov
stc
int
int
dec
jo
jg
xchg
xchg
sbb
or
jp
and
xor
cmp
cmp
popf
out
cmpsl
pop
or
fimull
mov
mov
jb
je
mov
pop
mov
mov
stc
dec
fildl
jge
xchg
repnz
enter
and
insb
mov
xor
pop
cmc
ficomps
cmp
icebp
fldenv
add
repz
mov
sub
cs
pushf
dec
pusha
push
dec
movsb
mov
mov
test
out
dec
and
cli
ja
sub
cmp
push
jmp
jmp
pop
sub
shufps
cltd
mov
mov
rcll
jle
jl
loope
inc
cmp
mov
cmp
pop
mov
add
bswap
cmp
jmp
movsl
add
mov
mov
lcall
jp
aad
xor
inc
arpl
add
dec
mov
loopne
mov
push
les
out
cmpl
pushf
outsl
lcall
inc
sbb
stos
pop
cwtl
push
nop
mov
fsubrs
push
lret
mov
clc
adc
enter
sbb
pop
aam
or
movsb
mov
dec
imul
aam
mov
cli
dec
movsl
idivl
or
cmp
mov
icebp
mov
sbb
in
cmp
out
cmp
mov
mov
mov
pop
out
iret
cltd
js
and
popa
push
ret
push
jg
cwtl
es
xchg
dec
push
or
rclb
nop
cli
loope
xor
mov
adc
stos
and
dec
pop
sbb
popf
mov
sub
fsubr
pop
xchg
mov
add
cmpsb
arpl
add
pop
pop
or
inc
cmp
shrl
fisubrs
jo
jge
sarl
int3
mov
lods
in
cmp
mov
or
mov
jb
cmp
bound
mov
jg
shl
adc
sub
adc
xchg
sbb
lcall
mov
sub
or
or
mov
inc
bound
inc
pop
mov
movb
sbb
add
sub
jl
mov
mov
out
ror
and
push
xchg
adc
out
sub
mov
jb
fcmovnb
mov
cld
in
adc
aad
push
cmp
dec
mov
ljmp
sbb
add
cltd
daa
lds
bound
clc
aaa
shrl
lcall
xchg
pop
movsl
cmpb
cmpsl
inc
sbb
aaa
repnz
jecxz
pop
cwtl
test
decb
lret
nop
mov
mov
xchg
mov
dec
sub
stc
dec
inc
mov
aam
out
jle
mov
sub
push
aaa
lcall
les
lcall
add
jae
xchg
dec
jae
pop
mov
lahf
stc
ja
in
adc
and
nop
orl
inc
sub
cmpsb
cli
sbb
or
or
fadd
jmp
and
negl
adc
fwait
sbb
mov
xor
mov
or
fwait
and
pop
cltd
dec
test
inc
dec
sub
adc
outsl
jmp
mov
daa
add
int
and
int3
aad
xlat
daa
add
fistpll
cmp
jnp
testl
aas
cmpsb
fisubl
stc
ds
data16
adc
jne
xchg
add
sbb
mov
rclb
dec
fsubl
and
enter
lcall
lcall
cs
hlt
dec
inc
fadds
push
les
aam
dec
pushf
pop
cmp
std
mov
inc
jnp
cmpb
mov
movsb
hlt
mov
mov
pop
clc
or
mov
pusha
imul
add
rcrb
or
and
jnp
pushf
mov
ljmp
cld
outsl
mov
in
sbb
test
loope
mov
rorl
mov
pushw
adc
pop
and
ja
jp
inc
adc
or
fmul
jp
xor
lods
dec
subb
sbb
jge
xor
scas
or
test
inc
xor
or
in
add
jmp
inc
jmp
push
std
inc
sahf
or
mull
inc
inc
mov
jae
pushf
ljmp
and
jle,pn
xchg
aaa
cwtl
sub
dec
inc
sbb
jmp
add
mov
fs
pop
pop
int3
fidivrl
leave
cmpl
lcall
sbb
cmp
pop
loopne
cmp
sahf
inc
cmc
test
sti
loope,pt
fyl2x
mov
pusha
jp
outsb
cltd
cld
mov
push
xor
sbb
push
cmp
sub
sub
cld
jae
cld
inc
and
test
jnp
inc
mov
negl
add
lea
sub
pop
negl
clc
aam
into
popf
sbb
jns
lret
jge
push
fnstsw
movsb
push
leave
mov
and
addr16
mov
mov
and
in
mov
shlb
lret
std
or
test
xchg
rclb
js
call
aam
pop
adc
mov
mov
fldt
push
cltd
xor
std
xor
call
lret
fidivrl
jnp
ret
mov
dec
adc
cwtl
iret
aad
aam
sti
mov
cmp
nop
lcall
mov
xor
pop
fs
mov
dec
dec
and
mov
leave
fisubl
imul
xchg
fisubs
sub
stos
xchg
adc
ret
call
fmulp
daa
lock
push
in
repnz
fwait
xchg
fsubrl
pop
inc
stc
movb
mov
jmp
push
cmpb
mov
mov
mov
dec
or
mov
xor
nop
fsubs
shrb
movsl
cmp
enter
sub
and
fs
or
pop
inc
pop
mov
xlat
scas
jl
cmp
mov
sbb
loopne
test
call
sub
gs
bound
mov
ret
hlt
fcompl
mov
xchg
arpl
mov
daa
and
jg
jbe
sbb
js
cmp
inc
xor
pop
ja
jns
divb
mov
mov
mov
call
pop
jmp
adc
sub
mov
repz
ds
adc
sahf
jo
jp
jo
adc
ss
clc
xor
jl
pushl
jb
mov
fadds
mov
inc
pusha
xor
out
adc
call
adc
pop
xor
xor
stos
std
ficompl
cmp
dec
inc
inc
add
mov
mov
jle
and
std
cmp
adc
adc
fnstsw
inc
lods
sbb
cli
jecxz
sti
ficompl
adc
in
adc
imull
add
cmp
mov
cmp
add
push
cmp
jbe
sub
xchg
es
inc
xor
jns
xor
pusha
mov
int
daa
sbb
aad
fsts
cld
xlat
add
cmp
adc
xchg
fistl
xchg
loop
sbb
xor
inc
mov
xor
mov
shrb
mov
cmp
jg
out
cmp
aam
sub
into
outsl
push
cwtl
js
and
cmp
adc
test
and
out
roll
xor
mov
cmp
stos
cmp
ljmp
mov
pop
cmp
cmp
std
fstps
mov
sub
ljmp
cmp
pusha
shll
dec
adcb
imul
shlb
pushl
jnp
cltd
imul
mov
sbb
je
lcall
loope
push
fs
cmp
mov
inc
pop
dec
sub
mov
daa
repz
and
jb
fnstenv
std
sbb
aad
cmpsl
ret
shl
jg
fwait
cmp
sub
mov
stos
dec
push
xchg
lret
stc
mov
pop
out
push
iret
je
in
sub
pop
xorl
negb
dec
sub
push
mov
sub
iret
mov
sub
repnz
mov
out
push
es
xchg
sub
inc
fnstsw
stos
cmp
movsl
fistl
mov
icebp
pop
push
stos
inc
fcomps
dec
xchg
dec
cmp
and
or
jmp
jg
xor
mul
fnsave
inc
pop
movsb
fistps
negl
lods
mov
push
push
jp
fld
jo
stos
mov
aam
movsl
mov
pushf
xchg
ficoms
jne
add
mov
cmp
clc
dec
pop
and
jns
jns
mov
fcom
xlat
mov
repz
in
scas
adc
mov
mov
sbb
push
mov
fsts
outsl
icebp
mov
cmpsl
xchg
dec
jo
and
xchg
mov
iret
pop
xchg
cmp
cmp
scas
test
jecxz
js
aam
add
adc
mov
ja
adc
mov
testb
jo
rcrl
jne
sbb
sbb
mov
ret
roll
sub
cmp
mov
jp
mov
inc
mov
push
lcall
jp,pn
push
enter
lahf
out
push
sti
inc
xor
xor
sbb
cmp
mov
fistpl
out
popa
out
xlat
fcmovu
mov
shll
es
les
jb
pusha
lea
enter
into
mov
xchg
lret
adc
insb
xlat
ret
in
loope
add
pop
or
js
fstpl
xchg
popf
cmp
andb
cmp
mov
loopne
push
in
sti
sbb
stc
sti
push
mov
aam
xlat
or
iret
fadds
mov
stc
sbb
call
sub
pop
cmp
add
xchg
fbld
jne
xor
aaa
loopne
lcall
mov
mov
lods
test
sti
dec
insl
or
cmc
jmp
stc
adc
sbb
or
sub
cmp
jle
je
cmp
pusha
es
and
out
mov
cli
xchg
sbb
xchg
mov
jp
loopne
mov
addl
int3
and
movsl
imul
sbb
leave
push
pop
enter
cmp
mov
jl
add
in
mulb
mov
xchg
inc
mov
xor
mov
jmp
and
pushf
loop
mov
add
jmp
sbb
add
fxch
or
cmc
mov
insb
adc
inc
je
lods
jg
clc
enter
pop
cmp
addr16
mov
fbstp
mov
scas
sub
adc
fwait
cmpsl
sbbb
enter
int
mov
inc
cmovns
or
stc
add
in
imulb
mov
sti
out
repnz
xor
mov
pop
sub
cmp
ss
pop
mov
stos
xor
mov
mov
xchg
push
pusha
push
lods
xor
xlat
nop
jbe
xlat
mov
lret
sbb
aaa
mov
int3
pushf
lahf
sub
adc
add
dec
loopne
inc
mov
hlt
cwtl
jo
or
and
mov
mov
loope
mov
ja
mov
sub
ficompl
jns
popa
sti
adcb
inc
fadd
jbe
adc
xor
mov
ss
pop
cwtl
cmp
push
mov
cmc
mov
inc
aad
mov
mov
iret
insb
pop
cltd
dec
pop
mov
in
shlb
aaa
outsl
bound
dec
lods
jnp
sbb
je
outsl
push
divl
xchg
inc
xchg
mov
ljmp
xchg
loopne
cmp
roll
bound
mov
lret
subb
loopne
js
mov
test
mov
cld
insl
imul
cmpsl
out
cld
and
stos
mov
jae
pusha
clc
lods
outsb
mov
mov
xor
or
sub
inc
mov
sti
loope
mov
xchg
mov
orl
shlb
inc
cmpsb
or
scas
xorb
dec
xor
dec
lock
sti
mov
scas
xor
pop
mov
pop
ror
leave
in
enter
jmp
sbb
adc
push
aad
ret
mov
rcl
cli
add
push
fmull
ds
mov
popa
mov
shlb
add
xchg
mov
in
xchg
adc
and
test
cli
inc
pop
or
enter
iret
cmp
fmul
sbb
cltd
dec
inc
pusha
and
xor
push
inc
shll
cltd
dec
mov
add
cmc
test
arpl
test
js
lret
push
dec
xchg
xchg
xchg
mov
adc
add
or
bound
out
shlb
dec
arpl
outsl
push
and
adc
pop
add
ss
fld
iret
jb
test
mov
cmp
push
daa
stc
mov
clc
sbb
push
mov
mov
push
movsl
inc
lcall
dec
cli
out
inc
sarl
loop
push
dec
xchg
lods
cmpsl
and
inc
divl
cmc
push
pop
mov
and
push
mov
adc
fcmovnb
cmp
dec
fldcw
mov
inc
dec
dec
js
push
jns
imul
sbb
stc
xor
jge
inc
cmp
xchg
jae
popa
cmp
push
incl
pop
in
and
cmp
lds
pop
in
lret
push
testb
or
or
mov
pop
sbb
iret
mov
cmp
dec
es
arpl
cmp
in
stc
mov
stos
xor
shll
jbe
test
sbb
in
mov
or
ds
fstpl
inc
dec
es
outsl
xor
test
or
mov
pushl
mov
mov
jp
add
jecxz
cmpsb
test
out
mov
xlat
sbbb
push
and
decl
cmp
jb
inc
jae
mov
or
cwtl
movsb
sahf
sbb
jbe
add
push
lods
add
cmp
cmp
mov
iret
cmp
pop
mov
cwtl
arpl
int
or
enter
or
dec
dec
les
and
add
xor
sub
popa
mov
shll
pop
sbb
dec
mov
mov
enter
add
push
stos
cmp
cmp
push
fsub
fdivrs
pop
shll
lea
inc
adc
xor
js
push
lahf
inc
dec
mov
jecxz
into
add
cld
mov
leave
es
mov
pushf
insl
cli
sbb
pop
lahf
test
dec
les
xorb
clc
fistps
mov
arpl
mov
jbe
pop
and
mov
test
pop
mov
dec
jl
addb
inc
imul
lds
call
cmpb
popa
add
push
mov
push
scas
lcall
cltd
pushl
movsb
sub
imulb
jg
jbe
pop
inc
jle
pop
mov
mov
add
lret
adc
scas
mov
hlt
xor
call
sbb
jmp
cld
test
ss
loop
or
mov
xchg
ror
sti
sbb
inc
and
pop
and
pushf
notb
inc
xchg
lds
inc
mov
push
xchg
mov
xchg
add
mov
push
rorb
mov
cmp
cmp
mov
inc
clc
cpuid
testl
pushl
outsl
xorb
cmp
scas
std
arpl
leave
outsl
add
push
sahf
adc
inc
fxam
jl
pop
stc
es
adc
push
mov
incl
leave
mov
aas
mov
push
negb
xor
xchg
loopne
jp
loope
sbb
subl
enter
pusha
lret
mov
mov
out
jecxz
xor
sub
mov
sbb
rolb
mov
adcl
jl
jae
and
arpl
mov
pop
scas
pop
sub
xor
mov
cmpsb
xchg
pop
dec
call
sub
ret
ds
xor
mov
mov
mov
push
mov
pop
sbb
cld
cwtl
or
loopne
inc
mov
gs
sbb
xchg
mov
jnp
pop
jge
jmp
sbbb
mov
sub
inc
loopne,pt
xor
push
xchg
or
in
sub
mov
mov
mov
flds
xlat
movb
mov
mov
lret
lret
xor
jnp
out
fldl
testb
cmc
scas
lods
shl
cmpsb
xorl
fsubp
mov
icebp
test
sbb
inc
icebp
mov
push
insb
xchg
jne
fnsave
shll
repnz
sbb
rcrl
adc
sarb
stc
lret
les
popf
lods
xor
loope
mov
mov
dec
xchg
cmc
push
fistpll
mov
dec
xor
lret
stc
cld
jbe
icebp
outsl
push
sbbb
loopne
call
addr16
cmp
jl
jl
sbb
fbstp
inc
jne
daa
dec
and
push
je,pn
dec
jo
xchg
cli
outsb
sar
lahf
fnstcw
lcall
sti
pop
mov
mov
sub
cli
add
pop
movsl
clc
mov
mov
out
orb
fidivrs
mov
fidivl
inc
xchg
add
lods
sbb
ret
cmp
sub
pop
enter
adc
mov
aam
ficoml
mov
into
movsl
dec
sbb
push
cmpsb
stos
shlb
cld
je
stc
xor
int3
cmp
cld
outsb
cltd
and
shl
fldt
stos
xlat
cli
mov
xor
fldcw
data16
jo
test
xor
popf
sar
cmp
clc
jo
popa
jnp
add
sbb
adc
test
mov
arpl
sub
pop
test
loope
mov
push
aas
pusha
nop
pop
fnstenv
jo
adcl
jne
inc
mov
leave
imulw
rorl
daa
mov
ds
xor
jbe
popa
cmc
mov
mov
shrb
xchg
out
sub
iret
xor
push
das
sbb
xchg
pop
imul
out
mov
lahf
addb
mov
sub
pop
mov
inc
mov
loopne
and
pop
ds
mov
std
mov
cmp
mov
adc
outsb
adc
aaa
inc
cmpsb
or
xchg
mov
fimull
mov
mov
mov
mov
cmp
xlat
adc
addr16
sub
outsl
clc
mov
bound
in
mov
cs
bound
leave
jnp
cmc
addr16
mov
imul
pusha
or
daa
mov
sub
stos
outsl
pop
in
aaa
add
jno
cmc
repnz
aas
xor
inc
mov
fists
cwtl
cs
cmp
fbld
dec
dec
shrb
dec
adc
sbb
cld
inc
negl
push
test
xchg
fsubr
dec
stc
inc
pop
clc
aas
adc
add
dec
jp
enter
ss
dec
outsl
dec
int3
pop
pop
clc
cmpb
pop
mov
nop
hlt
xor
sbbb
repz
pop
iret
cltd
call
ret
add
pusha
pop
cld
sub
mov
and
loope
and
push
fstpt
rclb
jmp
aam
fdivrs
daa
pop
lods
call
rclb
sbb
add
pop
adc
xchg
roll
dec
stos
mov
pop
dec
add
lea
cmp
push
pop
dec
sub
movsl
pop
shl
bound
inc
ret
push
pop
mov
pop
rcr
out
sub
nop
add
dec
and
pusha
aam
mov
clc
mov
xor
xchg
xor
popl
or
mov
jle
popa
and
scas
jbe
mov
adc
sbb
subb
or
dec
insb
mov
fsubr
ljmp
adc
add
cmp
rclb
enter
imul
ljmp
rolb
mov
push
mov
into
add
mov
mov
std
cmp
mov
push
jmp
ficompl
sbb
xor
cmp
inc
cmp
lock
xor
in
cmpl
cmpsl
cmpsl
mov
mov
call
lds
mov
pop
cli
mov
aam
aaa
dec
and
mov
popf
and
cmp
inc
cmp
filds
ljmp
or
sti
sbb
test
enter
pop
in
dec
xor
adc
loopne
ljmp
mov
stos
mov
xlat
cmpsl
negb
jp
xor
out
inc
dec
jp
out
int3
jae
cmp
mov
xlat
pop
in
test
cmc
mov
ja
lods
mov
cli
in
call
mov
pop
fcmove
hlt
lcall
mov
pop
jmp
or
add
adcb
xchg
jnp
stc
mov
mul
loopne
mov
incb
mov
das
aam
andl
add
shrb
mov
cltd
sbb
dec
leave
jbe
lea
sbb
push
insl
fsub
sbbb
add
dec
js
daa
leave
push
mov
mov
mov
cmpl
sarl
xorb
cmp
pop
test
dec
jp
push
popa
dec
mov
add
pop
pop
fldt
data16
into
push
les
mov
mov
add
xor
mov
dec
scas
rolb
cmp
movsb
mov
mov
sub
mov
loop
jmp
test
fwait
and
repz
pop
frstor
outsl
sarb
loopne
push
es
inc
jb,pt
xchg
aaa
loopne
add
push
cld
or
mov
mov
sarb
or
jns
mov
xchg
lds
stos
jne
subb
das
fucomp
push
add
sar
adc
adc
fstpl
jns
enter
pop
cmp
or
sbb
mov
xchg
add
cwtl
sub
jns
sbb
dec
mov
lret
and
dec
push
test
cwtl
add
loop
mov
sarl
lea
mov
aaa
leave
jns
cli
stc
insb
xor
lock
loope
cmp
jb
mov
inc
ds
out
arpl
mov
pop
popaw
mov
popf
stc
rol
and
xor
stos
push
lret
mov
mov
sub
call
mov
xchg
mov
rclb
out
filds
push
mov
fcomps
in
adc
xorl
jmp
mov
popa
jp
sti
movsb
and
mov
ljmp
cs
arpl
int3
jp,pt
and
and
xchg
mov
cmp
push
movsb
movsl
mov
xchg
mov
outsl
aad
inc
pop
sbb
cmp
clc
lods
mov
mov
sar
sub
movsb
repnz
in
jns
movsl
subb
les
insl
and
loope
sahf
cld
inc
fisttpll
enter
out
pop
insl
cmp
data16
cmp
mov
call
cmp
dec
jecxz
sub
push
sbb
or
ret
pushf
mov
pop
add
movsl
adc
pushf
mov
sbb
cmp
lret
iret
mov
and
stc
jne
dec
call
rcr
fcoms
xchg
push
fldl
mov
mov
clc
dec
imul
repz
inc
sub
stos
shrl
dec
xor
rorb
pop
sub
jge
sarl
enter
mov
je
mov
aam
shl
enter
add
dec
fisubs
jo
mov
mov
sti
not
jmp
jecxz
xor
xlat
mov
int3
cmp
jecxz
pop
pop
rol
pushl
movsb
add
int
popf
outsb
mov
pop
aad
fcoml
pushf
addr16
test
mov
ljmp
scas
sti
sub
push
cmp
pop
sub
inc
mov
pop
sub
movsb
cmp
lret
inc
cmp
lds
pop
mov
jl
jmp
jp
lret
mov
mov
test
stos
leave
jmp
jecxz
mov
mov
jnp,pt
lcall
insl
and
push
loopne
clc
out
shll
out
pop
jae
inc
cmp
mov
dec
outsl
add
sbb
mov
sbb
imul
bound
stc
insb
in
into
adc
inc
test
daa
jbe
hlt
shlb
mov
mov
ss
mov
pushf
or
pop
sub
enter
sbb
add
inc
mov
mov
mov
cmp
dec
clc
sbb
mov
mov
addr16
cmp
sbb
insl
fwait
mov
cmpsl
negb
fistl
mov
data16
mov
mov
sub
cmp
shll
bound
es
cwtl
mov
mov
mov
adc
mov
or
push
fdivs
pop
mov
and
stc
xchg
and
daa
aam
xlat
idivl
std
fstpt
aam
out
leave
cmp
aam
mov
sbb
int3
fidivrl
shlb
cwtl
adc
sbb
cwtl
mov
lds
dec
test
adc
xlat
mov
arpl
pop
lods
aad
jle
cwtl
out
mov
mov
or
ds
mov
push
cltd
scas
inc
cwtl
dec
add
shll
jnp
mov
cli
popaw
fcomps
leave
sbb
ds
sbb
inc
js
imul
arpl
jb
fistpll
lock
mov
and
and
pop
cs
mov
arpl
add
inc
movsb
jle
sub
pusha
and
out
icebp
and
jecxz
cld
inc
xor
mov
fistpll
mov
stos
in
mov
cmc
inc
out
xchg
cmp
inc
sbb
jmp
imul
mov
mov
les
movsb
pusha
dec
into
mov
cmp
aaa
pop
clc
sbb
std
add
pop
cmp
shrb
lea
sub
lcall
jmp
inc
adc
sti
lcall
inc
mov
orb
mov
movsb
lods
add
sub
cmp
xor
mov
mov
lock
sbbl
in
outsb
xor
push
lret
cmp
push
mov
es
mov
cmp
cwtl
call
mov
xor
lret
ret
iret
jecxz
mov
add
stos
or
xchg
sub
push
nop
dec
in
push
ljmp
mov
imul
daa
sbb
cli
xor
shlb
mov
ss
sarb
dec
rol
inc
js
mov
ffreep
jecxz
cmp
clc
fsubrs
shlb
mov
sbb
mov
mov
lret
les
jecxz
in
fstl
pop
sti
push
or
je
push
cld
jne
les
xorl
push
pop
in
cmpsl
mov
dec
cli
push
or
add
fistpll
sbb
xchg
iret
not
int3
cmp
xchg
daa
shlb
mov
iret
shlb
loopne
shll
addr16
pop
into
mov
pop
jae
xor
movsl
stc
mov
push
cltd
in
xchg
inc
es
repz
cmpsb
lcall
sub
mov
mov
icebp
sub
mov
mov
fldl
addr16
inc
inc
or
daa
iret
ret
xchg
xchg
int3
enter
insl
cmp
pop
xchg
sbb
mov
icebp
mov
xor
sbb
add
cmpsb
jbe
pop
dec
add
mov
mov
adc
push
jne
lcall
cmp
or
es
fstpl
fbld
pop
sbb
adc
loopne
fldt
push
pop
jp
mov
jp
mov
or
inc
ds
add
xchg
hlt
mov
es
mov
popa
adc
cmp
push
mov
and
ds
sbb
and
fwait
or
sub
adc
loop
int3
sarl
mov
es
test
mov
jne
cmp
cmp
sarl
and
arpl
adc
xchg
out
pusha
imul
shrl
movl
test
pusha
mov
out
inc
mov
jp
jb
imul
call
jns
cmp
pushf
sub
test
add
or
mov
cmp
stc
mov
mov
aas
mov
aad
int3
fisubrl
xchg
in
xor
call
pop
cs
mov
movsb
mov
popa
dec
lcall
cmpsl
shl
fwait
mov
jns
nop
cmpb
dec
cmp
mov
jae
mov
cld
push
imul
or
and
enter
and
std
sub
and
pop
pop
imul
pop
mov
aad
loop
mov
xor
stc
mov
add
add
inc
adcl
stc
mov
ljmp
adc
jo
and
cmp
xchg
mov
popa
sub
sbb
unpcklps
lea
hlt
fnstenv
adcb
int
out
pop
adc
mov
mov
rolb
ficompl
cmpb
out
pop
jns
fdivs
jl
push
jecxz
cs
cmp
jle
or
repz
cmp
sbb
mov
cld
xor
clc
rcrb
and
jb
in
cmpsl
sub
jl
and
sub
and
mov
and
decl
dec
enter
std
mov
nop
daa
push
inc
dec
cli
xchg
jo
dec
or
jmp
add
sahf
inc
mulb
dec
sarl
sbb
add
inc
sbb
pop
jecxz
enter
add
jmp
out
cli
xor
fisubs
and
test
and
and
dec
in
mov
cli
dec
sbb
es
es
sbb
lahf
mov
lahf
adcb
lea
push
sarb
lock
js
sub
shrl
and
andl
bound
cmp
loop
sbb
push
and
lahf
lea
xor
inc
xor
add
xadd
mov
sbb
nop
es
pop
subb
mov
mov
pop
pusha
mov
xchg
mov
mov
loop
mov
stos
shll
push
sub
daa
arpl
pushf
inc
in
popa
mov
pop
dec
push
cld
mov
dec
enter
mov
add
fcompl
adc
mov
dec
outsb
cmc
pop
out
mov
mov
scas
xor
mov
push
insl
push
pop
ja
xlat
mov
dec
clc
lret
mov
cmpb
shll
loopne
fsubs
jbe
jnp
xor
lahf
addr16
jo
cmpsb
sbb
push
stc
sub
jne
sub
sbb
mov
xor
aam
subl
lret
adc
mov
pop
inc
cwtl
adc
adc
enter
bound
fcomps
or
dec
xchg
arpl
enter
nop
out
andl
arpl
sbb
ficompl
mov
loope
mov
dec
xor
sub
mov
lcall
js
cmp
or
shlb
push
nop
ss
sub
pusha
js
mov
cmpsl
loop
int
cmp
or
js
inc
jecxz
subl
repz
dec
mov
pusha
hlt
mov
and
sbb
mov
inc
dec
sbb
fldcw
mov
sbb
addb
sbb
sub
enter
mov
jecxz
sub
das
movsl
sub
lcall
jmp
rorl
mov
stc
mov
cmpsl
pop
push
cltd
sub
mul
mov
jnp
es
arpl
js
xlat
cmp
clc
movsl
xlat
xorl
mov
xchg
lcall
enter
mov
ds
clc
cltd
mov
fldt
dec
cmp
xchg
jp
mov
mov
jb
imul
div
cmp
cmp
mov
mov
sbb
and
addl
mov
popa
arpl
mov
mov
popf
xchg
fwait
icebp
or
rcrl
pop
push
call
popa
mov
addr16
and
and
loope
pop
push
or
mov
push
test
sub
cmp
and
lods
roll
test
test
add
das
dec
and
out
je
adc
fcmove
sub
roll
dec
out
lcall
pushl
cmp
js
fdivrs
stos
enter
cmp
inc
mov
sarl
mov
stc
xchg
sbb
popa
and
fmuls
sub
adc
mov
mov
subl
rcrl
into
mov
push
fs
cli
sti
mov
mov
in
rcrb
enter
push
sub
out
jmp
jnp
shlb
loop
orl
lahf
pusha
and
lcall
test
in
sbb
fidivrl
cmpsl
stc
jnp
pop
test
cmp
inc
shlb
xchg
xor
fsubrl
fldt
lods
sub
jmp
ficoml
ret
mov
in
or
sub
outsb
enter
sbb
enter
cmp
ror
dec
sti
iret
inc
push
aam
push
stc
ftst
mov
sbb
pop
mov
sarb
adc
stos
je
cli
push
mov
sbb
dec
aam
cmp
add
test
mov
add
movsb
loope
jl
fwait
subb
daa
add
xor
popa
sub
inc
add
mov
cmp
sbb
or
cmp
xchg
mov
in
faddl
mov
arpl
mov
daa
test
mov
subl
outsl
js
dec
sub
cmpsl
inc
cmp
mov
popf
arpl
cmp
mov
push
sbb
outsl
stos
mov
insb
jp
test
mov
lock
mov
ds
into
fldpi
popf
adcl
jmp
daa
loop
cmp
inc
ljmp
sbb
or
mov
and
push
add
aas
inc
xlat
rsm
jns
leave
cmpsb
clc
popa
mov
mov
cmp
mov
push
dec
and
mov
mov
mov
fists
mov
imul
js
mov
jmp
loopne
shrl
ds
test
std
and
les
fcoms
cmpb
mov
out
enter
mov
push
in
mov
stos
jmp
int
dec
pop
cmp
push
and
sub
dec
outsl
xor
sbb
xlat
mov
idivl
gs
mov
mov
adc
outsb
xor
push
inc
mov
ds
dec
movlps
jp
std
jge
popa
das
repnz
mov
or
movsb
mov
es
mov
ljmp
cmp
in
cmp
dec
mov
icebp
xchg
mov
mov
adc
fcoml
cmp
push
sub
test
test
jl
xchg
cmp
jmp
mov
cmp
xchg
mov
scas
cmp
pop
mov
push
fldt
mov
nop
shlb
je
add
add
popa
sub
mov
cwtl
adc
popa
xchg
mov
fnstcw
cmp
and
fldl
call
out
es
divb
mov
xchg
rorb
lcall
dec
das
les
jmp
out
cmp
mov
aam
in
rorl
jns
lea
xor
clc
cmp
xchg
roll
xor
clc
pop
xchg
das
sbb
popf
pop
dec
lods
push
push
add
shl
add
cld
test
mov
leave
daa
jns
loope
sbb
cmp
inc
into
ret
mov
add
pop
div
stos
mov
cmpsl
mov
xor
sahf
cmp
push
sbb
lds
and
out
rep
mov
and
mov
jge
arpl
add
inc
mov
inc
out
sbb
mov
test
popf
cmp
stc
mov
dec
cwtl
int3
cld
mov
push
jmp
pop
mov
iret
aas
fdivrs
cmp
subl
fcomps
stos
lcall
mov
dec
stos
xchg
xchg
test
add
es
pusha
or
cmp
sbb
or
sbb
and
sar
fidivrl
add
xlat
sub
cmpsb
andb
xor
shll
fsts
cmp
push
inc
jg
stc
mov
cmpsb
pop
or
mov
mov
js
ret
lock
xchg
or
cmpsb
addr16
adc
movsl
fdivs
aaa
pop
push
cmpsb
push
aas
mov
dec
dec
pop
out
xor
sahf
xchg
and
dec
rcrb
sbb
mov
icebp
sbb
fs
pop
jmp
lret
xchg
jo
sbb
daa
movsb
mov
inc
out
add
or
pop
sub
cmp
fdivrs
cld
daa
sbb
xchg
les
adc
loope
out
and
loopne
sub
ljmp
data16
shlb
mov
cmc
cld
fcompl
dec
jb
loopne
fwait
aam
inc
adc
rorb
pop
mov
cmp
imul
and
xchg
shlb
call
and
sub
xchg
cmpsl
push
xor
add
es
addb
leave
mov
arpl
cltd
mov
bound
cmp
pop
cmp
pop
mov
inc
jmp
insb
mov
fsubrs
out
xor
mov
es
cmc
incb
dec
xchg
pop
xchg
jge
loopne
inc
pop
dec
shlb
aam
sbb
sti
inc
cmpsl
pop
cmp
leave
loop
fisttpl
mov
push
and
mov
cmp
inc
cmp
and
inc
cmp
mov
cmp
out
jle
pop
jl
fmuls
xlat
fbstp
mov
sub
cmp
adc
sbb
adc
mov
fldt
enter
mov
pop
xor
mov
mov
leave
or
mov
mov
dec
pusha
mov
sub
mov
stos
cmp
sub
cmp
lods
js
ret
ficompl
inc
repz
push
fs
popa
imul
pop
mov
arpl
cmp
sti
sbb
das
cmp
outsl
dec
inc
pop
mov
sbb
scas
sti
lods
cmp
or
pop
push
mov
ret
mov
and
pushf
mov
fstpt
shll
in
daa
xlat
mov
in
inc
jp
fmuls
shrb
addr16
push
popf
nop
sub
movsb
adc
mov
dec
test
xchg
nop
fistpl
sub
aad
out
jne
and
call
mov
andl
and
iret
mov
add
data16
test
sub
and
or
rcl
pop
push
es
insl
mov
stc
dec
and
pushf
push
and
fistps
or
or
cld
enter
call
mulb
loope
jl
das
dec
jo
je
in
cmp
sub
mov
jo
test
add
in
mov
dec
add
outsb
add
bound
test
push
mov
in
cmp
jl
aas
test
movsl
or
xor
fistpll
mov
test
mov
stos
dec
int3
and
mov
sbb
rorl
push
jle
cmp
les
cwtl
enter
xor
pop
mov
push
xchg
jae
stc
pop
int3
push
test
out
mov
movsb
fstpt
push
jmp
mov
test
pop
enter
sbb
lret
cwtl
mov
andb
mov
test
sbb
fyl2x
outsl
ds
bound
push
lret
js
in
rcr
mov
lods
inc
mov
jecxz
cmp
inc
sbb
scas
and
xchg
aas
inc
xchg
mov
rcr
jg
lea
aas
aam
mov
adc
and
pop
fldcw
sbb
push
cwtl
adc
clc
daa
mull
pop
aam
jp
and
mov
xchg
fistl
arpl
adc
mov
jo
xor
dec
pusha
addb
aas
and
scas
and
sub
inc
fcmovbe
cmp
mov
fldenv
out
ficomps
cld
movsb
pop
add
jmp
aam
lret
add
sbb
popf
and
sti
mov
cmp
in
pop
cmp
mov
cmpb
sbb
in
inc
jbe
xor
cmc
popf
leave
es
dec
push
lcall
inc
dec
add
cmpb
push
sub
inc
lods
cmp
or
xchg
mov
int3
pop
sub
sbb
fabs
mov
loope
jl
and
pusha
or
nop
aaa
js
xor
sbb
adc
subl
imul
ss
pop
mov
xor
arpl
icebp
mov
mov
rolb
cmp
leave
lcall
addr16
and
xor
addr16
repnz
ja
clc
sbb
xor
fldenv
jae
cmp
mov
push
dec
pop
fsts
stc
fwait
sub
pop
adc
cmp
mov
shlb
sarl
clc
or
cmp
jns
div
inc
pop
cs
pop
mov
scas
test
xlat
adcb
mov
into
aaa
mov
cmp
adc
xor
mov
mov
xor
cmpsl
shrb
add
negb
push
pop
test
out
cmp
mov
out
mov
sbbb
scas
pop
push
es
mov
cmp
dec
roll
call
movsl
fists
dec
jno
sbb
mov
ja
jge
mov
jns
mov
repz
enter
adc
mov
jg
enter
cmp
fwait
jge
movsl
mov
adc
or
lock
jg
add
mov
fistpll
mov
out
xchg
addr16
in
push
divl
pushf
aaa
mov
lds
xor
inc
insb
mov
mov
jg
mov
inc
or
dec
inc
outsb
cmp
fldl
cmp
ret
mov
test
mov
lods
out
pop
js
comiss
pop
mov
mov
inc
fisubl
rorl
xchg
jb
xchg
ljmp
and
lds
sbb
idivl
or
and
jecxz
adc
mov
mov
enter
aad
stc
neg
pop
pop
rclb
pmulhw
add
push
jg
pop
mov
scas
mov
jmp
iret
xor
mov
dec
je
in
stos
les
clc
cli
push
cmpsb
jge
std
xchg
fstpt
mov
xchg
rcrb
rcrb
shll
sbb
mov
adc
mov
sub
xchg
mov
adc
or
call
mov
les
mov
cltd
clc
cwtl
inc
out
xchg
mov
js
fdivrs
arpl
mov
fidivs
xchg
mov
test
enter
repz
negl
mov
inc
pop
rorl
mov
mov
daa
es
jno
fstpt
mov
mov
xor
sbb
das
mov
mov
fdivs
sbb
mov
fwait
sbb
xor
mov
jo
add
js
cmp
adc
nop
sbb
test
dec
pop
cmp
sbb
out
loopne
add
imul
popf
mov
imul
ss
paddusb
jl
daa
xchg
stos
imul
outsb
loope
pushf
pop
cmp
aas
add
mov
test
mov
adc
jnp
in
sbb
and
sbb
fst
daa
in
or
add
inc
mov
cmp
add
movsb
shll
in
mov
push
aam
sbbb
movsb
popf
outsb
test
test
shl
dec
rcll
clc
sbb
xchg
xchg
stc
push
addr16
out
lcall
ret
push
lcall
fs
cmp
subb
cmpsl
xor
sbb
xor
fisubl
cmc
pushf
xchg
fsts
test
sti
cmp
dec
jo
pusha
mov
xor
mov
or
jmp
pop
clc
inc
pop
sahf
push
sub
in
inc
dec
imul
dec
es
add
js
sbb
cmp
mov
roll
jnp
mov
test
cmp
or
mov
sub
sti
cmp
movsb
xor
stc
les
jno
sub
cld
stc
mov
add
insb
mov
fsts
dec
or
adc
andb
call
stos
cmpsl
dec
pushf
xchg
sub
fstl
or
subb
jge
jo
cmc
data16
repnz
cs
mov
jle
xor
test
aad
mov
fdivrl
out
loopne
xchg
pop
lds
mov
mov
or
cmp
xor
enter
aaa
jmp
cmp
and
loop
je
test
mov
push
mov
adc
fisubs
jg
ss
xchg
aaa
popf
leave
cmp
cmp
sub
fidivl
std
add
int
cwtl
jge
mov
inc
add
sub
loop
jns
imul
sbb
sbb
cmp
idivb
clc
fcomps
fiadds
sub
cs
pop
jo
mov
jns
es
cmp
lret
cmp
add
icebp
and
outsb
xor
xchg
cmp
inc
mov
pop
mov
inc
sbb
mov
sub
std
mov
std
repz
aad
shll
pop
jbe
mov
mov
sub
sub
or
add
jecxz
stc
push
cmpsb
mov
sbb
mov
cmp
sub
sub
mov
leave
fsubs
ror
stc
fdivrp
mov
ret
sub
in
incb
int3
push
mov
jb
subb
dec
mov
mov
repnz
pushf
bound
mov
lret
adcb
cmp
insl
leave
fdivrs
mov
adc
lods
and
movsl
es
cmp
sbb
mov
pop
cmpsl
sub
sub
mov
aam
das
scas
cmpsl
out
fwait
mov
std
sub
dec
mov
out
mov
cmpsl
out
fisubrl
imul
sub
es
xlat
pop
push
out
arpl
dec
fwait
ss
adc
dec
inc
mov
sub
ljmp
loopne
dec
test
fsubrp
cmp
scas
jmp
mov
push
mov
jle
lods
lcall
int3
ds
inc
js
repnz
or
cmp
sbb
mov
pushf
test
mov
and
pop
mov
fcoms
mov
sbb
ss
and
sbb
fnstsw
dec
fstpt
pop
jbe
cmpsl
addb
lcall
xchg
adc
fdivrl
and
mov
cmp
pop
lods
adc
jmp
add
xor
mov
dec
sub
andb
mov
sub
fdivrs
rcrl
xor
mov
dec
and
mov
cmp
cltd
fs
pop
fadds
inc
call
enter
test
ljmp
inc
dec
ret
lcall
and
scas
pop
das
shrl
loope
xchg
test
popf
not
xstore-rng
cmpsl
andb
call
inc
pop
sub
jne
movsl
movsl
inc
sbb
test
dec
add
and
mov
xor
jp
sbb
mov
pop
ja
pop
out
cmpsl
inc
xlat
adc
inc
pop
test
arpl
cmp
movsb
in
popf
rcl
cmpb
mov
and
test
mov
mov
xchg
fsub
pusha
aas
mov
xchg
arpl
mov
cmp
adc
int
or
test
shll
imul
and
sub
xor
or
or
pusha
lret
fdivs
cli
daa
mov
pop
test
fcomip
leave
mov
loope
fsincos
std
sarb
lea
and
cmpl
mov
mov
adc
jns
ret
popf
cmp
push
insb
jns
scas
pop
and
and
mov
lret
sti
xlat
fcmove
pop
fdivrs
inc
inc
test
rolb
cwtl
or
adc
mov
pop
push
adc
nopl
mov
push
push
test
enter
cmp
insl
jp
pop
or
fsubp
xchg
or
pop
sub
mov
or
cld
stc
sub
ja
test
xchg
cmp
ds
out
lret
int
mov
xor
sbb
cmp
js
lock
pop
push
cmp
in
movsb
jmp
mov
fdivrp
jmp
mov
add
fwait
sub
scas
dec
lcall
mov
mov
vmovdqa64
rcl
jg
adc
jp
cmp
mov
xlat
movsb
clc
loopne
loope
cmp
push
mul
xor
int
bound
add
vphaddwq
clc
dec
or
or
pop
cmp
push
rolb
cltd
cld
scas
sbb
inc
and
inc
mov
sbb
ss
and
sti
cmpb
add
ljmp
mov
bound
subl
bound
addb
mov
sbb
scas
lcall
cs
xor
mov
stos
scas
mov
sbb
hlt
pop
mov
stc
mov
stc
jns
int
stc
sub
movsl
in
inc
int3
fistpl
das
jns
and
out
fwait
dec
leave
jl
in
and
mov
push
loope
sub
dec
mov
std
movsb
loopne
in
div
inc
outsb
sbb
in
jle
test
roll
stos
std
mov
inc
push
scas
pop
xor
dec
fsub
dec
fsubs
adc
ss
cmc
imull
dec
ret
lcall
add
and
loope
cmp
xor
cwtl
or
jecxz
inc
lcall
dec
jo
scas
stos
inc
mov
dec
test
lahf
rcrl
sub
mov
mov
push
aaa
cltd
pop
pop
ja
subl
cli
adcl
clc
push
pop
push
clc
inc
fadds
mov
sbb
sbb
stc
mov
xor
cmp
dec
mov
mov
add
push
cs
mov
mov
xor
sub
mov
movsb
loopne
addb
lods
ljmp
push
arpl
dec
mov
data16
pop
pop
cmc
ja
call
fcoms
nop
icebp
leave
cmp
addr16
sbb
and
loop
jnp
fsubs
cmpl
push
mov
jge
mov
or
int
fs
cmp
adc
mov
mov
mov
mov
mov
or
sbb
out
test
popf
cmp
fcoms
mov
fmul
loop
sbb
pushf
push
fwait
stc
mov
inc
mov
sarb
in
inc
in
mov
mov
inc
aas
andl
mov
xor
js
inc
clc
pop
mov
stc
mov
push
cmc
pop
push
fsubs
sbb
out
xchg
mov
pop
inc
or
ljmp
shr
scas
adc
pop
mov
repnz
mov
arpl
mov
pop
mov
cmp
xchg
fnstsw
cmpsl
mov
or
sarl
subb
fs
cmp
xchg
or
arpl
push
mov
add
cmp
lea
mov
xor
mov
sti
and
or
test
jecxz
es
and
lds
enter
sbb
pop
std
icebp
adc
loope
push
jg
mov
dec
jecxz
es
outsl
dec
mov
dec
or
xor
mov
mov
ret
dec
adcb
mov
sbb
jmp
cmp
sbb
adc
pop
andl
ljmp
cmp
mov
lahf
int
repz
addb
ds
xchg
int
push
cmp
cmp
aam
jns
mov
stos
and
pop
add
sbb
adc
jmp
inc
aad
mov
je
stos
shrl
inc
mov
xor
out
mov
movsl
negb
cmpsb
mov
push
cmp
push
pop
and
leave
in
es
mov
addr16
popa
daa
mov
pop
xchg
adc
cmp
into
pushf
cwtl
mov
cmc
mov
and
mov
mov
jb
mov
cmp
lea
mov
xor
add
jnp
sbb
add
enter
out
sbb
in
ss
xor
mov
pop
aam
xchg
xor
cmp
inc
test
jo
in
call
addr16
jg
dec
mov
sbbb
popf
push
int
sub
mov
mov
mov
lcall
inc
cmp
mov
pop
xor
jl
fisttps
out
cmp
inc
cli
push
push
mov
or
out
inc
push
jl
push
sbb
in
jno
test
popa
and
pop
bound
ljmp
add
stos
std
sub
push
cltd
int
mov
mov
mov
mov
pop
mov
mov
clc
negb
daa
clc
and
cmpsb
pop
pop
sti
xchg
pop
sti
cmp
mov
mov
fwait
sub
pop
icebp
mov
and
pop
sbb
sbb
or
fxch
mov
int3
ret
xchg
orl
cmp
js
fadds
adc
mov
push
sti
cli
dec
cmp
mov
in
ljmp
popf
lods
push
mov
mov
lock
mov
lods
es
add
push
xlat
mov
mov
sbb
ds
pusha
inc
bound
jnp
pop
mov
ss
mov
lahf
push
cmp
fbstp
shr
lds
js
mov
and
pushf
dec
gs
mov
dec
lds
mov
insb
hlt
mov
loope
outsb
loop
inc
test
mull
clc
add
mov
inc
sub
mov
out
loope
mov
addb
mov
pusha
or
sahf
inc
test
shll
lret
jns
out
mov
int3
mov
ja
jo
sub
scas
mov
mov
mov
imulb
pop
sbb
push
sub
mov
push
and
sbb
nop
push
divb
mov
xor
aas
lods
xchg
cli
sub
push
add
out
add
mov
in
pop
loop
int
sbb
subb
enter
cmp
pop
nop
js
pop
loope
adc
mov
cmc
lret
push
mov
mov
es
ror
pop
jo
pextrw
je
lret
enter
sbb
pusha
pusha
jg
loope
ja
dec
sti
pop
sbb
stc
sbb
xchg
hlt
shr
aaa
xchg
and
xor
jmp
mov
lods
pop
mov
jg
cmp
jns
jl
divl
ds
and
mov
sarb
stos
xchg
jmp
cmpsl
out
cmp
cmp
fcmovne
fbstp
cmp
adc
imul
adc
cmpsb
add
imul
cmp
jae
adc
push
sub
mov
lea
pop
push
dec
xor
cli
and
mov
fstps
test
cmp
pushf
xor
bound
push
or
dec
shl
cmp
sti
fdivp
sub
shl
sub
ret
mov
jne
or
jne
cmp
pop
xorb
mov
jmp
lret
and
xor
out
outsb
xor
mov
dec
and
or
push
mov
sub
mov
neg
add
in
jp
sbb
cmp
inc
xchg
xchg
cmp
subl
outsl
push
fisttps
das
add
test
bound
fiaddl
mov
mov
jbe
sarb
movsb
cmpsl
lahf
xchg
cmpsb
fistpl
repz
fxch
jo
add
mov
and
cmp
fisubs
call
and
push
dec
movsb
and
cld
mov
stc
cmp
mov
mov
movsb
mov
in
fnstcw
xchg
push
xchg
mov
cmp
pop
adc
mov
push
mov
lock
cld
test
add
jbe
adc
pusha
and
mov
inc
mov
lret
mov
push
icebp
fistl
mov
mov
test
cmp
loop
lock
cltd
jle
aad
icebp
in
inc
sbbb
and
dec
push
aas
enter
xor
scas
xor
mov
cld
jp
insl
and
push
call
push
xchg
mov
and
mov
popa
mov
add
pusha
stos
mov
repz
addr16
sbb
cmp
hlt
cmp
mov
addr16
aam
lea
imul
pop
lds
or
xchg
fidivl
jns
xor
es
clc
and
add
sbb
pop
pop
mov
or
jno
notb
in
push
pushf
adc
mov
js
push
movsb
imul
mov
lcall
dec
sub
sbb
jae
pushf
and
stos
push
push
dec
xor
bound
vpshufb
mov
out
push
movsl
sub
es
subl
ret
mov
shll
testl
sub
sbb
and
jno
sub
ss
dec
pop
sub
add
xor
call
test
lcall
jmp
mov
dec
out
add
cmp
repz
inc
xlat
lds
lcall
in
sbb
inc
test
mov
addr16
dec
mov
shrl
jb
shrl
mov
and
incb
xor
movsb
mov
loope
cmp
xchg
nop
ja
xlat
dec
icebp
stos
loop
movb
ss
mov
xchg
inc
stc
addr16
in
jp
add
cs
sahf
lahf
dec
fsubs
xchg
pop
mov
dec
add
aaa
stos
jne
push
mov
mov
insb
xchg
inc
mov
sub
pop
dec
aam
mov
sub
mov
fisttpl
sbb
mov
sub
pop
xor
loopne
clc
cs
lds
cmp
mov
ds
jle
repnz
test
jecxz
mov
pop
clc
xchg
jae
test
imul
pop
std
movsl
loope
scas
adc
arpl
repz
cmc
in
cmp
mov
cmpl
popl
cmp
cmp
and
leave
mov
cli
sbb
jne
mov
leave
scas
xchg
and
stos
aaa
pop
popa
push
push
test
mov
push
jb
cmp
mov
mov
mov
dec
repnz
sbb
cwtl
jb
sbb
lock
and
pop
inc
movsl
test
xchg
jns
xor
pop
ljmp
scas
mov
sub
scas
xor
rorb
xlat
xor
movsl
repz
fwait
mov
sbb
ds
ljmp
mov
sub
and
fldcw
lea
cmpb
negl
mov
popf
repz
pushf
movsb
sbb
call
xchg
inc
out
jecxz
rorl
sbb
roll
insb
jle
popa
fisttpll
int3
call
inc
inc
mov
mov
xor
mov
out
dec
mov
add
lcall
test
and
jbe
cmp
push
fwait
jl
stc
mov
mov
and
fisubl
fisttps
mov
mov
fiaddl
mov
sbb
notb
dec
cmpsl
jg
scas
xor
mov
dec
and
pop
loop
mov
push
pop
dec
mov
jl
lcall
lcall
dec
push
fwait
jmp
jp
outsl
sti
push
mov
pop
int3
movsl
mov
mov
scas
mov
inc
fldcw
test
xor
repnz
mov
xor
nop
cli
fisttpl
test
leave
xor
jo
ljmp
jo
in
ljmp
push
sub
mov
adc
xor
aad
mov
pop
xor
lcall
cmc
mov
fisttpl
in
lods
test
repz
jge
sub
cmc
test
push
mov
xor
mov
sbb
jecxz
int
daa
in
test
dec
repz
dec
lods
jle
sbb
pop
loop
mov
ja
sarb
push
mov
imul
into
inc
jnp
mov
or
mov
jle
test
loop
mov
sbb
pop
jmp
stc
nop
mov
je
add
insb
aas
add
pop
enter
push
cmp
sti
mov
adc
cmp
adc
mov
sbbb
daa
jne
sbb
or
ret
or
jge
mov
outsl
test
sub
push
ror
inc
adc
or
inc
sub
and
inc
sbb
add
adc
pop
xchg
std
adc
dec
fsub
push
and
mov
lock
cmp
lret
dec
xchg
pop
jle
ljmp
pop
rcrl
mov
fnstsw
mov
mov
dec
and
cld
cmp
adc
jmp
xor
mov
ffree
pop
cmp
lcall
std
dec
mov
cmp
aam
arpl
hlt
stc
xchg
jbe
addr16
aaa
popf
adc
xchg
test
cmc
dec
mov
cmp
das
pop
mov
inc
es
mov
jmp
xchg
xchg
sbb
mov
and
ret
inc
inc
push
and
rcll
or
inc
cwtl
pusha
lods
adc
scas
xor
out
jecxz
outsb
pop
sub
push
ret
fsubs
sub
mov
cmpsl
scas
adc
fwait
add
mov
add
cwtl
std
mov
xor
repnz
cwtl
jg
lahf
shr
sbb
shlb
push
push
test
xchg
pop
sbb
out
aaa
pop
leave
imul
add
into
cmpsl
jnp
cmpsl
sbb
je
sbb
cld
cmpsl
xchg
mov
inc
xor
scas
cmpsl
movsb
std
push
jnp
cs
frstor
ret
cltd
xor
xchg
xor
test
bound
fldl2e
addr16
lea
mov
cwtl
lret
lar
stc
jne
mov
xlat
fs
add
cwtl
ds
sbb
adc
ss
cmp
cwtl
sub
std
sti
fnstsw
add
andb
pop
scas
and
cmp
dec
sub
or
pop
mov
cmp
aam
clc
in
mov
and
sub
inc
mov
mov
mov
mov
sarb
sub
mov
mov
test
inc
movsb
std
and
cmp
sti
cmpsb
fldenv
cmp
and
sbb
mull
mov
loope
pushf
fsubrl
ljmp
pop
sub
lods
sub
ljmp
loope
and
sbb
push
stc
xchg
stos
mov
sub
pop
xchg
cmp
lea
dec
out
repnz
inc
js
leave
es
fistpl
pop
test
mov
mov
shr
ret
fisubrl
les
sub
add
sbb
lea
lods
fld
sahf
lret
mov
adc
int3
mov
pop
lods
test
mov
cld
sbb
sahf
imul
dec
add
cs
inc
mov
sti
add
pusha
push
cmp
adc
push
pop
out
test
std
fnstcw
xorl
mov
jae
aas
dec
jnp
addl
xchg
mov
lcall
push
shll
addr16
or
cmpb
ficoms
jmp
push
mov
stos
and
mov
xlat
int
pushf
add
ja
add
shlb
dec
rolb
push
mov
xor
pop
iret
adc
mov
jp
and
cli
sahf
jmp
xchg
daa
mov
mov
pop
testl
gs
xchg
cmpl
inc
xchg
in
sbb
mov
aas
fldl
test
cmp
push
jb
push
cmp
rolb
add
ret
cmp
mov
cmp
xchg
add
mov
sahf
and
xor
cmpsb
movsl
mov
push
jbe
mov
jmp
inc
rorl
out
sbb
mov
dec
shr
dec
jns
dec
out
cltd
into
xchg
sub
popf
je
mov
popf
sahf
sbb
fisttpl
lret
cmpb
mov
cmp
cmp
cmp
das
add
fisubrl
xor
enter
dec
sbbb
cmp
fcmovnu
cmpl
stc
js
scas
push
rclb
mov
in
mov
mov
mov
pop
sbb
movsl
cmp
and
inc
mov
sbb
mov
ja
cli
sahf
lahf
fwait
inc
jne
dec
lods
inc
std
dec
and
scas
jno
inc
lcall
lret
mov
mov
aas
pop
bnd
ret
cmp
mov
bound
dec
add
mov
xor
mov
jle
push
bound
cmp
mov
sbb
xlat
subl
cmp
enter
mov
insb
repnz
in
out
enter
shlb
ljmp
jmp
mov
insl
dec
push
xchg
mov
cld
lods
shrl
cmp
mov
loopne
popa
outsl
and
fsubs
in
pop
call
push
jbe
pop
imul
sub
notb
mov
sbb
fnstsw
mov
out
and
fsubs
mov
out
movsb
mov
gs
nop
mov
enter
das
lret
scas
jecxz
and
fdivs
insl
mov
add
imul
mov
sbb
repz
mov
aad
in
movsl
not
pop
mov
jns
mov
imul
mov
push
cmp
pop
fisubs
outsl
in
lods
and
mov
mov
data16
sti
mov
sbb
das
sbb
jl
rcrb
mov
fidivrl
pop
mov
mov
dec
arpl
cmpsl
jb
pushf
cli
xor
iret
leave
out
cmp
orb
out
test
or
pop
xorb
and
mov
pusha
mov
aad
jge
int
xchg
cltd
cmp
push
mov
aam
xlat
dec
cmp
jmp
outsl
leave
mov
sbb
adc
into
sti
pop
inc
daa
xchg
int3
cmpl
lods
sbb
adc
daa
mull
scas
and
rcrb
inc
pop
dec
pop
aaa
mov
mov
pop
das
subl
sub
mov
jo
jge
xlat
cmp
repnz
jp
fistps
jns
aas
stc
pop
push
mov
mov
mov
mov
jmp
jle
pushf
mov
lret
mov
xchg
and
enter
cmp
and
push
lods
flds
adcb
inc
inc
subl
push
test
hlt
lahf
pop
cmp
push
add
enter
test
jo
sbbb
jp
jbe
mov
or
pop
fistpll
pop
loope
mov
push
jp
jl
pop
xor
faddp
sub
bound
jo
fbld
pop
loopne
int3
xor
and
lcall
jmp
neg
pop
in
daa
push
testb
fxch
nop
mov
cmc
lcall
std
in
cmp
mov
in
add
call
movsl
je
xchg
push
cmp
out
std
shrb
ret
shlb
push
xor
sbbb
cwtl
loopne
iret
fcomps
cmp
mov
loope
gs
mov
lahf
xchg
sbb
adc
clc
lret
fisubl
add
push
adc
insl
fcomp
jmp
dec
cmp
pop
jne
jbe
pop
jmp
imul
pusha
cmp
mov
cmp
call
stos
sub
mov
push
mov
dec
xchg
out
inc
shr
mov
sub
mov
add
or
mov
add
cmp
push
jg
pusha
ror
filds
pushf
dec
out
scas
lds
pop
mov
jmp
push
divl
scas
jg
fs
inc
push
data16
dec
hlt
test
sub
ds
and
aas
mov
mov
leave
push
lock
mov
mov
jmp
xor
fcoml
adc
cld
mov
mov
bound
outsl
daa
inc
imul
lcall
leave
pop
xor
cwtl
mov
aad
popf
sbb
xor
cmove
sbb
rolb
inc
pop
imul
sub
pop
pop
stos
inc
cwtl
pop
jmp
cs
push
sub
pop
outsb
cmp
scas
xor
pusha
lock
lcall
dec
jl
sti
lcall
xor
pop
mov
sub
ss
mov
aaa
pop
pop
insl
in
xchg
std
cmp
js
jecxz
pop
or
dec
pop
mov
inc
mov
cli
and
sti
mov
mov
push
inc
pop
jge
mov
sub
aas
mov
dec
sbb
mov
std
mov
sub
and
pop
movsb
call
jecxz
sub
clc
scas
pop
adc
pop
and
lcall
leave
ret
inc
cmpsl
fldcw
mov
cld
test
stos
mov
sub
lods
fldcw
cs
scas
cwtl
cld
pop
out
sbb
das
fldt
push
xor
cmp
fnstenv
mov
ss
mov
aaa
fmul
scas
sbb
sub
cmp
stc
mov
fdivrl
pop
pop
jnp
fstpt
inc
cmp
cmp
sub
mov
test
xor
mov
sbb
mov
mov
cmp
and
xor
sbb
cmc
aas
xor
and
pop
sub
inc
jbe
fisubrl
pop
filds
sub
inc
in
cmp
and
stc
push
ja
fidivrl
xorb
popf
stos
fs
mov
pop
je
inc
jl
mov
mov
and
stos
push
and
pop
adcb
and
cs
inc
inc
xlat
cmp
xchg
jno
insb
imul
daa
pop
dec
push
lcall
arpl
adc
mov
xchg
lcall
dec
mov
or
adc
inc
test
xor
andl
bound
int
aad
push
pop
es
push
cld
push
push
arpl
sub
loopne
xlat
iret
cltd
xchg
cmpsb
fimull
cmp
xor
pop
sub
mov
and
mov
sti
inc
and
sarl
pusha
pop
leave
jns
mov
push
popa
cmp
add
xor
leave
dec
test
sub
in
jmp
sbbl
mov
enter
mov
ffreep
jns
mov
cs
loop
push
mov
hlt
jecxz
sbb
fcmovnu
push
cmp
or
mov
mov
into
loope
lret
mov
fstpl
flds
inc
sbb
icebp
orb
mov
fmull
adcl
addl
dec
cmpsl
in
es
orb
cmp
sub
pop
mov
xchg
mov
popf
fmull
mov
cs
jle
mov
dec
add
pop
scas
xchg
loope
movsl
mov
test
inc
js
sub
aas
inc
andb
stos
idiv
or
jbe
pushf
cmpsb
xor
addr16
mov
div
cmpl
bound
addr16
cli
ljmp
fdivr
mov
jg
es
iret
mov
loopne
jg
push
jmp
out
inc
mov
loope
inc
mov
lods
loope
pop
jb
sub
cmp
sub
push
mov
test
cmp
push
movsb
mov
mov
or
popa
rcl
iret
cmp
loopne
jns
idivb
les
xor
jne
cltd
inc
add
fxch
xchg
dec
fsubs
push
jb
pop
mov
push
in
jb
pop
sbb
mov
movsb
pushf
cmp
cmp
int
jne
jno
mov
push
lret
mov
es
arpl
cmp
inc
sbb
mov
mov
inc
dec
pop
mov
mov
mov
or
stc
pushf
in
jae
or
ds
lcall
mov
adcl
sbb
aam
xchg
pop
mov
mov
xchg
mov
mov
fisttpl
ret
mov
inc
sub
sbb
push
sbb
aaa
test
in
pop
mov
mov
cltd
movsb
mov
outsb
mov
mov
jnp
mov
jge
push
dec
in
popf
jnp
fisubs
pusha
movsb
lahf
fstl
nop
out
pop
mov
jg
xor
xor
pop
stos
mov
adc
pushf
jb
test
xchg
push
mov
fidivrl
xchg
jae
cmc
xor
jne
cmc
in
lahf
add
out
adc
inc
xchg
outsl
inc
push
cmp
mov
addl
test
xchg
cmp
mov
es
insl
jbe
stos
sbb
pop
pop
addr16
mov
in
ja
ret
mov
sbbb
daa
jne
stc
or
pop
repz
xchg
jnp
pushf
push
fisubrl
cmp
mov
cmpb
add
mov
sub
xor
es
jecxz
inc
jae
dec
and
adc
stc
push
pop
jbe
fisttpl
andb
cmp
fdivrs
mov
in
cmpsb
xchg
add
xchg
jbe
mov
jecxz
les
ds
pusha
dec
imul
inc
cmp
movsb
cltd
ret
mov
gs
cmp
add
jg
jo
shrl
add
ret
add
mov
or
mov
jmp
mov
mov
loop
aam
outsb
daa
rcrb
xchg
sbb
mov
jmp
in
sub
insl
fsubs
jg
ss
jae
imul
outsb
daa
xor
xor
or
shrb
mov
mov
inc
push
mov
sub
adc
jl
mov
sbb
fnstsw
fcmovnb
test
repz
push
jae
in
mov
push
adc
jecxz
cmpsl
push
mov
rorl
mov
add
test
add
push
mov
dec
lret
mov
mov
push
scas
test
addl
adc
xor
sub
mov
stos
pop
mov
repz
fisubl
jae
lods
lds
rol
push
arpl
add
mov
outsl
sub
xchg
mov
inc
lretw
or
outsb
jle
mov
in
jp
push
fcompl
mov
fcmove
lods
dec
fs
pop
cmp
mov
popf
dec
fldenv
sbb
in
scas
inc
jno
in
test
jl
dec
and
sub
test
mov
sti
loope
dec
fdivp
out
in
in
cmp
cmp
loope
sub
loope
add
push
pop
pop
sub
mov
add
mov
ljmp
mov
mov
push
leave
mov
cmp
dec
mov
test
xor
adc
fildl
cmp
daa
mov
mov
add
mov
add
add
in
sti
rcll
out
or
mov
sbb
sub
es
mov
fs
loop
rorl
mov
push
aam
dec
xchg
inc
dec
inc
cwtl
jl
mov
dec
cmp
shrb
dec
gs
pushf
cmp
fcoms
sbb
testb
xor
sahf
sub
fcmovnb
pop
mov
repz
mov
mov
scas
movsl
dec
lods
cmp
xchg
popa
jmp
lahf
jo
or
dec
movb
movsb
mov
mov
inc
cmc
aas
popa
inc
rep
jge
int3
cmpsl
add
insb
pop
mov
scas
pop
jmp
inc
bound
roll
fs
in
test
rol
ljmp
xor
fdiv
fwait
pop
sbb
sub
adc
outsl
adc
iret
outsl
fisubs
sbb
lea
fchs
mov
ja
in
test
and
imul
loop
push
add
add
or
out
mull
cmp
push
fidivrl
pop
jmp
lds
jp
scas
lods
lock
pop
outsl
idivb
callw
loop
sbb
cmp
sbb
out
lcall
pushf
sbb
xor
inc
mov
test
adc
mov
mov
mov
mov
dec
mov
mov
mov
loop
adcb
xor
cli
mov
jmp
sub
mov
push
push
jp
stos
cmp
mov
mull
pushf
test
mov
adc
adc
xor
dec
icebp
inc
cmp
xchg
xor
sbb
stos
rol
popf
stos
and
xor
scas
scas
xor
stc
cmp
mov
outsl
sbb
arpl
mov
pop
cmc
inc
std
sub
mov
repz
cmp
es
es
cmovl
push
in
xchg
std
cltd
pusha
mov
cmpsl
xor
cmpsl
adc
mov
mov
sub
fsub
mov
or
fistpll
int
pushf
sahf
rcrl
adc
test
or
rolb
pop
lret
in
sub
pop
adc
cwtl
inc
clc
push
aad
adc
jno
ret
sub
rclb
sub
sbb
add
dec
test
mov
add
imul
dec
inc
les
or
or
ja
mov
test
scas
cmpsl
shr
enter
mov
jg
jp
mov
ja
testl
cmp
stos
mov
mov
in
jecxz
nop
dec
jb
popf
jno
mov
ja
adcb
dec
out
aam
jb
stc
sub
ljmp
ds
adc
mov
jg
nop
lahf
mov
adc
cltd
dec
popf
mov
add
addr16
push
or
shll
pusha
imul
or
roll
pusha
sub
enter
nop
cmpsl
dec
mov
inc
sti
aaa
loope
pop
cltd
ret
ret
sbb
mov
cmp
rorl
jle
cmp
loope
or
mov
cmp
lods
or
mov
insw
in
lods
popa
cmp
dec
push
inc
cmp
and
inc
mov
cmp
sbb
cmp
lods
and
imul
cli
sub
dec
sbb
push
inc
or
dec
adcl
out
mov
xchg
imull
xchg
jmp
jne
imul
xchg
and
cmp
or
mov
cmp
mov
stos
je
enter
mov
ffree
sbb
dec
ret
movq
clc
cmpsl
stc
push
sti
xchg
cmp
ss
cltd
addb
pop
pop
iret
mov
sbb
fildl
jnp
jge
ja
jo
es
mov
pop
stc
mov
jg
loope
jae
data16
push
xor
jno
adc
mov
add
scas
dec
mov
rolb
sub
in
push
stc
sahf
mov
add
dec
jl
aad
sti
cmp
mov
xchg
cmpl
popa
mov
dec
cmp
sar
inc
jecxz
iret
rcrl
repnz
cwtl
ljmp
dec
out
jbe
addr16
orb
int
push
cmp
xlat
cmpsb
push
or
sti
xchg
mov
jne
or
jl
lcall
aad
enter
push
incl
arpl
outsl
bound
pop
mov
ret
adc
xor
add
out
call
cmp
sbb
lahf
mov
flds
add
push
adc
cmpsl
xchg
sbbb
movsl
pop
inc
cmp
insl
cmpsl
and
icebp
add
in
lods
mov
mov
cld
jne
lods
cmpsl
jge
push
clc
sub
repz
jge
mov
test
pop
repz
mov
adc
mov
xor
imul
bound
mov
shll
dec
das
insb
rorb
mov
push
add
dec
imul
in
ret
xorl
mov
stos
sbb
sbb
in
in
xchg
jecxz
jl
add
mov
inc
jp
pop
add
mov
mov
movsl
mov
xchg
cmp
lcall
nop
dec
inc
leave
jb
cld
sbb
or
mov
shrl
sbb
sbb
pushf
fidivs
imul
pop
fnstcw
inc
dec
xchg
lds
stc
adcl
and
mov
arpl
cmp
sub
or
jo
cmp
and
loop
stos
push
jl
out
jecxz
arpl
lods
inc
mov
sub
push
popf
sub
cmp
flds
int
testl
xor
mov
daa
xchg
cmp
mov
out
bound
and
or
loop
or
jnp
adc
mov
ljmp
dec
push
popf
cltd
imul
inc
jmp
mov
call
mov
and
xchg
aad
fdivl
and
ret
sub
pusha
mov
scas
mov
lea
lods
outsl
iret
cld
icebp
dec
cmc
inc
jecxz
xchg
outsl
jp
xlat
sub
pop
jp
pop
sbb
aam
and
pop
add
cmp
inc
int
push
lret
sbb
add
cmp
testl
cli
push
pop
mov
adc
dec
mov
ds
sbb
and
pop
push
push
pusha
sub
mov
movsb
mov
jno
aaa
or
cmpsl
lret
push
fistpll
xchg
inc
mov
mov
add
or
jno,pt
call
pop
es
sub
in
jle
call
rcrb
and
ffree
dec
mov
arpl
sbb
cld
mov
icebp
cmp
daa
test
mov
jno
iret
inc
outsb
enter
sbb
scas
cmp
jg
shrb
imul
push
ja
aam
ficoms
xchg
stc
es
mov
adc
cmp
cli
mov
jp
mov
bound
pop
loope
stc
pop
sbb
push
inc
fwait
lods
xor
sbb
jecxz
jbe
push
repnz
popa
les
mov
ret
jl
add
ds
jmp
jbe
sbb
or
ja
cmp
push
fistpll
mov
sub
adc
ja
mov
sbb
mull
cmp
xchg
and
jb
arpl
or
lds
jg
adc
cwtl
mov
loope
add
mov
adc
shl
pop
dec
push
sbb
push
adc
pop
addl
pop
jp
das
inc
mov
sbb
and
sub
aas
insb
inc
aas
pop
mov
pop
push
es
jge
out
push
jnp
pop
inc
cmp
pop
fldenv
pop
out
xchg
lea
mov
sub
jp
js
fdivs
enter
or
clc
cwtl
dec
xchg
jg
push
mov
pushf
aam
div
pop
cwtl
mov
sbb
and
xlat
adc
out
fidivrs
jnp
mov
decl
orb
jbe
sub
cpuid
shll
jae
xlat
movsb
popa
out
fs
fists
pusha
adc
fstpl
fisubl
andb
nop
jmp
stc
cmp
mov
dec
xor
dec
nop
mov
push
mov
dec
dec
repnz
gs
xchg
std
cmp
sub
inc
mov
cs
arpl
pop
mov
pop
ss
into
cmpsl
sub
pop
enter
push
or
jmp
adc
enter
aas
push
loop
pop
mov
cmc
push
arpl
mov
lret
jns
pop
xor
jl
test
mov
and
cmp
pop
mov
mov
orb
pop
mov
stos
out
lods
leave
cli
adc
or
mov
ja
fstps
jne
lcall
and
aad
inc
xchg
mov
enter
inc
rol
xchg
sub
or
inc
pop
imul
fildl
jmp
sub
adc
add
cld
bound
xor
popa
mov
fisubrl
mov
cmp
jnp
mov
mov
clc
pop
or
adcb
add
addl
adc
jns
fcomp
fcomps
hlt
sbb
xchg
pop
jne
cmc
ja
dec
cltd
dec
or
dec
subl
inc
mov
dec
jmp
cmpsl
out
jbe
cmp
mov
fs
mov
adc
inc
sub
or
shll
enter
out
pushf
nop
mov
mov
ss
cli
sub
sbb
xorb
adc
stc
inc
mov
sub
add
mov
push
jo
xlat
push
jbe
pusha
xchg
shrb
xor
mov
insb
outsl
mov
stc
push
fildll
mov
scas
pop
add
xorb
add
mov
xlat
cmpsl
lods
and
xor
jne
insb
in
and
cmp
add
push
movsb
daa
mov
xchg
cmp
sahf
and
dec
hlt
movl
mov
pushf
lds
sub
jge
dec
mov
push
ret
lret
mov
ds
jg
mov
dec
shl
lcall
enter
insl
shlb
xchg
in
test
sub
mov
jo
addl
test
sbb
inc
leave
loope
push
cmp
mov
adc
jne
dec
add
mov
or
fs
dec
fstpl
add
movsl
xor
push
adc
fiadds
addr16
rorb
and
inc
fnstenv
pop
fildll
pop
inc
scas
pop
into
cmp
xor
mov
aad
addr16
jl
insb
stos
mov
fbld
dec
movsb
shrl
mov
mov
cmp
lods
add
push
pop
jno
movsl
cmp
mov
fsubl
into
mull
adc
clc
fldt
loope
or
movsb
dec
push
sub
jno
sarb
movsb
testl
mov
arpl
mov
inc
pusha
aaa
ret
les
mov
in
insb
push
dec
jecxz
inc
aad
cmp
cmp
sbbb
mov
les
loop
rcrl
xchg
push
pop
imul
cli
xor
and
cmp
imul
sahf
rorb
mov
xor
scas
mov
imul
pop
iret
jbe
out
nop
sbb
sub
sbb
jecxz
jnp
mov
and
sarl
movsl
sub
jno
sub
stos
sub
lods
mov
xor
imul
mov
lret
mov
rclb
iret
sbb
mov
add
sbb
cltd
sbb
mov
sti
jns
imul
fstpt
mov
pop
sbb
mov
mov
mov
loope
mov
cmp
and
and
cmpsl
sbb
js
sub
test
stc
test
int3
mov
stos
pop
pop
mov
jecxz
inc
lods
mov
mov
stos
and
lds
std
mov
xor
mov
sbb
xor
sar
inc
dec
and
shrl
mov
cmc
inc
and
aad
js
fidivl
js
std
mov
cmp
clc
movsb
scas
pop
inc
dec
add
stos
push
or
js
mov
mov
xor
aas
dec
mov
mov
dec
movsl
jp
pop
cmp
insl
ror
cld
adc
sub
mov
out
scas
add
andl
mov
dec
pushf
or
jp
sub
pop
mov
sbb
push
rcrl
pop
push
cmpsl
cmp
dec
lds
lcall
jbe
lods
loop
aas
movsl
test
mov
mov
pop
imul
sti
and
push
fadds
loopne
mov
xchg
roll
adc
dec
rcr
xchg
mov
shll
dec
pop
bound
inc
repnz
ret
stc
aam
scas
jb
scas
mov
lret
fcomps
cmc
mov
and
or
adc
addr16
rcr
mov
lods
sbb
adc
pop
pushl
sbb
push
negl
jecxz
and
std
inc
cmp
mov
adc
mov
inc
test
js
add
mov
xchg
std
fildll
jp
mov
sti
daa
fisubrs
shl
push
sub
pop
sub
sub
fwait
sub
jp
in
fisubl
cmpsl
sbb
leave
pop
mov
and
in
fisubs
cmp
jg
cmp
mov
jecxz
fdivrp
cmp
imul
fscale
mov
mov
insl
dec
mov
sub
and
stos
lock
outsb
std
sub
sbb
stos
push
test
fsub
es
cmp
ds
cwtl
mov
and
in
fdivrp
mov
xor
add
jbe
bound
mov
mov
mov
fisttpl
mov
cmp
add
mov
cld
ds
mov
jmp
xor
lret
fnstenv
je
daa
push
mull
jge
lods
out
mov
je,pt
stc
repnz
mov
cs
popa
sub
insb
inc
rcll
cmp
outsb
cmp
mov
lcall
test
test
adcb
mov
lds
es
mov
cmc
or
jo
jge
inc
xor
adc
fstpt
inc
mov
fisubs
inc
push
orl
inc
sbb
xor
pop
cli
fdivrl
push
xchg
mov
fistps
cmp
xchg
sti
cld
dec
xchg
out
lahf
mov
or
pop
and
add
cs
testb
add
popa
cmp
mov
dec
inc
xlat
jbe
lret
mov
push
pop
xchg
cmp
mov
xor
add
fdivl
icebp
jmp
sbb
rol
or
fistpl
cltd
fidivs
mov
dec
mov
xchg
lret
fldt
xor
iret
inc
mov
repnz
inc
enter
xchg
gs
bound
fnstcw
mov
pusha
jb
mov
dec
pusha
icebp
ret
jae
jmp
cmp
in
and
aas
mov
sub
inc
sbb
pop
jo
fdivrl
mov
push
adc
mov
addr16
pop
jo
pop
sar
inc
cld
cmpl
inc
adc
pop
pop
nop
cmp
mov
std
mov
cmp
cmp
mov
mov
leave
cmp
add
andb
inc
inc
mov
mov
pop
mov
push
aam
cmp
sarb
loopne
jnp
mov
enter
mov
inc
cli
sub
popf
loopne
or
js
cmp
sbb
push
enter
neg
cli
fdivl
pop
clc
es
popf
stos
add
mov
es
ret
jl
sbb
add
stc
js
nop
test
cmpsb
and
sbb
mov
ljmp
lods
dec
test
dec
jb
dec
inc
nop
cmp
fsubs
push
mov
pop
mov
add
icebp
imul
lods
out
nop
push
cmp
and
out
popf
mov
jo
mov
test
sub
cmpl
inc
cli
mov
js
xor
sbb
fistpl
int3
mov
popf
inc
mov
mov
and
repz
leave
ljmp
add
mov
xchg
xor
aaa
fnsave
mov
pusha
sub
int3
lcall
pop
jno
jge
sub
aam
mov
jne
adc
lods
fidivl
add
cmpsl
pushf
jmp
and
add
sbb
mov
mov
sarl
fnsave
cmp
pop
jmp
cmp
push
mov
loope
adc
das
pop
lods
inc
jb
add
mov
mov
pushl
jo
fmul
fcmovnb
mov
test
mov
inc
mov
call
stos
ljmp
mov
mov
push
sar
or
ds
in
fldl
sbb
test
insl
jo
mov
adc
je
fldenv
adcb
cs
lcall
push
jmp
ja
ja
adc
cld
and
inc
jns
cltd
inc
dec
call
aam
fbld
outsb
and
add
cmc
sub
hlt
jbe
inc
fs
lcall
iret
inc
add
lods
into
pop
outsb
js
nop
mov
adc
imul
loope
add
movsb
mov
jp
fdivrs
sti
mov
xor
sub
dec
cmp
rcrb
dec
and
mov
jge
dec
cmp
xchg
hlt
ss
dec
outsb
sub
sub
fsubl
fidivrl
in
lret
js
pop
lret
jns
aam
pop
jp
inc
ficompl
call
pop
push
xor
fsubrs
sarl
pusha
iret
ds
mov
sub
lds
mov
xchg
mov
loop
dec
mov
pop
push
cli
mov
ret
and
test
in
sbb
stc
push
cmp
mov
sti
sbb
and
inc
jecxz
xchg
jbe
pop
cmp
pop
pop
clc
mov
pop
adc
mov
and
mov
sub
repnz
dec
jbe
or
cmp
incl
shr
cmp
cmpl
js
jp
es
mov
jns
jne
fidivrl
mov
cmp
cmpl
xchg
dec
sub
cmc
cmp
mov
mov
hlt
pop
mov
inc
bound
pop
inc
loopne
mov
adc
add
inc
fwait
add
sbb
lcall
addr16
cmp
cltd
lea
or
loopne
xchg
mov
pusha
sbb
jns
push
shrb
addl
cmp
aam
sbb
cmp
scas
cmp
iret
ror
aam
sar
lea
mov
aam
sbb
mov
out
mov
and
in
sbb
sbb
mov
stos
jp
cmp
cmp
fsubrs
sbb
mov
call
xor
mov
lahf
fwait
pop
dec
sti
mov
mov
mov
out
ret
fsubrs
aas
cmpb
xor
stos
and
mov
mov
andl
or
mov
pop
aas
stos
js
mov
add
adc
loop
shrb
scas
mov
imul
mov
sub
cmp
xor
sbb
and
pop
sub
add
pop
pop
pop
mov
dec
and
mov
flds
scas
inc
aas
pop
std
cmpsb
and
push
int
mov
notl
notl
xor
push
cmp
or
mov
call
dec
pop
fxam
mov
xor
cmc
xlat
mov
cmp
call
or
sub
fcmovnbe
test
mov
xchg
push
lahf
push
outsb
enter
mov
mov
call
sub
sub
es
sbb
in
in
add
jg
mov
aas
js
pop
arpl
adc
lahf
lods
jp
enter
incl
mov
out
enter
call
sub
cmp
je
scas
sbb
jno
push
mov
pop
clc
sti
scas
rcrb
mov
pop
aas
mov
inc
in
orl
sbb
dec
inc
mov
pop
pop
sbb
push
xchg
and
cwtl
call
xorl
jne
adc
int3
test
xor
jmp
pop
es
dec
sti
in
roll
dec
xchg
fisubl
pop
cmp
dec
adc
adc
push
js
add
pop
push
add
mov
aas
fistps
pop
out
ja
mov
mov
xchg
adc
repz
das
push
js
aas
fcomp
adc
inc
rolb
sti
mov
pop
enter
cwtl
push
pop
jne,pt
or
adc
xor
mov
ljmp
xchg
sti
or
mov
leave
xchg
mov
and
fidivl
inc
add
cmp
fildl
out
enter
mov
cmp
sarb
and
dec
cld
adc
rcrl
push
mov
sti
xchg
rclb
mov
sbb
in
push
repnz
fldcw
or
pop
push
dec
sbb
aas
jnp
fneni(8087
aaa
jg
lea
ret
mov
cmp
or
pop
add
add
repz
and
sbb
in
aad
xor
dec
cmp
cmp
das
loopne
iret
rcll
mov
push
mov
cmp
movsb
ss
mov
test
dec
outsl
outsl
fnstenv
push
fmuls
adc
test
test
cmp
lea
jmp
fdivl
shl
fcompl
fstp
repz
cmp
outsl
pusha
lods
xchg
lock
and
cwtl
loope
mov
movsl
push
cmpb
hlt
inc
rcl
sbb
or
out
fistl
sub
fwait
bound
inc
push
shl
in
cmp
mov
stc
clc
jne
pop
cli
loop
mov
std
dec
sub
add
loop
enter
loope
test
test
jmp
lret
mov
sbb
pusha
jp
rcl
inc
mov
xchg
roll
mov
cmc
pusha
xor
dec
sub
adc
xchg
ds
xchg
sub
mov
and
xchg
mov
scas
sub
aad
xchg
call
bound
cmpsl
mov
pop
mov
pop
jp
adc
xor
sti
push
aas
xor
add
test
mov
fnstsw
orb
out
repz
shrb
push
cmp
mov
jmp
insl
add
jp
pop
jl
xlat
sar
addl
dec
pop
ror
sub
shl
cmp
pop
stos
xor
mov
stos
sub
pop
xchg
popa
stos
test
ss
nop
addr16
stos
ds
bound
arpl
add
cmp
cmp
js
xchg
in
test
or
call
sti
sahf
icebp
inc
dec
test
mov
or
imul
xor
iret
fcmove
cmp
inc
push
movb
movsl
lea
scas
mov
test
lcall
mov
sbb
mov
icebp
cmp
mov
icebp
mov
cwtl
inc
pop
xchg
pusha
arpl
test
cmp
inc
cs
aaa
pop
fists
mov
aam
mov
popf
mov
mov
inc
leave
cmp
add
jl
popf
stos
xor
loope
out
pop
loope
scas
cmp
xor
and
orb
add
pop
jl
das
jno
or
pushf
stc
mov
sbb
xchg
dec
daa
shll
mov
pop
jo
rcrl
cs
test
pop
sbbb
mov
push
mov
filds
or
popf
repz
add
mov
adc
xor
test
sbb
fsubr
ret
xchg
pushf
inc
jg
xor
out
cmp
ds
ficomps
scas
mov
sub
cltd
imul
xchg
sarb
negl
lea
add
pusha
leave
sub
pop
adc
jecxz
dec
leave
imul
dec
stos
jge
add
cld
outsl
bnd
jp
addr16
or
in
sti
xorl
sub
sbb
xor
mov
and
xor
outsl
cmp
leave
sbb
jg,pt
jmp
cmp
push
mov
fildl
test
cltd
imul
xor
add
xorb
push
imul
cmp
add
push
sub
sbb
mov
mov
negb
fildll
cmp
movsl
fisttpl
rclb
add
sub
jecxz
cld
cmp
test
pop
mov
cmp
pop
pusha
sub
add
cmp
or
xlat
leave
push
lods
mov
pop
js
rcr
bound
xor
xchg
ljmp
or
sub
data16
pop
cmpsb
and
orb
fimull
movl
jae
inc
ret
jbe
cmpsl
leave
test
dec
sub
push
adc
ds
ja
popl
xor
in
sub
sarb
mov
js
fstpl
jbe
fdiv
es
in
add
push
pop
leave
add
loope
inc
pop
push
and
dec
int3
sub
jmp
test
mov
mov
cmp
pop
sbb
aas
loope
sub
add
and
sub
jmp
add
cld
mov
enter
inc
sarb
pop
xchg
rcr
shrl
jnp
xor
push
sub
and
lods
int3
pop
add
loopne
in
mov
addb
rorl
sti
aas
pop
sub
fnstsw
je
loope
mov
or
clc
pusha
jmp
subb
push
leave
add
lahf
fisttpll
loopne
bound
adc
arpl
sbb
loopne
enter
out
call
lcall
and
push
sbbb
mov
pop
leave
adc
or
rcll
adc
cld
das
xor
mov
fisttpl
test
push
jp
xor
stc
sbb
popf
add
xor
xor
cwtl
out
aad
lock
adc
jp
jns
mov
fnstenv
pop
dec
pusha
scas
xchg
xor
jp
xchg
in
jnp
lahf
dec
mov
aam
push
out
or
or
std
xchg
push
jg
scas
adc
sti
pop
and
add
sub
cwtl
enter
add
aam
stos
jmp
pop
mov
lods
adc
and
leave
ds
bound
sub
xchg
into
leave
cmp
bound
fdivs
fstps
cmp
inc
cmp
adc
xchg
mov
out
pop
and
cmc
fadds
leave
orl
mov
jae
adc
xchg
sbb
inc
rorl
pop
addr16
shlb
fcompl
call
mov
push
inc
cmp
inc
shll
test
mov
inc
lods
mov
dec
fistps
push
in
stc
loopne
shr
mov
mov
call
cmp
fwait
mov
out
adc
xlat
cmp
faddp
add
ja
mov
call
xchg
ret
imul
add
int3
int3
cmp
loop
outsl
cmp
adc
mov
andl
movsb
dec
scas
shl
mov
dec
sbb
pop
popf
mov
or
js
and
insb
loop
sbb
adc
sbb
xorb
dec
inc
stc
adc
mov
loopne
dec
roll
popf
subl
mov
cmp
dec
daa
mov
divb
enter
mov
enter
or
insl
cmp
add
xlat
stc
stos
pushf
push
push
adc
mov
sub
mov
movsb
jbe
loopne
arpl
pop
fcompl
inc
sub
mov
inc
rcrl
stos
mov
lea
or
adc
in
pop
cmp
pop
popf
aaa
mov
cmp
ss
ret
call
ja
jbe
cmp
icebp
or
jb
cmp
loope
sub
jp
lods
mov
rorl
inc
shll
or
mov
test
jl
xor
call
cmp
clc
inc
popf
mov
movsl
mov
scas
pop
and
imul
into
bound
xchg
sub
mov
mov
xor
or
into
enter
test
idiv
dec
sub
mov
sbb
ret
sub
and
cmp
scas
sbb
int
sahf
xor
inc
mov
sbb
shlb
push
add
push
inc
out
cld
xor
cmp
add
dec
cmp
lods
dec
add
cmp
test
je
test
and
and
test
mov
out
mov
decl
bound
jo
test
enter
ljmp
adc
inc
dec
mov
lret
dec
popf
sbbb
xchg
pushf
ret
fwait
and
fildl
shrb
lods
inc
jp
mov
jbe
or
adc
jno
lret
push
push
fiadds
dec
and
xor
fwait
cs
or
sbb
sbb
stc
loope
les
xchg
aaa
or
cmp
add
scas
ja
fcmovb
xchg
cwtl
lahf
iret
xchg
imul
cmpsl
scas
xor
sub
mov
ret
xchg
ds
pushf
jbe
adc
shlb
mov
stos
mov
xchg
mov
inc
sti
call
fidivl
mov
pop
or
rcl
pushf
mov
inc
cmpl
inc
sbb
add
xchg
xchg
or
jb
sti
movsb
cmpsl
test
clc
or
enter
aad
push
cli
orl
fstpl
or
cmp
sbb
add
or
in
rcrb
and
cmpsl
adc
xchg
sbb
ss
xchg
stc
adc
fyl2x
mov
xor
inc
lret
data16
dec
jl
pop
out
cmpsb
sbb
adc
sbb
adc
cmp
mov
call
mov
jo
mov
pusha
pop
xchg
daa
imul
lahf
out
inc
inc
das
jmp
dec
jmp
cli
aam
cmpb
pop
xor
into
repz
cwtl
xor
mov
and
and
test
enter
pushl
push
xchg
enter
outsl
push
push
pop
lds
mov
arpl
call
or
xor
lds
jp
mov
fistpll
fnstsw
movsb
aas
xchg
andl
hlt
lcall
xor
add
jge
mov
and
inc
cli
mov
adc
push
fdivrs
cmp
call
sub
outsl
xchg
and
pop
pop
dec
test
mov
add
xor
pop
or
sbb
mov
adc
popf
pushl
pop
cmp
mull
popf
bound
ss
shl
loopne
mov
ds
lods
pop
enter
jns
sub
arpl
add
test
mov
fwait
popf
push
and
jne
cmovne
xor
or
stos
out
push
adc
fildl
out
jl
fidivrs
out
fildl
dec
sbb
dec
test
lods
sub
cmpsb
andb
mov
mov
call
inc
into
jecxz
sbb
jns
mov
cmpsl
adc
decl
std
jae
sub
add
jp
push
xchg
lcall
xchg
std
loope
adc
icebp
pop
ja
fistpll
and
mov
sbb
or
or
ds
mov
mov
mov
fisttpll
mov
fidivrs
or
rclb
shll
out
aam
ja
je
aam
cmp
mov
mov
and
inc
cmp
adc
sbb
jl
mov
pop
inc
adc
or
inc
mov
outsl
and
jecxz
repnz
or
sub
call
pop
hlt
xor
jmp
mov
adc
mov
inc
mov
xchg
rcll
popl
gs
movaps
aad
mov
or
push
mov
ret
and
lods
cmp
push
leave
jno
mov
jle
shl
mov
fnsave
pop
fldenv
pop
adc
push
or
mov
shlb
xor
jecxz
mov
and
or
roll
xor
jl
add
cmp
les
inc
sbb
mov
pop
test
loope
mov
pop
in
lret
xchg
leave
jo
fistpll
sahf
iret
hlt
dec
xor
dec
fcoms
addr16
mov
addr16
cmpsb
ljmp
sub
sti
gs
dec
sbb
adc
hlt
cmp
cmp
lods
lahf
mov
mov
stc
sub
mov
xor
push
pop
sarb
fmuls
cmp
into
fdivs
mov
xchg
jo
test
cmp
das
ja
mov
inc
sti
sarb
and
divl
xchg
mov
mov
call
mov
cld
cmpsb
jp
and
rcl
scas
cmp
shll
test
addl
fnsave
cmpsb
test
dec
xchg
push
enter
std
outsl
push
push
inc
dec
pop
std
mov
adc
mov
and
adc
lods
add
mov
mov
jns
ss
ja
dec
xlat
fcompl
fiaddl
mov
fdivrs
mov
and
dec
roll
cwtl
push
inc
std
push
popa
pop
pop
dec
mov
push
mov
xchg
push
int
mov
cld
cmc
loopne
mov
mov
aaa
and
xchg
mov
jge
or
frstor
dec
cmp
ds
jp
mov
dec
loop
and
je
sbb
lcall
pop
xchg
dec
int
mov
jmp
or
add
loope
cmp
jecxz
dec
das
ret
repnz
repz
ljmp
jp
out
or
dec
shl
sti
jle
mov
ret
fldpi
sti
mov
fldpi
pop
add
or
loope
js
lret
lods
aam
loop
mov
popa
dec
cmp
cli
iret
ds
pop
mov
and
aam
sub
and
cld
ret
cld
xchg
divl
mulb
cltd
fsubl
fidivrs
into
fldenv
repz
fcmovnu
hlt
repz
mov
and
sub
test
loopne
in
jae
iret
mov
aam
jle
cmp
cmc
mov
inc
subl
stos
popf
xor
fiaddl
jle
popf
sub
cmp
cmpsl
jg
inc
sbb
rcl
jp
enter
dec
cmp
and
or
push
inc
stc
push
leave
inc
movsb
cmpsl
aas
std
mov
push
movsl
and
jbe
stos
inc
inc
aad
pop
sbb
sahf
aam
out
mov
xchg
fiaddl
outsb
adc
pop
out
test
ljmp
stos
jecxz
stos
loope
mov
cltd
mov
adc
mov
cmpsl
out
lret
cltd
decl
xor
bound
pop
and
add
or
push
aad
xor
mov
add
ja
lock
movb
dec
push
inc
test
aas
outsl
fstpl
out
sub
mov
sub
jne
inc
add
inc
jg
adc
addl
call
inc
shlb
add
call
mov
dec
hlt
pusha
add
add
cwtl
rol
stc
insl
leave
sahf
fld
call
xor
in
mov
shr
iret
xchg
cmp
sub
push
mov
hlt
negl
repnz
in
lock
mov
mov
pop
aam
sub
in
pop
enter
dec
xor
add
sahf
inc
mov
rolb
push
mov
fmuls
aas
stos
add
inc
cmp
ret
fidivl
xor
push
cmp
push
mov
addb
lret
iret
cmp
push
push
lcall
jnp
mov
addr16
scas
cmp
mov
jmp
mov
sahf
notl
outsl
popa
mov
mov
ja
and
push
or
cmpsl
jmp
lcall
sbb
mov
int3
cmp
mov
loopne
test
xor
add
xor
lods
lods
enter
mov
dec
pop
xor
outsb
sub
lahf
lcall
ds
mov
out
ljmp
cmpsl
xchg
xor
cltd
es
lret
cmp
xor
adcb
cmp
add
sarl
lcall
mov
sub
mov
iret
es
aad
xchg
dec
add
aaa
mov
movsb
xor
mov
push
rcr
in
fisubl
sbb
lahf
cmp
mov
cli
or
fsub
mov
jp
inc
fisttpl
sub
jne
mov
push
mov
testl
fidivl
cmp
js
mov
mov
les
mov
mov
js
ljmp
or
push
rorl
lods
out
jae
xchg
mov
inc
inc
ds
or
scas
adc
and
popa
mov
pop
movsl
and
mov
popa
sbb
cmp
cs
cmp
sahf
sub
jns
or
adc
loop
mov
push
xchg
fcoms
add
clc
out
and
or
fsubs
lret
cmp
xlat
gs
stos
mov
sbb
sbb
pusha
inc
dec
dec
push
fildll
cmpsl
popf
imul
mov
jge
ret
aaa
xor
cmp
mov
loope
cmp
and
ja
jl
jbe
dec
ss
in
push
mov
inc
fisubl
dec
lds
dec
scas
adc
es
jp
outsl
sbb
xchg
std
dec
pop
push
fcoms
cs
out
mov
or
stc
or
xor
dec
jl
aas
cmp
jo
test
jne
jae
fcmovnu
lea
cmc
push
shll
outsl
sbb
pushf
inc
mov
and
jp
inc
sub
sbb
cltd
js
nop
add
cmp
sbb
cmc
mov
cmp
mov
enter
mov
inc
addr16
add
sub
pop
mov
jns
stc
mov
mov
out
loope
lret
cld
mov
jmp
div
sahf
and
stc
pushf
jno
mov
fldl
mov
xlat
mov
cmpsl
fsubrp
das
shll
enter
jmp
mov
mov
mov
lcall
test
mov
push
push
mov
cmp
mov
xchg
sbb
jno
xor
out
cmpl
inc
xor
in
out
incb
cltd
push
pop
cmp
push
sbb
xchg
fldcw
sti
cmp
jmp
mov
mov
push
test
and
int
fmull
fcmovnu
out
mov
push
fs
lret
sahf
xchg
xor
fisubs
rclb
enter
pop
jg
mov
mov
leave
sub
fcompl
roll
mov
xchg
sti
daa
xlat
mov
lcall
sbb
mov
ficompl
loopne
cmp
aam
jo
xchg
mov
cmp
adc
stc
es
xor
jo
xor
pop
fsub
push
out
cmp
sbb
adc
lret
pop
xchg
mov
cmp
lods
mov
push
sti
imul
inc
and
xchg
test
leave
cmpb
mov
dec
jecxz
xor
mov
lds
xor
ja
test
notl
push
adc
mov
lahf
bound
clc
mov
and
pop
iret
mov
int
pop
mov
push
sbb
pop
out
xor
xchg
add
in
imul
dec
addl
js
jecxz
xor
mov
into
mov
dec
mov
xor
cltd
sub
pop
loope
sub
adc
push
aaa
sbb
das
xchg
xchg
adc
mov
push
cmpsl
mov
xor
mov
jecxz
cmpsb
inc
mov
adc
dec
dec
mov
add
stc
aam
mov
jecxz
jmp
jnp
adc
xchg
add
jns
xchg
dec
dec
scas
loopne
adc
mov
call
mov
cmp
adc
js
cwtl
shlb
aaa
mov
mov
test
or
adc
inc
mov
adc
out
mov
lret
ret
mov
fldl
mov
cltd
or
clc
mov
sbb
or
xchg
xchg
jb
imull
out
push
add
mov
add
loope
dec
inc
sub
mov
or
call
push
orb
clc
ja
xchg
call
sarl
mov
push
cmp
push
lods
or
ds
or
std
stos
sub
mov
lods
xlat
inc
stc
cmp
or
push
lcall
pop
xlat
scas
aad
fisubrs
push
xchg
iret
test
and
cs
lds
pop
imul
cmp
xor
adc
rcrb
insb
std
lcall
movsl
lcall
add
mulb
movsb
xchg
mov
call
pop
sub
mov
fidivrs
push
inc
dec
dec
jge
xchg
addb
sbb
jno
test
sbb
pop
lods
incl
imul
pushf
cli
pop
sbb
adc
xor
fs
xchg
xor
and
jg
and
dec
jne
jbe
add
test
ret
add
cmp
or
jmp
and
sub
clc
cmp
adc
cmp
clc
cltd
leave
jg
orl
mov
cmp
popa
rcrb
out
sbb
addr16
sbb
cmp
into
pop
add
mov
add
iret
lcall
arpl
jecxz
cmp
imul
inc
fstps
mov
movsb
pop
add
sti
push
adc
movb
in
xor
jns
es
mov
jae
mov
mov
cmp
dec
xor
lods
cld
outsb
movb
sub
mov
ljmp
sub
stos
add
mov
fidivrl
and
scas
pop
shl
je
xorl
or
out
jge
add
cltd
mov
fisubl
ja
mov
nop
jmp
nop
push
dec
sub
mov
sbb
into
std
out
xor
add
add
push
sub
or
mov
inc
sub
decl
inc
pop
lods
xor
jns
bound
xchg
xorb
inc
leave
jmp
inc
dec
pop
aad
aas
test
test
push
lock
and
adc
cmpl
sbb
pavgw
test
push
ret
jo
pop
xchg
scas
cmp
cmp
test
sbb
jge
mov
jo
cmp
pop
xchg
out
fs
imul
ret
mov
sub
loope
cmp
add
arpl
add
cmp
push
loopne
sub
dec
data16
loope
lds
scas
cli
pop
sti
mov
inc
push
stc
daa
mov
jbe
pop
jo
pushf
jle
outsl
xchg
andl
add
jl
jno
shlb
scas
mov
leave
inc
insb
push
enter
movsl
js
xlat
negl
pop
cmp
mov
mov
xor
dec
xor
shrb
mov
sub
mov
insl
jmp
xlat
mov
add
mov
andl
mov
add
lcall
adc
jbe
or
imul
pop
jp
xchg
dec
dec
sbb
lods
jne
jg
daa
mov
jmp
fisubl
mov
cwtl
iret
mov
cmpsl
fwait
mov
jns
jnp
aas
sub
and
mov
add
jb
fstps
lcall
fstpt
jg
insb
shl
xchg
jl
int
mov
lahf
cmp
dec
xchg
sub
call
mov
jmp
outsb
jmp
cwtl
dec
inc
scas
mov
pop
lret
int3
dec
std
fldl
cltd
in
imul
iret
and
adc
and
cmc
mov
dec
cmp
lods
push
cmpsl
lds
pop
cmp
mov
cli
jno
add
mov
jg
daa
gs
mov
cwtl
cmp
sub
mov
popa
lods
imul
idivl
inc
sbb
test
sbb
dec
jo
and
pushf
mov
cltd
insb
test
cwtl
mov
mov
push
jmp
xchg
pop
fstl
inc
mov
xlat
leave
into
inc
into
mov
xlat
or
cmp
xchg
cmp
or
inc
arpl
jmp
jmp
clc
stos
cmp
push
fdivl
sbb
and
add
mov
pop
imul
sbb
sbb
imul
je
mov
or
cmp
pop
pmulhw
pop
and
hlt
sub
rorl
jbe
inc
aas
loope
imul
addr16
jp
mov
sbb
js
fdivrl
pusha
mov
call
mov
cltd
mov
mov
sub
mov
inc
cmp
or
mov
bound
bound
dec
cmp
and
lock
inc
popf
mov
std
dec
cmp
sbb
push
fdecstp
jae
call
sbb
into
xchg
add
je
repz
and
mov
or
or
inc
sbb
mov
stos
pop
add
sub
mov
sub
xchg
jno
lock
push
out
sahf
mov
xor
loope
bound
inc
mov
sub
push
or
out
hlt
dec
jae
sub
dec
jge
or
sbb
jge
or
outsb
mov
mov
xchg
or
adc
xchg
jp
ds
loop
add
and
ja
pop
cmp
pop
or
jge
fs
cmp
ss
sub
add
mov
xorb
pop
add
lea
mov
mov
fldt
lea
inc
test
adc
sub
sbb
cmpsl
inc
pop
ja
mov
push
dec
aam
fstp
dec
push
jmp
adc
xchg
loop
aam
or
enter
mov
cmp
sahf
jmp
fildll
popf
aam
cmp
jmp
or
inc
movsl
std
es
ds
inc
cmp
mov
sbb
pop
xchg
mov
icebp
std
test
xchg
dec
and
rclb
aas
test
mov
cmp
jp
movsl
jns
aas
add
mov
add
outsl
fmuls
add
js
add
and
and
mov
add
testl
loopne
ds
mov
aas
or
repz
imull
lahf
aas
stc
aam
xlat
pop
sbb
and
aam
and
iret
lods
clc
call
mov
mov
in
adc
addr16
out
sbb
mov
rorb
or
addr16
movsl
stc
mov
xchg
add
cmp
mov
shlb
mov
repz
aam
out
push
lret
shlb
sbb
inc
loop
in
xor
mov
dec
dec
lahf
or
addr16
roll
es
mov
iret
jne
je
iret
mov
push
lcall
push
dec
fwait
inc
in
les
fistps
into
leave
mov
fisubs
add
mov
and
inc
push
mov
adc
and
iret
popf
inc
lret
sahf
loope
mov
aas
test
cmp
mov
dec
fsubs
mov
and
xchg
fucomi
mov
movsb
ljmp
mov
dec
cmp
rorb
fildl
xchg
mov
not
divl
in
je
call
cmp
mov
jne
mov
fcomps
dec
pop
xchg
repnz
sti
jg
int3
fbld
loop
idivb
and
jmp
fildll
dec
cmp
push
movb
lods
in
dec
ret
insl
je
or
jns
stos
jg
pop
mull
xlat
out
shll
add
stos
insl
stos
mov
fcomip
pop
sub
add
pop
push
icebp
das
mov
int3
adc
test
sbb
jg
bound
loope
mov
mov
adc
adc
and
mov
lods
or
in
xchg
sub
cmp
mov
pop
xchg
int
push
push
cmp
push
mov
cmp
leave
lcall
dec
and
cmp
adc
inc
xlat
lret
mov
sub
push
ja
daa
sti
cmp
leave
clc
cmp
inc
and
pop
mov
in
test
cmpsb
mov
push
imul
cmp
sbb
mov
cltd
mov
call
xor
jge
mov
mov
enter
leave
sbbl
jns
jo
mov
mov
cmp
sbb
lods
mov
xor
add
mov
cmp
push
aam
ds
cmc
cmp
data16
sbb
mov
cmp
cltd
cmp
clc
dec
clc
sbb
out
mov
stos
dec
sarw
mov
dec
jge
nop
mov
out
dec
xchg
lock
mov
mov
fsubr
mov
fdivrl
test
pop
push
jns
mov
div
cmp
sti
adc
and
and
fmuls
shrb
sti
push
mov
lahf
lock
xchg
loop
bound
out
dec
sub
push
adc
jae
ret
mov
jmp
and
stos
mov
push
dec
add
ret
and
push
mov
and
sti
subl
cmc
mov
cmp
loope
jecxz
enter
aas
in
ret
popa
in
add
add
mov
mov
adc
enter
ss
and
fbstp
cmp
cmp
fadd
xchg
sbb
cltd
push
and
sbb
idivl
adc
cmp
jae
push
cld
clc
or
and
xor
mov
mov
ljmp
inc
and
fidivrs
mov
ss
pop
movsl
and
mov
bound
and
lcall
lock
mov
add
and
jl
xor
pushf
xor
dec
lds
mov
movsl
movsl
loope
stos
or
push
xrelease
mov
mov
testb
divb
push
mov
mov
xor
adc
inc
mov
addl
fdivrs
ficoml
in
push
mov
dec
inc
ljmp
mov
inc
addr16
fcomip
imul
sbb
mov
xor
popf
cwtl
cwtl
test
bound
and
mov
add
mov
add
cmp
or
add
pop
movsb
dec
in
mov
and
insl
push
xchg
pop
or
sbb
xor
test
sub
mov
push
mov
repz
fnstsw
das
cmpsl
nop
cs
sub
sub
test
adc
dec
xor
pop
xchg
stos
push
mov
sub
loopne
mov
inc
mov
test
sbb
cltd
mov
mov
cli
dec
idiv
pop
out
in
pop
ret
andb
push
sub
or
cld
inc
mov
xor
or
lcall
lret
jmp
push
inc
scas
lds
add
orl
js
pop
or
bound
pop
lock
cmp
movsb
repz
std
cmp
into
fstps
pop
sub
loope
adc
sbb
div
add
mov
clc
enter
mov
lret
popa
ljmp
mov
ja
fsubrs
decl
scas
enter
xor
pusha
stos
loope
enter
mov
sbb
cmp
pop
jo
icebp
mov
add
mov
out
out
test
ret
ret
test
je
aaa
jne
sub
jmp
and
xor
pop
sarl
rorl
sti
sub
push
xchg
jle
mov
cmp
dec
cwtl
pop
adc
xor
inc
sub
mov
pusha
fucom
leave
data16
xlat
jle
stc
pop
mov
jge
out
call
push
out
call
mov
bound
cwtl
test
sti
dec
jbe
xchg
fildl
push
test
nop
lcall
mov
xchg
mov
aaa
aad
sbb
das
shll
dec
cmp
enter
adc
cmp
xchg
loop
fists
nop
in
rcll
decb
and
cmp
mov
rcl
jl
mov
insb
cmc
test
fsubrs
movsb
push
add
xor
mov
pop
push
repnz
jmp
lahf
popf
mov
cmp
add
pop
inc
jnp
shlb
ja
mov
mov
call
test
ds
cli
jecxz
mov
sub
sahf
cmp
inc
mov
imul
pusha
fdiv
mov
push
cmp
fcomps
sbb
call
pop
or
sub
bound
incb
mov
mov
fistpll
xchg
xor
rclb
mov
push
fistpl
mov
std
inc
inc
jnp
and
and
jbe
xlat
rcl
adc
sahf
jl
and
sarb
shll
enter
inc
addb
push
push
ljmp
cmp
cwtl
bound
xchg
xchg
cmp
mov
mov
ret
mov
cmp
mov
pop
xchg
sbb
xchg
pop
xchg
popa
out
sub
jecxz
push
int
mov
dec
sbb
xchg
fsubs
mov
dec
loop
scas
add
pop
dec
mov
cld
pop
fldcw
jnp
cmp
fisubs
or
iret
pop
lret
cmpsl
icebp
test
and
insb
xor
or
pop
and
addb
sbb
out
fyl2xp1
xorl
lret
es
push
iret
pop
push
push
adc
addr16
jmp
jp
adc
pop
je
cmp
jge
popa
jnp
aad
shlb
negl
xchg
aam
xchg
ss
mov
dec
push
and
inc
inc
or
inc
pop
jg
push
aam
mov
add
out
xchg
pop
pop
mov
push
pop
add
mov
dec
add
mov
or
ret
adc
dec
xlat
aam
insb
adc
sbb
mov
ljmp
jl
xor
imul
shl
movsb
mov
je
xchg
rcll
mov
cmp
add
pop
in
es
aad
inc
repnz
lods
xor
fisttps
adc
pop
aaa
push
xchg
mov
jge
mov
pop
mov
cmpsb
mov
jbe
mov
mov
sbb
ffree
mov
repz
pop
enter
stos
dec
pop
and
ficomps
repz
cmp
jo
in
clc
jmp
xchg
lds
enter
xchg
loopne
add
mov
fbld
mov
dec
stc
mov
push
mov
mov
cmp
sub
lcall
and
stc
or
addr16
push
sub
or
repnz
fs
out
icebp
and
cltd
mov
iret
xor
cmpsl
icebp
call
pop
dec
mov
sub
aam
jg
mov
xlat
add
pop
mul
cli
mov
sub
sub
sub
sub
push
fsubl
inc
outsl
dec
test
dec
lret
sub
dec
movsl
imul
imul
aam
cli
mov
cmp
sbb
pop
inc
pop
loopne
jle
push
ja
sub
mov
sbb
xorb
adc
ss
lahf
lret
inc
ljmp
sub
popa
aas
xor
dec
or
sub
orl
test
or
in
mov
lcall
mov
pop
mov
inc
dec
out
movsb
mov
outsl
inc
adcl
stc
daa
fiadds
cld
dec
in
mov
lods
mov
fldt
pop
popa
test
dec
pop
pushf
loopne
ret
pushl
ffreep
and
fisttpl
in
cltd
dec
inc
pushf
mov
fisttpl
orb
fbld
or
addb
popa
jns
imul
and
mov
ret
cmpsl
mov
dec
filds
ja
sbb
das
ljmp
daa
sub
popa
std
jmp
mov
cmp
je
cmp
sbb
into
add
ret
ret
sahf
xlat
mov
daa
or
iret
mov
and
cwtl
fbstp
ds
fisttpl
stos
cmp
lock
add
int3
sub
jl
jns
push
push
pop
clc
sub
sarb
cs
rolb
daa
lahf
out
clc
mov
xor
outsl
or
cmpl
mov
mov
shrl
pop
xor
stos
jge
push
xchg
fnstcw
shrb
mov
ds
sub
loopne
leave
fcoms
js
pop
cld
call
ja
daa
mov
mov
popa
mov
inc
dec
sbb
mov
shr
out
sti
adc
sbb
fldenv
pop
push
adc
lahf
push
negl
inc
test
sbb
pop
subb
sub
sbb
cld
movsb
mov
inc
dec
imul
xchg
cmp
shrl
out
nop
lods
cld
xlat
sbb
imul
insl
or
xchg
mov
arpl
push
or
jmp
xchg
out
push
push
xor
and
sti
stos
add
cmpsl
testl
pop
lcall
inc
fistps
add
mov
mov
stos
scas
subb
movsb
lahf
aaa
mov
jp
jne
movsl
pop
ret
cmpsl
mov
es
and
dec
sarl
aas
lock
icebp
sbb
adc
enter
mov
xchg
mov
dec
dec
test
sti
gs
sar
mov
push
test
std
or
cmp
lret
sbb
iret
mov
jne
inc
push
jge
pop
push
cmp
pop
sbb
pop
mov
arpl
daa
ljmp
orb
pop
or
shr
outsb
push
cmp
iret
shl
loopne
dec
push
outsl
ss
sbb
mov
shlb
jmp
sbb
adc
loope
orb
mov
cli
mov
negl
arpl
cmp
sbb
mov
push
mov
mov
mov
in
in
mov
fwait
and
imul
daa
insl
mov
sub
push
call
pop
xchg
jo
cmpl
lods
imul
cmpb
lods
mov
mov
xchg
ja
cmp
les
cltd
cs
mov
dec
cmpb
cmp
cmp
cmpb
sub
stc
fstpt
pushl
jbe
movsb
mov
sub
je
movsl
mov
mov
jne
jns
mov
daa
loope
das
jo
adc
out
in
dec
mov
dec
rcl
or
cmp
or
pop
fiadds
xlat
test
test
fucomi
loope
popa
fstpl
mov
and
sub
cmpl
idiv
addr16
pushf
push
popf
cmp
add
xchg
stos
cli
fildl
mov
xchg
dec
xchg
call
adc
and
and
mov
pop
cmc
dec
mov
cmp
jle
cmpb
mov
lcall
xchg
adc
orb
and
pop
jns
movsb
and
xor
and
jmp
cmpsb
scas
ret
mov
jge
mov
mov
and
int
dec
jns
test
and
in
sub
test
hlt
cli
out
movsb
jp
shl
divl
aas
arpl
das
sbb
movsl
mov
jnp
aas
push
data16
cltd
sti
cmp
cmp
inc
jp
cli
mov
testl
xorb
or
pop
rol
cmp
or
push
xchg
xor
sti
iret
mov
dec
mov
fdivrl
push
jmp
loop
mov
xlat
in
mov
lahf
sbb
test
adc
sbb
movsl
adc
leave
cmc
xorb
and
mul
mov
adc
stos
cmp
es
and
sub
cmp
outsl
pop
jne
js
sub
std
cmp
adc
sub
ljmp
je
insl
cmp
mov
in
addr16
push
adc
repz
es
sub
rorl
or
adc
pop
test
dec
push
adc
fldt
xlat
sbb
cli
inc
stc
inc
icebp
inc
inc
jb
push
lods
ljmp
rolb
mov
jb
ss
inc
enter
add
pop
inc
jmp
inc
cli
push
mov
daa
dec
out
sub
lds
adc
or
rolb
push
jge
mov
inc
adc
push
outsl
sub
stc
mov
pop
int
push
mov
sbb
pop
add
push
cmp
mov
push
lods
das
jne
sub
cmp
sahf
dec
push
jnp
divb
mov
jo
shlb
push
mov
inc
lahf
pop
outsl
jmp
cmpsb
cmpsl
mov
popa
ret
ficoml
inc
inc
addb
and
mov
mov
mov
sbb
inc
mov
les
push
aad
or
push
rorb
int
mov
add
lea
dec
dec
cli
inc
cmp
mov
in
repnz
dec
jp
pop
aas
insl
in
mov
push
cmp
sbb
mov
dec
dec
inc
mov
sbb
shlb
mov
mov
xchg
ja
enter
cli
sub
adc
and
or
mov
add
aas
cmpsb
mov
popf
pusha
inc
in
xor
divl
xchg
imul
loopne
jp
mov
fcomps
push
out
stos
ficomps
bound
rcl
jnp
sbb
inc
lcall
lcall
pop
push
inc
clc
sub
movsl
mov
mov
pusha
mov
ds
mov
cmp
sbb
clc
mov
and
repnz
xchg
dec
mulb
or
movsb
pusha
testl
loop
fcoms
and
loop
movsl
shlb
pop
js
and
add
clc
dec
aas
adc
mov
inc
lcall
adc
mov
in
cli
jnp
mov
xor
sbb
cmp
ja
dec
jo
pushf
cmpl
sub
lahf
mov
stc
cmp
shr
mov
or
or
fmuls
mov
pop
out
ret
clc
ljmp
inc
mov
push
cmp
mov
push
push
xor
movsl
ficomps
in
sbb
lcall
cli
push
sbb
aaa
inc
ficomps
cmp
and
ljmp
mov
fstpt
push
pusha
enter
sbb
cmp
inc
test
cmp
stc
adc
popf
mov
mov
fld1
clc
push
sbb
cmpsl
out
cmpb
pop
subb
or
pop
mov
jmp
cmp
push
mov
mov
lret
shrl
jg
add
ds
jle
inc
addr16
inc
pushf
and
mov
jp
xor
sbb
rclb
mov
dec
xchg
jo
stos
mov
ljmp
out
mov
and
dec
leave
push
sti
push
pusha
push
sbb
dec
inc
and
mov
rcrb
fiadds
push
jecxz
add
lret
js
ss
and
adc
andb
sbb
jbe
and
lods
mov
in
lea
pusha
mov
cmp
aaa
push
out
jmp
lgdtl
or
int
mov
mov
mov
cmpl
incl
lods
testl
add
jg
ret
imull
pop
xchg
lods
or
clc
xchg
push
hlt
lahf
mov
lods
cltd
cld
es
rol
mov
movsb
inc
push
std
in
mov
cmp
call
shll
in
fwait
adc
out
sub
ja
or
and
cli
pop
mov
loop
pop
lcall
les
outsl
les
jg
add
cmp
out
test
in
pop
mov
mov
cmp
movsl
mov
mov
mov
push
pop
cld
cmp
sbb
xchg
xor
mov
test
lahf
jne
mov
sbb
mov
sub
dec
repz
xchg
cmp
call
cmp
ja
cmpsl
jl
xchg
pop
fsubs
xor
fdivl
mov
xorl
and
pop
lock
and
pop
push
adc
jno
lock
mull
and
sbb
ss
movsb
mov
mov
sub
and
dec
or
lea
xchg
test
cmp
or
cmp
lret
loope
out
cmp
inc
inc
pop
mov
mov
testl
subb
push
adc
out
nop
daa
dec
add
xchg
out
adc
xchg
lods
and
xor
outsb
pop
jge
push
orb
dec
cmp
js
push
mov
pushf
jg
aas
insb
lcall
jmp
lret
push
mov
enter
xchg
cmc
jge
or
jge
mov
sarb
incl
mov
push
push
nop
jg
and
test
push
cmp
fdiv
push
lcall
mov
adc
les
push
outsb
arpl
ret
mov
sub
int
cs
stos
push
loop
jo
and
sbb
mov
xor
sbb
xchg
sarl
test
jge
test
testb
sarb
in
add
pusha
xor
push
push
out
clc
xchg
adc
insl
pop
pop
cmp
adc
pusha
mov
mov
lret
out
push
mov
mov
insl
call
xchg
xor
popa
cmpsb
lods
out
stos
cmp
jae
adc
es
repz
add
out
iret
or
mov
daa
mov
push
subl
das
xadd
repz
stc
fnstcw
fdivs
jle
ljmp
pop
mov
fstps
dec
inc
cltd
loopne
sbb
mov
pop
mov
stc
inc
cmp
rorb
or
push
mov
xchg
stc
xchg
jl
int3
and
fadds
out
lods
lret
dec
fsubs
test
dec
jae
adc
imull
sti
cmp
imul
push
mov
arpl
pop
iret
bnd
and
rcrb
andb
out
icebp
pop
inc
test
fwait
pop
xor
addl
sbb
add
cmp
pusha
stc
fwait
popa
adcl
mov
subb
jmp
lods
ja
add
jnp
test
cmp
negl
loop
fnstenv
xor
fcomps
aas
inc
andb
push
push
test
and
dec
rcrb
ret
rcll
mov
lods
lahf
scas
mov
inc
scas
shll
xchg
push
test
adc
fcoms
xchg
pop
mov
stc
push
leave
das
sti
push
mov
fs
cmp
shr
xchg
sti
xor
jns
mov
jecxz
lahf
pop
pushf
aaa
mov
inc
add
fistps
cld
mov
in
ss
push
mov
xchg
inc
into
lods
mov
mov
cmp
fmulp
cmp
mov
mov
outsb
mov
cmp
inc
in
and
and
mov
xor
mov
pusha
lods
lret
sbb
mov
xor
adc
icebp
or
inc
aaa
mov
outsl
shrl
lods
jno
stos
ror
xchg
in
mov
dec
xor
mov
pop
dec
mov
ret
sahf
mov
mull
addr16
imul
sub
cmp
imul
xor
insb
mov
daa
cltd
ljmp
mov
inc
lds
pop
jnp
negb
cmp
dec
clc
clc
mov
pop
int3
add
add
adc
pusha
in
inc
mov
cltd
int3
jge
cli
cmp
fsts
cmp
sbb
stc
adc
mov
cwtl
mov
leave
in
js
inc
sbb
pop
fldenv
cmp
shl
fidivs
aad
sarl
loop
pmulhuw
xchg
rorb
cli
popa
es
dec
jmp
add
xchg
ja
or
jl
push
aam
sbb
push
bnd
and
mov
sub
or
sbb
sub
insb
dec
and
das
add
cmp
pop
fdivrl
and
cmp
sbb
insb
mov
mov
enter
int
pushf
aaa
cmp
loope
mov
mov
jg
das
mov
cmp
pop
add
loop
push
cmp
ja
test
in
inc
sarl
cmp
sub
mov
mov
js
cmpsb
iret
mov
jno
jne
pop
sbb
cmp
cmp
shll
add
fld
pop
popa
adc
add
sarl
cmp
mov
test
fwait
stos
mov
mov
test
sub
aad
fsubr
sub
ja
les
es
cmp
cmp
inc
test
and
dec
xchg
xor
mov
add
cmp
cmp
aas
cmp
xchg
fsubp
xchg
hlt
sbb
ljmp
jae
cmp
mov
aas
pop
test
mov
lods
cli
inc
adc
add
inc
adcb
or
mov
pop
inc
mov
jmp
shlb
mov
nop
push
mov
dec
outsl
mov
fidivrl
xor
mov
and
xlat
sti
xor
cmp
std
lods
sub
sub
mov
mov
sub
scas
cmp
test
js
mov
fistpl
cld
lea
lods
inc
mov
icebp
out
xor
mov
add
cmpb
test
cmp
ds
sub
in
mov
xchg
repz
cmp
push
cmp
sub
xchg
out
mov
push
fs
rcrl
mov
lods
lret
pop
sub
xor
pop
push
movhps
cmp
es
mov
into
push
call
cmp
sub
mov
in
inc
cwtd
jmp
lcall
cmp
fcomp
push
popa
cmp
mov
mov
dec
mov
lock
out
faddl
sahf
xchg
cmp
mov
shlb
xchg
cmp
xor
mov
or
adcl
sub
or
dec
dec
cmp
popf
jg
inc
filds
icebp
mov
fists
in
aad
scas
push
mov
mov
cwtl
jnp
repnz
fimuls
jge
int
mov
pop
subl
or
sbb
sub
mov
mov
call
outsl
push
jb
mov
xchg
cmp
shlb
sbb
js
stc
mov
mov
mov
fwait
cmc
sbb
jns
sbb
cmc
pop
sbb
inc
mov
scas
test
push
addr16
mov
dec
push
fcomps
mov
cmovns
loopne
push
sbb
mov
addr16
mov
adc
loope
std
add
pop
sbb
jg
push
sbb
or
push
data16
ss
test
fsubr
test
rcrb
test
mov
arpl
push
rcrb
inc
cmp
jne
mov
pop
lcall
mov
fcomp
mov
leave
fstpt
and
loop
and
fstpt
push
js
scas
pushf
pop
inc
fsub
sub
xchg
pop
adc
ljmp
loop
jo
or
popa
int3
ret
test
adc
cmp
cmc
push
sub
loope
push
jmp
iret
add
out
mov
sbb
fsubs
pop
dec
cmp
mov
loopne
cltd
sub
cltd
cmc
fstl
subb
add
or
jo
testl
es
cli
jp
mulb
xchg
cmp
aas
pop
mov
in
xchg
sbb
cmp
mov
push
js
push
icebp
and
xchg
xchg
shlb
cltd
subb
cltd
shlb
das
jg
xchg
std
gs
add
mov
inc
jno
xchg
jbe
jge
cmpsb
bnd
lea
inc
and
cmp
jbe
pop
mov
out
aam
and
arpl
add
nop
add
pop
leave
jmp
mov
nop
test
testl
inc
mov
jne
cmp
leave
mov
jle
sbb
in
sbb
pop
or
lock
jl
lea
push
shl
lds
adc
push
aam
pop
mov
add
xchg
pop
addb
push
test
pop
and
out
mov
inc
and
adc
lods
cld
lea
xor
jl
jo
add
jge
leave
cmpb
loop
xchg
repz
mov
leave
aam
mov
xor
fdivrl
pop
pop
lea
loope
dec
sub
or
sbb
pop
cmpsb
bound
psubusw
orb
data16
or
xor
fstpt
fsubr
add
in
xlat
xor
push
nop
jg
push
mov
loop
int3
sub
mov
mov
ret
xor
mov
mov
pop
push
ja
ds
or
cmpsb
dec
mov
pop
adc
mov
jmp
sbb
or
pop
cmpl
inc
jle
lahf
sarl
xchg
jge
fstps
or
push
incb
mov
push
fists
and
inc
clc
bound
rcll
test
ret
imul
nop
cs
arpl
and
fwait
xchg
stc
cmp
cwtl
jge
lds
mov
adc
enter
jmp
pop
adc
and
addr16
stos
mov
jb
repnz
pop
xlat
inc
mov
aad
pop
jg
xor
push
test
sbb
push
xor
pop
jno
outsb
cmp
ljmp
dec
js
xchg
mov
sarb
into
es
pusha
xchg
shr
pop
rcrb
and
dec
add
stos
movsb
addr16
mov
mov
and
or
mov
xchg
fmuls
negb
and
xor
mov
cld
pop
cld
dec
gs
lds
sub
in
and
xchg
sbb
aas
mov
aaa
push
les
ficoml
sub
sbb
xchg
inc
ret
cs
nop
jp
pusha
add
sahf
mov
inc
sbb
aam
inc
lret
imul
rcrb
outsb
pop
xchg
dec
sbb
movsb
cmc
fimull
cmpsl
daa
mov
mov
adc
xorb
sbb
loope
scas
fisttpl
xorl
out
insb
push
add
rolb
mov
test
leave
inc
cmp
leave
cmp
testb
cld
inc
mov
stos
mov
sti
mov
rcl
mov
movsb
cmp
aad
mov
test
pushf
cmp
pop
int3
adc
xchg
mov
xchg
insl
jbe
mov
shll
xchg
sub
add
push
fdivrs
and
loopne
add
mov
sub
sbb
and
orb
jne
sub
push
cs
cld
stc
out
or
jae
sub
or
in
and
pusha
subb
cmp
fstps
jo
and
lcall
inc
mov
stos
cmp
xchg
in
clc
add
jge
fs
ret
sub
adc
mov
fsubs
adc
push
cmpsl
cli
filds
mov
push
fldcw
mov
scas
mov
add
js
dec
or
cld
jne
xor
adc
mov
call
pushl
shr
sub
mov
daa
and
sti
add
push
pusha
mov
fs
ja
shll
pushf
in
push
out
jmp
mov
and
add
adc
mov
mov
inc
jecxz
xor
or
add
jne
test
es
fists
mov
dec
pop
lcall
jb
sti
jne
es
popf
inc
cmp
sbb
mov
and
xlat
mov
ds
inc
adc
add
aaa
push
or
cmp
cmpsl
mov
xor
dec
push
jmp
adcb
ret
loop
sub
aad
stc
out
scas
aas
insb
mov
shrl
pop
pop
mov
mov
adc
push
cmc
inc
pop
imul
mov
cmpsb
arpl
and
mov
xor
div
clc
or
aam
dec
push
cmpb
jp
mov
and
arpl
ret
lcall
jp
mov
push
push
fcomi
xor
das
lahf
std
mov
jo
push
mov
arpl
dec
shll
add
aad
pushf
mov
inc
test
fsts
push
mov
pop
jmp
movb
aam
sar
mov
cwtl
mov
ds
cmpl
lcall
add
mov
or
je
jmp
sbb
inc
out
jo
dec
fcomi
in
repz
sub
dec
jge
cld
push
add
arpl
mov
ret
dec
pop
sbb
es
out
mov
fldt
pushf
xor
fwait
mov
outsl
mov
and
sub
inc
dec
jae
xor
loope
xor
push
xchg
jbe
fcmovnbe
xchg
push
fadd
or
cmp
and
fisubl
lcall
mov
xchg
mov
roll
dec
cwtl
fidivrl
mov
xchg
negb
gs
lea
inc
mov
and
cwtl
loop
fs
cmp
and
lea
popa
outsl
and
cmp
aaa
lret
jns
pusha
pop
pop
loopne
mov
xor
jl
cld
lds
jo
gs
imul
mov
rol
mov
fistpll
ret
or
movsb
aaa
fcom
out
frstor
inc
mov
mov
sbb
fnstsw
jl
pop
rol
sub
pop
ret
or
sbb
cmp
rolb
fnsave
mov
inc
mov
and
fidivrs
cmp
or
push
sarl
jecxz
mov
add
mull
mov
adc
mul
js
lcall
iret
cli
push
mov
jnp
mov
push
movsl
enter
pop
das
lret
hlt
adc
insb
sub
dec
sbb
and
pop
push
jbe
ret
into
sbb
pop
xtest
cmp
or
out
sub
imul
fsts
dec
cmp
outsl
inc
in
bound
lock
pop
in
rolb
arpl
jecxz
xor
push
xor
rcl
fbstp
sbb
push
test
sub
sbb
mov
clc
out
js
mov
jb
sub
pop
es
lea
repz
pop
adc
nop
fwait
cmp
mov
mov
dec
mov
adc
int
jnp
jle
rcrb
pop
push
es
loope
pop
popa
cmp
outsb
push
mov
jb
in
fistpl
mov
sub
in
test
xor
mov
jmp
rorl
insl
stc
push
sahf
popa
cmp
repnz
cltd
push
test
clc
pusha
lahf
fwait
jmp
ret
gs
sbb
xor
mov
idivb
pushf
loope
les
push
rcll
addl
leave
stos
mov
aam
xchg
pop
das
xor
sub
adc
clc
adc
sar
in
cmp
clc
das
dec
xchg
arpl
cwtl
and
mov
or
cmp
dec
inc
jle
cmp
push
call
mov
inc
fldl
adc
ss
mov
cs
std
shll
push
xor
sub
cmp
pop
cmpsb
lret
andb
mov
cmp
xor
inc
xchg
dec
fiaddl
mov
loope
loope
xorl
xchg
push
pop
cmpsb
mov
mov
push
jmp
sbb
mov
pop
roll
pop
divl
pop
xchg
pop
xor
bound
pop
bound
int
lahf
icebp
push
lcall
fistpll
call
xchg
xchg
loope
test
mov
in
cmp
leave
sarb
loopne
dec
stos
daa
jnp
testb
mov
mov
xor
xor
mov
sbb
dec
xor
pop
pop
xlat
pop
xor
adc
inc
sbb
dec
loop
lcall
fildll
mov
mov
adc
dec
stos
or
cmp
jno
subl
jbe
cmp
jae
bound
loope
fs
sarb
add
mov
sarl
out
clc
mov
sub
lds
mov
dec
mov
stos
mov
shlb
out
outsl
stos
xchg
cmpsl
inc
ss
cmp
mov
aas
movsl
dec
mov
ret
jp
call
push
fcomp
and
fs
mov
rcrl
sbb
jb
sbb
sbb
and
movsl
push
mov
xor
ja
push
xchg
jecxz
mov
lds
ja
lcall
aaa
push
cmp
adc
js
dec
sub
xorb
xchg
cmp
hlt
aam
sahf
dec
fldl
fistps
cmp
mov
or
add
negb
ret
iret
xchg
movsl
add
ja
int
inc
jp
sbb
jge
and
mov
add
mov
cmp
xor
ret
aas
mov
cli
popa
sbb
cmp
dec
stos
xchg
cmp
cmp
mov
xor
cmpsb
add
lret
mov
and
cmp
loopne
xlat
in
fcompp
sbb
into
imul
in
push
in
mov
movsl
xchg
dec
aad
test
jg
mov
int3
pop
push
in
ss
rcrl
inc
out
inc
fbstp
mov
mov
sub
fnstsw
add
inc
jecxz
mov
stc
xchg
loope
int
cld
nop
cs
mov
cld
pop
mov
mov
cmp
cltd
pop
and
mov
mov
push
dec
in
pop
pushf
xor
xchg
mov
das
inc
xlat
push
mov
fucom
fnstcw
sub
fsubl
xchg
push
push
pop
loope
or
imul
lea
mov
stc
inc
mov
jo
loop
xor
pop
adc
cltd
xchg
cmpsb
jecxz
pop
pop
loopne
cmp
pop
test
dec
addb
and
enter
loop
lea
adc
xchg
js
add
cmp
and
into
mov
inc
lods
mov
clc
mov
cmp
cmpsb
inc
rolb
pushf
into
pushl
dec
sti
cmp
fsubs
daa
shrl
jg
aad
in
dec
frstor
add
add
mov
xchg
and
cmp
cmp
lahf
pop
fcoms
or
push
mov
fisttpl
scas
or
scas
pop
es
inc
mov
enter
sar
jns
sub
lods
mov
pop
aad
jne
in
push
mov
jecxz
jae
testb
es
insb
sti
pop
push
mov
jecxz
mov
mov
jmp
popa
out
sub
xorb
cmpl
or
lea
rorb
cmp
mov
mov
cli
ror
push
sub
push
mov
sub
loope
sbb
cmp
adc
pushf
cmp
pop
xchg
cld
dec
rclb
rcr
out
push
inc
or
mov
cwtl
shll
and
mov
inc
pop
sub
das
inc
stc
in
pop
movsb
add
cwtl
dec
or
enter
sub
xchg
cmp
or
mov
out
mov
movsl
inc
add
sub
add
outsl
xchg
jecxz
pop
pop
mov
xor
sar
and
cmp
test
cmp
adc
andb
test
stc
inc
or
dec
idivl
push
xor
mov
push
add
jp
adc
fisubl
cmpsl
clc
int3
sub
fildl
sub
add
aad
fstp
inc
or
cld
mov
lret
fsubs
add
lock
enter
loop
loopne
xchg
dec
inc
std
pushf
into
and
scas
aam
lds
mov
mov
push
mov
out
fwait
js
mov
jg
sbb
mov
lcall
fisttps
sub
sbbl
repz
or
jecxz
adc
cmp
mov
xor
dec
frstor
es
movsb
loopne
popf
ja
mov
in
dec
mov
jmp
sti
or
xor
ror
int
ret
int3
js
push
enter
xor
cmp
adc
push
jge
divb
add
shlb
push
mov
or
aas
movsl
mov
aad
add
aam
sbb
pop
sti
cmpsb
pop
in
xor
or
lods
jo
int
xor
inc
pusha
cmp
cwtl
rol
jge
and
xchg
mov
cmpsb
push
jge
jge
iret
pop
aam
or
inc
leave
sbb
xor
xchg
xor
inc
js
loope
cmp
lcall
push
sbb
mov
cs
pusha
mov
pop
xchg
push
mov
cmp
inc
lcall
jmp
cltd
pop
mov
cmp
pop
pop
jp
mov
jecxz
mov
xor
adc
mov
and
and
push
test
add
test
test
adc
inc
push
push
dec
jb
std
in
xor
rolb
test
jb
loope
dec
and
cwtl
call
mov
and
arpl
stos
in
hlt
pushf
and
xor
cld
insl
add
pop
adc
loop
insb
dec
push
mov
mov
sbb
cmp
lods
sub
xor
or
push
add
or
jmp
clc
sbb
loope
bound
cwtl
sub
cmp
enter
or
stc
lods
ss
sbb
rclb
xchg
int3
inc
mov
mov
gs
aas
jmp
inc
icebp
enter
adc
sahf
call
movsb
pusha
mov
dec
das
stos
inc
adc
xchg
cmp
mov
jmp
ss
pop
sub
movsb
shl
test
hlt
sbb
jne
pop
fisttps
add
test
test
sti
add
mov
ret
and
call
mov
add
stos
adc
xor
out
sbb
pushl
cli
test
fisubl
movd
push
ja
repz
dec
repz
mov
fisttpll
mov
neg
pop
mov
fadds
fistpl
lahf
push
ffreep
mov
mov
lods
shll
inc
std
cmp
out
div
sahf
insb
ficoms
mov
cwtl
out
jmp
jmp
lret
mov
or
pushf
dec
out
xor
mov
arpl
jp
mov
mov
sub
pop
cmp
sub
push
or
pop
mov
fcompl
mov
aad
push
mov
mov
mov
sti
insb
gs
jmp
mov
sti
std
cmp
dec
stos
imulb
pop
mov
pop
jp
fcompl
test
pop
es
pop
pusha
push
jge
cmp
cwtl
pushf
cmc
pop
stc
negl
cwtl
push
clc
jge
mov
push
push
popf
adc
mov
popa
out
fsubr
dec
or
inc
fs
cli
pop
pop
jmp
add
ja
adc
lcall
dec
fs
pushf
cmp
push
pop
xchg
cli
sbb
mov
jno
add
or
shll
cmpsb
sbb
mov
adc
xor
hlt
stos
bound
scas
fadds
mov
jg
or
pop
mov
mov
cltd
sub
ja
aaa
loop
loop
mov
call
mov
int
ljmp
push
inc
je
les
cmp
ret
cmp
jl
jecxz
test
ljmp
stc
pusha
mov
or
fisubl
pop
cmp
int
mov
and
rclb
jecxz
and
out
mov
xor
dec
add
jecxz
popa
xor
or
imul
insl
add
xor
jmp
mov
jecxz
dec
inc
movsb
in
rorb
mov
rcr
stc
daa
and
mov
mov
imul
mov
xchg
inc
bound
and
fldl
ret
jl
jge
cli
sbb
movsl
nop
movsl
cmp
fidivrl
out
push
jae
pusha
mov
ds
aad
mov
out
and
ds
cmp
cld
hlt
mov
mov
movsb
in
jge
xor
xchg
xchg
or
and
mov
stos
add
sti
sbb
ss
je
fisubl
and
stc
and
insl
jle
jns
sub
leave
adc
cmp
sub
sbb
aaa
adc
or
sub
shll
jo
add
divl
xlat
mov
mov
addb
je
in
rolb
cld
fstpt
roll
sti
xchg
lahf
or
lods
call
xor
call
jecxz
es
lcall
xor
dec
rep
call
leave
pusha
jmp
mov
std
inc
jge
add
xor
pop
ror
std
xor
dec
rolb
stos
daa
cmc
enter
add
pop
xchg
mov
add
mov
inc
xorb
enter
out
jns
fldcw
inc
sub
sbb
mov
int3
push
andb
sarb
out
sbb
cmp
ljmp
pop
xchg
out
imul
notb
inc
faddl
mov
sbbl
sub
add
add
jl
jge
dec
pop
test
push
sub
sti
sahf
dec
lret
imul
jnp
xchg
cmp
pop
jge
inc
inc
ror
mov
into
jmp
push
cltd
mov
mov
cmpsl
sub
pop
enter
push
mov
adc
sti
and
mov
std
sbb
fsts
repz
insb
rcll
fwait
cmp
mov
fcmove
es
repz
cmp
test
fsubs
inc
cmpsl
andnps
int
pop
dec
cmp
stos
xorb
loopne
cltd
fmul
aam
in
pop
mov
imul
and
popa
push
dec
fistl
ss
andb
and
xor
and
mov
je
push
sub
stos
dec
cli
fistps
movl
jb
mov
scas
in
fldenv
rclb
pop
dec
iret
aam
cmp
or
xchg
jb
ret
loope
adc
in
mov
stc
movsb
cmp
mov
call
dec
das
jecxz
mov
sub
mov
aam
mov
mov
dec
lcall
xor
dec
out
xchg
out
shll
or
lock
mov
in
fwait
cmpl
test
aam
ud0
or
and
dec
fmull
dec
sbb
jmp
loope
imul
cli
xchg
xor
mov
les
insb
sbbb
in
into
sti
and
mov
js
fadds
fcmovne
sti
fldenv
or
fsubrl
pushf
cli
xchg
popa
stc
adc
sub
add
repz
cmp
jnp
dec
xchg
dec
lahf
popf
inc
mov
test
out
pop
mov
jo
sti
mov
inc
adc
and
mov
pop
add
xchg
fdivrl
jb
pushf
stos
lcall
fs
ss
add
fdivrs
jp
xchg
fsubl
mov
popa
dec
jno
lds
sub
call
scas
vpunpcklwd
bound
gs
insb
fisttpll
int3
pop
mov
aaa
adc
xchg
mov
aad
jbe
mov
sbb
sub
mov
dec
push
std
cmp
out
cld
cmp
movsl
call
popf
mov
stc
or
cmpsb
mov
cmp
in
rcrb
mov
or
adc
mov
sbb
push
jle
scas
test
xlat
mov
aaa
mov
add
rolb
adc
lods
xchg
xor
add
cld
lahf
pop
divb
mov
dec
cmp
movsl
in
outsb
dec
cmp
movsb
jecxz
dec
frstor
repz
add
ja
repz
sub
jg
xor
test
mov
pop
mov
mov
and
add
mov
stos
pop
cmp
arpl
mov
and
cltd
add
inc
mov
aad
lahf
das
cmp
mov
add
sbb
xor
pop
mov
es
dec
pop
cmp
jo
leave
mov
rcll
mov
icebp
loopne
inc
adc
mov
dec
dec
rcll
jns
inc
test
mov
mov
ds
loope
lock
xorl
jbe
xorl
pop
pushf
addr16
nop
cmc
mov
mov
insb
popf
cmp
rcrb
mov
jno
cmpl
pop
aas
nop
pop
in
jbe
cmp
sbb
inc
mov
sbb
fldcw
leave
mov
and
rorb
mov
push
aad
dec
xchg
pop
imul
mov
inc
leave
adc
cmp
inc
cltd
int3
jnp
leave
shlb
orb
add
andb
sbb
inc
and
xor
sti
aad
ds
dec
aad
dec
cltd
in
inc
aam
pop
mulb
mov
push
mov
mov
pop
xor
mov
pop
sub
inc
or
add
shrl
jp
addr16
jg
xlat
push
cmp
sub
inc
loop
or
mov
pop
mov
adc
mov
mov
push
addl
pop
enter
imul
call
lds
and
and
add
cs
jp
pop
js
or
xor
sub
enter
iret
in
or
shrl
stos
push
pushf
adc
imull
stos
or
mov
aad
inc
icebp
fucomp
pop
pop
add
ret
jmp
pop
mov
or
mov
sarl
fidivl
sti
and
sbb
mov
ret
faddl
movsl
sbb
sbb
mov
sub
outsl
fistps
fidivs
imul
lods
mov
inc
ljmp
mov
shlb
sbb
mov
push
stc
fsts
popa
mov
xlat
lds
ror
aaa
jne
jnp
push
hlt
ja
cmp
nop
cmp
cwtl
movsl
cmpsb
mov
out
loopne
fcoms
add
xchg
add
jns
insb
fstpt
lret
aad
add
pop
cmp
mov
ficoms
idiv
push
icebp
or
sub
rolb
iret
lods
sbb
testb
mov
inc
in
add
scas
lods
push
out
xlat
sarl
mov
inc
mov
jb
mov
addr16
repnz
dec
dec
mov
add
mov
mov
test
cmp
loop
loope
mov
push
lret
loopne
inc
scas
sarb
jb
es
gs
mov
addr16
mov
into
xrstor
dec
rolb
mov
cmp
pop
inc
repnz
jg
adc
or
popa
sbb
test
sbb
xlat
mov
inc
stos
aam
jp
inc
pop
daa
stc
mov
and
xchg
inc
je
inc
xchg
test
inc
fs
out
data16
mov
sbb
nop
mov
xchg
inc
mov
fwait
sarl
lods
and
mov
mov
or
pushl
push
sbb
test
cmp
mov
mov
jl
test
mov
mov
fxch
inc
icebp
aam
mov
pusha
repnz
shl
rol
dec
add
push
sbb
mov
movsl
adc
xor
xor
fbstp
sub
mov
inc
xchg
dec
xlat
cmp
addb
sti
sbb
mov
test
aam
mov
jns
cmp
cld
aam
mov
inc
insb
inc
pop
or
sub
adc
je
mov
pop
cmp
and
mov
in
xor
ss
adc
ds
sahf
and
xor
mov
inc
repz
mov
roll
pop
xor
xchg
clc
popa
sbb
lret
sub
ret
insl
sbb
imul
mov
cmp
push
mov
xor
sbb
inc
in
dec
call
xor
stc
jge
and
jp
mov
stc
out
xchg
jecxz
sub
enter
mov
test
fwait
adc
lods
loope
jmp
mov
mov
fucom
pop
ljmp
popf
mov
sti
pushf
rol
je
fdivrl
in
call
push
mov
push
rcrl
outsl
lods
xor
inc
mov
rcr
jecxz
mov
mov
test
push
or
mov
ds
loope
mov
ficompl
xchg
sahf
fldenv
mov
aam
rcrl
sti
add
jp
adc
adc
and
daa
imul
mov
inc
aaa
sbb
inc
and
lock
sbb
sub
mov
in
adc
cmp
cmpsl
push
es
mov
in
xorl
das
inc
lret
pop
sub
mov
cmpb
xor
jmp
mov
sbb
cmp
les
add
xchg
push
pop
ss
cmp
xchg
mov
pop
xor
jne
test
aam
adc
mov
mov
mov
lds
ror
sub
andl
xlat
ljmp
rcl
or
or
fistps
xchg
daa
push
adc
pop
dec
sbb
mov
in
hlt
js
pop
jae
sub
mov
test
nop
addr16
inc
jp
push
sbb
xchg
out
sbb
sbb
cmpb
dec
push
cmp
push
jg
push
fiaddl
out
in
mov
adc
clc
inc
xlat
adc
sbbl
andb
pop
sar
cltd
mov
rclb
mov
sbb
push
fs
fcoml
sar
test
mov
mov
lret
mov
mov
aad
or
in
cmpsl
pop
les
rcrb
es
mov
pop
js
jno
mov
test
lcall
jbe
sahf
inc
inc
cwtl
outsl
dec
test
adc
ss
mov
sti
ljmp
es
daa
sbb
pushf
jg
addr16
scas
cwtl
mov
pop
icebp
aaa
or
enter
ficompl
daa
fprem
cmp
mov
sub
pop
dec
enter
sbb
fwait
inc
fndisi(8087
jmp
enter
loop
xchg
pop
out
popf
mov
inc
or
xchg
sti
sbb
sub
test
mov
and
cltd
xchg
fcom
jle
fstps
mov
rorb
aaa
mov
add
pop
jno
pop
loop
mov
int3
mov
push
ja
pop
pop
into
pop
mov
stos
dec
enter
out
inc
and
cmp
pop
nop
mov
inc
std
pop
cmpsb
xlat
loopne
cmp
sbbb
rcrb
jnp
or
adc
mov
mov
lret
scas
pop
xchg
push
mov
shlb
adc
aas
aas
aad
pop
lods
stc
aam
imul
or
shll
outsl
cwtl
xor
inc
aaa
adc
xor
cwtl
mov
mov
cmp
ss
out
sbb
out
ret
adc
movsl
mov
rcrl
sbb
outsl
cmp
add
add
std
push
pusha
mov
cmpb
or
adc
inc
es
std
js
stos
cmp
pop
inc
mov
sahf
dec
fstpt
pop
inc
mov
les
rcrl
test
pop
stos
mov
imul
fwait
not
std
sub
jnp
jp
stos
test
dec
and
mov
mov
adc
dec
ss
cmp
cli
stos
insb
and
ljmp
mov
rorb
mov
xchg
mov
adc
fidivs
test
sbb
leave
cmp
scas
jmp
sub
test
xchg
adc
sub
fnstcw
int
pop
test
jmp
mov
ds
das
jbe
xorb
xchg
push
pop
adc
mov
sbb
leave
mov
cmp
clc
mov
fistpll
xchg
jmp
pop
mov
andl
adc
pop
and
arpl
test
shlb
rolb
mov
inc
mov
jg
or
sub
pop
or
shll
xor
mov
lahf
insb
mov
leave
out
cmc
xor
lea
mov
fisubl
adc
sahf
push
movsb
mov
int
sbb
lcall
cli
fisttps
pop
pop
add
jle
sbb
lret
out
and
xchg
cmp
sti
aam
cmp
mov
sbb
mov
and
cltd
mov
mov
inc
jg
xchg
or
shll
mov
push
sbb
cmc
sbb
sti
cmpsb
test
jle
push
inc
es
aas
mov
aad
stos
xchg
call
mov
pop
pop
cmpsl
in
aas
sub
aas
stos
imul
rcrl
pop
addl
mov
aas
mov
mov
jmp
insb
stos
popa
mov
inc
shll
push
cld
inc
call
lret
cmp
sti
nop
sbb
xchg
cmp
lea
mov
rolb
sub
clc
add
lods
out
cmp
pushf
fsubs
xchg
mov
mov
mov
call
mov
popf
hlt
sti
xchg
clc
pop
rcrb
fidivl
sub
aad
mov
hlt
xor
notl
or
inc
and
mov
enter
cmp
fwait
sub
cli
fistpl
out
xor
or
sti
adc
mov
outsb
jle
shll
popa
ds
int3
addr16
movsb
pop
sbb
sti
cld
fstps
in
inc
sbb
push
mov
jns
inc
xchg
dec
xor
xor
pop
pusha
repnz
and
inc
xchg
mov
loop
int
cmp
sti
mov
dec
pop
test
loope
test
adc
les
fimull
loope
adc
out
jae
adc
sub
add
mov
sub
movsl
or
mov
mov
xlat
mov
icebp
add
repz
mov
pop
enter
arpl
arpl
hlt
sbb
xchg
mov
dec
popa
xor
movb
imull
jmp
xor
mov
std
or
notl
mov
push
rorb
rclb
and
xor
push
in
sbb
inc
loop
cmp
shll
cli
inc
ja
pop
rclb
rcrb
mov
cmp
pop
cmp
arpl
inc
idiv
std
test
mov
nop
cltd
pop
loope
shll
inc
ja
or
sbb
daa
mov
cmp
adc
loop
push
nop
stc
fs
pop
mov
push
inc
aas
or
adc
jne
insl
xchg
push
cmp
xchg
aas
mov
stos
mov
push
cmp
mov
xchg
std
scas
cmpsl
repz
int3
xchg
cmpsb
and
loop
mov
or
stos
cli
addr16
pushf
mov
inc
mov
lock
pop
ficomps
addr16
enter
addr16
loop
mov
cmpsb
add
mov
xor
adc
xchg
call
mov
outsb
mov
jg
jle
jbe
xor
int3
sbbl
pushf
movsb
and
inc
mov
inc
jns
xlat
adc
clc
movsb
arpl
divb
xor
xor
pop
cmp
or
divb
xchg
lea
jle
xor
dec
xchg
mov
mov
and
push
repz
jecxz
xchg
cmp
mov
pop
xor
inc
push
cwtl
or
test
outsl
mov
mov
bound
fcomps
xchg
inc
rcrb
stos
sub
shlb
popa
imul
stos
inc
mov
cmp
mov
ret
xchg
loopne
ds
outsl
movsb
push
mov
pop
es
arpl
enter
rorl
out
add
sbb
adc
mov
aas
out
rclb
cli
mov
pop
cmc
inc
sbb
lds
stc
hlt
dec
pusha
test
stos
pop
push
subl
mov
mov
adcb
cmpsb
inc
mov
rol
cmp
subps
dec
stc
pop
popa
test
fwait
add
ljmp
or
loope
rcrb
cmp
jb
outsl
sti
xor
add
pop
mov
addr16
and
mov
cmp
aas
ret
jle
mov
jge
std
mov
xchg
scas
and
mull
outsl
pop
mov
inc
out
pushf
sub
cli
xor
ljmp
fadds
inc
sbb
cmp
pusha
mov
sbb
cmp
outsl
push
lcall
push
inc
loope
in
mov
pop
test
mov
shll
push
shlb
lret
adc
mov
int3
lret
push
cmp
jg
and
jmp
flds
nop
inc
cmp
decl
and
dec
daa
or
stc
cld
in
movsl
add
sbb
mov
stos
icebp
add
add
div
mov
jg
sti
jle
shlb
cmp
bound
roll
inc
clc
add
dec
jbe
pop
outsb
test
mov
cmp
jmp
cmp
repnz
rclb
xchg
in
mov
dec
shrb
scas
add
movsl
cmp
nop
mov
pop
sbb
movsl
in
mov
stos
cmp
rolb
faddl
xlat
xchg
fdivrs
mov
andb
mov
test
cltd
cmp
adc
pop
xchg
mov
scas
cmp
neg
pop
pop
push
test
jp
test
fs
outsl
fcom
cltd
fcoml
cmp
cmpsl
mov
shlb
stos
out
addr16
xor
cmp
mov
out
daa
ss
jb
enter
add
arpl
add
sub
cmpsl
out
adc
adc
cmp
sbb
mov
pop
fcmovbe
jg
pop
lock
add
add
daa
sbb
cmc
mov
ds
sub
ja
inc
xchg
push
cmp
push
mov
imull
xchg
lret
cmp
xor
mov
shrb
movsl
lcall
cmpsl
mov
add
mov
mov
mov
in
aaa
dec
xor
aaa
mov
fwait
jp
imull
inc
fcoml
dec
sbb
leave
cltd
sbb
inc
xchg
lcall
loope
dec
call
push
cmp
dec
fsubrl
pop
shl
shlb
pop
jae
mov
insl
outsb
js
mov
mov
adc
ror
jb
popf
rclb
mov
mov
mov
inc
xchg
mov
mov
jg
loopne
andl
cmp
movsl
call
shlb
lret
or
cmova
adc
mov
lcallw
sbb
cmpsl
jae
pop
mov
fimull
push
test
pop
fcomps
adcb
into
sti
adcb
lret
jns
jmp
mov
in
out
inc
inc
test
loope
dec
fisttps
push
dec
std
pop
pop
mov
mov
cmpsb
xchg
adc
lcall
and
and
adc
mov
sbb
sbb
lds
push
mov
mov
push
outsl
dec
push
icebp
into
dec
lret
pop
xchg
aad
rcrl
mov
or
mov
xor
icebp
adc
movsb
jp
sbb
mov
movsb
dec
mov
mov
dec
addr16
scas
cmp
xlat
lret
cmp
xor
xor
out
fstpt
xlat
loope
mov
inc
xor
add
jo
mov
ror
mov
aad
fidivrs
aam
push
mov
add
mov
jmp
fucom
xchg
dec
cwtl
into
jmp
pop
jl
movsb
xlat
jge
fwait
inc
xchg
shrb
sbb
mov
movsl
cmp
sub
loope
daa
addr16
mov
dec
stos
dec
jp
pop
aas
add
mov
cltd
jle
cmp
test
imull
test
clc
mov
test
pushf
mov
test
xchg
push
xchg
jle
sti
jp
cli
pop
cld
fistpl
js
mov
pop
mov
repz
cmpsb
orl
cmc
add
js
mov
cmpb
arpl
sbb
shrl
jb
xchg
je
xlat
inc
sbb
bound
pop
mov
into
mov
cmp
or
cmp
mov
in
aaa
out
mov
dec
in
xlat
cmp
out
sahf
insl
sbb
enter
lods
jle
adc
jns
fbld
or
in
out
inc
or
hlt
aam
pop
xchg
loop
lea
mov
pop
push
dec
sub
fidivrl
jp
fs
cld
das
ljmp
and
cmp
pop
out
je
loop
push
pop
das
or
ja
jecxz
popf
xchg
in
out
pop
cmp
dec
mov
or
dec
aam
data16
sub
inc
add
add
neg
rclb
and
cmp
add
xor
inc
popa
fldt
jle
push
inc
mov
adc
jp
test
je
jnp
mov
mov
add
sub
mov
push
pop
adc
cwtl
xchg
push
in
xor
cltd
je
cmp
mov
dec
rclb
xchg
mov
sti
xchg
xlat
mov
jecxz
cmpsb
and
push
mov
fiadds
or
sar
cmp
mov
cmc
nop
rcrl
bound
cmp
lret
pusha
pushf
mov
test
dec
sti
cmp
movsb
push
jbe
inc
outsl
mov
xor
test
mov
cmp
pop
jns
lock
or
cmpsl
mov
es
test
out
sar
lcall
push
jnp
cmp
mov
clc
cmp
dec
repz
xchg
add
dec
inc
lods
fistpll
enter
mov
mov
test
cltd
ds
mov
cmpsb
inc
rclb
inc
pop
inc
inc
mov
mov
mov
divl
out
jns
inc
mov
inc
jno
push
or
pusha
daa
and
loop
or
movsl
add
je
call
arpl
adc
sub
aas
jmp
sub
inc
cmp
cmp
js
mov
cmp
mov
test
push
andb
cmpsl
sarb
sbb
fcomi
mov
rcrl
cmp
int
mov
leave
mov
in
mov
addr16
cmp
sbb
mov
scas
cltd
imul
jno
in
dec
inc
xor
jno
movsl
cmc
rorl
movsb
lret
mov
pushf
and
pop
sbb
pop
rcrl
dec
push
or
test
fmull
cld
iret
mov
dec
rcr
jmp
leave
mov
xchg
mul
xchg
es
jg
outsl
push
jnp
push
addb
clc
cmpb
cltd
cli
mov
mov
mov
mov
enter
js
cmp
adc
mov
and
out
jle
mov
and
mov
mov
nop
xchg
cmpl
mov
mov
fsub
add
xor
cmp
sbb
cltd
sub
mov
into
cmpb
cmp
adc
jne
rcr
jae
popa
and
cmp
lds
fsubs
mov
movsb
test
dec
fxch
movsb
cld
movsb
jnp
mov
xor
cs
adc
outsl
lahf
inc
shrb
mov
mov
inc
or
xor
xor
mov
and
cwtl
call
mov
cmp
or
dec
jns
fwait
call
push
cmp
xor
adc
pushf
sarl
div
inc
stc
cmpsl
pop
es
clc
mov
push
mov
out
jge
inc
cmp
cltd
sbb
clc
imul
mov
jns
sbb
out
rorl
and
sub
and
dec
icebp
enter
pusha
or
and
jae
in
pushf
fcoml
mov
push
mov
mov
dec
pop
outsb
subl
push
sbb
arpl
aaa
mov
sbb
push
mov
sub
mov
inc
shlb
and
ret
mov
repnz
jge
rol
xlat
scas
inc
mov
iret
pop
add
bound
add
or
sbb
pushf
mov
test
lcall
add
dec
mov
cmp
jns
repnz
sti
inc
mov
mov
loope
popf
mov
jg,pt
dec
lods
pop
fwait
popa
inc
add
stos
dec
mov
in
dec
push
stos
popf
xchg
xchg
mov
mov
adc
loop
scas
jge
fidivrs
shrb
xchg
add
aad
addr16
cmp
insb
in
dec
test
hlt
cli
subb
sbb
mov
aad
lcall
aam
mov
ds
xchg
xor
xchg
or
and
jne
int3
iret
ljmp
or
shl
add
cmp
hlt
sbb
test
pop
cmp
xchg
mov
pop
cmpsb
cmpsl
js
fwait
out
lcall
mov
inc
lahf
adc
lret
push
adc
mov
cmc
mov
sti
mov
js
lret
xor
sub
repz
movb
orl
push
dec
rorl
jbe
xlat
imul
fdiv
sub
aas
mov
testl
loopne
jo
stc
mov
sbb
test
jg
push
movb
faddp
mov
mov
arpl
mov
inc
rorl
fisubrs
arpl
or
dec
enter
stos
push
mov
mov
in
push
rcrb
sarb
pushf
inc
xor
addr16
xchg
pushf
sbb
movsl
loop
mov
pop
mov
hlt
add
addr16
js
out
pop
inc
jge
movsb
jmp
pop
mov
inc
adc
movsl
or
popf
and
add
xchg
or
push
jg
push
aam
out
mov
fdivrl
pushf
sti
jae
les
xlat
sub
xor
test
jb
sbb
hlt
xor
int
sti
mov
cmp
sbb
pop
mov
fildll
xchg
push
rorl
adc
sub
loopne
mov
push
enter
test
sbb
adc
lods
or
sub
pusha
ds
mov
inc
cmp
imul
pop
sbb
cmpsl
sarb
stc
mov
mov
jle
aaa
fdivrl
xlat
loope
or
scas
frndint
xchg
jae
and
add
mov
mov
dec
pop
cmp
and
mov
fisttpll
inc
and
mov
roll
push
fisttpl
mov
inc
jns
add
sbb
xchg
frstor
and
fdivs
mov
movsb
xor
mov
mov
push
xchg
movsb
mov
jne
mov
mov
and
loopne
mov
mov
mov
imul
jecxz
xchg
pop
sbb
mov
mov
daa
cmp
and
insl
xchg
add
mov
cltd
xchg
inc
lock
negb
cmp
daa
jp
mov
arpl
mov
loop
mov
test
inc
clc
mov
mov
sti
daa
sbb
sti
mov
mov
in
cmc
arpl
clc
cmpsl
mov
pop
jno
clc
das
in
mov
test
cmp
ja
mov
pop
clc
pushl
adc
adc
jno
fisubrl
or
pushf
in
inc
sbb
out
out
mov
mov
imulb
mov
cltd
imul
pop
aas
andb
aas
xor
mov
loope
sarb
cld
xchg
xchg
jp
cmp
aaa
lock
js
and
fiaddl
loop
sub
mov
dec
fdivs
lea
cltd
cmp
sub
add
inc
rolb
push
xor
xchg
mov
rcrl
scas
cwtl
fisubl
add
ljmp
cld
add
jp
jmp
test
xchg
cwtl
xchg
movsb
lods
xchg
inc
movsb
ficoml
ljmp
push
sbb
gs
pop
dec
nop
clc
loop
pop
mov
sub
cmp
sbb
cmp
imul
or
adc
mov
pushf
adc
push
push
add
or
xchg
add
push
in
lahf
inc
xor
xchg
mov
loopne
inc
not
sbb
ds
xchg
xorl
popf
inc
sub
mov
dec
pop
movsb
sub
iret
std
test
outsb
mov
hlt
sbbb
clc
mov
ljmp
mov
xor
adc
jns
mov
cmp
or
push
xor
mov
fcoms
insb
sbbl
and
fstpt
sub
push
data16
xchg
mov
add
stos
or
sub
jns
mov
rclb
sub
mov
lret
pop
lock
and
cmp
jp
inc
aaa
mov
xor
int
pop
xor
push
jns
bound
ljmp
sbb
ficomps
dec
mov
test
lock
out
xchg
mov
sub
xor
les
add
lods
shlb
or
mov
jno
les
adc
dec
lods
stc
pop
scas
lahf
cltd
lea
add
sbb
xor
cmc
repnz
loope
and
inc
add
mov
aam
sub
cmp
test
add
iret
insl
xor
push
jmp
cmp
inc
mov
mov
xor
sbb
cmpsl
mov
lds
jecxz
jo
leave
mov
jo
cmp
ret
pop
clc
sbb
xchg
cmp
cmpsl
inc
jg
sbb
and
shrb
jbe
adc
sbb
out
sbb
and
and
or
push
int3
ljmp
dec
ror
imul
sarl
or
lock
mov
out
call
jecxz
adc
cmp
add
jecxz
jae
and
repz
idiv
jae
lods
xor
in
lods
std
xchg
pop
jno
jp
jns
fcompl
inc
lret
sbb
adc
mov
push
cmp
rcr
xchg
loope
mov
mov
xor
pop
cmpsb
sbb
push
ficompl
lds
lcall
pop
test
add
add
sbb
sbb
sub
cmp
test
mov
leave
fdiv
cmpb
loop
rorl
xor
cmp
cmp
das
inc
mov
xchg
in
jg
push
test
into
jo
sub
jbe
xor
jno
sub
add
insl
das
mov
push
add
bound
mov
add
or
lods
lds
mov
jns
es
test
adcl
andb
xor
adc
push
out
jmp
out
fs
mov
adc
jp
xor
xor
fimull
xchg
iret
mov
xchg
jge
rcrb
dec
rcll
mov
mov
aam
ja
jecxz
fsubrl
pop
jmp
addr16
cmpsb
push
arpl
into
cltd
fs
jmp
dec
and
pop
add
inc
cmpsl
cmp
sbb
leave
in
and
fimull
lcall
insb
fistl
xchg
mov
std
push
lahf
jo
xchg
into
sbb
adc
mov
mov
je
jno
dec
cmpsl
push
icebp
shll
push
mov
dec
movsl
add
mov
mov
push
scas
dec
call
jmp
loope
jp
xor
clc
adc
sub
and
mov
inc
xchg
enter
fdivl
mov
mov
cmp
mov
cmp
movsb
test
xor
out
das
cmp
inc
ret
jns
cltd
sub
fistpll
mov
or
inc
cmp
lds
push
ja
fdivr
and
mov
in
sbb
mov
cwtl
mov
dec
mov
mov
lods
mov
fiaddl
movsl
add
scas
or
fimull
or
scas
mov
pop
jne
xchg
cltd
xor
movsl
cmp
sub
mov
mov
jo
xor
mov
cmp
addr16
push
jp
jg
add
adcl
in
pushf
inc
adc
scas
in
enter
es
pop
iret
mov
loop
dec
imul
lea
sbb
insb
lock
stc
bound
and
fldl
lea
cwtl
ja
jb
jne
mov
out
std
imul
ljmp
out
neg
jo
mov
cld
xor
rcrb
jg
fadds
lcall
cmp
xor
cmp
call
push
jecxz
push
movsl
or
stos
mov
out
dec
std
addr16
lea
sar
scas
xlat
int3
jg
scas
inc
jae
jmp
and
call
imul
ljmp
imul
and
mov
and
andl
xchg
ja
lods
ss
filds
cmp
dec
jle
js
popa
inc
mov
xchg
loop
mov
aam
in
adc
mov
dec
add
mov
scas
mov
pop
clc
addr16
lcall
test
mov
cltd
mov
rcl
test
xor
and
inc
shll
or
lock
mov
mov
shr
jp
pop
addr16
test
out
or
not
mov
adcb
mov
test
aad
clc
cmp
orb
paddw
lods
rclb
inc
or
add
in
cld
leave
add
fcmovb
xchg
fstpt
ret
sub
sub
xchg
sbb
xor
cmp
fcos
enter
and
rorl
sub
insb
ja
ret
dec
sbb
std
lcall
fstpt
mov
int
jg
mov
adc
clc
cmp
xor
xchg
nop
pop
xchg
mov
cmc
cmpsb
insb
pop
loop
out
ds
es
pop
jb
xor
pop
xor
dec
and
stc
mov
mov
ret
pop
mov
mov
mov
sbb
imul
mov
lds
ret
mov
popa
cmpl
cmp
movsb
fildl
push
jmp
dec
repz
cli
xor
sbb
mov
pop
add
mov
iret
repnz
loop
movsb
loope
aas
orl
mov
mov
stos
jmp
mov
pop
dec
mov
push
iret
xlat
fucomp
sbb
fcomps
adc
jge
mov
loopne
popf
xor
fstpt
int3
inc
in
fnstcw
jbe
jb
xchg
aas
xchg
pop
ficoml
dec
je
and
lods
in
mov
add
adc
les
cld
xchg
cmp
lea
xchg
aas
jbe
test
les
xchg
adc
dec
daa
xlat
pop
push
icebp
mov
inc
mov
dec
pop
add
inc
out
mov
test
fistps
push
mov
shlb
xchg
dec
lret
pushf
outsb
inc
jbe
stos
mov
inc
mov
mov
rolb
loopne
mov
popa
call
xchg
rcr
adc
or
adc
dec
in
repz
mov
loopne
in
pop
cld
fsincos
stc
aad
cmp
negb
push
scas
mov
bound
shr
loope
sbb
inc
or
mov
xor
fmul
popa
and
mov
loop
cmpsb
outsl
add
sbb
neg
mov
nop
cwtl
sub
leave
cmp
mov
adc
out
mov
int
cmp
jp
push
pop
addb
push
shr
adc
pop
cmp
inc
scas
lahf
repz
popf
dec
xor
dec
jae
iret
xorb
mov
int3
stc
mov
movsl
bound
daa
mov
lods
xor
jno
sub
es
enter
inc
mov
push
addr16
popf
or
sbb
xor
stos
hlt
xchg
push
xor
xorl
and
jp
mov
cmp
movsb
shrd
mov
insb
pop
jle
fsubl
push
notl
sbb
inc
daa
pop
and
enter
out
mov
adc
inc
imul
jg
ss
mov
push
movsl
icebp
dec
clc
or
add
in
stos
mov
mov
adc
push
mov
enter
addr16
adc
in
mov
movsb
xor
dec
push
mov
cmpb
mov
add
sbb
inc
aas
in
js
xchg
addl
es
cmp
stos
add
xor
aas
daa
outsb
xchg
xchg
roll
movsb
mov
sahf
lahf
and
and
mov
cmpl
mov
outsb
dec
add
lock
pop
aas
pop
loop
popa
mov
cli
xchg
jne
jmp
and
sub
ja
shlb
and
cmp
add
bound
icebp
pop
fstpt
paddw
push
ret
cld
sub
test
outsb
out
scas
xor
push
cmp
scas
scas
fldt
adc
or
adc
rcrl
mov
scas
dec
mov
int3
mov
arpl
inc
and
jns
mov
sbb
xor
sbb
jge
mov
addr16
add
aas
xchg
insb
and
pop
sti
xchg
inc
mov
fldenv
mov
cld
sbb
rorl
fwait
cmp
lret
cltd
sbb
cmp
test
cmpsb
inc
pop
in
das
pop
push
mov
sbb
lock
cmp
mov
push
out
mov
leave
mov
mov
adc
xchg
inc
js
xchg
adc
adc
dec
notl
push
pop
test
ds
cltd
push
add
inc
jmp
or
mov
sbb
cmp
xchg
mov
es
add
inc
inc
test
rorb
pop
movl
test
jnp
outsl
lret
cmp
and
mov
ljmp
fisubrl
sub
adc
mov
jne
cmpsl
xor
stos
push
mov
int3
mov
lret
cwtl
pop
les
gs
fisubs
jne
pop
cmpsl
mov
mov
mov
cli
xchg
sahf
cmp
sahf
leave
cmp
inc
aas
mov
nop
popf
cli
and
hlt
mov
xchg
je
jne
sub
test
sbb
push
out
sbb
in
sub
out
test
scas
inc
fnsave
rcl
mov
mov
popf
push
dec
rcr
sbb
hlt
adc
dec
mov
idiv
jg
push
adc
addr16
in
jns
mov
and
mov
bound
shll
cmp
pushf
ja
mov
xchg
xchg
scas
cwtl
shr
stos
sub
aas
pop
push
ficompl
ficompl
enter
mov
mov
imull
psubd
ret
ret
cmp
mov
xchg
imul
pusha
pop
jle
add
pop
sub
sub
sub
mov
in
jmp
add
fs
or
stos
lds
xor
jbe
int3
pop
arpl
push
fucom
popl
insb
mov
pop
dec
adc
mov
sti
xor
fcompl
enter
in
push
fdivr
and
subb
test
sbb
jge
push
cmp
cmp
jecxz
inc
push
dec
rcrl
repz
enter
fldcw
xor
fcmovnbe
cmp
cmpsl
jge
lret
popl
mov
sub
test
bound
rcll
stc
repz
cmp
mov
mul
js
mov
scas
rcrb
iret
or
jo
sbb
cmp
mov
hlt
sub
pop
loope
mov
cmp
into
jno
enter
jg
shl
in
sub
addr16
sub
mov
dec
shll
sti
push
lcall
inc
test
adc
add
fcomip
jno
lahf
kxnorw
pop
mov
pop
filds
lea
adc
sbbb
stc
mov
fisubs
inc
pop
jmp
jo
inc
movhps
fcmovnb
jo
add
push
and
in
loope
aam
mov
xorb
sbb
fldenv
sub
dec
adc
jbe
jnp
in
sbb
shr
cmp
sbb
clc
xor
adc
pop
cmp
and
mov
xlat
es
in
xor
add
mov
rolb
aad
mov
stc
cmp
imul
push
out
arpl
stc
adc
or
xchg
mov
aaa
adc
sbb
jmp
jp
inc
sbb
jno
xor
fstpl
sarl
pop
and
inc
fstpt
pop
movsl
dec
jns
and
cmp
popa
adc
cmp
pop
push
repz
sarb
or
inc
add
cmp
adc
xchg
xor
nop
xchg
pusha
mov
ja
lcall
inc
in
sub
adc
add
out
sbb
stc
pop
scas
add
orl
gs
xlat
arpl
cld
and
popa
sbb
inc
cmp
cmp
pop
mov
loope
rcrl
mov
jbe
xchg
and
fxch
mov
aam
mov
pop
mov
sarl
cmp
orb
xor
cmpsl
xorl
fstp
ja
mov
out
inc
rol
out
in
pop
dec
xchg
jnp
cmp
lods
add
inc
sbb
dec
psubsw
repz
mov
jp
insl
push
and
push
dec
sub
mov
inc
es
repz
mov
mov
add
imul
cltd
test
fnstcw
pop
pusha
fdivp
test
inc
adc
push
pop
stc
push
mulb
rorl
aad
or
iret
mov
adc
addr16
shlb
bound
fadd
add
and
ss
and
sub
adc
xchg
sbb
test
cmp
test
mov
int3
ret
adc
gs
dec
add
jne
bound
adc
dec
and
add
xor
test
ja
add
popa
enter
cmpsb
xchg
dec
sbb
xchg
xchg
addl
inc
add
out
dec
jno
icebp
repz
ror
addr16
push
lock
xorl
icebp
orl
sbb
pop
inc
cwtl
popa
push
mov
inc
dec
add
add
enter
movsl
ret
sub
lcall
fbstp
sub
fwait
sbb
cmp
sbb
push
mov
iret
xchg
test
cmp
xchg
imul
movsl
cmp
inc
lret
loop
into
popa
mov
xor
jge
lcall
and
out
sub
inc
pop
scas
arpl
cmp
jne
xchg
xchg
fwait
je
cmp
dec
es
mov
add
aaa
lods
pop
inc
fucomip
cwtl
inc
sub
les
xchg
lods
xchg
pop
jle
out
shl
mov
pop
cmp
or
xchg
mov
or
adc
push
mov
mov
dec
and
mov
cmpsl
sbb
jl
mov
cmc
fsubs
and
dec
loop
dec
dec
or
cmp
jmp
mov
jmp
fld
repz
push
lcall
js
mov
cltd
imul
repz
cmp
inc
push
shlb
dec
lds
mov
mov
mov
or
sub
push
int3
js
mov
lods
pop
enter
loop
lret
mov
and
std
pusha
jbe
fwait
inc
loope
lods
pop
bound
push
dec
out
adc
arpl
sahf
incl
or
cmp
cmp
add
mov
sbb
xchg
fbstp
xchg
rcl
popw
test
mov
sub
out
sbb
mov
test
inc
sbb
adc
gs
shll
push
loope
rcrl
jmp
sbb
xlat
idivb
adc
lods
imull
daa
lock
push
lods
ljmp
dec
xlat
fwait
test
cwtl
xchg
pop
mov
bound
movsl
scas
jl
pop
popa
inc
and
jp
add
and
mov
sub
testb
les
pop
ret
jecxz
and
xor
arpl
fstps
fbld
popf
ss
adc
push
xchg
shlb
lret
enter
pusha
ror
mov
outsl
xorb
daa
mov
fnstenv
pusha
rol
add
mov
shl
es
pop
dec
in
leave
clc
rcrb
mov
cltd
adc
dec
sarb
mov
inc
fsubr
call
mov
mov
pop
mov
sbb
jnp
inc
sbb
es
std
sti
mov
in
test
scas
addb
and
jae
push
cmp
stc
xchg
xchg
xor
cmp
or
cli
hlt
sub
add
cmpsb
cmp
cltd
fadds
mov
sub
xchg
gs
mov
cmp
dec
jb
jecxz
bound
fdivp
mov
mov
outsl
aas
movsb
cwtl
pop
loope
cmp
lods
mov
stc
and
movsb
mov
sbb
add
es
pop
fistpl
xchg
xchg
push
gs
fdivs
in
cld
js
test
mov
jne
fsts
adc
fisubl
inc
aam
add
xchg
inc
or
in
push
cmp
into
clc
lods
mov
mov
push
dec
xchg
or
in
gs
lret
and
dec
lahf
jnp
stos
jbe
std
dec
xchg
popa
adc
lea
mov
arpl
daa
iret
ja
pop
std
es
test
or
shll
pop
scas
and
sub
bsf
sbb
mov
push
andb
cmpsl
orb
or
sub
mov
adc
lods
and
mov
xchg
std
push
out
ret
push
inc
jg
push
loope
negl
mov
adc
xchg
mov
mov
mov
push
fbstp
cltd
jg
fistpl
lcall
sbbb
cmp
inc
and
dec
inc
in
mov
pop
inc
add
mov
and
pop
call
insl
fnstsw
ret
and
mov
add
jle
enter
cmp
fdivs
dec
lods
jb
add
mov
mov
stos
adc
popf
aad
sub
cmp
and
pop
dec
xchg
adc
aaa
push
mov
pushf
adc
xchg
cmp
mov
inc
and
mov
outsl
lods
or
dec
xchg
sub
and
add
mov
mov
pop
pop
and
jne
sub
adc
mov
clc
into
pop
psllw
cmpsb
out
in
add
sbb
stos
add
js
xchg
mov
mov
ljmp
mov
js
imul
fidivrs
sub
inc
mov
add
es
mov
in
dec
loopne
daa
aas
mov
push
popf
stc
es
arpl
lds
jmp
or
xor
cmp
mov
icebp
dec
sbb
sbb
das
lret
lods
sbb
cmpsl
jno
loopne
stos
and
sahf
dec
lcall
stc
out
add
pop
or
inc
sti
dec
inc
xchg
mov
jmp
arpl
in
pop
enter
xorps
test
insb
mul
mov
jbe
mov
scas
cld
xchg
mov
cmp
cmp
test
std
inc
int
xchg
sbb
sbb
out
pusha
incl
popf
adc
add
cwtl
pop
popf
mov
lahf
and
cmp
sahf
fsubrp
mov
sbb
fistpll
pop
loop
les
sub
cmp
push
mov
dec
add
int3
mov
jmp
testl
std
jl,pt
xchg
stos
push
mov
inc
pop
or
pop
dec
push
mov
pop
mov
testb
scas
mov
jne
cmp
pop
pop
mov
mov
and
enter
and
repnz
nop
test
fnstcw
popa
ja
addr16
cs
and
stc
movsb
adc
inc
stc
mov
std
mov
xchg
adc
sub
mov
xchg
rcrb
and
fimull
movsb
or
stos
sbb
cmp
scas
in
cmpsl
jnp
stc
loope
iret
and
mov
out
dec
pop
xlat
daa
sbb
mov
mov
mov
es
push
push
adc
cmp
repnz
push
pop
jp
fcomp
dec
pop
ficompl
xchg
imul
sbb
clc
push
out
jmp
imull
mov
cwtl
pop
xchg
es
push
adc
popa
ja
cmp
aad
pop
pop
inc
adc
jne
mov
xchg
sub
pop
push
popf
clc
je
dec
popf
aaa
mov
pop
fidivrl
xor
rclb
push
push
cwtl
fstpt
jecxz
adc
mov
pusha
lret
jmp
add
insb
mov
repnz
mov
cld
add
hlt
lock
in
orb
movsl
add
sbb
cmp
out
lods
in
mov
movsl
mov
mov
fbld
in
mov
sub
ret
cli
sarl
pop
jo
jge
andb
dec
push
and
cmpsb
and
sub
mov
inc
cmp
pop
mov
notb
push
pusha
test
mov
pop
mov
repnz
sbb
stc
pop
mov
add
out
ror
enter
and
push
mov
pop
jb
arpl
xchg
sub
in
or
aaa
cli
iret
shl
push
filds
mov
sub
pop
movsl
dec
cmp
push
sbb
sub
gs
cmp
mov
mov
pop
cmp
stc
and
ficomps
jns
das
and
jbe
decl
test
movsl
mov
sub
mov
fnstcw
jl
daa
enter
daa
push
idiv
cmp
je
bound
cmp
test
daa
and
xrelease
adcl
rcr
xchg
cmpsl
fdivrs
jg
mov
scas
and
sbb
adc
popa
jne
pop
testl
fldenv
setnp
pop
lret
sbb
es
loope
cmp
dec
nop
je
aaa
cs
push
enter
cs
dec
dec
xor
testl
inc
cmp
fdivrl
es
test
outsl
in
mov
mov
popa
push
mov
mov
fisubrs
cmp
popa
enter
jno
and
imul
sub
jecxz
ret
inc
mov
aas
std
add
jbe
scas
iret
repz
dec
mov
sahf
ja
les
dec
dec
aaa
cmp
adc
and
inc
out
sbb
sub
push
push
sti
mov
movsb
aad
xor
sbb
adc
pushf
es
leave
movsl
fldl
aam
or
xchg
in
vmaxsd
adc
inc
mov
dec
push
xlat
mov
jo
lds
mov
inc
enter
rolb
fdivr
xchg
addb
sbb
lahf
pop
mov
jns
mov
test
clc
pop
cmpl
jp
mov
flds
popa
lock
jbe
adc
xchg
push
jno
cmp
pushf
xchg
bswap
arpl
lea
jbe
cmp
mov
pop
test
es
mov
les
mov
pusha
fs
aas
push
clc
push
iret
mov
test
xlat
pushf
test
stc
out
enter
or
and
push
xor
neg
daa
add
subl
inc
sbb
loope
outsb
mov
clc
jp
jmp
inc
popa
lret
cwtl
shlb
stos
rclb
std
aas
stc
sbb
cmp
addr16
lock
test
xchg
sub
xor
jmp
fnstenv
adc
dec
mov
imul
mov
push
mov
dec
mov
pop
rcrb
daa
mov
and
dec
dec
cmpsb
mov
jne
xor
sbb
mov
fwait
push
addr16
mov
aam
or
fistps
sbb
pop
mov
add
scas
ficoms
mov
cmpsl
pop
call
inc
and
cmpl
pushl
fdivrl
fs
jne
xor
jb
loopne
sub
mov
mov
and
mov
xchg
push
test
mov
mov
cmpl
xlat
enter
add
in
jae
cmp
pop
daa
dec
dec
xchg
pop
mov
aaa
xchg
and
data16
adc
lcall
addl
addr16
and
add
dec
pop
iret
loopne
cmp
notb
cmpsl
pop
xor
push
push
aaa
loop
mov
cmpsl
add
notl
xlat
out
iret
and
or
and
scas
mov
addr16
stc
or
mull
stos
mov
xchg
loope
nop
mov
fisubl
push
mov
mov
mov
mov
and
stos
sbb
fbld
rorb
inc
mov
inc
pop
mov
imul
adc
xor
mov
push
cmp
jmp
rep
jns
cld
pop
outsb
mov
xlat
adcb
int
and
rolb
jge
ds
call
cld
mov
mov
mov
enter
cmp
loopne
cmpsl
stos
sbb
sub
test
cmp
cmpsl
stc
mov
xchg
daa
mov
lock
mov
lcall
cmp
pop
mov
pop
popf
movsb
or
cmp
and
ds
fbld
shlb
imul
push
xchg
aaa
rcrb
movsl
pop
out
int
enter
mov
xchg
xor
icebp
push
pusha
ds
addr16
cmp
push
fisttpll
add
and
fcoml
sub
in
cmpsl
in
dec
pop
pop
xchg
ja
iret
repz
xchg
test
repnz
loop
fisubl
and
insb
aam
sbb
ja
pusha
mov
cmc
lret
pushf
inc
bound
xchg
sbb
popf
push
into
xor
push
lret
mov
inc
fistps
movsb
fucomi
sarb
mov
and
push
icebp
subl
arpl
jg
cmpsb
or
or
imull
or
mull
mov
fs
out
cmp
fdivs
cmp
addr16
mov
cltd
les
sub
mov
and
push
pop
xchg
lret
fcoms
sbb
mov
fstpt
pop
mov
es
or
mov
stos
imull
mov
or
lahf
pop
sbb
test
stos
stc
call
dec
out
mov
push
adc
adc
mov
pop
stos
hlt
mov
dec
fists
inc
js
shld
shll
mov
stos
fxch
test
push
inc
cmp
push
mov
bound
filds
mov
js,pt
dec
xor
mov
xlat
gs
popf
jecxz
fistps
loop
test
dec
jge
std
adc
xchg
jne
daa
inc
popf
cmp
pop
xor
adc
dec
scas
sbbl
and
pop
push
pop
sahf
push
xchg
jge
nop
mov
jmp
mov
sub
lea
sbb
pop
sub
enter
push
flds
fs
ficompl
es
in
adcl
jo
aas
bound
dec
xor
xor
fcom
pop
mov
cmp
jne
ljmp
adc
cmp
pop
inc
xchg
xor
push
lods
andb
arpl
mov
clc
test
xlat
lcall
jge
add
daa
jmp
jb
pop
bound
ret
and
cmp
sbb
enter
movsl
cltd
imul
sub
mov
xlat
les
cmp
in
mov
shlb
mov
mov
pop
and
and
hlt
push
adc
pop
mov
lret
xchg
inc
pop
lds
aad
repnz
in
pop
or
std
cmp
into
sbb
jb
mov
mov
jno
fidivl
insl
push
sti
sti
mov
jb
loopne
mov
gs
mov
dec
test
cltd
pop
dec
mov
cmp
jmp
sbb
imul
xchg
scas
sti
aas
add
ds
xchg
sbb
loop
inc
sahf
faddl
jne
andb
mov
mov
clc
daa
leave
mov
mov
xor
les
and
popa
rcl
out
lret
xchg
mov
aaa
lea
xchg
jmp
mov
fsubrl
cmp
mov
inc
pop
test
pusha
in
jecxz
mov
shll
mov
out
push
and
cmp
into
scas
sub
or
aad
sub
or
and
mov
dec
add
dec
fistpll
fucomi
fucom
mov
sub
dec
bound
mov
ret
outsl
popa
cli
sbb
loop
cltd
aas
mov
cmp
pusha
mov
add
sbb
jo
gs
aaa
xlat
push
add
dec
xchg
aam
and
mov
movsl
pusha
mov
repz
inc
cmp
cmp
mov
shll
dec
push
jge
xor
xor
insl
mov
jmp
cltd
dec
xchg
cmp
jmp
jmp
fmuls
sub
sti
dec
jbe
mov
cmc
fwait
and
out
inc
or
adc
adc
sbb
adc
and
lcall
aaa
or
xor
inc
xor
clc
xchg
int3
push
mov
mov
and
fwait
dec
adc
or
into
mov
mov
xchg
add
sub
xchg
inc
jo
fsubs
std
lret
pop
pop
inc
cli
or
fistps
sbb
bound
loope
sti
icebp
insb
mov
popf
jmp
push
rol
or
cmp
add
pop
rclb
lret
or
div
xor
jbe
mov
adcl
ljmp
sbb
cmp
movsl
or
add
xlat
repnz
adc
adc
push
jle
inc
pop
xchg
mov
mov
icebp
mov
jge
aaa
daa
add
push
aam
mov
sbb
inc
lds
das
or
add
pop
inc
pop
jp
inc
sub
dec
repz
xor
and
or
cmp
inc
and
sti
pop
cmp
pop
add
mov
loope
and
xorb
mov
mov
out
xchg
cmp
out
pushf
dec
xorb
mov
mov
push
fisttpll
es
fsubs
addr16
sub
inc
movsl
mov
addr16
loopne
xor
or
in
aam
movsl
rcrb
jo
cmpb
adc
ja
mov
sbb
xchg
xor
outsb
pop
mov
cmp
jno
xchg
jae
andl
and
sub
loope
inc
repnz
add
xlat
mov
jnp
cmp
cli
or
sbb
sub
lret
sbb
aaa
movsl
mov
ja
mov
sbb
or
cmp
insl
stc
les
sbb
push
sbb
popa
jns
arpl
js
int
call
fidivrl
stc
mov
push
jle
mov
dec
fstps
or
xchg
mov
push
cmp
mov
mov
int
fnstenv
inc
sub
enter
aas
cmp
pop
sub
lods
cmc
aam
aam
fcmovb
loopne
and
shr
mov
fmull
fdivrs
inc
mov
adc
rclb
mov
xor
sbb
push
inc
cmp
cmp
jns
mov
mov
xchg
or
xchg
popa
sub
xchg
ds
xor
dec
xchg
aaa
ja
aam
mov
subl
mov
mov
mov
inc
adc
cmp
adc
cltd
jl
xchg
call
test
mov
fcomps
popa
inc
mov
scas
mov
mov
xchg
inc
data16
sub
fcomip
dec
jbe
inc
clc
cmp
adc
xor
add
and
sub
fwait
gs
test
add
scas
gs
lret
xor
push
pop
icebp
mov
xchg
loop
push
jp
cmc
ret
ds
shrb
cltd
cltd
lea
int3
sub
or
inc
mov
dec
aas
and
repnz
sbb
mov
popl
jmp
aad
pop
mov
inc
in
mov
push
pop
jp
mul
mov
xchg
fnstenv
mov
in
adc
and
sub
push
fwait
test
ficoms
mov
push
xchg
out
cmp
and
inc
repz
pop
cmp
popa
sahf
cmp
in
mov
adc
cmc
stos
jbe
adc
sub
cmovl
loopne
cmp
cmp
pop
in
xchg
sub
ficoml
xchg
xor
xorb
nop
loop
int3
dec
lahf
mov
out
shlb
pusha
mov
mov
mov
cli
mov
push
cmp
jns
int
flds
pop
cld
sbb
nop
or
add
hlt
mov
xchg
je
nop
add
cmp
push
das
pop
adcb
shrl
or
bound
cmp
sbb
test
jecxz
jbe
loopne
cmp
jbe
mov
aam
call
rcrb
xchg
leave
call
jmp
lock
xchg
popf
nop
lock
pushl
jl
sub
xor
mov
loopne
hlt
pop
mov
clc
or
mov
out
xor
shlb
push
push
mov
insl
std
add
sbb
popf
pushf
mov
aas
xor
jnp
shll
pop
add
or
enter
mov
sbb
mov
or
fwait
and
fldl
sti
xchg
xor
push
xlat
inc
jnp
cmp
xor
pop
scas
cmp
or
mov
rol
vmwrite
and
test
and
mov
xchg
xchg
push
gs
into
test
stos
pop
cld
sbbl
icebp
sbb
cld
adc
out
and
xor
and
fisubs
pop
bound
pop
xor
mov
ret
pop
sti
push
mov
and
data16
aas
roll
adc
bound
mov
push
mov
js
xchg
stos
add
push
lods
add
dec
loop
cmp
mov
lret
xchg
mov
cmp
test
cmc
outsl
pop
sub
jecxz
subl
test
std
pusha
js
mov
sub
sarl
mov
add
std
jl,pn
adc
pushl
daa
mov
jns
cld
or
pop
mov
add
jle
lods
insl
jp
mov
xchg
fnstsw
fs
mov
fs
mov
out
fsubs
stos
call
punpcklwd
dec
out
jp,pt
push
mulb
enter
mov
pop
xchg
shll
popf
mov
in
cmp
insb
gs
ret
pop
into
ss
fincstp
xchg
xchg
std
jmp
cmp
mov
add
cmpsl
daa
mov
inc
push
repz
add
js
lcall
pop
jmp
insb
loopne
push
loope
and
mov
xor
mov
sbb
sbb
or
jg
dec
sub
mov
sub
cmp
mov
rolb
rorl
in
repz
mov
gs
and
pusha
jno
lock
lds
ret
pushf
mov
ficoms
sbb
orl
cmp
and
and
pop
and
shlb
aas
push
xchg
and
push
icebp
pop
adcb
pop
neg
movsl
or
cs
dec
stos
movsb
mov
cmp
outsl
test
movsb
out
out
movsb
and
js
movsl
push
test
and
es
lahf
adc
lods
mov
int
adc
test
inc
mov
mov
iret
dec
in
jle
cmp
rcl
sbb
cmp
inc
sub
and
cmp
add
jbe
inc
mov
inc
jb
xchg
sbb
mov
push
dec
pop
insl
mov
pop
jp
jp
jno
mov
cmp
cmp
mov
xchg
or
mov
mov
jbe
mov
pop
stos
shr
jge
bound
sbb
arpl
sub
cmpb
add
or
inc
and
xchg
dec
sbb
fisttps
andl
insb
sub
dec
es
in
in
jbe
jo
in
cmp
mov
cmp
xor
add
bound
add
lcall
dec
jg
clc
mov
cmp
in
jne
test
mov
pop
int
jg
in
mov
adc
scas
xchg
popf
std
fistps
shl
dec
xor
pop
mov
dec
mov
ss
inc
push
pop
xchg
mov
jge
cmp
push
test
mov
mov
lret
in
xchg
inc
cmp
sahf
enter
stc
sahf
mov
fisubl
push
cmp
fdivrs
sarb
jecxz
push
cmpl
mov
sbb
dec
sbb
in
xor
cmp
mov
aam
mov
inc
out
ss
jl
les
fmuls
in
pop
rorl
rcl
repz
loopne
jecxz
pop
stos
leave
sbb
insb
or
cmp
iret
xor
nop
ret
inc
jecxz
push
imul
lret
daa
xorb
pop
dec
adc
sarb
adc
pop
and
xchg
xchg
add
jnp
repz
cmp
xor
pop
inc
lret
mov
jle
lret
jno
and
pop
es
and
out
insl
xchg
dec
mov
xor
mov
or
mov
ret
call
lods
in
cmp
fldcw
test
mov
and
popf
or
pop
addr16
leave
dec
sbb
imul
sti
mov
filds
jge
clc
stos
insb
loope
rclb
iret
push
scas
inc
pop
push
es
enter
movsb
dec
ret
push
test
loop
out
sti
cli
dec
imul
lods
sbb
push
sbbb
xlat
pushf
cli
mov
repz
es
mov
test
or
in
jle
mov
mov
sub
leave
jmp
mov
stc
sbb
lods
arpl
sbb
xchg
mov
or
jp
mov
nop
js
inc
pushf
fdivs
cmp
adc
sub
out
fstps
nop
xlat
lods
xchg
cld
or
icebp
in
jae
cmp
mov
stos
xor
cmpsl
call
mov
scas
mov
sub
lea
pop
test
cltd
leave
mov
fisubrl
pop
and
lahf
loopne
out
je
pusha
push
in
xchg
xlat
push
mov
popf
push
inc
rorl
mov
and
popa
sbb
jp
lods
cmp
sub
jmp
xor
inc
mov
cmp
stc
stc
lahf
std
push
pop
cmp
loope
stos
subl
dec
inc
call
dec
repz
jnp
fwait
dec
jecxz
xlat
jp
out
mov
pop
cmp
sbb
idivl
cltd
xchg
ret
loopne
mov
scas
sub
inc
add
and
xchg
std
mov
int
xor
aad
or
mov
cmp
cmp
inc
sbb
push
jp
xor
sbb
shrl
inc
jge
loopne
mov
mov
sahf
cmp
add
sahf
push
shlb
fisubs
add
mov
ss
fs
mov
fimull
test
adc
xchg
cli
or
mov
mov
cmp
fistpl
flds
or
xor
js
xchg
fiadds
jae
jp
add
popf
mov
dec
les
repz
pop
push
test
cmpsl
data16
xchg
mov
cmp
pop
jecxz
scas
dec
or
insl
call
xor
push
cltd
xor
sub
add
dec
shll
or
mov
cmp
xor
push
xchg
mov
addr16
xor
cmp
aaa
fnclex
inc
mov
inc
ss
icebp
test
clc
mov
jae
repnz
idivl
in
or
pusha
push
icebp
stc
jnp
cwtl
fcompl
pushf
bound
mov
xchg
pop
inc
sahf
xorl
cmp
faddl
shrl
test
ret
fs
loope
push
idivl
mov
fwait
xchg
sarb
mov
clc
jp
inc
xor
repnz
pop
shrb
repz
sbb
xor
adc
xorl
pop
jp
bound
push
addb
pop
jnp
es
aam
cltd
and
push
pop
ret
arpl
jmp
or
fcmovnu
cmpl
mov
aam
shll
mov
lods
rcll
cmpsb
sub
sbb
and
mov
ja
jns
pusha
ljmp
xchg
js
sub
mov
in
add
cmc
adc
cmp
sbb
jbe
fadds
mov
pusha
pop
mov
ret
inc
lods
cmpsb
jp
xchg
test
mov
inc
je
jmp
mov
scas
pop
sbb
and
push
pop
popf
push
jl
fdivs
test
jo
call
addr16
fildl
fwait
out
cmp
inc
xor
scas
or
ret
xor
add
push
inc
mov
adc
pop
daa
test
mov
adc
mov
mov
add
enter
leave
dec
adc
loope
pop
or
andb
lcall
stos
push
jle
fistpl
xor
cli
out
sbb
shl
mov
testb
ret
lahf
mov
pop
movsl
xchg
mov
fdivs
cmp
fnsave
sbb
in
fbld
or
cmpsl
fsubrl
call
mov
mov
out
cmp
and
pop
xchg
or
in
ret
lods
sbb
mov
pop
and
mov
sbb
and
cmp
scas
and
lock
xor
scas
movsb
nop
out
xchg
mov
imul
xchg
dec
adc
xor
addr16
fnstsw
enter
dec
inc
and
cltd
and
add
fisubrs
mov
jo
inc
hlt
rcll
daa
mov
pop
xlat
hlt
jbe
add
cmp
mov
sbb
jl
cmp
shl
push
test
in
adcl
out
andb
or
sbb
dec
push
repnz
enter
dec
jae
sbb
outsl
mov
sahf
add
xchg
xlat
dec
arpl
ljmp
fidivl
in
call
inc
bound
pop
rcll
pusha
fld
xor
loope
push
jo
aam
mov
notl
ja
aaa
jno
cltd
dec
mov
pop
movsl
and
mov
xor
nop
cmp
jo
push
imul
cmp
push
pop
adc
lcall
out
mov
outsb
inc
xchg
mov
cmp
cmp
mov
push
loopne
mov
push
sbbl
mov
and
sbb
ja
dec
ja
xor
adc
nopl
mov
enter
scas
push
lahf
js
xchg
test
and
mov
and
fwait
mov
aad
mov
loopne
sub
jae
sub
inc
ret
gs
xchg
fsubrl
cmp
or
sbb
bnd
loope
fsubs
movsl
popf
push
stc
adc
ds
ret
mov
mov
adc
sbb
jcxz
mov
icebp
pop
adc
jmp
sbb
paddw
jl
cmp
cmpsb
test
push
mov
adc
push
iret
inc
andb
xlat
jp
ret
fsubrl
fistpl
sti
and
fstpl
mov
arpl
pmulhw
fmul
inc
jnp
mov
mov
ss
xor
mov
pop
jp
aaa
dec
mov
and
enter
loop
mov
mov
mov
sbb
rclb
rolb
mov
push
movb
cli
fidivl
cmp
push
xchg
testl
fdiv
and
and
pop
mov
add
pop
into
inc
jns
into
pusha
pushf
cltd
inc
int3
and
jmp
sbb
xorb
jb
jle
cmpxchg
lahf
xor
push
sbb
cmp
sub
cmpsl
push
aam
or
rorb
mov
outsl
int
cmp
stc
xor
xchg
and
xchg
mov
les
movsb
mov
iret
es
ror
shl
js
cmp
mov
nop
fadd
mov
mov
xor
adc
arpl
clc
lods
mov
ret
mov
sbb
test
push
mov
mov
adc
mov
cld
adc
stc
je
stos
pop
mov
ds
mov
pop
neg
fdivrs
or
mov
mov
out
mov
movsl
inc
mov
sub
rdtsc
rcr
and
pop
mov
inc
mov
or
loop
jmp
cld
inc
cmp
and
add
jmp
xor
fcmovne
fdivl
mov
andl
sarl
xor
stc
adc
jmp
scas
sub
cmp
add
or
cmpsl
cmp
push
in
xor
into
cmpl
cmpsl
pop
clc
cltd
dec
leave
mov
lcall
pop
pop
sti
mov
xor
clc
dec
test
call
jg
sarb
mov
addl
nop
lret
jae
pop
mov
test
and
cmp
aas
into
repz
bound
out
outsl
jne
xchg
jp
rcrl
fstpt
negl
mov
xchg
imul
xor
fwait
xchg
je
cli
push
es
bound
js
insl
add
dec
push
cwtl
js
popf
adcl
cmc
imul
mov
enter
pop
js
ret
add
stos
fs
testb
pop
out
jbe
xor
cmp
js
or
cmpl
jp
cmpsl
outsl
std
dec
mov
shlb
das
dec
mov
enter
out
sub
hlt
mov
sub
or
sub
cltd
mov
and
and
cmp
test
out
fistpl
xlat
cli
xchg
aam
sbb
sbb
call
pop
scas
adc
mov
mov
gs
jg
adc
hlt
imul
mov
negl
out
adc
xchg
pusha
stc
add
jecxz
add
cmpsb
mov
mov
enter
shrl
adc
mov
pop
out
shll
add
stos
push
mov
sbb
sbb
into
test
cmpsb
lock
fmuls
js
pop
cmp
xor
and
mov
stos
fsubl
jecxz
aad
mov
pop
mov
iret
mov
mov
xorb
pusha
pop
push
outsl
xor
imul
rolb
jp
xchg
adc
mov
loope
insl
test
jne
jmp
mov
inc
cmpsl
cmp
ja
adc
and
test
mulb
xor
iret
jecxz
cwtl
mov
and
lcall
shlb
pop
rcr
popa
popa
and
dec
mov
lea
inc
and
jne
dec
add
les
mov
lcall
pop
and
enter
xchg
sub
pop
and
adc
jno
mov
fsubs
sbb
loopne
sbb
mov
xor
adc
jns
pusha
jnp
sbb
subb
jno
std
daa
mov
cmp
lock
or
add
xchg
pop
mov
stc
push
dec
mov
ljmp
mov
loopne
cmp
idivb
dec
adc
fs
add
fs
jp
sub
cmp
cmp
js
mov
or
cmp
cwtl
cltd
xchg
enter
test
scas
and
hlt
xchg
sti
xchg
push
mov
add
mov
or
mov
mov
mov
mov
ja
lds
dec
pop
push
repnz
jne
jmp
in
cmp
les
loopne
jo
mov
or
dec
mov
jns
ss
mov
add
and
adc
stos
fmuls
mov
fucom
dec
xor
rorb
jns
andb
addr16
dec
std
call
lcall
es
js
call
andl
popf
daa
cmpb
mov
push
jmp
popf
lods
enter
xchg
add
out
xchg
mov
call
and
jmp
jae
jbe
outsb
test
mov
pop
stos
add
xor
pop
mov
outsl
sub
push
pop
loop
or
cmpsl
movsl
ss
ror
jg
leave
push
cli
lea
sbbb
mov
mov
and
sub
mov
mov
and
adc
cmp
cmp
ret
insb
cltd
sub
mov
lock
pop
xchg
sbb
lret
sbb
and
jno
js
mov
in
out
jbe
roll
test
cmp
mov
mov
mov
jb
js
aas
pop
pushf
mov
shlb
scas
mov
pop
icebp
addl
enter
sub
popf
arpl
fmul
cmp
aas
jae
inc
xchg
test
out
mov
push
and
fldenv
jns
ja
sahf
adc
loop
cmp
and
cmp
test
sahf
inc
inc
lret
scas
add
push
pop
enter
stos
sub
test
push
pop
subl
or
lcall
cmp
xor
cs
inc
outsb
mov
adc
lods
mov
inc
loopne
ds
addr16
mov
rcrb
pop
ret
nop
push
ffreep
mov
push
xlat
mov
mov
repz
pop
scas
pop
daa
jo
aam
cli
xchg
out
or
js
imul
test
and
xchg
sarb
mov
pop
icebp
inc
mov
add
cmp
jb
add
pop
aaa
ss
sbb
mov
popa
cmp
pop
mov
cmp
add
sub
cld
or
stc
cmp
inc
out
mov
add
cmp
push
cmp
addl
mov
cs
mov
pop
cmp
jp
mov
or
aam
push
cmp
adc
cmp
dec
andl
loope
jp
ljmp
mov
stc
cmpsl
adc
fstpl
jp
push
pop
shlb
shll
data16
sbb
jb
push
lahf
sbb
in
aad
or
push
inc
shll
rcrl
and
sahf
sarl
hlt
lock
mov
mov
popa
push
lock
fcoml
mov
cld
sbb
mov
sbb
cmp
mov
leave
xor
sbbl
sbb
mov
out
aas
inc
sarb
push
jae
or
adc
fucomp
xor
pop
lock
repnz
dec
push
cmp
fcomip
mov
test
xchg
in
and
sbb
jp
mov
stos
fldl
add
add
rcll
cs
sub
or
fildl
mov
lahf
mov
adc
mov
and
scas
inc
sub
popa
aam
fidivrl
mov
xlat
pop
xchg
cli
and
mov
xchg
and
insb
nop
cmp
sahf
mov
cwtl
jp
mov
or
mov
fisttps
dec
call
popa
mov
mov
mov
mov
pop
mov
jmp
int
in
cmp
pop
insl
xor
shrb
inc
jle
lock
pop
mov
rclb
jnp
xchg
push
and
es
mov
enter
adc
bound
ltr
outsl
fnsave
cmp
inc
lea
es
cmc
jmp
fwait
pop
rclb
fwait
addb
jno
mov
iret
cmp
inc
mov
adc
imul
mov
movsl
mov
mov
cmpsl
sbb
in
cmp
rcrb
jns
stos
rcrb
out
movsl
nop
repnz
int3
mov
jmp
cmpl
adc
popf
inc
jns
push
popaw
sub
sbb
xor
and
outsl
pop
xchg
mov
jns
jns
mov
pop
mov
std
arpl
lahf
leave
jge
pop
cmp
pusha
jl
jo
mov
in
enter
pusha
adc
and
xor
andb
sub
dec
push
je,pn
jp
adc
sar
cmp
sti
test
xchg
push
loopne
and
pop
sbb
repz
shrl
inc
mov
pop
scas
ljmp
pop
or
push
repnz
cmpsl
outsl
dec
pop
lcall
dec
popa
pop
rdtsc
or
push
clc
stos
inc
lcall
inc
bound
mov
fisubrs
mov
xor
rcr
mov
popa
inc
out
jecxz
out
ror
clc
push
xchg
int
nop
stos
pop
inc
mov
mov
adcb
popa
and
mov
es
lods
jmp
mov
fistps
fwait
iret
push
stc
loope
ror
lcall
out
adc
dec
notl
stc
sbb
aaa
push
xchg
lret
push
sub
sbb
pop
mov
jge
mov
mov
enter
sti
cld
inc
in
fcoms
cwtl
jle
sbb
jmp
aas
sub
or
add
fldt
loope
push
and
xchg
mov
lret
frstor
xor
mov
cmp
aaa
fistpll
js
mov
call
clc
pop
and
add
scas
jnp
sub
sbb
or
mov
xlat
fildll
subl
sub
dec
cmp
pop
call
cmpl
stc
mov
popf
xchg
fldcw
shll
lea
pop
lock
je
call
js
mov
jecxz
mov
mov
shll
fs
lods
cmp
push
into
mov
push
dec
data16
dec
pop
jns
jo
insl
decl
pop
mov
dec
lods
std
shll
aam
sub
mov
xchg
inc
shlb
lahf
mov
pushf
cmp
test
and
fstl
mov
pop
jmp
cmpsb
dec
push
popf
jns
mov
fcmovbe
aas
call
dec
push
adc
scas
dec
fmuls
mov
inc
cmp
lock
subb
call
pusha
mov
addr16
nop
sbb
addr16
js
inc
lret
adc
out
pop
cs
xor
cmc
sbb
mov
inc
cmp
sub
mov
rolb
lcall
pushf
pop
push
mov
xchg
std
and
enter
push
or
push
inc
mov
in
pop
jbe
mov
outsl
stc
sarb
out
popf
in
jnp
jmp
pop
push
es
call
cmpsb
pop
or
sbb
xchg
call
dec
enter
lds
or
aas
icebp
mov
cltd
inc
mov
mov
xlat
shr
addb
mov
pop
mov
sbb
sbb
inc
mov
enter
push
or
mov
sbb
sbb
fisubs
nop
fwait
dec
clc
dec
lods
inc
sbb
in
loope
ds
mov
shll
aaa
iret
scas
jb
pop
or
xchg
data16
fldt
or
cmpsl
out
cmp
mov
mov
mov
inc
xor
jo
pop
gs
add
fsubrp
push
js
add
mov
mov
jge
mov
imulb
pop
cwtl
in
loopne
nop
mov
scas
mov
xchg
xor
shll
pop
fisubrs
mov
cwtl
and
xchg
add
mov
push
in
mov
stos
mov
sti
cltd
cmp
cmp
addb
mov
inc
out
adc
mov
in
pop
push
cmp
movsb
mov
pop
mov
enter
cmp
sbb
mov
sti
lret
lods
or
mov
aam
subb
pop
inc
jge
adc
bound
popf
scas
les
dec
lds
cmp
inc
stc
imul
movsb
out
adc
mov
insl
pushf
add
stc
movsb
cmp
mov
loop
sti
ret
fs
push
imul
stos
or
test
xlat
popa
xchg
mov
movsl
mov
adc
sar
insl
cltd
mov
fnstsw
loopne
shl
cmp
lret
mov
push
daa
fildl
jmp
into
add
mov
inc
ficoml
sbb
dec
mov
pop
mov
mov
cmp
cmp
mov
enter
cmpsl
mov
ret
das
mov
cmp
enter
mov
sub
inc
pop
sqrtps
iret
sub
and
ds
subl
cmp
push
fcomi
dec
mov
enter
pop
fisubs
mov
cmp
pop
add
pusha
je
sub
sub
shlb
ret
and
and
and
add
in
mov
jbe
arpl
jmp
cltd
dec
xchg
mov
dec
push
out
loop
movsb
cmp
jns
enter
aas
call
push
in
inc
cmp
cmp
mov
jp
dec
loope
insl
fbstp
pop
or
lret
ss
dec
popf
leavew
movsb
mov
sub
lods
jno
sub
inc
repz
fcomps
stos
fsubr
rcrb
mov
dec
sub
arpl
or
sbb
sbb
jnp
and
mov
daa
mov
lret
movsl
push
pop
add
jo
mov
lds
sbb
and
mov
add
jl
mov
lret
or
mov
dec
mov
popl
lcall
xor
inc
cmp
push
cmp
cmp
mov
cmc
dec
add
and
dec
mov
je
mov
inc
sbb
leave
jecxz
push
jge
cwtl
cmp
ret
push
mov
mov
cmp
mov
loope
xchg
sub
fwait
arpl
xchg
mov
enter
mov
push
adc
sbb
out
test
call
daa
push
sub
or
outsl
push
icebp
sub
dec
clc
aad
rcl
in
ror
test
jb
andb
fsubs
push
mov
inc
cmpb
lods
jns
ljmp
jns
xor
loop
ja
jo
xor
mov
aas
lods
jecxz
shlb
shl
loopne
mov
sarb
mov
or
and
jbe
add
fnstcw
push
xchg
jno
mov
scas
sub
lcall
dec
inc
add
or
call
movsb
call
cltd
add
jl
ds
mov
andl
rcrb
bnd
pusha
cltd
test
lret
xor
incl
sbbl
scas
pop
mov
xlat
sbb
mov
mov
sti
outsl
out
cmp
cmp
pop
dec
cmp
out
dec
push
nop
add
dec
insl
rcr
cmp
mov
xchg
inc
mov
sub
test
fmuls
imul
dec
and
faddl
jns
dec
outsl
xchg
add
pop
mov
testl
jl
and
addb
cld
adc
fcompl
test
hlt
xor
in
push
mov
sbb
in
sub
xchg
jmp
sbb
sub
sbb
sbbl
add
or
pop
jmp
cltd
xor
mov
notb
dec
dec
rcr
scas
mov
mov
pop
mov
dec
jbe
dec
jecxz
mov
pushf
add
jne
and
push
and
jae
icebp
pop
aam
loop
or
clc
imul
xor
and
add
inc
xchg
test
mov
popa
sbb
add
cmp
shll
sbb
push
cmp
hlt
dec
and
call
das
push
test
jmp
popf
dec
out
fcoms
test
or
jno
push
aam
ret
daa
frstor
pop
cld
clc
fcom
dec
fcomi
inc
cmc
dec
mov
mov
adc
jmp
push
mov
into
xor
and
and
fcompl
push
ds
and
testb
mov
jo
cmc
es
das
or
pushf
pop
out
cmpsl
inc
jne
adc
sub
loope
xor
out
mov
push
sbb
push
fcmovne
sbb
shrl
xchg
test
jae
iret
mov
fwait
or
xor
lcall
aad
call
outsl
enter
fistl
out
xlat
test
das
movsl
adc
lock
add
cmovb
movsb
inc
out
es
jns
lahf
pop
mov
cmp
or
mov
inc
xchg
les
movsl
imul
sti
sbb
add
popa
pop
add
lods
mov
test
mov
sbb
movsl
in
xchg
ficoms
lods
push
dec
fistpll
add
cmpsb
push
out
mov
mov
ret
in
cmpb
or
and
mov
xor
jl
pusha
addr16
push
int3
and
and
test
aam
nop
int
aad
jns
outsb
adc
nop
ds
fiadds
leave
and
pop
cmp
add
in
cld
dec
popa
mov
test
mov
mov
out
daa
cmp
pop
xchg
test
pop
loope
inc
pop
pop
int
test
fisubrs
push
int
inc
pop
jmp
ljmp
pop
jns
and
cmp
out
fsts
into
pop
mov
xor
call
mov
lret
outsb
jbe
call
cli
push
inc
call
cmp
insb
sub
es
gs
cmpsl
pop
and
jae
adc
xchg
cmp
sahf
mov
outsl
mov
fsts
dec
add
cli
fwait
cmp
movsl
bound
mov
and
fnstcw
cmp
and
xor
stc
fimull
or
pop
jmp
inc
ss
jecxz
adc
fdivrl
mov
dec
js
pop
inc
mov
in
jbe
gs
xlat
lahf
int
inc
mov
out
cmp
push
inc
stc
dec
xlat
xor
adc
or
and
cmpsb
arpl
outsl
fdivs
imul
shll
or
jp
cmpsb
jle
pop
mov
subl
mov
xchg
dec
adc
jg
loope
into
pop
mov
jp
outsl
xchg
pop
push
fs
add
jo
sub
scas
fiaddl
or
lock
pop
loope
sbb
adc
icebp
movd
mov
hlt
inc
jmp
adc
in
stos
jle
mov
mov
add
rorb
pop
mov
and
push
popf
divb
jb
add
push
popa
repz
jb
sbb
das
out
add
jmp
jo
pop
bound
or
xchg
inc
mov
lret
fsts
xchg
fcomps
inc
movsb
mov
xlat
in
lret
mov
jbe
jmp
mov
adc
sub
into
jne
scas
inc
jle
enter
gs
imull
dec
inc
xor
int
xchg
cmp
insb
loopne
cmp
aas
mov
int
aas
jg
loopne
jmp
sbb
and
outsb
sbb
dec
ss
popf
stos
pop
add
shll
dec
and
into
cmp
mov
push
sub
cmp
pop
cmp
jns
fidivrs
xorl
fbstp
and
daa
loop
cmc
adcb
aam
out
inc
cmp
mov
movd
or
jne
pop
push
mov
cmpsl
lods
popa
shlb
ret
arpl
movsb
pop
mov
fbld
or
ja
pop
movsl
pop
nop
add
ret
mov
xor
add
neg
mov
cld
cmp
scas
shll
daa
jne
sbb
pop
jl
add
sbb
inc
bound
dec
test
iret
jo
dec
cwtl
jg
movl
pop
sbb
std
lods
or
and
in
adc
jne
mov
sbb
jp
inc
or
cmpl
sbb
sarb
sbb
inc
and
mov
sarb
mov
xchg
push
mov
dec
push
rcll
enter
call
je
mov
xor
sbb
rclb
or
xor
loop
mov
shrb
sbb
mul
cmp
pop
adc
repz
mov
mov
adc
fidivl
rcrb
lds
es
fistps
mov
cmp
lods
aam
test
mov
add
push
and
fidivs
fdivrs
test
sub
iret
je
mov
les
es
sbb
outsl
mov
js
pop
inc
lcall
pusha
cmp
push
sub
jecxz
scas
jnp
dec
and
aaa
hlt
sbb
jne
add
pop
into
mov
mov
sub
pop
dec
orl
mov
mov
addr16
repz
fcoms
sarb
mov
xchg
jp
outsl
fdivr
mov
sar
mov
inc
in
clc
loopew
and
and
dec
pushf
daa
sbb
scas
iret
and
inc
out
push
mov
out
xor
mov
adc
or
sub
pop
stos
xor
adc
fisttpll
push
or
mov
leave
ss
or
clc
cltd
cld
mov
loope
xchg
cmp
setg
xor
outsb
mov
test
adc
in
and
mov
daa
sub
mov
sub
stc
mov
popa
in
fwait
mov
cld
in
cwtl
xor
mov
cmp
das
std
stos
mov
or
pop
aam
and
clc
sbb
jle
lahf
dec
xor
dec
out
xchg
mov
dec
aad
enter
jl
fadds
xchg
test
lahf
sbb
ret
and
fcoml
fcomps
sbb
mov
lods
dec
rorb
add
inc
icebp
pop
rcll
pop
sub
and
and
jge
mov
out
enter
stc
into
lahf
sub
js
arpl
or
int
std
add
cmp
sbb
and
insl
xchg
ficompl
sbbl
sahf
sub
jnp
sub
lcall
or
sbb
add
adc
repz
inc
jno
jg
addr16
add
test
fdivl
jg
mov
movsb
or
popa
mov
test
mov
and
dec
jae
mov
jge
xchg
popf
out
addb
sbb
test
or
cmpsb
pop
aam
fcomp
dec
ja
push
xchg
cmpl
xchg
loopne
xchg
int3
sbb
pop
xchg
arpl
mov
mov
adc
in
pop
popa
jp
fmull
inc
fnsave
ret
cmp
shlb
cli
jge
sahf
sbb
stc
dec
add
inc
fcom
std
inc
ja
mov
mov
cmp
or
das
sub
adc
push
jmp
pop
mov
xchg
xor
add
cmpb
pop
daa
sahf
dec
add
dec
dec
in
mov
shlb
jg
dec
js
inc
pop
fs
lcall
sarl
cmp
fcoml
shrb
addl
mov
mov
mov
xlat
sbb
pop
cmp
cmp
jmp
inc
pop
mov
test
cmpsl
push
push
mov
ja
inc
iret
lahf
popa
push
mov
fildl
imul
sbb
xor
pop
mov
bound
popa
rcrb
xor
sbb
and
mov
stc
addr16
lock
push
int3
fs
add
and
loope
mov
mov
cmp
sub
sbb
notl
add
mov
sbb
lock
mov
jbe
loopne
ret
dec
mov
fisttpll
cmp
mov
xor
push
push
push
mov
adc
sbb
pop
mov
stos
mov
xlat
lcall
mov
test
ficompl
fistps
aas
or
subl
subb
shrb
and
loopne
rcrb
jg
dec
cli
mulb
testl
mov
lret
enter
pop
push
xchg
xchg
mov
addr16
or
das
lods
cld
aas
loope
inc
adc
pop
ds
mov
in
int
fcompl
dec
dec
pop
mov
and
fistl
xchg
xlat
loope
clc
sub
das
push
cmp
loop
jb
adc
xor
std
cld
xor
std
add
dec
jmp
add
lods
jno
cmp
aad
lds
push
fs
in
inc
pop
adc
cmp
push
or
jns
rcll
inc
insl
lcall
push
lahf
mov
jecxz
jl
inc
xor
andl
pop
cmp
push
add
call
pop
int3
cltd
incl
inc
pop
mov
sub
fcomps
notl
jno
sub
subl
ja
test
add
repnz
mov
popa
cmc
mov
andb
bound
lods
pop
dec
jbe
stos
and
mov
out
add
mov
mov
loope
lcall
push
cmp
addr16
pop
cmpsl
xor
xchg
xor
cmp
mov
enter
sar
lret
xchg
xor
lret
icebp
mov
mov
inc
dec
sbb
stc
jge
in
int
push
jg
xchg
pusha
fnstenv
push
mov
pop
mov
mov
mov
mov
fwait
imul
sub
or
lahf
shll
or
pop
and
lock
bound
jp
lods
lock
popf
cmpl
sarl
xchg
hlt
cs
fs
fnstenv
hlt
cmp
push
mov
in
jecxz
shrl
mov
ja
movsl
cmp
xchg
sahf
mov
mov
mov
inc
inc
cmp
rol
mov
cmp
add
xchg
lcall
mov
push
popf
xor
xor
mov
dec
or
xlat
cs
js
xlat
mov
jns
movsb
pop
mov
dec
sub
pusha
mov
cltd
add
sub
hlt
push
je
in
adc
pop
clc
xchg
in
lods
jp
add
adc
xchg
jg
push
popf
int
insb
adc
aas
cmp
inc
rolb
sub
loope
sub
xchg
dec
mov
cmovge
cmp
pop
mov
nop
lods
int
mov
xlat
jl
sbb
mov
pop
loope
cli
push
or
dec
arpl
xchg
das
imul
and
clc
scas
pushf
and
inc
sbb
mov
in
xor
push
aas
push
movsl
shl
pop
push
cmp
cmpl
aas
mov
pushf
cmpb
mov
and
icebp
adc
imul
pop
ja
dec
jns
pop
lcall
lea
rcll
jle
jl
mov
jns
ret
adc
mov
imul
pop
jg
mov
xor
pop
sahf
or
xlat
sbbb
in
add
push
mov
xor
inc
mov
arpl
pop
gs
sub
movsb
stc
rcr
xor
pusha
dec
bound
adc
mov
sbb
lcall
mov
sub
shrl
mov
mov
cmp
fistl
mov
fldt
mov
mov
dec
fidivrl
or
mov
mov
lods
cmp
cltd
mov
mov
mov
jecxz
cmp
pop
mov
sub
negl
or
sbb
clc
mov
sub
mov
sub
and
sub
test
cwtl
fidivs
loopne
pop
xor
xor
pop
mov
push
cmp
mov
cmp
sbb
add
sbb
cmp
arpl
fnstenv
movsb
fcmovnu
cmp
sarb
es
leave
dec
ret
mov
ret
sarb
mov
std
mov
mov
mov
lods
popf
mov
jge
mov
in
lods
pop
mov
cmp
lods
sbb
stos
cld
mov
in
jmp
iret
jge
std
ds
mov
stos
pushf
mov
decl
stos
jl
test
push
stos
pop
mov
decl
mov
mov
push
clc
or
mov
sti
aas
shll
mov
and
lods
fwait
mov
jnp
mov
int
pop
mov
cmp
sbb
mov
int
cli
mov
dec
rorl
fsubrl
arpl
lods
lret
mov
adc
popf
cli
pop
test
js
scas
arpl
inc
popa
xchg
and
clc
pop
mov
fisttpl
imul
std
fldt
scas
out
int
imul
and
cmp
out
inc
lods
cmp
cmp
mov
in
mov
gs
leave
cmp
in
mov
fs
addr16
mov
mov
pop
arpl
pop
popa
mov
clc
bound
leave
jb,pn
loope
mov
popa
bound
cmp
jns
ret
scas
cld
inc
mov
jle
xor
jne
mov
jae
mov
inc
lea
imul
pop
mov
std
and
stos
imul
mov
dec
aam
cmpsl
or
xor
push
cmp
mov
adc
movsb
out
mov
iret
mov
fcomip
jge
inc
add
jmp
int3
ss
dec
sbb
and
sub
dec
outsb
leave
frstor
popa
es
pusha
js
mov
sbb
test
push
rorb
mov
lret
in
mov
xchg
adc
sub
subl
les
inc
xchg
cld
lret
mov
repz
xchg
inc
mov
or
cmp
sub
mov
push
sti
lods
jnp
fwait
sub
mov
fnstcw
xor
imul
cltd
sub
mov
movsb
icebp
mov
bound
setb
mov
orb
mov
cwtl
fisubl
test
adcb
lcall
test
mov
adc
adcb
divb
enter
xchg
inc
loope
fwait
ja
sub
test
shll
or
ss
mov
push
xor
mov
sub
mov
xlat
aam
adc
or
out
data16
push
pushl
setae
orl
jecxz
pop
andl
movsl
inc
pop
dec
jb
aam
pop
mov
and
ror
add
and
xor
cmp
pop
lahf
sub
xchg
rcrb
enter
aaa
sti
inc
sbb
xchg
sub
dec
and
inc
std
add
cmpsb
movsb
mov
sbb
andl
sbb
lock
outsl
sbb
movsb
sti
push
ds
addl
mov
jp
mov
jbe
push
jne
je
add
test
pop
pop
jmp
sar
mov
sbb
clc
fs
or
icebp
jg
jge
js
icebp
sbb
mov
or
aad
lock
jg
cmp
mov
push
jp
jmp
mov
mov
cli
or
in
shlb
push
adc
mov
mov
cmp
cmp
mov
cmc
js
or
pop
mov
cmp
imul
jmp
mov
cmp
mov
bnd
sbb
xchg
xlat
adc
xchg
mov
xor
xchg
pop
hlt
sub
lahf
sbb
mov
lcall
sarb
xchg
mov
inc
cli
das
and
inc
pop
imul
pop
sbb
and
mov
stos
lret
adc
jae
dec
leave
bnd
mov
sbb
fwait
cmpsl
inc
or
pushf
mov
fistpll
dec
movsl
cltd
ja
imul
mov
sbb
mov
sbbb
mov
inc
loope
testb
sub
mov
pop
cmp
insl
sub
push
fs
fdivrl
into
mov
idivl
pop
mov
mov
xor
dec
mov
loopne
pushl
add
push
mov
adc
inc
out
mov
call
inc
pushf
adc
xor
vphaddbw
lods
xlat
mov
loopw
mov
adc
cmpsb
cmp
fidivrs
add
addr16
cmp
cmp
inc
clc
pop
fistpll
cmp
sarb
jno
xchg
mov
mov
push
shlb
sti
push
jg
mov
call
mov
xorb
push
rol
xchg
outsb
into
ja
popa
mov
jnp
shll
mov
mov
xor
inc
cmp
cmc
fwait
sbb
adc
sbb
into
aam
mov
aas
sub
cmp
lea
outsl
cmp
aam
inc
cmp
mov
inc
mov
fnstsw
mov
jge
stc
sbb
fisubrs
mov
cmp
or
sbb
fisubrs
or
xchg
in
pop
divl
dec
adc
jl
pop
in
pop
mov
gs
rcll
jne
push
cmp
out
mov
ror
add
sbb
dec
fists
ljmp
rolb
sti
jmp
push
mov
mov
std
adc
jl
stos
test
and
dec
push
popf
clc
pop
add
std
dec
cmp
ss
addl
std
popa
and
pop
sti
mov
pushf
mov
mov
out
data16
nop
stc
adc
and
fildll
mov
adc
and
imul
mov
fiaddl
fcoms
xor
aas
out
out
mov
sbb
rolb
je
loopne
or
ficoml
inc
pop
jmp
mov
pusha
fdivrs
mov
jp
fiadds
push
popf
xor
test
pushf
test
xchg
stos
pop
test
inc
insb
mov
pop
xorb
push
call
xlat
jp
cmp
shlb
cmp
bound
pop
xor
mov
sub
in
std
std
test
or
pushl
mov
scas
cmp
fsubl
jge
xchg
jb
pusha
stos
adc
inc
addr16
mov
testl
sti
mov
sbb
mov
cwtl
jle
inc
pop
dec
sub
inc
push
fildl
push
jg
cmp
fstpt
aad
fdivrs
frstor
movsb
out
xor
pusha
cmp
and
ja
mov
cmp
pop
sti
loopne
mov
push
inc
mov
cli
pushf
out
icebp
sub
lcall
scas
js
sbb
cmp
das
dec
sub
enter
out
inc
popa
js
jle
sub
dec
icebp
ja
stc
ja
movsl
push
daa
push
xor
ja
sahf
repz
orl
pusha
mov
mov
mov
aas
mov
out
aam
jno
xchg
jno
cmp
movsl
xor
jno
jb
push
inc
icebp
xchg
xor
xorl
sar
stos
in
idivb
sbb
aaa
pop
andb
cmp
jl
fdivrs
jae
sbb
mov
push
sti
arpl
jp
bswap
cmp
mov
mov
call
js
idivl
bound
dec
icebp
mov
cwtl
xlat
ja
stc
pop
mov
mov
js
lret
cwtl
adc
pop
inc
jp
xor
sar
addr16
adc
inc
pop
xchg
loopne
cs
mov
ret
dec
jbe
lret
int3
sub
jo
icebp
xchg
mov
mov
push
fbstp
xchg
iret
fiadds
mov
subl
mov
mov
sbb
mov
xor
xor
mov
xchg
idivl
xchg
fisttpll
mov
popa
xchg
pop
int3
fnstenv
sbb
xchg
xor
mov
pusha
mov
jle
push
inc
adc
sbb
andb
subl
xchg
pop
mov
sub
sub
js
clc
les
push
inc
filds
xchg
mov
int
lahf
ds
jnp
bound
test
cmp
mov
fcomps
jns
es
pop
mov
mov
cmp
out
dec
mov
adc
jnp
cmpsl
jbe
mov
cwtl
ficoms
int
test
dec
jnp
sbb
jge
cmp
insb
stos
lea
adc
cmpsl
mov
neg
iret
mov
addr16
mov
lods
xlat
lret
cmp
dec
mov
sarl
orb
xchg
push
sub
not
mov
adc
sbb
aam
lods
cltd
fistps
jge
test
add
lods
and
sbb
mov
pushf
xchg
push
orl
sbb
mov
iret
cmpsl
inc
push
cmpb
cli
mov
arpl
es
mov
std
jl
scas
pop
lcall
adc
stos
xchg
js
js
mov
dec
or
rorl
shl
out
jge
mov
lahf
imul
rcrl
push
div
jecxz
mov
enter
popa
and
mov
cmp
scas
or
push
fistps
mov
mov
scas
jnp
pop
mov
push
dec
stos
clc
xchg
xlat
lods
and
sub
xchg
mov
jge
pop
dec
sub
lds
stc
cltd
xor
xchg
das
enter
mov
ficompl
xlat
pushf
jl
cmpb
scas
cmp
sbb
mov
dec
out
dec
inc
jae
rorb
xchg
test
enter
aas
cld
into
fs
nop
clc
jmp
add
jl
dec
sub
dec
add
add
sbb
aaa
pop
xchg
mov
cmp
add
clc
push
push
or
xchg
testl
cmpsb
mov
imul
cli
or
cltd
imul
adc
cli
aam
or
fdivs
aam
bound
dec
cmp
push
add
and
pop
dec
lcall
ret
dec
inc
cs
and
call
sbb
xor
mov
add
fs
call
inc
sbb
cmpsb
cld
jge
or
jo
movsl
push
int3
adcb
inc
loop
repz
mov
aaa
mov
mov
std
call
popa
or
iret
cmp
addb
dec
bound
push
jo
fdivrp
mov
push
jecxz
fidivs
lret
or
pop
jcxz
imul
fimuls
push
cmpsl
jno
out
push
push
icebp
es
cmp
les
loop
fdivrs
add
lods
jns
divb
bound
lcall
ljmp
test
sbb
jg
sbb
dec
fadd
adc
dec
rolb
jnp
jl
imul
leave
andl
inc
test
cmpsb
adc
cmp
std
adc
sahf
jl
sbb
loope
push
out
pop
insb
fidivrs
dec
ds
fwait
pop
and
jg
adc
sub
mov
pop
or
mov
es
sbb
mov
inc
xor
xchg
inc
fnstsw
pop
or
mov
push
loop
enter
ja
inc
adc
sbb
mov
insb
std
cwtl
movsb
and
addr16
cmc
or
add
adc
ja
dec
cmp
shrl
add
fidivl
clc
adc
adc
aas
scas
sbb
jmp
out
ret
pop
sub
mov
inc
stc
pusha
dec
hlt
and
insb
mov
mov
jno
mov
out
daa
leave
test
adc
mov
out
mov
or
sub
inc
xchg
adc
out
push
sub
and
fidivl
shll
adc
out
stos
pushf
and
sub
jo
push
pushf
mov
and
daa
fsubl
cmpb
in
dec
icebp
cmp
call
sbb
lods
cli
dec
negl
int
mov
adc
pop
add
xlat
icebp
add
and
icebp
mov
mov
sbb
cmp
js
jge
xchg
jp
in
add
clc
inc
clc
test
cmp
dec
out
mov
int
fdivr
neg
mov
daa
mov
mov
dec
es
popa
xor
insb
divb
cltd
cmc
xorl
mov
xchg
jg
mov
rorl
cmp
lock
xchg
mov
cwtl
mov
mov
mov
fs
mov
mov
pop
movsl
add
fld
in
mov
pushf
xchg
shrl
sbb
xchg
xchg
pop
scas
push
sub
arpl
pop
mov
mov
and
mov
mov
out
mov
pusha
dec
mov
adc
sti
add
rcrb
popa
xlat
cmc
bound
repnz
and
xchg
cmp
xlat
adc
rcrl
sahf
dec
je
cmp
xor
int3
lretw
add
and
sub
jge
leave
enter
mov
xchg
jns
xchg
add
xchg
jp
test
xchg
mov
jg
jmp
addr16
mov
imul
mov
iret
pop
aam
daa
pop
jmp
ja
dec
pop
scas
and
addr16
xchg
lcall
mov
jg
out
xchg
add
pushf
jae
mov
jmp
outsb
mov
ds
lahf
cs
xchg
mov
les
push
or
aam
daa
pop
or
mov
or
cmp
mov
outsl
pop
ret
aad
sbb
mov
mov
adc
test
cmp
fstps
mov
and
fsubs
mov
mov
imul
cli
push
dec
pop
mov
mov
and
mov
mov
inc
cmp
sbb
pop
pop
dec
mov
and
aam
xor
rolb
ret
outsl
xor
dec
and
mov
mov
mov
sbb
cmp
sbb
add
leave
inc
sbb
cmp
mov
daa
dec
frstor
mov
fbld
enter
dec
push
xchg
mov
fs
das
xor
jge
mov
cld
das
and
inc
lcall
xor
dec
mov
dec
pop
adc
clc
in
sarl
lcall
loop
sub
dec
dec
imul
jne
add
pop
shl
repz
fucomi
imul
sbb
mov
orb
adcb
or
das
dec
jmp
lods
hlt
dec
enter
mov
push
fnstcw
jb
adc
jb
sti
ffree
mov
loop
scas
mov
aas
jp
loope
lods
pushf
lods
mov
pop
es
inc
mov
daa
xchg
in
xorb
iret
idivb
popa
daa
ss
fsubr
divb
pusha
or
dec
data16
pushf
icebp
push
cli
mov
movsl
cmp
ja
jmp
xchg
cmp
sbb
sahf
aam
push
nop
das
jecxz
cmp
mov
in
mov
fsts
and
xor
or
xorl
sbb
adc
sub
inc
xlat
orl
pop
jne
pop
mov
stc
ret
mov
nop
addb
xor
rcl
sbb
pop
mov
aaa
jb
cmpsl
cli
in
movsb
fwait
loopne
stos
mov
sub
dec
fdivs
loope
les
xor
sub
ret
mov
jnp
enter
mov
sub
arpl
jne
shll
sti
sub
stc
push
andb
pusha
mov
stc
inc
fnclex
jg
jmp
lret
mov
fcmovu
ret
fs
out
cmp
out
nop
ja
mov
icebp
sbb
out
rol
mov
mov
int
push
cmp
or
data16
sub
xor
pop
xor
jle
lret
int
std
aad
adc
nop
in
daa
push
dec
scas
inc
mov
mov
push
lods
add
mov
adc
xor
aas
lcall
mov
push
ret
pop
pop
out
mov
pop
cmp
cmp
ss
cmp
mov
in
mov
jb
cmp
mov
sbb
sarb
test
shll
xor
inc
xchg
sub
lock
das
sti
lods
cmp
push
mov
data16
mov
inc
std
jecxz
cmc
cmc
shll
je
pop
test
mov
clc
dec
je
loope
cltd
sbb
leave
test
mov
fs
add
add
stc
jne
xor
xor
out
lock
movb
jns
xchg
shrl
sub
les
sbb
cwtl
sub
cs
mov
stos
ss
jno
xor
jb
and
scas
test
imull
mov
add
jne
sub
mov
stos
or
dec
orl
in
jecxz
sub
xor
insl
cmc
call
sti
cltd
mov
addr16
and
push
cwtl
sti
cmp
mov
inc
das
jl
pop
ds
push
push
lock
leave
mov
dec
daa
mov
enter
mov
jg
loope
add
sbb
dec
or
mov
sub
and
movl
ljmp
mov
push
sbb
and
add
or
imul
dec
mov
cmp
mov
sbb
jp
addr16
cmpsb
cltd
or
push
mov
aam
loope
stos
cmp
xlat
enter
in
les
mov
inc
xor
or
data16
fwait
pop
subl
mov
xor
dec
test
cmp
int3
mov
clc
xchg
test
cmp
adc
sub
pusha
cmp
push
dec
jg
jb
sti
mov
and
stc
add
jmp
and
mov
stos
stc
fninit
clc
fiaddl
stos
leave
mov
jg
fsubl
cmpsb
fcompl
or
and
movsb
fldenv
sbb
sarb
sarl
scas
mov
cmp
add
loope
fs
fisttps
and
mov
push
mov
cmp
jne
dec
mov
cmc
jecxz
inc
addb
popa
mov
dec
pop
xchg
mov
leave
mov
and
xor
xchg
fucomip
add
adc
xor
mov
or
pop
lahf
aas
ljmp
ror
pop
call
cmp
jmp
pop
cmp
dec
aas
jae
dec
sub
mov
enter
sbb
jecxz
or
mov
mov
xorb
pusha
test
pusha
push
adcb
pushf
sub
or
dec
fdivs
sub
push
mov
stc
inc
sub
mov
sbb
mov
jge
pop
push
out
and
sub
and
loope
jns
daa
cwtl
fldcw
call
mov
xor
mov
xchg
add
lods
fcmovnb
ret
orl
iret
or
sub
mov
mov
sti
test
ljmp
pop
push
mov
inc
shlb
and
add
push
fisubrs
push
jp
jne
scas
mov
push
jge
or
fnstenv
imul
inc
and
outsl
mov
test
cmpsb
dec
jb
fistps
fisttps
push
pusha
sti
mov
mov
scas
mov
inc
jno
mov
in
rcr
dec
cmc
xchg
xor
sub
into
push
xor
dec
mov
xorl
sbb
je
dec
add
adc
push
pusha
mov
mov
inc
mov
mov
sub
or
add
cmp
add
xchg
pusha
push
dec
push
push
rorb
std
xorb
adc
rcrb
jnp
jns
mov
aad
and
ss
ror
push
les
cmc
xchg
sarl
stos
cmp
cmp
pop
jl
lods
ljmp
gs
mov
sbb
jg
jmp
out
mov
pop
dec
cmpsb
xchg
pop
or
adc
pop
cmp
pop
movl
pop
adc
and
sbb
mov
fs
add
inc
xor
shlb
mov
aaa
mov
add
test
sahf
xor
mov
mov
out
inc
xor
cmp
sub
leave
xor
loope
xchg
jmp
pop
arpl
jl
sub
test
int
nop
aaa
mov
cmpsl
pusha
sub
fcmovnu
push
cltd
gs
lcall
pusha
and
cli
in
insl
dec
into
test
mov
shll
xchg
movsb
loope
stos
xor
movsb
test
dec
mov
jmp
xchg
popf
jmp
pop
iret
cwtl
lahf
aam
cs
rorb
in
aam
aas
push
mov
push
icebp
fstpt
add
test
int3
and
rcl
mov
idivl
jg
out
jb
sub
dec
add
mov
and
mov
je
in
dec
dec
dec
mull
cmp
cmp
mov
aas
inc
and
sub
mov
call
daa
inc
and
aam
jne
mov
pop
sbb
repnz
fcoml
std
jecxz
push
ret
mov
sub
cmp
aad
iret
and
and
xchg
aas
js
ds
fsubrs
cmp
pop
leave
pop
mov
insl
jecxz
mov
neg
xchg
dec
add
push
in
pop
jns
mov
in
inc
or
lret
cmp
pop
add
mov
mov
inc
sti
or
add
and
sub
es
cmp
mul
ja
popa
rcr
lahf
jl
and
mov
jae
sub
negl
js
fisttps
fimull
or
inc
ret
mov
sbb
test
fadds
push
xor
nop
cmpsb
pop
xor
sub
cmpl
leave
and
out
jge
mov
jo
call
push
adc
mov
mov
or
jmp
xchg
daa
loopne
fwait
dec
and
test
and
popa
and
cmp
jp
xchg
jbe
cmp
jg
stc
lods
sub
dec
jmp
enter
and
and
ret
aam
scas
lahf
incl
inc
gs
dec
adc
out
cld
int
mov
mov
sbb
insb
loope
mov
lret
mov
sti
decb
les
sub
jge
ds
and
loope
addl
cmpsl
cltd
xor
stc
and
in
sarb
xchg
and
mov
pop
ljmp
loopne
dec
and
and
mov
and
xchg
addr16
icebp
out
dec
sub
aam
aas
adc
mov
in
inc
fsubr
dec
ret
add
xorl
in
push
inc
pusha
in
fsubs
cmpsb
cmp
out
in
or
les
clc
mov
fsubl
dec
shrb
and
ds
sahf
inc
in
mov
pop
cld
mov
mov
mov
jl
cmp
cltd
mov
out
mov
xor
rorb
sub
popf
xor
ljmp
inc
and
add
sti
dec
cmp
dec
xor
outsb
loop
dec
ljmp
mov
stos
or
inc
rcl
gs
push
jp
ljmp
jg
xor
mov
add
std
push
sti
add
mov
and
push
adc
xchg
inc
xchg
or
pop
sub
dec
ja
jp
sub
mov
lds
data16
rcrb
sub
inc
cmp
or
ret
mov
out
xor
mov
pop
adc
sarb
pop
jbe
cmp
cmp
in
xor
adc
movsl
fnstsw
cmp
adc
int
mov
lods
rcll
mov
hlt
inc
sbb
dec
fistl
and
pop
stc
jl
and
mov
mov
icebp
dec
dec
dec
sub
push
sbb
sbb
arpl
add
out
jae
ss
inc
loopne
mov
inc
xchg
clc
fidivs
mov
enter
cltd
popf
sub
xchg
mov
lcall
fdivr
je
and
cmp
fbstp
aad
sub
sbb
xchg
sbb
mov
ret
sbb
mov
incl
sub
outsl
das
mov
pop
cmp
sub
bound
std
bound
jg
inc
inc
sub
movsb
sub
cmovp
pop
daa
fiaddl
pop
sti
dec
movsl
xchg
pop
lods
fidivrs
mov
cmp
sub
mov
jp
xchg
mov
rclb
not
add
sbbb
xor
xchg
fnstsw
cmp
out
shll
std
jmp
sub
cmp
and
inc
add
push
jmp
xchg
fs
andl
hlt
rorb
xlat
sbb
adc
xchg
sub
and
out
out
loopne
and
stc
mov
mov
shl
out
in
rcr
rcr
add
sbbl
test
loopne
fucom
mov
mov
out
test
mov
cld
int
pop
jnp
jl
mov
imull
xchg
out
fldenv
cmpsl
ds
andl
test
and
mov
inc
out
and
xchg
mov
shrl
inc
in
stos
xchg
push
aas
sub
sub
inc
and
add
out
add
std
pusha
jecxz
mov
cmpsb
and
mov
shll
and
sar
mov
mov
dec
sub
dec
push
mov
rcl
inc
xchg
cmpl
sbbl
mov
inc
out
or
fnstcw
pop
sub
jle
shl
and
cltd
imul
rolb
pop
adcl
inc
mov
mov
add
pushl
and
lods
jb
loope
cmpsl
fdivrl
enter
fldt
and
test
jmp
xor
cmpsl
cwtl
cltd
mov
out
aas
sbb
fdivrs
cmpsb
inc
jmp
jbe
jl
fdivr
mov
inc
mov
inc
push
sub
rcrb
mov
cmpb
mov
cmp
sbb
pop
adc
pop
mov
inc
cmp
jp
fistpl
cmp
fisttpl
mov
sub
test
sbb
pop
xchg
mov
movsl
negl
mov
jmp
jbe
xlat
sbb
mov
mov
mov
inc
test
fmulp
fsubrl
pop
inc
mov
mov
mov
mov
arpl
mov
push
lods
dec
mov
push
adc
add
repnz
xlat
mov
and
sti
je
nop
cmp
sarb
imul
movsb
mov
loop
loopne
inc
leave
scas
mov
push
add
das
mov
xchg
inc
loope
mov
jmp
cmp
add
sub
push
dec
loop
and
into
imul
adc
fdiv
mov
cld
mov
pop
daa
repz
call
mov
mov
int
cli
outsl
add
enter
add
shrb
cmc
mov
mov
div
stos
sub
nop
dec
push
aad
or
pop
adc
popf
js
and
lret
adc
and
xchg
ss
pop
fists
xchg
cmpsb
xlat
aam
arpl
xchg
add
xchg
inc
sti
mov
add
xchg
sbb
xchg
sti
in
sbb
mov
rorb
daa
adc
lcall
mov
popa
mov
mov
sub
adc
mov
loop
push
insl
mov
push
pop
push
mov
sbb
aaa
add
mov
add
lods
test
dec
test
cmp
sbb
jb
fbld
aas
out
push
daa
loop
mov
rcrb
adc
push
into
std
or
int
int3
add
fnstsw
jecxz
outsl
push
loop
sar
les
xchg
sbbb
xchg
or
dec
pop
je
arpl
adc
fisttps
and
mov
loop
push
push
pop
mov
xchg
xorb
sbb
mov
cmp
in
push
orl
pop
cwtl
sub
pop
ret
aas
xor
jecxz
inc
leave
repnz
xchg
loopne
cld
les
inc
pop
out
adc
push
mov
ss
or
and
add
push
cmpsl
sub
sbb
inc
ror
xchg
lds
in
pop
fdivrs
mov
cmp
mov
pop
mov
scas
fcompl
adc
fildll
mov
jmp
mov
jae
add
iret
cmp
dec
push
jmp
daa
pushf
cmp
in
add
xchg
push
scas
test
loope
popa
and
and
fldz
or
mov
cs
jl
mov
jp
pop
nop
push
les
in
pop
sbb
xchg
cmp
jmp
int
and
out
mov
ljmp
and
repnz
jp
das
into
push
and
pop
cmp
and
inc
and
inc
and
test
mov
idiv
add
enter
mov
scas
jmp
jnp
and
pop
movsl
mov
push
in
mov
and
ds
call
fsubrs
inc
mov
sub
mov
pop
jmp
popa
rcl
adc
jb
xor
mov
test
rcr
inc
ficoml
sbb
jge
mov
stos
sbb
inc
mov
push
pop
mov
lret
bound
sbb
rclb
push
push
js
mov
clc
pop
into
ficompl
pop
add
mov
xorb
jecxz
popf
mov
adc
mov
lahf
mov
sti
std
enter
aaa
add
xchg
jge
ljmp
shlb
jb
dec
mov
mov
mov
loopne
je
inc
and
sub
mov
ds
rcrb
xlat
dec
rorb
cmp
stos
pop
aas
pop
std
out
cmp
jp
pop
push
pop
cmp
ficoms
xchg
loop
pop
lods
scas
in
sub
in
shl
sar
inc
jns
xor
mov
ss
pop
jo
mov
pop
inc
and
add
and
aas
jnp
mov
mov
ficomps
mov
and
inc
mov
mov
sbb
ljmp
push
add
push
faddl
test
insb
repnz
adc
push
xor
sub
pop
sti
add
pop
or
cld
testb
cmpb
nop
sbb
jl
lock
sub
xchg
bound
test
mov
push
rcrl
mov
add
mov
enter
mov
cmp
out
aaa
scas
imul
inc
scas
data16
pop
mov
push
das
sbb
push
test
jmp
jmp
gs
fucomi
push
decl
cld
cmp
ds
jmp
adc
into
inc
jnp
mov
icebp
es
daa
rcr
pop
push
add
inc
cmp
push
ror
push
or
lret
ds
sbb
lods
or
ss
mov
clc
mov
xor
call
add
mov
and
sbb
xchg
fdivrs
sbb
out
add
sti
inc
add
jge
jp
and
mov
sahf
adc
xchg
or
mov
sbb
pop
pop
cmpb
mov
jbe
mov
and
xor
imul
shl
or
lahf
cmc
mov
mov
ljmp
jle
enter
repz
sub
sbb
xchg
xchg
push
cmp
or
mov
cmp
add
jae
inc
cli
out
enter
jb
or
inc
mov
mov
add
mov
adc
movsl
pushf
cli
sbb
inc
mov
ffree
jno
mov
mov
or
faddl
xchg
push
sti
add
daa
repnz
stc
sub
nop
fbld
mov
xor
sarb
mov
push
sub
mov
inc
cwtl
xlat
mov
jle
pop
cmp
repnz
xor
nop
stos
mov
jno
jb
xchg
or
pop
repz
adc
imul
mov
mov
into
sbb
jge
adcl
cmp
cmp
inc
jge
ret
fcoml
fldl
xchg
add
icebp
push
add
sbb
mov
xchg
loopne
lahf
mov
outsb
fcomps
adcl
enter
sub
xor
outsb
adc
fdivs
inc
in
repnz
ljmp
repz
lds
sub
mov
out
xor
shlb
je
fistl
sbb
dec
xor
dec
mov
mov
cmp
orl
pop
mov
fsubrp
pop
frstor
sbb
cmp
mov
jb
inc
mov
pop
fistpl
nop
mov
push
xor
call
enter
pop
and
mov
das
push
xor
pop
adc
es
sub
adc
cmp
pop
loope
push
mov
or
dec
movsb
and
add
lret
xor
xchg
stos
mov
mov
inc
pop
dec
mov
mov
mov
int3
lcall
jno
pop
cmp
mov
inc
rcrb
cld
ds
xor
mov
xchg
std
adc
ss
ds
xlat
int
cmc
mov
add
rcll
and
rclb
dec
xchg
mov
testb
sbb
mov
jae
mov
xchg
mov
and
dec
adc
sub
aaa
jnp
dec
xor
xchg
mov
xchg
dec
cmpsl
adc
ret
add
pop
inc
and
jnp
add
sbb
aam
pop
cli
mov
test
fidivrs
mov
aaa
cmp
movsb
sub
add
cld
clc
stos
sub
sar
and
stos
sbb
in
mov
aad
daa
inc
push
xchg
mov
jmp
xor
and
loope
scas
bound
xlat
jp
addr16
push
adc
adc
shlb
jp
inc
pop
push
sbb
ja
jp
fdivr
mov
rcr
jp
cli
jp
add
jmp
push
xchg
inc
es
in
aaa
pop
loopne
push
loope
push
scas
mov
xchg
add
dec
imul
mov
enter
mov
incl
test
mov
mov
dec
addr16
jnp
fisubrs
popa
jbe
sbb
cli
sub
jle
std
adc
ficoml
fcoml
scas
nop
inc
sub
or
es
sbb
mov
outsl
lcall
xor
mov
pop
mov
repnz
fsubrs
mov
pop
out
adc
stos
mov
daa
xor
stos
sarl
into
pusha
gs
adc
lock
call
test
push
cmp
push
fistl
loopne
mov
mov
int
movsb
loop
inc
aam
mov
mov
and
sbb
mov
mov
in
mull
es
into
lods
pop
sbb
and
out
jp
out
cmp
into
push
mov
cmp
mov
adc
sarl
scas
aam
enter
out
push
dec
mov
in
stos
fstpt
add
popf
pushf
and
push
leave
cli
stc
sarb
enter
dec
sub
push
lcall
ss
and
shlb
jae
call
xchg
movsl
sbb
mov
fld
cwtl
cld
in
pop
pop
jg
movsb
push
push
test
jbe
mov
mov
mov
in
xlat
cmp
fiaddl
sub
pop
insl
call
mov
inc
addl
in
push
stc
cmp
sbb
sti
add
mov
cmp
dec
sbb
mov
cmp
mov
lret
aad
popf
aaa
and
cli
sti
loope
sbb
jecxz
es
or
sub
cmp
lods
popa
xor
sbb
orb
mov
icebp
xchg
ret
mov
mov
jne,pn
lret
cwtl
mov
inc
sti
mov
inc
jnp
cmp
adc
push
pop
push
push
xlat
push
sub
pop
std
sbb
mov
cwtl
jp
int3
es
dec
fiaddl
adcl
pusha
jb
sbb
loope
mov
xor
or
push
inc
fcmove
sub
dec
dec
cmpsb
popf
xchg
sub
adc
dec
int
dec
sbb
decl
mov
in
pusha
mov
jns
xor
js
cltd
mov
xor
mov
xor
mov
jae
or
mov
out
push
ret
push
push
cmp
and
cmc
test
addb
add
movsb
cmp
sahf
push
fucompp
inc
cwtl
movsl
sbb
mov
dec
ret
lock
aam
and
mov
sub
fbld
mov
cmp
in
stc
and
push
sarb
xchg
mov
imul
sti
or
jo
sbb
xlat
mov
notb
repnz
ss
sahf
je
popf
mov
iret
cmp
push
add
jecxz
and
popf
mov
push
jmp
xor
cmp
out
xor
mov
enter
cmpsb
dec
xor
sub
and
mov
aas
rcll
mov
jbe
add
dec
test
jno
inc
lret
out
divl
mov
add
jno
hlt
sub
sbb
mov
add
sbb
loope
push
sarb
push
mov
inc
sbb
xor
add
fstpt
mov
and
cmp
pop
pop
shlb
shl
adc
andl
clc
inc
jp
sub
and
enter
aas
movsb
push
fistpll
xchg
dec
ss
test
movsl
dec
sbb
cwtl
xor
inc
mov
je
sbb
inc
ss
xor
and
fldcw
out
sbb
mov
xchg
jle
fnstcw
xchg
cmp
mov
mov
mov
xchg
dec
aas
not
mov
sub
and
test
clc
aam
sbb
idiv
pop
js
xor
js
inc
cmp
fisttps
lods
sti
and
mov
cld
mov
adcb
pop
test
jmp
mov
popf
out
sti
shlb
mov
mov
ljmp
cmp
mov
mov
cmp
jbe
push
in
pop
dec
pop
mov
mov
jg
movsb
mov
sbb
add
std
push
jp
fnstsw
and
shrb
jg
repz
sub
cmp
mov
inc
pop
fs
insb
inc
and
out
mov
mov
outsl
aam
sbb
ss
out
hlt
fcomp
cwtl
push
or
sub
pop
hlt
jp
cmp
sbb
and
sti
inc
pop
jp
xor
daa
mov
iret
jbe
movl
push
mov
mov
test
mov
popa
cmp
adc
enter
movsl
mov
pop
pop
movsl
jmp
mov
and
pop
xchg
push
sbb
pusha
inc
jge
add
insl
rcrl
fdivrs
out
add
sbb
mov
push
mov
pop
lods
jae
cmc
mov
pop
pusha
shl
push
leave
scas
movsb
or
and
sub
mov
and
and
pop
cmp
pop
in
jne
cmp
loop
mov
cmp
popf
lea
jmp
in
in
sbb
es
mov
arpl
cld
loope
xchg
stc
jns
mov
in
mov
mov
pop
and
and
fwait
sbb
push
sbb
dec
dec
mov
shll
mov
jl
dec
loopne
movsb
sbb
pop
lret
popf
icebp
xchg
mov
outsb
dec
push
or
rorb
es
mov
into
inc
push
out
and
add
dec
and
repnz
pop
or
mov
daa
push
or
dec
xor
push
jmp
mov
jmp
es
and
rcl
sbb
mov
pop
push
lahf
pop
out
popf
es
xchg
movsb
lret
push
std
dec
mov
imul
jmp
pop
jle
lcall
out
inc
ret
and
leave
outsb
daa
insb
xchg
popa
mov
lcall
xor
mov
scas
sbb
es
mov
adc
sarb
jg
mov
lods
fcompl
ret
jmp
cmp
mov
aad
or
sbbb
popa
add
and
stc
shrb
test
rcl
jle
inc
inc
lds
and
add
jmp
cmp
push
sbb
pop
adc
mov
ds
or
rorb
andl
xchg
dec
sub
jno
orl
aaa
or
push
mov
lahf
jo
xchg
inc
inc
xor
clc
inc
daa
loop
push
movsl
jecxz
pop
out
mov
mov
ds
dec
cmp
cltd
xor
movsb
and
mov
rclb
sarl
push
into
xlat
inc
mov
stos
leave
stos
pop
dec
rcll
lods
mov
fld1
addb
jbe
cmp
lcall
aas
dec
pop
loope
xor
add
das
mov
ljmp
imul
dec
pop
mov
cmp
sbb
pop
pop
mov
scas
imul
inc
out
incb
cmpsl
mov
es
add
inc
mov
imul
mov
pushf
pop
std
fldenv
add
adcl
jo
cmp
and
shl
cltd
nop
sbb
mov
xlat
jbe
mov
lods
mov
mov
rcr
fisubs
mov
adc
add
orl
jl
jbe
insb
aaa
sbb
inc
pop
xchg
out
rol
jp
sahf
leave
adc
mov
mov
xlat
mov
push
add
mov
sbbl
mov
enter
mov
mov
and
insb
sbb
xor
outsl
aaa
mov
daa
mov
dec
addb
fwait
xchg
dec
test
aas
or
loope
pushf
mov
push
push
cltd
ffreep
mov
mov
sbb
aas
shrb
cmp
rolb
mov
add
cmp
ret
cmp
sbb
pop
mov
dec
mov
lcall
bound
enter
popf
pop
aas
push
pop
scas
push
jb
fcomip
mov
pusha
cmp
pop
jo
mov
sbb
mov
mov
mov
cmp
lret
addr16
sub
push
mov
lods
sahf
xor
dec
movsl
sbbb
or
sbb
sbb
adc
pushf
mov
cmpl
pushf
es
repz
ret
cmp
mov
sbb
pop
outsb
mov
cmp
inc
mov
shrb
out
lods
push
xchg
or
sbb
lock
xchg
test
test
outsb
test
movsl
mov
mov
out
pushf
push
aam
scas
lret
inc
xchg
and
das
mov
xchg
nop
mov
and
out
sub
mov
mov
lret
loope
add
pop
call
and
adc
fldt
inc
xchg
sub
addr16
fildl
fldenv
sti
loope
jl
inc
fistl
sti
xchg
and
jne
aaa
pusha
sbbb
mov
mov
fcmovne
les
pop
test
add
sub
dec
ss
fildl
sbb
or
push
fnsave
and
divl
test
test
pop
adc
in
adc
cmc
addr16
xchg
xchg
lods
mov
adc
jb
jle
adc
mov
cwtl
jg
inc
rorb
pop
xchg
xchg
iret
mov
sub
push
mov
pop
jns
sub
jmp
fldcw
addb
mov
scas
cmp
ss
sbb
cld
mov
dec
or
ljmp
aas
sub
movsl
loopne
pop
xchg
mov
cmp
es
rolb
dec
cmp
clc
inc
mov
inc
stos
sti
stos
mov
mov
pop
mov
clc
stos
cmc
jnp
leave
push
sti
mov
adc
enter
pop
xor
cmpsb
les
or
add
xchg
push
nop
dec
pusha
mov
add
mov
add
cltd
sub
push
jmp
and
mov
sbb
or
je
movsl
testb
fcmovnb
push
fstpt
inc
dec
fcoml
push
add
sbb
mov
add
sub
inc
inc
push
adc
mov
movsb
les
fbld
pop
xor
cmpsl
add
sbb
subl
cmc
ficoml
cmp
enter
aas
xor
mov
cmp
dec
sbb
loopne
cmp
cmp
iret
pop
adc
pop
jnp
std
pop
adc
inc
mov
mov
pop
adc
dec
icebp
push
and
push
mov
sub
repnz
pop
adc
jl
jl
mov
enter
das
xchg
mov
cmpsb
pop
mov
mov
movsb
loop
out
dec
fldcw
lds
pop
xchg
ficompl
mov
xor
add
sub
xchg
enter
das
movb
lret
adc
sub
jne
mov
mov
sbb
fwait
mov
jecxz
fs
inc
cmpsl
dec
add
popa
mov
icebp
sub
out
mov
push
arpl
es
inc
pushf
test
jl
mov
fwait
cmp
sbbb
mov
cmpsl
and
jns
or
hlt
dec
cmp
std
sbb
cmp
cltd
dec
mov
mov
lea
jl
sub
lret
popf
pop
or
fistps
adc
stos
pop
popa
and
negl
add
imul
fadd
adcb
lret
pop
lods
std
cmp
inc
enter
gs
fcomps
es
pusha
xchg
cltd
dec
sti
cltd
mov
call
sbb
lret
add
and
dec
pop
and
lea
jp
or
cmp
repz
jp
gs
imul
ss
cmp
lods
pop
mov
inc
stc
ja
rcr
ss
dec
cmp
cmp
push
movsl
xor
arpl
js
aam
mov
std
xor
dec
mov
flds
sub
test
inc
loopne
roll
and
and
mov
fistps
add
cs
pop
mov
scas
cmp
shll
and
test
adcb
pop
dec
mov
fnsave
into
mov
sbb
leave
sti
mov
or
fnstcw
and
std
mov
or
stc
popa
scas
mov
fcoml
andb
lods
mov
test
push
sbb
mov
and
hlt
lock
mov
or
or
das
sti
js
test
sbb
int
sbb
or
adc
pop
fadd
and
lret
dec
ljmp
cmp
js
sbb
xor
clc
adc
xchg
fwait
mov
repnz
mov
push
jns
sbb
stc
stos
fstpt
sub
jmp
outsb
lahf
and
mov
or
xchg
mov
inc
sbb
or
fildl
test
idivl
arpl
int3
fsts
xchg
mov
sbb
repnz
aaa
push
test
loop
cmp
jbe
mov
adc
mov
loope
xchg
xchg
xor
mov
push
jno
cmp
xor
in
fisubl
cmovne
pop
or
mov
stc
jp
arpl
mov
mov
in
loopne
or
aaa
xor
dec
aaa
rorl
hlt
jns
ja
in
in
pop
aam
je
adc
or
icebp
sub
inc
aas
cmpsb
aaa
pop
push
inc
or
pop
sbb
repnz
sub
mov
sub
out
jle
iret
iret
bound
mov
xor
lcall
push
sahf
sbb
pop
cmp
add
fildl
mov
jecxz
rolb
bound
sub
mov
scas
std
pusha
shlb
lods
xor
int
cmp
add
sti
inc
nop
xor
aam
in
or
lods
push
xorl
mov
xchg
adc
add
mov
add
mov
mov
popl
loope
mov
mov
lahf
ss
or
pop
ja
je
orb
mov
cmp
jle
adc
add
ret
fldenv
fs
sub
push
adc
clc
nop
push
test
mov
ds
iret
jp
test
negb
aam
je
sub
and
daa
lret
or
mov
inc
arpl
cmc
mov
mov
jae
dec
pop
fstps
jo
dec
xchg
inc
mov
mov
inc
cli
inc
stos
jp
loopne
mov
stc
fcmovu
mov
inc
es
pop
mov
jbe
adc
jp
cmp
fstl
stc
push
push
and
push
fyl2x
insl
sub
test
dec
inc
imul
mov
and
rorl
mov
and
test
or
or
cmp
out
pop
push
flds
dec
push
lods
andl
dec
xor
popl
and
lods
addl
mov
pop
inc
cmc
jp
adc
scas
cltd
sub
xchg
aam
mov
popf
add
ds
jle
iret
pop
lock
ds
repz
jl
dec
xlat
pusha
mov
repz
add
test
pop
pusha
sub
cmp
mov
aaa
testl
in
sbbb
repnz
mov
xchg
es
pusha
movsl
lods
lret
add
mov
xor
or
cmp
repz
and
bound
les
cs
jg
cld
ds
mov
sub
popa
mov
dec
subl
cmp
es
add
mov
xchg
mov
int3
aaa
dec
jmp
negb
out
sub
insl
mov
mov
clc
enter
cmp
push
fiadds
sbb
mov
test
sarb
data16
or
idiv
dec
movsl
neg
add
inc
sbb
mov
pop
xchg
rol
jno
rcrl
je
fisubrl
mov
mov
pop
mov
stc
mov
adcb
push
loop
ficoms
fsubp
mov
negb
shr
cli
sub
lock
pop
in
cmp
lock
mov
sti
pop
cmpsl
or
es
jl
mov
out
arpl
das
icebp
lahf
xchg
jmp
cmc
lods
jo
fsubs
lret
loop
cmpsb
outsb
dec
sbb
and
add
xchg
push
movsl
jbe
repz
mov
insb
adc
sub
movsb
imul
mov
loopnew
cmp
add
push
jno
cltd
fwait
xor
lea
cmp
test
fs
inc
std
mov
mov
movsb
dec
and
or
adc
jge
movsl
inc
cmp
mov
cli
fistpll
stos
in
jecxz
addl
and
loopne
mov
jmp
popa
sub
add
jns
fsubrl
jne
cmpl
fnstenv
adc
sub
decw
cmp
mov
test
ljmp
xchg
mov
inc
xchg
lds
adc
pop
ficompl
clc
mov
add
andb
sub
jo
and
in
mov
mov
dec
stc
inc
ja
pop
rolb
lcall
in
mov
arpl
fistpll
jp
popf
sti
push
mov
mov
loope
lock
daa
add
mov
pusha
push
insl
push
push
pushf
cmp
in
sbb
add
mov
addr16
je
sub
fidivrl
fdivrp
mov
or
mov
aaa
stc
outsl
push
cmp
test
clc
pop
cmpl
stos
push
mov
addr16
or
scas
inc
fs
stos
add
mov
cld
adc
add
aas
xchg
mov
jae
adc
enter
mov
movsl
popa
mov
insb
ret
aad
jge
mov
or
movsl
mov
adc
push
jle
mov
or
sbb
loope
xor
cmp
ret
or
scas
jns
jae
mov
mov
mov
cmp
popa
js
mov
out
les
cmpb
sbb
gs
jp
pushf
jp
mov
xor
sub
pop
lahf
mov
lods
sbb
es
cmp
stos
adc
dec
scas
or
sbb
adcb
les
inc
sbb
push
xor
adc
ljmp
xchg
xchg
jle
mov
popa
pop
pusha
mov
rcrl
mov
sbb
cmp
ret
loope
lods
sub
rcll
inc
lcall
mov
mov
push
pop
or
std
sbb
test
sub
pusha
test
aad
xchg
mov
jecxz
es
xchg
sbbb
dec
or
sbb
lcall
cmp
leave
cmp
mov
stos
ja
xor
cmp
cmp
cmp
cmp
pop
inc
jnp
fnstenv
mov
cmp
xor
jo
add
loopne
cli
cli
sub
xor
dec
sbb
lods
shrb
jle
pop
adc
cmp
mov
gs
sarl
into
pop
inc
cmp
int3
xor
stos
pop
mov
cmpsl
sub
arpl
fcmovnu
test
and
jb
mov
mov
jl
outsb
push
jl
and
cmpsb
xchg
push
sbb
repnz
adc
sbb
adc
mov
cmpsb
cmp
push
sbb
or
sub
cmp
in
mov
cmp
mov
xlat
js
sbb
enter
shr
sub
stos
lret
mov
data16
testl
adc
mov
jbe
add
clc
dec
or
mov
stos
mov
pop
imul
cmp
stos
je
mov
or
aam
xchg
xor
bound
out
es
daa
sbb
add
ss
mov
stc
test
jge
bound
dec
mov
add
stc
cmp
icebp
bound
cmp
popf
adc
cmpb
mov
sub
ja,pn
mov
inc
dec
inc
test
outsl
fldcw
mov
rolb
into
fadd
dec
cmp
icebp
daa
mov
jp
cmp
xchg
xchg
add
mov
xor
xsaves
jp
lds
cmp
in
test
add
pusha
out
sbb
jmp
mov
dec
sbb
test
jecxz
mov
addl
xor
pop
and
test
xchg
xchg
or
fisubrl
xor
stos
pusha
cmpl
dec
movsl
mov
inc
and
sub
mov
xchg
xor
xor
push
lds
jecxz
insb
sbb
fidivl
push
sub
inc
cld
pusha
iret
mull
cld
add
loopne
pop
push
aaa
lods
cs
mov
aas
inc
sub
ds
out
xchg
stc
dec
jle
jns
mov
mov
shlb
hlt
loopne
mov
adc
jae
mov
icebp
sbb
mov
push
imul
push
je
fists
push
mov
xchg
add
xchg
pavgw
jge
jo
mov
mov
lds
mov
outsb
stos
mov
test
jmp
mov
xchg
dec
lcall
pop
shlb
fisubl
int
jg
mov
test
or
addl
sahf
cld
sub
stc
shr
add
pop
test
out
loope
inc
adc
out
pop
scas
inc
fcmove
pop
pop
clc
arpl
insl
jae
mov
xor
mov
pop
mov
pop
fdivrl
movsb
xchg
push
fsubl
lea
iret
fidivs
jb
jo
xor
dec
adc
xor
dec
xchg
cmp
mov
jno
mov
mov
push
lret
jne
push
fwait
iret
xor
adc
iret
test
pushf
test
inc
es
iret
adc
push
sti
dec
and
pop
cltd
outsl
fcmovnbe
cmp
insl
and
mov
icebp
orl
inc
cmp
icebp
mov
cmp
and
jb
lods
fbld
and
pushf
adc
sti
mov
jge
mov
shrb
and
and
lcall
fld
mov
pop
add
pop
or
movsl
mov
mov
xchg
repz
loop
push
adc
fnstcw
dec
out
xchg
inc
and
jp
lods
arpl
fs
mov
pop
push
cmp
call
inc
lea
inc
rcll
add
jbe
arpl
jne
gs
stc
andl
repnz
movl
jp
cmpb
cmp
adc
addl
jl
fucomp
outsl
adc
or
lret
dec
loope
and
loopne
sbb
inc
lcall
mov
outsl
flds
mov
sub
adc
fisubs
lahf
bound
loopne
pusha
std
cmc
jnp
js
cmp
pop
bound
bound
fmuls
push
or
jmp
aaa
push
shlb
aaa
addb
ljmp
dec
ljmp
movsb
lret
mov
std
rcrl
clc
dec
xor
cmp
ds
ja
xchg
test
and
addl
mov
dec
cld
out
jl
sub
pop
xorb
inc
imul
cmp
or
mov
shlb
pop
pop
lret
into
sbb
inc
and
es
mov
cld
cltd
sarl
push
pop
and
mov
sub
rcr
rcrb
fldlg2
in
and
insb
add
mov
push
push
loopne
call
mov
inc
js
popa
aas
adc
daa
imul
stc
mov
push
enter
xchg
xlat
push
push
xchg
jbe
mov
rolb
sub
sarl
stc
insl
mov
ss
out
iret
out
movsb
sub
outsl
lock
mov
sbbb
jno
arpl
xor
ldmxcsr
xchg
pop
xlat
jmp
loopew
pop
sbb
add
sarb
repz
inc
rcr
xorl
lock
inc
popa
ror
shl
cld
int
pop
loopne
hlt
insl
orl
outsl
jmp
pop
adc
stos
jg
sbb
pop
cmp
xchg
and
outsl
dec
mov
ja
mov
or
pop
sub
test
leave
mov
add
out
or
cmp
mov
mov
cmp
jne
arpl
iret
sbb
jle
out
inc
mov
push
flds
adc
or
push
in
sub
shl
scas
nop
adc
call
mov
movsb
ja
inc
jne
jmp
bound
mov
sbb
xchg
xor
leave
mov
add
and
es
push
inc
sbb
cmp
imul
stos
fdivs
es
mov
mov
jmp
lret
sub
pop
add
in
jne
cmpsl
dec
pop
xchg
lea
add
and
pop
cmpsb
movsb
pop
sub
out
sbb
and
jbe
mov
or
je
loop
fistl
jge
mov
out
loopne
xor
pop
dec
bound
inc
mov
xor
lock
flds
sbb
jo
sub
sub
mov
enter
mov
jp
jne
cmpsl
xor
fcmovnu
or
fwait
orl
into
and
pop
adc
mov
mov
shll
cs
jb
imul
imul
test
stc
add
lods
mov
bound
or
or
xchg
adc
fisubl
stc
loopne
out
sub
or
aad
sarl
std
dec
fwait
sbb
xor
cld
jecxz
mov
cmpl
inc
jbe
lea
jb
inc
ret
mov
or
xor
fstpt
jmp
hlt
mov
sub
mov
dec
jae
dec
mov
push
popf
scas
push
rcrb
push
dec
out
mov
sub
mov
stos
cld
adc
pop
push
xchg
hlt
mov
sti
add
xlat
push
sub
sbb
sub
mov
jae
sub
daa
push
aam
or
repz
dec
sahf
call
pop
aam
push
loopne
mov
cld
push
leave
add
pop
aas
icebp
movsb
or
rcr
sbb
sub
mov
out
into
sahf
mov
xorl
stc
dec
dec
int3
stos
out
jbe
cmp
jle
sbbb
roll
pusha
jo
mov
les
inc
mov
xorl
ss
daa
das
lret
pop
dec
xchg
adc
pop
fnstcw
out
jae
popf
sbb
aas
xchg
sub
fidivrs
sbb
repz
int3
out
imul
sbb
mov
test
mov
pop
push
or
bound
es
mov
xor
push
dec
and
in
out
inc
mov
ret
xchg
xchg
pop
xor
in
stos
iret
shlb
in
sub
push
je
cmovb
push
stc
repz
test
bound
mov
xor
fistpll
sub
mov
mov
xorl
mov
cmp
outsl
sub
inc
and
ror
test
fidivrs
jecxz
leave
sbb
mov
add
fsts
out
mov
mov
faddl
xor
cmp
aas
imul
imull
pop
mov
and
shll
sti
aaa
addr16
or
add
jp
xor
int3
call
xor
pushf
xchg
dec
aad
mov
sbb
jg
lods
fndisi(8087
mov
out
int
xchg
rcrb
mov
lock
cmp
notl
lcall
arpl
and
fcom
mov
aad
or
pop
mov
add
or
jbe
shll
ret
inc
cld
dec
mov
imull
sarl
mov
mov
and
adc
and
stc
scas
stos
scas
pop
fidivrs
scas
mov
scas
cli
daa
aad
mov
scas
jns
or
push
sub
fisubs
inc
loop
dec
lea
sbb
push
mov
test
leave
pop
test
leave
imulb
adc
cwtl
adc
mov
clc
enter
enter
enter
enter
popa
jns
rcll
mov
aad
push
nop
mov
mov
in
mov
cwtl
push
dec
mov
lock
cmpb
stc
roll
mov
sub
test
lret
ret
test
stos
pop
sbb
test
pop
push
clc
cld
subl
outsl
mov
hlt
or
pop
shlb
mov
enter
inc
js
addr16
mov
popa
jmp
jmp
push
test
push
loope
fdivr
lret
test
fstpt
xchg
hlt
jp
subb
cmp
ficompl
push
push
sbb
mov
or
addr16
pop
fdivrs
test
or
cmp
pop
scas
push
out
pop
out
adc
cltd
cmp
scas
test
jge
stos
loope
rcl
cltd
lea
call
arpl
sbb
out
mov
loopne
pusha
jmp
sbb
jnp
xor
mov
stos
sbb
addr16
add
sbb
xchg
xor
fdivs
arpl
inc
xor
iret
cmp
mov
add
rcrl
mov
dec
cmc
icebp
xlat
lahf
cmp
fidivrs
mov
daa
push
adc
ds
cltd
pushf
imul
clc
pusha
nop
sbb
jne
dec
or
inc
jmp
inc
fcoms
enter
insb
test
mov
test
pop
mov
cmp
mov
cmp
xor
or
sbb
xchg
notl
in
push
add
stos
aam
xlat
int3
inc
arpl
cmp
cmp
cmp
in
xchg
xchg
add
lods
loope
fwait
sbb
mov
rorl
pop
cmp
mov
and
jge
out
xchg
iret
adcb
jmp
maskmovq
mull
jb
not
out
mov
and
inc
sbb
push
cwtl
jmp
add
mov
insb
mov
iret
cmpsb
jl
jno
inc
pop
push
mov
mov
cmp
mov
arpl
lock
sub
inc
aam
out
mov
enter
mov
pop
aas
es
clc
and
repz
inc
jmp
sub
repnz
sbb
fcmovnbe
out
cmc
mov
aas
xor
xor
and
fwait
xor
sbb
jp
sbb
cmc
inc
cld
push
popf
push
ljmp
outsb
mov
mov
scas
cmp
push
mov
cmpsl
jnp
and
or
jo
mov
pushf
dec
push
fdivrs
cmp
addl
inc
jl
aam
jg
insb
out
sbb
or
cmp
cmpb
mov
xor
lock
mov
fiadds
xchg
cmpb
sbb
mov
dec
cs
pop
and
adc
mov
cmp
stc
nop
pop
outsl
insb
pop
jg
lcall
mov
lds
xor
push
mov
mov
push
mov
or
mov
mov
xor
add
shll
ret
scas
lret
sbb
sbb
jns
or
pop
push
clc
or
ret
imul
and
pusha
bound
outsb
jae
rcr
add
push
adc
imul
pop
or
subb
les
aam
xchg
sub
push
nop
addr16
std
test
bnd
std
adc
mov
add
sbb
int
jmp
cld
jl
pop
sbb
inc
ljmp
mov
mov
negl
mov
cmp
arpl
mov
jmp
push
jge
pop
push
jmp
mov
pop
cld
aam
dec
rolb
cmp
cmp
subb
cmp
inc
sub
clc
jecxz
cli
mov
mov
pushf
dec
dec
divb
sar
clc
cmp
and
int3
scas
dec
pop
inc
mov
loopne
or
jae
push
mov
arpl
cmp
cwtl
enter
inc
mov
push
aaa
insb
lea
jecxz
cltd
imul
and
push
add
mov
jbe
dec
sub
lret
nop
xlat
adc
mov
stc
xor
sub
push
loope
mov
js
dec
mov
inc
mov
pop
pop
and
test
mov
add
dec
inc
cs
cmp
or
fisttpll
xorb
and
jns
loope
icebp
mov
cmp
mov
jl
lods
dec
imul
jbe
sub
xor
ljmp
les
cmp
add
dec
pop
adc
add
mov
xlat
pop
add
jo
sbb
dec
inc
cs
mov
repnz
pop
pusha
inc
fwait
mov
inc
push
jns
add
push
fsubs
cmp
push
jns
fimuls
enter
sarb
sbb
stc
xor
mov
xchg
pop
push
ja
inc
mov
mov
xorl
xor
je
shll
bound
dec
mov
cmp
fs
test
inc
es
out
popf
and
leave
out
mov
fstpl
fcomps
cmp
aas
mov
dec
test
std
xlat
xchg
bound
fsubl
call
and
xor
fistl
pop
out
inc
cwtl
jp
sbb
pop
lock
jecxz
dec
les
enter
cmp
jl
dec
das
pop
cli
pushf
ret
pop
aad
jnp
out
jno
cmp
scas
xchg
mov
inc
aad
aas
push
sahf
pusha
stc
mov
mov
sarb
call
cmp
dec
nop
dec
pop
repz
in
ja
cmp
sub
iret
popf
xchg
fdivs
fcmovnbe
negb
mov
jo
leave
mov
add
inc
and
sub
mov
push
and
cmpsl
adc
push
and
mov
adc
in
js
cmp
jne
ret
mov
mov
call
incl
add
enter
in
xchg
mov
xchg
pop
pushl
cli
mov
lret
push
rol
scas
push
and
dec
test
pop
jnp
inc
js
mov
sub
loopne
sti
les
cmpsb
in
stos
add
out
or
dec
add
dec
out
and
mov
and
mov
cmp
mov
popl
dec
ds
ds
cli
sahf
cltd
sbb
push
add
mov
int3
cmpsl
fcomps
mov
loope
inc
xor
cmp
mov
cmp
jl
insl
test
lds
cmp
inc
add
movsl
push
push
adc
mov
mov
mov
popa
push
repnz
ss
xor
clc
pop
lock
mov
pop
lret
hlt
rol
sbb
mov
subb
inc
pop
pushf
xor
and
ds
pop
leave
xorb
inc
test
pop
fdivrl
loopne
stc
sub
hlt
dec
loopne
dec
aam
rcll
add
js
das
mov
jmp
sub
mov
addb
cmp
sub
or
sahf
sub
stos
xor
adc
cmp
test
xor
shr
mov
pop
sbb
sub
insb
idiv
and
cmp
and
cmp
or
sar
add
fstp
fists
out
outsl
jl
out
mov
xchg
xor
imul
ret
das
ss
outsl
loopne
cmp
dec
mov
dec
push
mov
lcall
test
enter
jl
js
jp
mov
cmp
fdivrs
jo
inc
addl
mov
bound
mov
mov
dec
push
mov
add
lret
dec
test
jp
ror
das
mov
aaa
sub
mov
in
dec
hlt
insb
jmp
mov
mov
dec
shrb
mov
cmp
stc
mov
cli
mov
repnz
adc
push
aaa
jecxz
mov
fildll
lcall
mov
inc
and
sub
ja
cmp
pop
sub
mov
jns
push
cltd
loop
mov
mov
je
sbb
dec
pop
mov
or
shlb
xchg
inc
mov
push
loopne
pop
cmp
in
push
cltd
pop
or
adc
stc
mov
mov
dec
push
mov
nop
cmpsb
das
sbb
and
jno
cmp
sbb
mov
mov
jne
xchg
mov
inc
mov
pushl
out
xor
loope
mov
arpl
mov
je
pop
xor
int
cmc
jmp
pusha
aad
inc
mov
in
int3
imul
test
jmp
mov
sbb
cmc
or
xor
movb
negb
fnstenv
xchg
inc
data16
push
push
inc
and
repz
fistpll
enter
and
in
mov
sub
cli
shrb
rcll
sub
and
cmpsl
sarl
out
incl
mov
push
sub
cmp
xor
mov
sbb
add
dec
addr16
pop
testb
push
movsl
add
loope
sub
add
and
mov
pop
loope
push
fsubl
mov
mulb
dec
jae
les
aas
sub
add
jns
lds
fldt
cltd
mov
dec
fistps
or
and
mov
mov
pusha
repnz
sbb
fnstcw
xchg
and
cmp
mov
pop
repnz
or
mov
xor
clc
scas
hlt
mov
sub
cmp
adc
cmp
lods
jecxz
pop
fnstcw
std
cmp
sbb
imul
es
jle
cmp
std
cwtl
pop
or
insb
cmp
imul
jno
add
sub
aam
mov
aam
jns
repnz
add
mov
push
mov
or
insl
or
mov
cwtl
addr16
cmp
bound
fists
out
pusha
xor
adc
ffree
pop
mov
jmp
lcall
push
cli
jne
jmp
sbb
fcompl
call
ja
sbb
lret
std
popf
cmp
fnstenv
stc
pop
addr16
iret
loopne
popa
test
shll
mov
jae
mov
je
sub
jmp
mov
arpl
xchg
add
fildll
sbb
cmp
cmpl
xor
sub
es
cmp
shl
pop
cmpb
arpl
std
sar
jne
push
scas
jno
or
inc
imul
ds
xchg
leave
cmpl
adc
jge
fnstenv
jge
js
lret
xor
pop
jmp
xor
mov
movsb
imul
inc
les
fmuls
stos
or
sub
repz
lahf
xchg
fcomps
in
mov
repnz
mov
sbb
and
stc
sbb
xor
into
mov
shl
pmulhw
imul
jge
test
dec
jmp
xorb
and
mov
dec
push
mov
push
dec
cmp
pop
sbb
rorl
sub
jp
sub
inc
inc
push
xchg
xor
cltd
sbb
xor
scas
rcll
and
mov
arpl
cmp
sub
mov
xlat
insl
icebp
pop
xor
push
aad
or
mov
cmp
mov
out
stc
push
sub
sti
jmp
add
sti
adc
mov
sti
mov
xor
je
fstp
adc
leave
mov
xor
xor
mov
call
jg
mov
cmp
fwait
pop
loopne
xchg
push
sbb
mov
fisttpl
shlb
loop
cmp
add
xor
fistpll
push
mov
shll
push
jecxz
out
vmovaps
scas
mov
mov
inc
cmpsb
lcall
in
and
push
add
sbb
jecxz
mov
imul
pop
adc
fildl
clc
and
int
enter
xor
adc
icebp
cli
jb
fcoml
int
xchg
inc
mov
pop
test
lds
and
adcl
inc
add
xchg
inc
xchg
add
lret
jns
jo
data16
dec
jmp
pushf
inc
jne
ds
dec
jo
cmp
enter
nop
insl
add
pop
xor
mov
std
inc
mov
xorb
rcl
xchg
pop
add
out
xor
in
arpl
cmp
pop
sbb
mov
fs
idivl
cltd
imul
fldl
sti
scas
mov
cld
adc
cmp
cltd
mov
dec
lahf
lahf
cmp
mov
cwtl
ret
call
iret
leave
jl
mov
pop
mov
cltd
or
pop
mov
sub
pop
or
push
push
pop
mov
cmp
aam
sub
mov
cmp
sti
pop
pop
daa
mov
cmp
xchg
cld
out
ficoms
sub
rcrb
cmp
dec
cwtl
out
ss
jecxz
cs
jno
ret
xchg
shr
in
cmp
jg
cmpsb
inc
dec
fwait
cli
inc
ja
pop
dec
sub
adc
andl
mov
rolb
loop
scas
int
mov
pop
test
cmc
push
add
pop
mov
mov
stc
pusha
movsb
fildl
xchg
in
mov
fidivs
sbb
cmp
sbb
xor
dec
and
shlb
lcall
jno
ljmp
fcomi
sahf
mov
xlat
fimuls
dec
movsl
loopne
cli
jne
ficompl
fadds
stc
movsl
cmp
shl
pop
mov
leave
mov
inc
add
nop
and
and
orb
lcall
sbb
adc
dec
shr
push
stc
xor
cmp
sbb
mov
dec
jl
mov
mov
dec
enter
jmp
int3
mov
cs
and
push
notl
push
xchg
sbb
inc
sahf
sbb
scas
test
inc
mov
paddusw
int3
fldcw
mov
sub
mov
mov
push
mov
push
shld
jg
cmp
xchg
icebp
push
or
ret
call
mov
out
ds
or
cmp
mull
jp
aas
mov
lret
inc
ret
pop
movsb
push
fdivrs
int
aas
sbb
jns
ret
in
stos
out
js
cmp
or
cmpsb
sbb
and
inc
daa
xor
cmp
xor
jle
test
cs
lods
mov
not
sti
stos
add
ja
cmp
shl
push
pop
shlb
adc
cmp
cmp
inc
jb
add
push
adc
js
les
adc
jbe
cmpsl
pushf
fnstenv
cmp
mov
rol
mov
lahf
cmpb
sub
fdivrs
push
rolb
dec
imul
mov
ljmp
repz
pop
fcoml
cmp
aam
jno
jle
mov
pusha
add
rol
adc
cmpl
fwait
shlb
pop
pop
push
in
std
call
in
das
mov
loopne
nop
dec
mov
cmp
fdivs
lea
mov
xor
outsb
mov
sarb
add
cltd
lea
leave
xchg
int
rolb
mov
sub
and
dec
sbb
xchg
mov
inc
fst
sti
push
jge
sbb
popl
xor
insl
cltd
sbbb
or
fisubrs
adc
out
mov
mov
xchg
mov
rolb
pop
je
stos
fs
xchg
pop
aas
cmpl
cltd
ror
aas
ja
ficomps
dec
dec
mov
push
inc
stc
test
roll
fwait
loope
mov
andl
xchg
and
jb
into
jp
mov
jge
mov
cs
jmp
adc
cli
push
inc
adc
or
aam
jmp
dec
jge
add
fdivrs
shlb
xchg
jl
mov
mov
mov
mov
sub
mov
inc
loop
outsl
push
mov
mov
adc
and
jge
add
clc
scas
nop
call
cmp
bound
pop
pop
fiadds
pop
cmp
add
xchg
mov
aam
sbb
cmp
rcrl
les
xchg
jmp
insl
rcr
loope
add
sti
jo
test
fdivs
mov
adc
xor
mov
roll
lcall
rolb
mov
and
and
or
cmp
sahf
jge
cltd
push
mov
add
cmp
clc
mov
or
adc
xorb
dec
xor
iret
inc
cmp
lds
pushf
rcr
bound
or
jle
dec
sub
add
adc
adc
sbb
popf
bound
es
and
jl
sbb
xchg
pop
mov
mov
stc
inc
xor
sarb
mov
dec
mov
out
cwtl
test
scas
addr16
cltd
inc
mov
mov
push
push
enter
xchg
in
fidivrs
mov
call
nop
sbb
imull
dec
jne
cli
or
out
cld
sti
out
sbb
pop
jo
lock
mov
mov
mov
xor
cmc
jg
xor
loope
fidivrs
inc
mov
cmp
jmp
cmp
insb
sbb
and
popf
sub
sar
push
pop
test
cld
addr16
xchg
aad
inc
ds
addr16
insl
dec
sbb
adc
insl
mov
clc
mov
xchg
inc
shlb
cmpl
pop
mov
js
cmp
ror
jmp
sarb
out
and
inc
lods
sahf
sub
add
xor
jo
sarl
dec
or
stc
insl
mov
sti
mov
mov
std
leave
shll
mov
xorb
or
dec
hlt
dec
sub
outsl
aam
jge
dec
out
ja
mov
mov
fucom
das
scas
es
push
out
mov
sub
cmp
add
inc
and
jecxz
cmp
sti
test
dec
dec
enter
rolb
in
cmpsb
push
cld
sbb
jge
cli
inc
sbb
mov
mov
mov
mov
mov
mov
adc
int3
and
adc
sar
jo
sti
leave
adc
mov
shr
sarb
lds
xchg
jb
jp
xchg
aam
jnp
movsb
mov
bound
mulb
sub
addb
dec
mov
jne
push
jbe
fstpt
xchg
fsubrl
xor
outsl
sub
int
rolb
pop
fnsave
cld
pop
push
inc
or
sub
jp
shl
ret
inc
xchg
xchg
loop
and
insl
push
cltd
stos
test
fnstsw
mov
xchg
lret
mov
mov
jmp
decl
inc
imul
xchg
sbb
stos
lods
ljmp
fcmovnb
popf
push
mov
rorl
xlat
and
repz
sarl
xor
hlt
andl
sbb
xchg
mov
movsl
ret
fdivrp
jge
cmpsl
arpl
mov
push
into
dec
mov
scas
push
xchg
frstor
hlt
arpl
rclb
test
mov
clc
out
or
xchg
aam
cmp
ja
lea
mov
pushf
int
jne
aam
leave
mov
stos
sbb
pop
call
add
or
cwtl
and
fistl
rclb
rcrb
pop
imul
and
subb
dec
inc
cwtl
and
pop
arpl
or
sub
shlb
rcrb
dec
daa
cltd
xchg
stos
repnz
and
inc
add
mov
bound
pop
movups
out
aam
push
cltd
push
adc
hlt
inc
cli
push
fs
sbb
cmp
cwtl
aad
add
jp
clc
inc
xor
adc
push
lcall
mov
ds
lods
fldt
xor
or
loop
xor
xchg
rcrl
adc
lcall
xchg
jne
std
loop
faddl
jbe
mov
sarb
push
push
push
in
sbb
shlb
in
sub
outsl
or
add
pop
test
mov
push
testl
pop
xor
or
es
out
jbe
in
aas
pop
mov
sub
and
arpl
out
pop
ds
pop
pop
xor
mov
inc
shrl
fucomip
adc
add
loopne
xor
insb
fsubrl
pop
pop
sub
jp
sub
mov
cmp
int3
mov
mov
sbb
jo
cmp
ds
fcmovne
leavew
jo
xor
sarb
not
test
sbb
and
lock
inc
mov
inc
push
es
or
loopne
xor
push
adcb
adc
mov
pop
test
aam
sub
repz
scas
dec
jns
mov
mov
add
push
cmp
dec
or
sar
mov
mov
mov
stos
push
stos
xchg
bound
lret
cmp
cmp
cltd
leave
fxch
inc
subb
mov
cmpb
frstor
jns
fstpl
jle
fwait
xor
lret
pop
adc
cs
mov
int
jecxz
daa
mov
mov
xchg
sbbl
jp
adc
cli
sbb
stc
add
ret
adc
int3
loope
loope
outsl
fdivrl
out
es
arpl
pop
sti
fwait
sbb
fidivl
pusha
aas
cmc
jp
lods
popf
cmp
adcb
in
pop
inc
cli
scas
pop
jle
lret
lods
fcmovnu
je
push
mov
xchg
in
ss
mov
stos
and
aaa
adc
push
lods
cmp
adc
aam
mov
shlb
sbb
jge
mov
sub
inc
mov
jle
nop
jmp
push
es
mov
mov
jecxz
add
inc
icebp
and
sub
mov
mov
sti
mov
mov
mov
cld
xchg
push
and
cmp
sub
mov
outsb
fsts
iret
adc
add
lret
adc
mov
fbstp
sbb
mov
insl
cld
movsl
mov
scas
orb
mov
sbb
paddsw
sbb
fiadds
sbb
and
pop
out
xchg
mov
popa
jl
mov
sbb
in
xor
notl
dec
imul
sbb
xorb
add
push
xchg
add
rcr
xor
dec
les
dec
imul
mov
cmp
addl
scas
pop
int
popa
aas
popf
mov
cld
sub
call
mov
cs
cmp
mov
sbb
pop
xorl
ja
pop
mov
push
arpl
sbb
stc
mov
fsubl
mov
jl
lcall
inc
or
sbb
jne
push
sarl
add
inc
xor
xor
es
movsl
cmp
pop
rcrb
shl
popf
inc
sub
out
mov
and
loopne
add
cbtw
and
leave
scas
imul
mov
jne
pop
loope
dec
inc
test
mov
filds
enter
jl
sbb
decl
cmp
xlat
mov
clc
in
ja
stos
mov
mov
jo
dec
arpl
aam
roll
or
push
pop
jg
mov
mov
cmp
movsl
or
loopne
incl
popf
fistl
aaa
ja
xor
popf
xlat
lcall
sub
push
add
mov
push
rcrb
inc
clc
enter
sarb
or
fstpt
and
mov
adc
sub
jae
idivl
pusha
push
in
mov
xlat
sbb
cmp
mov
lods
inc
inc
aad
jge
hlt
fcmovnu
xor
adc
push
fiaddl
mov
mov
dec
fidivrl
fwait
push
sti
std
jmp
inc
ljmp
jp
or
push
loopne
mov
aas
add
xor
cwtl
loopne
inc
sub
jmp
xor
jmp
inc
sub
cmp
pop
sub
xchg
scas
clc
shlb
mov
test
mov
xor
pop
cmp
stc
call
dec
jo
mov
dec
adc
push
call
out
aam
fdiv
adc
popa
mov
inc
xchg
shrl
lea
mulb
shr
icebp
int3
mov
or
pop
incb
cld
pop
inc
aad
aam
je
or
in
pop
jo
mov
std
xor
sti
sbb
mov
pop
push
xor
inc
negl
std
mov
jp
aas
insb
scas
enter
fstpt
dec
testl
hlt
dec
and
push
les
inc
mov
ds
jmp
inc
fidivs
sbb
push
cwtl
sbb
lcall
enter
std
out
xor
fnstsw
jge
les
mov
enter
dec
mov
dec
fmuls
or
cmp
sbb
pop
out
lcall
cli
add
ret
imul
shl
mov
jnp
popf
inc
ret
mov
cmpsl
hlt
dec
sbb
sarb
shll
adc
cmp
sub
fwait
cmp
enter
xchg
mov
cmp
ljmp
add
lcall
sub
push
out
jle
add
lods
mov
mov
je
mov
xchg
fs
cmp
mull
cmp
xchg
repz
idivl
addl
mov
cmc
idivl
out
scas
in
adc
ror
inc
call
shll
add
and
stos
sub
pushf
jecxz
aam
push
xlat
push
push
insb
mov
jnp
push
inc
dec
mov
ffree
testl
xchg
ret
mov
jecxz
nop
testl
cmpsb
pop
fbld
cmp
icebp
add
sub
push
roll
bound
jge
bound
stc
add
out
test
mov
and
enter
lds
xor
push
fdivrs
or
loopne
inc
fcoml
mov
mov
loopne
rcll
ljmp
sti
add
dec
sarl
stos
sbb
or
stc
hlt
cmp
push
and
js
mov
es
mov
popf
xchg
push
out
fs
cmp
call
inc
mov
mov
je
inc
stos
adcl
cld
sbb
and
aaa
shlb
push
xlat
aam
aas
adc
shll
mov
popf
cmp
mov
cmpsl
xor
mov
and
sbb
mov
movsb
fldl
adc
inc
in
and
loope
rcrb
sub
aad
arpl
mov
in
jns
xor
ss
push
pop
mov
popf
xor
mov
cmp
jmp
xor
adc
pop
pop
mov
adc
sar
sbb
adc
fisttps
scas
clc
and
lret
nop
enter
lcallw
lret
push
bound
in
and
pop
cmp
int
inc
pop
jl
inc
pusha
and
lahf
inc
jne
in
call
in
xor
stos
add
inc
ret
repnz
sbb
add
dec
icebp
sbb
sar
dec
fidivrl
xchg
cmp
fcomi
fstpl
mov
pop
adc
fstpt
jo
outsl
cmp
cltd
add
outsl
ret
and
sbb
push
pusha
jae
jns
xor
out
cmc
repz
mov
cmp
mov
mov
jg
das
cmp
dec
xor
cltd
push
daa
mov
mov
repz
xor
mov
pushf
insb
inc
xorl
stc
jg
add
cli
pop
or
add
test
mov
mov
hlt
and
jmp
pop
je
or
enter
pusha
es
fists
inc
push
xchg
mov
shrl
sbb
adc
cmp
hlt
int3
xor
repnz
add
mov
mov
out
sti
fisttpl
icebp
hlt
sub
ds
idivl
in
and
dec
add
and
mov
adc
loope
roll
popa
lcall
fistpll
inc
jp
or
pop
adc
in
negl
lcall
xchg
jbe
popa
xchg
inc
inc
cmp
mov
movsl
jmp
and
in
popa
sub
das
call
lds
xor
push
std
popa
nop
mov
and
push
sbb
dec
cmpw
sub
orb
loopne
out
inc
mov
cmpsb
movsb
gs
fadds
rclb
mov
adc
aad
pop
pushf
ja
insb
mov
lods
sub
pop
or
movsl
lock
loope
out
cmp
mov
mov
iret
mov
pop
mov
cmp
out
in
fsubs
fnstsw
add
ds
jnp
jbe
mov
mov
ljmp
addr16
sahf
les
lcall
shrb
shlb
xchg
call
fxch
mov
movsb
std
cs
dec
in
sbb
ret
arpl
pop
inc
jns
inc
mov
sub
loope
aad
fsubrs
mov
push
es
sub
enter
int3
lcall
and
aad
mov
and
mov
adc
out
jo
cmp
ror
stc
push
hlt
mov
dec
jbe
sbbl
leave
add
fdiv
sbb
jmp
mov
out
fwait
shrl
cmp
into
adc
leave
out
mov
int
pusha
in
sub
add
or
cmp
ret
or
loop
xchg
mov
js
push
sub
sbb
pop
dec
arpl
add
adc
push
dec
mov
inc
or
cltd
fs
add
cmpl
xchg
sub
inc
iret
mov
loope
jmp
shl
lret
mov
sbb
testl
pop
jmp
movsl
mov
in
add
mov
rolb
out
popa
testl
cmpxchg
sbb
cmp
adc
dec
lock
pop
adc
shll
movsl
addr16
dec
sbb
sti
xchg
inc
daa
das
jp
loopne
pop
add
sbb
mov
adc
lahf
sbb
adc
test
lea
mov
es
xchg
push
dec
push
das
mov
jb
fdivrl
test
inc
ja
stc
mov
fidivrl
js
push
loope
sub
les
xor
cwtl
cld
or
and
gs
cvtdq2ps
cmp
cmp
mov
adc
sub
hlt
call
jns
mov
scas
movsb
and
mov
testl
scas
cmp
mov
push
push
and
mov
shl
subb
push
mov
mov
dec
popa
and
mov
mov
pop
inc
neg
mov
call
jge
arpl
in
mov
test
cld
setb
adc
mov
lret
int
xchg
xchg
test
or
scas
mov
cmpsb
scas
mov
test
neg
xchg
mov
jge
insl
adc
push
fimull
cmpsb
add
addl
push
fcompl
enter
adc
test
enter
mov
lods
popf
push
pop
xchg
pop
lds
cmp
enter
mov
add
subb
mov
andl
jp
rolb
push
fdivrl
pop
pop
mov
daa
cmpsl
fisttpll
mov
fadds
jne,pt
imul
daa
lods
push
push
test
push
push
sub
lods
aam
andb
loopne
pop
filds
test
cmp
cmp
test
mov
inc
pop
dec
push
push
jne
mov
ljmp
xor
dec
sbb
dec
add
push
rcll
loope
mov
fildl
pusha
dec
jae
fisubs
lds
enter
sbb
imul
ret
mov
and
xlat
adc
dec
add
mov
pop
mov
rorl
mov
xor
and
pop
fstpl
jne
mov
subb
das
adc
repnz
inc
add
in
jo
jnp
and
loopne
mov
dec
lock
cmp
or
shlb
mov
fcomps
dec
mov
inc
std
jo
add
arpl
push
cmp
sbb
adc
js
lret
inc
aas
inc
stos
mov
sbb
mov
xchg
or
push
inc
clc
sub
out
jp
push
add
call
mov
jle
mov
mov
js
sub
andb
dec
cmp
xchg
dec
and
adc
pop
fistpl
pop
pop
jne
clc
mov
into
popa
push
pop
or
pop
add
out
sub
xchg
loope
xchg
rorb
nop
cmp
or
loope
mov
cmp
xchg
or
cld
xchg
out
push
loope
arpl
cmp
in
mov
lds
shr
shlb
in
fsubs
mov
mov
mov
pop
inc
pop
mov
movsb
push
pop
popa
push
stos
jg
dec
cmp
adc
inc
mov
dec
mov
cmpsb
mov
inc
inc
das
xchg
outsb
and
inc
jg
mov
mov
arpl
and
pop
loopne
mov
loope
shlb
subb
lds
sub
and
cwtl
adc
loop
decb
imul
insb
xchg
addr16
test
rolb
dec
scas
ss
sbb
and
ret
sbb
cwtl
sub
and
cmp
bound
pop
pop
xor
lret
ret
loope
sbb
stos
jb
pop
enter
xchg
xchg
mov
movsb
pop
xlat
xchg
xor
loope
and
cmp
lods
lret
mov
mov
in
addr16
add
les
ljmp
mov
pop
clc
popf
cld
cmpsl
dec
cmp
pop
iret
pop
addr16
jp
jmp
addr16
push
jns
ficompl
cmp
mov
xchg
pop
and
sub
lea
roll
lds
jecxz
push
jne
dec
jo
insb
lahf
divl
pop
mov
test
scas
lcall
enter
es
add
adc
hlt
shll
inc
rorb
jmp
cmp
stc
cmp
out
sbb
notl
xchg
add
pop
sub
insl
repnz
jecxz
xlat
mov
into
movsl
test
icebp
xchg
mov
xchg
fimull
test
sbb
mov
cmp
sti
jnp
out
mov
loop
pushf
or
jb
ficoml
int3
cmc
shrl
jno
movsb
dec
cmp
or
and
and
addr16
and
lcall
adc
movsb
popa
jo
mov
add
je
les
inc
ret
movsb
pop
les
shlb
cwtl
inc
sbb
sti
sbb
cmp
sbb
jno
cmp
pop
js
lods
and
inc
xchg
mov
out
jecxz
aam
mov
aad
lods
pusha
out
push
mov
lcall
inc
jb
mov
mov
inc
leave
lods
jg
pop
daa
xchg
mov
sbb
outsl
loope
popf
fstl
adc
pop
mov
inc
xlat
inc
lret
add
mov
jbe
loope
ja
dec
fisttpl
popa
xorb
jmp
sbb
and
mov
sub
adc
call
adc
shlb
and
jl
xlat
sbb
fisttpll
sbb
fcmovu
es
je
jge
mov
lahf
sbb
andb
push
add
aas
icebp
addr16
popf
es
inc
in
mov
lock
add
jp
into
icebp
cld
xchg
lock
fmul
xchg
push
ds
bound
mov
or
jg
mov
pop
mov
je
icebp
mov
jl
jmp
push
cmpl
cli
fcompl
mov
dec
fistpl
mov
jne
pop
pop
cmpsl
sub
mov
push
arpl
push
or
scas
call
addr16
mov
jno
outsl
insb
xchg
mov
cmp
xor
add
mov
xchg
mov
mov
shll
mov
adc
lods
jo
mov
push
adc
cmp
insb
dec
fldt
cwtl
mov
and
cmp
movsb
aad
inc
int
inc
pop
aam
adc
mov
stos
pop
mov
and
sub
cmp
test
xor
lods
fisubrl
stc
cmpsl
add
sbb
das
mov
sub
mov
xor
mov
xor
scas
lods
cmc
outsl
mov
int3
mov
idiv
shl
daa
imul
adc
cltd
icebp
lea
or
mov
pop
push
jp
scas
pop
pop
add
mov
data16
repnz
or
inc
or
cli
mov
ret
xorb
lods
fisttpll
jge
aad
inc
cmp
cmpsb
nop
push
loopne
cmp
add
pop
in
or
stc
xchg
inc
cmp
push
jge
mov
fcmovnbe
mov
jae
push
pushf
cltd
imul
fdivrs
mov
push
pop
mov
ret
in
sub
push
adc
push
or
xchg
and
lret
testl
cmp
cmp
cmc
enter
repnz
cmpsl
xchg
nop
xor
arpl
sbb
fwait
mov
jp
inc
fdivrs
fisubrl
xor
clc
pop
xrelease
shll
lahf
aaa
lods
jmp
add
mov
push
pop
rorl
mov
and
mov
lods
leave
sub
lods
add
lds
push
fstl
fiaddl
cmp
mov
into
jle
mov
pop
mov
das
stc
iret
mov
jp
mov
arpl
subl
mov
bound
adc
insl
int3
movsl
shrl
lret
frstor
pushf
mov
repz
and
push
xor
mov
scas
ljmp
inc
mov
in
xor
es
clc
clc
inc
jbe
mov
xor
cmp
rcrb
push
mov
testl
insl
inc
mov
mov
imul
sbb
mov
insl
mov
mull
popf
or
shrl
lahf
loopne
add
loopne
add
into
and
repz
jmp
mov
xchg
movsb
xchg
jmp
mov
loope
mov
pusha
ljmp
jle
and
mov
call
movl
int3
jmp
pop
pop
fcom
xchg
mov
sbb
jbe
jge
add
into
inc
bound
in
add
mov
mov
hlt
negl
cmc
arpl
scas
inc
cs
push
sub
inc
push
enter
dec
mov
mov
add
mov
dec
mov
stos
push
cmp
ret
pop
or
fiadds
in
sbb
mov
leave
cmp
xor
jb
jmp
pop
fisubrs
xor
stc
cmp
pushf
mov
sti
lods
dec
xchg
sub
fistpll
test
push
jno
cmp
cmp
sub
push
arpl
mov
loopne
leave
aaa
sbb
in
and
insb
add
mov
dec
xor
in
xor
std
enter
dec
and
stos
jmp
loop
pushf
pop
sar
jno
or
repz
xor
ss
shr
mov
and
mov
inc
mov
cs
or
add
fisubl
mov
fdivl
or
js
sar
cmp
cmp
or
fdiv
dec
or
shr
sbb
outsb
fbstp
clc
jne
sub
outsl
pop
xor
call
gs
andb
mov
pusha
mov
enter
lds
mov
inc
lret
push
in
mov
shll
lret
std
fdiv
pop
imul
popa
mov
xor
sub
mov
push
popa
mov
cmp
test
stos
call
adc
ret
insb
test
pop
icebp
std
push
sub
js
xchg
jp
test
jge
push
sub
bound
test
dec
pop
push
sbb
ds
lret
xchg
add
out
push
and
sarl
jge
push
or
xchg
mov
mov
mov
push
out
xchg
dec
jmp
pop
add
xor
icebp
add
xchg
mov
loop
subl
insl
xor
mov
push
lret
xor
inc
dec
es
xor
mov
and
push
imul
das
pop
mov
add
push
in
add
stos
mov
repz
xor
xchg
outsl
pop
sub
jge
pop
sahf
pushf
or
mov
int3
push
in
sub
cltd
mov
jb
cmc
or
int3
push
adc
add
cmc
stos
outsl
bound
cmp
lret
cmp
sti
insb
and
or
add
pop
imul
xchg
jb
push
or
jno
mov
mov
mov
jecxz
xor
mov
jmp
in
dec
add
stos
inc
inc
xchg
std
mov
cwtl
std
adc
pop
pop
xchg
xor
arpl
daa
dec
stos
or
insb
mov
or
test
dec
cmp
inc
adc
call
fsubs
mov
imul
movsb
divl
mov
out
fs
mov
test
imul
frstor
cmc
in
in
arpl
lcall
imul
adc
fldenv
out
sub
test
out
hlt
int
adc
xchg
and
pop
notb
or
pop
arpl
mov
loope
mov
mov
pop
mov
sub
pop
arpl
ja
stc
lods
jp
and
imul
cmpsl
inc
mov
pop
cmp
mov
testl
call
cmp
pop
retw
stc
movsl
push
scas
outsl
mov
pusha
cmpsb
js
icebp
enter
mov
mov
sbb
add
iret
cmpsl
xchg
rorl
adc
adc
loope
loope
loopne
mov
xor
lahf
xor
jecxz
enter
outsb
loopne
rcrl
std
xchg
loop
fidivrl
xorb
mov
dec
inc
add
imul
pop
xchg
fsubrp
mov
adc
loopne
aaa
cmp
adcb
enter
data16
add
xor
pop
and
sar
dec
out
pushf
enter
inc
cmpsb
jge
cmp
adc
sub
push
pop
cltd
jg
inc
add
scas
sbb
cmp
popf
cmp
fcom
ds
sub
stos
cs
shll
dec
cmc
mov
fcmovu
pushf
out
sti
jo
pop
mov
and
or
outsl
sti
sub
int3
mov
mov
lods
inc
inc
mov
fcoms
cmpsl
cmp
add
adc
adcb
les
mov
mov
movsl
xlat
push
inc
fiadds
mov
cmp
call
shlb
stos
xbegin
cmp
call
mov
lock
cmpb
pop
dec
add
xor
mov
mov
or
cmp
leave
sub
sbb
outsl
jge
test
sti
fwait
test
test
cmp
mov
pop
lock
mov
mov
push
call
hlt
cwtl
cmp
aaa
adc
dec
icebp
fstps
xchg
out
dec
mov
inc
mov
sbb
jo
xchg
test
inc
ja
sbb
idiv
adc
mov
insb
out
jae
popa
jmp
stos
push
cmp
mov
sub
and
xchg
jecxz
jnp
mov
jo
mov
ds
enter
loopne
clc
cmp
enter
das
dec
mov
adc
xlat
pop
mov
mov
jge
sbb
jbe
outsl
divl
shlb
loop
int
fsubs
mov
mov
mov
lods
inc
or
dec
data16
insl
loopne
pusha
push
fadds
popa
mov
inc
fwait
loope
bound
sub
push
pushf
add
loopne
dec
fisttpl
xlat
leave
add
sub
sub
inc
sub
sub
cltd
iret
insl
mov
sub
mov
cwtl
mov
inc
mov
leave
jge
pushf
xor
push
push
pushf
mov
gs
mov
imul
jbe
fildll
andl
mov
add
xchg
add
repz
mov
repnz
xor
cmpsl
loopne
nop
mov
jns
sub
mov
sbb
mov
call
pusha
ja
lea
xchg
fisubrs
dec
mov
pushf
imul
lahf
sub
fiadds
lods
inc
jb
inc
xlat
inc
jecxz
testl
mov
pop
pop
enter
push
pop
xlat
call
loopne
jmp
fdivrs
fldcw
sbb
enter
fcom
and
mov
mov
int3
inc
scas
adc
mov
lods
gs
and
stos
leave
pop
dec
cmp
cld
cmpsl
sbb
pop
adc
ficompl
enter
cmp
stc
loope
cmp
mov
xor
cwtl
add
mov
xchg
push
cli
popa
mov
int
push
inc
ss
add
fimull
and
daa
lret
popf
cmpsb
inc
mov
fbstp
cli
xchg
dec
sbb
add
iret
in
call
xlat
icebp
adc
clc
lea
pop
ja
adc
mov
sbb
shr
mov
dec
adc
iret
test
loope
and
push
addr16
fbstp
hlt
in
std
mov
call
loop
icebp
mov
xlat
gs
rep
sbb
adc
popa
mov
addr16
sbb
rclb
mov
pop
lcall
dec
cli
xchg
js
mov
mov
or
or
xchg
xchg
mov
adc
stc
sbb
pop
jl
rcrb
call
or
rolb
mov
mov
pop
mov
cli
pop
adc
push
jb
xor
sbb
cld
je
xlat
adc
insb
outsl
sub
test
jbe
xor
mov
in
loopne
jp
push
out
cwtl
fs
xor
mov
fiaddl
mov
cltd
cmpsl
hlt
mov
mov
dec
xor
dec
sarb
dec
xchg
adc
stc
enter
test
sub
js
sbb
stc
cli
jl
out
cmp
shlb
mov
stos
test
sub
insl
rclb
aam
xlat
pop
fisubl
mov
movsl
cwtl
pop
iret
aaa
arpl
in
push
outsl
push
out
dec
pushf
shlb
jmp
xor
fsub
lock
test
jno
jle
leave
lcall
sbb
xchg
ret
dec
cmp
call
push
pusha
xchg
push
popa
mov
imulb
sbb
leave
cmp
shll
fcomps
repnz
cmp
pop
clc
fnstenv
inc
xchg
add
clc
mov
mov
xchg
aas
cmp
lods
rcl
shl
shl
nop
aas
imul
iret
aaa
mov
mov
cmpsl
ret
sbb
nop
mov
mov
jl
xchg
filds
push
sbbb
and
pusha
pop
mov
jae
dec
and
cli
lahf
xor
cmp
stc
test
mov
mul
jbe
xchg
inc
and
into
stc
negb
mov
in
ret
cmpsb
cltd
lea
add
ret
xlat
arpl
mov
mov
jns
daa
sub
jle
pop
mov
std
fsubs
loope
je
mov
sbb
pop
pop
pop
mov
sbb
neg
lahf
cmp
add
test
sub
mov
dec
fidivrs
loopne
and
fs
push
cmpsl
ds
mov
or
sub
sub
inc
jno
mul
fisttpl
bound
push
call
imul
mov
adc
daa
jns
fbstp
inc
push
xchg
xbegin
adc
stos
jns
cmp
addr16
std
int
sbb
fldl
cmp
lcall
fs
fnsave
cmp
fisubl
pusha
jns,pt
mov
loop
mov
loop
cs
cli
mov
lods
jmp
xor
fdivrl
xor
cmp
mov
mov
pushl
loope
ss
dec
mov
in
dec
mov
cmp
cmp
cmp
ja
xor
imul
or
enter
repz
push
test
cmp
cmp
push
pop
test
outsb
adc
test
int
loopne
cltd
mov
and
cmp
mov
jg
movsb
push
mov
pop
lods
cmp
mov
aas
inc
sub
add
adc
cmp
pop
dec
and
jnp
sti
push
rolb
and
cld
jnp,pn
sbbl
std
inc
pop
and
sub
cli
push
out
push
lock
incl
jge
mov
enter
cmc
dec
xchg
sbb
mov
jne
mov
test
pop
cs
mov
mov
icebp
test
iret
cltd
push
shrb
adc
push
xchg
jbe
mov
mov
dec
inc
cmp
loop,pt
sub
lcall
add
outsl
arpl
fcmovnu
pushf
or
je
adc
test
push
xchg
or
shrl
xor
mov
cmp
sub
push
sbb
cmp
test
adc
imul
incl
dec
mov
mov
push
call
insb
fiaddl
or
or
inc
aas
mov
and
inc
andb
push
nop
rcrl
adc
mov
cltd
bound
clc
xchg
push
adc
add
in
cli
dec
jge
call
sti
dec
mov
cmp
pop
es
and
mov
pop
jp
ja
pop
ret
pop
insl
les
jo
test
insb
std
lcall
testb
js
cmp
sbb
adc
jmp
es
or
mov
in
std
sbb
inc
pop
push
push
or
mov
sbb
rcrl
sarl
sbb
or
subl
mov
and
out
std
sbb
or
add
push
add
mov
fildll
mov
dec
mov
pop
icebp
stc
addr16
lods
jecxz
rol
dec
cmp
inc
popa
jnp
cld
lock
cld
mov
test
push
jno
call
add
mov
sbb
inc
add
mov
test
cltd
and
mov
ljmp
ret
lret
inc
pop
lods
mov
fdiv
jle
inc
xor
repnz
shrl
dec
cmpb
sbb
push
int3
dec
popa
es
cltd
mov
rcrl
jl
fsubs
mov
inc
xlat
lahf
jo
mov
or
hlt
repnz
rorl
sbb
movsl
in
fwait
out
sbb
lcall
test
adc
movsb
sbb
mov
xchg
dec
testl
inc
mov
scas
call
cmp
inc
push
lods
stc
ret
cmpsl
hlt
daa
inc
xlat
pop
adc
mov
cmp
or
adc
push
or
mov
std
imul
mov
arpl
or
loope
loope
divl
mov
lods
shrb
adc
fwait
mov
das
dec
pop
adcb
lock
mov
lret
cli
out
jno
add
roll
in
fs
movsl
mov
mov
dec
xchg
stc
jns
faddl
aaa
jmp
dec
aad
cs
cmp
rcrb
enter
lcall
subb
cmp
or
xchg
jne
pusha
or
enter
mov
mov
push
sahf
mov
cmp
jmp
in
cmp
mov
je
dec
lds
shll
popa
aaa
les
mov
lahf
ret
and
int
push
dec
movb
cmp
dec
movsb
mov
es
fsubrs
mov
and
pop
pop
sbb
std
mov
mov
xchg
push
cmpb
mov
es
push
test
mov
push
data16
in
mov
loope
mov
mov
into
cmp
arpl
ss
js
xlat
or
sub
sbb
mov
ficompl
std
mov
ds
cmp
in
shrl
push
jbe,pn
ss
nop
rcrb
nop
decl
push
pusha
mov
mov
mov
mov
insl
xchg
mov
pushf
inc
cmp
mov
xor
mov
xchg
push
mov
pop
shl
cmp
mov
lock
ficompl
fsubs
lods
or
cmp
sub
sbb
inc
lea
icebp
adc
jnp
js
and
sti
jl
lret
fsubl
sbb
iret
div
or
and
nop
icebp
es
mov
add
add
cmp
adc
je
dec
insl
mov
negl
add
into
stc
cmp
cmp
loopne
mov
jno
pop
xor
out
push
adc
cmp
js
jnp
sbb
adc
cmp
leave
and
and
xchg
arpl
sub
loopne
leave
sub
fcomp
into
add
push
jmp
insb
mov
and
dec
add
movl
sar
aam
jmp
mov
cld
bound
push
and
pop
iret
rcrl
push
mov
mov
and
pop
jo
push
loopne
jmp
add
arpl
pop
mov
sbb
inc
iret
sbb
xchg
dec
fwait
inc
mov
sbb
sarb
add
daa
daa
push
sbb
enter
es
ds
lret
sarl
sbb
push
pop
dec
mov
cs
sbb
sti
jno
cmpl
rcr
add
cltd
sub
leave
jp
pop
adc
jnp
mov
pop
push
jae
pop
add
cmp
addr16
inc
cmp
shl
and
pusha
iret
out
mov
mov
sub
jo
pop
fsub
addr16
scas
sub
movsb
or
jecxz
cltd
adc
arpl
ret
enter
sub
ret
mov
stos
je
mov
cmp
inc
mov
push
es
mov
enter
fcmovnu
pusha
cmp
jecxz
pop
mov
scas
into
aam
xchg
call
pop
nop
pop
lcall
movsl
out
mov
mov
sti
clc
cmp
es
bound
fildll
addb
sub
ja
inc
push
sbb
in
jnp
dec
mov
sub
stos
mov
dec
cmp
and
xor
test
sub
jp
or
loop
insl
xlat
inc
daa
rclb
sbb
mov
sub
pop
xorl
xchg
clc
sub
pop
stos
jp
xor
mov
stos
ret
ljmp
fidivrs
mov
jno
cmp
lods
mov
icebp
pop
mov
mov
std
push
adc
fidivs
pop
into
mov
mov
adc
cmp
mov
cmpsl
inc
mov
sbb
loope
xor
mov
jecxz
and
scas
ja
bound
sahf
jmp
bound
cld
add
inc
sti
rorb
add
jnp
bound
jmp
mov
sbb
mov
jp
mov
cmp
je
aas
sbb
mov
mov
mov
hlt
or
mov
inc
push
dec
cmp
and
add
cmpsl
jb
hlt
xchg
mov
mov
mov
and
and
fnstcw
cld
subb
ljmp
lock
push
shll
and
adc
adc
arpl
xor
lods
iret
pop
inc
jne
aas
push
or
mov
jge
add
jg
mov
add
pop
xchg
and
xchg
out
pop
jns
cli
or
insl
pop
mov
stos
or
loopne
nop
sbb
pop
mov
notl
aad
mov
out
popa
dec
nop
mov
sti
frstor
push
cmpl
pop
or
cmp
push
das
pop
dec
call
push
jg
dec
jb
mov
sub
sbb
mov
repnz
out
cmp
repnz
or
adc
mov
mov
shl
ret
mov
cmpl
mov
out
xorb
mov
and
iret
push
mull
shlb
jbe
fcmove
cmpb
jne
negb
lods
jo
and
dec
and
aam
out
enter
lret
pop
cld
loope
cltd
sbbb
icebp
jmp
push
hlt
je
arpl
fistps
les
mov
les
icebp
add
pushf
dec
loop
mov
outsl
dec
inc
mov
aaa
popa
repnz
fs
mov
dec
inc
aas
mov
xor
mov
fxch
mov
stos
mov
loop
mov
xchg
cmp
xchg
inc
pop
mull
dec
inc
mov
lret
mov
mov
mov
fidivrl
in
mov
mov
jmp
inc
stc
mov
inc
std
popf
lcall
jns
inc
shlb
fisubl
in
stc
dec
jo
cmp
and
push
stos
mov
sub
clc
dec
push
mov
mov
jmp
push
out
adcb
arpl
mov
push
shrb
jae
push
js
cmpsl
sub
jg
movsb
cmp
pop
xor
loop
jg
ljmp
mov
dec
jo
popf
cwtl
fs
dec
testl
decl
mov
dec
mov
ret
movsb
sub
mov
loope
cwtl
mov
test
mov
cld
jb
push
shrb
out
xor
xchg
jmp
ficompl
out
mov
pop
pop
fnstsw
pop
inc
xor
movsl
jae
sub
push
mov
sarb
dec
and
pop
rclb
or
dec
loop
mov
inc
cli
iret
and
jl
sub
jae
adc
mov
mov
iret
daa
adc
hlt
cli
inc
js
add
jge
mov
mov
mov
fimull
mov
inc
out
fwait
add
in
jne
jo
loope
push
xor
dec
arpl
jns
mov
push
lret
cmp
in
lods
inc
mov
push
mov
cmpb
cli
push
xlat
xchg
mov
popf
sbbb
aad
mov
pop
rcrl
jne
push
loope
imul
xchg
mov
int
sub
cmp
sub
fisubs
pop
jmp
inc
dec
mov
inc
mov
pop
mov
hlt
imul
pusha
scas
movsb
dec
insl
jnp
lret
scas
out
popa
mov
test
jp
test
out
lods
mov
ja
pop
cmpb
push
sbb
fisubrs
sahf
enter
add
jmp
test
sbb
les
mov
cmp
jnp
lret
call
fidivrl
fsubp
sarb
sti
or
cmp
mov
inc
mov
enter
dec
aam
inc
data16
pushf
cmp
test
mov
sbb
xor
or
or
xor
dec
cmpsb
das
dec
stc
add
icebp
flds
dec
dec
cmpb
jno
stos
push
sbb
dec
es
cmp
in
stc
inc
add
popa
push
cmp
inc
mov
enter
in
daa
cmpsb
and
mov
mov
cltd
mov
cmp
push
ds
test
cmp
dec
mov
sarb
pop
jb
and
jb
mov
mov
movsl
dec
pushf
sub
leave
pop
xor
sbb
pop
cltd
dec
fwait
stc
jp
leave
dec
cmp
mov
pusha
lock
iret
out
cld
outsl
hlt
test
test
jp
es
pushf
fdivrs
adc
mov
push
hlt
adc
scas
cmp
add
aas
add
cmp
cwtl
stos
pushaw
inc
dec
fnstenv
add
push
jge
pop
int3
mov
loop
cmp
xor
stc
xchg
clc
jmp
pop
movsl
xlat
dec
and
jo
lods
sti
shlb
es
sbb
sbbb
jg
dec
loopne
push
add
or
and
jmp
pop
mov
inc
xor
mov
dec
xor
mov
shll
pop
xchg
notb
mov
lods
and
cwtl
pop
push
in
fsub
inc
ret
xor
in
js
pop
mov
and
jle
mov
xchg
aam
jg
mov
mov
movsb
mov
repz
dec
nop
xchg
cmpsl
xor
sbb
push
mov
iret
inc
mov
dec
sub
xchg
sub
jp
sbb
xchg
shll
mov
cmpsl
insl
sub
bound
nop
xchg
jp
jns
cmp
jp
adc
icebp
sbb
xchg
loope
push
add
sub
adc
mov
ficomps
cmp
add
daa
sbb
xchg
mov
mov
test
sbb
sbbb
pop
dec
xchg
jp
adc
test
sub
jo
repnz
sub
lret
fdivrl
and
lea
mov
xchg
imul
rcrb
inc
adc
ds
out
mov
mov
mov
loope,pn
adc
sbb
cltd
sbb
sbb
adc
push
fdiv
imul
rcl
inc
mov
mov
cld
mov
xlat
das
lcall
inc
cmc
mov
sbb
cmc
rolb
nop
dec
aas
xchg
daa
sub
cwtl
mov
adc
push
mov
xchg
ret
mov
lock
enter
xchg
cmp
enter
sahf
imul
push
imul
xchg
imul
mov
lods
cmc
sti
test
cwtl
inc
push
ror
mov
adc
iret
and
iret
mov
inc
cmp
xchg
pop
sbb
mov
test
insb
mov
cmp
hlt
ljmp
iret
sar
and
sub
loopne,pn
mov
in
mov
xchg
mov
iret
mov
pop
jnp
mov
mov
sbb
ds
mov
cmc
cmp
int
sbb
mov
lcall
adc
xchg
enter
and
fisttps
mov
mov
and
xor
insb
dec
fistpll
in
nop
outsb
xchg
stc
xchg
sub
pop
jmp
inc
and
punpcklbw
sub
inc
mov
mov
jmp
xchg
out
in
mov
loop
andl
and
inc
idivl
xchg
cmp
adc
addr16
and
xchg
je
cmp
push
mov
xor
xor
das
fwait
mov
adc
mov
lret
add
add
jg
push
pop
xchg
inc
xchg
in
cmpsl
sub
je
rcr
in
lahf
add
dec
lods
jle
std
mov
mov
cwtl
sahf
adc
push
sub
daa
add
cmp
xor
shrl
mov
sub
adc
cmp
sub
push
dec
shrb
cli
push
cmp
pusha
push
xchg
loope
shrl
insb
hlt
jnp
and
shl
roll
adc
xor
push
cli
mov
mov
jmp
or
pushl
mov
sbb
add
nop
jl
sub
fldcw
cmp
testl
mov
sbb
push
pop
lock
sub
cwtl
call
mov
outsl
or
jp
mov
jl
sbbb
sbb
fdivp
xchg
and
aam
cmp
in
inc
mov
jmp
fldcw
mov
rorb
or
sbb
dec
sbb
push
mov
shll
test
mov
ret
dec
inc
lods
xor
jg
sbb
lods
sbb
push
xchg
xor
and
das
mov
mov
outsb
ds
mov
enter
xchg
push
out
std
movsl
mov
cmp
sub
inc
cmp
cmp
lock
mov
int3
mov
sbb
pop
mov
cwtl
call
mov
push
fwait
adc
add
cmp
xchg
fidivl
mov
pop
add
loopne
add
inc
movsl
das
pop
outsl
sub
lcall
adc
js
idivb
mov
jne
mov
jnp
out
xchg
inc
cs
sbb
negb
test
jnp
std
pop
xchg
fwait
mov
mov
shlb
stc
inc
push
xchg
push
or
hlt
or
push
push
daa
pop
fcompl
test
mov
aad
xchg
cmp
cltd
xor
mov
rcrb
hlt
mov
adc
inc
insl
or
push
stc
lret
sti
push
pop
cmp
and
fwait
jle
sub
jmp
fwait
inc
mov
stc
mov
adc
fisubrs
in
pusha
loopne
and
inc
bound
jp
pop
or
mov
loopne
push
sbbb
faddl
aam
cli
nop
js
mov
sbb
sub
fisttps
mov
clc
std
mov
mov
push
lock
or
mov
inc
shl
push
inc
cmc
push
sti
mov
jmp
mov
mov
inc
in
push
pushf
jp
mov
ret
xchg
xor
jmp
in
insl
inc
cmp
loope
jle
cmp
xchg
sub
testl
xchg
int
dec
decb
dec
lret
popa
jge
fnstcw
inc
sub
dec
sti
filds
fidivrl
xchg
stos
and
sub
push
inc
mov
je
ja
sub
lret
add
rolb
daa
or
or
pop
fcompl
sbbl
inc
mov
lret
fnstcw
jl
dec
pop
mov
add
daa
aaa
mov
mul
add
mov
mov
jno
mov
mov
inc
cmp
mov
loop
ja
add
sub
cmp
adc
mov
push
cmp
arpl
stos
push
addr16
mov
pop
sbb
xchg
add
cwtl
and
addb
adc
add
test
and
mov
push
cmp
jo
add
fnstenv
enter
adc
ss
mov
mov
xchg
adc
imul
add
in
mov
mov
pop
nop
imull
incl
and
sbb
test
push
xchg
mov
ja
out
mov
jecxz
das
out
adc
stos
out
mov
aam
shrb
pop
ja
popf
scas
push
sbb
mov
or
mov
mov
xlat
and
idivb
lcall
sbb
arpl
mov
mov
bound
xor
lods
inc
jns
or
in
into
cmpsb
fistpl
popf
dec
je
ret
int
and
test
lahf
bound
std
into
rol
arpl
les
add
and
jo
arpl
xchg
call
sti
js
stos
or
adc
pop
inc
mov
sub
sbb
stos
gs
dec
enter
orb
pop
pop
sbb
xor
xchg
jmp
jp
orl
xor
mov
sbb
sub
daa
test
loope
in
scas
pop
cmp
lods
inc
cmc
jns
dec
ds
pop
push
sub
cld
lock
pop
jb
enter
xchg
mov
js
dec
mov
mov
push
enter
loope
enter
call
xor
dec
add
fnstenv
hlt
mov
icebp
inc
lahf
mov
mov
cli
lods
cmpsl
mov
stc
std
iret
cmp
jo
nop
xchg
or
in
inc
inc
fimuls
mov
dec
lcall
dec
cmp
and
lods
cwtl
inc
push
dec
cwtl
lods
cmp
or
inc
nopl
dec
inc
sub
subb
xorl
mov
pop
mov
scas
bound
sahf
jecxz
aas
add
pop
mov
mov
shll
mov
movsb
inc
mov
outsb
mov
in
loope
mov
ret
mov
addb
imulb
inc
aad
imul
cmp
dec
sub
cmp
inc
mov
push
jns
es
pushl
inc
mov
out
out
std
idivl
aas
inc
mov
addr16
das
fnstsw
mov
dec
sti
js
mov
cmpl
mov
arpl
lods
cmp
cmp
jp
call
js
in
loop
inc
adc
lcall
lcall
sub
out
xchg
mov
mov
dec
outsl
stc
mov
cmpsl
xchg
mov
iret
in
lret
stc
mov
mov
clc
jo
cmp
sti
pop
addr16
add
sbb
and
sub
mov
or
dec
mov
mov
sbb
inc
mull
xchg
add
das
mov
mov
add
imul
imul
sbb
cmpsb
rorl
jne
stos
mov
dec
ja
jnp
push
enter
test
loope
add
pop
shlb
rclb
pop
negl
lea
xchg
cmp
arpl
sub
stos
stos
dec
ret
shrl
push
fst
or
inc
cmp
shrl
push
in
sub
rcrb
jne
mov
or
fcomps
mov
jmp
pop
stc
inc
sbb
cmp
insb
push
stc
jmp
stos
inc
sbb
ljmp
ds
in
push
cmc
or
sbb
in
cmpsb
scas
xchg
dec
aad
or
adc
mov
pop
in
jl
cmc
movsl
mov
dec
and
mov
sbb
subb
shrb
mov
sbb
shrb
jge
mov
lock
xor
or
test
jbe
mov
xor
es
xor
sub
cmc
mov
mull
fbld
filds
xor
jae
xor
daa
sub
fidivrl
in
jg
or
in
sbb
sahf
sbb
mov
pop
sbb
push
jle
jmp
mov
fiaddl
xchg
jmp
sub
mov
popf
push
imul
in
aam
test
xlat
iret
adc
lret
mov
outsb
js
test
mov
mov
adc
stos
frstor
aad
mov
push
or
mov
cli
pop
push
mov
push
lods
jmp
cvtps2pd
aam
out
adc
xor
test
inc
repz
add
cs
fdivl
xlat
ja
jl
shll
mov
bsr
fists
adc
mov
or
sub
cli
out
daa
or
sub
mov
lds
xor
clc
jne
stos
push
call
sub
sbb
scas
addr16
test
popa
ja
mov
push
cmp
push
pop
inc
pop
neg
xorb
mov
aaa
stc
add
or
xor
in
fidivrl
scas
cmp
xchg
fisttpl
adc
pop
add
enter
mov
pop
adc
mov
out
sbb
mov
iret
pop
daa
jl
xor
pop
jbe
mov
push
loope
jbe
addr16
inc
mov
dec
faddp
sbb
into
in
dec
lret
cli
ror
mov
in
cmp
ja
fmul
mov
lret
adc
int3
mov
cmp
mov
mov
jmp
jbe
ficompl
movsb
inc
and
subl
adc
xchg
addr16
ss
and
sbb
out
imul
aad
hlt
xor
mov
call
mov
xchg
pop
jp
lods
mov
clc
adc
inc
rep
in
in
ret
adc
mov
enter
push
mov
in
xor
inc
and
xor
insl
sub
adcb
adc
sub
scas
rcl
scas
mov
lcall
shlb
setp
repz
sub
jge
xor
sub
popf
lock
in
sti
mov
es
in
repz
test
loopne
jns
sbb
mov
stos
mov
mov
lods
mov
jge
xorl
jmp
jmp
cmc
dec
xor
or
stos
mov
loop
xchg
inc
dec
sub
loopne
cwtl
xchg
jmp
dec
outsl
add
sub
xlat
fstpl
leave
xor
jmp
xor
inc
sbb
push
sti
cmp
dec
inc
fsubrl
dec
test
jne
xor
js
mov
cltd
lds
mov
add
mov
mov
shlb
cmp
enter
mov
sbb
pop
mov
cmp
push
pop
jns
movsb
leave
pop
fistl
in
cmp
aas
mov
inc
cltd
dec
mov
rorb
push
mov
dec
jecxz,pt
sub
mov
mov
loope
mov
mov
ficomps
pop
imul
and
imul
xchg
cmp
fdivrs
mov
pop
lods
xchg
and
int3
jmp
scas
mov
scas
pusha
cmpb
in
movsl
mov
dec
aam
shll
mov
stc
or
movsb
and
enter
lretw
cmp
pop
inc
stc
cld
inc
jle
test
mov
xor
jns
test
and
push
aas
sub
push
cmpsb
sub
cmp
push
or
xchg
or
hlt
mov
cld
aam
and
jle
mov
mov
cmp
inc
testb
pop
fisubrl
cmc
fldenv
les
mov
or
test
and
ffree
pop
mov
and
out
movsb
subl
arpl
jne
andb
cmp
insl
cmp
mov
add
jmp
xlat
test
cmp
orb
jae
sbb
loopne,pt
mov
cmp
dec
mov
mov
movsb
sub
or
stos
add
xlat
arpl
shld
mov
sub
mov
add
dec
les
sub
mov
push
aaa
xchg
and
rcrb
fwait
mov
or
nop
mov
jo
mov
pop
lea
sub
adc
in
mull
xchg
lods
and
jns
int
dec
cmp
add
cli
dec
jp
jp
cmp
mov
cmp
std
jge,pn
xchg
add
add
jge
sahf
mov
jnp
xchg
adc
xchg
clc
mov
mov
dec
imul
imul
inc
outsb
rcrl
cs
push
jne
sarb
xor
cmp
hlt
lods
movsl
aam
movsl
mov
shll
adc
xlat
dec
enter
test
jmp
loopne
popf
cmpsl
push
sub
xlat
push
fcoml
xchg
mov
shll
xlat
adc
inc
mov
jbe
je
and
cmp
pop
jmp
fcompl
inc
cmc
in
inc
dec
fcoms
xchg
sub
cmp
mov
outsb
cmp
pop
repz
dec
mov
test
xor
cmc
push
push
or
jmp
pusha
push
cltd
mov
jnp
sbb
bound
fucomi
lods
loopne
pop
push
adc
sbb
xchg
leave
lods
bound
arpl
dec
push
mov
adc
mov
fidivs
xlat
shlb
imul
popf
sbb
sar
cmp
cmpsl
dec
icebp
cltd
imul
stos
pusha
pop
ja
inc
fbld
mov
es
jl
or
lock
cld
inc
add
flds
jmp
jnp
mov
and
shlb
in
cmp
cmp
xchg
imul
iret
sub
rcr
ret
xchg
xlat
sub
stos
xchg
sub
mov
push
dec
repz
ds
push
clc
in
cmp
mov
imull
int
push
clc
jmp
cmp
mov
cmpl
dec
ret
fcmovnb
fldt
pop
pushf
jb
mov
add
mov
pushl
scas
jl
stc
ja
jbe
mov
sti
add
movsb
mov
mov
sbb
fnstenv
ret
and
loop
rcll
movsb
ss
out
xchg
not
mov
das
xor
push
outsl
addr16
push
lcall
jmp
lcall
mov
dec
inc
sub
cmpl
or
pop
push
nop
mov
movsl
sub
not
cli
sbb
cmp
dec
dec
sub
jecxz
aas
mov
dec
pop
push
and
inc
sarb
mov
dec
movsl
es
or
enter
jns
xorb
xchg
in
pop
out
inc
cmp
movsl
pop
mov
fisubs
lods
movsb
cmpsb
jmp
cld
mov
es
inc
cmp
imul
and
rcll
pop
rclb
and
and
sbb
aam
adcb
pop
fucomi
iret
mov
and
pushf
in
incl
shl
mov
popa
push
popa
cmp
shl
js
fisubl
sbb
mov
jbe
sbbl
sti
mull
adc
inc
lock
mov
loope
ret
loope
mov
mov
mov
jge
cmp
push
mov
mov
mov
leave
roll
mov
int3
push
push
cmp
arpl
ret
nop
inc
fldl2t
in
mov
sarl
imul
outsl
xor
subb
mov
adc
out
cmpsb
fcomip
xor
fldcw
loop
cmpsb
mov
inc
test
ss
mov
or
lods
cmp
dec
fs
add
clc
mov
popa
repz
mov
lods
pushf
sti
clc
out
mov
stc
shlb
mov
inc
adc
jle
popf
test
push
pop
clc
cwtl
scas
inc
dec
mov
ja
addr16
pop
arpl
pushf
mov
mov
les
xlat
xchg
or
stos
daa
mov
jo
cli
mov
inc
test
movsl
inc
nop
loop
xor
call
mov
push
test
inc
jo
dec
movsb
mov
lret
imul
shll
cmpsl
outsb
inc
cmp
fbld
add
mov
inc
ja
imul
add
sbb
inc
inc
gs
arpl
roll
sbbb
call
push
stos
aad
dec
fiaddl
pop
mov
jmp
cmp
addb
nop
out
movsb
and
add
push
call
enter
lds
pop
jne
rcrb
fdivs
fsubrl
imul
movsb
ret
inc
mov
pop
mov
fdivr
dec
leave
mov
jp
push
test
popf
ret
xchg
and
idivl
pop
popa
setno
pop
push
mov
clc
jb
scas
sub
mov
mov
add
xchg
sub
jmp
ljmp
arpl
popf
inc
outsb
mov
test
xchg
push
or
cmp
test
jp
popf
and
xlat
sub
imul
inc
pop
mov
call
sbb
enter
sarb
sbb
popa
das
aam
fildl
bound
or
xchg
clc
cmp
ds
sbb
and
cmp
pop
cmp
xchg
cltd
popf
sub
sar
jmp
jmp
mov
enter
xchg
aam
stos
jo
mov
test
jle
sub
push
roll
das
mov
inc
lods
or
pop
jecxz
decb
fcmovu
cmpsb
xor
in
lcall
clc
mov
idiv
stc
jp
xchg
cltd
es
cltd
imul
lods
xchg
push
rclb
dec
and
pop
enter
push
push
fdivs
lret
std
add
mov
lret
pop
ret
push
cmp
mov
lea
nop
fsts
mov
lcall
inc
or
clc
pushf
cmp
fcmovnbe
mov
jns
test
jns
ss
mov
dec
and
mov
or
addr16
add
add
add
fisttpl
adc
sub
lret
repz
scas
sub
in
pop
mov
inc
pop
imul
fcoml
lcall
pusha
add
jmp
pop
adc
cmp
sbb
and
sti
ds
sub
jecxz
pushf
pusha
std
mov
sbb
enter
mov
and
sbb
repz
loopne
cmp
push
mov
push
out
xchg
mov
js
inc
xchg
repz
int3
pop
push
scas
mov
inc
adc
mov
cmpsb
mov
pop
push
in
lock
js
pop
xchg
adc
xor
insl
scas
cmpsl
cltd
mov
arpl
stos
cmpsl
inc
jge
mov
sbb
cmp
mov
popf
out
mov
pop
mov
xchg
cli
daa
sub
scas
ja
mov
repz
mov
scas
inc
xchg
jne
dec
sti
mov
test
shrl
les
push
stos
mov
inc
pop
ss
test
cmpsl
cmp
xor
popf
les
fsubs
push
or
lods
mov
add
pop
sti
fdivr
inc
mov
clc
mov
shlb
add
dec
mov
stos
pop
stc
xorb
mov
loop
xchg
adc
mov
xchg
sbb
js
cmp
es
xchg
sbb
mov
mov
mov
fdivrl
clc
andb
adcb
sbb
or
lock
cmpsl
test
mov
mov
orl
mov
mov
js
mov
cmp
mov
aaa
into
imul
test
loope
cwtl
mov
mov
inc
push
enterw
mov
mov
cmp
mov
xor
enter
inc
mov
popf
push
cmpsl
jge
notl
divb
lret
inc
lret
fadds
or
aaa
mov
fstp
jp
ja
inc
and
cltd
cmp
and
enter
mov
mov
sbb
enter
inc
dec
push
js
xchg
sub
js
loopne
jp
and
push
loope
stc
popa
pop
data16
dec
pop
jmp
dec
cmp
mov
pop
pop
xchg
sbb
insl
shl
sub
sbb
sbb
push
outsl
mov
mov
xchg
push
mov
cld
add
arpl
sbb
mov
bound
add
clc
fcompl
mov
mov
xlat
mov
dec
aad
cltd
push
sub
out
pushf
xchg
add
daa
xlat
mov
mov
xor
dec
jb
sub
pop
add
mov
ds
popf
movsl
inc
mov
cmpl
mov
je
fisubl
cltd
sti
cmpsb
btc
push
loop
push
jecxz
lahf
fsubs
cmp
cmp
dec
jmp
frstor
xor
pop
mov
mov
stc
push
out
xlat
and
test
mov
test
fistpll
ja
push
gs
subl
ja
dec
test
mov
lcall
and
jmp
jp
mov
and
out
hlt
ficompl
sbb
xchg
lret
sbb
dec
inc
lahf
insb
cmpsl
mov
nop
cmp
xor
lret
jl
sbb
in
adc
outsl
std
xorl
jae
mov
mov
cmp
mov
sahf
cmp
cwtl
sub
icebp
cmp
sarb
aad
pop
xor
mov
mov
mov
fdivl
stos
sub
sahf
repz
ret
stos
sbb
cmp
xor
popf
sarb
cmp
jge
rcrb
sbb
or
lahf
cmp
aaa
out
mov
push
movb
xlat
mov
inc
cmp
imul
lods
push
push
xor
sbb
int3
mov
cli
mov
xor
sbb
mov
stc
orb
bound
xchg
fldcw
mov
popf
dec
jnp
jp,pn
popa
aas
mov
add
add
push
push
outsl
mov
daa
mov
mov
addb
xchg
sbb
jns
insb
test
arpl
out
adc
xchg
ja
and
iret
cmp
mov
jp
adc
pop
es
xchg
cltd
add
sbb
jb
cmpl
std
mov
inc
jge
arpl
add
ds
ljmp
pusha
cmp
mov
fistpl
scas
cmp
add
subb
and
mov
lahf
out
das
nop
enter
pushf
scas
mov
aaa
sbb
in
movsl
push
inc
es
es
nop
cltd
rcll
aaa
arpl
scas
repnz
adc
inc
enter
mov
sub
mov
mov
jno
lods
xchg
and
test
fidivrl
out
lods
inc
add
mov
cmp
xchg
scas
pop
add
lcall
jecxz
mov
mov
push
mov
insb
loope
dec
mov
cmp
and
add
mov
repnz
call
ret
or
jl
in
cmp
sbb
lea
add
sub
dec
pcmpeqb
dec
ss
sub
add
push
push
repz
lcall
xchg
fdivrl
lret
xchg
jae
arpl
jno
pop
pop
jge
pop
dec
jns
mov
pop
aam
or
inc
hlt
pop
inc
arpl
imul
pop
and
mov
leave
push
jns
pop
aam
fdivl
imul
sub
inc
enter
or
loope
jne
pop
lcall
push
inc
lds
add
sbb
rorb
push
fnstenv
shll
sub
adc
mov
mov
outsl
fbstp
loopne
and
mov
leave
mov
cmp
adc
cmp
pop
mov
dec
ja
or
lods
test
push
popa
push
mov
jmp
add
jne
mov
xchg
shll
jae
mov
popf
fsubrl
jp
popf
xchg
or
inc
stc
lods
cwtl
lgs
jnp
rcr
xorb
mov
push
cmp
sbb
xor
cmc
enter
mov
es
jmp
xchg
fcmove
mov
loopne
sbbb
repz
inc
into
sti
jp
push
fcmovu
cmp
fstpt
in
cmp
mov
pop
lds
pushf
daa
scas
xlat
push
cmp
lcall
mov
ror
xor
rcrl
cmp
cmp
stc
or
inc
rol
xor
mov
cs
cmpsl
lahf
xchg
cltd
sub
mov
ret
rcrb
enter
mov
stc
arpl
jb
push
sub
or
lcall
sbb
jecxz
daa
aam
xor
dec
shll
or
loop
sbb
push
jge
ja
mov
pop
pop
sbb
loope
push
pop
dec
fsubrs
xor
mov
lea
xor
movsb
scas
fwait
dec
adc
pop
xchg
sarl
dec
lods
sub
mov
mov
pop
mov
das
out
cmp
shl
mov
mov
iret
sarl
shlb
dec
pusha
mov
and
mov
sub
ss
es
lea
ljmp
scas
daa
in
outsl
repz
xchg
sar
sub
jp
inc
jge
xchg
leave
outsl
cmp
mov
xor
jmp
push
pop
xor
sbb
in
cmp
out
int
hlt
pop
jne
addl
lea
push
mov
std
lea
dec
ret
xchg
mov
mov
lcall
aaa
out
push
rcll
mov
imul
aam
adc
xchg
pop
add
mov
sarl
sub
mov
sbb
call
loope
mov
insl
mov
enter
pushf
loopne
insl
ljmp
mov
xor
mov
cmp
dec
and
cmp
sbb
jmp
xchg
add
jns
movsl
das
jb
xchg
dec
dec
cmp
sbb
fsubs
xchg
cmpb
mov
es
mov
roll
pop
bound
fdivrs
clc
xchg
adc
into
loop
adc
cmp
add
ret
popf
insl
lcall
bound
aam
faddl
aas
lea
mov
fistpl
fsubl
mov
jle
aas
xchg
fs
jle
mov
mov
sub
in
mov
dec
insl
sub
jae
aad
sub
cmpsb
sbb
fildll
jecxz
jae
mov
pusha
pop
cmp
lock
sub
outsl
or
sub
jno
add
loope
dec
add
mov
mov
ss
mov
mov
add
and
idivl
and
cmp
xorb
mov
pop
inc
jne
test
xchg
subl
and
repnz
mov
cmpsb
insb
fcmovu
cmp
pop
mov
cmc
add
sub
sbb
rep
push
dec
adc
push
mov
movsb
mov
mov
lcall
inc
fs
push
shrb
xchg
cmovl
cld
jnp
daa
jg
ret
jecxz
jle
dec
and
sbb
ljmp
sbb
addr16
cmp
lds
push
test
jge
lcall
mov
mov
dec
addr16
and
enter
mov
push
sti
mov
push
fmul
movsb
test
addb
stos
adc
mov
in
mov
xchg
hlt
jnp
and
cmp
mov
pop
pushl
jg
jecxz
shll
pop
das
xor
mov
inc
movsb
stos
andl
sbb
les
cmp
xchg
sahf
in
push
mov
jae
inc
ds
movsb
mov
fst
xchg
mov
movsl
mov
sbb
jle
dec
sbb
and
mov
std
mov
jo
mov
lahf
aam
mov
xchg
mov
stos
popf
mov
adc
lock
scas
sub
imul
push
jne
nop
cmp
stc
ljmp
lds
sub
scas
mov
jecxz
das
mov
sbb
inc
pop
je
lret
mov
pop
inc
mov
js
call
ret
add
dec
sbbl
arpl
js
int3
cmp
mov
push
sahf
ret
cmp
scas
movsl
mov
sub
mov
sbb
jge
cld
movsl
cmp
mov
test
xchg
movsb
dec
fdivs
gs
or
mov
insb
jo
ret
test
ljmp
sbb
into
jle
mov
and
mov
inc
nop
nop
rolb
push
pusha
inc
ss
pop
and
int
iret
mov
mov
out
cmp
movsb
es
xlat
shl
mov
loope
mov
pushf
cmp
popa
mov
dec
cmp
dec
sarb
mov
popa
cmp
pop
push
xchg
xor
mov
cmp
jg
pusha
nop
cltd
loopne
xchg
aam
xchg
icebp
in
mov
lcall
mov
clc
dec
xchg
mov
pop
iret
jmp
xchg
test
push
mov
mov
inc
pop
fwait
dec
mov
out
xchg
xchg
neg
filds
pop
push
jge
cwtl
cmpsl
das
cmp
adc
pusha
jecxz
xchg
push
sbb
test
idivb
fiadds
adc
pop
repnz
mov
xor
out
xlat
mov
xchg
ds
sbb
mov
scas
cwtl
xchg
mov
testb
insl
mov
inc
testl
lock
inc
in
sbb
in
push
jg
cmp
mov
fs
mov
sbb
addr16
pusha
xchg
cmp
sbb
xor
pop
inc
rcrb
mov
lock
andb
cmp
fcomps
div
cltd
stos
scas
rcrb
loope
popf
push
movsb
jb
pop
mov
ror
enter
pushf
enter
cmp
mov
pushf
pop
jp
jge
fildl
ds
je
popa
push
and
call
add
hlt
xlat
addl
xchg
mull
cmpsl
repz
or
sbb
fsts
cmpsb
mov
mov
mov
mov
bound
icebp
data16
xchg
repnz
jns
arpl
push
mov
sbb
fdivr
sub
cmovge
aaa
mov
push
aas
mov
lods
mov
scas
icebp
subb
mov
cli
cltd
jno
popa
sub
loope
into
sbb
pop
divl
push
inc
js
push
jge
push
stc
dec
arpl
cmp
fwait
sbb
xor
jne
dec
daa
cs
and
stos
inc
sbbl
sub
pop
mov
push
cmpsl
mov
in
aaa
dec
xor
and
or
inc
mov
mov
add
aad
test
fwait
mov
imulb
dec
shlb
ljmp
mov
rcl
mov
cld
push
dec
pop
mov
and
loop
cmc
mov
das
mov
sub
fadds
jae
out
dec
and
out
cmpsl
dec
mov
mov
gs
jo
bound
xchg
mov
dec
mov
cmp
inc
scas
iret
lret
imulb
pop
mov
push
shl
stos
stc
fsub
pop
inc
into
jbe
or
js
pop
inc
jp
cmp
mov
jne
cwtl
mov
xor
pop
xchg
xor
cs
mov
enter
push
aaa
stc
add
xchg
pop
and
outsb
nop
add
in
pop
lds
mov
and
push
or
mov
mov
addl
jo
jecxz
sti
scas
add
movsb
xchg
nop
cwtl
andb
mov
sub
add
cmp
pop
xchg
jae
mov
adc
mov
into
and
mov
add
mov
cli
movsb
and
and
les
inc
cmp
sbb
shrd
loope
add
enter
leave
mov
mov
ret
pop
stos
sub
mov
lahf
das
mov
pushl
lahf
sub
xor
sbb
sub
addr16
pop
in
mov
out
imul
mov
out
mov
je
aas
cmp
mov
out
enter
insb
push
jns
and
mov
or
std
pop
rcrl
fidivrl
popa
sbb
cli
mov
cmpl
jbe
mov
iret
xchg
int
sbb
mov
pop
push
dec
ret
or
sbb
dec
aas
or
sub
pop
and
mov
cmp
mov
add
lret
cmp
mov
pusha
xchg
pop
and
cmp
jns
inc
loope
pop
mov
leave
sarb
dec
mul
jp
jns
cs
cmp
shlb
ljmp
jnp
jbe
inc
and
lock
inc
pusha
mov
rcl
sub
sahf
cmpsb
je
imul
adc
scas
inc
xchg
nop
aam
inc
xchg
xor
cmpsb
icebp
sub
ror
lods
jl
cwtl
rolb
aaa
sub
rcll
mov
sub
sbb
or
sub
add
sahf
int3
dec
lock
divl
jb
shl
cmp
scas
enter
pop
sub
xorb
icebp
sbb
imul
adc
dec
push
push
lods
xchg
pop
aas
cmpsb
dec
or
mov
mov
xlat
mov
addr16
xchg
lds
loope
mov
mov
sub
adc
pushf
xchg
icebp
sbb
call
push
in
cmpsb
dec
mov
jbe
mov
cmp
iret
push
idiv
shll
pop
lcall
xlat
pop
adc
jg
lcall
out
pusha
xor
mov
push
addr16
shl
fs
loop
lret
cs
std
push
mov
or
adc
call
pop
jmp
bound
jmp
stc
and
push
xchg
dec
dec
notb
dec
mov
add
pop
aas
xchg
sub
cmp
das
push
sbb
mov
cli
shlb
jg
mov
testb
or
cmp
cmp
fdivs
sbb
push
jo
mov
dec
pop
sbb
insl
or
mov
repnz
mov
ud1
stos
dec
es
adc
adc
loop
pop
jge
mov
les
jae
sbbl
das
stos
mov
sub
inc
pushf
and
sti
cs
dec
cmp
lret
repnz
cmp
push
fwait
mov
pop
add
or
jp
in
add
cmpsl
mov
sti
push
mov
loope
sbb
mov
adc
pop
aas
xor
xlat
push
decl
iret
cmp
mov
cs
jl
enter
pushf
adc
push
xchg
sarl
movsl
dec
cmpsb
jl
push
lret
fdivs
cmc
or
sbb
mov
lcall
shrb
stos
cmc
pop
shll
mov
cmp
imull
push
and
mov
movsb
notl
inc
fcmovb
pop
shlb
movsb
or
push
rcrl
jns
jnp
cltd
scas
push
test
fwait
cmp
sbb
pop
dec
in
mov
fnstenv
xchg
cmc
jecxz
stc
fs
adc
jmp
adc
xlat
adc
cmp
pop
dec
cmp
cmc
test
pop
ror
in
xor
sub
xchg
pop
mov
adc
pop
ja
sar
pop
cmp
cwtl
push
aam
pop
in
jns
cmp
movsb
mov
stc
call
lods
mov
mov
pop
xor
out
mov
mov
xlat
adc
push
adc
push
cmp
repz
in
enter
push
and
mov
mov
lods
fisubrl
cmp
mov
inc
cmp
pop
nop
js
jb
mov
ret
int
enter
inc
cmp
mov
pop
fwait
sub
mov
or
scas
arpl
xor
scas
lods
pop
dec
test
lcall
adc
mov
cltd
xchg
in
cmp
push
mov
xchg
mov
xor
xchg
test
nop
cmpb
ror
int
pop
fisubl
js
test
sar
mov
cmp
cwtl
cmc
or
jp
ja
add
mov
mov
push
mov
popa
subb
sarl
stc
jb
rcrl
rcrl
inc
cwtl
test
std
and
xorb
add
sbb
cs
pop
pushf
mov
cltd
jg
inc
xchg
das
testl
lahf
jg
inc
test
movsb
ret
andl
pop
les
nop
sbb
movsl
idivl
cld
into
sub
flds
jnp
enter
cmp
mov
mov
inc
xchg
rolb
cmp
mov
inc
or
xchg
dec
int
stc
into
lods
lsl
jmp
jge
pushf
add
sub
test
movsb
dec
jae
or
imul
xor
jmp
lock
and
js
aam
stc
xchg
jp,pn
cwtl
pusha
adc
push
pop
xchg
pop
cmp
mov
sbb
adc
int
xchg
je
arpl
or
xchg
adcb
test
dec
std
sbb
pop
fiadds
dec
out
fistpll
jmp
xor
cmp
das
or
xchg
sahf
mov
and
test
test
jmp
mov
inc
add
jae
mov
aad
xchg
push
sbb
pop
sbb
mov
rsm
fcmovnu
sub
mov
out
clc
add
out
fwait
jge
cmp
outsl
loop
ret
and
xchg
aad
aaa
outsb
out
in
mov
gs
out
cmp
inc
mov
mov
stos
add
sbb
sbb
rorl
int
mov
sub
xchg
enter
mov
scas
pop
icebp
out
test
cwtl
outsl
xchg
ret
xchg
push
mov
ror
cmp
inc
add
sub
adcl
sbb
inc
in
ja
jp
sub
xchg
fcomp
addb
jecxz
pushf
xorps
test
push
aam
fiaddl
nop
fs
dec
xor
mov
outsb
and
emms
mov
mov
pop
cmp
jmp
cmp
data16
and
js
push
mov
add
xchg
pop
leave
mov
mov
cwtl
addr16
lea
inc
outsb
jbe
ret
pusha
jl
cmpb
sub
mov
adc
add
jae
jns
mov
sbb
xchg
xchg
and
popw
mov
movsl
xor
cmpsb
and
and
out
fnstenv
rclb
in
mov
jg
pop
cltd
dec
sub
movl
call
pop
loop
xor
mov
adc
arpl
inc
sub
js
mov
and
popf
loope
fdivrs
xor
lods
or
pop
pop
add
mov
xor
dec
cwtl
xor
lahf
cmp
fdivrl
cltd
mov
lret
pop
enter
mov
cmp
stc
clc
mov
pop
jecxz
xor
out
faddl
movsl
and
test
mov
mov
out
lods
popf
xchg
hlt
fstl
sub
sbb
aas
pushf
sbbb
int3
test
fnstcw
pop
lcall
and
and
cmp
or
sbb
out
cmpsl
icebp
testb
pop
sbb
jne
push
xor
push
movsl
adc
sub
cmp
inc
aam
cmp
and
outsb
jp
and
mov
pop
sbb
test
jbe
fidivl
adc
adc
mov
push
or
repnz
push
popa
mov
pop
sbb
loope
add
jo
es
and
and
daa
stc
pop
or
mov
sbb
sub
in
xlat
je
dec
out
adc
push
daa
mov
fisttpl
outsl
call
xlat
pop
mov
fdivs
pop
xchg
cltd
in
mov
movsl
mov
enter
out
inc
roll
mov
loopne
lret
pop
test
cmpsl
add
xorb
jbe
cmp
xchg
call
add
jnp
mov
addr16
daa
cmp
mov
pop
roll
xchg
mov
cltd
out
adc
push
daa
jb
sbb
loopne
mov
lock
sub
popf
and
sub
push
enter
ds
add
pop
fistpll
cwtl
movl
mov
cli
jns
fsubrs
sbb
xchg
mov
imul
dec
movl
aad
mov
in
call
dec
push
sti
mov
outsl
out
pop
fidivrs
jnp
outsl
sub
push
ss
pop
cmp
enter
fcoml
sbb
pop
ja
int
fldenv
and
test
mov
adc
cmp
loop
adc
fnstcw
mov
mov
mov
mov
inc
adc
pusha
out
cmc
mov
sarl
sahf
sbb
cld
push
enter
pop
jmp
xor
negl
jae
push
jne
rclb
and
sbb
jg
gs
jns
xchg
mov
mov
fisubl
sub
mov
in
gs
mov
pop
scas
inc
jns
add
sub
ds
aas
jnp
push
xchg
stos
mov
adc
sbbl
push
pop
ficompl
mov
add
xor
xchg
pop
cmp
xor
inc
pop
mov
test
nop
pop
mov
push
push
and
ds
sub
dec
outsb
sub
sub
sub
inc
push
and
rorb
or
jmp
cmpb
outsl
cwtl
sub
enter
inc
cmp
aam
cli
test
jl
cld
jmp
sub
inc
and
mov
shr
push
lahf
push
jecxz
push
mov
rol
idivb
xchg
cmp
mov
jns
subb
or
pop
repnz
loop
mov
pop
push
adc
dec
movsl
mov
outsb
psubb
sbb
repz
jge
mov
cmp
cmp
shl
xor
push
pop
adc
enter
or
adc
nop
sub
dec
pop
push
mov
arpl
mov
sbb
sub
cmp
mov
inc
mov
pop
roll
cmp
xchg
iret
shll
mov
insl
push
lds
xor
cs
mov
adcl
pop
mov
pushf
aaa
sbb
cwtl
lret
inc
in
dec
jns,pt
lea
mov
stc
ror
xchg
jp
mov
pop
mov
sbb
push
hlt
ljmp
inc
imul
arpl
push
cmpb
add
loop
sub
mov
subb
jp
mov
add
shlb
sbb
inc
adc
or
mov
add
jge
mov
icebp
cld
mov
cmpsl
lds
sbb
mov
fdivp
pushf
inc
aas
xor
cmp
mov
addr16
mov
addb
add
fsubs
pop
into
push
stc
cmp
mov
ret
lret
sarl
loopne
test
loope
leave
popa
out
pop
dec
popa
mov
sbb
repz
sub
sbb
nop
push
movsb
lret
pop
adc
push
xor
cli
pop
xor
repz
or
inc
lods
in
fmulp
test
push
mov
mov
adc
xor
cwtl
ja
sbb
jae
xchg
cs
es
data16
xlat
lret
movsb
or
aad
xlat
gs
dec
sbb
imul
into
pop
addr16
shr
movsl
in
mov
inc
add
ds
jg
into
cli
fdivl
xlat
dec
gs
enter
popf
pushf
adcb
lcall
outsl
out
gs
lret
cmpsl
pop
mov
jecxz
xor
lret
bound
pop
test
test
mov
cltd
sub
mov
mov
inc
sbb
addr16
jp
adc
xchg
pop
mov
mov
mov
jno
mov
add
mov
ret
test
in
sbb
testl
pop
addr16
das
dec
push
out
sbb
loope
cmp
in
gs
je
mov
in
movsl
inc
jbe
xor
incl
std
adc
faddl
fidivrl
and
out
inc
mov
mov
es
mov
cmp
push
shrb
xor
push
mov
inc
inc
xchg
jo
decb
inc
jo
inc
stc
mov
or
xor
jne
iret
movb
sbb
dec
jmp
xchg
cmpsb
xchg
mov
leave
cmp
rcll
and
pop
stos
push
inc
mov
bound
out
leave
pop
out
sbb
pop
bound
arpl
and
dec
mov
iret
and
sti
or
mov
cmp
mov
ljmp
rolb
pop
in
mov
and
sub
push
flds
fdivrp
pushf
cmp
sub
inc
clc
out
mov
add
fldl
mov
or
mov
jb
lret
cmc
mov
pop
mov
rcr
push
add
or
pop
pop
test
mov
jmp
fcomp
movsb
sub
jge
lcall
and
adc
shrb
arpl
enter
sub
je
fcomp
mov
cltd
enter
push
rorl
mov
xchg
test
ja
add
mov
scas
leave
and
repz
lret
and
lcall
shl
cmp
push
mov
pushl
es
sbb
add
fnstenv
loope
jl
es
sbb
pushf
lods
pop
or
sub
pop
stos
das
loopne
push
fsts
lahf
movsl
shl
or
arpl
mov
movsl
scas
test
lods
mov
lods
xchg
fidivl
repnz
mov
pop
inc
inc
cwtl
mov
clc
cwtl
mov
jle
and
divl
mov
sbb
xor
jno
and
dec
bound
pop
stos
mov
sbb
mov
fdivs
testl
fmull
cld
mov
lock
ret
lret
adc
jle
data16
pop
inc
cmp
or
mov
jge
push
aas
cmp
or
mov
ds
mov
lock
insb
fldenv
mov
test
movsb
flds
mov
sub
out
sahf
sti
jmp
cmp
xchg
and
movsl
subb
sbb
mov
test
mov
xor
out
and
cmp
mull
mov
pop
neg
cmp
aam
mov
lea
pop
dec
test
push
repz
dec
adc
mov
mull
push
sub
movsb
hlt
into
pop
mov
dec
push
fsubr
movsl
mov
jne
filds
dec
jp
rcl
adcl
jb
mov
xchg
mov
fiadds
cld
add
add
or
adc
or
adc
mov
in
jmp
mov
jp
mov
jp
into
lret
mov
mov
ja
pop
cmpb
dec
push
pop
sarl
push
push
icebp
out
pop
js
ljmp
inc
lods
into
and
sbb
lods
inc
aas
mov
inc
pusha
push
iret
lods
push
mov
fadds
mov
lea
jp
fnstsw
aam
cmpsl
movsl
mov
cltd
jae
mov
push
and
loopne
sbb
cs
xchg
cmpsb
fmulp
call
jecxz
imull
jecxz
test
xor
mov
pop
insl
and
cmp
clc
xchg
xorb
fidivl
vmwrite
subb
or
call
xor
pusha
or
sbb
and
dec
repnz
test
je
mov
add
addl
popf
dec
mov
bound
push
test
fcoms
out
adc
dec
cmp
mov
setns
lea
les
js
cmp
sbb
sti
cmp
cmpsl
fsubs
sbb
mov
fwait
clc
jge
xbegin
cmp
cmp
or
es
outsl
mov
and
imul
sbb
sti
mov
sbb
cmp
cld
ret
and
xchg
pop
enter
sti
inc
jnp
xor
jns
and
cmpsl
jmp
lea
test
mov
jbe
jg
loope
cli
cmp
adc
testl
and
add
fwait
js
gs
sarb
mov
mov
add
sarb
and
std
cli
and
mov
cmp
cmp
rorl
sti
cmpsl
mov
mov
lea
rorb
shlb
iret
push
mov
jge
sbb
div
mov
xchg
sub
sbb
sub
fmull
sub
mov
mov
inc
popa
shrl
icebp
xchg
adc
lods
xor
addr16
cmpsb
fstpl
movl
add
pop
adc
sbb
xlat
mov
mov
mov
mov
loopne
sahf
in
testl
push
repnz
mov
inc
test
ss
sarl
into
cltd
fnstcw
add
sub
mov
sti
inc
bound
cmp
pop
xor
sub
out
stc
cli
rclb
mov
pop
jge
stc
xchg
lods
ret
push
fwait
nop
lcall
push
cmp
mov
leave
in
jmp
out
push
pop
sti
sub
imul
sub
adc
cli
cwtl
cmp
adc
in
movsl
jmp
aaa
hlt
cmc
jecxz
cwtl
ret
jmp
or
inc
mov
pop
push
sarl
mov
mov
gs
inc
data16
pop
imul
cltd
inc
push
pop
mov
shlb
mov
sbb
int3
push
popf
xor
add
inc
leave
xor
dec
jb
mov
out
std
jns
fistps
mov
popa
into
xchg
sub
mov
fwait
inc
cmp
gs
adcl
sbb
lea
repnz
cwtl
mov
scas
sarb
pusha
sub
cmp
lahf
push
lea
add
mov
mov
nop
fcomip
xlat
sbb
xchg
loope
bound
xchg
stc
cwtl
and
cltd
and
xor
loopne
pop
jo
mov
xlat
add
jl
cmpsb
addr16
sahf
pop
ss
sti
jmp
xchg
mov
pop
jbe
jbe
pushf
lods
pop
xchg
xorb
jg
xchg
stos
inc
sbb
jo
enter
psrld
push
and
shr
sub
xchg
fsubs
sbb
cwtl
cmp
mov
movsb
mov
and
movsl
mov
cmpsb
daa
push
test
lcall
mov
loope
mov
and
adc
mov
push
mov
and
mov
and
fldt
jne
xor
cmp
push
ss
cmpsl
pushf
cmpsb
xor
mov
pop
dec
sahf
mov
pop
push
sub
pop
pop
jns
mov
adc
sbb
jmp
popf
mov
scas
fnsave
popf
rolb
inc
inc
ja
push
cwtl
negl
sete
std
and
inc
mov
mov
into
repz
jae
xchg
sbb
mov
mov
ljmp
adc
add
dec
adc
pop
mov
sub
shll
adc
pop
xchg
mov
push
jg
and
lods
push
in
cs
into
aas
stos
cmp
lods
xlat
int
into
xor
nop
movsl
shlb
mov
ss
dec
cmp
cwtl
mov
lods
jo
pop
pushf
cmp
mov
lods
xchg
add
mov
add
in
rol
clc
mov
rolb
cmp
int
cmp
imul
push
or
pop
push
stos
mov
icebp
xchg
idiv
ret
mov
imul
rol
imul
and
xor
xor
loopne
addr16
xchg
jb
out
mov
iret
repz
imul
sub
insl
xor
sbb
mov
pop
inc
lods
cmpsl
xchg
stos
enter
insl
ljmp
push
fucomi
stc
inc
adc
loope
inc
sarl
lea
insl
addr16
push
mov
test
cld
xchg
test
outsb
leave
push
leave
xor
inc
pop
xchg
push
add
sbb
xchg
jecxz
jnp
sahf
adc
call
cmp
and
push
flds
jne
xchg
mov
pop
inc
mov
ret
test
frstor
cmp
outsl
aaa
arpl
mov
cld
inc
leave
jp
cmpsl
dec
fadd
xchg
adc
mov
sbb
dec
jne
mov
xor
jle
flds
fwait
ds
inc
xchg
jne
jg
ja
inc
sbb
outsl
lahf
rorb
xchg
stc
fldenv
xor
mov
call
mov
cmp
dec
enter
push
and
insb
jb
mov
out
daa
or
leave
mov
push
jmp
sub
mov
shrb
enter
jne
or
jg
into
sbb
call
into
stos
inc
out
mov
pop
xchg
iret
jae
cs
bound
and
adc
bound
imul
stos
sbb
call
pop
das
pshufw
dec
stc
sar
pop
xchg
push
add
push
es
stc
scas
xor
cmp
incb
xchg
addr16
mov
add
push
push
adc
enter
dec
sub
cmpsl
xchg
bound
mov
jb
test
in
inc
sbb
sar
stc
xorl
aaa
fcmovnb
lahf
jo
cltd
cmp
jns
cmpb
mov
daa
dec
aad
call
stc
mov
jl
je
cmp
xor
shlb
add
and
std
popa
cmp
lcall
xor
dec
xor
stos
ds
xlat
mov
sub
out
mov
ljmp
sub
repz
cmpsb
pop
nop
lret
xor
sti
les
int
mov
sbbl
mov
ss
lahf
insb
xor
arpl
mov
xor
mov
push
push
test
push
fwait
rolb
or
pop
adcl
imul
lea
and
inc
dec
cmp
cmp
ja
inc
inc
popf
cwtl
leave
jnp
fisubl
popa
mov
dec
cwtl
add
or
cwtl
push
iret
mov
pop
aad
jle
cmp
testl
jp
es
call
cwtl
pop
mov
xorb
xlat
jb
inc
sbb
int
iret
in
cmp
and
int
pop
jge
jge
sbb
push
rcrb
mov
dec
jbe
shl
dec
sub
test
outsb
lods
pushl
pop
jbe
nop
call
add
cmp
test
jmp
scas
push
call
xchg
es
or
push
and
inc
into
mov
inc
cmp
dec
inc
push
out
dec
push
test
out
and
cwtl
mov
push
inc
mov
out
stos
les
iret
inc
testl
es
daa
idivl
jmp
sub
mov
add
movntq
mov
stc
out
enter
and
jmp
cmp
mov
popf
and
cmp
lock
or
mov
fcompl
cmp
sbbb
mov
daa
hlt
pop
andb
mov
mov
add
call
xchg
inc
scas
pushf
stc
add
bnd
clc
stc
pop
add
mov
jmp
sbb
cmp
mov
fistpl
in
pop
adc
sahf
scas
cltd
cltd
popa
sbb
repz
pop
sub
pop
stc
leave
push
add
dec
pop
clc
es
sahf
mov
call
and
cmp
daa
push
jg
mov
rorb
aam
jns
add
cld
xchg
sbb
call
cmp
sti
cmp
cmpsl
daa
fidivrl
jp
sbb
mov
inc
mov
das
rcr
cmp
es
sbb
ret
add
cmp
mull
pop
addr16
cmp
cmp
pop
mov
test
xlat
jg
test
cmp
imul
das
and
or
stc
cmp
sbb
dec
push
int3
fsin
or
adc
call
daa
sbb
mov
fcmovnb
mov
mov
iret
mov
popa
cmpxchg
cmpsb
fwait
rcrl
mov
jle
add
enter
lret
fisubs
dec
add
mov
cld
aaa
icebp
in
mov
add
mov
pop
int
mov
sub
stos
sbb
and
cmp
imul
lcall
cmp
enter
jecxz
cmp
push
bound
pop
loop
es
test
cmp
ret
daa
repnz
or
jg
aas
filds
inc
mov
xor
test
lcall
inc
add
out
mov
inc
out
dec
or
gs
loopne
xchg
test
dec
mov
stc
adc
int
std
les
fwait
push
cltd
jecxz
mov
lret
addr16
cmp
push
scas
pop
jae
sub
jge
xchg
jecxz
bound
inc
and
stc
call
sarb
mov
lahf
jb
inc
sbb
mov
sbb
sbb
hlt
cmp
loop
mov
cmpsb
cmp
jnp
add
shl
mov
xchg
xor
mov
cmp
scas
push
xchg
fisubrs
add
repz
cmpsb
mov
fwait
cltd
lret
in
int3
loop
scas
adc
and
mov
mov
rclb
cltd
mov
or
mov
clc
bound
cmp
cwtl
dec
into
clc
negb
test
pop
sbb
mov
push
pushf
std
loope
sbb
jp
fdivrl
leave
inc
mov
cmp
fmuls
aaa
sbb
mov
mov
data16
movsl
sub
fsubrl
mov
push
loope
shll
movsl
es
rcr
jp
jp
fdivl
push
loope
es
and
add
cmp
test
popf
loope
mov
jp
and
sub
adc
xor
mov
ret
leave
enter
and
enter
jl
loopne
leave
fdivs
fiaddl
mov
fnstcw
lret
addr16
dec
sub
rcrl
xlat
mov
pop
dec
mov
jg
dec
sub
cmpb
dec
sets
faddp
push
es
or
xchg
sbb
mov
pop
mov
cmp
daa
jne
mov
js
jnp
inc
cmp
test
jns
fs
push
sbb
add
call
add
xchg
inc
mov
cmp
inc
mov
ja
arpl
push
sahf
push
sbb
sub
pop
push
cmp
sbb
decb
leave
stos
lcall
mov
movsl
add
mov
call
add
push
pop
loop
movsb
gs
jbe
mov
in
mov
jmp
cmp
and
cltd
call
mov
and
or
inc
and
andl
add
jns
jns
test
xchg
sbb
cmp
pop
out
dec
push
out
popf
mov
stc
cmp
stos
mov
les
stc
mov
xor
stc
dec
mov
jg
fucomp
lea
xchg
cltd
imul
jne
sbb
fidivl
les
pop
push
or
and
repz
enter
jp
mov
inc
sub
ljmp
inc
rcrb
cmp
mov
mov
sub
roll
jmp
nop
push
pop
or
xor
pop
mov
fwait
repz
outsb
out
iret
jmp
clc
neg
cmp
xchg
inc
call
movl
xlat
es
pop
rcll
frstor
mov
sub
bound
mov
cmp
roll
cmp
xlat
daa
dec
xchg
jmp
imul
enter
popl
scas
out
mov
stc
xlat
std
mov
outsl
into
fcmovnb
xlat
xor
jecxz
jle
popf
xor
mov
mov
jecxz
sbb
push
ljmp
pop
lcall
cs
daa
push
stc
jmp
leave
mov
aad
adc
mov
aam
in
rolb
ss
xchg
adcl
daa
jmp
in
mov
daa
scas
lret
and
scas
push
mov
outsb
mov
hlt
loopne
lcall
dec
cwtl
shll
mov
or
jno
cmp
mov
popa
mov
inc
enter
fwait
jo
imul
adc
iret
push
cmp
aam
xchg
insl
adc
and
push
and
mov
jp
xlat
cmp
shr
test
cli
push
movsl
cmc
or
cmp
aaa
out
stos
jl
sbb
subb
imul
dec
popf
incl
jmp
aas
dec
dec
mov
call
hlt
jp
call
pushf
fidivrs
mov
mov
xorb
sub
pushf
call
iret
pop
cmp
sub
mov
jae
loop
addr16
mov
iret
pop
cmp
enter
mov
out
cmc
mov
xchg
call
fnstcw
cmp
pop
or
addb
and
popf
xor
test
call
jg
subl
fsubrs
jnp
add
pushf
pusha
and
pushf
es
and
sti
adc
dec
mov
popa
icebp
dec
pusha
addr16
cmp
bound
push
movsb
cmp
shll
jb
xchg
mov
int3
add
inc
pop
adc
subl
sarl
and
or
out
adc
cmp
ja
xor
loopne
pusha
or
test
gs
jmp
popf
cmp
dec
mov
adc
ljmp
dec
jecxz
clc
cmp
enter
jno
stc
mov
cmp
inc
out
bound
fdivrs
cmp
xorl
mov
lret
daa
test
cmpsb
mov
dec
das
inc
stc
imull
mov
gs
xchg
adc
cmp
xchg
mov
push
loope
out
aam
inc
mov
enter
cmp
mov
ds
cmp
lahf
movsl
mov
lea
dec
inc
lahf
xchg
lahf
mov
xchg
nop
popf
xor
int
out
xor
or
mov
fsubl
cwtl
xchg
lcall
ret
push
xlat
cmp
cli
mov
std
jg
lahf
fisubl
movsb
sbb
test
xchg
notl
mov
add
loope
shll
pop
adc
out
jnp
mov
or
mov
push
aas
xlat
mov
sarl
negl
cmp
cmp
sub
stos
mov
rcrb
inc
jp
mov
cltd
sub
out
jecxz
sub
enter
pop
sub
shl
mov
das
aam
fsubl
pusha
mov
xchg
sarl
loop
pop
movsl
insl
dec
mov
adc
sbb
subl
xlat
cmp
jb
cmp
shrb
ret
fs
cmp
add
xlat
mov
fimull
repz
xchg
pushf
jbe
jp
mov
dec
pop
jns
fcom
fisttps
mov
rcr
loop
in
xchg
xchg
aad
mov
out
and
daa
test
push
sbb
pop
ss
mov
add
fcomp
and
shrb
inc
mov
jbe
cs
mull
or
loope
jnp
loop
lahf
arpl
mov
aaa
and
leave
sbb
ret
test
andl
fdivrs
es
sub
mov
clc
stos
lock
daa
lods
push
and
les
notl
shrb
fwait
scas
mov
mov
cmp
nop
push
outsb
cs
push
dec
xchg
ljmp
or
mov
aaa
and
repnz
movsb
push
pushf
jo
fmul
test
sahf
cmp
mov
fld
fcomp
shlb
aas
mov
pop
adc
push
popf
in
and
mov
icebp
fimull
push
inc
jns
push
out
fsubrl
test
shll
mov
cwtl
cmp
mov
push
sub
xchg
sub
cmp
hlt
mov
fbstp
popa
cmp
mov
lret
pushf
mov
mov
repz
xor
and
dec
shll
push
cmp
cmp
shll
cmpsb
mov
scas
jmp
movsb
pop
and
or
mov
add
cmp
cmp
les
cmp
dec
xor
popa
mov
xchg
mov
out
int
cmpsw
rolb
dec
outsl
scas
inc
nop
scas
scas
sbb
into
stc
xchg
inc
mov
jge
inc
filds
sbb
ja
fldcw
and
fs
lods
addr16
lcall
xor
push
adc
leave
sub
nop
mov
ds
mov
leave
stc
mov
sbb
data16
pusha
sbb
jg
sbb
fnstcw
mov
xor
mov
pushf
fcmovbe
xor
dec
cli
in
sbb
es
dec
adc
rcrb
shlb
mov
enter
sub
subb
inc
clc
outsl
mov
xchg
add
idiv
sarb
daa
xlat
mov
push
mov
jns
inc
mov
call
or
stc
mov
cmpsb
aas
cmp
ss
jecxz
testl
mov
ret
xlat
dec
jbe
cltd
fdivrs
je
add
mov
sub
out
enter
or
outsb
add
ficoml
es
cmp
jmp
add
add
mov
jo
dec
lods
mov
xchg
mov
pop
push
xchg
pop
popa
popf
xor
das
sub
cmp
enter
sub
jbe
popa
dec
cmp
shr
jecxz
cmp
or
test
or
jno
push
cltd
lea
inc
jle
cmp
popf
pop
fsts
sbb
xlat
or
iret
cmp
pop
push
in
sub
cmp
iret
adc
add
data16
mov
rcrl
mov
loope
mov
dec
pop
xlat
adc
stos
insw
loop
imul
dec
movsl
incb
int3
fs
mov
push
lret
mov
inc
cmp
sarb
push
mov
incl
ret
pusha
mov
sbbb
cmp
and
fwait
pxor
sbb
xor
out
jp
ficompl
pop
mov
shll
inc
cmp
sti
fidivrl
popf
bound
xor
insl
das
sbb
push
pusha
movsl
nop
cmpb
add
daa
cwtl
mov
cmpsb
ljmp
icebp
in
push
orb
stos
out
es
ret
pop
andb
cmp
xchg
enter
pop
pop
or
xchg
xchg
dec
popa
sbb
add
test
sub
mov
mov
mov
sbb
negl
or
ss
popa
cmp
fidivrl
or
cmp
inc
cmp
sti
and
fbld
js
mov
jp
aam
cmp
mov
dec
bound
cmpb
bound
in
inc
fldenv
jmp
mov
cmc
push
jmp
sbbb
sahf
xchg
push
aaa
and
enter
fistpll
adc
mov
cmc
lods
repz
fcmovbe
inc
mov
lcall
pusha
das
or
mov
insl
sub
sbb
gs
clc
sub
inc
out
imull
leave
sub
or
pop
pop
jl
mov
out
cmp
popa
lds
shl
inc
mov
fcompl
enter
aam
subb
mov
mov
sub
arpl
insl
cmp
mov
push
mov
pushf
daa
inc
fwait
inc
loope
sahf
mov
sbb
xor
push
ret
push
pop
clc
cli
inc
mov
sub
fists
inc
pop
jmp
cs
xor
arpl
cmpsb
cmp
pop
pop
push
iret
and
cmp
xchg
sbb
xchg
inc
cmp
stos
movsb
addr16
adc
add
in
out
mov
cmp
scas
stc
and
xchg
idivb
dec
mov
dec
cmpb
cmc
jo
imul
lea
shl
outsl
push
mov
cmp
push
xor
mov
mov
pop
sub
std
adc
test
mov
mov
xchg
and
clc
mov
leave
and
adc
and
mov
inc
ljmp
sahf
dec
mov
dec
sbb
push
mov
push
leave
adc
bound
xchg
mov
enter
dec
jne
pushf
adc
ret
pushf
xchg
sub
pusha
add
or
cli
fiadds
cmpl
sbb
cmp
incl
cmpb
mov
mov
repz
lcall
mov
ja
aaa
loopne
aam
mov
popf
nop
sub
mov
pop
inc
sbb
test
pop
and
dec
dec
imul
or
ds
push
cmpsl
mov
or
jbe
inc
orl
adc
mov
cmpb
mov
xchg
shll
int3
movsl
pop
mov
mov
nop
test
andb
mov
shlb
sbb
je
loopne
jns
rcpps
mov
xlat
fcompl
pop
cmp
fistps
out
mov
cmp
and
roll
xchg
cmp
stos
js
aas
cmp
mov
int3
push
push
jp
cmc
insl
jmpw
addr16
cmp
std
sbb
imul
cli
adc
div
ds
xor
jl
cmp
loopne
mov
mov
scas
xchg
sub
xorb
aam
xor
dec
arpl
pop
pop
sbb
outsl
out
ret
cmp
xor
aaa
scas
cmp
pushf
xchg
movsl
pop
cld
imul
mov
push
pop
js
xchg
daa
ror
filds
jo
mov
popa
add
daa
dec
out
inc
mov
pop
or
mov
shll
mov
subl
push
mov
pop
and
sub
scas
out
idivb
scas
inc
jnp
fbstp
stos
cmpsb
jge
mov
cmc
cltd
mov
cmp
loopne
enter
daa
popa
js
inc
sbb
idivb
jg
imul
cltd
and
sbb
mov
fldt
loopne
mov
jg
ret
or
cmp
call
out
sub
add
jmp
inc
fdivrp
mov
out
mull
inc
cmp
call
mov
and
add
xchg
push
push
rcrl
ds
xchg
test
or
or
cmp
cmpsb
js
faddp
call
xor
sbb
mov
adc
enter
nop
fsubrs
mov
movsl
fldcw
pop
das
test
jns
aaa
std
int3
push
push
outsb
lcall
add
and
inc
cmp
andl
fdivl
mov
inc
fsubrs
movsb
pop
and
inc
lds
imul
jmp
pop
xor
test
loopne
test
mov
movsb
stos
jae
and
clc
and
cli
lahf
sub
cmpl
enter
and
cltd
cmp
aad
push
add
lret
stos
bound
and
adc
lahf
cmc
iret
pop
arpl
and
or
std
pushf
xchg
or
mov
rcrl
adc
add
cwtl
mov
cmp
adc
dec
fs
cmpb
out
ss
arpl
int3
dec
clc
fistpll
inc
lea
sti
das
sbb
in
imul
negl
add
or
and
icebp
add
idivl
adc
jo
mov
bound
in
dec
push
cli
mov
dec
iret
dec
rcl
mov
xchg
insl
mov
cmp
sub
arpl
mov
imul
lahf
loopne
sbb
cmp
dec
out
cmp
push
or
mulb
addr16
mov
call
jns
mov
fistps
cmpsl
lods
adc
dec
mov
test
test
pushf
mov
std
mov
xchg
jp
lret
insb
lahf
out
inc
sub
sbb
cmp
mov
es
jne
dec
inc
dec
sti
and
jo
cltd
stc
pop
sub
int
jle
std
inc
and
scas
add
adc
das
in
inc
dec
pusha
enter
andl
std
mov
push
mov
jecxz
loope
or
inc
xor
cmp
or
mov
mov
xorl
cmp
icebp
dec
mov
shlb
call
leave
mov
xchg
dec
fistpll
xchg
cmp
push
xchg
xchg
cld
lock
in
push
mov
dec
shrb
mov
in
adc
lods
cmp
cs
out
xchg
push
cmp
mov
and
mov
lahf
xchg
stos
pushf
mov
lods
pushf
ja
cli
aas
sub
leave
addr16
scas
out
mov
mov
dec
xor
inc
push
jne
lods
and
add
sub
inc
imul
lcall
mov
cmc
push
rcll
sbb
in
cld
or
repz
stos
dec
mov
mov
mov
sub
adc
dec
sub
jmp
mov
sbb
sub
jne
nop
pop
xchg
jbe
pop
aas
cmp
add
mov
sub
pusha
inc
in
mov
mov
notl
pop
in
repz
in
push
call
pop
cmpsb
cmp
adc
es
push
and
enter
lock
pusha
jecxz
in
jp
daa
mov
sub
sub
inc
outsl
or
sbb
shrl
lahf
shlb
dec
ret
imul
cmp
fidivrl
test
inc
mov
or
xlat
scas
cmp
mov
scas
mov
dec
inc
popa
mov
mov
cmp
push
ret
test
mov
push
sbb
and
jmp
pop
cmp
ljmp
scas
cmp
mov
mov
adc
cmp
movsb
lods
sub
push
cli
or
popl
sub
fdivrl
mov
mov
or
mov
jp
cmp
inc
sahf
js
mov
ds
and
and
cmp
mov
sub
loop
pop
add
inc
in
cld
cmpsl
mov
imul
gs
fcomip
addb
cmp
ds
ljmp
stc
neg
sbb
cmc
inc
jne
cmp
pop
xlat
xchg
cmp
daa
in
cmpsb
in
pop
iret
cli
mov
popa
mov
xchg
stos
xor
rcr
cmp
and
pushf
leave
xchg
cli
xchg
inc
jp
not
inc
popa
pusha
mov
and
icebp
addr16
sub
inc
adc
js
mov
ds
sar
mov
cmp
pop
pop
sub
pop
cld
and
or
pushf
mov
push
rorb
stc
stos
push
sarl
pop
mov
scas
rolb
enter
inc
aad
jmp
adc
movsl
and
inc
cli
aam
inc
pop
enter
cltd
sub
shrl
add
pop
mov
ljmp
mov
mov
sarl
pop
pushf
je
shlb
push
xor
mov
and
xor
cmp
inc
pop
inc
add
in
pop
push
sbb
pop
inc
sub
bound
mov
shrb
out
pusha
std
sub
icebp
dec
xchg
pop
dec
pop
xchg
fnstsw
pop
cmp
or
into
inc
or
outsb
stos
movsb
sub
jmp
shl
pop
mov
push
shr
sbb
out
dec
mov
out
inc
adc
mov
sbb
movsl
ds
mov
jmp
pop
inc
fadds
add
xor
aas
test
pushf
mov
or
push
enter
movb
rcrb
shll
ljmp
lcall
and
lea
repnz
jl
mov
lea
push
jl
add
mov
lods
fisttpll
pop
mov
xor
call
jg
loopne,pt
xor
rcl
pop
dec
xor
mov
leave
pop
mov
std
adc
outsl
push
sub
sbb
push
push
shlb
jg
out
ja
hlt
jg
in
and
lods
pop
cmp
mov
fldl
imull
nopl
sbb
clc
mov
inc
dec
adc
ds
and
lods
dec
and
sub
adc
mov
add
popf
inc
dec
popf
dec
mov
cmp
mov
jae
aam
stos
imul
fcoml
icebp
out
repnz
cltd
mov
xchg
adc
stc
dec
adcb
dec
adc
adc
call
mov
mov
dec
in
lods
addr16
aad
lods
dec
test
test
int
jge
mov
daa
sub
icebp
inc
lods
stos
cmp
int3
fsubrs
lahf
das
xchg
jb
xor
clc
mov
in
aad
enter
pusha
lods
adc
test
and
jns
add
out
mov
xor
addr16
fucomi
mov
push
daa
call
sbb
cmp
mov
outsl
rcrb
xorb
out
push
cwtl
stos
add
shr
xor
xor
mov
mov
subb
shrl
dec
add
lods
imull
mov
mov
xlat
pusha
cmp
mov
movsb
out
mov
mov
ret
cmp
out
clc
sti
mov
icebp
dec
pop
repnz
lret
aas
push
ljmp
mov
mov
mov
nop
add
jmp
in
jp
std
imul
dec
xor
cmc
xchg
jmp
aas
dec
mov
adc
fiaddl
popf
jge
push
fdivrs
xor
push
mov
adc
lods
push
shlb
out
bound
cmp
or
mov
imul
mov
fwait
popf
test
lcall
and
movaps
loopne
out
loope
arpl
add
fdiv
mov
and
cltd
dec
into
out
test
shll
cld
mov
aas
pusha
mov
xchg
mov
xor
scas
pop
rolb
sarb
out
out
hlt
or
ds
xchg
push
xchg
mov
shrb
add
hlt
jmp
pop
mov
mov
aam
sbb
stc
mov
test
pop
mov
mov
ds
mov
jno
pop
aam
gs
aam
mov
mov
inc
sbb
cmp
addr16
pop
aas
fisubs
ficompl
insb
pop
rcrb
loopne
mov
adc
and
and
loope
stc
jae
pop
or
xor
imul
ljmp
cmpsb
push
mov
punpckldq
lahf
loope
jne
mov
in
add
sub
sarl
dec
sub
arpl
cmc
fisubs
js
pusha
aad
out
ja
ret
loopne
mov
add
push
or
sahf
out
xor
cmc
sub
sarb
repnz
sarb
enter
jp
stos
pop
push
cld
add
sbb
mov
test
imul
fcompl
hlt
int3
xchg
dec
lea
cmp
adc
xor
mov
or
adcb
dec
rcl
sahf
xlat
popf
mov
loope
dec
ret
divl
and
xchg
mov
fsubl
pop
add
rorl
cmp
mov
sub
add
mov
mov
stc
xor
adc
leave
rorb
aaa
cmp
lahf
xchg
push
jnp
repnz
imul
fs
xor
incl
or
fmuls
push
stos
pop
cmp
out
rolb
pusha
test
sbb
push
icebp
cmpsb
push
sahf
fwait
rorl
lret
js
and
jo
out
pushl
dec
loopne
dec
dec
mov
cld
daa
shll
mov
inc
mov
mov
shrl
ficompl
les
mov
mov
ja
push
or
pop
mov
adc
mov
sbb
mov
mov
mov
push
stc
and
mov
scas
xchg
pop
lret
mov
sbb
xor
loope
pop
adc
fldt
pop
and
xor
test
daa
stc
std
inc
jl
sub
sub
xchg
jp
jmp
sbb
loop
pop
adc
movsl
push
cmp
stos
fisubrs
into
je
pop
lret
enter
rcrb
xchg
lret
les
inc
lret
loopne
popf
add
mov
inc
clc
cmc
mov
mov
cltd
pop
xchg
in
push
loope
add
rcrl
sbb
popf
in
loope
out
adc
addr16
sub
mov
fdivrs
adcb
ret
mov
outsl
push
cmp
cmpsl
sar
mov
mov
arpl
sti
pop
cmp
or
cmp
rclb
cmp
pusha
xor
flds
jne
orb
xchg
ja
mov
inc
mov
testl
cmp
scas
inc
sub
add
ret
xor
shrb
xchg
mov
hlt
sbb
push
push
adc
mov
out
xchg
or
cmpsb
cmp
mov
ljmp
pop
sar
lret
cmp
cltd
adc
and
lods
insb
shll
or
fisubl
mov
cltd
mov
mov
or
push
cmp
or
jp
test
xchg
clc
into
pop
lcall
clc
sub
inc
dec
jecxz
push
call
push
mov
xlat
pusha
sbb
inc
shr
faddp
jge
fs
lods
pop
pushf
inc
shr
movsl
xor
jle
and
outsb
xchg
movsb
mov
stos
pop
jl
into
lea
rclb
mov
dec
leave
cltd
loop
adc
xchg
mov
sub
mov
sub
xor
cltd
out
sbb
pop
mov
jnp
jp
xor
jl
out
addr16
xor
les
loop
cmp
fadds
idiv
out
add
das
lods
xchg
dec
arpl
pop
or
pop
fs
mov
imul
push
fmuls
iret
pop
mov
scas
adc
mov
jb
jno
js
xchg
or
pushf
out
ds
jp
jbe
mov
sbb
or
push
enter
icebp
out
inc
jmp
scas
fsubs
adc
clc
jl
mov
xlat
call
ljmp
xchg
aam
and
rorl
fwait
pusha
inc
fs
mov
stc
shl
and
sti
mov
arpl
inc
rcrl
cmp
clc
lret
cld
std
imul
cli
cmc
fxch
ja
mov
inc
dec
add
mov
fimull
test
and
mov
and
mov
fnstcw
cld
out
das
imul
std
cs
xor
mov
mov
iret
pusha
js
jle
cmp
mov
add
adc
je
add
xchg
sarl
in
mov
lcall
mov
in
inc
jle
pop
add
out
mov
mov
jae
mov
pushf
dec
gs
and
fdiv
cmpsb
fwait
scas
fstps
out
pop
lret
mov
arpl
stos
xor
dec
call
repz
inc
sbb
incl
cmp
mov
lods
popf
test
jo
sub
ret
inc
xor
lret
mul
cmp
lds
mov
cmp
dec
shlb
mov
test
xchg
fsubl
mov
mov
fcmovb
fnstcw
mov
or
lods
push
or
xchg
xchg
dec
mov
movsb
or
xchg
sti
js
repz
fldt
test
in
xor
cwtl
mov
jmp
insl
test
pop
jp
fucomp
dec
sub
std
mov
insb
repnz
xor
notb
adc
pushf
fnstsw
xor
xchg
test
mov
inc
mov
xchg
jge
aas
pusha
jg
nop
mov
aas
mov
xchg
sahf
mov
insl
jmp
xchg
mov
aad
or
sub
pop
sbb
filds
adc
nop
add
adc
popa
push
push
sub
pusha
inc
or
push
and
xchg
or
sub
add
jecxz
push
push
mov
cmp
popa
mov
ds
or
xor
adc
sub
sub
mov
out
inc
out
out
cmp
ja
daa
pop
dec
xchg
cmp
out
add
aam
pop
enter
mov
loop
mov
push
inc
dec
push
jo
cmp
divb
addr16
into
push
scas
data16
mov
sub
cltd
outsl
cmc
es
pop
jb
inc
lcall
stc
and
clc
mov
sbb
pop
jne
mov
cmp
inc
clc
push
push
jbe
dec
mov
mov
jg
sub
std
stc
enter
mov
cmp
sbb
test
or
xchg
pop
sbb
aam
mov
xor
mov
sti
inc
cltd
adc
dec
xchg
sbb
nop
xor
jo
cwtl
adc
mov
sub
cmpsl
notb
cli
sub
adc
push
leave
cmp
pop
jns
fld1
sub
inc
enter
mov
psubusb
pop
jae
pusha
push
divl
xor
cmp
stos
inc
enter
cltd
test
call
xchg
sbb
mov
jae
fdivrp
mov
inc
sub
mov
shll
aaa
ret
push
pusha
loopne
sub
adc
mov
lret
pop
shlb
cmp
mov
fidivl
dec
push
shlb
aas
aas
fildll
cmp
mov
sub
sub
xchg
jp
mov
jmp
sbb
cmp
xchg
pop
adc
scas
mov
shlb
inc
out
mov
or
bound
jp
jge
pop
imul
ja
cmc
mov
cs
sbb
inc
xchg
hlt
inc
enter
gs
sbb
xor
add
repnz
aaa
inc
push
jbe
aad
cmp
mov
xchg
cmc
ljmp
outsb
mov
dec
out
mov
repz
and
mov
add
ja
xchg
jmp
inc
scas
stos
xchg
into
inc
fwait
inc
sbb
jno
pop
addr16
sub
loope
dec
clc
cmp
in
subb
hlt
addr16
push
mov
ds
pop
out
cmpsl
popa
aad
xor
cmc
and
push
mov
jb
dec
cmpsb
sbb
add
in
sbb
int
xor
test
and
lea
in
xchg
lds
std
flds
lahf
mov
sub
test
pusha
mov
fadds
mov
lcall
xor
das
stos
shlb
ret
lahf
call
fimull
outsl
test
mov
mov
mov
stos
mov
icebp
bound
in
stos
cmp
imul
cmp
jge
mov
dec
inc
sbb
jg
cmpsb
js
mov
aam
jmp
mov
push
mov
mov
add
ljmp
dec
mov
dec
test
jl
dec
and
dec
es
sti
pop
jbe
rolb
out
and
in
cmc
outsl
add
adc
leave
nop
or
mov
insb
inc
cmp
mov
mov
out
mov
or
ss
cmp
imul
es
cmc
repnz
insb
lcall
lea
loop
leave
repz
enter
dec
out
push
aas
cmpl
ret
mov
push
in
stos
rcr
cltd
cmp
dec
push
leave
mov
popf
push
add
inc
lcall
dec
loope
and
loop
stos
clc
sbb
sbb
icebp
cmp
addr16
inc
incl
xchg
out
out
and
mov
pop
in
icebp
cpuid
mov
pop
out
xor
mov
daa
cs
repnz
xor
cwtl
adc
or
xchg
lods
or
push
push
sbb
push
std
in
fmuls
aad
sub
and
xchg
sarb
mov
inc
decl
dec
lock
cmpl
jo
mov
jns
outsb
mov
and
jg
xchg
adc
jns
mov
out
dec
mov
sbb
pop
sarl
popf
ds
stos
iret
pop
sbb
adc
sub
jmp
pop
xlat
mov
mov
ljmp
push
fs
std
inc
xor
xlat
or
shll
sub
cmp
or
cmp
and
repz
push
cmp
xchg
push
mov
test
aam
sar
popa
or
jmp
test
push
cmp
add
jmp
inc
fwait
mov
mov
movsl
jae
lock
adc
hlt
push
mov
sub
rcrl
rorl
sbb
add
aas
scas
pushl
cmc
cld
jg
mov
loop
sbb
pop
push
leave
nop
mov
xorl
jno
add
out
popf
cmp
testb
in
fsubs
rcrl
pop
jno
jge
lock
jne
fmuls
sbb
xchg
mov
and
popa
jno
cmp
cmp
rol
movsl
incl
pop
cmp
nop
jne
jb
loope
fnstenv
xor
jne
adc
mov
sub
and
xchg
sbb
scas
or
sbb
rclb
lcall
inc
push
test
pop
out
daa
xor
mov
xchg
jecxz
mov
pop
jge
stos
pop
testl
cmp
js
pop
add
arpl
mov
mov
sarl
dec
or
jg
outsl
cmp
or
mov
xor
testb
lahf
inc
ret
adc
or
mov
push
fs
xorb
mov
adc
xor
add
btc
es
fiadds
insl
mov
jmp
mov
pop
or
mov
out
outsl
je
loope
jns
stos
sub
stos
sbb
adc
mov
push
inc
xchg
std
leave
inc
arpl
aad
imul
cmp
js
lods
fbstp
add
mov
mov
jp
xchg
dec
push
mov
cmp
scas
mov
decb
inc
mov
cwtl
outsl
fidivs
or
push
cwtl
jmp
mov
rclb
and
enter
push
dec
imul
dec
jmp
sti
sub
jp
fsubs
fdivs
sbb
mov
fstpl
mov
stc
cmp
cwtl
fldenv
mov
sbb
inc
mov
inc
pusha
enter
or
sub
fs
cmp
repz
mov
inc
pop
das
out
cmp
scas
cmp
fstps
mov
in
xor
jmp
fdivrl
inc
and
inc
mov
shlb
fiaddl
cmp
push
pusha
mov
jg
dec
scas
dec
imul
out
test
es
aaa
decl
pop
sbb
mov
testl
pusha
xchg
fcmovnbe
and
xchg
dec
into
ds
mov
sub
push
popf
dec
or
cs
xchg
test
loop
xchg
cmp
pop
je
xchg
fimuls
loop
jge
imul
push
test
push
fimuls
fcomps
mov
sbb
sub
lret
aam
call
and
insl
sbb
ss
popa
shl
and
push
jo
fsubrl
push
ja
and
jmp
mov
push
dec
sub
cs
mov
and
shlb
sbb
sti
push
mov
mov
je
cmp
in
dec
sbb
rcll
dec
xchg
mov
mov
mov
scas
mov
mov
aas
add
pushf
sub
mov
adc
sub
decl
sahf
cmp
inc
or
jno
lods
mov
cmp
loop
in
inc
push
in
sarb
cmpsl
std
cmpsb
stos
bound
push
add
loope
cmp
fdivs
inc
mov
popf
mov
lret
lret
cmpsl
cmpl
or
mov
addb
mov
std
dec
mov
jnp
aas
inc
sub
fiaddl
mov
xor
popf
cmp
xchg
imul
lcall
lret
sbb
or
dec
aad
jnp
inc
fnstcw
in
mov
mov
imul
fldt
fmuls
clc
or
push
imul
out
jl
fists
cmp
loop
add
scas
or
cltd
cwtl
inc
xlat
and
inc
jnp
js
pop
lock
inc
repz
clc
adc
adc
push
scas
pop
jne
pop
sahf
pop
adc
jmp
sti
cmp
call
aam
xor
xchg
mov
mull
jb
hlt
inc
repz
test
mov
pop
jmp
ja
call
cmp
dec
iret
pusha
xor
rcl
test
sbb
xlat
mov
in
rep
jmp
and
orb
jl
out
adc
or
arpl
push
mov
xchg
adc
sbb
mov
ds
mov
add
es
fnstenv
sbb
mov
das
or
mov
inc
pop
in
shrl
jge
or
mov
rorl
pop
jbe
mov
mov
pop
pop
ds
shll
mov
daa
sti
cli
add
icebp
cli
sub
sub
sti
sbb
cmp
dec
out
mov
cmp
in
xchg
mulb
lcall
test
or
or
mov
sub
ss
sub
mov
mov
and
call
mov
xchg
jae
call
mov
loope
es
mov
inc
add
inc
mov
add
xchg
aas
and
push
mov
mov
inc
mov
cltd
aam
ret
cmc
pop
pop
inc
ds
in
in
ret
fbld
dec
aaa
dec
cmpsl
mov
push
int
jecxz
sbb
outsb
and
jl
or
dec
popa
outsl
adc
rcrl
fisttpl
jp
mov
xor
fcom
pop
sub
mov
jne
or
iret
mov
movsb
dec
mov
xchg
push
cltd
ficomps
popa
pop
jne
inc
or
sbb
sbb
xchg
fmul
jg
push
inc
fcmovne
push
push
jp
lds
sub
push
ficoml
ret
lea
dec
jecxz
adc
fidivrl
fisttpl
aad
jp
cmp
xchg
out
sbb
popf
roll
call
loop
and
xlat
push
and
das
outsl
sbb
jbe
sbb
cwtl
sbb
imul
loope
sbb
sbb
mov
fsub
leave
movsl
cmp
pop
add
mov
adc
add
jne
mov
out
jno
adc
fiadds
cmp
mov
pop
adcl
jl
es
pop
ja
cmp
xchg
cmp
js
xchg
mov
xlat
pop
pop
aad
mov
sub
push
dec
xor
addr16
adc
mov
push
mov
pushf
jg
and
push
aad
pop
cltd
push
icebp
push
iret
add
mov
mov
iret
idivl
fisttps
lret
es
sbb
mov
loop,pt
cmpsl
shrb
inc
cmp
loope
push
jecxz
cmpsl
popf
jmp
test
mov
xchg
out
pusha
mov
adc
xorb
aas
add
push
mov
and
rcr
cmp
sbb
cmpsl
add
lods
inc
shlb
or
mov
sub
cvtps2pd
jmp
dec
icebp
lret
nop
frstor
inc
push
cld
sub
and
stos
and
test
jecxz
sbb
sbb
addr16
rorb
xor
mov
dec
pop
movsb
cmp
adc
fsts
dec
add
or
testb
jmp
std
sbb
daa
jo
inc
lods
or
cltd
push
sbb
inc
pop
xchg
daa
je
fdivrs
out
loopne
sbb
lds
mov
shrb
cwtl
cltd
add
in
pop
mov
jmp
lds
das
cmp
adc
test
add
add
push
and
js
hlt
mov
adc
jle
inc
lods
fs
mov
sbb
jecxz
mov
add
adc
sub
inc
mov
xchg
mov
leave
stc
mov
and
test
and
cmp
std
mov
js
inc
jno
arpl
mov
jg
repnz
outsl
mov
js
call
mov
adc
dec
loope
push
shl
sets
xor
shlb
daa
push
test
ja
sbb
iret
hlt
pop
mov
repz
sbb
scas
mov
stc
sub
sub
cmp
jmp
not
push
adc
mov
pop
inc
jmp
ds
mov
out
leave
push
dec
push
fnstsw
aaa
stc
add
aam
lea
ja
out
subl
insb
mov
cmp
out
mov
fisttpl
mov
pop
jmp
fcmovne
outsl
sub
jmp
outsb
fsts
cmc
or
ffree
inc
pop
mov
dec
sbb
adc
mov
bound
shll
in
cmp
fs
dec
adc
aas
push
and
faddp
lea
jb
sub
sub
lods
mov
and
loopne
mov
xor
or
cmp
popa
mov
jg
stc
mov
fwait
jl
pusha
into
mov
mov
xlat
es
stos
loop
and
pop
cmp
jne
jl
ror
xchg
outsb
out
loope
out
sbb
test
push
mov
sarl
movl
mov
pop
fadds
xchg
add
sub
fisubs
aad
add
dec
pushf
clc
les
sbb
dec
loopne
pop
sbb
mov
fiadds
int
decb
cmpsl
enter
lcall
mov
pushf
sub
imul
cmpb
xor
mov
lock
xor
sbb
cmp
cmp
pushfw
sub
mov
sub
es
loopne
leave
mov
xlat
mov
mov
in
push
cmp
jp
test
loope
lods
mov
mov
add
sarb
cltd
inc
cmp
pop
loopne
ret
mov
inc
jns
nop
push
or
inc
test
dec
repz
insl
mov
shl
mov
adc
pop
mov
repnz
adc
jne
mov
xchg
int
and
push
das
int
mov
aam
stos
aaa
cmp
movsb
stos
flds
stc
add
scas
int3
pop
out
stos
cld
in
js
scas
cltd
outsb
out
mov
adcl
and
imulb
mov
jecxz
fidivs
sbb
insl
mov
loop
jnp
out
adc
xchg
cmp
ds
mov
pusha
xor
inc
clc
shrb
mov
pusha
ds
adc
sbbl
imul
dec
negl
mov
not
push
and
in
cwtl
mov
cltd
pusha
lock
arpl
xchg
sbb
lods
inc
jns
lods
inc
cmp
jecxz
mov
out
or
sbb
repnz
hlt
mov
mov
fcmovu
sbb
pop
cmp
cwtl
inc
mov
sahf
jnp
xchg
flds
popa
lods
mov
jp
enter
mov
adc
push
mov
lcall
cmp
cltd
push
sub
aaa
push
les
cmp
inc
movsl
loop
mov
inc
and
mov
mov
ret
or
and
cltd
sub
stos
cmp
jbe
and
mov
pop
mov
adc
mov
mov
pop
mov
mov
daa
fs
js
push
cmp
mov
rcl
push
add
test
loopne
icebp
inc
test
cld
mov
ja
dec
pop
xor
mov
insl
sti
jo
push
dec
daa
les
xor
in
xor
mov
add
mov
jb
mov
sbb
icebp
or
mov
cmp
out
ret
mov
add
and
cmp
jo
add
sbb
cmp
loopne
pop
negl
mov
daa
js
dec
loop
rcr
add
mov
rcll
adc
dec
and
or
cld
add
xorl
sub
test
sbb
idivb
cmp
dec
sub
aaa
inc
dec
mov
jo
mov
mov
fxch
add
neg
mov
jne
push
push
and
xlat
inc
fbstp
jl
addr16
pop
shrl
adc
sub
and
enter
xor
xchg
add
sub
addr16
clc
movsl
add
dec
dec
mov
pop
xchg
jo
and
sarl
movsb
es
jmp
iret
les
mov
push
js
mov
loope
rorb
decb
insl
fdivrs
mov
or
pop
add
out
sbb
dec
jge
popf
jmp
call
sbb
cwtl
sbb
in
jle
jae
imul
mov
ret
outsb
cltd
mov
test
mov
and
loope
push
les
ja
fldl
dec
xlat
pop
out
jg
add
test
and
inc
fucomip
negl
out
pop
mov
loopne
int3
adc
popa
mov
lret
call
pusha
imul
sbb
or
jg
lods
popa
icebp
das
movsl
pop
enter
test
movsb
mov
dec
hlt
ss
xor
icebp
adc
dec
loope,pt
fld
ja
std
xlat
push
pop
adc
cmp
mov
incl
in
ret
or
fisubrl
and
sbb
push
je
mov
shrb
xor
sub
xchg
shlb
dec
pop
movsl
stos
jge
shrb
test
jae
sarb
xor
jne
jae
fistpl
ret
cmp
std
mov
mov
loop
js
jne
adc
jl
mov
cmpb
enter
lods
mov
mov
clc
cltd
xlat
hlt
sbb
cmc
mov
mov
dec
icebp
shl
xchg
xchg
test
mov
and
mov
jnp
add
mov
jge
adc
add
into
sub
adc
and
std
sbb
cmpsl
data16
notl
in
faddl
adc
mov
jmp
mov
cwtl
out
adc
std
and
rorb
add
fistpl
pop
cmp
ror
mov
pop
out
xor
ja
sbbl
xchg
das
cmp
xchg
lcall
and
cmp
xor
fsubrl
sbb
xlat
es
adc
add
pushf
sbb
arpl
add
sti
inc
ss
iret
rolb
jecxz
jl
sbb
popa
cmp
xor
les
xorb
stos
push
jnp
pushf
fnstenv
inc
hlt
pop
lods
dec
jecxz
mov
mov
pop
aam
cli
cmpsb
sbb
jmp
dec
pushl
stc
adc
inc
fmuls
lahf
cmc
bound
adc
frstor
push
into
xlat
lahf
xor
popa
sbb
clc
aaa
jnp
adc
ds
and
pop
xchg
xlat
iret
addr16
and
jne
les
mov
das
daa
arpl
data16
ds
xor
enter
mov
std
sarl
pop
pop
xchg
movsl
arpl
adc
push
mov
imul
fstps
pop
insl
xchg
stc
mov
sti
mov
mov
clc
les
mov
mov
sbb
out
cmpsl
sbb
into
dec
cmp
imul
pop
insl
cmp
pop
out
aam
mov
frndint
test
cli
nop
jmp
jl
mov
outsb
mov
cli
loop
jmp
mov
sbb
xor
in
adc
lods
repz
push
jp
xor
dec
xor
mov
dec
test
arpl
popa
xor
pop
insl
jl
mov
or
stos
scas
aas
push
lahf
lret
ljmp
bound
nop
jb
jecxz
xchg
mov
mov
fsubp
les
mov
sub
cmp
push
mov
sbb
cltd
add
pop
ds
rolb
lret
inc
sbb
cmp
push
mov
pop
add
adc
or
sbb
push
jnp
rcrb
jmp
jle
ja
and
aas
insb
push
fs
cld
lcall
ljmp
xor
push
negb
les
mov
cltd
sub
lcall
inc
les
add
shl
adc
lret
cmp
mov
popf
and
pop
cmp
jo
mov
data16
fcmovu
test
scas
lods
cli
addl
repnz
xor
dec
shlb
out
pop
test
mov
sub
jle
add
sti
or
leave
mov
loope
bound
lahf
divl
jp
sbb
es
bound
fnsave
add
sbb
std
mov
pushl
pusha
mov
shrb
sub
mov
call
jns
in
inc
cwtl
sbb
pop
mov
std
jns
fwait
mov
arpl
xchg
mov
cmc
or
mov
mov
adc
cmp
xor
sub
fnstenv
sbb
aas
andb
sar
sbb
rorl
dec
cmp
repnz
jae
adc
rcr
pop
and
pop
mov
sub
pop
stc
pop
lods
adc
pop
inc
mov
popa
lods
fcmovnbe
test
adc
mov
sbb
enter
sub
sahf
jp
mov
movsl
ss
arpl
and
addr16
in
mov
jns
lods
and
mov
shlb
sub
mov
stos
and
pusha
test
lods
in
scas
pop
sub
cmp
dec
xor
mov
inc
icebp
lcall
fsts
loopne
mov
jae
out
jmp
jmp
mov
jmp
cmc
rolb
and
jp
sbb
ds
add
adc
mov
push
sub
bound
pusha
pusha
adc
ja
aas
push
arpl
leave
cli
data16
fstp
je
inc
pop
dec
loope
imul
xchg
adc
aas
std
dec
inc
inc
mov
jae
loope
jmp
sbb
cmp
aad
or
inc
sbb
stc
cmpl
rolb
cmp
popf
jmp
jecxz
pushf
mov
cmp
lret
filds
cwtl
mov
stos
xor
scas
mov
mov
cmp
cmp
mov
mov
addb
stos
fnstsw
push
and
stos
fnstsw
stc
cmp
test
sbb
adc
cmpsl
shl
cltd
pop
sub
mov
out
sbb
sbb
dec
jecxz
mov
jmp
push
push
std
out
addr16
insl
je
cs
mov
jo
idivl
mov
jns
mov
push
hlt
fcmove
jp
cmp
divl
dec
cld
mov
std
pop
push
cmp
imull
in
mov
dec
loopne
test
mov
xlat
mov
mov
shrl
lret
dec
or
sbb
or
jecxz
clc
test
xor
sub
pop
mov
test
scas
sbb
dec
or
sahf
push
mov
fisubl
jno
pop
test
ja
loopne
jnp
dec
stc
fstpl
xchg
push
mov
mov
mov
leave
dec
leave
mov
sti
cmpsl
stc
add
cmp
sub
jno
popa
inc
mull
sbb
or
cmp
sbb
sub
xchg
sub
jmp
test
subb
ljmp
sbb
mov
sbb
xchg
loope
decb
jnp
cmp
fsubl
sbb
xor
mov
mov
add
in
cmp
sbb
lret
jmp
loop
xlat
inc
xchg
pop
addr16
pushf
adc
mov
int3
cltd
pushl
loopne
xchg
adc
popa
inc
jp
xor
jl
mov
dec
out
lds
hlt
and
ret
dec
ret
cmc
mov
hlt
insb
icebp
and
cmp
mov
xor
rorb
cmp
inc
sbbb
cmp
je
sbb
xor
frstor
cmp
fs
mov
adc
xchg
mov
stc
mov
dec
xor
out
adcl
pop
cld
and
js
aaa
daa
push
sub
cmp
mov
fmull
scas
arpl
dec
sub
and
xchg
imul
std
js
shr
cwtl
jge
outsl
or
mov
dec
fisubs
js
ret
dec
xchg
mov
dec
test
in
mov
sar
cmc
repnz
stos
jb
sbb
pushf
jae
xor
cmp
dec
pop
push
cmpsb
push
pop
dec
mov
mov
mov
test
push
negb
mov
add
aad
movsl
mov
or
jge
adc
adc
adc
nop
and
adc
idivb
in
cmp
dec
dec
push
shlb
xor
jo
push
dec
xchg
cmc
ja
in
in
sub
mov
aad
sbb
in
stos
ljmp
mov
cld
das
sti
icebp
push
cmp
cmpsl
jg
sbb
mov
xlat
enter
outsl
mov
inc
adc
sbb
test
pop
dec
cmp
enter
mov
sub
daa
mov
adc
inc
in
test
pop
xchg
outsl
add
push
sbb
xchg
mov
repnz
ljmp
lea
cltd
ljmp
cltd
cmp
mov
pop
pop
loope
or
fcomps
hlt
and
or
lods
xor
fsubs
aad
loopw
xchg
stc
cmp
dec
push
data16
adc
call
mov
repz
xor
mov
cmp
fs
add
mov
nop
add
addl
test
shr
xchg
arpl
mov
push
lahf
pop
cmc
mov
cltd
mov
lds
inc
sub
arpl
cmp
ja
mov
and
dec
jp
popa
mov
popa
jmp
pop
adc
out
inc
cmp
call
lcall
stos
pusha
pop
icebp
incl
inc
ret
cmp
out
call
shrb
jne
sub
sbb
popa
adc
in
popa
adc
adc
fstpt
mov
fs
xor
stos
xor
cmpsb
sub
roll
xlat
mov
pop
mov
xchg
cmp
and
dec
push
dec
sub
iret
cld
adc
push
xor
fcoms
add
lea
mov
jge
shrl
mov
imul
mov
mov
imul
cmpl
push
mov
rcr
pop
mov
enter
xchg
inc
sub
out
cmp
out
cs
cmp
mov
xchg
sahf
roll
pop
push
test
inc
in
nop
test
xlat
aad
push
mov
sub
sahf
mov
into
data16
and
or
cmp
idivb
shrb
xchg
test
cmc
leave
mov
and
inc
or
mulb
shlb
fimuls
mov
stc
fst
ja
dec
adc
loop
pop
sbbb
fisttpl
test
sbb
aas
fdivrl
push
insb
test
arpl
aaa
adc
push
enter
cmp
cmp
jle
mov
shll
repz
mov
mov
lcall
mov
scas
mov
xchg
inc
jge
aad
xchg
dec
imul
sbb
mov
rclb
adc
pop
xchg
cmp
pop
jo
outsl
xchg
adc
test
inc
jecxz
pop
cmpb
or
jo
push
arpl
and
mov
pop
adc
dec
inc
push
popf
movb
sub
cwtl
mov
pop
mov
cmp
mov
ja
sahf
addr16
or
std
and
xchg
pop
not
adc
test
enter
or
jne
cwtl
ljmp
inc
in
and
out
mov
sub
dec
mov
xchg
scas
test
mov
adc
hlt
pop
nop
cmp
test
pop
or
push
scas
dec
adc
imul
lret
mov
je
mov
leave
dec
fucomip
cmp
jne
arpl
int
clc
stos
xchg
sub
inc
aaa
add
call
call
cmp
xor
gs
sbb
jo
jns
dec
lcall
mov
inc
dec
xor
cmp
pop
enter
cmp
xor
and
fdivrl
cmp
dec
fcomps
js
popa
push
jo
ljmp
data16
mov
loop
sbb
loopne
pusha
sbb
inc
test
add
mov
out
andl
add
sub
pop
arpl
and
lods
fstpt
mov
sbb
test
cmp
cmp
out
cmp
sahf
sbb
pop
xor
jge
leave
and
dec
fcmovnb
idiv
push
push
inc
ljmp
sbb
notl
jns
aam
loop
pop
push
arpl
repnz
or
or
push
fstps
shl
pop
mov
addr16
and
inc
std
mov
mov
dec
sbb
mov
addr16
jg
xor
jo
std
mov
jbe
lock
jl
jl
mov
sub
push
ds
loop
cltd
and
inc
mov
loop
shlb
xchg
jbe
in
pop
dec
mov
or
div
sub
std
mov
mov
insl
mulb
fcompl
rorl
cmp
add
stos
push
cmp
test
jl
mov
in
test
jle
insb
call
rcrb
jae
xchg
and
mov
aam
lahf
and
push
jo
dec
enter
cmpsb
imul
inc
lods
inc
and
imul
dec
lret
mov
cwtl
mov
and
mov
dec
cmp
enter
sbb
mov
jb
fs
pop
inc
fisubrl
push
xchg
lcall
add
xchg
and
mov
sahf
mov
cmp
mov
sarb
push
pushf
push
and
mov
movsl
lods
cmp
les
xchg
and
ficompl
rol
pop
movsl
adc
cltd
dec
data16
xor
aas
cmp
push
fisubl
cs
and
pop
mov
cmp
dec
jmp
inc
outsb
pop
mov
pop
pushf
mov
fstl
mov
dec
hlt
inc
pop
insl
adc
pop
mov
mov
push
es
or
rcrl
adc
addr16
subb
lahf
pop
cmp
pushf
cmp
pusha
inc
in
mov
mov
bt
cmp
adc
jecxz
insb
test
jo
pop
push
out
adc
lea
out
adc
adc
movsl
inc
movl
mov
jmp
inc
fbstp
fucomip
mov
jmp
mov
daa
adc
dec
sbb
mov
cltd
loopne
test
popf
xchg
jae
negl
push
dec
cmp
pusha
lods
xor
and
lcall
out
mov
and
orb
jg
xchg
pushf
xor
jp
cmc
jo
jb
or
sub
pop
lret
test
stos
adc
pop
ds
stc
jge
sbb
out
addr16
dec
add
lock
pop
leave
in
arpl
sbb
jmp
enter
rolb
pusha
inc
sub
inc
std
std
filds
xchg
fistps
ja
cmp
pop
xchg
stos
fcompl
push
rcl
loopne
js
pop
mov
sahf
dec
pop
aad
decl
pop
es
call
xchg
mov
inc
sbb
mov
outsl
dec
mov
icebp
es
jo
xor
adc
je
cmpsl
dec
fistpll
ja
repz
aaa
or
sar
es
and
pop
dec
and
out
jne
dec
inc
sbb
mov
test
movsl
daa
leave
and
sti
orb
pop
fldt
adc
bnd
add
out
stc
cmc
xchg
incl
dec
mov
or
aas
pop
int3
and
pop
mov
leave
and
and
in
into
push
scas
pop
call
shrb
cmp
fbld
daa
mov
rol
stos
xchg
inc
or
je
daa
and
push
lret
mov
xchg
pop
mov
gs
lock
cld
or
xchg
jne
insb
jns
lea
aad
mov
mov
mov
lea
or
movsb
imul
push
push
inc
pushf
lock
ss
fbld
popf
sub
lds
pop
xchg
fnstcw
stos
loopne
sub
mov
push
and
add
mov
xlat
icebp
pop
es
inc
push
mov
pop
push
rcrb
or
inc
roll
popf
xchg
pushf
and
les
jae
movsb
push
sti
cltd
mov
outsb
inc
loop
lret
mov
stos
mov
lahf
rclb
cmp
gs
es
xchg
sub
ret
scas
sbbb
rcrl
mov
add
loopne
loop
jae
fadd
pusha
dec
arpl
movsl
aad
dec
push
js
jp
loop
icebp
stos
fldenv
pop
xchg
cmp
repnz
bound
loopne
dec
jp
and
ret
cmp
push
xchg
cmp
sarl
dec
pop
aas
xchg
stc
sbb
std
nop
loopew
loopne
xchg
mov
dec
mov
std
inc
or
lret
stos
test
fadd
cmp
push
xchg
pop
push
jno
cmp
cmp
mov
jecxz
aaa
adc
cmp
xor
roll
add
jns
dec
adc
jp
lea
pop
adc
cmp
fwait
dec
movsl
add
loopne
nop
inc
inc
test
fmul
push
in
inc
adc
jne
lret
sub
mov
jb
pop
or
aaa
int
fistpll
cld
pop
call
addl
andl
and
mov
xchg
es
aam
sbb
scas
loopne
stos
enter
fisttpll
cmp
cmp
dec
movsb
mov
jl
push
pop
inc
jge
xchg
and
pusha
ss
enter
lods
cmp
popa
in
adc
mov
insb
sub
xor
sbb
negl
and
xchg
mov
push
sub
iret
mov
pop
inc
cld
jmp
sbb
adc
adc
mov
leave
fwait
rolb
xor
adc
imul
cmpsl
clc
popa
inc
int
stc
pop
fdivl
aad
cmp
sbb
addr16
cmpsl
pop
cmp
subb
cwtl
cmp
fbld
in
xchg
mov
or
cmp
fxch
jnp
or
pop
stc
adc
std
mov
cmp
loope
pop
inc
cmp
sbb
mov
cld
lret
add
sti
mov
nop
fucomip
fiadds
mov
mov
loop
int3
sub
pop
dec
and
testb
push
rolb
andl
push
mov
mov
mov
cmp
arpl
outsl
sbb
fdivrl
out
out
test
popa
pop
iret
mov
dec
mov
dec
lds
dec
mov
push
cld
mov
sub
cmp
rcrl
or
sbb
xchg
xor
pcmpgtd
cld
filds
jcxz
adc
ficoms
ds
pusha
fbstp
jmp
xor
rcrb
mov
mov
popf
sbb
aam
pop
jno
cmpsl
cld
daa
ss
int
pop
fcom
pop
cld
iret
sub
ror
mov
dec
lods
stc
add
pushf
aad
incl
cmpsb
ficoml
lahf
dec
jns
mov
pusha
xchg
pop
sbb
repz
jmp
gs
enter
pushl
xchg
cmovp
dec
mov
movq
xchg
jnp
mov
cmp
or
aam
fmuls
popa
xchg
sarb
pop
loopne
divb
add
or
testl
jo
ds
and
loop
add
inc
mov
mov
shll
inc
pushf
pop
inc
xor
add
xchg
inc
std
nopl
mov
push
ljmp
sbb
iret
jp
xchg
adc
or
mov
push
out
std
mov
dec
fisttpll
dec
xchg
jecxz
mov
cmp
mov
je
das
icebp
data16
sbb
or
adc
mov
jp
fwait
mov
xor
sbbb
mov
test
ja
fisttpl
daa
insb
xorl
dec
shll
add
jge
xor
mov
shlb
jns
and
imul
xchg
clc
pushf
adc
mov
arpl
push
inc
add
pop
xchg
loop
or
mov
iret
xchg
xor
fistpl
ret
testb
cmpsb
inc
dec
or
cmc
enter
sub
popf
jne
addr16
mov
sarb
call
jbe
xlat
inc
jp
ja
popa
addr16
inc
test
dec
lds
stos
pop
test
jp
leave
fwait
mov
xlat
outsb
fsubrp
popa
pop
cmp
addl
int
call
mov
mov
rcr
sbb
jl
in
push
mov
movsl
ja
ret
dec
and
dec
repnz
daa
add
int
inc
jg
int
in
inc
jno
mov
je
popf
inc
bound
add
xor
stos
in
cmpl
inc
test
insl
mov
rcrb
movsl
xor
loopne
stos
out
inc
stos
sbb
lods
ret
test
xor
andl
test
mov
sbb
sub
pop
out
stos
mov
andb
loopne
or
fistl
cmp
cmp
outsl
inc
fcmovne
push
mov
test
je
cmp
push
push
addr16
aas
test
or
adc
mov
imul
mov
dec
inc
mov
mov
ficompl
es
push
leave
addr16
fbld
inc
popf
dec
ds
mov
mov
subb
inc
add
test
jp
ja
or
ja
xchg
fdiv
mov
dec
mov
or
icebp
iret
cs
cmp
jmp
and
out
cmc
out
test
lock
sbb
mov
pop
sub
mov
inc
adcb
cmpsb
and
outsb
cmp
jp
hlt
or
imul
rcrl
xor
lods
arpl
mov
mov
data16
xchg
addr16
stos
or
popf
xor
lock
inc
test
mov
fdivs
inc
jo
inc
lret
pop
insb
xchg
jl
adc
rcl
xor
out
push
addl
mov
cmp
movsl
insl
or
mov
or
push
stc
imul
cmp
sbb
imulb
pop
mov
pop
dec
dec
mov
cmp
cmp
int3
call
mov
adc
mov
fisubrl
lcall
leave
mov
or
xchg
jg
popa
ljmp
scas
and
sbbb
outsl
sbb
mov
jg
add
incb
xor
sbb
mov
sub
ljmp
pushf
sbb
int
cli
xchg
jmp
rorl
jecxz
leave
dec
iret
je
dec
daa
mov
aas
jecxz
push
sub
add
push
test
or
ret
xchg
fimuls
mov
outsb
mov
lcall
repnz
xchg
jnp
mov
sbb
fistpll
add
mov
add
jne
mov
and
popf
cmp
das
ljmp
cmp
fidivrs
fstpt
mov
lret
mov
jmp
hlt
mov
sbb
add
stos
pop
imul
adc
push
mov
xor
or
lock
scas
in
loopne
pop
popa
jb
lods
xlat
in
iret
sarl
aad
cld
inc
cmpsl
int3
aad
jbe
sub
les
push
cmpl
outsl
pushf
jne
insb
std
sbb
dec
rcrb
testb
sbb
mov
sbb
inc
sar
sub
enter
repz
stos
fs
addb
repnz
mov
cltd
jne
push
push
aas
pushf
pop
ret
fiadds
or
addr16
mov
cmp
ds
stos
sbb
movsl
cmpsb
out
shl
test
push
pop
rolb
and
pushf
mov
sbb
flds
lret
jmp
movsb
in
lret
jecxz
jbe
lret
ret
jge
dec
and
add
and
shll
mov
pop
rolb
sbb
pop
ja
xchg
dec
mov
inc
or
aad
pushf
out
mov
test
movsl
notl
arpl
aaa
add
dec
enter
cli
mov
cmp
or
sbb
aas
test
cmp
dec
dec
mul
dec
call
xor
sub
clc
icebp
inc
dec
fnstsw
js
shrl
test
push
cmpsb
xchg
lcall
mov
adc
ds
mov
repz
in
mov
dec
ds
jmp
xorl
cmp
xchg
sbb
mov
sub
ror
adc
cmp
fstpt
leave
popa
nop
ret
pop
inc
inc
cmpsb
mov
dec
cld
xchg
mov
cmc
mov
sbb
xor
aas
add
push
xchg
test
inc
in
stc
sbb
pop
iret
in
cmp
je
testb
cmp
add
mov
pop
sub
mov
mov
mov
sbb
xor
js
pop
insb
mov
or
mov
out
sbb
xchg
mull
push
xor
mov
js
add
int3
js
cmp
mov
jg
inc
mov
jecxz
fists
push
pop
decl
js
dec
cmp
scas
jb
sbb
js
jp
adc
cmp
aaa
and
aas
sbb
mov
jne
mov
jecxz
xchg
and
aam
idivl
sub
es
aas
mov
sub
nop
mov
aaa
cmp
and
nop
lods
ds
push
jmp
jecxz
mov
sub
dec
pop
cmp
lea
cld
fiaddl
mov
loop
cmpsl
push
cmp
add
xchg
jb
stc
and
cltd
mov
std
sbb
adc
or
mov
cmp
lds
push
adc
xchg
lret
inc
mov
and
ret
mov
sbb
cltd
rcll
mov
adc
sbb
rclb
je
xchg
stos
decb
pop
rolb
lock
std
jbe
cmpsl
add
hlt
imul
add
sbb
push
mov
or
stos
cmp
and
and
pop
push
iret
imul
add
push
cmp
jno
sbb
std
adc
stos
xchg
inc
jnp
inc
mov
or
rorb
cmp
cmp
jl
stc
sbb
inc
aas
inc
push
cli
fsubl
cmp
mov
dec
sub
mov
jmp
ret
sbb
adc
inc
jo
jmp
sbb
in
cmpsl
loope
pop
aaa
out
aas
mov
jmp
test
sbb
mov
orb
jns
stos
sbb
ja
jb
loopne
stc
cmovl
rorl
and
arpl
loope
mov
imul
jp
mov
sub
out
sbb
xlat
dec
cld
test
rcr
test
xchg
negl
js
cwtl
aam
and
mov
mov
mov
mov
push
jne
clc
sbb
add
xor
ljmp
movsb
xor
adc
or
out
adc
or
fnstenv
and
cmp
xchg
inc
mov
imul
fsubl
sbb
mov
xchg
fmul
pop
or
stos
sub
jb
sbb
add
shlb
jmp
or
test
cmp
leave
pop
mov
fdivr
fcmove
mov
mov
std
xor
inc
inc
sbb
sub
cltd
jmp
stc
dec
test
out
pop
cltd
jmp
adc
call
jnp
cmp
mov
cwtl
dec
sub
mov
nop
cmp
daa
incl
cmp
bnd
in
fs
nop
sub
popf
pop
inc
mov
dec
jl
mov
cmpl
fdivl
and
std
je
sub
sub
mov
xchg
mov
mov
pushf
mov
mov
mov
xor
add
andl
add
jle
stos
cmpl
frstor
sbb
mov
sub
mov
bound
inc
mov
sar
mov
js
adc
adc
pop
fildll
lods
inc
push
test
les
sahf
inc
stos
sarb
mov
shlb
stos
mov
aam
data16
cmp
lds
xchg
into
cmp
push
js
fyl2xp1
cmp
and
sbb
push
and
adc
add
in
imul
popf
shll
fists
cld
mov
mov
jp
jb
inc
mov
adc
lret
mov
or
add
ja
int
inc
and
xor
sub
sbb
jne
push
dec
cmpl
mov
sbb
sbb
add
add
pop
push
mov
sarb
pop
mov
adc
xchg
push
cmp
mov
adc
add
mov
negb
out
mov
in
stos
mov
adc
clc
inc
call
lods
shlb
lods
scas
sub
jl
or
movsb
sub
cmp
xchg
xchg
loopne
out
cld
lea
sarb
cmp
sbb
jns
cltd
inc
sub
cmp
inc
mov
fisubs
roll
sub
mov
add
iret
inc
sarl
mov
jns
mov
rol
adc
jno
and
orl
mulb
hlt
into
std
pop
mov
inc
cld
pop
fnstcw
jp
std
test
mov
sbb
pop
idivl
cwtl
aam
sbb
fdivs
push
push
mov
shlb
cmp
mov
fcom
ror
cwtl
fcoml
or
add
inc
sarl
mov
fcmovbe
pop
mov
cmp
mov
cmp
ror
xchg
jb
xor
xchg
sub
iret
rcrl
or
test
std
mov
mov
cmp
pop
mov
leave
xchg
pop
mov
cs
adc
or
cli
xchg
cmc
jmp
data16
or
pop
rorb
mov
dec
jl
cwtl
std
mov
mov
mov
sub
cmp
and
mov
sbbl
testl
cld
rcr
cmp
outsl
and
sbb
push
dec
popf
aad
loope
shlb
jge
ljmp
dec
out
xor
dec
cli
mov
push
and
lods
mov
addl
mov
fisubrl
outsb
cmpb
add
ds
add
mov
or
mov
clc
mov
mov
daa
pop
cmp
dec
data16
adc
adc
mov
pop
mov
cmp
and
and
data16
test
pop
and
jecxz
push
fistpll
rcl
enter
jge
or
sub
and
sarb
loopne
cli
mov
std
mov
fstpt
test
mov
add
mov
dec
dec
jns
bound
les
dec
push
pop
repz
cmp
iret
mov
mov
push
mov
call
mov
pusha
jns
pushf
sub
loope
mov
or
inc
ret
mov
lret
sbb
icebp
mov
mov
mov
cmp
pop
add
test
and
mov
xchg
or
and
sbb
stc
mov
int
or
sub
stos
stos
sbb
sub
stos
pushf
mov
adc
dec
ds
enter
adc
jle
aas
nop
and
push
mov
mov
cmp
inc
or
insb
push
stos
cmp
rorb
cmc
out
or
fnstcw
inc
or
sub
or
cmp
sub
xchg
jg
aaa
incb
mov
stc
cmpb
jle
sub
and
dec
and
rol
loope
data16
in
movsl
mov
mov
sbb
cmp
cmp
imul
pop
push
xlat
mov
iret
mov
mov
cmp
movsb
mov
xor
cmpb
sbb
out
cmp
iret
divl
cli
shll
mov
xchg
shll
testb
loope
xchg
mov
dec
ja
and
stos
sub
sub
push
lods
pop
cltd
add
fs
cs
inc
sub
scas
lds
xchg
xor
mov
lcall
jbe
mov
cltd
sub
xorl
fsubr
ljmp
xchg
test
hlt
clc
or
cmp
and
mov
out
stos
jp
lcall
or
mov
aam
sub
orl
mov
jnp
cwtl
mov
clc
or
pop
arpl
cmp
sbb
adc
dec
cmp
cmp
test
sbb
in
adc
or
data16
mov
shrb
div
sub
sbb
int3
mov
mov
add
cltd
ja
mov
iret
hlt
sbb
mov
ret
icebp
push
cmp
jb
fcoml
leave
sbb
push
sbb
or
cli
jmp
jne
fstpt
and
js
pop
lods
pop
divb
ffreep
scas
mov
push
cld
cmp
cmp
cmc
hlt
sarb
jp
scas
sbb
adc
mov
xorl
mov
sub
mov
dec
jnp
xor
hlt
cmp
mov
inc
hlt
mov
or
sti
jno
dec
icebp
xchg
stos
lods
cltd
stc
mov
sbbl
int3
mov
sti
cmpl
push
mov
sarb
mov
mov
cmp
cmc
pop
test
dec
sti
xchg
fs
or
mov
fcompp
mov
cmp
shlb
add
flds
loopne
pushf
clc
js
dec
mov
push
mov
shl
in
lcall
pop
out
mov
cmp
mov
out
inc
adc
jmp
sbb
or
xchg
enter
cmp
stos
mov
leave
mov
push
pop
jne
push
out
mov
and
push
dec
pushf
cmp
mov
or
test
inc
fstpt
fcom
sbb
out
jmp
mov
fcom
faddl
mov
push
ret
adc
jo
jns
and
inc
and
inc
jbe
mov
xor
inc
inc
sub
or
mov
stos
out
cmp
mulb
fwait
mov
and
cli
mov
scas
int
jp
and
sbbb
fcom
or
std
stc
cmp
adc
idivl
lock
adc
daa
jl
dec
stc
push
cmp
mov
cwtl
lods
clc
xchg
mov
jns
mov
mov
inc
jno
inc
xlat
js
sub
sbb
xchg
js
bound
bound
push
loopne
and
jmp
les
jg
pushf
and
jo
mov
sbb
mov
mov
add
jmp
mov
mov
fsubr
mov
clc
enter
loop
je
int
jp
stc
cltd
icebp
fcmovnb
xchg
pop
ret
cwtl
out
repz
scas
dec
adc
push
xor
mov
jnp
or
adc
pop
sbb
out
xor
flds
xchg
sbb
notl
push
fs
lods
callw
push
cmc
fcmovnbe
cmp
cs
jmp
repnz
cltd
push
xor
cmp
repnz
data16
lock
push
push
mov
cmp
lret
imul
addr16
sbbb
lcall
xlat
loope
and
test
aaa
iret
mov
repz
hlt
push
xor
inc
cmp
fsubr
fdivs
mov
out
inc
and
stc
out
lock
push
xor
adc
scas
mov
jg
pop
out
arpl
xlat
scas
loopne
sbb
aam
xchg
cli
ljmp
pop
and
dec
insl
in
lods
stos
add
pop
lcall
add
xor
movl
cld
int3
mov
cmp
in
arpl
fldcw
cmp
cwtl
pusha
jbe
sub
mov
inc
stos
leave
iret
in
and
add
or
movaps
iret
and
pop
enter
mov
jo
cltd
lret
mov
out
sub
mov
aas
dec
fisubl
std
and
mov
xchg
lcall
jl
mov
popf
and
ret
inc
cmp
sub
cmp
xchg
gs
xchg
pop
shll
iret
pop
sbb
inc
fdivl
ja
push
ss
xor
cmp
testl
cmpsb
pusha
cmp
aas
sbb
aam
fsubrl
push
enter
mov
sbb
pop
mov
push
inc
not
add
push
cmpsl
stc
mov
push
mov
add
jne
outsb
shr
lds
inc
pop
mov
mov
mov
imul
stc
stc
mov
fnstcw
mov
mov
movsb
jo
adc
xchg
hlt
orb
shrb
mov
push
cmp
fstl
decb
mov
fnstcw
inc
jbe
adc
stos
mov
add
push
pushl
int
loope
lret
xchg
mov
add
mov
sarl
cltd
mov
sbb
imul
les
mov
xchg
mov
rcrl
dec
sub
repnz
ljmp
push
pusha
lret
loope
mov
fstl
dec
cmc
ret
mov
enter
mov
cmp
push
icebp
test
in
repnz
or
cmp
inc
mov
add
nop
push
mov
cmp
adc
sub
fadds
adc
orl
iret
daa
xlat
popa
addb
imul
ds
leave
mov
mov
xor
sbb
lds
mov
inc
clc
ss
cmp
out
xor
jge
clc
mov
arpl
and
jmp
mov
rorb
adc
mov
pop
mov
xchg
loop
test
stc
mov
lahf
or
fstpt
add
or
jp
pushf
popf
xchg
sti
lods
pop
mov
cmp
fcoml
push
cmp
jae
out
mov
test
stc
aaa
sbb
cmp
jns
pop
mov
add
lock
cmp
mov
faddp
mov
xlat
mov
ss
lods
inc
dec
filds
call
mov
popf
adc
loopne
movsl
fs
cmp
inc
mov
mov
xor
cmp
mov
mov
xor
cmp
sub
shrb
out
add
sbb
sbb
mov
xor
jmp
jp
popa
movsb
sub
je
stos
mov
fimull
mov
divl
and
cld
repz
mov
xchg
fwait
mov
ret
mov
ret
mov
ret
xor
xor
cmp
lahf
inc
test
mov
leave
xchg
cld
dec
mov
pop
jle
loope
icebp
push
fwait
in
inc
clc
inc
adc
sarl
mov
pop
and
pop
fcomi
insl
outsl
in
lret
xlat
pop
cwtl
nop
clc
xchg
lods
sub
push
stc
mov
xchg
out
sub
loopne
xor
jecxz
cmp
mov
rcrb
sbb
push
fwait
pusha
scas
xor
mov
mov
mov
mull
out
mov
dec
bound
mov
or
mov
cs
add
iret
add
cli
mov
faddl
sarb
ret
out
lret
mov
mov
gs
jns
cmpsl
adc
and
movsb
cmpsl
and
xchg
stos
repz
ljmp
lds
mov
sti
test
xor
jns
inc
sub
out
movsl
call
mov
sbb
sub
mov
dec
lret
pop
call
add
cli
andl
ret
push
iret
cmc
bound
sbbl
js
stos
push
push
loopne
pop
mov
popf
arpl
add
shr
aad
jnp
jae
add
inc
inc
hlt
inc
out
mov
pop
xchg
loope
ja
mov
sub
mov
add
adc
ficomps
call
es
aas
cltd
dec
stos
aam
pop
movsb
sub
mov
or
out
dec
pushf
mov
movsl
popf
adcb
mov
sbbl
out
movsb
and
mov
pop
movsb
mov
movsb
cmp
mov
clc
popf
pop
and
adc
test
and
mov
xor
clc
nop
pop
cmp
ja
stos
xchg
stos
hlt
and
pop
pop
adc
out
inc
cld
or
iret
inc
sbb
inc
and
cmp
aam
arpl
fdiv
fnstcw
cmpb
lods
inc
adc
ds
in
or
mov
nop
ja
loop
into
cmp
lret
add
or
fldcw
inc
and
fldl
cmpsl
sub
cltd
scas
push
xor
and
std
adc
xchg
ror
fcmovnb
stos
cmp
in
in
xor
push
loopne
loop
in
mov
gs
mov
inc
stos
jo
pop
jns
es
or
in
pushf
mov
cmp
mov
and
and
js
bound
jo
pusha
imul
pop
cmp
mull
das
jl
arpl
mov
in
data16
mov
adc
dec
jl
fmul
pop
rcr
or
inc
fsubr
add
push
push
jecxz
enter
adc
ss
dec
mov
adc
sbb
mov
mov
mov
ss
jno
mov
in
pop
ffree
jecxz
int
negl
cmp
mov
enter
push
mov
mov
push
cmp
pusha
pop
pop
ffree
mov
loopne
arpl
rcrb
and
icebp
jbe
cltd
bound
xchg
mov
and
cmp
sub
les
out
adc
xchg
ret
cmpb
xor
mov
cmp
cmc
cmp
aas
imul
cwtl
sbbb
mov
push
shll
movsb
xor
or
shrl
mov
pop
sub
cmp
scas
dec
jg
sbb
mov
cmpsl
or
mov
jl
ss
cmp
pop
sahf
int3
mov
mov
pop
dec
shlb
jns
xor
sbb
mov
inc
pop
sbb
add
pop
sbb
sub
call
dec
push
sub
enter
mov
enter
sbb
ds
popf
std
hlt
lods
dec
int
add
sub
or
enter
mov
in
orl
sub
out
add
pop
mov
test
aaa
idiv
adc
arpl
test
lcall
mov
inc
arpl
jne
jmp
sub
pop
popf
mov
mov
fdivs
stc
addr16
xorps
pop
lods
imul
and
sub
ja
lock
lods
js
mov
add
add
ret
mov
daa
ret
movsb
cmpb
imul
nop
adc
lods
pop
in
pop
or
xor
hlt
and
mov
loop
pop
fstl
sbb
enter
dec
imul
or
push
popf
enter
inc
mov
cli
add
push
adc
mov
mov
mov
lret
cmp
ljmp
jne
scas
inc
stos
adc
xchg
adc
or
repnz
stos
ret
push
lahf
or
mov
scas
add
stc
movsb
je
mov
mov
and
cmp
xor
pusha
jl
jmp
jne
stos
cmp
mov
repz
pusha
js
sub
xor
or
in
sbb
sti
loopne
sub
cs
cmp
or
sbb
xor
pop
insl
add
fiadds
and
mov
bound
test
adc
mov
sarb
insb
fs
mov
jo
fmull
lahf
mov
dec
sbb
xchg
ds
push
leave
cltd
int3
sarb
mov
cmc
cmpsl
in
testb
pusha
jl
inc
sbb
add
enter
pop
daa
jp
mov
pop
mov
dec
sbb
aam
mov
iret
mov
loope
loop
stos
mov
shrb
or
fists
push
lret
pushf
jns
mov
lcall
enter
outsb
movsl
cltd
jecxz
jle
inc
leave
pop
jbe
leave
xor
clc
repz
inc
js
and
scas
ret
sub
btc
es
or
rcll
and
cmp
and
nop
ret
xchg
xor
loop
mov
dec
data16
jecxz
jmp
inc
cmp
lds
loopne
and
sbb
mov
call
scas
push
cwtl
xchg
jge
dec
mov
pop
xchg
cmp
sub
push
jmp
and
push
jle
cmp
inc
stos
lea
cmp
cmp
jl
rorb
cmp
pop
jne
addr16
mov
fsubrl
shrb
mov
dec
mov
aaa
mov
int
or
pop
loopne
and
ja
jp
jae
cmp
push
cmp
gs
cmpl
jecxz
and
cmpsb
lods
ds
jne
add
test
push
sarb
pop
push
es
push
js
pop
mov
inc
mov
pusha
arpl
je
addl
pusha
sahf
add
sti
inc
lea
inc
or
ds
mov
xorb
outsb
mov
bound
lahf
and
sbb
and
mov
push
jle
cmpl
mov
aad
cmp
cmp
sub
mov
mov
mov
lock
pop
std
shr
rcrb
loopne
pop
lret
inc
cmp
inc
inc
sub
loope
nop
vpmaxub
ds
mov
clc
sti
cmp
pusha
cmpsl
mov
dec
mov
sub
out
push
shlb
add
insl
popf
cwtl
pop
adc
sub
sub
out
sub
lock
ja
mov
call
mov
sub
fcoml
arpl
leave
in
test
sub
dec
pushf
cltd
jns
ror
jb
dec
enter
repz
ret
pop
inc
cli
sti
sbb
stos
sbb
mov
push
loope
jecxz
movsl
jmp
repz
add
add
mov
sbb
call
andl
sti
mov
sti
jbe
mov
lahf
out
mov
in
loopne,pt
ficoms
movsl
les
ja
outsl
xor
mov
inc
add
inc
add
nop
pop
gs
inc
mov
xchg
cli
cmp
enter
push
push
enter
dec
mov
push
into
enter
mov
shll
pop
sbb
cmp
ret
sbb
repnz
sbb
adc
adc
push
scas
add
sbb
call
jbe
inc
jnp
outsl
and
lods
jns
or
out
sti
sbb
xor
inc
and
rcl
jecxz
inc
sbb
mov
pop
sbb
fisttps
cli
outsb
sub
and
mov
lods
fs
cmpsl
mov
dec
adc
pop
cmp
stc
mov
mov
loop
pop
mov
mov
sarl
data16
incl
inc
xor
sbb
dec
mov
mov
mov
sub
mov
jle
adcb
out
jg
mov
inc
dec
test
aaa
popf
mov
nop
mov
cmpsl
aas
cmp
mov
pop
sub
jae
cvttps2pi
mov
pushf
mov
cmpsl
in
cs
shlb
pop
and
mov
in
or
jmp
mov
aaa
add
aaa
test
xorl
mov
cmp
pop
cwtl
jecxz
or
and
pop
jne
inc
ljmp
add
test
sbb
mov
push
jl
scas
daa
mov
xor
push
jb
lock
lods
imul
repnz
cli
inc
shrl
mov
and
push
inc
mov
jo
push
sbb
stos
ds
lahf
mov
dec
lret
cwtl
xor
inc
shll
jmp
ret
rorl
inc
movsb
xor
out
aaa
dec
adc
movsl
into
mov
mov
sub
pop
cmp
ds
sbb
hlt
mov
cmp
cmp
push
in
fdivs
mov
push
push
jl
inc
mov
shll
xor
fs
add
xor
stc
mov
cld
aas
jg
mov
lods
sub
xor
out
lcall
adc
mov
jmp
sub
push
leave
or
or
fsubrs
pop
aam
inc
cs
sbb
jne
js
mov
scas
pop
leave
add
cmpsb
cmp
bound
fsubrl
mov
pop
cmp
mov
gs
and
xchg
enter
aaa
cmp
fimuls
ja
pop
lods
fsubrl
mov
mov
fisubs
inc
or
pop
sarb
mov
inc
insb
inc
add
cmp
push
inc
cmp
dec
pushf
mov
mov
pushf
mov
adc
adc
or
movsb
mulb
iret
mov
lret
rcll
sub
fstps
loop
inc
negl
xchg
movsb
cmpsb
or
xchg
pop
pop
sbb
pop
xor
pop
mov
jns
jge
xchg
jb
cmp
push
filds
aam
mov
xlat
sarl
fnsave
mov
stc
adc
dec
jl
jmp
nop
pop
mov
les
jns
loope
mov
or
movaps
fistl
cmc
std
add
mov
add
popa
jge
mov
lods
ret
sar
addr16
xor
addr16
cltd
cmc
push
push
sub
sbb
call
mov
icebp
test
fidivl
in
jae
mov
mov
arpl
pushf
addr16
mov
ret
fmull
out
jmp
cmp
pop
jge
jne
psubsb
push
adc
enter
repz
fistps
lret
sub
fbld
cmp
xlat
fstl
push
mov
shlb
pushf
cld
ret
in
mov
orb
lret
push
or
pop
cmp
dec
mov
rol
mov
clc
inc
xchg
dec
lods
push
sbb
mov
aad
or
mov
jne
mov
push
mov
scas
into
inc
sbb
push
and
pop
dec
repnz
dec
add
jns
repz
sbb
test
int
lds
inc
je
mov
cmp
fdivrs
lret
add
cmp
mov
testb
sbb
ror
adc
jg
mov
leave
inc
sbb
data16
inc
cmp
movsb
add
dec
int3
add
ljmp
iret
mov
cmpsl
lret
mov
jp
sbb
inc
cmp
inc
push
lahf
icebp
mov
enter
jnp
adc
call
adc
adcb
fiadds
mov
and
xchg
arpl
fs
dec
cmp
push
test
or
jp
sbb
mov
push
mov
jecxz
into
rcrb
pop
ss
mov
lret
mov
push
jp
out
sub
cmpsl
mov
add
out
aaa
iret
iret
sub
or
mov
add
dec
cmpsl
mov
and
jb
hlt
adc
aaa
adc
dec
movsb
mov
ss
push
das
movsl
adc
scas
call
sarl
clc
cli
mov
hlt
or
cmp
std
mov
add
jbe
ret
scas
ss
mov
mov
cmp
mov
call
pop
test
jnp
dec
fnstcw
fs
es
stc
mov
cwtl
aam
mov
lods
mov
popf
cmc
push
fucomip
leave
fwait
mov
bound
ret
jmp
inc
or
push
fistps
inc
shll
rclb
or
fidivrs
cmp
mov
mov
cld
cmp
xor
fistpll
cmp
rcll
sub
filds
push
pop
cmp
mov
insb
je
shl
jns
pop
roll
mov
or
sbbl
mov
jmp
add
cmp
mov
mov
fnstcw
out
sub
push
inc
cmp
idivl
add
int
push
sbb
pusha
mov
insl
mov
dec
sbb
jns
idivb
dec
into
jp
pop
insl
repz
in
xchg
stc
rcrl
jo
shr
subb
test
inc
stc
inc
cmp
lods
xor
push
dec
cmp
mov
nop
shr
jge
pop
in
addl
mov
jns
movsb
lahf
test
cmpsl
lret
fdivs
xor
xlat
cmpsb
inc
push
cmp
in
stc
jo,pn
nop
rolb
dec
loopne
cmp
movsb
aas
out
fldt
sbb
cmpb
sub
ds
cmp
cmp
cmp
mov
mov
mov
cmp
inc
sti
pusha
mov
cmp
inc
sti
pusha
mov
cmp
inc
jns
cmp
sub
call
and
fsubs
shrb
push
cmp
fidivrs
pop
stc
pop
sub
jns
sbb
nop
mov
fsubp
fisubs
push
xor
aaa
aad
or
pop
stos
adc
xor
mov
or
mov
pop
sahf
mov
popa
push
mov
cs
inc
mov
js
fisubl
add
fsubrl
sub
xchg
rolb
subb
sub
leave
xor
xor
xchg
call
std
fnstcw
aam
mov
aam
mov
aam
stos
dec
mov
mov
cmp
call
mov
sbb
fmuls
inc
cltd
fisubs
xchg
mov
mov
pop
das
cmp
add
andb
hlt
andl
adcb
imul
enter
inc
andb
mov
mov
dec
in
mov
mulb
sbb
adc
js
orb
lock
test
ret
xor
shr
jns
jns
jp
mov
xchg
pop
in
jmp
out
cmp
js
mov
mov
mov
hlt
adc
test
mov
mov
in
nop
js
dec
xlat
or
ret
dec
sbb
shl
sbb
dec
sbb
repnz
add
xor
clc
ret
rcrl
bound
mov
pop
dec
xlat
lods
mov
sahf
or
cli
mov
mov
je
mov
sbb
push
pop
fimuls
testb
or
push
ret
insb
and
fstpl
inc
sbb
cmp
adc
pop
pop
je
cmc
cmp
scas
jns
adc
pop
mov
mov
loopne
mov
shrl
sbb
fstpt
adc
aas
or
xor
adcb
out
sbb
data16
pushl
xchg
or
enter
or
adc
pop
pop
mov
pusha
mov
jnp
rorl
lock
pop
popf
add
mov
enter
adc
cmp
stc
pop
mov
and
jne
jle
push
arpl
xor
lcall
mov
or
mov
mov
push
out
push
jp
jns
int3
jns
mov
icebp
mov
aam
cmp
xchg
out
in
in
cmp
mov
es
and
std
cmp
inc
fsubl
addr16
clc
clc
repz
out
inc
mov
int
dec
sub
jb
and
in
mov
pop
inc
mov
jmp
pop
in
mov
lcall
fstps
add
add
fcom
add
sbbb
js
jns
xor
adc
pushf
adc
pop
sti
xchg
mov
push
mov
mov
mov
push
xchg
sbb
xor
mov
mov
loope
jp
add
push
pop
dec
in
shll
test
cmp
in
lret
mov
sbb
mov
fcompl
std
test
test
pop
leave
dec
sbb
mov
xchg
and
mov
out
je
rorb
mov
sub
jae
rcrb
add
cmp
pop
mov
or
pusha
sbb
adc
mov
sahf
inc
push
cmp
loop
adc
fwait
dec
movsl
cltd
adc
sarb
mov
xor
and
jge
cmp
sbb
sbbl
xor
arpl
pop
cmp
pop
bound
adc
jb
loop
sub
or
stc
cmp
mov
sbb
movsl
mov
mov
mov
sub
dec
xchg
and
in
xchg
or
addr16
scas
dec
rcr
fstpt
enter
mov
fisubrl
ljmp
scas
dec
dec
jb
idiv
enter
pushf
pop
iret
lds
jg
mov
pushl
ja
lods
outsb
out
pop
ds
cmpsl
dec
cltd
dec
cmp
cli
dec
sub
cmc
clc
push
mov
mov
mov
arpl
mov
pop
mov
sub
es
aam
dec
cmpl
into
or
pop
mov
sbb
mov
bound
gs
adc
inc
sbb
mov
stc
mov
loope
and
cli
mov
xor
cmpsb
mov
nop
scas
out
mov
outsl
stc
mov
jmp
cwtl
sbb
push
pop
lods
mov
cmc
mull
loope
cmpsl
pop
addr16
xor
mov
les
lret
cmp
pop
xchg
xor
jne
jmp
rclb
cmp
stos
cmp
adc
arpl
test
call
clc
rclb
mov
addr16
pusha
ret
inc
pop
in
mov
shll
lret
stos
lret
shl
fmuls
and
dec
call
cmp
add
pop
jge
xchg
and
dec
arpl
repz
xor
sbb
call
scas
shrl
shlb
sub
sbb
sbb
adc
test
pop
clc
push
xchg
divb
sbbl
or
add
jo
sbb
rol
xlat
inc
cmp
pop
sti
mov
jnp
lret
cmpsl
shll
movsl
nop
add
fdivrs
sub
shll
pushf
pop
stc
xor
and
adc
inc
movsb
ja
cwtl
fsts
aaa
loopne
mov
sub
orb
daa
jne
jnp
xchg
sub
inc
mov
ja
je
scas
xor
mov
push
stc
es
cwtl
mov
in
cmp
and
xlat
add
dec
filds
ja
test
clc
mov
shl
nop
inc
push
mov
pop
movsl
mov
mov
sub
icebp
int
aam
in
loopne
push
jo
pop
inc
mov
cmp
test
mov
cltd
sbbb
add
ret
mov
mov
add
movsl
clc
gs
fs
fsubs
es
add
icebp
xor
cwtl
test
pusha
movsb
enter
sub
jecxz
mov
int3
and
pop
pop
push
repnz
loopne
lahf
shlb
call
in
out
pop
vmovaps
push
fcomps
or
push
js
sbb
testl
out
sbb
mov
adc
cmp
testl
cmp
mov
aas
lret
inc
mov
iret
jae
push
iret
add
lahf
sbb
dec
les
js
nop
pop
sub
aam
outsb
mov
add
lods
fsubl
fwait
or
jo
mov
ja
sbb
pop
ret
scas
mov
xchg
xchg
jmp
jb
pop
mov
mov
mov
mov
ret
jnp
shl
mov
dec
xchg
mov
adc
mov
fists
stos
push
cmp
mov
and
pop
nop
aaa
ljmp
inc
decl
xor
mov
scas
pusha
rcrl
out
out
js
jbe
sarl
leave
fistpll
mov
nop
scas
xlat
inc
mov
pop
and
mov
aad
push
push
test
dec
sub
lret
mov
mov
add
js
cmpsb
sarb
cmp
sbb
fisttpll
mov
xorb
outsl
cmpsw
jge
inc
mov
cwtl
cmp
or
mov
jecxz
mov
sbb
clc
adc
inc
pop
dec
cmp
or
jp
xor
mov
in
mov
jno
cmpsl
loope
adc
jne
call
sub
xlat
adc
mov
call
inc
lcall
mov
dec
inc
cwtl
sti
cmpsl
sti
jns
lret
enter
jge
out
lret
mov
adc
loopne
add
inc
mov
jnp
push
stc
stc
std
mov
jge
in
jne
cmpl
pop
add
lcall
orl
scas
mov
jg
inc
jbe
ljmp
or
add
mov
or
aaa
inc
sbb
adc
mov
shll
xor
mov
lods
or
cld
and
clc
out
add
cmp
cmp
cmp
pop
and
sar
test
and
cld
push
sti
ljmp
shrb
push
xchg
jp
sub
cmp
sbb
jl
lcall
out
fcmovnbe
sbb
pop
into
shl
dec
test
aaa
mov
mov
jp
and
in
xor
sbb
ja
cmp
sub
std
sbb
fldt
cli
pop
jmp
cmp
stc
add
mov
rcrb
fidivrl
jae
jnp
lods
icebp
pop
cwtl
test
std
test
jle
decb
xor
dec
xchg
jl
adc
cmp
cmp
add
jmp
mov
sbb
mov
jecxz
and
ret
mov
cmp
lods
or
jbe
mov
lea
mov
inc
pop
push
addl
and
xor
mov
ret
scas
sub
push
data16
mov
adc
popa
inc
aaa
inc
pop
andb
sbb
das
cmp
inc
pusha
and
int
in
sti
jmp
ud0
fcmove
or
xor
loope
cmpsb
mov
inc
xor
sbb
popa
mov
popa
cmp
xor
jmp
in
loop
scas
cmp
pop
fld
mov
sub
aaa
mov
ss
jnp
stc
xchg
stos
ffreep
in
cmp
lret
mov
mov
and
add
addr16
out
mov
clc
sub
outsb
sbb
adc
fnsetpm(287
idivl
mov
pop
fsub
popa
bound
add
push
add
fsubrs
jo
roll
push
dec
sub
in
mov
lret
das
inc
pop
leave
mov
fidivrl
ret
je
in
jle
pop
xchg
mov
sub
shll
mov
enter
daa
mov
mov
fiaddl
jo
mov
xor
xlat
mov
nop
cltd
sub
and
test
cmp
mov
jge
mov
sbb
shlb
dec
mov
pop
inc
xor
and
mov
inc
add
xor
out
jo
mov
sbb
mul
leave
sbbb
in
mov
aam
sub
cmp
loop
in
mov
sti
cmp
mov
sbbb
xor
cmp
mov
pop
add
adc
movsl
call
mov
sbb
xlat
add
cmp
enter
pop
jg
pop
sbbb
mov
sarb
jmp
push
out
add
xor
xor
mov
xor
mov
and
dec
popf
mov
or
adc
xor
mov
jge
pop
les
add
cmp
data16
outsl
add
xor
cld
dec
fdiv
js
cmp
loopne
fistl
fsubr
mov
mov
jmp
popf
iret
pop
or
sti
loopne
pop
fsub
scas
loope
mov
out
adc
filds
mov
insb
out
jl
add
subb
arpl
add
add
mov
shll
cmp
dec
in
int
dec
popa
leave
or
mov
fldcw
inc
jo
outsl
lods
cmc
nop
subps
or
adc
iret
push
out
sub
cmpsb
push
call
mov
lods
mov
mov
sub
sbb
fsubs
mov
mov
int3
cmp
fdivs
enter
cmp
shrb
sub
shrl
fdivrs
leave
mov
test
lds
test
mov
fdivs
test
in
push
lret
and
fsubs
sti
and
and
sbb
mov
leave
fsubrs
stos
icebp
sbb
fs
mov
dec
mov
divb
iret
shll
xchg
add
fdiv
dec
lret
dec
enter
and
sub
fisubl
push
mov
xorl
mov
cli
test
mov
js
adc
dec
or
fiadds
ficoml
mov
cmp
into
and
fimull
dec
andb
dec
push
sbb
mov
jo
xor
jmp
pusha
xchg
xlat
mov
mov
cmp
or
out
loope
add
out
rcll
push
sbb
inc
testb
dec
shll
ljmp
push
or
call
cmp
pop
cltd
int
call
xor
push
lcall
pop
mov
je
leave
sub
cmp
xlat
fists
fdivrl
pop
pop
adc
in
rcll
iret
insb
inc
and
fcmovu
aaa
ret
pop
movsb
cmp
lods
orl
jo
or
ja
mov
ja
push
sbb
mov
dec
fcmovnb
data16
repz
pop
ja
or
sbb
mov
pushf
rolb
pusha
clc
adcl
ret
cltd
sub
cmp
ds
lods
pop
clc
dec
movsb
fcmovbe
mov
lahf
enter
js
jb
mov
out
cli
xchg
jbe
push
mov
shll
mov
dec
adc
cmp
mov
movsl
out
fcomi
and
inc
xor
mov
inc
loope
andb
lcall
scas
arpl
adc
pop
add
shll
xchg
aam
mov
outsb
mov
push
popa
jns
add
mov
push
out
mov
negl
scas
push
sub
and
mov
lock
xchg
mov
mov
jns
xchg
and
mov
pop
push
in
shlb
in
xchg
outsl
movsb
movsb
adc
sbb
pop
outsl
cmpl
mov
xor
mov
mov
cmpsb
sub
adcb
addb
cmp
xchg
in
lds
cmp
ret
inc
and
enter
sahf
ficomps
idivb
jl
and
mov
sbb
sbb
mov
adc
fnsave
iret
sub
cmp
push
bound
out
jne
push
mov
sbbb
sbb
inc
jg
pop
mov
cmp
dec
ret
or
mov
jmp
sti
cs
shlb
movsb
repnz
mov
mov
cld
pop
jns
hlt
out
pop
ljmp
mov
stos
sti
jge
je
push
fcmovnb
repz
mov
test
cltd
cmp
push
in
cmp
dec
aaa
jp
sub
sbb
mov
icebp
inc
mov
adc
fdivs
test
dec
push
sbb
mov
pop
mov
jbe
cmc
stc
xlat
das
mov
mov
icebp
push
xor
lods
inc
dec
mov
mov
mov
inc
dec
cmp
mov
test
sbb
cmpsl
or
mov
je
test
and
mov
ret
fcoms
dec
xorl
shlb
call
dec
sub
mov
pusha
fisttpll
mov
movsl
iret
cld
aam
popf
inc
cmp
mov
shlb
mov
sahf
incl
sbb
lret
jne
popa
xor
mov
inc
das
sti
push
mov
cmpb
sbb
fmuls
out
movsb
aas
fsincos
jmp
mov
subb
sti
mov
dec
or
fucomi
ret
inc
adc
jnp
addr16
add
ret
sub
xlat
cmpb
js
lods
cmp
pop
adc
fstpt
inc
mov
cmpsl
ja
fwait
xchg
popa
and
adc
inc
hlt
stc
push
push
popl
mov
jns
bound
addr16
mov
xor
lret
mov
cmpsl
notl
movsl
add
lods
jo
mov
dec
ja
or
sub
push
push
std
mov
sub
fldenv
cmp
mov
cld
sbb
mov
fsts
pop
mov
jb
jl
js
jns
and
arpl
pop
xor
mov
fdivrl
scas
mov
enter
es
dec
lds
pop
mov
sbb
js
dec
fwait
or
push
xor
push
push
arpl
and
fwait
adc
mov
adc
es
dec
rcl
xorl
mov
in
or
pop
mov
jg
pop
rcrb
mov
icebp
jb
std
mov
sub
lds
data16
push
sti
sbb
cmp
sbbl
pop
push
mov
aam
cmp
mov
jnp
xor
push
sbb
mov
mov
enter
pusha
stc
xchg
adc
dec
jne
xchg
mov
dec
mov
sub
add
stos
jecxz
push
aas
bound
sbb
dec
fisttpll
mov
mov
pop
inc
dec
mov
sub
iret
out
bound
stc
mov
mov
rcl
test
popf
loop
sti
popf
lahf
ja
lds
sub
sbb
bound
out
das
push
in
fbstp
and
sub
cmp
pop
cmp
outsl
cmp
sbb
or
aaa
fdivrl
sbb
dec
sahf
int3
aam
popf
je
pop
push
pop
cmp
push
jns
add
dec
sbb
fldenv
leave
pushf
mov
cltd
outsb
mov
sub
mov
mov
dec
xchg
jp
into
sbb
dec
pop
sbb
les
sahf
daa
dec
xor
addl
stos
jne
fwait
dec
xchg
je
idivb
aad
dec
jo
adc
mov
adcb
inc
sarb
insb
cmp
pop
or
sbb
cmpsb
cld
mov
cltd
sub
xlat
shll
int3
fadds
add
faddp
inc
jne
cmp
clc
into
loope
std
call
pop
shll
fwait
vandps
dec
js
lcall
clc
xlat
pop
jge
lret
mov
mov
mov
ds
sbb
jne
loop
mov
pushf
push
rcr
mov
lret
mov
cltd
pop
outsl
adc
aam
repz
fsubrs
sbb
sbb
test
cmp
mov
mov
aam
mov
jle
cld
mov
stos
scas
jne
in
cmp
jmp
xor
jo
cmp
sbb
enter
pushf
jecxz
call
xchg
cli
cmp
sbb
aaa
data16
lods
mov
js
mov
adc
mov
inc
xlat
lcall
inc
int
mull
cmp
pushf
mov
sbb
imul
pop
es
push
mov
adc
divl
push
icebp
xorb
push
push
xchg
les
mov
or
cli
push
clc
and
dec
mov
dec
xor
xchg
data16
sub
mov
scas
out
mov
pop
in
es
xchg
mov
sbbb
mov
sbb
xchg
das
out
jl
add
cmp
adc
in
mov
lock
cmpb
mov
stc
fwait
cli
rcll
sbb
shrb
pusha
mov
sub
lcall
negl
addr16
mov
loop
push
jge
xor
jns
xlat
mov
cmp
jmp
jmp
mov
mov
dec
mov
or
into
neg
xlat
mov
dec
js
xchg
rolb
xchg
fwait
negl
out
imul
fucomi
loopne
sbbl
sarl
jne
pop
jl
cld
push
subb
data16
or
flds
in
lcall
mov
dec
out
cmc
dec
int3
ret
loop
jne
fs
loopne
mov
fnsave
pop
or
sarb
add
sub
sub
int
daa
aam
sub
outsl
cmp
inc
sub
or
sub
fwait
movsb
adc
shll
test
jg
mov
addr16
xlat
lods
mov
jbe
and
cmp
pop
cmp
vpmadcsswd
sti
lret
mov
stos
and
jns
mov
es
add
cmp
push
dec
movsb
jae
lret
mov
pop
jmp
adc
mov
pop
shll
movsb
dec
sub
outsb
loopne
in
mov
jae
dec
enter
into
cmc
xchg
jl
sbb
mov
fwait
push
mov
icebp
xor
sbb
push
fimull
lds
xlat
lods
and
sbb
sbb
cmp
pop
push
cli
testb
sahf
cmp
push
inc
xor
fisttps
insl
ja
sbb
std
cmp
mov
xorl
sbb
outsl
adc
jbe
in
fincstp
cwtl
sbb
dec
and
dec
in
pop
mov
cmp
sub
mov
stos
dec
jb
and
cmpsl
call
sbb
imul
xor
enter
cmp
mov
dec
in
add
lcall
aam
pop
mov
cltd
sub
fsts
scas
shrb
fidivrs
jp
mov
lcall
mov
pop
jo
push
fcmovnb
xchg
dec
pop
in
pop
xor
pop
stos
out
cmpsl
scas
and
arpl
cltd
push
jne
cmp
das
sbb
xchg
call
data16
popa
adc
xchg
cmpl
jl
cmc
lahf
cmp
mov
or
mov
stos
mov
imul
adc
cmpl
dec
inc
xor
negb
nop
xchg
or
jge
jmp
mov
mov
fisttps
jne
mov
pop
adc
in
push
fcomps
or
sub
fdivl
popl
or
icebp
fbld
xchg
shrl
jo
jp
mov
fnstcw
adc
mov
ds
pop
cmp
mov
mov
sub
ja
or
jmp
inc
ds
mov
fs
inc
pop
jge
or
jg
sub
fisttps
push
dec
stc
bound
aaa
inc
cltd
lret
das
dec
mov
add
sbb
push
lcall
sbb
push
and
js
mov
leave
in
or
int3
mov
je
mov
dec
mov
cmc
bound
mov
jecxz
pop
lds
daa
outsl
test
pop
xor
in
pop
call
jns
mov
mov
into
sbb
js
pop
iret
xchg
das
sbb
sbb
enter
stc
xchg
adc
call
inc
mov
add
stc
jbe
roll
cmp
jnp
fwait
xchg
and
mov
cmp
sbb
into
xor
mov
xor
lret
sub
or
lods
push
jl
cmp
mov
inc
sub
stos
adcb
mov
adc
pop
shr
pusha
and
cmp
loopne
adc
sar
loop
push
and
xchg
lock
ret
sbb
out
jns
orl
inc
xor
adc
inc
stc
in
mov
cmp
ret
sub
ret
mov
mov
in
mov
jl
push
jl
out
jb
mov
and
int
or
pop
shll
arpl
aam
cmp
cmpl
sbb
enter
cli
movsl
stc
cmp
addr16
dec
das
mov
stc
jo
xor
sbb
sbbb
inc
pushf
dec
pushf
cmp
es
or
or
pop
and
dec
xor
cmp
mov
sbb
daa
repz
add
cmp
imul
cmp
pop
arpl
mov
pop
leave
clc
fldt
cmp
or
dec
jmp
mov
test
fistpll
jmp
pop
pop
notl
add
adc
gs
mov
rcrl
mov
jmp
mov
ret
scas
lahf
add
add
pop
pop
xor
cmpl
out
mov
fimull
loopne
out
aas
popa
mov
fidivrs
sti
imul
stos
dec
out
push
out
shlb
pop
mov
and
pop
or
insb
dec
xlat
and
inc
pop
in
in
inc
fsts
ds
xor
inc
cmpb
clc
aas
mov
xor
add
rcr
aam
decl
fwait
jo
bound
outsb
movsl
imul
es
stc
aas
pop
fcom
mov
les
nop
outsl
sarb
inc
add
mov
mov
dec
movsl
inc
popl
dec
and
testb
mov
or
inc
cmp
pusha
cmpsl
lahf
sub
xchg
ss
mov
js
popf
cmp
outsb
cmp
insb
jo
adc
push
pop
movsl
inc
rolb
mov
push
pop
pop
cmp
jnp
js
test
xor
push
push
leave
outsl
int
push
xlat
outsl
mov
cmp
negb
jge
movsl
repnz
lret
cmp
mov
ja
mov
adc
dec
mov
aaa
mov
push
lcall
dec
js
test
inc
and
fists
pop
ret
adc
ret
xchg
add
push
cmpl
cmp
leave
outsb
scas
mov
cltd
je
icebp
ljmp
jecxz
add
mov
mov
movsb
add
or
sub
cld
cmpsl
mov
mov
mov
add
sahf
in
adcl
loop
sub
andb
cmp
cld
adc
lret
adc
adc
or
call
iret
ds
push
mov
stc
mov
xor
sbb
rcr
add
mov
jne
lahf
stos
call
sbb
outsl
aad
leave
mov
dec
or
inc
cmp
div
pusha
repnz
and
mov
or
cmp
mov
gs
pop
cmpsl
cmpsb
dec
sti
dec
sbb
sub
sub
push
and
ficompl
xor
in
test
sub
clc
jo
and
out
pop
lods
add
std
cmp
or
and
jge
add
adc
js
mov
fists
pop
out
cmp
mov
mov
mov
or
pushf
mov
inc
adc
push
jl
stos
cltd
pop
aas
stc
lahf
mov
jbe
int3
and
clc
push
xor
cmp
cmp
pop
mov
insb
sbb
aad
mov
mul
or
mov
inc
sub
mov
fs
xor
mov
cmc
sbb
loope
inc
jl
mov
cli
mov
mov
xchg
xlat
jle
adc
iret
adc
ss
sbb
incb
aad
xchg
add
icebp
jge
and
mov
xchg
mov
mov
jp
orb
jl
loope
in
jp
aas
jnp
lcall
repnz
cltd
jbe
xchg
jle
jno
loop
xchg
popa
cmc
jno
sbb
andb
lds
lret
and
sub
hlt
or
shlb
call
movsl
shrl
pop
rsm
mov
sbb
dec
push
push
jnp
movsl
stos
mov
pop
jo
pop
clc
lret
fwait
mov
mov
ds
mov
repnz
sbb
dec
jae
add
xor
mov
cmp
pop
sub
sub
repz
inc
bound
outsl
sub
ret
sub
icebp
cmpsb
jbe
aas
or
es
test
or
aas
push
cmp
mov
mov
scas
cmp
iret
insb
movl
daa
mov
push
and
mov
cmp
sub
sub
cwtl
int
pop
pop
data16
inc
jno
fistpll
lahf
mov
cmp
xor
lea
add
andb
lods
pop
cs
ret
fmull
pop
cmp
mov
aas
xchg
xchg
filds
dec
jne
cltd
mov
jbe
adc
push
push
mov
jge
test
fwait
mov
xchg
jbe
movsl
daa
and
repz
pusha
cmp
les
push
jp
cmpsl
popa
out
push
cltd
es
lret
mov
and
or
sbb
mov
std
sti
aam
sbb
fsubrp
in
fdivrl
mov
mull
or
jmp
scas
mov
push
pop
fisubs
fdivrl
push
mov
xchg
test
cmp
mov
ret
and
fidivl
scas
xchg
lods
jecxz
loop
dec
sbb
pop
rol
mov
imul
mov
mov
mov
movsl
cwtl
loopne
pop
cld
lahf
inc
bound
data16
jg
stc
inc
mov
imul
adc
scas
icebp
pop
or
movsl
pop
pop
xchg
in
jno
xchg
mov
shlb
mov
cmp
sarb
shlb
call
popa
mov
aaa
jmp
scas
cmp
push
pop
imul
nop
in
mov
xchg
mov
es
or
or
mov
stc
and
ss
not
js
mov
test
mov
stc
test
sbb
push
enter
mov
mov
mov
cmpsl
cmpsb
xlat
aas
ret
daa
mov
cmp
mov
in
jp
mov
mov
das
jo
ljmp
loopne
and
xor
cmp
add
out
push
dec
dec
push
js
scas
mov
bound
sbb
ss
test
mov
cmp
inc
pusha
mov
pop
cwtl
jns
ficoms
adc
clc
sub
test
andl
mov
mov
fdivl
cmpsl
inc
cmc
js
ret
sbb
and
mov
xor
pushf
cltd
sub
inc
sbb
fistpll
cli
pushl
or
adc
inc
vphaddubw
inc
pop
adc
cmp
popa
jge,pn
push
adc
out
and
dec
cmc
cltd
mov
cmp
sub
mov
mov
std
inc
mov
cmp
insl
mov
dec
rcrb
dec
and
inc
aaa
jnp
std
and
pop
pop
out
ja
ret
das
xchg
cmpsb
cmp
cltd
pusha
bound
add
mov
cmpsl
popa
push
cmpsb
aas
adc
mov
push
sbb
cmp
out
out
pop
mov
rorb
adcl
sbb
pop
ds
aaa
cs
xchg
cmpsl
ljmp
dec
jb
pop
aad
inc
pop
cmc
and
fsubrl
fistpll
mov
add
add
iret
sub
cld
test
aad
xor
movsb
aad
xchg
daa
inc
lret
push
jp
jbe
push
or
xor
ret
ljmp
push
mov
mov
mov
in
dec
decl
push
sbb
pushf
push
test
inc
aam
shr
std
adc
xchg
stos
mov
xchg
hlt
jecxz
and
in
pushf
sbb
mov
mov
mov
fcoml
lcall
and
cmpsb
mov
jbe
clc
mov
data16
les
test
jns
or
pop
in
nop
mov
das
cli
adc
pop
push
xor
push
cmp
mov
jle
lds
scas
loope
mov
xor
movsb
mov
fldt
cs
mov
jge
mov
xchg
sbb
adc
and
inc
or
jae
push
fisubl
sub
adc
mov
add
lods
aas
push
mov
pusha
je
xchg
inc
push
js
mov
xchg
sbbl
xchg
sub
pusha
adc
stos
cmp
mov
cmp
sbb
rorb
xchg
js
adc
lret
jne
ret
cltd
outsl
js
inc
jb
cmp
loop
adc
add
mov
add
jecxz
rcrb
xorb
xchg
xchg
jbe
cmp
sub
rolb
dec
sub
add
cwtl
cmp
cmp
lock
mov
push
cld
pop
cmpsl
inc
in
ds
pusha
mov
jge
push
mov
mov
inc
xlat
push
ja
mov
jbe
popa
push
out
inc
inc
out
fwait
in
or
daa
sub
inc
stos
or
lcall
cmc
inc
sbb
mov
sbb
clc
aaa
dec
shlb
roll
xor
mov
mov
sbb
insl
add
addr16
ds
loopne
inc
push
mov
pop
ss
lea
push
js
mov
repnz
jmp
sub
fdivr
and
xlat
cld
mov
fdivrs
cmp
sub
sub
test
lods
shll
lret
imul
pop
test
jo
jne
frstor
cmpsb
stos
pop
test
iret
or
pop
ret
dec
movsb
mov
sub
dec
ja
or
arpl
sbb
pusha
mov
rcr
push
inc
arpl
add
pop
std
xchg
adc
lcall
aaa
shrl
jbe
popf
and
dec
stos
dec
sarb
nop
subb
sbb
add
mov
xor
mov
cli
loope
lcall
popf
mov
push
jl
lods
js
cli
pop
jg
inc
pop
mov
jp
adc
and
cmpsl
mov
xchg
pushf
stc
pop
rcr
fwait
pop
dec
add
bound
add
mov
out
shlb
call
pushf
cmp
mov
andb
movsl
jae
inc
sbb
jae
cwtl
mov
sbb
mov
or
push
sbb
cmp
fucomip
stc
ja
pop
mov
out
out
movsl
xchg
imulb
xor
xor
mov
cmp
mov
sub
xor
sub
inc
sti
rcll
call
mov
push
popa
push
in
cmp
push
xor
adc
loope
lcall
mov
inc
mov
mov
fs
cmp
popa
call
mov
pop
adc
mull
mov
sub
aas
repnz
bound
stos
sbb
cmp
cmpsl
jo
movsl
scas
enter
inc
add
rcl
clc
aad
pop
flds
rorb
arpl
jbe
iret
sbb
ret
pop
aam
cmp
and
cli
cmpsl
jbe
popa
mov
test
cltd
cmp
sub
push
cli
cmp
mov
jbe
push
psrlq
pop
sub
sbb
in
fstpl
vmovsd
mov
push
dec
sub
psllw
clc
filds
sub
adc
mov
sti
lock
clc
fiaddl
arpl
sbb
insl
loopne
popa
mov
sbb
aad
sbb
sbb
fildl
mov
cmpsl
adc
pop
negl
or
sub
cltd
in
sub
add
cmp
xchg
xlat
nop
scas
sbb
bound
sub
jae
mov
repnz
aaa
mov
add
cmpsb
divb
inc
jo
ret
cli
mov
or
mov
loope
fcmovu
mov
idivl
pop
ds
hlt
sub
cmp
mov
jecxz
mov
ds
out
jno
mov
out
pop
inc
fldenv
dec
and
inc
ficoms
push
lahf
adc
sbb
enter
call
aas
and
test
enter
imul
shll
aam
jae
cmp
in
fwait
outsl
scas
dec
add
scas
cmpsl
sbb
xchg
sbb
test
sbb
popf
lock
dec
sub
fwait
push
fisubs
mov
push
clc
xor
xor
dec
inc
mov
pop
adc
jg
mov
jecxz
or
das
les
sub
cmp
and
xchg
cmp
pop
scas
fsubrs
mov
stos
orl
or
dec
pop
lock
fadds
xchg
mov
hlt
xor
mov
ss
jns
jo
xor
push
mov
lahf
or
lds
fsubl
addr16
pop
data16
inc
cwtl
sbb
inc
pop
addr16
cmc
inc
or
mov
sub
push
xor
movsl
sbb
gs
xchg
mov
js
shlb
mov
enter
push
mov
out
cmp
pop
call
cmp
lcall
adc
js
fwait
aaa
cltd
cwtl
sub
sbb
rcrl
xchg
or
lret
adc
clc
mov
scas
push
stc
data16
inc
xlat
fnstenv
xor
loop
cli
outsl
pop
jmp
mov
mov
mov
fdivrs
mov
cmpsl
sbb
cld
and
cmpsb
cmp
bound
es
sti
and
mov
mov
outsl
clc
mov
arpl
int3
inc
inc
fists
and
sti
std
mov
and
imul
push
push
mov
sbb
cmc
and
inc
sbb
mull
fldcw
push
addr16
mov
mov
push
icebp
xor
rol
push
call
sbb
into
xlat
sbb
xor
hlt
sub
test
fsub
inc
xchg
std
sahf
fidivs
jg
adc
test
sar
cli
mov
xor
fnsave
lods
es
cmp
dec
repnz
xchg
call
movsl
push
test
das
and
fimuls
rolb
mov
mov
testb
repnz
mov
xchg
shrb
add
cmp
testl
loope
das
xor
test
sbb
sahf
cmp
adc
loop
cld
daa
inc
jo
add
cli
cmp
divl
shrb
hlt
cmp
add
fdivrl
scas
mov
pop
add
cltd
jge
adc
mov
dec
jbe
outsl
jno
outsb
lcall
add
fdivrs
mov
cwtl
stc
cmp
mov
popf
mov
sbb
pop
je
pushf
ss
lcall
mov
lods
nop
mov
clc
jl
mov
orb
es
sub
dec
negl
cmp
nop
ja
imul
mov
mov
pop
add
repz
mov
push
adc
sbb
jns
call
inc
es
jne
fildll
mov
scas
fsubs
cmp
test
cmpsl
or
cmp
sub
dec
fxch
or
sub
imul
test
rolb
cs
adc
mov
sbb
or
xchg
scas
fistps
cmp
lock
cld
sahf
pop
or
jle
mov
aam
jge
pop
scas
iret
aam
sbb
push
clc
lock
mov
mov
mov
sub
or
cmp
xchg
inc
lret
mov
js
fadd
xchg
aam
test
lods
aad
stos
xchg
sbb
pop
sub
inc
mov
inc
mov
sahf
adc
push
mov
repz
ljmp
hlt
pusha
jg
mov
test
sti
mov
xchg
not
inc
cmp
sbb
or
out
jecxz
xchg
push
cltd
cwtl
xor
popa
fwait
dec
xor
fsts
sbb
imul
shrb
adc
je
pop
nop
loopne
pushf
xor
pop
repnz
inc
cmp
cwtl
jg
mov
dec
inc
push
test
or
in
pop
jbe
lahf
outsb
mov
jl
ja
lods
test
test
mul
xchg
sub
mov
xchg
or
cli
aam
jns
loopne
jp
fcoms
test
sbb
cmp
push
pop
repnz
and
dec
mov
enter
fstpt
mov
cwtl
lret
sbb
cld
adc
lock
cwtl
leave
fcomps
imul
fwait
in
fimuls
in
cmp
add
cmp
cltd
add
add
out
inc
mov
jbe
movsl
cmp
mov
ret
cli
mov
push
push
cltd
add
cmc
or
dec
pop
rcll
sti
scas
inc
mov
sbb
sti
mov
mov
mov
mov
jp
stc
cmp
stos
lock
and
std
jne
jns
adc
bound
pop
sbb
test
cmpb
mov
aam
stos
mov
jno
lds
xor
stc
aam
adc
or
bound
push
fdivrl
mov
pop
jp
pop
push
sahf
testl
ret
pop
mov
pop
push
cmp
jo
sub
adc
scas
fiadds
adc
lahf
testb
cltd
popa
cmp
scas
pop
sbb
mov
sbb
lcall
inc
xchg
mov
mov
sub
divl
pusha
rolb
aaa
ds
jmp
and
adc
mov
sub
push
jno
call
call
fmull
stc
xchg
aaa
jp
xchg
addl
xchg
dec
popa
cmpsl
outsl
outsb
jmp
push
pushf
and
xor
inc
cmp
add
das
js
std
movsb
rcrl
lods
inc
popa
mov
cmpl
movsb
es
or
mov
fdivs
loope
and
adc
jns
xchg
arpl
cmp
mov
pop
cs
fsubs
jns
xor
push
inc
or
cmp
pop
mov
jb
addl
pop
adc
mov
call
je
jl
mov
popa
and
push
xchg
inc
xor
mov
pop
ja
add
iret
pop
cltd
cmpsl
cmp
sbb
cmp
ja
shl
insl
cmp
inc
cmp
test
fsubs
mov
push
aas
sub
adcb
scas
mov
mov
mov
test
xor
sbb
pop
popa
ret
cmp
push
jecxz
in
and
shlb
add
shlb
rorb
inc
push
pop
cmp
sbbb
outsl
mov
fs
mov
cmp
sbb
js
iret
cli
mov
enter
ret
add
std
popa
fbstp
sbb
outsl
xchg
jb
xchg
lods
sub
mov
or
xor
pop
mov
cmp
jne
add
in
mov
roll
inc
ja
mov
adc
dec
cltd
pushf
ss
jb
dec
stc
mov
xchg
ret
xchg
sbb
sub
inc
pop
mov
inc
cmp
stc
adc
inc
rorl
push
mov
or
je
push
in
loopne
ljmp
dec
fwait
aad
mov
mov
ficoml
icebp
inc
adc
inc
add
stc
dec
dec
dec
jae
pop
xlat
cmp
dec
mov
imul
out
pushf
daa
or
mov
sbb
lods
dec
cwtl
ss
loop
jmp
pop
jmp
pushf
popa
enter
cmc
test
mov
dec
lds
xlat
adc
mov
and
scas
inc
call
out
daa
aas
dec
pop
mov
fidivrl
dec
in
aam
sub
or
mov
pop
dec
clc
cmp
adc
cmp
sti
jle
dec
loope
mov
mov
adc
cmp
pop
mov
rcrb
push
adc
cmp
adc
leave
mov
js
mov
dec
in
pop
and
jmp
cmp
dec
add
dec
sbb
dec
or
test
mov
cmp
call
lds
mov
jns
jbe
test
rcl
sub
aam
int3
push
cmpsl
ret
inc
in
outsb
mov
xchg
lea
dec
mov
add
jbe
dec
push
inc
or
sbb
xchg
lcall
maskmovq
imull
dec
out
mov
out
push
in
andb
adc
mov
cmp
mov
or
aam
fdivrs
int3
pop
sbb
jae
adc
movsl
arpl
mov
jb
jle
test
cwtl
mov
xor
pop
lahf
push
jle
push
out
ror
inc
std
js
mov
cmpsl
dec
jmp
push
mov
jnp
sub
sub
push
mov
gs
flds
std
mov
push
cld
adc
mov
leave
jb
std
adc
cmp
lock
mov
inc
inc
add
daa
lahf
pop
cmp
add
pop
adc
push
js
mov
sub
jp
fxch
lcall
xor
aas
outsb
sbb
mov
rcl
fidivs
fidivl
jp
jmp
mov
shll
mov
cmp
lods
dec
mov
test
cmpsb
mov
xchg
push
fwait
dec
adc
jp
sbb
push
shrb
fsubl
add
pop
sub
jmp
fcomi
pop
sbb
std
add
fwait
xor
jp
xchg
mov
fsubrl
lahf
lock
cmp
aaa
add
inc
mov
in
adc
arpl
sub
xor
fwait
scas
pop
mov
loop
sub
lahf
and
and
mov
adc
cmp
sti
test
popa
lock
sub
xor
sbb
jp
mov
pop
dec
fldt
lahf
subl
cmp
pop
stos
cmp
jmp
push
pop
sbb
lock
cmpb
lahf
ja
cmp
add
mov
cmc
jno
arpl
sub
xchg
mov
inc
je
jp
test
loop
sub
lahf
aam
clc
cmpsb
ljmp
sbb
pusha
mov
call
ljmp
shlb
dec
mov
cmp
rcrb
mov
xor
jmp
mov
mov
fdivl
cmp
pop
mov
jo
mov
shll
and
and
test
adc
xor
aad
xchg
stos
pusha
popf
daa
test
sub
adc
out
fnstenv
addr16
lock
dec
mov
test
ja
sbb
ja
daa
pop
mov
mov
mov
pushf
test
mov
mov
pop
xchg
xchg
pop
dec
add
mov
mov
mov
dec
or
movsl
pop
mov
mov
sub
fsubrs
movsl
xchg
loopne
cwtl
fistl
and
and
jnp
mov
cmp
jle
fstpt
frndint
or
jne
mov
adc
pop
sbb
cli
sbb
lcall
sub
mov
cli
test
mov
xchg
cmp
out
mov
sub
test
ret
dec
pop
out
mov
aad
push
xlat
mov
inc
lret
inc
mov
cmp
jle
popa
mov
movsb
cmpsl
adc
ds
repz
pop
lods
in
enter
rcl
sub
cmp
adc
xlat
pop
xor
aas
xor
xor
pop
push
jmp
pop
xor
cld
mov
and
es
jnp
les
jbe
fisubl
es
test
scas
add
pop
test
sbb
testl
and
mov
das
push
cmp
call
insl
stos
add
jl
add
loope
fldcw
jecxz
js
inc
lock
clc
mov
xor
mov
lret
cmp
enter
jo
or
clc
lock
push
jbe
popa
fnstcw
add
sbb
lret
loop
sahf
addr16
and
pop
movsl
mov
fwait
xor
enter
cwtl
imul
push
xchg
inc
push
hlt
and
or
fcomi
inc
inc
shll
loop
fcmovb
cmp
jg
cmc
arpl
lcall
cmp
mov
fnsave
cmp
adc
dec
mov
pop
mov
test
inc
jg
subb
mov
dec
dec
lahf
test
dec
push
and
mov
and
adc
jnp
jae
das
pushf
andl
sbb
mov
adc
fistl
push
fistpl
cli
ja
gs
push
jmp
push
int
or
sub
cmp
xchg
pop
adc
clc
hlt
fdiv
pop
dec
or
roll
push
jnp
sbb
pop
in
cmc
or
push
xlat
cmp
insb
stc
nop
fstpl
cmp
jnp
in
pop
cmp
and
addb
shrb
dec
xor
bound
insb
fwait
mov
in
pop
sbb
rcrl
xchg
in
mov
es
jp
dec
xor
mov
arpl
jo
xor
mov
mov
ret
xor
dec
pop
dec
aas
rcrb
jg
mov
jge
xchg
pop
fnstcw
loop
sub
inc
scas
mov
loope
fiaddl
sahf
repnz
sbb
fnstsw
aaa
or
mov
leave
imul
and
or
pop
jb
cmp
cs
in
negl
or
add
sbb
aaa
mov
arpl
iret
aas
adc
cmp
inc
out
cld
mov
jae
dec
dec
daa
lock
mov
adc
or
cmp
ljmp
or
test
add
frstor
jne
mov
mov
mov
mov
adc
inc
sbb
sbb
add
clc
xchg
cmp
jns
sub
dec
repz
sub
sbb
pop
jge
cmp
sbb
pop
mov
aas
pop
js
sub
popf
xchg
call
sbb
mov
adc
mov
mov
int
mov
and
cli
cmp
mov
mov
hlt
sbb
inc
pop
jbe
add
mov
xor
sbbl
sbb
mov
pop
test
sbb
enter
ja
pushf
inc
cmp
mul
sbb
rolb
jbe
sbb
mov
cmp
jns
xchg
or
mov
sbb
lock
mov
sbb
scas
and
lcall
pop
inc
stc
es
movsb
jae
in
fldenv
and
mov
pushf
inc
fstl
xchg
nop
in
je
loope
fdivrs
mov
stc
test
mov
mov
or
mov
mov
fs
fwait
pop
or
in
test
cld
cmp
bound
add
sub
jbe
mov
push
inc
mov
cmp
cmpsb
cmp
or
cmp
loopne
mov
outsb
inc
cmp
xchg
jo
andl
adc
sbb
mov
and
sbb
loope
lret
mov
arpl
cmpsl
dec
loope
popa
mov
iret
xor
mov
sub
pop
add
ja
loope
cmpsl
mov
flds
fucomip
xchg
cmp
jmp
outsl
stos
pop
mov
movsl
and
int
fwait
or
mov
cwtl
mov
mov
add
sub
cwtl
mov
push
sub
sbb
dec
in
pop
sti
cmp
icebp
pusha
out
mov
out
cwtl
xchg
ftst
andb
mov
in
movl
pop
mov
fisttpll
cmp
push
pushf
out
mov
mov
inc
mov
and
stc
mov
fistpll
mov
sbb
pop
adc
insb
sti
fidivrs
xchg
jp
jae
sarb
adc
lret
inc
pop
xchg
mov
and
cmp
push
cmp
mov
ja
pop
aam
dec
ja
jg
pop
cmp
gs
pop
pop
test
mov
mov
mov
push
aam
inc
cmp
inc
dec
mov
sti
and
in
sahf
inc
add
std
ds
ja
pop
mov
dec
jl
imul
xor
hlt
jg
daa
and
call
pop
xchg
popa
mov
and
cmpsl
push
dec
ret
jl
in
clc
mov
jno
mov
insb
xor
cmp
xchg
int
mov
add
aam
filds
cmp
push
outsl
cmp
push
js
cmp
out
mov
add
lret
scas
lods
xlat
or
aas
clc
fdivs
test
test
push
fwait
movsl
push
insl
add
arpl
push
xchg
je
movsb
cmp
pop
lea
inc
sub
or
add
je
mov
dec
cmp
mov
push
ja
out
loopne
mov
add
es
sbb
js
sub
sahf
ds
mov
mov
jb
and
xchg
mov
xchg
mov
add
mov
imul
lret
or
sbb
xorb
dec
es
test
push
not
push
enter
push
cmp
mov
add
lods
dec
icebp
arpl
notl
sbb
sarl
pop
mov
xor
mov
mov
mov
push
sub
jp
jbe
push
loope
rolb
push
pop
shll
movsl
pop
popa
xchg
cs
fdiv
dec
or
sub
push
mov
mov
xor
add
xor
out
mov
pop
ljmp
push
int
mov
mov
lret
xor
clc
sub
sbb
lahf
inc
fcompl
add
mov
cmp
xor
xchg
enter
cmp
lret
pop
pmullw
hlt
or
subb
lds
pop
cs
inc
jnp
adcl
stos
es
mov
and
inc
adc
sarb
add
jp
stc
xchg
insb
daa
mov
xchg
mov
sti
xor
popa
sub
pushf
mov
and
xor
and
mov
cmp
decb
mov
sti
inc
aam
sbb
xchg
enter
loope
inc
mov
inc
shll
mov
mov
cmp
push
push
lahf
addr16
push
mov
cs
adc
lods
bound
sbb
sub
lods
stc
add
addr16
sbb
test
mov
and
jle
mov
test
js
lods
pop
push
mov
cmpb
add
and
or
adc
cmpsb
aaa
call
xlat
push
scas
cmp
imul
pop
loope
xchg
push
sbb
test
daa
adc
mov
sbb
movsb
sti
cmp
fldlg2
or
xchg
movsl
ds
or
sbb
mov
mov
jmp
lea
cmpsb
mov
ret
sarl
jo
mov
pop
scas
popf
and
xchg
lock
out
orl
shll
add
loopne
inc
iret
xchg
jmp
cmp
sbb
in
fsubl
inc
mov
pop
push
icebp
jns
shll
out
cmp
mov
scas
mov
mov
jo
addr16
mov
sbb
lret
lahf
fwait
aam
add
cmp
stos
orb
fbstp
push
loopne
sbb
adc
sbb
fnsave
repnz
pop
int3
push
inc
shll
adc
in
push
js
ss
mov
jge
push
sbb
xor
ret
imul
idiv
hlt
popl
mov
xchg
leave
fstpl
fdivs
sbb
enter
iret
push
arpl
test
add
xchg
jge
xchg
pop
mov
fists
es
cltd
iret
cld
mov
outsb
fwait
shll
push
xlat
cmpsl
arpl
lret
imul
push
dec
ror
bswap
pop
cs
sarl
mov
sahf
int3
push
divl
sbb
hlt
or
push
stc
movsl
push
and
daa
aas
mov
jge
adc
xchg
stc
pop
popf
xor
pop
sbbl
ficompl
movsb
imul
out
jae
push
jp
mov
shll
stos
jns
mov
aam
rolb
aad
das
sbb
icebp
enter
enter
loopne
xchg
enter
adc
loope
add
add
movsb
xor
outsl
jg
mov
cwtl
jae
fistpll
adc
mov
mov
sbb
ret
and
cmp
insl
ret
cmp
push
push
jg
lods
lret
jnp
outsb
add
sbb
mov
aam
push
push
lock
mov
jae
cs
popf
out
lcall
mov
cmp
stc
aaa
cmp
pusha
enter
js
sub
test
cmp
cmp
pop
out
cmp
sbb
sub
and
xorl
sbb
jae,pn
cmp
in
ss
mov
push
dec
inc
cmc
fcomps
mov
mov
cmpsl
pop
mov
xchg
es
jbe
pop
cmp
cmc
in
stc
pop
out
xchg
adc
push
test
pop
or
adc
inc
mov
add
mov
fnstenv
call
cs
add
adc
push
js
xchg
es
xorb
mov
std
jno
dec
int
mov
cmp
out
loope
mov
test
dec
popl
scas
dec
mov
push
pop
mov
dec
pop
sub
insl
lret
push
aaa
pop
lods
icebp
loope
dec
pop
jge
jp
mov
cmp
cli
shlb
shrb
sbbl
or
mov
pop
inc
jmp
pop
mov
mov
mov
xorl
das
sub
xchg
subl
mov
test
divl
outsb
stos
or
insb
sub
adc
repnz
mov
pop
mov
fldl
test
ja
jge
dec
pop
cmpsb
mov
inc
daa
fsub
xchg
pusha
add
jne
fdivs
mov
mov
sub
or
je
push
add
fsubs
push
adcb
xchg
cli
sub
lock
test
mov
cmp
sub
mov
push
nop
cs
mov
arpl
inc
rclb
movsb
jge
inc
add
std
mov
xlat
mov
push
js
pop
and
shrl
and
fldcw
push
test
ffreep
lret
mov
mov
int3
mov
rcr
jg
mov
add
mov
stos
cmp
cmc
push
jp
pushf
dec
xchg
fisttps
jo
jg
cltd
iret
xchg
cltd
rcll
mov
sub
inc
int3
ljmp
loopne
sbb
stc
aaa
js
je
ja
cmp
dec
cmp
bound
cmp
out
aas
out
pop
addr16
iret
idivb
add
mov
mov
jg
add
pop
sub
pop
push
jnp
jmp
cmpsl
or
mov
dec
and
cmp
scas
inc
ja
inc
mov
adc
mov
cmp
js
ret
push
jmp
adc
mov
lock
mov
dec
xchg
mov
loope
adc
roll
cmpsl
add
and
fwait
or
pop
cmp
aaa
int
add
jae
testl
sarl
jb
dec
push
lret
cmp
mov
or
cmp
outsl
mov
xchg
jb
es
and
cmp
shr
imul
add
cs
movsb
fucomip
xor
add
loope
cmp
or
fidivrl
loopne
in
mov
stos
xchg
add
mull
js
arpl
andl
rorb
cmp
sub
mov
shrl
or
push
pop
cmpsl
inc
jae
sarb
push
cmp
fisubl
inc
mov
fsub
pop
mov
sub
out
push
into
pop
fdivr
dec
icebp
cmp
inc
mov
inc
mov
rcrb
jmp
xor
mov
mov
dec
dec
sbb
sarb
insb
adc
movsb
or
xchg
jb
mov
fsubs
popa
xchg
ja
jnp
test
sub
and
sbb
mov
fmuls
mov
lock
iret
les
jmp
sbb
cmp
fnstcw
or
ss
cmp
pushf
fcompl
xor
das
mov
xor
inc
lock
push
int3
pop
fistpll
mov
mov
jle
pusha
fmul
pop
dec
lahf
add
loope
and
fcmovu
push
xorb
lods
pop
rcrb
iret
cmp
loopne
mov
dec
cmp
pushf
and
mov
mov
out
cli
jbe
mov
and
lret
movsb
and
stos
sbb
imul
mov
mov
adc
fldl
push
in
or
inc
or
divb
pop
test
je
mov
aaa
pop
sub
adc
dec
pop
pop
cmp
jne
jns
mov
test
cmp
ret
mov
or
mov
push
sbb
cld
xchg
sub
mov
test
and
test
push
inc
add
jg
icebp
sbb
movsl
cmp
mov
cltd
jg
sbb
sahf
mov
sub
pop
push
cmp
sbb
test
ret
test
and
jno
pop
fldl
insl
mov
pop
rcl
mov
and
or
aad
stos
jo
ja
popa
or
loopnew
arpl
clc
pop
out
stc
imul
sti
fadd
or
xlat
xchg
int
mov
add
and
stc
cltd
inc
mov
xor
lock
dec
mov
and
push
or
pop
incb
jns
pop
push
sahf
cli
mov
push
jmp
cmp
insb
xor
sbb
cmp
imul
js
ja
sbb
ret
out
fisttpll
sub
int
jno
xchg
fcomps
insl
sbb
test
adc
pop
dec
popa
mov
in
inc
pop
loope
fmull
insl
dec
jge
push
xchg
xchg
cwtl
sbb
clc
sbb
ds
lret
push
shrl
adc
stc
std
aaa
and
xchg
mov
pop
and
mov
jae
xor
and
dec
cmp
fsubrs
pop
rcrb
mov
mov
ficompl
movsl
shrl
stc
iret
push
test
mov
add
or
shlb
jg
sbb
lods
test
fucom
xorl
movsl
jp
movsb
enter
cld
popa
in
mov
xorb
cli
cmp
mov
xor
push
cmpsb
data16
inc
and
fbstp
cmp
pop
or
sti
insl
push
add
dec
mov
mov
jbe
sbb
adc
mov
adc
loop
and
mov
scas
stc
add
fwait
pop
push
push
adc
repz
inc
in
repnz
imul
in
mov
inc
cmp
testb
rclb
sbb
bswap
aaa
cltd
nop
mov
and
and
nop
cmpsl
mov
sbb
pop
jmp
add
xor
sub
sub
cmp
das
bound
adcl
stc
repnz
inc
push
cwtl
call
iret
cmp
scas
es
test
popa
testl
add
xlat
hlt
xchg
icebp
dec
push
cmp
dec
or
sbb
or
hlt
mov
sub
pop
and
jp
fisubrs
cmp
outsl
sub
sbb
rorb
pusha
and
jb
aad
mov
data16
and
add
sub
sarb
mov
xlat
fprem1
test
cmp
mov
ficoms
subl
js
jl
mov
xlat
mov
inc
xchg
dec
sbb
in
xrelease
cld
cmp
xchg
cmp
repz
mov
cmp
mov
inc
stc
cmp
cmp
and
enter
daa
fistpl
mov
int3
fstpt
repz
out
add
subl
sub
out
xlat
xor
jle
sti
cld
jnp
aam
lea
xor
dec
pop
mov
fcoml
dec
and
gs
push
dec
inc
loope,pn
aam
sbb
xchg
and
or
inc
xor
sti
pop
mov
mov
cmp
js
sarl
in
popa
cmp
js
push
int3
jne
mov
iret
je
mov
sbb
mov
jne
pop
testl
lds
pop
jge
jne
lds
mov
add
xor
jno
cltd
sub
je
sti
stc
cmp
xor
enter
mov
pushf
aam
mov
imul
xchg
add
cmc
scas
adc
iret
ficoml
aad
ret
mov
addr16
mov
push
popf
cltd
sub
sbb
mov
mov
icebp
adcb
mov
push
mov
jbe
mov
movsb
jnp
clc
pop
dec
add
fidivrl
push
mov
mov
xor
cmp
sti
or
mov
cmp
addr16
push
into
aad
pop
xor
out
add
je
inc
enter
sub
add
mov
loop
jp
pop
test
or
dec
lea
pop
mov
sbb
data16
pushf
push
push
sub
pop
adc
pushf
outsl
cmp
clc
ja
sub
into
mov
xchg
cld
out
ds
mov
adcb
fs
ficomps
movsb
jp
xchg
iret
mov
gs
enter
in
fsubr
jne
ds
dec
gs
out
je
or
or
xorb
outsl
sub
lods
movsb
sahf
mov
insl
out
incl
repz
roll
sbb
mov
push
cmp
sub
mov
push
clc
adc
nop
mov
mov
adc
mov
lcall
or
push
mov
dec
fistpll
cmp
leave
loope
div
xchg
mov
mov
mov
ret
dec
es
jb
stos
cmp
pop
pusha
out
cmp
mov
lock
fistpll
cmp
mov
sahf
adc
inc
fstp
sub
inc
popf
je
xchg
fcomps
cmc
in
cld
add
lcall
into
cmpsl
repz
out
arpl
mov
adc
mov
popa
leave
sbbl
cmp
dec
cmpsb
cmpsb
xlat
cltd
outsb
mov
mov
cmp
lcall
pop
jmp
mov
inc
ja
add
insb
mov
ret
sti
mov
mov
sbb
push
jbe
lret
mov
pop
add
xlat
mov
decb
cltd
aas
jno
mov
daa
cli
fiadds
add
pushf
into
aad
popa
sahf
jb
jge
nop
insb
ljmp
int
mov
js
andb
std
addr16
mov
cltd
push
push
or
out
cmp
sbb
in
cmpl
insb
pop
inc
mov
icebp
rolb
stc
pop
aam
add
fwait
mov
mov
in
leave
pop
iret
fstl
cmp
lahf
dec
xor
add
mov
xorl
popa
aam
or
sbb
mov
mov
negl
ja
ljmp
dec
insb
mov
cmp
cmp
into
sbb
xor
mov
stos
mov
inc
inc
aaa
dec
cmpsb
icebp
cmp
scas
lods
jnp
test
int
or
enter
fnstcw
fisttps
jnp
jecxz
mov
jb
pop
push
or
aam
out
mov
push
pop
pop
adc
inc
orl
imul
test
inc
push
cmpb
lock
stc
fsubrl
std
and
dec
dec
data16
pop
sbb
sti
scas
fsubl
ds
push
xchg
pushf
aad
pavgw
and
lret
fisttpl
lods
shl
mov
lcall
cwtl
xlat
imul
call
jno
add
xchg
cmpsl
jg
imul
push
and
mov
mov
arpl
and
push
popa
cmp
cmp
icebp
nop
mov
fiadds
dec
out
sub
fildll
inc
aas
mov
inc
mov
xchg
push
addr16
movsb
mov
adc
mov
sub
and
push
cmp
sbb
dec
lret
fnstsw
mov
pushf
out
push
sbb
pusha
stos
in
test
xor
mov
jp
out
add
shll
dec
add
jge
mov
and
stos
xor
shrb
xchg
add
fistpll
mov
pop
inc
cmp
nop
mov
jecxz
sbb
cltd
hlt
mov
mov
adc
ljmp
mov
and
pop
push
clc
cmpsl
mov
sbb
mov
and
xchg
int
xchg
cmp
ja
mov
cmpsl
aas
sub
or
sbb
pop
push
jns
test
sub
xchg
pop
mov
push
jne
adc
negl
push
rolb
mov
lods
mov
push
mov
cwtl
loopne
out
adc
add
pop
pop
cmp
mov
pop
mov
cmpsb
xchg
mov
sbb
jge
mov
ret
mov
pop
xor
mov
dec
in
pop
or
rcl
pusha
jb
and
js
sbb
adc
mov
aam
repnz
scas
and
clc
sbb
pop
cltd
mov
push
stc
pop
mov
es
mov
cmp
or
cmpsl
xchg
lock
stc
notl
pop
stc
cld
inc
sbb
fildl
lcall
cmp
xchg
push
aaa
aam
xor
popf
outsl
adcl
and
inc
fbstp
lock
fisubs
mov
test
mov
aam
pop
mov
lahf
aam
loope
loopne
das
clc
movsb
or
pop
clc
and
dec
aam
pop
fsubrs
add
lock
fdivrs
sahf
jle
cmp
addr16
xlat
cmp
movsb
rolb
push
jmp
sti
mov
push
xchg
ja
inc
mov
ret
je
ljmp
inc
lock
push
xor
nop
rcll
in
addb
pusha
insl
mov
mov
jge
jo
inc
and
mov
test
mov
gs
fildl
push
movsl
fsubs
dec
jnp
fsubs
jmp
or
out
xchg
push
xor
mov
jnp
xor
sti
pop
adc
call
rolb
fisttps
xor
lret
and
fmulp
lcall
add
test
je
pop
mov
ljmp
jl
mov
dec
cs
mov
xchg
stos
and
inc
js
hlt
xlat
dec
test
cmp
clc
mov
call
mov
add
fldl
addr16
fsts
es
clc
fmul
push
shlb
nop
mov
mov
xchg
test
mov
mov
shlb
ss
and
hlt
idivb
push
mov
ja
mov
mov
mov
movsb
adc
int
pop
pop
xorb
and
mov
mov
jp
hlt
jg
jb
jecxz
pop
adc
shlb
in
jns
mov
or
repz
ret
rcr
mov
jbe
dec
mov
cwtl
lods
pop
ss
shlb
scas
add
enter
sub
inc
cs
mov
mov
in
jbe
sub
pop
adc
sbb
jmp
jns
inc
test
cs
enter
jbe
fldcw
cli
orb
adc
xorb
and
les
shlb
aam
jns
mov
jg
mov
outsl
inc
fsubrl
repz
mov
lcall
push
xlat
inc
cli
fnstenv
xor
add
fst
popa
aam
rcrl
cwtl
and
cmpsl
loopne
mov
xchg
mov
cmp
test
xor
mov
sti
mov
fadds
jmp
stos
in
rcrb
pop
mov
xor
mov
jns
mov
test
mov
mov
pop
cli
test
adc
and
pop
mov
mov
inc
ret
scas
lret
pop
cld
aam
daa
mov
insl
fstpt
adc
mov
es
notl
fisubl
and
push
sbb
movq
aas
mov
repnz
add
xor
js
mov
daa
jp
cmp
and
sub
fcomp
jnp
jmp
xchg
jl
pusha
pushf
and
or
cmp
push
inc
stc
into
jecxz
arpl
pop
scas
xchg
mov
push
add
inc
xchg
push
hlt
or
adc
jbe
loope
addr16
cmp
xor
imul
lea
push
mull
lcall
or
sub
mov
mov
dec
add
xor
aaa
jbe
push
jl
nop
xlat
loope
and
sbb
stos
fadds
testl
xlat
out
rcrb
pop
std
cmp
out
xor
in
out
adc
cmp
cmp
mov
lods
test
loop
es
clc
cmp
mov
add
mov
iret
lcall
cwtl
in
loop
sub
leave
das
adc
add
jl
cmp
rol
mov
or
aaa
pop
insb
ret
int
ss
jnp
scas
xlat
leave
insb
jmp
int
mov
pop
mov
out
addl
and
mov
sub
xor
lcall
sub
mov
dec
daa
or
pop
cmpsb
jns
fld1
or
fcoml
cmp
mov
xchg
pop
incb
dec
push
cmp
xor
sbb
jnp
mov
dec
rcrb
lret
cwtl
loope
xchg
add
adc
in
inc
jl
jo
and
addb
mov
sub
mov
inc
jo
rcll
pop
les
gs
stos
mov
shll
mov
dec
mov
leave
mov
out
enter
pop
dec
pop
lea
insb
jmp
movsl
mov
lods
dec
jb
movsl
fisttps
js
xor
pop
mov
mov
sti
jp
adc
aaa
imul
roll
cltd
fstp
arpl
add
lds
pusha
pop
cmpxchg
fisttps
pop
adc
call
mov
push
mov
cmpsb
xchg
aaa
cmpsl
sub
sbb
pop
xor
pop
mov
mov
cmp
adc
pop
das
cld
test
cwtl
and
cmp
mov
mov
lods
and
mov
andb
mov
rcr
aam
out
sbb
inc
lret
out
cmpsl
sub
xchg
iret
je
mov
negb
sarb
and
insb
dec
mov
mov
xchg
ss
daa
rorb
pop
cld
xor
fwait
xchg
js,pt
push
bound
pop
or
cmp
mull
andb
mov
movsl
mov
pop
add
mov
pop
enter
test
pop
mov
pop
stos
popf
mov
sbb
scas
shrb
addb
cmp
add
sahf
fs
mov
inc
aam
sbb
cmp
sbb
cmp
jns
lods
pop
cmpsl
es
push
lret
stos
add
mov
add
fs
inc
js
xor
mov
xrelease
xor
clc
cld
mov
aas
sub
ficomps
jp
insl
xor
sub
mov
je
jbe
je
fidivrl
jbe
std
mov
jecxz
out
cmp
and
xchg
xlat
fiadds
sbb
popa
pop
and
stos
scas
mov
es
sub
pop
inc
pop
push
sbb
decl
cltd
cld
sub
cmc
rorl
inc
je
test
pop
loopne
pop
sbb
mov
jge
sbb
cmc
mov
test
fistpl
pop
mov
in
inc
test
bound
out
arpl
cmpsl
sahf
popa
mov
lcall
cmpsb
fwait
pushf
aas
dec
aaa
pop
and
rorb
sahf
rcl
call
shl
test
pop
jno
sub
mov
cmp
mov
add
mov
xchg
mov
push
fistl
fiadds
rcr
loopne
inc
ja
aaa
movsl
aad
sar
rcl
fmull
nop
sbb
push
loop
cmpl
xor
cwtl
fisttpl
iret
pop
andb
jns
xchg
popf
je
mov
mov
jo
xor
pop
loopne
xchg
push
sar
jge
stos
out
lcall
lds
fidivrl
or
shlb
cmc
mov
or
or
fistps
popa
mov
shll
pop
fildll
lret
mov
mov
push
stc
es
andb
xor
push
inc
pop
jns
sti
mov
rcr
xor
pusha
pop
dec
cmc
jmp
repz
push
cli
xor
pop
int
mov
imul
push
sub
mov
xor
cmpsl
inc
adc
add
scas
clc
xor
inc
xchg
clc
jle
jno
fldt
pop
xchg
aas
mov
sub
adc
orb
mov
sbb
js
flds
xor
movsb
jbe
and
stc
sti
lock
jmp
mov
test
cmp
shl
aad
hlt
mov
xchg
cmp
in
inc
xor
js
sbb
jo
push
xlat
std
jns
call
dec
mov
xchg
out
xchg
rorb
xchg
out
in
add
and
adc
popa
xchg
arpl
jns
adc
lahf
clc
loopne
clc
mov
mov
sub
cmp
ds
es
shlb
mov
repz
push
mov
test
mov
and
mov
addr16
js
inc
aad
cmpsl
inc
aad
dec
pop
add
push
fiadds
in
add
push
pop
pop
cmp
cmp
hlt
push
inc
pop
dec
lahf
js
aas
add
mov
dec
and
cmpsb
xchg
adc
xlat
repz
div
push
or
movsb
lret
push
mov
clc
pop
lret
jge
inc
vcvttps2dq
xchg
sbb
fwait
iret
data16
xor
test
std
xor
stc
mov
sub
clc
pusha
pop
push
imul
sbb
in
cmp
sbb
or
jo
and
sub
mov
xor
stos
lods
xlat
jle
sbb
ja
mov
inc
cmp
dec
sbb
pop
loope
mov
lcall
xorb
pop
xor
dec
add
sub
outsl
stos
mov
dec
sbb
ficomps
and
inc
push
cmp
xor
push
lret
lods
xor
shll
cmp
mov
andb
sbb
cmp
lret
cld
addb
notl
push
add
icebp
clc
pusha
test
fsubp
data16
inc
leave
sahf
adc
pop
inc
inc
mov
pushf
pop
jnp
lret
ds
fimull
mov
xchg
mov
stos
ds
dec
jl
cmpsl
sub
pop
or
mov
mov
out
aas
ja
mov
mov
out
lods
fsub
mov
fdivrl
inc
mov
mov
or
insb
hlt
or
mov
sbb
movsl
scas
or
testl
add
fnstenv
adc
add
cmc
pop
add
sti
negb
call
jecxz
movsb
pop
aam
xchg
popa
jecxz
js
mov
lahf
arpl
mov
fistl
lret
lods
std
inc
sti
push
frstor
inc
arpl
cltd
aad
adc
movsb
pop
cmp
es
idivl
mov
add
es
mov
jg
adc
stos
mov
aam
popf
xor
mov
jle
in
add
push
xlat
and
call
dec
in
adc
call
xchg
mov
sub
movsb
das
jp
out
jbe
mov
mov
mov
shll
ja
inc
adc
cwtl
aas
aaa
incb
xor
pop
ja
mov
mov
cmp
iret
adc
mov
xchg
test
mov
cmc
sbb
lock
out
and
push
xlat
andl
mov
inc
outsl
std
stos
adc
pop
mov
iret
fwait
rcll
test
cmp
dec
stc
sbb
dec
jp
je
cli
mov
pop
inc
add
push
std
sarb
pushf
vcvttss2si
inc
cli
sbb
in
cmpsl
std
or
xlat
adc
scas
cmp
repz
sbb
push
adc
shll
mov
lret
sub
mov
mov
fisttpll
add
fs
jb
jge
rorb
test
fnstsw
pop
dec
hlt
add
fildll
sbb
imul
xor
xchg
in
clc
and
or
mov
dec
mov
xchg
jmp
in
adc
in
push
dec
or
mov
adc
mov
sbb
jmp
popa
jecxz
sbb
popf
or
xor
jl
adc
loopne
jg
add
push
mov
stos
mov
rcrl
inc
das
and
mov
inc
xor
int3
add
inc
mul
popa
adc
jle
fisttpl
adc
inc
dec
mov
inc
pop
imull
mov
cltd
fisubs
jg
clc
rcll
mov
xchg
lods
sti
mov
and
fldenv
push
cld
pop
mov
cmp
xor
jle
pushf
aam
enter
fcmovnu
idivl
xorb
aas
inc
adc
rcrl
cli
aam
out
pusha
cltd
fldln2
push
movsl
push
xor
clc
cmpsl
and
cwtl
lahf
dec
aas
shrl
sub
and
enter
and
addr16
cvttps2pi
daa
fwait
mov
jae
mov
fildl
xlat
mov
lret
sub
xor
mov
inc
and
mov
loop
into
pop
sti
xor
adc
jecxz
mov
clc
ja
cmc
mov
pushl
hlt
rcl
and
pop
adc
lods
or
cmp
mov
pop
pop
jg
movsb
je
pop
xchg
jo
pop
xchg
popf
in
lods
xchg
movb
push
dec
fadd
bound
nop
jl
dec
dec
pop
ficoml
lcall
stc
push
xchg
bound
ljmp
sub
pushf
cmp
scas
bound
mov
sbb
shrl
fistl
pushf
stos
sahf
jne
test
mov
mov
push
jns
add
xchg
data16
loope
adcb
cltd
sub
pop
sbbl
ret
roll
js
loope
lahf
or
aad
enter
push
push
jp
jne
loop
mov
jns
lret
xlat
es
sbb
scas
cmp
sub
jmp
dec
aaa
xchg
insb
sub
fmuls
dec
in
lcall
test
lret
stos
out
scas
enter
mov
cmp
cmp
es
mov
cmp
mov
sub
scas
push
mov
scas
popa
fstl
sbb
pop
dec
sub
lods
jg
jbe
and
push
and
insl
jmp
push
push
sbb
cwtl
xor
dec
mov
sbbl
orb
js
imul
mov
int3
mov
lods
inc
sbb
jbe
mov
test
mov
enter
push
mov
sbbb
sbb
es
jo
push
out
aad
ds
test
cmpsb
pusha
aas
loope
mov
sbb
jo
rclb
add
mov
call
clc
aam
out
mov
dec
pushf
add
xor
mov
mov
jge
push
es
ds
out
loopne
ficoms
ror
ret
in
pop
arpl
into
cmp
stos
jne
enter
movzbl
jmp
orl
lret
jmp
imul
cmp
jo
lods
cmpsl
xchg
popa
in
dec
push
rorb
lods
push
mov
cmp
test
cltd
bound
pop
mov
test
xchg
sbb
cltd
or
ret
call
aad
aas
clc
pop
sbb
and
fwait
loopne
or
push
mov
mov
stc
notl
test
or
push
adc
out
stc
loope
xor
mov
sub
dec
cmp
arpl
mov
add
dec
stos
fwait
sbb
push
and
cltd
and
test
fstpl
fcompl
lahf
out
sub
outsl
mov
jge
adc
insb
popa
psrld
cli
sub
scas
inc
or
fwait
cmp
dec
es
js
mov
pop
sbb
cmc
xchg
orl
jg
test
fcmovne
scas
fistpl
ret
shrl
mov
ffree
cld
adc
in
insb
fisttps
adc
xlat
pop
push
sarl
out
push
je
stos
cmp
fsubrp
jae
cmp
mov
and
in
cmp
sbb
push
push
loope
hlt
shl
in
cld
fwait
mov
int
popf
jecxz
jne
cmp
jp
test
cmp
cmp
ja
jns
sarl
add
inc
xchg
idivl
mov
ja
pop
pop
and
mov
sub
jbe
pusha
cwtl
cmp
fs
mov
test
cmpsl
cmp
es
in
mov
add
loop
movsb
gs
mov
out
adc
pop
scas
incb
mov
loope
xor
ja
jecxz
mov
push
adc
bound
sbb
das
fcomp
andl
repnz
scas
dec
jb
ja
jmp
push
in
mov
inc
jg
sub
fwait
aad
sub
pop
les
dec
mul
mov
repz
pusha
mov
lea
sar
movsl
fmuls
cmp
call
sbb
sbb
inc
sbb
sbb
cmp
sti
iret
ljmp
mov
mov
xchg
lret
and
fdiv
lcall
sbb
fcomps
mov
dec
dec
cmp
sbb
daa
shll
mov
sub
sub
adc
sub
daa
and
stc
mov
daa
sbb
outsl
lock
mov
bnd
cmp
nop
jecxz
sub
imul
or
rcr
pop
mov
out
nop
pop
dec
inc
ss
inc
mov
test
jbe
mov
icebp
les
dec
mov
int3
pop
sub
cwtl
sbb
out
cmp
mov
mov
lcall
cmp
adc
dec
mov
mov
adc
sti
cwtl
push
cltd
or
daa
mov
fldl
push
dec
aad
in
mov
repnz
xchg
add
ja
stc
lds
call
in
pushf
xor
xchg
clc
out
arpl
test
mov
iret
es
and
push
xchg
dec
leave
push
sbb
xor
test
stc
inc
jg
jbe
xor
arpl
inc
loopne
mov
sub
pop
sbb
bound
gs
xor
sub
rorb
mov
adc
pop
lret
sub
xor
fstps
in
aam
jb
xor
fildl
sbb
imul
ret
mov
xchg
es
testl
pop
lods
test
arpl
xor
clc
xor
es
xchg
dec
add
lar
std
fcoml
mov
jl
cmpsl
bound
stos
test
mov
sub
xor
sbb
xor
cltd
shlb
cmpl
fstpt
test
repz
enter
es
ljmp
fsubrs
pop
call
fsubs
rcrb
ss
pop
xor
sbb
je
cmpl
and
jno
sub
adc
daa
pop
sti
mov
ds
ss
pop
or
mov
mull
add
dec
add
push
add
rcrb
sarl
stos
pop
fdivrs
dec
cmp
cmpsl
stc
mov
sarb
sbb
mov
mov
out
gs
mov
sub
cmpsl
movl
mov
insl
push
adc
notl
popf
mov
leave
hlt
std
js
mov
add
stc
js
leave
inc
jg
cmp
in
mov
mov
inc
pop
rcrb
std
fisubs
cmp
ja
imul
lods
arpl
sbb
les
int3
fistpl
mov
fldt
mov
inc
xchg
sarb
mov
sbb
mov
loopne
and
sbb
popa
out
pop
dec
or
sbb
or
mov
add
pop
jnp
pop
xlat
loop
or
cmp
pop
add
ret
in
es
les
push
lock
or
call
sahf
cmp
cmp
hlt
pop
and
mov
insb
frstor
sub
jb
int3
jb
mov
fistps
lret
mov
lock
mov
stos
fcmovnu
mov
add
dec
fstp
sbb
stos
and
aam
fsubr
addr16
mov
lods
push
fnstenv
push
movsb
pop
sub
js
pushf
inc
cld
xor
lds
cmp
and
inc
arpl
dec
mov
scas
or
in
sbb
add
in
ret
or
or
outsb
adc
dec
cli
subb
or
sub
mov
adc
cwtl
scas
fiadds
xchg
in
inc
popa
leave
inc
insl
inc
and
pop
fstps
sbb
sti
or
shlb
int
xchg
rol
sbb
or
or
push
out
lods
xorl
adc
mov
rorb
push
adc
jl
loop
mov
int
sbb
int3
sbbl
pop
icebp
mov
and
adc
adc
scas
cmpb
mov
cmp
inc
pop
loop
mov
xor
in
shll
jp
jmp
and
out
cmpsb
mov
sub
test
adc
or
and
stos
mov
sub
mov
and
in
mov
mov
sti
sbb
add
lods
popl
xchg
adc
cmpb
push
adc
idiv
enter
inc
aaa
in
sbb
or
in
clc
leave
inc
pop
cmp
cmpb
sbb
cwtl
cmp
mov
jnp
lock
push
movsl
dec
mov
scas
shlb
addr16
pushf
cmc
and
daa
jecxz
cmp
cmc
mull
sub
dec
add
adc
clc
xchg
cmp
js
push
mov
jecxz
inc
cltd
jbe
pop
pop
lods
push
xor
iret
out
pop
aam
cltd
scas
fldcw
jmp
inc
cmp
sub
mov
jnp
cmp
cli
or
inc
rcrb
and
icebp
scas
push
sub
ss
push
iret
or
icebp
fdivrl
mov
mov
in
cwtl
sbb
sub
pop
sub
mov
mov
cmp
sbb
arpl
pop
adc
sub
fdivrs
test
outsb
xor
and
mov
addr16
in
sbb
out
insl
cmpsb
fcomp
cmp
lret
fstps
inc
mov
sbb
mov
push
lds
mov
call
mov
adc
movsb
js
xchg
pop
pop
and
and
imul
pop
pop
out
daa
lahf
out
nop
fildll
call
xchg
out
adc
repz
outsb
xchg
loopne
and
cmp
or
popf
fmuls
xchg
test
insl
mov
sbb
jg
ljmp
xchg
mov
sub
push
pop
add
mov
test
cmp
cmp
or
pop
mov
or
test
sub
bound
mov
icebp
scas
jns
push
stc
mov
pop
popa
subl
sbbl
fwait
mov
push
scas
pop
xchg
mov
jno
mov
shll
xchg
call
inc
xor
xor
mov
out
loopne
ret
jbe
and
sbb
in
mov
idivl
mov
movsl
sti
mov
xlat
fwait
mov
mov
or
outsl
dec
cmc
iret
add
dec
out
test
fwait
dec
fs
mov
mov
mov
cmp
add
mov
cmpsl
xor
sbb
lahf
arpl
mov
push
sbb
dec
xchg
pop
adc
inc
clc
jbe
mov
mov
inc
in
jp
imul
hlt
dec
shr
or
out
and
pop
es
test
stc
mov
fdivrs
mov
cmp
push
ss
andl
orl
mov
out
arpl
rolb
mov
enter
mov
dec
push
or
lcall
repz
icebp
sbb
lods
cltd
mov
inc
cmp
stos
push
call
popf
jae
ret
pop
cld
mov
lcall
jge
fwait
ret
cmp
mov
negl
dec
cli
popa
cmpsb
cmp
loopne
pop
lret
popf
jnp
mov
cmp
add
or
xchg
dec
popf
push
pop
dec
mov
arpl
lret
mov
hlt
les
arpl
mov
mov
or
das
dec
mov
add
stc
jns
enter
dec
aaa
subb
mov
mov
mov
pop
iret
mov
mov
dec
out
repnz
or
in
add
bound
sbb
xlat
insl
in
jae
push
decb
inc
inc
or
cmp
xor
fiaddl
out
call
cmp
sub
nop
xor
cmp
cmp
lahf
cwtl
je
repnz
xchg
clc
mov
jno
int
mov
dec
jg
cwtl
insb
icebp
in
cmp
subl
xor
add
xchg
jmp
pop
xchg
daa
inc
cltd
out
pop
pop
pop
nop
cmp
xchg
adc
aad
mov
adc
mov
hlt
sar
shl
mov
in
js
xchg
bound
rorl
cs
adc
push
cmp
xlat
add
xor
jbe
js
repz
pop
ret
inc
fsubrl
ret
aam
ds
enter
in
xchg
xor
add
mov
mov
add
aad
cmp
int3
ret
aas
pop
mov
lahf
sbb
lock
data16
movsl
ss
add
xor
push
and
ret
stos
aam
nop
mov
add
adc
inc
sbb
xchg
inc
push
sbb
imulb
inc
xchg
xchg
pop
sbb
mov
pushf
mov
fsubrs
mov
xchg
popa
adc
fistpll
sbb
xchg
mov
jle
mov
aas
xchg
mov
mov
fnstsw
add
sub
out
pop
leave
cmp
and
xorb
pop
enter
hlt
cmp
sbbl
loop
pop
add
add
xlat
jo
mov
mov
enter
movsl
lcall
outsl
insl
filds
in
loop
mov
inc
aam
test
mov
ficomps
pop
jne
repnz
adc
cmpsl
mov
cmp
fnstsw
cltd
stc
xorb
mov
add
xchg
hlt
mov
jae
add
mov
mov
mov
dec
fnstcw
fs
daa
das
pop
or
popf
xchg
mov
repnz
jle
and
cmpl
dec
out
push
insl
leave
repnz
enter
dec
add
xorl
cwtl
xchg
iret
pop
aam
xchg
push
jge
push
stc
mov
adc
cmp
sbb
pop
icebp
fistpll
jge
mov
fstpt
inc
stc
or
jmp
mov
enter
sahf
mov
add
popa
xlat
dec
fmuls
sub
insl
pop
lods
mov
sbb
and
xchg
dec
popf
mov
pop
or
shlb
sbb
dec
cmp
enter
nop
or
adc
xchg
ljmp
inc
ret
add
lret
aaa
mov
xor
add
add
outsb
sbb
es
mov
lds
cwtl
filds
in
adc
and
daa
jecxz
stc
and
mov
hlt
stos
add
mov
shrl
fisttpll
into
je
jecxz
sahf
mov
cmp
pop
jg
sub
cmp
enter
nop
cmp
mov
rcrb
mov
dec
popa
stc
stos
adc
lods
cmp
fsubrp
xchg
sub
jecxz
mov
fstpt
mov
into
nop
sbb
add
mov
mov
pop
and
repz
inc
fldcw
stc
mov
mov
in
adc
stc
pop
pop
or
pop
js
adc
jmp
je
shll
pop
dec
fistpl
cmp
cmp
push
addr16
jbe
loopne
mov
cmp
cld
fisttpll
mov
xor
sbb
add
lahf
int
mov
daa
aam
popa
inc
adc
xor
inc
xchg
jg
jo
fmuls
lods
mov
pushf
cli
inc
icebp
inc
cltd
sbb
and
fistps
mov
mov
loopne
out
xchg
jmp
xlat
push
xor
in
mov
mov
xchg
mov
test
and
adc
mov
in
div
stc
dec
mov
xchg
dec
shrb
fnsave
in
mov
push
pop
repz
sub
in
xchg
cld
pop
push
data16
into
xor
mov
movsl
xchg
lret
sbb
and
dec
adc
pop
stc
inc
and
fisttps
sti
cmpsb
or
inc
orb
lds
ljmp
jl
out
jmp
push
jge
mov
mov
mov
je
adc
out
movsb
pop
es
jecxz
fisubl
xlat
mov
mov
nop
jp
jge
pop
insb
mov
and
cs
xchg
and
or
mov
add
mov
loopne
sub
push
sbb
in
sbb
sbb
call
cmp
mov
mov
sub
pusha
stc
sbb
popa
scas
cltd
pop
sbb
dec
mov
dec
xchg
jne
xor
fsubr
sbb
sbb
loop
popf
je
mov
cmpsb
jle
sub
adc
out
loop
and
add
dec
fnstenv
xor
mov
xor
sub
clc
or
inc
sbb
pop
arpl
xor
xlat
sbb
mov
iret
mov
frstor
cmp
xchg
aaa
jnp
push
sbbb
jp
es
popa
loop
cmc
ret
imul
push
ret
mov
mov
mov
xchg
push
imul
pop
dec
insl
loopne
jge
mov
pop
in
cmp
mov
cltd
imul
addr16
pop
test
in
sbb
js
arpl
jnp
pop
mov
push
and
or
sbb
fidivrl
mov
fistl
pop
lods
xor
pop
iret
mov
push
push
popa
cmp
stc
sbb
pop
sub
cmpsl
test
push
mov
cmpsl
pop
adc
sbb
jmp
sbb
test
int3
aam
push
test
xor
inc
pop
xchg
in
roll
testl
mov
xor
clc
std
pop
stc
xlat
sbb
push
call
out
lret
in
pop
mov
mov
dec
xorl
sub
inc
mov
jecxz
and
ss
fidivrl
rclb
or
jbe
xchg
xor
enter
adc
jns
xchg
adc
fadds
adc
es
fs
repnz
setae
or
scas
std
outsb
lds
sbbl
hlt
enter
sub
clc
xorl
dec
test
xchg
das
ds
and
xor
jne
mov
int
cmp
ja
xchg
xor
ja
mov
add
rcr
fnstenv
jmp
fidivs
cs
and
addr16
in
mov
pop
cmpsl
sbb
pop
daa
sbb
les
ljmp
stc
cltd
push
xor
arpl
popa
scas
fdivrs
mov
xchg
leave
lret
xor
lret
cs
pop
lods
jne
rol
cmp
mov
fdivrl
pop
out
sbb
xor
inc
mov
js
mov
adc
inc
mov
popa
xor
or
dec
jne
fnstcw
loop
push
sbb
inc
pop
aas
dec
inc
xor
out
mov
adc
scas
sbb
icebp
or
cmp
pop
mov
call
mov
mov
enter
ret
xor
clc
jo
xor
pop
push
call
mov
loop
dec
cmp
sub
inc
js
fld
jo
movsl
mov
sub
sbb
mov
call
mov
jecxz
std
mov
imul
xchg
je
pop
imul
and
mov
cs
adc
adc
xchg
jo
loop
mov
idivl
pop
stc
fs
xchg
pop
and
test
mov
mov
xchg
out
inc
cli
or
movsb
dec
cli
adc
or
push
mov
sbb
jns
and
cld
add
dec
call
bound
cmp
aas
test
push
xor
cwtl
adc
inc
add
ret
mov
lea
mov
sti
fbstp
or
mov
dec
jbe
pushf
adc
adc
test
orl
gs
sbb
mov
pushf
ja
inc
adc
out
or
ja
fbstp
out
scas
push
inc
jecxz
push
loopne
nop
push
mov
mov
cmp
cmp
cmp
cmc
pop
add
enter
mov
mov
rcrb
pop
ljmp
dec
popa
lret
dec
adc
dec
and
ja
shrb
inc
sbb
push
idiv
cmp
jle
jecxz
fcomp
push
popa
and
mov
mov
jae
mov
sub
popa
lret
sti
arpl
push
xor
popf
push
cltd
dec
iret
addr16
pusha
bound
and
notl
or
fldenv
dec
push
inc
in
or
mov
fs
jb
adc
and
loop
mov
into
out
sub
cmpsb
sti
shlb
pushf
xchg
jle
mov
cli
mov
xchg
sbb
lods
negb
repz
je
dec
cltd
dec
std
cltd
negl
jge
addr16
fsubs
mov
in
sub
je
mov
mov
mov
mov
sbb
fyl2x
adc
fldcw
stc
cmp
inc
lods
rcl
fcomps
pop
jmp
iret
cltd
daa
mov
cmp
stc
sahf
insl
loopne
std
inc
xor
sbb
loopne
mov
in
adc
imul
jbe
mov
mov
sbb
xchg
add
lock
mov
into
js
sub
push
fwait
jecxz
repz
xlat
jnp
addr16
xor
inc
lcall
pop
pushf
dec
cmp
inc
and
cwtl
aas
scas
iret
xchg
decl
cmpb
xor
in
pop
arpl
mov
test
leave
sahf
lock
inc
mov
out
lcall
hlt
cmp
sub
lds
icebp
shlb
in
push
dec
repz
loopne
cmpb
fisttps
clc
cld
cwtl
js
mov
aam
addb
pop
adc
pushf
mov
popa
lods
mov
mov
xchg
mov
stc
dec
mov
dec
cmpsb
test
pop
and
cmp
pop
sbb
sub
mov
jp
dec
ljmp
xor
add
in
bound
lods
mov
inc
aaa
rorl
stos
and
inc
lods
mov
clc
clc
inc
sbb
sbb
bound
pop
popl
or
je
cmp
mov
enter
fldl
mov
lret
jecxz
sbb
iret
xor
mov
sti
int
mov
and
aaa
addl
mov
negb
xchg
daa
repz
insl
fmul
cltd
or
cmpsl
test
ljmp
xlat
stc
dec
xchg
stc
mov
inc
fldenv
cmp
jl
outsl
test
js
fcomp
test
xor
psllq
repz
fistpll
dec
mov
fisubs
jne
out
inc
aad
mov
rdmsr
cld
test
lock
jno
add
clc
adc
sub
mov
and
and
cmp
inc
fistps
fisttpll
mov
sahf
xlat
loopne
aas
mov
jno
jbe
jle
in
iret
aam
sbb
mov
mov
rcl
xchg
je
imul
cmc
ret
ljmp
jl
mov
hlt
je
bound
mov
mov
pop
insl
das
outsb
jl
sbb
popa
mov
add
js
mov
and
push
dec
inc
mov
nop
xchg
std
mov
and
ds
insl
dec
insb
aam
loope
loop
sbb
jle
outsl
cmpsl
aas
sub
popa
shll
aas
mov
mov
fimuls
dec
sbb
cmp
ja
and
lods
jae
pop
dec
jne
inc
shr
icebp
push
stos
ja
enter
sbb
daa
dec
xor
push
or
call
repz
inc
pushf
and
jne
fistpll
incb
mov
mov
xor
mov
fs
rolb
sti
mov
enter
cmp
rclb
jne
popf
xchg
lahf
pop
popa
or
negl
cmp
jns
icebp
inc
jnp
fsubs
pop
cmp
sbb
fidivl
mov
mov
fs
out
scas
pop
cmpsl
insb
nop
jge
mov
aam
mov
cwtl
movsb
adc
pop
insb
adc
pop
loope
and
jge
mov
test
adc
mov
out
add
xlat
adc
pop
ret
aam
adc
jmp
cltd
mov
or
xchg
rcl
mov
lods
and
mov
mov
rorb
popa
popf
xlat
inc
testb
imulb
xchg
pushf
push
das
jmp
iret
ja
cmpsl
pop
cmc
cltd
jo
xchg
mov
jmp
mov
inc
lds
mov
movl
iret
lahf
xor
rcr
mov
aad
test
jge
inc
sbb
aam
lahf
rclb
pushf
pop
and
mov
divb
mov
mov
mov
outsl
push
inc
mov
inc
aad
gs
cmp
int3
pop
lahf
sbb
jle
pop
adc
cwtl
pop
addr16
cmp
push
cmpl
dec
sbb
repz
mov
jp
pushf
call
lock
jae
adc
cmp
fwait
mov
jne
outsb
cmc
mov
rclb
and
jp
mov
push
mov
adc
mov
ja
cld
adc
sbb
sub
outsl
fmul
test
inc
sbb
ss
xor
mov
ss
adc
jbe
dec
jge
clc
pop
jl
jmp
xor
cmp
imul
in
sbb
mov
out
test
lods
cmp
dec
add
sub
sbb
xchg
push
xor
lahf
scas
lahf
xor
nop
rolb
testl
cmp
inc
sbb
cmpsb
jle
test
mov
jnp
add
fldenv
sbb
inc
negb
push
out
sbb
mov
or
stc
imul
jo
cld
mov
inc
ss
inc
mov
pop
js
mov
or
fstpl
push
movsl
xchg
mov
jmp
inc
adc
mov
aaa
stc
shrb
xchg
mov
scas
and
addr16
iret
ret
inc
push
out
fstpt
pop
jecxz
fstpt
repz
cmp
jp
jns
loop
mov
mov
clc
inc
or
fld
xchg
test
add
push
hlt
popa
xor
mov
mov
cltd
or
jg
mov
aad
add
clc
inc
pop
lahf
pushl
and
adc
mov
xorb
insb
lods
adc
pop
push
loope
jns
lock
xchg
dec
nop
jae
push
rorl
sbb
or
popa
idivl
jnp
mov
mov
mov
cmp
xchg
sbb
push
nop
jecxz
and
jl
movsb
addr16
add
lods
lahf
lcall
shll
add
fsubrl
decb
cs
mov
lcall
sti
cmp
bound
jbe
pop
sbb
mov
or
pushf
dec
ds
movl
fs
jl
mov
loop
push
xchg
cmpxchg
in
push
mov
rclb
mov
sbb
fiaddl
shl
ficoml
add
jl
dec
ss
adc
shll
ja
mov
pop
mov
scas
outsb
in
mov
arpl
insl
add
mov
mov
mov
movsl
movsb
inc
js
sahf
in
sub
sub
subb
push
jg
jmp
aas
sbb
dec
fwait
sub
jmp
pop
mov
cwtl
xchg
xor
mov
pop
cmp
clc
aad
or
xor
dec
mov
pop
push
sub
inc
pop
xor
adc
test
scas
lds
jl
lahf
sub
aad
push
ja
mov
cs
movsb
stc
arpl
mov
xor
js
pop
mov
pop
arpl
pushf
jbe
mov
inc
push
inc
push
imul
pop
lcall
xor
aad
ja
lods
das
pop
js
adc
addr16
lret
fwait
cmp
sbb
mov
adc
iret
sbb
cmp
mov
jle
aaa
mov
adc
jge
xchg
ljmp
add
sbb
test
aaa
xchg
lods
sbb
in
and
xor
cmc
adc
arpl
aas
test
xchg
pop
adc
dec
and
mov
sbb
sti
and
out
test
rolb
jle
sub
inc
sub
and
dec
cmp
mov
mov
add
inc
and
cli
in
pop
mov
mov
rcll
scas
lcall
jae
dec
stos
cmp
icebp
inc
mull
push
not
js
mov
stos
sbb
mov
pop
dec
dec
enter
mov
sub
out
in
repz
loope
jl
mov
jl
and
test
fwait
inc
mov
icebp
xor
arpl
mov
scas
inc
jg
fstps
inc
pop
cmp
pop
stos
pop
enter
push
rcr
fldenv
jae
in
loop
push
psubsb
negb
mov
js
shlb
mov
and
loopne
sbb
cmp
mov
adc
inc
xor
dec
popf
pop
sahf
aaa
inc
pop
repnz
add
mov
test
jbe
scas
dec
lret
ja
aas
sbb
jmp
imul
cltd
cmp
cmp
xlat
mov
cmc
inc
lea
mov
jg
pop
fmull
out
faddl
mov
mov
or
jg
hlt
jecxz
pop
add
dec
mov
fstpt
pop
enter
sahf
flds
aas
shl
cld
les
xlat
in
movsb
mov
loope
into
inc
ds
xchg
imul
scas
push
adc
cld
clc
pop
mov
test
mov
cwtl
or
andb
lods
mov
test
cli
or
jbe
cmp
and
inc
xlat
rol
jl
les
jl
add
fdiv
sub
or
stc
mul
adc
mov
jae
rorl
inc
mov
mov
popf
add
sbb
fldcw
mov
test
mov
pusha
mov
mov
cmp
sub
mov
add
pop
jns
push
mov
xchg
mov
sub
scas
push
pop
lods
fadds
shl
mov
mull
cmp
in
lcall
mov
lea
outsl
loop
cld
jmp
adc
mov
testl
mov
pop
push
xor
aam
arpl
xchg
jp
sbb
sub
xor
push
std
cli
pop
jbe
sub
adc
jns
jecxz
cmp
mov
movsb
mov
push
mov
fnstsw
cld
loopne
cmpsb
dec
adc
cmpsl
mov
stos
dec
gs
push
sbb
cmp
pop
dec
sbb
cmp
cli
mov
pop
jo
daa
cmp
cld
inc
and
sub
je
jg
xor
and
es
dec
cld
push
hlt
xchg
xchg
adc
sti
cmp
lods
aam
adc
add
mov
sub
rcl
sti
sbb
enter
mov
in
xchg
dec
push
dec
inc
mov
out
and
stos
and
mov
lret
dec
adc
or
push
nop
les
add
pop
fbstp
and
stc
cmp
andb
mov
cwtl
dec
push
das
xchg
adc
popf
xor
and
and
mov
loope
iret
jmp
inc
dec
add
add
lods
leave
rol
jbe
pop
movsb
cmpsb
add
repz
hlt
test
outsb
mov
xor
scas
addr16
lea
lea
xchg
adc
mov
mov
jge
imul
push
and
and
mov
nop
js
aad
or
dec
fildl
jns
mov
xor
imul
sbb
stos
dec
jo
in
xchg
ret
cmpsl
cmp
or
enter
cmp
cmpsb
out
cmp
cmp
cmp
enter
std
mov
subl
in
mov
mov
mov
lods
jmp
fs
nop
mov
adc
sti
stos
jg
repz
test
aas
mov
cs
sti
sub
fbld
mov
mul
daa
mov
ja
ret
cwtl
test
dec
mov
and
pushf
xchg
ja
out
push
sbb
and
adc
lahf
adcb
popa
sub
add
mov
and
push
fstpl
pop
cmp
cmp
inc
pop
sub
mov
test
pop
nop
jecxz
mov
gs
xchg
adc
sub
sub
shrb
mov
es
enter
adc
inc
or
fcomp
pop
mov
mov
out
mov
or
jnp
cmp
add
pusha
stos
loopne
fisttpl
cmp
and
rclb
jmp
inc
push
loope
pushf
mull
test
jge
mov
add
insb
sub
jmp
sbb
outsl
jecxz
pop
fs
mov
push
movsl
loope
test
leave
and
mov
xor
fdivs
xchg
mull
push
mov
add
sbb
mov
cli
repnz
mov
or
cmpsb
aaa
push
cli
mov
sarl
dec
stc
sub
incl
cmp
aas
or
aaa
test
sbb
cmpsb
add
in
sub
insb
cmpsl
sub
flds
arpl
inc
pusha
jo
push
push
scas
rolb
clc
adc
mov
int
ds
pop
jnp
mov
or
fpatan
mov
cmc
cmp
xchg
int3
mov
loopne
rclb
dec
mov
lret
sub
push
push
push
jmp
sbb
or
es
push
sub
cwtl
xchg
mov
mov
lcall
cmpsb
or
shrl
les
mov
xor
sar
cmp
sub
out
mov
cmpsl
xchg
add
fsincos
cmp
xor
inc
sbb
mov
cmp
mov
icebp
shll
mov
mov
cmp
nop
divl
imulb
out
subl
test
sbb
js
lods
mov
loopne
mov
cmp
ljmp
jmp
push
enter
jmp
scas
cmpsl
inc
cmp
adcb
decl
mov
movsl
xchg
push
cmp
mov
add
and
mov
fwait
pushf
mov
cmp
popa
cmp
mov
xor
adc
rcrl
xlat
xchg
hlt
push
ret
jb
push
add
repz
outsb
pop
in
lods
fdivl
lret
stc
sub
out
jno
push
sub
dec
subl
nop
adc
adc
mov
mov
adc
cmp
inc
sbb
stc
dec
nop
scas
mov
dec
mov
adc
sbb
mov
mov
sub
jnp
lds
insb
popa
pop
ret
push
mov
movntps
out
pop
inc
jecxz
or
push
inc
push
or
imul
xor
mov
push
jo
xchg
idiv
pushf
jecxz
cwtl
pop
cmp
jns
rcr
push
pop
fldt
out
es
pushf
rolb
add
outsl
cmp
mov
pop
jb
sbb
movsb
nop
pop
scas
and
rolb
inc
inc
mov
mov
je,pn
push
adc
pop
or
jecxz,pn
loopne
push
clc
or
loop
cmp
fistpl
adc
aam
insl
sbb
insl
orl
mov
mov
inc
fs
stc
mov
inc
inc
pop
loopne
out
inc
out
mov
mov
add
popa
mov
xchg
cltd
cli
lcall
push
pop
mov
xor
push
test
and
fnstsw
rcrb
daa
mov
pop
sub
xchg
rcrb
popf
fistl
and
pop
js
add
xor
push
repnz
mull
cmp
pop
adc
mov
fprem
pop
mov
mov
cmp
xchg
dec
add
ljmp
push
pop
mov
cld
or
rcll
fxch
loopne
mov
xchg
mov
scas
pop
mov
sti
inc
inc
cmp
pop
sub
fldt
test
jg
insb
cmp
pop
xor
jnp
or
xor
cmp
adc
aaa
inc
leave
sahf
sbb
xor
sbb
icebp
addr16
mov
rolb
stc
push
cmp
push
mov
out
stos
pushf
adc
jecxz
cmp
push
stc
lcall
ret
pop
sub
arpl
fs
sti
lret
push
xor
cli
jmp
cmpl
cmp
sbb
mov
stc
std
jo
pop
xor
dec
lea
mov
xchg
push
fstpt
jecxz
mov
sti
jl
cmp
ja
or
mov
shll
xchg
push
les
cmp
mov
jle
xlat
out
lret
sarl
fadd
cli
addr16
jge
mov
lods
sub
icebp
and
and
mov
loop
popf
and
mov
sbbl
stc
scas
push
xlat
std
cmp
xor
aas
addr16
loop
sub
notb
iret
lcall
mov
les
cmp
mov
sub
cmp
fnstsw
push
enter
clc
scas
repz
rcrl
mov
push
lods
out
lea
inc
rorb
add
inc
mov
adc
sbbl
lret
leave
imul
stos
push
lods
ficomps
inc
mov
mov
cmpsl
add
cmpb
sahf
add
shl
or
adc
mov
mov
roll
sub
in
or
adc
lea
mov
addr16
fwait
jp
push
stos
mov
fimuls
xchg
cmp
cmp
popf
cmp
sarb
idivb
xchg
jg
repz
aad
cmp
hlt
and
cmp
mov
fcmovne
sti
ljmp
cmp
aas
call
lods
cli
das
inc
mov
les
mov
mov
jo
mov
push
jbe
ja
cmp
sbb
bound
das
pop
dec
in
negl
adc
sbb
movsb
cmpsb
push
mov
fstpl
pop
jo
clc
mov
adc
mov
sti
xchg
test
cltd
mov
popf
xchg
sub
xor
mov
popa
add
mov
add
cmpsb
xlat
mov
sbb
test
xchg
loop
cmp
por
scas
sub
inc
xor
dec
mov
ss
cmp
jp,pt
inc
popf
xchg
inc
fldl
aas
mov
daa
insl
lea
cmp
fucomp
pop
enter
fisubl
xchg
sbb
xor
mov
lds
or
test
fists
cmp
sbb
mov
xchg
pop
mov
cltd
in
and
push
leave
fistpl
mov
negl
data16
loopne
push
loopne
aam
loopne
cwtl
testl
cmp
adc
mov
jg
fistps
inc
xchg
lret
dec
ret
sub
jp
cmp
in
shll
cmp
mov
rcrb
mov
ljmp
mov
data16
dec
popa
mov
inc
or
jbe
mov
in
enter
and
dec
push
fbld
jp
ret
mov
jmp
fdivrs
adc
stc
mov
xor
jp
sarb
inc
lods
adc
mov
and
das
cmp
scas
add
push
sahf
cmp
pop
dec
test
sub
dec
in
pushf
test
mov
mov
stc
inc
stc
pusha
in
mov
arpl
scas
dec
jae
stos
mov
in
lret
movsl
dec
push
inc
jl
jp
loopne
jp
xchg
push
sbb
cmp
cmp
xchg
or
inc
in
jnp
out
mov
mov
mov
cmp
ret
inc
cmpsl
mov
push
pop
arpl
js
mov
int3
and
adc
sbb
pop
mov
xchg
sub
and
and
xchg
jne
add
mov
xchg
dec
xchg
loope
movsb
test
fwait
mov
nop
push
sti
into
pop
mov
mov
loope
inc
test
in
daa
dec
stos
jmp
cmp
stc
into
sbb
push
mov
adc
popf
jnp
jb
popl
out
out
daa
xorl
mov
call
movsb
mov
jns
outsl
dec
mov
arpl
repz
ficoml
add
fidivs
sbb
adc
loope
or
lahf
lds
xor
jmp
cli
mov
dec
jmp
cmp
in
push
loopne
push
outsl
xchg
rcl
xchg
and
pop
mov
std
mov
dec
cmp
pop
shlb
add
adc
cli
test
sbb
mov
lods
mov
mov
sbb
mull
shrb
stos
mov
xor
cmp
fsubl
in
nop
inc
push
cmp
mov
cmp
dec
nop
iret
sbb
sub
fdivrs
pop
imull
out
mov
push
adc
pusha
mov
je
mov
cmp
sub
xor
pushl
sub
mov
movsb
fadds
ljmp
fstpl
test
ret
mov
adc
stos
int
mov
xor
mov
and
mov
std
dec
sbb
icebp
mov
iret
repz
loope
mov
inc
pop
out
xor
dec
mov
in
xchg
and
mov
inc
sti
jle
xchg
jl
mov
ret
inc
sbb
mov
imul
es
mov
push
in
in
push
or
test
stos
mov
arpl
push
decb
ljmp
add
bound
stc
inc
cmp
mov
shlb
sub
std
add
mov
or
dec
mov
pop
or
sti
pop
mov
jecxz
jnp
and
les
in
sti
mov
sahf
inc
fstpt
repz
js
call
iret
sbb
cmp
js
shr
std
cli
fisttpl
push
repz
xor
jecxz
pop
test
cld
flds
and
shll
pop
test
fbld
rcl
push
loope
xor
imul
cmp
loopne
add
push
mov
jecxz
lea
push
pop
out
jne
xor
jmp
test
push
fdivs
jbe
es
fbstp
scas
add
jbe
call
dec
icebp
mov
jecxz
mov
mov
fprem1
pop
xorl
pop
adc
repz
and
fldenv
sbb
adc
call
sbb
lahf
mov
aad
sub
sub
cmp
bound
cmp
rol
sarb
sbb
sub
les
cmp
dec
int3
pop
xor
sub
outsb
popf
fidivrl
lahf
in
push
adcl
out
pop
xchg
js
sahf
jl
and
rolb
mov
in
loope
or
pop
push
cmpsb
push
cmp
mov
sti
sub
dec
pop
in
xchg
es
das
xchg
dec
lret
in
inc
popf
in
and
inc
or
popa
jmp
loopne
inc
mov
daa
cltd
mov
loopne
cmc
pop
dec
xor
popa
aad
in
mov
aad
add
mov
lods
mov
sarl
jns
mov
rorl
push
mov
and
andb
sbb
or
cmp
jae
cltd
fsubp
lods
daa
gs
loop
mov
lret
sbb
dec
sub
enter
popf
mov
cmpsl
cmp
mov
pushf
push
int3
xorb
popa
js
nop
in
cmp
jno
sbb
dec
roll
int3
or
in
push
cmpsb
mov
stos
mov
aaa
jb
xor
jmp
xor
sub
flds
inc
mov
jge
cld
jg
jmp
add
mov
lcall
adc
cmp
imul
ljmp
pop
adc
add
mov
adc
enter
mov
fistpl
and
fistps
push
fisubs
xor
and
js
data16
push
je
jp
pop
push
psubusb
cmpl
mov
adc
lret
xor
sbb
enter
into
dec
mov
mov
arpl
rolb
dec
fldcw
movsb
mov
sub
leave
lcall
jb
fneni(8087
aaa
add
stos
test
out
les
fs
lret
mov
xchg
stc
test
push
fwait
cmp
notl
loopne
aam
addr16
aam
out
mov
xlat
stc
adcb
mov
fwait
idivb
subl
sub
movsb
jns
cli
push
sbb
jle
ss
insb
das
cmpl
loopne
or
fistpl
mov
mov
movb
repz
les
ret
mov
jae
push
movsb
rcr
mov
xchg
xchg
push
pop
arpl
insb
icebp
in
mov
movsl
dec
int
stc
push
jl
bound
test
dec
xchg
js
sbb
insl
jge
cmp
sarb
and
js
xor
in
mov
and
mov
mov
inc
rep
sub
fldl
or
ds
xlat
out
or
xor
jmp
pop
mov
adc
dec
dec
js
add
ds
cs
aam
cltd
sbb
mov
sti
shl
push
cmpsl
lock
inc
sbb
adc
popf
mov
pop
mov
cmp
stos
mov
xlat
cmpsb
sub
cmp
sub
mov
test
inc
mull
adc
insl
test
inc
inc
bound
insb
inc
shr
pop
fsubrs
movsb
andb
xchg
dec
jbe
jecxz
jecxz
fadds
cmp
fstpl
je
cmp
mov
mov
jo
or
pop
enter
cmp
cmpsl
and
cmp
dec
mov
xchg
rcrb
mov
mov
daa
test
pop
jmp
fistpll
cmpsb
cmp
andl
pop
ja
out
cmpsl
js
shlb
cld
pop
and
test
sub
aad
xchg
scas
scas
aam
ja
ljmp
sarb
filds
push
push
fsts
loop
or
xlat
shl
sbb
pop
pop
xchg
dec
fsubl
and
add
jecxz
mov
bound
mov
push
int3
fsubrl
out
fwait
sahf
loopne
pop
ja
adc
dec
dec
jns
xchg
adc
addr16
sti
rolb
sbb
test
push
mov
sarl
imul
xor
mulb
enter
sbb
mov
lock
jnp
jnp
shrb
cwtl
add
pusha
add
cmp
arpl
cmpl
inc
lret
dec
adc
cli
es
adc
mov
cltd
mov
mov
add
pop
jmp
int
iret
push
mov
mov
pop
adc
or
cmp
mov
adc
and
call
mov
push
pop
sub
xlat
pop
mov
fimuls
fnsetpm(287
out
ret
iret
insl
ja
inc
pop
or
xor
cli
mov
adc
icebp
insb
insb
nop
loope
loopne
mov
inc
and
mov
dec
or
and
mov
divb
shll
and
mov
push
loope
into
les
push
mov
mov
fwait
and
cld
pop
insl
aaa
aad
mov
add
cmp
in
fwait
jmp
cmp
mov
jo
stos
movl
loop
scas
jnp
icebp
fsubs
rorl
adcl
push
divb
mov
stos
int
rclb
add
push
scas
mov
sbb
aaa
sbb
subl
mov
lock
xor
rolb
call
cmp
push
lret
ja
flds
das
cmp
test
dec
jle
push
and
dec
mov
shrb
add
test
rcrl
xchg
frstpm(287
mov
sbb
pusha
call
jp
cmp
mov
cmpsl
mov
mov
pop
addl
imul
push
loopne
jae
loop
add
mov
mov
jb
mov
sub
dec
subl
pushf
and
sub
sbb
jmp
adc
pop
or
fistpll
pop
xlat
dec
gs
xor
dec
inc
sarb
add
clc
arpl
je
or
pop
out
sub
adc
iret
cltd
outsb
cmp
test
ja
jb
and
or
insl
cmc
jle
cmp
sbb
pop
add
in
cltd
mov
lods
in
mov
pop
adc
test
mov
call
jnp
sub
sbb
xor
mov
out
stc
aas
sbb
cmp
fcompl
test
cld
fistpll
lret
cld
pop
fmul
nop
mov
aam
cmp
inc
xor
mov
cwtl
arpl
int
in
mov
testl
mov
loope
dec
loopne
roll
or
hlt
fs
cltd
aaa
dec
cmp
shr
nop
cmp
stos
sti
pusha
xor
sti
mov
in
enter
lcall
insl
bound
lret
mov
and
in
stos
pop
dec
sbb
inc
shlb
insb
mov
jmp
mov
pop
cmpb
push
bound
pop
mov
or
lods
repnz
or
in
ljmp
cli
sbb
fistps
xchg
jo
jp
sub
dec
jle
mov
pop
or
shll
out
gs
js
sbb
sub
pusha
or
testl
xchg
std
lea
adc
mov
and
pop
xchg
xorb
fldenv
mov
mov
cmp
pop
mov
iret
pop
mov
ret
cmp
shrl
movsb
arpl
lods
inc
fcomps
cwtl
jmp
fcomip
pop
fistpl
sahf
lcall
mov
sahf
and
xchg
pop
mov
enter
shl
cld
pop
and
arpl
xchg
mov
mov
lock
mov
fdivrl
push
mov
nop
sub
sbb
or
stos
inc
sbb
in
icebp
fildll
cmp
cwtl
mov
stos
rorb
shlb
or
mov
push
sti
int3
mov
mov
or
adc
mov
dec
xchg
xchg
icebp
cmp
hlt
cwtl
sbb
xchg
pop
sub
dec
notb
xchg
cmp
ljmp
dec
cmp
mov
popf
sub
hlt
mov
and
jno
pusha
mov
cmp
jp
out
dec
pop
mov
pop
dec
add
sbb
xor
popa
and
arpl
add
arpl
push
lea
add
stc
fmull
in
addb
sub
rol
pushf
sbb
mov
push
or
inc
jp
das
pop
popa
out
push
call
cmpb
js
ja
les
sub
fisubs
pop
fsubl
out
arpl
add
out
xchg
test
jae
and
jns
or
pop
mov
sbbl
xor
popa
sbb
aaa
jecxz
bound
adc
mov
push
mov
cli
fistpll
jmp
scas
jle
aas
pop
stos
push
je
iret
loopne
adc
jns
cld
icebp
push
fwait
and
enterw
add
adc
cli
dec
mov
stos
fmuls
and
sbb
sar
mov
test
adc
stc
add
sti
fsubrp
xor
fidivl
pop
cmp
mov
lret
fdivrl
and
mov
ds
or
adc
or
mov
mov
mov
mov
jno
sti
mov
xor
call
in
sti
sub
mov
pusha
and
and
mov
jbe
leave
gs
cwtl
sbb
fdivr
jns
mov
mov
rcrl
xor
push
jbe
data16
lret
bound
roll
in
loopne
mov
mov
std
testl
adc
or
loope
push
outsb
out
inc
lcall
or
xor
jmp
sti
pop
pop
sbb
mov
xor
outsl
ficomps
pop
shlb
mov
sub
jnp
insl
sub
aaa
pop
rorb
cmp
dec
xor
adc
fdivr
cmpsl
and
shr
xlat
lret
pop
mov
sarb
repnz
cmp
test
fstpt
fdivrs
xchg
pop
adcb
cmc
cmp
cmp
loope
aam
stc
sbb
cmp
cmp
mov
pusha
adc
aam
int
fisttps
dec
out
mov
or
aam
mov
mov
dec
push
stc
paddsw
scas
stos
notl
popa
std
adc
leave
pop
movl
repz
pop
mov
movsl
popf
cmp
es
enter
pusha
mov
cwtl
aam
jmp
inc
adc
pop
loop
rorl
bnd
pusha
mov
sub
inc
movl
sbbw
int
testb
inc
add
adc
mov
popf
pop
jg
fisttpll
cmp
jg
repz
mov
adc
cli
lcall
mov
xor
mov
rcr
pop
cmp
testb
push
fimuls
loopne
mov
insb
jge
lea
and
cmpsl
and
sub
test
lods
add
push
mov
jg
loope
cmpsl
sub
lahf
int3
cmp
pop
loope
decb
out
dec
xchg
lds
enter
rol
pop
sahf
fwait
jmp
in
pop
movsl
cmp
sar
stc
jg
scas
scas
jg
cmpsl
cld
adc
xorb
fisttpll
xor
in
loop
add
mov
sbbl
inc
lahf
rorl
add
mov
push
pop
mov
sbb
or
cld
iret
inc
inc
xor
leave
enter
push
pop
adc
std
jmp
dec
in
in
cmp
repnz
es
hlt
mov
movsb
pop
push
xchg
insb
in
sub
mov
popa
lods
pop
mov
sti
xchg
jl
lret
in
idivl
cmp
sub
movsb
sub
loope
xor
mov
jo
addb
xor
movsl
sbb
arpl
lods
xchg
add
fmul
and
movsb
lcall
js
lcall
xor
inc
cwtl
scas
rol
inc
inc
jb
xchg
xor
out
rorb
popa
cmp
imul
xlat
mov
imul
addr16
imul
test
enter
ret
dec
fists
xor
or
or
shrb
lcall
or
mov
shlb
pop
cmp
cmpsl
pushf
mov
xlat
js
leave
and
int3
sbb
lret
cmp
sbb
jbe
enter
xchg
iret
rclb
out
stc
popf
jl
xor
and
stc
bnd
mov
push
cmp
ja
cmpsl
mov
in
mov
aas
in
pushl
and
mov
mov
andb
mov
cwtl
mov
inc
jecxz
pop
dec
and
mov
fdivs
cmp
les
scas
sub
and
scas
loope
jg
in
pop
daa
push
xor
inc
jmp
mov
or
sub
xor
rcrb
pop
mov
sub
ret
arpl
leave
xlat
sti
leave
test
sub
mov
xor
daa
sarb
mov
mov
xchg
subb
in
out
mov
mov
jae
mov
or
pop
sub
fistps
dec
jae
add
fcompl
pop
lods
mov
fs
insb
pushf
test
test
out
add
jge,pn
xchg
ds
rorb
popa
mov
add
add
aaa
fcomps
nop
es
push
lods
cli
in
out
jl
mov
mov
jbe
cmp
loopne
hlt
and
pop
dec
call
frstor
xor
inc
inc
xor
and
jo
dec
mov
ljmp
dec
data16
cmp
pop
cmpb
fdivs
xchg
mov
inc
cmp
inc
jmp
test
mov
inc
std
call
cmp
mov
popa
fistpll
xor
and
jne
and
rcl
int
test
shl
pop
and
push
xchg
dec
and
bound
and
dec
cmpsl
xor
mov
cmpb
cmp
hlt
add
cmpl
sub
mov
pop
mov
push
loop
cmp
sbb
sub
pop
sbbl
sbb
nop
add
inc
popf
mov
out
xor
pop
in
stc
xor
loopne
outsl
jbe
lea
jp
cmp
mov
sub
dec
mov
push
idivl
fsub
or
pop
and
fwait
in
jl
and
andb
mov
sub
clc
in
dec
jge
mov
enter
xorl
push
int
ja
lahf
sub
inc
fcmovnbe
pop
icebp
cltd
fistpl
lea
or
pop
stos
mov
adc
js
and
punpckhbw
loope
mov
push
and
stc
dec
cmp
inc
lock
xchg
nop
call
jl
cmp
outsl
add
pusha
mov
lds
sub
sbb
testl
fwait
popa
cmp
cmp
lods
cmp
iret
xlat
sbb
mov
or
in
es
sti
push
stc
cltd
bound
xchg
aas
push
mov
add
xor
call
and
mov
jmp
dec
ret
pop
mov
loope
mov
dec
adc
lods
or
sub
or
std
int3
pop
stc
jb
fld1
popa
push
inc
mov
cmp
fst
call
jmp
mov
jg
jge
sbb
repz
push
cmp
sbb
pushf
aam
jle
out
xchg
into
mov
inc
stos
imul
clc
movsb
jg
fxch
mov
test
mov
aam
cmp
bound
dec
dec
jb
notl
jmp
sbb
pushf
mov
sub
adcb
dec
lcall
insl
xchg
cli
mov
jo
sbb
stos
jns
and
mov
mov
sbb
pop
iret
cld
shl
mov
popa
sbb
cmpsl
jb
fldenv
mov
push
xchg
add
in
icebp
pop
mov
add
cmpsl
std
arpl
cmp
out
cmp
cmp
imul
push
testb
bound
call
adc
aas
out
push
mov
inc
lahf
arpl
das
ss
sahf
in
sbb
xor
push
idivl
sbb
mov
and
adc
sti
sub
in
mov
jnp
loop
add
ret
cld
shlb
ja
xor
mov
mov
sub
movsb
pusha
mov
jp
xlat
mov
mov
mov
cmc
jno
movsb
gs
fldl
xchg
push
orb
sbb
cwtl
sti
fadds
inc
add
cs
xchg
add
pop
mov
shrb
mov
add
pop
fsubrl
lea
loop,pt
xchg
mov
fisubrl
xor
aas
cld
jecxz
stc
cmpsl
push
inc
sbb
mov
arpl
inc
dec
adc
pop
enter
js
jmp
int
mov
cwtl
mov
fisubrs
push
cs
sbb
dec
cmc
outsl
dec
imulb
and
lea
jnp
sbb
aas
and
dec
push
mov
rolb
mov
icebp
ja
ret
jns
ret
xor
xchg
xor
std
mov
loope
inc
test
cmp
inc
and
fcompl
jne
es
jp
xor
aaa
shrl
popa
fs
inc
add
cs
xor
or
sbb
sarl
scas
inc
scas
inc
cs
pop
jmp
dec
movsl
mov
sub
sbb
inc
test
lcall
mov
cld
and
ds
movsl
sbb
mov
movsl
aas
js
scas
adc
stos
enter
mov
sbb
cmp
lds
ja
aaa
out
sbb
aaa
stos
cmp
mov
add
dec
movsb
xchg
mov
dec
inc
sahf
push
add
cli
and
adc
push
pop
cld
subb
xchg
lahf
lock
jo
xchg
mov
dec
rclb
dec
push
cmc
sub
fstpl
js
arpl
dec
and
mov
push
sbbb
insb
sub
ja
in
mov
les
fs
stos
xchg
mov
xlat
xor
mov
ret
mov
rdmsr
and
lret
lcall
call
aas
daa
adc
fwait
xor
scas
push
dec
jmp
test
pop
shll
iret
outsl
lods
mov
std
adc
out
cmp
popf
jmp
xor
fiaddl
lcall
cli
aaa
scas
and
loop
imul
mov
mov
mov
jmp
fstps
mov
ret
popf
cmp
fsubl
fstps
mov
xor
gs
xor
cmp
aaa
addb
fcmovbe
jecxz
mov
mov
sub
pop
pop
scas
ljmp
pop
push
inc
cmp
stc
cmp
push
adc
cli
push
pop
mov
mov
fcomp
bound
pop
inc
andl
movsb
ljmp
pusha
mov
gs
sti
pop
scas
xchg
subb
push
cmp
scas
repz
cs
sti
mov
ja
inc
mov
lock
pop
imul
movsb
loopne
les
xchg
leave
sbb
das
std
mov
idivl
fnstcw
fwait
inc
call
jno
out
lret
in
pop
mov
sbb
jb
orl
xchg
les
jae
shll
and
xchg
and
loopne
sbb
sar
inc
or
test
pusha
pop
aam
xchg
inc
sbb
fidivrs
cltd
outsb
mov
pushf
mov
sub
aaa
repz
xlat
pop
sub
ret
out
pop
inc
xchg
test
je
imul
incb
or
jl
lcall
in
mov
loope
cmp
push
sbb
jl
hlt
gs
pop
jns
sub
les
cli
pop
repnz
orl
push
or
test
cmpsl
add
adcl
popa
out
pop
mov
adc
add
xchg
mov
test
enter
sub
sti
dec
jecxz,pt
in
fbld
add
mov
jmp
push
lret
call
imul
add
stos
pop
and
icebp
loopne
cwtl
xor
cltd
adc
or
cltd
cltd
sbb
fsubr
pop
jo
xchg
fdivrs
xlat
inc
fdivs
sahf
call
and
pop
test
adc
inc
bound
int3
insb
jp
cli
aam
sbb
popa
mov
inc
popf
mov
mov
cmp
stos
mov
js
rorb
push
sbb
add
addr16
sub
lods
sbbb
sbb
sahf
fdivl
or
push
xor
cltd
rolb
dec
mov
es
inc
sti
mov
jnp
movsb
bound
orl
div
mov
out
outsl
mov
and
pop
loop
xor
add
xchg
pop
fcoms
out
cmpsl
cmpsl
cmpsb
cmpsl
mov
adc
ret
push
fbstp
fsubrs
inc
int3
fisttpl
loopne
inc
dec
loop
mov
rcr
aaa
pop
repz
pop
cmp
jno
pop
xor
aad
lret
mov
dec
movsb
shll
mov
xor
adc
les
sbb
adc
mov
sti
mov
cmc
lea
mov
xor
shlb
push
or
mov
aaa
mov
cmp
xchg
aaa
dec
mov
pushf
cltd
dec
xor
jae
out
mov
jg
adcb
loop
sbb
lock
orb
std
das
mov
inc
ja
popf
lock
or
sbb
jno
xlat
and
xor
bound
mov
mov
fisubrs
mov
loopne
cwtl
rcl
out
lods
aam
lcall
pop
mov
mov
enter
jecxz
lcall
pushf
mov
stos
pop
or
pushf
mov
fsubp
mov
jb
push
fbstp
and
roll
pushf
xchg
xlat
fiadds
pushf
xchg
cltd
cmp
mov
pop
pop
pop
dec
mov
je
and
jp
test
insl
cmpl
popa
mov
xor
xchg
rolb
jae
jne
and
cmp
xchg
arpl
inc
mov
scas
in
ljmp
in
ret
clc
xor
into
stos
add
addr16
jmp
fs
nop
js
mov
cmp
xchg
inc
mov
dec
mov
cmp
push
mov
pop
aad
cmp
mov
adcl
loope
fsubrs
jmp
mov
test
int
push
mov
mov
cmp
sbb
mov
pop
dec
shrb
or
scas
or
rolb
loop
pushf
ret
xlat
cmpsb
adc
out
mov
inc
cmp
xor
ljmp
cli
dec
cmp
mov
mov
adc
scas
and
in
out
fistpll
inc
cmpsl
popf
ds
mov
sub
and
push
dec
or
jb
add
lret
in
xlat
pop
or
dec
sub
sahf
cltd
mov
xchg
out
jbe
inc
mov
leave
xor
and
pusha
sar
push
out
outsl
shll
inc
jne
xchg
sbb
cmp
enter
test
in
lcall
push
mov
mov
orb
sub
jbe
movl
jge
loope
arpl
adc
stc
inc
jge
cmp
rcl
sbb
les
lds
xor
rolb
fcmovu
mov
sbb
fisttpl
test
cmp
into
mov
mov
loop
xor
or
mov
pop
ljmp
scas
xchg
jecxz
daa
nop
pushf
ret
repz
mulb
mov
in
lret
sti
repz
adc
jmp
pop
fs
push
or
fyl2x
inc
cmp
es
stos
int3
xor
lods
and
fldl2e
push
mov
xor
cmpsl
mov
imul
gs
mov
pop
int3
mov
lock
out
adc
push
mov
leave
cmp
jl
nop
ficompl
inc
cmp
enter
ds
add
stc
subl
adc
mov
pop
jl
jge
sub
dec
arpl
mov
pushf
lahf
data16
mov
sarb
sub
stc
mov
in
cmp
sbb
push
enter
fnstenv
imull
jmp
lods
fs
in
cmp
js
mov
lea
cmp
mov
andl
cmpsl
test
sub
push
pop
int3
adc
aaa
jle
pop
xchg
arpl
arpl
cltd
cmpsb
ds
clc
jo
mov
jbe
pop
inc
sbb
jb
ret
popf
sbb
ja
cmp
cmp
test
push
dec
insb
fildl
lods
cltd
jo
inc
fcmovbe
aas
sahf
inc
popf
cmpsb
mov
inc
inc
test
clc
cmp
fadds
pop
enter
mov
outsl
inc
add
cmp
cmp
or
jb
mov
loopne
sbb
jecxz
ret
xchg
in
jbe
mov
mov
jns
in
std
jg
inc
ror
mov
mov
outsl
loope
mov
and
shl
cmp
inc
orb
ret
icebp
xor
push
add
pop
std
rclb
fisubrs
js
dec
jecxz
and
cmp
fsub
rep
add
sbb
push
mov
mov
das
sbb
fnstcw
std
jno
pop
mov
and
outsb
sti
mov
and
fwait
sub
add
dec
mov
mov
add
mov
hlt
shlb
lcall
adc
pushl
stos
or
pop
jle
sub
js
mov
ret
addl
into
or
mov
or
push
movsl
cmp
dec
jle
or
or
sub
pop
pushf
adc
cmp
mov
mov
cmp
rcrb
add
add
call
xor
dec
aad
mov
insl
test
and
fdivrl
inc
stos
add
pop
jno
sar
mov
xchg
ja
cwtl
and
mov
fdiv
out
inc
mov
pop
mov
test
pop
dec
mov
pop
popa
mov
cltd
stc
mov
popf
call
shl
and
pop
loope
add
fidivrs
enter
call
mov
push
inc
addr16
jne
pop
pop
mov
sub
xchg
dec
popf
lods
lea
sbb
add
mov
mov
scas
lret
xchg
test
push
shlb
cmp
pop
mov
scas
lds
cmpsl
push
inc
cmp
out
pop
add
and
pop
mov
popf
mov
movl
dec
sbb
or
xor
sbb
mov
in
mov
cmpsl
fistpl
lock
jp
mov
out
lcall
inc
jl
stos
fimull
aad
mov
dec
int
je
iret
js
mov
jl
mov
or
sbb
jb
fbld
int3
imul
cwtl
jb
jmp
dec
ljmp
cmp
aaa
pop
loop
sub
add
sbb
mov
sub
add
sbb
scas
cmp
xor
mov
jp
mov
frstor
lea
or
push
ds
jmp
jns
inc
jmp
gs
mov
aam
popf
mov
inc
sbb
das
xor
enter
bts
pop
sbb
pop
pop
mov
jge
xchg
js
cmp
mov
mov
das
dec
sarb
stos
sbb
into
stc
stos
dec
cmpl
push
jae
pop
push
mov
das
pop
cmpsl
and
nop
mov
jecxz
cmpb
data16
scas
mov
out
xor
and
fdivrl
sbb
jb
xor
sbb
sarl
pushf
and
aam
xchg
jl
mov
clc
jp
cmc
out
sub
cmp
fmul
test
fdivrl
fsubs
cmp
mov
sub
and
dec
mov
js
cmp
mov
jnp
or
stos
xchg
insb
xchg
add
std
or
xlat
sub
push
cltd
in
xchg
fistl
jne
or
loope
or
int3
stos
xchg
sbb
sub
mov
fwait
inc
aad
cmp
fmulp
pop
enter
inc
pop
jl
xor
inc
subb
loope
cmp
mov
popf
push
mov
xchg
int
bound
cwtl
leave
andb
imul
shll
dec
mov
adc
and
pop
jo
rclb
inc
add
cmp
adc
mov
fmull
push
mov
jne
ljmp
push
jnp
enter
jge
insl
cmp
lea
jle
fcomps
stc
ret
cmp
or
dec
fmul
cmp
rcl
jae
xor
sti
andl
fsub
cmp
mov
cmp
dec
sub
std
mov
leave
icebp
out
mov
js
pop
hlt
loope
cmc
xlat
out
inc
std
cmp
mov
mov
push
out
cltd
mov
push
and
cld
sbb
pop
cwtl
xor
sub
shl
clc
sub
idivb
add
push
add
push
cmc
xor
or
sub
xchg
imull
push
icebp
sbb
outsl
arpl
or
xor
xor
push
push
inc
and
dec
cmpb
xor
mov
mov
lds
cmp
sub
ret
popf
popa
lcall
shlb
ds
lds
pop
or
xchg
push
mov
insl
add
mov
sub
cmp
outsl
enter
push
jp
hlt
xor
mov
pop
cmp
data16
mov
or
scas
pop
push
lock
sbb
in
bound
decb
sarb
jg
fadds
in
xchg
test
dec
into
cld
cmp
cmp
insl
enter
in
sub
daa
push
pop
mov
jnp
iret
testl
sub
nop
mov
je
sbb
sti
inc
mov
aad
jne
dec
ror
mov
jbe
mov
out
popa
cmp
jmp
mov
sbb
inc
lods
lcall
mov
mov
jge
arpl
lret
fisubrl
lahf
in
lahf
jne
cwtl
mov
aam
sbb
and
fimuls
std
test
iret
pop
in
pushf
jns
loop
bound
fnsave
inc
ficoms
int
sbb
jl
and
or
movsl
cmp
xchg
test
movsb
mov
pop
inc
push
inc
and
mov
mov
inc
insb
lahf
movsb
xor
add
loope
rcll
pop
mov
inc
out
mov
push
mov
test
add
dec
add
loope
mov
cltd
clc
or
pop
loope
or
arpl
loopne
mov
dec
leave
bnd
fcoml
cmp
in
into
mov
rcrb
add
mov
test
pop
or
mov
adc
dec
sub
mov
call
mov
add
sbb
push
fnstcw
dec
mov
fs
je
push
and
cmp
les
jo
fldenv
shlb
es
sub
out
jl
jo
je
jnp
inc
scas
test
mov
inc
xchg
or
pushf
jnp
and
scas
mov
test
outsb
jns
cmp
ljmp
outsl
jle
mov
mov
in
xchg
rorb
dec
ja
add
and
mov
mov
xor
out
aam
push
lcall
pop
inc
cmpsl
jne
and
mov
cltd
out
jne
stc
popf
data16
ficomps
clc
popa
inc
inc
les
fnstenv
jg
add
mov
in
popa
das
sub
aam
ficomps
cmp
adc
dec
in
sahf
mov
dec
leave
movsl
mov
mov
adc
pop
cmp
pop
cltd
cbtw
push
out
push
cs
cmp
stos
inc
or
xor
fucomip
ficomps
test
cmpsl
repnz
mov
leave
xor
adc
lds
ficomps
add
bound
out
cmp
pop
call
enter
jbe
movsb
cs
call
cmp
mov
mov
xor
xchg
and
or
jmp
add
out
mov
movsb
sbb
test
and
pop
add
sbb
mov
adc
fistps
mov
sub
mov
and
jnp
clc
mov
pop
and
adc
bound
sub
jo
add
vmovaps
arpl
test
jae
andl
mov
jmp
inc
testl
aad
dec
out
mov
push
imul
push
add
ds
leave
jge
sbb
add
mov
std
cmc
push
inc
movsl
repz
ss
or
test
ficoml
and
iret
ja
xor
cmpsl
xor
fnstenv
jbe
pushf
xchg
les
sbb
stc
std
jbe
pushf
and
xacquire
loope
mov
mov
lea
or
pop
jo
xchg
ds
xor
or
repz
pop
cmp
jmp
mov
mov
popw
xchg
cli
repz
adcb
pop
rcrl
cmp
pop
std
pop
xor
repz
jecxz
cmp
inc
mov
das
and
mov
ja
scas
xor
and
hlt
jp
pop
lods
mov
mov
adc
push
popa
test
jge
jmp
popa
xchg
std
adc
call
sbb
movsl
push
add
dec
pop
or
out
cmp
inc
xor
loop
push
jp
cmp
loopne
lcall
out
inc
addl
sbb
add
cmp
add
aaa
mov
inc
lret
stc
pop
push
and
lcall
adc
sti
sub
mov
sbb
sarb
scas
int
cli
stc
sub
dec
pop
outsb
aaa
stos
psraw
add
push
adc
cld
in
push
jnp
pushf
loop
movsl
sub
mov
xor
dec
pop
lods
add
push
les
ja
out
push
loop
sbb
push
inc
aaa
add
sub
dec
rorl
jg
pop
mov
loopne
pop
ja
repnz
inc
stos
lock
mov
mov
jmp
push
and
adc
or
jno
gs
xchg
jl
pushf
mov
mov
fdivs
insb
imul
xchg
repz
adc
xor
dec
test
aas
sbb
xor
jmp
sub
popf
adc
scas
mov
mov
fcomip
idivb
pop
mov
mov
lods
push
sti
stos
mov
outsl
ja
test
inc
stos
pop
mov
and
mov
push
pop
pop
ja,pn
inc
mov
jb
clc
mov
adc
ficoml
jns
ja
les
cmpsb
add
sbbb
mov
adc
sub
mov
cli
add
stc
fistps
cmpsl
dec
mov
imul
add
dec
cmpsl
mov
xor
jne
push
shlb
xchg
ds
xor
xor
push
mov
pusha
xor
hlt
fnstcw
stos
adc
icebp
pop
fdivs
adc
sbb
in
mov
xchg
imul
xchg
jae
inc
fdivs
mov
jae
jno
pop
and
movsl
mov
jo
mov
loope
or
sbb
es
enter
iret
pop
movsb
sbb
mov
mov
cmp
nop
add
sbb
mov
jmp
sub
rolb
out
or
mov
or
or
gs
jns
mov
jl
popa
sbb
js
clc
push
add
mov
ds
dec
or
es
stc
xlat
xor
mov
pop
pusha
and
pushf
xor
repnz
ffreep
mov
fildl
es
cmp
inc
fisubl
lods
jge
movsb
push
jns
sub
add
xchg
stc
sub
adc
stc
jp
idivb
dec
rorb
addl
and
xor
cmp
jl
push
leave
mov
repz
test
jecxz
lcall
cltd
stos
fcomps
mov
js
sbb
mov
push
jg
pop
mov
mov
add
xlat
sbb
dec
jae
fmull
int
out
lret
or
jb
loopne
lret
enter
popf
add
or
loopne
mov
sbb
data16
jb
addb
incl
ret
adc
aam
xchg
std
fwait
lahf
cmp
dec
jg
cmp
fcmovnb
xlat
adc
mov
sub
vpmacsdql
mov
fisubs
adc
or
push
jmp
inc
loope
sbb
pop
sub
stc
inc
lods
test
js
dec
ret
movsl
les
mov
incl
lret
pusha
and
cmp
call
xchg
xchg
jge
jmp
cltd
xchg
lret
call
push
cwtl
enter
fcompl
mov
lret
jnp
sarb
sbb
dec
xlat
pop
mov
daa
mov
adc
adc
into
nop
sbb
mov
es
rol
pop
mov
pop
xchg
xchg
add
out
mov
sbb
hlt
loope
outsb
call
std
stos
mov
mov
icebp
or
stos
push
fimuls
mov
jae
imul
dec
mov
and
fcoms
inc
mov
lret
sbb
cmp
movsl
dec
js
jno
jecxz
mov
in
add
pop
jp
mov
xchg
mov
aad
popf
fstpt
or
jge
fcoms
xor
mov
jmp
mov
add
push
fsubp
jbe,pt
xor
mov
jg
and
nop
js
sbb
mov
pop
test
push
push
sbb
or
cmpsl
inc
xor
ffreep
fcmovne
aam
out
mov
div
fistl
enter
mov
dec
jns
lea
add
pushf
xor
loope
mov
ret
jle
mov
fs
jl
cmp
cmpsb
jo
pushf
movsb
negl
shrb
insb
add
and
sbb
dec
and
pop
stc
mov
mov
mov
and
shlb
scas
mov
mov
mov
pop
cmpsl
es
negl
cmp
scas
fptan
dec
sub
cltd
mov
push
and
sbb
mov
mov
psubq
enter
fiadds
pop
fcmovnbe
mov
mov
inc
mov
insl
mov
lret
in
rolb
ret
cmpsl
add
call
sbb
shlb
mov
push
pop
xor
pop
sbb
in
fadd
mov
mov
negb
add
or
mov
fldt
js
sbb
push
leave
fadd
sbb
pop
divl
xlat
popa
cltd
xchg
es
dec
ljmp
jmp
and
or
int
mov
jg
cmp
enter
pushf
into
subl
fwait
cmp
loopne
ds
xlat
dec
jo
add
sub
ffreep
ds
mov
stos
das
pop
adc
xorb
jp
sbb
movsl
subb
iret
sub
pop
jae
sbb
clc
int
jle
and
out
adc
test
jl
cmpsl
cmp
xorl
mov
xor
pop
mov
pop
xchg
jmp
xchg
cmp
or
mov
inc
stc
mov
mov
xor
adc
out
iret
clc
add
lods
and
cmp
mov
insl
sbb
pop
mov
jge
or
jecxz
cli
xor
icebp
stc
dec
pop
outsb
lcall
push
mov
xor
lret
push
in
pushf
mov
mov
frstor
and
jge
pushf
andb
icebp
jns
in
jmp
mov
fcompl
jmp
ds
jmp
inc
aaa
jbe
pushf
mov
aas
loop
movsb
ficompl
sarb
stc
push
xchg
ja
xor
inc
aaa
outsl
and
sbb
and
add
out
xor
stos
mov
mov
icebp
sub
decl
fldcw
movsl
pop
rcrb
add
adcl
cmp
loop
fdivr
es
or
std
jmp
jmp
arpl
jne
mov
scas
sbb
dec
push
das
adc
add
xor
xchg
addr16
iret
mov
xlat
addr16
rorl
iret
jbe
repz
aam
out
bound
rolb
mov
stc
bound
out
xor
out
inc
jg
test
popa
ret
xor
ret
out
outsl
jns
xor
jb
cmp
sti
aaa
and
jp
xchg
cltd
sub
mov
repz
pop
adc
out
shl
ds
lods
inc
dec
pop
cmp
incb
mov
pop
cmp
out
cmp
mov
or
fdivs
cmp
js
test
mov
sbb
mov
and
xchg
cmpsb
lret
cmpsl
fs
xor
es
test
testl
adc
fisttps
cmc
mov
mov
pusha
int3
stc
jnp
jmp
pop
cmc
repz
or
cmp
scas
movsb
mul
sub
or
mov
jo
mov
pop
add
test
cmp
sub
int
push
andl
mov
lds
cmpb
aam
and
fstps
test
and
or
and
pop
dec
push
pop
movsb
sub
mov
mov
test
push
loope
es
loope
jne
test
mov
test
cmp
pop
in
shlb
adc
cmp
out
mov
mov
inc
sbb
jge
fildll
fwait
ljmp
sar
pop
inc
shl
sub
jmp
cmpsl
inc
sarl
adc
push
push
xchg
stos
fwait
push
aas
cltd
sub
out
roll
and
fcomps
nop
cmp
orl
fcom
mov
mull
sbb
rol
into
inc
fsincos
outsl
movsl
xorl
mov
insb
in
sub
andl
ljmp
xchg
push
mov
std
jg
cmpsb
add
enter
lods
lret
sti
pusha
push
jge
int3
flds
cmpsl
enter
les
mov
iret
xlat
movsb
ret
sub
mov
cmp
adc
sub
inc
jmp
loope
lods
cmpsl
popa
shlb
aaa
cmp
push
mov
dec
loop
icebp
sub
mov
fidivrs
mov
test
add
xabort
cmpb
xchg
kxnorw
stos
cmpb
mov
aam
cmp
call
nop
cmp
xchg
pop
pop
popa
mov
test
fsubl
mov
mov
js
out
mov
mov
or
pop
add
fwait
jmp
mov
adc
fnstsw
adc
je
test
mov
or
fstpt
pop
inc
stc
and
jne
out
xlat
sbb
addl
int3
cmp
roll
test
push
loope
sti
xchg
xchg
mov
inc
add
mov
and
dec
sbb
sti
js
andb
loopne
stc
mov
rorb
aas
fsubrp
js
inc
in
ret
pop
es
adc
fwait
lods
mull
mov
mov
movsb
aam
xor
cmp
jo
cld
int
cmp
lods
in
xor
iret
loope
dec
sbb
mov
sub
xor
loope,pt
push
push
das
sbb
push
repz
int3
out
push
cmp
movsl
add
lret
test
jge
push
push
dec
loope
xor
mull
push
lods
add
aam
xchg
mov
mov
pop
test
jbe
lock
outsl
adc
mov
loop
jns
mov
and
or
enter
mov
xchg
andb
mov
adc
jae
mov
cmp
add
js
sbb
dec
jl
xor
add
loope
outsl
mov
rcll
sbb
cmpsl
sbb
rcll
mov
cwtl
or
inc
xchg
sti
push
addb
cmp
icebp
inc
adc
jmp
xchg
insb
shll
into
leave
pop
sbb
loopne
xor
stc
dec
inc
test
push
notb
orl
cmpb
sbbl
popl
push
add
mov
popf
data16
popf
mov
jbe
push
ds
xchg
js
es
dec
push
repz
aad
jmp
repz
cmp
daa
sub
js
lret
xchg
inc
call
mov
pop
adc
mov
mov
arpl
cmp
ds
andb
or
pop
subl
and
xor
mov
rcr
push
test
cmpsl
fs
pop
jbe
popa
nop
push
ret
lret
addl
adc
fisttpl
cltd
pop
sbb
mov
mov
in
cmp
outsl
in
pusha
jnp
mov
cmp
mov
in
addb
mov
add
mov
pop
xchg
inc
pop
fimull
mov
movsb
jg
sti
add
pop
mov
pusha
or
inc
into
dec
jmp
es
shlb
sbb
dec
cmp
add
inc
fbstp
push
icebp
es
or
and
sbbl
loope
mov
mov
and
lock
inc
cltd
fldenv
jo
lret
cld
cmp
xchg
push
fbstp
movsb
dec
aad
push
in
repnz
ja
out
test
mov
or
sti
pop
lcall
mov
cmpsb
aad
shll
clc
xor
mov
lds
xchg
negl
mov
mov
and
sbb
clc
push
fisubs
mov
testl
movsl
rcrl
xor
push
cs
mov
pop
sub
addr16
arpl
xchg
int
popf
shlb
fcmovnu
add
andb
movsl
xlat
mull
ljmp
pop
push
and
cmp
dec
cmpsb
out
mov
cmc
insl
sub
dec
jecxz
mov
xor
leave
mov
daa
pop
xchg
add
fidivl
test
mov
fnstenv
pop
mov
ljmp
mov
stc
cmpsl
std
data16
pusha
call
bound
fsubrs
fscale
mov
cmp
cltd
sub
stos
fadd
xlat
aam
adc
rcr
out
jnp
pushf
iret
rorb
and
pop
nop
cmp
lcall
sub
test
out
xor
mov
clc
scas
pop
mov
mov
cmp
ds
hlt
xlat
sbb
popf
sub
cmp
jns
stc
repnz
cmp
pop
fmuls
lahf
fcomps
sub
es
fs
adc
shl
testb
pop
popf
fwait
dec
mov
jge
shlb
test
push
cli
js
bound
mov
jb
xor
je
fnstcw
cltd
mov
pop
mov
mov
add
mov
inc
push
bound
outsl
inc
jmp
xlat
cmpsl
sbb
mov
aaa
dec
jns
xchg
and
mov
sub
bound
je
push
movsl
mov
dec
out
inc
inc
xor
cmpsb
std
sub
rcr
dec
xchg
mov
jl
xchg
sahf
pop
addr16
inc
lcall
lcall
xchg
jp
dec
es
int3
jl
aaa
ret
or
adc
inc
iret
inc
clc
pop
xchg
aam
sbb
mov
ret
jg
cld
icebp
test
mov
into
xorl
inc
fiadds
ljmp
pop
pop
adc
hlt
ret
std
movsl
mov
mov
add
arpl
divl
fimull
and
mov
sbb
out
push
xchg
xchg
mov
jnp
push
cli
bound
popa
and
cmp
arpl
in
cwtl
mov
orb
and
xchg
and
or
add
in
dec
inc
clc
mov
nop
or
dec
xchg
mov
mov
aad
les
push
xlat
mov
leave
mov
mov
sbb
sbb
and
sbb
dec
addr16
or
dec
jl
addr16
xchg
cmp
sub
fldl
jns
or
xor
popa
push
fdivrl
dec
adc
fists
sbb
mov
or
xchg
dec
mov
movsb
mov
test
js
out
mov
int3
cmp
cli
inc
jno
mov
adcl
in
insb
dec
xor
loopne
mov
aad
cld
mov
es
lcall
cmp
test
sbb
xor
xor
push
pop
out
stos
inc
lock
cli
pop
sbb
dec
mov
jns
out
pop
int3
pop
arpl
xor
pop
movsb
arpl
push
cli
pop
leave
add
dec
nop
inc
lret
cmpsb
cmp
ljmp
flds
out
loop
or
mov
inc
push
sub
push
bswap
scas
test
stos
cs
adc
in
cmp
lods
xor
add
andb
xor
xlat
mov
orb
nop
js
loop
clc
and
and
inc
jbe
mov
movsb
test
mov
mov
arpl
loopne
iret
jg
pop
or
jg
jnp
mov
xchg
cmp
je
mov
mov
pop
mov
inc
outsb
cltd
cwtl
div
lea
imulb
scas
sbbl
fwait
push
leave
and
pop
mov
imul
dec
movsl
or
fcoms
out
sbb
dec
call
mov
adc
xor
mov
sbb
test
mov
xchg
sub
call
out
js
js
adc
push
jb
cmp
cli
int
outsl
push
mov
pop
data16
mov
add
pop
xchg
es
imul
xor
and
leave
ret
pop
jp
dec
jns
adc
adc
pop
mov
test
movsb
cwtl
inc
ret
ret
neg
pop
aam
ds
outsb
mov
sahf
pop
leave
lcall
sub
cwtl
clc
popf
std
and
clc
clc
rolb
aam
jns
cmp
inc
cltd
pop
mov
cld
bound
inc
out
pop
pop
stc
sahf
aad
xchg
flds
aam
clc
sbb
sbb
jg
or
fwait
cwtl
mov
cmp
in
sbb
cltd
jne
cmp
or
aaa
mov
push
inc
outsb
aaa
insb
mov
mov
sarb
lock
mov
mov
insb
mov
mov
adc
sub
orb
dec
stc
add
dec
xchg
or
nop
mov
dec
pop
aad
cmp
out
mov
leave
mov
xor
ja
sbb
push
lock
lcall
sti
addr16
mov
ficoms
stc
add
lahf
pop
mov
pop
push
bound
movsl
stc
add
jl
js
cld
sbb
xchg
jbe
sbb
inc
sub
sbbb
mov
pop
push
mov
jp
subl
xchg
sbb
outsl
stos
cmp
fisubs
jecxz
inc
out
stos
imul
add
push
pop
mov
dec
out
ja
mov
out
push
popa
hlt
test
test
imul
jl
mov
push
loopne
adc
outsb
std
loope
inc
xchg
mov
ja
jae
mov
mov
ja
ds
enter
push
cmp
sub
mov
mov
sbb
cmp
xchg
mov
add
das
aas
cmp
sarb
inc
arpl
cmpl
cmpsb
cmp
mov
and
ret
std
call
mov
ja
and
mov
rorl
rcrl
std
sbbb
and
inc
pop
add
push
mov
icebp
imul
sub
in
cmpl
arpl
cltd
dec
dec
test
loop
mov
cmp
mov
jg
jecxz
xor
mov
pop
add
popfw
xor
cmp
or
xor
jne
popf
inc
daa
gs
mov
jo
jo
out
sub
jecxz
xchg
pop
movsl
pop
orb
mov
mov
and
mov
pop
add
aas
xlat
mov
mov
addr16
testl
adc
fucomip
jmp
outsb
js
mov
sbb
js
push
push
in
enter
mov
jae
mov
adc
lea
jne
and
insb
xchg
out
and
cmp
cmpb
aaa
lahf
xor
popa
push
jp
jp
or
out
popf
mov
cmp
and
add
addr16
adcl
pop
pushf
lret
lcall
mov
lcall
cmc
out
insl
mov
std
cmp
pushf
ss
and
aad
cwtl
or
shll
js
sub
mov
pop
mov
test
rorb
and
divl
lods
sbb
mov
test
xlat
xchg
add
dec
pop
push
notb
mov
xor
jno
add
mov
or
pop
inc
push
mov
cmpsb
and
sbb
cmp
mov
mov
out
sbb
jbe
hlt
pop
repz
cmp
jmp
cltd
pushf
inc
jbe
setae
arpl
jl
dec
and
lret
fstps
insl
fildl
negl
jbe
mov
xorb
fisttps
rcrb
adc
fwait
inc
mov
inc
insl
add
roll
stos
mov
loop
mov
jo
cltd
mov
xchg
rorb
xchg
push
pop
lret
sbb
cmp
jnp
test
jo
dec
cltd
and
data16
add
xor
adc
mov
sar
sbb
mov
stos
jge
jle
cmpb
ret
mov
shl
cmp
cmp
pop
rcrb
idivl
out
sahf
bound
loope
cs
sbb
sahf
cmp
outsb
pop
push
dec
shl
mov
xchg
in
sbb
sub
cmp
inc
out
sub
in
cmpb
cwtl
inc
loope
shrb
inc
sbb
sti
sbb
out
mov
adc
fiadds
or
mov
outsl
cmp
loope
scas
xor
xchg
div
dec
cmp
divl
xor
push
mov
jns
jae
fcomp
lock
out
inc
mov
adc
lcall
push
shrb
and
sbb
mov
mov
mov
ret
das
sub
testb
mov
inc
lret
sbb
fldcw
adc
mov
mov
inc
rolb
fcom
cmp
cmp
push
push
loope
lcall
dec
xlat
mov
jle
jmp
lcall
or
cmpsb
mov
outsl
inc
inc
daa
rcrl
ficoml
ficoms
out
mov
repnz
ljmp
enter
icebp
imul
cmp
or
mov
and
mov
arpl
xor
data16
pushf
test
mov
jnp
ja
lods
andl
inc
pop
sbb
rcr
mov
cmp
js
xlat
mov
mov
and
cmp
add
add
cmp
mov
repnz
repz
ret
xchg
sub
popa
sub
out
cli
jns
insb
in
inc
test
iret
lahf
je
mov
add
fdivs
xchg
jb
mov
mov
push
das
pop
jecxz
test
cmp
mov
mov
and
rcrb
lods
in
sub
dec
xor
enter
xor
mov
cwtl
fmul
and
jnp
mov
lods
pushf
dec
out
mov
mov
xor
pop
fcmovbe
jbe
movsl
nop
sub
scas
outsb
push
jmp
mov
and
test
xor
cld
fldenv
sub
test
jae
cmp
call
sub
call
dec
inc
bound
bound
add
pusha
orb
and
sarl
loopne
cmp
sub
sub
lea
mov
dec
lcall
shll
ss
mov
pop
pop
adc
out
rcrb
jge
cmp
push
sbb
sub
mov
loop
dec
sbb
cmp
lock
ss
dec
fsubrl
or
hlt
cmp
inc
jnp
clc
adc
jl
cmp
das
push
je
xor
mov
mov
mov
mov
pop
shll
cmpsw
jbe
xor
in
and
sbb
push
xor
cmp
sub
sub
out
insl
push
adc
into
lret
hlt
jbe
dec
lods
pop
fucomi
out
inc
scas
push
xor
data16
in
cmp
punpckhwd
inc
and
sbb
and
cmp
xor
addb
mov
jbe
insl
ret
dec
outsl
lret
mov
repnz
cmp
push
push
lahf
mov
and
cmp
push
jg
aam
pusha
ficomps
fdivs
popf
jge
lret
cli
sahf
clc
arpl
test
jge
mov
loope
jge
cmp
sbb
pop
inc
and
fwait
jge
lea
lods
test
xchg
jmp
xchg
sbb
and
xchg
in
inc
ds
aam
push
out
cmp
cmp
addl
dec
and
xor
sbbb
or
mov
mov
mov
loope
mov
mov
xchg
roll
sub
mov
clc
mov
mov
jb
or
mov
imul
pop
outsl
xor
adc
ja
fwait
sbb
push
scas
cmp
xor
jns
pusha
jmp
ret
out
test
mov
shr
sub
push
rclb
bound
hlt
sahf
xchg
push
push
xchg
jle
sub
xchg
pop
mov
push
jp
fisubrs
sbb
rcl
mov
sbb
add
out
push
ret
sbb
sbb
push
xchg
idivl
jns
fbstp
mov
mov
stos
pop
pop
iret
jae
sbb
mov
test
icebp
or
inc
jl
cmpsb
std
push
mov
mov
dec
sub
add
xor
sbb
push
inc
cmp
xor
mov
repnz
cmp
jg
xchg
pop
lcall
js
movsl
in
ret
mov
jb
int3
stc
pop
pop
cmp
push
movl
ss
clc
jmp
out
dec
repz
mov
xchg
push
push
cli
loope
jne
mov
mov
bound
in
cltd
push
mov
or
xor
scas
xor
mov
shll
cmpsl
mov
nop
js
mov
std
mov
sbb
flds
test
cmp
or
mov
les
jle
mov
jns
and
movsl
ret
loop
dec
lret
out
out
leave
stc
andl
lahf
sbb
scas
cmp
dec
push
dec
dec
dec
and
movsb
mov
mov
sbb
jbe
outsb
testl
mov
shrb
sub
jbe
or
sbb
lret
jbe
cmp
push
je
mov
popa
cmp
fadd
jl,pn
cltd
inc
iret
in
frstor
cs
leave
mov
aas
mov
aam
in
addr16
push
into
imul
shll
mov
das
sub
das
mov
cmp
xchg
pop
jle
lock
scas
jae
xor
adc
cmp
cmc
sahf
sbb
jne
mov
aad
jl
mov
imul
sbb
test
minps
js
cmc
loopne
sub
ret
and
ss
mov
fnclex
es
cmp
mov
mov
leave
adc
ret
add
xchg
psubusw
call
dec
ja
aaa
stc
imul
shll
addr16
into
sub
notb
fbld
test
or
sbb
stos
out
lret
sti
mov
sbb
inc
fstpt
fcomip
idivl
pop
repnz
cmp
jne
adcl
dec
or
mov
cltd
outsb
push
mov
aaa
jns
test
stos
sub
lea
daa
rcrl
pop
fld
fcmovnb
sbb
dec
adc
adc
dec
aam
xchg
add
repz
addb
sbb
fisttpl
ja
xchg
push
ljmp
adc
sbb
jnp
pushf
or
aam
rcrb
lahf
pop
add
and
outsb
xchg
cli
fcoms
leave
mov
rclb
daa
cltd
xlat
and
daa
jmp
test
mov
into
fbstp
jmp
add
sbb
shll
dec
or
xchg
aas
mov
sub
arpl
ds
sub
mov
aas
mov
mov
xor
mov
mov
jp
addr16
dec
mov
lret
pop
push
fimuls
or
xchg
pop
nop
add
cli
lret
fisttps
mov
xor
mov
jbe
sti
dec
arpl
test
divb
or
cmp
push
fimuls
and
div
sub
fnstenv
adc
stos
mov
cmc
inc
mov
ss
loop
sub
add
cmp
mov
je
mov
inc
mov
pop
mov
fucomi
mov
dec
xchg
or
or
add
cwtl
clc
aam
mov
scas
jl
enter
aam
push
sub
pop
xchg
fldl
cs
push
xor
stc
xchg
imul
lods
lcall
jecxz
sbb
sub
and
mov
push
pusha
int
mov
fldl
xchg
js
cmpsl
xchg
fidivs
dec
sar
lods
enter
cmp
xlat
inc
aaa
pop
mov
sbb
mov
mov
sbb
xlat
gs
pop
in
inc
cld
imul
dec
cmp
jae
xchg
cmpsb
push
fistpl
mov
mov
loope
movsb
cwtl
pusha
adc
lock
lret
mov
cmpl
adc
loope
pop
push
jo
addr16
pop
pop
inc
sub
shlb
jge
ret
loopne
fmuls
dec
fbld
outsb
jns
xorb
rolb
stos
test
roll
cmp
int
dec
xlat
arpl
push
repz
sub
inc
and
repnz
mov
ret
cmpsb
ficoms
adc
cmp
mov
pop
out
and
mov
xchg
add
fldenv
inc
push
mov
and
inc
jl
loope,pn
mov
jl
leave
std
add
sbb
adc
arpl
nop
xchg
and
inc
loopne
cmpsl
and
inc
negl
out
xor
adc
and
aaa
arpl
stc
mov
fiaddl
sub
sbb
and
cmp
fs
repnz
jp
in
sahf
loopne
push
sbb
iret
clc
jno
movsb
in
adc
jle
pop
stos
mov
repnz
in
testl
inc
pushf
xchg
sub
xor
push
stos
nop
mov
add
sbb
aas
div
bound
ja
xlat
adc
in
and
cmpb
js
jle
adc
and
fsubrs
xor
into
cmpsl
jmp
sahf
mov
in
dec
and
pop
add
aaa
mov
call
or
daa
push
mov
movsb
fs
ds
stc
fs
test
cmpsl
repz
mov
mov
sub
test
test
rep
inc
test
pop
mov
xchg
sub
fcompl
in
sbb
mov
clc
push
adc
cmp
jmp
lret
leave
test
push
fs
mov
stc
pop
push
negb
jp
int
push
daa
fcomps
aaa
cmp
flds
mov
ficompl
sarl
or
add
stos
int
bound
dec
lea
in
popf
imul
cli
xchg
ficoml
bound
shlb
xchg
lret
pop
pop
and
mull
mov
jo
pusha
fs
adc
pop
pop
jmp
jb
xchg
jno
push
xchg
cli
shrb
out
jb
dec
into
insl
aad
lret
add
sub
xchg
enter
mov
sbb
ret
lods
insl
and
pop
sti
or
mov
frstor
out
inc
xor
dec
loopne
std
push
jecxz
jae
out
xor
mov
dec
mov
pop
mov
inc
lock
leave
sbb
cmp
lahf
cs
mov
ret
push
add
fwait
push
mov
mov
lea
sti
push
sbb
int
addl
xchg
jmp
fdivl
push
cmpsl
mov
cs
cltd
fsubrs
popa
inc
jbe
jae
sbb
inc
cld
out
push
and
jge
jle
ret
punpcklwd
cs
dec
jge
cmp
lcall
es
aad
ret
sbb
mov
into
add
int3
dec
aad
dec
sti
movzbl
fs
test
sbb
xchg
lret
and
jmp
push
jne
mov
pop
push
sub
cmp
and
cltd
sbb
shr
xorl
enter
icebp
cld
js
mov
pop
stos
ret
lods
cld
lret
jns
mov
jno
popa
cmpsb
dec
sbb
scas
xlat
inc
je
loop
fistpll
das
imul
or
imul
test
mov
int3
xchg
add
outsb
repz
xchg
mov
mov
cmp
inc
inc
xor
and
lret
subl
sbb
test
aaa
mov
push
fmuls
push
mov
mov
sbb
adc
xor
mov
inc
sti
cmpl
sti
data16
test
and
jp
push
sbb
repz
test
daa
shrw
pop
sub
mov
bound
and
adc
fwait
mov
aaa
aad
fists
nop
pop
loop
sbb
mov
push
movsl
sub
data16
fidivs
or
popa
clc
adc
loopne
xchg
adcl
fcomps
pushf
lret
xchg
mov
pop
cmc
pop
hlt
pop
pop
adcl
jae
arpl
push
sub
repz
xchg
and
sbb
leave
add
sub
pop
sbb
mov
adc
cmpsb
lds
imul
jmp
add
push
fadd
pop
adc
testb
pop
in
iret
pop
pop
xlat
inc
stc
cmp
mov
pop
sub
dec
mov
cmpsl
mov
pushf
add
cs
xlat
adc
inc
js
push
sbb
cmp
fimuls
int3
pop
sbb
cmpl
sub
jbe
xor
xchg
test
mov
fadds
push
xor
cmp
aad
mov
in
into
jne
in
aaa
enter
push
jbe
adc
cltd
es
arpl
pop
jb
popa
jge
cmp
mov
sub
push
enter
sbb
jne
jle
and
jb
or
cmc
mov
adc
sub
adc
push
neg
mov
cmpsb
push
inc
mov
cltd
cmpsb
adc
inc
shrb
popf
movsl
cmp
mov
aas
mov
rolb
jno
outsb
push
xor
les
push
add
push
dec
sub
pop
dec
push
stos
shl
lds
push
rolb
sub
sub
scas
test
inc
sub
std
or
lea
cmp
jbe
and
mov
imul
in
int3
push
shll
push
mov
jp
cmp
mov
push
inc
inc
cmp
or
test
repz
and
es
cmp
push
lock
pop
lea
mov
lcall
lahf
dec
inc
mov
fucomip
and
incb
cld
pop
lret
adc
pop
ja
sbb
repz
lods
fisttpl
std
movsl
cmp
in
std
sbb
sbb
std
mov
or
sbb
repz
fcmovnbe
leave
jp
adc
xor
pop
lret
adc
push
ss
fcomp
xchg
pop
cmp
sbb
mov
sub
jne
sahf
cmp
loope
xlat
push
sbb
push
jge
outsb
mov
ret
in
clc
pop
fxch
bswap
mov
enter
xchg
out
mov
add
push
repz
int3
mov
ficoms
pop
mov
inc
pop
cwtl
mov
adc
inc
bound
jp
mov
jecxz
dec
int
pop
xorb
mov
jmp
mov
es
mov
scas
clc
jns
add
sti
add
inc
and
fdivrs
mov
adc
push
and
pop
rcl
add
imul
add
pusha
into
jle
lahf
ss
out
dec
cli
jae
aam
outsb
pop
sbb
filds
inc
int
xchg
pop
dec
in
out
std
mov
in
rol
and
sub
sahf
mov
ret
hlt
jle
stos
sbb
jp
push
sub
mov
ss
mov
or
imul
imul
movsb
mov
add
fldcw
cmp
jle
sub
jl
mov
sub
cmp
inc
dec
aas
pop
enter
pushf
xchg
cmp
sbb
inc
pop
cmpsl
pop
pop
inc
fbstp
cwtl
xlat
aas
mov
mov
daa
jg
cmp
xchg
mov
or
fsts
mov
pushf
inc
cmp
push
sub
xchg
sbb
cmp
sbb
popa
iret
divb
loope
pop
mov
or
add
sub
orb
mov
jns
test
mov
fnstsw
jo
lahf
mov
fstpt
mov
clc
pop
rclb
inc
mov
or
idivb
jle
pop
aaa
and
rclb
sub
cltd
push
push
push
add
inc
subl
add
imulb
sbb
mov
dec
test
mov
jbe
sub
icebp
test
mov
stc
test
rcrl
loopne
pop
xchg
mov
test
mov
jecxz
inc
xor
adc
fcompl
loope
ja
mov
mov
test
sbb
mov
ljmp
mov
shl
js
jp
cmp
cltd
inc
in
data16
xchg
push
adc
popf
in
mov
sbb
out
or
cmp
movsb
mov
sub
scas
push
and
mov
jne
sub
stos
xor
imul
mov
ret
dec
cmp
ficomps
adc
cmp
dec
xor
jns
and
sub
inc
cmp
mov
sbb
or
cmpsb
scas
cmp
movsb
sbb
in
pop
jne
xchg
cltd
mov
lds
cmpsb
sub
leave
in
out
into
sbb
xor
sbb
ja
pusha
mov
inc
and
hlt
fidivrl
repz
hlt
push
testb
dec
clc
nop
xlat
jmp
inc
xor
fwait
cwtl
shll
cmpw
imull
popa
roll
cmp
stc
jl
popf
mov
jno
lret
enter
frstor
mov
jnp
stos
or
out
std
or
lret
xorl
xchg
jmp
enter
jp
ljmp
xor
repz
jecxz
mov
push
sub
cmp
mov
adc
stc
scas
rcr
pop
sub
and
sub
aaa
mov
lcall
outsl
bnd
mov
push
dec
negl
mov
sbb
push
mov
cmp
outsb
inc
lods
mov
stos
aaa
xchg
inc
test
mov
enter
out
repz
imul
jg
lock
mov
orl
daa
sub
sub
movsb
popa
stos
lods
xchg
jbe
cmpl
jl
mov
sbb
cmp
dec
inc
test
loope
and
das
out
cmp
push
out
rcll
decl
add
jle
lret
inc
mov
add
lds
cwtl
xchg
or
cltd
cltd
lea
ficomps
cmp
dec
mov
mov
mov
mov
ss
rclb
mov
stc
cltd
fdivp
inc
mov
scas
dec
je
xchg
cmc
cltd
pop
xor
jnp
popa
scas
or
and
inc
inc
xor
mov
imull
jne
and
xchg
shrl
mov
aam
roll
or
sti
rol
test
std
add
iret
mov
out
test
and
dec
mov
enter
bound
add
out
sahf
mov
out
aam
ret
icebp
cmp
cwtl
jge
inc
fiaddl
cmp
stos
sbb
jno
ljmp
imul
dec
sbb
les
add
add
mov
outsb
idiv
mov
pop
out
cmp
pop
repz
stos
addl
add
addr16
sarl
cs
aaa
pop
jbe
cmp
sar
test
add
inc
mov
loopne
lret
shrb
pop
mov
stc
es
lcall
jge
insl
xor
push
in
sub
and
add
mov
cmp
mov
jmp
mov
lock
and
inc
call
syscall
push
and
loop
sub
fs
mov
fs
lods
mov
cltd
ds
and
mov
rep
and
fildll
jns
dec
xabort
fnstcw
enter
jg
mov
lock
out
stc
lods
mov
jle
mov
fstpl
and
pop
push
leave
stc
mov
mov
pop
inc
pop
push
dec
mov
out
loopne
gs
mov
imul
sbb
mov
lods
repnz
mov
test
in
inc
jns
inc
mov
xchg
mov
rclb
fidivrl
iret
pop
mov
lcall
inc
sbb
add
pushf
jne
fsts
in
jae
mov
cmp
pushf
scas
adc
mov
sbb
shl
addl
jne
fsubrl
mov
lret
ljmp
mov
test
fstcw
mov
pop
xor
and
rcrb
dec
int3
loope
out
aas
scas
and
sbb
xchg
cwtl
cwtl
inc
dec
stc
div
dec
inc
out
mov
scas
or
xchg
adc
movsb
mov
fs
setge
dec
inc
pop
mov
bswap
ljmp
add
loope
sub
aad
push
xorl
dec
xor
inc
pop
sti
jle
jmp
add
pop
call
pop
sub
mov
movsb
enter
rcrl
int
orl
daa
in
pusha
mov
sub
clc
cs
fldt
lea
dec
sub
nop
mov
mov
dec
roll
xchg
aas
xor
test
ljmp
add
and
int
pop
aam
or
cwtl
mov
ret
inc
xor
test
xchg
pusha
xor
or
inc
lcall
add
xchg
movsb
jmp
std
cmp
aam
adc
jns
cmp
sub
pop
cli
jmp
sahf
andl
xchg
mov
bound
loopne
imull
fnstcw
jb
pop
inc
push
int
inc
mov
cmp
push
outsl
orb
arpl
out
xchg
out
ss
cmp
mov
ds
aaa
sub
icebp
in
stos
add
stc
pop
xchg
cmp
pop
cli
hlt
xchg
mov
mov
push
dec
repz
cs
fisubs
decl
cltd
fnstenv
pop
pop
mov
xor
hlt
inc
fisubrl
pop
clc
test
adc
mov
pusha
cmpsl
cmp
or
lahf
addr16
cmpsb
daa
mov
add
scas
les
shll
repz
clc
mov
shlb
jbe
inc
sti
fdivrs
push
dec
loop
dec
test
mov
mov
sarb
add
mov
adc
xor
inc
into
xchg
and
xchg
divl
mov
cwtl
ret
test
xor
mov
mov
gs
sub
aad
pop
add
loope
pop
mov
pop
mov
jae
push
pop
jns
pusha
rcl
xchg
sbb
aam
lret
scas
stos
loopne
mov
jae
js
mov
cmpsb
cmp
mov
fisttpl
sti
or
aad
pop
test
mov
mov
inc
adc
arpl
xchg
inc
test
push
xchg
hlt
add
movsl
sbbl
mov
in
mov
inc
test
sub
add
fscale
mov
mov
cmp
mov
into
test
mov
dec
lds
js
mov
jmp
in
mov
std
pop
lret
stc
sub
aam
or
into
mov
cmp
add
pusha
adc
test
loop
mov
or
fidivl
leave
shrl
xchg
cli
push
fbld
sbb
sub
andl
pushf
aam
sbb
mov
repnz
mov
idiv
in
pushf
test
pushf
mov
dec
xor
inc
mov
mov
nop
or
mov
outsl
outsl
sti
mov
xor
mov
ljmp
pop
das
sti
cltd
repnz
dec
mov
mov
inc
leave
inc
stc
pop
add
mov
sti
fsubr
aas
test
aam
jge
sbb
mov
lods
mov
cmc
addl
cmp
or
cmp
pusha
int
clc
jnp
in
mov
inc
int
mov
out
fistpl
and
cmp
xor
add
scas
dec
cmp
int
fucomi
push
aam
xchg
pop
scas
inc
hlt
fldenv
stos
add
mov
mov
sub
xor
jecxz
jns
xlat
mov
je
call
lds
les
adc
sub
stos
pop
outsl
push
in
daa
stc
push
lret
pop
outsb
pushf
dec
mov
stc
sti
mov
sbb
movsl
inc
add
js
ja
inc
ret
mov
or
fsts
mov
or
popf
mov
push
icebp
dec
add
mov
cmp
mov
cmp
aam
mov
roll
call
cmc
sub
or
cli
mov
std
les
sbb
push
idivl
mov
mov
addr16
lock
test
and
lret
test
dec
add
pop
maxps
insl
imul
mov
ret
cmp
in
insb
push
and
mov
xchg
sub
cs
rorl
enter
mov
arpl
pop
xor
aas
pop
sub
and
cmp
sti
mov
push
and
popfw
jecxz
jb
movsb
into
cmp
std
adc
jecxz
add
and
jl
xor
inc
or
std
mov
and
cmpsb
pop
mov
cmp
cltd
movsb
cmpsl
out
sub
pop
jo
push
xchg
testl
lcall
test
rorb
or
or
movsl
rcll
outsl
and
push
cli
inc
loope
sbb
ja
bound
je
pushf
sbb
cwtl
incl
xor
pop
mov
ljmp
add
inc
sbb
or
mov
xchg
js
mov
rcrb
or
je
inc
sub
bndldx
icebp
leave
mov
sbb
jb
and
mov
es
mov
xorb
fsts
cmp
xchg
inc
push
adc
cmp
fsts
arpl
bound
sarb
mov
cmpsb
xlat
stc
xchg
add
xchg
sti
clc
cs
mov
cmpsb
dec
ret
nop
js
pushf
mov
aam
xlat
loope
cmp
pop
cmp
js
dec
jecxz
daa
cmp
dec
sub
inc
mov
lock
cmp
pop
cmpl
fsubs
inc
insb
push
push
lods
or
int3
xchg
in
adc
mov
cmc
insl
add
in
or
jnp
or
push
imul
cli
rcrb
iret
out
cmp
inc
gs
addr16
pop
dec
jbe
jne
sbbb
lahf
js
pop
xchg
addr16
jns
scas
mov
add
push
mov
enter
push
mov
mov
lahf
movsb
mul
xchg
stc
scas
rcrl
xchg
and
mov
xor
mov
gs
sbb
cmp
sbb
shl
stos
dec
arpl
push
lods
dec
addr16
xor
xor
xchg
not
or
adc
lcall
iret
rcll
inc
test
mov
out
sbb
js
mov
jmp
rcr
mov
mov
mov
inc
enter
adcl
cmp
sbb
stc
les
xor
sbb
pop
arpl
pop
stos
xchg
das
ret
mov
icebp
data16
pop
push
aaa
mov
sti
sahf
mov
mov
cmp
add
repz
xchg
jle
sbb
fcomps
sbb
cli
daa
and
dec
sbb
sbb
sub
dec
aam
in
test
ljmp
sbb
dec
jge
adc
mov
or
and
inc
add
dec
int3
inc
adc
jnp
loopne
push
scas
pop
add
inc
stc
pushf
mov
fldpi
popa
psubusb
fbstp
adc
testl
cmp
jnp
inc
enter
jns
rorb
sbb
cmp
addl
lods
in
mov
cld
sbb
jae
out
gs
dec
and
loopne
jae
dec
pop
mov
mov
sbb
xorl
iret
hlt
decl
cld
stos
loopne
jnp
cmp
cltd
test
icebp
out
and
xchg
fwait
pushf
scas
inc
leave
scas
xor
in
dec
pop
mov
aad
mov
dec
cmpsb
pop
les
notl
xor
jecxz
pusha
fs
fsubr
or
mov
lods
xor
mov
lea
cmovbe
sbb
dec
adc
scas
loope
lock
es
cli
push
jecxz
scas
jge
or
pop
mov
jnp
out
popf
xorl
insb
dec
jecxz
cmpl
jle
xor
pop
pop
jmp
jnp
imul
iret
fmuls
fdivs
rcrb
enter
inc
out
pop
mov
sahf
jbe
stos
push
dec
sub
loop
pop
pop
movsl
mov
cmp
mov
hlt
enter
pop
and
addb
or
outsb
enter
jno
mov
in
test
jge
dec
fcomip
addr16
pop
pop
sti
xor
cmp
sbb
jg
xor
sbb
pop
pop
xchg
fistl
aam
addr16
and
loop
xchg
push
int3
and
out
jge
loop
in
sbb
or
jbe
mov
outsl
jle
pop
insb
or
fsubs
ret
rclb
add
mov
pop
ja
movsl
fisttps
pop
cmp
and
mov
jp
mov
pop
jmp
out
stos
pop
loop
pop
cltd
xchg
int3
fldenv
icebp
sub
push
push
ror
fiadds
addr16
sti
imul
in
loop
stos
mov
mov
enter
cmpsb
dec
imul
subb
stc
inc
dec
xor
mov
sbb
fiaddl
cmp
movsb
push
outsl
add
test
stc
test
cld
lods
pop
inc
cmpsl
fs
in
push
lods
rcrb
sub
xchg
psubsb
cmp
and
call
fcoml
ja
repnz
or
mov
sbbl
and
fistpll
pop
orl
cmp
clc
icebp
cwtl
pushf
xor
loopne
sbb
sub
mov
xor
mov
sub
dec
dec
call
pusha
imul
adc
pop
jp
loope
push
movsb
mov
test
jge
jno
mov
pop
fldenv
pushf
addr16
and
mov
add
mov
sti
lods
lods
sub
lods
mov
dec
jb
jb
pop
pusha
in
ficompl
cmpl
jbe
sarb
sbb
call
adc
add
aam
daa
dec
add
mov
shrb
sti
pop
fisubrl
cli
mov
arpl
scas
loope
mov
jb
cmc
inc
or
sbb
cmpsl
pop
push
sub
sbb
xor
push
data16
cmpsb
mov
fmull
xor
pusha
or
mulb
cmpb
cmpsb
fwait
ja
fisttpl
and
fldenv
pop
add
shrb
popf
fstpl
mov
add
inc
inc
pop
jno
pop
into
movsb
sub
shll
inc
mov
rcrb
je
ret
fiadds
cmpsb
mov
add
adc
pop
mov
fsubrs
jle
mov
add
stos
loope
ret
jbe
mov
mov
leave
lret
rcrl
sbb
addr16
scas
add
mov
jne
lods
fxch
pop
ja
jae
enter
mov
cmc
sbb
cmp
addb
cmp
in
xor
call
mov
fisttpll
dec
std
jns
inc
scas
divb
mov
mov
lea
jo
adc
arpl
sarl
cltd
outsb
scas
adc
rclb
test
xlat
out
clc
sbb
or
mov
bound
divl
add
xorl
sub
adc
lds
loop
mov
xchg
jecxz
fcoms
mov
mov
ret
push
or
mov
imull
xchg
sbb
and
sub
jmp
scas
ja
andb
movsl
ds
adc
test
loopne
push
sarl
andl
stos
ds
pop
fcoms
mov
xchg
out
imul
les
mov
enter
imul
mov
xchg
fdivs
rcr
repz
inc
fidivrl
push
sbb
int
mov
inc
cmpsb
mov
ljmp
test
sub
test
call
cmp
mov
addr16
push
dec
jae
shl
jns
pop
out
jp
jne
scas
fldt
mov
js
mov
aad
pop
fsts
ret
sbb
inc
mov
push
cmpl
sar
pop
fcomip
out
fldl
out
jb
fs
xlat
cmpsl
lods
pop
dec
mov
aad
outsl
je
enter
ja
lret
cltd
mov
int
sub
shlb
mov
lcall
jp
iret
mov
xlat
mov
cmpsb
cmp
cli
dec
insb
stos
sbb
insl
enter
lcall
pop
add
aam
sbb
fcos
in
dec
lret
inc
leave
je
mov
aaa
cmp
jnp
mov
fisubrs
inc
inc
loope
jnp
cmp
push
cmpsb
inc
std
inc
popa
aaa
mov
and
mov
fsubrs
ficompl
fadd
cli
mov
lods
sbb
incb
fidivrl
lds
inc
fisttpl
inc
aaa
movsb
lcall
aam
fmull
jbe
repnz
enter
lret
sbb
enter
pop
test
movsb
mov
jo
into
fbld
psubsb
bound
ret
hlt
mulb
aas
and
cmp
insl
stos
aaa
dec
in
add
mov
add
frstor
clc
sbbb
shl
loopne
mov
xchg
popa
jmp
sbb
and
xor
idivb
out
int3
aad
cld
jbe
add
dec
inc
pop
adc
or
loopne
shrb
dec
std
mov
pop
mov
adc
or
sti
bound
sub
jne
fcomi
xchg
cli
mov
inc
clc
pusha
into
mov
cmp
mov
pop
fnstcw
cmp
jl
xchg
scas
xchg
out
rorl
pop
jb
or
sbb
fistpl
pop
pop
stos
lahf
in
or
pop
lret
dec
xor
sbb
dec
or
sti
sbb
ret
sub
in
sbb
call
jae
cmpsl
iret
repz
popa
and
mov
cmp
iret
sub
and
mov
movsb
es
add
pop
stos
sub
xor
mov
mov
ss
mov
pop
mov
movsb
neg
push
mov
imul
jp
clc
insb
scas
into
imul
mov
js
sub
add
xor
add
lea
xchg
int
jnp
cmp
inc
movsl
pop
mov
shlb
jo
or
loopne
adc
mov
push
cmp
pop
pop
ret
and
adc
cltd
int3
or
cmpsl
jge
pop
in
clc
fistpl
cmpsb
xchg
mov
out
pushf
fdivp
add
mov
es
xchg
pop
cli
fdivrs
mov
aaa
cmp
sbb
test
cltd
shrd
xchg
add
jns
adc
pop
negl
daa
mov
or
sbb
sbb
cli
mov
xchg
mov
dec
stos
addb
mov
dec
ds
incb
cmpsb
insb
dec
ds
adc
shll
push
movsb
mov
cli
cltd
pop
xchg
js
loope
shl
inc
add
add
stos
mov
jmp
es
mov
repnz
repz
push
sbb
pop
dec
lcall
in
xchg
and
test
cmpsl
lods
inc
inc
xorl
in
mov
movsl
ds
aam
decb
pushf
cmp
sti
xorb
jae
rcll
aaa
ja
subl
shrl
sti
lods
int
popf
loop
ds
sub
test
sbb
std
jb
mov
clc
lods
and
lea
adc
push
push
jbe
movsb
add
or
mov
sub
dec
and
mov
sub
sub
or
in
mov
mov
movsb
notl
push
inc
xlat
andb
mov
dec
ss
push
adcb
push
or
out
or
pop
popa
clc
inc
sahf
jo
cmpsb
outsb
pop
adc
push
pop
sbb
jmp
dec
pop
inc
mov
mov
sti
or
gs
add
iret
out
cmp
adc
mov
or
setg
or
and
js
cmp
push
mov
stos
popf
shlb
jne
and
xchg
mov
loop
sahf
adc
in
loope
insl
vcmpps
mov
daa
test
xchg
hlt
xor
out
cmp
push
testl
push
push
ja
dec
sti
in
mov
jne
sub
popa
test
mov
and
mov
test
rcrl
dec
pop
or
test
bound
nop
shll
add
cmpsb
daa
mov
adc
fcmove
outsb
inc
pop
ss
mov
pop
sbb
xchg
leave
jle
mov
jb
cmp
adc
mov
aam
outsl
xchg
jns
mov
add
jnp
jnp
imul
mov
stos
out
mov
mov
mov
push
std
adc
clc
dec
mov
loopne
cli
idivl
mov
mov
cmp
mov
das
sti
imul
divl
aam
outsl
mov
shlb
mov
gs
clc
mov
mov
sti
pushl
push
mov
mov
cmpsl
sbb
jl
and
scas
fstpt
mov
mov
mov
add
cmp
scas
mov
mov
mov
rcl
xchg
cmpsb
pop
mov
movsl
mov
mov
stc
rorb
inc
movsl
idivl
arpl
aam
incl
stos
fstps
sub
mov
mov
sub
stos
mov
scas
fistps
jl
call
fstl
fistpll
mov
aam
xchg
sub
cmpsb
lods
std
std
out
mov
imul
ja
rcrb
pop
test
pusha
outsb
fdivrl
fnsave
mov
scas
repnz
sti
movsl
xor
scas
xchg
das
mov
and
sti
movsb
fnstcw
mov
lods
shrl
mov
mov
mov
cmp
sbb
test
mov
fidivs
fnstsw
or
push
test
jecxz
mov
push
mov
pushf
cmpsl
out
mov
pusha
push
and
pop
mov
fnsave
jmp
push
inc
fistps
mov
jnp
aaa
sbb
imul
fsqrt
outsb
lahf
clc
aam
lds
enter
fildl
inc
jl
push
notb
jnp
fcmovnu
push
and
fndisi(8087
out
mov
jp
sub
sbb
fsubrl
stos
inc
imul
lods
fdiv
mov
fsubrl
mov
mov
cmp
fdivrl
add
andnps
clc
rcrb
into
fprem1
scas
fs
sahf
out
sub
xor
mov
fidivl
arpl
loope
mov
mov
pop
push
xchg
inc
push
repz
and
mov
mov
fldt
push
movsb
pop
lods
mov
and
mov
pop
out
push
pop
sahf
pop
mov
jmp
fcoml
xor
sarl
fildl
jp
inc
mov
sbb
aam
mov
movsl
test
loop
test
dec
cmp
ja
pop
sbb
scas
test
cmc
fnstenv
scas
inc
mov
and
scas
shll
arpl
mov
mov
mov
adc
stos
nop
jo
jo
sti
aaa
loope
sub
stos
mov
xor
push
mov
mov
jo
or
pop
adc
cmp
sbb
arpl
pop
sbb
and
push
call
mov
xchg
xor
mov
shll
sti
stos
sti
pop
aas
leave
mov
cmpsb
mov
and
jp
sub
cmp
fistpl
and
mov
sti
mov
lcall
mov
sti
mov
mov
shrb
mov
lods
cmp
sub
outsb
fbstp
mov
scas
sti
pushf
and
mov
mov
xchg
aaa
scas
pop
lret
mov
pushf
xor
mov
xorb
sbb
sub
sub
sub
cmpsl
shlb
scas
scas
inc
lret
movsb
lods
mov
jecxz
cmp
mov
pop
mov
fisubs
sub
test
fnstcw
inc
mov
outsb
jecxz
out
mov
mov
movsb
fistpll
lret
mov
mov
adc
mov
sub
jo
imul
test
imul
dec
imul
cs
fnstcw
fsubl
mov
mov
loopne
dec
ljmp
in
mov
pop
test
sti
fadd
iret
mov
or
in
jns
xor
popa
dec
mov
xchg
inc
xlat
and
idivb
fnstsw
mov
test
shll
aas
dec
mov
sub
test
shrl
dec
pmaxub
outsb
xlat
jns
sarb
sub
call
in
stos
mov
mov
lods
test
inc
jmp
and
ljmp
test
inc
push
cmpsb
test
inc
in
lods
sub
xor
sbb
jg
aaa
frstor
mov
test
stos
mov
fldt
test
inc
mov
or
dec
mov
mov
mov
sbb
inc
pusha
push
pop
mov
and
mov
push
enter
cmp
mov
aas
mov
test
lcall
fidivs
mov
lds
mov
cld
test
inc
cmp
sub
jmp
mov
sub
fisttpl
sahf
add
jns
mov
in
mov
sub
sbb
test
sarl
test
shll
test
shrl
add
mov
mov
push
cmp
mov
fldcw
out
lret
mov
pushl
fnstenv
loope
cmp
mov
inc
sbb
ss
popa
fsubs
add
adc
popa
ss
movsl
cmp
mov
mov
mov
jnp
insb
add
mov
enter
jmp
mov
in
mov
cmpsb
inc
mov
mov
mov
mov
mov
mov
xor
lods
mov
stos
mov
insl
test
jge
jne
das
stos
es
mov
and
sti
mov
movsb
mov
cmpsl
cmpsl
mov
gs
and
bswap
mov
dec
les
and
push
or
pop
dec
and
jp
cmc
jnp
and
sbb
sahf
cmp
jno
sti
sub
enter
jno
loope
lahf
test
push
push
andl
and
rclb
pop
jns
cli
xor
cmp
popf
test
shl
mov
mov
inc
sbb
mov
or
repnz
insl
popa
fstp
fwait
loope
mov
mov
cld
cltd
or
lcall
jmp
and
test
push
lret
lods
clc
leave
fisubrs
cmp
movsl
outsb
movsl
incl
sbb
jg
mov
mov
jecxz
sub
dec
mov
pop
mov
cmp
mov
and
mov
jo
test
mov
sbb
push
lcall
mov
pop
ljmp
fildll
orb
mov
mov
or
mov
pusha
mulb
test
fldenv
xchg
mov
sarb
sbb
in
test
mov
mov
jp
mov
std
call
andl
cs
scas
sub
mov
test
mov
sub
mov
lods
sub
pusha
mov
mov
mov
lds
shlb
rcr
jns
scas
inc
movsl
sti
jge
stos
cmpsl
std
mov
aad
sub
fldenv
mov
subl
sub
push
cmp
push
sahf
mov
mov
outsb
mov
fisubl
outsl
mov
stc
adc
sti
lods
mov
stc
sarb
mov
sub
stos
xchg
sub
or
inc
inc
or
pop
add
sbb
jg
mov
sti
mov
mov
add
int3
jg
out
mov
mov
popf
xchg
and
mov
jg
lods
push
mov
fdivl
xor
rolb
mov
mov
mov
aaa
bound
push
inc
loope
clc
pop
inc
mov
adc
imul
aam
stc
cmpsb
push
xchg
incb
jns
daa
pop
xor
nop
push
mov
stos
sub
cmp
loopne
or
test
and
test
and
cmp
mov
mov
scas
add
push
mov
sti
jbe
das
jns
fldt
xor
pop
mov
or
fwait
inc
lods
push
cmpsl
fldt
mov
test
aas
ret
fldl2t
outsl
or
shrb
pop
mov
icebp
dec
in
insb
popf
push
xchg
mov
lcall
mov
cs
dec
mov
fbstp
loope
sti
dec
inc
dec
pusha
aaa
negl
lock
cmp
sti
subl
cmp
jle
loope
mov
jl
fildll
adc
mov
cmp
jmp
cmp
mov
mov
mov
sub
mov
mov
sbb
dec
xchg
test
mov
mov
mov
mov
xor
lea
mov
mov
lods
sahf
mov
frstor
movsl
std
mov
inc
ret
mov
cmp
mov
fsubl
adc
mov
pop
dec
int
cmpsb
push
cld
xchg
xor
mov
call
xor
subb
test
mov
aam
sub
fcmove
pop
cmp
adc
lcall
cmp
icebp
lahf
cmp
mov
mov
xchg
mov
test
arpl
xor
jmp
pop
mov
int
xchg
aaa
idivl
fnsave
pop
fdivr
mov
int
pushl
mov
lods
cmp
jg
mov
xlat
push
sub
and
daa
cmpsl
pop
lcall
cmp
lds
dec
or
mov
sti
mov
fnstcw
mov
mov
mov
mov
jo
add
mov
sub
cmp
push
lds
mov
sub
pushl
jp
dec
cld
mov
lods
fnstenv
mov
inc
mov
insl
lcall
movsl
inc
jg
dec
mov
fldenv
icebp
out
insl
ret
dec
mov
mov
sti
mov
mov
mov
scas
sub
sbb
inc
imulb
decl
mov
inc
gs
mov
add
cmp
test
jbe
test
inc
adc
cmp
sub
push
jg
inc
imull
fisttpl
and
sti
int3
mov
cmp
and
fldt
pusha
cmp
sub
sbb
mov
mov
cld
cmp
inc
enter
mov
stc
dec
stc
cmp
xor
sbb
out
xchg
add
je
mov
xor
cmc
outsb
int
mov
pop
sub
xchg
lret
imul
pop
cmpsb
out
xor
dec
cmp
je
cmp
mov
xor
cmp
sbb
adc
aam
and
pop
pushf
test
mov
push
jle
jns
xlat
stc
mov
loope
test
xor
xor
mov
movsl
inc
not
sub
hlt
int
cmpsb
mov
test
add
sti
ret
lods
jns
sbb
add
sahf
clc
cmp
in
cmp
mov
cmp
mov
cmpsl
jns
cmp
in
sarb
jns
dec
mov
mov
mov
sub
xor
push
adc
mov
cmp
mov
jns
jae
leave
fisubrs
mov
lcall
dec
push
movsl
stos
test
scas
mov
ret
mov
xchg
mov
in
sbb
ret
push
push
mov
sti
scas
stos
sub
cmc
mov
stc
mov
pop
imul
sarb
and
sti
mov
mov
movsb
mov
push
fldt
decl
lds
and
push
sbb
sti
insl
pop
test
shrb
ds
mov
mov
scas
mov
enter
sub
xor
push
and
scas
mov
inc
scas
xor
mov
cmp
fcmovnu
test
nop
sbb
mov
xchg
mov
add
aaa
mov
cmp
enter
sarl
mov
rclb
out
and
out
and
lods
jp
rorl
jp
or
jp
dec
mov
jp
sub
test
mov
jle
test
mov
mov
loope
mov
mov
or
in
pusha
sti
ja
mov
pop
cmpsl
mov
or
mov
ljmp
icebp
mov
int3
mov
leave
mov
mov
mov
mov
clc
mov
mov
cmpsb
fnstcw
jmp
jns
insl
movsl
sbb
inc
mov
pop
mov
scas
inc
mov
mov
cs
lods
sbb
scas
insl
sahf
fstpt
and
jl
test
mov
mov
stos
lret
bound
mov
jo
cmc
mov
pop
test
andb
mov
lret
cmp
push
push
fisubrl
sti
fs
sbb
cmpsl
sbb
jecxz
stos
fldcw
inc
lods
cmc
lods
mov
movsl
adc
idivb
cmpsb
cmp
and
push
mov
cmp
fnsave
sti
rcr
push
mov
mov
push
mov
movsb
inc
stos
iret
cmpsl
clc
mov
movsb
aas
sub
mov
ret
scas
mov
cmpsl
mov
mov
add
outsb
dec
lods
sub
popf
mov
cmpsb
mov
add
scas
stc
test
sti
cmpsb
loopne
jns
cmpsl
lds
mov
aaa
mov
xor
lret
fidivl
push
std
pusha
stos
ret
aam
aas
mov
mov
fisttpl
push
in
inc
mov
scas
cli
sbb
std
lock
push
mov
arpl
adc
sub
pop
mov
shlb
mov
mov
aad
imul
dec
in
inc
mov
fisttpll
mov
cli
and
movsl
repz
mov
jne
mov
xchg
mov
mov
pop
fidivl
fnstsw
mov
mov
pop
fnstcw
jecxz
jle
mov
fnsave
mov
fldenv
ja
mov
sub
mov
mov
in
cmpsb
sbb
insb
mov
mov
mov
stos
mov
mov
mov
movsb
mov
jle
add
cmpl
mov
mov
lods
fldenv
mov
test
rorl
jp
xchg
icebp
mov
sub
cmpsb
pusha
in
push
mov
mov
cmc
lcall
mov
push
mov
popf
push
jmp
mov
lds
mov
jb
mov
and
mov
mov
stos
mov
data16
jb
or
push
push
loopne
dec
mov
outsl
jge
mov
mov
shrl
arpl
mov
mov
mov
fstp
scas
mov
or
mov
mov
scas
mov
aam
daa
mov
test
jp
in
enter
std
stos
push
dec
push
sbb
mov
clc
jmp
xchg
sti
jmp
testl
insl
mov
loope
imul
pop
mov
das
lds
out
mov
lret
testb
lahf
insb
orb
movsb
pop
or
lcall
pop
orb
movsb
rcll
lahf
adc
mov
movsb
lret
fsqrt
mov
movsb
ja
insb
imul
pusha
lods
cli
lahf
sahf
subb
testl
pop
icebp
mov
mov
scas
test
test
scas
aaa
xchg
dec
dec
ds
sbb
popf
mov
clc
loope
ds
lcall
pop
fstpt
mov
leave
jbe
fmuls
insl
mov
jno
cmp
sti
cld
push
test
bound
pop
icebp
sti
mov
sbb
adc
out
mov
mov
mov
mov
mov
dec
xlat
scas
pop
pop
mov
call
sbb
jo
lcall
ljmp
and
push
fwait
mov
aad
cmp
cmp
jl
mov
jo
sti
test
js
lods
mov
cmpsb
mov
and
mov
cmp
std
mov
mov
outsb
popa
mov
sbb
mov
fwait
jp
enter
jp
dec
stc
mov
mov
movsl
inc
inc
cmp
pop
pop
icebp
push
mov
fstps
xor
jnp
fldenv
test
and
stc
fisttpl
cmp
dec
jge
mov
cli
cmp
in
scas
xor
sahf
mov
js
mov
push
fldenv
movsl
push
cld
dec
xchg
shll
shrl
lret
mov
idivl
cmp
imul
push
shll
mov
sub
mov
jge
mov
ljmp
jl
ljmp
mov
stos
cmpl
mov
cmp
pushf
or
xor
popf
cmp
stos
cwtl
sbb
rol
mov
sti
mov
sarb
cmp
adc
cmpsl
fnclex
lret
mov
mov
and
out
movsl
inc
loop
mov
mov
mov
shl
negb
mov
cmp
pop
mov
inc
sti
adc
scas
lret
cld
stos
xor
fdivrs
mov
jl
int
ss
test
and
fsubl
scas
mov
ret
lret
jp
cmp
mov
stos
stc
jge
aas
mul
enter
insl
cmp
lahf
xchg
js
sbb
cmc
pop
cmp
lcall
fldenv
test
stos
ljmp
sbb
jp
stos
mov
mov
subb
lods
fdivrl
fldt
mov
stos
cmp
enter
fdivl
and
cmpsb
add
les
stos
mov
cmp
mov
jp
and
mov
andb
cmpsl
mov
mov
adc
les
xor
mov
mov
ret
fsubrl
out
int
and
inc
idivl
push
aas
stos
test
cmp
mov
pop
sti
and
cmp
cli
std
mov
cs
movsl
mov
test
mov
lret
movsl
movsl
cmp
jp
pop
fldt
fldcw
test
inc
mov
je
ja
push
cld
mov
lods
mov
mov
adc
sub
sarb
insl
lret
lods
mov
mov
mov
jno
cmp
jnp
test
dec
fbld
pop
pop
mov
loope
cmpsl
mov
sub
mov
and
sar
mov
mov
enter
rorb
in
inc
leave
scas
movsl
cmp
sbb
ss
sti
in
sub
pop
mov
sbb
fcmovnb
sar
cmp
cmpsl
cmpsb
lods
lcall
xor
cmp
lcall
sub
fdivl
mov
sbb
loopne
mov
cld
push
cli
jecxz
fs
cmp
and
fnstcw
dec
mov
mov
mov
lods
or
fisttpl
inc
fldcw
mov
cmp
mov
lret
pop
scas
mov
xor
jmp
loop
aas
adc
mov
mov
fldt
sub
out
leave
rorl
idivl
fs
sub
dec
sti
mov
pushl
mov
in
mov
cmp
jbe
fisubl
mov
stos
stc
jne
sub
lods
sub
repnz
mov
xor
cmp
std
dec
sti
mov
mov
push
mov
push
or
xor
pusha
gs
sub
mov
loop
cmp
in
andb
jbe
enter
pushf
cli
sti
mov
push
pop
mov
cmp
mov
adc
sbb
scas
mov
test
clc
cmp
repz
jmp
lds
pusha
sub
test
loope
sub
mov
in
sub
cmp
in
arpl
pop
push
cmpsl
mov
cmp
dec
cwtl
cli
test
jp
dec
push
mov
or
xor
jl
xchg
rcrb
mov
stc
pop
fwait
push
push
jle
fstp
push
lods
and
pop
or
inc
mov
cmp
and
cltd
repnz
gs
mov
sbb
dec
sbb
daa
int
adc
cmp
jl
inc
jae
jmp
aad
rcrb
mov
jmp
cmp
imul
rcrl
test
push
xor
sub
sub
sahf
mov
rep
out
fs
je
stc
cmp
push
push
lea
je
pushf
mov
pusha
pusha
lea
jmp
fdivrs
push
call
sbb
stos
rcll
jne
add
mov
aam
inc
sbb
mov
div
das
or
ja
loope
push
int
test
xchg
nop
int3
push
movsl
pop
popf
movsb
xor
mov
iret
or
scas
or
scas
idivb
adc
div
test
add
mov
in
mov
push
jg
sub
xchg
inc
sub
dec
ret
pop
push
push
lea
jb
stc
test
test
cmpb
pushf
movw
pushf
lea
jne
movsbw
pusha
and
mov
movw
pusha
stc
add
test
movzwl
lea
movzbw
btc
mov
cmc
pusha
add
pushl
movb
mov
pushf
cmc
stc
test
jmp
push
lds
cli
push
push
pusha
rcrl
mov
push
fadds
xor
fbstp
add
add
add
adc
sub
arpl
mov
inc
add
xchg
cmpb
jg
dec
pop
sar
push
loope
add
jbe
add
inc
ficoml
and
jo
adc
xchg
cmp
test
fistl
adcl
sbb
jo
jp
adc
pop
movsb
cltd
rorb
aas
xchg
fstp
push
outsl
mov
sub
fstp
lock
punpckhbw
mov
push
adc
jb
sub
bound
repnz
pushf
popf
mulb
add
and
enter
cmp
fisttps
outsb
sbb
mov
jae
mov
mov
xor
push
stos
and
movsb
sbb
movb
sbb
cmp
jnp
loopne
into
ret
sbb
mov
sbb
arpl
cmpsb
iret
clc
das
pop
insl
movsb
mov
es
nop
fcmovnu
mov
xchg
stc
mov
lea
bswap
not
btc
cmc
mov
ror
mov
clc
bt
clc
mov
push
push
cmc
movb
rol
cmp
mov
xor
jmp
add
adc
mov
pushl
cmp
test
movb
jmp
movl
jmp
pushf
movl
pushf
pusha
jmp
test
pusha
call
repnz
mov
pushf
mov
call
gs
dec
cwtl
cli
dec
cltd
ret
sbb
mov
sbb
mov
insb
jge
inc
pop
sbb
aad
push
push
fildl
mov
sbb
in
add
in
xor
repz
pop
mov
fisubs
stos
in
jbe
pop
lcall
add
out
sub
lock
fstl
pop
lock
pop
jb
loopne
xchg
or
clc
inc
outsb
test
loop
inc
pop
adc
outsb
push
dec
cwtl
cli
ret
in
and
lret
in
pop
cmp
test
mov
and
inc
out
rclb
aaa
push
pop
xlat
mov
lcall
stos
pop
and
mov
xor
out
inc
rorl
xor
gs
sahf
movsb
cwtl
cmp
mov
mov
jno
lret
loop
out
push
xchg
ret
inc
popa
dec
mov
popa
dec
add
imul
data16
adc
cmp
or
loopne
stos
and
dec
cwtl
cli
lds
das
js
ljmp
test
repnz
fidivs
sbb
in
movsl
jo
fsubrl
lahf
dec
mov
fcompl
xchg
dec
mov
push
xchg
cmp
enter
mov
ja
or
pop
into
sbb
push
push
es
lea
movb
mov
inc
pop
loop
xchg
in
loop
loopne
mov
push
pop
cli
push
test
mov
pop
push
push
pop
push
mov
push
pop
hlt
and
inc
jns
scas
into
in
pop
mov
jl
lock
push
push
mov
dec
cwtl
cli
aam
pop
outsl
enter
xchg
std
pop
pop
mov
pushf
lret
push
cli
pop
rorb
icebp
sub
inc
fimuls
das
cmpsb
sbb
cli
pop
mov
jge
mov
sbb
sarl
popa
lea
movsb
lods
stos
out
xor
pop
push
mov
aaa
jo
movsl
add
jne
mov
scas
daa
push
or
ja
mov
sti
jno
test
cwtl
mov
pop
sar
sub
mov
push
jle
in
push
push
test
lods
imull
lods
in
push
lea
call
pushf
pusha
jmp
imul
dec
cwtl
cli
dec
lahf
adc
rcr
add
sbb
pushf
xor
aaa
add
bound
stos
xchg
gs
das
mov
xchg
adc
sbb
stos
movsb
jae
pop
pop
rcrb
adc
popa
dec
out
cwtl
jge
cwtl
jbe
bound
mov
push
xor
inc
cmp
dec
push
subl
das
and
roll
ja
cli
push
mov
pusha
mov
loope
lahf
cmpsb
in
imul
dec
jecxz
inc
adc
jb
sub
lea
call
pushf
pusha
push
pushl
lea
jmp
movl
movw
pusha
jmp
cmp
pop
fcompl
push
sbb
sbb
ds
popf
mov
pop
fwait
jnp
mov
fdivl
mov
pop
ds
sbb
cmp
pushf
ds
mov
jnp
ds
jnp
sbb
jnp
mov
fwait
cld
pushf
popf
mov
fidivs
clc
mov
pusha
test
test
call
call
enter
cwtl
cli
or
out
js
ret
jne
pushl
add
or
popa
pop
ljmp
xlat
xchg
push
mov
icebp
out
sub
inc
lret
sahf
pop
adc
sub
lds
je
sahf
adc
pop
pop
pop
sbb
bound
inc
add
adc
xadd
xchg
mov
sbb
and
mov
push
mov
cmp
xchg
nop
lahf
adc
sub
add
inc
js
je
jb
arpl
jae
mov
stc
mov
call
push
leave
scas
push
cwtl
cli
adc
adc
shl
mov
or
lahf
jge
pop
bound
outsb
imul
in
pop
cs
mov
mov
and
mov
dec
jmp
sbb
inc
xorb
xor
or
mov
jg
dec
pop
arpl
xchg
or
js
xor
sbb
cli
mov
das
js
and
cmpsb
sbb
mov
mov
std
outsb
inc
mov
push
sbbb
pop
hlt
jne
adcl
jmp
add
sbb
enter
and
rcrl
into
inc
je
and
jmp
out
sbb
addps
dec
pop
imul
or
repz
lock
or
lock
rcrb
push
inc
sbbb
or
aas
sahf
popf
movsb
sbb
jnp
inc
push
cmpb
push
lea
call
call
jmp
pusha
lea
jae
add
push
mov
xadd
shr
adc
xchg
mov
rcl
bsr
push
or
mov
clc
call
add
dec
gs
popa
addr16
outsl
js
add
cwtl
jge
cwtl
cli
in
push
pop
fdivr
bound
push
jns
push
out
mov
clc
lods
lods
mov
dec
cmp
shrl
sahf
dec
mov
hlt
xchg
mov
xor
jmp
in
xor
loope
sbb
sub
jmp
sub
call
pop
int3
cmp
xorl
mov
mov
lods
aam
push
clc
decl
int3
lret
inc
mov
adc
rcl
dec
fstpl
xchg
pusha
mov
bswap
xchg
call
pushf
mov
pusha
pushl
lea
jmp
jge
fcoms
cli
pusha
xchg
stos
jecxz
xor
xchg
roll
lahf
sbb
jns
stos
mov
popa
mov
pop
fwait
or
lds
or
ret
jbe
in
adcl
out
cmp
jb
dec
in
adcb
adc
gs
push
popf
imul
rorb
fsubrl
imul
and
xchg
push
or
loopne
dec
xchg
sar
enter
or
push
lret
cwtl
cli
push
push
push
jne
out
and
jecxz
fnsave
aam
push
movsb
lods
push
push
jle
mov
int
repz
les
outsb
jmp
jmp
sbb
adc
addr16
add
push
add
push
push
jg
in
fldcw
mov
jl
or
inc
jnp
inc
pusha
lahf
out
fs
cli
lcall
mov
popa
rcrb
mov
fnstcw
xchg
enter
movsb
int
daa
nop
leave
inc
xchg
pop
imul
rcll
adc
fs
cmp
ret
mov
jp
clc
xor
lea
repz
xchg
fstl
stos
sub
and
xchg
mov
mov
cmc
test
pop
mov
das
insl
sub
dec
scas
and
insl
sub
sbb
cmp
jne
mov
mov
cmp
inc
dec
cltd
cmp
push
dec
mov
dec
jbe
loopne
mov
sub
pop
adcb
les
into
dec
sbb
mov
mov
cld
or
jl
repnz
sahf
ficoml
mov
call
pop
adc
lret
cld
dec
xor
lea
xchg
xchg
jno
lahf
sbb
test
bound
icebp
or
push
cwtl
cli
lock
hlt
adc
rcl
adc
mov
mov
lods
lds
sub
add
dec
lods
lods
gs
gs
and
xchg
xchg
jo
je
movsl
add
mov
fucompp
clc
adc
mov
xor
rorl
movsl
push
lea
push
cwtl
jp
mov
xor
cwtl
cli
fptan
or
mov
mov
mov
jp
or
das
add
xorb
jecxz
mov
mov
jb
fst
xor
jae
sbb
ficomps
insl
bound
mov
dec
dec
out
push
sub
stos
and
rorl
or
in
push
mov
cmp
cmp
lret
hlt
imul
push
lock
std
std
mov
xchg
addr16
sarb
lret
test
ret
lahf
popf
sub
mov
pop
shlb
lret
mov
jge
cltd
in
mov
mov
pop
push
int3
add
jmp
and
test
cmp
dec
add
scas
sub
push
scas
mov
sub
js
jb
inc
enter
push
cmp
cli
and
loopne
xchg
stos
mov
in
mov
cli
jae
xor
cltd
adc
adc
xchg
orb
xchg
dec
dec
dec
test
pop
push
jle
inc
xlat
add
mov
mov
idiv
add
bound
or
and
pcmpeqb
stos
hlt
cmp
lock
pop
int
jnp
icebp
sub
dec
dec
test
sahf
int
int3
push
lea
jae
cmc
stc
bt
add
call
cmpl
pop
pusha
imul
jmp
dec
ret
sbb
dec
sub
mov
adc
xchg
negb
fstpt
in
mov
aad
pop
mov
out
jnp
mov
or
leave
out
xor
cli
shll
cmp
jmp
hlt
sbb
repz
lret
inc
inc
hlt
sbb
out
test
or
iret
out
mov
test
xsavec
mov
pushf
inc
lea
pushf
pushf
pushf
lea
call
jmp
ljmp
push
aas
push
ror
cmp
push
aas
nop
fldenv
cltd
fs
lds
sbb
xchg
imul
dec
jno
rol
sub
out
fmull
push
lahf
loopne
imul
cli
pop
mov
mov
xor
dec
out
sbb
or
lcall
sub
adc
add
fdivs
jp
nop
lret
cld
push
cmpsb
xchg
shl
xor
push
cmpsb
xchg
outsb
arpl
in
pop
jge
or
cmp
xchg
into
sbb
sub
sbb
inc
mov
mov
repnz
pushl
lea
jae
pusha
pusha
lea
jne
jae
movb
lea
mov
push
mov
mov
mov
movzbw
lea
push
movl
call
lea
ja
rcl
rcl
adc
sub
stc
call
sbb
cld
inc
xchg
adc
dec
dec
jne
fildll
xor
inc
test
cmp
push
or
arpl
push
or
jle
test
dec
or
nop
jle
sti
rcll
stc
sub
pop
rorl
insl
push
cmp
fsubs
sbb
jo
dec
aas
shrb
jb
jno
rcrb
add
push
dec
push
out
mov
in
add
sbb
xchg
cmp
xor
ss
mov
fwait
loop
js
cs
loopne
scas
mov
mov
sub
clc
pushf
pushl
popl
bt
bt
pushf
mov
cmp
pusha
call
and
cli
or
xchg
mov
mov
sbb
aas
adc
shlb
add
sub
sbb
mov
xlat
xchg
sti
dec
fwait
adc
outsb
jg
mov
out
cmp
cwtl
push
jmp
and
mov
mov
jmp
sub
test
clc
pop
leave
lahf
mov
sbb
orb
orb
mov
push
pop
pushf
rcl
dec
js
decb
pop
ret
pop
xchg
shlb
js
add
cmc
push
jg
xchg
in
jmp
xchg
hlt
lea
sub
test
sti
shl
push
pop
inc
imul
mov
jbe
mov
jl
cmp
lods
call
cwtl
mov
lret
xor
scas
int3
shld
sub
jle
scas
fimull
lea
or
jns
out
cld
sarb
shrb
and
rorb
sub
aas
mov
push
testl
xor
dec
xchg
out
popa
ficompl
jl
add
push
dec
or
fimull
in
rorb
cltd
lea
in
out
out
cwtl
add
rclb
xor
cmp
pop
push
dec
ret
dec
xchg
in
xor
out
out
or
lahf
cmp
mov
mov
mul
arpl
in
lahf
and
push
sub
es
or
mov
shlb
adc
push
and
xlat
pop
cwtl
cli
dec
jg
shl
xor
sub
xchg
push
xchg
and
mov
add
cmpsb
mov
or
fnstenv
enter
lret
movsb
xor
ret
nop
out
jge
mov
ss
xor
jno
jmp
insb
jge
sar
test
dec
idivb
stos
lods
imul
inc
mov
rolb
inc
jg
inc
jg
mov
pop
dec
shrl
push
int
shrb
shr
fiadds
xor
aad
mov
out
dec
mov
out
xchg
push
loopne
add
fbld
pushf
sbbl
add
into
out
and
sti
and
jle
test
sub
lock
fdivrl
push
lahf
shlb
xor
jmp
ljmp
sbb
cli
out
jae
int3
xor
push
inc
or
jge
int
xchg
jp
add
dec
dec
ret
cltd
mov
ret
push
imul
insb
or
mov
fwait
add
sbb
sbb
fs
mov
sbb
xor
adc
in
rcrl
pop
push
lods
add
and
inc
and
push
addr16
inc
rcll
mov
in
ss
jbe
jmp
pushf
mov
mov
dec
pop
cmc
insb
daa
and
add
xchg
xor
push
pop
mov
fmuls
fcmovnbe
sbb
aad
cmp
fucomp
bound
adc
jb
mov
lea
pushf
pushl
pusha
lea
call
call
lea
jne
aad
bsf
shrd
sub
rcl
mov
or
mov
mov
call
mov
cli
pushf
adc
ljmp
pop
pop
pop
repz
dec
ljmp
outsl
or
add
jmp
hlt
pop
shll
xor
or
xchg
xchg
sub
hlt
mov
ljmp
xor
lods
jg
jmp
pop
sbb
shrb
test
fwait
cwtl
push
inc
mov
inc
jle
pushf
xlat
xor
xlat
sub
lret
lock
outsb
arpl
adc
push
mov
sub
or
pop
inc
movsl
mov
mov
sub
jbe
in
movsb
lea
call
pusha
jmp
lods
lock
cmc
push
adc
xchg
aas
add
scas
jae
ret
cmovs
popf
stc
pushf
inc
movsb
and
jb
or
lods
sbb
in
jmp
repnz
push
mov
or
mov
dec
adc
mov
jecxz
sub
push
push
frstor
fldt
fbld
mov
lcall
sbb
stc
dec
cmpsb
cld
sahf
in
imul
aad
mov
daa
push
fimuls
stc
out
stc
sbb
push
clc
push
mov
and
xor
lock
and
pop
daa
push
rcll
out
arpl
rorl
int3
sub
cmp
sub
insl
mov
lret
adc
sti
or
dec
fists
cs
cmp
shll
xor
or
and
lret
into
arpl
xchg
lods
jnp
pop
adc
dec
dec
mov
imul
fadd
ficoms
sub
fwait
mov
inc
jne
mov
fldl2e
cmp
mov
test
insb
dec
or
adcb
arpl
xor
je
inc
cli
arpl
push
sbb
xor
mov
inc
mov
movsb
cmp
flds
inc
and
inc
and
cmp
or
cmp
insb
push
imull
jg
pop
push
jne
push
push
or
out
sbb
test
sbb
xor
mov
lret
adc
add
sub
fs
je
pusha
bt
call
aad
negb
cli
inc
mov
repnz
jg
or
pushf
fldt
into
mov
out
test
stos
and
test
xchg
add
inc
mov
inc
rorl
fcoms
sub
jae
cs
movl
xor
cwtl
enter
fsub
jbe
add
xlat
or
iret
iret
or
cs
inc
lods
and
push
clc
pop
dec
mov
adc
mov
and
ret
pop
cwtl
cli
push
lods
aad
pop
pusha
mov
divl
wrmsr
call
xor
movsb
xor
stos
aam
inc
mov
sbb
pop
dec
xchg
shrb
arpl
dec
inc
mov
ret
mov
stc
outsl
mov
jns
add
stc
xor
inc
movsl
jnp
and
lret
jp
mov
lret
fptan
rcr
and
inc
sahf
movsl
adc
xor
daa
dec
les
fwait
ss
push
jge
fsts
adcb
dec
jp
inc
test
je
je
nop
out
mov
dec
ja
in
cmp
and
test
js
test
mov
adc
cwtl
shr
xchg
or
lahf
hlt
loop
push
mov
xor
add
xor
es
cmp
lock
xlat
pop
or
int3
in
or
insl
jecxz
aad
dec
or
scas
scas
aam
dec
jb
xchg
ficoml
icebp
pop
outsl
sahf
add
nop
lret
push
sti
gs
cmp
fisubs
cli
inc
mov
sti
sub
cmpsb
filds
add
repnz
sub
or
stos
pop
cmpsb
sbb
mov
mov
and
fwait
or
pop
into
fst
in
loop
adc
pop
inc
jle
add
rolb
gs
lcall
addr16
cltd
xchg
int
push
cmp
lret
int
add
fimuls
cmp
lcall
mov
decb
mov
daa
xor
repz
xor
in
lret
aam
push
or
je
or
cmp
stc
xchg
shr
sar
mov
call
pusha
push
lea
je
call
mov
test
jb
sbb
pop
mov
add
arpl
out
pop
sbb
jo
mov
jb
test
das
sub
sub
bound
lcall
stos
dec
lret
out
shl
jp
fwait
dec
mov
lcall
je
mov
cs
mov
mov
dec
jne
mov
jbe
push
and
fidivl
dec
das
arpl
dec
xchg
lods
adc
xchg
xchg
mov
lods
outsb
vprotq
fldl
inc
mov
and
xchg
lahf
fcoms
jnp
mov
or
arpl
fsubl
cltd
lea
sbb
add
pop
jo
sarl
movsb
jno
stc
ds
ret
sub
cmp
loope
aam
jnp
mov
push
xchg
aam
cmpsb
in
sub
pop
mov
add
jl
adc
daa
jle
fistpl
dec
mov
clc
sbb
fs
je
rcl
xchg
sbb
aad
sub
shl
clc
bts
mov
bsr
cmc
mov
sub
btr
shr
inc
dec
sbb
test
mov
pusha
clc
pushl
cmc
or
call
xchg
pop
in
arpl
and
lcall
dec
js
fdivrl
leave
bound
test
scas
jp
outsb
mov
sbb
pusha
xlat
sbb
lcall
cs
arpl
mov
rclb
pusha
jno
cmp
push
cmpsl
iret
lock
movsl
fsubrl
movsb
std
cmp
push
addl
push
andl
lahf
shr
out
ds
cmp
sbb
cs
lods
sbbb
cltd
mov
mov
cwtl
cli
notb
nop
leave
fisubl
fs
mov
push
pop
pop
or
and
xchg
aam
xchg
push
aad
ds
pop
pop
aam
push
cmp
mov
fisttpll
and
mov
dec
fmulp
jle
mov
inc
aaa
fidivrs
test
add
inc
aaa
fidivs
push
bound
icebp
or
pop
mov
clc
outsb
mov
push
mov
gs
cli
jns
xchg
in
add
push
lret
add
jle
adc
js
idivb
sbb
sbb
imul
loopne
out
out
aaa
je
lahf
popa
stos
cwtl
push
pop
lret
mov
hlt
push
inc
pushf
stc
test
fmuls
cs
push
jmp
std
push
jmp
jmp
add
jbe
or
xor
xchg
loope
push
and
into
pop
inc
pop
adc
cwtl
cli
inc
stos
adc
out
sub
or
mov
pop
push
lcall
push
lcall
jae
xchg
leave
mov
je
pop
idivb
out
sarl
pushf
and
sbb
rol
lcall
push
push
or
jp
fldl
cld
or
add
fcomip
int
inc
mov
adc
je
shlb
inc
push
int
add
pusha
out
mov
int3
aad
inc
dec
into
or
push
enter
jo
mov
popa
das
mov
adc
cmp
fsubl
rorb
mov
jnp
or
fistps
sbb
jl
push
jg
stc
and
cmpsl
add
inc
cmc
or
test
cli
or
arpl
adc
aad
add
jne
pop
xor
push
push
adc
insb
imul
cwtl
xor
add
push
rcll
stos
mov
jb
scas
movl
sub
sbb
or
repnz
dec
mov
test
ljmp
fs
cmp
lds
cli
dec
xchg
in
pop
mov
add
les
mov
subl
add
loopne,pn
jo
ljmp
test
loopne
dec
lcall
fmull
push
cmpsl
mov
jg
and
rcl
popa
pop
jg
xlat
movsl
push
pop
xchg
sbb
rolb
mov
test
pop
lret
repnz
push
mov
jmp
cld
aaa
sbb
cwtl
cli
movsb
aad
dec
test
push
or
add
and
mov
idivl
sub
mov
addr16
xor
xor
test
jne
mov
mov
in
rcl
xchg
mov
sbb
pop
mov
cmp
sub
cltd
xor
in
jmp
inc
jg
dec
cmp
and
stos
xchg
sub
pop
adc
xchg
es
in
adc
push
es
mov
jmp
sbb
jns
in
sub
iret
lcall
ja
pop
lret
lret
and
fcoml
sbb
dec
xor
fnsave
orb
sub
dec
mov
adc
adc
pop
mov
pop
adc
daa
mov
loop
jle
aam
sbb
push
imul
push
mov
sub
xchg
test
sub
add
fsub
lcall
lcall
je
inc
jge
sbb
inc
xor
mov
in
cmp
cmc
xor
int
cmp
lret
insb
xor
cs
insb
add
jmp
ljmp
mov
cli
cli
add
ret
jge
stos
mov
pop
repz
cmpsb
mov
repz
call
cltd
rcr
push
test
dec
mov
js
js
stos
mov
stos
lahf
cmp
push
cmp
lret
lea
sti
sbb
fsubs
mov
dec
in
dec
mov
add
pop
sub
push
push
push
sbb
cli
xorb
sub
insl
inc
adc
je
and
xlat
and
adc
pop
mov
adcb
mov
into
into
mov
js
data16
int3
mov
sarb
push
sub
outsl
inc
xchg
fs
icebp
cmp
test
jb
lds
dec
mov
cli
xor
pop
js
cmp
pop
dec
push
xchg
lock
xchg
fcom
push
dec
test
inc
mov
mov
popf
push
xchg
inc
jp
cld
gs
scas
and
mov
ds
int3
addps
or
pop
sarl
cltd
aad
and
in
popa
movsb
cmp
movsb
sbb
es
cmp
jae
xchg
xor
pop
push
in
pop
dec
mov
call
push
push
jne
mov
mov
inc
jne
inc
jne
mov
in
dec
mov
in
ret
aas
scas
in
sbb
lret
jno
clc
mov
shl
bsf
movsbl
neg
mov
pushf
movb
call
mov
cli
xchg
adc
fstpt
pop
lret
xchg
das
ljmp
push
add
add
inc
jle
inc
pop
mov
mov
jmp
mov
dec
xor
dec
push
je
fdivr
jg
imul
arpl
jb
test
mov
into
idivw
cwtl
xchg
shrb
dec
lods
bound
je
pop
push
and
mov
loop
divl
lock
sub
in
sub
sbb
inc
sbb
xlat
loopne
cs
sub
push
mov
add
test
repnz
clc
mov
jmp
mov
push
and
movw
bt
jmp
jno
int3
push
cli
push
push
punpckhbw
ds
mov
pop
pop
repz
push
dec
adc
inc
outsl
lods
mov
xchg
pop
xchg
loop
sub
ret
push
and
jp
xor
sti
cmp
aaa
sub
jmp
imulb
fdivl
mov
lock
or
je
lcall
inc
fiaddl
add
pushl
ror
clc
cmp
pushf
sets
mov
movsbw
lea
bswap
not
movsbw
mov
push
pushf
lea
ja
pusha
pushf
pusha
jmp
movsb
mov
cli
add
and
jl
push
dec
test
cmp
in
xchg
pop
int
call
dec
mov
cmp
jno
adc
push
fs
pushf
dec
or
ds
sbb
and
lods
sub
pop
mov
mov
lret
sti
test
pop
cli
cwtl
cltd
cltd
dec
data16
adc
pop
pop
into
int
inc
add
pop
call
sbb
aad
mov
xor
fdivrp
jae
daa
inc
hlt
fwait
in
sti
push
lret
push
insl
xchg
popa
in
out
push
mov
ret
dec
xchg
pusha
pop
add
ret
std
xchg
mov
add
inc
iret
ret
popf
xchg
enter
push
cmp
sbb
add
dec
xor
mov
out
push
xchg
push
add
in
pop
ss
cwtl
mov
mov
lds
test
inc
cmp
jg
xor
mov
dec
adc
fnstcw
sub
push
loopne
push
xorb
cmp
js
pop
dec
sbb
mov
sbb
and
xchg
rol
daa
cs
rcrb
test
cmp
mov
cli
dec
negl
jno
xor
daa
jo
fucompp
jmp
cltd
in
push
movsb
lret
int
pusha
pushf
push
pop
xor
pop
movsb
pop
mov
xor
jmp
sbb
les
xor
outsb
pop
lock
xlat
xchg
adc
lock
imul
loope
aaa
jb
mov
int3
xchg
in
arpl
jo
ror
inc
iret
rolb
jb
test
and
mov
mov
dec
fimull
addl
push
cld
cld
addb
fldenv
lea
adc
pop
cs
cltd
in
mov
shr
dec
push
or
movsb
insb
cwtl
cli
sub
into
das
push
imul
adc
mov
orb
das
or
sub
imull
push
xchg
aaa
or
ss
mov
xchg
gs
aaa
lods
stos
add
xchg
fst
dec
ja
mov
sub
shrb
sub
outsb
test
iret
pushl
adc
jno
cmpsl
loop
scas
add
mov
dec
mov
dec
jno
out
inc
mov
dec
pop
hlt
mov
cli
gs
adc
fnsetpm(287
std
jbe
add
and
int
pop
sbb
imul
jp
test
sbbl
dec
gs
sbb
outsl
insb
aaa
sub
jecxz
sub
inc
jle
inc
push
test
pop
push
in
mov
int
adc
int
adc
inc
arpl
movsb
or
sub
add
insl
das
xor
adc
cli
lods
filds
sub
fildll
jns
leave
lret
fwait
mov
xor
ljmp
movb
mov
fwait
js
les
add
insb
aas
mov
ret
ficoml
xor
adc
inc
mov
pop
cld
and
mov
pop
adc
sub
jno
clc
loopnew
sbb
clc
dec
aas
push
es
mov
loop
and
cmp
xchg
idivb
test
jmp
mov
outsb
cwtl
cli
pop
scas
sub
rcll
xor
ja
jne
jmp
dec
ljmp
mov
outsb
movsl
loopne
shrl
jmp
adc
outsb
lcall
arpl
cmpsb
jle
mov
pop
bound
xchg
adcb
push
shll
mov
loopne
sti
into
aas
cmp
mov
std
xchg
cmpsl
jecxz
fisttpll
out
in
mov
popa
xchg
stc
sbb
sbb
mov
lahf
adc
dec
push
jbe
aaa
and
leave
pushf
in
sti
mov
sub
outsl
cwtl
cli
sbbl
jp
jns
and
ljmp
inc
ljmp
mov
mov
or
inc
cmp
add
movsl
cmpsb
cmpsb
pop
xor
movsb
jnp
add
xchg
mov
add
sbb
mov
dec
xchg
test
fsubs
repnz
insb
mov
out
clc
ret
pop
mov
cwtl
mov
jge
dec
lock
fcmovne
dec
ds
xor
mov
xchg
enter
mov
and
arpl
roll
push
pop
lds
mov
push
dec
test
stos
pop
mov
imul
aas
xor
movsb
jmp
cmp
sahf
aaa
subb
jo
adc
bound
cli
ljmp
test
lods
repz
arpl
movsl
or
cmp
subb
jno
mov
cld
dec
dec
add
inc
stos
adc
mov
repnz
outsl
outsl
and
inc
adc
fwait
cld
loope
dec
push
outsl
outsl
and
pop
les
dec
push
xchg
sub
fbstp
shl
push
scas
movsb
mov
xchg
cs
push
jecxz
xor
mov
sub
out
mov
jg
adc
call
les
push
mov
inc
cmp
inc
jl
ret
les
mov
cmp
xchg
imul
call
fs
jne
call
push
int3
mov
cwtl
cli
sub
pop
jmp
sub
mov
sub
dec
sub
jns
xor
jo
out
jne
xor
xchg
ret
or
push
fsts
cmpsl
call
fsts
jne
stos
and
lods
ret
sbb
into
add
or
mov
push
dec
scas
and
add
mov
pusha
movw
repnz
pushl
lea
jne
push
pushl
movb
lea
cwtl
pop
not
mov
pushf
movzbl
lea
jmp
lea
jne
movsbl
bsf
mov
sar
sub
ror
bts
and
mov
bt
push
sub
jmp
movw
mov
pusha
mov
pushl
pushl
ret
pusha
lea
call
pusha
lea
jae
clc
cmc
test
sub
pushf
pushf
push
mov
lea
call
pusha
jmp
sub
jb
cli
mov
jge
aaa
pusha
mov
adc
add
mov
xor
jae
test
xchg
cmpsl
lock
addr16
rcl
pop
push
pop
push
ret
lahf
cmpsl
jae
push
into
ret
mov
mov
fmuls
add
lcall
jbe
jmp
scas
push
or
ret
test
rclb
or
int
and
sbb
push
mov
cld
pop
mov
push
cmpb
add
outsl
xchg
mov
adc
cmpsb
hlt
push
out
scas
cmp
les
cmp
nop
mov
into
jae
repnz
test
lods
mov
push
or
sbb
mov
insb
mov
mov
add
subl
adc
jp
fwait
add
and
call
xor
xchg
hlt
xchg
xchg
mov
sub
pop
inc
mov
or
adc
pop
dec
fsubrl
sub
sub
mov
lret
push
xchg
sbbb
mov
outsl
in
sbb
lcall
cli
pop
sub
push
loopne
aam
pop
sbb
scas
xor
fs
scas
lods
and
icebp
cli
xor
push
leave
test
out
jmp
mov
xchg
jmp
mov
xchg
xchg
into
lods
iret
ficompl
xchg
dec
push
pop
pop
into
push
pop
stc
fdivs
dec
dec
jmp
inc
mov
mov
or
cmp
fsts
dec
jge
push
mov
test
pop
lret
mov
cli
xlat
movsl
fsubp
adc
pusha
pushl
add
jmp
mov
push
pusha
pushl
ret
push
lock
std
std
mov
xchg
gs
mov
ret
jl
stc
cwtl
enter
and
pushf
mov
pop
test
xor
jle
sbb
jge
cltd
in
cwtl
dec
inc
cmp
aam
pop
ret
add
in
shlb
adc
test
and
xchg
add
inc
add
cmpsb
mov
not
arpl
xchg
push
data16
xor
dec
mov
fcomps
jmp
sbb
dec
call
call
movsl
sbb
jne
cli
jo
repnz
or
in
imul
les
dec
inc
sub
cwtl
or
mov
push
nop
mov
movsb
cmp
leave
add
jno
add
int3
inc
add
push
enter
mov
adc
cmp
mov
jmp
sbb
push
adc
clc
movhps
adc
fidivs
sti
sbb
cli
mov
enter
adc
dec
cmpsl
clc
daa
pop
sub
js
xor
sbb
cs
out
in
leave
adc
inc
test
sbb
add
jge
push
inc
mov
das
jge
pushf
out
pmuludq
jmp
arpl
lea
cmovp
pusha
ss
shl
pop
hlt
push
bound
nop
fisttpl
adcl
fs
je
adc
shld
bswap
pushf
add
neg
mov
clc
jmp
jae
shrd
neg
movzbl
mov
shl
btc
mov
bsf
mov
pusha
cmp
clc
test
xor
cmc
lea
jo
cmp
repnz
push
pushf
movw
pushf
lea
jne
jmp
inc
mov
popl
and
idivl
imul
and
xchg
cmpsb
mov
ret
test
std
es
ret
jno
jmp
dec
adc
and
or
push
daa
popf
enter
lret
addr16
jnp
stos
inc
pop
lcall
mov
mov
mov
push
sbb
jp
cmp
in
push
fldt
push
je
push
int3
inc
xchg
mov
xor
lcall
mov
cmpsb
add
sbb
cli
pusha
popa
xchg
repz
xchg
out
pop
mov
mov
sahf
xlat
mov
in
outsl
rolb
shrl
lods
push
ja
ja
icebp
push
xor
or
sub
pop
cli
sub
cmp
loopne
sub
mov
leave
inc
stc
bound
inc
lods
mov
xchg
cmpsb
mov
fistl
ret
std
push
inc
mov
in
sbb
insb
adc
out
jecxz
inc
jno
pop
adc
cmp
pop
adc
nop
xchg
scas
lods
and
mov
sub
inc
lods
test
test
jg
andl
pop
mov
loop
fs
nop
loope
ror
arpl
fwait
cmp
cld
std
jae
dec
pop
mov
sbb
cmp
es
dec
push
adcb
fldt
cltd
xchg
loopne
adcl
loopne
nop
pop
outsb
movsl
add
push
or
push
xchg
fbstp
inc
arpl
ret
ror
stc
pushf
jmp
out
gs
js
cli
xchg
sti
push
push
mov
adc
mov
idiv
xchg
adc
sahf
pand
lods
sub
push
mov
pop
push
lahf
push
int3
popa
mov
nop
jl
lods
mov
mov
jl
lret
mov
jle
out
aad
inc
adc
in
in
adc
jecxz
mov
out
or
insb
mov
pop
daa
sub
in
cmp
and
rorb
test
jmp
mov
sub
test
cmp
call
popa
popf
xorb
or
and
push
je
push
dec
dec
sbb
cld
mov
xchg
jecxz
sbb
jle
aas
cmp
les
cmp
mov
scas
cli
xlat
sarl
inc
mov
mov
xor
mov
xor
out
dec
pop
push
loopne
out
dec
test
jecxz
adc
pusha
lahf
cmpsb
aad
sbb
fwait
mov
out
clc
cmp
pxor
adc
cli
ja
pop
mov
outsl
enter
je
ljmp
inc
xor
fwait
cld
insl
jecxz
popa
sub
shll
cld
xchg
adc
test
cmp
test
mov
sbb
daa
and
inc
test
mov
clc
iret
jle
jmp
cmp
mov
aad
fistl
inc
mov
mov
mov
mov
sub
and
xchg
sbb
and
iret
xor
imul
dec
or
pop
shlb
imul
andl
jge
fadds
cmp
aas
push
xor
mov
xchg
hlt
test
and
mov
mov
pop
aad
stc
and
data16
pushf
call
in
sahf
popf
pop
mov
sub
push
fildll
pop
frstor
lahf
scas
in
or
leave
xor
lods
add
mov
push
mov
mov
enter
push
ss
cli
mov
stos
and
pop
inc
imul
xor
pop
inc
sub
fwait
adc
sub
testb
adc
cmp
sub
mov
repnz
jp
ljmp
gs
arpl
fists
addr16
mov
cmp
pop
pop
mov
add
pop
pop
lcall
jp
mov
into
jns
cli
inc
xchg
cld
xor
push
mov
icebp
mov
xchg
loopne
pop
dec
pop
xchg
es
in
adc
inc
mov
pop
lcall
loop
inc
jnp
cmpsl
and
sbb
adc
cmp
cmp
jb
inc
aaa
cmp
push
jno
daa
xchg
int
cmp
fcomps
ss
fcmovnu
ja
mov
loopne
pushf
imul
cmp
cmc
add
movb
movb
lea
jmp
sbb
mov
push
test
pushf
cmpb
pushf
mov
lea
jne
adc
btr
aaa
sub
bt
xor
pusha
mov
ror
setl
add
neg
pushf
sar
push
mov
call
jns
cltd
jp
cli
and
xchg
dec
push
and
xchg
mov
sbb
fwait
push
lahf
mov
shrl
sbb
in
sub
xor
cmp
sti
xor
and
jp
sbb
in
icebp
in
mov
pop
aas
test
xchg
dec
add
sbb
pop
cli
mov
test
dec
ret
push
push
fldl2e
mov
jbe
popa
test
orb
dec
or
jmp
or
fptan
out
test
hlt
add
cltd
add
jbe
aaa
es
in
dec
jecxz
mov
decl
test
cwtl
cli
rolb
push
imul
sahf
lahf
enter
int3
in
mov
pop
int3
fcmovnu
ja
pop
sbb
pop
jp,pt
cwtl
pop
jge
fucom
in
xor
pop
mov
pop
outsb
push
add
mov
out
fcoms
daa
mov
test
mov
sbb
fimuls
jmp
xorb
xchg
adc
and
fst
pop
movsb
int
xlat
adc
nop
fsubrp
jl
lcall
out
push
xchg
or
or
aam
ss
sarl
popa
jo
out
je
loop
mov
cltd
loopne
mov
lea
jne
aas
xor
movzbw
aad
ror
shl
mov
cmp
pusha
add
pushl
pusha
lea
jmp
movb
pushl
movb
lea
ja
pushf
jmp
int
out
jl
cli
jbe
call
cmp
mov
inc
orl
imul
and
pop
adc
push
aaa
aam
push
dec
mov
inc
adc
repnz
add
lea
xchg
insb
lret
adc
push
jmp
addr16
je
outsb
xchg
cmpsb
cmp
lods
and
xor
cmpsb
enter
ljmp
push
pushf
adc
sbb
aad
pop
pop
or
fucompp
mov
cwtl
cli
inc
lock
imul
arpl
cli
or
scas
mov
notb
stc
loop
movsl
push
push
mov
xor
insb
test
adc
mov
push
inc
cmp
mov
in
sbb
push
sbb
ret
dec
bound
lcall
gs
ds
movsb
jmp
inc
mov
push
mov
xchg
mov
adc
push
or
push
cmp
cli
ret
int3
aad
jg
loope
sti
and
mov
push
mov
daa
popf
ud1
xchg
out
pop
mov
push
inc
push
lret
shrb
pushf
hlt
xchg
add
cltd
popl
movsb
inc
push
popa
ret
mov
pop
clc
sub
int
xor
adc
push
movsb
cmp
lods
loop
and
mov
bound
cmp
stos
faddl
adc
stos
faddl
rorb
je
ljmp
adc
cmc
inc
jno
loopne
xor
data16
jge
cli
dec
xchg
fwait
lods
cmc
push
inc
cwtl
or
mov
sbb
aas
jp
pop
jle
dec
ret
adc
dec
cwtl
xchg
or
test
pop
dec
jmp
and
push
rorb
xchg
dec
lods
fcompl
cmpsb
adc
sub
adc
dec
xchg
adc
push
pushf
adc
fwait
xchg
adc
inc
outsb
sar
dec
ja
sub
add
dec
test
cwtl
cli
repnz
cmp
cmpsl
add
jge
xorl
mov
cwtl
test
incl
int3
hlt
mov
fisubs
and
dec
jns
fstps
push
sub
push
mov
add
and
jo
sahf
or
jp
sarl
mov
out
cwtl
cli
pop
xchg
lahf
jl,pn
in
and
dec
jp
mov
adc
pop
jp
mov
adc
xor
fs
daa
mov
pop
xor
fwait
push
rorb
cmp
jecxz
push
mov
popa
ret
pop
mov
lret
pop
aad
mov
mov
jo
cmpsb
cmp
cmp
lret
loopne
into
mull
push
push
or
and
inc
sbb
sbb
js
adc
or
test
pop
sbb
lret
xor
adc
repz
gs
mov
cmp
sbb
pop
cli
adcb
cmp
fdivl
mov
add
daa
mov
pop
testb
ffreep
lods
pop
cmpsl
and
xor
sar
mov
cmc
jo
inc
push
scas
dec
sub
sahf
dec
and
sub
imul
jbe
pop
pop
add
xor
cmp
pushf
inc
addl
int3
sub
sarb
jle
aam
rorl
sbb
sbbb
jl
push
outsl
shl
pop
cmc
outsl
addb
mulb
in
inc
out
jnp
fwait
mov
dec
rcll
sbb
push
sub
xor
pop
in
mov
dec
jle
xor
adc
pop
and
xchg
fmuls
sub
inc
mov
imul
and
xlat
jns
and
inc
cmp
mov
or
xlat
fmuls
or
xchg
and
sub
aad
xchg
lcall
xor
pop
add
pop
mov
sbbb
or
push
aam
out
push
jl
mov
ja
movsb
cmp
mov
xchg
pop
js
in
adc
add
cmpsl
mov
dec
mov
dec
ret
adc
adcl
add
push
jno
or
lret
cmp
mov
xor
into
ret
in
sub
jg
dec
pop
into
into
sub
in
lret
mov
jo
push
jge
sbb
call
sbb
push
shlb
dec
push
mov
cli
jne
cmpsl
fmuls
mov
fcoms
dec
mov
mov
sub
ja
fldl
fisttps
das
movsl
mov
and
adc
mov
fstl
fiaddl
movsb
jge
mov
pop
sbb
mov
aam
ror
or
sbb
push
enter
or
jnp
cmpsb
shll
sbb
sub
ljmp
dec
loopnew
dec
pop
sbb
jl
pop
sbb
sub
imul
lock
and
decl
test
cmp
fists
cwtl
cli
and
push
fs
sub
and
dec
jl
fwait
je
icebp
iret
in
pop
scas
and
sbb
bound
popf
xor
mov
aas
cmp
iret
inc
mov
mov
dec
inc
cmpb
push
xchg
into
in
pop
orl
jns
test
push
test
into
adc
lcall
mov
dec
xchg
cli
icebp
test
and
pop
je
incl
push
ret
insl
aas
push
jg
in
dec
pop
inc
or
imul
cmpsb
es
xchg
mov
inc
pop
and
lcall
fs
adcb
pop
aad
dec
push
mov
sbb
xchg
or
insl
out
scas
movsl
inc
sbb
in
scas
rcll
dec
test
mov
mov
xor
mov
push
pop
cmp
pushl
call
xchg
into
mov
cwtl
cli
cmp
xlat
add
sub
ret
fnsave
jmp
and
inc
cmp
xchg
xchg
or
divl
scas
jmp
jp
rclb
pop
and
dec
cmpsl
adc
loope
or
mov
lods
inc
jnp
mov
rorb
xchg
ds
loopne
lods
ljmp
inc
add
add
mov
pusha
pusha
mov
push
insb
fnsave
hlt
sub
in
adc
push
lock
cltd
int
test
xchg
push
jl
sbbl
push
data16
or
xchg
lods
in
pushw
pop
cmpsl
cmc
cld
xor
push
jmp
sbb
loopne
es
sub
into
rclb
loop
xchg
vaddsd
or
inc
pop
dec
cmp
xchg
push
fs
imul
into
cmp
mov
mov
pusha
into
push
mov
sti
test
movsb
std
cli
andl
fisubs
into
add
cmc
sbb
je
inc
loopne
das
push
jo
loope
ret
add
add
pop
js
add
aad
xchg
lret
pop
es
out
jbe
popa
xor
jl
stos
jmp
into
inc
sub
dec
mov
push
daa
pusha
adc
mov
test
mov
xlat
push
push
daa
nop
imul
add
or
push
leave
jge
or
add
or
jg
add
cwtl
inc
xlat
les
jae
mov
adc
fwait
mov
call
xchg
sub
mov
sub
test
dec
mov
iret
push
or
std
lds
icebp
and
xchg
or
test
or
pop
mov
sbb
jb
popa
cwtl
xlat
fnstenv
mov
aad
mov
jecxz
xchg
gs
jb
adc
addr16
add
inc
cmpsl
loop
out
test
jmp
ljmp
mov
mov
dec
push
add
xchg
mov
or
cmpl
repz
jmp
cmpsl
ret
dec
mov
or
test
adc
push
call
push
jecxz
cwtl
cli
push
mov
add
xor
ss
and
test
push
xor
aad
push
mov
xchg
adc
mov
push
jmp
sbb
shlb
sbb
lods
iret
sub
fcomps
fstpl
movsl
sub
cmp
scas
stos
or
add
sbb
pop
in
mov
dec
icebp
pushf
push
rolb
mov
dec
push
xchg
sbb
ja
lods
popa
lret
push
jbe
jecxz
addr16
stos
adc
addr16
sbb
add
mov
repz
cwtl
fistps
outsl
roll
xchg
mov
or
stc
outsl
push
xchg
idiv
and
mov
loope
loope
fidivs
lods
push
inc
insb
dec
lods
call
jg
xchg
push
out
adc
in
xor
addl
fwait
mulb
pop
xor
push
cmpsl
pop
inc
leave
repnz
push
mov
pop
je
inc
leave
xchg
cmpsl
sbb
mov
add
pusha
ss
fisttpl
ss
add
test
insl
outsb
inc
gs
cmc
add
stos
jmp
int3
and
push
mov
stc
pushf
clc
cmp
pusha
pusha
mov
lea
jae
sar
mov
and
pushf
mov
dec
xchg
xor
pop
mov
stc
adc
btr
shl
mov
bt
push
sub
clc
mov
repnz
pusha
jmp
adc
sub
call
pushf
lea
jne
lahf
lea
sar
sub
aaa
clc
sbb
mov
push
clc
add
mov
push
lea
jmp
cmp
pushf
lea
ja
xchg
pusha
jmp
inc
mov
rol
sub
add
movb
clc
sub
setl
jmp
loopne
cmp
lods
out
out
and
jae
add
mov
int
cmp
adc
out
lock
addl
mov
in
inc
mov
gs
mov
and
and
xchg
cmp
lds
and
ret
adc
es
cmp
jg
out
cmp
cmpsb
leave
stc
icebp
mov
clc
inc
cmpsl
push
aam
dec
jl
mov
adc
cmp
jle
mov
fld1
push
mov
ja
xchg
psrlw
enter
cwtl
cli
pop
pop
lcall
icebp
bound
and
gs
jo
push
cmp
pop
mov
jle
popl
sub
push
aaa
dec
inc
mov
je
outsb
shll
shll
cwtl
mov
testb
and
jge
jno
mov
add
scas
cmovnp
jno
cmp
sti
popa
jno
dec
mov
in
push
jne
jecxz
stc
adc
push
sub
into
or
jp
cmp
push
lea
jne
not
bts
movsbl
xor
inc
lea
inc
mov
rcr
clc
neg
add
shr
pushf
mov
xor
mov
cmc
test
call
not
pushf
jmp
jmp
pop
xchg
jns
cwtl
cli
add
cmp
cmpsb
fnstsw
inc
dec
jae
in
cmp
pop
cmpsb
int
outsl
mov
sbb
xchg
dec
js
or
fldl
test
rcrl
pop
xchg
add
cmp
mov
and
cmc
nop
sub
das
mov
out
pop
mov
xchg
cmp
fildll
push
pop
sahf
xchg
movsb
loopne
xchg
into
imul
xchg
into
imul
jp
loopne
jbe
int3
lret
ljmp
add
scas
xlat
out
gs
xor
mov
addr16
jae
dec
jno
jb
sbb
mov
dec
es
scas
out
push
pop
push
cmc
or
pushl
in
out
or
add
imul
or
out
pop
in
xchg
mov
dec
xchg
jle
aas
xchg
adc
fcompl
fmuls
add
adc
sbb
int
fcoms
xchg
mov
mov
loope
lahf
out
fs
sub
mov
pushf
adc
mov
push
xchg
std
jbe
mov
data16
popf
pop
cwtl
dec
je
push
das
insl
inc
mov
mov
mov
push
xor
xchg
mov
stos
adc
pusha
lcall
cli
ds
pop
lret
push
cmp
sti
jno
mov
mov
sahf
add
clc
outsb
jp
cld
rcll
ja
roll
mov
rorl
cld
pop
push
jno
sbb
xchg
std
test
rorb
push
xchg
loope
das
cs
inc
lods
push
insb
and
jb
sbb
add
pushf
push
pushl
pushf
lea
jmp
addr16
cwtl
cli
lret
cmc
push
movaps
jmp
mov
mov
push
cwtl
fstl
cmp
cwtl
mov
les
push
call
sets
popl
fucomp
repz
loope
sub
in
cmp
pusha
xor
fwait
ds
fs
jbe
in
cs
cmp
jnp
jbe
sti
cmp
je
push
in
jb
call
mov
pop
iret
sbb
xchg
int
mov
sbb
fmul
inc
btr
sbb
pop
mov
sti
mov
fcoml
lahf
mov
mov
les
fbstp
lods
sub
mov
ljmp
in
and
mov
xchg
fcom
fincstp
xchg
mov
movsb
and
jmp
mov
jnp
js
jns
push
push
mov
or
cli
into
paddusb
movsl
pusha
or
sahf
subb
ret
iret
inc
mov
sub
mov
movsl
cmp
inc
movsl
arpl
cwtl
movsl
js
sbb
jns
cmpsl
leave
add
mov
jl
and
mov
add
mov
lock
lods
rclb
mov
test
icebp
movd
cwtl
push
adc
jno
scas
jo
lods
cmc
outsl
mov
mov
nop
movsb
in
movsb
mov
cmp
das
cwtl
mov
mov
adc
cmp
lods
jae
lret
mov
wrmsr
xor
pop
push
push
adc
inc
sbb
lods
imul
lock
outsl
xlat
push
dec
xor
int
test
jb
lea
mov
and
hlt
xlat
xor
xlat
mov
cmpb
mov
adc
jp
mov
jge
fbld
pusha
cmpsb
mov
inc
movsl
les
mov
add
adc
in
inc
and
cmp
les
add
in
cmpsl
cmpsb
mov
xchg
jmp
or
mov
mov
insl
mov
cmpsl
cs
adc
lret
lock
mov
xor
ja
mov
fsubl
insl
cwtl
iret
adc
adc
pop
push
mov
pop
enter
mov
xchg
lea
cmpsl
mov
repnz
push
das
cmp
xor
sub
sarb
fdivr
fsubs
and
and
cli
mov
pop
cmp
push
sbb
mov
jne
mov
cmp
jbe
mov
push
mov
in
aam
mov
cmp
mov
or
stos
xlat
add
lock
mov
lret
cmp
pop
sub
mov
sbb
rclb
mov
leave
inc
sarl
leave
sub
fildll
insb
fmul
test
mov
sbb
cmp
int3
and
xchg
loop
repnz
mov
cmp
xlat
repnz
or
ss
and
or
bound
mov
arpl
and
aaa
jbe
cmp
xchg
fwait
mov
mov
jge
and
xchg
add
mov
cmp
cmp
adc
adc
mov
sub
daa
adc
jbe
mov
icebp
mov
daa
mov
pop
adc
stos
push
shrl
loop
cmp
jge
jb
test
shlb
and
mov
push
add
int3
fdivrs
clc
cmp
and
sbb
mov
inc
test
sbb
test
jbe
dec
mov
outsb
mov
std
mov
add
sub
and
mov
adc
sbbl
jb
arpl
fdiv
ds
cmp
xor
and
mov
xchg
lods
cmpsl
popa
imul
xor
pop
cmp
xor
aas
xchg
das
in
not
mov
adc
pop
inc
sbb
jge
or
adc
pop
aas
xchg
cmc
xor
mov
icebp
add
sub
aad
sti
mov
aam
dec
test
push
pop
mov
cmp
inc
and
push
xor
mov
add
das
ja
scas
push
fdivrl
insb
and
xchg
mov
popa
ja
lret
and
shlb
mov
xchg
push
mov
push
cmpb
fstps
imulb
and
mov
fdivrs
mov
lock
push
pop
sarl
push
mov
fildl
cwtl
adc
nop
cwtl
mov
push
lret
pop
daa
in
pop
cmp
outsb
testl
outsb
fisttpll
dec
fsubl
fidivrl
hlt
xor
cmp
fadds
out
cld
pop
jns
das
xor
mov
mov
cmp
xor
pop
pop
cmp
movsl
add
xchg
push
xchg
adc
xchg
dec
testl
push
enter
cmpb
icebp
adcb
lock
aas
sub
jmp
cmp
mov
add
jae
sub
xor
cmp
movsl
dec
and
mov
mov
jle
sahf
idiv
mov
pop
push
and
cmpsb
cld
outsl
repz
inc
fxch
sub
pop
xchg
das
fadds
test
push
aam
mov
or
dec
sub
and
xchg
push
test
subb
test
jg
lea
mov
and
sub
lds
mov
and
das
mov
inc
fsubs
stc
push
cmp
rolb
mov
shl
popf
popf
cmp
jbe
test
mov
mulb
popf
cmp
push
pop
cmpsl
inc
push
adc
cmp
mov
and
mov
mov
mov
mov
mov
fidivrl
lods
cmp
lds
mov
shlb
cmp
mov
and
and
scas
inc
movsl
and
mov
ret
add
pop
mov
in
jns
mov
jge
lret
daa
mov
rcrl
popf
dec
xor
das
dec
adc
pop
sbb
xchg
icebp
in
nop
push
xlat
mov
outsb
lods
aad
xlat
xchg
aam
int
cmp
iret
jne
jecxz
jno
or
repz
popf
cs
bnd
pmaddwd
dec
ds
jns
mov
mov
outsb
mov
jne
in
aad
call
xchg
movsb
icebp
lds
mov
mov
jbe
adc
imul
mov
dec
loope
ljmp
mov
mov
popa
fidivrl
xchg
outsl
xor
stos
mov
std
push
and
sbb
lods
int
xchg
mov
push
ss
fmul
outsl
mov
mov
cmp
stos
dec
xchg
nop
sub
mov
push
mov
xchg
jb
outsb
rcll
cs
jno
xchg
clc
rol
sbb
push
xor
mov
mov
cmpsb
xchg
out
es
call
fstp
fnstcw
cmp
push
cmpsb
out
fstl
mov
mov
xchg
adc
lds
mov
dec
xor
mov
dec
cmpsl
pop
in
jl
xor
es
loopne
ret
mull
loopne
lret
pop
fs
mov
int3
jns
jge
fadds
push
sub
xchg
cmp
into
clc
mov
and
push
inc
dec
imul
ret
mov
jge
es
mov
les
movsb
xor
add
lods
iret
sub
pop
xor
inc
ret
es
sub
sbb
stc
fsts
test
gs
add
cmp
xchg
cmpsl
icebp
cmc
stos
aaa
xor
cmp
push
xchg
repz
enter
jno
mov
mov
mov
js
mov
aad
int
shlb
shlb
stos
sti
lock
xor
movsb
testl
out
pop
loope
cmp
push
out
mov
out
int3
adc
cmp
stc
fwait
mov
jb
cmp
mov
cmp
xor
enter
mov
out
or
stos
imul
adc
mov
cmp
repz
fistpl
inc
gs
test
lar
loope
stc
mov
fbstp
loopne
andl
je
sub
sbb
pop
mov
clc
sbb
loop
dec
jns
mov
jno
push
fsubr
lods
mov
mov
or
jnp
scas
mov
sarb
adc
subb
jl
mov
stos
out
mov
dec
aad
xchg
inc
fdivrs
cmp
inc
adc
scas
fstpt
arpl
movsl
subl
daa
mov
jmp
xchg
mov
inc
adc
adc
aaa
push
xchg
lahf
fadds
popf
cs
pusha
mov
and
shr
cld
sar
adc
mov
in
in
inc
pop
jp
sbb
das
inc
pop
fwait
mov
jecxz
pushl
sbb
adc
dec
pushf
add
jb
add
fs
cmp
mov
cld
std
push
mov
mov
dec
inc
cmp
cmp
jl
xor
pop
mov
pop
push
pusha
add
int3
loop
cmpsl
das
cmp
ja
cmp
mov
pop
and
mov
and
bound
sbb
mov
mov
sbb
push
and
dec
xchg
mov
out
cmp
movsl
pop
test
mov
and
mov
fsubr
stos
sub
cld
jnp
mov
cmp
pushl
mov
fimuls
js
jl
jle
lcall
cmp
adc
sub
ss
insl
cwtl
aas
in
xor
cmp
push
mov
js
dec
mov
mov
ret
stos
iret
mov
add
cmp
js
pop
inc
fcomps
mov
aaa
mov
sti
out
mov
fnsave
inc
mov
cmp
dec
shrb
mov
scas
test
pop
je
jmp
idiv
jle
cs
cmp
mov
sub
mov
lret
add
in
je,pt
dec
sub
mov
clc
in
jns
and
jg
cmp
mov
mov
mov
fisubl
stos
js
adc
fdivrs
mov
sti
jl
mov
mov
dec
mov
movsb
cmp
sub
xor
outsb
mov
inc
mov
je
cmp
movsb
mov
mov
stos
gs
jo
out
mov
add
addb
es
mov
test
cltd
frstor
mov
push
mov
cmp
mov
in
xlat
and
stc
idivl
shr
test
push
out
sub
ror
cltd
xchg
jle
and
dec
mov
roll
call
cmp
mov
xchg
xlat
arpl
cmp
cli
and
fldenv
cmp
mov
sarb
sti
cwtl
inc
inc
mov
cmp
sar
mov
cmp
mov
sarb
sti
cltd
inc
cmp
enter
cmp
sar
mov
icebp
cmp
rcrb
sti
jp
mov
mov
inc
aaa
or
shlb
cmp
cmp
shlb
mov
xor
shlb
cmp
enter
cmp
shrb
pushf
sti
scas
inc
mov
lods
cmp
shrb
cmp
stos
cmp
shrb
popf
sti
stos
inc
mov
test
leave
push
sti
test
ds
pop
stc
cmpsl
cmp
shlb
sahf
sbb
leave
es
add
test
inc
movsl
push
es
data16
mov
mov
cltd
pop
mov
js
pop
mov
sbb
lcall
add
inc
push
mov
js
movsl
rolb
es
cmpsl
lods
fistpl
cmp
sbb
fidivrl
cmp
std
jge
jnp
jns
mov
ds
fcoml
cmp
movsb
mov
in
add
mov
test
cli
sbb
xlat
pop
jnp
mov
add
push
lahf
neg
cli
ret
sbb
dec
movsb
idivl
mov
push
sbb
idivl
sbb
push
mov
pop
sbb
sub
js
mov
cwtl
cmpsl
mov
sbb
call
fcmovnu
xor
jge
sbb
cmp
jns
mov
mov
xor
aas
pushf
dec
and
cmp
mov
sbb
jmp
stc
cmpsl
mov
std
sbb
sbb
fdivrs
jp
clc
xor
mov
cli
and
mov
sub
stc
jmp
imul
push
shl
lock
xor
popf
lahf
fidivl
sub
call
mov
sti
jae
fdiv
push
sbb
mov
pop
dec
cmp
sti
mov
negl
jl
mov
pushf
push
mov
mov
mov
mov
imul
mov
sahf
leave
pop
cmc
std
mov
cld
stos
in
mov
cmpsl
in
aaa
sbb
cmpsb
aas
movsb
jge
test
into
idivl
cltd
mov
fidivrl
sbb
out
frstor
push
call
idivl
cmpsl
mov
inc
pop
aas
popf
mov
pushf
not
jge
mov
mov
divl
mov
pop
mov
loope
imull
aas
cmp
int3
idiv
sbb
jg
lahf
or
daa
cmp
negl
cmp
cmpsl
js
mov
and
add
fstps
inc
cmpsl
xchg
movsb
jo
pop
mov
test
xor
pop
fcmovnu
movsl
andb
aam
test
loopne,pt
jge
sub
fcmovnb
sbb
add
mov
add
mull
mov
and
negl
cmpl
pop
ret
dec
mov
dec
imull
sahf
cmp
and
jo
cmp
jns
add
shl
movsl
jns
xor
dec
test
cmpsl
leave
mov
sub
flds
ret
push
loop
mov
ficompl
sbb
jo
and
pop
divl
cmpsl
cmp
neg
arpl
pop
faddl
mov
ret
and
test
cmp
fisubl
pop
arpl
mov
cmpsl
push
xor
ds
imul
test
fs
cmp
clc
cmp
in
inc
cmp
idiv
and
pop
fwait
idivl
push
divl
sbb
leave
mov
pop
push
fsubs
sbb
aas
jl
idiv
cmpsw
jns
xchg
cmpsb
xor
mull
inc
out
pushf
in
and
fistpl
bound
testb
daa
cli
call
jns
inc
cmpsl
mov
testl
pop
fistpl
mov
sbb
or
idiv
mov
mov
cmp
mov
mov
cmpsl
in
mov
sub
mov
pop
leave
sahf
in
jp,pt
fdivr
cld
mov
test
lret
js
idiv
leave
imul
sub
pop
idivl
jno
inc
clc
mov
mov
mov
xchg
and
ror
dec
cmp
stc
or
and
pop
jle
push
push
cmc
cmp
sbb
dec
cld
jns
popf
in
fstpl
pushf
xor
scas
cmpb
or
mov
das
cld
mov
mov
cmpsl
sbb
or
js
outsl
idiv
sbb
dec
aas
cli
sub
subb
mov
stos
cmpl
test
jmp
mov
pop
daa
negl
sub
call
dec
cmpsb
mov
mov
lods
sbb
pop
cmp
mov
enter
pushf
xchg
jge
sti
fucomi
cmpsl
js
jl
pop
dec
testl
sahf
mov
xlat
clc
fldt
lea
pop
cmp
sub
cli
pop
addr16
cmp
xchg
pop
fwait
xchg
fidivl
aas
cmp
mov
cmp
xor
aas
jge
mov
scas
push
fcomps
aad
jp
xor
imull
mov
mov
cli
fwait
sbb
cmp
pminsw
fnstcw
mov
jle
clc
dec
cmpsl
cmp
negl
jp
pushf
outsl
push
mov
mov
mov
lret
jns
sahf
popa
idivl
cmpsl
adc
mov
mov
jo
mov
imull
mov
shrb
movsb
lock
divl
jp
push
imull
repz
jno
cmp
popa
jns
mov
pop
mull
sbb
dec
jns
popf
adc
mov
gs
cmp
in
pushf
pop
leave
jl
jge
sahf
jb
sub
cld
cld
mov
mov
dec
add
rcr
mov
cmp
sbb
fwait
das
fcmove
jle
mov
sahf
popf
sti
cld
and
std
lahf
repnz
mov
sbb
and
mov
sbb
mov
ficoml
sbb
ljmp
stc
cli
js
mov
mov
shll
mov
fwait
clc
dec
adc
aas
mov
xor
push
cld
cmp
divl
js
xor
lret
pop
mull
xor
pop
adc
bound
loop
clc
push
cmpsl
jne
rclb
pop
fdivl
cld
fstpt
pop
mov
jo
mov
jle
cmc
cmpsb
aad
clc
push
cmpsl
cmp
and
sahf
lret
push
cmpsl
loope
cld
sub
pop
pop
test
repz
sbb
sbb
sbb
mov
cmp
mov
cld
mulb
sbb
sbb
mov
cmp
push
pop
leave
pop
mov
inc
cld
pop
sub
aaa
cmpsl
pop
std
push
cwtl
xor
hlt
mov
fstpt
negl
enter
fcmovb
pop
mov
dec
aas
idivl
stc
fstps
call
fcmovu
cmp
mull
movsb
js
mov
fnstcw
cmp
push
mov
push
sbb
cli
negl
cmp
mov
ficompl
pop
cltd
cmp
sbb
pop
lret
fdiv
push
stc
mov
sbb
cmp
imul
fstpl
loope
jns
jl
jge
jo
jp
aam
cmp
mov
mov
sub
divl
cli
sbb
leave
mov
mov
mov
and
pop
jnp
cmp
jle
lods
fwait
xchg
mov
mov
fisttpll
movsb
repz
imull
fstpt
loope
divl
test
add
repz
mov
cld
mull
fdivrl
mov
cmp
jg
sbb
mov
mov
in
aaa
cli
enter
sbb
aad
cmp
mov
pop
pop
cmp
jge
popf
mov
fisttpl
mov
sbb
neg
cli
sbb
ds
lahf
negl
sarb
clc
sub
stos
sbb
ds
rcrb
jle
pop
sub
or
not
sahf
popa
cmp
mov
inc
fisubs
cmp
testl
pop
mov
mov
pop
pop
mov
neg
lahf
cmp
and
std
enter
loope
mov
clc
xor
lds
loop
fdivrl
sub
mov
sbb
dec
in
cld
cmp
in
cmp
sbb
cmpsb
inc
sub
shll
xlat
idivl
cltd
jle
cmpsl
cmp
clc
cmp
cmpsb
dec
or
mov
iret
sbb
pop
pop
popf
cmp
pop
mov
xlat
dec
pop
jecxz
leave
mov
pop
or
add
and
loopne
cmpsb
add
pop
sbb
ljmp
cli
cltd
mov
adc
rcrb
mov
sahf
cmp
lods
mov
cltd
pushf
pop
sahf
push
cmpsb
popa
and
sbb
jns
jle
fstpl
mov
imul
fwait
loop
sub
aas
addr16
out
or
push
sub
sub
xchg
clc
popa
push
xor
mov
sbb
addr16
jmp
jge
dec
mov
cwtl
ficoml
cmp
cmp
mov
sbb
cld
pop
mov
xor
fstps
sbb
cmp
clc
pop
mull
cmp
outsl
mov
std
mov
je
sbb
mov
or
jns
cmp
mov
dec
mov
or
cmp
cmp
sub
pop
mov
cmc
xor
mov
popf
fnstcw
js
js
cmp
adc
mov
aam
sub
cli
pop
cmp
cmpsl
mov
mov
mov
std
fstps
ds
mov
pop
pop
aam
dec
insb
fsts
es
xor
shrb
js
mov
jmp
push
mov
inc
shlb
mov
xor
pushf
cmp
loope
mov
js
mov
popf
xor
negl
es
sbb
and
sub
test
ljmp
push
shlb
mov
inc
jbe
std
loop
daa
jns
rcrb
mov
cld
mov
idivl
pushf
sub
js
sbb
cmp
mov
pop
mov
out
mov
dec
outsb
mov
jo
cwtl
fistpl
in
stos
in
std
mov
mov
mov
jns
cmp
mov
stc
sbb
ss
fstpt
lahf
popf
ret
add
arpl
mull
stos
gs
aas
out
cli
addr16
idivl
imul
and
push
test
mov
jbe
jmp
jnp
mov
jnp
mov
mov
loope
and
and
inc
lcall
mov
scas
cmp
and
dec
sub
mov
sub
mov
filds
dec
scas
sub
clc
sbb
jge
loop
jns
mov
adc
sub
sub
mov
push
cmp
sbb
fnstcw
mov
stc
mov
stos
pop
mov
and
mov
stos
pop
sbb
pop
jmp
xor
idivb
cmp
inc
mov
mov
roll
scas
cmp
cmp
cmp
jmp
pusha
aaa
subb
pop
jb
and
insb
mov
les
fsubrs
int
and
inc
cltd
jae
jbe
cmp
pop
fistpl
jmp
jnp
mov
fwait
aaa
stc
rcrl
lcall
enter
data16
scas
pop
push
movsl
aaa
cmp
test
pop
add
ss
dec
stos
mov
mov
imul
xor
xor
js
sub
fdivs
pop
loope
ret
mov
cwtl
stos
js
cmp
fcomi
stos
icebp
and
inc
aaa
sbb
and
stos
mov
mov
in
mov
stc
sbb
pop
ss
jl
cmp
clc
loope
cltd
cmp
pop
insb
stos
mov
and
data16
sub
mov
jno
repnz
mov
out
sahf
xlat
mov
pop
mov
shl
movsl
and
sbb
sbb
xor
cmp
clc
or
rol
frstor
mov
xor
repz
test
lods
cmp
fldt
std
jge
es
sbb
iret
cmp
sub
das
cmp
clc
pop
pop
xor
cmp
sub
cmp
cmp
cld
jge
cmp
cmp
stc
jb
not
jg
jl
sbb
fcmovu
data16
inc
test
cmpsb
inc
pusha
mov
outsb
js
cmpsl
and
mov
mov
sbb
pushf
mov
ds
cmp
lcall
mov
cmp
jge
jl
call
ret
mov
pop
stos
cmp
ja
sub
stos
das
mov
inc
fdiv
stos
mov
adc
insl
push
pop
mov
cmp
aaa
jmp
lea
xor
mov
sub
cmp
cmp
cmpsl
mov
sbb
pop
arpl
es
mov
icebp
out
test
cmc
lock
xor
or
mov
cmp
mov
jae
repz
and
dec
in
and
dec
test
cmp
fwait
sbb
inc
add
cmp
push
jp
out
xor
mov
repz
cld
mov
and
scas
xor
xor
cmp
cmp
lahf
jp
fisubl
pop
mov
jle
pop
cmp
mov
cmp
cmp
mov
icebp
and
push
std
jmp
sub
clc
sub
sub
mov
lods
sub
sbb
mov
mov
pop
jb
xchg
xor
jp
clc
clc
cmp
fisttpl
lods
xor
adc
cmp
mov
mov
outsb
out
jle
cmpsb
and
and
loop
jmp
negl
cld
data16
jl
ljmp
xor
cltd
sub
pop
xor
pop
adc
cmp
inc
fcomps
repnz
sbb
divl
mov
mov
sar
jle
adc
mov
idivl
jmp
and
out
mov
sbb
stos
cwtl
mov
cmp
xor
sarb
es
inc
repnz
in
cmp
lahf
gs
add
mov
sub
lcall
inc
aas
shl
sbb
xlat
enter
pop
mov
in
sub
repnz
cmpsb
sub
sarb
xor
sub
idivb
cmp
fldcw
mov
jle
stos
and
mov
mov
mov
stos
jno
push
mov
push
fucomi
js
ret
jmp
out
insb
std
test
mov
lret
ss
mov
mov
test
inc
popf
in
shl
loope
xor
jmpw
mov
pop
sbb
cli
mov
and
mov
jo
lods
ffreep
cmp
sbb
and
mov
mov
mov
cmp
mov
cmp
and
sub
push
movsl
ljmp
sub
div
aam
pop
sub
mov
hlt
inc
jns
shrl
and
cmp
js
xchg
jg
enter
enter
stos
mov
insb
lods
jmp
jle
cmp
pop
cmpsl
lret
pop
cmp
clc
inc
movsb
icebp
cmpsl
and
mov
shrl
ret
jl
lods
insl
mov
loop
cmp
sbb
test
ss
aas
jno
jnp
stc
push
sbb
jp
xor
mov
sub
inc
outsb
shr
loopne
fnstsw
push
cmp
sub
ret
cmp
sub
sarl
pushf
fcomps
pop
stos
negb
cli
clc
aas
cmp
sub
ljmp
cmp
pop
loopne
les
cmpsl
ljmp
jecxz
fsubrs
lods
cmp
sub
clc
xlat
pop
jb
std
mov
mov
cmp
repnz
lcall
arpl
stos
add
lret
mov
cmp
cmpsb
lods
clc
in
sahf
cld
fdivrs
dec
addr16
jmp
mov
pushf
fnstcw
mov
jb
out
cmp
jbe
push
stos
add
cmp
inc
jns
mov
add
scas
insl
jns
pop
inc
cmp
ret
stos
cmp
ds
mov
cmpsl
sub
repnz
cmp
stos
in
insb
dec
inc
out
stos
std
mov
lods
cmp
in
cwtl
faddl
jmp
sub
popf
sub
jns
and
lret
mov
mov
and
sub
out
mov
das
sbb
adc
fisubl
cmp
cli
cmp
sbb
cmp
mov
aaa
pop
and
pop
push
or
cmp
das
jbe
fisttpl
and
add
sub
dec
mov
sbb
lcall
loope
jmp
out
loop
mov
in
dec
jmp
fninit
aas
out
sub
jmp
sbb
lcall
mov
test
jmp
out
call
stc
testl
mov
pop
jns
push
imul
sub
es
mov
out
insb
pop
mov
mov
je
ret
cmp
lods
out
cli
lods
and
or
fcmove
loop
fwait
mov
sub
fldcw
outsl
cmp
jp,pt
loop
mov
xor
and
in
mov
pop
and
mov
cmpsl
jo
pop
add
pop
sub
jmp
in
mov
inc
repz
jl
sub
gs
pushf
mov
call
dec
mov
mov
stc
mov
mov
cmp
cmp
jns
and
rcrl
add
sbb
shr
mov
sbb
cmp
fildll
fstpt
mov
cmpl
aad
cmp
jecxz
clc
in
sub
lahf
inc
repnz
sub
mov
cmp
jno
inc
cmp
and
scas
ss
in
js
mov
test
shlb
in
jl
insl
lahf
sbbl
loope
xor
add
std
insl
jnp
pop
addr16
out
cmp
sbb
add
sbb
mov
lret
test
rcrb
and
jne
in
fdivs
add
xlat
mov
out
sub
sbb
in
std
dec
sti
mov
outsb
sub
dec
xor
sub
cld
mov
pop
mov
push
inc
hlt
jmp
ljmp
insl
mov
stos
sub
mov
pop
pop
cli
dec
mov
mov
les
and
xor
js
mov
add
pop
sbb
clc
ss
jl
pop
mov
js
std
clc
and
sub
pop
push
out
sbb
mov
stos
loopne
pushf
dec
jp
daa
je
pop
mov
or
mov
and
push
jge
movl
cmp
js
and
out
cs
mov
in
out
test
fdiv
mov
stos
subb
mov
mov
scas
inc
mov
jae
jnp
pop
cmp
mov
sub
rorl
shrb
mov
imul
std
mov
jmp
in
mov
loopne
out
mov
pusha
cld
jo
mov
movsb
cmpl
into
cmc
mov
fdivs
iret
out
lahf
bound
sub
mov
mov
popf
pop
movaps
cmp
jle
mov
inc
das
mov
add
fsubs
and
sbb
je
dec
call
sbb
push
mov
and
js
sbb
shrl
sub
jo
xor
fsubrs
mov
fnstcw
js
stc
sub
xlat
sbb
xor
popa
cmp
fs
test
out
mov
pop
out
pop
mov
sub
test
mull
insl
fldenv
ds
movsl
scas
out
clc
imul
ljmp
fmul
movsb
daa
cld
pop
pop
sub
scas
push
fisubrl
sub
mov
stos
fwait
sbb
jb
push
fildll
pop
jmp
and
jp
loope
dec
scas
int
mov
pop
sbb
mov
and
sub
mov
push
mov
cmp
std
sub
jns
adc
push
xor
dec
jp
pusha
cmp
sub
insb
xor
inc
clc
das
lahf
mov
ja
imul
das
mov
jp
sub
shlb
pop
mov
test
cli
lea
pop
mov
aad
movsb
cmp
cmpsb
test
fldt
mov
std
ljmp
repz
pushf
and
mov
jmp
cwtl
dec
in
repz
xor
enter
xchg
mov
clc
idiv
fdivrs
mov
enter
in
cmpsl
mov
and
xor
repz
or
xchg
shlb
sub
sub
jmp
mov
mov
in
fildl
jp
sub
cmp
stc
jecxz
add
sub
insl
inc
out
sub
mov
push
fcmovu
jge
ds
fbstp
movl
jae
imulb
movsl
mov
xor
cmp
out
cmp
mov
and
push
insb
mov
gs
out
enter
sbb
addr16
jl
jl
shlb
jp
out
sbb
inc
js
sbb
cmp
loope
cmp
pop
adc
and
ret
mov
enter
iret
and
das
in
pop
fsubs
hlt
call
jge
and
mov
mov
push
pop
std
dec
inc
cmpsl
sar
sbb
jmp
pop
lds
mov
in
roll
std
mov
ret
cli
jg
clc
jb
pushf
enter
cmp
xchg
clc
mov
jmp
cmp
mov
imul
sub
pushf
scas
adc
outsl
cs
jns
sub
sarl
js
cmp
jno
inc
daa
dec
int3
enter
int3
cmpsb
fsubrs
les
aas
sbb
sbb
xor
icebp
and
stc
lods
jp
scas
inc
mov
out
jl
sub
xlat
insb
mov
pop
mov
cmpsb
sub
push
movsb
iret
ds
popf
cli
mov
mov
pop
mov
in
jp
loop
pop
cmp
mov
sbb
stc
hlt
and
fildll
pop
xchg
ja
xor
outsl
out
stos
lods
aad
and
xor
out
sub
sbb
pop
push
insb
mov
ss
fdivrl
mov
pop
in
jns
dec
lods
inc
cmpsb
mov
sub
stos
into
mov
loope
and
mov
insl
inc
sbb
outsl
pop
cmpsb
mov
clc
xor
jmp
pop
dec
mov
jp
push
jmp
and
popf
and
mov
push
insb
adc
and
pop
stc
sub
cmpsb
lock
and
mov
cld
out
cmp
das
stos
out
dec
leave
repnz
jge
sub
cmp
adc
cmp
cli
outsb
cs
mov
pop
dec
xor
lods
mov
inc
movsl
push
pop
lds
inc
sub
idiv
repz
movsl
jne
add
call
pop
mov
adc
stc
xor
mov
cmp
xor
icebp
inc
cmp
fdivs
js
sbb
popa
js
jbe
mov
shr
popa
cmp
sub
jne
jne
popf
test
es
sarb
insb
cmp
jb
pop
push
and
mov
pop
stc
in
data16
pop
aas
jns
dec
push
jecxz
inc
js
cmp
sbbl
bound
mov
cmp
and
rcrb
std
addr16
jecxz
sti
enter
and
in
int3
imul
pop
jns
ljmp
cmp
cmp
cmp
jae
and
popa
mov
cld
cmp
scas
popf
cmp
push
popa
movsb
jns
pusha
dec
mov
sarb
mov
out
mov
fdivs
mov
cmp
inc
and
and
ljmp
ljmp
cwtl
jle
call
mov
je
dec
lcall
stos
push
jne
adcl
xor
mov
out
cmpsl
mov
jnp
icebp
add
in
ljmp
lea
inc
sbb
imull
out
cld
sbb
mov
test
dec
sbb
cmp
and
and
sbb
cmp
mov
xorl
mov
mov
mov
das
sub
sub
mov
pop
jne
fstpt
arpl
scas
push
sar
rcr
ret
in
sub
sbb
xor
stos
fsubrs
push
mov
js
add
cmp
jl
sarl
lock
xlat
sub
jge
test
sub
inc
jne
sub
cmpsb
cmpsb
loop
movsb
pop
mov
jge
jns
test
jnp
jae
mov
les
das
js
cmc
ficompl
cmp
mov
pop
mov
js
rclb
mov
in
fwait
js
mov
and
mov
lods
pop
fstpt
cmp
hlt
popf
push
cmp
in
cmp
fisubrl
jbe
js
lcall
mov
aad
mov
std
mov
outsb
mov
js
fadds
cmp
pop
push
dec
dec
cmp
sbb
adc
mov
mov
mov
sbb
int3
sub
js
mov
pop
je
add
or
fldz
js
pop
mov
out
movsb
mov
pop
in
mov
cmp
loopne
cmp
stc
insl
cli
lods
pop
add
fs
lcall
js
sbb
repz
pushf
pop
xor
sahf
cmp
loop
loopne
mov
shl
dec
pop
addr16
fistpl
cltd
pop
jns
bound
jo
dec
cmp
sub
ss
sbb
pop
pop
cmp
std
inc
sbb
pop
xchg
pop
mov
icebp
pop
mov
stos
stos
dec
ret
std
sbb
movsl
adcb
jp,pt
or
ja
mov
aaa
cld
nop
pop
pop
pop
mov
pop
std
pop
ljmp
js
cmpb
stos
test
pop
jnp
fisubl
sbb
mov
xor
mov
cmp
js
xlat
pop
push
cmp
popa
pop
fnstcw
jbe
sbb
mov
pop
mov
add
jle
mov
mov
fldt
pop
fldcw
scas
inc
cmpb
mov
xor
pop
fisubl
bound
popf
cmpl
outsl
inc
cmp
loope
pop
pop
out
cmpsb
xor
js
stos
pop
sbb
mov
cmp
dec
cmpsl
cmp
sti
addr16
sahf
adc
js
insl
cmp
sub
test
sub
int
cwtl
js
fiaddl
cmp
pop
mov
pushf
imul
js
cmp
test
js
fisttpl
mov
sbb
mov
in
js
pop
cli
sarb
jle
cmp
js
stos
sbbl
sahf
in
lods
jge
sbb
cmc
xchg
test
js
mov
xchg
pop
pushf
mov
mov
and
inc
cmp
and
out
cmp
inc
jle
jg
xor
js
fstps
push
in
js
loope
pop
push
cmp
sbb
fstpt
sti
fnsave
pop
sarl
lea
lcall
mov
stc
pop
test
cwtl
js
sbb
cltd
js
fstps
pop
dec
jecxz
idivl
sbb
pop
fcmovu
pushf
sub
repz
daa
add
lods
pop
mov
push
mov
pop
push
fstpt
xor
fdivrl
pop
dec
addr16
into
es
sub
cmp
mov
jge
pop
push
mov
fsubrs
mov
pop
ds
jle
push
jle
das
popf
jb
pop
mov
sub
bnd
mov
into
es
test
js
sti
xlat
fnstcw
pop
mov
lret
js
jmp
mov
jns
cmp
inc
in
cmp
test
dec
test
js
cmp
fwait
cltd
jmp
test
js
jp
or
mov
mul
pop
cmp
fstpl
js
dec
movsb
js,pt
xlat
fmull
mov
cli
arpl
xor
popa
jo
mov
cld
pushf
mov
mov
call
fstpt
cmp
lahf
cmp
pop
and
enter
adc
jle
mov
cmp
fildll
sti
mov
cmp
sbbb
in
cltd
js
pop
xor
lods
sub
pop
pushf
sub
sub
mov
sbb
sbb
subb
les
sub
sub
cmp
adc
xor
jp
dec
lock
mov
aaa
std
mov
cs
cmp
stc
inc
int3
mov
mov
sub
mov
frstor
jns
into
ja
mov
jecxz
imul
jge
mov
in
inc
cs
cwtl
pop
in
cltd
in
inc
pop
inc
in
lods
jle
sbb
jp
sti
outsl
sbb
jmp
bnd
pop
sub
and
mov
mov
in
cli
inc
stc
aad
in
pushl
cmp
jp
sub
or
jge
sub
movsb
add
outsl
dec
std
cld
shl
xacquire
pop
imul
xor
enter
fdivrs
in
sti
xor
add
or
loope
jl
mov
in
cmp
sarl
mov
jge
mov
out
xor
sti
xor
jge
mov
jg
pop
mov
outsl
ljmp
mov
sbb
pop
repz
mov
cmp
mov
stos
xlat
fwait
jmp
stc
cs
sub
dec
cmp
js
mov
sbb
icebp
sub
js
sbb
cmpsl
or
loope
fsubrl
pop
cli
imul
fdivl
cs
sub
add
in
sub
cmpsl
rcrb
fstpt
lcall
xor
imul
jle,pn
and
sub
icebp
aaa
lcall
std
cmp
insl
rolb
jle
pop
not
and
jp
mov
mov
gs
cmpl
sub
mov
test
mov
adc
sub
cs
pop
dec
dec
out
out
mov
mov
cmpsb
imull
dec
fdiv
cmp
jecxz
test
mov
mov
jnp
iret
jb
sbb
jge
jl
data16
xor
mov
sbbl
in
call
cmp
arpl
test
fldcw
inc
stos
cmp
fadds
sti
push
push
test
dec
mov
mov
xchg
scas
lea
mov
in
faddl
push
mov
push
push
xchg
sti
fadds
inc
add
enter
cmp
shl
movsb
sti
add
fsubs
es
and
enter
cmp
and
add
fsub
inc
inc
sahf
dec
lock
sarb
dec
xlat
test
mov
je
jb
repz
ficoms
nop
mov
pop
jmp
inc
cmp
cmp
xlat
cld
int
shrb
push
ja
mov
mov
decl
in
aam
cs
mov
cmpsb
and
cmp
dec
repnz
lea
stc
mov
xchg
cs
insb
rorl
jo
xor
jo
cmpsl
pop
mov
xchg
mov
mov
add
pop
inc
idivl
cmp
fbld
cmp
inc
loopne
sarb
lret
pop
sti
movsb
cmp
pop
dec
and
jle
add
mov
sbb
cltd
repnz
mov
lret
sub
push
mov
mov
leave
mov
mov
mov
mov
mov
mov
mov
scas
scas
enter
cmp
shrb
cmpsl
cmpsb
enter
cmp
shlb
mov
leave
and
rolb
enter
popf
aad
mov
sub
fwait
mov
mov
xor
cmp
shrb
and
enter
cmp
sarb
cmp
inc
xor
enter
cmp
shrb
test
sub
xlat
movsl
mov
shlb
inc
sti
pusha
inc
andb
add
add
and
inc
inc
popa
or
loope
add
and
inc
inc
bound
pop
loop
lds
in
push
in
inc
jne
ret
adc
fidivs
lret
fadd
stc
in
push
shlb
inc
sti
inc
xchg
cmp
arpl
lcall
daa
or
sti
stc
cmp
cmpsb
or
sti
lcall
daa
or
negl
fdivrs
ds
inc
movsl
loope
ret
movsb
and
in
sbb
fs
jns
pop
mov
jnp
fisubs
fwait
sbb
xor
daa
ds
push
cmc
std
jg
fstpl
scas
add
xor
lea
or
dec
pop
or
imul
mov
mov
test
fidivrs
mov
xor
in
ficomps
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
pushf
insb
sarb
xor
loop
sbb
leave
mov
in
fisubs
cmp
imul
popa
in
fisubs
cmp
imul
and
fiadds
jbe
cmp
cmpsl
or
jno
mov
and
dec
cmp
mov
xchg
dec
pop
fchs
andb
gs
lret
inc
loope
daa
add
add
sbbb
cs
jp
sarl
int
jl
sarl
mov
scas
push
movsb
adc
rcrb
cmp
push
incb
leave
xor
test
inc
out
popf
dec
mov
add
cmp
repz
out
repz
mov
movsl
fldcw
cmp
movsb
movsl
enter
popf
inc
shrb
inc
mov
lods
push
adc
dec
sahf
repnz
lds
xchg
sbb
mov
mov
push
leave
mov
aaa
inc
xor
enter
cmp
rcl
stos
sti
mov
cmpsl
xchg
enter
cmp
rclb
sti
ss
stc
push
cmp
shl
cmp
aad
aaa
sbb
xchg
stc
mov
jne
mov
inc
xor
mov
leave
aam
xor
sti
mov
cmpsl
xchg
enter
cmp
rclb
xor
mov
repz
rcl
xor
fnstenv
sub
cmp
shlb
xor
and
cmp
repnz
cmp
inc
ss
sti
xchg
inc
xor
stos
stc
push
cmp
shlb
es
adc
icebp
enter
cmp
shlb
cmp
aaa
pushf
push
stc
mov
xor
xor
adc
lods
inc
lock
enter
cmp
shlb
nop
sti
rolb
enter
cmp
sarb
adc
scas
jmp
mov
jl
iret
and
stc
cmp
shrb
sti
dec
inc
stos
das
enter
cmp
shr
and
scas
enter
sti
mov
cmp
mov
dec
sti
scas
inc
lods
enter
cmp
sub
int
enter
fcoml
adc
pop
out
adc
jae
push
jg
mov
stc
or
aaa
mov
sub
pop
repz
mov
jno
ja
jecxz
mov
fistpll
iret
adc
dec
fsubs
jo
icebp
icebp
lods
je
int
mov
iret
cmp
jge
mov
cs
in
xlat
sub
or
xor
adc
incb
cs
mov
aaa
mov
outsl
out
adc
cmp
xor
mov
in
xchg
testb
mov
and
pop
jb
cltd
outsb
iret
mov
int
sub
notl
pop
in
aam
icebp
stc
jns
inc
adc
push
in
xchg
outsb
mov
mov
mov
addr16
and
aaa
add
and
ja
cli
and
and
les
cmp
adc
movsb
mov
dec
clc
fsubs
cmp
xlat
pusha
cmp
repnz
cmp
mov
imul
pop
stos
cmpsb
jl
mov
mov
pop
cs
jb
mov
and
mov
mov
xchg
cmp
mov
xsaveopt
cmp
decl
incb
jg
das
imul
mov
movsl
sub
sub
repnz
cvttps2pi
out
cmp
daa
sub
cmp
adc
insl
decl
jge
cmp
in
mov
sarb
mov
mov
mov
push
scas
mov
das
bound
sub
ss
jne
xor
mov
cmpsl
sarl
xor
cmp
jl
andl
mov
das
fsub
aam
lahf
mov
jmp
and
fsubrl
ret
dec
int
std
cmpb
bound
mov
fistpll
repnz
std
sub
stc
cmp
push
fsubrl
cmpsb
aam
mov
sub
daa
dec
jo
mov
mov
sbb
loope
scas
sbb
sbb
shrb
bound
jl
mov
in
cmp
push
sub
sub
dec
in
lret
fmul
stc
hlt
pop
mov
mov
pop
mov
mov
int3
hlt
mov
lods
cli
dec
nop
mov
out
cmp
xor
pop
jge
cmp
jmp
or
cmp
sub
xchg
sub
mov
lods
jl
cmp
nop
jnp
push
das
push
bound
jg
fistpll
mov
inc
outsl
pop
jb
scas
je
mov
clc
push
jo
loope
mov
out
mov
inc
clc
sub
mov
pop
bound
fnstsw
aas
lock
aaa
dec
add
mov
nop
mov
xor
popa
mov
sbb
aaa
into
fdivrl
xor
mov
not
push
pop
jecxz
push
push
push
movsbl
cmp
push
xchg
mov
and
mov
push
loopne
mov
leave
insl
sub
into
sub
xchg
dec
cmp
out
loopne
stos
je
test
sub
fstpt
cwtl
out
mov
mov
cmp
cmp
pop
jb
into
test
xor
in
les
out
rcll
rorb
roll
repz
xchg
loopne
out
loop
testl
shll
xor
add
mov
insb
jno
nop
mov
arpl
out
lea
adc
mov
sarb
inc
fdivs
insl
cmp
xchg
inc
push
cwtl
inc
inc
mov
in
out
pop
outsl
xchg
push
aaa
icebp
test
mov
dec
mov
je
cmp
and
add
dec
rcll
mov
cmp
insb
cmp
outsb
mov
das
fcomi
push
mov
iret
pop
and
daa
mov
inc
add
enter
cmp
shlb
test
and
mov
mov
mov
mov
enter
sti
push
adc
movsb
jo
mov
mov
push
sub
je
mov
out
stc
mov
ss
shll
adc
leave
mov
push
push
lods
mov
movsb
das
sub
popf
pusha
mov
fcoms
inc
scas
lahf
jp
inc
mov
rolb
mov
mov
mov
cmp
adc
add
test
enter
and
stos
mov
mov
mov
fisubl
cmpsb
bound
lret
fldcw
mov
movsl
xchg
jmp
xchg
ds
mov
mov
fidivrl
stc
inc
mov
jns
mov
shlb
mov
movsb
add
jns
mov
mov
mov
mov
testl
sti
mov
movsl
mov
mov
mov
fisubl
mov
imull
mov
xor
xor
mov
jo
nop
mov
outsb
sbb
out
xor
xchg
xchg
fdivs
lods
mov
xor
adc
test
clc
jb
sarb
loope
mov
daa
fadd
lret
mov
mov
shll
sub
movsl
fidivrl
push
shlb
sbb
mov
xor
out
repnz
test
jns
inc
dec
arpl
out
addr16
and
ljmp
mov
xor
out
mov
fsubl
arpl
add
cmc
rcr
xlat
and
jle
std
inc
cmp
shl
mov
cmp
aas
lock
int
xor
cmp
xor
pushw
jns
xchg
lock
testl
mov
cld
xor
fcomps
cmp
push
insl
test
leave
dec
std
xor
push
pop
fldenv
lret
mov
jp
dec
and
mull
and
mov
add
inc
movsl
push
push
ljmp
pop
in
popa
mov
popa
lahf
out
pop
mov
lahf
clc
ss
cmc
cmpsb
scas
lahf
imul
pop
and
pop
mov
out
les
lods
jnp
out
sbbb
mov
inc
popf
cli
mov
add
xor
pop
mov
cmp
movsl
test
mov
mov
out
andl
out
rol
cmpb
and
ret
in
mov
mov
mov
ret
and
mov
mov
dec
pop
mov
and
ret
add
sbb
outsb
filds
cmp
mov
inc
aam
adc
mov
shrb
dec
mov
out
add
scas
cwtl
incl
fidivrl
test
push
incl
shl
pushl
jns
pusha
jecxz
and
test
sub
pusha
mov
ret
movsl
movsl
add
test
shlb
adc
stos
cwtl
and
loope
into
cmp
mov
addl
mov
loop
orb
jmp
add
popa
jo
cmp
mov
mov
mov
push
mov
inc
stc
mov
stc
inc
mov
movsb
in
ret
and
repnz
fwait
xlat
popa
cmpsl
out
loopne
sub
and
inc
mov
aad
in
loop
gs
inc
lock
dec
cmpsl
fsub
inc
out
pop
xchg
add
inc
mov
cmp
inc
mov
cmc
sbb
les
xchg
mov
movsb
lods
jno
inc
and
imul
xlat
adc
rol
inc
gs
lret
mov
es
mov
ficomps
inc
addb
cmp
fistpl
pop
ljmp
mov
lret
les
stos
cmp
mov
aas
loopne
mov
add
push
adc
pusha
test
push
sub
je
mov
xlat
fbstp
adc
cmp
and
mov
jp
sub
mov
xchg
adc
mov
push
cmp
and
pop
or
sub
mull
movsl
inc
and
test
xchg
mov
sbb
xlat
fiadds
and
mov
xlat
inc
es
idivl
cmp
sahf
add
sbb
mov
lods
ja
lods
sub
fsubrs
sub
test
leave
cmpsb
sti
and
and
sarb
mov
inc
ds
cmp
sarb
mov
leave
mov
fdivs
shrb
sub
test
mov
aas
aaa
sbb
cmp
cmp
rcr
cwtl
sti
cmp
clc
cmp
aas
idivl
and
fxch
stc
inc
cmp
mov
mov
fsubl
lock
ret
and
mov
imul
mov
or
sub
and
rcr
imul
std
movsl
mov
mov
stos
jno
mov
cwtl
mov
movsl
mov
mov
fstpt
mov
mov
mov
mov
iret
or
cmp
xchg
cmpsl
push
ja
mov
mov
mov
cli
mov
xor
movsb
test
rcrl
arpl
subl
std
scas
adc
clc
frstor
and
std
pop
fidivrl
fisubrs
sti
dec
mov
mov
test
jmp
sbb
test
shlb
cmp
mov
xlat
add
mov
cmp
cmpsb
lret
mov
and
fstps
rol
mov
fidivl
inc
lods
sbb
cmpsb
stc
cmp
cmp
mov
out
mov
jmp
mov
dec
cmp
inc
clc
xor
into
dec
vmulpd
xchg
jle
xlat
cmp
lahf
fdivp
iret
sbb
add
sbb
cmp
push
mov
icebp
xchg
fdiv
xchg
cmpsb
js
scas
test
out
movsb
fucomi
jnp
cltd
ror
ljmp
sbb
rcl
cmp
mov
jmp
sbb
scas
pop
inc
mov
aad
fidivrl
fstps
cmp
cmp
sarb
pop
mov
inc
ss
cmp
sarb
sti
stc
inc
xor
cmp
rcrb
mov
pop
inc
scas
cmp
scas
stc
fidivrl
sti
mov
stos
stc
lcall
sti
sbb
test
enter
ss
mov
jo
xchg
xchg
fdivrs
mov
sbb
clc
fsubrp
pop
fs
push
insb
fadd
fstpt
loope
xlat
jne
movsl
fsubl
mov
dec
mov
and
scas
loop
or
stc
in
movsl
shlb
sti
out
imul
stc
outsl
cmp
shl
ja
jns
sti
jge
push
inc
enter
cmp
shrb
sti
icebp
inc
xchg
aad
jbe
jp
idiv
cmp
shlb
sti
pop
inc
dec
ljmp
sti
idivb
fmulp
jg
arpl
sti
outsl
inc
adc
repz
mov
rcr
jge
inc
jecxz
test
movl
icebp
mov
inc
out
pop
pop
mov
mov
ja
xlat
shrl
andb
cmp
addr16
mov
mov
dec
sti
cmp
imul
xlat
lcall
fcomi
sub
add
and
jge
mov
scas
shlb
cmp
mov
aad
dec
xlat
inc
inc
loopne
cmp
mov
mov
ds
outsl
inc
pusha
fsubrl
mov
pop
pop
inc
fldcw
cmpsl
mov
xlat
rcr
mov
xlat
fsubs
aad
inc
cmpl
mov
add
mov
jne
and
ds
leave
ret
inc
push
enter
cmp
rcrb
inc
cmp
mov
stc
sbb
subl
int3
mov
sti
xchg
jge
mov
cmp
inc
lea
push
xchg
xlat
cmpsb
add
idivl
cmp
idivb
cmp
mov
cmp
stc
stos
cmpsl
push
jp
mov
cmp
rcrb
imul
pop
jno
out
adc
mov
sbb
dec
les
xlat
push
cli
imul
dec
and
dec
fmull
stos
inc
push
stc
mov
into
jbe
xlat
push
insb
xchg
xchg
loopne
cmpsb
outsl
out
test
sub
cmpsl
shlb
fildll
dec
add
dec
xchg
movsl
mov
daa
pushl
dec
pop
adc
and
je
adc
mov
fcompl
mov
mov
mov
mov
jns
xor
xchg
stos
roll
out
xchg
mov
inc
xor
sbb
pop
mov
cmp
push
inc
mov
or
pop
pop
scas
in
push
inc
add
push
cmp
push
ja
or
loop
mov
mov
mov
scas
and
ret
sarl
push
or
cmpsl
mov
inc
enter
test
dec
mov
pushf
jmp
mov
push
cmpsl
gs
or
loope
xor
pop
push
movsb
xor
xlat
mov
clc
clc
xchg
or
pop
fwait
mov
loop
pop
xchg
orl
push
scas
adc
cmp
mov
mov
cltd
jns
sub
mov
mov
and
push
pop
das
jmp
push
push
sub
out
push
mov
xchg
popf
and
roll
cwtl
outsl
sub
rclb
inc
inc
lahf
push
cmp
test
sub
pusha
jns
jnp
xchg
xchg
xlat
cmp
jo
das
aaa
pop
fstpl
mov
ret
int
daa
fwait
stc
jae
dec
js
js
dec
pop
pop
inc
shlb
fimuls
pushf
hlt
xchg
mov
das
and
xorb
pop
js
sbb
xchg
pop
mov
mov
pop
and
scas
sub
sarl
scas
push
xchg
mov
xor
mov
adc
insb
sbb
cwtl
mov
lret
adc
push
cltd
lds
icebp
sbb
std
jne
test
mov
xor
cmpsb
out
jmp
std
rep
in
mov
xor
jle
addl
cmpsl
mov
cmp
jae
mov
pop
mov
jnp
xchg
test
loop
leave
aas
mov
popa
add
scas
mov
fldenv
jae
mov
icebp
mov
push
insb
mov
int
scas
jle
pop
lcall
lahf
movsl
dec
mov
aam
or
mov
push
cmp
dec
js
loopne
xchg
sub
pop
lret
xchg
mov
inc
cmp
movsl
es
dec
cmpl
mov
leave
or
pop
pushw
cmp
add
xchg
mov
aaa
rcrl
notl
adc
out
out
cmpsb
std
xor
stos
scas
pushf
push
shl
mov
sbb
pop
ja
add
jle
arpl
dec
sub
movsl
mov
fidivrs
insl
cmp
adc
pop
out
xchg
out
out
or
test
mov
lds
mov
popf
and
aaa
xor
in
loope
xor
sbb
adc
and
mov
lahf
leave
xor
iret
loopne
cmp
lcall
movsl
iret
mov
add
ja
and
mov
sub
sub
and
inc
xor
mov
out
mov
cmc
les
push
cmp
cmp
mov
add
mov
and
and
sti
sub
pushf
cmpsb
sti
sti
push
mov
fsubl
pop
out
out
jns
cmp
and
sub
sbb
jge
mov
mov
decl
cmp
mov
inc
cmp
push
jge
jg
mov
negl
xor
in
lods
lret
testl
or
movsb
mov
or
pop
adc
dec
in
mov
js
mul
and
dec
jne
lcall
in
mov
mov
pop
adc
pop
movsl
cld
fwait
add
test
sub
sarb
pusha
sub
adc
mov
imul
inc
jle
cs
sbb
fldl
mov
rcrl
data16
mov
jge
or
mov
rorb
ret
clc
aam
aad
sub
fdivl
scas
adc
in
mov
and
jg
cwtl
cli
negb
js
adc
je
push
aaa
jo
stos
fcomi
mov
stos
loop
sti
xchg
dec
lcall
xor
mov
ljmp
jnp
insb
icebp
mov
mov
dec
negb
mov
pop
jecxz
mov
std
test
jne
dec
jmp
push
mov
stc
stc
xchg
insl
mov
pop
aaa
repz
pushf
adc
aaa
repz
std
sub
rorb
lea
pop
dec
in
scas
add
cs
leave
scas
rcrb
xor
xor
aaa
mov
repnz
jo
or
mov
in
push
data16
lods
mov
fnstsw
pop
cld
jb
mov
loopne
mov
push
ficoml
arpl
insb
movsl
andl
movsb
movsb
repz
push
test
divps
aam
je
cwtl
fxch
aaa
mov
lret
cmp
idiv
or
cmp
mov
fcoml
aam
cli
mov
mov
cs
mov
push
jnp
sbb
in
sbb
and
cld
cmp
push
ljmp
mov
lock
flds
pop
pop
xchg
dec
mov
or
aaa
sbb
jne
mov
sub
insl
or
imul
sub
cmpsb
xlat
into
and
xor
jns
or
popa
xchg
lds
stos
sbb
push
and
jge
insb
popa
jp
loop
pop
push
data16
aam
stos
mov
pop
push
sahf
in
nop
jns
mov
and
insl
jecxz
rcrl
jp
les
pop
testl
mov
pop
stos
sbb
push
or
cmp
xchg
and
test
and
into
rol
add
jg
mov
adc
and
iret
mov
pushf
or
pop
addr16
fistpll
test
push
adc
loopne
pop
ret
or
sub
aaa
jae
loopne
cmp
cmpsl
sbb
dec
cwtl
outsb
iret
add
gs
push
jno
cmpsl
mulb
loop
gs
cltd
cs
dec
cs
cli
mov
or
jb
mov
ss
add
jmp
mov
dec
mov
cmpsl
pop
jno
adc
or
lods
mov
mov
push
push
ljmp
shl
and
mov
mov
xchg
es
sarb
xchg
mov
jmp
xchg
cmp
pop
xchg
sbb
sbb
rcrl
inc
push
addr16
int3
jecxz
cmp
mov
dec
aas
aas
mov
push
jb
inc
mov
cli
push
push
movsb
mov
or
insb
mov
xor
inc
arpl
out
jae
out
inc
mov
dec
repnz
stos
push
out
lods
addr16
mov
jmp
scas
call
cmp
sbbb
outsl
and
cmp
cli
inc
xchg
or
std
jmp
jle
mov
bound
pop
mov
cmp
push
or
xchg
mov
sub
cwtl
cli
xchg
mov
inc
mov
dec
scas
mov
dec
mov
ljmp
pop
fstl
sub
add
or
dec
pop
pop
rclb
push
xchg
inc
pop
push
int
mov
mov
fstpl
mov
sub
pushl
aam
mov
xchg
rclb
movsb
int
sti
jno
pop
mov
cmpsl
mov
xchg
pop
imul
out
mov
into
jmp
pop
sbb
push
push
lret
lret
loope
sbb
test
scas
and
lea
push
test
add
mov
lds
mov
jb
cwtl
cli
mov
inc
cmp
icebp
andb
push
mov
mov
mov
mov
cli
xor
xor
pop
xchg
sub
pushf
je
rorb
js
arpl
cmp
movsl
ficomps
xor
pop
bound
push
push
mov
or
cld
add
orb
in
jl
repnz
in
inc
mov
ret
movsl
fnsave
jmp
pushf
push
pushf
adc
lea
ja
pushf
pusha
pushl
lea
jae
ja
pusha
lea
jne
push
call
jns
lcall
mov
jg
test
jg,pt
cltd
xor
mov
dec
rolb
fwait
dec
es
out
pushf
call
or
std
jae
ret
ja
je
pop
subl
push
sub
jmp
jns
push
dec
ja
cli
push
pop
into
cmp
mov
ds
into
cmp
fwait
les
sbbb
cmp
cmp
test
fwait
pop
mov
pop
in
xlat
cwtl
cli
arpl
adc
sub
add
mov
sub
mov
in
sub
lods
lods
rolb
cmp
sub
divb
add
mov
mov
lcall
mov
testb
sbb
jne
ret
dec
inc
jns
mov
pusha
scas
out
pushf
xchg
loop
dec
inc
lret
test
push
push
inc
lret
arpl
mov
aas
xchg
pop
xchg
fisubrs
aad
jecxz
push
mov
add
pusha
push
cmp
pusha
jmp
pushf
pusha
push
adc
pushf
jmp
pushl
lea
je
pusha
movl
pusha
mov
lea
jmp
mov
call
lret
fcomps
ja,pt
add
mov
inc
fcompl
in
mov
out
pop
cmp
cmp
cmp
nop
dec
outsb
scas
ljmp
ror
lret
sahf
cmp
sub
sbb
mov
pop
pop
rcrb
inc
mov
insb
inc
mov
adc
pop
mov
cmp
sub
cmc
outsb
pop
pop
and
dec
call
jnp
fcomps
xchg
loop
xchg
push
scas
push
add
jo
jg
push
aas
xor
jg
aad
mov
push
cwtl
out
jl
in
mov
mov
cmp
lcall
je
cwtl
out
pop
mov
mov
push
in
into
mov
in
into
mov
gs
and
or
cmc
fcmovu
cwtl
cli
mov
and
pop
push
into
mov
mov
push
sahf
mov
in
xor
and
sahf
aaa
and
or
out
lahf
insb
mov
stc
stc
scas
mov
repnz
lahf
and
sub
inc
mov
cmp
lea
mov
cmp
jl
out
jae
ljmp
mov
cmc
shlb
xchg
ret
xlat
lret
fwait
add
or
mov
daa
mov
lret
hlt
mov
pop
out
nop
add
xchg
mov
cmc
xchg
rclb
dec
inc
call
popf
xor
mov
cmp
and
mov
mov
add
loope
push
pop
cld
dec
ret
aaa
sbb
pushl
dec
or
sti
incl
cld
and
aad
and
mov
sti
jno
or
mov
adc
jecxz
repz
repz
idiv
mov
cli
test
daa
pusha
imul
xor
push
out
cmc
and
lea
hlt
cmpsl
and
and
add
dec
jl
or
lcall
xor
aam
mov
or
stos
mov
adc
sub
jo
outsb
test
and
mov
mov
or
in
mov
fcmove
jae
out
jmp
cwtl
and
or
inc
mov
inc
cmp
scas
sbb
push
dec
mov
push
sub
aas
dec
push
adc
gs
andb
inc
mov
xchg
sub
and
aaa
inc
inc
mov
out
jg
jns
mov
xor
or
jle
loopne
cmp
scas
jge
cmpl
repnz
out
jae
int3
cmp
sbb
rol
push
outsl
fcom
or
icebp
fdivs
out
ljmp
mov
pop
and
ljmp
ljmp
rcl
stc
clc
pcmpeqd
call
orl
sti
mov
aad
cwtl
cli
pop
iretw
sbb
mov
push
imul
ds
cld
jae
popf
leave
ret
loopne
sbb
lahf
mov
mov
dec
nop
dec
fstp
adc
dec
mov
adc
lahf
mov
jb
xchg
push
jo
jecxz
push
pushf
add
fwait
cmp
fidivl
push
roll
cwtl
arpl
adc
dec
mov
popa
pop
xchg
les
mov
adc
mov
scas
ljmp
ljmp
mov
inc
insl
mov
sbb
mov
fwait
xlat
mov
xchg
xchg
negb
add
mov
ror
xor
sub
mov
leave
add
ds
dec
ret
mov
fdivrp
sbb
int
imulb
or
adc
popf
adc
popf
mov
jge
mov
roll
es
xchg
out
int3
dec
xor
je
out
int3
dec
lcall
jno
pop
mov
jo
xor
jg
lds
in
mov
or
xor
bt
pusha
pusha
ror
jmp
outsl
stos
fcompl
jb
mov
pop
mov
mov
ja
xchg
mov
jnp
cmpsl
add
mov
pop
aad
push
leave
bound
pop
push
push
stos
aam
cli
xor
fistps
push
sub
insl
int3
cld
out
orb
in
sbb
add
jg
decb
push
into
fstpl
xor
in
sbb
jb
clc
mov
aad
xchg
or
xchg
shlb
mov
lret
test
pop
nop
test
test
imul
movsb
iret
aas
adc
mov
cmp
xchg
data16
add
loop
sub
xor
push
dec
ret
mov
pop
std
scas
fisubs
popf
cmp
test
and
mov
jmp
cld
arpl
xchg
adc
and
dec
shlb
out
or
cld
and
mov
loopne
pop
push
fwait
and
xor
push
fwait
push
pop
push
push
addr16
insb
pop
in
jmp
stos
and
mov
sbb
pop
add
nop
loope
outsl
int
lret
sbb
and
or
and
pop
lds
add
ljmp
mov
test
add
mov
stc
add
pop
dec
push
insl
mov
or
push
rorl
imul
bts
add
bsf
jmp
hlt
das
adc
cwtl
cli
mov
std
inc
xchg
add
xor
push
or
sbb
mov
sahf
jbe
or
test
or
push
dec
mov
fsubrs
pop
pop
sar
idivb
subb
daa
enter
scas
fiadds
xchg
inc
testb
sbb
mov
pop
xchg
jg
imull
ret
pop
xchg
xor
inc
mov
cld
xor
dec
mov
lods
imul
lds
inc
adc
mov
dec
push
xchg
jns
cwtl
cli
add
xor
jbe
adc
mov
and
scas
adc
mov
and
ficoml
cmp
sub
loopne
fxch
bound
mov
dec
and
es
mov
dec
ja
lcall
out
xor
adc
pop
rolb
push
inc
push
mov
stc
fs
push
adc
xor
call
xor
jnp
adcl
dec
insb
mov
sbb
dec
xchg
sbb
inc
push
or
aaa
sbb
cwtl
cli
movsb
fucom
punpckhbw
cli
sti
dec
out
addr16
call
jmp
add
jge
mov
daa
inc
pushf
inc
mov
mov
mov
push
jecxz
scas
inc
fidivs
cs
fdivrl
pop
pop
rcr
jg
mov
push
push
repz
ret
nop
stos
xchg
push
xchg
push
arpl
dec
jp
ret
xchg
fstpl
xchg
add
scas
stc
sar
jmp
pop
repnz
repz
jbe
and
jnp
or
mov
pop
leave
and
add
fmull
fildll
jmp
or
cmp
cltd
loope
jne
xchg
test
js
dec
gs
push
rolb
add
inc
call
cli
mov
inc
sub
add
mov
sub
call
lods
cmc
ljmp
into
std
and
ret
or
notl
adc
push
pusha
mov
pushl
ret
clc
xor
loope
cli
mov
mov
sbb
mov
movsb
scas
imul
faddl
jecxz
ret
mov
aas
mov
imul
test
dec
shr
push
sub
xor
call
or
pop
in
int3
nop
mov
scas
and
add
les
ret
mov
aaa
push
pushl
mov
mov
and
mov
out
pop
cmp
ds
push
add
aad
icebp
sbb
xchg
xchg
mov
mov
mov
mov
jns
inc
hlt
or
pop
movsl
pop
or
sub
bsr
movsbw
mov
clc
clc
test
cmpb
pusha
movb
mov
lea
jmp
adc
loope
cli
insl
pop
jo
lcall
andl
jbe
repz
stc
sub
ror
inc
mov
out
jo
stos
movsb
loopne
or
cmc
das
dec
sbb
xchg
mov
shlb
pusha
ja
nop
test
ja
xchg
or
adcl
push
pop
cmp
repnz
rcl
out
insb
cmpsl
repnz
push
loopne
jo
inc
outsb
in
loope
cli
push
mov
iret
sbb
jb
in
jbe
adc
xchg
fistpll
lret
xor
cmpsb
std
rcr
add
adc
xlat
fbld
cmp
loopne
inc
dec
cmp
arpl
lret
pusha
arpl
push
mov
jno
or
xorl
mov
in
mov
dec
pop
push
inc
je
or
pop
push
scas
dec
jle
and
mov
sub
mov
dec
ja
iret
mov
mov
pushl
lea
jne
setg
setbe
cwtl
movsbw
movb
cwtl
movzbl
push
lahf
lea
call
mov
pushf
sete
lods
movb
mov
inc
cmc
stc
cmp
not
call
and
cli
mov
cmp
or
mov
xor
pop
sub
jo
shlb
in
pop
sbb
lea
sbb
sub
sbb
pop
fwait
addr16
lods
ret
sahf
pop
stos
loop
int
mov
in
arpl
fistpll
sub
xor
pop
pop
daa
cmp
sbb
fs
cmp
lcall
mov
loope
push
pop
push
xchg
bound
or
orl
or
cmc
push
pop
push
ja
in
lea
jne
inc
mov
rol
sub
clc
ror
mov
push
movl
lea
js
pusha
sub
pusha
jmp
add
clc
bt
cmc
stc
mov
cmc
mov
cmc
mov
cmp
jmp
push
pushf
pusha
sub
cmp
mov
stc
call
lea
jne
xadd
mov
bsf
sub
add
dec
add
mov
stc
stc
cmc
pushf
sub
clc
jmp
push
lea
je
bt
pusha
shld
shl
add
btr
sub
bsf
dec
shr
inc
clc
mov
shr
bt
add
bts
call
pusha
push
adc
pushf
pushf
movb
lea
jmp
add
add
bsf
mov
push
jmp
stc
cmpb
pusha
lea
jne
adc
clc
pushf
xor
setne
stc
mov
mov
mov
shl
and
add
rol
sub
mov
mov
cmc
cmp
test
jmp
cmp
add
sbb
add
xor
mov
fwait
xor
loope
push
push
fwait
mov
insb
insl
jl
pop
jmp
std
lret
hlt
xchg
sub
mov
shll
pop
std
and
or
sti
push
push
ja
sub
dec
jb
clc
and
stos
imul
daa
fmull
jg
out
pop
bound
mov
lods
cli
icebp
add
mov
add
mov
mov
lret
loop
jo
imulb
jl
push
adc
add
push
xor
out
cli
mov
std
scas
mov
test
and
xchg
ret
rolb
into
jnp
out
pop
lea
nop
sub
jb
je
rclb
jecxz
inc
push
call
and
dec
inc
mov
mov
mov
jae
ljmp
stos
adc
fimull
inc
jae
cmp
lea
sub
ret
cmpsb
jl
xchg
xchg
movsb
jmp
push
mov
mov
call
pop
into
fstl
cwtl
cli
push
das
push
mov
je
fwait
mov
mov
jns
jg
insl
mov
and
jecxz
lods
push
pop
adc
cmp
pop
hlt
cmc
cmc
pusha
push
outsb
xchg
xchg
xchg
mov
aad
loopnew
xor
or
sub
cmp
mov
push
fsub
adc
pop
lods
in
sbb
testl
cwtl
cli
cmpsl
sbb
or
aas
pusha
xchg
xchg
mov
jge
push
stc
inc
fsubs
in
push
cmp
xchg
jge
mov
lret
mov
fistl
cs
mov
pop
jle
jmp
aas
mov
sbb
lret
jl
repz
push
mov
js
hlt
das
and
mov
xchg
mov
xor
repz
loop
dec
and
xor
and
xor
cs
jbe
cld
arpl
dec
je
out
dec
push
into
pop
cmpb
or
gs
out
cli
dec
mov
mov
push
mov
in
out
xchg
mov
add
or
mov
rorl
jae
mov
pop
ja
mov
test
int
inc
cmp
xor
cmp
out
ret
pop
sub
xchg
ja
xchg
jg
jns
cmp
sbb
jmp
les
das
hlt
dec
insb
loop
ret
and
les
push
xor
push
sahf
aad
mov
in
and
call
sbb
mov
ret
fnsave
xchg
xchg
sub
sbb
jg
outsl
inc
arpl
loope
ret
imul
lods
inc
xor
lock
leave
adc
mov
pusha
pop
iret
stc
mov
aad
xchg
mov
fildl
mov
xchg
fcmovbe
rclb
and
and
mov
fsubr
sbb
pop
jnp
cltd
cmovo
cmc
cmc
lahf
and
jecxz
and
jb
xor
test
add
lea
js
add
out
cli
outsb
ret
add
clc
imul
rsqrtps
test
sbb
cmp
jp
lret
jl
loopne
sbb
stos
mov
xchg
repnz
icebp
sub
xchg
and
mov
adc
movsb
ja
jge
jb
fimuls
jb
fs
pop
test
sub
and
add
mov
push
jge
jl
hlt
dec
bound
adc
stos
out
push
xchg
mov
gs
add
cmc
pusha
bt
repnz
pushf
lea
jne
rol
and
shr
shrd
mov
rcl
btr
shld
neg
sub
shrd
jmp
pushl
bt
and
clc
pusha
stc
add
lea
cmc
clc
pushf
pusha
add
pushf
mov
mov
push
dec
call
jl
popf
call
fisubs
cmp
jle
fdivrs
nop
pop
hlt
in
pop
aam
in
xchg
mov
test
aad
pop
sarl
inc
inc
inc
and
and
push
fldl
push
sbb
sbbl
lock
cmp
fidivrs
ror
push
jno
test
xlat
rorb
xor
sub
adc
into
pop
adc
popf
mov
sub
mov
imul
jg
xchg
movsb
sbb
dec
mov
bound
jecxz
jmp
jns
xlat
push
pop
mov
ljmp
dec
fldt
test
jmp
and
cli
mov
imul
xlat
sub
loop
sar
sbb
aas
inc
sbb
mov
push
movsl
testb
mov
test
lcall
xor
test
cs
pop
mov
sub
mov
cmc
and
testl
and
popf
int
movsl
pop
int3
add
loop
stos
xchg
pop
ljmp
cmp
xchg
xchg
int
inc
pop
shl
pop
jns,pt
rolb
repnz
jecxz
ds
cli
movsl
inc
cwtl
icebp
push
mov
popa
bound
sub
pushf
push
pop
xor
test
stos
enter
daa
leave
iret
xchg
lret
xor
cwtl
stc
lret
xor
lret
lock
push
sbb
xchg
jp
xor
mov
out
push
and
dec
cmp
lret
int
add
mov
and
push
or
lods
pushf
cld
pop
pop
adc
pushf
pushf
cltd
mov
pushf
pushf
cmp
push
pop
ja
mov
repz
or
adc
pushf
pushf
call
lret
mov
cwtl
cli
pop
adcb
lock
pop
adc
mov
or
inc
cmp
jnp
cmc
sub
and
fmuls
inc
sub
iret
add
lea
dec
ror
dec
jmp
pop
add
jle
movsl
cmp
push
sbb
jge
leave
movb
mov
add
xchg
mov
inc
jb
out
nop
inc
orb
out
les
xor
out
push
mov
mov
sub
sti
ss
cwtl
cli
xchg
add
mov
daa
jle
sbb
imul
mov
jmp
test
ficoms
idivl
cmp
pop
pop
cltd
add
cmp
pop
xchg
mov
inc
mov
pop
mov
rorl
jp
adc
mov
andl
les
xchg
int3
or
sbb
or
xor
iret
add
push
in
dec
aas
mov
xor
insl
in
cmp
fs
ljmp
scas
inc
cwtl
push
repz
cwtl
cli
arpl
push
nop
cltd
lret
add
ds
fldcw
mov
lds
inc
cmp
lock
movsb
int
testb
mov
xchg
cwtl
lret
mov
add
jb
aam
mov
iret
sbb
inc
ja
pop
push
insl
mov
sub
pop
push
bound
pop
dec
scas
clc
and
add
jbe
inc
mov
sub
lret
sub
cmpb
movsb
mov
cwtl
cli
add
push
lret
fdiv
dec
mov
mov
xchg
inc
insl
inc
sub
out
rol
imul
and
movsb
out
mov
mov
out
pop
adc
pop
stos
xor
ss
xchg
stos
jbe
xchg
push
or
subl
subl
push
inc
xchg
stc
push
mov
out
inc
lock
adc
lcall
call
push
fdiv
and
cmc
cs
mov
fdivrp
or
int3
adc
js
stos
add
push
adc
js
xor
jbe
mov
insl
into
das
movsl
sbb
xchg
rol
add
add
shrl
fcmovnbe
inc
enter
lahf
cmp
xor
xchg
jbe
sub
jae
lret
fcmovbe
cld
mov
push
jb
call
pop
jl
pop
lods
xchg
gs
pop
lods
mov
sahf
std
adc
stos
jmp
in
mov
bound
sub
inc
clc
call
push
lea
jne
pushf
shrd
and
mov
jmp
popa
xlat
mov
xor
minps
pop
pusha
mov
adc
loope
pop
addr16
shll
mov
sbb
pop
adc
aas
arpl
ret
shl
scas
lock
pop
rorl
stc
out
daa
pusha
addr16
xor
mov
sti
jb
mov
mov
sbb
out
cwtl
cli
mov
sub
dec
mov
test
add
sub
jbe
repz
ret
inc
mov
fistpll
ds
jb
add
inc
cmp
std
idiv
push
ret
dec
aam
call
inc
aam
adc
pop
cs
imul
sbb
xchg
xor
dec
lods
or
push
cwtl
movl
clc
inc
mov
loopne
jbe
inc
jl
out
cwtl
cli
jmp
ds
test
sub
lods
scas
inc
mov
or
cmp
dec
cmpb
cld
aaa
mov
push
jmp
es
push
cs
adc
lret
jno
jecxz
es
xchg
xchg
xorb
mov
out
sub
divb
add
cmp
cltd
divb
and
add
sub
xor
xor
bound
or
pushf
call
lds
in
cwtl
cli
insl
jle
clc
and
pop
mov
adc
mov
cli
cmp
pop
into
cmp
scas
call
sbb
lcall
inc
popf
out
jne
or
je
lods
or
imul
mov
and
inc
jle
rol
push
ret
dec
sub
push
cld
aaa
pusha
xlat
sub
rol
dec
adcl
cwtl
enter
jl
cmp
xor
ja
aaa
jbe
cmp
js
aaa
fcomip
in
inc
push
jge
repz
in
pop
rcrl
pop
sar
and
dec
loopne
cmc
add
pusha
movb
pushl
lea
jne
setnp
call
int
sub
cwtl
cli
lahf
shl
adc
je
cs
nop
add
mov
push
sbb
mov
mov
xor
sub
xlat
mov
and
sbb
push
push
lahf
test
inc
fs
pushf
jno
mov
mov
or
es
mov
in
push
lret
fmuls
jne
pop
lcall
and
test
and
and
aas
icebp
cwtl
cli
movsb
adc
mov
movl
out
repnz
mov
sbb
cmp
int3
repnz
sub
popf
stos
and
cmp
mov
jp
loope
xor
lock
adc
test
xor
push
lea
push
xchg
and
scas
push
jle
jo
adcl
insb
mov
inc
push
ja
cmp
lods
mov
inc
ja
or
out
ja
ds
sbb
fmull
or
jg
or
or
sub
jmp
cwtl
cli
pop
mov
add
push
xchg
shr
or
or
mov
push
mov
out
pop
or
cmp
cmpsw
call
mov
loopne
or
cld
gs
push
ja
sbb
out
sbb
popf
enter
mov
and
hlt
push
dec
jecxz
xor
xchg
or
ficomps
xor
xchg
icebp
push
dec
add
dec
xchg
push
loopne
cmp
cmp
mov
out
and
push
jl
pushf
mov
jns
lods
icebp
cwtl
cli
xor
xchg
adc
imul
jle
rorb
jo
mov
pusha
add
jmp
pop
xchg
add
scas
mov
mov
jae
cmpsb
mov
push
insl
push
aaa
js
test
mov
push
push
ret
mov
movsb
pop
jg
cmc
adc
jmp
ret
stc
sbb
mov
test
es
cmp
pop
aam
mov
ds
cwtl
cli
stos
adc
jbe
adc
rcll
jmp
das
dec
push
push
shrb
pop
sub
mov
sub
lea
rcrb
mov
pushf
cmp
push
outsl
in
adc
inc
bound
imul
xlat
push
or
jle
imul
pop
push
xchg
or
and
mov
ret
cmp
pop
xor
jb
mov
add
cmp
pop
sub
aam
fidivl
loope
scas
or
lock
xchg
or
pusha
out
jno
push
lret
adc
lret
mov
cwtl
cli
cmp
rorl
xchg
jecxz
add
sbb
fs
pop
jnp
insl
xchg
adc
rcl
sub
repz
stc
adc
outsb
bound
add
js
adcl
pop
in
cmpsl
sub
inc
sub
rcrb
add
mov
int
arpl
ds
adcl
dec
insb
sahf
popf
cs
adc
das
push
shr
jb
mov
shr
pushf
xchg
lcall
fsubrp
and
push
sub
fnstcw
int3
rol
call
cmp
push
aas
pop
mov
mov
push
ret
push
push
sub
notl
or
xchg
lret
push
adc
pop
test
repz
add
pop
push
mov
jge
out
out
in
fcmove
sbb
fs
sub
xor
lret
arpl
lcall
clc
stc
iret
shlb
js
in
cmp
popf
adc
iret
or
dec
jecxz
movzbl
mov
bsf
push
mov
bsf
push
add
lea
shld
mov
stc
call
xchg
add
dec
push
mov
cmp
and
cmc
sbb
xor
cmp
lcall
push
ss
mov
mov
lret
xchg
bound
inc
inc
repz
test
scas
sbb
cmp
mov
fistpll
mov
jnp
sti
mov
mov
test
push
jge
xor
ret
lods
xor
pop
mov
imul
and
xchg
mov
push
loop
inc
test
cmpsl
jb
xchg
xchg
movsb
test
pop
dec
stos
insl
cwtl
mov
lock
pop
cmp
xor
ja
repz
movsl
push
mov
mov
rclb
jne
mov
mov
dec
xchg
adc
jns
adc
arpl
loope
mov
push
xchg
dec
stos
js
scas
sub
mov
ret
inc
cmc
push
mov
fisubl
int3
mov
pop
and
lods
mov
lods
inc
push
inc
cmp
lods
mov
popf
int3
inc
icebp
xchg
push
out
mov
pop
loope
aaa
inc
or
xchg
mov
jge
mov
mov
inc
jb
out
mov
fildl
aaa
mov
shll
adc
jnp
mov
imul
repz
push
imul
ret
mov
push
adc
mov
popf
aaa
cli
mov
outsl
mov
mov
movsl
pop
adc
dec
inc
cmp
inc
popf
aaa
sbb
rcrb
cmpsl
flds
xchg
xchg
mov
dec
mov
lahf
mov
pushl
sbb
lods
fnstenv
sti
cmpl
push
ret
dec
shlb
cmp
mov
mov
sub
out
mov
insb
es
sarb
test
jecxz
fdiv
pop
xchg
sub
out
in
mov
sbb
jbe
xchg
mov
and
ret
xchg
sub
xchg
inc
clc
test
gs
pushf
jnp
jmp
mov
movsl
push
xchg
mov
enter
or
push
fwait
xbegin
out
mov
mov
mov
mov
jbe
dec
rcll
loop
inc
mov
lock
std
adc
mov
push
mov
cmp
outsl
xchg
mov
push
mov
sub
mov
lret
pop
mov
jns
addr16
out
mov
pop
cltd
fdivs
jne
mov
push
xor
mov
mov
xor
cmpsb
das
xchg
mov
xchg
dec
je
push
daa
scas
mov
iret
sbb
insl
inc
mov
pop
mov
ds
pop
rcl
and
sbb
jmp
xchg
movsl
daa
or
inc
mov
push
popf
es
fwait
dec
inc
jg
je
mov
mov
pop
dec
xchg
mov
imul
and
stos
or
rcrb
dec
cmpsl
movsl
mov
jo
dec
cmp
popf
mov
loop
xor
notb
fcompl
ret
push
jp
xchg
aad
je
and
lahf
mov
jg
cltd
stos
dec
out
scas
mov
sahf
rcll
xchg
data16
xchg
inc
xlat
imulb
cmp
mov
sbbl
imull
inc
mov
int
orl
cmp
jbe,pn
fdivl
cwtl
jecxz
out
ror
test
jno
mov
mov
mov
jns
gs
mov
jmp
mov
mov
addr16
pop
and
mov
cwtl
push
movsb
xor
mov
hlt
xlat
stos
adc
clc
mov
aas
sti
adc
aam
mov
ss
lods
and
mov
pop
adc
fstpt
mov
xchg
jg
cmp
ds
mov
xor
loop
add
mov
test
cmp
add
sub
enter
xor
dec
push
fwait
push
or
insb
mov
fstpt
jae
test
mov
jo
test
ja
mov
hlt
inc
mov
stos
sbb
xor
mov
in
incl
sub
in
lods
daa
sub
shrb
lods
xchg
fcmovnbe
inc
and
sbb
dec
ret
mov
push
hlt
mov
mov
leave
lret
mov
scas
push
das
fistpl
jne
pop
sub
jl
stos
jno
mov
and
mov
mov
addr16
outsl
fiaddl
ljmp
mov
gs
mov
sahf
loop
fidivl
cmpsb
dec
mov
mov
push
lea
inc
jg
sti
add
jp
mov
mov
and
je
imul
jg
daa
mov
out
sub
cmp
loopne
pushf
mov
cwtl
xor
jo
sbb
push
mov
imul
fimull
dec
sbb
aas
mov
imul
adc
dec
repnz
mov
jno
xlat
int
mov
jg
push
pop
push
dec
inc
into
test
add
xchg
test
insl
cmp
and
xor
outsb
lock
xchg
xor
pop
mov
data16
inc
mov
mov
add
mov
jle
cmc
fldcw
cwtl
nop
xor
imul
into
scas
cs
cwtl
push
mov
mov
fistl
xlat
popa
mov
mov
xchg
pop
imul
jb
aas
pop
add
inc
xchg
adc
insl
cs
inc
sub
mov
out
mov
int
dec
test
cmp
fwait
in
push
fldcw
or
jno
xchg
sar
and
int3
popl
sarl
xchg
cmpsb
mov
cmp
daa
inc
push
adc
mov
mov
cmp
sbb
jl
xor
int
mov
adc
lods
xlat
jp
mov
mov
lds
mov
sahf
cmpsl
and
xor
jno
lret
xchg
xchg
xor
adc
pop
out
or
cmp
jo
outsb
fidivs
mov
dec
mov
sbb
int3
mov
mov
xchg
fs
dec
cltd
lods
dec
mov
ret
mov
sbb
jnp
mov
and
movsb
xchg
stc
jo
mov
cmpsb
mov
mov
sub
or
xor
jg
mov
and
mov
mov
mov
fwait
shlb
loope
mov
lret
push
xlat
mov
pop
dec
push
loopne
push
int3
mov
in
stos
shlb
aad
xchg
mov
js
jno
push
cmpsl
and
sbb
test
cwtl
mov
les
sbb
mov
out
jle
adc
aaa
xlat
lahf
ljmp
cmp
call
and
outsb
ficomps
lds
mov
test
sub
sbb
and
xlat
xlat
cmp
mov
mov
jle
idivl
inc
mov
xchg
mov
xchg
cmp
inc
xlat
mov
cmp
popf
enter
cmp
rolb
and
inc
inc
gs
cmpsl
stc
enter
or
sub
dec
inc
imul
jmp
or
sub
dec
inc
insb
mov
lods
stc
int3
cmp
rorb
insl
enter
cmp
rorb
cs
dec
inc
outsb
mov
scas
stc
into
cmp
rorb
das
sti
dec
inc
outsl
xor
jb
xor
jne
aaa
test
out
pop
sti
jl
mov
test
rorb
das
ror
push
stc
aam
xlat
pop
cmp
rcrb
fdivr
incb
enter
popf
aad
sub
sub
dec
stc
push
cmp
shlb
mov
stc
std
cmp
rolb
sti
movsl
inc
xchg
cmp
shrb
sti
xor
cmp
in
je
sbb
ja
xchg
lea
sub
pushf
pusha
cmpsb
roll
push
fildll
ja
lahf
out
xchg
mov
mulb
adc
inc
int
movb
push
and
adc
sti
lds
xchg
jmp
movsb
pushf
and
and
movsl
fidivrl
jnp
aas
loop
inc
gs
ret
movsl
les
andl
push
inc
insb
sub
push
adcb
cli
sahf
orb
jle
add
add
push
push
inc
inc
push
jl
jecxz
sbb
test
in
mov
sbb
ret
gs
cmp
aas
pusha
outsb
data16
mov
addr16
xor
xor
movsb
jns
movsl
es
gs
jmp
andl
adc
in
fdivl
pop
xchg
loope
sub
ficompl
jmp
out
cmpsb
and
and
sbb
xchg
repnz
jmp
loop
mov
mov
test
pushf
cmp
inc
pop
ret
inc
lret
cld
fidivrl
jo
ret
test
pushl
movsl
int3
enter
mov
lds
les
and
pop
rorb
push
loope
mov
cli
sub
jnp
mov
jns
and
push
add
fisttps
sbb
mov
dec
test
jecxz
mov
cs
adc
fimull
jg,pn
lea
xor
ja
movsb
cmp
push
mov
in
arpl
cmp
loopne
jmp
sbb
cmpsl
inc
loopne
inc
mov
out
insb
loopne
in
enter
pop
mov
lods
xchg
fcomp
pop
fst
mov
xchg
shlb
xor
imul
sbbb
pop
cmpsl
xchg
jecxz
sub
cmp
mov
sbb
aad
cmp
popa
test
xlat
lods
call
movsl
lds
xlat
and
fisubs
ds
fnsave
xchg
adc
sub
out
lds
lcall
mov
dec
push
push
out
cwtl
adc
and
repz
fdivrs
mov
push
test
fdivs
mov
fisubl
fdivl
fisubrl
fisubl
mov
clc
mov
enter
mov
stos
sbb
xor
stos
jae
lret
mov
fdivrs
lret
cwtl
sbbb
movsl
aad
shlb
mov
fcmovu
mov
jbe
push
shrl
sbb
jo
test
dec
fdivs
mov
fadd
fistpll
push
js,pt
pusha
sahf
jle
jns
call
adc
and
fnstsw
cmp
dec
jmp
repz
insb
xor
or
daa
daa
mov
cmpsl
cli
push
mov
mov
hlt
mov
add
es
mov
mov
pop
and
filds
and
mov
ds
stc
ljmp
ja
test
xor
cmpsl
dec
mov
jns
lods
repnz
adc
sbb
mov
inc
jnp
repz
lcall
shll
call
cmc
aad
aas
test
mov
adc
push
sbb
lret
cmp
loope
sub
scas
xlat
mov
xchg
loope
int
nop
int3
scas
and
sbb
inc
and
dec
hlt
push
adcb
inc
jbe
lcall
sbb
add
mulb
aaa
mov
sub
dec
cmp
cmc
cmp
movsl
xor
sub
or
cmove
rcrl
sub
or
mov
pop
test
adc
mov
or
mov
mov
mov
mov
mov
lods
lret
cmp
cmp
inc
loop
daa
test
cmp
lds
mov
mov
jns
push
out
mov
sbb
push
fldt
and
pop
test
mov
imul
les
addl
and
jge
stc
clc
cmp
inc
fs
test
sti
pop
je
lods
cmp
hlt
xchg
imul
fwait
mov
fcomps
add
sti
push
repz
cmp
add
mov
push
sub
fcoms
mov
sbb
loope
add
movsb
cmp
cs
xlat
js
add
cmp
sbb
clc
fistpl
loope
mov
fadd
cwtl
push
jns
ret
inc
ds
js
cli
cmp
sbb
out
sbb
sbb
jecxz
mov
sbb
lods
mov
je
mov
jge
cli
test
or
in
push
pop
scas
push
int3
repz
cwtl
jge
pushf
mov
and
movsl
add
mov
push
mov
lcall
mov
inc
mov
cmpsl
jg
fsubl
fildl
sarl
repz
xlat
insl
pop
add
mov
sub
and
mov
test
mov
leave
fstps
mov
js
mov
stc
jns
scas
sarb
neg
sub
cwtl
sti
mov
mov
sbb
leave
mov
subb
sbb
in
mov
push
cmp
shlb
mov
enter
cmp
shlb
jbe
nop
test
stos
inc
stc
mov
mov
cmp
pop
lods
jg
jo
mov
mov
xor
test
enter
cmp
sar
mov
sbb
cmp
out
cmp
mov
xchg
pop
mov
sarb
mov
inc
cmpsb
frndint
add
test
sti
fnstcw
inc
scas
and
mov
gs
shlb
cwtl
mov
sti
mull
cli
mov
cltd
mov
movsb
sti
sbb
stc
fnstcw
sar
lods
sti
sbb
fcmove
mov
cli
cmp
rcrb
mov
mov
pusha
mov
mov
movsl
xlat
mov
jmp
insb
scas
stos
frstor
scas
fsts
stc
mov
mov
mov
aad
leave
inc
dec
sbb
mov
mov
mov
cmpsl
cltd
mov
and
fwait
test
xor
lahf
mov
xor
lahf
fstpt
mov
popa
mov
test
lods
aaa
scas
mov
lahf
mov
hlt
cmpsl
and
lahf
fistpl
sbb
mov
cmpsl
test
and
mov
mov
xor
lahf
movsl
and
repz
mov
movsl
and
fwait
test
aam
mov
mov
mov
xor
jmp
aas
mov
cmp
stos
fld
xlat
jns
xor
mov
mov
cs
shl
mov
mov
mov
mov
mov
jnp
mov
jnp
mov
sarl
mov
and
sarl
mull
mov
jns
mov
mov
out
stc
mov
mov
das
or
sbb
shrl
mov
add
fistpl
fcmovnb
pop
out
and
scas
lods
mov
cli
movsb
loope
sub
ret
mov
aas
lods
and
and
stc
out
lods
mov
jecxz
sbbl
mov
imul
mov
aas
test
inc
add
and
mov
jne
gs
mov
cld
add
xor
in
mov
and
sti
sub
mov
xor
inc
clc
cmp
cmp
cmp
cmp
cmp
aas
and
call
mov
fstpt
and
push
movsl
popa
movsl
and
inc
pop
cmp
cmpb
push
pop
sbb
aas
and
fdivrs
popf
inc
adc
add
mov
negl
sbb
sbb
cmp
cli
sbb
and
movsl
popa
cltd
movsb
sbb
cmpsb
cltd
adc
fldenv
cmp
sbb
ljmp
fnstenv
aas
push
out
add
cwtl
mov
sbb
mov
pop
dec
sub
mov
popa
ss
xor
cmpsl
mov
mov
xchg
cld
jo
fwait
mov
mov
pop
dec
scas
xlat
xor
and
cmp
xlat
xchg
mov
mov
scas
push
mov
arpl
inc
mov
mov
scas
rcrl
xor
xor
xor
pop
fwait
mov
dec
jnp
lahf
int3
xchg
mov
test
mov
rcrb
mov
out
mov
mov
sbb
fwait
add
mov
cltd
sub
cwtl
notl
ret
xchg
clc
fadd
lcall
mov
cmpsb
int3
cmpsl
mov
cmpsb
subb
add
mov
jp
js
movsl
mov
xchg
mov
dec
sbb
push
loop
mov
mov
adc
repz
test
fadds
in
fsubrl
jnp
xor
popa
fbstp
scas
or
mov
movsb
or
shlb
stos
aad
mov
rcrl
mov
loope
nop
jmp
and
bound
add
xchg
and
mov
or
push
cmp
loopne
mov
cmp
data16
aam
push
xor
pop
data16
stos
cs
loope
pop
inc
lret
cmp
or
fistl
jb
inc
scas
adc
push
adc
fistpll
push
mov
sti
sbb
jmp
movsl
dec
outsl
push
ret
pusha
rorl
sub
cmc
cmp
cmp
ficoms
push
jp
insb
shll
loop
test
lcall
in
shll
fcompl
cs
jl
fsubr
pop
lock
or
pop
cmpsl
xchg
or
jg
mov
imul
push
fiadds
fisubs
or
sahf
fcomp
cmpsl
cmp
fs
push
les
sbb
add
addb
mov
lcall
cwtl
jl
mov
dec
sti
mov
or
xchg
pop
dec
sbb
sub
mov
mov
mov
mov
adc
mov
repz
aad
mov
cmp
dec
sbb
ja
mov
add
fwait
mov
mov
loopne
mov
add
aaa
mov
insb
mov
mov
mov
fcompl
mov
mov
mov
sbb
fwait
mov
mov
mov
aaa
ja
cs
sarw
pop
push
pop
jbe
bound
push
jmp
lret
imul
das
test
adc
cmp
idivb
out
push
mov
loop
gs
mov
xchg
xor
movsl
cmpsl
jle,pt
adc
jo
inc
push
mov
cld
mov
sbb
cmpsb
mov
jg
out
push
lcall
into
dec
shlb
mov
jne
repz
push
push
out
dec
imul
push
xchg
sahf
mov
cmp
mov
sbb
push
cwtl
into
shrl
sahf
mov
insb
imul
cmp
cld
fisubrs
loope
jbe
inc
push
cli
or
mov
push
cmp
pop
sbbb
cli
sub
ret
in
inc
mov
imul
mov
cmp
mov
cmp
cmpsl
xlat
jl
fstpt
shll
mov
mov
cltd
mov
mov
rcl
xor
xchg
adc
cltd
test
popf
mov
stc
push
push
ss
stos
psubd
xchg
sub
loopne
imul
outsl
loopne
movsl
inc
fdivrl
lahf
stc
push
cmp
cmpsb
fs
into
push
jl
and
push
or
fld
dec
cwtl
push
mov
fsubs
test
test
sarb
fcomps
sarb
fistps
xchg
test
lahf
xlat
enter
pop
clc
cli
adc
inc
loope
mov
inc
or
in
negl
push
idivl
cmpsl
cmp
nop
test
inc
fbld
cmpsb
cwtl
sub
inc
imulb
ret
mov
cmp
lods
jle
lret
test
dec
sub
xor
sbb
sub
loop
stos
cmp
xor
xchg
push
mov
mov
ret
lret
jl
pusha
leave
mov
push
sbb
mov
stc
or
jnp
cmpl
cmp
lods
mov
sbb
xor
xchg
sub
xchg
cmp
aam
or
adc
loop
orb
sahf
fstpl
enter
int
mov
mov
sti
leave
test
fstpt
fbstp
daa
stos
dec
int3
xlat
nop
adc
int
jp
push
cmp
xor
pop
imul
ja
and
pop
data16
push
fldenv
outsb
lds
pop
lods
mov
pop
repz
fisubs
dec
mov
pop
jns
in
add
out
in
sbb
xchg
test
pop
cmp
movsl
lcall
adc
test
sub
fsubrl
inc
mov
stos
mov
out
cltd
adc
scas
xor
int3
or
mov
xchg
mov
or
sub
xor
push
xchg
adc
out
enter
test
notl
scas
cmp
mov
pcmpeqb
pop
ss
jmp
mov
fidivrs
mov
xor
sub
or
mov
aaa
ljmp
add
cli
inc
pop
bound
fcmovnbe
sbb
fs
mov
push
push
jmp
aaa
xchg
cmp
sbb
fstps
xlat
cmp
sti
mov
push
mov
fisttps
rorb
cltd
dec
pop
pmaxsw
mov
jnp
dec
jne
jge
in
xchg
mov
inc
js
ljmp
dec
mov
cs
ficompl
das
xor
push
int3
loopne
lahf
mov
es
xor
repnz
dec
jns
sbbb
push
clc
data16
adc
jmp
mov
adc
loopne
mov
mov
imull
mov
sub
mov
int3
fbld
mov
hlt
cld
mov
add
mov
int
cld
dec
stc
sbb
xlat
cmpsl
in
aaa
pop
mov
jo
aad
sbb
cwtl
and
lret
iret
xchg
aam
outsl
jecxz
inc
sbb
je
testl
ds
sub
and
mov
push
inc
inc
lret
inc
mov
ss
in
pop
inc
popa
pop
loope
in
sub
mov
mov
leave
fstpl
insl
lock
xchg
xchg
mov
scas
add
mov
and
sub
mov
inc
cmpsb
enter
adc
dec
sbb
dec
jle
test
fldt
fldenv
imul
xchg
aad
push
shll
outsl
cmpsl
pop
push
pop
jo,pt
xchg
cmp
cltd
xchg
ss
mov
aad
pop
cmp
in
call
aam
sub
xchg
js
divl
cli
xchg
push
jne
repz
jl
jecxz
pop
pop
mov
sub
push
cmp
xor
cmp
pop
mov
lcall
mov
imul
arpl
gs
mov
xchg
int
jne
mov
mov
int3
push
xor
mov
movsl
add
inc
out
mov
pop
xchg
adc
lea
sub
ret
lds
mov
adc
or
cltd
sbb
sub
out
sbbb
ja
jp
notl
repnz
lods
xorl
jb
std
inc
out
jns
dec
push
gs
add
daa
jbe
mov
lahf
sbb
lds
sub
fsubrp
mov
sbb
repz
xor
xor
sub
je
pop
and
pop
mov
push
orb
shlb
mov
add
mov
mov
mov
mov
xor
mov
dec
cwtl
adc
imul
test
xlat
xor
sbb
push
and
mov
lea
jecxz
aaa
movsl
mov
negb
push
cmp
arpl
jg
scas
xchg
call
dec
pop
xchg
or
mov
jge
mov
push
sbb
inc
cmc
or
movsl
fdivrs
cmpsl
ret
iret
fbstp
nop
mov
jg
mov
fnsetpm(287
dec
loop
xor
scas
xchg
mov
cmp
mov
in
add
dec
test
aas
mov
mov
aad
sub
or
pop
mov
xchg
imul
fwait
add
dec
mov
in
mov
mov
push
das
xorb
int3
scas
jo
imul
mov
xchg
ret
mov
test
sub
jns
lahf
mov
xchg
enter
lret
sub
cltd
mov
jno
push
test
outsb
xchg
push
mov
ret
je
fcmovbe
adc
andl
xchg
jg
divl
scas
and
lcall
mov
xrelease
jb
sbb
cmpsl
xchg
faddp
not
mov
xchg
cmp
pop
out
cmp
repnz
mov
jb
sbb
stos
cld
inc
pop
mov
iret
inc
scas
add
adc
das
or
int3
mov
imul
cltd
cmp
cwtl
push
dec
sahf
aam
movsl
adc
fsubs
xor
popf
mov
push
inc
dec
mov
sbb
xorl
mov
push
jne
syscall
lods
insl
sarl
xorl
pop
fidivl
and
pop
cwtl
dec
mov
dec
mov
mov
xchg
loopne
inc
cmp
pop
jne
insl
fidivs
js
xchg
fsubrs
xchg
xor
mov
mov
cltd
or
out
jne
out
into
ljmp
jmp
push
cli
pop
shl
xor
fdivrs
clc
mov
and
mov
sbb
iret
stc
xlat
mov
add
outsb
pop
xor
push
ja
mov
mov
mov
push
mov
and
push
jno
test
in
mov
xlat
iret
popa
and
insb
in
jp
movsb
mov
or
imul
addr16
pop
scas
xchg
insb
mov
shrb
lret
mov
ret
bound
mov
or
xorl
test
or
mov
push
test
inc
sahf
pop
orl
mov
sbb
nop
mov
mov
cmpsb
cmp
jae
in
scas
roll
loopne
push
cwtl
adc
bound
mov
inc
stos
lcall
lea
in
adc
or
shrl
lahf
fists
sub
aaa
sahf
add
jl
stc
idivl
loope
push
imul
addb
push
mov
mov
dec
cmpsl
add
loope
ret
out
push
aaa
sarb
test
sub
fwait
mov
pop
mov
pop
cmpsl
cwtl
pushf
imul
xor
mov
adc
mov
mov
mov
inc
mov
lock
cwtl
je
jge
jno
jmp
call
pop
test
repz
jne
into
mov
or
lahf
xchg
pop
mov
mov
stos
mov
call
inc
imul
hlt
mov
lods
in
loopne
and
inc
mov
les
jns
xchg
or
out
lahf
push
mov
nop
sbb
mov
daa
sub
or
jns
mov
mov
mov
mov
mov
xor
cltd
outsl
inc
mov
mov
and
sbb
dec
xchg
jnp
adc
sbb
mov
imul
xor
lahf
out
in
inc
pop
popf
mov
scas
mov
not
ret
lods
push
shll
and
xor
jns
dec
pop
jle
bound
mov
fwait
js
jnp
and
or
sub
or
cld
ret
cwtl
pop
stc
enter
movsb
outsl
xchg
xchg
fs
mov
sarb
test
mov
loopne
mov
pop
int
mov
or
push
rorb
pop
mov
xchg
dec
out
mov
das
cltd
lret
sbb
iret
negl
cmp
xor
das
ret
pop
fldenv
les
jae
xchg
js
dec
mov
dec
inc
or
mov
jnp
lods
or
adc
cmp
adc
xchg
xchg
arpl
lods
mov
imull
in
xor
mov
lret
push
inc
pop
fisubrs
inc
inc
shlb
movsb
mov
lcall
mov
mov
cmp
jmp
dec
mov
mov
or
mov
add
je
mov
inc
sub
mov
jno
push
push
decl
scas
rcll
fsts
pushf
jg
mov
inc
push
jns
mov
std
jnp
cmc
cmp
out
clc
stos
fnsave
pusha
pop
or
push
in
inc
inc
sub
mov
fldl
movsl
pop
mov
stos
push
nop
mov
and
std
imul
cmp
cmpsl
push
pop
inc
hlt
ficomps
dec
mov
repnz
mov
imul
jns
cld
repz
into
and
iret
hlt
jns
or
arpl
int
cwtl
fwait
sbb
dec
sbb
jne
sbb
ja
xor
mov
dec
push
cwtl
mov
add
sub
dec
jl
icebp
mov
jb
pop
in
dec
jge
mov
test
inc
mov
and
fidivl
int
add
sbb
mov
mov
mov
divl
shlb
cmp
cs
mov
sahf
int
or
sub
dec
clc
sbb
cwtl
dec
xchg
mov
lods
cmovae
or
fcomps
ror
leave
scas
cmpsl
mov
xchg
mov
mov
js
xchg
push
jb
aas
cmc
mov
sub
ljmp
xlat
jp
loop
mov
push
inc
xor
lea
cmp
std
sbb
cmpsl
pop
imul
and
test
inc
pop
inc
push
push
pop
mov
dec
out
jb
cwtl
sbb
fsubrs
cli
insl
xor
ds
sub
push
mov
fucomp
push
push
test
scas
jae
cmpsb
scas
mov
stc
lds
mov
sbbl
aas
in
test
jae
lods
cs
pop
sbb
aad
mov
inc
cmp
dec
cmpsb
in
movsl
pop
mov
aaa
in
add
out
and
stos
mov
add
call
out
adcl
leave
xlat
sbb
and
xor
mov
mov
xor
xchg
xchg
mov
xchg
sub
push
and
cmp
jp
fdiv
out
mov
mov
aam
stos
add
push
jp
cmp
out
fistps
scas
sarl
mov
rclb
mov
mov
push
lret
mov
pop
fidivrs
or
repnz
pop
inc
shll
xor
loope
test
jg
iret
lock
cmpsb
jle
mov
dec
adc
arpl
lock
das
jns
cltd
pop
call
ja
mov
andl
push
aam
gs
mov
pop
pop
ret
lods
mov
push
add
push
push
xchg
fmul
xchg
mov
jl
pop
push
xor
loop
cmp
iret
jbe
popf
lods
dec
push
add
fidivrl
std
or
sbb
mov
cmc
push
adc
stc
rclb
cmp
aaa
jp
pop
or
xor
ja
scas
or
pop
mov
outsb
repz
jae
movb
std
inc
repnz
cli
pop
or
push
test
test
jbe
js
cltd
dec
repz
daa
xor
pop
in
and
lret
mull
pop
mov
ja
sti
jnp
xor
scas
pop
adc
xor
mov
jns
int
mov
imul
pop
mov
xchg
or
aas
loopne
mov
outsl
cmp
shrl
scas
lahf
mov
add
cltd
pop
mov
lds
xchg
test
jo
sbb
gs
lds
jb
repz
imull
clc
popf
pop
cmc
mov
xchg
sbb
out
sub
cmpsb
and
add
daa
rolb
adc
mov
mov
jbe
and
mov
mov
cmpsl
xlat
xlat
fildll
adc
scas
and
stc
lds
mov
in
jmp
jns
pop
lcall
xchg
mov
lock
mov
test
imul
sti
xbegin
mov
sahf
movsl
push
icebp
xchg
fadds
jno
jg
cmpsb
scas
pop
inc
fnstsw
pushf
cmpsl
lret
jae
xor
and
xchg
ja
repnz
push
fsubr
adc
dec
pop
mov
push
notb
es
es
sbb
sub
adc
pop
jp
jnp
mov
mov
in
jecxz
sub
pop
out
inc
xor
jo
mov
mov
push
imul
jge
fcomps
mov
ss
dec
mov
xor
mov
ret
shl
out
mov
mov
dec
jp
or
test
rorb
push
jmp
sbb
insb
out
rolb
push
mov
or
pop
frstor
stos
rclb
push
or
pop
mov
adc
outsb
fwait
xor
scas
data16
sub
add
mov
push
iret
cli
cmp
lret
push
arpl
xchg
xchg
mov
inc
inc
and
clc
push
cmp
pop
imul
adc
fmul
aad
mov
lgs
sahf
adc
aam
inc
xor
fwait
pushw
xchg
idiv
lds
mov
mov
mov
fwait
outsl
push
jbe
pop
xor
int3
adc
lahf
pushl
scas
imull
jns
or
fsubs
scas
dec
mov
mov
ja
mov
jo
mov
mov
aad
cmp
mov
mulb
bound
inc
movsbl
addr16
int
and
mov
pop
inc
lds
cmc
add
cmp
testl
punpckldq
pop
mov
pop
xchg
icebp
pop
pushf
xlat
lahf
mov
mov
inc
in
mov
pop
mov
and
push
out
push
lahf
adc
fnsave
mov
push
insl
int
outsl
in
hlt
mov
sarb
mov
pushf
fdivp
jmp
pop
hlt
mov
add
adc
sub
test
mov
cltd
cmp
outsl
and
nop
test
shlb
mov
into
push
xchg
mov
outsb
or
mov
scas
mull
imul
ret
mov
adc
add
xchg
pop
xor
xchg
xlat
and
enter
rep
pop
jne
fadd
popf
fmuls
push
movsb
leave
int
push
mov
sbb
scas
mov
fmull
dec
fsts
cmp
dec
xchg
mov
jbe
mov
rcrl
cwtl
push
das
fs
jl
popf
cmpsl
dec
insl
xor
imul
loop
or
xor
testl
in
and
sbb
insl
test
je
mov
xchg
insb
ret
das
jb
mov
and
imul
sbb
rcrb
test
sub
or
xchg
mulb
mov
aaa
aam
out
daa
xchg
mov
iret
or
lods
mov
rcrb
aaa
and
mov
mov
fistpl
mov
xchg
add
jnp
and
rep
push
mov
mov
dec
mov
fdivl
adc
push
aam
stos
scas
stos
hlt
pop
mov
mov
icebp
enter
mov
cmp
push
xor
addl
adc
sbb
ret
stos
sahf
sbb
lcall
fcompl
imul
add
outsl
mov
cmpsl
jns
mov
sbb
adc
mov
pushf
adc
in
mov
mov
daa
mov
xor
dec
fwait
or
sbb
xchg
mov
xlat
add
sbb
sbb
lret
mov
popf
arpl
mov
pushf
insb
in
call
scas
mov
mov
das
xchg
jns
loopne
push
pushf
push
out
and
lcall
jl
repz
xlat
outsb
inc
adc
mov
xlat
mov
ja
mov
lods
loop
addr16
dec
mov
sub
and
add
lock
mov
mov
mov
lea
xchg
aad
js
mov
dec
jnp
lcall
insb
orl
sub
mov
inc
pushf
je
pop
jns
pop
jae
scas
push
sbb
mov
jecxz
test
arpl
dec
cmpsl
sub
pop
add
lret
cmp
adc
push
ss
sahf
int3
insl
shll
push
pusha
mov
in
or
and
sub
outsb
mov
jp
xlat
bound
enter
int
loop
mov
icebp
cmc
mov
push
sarb
xchg
lahf
cmp
mov
stos
out
test
sbb
jmp
mov
lret
ja
cmp
sub
inc
and
cmp
sbb
test
inc
adc
cmp
mov
scas
sarl
das
rorb
mov
and
pop
popa
inc
movsl
xorl
dec
add
insl
push
cli
cmp
test
fnsave
xchg
or
imul
imul
push
sbb
ja
mov
mov
scas
xchg
add
fdivs
in
mov
cmpsb
rcrl
in
dec
and
leave
inc
cmp
jge
fwait
idivl
cmp
ret
ror
pop
mov
pop
or
add
out
sub
push
divl
or
mov
aad
cltd
jbe
outsb
mov
loopne
mov
push
aas
mov
cmpsl
cli
pop
mov
add
imull
mov
mov
lcall
mov
in
lods
xor
xchg
shlb
fs
les
aam
xchg
dec
loope
adc
mov
mov
mov
das
jmp
cltd
mov
mov
push
leave
jnp
gs
mov
xor
xchg
jne
iret
fwait
ja
dec
cmc
xchg
push
sahf
scas
lods
repnz
push
das
ss
int3
cmp
pop
and
mov
ffreep
test
ss
orl
movb
mov
outsl
add
mov
jno
or
pop
ja
mov
mov
hlt
mov
ret
insb
and
mov
sbb
mov
sub
fisttpl
in
cmc
cmp
repz
mov
je
test
mov
mov
loopne
dec
mov
cmp
adc
xchg
jns
iret
mov
nop
mov
mov
orb
mov
mov
add
xor
pop
fsubrl
inc
xlat
pop
fisubs
xor
pop
cmp
in
mov
add
or
mov
mov
sti
inc
pcmpgtb
addl
sbb
mov
pop
pop
addr16
scas
or
jns
mov
in
push
or
xor
xchg
pop
cmp
xchg
lret
sbb
cmp
mov
xchg
push
test
pop
xlat
or
xchg
jnp
ljmp
nop
and
xor
and
int3
mulb
cli
lods
cli
mov
xor
fidivs
dec
mov
jns
pop
cld
mov
fistpl
jne
orl
lcall
pop
sbb
jno
jb
pop
loop
sbb
stos
jg
stos
or
dec
addr16
lcall
push
cltd
xlat
stos
lahf
addb
inc
sbb
lret
cmp
imul
int3
xor
movq
add
mov
idivb
mov
mov
hlt
cltd
mov
mov
cmp
jbe
cmp
mov
pop
addr16
jae
loopne
pop
xchg
outsl
xlat
adc
sub
inc
outsb
xchg
rcrl
push
mov
mov
test
xor
mov
jne
cwtl
mov
hlt
addb
jecxz
sbb
jb
vmovss
adc
dec
in
loop
pop
xorb
push
pop
mov
fs
mov
mov
rclb
mov
cs
jmp
mov
stos
aam
mov
add
mov
shlb
mov
rcll
mov
das
repnz
mov
mov
or
sub
rcrb
mov
jo
repz
xor
jecxz
stc
iret
div
rolb
insb
pop
mov
fcompl
mov
ja
push
sub
dec
cld
cmpsb
mov
fs
enter
mov
push
mov
inc
lds
test
mov
rcl
aaa
divb
test
imul
cmpsb
xchg
test
mov
mov
mov
dec
xor
mov
loope
sub
jge
push
sbb
mov
xor
add
inc
scas
lcall
sbb
and
repz
or
and
lea
into
stc
inc
insl
mov
das
jns
mov
and
or
add
xor
sbb
cltd
lret
add
or
xchg
cli
jno
xlat
xchg
loop,pn
mov
in
sbb
into
push
mov
mov
test
jle
mov
shl
inc
insb
scas
out
leave
sbb
je
in
and
sbb
sti
xor
cmp
mov
xlat
sbbl
cmpsb
or
shll
fldl
daa
outsb
cmpsl
aaa
les
xlat
and
in
loop
push
test
inc
cltd
push
pop
mov
sbb
or
int
mov
sbb
inc
fdivr
mov
cmc
add
add
xor
bound
ds
jne
out
mov
adc
cwtl
mov
pop
mov
les
enter
cmp
out
adc
jbe
js
cmp
pop
push
xlat
stos
fisttpll
xor
nop
mov
sub
mov
jae
popf
data16
jne
cmp
out
adc
xor
sti
lea
jl
fdivs
insb
mov
in
outsb
or
push
jno
jmp
daa
push
sbb
lcall
or
push
mov
gs
or
xchg
pop
pushf
call
push
add
mov
test
mov
and
test
xchg
mov
inc
test
cmp
rcrb
cmp
xor
sbb
mov
scas
mov
mov
out
mov
or
mov
into
lods
xor
adc
xor
pop
inc
push
mov
ljmp
cmp
dec
fdivl
adc
iret
or
cwtl
push
jb
stos
cmpsb
cmc
rorb
sbb
cmp
test
mov
mov
mov
jmp
mov
ror
push
ja
in
xchg
xor
ljmp
push
out
sbb
inc
adc
out
jno
bound
mov
imul
cmp
imul
xor
sub
sti
mov
sbb
and
and
in
adc
hlt
call
mov
push
mov
inc
jge
test
daa
inc
cmpsb
cwtl
push
imul
push
fwait
dec
or
xlat
scas
or
hlt
pop
add
scas
xor
incb
xlat
and
dec
call
leave
fscale
xchg
loope
in
xchg
xor
xchg
push
stos
mov
lods
stc
in
repz
dec
aaa
loope
sub
in
mov
dec
mov
outsl
sub
xchg
sahf
pusha
les
mov
pop
inc
and
pop
nop
push
popa
mov
xlat
addb
jo
push
mov
push
push
mov
adc
mov
cmp
lcall
cmpsb
or
das
outsb
mov
cmpsl
arpl
mov
cmp
mov
adc
cmpsl
aam
lret
repnz
test
xchg
xchg
ja
add
mov
cmp
cmpsl
push
mov
fmul
mov
xor
aaa
mov
xlat
xchg
add
cvtps2pd
mov
idivl
aam
lock
sahf
jg
mov
orl
out
je
sbb
lods
aaa
and
cmpsl
xchg
cmc
loope
sbb
pop
cltd
add
xchg
mov
mov
cmovge
dec
mov
leave
inc
sub
jb
push
scas
mov
xchg
icebp
push
sti
mov
mov
stos
mov
test
jnp
imul
cmp
add
lret
pushl
ret
adc
testl
mov
mov
mov
sbb
stos
mov
inc
lods
add
mov
pop
mov
es
cmpsl
jae
enter
pusha
cmp
inc
pcmpgtd
mov
adc
push
jne
mov
xorl
mov
test
imul
dec
in
mov
insl
in
push
mov
clc
lahf
add
cmpsl
cltd
addb
xchg
test
imul
scas
push
call
addr16
cmpb
das
lods
mov
adc
push
cmpsb
lds
sub
lahf
popf
das
aas
pop
sbb
enter
das
popf
nop
scas
pop
dec
cmpsb
aad
mov
and
or
daa
push
xchg
mov
loop
push
lea
cld
inc
jmp
lahf
fisubl
fcomps
or
sub
mov
test
testl
cli
movsb
or
mov
push
les
rolb
aas
out
inc
pop
fcoms
push
mov
imul
idivb
sahf
pop
sbb
mov
inc
jne
add
mov
push
inc
cmp
repnz
arpl
lock
jo
mov
push
aam
cmp
hlt
lds
mov
adc
fldl
push
add
divb
or
xlat
fimuls
mov
ljmp
jae
daa
scas
cmpl
rcrl
xor
mov
adc
jbe
sbb
xor
mov
cmp
sub
xlat
push
adc
add
jns
mov
jmp
mov
mov
test
outsb
jle
mov
add
enter
inc
imul
and
mov
fdivs
cli
test
or
xlat
pop
das
js
jb
test
mov
and
mov
dec
out
int3
aaa
push
mov
cmp
mov
lahf
nop
push
jnp
jecxz
fistps
dec
hlt
cmovnp
sbb
cwtl
imul
rcl
mov
lcall
push
dec
enter
sbb
or
inc
inc
xchg
pop
dec
adc
scas
mov
or
lds
ja
das
mov
xchg
popf
icebp
xor
cmpsl
jp
inc
or
cmp
mov
push
test
mov
mov
push
cltd
je
imul
jl
mov
dec
pusha
xor
subl
add
mov
divb
pushf
out
xor
cmovno
mov
xlat
lds
pop
add
mov
dec
pop
xchg
dec
mov
fldenv
lods
mov
packuswb
iret
pushl
testl
pop
jge
int
stos
push
mov
adc
and
hlt
ret
jns
sbb
sbb
inc
clc
mov
and
mov
push
loopne
scas
mov
fmul
jb
stc
push
lahf
scas
scas
inc
lret
mov
mov
inc
jne
sbb
imul
sbb
cmp
jge
cmpl
xor
pop
loope
dec
mov
xchg
dec
xchg
adc
mov
add
pop
adc
imul
push
das
test
and
add
xor
std
repz
pop
mov
pop
mov
insl
sbb
mov
lret
loope
sahf
ljmp
mov
sbb
xor
and
xlat
mov
adc
xor
mov
mov
jl
mov
out
cmpsb
aaa
dec
shl
add
bound
cwtl
inc
jg
xchg
push
inc
cmp
clc
adc
mov
scas
popa
jns
mov
push
lds
cmp
mov
mov
push
pop
xchg
inc
dec
jns
pop
aad
stos
jmp
mov
pop
cmpl
inc
jecxz
outsl
dec
inc
jne
popa
xchg
xchg
adc
mov
ficompl
lods
xchg
mov
or
repz
loop
mov
jne
ljmp
pop
cmp
not
mov
mov
jmp
push
cmp
inc
mov
lock
pop
dec
mov
aas
cmp
mov
mov
in
pop
mov
mov
push
adc
jno
dec
xchg
mov
out
les
adc
mov
mov
dec
push
xor
mov
lcall
mov
mov
outsl
or
add
jae
jp
inc
sarb
js
mov
or
dec
dec
mov
mov
gs
dec
and
fwait
addr16
jge
mov
sbb
jnp
jmp
mov
or
shll
cmc
cmpsl
cld
adcl
clc
lcall
mov
out
xor
jnp
or
call
push
stos
stos
cwtl
jmp
push
in
into
in
mov
mov
sahf
inc
repnz
fiadds
inc
add
add
mov
loop
and
xor
pop
mov
dec
sbb
js
dec
test
sbb
lahf
sub
into
mov
adc
andb
movsl
outsb
push
test
dec
rolb
add
xchg
stos
jbe
or
aam
sub
loopne
loope
xchg
dec
cmp
fiadds
je
cmpsb
lea
mov
cli
popf
sbbl
mov
pop
stc
scas
dec
mov
sbb
xchg
scas
nop
lahf
in
mov
fstpt
daa
push
insb
cltd
popa
adc
addr16
dec
and
aaa
movq
inc
sbb
orb
add
repz
fadd
subb
ds
outsl
sbb
sbb
adc
dec
leave
shl
aas
cwtl
sahf
pop
jns
lcall
mov
testl
scas
or
xor
xchg
mov
and
out
pop
push
repz
inc
jg
arpl
jnp
jl
cmp
ja
xchg
push
mov
fcomp
mov
imul
mov
movsl
or
out
in
mov
gs
test
test
sbb
xor
mov
xchg
xchg
xchg
rorb
out
pop
dec
bound
insb
jns
jne
cs
mov
addr16
mov
leave
xchg
pusha
mov
sbb
aam
fldcw
and
cli
mov
mov
xlat
xchg
adc
xor
lods
rcll
fisttpl
mov
pop
cmp
daa
arpl
push
xchg
inc
add
mov
arpl
test
pop
or
psubd
push
sub
mov
jns
imul
in
int
mov
dec
popl
arpl
add
btc
aas
mov
xchg
xor
cmp
in
rcrb
cmc
push
mov
bnd
sbbb
mov
jle
mov
sbb
int3
fwait
mull
or
lds
fcmovbe
mov
leave
mov
or
lret
scas
aam
sbb
pop
add
and
jl
mov
inc
mov
pop
stos
add
jns
hlt
mov
icebp
xchg
stos
ret
jge
xor
pop
inc
mov
scas
mov
sbb
xorl
subl
adc
xchg
insb
mov
mov
sbb
push
mov
lret
dec
push
mov
xor
les
push
mov
sbb
xchg
cmp
dec
sub
cmp
popf
cmpl
loope
cmpsl
mov
mov
out
xor
add
addr16
and
iret
mov
xor
leave
adc
shlb
insb
inc
or
in
arpl
lahf
in
xlat
imul
xorl
mov
stos
mov
iret
aas
mov
pop
sub
or
ficoml
stos
sbb
ror
sbb
jl
push
adc
mov
sub
imul
stos
fbstp
mov
inc
cmp
stos
xor
mov
ss
pop
out
cmpsl
mov
std
inc
in
mov
hlt
lahf
rorb
xchg
jnp
sub
incb
mov
adcl
xor
call
xchg
mov
and
int
xor
cmp
fwait
aad
and
aam
xchg
pop
outsb
xor
pop
adc
pop
shlb
push
in
movsl
rcrl
sbb
mov
test
mov
cld
mov
cmp
fisttps
rcll
adc
and
in
test
js
lods
xchg
xchg
popf
cmp
test
imul
sbb
dec
fiadds
jne
fdivrs
cmp
jnp,pt
leave
sbb
enter
jnp
call
dec
cmp
inc
rorl
xlat
cli
cmp
xabort
popa
push
mov
mov
cmp
adc
jns
inc
mov
mov
popf
fildll
stos
jg
loop
arpl
and
push
jns
mov
mov
fstps
fildl
sar
or
or
loop
sub
mov
lahf
and
aad
nop
and
mov
xchg
arpl
outsb
lods
repz
jnp
add
push
xor
push
mov
add
mov
mov
xchg
mov
sahf
fwait
sbb
int3
cmp
push
fwait
pop
lea
xor
cwtl
jb
std
xchg
push
push
test
test
and
jbe
pushl
bound
hlt
add
stos
inc
dec
pop
pop
outsb
cmpsl
cmp
mov
shrb
sahf
lods
mov
sub
pop
bound
dec
fistps
xchg
insl
push
and
jae
mov
idivb
popa
mov
push
inc
mov
lea
fisubrs
out
jno
sub
in
mov
sbb
cmpsl
outsl
loope
and
cmp
dec
xchg
jae
ret
xchg
dec
scas
movsb
add
enter
repz
xchg
fdivl
aaa
push
push
aaa
adc
or
dec
loop
stc
xchg
xor
popf
clc
into
pusha
push
xchg
sti
aas
sub
lea
shrb
mov
mov
or
xor
lods
push
mov
push
ret
aaa
add
fldt
in
cld
and
inc
adc
cwtl
inc
popa
mov
xlat
scas
push
movsb
cmpsl
ffreep
cmp
adc
mov
adc
or
inc
negl
not
mov
das
xchg
xlat
lret
xor
outsl
mov
mov
addr16
mov
fs
icebp
sub
and
fwait
pop
lock
add
adc
inc
testl
stc
mov
scas
rcrb
jl
push
sarl
hlt
in
sbb
xchg
pop
lcall
stos
mov
mov
or
xchg
popa
orb
clc
cmpsl
pusha
mov
pop
cld
pop
shlb
adc
stos
lods
cwtl
jl
test
jo
pop
out
mov
push
popf
arpl
imul
mull
sub
cli
mov
daa
stc
mov
mov
mov
jl
pusha
cmp
jno
mov
jbe
divl
cmpsb
pop
out
aad
mov
jb
inc
dec
nop
push
pop
sub
and
cmp
test
repz
into
mulb
lcall
fdivs
std
imull
xchg
mov
inc
mov
fs
mov
mov
loope
inc
pusha
loop
lds
arpl
imul
fistps
cmpsl
mull
divl
bound
sub
pop
int3
cmpsl
cmpsl
imul
mov
and
pop
mov
sbb
mov
pop
pushf
dec
cltd
pop
mov
pop
scas
cmpsl
loop,pn
adc
cltd
dec
stos
jno
add
mov
popa
fwait
aas
lods
mov
ret
and
mov
mov
dec
pop
mov
aaa
jnp
popf
jge
jmp
mull
cwtl
test
aam
shlb
inc
mov
xor
jb
mov
and
mov
cmp
ret
cmp
sbb
dec
xor
ret
xlat
shr
xchg
xchg
movsl
xchg
xor
test
mov
enter
push
xor
sbb
xlat
sbb
mov
pop
aad
add
jns
sbbl
adc
icebp
js
cwtl
pop
repnz
adc
xor
jg
xor
addr16
jb
popa
aas
jge
insl
add
repz
test
xchg
cmpl
jle
pushf
sbb
cmp
shll
sti
adc
enter
rcr
xchg
push
and
xchg
cmc
jns
xchg
mov
jg
dec
mov
insl
mov
movsb
dec
repnz
insb
pop
mull
ja
pop
jl
bound
mov
add
cs
fsub
fsub
mov
dec
aam
cmpsb
pop
push
das
add
mov
dec
sarl
mov
xchg
pop
out
aam
mov
shrl
mov
sahf
outsb
adc
lea
jecxz
pop
cltd
cmp
mov
mov
push
xor
jecxz
movsb
clc
adc
sbb
sbb
mov
das
lcall
xchg
mov
pop
jbe
xchg
inc
push
sahf
xchg
mov
cmpsl
jo
cld
int3
fstpt
pop
pop
fsubl
pushf
mov
imul
repz
mov
das
movsl
mul
mov
repz
mov
pop
mov
cmp
clc
push
pop
cmpsl
cmp
ret
insl
aas
xlat
xor
negl
test
mov
aaa
mov
ret
mov
inc
sbb
adc
push
or
sti
scas
jne
inc
cmp
mov
xchg
cmpsb
sidtl
popa
xchg
mov
jno
mov
push
xchg
xor
mov
sbb
sbb
adc
pop
mov
jno
pop
scas
outsl
out
mov
ss
jp
mov
pop
les
incb
cmpsl
or
iret
cwtl
fwait
es
mov
int3
insl
jns
faddl
lret
lret
xchg
mov
sbb
mov
mov
movsl
pop
sti
mov
mov
push
cltd
jno
aam
cmpsl
inc
ljmp
pop
push
jns
lret
insb
cmp
int3
push
mov
test
cmp
mov
int3
and
aad
ljmp
je
adc
cmp
dec
out
mov
test
aam
lods
push
mov
xchg
xchg
dec
pop
cmpsl
push
rorl
xchg
jo
rorl
pop
lret
xchg
mov
cltd
push
test
cmpsl
fs
rol
mov
sub
xor
out
and
fdivrs
jle
dec
fsubrp
sti
mov
sub
scas
add
jnp
or
mov
repz
sbb
cmpsl
or
mov
mov
and
or
lods
xchg
inc
adc
inc
jns
mov
stos
outsb
mov
pusha
daa
repz
mov
mov
xchg
fsubrs
jnp
in
test
aad
mov
test
in
pushf
clc
int3
mov
loope
pop
or
mov
pop
imulb
popf
in
pavgb
mov
inc
or
fcoml
mov
aad
mov
pusha
jns
in
jb
testl
adc
cmp
mov
fwait
dec
std
cmp
mov
jge
cld
lock
pop
cmp
push
stos
iret
jae
sbb
pushf
mov
or
jmp
jo
cmp
loopnew
out
sub
popa
inc
lods
test
xor
sub
mov
add
xlat
and
bound
test
mov
sub
insl
and
test
xchg
jae
movsl
xchg
lds
repnz
xchg
cld
cmp
pmullw
in
xlat
xlat
jle
rorb
push
and
out
ss
or
mov
aaa
dec
aas
stc
xchg
xor
jmp
sahf
push
stos
sbb
fistpl
xlat
lcall
push
adcl
pusha
shlb
pop
inc
std
inc
shll
je
sub
aaa
aaa
sbb
test
scas
mov
push
add
dec
shll
jns
ljmp
popf
dec
pusha
shr
push
out
and
test
imul
aaa
daa
inc
clc
andb
jmp
and
push
dec
xor
cmp
mov
cmp
cltd
fdivr
lret
or
mov
push
and
pop
sarl
repnz
dec
fldt
mov
xor
movsb
scas
xor
sbb
push
xchg
leave
mov
das
push
add
cmpsl
lock
sbb
sub
inc
mov
mov
sbb
pop
lds
xor
jae
sar
mov
mov
lret
inc
and
mov
xchg
push
jp
sub
add
daa
xchg
inc
push
jb
jle
ja
mov
andl
rcrb
xlat
push
sbb
pop
fwait
mov
aaa
xchg
sbb
sahf
stos
popa
mov
movsl
lret
lods
fnstsw
cmp
mov
dec
mov
std
es
hlt
sub
push
mov
pop
out
psubw
mov
sub
jmp
test
shlb
cmpsl
mull
dec
push
adc
enter
or
mov
push
push
test
divl
enter
lret
jge
mov
lcall
jl
xlat
xor
jb
iret
jg
mov
mov
push
pop
dec
inc
sub
insb
and
leave
pop
std
xlat
shlb
dec
cmpsb
stc
sbb
add
testl
lods
push
faddl
aad
xor
dec
mov
xor
scas
jge
ret
xchg
pop
std
pop
enter
mov
sub
add
dec
cmpsb
mov
mov
push
stos
in
repz
popa
jnp
push
aad
cmpsl
adc
add
sub
cmpsl
fmuls
jle
xlat
xor
aaa
jne
inc
xor
xor
test
rcr
jnp
mov
jg
xor
push
cmp
daa
cmpsl
orb
enter
cmp
test
sub
lds
insl
fnstsw
pop
enter
sbb
push
or
sti
xchg
enter
pushf
cmc
mov
mov
dec
push
cmp
clc
dec
sub
fcmovbe
in
idivl
xorb
arpl
mov
out
cli
mov
out
sahf
js
movsl
sbb
sbb
push
sbb
fadds
sbb
jns
ss
mov
adc
jg
daa
mov
stos
in
add
jo
int3
scas
mov
and
cmp
sahf
hlt
mov
sbb
pop
out
push
push
popf
stos
xchg
scas
fdivs
ja
out
jbe
or
xchg
sbb
bound
xor
and
or
cmp
loope
stos
inc
cltd
xor
sub
mov
cmp
push
or
ja
cmp
cmp
jne
jbe
xlat
int3
sub
and
push
test
mov
out
mov
sub
jle
int
mov
stos
mov
outsb
mov
ds
sbb
dec
xlat
sahf
dec
negl
dec
outsb
test
or
repz
or
les
or
js
mov
mov
movsl
mov
stc
mov
inc
scas
scas
xor
shlb
js
mov
aam
aas
std
push
fnstenv
cld
orb
and
sub
and
sbb
addr16
shll
popf
fsubrs
test
mov
push
popl
stos
leave
pop
cmp
fcomi
adc
icebp
cmpb
arpl
jo
repz
mov
mov
mov
pusha
sti
aam
movsl
mov
cwtl
mov
jbe
jae
cwtl
push
mov
lds
push
xor
dec
cmpsl
sti
inc
jmp
outsb
jp
repz
ret
sub
mov
loop
repz
iret
lcall
cwtl
gs
aad
test
jmp
inc
in
fucom
ret
idivl
xor
data16
xor
test
shll
and
daa
mov
mov
dec
jne
mov
insl
jnp
das
pop
jno
stc
dec
xchg
fwait
mov
stos
add
fabs
ss
mov
icebp
xchg
adc
sbbl
aaa
idivl
xor
sbb
inc
cwtl
xchg
inc
enter
dec
sar
push
jns
ds
dec
out
cmc
xchg
inc
rolb
cwtl
fidivl
mov
mov
dec
test
nop
dec
mov
adc
je
subb
lea
loopne
shll
sbbl
mov
sbb
call
and
ja
cld
mov
cmp
rclb
mov
scas
int3
dec
add
rcl
xor
cmp
cld
data16
mov
repz
movsl
mov
sub
adc
cmp
cmp
mov
test
sbb
cmpsl
or
push
cmp
cmp
ja
pushf
scas
sbb
mov
adc
mov
mov
add
sbb
cmpsb
inc
iret
out
xchg
push
push
xchg
lahf
adc
test
mov
pop
gs
ja
dec
jp
xlat
add
repz
imul
jl
fs
popf
and
inc
lret
loope
dec
iret
jns
loopne
dec
fistpl
xlat
sbb
and
movsl
mov
push
repnz
cmp
xor
jle
arpl
fwait
sbb
or
ficomps
in
mov
loope
sbb
cmp
pop
cwtl
mov
mov
push
fcoml
mov
movsb
dec
loop
cmpsb
test
lds
mov
aad
adc
mov
xchg
jge
lds
call
scas
and
pop
and
mov
outsb
fisttps
jno
jle
pushf
mov
cmpl
inc
mov
sub
enter
mov
testb
push
adc
outsl
xlat
sbb
jp
addr16
sbbb
mov
lods
mov
lret
or
pop
repnz
imul
dec
stos
adc
and
scas
mov
popf
enter
shlb
xchg
pop
sub
mov
add
mov
lods
sbb
mov
cmp
pushf
push
mov
adc
fsts
fcoms
in
int3
mov
cmpsl
les
pushf
mov
xchg
subl
sbb
mov
mov
divb
mov
dec
stc
outsl
lods
xchg
mov
sub
jecxz
jg
push
int3
shll
xchg
jp
and
cmpsb
jo
sbb
mov
mov
push
mov
add
jae
scas
ja
xor
jl
jno
pop
sub
mov
mov
mov
imul
std
cmp
mov
xor
lods
push
div
or
jp
pop
mov
mov
jg
sub
or
pop
lret
jl
int3
mov
movsl
movsb
mov
pop
mov
adc
fs
sbb
pop
hlt
clc
add
data16
mulb
pop
sbbl
jb
mov
in
mov
shr
jp
pop
cli
or
cmpsl
jl
jae
mov
hlt
pop
mov
push
push
andl
popa
and
adc
mov
cmc
add
cld
adc
mov
mov
or
xor
mov
ltr
pop
popa
fdivrl
jge
sub
xchg
sbb
ss
mov
cmp
adc
pusha
movsb
cmpsl
test
and
cmp
push
aad
movsl
or
mov
and
stc
adc
mov
sbb
jns
shlw
outsb
and
aad
cltd
xlat
fs
sub
xor
and
cmp
cmc
push
xchg
orl
pop
push
add
cmpsl
ds
lock
push
aad
repz
mov
cltd
nop
push
sub
mov
sub
mov
cwtl
jo
imul
and
mov
xchg
imul
aad
fdivs
xchg
jne
sub
idivl
xor
pop
shll
sbb
or
imul
jmp
and
push
push
push
xchg
gs
xor
adc
mov
xchg
inc
add
dec
mov
pushf
iret
and
imul
push
leave
mov
insb
das
mov
push
lret
in
scas
mov
sub
pushf
shlb
sbb
into
test
mov
in
iret
or
xlat
scas
cmpsb
aam
mov
and
lahf
loop
and
mov
sub
sti
cmpsl
jo
adc
mov
js
mov
out
movb
jle
insl
and
movsl
lcall
sbb
mov
mov
push
repz
dec
call
shr
iret
jno
bound
mov
lret
sbb
rclb
mov
pop
cbtw
mov
ja
inc
jo
mov
mov
lahf
test
mov
xchg
or
cmp
out
xor
std
mov
loopne
les
sub
orl
xor
stc
or
in
lods
jge
es
lret
ret
or
movsl
lods
lock
jae
popf
mov
imul
sbbb
test
pop
jle
xor
dec
xchg
mov
sahf
pusha
mull
mov
mov
out
sbb
add
clc
add
push
and
adc
mov
inc
or
sbb
arpl
cmpsl
mov
and
or
repz
daa
add
jns
lret
in
in
mov
adc
dec
scas
enter
repz
xlat
hlt
mov
mov
sbbl
xlat
cs
negb
lds
lds
cmpsl
mov
ret
add
sti
pushw
xor
inc
cmp
xchg
in
divl
or
sub
jbe
bound
in
dec
jmp
jns
and
sub
push
cld
adc
mov
and
push
mull
cmp
adc
cmp
lcall
xchg
gs
mov
mov
int
ret
xchg
in
jp
sub
push
xor
fdivrs
ds
cmpsb
call
mov
xor
mov
and
jno
scas
popf
or
pushf
outsb
mov
aaa
std
mov
aas
test
or
adc
xchg
movsl
nop
repnz
mov
add
rclb
mov
rcrb
je
mov
mov
pop
lods
inc
nop
jle
shrb
mov
mov
push
daa
sub
xor
mov
sbb
sahf
inc
xchg
imull
aaa
pop
mov
fildll
cltd
xor
call
test
dec
lcall
loop
mov
mov
inc
mov
sbb
or
cwtl
dec
xor
inc
and
fsubs
xchg
es
stos
loope
out
ss
adc
sbb
inc
repz
mov
mov
dec
mov
data16
ret
pop
jl
cmpsb
dec
cmp
or
xchg
test
mov
cmpsl
dec
stos
add
ja
mov
mov
stc
rclb
jl
es
sub
ret
mov
ljmp
addb
pop
arpl
jp
hlt
lahf
xor
inc
push
xor
cwtl
adc
xchg
jp
std
mov
xchg
push
dec
inc
cmp
outsb
mov
and
mov
jmp
lret
mov
cwtl
clc
dec
testl
xchg
outsl
mov
hlt
mov
das
xchg
ja
cwtl
jne
sbb
cmpsl
adc
jg
loopne
fs
stc
shlb
mov
sarl
icebp
mov
adc
popf
mov
arpl
mov
dec
fldl
neg
movsl
inc
dec
jp
pop
adc
pushl
xchg
xchg
cmpsl
xchg
xor
cmp
pop
rolb
data16
lds
jns
mov
arpl
mov
test
xchg
push
mov
xlat
in
imul
inc
std
js
mov
xchg
push
adc
test
aad
push
jne
stc
fwait
mov
pusha
shrb
push
xlat
aam
outsb
add
jmp
sbb
test
adc
ds
or
sbb
mull
inc
mov
popa
mov
mov
cwtl
rclb
sti
sbb
push
aas
cwtl
jns
mov
cmp
nop
bound
fwait
out
jg
mov
adc
rol
mov
mov
mov
enter
mov
xor
mov
leave
test
cltd
shlb
inc
xchg
imul
sbb
or
das
mov
pop
dec
arpl
aad
in
stc
dec
movsb
aam
jb
xchg
cmp
imul
sar
push
insl
cwtl
dec
incl
xorl
push
lret
pop
or
mov
push
push
mov
dec
ja
cli
dec
repnz
jl
and
sbb
leave
sarb
subl
aam
or
sbb
aaa
imul
cmc
sub
pop
imul
shr
mov
sahf
aas
jecxz
push
negl
gs
mov
mov
adc
jns
push
loop
imul
aam
xlat
insb
movsb
pushf
fs
and
stc
fdiv
xchg
lret
sbb
pop
pop
fnsave
scas
test
mov
mov
or
rcl
ds
mov
cli
inc
sbb
mov
fcoml
rclb
ficoml
xorb
daa
add
mov
mov
or
mov
mov
xchg
stc
jmp
mov
dec
pop
mov
jp
lcall
xlat
lret
cmp
stos
cmp
ret
sub
xor
aad
add
mov
aaa
jnp
mov
add
lock
and
sbb
mov
sbb
jmp
or
js
mov
xlat
dec
ljmp
mov
jmp
pop
fdivp
and
popa
mov
scas
mov
sahf
mull
cld
xor
cmpb
mov
jle
sti
mov
cwtl
je
pop
mov
leave
idiv
and
mov
sbbl
fst
rcrl
loopne
xchg
ffree
lods
mov
iret
inc
rolb
popa
sub
and
xor
mov
push
mov
xchg
cmp
mov
loope
out
fwait
addr16
and
cmp
testl
faddl
test
insl
jecxz
mull
jmp
push
sbb
scas
mov
movsl
ja
loopne
loope
int3
pop
mov
fiadds
adc
cmpsb
jg
push
popa
xlat
popl
jb
adcb
repnz
dec
mov
sbb
mov
mov
fwait
mov
xor
mov
ss
and
mov
pop
repz
mov
mov
xlat
adc
out
cmc
pop
sub
in
sbb
mov
js
lcall
cwtl
lock
jp
icebp
cmpsl
aad
sub
xorl
sarl
inc
sub
in
mov
push
mov
jne
push
scas
jmp
or
enter
das
inc
push
jg
jp
leave
sarb
or
mov
sbb
sub
lea
das
testl
push
cld
stos
or
fimuls
sub
sbb
mov
sbb
pop
push
setnp
push
add
mov
fildl
pop
into
daa
enter
cmpsl
mov
add
mov
testl
sbb
ljmp
jnp
adc
int
jle
xor
mov
nop
mov
mov
fiaddl
mov
sahf
xor
lods
mov
aam
imul
lret
dec
cmp
sbb
outsb
pop
cmp
rclb
mov
cmpsl
mov
fdivr
in
stos
dec
je
mov
insl
jp
dec
out
lcall
cmpsb
gs
mov
arpl
adc
dec
sbb
and
mov
ljmp
cmp
fabs
fisubl
mov
sbb
int
inc
inc
dec
mov
pop
es
mov
mov
xlat
cmp
mov
pushf
out
mov
leave
mov
cmpsb
aaa
xor
and
xor
loope
in
lret
push
jl
jns
int
cld
mov
and
lea
xlat
mov
sbb
push
push
xchg
or
mov
out
xchg
bound
adc
pusha
mov
cmp
xchg
lods
jb
and
mov
andb
fdivrs
xor
loop
into
daa
fdivl
push
lods
pop
push
test
jg
loop
sar
aad
and
iret
lret
dec
cmp
mov
dec
ret
mov
xor
add
mov
or
add
insb
inc
cmpsl
mov
int
inc
lea
mov
rolb
or
test
roll
mov
sub
cmp
and
fsin
in
ret
adc
push
xor
out
mov
scas
sub
mov
cltd
loop
test
sub
add
outsb
and
cmpsl
and
jecxz
stos
negb
push
mov
jge
bound
jnp
inc
rcl
out
add
std
aam
mov
fisubrl
aaa
mov
aad
xchg
mov
cwtl
ret
ss
pop
cmp
pop
xchg
mov
out
repnz
call
popf
arpl
int3
sar
push
pop
sub
jo
sbb
mov
cmp
xorl
insb
dec
es
mov
mov
or
pop
adc
loope
sbb
pop
stos
lods
mov
repnz
add
push
insb
add
pop
adc
pop
je
cmp
decl
push
pop
out
pop
cmpsl
fistpll
popa
mov
and
lock
fildll
cltd
jge
mov
dec
pop
insb
repnz
loopne
dec
out
adc
loop
out
hlt
xchg
mov
rcrl
sarb
loope
sub
rcll
cmp
inc
pop
xchg
nop
xchg
inc
sub
test
xlat
aad
cmpsb
gs
call
push
mov
add
push
add
jae
mov
mov
inc
pop
fsubrp
mov
lods
or
fdivrl
lods
xlat
mov
xor
or
mov
fildl
cmpsl
mov
popf
cmpsl
test
jl
jo
popa
fs
push
or
jle
xchg
cwtl
cltd
fucom
xchg
mov
les
xchg
ret
mov
ret
add
mov
adc
imul
xchg
jno
mov
pop
fldcw
pop
push
sub
jo
sbb
shlb
jle
fcomps
aaa
mov
imul
popf
or
xor
fnsave
lret
pop
popf
inc
test
mov
iret
gs
cmp
in
dec
mov
push
inc
lock
roll
sti
xchg
dec
aaa
add
push
test
cmpsb
lods
hlt
rcrl
adc
mov
pop
pop
jp
pushf
mov
scas
add
inc
sbb
and
jo
inc
outsb
cmp
subb
insb
rolb
xchg
sbb
adc
scas
ret
jmp
je
mov
adc
jnp
leave
and
cltd
div
sbb
or
mov
imul
aas
es
lret
cmp
imul
int3
out
or
stc
push
cmp
sbb
add
pusha
inc
dec
pop
mov
xchg
pushf
dec
iret
test
out
sbb
jbe
mov
lock
add
inc
mov
mov
pop
or
mov
pop
push
adc
cwtl
pcmpeqw
out
dec
test
xlat
cmp
testb
xor
jge
mov
data16
insb
mov
mov
outsl
pop
xor
inc
xor
movsb
sbb
insl
sbb
adc
out
pop
jo
movsl
push
xchg
xchg
test
jl
lds
push
inc
or
cmp
inc
xchg
int3
mov
xchg
jnp
movsl
loope
mov
data16
mov
mov
adc
xchg
loop
stc
cmp
dec
cmp
lock
xchg
jmp
push
js
add
arpl
mul
mov
daa
jno
fadds
jo
mov
mov
push
mov
shll
jb
mov
adc
sub
in
pop
out
pop
xor
cmp
cld
fcoms
inc
mov
movsb
movsl
add
mov
or
jbe
mov
xorb
popa
mull
sbb
lods
repz
inc
out
pop
and
sbb
pop
mov
outsb
aaa
cmp
stc
clc
stos
das
lret
xlat
and
push
sbb
imul
cwtl
add
jne
push
loope
mov
dec
bound
dec
outsl
mov
pop
lcall
mov
dec
ljmp
cmp
mov
imul
jnp
cltd
sbb
icebp
sti
popf
ret
fdivl
sub
inc
testl
or
int
scas
sbb
nop
enter
cmp
fidivs
sub
lahf
jl
cmpl
imul
sub
push
inc
call
int3
mov
or
push
cmp
jmp
shlb
add
ss
idivl
push
sbb
in
xlat
loope
or
cmpsl
jle
cld
mov
shl
fst
cmpsl
imull
sbb
xchg
loope
pop
imul
jg
test
aam
js
xlat
xchg
jmp
xchg
ja
sbb
mov
loopne
mull
xor
pop
mov
call
jns
mov
mov
mov
mov
cmp
sahf
and
xchg
jae
addr16
xchg
mull
mov
test
dec
mov
sti
orl
out
xlat
xor
call
cmp
jbe
push
mov
adc
movmskps
add
xor
jo
xor
mov
xor
andl
sahf
push
sub
cmpsl
sbb
mov
filds
sub
popa
test
jne
leave
adc
xlat
aas
pop
dec
sub
scas
in
push
jo
addl
or
es
pop
dec
xor
pop
movsl
lods
push
mov
shrl
mov
idiv
lds
mov
leave
mov
mov
hlt
pop
ds
sbb
in
out
repz
dec
sbb
movsl
fildl
stos
fisubrs
mov
mov
sbb
faddl
mov
sahf
push
inc
arpl
pushf
xchg
push
mov
inc
mov
or
nop
fidivrl
pushf
inc
loope
std
jge
mov
sti
pop
adc
nop
rcll
mov
xor
sbb
mov
xchg
loop
and
inc
cmpsl
repnz
loopne
popa
dec
scas
icebp
leave
cs
sbb
dec
bndldx
jge
xlat
mov
mov
mov
xchg
xchg
xchg
stos
push
sub
imul
adc
sbb
or
rcrl
pop
mov
fwait
push
xchg
in
mov
pop
cli
xor
cs
add
fisttpll
pop
divl
inc
cwtl
xor
add
lock
jge
and
cs
push
push
pop
add
lret
jmp
push
mov
add
loopne
mov
daa
js
or
imulb
cmpsl
and
push
adc
fdivrs
push
sub
add
mov
inc
inc
pop
dec
popa
test
dec
imul
dec
pop
stc
ret
int
test
add
scas
push
andl
inc
adc
mov
jne
inc
mov
pop
fdivrl
mov
pop
jl
je
mov
rorl
lahf
adc
xchg
stos
fisttpll
cmpsb
cwtl
mov
int3
scas
out
fsubrl
in
lea
sbb
jo
testb
mov
addr16
inc
fistpll
repz
sbb
cmp
sub
sub
jb
pushf
mov
or
mov
stos
mov
fidivs
mov
xchg
mov
or
xchg
fldl
dec
and
sbb
aad
inc
pop
or
divl
lods
mov
dec
lret
fsubr
adcb
inc
mov
cwtl
int3
xor
adc
add
pushf
jge
cwtl
mov
shl
jae
test
outsl
push
js
mov
inc
xlat
cmc
rorl
nop
int3
test
lds
pop
rol
add
mov
adc
scas
repz
idivb
mov
pop
gs
pop
mov
xchg
xchg
push
pop
cltd
lea
push
insl
mov
push
pop
imul
jg
ret
push
loop
bound
sbb
popa
jae
andl
mov
ja
dec
push
xlat
mov
pop
mov
mov
pusha
fbstp
enter
ret
rcl
push
aam
adc
aad
divl
adc
inc
mov
scas
push
jns
fs
add
popf
pop
out
lahf
je
sti
pop
and
popa
mov
push
jo
std
jnp
sub
lahf
je
scas
or
int3
lods
xchg
mov
mov
popf
xchg
out
mov
fiadds
or
sbb
popa
negl
loope
cmp
fsubp
pop
cmp
or
leave
pop
je
negb
mov
lds
scas
push
jb
push
or
ja
stos
xchg
push
fildll
inc
testl
scas
push
test
xlat
addl
cli
xor
mov
pop
dec
stc
mov
mov
xlat
loope
push
xlat
pop
aam
sahf
mov
ret
ljmp
ss
xchg
mov
cmpsb
cmp
xor
data16
rcll
scas
or
aaa
mov
adc
je
cmpb
fisubrs
jo
xor
cmpsl
jae
mov
dec
mov
sub
hlt
jnp
gs
add
add
std
inc
sub
mov
push
push
jge
cmp
fsubl
pop
fistpl
dec
adcb
cwtl
stos
lcall
testl
decl
jns
popf
fmull
test
sub
cmpsl
mov
aaa
mov
xor
lahf
jae
pop
mov
sbb
cmpb
aaa
loope
mov
nop
cwtl
je
loop
outsl
xor
sbb
fdivs
mov
loopne
sbb
ds
pop
xlat
push
jnp
mov
or
addr16
sbb
push
jge
sbb
mov
mov
lret
pop
dec
jb
cmpsl
add
mov
orb
lock
mov
cld
mov
pandn
clc
inc
mov
aam
and
lcall
push
jb
leave
push
sbb
rcrl
cmp
sub
leave
scas
repz
or
popa
dec
decb
mov
mov
nop
mov
outsb
xchg
xlat
jae
adc
insl
ja
sub
test
je
jnp
xchg
mov
jno
fwait
outsb
repnz
and
xor
out
sbb
arpl
xlat
sub
sub
out
dec
push
lods
xchg
sub
les
adc
dec
mov
inc
sbb
xor
divb
push
push
in
pop
jg
popa
cwtl
ror
std
and
mov
sbb
loop
add
test
popf
ja
xchg
pop
lock
xlat
mov
xor
xlat
sarb
cmp
jecxz
rcll
mov
movsb
mov
or
mov
enter
leave
ljmp
es
pop
add
inc
push
not
push
jne
test
lcall
out
sbbl
fs
add
ret
loop
out
and
addr16
mov
push
cmpsl
hlt
lods
gs
add
scas
inc
shrb
aad
inc
or
mov
lahf
xchg
aaa
mov
inc
ffreep
dec
movsl
mov
rol
cli
out
divl
mov
mov
outsl
or
adc
ja
iret
mov
cmp
rorl
fwait
dec
fimuls
ficompl
loopne
mov
and
mov
aas
scas
lcall
or
pop
xchg
mov
mov
cmpsb
aad
in
mov
add
lea
int3
shrl
mov
jns
sbb
sbb
shll
fs
cwtl
pushl
pop
mov
fcmovbe
stos
loopne
pop
jg
dec
lret
push
repz
mov
mov
fstpl
fcmovnbe
ret
cmpsl
repz
jns
or
repz
repz
push
imul
adc
andb
mov
adc
mov
pop
mov
mov
sub
jbe
popa
in
scas
push
scas
xor
repnz
and
mov
and
outsl
mov
ljmp
arpl
mov
insl
inc
packsswb
mov
clc
fdivp
cmpsb
shlb
popa
repz
sbb
cmp
cmc
jge
or
jp
xlat
xor
cmpsb
jmp
or
pop
adc
add
shrb
pop
outsb
test
mov
fadds
xor
xor
mov
xor
jl
and
sti
sbb
outsl
mov
cmp
cmp
add
jns
dec
test
in
fadds
pop
mov
jp
or
ror
push
pop
add
xlat
sbb
add
mov
and
movsl
jnp
pop
mov
inc
stc
sbbb
nop
xor
and
mov
push
xchg
mov
cwtl
push
xchg
mov
out
mov
mov
sub
testl
dec
mov
out
cmp
movsb
xchg
or
subl
sar
fistps
mov
dec
xlat
call
mov
leave
and
push
imul
dec
stos
mov
or
loope
mov
icebp
rcrl
cmp
addr16
and
in
cwtl
scas
rclb
mov
out
inc
sbb
popf
test
xchg
mov
adc
mov
ja
in
jns
dec
outsl
fstps
es
mov
mov
cli
mov
rdmsr
lods
xchg
push
cmp
push
mov
xchg
mov
fwait
call
mov
loopne
jae
dec
repnz
pop
int3
cmp
or
and
inc
lcall
dec
cmp
dec
pop
sahf
ja
mov
mov
aam
push
adc
outsl
fst
fimull
push
loopne
pop
iret
xor
cmc
cmp
xchg
mov
in
adc
xchg
arpl
mov
push
inc
mov
mov
cmp
ficomps
lahf
xor
xor
aaa
mov
shlb
jp
aaa
in
sub
inc
xchg
jmp
push
mov
mov
lahf
shlb
lea
cld
std
jmp
and
mov
mov
pop
sub
cwtl
cltd
loope
mov
xor
cmp
jns
xchg
mov
repz
mov
pop
out
ljmp
mov
xor
cmp
scas
scas
mov
sbb
cmp
loopne
inc
imul
ror
scas
pop
fdivr
ret
out
scas
pop
xchg
sbb
in
mov
xor
fwait
lods
cmpsl
inc
jp
aam
out
push
ret
inc
shrb
addl
shll
mov
test
xlat
mov
in
fmuls
mov
mov
cltd
into
aas
mov
and
fidivl
out
scas
cmp
dec
ljmp
popa
faddp
mov
or
ds
mov
sbb
andnps
jge
pop
sbb
or
mov
outsb
daa
stos
mov
rclb
cmpsl
in
in
xchg
aam
mull
sbb
divl
xor
pop
gs
sub
mov
outsl
enter
daa
mov
add
or
or
scas
cmpsb
sub
push
test
xchg
out
xlat
and
push
punpckhbw
mov
mov
sarb
or
fwait
mov
mov
stos
std
cltd
pop
xlat
sbb
mov
and
loop
lret
sub
fs
sub
mov
js
mov
mov
sub
mov
loopne
das
mov
mov
cwtl
std
pop
jbe
and
adcb
pop
jbe
mov
ret
data16
xchg
add
push
mov
dec
insb
nop
push
fs
imul
ljmp
insl
sub
cwtl
dec
stos
sbb
cmpb
jge
jp
popa
mov
loopne
jp
loop
scas
mov
in
mov
xor
scas
aam
subb
sub
dec
out
and
xor
loopne
mov
mov
daa
add
stos
jns
xlat
inc
or
and
mov
outsb
sbb
add
add
xchg
mov
add
cmpsl
les
cmpl
or
es
call
addr16
scas
pop
add
das
xlat
jnp
adcl
mull
cmc
mov
unpckhps
jo
mov
xchg
mov
clc
out
pop
enter
cmp
lret
adc
mov
into
cmpsl
pop
aam
fnsave
das
pop
lret
push
ret
ds
or
xchg
imul
pop
xchg
jne
mov
mov
js
jl
syscall
jae
xor
pop
inc
cmp
sub
gs
stos
cmp
cwtl
mov
mov
and
in
js
dec
dec
ja
sbb
adc
push
gs
das
rcrb
mov
inc
pusha
jbe
pop
xor
add
leave
or
inc
mov
iret
je
push
or
mov
mov
jbe
cmc
jl
cmp
js
fwait
imul
rcll
mov
jecxz
test
icebp
cmp
adcb
in
xlat
xlat
pop
lcall
mov
add
xor
jb
cmpsl
sbb
pop
popa
adc
or
mov
add
and
push
movsb
popf
in
icebp
clc
cwtl
mov
dec
inc
jnp
stos
bound
scas
test
test
jne
or
jno
fldt
mov
push
repz
jb
push
cmpsl
js
add
es
pop
or
jmp
rdtsc
and
inc
outsb
mov
pop
jbe
arpl
lcall
jns
div
xor
adc
mov
xor
pop
sbb
xlat
test
test
xor
int
lahf
pop
call
push
stos
add
fdivl
sbb
pop
jg
insb
jno
sub
xor
rolb
jecxz
inc
repz
sahf
mov
mov
jl
enter
adc
popa
outsl
mov
repz
es
nop
xchg
ficompl
mov
mov
pushf
je
ret
or
movsb
in
pop
mov
mov
mov
aad
pop
scas
push
sbb
jmp
addr16
fwait
inc
popf
sub
scas
rorl
jle
scas
cmc
mov
out
jno
hlt
mov
and
mov
mov
scas
add
cmpsl
dec
fmuls
pop
inc
pop
adc
repz
mov
add
fnstsw
imul
repz
mov
sarl
jns
mov
pop
idivl
jp
cmpsl
fcoms
add
je
mov
stc
pop
xlat
pop
mov
leave
sbb
arpl
test
jne
mov
mov
sarl
mov
or
push
bound
test
pop
dec
aam
fsubp
scas
push
or
mov
clc
shlb
fimuls
push
ss
mov
in
xchg
mov
fdivl
fld
cmp
cmpsl
sbb
push
rolb
sti
in
pop
jp
sarl
test
ljmp
das
xor
jns
nop
sub
jno
cmpl
xlat
jl
adc
test
outsb
xor
pop
and
mov
test
testl
inc
test
iret
or
inc
mov
mov
ret
jecxz
xchg
imul
jno
scas
jae
mov
movsl
mov
insb
ja
ret
loope
fiadds
flds
test
nopl
adc
or
adc
jae
rcll
mov
addr16
or
arpl
push
mov
gs
cld
cmpsb
sbb
push
adc
pop
mov
int3
dec
push
stc
jp
movsl
rcrb
insb
aas
and
imul
lds
cmp
push
cmp
dec
jo
cmpb
daa
divl
adc
imul
jns
fdivs
mov
push
xchg
sbb
aas
std
in
dec
or
xlat
lret
mov
cmpsl
mov
sbb
cli
fwait
xlat
inc
mov
mov
push
test
aas
enter
enter
cwtl
mov
add
pop
dec
pushf
iret
mov
movsb
pop
stos
mov
cli
jne
jno
fstps
incl
nop
and
adc
sbb
cmpsl
mov
mov
addr16
ret
cmpsb
shlb
xchg
mov
mov
or
jno
jns
hlt
aaa
xlat
mov
mov
scas
scas
pop
cmpsl
sbb
lds
clc
mov
jae
popa
sbb
gs
sahf
or
sub
xorl
js
addr16
cwtl
sbbl
xorl
dec
scas
sti
pop
xor
ss
dec
cmpsl
faddp
aaa
mov
dec
mov
stos
fildl
jmp
out
xlat
jne
mov
aad
xchg
jne
inc
dec
test
adc
pop
mov
andl
pop
sbb
add
cli
cmp
movsl
xor
xchg
dec
hlt
cmp
out
imul
out
mov
aaa
sub
jo
outsl
lahf
jno
xchg
and
pop
mov
sub
test
jl
jns
mov
sub
add
movsl
stc
dec
out
out
dec
pop
imul
cmp
popf
pop
mov
or
stos
lahf
xlat
xchg
pop
std
mov
add
cmp
jp
or
shll
fimull
xor
cmp
lcall
add
nop
mov
sbb
mov
adc
or
jl
sbb
xor
inc
lods
adc
xchg
push
push
jnp
xor
notl
cmp
or
shll
or
mov
insb
and
stos
adc
stos
mov
cmp
push
push
xchg
insb
cwtl
cmc
push
xchg
xchg
jl
add
mov
mov
aas
xchg
mov
jle
mov
add
aad
xlat
dec
xchg
out
jle
add
mov
pop
mull
popa
mov
pop
cmpsw
rorb
daa
xchg
mov
jl
dec
sbb
add
push
lods
mov
pushf
add
mov
fdivrs
add
aad
movsb
mov
dec
inc
in
divb
mov
test
mov
das
lahf
and
mov
fstpl
cmpsl
push
jnp
movsl
lcall
ss
adc
mov
add
push
sbb
aaa
fsubs
daa
lods
scas
arpl
and
loopne
fwait
mov
ret
cmp
pop
neg
mov
sub
pop
jb
mov
xor
mov
in
mov
dec
jl
les
mov
call
push
pop
push
xor
stos
mov
push
scas
lahf
mov
mov
call
cmpsl
xor
cwtl
notb
pusha
cltd
jecxz
andl
data16
insb
sti
mov
rcr
das
out
jecxz
pop
cmp
scas
xlat
sbb
xor
mov
addr16
popf
pop
dec
push
inc
int
cmp
std
inc
negl
sub
mov
sahf
jns
xor
push
mov
sbb
movsb
test
negl
mov
icebp
mov
jmp
out
push
aad
pop
push
cwtl
mov
btr
lcall
mov
rcrl
dec
int3
jl
cmpsl
mov
cmpsb
das
mov
lods
lret
sti
sbb
jns
outsl
cmpsb
pop
mov
add
jnp
fwait
or
aam
out
hlt
ds
pop
cld
inc
out
push
subl
or
dec
fwait
loope
lcall
pop
sti
xor
jl
mov
mov
out
imul
jo
adc
fsubs
sbb
push
aaa
pop
rcrb
outsl
add
sub
scas
fs
push
push
pop
lock
stc
jne
leave
mov
es
mov
fcomps
std
pop
xchg
push
in
push
cld
iret
testb
popf
mov
and
mov
fwait
sub
cltd
mov
dec
push
mov
push
mov
xchg
gs
mov
pop
in
sbb
cmpsb
mov
inc
sub
mov
out
fldl
dec
cmp
mov
out
or
xor
out
scas
cli
inc
test
not
mov
hlt
nop
mov
negb
stc
outsb
and
cmp
mov
inc
adc
ljmp
pop
cwtl
aam
insl
and
push
lahf
scas
jns
cs
mov
xor
mov
loop
adc
mov
test
xor
outsl
pop
mov
out
iret
push
inc
xor
enter
inc
adc
call
mov
arpl
cmp
push
cwtl
mov
jb
adc
sub
lret
imul
popa
lret
cmpsl
lods
mov
loope
rcrl
scas
xchg
mov
dec
ret
loopne
xor
pop
lds
cmpsl
jno
sarb
jp
in
mov
or
push
cmp
mov
xor
sub
sub
cmpl
int
rorl
jo
ds
jo
loope
je
xor
mov
andl
add
hlt
xlat
push
xchg
test
ret
movsb
dec
shlb
fs
inc
pop
cmp
mov
sbb
fildll
rcrb
test
neg
xor
push
sbb
test
mov
adc
jb
pop
add
inc
pop
ljmp
mov
lcall
jle
adc
in
xchg
fmul
inc
inc
xchg
fwait
dec
mov
pushf
add
cs
mov
mov
scas
cli
dec
gs
outsl
std
adc
cmpsl
fidivrl
xor
ja
push
das
add
add
cmp
repnz
ljmp
js
mov
loop
stc
push
roll
imul
mov
imul
adc
pop
jmp
mov
insl
mov
pop
sbb
lock
ret
or
sbb
cwtl
pop
mov
aas
xchg
mov
fdivrs
cmpsl
cmpsl
arpl
inc
sbb
mov
dec
push
outsl
stc
xchg
push
cmp
jnp
cmp
mov
xor
loop
movsb
push
inc
inc
jp
es
push
cli
addr16
in
mov
sbb
push
test
lods
rcrl
sahf
xchg
fs
sbb
cltd
mov
dec
push
hlt
cmp
dec
add
mov
cmp
adc
mov
stc
divb
les
xchg
xchg
sbb
fcomps
hlt
test
xlat
sbb
shlb
cwtl
shll
out
icebp
add
sub
push
lods
cwtl
mov
sbb
cbtw
pop
jg
mov
das
cmp
or
iret
lds
leave
bound
cld
or
jnp
lea
arpl
into
shll
cli
xor
cmp
add
xchg
fs
cmp
sarl
push
xchg
add
mov
dec
jl
pop
jo
jp
scas
mov
cmc
xor
gs
lods
pop
inc
ds
cli
mov
aam
mov
movsl
push
xchg
imul
loopne
pushf
dec
and
jae
lods
cmp
int
jnp
loope
cwtl
mov
add
mov
aad
lcall
pop
jnp
nop
mov
jns
in
mov
lods
and
notl
dec
outsb
mov
stc
mov
and
xor
in
fadds
cmp
mov
mov
cmpsb
popa
andb
mov
push
neg
sbb
sbb
rep
cmp
imull
test
xchg
repnz
or
mov
shll
mov
mov
roll
cwtl
sbb
jmp
mov
mov
xchg
or
push
jge
add
adc
shlb
sarl
pop
cs
enter
mov
movsb
incb
lds
enter
outsb
es
ja
stos
and
inc
sahf
pop
outsl
and
loope
in
lcall
mov
call
xor
mov
xor
or
cmpl
aaa
mov
out
test
sbb
ljmp
cmpsb
sbb
mov
scas
cmc
outsb
popf
cmp
cmp
cs
faddp
daa
stos
mov
pop
ja
mov
pop
mov
pop
dec
xchg
cmp
fcmovu
rep
ret
add
js
adc
mul
jmp
jg
cmp
pop
mov
mov
out
adc
dec
xchg
cmpsb
nop
adc
mov
fwait
enter
xchg
push
mov
ficompl
lods
cs
jnp
cmpsb
pop
mov
arpl
ret
xor
rep
aad
cltd
sbb
jl
das
outsl
leave
cmp
in
mov
loop
js
pop
fcomps
lods
cmpsb
cmp
scas
fstps
lahf
mov
sbb
jecxz
out
add
inc
loope
imul
fidivl
outsb
cmp
clc
jmp
mov
mov
push
pop
shrl
int
testl
or
insb
mov
mov
cmpsb
cmp
iret
and
cmc
cwtl
enter
mov
mull
jbe
sbb
jg
cs
cli
and
das
jmp
enter
sub
xor
out
fdivrp
clc
mov
fsub
mov
xchg
push
dec
and
adc
mov
ja
pop
mov
or
daa
and
std
mov
inc
cli
mov
xchg
ret
adc
mov
sub
pushf
pop
lock
jecxz
es
cmp
mov
xchg
or
bound
imul
int3
mov
mov
scas
jno
outsl
sbb
scas
imul
js
inc
mov
arpl
inc
pop
rcrl
cmpsb
jns
lret
mov
sarb
jb
mov
test
lret
cld
or
aaa
in
test
test
sub
movsl
push
push
xchg
sbb
fwait
out
cmp
mov
push
xlat
les
xchg
popf
mov
inc
jle
sbb
mov
inc
loop
cmpsl
xor
rorb
xchg
pushf
cmp
cli
bound
cmpsb
pop
stos
sub
or
cmpsl
jne
adc
adc
mov
xorb
pop
repz
xorl
push
cmpsl
fs
iret
push
sahf
mov
stos
add
les
xor
int3
mov
mov
in
mov
mov
fwait
dec
sti
mov
mov
mov
xchg
inc
cltd
mov
cmp
aaa
push
mov
stos
push
lret
cli
aas
test
or
mov
mov
jne
pop
pop
es
aam
scas
dec
xchg
out
aaa
xlat
mov
lret
adc
sbb
mov
xlat
jno
add
xor
mov
jo
mov
in
cmpsl
insl
int3
xchg
in
mov
cmc
jb
or
cmpsl
outsb
jno
xchg
mov
lds
movsl
sbb
xorl
nop
xor
mov
mov
imul
movsb
mov
jne
ret
cmpsl
aas
inc
pop
sub
ftst
xchg
mov
mulb
sbb
aas
ja
rcrb
sbb
adc
and
pop
and
add
incb
shl
leave
xor
cmp
aas
xlat
sbb
mov
lock
scas
dec
sbb
dec
add
scas
jge
stos
add
xchg
xchg
mov
and
fisubrs
test
xor
mov
mov
shl
xor
cmp
fdivrs
std
adc
push
sbb
ds
stos
in
adc
xchg
xlat
sub
dec
cmp
mov
popa
loope
sub
push
ficomps
orb
ret
iret
ss
dec
fs
jno
add
adc
cmp
out
imul
cmpsl
leave
xchg
pop
in
mov
and
stc
scas
imull
lock
clc
mov
sbb
and
add
cmpsl
xchg
daa
pop
pop
inc
jg
nop
sbb
int
cmpsl
sub
add
cmp
imul
aas
mov
add
inc
jecxz
cwtl
shrb
push
stos
mov
hlt
cli
mov
mov
test
ret
enter
mov
pop
mov
mov
xchg
add
xor
lcall
mov
enter
mov
mov
inc
push
sbb
sti
or
push
rcrb
cmc
test
subb
dec
mov
jge
sti
aas
cmp
dec
jns
xchg
mov
pushf
scas
mov
stc
iret
leave
jbe
xor
enter
cmpsb
jmp
pop
out
pop
inc
mov
out
ss
enter
mov
stc
add
mull
imul
faddl
fcomps
push
and
cli
mov
pop
mov
xor
scas
stos
dec
push
sub
pop
test
mov
cmp
dec
iret
insb
mov
inc
or
movsb
fnstcw
idivb
sbb
lcall
xchg
rcrl
push
cld
aad
lahf
scas
movsb
ss
cltd
adc
jno
adc
xlat
es
mov
mov
add
mov
jge
add
test
outsl
push
xchg
jns
mov
rcrb
fldl
mov
loope
dec
cmp
outsl
push
pop
xchg
xchg
maskmovq
negl
pop
testl
je
mov
stos
jmp
pop
dec
adc
xchg
pop
mov
sbb
xor
lods
add
out
pop
mov
push
adc
mov
jns
cmpsl
and
cmp
jp
pop
xchg
mov
jmp
lods
pop
testl
stos
and
jns
das
mov
xor
test
pusha
mov
es
push
xchg
outsb
movsl
lods
xor
mov
iret
sbb
pop
adc
enter
mov
lds
cmpsb
jae
stos
int3
into
leave
loopne
jl
fisubrs
sahf
sbb
adc
pop
scas
push
fadds
mov
push
add
in
adc
cmp
xorb
sahf
cmp
arpl
mov
xlat
dec
dec
xchg
and
movsl
fstps
xor
shll
xchg
adc
xchg
aad
push
lret
test
or
pushf
outsb
mov
gs
cltd
pop
cmp
cmpsl
sbb
push
and
repz
xor
mov
shrl
stc
mov
ret
test
sbb
sbb
push
scas
jno
fidivs
cmc
inc
aad
nop
ret
mov
push
or
mov
cmc
add
mov
out
pop
sbb
mov
xchg
addr16
lret
repnz
aaa
je
in
insb
jo
jp
mov
lahf
mov
cld
add
mov
and
flds
iret
mov
push
cmp
sbb
fstpt
idivl
sub
shlb
push
rcll
dec
xchg
leave
mov
sbb
dec
aas
cmp
dec
loopne
in
inc
xorl
sub
cltd
mov
sarb
mov
mov
sbb
mov
pusha
mov
into
xchg
inc
jnp
out
pop
xor
leave
pop
mov
and
cltd
aas
scas
xchg
inc
fcmovne
lea
xlat
add
xchg
mov
cmp
xor
pop
jns
inc
out
cwtl
mov
movsl
push
push
ret
scas
imul
inc
aam
pop
mov
flds
lret
or
xlat
mov
out
and
inc
xor
xor
pushf
jl
daa
mov
jge
sub
popf
inc
sub
iret
fidivrl
cmp
sub
lds
jecxz
repnz
xchg
or
sub
and
mov
int
dec
or
dec
enter
cwtl
jns
mov
and
mov
pop
cmp
arpl
dec
mov
pop
pop
push
dec
add
xor
movsl
aam
mov
mov
mov
mov
lock
add
stos
andb
sub
movsb
out
xchg
jo
pushf
push
dec
push
xor
sub
fs
rcrl
in
stos
in
sbb
mov
xlat
cmp
hlt
cwtl
xor
in
xchg
movsl
gs
push
shll
dec
scas
jb
jae
cmp
mov
pop
dec
mov
and
lret
addb
lahf
pop
cltd
popa
cwtl
dec
daa
iret
popa
mov
mov
addr16
fcomp
adc
push
mov
mov
nop
loopne
inc
pop
mov
push
add
das
mov
add
les
push
xchg
sub
pop
arpl
and
fwait
test
mov
movsl
stc
cmpb
rcll
nop
popa
es
in
mov
add
mov
enter
test
out
mov
repnz
hlt
xchg
adc
ja
sbb
pop
testl
mov
mov
ja
xchg
and
sbb
jo
lahf
lds
scas
adc
cmp
and
dec
push
sarb
mov
adc
inc
popl
mov
insb
xchg
sbbl
nop
xlat
mov
push
sbb
dec
adc
sahf
adcb
sbb
sbb
cli
lds
repz
pop
xlat
ja
mov
push
xchg
jb
out
xor
cltd
scas
mov
fwait
mov
mov
xor
or
add
adc
mov
sbb
dec
dec
xlat
sub
cli
iret
std
xchg
xor
dec
ja
or
push
xor
cmp
sbb
lods
mov
mov
cwtl
aaa
out
push
push
xchg
or
dec
sub
orl
sub
lock
dec
mov
mov
mov
pushf
addr16
iret
not
jb
dec
mov
add
movsl
pop
pop
lret
in
movsb
mov
addr16
mov
mov
sbb
orl
fdivl
push
jnp
mov
fucomi
push
iret
mov
add
mov
inc
mov
movsb
lahf
add
xchg
xchg
adc
add
mov
testl
into
cmpsl
das
popf
pop
mov
xchg
je
and
cmp
adc
test
and
add
in
or
mov
dec
push
arpl
xor
or
sbb
ljmp
jp
pop
cmpsl
jns
idivl
jns,pt
cli
sbb
jle
cld
icebp
int3
pop
lret
out
inc
stos
mov
lods
adc
movsl
fwait
sbb
sbb
lock
pushf
mov
pop
dec
imul
sub
mov
xor
jge
mov
addr16
cmpsl
je
inc
mov
push
mov
xchg
int
mov
negl
adc
imul
vmovsd
mov
es
mov
pop
ss
je
fs
clc
mov
pop
inc
sbb
or
xchg
mov
mov
jne
and
mov
and
fdivrs
imul
lds
je
not
arpl
cmp
dec
and
xlat
idivl
scas
mov
add
mov
pushf
mov
inc
cmp
insb
cmp
cmpsl
sub
mul
testl
scas
inc
pop
sub
sbb
dec
xlat
add
push
popa
mov
clc
push
push
xorl
ds
sarl
pop
lahf
movsl
mov
ss
xlat
int3
dec
jg
lcall
mov
push
dec
in
aaa
sbb
leave
mov
nop
pop
lahf
ja
je
pop
shl
mov
mov
mov
les
dec
mov
jns
push
in
push
mov
bound
nop
and
xlat
sbb
inc
dec
xlat
scas
dec
fdivr
push
repz
insb
mov
arpl
xchg
push
and
adc
dec
insb
mov
sub
xor
pop
jp
je
enter
jne
inc
or
outsl
jnp
inc
inc
dec
adc
adc
pushfw
mov
pop
jae
lret
push
inc
add
out
repnz
mov
and
shr
mov
and
jp
lcall
sub
lcall
xchg
push
mov
shlb
stc
dec
jne
mov
mov
and
cmpsl
rep
fstl
mov
pop
inc
inc
std
xlat
stos
test
icebp
repz
jle
or
ja
aaa
xchg
mov
repz
cmp
xchg
lcall
pop
push
jge
jne
mov
aad
pop
xor
mov
push
lcall
incb
lcall
push
scas
add
or
fisttps
aaa
adc
xor
xlat
xchg
mov
push
movsl
test
outsb
sbb
mov
mov
sub
fadd
mov
pusha
divl
xor
int3
push
cltd
outsb
adc
pushf
pop
mov
mov
inc
and
adc
ret
fcomps
mov
lahf
mov
push
sbb
mov
or
mov
jae
dec
test
sbb
mov
test
test
xchg
stos
mov
mov
arpl
ds
pop
sbb
jge
int
adc
fwait
pop
call
and
test
popf
in
in
js
jmp
jbe
mov
mov
ret
lret
dec
iret
mov
mov
xchg
jl
push
dec
pop
mov
mov
xor
repz
pusha
xor
inc
push
scas
fistl
dec
cli
test
jo
xchg
cwtl
lods
mov
stos
int3
adc
subb
insl
mov
jge
xchg
inc
cwtl
bound
xchg
fdivs
and
push
addr16
mov
data16
add
cmp
pop
mov
pop
push
out
subb
jbe
adc
xor
push
enter
xlat
and
and
mov
inc
stos
shll
jg
sub
xchg
mov
sbb
loope
outsb
div
cmp
loop
out
inc
sbb
mov
mov
mov
xchg
jne
cld
add
fs
leave
nop
sbb
xsavec
pop
cltd
movsb
push
stos
sub
cmpsl
insl
sbb
add
xlat
fs
sub
or
insl
xor
movsl
out
stos
stc
mov
add
sahf
orb
popf
xchg
sbb
in
fsubrs
and
push
sbb
inc
ret
push
jnp
scas
cmc
lock
aad
fcmovbe
mov
xchg
daa
xor
push
and
cmp
xchg
mov
andl
cmp
pop
adc
sub
cmp
aam
push
dec
ss
fadd
mov
push
test
dec
mull
cmpsl
adc
cwtl
stos
iret
xlat
push
push
imul
inc
gs
pop
cmp
or
popf
bnd
mov
rorl
sbb
mov
test
cmpsl
sbb
in
dec
add
dec
test
mov
movsl
ljmp
lea
dec
inc
mov
mov
divl
test
cwtl
scas
cmp
lcall
push
push
hlt
inc
loop
fmuls
enter
adc
lcall
out
or
cmc
mov
std
div
and
mov
dec
mov
imul
lcall
add
adc
mov
adc
ds
aam
mov
insl
sub
ss
cmp
adc
mov
jnp
mov
mov
xchg
and
js
xor
dec
fsubrp
add
pop
call
or
inc
dec
add
adc
push
dec
aad
jge
lret
or
xchg
mov
in
imul
mov
jecxz
jb
pop
mov
fistps
sub
cmp
das
xchg
js
inc
cmpsl
inc
cmc
cwtl
mov
out
lock
rclb
testl
mov
mov
jecxz
mov
loop
cmp
mov
mov
lahf
xlat
lds
push
aad
pop
xchg
sub
andb
popa
dec
rolb
fsubrp
dec
in
or
mov
iret
pop
jg
stc
fcomp
and
ficompl
fs
add
fwait
push
stos
xchg
jmp
sbb
or
dec
gs
cmp
test
idivl
and
es
push
movsl
popa
mov
and
mov
and
push
ret
mov
xlat
sbb
mov
stos
jbe
mov
loope
inc
icebp
dec
sahf
scas
loopne
test
pop
sbb
movsb
adc
xchg
aam
sub
pusha
lahf
xor
cwtl
mov
into
mov
or
enter
daa
stos
xor
ret
xchg
cli
mov
mov
adc
fildll
insb
popf
out
jb
add
mov
or
stc
mov
and
sti
repz
and
or
pop
push
pop
jl
xchg
loop
mov
add
adc
pop
sub
pop
and
mov
fwait
pop
clc
gs
pushf
cmp
adc
jp
cmpsl
jno
out
push
cltd
xchg
loop
push
mov
divb
mov
xlat
dec
out
fucomi
mov
mov
aaa
out
sahf
push
or
mov
stos
mov
jg
jae
dec
notb
sbb
mov
mov
ss
cmp
cmp
fcompl
inc
movsl
sub
aas
and
nop
call
rclb
xor
mov
test
jge
sub
mov
pop
push
cltd
jb
push
cmp
fbstp
inc
mov
stos
inc
push
nop
xor
mov
jecxz
cmp
mov
xlat
mov
sbb
out
test
mov
imulb
paddw
pop
pop
mov
jo
adc
scas
add
fidivl
ja
pop
outsb
sbb
loope
lds
lahf
ret
rorl
insb
mov
pop
lock
lret
out
inc
cmpsl
sub
ss
mov
popa
stos
sbb
sahf
jmp
and
faddl
pop
inc
push
pusha
pop
sti
scas
popa
cmpsl
push
fsubs
add
rcll
ret
add
inc
lret
arpl
jge
scas
mov
sbb
mov
mov
dec
push
out
in
xorb
push
lahf
movzwl
xor
push
cli
movb
mov
xchg
dec
add
lods
das
lret
sarb
mov
sub
pushf
aad
xlat
test
mov
mov
test
nop
fsubs
sbb
mov
and
mov
cld
iret
jnp
cmp
imul
outsb
mov
mov
add
lock
es
and
cmc
push
arpl
jp
jns
insl
pop
mov
divl
jns
aas
loop
jg
dec
imul
cltd
repnz
pop
adc
cmp
mov
cmp
jae
mov
cltd
mov
sub
or
or
push
inc
lcall
iret
and
pop
sbb
es
sbb
push
fdivrs
outsb
sbb
incl
stc
pushf
sti
fnstenv
sbb
lock
and
mov
enter
decb
negb
pop
cmp
int
stc
cli
and
int3
mov
std
xor
insl
in
arpl
scas
int
inc
push
mov
inc
aas
cwtl
loope
lcall
hlt
mov
sbb
sbb
lods
sbb
negl
cli
pop
nop
inc
enter
push
shrl
das
jbe
pop
pop
jmp
bound
mov
insb
inc
xchg
jp
movsl
addr16
test
and
add
xchg
mov
sbb
sub
or
pushl
or
aam
jg
xchg
sbb
sub
pop
jle
fistps
push
mov
and
outsb
stc
mov
mov
jb
xchg
mov
add
mov
mov
jge
push
cltd
mov
pop
add
mov
imul
movsl
ss
sahf
pop
idivl
pusha
iret
pop
mov
aam
mov
fistpll
mov
loopne
neg
jmp
push
jnp
in
cwtl
mov
adc
cltd
push
adc
scas
cmp
scas
outsb
pop
adc
scas
mov
leave
adc
in
pop
cmp
jae
mov
repnz
cmp
pop
bound
mov
leave
scas
push
mov
mov
jecxz
add
jae
xchg
les
arpl
lcall
push
scas
out
adc
int3
into
fxch
xor
rcl
dec
sbb
or
xor
cmpsl
in
mov
cmp
mov
xlat
lcall
add
insl
jmp
sahf
mov
mov
mov
ja
addr16
insl
mov
push
es
dec
jecxz
in
pop
popa
inc
daa
mov
outsb
jg
fbstp
mov
mov
aam
dec
jge
xor
mov
int3
leave
mov
pop
cwtl
or
cli
sbb
xchg
cmpsl
sbb
mov
fimuls
ret
pop
pop
mov
addb
fnstsw
into
xor
cli
jne
lret
stos
xor
and
fwait
test
pushl
xor
mov
jge
or
push
fdivrp
inc
inc
inc
scas
or
dec
lds
jle
sub
sbb
es
dec
mov
dec
int
hlt
inc
jbe
into
mov
xlat
lret
enter
jmp
cwtl
mov
ja
lret
inc
fs
add
xchg
xor
negl
int
inc
out
and
mov
mov
mov
xlat
mov
mov
cmp
sbb
fdiv
xchg
xchg
mov
mov
les
dec
fs
popf
ds
push
dec
cmp
pop
insl
sahf
xchg
test
mov
mov
dec
loop
sbbl
sub
aas
outsl
mov
das
movsl
mov
idivl
imul
test
pop
lds
xor
pop
dec
jb
addr16
xor
mov
inc
aam
xor
sub
dec
jae
or
and
sbb
push
popf
xor
push
test
aas
pop
mov
repnz
mov
cmp
lahf
push
cltd
scas
icebp
xchg
xchg
aaa
mov
es
cmc
cmp
dec
ret
insb
cmpsl
cli
mov
aad
jg
sub
mov
and
adc
jmp
outsl
test
dec
cmpsl
sbb
push
dec
data16
mov
bound
les
es
cltd
enter
subb
test
outsl
jae
cmp
push
inc
repz
and
jp
push
addl
pop
cld
xchg
cld
xlat
fstpl
mov
push
cmp
out
jb
popa
pop
jnp
inc
sub
inc
pop
fnstsw
sbb
mov
orl
and
fwait
xor
xchg
xlat
mov
push
scas
in
nop
lahf
out
dec
data16
fstps
push
out
mov
mov
fnsave
loopne
or
mov
mov
inc
pop
mov
dec
jns
dec
ret
gs
push
mov
push
insb
mov
pusha
push
pop
fdivrl
xchg
fwait
adc
push
pop
jns
cmp
cmp
cmpsb
cmpsl
adc
lds
mov
mov
xor
push
fsubrs
dec
or
mov
cmc
test
out
test
push
outsl
adc
cmp
fwait
sarb
cmpsl
inc
addl
mov
loopne
adc
nop
lahf
stos
mov
cwtl
sahf
pushf
lods
adc
push
mov
mov
lcall
add
cmp
mov
shll
add
sbb
dec
sbb
stos
popf
and
pop
pop
pop
push
dec
inc
popa
stos
xchg
or
xchg
mov
int3
sbb
sub
inc
jl
cli
mov
stos
mov
fistpll
adc
shl
adc
stc
and
push
inc
scas
jo
mov
fistpll
fwait
jnp
loopne
inc
pop
mov
in
cwtl
cli
dec
movsb
or
shrb
adc
icebp
loope
lret
out
cmp
cmp
stos
jle
sbb
daa
mov
mov
jne
jge
or
jo
sbb
pop
mov
add
iret
sbb
mov
push
cmp
xchg
xchg
xchg
or
fists
push
lock
sbb
mov
mov
mov
jge
scas
les
push
jne
cmp
push
scas
mov
adc
out
xor
iret
fidivrs
pop
xor
insb
mov
and
mov
mov
pop
xor
mov
xor
andb
outsb
fcomps
mov
data16
nop
scas
and
into
out
cmp
orb
xor
xor
pop
test
xor
in
jp
lret
jae
xchg
xchg
hlt
clc
cwtl
addr16
mov
mov
sbb
das
jmp
js
mov
enter
loope
outsb
enter
push
sbb
daa
lods
cmp
sbb
ljmp
es
mov
push
push
mov
js
mov
shrb
xchg
inc
mov
xchg
movsl
je
push
lods
push
or
xor
imul
into
ret
xchg
and
cmpsl
jl
stos
scas
mov
js
inc
sub
divl
cltd
lahf
mov
xchg
mov
xchg
jne
jle
das
and
insb
jp
fmul
jmp
inc
mov
inc
xchg
push
test
xchg
cmp
pop
mov
scas
repnz
adc
addr16
jns
jle
xchg
push
rorb
test
push
mov
repz
lret
out
push
xchg
popa
cwtl
imul
adc
jmp
push
fildl
mov
pop
mov
mov
cmp
mov
mov
sahf
aad
hlt
mov
jae
add
mov
dec
xor
cltd
adc
cmp
dec
mov
or
adc
mov
pop
leave
mov
dec
inc
cld
test
aaa
in
xlat
rorl
xor
cmp
pop
cwtl
lea
lods
jmp
popf
cmpsl
lods
test
xchg
dec
mov
test
repz
mov
call
mov
push
mov
jg
gs
and
enter
mov
stos
cmpsl
icebp
or
data16
adc
rolb
xlat
sbb
and
sbb
xor
xchg
sbb
lret
sbb
cmp
outsl
leave
pop
cmp
pop
adc
cltd
pop
xor
cmp
xor
fsubrs
adc
adc
mov
data16
pop
xlat
clc
pop
or
in
mov
mov
jp
jns
aaa
mov
in
in
dec
mov
movsb
fnstenv
cmpsl
inc
dec
mov
fwait
mov
addb
pop
daa
test
inc
pop
js
clc
mov
ds
jecxz
mov
inc
int3
pop
stc
adc
mov
enter
hlt
pop
mov
cli
call
or
mul
sbb
mov
xor
xchg
sarl
dec
inc
test
mov
mov
clc
es
cltd
mov
jne
xchg
dec
lock
cmp
push
imul
cli
jp
mov
sbb
lret
xor
cwtl
sar
mov
sbb
xlat
pop
sub
and
mov
pop
cli
add
sub
leave
mov
lret
inc
mov
fstps
ret
push
bound
jecxz
sbbl
pop
andps
pusha
xlat
ds
testl
mov
adc
ret
mov
ja
xchg
cmp
outsl
fidivl
mov
add
iret
sub
test
add
hlt
inc
mov
cmpsl
stc
and
push
and
out
sti
or
push
cmp
mov
hlt
adc
pop
nop
shr
push
xor
pop
xor
insl
jns
inc
sti
pop
sbb
push
xchg
xlat
adcl
mov
repz
xchg
cmp
mov
jae
jmp
outsl
inc
xlat
dec
ficoms
cmp
sbb
adc
loopne
xlat
repnz
inc
jg
push
loop
int
jge
jl
ds
and
cmc
mov
cltd
test
or
mov
mov
ljmp
pop
mov
adc
jg
fmul
incl
popa
or
and
mov
xlat
cmpsl
pop
xchg
lea
cmc
es
push
jne
mov
dec
lds
cmp
addr16
mov
push
sahf
mov
insb
and
iret
or
add
sbb
lods
sbb
idivl
push
jae
arpl
int
mov
cmp
or
loopne
mov
mov
stc
out
xchg
mov
frstor
add
mov
test
xchg
push
mov
xor
push
dec
fsubs
cs
movsl
popa
mov
fs
jb
sti
sbb
ret
jle
add
movsl
in
xchg
popf
sbb
xlat
dec
jle
ficompl
mull
aaa
xlat
jns
push
push
into
aad
add
mov
jb
pushf
lahf
ss
jg
add
jp
xchg
pop
testl
in
cmpl
mov
pop
pop
mov
pop
cld
dec
icebp
jbe
andl
pop
lods
insb
imul
loopew
sub
xlat
push
pop
and
imul
int
add
dec
adc
xchg
mov
inc
jbe
xchg
pop
mov
test
ja
gs
inc
mov
sbb
in
ja
mov
inc
mov
dec
sbb
or
scas
dec
out
test
mov
in
sahf
outsb
lods
inc
pushf
add
ror
aaa
movsl
dec
mov
repnz
cmc
mov
mov
std
pop
or
jg
xchg
add
repz
icebp
jp
scas
sbb
js
cmpsb
aad
cwtl
pop
add
cmpsl
inc
sbb
jle
outsb
test
call
negl
lea
pop
xlat
xlat
xor
dec
jnp
jp
movsl
dec
out
sbb
cld
and
mov
lds
test
adc
cld
pop
mov
jns
sbb
pop
arpl
xlat
mov
inc
and
cmp
nop
insb
mov
xorb
xor
aad
lret
in
fdivr
arpl
xlat
fsubl
rcpps
dec
mov
adc
sbb
pop
addr16
push
jg
push
adc
iret
mov
cmp
idivl
xchg
insl
push
pop
xchg
dec
scas
push
sahf
cwtl
jle
adc
enter
mov
mov
mov
imulb
jg
insl
iret
cmp
inc
mov
xlat
and
xchg
test
mov
mov
xlat
cltd
aas
stos
mov
out
push
aaa
jns
insl
inc
cmpsl
scas
mov
sub
lret
imul
mov
outsb
dec
iret
cmc
ja
lcall
or
loop
cmp
cmpsl
push
sbb
xchg
xchg
flds
test
cmp
andb
movsl
mov
insb
sbb
push
stos
push
mov
add
mov
popa
in
mov
data16
xchg
jne
add
add
mov
dec
ds
inc
rcr
roll
sbb
bound
sub
ja
ljmp
mov
mov
jp
orl
mov
inc
xor
jbe
pop
xchg
xchg
in
popf
ja
repz
inc
stos
dec
pop
sub
aaa
cmpsl
xchg
jns
xor
push
xor
mov
js
push
stc
inc
xlat
add
adc
mov
sbb
push
inc
xor
ds
decl
sub
addb
inc
dec
sub
jp
std
push
popa
mov
mov
jecxz
pop
testl
jle
loopne
add
pushf
ds
cs
ja
ret
cmpsl
jb
imul
popa
and
int
mov
test
pop
jbe
adc
outsb
adc
cltd
jne
cltd
mov
daa
jecxz
in
pop
sbbl
or
cmp
cmp
add
cs
cwtl
jne
xchg
pop
es
test
or
aaa
js
ror
ret
ret
test
mov
nop
mov
adc
add
scas
dec
xchg
repz
movsb
mov
push
sahf
adc
imull
jnp
enter
fstl
hlt
test
mov
mov
fistps
dec
add
bnd
add
push
adc
mov
push
rorb
stos
mov
das
adc
sahf
sti
pop
outsb
cmpsl
sub
fs
fstl
adc
ja
imull
xor
mov
arpl
adc
add
fildl
mov
adc
xchg
dec
xor
mov
std
outsl
inc
leave
inc
push
push
lcall
add
or
adc
test
jp
mov
sbb
pop
mov
jp
sub
mov
adc
pop
gs
out
imul
mov
dec
or
mov
aad
rcrb
sbb
mov
test
xor
mov
xchg
sbb
aaa
roll
int
sbb
and
leave
pop
ljmp
lods
dec
mov
inc
fstps
cli
cmp
addr16
loop
inc
push
shlb
mov
sub
adc
sbb
mov
call
mov
xlat
xlat
sti
fnstenv
ja
dec
ds
inc
xlat
xchg
mov
shll
mov
int
fdivs
mov
pusha
jge
jp
lahf
loop
popa
jmp
sahf
out
lock
pop
ret
xlat
add
popf
adc
je
dec
pop
adc
jb
sub
sbb
jmp
mov
insb
push
imul
lock
lcall
ds
push
mov
scas
cmpsb
out
adc
xlat
mov
xchg
clc
jge
loope
mov
cmp
push
test
jbe
push
int
test
pusha
mov
dec
cmpsl
addr16
pop
dec
into
xlat
pop
decb
pop
add
mov
lret
flds
mov
shl
or
mov
insl
lods
sbb
orl
mov
popf
pop
xchg
dec
dec
mov
repnz
repz
inc
cmp
rol
imull
bound
cltd
scas
nop
cmpsl
lcall
enter
out
clc
pop
rcrl
cmp
nop
ja
mov
repz
dec
aas
loop
or
jg
test
mov
lret
subl
xchg
mov
push
inc
neg
mov
ljmp
lods
jne
call
outsl
pop
leave
mov
xchg
fsts
pop
out
inc
cmpsl
mov
hlt
fcomps
sbb
xchg
mov
mov
aas
aad
and
repnz
mov
inc
mov
dec
lock
hlt
ss
dec
out
inc
pop
data16
movsb
mov
pusha
mov
jmp
cs
pop
jbe
cmpsl
shlb
mov
mov
push
test
notl
dec
push
cmp
sarb
or
dec
and
popa
loope
mov
push
pop
cmp
cmpsl
cmp
xchg
outsl
sbb
mov
xor
std
out
mov
add
lcall
scas
jl
fwait
cmp
shrb
mov
popf
xlat
add
fs
inc
ss
addr16
cmp
out
mov
lret
jp
and
mov
inc
cmp
xor
mov
fstp
shr
negl
outsl
xchg
inc
inc
dec
ss
imull
fcompl
jp
cmp
dec
dec
mov
lcall
lret
cmpsl
mov
das
pushf
cmp
hlt
lcall
not
add
in
mov
pop
scas
sub
lcall
mov
mov
movsb
and
push
sub
mov
xlat
xchg
dec
and
sbb
push
mov
push
mulb
incb
pop
and
addr16
pop
xchg
adc
jnp
sbb
rorb
mov
pop
xlat
mov
outsl
lret
leave
xchg
pop
dec
pop
in
lods
ret
movsl
sbb
xor
pop
dec
sbb
pushf
out
cltd
insb
add
and
bound
aad
cmpb
imul
imull
xorl
test
jl
add
fistpll
sub
push
popf
in
xor
movsl
and
int3
pusha
dec
pop
addr16
mov
les
fwait
add
stc
add
jle
and
push
ret
push
hlt
and
scas
push
jb
enter
or
lods
and
adc
testl
mov
mov
pop
adc
loop
jns
cld
xchg
jl
fincstp
imul
xchg
xchg
call
jg
in
std
sbb
out
cmp
fadds
mov
rorb
mov
pushf
cmpsb
aaa
jae
sbb
pop
ja
push
lcall
jns
lret
lret
push
fwait
test
les
lcall
mov
pusha
xlat
rcrl
fcmovnb
aad
adc
mov
sar
popa
xchg
jno
prefetch
or
scas
fmull
rolb
xor
mov
dec
xor
xchg
sbbl
jno
maskmovq
divl
xlat
sarl
jns
mov
push
test
out
jae
iret
fwait
mov
cmp
mov
nop
mov
lods
lea
pop
loop
mov
cmp
mov
dec
imul
stc
rorb
cmpsl
xor
enter
jno
xchg
xchg
jo
hlt
lcall
scas
lds
dec
movsb
mov
and
jae
popf
push
jle
in
and
popf
mov
xor
cmc
jge
imulb
push
rcrb
xchg
popf
xchg
jecxz
imul
into
mov
mov
inc
xor
inc
iret
repz
jne
and
cmp
test
mov
inc
xorl
mov
jp
loop
jg
cmp
scas
jno
addr16
out
cmc
dec
mov
pop
inc
les
test
mov
push
xchg
mov
stos
jle
push
js
mov
testl
adc
rcrl
cmpsl
or
jne
mov
test
jbe
pslld
shl
xchg
je
jae
cmp
xchg
out
jns
popa
sbb
fmuls
lret
cmp
movb
in
sub
out
sub
movsb
mov
cltd
fmuls
fnstenv
insb
mov
jmp
jecxz
adc
adc
mov
je
xlat
mov
add
nop
cld
lods
push
sahf
in
lea
and
loope
stos
jno
xor
ret
scas
push
call
fcoml
mov
push
dec
outsl
cmp
testl
xchg
cmpsl
inc
bound
dec
sbb
outsb
nop
dec
jecxz
test
jg
xchg
das
popa
fbld
push
sbb
mov
xor
or
jo
scas
cmp
or
push
pushf
dec
xchg
std
dec
testl
sqrtps
sub
mov
jp
adcl
pop
test
xlat
fcmovne
pop
bound
std
in
xchg
mov
test
jecxz
xchg
addr16
fdivl
and
push
outsb
sub
xchg
mov
sub
cli
stc
xor
dec
mov
inc
inc
push
add
pop
insl
mov
sysret
mov
inc
inc
pop
mov
bound
pop
push
push
jae
xor
aad
cs
or
mov
mov
stos
fiadds
add
mov
mov
call
push
rcll
idivl
mov
xlat
shl
inc
sub
mov
mov
sbb
das
cwtl
ja
mov
mov
addr16
xchg
jns
scas
mov
mov
out
and
ss
dec
mov
inc
leave
enter
push
dec
xlat
or
xchg
lods
adc
sbb
mov
mov
push
lods
aaa
push
idiv
jl
fmul
mov
mov
aam
mov
pop
out
jle
adc
mov
xchg
push
cld
enter
data16
adc
testl
mov
add
inc
cmp
mov
jb
shll
out
lods
pop
xchg
idivl
pushf
scas
adc
frstor
loop
clc
rcrb
dec
lea
scas
out
stc
mov
bound
push
pop
daa
push
jbe
jb
mov
cs
flds
push
imul
jne
mov
dec
fwait
jp
cmp
imul
inc
repz
in
cmp
rclb
sbb
leave
mov
test
mov
in
pop
test
cmp
arpl
or
mov
mov
adc
xor
scas
xchg
mov
sbb
popf
pop
movsb
addl
add
jp
and
sti
popf
mov
pop
mov
sub
rorb
mov
test
fisttpll
pop
mov
popf
xchg
data16
mov
adc
repz
xor
cmpsb
lret
or
sbb
das
sbb
ret
cmpsl
cmp
pop
repnz
inc
xchg
shrl
lea
outsl
shl
mov
cmpsl
out
insb
push
pop
notl
js
dec
pop
xchg
mov
flds
inc
pop
lods
jmp
scas
xlat
movsb
jle
cs
jbe
outsb
popa
mov
repnz
xorl
sti
mov
jnp
int
inc
loop
sbb
mov
test
sahf
push
lock
mov
mov
and
sbb
pusha
popa
inc
insl
stc
jmp
fstpt
xlat
mov
jle
idivl
out
jns
sbb
idivl
pushf
cmp
iret
std
cwtl
cmp
cmp
faddp
cwtl
sbb
mov
cmp
lds
test
cmp
iret
bound
cmp
cmp
jnp
push
mov
shll
and
jno
inc
aas
cmp
mov
cmpsl
add
iret
ret
scas
idivl
mov
mov
fbld
mov
in
test
mov
and
aad
fs
nop
or
mov
mov
daa
mov
adc
cld
and
cmpsl
push
mov
mov
insb
jns
popa
in
jns
imul
sub
rorb
mov
lods
sub
ret
mov
daa
mov
jmp
sub
and
movsb
jecxz
mov
loope
mov
mov
mov
mov
add
aas
and
scas
sbb
mov
cmpsl
add
cmpsl
and
shrl
mov
add
mov
test
movsl
mov
mov
daa
movsl
push
fucom
mov
test
mov
cmp
lods
mov
dec
mov
sub
push
mov
movsl
inc
fisubl
outsb
mov
mov
repnz
adc
sub
out
mov
mov
mov
sub
test
mov
leave
xor
jle
leave
sub
push
mov
mov
divl
mov
mov
sbb
lea
mov
or
fsubrl
int3
cwtl
cmp
mov
iret
scas
cwtl
cmp
cwtl
lods
cmpsl
rcl
cs
imul
push
xor
xor
mov
in
adc
mov
mov
test
clc
sub
push
stos
jns
push
js
xor
cmp
mov
mov
shrl
addr16
jns
aaa
ds
ja
mov
pusha
mov
xchg
iret
push
scas
idivl
out
jns
push
mov
movsl
neg
xor
jo
xlat
lock
or
xchg
cwtl
cmp
cmp
adc
mov
js
jp
std
mov
pusha
xchg
xor
jg
ret
lds
push
fwait
cmp
mov
jb
sbb
sub
movsl
jl
lea
ret
arpl
mov
jecxz
movl
or
xor
mov
movsl
mov
sbb
test
cwtl
rcrb
xlat
pop
movsl
cmc
fwait
mov
fildl
fcompl
dec
cld
fstpt
add
lcall
xchg
or
mov
pushf
aam
sub
xchg
mov
or
or
std
mov
xor
ds
sub
movsb
jbe
and
pop
mov
test
lret
leave
sbb
dec
mov
inc
and
fwait
mov
bnd
mov
imul
in
mov
inc
dec
cwtl
imul
gs
pop
mov
aam
xor
movsl
push
cmp
mov
add
ljmp
out
mov
sbb
fwait
pop
cmpsl
ret
jecxz
or
ds
adc
mov
pop
pop
sub
dec
std
mov
xor
xlat
mov
popf
sub
adc
stc
ret
pop
xor
pop
mov
sbb
test
xor
cli
mov
lods
push
push
xchg
mov
inc
jecxz
mov
mov
insb
adc
cmp
pushf
lea
xor
cli
mov
insl
insl
mov
mov
scas
jl
pushf
xchg
push
stos
sbb
pushf
out
mov
sub
adc
cwtl
xor
pop
cmpb
pop
popa
pop
sbb
pushf
repnz
mov
insb
sbb
sub
cmp
push
std
and
cmpsb
insb
jnp
xor
dec
push
mov
pushf
mov
sub
sub
cltd
sub
ds
test
imul
push
insb
xchg
sub
pushf
mov
mov
xchg
xor
and
test
xor
cmc
movsl
mov
icebp
ds
idivl
inc
roll
insl
fcoml
cmp
cmpl
inc
xor
xchg
sbbl
mov
dec
jl
jmp
mov
cmp
mov
push
in
cs
outsl
pushf
pop
jmp
lods
cmp
insl
mov
movsl
cld
pop
cmp
clc
dec
or
lds
xor
and
mov
push
test
std
pop
mov
inc
inc
and
aas
lahf
sarb
cmp
mov
fcmovnb
inc
rcl
xlat
pop
mov
ffreep
fs
orb
jnp
bound
xlat
mov
mov
or
lods
jg
sarb
pusha
add
xor
mov
test
mov
or
jge
inc
clc
sahf
daa
stc
cltd
in
inc
loopne,pt
test
cli
sti
push
mov
fidivrs
cmp
dec
adc
pop
jns
sub
or
adc
xchg
out
pop
xor
dec
dec
lods
ljmp
pop
cwtl
cmp
cmp
iret
pop
cmp
sbb
loopne
neg
ror
cwtl
cmp
jns
fs
js
inc
inc
mov
not
into
jnp
lock
dec
sub
adc
movsl
testl
push
cwtl
jge
sub
incl
add
mov
dec
movl
jecxz
fsubs
mov
jno
sbb
jns
lock
mov
cmp
mov
xchg
js
jecxz
mov
cmp
and
rorb
daa
and
mov
push
stos
rcll
cmpsb
insl
mov
mov
mov
test
mov
mov
lods
dec
push
insb
mov
jmp
mov
lods
outsb
push
xchg
push
in
cmp
sub
scas
gs
in
cmp
jmp
mov
mov
dec
xchg
cmp
fdivrs
cmpsl
outsl
dec
jns
das
std
jmp
sti
dec
aad
iret
insb
insl
std
in
mov
dec
idivl
in
cmp
dec
xor
clc
out
scas
jns
sarb
stos
mov
adc
push
out
xor
add
mov
adc
cmc
sub
sub
lods
lea
mov
stc
inc
sti
push
xchg
sarb
mov
dec
test
pop
sbb
bound
lea
push
testb
or
shrl
andb
adc
daa
loop
add
jmp
sub
sbb
daa
add
inc
and
dec
mov
and
xchg
add
or
cwtl
lods
and
mov
mov
add
dec
iret
fwait
mov
jecxz
fists
lret
fs
lret
bound
fstps
aas
jg
inc
leave
fwait
stc
subb
js
clc
loopne
cmp
rol
pop
adcl
and
dec
cmpsl
xor
cmp
jge
or
loop
sub
je
gs
pop
or
sbbb
dec
mov
testl
jp
testl
fcomip
imulb
or
popa
and
test
and
dec
mov
and
lcall
pop
mov
xchg
pop
call
shlb
negl
stc
sbb
lret
inc
iret
xchg
jns
sbb
mov
sbb
xor
sbb
jg
stc
aaa
or
scas
loop
add
cmp
xor
inc
arpl
inc
mov
sahf
std
jl,pt
fidivrs
sbb
inc
xchg
jp
vpcmpeqb
jle
movsb
loop
mov
cmp
fst
mov
or
cmpsl
leave
sarl
pop
fwait
cmp
jecxz
cmp
pop
clc
lahf
inc
in
inc
loopne
dec
scas
negl
and
mov
dec
sub
mov
scas
ficoms
imull
mov
movsb
mov
div
movsb
loop
lods
fisubs
sbb
push
cmpsb
mov
out
xlat
daa
inc
lods
scas
and
xchg
push
xor
cmp
movsb
sarl
pop
dec
sub
out
mov
dec
mov
insb
enter
push
mov
push
imul
in
push
mov
jecxz
ret
stos
push
sub
test
divl
mov
cs
lds
push
or
adc
stos
jno
mov
mull
dec
xlat
xchg
lds
clc
imul
cmp
mov
xchg
sbb
fldenv
pop
or
fcmovnb
sbb
or
mov
pop
jmp
cmp
mov
push
jge
mov
jp
idivl
inc
adc
cwtl
aam
cmpsl
cmp
pop
mov
pop
xchg
mov
sbb
jo
mov
movsb
shl
sbb
xcrypt-ctr
cmpsl
fwait
cmp
cltd
mov
jae
imul
pop
inc
scas
cmc
push
pushf
fnstsw
adc
inc
xchg
push
shlb
inc
imull
hlt
mov
xor
sub
out
jg
arpl
scas
imul
clc
sti
pop
inc
xlat
mov
jae
mov
mov
jbe
push
push
xchg
fwait
test
frstor
xor
cmc
xor
push
dec
sbb
jno
stos
je
fmuls
mov
imul
mov
pusha
mov
test
mov
mov
cmp
mov
imul
in
jo
repz
cld
subl
jae
cmpsl
xor
int
adc
ja
xchg
nop
popa
adc
adc
sbb
fwait
mov
xor
fidivl
dec
out
dec
jmp
jle
push
inc
repnz
and
mov
outsb
push
mov
or
xlat
test
sbb
jp
hlt
add
cmpl
int
mov
and
xchg
mov
pop
xchg
pop
mov
cmp
mov
dec
mov
mov
or
orb
movsl
mov
adc
xchg
xchg
out
or
jge
fs
adc
pop
fimuls
jmp
call
cwtl
mov
jno
imul
fldcw
test
call
mov
js
push
mov
xor
out
shrb
iret
cmpsl
cmp
dec
mov
xor
rol
cs
push
mov
adc
push
jecxz
aaa
cwtl
dec
jae
push
cmpsl
xor
cltd
pop
lock
mov
jmp
mov
and
adc
push
mov
sbb
les
mov
test
pop
push
mov
xlat
mov
loop
cwtl
imul
mov
ja
int
dec
mov
pop
lods
ret
push
in
mov
push
mov
jle
test
mov
inc
dec
adc
mov
mov
daa
xchg
mov
clc
xchg
cmpsl
pop
mov
pusha
loop
call
mov
add
push
mov
shrl
mov
sahf
mov
inc
cmp
cmpsl
pop
leave
or
push
mov
inc
xor
stc
cmp
mov
lret
aas
nop
adc
cwtl
mov
mov
repz
xchg
push
aas
notb
repz
stos
fs
hlt
mov
rolb
xlat
negb
scas
cmpl
imul
or
add
mov
push
movsl
hlt
sub
sub
lret
xlat
cmpsb
outsb
insl
out
add
jbe
mov
movsb
mov
cmp
mov
mov
movsb
mov
cwtl
or
stos
gs
shlb
xor
sub
add
cld
sbb
inc
mov
lds
jo
add
fistpll
sbb
cltd
jbe
hlt
push
dec
xchg
mov
adc
aaa
dec
lahf
call
inc
sub
ret
cmpl
loope
out
scas
lahf
pop
xchg
mov
pop
adc
repnz
testb
mov
je
or
cmp
scas
xrelease
mov
sbb
jge
inc
or
or
mov
mov
fs
inc
mov
dec
push
pop
orb
sbb
mov
mov
test
mov
sti
mov
xchg
repnz
push
xlat
int
xchg
sub
out
xor
and
mov
in
stos
cmpsl
mov
loopne
xlat
insl
mov
addr16
das
lcall
loop
xor
ficoml
cmp
adc
test
enter
cmpsl
or
inc
mov
mov
dec
lret
gs
das
push
mov
lahf
inc
pop
cmpsl
and
es
adc
mov
in
mov
or
and
sbb
test
testl
xchg
adc
mov
or
cltd
ds
jmp
pushf
or
xchg
mov
mov
sbb
jno
in
and
clc
sbb
cld
rcll
adc
stos
adc
fildll
xor
sbb
mov
divb
jne
jns
mov
adc
cmp
cmp
lock
mov
icebp
xlat
addl
xchg
sbb
mov
push
push
lahf
jge
mov
in
hlt
out
divb
sbb
and
mov
adcl
mov
push
in
mov
lds
sbb
enter
lods
mov
clc
out
sbb
mov
lea
pop
sbb
push
push
mov
sub
pop
sti
sub
daa
xor
ficompl
popa
xchg
int
dec
cmpsb
push
add
lods
icebp
jbe
mov
pop
mov
jg
incb
les
adc
mov
mov
scas
mov
jl
iret
mov
add
jae
jns
cmpsl
cwtl
lahf
push
stc
mov
stos
push
dec
js
rcr
dec
xlat
xlat
imul
scas
int3
repz
pop
or
sti
xor
iret
sub
popa
bound
mov
test
mov
add
cltd
sbb
push
loope
or
xchg
fstp
push
mulb
into
xlat
xchg
das
sbb
daa
sbb
mov
addr16
mov
fisttpl
icebp
cli
aam
fdivrs
xchg
mov
jl
aad
scas
and
mov
adc
pop
iret
mov
std
ret
mov
fcmovnb
loopne
fisttps
imul
push
mov
xchg
pop
xor
cmp
sbb
shl
scas
lock
pop
rorb
nop
daa
fs
fdiv
dec
mov
and
repz
gs
xor
jmp
mov
mov
cli
aam
cmpsl
jne
ds
sbb
adc
fwait
pop
pop
test
shll
xchg
mov
icebp
xor
lds
mov
lods
idivb
or
fstpt
bound
cwtl
js
jns
sbb
mov
loop
sub
aaa
test
cmp
mov
jno
mov
mov
testl
cmpsl
aaa
enter
ja
fwait
xor
dec
sub
push
mov
cmp
out
iret
cmp
je
fcoms
inc
lahf
dec
pop
sub
mov
shr
out
jns
mov
daa
xor
pop
cmp
repz
mov
jbe
jns
adc
js
fs
ret
mov
sub
push
cmpsl
int
add
jne
push
mov
imull
dec
addr16
lcall
loope
stc
jge
cwtl
movsl
fsubrs
jp
nopl
add
mov
and
mov
into
fsqrt
sbb
jle
test
xchg
loop
bound
andb
es
ja
aaa
test
popf
xchg
mov
mov
sub
repz
add
add
and
pushf
xlat
outsb
sbb
jo
cltd
pop
mov
shrl
sbb
pop
xchg
pusha
or
dec
sbb
push
mov
rorl
adc
into
and
push
fs
jp
fdivrl
lods
sbb
push
fwait
cmp
rcr
enter
mov
mov
pushl
jno
and
mov
fcom
jbe
cmc
mov
mov
add
fsubl
hlt
out
aaa
js
cmpsw
fsubrs
pop
xchg
mov
aaa
mov
xchg
mov
adc
push
mov
xchg
sbb
out
sbb
adc
jp
cmp
cmovg
cmp
out
imul
dec
shll
cmp
sti
lds
pop
mov
inc
push
lret
cwtl
and
cmpl
dec
ja
cmpsl
sbb
push
movsb
cwtl
shr
pop
mov
fldcw
mov
lods
mov
ret
sbb
enter
mov
add
sub
pop
mov
sarb
jmp
test
or
negl
in
mov
scas
movsl
pop
pop
jne
lahf
inc
aad
nop
movsb
sub
push
cltd
sbb
sub
jle
or
jbe
mov
jmp
jno
pusha
cltd
and
mov
or
cwtl
cld
xchg
jle
push
mov
mov
leave
sub
cwtl
cltd
pop
mov
ja
xchg
push
mov
pop
pop
test
out
ret
lods
gs
in
mov
jb
insb
daa
or
pop
sbb
aam
sbb
movsl
scas
jge
lret
in
inc
jbe
jmp
cmpsl
pop
mov
mov
call
stos
cmp
ja
mov
or
mov
jmp
inc
pop
xlat
sti
shr
jno
cmp
iret
cld
lret
scas
fldt
leave
dec
stos
pop
js
add
dec
cmpb
jp
pop
adc
stos
nop
dec
lret
fnstsw
mov
sub
mov
outsl
adc
mov
add
sub
mov
cmp
push
mov
lock
pop
dec
and
xlat
lret
imul
ret
je
pop
pop
data16
add
into
cmp
cmp
daa
adc
jb
mov
cmp
loope
sub
stc
mov
insl
adc
and
subl
rclb
mov
sbb
mov
cmpsl
add
mov
mov
cmpsb
jb
das
aas
ds
es
jle
inc
mov
sub
fwait
jge
out
jno
push
sbb
ja
aaa
and
mov
and
mov
cs
js
mov
and
lahf
and
scas
mov
inc
jnp
sysexit
mov
xchg
negb
pop
push
inc
cwtl
cmpsb
xchg
or
mov
add
daa
cwtl
lahf
cwtl
xchg
jns
mov
cwtl
scas
movl
jno
jecxz
xchg
call
aam
lahf
pop
cmp
nop
or
mov
mov
jg
mov
dec
xchg
mov
push
test
lahf
xor
sbbl
push
repz
add
fwait
pand
dec
xchg
xor
sub
imull
dec
enter
mov
mov
and
xchg
inc
mov
sbb
xor
iret
out
mov
rorl
inc
jecxz
add
mov
xchg
jne
inc
testb
inc
jns
cmp
jp
add
outsb
pop
mov
dec
sbb
inc
inc
pop
into
cmp
mov
movsb
ljmp
mov
pop
aam
out
mov
cmp
xor
stc
lods
adc
cmp
ljmp
xchg
inc
scas
jno
xchg
sbb
arpl
or
pusha
aaa
loop
pop
je
dec
pop
sbb
cmp
test
cmpl
out
icebp
jge
mov
mov
and
mov
adc
testb
mov
rclb
cmp
sbb
lahf
scas
sbb
out
xor
mov
mov
mov
enter
std
adc
daa
mov
fdivs
addr16
mov
or
daa
sub
les
ljmp
and
fstps
loope
adc
xchg
pop
test
jbe
xlat
push
xchg
dec
cmp
sbb
pop
or
push
or
loopne
mov
test
cmp
pop
inc
and
xchg
push
stos
mov
pop
lret
xchg
dec
jnp
fistps
sti
mov
or
xor
movsl
xor
xchg
xor
pop
cltd
scas
push
and
jb
add
enter
lret
and
sub
cltd
popa
xor
roll
inc
loop
aaa
cmpsb
xlat
lea
cmc
clc
cwtl
js
icebp
adc
jae
nop
fldenv
adc
add
sbb
sbb
scas
mov
xor
jl
icebp
testl
and
or
mov
stc
fcmovu
mov
int
xchg
gs
push
pop
test
push
testb
cmp
inc
add
lret
pop
cld
and
mov
rsm
mov
stos
jne
scas
fcompl
ficoms
xor
fbld
mov
mov
lcall
ret
mov
mov
sbb
loop
dec
aad
mov
in
test
pop
inc
mov
fisubs
and
mov
push
mov
mov
pop
inc
iret
push
out
daa
iret
data16
mov
lahf
test
cmpsl
sti
lods
ret
mov
fsubrl
xor
fidivs
mov
fst
jle
gs
push
fwait
cmpsl
loopne
fcoms
movsl
lods
push
xchg
mov
addr16
mov
jbe
push
mov
push
mov
pop
xchg
mov
pop
mov
xchg
pop
aas
jae
inc
mov
ss
or
popf
notl
mov
icebp
aaa
movsb
inc
xchg
sub
out
idivl
cmpsb
push
arpl
mov
cmp
dec
fcoms
mov
cmpsl
ret
mov
push
add
fdivl
adc
stc
pop
add
pop
dec
mov
mov
movsb
lds
dec
mov
stos
ret
adc
xchg
xor
mov
aaa
aad
out
mov
iret
adc
sahf
xchg
ja
test
in
sub
mov
xorb
cmp
xchg
insl
and
mov
xor
mov
adc
add
jno
mov
test
sbb
xor
mov
cld
mov
fcomps
leave
lret
mov
mov
pop
sub
mov
inc
xchg
mov
xlat
ja
mov
pop
ret
test
cwtl
nop
jp
add
fstpl
xor
es
pop
push
mov
add
mov
add
scas
add
movsl
js
pushf
hlt
sahf
sub
mov
cmpsl
fdivr
xor
or
data16
das
mov
mov
cmp
lret
pop
js
scas
aam
movsl
inc
mov
dec
cltd
mov
jbe
add
fisttps
test
cmpsl
dec
lahf
xor
jns
mull
mov
sub
mov
out
subl
fsubrp
lret
idiv
cli
sahf
sub
test
movaps
cmc
int
fdivrs
add
bound
fucom
xor
jo
andb
mov
pop
mov
jmp
or
test
jb
scas
test
sbb
aas
es
in
mov
fstpt
jns
pusha
repz
add
test
sbb
bound
dec
and
mov
mov
cmp
mov
add
sub
mov
jmp
inc
pshufw
pusha
lock
ds
inc
adc
jmp
fnstenv
ja
pusha
lds
xlat
inc
mov
pop
fstpl
cmpsl
lret
mov
lods
ss
jbe
aaa
cmp
aam
push
in
push
mov
ret
jmp
icebp
stos
dec
inc
out
push
cmp
or
in
push
sbb
and
mov
adc
orl
shr
fsubrp
add
sbb
pushf
dec
xchg
cwtl
pop
ror
mov
sub
and
in
sub
sbb
insl
adc
jmp
aas
cwtl
frstor
dec
stos
fcomp
scas
aam
cmc
cmpsl
xchg
jge
sbb
mov
xchg
xchg
je
aas
test
jnp
data16
xor
subb
mov
aam
js
lds
lods
orb
adc
dec
idivl
imul
pusha
pop
adc
or
mov
repz
sbbl
xor
divb
mov
xchg
aas
push
and
xchg
mov
sbb
sub
pop
or
outsb
cmc
mov
lds
and
push
lcall
cltd
rclb
rcrl
insl
dec
out
out
mov
subl
out
in
push
sbb
repnz
mov
inc
adc
test
mov
inc
out
call
jo
adc
out
dec
push
mov
xor
lea
ret
imull
mov
and
addl
mov
add
push
dec
sbb
xchg
push
out
int
mov
mov
mov
mov
insl
and
and
scas
cmp
cwtl
mov
repz
cld
sbb
fisttpl
imul
and
xor
or
mov
mov
cmp
fninit
das
mov
push
sti
adc
ss
mov
inc
xor
sahf
jae
test
das
fisubs
xor
into
aaa
lahf
dec
mov
cmp
arpl
aam
mov
dec
popa
sub
inc
clc
ja
divl
mov
mov
notl
stc
into
ret
jmp
outsl
fs
lock
add
es
out
cmpsl
sub
xchg
add
sbb
xchg
pop
cmpsb
lahf
mov
addr16
cld
jge
mov
call
arpl
ficomps
mov
inc
repnz
repz
mov
nop
fwait
xchg
cmc
mov
or
imul
nop
sub
data16
loopne
sbb
test
xchg
mov
test
cmp
pop
mov
loope
inc
jl
stc
inc
cmp
cmp
movsl
incb
or
sbb
jle
pop
push
sbb
daa
shlb
add
in
das
repz
movsl
fisttpll
mov
push
inc
les
hlt
and
test
xor
lret
cmc
mov
lds
pop
mov
enter
adc
ss
dec
xor
mov
or
repz
cmc
sub
cmp
mov
fisttps
jmp
mov
pop
sbb
lret
xchg
mov
jnp
cmp
push
ss
xor
and
sbb
xor
outsl
jns
pop
call
dec
dec
out
xchg
ljmp
dec
lock
es
cmpsl
sti
fstpt
cli
movsb
mov
pop
jbe
out
ret
orl
pop
xor
mov
push
negb
mov
inc
inc
repnz
jae
icebp
jge
push
int3
cltd
jns
cmpsl
flds
arpl
mov
jg
mov
data16
fbld
cmpsb
adc
and
fisttpl
push
clc
push
fcos
je
mov
cli
jb
jle
es
mov
push
jns
xor
mov
jnp
cld
sub
inc
dec
test
sbb
clc
inc
lret
dec
mov
enter
flds
xor
mov
pusha
cmp
lea
insb
xchg
mov
ret
shrl
push
pop
adc
sbb
mov
call
inc
daa
dec
aas
or
cltd
push
pusha
push
mov
mov
aas
and
cmpl
jmp
addr16
sbb
out
dec
add
enter
aam
pop
idivl
stos
xchg
movsl
pushf
scas
iret
stos
movsb
mov
js
sub
xchg
fdiv
lods
sub
xor
mov
in
jmp
xor
lea
lods
xchg
inc
push
fldt
aaa
pushf
arpl
cmp
dec
fnstsw
adc
cmpsl
dec
daa
add
imul
mov
pop
orl
scas
pop
movb
clc
and
jbe
cmp
lret
stos
mov
imul
stos
add
mov
push
fwait
push
cmc
popf
and
lahf
mov
and
aas
negb
or
push
cmpsl
cmp
jns
jo
test
in
into
cmpsl
fcmovnb
mov
stc
mov
insb
jne
int
jp
adc
dec
lret
and
mov
push
je
xlat
stos
xlat
inc
push
aaa
or
aad
popf
cltd
mov
inc
test
mov
mov
add
out
lea
sbb
sbb
movsb
hlt
and
aaa
push
pop
sbb
or
add
xchg
mov
out
cmpsb
cmp
lods
xlat
cltd
rcpps
or
aad
adc
or
jmp
insl
inc
xchg
sbb
lcall
daa
jg
cmpsl
pop
mov
xchg
data16
mov
and
and
push
mov
sub
aaa
loope
add
movsl
mov
popf
xor
jmp
mov
sbb
xorb
adc
clc
mov
movsl
aaa
loopne
jge
xchg
mov
xchg
jg
xchg
push
cld
js
fstpt
stos
outsl
xchg
push
mov
mov
push
call
out
mov
jb
fdivs
push
xchg
inc
scas
data16
dec
jnp
pop
xor
or
addl
or
lods
fs
popf
cmc
stos
fldl
lcall
mov
movsl
pop
leave
arpl
aaa
and
cmp
bound
lahf
mov
mov
mov
cltd
xchg
call
or
lea
mov
loope
mov
mov
mov
jbe
enter
mov
mov
test
clc
repz
mov
mov
xorb
fdivp
stc
lcall
mov
int
jp
fucom
sub
outsl
test
cmp
dec
lea
push
or
xor
shlb
sub
adc
pop
fbstp
arpl
inc
sbb
scas
mov
stc
jmp
iret
lods
lock
xor
cli
cmpsl
ficomps
rorb
data16
icebp
cmp
dec
mov
jno
push
ja
or
jge
mov
sbb
lods
lea
arpl
jmp
pop
jns
mov
jmp
xchg
mov
shlb
out
hlt
add
or
mull
xor
lret
inc
mov
xchg
push
pop
xchg
stc
scas
jecxz
xchg
sub
leave
arpl
mov
jl
mov
out
and
mov
pop
cmpsl
out
mov
pop
mov
mov
jb
in
push
fsubs
push
dec
inc
cmpsl
daa
adc
sbb
das
movb
loope
js
mov
pop
call
lret
cld
xlat
test
jl
rcrb
sbb
ja
and
addr16
out
mov
aad
inc
call
lds
add
push
mov
dec
divl
lret
push
in
mov
call
xlat
jl
std
mov
iret
inc
incb
jle
in
into
loope
pop
out
insl
push
cltd
sub
mov
dec
aam
push
adc
pop
adc
xchg
sbb
idivl
sbb
popf
cmpl
mov
or
dec
mov
lds
sbb
test
lods
sarl
mov
aad
dec
idivl
mov
xor
sti
iret
mull
xchg
xor
enter
pop
mov
mov
push
sub
mov
xlat
in
hlt
enter
out
mov
mov
lds
iret
into
cli
mov
mov
push
mov
inc
xchg
ja
dec
lock
mov
stos
cltd
mov
pop
decl
int
adc
mov
mov
in
mov
js
pop
mov
cli
xchg
jns
rclb
push
movsl
push
cmpsl
mov
int
outsl
aas
jnp
mov
bound
cltd
aaa
xchg
jle
rorb
cltd
pop
mov
jmp
lea
or
cmovne
dec
pop
xchg
fmul
mov
cmpsl
fisubrl
cmc
mov
pop
je
fldt
scas
pop
notl
popf
dec
ss
out
jae
sarl
or
lods
xor
pop
scas
push
mov
xchg
outsl
pop
jns
aas
cmc
sbb
fwait
dec
cmp
loop
scas
cmp
or
movsl
sbb
jns
push
mull
aas
xlat
pusha
and
pop
cmp
mov
pop
xchg
cmp
xchg
xlat
js
inc
iret
int
pushf
pop
adc
mov
ja
mov
js
inc
int3
notl
cli
or
mov
mov
cmp
sub
mov
mov
jle
clc
std
xchg
maskmovq
imull
mov
ljmp
jo
sbbl
pop
sbb
mov
sbb
filds
sbb
aad
ss
mov
cs
cmpsw
test
jge
sub
sbb
incl
xchg
mov
inc
mov
insb
cmp
lret
lcall
cmpsl
xchg
movsl
int
cmp
adcb
xor
and
inc
xchg
pop
rcr
movsb
out
fimuls
loopne
mov
mov
sbbb
mov
cmpb
jne
mov
adc
test
mov
mov
xor
stos
and
dec
xchg
icebp
enter
mov
stos
add
mov
mov
mov
test
je
ror
mov
aas
mov
sub
ljmp
fnstsw
cmc
dec
popf
gs
lret
out
loopne
xchg
aas
bound
hlt
inc
negl
scas
int3
into
xcrypt-cbc
cmpsl
adc
ljmp
das
inc
adc
stc
aam
pop
mov
and
movl
adc
xchg
lods
mov
adc
cli
fidivrs
jns
cs
ljmp
or
ret
adc
xchg
xor
inc
xor
pusha
shll
xchg
inc
in
aam
jp
jg
mov
add
mov
dec
cmp
scas
stos
cmp
push
cmpsl
lds
scas
xchg
mov
test
shr
mov
sbb
xchg
mov
stos
mov
cltd
fistl
push
mov
std
clc
inc
lods
mov
xor
adc
imul
pop
lea
decb
mov
xchg
sahf
push
lcall
dec
pop
push
bound
js
mul
xchg
frstor
xor
jge
icebp
cmp
dec
bound
xchg
iret
mov
jle
ljmp
or
and
icebp
adc
ss
mov
mov
setbe
pop
das
sub
cltd
and
mov
notb
lret
push
mov
insl
mov
mov
or
cmpl
lods
adc
pop
or
cld
clc
sbb
inc
lahf
imul
jp
popa
add
lods
movb
cltd
pop
mov
sub
mov
pop
andl
pop
push
test
cmc
jge
mov
push
cmpsl
adc
mov
cmp
mov
into
and
popf
je
pop
idivl
mov
mov
lahf
cmp
push
incb
aas
dec
lahf
inc
sbb
sub
mov
ja
cmp
xor
dec
inc
and
daa
fcmovnb
sbb
jge
out
test
and
mov
imul
fadd
nop
ja
sahf
push
mov
out
xchg
movsb
scas
in
cs
add
test
mov
mov
xor
popa
jg
lcall
cld
mov
cmp
mov
clc
ds
cwtl
mov
mov
and
ffree
testl
not
cltd
pop
adc
sbb
sub
daa
mov
mov
fbld
jns
push
retw
jmp
ljmp
dec
sbb
andl
out
xor
jb
jl
cltd
and
or
sbb
enter
adc
push
jne
sbb
lcall
cli
jle
mov
aad
dec
dec
jp
lret
sub
jmp
movsl
negb
call
jne,pt
and
mov
adc
jbe
xchg
cmp
cwtl
push
lcall
insb
adc
dec
rorl
ret
cmp
aas
sahf
xlat
mov
js
inc
or
inc
mov
scas
cld
mov
mov
hlt
cmp
cmpsl
pop
mov
add
cmp
mov
or
adc
mov
fidivrl
jno
sti
lods
stc
aaa
mov
clc
sbb
icebp
jns
adc
xor
cltd
test
sar
cmp
cmpsb
xchg
popf
js
cmc
mov
push
xchg
mov
sti
mov
mov
test
jns
push
dec
mov
fdivs
mov
pop
pusha
pop
rcl
lods
mov
sbb
xchg
xchg
insb
lea
mov
in
mov
mov
xor
sahf
cwtl
xchg
push
add
aaa
outsl
xor
mov
mov
dec
sar
fsubl
sti
xor
mov
xlat
orl
mov
ret
shr
mov
xlat
test
pop
notb
out
dec
shlb
inc
test
mov
jmp
scas
xorl
mov
pop
cwtl
ljmp
pushf
loopne
and
in
out
out
xor
dec
mov
add
xlat
mov
mov
incb
adc
gs
jle
push
ss
iret
scas
scas
mov
test
lret
outsb
mov
ret
out
mov
rolb
mov
adc
bound
test
fs
ljmp
dec
add
mov
scas
push
clc
sbb
sub
mov
cltd
push
sarb
sbb
or
int
les
ss
fstps
xlat
adc
sub
aas
int3
mov
xlat
mov
cmp
loopne
rclb
mov
rcrl
add
or
psraw
ret
popf
es
mov
shll
push
xor
inc
inc
cmp
notb
scas
jne
inc
cmpsl
jns
dec
stos
sbb
xchg
mov
sbb
mov
and
mov
or
test
jnp
sbb
nop
sub
jg
mov
pop
mov
leave
vmptrst
ret
pop
cmc
cmp
fiaddl
bound
add
jns
hlt
fwait
jns
inc
sbb
sbb
push
mov
mov
dec
push
repnz
add
mov
xor
jp
sub
xor
dec
movsb
inc
popf
scas
mov
push
scas
test
push
xchg
xor
lcall
mov
in
add
fidivs
out
mov
xchg
cld
sbb
dec
jnp
inc
out
stos
lods
jp
add
sbb
shrl
or
push
in
dec
cmp
xchg
mov
inc
add
fnstsw
jmp
mov
pop
xlat
cmp
mov
or
outsb
pop
in
fwait
test
xor
insl
mov
and
jle
aaa
shlb
ss
xchg
mov
sahf
cmp
lahf
jbe
rolb
movsl
mov
fdivl
sub
inc
jns
push
out
xchg
lret
xchg
pop
xlat
scas
movsl
jne
mov
pop
jns
fs
fadds
out
mov
mov
cmp
jp
insl
sti
mov
pushf
popa
jo
pop
je
pop
cmp
xor
mov
fdiv
sub
mov
mov
mov
mov
sub
aaa
mov
imul
popa
sbb
or
xchg
dec
hlt
cwtl
in
push
lods
jnp
sbb
push
testl
cmpsb
cmpsl
aas
lds
xchg
or
in
mov
push
mov
aaa
les
pop
or
fisubrs
mov
pop
fcomp
inc
scas
ror
orb
inc
dec
mov
stos
gs
clc
mov
in
mov
cmp
out
pop
icebp
sbb
xchg
adc
idivb
mov
mov
ja
jne
sbb
cmp
test
fcmovnu
mov
cwtl
mov
jno
lret
mov
mov
jp
enter
js
pop
or
gs
rclb
xchg
outsl
nop
test
lds
mov
xor
mov
lcall
popa
xchg
stos
mov
cmpsl
out
les
mov
or
fidivrl
insb
les
mov
fsubrs
aad
lcall
scas
adc
mov
ror
xor
cmpsl
gs
lods
add
scas
mov
mov
out
inc
inc
jl
aam
cmpsl
insl
mov
pop
pop
cltd
cmp
out
nop
dec
mov
loope
test
fnstcw
repz
dec
mov
or
cmp
and
or
adc
xchg
mov
mov
arpl
jle
insl
xchg
mov
or
mov
jb
popa
mov
ret
push
in
mov
push
xor
scas
push
lret
jecxz
pop
mov
jg
dec
cmpsl
pop
and
sbb
mov
mov
hlt
into
aas
inc
adc
mov
iret
movsb
adc
cltd
cli
mov
cmp
es
xchg
or
mov
mov
dec
push
adc
out
pusha
repnz
mov
stc
sbb
pop
stos
xchg
repnz
cmpsl
call
xor
js
mull
ljmp
xor
lahf
mov
xchg
cmp
sub
mov
enter
aaa
flds
and
cmc
cmp
lahf
jp
cmp
dec
cmpsl
mov
in
mov
mov
hlt
mov
xor
loope
inc
jl
icebp
in
cmpsl
out
call
sbb
fsts
jno
cmpsl
push
clc
mov
pop
fs
mov
bound
mov
or
out
sbbb
fnstcw
fidivl
cwtl
test
sbb
cmp
mov
mov
es
mov
movsl
mov
loopne
out
push
pop
int
shl
inc
fsubrp
sbb
sbbl
mov
dec
lods
hlt
mov
sti
in
pop
mov
fnstenv
pop
fcomps
and
inc
divb
adc
loopne
call
les
sbb
popa
shrb
mov
fdivs
xor
clc
movsb
ljmp
aaa
inc
cmp
xor
movsl
mov
jnp
neg
sub
or
movsl
pusha
jbe
lahf
fwait
clc
cmpl
dec
lods
mov
rolb
xchg
add
lods
or
mov
xchg
mov
int
stc
jmp
push
push
sbb
cmpsb
in
pop
adc
lods
in
repz
and
mov
push
daa
lods
sahf
mov
stc
add
inc
and
insl
sub
jge
clc
mov
imul
mov
xor
inc
fwait
sbb
pop
mov
mov
popa
push
cmp
fs
fsubl
sbb
jg
mov
mov
jge
inc
icebp
pusha
dec
and
sbb
xchg
aas
mov
push
int3
mov
mov
mov
push
out
jne
xchg
js
outsl
addr16
inc
shrl
cwtl
xlat
scas
insb
pop
mov
adc
jl
inc
inc
cwtl
sti
and
mov
mov
ret
adc
jnp
mov
dec
out
cltd
iret
push
out
pop
push
repnz
aam
mov
and
mov
bt
movsl
mov
hlt
out
jns
sarl
testl
repnz
mov
add
sbb
shrl
pop
test
xlat
add
ror
pop
lahf
xchg
xor
mov
mov
and
or
xor
and
push
mov
mov
lret
and
addb
mov
lcall
cmpsb
adc
cwtl
test
adc
and
xchg
dec
repz
in
jo
aam
hlt
xlat
pop
movsl
xchg
and
sub
decb
dec
sbb
or
inc
inc
mov
mov
imul
into
in
out
mov
mov
stos
push
pusha
lcall
mov
mov
dec
jns
pop
aam
mov
cmpsb
mov
jecxz
sub
dec
add
fisubrs
cmp
xor
inc
scas
not
in
in
adc
scas
mov
xor
mov
leave
mov
pop
out
cltd
sbb
push
gs
lahf
inc
xchg
xor
lds
pop
jnp
bound
sbb
jp
pop
mov
lcall
jecxz
call
pop
divl
repz
jp
sbb
addl
inc
mov
sbb
cmp
sbb
movsb
testb
shl
cli
pop
push
cmp
inc
popf
xlat
cmp
xchg
es
inc
xor
lock
mov
pop
and
mov
arpl
cmp
xchg
inc
mov
stc
cmp
scas
mov
and
cmpsl
mov
mov
inc
mov
add
les
add
cli
cmpsl
xor
xlat
loope
mov
divl
adc
mov
cmpsb
lods
gs
pusha
push
push
fsubs
popa
icebp
sarb
nop
mov
or
cmp
jmp
adc
daa
push
int
cwtl
sub
lods
in
mov
sbb
inc
pop
in
test
mov
les
push
add
inc
movsl
xchg
mov
mov
dec
test
int
fldenv
pop
insl
cmp
lods
xchg
fwait
call
pop
xor
mov
cwtl
jbe
xorb
or
call
movsb
cwtl
cmp
out
notb
add
cmpl
sbb
mov
mov
dec
pusha
loope
add
shlb
cmp
adc
popf
cmp
int
and
sbb
lods
lea
xor
mov
xchg
in
dec
cmp
push
jmp
rcl
xchg
add
cmp
add
fwait
and
adc
cmc
cmp
sbb
loopne
mov
sti
mov
shrb
cmpl
mov
lea
ret
test
mov
jge
mov
dec
xlat
jne
mov
push
bound
jl
js
adc
mov
push
mov
mov
out
inc
aas
inc
imul
in
or
into
mov
inc
cmp
sub
xor
mov
clc
popf
orb
mov
fcomp
in
push
mov
and
lods
cmp
sbb
xor
scas
jl
jmp
mov
shl
cmp
in
inc
pop
mov
lahf
push
psraw
outsb
mov
pop
int
push
mov
xor
in
fdivs
xchg
insl
add
sbb
mov
pop
inc
pop
fmul
js
and
mov
sub
xor
adc
jecxz
mov
in
sbb
testl
push
adc
mov
dec
xlat
cmc
dec
andb
hlt
mov
loop
addr16
xchg
in
ljmp
inc
fwait
push
lcall
or
mov
xorl
inc
mov
stos
lods
xchg
cmp
ret
xlat
dec
clc
pop
cld
cmpsb
adc
xchg
sub
sarb
pop
xchg
test
cli
mov
cwtl
cmp
stos
cwtl
inc
add
pop
sbb
ret
xlat
mov
jmp
fistpl
mov
stc
xchg
pop
testl
call
jns
lock
push
int3
xlat
adc
sub
pop
ret
lods
idivl
inc
lahf
mov
movsb
xor
ret
outsb
test
and
lcall
seta
and
mov
dec
or
shll
adc
pusha
jnp
mov
pushf
cltd
sti
aad
xor
and
imul
std
inc
dec
arpl
jb
inc
push
mov
or
push
neg
cmp
push
push
cmp
pop
stos
inc
fcomps
fmull
dec
loopne
jns
scas
addr16
cli
sarl
out
xorl
inc
cli
add
out
insb
xor
push
int3
mov
jae
stos
iret
dec
mov
sub
xor
das
icebp
pop
stos
inc
xlat
fwait
jns
fisttpl
nop
mov
mov
lods
bound
sub
inc
sbb
stos
mov
test
jbe
movsl
jge
mov
cmpsl
cmpsl
mov
mov
add
sub
bound
std
sub
mov
mov
iret
in
call
mov
mov
inc
cmp
mov
and
mov
inc
jl
add
aad
mov
jbe
stc
imul
rol
xchg
arpl
mov
pop
lods
xlat
call
and
and
xchg
inc
mull
mov
mov
push
shl
jns
lahf
mov
mov
insl
cwtl
es
mov
mov
popf
popa
mov
imul
stc
addr16
adc
test
push
jg
xor
jbe
adc
outsl
test
jecxz
aaa
lret
aam
mov
das
pop
pop
into
mov
adc
jae
out
or
pushf
movsl
adc
jle
pop
cltd
mov
outsb
test
inc
cwtl
test
in
loopne
scas
cmp
push
pop
divb
out
pushf
push
mov
adc
push
mov
stos
xorl
std
cmp
pop
insb
in
mov
and
hlt
aas
pop
push
mov
ret
dec
stc
cmp
cmp
sarb
int
fbld
es
cmpsl
stos
in
cmp
push
mov
scas
xor
data16
xchg
cwtl
icebp
or
pop
lock
repnz
ficomps
push
adc
pop
inc
mov
clc
dec
cwtl
sub
fnstsw
mov
inc
aaa
push
shll
dec
cmp
xor
clc
std
mov
fildl
fcompl
cwtl
push
adc
lock
mov
arpl
aad
cmpsb
fistpl
mov
stc
sbb
push
lods
xchg
mov
and
scas
mov
sahf
out
inc
sbbb
push
je
test
sbb
mov
daa
lret
jg
mov
out
add
jae
pushf
mov
lock
or
add
and
mov
and
adc
xchg
fistpl
xlat
popa
aaa
ror
jne
cmc
nop
out
fcomps
cmp
stos
pusha
inc
dec
mov
cmpsl
mov
xchg
xor
mov
sar
xchg
xor
lret
in
adc
jl
int3
cltd
ljmp
mov
icebp
xlat
in
movsb
xor
cmp
xchg
shlb
mov
and
push
mull
popf
or
leave
xchg
lods
and
sbb
mov
push
sbb
mov
mov
lahf
test
push
xor
sti
adc
add
mov
or
mov
mov
sbb
adc
mov
test
lahf
jl
je
mull
out
fwait
stos
cld
mov
xor
dec
xlat
sub
mov
cmpl
cmp
mov
sbb
push
cmc
out
adcl
rorl
inc
sbb
inc
push
jp
aas
lods
or
out
mov
std
cmp
cmp
mov
pop
iret
mov
dec
mov
push
cmp
push
mov
psubsw
sbb
ljmp
imul
shrl
fs
inc
lds
scas
lock
mov
fcmovnbe
iret
lret
cmp
call
mov
enter
xor
and
cmp
mov
scas
addl
sbb
jg
cmp
cmpl
mov
andl
enter
mov
aaa
mov
mull
arpl
cmpsb
xchg
xor
xor
cmp
ljmp
or
xchg
out
cmp
pusha
adc
dec
pop
mov
nop
cmpsl
xlat
sbb
xor
pop
cmp
imul
enter
push
push
push
add
imulb
outsl
mov
call
out
sar
movsl
pop
xor
lods
lret
cmpl
movsl
jecxz
lea
mov
insb
dec
jo
xor
mov
hlt
mov
adc
leave
je
cmp
pop
sti
cmp
pop
cltd
decl
loop
jg
in
out
adc
ss
jmp
test
fistpl
int
lret
and
shl
jne
push
pop
inc
adc
lret
outsl
fsubrs
push
jo
out
testb
mov
daa
test
jb
mov
adc
int
insl
movsl
out
jne
int3
xor
or
and
dec
or
mov
aaa
adc
mov
repz
xchg
lahf
xchg
cmp
sub
mov
test
or
sbb
orb
add
sub
mov
sbb
subb
test
adc
es
cmp
popa
pop
or
stc
cmp
lea
mov
rorl
rcr
stc
sti
push
xor
lret
mov
pop
divb
or
xchg
stos
aaa
aad
cmc
xchg
mov
push
insl
mov
mov
icebp
sub
cmpsb
push
mov
mov
or
dec
gs
mulps
pop
xlat
ja
negb
scas
lret
mov
inc
arpl
xchg
mov
jb
jp
lret
out
mov
dec
cmpsl
mov
mov
movsl
xlat
or
cmp
icebp
test
test
mov
jbe
mov
cmp
int3
ja
sbb
dec
std
push
nop
das
or
cld
mov
in
sbb
sbb
std
xlat
xor
jnp
sub
movl
test
stos
xchg
neg
iret
xchg
xor
push
mov
dec
cli
xchg
pop
xor
cmp
imul
pop
jb
outsb
jmp
add
mov
cwtl
out
add
mov
pushf
andl
pushf
push
push
cmpsl
pop
fsubs
mov
dec
movsl
insl
pop
inc
or
mull
xorb
adc
inc
xor
fsubr
mov
sub
stc
push
into
sub
xlat
jns
clc
mov
pop
pop
mov
cmp
inc
shl
pusha
sbb
fwait
testl
jns
stc
and
dec
lods
xor
int3
xor
xchg
es
xchg
aaa
dec
adc
mov
into
or
cmpsl
dec
movsl
mov
loop
scas
push
arpl
cwtl
jp
insb
roll
mov
jecxz
pushf
iret
jge
cmp
inc
testl
xchg
outsl
mov
pop
xlat
adc
add
repnz
imul
and
nop
xor
xchg
inc
xchg
xor
adc
ja
mov
cmp
push
std
lea
mov
and
mov
add
cwtl
aaa
subl
cmp
popf
pushf
icebp
movsl
fisttps
cli
pop
rclb
jbe
hlt
push
add
fadds
negb
lea
lods
mov
insl
xchg
pop
xor
sub
push
sub
or
push
add
jbe
mov
or
mov
mov
imul
mov
mov
out
icebp
testb
pop
pushf
pop
jno
sub
ja
aam
clc
cmpsl
jnp
xchg
inc
pop
stos
sbb
scas
cmp
jae
subb
out
fs
repnz
outsb
lcall
out
data16
bound
repz
cwtl
fwait
daa
mov
test
orl
inc
es
sahf
scas
sbb
aas
cmpsb
xchg
mov
fcomps
cmc
mov
ljmp
repz
sbb
shll
das
jbe
pop
add
mov
in
pop
movsl
fnsave
das
cli
and
aad
push
cmp
mov
imul
push
jns
rcll
push
out
cmp
adc
shlb
cwtl
mov
jo
roll
push
aaa
mov
pop
jl
push
add
sbb
sub
add
ja
pop
dec
jb
hlt
sbb
jp
cmc
fsubr
rcrb
xchg
mov
shll
xchg
dec
mov
mov
mov
jmp
mov
jne
pop
sbb
enter
cmp
mov
lcall
lahf
ja
adc
nop
shlb
in
ret
pop
sbb
cmp
sub
testl
imul
bound
mov
push
pop
jb
jp
rclb
pop
rcll
shl
ds
sbb
stos
cmp
push
mov
cmp
test
movsl
leave
loop
jp
ss
movsb
mov
xor
movsl
test
or
push
ja
push
or
jb
popf
mov
jecxz
cmpsl
js
inc
xchg
inc
cmp
pop
cmpsb
sbb
adc
outsl
xlat
js
in
cld
sbb
lods
inc
or
sbb
test
cwtl
cld
popf
cmpsl
aad
insb
xlat
jnp
arpl
popa
mov
ds
cmp
cmc
sbb
je
loopne
push
mov
sub
aaa
cwtl
sbb
mov
gs
fisttpll
std
inc
jg
mull
bound
cli
cwtl
outsl
push
adc
jp
dec
popa
popa
pushf
lods
aam
xchg
push
xchg
addl
cwtd
pop
mov
or
xchg
aaa
xchg
lahf
cmp
sbb
lea
add
ja
pop
pop
fisttpll
enter
insb
pushf
sub
add
out
xor
cmpsl
dec
movsl
mov
sub
and
stos
mov
cmp
inc
je
out
mov
cmp
movsb
mov
imul
push
pop
cmpsl
cmp
scas
dec
and
fldt
movsb
js
mov
xchg
push
mov
or
rol
pop
ds
out
jecxz
loopne
lahf
mov
sbb
push
mov
mov
add
mov
sub
adc
dec
rep
loope
cmp
mov
es
sbb
xchg
pop
xchg
xor
xor
mov
rorl
jno
into
das
aam
fmul
mov
mov
mov
ss
inc
mov
xor
xor
sbb
inc
mov
cmp
or
cmp
roll
aad
iret
jle
push
aam
and
outsb
xchg
insl
pop
xchg
shrl
stos
pop
add
xchg
pusha
add
fsubr
xchg
adc
cmp
xchg
sbb
pop
inc
pop
pop
cmp
dec
not
pushf
ja
out
sbb
xchg
ja
cmpsb
repz
scas
orl
add
shr
fnstsw
mov
xchg
sub
cmpsb
rolb
sti
mov
jb
adc
shrd
shld
stos
pop
fxch
in
sahf
cmc
repz
arpl
jmp
mov
and
and
fsubs
iret
dec
push
or
push
out
into
shl
out
jae
sub
mov
scas
movsl
cwtl
dec
and
cmp
js
mov
xchg
call
sbb
jp
mov
lock
xlat
and
fnstsw
imul
notl
jne
jno
fs
dec
stos
rcrl
cmpsl
pop
pusha
xor
repz
xchg
adc
jne
mov
xor
add
ficoms
xlat
sahf
mull
xor
add
lcall
cmpsl
hlt
outsb
mov
lds
scas
sahf
mov
or
dec
jbe
out
pop
cmc
popa
cmp
xchg
mov
inc
arpl
cmc
or
clc
sbb
das
sub
mov
sub
pop
cli
cmpsb
cmpsb
pop
push
jge
test
loopne
adc
jnp
cmp
int
inc
out
push
jecxz
mov
fdivrs
sbb
cmc
jmp
inc
mov
mov
xchg
adc
popf
lods
jns
aaa
stos
add
add
lods
push
adc
add
fiadds
popf
aad
rorb
loope
dec
cmpsl
arpl
ret
movsl
repz
mov
or
out
or
cmp
sar
jg
jle
stc
cwtl
jb
sub
inc
xchg
mov
xchg
loop
mov
jae
adc
pop
dec
mov
pop
jg
mov
jae
inc
ljmp
aas
lods
ret
inc
jno
xlat
pop
xchg
adc
xor
in
test
ds
jmp
lods
dec
sbb
mov
dec
aam
mov
loopne
scas
fisubrs
cwtl
loop
es
xchg
mov
cmpsb
sti
loope
mov
xchg
mov
inc
cmc
fldl
xor
jp
lods
int3
loopne
lahf
xlat
xchg
les
pop
sti
popf
fwait
out
out
sub
nop
lcall
jb
xchg
xor
mov
xor
push
aaa
add
divl
inc
sub
daa
pop
scas
mov
rol
test
dec
imul
mov
mov
jbe
cwtl
cmpsl
mov
pusha
lret
in
cmp
mov
sti
incb
mov
xlat
sub
mov
adc
add
xchg
dec
repnz
nop
out
out
in
mov
and
addl
testl
in
jp
adc
or
push
jns
xor
sbb
mov
test
jge
movsb
outsl
mov
dec
and
mov
pushf
aad
xchg
jmp
xchg
arpl
out
xorb
push
dec
mov
xor
out
fwait
jg
call
inc
popf
inc
fmul
mov
stos
inc
dec
mov
jo
adc
mov
mov
mov
scas
and
adc
jmp
fbstp
inc
pop
mov
push
jp
xchg
cmp
shll
lahf
mov
adc
div
stos
mov
arpl
addr16
clc
mov
xlat
in
push
jo
cmp
and
cmpsb
mov
lcall
scas
xor
mov
sbb
movzwl
add
mov
js
mov
lock
adc
pop
gs
pop
xor
aad
and
hlt
jp
adc
pop
adc
sti
cltd
xchg
add
jbe
pusha
jecxz
ret
jne
into
mov
xor
push
cmp
sbb
daa
jl
xchg
xchg
out
sbb
cmp
xor
cld
jp
lods
jecxz
imulb
mov
cmpsb
mov
cmpsl
push
xor
pop
cmc
and
mov
pop
sahf
sarl
pop
jns
cwtl
pop
and
pushf
repz
call
mov
leave
cmp
mov
inc
sub
xchg
mov
cmp
inc
adc
rclb
and
movsl
mov
scas
cmp
sbb
pop
add
jg
sarb
scas
out
and
jns
mov
and
mov
adc
dec
pop
sbb
mov
mov
imul
xchg
pop
movsl
mov
pop
sbb
xlat
rorl
xchg
push
subl
jmp
or
hlt
cmpsl
les
ret
popa
test
sub
mov
mov
fdiv
sbb
or
stos
xor
insb
loopne
add
or
xor
mov
jbe
icebp
in
cmpsb
data16
xchg
push
idivb
lret
xchg
fisubrl
adc
test
nop
ss
aad
mov
inc
int
dec
cmp
or
mov
mov
push
mov
loope
pop
mov
bound
pushf
lods
test
adc
mov
mov
jae
scas
mov
cmpsl
jnp
loop
xchg
orl
xlat
ds
shlb
or
adc
inc
push
mov
rol
lock
test
loope
fsubs
pushl
int
loopne
popa
mov
div
sbb
xchg
mull
inc
scas
sub
bound
cltd
jns
arpl
mov
inc
fs
xlat
cmpsl
mov
stc
xor
shlb
lds
adc
movsb
mov
jno
mov
xlat
jae
pop
cmpb
mov
pusha
mov
sbb
cld
notl
cmpsb
or
mov
sbb
add
dec
cmp
inc
sub
adc
repz
push
imul
add
mov
mov
mov
cld
iret
pop
jg
push
or
jne
and
arpl
pop
inc
ret
loopne
pushf
add
or
lea
clc
mov
out
jecxz
mov
xor
and
add
mov
outsb
je
imull
push
mov
mov
push
xor
and
inc
cwtl
pushf
jmp
stos
mov
and
fdivrl
xlat
xorl
popf
mov
cmp
dec
lea
xchg
or
pusha
mov
mov
arpl
adc
mov
mov
mov
mov
cmp
aas
rol
enter
add
push
pop
xchg
xor
ret
iret
ds
jmp
inc
add
les
mov
lea
mov
cli
sbb
mov
in
mov
mov
mov
pop
pop
cmp
das
ds
push
mov
fwait
jnp
or
aam
dec
stc
and
sbb
fisttps
xchg
inc
shll
ja
jae
popf
sti
repz
push
test
stc
out
fwait
lods
out
dec
mov
divb
xchg
and
hlt
loopne
lcall
sti
cmc
xchg
xchg
push
dec
mov
movsl
cmp
movsb
arpl
bound
dec
es
pop
out
enter
xchg
cmc
stc
fdivs
movsl
scas
jno
rorl
repz
sbb
out
push
xchg
stos
and
lods
repz
stos
or
stos
jbe
push
cmp
fnsave
fisubs
in
mov
repnz
push
negb
lahf
cld
fsubs
jle
xor
ret
idivl
xlat
out
pop
out
adc
bound
sbb
mov
mov
adc
insl
fmuls
int
loopne
cmpsb
mov
addl
cmp
rcr
lret
pop
sbb
pusha
and
repz
push
mov
mov
notb
pop
int
pop
out
push
dec
cmpsl
fwait
inc
adc
scas
mull
mov
js
test
or
mov
pop
notl
insl
aas
mov
test
inc
xchg
jg
jbe
mov
mov
cmpsb
dec
push
pop
sbb
push
sub
pop
roll
jl
icebp
jbe
and
xor
dec
mov
test
adc
jb
sbb
and
jns
mul
movnti
imul
or
in
adc
mov
xchg
fdivrl
popf
bound
scas
jbe
js
mov
cmc
or
pop
jae
mov
mov
push
lods
pop
jp
int3
in
ljmp
loop
cs
jns
push
cmp
es
idivl
dec
xor
lcall
xchg
cmp
pop
into
fsubrs
ret
int
mov
adc
and
std
mov
jg
cmpsl
cs
or
mov
sbb
jns
popa
out
cmpsl
fisubrl
fs
repz
dec
mov
cli
mov
out
cmp
cmpsl
sbb
xlat
inc
xchg
push
mov
in
xchg
cwtl
enter
xchg
out
ret
into
mov
fcomps
daa
in
pop
or
xlat
sti
aad
or
mov
xor
popa
lds
aas
mov
jmp
scas
movsl
mov
pushf
xorl
mov
loop
xlat
and
std
or
repz
mov
stos
ljmp
dec
les
inc
push
dec
pop
mov
add
jbe
push
inc
sbb
insl
arpl
pop
lret
mov
pop
jl
and
fs
mov
jns
movsl
popa
out
adc
das
and
lods
xchg
arpl
push
jle
sbb
stos
mov
sbb
imul
jns
mov
popa
mov
adc
cld
mov
leave
addr16
addr16
movsl
notl
cmp
xchg
repnz
push
xchg
shll
loope
lcall
out
insl
cwtl
add
cltd
lahf
aaa
and
stos
aad
and
mov
sbb
fdivrs
movsl
sbb
mov
testl
cltd
fdivrs
pop
daa
mov
mov
push
shl
sub
mov
gs
cmp
ds
fdivrs
mov
or
imul
sub
lods
stc
add
add
mov
dec
in
and
jno
cmc
or
pop
imull
pop
inc
adcb
push
or
xlat
nop
xchg
loope
mov
mov
xchg
rorb
pushf
repnz
adc
mov
jb
mov
mov
mov
out
iret
jnp
gs
jecxz
scas
push
inc
stos
sahf
add
dec
out
movsl
cmp
jns
lret
imull
in
adc
cmp
stos
push
inc
and
ret
jle
js
pop
dec
cmp
divb
and
pop
mov
ret
stos
push
mov
out
sbb
inc
mov
xchg
mov
cmpsl
push
fwait
scas
push
movsb
aaa
mov
js
aas
inc
bound
pop
lods
and
xchg
jp
or
cmpsl
loop
nop
not
xor
jle
fsubr
mov
xor
sub
shll
outsb
dec
movsl
imul
popa
movsl
call
scas
push
cmc
repz
xchg
mov
push
test
ret
inc
inc
leave
shlb
cmp
mul
loop
aad
mov
jnp
mov
aad
lcall
or
testl
leave
negl
or
inc
hlt
mov
mov
xor
js
stc
and
cmp
stos
add
cmp
cmp
xor
pop
cmp
stc
push
lods
adc
and
or
and
cld
cmp
out
mov
xchg
mov
xchg
sub
test
mov
dec
popa
xchg
mov
and
xchg
cmp
lret
or
and
xchg
xchg
loope
fs
push
mov
ljmp
fimull
inc
jno
jns
push
push
cmp
mov
mov
mov
xor
mov
push
int3
and
cmp
xlat
icebp
inc
mov
push
ja
sub
rcrl
pop
xchg
js
push
test
and
jp
lds
xlat
jmp
sub
xor
ret
and
test
cwtl
and
subl
sarb
orl
cs
mov
stos
fisttps
mov
mov
ficompl
dec
add
adc
inc
sarb
mov
arpl
mov
adc
fucomip
mov
enter
lret
jl
lea
stos
pop
rcl
add
dec
iret
jb
fstpl
and
cwtl
clc
or
inc
mov
ljmp
cli
insl
rcrl
nop
hlt
mov
mov
je
add
icebp
xchg
push
hlt
xchg
mov
sbb
sahf
sbb
jno
cmp
mov
ds
jmp
push
ja
fcoms
cmp
mov
mov
int
pop
jge
das
shlb
fmul
and
arpl
int
out
mov
or
ja
fcoml
in
dec
mov
cmp
dec
idivl
not
mov
pop
cmp
std
mov
insb
mov
repz
fadds
and
push
cmpsl
inc
jmp
shlb
or
icebp
adc
add
push
or
test
mov
les
jle
jp
mov
dec
inc
lods
lds
out
cmp
mov
aam
or
mov
mov
nop
fwait
or
xchg
in
cmp
cmp
xlat
and
add
iret
xor
rorl
pop
push
or
shrd
out
pop
scas
test
rcrl
mov
cmc
mov
lods
test
sub
jge
mov
pop
jae
lods
rcrl
push
mov
jl
mull
into
in
dec
jmp
push
mov
mov
jmp
cmp
js
pusha
xor
sbb
fabs
or
hlt
enter
mov
jae
cmpsl
mov
jo
in
or
pop
sub
jl
mov
cld
cmpsl
xchg
xor
outsl
xchg
xor
test
mov
and
mov
pop
cmpsl
jbe
fdiv
dec
pop
dec
jecxz
mov
mov
dec
adc
cmovae
scas
mov
scas
sar
pop
jns
mov
adcb
mov
add
adc
test
or
loopne
lock
cmpsb
jecxz
inc
pop
dec
mov
fmul
jmp
ss
mov
vmovaps
addr16
imull
lds
xchg
test
shlb
movsb
cltd
in
filds
sub
es
pop
lock
fstpl
push
cmp
mov
mov
sbbl
sub
sub
popl
test
mov
xlat
mov
cmp
sbb
push
outsb
and
inc
mov
jo
dec
mov
dec
cld
cmp
push
jns
pop
cmp
dec
pop
mov
mov
sbbl
fmuls
adc
pop
dec
scas
faddl
xchg
pop
rcrl
mov
test
xor
cmp
mull
notl
sub
and
je
and
test
arpl
mov
dec
cmpsl
add
adc
mov
mov
andb
into
cmpsl
fiadds
lods
mov
lret
dec
mov
xchg
cmp
add
shrl
mov
lods
jmp
push
mov
dec
mov
mov
mov
cmp
outsl
lahf
insl
outsb
scas
wrmsr
and
or
pop
fsubr
mov
lods
fwait
rcl
mov
xchg
mov
iret
mov
imul
in
xorl
adc
pop
pop
lcall
dec
scas
popa
movsl
jne
xor
loope
jle
inc
adc
dec
cmpsl
dec
std
lret
cmp
mov
cs
ljmp
push
fiaddl
sbbb
add
loopne
das
repnz
cmpsb
or
idiv
dec
xorb
outsb
stos
mov
push
push
xor
fimull
xchg
sbb
xor
cmp
lcall
or
xor
hlt
cld
es
add
mov
mov
hlt
aas
pop
pop
xor
outsl
push
inc
mov
mov
imul
outsl
stc
insb
iret
push
mov
adc
addr16
imul
push
scas
scas
xlat
adc
lea
cwtl
pop
shl
sbb
xchg
idivl
push
jmp
xor
out
scas
adc
add
aad
xor
outsl
push
mov
clc
xor
mov
adc
ret
sbb
xor
mov
sbb
decb
sbb
sub
and
dec
loope
into
push
test
leave
nop
out
push
aam
sbb
out
lods
sub
int
sbb
cmp
or
mov
jae
pop
mov
stos
decb
sub
mov
xor
mov
dec
xchg
xor
out
loop
popa
fstpl
cltd
mov
push
into
adc
js
lods
scas
inc
cs
dec
cmp
inc
and
mov
jge
adc
dec
repz
out
fcompl
fisttps
pop
lods
mov
iret
cmpsb
sbb
or
test
std
mov
lods
and
cld
inc
outsb
daa
scas
fisttpll
cmp
lret
jmp
inc
sbb
or
das
out
incb
mov
or
loope
mov
fsubrs
adc
test
cmovno
pusha
sbb
mov
mov
ret
mov
pop
inc
iret
mov
addr16
stc
pushf
fcom
mov
sbb
sub
mov
sbb
jmp
loop
add
fldcw
cmp
cmp
add
mov
test
jge
loope
cmp
icebp
ficomps
inc
mov
sti
xor
movsb
mov
dec
mov
test
sbb
das
jecxz
adc
daa
movsb
and
push
test
cmpsl
and
pop
pop
repz
xlat
and
mov
pop
fnstcw
das
adc
adc
xor
inc
popa
lock
or
adc
pop
lcall
sbb
dec
pop
divl
enter
ja
daa
xchg
idiv
pushl
adc
out
inc
cmpsl
mov
adc
sti
mov
dec
sub
mov
mov
rclb
hlt
inc
pop
jp
mov
lods
and
int3
mov
lcall
or
jnp
push
add
idiv
jp
cmp
add
adc
mov
test
jge
ss
sbb
lock
jbe
pop
rcrl
shrl
popa
cli
or
mull
mov
dec
out
nop
movsb
icebp
pop
push
cmp
cmpsl
js
test
ss
xchg
iret
push
popa
xchg
cmp
mov
sub
xor
lds
insb
add
scas
xchg
aas
jns
cli
scas
mov
adc
ret
mov
out
mov
mov
cmpsl
pop
push
add
or
out
bound
pushf
iret
test
cld
mov
mov
mov
sub
test
xor
push
imul
xchg
push
dec
inc
in
iret
divl
out
sbbl
or
push
fmull
dec
pusha
iret
or
bound
mov
shr
imul
nop
mov
loop
loopne
add
xor
fwait
mov
fistl
sgdtl
xor
pop
scas
sbb
sbb
popf
imull
mov
mov
add
jne
sahf
fadds
shlb
cld
push
dec
mov
sub
ret
fidivs
jnp
cmpsl
jns
xlat
xor
jo
mov
mov
cmp
mov
add
subl
mov
inc
jl
mov
shlb
ret
xor
or
jb
cmp
add
testl
cmpsl
adc
mov
cmp
pop
cwtl
sbb
rcrl
xchg
scas
aas
aad
cmp
mov
sbbl
cmp
jns
cmp
insb
testl
mov
andb
cmp
hlt
sub
movsb
cltd
pop
movsl
or
pop
lret
lcall
mov
mov
xor
mov
jns
push
mov
lds
mov
jle
daa
cmp
xchg
sbbl
xorl
cmpsl
cmp
adc
xchg
adc
imul
jmp
lcall
add
ficompl
xchg
mov
imul
sub
xchg
cmc
or
cmp
jmp
pop
fcmove
stc
decl
cmc
pop
mov
add
push
mov
fcoms
mov
imul
xor
mov
mov
and
andl
sub
xchg
xchg
push
cmpsl
imul
push
test
mov
pop
popa
dec
out
lods
test
pop
xor
hlt
shl
xlat
jmp
push
stos
sub
push
fidivrs
shll
xlat
sub
mov
add
or
arpl
jp
aad
mov
out
lods
dec
mov
mov
stos
bound
cmpsl
test
mov
xchg
dec
negb
mov
into
in
loope
pop
aad
inc
call
ljmp
xchg
push
cmp
jns
dec
fbld
pop
mov
mov
jmp
push
cmpsb
xlat
jmp
mov
mov
std
mov
cld
xchg
scas
jg
push
int
ss
into
and
mov
jecxz
movsl
arpl
xor
inc
test
adc
popa
xchg
jge
sti
jae
xchg
mov
movsl
shl
mov
negl
push
add
jmp
or
mov
pop
jns
jbe
dec
sbb
lock
cmp
out
and
daa
negl
mov
das
push
or
xor
sub
scas
xchg
popf
xlat
mov
dec
sbbb
mov
and
aaa
and
xchg
sbb
sub
dec
out
idivl
outsl
loopne
jp
imull
repz
xor
stos
sbb
xchg
lods
scas
mov
ja
jnp
decl
cmp
inc
sub
mov
mov
cmpsl
nop
mov
movsb
loope
shll
test
outsb
in
add
jns
sub
sub
jp
and
cmp
mov
ljmp
dec
mov
mov
test
mov
nop
xlat
lds
mov
imull
test
cmpsb
gs
jno
inc
repz
aaa
and
xchg
dec
pop
ret
xchg
and
sbb
ret
ret
iret
xor
fsubrl
mov
jns
inc
dec
xchg
loopne
enter
and
int3
pop
daa
in
pushf
jns
mov
movsb
xchg
mov
mov
mov
cli
pop
pop
cmp
cwtl
add
add
and
add
and
mov
lds
jl
divl
xor
pop
mov
in
or
pop
lods
adc
in
es
jae
pop
in
sbb
repz
loope
fwait
xchg
sahf
les
inc
cmc
pop
push
xchg
xor
cmpsb
and
enter
bound
iret
xchg
push
push
pop
in
pop
dec
test
icebp
push
stc
xchg
leave
sub
movsl
mov
dec
xchg
push
xchg
xchg
ja
jmp
js
rorb
adc
sub
not
es
cmpsb
aad
push
ret
add
in
and
add
xorb
call
mov
push
mov
dec
cwtl
xorb
cmp
mov
out
jo
loope
divl
setnp
imul
mov
mov
xchg
lods
lds
inc
xchg
mov
fcmovu
not
add
lds
and
popa
sbb
out
mov
shlb
fcom
dec
xchg
movsl
sti
cmp
jnp
cld
ljmp
cmc
xor
scas
lds
pop
mov
dec
mov
push
push
mov
sbb
fildll
fldenv
mov
mov
testl
jmp
jg
and
cmpsl
jmp
add
or
sbb
dec
mov
out
flds
dec
imul
adc
mov
stc
out
push
xchg
aaa
cli
pushl
repz
scas
addr16
pop
xlat
ss
mov
xchg
mov
mov
test
aad
ret
mov
movsb
xchg
sbb
and
insl
pushf
scas
ret
mov
cmc
aad
adc
mov
add
adc
mov
shll
jnp
js
pop
pop
rolb
push
faddl
cmp
mov
lods
lods
dec
clc
cmpsl
mov
repz
cltd
mov
dec
loop
xchg
xchg
jp
idivl
fsubrs
mov
dec
in
cli
xlat
lcall
jae
cmpsl
das
inc
cmc
cltd
stc
roll
jno
jbe
pop
aad
sbb
or
cmpsl
push
push
test
and
leave
mov
mov
push
fstps
or
mov
std
int3
cmp
shll
mov
sub
cmp
cmp
mov
filds
pop
pop
cld
push
jecxz
out
insb
movsl
sti
and
sbb
call
cmp
jp
jle
and
or
mov
xlat
mov
lahf
push
ss
lds
push
jle
adc
data16
cwtl
cs
sub
mov
add
dec
mov
aam
push
pushf
mov
cld
hlt
icebp
mov
fisubs
iret
jmp
jae
sub
js
lret
mull
cmpsl
sbb
icebp
pop
sbb
dec
out
adc
mov
in
fnstenv
mull
pop
xchg
mov
adc
stos
jge
movsl
in
out
das
mov
adc
data16
js
xchg
mull
jge
aas
test
pop
xchg
cmp
cmpsl
pop
inc
or
out
mov
sub
jo
mov
movsl
mov
xchg
adc
sub
pop
popf
push
cmp
xchg
or
movsb
imulb
sub
sbb
dec
outsb
mov
fidivl
hlt
out
mov
push
jmp
outsb
adc
mov
xchg
mov
xchg
daa
mov
dec
mov
cwtl
hlt
mov
popf
inc
jb
stc
arpl
xchg
divl
scas
push
cs
lret
cld
mov
cmp
push
rorl
scas
jo
js
mov
sub
dec
jne
mov
lods
rcl
dec
in
or
pushf
lods
out
cmp
repnz
mov
imul
pop
aaa
xchg
cmpsl
gs
inc
leave
idivl
jg
stos
loopne
sub
push
mov
repz
lds
or
inc
xlat
pop
mov
arpl
sbb
mov
or
or
jg
iret
jecxz
leave
mov
adc
sti
cmp
push
and
mov
mov
test
pushf
fsubr
jecxz
daa
arpl
add
rcr
sbb
fdiv
inc
mov
mov
sub
dec
rolb
xlat
jno
dec
xchg
sbb
out
shlb
lds
scas
pushf
add
dec
adc
rcrb
xchg
aas
sbb
sub
scas
lds
inc
fisubl
mov
sub
mov
jnp
or
xor
aam
scas
loop
cli
mov
push
bound
cwtl
xchg
pop
je
adc
incl
lods
ja
daa
repz
jns
push
fnsave
push
je
lock
mov
add
mov
outsl
testl
iret
insb
jg
adc
roll
loop
push
pusha
aas
scas
idivb
cmp
jle
insl
imul
cwtl
cmp
lahf
xchg
mov
lds
jnp
or
mov
mov
gs
push
jl
sarl
mov
test
lock
cmpl
ret
xorl
pop
stc
sbb
cltd
in
xchg
test
sarb
cmp
mov
lret
add
pcmpeqb
adc
cmc
add
enter
sti
sbb
stc
outsb
jno
push
cwtl
or
or
rclb
inc
mov
cmp
mov
repz
lcall
or
add
frstor
js
adcb
mov
scas
testb
adc
fistpl
fs
mov
inc
hlt
mov
pop
xchg
mov
rcrl
into
jmp
gs
addr16
cmpsb
mov
push
in
mov
inc
out
fcomps
inc
stc
push
cmc
mov
and
sbb
fwait
mov
leave
push
out
mov
shl
test
aam
cmp
pushf
sub
out
mov
ffreep
xchg
dec
sub
orb
add
mov
sti
dec
fildll
lods
lds
pusha
stos
je
mov
sub
pop
adc
xchg
movsl
mov
shl
mov
call
call
fildl
loop
incl
sbb
push
push
aaa
inc
cmp
loopne
loopne
xor
sbb
jecxz
inc
testl
ficoml
jo
jo
jp
jecxz
icebp
mov
xchg
lea
xchg
sbb
sbb
jge
fiaddl
repnz
divl
jge
sub
int3
mov
call
movsb
mov
cmp
cmpxchg
mov
xor
les
mov
fwait
mov
fisubl
mov
pop
sbb
lods
jns
cmp
aaa
cli
ret
scas
and
daa
inc
mov
jle
sub
inc
and
sub
cwtl
icebp
jnp
fs
cmp
push
repz
stos
inc
mov
mov
test
adc
cmp
adc
add
dec
add
lret
sub
hlt
add
pop
call
mov
shll
sub
push
rcrl
imul
dec
jmp
mov
aam
orl
ret
mov
inc
fucomip
scas
fs
inc
inc
rcrb
xor
adc
mov
cmp
icebp
fldcw
outsl
fcmovb
movsb
xor
cmpsl
fimull
xchg
xor
xchg
inc
sbb
pushf
mov
sbb
sub
mov
iret
rorb
cmpsl
mov
cmpsl
out
adc
scas
or
mov
sbb
jle
mov
loopne
fcom
fcomp
or
mov
out
int
xlat
jnp
aam
pop
daa
es
lds
mov
or
gs
pushf
popf
lret
iret
mov
jmp
in
xorl
cld
add
inc
addr16
ja
cwtl
fstpt
test
data16
add
icebp
scas
cmp
jnp
rcrb
jg
xlat
cmpsb
rorb
cwtl
inc
mov
sub
push
add
loope
xor
jp
mov
jnp
cwtl
push
cli
xchg
fidivrl
add
sarb
push
mull
hlt
xor
fistpll
sbbb
or
xor
or
mov
test
cmp
mov
cli
lds
jno
jne
dec
insl
not
int3
add
xlat
lods
scas
jnp
pop
mov
fidivrl
lahf
gs
cmp
and
jnp
mov
mov
inc
test
ljmp
jb
pop
fisttps
or
pop
jo
std
ret
jns
xor
outsb
imull
xchg
and
adc
xorb
mov
dec
xchg
fwait
dec
jmp
fbstp
test
jb
cwtl
sbb
fcoms
sub
out
scas
cmpsl
sub
js
jge
xchg
in
pop
stos
outsl
or
sub
fs
in
add
repnz
pop
cmpsl
sbb
ja
xor
idivl
ja
jl
clc
ret
cmpsl
dec
cmp
sbbl
popf
cmp
lret
jno
adc
js
neg
leave
sarb
enter
mov
pop
push
ficompl
testl
mov
mov
mov
leave
nop
scas
pop
test
sbb
and
arpl
adc
and
dec
xor
pop
sti
notl
outsl
sbb
sbb
dec
icebp
movsb
aam
into
adc
cmpsl
mov
aaa
jmp
mov
stos
movsb
out
jle
ficompl
inc
movsl
adc
add
std
scas
fisubl
lods
cmp
adc
rcrl
call
cltd
cli
inc
xlat
mov
aaa
add
pop
ficompl
fs
cmc
pop
mov
addl
inc
test
mov
xor
divl
stc
call
mov
xor
pushf
push
mov
es
std
mov
jp
std
stc
xchg
dec
loopne
jno
and
inc
in
mov
gs
popa
shr
call
movsl
adc
jo
cmp
push
cmp
sub
loope
aas
pop
mov
cmpsb
mov
pop
push
ds
cmp
xchg
mov
pop
cmp
es
in
cmpsl
sarl
test
cmpsl
inc
or
xor
mov
sub
aaa
push
imul
cs
lods
jbe
in
mov
xchg
ja
lcall
lods
frstor
or
repz
and
leave
xor
xchg
ds
sub
testl
pop
cmp
inc
popf
pop
adc
mov
sti
test
repz
mov
adc
arpl
dec
test
inc
xchg
ss
mov
fucom
dec
divl
cmp
adc
and
add
pop
xor
clc
cmp
aad
dec
pop
mov
xor
js
loope
fsubs
mov
outsl
das
sbb
stos
loop
cmp
stos
in
mov
fs
mov
push
mov
add
inc
inc
cmpsl
pop
lcall
and
aam
out
insb
xor
fdivl
or
mov
cwtl
sub
push
xchg
xor
mov
std
arpl
aad
lea
hlt
out
inc
loope
mov
lahf
add
lret
mov
sbb
out
dec
jge
aaa
icebp
mov
mov
sahf
lods
sub
pop
adc
out
idivl
push
test
xor
outsb
adc
mov
and
bound
loop
scas
pop
mov
and
mov
mov
mov
sbb
pop
popf
mov
mov
or
pop
mov
je
sub
mov
push
lahf
lds
ficoms
or
popf
dec
out
adc
sbb
add
ljmp
shll
pop
mov
mov
jo
fwait
inc
andb
pop
jns
fdivs
xchg
cli
aas
lock
xchg
jne
xchg
mov
cmc
xor
push
rclb
dec
out
dec
push
std
mov
sub
insl
dec
adc
std
lret
movsb
movsb
dec
in
gs
movups
scas
dec
shll
mov
mov
mov
sbb
int
xlat
cli
xor
out
mov
jp
fmuls
in
mov
cmp
cli
cmp
int
mov
push
inc
fsubs
leave
ret
mov
cmp
mov
fistpl
pop
les
jecxz
cmpsl
jo
std
lret
js
mov
popa
xchg
test
out
stc
sti
test
pop
pop
out
xchg
dec
mov
sbb
xchg
in
xor
mov
pop
jecxz
or
cld
jge
ljmp
or
lock
sub
jmp
sbb
insl
arpl
cs
in
jae
xchg
inc
dec
fcos
mov
mov
movsl
mov
ret
outsb
mov
push
clc
ror
subb
dec
cmpsl
outsl
xchg
insb
stos
daa
mov
adc
inc
lcall
adc
xchg
je
mov
cli
pushf
addr16
sahf
sbb
mov
mov
das
pop
inc
push
into
mov
lods
sbb
test
inc
xchg
xor
inc
cli
fimuls
mov
cli
fildl
out
loop
test
xchg
push
add
mov
shrb
xlat
cmpsl
cmp
mov
pushf
pop
or
or
jmp
pop
lcall
or
mulb
dec
cmpsl
or
push
cwtl
push
test
jae
mov
insl
out
sbb
xchg
jns
sbbb
or
adc
jae
adc
sub
sbb
adc
inc
add
mov
lock
inc
fcomps
ret
inc
jb
xlat
idivb
nop
movsb
in
mov
add
mov
pop
inc
sub
testl
cwtl
scas
cld
cmpsl
mov
cwtl
xchg
das
sbb
testl
mov
lods
xchg
cmp
mov
rolb
aam
mov
cmpsb
lahf
and
fcoms
popf
dec
imul
pop
out
mov
out
mov
xchg
dec
popf
xchg
fistps
inc
and
cwtl
lcall
jmp
loope
jge
inc
out
mov
arpl
fnstenv
jl
push
out
clc
rolb
jmp
mov
cmp
inc
mul
ja
mov
adc
adc
test
cmp
or
mov
shlb
iret
xchg
inc
sbb
mov
fstpt
mov
cmp
xlat
rol
mov
fists
pusha
sub
clc
sub
andb
cmp
negl
cld
cmp
mov
jne
lds
leave
xchg
push
adc
in
lret
add
insb
daa
dec
mov
test
dec
pop
bound
jae
pushf
mov
aas
test
push
hlt
adc
xor
cmp
ret
inc
push
sti
mov
aad
testb
test
arpl
cmp
xchg
mov
xchg
sbb
mov
inc
xor
xchg
enter
mov
xor
cmpsb
shl
mov
mov
mov
jg
add
sbb
mov
stc
divl
dec
dec
mull
test
mov
outsl
dec
cmpsb
cmp
add
lods
aas
xor
roll
dec
fnsave
mov
xor
mov
or
stos
lods
mov
dec
movsl
ljmp
scas
pushf
scas
hlt
cmp
cwtl
push
mov
insl
negl
loop
inc
ss
pop
in
loop
lods
cmp
jne
mov
push
aaa
das
mov
shll
jp
addr16
cltd
cmpsl
lds
fsubs
and
cs
into
arpl
mov
nop
lahf
stc
orl
jge
into
xlat
sbb
xor
ja
push
mov
dec
cwtl
adc
js
sub
stc
add
cmp
inc
sub
mov
insb
and
sti
pop
jmp
xchg
pop
mov
idivl
loope
cmp
cltd
pushfw
mov
movl
cli
stos
fldenv
out
jnp
cmpsl
adc
andl
mov
dec
mov
rol
mov
outsb
xchg
sub
js
fadds
fsubl
xchg
mov
jle,pn
cmp
insb
mov
jge
pop
inc
fnsave
imul
lds
repz
xor
mov
in
mov
and
cli
pop
dec
fadds
imul
shl
pop
mov
xchg
pop
mov
add
push
jno
add
stos
scas
enter
cmpb
adc
push
add
scas
lret
mov
mov
sub
je
shl
insb
mov
test
dec
pop
mov
pop
jb
sbbb
mov
test
iret
xlat
sub
sti
sub
jecxz
mov
xor
jge
addr16
cmp
outsl
out
cmp
scas
fidivrs
pop
imul
push
cli
cs
mov
outsl
mov
cmpsl
test
add
cmpsl
xchg
aam
jno
jge
mov
lods
jb
out
outsl
mov
sbb
fwait
xchg
mov
jecxz
mov
test
push
push
clc
in
out
or
mov
lea
popf
aaa
pop
cwtl
out
cmp
cli
mov
pop
mov
movsl
mov
negb
xchg
push
dec
test
inc
mov
pop
mov
hlt
out
xor
and
mov
inc
mov
sbb
push
divb
mov
cltd
pop
push
xorl
cmp
cli
mov
xor
mov
mov
sarl
repnz
cwtl
iret
ss
mov
cltd
enter
mov
add
pop
mov
cmp
pop
idivb
addl
cwtl
pop
pushf
mov
sub
testb
dec
cmp
out
out
mov
or
fidivs
mov
lret
xor
out
fsubrs
pop
mov
iret
inc
stos
je
pop
add
scas
das
add
mov
js
mov
sbb
roll
test
out
in
jnp
xor
xlat
jge
addb
dec
push
sbb
inc
sbb
ss
cmpsl
fldt
shl
ja
rcrl
ds
cmp
push
mov
mov
and
cmp
gs
pop
push
aam
jle
fcomps
js
rol
cmpsl
out
dec
push
push
mov
lret
mov
dec
jmp
jl
jo
popf
jge
dec
out
bound
xchg
cwtl
xorl
std
pusha
pop
test
cltd
mov
out
dec
xchg
lods
pop
pop
mov
mov
cmpsl
mov
fwait
lahf
popa
cmp
shl
jnp
popa
push
dec
fcoml
mov
jg
sbb
into
cmp
pop
and
pusha
inc
inc
push
push
jmp
jne
or
sbb
ds
mov
icebp
mov
inc
sub
out
cwtl
lods
sub
inc
dec
bound
dec
cmp
enter
xor
xor
jmp
cs
rcll
mov
mov
and
cmp
iret
loope
iret
inc
mov
cltd
nop
lds
cs
mov
add
insb
push
pop
fdivrs
pop
sub
outsb
xor
mov
mov
sbb
push
sub
add
push
ret
das
ret
stos
stos
mov
mov
mov
add
mov
cmp
cmp
xor
xor
sub
lret
mov
adc
sub
in
bound
push
shr
repnz
sub
negl
repz
xchg
or
sbb
repz
fadds
pop
sbb
in
xchg
ss
push
scas
scas
jns
mov
outsb
mov
les
jl
mov
dec
pop
orb
pusha
scas
inc
cmp
inc
and
dec
enter
mov
dec
add
aas
jp
dec
dec
out
notl
ds
push
jns
clc
xor
xlat
pop
iret
mov
les
mov
je
mov
stc
or
sub
xchg
movsb
sbb
mov
enter
mov
icebp
dec
repnz
dec
testb
mov
dec
rolb
std
fadd
idivl
mov
dec
loop
cmp
sbb
mov
aas
inc
ret
inc
rcr
pop
lcall
mov
cmpsl
sbb
pushf
jo
mov
test
js
xchg
sub
pop
and
nop
testl
js
enter
pop
cltd
lahf
ja
sbb
div
daa
cmp
fisubrs
xlat
outsb
stos
andl
jl
divb
clc
xlat
cmp
push
xchg
mov
adc
in
in
mov
shll
std
pop
sbb
lret
stc
cmpsb
mov
mov
xchg
add
repz
fldenv
xor
out
fcoms
iret
cmpsb
js
cmpsl
xor
ds
mov
jp
jg
hlt
dec
lock
lods
inc
fildl
and
lret
imul
adc
sti
mov
add
fdivp
lret
inc
repz
js
inc
lret
mull
das
popa
decb
inc
ljmp
mov
popa
out
imul
sbb
push
ret
mov
test
cld
imul
sbb
pop
out
rol
push
pop
jg
das
mov
dec
in
cmp
jnp
fidivrl
and
jp
sarl
movl
mov
shll
aaa
imul
xchg
icebp
jmp
stos
push
add
loopew
aaa
dec
pop
mov
pushf
rcrl
cld
bound
mov
dec
sti
push
mov
sbb
loope
xor
adc
ja
in
lods
jns
mov
and
enter
outsl
testl
cmpsl
movsl
ja
cmc
out
mov
sub
adc
mov
xor
lahf
inc
or
mov
lcall
lahf
stos
cmp
pop
jecxz
in
add
dec
sub
arpl
loope
fildl
outsb
aaa
ret
lock
xor
cmpsl
dec
arpl
ljmp
jl
das
mov
sbb
sub
mov
icebp
sbb
dec
movsl
lods
sub
scas
or
pop
jo
sub
cmp
cmpsl
mov
int
push
std
stc
jae
add
ret
jns
mov
divl
add
mov
pop
sub
andl
popf
in
insb
push
cmp
push
mov
jg
cs
dec
loope
imul
shrl
negl
xor
sbbb
adc
cmp
sub
subl
mov
jne
daa
push
cmp
imul
add
test
lahf
cmp
sbb
stc
mull
fdivr
mov
mov
roll
push
addl
rcl
ror
mov
pop
sbbb
repnz
push
xorl
mov
lods
out
mov
mov
fs
pushf
insl
out
hlt
pop
sub
cwtl
xchg
jnp
test
mov
mov
dec
test
mov
or
mov
dec
repz
out
leave
xlat
cli
mov
mov
jmp
in
adc
mov
sbb
and
mov
fstps
mov
fcompl
mov
add
lret
or
xor
xchg
cmp
ja
or
fcoml
push
mov
mov
pop
xor
pop
add
dec
hlt
mov
mov
daa
pop
push
mov
sub
mov
jae
out
pop
das
xor
repz
out
pop
sbb
mov
shlb
fcom
pop
gs
adc
or
cmpsl
inc
push
inc
xchg
sbb
icebp
jecxz
dec
out
pop
loopne
aam
out
push
lret
mov
lds
mov
iret
mov
aad
repz
jns
pop
stc
dec
sbb
icebp
fcomp
enter
stc
adc
aam
mov
dec
mov
pushf
pop
loopne
loop
neg
scas
movsl
nop
fbstp
imul
xor
hlt
mov
fs
enter
test
dec
movsb
mov
imul
les
sub
jne
testl
daa
mov
lret
sub
inc
test
repnz
loopne
stc
loop
inc
loop
rorl
mov
js
inc
dec
call
cltd
adc
jb
aaa
cmp
jbe
inc
stc
jns
jns
test
scas
mov
mov
scas
add
lods
jp
repz
dec
mov
ret
xchg
idivb
cltd
pop
and
mov
inc
out
mov
dec
pop
movsb
int
sbb
rcr
pusha
lods
jge
icebp
loope
imul
cmpsl
incl
enter
mov
and
xlat
pop
cs
sbb
mov
jae
popa
pop
stos
stos
or
ja
mov
lret
rclb
push
jmp
cmp
mov
cmp
lods
outsb
loope
loopne
int
and
dec
mov
lds
jns
push
cmp
lret
adc
movsl
divb
shrb
shl
shl
aam
lock
mull
pusha
mov
cmp
mov
xor
mov
cmp
cltd
test
nop
popa
pop
stc
cmp
push
fistpll
imul
pop
fcomps
mov
or
cwtl
and
mul
call
mov
xlat
mov
push
imul
daa
mov
and
stc
aad
cwtl
jecxz
repnz
add
ja
pop
into
rolb
int
in
sbb
dec
bound
popf
outsl
cmpl
mov
rclb
std
push
jae
adc
mov
jmp
mov
or
or
lods
in
call
mov
pop
cmp
jp
into
pusha
arpl
popf
aas
out
enter
pop
mov
sbbl
pushl
aaa
and
loop
xlat
int
lret
xchg
sahf
mov
adc
pushf
rcrb
cli
call
sub
lahf
and
stos
mov
pop
xor
lods
or
int3
dec
cld
nop
cmp
int
xlat
jp
add
adc
or
test
push
xor
repz
xchg
addr16
mov
sbb
mov
aaa
lret
sub
testl
aaa
or
out
mov
addr16
int3
out
jbe
cmp
pop
icebp
mov
mov
and
movsb
sbb
push
pop
out
pop
enter
mov
ret
fisubrs
cmp
or
jns
mov
adc
jno
fsubrl
inc
cmp
imul
cmpsl
push
pop
lock
ss
dec
sarl
sbb
jp
ret
push
test
inc
fimull
mov
rorb
xchg
outsl
add
sar
xor
mov
add
addr16
out
cmp
repz
pop
fwait
je
clc
scas
mov
cmp
andb
mov
gs
inc
insl
pop
mov
adc
jl
iret
fstl
lods
orl
sub
aad
lods
daa
pop
sbb
ss
ljmp
add
hlt
fcomps
dec
adc
push
jmp
xchg
cltd
inc
and
out
push
jbe
jl
mov
pop
push
lods
mov
fists
mov
and
xor
xor
cmpb
int3
testl
popl
insb
sub
jl
js
and
cli
mov
inc
inc
add
mov
inc
cmp
sbb
lock
or
pop
popa
add
inc
mov
mull
jbe
pushf
mov
test
lods
sbb
sub
lock
push
dec
sub
mov
mov
mov
bound
mov
dec
popf
stos
jne
fwait
push
mov
leave
imul
dec
jp
lock
pop
mov
iret
sbb
pop
call
mov
lods
xchg
add
cwtl
push
mov
stc
push
jl
fs
push
mov
gs
sbb
xlat
sub
mov
mov
jl
jae
cwtl
add
pop
std
jo
iret
inc
lock
xor
mov
xchg
cli
mov
mov
dec
xchg
pop
fadds
aad
rorb
push
adc
fisttpll
stc
test
pushf
iret
jge
mov
cmp
in
push
mov
insl
mov
add
out
dec
js
sbb
sub
push
sarl
lret
rorl
loopne
sbb
or
insl
iret
rclb
mov
pop
out
daa
testl
cs
arpl
popf
cmpsb
fsts
xlat
mov
cmp
mov
jp
or
mov
push
in
out
mov
pop
sbb
pop
mov
push
incb
add
xlat
xchg
lds
dec
jg
ss
shll
in
mov
fdivl
dec
out
scas
stos
loop
enter
pop
dec
sub
rcll
pop
nop
pop
sbb
xor
pusha
ds
movsl
sbb
ret
dec
xchg
cmp
js
mov
iret
mov
jnp
xor
daa
fisubrl
inc
dec
cmpsb
mov
xor
int3
mov
xchg
mov
stos
push
iret
loopne
jp
xchg
stos
sub
mov
test
inc
call
fistpl
mov
jg
mov
iret
pusha
outsb
fdivrp
testl
cwtl
cmp
jnp
mov
and
cmp
jbe
push
fldcw
jp
fsub
movsl
iret
mov
mov
popa
cmp
xchg
mov
cwtl
mov
or
pop
jo
lods
out
pop
cmpl
inc
fadd
out
xor
mov
dec
dec
mov
mov
mov
xchg
jg
cmpsl
notl
iret
sbb
xlat
stc
aaa
stos
jo
dec
adc
sub
out
lods
mov
testl
cmpsl
pop
stos
test
jno
cmc
bound
stos
cmp
cmpsl
sub
cli
pop
xchg
das
mov
leave
adc
call
pop
jge
test
inc
scas
add
jo
xchg
jge
das
mov
adc
idivl
mov
dec
jecxz
lods
ss
int
movsl
movsl
mov
lahf
cmpsl
mov
in
mov
notb
pop
cld
dec
mov
hlt
sahf
mov
in
and
cwtl
jno
xchg
cmp
cmovp
mov
lahf
inc
jg
aad
scas
add
sahf
xchg
mov
sub
rcrb
fs
loopne
cmp
jp
aad
gs
sub
and
pop
mov
arpl
sub
fsubs
ja
adc
imul
xchg
xor
out
decl
repnz
cmpsb
adc
sub
cmpsl
jb
sbb
and
lods
fiaddl
cmp
xor
cmp
dec
push
cwtl
mov
popf
sbb
or
lds
sahf
mov
mov
mov
int3
fildll
scas
pop
mov
aad
pop
loope
aaa
xor
push
sub
pop
stc
int3
xor
test
roll
xchg
push
into
mov
fwait
push
mov
xor
mov
scas
or
sbb
dec
sahf
int3
shll
push
and
and
cmpsl
add
sbb
icebp
mov
pusha
jmp
dec
testb
imul
adc
mov
mov
addr16
aad
or
xor
not
aad
out
sbb
ja
mov
orl
call
push
jmp
push
cmpsb
dec
movsl
test
and
mov
and
inc
mov
js
shl
dec
movsl
mul
scas
sbb
pop
testl
or
fdivs
push
mov
hlt
jnp
loopne
jb
out
mov
jmp
out
add
scas
xbegin
xchg
xor
outsl
xor
divb
mov
lds
sahf
push
mov
and
jle
push
bound
shll
pop
mov
cmp
cmp
rol
hlt
mov
cmpsb
adc
lds
xchg
mov
lret
xchg
test
js
jl
cltd
subl
mov
aaa
js
mov
pop
mov
mov
hlt
xor
cmpsl
add
daa
inc
jnp
fdivrs
in
scas
mov
notl
push
dec
imull
push
sbb
fbstp
aaa
repz
arpl
out
int3
jecxz
fdivs
andb
jle
sbb
sbb
sti
rol
cmpsl
bound
xchg
push
jnp
jno
sbb
cld
sbb
push
pop
ss
or
mov
pop
mov
or
dec
inc
loop
shll
dec
ljmp
lahf
neg
mov
in
push
sbb
popf
cmp
cmp
lods
scas
mov
add
cmp
scas
mov
jne
sbb
jg
add
pop
cmp
dec
xchg
xchg
pop
rcrl
and
js
mov
jecxz
xlat
int
lods
push
movsl
mull
mov
sbbl
insb
pop
je
fcomps
mov
rorb
sbb
or
mov
jno
and
push
xchg
imul
testb
clc
xlat
cmc
fs
mov
jge
lods
les
lock
cltd
xlat
sahf
int
pusha
mov
cmpsl
enter
sub
shr
cld
mov
out
lcall
lcall
lret
mov
mov
mov
and
mov
xchg
insl
adc
inc
sub
push
pop
call
fimull
scas
jo
data16
jo
xor
adc
int
lret
int3
movsb
mov
mov
das
inc
push
leave
add
pop
mov
in
mov
xor
incl
push
add
jmp
xchg
mov
pop
aas
cmpsb
movsl
adc
scas
inc
outsl
popa
cltd
pop
fidivrs
lea
adc
xchg
lea
scas
mov
out
cmp
jb
cmp
loope
gs
mov
adc
lock
rcrl
push
cld
xchg
aad
in
imull
mov
scas
out
repz
mov
xchg
inc
mov
repnz
push
roll
mov
sbb
lret
outsb
movsl
roll
in
mov
mov
mov
add
fcom
lret
fwait
pushf
enter
mov
pop
test
iret
or
loop
addb
adc
rcrl
movsb
lcall
pusha
or
int
and
jne
enter
and
shlb
push
add
cmp
ja
out
mov
insl
inc
add
sbb
aaa
xor
hlt
loopne
imul
mov
xor
adc
das
icebp
mov
aaa
xchg
fidivl
sbb
sub
stos
rclb
push
cmp
sub
addr16
in
sbb
jnp
into
push
stos
testl
cmp
dec
movsl
add
in
nop
repz
pop
pop
inc
shl
inc
iret
inc
scas
mov
pop
sbb
mov
filds
mov
mov
or
imull
repz
cmp
push
mov
lds
jns
negl
in
lea
stos
sub
inc
jl
hlt
stc
or
and
sub
orb
or
mov
inc
cmpsb
data16
xor
xchg
inc
mov
xchg
push
shll
and
js,pn
out
incl
push
outsl
dec
and
arpl
mov
das
test
pop
dec
mov
maskmovq
pusha
pop
and
clc
scas
cmpsb
mov
xor
dec
enter
pop
fmuls
sub
lods
add
or
shlb
xor
xchg
fadds
dec
add
pop
cmpsb
ret
popa
test
adc
xlat
repnz
push
sahf
fnsave
fbld
adc
xchg
pop
fists
popa
lret
fildl
test
mov
sub
lds
pop
gs
imul
dec
mov
mov
mov
test
jle
jecxz
sub
idivb
stos
push
lahf
mov
imul
repz
adc
mov
inc
lret
fwait
xor
in
cli
fwait
xlat
sahf
mov
pop
jo
movsl
js
imul
ret
scas
jl
or
scas
mov
cmpsl
mov
cltd
js
inc
loopne
fcomi
popf
jne
cmpsb
jbe
test
or
sahf
fisttpl
cld
or
test
pop
cmp
bound
mov
inc
fiadds
cmpsl
lret
rcll
sub
fistps
mov
pop
les
mov
scas
pop
pushf
movsl
sti
mov
mov
stos
stos
loop
xor
add
jp
int3
mov
cmp
fwait
out
icebp
mov
push
lcall
lock
lea
aas
cmc
dec
or
stc
out
cmpsb
xor
push
cmp
pop
imul
ret
push
sbb
das
test
mov
sub
mov
mov
sub
xchg
ds
test
cmp
outsb
cmp
scas
mov
mov
and
negl
xor
movsl
ja
sbb
push
pop
mov
test
ss
mov
iret
mov
sbb
push
mov
mull
pop
pusha
mov
lcall
xlat
ja
adc
mov
dec
jg
cmpsl
ds
ret
cmp
fadds
data16
stc
scas
or
dec
mov
stc
in
mov
lods
negb
aam
cmpsl
lahf
sbb
mov
mov
sub
insb
js
cmpsl
out
adc
out
not
push
div
es
subb
out
or
sub
pop
adcb
adc
sub
cmp
addr16
cmpsl
fdivrs
push
jne
mov
add
into
xchg
add
stos
repnz
cmpsl
ljmp
mov
mov
push
insl
bound
std
jne
testl
cli
cmp
xor
sahf
jae
mov
sub
lahf
mov
jno
scas
jns
add
sbb
gs
repz
inc
stc
xchg
inc
test
xchg
out
fidivs
rcr
and
mov
jecxz
andl
pop
add
inc
andl
gs
hlt
xchg
sub
popf
pop
cmp
imull
xlat
and
jmp
pop
in
sub
push
popf
ja,pn
outsb
sbb
mov
fsts
mov
xchg
fmuls
xchg
jl
cmpsl
push
or
leave
xlat
sbb
mov
mov
xrelease
sbb
mov
shll
lcall
push
and
pop
std
mov
fwait
adc
in
stc
cmp
dec
jge
call
leave
mov
push
dec
lock
loope
adc
sub
sbb
cmp
rol
ss
cmp
add
add
or
xchg
lcall
js
jecxz
jp
or
sub
cmp
bound
mov
sbb
jno
mov
pop
in
iret
loopne
aaa
cmp
xchg
insb
push
mov
subl
aam
div
outsl
add
fistps
sub
jb
fsubl
movsl
add
lea
aam
xor
ja
int3
shl
xchg
in
xchg
mov
pusha
int
dec
xor
stos
mov
sbb
pop
xor
pop
int
scas
stc
imull
and
ja
mov
sbb
mov
jmp
jecxz
xchg
filds
test
or
push
inc
xor
or
mov
dec
mov
cmp
mov
add
and
push
gs
inc
push
setb
sbb
jbe
jge
mov
mov
jp
mov
mov
inc
loop
cli
mov
add
inc
js
call
sbb
fcmovbe
pop
sbb
add
sub
mov
dec
mov
sub
mov
mov
jnp
fdivrl
movsl
jae
loop
push
adcb
notl
xor
scas
cmp
dec
add
iret
movsb
dec
mov
popa
out
mov
mov
test
pop
pop
out
sub
ljmp
xchg
aaa
push
sbb
dec
call
or
repz
das
mov
into
movsb
mov
xor
lcall
movsl
ret
negl
mov
lods
pop
mov
mov
mov
add
mov
jp
nop
inc
fisubs
out
sub
repnz
adc
daa
mov
mov
inc
hlt
loop
dec
add
arpl
xchg
es
loopne
test
jge
mov
push
jns
les
push
loope
sub
or
test
les
push
movsl
sbb
dec
mov
repnz
pop
xlat
int3
xchg
mov
xchg
scas
mov
inc
loope
mov
fnsave
mov
arpl
pop
jecxz
jbe
mov
andl
inc
cmp
inc
mov
out
in
rcrb
adc
rorl
cmp
ja
aas
call
ljmp
inc
sbb
fisubl
arpl
xchg
cmpsl
stos
out
shll
sbb
jo
push
cli
aaa
testl
adc
in
pop
fwait
cld
cmpsl
sbb
into
push
inc
enter
lds
inc
xchg
ss
sti
into
mov
test
idivl
cmp
cmp
sbb
in
dec
shrl
or
cmp
jae
cld
mov
sub
jnp
mov
scas
fisttpl
ljmp
sbb
test
add
adc
out
add
test
lock
mov
popf
add
in
mov
nop
fistps
ljmp
xchg
dec
mov
xchg
arpl
dec
push
mov
pop
fdivl
icebp
lods
add
jp
cmp
pop
and
mov
add
inc
idivb
std
push
cwtl
push
mov
fwait
popf
fucomp
pop
mov
dec
mov
rcl
adc
and
mov
movsl
mov
imul
es
adc
pusha
push
out
clc
and
iret
or
jo
add
cmp
pop
cli
xchg
xchg
mov
loop
add
cmpsl
push
sub
jp
ret
ret
and
mov
mov
sub
pextrw
movzwl
fadds
push
aad
mov
mov
sub
in
mov
adc
pushf
cmp
insl
scas
leave
mov
fcomps
imul
dec
or
sub
mov
push
notl
shlb
jecxz
and
jbe
and
out
lret
push
or
mov
pop
mov
divl
inc
sahf
push
out
push
cmp
in
fsubrs
or
push
fisubs
cmp
mov
pop
js
fstps
xchg
pop
cmpsl
add
bound
mov
push
lods
push
ret
cwtl
cmpl
shll
test
scas
jb
mov
push
pop
data16
sbb
out
cmpsl
xor
xchg
je
rol
push
fnstcw
add
xchg
sbb
scas
cltd
add
adc
in
pop
arpl
jecxz
sub
aad
fnstenv
inc
out
mov
and
cmp
cltd
sbb
mov
mov
fistps
cmp
jl
sbb
int3
adc
aad
sbb
and
fisubrl
jbe
xchg
scas
scas
and
add
cwtl
cmpb
adc
pusha
cmp
movsb
mov
popa
sub
cmp
imul
xchg
xchg
stos
mov
dec
push
jecxz
xor
jmp
cltd
push
stc
arpl
cmpsb
aaa
fadds
idivl
inc
xchg
enter
cmp
stc
lods
lret
push
pop
or
cmpsl
jns
cld
dec
cmp
pop
data16
pop
stos
push
jg
roll
jo
in
lret
pushf
addr16
mov
pop
pop
sub
add
xor
les
cmpsb
jno
aad
push
add
sbb
sbb
adc
ficoml
ljmp
dec
or
nop
xor
adc
sbb
testl
mov
sahf
sbb
pop
aam
test
adc
push
mov
rolb
decb
add
js
clc
pop
dec
add
scas
out
mov
popa
jg
sub
scas
stos
add
scas
ja
or
mov
scas
add
pop
in
cltd
fdivs
pop
xchg
arpl
mov
sub
inc
ljmp
adc
cmpb
inc
add
mov
loope
ret
xchg
mov
cmpsl
mov
arpl
pusha
mov
js
movsb
sub
das
xor
lcall
dec
ret
mov
stos
mov
movsb
or
js
rcrl
nop
mull
xchg
sbb
imul
dec
stos
add
xor
cmp
jbe
mov
dec
dec
sub
sarl
and
iret
data16
lods
inc
pop
cmc
mov
or
inc
xchg
aas
jnp
jge
xchg
sbb
divl
mov
repnz
pop
sbb
inc
imul
out
mov
xchg
pop
mov
scas
jmp
jae
lahf
mov
mull
into
mov
cmp
jp
cmpsl
nop
xchg
jle
cmp
lea
pop
push
add
pop
mov
scas
into
mov
mov
xchg
xchg
repnz
adc
mov
mov
mov
dec
cmp
adc
rcrl
pop
lahf
cmp
adc
xchg
lahf
or
mov
push
dec
out
mov
jns
setle
cmp
mov
out
ret
stos
and
sub
mov
inc
jno
sarb
insb
scas
cmp
fdiv
loopne
jb
mov
add
cmpsl
mov
adc
stos
mov
dec
mov
or
mov
popf
jmp
sub
aas
int
xlat
push
jne
cmp
and
jg
cmp
add
cwtl
jno
mov
fs
dec
and
mov
push
lcall
xchg
mov
mov
mov
mov
pop
jo
mov
inc
std
enter
cmp
cmpsl
aas
xor
mov
out
adc
movsl
push
xchg
ss
adc
mov
cmpsb
jne
add
in
inc
sbb
xchg
jg
iret
loop
cmp
mov
call
jge
loope
in
popf
or
jge
iret
clc
stos
mov
lods
icebp
xor
imul
cmpsl
sub
loop
ret
lahf
ja
lods
lret
cwtl
xchg
add
fcoml
jge
inc
pusha
jnp
scas
inc
pop
ret
mov
sarl
jno
test
iret
jp
lods
aaa
xchg
fmull
mov
cmp
or
push
or
je
mov
pushf
mov
pop
ffree
scas
daa
rcrl
jmp
pop
dec
arpl
xor
pop
mov
std
lret
inc
popf
jno
mov
rolb
rol
inc
jp
xor
mov
inc
lock
movsb
cmp
std
mull
das
and
mov
sub
jp
push
or
notb
sbb
mov
sbb
mulb
mov
mov
daa
add
sbb
or
ficoml
ja
cmp
pop
jbe
dec
push
lahf
xchg
fcomps
or
xchg
cmpsl
mov
lcall
stos
mov
jmp
divl
popf
push
es
xor
xchg
jns
cmp
subl
stc
inc
icebp
jno
pop
lea
test
and
hlt
rcrb
or
lods
jbe
mov
rcrb
sahf
add
inc
into
mov
mov
cmp
aaa
nop
jb
sbb
out
shrl
sbb
cmp
in
cwtl
and
mov
and
cwtl
mov
pop
sbb
xchg
add
mov
cli
dec
jp
sti
adc
rol
int3
scas
bound
in
ss
mov
fcmove
push
or
sub
jge
ljmp
int
fnstenv
jbe
xor
mov
add
jns
es
arpl
shlb
or
aas
scas
cmp
jg
test
jbe
clc
push
mov
stos
loope
out
jae
fldcw
mov
cmp
imul
xchg
mov
push
mov
fnstenv
jne
xor
test
fs
jno
xchg
and
pop
adc
sbb
stc
lea
xchg
sbbl
xor
sbb
je
popf
scas
xlat
test
lods
and
idivl
ljmp
xchg
fs
sbb
push
mov
iret
cmp
mov
lods
fbstp
movsl
mov
mov
in
pop
push
add
cli
std
cwtl
lret
cmpsl
jg
push
xorb
mov
push
xor
clc
scas
test
push
lods
fnstsw
dec
mov
push
jo
cld
adc
arpl
jmp
bound
mov
xor
js
sbb
in
iret
cmpsb
arpl
xchg
lahf
cmpsb
popf
pushf
movsb
mov
xchg
sub
rcrb
outsl
dec
sub
out
pop
inc
mov
mov
aad
fcmovnbe
popf
xlat
popa
insb
mov
loop
dec
push
aaa
mov
icebp
fucom
pop
cmp
xchg
iret
inc
pushf
mov
xlat
xor
loop
mov
add
mov
imul
fwait
repnz
test
hlt
pusha
sbb
inc
xor
arpl
adc
nop
xchg
add
mov
insl
sahf
orb
fdiv
or
mov
sbb
ret
in
fimuls
cwtl
mov
aad
mov
sbb
jmp
dec
xor
imul
sti
inc
mov
cmp
lret
sub
pop
cmp
cmp
sub
mov
fs
and
cmp
cwtl
mov
mov
pop
mov
add
mov
dec
icebp
xchg
push
push
mov
dec
xlat
inc
sarb
popa
inc
and
xchg
push
sbb
dec
push
fdivl
int3
xchg
mov
cwtl
jge
stc
xchg
push
adc
stos
push
in
adc
fcmovu
cmp
loop
in
into
inc
mov
in
xlat
cmpsl
pop
imull
adc
ficomps
daa
xor
pop
data16
in
inc
inc
xchg
sbb
mov
js
sub
cmp
mov
xor
js
jo
outsl
or
cwtl
or
ficoml
push
mov
xor
or
pop
jns
mov
ds
into
cli
out
mov
push
mov
fistpll
xor
cmp
or
sbb
in
mov
sbb
xorl
push
lret
sub
into
cmp
mov
cmp
arpl
mov
mov
not
stos
cltd
and
enter
mov
out
into
cmp
test
add
jg
aad
mov
pop
pop
enter
iret
cmp
out
xlat
sbb
mov
xchg
xchg
dec
cmpsl
addr16
stos
pop
adc
iret
shll
jl
mov
andl
fstps
xchg
xlat
dec
xchg
mov
loope
mov
fcomps
cld
cmp
int3
xchg
inc
pop
imul
icebp
insl
push
scas
arpl
inc
xchg
push
sub
lds
loop
mov
push
and
jp
sbbb
arpl
mov
xchg
sub
cltd
scas
mov
pop
xchg
sub
mov
sub
sub
movsl
jno
ret
pop
dec
daa
ficomps
fwait
test
imul
fnstsw
sti
mov
pop
jl
ret
test
sahf
sbb
icebp
aaa
jecxz
mov
jns
cmp
sbb
aad
mov
sarb
mov
push
popf
mov
pop
pop
fbld
jl
cmp
scas
lcall
jg
clc
cmc
sub
mov
and
jmp
not
xlat
push
stos
iret
mov
dec
imulb
mov
std
mov
sbb
mov
es
cltd
and
clc
mov
stc
out
mov
lahf
xchg
rcll
dec
add
and
mov
lds
orl
cmpsb
jmp
daa
sahf
cmp
fistpll
icebp
stos
adc
sbb
fwait
outsb
imul
adc
mov
test
adc
sbb
or
scas
js
sub
mov
shr
les
or
shlb
scas
repz
pop
aam
scas
xchg
dec
cmp
loopne
fildll
inc
mov
pop
out
mov
rol
lea
aad
dec
loop
mov
adc
cmpl
pusha
cwtl
or
push
or
lcall
std
mov
push
mov
mov
mov
ret
dec
frstor
fbld
cwtl
xchg
jno
push
loope
mov
into
stos
push
stc
loopne
cwtl
mov
movsl
pop
fnstenv
daa
repz
adc
sub
movsl
mov
push
lret
xor
mov
loopne
std
cmp
lods
mov
jge
cmc
scas
cmp
stos
adc
push
mov
xlat
lret
dec
jmp
cmpsl
cs
mov
pop
pop
sbb
add
mov
fwait
imul
mov
data16
pop
ds
lock
inc
mov
mov
fnstsw
sbb
mov
push
insl
enter
mov
pop
push
push
adc
jno
repnz
lahf
mov
fucomi
jecxz
xchg
idiv
push
inc
push
shlb
adc
mov
jb
mov
mov
add
imul
push
in
testl
sarb
in
jmp
mov
ret
pop
lods
xor
popf
mov
cmpsl
out
adc
ljmp
cmp
mull
mov
fcoml
xchg
cmp
sbb
subb
jge
pop
mov
notl
mov
js
pop
hlt
test
pop
xlat
aad
mov
xor
and
lahf
test
mov
push
fadds
loopne
xor
xlat
scas
into
xor
mov
sti
mov
cmp
mov
adcl
mov
and
leave
mov
hlt
sbb
das
scas
jno
mull
fdivr
cmpsl
fiadds
push
xor
popa
ja
jmp
xchg
jno
test
cmc
js
fbstp
ja
xlat
push
stos
mov
aaa
adc
mov
cmp
fsubl
gs
jne
xchg
add
sub
loopne
and
js
loope
cmp
testl
scas
mov
fdivs
pop
sbb
mov
stos
xchg
aam
mov
xchg
push
popf
xchg
pop
repz
inc
scas
pushf
push
jbe
dec
xchg
in
aaa
divb
ljmp
lods
call
out
pop
scas
cld
jne
pop
jp
and
lds
in
sbb
mov
fwait
adc
popf
mov
fs
iret
jnp
pusha
pop
cwtl
test
jno
and
out
mov
mov
sbb
fdivl
outsb
jmp
test
leave
and
test
mov
ljmp
mov
ret
mov
xchg
js
and
testl
mov
fildll
fcomps
pushf
not
mov
jns
and
adc
loopne
stos
shl
mov
lahf
cmp
xlat
xor
push
mov
add
leave
add
jno
jns
or
pop
adc
mov
xchg
sbb
std
fsubp
imull
push
pushf
das
ja
daa
cmp
testl
pusha
or
fcomps
mov
xchg
push
mov
jns
mov
lahf
mov
pop
out
mov
ret
adc
sub
inc
mov
push
repnz
lahf
fistpll
ds
loopnew
loopne
adc
ss
mov
test
scas
inc
shll
pop
mov
adc
dec
xchg
je
out
pop
or
cmp
xor
xchg
xlat
mov
jp
movsl
xchg
mov
mov
and
add
out
mov
movsb
fldenv
cmp
scas
sti
sahf
xchg
and
out
mov
shlb
test
or
xor
jns
or
js
mov
mov
out
dec
loopne
in
fwait
pop
jae
mov
inc
xchg
movsb
mov
mov
mov
and
out
push
sbb
mulb
jne
jmp
testb
mov
inc
mov
mov
test
sub
dec
lods
ret
sbb
cmp
mov
fsubs
pop
pop
mov
mov
ja
cmp
insl
mov
jp
xor
fadds
in
pop
push
mov
repz
bound
dec
ret
add
scas
mov
out
negl
inc
pop
dec
or
idivb
test
lds
pop
ret
push
mov
cmp
es
cmpsl
lcall
xchg
in
mov
je
fsub
jno
xlat
jge
mov
xchg
stc
nop
cmp
cld
nop
testl
pop
mov
mov
inc
jb
call
pushf
sbb
pop
sti
mov
lds
mov
cmpsl
sub
lahf
fisubrs
cmpsl
xchg
adc
sbb
pop
repnz
aam
iret
stos
mov
mov
mov
mov
push
lcall
xchg
xchg
xchg
cwtl
test
pop
mov
loop
js
sti
mov
jno
icebp
repnz
mov
mov
inc
dec
orl
pop
lds
cmp
fcoml
insl
imul
jns
jle
int
dec
ja
mov
mov
aaa
js
dec
scas
testl
dec
sub
out
mov
lcall
testl
lods
push
xchg
loope
fidivrl
dec
aaa
insl
inc
mov
shll
mov
mov
mov
or
loopne
xchg
jns
cmc
sti
cmp
dec
and
stos
mov
mov
push
push
mov
sbb
xlat
sti
and
idivl
fiaddl
mov
mov
push
sbb
xchg
int
mov
adc
mov
dec
mov
out
lods
xchg
xlat
dec
mov
and
out
xor
xchg
or
cld
inc
xor
cmp
jl
jb
jns
add
in
mov
mov
idivl
jmp
fdivl
pop
xlat
or
cld
iret
movsl
icebp
add
sbb
fbld
outsl
and
jp
and
mov
and
sbb
imul
loopne
xlat
mov
gs
add
cmpsl
jo
sub
repz
jl
mov
xor
xchg
push
lret
xor
sbb
dec
inc
sbb
imul
cmp
mov
sbb
xchg
inc
xor
cltd
lock
jno
mov
jge
cwtl
out
fadds
addr16
ljmp
pop
mov
jnp
adc
mov
lock
jb
or
mov
dec
mov
mov
xor
scas
jecxz
shll
sub
mov
ja
repnz
sub
sbb
xchg
sbb
jp
fsubr
iret
cltd
lahf
fists
lahf
stos
inc
mov
mov
popa
orl
sti
mov
push
cmpsl
popl
leave
lds
pop
push
insb
mov
mov
repz
mov
pop
mov
pusha
pop
lahf
imul
jae
jl
ljmp
xor
out
jge
pop
jl
into
and
test
xlat
xor
xchg
pop
xor
mov
push
aaa
dec
jo
fwait
popa
push
push
pop
xchg
mov
out
outsl
or
cmpsl
cmpb
test
mov
mov
idiv
das
mov
xor
jmp
mov
scas
cmp
popa
in
scas
js
test
dec
xor
cmp
mov
enter
or
lods
mov
imul
aas
in
inc
mov
stos
lahf
xchg
add
cmp
sbb
stos
xlat
adc
mov
adc
adc
mov
fiadds
movsl
jge
cmpsl
hlt
sub
subl
or
inc
popf
push
lcall
pop
add
divb
js
mov
push
add
cmp
stos
adc
sbb
daa
add
mov
ljmp
xchg
pop
xchg
inc
xchg
test
negl
jbe
jb
or
in
es
sbb
mov
add
sub
and
aas
incb
dec
mov
inc
jbe
mov
enter
jp
pop
cmpsl
jne
adc
mov
sbb
shrb
lret
mov
dec
mov
mov
mov
or
fadds
cmp
shrb
fbstp
clc
add
cmc
mov
shrb
imul
aaa
add
adcl
loope
and
xor
mov
adc
cmp
movsb
icebp
mov
lods
lds
sti
jnp
sbb
lock
mov
push
ret
mov
push
ja
sub
dec
push
fs
lods
icebp
inc
cwtl
xchg
jmp
or
jp
cmp
inc
push
pop
adc
jmp
sbbl
add
lret
jge
or
pop
jnp
scas
dec
clc
out
mov
cmp
stos
sub
cmc
stc
dec
mov
or
mov
inc
ds
jns
popa
lea
pusha
dec
aas
pop
mov
loop
dec
push
int
loopne
out
loope
mov
mov
sub
addr16
mov
jecxz
repnz
jne
mov
outsl
leave
popf
cmp
out
mov
cmp
mov
les
mov
jmp
stc
aaa
mov
cltd
cmp
arpl
imul
lods
rcrb
jns
and
mov
xor
push
push
mov
test
stos
fstl
sbb
jbe
xlat
fs
ficomps
in
js
cmpsl
inc
cmp
test
or
jp
addl
dec
mov
or
mov
test
testl
inc
fsubs
push
add
mov
cmp
aad
and
sbb
jns
popa
cwtl
pop
or
cmpsl
popf
fisubl
out
inc
mov
push
jl
ljmp
push
movsl
inc
ss
lahf
mov
adcb
inc
repz
xchg
ds
test
mov
xor
aaa
cwtd
mov
das
pop
inc
mov
mov
mov
mov
jnp
test
insl
mov
mov
mov
jl
movsl
cmp
stos
adc
in
add
pop
and
in
mull
adc
push
arpl
aam
into
inc
ja
popa
xchg
xlat
lret
xor
ret
and
scas
sub
fstpl
fnstenv
clc
jmp
xor
inc
addr16
aam
sti
mov
cwtl
out
xchg
jae
fdivl
sahf
loop
dec
fadds
gs
in
scas
scas
mov
adc
cmpsl
add
sbb
push
mov
or
or
xor
stos
push
loope
inc
aad
stc
jmp
mov
pop
imul
fimuls
pop
sbb
inc
mov
subl
call
cli
add
cld
popa
xor
mov
scas
and
lea
mull
aam
add
sbb
mov
mov
not
ret
sub
pop
adc
mov
fsub
jge
push
push
jg
mov
xor
sbb
mov
dec
aas
daa
mov
dec
mov
pop
cli
inc
pop
xchg
out
test
sarl
sbb
cmp
xor
and
fsubrp
fwait
cwtl
sbb
fsub
js
aaa
ljmp
jo
sub
and
dec
mov
in
insb
pop
fmuls
mov
adc
bound
mov
test
stc
lret
xor
loope
dec
xchg
mov
mov
push
arpl
stos
mov
and
and
xchg
sub
sahf
out
movsl
stc
mov
repnz
xlat
mov
cmc
fbld
lods
mov
inc
add
mov
out
mov
sub
lea
sbb
scas
lock
add
mov
jecxz
stos
lea
int
push
gs
ljmp
mov
movsl
jae
cmpsb
ss
mov
sub
outsb
or
mov
jns
cmpsl
push
int3
jp
sbb
jno
and
fsubs
jmp
movsl
mov
cmp
push
loopne
mov
mull
scas
cmp
sti
js
ss
nop
xchg
add
lret
dec
rcrb
lahf
add
xor
cmpsb
jg
test
xchg
mov
std
xor
dec
adc
test
sub
xlat
or
dec
js
dec
fsubr
inc
out
xor
mov
shlb
stc
in
cmp
jecxz
and
jl
mov
test
stos
scas
xchg
jg
jge
ret
mov
gs
scas
adc
lock
imull
pop
xorl
idivl
cmp
outsl
jae
xchg
mov
push
xchg
ficoml
xlat
sub
push
mov
nop
imul
pop
pop
mov
sbb
push
je
movsb
sbb
add
cwtl
push
mov
jmp
mov
fs
pop
sti
mov
sub
test
push
add
mov
outsl
mov
daa
dec
mov
mov
cmpsb
test
pop
ret
xchg
sbb
scas
sub
lods
stos
dec
sbb
adc
xchg
mov
jo
mov
xor
jg
stc
cmp
movntq
out
push
mov
into
testb
ror
mov
testl
lret
incb
sar
jnp
nop
add
push
fcmove
fdivrs
divl
pop
sti
jg
subb
mov
push
fbld
mov
pop
lock
mov
push
or
and
test
pop
cltd
cmp
daa
cli
push
xchg
aas
or
sbb
cmp
or
lahf
pop
popa
push
xchg
cmpsl
fdivs
xor
lods
ja
dec
mov
hlt
cmc
loop
scas
push
stc
loope
loope
mov
cmpsl
testl
cwtl
sarl
mov
mov
in
mov
cltd
js
cmp
daa
hlt
add
dec
mov
stos
inc
pop
ja
jl
mov
aaa
out
gs
xlat
in
jbe
jg
arpl
jno
mov
sahf
lods
mov
nop
gs
mov
daa
lds
jns
push
pop
sbb
or
mov
xlat
cmpsl
and
loop
mov
jle
cmp
test
aaa
mov
sbbl
fldenv
xchg
dec
lcall
xchg
jg
pop
mov
sbb
mov
lods
loope
scas
sti
cmp
hlt
push
pop
mov
xchg
and
arpl
out
out
inc
xor
addps
inc
dec
fstl
sbb
sbb
push
test
cmpsl
lods
idiv
sbb
inc
sbb
dec
sbb
sub
inc
loop
xor
pushf
es
jno
adcl
insb
pop
mov
add
xchg
mov
mov
lahf
jl
cmp
and
pop
ss
add
scas
ret
xor
cmp
jae
inc
mov
jg
xlat
xchg
pushf
cmpsl
filds
cmp
insb
iret
daa
mov
cs
scas
jnp
ds
jnp
mov
adc
pop
sbb
stos
xchg
pop
test
sub
pop
xor
fdivr
daa
inc
mov
gs
push
out
pop
push
divl
sub
mov
mov
arpl
out
fidivs
andl
xor
cmpsb
lods
ror
mov
test
out
adc
mov
mul
pop
sbbb
sub
aaa
into
fwait
sbb
mov
push
popa
in
xor
xlat
or
sbb
mov
enter
inc
jl
loop
cmp
shll
add
pop
fstl
ss
xlat
lods
hlt
ds
push
daa
mov
or
decb
jle
push
vminpd
loopne
xchg
xchg
pop
das
jb
sub
xchg
inc
sbb
movsl
jae
pop
mov
push
in
mov
dec
jg
adc
and
imull
dec
mov
inc
pop
mov
mov
inc
out
mov
fildll
xchg
and
push
fwait
pop
pusha
mul
jge
sbb
xchg
mov
adc
out
mov
cmpsb
rcrb
mov
dec
cmp
pop
pushl
int3
inc
mov
insb
cwtl
push
addl
aad
jg
out
xchg
loop,pt
jne
stos
jne
dec
filds
jmp
fildll
adc
cmp
mov
push
or
push
xor
stos
sub
mov
mov
push
loopne
sbb
sbbl
testl
repz
ret
adc
insl
cwtl
cs
add
aam
jl
and
and
add
jnp
cmp
movsl
rol
jns
cmp
sub
push
incl
jp
jecxz
insl
fcomps
xchg
cmpsl
test
mov
mov
push
sub
dec
pop
mov
jmp
and
aaa
das
daa
mov
jne
test
sbb
cmpsl
sub
mov
pop
sub
sub
pop
push
negl
js
jmp
and
pop
aaa
cmp
mov
or
lcall
ja
dec
int
sarb
mov
adc
pop
hlt
aaa
mov
fnsave
fs
out
jbe
lods
pop
inc
cmp
insb
das
loop
sarb
or
mov
aaa
in
jns
je
idivl
outsl
imulb
mov
daa
sub
jge
jecxz
dec
adcb
pop
xor
mov
jmp
mov
stc
xlat
xchg
dec
inc
dec
fadds
jbe
ffreep
mull
inc
xor
scas
mov
pop
bound
dec
cwtl
push
dec
lods
cld
xchg
mov
lret
outsl
and
cmp
mov
stos
cmpsl
dec
divb
jnp
cmpsb
insb
lock
das
pushl
add
cmp
mov
outsb
mov
subb
je
out
push
inc
sbb
sub
dec
add
mov
pop
push
cmpsl
or
mov
mov
cli
add
repz
enter
inc
cmpsl
xor
out
xor
pop
push
mov
inc
aam
mov
mov
push
lea
clc
sub
fcmovbe
mov
mov
cmpsl
inc
pop
mov
out
push
data16
es
aaa
decb
sub
fiaddl
divl
pop
lods
cwtl
or
push
sub
imul
or
cwtl
call
pop
push
xchg
scas
lret
inc
adc
iret
inc
pushf
sub
pop
fcomp
les
add
cmpsl
insw
sub
pusha
sti
jmp
mov
sbb
imull
lock
mov
outsb
jbe
mov
imul
sub
aaa
adcb
out
sub
out
sub
sbb
xchg
lcall
call
outsl
popa
mov
stc
mov
andb
pop
xchg
push
or
inc
and
sbb
lea
mov
dec
pop
aaa
mov
push
sbb
sti
cmp
stc
std
sbb
or
lret
or
push
in
push
addr16
jae
insl
adc
iret
negl
sub
mov
clc
cmp
adc
jge
ret
cwtl
rcll
jnp
test
push
sub
hlt
test
stos
notl
sbb
mov
mov
jmp
push
mov
and
xor
out
stc
push
mov
xor
lods
cmp
loopne
add
mov
sub
adc
popf
scas
dec
sarl
mov
aam
adc
sbb
jbe
or
test
mov
xchg
pop
ljmp
sub
divl
sub
sub
mov
mov
inc
xor
pop
lahf
mov
jl
bound
pop
sbb
sahf
cltd
push
xor
inc
xor
jno
xor
mov
sub
cmpsb
jl
jnp
sbb
inc
out
sbb
in
decl
jg
dec
sbb
add
loope
cmpsl
stos
lret
mov
out
fnsave
add
xlat
inc
insb
lods
leave
test
mov
test
divl
cmp
jp
subl
push
bound
popw
cmp
push
jle
rorb
mov
insb
inc
cmp
dec
int3
scas
and
push
fisubs
pushf
movsl
jno
inc
mov
cwtl
jecxz
cld
call
mov
pop
jbe
pop
xor
xlat
aas
adcb
cltd
xor
push
cmp
mov
inc
out
popf
dec
aaa
xchg
cmp
and
cmpsl
add
aam
or
inc
fdiv
repnz
push
jns
cltd
pop
arpl
push
mov
hlt
int3
mov
mov
and
movb
add
idivb
insl
pushl
addr16
sahf
cmc
mull
test
es
inc
xlat
pop
dec
mov
push
jge
push
mov
pop
cmpsb
scas
adc
loop
aad
popf
shl
imul
pushf
scas
divb
subl
xor
testl
lock
clc
pop
ja
pop
data16
adc
mov
shl
gs
mov
push
cmpsb
mov
pop
std
mov
dec
push
fs
sbb
insl
rcll
mov
fmuls
shlb
std
sbbl
jp
int3
hlt
js
mov
lock
mov
xchg
xchg
cmp
fldenv
aaa
ror
cmp
jg
xchg
mov
mov
mov
add
mov
ss
cmpsl
add
jle
lods
xor
daa
xchg
jne
pushf
ficoms
sbb
push
mov
and
gs
movsb
xchg
hlt
scas
aas
mov
outsb
lcall
scas
loop
mov
jb
gs
in
pop
mov
sbb
or
cmp
sub
mov
inc
pop
daa
push
mov
pushf
sbb
and
inc
xchg
rdtsc
jg
lea
cli
inc
jp
inc
jns
test
and
aaa
fwait
mov
xor
fs
inc
xchg
mov
lahf
cmp
push
jp
adc
pop
jae
xlat
int
dec
jns
cmpsl
notl
rol
loop
mov
dec
jecxz
mov
iret
mov
incb
inc
add
dec
out
cmp
xlat
dec
add
stos
xlat
sti
test
push
fwait
in
mov
stos
scas
ja
pop
lock
sahf
jp
pop
cmpl
hlt
add
filds
push
xor
jb
adc
push
popf
fdivs
xchg
jbe
test
inc
and
xchg
sbb
sub
hlt
xchg
divl
push
sbb
mov
pop
sbb
mov
js
pop
loopne
mov
inc
dec
sbb
pop
xchg
cmp
idivl
cmp
jg
cli
dec
mov
lea
mov
pop
pop
cmp
dec
sbb
xchg
lods
cmp
jl
jl
pop
mov
stos
popa
jle
adc
scas
push
lea
xchg
sbbl
movsb
inc
adc
stos
mov
mov
jbe
add
or
fwait
daa
cmpl
sarl
jne
pop
pop
mov
out
out
icebp
sub
mov
mov
dec
mov
iret
pop
xchg
lds
mov
fs
mov
xchg
xchg
mov
cmp
repnz
lods
btr
add
iret
nop
sbb
loope
lahf
fsubp
sub
pop
fwait
adc
add
or
cmp
mov
fcomps
mov
mov
xor
cwtl
inc
lock
cli
dec
outsl
jmp
add
jl
divl
cld
mov
xchg
pop
mov
jmp
lea
and
xchg
adc
outsl
pop
pop
mov
xor
push
jnp
nop
dec
popa
js
cltd
xorb
pop
fsts
test
ficoms
mov
xor
and
jno
hlt
div
sub
xor
mov
inc
dec
insb
xchg
cld
adc
push
push
mov
iret
push
mov
mov
sbb
stos
xchg
stos
add
test
add
push
fldt
xchg
test
andb
xchg
cmpsb
push
fidivs
out
jle
icebp
into
cmp
out
ljmp
mov
lods
mov
cmp
sub
test
xlat
gs
ds
inc
pop
lret
cmpsb
sub
xchg
jae
lods
ljmp
push
xchg
repz
out
pop
jp
popa
iret
jo
rorl
mov
in
into
in
pop
mov
push
punpcklwd
sbb
dec
iret
adc
sti
add
out
lods
cmc
xchg
dec
xchg
das
hlt
sbb
xchg
mov
out
xchg
mov
int3
jp
mov
xchg
add
mov
push
jno
and
jo
mov
pop
mov
popa
jns
pop
push
pop
jp
mov
mov
mov
icebp
stos
add
push
mov
cmpsl
xor
bound
cmp
aad
popf
mov
in
sbb
ret
xor
mov
gs
insb
mov
leave
sub
fdivrs
and
and
lret
cli
subl
jmp
mov
inc
daa
xchg
arpl
das
div
ja
popf
xchg
mov
out
jne
out
cmp
dec
js
outsl
js
imul
mov
mov
inc
and
sti
mov
jp
jge
mov
fnstenv
push
dec
ret
mov
scas
js
push
je
lds
mov
fsubrs
mov
icebp
roll
jge
fmull
lods
inc
or
in
test
xchg
clc
xlat
xor
or
shll
lahf
sub
out
sbb
adc
sbb
xor
pop
mov
pop
xchg
cmpsl
js
ljmp
cmpb
into
jae
mov
inc
rorb
dec
pop
mov
scas
call
pop
sbb
push
loope
sysenter
testb
daa
mov
sub
sbb
stc
sub
xchg
inc
and
negl
insl
push
das
cld
xlat
push
out
ret
inc
mov
xchg
outsb
popa
pop
into
jge
ljmp
leave
add
pop
inc
roll
sub
stc
div
rol
call
pop
xor
cmp
dec
pop
inc
push
test
xlat
mov
xor
dec
stc
pusha
mov
notl
mov
mov
aam
int
aas
mov
mov
cld
push
dec
es
out
xor
fcmovnb
sti
mov
in
push
repnz
test
std
jno
mov
mov
pop
mov
mov
and
fildll
scas
arpl
or
sbb
in
fdivrs
dec
cmpsb
add
jl
xchg
aam
sbb
mov
out
test
jp
cmpsl
add
pusha
cmp
mov
gs
pop
and
sti
decl
inc
jl
call
xor
adc
fnstcw
pop
popa
jp
bndstx
fsubrs
movsl
mov
mov
jbe
lea
lods
add
fiaddl
inc
call
divl
cmp
fsubs
cmp
popa
push
scas
push
pop
into
addb
icebp
mov
ret
std
jns
negl
cmpsl
mov
mov
lea
int3
adc
add
xchg
ficomps
or
insl
scas
fdivp
adc
out
cmp
mov
cli
lcall
testl
lods
mov
roll
jge
add
out
out
fstpt
outsb
jb
add
pop
sarb
movsl
ret
mov
mov
mov
or
fistpll
or
xchg
dec
gs
cmp
cmp
sbb
loopne
repnz
dec
jbe
pop
or
test
dec
aad
sbb
mov
stc
xchg
adc
imulb
js
or
mov
negl
inc
cmpsb
sbb
aaa
adc
mov
sub
mov
xlat
mov
cmp
push
push
push
mov
test
add
stos
dec
push
dec
dec
pop
stos
jge
imul
in
jae
fimuls
es
cmpsb
jg
and
ret
dec
xor
sbb
popf
bound
jns
pop
pop
dec
pop
scas
shl
shr
mov
std
inc
pop
clc
xchg
repz
inc
ret
sbb
icebp
add
fildll
mov
mov
and
mov
mov
push
cwtl
xor
scas
fbld
and
lret
mov
pop
cmp
inc
popa
aam
lahf
xchg
lods
fdiv
dec
mov
pop
aas
mov
dec
imull
test
jo
mov
mov
xlat
cmp
in
lods
push
jg
outsb
sbb
insl
loope
imull
das
mov
mov
cmpsl
fistpll
pusha
adc
repz
sub
xor
jp
das
adc
sub
push
les
adc
jne
in
js
mov
shlb
inc
aad
xor
add
mov
fldt
xchg
cmp
sub
cwtl
pop
xor
jnp
dec
iret
inc
hlt
cmp
xor
pop
push
shlb
mov
adc
out
aad
add
shll
das
or
and
or
es
xor
stos
out
sub
lds
mov
sub
dec
jge
jno
sub
stos
mov
testl
or
dec
js
stos
mull
cmp
inc
lea
sub
pop
push
sbb
or
xchg
out
mov
add
mov
xchg
dec
insl
mov
cmp
add
enter
lods
inc
movsl
adc
lahf
lods
fwait
dec
daa
sti
mov
cmp
and
push
in
sti
dec
lahf
cmpsl
std
jbe
hlt
and
xorl
lret
xchg
fidivl
jle
cmp
mov
call
movsb
in
fcomps
test
cmp
sbb
insb
bound
popa
sbbb
pop
popa
push
fistps
stos
out
dec
push
es
enter
inc
movsl
mov
dec
mov
decb
fdivrl
cmp
fildll
jmp
xchg
pushf
xchg
push
imul
mov
sbb
mov
and
mov
cmc
lock
cmp
mov
adc
arpl
stc
cmp
xchg
out
jns
idivl
loop
stc
or
inc
idivl
addl
das
lcall
or
fwait
sub
mov
loop
xor
insl
cmpsl
insl
insl
add
mov
cwtl
into
and
jno
mov
cmp
stos
call
dec
popl
aas
scas
aad
shll
shlb
and
into
sbb
movsl
mov
sbb
loopne
scas
xlat
jmp
fxch
aaa
mov
cmp
cmpsb
xor
aas
daa
gs
mov
sub
add
dec
loop
jg
add
mov
int
pop
enter
mov
js
inc
pop
in
out
mov
lods
mov
into
jge
sub
add
out
fwait
mov
aas
je
idivl
outsl
xlat
scas
lds
scas
fdivs
add
mov
fwait
hlt
bnd
sbb
pusha
shll
outsb
inc
add
bound
mov
mov
jecxz
cmp
pop
add
scas
jbe,pt
sbb
sub
push
shlb
cltd
push
push
sub
pop
invd
in
push
xor
call
out
sbb
mov
scas
jae
cld
mov
in
in
insl
adc
mov
hlt
pop
inc
sbb
cld
out
loope
push
aam
movsb
jg
movsb
jmp
pop
xlat
pop
mov
arpl
stc
xchg
subb
sbb
mov
out
lcall
mov
and
jnp
popa
jle
pusha
adc
in
sbb
xchg
lret
hlt
sbb
mov
das
adc
in
pop
mov
cmp
arpl
and
xchg
int3
add
das
scas
testl
inc
scas
sbb
pop
pop
pop
mull
iret
inc
pop
add
idiv
pop
sahf
jno
inc
xchg
out
push
movsl
ret
loope
stc
push
loopne
xor
insl
or
cmp
lods
pop
dec
add
js
adc
ds
and
cmpsl
push
mov
jo
js
pop
sbb
xor
loope
orb
sbb
ficompl
pop
cmpsl
push
pop
out
sub
nop
in
mov
xchg
lahf
jbe
rolb
in
mov
dec
xor
int3
aam
pop
and
mov
pop
pop
sub
aas
add
fwait
sahf
inc
repnz
mov
stos
movsb
fadds
mov
clc
sub
jne
loope
js
mov
jle
sub
dec
aam
jbe
adc
cltd
pop
and
popf
aas
xor
and
xor
pushf
mov
movsl
subps
addr16
mov
or
dec
std
pop
mov
dec
je
mov
stos
mov
sbb
jmp
test
mov
ljmp
shl
js
out
mov
xor
inc
dec
mov
and
dec
adcb
dec
sub
mov
std
sub
jo
cli
cmp
stc
jg
fdivp
inc
mov
test
js
iret
mov
dec
pop
cli
hlt
xlat
sub
stos
dec
jge
push
sub
cmp
add
fdiv
dec
mov
scas
add
icebp
and
mov
filds
lret
dec
enter
mov
mov
add
sbb
fdivr
dec
call
test
push
cmp
push
iret
insl
lods
cwtl
mov
scas
or
js
sbb
add
xor
xchg
mov
into
aaa
cs
mov
dec
pop
xchg
dec
hlt
test
jns
mov
leave
pusha
outsl
and
mov
xchg
adc
jno
add
clc
imull
jo
adc
dec
xlat
mov
cmp
stos
cmpb
mov
mov
lods
fistps
shlb
cmp
push
testl
int3
jno
mov
cmp
in
repz
cld
lret
stos
andl
fsubl
mov
mov
fnsave
fwait
outsl
neg
push
xlat
test
cmp
dec
cmp
shlb
leave
dec
sbb
push
sbb
gs
scas
dec
movsl
mov
push
lods
js
sub
scas
daa
std
sub
pop
call
pusha
push
fldenv
insl
fidivrl
pop
jo
sbb
xchg
test
icebp
jl
pop
push
mov
test
mov
cltd
dec
adc
add
mov
or
xchg
pop
outsl
mulb
sub
inc
cmp
std
dec
orps
ljmp
jl
xor
dec
mov
xlat
push
fiaddl
iret
addb
movsl
sub
ja
sub
push
sbb
jb
enter
imul
push
es
iret
mov
mov
leave
lods
cmp
and
and
dec
xlat
jne
sub
popa
add
or
pop
stc
mov
scas
insb
and
xchg
ficoms
xchg
pop
mull
mov
lock
mov
stos
lds
scas
adc
dec
in
jbe
out
dec
jmp
popf
daa
scas
pop
cs
mov
cmpsl
lret
addr16
mov
mov
mov
testl
mov
pop
adc
sti
mov
mov
mov
pushf
and
xchg
inc
mov
fisttpll
cmp
fdiv
xor
xchg
jg
adc
inc
out
push
push
mov
mov
mov
and
out
shl
cld
ja
cwtl
iret
xchg
adc
cld
fmuls
addr16
inc
jle
outsl
push
sub
jecxz
ret
dec
xchg
mov
arpl
pop
aad
sub
xchg
inc
adc
test
mov
jge
jmp
pushf
pop
cmpsb
addr16
sbb
mov
jge
sub
cmc
mull
sbb
xchg
lret
shll
shr
mov
lcall
push
in
adc
call
mov
lret
insl
aad
mov
cmp
mov
loopne
bswap
shl
scas
dec
out
repnz
mov
mov
data16
or
mov
mov
pop
aad
cmp
push
test
inc
dec
mov
stc
das
adc
cmp
mov
ficompl
divl
inc
xchg
divb
sub
jb
addb
mov
imul
push
jp
divl
pop
cmp
test
sbb
sub
das
cmc
fmull
xchg
jo,pn
and
scas
cli
cmp
push
bound
aam
popa
xor
and
sub
inc
jg
sbb
imul
pop
lret
add
shlb
mov
inc
mov
cmpsb
loope
cmp
mov
mov
outsl
mov
movsl
stc
out
das
add
scas
dec
pop
testl
cmpsb
test
fisubrl
jmp
fisttps
lods
repz
jecxz
mov
pop
adc
bound
jp
loopne
mov
xchg
imul
dec
jecxz
movsl
lcall
jg
movzbl
jae
mov
pop
dec
xlat
sbb
xchg
xor
jecxz
adc
pushf
notl
and
mov
cmp
sub
scas
mov
jl
mov
movsb
cld
inc
ret
lea
pop
hlt
aaa
mov
ret
stos
out
mov
mov
xchg
jb
sbb
call
inc
jno
push
adc
sub
xchg
xor
pop
adc
clc
mov
mov
sbbb
inc
aaa
ficoms
stos
inc
mov
gs
sbb
jmp
pop
xlat
jge
jnp
movl
add
dec
ljmp
pop
test
mov
mov
std
cli
dec
and
pop
out
out
add
mov
hlt
dec
andb
jns
and
test
in
divb
sub
aad
in
imul
sbb
inc
data16
mov
cs
inc
sub
push
call
dec
stc
lods
repz
test
inc
mov
lods
std
jae
adc
cmc
mov
mov
sub
pop
sub
pushf
mov
das
dec
mov
add
sbb
rorb
push
arpl
dec
mov
cli
aas
push
sbb
pusha
inc
sub
stc
ficoml
add
sub
aas
sub
push
jb
jge
mov
sbbb
add
fsub
jecxz
adc
sbb
dec
mov
jne
out
mov
cmp
mov
sub
cmp
popa
or
and
pop
cwtl
stc
mov
sarl
fwait
out
adc
or
rorb
xor
nopl
xor
mov
jne
stc
mov
sbb
fbld
mov
pushf
imul
xchg
cmpsl
aas
out
icebp
pop
adc
shl
jecxz
stos
mov
loope
pop
sbb
cld
arpl
cwtl
and
negl
aam
and
mov
mov
sbb
dec
icebp
sbbb
mov
xor
add
mov
or
mov
mov
mov
fwait
je
mov
xchg
dec
fadds
dec
bound
cmp
fsin
mov
cmpl
fistpll
out
negl
mov
xor
add
rol
jnp
repz
push
call
hlt
mov
stos
incb
xor
testl
sbb
in
pop
and
jge
mov
mov
negl
ss
adc
scas
fildl
mov
in
lea
mov
aad
addr16
mov
imul
sbb
leave
pop
aaa
inc
shrl
push
push
and
or
inc
push
out
out
cmp
add
popa
aas
pushf
jae
dec
shll
aas
mov
xchg
add
mov
and
add
mov
sbb
or
enter
xchg
jge
loop
sub
fisubrl
jge
jae
adc
and
add
aaa
hlt
repnz
testl
lods
loopne
inc
cmp
lods
mov
pop
mov
jmp
repz
lds
testl
in
jae
push
or
subl
mov
add
popf
stos
dec
or
stos
mov
xchg
sub
add
mov
mov
cmpsl
leave
xor
mov
jge
leave
add
add
adc
jp
idivl
mov
andb
stc
je
pop
neg
or
xchg
ret
nop
mov
nop
clc
dec
lret
shufps
cmp
not
lcall
imul
inc
mov
sbb
pushf
mov
subl
xchg
xlat
fisubrs
es
insl
lcall
pushf
stos
xchg
rclb
repnz
and
pop
dec
dec
jo
jmp
jb
xchg
jp
in
loopne
fwait
mull
ret
cmpsb
mov
add
push
and
fadds
inc
testl
nop
sahf
push
jne
cmp
divb
scas
ret
ffree
repz
inc
mov
sub
sbb
clc
jns,pn
loopne
movsl
aas
fsubrs
mov
and
adc
xor
testb
pusha
fidivrl
push
hlt
mov
jmp
pushl
out
aas
xchg
xorl
lret
loope
cmp
cli
cmp
sub
das
jecxz
in
movsl
dec
das
cmp
inc
enter
mov
and
cmp
mov
enter
xlat
xor
xlat
in
and
xor
mov
push
sbb
mov
rorb
aaa
sub
pushf
add
sub
or
aad
lods
pop
inc
add
ds
sub
jne
nop
into
mov
lock
or
inc
mov
xchg
mov
jo
cli
mov
and
sbb
or
aam
divl
cmpsl
mov
nop
push
lods
and
cmpsl
inc
neg
or
push
loopne
sbb
rcll
xchg
fcom
xchg
fsubr
arpl
and
mov
inc
sbb
mov
loop
je
cmp
ja
push
mov
cli
mov
xor
mov
call
stc
push
mov
adc
dec
pushf
jo
pop
jle
xor
dec
or
repz
rclb
add
or
mull
push
dec
pop
loopne
cmpsl
or
pushf
scas
xlat
fcomip
xor
imul
mov
cld
mov
xor
mov
rol
push
or
shrb
loope
xlat
inc
bound
cmpsb
mov
jno
pop
sahf
or
test
nop
jnp
sub
lahf
divl
clc
out
dec
xchg
push
xorb
mov
mov
and
dec
fcoms
or
enter
cmp
xlat
or
xlat
lods
movsb
daa
pop
data16
push
sbb
inc
mov
insl
incb
testl
push
lahf
mov
sahf
scas
cmc
xchg
in
stc
scas
push
cmp
idiv
pop
pop
addb
mov
fstp
repz
stc
dec
clc
mov
dec
js
scas
xchg
mull
mov
pop
bound
sub
scas
adc
lock
dec
mov
arpl
push
jno
sbb
mov
mov
add
sahf
xchg
or
clc
jns
std
in
mov
test
cmp
mov
sub
mov
nopl
pop
inc
fisttps
mov
ds
ret
js
mov
sub
sub
xchg
pop
cmp
sbb
imul
cmpsb
imull
ds
xor
sub
mov
cltd
fisttps
stos
mov
push
stos
fwait
cmp
or
mov
and
xchg
pop
mov
push
cmp
xor
lahf
mov
jne
lcall
jle
jnp
loopne
out
dec
mov
mov
push
sub
pop
mov
test
cmc
adc
pop
xorl
sbb
push
add
jp
idivb
cli
scas
shlb
cwtl
dec
jne
mov
push
sarl
mov
movsl
xlat
cwtl
jge
sti
pop
cmp
xchg
mov
xor
mov
sbb
aaa
mov
jno
ja
add
movsl
sbb
shl
test
scas
xchg
xchg
sub
lods
call
in
add
mov
imull
mov
jge
mov
je
fldt
ja
mov
in
cmp
xchg
push
sbb
ret
add
mov
aas
dec
cmp
dec
stos
ds
mov
stos
add
daa
mov
stos
fcomip
test
xor
mov
mov
aaa
stc
push
imull
cwtl
xchg
data16
jecxz
stos
int
std
mov
cmpb
repz
cld
add
dec
dec
mov
adc
adc
movsl
xchg
mov
inc
inc
fdivs
hlt
or
cltd
xchg
addr16
lcall
negl
sub
mov
andl
sub
gs
jecxz
add
testb
adcb
xchg
in
out
mov
pop
lods
lock
pop
mov
mov
sub
mov
loope
sbb
xor
lcall
adc
mov
adc
xchg
lods
mov
repz
sbb
pop
pop
aaa
cmpsb
mov
aam
xor
push
cmp
pop
out
pop
subl
mov
push
sti
jne
cmp
leave
popf
dec
mov
mov
cmpsb
add
loop
xlat
pop
push
push
push
and
std
shrb
iret
hlt
scas
sub
sub
inc
pop
dec
mov
lods
push
stos
div
insl
loopne
lods
fadds
scas
addr16
sub
fld
pop
cld
jne
stos
adc
dec
mov
pop
scas
push
xchg
daa
js
sbb
mov
shll
mov
scas
in
add
in
cmp
adc
clc
jecxz
push
les
leave
cmp
in
lea
pushl
or
jo
stos
jnp
mov
push
int3
sbb
test
mov
push
stos
imulb
jmp
push
test
jne
pop
fsubr
sub
mov
aad
cmp
mov
or
js
pop
cli
scas
mov
iret
mov
mov
addb
cmp
jmp
xchg
cmp
je
xchg
cltd
dec
mov
mov
xchg
lret
mov
lea
dec
ja
lret
iret
popa
xor
notl
dec
add
cld
insb
test
lret
xchg
xor
mov
call
les
shlb
movsb
xor
inc
shll
jo
scas
adc
pop
js
push
jne
push
add
imul
mov
cmc
enter
lds
push
sbb
int
pop
in
inc
mov
cmpsb
mov
pop
mull
js
mov
ret
ja
xchg
outsl
sbb
and
hlt
in
pop
stos
inc
sbb
and
mov
xchg
fs
xchg
jmp
dec
stc
inc
mov
mov
cmp
sub
fcmovnbe
popa
repz
adc
ficoms
inc
sarl
int3
bound
add
mov
jge
push
mov
adc
push
or
loopne
jp
ljmp
scas
cld
dec
pop
cli
pop
xchg
stos
cmp
fnstcw
std
push
mov
int3
cld
mov
cmp
sub
mov
push
xor
jae
cwtl
ljmp
xor
pop
es
mov
ret
sub
scas
push
mov
cld
rcrl
adcb
pop
jns
jnp
cmp
popf
cmp
imul
add
inc
shrl
pop
insb
xchg
mov
xlat
cld
pusha
and
mov
out
push
inc
cmpsl
into
xor
lahf
lds
cli
aas
jne
out
and
mov
jnp
fucom
xor
sub
jns
divl
xor
sbb
stc
aad
loopne
or
popf
ss
jns
das
jl
sbb
fdivr
enter
notl
movl
sbb
or
aaa
stos
pop
jb
cmp
and
aad
sub
outsl
mov
xor
aam
cmp
jo
mov
cmp
sbb
cmp
add
jp
jl
std
out
cmpsb
arpl
xlat
mov
mov
out
test
xchg
jno
jl
scas
cmp
cmp
dec
sub
fs
add
xor
inc
js
jge
mov
mov
sbb
jo
nop
xchg
pushf
jp
mov
stos
xlat
mov
jne
imull
mov
ja
lods
aaa
dec
mov
mov
xor
pop
adc
jge
cmpsl
xorb
jno
es
sbb
push
sbb
dec
jae
insl
loopne
ret
cmp
jne
sbb
or
dec
dec
add
mov
mov
xchg
stos
mov
xor
jg
pop
sbb
repz
ds
rcr
jecxz
push
cltd
es
pop
daa
and
shrb
inc
mov
xchg
pop
jno
mov
mov
add
and
jge
outsb
gs
cmp
adc
mov
jno
or
inc
not
test
mov
stc
fneni(8087
xlat
fcomps
movsl
cli
cmc
idivb
int
sub
imul
mov
call
clc
sarl
or
xchg
stos
lcall
mov
jno
incl
mov
scas
cld
flds
lret
arpl
and
out
xor
insb
jle
cmc
loopne
xchg
xchg
xlat
scas
dec
imul
out
mov
enter
push
mov
mov
cmpsb
mov
setge
cmpsl
out
in
adc
leave
loope
or
ficomps
xchg
and
lea
mov
sbb
aaa
pop
stc
das
orb
in
mov
pop
arpl
cmp
aaa
imul
add
ss
cmp
testl
pop
cmp
xor
addr16
mov
pop
pop
popf
dec
insl
or
cmp
mov
mull
cwtl
dec
fldenv
mov
bound
cmc
sub
xor
nop
ja
les
divl
push
pop
inc
aaa
sbb
add
popf
ret
xor
and
arpl
push
mov
and
fst
test
dec
repz
fdivl
test
sub
negl
scas
lcall
ja
xchg
dec
loop
out
pop
inc
bound
inc
popa
jne
sahf
inc
mov
scas
adc
mov
or
sub
lea
out
dec
repnz
add
mov
call
repnz
and
mov
into
imull
sbb
add
sbb
insl
shlb
in
mov
arpl
jle
pop
xlat
pop
movsl
sbb
jae
ja
int
pop
jnp
cmp
or
add
adc
arpl
ja
and
or
leave
add
xor
addl
das
mov
pushf
or
mov
mov
push
out
xchg
test
and
sbb
out
fbstp
iret
jbe
xchg
enter
out
jp
mov
imul
xor
mov
stc
adc
jecxz
sbb
cmpsl
sahf
in
test
rolb
jne
lret
test
jnp
jns
mov
mov
jno
js
xlat
pop
dec
psraw
pop
xor
sbb
sbb
in
cwtl
dec
fidivrl
jg
jecxz
inc
cmp
dec
repnz
or
cmp
hlt
add
lods
mov
fwait
movsl
imul
and
fsubs
inc
push
pop
jno
dec
orb
scas
add
pop
sub
pop
int
mov
dec
mov
cld
or
jns
in
clc
out
dec
pop
xchg
arpl
mov
in
jmp
lret
cld
sbb
mov
xorl
push
sar
sub
jecxz
push
imul
pop
stos
imul
mov
imul
jnp
xor
cmp
incb
ss
cmpsl
xchg
mov
push
and
out
out
push
sti
shrl
mov
and
pop
in
call
movsl
mov
mov
dec
stos
mov
lds
pushf
mov
mov
gs
jl
cmp
jo
pop
mov
addr16
xor
cld
out
leave
push
lea
scas
cmp
das
jp
push
mov
mov
outsl
xchg
mov
push
pushf
mov
lret
push
xchg
cltd
out
mov
inc
scas
push
pop
fldcw
dec
sbb
testl
push
orl
fs
push
stc
fcoms
xorb
mov
push
adc
push
mov
inc
push
fiaddl
sub
mov
sbb
js
das
xlat
lds
pop
xor
cmp
jge
mov
es
pop
popa
inc
insl
ja
cmp
loopne
adc
and
into
push
test
loop
iret
fs
mov
out
addr16
add
shlb
cmc
cmp
pop
cmpsb
hlt
cwtl
mov
jne
and
mov
mov
or
lods
ss
inc
push
mov
pushf
fwait
sub
psrlq
addr16
out
sbb
add
mov
xlat
sbb
inc
iret
pop
in
out
sti
jg
mov
push
sbb
cmpb
cwtl
jne
ret
rol
movsl
cmp
mov
jp
inc
rcrl
pusha
add
rcrb
inc
fistps
movsb
in
fmuls
jle
mov
adc
imul
iret
adc
das
outsl
pop
adc
cs
sbb
test
insb
jns
pop
jbe
sub
scas
in
xlat
arpl
movsb
ret
icebp
sbb
jg
lods
loop
mov
stos
popf
loope
movsl
xlat
dec
mov
push
fmuls
cmpsl
iret
adcl
popa
adc
cli
push
cld
outsb
ret
mov
faddl
in
loopne
xchg
test
adc
fsubs
jmp
dec
mov
dec
mov
cmp
scas
arpl
arpl
arpl
arpl
std
mov
sub
fbstp
into
cld
ja
pop
pop
dec
in
push
js
pushf
enter
shrl
pop
mov
xchg
mull
add
addr16
adc
mov
sbb
cmpsb
inc
xlat
orb
out
push
jge
dec
push
movsl
aad
jno
enter
out
insb
pop
push
loope
xor
incl
sub
xor
arpl
iret
xor
adc
inc
and
loopne
or
fdivrs
pop
clc
insl
inc
out
pushf
xchg
shrl
inc
jno
fstpl
adc
pushf
jge
inc
sbb
dec
or
xor
cli
fsubp
and
hlt
cmpsl
xor
or
sbb
cmp
fwait
add
negl
fildl
xor
cs
cwtl
pop
xor
out
lods
in
cld
movsb
sub
mov
mov
lock
pop
fbld
mov
cmp
pushf
arpl
dec
mov
test
or
jo
sub
stc
mov
mov
into
fwait
or
sub
mov
aas
mov
or
jmp
xchg
aaa
stc
pop
pop
out
out
mov
fstl
pop
adc
aad
stos
cmp
xorl
std
test
leave
cli
mov
nop
sub
lret
aad
xchg
pop
out
mov
cmpsb
pop
fcompl
mov
repz
dec
cmpsl
cmpsl
sub
push
jno
aam
pop
rclb
lcall
jnp
cmpsl
movsb
sbb
jecxz
sbbl
scas
repnz
jp
cmpsb
add
pop
cmc
xchg
adc
out
lea
sbb
jmp
repz
lds
cmpsl
fidivs
dec
jge
enter
or
addr16
push
mov
lea
xor
imul
inc
mov
lds
sar
iret
jnp
or
mov
adc
insl
test
lods
sub
scas
lret
xor
mov
test
sbb
movsl
cmpsl
jg
sub
pop
jne
aaa
mov
and
je
push
jae
insb
xchg
inc
inc
pop
jno
ret
pop
fs
idivl
fdivr
fsts
mov
mov
pop
or
dec
pop
lcall
scas
mov
inc
je
stos
push
std
push
sbb
inc
les
adc
or
cmp
mov
xchg
cmp
enter
cmp
xor
mov
xor
add
or
cmp
fisttps
sbb
lea
add
idivl
xlat
mov
xor
mov
test
mov
lds
leave
ror
frstor
xlat
mov
jns
test
mov
inc
push
testl
sub
mov
and
pop
dec
dec
xchg
fwait
jae
dec
add
sub
dec
aam
loop
jmp
jmp
repz
mull
sti
enter
jecxz
daa
jg
dec
mov
xchg
jg
dec
mov
test
push
pop
xchg
mov
xlat
mov
add
push
and
cmp
scas
lahf
daa
repnz
test
sub
add
mov
xchg
mov
inc
ja
inc
inc
ret
cmp
js
jns
mov
test
mov
sbb
push
pushf
addl
pop
mov
xlat
mov
lret
in
xor
decl
enter
mov
popa
inc
xchg
pop
xor
sbb
push
sub
loop
cmpsl
inc
movsl
cmp
sbb
xor
xorl
imul
cltd
xlat
jecxz
pop
cmpsl
sti
leave
mov
shll
mov
fsubrs
xchg
data16
xor
mov
jg
pop
lret
imul
cmp
sahf
mov
push
or
inc
ljmp
xchg
mov
fnstsw
inc
leave
mov
fxch
inc
mov
pop
pushf
js
ljmp
pusha
lods
imul
jns
add
xchg
mov
fxch
and
mov
and
pop
sti
das
cmpsb
stos
testl
adc
cwtl
ljmp
jno
push
mov
call
mov
xchg
pop
scas
mov
push
dec
xchg
mov
add
loopne
push
imul
icebp
pop
mov
ficompl
add
shr
enter
das
xlat
daa
stc
scas
push
mov
mov
fmuls
js
fnstcw
mov
jecxz
jns
nop
adc
test
int3
lods
push
mov
mov
jp
movntps
cmpsb
sbb
repnz
imul
mov
pop
or
cmp
inc
stos
das
cmpsl
in
daa
pop
inc
xlat
data16
ja
rolb
push
jmp
cmpsl
jp
pop
fcomp
jge
mov
mov
rcll
inc
cmp
cwtl
rorb
push
cmp
shl
add
ret
push
pop
scas
mov
call
inc
js
je
lds
cs
not
lods
in
add
jmp
xor
and
or
rcr
mov
xchg
add
mov
aad
in
mov
jl
sub
and
and
push
fmuls
fisttps
insl
mov
cmpb
insb
les
sbb
sub
mov
and
mov
mov
in
push
or
mov
js
xor
aas
cmp
pusha
mov
mov
add
cmp
insb
pop
mov
enter
add
pop
mov
adc
or
aad
mov
scas
rclb
mov
imull
pop
mov
daa
repz
jbe
sbb
sub
test
shrl
dec
xchg
in
arpl
mov
add
mov
jg
popf
imul
mov
lods
repz
pop
inc
sbb
add
and
cmp
inc
jl
mov
mov
aas
mov
aam
scas
and
daa
neg
lods
bound
fcoms
push
dec
cld
xlat
loopne
adc
cwtl
sbb
mov
xchg
dec
aas
and
fadds
xlat
addr16
xchg
jge
push
scas
mov
xor
dec
dec
lods
js
mov
xchg
sbb
nop
jo
ja
aaa
cmp
cmp
outsb
insb
pop
push
es
stc
or
lcall
or
es
push
xchg
jns
ret
idivl
ja
jb
imul
loop
mov
inc
js
push
mov
jae
cmpsb
mov
in
xorl
scas
dec
or
into
and
xchg
xchg
lds
fnstcw
sub
test
mov
cmpb
jb
ljmp
adc
rcr
mov
jne
mov
dec
mov
cmp
nop
call
stos
xchg
enter
mov
mov
inc
jp
stos
sbb
add
fmuls
mov
out
mov
inc
std
ret
sbb
ja
call
outsl
cs
sti
cmp
ret
dec
aaa
xor
sarl
add
das
cmp
lahf
pusha
cmpsl
aad
cmpsl
test
xchg
in
jmp
cltd
mov
movsl
push
mov
cmp
cmp
cmp
les
enter
mov
mov
mov
and
imul
cmp
push
dec
xlat
xchg
stos
cwtl
inc
dec
jnp
shll
insb
and
mov
mov
or
mov
repz
not
ficomps
xlat
jp
xlat
mov
xlat
xchg
cmpsl
cwtl
inc
sub
lods
push
leave
mul
lods
cmc
data16
stc
xchg
mov
jp
arpl
sub
cmpsl
xchg
and
cmc
cmp
jo
notl
addb
mov
sbb
test
loope
fdivrl
lds
inc
xlat
jl
subb
rorl
repz
test
jg
adc
sub
and
xlat
in
sbb
sub
mov
xchg
add
pop
and
fmuls
notl
lods
test
mov
rorl
mov
in
mov
mov
jns
loope
push
cmpsl
out
and
inc
notl
ficompl
ret
mov
lea
mov
mov
pop
mov
mov
ret
mov
mov
xor
loopne
cmpb
lea
das
addl
mov
stos
push
and
or
xor
sarb
and
mov
sub
lods
mov
outsb
xchg
sub
aad
mov
imul
lret
inc
scas
inc
jge
inc
dec
cmpsl
xchg
mov
push
mov
ljmp
jge
or
stc
lods
subb
xor
xor
sbb
bound
sbb
lods
shl
xor
sub
fwait
sbbb
div
dec
cltd
test
sbb
stos
mov
or
pop
mov
lcall
xor
dec
jge
loopne
sub
sahf
or
xor
cltd
popa
dec
jno
shrl
mov
rcll
mov
loop
and
negl
cmp
and
mov
mov
sub
and
or
imul
mov
mov
movsb
push
imull
orl
shrb
mov
fdivrs
and
mov
add
hlt
insb
out
cmp
cmp
mov
enter
add
mov
add
add
test
rcl
xchg
mov
xchg
sub
rorl
repz
xor
fwait
imul
add
and
pop
sub
jns
mov
sbb
loopne
add
daa
cltd
ljmp
mov
adc
lret
xor
test
xor
fwait
test
xor
sbb
push
ljmp
push
scas
mov
mov
xor
lahf
jbe
cmp
scas
mov
cmpsb
mov
test
cmpsl
sub
cmp
inc
fstpl
leave
push
pop
icebp
mov
jle
testl
mov
enter
mov
out
stos
lods
cmc
push
mov
cs
xchg
mov
push
push
iret
daa
adc
mov
xor
daa
call
inc
or
sub
mov
sti
mov
dec
scas
loope
mov
inc
xor
not
jge
test
add
xchg
push
lock
xchg
xchg
lret
test
lret
dec
mov
lods
xor
dec
jbe
or
mov
mov
lods
mov
sub
aas
jmp
cs
mov
adc
xchg
outsl
or
jmp
mov
inc
mov
jg
loop
les
fnsave
ret
jg
xchg
and
out
push
lock
or
or
and
in
pop
movsb
shlb
cmpxchg
jnp
cltd
fdivrs
ja
sahf
nop
repz
mov
cltd
stos
push
sbb
mov
movsl
mov
mov
test
cmp
inc
movsb
xor
loop
and
inc
mov
mov
mov
not
mov
inc
lahf
sbb
in
insb
sub
mov
cmp
cmp
cmp
sub
jmp
ret
fwait
dec
xor
add
xor
mov
sub
sahf
cltd
div
fucomip
mov
xchg
stc
xor
push
fsubrp
mov
inc
ret
cmp
mov
sbb
loope
inc
xor
mov
mov
cld
cmp
sbb
sub
idivl
or
int
mov
in
and
and
aaa
leave
xor
test
cmp
in
jmp
dec
imul
mov
testl
neg
push
adc
and
mov
aas
repz
ret
divl
mov
cmp
push
scas
cmpb
mov
xor
sub
sub
mov
cmc
mov
movsl
das
xchg
sbb
sub
inc
in
mov
pushf
test
jmp
hlt
mov
icebp
negl
das
idivl
push
dec
scas
repz
or
sub
cli
test
and
aad
rcrb
shrb
scas
icebp
loopne
adc
sbb
add
daa
int
inc
aas
inc
inc
cmp
cmpsb
push
xchg
mov
inc
test
pop
mov
mov
stos
negl
dec
scas
sub
pushf
jns
mov
pop
mov
mov
sub
push
jecxz
loopne
mov
lcall
mov
mov
mov
cltd
mov
mov
fldl
notl
sahf
xlat
cmpsl
aas
sbb
sub
fsubl
in
mov
xor
xor
rclb
mov
cmp
ds
inc
cmp
inc
fisubl
dec
mov
jl
mov
mov
and
outsl
mov
cmpsb
out
movsl
sbb
pop
adc
shr
pop
and
enter
and
add
cli
mov
mov
test
loope
cmpsb
add
cld
mov
fcompl
mov
test
sti
aas
inc
and
and
test
stc
lods
hlt
mov
sub
mov
add
dec
fistps
pop
cmp
inc
loope
mull
test
aam
test
outsl
idivl
pop
cld
ret
insb
mov
imul
loop
mov
mov
divl
push
dec
sub
jno
push
loope
mov
imull
lret
cmpsl
inc
aas
roll
idivl
cmp
add
and
idivl
mov
test
enter
and
stc
cmp
movsb
movsb
idivl
mov
shlb
pop
fadd
ret
aaa
mov
scas
sub
mov
sub
idivl
aad
sub
jnp
cwtl
sub
rorb
cmpsb
loopne
sti
movsl
add
pop
in
add
ds
sub
int3
das
popa
adc
subb
cmpsl
xor
cmp
les
cli
xor
aas
xor
movsb
or
mov
xor
rcrb
idivl
dec
dec
mov
mov
cmp
movsb
insb
inc
add
mull
mov
sub
xor
movsl
add
hlt
and
mov
sbb
cs
mov
repz
out
imull
fldcw
xor
testl
leave
xor
stc
mov
xor
ds
cmp
imull
icebp
out
mov
dec
cmp
mov
ja
movsl
int3
nop
sub
sbb
divl
sbb
add
mov
and
lahf
jmp
mov
fsubrl
les
add
clc
maskmovq
imull
movsl
add
cmp
inc
jb
fsubrl
in
mov
sub
in
and
shrb
mov
sub
shlb
add
sbb
pop
mov
fistpll
mov
enter
dec
jns
or
enter
push
mov
negl
aam
neg
mov
mov
xchg
div
ds
push
sbb
ljmp
inc
jg
movsb
cmp
lret
stos
test
mov
mov
xor
nop
mov
popa
mov
divl
cmpsb
loope
das
out
fstpl
cmp
jecxz
sbb
cltd
or
scas
mov
sub
mov
shlb
cmp
addr16
inc
mov
inc
aas
and
stc
add
and
iret
in
xchg
scas
dec
ljmp
mov
lret
imul
icebp
cmp
dec
ljmp
mov
sti
daa
arpl
jmp
loope
shll
mov
pop
inc
jno
shll
inc
jecxz
add
neg
out
loope
mov
sub
daa
jnp
adc
mov
in
cmp
add
movsl
jg
cmpsl
cltd
add
inc
push
stos
or
daa
int
pop
or
das
sub
scas
inc
pop
dec
mov
cmp
or
inc
movl
mov
das
lret
les
rolb
dec
neg
mov
mov
jo
or
push
xchg
fidivrl
frstor
aad
in
lods
out
daa
imull
xchg
pop
sbb
testl
sub
loopne
fstpt
mov
cmp
adc
stos
stos
add
daa
xchg
jne
daa
popa
jp
lea
cmp
arpl
cmp
and
xor
enter
jmp
idivl
mov
push
add
mov
lods
mov
mov
in
mov
inc
push
mov
adc
das
and
scas
in
test
pop
jl
mov
movsl
int
jg
push
xor
xor
test
mov
subb
cmpsb
fidivrl
in
and
cmp
mov
pop
mov
aaa
cld
jle
mov
cmp
testl
cmp
test
idivl
fbld
sub
dec
mov
sahf
mov
jg
mov
cltd
push
jle
sub
fdivrp
iret
mov
aas
jne
cmp
adc
mov
xor
mov
cmp
or
sbb
loopne
out
hlt
scas
arpl
mov
ds
mov
loope
mov
cld
cmp
in
cmc
sti
and
fcoms
shlb
push
bound
cwtl
cmp
clc
xlat
xchg
mov
mov
mov
test
mull
or
aas
mov
call
mov
movsb
sbb
mov
shlb
or
jnp
mov
mov
adc
mov
out
sbb
scas
cmpsb
push
jmp
cmp
sti
aad
dec
inc
xor
std
mov
cltd
or
jecxz,pn
sbb
and
cmp
pop
addb
in
xor
and
sbb
xor
test
xlat
jecxz
scas
flds
cmpsb
push
outsb
addr16
fsin
testb
insl
lock
push
lods
enter
adc
and
es
add
jp
rep
dec
mov
xor
xorl
jmp
gs
shrb
movsl
inc
lods
mov
not
and
icebp
add
in
ret
pop
stos
cmpsb
fidivrs
movsl
cmp
or
xor
ds
sub
jbe
subb
mov
pop
pop
movsl
add
ret
cwtl
xor
stc
dec
aas
fnsave
push
scas
das
idivl
int3
mov
pop
enter
lds
mull
cmpsb
pushf
inc
cmpsb
cs
lcall
cmp
dec
xchg
test
bound
out
or
lcall
idiv
mov
sub
cmpsl
int3
aas
sub
movsl
icebp
mov
movsb
pop
xor
stos
or
negl
mov
imull
dec
mov
sarb
mull
clc
fisubrl
loopne
sub
xor
and
dec
mov
fldcw
out
mull
sarb
push
mov
xor
in
cmp
xor
aaa
mov
popa
clc
test
idivl
mov
cmp
mov
test
fsubl
aas
inc
push
cmpsl
rcll
das
idivl
adc
mov
sub
ja
mov
sub
mov
push
sub
loope
and
and
mov
mov
fidivrs
push
fwait
in
scas
cmp
aas
daa
fnsave
mov
stos
cmpb
mov
test
in
icebp
push
cmp
xchg
in
fadds
sub
data16
fsubs
pop
clc
sub
sub
jns
xchg
ja
sbb
mov
mov
mov
inc
lea
les
dec
sub
and
jae
js
mov
mov
lret
cmpsl
mov
hlt
je
xchg
neg
repnz
in
and
scas
ficoms
lods
cmp
push
arpl
andl
push
push
test
sub
pop
mov
xchg
jnp
and
cmp
cmpsl
rcrb
jg
cs
daa
inc
jo
idivl
ret
or
sub
sub
cmp
lods
movsl
lds
js
js
not
fdivl
negl
mov
inc
movsb
xor
hlt
sbb
and
negl
mov
pop
test
and
sub
push
cs
shl
in
or
divl
cmp
inc
push
mov
fsubrs
pop
inc
mov
sbb
aaa
inc
inc
ror
add
and
mov
jmp
mov
ja
rorl
loopne
jg
xor
ss
mov
sub
cmpsl
mov
divl
cmp
movsl
jge
dec
in
mov
push
inc
adc
cmc
cmpsb
mov
mov
push
aaa
mov
cmp
mov
or
shlb
mov
pop
and
mov
cmp
fidivrs
jne
call
data16
mov
rorb
idiv
xor
mov
dec
idiv
cmpsl
js
dec
imull
orb
or
popf
inc
mov
subl
jnp,pt
not
mov
dec
dec
cmp
cmc
and
mov
ja
sub
fistpll
dec
pop
stos
ja
mov
cmpsb
dec
sbb
cmp
mov
aaa
ja
shlb
jmp
cmp
gs
stc
shl
and
testl
sub
cmp
sarb
rclb
mov
mov
mov
lods
scas
leave
sub
mov
xor
movsb
push
icebp
les
add
inc
and
xchg
sar
pop
fcomip
scas
mov
cmpsl
cmc
es
fistpll
sbb
imull
add
scas
xor
lock
lods
daa
cs
dec
stc
sub
cmpsl
sub
sub
sub
inc
dec
sbb
es
into
aaa
fstpl
xor
jmp
es
loope
dec
and
mov
ljmp
add
cmp
push
aaa
loope
cmpsb
shrl
jl
ss
leave
sub
mov
dec
test
mov
sub
cmpsl
sub
jmp
push
pop
or
mov
ret
aas
inc
arpl
xchg
nop
xor
or
ljmp
cltd
mov
xorb
cmp
xor
push
xor
mov
push
lret
dec
imul
icebp
mov
es
lods
call
pop
lods
lods
jl
stos
cmp
es
lret
inc
test
test
jno
and
inc
jbe
fdivs
mov
and
mov
xchg
jno
and
and
jecxz
add
nop
ja
movsb
shlb
jnp
lock
int
jo
xchg
mov
cmp
les
xor
pop
mov
out
adc
scas
ljmp
daa
fadds
ret
popa
add
xor
fsubs
xchg
inc
fstps
xor
mov
push
push
or
and
sub
outsl
not
cmp
scas
mov
inc
in
add
mov
and
jle
sbb
mov
out
daa
mov
ret
fwait
loope
mov
arpl
movsb
movsl
inc
outsb
cmp
dec
idivl
rclb
jg
cmpsl
loope
scas
es
adc
sub
dec
out
cmp
das
mov
lahf
sbb
push
aaa
scas
pop
test
testb
aaa
mov
xor
mov
call
mov
push
jp
loopne
scas
cmpsb
dec
pusha
sub
jl
and
testl
repz
inc
inc
and
inc
cmp
loopne
sub
or
cmp
cmp
sti
xchg
test
xlat
add
fcomps
mov
sub
cmp
mov
cmp
push
cwtl
mov
aaa
dec
inc
das
xor
mov
lds
mull
cmp
cmp
in
movsb
jmp
cld
sbb
cmp
idivl
cmpsl
xlat
push
mov
xchg
adc
sub
jae
jmp
ss
inc
jp
shlb
and
jno
inc
sub
stc
je
mov
xchg
xor
push
xor
jno
iret
dec
out
jo
sub
les
testl
call
lods
xor
repz
sub
ret
mov
add
jmp
iret
and
xor
mov
mov
sub
push
inc
dec
imul
jecxz
xchg
mov
aas
lds
test
pop
sti
fadd
stos
mov
and
imul
pop
lods
and
stc
int3
fisubrs
sbb
xor
notl
pop
loope
push
shlb
add
pop
push
mov
movsl
sub
das
movsb
jge
outsl
adc
cmc
enter
xorl
cwtl
test
mov
lods
add
or
int3
mov
in
imull
mov
ds
imull
xor
arpl
jecxz
idivl
sarb
add
jp
add
nop
scas
and
or
ret
stos
movsl
enter
stc
mov
xor
fcoms
negl
mov
mov
subb
popa
mov
or
mov
sub
fimull
xchg
mov
add
jg
cmp
scas
loope
cwtl
cs
xor
sbb
push
push
dec
movsl
lret
call
dec
ljmp
repz
lcall
sub
pop
cmp
int
bound
mov
lahf
test
mov
mov
sub
iret
sub
mov
push
mov
outsl
in
aaa
push
notl
cmp
sbb
fsubrs
sbbl
mov
jg
andb
mov
mov
cld
negb
mov
mov
dec
mov
js
std
test
mov
xchg
cmp
jns
mov
std
mov
mov
lods
jns
cwtl
lret
lds
iret
adc
lds
movsb
add
lcall
mov
sbb
sub
xchg
stos
mov
push
inc
jmp
stos
jno
mov
mov
mov
rcrb
cmp
pushf
popa
jae
push
pop
subb
push
dec
pop
cmp
or
xor
adc
stos
stos
es
and
or
test
dec
jno
fs
push
daa
lods
cmp
fidivrl
sarl
stc
mov
or
jle
push
pop
movsb
into
or
test
cmp
loope
mov
add
cmpsb
movsl
mov
fs
movsl
or
sbb
mov
and
aas
and
inc
dec
ret
es
mov
inc
cmp
ss
push
sub
push
test
sar
push
cmp
mov
mull
sbbl
fdiv
mov
clc
and
data16
add
mov
test
incb
fs
dec
jmp
cmp
or
jnp
xchg
lret
and
jno
cmp
jge
mov
push
fadd
inc
dec
cmp
stos
scas
shlb
mov
test
aas
sbb
push
cmpsb
fisttps
and
cmp
push
jb
out
sbb
cmp
mov
inc
xor
mov
jns
mov
outsb
cwtl
xor
mov
add
push
mov
jp
scas
les
jmp
mov
aad
cwtl
sarl
xchg
mov
sub
sub
cld
aam
stos
mov
and
outsl
lods
push
mov
sbb
or
inc
mov
mov
into
add
or
testb
test
divl
int3
in
pop
xor
mov
mov
out
mov
je
insb
shll
dec
scas
mov
adc
mov
add
fs
lds
testb
sbb
push
mov
mov
out
aam
mov
xor
insb
lret
pop
inc
aaa
mov
push
lods
mov
push
push
or
out
xor
js
mov
mov
mov
insb
mov
loopne
imul
fwait
sub
cmpsl
mov
pushf
sbb
xchg
scas
int
push
mov
lret
adc
mov
cltd
repnz
loopne
aas
mov
mov
push
std
jge
and
mov
mov
inc
inc
les
movsl
and
inc
es
xchg
test
cmp
cltd
sub
inc
iret
jg
push
mov
ja
mov
out
scas
push
pop
adc
mov
daa
cmpsl
pop
rcl
sub
adc
add
in
xchg
movsl
and
push
inc
and
das
mov
inc
les
mov
inc
xchg
ljmp
mov
jbe
jecxz
and
push
cmpsb
hlt
push
push
es
mov
das
mov
gs
scas
cmp
mov
mov
jno
mov
sub
cmpsl
std
jbe
or
pop
nop
mov
cmpl
fcoms
sub
xchg
ret
jecxz
cld
arpl
cltd
pop
or
std
notb
fdivl
push
rcrb
mov
add
popa
mov
std
dec
loop
je
out
mov
jmp
or
cs
call
scas
or
and
pop
aas
lret
mov
xchg
mov
and
arpl
jae
gs
test
cmpsl
xchg
or
in
pop
lahf
shrb
push
add
outsl
add
mov
dec
lcall
test
outsl
or
mov
andb
inc
in
xlat
pop
inc
push
and
sahf
add
scas
and
mov
std
inc
in
jmp
mov
cltd
dec
movsb
sbb
arpl
cmp
cmp
scas
stos
ss
in
jo
repnz
mov
subl
je
loope
inc
jecxz
mov
repnz
stos
cwtl
mov
mov
and
add
push
cmp
jl
dec
mov
out
pusha
sarb
movsb
popa
mov
xchg
pop
mov
das
repz
xchg
jg
add
imul
and
mov
lcall
sbb
xchg
loopne
das
pop
lahf
dec
in
mov
add
imul
flds
mov
pop
push
ljmp
cs
jmp
movsl
iret
mov
mov
movsb
rcl
aaa
add
xchg
cwtl
leave
lret
add
cmpsl
sahf
mov
push
ret
mov
inc
push
dec
mov
sbb
ret
int
adc
fwait
and
push
dec
inc
loop
xchg
scas
mov
mov
mov
and
mov
push
imul
mov
mov
jp
test
mov
and
test
add
ret
and
in
pop
add
fldt
cmp
fs
and
bound
cs
or
xchg
sbb
sub
mov
cmp
cmp
push
outsb
mov
sbb
mov
shll
jne
fadd
cmpsl
push
iret
jo
lock
adc
movaps
jae
lea
xchg
pop
adc
data16
repz
ja
cltd
cmp
inc
pop
dec
pop
mov
in
inc
and
test
cmp
xchg
rorb
jo
sub
mov
inc
mov
leave
and
or
in
incl
aaa
js
sbb
loope
mov
pop
mov
mov
mov
cmp
test
inc
aaa
mov
in
push
test
mov
cmp
jge
mov
imull
lcall
or
repnz
inc
add
sub
leave
jmp
sub
imul
sbb
mov
xor
incb
fistpl
inc
movsl
mov
inc
pop
call
sbb
sbbl
iret
cld
inc
sbb
sti
sub
fbstp
adc
repnz
int
adc
pop
sti
mov
xchg
jno
xchg
lods
mov
pop
jns
andl
sub
test
push
out
int
data16
daa
gs
sbb
jmp
lock
jns
das
push
scas
into
pop
adc
insl
xchg
imul
test
mov
mov
shrb
dec
mov
dec
mov
mov
movsl
leave
cmpsl
ss
iret
jne
je
cwtl
push
fnstenv
push
sbb
xlat
cmp
sbb
test
je
shlb
push
lret
call
out
xchg
aad
iret
inc
mov
cmp
cmp
jo
push
negb
loopne
popa
mov
cs
cmpsl
and
lret
stos
cltd
mov
int3
fsubs
mov
daa
xchg
and
cwtl
sbb
jo
hlt
xchg
shll
push
ljmp
rcrl
mov
sbb
loope
bound
sub
lret
jmp
inc
add
out
cmp
in
out
mov
lds
mov
scas
mov
leave
add
loop
push
in
imul
xchg
pop
popa
mov
mov
clc
inc
cmp
mov
fsubs
mov
mov
mov
popa
inc
jle
mov
insb
outsb
ret
je
dec
dec
stos
mov
or
iret
sbb
movsl
test
test
movsl
mov
and
or
test
mov
mov
cmpsl
aaa
pop
ficompl
jbe
pop
out
xor
xor
std
lahf
sub
push
add
gs
sub
adc
ja
mov
jg
aas
scas
sbb
mov
xor
cmp
cmp
mov
rcrb
pop
test
mov
pop
push
lods
sbb
jg
ficompl
scas
insb
pop
mov
jb
mov
std
mov
pop
xchg
push
test
ret
cmpsl
cwtl
jg
pop
mov
rolb
jo
inc
sarl
test
lret
and
mov
sbb
add
mov
and
lret
mov
mov
scas
stos
cmpsl
and
mov
and
je
sub
push
xchg
scas
mov
mov
sarl
mov
cmpsl
rcll
xchg
or
mov
lods
push
popa
push
into
ds
rorl
stos
into
sub
int3
sub
add
add
adc
mov
sub
and
sbb
loopne
dec
mov
data16
shl
push
lods
stos
dec
out
jo
add
mov
mov
wrmsr
mov
pop
mov
aad
jo
push
inc
mov
lds
lods
fnsave
out
mov
inc
cwtl
call
mov
in
xor
loope
jae
fimull
jge
test
cmp
mov
mov
pop
rcrb
lret
fs
xabort
and
cmp
mov
jmp
add
mov
ret
jecxz
push
insl
sub
addr16
subb
test
enter
loopne
mov
lods
dec
mov
xor
mov
sbb
ret
fs
aam
ret
cmp
xor
sub
cmp
lods
or
mov
ror
and
push
and
and
mov
mov
dec
dec
std
push
loopne
insb
aaa
sti
fnstsw
dec
cmp
cltd
iret
pop
pop
stc
push
inc
std
pop
mov
stos
mov
repz
repnz
lock
sub
sub
add
cmp
inc
mov
add
sub
ds
fs
iret
loop
xchg
shrl
lahf
testl
push
aaa
test
adc
mov
or
and
and
not
repnz
aaa
outsl
mov
mov
fcomps
cmp
xor
xor
clc
mov
xchg
rol
in
loopne
and
mov
xchg
lret
fiaddl
arpl
jmp
sbb
ss
jmp
popa
rorb
clc
loope
mov
mov
leave
xor
dec
leave
mov
mov
jb
mov
add
imul
and
roll
aad
or
fcomi
rorl
xor
shrl
dec
sub
jmp
inc
cmp
pop
dec
cmp
js
ss
mov
cli
mov
or
sub
bound
outsl
lods
jmp
icebp
mov
shll
mov
cmpsl
stc
jno
lods
test
inc
mov
in
mov
xchg
js
leave
fs
rol
faddp
lret
push
cld
xchg
sub
in
test
fistl
icebp
sti
aaa
std
pop
mov
sub
xor
mov
adc
add
xchg
cld
aam
xor
pop
test
in
sub
xor
les
leave
fistpll
in
cmp
jns
fmul
fnstsw
jmp
lods
adc
lretw
daa
ljmp
xor
aam
lods
jmp
sub
push
shlb
or
pusha
and
xor
mov
lods
ss
out
fnstcw
and
push
enter
lock
iret
add
sub
in
and
or
mov
loopne
cmp
mov
cmp
adc
push
cmp
inc
or
jl
mov
jmp
and
push
aad
fsubs
mov
jp
mov
out
cmp
and
lret
stos
xor
leavew
js
fsubl
stc
jns
mov
inc
xor
mov
loop
daa
stos
push
mov
scas
xor
cmp
lods
xor
xor
mov
popf
and
sub
cmp
ret
sarb
add
jmp
ret
mov
pop
sub
ret
cmp
and
mov
or
adc
daa
std
mov
push
mov
lods
cmp
sub
das
std
sub
hlt
and
loopne
mov
or
lret
inc
sub
cmp
lcall
cmp
cmp
fdivr
clc
cmp
shrb
sti
cwtl
inc
into
imul
cmp
cmp
cmp
std
mov
shll
sti
inc
inc
sbb
insb
mov
sub
test
inc
stc
jne
mov
jecxz
subb
jecxz
and
mov
and
and
inc
es
incl
adc
movsl
ret
faddl
push
mov
and
and
jo
pusha
xorl
andb
gs
jnp
pushf
mov
orb
mov
xor
xlat
mov
adc
popa
nop
push
rolb
sub
cmp
aam
sahf
outsl
xchg
inc
aam
inc
outsb
sbb
out
ret
imul
loop
bound
sbb
cld
mov
cltd
add
inc
jmp
loopne
ljmp
sub
pop
or
jl
pop
sbb
pop
cs
inc
data16
or
mov
push
mov
lret
push
mov
xor
and
imul
aam
adc
popa
jnp
loopne
movsl
fxch
xchg
test
loop
sbb
loope
sbb
cltd
mov
aad
sbb
xorb
mov
cmpsb
mov
add
hlt
call
jbe
mov
stos
out
notb
cltd
aad
scas
xchg
mov
xchg
sub
xlat
and
insb
add
lret
mov
sbb
inc
xchg
cmp
xlat
fninit
popa
sbb
movsl
mov
mov
or
lcall
mov
out
bound
imul
mov
mov
mov
sti
test
repnz
push
js
fldcw
dec
out
mov
xor
gs
jb
into
jge
loop
cmpl
pop
cmpsb
inc
imul
shlb
push
test
ret
xchg
and
mov
mov
iret
fxch
push
sub
xchg
pop
and
push
test
iret
test
clc
data16
push
fwait
or
jg
xor
and
icebp
lds
or
adcl
sub
and
nop
push
inc
out
and
cmpsb
loopne
fwait
jl
jns
and
fadds
mov
gs
popa
inc
cli
cmpsl
mov
sbb
ja
sub
and
decl
andl
jne
aam
sub
adc
pusha
jecxz
les
xchg
jl
inc
loop
lods
movsl
xor
push
rol
lods
test
mov
ret
push
fs
push
mov
adc
not
out
js
xchg
es
inc
push
in
xor
dec
push
mov
mov
xchg
cmp
adc
movsb
jb
mov
xchg
cmpsl
mov
fcoml
mov
fdecstp
sub
xlat
adc
lock
xor
jbe
mov
cmpsl
lods
jge
movsb
cmp
cld
mov
xchg
aas
cmc
insl
aam
movsb
shll
cmp
test
pop
mov
ss
mov
shl
push
push
jp
pop
loop
jg
into
pop
mov
daa
mov
dec
jae
pop
cmp
andl
push
popf
fnstenv
inc
dec
movsl
call
add
lds
jno
loopne
fwait
je
lods
mov
mov
orl
inc
scas
mov
mov
inc
cmp
shll
sbb
mov
mov
sbb
nop
lock
adc
mov
hlt
pop
es
notl
jne
nop
cmc
or
push
cmp
add
out
in
sub
or
int3
jecxz
inc
nop
inc
pop
pushf
or
inc
fsts
lods
pushf
lcall
subb
push
cwtl
mov
add
repz
mov
push
add
cmp
xor
xor
push
xor
cmp
push
push
popf
shlb
faddl
and
fcoml
aas
inc
sub
fidivl
xchg
cltd
pushf
jo
lods
fcoml
xor
jge
and
sbb
mov
ds
sbb
mov
dec
mov
add
cwtl
fcom
adc
cmp
mov
cld
mov
sbb
mov
lahf
or
aaa
jns
aam
add
push
lds
shll
jmp
jno
and
push
pop
push
cwtl
iret
cmpsl
ja
lds
or
enter
jne
stos
insb
mov
cmp
test
sahf
dec
cmp
test
scas
jle
scas
xor
sub
or
addr16
cmp
jno
mov
shl
mov
popa
mov
ret
mov
cmp
cmp
and
sti
mov
pushf
test
push
sub
cmp
movsb
daa
sbb
out
inc
movsl
les
adc
lret
xchg
mov
xlat
int
inc
not
mov
addr16
xchg
aam
jmp
jp
mov
xor
pop
addr16
rcrl
cld
jbe
mov
jns
xor
mov
lods
repnz
xorl
sti
and
add
fdivs
inc
addr16
and
pop
mov
rcrl
clc
jl
adc
pop
loop
add
jp
and
ret
mov
scas
xor
es
xchg
mov
adc
into
sub
inc
test
add
adc
repnz
inc
mov
pop
cmp
cwtl
scas
jge
dec
mov
testb
push
or
mov
leave
loope
mov
mov
pop
mov
ret
or
outsb
lcall
aaa
push
pop
xchg
mov
es
xor
call
mov
shlb
pusha
ficompl
pop
mov
pop
cmp
inc
outsb
ficompl
push
jmp
mov
les
cmp
aaa
ret
out
xchg
dec
mov
into
stos
inc
ss
xchg
adc
or
divb
sbb
jle
mov
leave
xchg
into
out
mov
loopne
fwait
mov
stc
shl
xchg
inc
pop
push
scas
repz
cwtl
mov
pop
in
cmpsl
mov
clc
dec
mov
mov
fbstp
sub
lret
cmp
stos
mov
iret
mov
clc
fucomp
int
fdivs
idivl
icebp
jb
cli
lret
les
pop
jge
out
iret
mov
push
mov
ds
aam
fsubs
aam
mov
push
push
popa
fwait
push
stos
hlt
lds
xor
pusha
pop
aam
mov
jl
mov
mov
push
adc
out
rcrb
push
sub
and
sbb
sbb
push
nop
adc
movsl
stos
mov
js
mov
and
inc
add
and
add
incl
mov
cmpsb
sub
mov
in
fldenv
inc
jg
into
mov
or
sbb
and
sti
lret
ja
stos
fbld
mov
push
xor
xor
adc
fidivs
negb
dec
mulb
jnp
gs
mov
jo
push
jge
movsb
adc
sbb
mov
fwait
sbb
cmp
and
jno
push
movsl
cli
es
mov
rorb
and
jg
pushf
lea
mov
cli
mov
jae
scas
push
mov
add
icebp
cmp
repz
jns
mov
mov
mov
out
cltd
andl
adc
and
loope
scas
mov
fdivrs
stos
jnp
mov
in
xlat
jne
sbb
mov
cmp
cmp
subl
mov
and
mov
jnp
push
mov
mov
push
lods
lods
cmc
mov
adc
shll
ds
dec
push
test
ffree
mov
mov
sbb
std
mov
push
int
mov
test
loop
arpl
mov
test
repnz
push
inc
aam
loop
mov
push
fwait
mov
mov
addl
fmuls
shll
jns
lds
mov
imul
loope
and
and
mov
jbe
mov
leave
push
lret
movsl
sub
movsl
mov
lds
and
add
or
cmpsl
movsb
rcl
cltd
push
fst
pop
add
xlat
push
and
and
mov
repnz
push
jp
mov
xorl
rorl
mov
mov
mov
movzwl
inc
lods
repz
test
aaa
fisttpl
mov
stos
cmp
lods
push
mov
sti
fwait
or
sub
ficompl
mov
fcompp
sub
mov
sbb
ja
fdivl
sbb
mov
sbb
cwtl
movsb
cmpsl
jecxz
popf
mov
inc
or
xchg
iret
out
pop
jbe
mov
jecxz
mov
and
sti
jmp
sbb
lds
mov
push
jbe
mov
jnp
adc
mov
sub
adc
inc
sbb
mov
inc
scas
add
je
insb
mov
xchg
xor
mov
popf
jecxz
movsb
arpl
adcl
xlat
loop
inc
jge
lods
data16
and
jns
incb
jae
sbb
jns
dec
mov
mov
mov
jno
mov
mov
mov
add
adcl
out
test
jecxz
fldl
xchg
pop
push
xchg
cltd
adc
or
std
shll
cmc
fnstenv
iret
mov
cli
in
test
ja
mov
cld
inc
nop
mov
xchg
repnz
fisubrs
into
mov
ja
icebp
mov
cmpb
fwait
sbb
shll
mov
idivl
mov
popa
mov
repz
jne
push
sub
adc
mov
mov
imul
mov
repz
mov
subb
fcomps
fwait
inc
incb
cmp
mov
add
into
or
mov
mov
xor
xchg
mov
mov
add
cmp
rclb
push
push
xor
cmp
mov
pop
mov
stos
xlat
xchg
shr
xorl
mov
sub
or
cs
mov
mov
test
sbb
cli
xchg
xchg
out
lods
mov
push
in
jae
lret
pop
insl
mov
sbb
gs
push
xchg
cltd
jp
cmp
sbb
mov
repnz
lods
cwtl
or
in
xchg
mov
and
inc
repz
and
mov
repnz
jp
xor
scas
loope
out
rolb
fcom
xor
sbb
add
sub
in
aad
push
and
mov
cmc
adc
inc
shll
subb
test
add
test
std
movb
fdivs
mov
call
adc
rcll
repz
pop
xor
sti
mov
pop
sbb
icebp
mov
add
cmp
adc
adc
cmp
mov
mov
mov
mov
mov
test
icebp
add
inc
add
mov
xlat
xchg
xor
mov
std
into
ss
add
jnp
fwait
pusha
mov
xlat
mov
and
mov
xor
pop
out
and
mov
pop
imul
loope
icebp
jg
mov
dec
es
shll
mov
mov
repnz
loope
fdivl
dec
ja
mov
repz
mov
inc
or
shll
cmp
fs
inc
xor
pop
jl
stos
xorb
ficomps
xchg
mov
xlat
pop
imul
xor
mov
stos
repz
arpl
scas
dec
loope
mov
add
mov
je
sub
jg
lods
xor
xchg
push
pop
sbb
or
test
pop
int3
pop
xchg
inc
inc
mov
fs
add
int
dec
sub
lret
ffreep
icebp
shrl
xlat
mov
loop
dec
xorl
notl
scas
sbb
ds
enter
jmp
xlat
mov
cltd
xchg
outsl
push
adc
arpl
jnp
pop
xchg
jnp
and
mov
dec
test
xchg
mov
and
xlat
test
cwtl
enter
xchg
mov
jg
inc
lea
lods
mov
cmpsl
cltd
cmp
add
repnz
scas
mov
or
pop
in
xchg
mov
cmp
cmpsb
lock
mov
mov
arpl
jp
mov
mov
rcll
hlt
and
fisubrs
mov
adc
dec
out
cmpsl
dec
fwait
enter
in
push
mov
test
xchg
xlat
shl
mov
inc
test
jo
push
gs
cmc
adcb
add
inc
cmpsl
fst
mov
jno
int3
stos
fsubl
xlat
add
inc
pop
hlt
xchg
dec
sbb
fdiv
outsl
mov
jbe
xorb
ss
mov
mov
test
mov
icebp
jecxz
fbstp
push
popf
jae
mov
inc
test
aaa
mov
lds
in
mov
xchg
mov
pop
fldcw
push
xchg
sti
pop
dec
in
mov
movsb
and
push
lret
lods
dec
data16
cmpsl
lret
icebp
popa
mov
jns,pn
lods
test
stos
test
test
bound
shll
addl
add
lods
mov
mov
mov
movsb
shll
mov
icebp
in
xor
aas
je
mov
pop
sub
mov
sub
mov
imul
scas
je
cwtl
push
or
fs
sub
sub
in
imul
scas
fstl
adc
xor
sub
xlat
pop
xor
inc
movsl
mov
mov
repz
notl
push
mov
lahf
jg
mov
pop
in
ret
mov
stos
repz
lahf
cli
mov
sub
sub
loop
mov
icebp
xchg
sti
mov
hlt
mov
xor
or
xchg
inc
mov
push
push
out
imul
scas
rol
rcl
push
xor
sub
ss
sarl
icebp
inc
testl
mov
xor
pop
hlt
xchg
enter
ret
jge
mov
cmp
arpl
push
ret
mov
sbbl
mov
mov
loopne
mov
cmc
pop
nop
jp
movsl
jne
ret
cmpsl
cmpsl
push
jecxz
std
mov
and
mov
mov
das
jmp
push
test
push
popa
nop
mull
cmp
je
loop
hlt
sbb
arpl
fwait
xor
mov
mov
addl
insb
mov
push
gs
jnp
mov
mov
movsl
pop
repnz
jmp
out
adc
sbb
shl
mov
mov
cmpsl
mov
cmp
xor
cmpsl
jo
inc
xchg
std
stc
pop
mov
adc
jecxz
adc
insl
mov
mov
mov
inc
stos
sbb
lods
mov
sub
xchg
xorl
pop
mov
pushf
aam
cld
adc
dec
scas
cmp
stos
inc
repnz
push
les
jecxz
xlat
es
pop
sbb
lahf
sub
repz
cmpsb
cwtl
sbb
cmp
mov
pop
pop
xchg
push
lret
mov
pop
push
sbbl
or
jo
jl
stc
mov
mov
or
sarl
aaa
pop
stos
mov
scas
jp
aad
into
pop
mov
es
rcl
inc
sbb
movsb
mov
cld
or
fnsave
mov
test
xor
inc
mov
mov
jecxz
cwtl
stos
testl
movb
xchg
sbb
fisttpll
addr16
mov
popf
jp
sahf
filds
mov
lea
in
ficoml
ret
xor
fstl
jae
mov
mov
pop
sbb
cmpsb
mov
xor
xlat
xchg
add
push
or
xchg
stos
dec
pop
inc
imul
jle
mov
lea
jns
mov
xor
pop
gs
push
mov
dec
jae
push
aas
test
mov
sbb
repz
std
mov
popf
xor
push
shl
mov
push
flds
rep
xchg
insl
xchg
inc
repnz
mov
and
ja
out
out
mov
in
push
cmp
mov
inc
mov
loope
xor
jle
mov
in
push
addr16
stos
cmp
aad
out
scas
popf
mov
xor
jle
jecxz
fisubs
cld
mov
das
xlat
mov
mov
pop
or
xor
xlat
mov
mov
sub
add
xchg
mov
icebp
pushf
popl
shll
out
mov
mov
cmc
in
in
cltd
fists
inc
addr16
lcall
cmp
repnz
sub
and
fdiv
out
sbb
pop
lods
mov
cmp
pop
and
es
xor
pmuludq
xor
ja
sbb
mov
jae
movsl
mov
in
ss
mov
pop
jnp
xorl
inc
dec
jg
ret
sbb
pop
lock
dec
mov
imul
sbb
xor
pop
mov
mov
xchg
push
mov
mov
loopne
insb
add
push
leave
mov
fwait
enter
xorl
cli
mov
sub
loope
sub
int
xlat
movsb
test
mov
mov
rolb
es
movl
adc
mov
dec
jne
sub
fwait
jnp
pop
mov
repz
jge
or
mov
xchg
or
mov
in
test
adc
fldt
dec
push
xor
xor
shll
dec
xchg
insl
sub
aam
subl
lcall
arpl
rcrb
sbb
cmp
sbb
dec
pop
cmpsl
cmpsb
cltd
mov
cmp
shlb
decb
paddusw
mov
stc
sbb
scas
repnz
adc
fs
mov
jl
jnp
inc
push
mov
sbb
test
nop
scas
xchg
and
xchg
shr
out
mov
icebp
lcall
repnz
mov
dec
in
inc
rorl
loope
pop
mov
xchg
push
movsb
mov
mov
jl
xlat
dec
insb
mov
mov
cmpsb
jge
mov
cmp
xchg
fwait
add
push
fs
popf
mov
mov
xor
jg
xor
cmc
mov
mov
cltd
rcl
mov
mov
imul
adc
cwtl
pop
sbbl
cltd
mov
pop
jnp
movsb
mov
dec
cmp
cmp
mov
iret
mov
adcb
fcoml
daa
pop
in
mov
lds
and
leave
ret
cmp
push
mov
mov
xchg
mov
mov
jb
fwait
mov
arpl
pop
scas
out
rep
sub
and
mov
es
sarl
adc
lds
mov
int3
pop
jl
mov
sbb
movsb
fcomi
lret
xor
push
clc
bound
andl
xchg
jns
addb
leave
test
mov
mov
lods
add
dec
inc
popa
pop
mov
mov
mov
in
cmp
fcmovnb
mov
cli
xor
scas
imul
cmpb
mov
das
stos
xor
ss
ds
lret
addb
push
mov
popf
and
shl
sbb
gs
adc
xchg
test
add
adc
mov
jg
mov
ljmp
cmpsl
pop
lahf
js
pusha
mov
iret
jnp
in
cltd
fbstp
cmp
out
xchg
mov
rcr
lret
jb
leave
pop
xor
xchg
add
add
mov
sbb
and
sbb
mov
mov
leave
mov
icebp
out
mov
repz
movsl
outsl
mov
xchg
adc
push
decl
es
mov
add
sbb
xchg
inc
sbb
xchg
pushf
jns
pop
imul
cltd
ret
mov
jl
ljmp
cmp
aam
mov
fwait
xchg
arpl
cmp
roll
movsl
outsb
push
xor
test
mov
mov
arpl
xlat
cmc
out
jno
pushf
lods
test
loop
sub
and
fsts
repz
in
shl
dec
mov
aaa
inc
xorl
cmpsb
adc
shll
jne
push
mov
stc
ret
mov
sub
cmpsl
pop
fcmovnbe
test
adcl
jecxz
repz
je
shll
jno
enter
add
push
mov
mov
push
imul
je
push
xchg
ljmp
mov
xlat
mov
jmp
ret
jnp
mov
mov
notb
xchg
mov
and
cmp
or
clc
fisttpll
and
jl
dec
cmp
ds
mov
cmc
dec
mov
add
repnz
mov
mov
aad
jl
mov
cmpsl
pop
aaa
jnp
mov
jae
lret
cli
push
nop
mov
leave
mov
dec
cmp
add
cld
ja
in
pop
mov
mov
adc
push
mov
xchg
setb
cmc
pop
scas
jb
sbb
shrl
or
negl
mov
movsb
lret
outsl
mov
insl
ret
jl
and
addr16
mov
loope
xlat
push
call
push
cmp
sub
lahf
pushf
cli
divl
lock
xorl
mov
and
mov
scas
icebp
and
jp
mov
ja
ficomps
mov
mov
sub
adc
insb
mov
dec
icebp
cltd
testl
jge
lahf
ja
mov
iret
mov
and
mov
es
add
sbb
cmp
shll
cmpsl
repnz
jnp
mov
scas
sub
popa
test
mov
push
sbb
cmp
add
cmp
fsub
sub
push
icebp
add
in
scas
ja
inc
mov
xor
es
int3
cmp
movsl
scas
sub
rcr
inc
jge,pt
sub
mov
mov
add
xlat
adc
gs
and
xor
sbb
sub
pop
lock
inc
fwait
fwait
inc
sbb
jae
ja,pn
das
cltd
or
and
daa
cmp
cmpsl
adc
test
ret
loope
mov
pop
repnz
cmp
sar
aad
cli
rcrl
es
and
mov
mov
mov
dec
rcll
int
mov
mov
das
fldl
mov
push
lods
gs
sub
inc
shlb
push
lcall
jo
aas
mov
in
xchg
andl
add
testl
mov
es
mov
mov
xor
mov
or
and
lahf
jb
mov
cli
mov
lcall
jnp
scas
scas
jmp
mov
iret
popa
mov
mov
mov
test
icebp
mov
nop
jns
aad
push
cmpsl
fadds
shll
or
loop
arpl
call
jne
in
adcb
cmpsl
xchg
daa
xor
sbb
xor
sahf
dec
fwait
dec
in
cmpsl
or
xchg
jnp
roll
pop
mov
sbbb
shll
mov
pop
add
add
xlat
shrl
push
jmp
sbb
mov
jb
cltd
and
mov
test
sub
push
arpl
add
xor
scas
cmp
clc
fidivrl
mov
cmpb
insl
push
scas
xor
jmp
jp
sbb
arpl
into
mov
lahf
xchg
mov
add
pop
add
cmpsb
mov
movsb
add
sbb
mov
mov
xchg
sbb
mov
ljmp
cmp
push
stos
mov
aam
mov
sbb
inc
lods
cmp
cltd
mov
shrl
mov
cmpsb
cmc
ffree
nop
pop
mov
add
ficoms
outsb
adc
push
mov
mov
inc
test
cmp
fstpl
es
icebp
add
mov
stos
in
xchg
arpl
push
sbb
mov
add
stos
jge
cmp
fldt
xor
mov
loop
jne
mov
fwait
push
mov
cmp
test
mov
add
mov
jl
fwait
mov
mov
or
pop
cmp
inc
cwtl
cmp
pop
xchg
cmp
mov
call
rorl
mov
mov
mov
pop
push
cmpb
push
jne
mov
loop
pop
icebp
sbb
dec
mov
cld
fadds
hlt
lods
stos
pushf
lods
xchg
cmpsl
outsl
mov
lds
push
pop
cmp
adc
mov
cmp
mov
pop
or
jae
jnp
leave
xchg
cmp
mov
mov
dec
mov
add
mov
xlat
push
jp
mov
aaa
mov
pop
xchg
stos
add
sbb
sub
shll
loope
mov
iret
fcoml
lahf
scas
shll
test
insl
jg
inc
xchg
je
fnstenv
pop
lcall
mov
fmuls
xor
inc
xlat
lods
jle
out
pop
jmp
jae
xchg
pop
sti
add
fcoms
cld
mov
jae
cmc
push
decb
out
je
mov
xor
xor
stos
test
mov
mov
xlat
leave
jmp
sub
xchg
xchg
mov
push
lods
adc
and
jbe,pt
rcrl
pop
pushf
mov
mov
loope
mov
sub
xor
mov
xor
or
cltd
jecxz
loope
scas
adc
sbb
mov
push
xchg
orl
add
ja
mov
mov
pop
and
bound
mov
push
xchg
inc
inc
fildll
jmp
not
imul
stos
xchg
mov
sbb
mov
cmp
in
push
mov
and
arpl
mov
mov
adc
add
xchg
sub
xor
movsb
ds
mov
mov
inc
dec
outsl
dec
mov
andl
xor
jle
shrb
adc
mov
out
push
popf
jae
jne
jl
sbb
lods
lods
mov
adc
icebp
cmpsl
pop
mov
cmpsb
cld
movsl
je
xchg
or
xor
loop
cltd
inc
lar
sub
push
mov
fwait
push
inc
fwait
cmp
rep
sti
jns
pop
mov
pop
mov
scas
rolb
jmp
test
sbb
or
popa
dec
ljmp
rcl
int
sbb
or
push
xchg
fmuls
add
mov
sub
icebp
gs
lcall
roll
xchg
dec
cmp
stos
mov
enter
dec
mov
rclb
aaa
sub
mov
ljmp
mov
movsb
in
pop
js
divb
jno
xor
sbb
xlat
mov
pop
add
shlb
add
mov
gs
cmpsb
fdiv
popl
daa
cwtl
idivb
cmp
push
jns
push
pop
cmp
mov
mov
popa
push
mov
mov
aad
jnp
repnz
adc
hlt
icebp
xchg
mov
xlat
xchg
aaa
mov
lods
dec
add
lds
ds
pop
mov
jns
ss
es
or
cwtl
xchg
mov
sarl
cmp
out
cwtl
inc
sbbl
mov
bound
xor
decb
addr16
icebp
pop
cmp
sbb
lret
dec
loopne
mov
std
fisttps
mov
adc
add
push
jp
add
xchg
mov
pop
dec
cwtl
mov
adc
fstpl
or
inc
out
mov
add
popf
mov
scas
fbstp
loop
shrl
sbb
shl
or
movsb
insl
xlat
std
cmp
dec
das
mov
sar
xchg
mov
dec
lods
mov
ss
sbb
pop
mov
xor
mov
outsl
push
cmpsl
mov
sub
je
cmpsl
movsb
mov
sbb
cld
mov
dec
jnp
pop
dec
mov
push
and
add
out
add
stc
fbstp
std
rorl
ret
xchg
frstor
jbe
pop
sbb
les
aaa
aas
cmpsb
sub
lods
dec
repz
ret
dec
das
xchg
les
bound
je
mov
pop
imul
cmp
jp,pt
cwtl
and
xor
mov
popf
inc
jg
push
jbe
mov
and
mov
jno
shll
mov
jmp
movsl
mov
cmc
aas
mov
pushf
fs
push
aad
ja
sbb
fwait
mov
mov
cmpsl
std
rolb
and
rcrl
cmp
push
sub
mov
mov
lds
incb
mov
test
andl
lret
mov
stc
sbb
mov
fs
fcmovnu
inc
xlat
cmp
imul
out
sbb
cmpsl
out
mov
nop
jle
adc
xor
outsb
sub
or
pop
test
sbb
cmp
icebp
pop
mov
mov
je
mov
or
jmp
jae
shll
xor
lea
mov
scas
push
ja
mov
and
pop
mov
in
mov
mov
sti
adc
jbe
out
mov
shlb
in
daa
push
testl
cmpsl
adc
cld
int
mov
fidivrs
icebp
mov
outsb
xor
rcrl
lds
popa
add
test
dec
xchg
mov
ret
sti
sub
inc
dec
mov
or
sub
in
rcll
hlt
ja
pop
sbb
adc
das
dec
sbb
jg
mov
fnstenv
movsb
imul
div
push
cs
or
mov
stc
cltd
inc
fwait
mov
cmpl
popf
add
mov
fs
push
mov
test
shll
test
sbb
mov
mov
mov
test
cwtl
xchg
cmp
push
xor
mov
daa
mov
cmp
das
cmpsl
inc
test
adc
popf
loop
cmpsl
mov
arpl
pusha
xorl
lret
je
imul
jno
lods
bound
aaa
push
movzwl
sub
mov
push
jg
mov
imull
sub
and
mov
lock
ljmp
addr16
xchg
xor
mov
or
mov
push
loop
mov
mov
or
sub
inc
stos
ficoms
xlat
xchg
fdivrs
repz
mov
cmp
inc
insl
lods
xchg
mov
mov
repz
inc
mov
mov
adc
mov
push
mov
sbb
out
arpl
mov
dec
cmpsb
out
cmc
add
jns
lods
xchg
jl
sahf
and
mov
pop
clc
fidivrs
pop
mov
pusha
mov
cmpsl
xchg
ret
xchg
cs
fisttpl
xchg
out
icebp
fdivrs
cmp
fsubr
xchg
mov
adc
test
mov
fwait
mov
fdivl
and
sbb
push
fmuls
std
sub
jb
mov
jg
scas
cmpsl
enter
jmp
jnp
int
out
sbb
cmp
jno
mov
dec
fcom
dec
mov
cli
xchg
outsb
jp
and
cltd
jmp
and
or
sbb
push
jae
repz
xlat
push
icebp
mov
xor
filds
xor
push
sbb
incb
xchg
lcall
test
mov
xchg
mov
test
add
adc
cmpsb
and
pushf
and
ss
je
movsl
cmp
xchg
adc
sub
hlt
subl
and
fbld
in
mov
xchg
jg
jae
xorl
mov
stos
cmpsl
mov
jp
jne
cmpsb
subl
andb
and
idivl
xchg
cmc
mov
outsl
ss
jno
loope
pop
jo
cmp
daa
mov
cld
lods
adc
gs
test
and
xor
out
arpl
stos
push
add
mov
mov
mov
xchg
add
adc
cmpsl
mov
sbb
pop
xor
stos
jne
mov
ret
daa
fcmovb
mov
es
add
subl
icebp
push
mov
ja
mov
cli
mov
dec
cmp
daa
jns
xchg
xchg
inc
ss
stos
aaa
lret
add
xchg
cmp
inc
fnstenv
xchg
dec
addr16
jg
push
xor
adc
icebp
and
xlat
and
aaa
mov
jg
repnz
pop
daa
loop
sbbl
pop
sub
mov
fidivl
xor
cltd
insl
stos
xor
stos
inc
sti
out
cli
and
pop
js
jl
lcall
cmp
jp
ljmp
mov
fnsave
add
jbe
mov
xchg
add
mov
mov
jae
sub
popa
cmp
mov
add
xchg
xorb
jl
xchg
mov
and
pop
inc
jg
loope
mov
add
mov
xchg
and
das
sbb
mov
insl
adc
aas
sarl
mov
mov
or
mov
ss
sbb
repnz
pop
add
mov
mov
loop
mov
daa
sub
mull
pop
push
jle
mov
or
lods
push
and
mov
push
mov
sti
fdiv
repz
pop
jbe
aad
xorb
cmp
repz
in
into
inc
repz
popa
adc
xchg
jge
loop
out
adc
pop
adc
jnp
cmp
pop
loope
in
js
jne
jecxz
imul
std
pushl
int
popa
cmp
outsl
lods
xchg
inc
mov
mov
mov
xor
scas
cmpsl
add
push
mov
mov
mov
insb
rorl
cmpsb
push
rep
add
add
push
xchg
ljmp
icebp
dec
cmp
lret
jnp
pop
mov
mov
rclb
and
fsubs
push
iret
mov
leave
mov
mov
push
xchg
push
jp
pushf
int
xchg
xchg
dec
xlat
xchg
or
mov
mov
aaa
addr16
cmc
inc
adc
arpl
cwtl
mov
or
mov
pop
enter
adc
push
sub
sub
or
xor
cmp
out
repz
jb
call
rcll
and
mov
fcomps
xor
repz
mov
jmp
push
mov
sbb
and
es
mov
jecxz
jo
inc
data16
mov
push
cmp
mov
mov
pop
push
xlat
jmp
aas
cld
cmp
or
pop
cmp
loop
pop
fldl
cmpsl
sub
xor
mov
add
mov
xchg
cld
jne,pn
lods
jge
mov
mulb
and
push
mov
test
pop
xlat
dec
mov
fbld
fisubs
cwtl
sub
repz
mov
clc
bound
scas
push
sbb
xor
mov
nop
xor
les
xchg
lcall
mov
movsb
repnz
cltd
lods
fimuls
jmp
xchg
sbb
cmp
mov
es
pop
xlat
lea
cmp
lods
je
stos
push
sub
mov
mov
icebp
sub
xchg
xor
lahf
popa
sub
add
push
dec
jmp
xor
xchg
shlb
mov
sbb
dec
sbb
inc
pop
xor
mov
mov
arpl
int3
shll
pop
add
stc
mov
aaa
xchg
xchg
push
cmp
dec
xor
add
mov
test
and
lds
xor
cmc
das
cltd
adc
jge
pop
movsl
into
scas
sbb
xlat
jge
dec
fldenv
xchg
pop
cmp
cwtl
xor
mov
adc
jge
nop
pop
icebp
cmpsl
mov
cld
in
mov
push
pop
cmp
stc
insl
adc
popa
iret
loop
xor
pushf
fistl
sub
cmpsb
jne
inc
hlt
aas
rcll
movsb
mov
ja
pusha
mov
lret
cli
mov
mov
js
sti
jb
cmp
mov
fucompp
jbe
xchg
test
icebp
cmpsl
jp
jmp
cmc
out
pop
into
insl
mov
clc
sub
inc
xor
cwtl
mov
mov
ficoms
mov
add
mov
xor
adc
pop
addr16
jnp
or
inc
jae
sbb
scas
cwtl
daa
adc
pop
mov
cmpsl
dec
pusha
mov
pop
cmp
int
add
sbb
xlat
fiaddl
aaa
mov
enter
je
out
out
pop
jae
out
xchg
mov
stos
inc
dec
add
dec
mov
test
sarl
shlb
pop
sbb
xor
mov
mov
popa
aad
xchg
call
xchg
sti
sub
mov
mov
jp
cmpsb
aaa
xchg
arpl
or
repz
adc
mov
movsl
movl
and
sub
mov
pop
inc
fsubs
jno
pop
add
shrl
mov
cmpsb
int
std
lahf
sub
test
mov
cmp
fwait
jmp
jg
fisttps
out
add
popa
sbbl
dec
ja
push
jno
sub
mov
push
dec
je
hlt
mov
mov
dec
js
sbb
inc
mov
pop
inc
mov
pop
xlat
xchg
loope
or
push
xlat
dec
jmp
push
lds
mov
sub
arpl
xlat
fbstp
inc
dec
andb
adc
negl
mov
sbb
or
loop
cli
cwtl
aam
mov
jno
sbbb
mov
inc
and
scas
call
negl
pop
std
lock
pop
mov
adc
jnp
scas
hlt
fwait
lods
cmpsl
xor
cmp
sub
jmp
cmc
mov
int
es
sub
dec
dec
repnz
sub
daa
test
movsl
icebp
jnp
or
mov
xchg
mov
sahf
and
jmp
insb
je
xchg
ret
cmp
mov
or
cmpl
mov
mov
mov
insl
shl
and
cltd
out
lods
cmpsl
fidivrs
icebp
cmpsb
loope
adc
mov
fimuls
clc
xchg
data16
mov
insl
outsl
sbb
test
loop
jge
es
out
inc
mov
mov
mov
es
fwait
mov
int
fbld
std
daa
adc
cmp
jl
push
pop
mov
pop
or
test
movsb
mov
push
mov
sub
leave
sbb
cld
mov
fmuls
test
add
std
jnp
outsl
and
mov
movsl
add
push
or
xchg
in
sub
sub
repnz
call
mov
dec
imul
loop
sub
scas
sub
jbe
sub
dec
xor
and
cwtl
arpl
gs
mov
xlat
push
mov
mov
int3
pop
and
ret
adc
adc
mov
pop
jbe
mov
mov
mov
lret
sub
jecxz
aas
jmp
das
in
push
sti
sub
cltd
cmpsl
xorb
cmpsl
dec
int
enter
mov
cs
xor
jae
test
mov
dec
test
cltd
loope
out
repz
and
fnstsw
mov
dec
ss
lods
sbb
mov
mov
add
pop
xchg
mov
jb
mov
mov
jp
jno
mov
mov
mov
push
movsl
mov
ljmp
mov
sbb
dec
imull
je
push
cs
mov
lea
in
js
xor
sub
fiadds
inc
inc
mov
in
push
fisttpl
and
push
jns
xorb
mov
sbb
popa
cmpsl
push
pop
ja
sub
cmpsl
add
mov
xchg
loopne
cmp
pop
stos
cmp
lcall
and
add
cmp
popa
lahf
xchg
sbb
shlb
fdivs
push
mov
pop
sbb
jle
xchg
mov
add
roll
cli
sbbb
arpl
scas
cmp
jg
push
and
push
jmp
cmc
mov
jp
and
fs
mov
inc
icebp
imul
jb
adc
mov
sub
rcrb
pop
daa
enter
jne
inc
cld
aaa
mov
cmp
lcall
mov
sti
jnp
add
mov
cmpsb
in
mov
xchg
push
shlb
mov
clc
nop
xor
mov
test
pop
ss
xchg
jmp
aam
es
adc
mov
cmp
inc
icebp
int3
movsb
hlt
sbb
lock
iret
mov
mov
bound
mov
lret
jnp
dec
int3
mov
cwtl
dec
mov
insb
movsl
or
lea
cmp
dec
mov
mov
mov
mov
mov
add
mov
int
dec
or
lret
sahf
mov
mov
lcall
scas
inc
lods
aas
in
mov
insl
jne
aaa
fnstcw
mov
jp
mov
mov
fdivs
outsb
jo
add
jle
push
ss
test
lds
inc
pop
push
in
mov
xlat
mov
fwait
sub
pusha
sbb
add
addl
jnp
push
cltd
sub
stc
mov
test
arpl
add
xor
push
sbb
xchg
inc
xchg
add
mov
enter
mov
mov
adc
dec
mov
pop
cmp
sarb
mov
xlat
andb
lahf
push
mov
push
lods
mov
mov
mov
pushf
push
mov
dec
cld
cmpsl
add
xchg
es
push
pop
cmpsl
cwtl
movsl
xor
mov
sbb
jg
sti
cmpsl
push
mov
cmp
icebp
stos
cmp
xchg
sbb
test
or
mov
ficompl
nop
xchg
sbb
movsb
clc
mov
js
and
sub
shll
sbb
mov
in
mov
loop
mov
add
xchg
std
movsl
mull
or
mov
or
mov
pop
xlat
pop
mov
adc
pop
push
push
cmpsl
andb
push
mov
in
test
mov
mov
push
xor
stos
inc
ret
pop
shlb
mov
in
mov
dec
and
jg
loope
movsl
cmp
and
mov
mov
jnp
sub
fists
and
inc
mov
cmp
mov
inc
cmp
ds
push
pop
mov
addr16
xor
mov
daa
sbb
aas
push
fsubr
and
push
jb
sbb
pop
xchg
int
mov
nop
cmpsb
mov
insl
jmp
push
popf
adc
scas
inc
mov
cwtl
sar
mov
test
xchg
fs
push
enter
jbe
mov
xchg
mov
sub
es
mov
pop
movsb
mov
jg
xchg
adc
cmp
add
sbb
cmpsl
push
xor
test
push
add
in
mov
mov
loopne
mov
adc
movsl
clc
dec
cmpsl
inc
xchg
sbb
mov
cli
pusha
sub
cmc
mov
test
out
ss
enter
loope
mov
xchg
shll
lods
xchg
add
push
sub
rorb
xor
sti
jge
jmp
out
jb
aad
push
add
sub
dec
mov
mov
and
mov
ss
and
in
lahf
mov
mov
dec
sub
mov
pop
jnp
push
outsl
call
add
stos
mov
mov
cli
sahf
adcl
inc
xchg
add
popf
jne
pop
dec
int3
dec
jg
mov
in
push
mov
fstps
jmp
fisttpll
cmp
data16
xlat
loop
adc
in
mov
and
cltd
gs
pushf
sbb
je
sub
dec
mov
mov
lcall
push
push
mov
mov
jmp
mov
xchg
xchg
repnz
pushl
pop
xchg
fcomp
int
dec
fisttpll
jae
int3
xor
movsl
xchg
and
adc
or
add
mov
ss
js
adc
dec
mul
or
insb
mov
loopne
cmp
pop
lcall
adc
inc
jl
sub
sbb
cltd
push
shrl
mov
xor
mov
pop
fidivrs
xor
mov
cwtl
mov
data16
ds
dec
xorl
push
or
mov
mov
lea
mov
xlat
loop
xlat
repnz
sub
push
mov
mov
sahf
xchg
add
jmp
repnz
mov
mov
pop
inc
movsb
mov
add
subb
jle
mov
cmp
xacquire
xlat
les
adc
xor
arpl
mov
into
bound
stos
repnz
shrb
outsl
sub
jae
push
xor
in
adc
lcall
inc
in
pop
push
cwtl
lahf
push
xchg
mov
cmc
addr16
aad
cmp
or
das
pop
daa
mov
xchg
mov
scas
in
insb
mov
push
gs
je
ja
mov
dec
add
cwtl
adc
mov
lahf
mul
cmpsl
jae
and
aad
adc
popa
or
cmp
pusha
mov
test
and
push
mov
mov
mov
push
mov
and
pop
gs
cmp
mov
cmpsl
mov
mov
jb
jne
xlat
loopne
idiv
jg
fildll
test
adc
shll
lcall
sbb
dec
sbb
mov
xchg
mov
mov
mov
jecxz
movb
hlt
pop
xchg
stos
mov
bnd
enter
mov
repz
adc
jae
aas
mov
out
mov
xchg
les
cwtl
xor
lock
pop
mov
mov
pop
xchg
repnz
loope
pop
xor
arpl
jmp
sbb
jae
mov
test
mov
mov
cmp
test
xor
icebp
jnp
fwait
mov
inc
insb
dec
mov
outsb
adc
jbe
es
std
loop
pop
xchg
fdivr
or
fmuls
jne
and
leave
in
xchg
cmc
mov
mov
mov
mov
aam
stc
mov
pop
std
lea
test
cltd
out
pop
push
out
xchg
xchg
nop
scas
sbb
sub
adc
filds
aas
dec
jmp
xchg
movsb
leave
mov
bound
out
push
fs
xlat
jns
sbb
shl
fdivrs
cmp
lds
mov
adc
xchg
xchg
mov
and
out
dec
idiv
mov
rcl
xlat
lods
jbe
sub
movsl
jge
nop
mov
mov
cwtl
push
dec
mov
inc
movzwl
movsb
mov
loope
rcrl
ljmp
fisttpl
sub
adc
push
stos
mov
xor
mov
clc
test
int
jbe
sarl
mov
sbb
cmp
sub
and
mov
fyl2xp1
popf
loop
mov
imul
mov
xchg
cltd
loopne
push
rcll
mov
repz
scas
jae
in
mov
push
mov
pop
cmc
cld
mov
ret
mov
xor
mov
test
insl
scas
lods
push
add
xchg
dec
ret
inc
int
push
cmc
mov
mov
bound
mov
movsl
pop
push
rclb
out
je
push
push
lret
scas
add
and
mov
mov
mov
push
test
lret
xor
xchg
mov
lds
shll
and
shll
or
outsb
cwtl
repz
sbb
add
cmp
mov
dec
icebp
testl
lahf
fcompl
mov
icebp
jnp
cmp
mov
iret
xor
cmp
push
or
movsl
cmp
push
cltd
out
cmp
cmp
xor
and
lods
dec
repnz
mov
subl
cmp
sbbl
mov
mov
push
repz
sub
add
mov
xchg
lret
and
popa
pop
test
arpl
and
sub
adc
repnz
adc
pop
ss
mov
push
ret
or
fcompl
adc
in
fwait
das
sub
or
out
imul
mov
sbb
jmp
sbbb
mov
scas
cli
aas
mov
jmp
scas
xchg
mov
mov
out
mov
xor
jmp
mov
arpl
add
es
push
sub
jmp
out
int3
imul
stos
and
clc
test
mov
scas
xchg
mov
int3
mov
movzwl
jecxz
movsb
sbb
sbb
ss
push
outsl
mov
rolb
pop
shrb
inc
les
test
frstor
pop
mov
fwait
sti
mov
pusha
outsl
dec
mov
pop
xor
inc
inc
mov
adc
mov
xchg
loop
pop
es
movb
clc
das
jecxz
cmp
mov
call
rolb
cmp
cmpsl
in
int3
mov
sti
les
jnp
in
cmp
sbb
stos
loope
cmc
add
add
cmpsl
stos
popl
cwtl
add
mov
icebp
sbb
mov
jnp
jae
rcl
scas
sub
xchg
andl
arpl
mov
popf
push
daa
out
mov
out
pop
cmc
cmpsl
outsb
adc
aas
mov
cmpsl
xor
sub
jne
test
stos
imul
mov
cmp
add
shll
adc
mov
mov
fldcw
test
repnz
aas
mov
sub
fs
movsb
es
sti
and
sbb
push
mov
insb
dec
cmp
push
test
mov
dec
cmpsl
xchg
std
repnz
cmc
scas
jns
sub
mov
dec
fsubl
out
jle
xor
xchg
xchg
dec
jb
imul
mul
mov
ljmp
lcall
mov
out
jecxz
dec
cli
loope
push
cmpsl
fisubrl
pop
cltd
je
xchg
jle
nop
rorb
cmp
mov
sub
aas
jbe
cmpsl
fsubs
lahf
popf
fisttps
lods
aad
insb
pop
scas
jmp
mov
xor
mov
loop
mov
mov
mov
shr
cwtl
inc
movsb
fsubrl
mov
pop
jl
mov
loopne
mov
xlat
lret
mov
mov
or
inc
aas
add
mov
push
jae
cs
mov
pop
test
mov
inc
icebp
sub
mov
mov
pusha
mov
add
mov
push
in
outsl
scas
cmp
sub
fwait
mov
xlat
inc
clc
lahf
push
or
sbb
imul
sub
add
xor
cmc
mov
mov
push
pop
pop
dec
sbb
cmpsb
stos
shrb
jg
fs
add
mov
jge
mov
shrb
xor
iret
sbb
push
sbb
or
mov
sarb
inc
movsl
add
xor
pop
je
pop
cmp
stc
mov
xchg
loope
pop
cwtl
lret
sub
mov
mov
loop
stos
push
int
mov
xor
dec
jno
inc
xor
sbbl
push
nop
sub
sti
add
fdivl
cmp
mov
popf
sti
loop
mov
rorb
test
mov
inc
movsl
ds
dec
sbbl
rcrb
mov
or
sub
mov
xor
pop
ret
mov
add
xchg
mov
sub
mov
cmp
dec
xchg
arpl
fwait
in
test
mov
fwait
pop
lods
stos
or
das
mov
xchg
sbb
adc
mov
jnp,pt
jle
cmpsl
or
stos
test
mov
ja
aas
mov
pushf
lahf
fstps
fwait
subb
addl
cmpsl
mov
or
jg
cmp
mov
cmc
enter
push
pop
dec
xchg
ja
in
mov
cmp
cmp
xorb
lahf
aas
repz
adcb
sub
lock
mov
jge
mov
nop
ljmp
das
mov
add
mov
mov
andb
sbb
sub
cmovns
mov
mov
or
dec
mov
cmpsl
xor
popf
mov
mov
outsb
bound
nop
and
mov
adc
sub
scas
inc
subl
push
test
inc
mov
std
cmpsl
inc
fwait
bound
add
mov
outsb
pop
fnsave
add
or
in
and
adc
pushl
in
xchg
cmc
sahf
mov
sbb
xchg
ds
and
in
sbb
mov
cmpsl
pop
movsl
or
xchg
jnp
fsubs
cmpsl
fildll
dec
jl
push
mov
bound
mov
lods
in
cmpsl
add
and
js
cmp
mov
popf
daa
aaa
sub
movsl
fdivl
repz
scas
int
mov
push
out
xchg
add
mov
imul
mov
pop
jns
adc
mov
outsb
xlat
test
sbb
movsl
sub
mov
jae
pop
roll
daa
push
mov
xchg
sub
jne
int3
repnz
jae
dec
je
mov
lods
cmp
clc
mov
lcall
iret
loop
mov
scas
cmp
inc
fwait
ja
push
cmpsl
mov
jb
xchg
rcl
adc
pop
movsl
mov
adc
fucomip
arpl
lahf
jnp
jo
mov
mov
xor
and
mov
ljmp
mov
mov
shl
mov
aad
nop
mov
xor
pop
negb
popa
movsb
mov
push
or
mov
out
cmp
mov
fiadds
shll
int3
js
in
and
jno
stos
xchg
xor
cmp
push
movsb
mov
daa
xor
or
scas
mov
adc
sbb
into
mov
pop
lods
jnp
cli
test
mov
or
popa
jg
mov
mov
repz
mov
jae
xchg
cmp
int
mov
mov
cmpsl
lds
repnz
cltd
dec
cmpsb
xchg
pop
loope
fsub
mov
xchg
sahf
add
push
cmpsb
add
sub
cmc
dec
hlt
fisubrl
mov
shll
or
lcall
mov
and
fwait
dec
mov
lret
ja,pn
hlt
pop
mov
dec
jo
mov
mov
cmp
insl
or
push
cmpsl
mov
rolb
aad
sbbb
jns
xor
test
or
mov
loop
add
mov
in
xchg
cmpsb
insb
lea
sbb
and
mov
pusha
cmp
and
xchg
sbb
das
mulb
mov
push
lcall
or
and
cmpsb
pop
cmp
xor
imul
test
push
mov
test
mov
mov
mov
jnp
xchg
cmp
sub
dec
mov
sub
cltd
mov
or
loopne
in
lcall
pushf
call
mov
sbb
inc
and
imul
mov
orb
aas
mov
cmpsl
ds
loope
cmp
xchg
jmp
mov
xor
in
jbe
xlat
addr16
call
xlat
cltd
retw
pop
mov
nop
movsb
cmpsl
inc
mov
movl
in
jbe
mov
jnp
cmpsl
dec
mov
mov
pop
dec
rcrb
sbbl
sub
inc
ljmp
mov
and
imul
clc
lds
stos
mov
in
mov
sbb
xchg
and
mov
jae
mov
int
iret
mov
mov
mov
sbb
int
mov
stos
es
jns
xor
js
jp
cwtl
xchg
aas
nop
fisubs
push
pop
mov
cmpsl
fildll
xchg
adcl
xchg
and
pop
loope
lds
lods
mov
imul
and
fstpl
sub
rclb
mov
test
sbb
mov
dec
cmpsl
adc
gs
mov
and
mov
xlat
jnp
xchg
inc
mov
scas
mov
mov
xor
mov
stc
pop
jb
fwait
jno
xchg
mov
mov
shl
xor
cmpsl
mov
addr16
push
ja
mov
ror
fs
cmp
push
push
pop
test
pop
iret
sbb
xchg
insl
mov
mov
fsubr
mov
mov
pop
cwtl
mov
cmp
shlb
arpl
mov
fnsave
pop
mov
enter
pop
mov
popa
cmp
jg
imul
push
cmpsb
push
cmpsl
test
mov
push
mov
push
aaa
mov
mov
xor
lds
mov
inc
fnsave
mov
mov
push
pushf
imul
jnp
mov
push
sbb
in
cmp
stos
or
sub
movsl
mov
fsubrs
aaa
jmp
mov
mov
repz
outsl
dec
xor
cmp
data16
push
and
xchg
ja
sub
mov
mov
insl
testb
les
mov
cmpsl
in
int3
ficoml
and
push
mov
sbb
popf
icebp
mov
sub
push
adc
mov
gs
mov
xorl
xchg
cltd
stos
icebp
push
lcall
inc
sub
pop
mov
push
rolb
mov
cmpsl
and
aas
repnz
xor
cmc
cld
add
mov
mov
cmpsl
std
jae
push
pop
inc
and
adc
mov
mov
and
or
loop
xlat
mov
push
test
sub
and
mov
in
xor
fwait
xchg
movsl
adc
sbbb
lahf
sbb
movsb
mov
push
mov
popf
in
mov
sbb
sbb
mov
cmpl
or
ds
xlat
shl
scas
cmpsl
ret
pop
fdivs
call
jae
mov
mov
cli
adcl
or
xchg
xor
mov
cmpsb
ja
jg
bound
shl
mov
mov
xchg
insl
stos
scas
pop
dec
mov
inc
aad
shrl
shlb
add
nop
js
mov
mov
mov
xchg
sbb
mov
mov
adc
aaa
lret
mov
mov
ja
and
fidivrs
cmp
xchg
cmp
dec
jnp
or
cmpsl
inc
pop
repz
mov
adc
imul
jp
add
adc
addr16
movsl
mov
call
sbb
fsubs
test
les
rcrb
mov
cmp
jecxz
and
ja
dec
mov
add
mov
cmp
jbe
mov
mov
and
rcrb
clc
mov
push
int
outsl
push
aam
notb
and
and
xchg
mov
scas
rolb
mov
mov
scas
mov
cmpb
gs
sbb
ljmp
int
mov
mov
jo
in
sbb
mov
push
fsubs
dec
mov
xchg
cmpsl
scas
jl
test
mov
test
mov
mov
xchg
mov
loop
lret
xorl
mov
xchg
adcl
popf
movsl
jbe
ret
mov
mov
js
cmp
bound
inc
outsl
mov
inc
sub
dec
sbb
mov
pop
repz
mov
inc
pop
push
jns
xor
jmp
scas
and
mov
mov
mov
loop
push
stos
push
inc
sub
das
out
mov
push
push
andnps
xor
adc
sub
aas
cwtl
dec
dec
ret
stos
fisttps
push
cltd
lods
cmpsl
icebp
test
popa
sub
mov
jns
xor
mov
scas
jge
mov
xchg
test
xchg
xorb
icebp
iret
jmp
push
movsl
loopne
pop
and
jb
sub
mov
adc
cltd
idivl
pushf
mov
loopne
cmpsl
mov
jns
mov
jb
dec
loopne
mov
gs
fst
xor
dec
xlat
loope
jge
mov
jecxz
lods
movsl
pop
xor
ror
mov
repnz
mov
arpl
mov
xlat
test
cmp
cmp
inc
jmp
cmp
rclb
or
int3
movsb
mov
push
imul
fiadds
dec
mov
sbb
mov
or
mov
push
fwait
sub
ret
shl
jmp
sbb
jl
xchg
mov
mov
sub
dec
mov
lcall
cwtl
jne
test
mov
xchg
sub
jl
ja
push
jno
adc
jnp
pushf
cmp
cmpsl
sti
or
mov
rolb
or
mov
mov
subb
xchg
int
call
adc
push
shrb
scas
push
mov
mov
and
call
fcmovb
insb
aas
mov
pusha
xchg
mov
hlt
in
sub
jbe
sar
xlat
push
rclb
sbb
fisttpl
sbb
loop
ret
lea
pop
mov
data16
cmpsl
dec
pop
insl
mov
pop
inc
push
js
mov
cmp
rcrb
sub
insl
daa
scas
data16
xor
xchg
cmp
arpl
push
mov
leave
icebp
jbe
js
mov
enter
shrl
jns
mov
pop
sbb
fs
xor
mov
xchg
std
mov
sti
fisttpll
sbb
add
xchg
je
mov
jne
pushf
sbb
and
jno
sbb
sbb
or
xchg
cmpsl
sarb
add
lret
jae
roll
mov
add
jmp
inc
stc
sbb
andl
mov
pop
pop
jg
jbe
dec
mov
or
pop
addr16
out
mov
cmpxchg
test
lds
lods
lods
sbb
xor
push
sti
test
mov
inc
sbb
mov
jecxz
and
adc
pusha
cmp
in
inc
pop
cmpsl
lds
hlt
fisubl
or
mov
sarl
int3
adc
repz
mov
ss
cmp
scas
or
pop
sahf
mov
dec
push
sub
fimull
mov
mov
mov
xor
pop
adc
cmp
jno
inc
cld
lret
ljmp
lock
pop
stos
int3
clc
xchg
cmp
aam
in
and
jl
shrb
pop
cmp
xchg
rcrl
cmc
cwtl
bound
movsl
jl
mov
mov
mov
push
test
stc
mov
pusha
das
cmpsl
repnz
stos
mov
jp
fdivl
clc
add
or
push
movsb
fwait
xor
push
int3
arpl
scas
push
jno
dec
in
divb
mov
leave
insb
into
push
js
push
sbb
jns
lahf
std
repz
mov
dec
mov
push
arpl
cmc
jecxz
mov
fildl
mov
std
cmp
cmpsb
sbb
imul
sarl
inc
dec
inc
sub
and
push
inc
int
fsts
sbb
popa
xchg
xor
cwtl
mov
lret
or
mov
xchg
leave
jg
or
mov
pop
dec
jbe
adc
ret
mov
mov
sbb
pop
aas
pushf
rcrb
fsubp
test
and
mov
in
pop
mov
imul
aas
mov
push
ret
mov
sub
xchg
adc
stc
adc
mov
cmp
aas
xor
sbb
cwtl
pop
rcrl
mov
movsl
push
cmpsb
loop
inc
ja
cmc
cmp
mov
jae
dec
inc
outsb
pop
pop
das
mov
pop
jg
std
cmp
pop
sbb
mov
push
push
loope
hlt
inc
jp
dec
loop
xor
mov
lret
mov
add
mov
xlat
jmp
push
aam
xor
dec
fsub
movaps
sub
out
jnp
jno
add
rorl
jnp
shll
into
aaa
lods
fnsave
mov
adc
push
mov
outsl
jecxz
xchg
mov
lea
movsl
xchg
mov
cmpl
jns
leave
iret
push
sub
imulb
sbb
adc
mov
fstpt
adc
mov
cltd
xor
mov
and
sbb
imul
dec
sbb
adc
adc
mov
subl
stos
jb
mov
inc
out
mov
mov
mov
mov
mov
scas
mov
popa
pop
mov
mov
cmpsl
movsl
pop
ds
popf
ret
aad
mov
enter
arpl
mov
icebp
mov
push
adc
mov
test
lahf
lods
stos
dec
sub
lret
sbb
and
add
loope
hlt
cmp
rcr
cld
xchg
adc
add
and
xchg
dec
addr16
mov
in
inc
adc
loopne
mov
inc
jo
bound
jns
mov
xchg
pop
mov
ss
jge
aas
test
cmp
fnstcw
aam
add
fcoml
jl
cmp
fcom
fidivs
out
mov
pusha
mov
sbb
cmp
int
fisttps
mov
and
out
mov
fldcw
cmp
mov
stos
mov
ret
dec
mov
scas
push
inc
mov
xchg
mov
stc
xor
mov
std
mov
andl
stos
or
xchg
mov
push
pop
mov
xchg
subl
mov
mov
cmc
icebp
arpl
jl
push
ret
pop
addr16
or
outsl
mov
std
seta
cmp
sub
fbstp
dec
stc
inc
cltd
add
jmp
jge
cltd
clc
aam
js
ret
and
fwait
sbb
call
repnz
jg
lods
mov
shrl
fisubrs
adc
scas
inc
lahf
cwtl
and
or
imul
repnz
xchg
mov
adc
mov
sbb
mov
test
popa
lods
or
mov
inc
mov
and
clc
loopne
shlb
das
push
imul
mov
pop
xchg
cmp
or
pop
outsb
movb
cmpsl
fwait
mov
nop
dec
push
shrl
mov
adc
mov
mov
mov
pop
ret
xor
adc
push
sub
andb
add
fld
adc
outsb
mov
mov
repnz
mov
insb
mov
fadds
pop
adc
roll
mov
movsb
inc
sub
sbb
and
lcall
mov
xchg
out
pusha
mov
enter
int
aad
jnp
jb
adc
negb
jne
scas
jns
lcall
mov
mov
cmp
pop
imul
aad
xrelease
arpl
pop
sbb
in
mov
push
notl
pop
xlat
iret
leave
cli
icebp
sbb
jl
mov
enter
or
ret
sbb
call
push
clc
sahf
dec
divb
mov
lret
sbb
add
mov
push
sub
cmpsb
push
mov
pusha
in
add
shll
sub
xlat
pushf
nop
jle
xchg
and
shr
lds
jp
ljmp
lret
dec
cmp
ret
popf
xchg
mov
inc
movsb
push
fcmovne
mov
add
movsl
xchg
xor
call
sbb
ds
xor
jle
jl
test
xlat
pop
jbe
shrb
movsl
cmp
mov
mov
inc
lods
pop
fcomp
testl
into
test
mov
lock
je
sbb
and
mov
adc
xchg
or
movsl
mov
iret
aad
mov
mov
mov
add
mov
xor
int
mov
xlat
mov
lcall
jmp
enter
mov
nop
mov
xor
mov
shl
cmp
aad
mov
sbb
pop
jg
ja
popa
sub
clc
mov
push
enter
rcrl
in
mov
jnp
sub
loopne
imul
push
call
pusha
bound
pop
dec
jns
xlat
and
pop
xor
add
icebp
xchg
jo
push
cltd
out
in
pop
stos
roll
mov
push
mov
mov
mov
in
divl
lcall
xchg
mov
add
pop
xor
xchg
mov
pop
and
sbb
adc
das
mov
rorb
xchg
scas
mov
xchg
pusha
in
lods
outsb
jno
push
mov
add
mov
and
aas
lcall
sbb
pusha
mov
imul
mov
mov
pop
sub
cmp
jno
push
pop
mov
mov
or
cltd
or
sarl
fldl
push
inc
pushf
mov
jp
dec
sar
jae
adc
push
loop
stos
ret
adc
cld
sub
mov
push
jg
shl
shlb
jmp
insb
enter
mov
lods
nop
mov
test
push
cmpb
mov
jmp
xor
into
dec
jno
pop
data16
and
bound
test
ja
xchg
fs
lods
add
das
in
inc
mov
test
cmpsb
cmpl
mov
lock
mov
pop
pop
out
mov
pop
loop
jae
jno
push
hlt
stos
xlat
jg
scas
xor
fidivrs
sbb
cmp
mov
enter
add
test
mov
and
out
aas
inc
sbb
xchg
faddl
mov
les
adc
fcoms
loopne
lea
sub
loopne
inc
jo
cmp
xlat
negl
mov
ja
xor
icebp
divb
enter
or
cwtl
mov
test
jb
fmuls
inc
pop
cmpl
movsl
loop
push
mov
roll
cmp
in
xchg
add
movsb
lds
inc
mov
mov
xor
lea
cmp
and
inc
out
xchg
out
jno
aam
scas
ja
lcall
push
mov
dec
mov
aam
add
fcomp
add
push
mov
fisubrl
xor
cmp
cmpsl
cmp
push
negl
lods
mov
aam
es
mov
leave
es
jne
pop
mov
or
mov
jle
jae,pn
stos
pop
lds
arpl
jmp
rolb
adc
hlt
dec
jb
lods
fnstsw
neg
cmpsl
pop
cli
int
shlb
inc
in
jns
push
jo
mov
jp
das
ds
mov
in
lds
or
test
negl
sbb
rolb
mov
xchg
test
cs
dec
in
cmp
push
loop
in
and
gs
and
cmpsl
std
cmp
fisttpl
adc
rcrl
mov
call
jmp
cld
xchg
xchg
cli
fmull
test
lods
dec
popa
xchg
addr16
sub
daa
insl
xor
jge
dec
nop
sbb
movsb
xchg
js
cltd
or
lcall
mov
ljmp
cmpsb
ja
inc
mov
push
and
xchg
decl
xchg
jecxz
xchg
dec
loope
mov
adc
into
mov
fadd
in
negl
rorl
leave
int
ss
sub
in
iret
mov
jbe
ret
mov
mov
jnp
mov
mov
jp
fnstenv
adc
cmp
cmpsl
out
cwtl
cmpsb
pop
pushf
mov
int3
mov
mov
imulb
int3
cmp
lcall
in
jae
add
inc
cmp
fcoml
subb
xor
adc
fsubrs
sbb
and
movsb
std
jmp
sti
xor
sub
icebp
adc
je
in
adc
aam
outsb
jg
and
in
and
sub
popf
sub
lcall
jns
and
fistpl
mov
mov
cltd
movsb
mov
movsl
cmp
sbb
fsubl
fcomps
out
movsl
dec
cmp
and
jne
js
sahf
lods
mov
inc
inc
mov
jns
imul
push
sahf
notl
adc
add
mov
push
data16
fstps
mov
popf
hlt
cwtl
pusha
rorb
clc
lret
xchg
mov
test
adc
mov
add
les
test
addr16
jbe
in
xchg
in
mov
jmp
les
push
fsub
inc
mov
clc
and
ds
sub
mov
cmp
sbb
ret
shlb
mov
movsb
insl
fcom
repz
sub
cmpsl
push
and
and
pushf
or
mov
out
insl
clc
dec
and
pop
cli
test
adc
fisttps
fnstenv
jbe
adc
sbb
daa
cmp
push
lcall
adc
stc
xlat
push
mov
jbe
cmp
mov
enter
in
popa
test
jo
lods
stc
roll
ret
sbb
jecxz
push
loope
dec
jbe
add
or
sar
out
movsl
add
cmpsl
push
aam
scas
stos
iret
fnstsw
cmp
mov
mov
inc
mov
ds
call
cli
adc
leave
xchg
mov
lret
cmpsl
or
daa
xchg
mov
add
xlat
mov
std
sahf
movsl
fs
mov
push
ja
data16
iret
mov
mov
loop
mov
pop
pop
mov
fs
mov
inc
push
mov
movsl
dec
mov
outsl
adc
hlt
push
sub
pop
cs
js
repz
in
movzwl
in
out
jl
repnz
jae
add
pop
xchg
mov
test
adc
adc
cmp
mov
inc
mov
add
fucomi
sbb
or
cmp
xchg
imul
adc
adc
ss
jecxz
mov
xlat
sysenter
jmp
xor
jge
and
subl
idiv
xor
loop
cmpsl
xchg
or
aad
std
and
popf
sbb
fiadds
mov
cmpsb
mov
pop
cli
and
icebp
fmul
push
xchg
insl
xor
out
sti
jmp
jmp
push
popf
jge
mov
jle
xchg
mov
add
call
inc
jnp
imul
mov
test
test
je
out
cwtl
icebp
dec
stos
push
mov
lock
int
push
mov
adc
sti
dec
cmp
stos
mov
xor
stc
sub
mov
mov
sub
dec
call
xchg
jno
xlat
fsub
ret
push
xor
cmp
push
out
mov
imul
in
and
ss
and
rolb
sahf
push
fs
dec
sahf
mov
call
inc
shl
mov
mov
bound
sbb
lock
cmpsl
pop
dec
cwtl
mov
sub
pushf
jecxz
xchg
fsubs
xchg
inc
jle
aaa
inc
mov
insb
leave
sarl
addr16
nop
mov
add
cmc
push
insl
sub
jne
mov
sub
dec
imul
mov
inc
xorl
cmp
in
cmpsl
pop
xlat
add
cwtl
cs
lea
ret
not
mov
les
fnstcw
mov
fmull
subl
subb
mov
mov
into
mov
pusha
mov
pop
aaa
sbb
inc
adcl
in
sub
inc
or
stc
test
aaa
pop
mov
cmp
aam
lods
adc
add
mov
mov
test
leave
in
mov
into
out
dec
jbe
fnstsw
push
std
pop
in
cmp
mov
bound
jbe
pop
cltd
mov
sbb
sbb
mov
xlat
sarl
jmp
adc
lret
jbe
fildll
and
mov
add
shrb
pop
mov
cmp
loopne
sbb
data16
pop
es
xchg
enter
mov
ja
push
and
inc
popa
aam
lds
mov
xchg
int
mov
inc
and
cmpsl
or
das
jl
xlat
and
les
scas
or
leave
sbb
sub
movsb
or
jae
mov
or
dec
mov
cmpsb
cltd
aam
inc
sarl
movsl
add
ret
pusha
pushw
bnd
mov
pop
sub
jo
jae
jne
pusha
mov
jl
sbbb
adc
mov
xchg
jmp
scas
enter
xchg
xlat
cltd
iret
and
aam
lock
ss
cmp
cmpsl
aaa
fcomps
sbbl
inc
jnp
mov
mov
cmpsb
aad
nop
pop
or
mov
xchg
cmp
or
jns
xchg
idivb
out
mov
jnp
mov
pop
lods
xchg
movsb
xor
orb
fidivrs
adc
loope
jg
scas
negl
jne
cmpsl
mov
or
in
sbb
xor
shlb
sub
inc
mov
push
cmp
shrb
mov
fldcw
sbb
mov
scas
arpl
sub
push
xor
mov
stc
std
xlat
cmp
leave
pop
in
mov
and
scas
bound
mov
xchg
cltd
xor
xchg
nop
js
lods
xlat
cmp
dec
lea
jmp
bound
out
and
popa
lods
cmp
sbb
and
jecxz,pn
lret
jge
cmc
ffreep
add
sub
cmp
in
dec
sub
out
pusha
dec
or
inc
and
les
fbstp
sub
inc
push
mov
sub
cwtl
mov
sub
sub
jno
xlat
mov
cli
aam
mov
cmpsb
icebp
mov
add
pop
sub
xor
aam
leave
cmpsl
daa
lods
loop
dec
add
inc
in
dec
mov
mov
call
dec
add
jmp
es
pop
adc
pusha
sbbb
out
inc
xchg
pop
sub
aas
cmp
popa
and
lcall
xchg
jns
cwtl
pop
cmp
add
sbb
rolb
cmpsb
js
lret
cmp
mov
xlat
or
stos
scas
push
test
sub
pop
adc
shrl
inc
sub
das
xor
cmp
mov
stc
push
mov
out
lret
into
andl
mov
sbb
pop
lods
jbe
ljmp
lods
cmpsl
loop
mov
mov
imul
xchg
scas
hlt
jmp
inc
in
push
pop
mov
loopne
fldl
mov
mov
push
mov
xchg
sub
and
aas
scas
xorl
das
fildll
popf
add
ret
sub
xchg
aas
cltd
jl
sbb
iret
lahf
jge
xchg
mov
fdivs
jmp
xchg
inc
mulb
loope
and
mov
xchg
out
subl
dec
or
jecxz
rclb
fwait
push
cmpsl
or
int
out
frstor
scas
mov
popf
push
sti
movsb
lret
sub
xchg
lcall
cwtl
scas
ss
dec
inc
out
push
aad
popa
sub
mov
xor
inc
iret
cmp
jne
jb
pop
movsb
imul
or
shll
and
push
add
sub
push
mov
mov
mov
in
call
push
push
and
stos
mov
jecxz
fistps
adc
enter
xor
test
xchg
mov
mov
lock
mov
fwait
mov
jo
push
lcall
shll
dec
jae
repz
in
inc
arpl
mov
push
add
fsts
xchg
jge
mov
bswap
pop
out
xlat
dec
sub
orb
xor
push
jae
popl
mov
fidivrs
dec
adc
inc
push
pop
aam
cltd
lds
inc
aad
outsb
pop
hlt
push
in
dec
lock
jns
sub
shlb
or
test
mov
adc
insl
cltd
mov
add
lock
xor
jbe
mov
scas
mov
xor
mov
xlat
xlat
test
cwtl
fs
sbb
cli
andb
repnz
xchg
std
or
sbb
mov
mov
xchg
sub
dec
xor
lea
into
imul
fdivs
cmpsl
pop
cli
inc
loop
int3
jnp
mov
mov
out
and
xchg
test
mov
sti
out
pop
clc
shrb
xchg
jmp
stos
out
scas
gs
push
stc
pop
sti
mov
dec
xor
int
adc
fsubl
cmpsl
mov
lcall
cmp
movsb
or
test
lret
jne
mov
pop
popa
repz
addr16
sub
sbb
daa
mov
test
and
xor
or
fcmovne
jns
mov
movsl
mov
movsb
cmp
loopne
ds
cli
aam
or
xchg
add
push
hlt
fs
and
int
jl
add
test
std
in
int3
and
sar
adcb
pushf
jae
add
push
mov
dec
dec
pop
mov
rcll
out
sbb
fimuls
test
mov
lahf
xor
ja
cmpsb
std
jmp
mov
or
and
cmpsl
pop
sub
inc
pop
mov
mov
or
or
testb
cmpsl
mov
or
je
jg
movsl
mov
or
pop
std
fcomp
jo
add
mov
mov
stos
je
fsubl
adc
stos
in
stc
pop
inc
mov
inc
sub
dec
push
pop
mov
or
incb
jno
push
xor
jecxz
ds
mov
or
lret
mov
call
insb
jnp
fmulp
filds
lahf
in
lcall
and
mov
aam
leave
dec
sub
mov
aam
mov
out
dec
push
sub
push
pop
mov
xchg
jl
data16
xor
pushf
into
lret
cmp
aam
addb
orb
sub
insl
movsb
jmp
mov
mull
nop
and
jne
push
cmp
cmp
xor
dec
sub
mov
aas
addr16
inc
test
or
ret
rcr
sbb
mov
fbld
test
lds
mov
icebp
sbb
sbb
popa
cmp
mov
push
push
scas
xchg
sbb
test
dec
outsb
xchg
mov
add
jmp
adc
push
enter
bound
aam
xor
cmc
ss
hlt
dec
rcl
mov
arpl
mov
fdivr
shl
inc
bnd
mov
insb
jnp
mov
divl
imul
dec
jno
mov
or
hlt
nop
mov
push
movsb
test
adc
pop
gs
movsl
test
lock
mov
popf
push
jnp
data16
arpl
les
stc
mov
push
out
adc
jge
sbb
cwtl
jns
repnz
test
inc
pusha
mov
cmc
lds
jp
sti
xchg
pop
mov
mov
lock
es
fildll
mov
jno,pt
rclb
push
xchg
xor
loop
add
loopne
and
xchg
fsubs
pop
mov
dec
jge
mov
mov
jns
sbb
and
sbb
imul
jae
out
movsl
jno
or
js
jbe
xlat
enter
xchg
sub
rol
mov
repnz
and
dec
mov
mov
jbe
stc
push
adc
roll
insb
cmp
mov
add
jmp
mov
push
cmpsl
push
mov
rorl
mov
sub
cmpb
cmp
ds
pop
pop
cmp
sub
in
icebp
les
mov
out
mov
lods
aam
add
sub
and
adc
outsl
std
lahf
xlat
iret
add
mov
cmp
push
jnp
hlt
shrb
ljmp
mov
cmp
jnp
dec
mov
mov
push
mov
jp
fmull
outsb
loope
cld
adc
sbb
or
cmovo
cmp
out
adc
dec
in
test
sahf
push
ret
or
push
push
mov
jo
pop
or
sub
dec
data16
lcall
xchg
xchg
pop
xchg
adcl
lods
mov
hlt
or
leave
sahf
mov
mov
clc
xchg
aam
sub
loopne
pop
pop
inc
les
cmc
loop
add
lods
icebp
adc
stos
mov
mov
dec
test
xchg
subl
xchg
loopne
mov
pop
cmp
and
data16
push
loop
inc
and
fs
add
call
sub
arpl
mov
push
mov
lds
aas
fdivrs
outsb
daa
out
es
scas
and
pop
mov
or
mov
scas
out
pop
mov
mov
push
mov
pop
mov
cmp
fistpll
mov
ljmp
test
mov
aaa
inc
dec
or
push
into
pop
stos
loope
loopne
negl
insb
lods
ret
ljmp
aaa
sbb
cwtl
mov
sub
xor
or
lea
cltd
and
lds
push
dec
mov
sub
cmpsb
mov
xchg
mov
mov
cmp
cmp
lock
mov
mov
sbb
loop
jnp
push
cmp
ret
or
add
jb
test
fdivrs
xor
mov
call
andl
in
test
aaa
mov
sub
xchg
sub
cmp
pop
adc
lahf
enter
xchg
aam
ja
sbb
shll
int3
jne
stc
mov
rcrl
mov
movsl
dec
fs
outsl
mov
aam
sbbb
push
mov
inc
add
cmp
mov
repz
dec
mov
mov
dec
in
add
ror
fnsave
xchg
jb
add
sub
dec
xchg
mov
pop
sub
cmp
cmpsl
dec
ds
inc
mov
lahf
movsb
mov
cmp
push
mov
mov
sub
movsb
subl
mov
fcomps
icebp
lds
hlt
cltd
divl
pushf
nop
sbb
fisubl
pop
test
fstps
scas
bound
sbb
shll
sahf
mov
aas
push
mov
sub
fldl
inc
mov
and
arpl
sub
adc
mov
push
out
jae
jl
mov
dec
fsubrl
pusha
imul
mov
push
mov
mov
cmpsl
lods
out
pop
mov
fisubrs
negl
pop
daa
stos
sub
fildll
pop
inc
cli
dec
imul
lret
push
cmc
xlat
pop
outsl
push
cmp
call
push
mov
jp
out
dec
mov
aad
test
es
pop
stc
xchg
adc
ret
mov
push
push
js
cltd
and
adc
test
mov
adc
and
mov
lods
xor
mov
push
sub
sbb
cmpsl
adc
lea
add
fmulp
icebp
sbb
add
fnstcw
fbstp
aam
jbe
xor
aam
xchg
cmpsb
out
out
mov
popa
add
inc
add
push
pop
or
test
movsl
scas
addl
xor
fsubs
gs
cwtl
mov
mov
adc
ja
repz
stos
stc
ljmp
in
xlat
adc
push
mov
mov
stos
sbb
adc
add
int3
fsubrs
or
in
cwtl
push
adc
mov
bound
insb
and
fnstenv
mov
es
sbb
mov
jo
in
fisubs
sub
and
daa
out
adc
filds
outsb
or
lods
jge
lcall
aam
lcall
xchg
hlt
pop
dec
addr16
mov
pop
jb
xchg
sbb
push
enter
fnstenv
sub
push
aaa
mov
mov
in
adc
inc
and
cmpsl
mov
popf
inc
negl
push
add
inc
mov
daa
mov
jge
scas
mov
inc
ljmp
aad
out
fsubrl
add
cmc
or
xor
jae
mov
add
dec
scas
jae
inc
orb
cmp
and
or
cmp
test
and
xchg
ret
loopne
add
loope
insl
mov
sub
stos
jp
clc
adc
cmp
into
jnp
mov
testl
mov
cmp
mov
ret
les
cwtl
xlat
push
sbb
cli
adc
lods
jbe
jg
movsb
pop
imul
jne
dec
fs
in
mov
fld
int3
rol
mov
roll
mov
mov
mov
jbe
adc
scas
cmpsl
inc
mov
xor
in
daa
cmc
ss
aaa
rcrl
lods
sbb
stos
xchg
mov
xor
fstl
cli
fimull
aad
fsubr
push
inc
jg
das
add
mov
arpl
xorl
mov
cwtl
xor
mov
pop
mov
adc
cltd
fadd
rcrb
sub
xor
cmp
ret
sub
es
jo
inc
jmp
lds
aaa
bound
daa
movzwl
jne
pop
ss
and
ret
iret
int
mov
push
in
lds
mov
outsl
mov
and
pop
jg
out
pop
adc
enter
fsubrs
cmpsl
lahf
sbb
xlat
movsb
sub
xor
icebp
mov
jg
fisttpl
inc
jge
mov
aaa
lods
pop
push
pop
xor
mov
mov
cmp
jns
ret
hlt
mov
in
rcll
call
push
ds
popa
inc
and
test
xor
pop
pop
mov
adc
mov
ja
sbb
inc
lods
lret
add
mov
lea
dec
jns
andl
pop
ret
mov
sub
mov
jbe
aas
xchg
mov
xor
xchg
and
xor
mov
movsl
xchg
ret
je
jno
scas
or
clc
aam
push
xor
xor
shlb
mov
popf
and
pop
xor
mov
dec
movsl
stc
dec
inc
les
mov
scas
xchg
cwtl
out
rclb
and
mov
xlat
mov
jp
and
adc
lret
mov
push
shr
pop
inc
add
mov
ja
nop
mov
adc
xchg
xchg
test
movsl
sub
pop
fwait
in
dec
clc
scas
fs
xor
sub
or
lret
mov
xorb
adc
or
pop
pop
xchg
hlt
fnstenv
sbbb
lcall
insl
mov
or
cld
aam
sub
xchg
mov
and
out
cwtl
ret
lret
stos
dec
int
incb
jl
ror
sbb
scas
jbe
aam
xor
in
fmul
lea
lods
ds
daa
into
jg
push
jmp
add
or
and
mov
cmc
mov
stc
xlat
jp
in
mov
sub
outsb
or
inc
in
out
sub
and
mov
outsb
adcl
imul
sti
dec
inc
add
mov
gs
push
andl
stos
inc
gs
lahf
push
pop
aas
or
rcrl
mov
subb
dec
jbe
inc
rorl
push
std
sbb
lret
dec
rcl
pop
insb
sbb
xchg
fnsave
and
inc
push
jp
mov
push
mov
pushf
mov
mov
sbb
jbe
sbb
es
inc
add
outsl
lock
sbbl
cwtl
mov
outsb
cs
ds
mov
loope
fimull
pop
xchg
pop
js
xchg
mov
xor
cmpsl
mov
inc
stos
aas
ss
in
dec
sub
jnp
dec
jbe
add
or
hlt
or
movsl
aam
test
in
xor
mov
int3
mov
data16
fnstenv
sti
shr
inc
and
mov
imul
mov
stc
aam
sbb
mov
mov
pop
bnd
iret
sbb
mov
fbstp
mov
insl
xor
xchg
push
sub
and
cld
jle
sahf
push
loope
inc
cmpsl
mov
and
insb
cmpsb
cmp
xchg
aam
clc
les
sub
mov
dec
adc
movsl
jle
jb
mull
aam
movsl
clc
bswap
sub
js
movsb
mov
popf
es
addb
mov
mov
out
or
out
mov
mov
loop
add
aad
jg
fistpll
push
pop
xorb
mov
dec
or
out
cmp
mov
sarb
or
popf
mov
cmc
xor
xor
push
aaa
mov
call
sbb
mov
mov
mov
and
mov
and
mov
mov
add
mov
stos
lahf
cmp
movsl
and
xlat
mov
les
sbb
sub
fcom
push
xor
lret
jns
aaa
cwtl
sub
jge
xlat
testl
mov
and
lahf
jp
outsb
pop
call
mov
and
xlat
mov
cmpsl
scas
cmpb
sets
jae
clc
sbb
add
pop
mov
mov
pop
jl
inc
push
or
lahf
mov
mov
test
pop
adc
ss
dec
xor
jp
hlt
pop
movsb
aas
pop
cmp
outsl
scas
dec
test
jae
jecxz
pop
jne
pop
cmp
lret
addr16
insl
xlat
jae
js
or
call
roll
jae
xlat
mov
js
mov
sbb
cmpsb
jno
cmp
int3
loop
stc
loopne
loopne
and
call
inc
in
xchg
dec
jae
aad
mov
xor
loope
xchg
sti
xchg
subb
dec
ljmp
dec
mov
xchg
out
cmp
sarl
jb
loopne
dec
ret
inc
bound
scas
jns
das
movsl
inc
mov
cs
test
mov
fimuls
icebp
cmp
mov
add
mov
je
xor
xchg
ljmp
or
xor
ret
rcrl
mov
pop
push
cwtl
xchg
and
xchg
out
aaa
cmp
or
inc
jle
sbb
push
int
addr16
xor
cli
xchg
adc
iret
dec
into
mov
jp
call
mov
cltd
mov
add
push
jns
cmp
shll
aad
aam
sub
call
dec
arpl
xchg
jno,pn
cmpb
ss
aam
sarb
dec
notl
add
jbe
in
cmpsl
aaa
pop
stc
cmpsb
test
jns
mov
push
sbb
pop
andl
add
sbbb
shlb
pop
sub
adcl
fsubrl
lcall
jne
xlat
movsb
xor
fstpt
mov
dec
mov
inc
mov
mov
xor
jl
fnsave
mov
aad
scas
push
divl
mov
xor
cmpsl
shlb
popa
cmp
and
and
sub
scas
dec
pop
xlat
sahf
inc
aaa
mov
or
scas
out
fnsave
mov
nop
xchg
xchg
stc
jo
or
ja
daa
cwtl
xchg
adc
inc
mov
or
pushf
jbe
mov
das
xor
sub
adc
add
push
popa
fistpll
pop
lcall
imul
mov
out
inc
push
push
test
pop
inc
fs
divl
sbb
xor
jp
movsb
test
enter
mov
xor
push
cmp
insb
outsl
or
mov
stc
mov
xor
les
xchg
scas
out
test
sub
bound
xor
sbbl
cmpsl
sub
std
imul
pop
mov
jmp
addb
fcoms
mov
arpl
push
mov
cld
cmp
cmc
divl
or
mov
pop
or
ret
std
add
adc
cmp
fcmovnb
scas
sub
inc
mov
je
mov
xor
jg
pop
and
sub
xlat
inc
out
inc
call
push
xchg
out
lods
mov
xchg
fcomps
xchg
xchg
or
mov
push
sub
je
add
push
xchg
cwtl
add
xor
mov
mull
inc
jbe
push
push
xorl
and
loopne
mov
pusha
and
xchg
push
iret
dec
mov
cwtl
subb
mov
rorl
sbb
dec
mov
loope
push
movsb
add
rol
push
movsl
cmp
xchg
ja
xor
inc
adc
loope
mov
into
xchg
pop
xchg
das
sbb
hlt
arpl
adc
sbb
lahf
mov
mov
mov
add
imul
icebp
movsl
push
lock
in
push
xor
mov
mov
push
mov
aas
clc
inc
lds
lret
xchg
mov
or
mov
pop
mov
out
iret
popf
insl
push
lds
fs
movsb
push
arpl
or
jp
push
sbb
mov
shrl
push
or
jge
inc
iret
aas
popf
std
cmp
outsl
clc
js
xlat
or
sahf
add
lods
sbb
pop
mov
int
mov
outsl
cmpsl
xchg
ss
call
sub
adc
jl
lahf
loope
jns
loop
pop
mov
mov
pusha
nop
fcoms
and
into
mov
pushw
sub
xchg
mov
es
out
push
in
adc
and
stc
jg
pushf
mov
insl
sbb
sub
mov
jno
or
dec
hlt
jp
push
mov
into
or
pop
pop
xchg
mov
sub
cmp
mov
pusha
jo
xor
shlb
mov
mov
mov
shlb
mov
sub
mov
push
in
loop
add
insb
dec
notb
mov
out
adc
cltd
imul
xchg
mov
scas
rcrb
jo
fimuls
ret
xor
nop
jns
adc
sub
les
mov
mov
pop
cmp
test
arpl
out
sub
imull
in
cld
adc
xchg
sbb
addb
lcall
in
scas
sbb
cmp
in
xlat
dec
and
xchg
es
outsb
add
sub
mov
jmp
push
mov
loope
fidivrs
push
sbb
mov
add
into
aad
leave
jo
outsl
shlb
ds
cltd
or
inc
negl
jbe
mov
dec
out
add
daa
mov
mov
outsb
rol
sub
ds
mov
aas
out
in
pop
shrl
mov
data16
pop
jg
enter
dec
mov
mov
cltd
pop
pop
jp
mov
int3
in
fdivs
cli
test
ret
fstpl
sbb
and
pop
mov
dec
jae
mov
cmp
add
jne
sbb
add
inc
insb
mov
jge
loop
out
mov
xchg
pop
pushf
sbb
mov
loope
aaa
popa
jmp
arpl
push
add
cltd
push
subb
in
outsb
jae
mov
xchg
adc
push
xlat
stos
dec
mov
xor
or
iret
std
mov
mov
and
xchg
mov
insb
adc
mov
mov
addl
sub
xchg
in
pop
sti
scas
std
nop
aaa
mov
insl
dec
add
stos
sub
mov
or
jne
pop
clc
loop
jmp
adc
xor
sbb
pop
jp
test
mov
add
jnp
jae
dec
mov
add
push
jl
in
aam
add
mov
test
call
test
pop
ljmp
in
rorb
lds
inc
jg
inc
cmpsl
outsl
adc
jns
xor
or
mov
mov
stos
and
jnp
mov
cmp
mov
pop
daa
icebp
add
cmp
sub
gs
ja
jae
add
mov
mov
out
mov
pop
and
cmp
test
das
dec
inc
lea
and
pop
pop
imul
add
pop
in
leave
call
sub
sbb
jae
cmp
xchg
jno
push
ss
scas
sarl
repnz
or
addr16
movsl
pusha
cmpsl
and
push
scas
cmp
push
xchg
mov
cmpsl
enter
movsl
xlat
xchg
jae
arpl
mov
fwait
mov
iret
ret
sbb
sbb
xchg
movsl
dec
stc
push
inc
xchg
mov
gs
xor
sbb
sub
into
mov
shlb
jnp
add
rolb
bound
inc
cmpsl
lret
not
stos
add
mov
lock
mov
jns
leave
cmp
cwtl
test
cmpsl
lahf
leave
dec
dec
cwtl
mov
adc
mov
cwtl
mov
movsl
mov
xchg
movsl
sbb
mov
test
addr16
mov
jecxz
cmp
mov
mov
xchg
jns
dec
lret
xlat
mov
in
sub
inc
sbb
dec
mov
movsl
jmp
push
mov
rolb
pop
loope
test
imul
mov
mov
dec
or
or
outsb
addr16
sub
lds
test
xchg
mov
bound
dec
mov
gs
mov
cmpsl
cltd
xchg
mov
and
mov
xchg
and
test
xor
jecxz
mov
mov
stos
push
and
add
leave
loop
sub
xor
xor
outsl
mov
mov
xor
xchg
cwtl
test
mov
mov
and
pop
nop
mov
xor
mov
bound
mov
mov
rcl
movsl
mov
xor
mov
cmp
test
lods
movsb
xlat
mov
pop
jbe
loope
mov
inc
pop
mov
and
mov
fwait
mov
and
push
or
add
fcmovne
push
add
stos
mov
aas
cltd
adc
mov
mov
ret
mov
andb
adc
test
inc
cmpsl
leave
adc
and
mov
mov
cmp
enter
aam
mov
int
cld
movsl
mov
jno
xchg
lds
push
arpl
stos
pusha
add
scas
sub
jg
daa
test
mov
inc
orl
cltd
xchg
jne
cwtl
shll
or
dec
arpl
xchg
fs
adc
cmpsl
jae
sbb
or
scas
push
lds
test
shrl
mov
scas
shl
jb
lret
imul
xlat
dec
clc
mov
jg
shlb
mov
mov
mov
mov
sub
jbe
push
mov
daa
clc
pop
sti
test
sbb
mov
cwtl
daa
jne
jp
adc
fsts
notb
aas
jp
outsl
sbb
data16
jg
mov
shl
call
mov
mov
xor
adc
dec
add
stos
sub
mov
mov
jl
jmp
aaa
adc
fwait
sbb
daa
push
cld
sub
dec
push
mov
push
xor
push
shll
cwtl
push
mov
icebp
xor
loope
jo
jns
cmp
mov
repnz
and
push
inc
push
jg
negb
or
lods
fdivl
mov
jecxz
stos
fistpll
rcll
cmpsl
dec
jb
adc
jb
gs
test
movsl
mov
lods
neg
lcall
mov
push
xchg
mov
cwtl
rcr
adc
test
mov
scas
mov
sub
xchg
imul
iret
fbstp
cmp
mov
mov
cmp
addr16
jle
mov
scas
in
lahf
dec
xchg
mov
adc
xor
lods
cltd
mov
outsl
sarb
mov
rorl
imul
ss
mov
pop
inc
and
sarb
sbb
adc
pop
push
mov
mov
or
mov
lcall
jmp
test
outsl
es
sub
mov
movsl
push
mov
fidivrs
scas
inc
mov
sbb
mov
pop
data16
or
enter
arpl
test
fidivs
arpl
fstpl
js
lcall
clc
sbb
arpl
cmpsl
push
mov
lods
pusha
stos
xchg
ja
cwtl
or
add
add
mov
jg
xchg
pop
mov
ja
dec
lea
mov
sbb
jnp
orb
shlb
sbb
mov
xor
int
lods
mov
mov
pop
pop
mov
cmpb
add
mov
leave
jae
mov
xchg
lods
dec
cmpb
orl
lock
gs
aam
inc
movsb
aas
jno
jnp
iret
mov
mov
test
rolb
hlt
jecxz
cli
mov
rcll
mov
jg
lcall
xlat
adc
ljmp
cmpsb
and
add
add
es
pop
lahf
and
xlat
xchg
sti
pop
pop
mov
pop
arpl
scas
stc
pop
mov
jb
pusha
repz
loope
add
mov
jbe
cmp
stos
xchg
or
fs
iret
in
push
push
cld
mov
test
jge
dec
pop
lds
lods
dec
push
push
sbb
icebp
fdivl
movsl
or
push
xchg
cwtl
xchg
sahf
jb
shrl
cmp
cmp
aaa
mov
xlat
add
ss
pop
add
cltd
shrb
cmpsl
cmp
xor
cwtl
movsl
mov
stos
push
adc
stc
pusha
out
rcll
scas
lods
push
addr16
rclb
sbb
divl
mov
lahf
ret
movsl
aam
cmp
or
shr
mov
add
add
xor
inc
stos
add
mov
outsl
and
fcomps
cli
arpl
sahf
xchg
daa
fwait
cwtl
mov
mov
ljmp
scas
add
sbb
adc
dec
or
loope
lods
inc
mov
sbb
xchg
imul
mov
aas
xlat
lds
xchg
cmp
je
cmp
fs
and
inc
mov
and
xchg
jnp
repnz
mov
gs
cwtl
sbb
fwait
inc
les
daa
xchg
jns
cmp
notb
cli
push
mov
test
and
pushf
hlt
mov
sbb
sub
mov
popf
xlat
jno
inc
jp
cmpsl
sbb
mov
enter
lahf
test
loope
adc
push
daa
pop
inc
gs
or
jns
add
mov
cld
adc
and
cli
sahf
pop
aas
movsl
inc
sbb
cmp
stos
sub
out
xor
out
mov
jae
mov
mov
mov
xchg
dec
pop
ljmp
call
mov
sub
mov
cs
outsl
dec
add
xlat
inc
loop
fdivrs
or
jnp
xor
jle
pop
mov
cmpsb
xchg
js
out
and
loop
jno
jecxz
mov
mov
pop
in
jae
sbb
xchg
mov
flds
daa
mov
ret
xchg
ja
es
add
pop
movsl
std
lock
mov
and
mov
cmc
rolb
pop
lods
aas
lcall
inc
mov
and
insb
cli
push
cwtl
jg
repnz
mov
mov
out
stos
iret
sbb
loope
xor
jne
mov
push
scas
sub
cld
add
adc
xor
stc
aad
xor
cmp
jbe
mov
cmp
imul
jecxz
cmpsl
stos
push
xorl
lahf
jl
mov
mov
cmpsl
cmp
cltd
push
xchg
add
rsm
lods
daa
cli
mov
xchg
jae
fdivrs
loop
xchg
push
mov
pushf
push
mov
pop
mov
dec
xor
scas
mov
hlt
mov
sub
jnp
add
lods
test
mov
lods
mov
int3
cmpsl
aaa
mov
push
jnp
test
mov
fsubrs
divb
push
mov
jbe
imulb
sbb
shlb
mov
repnz
sti
jae
mov
insl
add
mov
cmc
icebp
fnstenv
inc
cmpsb
mov
shr
mov
fdivrs
sub
xchg
dec
mov
cmp
cmp
repnz
mov
mov
inc
push
add
gs
xor
inc
and
leave
mov
cwtl
jge
test
and
xlat
mov
test
dec
ja
add
jae
repnz
ja
sar
push
nop
sub
jg
lcall
fndisi(8087
mov
outsl
cmp
jns
cli
cs
jno
mov
sub
and
lahf
xchg
push
xlat
mov
lods
scas
mov
mov
sbb
enter
sbb
dec
cwtl
popf
leave
inc
mov
stos
lcall
adc
scas
xchg
ljmp
lods
and
enter
dec
ljmp
and
push
arpl
jnp
lea
inc
cwtl
lret
aam
jnp
sub
fwait
and
mov
orb
cmp
cld
cwtl
sub
sbb
or
dec
jp
add
arpl
inc
jne
dec
pop
cld
fidivl
add
fisttps
mov
icebp
mov
dec
lea
pop
dec
pop
mov
inc
mov
adc
xchg
pop
sbb
or
or
mov
inc
mov
in
cmc
mov
or
mov
jno
xorl
arpl
cmpsl
into
fidivrs
jg
test
popa
xor
mov
sub
loop
mov
insl
xchg
pop
xlat
inc
mov
jb
mov
push
lcall
cmp
cld
mov
ss
cmp
sahf
cwtl
mov
mov
mov
pop
das
mov
mov
pop
xor
pop
sub
inc
test
xor
lahf
cmpsl
scas
aas
jnp
addr16
cmp
mov
ljmp
movsl
inc
mov
mov
pop
adc
cltd
sbb
mov
daa
mov
add
stos
fcomi
xor
pop
pusha
icebp
mov
dec
loop
or
adc
sarb
inc
cltd
or
shrb
pushl
push
xor
mov
ret
aaa
popa
repnz
lret
fisubrl
add
mov
or
xchg
mov
out
mov
testl
cmc
ja
mov
outsl
mov
rclb
add
mov
mov
xor
pop
in
lret
mov
js
inc
dec
sahf
int
cwtl
mov
repnz
jns
dec
movsl
in
mov
push
xchg
mov
add
mov
cmpl
mov
lods
adc
xchg
subl
fisubs
pop
pop
ret
cmp
aas
daa
mov
mov
dec
std
push
pop
into
loope
mov
jge
in
imul
aas
sbb
fisttps
xchg
stos
das
and
mov
xor
popf
shll
sbb
dec
popa
pushf
nop
aas
xlat
xor
aas
cs
andl
pop
adc
jae
sub
js
or
mov
mov
push
fstpl
cmpsl
das
bound
xor
mov
popa
inc
mov
aas
into
push
or
mov
push
push
pop
xchg
cmp
dec
jne
jae
push
sbb
gs
xchg
call
xchg
mov
sbb
mov
ljmp
add
mov
test
push
arpl
stos
lock
cmpsl
jle
inc
lods
cld
gs
push
push
cmp
adcb
dec
mov
pop
dec
mov
xor
subb
out
jnp
push
mov
es
mov
pusha
cmpsb
mov
bound
pop
mov
mov
int
mov
xchg
lods
lods
add
mov
pop
sbb
pop
cmpsl
jp
jae
add
cli
cltd
mov
test
std
mov
xor
mov
mov
mov
inc
and
xor
cltd
stos
test
outsl
pcmpeqb
addr16
cmp
add
sub
fldenv
fdivrs
mov
aad
in
loope
pop
mov
cmp
pop
jae
adc
test
das
lods
sbb
pop
repnz
addl
pop
jmp
inc
and
mov
mov
shlb
loope
in
pop
xchg
sub
repnz
xlat
add
xor
das
mov
add
jb
or
jmp
ret
cmp
fwait
inc
mov
jne
mov
aaa
mov
mov
enter
cmp
sbb
outsb
xor
arpl
es
ficompl
mov
bound
jns
xchg
pushf
inc
stos
das
ja
add
mov
and
xor
adc
cmp
lds
lea
mov
pop
aad
add
xor
loop
out
mov
mov
jg
xlat
out
test
fistl
call
sbb
mov
mov
xor
mov
ljmp
mov
add
lods
cmp
inc
enter
sti
loopne
mov
out
fcomps
rcr
sbb
cmp
cltd
arpl
xor
mov
call
jge
cmp
jne
jb
mov
mov
sbb
xchg
imul
notl
pop
scas
lahf
jne
movsl
cltd
fwait
dec
fcomps
scas
ja
popa
jle
gs
arpl
cs
mov
stos
sbb
bound
cmc
dec
mov
mov
icebp
imul
xlat
mov
mov
mov
and
xor
xor
xchg
mov
std
xchg
lret
cmp
lds
mov
xchg
fwait
subb
ljmp
repz
push
jns
call
fwait
das
rcrl
pop
mov
xlat
dec
adc
adc
mov
iret
jge
add
lret
mov
mov
sbb
xor
mov
out
lahf
mov
fwait
lret
cmpb
inc
add
daa
xchg
loopne
out
lcall
movsb
mov
pop
mov
jge
jp
daa
and
jl
mov
enter
mov
push
adc
xchg
fwait
inc
loop
push
add
mov
pop
out
sbb
divb
add
or
imul
sub
pop
mov
add
push
mov
out
stos
mov
adc
cld
sbb
inc
push
inc
mov
fstps
xlat
arpl
mov
add
mov
mov
pop
test
jl
jbe
mov
and
clc
mov
xchg
jg
repz
shr
outsb
lcall
push
and
adc
std
mov
sti
mov
xchg
add
mov
fnstsw
dec
add
mov
popa
lods
movsl
xchg
mov
shll
imul
je
cwtl
repnz
sbb
sar
jnp
sarb
into
mov
orb
jnp
ljmp
sahf
out
sbb
data16
xchg
adc
dec
mov
and
jecxz
imul
dec
xchg
or
test
test
mov
mov
into
mov
das
mov
push
dec
sbbl
aas
movl
or
xchg
mov
pop
lret
lcall
fdivrl
jnp
stos
repz
jecxz
add
push
mov
add
push
aam
popa
cwtl
add
xchg
push
les
push
jnp
mov
outsb
xor
jp
jg
mov
loope
call
sbbl
sbb
out
mov
xor
sbb
and
mov
adc
insb
dec
add
movsb
sub
mov
inc
cmp
jbe
mov
or
xchg
mov
push
sahf
jne
xchg
or
inc
dec
cmpsl
pop
out
pop
jbe
cwtl
mov
fwait
xor
pop
push
out
or
ret
mov
mov
sarb
scas
cmc
ja
mov
push
enter
add
jns
adc
cmpsl
stc
mov
insl
add
xor
into
fisubl
push
mov
es
sbb
or
inc
jl
mov
jp
pop
shlb
jp
jp
cmp
cs
sbb
add
les
jge
fdivrs
arpl
lods
pop
xchg
cmp
mov
test
cmpsl
mov
lods
inc
mov
sbb
mov
mov
pushf
push
jnp
pop
xor
mov
mov
loop
inc
lret
stos
mov
cmp
pop
sub
fwait
stc
mov
xchg
daa
cmp
jecxz
mov
mov
xlat
arpl
pop
mov
lcall
sbb
pop
jg
mov
jbe
fwait
inc
notb
mov
mov
pop
xchg
and
mov
fs
aas
pop
jnp
in
scas
pop
scas
pop
sarl
mov
inc
add
and
cltd
out
mov
loop
gs
inc
fwait
jnp
cmpsl
cmpsb
xchg
mov
xchg
mov
or
dec
add
std
push
and
dec
mov
sbb
cmpsb
test
or
cltd
or
push
mov
and
stos
adc
xor
cmpsb
adc
pop
dec
inc
pop
cmpsb
inc
movsl
cmp
sbb
arpl
out
mov
nop
adcl
cwtl
lret
mov
inc
repz
dec
mov
mov
cmp
in
cmp
in
sub
lcall
aam
cmp
mov
jb
xor
test
push
push
mov
rolb
dec
repz
aad
cmpsl
and
jo
mov
mov
mov
cmc
fists
cld
push
pop
xor
iret
mov
cwtl
cmp
in
cmpsl
push
xlat
je
mov
sub
bnd
leave
and
jnp
mov
inc
dec
movb
and
sbbb
ljmp
cwtl
fcoms
inc
mov
int3
mov
fisttpl
xor
test
jo
mov
xor
jns
lcall
inc
mov
cmp
divl
pop
imul
mov
jl
mov
lcall
mov
cmp
mov
and
test
xchg
movsl
xlat
push
xchg
imul
data16
pushl
loopne
rol
push
mov
cmpsb
jns
movsl
add
mov
jb
aaa
fwait
imul
push
mov
dec
aas
js
mov
and
xlat
mov
idivl
je
add
inc
pop
dec
popa
dec
adc
inc
jae
jbe
mov
xchg
cmp
test
mov
callw
je
icebp
cli
and
pop
mov
mov
cld
cmpb
test
jbe
mov
andl
pop
fs
jb
fmulp
mov
add
dec
rorl
cld
mov
sbb
pop
pop
dec
cmpsl
int
test
loope
gs
mov
cmp
inc
out
or
gs
insb
add
cmpsb
fidivl
cwtl
fimuls
xor
test
xor
cltd
cmp
adc
stos
icebp
or
cltd
xchg
into
imul
cs
std
fcoms
pop
outsb
xchg
jae
dec
mov
cmc
pop
insb
or
lret
mov
push
arpl
test
orb
xor
aas
aam
scas
cmp
in
mov
dec
add
movsb
pop
aam
mov
push
outsb
sbb
out
ja
sub
add
mov
aas
test
addr16
sbb
mov
xlat
and
and
fidivs
inc
in
stos
mov
adcl
lahf
add
mov
mov
imul
xlat
push
mov
test
mov
cmc
out
arpl
mov
add
test
lock
mov
addr16
mov
repnz
cs
mov
aaa
jnp
aas
divb
sub
pop
xor
cmpsl
cmp
loop
sbb
push
rclb
out
pop
je
cmpsl
sbb
aas
or
sub
std
mov
cmpsl
ret
mov
xlat
icebp
scas
lods
xor
mov
xor
mov
mov
jmp
add
lret
mov
addr16
cmp
adc
sbb
mov
loop
mov
outsb
inc
adc
inc
jnp
sub
cmpsl
daa
push
push
inc
andl
js
pop
int
scas
push
cmp
sti
mov
rorl
dec
aas
cmp
mov
int3
lods
cmp
repnz
mov
push
mov
xor
pop
lds
test
ds
mov
imul
sarl
cmc
mov
xchg
inc
xorl
mov
pusha
push
scas
sub
ss
xlat
or
es
jbe
bound
movsl
fistps
mov
sub
ficompl
and
aad
mov
fadd
mov
jns
pushf
cld
cli
imul
jae
popf
hlt
ljmp
mov
xor
xchg
out
mov
fs
dec
cmp
sbb
jae
outsl
jne
lret
mov
pop
rorl
pop
add
push
das
dec
xchg
jns
movsl
lods
mov
mov
push
pop
jb
sbb
js
std
sbb
call
loope
stos
lds
lods
mov
xor
cmp
cwtl
in
cwtl
test
mov
sub
test
jo
mov
sbb
movl
gs
lcall
cli
fstpt
cmpsl
mov
repz
js
stos
jp
mov
mov
lea
sysret
je
xlat
cmp
popa
sti
aad
jae
leave
mov
test
or
cltd
icebp
movsl
stc
mov
mov
lcall
jl
lret
pop
mov
mov
pop
push
fwait
jae
jp
rcrl
pop
fildll
in
cmp
mov
ret
jns
cltd
lods
mov
scas
pop
xor
aad
fs
mov
sbb
mov
fsts
aaa
lock
leave
cld
dec
fisttpll
fbstp
inc
mov
mov
ret
jno
xor
dec
loop
sbb
add
xchg
mov
and
xchg
and
sbb
ljmp
les
mov
fwait
cmpsl
imul
js
mov
mov
sbb
mov
mov
add
jmp
in
loopne
mov
aaa
ljmp
cmc
cltd
jmp
sbb
dec
mov
iret
pushf
rcll
mov
push
push
xlat
mov
imul
mov
clc
pop
pop
fs
push
push
cmp
cwtl
lret
das
rcll
jge
jmp
jbe
fwait
adc
cli
xor
sti
mov
xchg
icebp
lret
sbb
outsl
or
cmpsl
sub
nop
mov
outsb
xor
jl
mov
cmpsl
cmp
xor
in
inc
dec
sbb
inc
push
jne
fcompl
pop
test
xor
mov
mov
mov
push
inc
push
jl
jb
mov
mov
lea
cmp
mov
fidivs
cmp
push
mov
jp
add
inc
pushf
mov
aaa
fdivrp
lcall
jb
sbb
dec
iret
add
lcall
cmpsl
jl
adc
lret
mov
out
popa
int
add
cltd
jnp
dec
dec
adc
jbe,pn
loopne
or
push
sbb
add
xchg
mov
lcall
and
mov
cwtl
cmp
pop
mov
adc
jmp
jg
jae
inc
sub
decb
lds
dec
lret
rol
shl
lds
mov
xchg
mov
lods
mov
lea
lret
jnp
cmp
mov
jbe
cmp
inc
mov
push
lcall
aaa
fistpl
cli
stos
jne
cmpsl
mov
sbb
mov
fcomip
mov
popf
imull
cwtl
inc
mov
push
inc
xorb
mov
iret
stc
mov
pusha
mov
test
push
cmp
jnp
hlt
fisttpl
lods
mov
cmpsl
in
es
mov
xor
fwait
jecxz
sbb
push
lcall
mov
sbb
loopne
push
jne
bound
jp
mov
mov
lods
cmp
fsts
pop
dec
mov
mov
pop
jns
mov
mov
sub
testb
rcrb
rcrb
mov
test
jp
popf
iret
mov
mov
xchg
mov
dec
push
or
push
into
rcrl
movsl
iret
pop
add
pop
xor
mov
inc
push
mov
sub
sahf
jmp
mov
js
in
or
add
test
fdivl
enter
fcomps
rolb
and
sti
mov
clc
mov
sub
iret
jl
sbb
sti
fwait
shr
cltd
push
sbb
adc
jns
inc
mov
lret
ljmp
out
and
cmp
shll
daa
xchg
inc
ret
ret
stos
add
and
jnp
sarl
leave
mov
test
addr16
scas
or
mov
ljmp
movsl
stos
and
and
cwtl
hlt
popf
ljmp
scas
mov
and
xchg
push
out
lret
pop
mov
sub
push
je
sbb
ss
lret
cmpsl
jmp
dec
or
jns
loope
sub
js
notl
xlat
stos
push
jbe
and
push
and
push
and
and
mov
add
cs
lahf
arpl
push
pop
inc
adc
test
out
lds
inc
scas
add
cli
mov
pop
loope
xor
add
sbb
inc
daa
sbb
repnz
les
add
sub
mov
es
mov
scas
scas
inc
jmp
pop
stos
adc
mov
icebp
xor
xchg
dec
mov
cmp
mov
xchg
adc
mov
nop
arpl
test
dec
add
dec
stc
push
enter
pusha
pop
js
xchg
inc
mov
sbb
push
mov
xor
inc
mov
jg
inc
mov
jnp
bound
sub
mov
sub
data16
js
ja
mov
iret
jecxz
xor
jl,pt
ret
in
jnp
xor
sbb
shlb
es
cmc
test
mov
and
mov
jne
fwait
mov
xor
push
jns
ja
lea
cmpsl
dec
adc
xlat
add
mov
push
in
xchg
dec
ja
icebp
andb
mov
fidivl
mov
cltd
cmp
cmp
fwait
cli
sub
cltd
test
mov
xchg
das
mov
jl
les
mov
cmp
scas
inc
mov
mov
fistps
jbe
cmp
mov
xorl
inc
lock
in
cmp
mov
mov
outsl
repnz
mov
popf
mov
ljmp
mov
jnp
daa
push
lds
fwait
mov
fdivrs
add
mov
or
sbb
pop
mov
in
push
out
fs
and
xchg
and
jmp
fucomp
cmpsl
sub
aam
jns
add
mov
enter
push
lds
push
orb
adc
sbb
pop
shrl
push
pusha
jb
mov
mov
sbb
adc
mov
push
mov
mov
dec
int
mov
add
adcb
fstps
bound
mov
cmc
or
cmpsl
aas
sbb
push
daa
into
mov
insl
andl
sbb
enter
mov
push
mov
xchg
push
sti
out
mov
mov
jnp
ja
scas
ret
addr16
xor
push
scas
xchg
movsl
lods
mov
push
or
mov
test
pop
add
in
jp
cmp
jnp
add
or
mov
xchg
lret
aas
and
cwtl
adc
fsts
int
cmpsl
das
mov
mull
es
lcall
xlat
scas
gs
or
xor
push
inc
mov
jg
fldl
andb
xchg
popf
pop
push
push
mov
or
jbe
mov
inc
xchg
loope
inc
mov
movsl
push
add
in
sub
xor
hlt
mov
scas
inc
sbb
adc
fwait
test
jg
mov
dec
pop
cmpsl
in
sbb
loop
xlat
cltd
push
adc
mov
mov
mov
mov
pop
adcl
scas
xor
cmpsl
cmc
xchg
mov
fs
mov
mov
addr16
xchg
fsub
jns
out
lods
jne
ja
daa
sub
int3
cmpsl
and
jnp
xchg
inc
mov
mov
mov
xchg
xchg
arpl
mov
mov
inc
mov
daa
mov
mov
add
cmpl
mov
sub
stc
popf
roll
sbb
je
pop
mov
int
cwtl
pusha
jnp
mov
and
fidivs
or
imul
fsubrs
fs
add
gs
or
insb
add
or
dec
aas
mov
leave
pop
aam
imul
loopne
mov
jnp
fptan
cmpsl
dec
lock
inc
push
fistps
jecxz
xchg
sbb
loope
cmp
fwait
mov
dec
ja
cmp
mov
xor
mov
mov
add
push
cltd
mov
cmp
fabs
pop
outsb
mov
xorb
andl
mov
loope
and
add
and
sbb
aas
in
mov
cmp
cld
mov
sbb
inc
pop
imul
xor
ds
cmpsl
cmp
sub
dec
insl
mov
rcrl
loopne
xchg
loop
push
scas
scas
insl
push
stc
lret
testl
gs
pop
mov
jnp
imul
jmp
testb
sbb
sbbb
push
sbb
popa
aaa
mov
xor
mov
arpl
fs
pop
sbb
mov
mov
pop
add
adc
test
cmpsl
xlat
push
mov
aas
aad
push
pop
imul
dec
test
push
xchg
bound
push
cmp
pop
sbbb
adcl
mov
cmp
div
xor
add
mov
xchg
insb
pop
ss
mov
hlt
out
aas
lock
in
ficomps
mov
cli
loopne
lea
mov
mov
and
ret
shll
test
xor
mov
cmp
fwait
or
test
mov
daa
xchg
test
xchg
mov
loopne
jge
pop
add
dec
in
into
jbe
or
out
sub
mov
adc
mov
nop
add
sbb
cmp
jnp
sbb
mov
pop
push
mov
inc
push
mov
imul
jecxz
stos
cltd
test
xchg
scas
xchg
xchg
xchg
mov
push
addl
push
xchg
jnp
sub
rcrl
stos
pop
mov
xchg
test
addr16
cmp
xchg
test
test
xchg
lea
or
pop
sbb
arpl
add
gs
sub
cmp
xchg
dec
adc
sub
popa
xchg
jb
jae
jp
jne
bound
mov
out
adc
xchg
stos
push
jno
xor
cmc
sbb
xchg
lret
xchg
rclb
pop
cmc
ret
roll
cli
imul
add
ljmp
enter
loopne
aam
xor
cmp
scas
cmpsl
cmpsb
mov
lods
xlat
mov
popf
mov
test
lahf
and
sbb
fidivrs
in
inc
mov
fs
mov
jge
mov
xchg
xchg
xchg
pop
xchg
mov
mov
outsl
mov
jg
inc
insl
add
in
arpl
add
ljmp
in
cld
xchg
xchg
xchg
scas
and
scas
lea
fstl
push
mov
ss
movsl
mov
jl
lods
cwtl
mov
leave
and
jns
mov
inc
orl
push
mov
in
inc
xchg
cmpsl
stc
xchg
xchg
mov
daa
pop
icebp
xlat
adc
mov
stos
ja
push
mov
push
lods
inc
scas
arpl
jne
mov
mov
sub
popa
inc
pop
add
cmpsb
aaa
fisubrl
mov
dec
jnp
push
fwait
ja
mov
mov
call
roll
popf
cltd
inc
mov
xchg
jg
gs
lahf
mov
mov
sub
aas
jnp
inc
pop
adc
aaa
xchg
lea
jne
cltd
fwait
imul
int
cmp
xor
je
gs
pop
lods
addr16
mov
pop
imul
jo
jge
add
dec
jne
ja
jg
jp
scas
leave
sub
jnp
xchg
push
mov
lods
mov
pop
jae
dec
pop
jns
je
decl
xchg
insl
pop
xchg
cwtl
inc
test
jne
or
enter
mov
imul
xor
xchg
cmpsl
rorl
cltd
mov
cmpsl
fwait
push
sbbl
imul
jae
cmpsl
xor
cmp
jecxz
add
inc
mov
mov
arpl
mov
outsl
xorb
jns
push
sti
pop
clc
lea
cld
push
pop
imul
mov
scas
cmp
mov
inc
dec
fimuls
into
push
insb
inc
repz
push
fadds
daa
dec
imul
pop
sti
mov
and
js
stos
repnz
mov
into
and
sbb
mov
scas
pushf
cmpsl
lahf
lods
xor
daa
sub
and
stos
inc
aaa
mov
out
xchg
push
lods
iret
pop
mov
mov
sub
fdivs
inc
xchg
xchg
mov
pop
and
testl
ss
mov
mov
call
fwait
leave
insl
push
lock
mov
in
fwait
sbb
inc
popa
pop
lods
mov
adc
xlat
fs
mov
popf
xchg
sbb
cmpsl
pop
inc
test
cwtl
mov
jnp
add
repz
xchg
jae
inc
jae
jns
cmp
lea
inc
lods
daa
or
or
jb
or
dec
mov
mov
aas
jnp
lds
cmp
scas
fwait
add
ret
cli
pushf
xchg
pop
mov
mov
cld
mov
sub
insb
outsl
ds
repnz
hlt
lcall
aam
sbb
ljmp
mov
mov
stos
or
mov
jne
mov
pop
xchg
popf
enter
ficoml
or
mov
mov
shlb
in
mov
ds
repnz
popaw
mov
cmp
jno
inc
jg
mov
popf
cli
inc
sar
adc
mov
cmpsl
add
adc
inc
jecxz
int3
mov
inc
ja
daa
adc
jg
mov
mov
dec
mov
xchg
xlat
mov
sub
mov
aam
idivl
jae
pop
lea
inc
mov
ret
and
lret
daa
and
lods
mov
pop
and
fmul
stos
ds
mov
xchg
pop
ljmp
imull
mov
jg
stos
mov
pop
cmpsl
ja
xchg
mov
aad
mov
dec
imul
add
outsb
and
mov
gs
adc
xor
or
sahf
push
jae
cmp
rorb
xchg
or
cmpsl
xlat
xor
inc
xchg
rclb
pop
jl
mov
or
stc
mov
mov
mov
mov
mov
fwait
fs
mov
in
arpl
enter
out
cli
xchg
imul
jbe
jl
shlb
gs
mov
je
pop
cltd
js
jno
inc
lds
into
outsl
daa
addr16
jbe
scas
sbb
adc
push
cltd
add
mov
jo
imull
mov
xchg
stc
xor
jnp
sbb
leave
xchg
test
pop
fwait
mov
mov
inc
mov
xor
popa
mov
stc
jae
pusha
mov
push
mov
push
pop
mov
lea
cmpsb
xchg
push
mov
xchg
inc
push
xchg
pop
testl
arpl
lock
sarl
mov
stc
cltd
test
cmp
popa
lods
dec
adc
push
cmpl
scas
xchg
lea
mov
sub
adc
leave
testl
jns
xor
std
mov
stos
mov
rcrb
mov
push
push
stos
je
cs
pop
mov
jmp
jge
jl
add
and
cltd
jo
mov
jno
leave
sbb
ss
jmp
cmp
outsl
dec
inc
inc
push
mov
ja
mov
mov
push
pop
testb
inc
sbb
scas
adc
mov
xlat
sti
xchg
nop
pop
mov
dec
lea
test
test
mov
gs
lcall
xlat
mov
imul
xchg
dec
ficoms
pop
push
push
scas
imul
adc
jae
cmpsl
leave
xchg
lods
mov
adc
cmp
popf
mov
in
sbb
or
mov
out
add
mov
stos
add
xor
insb
mov
pushl
icebp
mov
cmp
lods
ljmp
sbb
xchg
add
mov
insb
xchg
lcall
out
rcll
xorb
ret
and
mov
mov
loope
mov
scas
lret
add
negl
popf
aaa
lea
inc
xchg
pop
mov
push
jg
jne
sbb
dec
cmpsl
lds
xchg
push
shll
mov
out
sub
movsl
mov
sti
xchg
stos
cmc
negl
testl
mov
stos
fimuls
stos
imul
sarb
stos
dec
lods
inc
pop
lret
fisubrl
les
cmp
fiaddl
mov
movsb
xchg
lods
cmpsl
lret
movsl
js
or
push
xchg
test
mov
mov
pop
mov
insl
aas
inc
pop
mov
test
dec
and
mov
mov
out
xlat
fldenv
jge
lods
mov
cmp
scas
fs
cli
fisubs
push
lods
mov
or
adcl
mov
stos
pop
xchg
cmpsl
addb
fwait
push
xlat
inc
aam
scas
mov
scas
jg
cmpsl
outsl
push
out
lahf
or
xchg
mov
xchg
push
xchg
xchg
cmp
ss
pop
xchg
pushf
gs
mov
lock
mov
mov
ss
stos
pop
mov
push
ret
arpl
inc
mov
mov
das
lds
shll
movsb
stos
mov
inc
sbb
lock
jge
push
push
daa
jg
movsb
pushf
lahf
mov
popa
push
fdivrs
movsb
inc
jecxz
gs
mov
ja
xor
mov
cltd
arpl
and
cwtl
pop
jle
into
into
sub
mov
movsl
pop
add
imul
pop
jle
fmull
sbb
imul
leave
xchg
mov
aad
and
js
jnp
jae
cwtl
mov
in
stos
scas
mov
push
jl
rcll
inc
add
jl
insl
pop
mov
fwait
dec
mov
mov
jnp
stc
push
pushf
scas
dec
xor
mov
mov
and
sbb
mov
sub
cmp
movsb
je
lea
js
add
insl
cwtl
inc
daa
pop
aad
cmp
movsl
and
mov
cmpl
imul
cwtl
movsb
mov
xchg
mov
mov
fsubs
test
xchg
lods
insl
imul
xor
push
mov
adcl
aaa
mov
popf
imul
mov
xchg
xchg
mov
mov
mov
mov
int
jns
rcrb
mov
sbb
mov
mov
inc
insl
mov
shrb
jecxz
shll
pop
add
pop
aas
and
mov
xlat
imul
xchg
mov
orb
jnp
lods
inc
pop
movsl
mov
mov
push
shlb
das
je
pop
push
push
mov
xchg
xchg
loop
inc
mov
mov
xlat
scas
jae
jecxz
mov
xlat
xor
sbb
push
lods
mov
mov
jge
pop
sbbl
test
mov
mov
xor
mov
out
jno
jecxz
mov
mov
aas
pop
cmpsl
jnp
sarl
mov
dec
test
mov
jae
inc
mov
sub
fwait
cmp
and
jae
sbb
scas
insl
rcll
insb
mov
sub
inc
bound
loop
push
xlat
ja
rcr
lds
dec
arpl
xchg
jno
test
mov
add
mov
ljmp
mov
jae
mov
aas
sub
outsb
jnp
mov
scas
insl
test
subl
xchg
add
out
mov
mov
scas
fldenv
cmpsb
push
aas
adc
rcrl
or
fisubl
cmpsl
stos
clc
stos
sub
addr16
mov
ds
mov
inc
inc
or
pop
xor
xor
out
sbb
sub
jecxz
mov
mov
mov
pop
cmpsl
mov
push
scas
jnp
sbb
ficoms
loope
jns
adc
repz
mov
mov
imul
inc
xlat
cmpsl
dec
xorl
ffree
sub
lret
jmp
mov
addr16
sbb
cmpsl
stos
sbb
xlat
xor
stos
repnz
mov
cmpsl
in
js
jno
lea
mov
sbb
xor
push
lret
cmpsb
ja
pop
lods
jp
mov
mov
xchg
push
lods
xlat
into
loop
pop
mov
add
add
movsb
inc
sbb
jae
lret
xchg
imul
mov
test
lds
in
stos
ss
mov
xchg
jae
push
dec
jp
push
into
pop
loop
imul
push
mov
mov
addr16
mov
and
outsb
jae
xor
jbe
aaa
mov
sbbb
jge
popf
cmp
mov
ljmp
ret
pminub
xchg
push
fwait
xor
sub
shll
xor
add
dec
mov
fwait
mov
jnp
cmp
mov
icebp
cmpsl
popl
and
movsb
loop
in
mov
inc
mov
cltd
mov
ret
mov
cltd
add
fldl
xchg
mov
jnp
add
cli
jnp
xor
popf
pop
fcmovbe
loop
lods
push
or
mov
aad
subb
lret
cwtl
stos
insl
xchg
test
aas
jl
mov
roll
sbb
ficompl
xor
movsl
rclb
pop
mov
sbb
adc
arpl
mov
cli
jle
stc
xlat
xchg
sub
xor
dec
mov
inc
cmp
lahf
xchg
cmp
jnp
push
in
jno
rcl
fnsave
data16
pop
and
cmp
xchg
inc
cmc
ret
inc
arpl
xchg
dec
cli
mov
inc
mov
in
stos
xchg
and
lock
ret
jns
aad
mov
sbb
mov
push
add
xchg
adc
loop
mov
jae
test
lds
cltd
mov
lcall
mov
pop
push
jp
xchg
fidivrl
jle
push
lret
es
imul
ljmp
pop
cltd
shll
xchg
je
mov
adc
mov
pop
rolb
xor
daa
inc
mov
imul
mov
aam
mov
mov
jae
lcall
stos
sti
gs
mov
cs
push
pop
test
mov
movsl
fidivl
mov
sahf
mov
cmp
movsb
out
mov
mov
push
sbb
in
mov
mov
sub
jns
dec
stos
les
mov
in
movb
jb
mov
enter
mov
pop
arpl
adc
jge
push
lods
sti
dec
sbb
imul
jae
frstor
dec
and
sbb
xchg
cltd
arpl
stos
jnp
ja
mov
ljmp
insb
mov
cmpsl
dec
xlat
ss
mov
inc
ficomps
rcl
mov
inc
add
mov
pop
movsl
ja
scas
pop
mov
push
fdivr
mov
ret
push
xor
in
les
inc
adc
jl
daa
movsb
mov
pop
clc
lcallw
lret
jb
das
cwtl
add
mov
xchg
cmp
addr16
movsb
sar
mov
into
pusha
arpl
xchg
xor
mov
fwait
cmpsb
xchg
mov
repnz
in
daa
or
or
xchg
jp
mov
insl
mov
es
inc
and
out
ror
push
jne
mov
jbe
mov
cmpl
fcmovne
movsl
mov
mov
mov
loope
push
mov
sbb
or
imul
daa
in
data16
xchg
xlat
and
jle
xor
mov
lahf
inc
sub
cmpsl
push
movsl
xchg
push
jg
ja
dec
pop
mov
add
sbb
fimuls
mov
jp
lea
cld
xchg
and
lea
pop
cwtl
jb
adc
mov
test
outsl
xchg
mov
mov
adc
mov
jp
jge
push
cmp
inc
mov
xor
fnstsw
dec
mov
mov
mov
mov
jl
mov
in
sbb
imul
pop
mov
stc
lods
inc
lcall
mov
xlat
pop
repnz
or
mov
insl
frstor
inc
fisubs
push
hlt
outsl
inc
cmpsl
fimull
xchg
repnz
stc
mov
push
scas
xchg
das
mov
inc
mov
cmp
xor
scas
mov
loope
dec
movsb
cmpsl
sub
mov
xchg
into
lcall
sub
dec
pop
lods
jne
cmp
inc
and
fdivrs
stos
and
xchg
mov
mov
sbb
sbb
das
xor
add
movsb
cmp
pop
sti
dec
subl
sub
pop
pop
mov
mov
xchg
movsl
cwtl
xchg
inc
xchg
mov
jns
notb
push
mov
mov
mov
daa
scas
frstor
mov
xlat
sahf
lods
mov
mov
mov
outsl
pop
mov
lods
adc
dec
mov
inc
lods
cli
adc
push
pop
mov
cs
push
mov
mov
andl
hlt
in
jne
mov
mov
movsb
scas
addb
inc
inc
movsl
xchg
mov
lods
in
ja
cmp
mov
cmp
adc
imul
xlat
outsl
jl
hlt
push
cmp
xchg
and
stos
xor
xor
sahf
pop
ret
sub
gs
inc
out
mov
movsb
sbb
ror
xlat
or
daa
adc
out
mov
jg
ret
mov
mov
outsb
fsts
loope
cmc
scas
sbb
orl
dec
ficoml
push
imul
mov
sti
jle
jb
sub
pop
jmp
cltd
pop
outsb
insl
ds
xchg
movsb
cmc
in
imul
fsubrl
push
mov
inc
pop
mov
shr
or
mov
inc
xchg
xlat
and
ss
push
xor
push
sbbb
xorb
and
gs
inc
lahf
fistpll
mov
ret
mov
xor
fidivrs
jne
mov
jp
jge
cmp
mov
mov
lcall
daa
dec
mov
pop
pop
lods
xlat
aad
jns
es
ret
cltd
bound
xor
pop
jl
mov
stos
test
mov
mov
das
arpl
and
movsl
lea
push
test
cmpsl
scas
xchg
es
mov
sub
push
lahf
popa
sbbl
mov
psubd
xchg
mov
stos
sarb
jnp
mov
and
xor
notl
repnz
cld
add
addr16
mov
mulb
icebp
mov
sbb
jecxz
mov
ljmp
mov
arpl
mov
cli
jae
dec
outsb
mov
mov
fldenv
jg
bound
pop
inc
mov
mov
lahf
divb
cmc
pop
repnz
jle
mov
lods
bound
stos
xor
xlat
orl
arpl
cmp
outsb
repnz
push
icebp
hlt
mov
stos
scas
ljmp
xchg
push
adc
rcll
sbb
ss
mov
dec
aaa
push
cmp
inc
jg
movsb
cmpsl
bound
hlt
mov
xchg
jp
push
jo
mov
xchg
adc
pop
lods
mov
fwait
and
xchg
int3
inc
jb
push
ds
mov
lea
dec
cmp
mov
and
gs
mov
cmp
mov
imul
adc
dec
and
sbbl
cltd
pushf
ja
test
stos
push
sbb
mov
cmp
xchg
pushw
dec
mov
cmp
cmpsb
push
xlat
xor
xchg
push
aad
inc
test
mulb
jnp
pop
es
scas
insl
outsb
cmpsl
jae
mov
mov
stc
mov
incb
stos
jmp
scas
cmp
mov
pop
sub
fidivl
mov
scas
jl
movsb
test
iret
push
mov
std
or
fisubs
cli
shlb
andl
stos
aaa
mov
lods
dec
stos
mov
in
mov
pop
popf
cld
inc
jp
sub
popa
mov
jbe
adc
lcall
shll
mov
inc
xchg
imul
mov
aam
ja
mov
mov
mov
mov
popa
add
cwtl
popf
xor
test
pop
cmpb
movsl
sbb
shll
fdivrp
mov
pop
sti
adc
mov
mov
inc
mov
jg
xchg
inc
adc
pop
mov
mov
xlat
push
ljmp
inc
sbb
push
fwait
mov
jp
mov
cmpsb
arpl
stos
out
add
outsb
fwait
jns
inc
jne
sbb
mov
testb
xor
jle
out
subb
stos
hlt
mov
mov
ret
xchg
fimuls
push
jbe
call
push
push
mov
fldt
cmp
inc
aaa
inc
mov
out
xrelease
push
mov
mov
test
xchg
mov
xor
ljmp
add
mov
sahf
adcl
xchg
in
mov
movsb
cmpsb
xor
cmp
mov
jae
add
and
in
stos
addr16
mov
daa
mov
mov
repz
and
cmc
dec
jno
outsb
inc
movsb
mov
mov
inc
mov
pop
mov
in
mov
ds
popf
xchg
mov
orl
jns
mov
andb
mov
inc
pop
mov
cltd
cmp
or
inc
pop
andb
cltd
fldenv
daa
mov
outsb
xchg
ljmp
sbb
lods
lcall
daa
mov
mov
pop
lods
mov
cli
dec
popa
mov
and
mov
testl
lret
mov
and
cmc
cmp
mov
test
stos
mov
cwtl
into
jg
and
iret
int
jb
mov
adc
das
pushf
aas
mov
pop
mov
scas
shrb
sbb
lods
inc
cmp
out
imul
add
pop
jp
stos
xchg
mov
pop
jae
or
shlb
sti
pop
scas
push
mov
xlat
test
jae
sbbb
mov
pushf
sahf
xor
push
xchg
mov
cld
insl
repnz
jo
jge
popf
loope
jmp
mov
cltd
mov
pop
jnp
cmp
cmpsl
lods
js
xchg
sub
mov
lds
or
pop
xchg
mov
xor
mov
push
mov
mov
cmpsb
std
dec
pop
mov
fiadds
mov
xchg
push
lcall
xchg
outsb
out
mov
and
inc
xchg
stos
mov
xor
xor
leave
push
rclb
pop
mov
or
mov
mov
and
and
mov
mov
mov
cmpsb
add
loop
mov
xchg
test
inc
mov
mov
adc
pushf
mov
mov
insb
outsb
popa
test
pop
jp
aaa
sbb
xorb
stc
mov
xchg
mov
mov
and
repnz
lods
cmp
xchg
xlat
cmpsl
test
out
data16
mov
sub
mov
mov
mov
adc
mov
stos
mov
mov
mov
ret
scas
jae
cltd
cmp
cmpsb
push
cltd
mov
adc
xor
into
push
adc
stos
xchg
mov
mov
cmpsl
movsl
sbb
dec
insl
test
lahf
sbb
fwait
cmp
jbe
cld
cmp
mov
mov
mov
xor
cltd
add
imull
jo
gs
scas
sbb
movsb
dec
mov
les
mov
xor
sub
popf
push
jae
mov
in
xchg
leave
jnp
inc
mov
sbb
dec
or
in
push
add
popa
shlb
mov
mov
fwait
inc
je
insb
adc
sbb
outsl
fnstcw
mov
popf
ret
mov
adcb
mov
in
sub
adc
xor
mov
push
xchg
mov
aad
push
jae
xchg
divb
xchg
dec
mov
xorl
aas
sbb
out
movzwl
pop
or
cltd
mov
push
lock
add
outsl
xchg
leave
xchg
push
movb
lahf
cmp
mov
stos
xchg
mov
push
sub
jae
pop
jge
in
mov
shl
andb
addr16
lahf
xor
push
scas
cltd
mov
mov
mov
lahf
shll
cmpsb
imul
cli
xchg
cltd
mov
xchg
sbb
mov
jle
cmpsb
push
dec
sahf
out
jns
es
add
popa
imul
inc
cli
pop
movsb
or
pop
inc
mov
inc
add
jmp
imul
mov
dec
scas
jno
pop
mov
fnstcw
cmp
cltd
inc
cmp
dec
adc
lods
lea
mov
xor
mov
pop
popf
mov
sbb
jg
sub
jbe
lcall
inc
sub
addb
pop
mov
xchg
arpl
sbb
lods
lahf
mov
jp
mov
shl
mov
movsb
add
sbb
mov
lcall
push
data16
sarb
sbb
mov
xor
fs
pop
sbb
cmpsl
dec
adc
mov
es
push
dec
fimuls
xlat
insl
mov
jecxz
scas
cltd
and
movsb
sbb
push
mov
jns
jno
fcmovb
mov
shll
movd
push
shlb
jg
mov
mov
dec
pop
stos
inc
xchg
dec
das
mov
ljmp
mov
lahf
or
and
add
cmp
cltd
mov
pop
sbb
or
xchg
ret
icebp
jl
scas
xlat
mov
jge
les
lahf
imul
inc
das
mov
xlat
xor
xchg
mov
cmc
cmp
subl
stos
mov
insb
int
sub
shlb
push
mov
xchg
mov
gs
scas
sub
mov
jle
out
pop
jge
fnstcw
cmpsb
into
cltd
insl
sub
jl
inc
mov
pop
sarl
stc
cmp
rcrl
mov
xchg
mov
mov
mov
outsb
mov
in
xchg
xlat
sarb
jmp
add
lods
aad
in
ja
mov
xchg
sbb
xchg
ljmp
mov
aaa
mov
mov
mov
jle
repz
mov
mov
xchg
cltd
testl
jno
inc
jb
pop
cmpb
rolb
cmpsl
adc
popa
imul
fsubs
adc
pop
mov
jp
imul
pop
or
jnp
cmp
push
sbb
sbb
jae
stc
push
nop
cmpl
xchg
out
mov
adc
sub
shlb
xchg
inc
push
cld
mov
pop
int
dec
scas
sub
add
idivb
lods
jbe
cmp
addb
imul
fbld
imul
jno
fidivrl
mov
mov
test
stos
sti
add
and
sbb
pop
mov
mov
leave
inc
mulb
stc
in
loop
sahf
push
inc
sub
pop
mull
push
cli
mov
mov
imul
jns
adc
loop
mov
mov
mov
mov
xor
jge
xchg
jg
mov
je
adc
mov
cli
jbe
xchg
aaa
mov
jge
mov
scas
jne
mov
cmp
sub
mov
jae
mov
jp
and
mov
das
mov
fisubs
lds
icebp
fadd
and
cmp
mov
insb
das
cmp
movlps
arpl
push
mov
sbb
xlat
pop
or
dec
not
subl
mov
cmc
outsl
adc
push
ljmp
mov
and
pop
ret
sarb
mov
shlb
xor
jecxz
jp
mov
jo
fidivl
leave
dec
adc
sub
das
negl
cmpsb
or
mov
ret
push
push
cmpsl
lret
stos
loopne
lretw
sbb
mov
roll
stos
mov
jecxz
cmp
mov
cmc
and
jno
imul
imul
xchg
pop
cmp
gs
loope
xlat
xlat
inc
imul
ror
addr16
adc
jno
subl
jmp
jne
ret
push
jb
jnp
mov
rcll
dec
and
or
push
xlat
jnp
insl
cltd
mov
and
mov
bound
hlt
xchg
test
mov
dec
sub
mov
mov
ss
inc
movsl
lret
mov
subb
mov
mov
sub
push
sbb
inc
mov
lea
outsl
scas
mov
mov
lret
ja
out
mov
lods
mov
mov
sbb
push
addr16
into
decb
xlat
hlt
mov
push
pop
arpl
push
mov
fwait
inc
add
jnp
inc
divb
fdivrp
fwait
pop
ja
mov
movsl
fs
or
ret
xlat
stos
leavew
fwait
push
xchg
ss
inc
cmp
addl
jnp
sbb
lods
sub
fnstcw
je
hlt
and
test
adc
pop
xor
fwait
mov
in
mov
js
mov
stos
sbb
cmp
adc
aam
dec
test
fnsave
jp
mov
jl
std
cmp
xor
inc
dec
lret
aaa
mov
leave
inc
cltd
fdivrs
mov
mov
rol
mov
fcmovnbe
push
xor
aaa
cmp
inc
xor
sbb
hlt
orl
jns
addr16
xchg
ret
popa
lret
ss
cmp
insb
xor
mov
outsb
mov
jns
imul
hlt
inc
cmp
sarl
mov
in
outsl
inc
lods
mov
mov
imul
fisubrs
test
hlt
jp
fsubs
pop
inc
xchg
mov
int
cmpsb
in
pop
loop
mov
int
ror
daa
insl
mov
lock
sub
pop
test
adc
lcall
fwait
mov
dec
stos
gs
pop
inc
cmpsw
pop
ficoml
push
mov
insl
or
mov
mov
stos
jg
xorl
mov
test
fildl
and
xchg
push
movsl
jge
stos
insl
das
jg
dec
lods
inc
sbb
stos
shll
xchg
bound
xlat
mov
pushf
dec
setae
cmp
mov
xchg
cmp
scas
in
fstps
pop
cmc
xlat
stc
decb
jnp
pop
lods
ret
insl
loope
cwtl
dec
xchg
push
int
arpl
sbb
mov
in
outsl
stc
inc
fmuls
loope
sahf
mov
pop
stos
jb
sub
lods
xlat
push
xchg
cmpl
mov
lods
pop
lret
ret
lahf
arpl
pop
pop
lds
in
mov
into
mov
daa
jae
jb
mov
xlat
adc
hlt
lret
pop
push
cmp
js
sub
xlat
lea
mov
mov
xlat
aad
inc
or
data16
mov
std
add
xchg
cmp
scas
mov
popa
leave
jg
mov
jnp
pop
stos
cli
mov
mov
or
dec
pop
sbb
stos
lods
scas
pop
test
pop
sbb
dec
ss
jp
and
inc
arpl
cltd
hlt
test
test
mov
cltd
inc
jno
lea
cmp
mov
jge
roll
mov
subl
shrb
shll
cmpsl
ret
mov
pop
clc
lods
push
dec
sub
dec
call
xchg
test
mov
mov
pop
mov
inc
mov
cli
movsl
pop
mov
inc
lds
adc
mov
testl
adc
test
outsl
xor
clc
mov
call
aaa
test
lret
dec
cmp
movsl
sbb
loope
mov
in
mov
outsl
das
pop
xchg
xchg
adc
scas
scas
jns
xchg
mov
ss
mov
xchg
xchg
jns
xlat
test
scas
ret
sbb
cmp
mov
andl
aad
orl
adc
stos
subl
arpl
inc
mov
fnsave
cmp
fcomps
pop
sarb
mov
pop
xor
rcll
jmp
mov
mov
mov
push
repz
rcrl
scas
cli
mov
and
jmp
testl
pushf
stos
mov
xchg
dec
push
cld
mov
pop
mov
mov
imul
jno
mov
mov
aas
imul
cmc
sbb
ja
adc
pop
inc
lea
repz
cwtl
dec
mov
mov
push
es
stos
sarl
dec
sbb
mov
mov
sub
sbb
push
stos
stc
into
test
mov
inc
inc
add
jnp
pushf
lea
xchg
sbbl
lcall
rorb
mov
mov
ja
int
inc
lods
stos
ss
mov
mov
adc
pop
mov
push
cwtl
mov
jbe
insl
mov
dec
cmpsl
movsb
imul
fwait
mov
mov
sti
mov
xor
mov
xchg
xor
jae
jp
xchg
pop
xchg
stc
nop
lahf
mov
mov
mov
mov
mov
dec
pop
pop
inc
mov
aad
adc
mov
mov
inc
test
cwtl
loope
jne
xor
sbb
jg
sub
rclb
movl
addr16
pop
cltd
jge
xorl
pop
std
cmpsb
mov
sbb
cltd
sub
data16
jae
cmc
outsl
inc
jnp
sub
cltd
push
stc
mov
lcall
xlat
ljmp
daa
rcrb
mov
addr16
fdivrs
xchg
movsl
xchg
ja
gs
jge
cmc
pop
shll
mov
cltd
aaa
xchg
ja
cltd
mov
mov
inc
mov
mov
xor
out
stos
mov
adc
mov
inc
cmp
cmpsl
insl
cmp
sbb
jno
mov
fwait
jae
push
push
mov
cmp
outsl
popf
gs
aad
std
scas
test
hlt
or
xchg
mul
xorl
ret
rorl
leave
xor
sbb
inc
cmpsl
dec
fwait
outsb
cmp
insl
dec
mov
out
cmp
mov
push
pop
pop
cmp
push
negl
sbb
mov
jp
xchg
das
or
pop
dec
andb
aam
mov
sbb
adc
xor
sub
mov
cmpsl
mov
outsl
aaa
xlat
out
mov
push
jae
rcrl
mov
gs
scas
cmp
mov
call
mov
leave
pop
dec
ret
mov
faddp
mov
cmp
and
push
mov
out
push
test
cld
mov
lods
mov
mov
mov
fiadds
adc
add
mov
data16
mov
out
loopne
jo
cmp
je
jne
lahf
dec
cmp
fwait
adc
aam
mov
jnp
xor
test
mov
sarb
divb
in
ljmp
cli
xor
test
addr16
out
sub
call
or
pushf
xchg
mov
cmpsb
mov
fwait
test
icebp
mov
scas
mov
xor
add
inc
es
push
or
jns
out
jno
roll
ret
mov
fs
and
js
mov
dec
dec
lret
repz
cmp
mov
arpl
push
sbb
adcl
data16
rcrb
inc
mov
push
dec
pop
jo
and
dec
pop
adc
shlb
inc
sub
ds
sbb
and
add
jmp
sbb
or
mov
das
xchg
xor
push
xlat
mov
and
pop
scas
das
xor
lahf
addr16
pop
pop
subl
adc
dec
mov
mov
rclb
ss
xchg
sbb
mov
sub
mov
addl
stos
fiadds
icebp
mov
adc
and
jb
bound
aaa
xorb
ret
ja
ja
ja
xchg
xchg
xchg
xchg
adc
xchg
xchg
and
dec
push
pop
inc
push
out
arpl
mov
test
mov
xchg
ljmp
jnp
xor
test
jb
cmp
xchg
xchg
xchg
adc
mov
and
int
jmp
cmc
dec
stc
cmp
aaa
scas
pop
lret
cltd
fisubrl
arpl
cli
and
sub
cmp
stos
xchg
sbb
das
adc
adc
mov
test
mov
sbb
xchg
adc
cltd
out
les
jbe
enter
push
sbb
loopne
dec
imul
std
clc
hlt
mov
ret
xor
test
fsubs
cmp
ja
sti
mov
mov
stc
adc
sbbl
jnp
stos
push
ljmp
cmpsl
insl
mov
outsl
pop
cmp
inc
xlat
and
xor
mov
or
aas
push
inc
xlat
inc
pop
orl
jecxz
inc
lret
test
pop
mov
and
inc
roll
mov
js
mov
xor
ret
push
or
cmp
clc
mov
mov
push
stos
dec
sub
inc
les
scas
and
test
scas
pop
stc
dec
movb
and
addl
push
sbbb
cs
ds
outsb
fdivrs
sbb
add
mov
imul
stc
xlat
sbb
or
mov
xor
sub
pop
push
aaa
mov
mov
aas
xor
mov
mov
and
push
icebp
mov
jecxz
insl
jne
xchg
jge
and
dec
lods
fnstenv
fs
push
scas
repnz
lock
pop
cmpsl
push
xorl
add
lahf
addl
aam
mov
cmpl
cmc
imul
adc
and
push
push
sbb
fs
mov
jmp
push
cs
out
lock
mov
fimuls
xrelease
mov
ljmp
repnz
mov
pop
add
adc
ja
jmp
mov
mov
mov
sub
jns
scas
lret
inc
cmpsl
push
pop
push
arpl
mov
popa
push
dec
loope
cmp
call
faddl
lret
movsl
js
leave
jnp
xor
test
xchg
lahf
xchg
rorl
mov
xchg
loop
fstl
aam
mov
mov
push
cmp
mov
leave
xlat
movsb
ret
xchg
jmp
test
xor
cmp
add
add
xchg
cmp
cmp
lahf
ret
cmpsl
adc
mov
xchg
jnp
imul
xchg
arpl
daa
mov
movsb
jecxz
sbb
xor
test
mov
push
lret
or
insl
or
or
cmp
fwait
mov
leave
and
mov
mov
xor
xor
dec
iret
leave
push
mov
jb
cltd
pop
or
and
pop
add
fwait
jae
cs
mov
mov
xchg
jnp
xor
ljmp
xchg
inc
xchg
push
xchg
ds
arpl
cmp
mov
test
fwait
mov
in
es
mov
cltd
gs
or
and
push
mov
xchg
jp
xor
sti
sbb
js
cwtl
dec
push
xchg
or
outsl
cltd
lret
push
mov
pusha
mov
mov
and
int3
in
cmpsl
inc
bound
dec
ljmp
dec
sarl
mov
jbe
pop
cmp
or
jns
push
pop
mov
cmc
mov
roll
mov
push
cmp
mov
xor
cmpsb
daa
sbb
lds
cwtl
add
dec
xchg
mov
inc
lret
push
pop
imul
mov
lods
stos
sbb
popa
mov
add
lcall
push
jbe
push
lret
inc
mov
cmp
sub
pop
cmp
xor
jmp
out
mov
dec
cmc
or
jbe
dec
mov
ret
pop
out
fwait
dec
jl
stc
arpl
andps
xor
and
pop
ja
xor
mov
icebp
negl
mov
push
repz
dec
mov
sbb
mov
jnp
inc
push
scas
movsb
mov
ficomps
push
pop
xor
stos
xchg
cmp
outsl
push
mov
sbb
mov
loopne
pop
cltd
nop
push
push
stos
xor
imul
sub
mov
cmpsl
fs
imul
jae
xor
mov
pop
cmp
add
cld
xchg
pop
jo
lea
fwait
mov
and
loopne
bnd
mov
xor
ret
mov
mov
mov
mov
fiadds
add
add
mov
push
jl
pop
sub
jg
and
mov
or
mov
mov
testl
out
jnp
mov
pusha
adc
es
ja
pop
pop
mov
xorb
push
xlat
movsb
dec
or
sbb
fwait
rcrb
stc
jnp
subl
notb
xchg
ss
pop
pop
lcall
fldenv
mov
ss
pop
lcall
in
fs
xor
mov
test
lds
sbb
loop
cmc
mov
mov
popa
pop
mov
out
pop
xor
shrl
cwtl
mov
jl
and
jmp
js
xor
out
testb
sbb
mov
jae
cmp
cmpsl
loope
jp
mov
xor
cmp
mov
mov
arpl
pop
sub
stos
fidivrl
adcl
bound
ss
cmc
idivb
pop
aam
movsl
push
pushf
jnp
std
cmpsl
cmpsl
dec
loop
xor
mov
mov
adc
dec
mov
orb
jne
and
addr16
out
cmp
mov
loop
mov
push
rolb
mov
mov
dec
inc
mov
arpl
mov
push
idivl
mov
data16
mov
add
xchg
xchg
mov
push
adc
stos
icebp
pusha
jb
cmp
xor
dec
or
and
subb
pop
inc
mov
pop
cmpsl
xor
push
sbb
push
dec
adc
movsl
lret
dec
ds
gs
mov
arpl
outsl
sbb
das
gs
mov
imul
lods
out
pop
dec
push
shlb
lahf
leave
cwtl
cwtl
cli
arpl
aas
lcall
in
adc
sub
jb
aaa
push
sbb
addr16
adc
adc
mov
xor
bound
js
xchg
lods
or
sbb
xor
mov
insl
ja
pop
mov
mov
sbb
test
testl
push
xlat
cmp
xchg
push
loop
inc
mov
in
xlat
pop
es
dec
iret
aaa
inc
xor
mov
push
jbe
enter
sbb
ljmp
sbb
mov
cmpsb
mov
cwtl
mov
loop
cli
or
arpl
dec
in
das
nop
pop
jno
loopne
mov
mov
xor
jne
jns
push
sti
mov
push
jge
cltd
mov
jmp
ret
inc
xlat
mov
fs
fwait
adc
arpl
icebp
push
int
xchg
daa
sbb
xor
cmp
xlat
cmc
xor
movsb
aaa
fidivl
rcll
xor
jns
jb
mov
or
jecxz
es
popf
push
rcll
sub
sbb
push
andb
inc
rorb
scas
dec
frstor
xor
mov
adc
test
cmp
fwait
lcall
xchg
xchg
xlat
sarl
xor
push
cli
outsl
and
mov
mov
mov
or
cmp
adc
out
cmpsl
add
xchg
or
adc
mov
test
cmpsb
cmpsl
inc
jb
sub
andb
addl
lods
push
jmp
aaa
jg
std
addr16
push
rcrl
mov
xlat
daa
sbb
mov
imul
pop
lds
push
xor
mov
jne
jo
jp
cmp
mov
cmp
xor
mov
or
mov
jo
mov
xchg
xchg
adc
xor
arpl
inc
je
xor
aaa
inc
cmpsl
inc
jb
scas
dec
jecxz
pop
test
mov
cld
pop
sbb
ret
ficoml
lcall
adc
add
andb
mov
push
nop
jl
inc
pushl
mov
pushf
add
xchg
cwtl
cld
xchg
test
inc
shl
mov
mov
leave
inc
sarl
test
loop
call
dec
jg
loope
adc
add
jno
inc
stos
sub
subl
ret
insb
movsl
adc
xchg
mov
mov
push
sbb
jns
pop
loop
fistpl
js
mov
dec
xlat
jae
jmp
mov
xor
mov
inc
loope
pop
mov
iret
arpl
xor
mov
inc
fidivl
pop
mov
cmp
mov
mov
inc
xchg
pop
xchg
stos
dec
shr
lret
xor
sub
adc
mov
cmc
ret
inc
aas
push
mov
dec
xor
xchg
and
mov
mov
cmpsb
cwtl
mov
push
jp
mov
lock
mov
repnz
cld
addb
mov
cli
mov
adc
jge
ss
mov
and
cmpsb
aas
jae
aad
mov
out
jo
stc
mov
scas
add
cmp
cmpsl
cld
ret
sbb
mov
sbb
jge
cmp
movsl
inc
rolb
mov
mov
dec
mov
and
jns
inc
sub
pop
pop
xchg
add
pop
cmp
movsb
add
pop
sbb
mov
xchg
repnz
jae
divb
push
adc
mov
test
lahf
xchg
sbb
cmp
or
mov
jl
cmp
inc
dec
gs
pop
fwait
iret
inc
jae
test
dec
stc
pop
xorl
mov
mov
and
xchg
fincstp
sbb
fsubrl
scas
cmp
push
mov
mov
test
inc
test
xor
out
lahf
pop
cmpsl
jmp
daa
imul
fwait
jl
das
icebp
imul
dec
dec
shll
imul
or
add
cltd
mov
mov
mov
xchg
scas
mov
cmc
pop
or
and
push
cmp
imulb
jns
push
cmpsl
adc
ret
cmc
add
push
test
pop
sub
push
or
mov
xchg
cmp
sbb
rolb
scas
xchg
xor
push
add
outsb
mov
test
in
jns
mov
ljmp
add
xor
fimull
and
ljmp
js
lds
aad
push
mov
sahf
sub
pop
adc
pusha
jge
jae
mov
mov
flds
mov
mov
jbe,pn
std
push
dec
nop
mov
add
jbe
xor
dec
push
pop
pop
fnstenv
fwait
inc
pop
push
lds
or
mov
out
bound
dec
inc
mov
push
mov
mov
pusha
ret
pop
or
push
mov
std
pop
out
shll
jnp
mov
xor
or
sbb
adc
dec
dec
mov
xlat
rcrl
popf
jns
jne
mov
stc
pop
daa
inc
jns
dec
fsubrs
cmpsl
repnz
sbb
fimull
push
insl
ljmp
test
push
cmp
pusha
leave
and
sub
mov
xchg
cmpsl
jl
ficomps
or
xor
dec
inc
mov
hlt
sbb
push
adcl
pop
xor
fstps
scas
int3
push
lock
popa
jl
mov
or
mov
mov
cwtl
xor
mull
mov
fwait
mov
mov
sbb
outsb
imul
sbb
or
shll
jle
jmp
or
lahf
insb
mov
cmpsb
mov
adc
subb
cwtl
inc
aad
cmp
mov
jnp
dec
repnz
dec
mov
rcrl
loop
pop
push
mov
cmpsb
fdiv
int3
mov
aas
mov
test
cs
stc
mov
mov
pop
sub
jl
out
js
into
mov
push
or
jae
div
mov
aam
dec
jmp
mov
mov
mov
push
fwait
sbb
mov
xchg
push
test
flds
or
adc
add
xor
mov
xchg
pop
mov
push
jbe
mov
pop
push
xor
mov
dec
pop
cmp
daa
inc
pop
sbb
repz
ret
cmp
lahf
cmp
sbb
pop
mov
sub
inc
mov
mov
pop
fidivl
fbstp
bound
rorb
sbb
ljmp
arpl
shrb
mov
sub
aas
arpl
cmc
or
jecxz
mov
aad
cmpsb
hlt
dec
mov
xor
fimuls
lea
jl
ss
call
and
sahf
sbb
mov
cs
dec
mov
mov
xor
out
push
mov
mov
pop
shll
add
shrb
loope
or
scas
sbb
mov
fisubl
cltd
xchg
sub
es
mov
inc
push
pop
push
or
cmpsl
imul
xchg
xchg
mov
mov
mov
stos
mov
bound
daa
xor
aaa
cmp
xchg
push
fwait
pop
fsubr
mov
hlt
mov
xor
jp
sub
pop
cmpsl
cltd
and
push
inc
xchg
mov
jae
fsubl
xor
pop
pop
inc
jmp
cld
pop
lcall
inc
mov
fwait
xchg
lods
aas
scas
add
and
and
testb
adc
scas
sbb
mov
push
sbb
xor
push
outsl
scas
push
inc
xor
xorl
cmp
shrb
divl
rorl
push
cmpsl
sub
mov
dec
cmpsb
shll
jns
inc
xchg
test
lods
leave
cmp
aas
mov
push
les
xchg
mov
and
ds
mov
jns
pushf
ljmp
sbb
dec
shll
movsl
movsl
jecxz
jbe
repz
xor
cmp
icebp
mov
les
aaa
inc
mov
ds
mov
mov
in
ret
pop
shlb
jbe
fdivrs
aam
xlat
pop
push
adc
jns
aas
inc
jmp
cmpsl
cltd
or
ret
mov
cwtl
out
push
cmp
test
mov
ljmp
sub
push
sbb
ja
sbb
in
jno
ss
fistps
mov
add
push
sarl
mov
and
ret
adcl
das
xlat
enter
pop
out
fbstp
ret
xor
mov
mov
in
cli
sbb
cld
pop
xchg
xchg
fwait
mov
ja
lock
mov
and
enter
mov
add
sbb
cmpsl
fisubrs
and
adc
pusha
dec
dec
mov
or
sarl
mov
out
adc
jae
stc
movsl
hlt
pop
call
out
jne
sbb
sub
in
out
mov
rorb
xor
cmp
xchg
jecxz
mov
pop
sub
ss
push
mov
ja
mov
mov
dec
cmpb
and
jle
xadd
sbb
dec
pop
cmp
push
arpl
cmp
add
mov
aas
pop
jnp
repnz
cltd
popf
or
pop
mov
add
ret
adc
ss
lcall
add
repnz
and
out
sbb
divb
xchg
movsl
mov
rcrb
sti
mov
cmp
jns
out
scas
xor
adcl
out
pushf
in
push
pop
mov
popf
clc
sti
or
icebp
fnstenv
lds
fidivrs
arpl
adc
mov
jne
iret
jae
mov
cwtl
xor
and
add
shrl
xor
cmpsl
cmp
lock
cli
cmp
push
adc
inc
sbb
jg
ret
jae
cmpsl
inc
sbb
mov
pop
sbb
xlat
add
jne
xlat
ljmp
mov
mov
pop
push
loop
push
inc
sbb
jne
xor
xor
xchg
mov
ficoml
out
jb
and
bnd
fidivs
aas
lea
popf
mov
adc
mov
add
xchg
enter
mov
repz
rol
push
out
sbb
add
cmpsl
sub
lock
mov
repnz
das
test
gs
pop
pop
fwait
arpl
scas
pop
popf
icebp
pop
scas
mov
mov
mov
sub
scas
xor
xor
ds
dec
out
cli
movb
dec
cltd
xor
sub
cmpsl
daa
mov
dec
push
insl
inc
xchg
test
les
mov
push
rcll
addr16
loopne
lahf
xlat
mov
fs
repnz
mov
or
or
xor
fadd
cmp
jg
scas
push
sub
push
movsl
into
xor
pop
movsb
imul
aam
sbb
inc
scas
mov
push
loop
xor
arpl
mov
adc
daa
jnp
ficomps
je
arpl
cmp
mov
jns
sub
cmp
jp
dec
add
lock
mov
pop
pop
mov
inc
lods
xor
xchg
jne
fidivs
imul
cmp
sbb
cltd
iret
aas
movsb
enter
dec
cmpsl
test
mov
cwtl
aas
inc
frstor
lods
push
mov
cmpsb
andb
jae
mov
xor
test
and
loopne
mov
cmp
int3
mov
rcrb
aam
sbbb
cwtl
adc
addr16
sub
mov
mov
jns
jne
pop
pop
arpl
insb
cltd
lock
cmpsb
mov
enter
sahf
cwtl
loop
cmp
ljmp
andl
mov
mov
stos
mov
jle
mov
ret
cltd
sub
shll
aaa
cli
subl
pop
and
out
pop
and
imul
jle
add
jae
fs
cwtl
test
mov
mov
movsl
aas
xor
adc
mov
pop
das
mov
movsl
xchg
push
sbb
mov
cmpsl
mov
mov
aam
cmp
jl
adc
scas
inc
push
testl
jecxz
es
xchg
or
fldenv
cwtl
addr16
add
adc
add
cmp
and
xchg
pushf
pop
iret
add
push
jb
jp
sbbl
shlb
ret
repnz
adc
pop
push
rcll
jo
jb
lahf
sbb
lds
or
xor
cmp
xor
xlat
jns
lahf
pop
dec
fwait
cmpsl
mov
cld
addl
test
cmpl
xchg
mov
push
sub
or
pop
mov
mov
add
ss
inc
int3
in
mov
mov
test
mov
pop
sti
movsb
inc
mov
cmpsb
xchg
arpl
mov
jne
mov
sbbl
orb
cmpsl
mov
bound
cs
and
xchg
cmp
aad
mov
addr16
mov
cmpsb
aam
or
fwait
jle
adc
test
test
loope
push
mov
into
mov
xchg
jb
and
push
pop
sub
leave
movsb
pop
int
inc
and
mov
test
xor
pop
das
xchg
pop
sti
cmpsl
icebp
mov
push
movsb
andb
mov
unpckhps
adc
mul
inc
xlat
mov
loope
mov
into
jp
cmp
and
mov
lea
mov
lods
jnp
scas
xor
xchg
mov
test
jb
mov
sub
lock
sub
mov
outsb
mov
mov
subw
lcall
cmp
inc
mov
mov
icebp
and
inc
xchg
cwtl
lods
mov
shrl
gs
cmpsl
pop
add
leave
mov
and
iret
aas
movsl
in
outsl
xor
das
fwait
cltd
sub
aas
data16
andb
mov
inc
lods
and
jle
mov
stos
xchg
xchg
fstpl
push
test
mull
call
dec
cmp
out
es
dec
clc
mov
mov
pushw
mov
jns
sub
sarl
inc
mov
test
inc
xor
jns
dec
pop
shll
test
out
mov
xor
mov
mov
mov
xchg
adcl
xchg
mov
ret
cmp
ja
ljmp
adc
xchg
push
lods
cmpsb
lahf
and
int
repz
repz
mov
fld
rorl
cmpsb
xlat
out
sar
in
cmp
aam
sub
test
sbb
cltd
mov
cli
push
popf
mov
add
mov
add
movsl
in
test
cmp
jns
sahf
ss
cmpsl
int
sarb
add
push
aaa
test
cmpsl
pop
loop
incb
xor
outsb
ss
push
push
in
push
int
popl
ret
mov
dec
addr16
xor
fidivs
jnp
xor
jecxz
std
mov
mov
mov
mov
jnp
xor
insl
dec
sarl
mov
cmpsl
mov
jne
xor
das
addr16
cwtl
scas
mov
xchg
sub
push
pop
cmpsl
mov
cmp
mov
xchg
jnp
fidivs
sahf
test
outsb
scas
imul
and
mov
adcl
incl
aad
sub
xchg
sub
xchg
ss
push
sub
mov
data16
sahf
cmpsl
daa
sbb
cmpsb
adc
mov
add
mov
arpl
ret
test
mov
lret
and
je
mov
mov
push
jbe
cmp
movsl
jbe
insb
cltd
aaa
jnp
mov
sbbl
mov
pop
cmp
dec
sub
insl
lods
out
or
xor
cwtl
fwait
xchg
movsl
or
dec
mov
decb
push
xchg
pushf
cmp
mov
cmp
lea
and
scas
pushf
adc
pop
cmp
mov
pop
mov
lahf
jno
das
ljmp
leave
xor
pop
cltd
test
addr16
test
mov
mov
mov
sbb
outsl
cmpsl
mov
or
mov
sarb
shl
lods
popf
bound
xor
mov
xor
mov
es
flds
xchg
lahf
divb
mov
mov
xlat
jmp
cs
mov
mov
jb
cmp
hlt
pop
roll
cmpsl
or
scas
xor
cmpsl
les
scas
mov
mov
cmp
mov
push
iret
and
jle
iret
xor
mov
mov
and
jb
cmc
dec
mov
sbb
mov
ret
daa
mov
rorl
add
mov
jne
aas
mov
jae
xorl
xchg
cmp
aad
cwtl
sbb
jecxz
mov
cmp
test
mov
out
aas
int3
lods
mov
movsb
mov
mov
mov
mov
jns
mov
inc
jmp
dec
mov
sti
or
fdivs
iret
mov
arpl
sbb
inc
mov
add
fcoms
adcb
mov
mov
jbe
mov
mov
push
data16
or
out
sub
mov
cmpsl
pop
loop
jne
fdiv
lcall
aaa
mov
dec
mov
push
shl
pop
cli
jns
adc
xor
sub
xchg
in
andl
mov
imul
in
mov
ljmp
mov
dec
daa
mov
sti
sbb
push
push
jmp
cwtl
es
cmp
in
mov
cwtl
stc
loope
sub
mov
dec
lcall
rorl
jns
cmp
fwait
out
jo
push
add
movsl
lcall
and
add
dec
test
mov
in
jmp
sbb
test
js
adc
and
jno
lods
mov
popf
idivl
adc
mov
jl
push
inc
popa
cmc
shlb
int3
push
stc
aas
dec
cli
das
aas
out
or
dec
call
imul
test
xlat
xchg
call
xor
dec
sbb
add
cmpsb
and
mov
clc
jns
mov
aad
mov
jle
test
cmp
xchg
faddl
movsl
outsl
push
xlat
dec
les
mov
mov
jle
dec
and
cmpsb
sbb
inc
in
lods
inc
test
adc
jge
mov
insl
pop
pop
mov
sbb
adc
and
es
div
ds
cmc
mov
pushl
push
xor
test
addr16
das
pop
cld
out
lret
mov
mov
mov
lods
js
nop
cs
xor
adc
inc
sbb
mov
daa
cwtl
jno
push
scas
pushf
push
jp
mov
dec
mov
cwtl
xor
xchg
xor
cwtl
mov
mov
cmpsl
enter
jnp
xor
fidivrl
mov
inc
nop
test
jg
mov
and
add
sub
pop
enter
xchg
mov
leave
mov
sub
gs
out
sub
mov
mov
jmp
pop
out
mov
jnp
fwait
jge
mov
pop
mov
roll
imul
mov
rclb
jae
insl
mov
jg
mov
xor
cltd
andl
pop
mov
mov
add
aaa
mov
cmp
add
ljmp
stc
sbb
xor
mov
and
aam
or
cmp
sbb
ret
xor
addr16
xchg
add
out
xchg
add
xor
mov
pop
mov
icebp
push
in
and
cmpsb
inc
or
push
mov
stc
js
arpl
jns
aas
mov
and
pop
hlt
mov
repnz
lret
mov
pop
fwait
aaa
and
cmp
dec
test
jg
sbb
mov
movsb
fnclex
xlat
test
repnz
add
shlb
or
scas
in
test
xor
fsqrt
jno
out
pop
daa
pop
sbb
out
xchg
das
adc
inc
push
in
mov
mov
imul
mov
jbe
mov
pop
jecxz
xor
sahf
jnp
xchg
adc
jns
stos
sub
sbb
sbb
dec
out
cltd
xchg
notb
add
ljmp
in
and
ja
mov
sub
sub
fs
xlat
add
imul
imul
addr16
add
daa
arpl
enter
pop
scas
mov
scas
shlb
mov
mov
mov
add
pop
inc
addr16
arpl
outsl
das
mov
mov
mov
lea
nop
mov
mov
stos
push
mov
int
mov
mov
mov
fiaddl
cmpsb
cltd
jns
push
popa
lret
cmpsl
iret
cmp
push
cwtl
jmp
sub
fwait
jo
enter
xlat
add
shll
dec
repz
or
pusha
repz
fs
cmp
push
dec
and
pop
mov
aam
lret
mov
aas
bound
pop
xor
insb
cmpsl
mov
sub
jnp
cmc
push
or
or
test
daa
mov
fstpt
mov
fwait
das
xor
out
mov
fwait
daa
or
lods
int3
mov
push
jp
lock
shlb
mov
jecxz
mov
ds
or
fildll
mov
stc
xor
sub
or
jge
xchg
mov
and
jp
jns
inc
in
mov
scas
mov
jecxz
in
mov
fmulp
mov
add
mov
inc
repz
jge
idivb
insl
inc
pop
adc
jle
mov
mov
cld
mov
lahf
iret
int
shll
push
rorb
daa
push
inc
nop
cmpb
fmulp
add
push
jnp
lcall
cmp
stc
sbb
cmp
int3
mov
shll
xchg
mov
cltd
push
popa
repz
and
lock
fs
movsl
test
arpl
inc
mov
pop
mov
xchg
mov
xlat
ljmp
mov
mov
fcmove
fcoms
out
push
mov
xlat
mov
mov
stos
negl
popa
pop
push
sub
movl
cmp
mov
jns
ja
sub
push
mov
mov
jmp
dec
mov
fadds
dec
sbb
pop
shrb
cmp
setp
jbe
outsl
dec
jns
movsb
xlat
mov
mov
xor
lods
mov
lahf
out
jge
outsl
ss
or
je
icebp
xchg
lods
inc
out
in
jl
lcall
shlb
aam
mov
pop
shl
sub
sahf
sbb
fadds
imul
lea
sbb
mov
cvtpi2ps
mov
fistps
mov
xchg
popf
imul
ja
inc
push
rcrb
sbb
adc
xorb
lahf
jmp
lods
sbb
test
or
sub
sub
jle
sbb
movsb
aaa
aas
pop
cmp
aam
mov
cmp
mov
push
icebp
flds
pop
xchg
das
pop
lock
pop
lods
fsubl
imul
jns
les
cmpsl
fldl
movsl
insl
mov
push
inc
enter
mov
or
aas
add
mov
inc
out
sbb
mov
repnz
mov
rol
dec
push
pop
mov
jg
sbb
mov
push
test
mov
add
jns
inc
int
mov
jne
in
push
es
jnp
xlat
mov
cwtl
mov
iret
aam
adc
cwtl
add
or
sbb
test
cltd
push
gs
dec
arpl
mov
insb
jle
xor
pop
dec
mov
mov
mov
and
xor
addb
mov
into
or
sbb
pop
cmpsl
mov
insb
pop
outsb
push
and
or
mov
or
xor
lock
cmp
dec
sbb
pop
lret
mov
mov
or
test
imul
and
jae
mov
out
adc
xor
and
mov
pop
push
adc
cmp
xchg
mov
mov
aad
mov
btrl
xacquire
add
fistps
daa
mov
and
adc
pop
cmpsl
hlt
lahf
lds
cltd
push
jnp
in
imul
sbb
push
repnz
sarb
mov
test
dec
xlat
call
inc
popa
aaa
pusha
or
adc
mov
repz
mov
stos
divb
pop
cmp
sbb
cmp
mov
shl
mov
pop
bound
jecxz
sub
inc
outsl
pushf
adc
adc
scas
rcrl
pop
aad
push
ret
push
mov
sub
movsb
scas
sub
cmp
mov
mov
mov
sub
andb
movsb
sub
in
pop
jnp
jmp
cwtl
push
and
mov
add
imul
inc
ja
int
loopne
add
cmp
mov
xlat
fdivrl
inc
or
xchg
inc
movsl
out
sub
adc
mov
cmp
loopne
mov
leave
add
dec
mov
xor
pop
adc
inc
xchg
xchg
cmp
ljmp
lret
rclb
nop
cmp
sarl
mov
sarl
dec
and
shll
bound
cmpsl
test
cli
imul
icebp
cmp
sub
popa
mov
and
loop
in
dec
daa
push
mov
mov
mov
negl
and
xlat
xchg
cmp
cmp
ljmp
jno
inc
syscall
cmp
mov
inc
test
lea
fisubrs
sbb
test
mov
loopne
xchg
mov
out
push
mov
mov
popf
or
mov
mov
sbb
divl
dec
or
jnp
mov
lcall
sbb
out
mov
or
mov
jge
arpl
mov
fcmovnb
sub
xchg
out
test
in
insb
jns
lods
fstpt
dec
cmp
and
jns
aaa
sub
cli
add
les
mov
insl
out
mov
aam
rorb
mov
stc
icebp
inc
sbb
mov
cmp
mov
and
scas
mov
mov
jl
lods
push
jne
xor
pop
xorb
mov
inc
xor
mov
in
fwait
mov
lock
jge
pop
sarb
pop
insb
insl
mov
xor
jl
and
or
cltd
sub
mov
jae
cmp
xchg
jg
and
pop
mov
sub
aas
cmpsb
adc
cmpsl
mov
test
xor
les
lock
mov
mov
repz
jp
cmp
fwait
mov
adc
mov
into
lcall
lcall
and
mov
sub
into
pop
lds
jb
shrl
mov
test
pop
jno
cmpsl
insb
mov
imul
dec
push
pop
mov
add
pop
nop
fwait
inc
mov
jns
enter
stos
mov
das
add
mov
subl
cmp
shrl
test
and
dec
imul
cmp
mov
mov
xchg
mov
mov
rclb
movsb
ret
test
sub
shr
cmp
rorb
mov
lret
cmc
int3
push
lock
push
and
repnz
mov
mov
mov
jne
scas
stos
lahf
cwtl
xchg
xchg
loopne
test
cwtl
je
xor
mov
mov
dec
mov
pusha
cmp
iret
andl
aas
ret
mov
mov
out
outsl
bnd
jmp
dec
lcall
das
repz
js
and
dec
mov
adc
iret
mov
fs
sarl
pop
sub
fcomip
jns
jae
out
stos
jno
shr
sub
popa
xlat
cmp
in
popa
insl
and
fs
and
mov
aam
lea
stc
adc
jl
ja
shrb
push
test
cmpsl
aad
sbbl
sub
sbb
out
bound
insb
cwtl
push
and
or
sbb
push
mov
orb
pop
jns
mov
and
cmp
nop
jne
int
mov
xchg
sub
imul
mov
jg
push
imul
xchg
movsl
cmp
sbb
jmp
leave
hlt
push
out
stos
mov
ja
add
sbb
mov
test
pop
mov
mov
and
aam
push
shl
out
fimull
xor
or
into
ret
pop
mov
jbe
ljmp
mov
mul
lcall
inc
data16
loopne
ret
jne
fisttpll
mov
mov
pop
fwait
sub
scas
push
roll
es
loop
jae
shrl
loop
aam
sub
inc
mov
test
inc
mov
popf
sbb
addr16
xor
or
cs
mov
adc
je
adc
sbb
adc
mov
inc
sub
cmp
test
cmpsl
pop
inc
hlt
cmp
mov
notl
lds
xchg
mov
ffree
sub
mov
loopne
js
into
mov
push
test
cmp
leave
scas
popl
cli
inc
inc
xor
mov
popa
mov
aad
cwtl
jbe
iret
test
mov
ljmp
mov
xor
or
imul
and
xlat
jno
scas
sahf
mov
call
pop
scas
iret
sbb
sti
ret
gs
xor
mov
mov
jmp
es
movsb
mov
xchg
mov
lret
fbld
jns
int3
in
jle
adc
mov
std
sbb
scas
cmp
mov
mov
aad
repnz
mov
movsb
loop
inc
jae
push
xor
adc
mov
mov
fwait
adc
mov
jae
cmpsl
xor
mov
aad
sbb
mov
jns
leave
mov
jno
mov
int3
push
push
jo
pop
mov
and
inc
arpl
adc
shrb
inc
mov
push
mov
xor
lods
adc
sub
adc
cwtl
push
push
outsb
mov
mov
lock
movsb
mov
xorb
xor
idiv
xlat
xchg
lods
pop
mov
inc
inc
addr16
push
xlat
movsb
popa
adcl
adc
mov
cwtl
sub
cltd
push
push
shrl
sbb
push
sub
insb
into
sbb
jp
and
pop
mov
lock
pop
decl
cmpsl
fwait
adc
pop
push
call
add
jnp
add
test
push
sbb
cmp
push
divl
xor
imul
mov
jmp
jnp
dec
mov
stos
cmp
aam
xor
daa
lods
imul
or
std
push
inc
cmp
out
ficoms
push
outsl
aaa
ja
test
jmp
stos
adc
addr16
lcall
testb
mov
cmp
mov
mov
imul
mov
addr16
sub
mov
shl
gs
push
shlb
xor
test
cwtl
xchg
adc
mov
xchg
jbe
fdivs
sysret
mov
inc
cwtl
inc
subl
test
addr16
scas
pushf
mov
iret
call
ja
pop
xlat
add
and
icebp
loope
dec
jb
sbb
fst
pop
cmp
inc
imul
cmp
dec
mov
xlat
pop
adc
mov
xchg
stos
popf
pop
les
and
std
mov
ss
aaa
jbe
into
cmp
out
pop
jno
sub
scas
movsl
xor
pop
push
mov
aaa
clc
jle
xchg
mov
xchg
repnz
xchg
mov
stc
mov
std
cmp
xor
imul
pop
jnp
mov
jae
mov
cmc
mov
xchg
mov
push
mov
cmp
cwtl
mov
sub
repnz
add
mov
vunpckhps
sti
mov
dec
scas
lret
cmp
push
jmp
sub
jg
push
mov
mov
movsl
movsb
mov
xchg
mov
fwait
lods
sbb
add
mov
mov
pop
mov
mov
loope
mov
cmp
sub
lahf
mov
jae
pop
push
mov
mov
loop
dec
jae
lea
lds
mov
or
cmp
shll
mov
jae
and
ja
pop
xor
fwait
inc
add
mov
aaa
into
fsubrs
dec
jbe
mov
cmp
int
cmpl
movsb
arpl
mov
idivb
mov
pop
xchg
ds
and
cmp
cmp
imul
rcll
das
inc
fbstp
pop
out
pop
xchg
lods
mov
pop
stc
add
ret
sbb
test
fisttps
xor
lahf
test
jl
ret
out
shld
mov
popa
adc
cmpsb
xor
lds
enter
mov
stos
mov
test
dec
aam
stos
test
aas
mov
xlat
inc
and
mov
shll
xchg
addr16
test
icebp
xchg
js
inc
repz
test
jno
fwait
xor
xor
add
test
cmp
cmp
mov
out
jnp
ja
xchg
mov
xchg
aad
test
sbb
and
xor
mov
mov
pushf
xor
xor
fsubrs
jecxz
push
sub
xor
subl
mov
jae,pn
cld
test
push
stos
jg
in
call
fwait
mov
test
jg
xchg
mov
xor
xchg
push
inc
pop
pop
test
and
ljmp
xchg
sub
mov
mov
xorl
and
xchg
dec
mov
lock
andl
and
call
cmp
in
mov
xchg
jp
ret
xor
cwtl
addr16
fcmovnu
push
fistpll
pop
rcll
aad
testl
jg
push
lods
imul
cld
lods
aas
mov
jle
pop
push
mov
fwait
ljmp
out
add
scas
inc
adc
ds
sub
xchg
lods
sub
not
movsb
xchg
ljmp
out
cli
ret
cmp
aam
inc
mov
repnz
and
mov
inc
or
iret
dec
enter
mov
xor
hlt
out
pop
mov
jns
rorb
ss
repz
and
mov
out
call
or
movsl
mov
ljmp
lock
mov
and
in
xchg
cwtl
out
cmp
xchg
xchg
mov
nop
inc
insb
imul
ret
xchg
xchg
mov
faddl
dec
dec
mov
jb
lret
arpl
stos
sbb
push
lods
and
xlat
jne
mov
insl
and
pop
adc
lcall
sbb
inc
add
mov
jl
icebp
cmpb
aaa
stos
mov
adc
movsb
mov
popf
movsl
xlat
xor
dec
jl
clc
scas
arpl
fwait
cmp
push
incb
mov
adc
stc
pop
decl
mov
jo
pop
leave
mov
mov
les
call
sbb
xor
push
mov
pop
add
push
or
rclb
lea
and
add
xor
adc
pop
push
mov
pop
mov
push
aas
push
and
add
xlat
mov
inc
dec
call
mov
push
test
mov
and
cmpsb
je
rcll
cmp
ret
mov
and
cmpsb
xlat
pop
and
mov
xchg
rolb
xchg
mov
lods
sub
cmpsl
out
je
push
jnp
repnz
andl
mov
xchg
nop
xor
xlat
xchg
out
stos
icebp
push
pop
push
sub
scas
jg
xor
jns
mov
roll
out
xor
arpl
outsb
fisubl
mov
addr16
jg
pop
xor
out
cmpsl
lock
outsl
scas
pop
cltd
sahf
int3
mov
push
call
pop
daa
pop
scas
testl
loope
xchg
enter
xor
adc
push
push
push
aas
jge
cmpsl
rol
imul
xor
fwait
leave
jmp
stc
sbb
movl
in
pushf
fwait
adc
dec
ret
fs
movsl
cltd
jne
jae
fisubs
sbb
mov
js
add
mov
jae
repnz
adc
push
movsl
pusha
add
in
clc
mov
sub
push
and
mov
ret
sarb
fstpl
push
inc
cmc
rolb
mov
in
cld
ljmp
dec
imul
sub
mov
push
mov
out
gs
leave
mov
inc
mov
xchg
int3
add
mov
rcl
xor
add
jg
or
repnz
call
aaa
xchg
ja
stc
mov
dec
mov
adc
pop
cmpsl
pop
mov
pop
sbb
xchg
and
jnp
or
mov
sub
stos
or
test
pop
jb
sbb
mov
dec
cmp
ljmp
mov
xlat
pop
dec
pop
cltd
fwait
xor
movsl
test
pushf
sub
mov
mov
fadd
and
test
cmpb
adc
push
ds
mov
mov
dec
mov
xchg
jno
jae
mov
test
cmpsl
jg
data16
xlat
jl
push
scas
fidivl
popf
test
pop
in
mov
sub
outsl
std
rclb
sti
movsl
pop
mov
pop
push
xchg
mov
adcl
inc
xor
mov
or
rcll
lahf
push
sbb
cltd
fwait
inc
clc
mov
xor
mov
mov
cmc
out
push
dec
aam
inc
mov
sbb
xchg
aas
pop
mov
ja
mov
fidivrs
jbe
pusha
cmp
sbb
clc
repnz
andb
mov
sbb
cmpl
inc
in
xor
inc
nop
mov
shll
mov
pop
jnp
cmp
fists
dec
mov
sbb
push
cmp
shl
test
mov
testb
adc
fdivrl
je
cmpsl
in
mov
repz
dec
mov
movsl
sbb
in
cmp
lcall
dec
cli
xchg
xchg
les
in
push
inc
adc
lcall
loope
mov
cltd
bnd
jbe
gs
fwait
or
pop
mov
mulb
mov
popa
mov
pop
sub
out
fcmovne
sbb
mov
push
and
pop
mov
xlat
cltd
andl
and
scas
and
or
pop
mov
mov
test
lock
lahf
mov
dec
xchg
xchg
scas
stos
dec
mov
sub
lret
les
mov
adc
mov
xor
sub
push
mov
imull
repz
xlat
xlat
mov
out
lcall
dec
mov
bt
xlat
inc
out
sub
mov
cmp
push
mov
lahf
jnp
fdivl
aaa
inc
aas
addb
les
mov
scas
push
inc
push
bound
mov
mov
ljmp
scas
jno
scas
mov
js
mov
leave
imul
lea
add
and
adc
mov
mov
push
leave
mov
cmp
inc
mov
mov
lret
data16
mov
or
xlat
cmpsl
pop
in
sub
jle
scas
push
lods
mov
aas
in
jmp
loop
mov
xchg
sub
mov
or
aad
jo
cmc
add
fsubrs
mov
negb
pop
jg
pusha
push
or
insb
cmp
xchg
mov
pop
ljmp
xchg
loopne
test
adc
pop
aad
imul
dec
test
scas
sbb
xor
dec
cltd
stos
mov
xchg
in
or
xor
int
xchg
push
mov
mov
mov
add
test
aaa
pop
test
jmp
pop
adc
mov
es
ret
mov
stc
inc
mov
ret
mov
into
jb
lds
xchg
mov
push
ja
mov
add
inc
and
pop
leave
jl
int
mov
pop
ljmp
test
lods
jns
loope
loop
mov
mov
call
scas
ret
je
stos
cwtl
pusha
push
aad
dec
mov
cmp
cmpsl
stc
stos
pop
cmp
pop
cmpb
cmpsl
add
xchg
call
or
loopne
push
and
pusha
mov
cmp
fwait
xor
mov
and
jae
insb
out
pop
cmp
les
xchg
sbb
add
xchg
or
cmp
test
ja
aas
loope
sub
xor
cmp
addr16
lds
pop
pushf
mov
and
loop
fiadds
mov
dec
mov
xlat
repnz
and
adc
push
mov
lcall
js
cmp
popf
pop
or
mov
loope
enter
aas
or
cmpsl
xchg
adc
scas
mov
movsl
int
add
outsb
lods
mov
icebp
xlat
pop
dec
jns
shlb
bound
ss
inc
add
mov
loope
lock
jae
cmp
imul
enter
mov
and
loop
sub
mov
sbb
hlt
pushf
stos
cmc
adc
std
stos
xor
in
je
mov
cs
mov
sahf
cwtl
scas
test
cli
mov
sub
jle
in
sbb
xchg
sbb
adc
cmpsl
pop
sub
mov
cmc
movsl
push
ljmp
cmp
inc
divl
or
enter
aaa
adc
mov
lock
push
mov
xchg
mull
or
iret
jno
sub
cmp
jecxz
dec
mov
ljmp
or
out
fidivl
mov
arpl
xlat
aas
jl
rcrl
mov
test
push
mov
data16
and
xorl
mov
xor
xchg
mov
push
insb
jl
call
scas
add
test
sub
sub
divl
sub
xchg
decb
insl
aad
push
jo
mov
and
sbb
jae
push
loopne
aaa
cmpsl
xchg
jnp
outsl
test
orb
imul
popf
leave
adc
jecxz
daa
test
xor
and
mov
push
jnp
mov
outsl
push
xchg
cmpsl
cmp
rolb
cmp
int
adc
adc
sahf
push
cltd
loope
xlat
cmpsb
cltd
push
xorb
mov
cmpsl
sub
inc
movsl
push
insb
fsubl
sbb
cwtl
push
rol
mov
in
test
movsl
sbb
adc
std
mov
sahf
and
mov
cmp
xor
rolb
cmc
cmpsl
mov
xor
mov
lods
mov
inc
push
cmp
ficomps
mov
jo
fwait
jnp
jmp
adc
mov
leave
xlat
and
mov
jecxz
mov
jge
scas
mov
test
fstl
ja
mov
mov
jecxz
lds
stos
add
mov
fidivrl
mov
mov
cwtl
pop
xchg
or
push
mov
subl
xor
or
cwtl
xor
arpl
fldcw
mov
int3
jb
cmp
push
cld
mov
enter
stc
cli
pop
mul
adcb
ret
xor
test
mov
sti
loop
mov
cmpsl
pop
xor
fstpt
movsl
mov
js
sahf
cltd
cmp
mov
mov
lods
aam
movsl
andl
add
cld
mov
mov
rol
lock
mov
xlat
popf
cmpsl
pushf
mov
test
enter
add
test
or
xchg
push
gs
bound
test
das
scas
hlt
mov
pop
jecxz
push
mov
add
lods
adc
jb
aas
insb
cmpsl
cmpsl
loopne
fiadds
cmpsb
jnp
shlb
mov
push
sub
test
mov
addr16
imul
fcomp
mov
cmp
icebp
cmp
mov
or
mov
push
mov
jne
andb
mov
push
or
ljmp
int
lea
lret
je
shll
test
sub
and
sub
cmpsl
xchg
lock
push
std
aad
scas
stos
cmp
fnstcw
xchg
mov
sub
aam
aaa
daa
lock
dec
mov
sahf
mov
test
jb
bound
sub
insb
mov
jmp
or
pop
mov
jp
incl
add
sbbl
xor
test
int
scas
pushl
adc
mov
jl
mov
ja
xchg
sbb
arpl
mov
and
or
jo
xor
gs
jnp
sub
mov
stos
add
push
sbb
fisttpl
xor
pop
sbbb
push
lcall
nop
dec
xchg
enter
xlat
or
jl
in
cmpsl
cmpsl
cmp
ss
mov
xchg
adc
cmpsl
xchg
mov
adc
mov
rorb
mov
loop
xor
clc
js
add
push
or
jo
or
ret
mov
mov
pop
and
test
mov
enter
test
leave
mov
loop
lret
adc
mov
add
int3
jl
push
jmp
je
ds
mov
pop
mov
repnz
jge
cmp
jecxz
movsb
mov
cmc
or
inc
cmp
pop
inc
icebp
loop
cld
xchg
dec
aam
pop
in
in
es
mov
movsl
inc
aas
mov
mov
pusha
dec
int
cmc
mov
jmp
fisttps
jp
xchg
sub
adc
jnp
mov
mov
sbb
aas
adc
xchg
movsl
lods
mov
lea
push
mov
xor
xchg
pop
mov
mov
dec
push
aas
or
in
nop
mov
negb
out
pop
push
cmc
push
mov
test
inc
jecxz
pop
test
or
lret
loope
mov
cmc
jg
outsl
xor
sahf
outsb
fsts
ret
bound
rcl
nop
addr16
in
add
xor
cld
jecxz
jb
mov
mov
mov
pop
in
pop
imul
push
addr16
in
mov
dec
and
sub
xor
iret
or
cmp
rcrl
mov
test
arpl
cmp
xchg
mov
cmp
pop
out
pop
ljmp
jle
loope
cmp
mov
mov
or
hlt
test
ret
xchg
mov
ds
push
mov
xorb
mov
cmpsl
push
inc
adc
push
cwtl
or
and
mov
stos
mov
out
stc
fsubrl
mov
cld
clc
xchg
inc
jmp
mov
pop
fbld
cmp
icebp
mov
fcompl
mov
mov
repz
mov
sti
pop
xchg
cmpsl
ret
push
dec
lods
test
push
sbb
cmp
js
adc
sub
add
scas
cwtl
loopne
cmc
adc
cmpsb
xor
test
push
xchg
xchg
in
imul
mov
adc
cld
xorb
pop
mov
sahf
fidivl
jae
mov
xchg
mov
and
addr16
out
lcall
jno
add
xchg
jp
xchg
inc
mov
inc
or
fcoms
jnp
pop
fidivrl
inc
mov
and
leave
cld
pop
ror
jbe
dec
jae
stos
ds
popa
fs
daa
lods
sbb
and
test
inc
mov
mov
pop
or
and
sbb
data16
iret
shl
fidivs
mov
dec
lock
jno
mov
shl
fldl
cmp
in
mov
cmc
icebp
fsub
dec
repz
into
cmp
mov
mov
sub
xchg
ds
leave
jecxz
arpl
or
mov
or
xchg
mov
xchg
std
mov
enter
outsb
mov
add
scas
movsb
scas
repnz
aas
xor
xlat
cltd
movsl
mov
in
adc
mov
pop
cmp
rcll
daa
mov
gs
inc
clc
into
cmp
scas
aaa
cmp
in
lahf
jl
cmp
in
iret
mov
xlat
xchg
adc
popf
mov
mov
pop
shll
ja
mov
pop
xor
mov
mov
loope
mov
enter
pop
pop
ror
cmpsl
cmp
mov
sti
mov
in
xor
mov
push
mov
aam
mov
shl
mov
out
mov
testb
mov
cmpsb
ja
pop
jns
push
shrl
push
pop
int3
mov
hlt
pusha
or
dec
xchg
mov
imull
push
sub
push
mov
sbb
or
mov
mov
in
cmpsb
mov
movsl
mov
jae
mov
xchg
dec
inc
ret
std
sbb
mov
lods
xchg
movsl
push
outsl
negl
push
mov
push
adc
add
inc
and
cmp
ret
idiv
pop
and
in
mov
push
sbb
shrl
sbb
add
out
scas
insl
insb
std
cmc
mov
cmp
sbb
cwtl
stos
cmp
xchg
les
fdivrl
jne
xlat
push
mov
movsb
out
lds
push
test
xor
cwtl
mov
mov
jg
push
and
daa
mov
lret
les
mov
inc
adc
pop
dec
jne
scas
add
cld
adc
xchg
inc
loop
mov
push
daa
loope
mov
lods
cwtl
cltd
jl
inc
jmp
fsts
cmpsl
mov
loope
mov
and
xchg
test
cmpsl
out
jo
cmp
jmp
cmp
dec
xchg
push
cmpsl
call
rol
cld
mov
jle
jne
sets
daa
enter
addr16
jne
xlat
mov
insl
mov
rcrl
stos
adc
std
loop
stos
mov
mov
pop
mov
loopne
rcrl
inc
aad
aas
out
cmpsl
jge
insl
jb
daa
mov
notb
aad
stc
loop
arpl
push
pop
shlb
iret
rcl
push
pop
xchg
ret
mov
inc
negl
mov
repnz
outsb
addb
mov
insl
pusha
fidivrl
sbb
test
movsl
pop
sbb
cmpsb
mov
mov
mov
sbb
xor
xchg
std
push
jnp
imul
sub
shl
mov
test
adc
into
cmp
mov
push
dec
mov
adc
xchg
in
leave
or
cmpl
mov
dec
xorb
dec
mov
push
push
out
ret
xor
cmp
lods
ss
mov
jo
dec
sbb
repnz
add
sarl
sbb
adc
popa
jno
or
or
push
inc
mov
push
sbb
enter
scas
mov
fsubl
mov
addr16
sbb
dec
hlt
mov
in
lods
xchg
mov
jge
fildll
sbb
xor
fldlg2
xchg
mov
ret
add
xlat
jg
xor
cmpsl
mov
in
sub
pop
lret
in
into
xor
hlt
mov
ss
flds
lret
fs
aas
jle
shlb
mov
push
frstor
rcll
mov
pop
and
mov
mov
mov
push
pop
sahf
mov
andl
test
push
or
push
or
push
add
jnp
sub
rcl
mov
mov
push
mov
sbb
xlat
mov
inc
push
ficomps
repnz
or
mov
int
in
mov
aas
aam
pop
lahf
mov
lret
test
jns
pop
jg
stc
add
mov
pop
roll
cmp
loope
std
push
cltd
pop
mov
cmp
xchg
and
xor
jne
inc
repnz
mov
jae
sbb
mov
pop
sub
cmp
mov
xchg
xor
test
bound
cmc
scas
aas
sub
out
sub
popa
jbe
not
fiaddl
aaa
mov
mov
push
in
inc
mov
and
push
aas
test
sbb
jb
sbb
lahf
mov
stos
xor
lcall
mov
xchg
mov
mov
pop
adc
mov
mov
add
mov
mov
je
ret
mov
mov
mov
adc
loop
les
sbb
int3
ss
add
mov
cmp
push
adc
insb
mov
nop
push
jmp
mov
fwait
cmc
inc
or
out
pop
mulb
es
into
int3
scas
xlat
mov
jo
mov
shlb
cmpsb
roll
mov
sarl
call
aad
not
mov
xchg
js
mov
pop
scas
mov
fildl
stc
mov
sbb
into
mov
xchg
mov
mov
shll
xchg
dec
push
push
ja
xlat
xor
sub
ret
push
mov
movsb
sbb
enter
gs
test
in
cli
mov
push
bound
jne
pop
test
mov
pop
shll
mov
mov
les
mov
or
mov
mov
loopne
aas
movsl
je
mov
lods
jmp
sbb
das
or
jle
cwtl
stos
jmp
and
jb
mov
rolb
mov
mov
jno
mov
cmc
rcll
cmp
mov
cmpb
iret
mov
cmp
sbb
test
ds
mov
dec
ret
cmp
icebp
mov
mov
xchg
sbb
and
cmpsl
adc
stos
jnp
in
cmp
shr
mov
fcomi
push
test
xchg
fyl2xp1
jb
xor
fcompl
insb
sbb
xlat
xlat
aaa
or
ljmp
sbb
mov
mov
sub
push
scas
push
mov
push
mov
fidivrs
mov
inc
xor
daa
mov
mov
aam
movsl
fwait
inc
rorl
xor
outsb
cwtl
push
sbb
fstp
aas
cmp
repz
pusha
pop
mov
mov
rorb
in
cmc
xlat
sub
xlat
dec
ljmp
fwait
or
pushf
pop
scas
pop
ret
clc
shrb
mov
push
pusha
outsb
mov
adc
pop
nop
or
pop
leave
sub
aam
pop
fwait
cmpsl
cltd
pop
or
scas
mov
sbb
scas
rol
out
fistpl
mov
test
jle
cmc
inc
xlat
fadd
inc
cmpsl
sub
jne
call
imul
out
out
stos
int3
mov
ja
mov
imul
sbb
lea
loopne
arpl
pushf
test
cmp
bound
dec
outsb
pop
mov
adc
jecxz
mov
fnstsw
inc
rcrl
sahf
xchg
mov
push
lock
aas
xor
cmpsl
jbe
ljmp
fwait
addr16
mov
xor
lods
pop
xlat
push
ss
xor
push
testl
cmpsl
ss
jp
popf
mov
dec
outsb
std
fcomp
mov
mov
mov
mov
sub
xchg
pop
shlb
cmp
out
test
lods
pop
and
jmp
xor
mov
sbb
mov
and
test
in
stos
imull
clc
sti
xor
mov
xchg
in
scas
cmp
adcb
mov
aad
mov
cltd
notb
dec
mov
jg
scas
std
mov
lret
xor
mov
aaa
out
sub
sti
mov
aas
jne
xchg
mov
push
mov
xor
pop
add
scas
and
or
cmpl
pop
push
sub
test
cmp
xchg
pop
imul
mov
lock
mov
sbb
inc
push
sub
mov
fs
ja
loopne
dec
inc
in
shll
or
enter
sbb
inc
inc
popa
loop
mov
or
aaa
push
jb
movsl
insb
xor
xor
movsb
push
and
ficomps
xchg
mov
cltd
aam
push
xchg
mov
mov
int
inc
mov
mov
call
andl
mov
mov
jno
push
push
xchg
mov
and
addr16
movsl
into
mov
push
jo,pn
cmc
ja
clc
repz
add
mov
inc
push
adc
in
jge
cltd
add
pushf
aas
data16
cmpsl
sub
ret
xchg
aam
mov
push
mov
mov
fbld
sub
bound
int3
imul
push
xlat
fldenv
mov
dec
mov
push
mov
xchg
mov
fs
jg
jnp
adc
scas
jno
imul
ret
in
inc
dec
push
divl
repz
adc
in
cmc
addr16
adc
loopne
enter
xor
ss
data16
xchg
jge
mov
or
cmpsb
mov
aas
paddw
rcr
cmp
xchg
pop
cmp
xchg
dec
stos
lcall
mov
jnp
fst
mov
adc
jns
cmc
clc
mov
cmpsb
mov
stos
dec
ds
cmc
cltd
xlat
test
mov
lea
jns
jo
outsl
stos
bound
push
jne
in
jmp
outsl
hlt
pop
inc
mov
push
scas
mov
and
mov
stos
aaa
adc
xchg
add
test
fwait
test
cmpsl
mov
daa
push
cmp
sub
lock
mov
xorl
cmpsl
mov
popa
lods
loope
sarl
mov
pop
sbb
jo
lret
xor
push
mov
cmp
cltd
mov
shlb
mov
mov
iret
lahf
sbb
in
cld
mov
or
xlat
outsl
cmp
inc
insb
insl
mov
sub
dec
add
pusha
ret
cmpsb
loop
lret
adc
sbb
xchg
mov
fistl
mov
rcl
push
or
lock
pop
cmpsb
nop
jl
out
cmpsl
decl
mov
mov
pushf
mov
sti
xor
cmp
test
iret
mov
sarb
jno
int
scas
mov
das
sub
mov
mov
mov
fucomp
push
or
scas
jns
adc
out
stos
inc
pop
arpl
ljmp
mov
scas
mov
inc
sub
fisttpl
xchg
add
ds
adc
inc
ljmp
push
mov
dec
das
jecxz
sahf
pop
negl
add
idivb
into
jno
mov
inc
mov
xchg
ficompl
fwait
sub
cmp
pop
scas
xor
cmove
loopne
cmp
mov
jl
sahf
pop
xchg
sbb
cmp
mov
cmp
jnp
jns
mov
rorl
lea
xor
dec
int
in
test
push
sahf
scas
movsb
jmp
cltd
dec
loope
mov
jle
mov
aaa
and
lods
or
ja
xchg
insb
pop
cmc
test
bound
int3
pusha
mov
xchg
dec
pop
fdivrp
cmpsl
dec
sbbb
pushf
mov
fsubrs
and
mov
outsb
ds
test
pop
jns
xchg
movsl
mov
in
xor
jp
cmp
mov
xlat
stos
andb
arpl
mov
lret
cli
rolb
jnp
sub
loope
call
mov
cmpsl
xchg
sbb
loope
jge
sbb
dec
sti
adc
xlat
pop
mov
mov
jns
into
mov
jnp
mov
mov
ljmp
lock
fadd
xchg
icebp
cmpsl
dec
aam
and
cmp
adcb
fcomps
xlat
test
iret
dec
psubusb
adc
push
in
scas
push
imulw
js
loope
push
stc
sbb
adc
mov
dec
push
xchg
aas
and
mov
cmpsb
pop
scas
ja
mov
pop
xor
mov
test
mov
shrl
adc
push
push
clc
cmp
sub
sub
in
jb
inc
or
jg
jle
clc
cmp
sbb
lods
dec
add
mov
xor
mov
int
inc
push
mov
dec
and
mov
ss
int
mov
xchg
and
mov
sbb
pop
and
ret
pop
pop
daa
cmp
lcall
lahf
outsl
mov
shufps
test
shr
jns
inc
mov
outsl
mov
pop
test
pop
mov
adc
les
sarb
mov
cmp
mov
inc
loop
mov
jno
cmp
jns
enter
out
out
mov
mov
test
mov
sbb
mov
xchg
jmp
jl
sub
mov
loop
push
jns
test
mov
sarb
push
bound
xorl
mov
fcompl
mov
mov
xorl
mov
in
in
loope
cmp
adc
mov
test
aam
dec
mov
push
mov
mov
into
stc
je
repz
test
aas
sbb
mov
mov
mov
push
nop
aas
dec
cmpsl
mov
lahf
mov
mov
ja
push
pop
mov
cmp
subl
jb
imul
jle
push
cld
fisubrs
dec
divb
fldcw
mov
fst
mov
test
xchg
mov
lods
xlat
xor
cmp
es
sbb
pushf
stos
test
mov
mov
xor
mov
loope
jl
ret
add
inc
out
cmp
outsl
test
mov
cmpsb
and
and
in
xlat
ss
mov
xor
or
shll
sub
add
cmpsl
mov
mov
not
and
mov
scas
inc
js
pop
imul
in
out
inc
and
ret
mov
enter
mov
ds
mov
repnz
xchg
ss
out
mov
cmpsb
and
or
inc
ljmp
int
shrb
clc
subl
jg
adc
xor
in
mull
fwait
mov
fstl
mov
xor
pop
ffreep
mov
mov
rcll
mov
mov
fsub
in
in
cld
mov
mov
jnp
xchg
lahf
mov
repz
mov
cmpsl
js
rcll
pop
into
lods
and
dec
push
sub
test
sbb
jmp
sbbb
mov
add
cmp
mov
cltd
lret
stos
sbb
inc
das
pop
lahf
mov
scas
mov
mov
dec
push
mov
mov
mov
shrb
and
and
movsl
dec
and
mov
rcrb
inc
mov
mov
inc
mov
rorb
incl
enter
loop
dec
loopne
clc
icebp
mov
mov
pop
mov
xor
dec
mov
add
lods
mov
pop
adc
sbb
pop
dec
and
rolb
enter
mov
lahf
mov
xchg
cmpsl
sahf
aam
pop
mov
loop
movsl
test
imul
jp
mov
pusha
xlat
ljmp
mov
xlat
xchg
scas
fs
int3
mov
xchg
not
mov
mov
adc
jnp
imul
mov
sub
mov
mov
mov
sbb
js
call
das
adc
or
cmp
shlb
lock
fisubl
mov
mov
dec
cmp
cmp
pop
inc
xchg
xlat
mov
mov
xchg
jo
loop
aas
jmp
add
add
mov
mov
pushf
mov
data16
addr16
lods
loope
loop
mov
jno
outsl
bound
pop
mov
cmp
add
sbb
adc
rcrl
sarb
je
stos
enter
scas
out
mov
out
cpuid
jns
or
lea
and
out
shrb
dec
arpl
inc
adc
adc
andb
xchg
mov
push
scas
cmp
movsl
shl
xchg
scas
ret
loop
pop
dec
xor
mov
cs
repz
ss
addr16
mov
jae
sbb
inc
mov
lods
mov
lahf
mov
fcmovnb
lds
xor
dec
neg
mov
cmp
xor
jae
sbb
jno
cmpsl
out
fistps
js
cld
adc
mov
mov
outsb
stc
loope
mov
add
lcall
push
adc
scas
cmpsl
mov
jmp
push
enter
push
mov
pop
ss
ja
mov
mov
adc
cltd
mov
xchg
mov
std
mov
push
dec
mov
xchg
mov
clc
jb
or
jae
pop
stos
sahf
movsb
movsl
or
loope
inc
xchg
mov
imul
outsb
scas
mov
rol
and
test
xchg
jbe
scas
add
pop
arpl
mov
dec
scas
stos
xor
lcall
jns
sub
jnp
out
push
mov
gs
xorb
addb
lock
cmpsb
mov
mov
out
ja
xor
xchg
inc
or
les
push
mov
mov
dec
jecxz
call
test
mov
mov
fidivl
jge
out
das
clc
xchg
sbb
add
stc
xor
inc
data16
mov
xchg
scas
aas
icebp
mov
stos
xchg
push
fs
ds
scas
sub
push
xchg
cs
sbb
inc
jp
cmpsl
pop
xor
mov
mov
stos
xchg
cmpsl
jb
call
jnp
dec
adc
inc
xlat
ffree
xchg
idivl
and
mov
mov
pop
mov
sbb
pop
je
lcall
push
jno
int
sbb
cltd
inc
clc
mov
inc
xor
add
xchg
push
leave
shlb
ret
sub
pop
sub
mov
adc
mov
rcrl
mov
hlt
in
shrb
pop
adc
mov
lret
mov
pushf
mov
clc
iret
mov
fsubs
stc
andl
mov
lock
and
scas
xor
arpl
divl
les
push
xor
add
fbstp
cmpsl
lds
jl
sbb
sbb
mov
add
cmpsl
mov
mov
mov
sbb
dec
sbb
xchg
jle
mov
fwait
pop
mov
loopne
test
mov
aas
inc
mov
mov
xchg
inc
pop
pop
and
push
mov
int3
lea
lcall
mov
add
loop
and
shll
mull
lcall
nop
sbb
mov
shl
xchg
pusha
cltd
push
in
out
xor
cwtl
add
mov
add
mov
int
xor
andl
jne
adcl
add
xchg
jg
or
sbb
mov
call
add
cmp
repz
cmpsl
fdivp
ss
and
outsb
mov
sbb
xlat
ja
sub
sub
pop
xor
mov
movsl
adc
test
mov
lahf
and
sub
add
ds
mov
cmc
mov
xor
subl
repz
cmc
jo
add
pop
inc
inc
cmpsl
lea
aam
sub
jns
inc
mov
je
std
cs
cmp
test
lds
mov
push
cld
mov
add
bound
shll
addr16
jl
inc
xlat
jmp
jle
xchg
jnp
mov
cli
push
out
cs
xlat
mov
pop
xor
sub
enter
cltd
lea
xchg
adcl
dec
imulb
repnz
mov
mov
xchg
jmp
add
andb
gs
sti
das
mov
sbb
xor
xlat
jg
mov
loope
fucomp
xorl
add
and
mov
inc
push
and
or
fbstp
inc
loop
push
xlat
cmp
orb
popf
clc
mov
shlb
and
movsb
pop
aas
outsb
sbb
ss
mov
fld1
lea
add
negl
mov
in
mov
jp
nop
jae
mov
adc
inc
pop
test
xchg
js
pop
add
cmp
inc
inc
mov
hlt
mov
pop
fcomps
mov
out
mov
mov
push
es
cmp
inc
mov
jb
inc
shll
test
mov
aaa
sub
or
nop
fwait
push
popf
lret
pop
idivb
lods
loope
popf
negl
outsb
mov
xorl
and
jle
xchg
mov
lret
mov
inc
int3
scas
cmp
mov
mov
int
fisttpll
stos
pop
dec
imul
push
mov
movsl
jo
stos
mov
inc
test
mov
enter
jmp
fsubs
jge
or
loope
pop
call
add
lods
push
mov
fisubs
pop
sub
scas
cmpl
push
mov
jns
outsb
push
sub
mov
mov
ljmp
cwtl
push
stc
sub
adc
and
in
mov
mov
test
mov
jge
push
mov
mov
lods
fcoms
enter
imul
jp
call
les
jo
movsb
stc
add
adc
push
cltd
mov
arpl
lahf
jecxz
mov
add
scas
sbb
mov
dec
cmpl
mov
into
or
and
cwtl
jmp
mov
cltd
popa
add
mov
aaa
mov
test
mov
mov
adc
jnp,pn
add
movsl
cmc
mov
cmpsb
jnp
in
adc
xchg
inc
imul
pop
jle
scas
loop
popa
push
dec
xchg
mov
cmpsl
lcall
mov
mov
mov
mov
shll
xlat
pop
cmpsl
out
sbb
add
in
or
mov
sub
xchg
mov
mov
sub
push
adc
fs
adc
xlat
imul
dec
loop
or
xchg
std
mov
movsl
repz
lods
test
dec
sbb
cmpsl
out
fsubl
jnp
inc
pushf
test
scas
fimull
imull
insb
fincstp
inc
scas
loop
stc
mov
xorl
add
cmpsb
mull
adc
mov
or
int
mov
inc
movsb
mov
mov
cmc
adc
mov
enter
leave
test
dec
ret
bound
push
cmp
mov
mov
mov
fldenv
mov
mov
aad
mov
inc
mov
mov
imul
sub
into
cmp
xlat
cmpsl
xor
dec
cmp
mov
dec
sti
mov
mov
xor
popa
xor
mov
cmpsl
in
sub
and
mov
movsb
mov
or
pop
out
stc
xorl
je
popa
sbb
mov
lret
ja
loop
cmp
jle
lods
in
les
pop
xorl
mov
cmp
loop
push
dec
daa
xchg
divb
popf
movsl
and
mov
adc
pop
mov
in
and
loop
shrd
sarb
pusha
jg
and
ds
mov
inc
fadds
jne
pop
pop
mov
jnp
mov
notl
out
xchg
xchg
cmpsl
movl
mov
jne
add
ret
jnp
ds
test
test
lea
popf
mov
sbb
sahf
enter
push
inc
cmp
daa
mov
jl
xchg
test
push
popf
addb
inc
push
repnz
shlb
hlt
cltd
out
mov
xor
mov
lea
pop
loope
mov
in
ret
mov
mov
cmp
pop
cmp
mov
cmp
das
mov
mov
imul
cmp
aam
sub
cmpsl
dec
cmp
or
sbb
fcoms
arpl
sbb
xlat
mov
mov
add
sub
sbb
mov
pop
popf
xchg
sbb
mov
jl
mov
stos
jge
ret
mov
lcall
jno
cmp
mov
cltd
add
scas
cltd
inc
mov
repz
jg
lods
sbb
mov
sarl
jecxz
jb
mov
mov
adc
mov
lretw
imul
mov
aaa
jnp
jge
cmp
in
icebp
mov
mov
sbb
mov
or
mov
pop
inc
sahf
xlat
mov
push
xlat
stos
jo
sub
push
sbb
roll
stos
mov
cmp
lods
xchg
adc
sarl
cmp
bound
and
xchg
repnz
mov
cmc
sbb
test
popa
xchg
imul
scas
inc
mov
movsl
outsb
push
stos
push
loop
fcmovb
push
movsb
ret
xor
negl
dec
pop
mov
add
pop
test
jp
adc
rorl
mov
leave
sub
movsb
scas
sti
aas
dec
in
cmpsl
push
jno
add
jmp
sub
mov
mov
jns
mov
mov
xchg
sbb
or
xlat
push
repz
mov
mov
mov
cmpsb
or
in
xchg
and
clc
cmp
xchg
mov
test
add
pop
mov
call
movl
gs
sahf
and
xor
mov
xor
dec
dec
daa
cmp
sub
mov
pop
or
and
ds
or
sbb
loope
out
jmp
stc
mov
sahf
test
jns
add
mov
imul
jne
push
mov
fildll
sahf
jecxz
mov
mov
push
mov
sbb
and
and
das
add
andl
push
cltd
xchg
mov
clc
ss
xor
mov
scas
or
sub
cmp
loope
arpl
shll
mov
sbb
lcall
divl
jl
leave
movsl
mov
sub
push
mov
mov
mov
fdivs
adc
or
lcall
fdiv
xchg
bnd
pushf
dec
cmp
in
cltd
mov
jl
mov
hlt
jnp
adc
mov
adc
aas
jns
cmpsl
xor
push
mov
stc
out
dec
in
out
fnstenv
xor
xchg
xchg
les
cmpsl
shrl
into
outsb
jmp
adc
and
mov
idivl
pop
and
cmp
or
and
xchg
xlat
lods
sub
enter
xor
mov
adcl
div
shlb
popf
inc
lcall
cltd
lods
jp
mov
mov
pop
std
lods
push
push
dec
cmpsl
test
iret
test
mov
mov
push
dec
cmp
xor
or
ret
push
mov
movsl
sahf
clc
mov
and
lahf
cwtl
rorl
mov
fsub
lea
fwait
pop
lods
mov
test
push
mov
sub
lock
fsubp
and
inc
dec
jno
cld
test
xchg
xlat
repz
mov
aam
cmc
fdiv
std
jns
or
sbb
out
leave
xor
testl
xor
jecxz
int3
mov
or
xchg
jnp
neg
mov
jp
cltd
xchg
mov
rcrl
xor
inc
lods
inc
mov
xchg
cltd
into
iret
adc
inc
insl
jl
or
sub
mov
jg
stos
and
mov
arpl
mov
pop
dec
imul
dec
sub
push
mov
sbb
loop
fisubrl
mov
push
xor
mov
add
mov
and
mov
xor
loopne
mov
fisubs
dec
mov
or
std
mov
cmp
dec
mov
daa
lods
ret
popf
adc
inc
mov
mov
jb
mov
cli
popa
cmp
insb
es
cmp
or
outsl
mov
jns
int
xor
and
dec
jmp
mov
fiaddl
cmp
cmp
mov
mov
insb
cmp
sbb
mov
scas
and
scas
mov
out
pop
test
cmp
sbb
sub
mov
mov
jb
push
mov
push
sbb
pop
out
loopne
adc
push
mov
lock
dec
sti
pushf
fidivrl
js
and
cmp
xor
xlat
jg
loopne
add
int3
mov
ja
arpl
push
std
ja
pop
cmpsb
push
iret
fsubs
addb
inc
and
push
pop
push
and
sbb
out
sbb
and
mov
orb
mov
jp
shll
push
dec
xlat
push
mov
push
xor
prefetcht2
enter
icebp
xor
aad
cli
les
mov
mov
xor
or
jnp
adc
cmp
out
outsb
sub
xchg
test
sbb
mov
fnsave
mov
xor
cmp
xchg
in
mov
cltd
xor
call
xchg
mov
pop
cltd
in
or
fidivl
push
jnp
pop
adc
lock
nop
sarb
imul
and
and
movsl
dec
xchg
sbb
mov
and
sub
mov
aad
jl
xchg
push
inc
mov
xor
repz
xchg
push
cltd
addl
call
popa
mov
and
pop
mov
jnp
dec
mov
dec
pop
mov
movsl
cltd
mov
sbb
fbld
lret
mov
stos
ss
xchg
stos
push
xlat
shrd
mov
mov
jb
fcmovbe
sbb
mov
repnz
mov
xlat
lahf
test
test
push
xlat
leave
inc
mov
push
cmp
pushf
mov
pop
mov
jg
movsb
icebp
int
jecxz
ret
pop
jge
clc
cmpsl
pop
pop
xchg
adc
mov
cmp
mov
push
sahf
addr16
ret
stos
mov
movsl
adc
xchg
test
add
mov
aas
movnti
lods
dec
cmp
xchg
stos
bound
lea
pop
add
imul
mov
and
iret
rcrb
mov
nop
push
jecxz
stos
gs
lret
test
lea
mov
cmp
and
mov
jns
mov
inc
aas
jmp
mov
out
cmpsb
fcomp
movsb
pop
repz
inc
inc
dec
clc
lods
push
enter
mov
xor
mov
shlb
mov
or
jg
into
pop
lock
scas
test
in
jnp
mov
pop
push
cmp
scas
cmc
xlat
or
sti
dec
xor
xchg
sbb
sub
push
mov
fldl
movsl
jecxz
aad
ljmp
mov
ret
shll
negl
jge
pop
jae
mov
addr16
movb
lcall
cmp
arpl
lock
jge
int
mov
xchg
push
in
inc
cltd
inc
lods
stc
jecxz
pop
dec
mov
mov
addb
and
aas
test
lea
outsl
dec
mov
fldt
stc
enter
cltd
xor
stos
jbe
mov
aaa
dec
mov
or
insl
jne
mov
dec
into
mov
negl
mov
aam
sbb
arpl
jmp
outsl
movsb
fisubrs
pop
pop
insb
mov
imull
cltd
sbb
loope
jl
lds
xlat
daa
xor
fisttps
sti
js
shll
add
cld
addr16
add
lods
sbb
mov
add
in
adcb
xlat
lods
dec
jp
inc
mov
cmpsb
mov
scas
add
or
mov
cli
std
dec
jge
mov
jp
mov
test
push
ficoms
mov
jle
loope
xchg
mov
add
jp
mov
in
xchg
cwtl
fnstenv
test
ret
icebp
cwtl
mov
lods
lahf
or
xor
hlt
push
ret
jle
dec
cwtl
and
add
jbe
movsl
add
loopne
mov
lret
inc
cld
aad
scas
test
imul
repnz
mov
stos
cltd
mov
std
push
andl
aaa
adc
push
mov
mov
cmc
scas
mov
sub
test
out
or
pop
xlat
popa
pop
add
inc
cmpsl
xor
mov
call
and
mov
adcb
mov
jle
cmpsb
sbb
jns
pop
mov
adc
jmp
mov
xor
mov
or
mov
stos
cli
sub
hlt
mov
ljmp
mov
icebp
iret
bound
mov
add
or
jns
sahf
xor
and
jg
cmp
scas
cmp
ret
repz
in
push
lods
mov
and
loope
xor
xchg
mov
ds
cmpsb
add
popf
pop
dec
mov
movsl
push
shll
dec
sbb
adc
xor
mov
insb
fwait
test
mov
add
call
mov
sub
outsl
stos
pop
xlat
je
test
mov
mov
mov
dec
jo
test
cmpsb
fbstp
leave
pop
movsb
mov
stos
sbb
mov
jp
std
sub
mov
iret
inc
xchg
pop
mov
push
inc
sbb
push
dec
mov
jno
sub
mov
fcoml
cmpsl
or
stc
ret
scas
mov
mov
push
mul
mov
cmpsl
adc
lcall
cmpsl
fcompl
ds
ret
or
fcom
inc
mov
in
lods
jnp
jg
scas
fistps
adc
mov
and
mov
arpl
xchg
enter
jecxz
adc
test
push
mov
fwait
mov
xchg
and
stos
flds
mov
xchg
js
mov
aam
imul
into
scas
mov
mov
jge
mov
xor
mov
shll
jnp
loope
scas
push
leavew
or
fwait
shrb
into
std
pop
mov
add
popf
je
fisttpll
and
xor
scas
xor
mov
leave
add
mov
xlat
out
fdivr
mov
dec
cmc
sub
mov
aas
aaa
cmp
mov
push
cwtl
push
je
pop
inc
add
mov
rcrl
sbb
cwtl
mov
loop
mov
into
or
adc
jno
pushf
test
xlat
jns
inc
fsts
dec
arpl
inc
lret
lods
fistpl
inc
je
insb
dec
mov
mov
das
daa
sub
lret
mov
xchg
jle
xor
out
mov
mov
outsl
mov
jmp
cwtl
inc
ds
repnz
subl
dec
gs
jns
mov
lods
call
dec
int
cmp
enter
clc
mov
test
pop
and
scas
mov
cmp
mov
jp
test
mov
jb
xor
leave
inc
jl
add
stc
cmp
mov
sti
jb
add
push
cmp
xor
sarl
es
mov
mov
push
ret
popf
sbbl
cmpsl
adc
movsb
mov
or
sahf
xor
divl
jmp
test
push
and
pop
push
jge
lret
pop
cmpps
xchg
xlat
jp
sarb
sti
xor
out
mov
in
jns
shlb
mov
mov
mov
sti
push
int
jae
or
xor
les
xor
and
scas
push
filds
scas
fwait
dec
incb
mov
shrl
and
cmc
movsl
xlat
cmp
je
pop
lods
mov
sub
or
testl
sbb
mov
xor
popa
or
lea
adc
mov
or
testb
lds
pusha
pop
push
mov
aaa
rcrb
outsb
test
mov
movsb
push
lahf
dec
ja
mov
mov
bound
mov
mov
adc
mov
xchg
scas
xchg
mov
xlat
loop
push
idivb
add
mov
daa
xor
pop
pop
shlb
mov
in
jp
push
dec
popf
lea
fnstenv
inc
xor
out
and
and
insb
data16
sahf
stos
inc
add
xchg
jbe
sbb
xor
add
inc
test
mov
mov
js
jae
mov
push
into
xchg
add
jbe
mov
inc
es
cmpsl
sti
sbb
enter
mov
xchg
or
mov
bound
xor
jnp
fcomps
mov
lds
mov
fcoms
negl
cld
lcall
lock
movsb
mov
adc
sub
loope
lcall
ret
movsl
imul
inc
leave
dec
mov
mov
shlb
fadds
je
push
mov
movntps
notb
mov
mov
mov
mov
dec
mov
adc
popf
sbb
loopne
add
leave
cmp
lahf
adc
pop
fsubrl
imul
xlat
btr
mov
jne
push
dec
lret
neg
fiadds
daa
orl
dec
push
cmp
add
or
xor
mov
mov
push
sti
mov
mov
out
ret
mov
arpl
cltd
enter
mov
push
mov
push
cmc
mov
or
scas
mov
cmpsb
jp
enter
inc
mov
loop
pop
popa
loope
scas
je
pop
in
cmpsl
nop
adc
cmovge
mov
ja
jp
or
push
mov
sar
jns
lcall
loope
ds
sbb
shll
int
mov
mov
and
xor
repz
into
in
lret
sbb
mov
hlt
mov
mov
xchg
cmp
iret
inc
xor
fnsave
cmp
xchg
mov
gs
mov
cmp
xchg
or
add
and
jge
xchg
int
shll
dec
mov
mov
mov
add
inc
adc
add
mov
scas
ja
or
mov
popa
pop
outsb
loopne
jnp
fnstcw
stos
jp
cmpsl
xor
jle
inc
mov
push
scas
fstps
sub
dec
test
shrl
jl
repnz
add
mov
scas
jle
clc
int3
sub
movsl
stos
sbb
mov
fisubl
xor
mull
adc
aaa
xor
icebp
xor
out
cmc
xchg
xchg
cwtl
mov
jns
mov
mov
dec
lock
mov
sub
insl
xor
mov
jae
mull
mov
movaps
xchg
bound
push
aad
shlb
fs
loop
js
mov
test
mov
push
and
jecxz
test
scas
jns
xor
stos
sahf
mov
mov
std
movsl
mov
push
dec
lds
mov
pop
stc
xor
mov
cld
mov
fnstcw
xlat
fs
movsl
dec
aas
sahf
sbb
pop
jno
lods
mov
je
aas
add
mov
fcomi
les
cmp
inc
sub
cmpsl
cld
mov
stos
sub
jg
xor
clc
sbb
xor
or
mov
stos
mov
xchg
cmpsl
shl
mov
sub
stc
and
ss
sbb
xor
xor
jb
or
mov
loope
mov
cmp
les
push
movsl
ss
pop
lret
std
sahf
xchg
arpl
xorb
adc
xchg
movsb
cmpsb
insl
add
into
mov
xor
aam
mov
test
pop
into
movsl
or
or
xchg
es
mov
aaa
in
adc
out
pop
fiadds
or
testl
cmpsl
enter
and
aas
bound
cwtl
push
jl
jle
mov
sub
dec
mov
outsl
push
pop
mov
insb
mov
jmp
and
jp
arpl
mov
into
loop
pushf
sub
shlb
xchg
insb
mov
mov
lret
mov
cmp
cmpsl
adc
int3
sbb
int
mov
push
imul
push
clc
xchg
sbb
rcl
shlb
in
sub
sbb
cmp
hlt
and
cmpsl
jbe
push
cmp
aas
jae
cmpsl
insb
push
jns
dec
imul
stc
push
out
loope
sub
scas
jb
jecxz
jnp
mov
xor
fwait
aas
inc
test
lods
aaa
into
mov
jbe
movsl
push
int
cwtl
or
inc
stc
cmp
sahf
scas
ds
scas
sbb
cmpsl
insl
sub
rep
int
loope
mov
jnp
cmp
hlt
push
push
xchg
test
mov
mov
xorb
je
push
mov
add
jmp
inc
scas
imul
sub
pop
fistpll
adc
sbb
mov
xor
xchg
sub
fwait
cmpsl
fildl
add
sub
scas
jno
or
scas
scas
jmp
in
orb
jns
mov
scas
test
fs
inc
mov
cmpsb
stos
mov
adc
push
xchg
idivl
negb
xchg
sbb
mov
dec
inc
mov
mov
xor
xchg
sti
fbstp
inc
lahf
lock
push
stc
fcoms
pushf
out
adc
push
pop
cmpsl
movsl
scas
js
test
xor
arpl
fsubrl
sub
insb
je
xor
sbb
fs
lahf
push
mov
dec
and
lahf
mov
mov
mov
lcall
out
push
sub
xor
mov
sbb
dec
mov
lahf
lret
mov
fdivr
push
insb
xor
imul
and
xchg
cmp
andl
cmpsl
nop
loop
pop
or
and
psadbw
jle
mov
sub
push
cmp
scas
call
into
sbbl
mov
mov
cmp
sbb
sti
xchg
dec
or
js
loop
push
shll
sbb
les
xchg
xor
aam
subb
mov
loope
cmpsl
sbb
gs
nop
mov
fnstsw
sbb
cwtl
mov
inc
sub
in
lods
icebp
jge
cmc
mov
arpl
fcomip
lcall
leave
jne
and
loop
into
pop
and
loope
movzwl
outsl
cwtl
ret
stc
xchg
pop
mov
mov
sbb
fstp
jo
stc
mov
xchg
cmp
out
test
fsubrs
push
scas
mov
test
orb
in
mov
stc
fnstcw
mov
xor
mov
adc
dec
inc
jnp
sbb
xor
popa
insb
pop
push
cmp
inc
sarb
xor
mov
outsb
in
test
cwtl
fcmovnb
sub
repz
mov
leave
sahf
lcall
lods
in
das
mov
jg
add
and
movsl
divb
sub
inc
adc
scas
jae
xchg
xchg
repnz
adc
test
outsb
and
xor
fs
mov
push
clc
mov
mov
cwtl
and
movsl
sti
mov
imul
lock
ljmp
inc
cmc
ret
mov
mov
xchg
cs
adc
inc
dec
push
fcomp
mov
mov
mov
or
mov
lods
and
or
mov
xor
sti
loope
mov
mov
add
testb
mov
xorb
pop
mov
iret
daa
into
mov
xchg
cli
add
push
scas
adc
stos
pop
mov
jp
push
insb
xor
aad
mov
test
xchg
ljmp
mov
inc
push
mov
mov
jns
pop
mov
ds
add
out
stos
lea
jns
mov
sub
sbb
out
and
push
jg
cmp
mov
nop
test
sub
jmp
into
scas
jp
lods
xchg
or
cltd
push
fsubl
in
pop
xor
xchg
xchg
cmpsl
fists
out
iret
popf
ret
push
pop
mov
adc
jl
sub
jns
outsl
shlb
loopne
jge
cwtl
mov
push
jl
lods
insb
mov
or
popa
mov
loope
ja
pop
jecxz
xor
aaa
inc
lahf
and
lds
sub
shrb
movsb
mov
or
cmpb
hlt
popa
mov
xor
loop
sbb
mov
dec
and
sti
inc
cmc
bound
cmp
push
mov
cmp
movsl
cmpsl
jae
fucomip
xorl
add
sub
jnp
and
andb
jl
arpl
xlat
jmp
push
popf
cmpsl
icebp
or
xchg
jp
cmp
adc
mov
mov
sub
arpl
and
mov
mov
out
hlt
cltd
loop
aam
mov
push
jnp
pop
aad
pop
sub
out
cmp
int
mov
scas
rcr
jb
scas
mov
test
mov
mov
or
and
stc
dec
xchg
mov
gs
mov
cmpb
movsb
mov
mov
mov
push
mov
loopne
pop
into
mov
or
icebp
xchg
mov
inc
adc
mov
cmp
jnp
movsl
mov
push
mov
lods
out
or
incl
lahf
dec
push
xor
addr16
leave
movsl
mov
mov
jo
movsb
shrb
std
cmpsb
ja
or
ljmp
adc
xor
mov
xchg
cmp
fs
movsl
cmp
stc
xlat
shlb
mov
arpl
sub
sbb
adcb
xchg
mov
mov
test
cmp
ss
in
adc
lret
mov
mov
insb
mul
push
mov
mov
push
ret
push
mov
mov
gs
cmpsl
movb
mov
lds
arpl
xchg
adc
dec
into
shlb
sub
xor
mov
psubw
ret
jne
cwtl
imul
jge
and
mov
xor
mov
sub
ficoms
pop
hlt
das
cmpsl
rcr
jle
mov
test
pushf
inc
mov
dec
dec
sub
jl
clc
inc
mov
pop
into
adc
push
test
jmp
cmp
add
inc
rcrl
leave
lods
fimull
lods
daa
movsl
shrl
and
fdiv
lods
push
mov
out
cmpl
cwtl
ljmp
fs
lock
jb
cwtl
jl
mov
adc
int
mov
sbb
sbb
mov
clc
mov
jmp
sub
jmp
mov
mov
shlb
loop
mov
push
or
pop
daa
lods
and
inc
daa
mov
cltd
mov
mov
sti
xlat
jo
mov
into
add
inc
xchg
jns
mov
repnz
xor
cli
xor
outsb
dec
cmp
cmpsl
and
cmpsl
jp
enter
pop
lret
dec
xchg
jnp
adc
mov
sub
not
popa
mov
ljmp
ffree
movsl
mov
addb
mov
mov
cwtl
js
movsl
enter
push
pop
mov
movsl
scas
test
mov
xchg
push
sbb
push
add
and
mov
mov
lret
pop
push
std
scas
je
jbe
push
test
inc
bnd
sbbb
mov
mov
xchg
push
cmpsl
mov
push
mov
jb
loop
ja
outsl
sbb
rcl
ficompl
sub
add
sub
mov
cld
jp
lahf
repz
cmp
nop
sbb
push
sbb
push
jns
int
scas
inc
cmp
pop
cmpsl
dec
jb
xchg
jg
mov
insl
dec
mov
jbe
mov
add
js
ret
jl
sub
ret
adc
jne
ja
cmp
cmpsl
sbb
sahf
iret
adc
mov
test
jnp
std
jb
mov
xor
inc
into
mov
sub
xor
lahf
icebp
and
pop
leave
stos
pop
mov
andl
mov
add
cmpsl
and
xor
mov
fistpll
xorl
and
movsb
pop
jmp
std
daa
inc
cmp
adc
rcl
lds
jb
jns
push
push
in
pop
pop
sbb
outsb
dec
mov
aas
dec
repnz
cmp
sti
mov
xor
mov
testb
sub
scas
lret
xor
dec
mov
into
imul
xchg
scas
push
and
daa
inc
adc
xchg
pushf
push
mov
out
rolb
or
push
mov
mov
fimull
roll
lea
pop
xchg
sub
mov
mov
call
mov
movsl
mov
sub
mov
jne
cmc
lock
jmp
push
icebp
lahf
test
cmp
fdivl
or
pusha
mov
adc
insl
xor
jno
mov
xor
pop
dec
and
mov
scas
jns
sbb
inc
jl
out
mov
push
rol
mov
test
jl
jecxz
mov
aad
cmpsl
sub
jecxz
jo
jl
scas
pop
lret
mov
add
or
xor
adc
iret
mov
iret
push
movsl
lock
jb
mov
push
sub
loop
jns
and
cmp
cmc
mov
dec
dec
jecxz
or
lahf
mov
mov
push
jnp
cmp
push
mov
mov
mov
fcoml
pop
stc
push
or
fistps
mov
mov
and
aas
inc
xlat
cmpsl
mov
std
mov
test
or
mov
pop
cmp
mov
push
mov
mov
lods
adc
std
sub
into
test
stos
sbb
sub
push
mov
iret
and
push
mov
fiaddl
lea
pop
xlat
add
xchg
mov
aaa
pop
adc
or
push
mov
cmp
push
out
test
mov
jp
pop
icebp
sbb
in
dec
in
pop
daa
lret
or
das
adc
add
das
or
ror
scas
mov
sbb
or
mov
addr16
push
mov
int
lret
pop
pop
test
mov
loopne
sub
xlat
inc
xchg
loope
fstpt
lds
in
pop
ds
into
jg
adc
and
xlat
cmp
mov
movsl
mov
mov
fs
mov
and
mov
or
imul
mov
add
pop
push
shlb
lds
test
movsl
mov
movhps
dec
outsb
icebp
fdivs
xor
scas
cmp
mov
mov
cmp
inc
orl
cmpsb
mov
mov
mov
mov
and
mov
in
mov
inc
out
insb
test
inc
sub
jmp
icebp
pop
dec
loope
mov
les
xchg
scas
jne
lods
fdivrs
inc
aam
cmpsl
stos
cmp
xor
and
outsb
pop
into
dec
cmpsl
lea
test
mov
int3
mov
cli
cmpsl
adc
insl
lret
gs
inc
mov
mov
mov
aad
divb
test
shll
xor
jp
lcall
xlat
mov
sub
or
ret
mov
jbe
xor
sbb
xchg
mov
pop
nop
cwtl
mov
cmp
test
cltd
and
xor
xchg
jnp
sub
ss
enter
pop
dec
iret
jg
mov
cli
mov
pop
mov
or
addr16
arpl
popf
cmp
xor
xorl
inc
jns
mov
jl
stc
xchg
lods
stos
xchg
insl
cmp
icebp
xchg
mov
in
mov
cmp
mov
fdivr
add
mov
mov
into
and
sub
pop
jbe
inc
mov
cmc
mov
sbb
sub
mov
jp
mov
sti
movsl
cmp
cmpsb
stos
mov
add
sub
mov
jge
mov
mov
mov
xor
cmp
jae
shl
movsl
dec
ret
lock
fmull
xchg
cmpsl
mov
fcoms
mov
js
mov
or
xchg
sub
mov
cmp
jl
rolb
or
jbe
xor
jns
cmp
fsubs
xchg
cmp
popf
popa
or
scas
mov
mov
aas
mov
pop
mov
mov
jl
xor
cmp
fiadds
popa
mov
adc
das
sbb
pop
lods
or
push
xor
mov
andl
hlt
jmp
orb
stos
dec
xor
sbb
xchg
mov
adc
lods
loop
mov
lea
ret
sub
xor
jmp
bound
sti
cmp
mov
add
out
mov
pop
roll
dec
lock
mov
pop
test
aaa
in
mov
roll
jp
jmp
mov
rcrb
mov
xchg
and
cmp
or
jns
push
mov
sarl
pop
out
movsl
test
sahf
inc
mov
xor
in
mov
pop
leave
mov
xlat
inc
jl
sub
mov
mov
mov
testl
mov
pusha
leave
jns
ljmp
andb
mov
icebp
mov
mov
movsl
cmp
xchg
mov
inc
xchg
push
shrd
add
pusha
mov
ja
sbb
inc
mov
into
es
jp
and
fidivl
and
mov
adc
mov
loop
negb
mov
push
lcall
jae
lret
or
lea
xchg
mov
inc
xor
mov
adc
cs
adc
sub
movzwl
sar
mov
mov
std
inc
mov
xchg
xchg
and
cld
mov
xchg
movsl
mov
fmul
jnp
mov
sub
inc
mov
loopne
andl
mov
sbb
push
cmp
mov
mov
les
loope
push
lcall
jne
push
push
xchg
fcomp
into
fcmovbe
sub
cmpsl
push
mov
mov
mov
xchg
mov
sbbl
stos
xor
mov
jl
in
std
sub
cmpb
ret
dec
jae
test
test
mov
cli
insb
stos
mov
mov
push
add
mov
lds
fwait
push
inc
lret
add
ss
xor
mov
add
and
mov
mov
sbb
aam
xor
xchg
or
in
in
lret
sbb
mov
dec
jo
loope
push
scas
mov
sbb
add
pop
cmpsl
inc
cmp
cmpb
or
pop
push
test
arpl
add
stc
jl
jns
mov
mov
test
shl
xchg
adc
subb
mov
pop
mov
fnsave
xchg
mov
mov
add
call
test
xchg
shl
xor
pop
ret
insl
cmpsl
bound
mov
xor
aaa
fwait
pop
jp
out
sub
shll
inc
mov
cltd
loop
push
mov
pop
sbb
and
sub
jo
mov
adc
dec
mov
pop
pop
sbb
pop
add
cmp
mov
xchg
sarb
andb
mov
adc
lret
call
push
movsl
arpl
lret
adcb
xlat
inc
lds
shlb
xchg
scas
mov
mov
xor
cmpsl
clc
ljmp
add
adc
fcmove
mov
mov
in
call
mov
movsl
sar
arpl
repz
stos
mov
scas
sub
mov
mov
shll
insl
les
mov
dec
mov
popf
mov
push
dec
movsl
mov
enter
sub
and
test
cmp
cmpsb
movsl
mov
mov
mov
ret
sahf
aad
jae
inc
mov
xor
repnz
sarl
mov
in
imul
lods
mov
adc
xchg
xchg
push
mov
scas
mov
sub
push
out
popa
ljmp
scas
idivl
pop
fsubs
xlat
push
and
push
push
ja
ret
jecxz
out
mov
in
jge
push
cwtl
cwtl
rclb
mov
and
dec
shll
dec
mov
sub
jp
pop
popf
aaa
push
mov
dec
pop
adc
js
movsb
push
and
add
mov
cmp
xor
add
xlat
leave
cmp
les
mov
jmp
sbb
loope
std
loop
mov
pusha
mov
mov
push
scas
fwait
jae
cld
cwtl
push
test
fldenv
add
adc
xchg
adc
jmp
lcall
cmpsb
addb
enter
hlt
sbb
clc
cmpsl
in
xor
clc
fcmovne
cmpsb
mov
pusha
adc
xchg
ja
es
mov
loope
nop
ret
mov
mov
sbb
iret
roll
mov
pop
arpl
leave
mov
xchg
jl
pop
cmp
lds
add
or
jnp
inc
movswl
shrl
mov
cmpsl
imul
pop
mov
outsb
jnp
or
scas
mov
cmpsl
xor
in
jecxz
insb
pop
adc
mov
xlat
int
jns
sahf
xor
xor
test
out
mov
or
mov
lcall
mov
outsb
mov
jmp
push
das
ret
mov
les
cmpl
jl
xlat
cmp
xchg
sub
stos
mov
push
mov
shrb
jmp
mov
dec
into
cmp
fiaddl
adc
aam
sbbb
movsl
scas
cs
popf
mov
inc
mov
out
mov
out
or
pop
movsl
mov
and
shll
das
xchg
add
mov
or
mov
stc
movsb
sub
flds
ret
xchg
dec
mov
mov
mov
adc
sbb
mov
popf
xchg
sub
negl
push
pop
pushf
sbb
jmp
in
cwtl
enter
push
test
mov
int3
test
ret
idivb
xchg
add
mov
mov
add
lods
mov
test
test
jl
sub
rcrl
mull
loope
push
add
xchg
aam
je
test
cltd
pop
sahf
mov
lea
imulb
inc
mov
mov
sarl
lahf
cmp
ds
mov
shlb
jbe
mov
arpl
mov
cwtl
repnz
and
jmp
mov
cwtl
jmp
loope
cmp
cltd
fldenv
js
sbb
xor
lods
icebp
clc
xor
mov
outsb
push
sar
mov
movsl
cwtl
dec
sbb
sti
or
mov
sub
jp
aam
pop
or
sub
sti
cmp
mov
int
xchg
cwtl
mov
xlat
inc
aad
cmc
mov
mov
mov
sub
nop
test
or
sbb
mov
adc
xor
addr16
mov
fistps
and
lods
mov
loopne
dec
pop
lock
lods
pushf
mov
xor
inc
ljmp
dec
sbbl
sub
das
inc
popa
mov
jl,pn
ret
xchg
mov
dec
scas
adc
push
cmp
cmp
lcall
into
or
xor
dec
je
adc
mov
pop
xor
mov
pop
sub
stos
loop
push
mov
or
mov
scas
sub
mul
insl
push
pop
rorl
mov
inc
or
shlb
xchg
cld
xlat
adc
mov
js
push
mov
addr16
mov
not
test
rorl
cmpsl
sub
cmp
insl
test
mov
ret
push
dec
int
sbb
dec
push
sub
les
sbbb
mov
sub
mov
movsb
insl
mov
cmpsl
sarl
stc
mov
pop
mov
xchg
cmp
repz
mov
movd
cmpsl
mov
fmuls
and
xlat
jg
fnstenv
cmc
xchg
xchg
mov
std
adc
adc
hlt
loope
shlb
mov
push
rorb
fwait
in
int
scas
test
push
mov
fimuls
shll
and
push
shrb
or
fdivl
repz
dec
or
jmp
mov
push
or
xchg
out
sub
clc
stos
sbb
test
pop
mov
mov
and
mov
inc
pop
inc
pop
sub
test
sbb
repnz
jbe
movsl
sub
cmpsl
insb
add
dec
in
pop
mov
out
mov
mov
inc
ret
fwait
and
mov
fnstcw
fwait
push
rcrl
jnp
jmp
mov
cmc
dec
addb
or
cmp
xlat
xor
aas
imul
das
jnp
jl
mov
push
mov
cwtl
lea
fcompl
mov
sub
sarb
sbb
scas
sbb
jmp
lahf
mov
paddb
outsl
or
or
dec
mov
dec
inc
push
pop
cmpsl
dec
jae
jno
mov
sbb
int3
pop
scas
sti
fimuls
cmp
and
pop
mov
inc
xlat
mov
pop
jnp
pop
fwait
mov
int3
in
xor
lahf
mov
sub
nop
inc
inc
mov
jecxz
add
mov
xor
lds
ljmp
mov
int3
shll
push
sarl
mov
cmp
add
xchg
enter
pop
adc
and
stos
jl
cmpsb
dec
daa
out
mov
fidivl
add
scas
addr16
loop
adcb
jmp
repz
mov
loopne
out
xchg
mov
ror
outsb
dec
mov
dec
xor
neg
cmpsl
mov
push
adc
mov
iret
jg
aad
and
leave
cwtl
jb
push
shlb
cmpsb
cltd
mov
and
or
fsubs
dec
jnp
lods
jp
pop
ret
add
insl
xlat
adcl
mov
jbe
mov
jbe
xlat
xchg
sbb
mov
insb
cltd
fisubrl
loopne
icebp
mov
add
xchg
mov
stos
sbb
xlat
insb
xor
mov
push
sbb
mov
aam
cmovb
js
sub
add
xor
nop
sbb
mov
fmul
outsl
fstps
test
in
repz
mov
xchg
jl
idivl
xchg
out
into
jmp
ret
hlt
pop
mov
shlb
pop
les
ret
push
int3
daa
scas
xlat
mov
lods
xchg
inc
mulb
sbb
mov
mov
mov
push
mov
bound
mov
sbb
jg
jl
test
int3
mov
lcall
es
sbb
inc
jle
and
fidivs
es
dec
sbb
ret
cmpsl
and
imul
mov
jge
sub
mov
fisttpll
mov
daa
pop
repz
mov
repnz
fcomp
cmc
shll
dec
and
or
inc
out
movsb
bound
mov
mov
inc
outsl
mov
outsb
mov
hlt
and
aam
incb
mov
or
xchg
xlat
scas
mov
hlt
mov
addr16
mov
pop
notl
cld
cltd
push
jl
lea
cmp
lcall
les
and
lea
repz
jne
scas
and
cmpl
stos
jp
mov
lcall
mov
rol
loope
fdivs
andb
jb
mov
push
mov
dec
xchg
xlat
sbb
push
pushf
adc
sbb
scas
add
test
pop
lret
bound
or
adc
pop
imul
mov
add
daa
xor
out
mov
xchg
mov
xchg
ficomps
lret
cmpsl
adc
insl
mov
pop
jecxz
xchg
sbb
mov
js
or
movsl
das
xchg
mov
xor
adc
and
scas
test
fcoms
xchg
mov
sub
mov
push
fadds
jge
xor
inc
stos
push
xlat
mov
aam
cmpsl
sub
outsb
mov
addr16
lea
mov
shll
pop
data16
mov
cld
out
and
scas
int
test
and
bound
insb
cs
aas
cmp
stos
adc
fs
inc
in
sbb
loop
mov
dec
pop
jg
push
mov
cmp
stc
jo
push
mov
and
push
test
stos
jmp
xor
testb
out
xor
jecxz
es
sbb
sbb
sub
jno
xor
cmp
push
cmp
mov
jns
xor
mov
jp
add
seta
mov
outsb
jmp
mov
and
in
mov
fldenv
outsb
lea
mov
add
dec
lods
rolb
imul
push
aad
stos
pop
mov
into
add
mov
dec
xlat
and
mov
iret
push
push
test
mov
adcl
jns
mov
loop
in
and
push
dec
dec
rcrl
leave
fistpl
mov
jge
inc
ljmp
jne
ficoml
dec
xchg
scas
shll
cmpsl
dec
cmp
mov
sbb
iret
mov
mov
or
mov
sbb
cmc
mov
mov
cwtl
jb
in
fsubrl
cwtl
xchg
sahf
add
mov
and
loop
pop
push
mov
ja
icebp
pop
mov
mov
and
inc
divl
daa
mov
mov
dec
dec
mov
lret
mov
stos
test
bound
imul
mov
adc
add
and
cmpb
mov
or
mov
xlat
jle
cmp
pop
scas
loope
data16
push
lret
sub
stos
ja
cld
shrl
leave
cmp
jecxz
xchg
xchg
daa
push
lods
outsl
mov
es
inc
ret
in
jo
mov
andb
inc
mov
movsl
and
add
stc
loop
insl
mov
xchg
rcl
sub
scas
jbe
inc
cmpsl
adc
scas
and
aaa
bound
stos
adc
pop
cltd
push
push
mov
jns
adc
aad
adc
les
mov
mov
mov
out
pop
push
mov
cmp
sbb
mov
adc
movsl
dec
insb
jmp
mul
pop
mov
push
sahf
fwait
cmpsl
xchg
xor
lahf
sbb
jg
scas
popf
mov
xlat
rcll
out
fnsave
repz
loopne
rorb
scas
cmp
xor
dec
xorb
pop
aas
sbb
inc
xor
sbb
xlat
mov
xchg
pop
mov
mov
cmpb
div
mov
loop,pt
jnp
jmp
mov
in
scas
cwtl
mov
push
sbb
inc
testl
mov
sub
addr16
cmp
mov
inc
mov
sarb
rorl
mov
mov
incb
inc
cmc
leave
mov
stc
inc
xchg
mov
cli
mov
cmp
pop
jmp
rorl
movsl
pop
ds
mov
pop
dec
idivl
pusha
outsl
jns
mov
enter
mov
movsl
in
sbb
sbb
mov
movsl
mov
mov
push
mov
ljmp
fadds
mov
or
mov
inc
adc
xlat
clc
jmp
test
cwtl
adc
test
sbb
rorb
idivb
int3
mov
scas
mov
inc
push
dec
mov
mov
rorb
push
int3
js
mov
aaa
or
jo
mov
or
push
pop
cwtl
and
lret
imul
fnstenv
lea
aad
sub
add
sub
sub
lcall
outsl
mov
arpl
out
not
movsb
sti
or
xlat
mov
insb
in
loope
lock
or
jle
cmpsl
mov
popa
cmp
mov
cld
push
lods
cltd
shll
iret
pop
xchg
mov
insl
sbb
mov
jecxz
les
pop
aam
lods
jge
sub
stos
push
lock
sub
orb
mov
dec
fildl
mov
and
lds
mov
shrl
idivl
lret
mov
xchg
es
stc
aas
pusha
jp
xchg
mov
or
jle
sbb
imul
idiv
scas
sub
mov
sbb
push
lock
mov
movsb
mov
jmp
xor
mov
loopne
out
leave
jle
das
stc
jge
mov
add
xchg
std
xchg
and
push
mov
andl
mov
xchg
mov
pop
jle
das
mov
mov
mov
js
lods
xlat
in
sub
addr16
adc
and
mov
inc
enter
ret
loope
xor
jo
out
xchg
and
cmp
es
or
mov
movsb
nop
icebp
insl
hlt
mov
test
xchg
repnz
out
loop
jg
loop
mov
jnp
movsl
mov
add
xor
or
jnp
add
lahf
push
xchg
add
mov
cmp
mov
jmp
ja,pt
pop
fisubl
div
cmp
cmp
hlt
cmpsl
rclb
xlat
lods
jns
lahf
sbb
nop
and
mov
jnp
lea
sub
cwtl
xchg
cmpsl
and
mov
test
loop
int
jne
lahf
cmc
scas
mov
fnstcw
aas
jmp
stos
cmp
cmp
stos
dec
mov
pop
mov
iret
sub
and
bound
dec
push
xchg
xor
ret
mov
push
jno
mov
repz
bound
out
movsl
aad
adc
dec
test
mov
xor
inc
mov
and
test
cltd
xchg
stc
hlt
push
mov
call
daa
cltd
in
mov
mov
lea
dec
push
cwtl
sbb
out
mov
sbb
insb
or
jp
sub
cmpsb
dec
jb
inc
sbbl
movsl
imull
int
stos
ja
pop
out
and
xchg
mov
arpl
mov
fmull
mov
push
or
xlat
call
add
imull
out
add
mov
fs
mov
fildll
inc
and
hlt
mov
loope
mov
jmp
dec
cmc
outsl
cmp
lods
jne
and
sahf
push
cltd
pop
mov
mov
iret
or
mov
cmpsl
lods
or
pop
cmp
mov
mov
sbb
mov
mov
lret
ds
fwait
push
inc
mov
jb
rcrb
adc
movsb
dec
mov
rcrb
sub
es
mov
pusha
jne
out
mov
loop
pop
fcmovnb
movsb
mov
hlt
test
scas
sub
int3
jge
not
cmp
mov
movsb
push
lret
scas
xchg
daa
mov
sbb
xlat
out
in
and
mov
test
mov
cmpsl
pop
int
dec
inc
enter
in
sahf
iret
push
fsts
sbb
xchg
xchg
in
dec
cmp
ficompl
push
imul
mov
mov
daa
stos
adc
data16
stos
mov
add
mov
stos
int3
mov
frstor
clc
shlb
call
adc
stos
xlat
jecxz
mov
sub
es
xchg
mov
repz
sbb
ffree
dec
cwtl
in
mov
out
sub
addl
inc
mov
movsl
push
scas
sub
and
mov
and
add
loope
or
inc
fnsave
cltd
inc
lods
test
test
mov
jne
cli
mov
mov
cltd
mov
dec
test
mov
ja
cwtl
push
xor
movsl
or
shlb
and
lahf
mov
mov
jne
aas
addr16
ljmp
mov
sbb
scas
push
and
xor
inc
adc
mov
imul
cmpsl
mov
cmp
jge
push
pop
mov
cmpsl
rorl
lea
mov
pop
xlat
and
stos
sahf
in
adc
sarl
pop
mov
mov
mov
test
cmpsb
mov
xorl
inc
in
cwtl
or
gs
cmpsl
pop
scas
mov
push
mov
pushl
sti
or
xchg
cmc
fdivl
imul
fnstenv
popa
sbbl
push
sub
mov
idiv
add
pop
xor
das
xor
cwtl
jp
cmpsl
cmp
sub
cmpb
push
roll
xlat
push
movsb
arpl
lcall
loop
cmpsb
dec
ret
cs
repz
push
cmpb
test
cmc
mov
sub
sub
add
mov
jge
inc
mov
in
jnp
push
mov
push
into
fbld
xlat
jle
adc
cmp
mov
es
popl
js
mov
xchg
orb
lods
mov
add
enter
and
pop
mov
pop
inc
jge
sub
insl
mov
js
movsl
or
bound
mov
loop
jle
pop
mov
dec
mov
and
negl
xchg
mov
test
dec
push
jle
jecxz
scas
sbb
fdivl
dec
outsb
sbb
mov
xor
jl
cmp
fcomps
or
clc
jnp
cld
push
out
rol
mov
mov
xchg
xor
push
pop
dec
and
ret
sub
stc
sbb
stos
lds
xchg
push
push
or
mov
into
sbb
mov
add
jb
insb
mov
inc
mov
sarb
iret
sub
xchg
scas
sub
mov
mov
rcll
jge
pop
push
mov
out
sub
aas
mov
sbb
cwtl
mull
lods
mov
inc
imul
pop
ds
data16
movsb
aaa
xchg
stos
xorb
jns
mov
mov
adc
cmc
mov
sbb
jne
cwtl
mov
and
int
lods
sarb
sbb
xchg
fcoms
mov
pop
push
mov
adc
idiv
xor
stc
scas
divb
pop
dec
aas
add
cmp
mov
inc
flds
xlat
rcrl
push
ss
push
and
jnp
xor
adc
push
imul
lret
sarl
adc
mov
xor
fcomp
pop
leave
ja
mov
clc
pop
test
push
and
rdpmc
les
adc
push
mov
sbb
cmp
fdivrl
leave
xor
fdiv
push
jmp
mov
pop
xchg
add
jnp
sarl
loope,pn
movsl
cmp
xchg
and
and
push
mov
mov
ljmp
xchg
and
lds
icebp
xchg
mov
jmp
dec
mov
mov
or
sbb
xchg
mov
pop
inc
mov
ljmp
mov
daa
orb
mov
jne
nop
sarl
push
mov
rolb
jg
jo
sub
es
rcl
push
aas
pop
dec
mov
cmp
mov
sub
push
dec
pusha
mov
mov
and
sti
aaa
or
test
cltd
fistpll
es
adc
mov
cmpsb
add
rep
mov
popa
push
ja
and
cmpsb
xchg
mov
or
pushf
dec
clc
pop
int3
shll
add
mov
sbbb
mov
loope
out
adc
lea
ja
mov
sbb
mov
lcall
adc
fwait
mov
fstp
and
jns
int
or
lds
aad
pusha
add
cmp
test
and
addr16
jae
xlat
xchg
ss
stos
push
enter
xor
int
xchg
fisubs
daa
add
fnstenv
push
dec
adc
mov
xor
and
popa
mov
or
xorl
mov
mov
adc
or
mov
jmp
mov
mull
in
and
or
je
lahf
mov
inc
inc
or
outsb
sub
shll
in
or
and
push
scas
xchg
movsb
mov
hlt
add
xchg
mov
mov
leave
xor
lds
dec
jecxz
jno
movsl
imul
mov
outsl
pushf
stc
mov
cmp
push
ss
sbb
sbb
test
shl
frstor
shrb
fistps
enter
and
lods
jle
mov
push
mov
testl
mov
in
and
jmp
je
mov
dec
shrl
xlat
mov
loope
std
cmp
mov
inc
or
add
inc
jle
mov
lret
mov
mov
movsb
jbe
hlt
lods
mov
repnz
ret
and
xchg
shrb
mov
push
pop
aaa
xor
sbb
mov
xor
push
pusha
testb
imul
jns
sahf
mov
out
flds
lahf
cmpsl
inc
in
hlt
clc
mov
push
xchg
mov
out
out
jg
inc
mov
xchg
mov
loope
adc
stc
push
in
mov
xor
imul
and
lea
shll
lods
push
sbb
jns
adc
inc
ret
mov
inc
and
xlat
mov
sbb
test
repz
mov
sti
ja
inc
xchg
bnd
pop
mov
xor
inc
aas
movsl
frstor
imul
and
lret
inc
adc
aad
xor
mov
movsl
icebp
scas
mov
xor
fidivl
fimuls
xchg
lea
mov
xchg
es
dec
insb
ja
push
cmc
sbb
notb
in
xor
mov
sbb
daa
aam
lods
jbe
sbb
dec
push
int3
shlb
pop
popa
outsl
mov
fnsave
xorb
mov
test
xlat
mov
mov
jl
lods
dec
test
inc
mov
daa
dec
sti
hlt
sub
jbe
mov
fistps
js
shll
dec
pop
repnz
leave
popf
xlat
inc
mov
ljmp
cmp
xchg
lock
call
pop
adc
sub
push
mov
test
mov
mov
xor
xlat
lods
mov
and
dec
mov
cltd
mov
out
mov
pushf
pop
fmuls
pusha
or
int3
sub
mov
inc
push
adc
lds
stos
mov
shll
xor
cmpsl
out
movsl
jno
addr16
jae
mov
xchg
pusha
outsl
lock
enter
fists
mov
jns
lea
adc
cwtl
inc
jp
shll
push
out
mov
mov
xchg
fbstp
jecxz
and
jge
adc
cmp
inc
aaa
and
enter
stos
sbbl
scas
cltd
and
les
mov
shll
lods
arpl
lock
outsb
xor
xor
int3
inc
addb
xlat
mov
ds
in
sub
or
in
add
inc
test
mov
push
jae
fidivrl
push
shl
ret
mov
or
out
enter
add
push
inc
fcmovb
es
inc
loopne
insb
lods
fiadds
outsb
arpl
xchg
fmuls
fmull
cltd
jmp
or
cmp
cmpsl
xor
loopne
mov
lret
mov
call
enter
and
lds
push
mov
push
jb
cmp
mov
mov
insb
les
pop
jmp
test
push
pop
mov
into
mov
mov
lahf
cmp
mov
cmp
cwtl
or
test
lret
push
adc
jp
test
jge
mov
push
push
outsl
repz
sub
jle
sbbl
pop
xchg
xchg
popa
dec
shlb
dec
adc
mov
std
sti
mov
ffreep
mov
lcall
loopne
jecxz
xor
idiv
andl
mov
clc
dec
mov
mov
cmpsl
leave
rclb
loope
mov
pop
mov
jmp
jbe
les
jbe
clc
pushf
mov
int3
stc
mov
adc
xchg
mov
xchg
xor
test
and
jl
push
adc
insb
dec
mov
loopne
test
mov
mulb
shll
xor
mov
cmp
fimull
pop
cltd
nop
jmp
sub
fildl
mov
insl
fbstp
dec
mov
test
push
pop
xor
add
test
xchg
jmp
and
loop
adcb
mov
xlat
stc
xchg
lds
sarl
dec
inc
push
test
cltd
push
or
mov
out
lea
fbstp
ret
ret
jno
jmp
les
sbb
jnp
cmpsl
and
repnz
aam
dec
lods
pop
mov
add
scas
cmpsl
mov
gs
dec
mov
push
cmpl
nop
and
sub
sbb
test
cltd
mov
add
cmp
inc
fidivl
lea
pop
sbb
adc
mov
xor
cmp
xor
xlat
nop
outsl
xchg
ret
cmpsl
inc
sub
and
icebp
mov
cltd
fwait
aad
scas
mov
lea
mov
adc
mov
pop
xlat
mov
divb
fbld
cmpsl
mov
push
jmp
inc
lods
jbe
inc
scas
rolb
stc
mov
cli
adc
fsubl
sub
jmp
test
fistl
sbb
je
cwtl
bound
sub
test
mov
mov
adc
into
jmp
inc
outsb
mov
dec
push
neg
out
aas
int
cmpsl
mov
and
sarb
mov
in
jns
mov
sbb
add
mov
xor
add
cmp
mov
insb
jl
cmp
sbb
fnsave
sbb
js
fcmovu
paddsb
or
mov
dec
sbb
mov
ret
xchg
cmp
insl
test
stc
xor
push
push
shll
jnp
stc
push
movsl
mov
fs
pushf
ss
ficoms
mov
mov
cmp
push
loop
xlat
jg
scas
cmpsl
pop
jne
mov
xor
fs
das
aaa
jae
enter
iret
mov
jp
mov
add
sbb
jg
xorl
imull
mov
pop
adc
pop
and
push
mov
outsb
lock
aas
nop
xlat
scas
rcll
adc
imul
test
fsubrs
cltd
mov
add
jnp
sarl
xchg
nop
andl
dec
pop
fadd
jb
jo
sarb
sub
add
fwait
lock
in
push
test
mov
and
mov
jae
sar
ljmp
enter
sti
mov
jno
cmp
in
sbb
fisubs
mov
sub
mov
loope
cltd
adc
jno
mov
pusha
roll
test
push
pop
mov
sbb
add
scas
xlat
sub
sahf
cmp
mov
jbe
in
jp
leave
pop
mov
sub
xor
mov
adc
inc
cmp
jle
jecxz
xlat
in
inc
push
int3
mov
lock
repz
popf
cmpsb
and
or
lret
nop
inc
xor
mov
mov
mov
arpl
ret
cmp
mov
mov
movsl
andb
push
out
scas
sbb
fdivl
sbb
xchg
pop
popa
inc
mov
jae
mov
mov
test
inc
lods
cmp
xchg
xor
cli
adc
push
movsl
in
xchg
adc
mulb
mov
movsl
mov
xchg
fsubs
xchg
mov
inc
mov
scas
mov
mov
cmpl
mov
pop
lea
cwtl
or
and
stc
mov
jl
in
mov
test
sub
mov
out
xcrypt-cfb
cmpsl
and
loop
pop
inc
out
icebp
int
mov
aas
sbb
dec
cmpsb
mov
and
lcall
cli
fstpl
rcll
dec
rclb
scas
sub
cmpsl
movsb
mov
test
xor
frstor
fsubr
mov
mov
adc
jnp
jnp
mov
pmuludq
inc
and
pop
mov
sub
notl
pop
scas
mov
pop
cwtl
mov
test
mov
cmp
adc
xor
mov
fsubs
pop
push
jb
mov
scas
dec
shlb
mov
cmp
cltd
lahf
test
adc
mov
outsl
push
outsb
clc
xchg
mov
ss
sub
mov
pop
or
mov
lock
pop
xor
scas
ljmp
shll
inc
aas
push
fldcw
xchg
aad
push
gs
push
xor
fistpll
xor
mov
cmpsl
rorb
imul
push
adc
shll
sub
pop
std
sbb
addr16
inc
sbb
mov
aas
inc
push
mov
mov
mov
fimuls
jo
lock
stos
xor
cmp
cmpsl
dec
mov
mov
mov
out
lods
mov
cmc
loop
mov
xlat
clc
mov
out
shrb
add
adcl
fisubl
mov
mov
add
mov
mov
xor
mov
movsl
imul
mov
push
mov
jae
into
xchg
push
test
je
mov
shll
out
sbb
mov
xchg
mov
clc
sahf
dec
inc
cld
dec
mov
jae
fcoms
push
xchg
mov
ljmp
addr16
add
loop
dec
dec
mov
aaa
stos
cmpsl
imul
aad
push
movsl
mov
scas
push
or
rcrl
adc
loop
rcll
cmpsl
std
jmp
mov
out
cwtl
hlt
lods
loopne
xchg
lods
aad
xor
outsl
scas
in
cltd
jecxz
les
mov
dec
stc
gs
mov
stc
mov
rcl
cwtl
jno
pop
add
rclb
add
mov
sahf
lahf
sbb
in
faddp
fs
jg
mov
cltd
leave
jle
push
dec
out
mov
ret
repnz
mull
ret
push
xchg
mov
or
pop
dec
mov
add
pop
push
ret
push
leave
cmpsl
loopne
ret
mov
mov
jle
lock
and
mov
push
mov
repz
sahf
fisttpll
bound
test
call
jp
mov
or
fsts
cmp
jle
clc
mov
mov
mov
int
rcrb
mov
lret
and
and
frstor
cmp
mov
sub
cmpsl
mov
pop
dec
and
test
gs
mov
xchg
sub
mov
mov
arpl
insb
mov
int
rcll
mov
fisttpl
js
sbb
mov
mov
jg
mov
push
ss
mov
mov
inc
mov
leave
fidivs
scas
lret
mov
mov
fs
lock
xor
pop
arpl
pop
cmp
xor
mov
adc
pop
rol
test
jnp
cltd
shlb
daa
cwtl
cmc
dec
push
mov
call
insb
mov
shlb
or
mov
arpl
das
add
mov
fwait
js
sub
mov
mov
xor
mov
ret
jg
xchg
or
movsl
jmp
inc
out
mov
push
xor
scas
loopne
adc
int
scas
mov
mov
test
inc
dec
movsl
pop
jp
jmp
mov
subl
repz
leave
dec
mov
dec
lods
mov
fcmovne
adc
mov
jle
cmp
out
mov
push
mov
inc
xchg
aas
lret
add
mov
arpl
lea
sbbb
xchg
jg
sbb
cmpsb
push
mov
inc
outsb
dec
cmp
mov
adc
or
fdivl
xor
lahf
mov
mov
hlt
push
cmp
loope
adc
mov
mov
repnz
push
cmp
fdivl
jae
ret
mov
mov
mov
mov
mull
jbe
push
outsl
jo
aad
or
sub
cltd
sub
xchg
ja
or
dec
mov
and
lret
adc
iret
sbb
mov
push
mov
rclb
lret
push
mov
les
out
adc
jg
mov
in
mov
mov
xor
inc
movsl
out
xlat
xchg
sbb
stc
ja
stos
inc
test
data16
mov
jg
sbb
call
popa
pop
mov
lahf
and
dec
jo
std
ss
jne
mov
movsl
repnz
repz
jmp
fwait
and
jle
cs
pop
mov
popf
fsubrs
fdivrs
jmp
ret
test
mov
cli
lahf
shll
sbb
mov
icebp
aam
and
fwait
cltd
mov
mov
push
insb
mov
stos
sub
notb
mov
cld
mov
movsb
xchg
and
push
jns
insb
mov
pop
cmp
xchg
mov
and
and
into
jp
push
test
adc
or
leave
hlt
sub
mov
mov
mov
mov
movsb
cltd
xchg
mov
icebp
mov
adc
mov
in
call
mov
cwtl
test
mov
mov
jo
xchg
lds
dec
mov
lahf
inc
inc
inc
mov
mov
sub
mov
fwait
mov
cs
data16
pop
cmc
pop
xor
xor
scas
enter
mov
ret
clc
aaa
mov
mov
int3
xlat
daa
mov
mov
pop
push
stos
sub
add
push
jne
sbb
gs
loope
scas
xchg
push
pop
xor
adc
sub
hlt
enter
lock
or
sub
int
cld
leave
mov
hlt
sarb
in
lock
adc
lods
lcall
jns
les
test
mov
pop
out
mov
fcoml
mov
mov
fwait
mov
mov
popf
sahf
orl
adc
cltd
sbb
ds
push
mov
pop
xor
jp
pop
pop
jg
add
loop
jo
aaa
das
push
xchg
mov
hlt
cltd
adc
mov
and
lahf
ret
daa
mov
push
xchg
mov
mov
add
test
fwait
lods
mov
sub
mov
sub
cmp
adc
mov
ss
mov
stos
or
adc
mov
or
mov
mov
sub
xor
cmp
outsl
enter
or
pop
jnp
negl
jae
push
mov
mov
inc
std
mov
mov
mov
repz
cs
movsb
scas
cmpsl
dec
sbb
adcl
lds
test
clc
mov
mov
xchg
pushf
xor
sarb
fcomps
mov
xor
jo
in
mov
mov
or
cwtl
cmc
leave
icebp
mov
sarl
mov
xor
inc
add
adc
inc
ffree
add
stos
mov
sub
xchg
add
loope
lods
sbb
and
jl
mov
mov
mov
pop
out
stc
xchg
nop
repnz
sub
mov
aad
fidivs
arpl
dec
jne
test
push
mov
stc
push
xchg
mov
fwait
jb
sub
fistpl
sti
test
xlat
mov
and
aad
xor
mov
sbb
xchg
jne
mov
add
inc
adcb
in
imul
ds
pop
mov
jnp
mov
popf
in
pushw
jle
or
add
or
ss
js
bound
mov
xor
ret
rclb
add
xor
mov
cmpsl
das
movsl
cmp
push
test
mov
jo
mov
and
mov
out
xor
loop
in
adc
mov
push
mov
fldln2
pop
cmp
insl
ret
out
mov
sbb
std
lods
lods
inc
stc
aam
lock
repz
mov
jge
mov
lods
inc
jmp
pop
lahf
add
out
andl
es
outsb
lea
rorl
out
pop
jg
cmpsb
mov
insb
dec
loope
inc
mov
push
adc
mov
cmpl
cmp
mov
mov
sub
andl
and
loopne
jmp
mul
movsl
mov
mov
call
int3
sbb
mov
hlt
dec
mov
mov
push
loope
mulb
fcomps
xchg
rorl
xchg
test
and
mov
or
loopne
aas
bound
inc
mov
add
push
std
mov
out
dec
shrl
dec
xchg
xchg
stc
xorb
xor
jns
std
ja
mov
jnp
js
mov
push
mov
cmp
jb
fadd
gs
stos
and
mov
inc
scas
push
shrb
push
popa
jl
scas
call
jbe
aad
sar
movsl
jmp
mov
xchg
push
xor
lret
xor
sbb
jb
inc
movzwl
outsl
into
out
aad
push
xchg
cli
mov
jae
xorl
aam
cmc
mov
jge
pop
pop
cltd
mov
int3
push
scas
cmp
das
and
lcall
push
jp
xlat
std
rorl
push
mov
dec
bnd
mov
int3
clc
insb
inc
mov
ss
push
mov
sub
sbb
int3
imul
test
mov
arpl
cmpsl
cmp
cld
mov
int3
loop
add
test
stc
and
sti
adc
jp
dec
and
add
test
clc
add
dec
jmp
sarb
mov
test
or
lcall
shll
mov
cmp
mov
sub
inc
mov
enter
push
aas
mov
loope
cmp
scas
jg
mov
cmc
xor
fs
pop
mov
mov
cmp
add
aas
das
leave
mov
sbb
xchg
out
xchg
lea
lds
mov
aas
mov
sub
in
mov
outsb
adc
lods
stos
int
mov
negl
fidivl
push
mov
mov
mov
pop
les
mov
out
adc
adc
fstpt
xchg
push
pop
inc
and
add
xor
sbb
test
dec
cmp
stc
outsl
les
cmc
jb
mov
add
mov
scas
aas
pop
or
and
in
leave
jp
mov
movsl
xchg
shll
mov
frstor
jle
hlt
fs
mov
cwtl
mov
out
dec
mov
nop
pop
int3
arpl
add
mov
aas
mov
test
mov
mov
cwtl
adcb
mov
dec
xlat
mov
popf
popw
movsl
mov
xor
push
je
in
mov
out
mov
and
imul
inc
in
jnp
mov
cmpsl
xor
insb
dec
aas
inc
out
subb
and
clc
mov
pusha
push
fistpl
mov
mov
cmp
mov
and
adcb
scas
push
gs
lret
bound
jg
sarl
lds
mov
push
movsl
rorl
aas
push
and
movzwl
sbb
js
loope
pop
mov
insl
pop
aas
out
adc
aad
test
add
sub
mov
je
fildll
push
cmpsb
mov
and
sub
adc
cld
mov
mov
mov
sub
stc
scas
dec
rcrl
std
nop
fldcw
xchg
jb
and
in
scas
cli
mov
sub
xchg
and
cld
push
xor
fisubrs
icebp
adc
addr16
mov
lea
mov
mov
mov
mov
ss
sbb
push
popf
mov
mov
test
jo
insb
and
add
inc
sarb
or
mov
mov
loopne
adc
arpl
ret
mov
dec
fcmovnb
pop
cmp
mov
into
mov
add
fwait
leave
sub
push
cmpl
mov
inc
xchg
xlat
jp
cmove
stos
pop
mov
inc
push
ds
addr16
insb
mov
mov
adc
ret
add
cmp
sarl
test
es
sub
pusha
mov
in
push
mov
lods
push
std
mov
xchg
dec
mov
loope
addr16
jo
movsl
mov
sub
sub
popf
shll
jae
out
lcall
out
rorl
mov
incb
cltd
stc
xchg
push
arpl
xchg
mov
insl
xchg
mov
shrl
mov
ja
mov
fisubrs
and
mov
push
mov
mov
hlt
in
movsl
cltd
into
mov
sbb
pop
inc
or
ret
sbb
lcall
mov
arpl
mov
inc
call
jle
dec
cwtl
mov
pop
repz
adc
xchg
push
sbbl
test
dec
mov
int
andb
fsubrs
in
stos
mov
mov
test
sbb
mov
mov
jo
dec
fisttpl
push
in
inc
lods
je
lcall
lahf
xchg
adc
and
cmpsl
ret
hlt
and
xchg
mov
out
dec
mov
adc
add
jmp
out
cmc
mov
ficompl
popf
fs
adc
or
mov
push
enter
mull
jae
scas
sbb
sub
scas
lret
mov
sub
sbb
cmpb
nop
scas
shlb
das
jo
cltd
in
jp
jge
int
in
rorl
fsts
dec
xlat
and
and
xor
std
mov
nop
mov
dec
jp
test
mov
mov
scas
mov
popf
push
cmp
std
dec
cmpsl
in
out
jb
mov
pop
cld
shr
imul
xlat
call
icebp
scas
xor
into
and
cmpsb
cmp
mov
loop
sbb
and
cmc
lret
hlt
mov
mov
push
mov
in
cmpsl
and
test
in
loop
add
loope
add
movl
mov
jnp
and
fbld
aaa
and
movsl
lods
push
and
inc
cmp
jb
mov
fstps
iret
mov
jno
jl
mov
mov
in
mov
cmp
shll
and
push
mov
scas
sbb
bound
jno
fdivrs
push
mov
pop
scas
sti
pop
lods
mov
movsl
and
test
aam
fsubp
hlt
mov
sbb
push
mov
sbb
in
shlb
fisubl
jo
int3
cmpsl
add
pop
pop
inc
fisttpll
cmp
jle
repnz
push
xlat
ds
das
adc
lock
int3
idivl
call
sbb
sbb
cmc
dec
lret
add
mov
pop
mov
or
push
scas
mov
sub
ret
ret
mov
movsl
lahf
ficoml
cwtl
out
cmp
leave
xchg
mov
je
mov
and
pop
icebp
jbe
movl
mov
insl
out
ret
mov
xchg
clc
xchg
sub
inc
test
mov
mov
or
jno
daa
cmc
in
scas
ljmp
mov
cwtl
imul
mov
sub
sti
daa
stc
mov
cwtl
pop
lods
inc
shlb
mov
out
mov
adcb
xchg
mov
mov
fiaddl
inc
stc
loop
push
cs
xor
mov
pop
mov
mov
add
or
bnd
imulb
xchg
ss
sub
xchg
js
mov
mov
stos
test
xor
in
stos
movsl
push
mov
lods
outsb
loopne
cmp
mov
xchg
or
loop
dec
cli
stc
xor
pop
mov
adc
or
loope
fnstcw
dec
test
lds
sbb
mov
jnp
int3
ds
pop
sbb
div
sub
mov
mov
mov
test
cmp
or
lret
push
roll
jg
fcoms
fs
mull
scas
and
cld
clc
cmp
mov
mov
stos
adc
sub
fnsave
mov
mov
das
ret
jnp
xor
add
mov
sbb
cmp
jecxz
aas
cld
jge
cwtl
dec
je
xlat
incb
xor
adc
sbb
rolb
mov
cmp
xlat
and
jmp
lret
cld
test
lahf
test
aas
sbb
pop
sbb
mov
movsl
mov
scas
arpl
mov
or
inc
inc
js
cwtl
mov
and
test
mov
cli
jno
xor
mov
jecxz
jnp
push
inc
sbb
xlat
and
fwait
xor
pop
push
mov
pop
dec
cmpsb
cmp
push
dec
movsl
loop
mov
jge
bnd
inc
test
cmp
mov
mov
xchg
push
popf
mov
pop
xor
add
jbe
into
daa
push
cmpsb
add
das
mov
movsl
mov
mov
lods
add
popa
loope
stos
and
mov
shrb
cltd
jg
pop
scas
insl
push
iret
jle
cld
outsl
xor
fdivl
or
push
pop
mov
dec
lds
sbb
inc
subb
aas
fwait
hlt
cmpsl
in
mov
leave
test
xchg
xor
push
and
mov
nop
pop
outsb
mov
addr16
mov
stos
and
aas
mov
mov
pop
xor
loop
sbb
ss
neg
lds
mov
xor
bound
or
cmpxchg
scas
jecxz
xor
cmpsl
pop
push
fists
sbb
mov
mov
fsubs
push
hlt
test
sbb
gs
lds
pop
xlat
dec
out
aaa
rorl
aaa
loopne
push
test
loop
cmp
mov
mov
push
iret
loope
jbe
test
adc
mov
xchg
mov
dec
mov
fadds
orl
lret
and
mov
inc
test
cli
test
mov
popa
sarl
int
sbb
sbb
test
jnp
loope
pop
pop
mov
mov
jbe
enter
xorl
push
outsb
xchg
jno
mov
popa
and
jne
mov
adc
push
iret
divb
rcr
movsl
adc
jge
pop
jmp
sbb
stos
mov
popf
push
mov
xchg
repz
sbb
cmp
frstor
sbbb
sbb
cmc
and
es
mov
mov
stos
sub
xor
test
mov
loope
mov
setp
xchg
adc
int
jl
decl
mov
mov
jl
cmp
push
jg
cmpsl
inc
lods
fdiv
mov
sub
inc
xchg
int
lcall
dec
dec
je
cmp
xchg
insb
mov
roll
insb
or
inc
pop
rclb
ret
sti
leave
stc
push
std
mov
not
imul
stos
imul
pushf
push
in
or
fs
or
jg
movb
insb
xchg
mov
add
or
xor
add
cmpsl
cli
fmuls
jno
mov
push
mov
adc
cwtl
xchg
cmpsl
mov
sub
fwait
jne
push
cmp
mov
pop
icebp
mov
xchg
cmp
repz
sub
and
ret
pop
fsubrl
cmp
das
or
pop
push
enter
ja
shrl
mov
xchg
or
mov
cmpsl
mov
or
mov
imul
movsb
fisubl
enter
mov
scas
nop
mov
add
and
sahf
cmpsl
inc
xlat
xor
ret
mov
icebp
movsl
test
adc
js
mov
ds
mov
or
aad
jmp
popa
cwtl
add
test
fsubs
inc
pop
xlat
cmpsl
cltd
lret
ds
mov
dec
into
push
xchg
pop
movsb
movzwl
leave
flds
test
les
and
arpl
mov
mov
in
mov
push
movsl
lret
jmp
bound
inc
mov
jb
and
repnz
sub
fisubs
cmp
aas
lcall
inc
or
scas
mov
sbb
mov
pusha
push
sub
jmp
mov
bound
mov
mov
lret
xchg
test
mov
cmp
mov
xlat
ja
add
imull
cmpsl
hlt
mov
rolb
mov
loop
cmp
notb
pop
mov
cwtl
dec
iret
cmpsl
sub
into
push
mov
mov
mov
pop
inc
mov
loopne
sarl
adc
mov
push
test
mov
and
ljmp
movsl
imul
mov
insb
push
adc
pop
mov
stc
and
mov
mov
lds
repnz
lret
jge
mov
mov
fwait
pop
push
imul
or
xchg
es
mov
pop
xlat
stc
sbb
xchg
xchg
push
fwait
mov
ss
aas
pop
mov
loopne
sbb
push
cmc
fnsave
das
pop
cmp
pop
cmp
cli
imul
fmuls
sub
fnstcw
fildl
ret
cmpsl
mov
int
jae
mov
pop
pop
lock
inc
fnsave
inc
mov
mov
push
lods
sub
fdivl
jp
ljmp
out
mov
mov
lock
jl
inc
fdivl
sahf
sbb
push
push
xor
adc
xor
lret
push
out
cmpsl
mov
jbe
int
shrb
scas
ss
js,pt
mov
xchg
xchg
xor
dec
or
sbb
mov
insl
pop
fcomps
js
inc
cs
mov
mov
jnp
push
xor
xlat
sbbb
xor
pop
mov
mov
fiaddl
mov
mulb
adc
inc
lahf
mov
jnp
mov
dec
xor
daa
sbb
inc
mov
int3
mov
scas
xor
aas
mov
cmpsl
cmp
pusha
mov
imul
loop
in
mov
push
mov
and
push
xor
mov
lea
jmp
inc
or
loope
cmp
mov
sbb
mov
outsb
dec
push
pop
mov
xor
mov
jbe
inc
stos
aas
push
scas
jmp
pop
in
lcall
xor
sub
xchg
xor
or
mov
mov
outsl
cmc
lret
cmp
sub
mov
xor
or
fstps
daa
adc
mov
out
cwtl
sbb
pop
shlb
mov
dec
popf
dec
dec
mov
scas
in
mov
andb
jecxz
cmp
enter
mov
loop
mov
inc
push
mov
shlb
lea
mov
out
cld
sahf
insl
call
mov
and
sub
scas
js
int3
dec
mov
fildl
movsl
test
stc
adc
jnp
lea
mov
sub
push
push
pop
xor
adc
mov
xchg
add
and
repnz
in
les
aaa
xlat
repz
or
scas
testb
shll
jo
mov
cmpsl
cld
cmp
inc
cmp
mov
xchg
jge
mov
mov
test
arpl
iret
outsb
mulb
mov
or
mov
les
shl
test
cwtl
and
movsb
mov
insb
adc
mov
addr16
orb
sub
pop
stc
mov
push
sbb
fnstenv
dec
loop
and
ljmp
emms
fbstp
sub
in
push
into
fistl
mov
test
shl
sbb
mov
sbb
mov
xchg
push
mov
jnp
call
xchg
mov
or
dec
adc
inc
mov
pop
clc
sahf
imul
fbstp
xor
sbb
lods
mov
mov
das
mov
mov
pop
sbbl
push
push
xchg
sub
enter
cmp
fldl2e
jae
adc
jb
mov
adc
xchg
mov
jno
cmp
pop
arpl
scas
popf
and
cmp
push
xor
fiaddl
jle
shl
in
andl
sub
mov
sbb
jge
xor
sbb
add
lock
pop
idivl
cmp
ret
lods
cmp
pop
cmpsb
scas
sbb
in
aam
jne
cmpsl
data16
mov
xchg
inc
xor
xchg
jb
mov
mov
mov
aaa
add
pop
addr16
aad
fs
jl
sbb
mov
mov
mov
mov
dec
mov
mov
movb
loop
adc
loope
arpl
mov
jbe
or
mov
outsl
and
jnp
push
mov
cmpsl
mov
cmp
sub
mov
fmuls
xchg
popa
sarb
dec
and
repz
cld
aaa
aad
shl
xchg
por
pop
dec
js
mov
sti
and
or
sahf
cmp
imul
mov
arpl
mov
cmpsb
std
cmpb
int3
lea
fmuls
push
cli
daa
mov
mov
negb
xchg
xchg
mov
out
or
addr16
pop
cmpsl
insb
popa
movsb
mov
fisubrl
xchg
outsb
mov
int
loope
or
mov
scas
dec
cwtl
stc
push
cli
and
rorl
mov
push
dec
rorb
mov
es
test
sbb
push
sbb
cmp
lock
push
cmp
inc
shlb
pop
inc
mov
outsb
adc
jns
mov
imul
loopne
adc
push
in
xlat
xchg
push
push
shrb
mov
push
loop
lret
imull
shl
test
cltd
inc
xchg
mov
stos
sbb
mov
popa
lods
mov
mov
dec
mov
mov
mov
sub
cmc
fwait
dec
mov
jecxz
mov
cmp
mov
push
aad
int
push
sbb
mov
subb
dec
or
sbb
cli
mov
push
mov
jmp
sarb
mov
mov
xor
pop
cltd
mov
shlb
cmp
movsl
jle
inc
inc
cwtl
testb
mov
imul
hlt
sahf
xchg
cmp
sub
sub
mov
cmp
mov
push
fdivrs
lcall
ret
mov
and
cltd
push
cwtl
fisubl
cmp
xlat
xor
push
mov
mov
fnstenv
shll
gs
xor
mov
add
mov
mov
fldl
jns
test
xchg
ja
adc
mov
scas
pop
push
aas
xchg
fwait
mov
mov
and
mov
mov
adc
sahf
and
mov
cmp
ja
mov
mov
clc
mov
sti
mov
loop
mov
out
and
mov
jnp
mov
jne
pop
mov
mov
shr
add
scas
sub
adcb
rep
call
xchg
inc
mov
cli
push
mov
and
notl
sti
inc
mov
fisubrl
out
and
push
lret
mov
in
mov
cmp
mov
xchg
nop
iret
push
lods
lcall
in
dec
ss
inc
stos
outsl
add
loope
push
mov
sbb
xchg
xchg
jbe
add
fimuls
push
addr16
mov
pop
jmp
push
xlat
cmpl
xor
insl
lret
adc
lcall
pop
jb
mov
xor
jae
xchg
mov
cld
test
fwait
xchg
dec
mov
cmp
hlt
aas
cltd
jmp
pop
dec
cmp
cmp
inc
std
in
pop
mov
mov
cmp
xchg
aaa
mov
stos
insb
ret
or
cmp
sbb
mov
sbb
addr16
add
mov
xorb
cmp
jo
adc
addr16
fcomps
hlt
push
enter
mov
cltd
outsl
xor
clc
or
xlat
cmpsl
mov
inc
dec
rcrb
mov
xorb
cli
mov
mov
xchg
lahf
dec
adc
dec
jns
push
mov
aas
iret
inc
mov
add
pop
adc
jecxz
in
insl
jne
mov
xor
mov
sub
mov
push
sbb
sub
std
shrl
cltd
xor
mov
stos
jnp
daa
in
lahf
out
enter
mov
inc
in
xor
bound
mov
iret
int3
mov
mov
aas
rorl
mov
pop
ss
ror
mov
mov
jmp
mov
cltd
xor
lcall
xlat
mov
mov
xor
cli
mov
sbb
pop
dec
cmp
mov
sub
adc
sbb
pusha
mov
pop
fisubs
int3
lret
xlat
scas
jae
mov
daa
or
cmp
sbb
imul
mov
dec
ud0
add
jbe
push
add
inc
mov
fists
and
xchg
fwait
pop
lahf
dec
scas
imul
das
mov
icebp
std
inc
outsl
jg
test
iret
dec
pop
xchg
push
mov
shlb
mov
adc
into
mov
xchg
and
fs
mov
push
dec
or
mov
xchg
or
xchg
xchg
add
xor
mov
mov
or
cmpsl
xlat
insb
lock
add
call
sbb
push
xlat
pop
or
in
js
lret
xchg
and
aam
pushf
pop
mov
fsub
sub
pusha
xlat
jle
fs
add
xor
jo
mov
and
inc
sub
jge
test
mov
add
leave
mulb
cld
mov
adc
push
nop
ja
add
in
cltd
cmpsl
mov
mov
pop
jp
es
mov
pop
test
xor
push
roll
dec
jg
jle
aas
xchg
std
fsubs
aam
pop
int
add
pop
dec
mov
sbb
mov
rclb
clc
vmread
testl
jb
lcall
sti
aas
jge
pop
xorb
and
mov
xchg
push
push
cmp
adc
sbb
bound
mov
scas
dec
test
pop
scas
mov
icebp
cltd
ret
push
push
xchg
cmpsl
rolb
mov
shl
loopne
popf
push
test
shr
xchg
popa
sbb
lock
mov
pusha
andl
cmp
std
dec
cmpsl
dec
fcmovne
sbb
shll
lahf
shlb
cmpsl
mov
pop
test
mov
jns
xchg
jmp
pop
arpl
scas
shlb
xor
scas
mov
mov
dec
sub
push
ljmp
mov
sbb
rcll
pop
jno
scas
shlb
adc
dec
lea
push
and
cwtl
sbb
cmpsl
aaa
mov
lea
pushl
cmpsl
mov
jg
and
out
cmpsl
mov
int3
mul
lds
movsl
mov
loope
jb
pop
and
sahf
push
or
cmp
mov
mov
shlb
loope
fnstsw
mov
jnp
movsb
rol
cmc
mov
push
mov
hlt
mov
dec
mov
loop
es
xchg
dec
jnp
daa
inc
movsl
mov
call
sbb
jnp
mov
sub
mov
xor
repnz
mov
jge
push
mov
push
mov
enter
iret
adc
inc
hlt
cltd
es
stc
mov
fwait
and
stos
push
mov
loop
mov
sub
mov
dec
jb
movsl
pop
mov
add
jecxz
cmp
jbe
mov
out
xor
psubusw
push
mov
jle
or
cwtl
xor
divb
stos
cmp
and
cli
push
adc
notl
inc
mov
aad
mov
jg
xchg
adc
dec
cmpsl
xor
mov
mov
scas
test
jmp
sti
add
sub
mov
jmp
dec
sbb
push
inc
pusha
dec
scas
das
jle
xlat
lds
jb
adc
jmp
ret
inc
mov
cli
rcrb
or
pop
push
cmpsb
ds
mov
xor
in
mov
popf
fidivl
mov
stos
mulb
pop
inc
inc
xor
stc
pop
cmp
cmpsl
jle
push
push
jnp
dec
loop
xor
leave
cltd
out
cmpsl
cltd
lcall
sbb
mov
into
jnp
loopne
mov
out
sbb
or
mov
test
int3
shl
testb
jbe
mov
sub
or
push
mov
fs
mov
push
andl
xor
outsl
mov
ds
in
pop
imul
push
test
repz
mov
aam
cld
mov
pop
mov
lahf
mov
loope
int
and
and
add
dec
jmp
mov
jno
mov
das
or
sbb
enter
xchg
gs
sub
mov
fwait
loopne
jnp
aas
mov
xor
inc
cs
daa
inc
push
push
lret
idivl
rcrl
in
mov
ret
mov
aam
outsb
mov
mov
inc
push
fisttpll
shlb
mov
ja
jno
fidivrs
cwtl
mov
cld
hlt
movsb
mov
in
mov
adc
jae
push
jnp
int
scas
js
daa
lock
mov
shll
dec
xchg
shll
mov
fsubrl
sbb
add
sub
inc
mov
mov
xchg
sub
mov
add
mov
sbb
test
add
incb
aad
sbb
aam
ss
out
mov
mov
lahf
cwtl
mov
lods
xor
ret
je
push
dec
movsl
pop
mov
or
add
mov
data16
and
sahf
dec
xor
mov
inc
outsb
shlb
mov
cmpsl
pop
sbb
sbb
scas
imulb
div
loope
jmp
cmp
or
dec
or
mov
into
aaa
inc
xchg
push
cmc
rcl
aad
aam
movsb
lods
jnp
ret
sbb
cs
mov
inc
pop
and
ret
jbe
cmp
jmp
mov
mov
add
aaa
lret
addl
movsl
mov
inc
lcall
insb
xlat
pop
fwait
pop
mov
push
sub
or
mov
mov
push
adc
sub
push
imul
xor
out
loope
mov
shll
clc
pusha
call
mov
gs
ret
aaa
sarb
fcomps
dec
cmpsl
ficomps
cmp
sarb
pop
mov
fldz
movsb
bound
movsl
jp
rcrl
jecxz
adc
fidivrl
mov
sub
mov
stos
mov
sub
mov
fisubl
adc
jnp
loopne
mov
adc
mov
arpl
inc
mov
sbb
lcall
sbb
mov
ficoml
mov
xlat
shlb
out
and
mov
jg
adc
mov
fildl
cmp
fcmovbe
push
idivl
dec
scas
mov
mov
jnp
jbe
xchg
stc
notb
cmpsl
fs
push
mov
jb
dec
push
push
mov
pop
js
roll
mov
subl
inc
inc
mov
xor
fwait
cmp
cmp
pop
call
adc
std
mov
jno
aas
and
pop
sbb
js
ficoml
cwtl
jo
iret
mov
jge
push
xchg
sbb
pop
cmpsl
sub
imul
lcall
push
inc
pop
add
mov
and
fistpl
mov
rcll
inc
shrb
sti
mov
and
ror
scas
pushf
push
xchg
adc
adc
fwait
scas
sbb
sti
andb
sbb
bound
cmpsl
int3
test
dec
mov
ljmp
enter
out
jg
push
mov
lods
and
cmc
xor
lcall
in
xchg
mov
and
or
pop
mov
jne
into
add
mov
ljmp
shll
and
mov
mov
lret
or
xchg
ss
mov
and
ja
int
jg
or
mov
inc
call
jbe
sub
jle
mov
sbb
or
cmp
test
adc
mov
jge
loopne
data16
xchg
sbb
xlat
mov
pushf
add
mov
pusha
mov
test
push
stc
mov
cli
xchg
scas
fidivrl
jnp
lcall
data16
mov
add
out
cmp
mov
movsl
xchg
cli
dec
inc
adc
push
lods
popa
mov
inc
sub
shll
push
ja
daa
xchg
cli
or
sti
mov
inc
data16
mov
adc
cwtl
repz
sbb
sbb
mov
mov
jo
mov
fsubrs
xor
mov
mov
scas
mov
xor
notl
jnp
xchg
dec
mov
frstor
xor
push
subb
aad
or
int3
jns
inc
adc
mov
push
leave
mov
add
lods
sarb
adc
out
jp
mov
test
inc
in
xor
cmp
fsubrp
notb
aad
icebp
not
std
sbbl
cli
leave
jl
movsl
std
sbb
cmp
mov
stc
iret
sarl
mov
clc
add
out
sbb
jnp
ffree
scas
shll
bound
xchg
lea
jg
jge
and
sbb
sbb
and
xchg
mov
rcr
sub
cmc
cmpsb
notl
mov
mov
push
mov
scas
outsl
pushf
cmc
mov
rorb
pusha
mov
movsb
out
movsl
mov
mov
push
add
xchg
mov
testl
les
pop
mov
inc
cmp
push
add
outsl
fisttpll
jo
add
mov
mov
je
mov
jbe
and
xor
mov
jge
mov
cli
mov
sbb
outsl
push
iret
xlat
enter
ret
jle
mov
mov
addr16
fadds
ret
push
inc
cwtl
out
add
popl
inc
cmp
mov
out
cmpsb
dec
leave
insl
xor
mov
xor
push
mov
mov
lret
scas
stos
cmp
add
mov
jg
mov
sbb
cmp
cwtl
inc
faddl
int
test
cltd
orl
sub
mov
fs
fldenv
inc
mov
fsubl
mov
xor
aaa
arpl
cmp
lock
mov
ret
xor
icebp
cmp
enter
out
mov
sbb
cmp
mov
xor
sub
cmc
mov
incl
sahf
mov
dec
sub
negl
xor
les
popf
in
orb
xchg
xchg
movsl
dec
add
enter
pop
cltd
pop
jns
mov
push
shr
cltd
outsl
sub
or
mov
mov
and
xchg
inc
mov
xor
jge
adc
sub
jnp
into
sarl
pop
xchg
cltd
xor
pusha
stos
jno
dec
and
cmp
mov
outsb
loopne
cmpsl
mov
test
sbb
lret
or
cmpsl
fdivl
cmc
add
mov
lahf
cmp
cmp
into
xor
negl
mov
and
mov
lret
testb
and
sbb
mov
pop
adc
sub
mov
fxch
mov
mov
and
inc
mov
aam
and
sub
mov
mov
or
xchg
cli
inc
fsubl
es
into
mov
lcall
je
mov
adc
stos
lea
movsl
jnp
sbb
mov
stos
mov
shrb
cmp
icebp
add
cld
js
mov
and
into
loop
fstps
cmp
aas
das
movsl
andl
mov
mov
pushf
cmp
test
loopne
movzwl
cmpsl
or
aas
into
xchg
lock
mov
ret
sub
in
mov
stos
or
lds
sbb
pop
lods
mov
mov
add
or
daa
jnp
mov
mov
sbb
mov
ret
xchg
lock
das
mov
or
fdivrs
mulb
sbb
mov
popa
flds
cmp
xlat
mov
jp
movsl
jp
sbb
fnstenv
aas
sahf
jecxz
push
inc
push
movsl
mov
mov
cmc
cmp
aas
cmpsl
mov
pop
repz
aaa
mov
scas
movsl
stos
mov
and
mov
jno
loop
ds
or
nop
stc
pop
mov
iret
mov
inc
pop
push
and
mov
decb
mov
mov
cmp
inc
lods
in
sbb
fdivs
mov
imul
xor
jae
mov
dec
mov
les
data16
cmpsl
aam
mov
xchg
fdivrs
ds
xchg
mov
movsb
pop
jnp
lods
pop
mov
outsl
fbstp
push
adc
adc
int3
das
out
xor
stc
sub
imul
bound
dec
aaa
pop
sub
jbe
mov
movb
fnstsw
xchg
ljmp
out
mov
sbb
cmp
cmpsl
hlt
sub
pop
stos
mov
mov
push
daa
movsb
shlb
in
cmp
and
imul
cli
add
mov
jno
inc
mov
leave
add
stc
or
xor
dec
arpl
cmp
mov
mov
sbb
rcrb
leave
aad
sbb
lahf
sahf
fwait
je
stos
ss
sbb
push
nop
cli
ja
sub
xchg
mov
mov
mov
jg
dec
jmp
inc
push
xchg
dec
mov
insl
sbb
loop
mov
jmp
xchg
mov
sarb
xchg
cs
mov
mov
mov
test
ljmp
mov
insb
mov
mov
cmpsl
es
imul
nop
xchg
test
mov
push
addr16
sarb
lds
inc
pushf
js
add
mov
shr
lcall
aad
and
aas
and
cwtl
add
xchg
cmp
stos
or
data16
sub
jo
and
xlat
inc
pop
sub
dec
loope
xchg
test
shll
mov
sbb
call
scas
pop
cmovs
lea
inc
dec
mov
xor
adc
jmp
mov
aas
mov
pusha
cltd
xchg
ds
pop
mov
jecxz
ja
adc
adc
jp
je
pop
and
dec
xor
shll
inc
mov
or
sub
insl
repnz
or
jle
mov
incl
jo
mov
and
inc
dec
cltd
mov
mov
es
orb
leave
mov
and
push
mov
mov
lods
out
mov
data16
je
and
mov
ljmp
loop
mov
cltd
pusha
cli
push
into
mov
or
mov
push
push
mov
sbb
ret
push
push
lds
repz
out
push
scas
cwtl
icebp
std
mov
cwtl
outsl
sub
mov
push
jecxz
adc
sub
or
xor
xchg
xlat
sbb
movsl
fnsave
inc
iret
aaa
and
rcl
inc
dec
sarb
or
fldenv
popf
pop
fmuls
pop
mov
andl
mov
call
add
xor
test
fwait
inc
push
shrb
nop
es
jne
and
fdivs
mov
scas
fcoms
mov
cmp
push
sub
imul
scas
pop
add
mov
push
daa
pop
mov
inc
jl
mov
mov
imull
inc
mov
test
es
daa
pop
pop
cmp
cmpsl
cwtl
mov
cmpb
shll
cwtl
andl
jbe
test
sbb
cmp
sbb
gs
mov
in
out
xlat
mov
add
xor
and
fsub
js
push
cmpsl
mov
xlat
cmp
scas
xor
outsb
mov
imull
mov
mov
cmp
call
fidivs
push
pop
xchg
bound
add
xchg
cmp
frstor
mov
xor
fcomp
adc
cmpsl
leave
subb
icebp
cmc
arpl
mov
stos
test
xor
push
jg
fsubrs
xor
test
fucomi
jge
pop
mov
xor
lret
scas
test
cmp
int
out
jl
mov
mov
add
imul
fcomps
push
mov
inc
insl
scas
sub
fsubl
lock
cmp
lcall
pop
dec
mov
adc
mov
jo
out
adc
jno
fistl
insl
mov
call
cmpsl
sbb
fistpll
and
and
popf
loope
or
fistpl
mov
xchg
cmp
test
loop
lret
fidivl
cli
push
push
ljmp
mov
inc
push
scas
sbb
in
mov
xchg
loope
dec
shll
jb
and
adc
ss
pop
cltd
jl
shrb
sbb
movl
pop
insb
mov
lea
enter
leave
fbld
repz
inc
roll
sbbl
mov
mov
lds
xchg
in
cmp
or
jecxz
cmpsl
mov
mov
shlb
push
nop
scas
push
xchg
ds
sbb
and
inc
lahf
pushf
clc
fnstcw
adc
fmull
xchg
xor
mov
mov
mov
mov
push
cmpl
adcl
add
popf
lahf
mov
scas
das
repnz
cmp
mov
sti
push
sub
movsb
mov
enter
push
xor
push
hlt
lea
mov
mov
aaa
jmp
je
shll
push
leave
adc
xor
orb
mov
push
ror
shlb
outsl
insl
mov
push
xor
lods
inc
mov
mov
mov
mov
mov
dec
sbb
add
scas
andb
adc
jg
hlt
sub
rcr
mov
frstor
lock
int3
mov
daa
push
inc
dec
cmc
jo
cmc
jne
inc
mov
cmp
mov
sahf
ret
std
cld
cmpsl
pop
push
cltd
inc
inc
lret
loop
outsl
bt
iret
sbb
sub
mov
ljmp
fldt
repnz
and
mov
fs
stos
loopne
adc
jb
nop
les
aam
test
test
jl
movsl
mov
sbb
scas
stos
dec
or
hlt
mov
xor
popa
xchg
stc
mov
bound
test
int
in
fs
mov
leave
not
lret
jecxz
mov
insb
mov
sbb
push
imul
in
clc
cs
mov
icebp
pusha
mov
gs
in
nop
cli
mov
shl
pushf
out
mov
subb
mov
push
dec
lahf
inc
loop
popf
mov
fidivs
lods
mov
fwait
mov
lret
and
mov
clc
cwtl
or
and
dec
lock
mov
mov
jmp
ljmp
push
shl
mov
mov
mov
xor
mov
ret
fbstp
mov
jns
adc
sub
mov
pop
in
inc
jbe
cmp
mov
pop
dec
mov
dec
push
mov
cmpsl
pop
lcall
bound
sub
iret
addb
mov
or
into
loop
pop
pop
push
inc
out
call
xorl
loopne
and
into
aaa
dec
roll
mov
mov
mov
xchg
mov
push
aas
inc
imul
clc
mull
scas
int3
sbb
arpl
xorl
mov
into
fs
out
stos
jp
push
push
mov
xor
ljmp
je
inc
sub
test
rolb
add
daa
push
in
movsl
inc
sahf
es
sbb
aam
mov
jnp
insb
fsubl
arpl
jmp
cltd
fisubrs
mov
or
ret
loope
jo
jbe
jle
mov
cld
push
adc
ror
jbe
xlat
out
mov
mov
cmpb
sbb
nop
and
ret
das
jno
sbb
dec
stc
js
or
stc
dec
jmp
or
scas
sti
jp
pop
cmp
or
ljmp
in
aam
adc
or
lods
xchg
mov
dec
sbb
lods
sub
imul
enter
mov
je
cmpsb
test
call
int3
adc
mov
imul
mov
push
das
or
iret
mov
inc
cltd
xlat
sub
jns
and
into
adc
xchg
xlat
aas
jmp
mov
fcompl
xchg
jecxz
call
stc
xchg
jmp
pop
jbe
jmp
xor
dec
test
push
mov
roll
cmpsl
out
daa
mov
xchg
cltd
or
inc
dec
movsl
cmc
xlat
mov
adc
jo
dec
xor
ss
xchg
or
lock
fwait
mov
test
cmp
mov
push
jb
pop
mov
jbe
sub
pop
adc
cli
xchg
sub
aaa
mov
int
mov
rcrb
loop
mov
jne
pop
and
adc
push
test
mov
fcmovne
dec
pop
adc
or
jge
jl
fisubs
cwtl
and
lods
jp
push
lret
rolw
subl
lcall
jae
int
and
gs
pushf
cmpsb
out
cmp
cwtl
cmp
scas
mov
mov
mov
and
icebp
mov
sbb
push
test
dec
mov
mov
and
scas
mov
mov
or
adc
lods
lahf
jno
negl
mov
cmp
mov
dec
cmpb
mov
sbb
aam
sbbl
push
mov
xor
mov
or
jmp
mov
and
jmp
mov
insl
mov
sub
push
or
and
inc
jnp
inc
push
jmp
mov
fnsave
xchg
stos
mov
xor
ljmp
push
xlat
loope
inc
lods
jecxz
sub
jo
xchg
pop
add
cmp
jnp
fsts
jg
mov
fwait
in
movsb
mov
sbb
aad
xor
add
jb
xorl
aam
xor
sub
popf
gs
insl
mov
mov
adc
jmp
jns
adc
jl
jmp
fdivs
jge
fisubs
daa
mov
cwtl
lss
imul
or
push
sbb
hlt
xor
rclb
mov
fcoml
mov
mov
movsl
mov
lds
mov
inc
mov
mov
and
out
into
jae
jle
mov
cmc
ds
scas
mov
enter
mov
push
or
adc
push
pop
mov
cmpsl
popa
ds
pop
ljmp
mov
subl
mov
xor
idivl
pop
or
cmp
adc
std
fmull
je
mov
jns
dec
jnp
lret
xor
in
andb
xor
jle
xchg
mov
imul
fyl2xp1
popf
out
ret
mov
adc
gs
mov
lock
push
out
cltd
das
mov
insb
sbbl
jecxz
sbb
push
dec
cmpsl
scas
ja
mov
jae
cmp
jo
cmpsl
and
and
mov
pop
mov
inc
jo
mov
dec
cmp
movsl
fcoml
shll
mov
data16
and
xchg
jbe
mov
jo
ret
movsl
mov
repnz
pop
mov
sbb
jns
add
insb
xchg
xorb
xchg
pop
sbb
dec
shll
adc
out
and
pop
inc
cmp
insl
outsb
mov
cmpsl
cmp
push
cwtl
fcoms
loop
test
mov
mov
movsl
lret
cltd
repnz
pop
sub
outsb
data16
mov
rolb
adc
mov
mov
pop
adc
mov
enter
icebp
fisubs
mov
out
cmpsb
xchg
pop
mov
inc
jl
subb
jns
pop
mov
test
mov
lahf
test
mov
cwtl
outsb
or
sbb
push
loop,pn
pop
mov
pop
mov
lock
in
or
mov
cmpl
cmp
inc
mov
xchg
mov
pop
push
push
bound
and
int
sbb
mov
aad
and
sub
sub
jae
filds
imul
insl
jge
sub
cmp
pop
hlt
imul
xor
fcmovne
test
sub
jl
aaa
adc
mov
xlat
dec
mov
imul
sbb
mov
or
mov
fldcw
aam
call
inc
lds
mov
mov
push
xchg
mov
iret
mov
ss
mov
movsl
mov
xor
mov
inc
into
enter
das
or
test
mov
mov
cmp
jp
adc
sub
repnz
push
mov
mulb
or
stc
inc
sub
jg
mov
mov
lods
sbb
sti
out
mov
jbe
mov
mov
pop
mov
cltd
jnp
in
mov
push
xchg
mov
push
les
movsl
pop
adc
sub
lock
dec
cmp
iret
je
mov
mov
jae
pop
imul
and
movsb
mov
test
popa
fs
push
xor
cwtl
add
ds
dec
xchg
mov
or
aas
xor
sub
fcomps
push
movsl
mov
pop
and
push
ss
stc
mov
xchg
or
out
add
pop
ja
xlat
int
in
xchg
xor
movsl
mov
cwtl
dec
push
int3
dec
test
scas
pop
mov
push
cmp
sarb
push
push
jbe
stos
push
cmp
jge
mov
jg
shrb
shlb
sub
xchg
jne
lods
and
and
add
pop
icebp
pop
stc
xlat
aam
cmp
fwait
inc
idivl
in
or
or
add
cld
dec
add
mov
xlat
xchg
arpl
int
mov
cmc
or
es
outsb
shll
sub
xlat
aad
adc
cmp
insb
sbb
test
stc
addr16
aad
bound
or
enter
fstpl
push
leave
call
es
imul
ja
aam
sub
and
xor
mov
fcmovbe
cmp
sbb
cmp
cmpsl
lds
lds
scas
cmpsl
int
pop
xor
mull
sbb
sub
insl
mov
test
mov
lret
mov
dec
loopne
movsb
inc
cmpsl
add
xchg
cmpsl
jb
mull
leave
sbb
movsl
mov
mov
add
hlt
cmpl
movsl
or
shl
sti
test
mov
mov
imulb
add
mov
cmp
jmp
cmp
incl
cwtl
or
cmpsl
push
pop
outsb
jp
jno
cwtl
lds
mov
jle
daa
pop
movsl
mov
repz
xor
push
cmp
lea
jl
mov
ja
adc
mov
dec
pop
adcb
sahf
pusha
mov
jp
mov
cli
xlat
xor
roll
ds
pop
push
movsb
mull
xor
pop
sbb
cmp
push
add
into
and
pusha
dec
test
jp
lahf
shll
xchg
mov
xlat
mov
orl
cs
push
imul
mov
xor
lcall
and
fdivrs
scas
lods
mov
movsb
sub
shr
pop
je
xlat
fs
cmpsl
jecxz
dec
aas
mov
bound
and
dec
ds
addr16
mov
or
mov
mov
xchg
xchg
mov
add
cltd
pop
pop
test
mov
mov
out
mov
mov
leave
lcall
jbe
dec
jg
cmp
loope
or
adc
lret
inc
clc
jp
aad
mov
in
jmp
scas
lea
pop
pusha
mov
lahf
in
jle
jg
pop
dec
aam
mov
add
sbb
jecxz
in
mov
mov
call
mov
fstl
pop
loope
rcr
enter
test
mov
mov
jecxz
cmc
push
cmp
imul
cmpsl
mov
mov
test
jp
jp
jb
xchg
jae
dec
mov
and
push
fsts
ss
lods
sbb
inc
addr16
xlat
xchg
sbb
and
xor
nop
into
pushf
cmpsb
arpl
stos
loope
data16
xlat
fs
sbb
or
sub
shl
aas
fdivs
sti
mov
cmpsl
jae
adc
aad
push
fdivrl
xor
aam
pushf
mov
add
or
mov
jle
push
mov
push
or
adc
and
mov
jbe
pop
mov
pop
das
mov
scas
mov
stc
je
movzwl
filds
and
mov
imul
clc
lods
repz
call
mov
inc
pushf
ret
xchg
ljmp
out
mov
xchg
pop
dec
stos
insl
mov
pop
pop
xchg
jne
mov
mull
inc
mov
std
and
ja
dec
mov
mov
pop
loope
and
push
mov
pop
fcomps
and
sub
push
lahf
test
jmp
rolb
sbb
icebp
push
cmp
aam
dec
sub
cwtl
sahf
js
fucomp
bound
sbb
scas
sbb
cld
cmp
test
xchg
xlat
mov
cmpsl
push
cmp
shl
popa
jg
sub
mov
shr
jge
mov
arpl
pop
insb
adc
clc
inc
adc
outsl
stos
jmp
cmpl
rcrl
pushl
jo
faddp
loope
scas
xchg
or
outsl
stos
nop
sub
mov
xchg
xor
xor
xchg
clc
cltd
mov
jnp
rolb
mov
mov
popf
iret
mov
sub
jno
xlat
adc
and
cmpsb
add
pushf
ds
mov
sbb
lret
add
popf
test
cmp
mov
sbb
loopne
push
repnz
std
ss
fdivs
mulb
mov
mov
jecxz
mov
int3
test
mov
jno
lds
mov
pop
sbb
lds
cwtl
xchg
add
cwtl
add
mov
hlt
or
test
inc
addr16
xor
mov
mov
stc
jns
repz
mov
daa
rolb
cmp
movsl
mov
mov
icebp
or
xor
cs
mov
movsl
add
mov
roll
sbb
pop
jl
push
xorb
ds
scas
xchg
out
and
mov
mov
pop
test
aad
aaa
inc
sbb
cmpsl
gs
xor
jno
add
xchg
mov
int
cmc
mov
sbb
push
lds
ret
jp
leave
mov
jle
inc
cltd
jae
call
mov
divb
lea
push
add
fidivrl
mov
mov
loopne
push
mov
into
movsl
mov
leave
cmpl
mov
mov
or
sbbb
lahf
inc
mov
push
mov
int
fucomp
dec
add
inc
sti
les
mov
stos
jae
cs
cwtl
inc
mov
pop
incb
jecxz
jl
repnz
mov
and
push
xlat
xchg
dec
xor
pop
xor
or
sub
mov
flds
mov
daa
xorl
add
mov
mov
sbb
cmp
sub
fsubs
add
fdivl
stos
test
mov
or
out
and
jge
adc
mov
bound
jp
cli
mov
dec
cmc
sbb
sti
push
pop
test
jns
xchg
pop
addr16
scas
xchg
and
mov
int3
test
xchg
lea
jl
push
cmp
rorb
dec
inc
xlat
out
ljmp
imull
mov
fisubs
push
jge
sahf
imul
out
rclb
mov
xchg
sub
cltd
and
outsl
mov
std
jnp
insb
dec
mov
inc
je
mov
xchg
notl
cmp
pushf
inc
mov
push
pop
cmp
mov
and
cwtl
or
pop
pop
lods
in
xchg
icebp
mov
movsl
loop
pushf
pop
imul
xchg
aad
or
inc
mov
xchg
pop
lahf
sub
test
mov
push
in
push
xor
xchg
leave
jg
clc
iret
ffree
pop
mov
mull
mov
stos
xor
xor
lods
add
loopne
cmpsl
pop
push
popa
jo
push
test
xlat
sbb
or
sub
out
pop
cmpsl
and
jg
fdivs
jl
jns
mov
test
ljmp
andb
int3
mov
sar
loope
push
scas
push
int
mov
test
pushl
pop
mov
lea
stos
jo
dec
sbb
inc
mov
adc
fisubs
movsb
dec
push
je
cmc
mov
sbb
pop
jmp
mov
mov
mov
cmp
test
repnz
mov
mov
mov
push
lretw
mov
mov
lret
aam
mov
test
movsb
pop
jnp
lods
inc
xchg
sbb
push
push
and
fildll
xlat
hlt
pop
jae
mov
jns
mov
lea
ret
and
movsl
sub
xor
mov
jp
xchg
out
dec
mov
shll
mov
lods
ljmp
fsubrs
cltd
rcl
mov
in
xor
and
jle
adc
lcall
push
pop
scas
icebp
push
jmp
cmp
sbb
iret
dec
clc
mov
inc
jb
push
cmp
mov
and
mov
pop
xchg
and
movsl
es
add
and
xor
cmp
jne
xchg
adc
cmc
call
test
jmp
xor
mov
es
and
cwtl
rcrb
aas
dec
dec
mov
mov
add
enter
mov
test
jae
scas
jle
pop
sub
sub
cltd
push
bound
inc
fwait
mov
xlat
jmp
mov
cwtl
mov
cmp
fldt
sbb
and
jno
mov
pushf
cltd
mov
aad
loopne
push
popa
xorl
push
ss
lcall
dec
repnz
cs
insb
call
mov
xchg
pop
imul
dec
test
cmp
leave
xor
xor
xlat
std
dec
cltd
sbb
ljmp
push
mov
add
ret
popw
mov
mov
test
mov
cmp
sbb
sub
pop
leave
scas
cmp
push
cmc
cmpl
push
mov
fldcw
aas
cli
cmp
pop
loop
xchg
inc
shlb
pop
push
jg
mov
jle
loop
fstps
mov
xor
and
sbb
adc
shll
stc
out
jne
ret
cli
xor
daa
sbb
ffreep
shrb
imul
sub
fs
push
mov
xlat
or
sbb
mov
xchg
mov
lcall
cmpsb
adc
and
sbb
das
mov
xchg
push
scas
repnz
and
fstpt
add
ljmp
push
pusha
pop
loop
dec
fiadds
mov
add
adcb
jo
cmpsl
gs
in
xchg
pop
add
fidivl
cmova
adc
mov
mov
add
es
mov
adcl
les
push
mov
pop
xlat
lret
bound
test
xor
mov
stc
fwait
sbb
pushl
pop
cmc
clc
scas
adcb
nop
mov
popa
jne
jb
and
mov
in
xchg
fcomps
mov
cld
push
xor
mov
mov
add
scas
movsl
mov
xchg
mov
sbb
adc
pop
popa
mov
mov
xor
repz
cmpsl
lods
sbb
inc
imul
leave
mov
cmp
pop
andb
aas
push
pop
mov
mov
inc
sbb
sbb
inc
fcmovbe
cmpsl
fcomps
loop
outsb
sub
fwait
addr16
out
jns
mov
ja
mov
xor
sbb
inc
inc
imul
aad
adc
mov
xchg
pop
push
sarl
cmp
adc
mov
jo
mov
mov
mov
clc
and
xlat
mov
sub
fadds
mov
int3
stos
push
cmp
mov
and
enter
xlat
rcrl
cmc
out
neg
sti
adcl
scas
testb
sbb
push
cmpsb
setae
js
call
and
mov
jl
cltd
push
add
std
mov
lods
mov
pop
int
push
sub
cwtl
mov
rcll
jno
pop
jae
mov
sub
lods
ret
orb
sbb
push
xchg
and
jmp
mov
into
fwait
xor
mov
clc
push
hlt
movsl
in
mov
pusha
fsub
or
mov
inc
pop
jb
fnstsw
add
sbbb
mov
pusha
adc
fadd
dec
sub
mov
rolb
scas
test
mov
xchg
push
div
test
push
lock
mov
lea
subb
mov
je
repnz
push
mov
push
cltd
cmpsl
jecxz
pushf
ss
notl
xchg
lahf
mov
adc
mov
cmpsb
mov
leave
jmp
pop
movb
add
inc
into
mov
add
mov
mov
mov
mov
fistps
loope
push
xor
mov
movsl
cmpl
mov
cltd
sbb
mov
add
jb
rcl
pop
inc
cli
adc
cwtl
sub
add
enter
je
mov
arpl
push
mov
push
xchg
test
xchg
ret
xchg
mov
inc
pop
mov
fbstp
or
fnsave
jo
leave
adc
or
pop
push
cmpsl
clc
and
les
xor
ud2
lea
xchg
sarl
cmp
adc
movsl
push
mov
rol
mov
sub
dec
mov
push
call
or
mov
mov
in
mov
popa
lods
dec
mov
gs
test
and
mov
xchg
adc
mov
push
push
fsub
cmp
cmpsl
push
cmpsl
pop
mov
xor
push
pop
es
arpl
and
enter
scas
ds
dec
clc
ljmp
add
loopne
ja
mov
faddp
sub
xchg
mov
in
mov
or
aaa
ud1
call
xchg
cmp
sbb
mov
push
pop
and
stos
mov
dec
or
lds
shlb
mov
movsb
xorl
pop
pop
push
push
cmpsl
jno
xchg
mov
xchg
cmp
sub
daa
sbb
mov
out
pop
sti
lret
test
imul
mov
push
adc
and
pop
insl
arpl
and
mov
cli
mov
push
mov
sahf
negb
ret
mov
mov
cmpb
bound
adc
mov
lea
movsb
cmp
fucomp
mov
std
xchg
cltd
sarb
fsub
int3
jge
pop
js
scas
xchg
lret
mull
add
xchg
pop
scas
and
mov
aas
jmp
je
nop
mov
movsl
pop
inc
loope
pusha
pop
mov
icebp
mov
push
sbb
mov
sub
sbb
js
cmpsb
inc
cmp
push
jp
jecxz
jns
data16
loope
rcl
xlat
lds
sub
test
inc
mov
lret
cltd
push
inc
stos
cmpsb
pop
push
push
repnz
jecxz
push
sbb
xlat
jo
sbb
enter
jae
adc
xor
xor
lea
popf
sub
hlt
loopne
mov
psllw
jmp
mov
sub
xlat
sub
aad
xchg
mov
imul
sbb
xchg
inc
xorl
flds
orb
push
adc
xchg
mov
cmp
dec
sbb
sub
mov
add
mov
xchg
jle
bound
push
cs
ljmp
xor
and
jbe
mov
mov
jl
in
popf
push
cli
in
mov
lock
mov
enter
mov
mov
out
js
aam
cmpsl
or
mov
mov
pop
ret
mov
divl
push
mov
movsb
sbb
mov
movsl
xchg
sahf
jb
mov
mov
or
ret
mov
test
ja
jo
jne
mov
outsb
std
pop
mov
sti
loope
scas
dec
frstor
fisubrs
jne
sbb
jg
push
xchg
ret
dec
loopne
mov
jbe
and
xlat
jle
cld
xor
and
push
repnz
enter
xchg
mov
mov
daa
jecxz
xchg
in
mov
jnp
dec
and
mov
mov
ljmp
mov
mov
loop,pn
push
xchg
mov
in
xlat
test
daa
data16
mov
call
mov
pop
arpl
test
pusha
ja
js
scas
xchg
mov
or
xchg
mov
aam
jg
sub
orb
aas
outsb
pushf
or
shll
mov
push
aam
cli
push
popa
iret
and
test
jo
pop
cmpsl
in
sbb
cmpsb
xor
pop
push
lds
add
repnz
daa
mov
mov
enter
xchg
adc
jg
in
mov
nop
mov
test
in
mov
push
inc
cltd
jns
lahf
xchg
mov
insb
mov
xchg
hlt
scas
fsubl
push
mov
add
jb
inc
adc
mov
push
jge
mov
int
sti
inc
mov
xor
icebp
jnp
jno
test
clc
mov
scas
loop
ja
shlb
and
push
mov
cltd
popf
adc
pushf
mov
and
mov
gs
fidivl
mov
add
cli
cwtl
loop
cmp
cld
xor
iret
sbb
push
inc
aam
push
xlat
imul
fildl
mov
outsb
mov
inc
sti
cmp
gs
ficomps
sbb
int
cmc
cmpsl
into
push
scas
xor
inc
mov
jbe
sbb
jo
lds
dec
mov
arpl
and
or
push
adc
daa
mov
mov
shll
aam
xor
outsl
mov
ljmp
addr16
idivl
out
cltd
fcoms
scas
sub
repz
cld
mov
test
mov
mov
push
rol
xchg
sub
jo
cmp
push
pop
mov
and
pop
and
cmc
scas
sbb
lods
xor
shll
outsl
xchg
ja
mov
mov
sbb
out
je
scas
xlat
mov
lods
hlt
jecxz
jle
push
dec
adc
movsl
mov
stc
sub
pop
mov
jno
jns
add
ljmp
mov
push
or
push
mov
in
arpl
inc
inc
repz
cmp
adc
std
in
out
cmp
mov
cmpsl
cltd
dec
and
jo
pop
mov
movsl
cmp
outsb
cs
insb
jns
out
leave
fdivrs
in
add
mov
mov
mov
enter
cwtl
adc
mov
sub
sbb
cmp
or
inc
call
mov
inc
loope
mov
push
movsb
shlb
mov
filds
lods
xchg
sub
andb
lock
test
jge
pop
ss
xor
sahf
mov
pop
push
xchg
popa
add
pop
sub
mov
cli
in
dec
bound
mov
dec
xlat
sub
xor
inc
xlat
cmp
cmpsl
in
cmpsb
jo
shlb
push
ds
movsl
pop
mov
and
inc
jg
push
cwtl
mov
sub
mov
es
and
ret
cltd
sub
outsl
cltd
mov
stos
fnstcw
fwait
mov
aam
mov
mov
loope
push
cmp
push
pop
mov
shlb
pop
arpl
mov
mov
mov
aad
push
shrl
stos
and
push
jne
push
mov
fldenv
repz
lahf
imulb
jne
fisubrl
int3
mov
stos
dec
mov
lahf
dec
xor
fcompl
mov
add
aas
mov
in
stos
mov
lods
sbb
push
xlat
pop
int3
and
cmpl
mov
add
mov
leave
and
xor
insb
mov
push
push
cmp
jmp
and
mov
filds
cltd
lock
push
pushf
cmp
arpl
sbb
mov
jb
out
sbb
rcrb
pop
bound
fmuls
and
mov
stos
pop
push
jnp
fcoml
iret
lret
ds
test
fstps
inc
jecxz
cmp
push
jl
lea
enter
xor
ds
cmpsl
jg
sub
fdivs
mov
in
mov
aad
clc
jge
outsl
pop
mov
dec
ret
push
fstpt
test
push
pop
or
test
rol
mov
fsubs
imul
dec
jle
push
sub
mov
xor
cltd
in
rcr
jbe
mov
pop
cmp
xlat
add
out
mov
and
cs
cwtl
xchg
add
add
inc
mov
push
xchg
inc
test
xor
icebp
dec
cmp
jae
push
fistps
loope
dec
and
xchg
cmpsl
leave
push
fcomps
jno
pop
pop
jmp
mov
adc
mov
notl
sbb
pavgw
cwtl
aas
sbb
or
jnp
xor
adc
test
cmp
sbb
inc
dec
sarl
pop
js
imul
arpl
clc
mulb
inc
pop
movsl
mov
movsl
pop
sbb
push
dec
cmpsl
cmpsb
cwtl
test
ja
pop
test
stc
jae
data16
jl
scas
inc
mov
das
test
xchg
xchg
pop
es
dec
in
data16
out
push
icebp
sub
shrb
ja
xlat
lahf
loop
xchg
mov
mov
fadds
sub
aaa
ljmp
imul
loope
mov
push
add
cmp
es
and
mov
pop
test
mov
pop
inc
push
cmc
lock
out
mov
fistpll
mov
push
aaa
jmp
adc
jg
mov
cltd
shrb
xchg
xchg
test
mov
and
dec
mov
push
es
scas
jo
and
xlat
insb
jnp
fsubl
in
jp
rcll
mov
mov
test
cmp
nop
inc
pop
leave
mov
mov
sti
jns
xchg
mov
mov
or
scas
add
cli
and
or
push
xchg
cmpsb
arpl
sub
sbb
adc
ret
imul
shll
aam
stos
xchg
and
add
adc
dec
cmp
dec
inc
or
xlat
or
mov
fbstp
cmc
cli
movsl
cmp
mov
cmp
lahf
ljmp
int
xchg
pop
push
sub
mov
mov
test
fisubs
pushl
mov
popa
cwtl
lcall
cmc
cmpsl
xchg
lods
fistpll
out
inc
mov
test
test
jmp
and
fdivrp
cmpsl
xor
repnz
or
mov
mov
divb
mov
and
sar
pop
mov
xchg
arpl
mov
dec
icebp
cld
mov
jg
sub
out
mov
in
adc
push
push
in
mov
addr16
cli
cmpb
sbb
stos
xor
fsubrs
test
push
cltd
leave
gs
sub
xchg
and
ret
mov
stc
jbe
movl
dec
lods
lret
add
js
mov
in
div
loop
cmpsl
xchg
mov
roll
inc
nop
sahf
dec
pop
stc
dec
or
outsb
mov
mov
jge
adcb
cmp
scas
cmpsl
push
xor
inc
aad
in
mov
dec
imul
arpl
xchg
lret
cmp
dec
mov
cld
movsb
test
and
jnp
xlat
sbb
mov
out
xor
dec
xchg
mov
or
push
loope
movsb
into
fldl
mov
iret
jle
cs
mov
insb
sbb
mov
xlat
jg
iret
xchg
mov
sbb
and
jp
cwtl
mov
xchg
or
stos
mov
insl
xor
call
and
mov
pop
bound
and
xchg
mov
mov
mov
inc
imull
jbe
mov
mov
mov
mov
shll
adc
mov
sti
and
or
and
in
jmp
bound
xchg
out
sbb
gs
xchg
cltd
xchg
mov
push
mov
cs
mov
dec
xor
inc
arpl
test
out
jbe
xchg
mov
mov
test
push
rol
ret
push
mov
loopne
cmp
movsl
cltd
add
xchg
ficoml
sub
xlat
mov
ret
incb
xchg
fwait
and
mov
lret
jo
shl
aam
sbb
add
xchg
xor
in
cmc
jb
pop
cmpsb
pop
flds
dec
loope
scas
dec
repz
lea
sub
jno
in
into
clc
mov
jmp
mov
repz
add
mov
pop
sarl
nop
ss
test
mov
movsl
xorl
xlat
repz
in
stc
mov
aad
cmp
xchg
mov
stos
mov
mov
mov
add
push
mov
ljmp
cli
push
aad
mov
cltd
jle
sub
out
cmpsl
out
movsl
lret
ja
mov
mov
mov
jl
jmp
movsl
test
mov
outsl
adc
xor
ret
inc
outsb
jmp
mov
push
mov
andl
xor
jnp
fcomp
mov
out
mov
pop
movsl
inc
shlb
jp
sub
scas
jo
mov
mov
rcll
sub
mov
out
jno
jle
cli
add
adc
aas
mov
imul
cmpb
test
pop
jp
fldenv
dec
or
loop
sbb
sub
push
pop
xor
pop
or
cmp
scas
out
adc
aaa
cltd
and
lret
in
lods
dec
cmpsl
mov
outsl
insl
testb
aaa
pop
mov
jmp
ljmp
fisubs
pop
xor
leave
mov
gs
pop
ret
mov
inc
xchg
inc
bsf
nop
mov
xchg
movsl
sub
mov
sub
in
mov
subb
ret
xor
jb
push
and
push
mov
in
fdivl
inc
mov
pop
stc
in
xor
addr16
rclb
dec
cmc
sub
lret
xor
adc
jo
shrl
pop
mov
and
fprem1
push
inc
mov
or
inc
push
xlat
test
arpl
js
mov
aaa
and
adc
xlat
ret
ds
mov
movsl
mov
mov
scas
popf
mov
leave
repnz
fildl
sbb
outsl
lahf
mov
popa
aam
int3
add
cmpl
sbb
mov
mov
sub
adc
push
out
movsb
xorl
dec
mov
pop
ss
insl
xor
dec
cmc
jg
sahf
mov
mov
imul
sbb
push
test
inc
mov
lcall
jl
mov
mov
cmc
cmp
dec
mov
push
xor
cmpsb
mov
sub
test
sbb
mov
je
test
test
xor
push
lods
adc
insb
pop
inc
loope
pop
aam
cmpsl
je
mov
mov
test
rorb
inc
xchg
sbb
int3
jge
out
adc
adc
xlat
shlb
sahf
mov
or
call
lahf
fistpl
lods
mov
xor
mov
rclb
mov
jb
ss
mov
fadds
popf
shll
lcall
xchg
add
fs
adc
bound
adc
and
xlat
mov
rcrb
xor
or
xchg
pop
stc
mov
xchg
mov
inc
ljmp
mov
cmpsl
mov
mov
pop
inc
scas
pusha
push
and
cmpb
mov
lea
lcall
ror
int
aad
mov
rcr
mov
xchg
mov
inc
dec
mov
sbb
shll
mov
int
imul
imul
aas
mov
out
jno
xchg
or
mov
inc
mov
mov
inc
scas
pop
ds
add
sbb
rolb
daa
jp
icebp
pop
sbb
sub
loop
mov
adc
lods
stos
and
add
mov
es
fdivrs
xchg
icebp
mov
decl
jbe
daa
ja
pop
xor
scas
sbb
sub
adc
and
stc
imul
sub
ja
pop
mov
jne
jae
mov
jle
cmp
les
jbe
loope
lock
fsubl
test
scas
popa
bound
std
out
add
pop
jns
es
mov
aaa
xor
and
cmpsl
ds
icebp
out
dec
scas
rcrb
pushf
mov
xchg
test
or
add
pop
jmp
jmp
idivl
fidivs
sub
test
sbb
pop
push
lahf
fadd
movsb
mov
cs
loop
aas
jno
test
mov
sqrtps
movsl
out
ficompl
outsl
cmpsl
insl
ja
push
xlat
jbe
cmc
jae
mov
test
xchg
mov
ja
cmp
cmpsl
lods
int
fdivp
or
leave
inc
cmpsl
lock
xlat
test
push
xchg
cwtl
sbb
out
mov
inc
ret
mulb
fwait
roll
cmp
jo
xchg
scas
push
lcall
xchg
mov
jmp
dec
pop
push
mov
addr16
mov
jge
add
loope
dec
adcl
dec
cmp
mov
daa
jg
mov
fadds
mov
shr
and
jno
jns
push
xlat
or
mov
xchg
test
mov
cld
icebp
fldl
jne
mov
pusha
jl
in
cli
cmp
push
cli
and
insb
ret
jg
push
mov
jp
sahf
addr16
dec
in
mov
and
and
adc
inc
mov
dec
mov
movsl
pop
sbb
add
cwtl
jmp
cld
inc
ljmp
mov
cwtl
lods
pop
loope
dec
data16
cmpsl
out
xchg
and
pop
test
cltd
iret
cwtl
fistpl
out
or
rcl
xor
orl
cltd
daa
xchg
inc
idivl
leave
xlat
inc
sub
mov
cmpb
sub
test
cwtl
add
adc
jp
add
cmpsl
out
fdivrs
out
movntq
ss
je
int3
repnz
stos
xchg
arpl
cmp
dec
stos
mov
mov
outsl
sub
dec
inc
loop
mov
out
sub
adc
sbb
xor
negl
fwait
mov
sub
mov
stos
shl
mov
psadbw
rcl
push
inc
mov
scas
push
movsl
push
stos
inc
mov
fnstenv
xchg
mov
mov
mov
xor
mov
lea
or
mov
daa
lahf
in
scas
mov
mov
shlb
dec
popf
loope
mov
pushf
adc
xchg
mov
push
xlat
fistps
repz
in
mov
jo
stos
addr16
pop
mov
mov
mov
cltd
notl
mov
cmp
inc
mov
mov
repnz
mov
ja
gs
cmpsl
push
popa
lcall
or
cltd
adc
sbb
sub
out
cmpsb
jecxz
add
mov
insl
sarl
and
add
lret
ret
mov
cmp
sahf
and
lock
and
loop
out
mov
mov
jb
clc
imul
or
mov
mov
test
push
mov
push
xor
sbb
xchg
cmp
bound
leave
dec
test
mov
xchg
dec
add
loop
xor
jge
sub
xchg
mov
xor
xlat
push
daa
dec
dec
sub
sbb
stos
adc
fwait
pop
or
repnz
pop
icebp
inc
and
addr16
shr
call
scas
cmp
inc
jmp
sub
mov
adc
mov
jns
imul
arpl
and
aam
jl
sbb
mov
sarl
rol
jne
xchg
pop
or
and
add
cmp
jle
mov
sub
mov
movswl
in
ss
and
fs
dec
mov
dec
jmp
mov
xlat
fsubr
mov
mov
mov
add
adc
arpl
imul
mov
mov
popf
fnstcw
mov
test
arpl
mov
xchg
mov
mov
mov
add
test
mov
lahf
int
lret
dec
mov
mov
pop
cwtl
insb
mov
xor
mov
aad
fisubl
mov
and
mov
fsubr
pushf
adc
mov
sbb
stos
ficompl
stos
sbbb
mov
dec
cmpsl
sahf
push
sarb
cmc
popa
mov
sub
xchg
mov
adc
in
enter
lcall
mov
mov
fcomip
cli
cs
dec
mov
fadds
cmp
cmpsl
pop
cmp
fwait
in
pop
mov
add
in
inc
loop
stc
mov
pop
outsl
mov
fsts
repnz
mov
call
stos
loopne
stc
out
cmc
jbe
cmpsl
mov
mov
mov
sub
inc
fwait
lahf
cs
mov
repz
ret
movsl
or
xlat
lret
xor
add
xlat
rolb
js
adc
cmp
mov
cmp
lods
gs
push
jo
loope
into
iret
pop
les
test
cmp
lds
lcall
add
idivl
add
je
pop
outsb
out
or
in
pop
mov
adc
and
loope
mov
jl
pop
jg
in
rcrb
lahf
repz
movsl
push
add
std
addl
or
lods
lea
sbb
xor
in
xchg
mov
outsb
inc
push
jb
sbb
imul
ds
adc
lods
jno
fidivs
or
mov
jbe
jecxz
scas
ret
lahf
adc
xchg
jb
mov
mov
cmp
push
loope
xchg
mov
cmp
mov
fldenv
xchg
and
icebp
mov
push
pop
pop
in
push
mov
adc
stos
mov
sub
mov
xor
cmp
mov
shlb
push
aaa
icebp
mov
fstps
adc
inc
mov
inc
mov
or
cli
shrb
loopne
adc
push
sub
pop
mov
cmp
iret
xor
push
stos
ja
inc
sbb
xchg
cli
dec
sub
dec
data16
push
inc
fcmovnu
icebp
loopne
fldenv
mov
lea
cmpsl
add
mov
cmp
jg
addr16
cmpsl
stos
xor
or
cli
jmp
popf
bnd
push
je
daa
rorl
pop
pusha
test
ljmp
add
cmc
mov
mov
jg
pop
mov
xchg
js
cmpsb
in
cmpsl
and
mov
mov
lds
xor
bound
mov
aaa
jno
xor
popf
sbb
mov
sbb
or
aas
mov
sbb
notl
mov
adc
daa
mov
notb
mov
mov
imul
in
daa
arpl
xlat
fcomps
dec
ja
and
mov
pop
cmp
jge
mov
lea
jp
pusha
test
jp
mov
lret
mov
sbb
ret
sub
mov
mov
xchg
clc
jae
or
repnz
sub
fistl
es
and
les
stos
mov
pop
add
jmp
xchg
xor
int
mov
jge
sub
std
mov
movzwl
adc
or
xlat
aaa
bnd
fxch
loopne
xchg
cmpsl
mov
xchg
cmp
mov
cmp
cmpsl
iret
imul
mov
lds
adc
scas
into
dec
mov
mov
loop
fcomps
pop
pop
orb
mov
aam
pop
pusha
mov
mov
add
test
dec
mov
out
inc
adcb
inc
cltd
and
aad
jg
incb
repz
mov
inc
test
fbstp
pop
insl
adc
add
adc
cwtl
movb
in
pop
test
cltd
mov
jb
inc
xor
fs
fwait
das
out
mov
addr16
or
cmovno
mov
pusha
arpl
mov
sub
mul
adcl
sub
xlat
mov
stos
movsb
lds
jmp
push
sbb
das
movsl
shrd
pop
movsl
cltd
mov
adc
inc
popf
test
lea
dec
dec
into
or
and
ljmp
ja
lcall
mov
mov
test
test
cld
xor
mov
and
cmpsl
cmp
mov
mov
hlt
sahf
stos
aam
pop
js
mov
fwait
push
mov
cmp
je
test
test
xchg
mov
cltd
aam
cld
inc
mov
and
push
jecxz
mov
ljmp
mov
adc
mov
dec
mov
mov
push
adc
and
dec
out
push
mov
daa
mov
inc
ret
lea
push
pushl
and
in
or
push
pop
jecxz
mov
fimuls
addr16
mov
xor
scas
enter
rcrb
test
outsl
dec
ret
sub
push
cli
stc
mov
notl
or
push
xchg
outsl
das
mov
mov
inc
or
dec
xchg
xchg
adc
leave
cmpsl
adc
out
test
mov
rclb
mov
and
mov
mov
mov
iret
ja
movsl
je
mov
nop
shll
in
mov
push
mov
test
out
push
les
cmp
add
adc
mov
mov
mov
int3
and
loope
subb
js
vorps
fnstsw
xor
and
arpl
mov
stc
mov
stc
cs
pop
mov
inc
adc
scas
test
mov
mov
loop
xchg
mov
les
jno
mov
sti
orb
jmp
mov
das
sub
fimull
and
pop
jnp
push
cmpsl
xchg
or
fwait
jmp
test
sbb
loope
aaa
lss
jns
cmpsl
push
xchg
rorb
inc
mov
and
ja
cltd
in
xlat
add
push
cld
or
test
loopne
pop
mov
rclb
std
mov
xchg
cmpsb
pop
xor
cmp
sub
mov
mov
mov
jbe
loop
hlt
mov
cmpsl
jle
loopne
in
mov
xchg
out
lods
push
fnsave
jmp
mov
lock
movsl
mov
xor
nop
dec
mov
sub
faddp
mov
mov
cltd
lahf
adcl
rcl
mov
mov
dec
scas
dec
pusha
push
lea
pop
std
mov
shll
pop
mov
push
or
mov
or
cmp
mov
pop
mov
test
jmp
fistpl
mov
in
pushf
sub
ja
mov
sbb
inc
ljmp
cmc
mov
outsl
mov
ljmp
mov
clc
mov
mov
fstps
movsl
movsb
xchg
mov
leave
inc
cmpsl
mov
cmpsb
rorl
xlat
add
push
pop
jge
in
sahf
sbb
shlb
adc
mov
xor
fwait
mov
mov
add
jge
mov
rcl
mov
or
xor
aaa
fdivl
push
adc
mov
push
shlb
and
jp
clc
repz
push
xlat
add
push
mov
mov
mov
loopne
test
rcr
mov
mov
lcall
push
insl
xor
jge
mov
mov
ds
mov
jg
loop
jo
mov
push
cli
mov
cmp
xchg
sbb
jae
xor
mov
add
fwait
mov
xor
or
popa
add
sahf
xlat
lahf
sbbl
push
xchg
xor
jne
stos
pop
cld
sub
mov
adc
pusha
int
inc
add
push
lahf
les
or
in
testl
cmc
scas
daa
xor
lock
lret
or
ret
cld
ret
cltd
enter
out
sarl
mov
sub
into
cmpsl
pop
add
loope
jns
mov
xchg
rol
lcall
imul
mulb
lret
sbb
cwtl
push
popa
into
mov
test
sbb
and
xor
daa
mov
rorb
mov
pop
sbb
push
loope
sub
cmpsl
test
ret
jle
mov
cmp
int
sarl
jg
adc
andl
xor
lret
xlat
out
clts
dec
jo
mov
add
push
mov
in
mov
add
mov
bound
mov
jnp
push
inc
inc
mov
cwtl
fidivs
mov
scas
and
add
cmpsb
mov
xor
cmp
outsl
cmpsl
rol
icebp
sbb
jb
jecxz
rcr
add
test
xchg
in
inc
mov
inc
jbe
mov
scas
out
mov
mov
outsl
aas
in
sahf
sub
mov
cmpsl
pop
subl
mov
movsb
xchg
sbb
dec
dec
pop
jle
jae
add
or
jp
sub
movsl
push
shl
jb
adc
push
mov
xchg
mov
push
enter
and
or
jns
or
and
and
shlb
jle
jne
dec
mov
aad
cltd
cltd
mov
lcall
lea
lret
insl
mov
and
bound
and
mov
in
sub
lods
push
mov
jb
decb
cmp
call
out
sar
or
inc
and
lahf
movsl
mov
dec
cmp
fsts
push
inc
mov
je
fimuls
lcall
pop
mov
cmc
inc
xlat
xchg
cmp
inc
mov
inc
xor
and
jp
push
in
rcr
test
sti
rclb
pop
mov
adc
push
xlat
rsqrtps
fcom
jb
stos
lret
dec
outsb
mov
dec
test
jecxz
dec
mov
test
mov
lock
out
bound
push
mov
jmp
lea
push
jge
movsb
mov
mov
mov
outsl
cmc
adc
inc
stos
mov
ret
push
mov
mov
mov
mov
int3
out
leave
ljmp
adc
stc
stos
mov
test
jg
pop
mov
fwait
stos
aad
adc
dec
mov
mov
sbb
adc
repnz
push
and
sub
mov
out
leave
sub
dec
cltd
in
out
scas
mov
jnp
inc
push
fwait
mov
mov
add
jbe
push
int3
mov
xchg
sub
outsl
fucomi
adc
enter
cmpsl
cmp
mov
bound
xchg
mov
data16
sub
xlat
adc
mov
clc
mov
push
imul
xchg
sub
cmpsl
dec
xor
fisubrl
out
fdivrl
xlat
cmpl
xor
lods
mov
and
adc
mov
or
lds
dec
mov
das
inc
xchg
sub
leave
jns
mov
arpl
cmp
out
icebp
xchg
xor
cmp
lret
mov
outsb
and
adc
jbe
xlat
dec
adc
cmpsl
je
mov
out
hlt
mov
jle
out
test
push
mov
loope
mov
and
outsb
mov
stos
popf
sbb
mov
mov
mov
and
sbb
push
rcll
mov
sub
loope
divb
sbb
inc
lahf
int
in
push
test
cmc
hlt
xor
ror
mov
cmp
xlat
mov
push
adc
mov
sti
mov
mov
mov
movl
loope
scas
test
insb
mov
and
mov
das
fcoml
mov
arpl
sbb
rorl
jl
mov
sub
mov
pop
add
xchg
fdivl
mov
cld
push
int
cmp
test
or
mov
add
inc
xchg
test
inc
outsb
mov
and
adc
add
das
or
xchg
mov
pop
jnp
pop
jbe
lahf
dec
jns
sbb
mov
mov
push
fsubs
sub
jle
movsb
mov
inc
push
icebp
lds
mov
xor
cmp
mov
lcall
std
out
cwtl
data16
mov
scas
inc
dec
sub
ja
mov
arpl
lret
mov
leave
in
jg
in
mov
xchg
je
call
mov
jl
mov
fldenv
mov
and
icebp
pop
pop
popf
xchg
cmc
push
scas
mov
das
ss
push
mov
mov
mov
in
rorb
add
ljmp
mov
jns
adc
arpl
sub
pop
scas
push
test
cmp
scas
push
and
mov
sbb
negl
ret
stos
mov
rclb
cwtl
mov
add
xlat
push
movsl
add
adc
loop
mov
pop
mov
add
cmp
push
fbld
inc
fcomps
mov
je
pop
mov
add
mov
cwtl
stc
jg
mov
insl
and
push
stos
mov
inc
lods
sbb
jnp
dec
iret
cmpsl
mov
or
sbb
xlat
aas
xchg
cmc
jne
push
stos
xchg
adc
mov
imul
sbb
loopne
cmpsl
dec
insb
xchg
outsb
jge
test
or
cmp
xchg
icebp
imul
dec
mov
and
sub
lods
cmp
add
inc
dec
mov
mov
pusha
fnsave
mov
bound
dec
cmp
lret
cmpsl
push
cld
xor
mov
xchg
or
sub
pop
push
add
sbb
fwait
mov
add
out
test
cmp
mov
mov
mov
popa
ret
loope
sbb
mov
mov
cwtl
bound
testl
dec
arpl
mov
in
imul
inc
sub
movsl
cwtl
xor
sbb
push
mov
movsb
xor
rorl
imul
push
dec
adc
xchg
pop
fwait
mov
fdivl
push
mov
fs
add
pop
jno
mov
out
lods
pop
mov
mov
jg
cmp
xlat
ss
popl
dec
xor
sub
aas
out
pusha
mov
adc
data16
xchg
mov
aam
test
cmpsl
and
fs
or
lods
sahf
xlat
hlt
jb
out
adc
xlat
and
lods
sub
or
scas
cmp
stc
or
cld
mov
inc
and
mov
mov
aam
cmpsl
push
jmp
or
repnz
mov
dec
mov
fwait
cmp
mov
mov
cmp
adcl
cli
xchg
cwtl
xchg
imul
cltd
inc
and
push
mov
jl
cmp
mov
aas
cltd
xor
cmp
add
cmp
mov
repnz
sbb
cmp
sti
adc
stos
cmp
iret
inc
inc
sbb
cwtl
stos
cli
dec
and
mov
dec
pop
adc
adc
mov
push
push
out
mov
clc
adc
push
sbb
and
mov
orl
jnp
fisubrl
mov
mov
mov
mov
mov
cmp
and
cltd
divb
fisubs
xor
mov
mov
lods
and
movsl
sub
out
int
mov
enter
das
lcall
cmp
mov
shll
xchg
inc
test
xchg
fs
adc
mov
mov
lds
mov
xlat
ds
adc
lods
fisttpll
addr16
into
mov
pop
andl
mov
leave
push
and
pop
fsub
test
jl
into
movsb
xchg
adc
mov
inc
mov
imul
fisubrl
pop
cli
push
in
sub
inc
les
pop
inc
push
cmpsl
mov
js
cwtl
mov
pop
mov
lcall
xchg
jmp
lahf
lock
mov
xor
adc
jo
add
test
mov
adc
scas
clc
testl
mov
push
inc
or
mov
sbb
movsl
popl
xchg
mov
lods
insl
shrl
adc
dec
mov
mov
lret
sahf
mov
sub
pop
test
jp
mov
jmp
imul
add
scas
les
mov
pop
sub
sbb
int3
ss
mov
insb
call
mov
mov
cli
loope
pop
mov
add
lods
lret
adc
loope
sub
jmp
mov
mov
pop
mov
sbb
adcb
cmp
mov
mov
je
fsubrs
xor
push
push
das
mov
shl
jne
cmp
push
mov
xor
cmp
insb
pop
mov
and
shl
nop
mov
jae
movsl
scas
sbb
gs
pop
lea
daa
sahf
mov
push
and
pop
cmp
jo
mov
scas
push
enter
repnz
hlt
add
fsubs
push
push
xorb
mov
fiaddl
push
out
mov
out
ret
mov
mov
or
aas
jbe
cmpsl
xrelease
ljmp
inc
xor
fadds
lret
mov
sub
shrl
inc
enter
movsl
cmp
pop
sti
xor
lock
cmp
mov
popf
mov
cltd
xlat
rol
pop
shlb
mov
sub
les
repz
push
mov
fistpl
cmpsl
rolb
call
mov
add
aas
subb
add
enter
sbb
cmp
cmp
pop
shl
sbb
mov
or
aad
dec
imul
mov
aaa
mov
mov
push
subl
sub
ljmp
push
mov
js
mov
cltd
xchg
cmpsl
int
mov
add
ret
jle
mov
rolb
sub
jae
jns
inc
mov
adc
hlt
mov
es
out
mov
daa
je
mov
and
in
cmp
jg
cli
mov
dec
cmp
cmpsb
mov
int
fstps
and
into
pop
mov
rorl
cltd
lods
inc
ja
and
jb
xchg
cmpsl
fsubs
in
mov
add
mov
shrb
scas
mov
inc
inc
xchg
push
ja
lock
test
insb
movsb
mov
fsubs
mov
fidivs
addr16
in
ss
movsl
or
test
or
in
add
pop
mov
dec
sbb
or
cmpsl
and
jb
dec
mov
add
push
fwait
and
fists
jle
mov
xlat
das
dec
or
mov
jns
in
push
fs
xor
jle
cwtl
jmp
fwait
sahf
outsl
mov
jbe
testl
mov
addr16
data16
addl
mov
movsl
out
jl
pushf
jae
rep
sub
mov
pop
mov
repnz
lods
mov
adc
fists
dec
mov
shrl
fwait
cmp
xorb
mov
sbb
cwtl
lea
or
repnz
stos
stc
aas
fsts
mov
add
mov
scas
mov
xchg
and
pop
fildl
or
insb
cmp
je
scas
push
mov
push
stos
cmp
xor
adc
xchg
into
pop
loopne
fimull
bound
mov
adc
xchg
movsl
jnp
push
mov
inc
mov
ljmp
movsl
mov
jecxz
fcomps
out
stos
and
push
mov
adc
in
mov
sbb
add
mov
aas
test
cmp
push
inc
cmpsl
in
aaa
dec
clc
jg
mov
negl
ss
fists
imul
mov
add
fadds
aad
xor
sti
rorb
cwtl
lods
insl
and
int3
test
sbb
xor
mov
add
sbbl
cmp
or
or
adc
xchg
sub
shll
fidivrl
xchg
js
ret
fcomps
mov
cltd
pop
mov
scas
jb
int3
enter
call
and
ja
fcoms
push
movsl
or
aas
cmpsl
nop
jnp
inc
jae
mov
inc
mov
fdivrl
xchg
leave
jg
iret
cmpsl
test
das
xchg
mov
sbb
xchg
lahf
scas
into
sbb
mov
movsb
lea
jns
xchg
dec
mov
test
test
cmp
lahf
arpl
jmp
fcomps
jbe
mov
fs
cli
mov
ret
xor
pop
mov
mov
ljmp
ficomps
push
mov
xor
mov
xchg
sbb
mov
and
xor
jno
mov
add
lea
push
lock
add
cs
inc
push
mov
and
fmull
in
jae
push
cltd
mov
cmp
mov
and
jle
push
pop
xchg
lods
loope
mov
imul
mov
fsub
mov
cmpsl
mov
dec
jecxz
mov
mov
das
subl
sub
cmp
mov
stc
scas
fnstcw
sbbb
dec
int3
dec
mov
cltd
addr16
mov
inc
push
inc
fcoms
add
cmpsl
loop
shlb
jnp
sbb
aad
push
dec
sbb
mov
mov
mov
movsl
pop
xchg
and
nop
fcomp
fisttpl
cmpsl
jne
iret
push
test
jp
ds
bnd
gs
out
cwtl
icebp
xchg
stc
pop
mov
lcall
bound
fldcw
adc
inc
xchg
andb
pop
mov
push
push
pusha
pop
loop
lods
xlat
xlat
notl
xchg
add
leave
mov
mov
cmp
test
xor
addb
sub
mov
loope
out
mov
pop
mov
nop
cmp
xor
scas
mov
flds
xchg
jno
stc
pushf
mov
xor
xchg
mov
mulb
cld
mov
cmp
mov
outsb
in
mov
and
movsb
mov
or
xor
mov
movsl
mov
std
jp
and
xchg
cmc
inc
js
mov
jge
cmpsl
mov
and
out
sub
ss
loope
xlat
jp
push
fdivl
push
leave
cltd
outsl
inc
jg
cwtl
add
add
cmp
cmpsl
add
mov
cmp
adc
incb
testb
sub
fidivl
lret
push
jns
movsb
cltd
mov
icebp
stos
pop
idiv
jne
das
sbb
mov
nop
faddl
sbb
je
bound
jo
dec
xor
repnz
cmp
jns
jbe
sarb
jnp
cmpsl
pop
mov
idivl
in
cmp
push
sbb
mov
dec
fsubl
outsb
xchg
push
cmp
adc
push
xchg
adc
cwtl
cmpl
lods
in
pop
xor
xchg
imul
pop
mov
mov
add
call
mov
dec
or
pop
ja
mov
and
push
add
repz
rol
xchg
add
fidivrs
cmpsl
xchg
push
lods
xchg
std
cmp
push
and
shr
jecxz
mov
mov
dec
mov
xchg
and
xchg
sub
pusha
xchg
outsb
mov
add
pmaxsw
lcall
and
push
mov
xlat
loopne
mov
incb
xor
xchg
mov
cs
or
loop
scas
scas
mov
mov
movsb
mov
push
xchg
scas
and
adc
test
int3
stos
out
sub
cmp
cmp
xor
add
jo
sbb
dec
lea
test
out
in
push
popa
cmp
in
mov
jnp
aas
mov
xor
xchg
sbb
stos
int
cmp
out
pop
lahf
cmpsl
xor
lods
sbb
add
fld
xor
call
ja
or
cs
lods
das
fsubrl
xchg
sbb
aam
mov
add
pusha
sub
mov
daa
gs
jbe
nop
push
mov
and
mov
sarb
push
jecxz
andb
vsqrtps
mov
mov
movsb
sbb
and
aas
cmpsl
adc
fldt
fcomp
dec
scas
adc
cli
dec
aas
loope
cmpsl
sub
or
pop
adc
xor
scas
shll
in
mull
mov
dec
xor
add
cli
sub
cmp
jnp
mov
fwait
mov
lahf
adcb
repz
and
mov
ret
icebp
cld
dec
mov
out
hlt
adc
bnd
sbb
xchg
push
ljmp
fldl
ret
mov
mov
jp
cmpb
lock
jge
mov
ja
and
cmp
pop
xchg
out
scas
adc
xchg
push
mov
mov
insb
aas
and
and
mov
push
mov
mov
dec
rcll
icebp
mov
sbb
popa
xchg
mov
inc
mov
cwtl
pop
and
push
idivb
cwtl
dec
or
test
icebp
mov
mov
les
dec
ret
xchg
pop
hlt
inc
xor
in
test
mov
mov
jle
pop
jb
dec
xor
movl
imul
scas
ficoms
sub
nop
dec
mov
and
push
jle
mov
pop
arpl
push
adc
test
pop
sub
cmp
mov
inc
cltd
pop
xor
mov
aas
jnp
jnp,pt
fimuls
jb
enter
push
cmpsl
mov
sub
mov
imul
cld
mov
insl
mov
out
cmp
call
xchg
xchg
and
lahf
dec
mov
iret
jnp
arpl
jbe
dec
pop
jnp
jmp
mov
lcall
xor
mov
jo
mov
clc
nop
test
mov
outsl
icebp
cmp
mov
sbb
pusha
jno
cmpsl
and
stos
mov
movsl
jnp
movsb
push
sub
pop
imul
into
fldenv
mov
imul
pusha
xor
sbb
cmp
cmpsl
jo
out
add
jns
jecxz
push
in
sbb
sub
cmp
das
cwtl
xchg
roll
jbe
pop
repnz
sahf
push
leave
mov
xlat
push
jb
mov
and
mov
lods
add
mov
stos
or
mov
movsl
cltd
iret
fbld
into
mov
in
adc
xchg
xor
imul
mov
sahf
mov
sti
stos
inc
mov
pop
sub
insl
std
in
scas
xor
pop
stos
fdiv
push
cmp
ljmp
mov
stc
ret
imul
mov
roll
xlat
pusha
push
push
lcall
mov
lret
dec
jae
mov
out
sub
and
in
cltd
ds
fdivs
mov
jl
mov
ret
mov
cmp
aam
cmpsl
dec
fs
cltd
adc
nop
lea
js
enter
mov
leave
out
pop
jo
sbb
pop
mov
test
mov
pop
jge
in
add
inc
enter
pop
clc
mov
mov
dec
sub
mov
fbstp
dec
jp
mov
push
scas
cmp
mov
xorb
mov
fistps
divb
dec
mov
mov
xchg
icebp
pop
shrb
dec
fld
or
xor
jno
aaa
cltd
lcall
lock
mov
in
lea
and
pop
and
adcb
add
test
cmpsl
xchg
in
sub
adcw
rcl
out
mov
sub
xor
movsl
push
lahf
jns
imul
popf
sbb
jle
jecxz
shlb
xor
pop
cmp
mov
xchg
jno
fsubl
outsb
fldt
ja
fmuls
in
pop
loope
mov
xchg
scas
stc
in
mov
jbe
mov
lret
pop
and
inc
shrb
mov
rcrb
fcom
outsl
xorb
cmp
cmpsl
ljmp
pop
sub
mov
mov
dec
cmp
sbb
pop
push
scas
sbb
stc
inc
test
scas
ds
and
dec
loope
adc
or
mov
lds
jecxz
outsl
mov
inc
xchg
pop
sub
shll
sahf
xlat
stos
imul
pop
std
je
pop
cmpsl
mov
push
daa
loop
enter
lods
jbe
incl
ljmp
and
in
jecxz
cwtl
cwtl
dec
popa
mov
sbbb
xor
outsb
scas
cli
fcom
xchg
push
pop
mov
or
inc
xchg
repnz
sti
loop
pop
mov
loope
xchg
pop
push
clc
imul
mov
adc
xchg
movsl
inc
and
mov
mov
dec
xchg
and
out
mov
mov
add
sub
inc
mov
adc
mull
repz
push
mov
pop
adc
lret
xlat
ljmp
sti
mov
adc
fwait
or
cmp
push
icebp
mov
cmp
fdivl
mov
mov
xor
das
shrb
popf
pop
or
outsl
mov
add
ret
mov
jbe
cmpl
jmp
repnz
js
mov
mov
push
out
popa
mov
mov
stc
movsb
decb
mov
sub
jecxz
push
mov
mov
fnstcw
data16
pushf
jnp
add
xorl
mov
pop
jmp
dec
lds
mov
inc
repnz
xchg
fwait
mov
push
mov
push
mov
in
or
aaa
out
xlat
add
js
mov
mov
jno
aas
xor
or
or
jge
in
xlat
push
inc
push
xchg
hlt
popl
and
jmp
xchg
mov
roll
loop
cmpsl
in
iret
pop
pushl
into
push
jns
mov
leave
les
jne,pt
mov
loope
inc
pmulhw
repz
mov
mov
or
push
cmpsb
pusha
movsl
mov
mov
cmp
jae
adc
lods
das
lds
adc
aas
int
cmpsl
pop
daa
or
mov
and
push
jno
sbb
mov
cmp
push
inc
mov
mov
sub
mov
mov
mov
repz
mov
ss
icebp
loop
ret
outsl
jo
shll
and
mov
arpl
mov
mov
mov
mov
lcall
add
stc
hlt
mov
lods
stos
test
jne
aaa
jg
and
cmp
and
mov
fnsave
pop
movb
and
outsl
or
or
push
sarl
sub
ret
adc
sarl
fiaddl
sbb
lds
mov
adc
add
and
cmp
or
dec
xchg
push
pop
cmc
mov
and
add
lahf
movsb
negl
iret
xor
mov
in
sub
icebp
lods
daa
out
les
into
shrl
call
jb
jle
xor
cmpsl
mov
jmp
stos
or
and
and
or
dec
mov
mov
xchg
push
sbb
mov
mov
or
sbb
nop
lcall
adc
pop
mov
xlat
rcrl
pop
mov
inc
sub
cltd
fsubr
sti
test
stos
shlb
lea
adc
mov
xor
loope
push
pop
add
out
rcrl
dec
mov
and
insb
and
mov
test
xor
icebp
fisubl
and
mov
fldcw
mov
insb
xchg
adc
mov
and
inc
and
loopne
mov
or
inc
mov
sbb
fcmove
push
add
pop
dec
pusha
xor
fcom
test
inc
mov
cmc
xlat
and
pushf
hlt
push
jmp
cmpsl
cmp
xor
in
icebp
mov
cmp
arpl
sub
cmp
call
je
cltd
mov
outsl
dec
adc
cmpsb
xchg
loope
xor
test
repnz
mov
pop
jg
xchg
aam
mov
mov
mov
cmpsl
lret
in
aad
mov
mov
xchg
xorb
xchg
mov
ja
cmp
push
mov
inc
mov
scas
pushf
sbb
sub
inc
addr16
mov
cli
pop
cwtl
shlb
fs
cmpsl
test
fdivrs
mov
push
or
or
mov
test
nop
push
mov
fs
push
sbb
ss
mov
xchg
imul
mov
in
fwait
push
inc
adc
popf
cmpsl
jb
dec
cltd
fdiv
aam
mov
sbb
mov
cmpsl
adc
sbb
lahf
jae
mov
mov
xchg
add
aas
xor
ja
arpl
adc
push
mov
scas
mov
jbe
xchg
imul
enter
sub
sbb
cwtl
ficoml
test
dec
cmpsl
mov
push
out
push
stos
jge
ljmp
roll
xchg
pop
lock
jne
frstor
lret
pop
mov
xchg
sub
mov
push
sub
jo
loope
dec
dec
jne
lea
ret
or
or
das
lods
fisubl
jp
mov
jb
mov
mov
pop
inc
mov
fwait
lods
testl
sahf
fstl
mov
enter
pop
mov
mov
into
cmp
mov
xchg
pop
mov
shlb
add
aam
mov
pop
cmp
mov
mov
sbb
hlt
pushf
dec
insl
mov
fsubrl
clc
loopne
mov
cmp
cmp
mov
lret
push
loope
das
adc
mov
push
inc
adc
out
sub
mov
and
mov
mov
push
pop
hlt
test
sbb
insb
loope
xchg
jne
mull
mov
fdivr
lds
jp
cmpsb
xlat
sarb
add
in
mov
fs
cltd
or
xor
subl
leave
shll
mov
loop
rolb
xor
xchg
jp
les
sub
jnp
leave
or
lods
pop
mov
movsl
movsb
jg
out
mov
test
xorb
jecxz
andl
popa
test
cltd
divl
jb
mov
xchg
mov
push
sahf
mov
jnp
dec
dec
test
in
mov
xlat
add
inc
fnstenv
sbb
sbb
dec
out
loope
sub
mov
movsl
jae
push
pop
sarb
ja
mov
fstpl
or
sbb
adc
sbb
push
dec
mov
push
mov
xor
aas
dec
inc
cmpsl
or
lret
rorb
mov
jb
js
loopne
aad
ss
mov
push
pop
sarl
cltd
or
cmp
or
mov
xchg
mov
int
jmp
and
out
xlat
xchg
push
shl
or
mov
out
mov
lds
fadds
mov
jb
or
mov
sub
pop
stos
xlat
jmp
mov
mov
push
xor
add
lods
sbb
addr16
scas
sub
mov
mov
imul
push
jecxz
jns
es
xchg
add
mov
mov
cmc
fwait
movsl
add
sarb
lret
inc
xor
ss
xlat
call
add
jg
cmc
mov
daa
and
lcall
into
push
test
aam
andb
xor
mov
cmp
and
cmpsb
sbb
xor
out
xchg
push
es
and
in
mov
cmp
inc
xor
add
push
test
xchg
xchg
xor
jo
test
cltd
js
cmp
mov
nop
xlat
push
std
adc
inc
xchg
sahf
ss
cmp
mov
xchg
xlat
leave
mov
dec
xor
mov
xchg
sbb
mov
mov
or
mov
mov
push
scas
dec
inc
or
test
stos
popa
adc
sub
mov
std
adc
push
scas
mov
dec
lods
sbb
repz
mov
pop
js
jmp
mov
pop
push
mov
cltd
bts
shrl
mov
mov
add
loopne
sbb
enter
push
test
fstpl
dec
mov
mov
testl
mov
xlat
sub
lock
push
mov
pop
xor
stos
mov
or
divl
test
mov
mov
stos
fwait
dec
mov
lret
sub
mov
sbb
jbe
pop
cmpsb
fsubrs
sbb
popf
push
das
rcll
out
add
btcl
mov
ret
das
mov
inc
jp
nop
adcb
push
cmp
xchg
sti
cmp
and
test
sub
xchg
xor
cmc
insl
sub
push
andb
cmp
icebp
or
pop
mov
and
fcmovnbe
test
add
xor
mov
mov
cmc
adc
jmp
fwait
dec
cmp
mov
mov
rorb
xor
leave
scas
mov
dec
push
and
mov
xor
aaa
mov
loop
xor
mov
mov
cmp
cmp
aam
mov
adc
add
push
mov
mov
mov
xlat
imul
mov
mov
out
ljmp
fs
fisubrl
xchg
push
popf
fucomip
cmpsl
idivl
xlat
cli
insl
or
scas
rcll
mov
mov
iret
inc
cwtl
pop
pop
outsb
shrb
xor
mov
dec
mov
divb
mov
rorl
dec
adc
mov
mov
xlat
rolb
mov
les
dec
stos
rcrb
daa
ret
fstpl
mov
add
dec
dec
push
scas
dec
jge
imul
popf
ficompl
mov
mov
mov
pop
ret
adc
pop
pop
cmpsl
mov
dec
sub
mov
lock
bound
mov
mov
cmc
js
mov
scas
push
mov
popf
test
les
lcall
mov
mov
stos
or
rolb
movsl
js
mov
pop
cwtl
lods
andl
test
mov
push
fcoml
xlat
inc
xor
add
sub
insl
ds
lret
fnstenv
and
mov
pusha
mov
jbe
mov
mov
pop
mov
mov
test
out
shll
mov
jle
xor
mov
inc
std
add
sub
call
adc
sbb
daa
push
xor
lods
cmp
scas
push
incl
into
mov
inc
cmp
loop
div
push
in
mov
data16
mov
movsl
cwtl
rolb
push
out
movsl
xchg
ret
sbb
xchg
jle
mov
xchg
mov
daa
dec
scas
push
mov
int
jbe
sub
mov
fwait
add
mov
fbld
popa
ss
sub
inc
xlat
sub
aam
mov
push
bound
shl
mov
daa
push
lret
arpl
pop
pop
and
or
cmp
js
or
mov
pop
push
cmp
and
adcl
cmpsb
jnp
add
cmp
xchg
mov
aad
shrb
adc
and
mov
cmp
add
fcmovnbe
mov
cwtl
mov
shrb
insl
js
sub
xlat
add
cmp
mov
mov
sbbb
cmp
cmc
mov
mov
cmpsb
push
dec
sub
rorl
adc
stos
in
lods
sbb
mov
mov
and
jb
dec
out
sub
loopne
xor
out
mov
inc
push
aam
mov
cmpsl
adc
inc
mov
push
scas
ss
or
sahf
loopne
shrl
jge
rcll
icebp
nop
cmpsl
dec
cli
xor
pushf
iret
stos
testl
scas
push
mov
sub
gs
mov
xor
push
mov
lret
push
inc
mov
mov
xor
sub
cmc
push
mov
popf
mov
mov
mov
dec
push
cwtl
inc
fidivrs
mov
sub
mov
pop
lret
loop
mov
pop
mov
jae
sbb
jle
lcall
cwtl
adc
add
pop
test
sbb
lods
fwait
cmpsl
mov
jp
xchg
xor
repnz
js
mov
mov
dec
inc
mov
mov
into
pop
fldenv
and
cmpsb
mov
lea
push
mov
mov
fwait
ds
xchg
add
ret
out
adcl
out
loop
nop
insb
shll
mov
ret
cmpl
stos
scas
mov
fisubrs
mov
xor
or
ret
jb
sbb
lods
mov
inc
cwtl
xor
and
mov
notl
insl
cmp
arpl
mov
daa
cmp
mov
fwait
and
fnstsw
imul
xor
sbb
pop
xchg
lock
mov
js
scas
mov
adc
mov
ss
adc
mov
lea
leave
gs
mov
out
xchg
aam
pushf
std
push
sub
movsl
pop
cld
stos
in
pop
jnp
sbb
adc
mov
lock
mov
or
js
nop
pop
ss
xchg
shll
push
mov
pop
shll
cmpsl
dec
incl
and
and
popf
push
js
pop
mov
mov
ss
outsb
sub
and
scas
rcrb
jl
mov
lock
mov
dec
jns
popf
jne
stos
mov
mov
and
loope
mov
adc
mov
shl
push
and
adcb
ret
and
shl
aas
std
jg
js
fistl
inc
mov
xor
push
and
adc
pop
mov
repnz
jo
ljmp
push
sub
das
lcall
cmp
cltd
std
les
lcall
push
aas
mov
push
lods
sbb
add
xchg
dec
xlat
divb
fs
pop
lods
in
stc
sbb
scas
push
cli
or
and
rcrb
mov
outsl
xlat
adc
dec
mov
and
lcall
test
xchg
cmp
lahf
movsl
xchg
popa
xchg
aas
sbb
stos
sbb
pushf
stos
push
in
or
cmp
xchg
push
enter
sub
mov
cltd
daa
jmp
out
mov
xor
mov
push
fdivs
movsl
xchg
or
cmp
lahf
int
mov
cs
dec
ljmp
daa
add
xor
imul
pop
mov
cmpsl
out
imul
fdivr
test
jge
push
xor
and
xor
mov
dec
sahf
lea
or
add
xchg
xlat
push
or
push
xchg
xor
insb
pop
loop
loopne
cwtl
bnd
fstpl
sub
incb
aaa
mov
xchg
jne
fcmovb
movsl
jb
fwait
mov
dec
ljmp
lcall
nop
scas
dec
pop
mov
or
jge
je
fnsave
sti
scas
decl
fisttpl
lea
push
sbb
icebp
jo
sub
iret
popf
or
or
cmpsl
jb
inc
cmp
int
push
mov
xor
xchg
dec
jg
mov
fcos
fnsave
mov
cmp
ljmp
icebp
inc
mov
inc
je
push
push
popf
movsb
mov
data16
test
int
mov
lea
jge
movsl
mov
jmp
lcall
stc
push
das
out
aas
pop
xchg
cmpsl
ret
push
adc
inc
loop
movb
sub
inc
pop
cmp
mov
cmp
jp
mov
mov
aas
pop
clc
sbb
adc
aam
jae
adc
and
mov
push
sub
cltd
lcall
inc
shll
imul
mov
mov
mov
inc
out
or
mov
sbb
std
mov
sub
mov
repz
imul
xchg
ljmp
rol
clc
sbb
inc
stos
mov
addr16
dec
cwtl
loope
xchg
call
dec
mov
insl
sbb
movb
or
xor
push
sbb
push
mov
jg
mov
jo
dec
add
mov
sub
js
pusha
cwtl
aad
jnp
mov
das
and
mov
mov
inc
sbb
mov
push
cwtl
pop
mov
mov
fwait
mov
sahf
sub
popa
scas
push
shlb
cmp
into
test
sbb
sub
dec
cwtl
xor
inc
rcrb
pop
test
iret
hlt
addr16
sti
mov
inc
dec
js
inc
push
dec
lods
ret
imul
push
fsubrs
stos
dec
bound
and
cld
cmpsl
sub
or
mov
cs
in
fdivrl
or
not
sub
mov
scas
cmpsb
lods
das
js
fisubrl
into
mov
adc
and
jno
xlat
std
cltd
push
dec
movsl
mov
sub
sti
mov
mov
inc
mov
jmp
fcomps
das
cmpsl
mov
mov
nop
out
dec
push
pop
movsl
dec
cwtl
add
out
ja
jbe
test
aas
mov
inc
jg
cmc
imul
mov
xor
and
repz
cmp
jnp
mov
mov
lcall
push
arpl
frstor
movsb
jge
popf
add
mov
mov
aad
outsb
loop
mov
xchg
and
aam
fistpll
mov
xchg
in
push
xor
movsl
xor
test
repz
mov
loope
negl
gs
std
pop
mov
fwait
sub
into
mov
sub
and
mov
loope
lods
inc
icebp
outsl
stos
xlat
dec
jmp
shll
xchg
or
push
outsb
cmpsl
xchg
adc
dec
repz
js
jo
les
je
or
mov
xor
loope
jb
mov
inc
imul
mov
jmp
mov
mov
cs
mov
int
push
les
lret
xchg
outsl
inc
jp
fcoml
inc
add
and
mov
les
push
dec
or
shlb
ficomps
lret
in
and
jns
andb
cmpl
mov
loopne
jno
inc
mov
mov
aam
push
ljmp
or
mov
adc
dec
cmp
aaa
fstl
mov
ss
mov
rol
mov
mov
mov
popa
cwtl
pop
mov
in
push
inc
and
jo
push
enter
dec
mov
cmp
movsl
jno
sahf
push
and
mov
mov
stmxcsr
add
pop
rol
outsb
pop
leave
mov
mov
xor
jnp
movsl
push
mov
in
js
stos
pop
push
test
pop
xchg
add
inc
mov
pop
jge
out
sub
cwtl
in
mov
and
jp
js
jl
mov
sub
push
out
mov
inc
fldenv
inc
into
jnp
sarb
addr16
inc
mov
xor
sub
mov
pop
adcl
mov
and
jb
outsl
dec
xchg
scas
lret
lds
jp
mov
pop
cmpl
sub
adc
inc
mov
pusha
lret
add
hlt
mov
imul
mov
dec
xorb
jp
adc
cmp
pop
push
xlat
sub
cwtl
mov
aas
jnp
inc
mov
iret
mov
mov
cld
out
mov
mov
jno
xor
xchg
xor
ljmp
popa
mov
add
sub
stos
jae
test
clc
ret
add
sbb
scas
pushf
outsb
cmc
mov
xlat
mov
fstps
repnz
shrb
mov
imul
mov
dec
addl
ja
inc
sub
mov
popf
dec
cmpsl
enter
cmc
mov
xor
jmp
sarl
mov
xor
aad
test
inc
jmp
push
pop
mov
and
and
bound
lcall
push
add
mov
push
dec
adc
outsl
imul
inc
mov
stos
xchg
dec
dec
add
cmp
xchg
lret
pop
mov
shl
xchg
out
push
in
mov
mov
xchg
lock
jb
cmpsl
ljmp
cs
into
scas
mov
lahf
sbb
ficoml
popa
cwtl
test
cltd
bswap
pop
mov
sbb
mov
insl
cld
sub
fsubr
sbb
xor
sbb
lods
repnz
push
test
sub
lods
add
test
js
lcall
adc
inc
js
and
fisubs
rcrb
call
int
cli
sub
leave
ja
mov
jp
pop
push
ss
int
sub
sbb
mov
or
stos
mov
jmp
pusha
sub
repz
mov
or
lret
mov
xchg
lods
scas
in
mov
ret
xor
aaa
insb
and
pop
shrb
xchg
sub
mov
addb
shll
xor
jmp
mov
xchg
out
dec
mov
sub
add
xor
xlat
hlt
outsl
scas
sub
mov
dec
cwtl
xchg
mulb
shlb
jbe
jge
pop
push
inc
cmp
test
xor
sarl
mov
rorb
fs
test
or
adc
loopne
std
dec
int3
fcoms
leave
insb
inc
mov
into
sbbl
cmpsl
cmp
and
ss
rol
mov
in
lods
push
dec
cmp
or
push
lahf
icebp
mov
and
mov
mov
sbb
mov
mov
jl
inc
pop
sbb
mov
fucomi
mov
mov
sahf
scas
and
jmp
inc
sub
fsubl
dec
xlat
fs
push
int3
mov
mov
sub
push
lea
ret
into
adc
mov
aad
mov
cmp
mov
lea
cmpsl
xchg
jge
js
mov
pop
jle
cmp
scas
lret
mov
mov
xchg
outsl
cmp
jmp
add
and
cmp
xchg
sub
pop
out
lods
loope
add
inc
in
shll
sbb
std
mov
and
movsl
mov
jbe
push
mov
xor
cmp
mov
lret
cwtl
push
sbb
dec
cltd
xor
imul
mov
adcb
sti
cmpsl
les
pop
lret
mov
dec
xor
and
adc
rorl
adc
mov
jnp
lds
js
aas
xor
xchg
jecxz
ds
pusha
mov
jo
pushf
inc
cmc
stos
xlat
pop
roll
or
fdivrs
sub
mov
cwtl
rol
outsl
jmp
mov
dec
je
aam
jns
mov
imul
mov
add
hlt
jl
inc
scas
lock
inc
test
nop
cmpsb
cwtl
scas
sbb
push
rorl
mov
mov
inc
test
icebp
or
and
mov
inc
mov
mov
inc
stc
mov
adc
int3
icebp
push
in
xor
test
and
sbbl
or
fdivrs
leave
fdivr
in
out
mov
loopne
or
cmp
dec
mov
test
les
jne
xlat
icebp
adc
outsl
xor
inc
cwtl
cmc
cli
ss
test
cmp
sub
mov
cmp
clc
xor
std
cmpsl
cs
xchg
mov
ja
pushf
dec
mov
jl
and
sub
mov
mov
cwtl
jbe
ret
mov
cmp
in
push
fsubrl
ret
ret
mov
jno
iret
push
aas
mov
enter
jp
jne
in
cmpsl
jmp
sbb
mov
cs
pop
or
test
imul
push
add
enter
jne
add
cmp
mov
lret
sbb
mov
inc
and
mov
cltd
push
sarb
lret
xchg
mov
test
sub
pushf
xchg
adc
pop
mov
scas
mov
stc
aas
pop
in
ss
add
pop
mov
out
xor
xchg
loop
sub
rorb
mov
jmp
and
roll
jnp
xchg
xor
push
repz
jmp
dec
stos
lahf
xlat
adc
push
sub
cmpsl
lods
push
std
mov
sbbb
fs
or
dec
sub
pop
and
push
jg
dec
mov
pusha
lcall
mov
jnp
andl
xchg
lods
and
movsb
and
or
les
mov
cmp
mov
jp
push
ss
sub
or
cwtl
pop
fwait
adc
scas
cmpsb
and
idivl
cltd
aaa
mov
xor
data16
mov
mov
mov
dec
je
push
js
test
jno
out
pop
and
or
std
dec
mov
inc
mov
push
clc
or
imul
jnp
rolb
xchg
dec
ja
inc
mov
enter
ljmp
xchg
cmpsl
pusha
movsbl
mov
mov
mov
inc
lcall
mov
add
dec
mov
and
pop
inc
pop
mov
ficomps
rclb
ljmp
mov
mov
cltd
mov
arpl
jmp
pop
jecxz
mov
fdivs
aam
push
cmpsl
inc
or
cli
int
stc
fwait
mov
jmp
xchg
xor
fadds
in
es
mov
adc
pop
mov
and
inc
mov
pop
roll
iret
dec
jns
pop
xchg
cmp
cmpsl
inc
or
xor
in
xor
andl
hlt
movsl
sub
xchg
xchg
push
or
rcl
daa
lcall
inc
add
push
mov
or
sarl
fsubrs
scas
xlat
pop
ss
push
mov
inc
or
and
mov
jle
inc
sti
stos
mov
imulb
add
sbb
mov
mov
mov
das
jmp
popa
adc
arpl
sub
mov
mov
lret
rorl
jecxz
xlat
jbe
or
fdivl
in
testl
mov
pop
cmp
cs
insl
data16
add
ss
sarb
test
leave
xor
push
fisubl
jbe
stos
xorl
add
mov
mov
push
xchg
or
add
pop
jecxz
xorl
mov
and
iret
mov
cmp
dec
sbb
ffree
mov
fwait
and
cmp
cmp
sub
arpl
test
stos
adc
out
and
enter
push
pushl
push
mov
cmpsl
clc
xorl
or
add
and
xor
jl
mov
movsb
into
mov
js
lods
xor
movsl
adc
cmp
lea
shll
mov
lret
inc
mov
shrb
cltd
xchg
jb
in
xchg
pop
or
mov
cld
shl
xor
and
adc
mov
mov
addr16
fsubrs
inc
sub
mov
outsl
adc
mov
addl
push
or
inc
mov
insb
sbb
scas
push
or
xchg
xor
adc
aad
int
lret
dec
imul
into
sahf
out
cmpsl
out
arpl
ja
decl
in
mov
push
push
sub
xchg
mov
cmpsl
orl
inc
rcl
or
fldcw
mov
fimull
aas
rcrl
cmpsl
add
jne
cmp
mov
and
push
mov
sbb
lds
addr16
mov
int
cwtl
scas
int3
jne
stos
test
sbb
repnz
sbb
mov
jne
sbb
lods
rorb
test
es
clc
and
loopne
sbb
int3
data16
outsb
pop
test
mov
dec
gs
push
mov
xlat
fwait
xor
sbb
jns
sub
mov
inc
mov
aam
fnstsw
leave
xchg
stos
icebp
push
or
cmp
pop
sti
jle
test
ficompl
inc
test
cltd
jmp
mov
dec
and
js
mov
mov
xchg
push
lret
movsl
sbb
out
lods
mov
cmpneqps
cwtl
stos
stc
jmp
loopne
push
sbb
test
jnp
jmp
inc
dec
xchg
cmp
mov
sbb
fidivs
in
mov
out
jge
ss
insl
mov
fstps
mov
imul
xchg
sub
cli
jge
into
jp
mov
cmc
mov
push
mov
dec
call
cwtl
jnp
sti
cmpsl
mov
addr16
fdivs
sbb
in
out
and
mov
lahf
shl
dec
lods
jl
xchg
divl
cmpsl
call
sbb
in
push
test
in
jns
or
std
loop
ss
gs
jb
mov
test
sub
mov
xchg
aam
pop
adc
and
in
and
push
xchg
push
daa
jbe
add
scas
addl
sbb
mov
push
pop
test
mov
adc
subb
xchg
mov
sub
push
sbb
mov
dec
in
out
mov
cmpsl
mov
mov
adc
lahf
pop
movsl
push
jge
push
xchg
pop
sub
and
jg
sbb
mov
jbe
mov
inc
mov
in
sahf
jno
push
dec
xchg
cltd
ja
add
scas
loopne
lds
jge
add
lock
push
cwtl
sub
mov
ja
inc
dec
add
pop
repnz
shlb
inc
mov
int
mov
mov
aas
cmpsl
mov
mov
addl
inc
push
cmp
and
jmp
aas
mov
cmpsl
xchg
jg
dec
mov
ret
mov
inc
push
shrl
loope
test
sbb
adc
dec
mull
ljmp
jnp
bound
out
xor
mov
xor
and
inc
sti
pop
xor
loope
mov
lds
mov
mov
stc
aas
jle
cmpsl
xor
cmpsl
movsb
cwtl
icebp
test
stos
popa
xorb
int3
fs
jecxz
in
mov
sti
dec
mov
loope
nop
rcll
test
popf
sub
mov
adc
loop
xchg
ljmp
inc
shll
ret
lcall
add
ret
jbe
daa
mov
gs
mov
push
xchg
subb
fcoms
arpl
pop
punpcklbw
cmpsl
add
shll
cmc
outsl
sub
push
mov
xor
rorl
mov
mov
cltd
or
sbb
push
lahf
out
mov
push
xorl
mov
jmp
imul
popf
popa
jno
sub
std
sub
ror
adc
and
stos
inc
daa
jecxz
mov
sub
in
xlat
cli
mov
mov
cmp
add
mov
fisubl
lret
dec
inc
push
mov
test
sub
jecxz
push
pop
fcomp
outsl
jae
arpl
add
adc
imul
sti
inc
lea
rcrl
cmp
movsb
jp
fsubrp
mov
scas
pop
pusha
dec
add
popf
in
mov
das
test
pop
ret
cmp
sbb
ret
or
pop
jge
arpl
insb
jecxz
cmpsb
mov
and
sarb
mov
movsl
or
jmp
mov
jle
mov
pop
nop
cmpsl
inc
test
push
xor
jns
lods
dec
jnp
sub
mov
push
and
mov
xchg
aam
jns
mov
mov
in
js
arpl
mov
inc
shr
sbb
outsb
xchg
mov
mov
jecxz
aam
inc
mov
lds
call
lcall
xor
movsb
pop
pop
jno
or
jnp
cli
fidivs
push
movsl
pop
inc
add
aam
add
idiv
mov
lret
sbb
in
aas
lahf
daa
cmpsl
sahf
rcrb
push
movsb
inc
mov
xchg
gs
negb
dec
mov
fsubr
mov
mov
jge
ret
lret
mov
ret
push
push
mov
jb
inc
and
mov
mov
cmp
pop
xchg
cmc
xlat
sub
sub
mov
dec
movsl
lcall
xchg
lret
imull
sub
or
mov
cmp
xor
mov
lea
xor
mov
pop
mov
in
je
and
adc
jmp
mov
and
fs
mov
int
inc
mov
fsub
adc
sub
mov
push
scas
movsl
add
ds
stos
in
push
test
popa
push
aam
cli
pop
pop
mov
jg
jge
fwait
mov
mov
xor
mov
sbb
aam
push
movsl
test
add
sar
mov
adc
rcl
repnz
push
push
sbb
cmp
xor
mov
aas
loop
test
arpl
pop
outsb
mov
mov
rclb
add
mov
scas
iret
fdivs
lods
mov
mov
daa
sarb
sbb
in
iret
shlb
jns
cmpsl
cmp
push
add
pop
pop
andl
insl
leave
stos
pop
mov
lahf
fnsave
aad
jp
mov
popa
inc
popf
xchg
pop
mov
leave
fidivrs
dec
inc
xor
mov
shrb
lods
mov
out
dec
arpl
add
sbb
popf
setns
addr16
lds
in
insl
rorb
add
js
and
lret
movsb
mov
cmp
rol
xlat
pushl
or
push
cld
divl
mov
scas
mov
mov
jmp
cld
cmc
scas
sbb
sbb
mov
pop
push
inc
sbb
push
mov
clc
mov
lcall
notl
or
pop
test
pop
mov
pop
mov
add
xchg
and
das
inc
stc
test
xor
mov
mov
mov
cltd
mov
mov
lock
mov
sub
popf
loope
sbbl
clc
jbe
ret
push
mov
or
mov
mov
dec
in
cmpsl
test
jmp
bound
shrb
mov
adcb
inc
rorb
in
int3
fstpt
xchg
fsub
and
mov
dec
pusha
stc
cmpxchg
mov
rcrb
jg
repnz
cmp
xlat
cmpsl
cmpsl
lret
cwtl
lds
and
mov
cmp
test
mov
mov
insl
dec
push
in
ja
push
add
jnp
leave
push
scas
int
clc
cwtl
mov
shl
cmpsb
sbb
popl
xlat
or
popf
pop
cmp
das
xor
jecxz
insb
push
mov
mov
mov
lcall
imull
xchg
add
pushf
mov
jmp
stc
mov
cld
in
mov
rcll
daa
mov
ret
jge
test
cmpsb
ds
in
jae
push
pop
jmp
clc
inc
sbb
adc
mov
sbb
cmp
pushf
aas
xchg
adc
inc
cltd
mov
stos
pop
cmp
dec
movsl
rorl
xchg
js
dec
clc
test
repz
pop
adc
test
cmpsl
pop
inc
jl
and
push
xchg
lods
dec
mov
push
push
push
shr
cmp
cmc
push
mov
stos
jne
insb
fstpt
jns
ss
push
out
loop
cmpsl
mov
out
or
pop
clc
mov
xchg
stc
sub
xchg
dec
scas
test
mov
gs
lret
and
mov
jecxz
jg
push
pop
inc
xlat
mov
loope
mov
ret
lock
es
lahf
and
jge
pop
call
or
cwtl
jo
sub
scas
mov
mov
dec
stos
daa
pop
push
shlb
inc
inc
lahf
xor
test
aaa
ljmp
pop
mov
cmpsl
jbe
xor
cmc
mov
ficomps
mov
adc
jmp
jb
scas
xchg
mov
out
jno
gs
mov
out
lods
aas
jg
cmp
sbb
mul
xchg
mov
jb
icebp
mov
jo
sbb
inc
in
add
stos
inc
xlat
ret
xor
mov
add
inc
cmc
xchg
xlat
cmp
xchg
cwtl
xor
sbb
test
mov
and
push
mov
ret
mov
or
fidivl
push
xchg
rcl
lret
push
dec
mov
add
loope
es
movsl
sub
jmp
cli
adc
inc
mov
mov
punpcklbw
jp
jno
xlat
mov
sti
inc
test
mov
scas
lods
xor
pushl
lcall
push
popf
jmp
mov
or
xchg
bound
pop
adc
aaa
int
dec
mov
not
sub
out
push
lcall
pop
mov
cmpsb
mov
es
cwtl
adc
jle
daa
fld
gs
sbb
sub
mov
xlat
xchg
ret
pop
jne
movsl
adc
scas
mov
mov
dec
and
add
mov
icebp
dec
mov
in
xchg
leave
mov
mov
and
sbb
fbstp
mov
sub
jge
gs
mov
fwait
dec
xor
scas
xchg
pop
out
sbb
pop
push
cmc
push
xlat
lds
dec
sbb
dec
mov
fiaddl
mov
fdivrl
cmpsb
push
mov
and
mov
je
mov
idivl
mov
dec
mov
xchg
dec
daa
inc
hlt
sbb
andb
dec
dec
dec
inc
mov
jbe
mov
test
jne
pop
sbb
mov
mov
bound
aas
js
cmpsl
xor
xor
scas
pusha
lock
inc
xchg
mov
out
popa
adc
mov
mov
push
jnp
xchg
inc
mov
cmp
aas
inc
stc
cmpsl
pushf
je,pn
add
mov
push
dec
movl
mov
xlat
push
arpl
mov
negl
and
test
mov
cmc
inc
sub
scas
add
jg
add
or
aaa
xlat
pop
not
iret
xor
cmpsl
daa
push
cltd
xchg
sbb
mov
in
jns
or
cmp
daa
mov
arpl
ret
and
push
xlat
cmp
adc
pop
sbbb
and
xlat
mov
inc
dec
mov
pop
fs
cmp
jns
and
cmpsl
pop
xor
mov
scas
jbe
pop
push
int
mov
jnp
negb
sbb
mov
divl
mov
push
dec
decb
mov
or
outsl
pop
mov
mov
mov
mov
xchg
mov
fldl
pop
outsb
test
push
scas
jb
cmp
mov
mov
lds
mov
inc
push
in
fwait
std
scas
mov
aas
and
xchg
shl
cwtl
pop
mov
loope
aam
stos
push
lods
mov
adc
adc
mov
loop
pop
sub
add
lds
cmp
popa
push
mov
movsl
pop
lock
lea
inc
scas
mov
loop
add
mov
test
pushf
andl
inc
data16
mov
sahf
xor
push
loope
jbe
addl
int
and
inc
mov
lea
lret
aas
icebp
mov
aaa
insl
gs
ret
mov
ja
sub
xchg
cmp
in
inc
mov
pop
sub
fimuls
pop
mov
lods
mov
and
cld
mov
inc
mov
fst
mov
das
jno
cmc
jl
mov
dec
dec
sbb
in
test
sbb
sub
aad
adc
jbe
stos
pop
mov
and
lock
and
mov
in
insl
or
ret
cmpsl
dec
xlat
enter
pushf
pop
dec
push
sbb
or
cwtl
fsubl
cmpsl
jmp
mov
push
in
in
mov
shl
subl
xor
sbb
int
mov
xchg
mov
repnz
mov
push
mov
test
insl
jae
mov
fstpl
mov
adc
push
inc
test
in
jge
js
mov
das
lret
insl
mov
int3
test
inc
mov
sbb
rorb
mov
cmp
sbb
inc
cmpsl
jno
inc
jne
icebp
clc
loop
push
insb
dec
mov
imul
push
jo
cmpsb
mov
mov
push
test
jge,pn
data16
inc
cltd
push
loope
mov
mov
jno
and
push
fs
dec
fistps
sbb
test
sahf
xchg
adc
cs
xlat
ljmp
xchg
stc
daa
jg
jmp
cmp
repnz
imul
pop
sbb
jmp
mov
mov
add
mov
mov
mov
addb
jp
fidivs
cmp
mov
jmp
scas
cmp
mov
scas
test
xchg
fsubrl
iret
mov
mov
popf
lret
add
pop
mov
sbb
lock
std
or
pop
loope
cmpsl
adc
iret
push
sbbl
lahf
mov
xchg
jg
int3
dec
adc
dec
aad
fadds
std
lods
and
jnp
out
mov
sbbl
mov
push
lahf
xor
xchg
mov
inc
push
xor
mov
daa
lods
inc
mov
add
aam
inc
mov
mov
xchg
cltd
icebp
cmpsb
into
inc
mov
mov
inc
lods
nop
mov
jns,pn
je
scas
mov
clc
ja
cwtl
push
inc
sbb
mov
std
and
inc
xchg
and
cmp
push
cmc
out
test
dec
test
xor
int3
mov
pop
sbb
ja
mov
cmp
scas
leave
jg
mov
ror
loope
mov
push
lcall
int
orl
cmp
fists
mov
outsb
and
and
jg
sbb
clc
mov
out
test
out
mov
cmc
mov
andb
mov
ffreep
sub
test
jp
xor
fadds
mov
and
fmull
cmp
push
js
mov
pop
loopne
jg
sub
shrl
inc
hlt
es
loope
daa
jmp
xchg
movsb
arpl
movsl
stos
das
mov
cmp
pop
in
mov
xchg
les
mov
ficoml
rcrl
add
shl
movsl
jns
or
mov
mov
mov
and
leave
loope
mov
or
push
lahf
mov
mov
ret
popa
jnp
sbb
sbb
add
mov
push
mov
add
inc
sub
scas
faddl
cwtl
icebp
xor
lea
out
mov
or
loop
dec
cmp
hlt
icebp
xlat
in
mov
loope
xlat
int3
cmpsl
es
inc
push
test
insb
add
out
push
aaa
jnp
xor
into
imul
mov
jmp
push
divb
mov
xlat
incb
add
mov
sbb
pop
lods
call
or
mov
adc
shll
dec
and
test
mov
stc
pop
ja
mov
push
mov
into
in
xchg
stc
popa
shll
mov
icebp
mov
fisttpl
pop
lds
out
imul
mov
shrb
cmp
decl
dec
xlat
shll
pop
pop
arpl
aam
fdivs
outsb
cmp
xlat
lcall
adc
mov
push
sbb
stos
pusha
int3
pop
fwait
dec
cmp
mov
xchg
inc
std
jge
aad
in
xor
clc
jo
xchg
fidivl
cmp
mov
pop
nop
add
pop
imull
cwtl
mov
insb
xchg
cmpsl
mov
fidivrl
jne
mov
or
fisubs
fdivl
jnp
pop
xchg
mov
pinsrw
cwtl
adc
xchg
xor
outsl
mov
popf
pop
divl
jmp
mov
xchg
push
call
add
push
in
mov
cmp
cwtl
ds
adc
test
clc
push
sbb
rorb
inc
xchg
test
enter
xlat
inc
mov
loopne
pop
push
pop
stos
dec
cmc
clc
sti
scas
push
pushf
out
push
xlat
stc
push
test
mov
dec
fmul
sahf
in
cs
jg
lret
ret
sub
lods
dec
shll
arpl
fdivrs
cli
mov
insb
cmpsl
int
cmp
cmpsl
mov
mov
and
insl
outsb
mov
scas
js
dec
ljmp
xchg
je
jbe
xor
lods
test
push
js
and
ja
and
jg
adc
aaa
pop
jmp
test
mov
icebp
cmp
sbb
clc
shll
mov
fistps
into
cltd
sub
arpl
pop
mov
aaa
repz
sbb
jmp
push
mov
inc
ret
pop
push
push
andl
loope
mov
xlat
sbb
mov
or
push
leave
sbb
loope
mov
push
sub
push
movsb
mov
das
fsub
enter
mov
imul
mov
mov
jmp
xchg
cmp
and
int
sub
aad
or
xchg
clc
je
mov
mov
cs
mov
movsl
or
xor
shl
fisubrs
mov
lods
lahf
repnz
shll
push
imul
jbe
call
dec
pop
xlat
loop
pop
fsubrs
mov
mov
push
shll
adc
jb
aad
add
test
cwtl
sahf
sbbb
test
cmp
sbb
pop
sub
pop
mov
mov
mov
sub
ret
xor
xor
mov
fldcw
or
test
stc
mov
das
sbb
les
sbbb
jmp
mov
push
mov
cmp
jg
imul
mov
lcall
jae
bound
movsb
mov
enter
cmp
xchg
cltd
notb
mov
movsl
je
push
mull
xor
mov
insb
cmpsb
lods
mov
out
jno
icebp
or
mov
lea
popa
mov
xchg
int
add
fwait
adc
js
mov
mov
in
cmpb
cmp
pop
sub
xlat
dec
and
mov
push
cmp
pop
mov
cmp
test
enter
outsl
fldenv
sbb
and
mov
push
jb
xor
stos
adc
jne
lea
mov
test
xchg
cmp
loop
int
jg
pop
mov
sbb
sub
movsl
xchg
jp
loopne
cli
idivl
and
mov
fdivrl
pusha
jg
dec
cli
pop
adc
popa
mov
mov
jl
insl
mov
sub
lea
and
rolb
push
mov
cmpsb
movsl
xchg
jge
cmp
fcom
rorb
cmpsl
mov
pop
in
in
aaa
and
lock
repnz
fs
pushl
xchg
shll
xlat
sbb
test
adc
cmp
test
cmpsl
mov
mov
iret
inc
sbb
out
into
xor
imul
arpl
mov
jne
int3
or
push
jge
adc
arpl
mov
jb
es
adc
mov
test
aas
push
jae
loopne
ja
dec
sub
mov
movsl
adc
cmp
jecxz
pop
pop
mov
sbb
das
or
mov
inc
mov
or
enter
xchg
xor
mov
icebp
lahf
sub
scas
sub
pushf
ret
lahf
xor
and
mov
mov
jp
pop
das
mov
pop
pop
pushf
jo
mov
mov
xchg
loope
mov
dec
xorb
dec
dec
mov
out
mov
and
cmpsl
jecxz
mov
aam
sahf
jns
movsb
aaa
xlat
fiaddl
lods
mov
mov
test
lahf
lds
sahf
mov
push
aaa
mov
mov
sbb
xorl
loop
xlat
cltd
mov
mov
mov
dec
mov
mov
lret
imul
sbb
jge
fdivl
aaa
data16
cwtl
fnstsw
enter
les
imul
cs
add
repnz
add
xchg
mov
in
inc
xor
mov
ja
stos
lea
mov
sbb
jnp
enter
inc
in
addr16
fdivrs
rcrl
clc
cmpsl
dec
xor
in
adc
lock
arpl
rol
jnp,pt
xor
mov
sub
inc
push
push
and
inc
sbb
push
inc
push
mov
stos
fbld
cmp
pusha
add
rcl
cmp
mov
mov
cmc
cmpsb
testl
mov
lret
shl
test
int
fidivl
popf
and
loopne
xchg
dec
xchg
lock
test
mov
scas
test
add
int
daa
jbe
test
or
push
mov
leave
inc
cltd
ret
mov
cli
sub
shll
pop
inc
fs
mov
imul
data16
jns
outsl
ret
mov
xlat
in
mov
test
scas
push
xor
push
lret
inc
mov
mov
mov
mov
inc
scas
mov
pop
jnp
push
cwtl
mov
hlt
aam
jle
mov
fistl
push
mov
sub
sarl
les
cmp
mov
adc
rcrl
push
or
pusha
call
mov
ret
loope
push
es
lret
and
or
adc
shlb
cmpsl
lea
and
daa
mov
ret
and
sbb
and
sahf
dec
mov
js
sbb
mov
xchg
in
mov
xlat
popf
fidivrs
decb
mov
hlt
jl
gs
add
pop
dec
xor
insl
mov
sarl
jnp
sti
xchg
outsl
test
mov
mov
xor
pop
lods
mov
loope
fisubrs
mull
xor
cmp
cmpsl
dec
push
dec
mov
jg
and
lret
mov
jbe
mov
test
mov
xchg
mov
fwait
outsb
push
sbb
adc
inc
test
clc
mov
scas
aam
loop
xchg
rcll
mov
clc
sbb
fidivrs
xchg
je
mov
inc
jns
in
popf
in
cmp
mov
push
cmpsb
sub
stos
scas
nop
loope
mov
add
mov
mov
push
into
call
jmp
bound
inc
ja
cmpsl
loope
in
jne
sbb
mov
cmpsb
imul
sbb
bound
movsb
sbb
xlat
ficoms
popa
mov
lahf
mov
mov
cmpsb
cmp
lods
dec
xlat
imul
add
jle
negb
divb
sbb
sbb
pop
lds
jno
outsl
mov
and
xor
mov
aas
jge
pop
mov
mov
xchg
test
mov
mov
mov
movsb
cltd
test
daa
xchg
fnstenv
mov
dec
mov
mov
cmp
push
stos
push
sbb
cmpsb
scas
daa
lea
jnp
inc
sub
dec
push
test
cwtl
inc
lahf
scas
mov
int
inc
shll
fdivs
xor
sbb
cwtl
data16
lret
jno
xchg
or
dec
xlat
pop
cmp
sub
ret
lods
push
pop
push
pop
mov
aam
int3
out
jnp
test
mov
cs
pop
ret
pop
mov
ja
mov
fdivs
jp
push
mov
lea
cmp
jne
jns
cmpsl
or
pop
xor
fcoml
ss
mov
pop
mov
rorl
sbb
pop
icebp
mov
iret
es
and
fistps
mov
sub
xchg
jnp
std
clc
mov
adc
shl
mov
imul
inc
xor
push
xchg
movsl
outsb
xchg
mov
sbb
inc
xlat
sub
fcomi
int
insb
movsl
mov
adcw
popa
into
dec
jns
lahf
mov
lods
jmp
cli
sbb
aas
or
adc
clc
mov
ficompl
mov
int3
add
outsl
scas
negb
xor
jnp
in
test
sar
fcom
test
sub
mov
mov
jmp
mov
lods
push
push
scas
cs
jb
ljmp
fidivrs
divps
push
fs
jecxz
mov
inc
outsb
mov
imul
in
sbb
mov
outsl
mov
dec
jecxz
push
loopne
test
jp
aad
dec
mov
aam
and
sarb
idivl
movsb
dec
out
mov
lahf
ret
mov
xlat
xchg
sbb
add
xor
loop
in
arpl
stc
sbb
mov
lods
jno
out
int3
pop
mov
fdivl
xchg
jns
movsl
iret
ret
dec
cmp
mov
xchg
inc
repz
adc
adc
cmc
hlt
stos
or
mov
sbb
mov
dec
cli
out
gs
ja
jg
add
add
push
test
and
stos
or
test
stos
xor
repz
adcb
adc
mov
xorl
movsb
lea
push
push
xchg
xchg
andl
jo
dec
or
cmp
jp
pop
lea
xlat
lcall
adc
xor
imul
xlat
push
push
cs
ljmp
inc
jmp
jecxz
xchg
mov
cmp
mov
pushf
xor
jo
xchg
loope
jo
imul
insb
in
sub
ret
jl
cmpsl
xor
jns
lea
data16
aaa
aas
ret
sarb
xor
mov
loopne
rorl
dec
cmp
outsb
scas
and
gs
rolb
arpl
fisubrs
mov
cwtl
mov
adc
mov
mov
mov
fsub
gs
xor
dec
adc
adc
xlat
jp
push
outsb
mov
adcl
stc
adc
add
loop
scas
dec
movsb
cmpsb
sarb
lret
pop
in
adc
jecxz
fs
mov
push
or
jnp
lret
and
ret
and
test
jmp
call
mov
dec
mov
out
pop
sarb
mov
mov
mov
mov
mov
jp
mov
pushf
mov
jo
fcoms
fidivl
out
cmp
test
in
xchg
or
cmp
cmpsl
pop
outsb
jbe
pop
pop
les
and
add
hlt
shll
mov
fdivl
dec
fsub
mov
cmp
in
mov
mov
jbe
lret
mov
xchg
mov
sbb
cmpsl
xchg
aad
or
aas
cmp
mov
stos
adc
lds
popf
mov
ret
lea
lods
jbe
push
xlat
cli
stos
les
in
cmpsl
mov
xor
das
sub
xlat
dec
mov
hlt
jbe
xor
clc
pop
mov
enter
inc
out
shll
xchg
mov
jp
mov
sub
mov
mov
mov
inc
jo
movsl
push
out
pop
arpl
mov
cli
scas
cmc
clc
sub
ss
xchg
mov
out
mov
adc
pop
mov
cmpsl
sbb
in
jno
lds
push
fwait
mov
jg
iret
mov
dec
cmpsl
sub
loop
lods
lods
cmp
into
dec
jg
aaa
jecxz
fdivrs
add
push
mov
aaa
xor
mov
push
push
inc
push
mov
es
pop
mov
add
aaa
fisubrl
repnz
cltd
xchg
dec
subb
sub
jg
jns
sahf
mov
stos
mov
pop
mov
pop
xchg
mov
mov
lods
jne
add
pop
inc
mov
lock
add
and
mov
lea
loopne
and
out
inc
daa
popf
pop
fwait
mov
cli
jl
ret
and
arpl
cwtl
mov
call
enter
hlt
and
adc
nop
push
mov
jp
or
stos
xchg
mov
cmpsl
push
mov
bound
and
push
rorb
and
movsb
hlt
out
in
mov
mov
xor
xlat
test
and
mov
loopne
lret
or
pop
mov
pop
mov
scas
jnp
fstps
mov
mov
rolb
xchg
xchg
push
pop
xlat
adc
mov
fwait
mov
int3
loop
inc
popf
xchg
cltd
leave
and
hlt
mov
dec
add
mov
mov
xlat
mul
js
mov
sbb
jge
add
adc
movd
dec
out
shll
popa
pop
clc
xorl
dec
cs
ret
stc
mov
xor
das
movsl
scas
mov
test
xchg
pop
rclb
ss
in
mov
mov
filds
popa
lods
cmpsb
test
dec
repnz
shl
call
out
icebp
pop
mov
jecxz
mov
jnp
xorb
in
mov
or
out
shl
xlat
push
mov
xor
pusha
jmp
dec
inc
mov
bound
jbe
imul
xlat
push
mov
jns
and
dec
mov
dec
mov
jne
lahf
mov
jmp
lret
stos
into
sub
fs
mov
lods
adc
ja
mov
pop
in
icebp
xchg
repnz
arpl
or
test
jle
scas
fists
jae
jmp
push
mov
xlat
mov
dec
mov
gs
out
jg
mov
dec
bound
cmc
inc
mov
scas
sarb
xchg
mov
push
mov
mov
add
mov
xchg
xchg
or
lret
inc
adc
imull
orb
sbb
jno
addb
sbb
and
lret
out
mov
jns
addr16
loope
jno
mov
bnd
jl
aas
mov
sub
cmp
dec
rcrb
mov
sbb
scas
mov
or
dec
aaa
mov
fwait
loop
testb
mov
and
in
pop
mov
lahf
mov
pop
rcrb
mov
shlb
loope
fcomps
xchg
mov
cltd
xor
incb
test
xchg
je
push
lds
jo
inc
fistl
stc
mov
mov
adc
inc
jmp
test
cmp
out
xor
mov
and
pop
mov
xchg
int
sub
fisubs
movsl
fcoml
lret
xlat
mov
icebp
scas
sbb
jo
pop
nop
adc
push
roll
fdivp
mov
test
xchg
sbb
std
imul
cmp
addr16
mov
pushl
mov
xchg
pop
ja
repz
xchg
push
mov
gs
outsl
lods
cmp
scas
stc
scas
jmp
sbb
ds
in
sbb
aas
daa
mov
sub
add
mov
ja
mov
pop
in
mov
imul
dec
loope
and
inc
pop
dec
andl
test
fcomp
and
mov
xor
add
mov
je
adc
lods
xlat
mov
bound
rclb
mov
jl
movsb
mov
and
add
adc
mov
loopne
jl
sbb
xorb
sbb
jo
dec
mov
dec
cmpsl
fwait
sub
mov
adc
push
mov
inc
mov
and
movsb
jle
inc
dec
repz
push
repnz
test
pop
decb
xlat
mov
jge
push
mov
loop
xor
mov
dec
cltd
lret
sbb
clc
std
aas
cmpsl
jg,pn
push
push
sbb
adc
push
jns
sbb
add
aas
mov
mov
sahf
or
std
push
subb
and
mov
mov
dec
inc
add
mov
add
adc
ss
mov
inc
pop
and
stos
xor
cmp
sub
into
cld
mov
insb
popf
arpl
aad
or
and
inc
test
js
mov
and
insl
out
pop
call
mov
movsb
fsubr
imulb
out
mov
lret
dec
xchg
fiaddl
outsl
cmp
scas
aas
xchg
cltd
and
ss
mov
pop
cwtl
movsb
pop
dec
cmpsl
dec
les
mov
pop
stos
mov
jmp
mov
mov
add
ds
mov
jg
pop
es
negl
aaa
les
je
cmpsl
das
sub
mov
dec
ja
imul
inc
jb
lods
and
xor
not
mov
mov
mov
pop
cltd
mov
jno
mov
dec
cmp
push
notl
pop
cmp
adcb
ds
addr16
push
aam
leave
mov
mov
mov
mov
and
mov
xor
mov
movsl
rorl
stc
push
or
mov
add
cmp
or
push
adc
or
notb
in
and
xor
jno
mov
test
sub
jo
cmpsl
dec
rcr
inc
shll
cmpsl
insl
push
dec
xlat
icebp
jmp
xor
mov
orb
movsl
sbb
adc
inc
mov
pop
mov
aaa
aas
adc
les
movsb
mov
push
adc
addr16
pop
xor
test
aad
jecxz
shll
mov
mov
int
mov
adc
mov
jge
cmp
dec
sub
stos
fdivrl
mov
jg
iret
or
push
mov
imul
lock
sbb
aad
inc
leave
mov
cmp
add
cmp
and
or
loop
sbb
fnsave
mov
scas
roll
sbb
mov
cwtl
fiadds
cwtl
mull
and
sbb
test
xchg
mov
inc
fldpi
cmp
sbb
shlb
mov
mov
loop
dec
jge
jp
nop
int
std
testl
xchg
fcomps
lods
iret
in
mov
popf
test
mov
dec
jnp
jp
jb
out
adc
movsl
cmp
or
sbb
shrl
jns
mov
pop
sbb
ja
imul
mov
push
pop
cmp
mov
mov
aam
mov
add
push
pop
mov
mov
es
sti
add
stos
mov
pusha
push
xor
mov
fldl
mov
adc
cmpsb
stc
ret
cwtl
mov
scas
pop
cmp
movsl
mov
ss
stc
push
mov
outsb
mov
and
cmp
fidivs
pop
push
jns
imul
ret
xchg
mov
dec
mov
lods
std
mov
sbb
mov
stc
movsl
mov
jle
dec
add
adc
cwtl
imul
test
sbb
jne
out
mov
cltd
es
xlat
cmp
push
pop
mov
testl
in
or
mov
xchg
push
pop
shll
shl
push
mov
data16
adc
scas
xor
mov
mov
test
pushl
icebp
add
cmp
test
mov
pop
push
and
stos
out
mov
js
outsl
mov
pop
add
arpl
add
mov
rcr
lds
add
mov
push
ja
mov
pop
rcrb
cmpsl
and
fdiv
mov
aam
mov
cmpsl
pop
shlb
hlt
pop
fyl2xp1
sbb
mov
add
dec
movsl
or
test
stos
pop
xchg
jnp
icebp
scas
cwtl
jp
sarl
mov
fidivrl
pop
aas
fxch
cmpsl
jns
mov
mov
push
dec
adc
sahf
lcall
mov
test
adc
lock
dec
cwtl
testl
xchg
mov
inc
pop
daa
arpl
out
sbb
mov
push
mov
mov
pop
jecxz
sub
int
fwait
pushf
mov
shll
push
xchg
add
or
mov
push
testb
clc
lcall
imul
pop
cmp
mov
insb
aas
test
std
sahf
test
cmp
clc
rclb
stos
mov
pop
test
loop
jge
dec
rcll
fidivrs
inc
push
cmc
in
xlat
or
test
cmpsl
mov
outsl
mov
or
iret
mov
divb
sahf
imul
cmp
xchg
xchg
sbb
xchg
mov
mov
cmp
mov
loop
insb
idivl
pop
xlat
pusha
lods
mov
cmpsl
out
hlt
ja
fadds
mov
fcmovnbe
jmp
daa
cmp
inc
cmc
pop
mov
arpl
push
mov
in
sbb
jo
rorb
xor
cli
jge
into
mov
hlt
icebp
mov
ret
mov
addr16
and
jg
dec
pop
mov
push
pop
mov
lea
in
xchg
push
adc
and
mov
xlat
push
inc
out
sbb
push
popf
lea
faddp
daa
dec
or
sbb
mov
cmc
stc
mov
lds
outsl
lock
push
add
xchg
leave
dec
rclb
push
mov
pop
sub
mov
lds
dec
cmpsb
or
xchg
mov
mov
daa
xchg
lret
mull
sti
ja
mov
movsl
ljmp
aas
mov
xchg
xor
and
ret
mov
mov
icebp
mov
insb
sub
push
jns
roll
cwtl
gs
xor
xor
mov
inc
mov
clc
js
or
sub
mov
or
jns
shll
test
outsl
mov
test
sbb
roll
xlat
jbe
xor
bound
call
adc
inc
scas
mov
ja
mov
je
aad
mov
ss
shll
hlt
pmaxub
scas
xchg
jo
mov
mov
movsl
and
int
add
dec
inc
adc
inc
xchg
mov
mov
xor
jl
mov
and
dec
pop
xchg
or
cmpsl
adc
xchg
jns
cmpsl
adc
cmpsl
push
jmp
movsl
jo
shlb
and
and
lcall
shr
ljmp
pop
negl
mov
jecxz
cmp
fildll
mov
jbe
pop
jmp
fwait
mov
repnz
fnstenv
and
xor
mov
xchg
jbe
jb
sbb
dec
lret
mov
mov
add
pop
dec
test
and
lods
addb
inc
mov
movsl
mov
mov
cmovno
in
cmc
pop
outsl
int
pop
fdivs
jne
push
jge
mov
lcall
test
test
jb
in
fdivl
jmp
xlat
stos
dec
jge
jo
imul
popf
xor
and
test
mov
mov
movsl
mov
sbb
inc
popf
imul
mov
pop
pop
jl
pop
insl
mov
cmc
jecxz
dec
mov
mov
fisttpll
int
bound
dec
mov
mov
jmp
mov
fldcw
loope
xchg
bound
js
test
mov
xor
enter
cmp
scas
loopne
lea
mov
clc
jle
inc
pop
aas
adc
sbb
lret
shlb
divl
int3
sub
mov
and
dec
cmp
xchg
sub
xorl
mov
test
fwait
fs
and
cwtl
aad
in
mov
adc
xor
mov
lret
sub
stos
fidivs
sbb
stos
das
xchg
xchg
cmp
scas
test
push
and
lods
adc
popa
lods
mov
test
mov
inc
mov
push
loopne
add
push
cmpsl
add
mov
mov
stos
je
mov
pop
mov
sti
ret
sbb
maskmovq
imul
add
out
rcrl
mov
mov
incb
xor
mov
push
mov
xchg
jnp
push
jnp
pop
jle
notl
jg
stos
mov
cmp
scas
aam
ljmp
sbb
pop
push
roll
sbb
lock
mov
jecxz
and
mov
sbb
test
mov
rolb
scas
lcall
mov
or
mov
adc
cld
mov
out
insb
mov
adc
lock
dec
imull
mov
mov
mov
sub
in
fstpt
popf
test
sub
popa
xchg
cmp
and
sub
jmp
loope
in
cmc
sub
inc
or
lds
or
cmp
lods
jle
sahf
adc
pop
in
scas
roll
adcb
jbe
test
jg
sbb
jb
xor
lcall
insl
aas
mov
xor
scas
icebp
add
add
mov
cltd
das
or
mov
scas
xlat
int3
or
test
dec
xor
mov
lret
test
cwtl
popf
loope
mov
mov
cmp
inc
jl
shlb
imul
mov
rcrb
cltd
dec
repz
mov
pop
cwtl
adc
lret
shll
xchg
xor
neg
xor
inc
inc
mov
fsubl
out
jno
je
mov
xor
mov
ret
pop
int
xor
mov
mov
push
aaa
lcall
mov
push
xor
arpl
stos
and
notl
sub
and
or
sub
imul
std
cwtl
ret
shl
push
scas
adc
mov
loop,pn
movsb
clc
sar
mov
jnp
mov
add
cltd
mov
jno
cs
push
ror
pusha
pop
or
mov
push
insb
idivb
mov
pop
popa
sub
scas
adcb
mov
fsubs
repnz
mov
sub
and
mov
pop
cmp
mov
aam
andb
das
mov
insl
xchg
lcall
xchg
lahf
ss
or
test
xchg
xorb
lahf
out
imul
mov
sbb
stc
pop
loope
cmpsl
test
pop
stos
fimuls
mov
notl
mov
add
incl
adc
cmp
mov
out
repnz
mov
xchg
mov
daa
ficomps
adc
mov
imul
adc
clc
lock
and
sbb
sbb
sub
sub
stos
mov
cmpsb
imul
stc
pop
clc
xchg
shrb
dec
sbb
jle
mov
roll
inc
enter
cmp
std
and
push
mov
scas
jo
mov
inc
ret
idiv
ret
iret
rcll
cld
dec
xchg
jl
inc
push
mov
js
repnz
stos
mov
or
imul
mov
push
cmpsl
int3
outsl
fs
pop
add
jmp
jnp
hlt
dec
movsb
mov
ljmp
pop
shrl
sub
push
frstor
punpckhdq
addr16
stos
jbe
jae
loop
in
nop
ja
mov
jne
dec
dec
popa
ljmp
test
pop
jl
ds
mov
aas
mov
rcl
cltd
mov
jbe
mov
imul
in
adc
test
xor
cmp
mov
out
mov
cmp
mov
jmp
xchg
inc
sub
cwtl
jg
jae
cmp
mov
fdivr
xlat
movsl
mov
ret
mov
pop
inc
shlb
and
jo
loop
sub
aas
mov
mov
sub
inc
xor
shl
dec
scas
hlt
scas
or
fstps
mov
lds
jnp
stos
xchg
insb
xlat
and
mov
jns
mov
xor
xchg
idivl
int3
jp
scas
inc
mov
mov
jecxz
frstor
in
sarl
or
ja
mov
xchg
cltd
ret
push
cmp
outsl
pop
cmp
out
movsl
addr16
and
das
pop
inc
in
icebp
mov
insb
outsb
pop
or
pop
sahf
repz
pop
fisubs
stos
test
movsl
jns
sub
xor
cwtl
in
lods
xor
fldt
cltd
push
cld
inc
pop
mov
in
mov
jecxz
mov
mov
bound
cmp
adc
mov
arpl
leave
cmpsb
bound
cs
sbb
mov
xor
or
negl
rorl
mov
mov
adc
out
xlat
mov
xlat
add
dec
pop
sbb
sbb
xorb
cmp
mov
mov
aad
or
sti
mov
mov
mov
stc
add
pop
jg
adc
push
nop
fnsave
mov
and
xor
mov
or
loopne
nop
leave
les
sbb
mov
mov
mov
scas
dec
fadds
lods
int3
testl
jne
in
ja
cltd
inc
adc
inc
mov
cltd
mov
jl
mov
cmp
cmp
and
je
push
pusha
mov
clc
daa
test
mov
mov
call
inc
imulb
lret
cmp
mov
fincstp
mov
cmpsl
stos
dec
sahf
cmp
mov
cmc
cmp
stc
arpl
dec
mov
pusha
mov
loop
jo
test
leave
mov
cmp
out
data16
or
jns
mov
movsl
loopne
add
mov
and
mov
std
movsl
add
cwtl
lea
addl
fmuls
jbe
in
cld
pop
js
xlat
clc
jmp
xlat
push
in
pop
mov
movsl
jge
push
mov
mov
scas
ljmp
push
fnsave
out
mov
scas
cmpsl
xorl
mov
or
jle
mov
insl
push
mov
fldl
xchg
insb
stos
cmp
pop
or
scas
and
mov
cmpsl
aad
aam
hlt
and
mov
sbbb
frstor
mov
pop
sbb
enter
lds
sahf
lock
mov
push
mov
pop
mov
out
cmp
ds
mov
dec
jg
or
iret
lret
fldl
mov
outsb
insl
call
mov
test
cmpsl
jle
scas
icebp
cmpl
jp
sub
aaa
and
mov
jae
movsb
out
pop
mov
or
xchg
sbb
and
mov
in
push
cmp
xchg
mov
pop
and
movl
dec
test
lcall
cmpsl
inc
or
scas
mov
ret
out
sbb
test
fsubs
lds
and
lods
mov
insb
jbe
mov
cs
xor
je
scas
xchg
sub
movsl
push
pusha
int
daa
mov
rorl
cmp
loop
xor
mov
mov
mulb
jl
cltd
out
js
xchg
mull
xlat
mov
sbb
aaa
dec
mov
rorb
xchg
cwtl
mov
test
sbb
pusha
pop
cmc
xchg
outsl
fsubs
lcall
out
cmp
repz
gs
sbb
mov
mov
jae
jge
inc
popa
cwtl
sbb
adc
sub
test
orb
stos
inc
stos
shll
stos
pushf
cmp
xchg
jbe
cmp
dec
test
push
das
add
push
xchg
mov
ret
js
movsb
fstl
aad
insl
xchg
dec
je
and
pop
mov
gs
mov
cmpsl
or
mov
adc
mov
inc
jne
shr
lahf
mov
xchg
iret
out
test
push
shr
cmpsl
inc
mov
lea
jns
into
movsb
mov
mov
mov
sahf
pushf
jg
jbe
lods
inc
mov
mov
lock
cli
xlat
addr16
imul
sub
enter
testl
mov
or
daa
mov
ret
and
adc
cltd
and
jl
mov
shlb
pop
inc
mov
xlat
mov
adc
scas
mov
mov
xlat
imulb
out
push
lret
jg
movsl
fwait
or
rorb
xchg
lds
daa
inc
sbbb
cmpsb
mov
pop
loop
add
das
leave
mov
pushf
dec
add
enter
jp
pop
mov
adc
lret
sbb
jnp
cmp
xchg
xlat
pop
inc
sub
jb
mov
mov
pop
outsl
cmp
leave
and
sahf
pop
mov
and
and
mov
mov
stc
xor
enter
testl
mov
mov
cmp
scas
ja
and
sub
sbb
jno
mov
je
hlt
aam
push
mov
sarl
lea
loop
insl
pop
xchg
adc
add
iret
cmpsl
sbb
call
xorl
mov
sarl
and
ret
rclb
mov
lods
mov
xchg
cmpsl
test
pop
in
and
mov
adcl
inc
iret
mov
xchg
sbb
mov
or
leave
roll
cmpsl
push
out
mov
sub
cmp
or
aam
mov
in
xor
sbb
cwtl
int3
sahf
dec
add
mov
mov
adc
jl
fdivrp
test
repz
sub
mov
das
and
imul
mov
sbb
adc
into
movsl
mov
mov
xlat
mov
stos
shll
insl
cmpsl
push
mov
rcrl
cmp
cmc
add
test
inc
push
popa
aam
and
dec
xlat
movsb
or
es
xlat
add
xchg
enter
std
cld
mov
mov
scas
jmp
bound
jne
test
sub
dec
fdivl
shr
fidivs
mov
mov
scas
mov
addr16
dec
shll
and
mov
outsb
mov
fwait
xchg
lds
jmp
inc
mov
mov
dec
dec
mov
push
mov
mov
outsb
lods
mov
lea
sbb
rcrb
cmc
lcall
add
scas
or
out
loopne
jge
push
mov
rcll
mov
stos
stos
out
mov
xchg
inc
int3
jg
xor
cmp
ds
jmp
push
shlb
mov
push
aam
add
int3
mov
adc
das
xchg
mov
inc
cmp
push
push
mov
dec
hlt
mov
mov
daa
jl
sbbl
mov
jbe
xor
adc
cwtl
in
repnz
jno
push
insl
aaa
jnp
int3
cmp
jp
xchg
xchg
or
shrb
pop
jb
shrl
inc
cmpsl
xor
inc
sbb
dec
shlb
jge
xchg
mov
call
out
rclb
sbb
ja
scas
sti
inc
adc
cwtl
ss
dec
jno
push
cmp
xlat
insl
ret
cwtl
xchg
mov
aaa
xorl
je
cmp
fsubl
mov
sub
push
mov
daa
shlb
sbb
mov
add
scas
int3
adc
mov
sbb
push
mov
push
mov
fcoms
cld
mov
mov
xorl
sub
inc
cli
cmp
mov
movsl
fcoms
in
scas
mov
jne
mov
mov
dec
rol
popa
loope
testb
xchg
dec
pop
cs
push
xor
leave
mov
cmp
jae
andb
stos
scas
mov
mov
cmp
loope
push
xchg
push
mov
out
imul
mov
cmp
int
cltd
loopne
subb
mov
xor
dec
mov
sbb
test
lahf
pop
shrb
mov
lret
push
sub
out
jge
mov
cmc
jns
insl
stos
mov
mov
push
sub
movd
xlat
xchg
or
mov
dec
imul
icebp
mov
push
adc
clc
pop
cmp
stos
hlt
mov
outsl
lock
nop
mov
add
out
es
fwait
sarb
fstpt
mov
and
call
jae
in
inc
dec
push
xlat
movsl
enter
adc
add
ds
test
fwait
sbb
push
xchg
aad
mov
out
jo
aaa
mov
insb
jmp
mov
xchg
fcmove
mov
inc
mov
mov
ret
xlat
sti
psubusb
popa
cltd
pop
ficoml
jl
mov
or
lods
add
movsl
xor
or
add
decl
fdivs
mov
and
daa
mov
push
add
inc
mov
sub
shll
mov
mov
adc
mov
xlat
pop
mov
test
mov
es
xor
imul
stos
jmp
jg
fdivl
mov
repz
repnz
sbb
sbb
mov
out
xlat
in
mov
les
into
mov
ljmp
mov
add
dec
add
mov
cld
mov
testl
test
test
fistl
es
fdiv
jge
cmp
fidivrl
fisubrs
lods
aad
mov
xchg
xchg
push
out
clc
cmp
mov
push
ret
cmp
mov
push
lock
stos
and
int
jo
or
sub
cmp
inc
or
jg
xor
inc
and
in
mov
pop
sbb
dec
shll
ror
je
xor
xlat
frstor
pop
cmpsl
and
lods
shll
mov
out
jg
xchg
mov
mov
fs
sbb
mov
enter
mov
sbb
movsl
jns
mov
adc
shr
mov
int3
leave
lods
mov
sti
scas
cmpsb
sub
mov
shlb
sub
mov
pop
jo
push
mov
mov
jg
mov
sti
test
mov
jle
sub
insb
rorb
mov
push
add
mov
pop
mov
js
xor
lock
mov
notl
xor
bound
jne
cltd
or
mov
mov
cmpsb
lods
jge
add
fsubrs
sbb
xor
jnp
push
lcall
sarb
xor
and
push
fcmovb
stos
lds
mov
mov
loopne
mov
xor
or
pop
cmc
xorl
pushf
lcall
int
testl
shll
mov
cli
nop
mov
mov
test
movsl
sahf
pushl
fsubrp
stc
push
test
and
or
mov
sub
cmpsl
stc
sbb
rdtsc
loope
mov
mov
xchg
iret
rol
xlat
fisubs
in
iret
cmp
ror
xlat
cs
mov
insb
mov
mov
pop
sbb
sbbl
imul
mov
mov
std
shrl
jnp
mov
and
movsl
sbb
call
xchg
adc
pop
mov
pop
subl
push
and
in
pop
xchg
popf
incb
test
loopne
mov
roll
and
pop
xchg
mov
pop
adc
insb
ljmp
xchg
mov
or
cmp
xchg
inc
mov
push
mov
rcll
mov
gs
rcrb
inc
lcall
mov
mov
xlat
in
stos
xchg
and
adc
fisubl
pop
mov
sub
mull
jmp
sbb
test
fdivrs
mov
xchg
jns
inc
mov
add
lock
dec
and
sbb
ficomps
sti
aam
pop
cwtl
test
das
mov
dec
jo
mov
xchg
push
adc
loop
sbb
cwtl
rolb
xchg
lret
add
or
jge
jo
jbe
lret
movsl
pop
fwait
test
sub
repnz
jb
jl
in
xchg
push
js
xchg
sbb
rep
leave
repnz
cli
sub
ljmp
or
loopne
mov
add
mov
jmp
sbb
cmc
in
dec
mov
addl
mov
dec
mov
inc
xchg
aaa
mov
adc
mov
push
sbb
add
les
dec
jb
mov
lret
cli
rorb
sbb
insb
sub
push
jnp
jg
mov
cs
mov
mov
mov
cmp
outsb
movzwl
sbbl
lods
jae
insb
add
out
mov
and
push
jmp
jbe
cltd
ret
mov
add
xlat
lea
xchg
mov
pop
scas
scas
das
mov
push
lods
sub
std
xor
mov
stos
lahf
sahf
arpl
lea
mov
mov
outsl
mov
cmp
mov
mov
es
mov
and
jl
pop
imul
add
mov
data16
stc
shrb
sbb
mov
test
and
repnz
mov
mov
testb
scas
inc
mov
xor
pop
mov
xor
adc
fnstsw
mov
push
test
jl
sbb
fisttpl
sahf
xor
add
je
cmpsl
xor
popa
stos
dec
mov
shll
mov
mov
stos
xor
or
jge
pushf
add
lods
mov
lods
mov
daa
inc
mov
ljmp
mov
xor
js
sub
fdivl
pop
int3
add
xchg
mov
xchg
fwait
movsl
gs
cmp
rcr
icebp
push
sbb
call
mov
pusha
bound
scas
aam
push
outsb
mov
mov
test
mov
mov
xor
mov
lcall
jnp
jecxz
xorl
xchg
dec
gs
mov
sub
shlb
pop
jmp
and
or
popf
pop
or
jge
adc
pop
xor
lods
mov
and
mov
mov
into
xorl
lea
testl
xlat
lret
int3
rol
xor
lahf
sbb
pusha
lock
xor
jns
es
mov
sbb
and
mov
add
lds
gs
aaa
mov
fnsave
sbb
dec
cwtl
pop
les
mov
fwait
imul
outsb
mov
jnp
cmc
jae
mov
popf
cmp
fs
xor
xor
sub
cmp
mov
ja
mov
mov
inc
outsb
sub
movzwl
push
mov
cmp
adc
mov
test
mov
and
mov
mov
cmpsl
mov
and
les
inc
loopne
cmp
pop
lahf
mov
pop
cmpsb
fld
outsl
mov
lods
push
sbb
scas
jl
or
push
inc
adc
cmpsl
sub
lods
or
sbb
shll
push
dec
dec
push
jp
push
mov
cmpsb
aam
lret
ror
jno
cmp
cmp
call
dec
call
mov
test
add
jo
xor
lods
pop
lahf
mov
lock
cmp
pop
adc
pop
mov
dec
xchg
mov
mov
repnz
push
sbb
fldenv
inc
mov
or
or
pop
cmp
sub
mov
xor
cmp
mov
mov
xor
aam
int3
out
mov
pop
jmp
mov
sbbb
test
arpl
cmovl
mov
out
cmp
or
mov
push
insb
and
mov
imul
loope
in
sub
test
dec
mov
push
xchg
push
cltd
adc
icebp
mov
dec
add
das
lret
pop
mov
xchg
xlat
xlat
sub
sti
mov
leave
in
mov
outsb
sbb
cli
or
into
std
mov
cs
cwtl
out
aad
arpl
test
mov
int3
fst
cmpsl
xchg
dec
xor
dec
mov
stos
push
mov
mov
mov
clc
mov
test
mov
mov
mov
dec
ja
or
xor
mov
mov
cmp
pop
addl
cwtl
inc
mov
inc
cmpxchg
mov
mov
into
cs
jb
adc
pop
jns
imul
cmp
mov
adc
cs
fnsave
dec
xchg
sub
mov
adc
cmp
lods
push
mov
pushf
push
test
mov
push
xchg
fildl
inc
mov
les
cmp
push
cmpsl
clc
cmpsl
mov
icebp
fbstp
pop
into
fwait
mov
sub
ds
and
subb
or
mov
mov
sbb
mov
and
scas
mov
fwait
jge
cmp
jns
cmp
fidivl
call
jmp
mov
sbb
fldpi
movsb
mull
fidivrs
dec
mov
xor
stc
mov
ret
mov
icebp
pusha
jge
xor
jg
testb
aas
js
add
pop
jnp
xchg
movsl
push
inc
addl
mov
mov
ret
pop
mov
push
std
enter
pop
clc
int3
mov
xlat
push
dec
jl
es
xor
fnstenv
les
cli
jg
jbe
rclb
into
and
idivl
lcall
gs
pop
pop
lods
sub
ds
or
mov
fdivs
sbb
xchg
mov
xchg
ljmp
jnp
sub
loop
loope
movsl
divb
mov
mov
mov
xchg
mov
iret
and
imul
loope
outsb
mov
test
aam
enter
outsb
cmp
cmpsl
mov
dec
pop
sub
push
test
fidivl
das
inc
mov
rclb
sti
andl
push
xlat
mov
xchg
dec
cmp
mov
push
mov
mov
xorb
addr16
xchg
cs
jae
mov
xor
arpl
inc
mov
xor
mov
xor
lret
mov
or
iret
xchg
icebp
fldenv
mov
and
inc
lcall
fbld
out
adc
js
or
jb
mov
in
daa
fsubrl
push
dec
lahf
call
inc
pop
or
mov
xor
jle
cmpsl
xchg
out
fisubs
aaa
mov
enter
jl
bound
mov
jae
cmpsb
sub
push
outsb
je
jle
loope
mov
jns
xorl
pop
rcr
push
cmpsl
stc
int3
xchg
cbtw
inc
push
adc
xlat
out
mov
pop
jnp
loopne
mov
callw
and
add
imull
addl
scas
movsl
arpl
sbb
lds
push
jle
mov
xlat
mov
pop
jg
cmp
test
call
and
cmp
andb
iret
mov
xchg
stc
ljmp
push
sbb
xchg
xchg
call
push
jno
mov
and
xchg
leave
mov
xchg
aaa
outsl
mov
jae
in
inc
jb
movsl
lret
loope
pop
adc
js
sub
sbb
mov
movsb
add
or
cmp
hlt
test
mov
ja
add
and
inc
jg
js
out
push
popf
mov
aam
xor
mov
dec
mov
fcmovbe
push
int3
aas
out
and
mov
mov
arpl
mov
add
movsl
out
mov
cmpsl
ret
mov
sub
xchg
cmp
movsl
mov
enter
decb
loopne
shll
sarb
mov
xchg
leave
jbe
sbb
mov
mov
sub
repnz
shl
mov
mov
cmp
mov
roll
add
mov
popa
js
and
ficompl
cmc
adc
and
or
call
arpl
subw
fisubs
sbb
mov
enter
mov
cmp
cpuid
je
mov
insb
fldcw
and
mov
out
mov
stos
xor
lcall
adc
shll
out
andb
jnp
scas
jge
loop
cltd
jl
mov
cli
pop
or
repz
shl
mov
add
ror
xchg
popf
sbb
mov
cmpsl
jge
sbbl
and
mov
jg
mov
mov
test
mov
lods
mov
pop
jnp
lods
pop
mov
cmp
cmpsl
loope
lahf
mov
mov
mov
lret
add
jg
cmpsl
fwait
sbb
adc
cmp
sbb
mov
pop
adc
xchg
inc
mov
pushf
mov
lds
lahf
and
sub
sbb
jp
movsl
sbb
dec
mov
mov
rcrb
jmp
mov
lods
fld
aad
popa
aas
test
popa
std
mov
xlat
and
sub
fdivl
enter
sub
frstor
pop
pusha
or
sub
mov
xchg
or
test
sub
les
adcb
mov
lods
out
mov
mov
jns
push
sahf
inc
dec
jo
pop
mov
lods
movsl
xlat
bound
xor
clc
sbb
into
mov
mov
cmpsl
mov
cwtl
jns
pop
aam
and
push
and
jnp
jae
mov
fcmovnb
maskmovq
divl
mov
in
cmp
push
outsb
icebp
mov
sbb
orb
shll
les
push
nop
ret
fnstenv
out
xlat
pop
loope
cmc
xlat
ljmp
mov
dec
pushf
mov
mov
lea
shl
idivl
sahf
add
xchg
daa
pop
sbb
push
add
insb
xlat
mov
mov
lcall
mov
push
bound
lret
jne
mov
icebp
or
loop
ds
test
pop
pop
out
test
push
mov
mov
cmp
xchg
mov
lods
inc
and
mov
cmc
mov
mov
cwtl
outsl
and
aas
lret
pop
ret
shl
cwtl
mov
add
mov
nop
add
loope
divb
test
cwtl
adc
push
sub
mov
pop
mov
xchg
mov
cmpsb
mov
inc
mov
cmpb
into
jecxz
mov
in
fiaddl
pop
movsl
testl
mov
xor
lods
add
pop
xchg
mov
adc
loope
outsb
stos
dec
mov
adc
inc
xchg
mov
test
xor
in
mov
fsub
mov
mov
mov
int
scas
xlat
cmp
jb
push
sub
rorl
es
subb
fidivl
pushf
cmpsl
movsb
mov
scas
push
test
mov
lret
mov
in
sahf
inc
jmp
lock
subb
xchg
or
jle
ss
leave
into
aam
add
xor
cmpsl
pop
imul
pushf
addr16
dec
roll
sub
andl
inc
xchg
mov
int
jnp
movsl
fsincos
ss
mov
fs
idivl
and
pop
mov
mov
in
mov
out
mov
das
jnp
push
int
clc
pop
mov
xor
int3
loopne
xchg
xchg
mov
lock
xchg
movsb
fnstenv
mov
pushf
in
cmp
out
or
mov
xor
adc
int3
cs
xchg
and
aad
sbb
push
adc
mov
add
clc
pop
mov
iret
int3
bound
add
jmp
mov
test
test
adc
fisttpl
mov
adc
sahf
cmp
lods
sub
cwtl
popl
mov
mov
cltd
pop
or
cli
mov
add
or
mov
mov
sub
mov
fcomps
ret
outsl
mov
js
cmp
or
mov
jae
cltd
ret
mov
clc
jbe
test
and
and
jno
ja
fidivl
cltd
clc
mov
and
shll
mov
rclb
mov
test
mov
andl
xchg
or
sbb
ret
sub
inc
ja
push
add
fldl
sub
jae
jmp
jg
imul
nop
xor
std
je
cwtl
mov
mov
testl
mov
lock
jne
repnz
icebp
xchg
mov
mov
push
pushf
mov
adc
std
outsb
fwait
or
cmp
mov
insl
nop
mov
jne
loop
bound
arpl
stos
pop
dec
das
dec
scas
push
mov
test
cmp
cwtl
fimuls
push
xorb
add
jne
xor
jno
xchg
dec
mov
jb
movsl
jbe
add
sbb
icebp
addb
divb
push
orb
mov
jp
sub
push
xor
xor
loope
mov
aaa
push
push
mov
adc
movsl
xor
cld
das
and
stc
mov
lods
mov
shlb
pushf
fbstp
stos
test
mov
adc
mov
out
in
xchg
mov
cmp
loop
mov
test
inc
lods
popa
cwtl
or
jne
mov
mulb
lods
mov
icebp
int3
or
pop
pop
inc
mov
lods
fisubrs
aam
cmpsl
aaa
addr16
xor
ss
xchg
sub
aas
add
adc
cmove
mov
dec
test
jnp
cltd
imul
hlt
mov
or
lahf
fdivrs
cltd
jl
mov
testl
mov
jnp
loopne
aaa
scas
imul
push
adc
sub
faddp
fnsave
mov
inc
mov
jmp
out
idivl
in
push
mov
adcb
rclb
cmp
cmp
test
andb
in
movsl
inc
push
jno
out
mov
mov
or
mov
mov
adc
mov
mov
mov
push
cmpsb
push
mov
in
movsl
pop
lahf
sub
or
icebp
mov
sarb
cmp
mov
pop
out
pop
xlat
cmpsl
ds
dec
and
lods
xor
pusha
sub
mov
xchg
inc
mov
inc
out
mov
inc
sbb
rcll
add
inc
sub
incb
push
js
mov
sahf
lahf
mov
jae
and
sbb
add
dec
in
out
out
mov
adc
lcall
or
imulb
add
mov
pop
out
int3
lahf
sarl
mov
ja
pop
dec
mov
push
mov
fisttpll
mov
jnp
xor
pop
jle
negl
stos
mov
cmc
aaa
sbb
fnstsw
mov
and
pop
loopne
push
mov
mov
sbb
ljmp
cmp
mov
mov
loop
subb
xchg
xor
sub
and
mov
jp
cmp
bound
jnp
xchg
mov
enter
aas
and
cmpsl
xchg
xchg
cmp
stos
xchg
test
push
lods
scas
test
insl
sbb
cmpsl
add
arpl
jmp
mov
mov
xchg
xchg
enter
mov
cmpsl
cmp
mov
mov
cmp
mov
add
mov
cltd
fisttpl
sbb
push
rol
add
or
int
push
pop
adc
mov
mov
iret
mov
push
movsl
pop
pop
mov
shll
inc
cltd
jns
and
mov
ljmp
les
cld
mov
aaa
inc
ljmp
sub
testl
test
jnp
sarb
int3
adc
lods
cld
mov
mov
adc
mov
test
shlb
incl
mov
mov
icebp
mov
pusha
sub
jp
xchg
or
fs
inc
lret
ficoms
sbb
mov
fimull
cwtl
push
xchg
cmp
test
mov
adc
js
mov
outsb
arpl
out
stos
shlb
jge
jb
int
mov
xchg
call
mov
fcomip
xlat
xor
jp
movsl
jle
cmp
mov
scas
cli
cmc
idivl
popf
in
adc
push
sub
testl
mov
out
jp
push
pop
shll
jmp
add
idivl
sub
cmpl
push
adc
mov
mov
inc
pop
cwtl
xchg
ret
lcall
push
fidivl
xlat
and
cmp
cmpsl
insb
mov
cmpsl
pop
sbb
lods
mov
mov
mov
push
js
mov
data16
arpl
mov
mov
add
in
mov
pop
xchg
xchg
mov
movsb
cli
or
mov
out
and
jg
xlat
xlat
cmpsl
xchg
and
xchg
rcrl
mov
adc
mov
xor
test
stos
fnstenv
pop
sbb
je
mov
pop
jp
jns
mov
scas
cmp
arpl
aaa
cmp
or
or
mov
jb
mov
loope
xlat
push
rolb
mov
fwait
das
pop
jp
xchg
fcomps
pop
lahf
popf
cmpsl
mov
and
xchg
mov
call
out
scas
mov
dec
and
xor
int3
ffree
mov
mov
xlat
mov
mov
mov
fldenv
mov
inc
mov
sbb
adc
ja
sbb
mov
mov
push
and
stos
pop
outsb
ficomps
pushf
push
lcall
mov
xchg
inc
cmp
pop
icebp
dec
mov
sub
out
leave
out
test
push
xchg
jae
cmc
cmpsl
insl
mov
mov
sub
mov
jo
aad
xorb
mov
aas
xor
mov
popf
pop
adc
xchg
imul
and
cltd
in
cld
iret
mov
arpl
adc
aaa
stos
shll
bound
xor
sahf
mov
jne
pop
mov
pop
inc
cmpsb
mov
ret
aam
aad
push
fs
add
xchg
sub
fstps
std
divl
jae
ret
mov
add
pop
jnp
arpl
mov
fdivrs
out
addr16
cli
sbb
or
mov
pop
cwtl
stos
mov
movsb
je
cmp
xchg
push
mov
outsl
sbb
daa
mov
and
pop
inc
mov
or
call
mov
test
fiadds
push
lods
mov
mov
sahf
jnp
inc
cmp
movsb
out
loopw
mov
or
fwait
test
xchg
dec
or
jg
mov
std
icebp
cmpsl
or
mov
mov
out
sub
mov
out
rolb
push
les
mov
test
pop
add
clc
xor
inc
mov
test
mov
fistps
pusha
ss
mov
cmp
ljmp
adc
jl
jo
fwait
or
into
jmp
and
int
lds
pop
icebp
sbb
dec
push
out
sbb
mov
mov
adc
mov
jns
data16
enter
faddl
cmp
inc
out
fs
pushf
push
outsl
mov
movsb
pop
add
mov
sbb
aas
mov
xor
movsb
push
jmp
repnz
mov
popf
mov
popa
xchg
mov
dec
push
jns
sahf
mov
jl
mov
push
sti
mov
mov
scas
jo
jle
mov
out
mov
or
mov
mov
idivl
in
cmp
cmpsl
es
int
in
js
mov
pop
cltd
xor
in
mov
outsl
mov
pushl
inc
xor
mov
jbe
mov
mov
add
test
mov
jnp
sub
in
cmp
in
movsl
sub
and
lea
sbb
loopne
pop
push
pop
fcomps
stos
imul
mov
lea
jle
cmc
mov
mov
sub
icebp
mov
ss
fisubrs
sti
xchg
sbb
and
cwtl
roll
shlb
lods
int3
xchg
repz
fldenv
std
pusha
jg
lahf
and
push
iret
xor
repz
and
movsb
sahf
mov
scas
pop
mov
sar
lds
std
xor
mov
je
pop
and
out
mov
push
xchg
sbb
cmpsb
push
roll
movsl
loop
xlat
leavew
pushf
stos
jge
add
stos
inc
mov
repnz
insl
xchg
in
mov
jg,pt
jp
lea
pop
inc
mov
frstor
xor
ja
mov
mov
and
pop
push
adc
xor
fisttps
aaa
imull
inc
fwait
cs
push
scas
jbe
or
imul
or
xor
data16
pusha
ret
mov
sbbl
dec
add
pop
int3
rcrb
or
sub
add
fdivs
mov
dec
stc
cmp
lea
cmc
mov
fisubl
test
popf
add
shll
fdiv
push
dec
mov
int3
cli
xchg
dec
lea
pop
mov
xor
ja
mov
push
add
mov
xor
xor
xchg
add
les
pop
hlt
jb
mov
mov
mov
mov
mov
or
mov
fwait
pop
sti
aas
subl
sub
test
xor
or
shll
cmp
jb
sbb
push
mov
aas
push
dec
mov
cmp
in
test
popf
imull
xchg
jecxz
loope
push
scas
aaa
sahf
adc
xchg
and
xchg
mov
pop
out
mov
dec
xchg
mov
sub
cwtl
jg
xchg
int
adc
adc
mov
movsl
mov
mov
cli
jnp
mov
addr16
xor
jne
mov
in
xlat
cmc
das
and
cmp
add
pop
sbb
pop
xor
or
mov
aad
cwtl
cmp
adc
scas
test
fcomp
push
mull
sbb
mulb
cmp
lret
cmp
rcrb
imull
dec
sbb
cmc
dec
sub
mov
adc
addr16
divb
and
pop
fidivl
scas
mov
push
into
add
popa
cmpsb
lods
out
push
mov
sbb
jl
out
push
xchg
mov
mov
xor
movsl
cmp
add
cli
insb
notl
ficomps
push
cmpsl
repz
subps
push
mov
fadd
adc
bound
insb
mov
outsl
stc
mov
mov
add
in
xor
es
aam
loopne
divl
or
stos
sahf
jle
add
ja
fdivrl
cltd
pop
movl
loope
cwtl
and
push
mov
mov
stos
xchg
xlat
ja
inc
xor
cmp
inc
mov
lods
add
cmp
es
dec
xlat
mov
pop
mov
inc
jle
dec
scas
push
mov
fidivrs
mov
adc
scas
mov
shlb
int
test
icebp
je
xchg
dec
fnstenv
mov
mov
mov
cltd
jae
mov
mov
jnp
sti
push
inc
aad
lea
mov
dec
mov
inc
mov
inc
mov
stos
into
fwait
jb
out
nop
mov
in
sbb
and
std
mov
rcll
scas
cli
push
pop
repz
or
inc
je
mov
jle
xor
inc
insl
test
mov
andl
jecxz
add
cmpsl
jo
fldenv
ja
pop
popf
push
je
or
add
frstor
repnz
mov
outsl
addr16
mov
xchg
push
sub
mov
pop
add
aaa
mov
les
xchg
in
movsl
ret
mov
push
loopne
in
mov
pop
cmp
mov
repnz
fisubrs
dec
jle
ja
int3
or
pop
push
mov
add
mov
outsl
mov
lds
and
pop
test
mov
shll
cmc
and
sbb
push
mov
testl
mov
das
movsl
jmp
inc
mov
orb
jg
or
dec
in
notb
adc
xchg
mov
mov
inc
mov
xchg
loope
les
and
push
and
mov
cmp
sbb
push
sbb
inc
ret
xchg
test
aad
fnsave
push
cmc
adc
xor
hlt
inc
mov
int3
int
outsb
jno
popf
mov
push
aad
or
mov
mov
mov
adc
mov
xchg
cmpsl
outsb
dec
jecxz
out
imul
and
sub
mov
fnstcw
or
xor
ss
push
cltd
push
add
adc
das
pop
cmp
mov
sub
cmpsl
cli
jle
jg
addr16
lcall
loope
movsl
test
cmp
sbb
lock
fs
xchg
push
jns
lahf
out
xlat
sti
iret
aad
hlt
dec
cmpsl
in
and
xor
and
addr16
push
lcall
stos
push
jnp
aad
scas
mov
ljmp
mov
cmp
stos
aam
cmpsl
ds
lcall
out
mov
mov
into
shl
mov
imul
mov
inc
icebp
jecxz
mov
push
xchg
arpl
mov
test
out
andl
mov
loopne
mov
sbb
xor
adc
cltd
cmc
xor
push
mov
movsl
push
mov
dec
mov
mov
std
cmp
dec
nop
xlat
leave
sar
mov
cmpsb
sbb
pop
cmpsl
sub
mov
cltd
push
jns
repnz
sub
aaa
lods
fwait
scas
shl
dec
mov
sub
loope
xor
dec
adc
push
cmp
push
xchg
popa
cltd
icebp
sbb
pushf
cmpsl
mov
adc
fdivl
sub
mov
inc
jle
mov
dec
adc
les
sbb
cmp
jns
fisubrl
movsl
stc
mov
int3
inc
mov
mov
add
aaa
cmp
xor
xchg
dec
stos
mov
nop
jb
shrb
lcall
jge
mov
cmp
push
lods
inc
outsl
xchg
loope
int3
xchg
sub
adc
insb
popf
mov
sti
push
and
cltd
push
xor
or
int
aam
fiaddl
lds
mov
sbb
testl
clc
lea
iret
mov
sbb
mov
sub
or
pusha
aaa
xor
lds
mov
test
lcall
faddl
cli
ret
push
push
mov
xchg
lea
mov
pop
stc
lahf
mov
mov
fs
pusha
into
pop
mov
arpl
fnstcw
imul
adc
leave
jae
sbb
xchg
cwtl
xor
mov
adc
cmc
js
loopne
cmpsb
shll
pop
xchg
enter
lahf
inc
mov
mov
push
rep
fcomp
jns
push
mov
lods
cltd
mov
hlt
push
jnp
leave
aad
fmull
push
mov
lret
mov
stos
dec
jo
sbb
mov
mov
sub
sti
mov
fwait
mov
test
jbe
jg
ret
les
sbb
cmpsb
mov
dec
orb
std
or
sub
jg
ret
inc
pop
mul
iret
dec
pop
mov
cmpsl
mov
xchg
sbb
lods
cmpsl
xchg
xor
roll
ret
nop
xlat
fsubrs
pop
stos
or
aaa
mov
adc
pop
mov
mov
mov
adc
mul
and
lahf
xchg
scas
sbb
sbb
add
call
mov
loop
or
mov
aam
arpl
inc
dec
cmpsl
movsb
add
out
gs
fistpll
mov
add
sbb
popf
mov
gs
push
movsl
bnd
mov
push
fdivr
loop
sahf
mov
lsl
pop
mov
iret
mov
dec
mov
idivl
out
lea
fcoml
popa
stc
stos
dec
mov
scas
rclb
out
mov
gs
lds
les
push
std
inc
sbb
mov
pushf
in
cmc
daa
xchg
sbb
outsb
mov
lods
or
xchg
mov
cmpsl
mov
test
or
and
adc
mov
cli
test
mov
jae
adc
mov
mov
cmpsb
cltd
mov
dec
xchg
jp
addr16
and
stos
inc
mov
scas
mov
aaa
aam
sbbb
dec
mov
mov
out
test
ds
mov
scas
scas
mov
cmpsl
inc
xchg
shl
mov
je
rol
mov
lret
push
jno
mov
sub
and
std
test
adc
ret
adc
ljmp
cmp
sarb
cmp
lcall
sbb
lods
movsl
mov
ret
mov
popl
rdpmc
rep
lret
mov
jmp
cmpsl
in
sub
jl
xchg
xlat
movsl
es
stos
pop
scas
cmp
jl
lds
jle
and
mov
sub
mov
push
pop
mov
loopne
lods
mul
push
and
adc
jbe
aas
inc
cli
cmpsl
dec
inc
sub
lods
pop
inc
mov
test
subb
push
sbb
loopne
adc
pop
int
scas
iret
mov
jb
test
mov
xlat
xor
mov
or
in
pop
jns
mov
mov
sahf
and
fbstp
out
cmc
adc
sbb
push
mov
xor
pop
mov
pop
test
lret
mov
sbb
scas
jnp
mov
fxam
mov
xor
mov
push
nop
xchg
scas
ret
subb
mov
push
sbb
and
adc
and
fnsave
in
mov
pusha
mov
xchg
cmpl
cmpsl
aas
test
arpl
nop
and
jb
jne
mov
aam
mov
sub
lods
in
jl
jp
cs
mov
sbb
pop
and
test
mov
adc
scas
popf
mov
jae
cli
and
mov
and
popf
push
scas
ljmp
mov
ds
fimull
es
shlb
jmp
pop
mov
xchg
sbbb
jnp
xor
lret
pop
popa
arpl
jmp
dec
hlt
cmp
push
mov
fdivl
repz
loop
stc
mov
inc
jb
push
mov
cmpsl
stos
sub
mov
and
mov
fldl
scas
mov
fwait
jmp
pop
movsb
xor
mov
pop
mov
out
popa
test
adc
push
icebp
mov
leave
mov
pop
xchg
lret
cmp
cs
mov
push
mov
je
cli
cmpsl
loopne
sub
xchg
cmp
ljmp
mov
push
iret
mov
and
mov
leave
fstp
scas
daa
jge
and
pop
mov
xchg
pop
fnstcw
data16
jmp
or
jb
jp
xor
aaa
pop
lds
std
in
lcall
imul
int
movzwl
js
movsl
fs
repnz
frstor
sbb
sub
mov
mov
loop
das
lods
xchg
mov
dec
outsl
loopne
addr16
mov
push
test
lea
mov
sti
mov
push
mov
mov
dec
or
cwtl
inc
xchg
fisubl
test
mov
sbb
shll
shrb
and
jge
dec
xlat
push
or
or
pop
mov
add
mov
ljmp
cmpsl
lret
xlat
out
sub
xchg
js
ss
dec
jns
push
bound
sbb
inc
scas
data16
int3
ret
imul
sahf
cs
xor
jo
lds
sub
cltd
roll
fnstsw
jae
jmp
push
mov
xchg
mov
and
sbb
stc
mov
test
pop
sub
orb
mov
jmp
jp
add
pop
sarb
loopne
and
mov
add
ret
mov
push
push
sub
rorl
das
mov
mov
jo
stos
int3
out
sbb
testl
fadd
dec
stc
lea
decb
jl
in
jmp
test
and
lea
rolb
mov
rorl
cmpsl
cmc
bound
imul
xchg
mov
shrl
inc
cmp
lock
out
or
add
lds
and
push
mov
and
mov
dec
clc
push
mov
and
mov
jp
cli
in
mov
lret
test
mov
sbb
outsb
icebp
dec
push
shlb
sti
lods
fwait
cmpl
adc
mov
movsb
mov
jl
mov
or
adc
add
xlat
jecxz
les
shlb
and
fs
sbb
pop
mov
outsb
mov
jno
sub
fnsave
inc
xlat
mov
fdivs
movsl
sbb
fdivs
cmp
mov
rcrb
mov
les
mov
xor
dec
xchg
pop
daa
mov
mov
je
mov
sub
sahf
xor
fwait
pop
jge
sbb
sub
mov
or
inc
mov
lods
pop
pop
inc
mov
lret
sbb
mov
or
add
int3
andb
add
adc
mov
lret
outsl
icebp
mov
inc
jle
cmpsl
sbb
pop
mov
inc
movsl
cmp
mov
sub
mov
fwait
and
shr
jne
mov
ds
in
cmpl
xor
das
jmp
movsl
cmc
mov
jl
xchg
adc
sbb
sbb
xchg
push
mov
ss
or
cmp
scas
stos
lret
adcl
pop
mov
mov
and
inc
icebp
inc
scas
addr16
lcall
and
or
xlat
cmpsl
test
loopne
outsb
sbb
test
dec
aaa
pop
leave
cmpsl
mov
push
and
xchg
inc
cmpsb
sbb
mov
cmp
pop
sub
adc
roll
cmp
xchg
sub
sti
stos
lods
ret
mov
xor
dec
mov
xchg
mov
sub
pop
mov
out
pop
fwait
dec
cmpsb
mov
mov
mov
gs
pop
aas
movsl
sub
or
and
cmc
ret
pop
mov
mov
jge
inc
add
mov
sbb
push
in
mov
mov
in
into
leave
aaa
lcall
cmp
outsl
cmp
xchg
scas
xor
or
push
js
sahf
fsubrl
lods
xlat
daa
insl
sub
pop
mov
enter
ret
gs
adc
inc
test
mov
mov
sub
mov
rcll
adc
cld
adc
jmp
sti
mov
sarl
adc
lcall
fdivl
mov
test
aas
fldcw
cmpsl
xchg
jae
and
cmp
scas
mov
adc
pop
and
jbe
or
mov
out
jl
test
imul
jg
fisubrs
mov
push
xchg
adcl
inc
lea
and
mov
or
xor
sbb
jno
xchg
test
mov
xlat
sbb
xchg
push
xor
stc
sbb
out
cltd
and
or
cmp
adcl
mov
jb
xchg
push
add
stos
mov
int3
outsb
mov
loope
aam
shrb
xor
push
or
cmpsl
movsl
ja
pop
testl
mov
push
and
aad
jbe
divl
jmp
add
rcrb
xchg
pop
cmpb
mov
mov
adc
sub
add
sbb
cmc
lock
andl
scas
inc
cltd
in
mov
mov
push
sti
and
mov
or
mov
mov
jecxz
in
and
inc
xor
scas
or
popf
lock
mov
loop
scas
dec
pop
dec
add
cwtl
imul
dec
popf
xor
int3
lret
push
push
icebp
andb
movl
mov
loop
dec
ss
mov
push
cmpsb
mov
inc
lea
push
test
clc
xorl
jo
fbstp
jb
ret
mov
cld
clc
dec
mov
xchg
mov
jle
mov
push
mov
ficomps
daa
adc
into
mov
out
pop
mov
mov
fisttpll
movsl
add
jl
adc
testb
stos
pop
mov
mov
lret
xchg
and
movsl
mov
adc
mov
out
leave
ret
dec
ret
push
mov
add
jmp
push
int3
mov
cmp
mov
fistpl
and
adc
mov
dec
xchg
movsl
scas
mov
mov
cwtl
out
daa
icebp
in
mov
and
rcrb
and
js
sub
fcompl
cs
mov
and
and
movsb
mov
mov
inc
mov
cmp
in
es
lea
inc
fdivs
cmp
mov
pop
mov
or
inc
ret
add
bound
xchg
repnz
vpcmpgtw
data16
sub
fldenv
test
dec
sbb
mov
divl
jns
inc
cmpsb
mov
mov
movsl
pop
imull
jge
in
mov
scas
aad
popf
push
mov
imul
mov
lcall
and
dec
adc
icebp
jg
outsl
add
mov
orl
mov
test
xchg
jge
mov
lods
test
push
jno
scas
cmp
rclb
bound
jg
mov
push
outsl
insb
mov
add
icebp
mov
scas
imul
in
pop
pop
cld
mov
push
sti
andb
add
cs
sub
cmc
mov
mov
mov
ds
lret
mov
dec
leave
mov
gs
and
mov
movsl
sub
pop
ret
adc
push
imul
out
xor
add
lcall
push
ljmp
lods
push
xor
mov
movsl
into
mov
mov
stc
push
jae
jmp
test
in
inc
cmpsl
and
mov
subl
mov
dec
mov
jecxz
gs
ljmp
lahf
sub
xor
mov
loopne,pn
mov
enter
inc
fwait
roll
hlt
outsb
mov
add
scas
dec
jne
xor
adc
sarb
lods
mov
shll
cld
mov
dec
sbb
mov
jne
in
cmpsl
cmp
lahf
cmp
sbb
sbb
dec
or
mov
out
out
leave
lods
test
int
fdivl
mov
sub
mov
stos
and
js
jno
test
dec
shll
jns
pop
mov
mov
cwtl
pop
mov
int
xchg
pop
arpl
and
rorb
subb
mov
insb
mov
push
scas
in
sbbb
lcall
stos
lcall
xor
andb
test
int
cmpsl
push
insl
loope
mov
and
sbb
mov
or
scas
mov
rcrb
adc
cltd
jecxz
mov
mov
cmp
lods
stos
dec
pop
fcomi
adc
stos
push
and
adc
mov
test
mov
xchg
mov
mov
inc
flds
popf
mov
jecxz
jns
test
xchg
ret
mov
cmp
stc
jbe
shll
sbb
cli
mov
fidivs
adc
add
push
andl
mov
insb
mov
xor
jmp
daa
cs
das
scas
xlat
jno
loop
mov
inc
jp
mov
imulb
mov
mov
ja
cwtl
sub
loop
lods
mov
sahf
lock
sub
mov
xlat
and
adc
lcall
push
imul
mov
movsl
or
addr16
sbb
xchg
jecxz
enter
push
hlt
push
add
inc
lret
mov
jp
dec
adc
mov
dec
dec
leave
cmpsb
mov
jle
sbb
loop
mov
inc
fdivs
cltd
and
xor
lahf
cmp
cwtl
sti
push
xchg
ret
xchg
sbb
mov
xor
fldt
stc
or
add
sbb
stc
popf
push
mov
jno
insb
in
enter
shll
mov
and
add
sbb
bound
mov
dec
rcrb
sub
arpl
push
popf
mov
jne
popa
xchg
mov
mov
xor
dec
cmc
mov
daa
adc
push
aad
mov
data16
pop
mov
cli
enter
and
mov
cwtl
jecxz
adc
in
addr16
jnp
jl
dec
arpl
push
push
lds
cmp
loop
pusha
or
mov
cwtl
mov
inc
mov
movsl
sbb
jb
cmpsb
es
sbb
out
ljmp
shlb
pop
or
pop
or
hlt
xor
dec
std
cwtl
test
or
mov
cmpsl
or
test
in
aam
test
insl
sub
movsl
mov
mov
xor
dec
xchg
fnstenv
push
push
aas
les
xorl
xor
xchg
mov
das
aad
push
mov
xchg
cwtl
push
xchg
loope
sbb
mov
sbb
or
leave
pushf
push
cmp
adc
and
jecxz
dec
sub
xchg
scas
pop
addl
xor
mov
push
inc
stc
fildll
dec
mov
jo
icebp
or
pop
mov
dec
pop
xor
xlat
scas
inc
cmp
rcrl
mov
add
or
jne
and
xor
lret
or
and
xchg
pop
mov
sbb
add
jle
xlat
loop
pop
sbb
mov
jmp
mov
and
lcall
mov
cmpsb
xor
sub
lods
inc
mov
in
sub
fmuls
mov
mov
pop
rcl
add
aaa
or
sbbl
loope
mov
mov
or
mov
sti
jnp
jecxz
mov
pop
adc
mov
cmpsl
sbb
adc
sub
add
shll
mov
mov
inc
cmpsl
push
rcrb
pop
in
je
hlt
mov
mov
fsubr
call
mov
aas
test
aas
popf
pop
cmpsl
add
loope
int
ret
movsl
sub
or
lret
mov
je
add
and
scas
mov
fdiv
inc
mov
pop
push
out
sub
xchg
jns
or
mov
scas
sbb
push
mov
cmc
xlat
or
dec
in
jae
mov
xchg
xchg
je
push
clc
xchg
dec
jge
push
jmp
cmc
cmp
xorl
cmp
dec
xlat
xor
fisubrl
insb
mov
mov
jle
lds
mov
mov
cmp
out
je
jb
mov
mov
mov
sbb
and
enter
and
fxch
repz
sbb
lret
mov
sbb
pop
jbe
repz
mov
fwait
xor
mov
loope
ficoms
sbb
mov
mov
mov
inc
cmp
or
in
movsl
cmp
cmp
popf
sbb
sbb
scas
xor
and
lods
xor
adc
cmp
pop
jnp
fs
test
scas
shlb
and
xchg
outsb
mov
adc
sbb
enter
cmpsb
aas
mov
repnz
scas
out
lar
shll
cltd
xchg
sbb
rcrb
mov
pop
aaa
es
leave
cmc
int
imul
push
std
and
cmpsl
mov
mov
pop
enter
mov
pushf
mov
pop
jnp
mov
sbb
adc
mov
jmp
or
xor
je
mov
mov
fldenv
inc
testl
jo
sub
aad
mov
adc
vprotw
jnp
mov
scas
in
mov
lret
mov
fcompl
mov
sar
mov
mov
jno
cmp
scas
les
rcrl
dec
mov
not
xchg
add
shlb
xorb
mov
repnz
jle
mov
test
jecxz
ja
push
push
mov
mov
and
leave
loope
mov
mov
xchg
in
xchg
notl
outsl
loop
rolb
mov
clc
or
sbb
dec
pop
mov
sub
pushf
mov
scas
xor
jecxz
mov
dec
xlat
iret
sub
insb
movsl
in
or
mov
mov
pop
call
sbb
mov
cmp
cmp
mov
lahf
outsb
mov
pop
test
stc
jmp
jbe
aad
shll
dec
push
mov
outsb
dec
cwtl
fldcw
adc
push
fcomps
pop
inc
fsubl
mov
and
mov
pop
mov
cmp
mov
sti
pop
mov
inc
inc
fistpl
mov
shll
xchg
jecxz
test
push
jb
insl
lret
pop
mov
lcall
mov
mov
and
les
mov
gs
pop
loopne
pop
mov
test
rclb
sub
mov
daa
cmpsl
inc
and
jl
imul
call
pop
mov
loopne
and
cmp
jne
hlt
jl
insl
mov
rcr
xchg
xchg
in
sbb
aam
cmpsl
sbb
add
mov
mov
scas
ss
mov
push
in
push
mov
in
xchg
lods
dec
mov
ret
cwtl
cld
shrb
push
rorb
sbb
dec
aaa
adc
cmpsl
inc
negb
inc
push
mov
shll
test
fadds
in
fdiv
sub
xlat
pop
xchg
xlat
cmpsb
inc
mov
jmp
mov
fisubrl
xor
jl
mov
mov
daa
dec
jns
pop
movsl
xor
dec
leave
mov
or
mov
test
pop
sbb
or
mov
mov
inc
movsl
pop
xchg
xchg
cmpsl
std
rorl
jbe
mov
jae
pushf
fucom
and
mov
mov
ljmp
lock
shlb
out
pop
clc
test
call
inc
movsl
mov
and
adc
xor
xor
mov
and
lea
xor
mov
nop
stos
test
pop
je
addb
xor
out
sub
rcrl
stc
icebp
daa
dec
sbb
stos
and
jge
test
push
xchg
cmp
xchg
xorl
mov
int
orb
cmpsl
bound
test
lahf
push
mov
xchg
jne
cld
xor
scas
xlat
xor
fmuls
mov
sbb
decl
sub
mov
cmpl
jecxz
cwtl
mov
cmp
jmp
mov
mov
mov
or
inc
push
mov
xchg
sarl
dec
mov
lods
lahf
mov
or
sub
mov
lcall
lock
mov
and
jne
repz
loop
mov
test
xchg
rcrb
mov
dec
cltd
pop
xchg
lods
cmpsl
fwait
aam
mov
xchg
in
add
mov
call
mov
rol
aas
popa
mov
clc
loope
push
xlat
and
and
addr16
movl
lret
outsl
mov
scas
fucomi
out
cmp
out
mov
xchg
xchg
shrb
cmpsb
sti
mov
mov
into
or
mov
jae
or
test
nop
cld
adc
sub
ret
movsl
cwtl
in
cmp
dec
jle
mov
inc
inc
fbstp
std
dec
icebp
xor
xchg
mov
mov
mov
ljmp
mov
out
fstps
jo
mov
in
add
scas
sbb
xchg
es
pop
add
ljmp
int3
mov
movsl
mov
xor
inc
dec
push
xchg
aas
push
cwtl
push
mov
in
lods
and
mov
cltd
pop
fsubl
icebp
xchg
mov
or
test
mov
inc
cmc
sbb
les
add
lds
inc
test
xchg
arpl
stos
sbb
push
adc
add
mov
leave
imul
pushf
mov
rcr
and
add
adc
lcall
mov
sarl
and
sbb
mov
cltd
mov
out
loope
mov
sbb
mov
lock
jg
mov
cmpsl
jp
xchg
mov
inc
mov
iret
repz
aad
sbb
pop
inc
mov
mov
xchg
inc
hlt
stc
pop
mov
int3
push
push
fmuls
addr16
jb
mov
fwait
lods
push
sub
mov
into
ss
popa
in
mov
push
jno
addb
inc
push
and
mov
cmp
mov
mov
mov
add
neg
mov
or
cmpsb
push
pop
adc
inc
add
lret
xchg
out
bound
in
and
and
and
fcoms
or
aas
mov
inc
mov
sbb
push
xchg
and
mov
mov
push
arpl
fisubl
xlat
xchg
inc
lds
fcomi
push
xor
stos
mov
xor
scas
lahf
mov
mov
mov
mov
test
xor
or
arpl
sub
pushf
enter
lcall
lcall
push
xor
mov
lahf
fstpt
sub
enter
pop
clc
loopne
test
mov
lret
lcall
fcomp
div
aas
repnz
js
repz
call
adc
subb
mov
pop
daa
popa
lea
mov
fistl
xchg
pop
xchg
leave
mov
and
cmp
xlat
push
jns
outsb
mov
int
sbb
pop
push
outsl
addr16
lods
fwait
aaa
js
lcall
stos
mov
xchg
mov
adc
shrl
sbb
add
je
add
mov
jae
mov
add
mov
call
test
testl
jae
cmp
out
mov
jae
cmp
pop
mov
stos
adc
in
xor
mov
mov
xchg
mov
mov
loope
das
and
mov
cltd
xor
mov
jle
push
subl
cmpsl
jno
iret
and
jns
dec
subb
sarl
insl
inc
add
imul
pop
pop
rol
mov
sbb
lea
xchg
adc
out
xchg
xor
into
and
mov
push
fs
mov
jns
adc
or
cli
es
loopne
cmp
icebp
fidivs
mov
sub
fldl
cwtl
mov
jae
hlt
in
jmp
fisttps
scas
mov
rorb
mov
jp
xchg
sbb
mov
mov
int3
pop
dec
shrl
jg
sbb
jnp
mov
sub
sub
test
push
mov
rcll
adc
mov
stos
sbb
pop
mov
sbb
negl
jg
nop
xlat
rcll
pop
push
outsl
or
sub
ds
cmpsl
sub
pop
out
mov
sarl
mov
mov
add
mov
test
jo
mov
stc
xchg
mov
dec
outsb
jns
jnp
or
mov
fwait
mov
push
jmp
mov
sub
push
fisttpll
cmp
jp
mov
movsl
pushf
xor
push
mov
and
mov
pop
dec
pop
out
in
jp
cwtl
sub
push
xor
cltd
or
xor
jne
sbb
in
mov
or
loope
jg
inc
ret
lock
jle
jae
imul
cmp
mov
inc
dec
and
and
push
mov
jns
inc
or
scas
iret
jns
mov
and
pop
sar
scas
sbb
data16
js
add
daa
call
add
mov
aam
mov
divl
adc
xor
mov
cmp
lret
dec
push
pop
fisubs
test
adc
fbstp
inc
mov
ss
sub
push
scas
scas
inc
stos
xlat
insb
ret
lcall
mov
cwtl
push
mov
xchg
mov
pop
or
pop
or
negl
dec
sub
inc
ja
test
cmp
cltd
fstps
jg
ljmp
cmc
mov
mov
into
mov
fldl
aas
push
sub
or
jp
das
ret
ljmp
xchg
scas
sub
mov
shlb
adcl
jecxz
cmpsl
mov
xchg
sbb
sysenter
cmpsl
pop
mov
dec
and
scas
jo
dec
push
mov
jl
push
mov
dec
add
loope
outsl
mov
fldt
lahf
scas
and
leave
fiaddl
sub
mov
mov
imul
lahf
cmpsl
mov
ljmp
fstpl
je,pn
rol
lock
repnz
xchg
insb
xchg
inc
jg
xchg
cmpsl
in
out
lds
scas
fadds
mov
mov
mov
ljmp
cmp
xlat
pop
int
add
mov
daa
stc
mov
push
adc
xor
mov
lret
mov
inc
jnp
cmp
test
xchg
aas
aas
pop
cmpsl
insl
cwtl
jecxz
sub
mov
in
insb
test
jne
gs
int
dec
mov
pop
or
stc
mov
sar
cmp
dec
into
mov
xor
loop
inc
loope
xor
movsl
mov
xchg
sarl
push
scas
mov
andl
mov
mov
cmp
loope
mov
dec
mov
leave
stos
mov
mov
movsb
pop
xlat
dec
or
mov
rorl
inc
aas
insl
and
pop
ret
mov
popa
cld
jb
dec
mov
sub
mov
adc
fbstp
push
and
mov
popa
mov
cmp
mov
xchg
and
adc
mov
mov
sub
cwtl
pop
mov
or
jge
jae
cmp
aad
rcl
mov
lea
push
lods
fdivrs
jb
mov
sub
adc
xchg
sub
add
xchg
and
imul
mov
test
js
mov
ret
movsl
mov
movsb
scas
xchg
add
dec
mov
pop
scas
add
mov
pop
jb
mov
fsts
rcr
add
or
das
arpl
add
or
scas
data16
bound
inc
mov
fs
cwtl
lock
mov
fcomip
xor
rol
adc
mov
fcoms
push
xlat
add
frstor
cwtl
dec
and
xor
fisubl
push
movsl
cmpsl
and
mov
aaa
adc
aad
cmpb
adc
sbb
pusha
jo
aaa
mov
enter
and
cmp
test
mov
mov
cmp
into
xor
jp
sbb
arpl
adc
sub
cmp
and
cmp
mov
mov
in
mov
dec
xlat
inc
into
sarb
mov
and
popf
insb
push
and
add
ficomps
xchg
sub
cmp
mov
shll
test
jo
adc
aaa
pop
mov
negb
pop
mov
xorb
dec
rcrl
mov
xchg
lds
cmp
mov
stc
pop
mov
sbb
sbb
sub
insb
hlt
insl
xorl
add
adc
jge
test
push
mov
in
mov
ficoms
sub
mov
xor
mov
ja
inc
insb
xor
cmp
mov
push
cwtl
scas
pop
mul
cltd
imull
jle
ficoml
xor
inc
int
mov
cli
addr16
push
and
scas
adc
mov
dec
fidivrl
xlat
cmpsl
in
cwtl
push
mov
inc
dec
sarl
add
dec
mov
xchg
out
pop
and
xlat
mov
sub
mov
mov
lods
jmp
xor
mov
mov
push
mov
adc
jge
roll
inc
addl
mov
in
int
cmpsl
dec
ds
cs
add
les
sbb
or
enter
leave
in
xor
push
mov
fidivl
inc
cmc
aam
cmpsb
es
inc
sbb
loope
adc
cmp
mov
mov
das
repz
push
inc
stos
into
emms
jge
adc
cmp
xlat
data16
cli
adc
and
inc
jge
repnz
aam
xor
or
loope
pop
ficompl
lods
cmpsl
jmp
imul
xor
scas
mov
pop
fisubs
jb
andl
cmp
sahf
add
lods
or
clc
nop
imul
xlat
inc
popf
xor
mov
and
dec
mov
pop
out
add
stc
mov
cmp
fld
in
pop
add
sarl
add
loopne
adc
pop
push
ret
scas
lods
push
nop
sbbb
jbe
repz
mov
or
sbb
mov
or
js
dec
out
push
mov
fisttps
sub
aad
mov
int
mov
shrb
inc
mov
inc
aas
mov
gs
jns
push
cmpsl
in
sub
lret
add
js
pop
xchg
pop
adc
cmp
cmpsl
push
adc
inc
clc
stc
in
lret
popa
mov
mov
xor
jle
push
in
and
ficoml
cmpsl
in
aaa
ss
gs
sub
stc
out
xor
cmp
sub
xchg
mov
cmp
mov
push
xor
mov
sahf
push
iret
add
push
mov
outsb
popa
pop
leave
stc
inc
mov
scas
cmp
gs
lahf
sbb
jbe
cmpsl
ss
lcall
dec
cs
mov
push
mov
xor
shl
mov
ja
daa
mov
lods
cmp
cmpb
es
jl
mov
cmp
les
cli
mov
cmpsl
inc
iret
les
stos
sbb
mov
scas
je
fstps
cmpsl
jo
adc
inc
clc
dec
call
pop
mov
mov
dec
mov
cmpsl
hlt
lcall
fimull
mov
adc
repz
pop
push
or
mov
icebp
insl
cmc
out
aas
push
push
cmpsl
cmp
dec
jae
pop
inc
inc
divl
jno
sub
cli
and
and
mov
neg
aas
test
in
icebp
push
decb
pop
mov
es
xlat
sub
jns
cmp
lea
jo
call
pop
jb
cmp
cmp
push
test
mov
movsl
add
jns
hlt
roll
xchg
mov
lahf
mov
pop
xlat
mov
imul
mov
icebp
pop
lods
xor
notl
out
and
mov
push
pop
pop
out
les
testl
mov
in
ljmp
mov
ficompl
jmp
xor
movsl
call
push
cs
sub
dec
mov
lods
mov
and
pop
pop
mov
rcrb
jle
mov
test
outsb
push
mov
inc
and
inc
mov
cmp
js
cmp
into
xlat
dec
int3
aas
and
jmp
imul
push
jb
cmp
movsb
xor
mov
out
loop
jmp
jns
rcll
cs
mov
sub
lret
ret
or
inc
int3
fisttps
in
xor
std
int
or
or
test
mov
idivl
pop
fcompl
or
cmp
inc
ds
lea
mov
add
mov
or
fwait
jns
les
fiadds
rcl
sahf
fistps
pop
mov
enter
cmp
subb
mov
mov
testl
mov
stos
pop
add
xchg
xchg
out
adc
dec
scas
scas
and
cmp
or
fcomps
mov
inc
je
std
push
out
sub
mov
call
mov
sbb
mov
out
mov
leave
xchg
dec
js
mov
repz
xlat
enter
stos
mov
mov
push
int3
push
insl
mov
mov
jno
cmp
sub
mov
lret
jle
adc
mov
and
dec
aam
mov
sbb
xchg
mov
cmp
push
mov
imul
jnp
push
in
mov
and
fildll
and
xor
shrb
cltd
lods
jge
mov
and
jmp
fdivrl
sbb
es
jl
scas
mov
pop
nop
arpl
out
inc
je
mov
aad
mov
scas
sub
popf
mov
fistpl
int
out
cmpsl
imul
dec
push
mov
in
mov
stc
and
cmp
mov
call
negl
xchg
fcomi
std
mov
out
enter
cmpb
xchg
jle
and
jmp
fwait
mov
repnz
push
mov
adc
and
or
cld
lock
push
stc
dec
jo
mov
xchg
stos
or
xor
mov
mov
mov
mov
pop
call
js
push
dec
xor
scas
mov
push
outsb
add
pop
mov
dec
bound
pop
mov
das
mov
loope
sbb
mov
mov
mov
lret
sahf
cmp
push
add
dec
jne
mov
js
xchg
movsl
es
in
subl
pop
adc
jg
lahf
push
scas
cmp
cmpsl
cld
lock
bound
sub
lods
jns
push
mov
push
mov
sub
scas
add
mov
aam
adc
loop
mov
ret
frstor
sbb
sbb
mov
mov
out
sub
arpl
xchg
cmp
adc
pop
and
adc
push
loope
in
mov
mov
mov
jb
dec
fwait
cmp
cmp
fucom
pop
pop
stos
mov
push
and
shrl
mov
fstps
adc
mov
test
or
fiadds
inc
iret
inc
mov
arpl
data16
jne
ljmp
test
mov
stc
fisubrs
mov
sbb
push
repnz
rcr
mov
pop
lods
mov
push
adc
push
mov
repz
and
cltd
mov
ja
xchg
shll
cld
cmc
mov
jg
jmp
rcrl
mov
sub
and
fisubrs
adc
mov
cs
test
mov
jns
mov
cmp
cmc
sbb
shrb
sub
outsl
iret
loop
imul
add
loope
mov
or
fisubl
and
xchg
inc
insb
shlb
pop
pop
add
cwtl
jb
adc
test
sbb
add
test
lcall
mov
push
dec
add
mov
mov
mov
mov
andl
lods
nop
jp
ret
rcrl
repz
mov
add
dec
mov
mov
add
mov
ds
inc
repnz
mov
rcrl
and
lods
pop
xor
mov
inc
jl
loopne
pop
cmpsl
xchg
mov
gs
dec
mov
mov
call
fwait
mov
lret
xor
mov
xlat
outsl
cli
mov
call
sub
sbb
cwtl
enter
xlat
mov
bound
fucom
mov
ja
dec
xchg
popa
mov
pop
and
sub
int
cld
lock
push
jg
xchg
mov
testl
shll
lods
mov
mov
mov
jnp
xchg
cmp
pop
pop
and
xlat
outsl
int3
lcall
pop
scas
mov
xlat
jle
sub
in
cmpsl
sbb
in
mov
mov
dec
clc
inc
adc
mov
jg
aas
test
adc
ret
mov
roll
xor
mov
stc
and
fsubrl
xchg
xchg
inc
es
sub
inc
sbb
movsl
mov
iret
sub
adc
insl
in
pushf
dec
clc
sbb
sahf
pusha
scas
repnz
pop
ficomps
dec
mov
insl
pop
outsb
cmc
dec
pop
mov
ss
mov
push
fistl
test
push
mov
push
jle
dec
jns
inc
jae
fistl
mov
movsl
push
or
lret
repz
jg
hlt
notl
jp
push
into
mov
mulb
outsb
in
jno
fdivs
movsl
loope
out
or
imul
xor
out
adc
mov
aam
in
add
lret
dec
packuswb
arpl
loopne
mov
mov
mov
push
xchg
sbb
dec
pop
lock
ja
cltd
fwait
lea
ljmp
push
nop
xlat
sbb
xchg
xor
test
xchg
arpl
mov
mov
sbb
xchg
jmp
sub
mov
and
data16
pop
scas
mov
ss
arpl
or
jae
icebp
mov
xchg
push
add
pop
imul
ss
movsl
out
pop
mov
xchg
push
mov
pop
scas
aam
mov
fdivl
ret
mov
sub
mov
push
movsb
lods
mov
fld
mov
fistpll
fst
mov
and
movsl
sub
icebp
sub
lret
std
mov
cmpsl
dec
inc
out
daa
xorb
cmc
mov
outsl
cwtl
call
mov
xlat
dec
fldlg2
or
cli
mov
cwtl
dec
jnp
out
jp
jo
jne
fiaddl
mov
xchg
xor
ss
test
mov
mov
movsl
mov
lret
inc
adc
jno
or
notl
push
push
sub
mov
sbbl
push
xor
es
mov
test
xor
mov
jnp
cmp
lods
test
fadd
add
mov
xchg
push
test
push
cmpl
lods
je
lea
movsl
jbe
outsl
mov
cli
xor
arpl
mov
add
out
mov
scas
cmp
mov
add
out
xchg
push
mov
jb
in
lods
jl
insb
pushl
cmp
mov
add
xorl
bnd
pop
cmp
fwait
or
jmp
loopne
mov
adc
mov
xchg
mov
sti
sub
loop
push
adc
xor
fnsave
into
movsl
jnp
mov
sar
es
loope
mov
aaa
mov
push
jnp
pop
mov
enter
add
fsubs
in
cmp
mov
xlat
jae
lahf
subb
mov
adc
mov
push
pop
mov
jp
xchg
lret
dec
rcll
lds
sbb
or
mov
aad
dec
enter
mov
aaa
sub
cmpsb
xlat
insl
gs
push
inc
ljmp
sbb
xchg
shl
mov
dec
pop
cmp
jmp
mov
movzwl
sarl
mov
dec
mov
cmpsl
adcl
dec
stos
repz
and
and
xor
mov
aaa
sbb
outsb
lods
mov
out
movsb
jmp
jae
xchg
mov
push
dec
sbb
mov
cmp
mov
cmp
mov
dec
movsl
cmp
mov
gs
lahf
iret
push
xchg
movsl
mov
repz
dec
jmp
mov
out
icebp
dec
or
ret
aam
xor
cltd
and
pop
cmpsl
jbe
pushf
xor
jp
scas
cmp
mov
ss
je
dec
rcl
loopne
ja
leave
sahf
mov
mov
imul
mov
inc
sti
ret
cld
or
cli
rcl
sub
sbb
pop
enter
mov
dec
cmp
xchg
std
cli
jp
stos
mov
cmp
mov
in
shlb
jmp
ss
cli
not
jne
jns
mov
mov
daa
shrl
sbb
popf
jns
icebp
xchg
gs
and
cmp
adc
cwtl
xchg
xchg
imul
or
add
add
push
jns
and
aad
icebp
push
xchg
add
mov
jne
push
pop
dec
pop
sbb
add
mov
mov
or
roll
and
mov
movsl
insl
inc
cwtl
inc
dec
add
mov
pusha
jbe
fdivs
or
popf
jnp
lret
daa
sub
in
inc
sbb
cltd
and
test
mov
dec
and
sbb
mov
add
xor
mov
push
movsl
mov
movsb
push
cmpb
xor
or
test
test
rol
out
mov
test
xor
cmpsl
mov
mov
and
jge
test
nop
sbb
push
and
jne
cmp
rcr
xor
mov
cmp
es
test
lods
cmp
cltd
out
xchg
aas
movsl
jns
mull
mov
ja
mov
pop
icebp
cmp
sub
add
cmpsl
mov
dec
bound
shll
mov
cmc
jo
punpckhwd
mov
mov
ljmp
cwtl
js
cs
movl
mov
aad
clc
xor
shll
add
cs
fidivrs
xchg
dec
adc
mov
xorl
or
sbb
loop
lods
cmp
lahf
inc
stc
popa
cmp
push
pop
ja
inc
scas
enter
mov
jmp
push
insl
cmp
xchg
mov
fbstp
jne
std
dec
xor
cmc
loope
or
push
scas
cmp
and
mov
cmpsl
repnz
jmp
inc
dec
xchg
pop
xchg
mov
fnstenv
fdivrs
out
loope
out
int
lods
xchg
mov
or
faddp
imull
dec
push
mov
cmp
and
mov
lods
mov
into
aaa
scas
repnz
loope
adc
pop
sbb
mull
xor
ds
mov
lret
mov
xor
movsl
cld
js
mov
mov
and
push
mov
sbb
sarl
mov
push
or
es
mulb
ds
mov
jg
call
mov
rolb
push
mov
fadds
mov
lea
and
xlat
lds
xchg
js
leave
sbb
sbb
mov
push
mov
lahf
jnp
mov
mov
roll
xlat
loop
xchg
mov
cmp
inc
movzwl
xchg
pop
pop
push
mov
cli
test
stc
sarl
xlat
insl
into
sahf
and
loop
jg
ds
xlat
movl
call
add
inc
and
mov
xorb
cwtl
cmp
dec
rcrl
or
xchg
jnp
insl
jl
lahf
ja
daa
sti
sbb
rolb
cmpsl
out
cmp
lcall
and
xchg
mov
ja
popf
out
loop
nop
add
aaa
js
pop
test
imulb
dec
lea
cwtl
dec
mov
lock
int
loop
lods
jge
call
or
mov
fisubrs
mov
movsl
jns
outsb
scas
push
pop
shlb
sahf
repnz
xchg
pop
mull
test
jbe
es
mov
in
add
inc
mov
lret
sbb
repz
xor
lcall
dec
xlat
pushf
ss
fbstp
xor
cmpsl
mov
cmp
int
jbe
mov
or
je
mov
sti
test
aaa
mov
hlt
popf
call
lahf
xchg
xchg
lock
repz
sbb
push
mov
int
pop
clc
insl
pop
xlat
lcall
outsb
movsb
xchg
push
aas
inc
jmp
jno
cmp
adc
jo
mov
pop
imul
cmpsl
dec
xor
or
cmp
in
ret
mov
add
mov
dec
int
mov
cwtl
pop
jl
or
jnp
cmpsl
jo
jmp
mov
repz
ss
sarb
rcrl
lods
test
mov
mov
mov
iret
adc
mov
push
and
mov
jg
andl
mov
push
loop
jge
sub
subl
or
cmp
sbb
stc
jecxz
and
mov
cmp
dec
cmc
cmp
aaa
mov
jnp
cli
cmpsl
or
and
lret
xchg
jbe
mov
popf
cmpsl
ds
push
addr16
mov
sbb
xchg
leave
and
pop
jb
icebp
pop
mov
mov
inc
and
loopne
test
xchg
cmpsl
shr
adc
rorl
mov
aad
jne
mov
mov
sub
out
test
jmp
sbb
adc
cmpsl
sahf
add
jno
mov
inc
bound
pusha
cmp
mov
dec
sub
fisubrs
jp
and
cmp
aad
and
es
adc
jns
jae
mov
shlb
jmp
inc
mov
or
and
cmc
cmp
loopne
jnp
lfs
xor
shl
mov
xor
mov
out
xchg
imull
and
cmpsl
stc
aaa
sbb
orl
loop
and
mov
dec
mov
jno
mov
xchg
ror
mov
pop
and
shlb
xlat
dec
and
inc
mov
push
mov
scas
dec
cld
pop
ret
imull
cmpb
mov
addb
mov
imul
and
xor
loope
xor
fildll
aas
jle
cmpsl
or
sub
arpl
fisttpll
lods
mov
add
mov
add
rolb
popa
jnp
fildl
cmp
cli
ret
data16
sub
mov
in
lock
mov
cmc
mov
sbb
cmp
mov
scas
mov
push
mov
or
movsl
cmc
mov
mov
adc
mov
push
jnp
jbe
pop
sub
mov
cwtl
cwtl
mov
mov
sub
fidivs
idivl
push
mov
mov
outsw
mov
sub
leave
mov
mov
sbb
or
pop
mov
push
test
xchg
sbb
xlat
enter
dec
xlat
je
fs
jmp
fstp
int3
repnz
cs
cli
sbb
cmpsl
sbb
loope
cltd
mov
fstpt
mov
cmp
fsts
push
push
push
aas
fs
xchg
fcomps
mov
inc
inc
aas
testb
xlat
push
ds
dec
or
sbb
jae
and
mov
mov
lret
aam
and
cli
negb
and
aaa
pop
push
mov
mov
dec
mov
mov
mov
and
add
das
movsl
addr16
mov
jns
adc
pop
fwait
xchg
imul
xorl
imul
lcall
xor
insb
jo
jae
cmp
jp
xlat
fidivs
mov
leave
pop
add
mov
shlb
mov
aaa
dec
mov
pop
sbbl
or
jne
mul
pop
xor
divb
cmpsl
into
call
std
xlat
pop
cmpsl
ficoml
and
jnp
dec
sbb
mov
inc
xlat
les
and
jge
xor
lea
mov
in
mov
mov
xchg
dec
testb
daa
mov
lods
add
popf
sbb
mov
push
sar
not
fldl
dec
push
scas
pop
push
ja
dec
xor
mov
outsl
pop
jne
mov
aas
hlt
aam
xor
mov
cmpsb
xor
pop
ljmp
inc
mov
lret
sbb
inc
mov
pop
test
ja
ds
je
lds
mov
in
int
rcl
jns
xor
loop
in
es
shlb
mov
push
daa
cmpsl
cmp
inc
cmp
cli
scas
pop
push
inc
xlat
cmp
test
adc
lods
jns
sahf
jmp
shll
gs
mov
cltd
pop
cmp
pusha
cmp
int3
inc
mov
lock
nop
cmp
jecxz
out
scas
xchg
sub
fdivs
icebp
int
push
mov
dec
jg
xchg
bound
shll
stc
cwtl
pop
mov
sti
dec
sbb
cmp
sbb
cmpsl
sub
cwtl
movsl
adc
adcw
icebp
mov
mov
mov
ret
mov
mov
mov
js
xchg
jnp
stos
int
push
inc
dec
mov
push
inc
arpl
stos
je
fcompl
jp
sahf
cmc
rcrl
xchg
mov
push
fidivrs
lods
fcmovnbe
push
pop
xchg
pop
cli
jnp
mov
pop
sbb
mov
cmc
imul
in
mov
stc
xor
adc
lock
scas
mov
in
xchg
mov
stos
call
xchg
xor
shlb
aaa
pop
mov
and
lea
dec
lret
mov
add
or
dec
adc
dec
mov
loopne
sbb
mov
xorb
shl
cmp
push
mov
cld
call
out
mov
push
or
or
pop
cmp
mov
mov
sub
cmpsb
jl
jl
mov
cwtl
movsl
mov
jg
add
xor
xchg
sub
mov
xlat
mov
inc
add
shl
fdivl
je
lock
jmp
mov
mov
faddp
test
jmp
stc
xor
and
pop
add
push
or
loop,pt
pop
xchg
test
sbb
mov
fistpl
xor
add
fisttpll
cmpsl
push
sbb
imul
sbb
aas
cmpsl
insb
fbstp
fwait
xor
mov
test
popa
dec
and
orb
mov
repz
cld
test
cmp
inc
mov
add
pop
xor
and
or
rorl
dec
xor
mov
ret
xchg
mov
jns
mov
cmpsl
popf
incb
push
lret
cmpsl
sbb
andl
or
fwait
mov
mov
mov
cmp
pop
sub
pop
xlat
mov
mov
out
lea
mov
nop
es
test
xchg
jle
mov
jl
mov
ret
add
mov
movsl
mov
in
test
push
cltd
dec
mov
mov
sub
and
mov
sbb
ja
imulb
jp
enter
icebp
mov
or
cwtl
inc
pushf
or
movsb
push
inc
mov
orb
int
mov
push
mov
movsl
mov
ret
sub
shr
mov
mov
imul
sar
pop
sbb
jl
enter
adc
mov
bound
pushf
sub
pslld
test
dec
mov
cs
shll
leave
loopne
std
dec
mov
mov
push
into
mov
sub
mov
mov
enter
lret
mov
jno
movsl
fldenv
movsb
lcall
cmpsb
cmp
aad
cmpsl
dec
inc
movsl
pushf
lret
mov
ret
push
cmp
stos
out
pop
outsb
mov
es
cwtl
pop
sub
jns
cmpsl
lea
push
mov
lds
clc
xlat
xlat
frstor
xor
mov
fsubs
push
negb
mov
movsl
mov
xchg
inc
fimuls
or
cmc
jecxz
cmp
mov
add
push
jne
addr16
insb
cmpsl
add
and
rcrb
aas
mov
imulb
jno
xchg
stos
xor
jecxz
out
mov
sub
pop
mov
test
xchg
xor
fidivrs
xchg
mov
test
xor
xchg
mov
rorl
xchg
mov
dec
pop
push
loope
arpl
or
mov
into
imul
cmp
enter
and
push
scas
push
inc
lret
sub
sbb
push
add
cmpsl
sub
scas
dec
cmp
dec
test
stos
dec
cmp
dec
mov
lahf
xor
mov
mov
fs
cmp
mov
mov
add
jns
or
into
pop
cmp
adc
ret
js
mov
cmc
jbe
gs
mov
pop
mov
fbld
sbb
lret
cwtl
ret
and
sbbb
inc
les
jp
cmc
clc
xlat
xchg
sub
imul
inc
jae
fcompl
test
mov
out
pop
jb
dec
add
xlat
lret
popa
shl
sbb
xor
lret
int
lods
mov
test
dec
aas
out
cmpsl
roll
and
xchg
mov
mov
xchg
inc
cmp
cmc
iret
xlat
data16
inc
in
outsl
xor
movsl
pop
sub
imul
ret
out
insl
lods
ds
mov
and
lret
push
xor
push
pop
xchg
movsl
mov
xchg
jg
scas
loop
fistps
pop
negl
mov
or
mov
loop
dec
out
aas
or
aam
das
mov
std
mov
pop
dec
add
int3
mov
shlb
inc
push
mov
mov
ret
arpl
js
and
adc
jb
xlat
mov
mov
mov
inc
mov
cli
je
rol
mov
in
push
fidivs
fwait
scas
push
sti
inc
jmp
and
mov
push
and
shl
mov
not
mov
scas
cmp
xchg
repz
inc
mov
dec
push
sbb
xchg
mov
cwtl
xchg
testl
rcrl
mov
jnp
mov
mov
pop
push
aas
sbb
clc
mov
in
in
adc
mov
in
mov
mov
scas
mov
rcll
fimuls
pop
push
in
inc
loop
xchg
adc
mov
mov
stos
mov
adc
sti
mov
js
jle
call
ljmp
push
and
lahf
clc
repz
and
cmc
mov
jbe
and
movsb
pop
mov
xorl
cmc
dec
idivl
scas
es
xor
sub
jl
ljmp
adc
dec
xor
insl
mov
push
sbb
mov
dec
xchg
imul
dec
mov
scas
fisubrs
mov
mov
or
notl
mov
imull
adc
mov
xorb
mov
mov
add
pop
push
pop
frstor
ret
jmp
cmp
cmp
jp
adcb
mov
push
jp
in
mov
out
inc
ss
mov
mov
mov
or
mov
push
les
and
xlat
add
mov
lea
or
jmp
adc
push
push
sbb
lret
cmpsb
adc
and
call
mov
pop
and
mov
sbb
push
and
xlat
loope
mov
mov
in
dec
cmp
push
mov
sub
shlb
fisubrl
pop
pushf
push
cmpsl
dec
mov
or
mov
lea
lock
mov
lods
push
xor
jae
xchg
test
mov
mov
mov
les
in
xor
sub
mov
pop
adc
js
mov
jae
jle
movsl
mov
mov
nop
inc
xchg
mov
in
mov
pop
scas
pop
cmp
scas
cmc
bound
cwtl
xchg
sbb
pop
or
test
fidivrl
jo
xor
lds
popf
ss
shlb
push
lret
dec
scas
out
mov
mov
xor
adc
pushf
dec
jle
out
and
insl
inc
xlat
push
movups
add
add
jg
addr16
enter
cli
call
rcrl
faddp
inc
imul
mov
jnp
xchg
mov
outsb
mov
mov
jns
test
daa
xchg
inc
sbb
mov
iret
mov
inc
jnp
cs
mov
xlat
and
push
lods
jno
cmpb
xchg
mov
outsb
xchg
xlat
pop
mov
cmp
push
mov
cmp
jns,pt
movsb
and
fs
shl
mov
xchg
pop
pop
movsl
out
test
lods
pop
loope
shll
xchg
adc
xor
dec
mov
std
cmpsl
sarl
pop
sbb
pusha
cwtl
push
test
sbb
pop
xlat
bnd
mov
pusha
xlat
mov
inc
fsubr
mov
push
out
cwtl
xor
add
cltd
cmp
jmp
adc
rorb
dec
xchg
mov
mov
mov
sbb
push
mov
es
push
mov
insl
repz
in
mov
xor
push
xlat
cwtl
arpl
loopne
lea
lahf
jecxz
movzbl
xchg
dec
xor
into
movsl
hlt
loope
sbb
add
push
mov
and
or
mov
mov
jge
and
mov
sub
lcall
sub
test
icebp
and
or
mov
test
and
mov
add
nop
sub
sbb
leave
xlat
pop
aad
sub
mov
sub
push
test
mov
add
fadds
outsl
cltd
lahf
mov
jb
dec
call
xchg
scas
bound
outsb
test
mov
mov
in
lock
mov
inc
mov
mov
enter
int3
cmc
pop
fdivr
sbb
stc
enter
ds
dec
lods
fcoms
imul
jl
and
jno
sub
mov
pop
test
lcall
mov
sbb
mov
lock
lret
test
mov
cmpsl
xchg
out
push
add
dec
jne
dec
js
mov
test
ffree
mov
mov
push
lret
cmp
lcall
orb
aas
adc
cmpsl
or
fwait
adc
add
mov
pop
sub
hlt
mov
jns
fldt
mov
test
loopne
mov
xchg
lds
stc
inc
out
mov
mov
addr16
mov
push
subb
sbb
clc
mov
adc
and
mov
orl
shll
jnp
repz
clc
xor
push
sub
jmp
imul
lds
push
jb
pop
test
cld
cltd
pop
pop
xor
mov
push
jnp
pushf
aas
mov
push
shll
jg
sbb
fwait
cwtl
pop
and
mov
stos
shl
sub
inc
inc
popa
or
mov
scas
dec
mov
cltd
xor
clc
dec
aas
cmpsl
and
testb
cltd
mov
jg
mov
mov
xor
xchg
adc
jle
mov
xchg
pusha
loope
fnstenv
mov
subb
cwtl
push
test
cmp
outsl
je
push
loop
ja
insl
mov
xchg
es
sti
xor
mov
arpl
dec
mov
mov
xchg
and
push
mov
dec
mov
xlat
lea
aam
fistpl
xor
inc
pop
test
mov
mov
mov
mov
xchg
xchg
pusha
aas
rcrb
aas
sti
stos
adc
sbb
stos
leave
call
out
pop
sahf
xchg
lret
scas
xchg
ret
div
cmpsl
xchg
mov
fbstp
and
push
push
and
inc
ret
js
mov
xchg
lret
or
adc
cwtl
ljmp
xor
xlat
inc
mov
inc
movsl
xchg
fdivl
jmp
pop
inc
xlat
repz
nop
mov
mov
xor
arpl
sub
mov
popf
xchg
popa
insb
in
sbb
loop
or
mov
mov
inc
test
dec
mov
roll
push
mov
and
pop
lret
ja
mov
test
repnz
iret
cmp
add
cmpsl
adc
xlat
mov
jae
mov
mov
mov
mov
xlat
jbe
push
lds
mov
xlat
mov
addl
movsl
jle
mov
and
or
jmp
dec
inc
test
mov
adc
stos
test
cltd
ljmp
add
cmp
and
push
and
xchg
repz
nop
mov
fst
sbb
sub
sbb
dec
mov
je
pop
and
addr16
arpl
mov
insb
and
mov
sbb
inc
orb
mov
arpl
mov
xor
mov
loop
mov
shlb
mov
or
pop
cmc
push
xlat
fmull
popa
mov
jecxz
movsl
addr16
lods
push
mov
dec
imul
insb
cmp
fcomi
outsb
cmpsl
fstl
sub
cmpsl
push
xchg
rolb
dec
mov
push
inc
sahf
dec
loope
jne
or
sbb
ret
testl
sbb
mov
fldt
sbb
sub
cmp
mov
mov
mov
mov
mov
mov
dec
cmp
inc
jae
and
push
rcll
xlat
ret
lock
cmp
test
sbb
divl
shlb
pop
jo
and
sahf
jnp
jns
inc
mov
dec
adc
mov
mov
rorl
sub
jl
inc
stos
lds
fstl
mov
clc
adc
mov
lret
mov
xor
push
cmpsb
pop
xor
or
cmp
cltd
xchg
push
fwait
mov
sbb
testl
arpl
cwtl
inc
adc
scas
aaa
xchg
jmp
xlat
sub
in
jg
bound
mov
lret
mov
inc
mov
mov
fstl
jnp
cmpsl
out
add
testb
fdivl
sbb
adc
subl
mov
sub
adc
and
jl
shlb
mov
popa
xchg
mov
jbe
test
xlat
movsb
mov
cmp
xor
ja
aad
inc
mov
push
mov
sahf
sbb
mov
and
daa
and
psraw
mov
ret
inc
aad
sbbl
rcrb
test
lret
mov
xchg
xchg
rcrb
addb
push
idivl
ja
mov
leave
inc
ljmp
push
testl
mov
pop
pop
sub
dec
scas
ja
sub
lea
mov
mov
sbb
push
icebp
mov
lock
ret
daa
in
adc
mov
mov
pop
arpl
out
scas
out
push
iret
sti
xlat
aad
dec
add
lds
fdivrp
xor
sbb
xlat
fs
inc
dec
cmpsb
je
xor
and
add
cs
sub
xchg
daa
cld
push
push
mov
push
sub
lea
add
cwtl
jle
or
mov
jge
cmpsl
mov
lcall
int3
mov
ret
mov
lea
gs
mov
int
aaa
push
nop
push
sub
iret
mov
mov
pop
xor
loope
stos
in
mov
xlat
mov
jo
iret
xor
sbbb
into
in
out
mov
in
xchg
cwtl
sub
and
aam
cltd
fstpt
sbb
fidivrs
popl
ljmp
dec
pop
xlat
mov
mov
fwait
push
out
les
repz
cmpsl
shl
insb
mov
mov
fmull
or
xchg
test
dec
inc
stc
lods
pop
mov
cwtl
mov
std
pop
sarl
mov
mov
sbb
lcall
pop
pop
movsl
data16
pop
inc
mov
sub
and
mov
out
xor
cmpb
pushf
icebp
mov
clc
cltd
jmp
mov
adc
push
int
imul
or
arpl
ret
in
xchg
cmpsl
call
movsl
sbb
out
pop
das
or
jns
lcall
hlt
mov
jp
adc
pop
stos
cmc
add
inc
add
jb
mov
push
push
mov
push
mov
xchg
hlt
xchg
loope
mov
test
cmp
lods
int3
xlat
jecxz
mov
mov
fs
leave
sbb
testl
sahf
mov
jae
mov
rorl
test
pop
jno
shll
outsl
push
mov
int3
jnp
and
test
jne
mov
or
stos
sub
bound
dec
mov
filds
mov
mov
add
mov
pusha
push
sub
fwait
cmp
ss
or
popa
jg
add
cmpsb
subb
ljmp
mov
mul
push
cmpsl
or
jnp
mov
cmpsb
divl
lock
push
add
mov
fcmove
mov
movsl
outsl
mov
mov
mov
adc
cmp
mov
mov
scas
imul
add
xchg
clc
test
inc
xchg
cwtl
dec
xlat
stos
mov
daa
dec
sbb
lods
or
stos
cld
lea
cmp
loopne
mov
add
ret
jl
std
jne
out
adc
inc
fcomps
add
mov
and
aas
int3
in
add
mov
test
rorb
cmpsl
repnz
shrb
mov
mov
xchg
not
movsb
inc
mov
pusha
mov
adc
sub
pop
inc
neg
movsl
mov
jmp
mov
mov
lea
orl
xchg
sbb
call
popl
mov
sub
inc
inc
movsl
pushf
mov
push
bound
lahf
xor
mov
xchg
push
push
and
jle
daa
das
push
xlat
cmc
loop
mov
or
cmpsb
shrb
adc
xor
mov
lret
into
xchg
push
mov
adc
push
fldl
mov
bound
neg
jge
and
sub
pop
mov
aad
mov
insb
out
mov
xchg
clc
scas
sbb
sbb
in
or
hlt
gs
cltd
push
pusha
xor
mov
jl
sbb
scas
test
test
adcl
xchg
mov
clc
jb
ret
sbb
stos
lock
mov
xor
pop
mov
imul
out
jo
mov
push
cltd
cmp
mov
enter
push
mov
xchg
xchg
rcrl
mov
mov
bound
lret
in
mov
pop
and
mov
test
mov
jne
mov
dec
lea
jl
inc
mov
aas
dec
test
push
xchg
xor
jp
pop
mov
push
cmp
bound
xor
jmp
sbb
dec
mov
icebp
push
cmpsl
xchg
enter
scas
jl
fcoms
daa
les
lcall
push
pop
jnp
repz
mov
cmp
jnp
cmpsl
pop
js
jae
xor
insl
mov
shll
mov
cmpl
ljmp
mov
fiaddl
push
rcll
addr16
arpl
dec
mov
adc
mov
cmpsl
push
inc
aas
cltd
mov
jbe
mov
out
stos
dec
int3
ds
idiv
xchg
mov
mov
mov
jmp
ss
mov
mov
pop
out
es
add
mov
movsl
mov
dec
cmp
mov
push
das
xor
mov
ja
jae
jnp
dec
mov
xor
pop
mull
mov
xlat
mov
xlat
sub
sbb
mov
movsl
outsl
xlat
fdivp
mov
adc
mull
push
mov
sub
popa
pop
sarl
push
push
push
mov
je
push
push
mov
outsb
mov
adcl
mov
adc
mov
mov
add
mov
arpl
movsl
xlat
add
ljmp
out
jns
cmp
adc
mov
xor
add
testb
mov
cmpsl
loopne
mov
test
and
mov
jae
dec
mov
loop
stc
mov
aas
push
mov
lods
stc
cmp
mov
je
repz
lods
loopw
repnz
and
sbb
sub
out
mov
hlt
scas
push
sbb
mov
daa
xchg
movsb
ret
mov
mov
inc
stos
out
add
iret
adc
inc
mov
jmp
mov
dec
push
xchg
push
mov
push
sbbb
sub
sbb
sub
mov
ficomps
xchg
dec
addb
sub
aas
mov
adc
jle
es
cmp
xchg
repz
lahf
ja
cmp
add
cmp
in
cs
and
push
ss
pop
mov
xor
ljmp
stos
adc
sbb
pop
or
jl
scas
mov
lret
pop
shll
in
test
imul
insl
or
scas
leave
leave
cmc
loopne
xor
push
aaa
loop
stc
addl
jns
pop
mov
pop
mov
ljmp
out
cli
stc
and
mov
int
sbb
neg
orb
mov
inc
and
sbb
pop
aam
les
push
or
fists
mov
jp
jge
sub
movsl
mov
ja
mov
cli
or
cmp
push
xlat
jge
je
add
jb
fiadds
aam
adc
mov
je
fwait
scas
test
xor
sti
popf
aas
cmpsl
pop
cmpsl
orl
inc
mov
outsb
push
clc
and
inc
cmc
mov
pop
shll
ja
jae
mov
mov
ljmp
cltd
sub
mov
notl
call
sbb
lret
icebp
xor
mov
testl
add
and
shlb
dec
aad
xor
movsl
pop
ljmp
lret
xor
sbb
daa
mov
data16
in
lea
adc
aam
push
inc
leave
out
jnp
jle
mov
dec
sbb
loope
test
cmp
daa
jge
mov
adc
repz
mov
imul
rcrb
in
fisttpl
sub
jmp
pop
mov
cmp
aad
clc
insb
mov
test
outsl
movl
out
cltd
pop
dec
rcpps
cmpsb
cwtl
push
mov
xchg
mov
and
fsub
out
imulb
lret
adc
divl
lods
mov
test
xchg
sub
insl
mov
mov
push
loope
xchg
xor
mov
call
les
scas
idiv
fwait
inc
sbb
aas
pop
shlb
daa
cmpsl
mov
lcall
cmc
inc
mov
imul
loop
or
das
fiaddl
lea
inc
test
cmpl
and
dec
lds
mov
mov
mov
lcall
mulb
push
sbb
in
test
adc
pop
mov
inc
jecxz
sub
adc
aaa
in
jnp
sbb
mov
pcmpeqw
or
iret
scas
js
push
ficompl
leave
test
xlat
in
mov
dec
stc
and
xlat
jl
rolb
out
ljmp
pop
ss
outsl
loopne
jecxz
mov
flds
mov
inc
std
mov
dec
stos
sbbb
mov
es
jns
xchg
pop
push
sahf
imull
mov
scas
pop
aam
pop
xor
pop
fsubrs
jns
push
outsl
ret
xlat
cltd
jl
mov
mov
mov
imul
xchg
mov
push
lds
push
dec
idivb
mov
outsl
call
and
mov
jp
cmc
enter
cmpsl
in
xor
fsub
mov
and
or
dec
cmp
cmc
test
ret
and
mov
push
mov
mov
subl
out
imul
jl
mov
push
call
sub
scas
outsb
mov
repz
cmpsb
test
mov
mov
dec
incb
inc
jg
add
in
lret
shll
cmpsb
and
loop
pop
cmpl
mov
and
inc
or
pop
or
jmp
dec
xchg
mov
dec
test
imul
jo
adcb
hlt
imul
lods
mov
xor
lods
jo
xchg
imul
repnz
cwtl
dec
sbb
movsb
out
push
imull
pop
and
adc
xor
nop
mov
mov
outsb
or
int
add
pop
mov
pop
mov
sbb
frstor
enter
call
adc
scas
repnz
ret
ds
cmp
stos
outsl
xchg
jbe
pop
shrl
mov
cwtl
adc
mov
aaa
test
mov
sub
mov
sbb
aas
dec
inc
fcomip
pop
mov
adc
push
mov
cmp
test
and
push
cmp
test
sbb
movsl
fcom
and
stc
xor
sub
and
pusha
scas
in
xchg
inc
xor
xor
or
inc
xchg
mov
push
gs
dec
sbb
mov
aaa
jns
fdivrs
push
clc
mov
mov
andl
out
and
mov
lea
lret
jecxz
adc
test
loope
and
sbb
rcrl
js
pop
dec
mov
mov
sub
xlat
mov
mov
mov
xlat
std
mov
mov
scas
push
movsb
lock
loop
fwait
stc
arpl
rclb
sub
dec
push
outsb
mov
mov
fcmovb
mov
cwtl
fisttpll
mov
mov
inc
mov
dec
stc
enter
add
loope
adc
rcrb
lods
push
add
daa
mov
insb
in
test
cmc
mov
mov
and
mov
pop
out
mov
mov
mov
jl
xor
cmpsb
fsubrp
inc
cmpsl
arpl
xor
out
popf
mov
test
mov
mov
mov
and
into
cmpsl
lcall
mov
scas
outsb
pusha
sbb
test
xchg
adc
dec
xlat
scas
add
nop
jl
ds
jmp
sub
scas
pop
sub
xchg
das
push
fcompl
mov
cmpsl
mov
inc
dec
imul
lret
movsl
mov
in
add
or
mov
sub
mov
lret
mov
scas
std
push
mov
scas
shrl
and
lcall
sti
dec
imul
push
cmpsl
mov
mov
shld
and
daa
cmp
rcrl
js
lahf
add
cmp
xor
push
pop
xor
mov
pop
lret
mov
and
cmpsl
xchg
pop
cli
mov
push
loope
test
ret
mov
cmp
inc
cmp
or
dec
push
mov
lock
movsl
xlat
mov
push
adc
and
inc
cmpsl
dec
dec
pop
pushf
fistpll
mov
inc
shll
mov
mov
loop
icebp
mov
imul
dec
arpl
xchg
pushf
mov
add
ljmp
and
sti
lods
clc
mov
stos
mov
scas
push
idivb
imul
mov
sbb
jns
sbb
mov
mov
fisttpl
mov
mov
pop
scas
mov
sar
mov
pop
sbb
mov
mov
cli
dec
fadd
push
jbe
mov
or
add
push
movzwl
aam
scas
mov
fwait
jns
notl
and
int
inc
stos
sub
mov
movsl
out
mov
and
in
push
pop
sbbl
or
cs
mov
xor
cltd
movsl
lret
xor
int3
and
mov
xor
stc
sbb
clc
test
and
mov
in
mov
jg
sub
cltd
push
push
mov
shlb
enter
imul
mov
ret
jne
ret
sub
pop
jmp
int3
scas
aas
mov
add
mov
xor
pop
ror
xchg
xchg
mov
mov
mov
sub
inc
sub
jno
and
das
mov
mov
loope
lods
sub
pop
adc
mov
mov
test
mov
and
xchg
pop
scas
sbb
fists
or
xchg
xchg
inc
add
int
cmpsl
popl
and
mov
out
rolb
cmp
mov
scas
push
mov
and
imul
mov
mov
test
lods
cmc
cmpsl
in
pop
push
jns
int
mov
sbb
fimull
rcr
mov
pop
je
jne
mov
mov
xchg
ficoms
mov
in
inc
clc
adc
mov
xor
lret
and
mov
lcall
fidivs
call
xchg
xor
jno
pop
lret
lahf
loopne
mov
mov
sbb
divb
sahf
or
movsb
mov
push
ret
or
mov
mov
mov
or
cwtl
imul
or
mov
cmp
cmp
aam
xlat
jnp
enter
sbb
ja
cmpsb
cltd
adc
jo
sti
stc
mov
mov
adc
mov
push
inc
or
and
xlat
enter
insb
xchg
fdivl
dec
xchg
movsl
es
dec
in
stc
add
mov
movsl
pop
add
cmpsl
mov
xchg
pop
push
mov
sbb
popl
pop
shll
arpl
iret
mov
push
pop
dec
les
scas
aas
sbb
cltd
cmp
sbb
mov
mov
sbb
mov
add
jno
test
sbb
bound
fldt
jne
in
fldl2e
add
sbb
scas
pop
popa
jnp
xchg
mov
je
xor
lret
jo
adc
lods
ss
lahf
cmc
add
add
inc
push
not
xor
addr16
adc
cmpsl
decl
mov
rorl
scas
push
lods
inc
mov
dec
and
jns
xchg
mov
lcall
xor
cmp
fdivrs
jmp
test
xchg
lods
mov
lods
mov
jl
cmp
xor
mov
inc
sti
in
lahf
mov
div
mov
cltd
and
repnz
mov
mov
cwtl
in
add
push
add
sub
sbb
mov
mov
dec
in
push
mov
or
lds
movsl
testl
mov
xchg
in
sysexit
and
cmp
test
cmpsl
aad
jnp
cmpb
mov
mov
pop
inc
inc
xor
jle
mov
mov
mov
dec
xor
clc
cmp
mov
cli
push
mov
jp
ja
mov
mov
jnp
shlb
mov
jmp
mov
push
imull
mov
mov
sti
inc
lcall
xorb
sub
outsl
jo
jmp
dec
push
mov
mov
dec
loop
mov
mov
dec
ds
push
mov
outsb
iret
insl
jae
notl
out
dec
or
pop
shll
shl
mov
pusha
pop
mov
mov
call
mov
sbb
shlb
jp
dec
andb
out
sbb
inc
jo
mov
lock
mov
aad
mov
nop
loop
mov
push
or
pop
in
jns
push
or
sub
outsl
hlt
or
mov
mov
jle
movsb
push
add
and
mov
cmp
mov
cmp
mov
imul
int
mull
lods
add
out
scas
mov
xchg
or
stos
insl
pop
test
mov
cmpsl
sbb
mov
test
mov
test
je
test
add
jns
es
iret
mov
xchg
xor
xchg
je
subl
fsubr
and
in
scas
popf
push
movsl
testl
in
sbb
test
sub
insl
int
pushf
movsl
sub
rorl
add
mov
in
push
push
xorb
imul
cmc
cmp
testl
loope
hlt
push
sbb
pop
cmp
inc
mov
jo
das
sub
bound
mov
jnp
mov
pop
mov
ret
rcrb
leave
xor
loop
dec
dec
cmpsl
and
pop
jns
andb
shlb
mov
push
outsl
adc
sub
mov
and
cltd
popa
mov
iret
xchg
fstl
and
jns
rclb
mov
cmp
repz
mov
mov
ret
xorl
cwtl
xchg
inc
mov
dec
mov
out
jo
ss
xchg
xor
imul
lods
repz
push
inc
adc
scas
mov
pop
and
ret
pop
adc
loopne
cmp
xchg
push
mov
enter
test
mov
and
outsb
pop
xor
js
mov
ja
sbb
cmp
mov
insl
jecxz
jns
push
mov
aam
mov
adc
or
sub
shll
xlat
pop
or
sub
or
and
mov
mov
dec
adc
icebp
add
pop
orl
jo
cmp
mov
adc
fadd
dec
mov
cmc
or
pop
jle
and
in
nop
sbb
shlb
movsb
push
stos
repz
or
cmp
push
dec
mov
in
movsl
cmpsl
rcll
movl
and
dec
mov
xor
mov
push
fmuls
es
lcall
fmuls
mov
and
push
or
dec
mov
mov
xor
mov
cmp
test
jno
inc
mov
jne
mov
jmp
sub
jmp
mov
mov
sub
imull
rcll
scas
mov
into
movsl
aad
jp
add
test
pop
fldl
jge
cmpsl
jmp
jnp
mov
xchg
js
xchg
pop
or
les
jne
mov
cmpsl
and
xchg
movsl
gs
sbb
call
mov
add
mov
mov
mov
aas
cmp
and
arpl
and
test
shlb
imul
mov
int
mov
sbb
jp
aas
jb
decl
fwait
icebp
sbb
mov
andl
sbb
inc
mov
push
xor
sti
or
jmp
or
dec
xchg
ffree
mov
jnp
push
mov
and
movsl
jp
mov
pop
loope
inc
xor
sub
lock
mov
aam
test
arpl
and
dec
jge
add
mov
call
mov
mov
in
loop
sbb
adc
leave
lea
outsb
cltd
scas
inc
lods
and
movsl
mov
xchg
fsub
mov
out
rcll
xchg
mov
push
mov
mov
in
cmp
ja
and
xchg
dec
mov
jbe
shl
adc
lock
cltd
and
movb
push
add
mov
std
cmp
in
ja
cltd
movsl
mov
into
arpl
sbb
daa
mov
push
jnp
enter
jg
push
retw
mov
lock
lret
mov
inc
movsl
loope
insb
sub
jmp
notl
test
pop
std
sbb
mov
das
pop
mov
sub
mov
int
mov
shll
sbb
mov
mov
and
mov
adc
mov
cmpsl
add
pop
fnsave
loope
daa
movsb
mov
adcb
cmp
mov
mov
sbb
ret
mov
cs
xchg
das
mov
lret
mov
aad
jg
pop
and
iret
leave
or
cld
ljmp
add
pop
stos
aas
push
jge
cmp
cld
lods
push
lcall
or
aad
adc
pop
movsl
test
mov
sub
mov
xlat
pop
adc
inc
shll
aaa
xchg
or
adc
inc
mov
shl
or
std
movzwl
lds
daa
sbb
fwait
xlat
push
mov
jnp
xchg
adc
push
out
push
mov
mov
mov
hlt
js
sbb
movsb
pop
mov
or
inc
addl
int
fwait
push
mov
add
out
mov
das
data16
mov
mov
jbe
and
and
pop
ret
dec
cmpsb
rcl
test
xchg
insw
movsl
int
xlat
and
pop
out
aam
cmp
sahf
or
dec
push
iret
fwait
xlat
loope
subl
ljmp
sbb
das
xchg
jecxz
gs
fbstp
into
lock
pop
adc
in
scas
lods
scas
jmp
cmp
xchg
mov
mov
sub
xorb
sub
add
ror
and
mov
cmp
jae
aam
mov
mov
mov
xor
sub
mov
mov
push
int
sbb
std
jg
out
sahf
push
jne
inc
out
jge
mov
mov
test
push
cmp
sub
jmp
push
mov
lret
scas
and
inc
in
cwtl
mov
jmp
test
mov
lea
outsl
int3
dec
bnd
xor
adc
stc
in
aam
cwtl
fnsave
jns
das
dec
mov
lds
or
mov
mov
mov
xchg
fs
ds
jbe
xchg
scas
dec
mov
popf
arpl
imull
lods
imul
fwait
cmpsl
add
mov
jb
cmpsl
mov
out
out
mov
addr16
mov
mov
lods
movsb
es
mov
shl
dec
jmp
aaa
aad
outsl
mov
or
pop
mov
clc
mov
adc
mov
mov
add
mov
fnstenv
in
pop
cmpsl
into
jmp
mov
lret
fnstcw
dec
and
scas
pop
xchg
mov
lods
jb
cltd
sub
or
xor
movsl
or
cmp
add
push
mov
mov
bound
push
fcoms
les
push
fdivrs
mov
int3
jne
mov
adc
or
rorb
movsl
mov
daa
int
mov
imulb
jp
cmp
xchg
mov
cli
test
xor
lock
push
cmpb
adc
cmp
in
lahf
stos
mov
pop
cmp
sub
inc
int3
outsl
mov
cmp
lret
aaa
mov
sub
or
mov
popa
xor
addb
in
mov
cltd
into
outsl
insl
cmpsl
testb
mov
mov
scas
push
xchg
sub
pop
test
fcomp
sub
jecxz
xchg
xlat
aaa
push
out
lea
ss
int
clc
cmpsl
inc
mov
push
cmpsl
cli
mov
mov
push
aad
mov
jp
pushf
mov
mov
inc
sbb
movsl
in
sub
pop
cld
and
push
scas
adcl
push
inc
ja
sbb
jnp
inc
add
ret
add
in
daa
mulb
jne
popf
mov
adc
push
and
jmp
call
and
fcom
cmpsl
add
mov
mov
mov
cmp
stos
jmp
sbb
jmp
sbb
push
jmp
cmpsl
cmp
shlb
mov
mov
mov
aam
xor
pop
cmpsl
add
out
xchg
xchg
xchg
ret
loope
mov
sti
imulb
cmp
jmp
mov
xlat
inc
es
insb
cmpsb
pop
mov
stc
repz
mov
ljmp
lea
stc
push
and
sbb
data16
dec
inc
mov
cld
inc
daa
cwtl
mov
rolb
ja
cmp
adc
add
movsl
mov
ror
cmp
add
scas
dec
popf
and
mov
fwait
pop
mov
mov
ret
push
icebp
mov
push
xchg
mov
mov
add
push
sbb
rcrl
mov
mov
xchg
cs
mov
mov
pusha
stos
xor
jnp
sbb
sub
mov
mov
enter
div
mov
repz
xchg
and
in
xor
stc
jne
pop
lea
mov
test
jno
stc
mov
shlb
jns
mov
sbb
or
bound
sarb
cltd
mov
inc
xlat
mov
test
mov
mov
addl
mov
out
mov
jp
push
ja
mov
dec
scas
cltd
adc
mov
sub
xchg
mov
lcall
jge
inc
sbb
push
xchg
loopne
pop
out
lock
dec
push
daa
pop
mov
nop
addb
sub
dec
ds
and
jl
xor
mov
scas
aaa
testb
fwait
inc
in
inc
mov
out
inc
fsts
ds
cltd
loope
jle
rcl
mov
out
cmp
xchg
adc
mov
and
lcall
cld
notb
pop
lods
insl
rcrb
out
lret
mov
outsb
ljmp
sbb
je
ss
arpl
pop
mov
xorl
sbb
shll
mov
out
aaa
ss
sbbl
aad
fnstenv
jns
cmp
or
mov
jle
adc
aas
inc
xor
bound
fmulp
mov
mov
es
dec
out
ljmp
je,pn
pop
in
dec
mov
xchg
lahf
xor
xchg
inc
in
mov
xchg
inc
mov
jnp
sbb
fwait
and
lock
enter
out
mov
push
arpl
mov
jne
mov
aas
xchg
movsl
testb
mov
cld
jg
or
aaa
xor
test
frstor
mov
mov
mov
sbb
dec
shll
std
sbb
mov
and
mov
jle
rorl
sbb
scas
daa
fisttps
mov
sbb
subl
mov
dec
cmp
xlat
test
jae
xor
and
iret
add
xchg
lods
mov
push
mov
jbe
mov
mov
xchg
mov
fidivrl
test
xorb
fnsave
mov
ljmp
dec
mov
outsb
shl
cmpl
clc
negl
sub
cmpsl
mov
jno
xchg
mov
jl
cmp
cwtl
push
mov
mov
and
dec
cltd
les
int
and
mov
mov
jle
pop
push
mov
or
jg
mov
into
xor
and
mov
cmp
add
lcall
jnp
sub
pop
or
imulb
jns
mov
jne
aas
xchg
cmpsl
sbb
jb
fsubrl
or
push
push
mov
and
and
mov
cmp
incl
mov
and
cmp
nop
sbb
and
mov
jmp
jp
xchg
adc
jae
mov
cmpsb
dec
cwtl
fldl
cmp
mov
mov
shrl
lret
stos
jmp
popf
out
and
sub
dec
mov
push
mov
leave
mov
fsubrs
cmpsw
cs
nop
daa
xlat
shlb
jle
shll
lret
jg
loopne
stos
mov
mov
and
sar
mov
push
je
loope
inc
xchg
fistpll
push
scas
mov
daa
shrl
xor
mov
push
cs
ficomps
jecxz
xchg
pop
push
gs
aad
mov
mov
jge
mov
add
sub
test
sar
leave
fmul
mov
push
push
out
mov
cmp
cmp
mov
xorb
xlat
sbb
adc
cmp
dec
cmp
add
pop
jns
mov
dec
dec
stc
mov
push
movsl
pusha
sar
shlb
mov
sti
mov
cmpsl
sbb
cmpsb
lahf
repnz
add
sub
jns
lock
mov
inc
mov
mov
mov
sbb
stos
sub
pop
cmp
push
les
mov
add
and
andl
mov
scas
in
sbb
test
adc
push
mov
imul
sub
cmc
cwtl
fcoms
pushf
mov
add
mov
shlb
ja
xchg
dec
sti
addr16
notl
mov
cmp
dec
xchg
enter
pop
mov
pop
leave
xchg
cmpsl
sahf
cld
or
test
and
push
mov
inc
pushf
int3
mov
mov
sub
and
shl
cmp
mov
dec
sbb
mov
loopne
mov
mov
dec
cld
rclb
and
push
sarl
inc
push
scas
loope
sahf
cmpsb
or
mov
push
cmp
cwtl
mov
mov
xor
out
mov
pop
cmp
xor
cld
mov
add
cltd
aam
sbb
ret
dec
jns
mov
mov
jno
push
mov
insl
scas
test
jno
mov
outsl
mov
xchg
pusha
movsl
in
mov
pop
push
sub
int
xlat
lods
cmpsl
aas
cmove
xor
clc
mov
dec
ljmp
xor
jno
dec
inc
ret
mov
push
or
mov
dec
and
fadds
adc
sbb
push
xchg
scas
mov
enter
imul
adc
sbb
dec
mov
mov
inc
xchg
sbb
shrb
add
popf
int3
stos
iret
cld
bound
cmpsl
pop
pop
xchg
mov
jp
loop
sub
movsl
mov
jmp
sahf
mov
repz
addr16
lret
nop
cmpsl
in
and
out
test
cmpsb
mov
and
jg
mov
fldcw
cmc
mov
xlat
sbb
inc
ret
push
push
fidivrl
sbb
imul
in
and
inc
pushf
std
pop
jns
cmp
adc
and
jae
xlat
add
arpl
xlat
mov
xchg
or
and
cmp
or
fwait
out
sub
inc
xlat
cmc
sub
movsl
mov
xlat
repz
addr16
movsb
mov
or
jns
mov
daa
xor
dec
mov
movl
pop
ds
jmp
stc
sbb
dec
mov
lret
cli
insb
dec
scas
xor
cwtl
pop
notl
aad
push
xor
xor
mov
and
xlat
shll
ss
movsl
sub
cwtl
pop
and
daa
movsl
in
jp
push
mov
sti
arpl
mov
out
dec
in
rorl
jp
pop
ds
cmpsl
enter
mov
add
fisttps
scas
push
ljmp
ret
ret
hlt
push
inc
scas
jp
pusha
mov
add
push
stc
mov
int
xchg
sub
xchg
scas
jnp
pop
loop
in
push
xor
mov
mov
out
shrl
xor
aam
je
sbb
arpl
inc
mov
shrb
imul
ret
mov
xor
mov
sbb
inc
imul
mov
cmp
mov
sbb
mov
in
sub
stc
add
mov
cmp
cmp
push
test
cltd
xor
push
mov
lahf
jnp
in
test
mov
mov
js
mov
out
mov
loop
dec
add
mov
mov
mov
pop
mov
mov
dec
and
sub
mov
aaa
das
inc
movsl
cld
gs
cwtl
xlat
mov
popa
sub
dec
sbb
pusha
add
xor
int
push
shrb
mov
fisubs
inc
pop
jmp
in
xor
mov
addr16
arpl
scas
lret
sbb
cmp
mov
mov
dec
mov
xchg
mov
xor
and
mov
shlb
pop
pusha
dec
inc
cmp
mov
mov
int3
pop
mov
fdivrl
scas
cltd
mov
push
xchg
jp
dec
and
push
sub
adc
rol
cmpsl
mov
mov
xlat
lret
loope
fldenv
cmpsl
lock
mov
mov
mov
adc
lods
sbb
icebp
mov
fmulp
jmp
inc
pop
push
mov
scas
fimuls
int3
mov
jbe
imul
aad
fldcw
push
xor
lahf
cmp
faddl
arpl
test
outsl
sub
jo
mov
mov
lahf
mov
and
mov
inc
or
es
pop
enter
add
inc
insb
lret
mov
clc
sub
add
imul
inc
mov
nop
ss
insl
mov
into
scas
sbb
loop
xchg
xlat
push
clc
xor
cmpsl
mov
dec
out
int
out
mov
mov
ljmp
cmc
int3
xlat
popa
push
cltd
mov
mov
loope
js
ja
mov
mov
ret
shlb
sbb
mov
lcall
sahf
inc
cli
mov
les
dec
in
dec
subb
mov
pushf
and
push
xchg
mov
fisttpll
mov
inc
mov
adc
pop
xchg
adc
cmpsl
adc
inc
outsl
mov
push
or
mov
shlb
call
mov
icebp
ret
dec
test
cmc
pop
mov
cmc
or
add
push
mov
adc
lods
add
adc
into
pop
mov
in
jne
xor
aam
imul
fbstp
push
inc
sub
mov
bound
and
pop
rorb
mov
or
cmpsb
movsb
outsl
sahf
xchg
inc
mov
cwtl
fstpt
jno
movsl
arpl
xchg
mov
mov
popf
scas
ret
mov
mov
ds
add
movsl
jge
mov
cmp
mov
negl
stc
pop
aad
xchg
sbb
ret
jnp
sbb
sbb
sbbb
adc
mov
testl
mov
push
push
mov
and
mov
jnp
mov
mov
push
sub
shll
jmp
mov
repz
out
dec
push
in
pop
mov
test
or
mov
stos
or
clc
mov
ret
jbe
fiaddl
and
dec
ret
add
push
fs
clc
in
fdivl
stos
mov
sbb
fnstsw
pushf
mov
icebp
sub
in
mov
mov
testb
jmp
mov
push
jl
and
sbb
jbe
mov
adc
cmpsb
xor
inc
jecxz
into
mov
xlat
mov
fdivrs
mov
lahf
sahf
xor
lcall
adc
cmc
inc
mov
and
add
push
jg
fnstenv
add
cwtl
stos
dec
xlat
gs
pop
cmp
scas
adc
jge
ds
movnti
mov
dec
inc
mov
xor
add
lods
loop
repnz
mov
nop
cwtl
dec
aam
sub
test
pop
js
mov
dec
fimull
add
dec
cwtl
jecxz
or
sbb
pushf
pop
cmpsb
std
movsl
pop
mov
pop
adc
mov
mov
xchg
scas
enter
xor
repnz
mov
jnp
xor
loope
push
dec
add
mov
inc
mov
and
aad
mov
inc
cwtl
xlat
xchg
xor
pop
stos
mov
push
enter
pop
mov
cmp
lods
out
mov
into
inc
pop
cmp
xlat
loope
test
and
mov
push
addr16
mov
pusha
push
lret
xor
push
add
frstor
cwtl
mov
inc
aad
sub
andl
out
mov
jg
sbbl
add
jbe
mov
inc
stos
and
sbb
jg
xchg
mov
sub
cmp
cmpsl
dec
sub
out
test
inc
mov
mov
or
cmp
xchg
shrb
pop
movsb
xor
xor
mov
mov
inc
mov
pop
push
scas
scas
add
div
cwtl
mov
pop
inc
mov
cltd
mov
or
sbb
push
aam
mov
sarl
test
add
xor
daa
js
push
push
es
jbe
mov
orl
pop
repz
les
enter
imul
leave
popa
dec
xor
pop
fwait
mov
pop
dec
inc
cmpsl
mov
dec
test
fidivrl
sbb
jmp
push
lods
or
nop
stos
cmp
imul
bound
sti
in
fists
lock
outsb
es
scas
lahf
xlat
jne
jo
lods
stc
das
cltd
pop
fmul
jl
loopne
jge
scas
sbb
mov
sub
cltd
aad
or
or
dec
dec
xor
mov
pop
ret
xchg
cwtl
adcl
add
das
test
aas
adc
aaa
push
xchg
xor
cmpsl
insl
out
icebp
imul
mov
xchg
inc
je
adc
mov
xchg
mov
pusha
inc
cli
mov
cmp
mov
mov
push
dec
pop
xchg
das
into
inc
sub
sahf
ljmp
sbb
sub
push
adc
loope
pop
inc
push
push
jl
xor
es
inc
sub
out
scas
sbbb
inc
popf
fwait
outsb
jecxz
mov
mov
and
mov
push
lds
rorb
sbb
xor
leave
push
fsubp
push
push
jg
mov
add
mov
lea
mov
and
adc
mov
sub
loopne
mov
cmc
mov
subb
cmp
jge
mov
out
int3
aaa
movsl
enter
lret
out
test
iret
mov
sbb
or
jnp
mov
ss
mov
mov
cmp
and
xchg
mov
lret
lock
or
lods
mov
rcl
mov
pop
mov
xchg
sbb
cmc
sub
mov
das
push
dec
popf
lcall
movsb
fstpt
sub
jge
aas
or
cmpsl
or
fwait
sti
lcall
mov
add
mov
mov
int
jp
mov
mov
daa
sub
or
leave
and
pop
adc
mov
adc
pop
mov
adc
out
loope
xlat
int3
mov
aam
jg
jge
lret
mull
push
inc
pop
xor
mov
mov
scas
xor
sub
cmc
ret
scas
dec
cmpsb
cmpsl
js
or
push
jne,pt
sbb
jno
xchg
mov
cmp
insb
imul
pop
sbb
and
cmpsl
mov
sbb
in
loope
test
push
push
cmpsl
testl
gs
sub
scas
and
sbbb
jns
pop
stc
gs
addl
inc
xor
or
daa
adc
adc
pop
push
mov
lods
xlat
add
push
add
loope
popf
insb
cli
insl
xchg
mov
lahf
cmp
repnz
and
mov
call
xor
cmp
es
add
jnp
aad
cmpsl
into
cmp
test
cmpsl
nop
scas
inc
jl
jb
mov
pop
popa
mov
jmp
jmp
mov
bnd
add
sahf
pop
cmc
andb
jg
mov
lods
jle
sti
je
push
mov
mov
push
push
fnsave
sub
iret
daa
pop
xchg
popa
inc
scas
mov
push
fnsetpm(287
lods
add
divl
bound
cmp
add
mov
shll
mov
cmpl
cltd
push
sti
mov
push
add
xor
mov
xchg
push
shr
and
mov
jne
and
mov
add
mov
shl
dec
movsl
movlps
shll
jg
mov
mov
negl
mov
adc
data16
and
push
add
or
inc
scas
xchg
and
jp
movsl
fstl
adc
sub
shl
pop
mov
mov
dec
inc
mov
stos
movzwl
test
push
stos
fdivl
sub
inc
cmp
add
loop
mov
adc
in
out
repnz
mov
jp
mov
cmp
sbb
testb
scas
loope
push
bound
or
fdivrl
push
mov
dec
pop
fadds
sarl
mov
pop
or
fabs
mov
xchg
adc
jecxz
mov
in
call
jg
jg
mov
addr16
sbb
push
fwait
jl
pop
scas
ficomps
or
cld
fcom
movsl
fidivrl
mov
xlat
lea
inc
mov
or
sbb
mov
icebp
jb
testb
data16
cmp
lock
add
pusha
cmp
fnsave
pop
xlat
lock
out
test
decl
push
push
jbe
jns
test
scas
lcall
mov
out
scas
int
rcl
mov
aam
lahf
jbe
mov
shl
add
cmpsl
mov
sbb
sahf
xor
mov
das
mov
xor
jmp
xchg
cmp
repz
test
das
mov
insl
mov
outsl
in
pop
mov
mov
movsl
mov
or
pop
jnp
sarb
sbb
sbb
dec
or
shll
es
mov
sub
loop
cmp
mov
cltd
sahf
push
incl
cmpsl
mov
fdivrs
mov
mov
sbb
mov
sub
sbb
jnp
pop
lret
mov
inc
add
nop
mov
subl
and
jle
and
push
mov
xor
test
icebp
cmp
gs
mov
inc
shl
jl
xlat
lcall
mov
jb
dec
cld
gs
dec
add
pop
add
fistps
pop
imul
cmp
xor
xor
dec
and
movsl
ds
xor
dec
scas
add
xchg
pop
shll
bound
mov
out
sbb
mov
imul
mov
incb
mov
push
xchg
inc
sub
pop
fsub
bound
cmpsl
and
inc
jne
mov
sbb
pop
xorb
jb
cmp
cmp
jg
loope
sub
scas
mov
pop
cmpsl
add
fstps
sub
adc
cli
leave
insl
stos
outsl
pusha
cmp
adc
scas
into
int3
push
add
and
mov
loop
pop
lock
scas
ljmp
jo
pop
data16
shrl
push
mov
out
rep
inc
sarl
pushf
jmp
mov
pop
ret
xor
jmp
mov
fs
mov
aas
test
mov
sbb
cwtl
pop
xor
in
pop
adc
push
iret
sbb
xlat
sub
xchg
cltd
inc
sbb
popf
loop
jne
jns
lea
scas
jns
xchg
cmp
push
sub
jl
mov
xchg
imul
mov
fisubl
xchg
mov
and
pop
and
inc
mov
rcrb
les
and
cmp
mov
cmp
mov
out
mov
mov
and
mov
insb
ret
in
scas
mov
sbb
jle
scas
inc
cmp
aaa
mov
es
mov
js
mov
decb
jp
out
xlat
pop
pushf
push
icebp
movsl
lret
enter
jle
mov
ss
mov
mov
cmpsb
shrb
jecxz
adc
and
mov
fwait
popf
jnp
adc
cmp
xor
push
repnz
cmp
adc
sub
xor
push
mov
mov
mov
repnz
xor
movsl
movsl
xlat
stos
mov
dec
mov
addr16
jmp
in
lods
sub
cld
cmpsl
stc
scas
xlat
dec
aam
mov
mov
xchg
inc
stos
jno
inc
pop
jl
push
pop
add
fcoms
andb
nop
fmull
lea
sbb
loope
jns
sub
scas
xor
loop
jmp
pop
mov
lahf
pop
cmp
ficompl
lods
or
and
jecxz
mov
mov
jbe
xlat
cmpsb
sub
or
xchg
jne
cmp
sbb
add
stos
rcrl
aam
fs
cltd
adc
cmpsb
cltd
or
stos
mov
sub
mov
mov
mov
fistpll
mov
and
xor
cmp
test
mov
loope
mov
inc
pushl
repnz
mov
dec
rcl
mov
mov
loop
mov
cmp
mov
jge
data16
ficoml
ror
loope
xor
in
pop
not
adc
inc
mov
in
add
or
mov
jbe
loop
inc
xchg
fdivl
dec
jnp
pop
mov
and
push
shlb
mov
insl
mov
clc
inc
cmp
scas
lods
sahf
shl
mov
popa
or
and
pop
mov
mov
movsl
xor
xlat
aaa
loope
lcall
add
and
jnp
xchg
ja
jnp
lret
push
mov
enter
cld
pop
jecxz
mov
xchg
jmp
cmp
mov
imul
cwtl
or
cs
cmp
xchg
repz
push
mov
inc
cmp
scas
rorl
ret
fcomip
push
int
or
in
mov
dec
adc
ja
cmc
movsl
add
push
xchg
inc
xor
adcb
test
mov
sub
imul
out
mov
bnd
mov
sbbb
loop
mov
xchg
mov
xlat
xchg
fiadds
nop
mov
inc
subl
xlat
dec
or
xor
sub
mov
mov
xor
push
cmp
mov
scas
and
into
ret
sub
mov
cmpb
aas
rcl
stos
lods
pop
inc
aam
mov
mov
sarl
mov
and
sub
cltd
mov
sbb
mov
cld
mov
repz
lret
repnz
repnz
jnp
test
xor
sub
jg
loopne
push
and
jno
xor
dec
pop
call
scas
lahf
xor
lods
addl
push
inc
jge
cmp
test
cmpsl
mov
jmp
push
mov
incb
add
cwtl
or
push
inc
xor
mov
popf
rcl
stos
into
and
xchg
test
sbbl
mov
enter
jnp
das
cmpsl
sbb
movsb
cmp
outsb
add
orl
mov
repz
repnz
loopne
icebp
fnsave
mov
scas
cmp
fcoms
cmp
mov
ret
mov
shll
imull
push
shrl
scas
push
inc
ss
push
jl
and
add
jbe
clc
mov
add
jns
rcrb
test
mov
mov
and
orb
mov
mov
and
daa
movsl
jp
xor
mov
push
stos
or
stos
loopne
test
jp
insb
mov
mov
fnsave
mov
imull
push
sub
shll
sbb
mov
aad
cmp
push
xlat
pushf
mov
mov
shl
pop
enter
fnstsw
lods
adc
scas
xchg
stos
jge
mov
jae
xchg
xor
xor
mov
ret
mov
xchg
add
push
add
or
aam
jns
ja
mov
pop
popf
mov
in
sbb
mov
mov
xchg
mov
icebp
cmpsl
mov
hlt
mov
imul
push
call
add
and
fisttpl
popa
xor
mov
mov
sub
dec
pop
jo
mov
popa
stos
mov
adc
stos
lahf
mov
add
sti
jbe
mov
scas
pop
mov
or
mov
fiadds
cmp
mov
and
out
mov
and
setns
lock
mov
jmp
loope
mov
or
stc
enter
add
xor
rol
in
jge
sbb
mov
lret
mov
push
xlat
push
ret
adc
or
cmpsl
aad
in
or
push
xlat
fs
data16
into
dec
mov
mov
push
mov
cmpsl
sbb
sub
add
pop
loop
ret
lret
cs
shll
jmp
cwtl
cmc
adc
insl
cmc
jb
push
scas
aam
in
jp
test
xor
rcrb
addb
mov
pop
loopne
movsl
mov
addr16
xor
xor
in
sub
scas
mov
ficompl
out
fimuls
sub
into
sbb
daa
lahf
lea
lahf
xor
adc
sti
xchg
pop
pop
icebp
daa
mov
push
mov
aad
jo
nop
addr16
sbb
idivl
rep
mov
mov
orb
movsl
mov
or
adc
xlat
fs
adc
ja
push
pop
pop
pushf
aad
mov
sub
or
outsb
in
jg
popl
jmp
push
stos
or
pop
mull
or
mov
mov
icebp
inc
xchg
repnz
stos
idiv
cmc
xor
xor
cli
stc
mov
adc
push
out
shll
ss
xlat
call
dec
repnz
sbb
je
and
mov
push
daa
in
xchg
test
addl
jbe
xchg
jle
cltd
movsl
mov
ja
push
fs
mov
sub
mov
das
in
mov
jnp
shl
mov
or
mov
cmpsl
jo
and
test
or
dec
jl
lret
cmc
inc
mov
jno
dec
mov
lret
push
arpl
movsb
mov
loopne
lods
loope
inc
push
mov
mov
jmp
lea
cli
shlb
or
push
xor
test
cmpsb
cmpsl
mov
jno
ss
pop
popl
test
std
stc
popf
mov
or
test
mov
ret
in
pusha
loope
mov
and
out
cmp
popa
or
popfw
jge
xor
cmc
cmp
call
scas
and
fst
adc
int
mov
xor
jmp
sbb
loope
pop
dec
mov
cmp
jns
mov
mov
gs
push
mov
adc
sbb
pop
mov
imul
mov
aad
dec
lds
test
ljmp
and
pop
pop
jo
cwtl
out
mov
incl
and
mov
push
out
mov
fcoms
rcll
scas
xchg
cmpsl
sub
mov
outsl
inc
ds
mov
loopne
shlb
das
out
pop
mov
adc
sub
mov
mov
xlat
dec
xchg
in
out
and
andb
push
scas
ss
mov
divb
mov
hlt
and
insl
jmp
cmp
add
fs
jnp
or
scas
cmp
bound
cmp
dec
repz
icebp
jne
xor
push
addl
and
fcomi
sbb
popa
sbb
mov
pop
jmp
jl
jecxz
shrb
cmpsl
adc
pushf
hlt
mov
shrl
mov
push
movsl
into
paddd
arpl
mov
fcomp
mov
mov
hlt
ret
movsl
mov
mov
mov
mov
loop
aaa
ret
subl
sbb
mov
int3
mov
push
or
test
mov
test
mov
movsl
cmpsb
pop
mov
add
test
addb
jmp
mov
xchg
insb
inc
cmp
fisubl
ds
addl
push
mov
mov
pop
push
movsl
mov
xchg
pop
aaa
cmpsl
and
cwtl
or
sub
xor
xchg
movsl
jle
xor
repnz
lods
inc
inc
cmp
loop
iret
or
mov
xchg
fidivrl
jno
movsl
jp
xchg
or
mov
sbb
leave
inc
ret
jbe
mov
mov
mov
stos
fcmove
scas
pop
fmul
mov
test
into
fnsave
or
add
xor
mov
mov
xchg
mov
js
test
inc
push
jns
or
mov
xor
xchg
pushl
mov
into
mov
fsubrs
sbb
and
imul
ja
pushl
shll
fwait
daa
loopne
add
cli
outsl
mov
cmp
nop
xor
fwait
mov
ss
jo
push
cmpsl
cld
sbb
mov
add
arpl
mov
cli
and
sarl
lods
mov
sub
mov
jecxz
aam
fldcw
ljmp
cmp
add
mov
cmpsb
loop
lods
mov
scas
add
scas
repnz
or
bound
jns
add
mov
inc
fmul
movsb
lods
fwait
pop
pop
push
push
mov
sub
sub
shrl
and
mov
pop
pop
sbb
cwtl
xor
mov
daa
cmp
sbb
jne
and
inc
mov
lods
adc
sarb
jge
cmp
cmp
iret
cwtl
cltd
scas
add
sbb
mov
rol
inc
push
sbb
out
mov
xchg
inc
xchg
lea
mov
nop
mov
arpl
xor
fidivrl
jnp
xlat
push
cli
mov
adc
cmp
xchg
inc
xlat
pop
shrb
mov
scas
mov
sbb
ljmp
popf
mov
loop
push
es
rcrb
xor
es
shrl
mov
push
sbb
jg
fcmovu
sbb
mov
ret
sub
mov
add
add
cwtl
test
lds
cmc
mov
cmp
popf
pop
mov
sbb
cwtl
cmpsl
jg
sbb
dec
adc
out
add
cmp
adc
mov
inc
cmc
test
mov
mov
movsb
lods
push
adc
cli
and
fisubl
insb
xor
adc
push
mov
int
test
sub
vpmaddwd
xorb
in
mov
dec
jle
lcall
pop
xlat
stos
xchg
cli
mov
xchg
cwtl
data16
jmp
sbb
and
xor
cmp
mov
ja
cmp
add
mov
push
xchg
mov
in
xchg
cmpsb
test
addr16
mov
inc
inc
jle
mov
sbb
sub
test
mov
cld
loop
add
popa
mov
ja
gs
inc
jb
fmull
in
or
mov
mov
jne
xchg
pop
ljmp
inc
mov
mov
push
mov
roll
stc
imul
dec
push
inc
mov
mov
inc
inc
jne
adc
jp
int
data16
xlat
and
adc
fcoml
fs
xlat
imul
aaa
add
jg
mov
cmp
ss
mov
rclb
rorb
or
adc
fidivl
inc
hlt
dec
jne
movsl
repnz
cmp
mov
loop
ja
outsb
daa
test
mov
stc
mov
inc
sub
mov
imul
movsl
outsb
mov
mov
sub
sbb
dec
push
lcall
test
ret
lds
push
bound
test
movsl
xlat
jnp
cmp
mov
sbb
lret
mov
pop
sbbl
mov
fimull
xchg
scas
stos
xchg
push
mov
jae
xchg
leave
xor
outsb
in
xlat
sbb
cmpsl
ret
lahf
out
scas
repz
mov
cmc
push
mov
repz
cmp
lahf
lods
sbb
das
xorb
mov
mov
dec
test
incl
mov
mov
push
jns
std
aam
cltd
popf
mov
sarb
mov
ljmp
and
addr16
pop
imul
push
gs
ss
inc
mov
add
jl
fwait
cmpsl
mov
scas
popa
movsl
mov
movsb
push
add
test
std
jmp
and
jnp
lods
das
mov
rorb
mov
lcall
mov
add
cltd
mov
negl
adc
test
add
mov
fdivl
mov
cmpsb
and
mov
mov
negl
movsl
mov
mov
dec
and
mov
cmp
ljmp
pop
mov
push
mov
mov
inc
xchg
sbb
xchg
mov
mov
mov
xchg
xor
xlat
insl
mov
mov
jae
mov
inc
sub
inc
mov
jns
jo
movsb
test
mov
loopne
adc
cmc
pop
mov
test
mov
xchg
cmpsl
mov
daa
iret
scas
fidivl
pop
push
mov
sbb
test
mov
xlat
pushl
popf
aaa
mov
mov
mov
cltd
pop
outsb
sub
fmuls
das
cmp
mov
xlat
test
cmp
cmp
enter
clc
sarl
mov
jnp
mov
stos
push
sub
xor
fists
mov
mov
icebp
dec
movsl
loopne
mov
cmpsl
out
mov
sti
and
pop
shll
jns
inc
mov
in
adc
xlat
ret
sbb
pop
mov
fimull
iret
xor
inc
xor
pop
xor
and
mov
sahf
icebp
mov
push
dec
mov
xor
ja
inc
adc
mov
rorl
sbb
shlb
and
dec
mov
loopne
lods
movsl
sub
test
out
sbb
xchg
cmp
fbstp
sarl
iret
mov
scas
cmp
and
mov
lods
sarb
mov
jae
mov
popf
xlat
in
daa
jnp
divb
aad
jmp
pop
jle
aam
xor
jb
daa
cmpsl
lcall
mov
xor
and
mov
cs
gs
mov
test
xor
xlat
sub
xor
sarb
sub
aas
xchg
subl
out
mov
int
out
mov
outsb
mov
push
sub
mov
jae
test
scas
xor
mov
mov
add
mov
push
mov
inc
lock
pop
pop
mov
push
or
jp
imul
sub
cld
in
stos
push
nop
mov
cwtl
xlat
aad
repnz
ss
ret
arpl
and
sbb
addr16
sbb
mov
mov
add
in
aam
das
xchg
mov
xorb
mov
out
xlat
pop
add
or
sub
ret
inc
push
adc
loope
jl
test
mov
enter
inc
mov
mov
push
daa
pop
test
jo
xchg
sbb
xor
aas
insb
sbb
cmp
popa
aas
mov
mov
add
xchg
add
bnd
mov
jae
insl
jne
sbb
xchg
pushf
aaa
adcb
cwtl
mov
dec
dec
cmpsb
cmp
cmp
gs
inc
lret
cmp
fnstenv
aaa
xor
dec
xor
leave
pop
ret
adc
pop
mov
and
sti
pop
adc
jnp
sbb
sbb
dec
adc
mov
push
push
cld
mov
arpl
repnz
push
mov
or
mov
in
pop
loope
jbe
mov
and
lcall
mov
jl
pop
pop
mov
mov
cvttps2pi
mov
dec
and
je
mov
mov
fwait
cmp
sub
mov
ret
mov
xchg
mov
test
imul
jae
stos
movsl
fsubs
mov
stos
adc
mov
or
test
xor
out
mov
inc
pop
cmp
mov
dec
inc
outsl
cmp
test
xchg
sbb
mov
sub
testl
pop
scas
mov
mov
add
lods
ss
jae
aam
icebp
hlt
jns
vshufps
mov
cld
add
lock
enter
push
pop
hlt
mov
ljmp
xorl
scas
aas
push
cmp
gs
jg
jmp
mov
adc
mov
mov
ljmp
mov
ret
testb
jnp
shll
outsl
jecxz
add
sbb
xchg
cmpsl
jns
inc
imul
inc
test
mov
cmc
test
mov
sbb
cmpsl
stos
add
and
xchg
xchg
mov
cmpsl
loop
test
inc
loopew
adcb
mov
push
or
or
and
xor
mov
repnz
xchg
addb
xchg
in
xchg
leave
leave
mov
mov
test
mov
sbb
into
mov
fwait
stos
cmc
pop
cmp
adc
pop
mov
je
mov
cmp
test
fwait
xlat
popf
jne
mov
adc
je
mov
bound
jmp
rolb
jnp
mov
lods
mov
shlb
addl
icebp
mov
imul
lock
call
sub
sbb
enter
and
in
sub
jle
das
mov
xlat
mov
pushf
and
xor
push
fidivl
std
popa
sarb
ret
push
mov
scas
add
cmp
and
jmp
faddl
mov
jne
in
and
scas
cltd
out
ljmp
add
in
cltd
mov
sub
in
ljmp
aam
sbb
xchg
mov
jns
in
gs
push
mov
cli
hlt
adc
mov
sub
repnz
xchg
aas
lods
cmpsl
sub
sub
test
xchg
add
scas
cltd
xor
adc
jp
push
cmp
jo
and
mov
mov
pop
lret
repnz
in
xor
mov
mov
xor
sub
rol
aam
cwtl
or
cli
pop
cwtl
pop
lds
mov
mov
adc
or
mov
mov
iret
add
lods
dec
mov
jnp
hlt
or
das
sbb
xchg
jb
inc
jne
mov
and
call
enter
mov
mov
sbbb
lret
scas
ret
xchg
dec
sbb
fdivl
sub
ret
and
lods
rorl
das
push
xchg
mov
lcall
mov
sub
sub
lahf
jecxz
xor
addr16
or
outsl
jbe
mov
xchg
fdivs
pop
test
addr16
add
xchg
xchg
sbb
mov
ficompl
cli
fistl
jnp
cmpsl
es
mov
arpl
dec
mov
cli
and
and
cld
es
sub
and
xor
ds
mov
inc
mov
inc
xor
movsl
adc
scas
xchg
pop
dec
adc
fdivrs
dec
sub
cmpsb
jno
pop
cli
lods
mov
ja
add
cmp
jae
iret
pop
nop
add
dec
sbb
pop
push
push
push
xlat
xor
mov
addl
cltd
jne,pn
pop
ret
stos
icebp
decl
lret
imul
xchg
mov
mov
jns
into
movsb
gs
jb
movsl
and
inc
xor
repz
mov
sub
cltd
out
mov
outsb
inc
arpl
into
sbb
gs
inc
les
push
mov
mov
ficompl
jae
mov
jbe
add
sbb
mov
mov
xlat
pop
mulb
cltd
sub
stos
cmpsb
push
lods
xchg
xlat
dec
clc
jle
pop
pop
xchg
int
je
shrb
mov
inc
jne
sub
dec
aaa
sbb
mov
shl
mov
aas
inc
xchg
or
mov
sbbb
scas
push
imul
or
cmp
ret
les
subl
fnsave
test
fcom
adc
dec
mov
pop
sbb
jmp
jle
clc
mov
ret
push
push
fadds
mov
mov
push
mov
fbstp
movsl
fs
jns
rol
addr16
enterw
xor
jbe
cmpsb
ret
sbb
inc
nop
cmpsl
pop
pop
push
adc
jae
jl
cmp
cltd
filds
cmp
ja
xlat
xor
jnp
push
into
pop
jmp
sbb
scas
in
jae
mov
rolb
mov
test
xchg
stc
xchg
xchg
mov
jne
lahf
cmp
fwait
push
mov
and
or
sbb
mov
dec
repz
push
xchg
mov
sbb
fxtract
test
mov
lahf
sub
pop
ret
cmc
adc
repnz
addb
lds
mov
mov
lods
rorb
jno
mov
ret
pop
orb
mov
cmpl
add
push
cmpsl
fwait
mov
cmc
ret
mov
jg
mov
pop
pop
ss
mov
adc
mov
and
mov
clc
jae
mov
xchg
lods
adc
xor
lret
mov
push
test
mov
test
inc
xor
stos
cmpsl
mov
dec
push
or
xchg
mov
mov
enter
cli
add
movsb
xorl
dec
iret
ror
push
loope
push
mov
gs
mov
and
mov
pop
mov
mov
xchg
sub
and
fs
mov
cmpsl
jecxz
shlb
lcall
cmpsl
nop
test
roll
js
rclb
loop
cmpsb
mov
xchg
sbbl
sarl
mov
mov
add
cmpsb
lcall
int
arpl
push
xor
pop
test
addr16
shlb
into
loope
and
xchg
sti
jecxz
popf
mov
shr
push
cmpsb
and
mov
jae
out
and
cmpsl
loopne
xchg
inc
dec
xor
enter
pop
inc
imul
ret
mov
mov
sbbl
fistl
add
ljmp
out
and
mul
jmp
xchg
xlat
push
xchg
mov
mov
mov
fldt
out
mov
arpl
mov
insl
xorl
mov
cmp
loopne
test
mov
inc
insb
mov
jge
mov
ja
in
mov
in
xchg
lcall
mov
jo
mov
enter
sbb
fcoms
cmp
cwtd
pop
jecxz
mov
fstpt
imul
cld
mov
cmpsb
dec
push
mov
mov
fildl
dec
mov
add
jl
inc
idivl
lahf
mov
add
mov
or
and
mov
xchg
add
xchg
shl
push
pop
cmpsl
lret
mov
sub
push
scas
mov
mov
imul
arpl
dec
pop
xchg
aas
call
shll
xor
jbe
icebp
cmp
fldl
ret
cmpb
fprem1
xchg
in
xchg
or
mov
test
dec
lds
adc
pop
imul
add
jge
out
add
les
rorb
mov
pop
test
mov
jl
sarb
inc
mov
nop
mov
inc
xchg
mov
popa
movsl
shll
mov
gs
xor
mov
mov
mov
and
mov
add
and
in
xor
pop
mov
mov
mov
jb
mov
ret
xor
mov
lock
cmp
mov
sbb
mov
mov
mov
mov
or
fisubl
push
je
cltd
jb
pop
fs
mov
mov
mov
lcall
mov
js
xor
pop
mov
jmp
mov
cwtl
cld
adc
aas
jg
cmp
xlat
mov
xlat
xchg
icebp
sub
inc
stos
cmpsl
xchg
std
leave
int
mov
sub
dec
nop
xor
xchg
push
out
mov
pusha
imul
imul
cmpsb
pop
insb
aas
mov
add
mov
inc
mov
cltd
mov
stos
shlb
jg
mov
test
and
xchg
je
xlat
cmp
lahf
mov
jnp
jmp
lea
inc
adc
cmp
sbb
fisubs
test
shll
mov
jl
mov
dec
fiadds
mov
les
pop
hlt
mov
popf
sti
negb
pop
xchg
test
pop
jp
mov
fcomps
and
mov
mov
mov
cltd
fildl
sbb
rcrb
je
inc
mov
jp
jne
dec
test
xor
rcl
mov
mov
jo
inc
jno
mov
sbb
pop
frstor
mov
stc
sbb
mov
cmp
mov
enter
les
mov
ret
xchg
add
stos
repz
mov
fidivrl
iret
mov
aam
rcr
scas
xchg
sbb
jl
icebp
cmpsl
jecxz
outsb
mov
inc
mov
push
leave
mov
push
lret
fisubl
inc
cld
mov
pop
mov
ret
mov
mov
mov
cmpsb
xor
jl
loopne
mov
nop
fs
and
test
and
mov
loop
adcb
mov
adc
push
inc
fcompl
sbb
mov
fucom
mov
sub
push
int3
mov
xchg
cmpb
pushf
lret
pop
jno
cltd
xor
insl
mov
dec
jmp
cli
mov
je
popa
push
das
addl
sbb
pushl
cmp
mov
imul
add
ljmp
inc
or
jp
and
dec
rol
pusha
cmp
or
bound
mov
xor
ret
mov
std
je
andl
ja
js
pop
or
sbb
xor
inc
fiadds
lea
cmp
mov
movsl
mov
call
mov
ljmp
and
rorb
add
dec
out
mov
sub
pop
mov
mov
mov
jno
scas
mov
andb
popf
dec
int3
in
lea
flds
adc
cld
mov
pop
pop
mul
push
in
test
and
mov
xchg
inc
lea
xchg
nop
ljmp
and
cmp
or
popf
mov
and
movsl
cli
push
adc
jl
rcrl
mov
scas
cmp
aas
mov
mov
and
lcall
ret
andl
into
outsb
and
inc
call
ret
or
fiadds
adc
cld
dec
or
mov
mov
fildll
jmp
pop
ja
mov
imul
inc
mov
mov
sub
shll
mov
pop
mov
sahf
aaa
push
cmpsl
fnstsw
out
dec
clc
mov
push
xorl
dec
lret
mov
mov
or
cmp
pop
lods
mov
jg
outsb
andl
push
bound
scas
mov
pop
mov
pop
inc
mov
shrb
pop
incl
test
xlat
iret
rcll
enter
shll
jne
mov
mul
clc
out
mov
jo
mov
mov
enter
cmp
and
add
fwait
xchg
lcall
aas
lods
inc
rcll
mov
mov
sbb
les
mov
push
sbb
test
lods
mov
mov
fisttps
dec
or
mov
mov
mov
push
stos
xchg
push
mov
jns
inc
imul
mov
sub
lcall
in
dec
mov
mov
aas
pop
push
cmpsl
ss
mov
mov
mov
scas
sub
push
pop
cmp
push
mov
incl
push
mov
sbb
hlt
dec
jl
call
and
pushf
pop
scas
repnz
call
mov
adc
mov
dec
cli
xor
jo
mov
dec
int
cmp
leave
ret
call
lods
sahf
lret
mov
test
clc
aam
and
in
cmpsl
dec
mov
and
inc
mov
imul
mov
outsl
xor
mov
lds
push
mov
push
subb
mov
mov
dec
shll
push
test
pop
pop
ja
ss
mov
fiaddl
mov
mov
pop
mov
lcall
sbb
mov
mov
cmpsl
js
mov
cltd
dec
test
sbb
insl
ljmp
xchg
cmp
mov
jbe
and
aas
das
movsl
fdivl
push
aaa
je
ds
scas
lock
sbb
fucomip
xor
sarb
add
cmp
nop
leave
mov
ja
in
ffreep
dec
or
xor
cmp
cmpsl
and
arpl
mov
repz
jmp
xor
mov
jmp
xchg
mov
jecxz
jno
das
pop
sbb
xlat
mov
adc
inc
cmpsl
mov
jno
loope
movsl
sub
cwtl
daa
xchg
jo
cmp
adc
or
fnstenv
mov
mov
xchg
shlb
dec
and
jp
push
lock
and
in
mov
push
jns
daa
push
mov
mov
popf
xchg
ja
inc
mov
jno
jecxz
and
cld
mov
or
dec
enter
inc
mov
ljmp
adc
cmc
pop
mov
fwait
and
mov
shr
fcomps
loopne
fcompl
mov
cltd
cmp
jno
mov
xchg
jnp
jo
mov
dec
inc
mov
mov
sar
sub
in
js
mov
outsb
popl
clc
mov
out
and
scas
cmc
mov
xchg
insl
xchg
inc
sti
mov
or
clc
mov
jae
shlb
cmp
mov
pop
cli
and
mov
xor
in
fdivs
cmp
popf
movsl
xlat
mov
out
jmp
sbb
rol
mov
sub
cmpsl
mov
or
stc
cmc
mov
mov
fldl
sbb
lods
push
pop
push
or
test
push
mov
xchg
sub
movsl
xlat
and
mov
mov
pop
outsl
cmp
cmpsl
in
inc
jmp
mov
push
fld
fstl
lea
movsl
sub
aad
rol
mov
sub
mov
and
cli
test
mov
jbe
repnz
mov
inc
mov
jns
into
and
jge
iret
jle
cwtl
inc
fwait
xorb
xchg
pop
in
mov
adc
jo
insl
testb
mov
xor
and
push
mov
dec
je
xlat
imul
ss
lock
inc
mov
adc
arpl
and
rcr
mov
adc
hlt
pop
stc
mov
push
add
xchg
add
mov
in
add
arpl
or
pusha
xchg
pop
mov
cmp
iret
inc
aad
xlat
sbb
sbb
mov
lcall
mov
mov
adc
es
icebp
push
negl
nop
movsl
pusha
xchg
iret
enter
mov
cmpsl
std
jns
xor
mov
xchg
mov
sbb
xor
mov
addb
addr16
fildll
lret
leave
xor
add
lds
dec
fwait
test
mov
push
mov
mov
imul
inc
mov
outsb
push
mov
and
or
sbb
pop
ss
std
sub
cs
cmc
xchg
inc
pop
mov
cmp
ret
push
mov
test
push
out
mov
adc
mul
xchg
push
mov
push
mov
popf
pusha
fmull
and
mov
pop
and
repz
scas
inc
outsb
mov
rclb
mov
add
sbb
popa
in
cwtl
inc
and
frstor
cmp
inc
jbe
mov
ret
push
in
mov
stc
xchg
cmpsl
icebp
fs
cmc
jl
pop
or
add
scas
shlb
ret
mov
and
enter
sbb
inc
cld
jno
loop
aad
and
aam
repz
or
icebp
outsl
andb
push
movsb
in
adc
pop
cmp
xlat
repz
add
test
and
or
scas
sbb
xchg
mov
pop
and
mov
adc
xlat
lock
jg
mov
push
cmpsl
aam
addr16
inc
mov
dec
mov
scas
mov
mov
sbb
pop
mov
jae
jecxz
shl
fdivrp
pusha
cmpsl
mov
dec
sbb
and
fwait
inc
lcall
mov
dec
adc
test
push
xlat
cli
xchg
hlt
mull
clc
rolb
pushf
fcomps
fcompl
push
lret
mov
inc
test
mov
and
xor
fisttps
fcoml
mov
int
call
push
adc
or
int3
clc
das
mov
subl
sbb
xchg
int
inc
and
scas
push
sub
push
push
cmpsb
push
cmp
imul
aaa
xchg
jl
lret
insb
mov
xor
mov
ds
call
cmc
sbb
mov
dec
mov
subb
fstpt
push
daa
insb
pop
push
mov
out
mov
mov
popa
dec
rol
loope
pop
mov
xchg
mov
push
in
inc
mov
aas
add
inc
mov
jae
mov
movsl
mov
and
pop
cmp
insb
out
jbe
aas
cmp
adc
cs
mov
ret
arpl
daa
cmp
cmpsl
push
pop
pop
cli
mov
inc
mov
mov
mov
int3
cmc
notl
mov
mov
pop
push
cmpsl
decb
arpl
test
sub
shlb
cmp
mov
mov
inc
call
mov
or
mov
int
popl
cmc
mov
jle
pop
sti
mov
jp
sahf
lods
jg
mov
lods
jbe
mov
adc
adc
jns
out
fnstenv
xchg
add
add
mov
mov
jns
fwait
mov
jp
leave
pop
movsb
aas
add
lds
mov
cmpsl
add
jb
movsb
mov
and
cmpsl
clc
js
or
pop
sahf
mov
mov
add
test
mov
test
fbld
into
pop
imul
mov
cmp
xor
mov
xchg
mov
mov
imul
movzwl
sub
ror
aam
mov
out
mov
mov
insl
ja
adc
mov
xchg
cmpsl
jp
mov
sbb
lea
sbb
hlt
mov
es
cmpsb
lret
or
mov
les
mov
xchg
outsb
sbb
inc
repz
lods
ret
std
lret
mov
jo
es
xchg
mov
push
cwtl
add
ret
mov
idivl
les
dec
mov
scas
xor
mov
movsb
imul
mov
push
pop
mov
mov
imull
rol
mov
inc
jmp
push
or
orl
cmpsl
cwtl
jbe
int
movsl
mov
fs
mov
lret
inc
adc
cmp
sbb
ljmp
push
mov
mov
xchg
cmp
mov
push
xor
adc
mov
das
mov
push
dec
lahf
mov
or
lcall
repz
jb
mov
mov
lahf
imul
dec
and
add
adcl
insb
je
in
mov
dec
sub
push
nop
and
mov
xchg
cmpsb
and
mov
aam
mov
and
movsl
ljmp
test
pop
pop
inc
icebp
dec
mov
and
ss
adc
shlb
paddw
ss
jl
scas
loopne
xor
fadd
and
cmpsl
inc
sub
adc
add
divb
out
cmp
mov
testl
inc
leave
sub
or
cwtl
mov
ffreep
and
pop
jg
cmpsl
cmp
inc
xchg
js
clc
mov
pop
cmp
ffree
jno
jb
mov
loope
inc
push
inc
aas
test
test
mov
sti
pop
les
mov
lahf
mov
bound
xchg
jmp
mov
hlt
fisubs
mov
jle
popf
and
xor
mov
pop
cmp
push
scas
dec
aam
cmp
gs
in
push
pop
adc
xchg
loopne
lret
lock
sub
lret
lods
mov
in
mov
adc
mov
cmpsl
and
lcall
push
addr16
mov
sub
mov
lds
imul
cli
xorb
scas
adc
cmpsl
scas
rcrb
dec
notl
in
movsl
cmpl
cmp
dec
mov
lods
mov
dec
mov
add
xor
incb
or
push
mov
shll
mov
arpl
xchg
aam
loopne
mov
es
mov
xor
stc
mov
pop
xlat
mov
push
test
popf
mov
loope
iret
in
es
fwait
jg
or
rolb
or
movsb
and
aaa
cltd
or
adc
sbb
in
das
mov
call
mov
and
rorl
rolb
mov
int
xchg
add
addl
mov
mov
insl
mov
cmpl
scas
push
dec
adc
add
xchg
mov
test
add
mov
out
inc
ret
test
dec
mov
sbb
test
mov
sbb
and
mov
fdivs
int
push
adcl
shlb
mov
jp
jl
mov
cmp
out
lock
pushf
test
sub
imul
xor
ret
push
adc
push
or
push
shlb
pop
mov
mov
sub
or
fsts
push
push
xor
aad
test
or
mov
js
push
rol
arpl
mov
test
scas
xchg
jo
movzwl
divb
mov
mov
pushf
jle
ficoms
jecxz
rcll
mov
sub
mov
mov
xor
cwtl
dec
mov
pop
ret
clc
in
or
push
ljmp
sub
xor
fnsetpm(287
fistps
push
je
and
cmpsl
push
jmp
xchg
inc
sbb
pmulhw
cmpsl
jae
adcb
mov
sub
mov
scas
cmp
mov
mov
divb
rol
push
mov
push
clc
leave
js
sarl
mov
jmp
cmp
mov
mov
les
mov
callw
arpl
mov
loop
inc
negb
mov
daa
stc
iret
push
cmpsl
xchg
jl
movsl
mov
lods
mov
pop
mov
add
jmp
rcrl
dec
shll
stc
push
mov
push
ret
insl
imul
aad
lret
mov
mov
test
mov
mov
leave
scas
jns
cmp
or
out
mov
dec
inc
jo
js
mov
inc
mov
insl
sbb
fstl
jge
push
and
fdivs
xchg
push
dec
cmpsl
and
jnp
adcb
loop
cli
cmp
std
add
xlat
lea
inc
xor
dec
xlat
and
jmp
lods
mov
cmp
cmp
push
aad
popa
push
cmp
sub
mov
mov
mov
mov
leave
mov
sub
imul
movsb
popa
cmpsl
ret
leave
jp
xor
jle
push
enter
pop
mov
repnz
mov
mov
adc
scas
dec
xchg
adc
sbb
lea
sbbb
loopne
jno
cmpsl
testb
sbb
jmp
ljmp
mov
arpl
mov
imul
imul
scas
mov
mov
test
sbb
cltd
mov
mov
loop
push
int3
mov
mov
test
jge
in
enter
ret
pusha
mov
cmpsl
shlb
loop
dec
aad
int
mov
cwtl
push
fnsave
jno
insb
jnp
or
scas
scas
sub
mov
lods
test
mov
dec
xchg
mov
mov
mov
adc
in
mov
scas
push
mov
mov
sub
xor
and
leave
iret
aas
scas
lock
push
mov
mov
mov
cmp
mov
mov
shlb
xor
mov
mov
mov
adc
mov
leave
test
pop
mov
subb
movsb
sarl
or
mov
sbb
int3
stos
fwait
mov
mov
sti
mov
push
aas
sbb
jne
insb
cmpb
movsl
lret
mov
mov
sbb
bound
add
mov
in
push
mov
cmpb
sub
sbb
mov
dec
ret
out
mov
inc
push
cltd
xchg
mov
cmpsl
test
mov
in
scas
rcll
push
cmp
sub
mov
inc
popl
aad
mov
or
stos
mov
mov
add
orb
xor
xchg
sbb
loop
sub
mov
lret
out
or
sub
fsubrs
mov
add
cmpsl
jmp
cltd
mov
push
loope
xchg
test
sbb
out
or
inc
jnp
insb
inc
mov
shl
jmp
mov
enter
repz
insl
cmpsl
mov
lods
jecxz
dec
loop
mov
mov
in
cmp
movsl
into
scas
jae
pop
or
insb
add
xlat
sahf
in
mov
daa
fbld
mov
test
inc
mov
ret
in
mov
push
js
and
adc
jne
mov
jb
in
adc
mov
leave
fisubs
mov
movsl
jge
lods
push
inc
xchg
mov
xlat
pop
stos
out
adc
aas
jbe
sub
xlat
shll
jl
mov
dec
aaa
out
mov
dec
sbb
fstps
inc
je
add
add
popa
dec
mov
cmp
sub
shrb
mov
mov
jge
and
or
mov
lahf
cmpsl
movsl
pop
pop
mov
fdivl
scas
mov
mov
adc
mov
push
stos
mov
fisubrs
daa
xlat
and
adc
pop
data16
add
push
scas
xchg
test
movsl
stos
xchg
cld
mov
leave
stos
jb
sbb
loop
add
mov
xchg
or
je
cmpsl
cmp
push
add
inc
mov
stos
mov
and
jp
ljmp
sbb
ret
add
mov
sub
lds
outsb
lret
xchg
mov
pusha
jnp
mov
imul
xlat
scas
mov
xlat
mov
imul
nop
ret
push
adc
fcom
mov
push
lret
inc
aaa
psrld
shrl
stos
inc
outsl
scas
xchg
cmpsl
in
lods
leave
mov
or
adc
mov
dec
shll
iret
add
cmpsb
push
mov
mov
push
cmp
mull
mov
cmp
rclb
mov
dec
lret
dec
mov
mov
inc
mov
cmpsw
jp
clc
idivl
stc
sub
push
mov
cmpl
inc
test
sbb
push
xor
or
scas
dec
xlat
popf
push
dec
repz
cmp
inc
out
xchg
dec
mov
xlat
pusha
jmp
dec
data16
movsb
js
sub
test
daa
pusha
andb
sub
xchg
int
inc
mov
and
push
xchg
add
xchg
mov
imul
mov
popa
clc
mov
jnp
bound
fnstenv
insb
cmp
mov
fmull
nop
mov
fs
cmp
xor
clc
int
loope
divl
adc
or
fistpll
rcll
mov
mov
mov
cmpsl
lds
and
std
push
add
push
cmpsl
cmp
and
xor
scas
mov
pop
cwtl
wrmsr
movsl
inc
and
pop
lcall
lods
inc
pushf
mov
mov
neg
out
test
idivl
ds
push
shl
andl
lods
xchg
dec
mov
mov
jl
loope
mov
mov
rol
jno
popa
addr16
xor
push
sub
jno
jbe
rcl
jge
insl
sbb
mov
mov
icebp
pop
inc
sub
jnp
sub
and
xchg
out
dec
stos
aas
add
cmpsl
pusha
dec
adc
mov
mov
loope
mov
xor
aaa
insl
movsl
push
jnp
sysenter
lret
into
mov
cli
cld
cmp
sahf
mov
fcompl
aad
xchg
nop
mov
movsl
jmp
aaa
jns
sbb
mov
ja
jne
mov
cmp
mov
xlat
add
daa
adc
cmp
xchg
mov
dec
aam
lods
mov
mov
das
cmpsb
mov
and
mov
stos
xor
jge
sbbl
cmp
dec
mov
push
add
push
add
pop
add
push
sarb
scas
cwtl
insb
lea
jne
je
jo
pop
dec
cmp
jb
fidivs
shlb
jns
inc
hlt
sbb
jp
mov
mov
cmp
xor
xchg
fnstsw
icebp
stos
push
cmpsl
lret
mov
into
lcall
mov
scas
sub
pop
fcomip
imul
xor
test
call
shll
aas
in
xor
mov
push
mov
les
pop
mov
pop
add
insl
cmp
not
stos
cmc
icebp
clc
xchg
in
xor
pop
sbb
iret
lods
push
xlat
push
adc
push
aam
repz
sbb
fwait
mov
inc
mov
test
dec
dec
add
es
in
jnp
dec
mov
scas
mov
inc
negb
xchg
fcoms
dec
mov
mov
adc
lea
call
in
or
out
xchg
movsl
cmpsl
xor
mov
std
sub
shll
sbb
lret
dec
insb
dec
ja
mov
cmp
out
adc
je
sbb
aad
xchg
popa
fadd
xlat
call
stos
icebp
mov
xor
flds
aad
cmpsl
lods
rcl
xchg
xor
cmpsl
repz
movsl
mov
add
arpl
insb
inc
mov
shrl
lcall
aam
mov
clc
jae
cmp
in
dec
imul
aas
xorl
and
clc
cmpsb
adc
push
and
inc
mov
adc
add
jmp
or
lea
rclb
or
int3
inc
scas
dec
xor
mov
imul
roll
or
mov
ss
mov
jmp
je
mov
dec
dec
adcl
and
ja,pt
imull
mov
scas
adc
jne
adc
xlat
dec
push
push
mov
pop
mov
fs
push
in
jle
test
icebp
std
in
or
push
jnp
jg
xlat
mov
cmp
int3
orl
add
aaa
rorb
aad
jecxz
inc
mov
lret
leave
hlt
shlb
cli
mov
popf
sahf
jae
std
sbb
scas
adc
leave
into
cwtl
cmpsl
mov
loope
cltd
push
lcall
add
sbb
inc
bound
icebp
lahf
call
stos
pop
outsb
scas
cld
jge
aam
mov
mov
cltd
or
cmpsl
sub
pop
test
jnp
push
cmpsl
mov
imul
mov
mov
cmpsl
movsl
xchg
inc
push
es
adc
jp
mov
jno
loope
in
mov
insl
arpl
cmc
mov
iret
jg
mov
mov
and
dec
sub
mov
into
pop
test
mov
cmp
cmpsl
xchg
cmpsl
test
das
ljmp
in
shrl
das
mov
add
inc
lods
popa
mov
cmp
sbb
xchg
xor
mov
mov
fldl
pop
xor
test
mov
mov
sahf
cwtl
pop
xor
subl
push
imul
xchg
icebp
dec
mov
mov
inc
in
mov
out
jo
jb
cmp
or
dec
and
fsts
push
xchg
xorb
stos
movsl
dec
cwtl
jne
in
and
mov
and
xorb
test
mov
cmpsl
daa
mov
push
xchg
cmpsl
roll
mov
fildll
in
jg
xchg
cwtl
pop
mov
cltd
pop
scas
lcall
es
pop
cmp
dec
mov
dec
pop
push
mov
inc
mov
and
mov
jbe
mov
outsb
lcall
addr16
mov
gs
iret
mov
jno
or
push
shlb
sub
mov
mov
adc
rclb
add
int3
outsl
mov
addl
cmp
mov
scas
push
pop
mov
fiaddl
fistl
scas
xchg
movsl
mov
cmpsb
cmc
xlat
lods
or
push
cmpsl
ret
xor
mov
stos
push
clc
movsl
or
or
scas
test
adc
pop
mov
scas
or
data16
inc
shl
mov
adc
pop
leave
pop
lea
jp
scas
and
mov
xchg
xor
stos
and
loopne
add
mov
cmp
mov
jae
mov
frstor
das
mov
pop
and
outsl
movsl
add
cmp
mov
ds
sti
andb
dec
ret
jmp
icebp
inc
out
cmp
cmpsl
fwait
mov
xorl
mov
dec
pop
icebp
xor
mov
fwait
jp
push
cs
cmpsb
mov
mov
mov
pop
adc
add
mov
adc
int
test
scas
fbld
cmp
cmpsl
cmp
mov
and
sub
xchg
mov
xchg
shlb
cmpl
scas
mov
repz
dec
mov
aam
pushf
inc
push
cmp
fwait
dec
mov
cmp
pop
in
hlt
mov
lods
fmuls
jne
lret
divl
and
fbld
jp
js
stc
push
mov
lahf
test
sbb
enter
mov
sbb
mov
rcrb
inc
pop
ret
cwtl
jle
or
call
xchg
in
xorps
mov
inc
in
pop
pop
cmpsl
add
sub
ret
mov
adc
icebp
add
loop
jg
inc
cmp
or
mov
xor
mov
mov
push
cmpsb
pop
cmp
xchg
or
pusha
mov
sub
fimull
lret
mov
out
loop
inc
mov
mov
mov
scas
mov
dec
out
jb
arpl
cld
mov
jl
mov
cwtl
adc
jmp
mov
leave
or
cmpsl
adc
or
mov
fsubrs
jmp
mov
pop
mov
mov
jge
mov
push
popl
nop
icebp
push
jecxz
mov
pop
movsb
sbb
xchg
and
les
jno
mov
neg
xlat
push
mov
xchg
out
mov
mov
dec
dec
rol
sti
mov
pop
mov
fadds
int
dec
adc
jmp
pop
gs
mov
rcrb
stc
jb
xchg
add
pop
mov
loop,pn
adc
add
mov
mov
cmpsl
dec
orb
mov
lret
hlt
jno
ret
pop
gs
cmpsb
mov
cmc
mov
add
push
mov
and
aad
into
inc
lea
xlat
jmp
in
lds
mov
sbb
sysenter
insl
ret
pop
ss
fdivs
sti
imul
inc
gs
mov
nop
les
add
mov
movsb
incb
test
int
stc
sbb
jg
insl
scas
mov
inc
fadd
movsl
push
mov
push
mov
xchg
ja
mov
mov
lret
xor
sub
test
pop
sbb
jb
pop
jo
stc
mov
das
mov
stos
xchg
cmpsl
mov
push
negb
and
adc
xor
xchg
and
cmp
lock
sub
pop
pop
mov
int3
pop
sbb
gs
imul
js
sbb
sub
cwtl
mov
mov
mov
jo
stos
movsl
clc
dec
mov
add
mov
sbb
sbbl
scas
xor
push
mov
cmp
out
xlat
lods
cmc
js
sub
cmp
nop
mov
repz
stc
out
xor
inc
cmpsl
dec
fiadds
pop
jb
mov
movsl
outsl
outsb
dec
mov
mov
mov
sarl
in
or
or
divb
ret
push
jp
dec
pop
sbb
int
dec
xor
mov
jno
cmp
or
pop
mov
xchg
inc
mov
pop
add
cmpsl
dec
mov
push
sahf
in
mov
std
lcall
jg
mov
jl
mov
lahf
adc
scas
cmp
pop
stos
cmpsl
inc
outsb
dec
pop
cwtl
clc
popa
mov
test
lcall
cmp
aaa
das
stc
mov
sbbb
mov
xchg
test
cmpsl
inc
add
and
daa
cmp
negb
inc
jns
xchg
lret
mov
or
cli
sbb
in
scas
pop
mov
cltd
sub
mov
sub
test
shl
or
and
mov
inc
push
in
sbb
push
xchg
mov
xchg
shlb
sub
mov
jmp
ss
mov
mov
mov
mov
in
jg
or
imull
lea
or
and
rcrb
out
scas
cmp
les
lods
dec
lret
dec
sbb
mov
mov
bound
mov
inc
in
jge
mov
loop
mov
mov
arpl
or
mull
inc
xchg
fwait
mov
movsb
adc
xor
test
sbb
ljmp
push
notl
pop
and
mov
mov
cwtl
jnp
mov
in
ror
lods
aas
add
pop
add
mov
sti
xor
cmp
or
out
and
mov
cli
and
mov
call
jp
mov
js
dec
dec
clc
adc
ret
cmpsl
bound
cmc
stc
notl
outsl
push
mov
cmp
movsl
dec
mov
in
mov
das
iret
xor
clc
roll
lods
mov
push
pop
dec
add
mov
pop
jns
mov
inc
cmpsl
xor
xchg
and
xor
sub
sbb
jnp
daa
in
push
ss
stos
negl
mov
fwait
jge
cmp
roll
clc
loop
orl
push
dec
les
inc
cmp
mov
or
mov
adc
xchg
arpl
mov
imul
pop
repz
push
clc
jg
sbb
jp
mov
roll
dec
call
lahf
aas
in
adc
mov
popa
and
stc
xor
mov
mov
icebp
jae
xchg
loope
jle
scas
xchg
into
jnp
outsl
neg
arpl
leave
subl
xor
sbb
pop
mov
xchg
jbe
push
mov
add
mov
cmpsb
cmc
mov
pop
jnp
mov
push
add
sbb
cmp
mov
cli
or
xchg
mov
notb
mov
mov
inc
in
cmpsl
add
out
mov
fisubl
mov
mov
ljmp
mov
and
cmpsb
mov
lret
cmpsl
insb
mov
movsb
test
pop
dec
push
roll
cwtl
pop
ret
mov
mov
cmp
call
dec
fdivs
sti
repz
mov
cs
js
xor
iret
lods
imul
mov
std
pop
shlb
arpl
xchg
jno
mov
sahf
outsl
movsl
or
sbb
insl
or
xlat
test
out
xor
sbb
lret
sbb
into
mov
jl
mov
leave
js
in
outsb
int3
test
rcrb
mov
sbb
icebp
mov
jne
aas
and
popa
mov
inc
pop
mov
mov
sub
mov
mov
test
dec
mov
out
orl
sbb
cmpsl
or
stos
scas
imul
mov
dec
dec
iret
mov
adc
xor
js
in
push
out
xchg
xlat
xlat
jg
imul
lret
out
sti
push
rcl
test
add
aad
shll
lret
mov
out
xor
imul
mov
out
xlat
adc
pop
xor
xchg
cs
mov
popf
insb
pop
cmp
out
in
ds
imul
inc
mov
into
mull
mov
rcl
bsr
bound
test
shll
rorb
sbb
or
xchg
mov
add
jge
xchg
mov
stos
mov
lret
imul
mov
rclb
out
leave
scas
pop
push
in
incb
js
inc
sub
mov
push
mov
ret
xchg
mov
mov
mov
lcall
mov
sub
int3
adc
insb
push
call
mov
arpl
add
cmp
fwait
shlb
insb
lds
mov
jmp
jg
mov
test
loope
pop
mov
mov
gs
cmpsl
mov
mov
and
cmp
orl
fdivs
dec
mov
repz
call
imul
pop
bound
dec
cmc
nop
sbbb
ret
push
xor
outsl
cmpl
sub
mov
cltd
les
xor
sub
cmpsl
stos
mov
mov
push
sti
pop
adc
inc
mov
in
jge
test
mov
xchg
scas
mov
sub
jl
sbb
sbb
jbe
jg
mov
mov
xchg
popa
es
shrb
jnp
jno
mov
mov
out
pusha
shlb
cmp
pop
mov
lahf
cmpsb
mov
rcrb
into
xor
js
cld
and
mov
dec
test
mov
jecxz
rcr
outsl
ret
mov
sub
bndldx
scas
add
cmp
arpl
mov
pop
sbb
jp
bound
nop
mov
leave
fsubs
rclb
cmp
scas
lea
mov
xchg
cmpsb
xlat
test
cmp
mov
dec
mov
xchg
js
push
push
xorl
scas
icebp
and
jo
mov
dec
mov
sub
cs
and
mov
jo
adc
mov
mov
movsl
jg
mov
add
leave
mov
push
hlt
xor
shrl
pusha
and
mov
sbb
cmp
sub
mov
es
mov
or
mov
cmc
inc
xchg
mov
decb
rcrl
aad
ret
add
movsl
repz
mov
pop
cmp
sbb
cltd
cmpsl
cmp
lock
jecxz
mov
fldl
xorl
pop
scas
ja
sub
and
out
sub
leave
or
scas
sub
jmp
test
movsl
roll
shlb
xorl
push
mov
jp
mov
cmovl
mov
cmp
pop
mov
fadds
cwtl
leave
mov
xchg
stos
mov
mov
inc
jnp
xchg
mov
add
out
cmp
das
push
add
mov
or
scas
aaa
faddl
adc
and
and
mov
pcmpeqb
xchg
icebp
nop
mov
mov
xor
mov
bound
iret
fsubs
call
jns
loop
stos
les
cmp
fadd
jnp
sbb
xchg
lcall
cmp
fstpt
sub
aaa
mov
icebp
mov
in
in
js
cmpsl
dec
imulb
push
inc
mov
xlat
orl
jnp
jmp
jge
arpl
inc
mov
cmp
ffreep
dec
fidivs
shll
fisttpll
loope
xchg
mov
inc
sahf
cmc
out
aaa
stos
bound
pop
mov
jle
dec
inc
inc
push
xchg
test
mov
mov
mov
sbb
outsb
sti
mov
decl
mov
negl
aad
das
loop
scas
mov
mov
push
lcall
neg
shlb
dec
pop
add
shrb
mov
call
repnz
mov
mov
idivl
jne
jge
xor
bswap
sti
cmp
cmp
pop
xchg
jno
push
cmp
addr16
pop
jp
jo
adc
insl
sub
repnz
mov
ret
pop
mov
and
jns
or
mov
sbb
cmc
movsb
mov
pop
mov
in
leave
cmp
or
sbb
jo
mov
mov
shlb
movsl
and
repnz
popf
sub
mov
sub
or
aad
xorb
mov
adc
jg
lods
pop
into
fists
test
lret
push
push
sbbl
jecxz
scas
cltd
xchg
jns
pop
mov
jmp
stos
cmc
pop
popf
sbb
jbe
sub
xchg
andl
cwtl
add
jne
dec
inc
jg
mov
add
testb
adc
sbb
cmp
clc
mov
xor
add
movsl
inc
fsubs
cmpsl
mov
ja
lea
mov
test
push
adc
jnp
fidivs
mov
dec
enter
xchg
inc
mov
jge
mov
loope
or
cmpsl
into
sbb
aas
jbe
xchg
icebp
lret
mov
xor
loope
jg
cmp
daa
mov
stos
arpl
or
jo
int
sar
mov
and
adc
mov
dec
popf
mov
leave
sbb
pusha
jnp
mov
movsl
andb
outsl
mov
pop
jecxz
and
mov
fidivrl
xchg
mov
cmpsl
inc
lahf
mov
pusha
push
out
sbb
frstor
out
mov
add
mov
pop
or
aad
mov
add
insb
and
mov
imul
jns
and
sub
pop
and
and
mov
imul
cmp
mov
dec
jnp
mov
mov
inc
arpl
mov
cmpl
and
jge
mov
lea
mov
push
xchg
pop
pop
mov
out
mov
bound
inc
mov
and
fildll
pop
xchg
dec
aaa
lahf
mov
in
add
cmp
test
mov
xchg
push
in
insb
mov
pusha
jno
pop
xchg
cmpsl
sub
lods
xor
inc
mov
jg
push
push
push
jge
mov
add
xchg
jae
leave
cmp
mov
or
xlat
mov
popa
movsb
movsl
mov
cmpsl
adc
loopne
ffreep
pushl
sbb
sbb
push
icebp
mov
in
and
or
inc
es
test
mov
loope
popa
in
movsl
inc
mov
outsb
push
mov
mov
pop
loop
dec
in
mov
mov
lahf
sub
dec
cmpsl
cmp
inc
into
push
jmp
xlat
mov
dec
outsl
xor
add
adc
inc
popa
mov
movsb
mov
push
add
sbb
adc
mov
pop
mov
dec
cmpsl
mov
xchg
iret
sub
shlb
scas
sbb
loope
and
mov
outsb
shll
jg
fistpll
jne
add
out
and
or
ss
pop
mov
pop
xchg
cwtl
mov
mov
les
jns
jge
cmpsb
ffreep
and
jg
inc
jl
repz
pop
sti
dec
sbb
mov
mov
add
pop
fsubrs
shlb
mov
xor
repz
shlb
jecxz
jge
sub
pop
sbb
jo
mov
out
divl
icebp
enter
scas
mov
data16
lret
sahf
out
repnz
pop
popf
js
fcoml
dec
mov
mov
dec
fistpll
mov
iret
int3
fildl
cmp
mov
lock
mov
je
mov
insl
jne
das
mov
arpl
scas
mov
test
sub
mov
out
cmpsl
inc
loopne
and
cwtl
nop
hlt
dec
pop
ret
jae
inc
pop
std
stos
shl
pop
cmp
sub
mov
and
sahf
mov
jns
mov
xlat
inc
jle
outsb
dec
movsl
sub
cmpsl
test
sarl
icebp
cmp
in
insl
cmp
dec
sbb
cltd
fcmovu
sub
arpl
mov
insb
and
lds
ret
mov
js
mov
xchg
gs
lret
push
pop
fmuls
aas
cmc
xor
dec
pop
outsb
push
ret
mov
mov
loop
stos
int
mov
cs
dec
push
dec
push
push
mov
scas
and
fldenv
cmp
int
insl
hlt
shlb
push
or
ret
and
xchg
fcmovbe
fnsave
scas
lcall
stos
jmp
fstpt
mov
mov
fbstp
mov
add
testl
mov
stc
jb
xchg
mov
jle
sbb
cmp
adc
icebp
dec
mov
dec
flds
imul
repz
daa
je
xchg
adc
mov
lret
test
mov
adc
inc
repnz
movsl
inc
sbb
aas
call
mov
cwtl
mov
ds
jecxz
inc
mov
fs
icebp
shll
mov
shlb
push
sahf
and
push
push
rcll
mov
adc
mov
mov
cmp
or
xlat
iret
jne
mov
mov
in
sbb
cltd
rclb
mov
push
mov
sbb
mov
mov
jb
neg
pop
jl
aam
xchg
mov
arpl
xor
cmpsl
daa
pop
pushf
pop
cmp
mov
adc
lock
mov
sub
fld
sbb
adc
stos
orb
sbb
cmpsl
je
xlat
pop
inc
popf
fcom
pusha
movsl
xor
stos
mov
jno
js
test
mov
sbb
jne
mov
movsb
sar
ret
mov
mov
lret
mov
pop
cmpsl
adc
dec
call
mov
fcoml
xor
sar
xchg
mov
add
jo
xorl
sbb
mov
scas
jmp
and
subl
movsl
fisubrs
push
repz
int
xor
mov
mov
mov
inc
add
fimuls
jle
mov
lcall
js
sub
pop
lret
and
adc
leave
mov
cwtl
xchg
outsb
or
push
lock
mov
or
adc
sbb
and
imul
sar
pop
ja
pushf
lret
ret
jns
movsl
mov
ret
cli
repnz
sub
scas
pop
mov
leave
sbb
mov
out
data16
inc
jmp
mov
or
gs
orl
fcmove
adc
jge
cmp
mov
or
dec
cld
inc
jge
add
mov
and
mov
sbb
leave
test
cwtl
shlb
adc
sbb
in
dec
jecxz
stc
movsb
xor
sbb
inc
jns
jl
cmp
dec
mov
mov
enter
mov
mov
sub
pop
les
cwtl
add
inc
cmpsl
sbb
daa
sub
xor
mov
or
imul
je
mov
jnp
mov
inc
xchg
stos
mov
test
push
and
loop
lods
scas
dec
sub
mov
mov
gs
cmp
cmp
push
fidivrl
push
sub
rcl
mov
andb
mov
in
push
dec
lret
cmp
pop
mov
mov
sbb
mov
add
fldenv
stos
cwtl
insb
dec
fcoml
mov
mov
ss
repz
les
js
mov
push
sbb
cmp
jo
andb
jae
pushf
aaa
push
aam
or
xchg
mov
sarl
or
dec
mov
and
enter
push
int
push
lahf
aad
lods
adc
into
movsl
rcll
sti
dec
cltd
stos
sub
mov
popf
xchg
shl
pushl
mov
inc
jmp
js
or
xchg
divl
mov
fs
mov
xlat
fwait
testl
push
scas
jle
jns
cmpsb
or
xchg
cmpsl
std
xchg
mov
hlt
xchg
aad
insl
mov
inc
xor
dec
adc
stos
hlt
lahf
cmpsl
loop
fpatan
es
enter
mov
shll
push
lret
jmp
cmp
out
out
fs
and
aad
stos
xorl
movsl
or
sub
nop
shll
aad
mov
pushf
sbb
shll
test
mov
lods
movsl
lahf
mov
cmpsl
pusha
loope
push
mov
dec
inc
mov
jne
movsb
ret
stc
fistps
pushf
jae
cmp
jecxz
or
mov
adc
rol
mov
jle
inc
popf
mov
mov
push
cmpsl
mov
pop
fs
rol
mov
mov
mov
bound
lret
mov
xor
lock
outsl
push
or
dec
pop
mov
repz
in
shrb
mov
sbb
ret
pop
lock
sub
mov
dec
push
cmp
mov
mov
les
outsl
and
xchg
push
mov
ljmp
inc
or
imul
mov
fcomps
scas
addr16
mov
pop
xchg
mov
mov
mov
mov
mov
inc
lret
in
cmp
pop
mov
pop
jnp
push
xchg
mov
mov
test
mov
jg
dec
mov
in
cmp
mov
and
jecxz
xchg
dec
lea
mov
mov
adc
mov
shlb
sub
movsl
xor
in
mov
jns
xchg
mov
es
cmp
xchg
cmp
and
cmpsb
outsl
fnstsw
fdivs
sbb
jmp
xor
mov
aad
mov
rorl
fwait
pushl
jle
xchg
mov
mov
mov
mov
mov
jb
mov
add
setns
pop
int
cwtl
push
das
icebp
sbb
mov
out
in
jecxz
aad
je
stos
aas
adc
or
jp
rorb
mov
xor
cmpb
xchg
cmp
fistl
adc
mov
push
xor
pushf
cmpsl
mov
pop
pop
xor
test
adcl
jns
lock
pop
hlt
sub
add
mov
mov
mov
outsb
mov
push
and
in
stos
sbb
mov
sub
push
inc
test
cltd
dec
inc
jmp
mov
ja
add
jae
out
mov
mov
test
xlat
imul
xchg
add
adc
mov
pop
test
movzwl
mov
sbb
stos
add
dec
mov
push
or
movb
fldt
add
mov
sbb
adc
mov
adc
xlat
jo
sub
mov
cmp
ret
mov
inc
push
loope
or
jnp
jmp
and
mov
sti
jmp
mov
mov
mov
lahf
and
mov
inc
pop
jmp
adc
sti
and
adc
sbb
out
cmc
ret
or
add
imulb
cmpsl
jnp
jg
test
movsl
jmp
fcomip
lds
mov
lret
rcl
mov
adc
mov
mov
dec
imull
push
xchg
xchg
or
js
test
fnstenv
mov
and
iret
jle
xchg
lock
mov
push
mov
leave
cmpsl
mov
out
sbb
test
mov
sbb
mov
add
and
mov
sub
xlat
mov
xchg
xchg
shll
mov
and
nop
test
lcall
inc
jl
aad
pop
test
push
cwtl
mov
jo
lock
scas
sub
dec
adc
negb
and
in
push
sbb
inc
in
cmpsl
mov
shr
jge
inc
xorl
jle
test
sbb
inc
mov
mov
pushf
fnstenv
js
xor
xlat
jnp
and
ja
mov
dec
mul
dec
ret
cltd
andl
mov
inc
or
mov
arpl
jae
test
mov
lds
sti
or
jnp
stos
mov
ret
mov
shrl
sub
xor
mov
mov
out
and
and
loopne
mov
lods
xor
mov
subl
dec
lahf
out
jns
int
mov
loope
mov
into
in
jb
daa
jg
mov
jno
cli
jg
mov
xor
xor
popf
movsb
movsl
and
mov
ret
sti
push
push
rcrl
mov
cmp
jns
cmpsb
cmove
xor
and
mov
mov
mov
pop
mov
jns
scas
gs
loop
and
and
or
jle
ds
jle
mov
pop
dec
shl
push
sub
lods
mov
lds
mov
mov
fildll
ds
mov
add
mov
loope
dec
push
cli
cmpsl
mov
repnz
and
mov
rcrl
popa
adc
xor
out
dec
in
mov
mov
bound
mov
mov
fnstenv
xor
xchg
push
dec
test
into
xlat
add
fs
arpl
xor
xlat
movsl
mov
sbb
sbbl
mov
bound
orl
mov
mov
iret
clc
lea
roll
enter
mov
sub
loop
cvtdq2ps
mull
imul
push
inc
or
inc
test
fnsave
mov
inc
je
shr
cmp
pop
mov
mov
jg
jbe
cmpsl
xchg
add
cmp
sbb
pop
aad
mov
cltd
mov
and
mov
dec
jge
jmp
jae
jp
test
je
add
adc
mov
and
ds
nop
std
dec
adc
push
sub
xorl
push
cwtl
mov
push
sub
mov
xchg
pop
test
mov
inc
fsubp
mov
mov
in
xor
push
lods
jno
or
mov
jge
mov
add
xchg
inc
movsb
dec
mov
mov
pop
fdivrs
xchg
sahf
insb
mov
ret
sbb
cmpsb
js
dec
repnz
cmpsl
mov
mull
mov
mov
shr
jnp
mov
or
adc
or
push
inc
mov
movsl
xor
lahf
idivl
mov
fisttps
clc
mov
scas
sbb
xor
add
das
sub
shll
jb
sti
lds
into
inc
jmp
cmpsl
ja
mov
xchg
dec
mov
jae
xchg
loope
arpl
adc
test
xchg
adc
fadds
xchg
lcall
das
jne
or
loopne
push
mov
pop
fnstcw
mov
pop
daa
leave
mov
repnz
mov
xchg
push
cmpsb
push
sub
jecxz,pn
mov
jg
stos
sub
push
pop
xchg
cmpsl
lods
jle
loope
mov
jmp
int3
lret
insl
pop
ljmp
push
test
xor
push
mov
jp
add
ja
and
aaa
bound
mov
mov
movsl
pop
divl
push
fcmovnb
mov
cmp
inc
xchg
push
mov
mov
mov
ret
inc
inc
pop
rol
cmpsb
pop
mov
add
ds
mov
push
loope
test
call
mov
push
cmp
repnz
lods
cld
pushl
mov
movsb
and
cmpsl
jg
scas
sub
mov
dec
add
mov
add
mov
icebp
adc
shll
sahf
dec
mov
enter
mov
mov
mov
fs
movsl
dec
or
testl
scas
mov
loope
xor
mov
mov
mov
repnz
scas
xorl
rcr
ljmp
mov
dec
mov
test
hlt
jmp
shl
jl
stc
cmp
xchg
push
sbb
cli
cmp
xor
divb
xor
lods
scas
add
into
mov
mov
aam
mov
adc
outsb
or
jg
jecxz
pop
test
mov
inc
loope
mov
movsl
sub
and
dec
adc
mov
ret
mov
mov
cs
xor
into
movsl
mov
imul
cmpsl
scas
inc
mov
dec
and
mov
pop
test
xchg
adc
cmpsl
sub
int
arpl
inc
in
cmpsl
xor
fsub
mov
push
adc
mov
mov
push
inc
and
xor
cmp
mov
push
mov
or
lock
jne
inc
mov
and
popa
inc
add
in
xchg
mov
or
mov
jmp
fstps
outsb
mov
xorb
push
stc
testl
pop
inc
int3
clc
mov
push
add
nop
sub
adc
xor
aaa
jne
mov
xor
arpl
mov
shll
mov
mov
add
gs
ss
sub
mov
in
lret
cmpsb
xchg
inc
movsb
inc
mov
je
pop
lods
jno
mov
mov
cmc
fnstcw
cmp
cmpsl
popa
xchg
xor
mov
xor
pop
mov
aad
popa
jmp
pop
les
cmpsb
inc
jne
and
test
xchg
and
in
aas
addr16
sahf
or
test
mov
mov
mov
push
fucom
pop
rclb
push
and
xorl
jp
mov
mov
mov
cmpsl
incl
mov
cmp
ljmp
in
and
dec
call
xchg
xor
mov
adc
mov
and
movsl
inc
jmp
mov
jecxz
pop
push
xchg
test
add
mov
jge
shl
imul
adc
jmp
adc
nop
dec
sub
xchg
xor
sub
mov
nop
arpl
leave
inc
into
dec
test
test
or
ret
inc
push
and
call
ljmp
mov
outsl
mov
imul
inc
faddl
pop
push
add
mov
daa
push
or
cmp
test
push
cmpsl
sub
xorl
mov
and
test
mov
stc
jns
shlb
xor
add
mov
jns
or
movsl
pusha
add
stos
in
daa
jne
mov
and
adc
subl
test
sbb
sub
sub
mov
pop
push
dec
mov
mov
jp
jg
mov
fidivrl
loop
cmpsl
es
repz
xlat
test
addr16
mov
in
fsubrs
push
adc
imul
jns
enter
mov
mov
pop
into
mov
popa
out
add
mov
mov
in
lahf
cmp
int
push
jae
adc
dec
add
adc
xor
jmp
sub
fcmovbe
cmpb
aad
scas
mov
movsl
popa
cmpl
mov
lea
mov
jp
or
mov
ljmp
or
movsl
mov
std
lahf
cmova
fwait
pushl
stos
scas
push
adc
push
cmpsb
cmc
dec
cwtl
daa
fs
mov
lea
pop
scas
add
xor
and
push
xor
dec
iret
int
in
lea
or
xor
icebp
je
cli
mov
mov
jne
add
rol
cltd
jnp
jno
scas
nop
rcrl
sub
push
inc
mov
or
sbb
and
movsl
cltd
and
xchg
mov
iret
cwtl
mov
mov
mov
fiadds
mov
sub
and
push
outsl
dec
in
mov
movsl
negb
scas
in
leave
ret
shrb
mov
nop
push
mov
lret
cmp
out
lock
mov
adc
stc
icebp
mov
mov
or
adc
fstpt
adc
into
pop
mov
add
scas
rcrb
xlat
sub
and
add
out
add
pop
fnstenv
or
xlat
out
jecxz
sub
xlat
mov
mov
jmp
sub
pop
adc
mov
scas
jle
jnp
xor
pop
mov
ds
loopne
xchg
sub
idiv
test
mov
jecxz
pop
mov
mov
int3
shlb
cmp
sahf
test
mov
sti
sbb
mov
xchg
sbb
rcl
push
clc
mov
cmpl
mov
mov
rcl
dec
loopne
mov
mov
rorb
mov
dec
outsb
lea
popf
jno
orl
xchg
mov
insl
outsl
mov
mov
and
enter
int
xchg
pop
mov
push
loopne
xchg
xchg
mov
mov
xor
xorl
fs
mov
cli
jmp
jns
leave
mov
mov
push
xor
icebp
and
mov
add
loop
inc
out
mov
xchg
xchg
inc
mov
in
add
mov
pop
or
pop
in
mov
pop
lods
repz
repnz
xchg
inc
sub
mov
cmc
fbstp
pop
fcmovbe
rclb
xorb
mov
out
mov
sbbb
xor
pop
lahf
xchg
cmpsl
in
cltd
stos
es
push
pop
jne
sub
xor
cwtl
std
push
ficoml
add
lods
push
mov
xor
pop
popa
mov
mov
pop
mov
sbb
outsl
mov
movl
inc
not
push
test
mov
call
mov
xchg
stos
int
adc
stos
dec
rorb
sub
jle
xorb
clc
mov
pop
ss
mov
fdivrl
and
test
scas
mov
sub
mov
mov
push
mov
mov
iret
imul
outsl
test
push
cmpsl
mov
inc
bound
jne
mov
and
es
xchg
xchg
mov
xor
jmp
into
xlat
mov
cmpsb
xor
std
dec
dec
and
jp
inc
push
mov
adc
inc
repz
xor
shl
xchg
mov
loop
test
mov
mov
rol
sti
adc
mov
fidivs
scas
inc
pop
jns
xchg
mov
mov
lret
test
cltd
into
adc
push
mov
scas
mov
fmuls
jne
or
lods
pop
and
outsb
jecxz
mov
adc
jns
cmp
mov
pop
mov
ret
stos
xor
cmc
insl
pop
mov
push
sub
dec
mov
movsb
xchg
mov
push
cld
mov
addb
outsb
push
mov
and
fisubs
add
fwait
icebp
mov
mov
mov
pop
and
mov
xlat
add
lea
pop
mov
or
ja
sub
mov
mov
popa
adc
mov
adc
and
ss
lahf
jl
mov
pop
push
dec
subb
xchg
lods
add
out
out
or
jbe
pusha
ret
cmp
push
sbb
and
daa
fdivr
pop
xor
xlat
insl
dec
sub
aad
aam
mov
shl
repz
jo
clc
std
mov
mov
pusha
dec
pop
xorb
pop
mov
xchg
lahf
ja
mov
js
mov
cltd
xlat
ret
addr16
dec
pusha
dec
mov
sub
clc
lahf
jmp
rcrl
sub
cmpsl
loopne
pcmpgtw
cmp
jge
ret
push
lret
push
jg
insb
scas
mov
int3
sbb
test
js
jae
mov
mov
jl
adc
sub
dec
out
inc
mov
jmp
sahf
sbb
jnp
inc
stos
mov
add
xchg
mov
sub
mov
pop
mov
shl
push
lret
notl
subb
jnp
adc
add
mov
cmpsl
mov
cli
xor
jb
scas
lahf
mov
fwait
daa
cmp
and
jmp
out
mov
inc
loop
and
lods
aas
mov
repz
adc
dec
cltd
mov
sub
loop
mov
icebp
mov
add
test
loope
inc
mov
stos
mov
cmpsb
mov
mov
mov
mov
inc
inc
call
or
mov
mov
add
inc
repz
rcr
loop
cmp
movsl
mov
iret
in
popa
jnp
fnstsw
in
pop
mov
add
fwait
adc
inc
xchg
push
enter
scas
scas
call
sub
inc
sbb
enter
iret
test
cmp
dec
mov
and
mov
pop
dec
pop
orb
cmp
mov
adc
sbb
test
sub
sub
jnp
fwait
lods
mov
arpl
xlat
movl
mov
fstpt
xor
xlat
dec
add
or
xchg
xchg
xor
mov
cmp
mov
add
or
xor
adc
cwtl
outsb
mov
fs
int
sbb
inc
inc
sub
mov
adc
mov
scas
lret
scas
adc
test
add
and
stos
and
push
inc
iret
sbb
scas
bound
jnp
or
sub
xchg
add
mov
outsl
mov
lock
jne
mov
cmp
cld
cmpsl
movsb
test
out
loop
mov
cwtl
pop
and
in
pop
push
mov
pop
loope
jp
shlb
mov
repz
repz
movsl
inc
mov
jo
shl
inc
jg
mov
mov
add
mov
ficoml
std
hlt
push
insl
mov
ljmp
mov
add
stos
jmp
mov
mov
ja
lds
mov
adc
insb
pop
jge
cmpsl
xchg
dec
imul
mov
adc
jle
xor
loop
adc
shll
lahf
push
lea
lahf
push
mov
jl
cmpsl
test
testl
sti
mov
pop
sbb
jmp
jle
stos
cmpsb
pop
imul
cwtl
inc
pop
out
mov
or
es
jns
and
cmp
das
xchg
test
mov
dec
outsl
stc
mov
xor
adc
aas
jnp
cmpsl
or
mov
cmp
test
xlat
adc
mov
int3
mov
fnsave
and
and
out
sti
movsl
pop
mov
pop
inc
addr16
cld
popf
shlb
jns
mov
sbb
mov
shlb
or
mov
aaa
ja
sbb
push
cli
scas
movsl
add
arpl
std
fisttpll
and
mov
scas
jg
or
push
ds
mov
xchg
push
pushf
and
mov
jecxz
gs
mov
cmpsl
lock
out
mov
mov
cli
and
mov
adc
adc
mov
jne
mov
iret
and
shl
cwtl
sahf
jno
leave
in
adc
call
xchg
mov
es
cmp
cmpsl
ljmp
or
mov
fidivrl
test
mov
mov
mov
cltd
test
or
pop
jno
xlat
outsb
mov
jecxz
lds
rcrb
xor
mov
xchg
inc
pop
popf
in
lock
sbb
jae
mov
clc
ret
inc
mov
add
loope
cmpsl
and
leave
pop
jmp
insl
mov
enter
jecxz
add
pop
mov
and
or
xchg
pop
mov
xor
mov
jecxz
mov
push
or
mov
sbb
insl
push
or
pop
add
lahf
cmp
jecxz
jmp
xor
mov
jno
stos
mov
sbb
add
mov
cmp
pop
movsl
mov
cmp
mov
cltd
mov
mov
mov
dec
mov
mov
xchg
sub
imul
inc
std
lods
push
mov
lcall
mov
pop
xchg
stos
pop
cmpsl
xlat
cmp
call
lea
push
imul
and
es
bound
ss
cmpsl
stos
cmp
pusha
pop
push
movsb
sub
mov
and
fdivrs
mov
mov
mov
add
and
xchg
mov
pop
popa
loope
lahf
mov
sbb
outsb
mov
rdmsr
inc
inc
mov
push
jle
pop
or
pop
mov
dec
jge
sbb
mov
sbb
or
js
repnz
mov
mov
outsl
movsl
sbbl
mov
jbe
lahf
rcll
cmpsl
jg
dec
lret
mov
mov
fdivrp
loopne
cmp
sbb
xlat
mov
insl
fisttps
jbe
rcr
out
mov
aam
loope
dec
cmpsl
pop
push
fists
stc
push
mov
gs
in
stos
lea
or
and
xlat
push
sbb
test
xchg
stos
pop
mov
jg
aam
mov
shll
mov
pop
xor
stos
stos
jbe
mov
popf
or
je
push
arpl
negl
mov
ljmp
lret
pop
cmpsl
popf
mov
dec
fnstsw
ret
and
mov
mov
into
push
xlat
sbbl
outsb
xchg
lods
cmpsl
repz
lea
mov
push
pop
mov
stos
add
sub
adc
xlat
mov
mov
adc
lods
push
pop
sbb
in
mov
pop
pop
add
add
add
shlb
mov
mov
jmp
imul
inc
movsbl
pop
inc
lds
cmc
stos
mov
shr
push
mov
jno
xchg
and
sti
mov
mov
cmpsl
aad
pop
push
daa
mov
mov
mov
andl
cltd
rcrl
push
mov
stos
push
add
mov
mov
inc
jecxz
test
adc
cmp
scas
loop
mov
fsubs
lea
sti
or
je
push
and
mov
jp
mov
mov
bound
pop
mov
mov
shlb
stc
push
sarb
xor
cmpsl
mov
pop
lcall
int
jge
scas
jbe
pop
pop
mov
dec
mov
bound
adc
int
test
push
adc
xor
in
cmp
pop
jg
test
sub
mov
mov
fidivl
push
aaa
fisttpl
stos
fs
sub
mov
outsb
inc
xor
movsl
into
mov
pop
push
sbb
pop
aaa
cmpsl
fsubs
jg
imul
add
pushf
aaa
mov
test
mov
int3
dec
dec
mov
sbb
scas
inc
stos
jnp
mov
fwait
ret
or
cltd
aam
cs
mov
cmpsb
sbb
es
adc
ds
sti
in
mov
cld
jae
xchg
mov
imul
xor
or
stos
sbb
and
push
pop
mov
fs
push
in
mov
out
dec
mov
pushf
mov
adc
movzwl
ds
dec
jns
aad
shll
bound
popf
ret
test
fcomps
lock
test
xorb
and
cmc
jns
pop
lods
mov
mov
scas
fwait
cwtl
sbb
cltd
fwait
pushf
jb
scas
ret
xchg
jle
xlat
xor
imul
lahf
xor
xlat
cmp
jne
insb
add
roll
es
mov
sbb
icebp
punpcklwd
mov
lret
rorl
mov
lock
xchg
cwtl
andl
test
inc
outsl
lret
aad
negl
xchg
mov
pop
inc
add
sub
xchg
shl
cmp
xchg
mov
mov
xchg
mov
out
call
ljmp
fsubrp
push
cmpsl
cli
push
jnp
or
test
xchg
mov
js
mov
dec
mov
inc
shlb
mov
push
fdivl
adc
push
cwtl
dec
xchg
fldenv
sahf
mov
mov
inc
movsl
dec
ljmp
sbb
rcl
rclb
mov
ja
add
mov
je
es
and
neg
adc
push
lods
scas
pop
aas
xchg
negl
sbb
mov
pop
int3
cmp
adc
cmpsl
cmpsl
in
jb
or
adc
mov
loope
outsl
mov
xchg
push
sub
sbb
cltd
insl
mov
data16
mov
cmp
popl
hlt
cmpsl
pop
lret
mov
jnp
aad
scas
xchg
sbb
enter
cmp
inc
scas
mov
jecxz,pt
popa
das
cld
popf
sbb
pushf
jp
sub
sub
jl
adc
push
das
jp
into
xchg
mov
mov
dec
mov
ss
mov
mov
in
push
cmp
cmc
enter
jne
rol
les
jg
std
pop
xor
ss
jge
cmp
stc
call
movsl
sub
mov
fs
push
ss
cmp
xlat
mov
mov
outsl
and
add
mov
mov
push
mov
mov
pop
jmp
jg
in
mov
and
push
out
xchg
mov
nop
ret
push
mov
push
push
in
push
mov
movsb
push
shl
pop
push
push
ljmp
clc
ret
sbb
mov
negl
jb
sbb
mov
push
aas
iret
into
idivb
enter
pushf
ret
movsl
dec
pop
je
sbb
pop
add
or
jmp
mov
mov
mov
push
mov
fstpt
cld
lds
mov
mov
imul
xor
mov
int
and
jl
mov
mov
pop
out
mov
movsl
test
mov
sub
pop
out
mov
clc
xlat
mov
adc
xchg
pop
xor
movsl
mov
push
xor
and
lcall
dec
dec
mov
inc
setno
iret
clc
mov
stos
orb
and
mov
in
add
mov
adc
mov
sbb
repz
lahf
push
mov
dec
pop
mov
testb
add
and
shll
ljmp
das
movsl
cmp
fidivrl
stos
or
push
std
inc
push
mov
in
mov
je
loopne
mov
fdivr
nop
mov
pusha
mov
xor
or
roll
movsl
leave
dec
mov
mov
aad
in
sbb
jnp
xchg
push
hlt
ret
cmp
test
inc
cmp
scas
jecxz
jge
stos
push
xchg
push
xlat
or
mov
sub
sbb
icebp
jp
imul
scas
adc
jl
fcmovne
adc
mov
cmp
xchg
mov
arpl
jmp
and
insl
cwtl
pushf
xchg
cli
inc
movsb
movsl
testl
cmp
xor
mov
cmpsl
and
adc
mov
mov
stc
ss
sub
inc
mov
dec
fcom
mov
loope
out
xor
scas
adc
xor
outsl
mov
push
and
mull
es
mov
jg
mov
out
mov
out
sbb
xor
or
inc
xchg
movsb
lret
test
fnsave
mov
jns
cmp
cmpsb
mov
jnp
out
cmpsl
mov
cmp
mov
mov
out
jno
mov
mov
adc
xchg
push
mov
paddusb
loope
mov
mov
add
stos
xchg
mov
mov
xlat
mov
push
adc
or
leave
ss
mov
add
mov
dec
shr
andb
mov
and
out
xor
fsubs
imul
lods
mov
loope
jno
jbe
adc
adc
out
fnstenv
in
into
push
jbe
mov
js
fs
dec
push
ret
mov
lret
mov
mov
dec
jae
jp
sbb
or
and
mov
addr16
xorb
popa
daa
out
mov
lock
lret
push
scas
xchg
mov
mov
pop
add
mov
push
mov
dec
js
test
add
pop
inc
mov
inc
das
mov
icebp
adcb
sbb
cmpsl
xlat
pop
iret
push
mov
out
outsb
imul
mov
rcl
std
dec
test
cmp
xor
cs
pushw
sbb
and
frstor
movsb
xlat
pop
packsswb
mov
insb
mov
mov
and
push
xchg
jl
mov
mov
mov
mov
adc
sub
or
and
mov
mov
mov
jmp
pop
mov
mov
fs
inc
cli
int3
stc
dec
lods
dec
sbb
sbb
aaa
les
mov
jno
mov
mov
movsl
loope
andl
mov
push
jg
push
repnz
mov
popa
xor
test
xchg
xchg
insb
mov
fisubrl
lea
mov
fucomi
xor
cmp
sub
pop
pop
cmpsb
stos
hlt
xor
outsb
fwait
lods
pop
cwtl
cmpsl
clc
or
push
mov
sub
dec
ss
fdivrs
cmc
xlat
inc
pop
out
lret
rorb
int3
cltd
fcoms
test
push
iret
leave
dec
aaa
and
ret
movsb
test
inc
mov
jbe
or
mov
pop
std
mov
mov
pop
in
push
loop
imul
mov
mov
cs
xchg
inc
mov
xor
clc
push
cmp
scas
mov
add
jns
mov
in
inc
mov
cltd
inc
rol
daa
mov
xchg
mov
mov
hlt
mov
aam
test
add
mov
call
add
scas
scas
mov
and
sahf
fwait
or
push
mov
daa
fsts
shl
cwtl
mov
movsb
pshufw
popf
and
mov
mov
pop
leave
shrl
mov
jecxz
ret
in
in
cmp
mov
cmpsb
adc
add
mov
push
aad
ds
lea
sbb
add
jne
sbb
shlb
mov
fs
lods
and
mov
fstl
push
loopne
scas
stc
pop
push
mov
jecxz
mov
sbb
cmpsl
mov
dec
jo
jge
mov
popf
dec
pop
inc
mov
outsb
or
jl
jno
mov
shlb
lret
das
or
stos
mov
movsb
sub
test
cltd
xchg
mov
leave
int3
jnp
decb
mov
mov
pop
lds
mov
bound
shll
ja
adc
into
shl
mov
cwtl
xor
sub
sub
insl
xlat
adcl
imul
xlat
sbb
insb
mov
cmp
mov
nop
dec
mov
jge
sbb
lahf
fcom
add
mov
sbb
cltd
mov
dec
pop
mov
cli
sbb
popl
and
test
cmp
scas
and
mov
loopne
xor
stc
jo
adc
rorl
adc
pop
mov
jl
xlat
pop
loope
mov
xchg
shll
mov
push
mov
pop
mov
pop
xchg
jae
mov
dec
mov
cmp
jae
mov
arpl
cmpsb
push
cmpsl
scas
cli
cmpsl
xor
rolb
or
jecxz
dec
inc
pop
mov
cmpsl
aad
stos
into
sbb
fwait
xlat
pop
les
pop
in
call
mov
mov
lock
mov
leave
mov
int
sub
cltd
pushf
and
fstp
in
pop
mov
ja
dec
icebp
pushf
xchg
pop
subb
sbb
sar
or
cmpsl
movsb
push
sahf
addr16
scas
mov
dec
out
arpl
xchg
daa
sbb
les
mov
push
int3
je
mov
push
pusha
clc
mov
roll
sub
icebp
mov
lods
inc
mov
int
aaa
adc
bound
pusha
and
cwtl
mov
loop
lods
push
mov
and
xchg
mov
mov
mov
lret
or
nop
loope
test
mov
loopne
push
mov
test
xor
je
mov
sub
add
and
pop
leave
das
xlat
push
push
stos
mov
or
mov
sbb
leave
xlat
jp
mov
imul
mov
push
orb
xor
jo
ja
jl
out
mov
xor
or
mov
and
mov
stos
test
scas
mov
loop
mov
sub
movsl
mov
loopne
inc
sub
shrl
stos
dec
dec
fimuls
rcrl
and
loopne
pusha
xlat
or
shrl
ss
cmp
lcall
in
adc
and
inc
xorl
jmp
xchg
fisubs
repz
mov
in
xor
test
adc
or
int
cmp
mov
cmp
add
cmp
jns
jnp
movsl
mov
and
mov
dec
lock
or
mov
jg
dec
iret
xchg
push
and
les
cwtl
das
push
adc
mov
mov
daa
and
mov
sbb
clc
test
add
jmp
mov
xor
pop
jp
mov
mov
sarb
cmpsl
loop
sbb
aas
adc
cmp
xchg
mov
adc
mov
mov
data16
and
in
mov
sub
lret
pop
jno
imul
xchg
and
mov
jb
outsb
movsl
es
mov
pop
sbb
xchg
movsl
sub
pushf
fucom
mov
shll
mov
mov
cmpsl
mov
jl
push
xchg
inc
mov
lea
cli
mov
test
mov
test
mov
idivl
aam
push
mov
mov
imul
pop
xor
pop
adc
mov
clc
fstpl
mov
aas
out
imul
lahf
xchg
jne
clc
adc
scas
das
subb
jo
cmp
mov
fcompl
and
decb
jnp
xor
xchg
xchg
mov
outsb
lcall
mov
aas
subl
outsl
loope
scas
das
loop
bound
mov
xor
pop
imulb
push
repz
aas
stos
xlat
mov
push
xor
loope
cmpsb
mov
sub
mov
mov
lret
pusha
xorl
sbb
arpl
pop
pop
pop
mov
scas
fisubs
cwtl
mov
call
addb
ficompl
adc
call
gs
xor
adc
ss
movsl
test
fmuls
mov
mov
cmpsl
or
into
scas
sbb
push
lods
pop
outsl
dec
test
jecxz
adc
lret
mov
jns
mov
enter
js
jge,pn
loop,pt
dec
shrl
sbb
js
cmpsb
test
mov
pop
sbb
mov
movsl
jge
out
mov
xrelease
scas
cwtl
ds
cltd
dec
dec
xchg
inc
mov
mov
leave
push
lods
shll
rcrb
lea
jg
js
mov
in
jmp
mov
push
mov
out
sub
or
in
mov
negb
xor
in
pop
sbb
fucomi
and
jge
xchg
and
mov
mov
cmp
jmp
call
popa
mov
fdiv
shll
std
mov
cwtl
fdiv
xor
loop
mov
fnsave
jg
stos
inc
add
stos
xchg
mov
push
bound
sbb
mov
rcrb
aad
mov
and
call
mov
sarb
or
sbb
rorb
cmp
mov
das
cwtl
pop
cmpsb
mov
movsl
add
sahf
mov
shrb
xlat
mov
bnd
xor
scas
mov
sbb
mov
pop
xchg
shll
lock
imul
in
jge
fmuls
cmpsl
cs
and
sbb
sti
in
mov
xor
mov
mov
add
neg
jns
jle
test
fcmovnu
pop
inc
or
mov
jg
fstpl
xchg
movsl
out
pop
ljmp
loop
cmc
jmp
dec
adc
test
pop
fisubrl
xchg
mov
xchg
lret
sub
lcall
inc
mov
dec
mov
or
push
cmp
sbb
jne
and
push
jle
out
mov
les
nop
test
mov
fsub
xchg
xchg
repz
mov
adc
cli
inc
rcll
mov
add
xor
mov
mov
push
pop
or
dec
mov
movsl
fisubl
shll
lcall
lds
xchg
fdiv
xlat
divb
inc
inc
in
aaa
shl
mov
rol
clc
push
lret
test
push
into
stos
and
mov
rcrl
xor
push
pop
cmpsb
fldt
fdiv
shll
scas
jae
mov
pusha
xchg
add
jl
mov
mov
in
clc
pop
mov
adc
mov
push
cmp
daa
mov
mov
mov
mov
mov
test
adc
mov
sti
mov
mov
adcb
mov
std
mov
insb
and
mov
test
dec
mov
in
push
scas
adc
pop
jecxz
dec
shl
test
sahf
mov
orb
pushf
repz
and
xlat
mov
pop
es
xor
xor
push
sbb
flds
push
mov
movb
andb
test
ss
mov
mov
fmull
jecxz
fwait
add
xchg
fisttpll
in
andl
mov
inc
mov
xor
scas
movsl
jg
or
fwait
lcall
pop
inc
pop
stc
mov
popf
cli
inc
shr
rol
and
pusha
out
loopne
fwait
les
push
add
adc
xor
pop
cld
int3
add
jne
xlat
adc
adc
outsb
and
movsl
roll
mov
pop
adcb
mov
out
mov
adc
mov
into
js
xchg
addb
js
test
mov
int3
add
icebp
push
mov
call
mov
clc
inc
jmp
rcrb
test
cmpl
mov
je
mov
xchg
movsl
mov
loopne
jle
sub
cmp
mov
insl
sub
mov
add
dec
jmp
sbb
rcrb
sbb
dec
adc
xchg
loop
sub
add
push
mov
jno
loopne
icebp
stos
fidivs
hlt
mov
fcomps
movsl
stos
fiadds
cmpb
xchg
mov
xchg
jne
ja
ja
pop
inc
scas
sti
icebp
pop
cmpsl
fwait
add
mov
cmpsb
out
mov
mov
cmc
mov
aad
pop
jno
dec
lds
insl
mov
scas
arpl
pop
bound
stos
xchg
in
fnstenv
daa
loopne
mov
outsl
mov
js
inc
mov
or
call
mov
leave
scas
insb
into
xorb
sub
mov
xor
adc
add
mov
jmp
mov
out
xorl
mov
arpl
mov
xchg
mov
cld
cwtl
add
mov
sahf
lea
scas
mov
das
push
mov
jle
out
out
mov
mov
scas
inc
test
push
sub
mov
push
mov
mov
into
shrl
daa
sbb
mov
adc
mov
sbb
mov
xchg
addb
fsubrs
push
sbb
mov
adc
sub
mov
jmp
mov
jns
ret
mov
int3
fidivrs
adc
mov
mov
ret
mov
jg
pop
mov
arpl
xchg
mov
leave
ret
iret
jl
xor
mov
inc
sbb
loopne
leave
jp
lods
push
fsubs
data16
and
mov
adc
jg
and
mov
push
nop
fistpll
ret
cmpsb
mov
mov
jnp
shll
mov
mov
mov
inc
and
mov
mov
loope
mov
xlat
sub
arpl
into
mov
push
dec
shlb
mov
or
jae
pop
jo
and
xchg
mov
adc
mov
mov
repz
orl
fldt
xlat
mov
lret
xchg
int3
inc
xor
pusha
adc
enter
mov
cmpsl
fistl
and
js
loope
mov
xlat
jle
aam
or
jmp
cmp
xor
lds
inc
or
push
mov
jg
sbb
xchg
out
stos
pusha
mov
xor
cmc
imul
xlat
cmp
jae
lock
aam
stc
gs
jecxz
mov
pop
push
sbb
mov
mov
out
jp
cmpsl
fidivl
mov
fbld
js
jo
jg
lods
mov
pop
mov
nop
add
cwtl
and
mov
dec
and
icebp
mov
nop
dec
cmpxchg
cmp
and
int3
testb
xor
jmp
ja
xor
and
addr16
in
dec
push
sub
mov
rclb
mov
out
mov
stos
nop
lods
push
fwait
mov
xorl
movsl
fldpi
cmp
dec
mov
fildl
mov
or
imul
into
inc
or
lret
mov
pop
sub
cltd
movsb
xor
in
push
ja
fwait
ljmp
aas
xchg
cltd
idivb
cmp
xor
sbb
out
nop
mov
test
mov
hlt
enter
and
movsb
dec
or
sbb
cmp
push
nop
cs
daa
adc
mov
adc
jmp
test
cmp
cpuid
xor
jae
jecxz
mov
xor
dec
push
out
jns
stos
sarb
movsl
or
mov
mov
push
into
mov
jno
lea
cmp
mov
cmpsl
test
popl
mov
mov
iret
lret
add
test
mov
cmpsl
mov
xchg
mov
arpl
loopne
push
mov
jae
lret
mov
testl
mov
loope
stc
fwait
sbb
mull
mov
mov
je
jg
mov
shlb
xchg
add
scas
push
dec
mov
arpl
ds
xchg
cmp
mov
xchg
push
sbb
pop
es
ja
stos
sbb
scas
xlat
repnz
cwtl
or
sbb
mov
andl
mov
aad
jg
mov
call
bound
jecxz
in
xlat
mov
or
jge
mov
movsl
mov
leave
notl
mov
sub
xor
mov
incb
sbb
scas
push
mov
mov
push
mov
imulb
aad
ret
push
jnp
aas
loop
jge
cltd
mov
cmp
fmuls
xchg
mov
cmpsl
cmc
lods
sbb
cwtl
pop
xchg
push
cmp
stos
push
fucomip
jle
loop
ret
mov
rolb
or
daa
mov
inc
xor
mov
in
je
mull
push
andb
and
cmpsl
movsl
adc
cmc
inc
arpl
aad
fldl
xchg
aam
addr16
test
int3
or
scas
fisubrl
jne
mov
mov
jmp
ss
and
leave
jae
and
enter
sbb
jb
add
lock
cmp
in
sub
movsb
arpl
jl
sbb
and
ret
jae
mov
xchg
mov
xchg
sub
sub
inc
fnstenv
rclb
push
mov
iret
into
sahf
popa
out
and
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
mov
mov
lahf
pushf
adc
mov
inc
add
xlat
mov
addl
mov
ss
je
pusha
es
jle
jp
or
lods
jge
mov
mov
jnp
mov
dec
mov
mull
and
inc
fs
gs
adc
mov
std
ljmp
and
inc
out
mov
push
int3
mov
fcomps
pop
cld
mov
cmc
push
movsl
cmp
xor
add
bnd
xor
out
fs
push
pop
shr
testl
adc
movsl
xlat
je
movsb
and
clc
inc
mov
stos
and
or
fsubl
fldt
mov
mov
push
ja
mov
jg
lea
mov
shr
xor
xor
les
lcall
rcrb
test
lods
pusha
mov
popa
call
nop
je
lahf
jno
sub
inc
out
mov
iret
int
lret
dec
cmp
mov
in
cmpsl
daa
mov
sub
pop
mov
push
xchg
scas
mov
lods
lods
add
lds
adc
retw
and
or
jp
cmpsl
xlat
mov
insl
in
sbb
pop
mov
dec
out
inc
push
jns
inc
mov
push
or
in
xchg
mov
les
xor
jnp
mov
imul
lods
arpl
sbb
xlat
push
cmp
xor
mov
cmp
lahf
clc
movsl
mov
xchg
into
sbb
repz
std
jo
jb
jecxz
cmp
test
inc
test
cwtl
mov
mov
pop
fwait
int3
dec
sbb
cmp
mov
mov
sbb
aam
aad
hlt
mov
popl
or
adc
jns
and
mov
push
mov
add
jg
jne
lahf
out
insl
insb
push
xlat
sbb
and
js
mov
jl
sub
aam
fdivp
jge
push
loope
dec
mov
and
mov
cwtl
les
test
and
mov
int
adc
mov
add
int3
ret
sbb
ljmp
or
inc
iret
incb
mov
out
pop
pop
mov
mov
dec
ds
lahf
mov
shrl
mov
push
jae
clc
inc
out
push
mov
pop
fldcw
mov
xchg
loope
repz
fdivs
decl
in
popa
mov
mov
cmp
adc
out
pop
xchg
jl
adc
add
sbb
rolb
cmp
scas
mov
out
loop
loope
mov
sbb
xchg
pusha
mov
ret
in
les
mov
lret
test
fistpll
or
cmp
mov
loop
icebp
dec
leave
imul
pop
mov
adc
rcrb
push
das
add
enter
cmpsl
xlat
mov
loopne
test
lcall
stos
sub
add
xorb
and
adc
cwtl
cmpsl
sar
sub
pop
inc
add
mov
mov
pushf
push
jecxz
insl
cmp
lods
xchg
and
push
divl
mov
xchg
dec
addr16
jne
add
xchg
or
pop
sahf
dec
xor
lods
add
scas
movsl
pop
pop
jne
mov
xlat
add
insl
and
push
movsl
xchg
mov
test
bound
pop
fisubrl
cwtl
out
jg
int
mov
jns
inc
mov
dec
sub
mov
add
leave
loope
mov
stc
pushf
mov
ljmp
mov
jg
scas
and
xor
mov
mov
jp
or
sbbb
test
cmp
popa
sahf
shrb
mov
pop
jne
jnp
lds
mov
mov
test
pop
xchg
push
adc
call
andb
xchg
inc
lods
pusha
xchg
lea
mov
mov
inc
mov
aaa
push
imul
daa
dec
rorl
mov
pop
mov
ret
mov
dec
mov
pusha
mov
and
rolb
into
testl
jecxz
shlb
sahf
sbb
cmp
sbb
ljmp
aaa
in
mov
int
sarb
test
mov
inc
movsl
mov
pop
dec
dec
test
mov
pop
lea
mov
adc
shlb
clc
cmp
test
daa
jge
and
add
sbb
jns
jno
mov
das
rcl
or
pop
mov
inc
mov
xchg
mov
xchg
stc
ret
mov
xchg
rcll
movsl
lret
jns
and
inc
test
cwtl
mov
fsubs
mov
stos
fcoml
pusha
test
add
cmc
sarb
and
mov
lds
sbbl
mov
push
cltd
popf
mov
leave
xchg
dec
jno
and
sti
push
mov
push
lret
and
mov
xor
sbb
movsl
xlat
and
lret
mov
aas
call
dec
pop
sbb
sbb
sbb
xorb
mov
xchg
shlb
clc
loop
sub
xchg
cmpsl
sub
sbb
fimuls
hlt
imul
jae
out
and
insl
ss
out
test
shl
adc
push
xor
iret
mov
mov
loope
jbe
xlat
clc
into
je
repnz
pop
scas
push
mov
jo
xlat
leave
push
scas
mov
mov
mov
mov
inc
in
aad
je
clc
int3
mov
shrb
arpl
xor
gs
mov
mov
xchg
pop
stos
jmp
leave
inc
adcb
add
mov
adc
pusha
fsubl
xchg
es
icebp
rcll
hlt
outsb
mov
adc
nop
dec
mov
push
xlat
mov
decl
cmp
popa
mov
inc
jecxz
xchg
pop
leave
sarb
push
or
sbb
push
nop
sti
ret
add
test
dec
in
sub
adc
mov
push
fistl
decb
mov
push
icebp
outsb
xchg
aaa
cmpsl
xor
pop
or
xchg
je
add
arpl
test
insb
loopw
adc
shll
mov
ds
icebp
test
nop
fcom
es
xchg
dec
mov
cmp
or
stc
addb
jb
mov
ficompl
scas
and
shr
sub
xor
ret
mov
push
loope
movsl
cs
or
stos
or
jecxz
mov
add
push
mov
rcl
scas
popf
lds
cmp
pop
xchg
out
pop
mov
xor
sbb
mov
lds
inc
inc
je
inc
stc
cmp
mov
loop
pushf
dec
leave
mov
inc
xchg
lods
pop
sbb
dec
mov
mov
fsts
int3
mov
mov
popl
mov
xor
int
xor
test
mov
loope
sbbb
lods
sbb
dec
stos
xorl
mov
dec
movsl
mov
and
ljmp
loop
cmp
lds
push
outsl
popf
out
daa
aas
mov
fsubl
jb
insl
cmp
jnp
sar
mov
stos
xchg
mov
out
mov
outsl
adc
or
int3
mov
mov
sub
xor
dec
mov
dec
jmp
cwtl
outsl
pop
pop
xchg
jbe
add
movsl
push
add
and
sbb
enter
push
orl
mov
dec
in
fldenv
xchg
pop
and
dec
mov
jnp
sbb
jp
mov
mov
js
lahf
inc
fsubrs
mov
inc
mov
mov
and
mov
mov
mov
jae
push
pusha
pop
and
or
idivl
dec
jnp
inc
test
or
mov
mov
ficomps
push
xchg
mov
loop
rorl
mov
dec
cmp
in
mov
mov
js
bound
cmc
cmp
add
test
mov
pop
mov
pop
sub
mov
cmp
insl
mov
fdivr
mov
and
cs
mov
btc
mov
add
jmp
mov
ret
aaa
nop
mov
cld
enter
addr16
cltd
xor
test
mov
lock
aas
jnp
xchg
insb
mov
dec
jnp
lcall
xchg
loop
in
cmpsl
cmp
mov
sub
mov
les
imul
aad
mov
inc
xchg
fxch
xchg
push
cmpsl
lret
divl
loopne
or
inc
rcr
push
jmp
dec
fisttpl
jae
mov
push
sbb
and
sti
test
cld
pop
cwtl
inc
arpl
xor
adc
add
roll
int3
push
aad
jg
mov
shrb
cwtl
mov
mov
mov
pushf
rclb
nop
loope
fldenv
mov
pop
adc
pop
mov
dec
adc
loopne
repz
sbb
loope
cmp
mov
ljmp
mov
or
loope
mov
lock
sarl
sbb
ja
jp
xor
mov
push
dec
incl
mov
loop
mov
adc
stos
loope
enter
mov
movsl
js
mov
arpl
mov
std
in
mov
pop
cmpsb
rorb
mov
out
jge
jecxz
xchg
add
push
mulb
das
mov
pop
or
arpl
pop
mov
test
jmp
sub
mov
stc
sub
clc
adc
jb
movsl
testl
inc
lahf
mov
inc
nop
test
mov
pop
add
fs
fidivl
mov
mov
or
pop
ret
mov
mov
cmc
mov
cmc
mov
mov
cmpsl
xor
mov
push
test
push
dec
inc
cltd
mov
in
out
mov
lods
and
mov
in
cltd
outsl
xchg
cli
fisubrs
mov
mov
aas
and
inc
jl
test
sti
mov
ret
adc
aaa
mov
mov
lds
dec
fwait
or
mov
sbb
in
cmp
bound
xchg
and
cmp
cmp
ret
mov
jmp
mov
ljmp
popa
pop
shl
out
cmc
mov
lods
cld
xor
xlat
mov
lret
sub
jo
je
in
mov
push
push
pop
arpl
jecxz
nop
ss
cmp
add
add
ret
mov
xchg
imul
mov
push
jmp
mov
mov
mov
xor
loopne
lds
cmp
push
cmp
insl
cltd
xor
cmc
lock
inc
pusha
adc
popa
xchg
mov
mov
std
sbb
pushf
mov
ds
cwtl
mov
test
mov
ficoms
insl
xchg
add
test
and
scas
mov
cmp
xor
xchg
mov
jmp
fcmovb
sub
sbb
push
out
test
xchg
icebp
xlat
shl
jge
lret
mov
xor
std
mov
mov
adc
movsb
test
mov
adc
mov
loop
pop
loopne
mov
xorb
cmpsl
or
sbb
aam
jge
test
rolb
xchg
sub
jo
cltd
mov
div
adc
jecxz
inc
cmpsl
xchg
lods
mov
dec
loope
lds
cmp
dec
movsb
adc
bound
cs
scas
stos
jo
pop
pop
aas
pop
push
cmpsl
pushf
in
repz
lods
adc
test
mov
xor
sbb
cmpsb
sar
cmp
in
or
dec
jnp
popa
jg
das
lret
outsl
shll
jno
cmp
rcll
jnp
dec
mov
pop
movsl
mov
mov
push
arpl
fsubs
push
stos
xor
sbb
ja
dec
inc
cmp
add
xor
movsl
scas
mov
mov
sub
jnp
ret
mov
mov
sahf
xchg
clc
fistpl
or
mov
sub
mov
xor
jmp
add
fst
adc
jb
xlat
movsb
inc
add
sahf
mov
imul
test
cmp
mov
je
addr16
jecxz
xlat
pop
xlat
add
add
movsl
imul
xor
negb
mov
push
out
mov
shll
push
cmpsl
dec
jns
stos
icebp
fldt
rcrb
lods
xor
sbbb
jb
cmp
mov
sbb
sqrtps
das
cwtl
aam
insb
lret
xor
loope
mov
into
cmpsl
or
cmp
add
mov
push
jnp
xor
ror
sbb
mov
mov
dec
lds
push
hlt
xor
jmp
sbb
stos
jg
call
subl
xchg
xchg
cmpsb
mov
or
into
inc
add
inc
xlat
das
fidivl
scas
daa
sub
mov
mov
mov
mov
test
loop
aam
sub
push
sbb
mov
std
sbb
lcall
jns
mov
test
mov
jo
mov
testl
sub
pop
in
pop
xlat
cltd
push
fldl
movb
mov
sti
adc
nop
jge
mov
sub
fsubl
xlat
rolb
mov
movsl
adc
pop
cmpsl
rcr
sbb
les
lret
fldenv
push
mov
clc
dec
dec
mov
xor
sub
jge
mov
and
stc
mov
cmc
sbbl
mov
or
outsl
fcomps
cmp
cmp
pop
mov
sbb
xchg
data16
inc
clc
dec
in
cwtl
dec
int
cwtl
call
cmp
mov
fnstsw
push
mov
inc
push
pop
mov
leave
es
pop
cmp
ja
xor
js
dec
pop
test
aas
cmpsl
stos
mov
ss
test
inc
xchg
shrl
popa
sub
sub
mov
nop
jp
mov
inc
ret
imulb
repnz
out
mov
into
fists
jecxz
rcl
jns
cwtl
fs
push
repz
loope
add
int3
and
or
lock
mov
cmc
out
fldcw
push
mov
repnz
sbb
push
insb
mov
adc
cmp
aaa
hlt
loop
loope
mov
inc
mov
pop
stos
pusha
mov
dec
mov
jno
addl
std
mov
or
jge
out
arpl
in
sbb
insb
ss
mov
dec
jb
repz
rorl
xchg
mov
scas
outsb
jmp
or
cltd
mov
xchg
adc
adc
mov
lea
addr16
pop
push
push
xchg
mov
mov
push
pop
ja
mov
add
cltd
mov
repnz
mov
mov
cmc
adc
notb
mov
int3
movsl
dec
lods
scas
mov
and
stos
mov
mov
and
adc
jno
jns
or
push
fdivrp
cmpsl
mov
pushf
iret
mov
inc
inc
mov
mov
mov
pop
cwtl
les
xor
add
jne
inc
add
mov
aad
pop
mov
xlat
imul
ficoms
fsub
icebp
mov
cmpsl
pop
repnz
xor
out
outsb
and
mov
outsl
shll
fcomps
add
aas
xor
mov
xlat
cmpl
sub
mov
mov
lahf
add
pop
mull
and
dec
mov
jle
xor
xchg
arpl
insb
push
sti
and
or
dec
lea
xlat
adc
movsl
xchg
sbb
cltd
iret
push
das
shll
je
mov
fisubrs
xchg
movsl
jnp
icebp
sub
xor
xor
mov
xlat
mov
jle
test
in
push
xchg
int
std
fnstenv
xor
pusha
xlat
andl
int3
sbb
inc
aam
pusha
pop
cltd
lret
sub
or
fadds
cmc
hlt
cmpsl
test
and
les
pop
in
scas
scas
std
jle
jge
xchg
lds
sub
jae
mov
mov
jle
sbbb
lret
data16
mov
test
cmp
mov
test
xchg
add
mov
adc
xchg
movsl
mov
xchg
mov
push
mov
and
imul
ljmp
lahf
enter
fnstenv
cwtl
mov
push
cmpl
aam
movsb
adc
mov
pop
pushf
in
stos
dec
sbb
or
in
mov
mov
fmull
out
ficoml
mov
nop
pop
and
fcomps
sbb
mov
push
mov
dec
out
adc
mov
dec
dec
outsl
push
in
out
mov
mov
shr
idiv
movb
cmp
repz
stos
push
cld
out
mov
daa
pop
vcmpsd
mov
push
sub
xor
js
sub
mov
iret
pop
cltd
push
inc
test
mov
rorl
mov
mov
sub
sbb
inc
enter
pop
mov
scas
cltd
mov
xlat
adcl
mov
dec
cmpsl
mov
shr
lods
mov
test
push
xorw
lock
mov
mov
xor
adc
or
mov
pop
sahf
icebp
mov
call
and
add
adc
add
and
mov
and
inc
mov
xchg
dec
mov
cmc
sub
mov
aam
and
sbb
cmp
fstpt
lret
inc
mov
hlt
es
fsubl
xchg
scas
add
je
and
mov
jmp
xchg
mov
sbb
jg
or
lods
sub
pop
cmpsl
mov
mov
aaa
add
push
aam
fldcw
mov
stc
fdivrl
mov
gs
cmp
js
mov
mov
lahf
bound
add
sub
sbb
dec
sub
mov
outsl
adc
sbb
push
and
mov
push
lret
into
int
orb
ficompl
fmulp
repnz
mov
pop
lahf
pop
pop
insl
mov
scas
mov
fnstsw
movsl
addl
negl
adc
ja
add
jns
jg
add
mov
dec
dec
push
mov
adc
fsubrs
pop
mov
mov
mov
xchg
cmpsb
mov
adc
mov
pop
pusha
lcall
xor
push
in
cs
ja
jb
cmpsl
inc
xlat
sub
mov
movsl
nop
dec
mov
cltd
cmpsl
scas
enter
pusha
mull
mov
pop
mov
push
jg
inc
jle
pop
pop
cmc
inc
add
rcl
mov
movb
cmpsl
dec
rcl
arpl
xchg
mov
adc
pop
xlat
lds
xchg
xor
adc
sub
xor
sub
mov
lret
mov
mov
mov
divl
xlat
lret
call
hlt
lods
out
movsl
jecxz
mov
repz
mov
jge
lods
popa
mull
adc
nop
mov
mov
enter
mov
lret
mov
out
into
aad
cmpsl
stc
mov
jno
std
xor
pusha
add
or
push
mov
xchg
stc
arpl
movsb
ja
rcrl
neg
mov
dec
cmp
push
cs
xlat
mov
add
daa
mov
cmp
mov
mov
lahf
sub
jp
ds
jnp
mov
clc
cmp
out
sub
sahf
int3
cmc
cmpsb
mov
sbb
xlat
xchg
sub
test
push
fdivs
mov
mov
dec
jno
arpl
test
sar
xlat
dec
pop
mov
rolb
mov
push
stc
push
cmpsl
xorl
sbb
sbb
xor
insb
mov
pop
repz
xorl
mov
dec
mov
es
sti
scas
mov
aad
out
sub
pop
sbb
mov
mov
mov
fldcw
cmp
test
outsl
cs
mov
push
mov
mov
mov
mov
xchg
jp
fsubrs
inc
push
mov
mov
sbb
sbb
mov
sbb
mov
movsl
fcmovnbe
ss
mov
testl
scas
popf
fstps
mov
mov
push
fnstsw
and
stos
lcall
and
sbb
jns
sbb
mov
aaa
push
fisubs
lock
push
les
fwait
enter
jp
into
and
xchg
xchg
push
mov
jl
fsubrs
mov
lods
dec
xchg
push
dec
mov
stos
or
mov
mov
data16
ret
in
leave
insb
test
pushl
mov
rcr
loope
icebp
dec
das
mov
inc
mov
add
adc
into
dec
out
mov
mov
lret
adc
cmp
call
mov
jnp
insb
bound
faddl
mov
xchg
mov
and
out
push
dec
fldenv
out
and
fisubl
mov
push
jmp
and
addb
jo
fnsave
cmpsl
or
bound
xchg
mov
mov
push
dec
stc
pop
mov
adc
pop
rcrl
xchg
stc
int
mov
mov
dec
sbb
addr16
sarl
mov
sbb
mov
lret
jmp
sbb
mov
cmp
sub
orl
mov
xchg
popf
mov
mov
or
mov
push
fucomi
pop
into
enter
sbb
nop
scas
lcall
gs
mov
sub
cmpsb
mov
inc
mov
push
in
push
jecxz
mov
push
push
cmpsl
lods
aad
fdivrp
mov
fmul
imul
xor
xor
xlat
add
jno
push
in
pop
jg
and
mov
sbb
push
xor
ja
and
cmp
mov
mov
sarl
test
push
dec
or
mov
pop
and
cmpsl
notl
aad
mov
fildl
imul
imul
cwtl
ja
pusha
lods
inc
mov
outsl
sahf
lock
mov
nop
mov
aas
mov
jo
cmpsl
jl
mov
notb
mov
ret
inc
pushf
aaa
cld
ss
xchg
into
int3
jnp
int
and
mov
repnz
pop
adc
les
adc
cmpsl
sarb
int
movsl
ss
cmp
in
loop
xchg
scas
loope
jb
mov
pop
test
mov
inc
clc
or
mov
movsl
cld
sbb
mov
das
mov
sbb
mov
fisubrs
adc
cld
xchg
stc
rorb
inc
test
jmp
push
cmpsl
clc
mov
sbbl
push
std
icebp
test
mov
mov
cmp
sbb
outsb
and
mov
inc
mov
sub
xchg
aam
sbb
pop
jmp
out
fistps
pop
decb
jge
sbb
and
cmpsb
pushf
mov
mov
testb
and
leave
mov
jbe
mov
mov
mov
mov
mov
or
mov
ds
cmpl
shll
js
int
mov
andb
mov
lds
ss
int3
mov
into
stc
push
mov
xchg
cmp
xlat
mov
shlb
andl
pop
inc
push
cmp
lahf
aaa
pop
or
mov
sbb
mov
mov
imul
mov
mov
test
leave
stos
popf
adc
mov
faddl
mov
mov
mov
fcompl
sbb
mov
in
pop
mov
ljmp
mov
inc
or
test
mov
pop
sbb
testl
fistps
mov
fs
dec
mov
mov
stos
mov
xchg
cltd
ljmp
rcr
mov
movsl
inc
cmp
out
vmwrite
inc
insb
mov
enter
mov
fmull
xorl
mov
mov
jb
mov
iret
scas
rcr
and
inc
mov
mov
sahf
push
scas
clc
dec
dec
aam
mov
testl
loopne
icebp
jmp
clc
jle
rclb
mov
dec
lahf
movsb
ret
insb
lock
ljmp
iret
mov
mov
xlat
push
mov
loope
dec
mov
insb
data16
push
lret
imul
add
aaa
and
mov
jns
out
ljmp
pop
xchg
les
scas
lret
mov
adc
mov
sbb
mov
lock
bound
mov
pop
mov
mov
mov
popf
mov
pop
cmp
nop
adc
mov
das
push
pop
inc
or
lods
test
mov
loop
jbe
movsb
mov
dec
movsl
add
xchg
jno
shll
daa
cmp
mov
push
divb
fwait
adc
mov
mov
sbb
push
cmp
ret
imul
arpl
pop
aas
lea
adc
dec
leave
idivb
push
mov
mov
std
movsl
sbb
imul
mov
sbb
mov
xchg
mov
mov
push
hlt
scas
pop
rsm
out
jmp
dec
xchg
bound
cwtl
xchg
fcomps
mov
xlat
test
mov
adc
xchg
mov
hlt
filds
xchg
stos
gs
push
sbb
mull
push
outsl
movzwl
push
mov
mov
sbb
inc
jecxz
jbe
loop
push
popa
arpl
int
mov
movsl
cwtl
cltd
sahf
jns
shll
notb
popf
das
mov
sub
xchg
push
mov
dec
jns
xlat
aas
int3
dec
aaa
xor
mov
outsl
in
jge
stc
mov
mov
outsb
je
and
mov
iret
mov
cltd
sub
add
mov
mov
repnz
pop
cmpsl
push
or
dec
sub
and
fwait
xchg
lock
cmpsl
or
daa
jmp
push
mov
fs
lahf
fadd
sahf
mov
aaa
push
or
jbe
mov
incl
rolb
arpl
js
fisubrl
mov
mov
jmp
shll
movsl
mov
das
cmpsb
dec
scas
xchg
xchg
cmc
ret
cmp
cwtl
iret
test
cmpsl
jmp
push
adc
lea
ret
sarl
pop
mov
jle
dec
nop
mov
adc
push
movsl
pusha
pop
mov
mov
faddl
cld
mov
and
mov
pop
outsl
and
mov
fidivs
or
cmpsl
push
fcompl
imul
pop
lock
xchg
stos
ret
sub
fwait
hlt
xchg
push
mov
push
stos
cmpsl
lods
stos
mov
pop
insl
scas
jbe
sub
mov
jmp
and
out
push
sbb
mov
and
into
push
pop
jmp
repz
sub
pop
push
jle
xor
mov
lods
leave
jl
jno
cmp
in
dec
xlat
dec
dec
push
cmp
adc
dec
mov
and
and
leave
pusha
mov
inc
lds
scas
insb
adc
xchg
nop
outsl
mov
dec
push
lahf
jno
mov
scas
pop
sub
aam
mov
mov
repnz
bound
fistpl
pop
test
hlt
pop
pop
sbb
mov
repz
lods
aas
stos
mov
mov
adc
or
lret
lahf
sti
mov
mov
mov
shll
mov
cmpsb
int3
mov
in
cmp
mov
adc
out
lea
push
cmpsl
mov
push
inc
fisttpl
or
xchg
and
adc
mov
jmp
jns
xor
mov
test
mov
mov
nop
std
mov
or
pop
outsl
xor
jae
fucomi
dec
shll
mov
out
push
cwtl
push
and
sub
mov
mov
cmp
jne
cmp
mov
adc
int
mov
jnp
mov
shlb
mov
cmpsl
xchg
dec
or
leave
push
pop
sbb
icebp
imul
mov
cmpsl
data16
push
js
jp
jecxz
out
mov
adc
lock
dec
pop
pop
mov
xor
pop
bound
xor
sub
loop
mov
inc
or
cwtl
testl
lahf
popa
inc
mov
push
shlb
inc
xchg
inc
mov
sbb
adc
sbb
jmp
in
add
push
xlat
mov
cmp
sub
fisubrs
aaa
mov
test
arpl
cltd
add
mov
jg
mov
cmp
mov
push
loope
ljmp
xor
div
xchg
pop
dec
nop
adc
adc
lods
or
iret
mov
and
xor
mov
mov
test
mov
mov
mov
out
adc
ret
pop
jns
xlat
cmpsb
mov
inc
mov
sti
jae
mov
add
pusha
xor
in
outsl
stc
fdivs
lods
inc
scas
mov
push
psubb
insl
mov
xchg
stos
mov
adc
aad
mov
ja
int
adc
aaa
fdivs
or
cmp
fldenv
jns
rclb
outsl
sbb
inc
arpl
mov
in
or
mov
sbb
ret
xor
es
mov
push
mov
mov
popf
inc
cmpsl
mov
ljmp
and
out
or
mov
mov
cmp
mov
mov
ds
sbbb
ficomps
inc
inc
cli
xor
stos
mov
mov
sbbl
pop
enter
sub
add
fldt
mov
fmull
in
ficoms
iret
fbld
push
add
cmp
test
dec
xchg
mov
hlt
push
cs
mov
fprem
pop
pop
sbbb
push
sbb
stc
dec
cmp
lret
stos
mov
jmp
and
out
jbe
mov
fidivl
dec
and
dec
sbb
jge
incb
test
xchg
mov
adc
mov
in
pusha
pop
mov
inc
iret
or
mov
dec
mov
cwtl
inc
fcmovnu
mov
push
push
in
scas
mov
xchg
and
mov
dec
inc
lock
xlat
mov
mov
sahf
pop
xor
mov
insl
mov
enter
sub
aaa
adc
mov
push
std
jle
lahf
cld
xchg
cmp
cmp
cmp
int3
fisttps
mov
jge
js
mull
stos
lods
subb
jge
mov
mov
orl
not
sub
sbb
adc
add
cmp
in
mov
ljmp
scas
aaa
jne
popa
add
pop
fbstp
clc
mov
xchg
mov
sbb
mov
sbb
test
mov
and
daa
dec
xor
mov
mov
aaa
mov
ret
std
cmc
pusha
in
xlat
jno
push
mov
ret
pushf
pop
test
and
jnp
shll
cmpsl
movsl
in
cld
mov
adc
dec
sbb
ja
mov
leave
jbe
mov
sti
xor
cld
sub
cltd
sbb
jbe
mov
in
xchg
jno
jnp
sbb
mov
pop
test
cmp
scas
in
xchg
pop
jnp
jmp
les
in
sub
mov
dec
aad
mov
push
out
mov
mov
xor
dec
bound
pop
clc
nop
pop
push
idivl
je
rcrb
xor
popa
cmp
push
loopne
jnp
sbb
push
xor
sub
mov
test
mov
sbb
test
cmpsl
popf
aas
mov
lea
add
xor
mov
mov
and
aad
jmp
bound
repz
sub
sbb
pop
cwtl
or
lret
neg
ret
xchg
inc
mov
xlat
adc
scas
popa
pushf
push
stos
or
sbb
enter
xor
mov
loope
dec
arpl
xchg
jae
adc
add
mov
pop
mov
pop
mov
xlat
mov
mov
cltd
jnp
out
mov
int3
mov
jns
xchg
cmp
insb
cmpsl
mov
mov
xchg
mov
rcll
mov
push
cmpsl
mov
xlat
mov
xlat
mov
dec
mov
jae
add
mov
jecxz
mov
mov
stc
insb
push
mov
mov
bound
daa
fistpll
scas
mov
jnp
sub
mov
clc
mov
mov
lcall
mov
pushf
icebp
sbb
mov
hlt
cmp
sti
aad
aaa
and
push
jo
sbb
testl
inc
cli
mov
iret
movsl
test
movsb
mov
fs
divb
mov
mov
ret
pop
aam
movsl
out
mov
scas
sahf
lcall
dec
js
push
jae
pop
mov
cmp
loopne
cltd
dec
adc
xor
lds
imul
dec
leave
daa
push
sbb
mov
lock
or
ret
cltd
mov
test
shll
mov
out
mov
sbb
mov
sub
cmp
addr16
mov
mov
cwtl
dec
inc
adc
enter
pop
xchg
sub
test
mov
mov
dec
cltd
adc
leave
mov
sarb
mov
and
shll
out
fsubl
rolb
and
xlat
lahf
mov
cmp
sbb
cmp
in
jns
inc
jg
cmpsl
pop
sbb
lds
lcall
and
cwtl
pop
dec
out
movsl
pusha
and
mov
loop
push
aad
push
stc
pop
insl
les
add
push
popf
dec
out
es
daa
sbb
cltd
sbb
jecxz
add
dec
fbstp
mov
xchg
movsl
or
pop
insb
pop
mov
jecxz
arpl
lea
js
into
movzwl
mov
lret
mov
loope
test
movsl
cmpsl
or
cwtl
mov
test
xchg
jno
cmc
mov
cmp
and
cmpsl
add
push
mov
push
cwtl
jno
hlt
push
and
mov
aad
xor
fldl
cwtl
push
pop
lock
loopne
scas
dec
cld
idivl
sbb
push
sub
insb
cli
rcrb
test
das
mov
pop
push
adc
lret
in
mov
push
or
or
pushl
ja
xchg
pushf
pop
inc
mov
mov
fdivl
movsl
insb
or
mov
push
ret
inc
mov
push
cltd
popa
push
fnstenv
cmp
stos
push
sub
dec
mov
repnz
inc
mov
negl
lods
in
scas
fidivl
in
mov
push
mov
inc
jle
and
movsl
gs
sbb
scas
mul
and
call
add
xor
fnsave
inc
inc
adc
lock
or
int
loopne
mov
cltd
fisubrs
pushf
cmp
nop
into
and
aam
repz
mov
fptan
xchg
and
adc
lds
add
mov
fcompl
pop
scas
mov
xchg
ret
jbe
jae
mov
lds
and
call
mov
out
fwait
pop
iret
mov
mov
jge
mov
into
mov
movsb
sbb
mov
pop
xchg
pop
add
adc
mov
cmpsl
fidivs
jns
movsl
and
cmp
mov
lods
mov
js
ret
cmpsb
mov
ja
mov
stos
insb
mov
jp
jecxz
jo
lds
lret
imul
cmp
lock
mov
mov
push
mov
xor
jo
arpl
mov
mov
xchg
cmpsb
cmc
repz
clc
sbb
movsl
shlb
adc
js
cmpsl
or
lods
xor
adc
sbb
scas
cmc
in
push
out
xor
push
inc
pusha
mov
mov
mov
dec
adc
adc
cmp
stos
inc
push
pop
dec
or
mov
xor
adc
rcll
mov
pop
scas
dec
mov
cmp
sub
or
mov
mov
dec
xchg
sbb
or
les
pop
sti
test
bound
fcoms
mov
fs
and
cli
mov
xor
movsl
mov
int
pushf
xor
inc
into
sbb
pop
fsubrs
cmpsl
cmpsl
xchg
pop
cmp
imul
and
mov
lds
hlt
mov
xchg
lahf
sub
mov
mov
push
jle
xlat
pushf
stos
dec
or
fiadds
pop
xor
cwtl
negb
sbb
cwtl
insl
je
rcrb
jecxz
cmp
pop
dec
pushf
scas
and
fdivs
loop
inc
cmp
pop
int
scas
in
sub
sbb
cmpsb
daa
mov
icebp
add
dec
les
lahf
loopne
dec
pop
cmc
aas
mov
inc
and
mov
sub
jns
fisttpll
mov
jno
cmp
mov
out
and
xor
sbb
cld
cmpsl
mov
cmp
out
icebp
insb
sub
lret
out
pusha
fldenv
fidivs
xlat
cltd
dec
adc
or
inc
mov
pop
mov
daa
js
leave
aas
scas
int3
mov
sub
addl
and
test
sarb
or
inc
scas
movzwl
in
cmp
bound
mov
movsb
mov
jnp
mov
ficoms
mov
das
sbb
inc
mov
inc
push
mov
mov
pop
out
mov
test
mov
xor
xor
and
mov
mov
aaa
cmc
pop
movsl
divb
clc
fcmove
jns,pn
out
dec
scas
mov
ficoms
push
pop
mov
mov
fstl
test
mov
jmp
dec
xor
mov
lret
inc
or
inc
cltd
addl
mov
jnp
xor
mov
xchg
imul
fsubs
std
movsl
sahf
cmp
out
hlt
decl
xor
mov
scas
jo
sbb
sbb
push
sub
add
xor
scas
inc
rcrl
mov
xor
dec
xchg
mov
sar
push
xchg
adc
sbb
mov
mov
xor
sarl
mov
iret
les
xchg
push
mov
dec
or
dec
mov
jo
sbb
stc
mov
add
scas
int3
mov
cwtl
pop
cmp
call
jecxz
xlat
fldl
mov
pop
push
out
ss
mov
aaa
push
xlat
fimuls
movsb
xchg
push
test
jl
out
mov
xchg
imul
movb
xor
stc
mov
out
mov
pop
leave
mov
cld
dec
mov
mov
test
bound
mov
ret
mov
in
adc
mov
sbb
das
into
or
int3
or
and
shl
and
mov
fistpl
mov
out
out
mov
out
add
les
int3
mov
adc
leave
movsl
xlat
test
int
dec
lret
es
mov
and
push
jnp
add
inc
jae
scas
std
inc
pop
pop
mov
daa
stos
cmpsl
insb
movsb
test
lahf
jae
push
pop
das
mov
call
loope
mov
loopne
or
mov
cli
mov
je
sbb
add
mov
mov
insb
cmp
push
mov
xor
in
andl
mov
mov
mov
ja
mov
subl
and
lods
shrl
scas
sarl
ror
mov
mov
pop
fwait
push
pop
mov
inc
or
in
dec
lock
pushf
fildl
mov
sbb
mov
loop
jbe
mov
xlat
mov
mov
sub
inc
jno
insb
mov
test
shrb
xchg
mov
and
xor
xchg
cmp
pop
jno
mul
insl
ficompl
pop
or
jns
or
mov
rcrl
out
xchg
and
jb
test
sbb
dec
pop
mov
mov
and
addl
jns
or
testl
mov
mov
arpl
xlat
repz
insb
pop
jge
adc
dec
pop
stc
movsl
push
enter
fs
xor
push
or
out
jmp
cmpsl
and
pop
push
pop
or
adc
and
xlat
jge
test
loopne
inc
mov
push
mov
lods
mov
repz
xlat
call
leave
mov
xor
dec
ret
and
mov
popa
loop
sub
push
sbb
cmc
mov
sub
ficoms
aam
pusha
inc
jns
add
jbe
mov
xchg
xchg
lret
nop
loope
movsb
mov
cmp
cmp
or
jnp
fidivrs
popa
std
cwtl
cmpsb
mov
lds
add
addl
mov
mov
movsb
add
dec
ret
movsl
decb
cmp
ds
in
arpl
and
loop
sbb
inc
mov
add
test
pop
jne
push
sarl
xchg
fnsave
dec
shlb
push
and
aaa
mov
bound
scas
aam
mov
inc
into
leave
jnp
dec
pop
subb
fstps
sarl
mov
stos
mov
jnp
sbb
xor
mov
test
jae
loope
inc
jbe
stos
mov
xlat
clc
dec
adc
pop
cmc
fcomps
cmp
imul
stos
mov
sbbl
rorl
mov
imul
aad
mov
lret
roll
push
or
test
sub
lahf
pushf
jp
in
inc
sbbl
cmpl
popf
sub
and
sarb
fldt
into
push
movsl
test
sti
mov
bound
and
inc
mov
mov
fbstp
mov
xchg
out
xchg
daa
mov
mov
in
pop
mov
cmp
dec
fs
loopne
adc
sbb
inc
jns
and
adc
and
jmp
cmpsb
mov
cltd
adc
xor
test
sbb
addr16
pop
pop
sbb
cs
scas
idiv
stos
fldenv
xor
shl
xlat
ds
xchg
lret
mov
cmp
cmpsb
and
cmp
push
fdivrs
and
cmpsb
imul
and
shll
add
adc
xor
hlt
leave
mov
icebp
and
mov
or
mov
mov
mov
mov
sbb
lret
mov
sti
push
mov
mov
xor
cmp
mulb
fmuls
add
pop
xchg
mov
pop
jle
cmp
cmpsl
sub
insl
cmp
pop
jmp
ja
rcl
mov
test
int3
cld
adc
lods
mov
jmp
icebp
jbe
inc
in
es
mov
xor
popa
dec
push
rorb
mov
mov
lods
test
mov
sti
xorl
cmp
xchg
loopne
pop
mov
das
repnz
cmp
loopne
and
adc
or
ret
and
inc
cmpsl
cmp
scas
shll
fs
loope
ljmp
push
sahf
les
and
jmp
mov
mov
sbb
xlat
mov
jecxz
xor
add
adc
mov
stos
push
push
mull
imul
adc
sub
stc
push
jb
jo
negl
xor
in
mov
jne
adc
and
loope
mov
pusha
test
subb
stos
mov
cs
adc
cmc
mov
insb
sbb
xchg
jnp
ds
or
inc
mov
mov
fnstenv
lds
aad
xorb
dec
add
xlat
mov
xor
bswap
movsb
out
sbb
mov
xchg
int3
cmpsl
leave
cld
and
mov
fsubr
repnz
mov
outsb
mov
and
int3
adc
insl
sub
aad
jge
mov
outsb
sti
inc
ror
pusha
je
xchg
lds
push
test
push
in
dec
inc
adc
iret
mov
mov
pop
add
insl
mov
jl
mov
inc
mov
lcall
stos
das
add
lahf
test
mov
or
add
lahf
push
sti
and
adc
test
call
mov
mov
mov
inc
jl
push
xchg
sarb
and
nop
orb
divb
stos
ss
mov
mov
lea
mov
pop
mov
mov
mov
insl
pop
sbb
std
cmpsl
out
movsl
loope
mov
jb
inc
pusha
mov
hlt
loopne
jg
jge
aad
sbb
mov
xchg
mov
sbb
mov
push
or
push
std
clc
inc
mov
jne
stos
outsb
mov
dec
jo
sub
cmpsl
xor
mov
fsub
mov
mov
xor
mov
cmp
daa
mov
das
mov
rcl
mov
faddl
aaa
bound
in
loop
inc
ds
cwtl
mov
lret
sbb
and
mov
lods
stos
fistpll
outsl
mov
cmpsl
inc
sbb
gs
or
in
sub
jmp
dec
xchg
add
mov
clc
pop
rclb
sbb
jns
inc
notb
adc
mov
das
add
mov
test
test
ds
pop
mov
or
and
mov
lcall
mov
pop
cmc
mov
jns
mov
mov
sbb
dec
dec
and
dec
mov
cmp
or
or
ret
cmp
test
scas
aas
fiadds
mov
mov
mov
pop
call
stos
mov
xor
inc
pop
sbb
dec
stos
sti
mov
and
mov
imul
fists
sub
cmp
mov
or
inc
sti
sarl
pop
adcl
xchg
dec
xchg
pop
mov
scas
fsubs
and
mov
sub
sub
cmpsl
call
imulb
stos
sahf
push
mov
push
xor
lahf
jmp
aaa
jge
mov
add
rorl
adc
lret
mov
push
sbb
push
repz
mov
jns
pop
mov
sbb
es
sbb
mov
sbb
ja
push
stc
cmpsl
mov
out
adc
dec
inc
mov
sub
int3
mov
bound
cmp
fildll
sbb
xor
mov
insb
jo
xlat
push
shll
mov
pop
xorb
sahf
push
lret
ds
in
lds
pop
lods
test
inc
mov
std
dec
mov
movsb
inc
fbld
in
mov
add
lods
xchg
cmp
imul
or
xor
fdivrl
in
jno
movsl
jnp
mov
xor
lock
negb
and
cld
dec
int3
movzwl
inc
sbb
outsl
sbb
mov
xchg
rolb
adc
and
xorb
in
insb
mov
push
mov
cmpl
ds
outsb
inc
aas
adc
cmpsl
jecxz
fs
loop
mov
cmc
movsl
add
mov
and
call
sbb
and
in
mov
cmp
shlb
push
nop
fisttps
mov
notl
pop
mov
lret
in
out
add
sbb
mov
dec
adc
lds
mov
push
jle
or
sbb
cltd
mov
and
clc
ja
fdiv
xchg
dec
mov
pop
loope
frstor
cmc
das
mov
loop
lcall
mov
jl
std
out
sahf
lahf
lea
cmpsl
dec
jno
repz
mov
in
jecxz
mov
push
lock
testb
ss
mov
mov
mov
add
das
mov
mov
js
fdivs
loopne
in
cwtl
push
aas
pop
mov
andl
lahf
mov
xchg
cmpsl
cmpsb
popa
scas
mov
push
cwtl
arpl
inc
test
pop
jp
dec
xchg
xor
pop
test
push
and
imul
enter
les
aas
mov
pop
jbe
jbe
fwait
add
jnp
aaa
outsl
and
lea
xchg
in
mov
adc
sar
cli
xlat
add
push
in
mov
mov
les
in
mov
call
mov
hlt
ret
and
pop
icebp
fsubp
filds
mov
ret
jmp
outsb
mov
cli
rclb
repnz
test
jmp
lret
aam
jbe
mov
shl
push
ja
mov
and
test
dec
mul
movsb
sub
das
inc
mov
mov
inc
movsl
arpl
jo
and
xor
inc
mov
fsubl
ret
ficomps
xor
mov
lods
test
sub
mov
or
and
out
add
add
arpl
fadds
scas
mov
or
cmp
and
jecxz
test
stos
mov
in
mov
push
ret
loope
mov
mov
mov
out
xchg
mov
lock
mov
pushf
les
loopne
jp
lret
xchg
out
icebp
hlt
mov
mov
jb
adc
testb
enter
mov
pop
pop
orl
cmp
mov
mov
push
push
stc
mov
in
scas
xor
lcall
sbb
mov
mov
or
divb
cwtl
mov
xchg
test
xchg
es
mov
ljmp
mov
add
cmp
mov
mov
mov
xchg
dec
xchg
cmp
push
je
outsb
cmp
and
test
cltd
pop
mov
inc
arpl
sti
movsl
mov
mov
and
sahf
stc
mull
or
data16
mov
jo
cmp
mov
mov
jecxz
std
scas
push
fwait
mov
stos
repz
xchg
cmc
mov
mov
xchg
shr
shll
cs
mull
mov
in
adc
push
loope
jmp
sub
add
mov
xchg
push
je
push
cmpsl
xchg
mov
mov
in
cmp
loope
ljmp
lds
mov
xlat
shl
pop
pop
mov
pop
iret
scas
xchg
inc
xchg
add
loopne
jg
popa
jecxz
mov
xchg
dec
enter
inc
mov
mov
loopne
leave
pushf
inc
cmc
push
pop
or
sbb
enter
rol
jg
xchg
jl
fwait
pop
inc
pandn
adc
cli
movsb
xor
fwait
loopne
mov
aam
shlb
aas
mov
adc
mov
xor
cltd
popa
fs
stos
mov
mov
rcrb
test
xor
gs
mov
call
or
inc
js
jp
popa
movsb
sbbb
pop
add
jbe
or
ljmp
xlat
mov
jmp
jmp
xchg
adc
mov
mov
lcall
movsl
cmc
and
push
mov
scas
insb
mov
ss
ret
inc
fwait
movsb
imul
cld
cli
cmpsl
and
push
jge
test
cmpsb
fnstsw
ljmp
sarb
je
lcall
pushf
mov
mov
in
clc
pop
inc
jp
or
inc
xlat
mov
push
out
sbb
fidivs
les
xor
mov
call
xchg
mov
addr16
add
cwtl
cmp
ljmp
mov
arpl
xchg
sbb
sbb
lods
jno
add
in
sub
sbb
cltd
or
and
inc
xor
mov
mov
insb
iret
movsl
call
adc
ret
stc
fdivl
aam
jle
cmp
popa
mov
mov
dec
jb
outsb
push
xorl
dec
push
insl
loope
popa
loopne
pop
daa
cltd
dec
out
inc
mov
and
jge
out
mov
xchg
adc
mov
cltd
mov
pop
scas
jmp
mov
lea
xchg
stc
lcall
xlat
in
mov
pop
aas
in
stos
cltd
lcall
popa
xchg
sbb
jge
inc
mov
dec
dec
pop
scas
mov
and
iret
mov
popa
arpl
roll
mov
jmp
or
pop
or
dec
and
les
sbb
xor
popf
lods
mov
pop
into
and
mov
mov
mov
repnz
mov
inc
fdivr
test
xchg
loopne
test
mov
aad
mov
pop
cmp
ror
jecxz
pushf
mov
sbb
cwtl
cmpsb
stos
sub
inc
jns
cs
push
mov
popa
popf
xlat
mov
arpl
mov
pop
out
div
ret
jne
out
cmpb
adc
or
imul
push
or
daa
mov
pop
pop
mov
incb
cmpsl
sub
dec
push
mov
or
imul
pop
mov
and
mov
add
arpl
cld
xor
sar
cmpsl
movups
mov
sbb
add
aas
mov
jge
pushf
xor
shll
or
movsl
inc
cmp
add
jnp
rclb
xor
mov
aas
cmp
ret
xor
inc
lret
mov
jbe
pop
jge
dec
mov
sbb
push
push
mov
mov
dec
icebp
add
push
test
mov
push
test
sbb
jbe
fmul
shlb
repz
pop
or
pop
jb
cwtl
repnz
cmpsl
leave
inc
lahf
fistpll
xorl
insl
mov
xchg
pop
and
xor
adc
pop
inc
xchg
mov
cld
int3
xchg
sbb
out
cmpsl
mov
or
mov
es
negb
cmp
fisubs
fdivl
stos
push
cmpsb
test
dec
mov
mov
call
fsubs
scas
xor
pushf
mov
inc
into
clc
mov
out
xchg
loope
jnp
inc
mov
lea
imul
mov
cld
xor
repz
in
push
mov
fnstenv
test
loop
xor
xchg
leave
jecxz
mov
mov
test
shlb
data16
mov
test
sub
fcomp
ficoms
mov
xlat
jb
mov
mov
sub
fcoms
mov
pop
nop
xchg
test
mov
mov
mov
jecxz
mov
xor
mov
mov
add
ret
les
arpl
mov
mov
mov
jl
pop
ds
jle
dec
xor
xlat
pop
ja
push
dec
xchg
mov
cmpsb
ds
push
test
out
or
mov
bound
and
aaa
dec
mov
xchg
xchg
mov
fsubr
jmp
mov
repnz
and
lahf
data16
bound
and
xchg
ret
loop
adc
pusha
and
xchg
cwtl
popf
mov
ja
pop
jae
mov
std
mov
lock
xor
jbe
cwtl
sbb
sub
mov
mov
or
lret
push
sbb
sbb
pop
sbb
inc
lret
xchg
adc
mov
aaa
pop
arpl
jne
jbe
insb
sbb
movsb
iret
in
xor
sbb
cmp
and
cmpsl
or
push
mov
fldenv
and
mov
daa
and
pop
mov
mov
inc
out
mov
dec
mov
fnstsw
jp
cmp
xor
sub
in
inc
add
cli
and
aaa
xor
movsl
cmc
loope
mov
mov
fdivs
pop
mov
xchg
xchg
push
push
mov
pushf
xlat
lods
jae
cltd
xchg
lret
mov
mov
mov
movsl
lahf
mov
xor
mov
pop
mov
lret
push
pop
xchg
mov
sbbb
add
popf
xor
iret
mov
adcl
mov
sub
mov
mov
pop
push
cmp
movsb
cld
mov
lcall
mov
test
mov
popf
jnp
mov
xchg
pop
bt
mov
lret
mov
stc
sub
pop
inc
mov
jge
push
repnz
filds
inc
xchg
jae
pop
mov
mov
push
pop
repnz
pop
nop
pop
idivl
arpl
cmpsl
scas
iret
gs
mov
add
mov
pop
inc
and
out
xchg
mov
popa
orl
mov
notb
sbb
pop
imul
pop
mov
aam
mov
mov
jb
push
das
fsubs
mov
cwtl
sbb
hlt
loope
or
jb
loop
cwtl
jnp
push
pop
scas
stos
sahf
mov
mov
notb
lret
jb
push
cli
xor
mov
pop
bnd
clc
mov
inc
addl
and
cwtl
insb
add
and
scas
sbb
push
xchg
cmpsl
lcall
mov
mov
mov
mov
and
data16
icebp
fiadds
ds
push
push
mov
mov
cs
push
and
lds
addr16
xchg
pop
movsl
or
cmp
gs
jns
pop
mov
sarl
or
arpl
sub
inc
inc
mov
cltd
imul
jg
stos
and
mov
aas
xor
mov
sbb
inc
mov
mov
jnp
lods
mov
jl
mov
cltd
mov
pop
aas
out
lret
cmp
test
out
stos
add
subb
mov
mov
jge
mov
push
lahf
mov
mov
pop
sahf
fwait
popa
inc
mov
aas
outsb
adc
mov
mov
adc
pusha
test
xor
mov
mov
mov
cmp
mov
cmpsl
out
fistl
push
fucomp
push
jp
inc
mov
addr16
mov
mov
pushf
jnp
frstor
adc
ret
movsb
sbb
aam
jmp
xchg
or
mov
cs
std
mov
movsb
push
shll
leave
mov
mov
jp
jne
mov
xchg
lock
dec
mov
add
add
cltd
adc
push
mov
test
jb
cmp
mov
stc
dec
leave
push
cltd
stc
mov
xchg
jnp
cli
int
rclb
push
lcall
push
or
rcl
gs
les
or
xlat
test
insb
push
lods
pop
mov
mov
or
pop
mov
mov
test
cltd
orb
and
sbb
xor
inc
int3
mov
cmp
jmp
in
xchg
and
jnp
mov
rcrb
aas
insb
sub
mov
adc
mov
rcr
ror
mov
scas
test
adc
testl
xchg
imul
sbb
je
mov
scas
insb
mov
mov
sbb
mov
add
mov
pusha
sub
dec
push
mov
push
xchg
mov
mov
mov
shl
sub
or
int
pushf
push
mov
mov
std
mov
pop
movsb
fnsave
and
sub
loop
negb
sub
mov
or
in
scas
sbbb
sbb
bound
mov
movsl
jae
mov
pusha
scas
mov
test
dec
push
mov
out
arpl
shlb
in
jbe
xchg
dec
out
pop
mov
into
aad
pushf
pusha
push
int3
cwtl
insb
lea
cs
add
adc
pop
ds
inc
cmp
adc
cmpsl
test
clc
mov
shll
mov
adc
cld
adc
ret
push
enter
xor
inc
xchg
sub
imul
xchg
lret
mov
sub
sub
jg
fwait
lods
test
mov
sbb
cmp
andl
xchg
mov
jecxz
xchg
fwait
mov
dec
scas
inc
sbb
sbb
xchg
inc
pop
mov
mov
rol
scas
sub
mov
out
sub
dec
fmuls
dec
mov
sub
push
int
test
mov
add
xlat
mov
loope
add
push
test
push
mov
xchg
sbb
mov
rcrb
outsb
cmpsb
mov
pop
cs
lret
mov
inc
mov
icebp
mov
mov
popf
bound
and
mov
repnz
mov
cwtl
xlat
jne
loop
mov
mov
cmpl
lods
push
bound
mov
out
sbb
mov
test
sbb
insb
xlat
adc
ret
or
mov
xor
cltd
mov
mov
mov
in
mov
in
lea
lret
push
mov
mov
push
push
aad
jns
mov
dec
movsl
and
adc
lods
shl
push
xlat
lret
and
mov
sub
cmp
flds
movsl
test
mov
in
aad
les
movsb
xlat
add
loop
xorl
cwtl
int3
mov
movsl
dec
fisttpl
xlat
gs
and
lret
sub
dec
outsb
cmp
shll
mov
mov
andl
fcompl
mov
jp
mov
push
out
cmpsb
add
fcomps
das
pop
push
sbb
pop
test
jmp
cwtl
inc
pop
pop
scas
dec
mov
mov
push
inc
out
pop
pop
mov
pop
loope
xchg
lret
jnp
mov
andb
mov
pushf
and
in
sbb
je
arpl
fs
mov
pop
and
das
mov
mov
jns
or
cmp
repnz
iret
mov
mov
dec
mov
jg
popa
mov
add
mull
mov
pushf
in
or
int
loope
test
mov
xchg
dec
push
divb
pop
nop
and
mov
dec
sbb
sub
fstpl
pop
test
movsl
mov
xor
and
mov
push
rorb
mov
xlat
push
aad
in
mov
cmpsl
or
pop
mov
jp
jns
pop
shlb
push
mov
mov
and
lock
daa
mov
enter
outsl
jne
xchg
mov
cmc
and
mov
aam
mov
pop
and
fisttpll
mov
stos
es
mov
jecxz
sbb
push
push
push
fwait
addr16
scas
scas
and
mov
ss
mov
sbb
jno
mov
mov
inc
pop
mov
add
cmp
adc
mov
test
shrl
mov
cmp
sbb
inc
stos
dec
add
push
sti
pop
out
and
pop
test
cld
lret
lds
inc
xchg
mov
mov
ret
push
pop
stc
xor
loop
bound
xchg
and
xor
xchg
push
scas
scas
stos
mov
sarb
dec
mov
jo
dec
mov
mov
pushf
movsl
stc
mov
push
mov
je
pop
sbb
mov
mov
inc
adc
clc
leave
mov
pop
fwait
and
mov
aaa
mov
movl
inc
loope
rclb
aas
sbb
lret
mov
mov
mov
dec
mov
add
sbb
inc
push
mov
int3
cmpsl
cvtps2pi
add
jae
repz
mov
outsb
xor
mov
js
test
mov
xor
sbb
mov
jmp
dec
jns
cli
inc
mov
in
andb
mov
and
mov
mov
fstp
mov
mov
sbb
scas
cmp
jecxz
cmpsl
ss
lods
mov
adc
cwtl
sbbb
xlat
mov
jmp
in
out
fistpl
sub
rcrl
movsb
sbb
mov
ja
mov
stc
pop
lods
arpl
cltd
add
jno
cmp
aad
add
sbb
pop
leave
loop
lock
stos
pop
aaa
cmpsb
dec
jne
mov
mov
jo
movsl
mov
in
mov
push
aas
stos
mov
mov
rclb
test
sbb
shll
add
xchg
lcall
test
incb
cmpsl
movsl
mov
int
xchg
mov
fisubs
push
hlt
mov
movsb
mov
outsl
mov
iret
mov
out
imul
push
xchg
mov
add
sbb
lahf
rcr
cmc
mov
scas
out
lret
dec
clc
in
mov
int3
neg
rolb
mov
and
xor
lcall
sbb
mov
pop
adcb
out
push
mov
push
psrld
pop
in
xchg
mov
add
mov
jmp
xchg
mov
and
sub
scas
mov
lock
push
mov
test
arpl
pop
cmpsl
pop
sahf
mov
add
call
mov
sar
adc
repz
test
push
jp
mov
inc
dec
movsl
mov
mov
lds
popa
lock
and
sbbl
mov
xchg
stos
scas
sub
mov
dec
cltd
popf
mov
jns
sub
test
shll
xlat
rcll
cld
pop
in
jecxz
nop
push
iret
mov
shl
or
adc
xchg
sub
loopne
add
jne
imul
xlat
or
mov
mov
out
adc
and
int
leave
cs
or
mov
lods
lds
xchg
jge
aaa
repz
add
push
cmpsl
leave
mov
xlat
and
pop
mov
fbstp
dec
mov
int
jmp
mov
sbb
push
mov
or
fcompl
cmpsl
lahf
pop
int3
mov
repnz
movsl
lds
stos
insl
ss
popw
mov
scas
mov
fidivl
fcmovnb
test
insl
cmp
lods
and
sbb
stos
xchg
push
push
or
adcb
lahf
sub
repnz
mov
push
jmp
shrl
aaa
cmpsl
mov
mov
gs
pusha
cltd
jmp
mov
mov
cwtl
mov
addl
lds
stos
push
aas
and
leave
testb
movsl
lea
ret
in
push
fadd
leave
mov
push
sarl
cmc
cltd
mov
jae
xchg
mov
cmpsb
add
mov
xor
arpl
cmp
sbb
mov
xor
and
push
test
lea
lods
xlat
cmp
xchg
movsl
lds
pop
insl
jns
mov
cmpsb
adc
out
mov
jbe
push
ss
jle
mov
jns
repz
xchg
ret
nop
negb
xchg
jns,pn
jne
and
mov
jo
out
bound
mov
mov
xchg
and
cli
sbb
addr16
push
jnp,pn
mov
dec
pop
mov
jp
mov
cltd
lods
mov
movsl
out
add
push
lahf
mov
shlb
xchg
sbb
loop
push
mov
arpl
lret
mov
mov
adc
insl
cmp
add
mov
loope
rol
xor
pop
mov
or
dec
sub
xor
xchg
mov
dec
std
mov
lea
shll
fwait
popa
jl
mov
jnp
roll
lock
mov
mov
mov
jge
xlat
sub
jl
dec
or
or
stos
xor
pop
mov
dec
ljmp
push
mov
mov
xor
in
lret
loope
dec
mov
les
ficoml
loopne
int
ja
mov
lret
cs
dec
mov
rcrl
sarl
or
loop
add
sbb
in
movsl
mov
mov
cli
xor
xchg
out
vsubpd
and
sub
popl
call
lea
jge
or
push
scas
inc
xlat
inc
jg
push
mov
mov
jle
stos
and
nop
adc
push
jl
mov
addl
push
mov
push
mov
and
jp
bound
shl
cwtl
mov
push
pop
jl
add
xor
sbbl
pop
cmp
jo
adc
mov
xor
jge
mov
cmp
jmp
cmp
test
and
mov
negb
mov
adc
mov
lds
and
sbb
sub
les
add
xchg
out
ja
test
sub
and
in
into
or
sub
jne
mov
add
cmp
testl
pushf
stos
push
mov
or
and
mov
inc
sub
repnz
jnp,pt
mov
scas
sar
repz
add
aam
adc
inc
or
inc
cmp
mov
mov
in
mov
xchg
pop
cmpl
scas
adc
test
mov
jmp
std
mov
test
mov
stos
and
and
pmaxsw
test
cmp
cmpsb
push
cmp
push
scas
jg
or
sub
int
shlb
pop
das
or
mov
adc
jmp
cmc
sub
cwtl
mov
test
mov
mov
loope
mov
repz
into
sub
cwtl
scas
add
mov
mov
or
push
lret
mov
jbe
xchg
into
and
cwtl
sub
stos
lret
mov
hlt
jnp
xchg
in
xor
std
int3
sub
repz
jo
loope
sti
iret
divl
mov
sbb
lods
mov
dec
mov
adc
testl
rol
xor
cmp
cmpsl
cmp
sbbl
cmc
lret
xchg
inc
insl
xor
insb
fbld
cwtl
pushl
jno
test
jecxz,pt
sbb
add
mov
ljmp
sbb
push
cmpsl
stos
aaa
pushf
ja
cltd
ljmp
cmpsl
lds
push
das
mov
dec
stos
gs
fistps
cmp
aaa
cmp
jo
dec
lds
mov
push
lahf
movsl
stos
cmpsl
push
aam
test
hlt
or
cmp
cmp
add
mov
xor
lds
loop
xchg
arpl
cmpsl
shl
popa
stos
movsl
sbb
pop
mov
mov
data16
xor
mov
sub
out
sub
lea
xor
mov
xlat
aad
test
int3
cmp
pop
ja
push
mov
cmp
cli
js
xchg
sbbl
lock
loop
mov
mov
push
fisttps
xor
or
inc
ret
rcrb
cwtl
sbb
test
cltd
push
cmp
call
lret
sub
pop
cmp
cmpsl
adc
int3
lods
fstps
and
fs
sbb
in
or
xlat
sar
mov
fisubs
push
pop
xlat
jns
addr16
in
mov
dec
icebp
or
push
leave
push
movb
pop
cmp
xchg
aas
outsl
mov
cmpsl
xor
and
mov
filds
jg
mov
cwtl
scas
mov
fisttpll
dec
loope
and
clc
mov
out
decl
in
icebp
fldcw
aaa
out
jno
imul
mov
push
loopne
in
cmpsl
mov
and
fninit
or
clc
loope
sbb
fdivrs
pushf
add
test
xchg
mov
inc
movsl
mov
cmp
in
xor
mov
cli
shl
clc
sarl
dec
cmp
cmpsl
cmp
cmpsl
mov
push
in
sub
xor
pop
loop
jae
mov
mov
or
sub
sbb
inc
ss
and
jo
scas
inc
stos
mov
or
movsb
jbe
xor
daa
test
into
js
fildl
rcr
in
mov
adc
adc
outsb
or
imul
test
fdivl
bound
mov
cmpsl
or
mov
add
mov
lea
xor
add
xchg
and
arpl
mov
lea
call
xor
xor
jns
mov
cmpsl
mov
inc
inc
lahf
mov
mov
test
ss
fadds
fisubrl
adc
sub
aaa
jp
sub
shlb
inc
pop
and
and
mov
pushf
pop
inc
addr16
out
mov
sbb
mov
es
xor
nop
mov
adcl
lahf
stos
xchg
cmpsl
idivl
repz
mov
dec
mov
rcr
mov
pushf
mov
ja
fisubrs
scas
ret
mov
mov
pop
mov
fimuls
inc
loop
ret
cmpsl
xchg
mov
lods
pop
cmp
stc
mov
xlat
xchg
inc
out
stos
lret
scas
gs
js,pt
fnstenv
shlb
adc
lock
scas
inc
out
cmp
fwait
mov
and
cmovbe
xchg
mov
inc
jge
nop
xchg
je
outsl
mov
mov
fs
addb
mov
mov
push
mov
inc
dec
add
adc
inc
mov
mov
ret
call
jecxz
mov
pop
pop
scas
fwait
mov
mov
enter
and
aas
push
mov
mov
cmp
xlat
pop
add
loopne
xchg
pop
mov
dec
mov
or
mov
push
outsl
mov
pop
sub
mov
xchg
stc
out
int
cmp
cld
stos
push
pop
push
mov
test
andb
push
cmp
arpl
jmp
and
xchg
lods
pop
movsl
xor
jl
xor
mov
mov
inc
dec
mov
push
mov
arpl
xor
xor
jns
hlt
add
mov
push
data16
push
ja
mov
fwait
mov
sub
pop
jge
adc
mov
mov
jns
jp
xchg
mov
or
dec
inc
repnz
xchg
push
mov
mov
repz
add
jnp
mov
xchg
loop
and
mov
test
add
xchg
inc
aad
lds
cmc
sbb
adc
movsl
add
repz
push
sbb
jo
not
xorl
pop
xlat
imul
cmp
mov
sbb
lods
sub
lods
in
xor
sti
mov
ja
push
cmp
aam
pop
and
mov
loop
sbb
sub
testl
mov
sarl
add
cmpsl
iret
loopne
jne
scas
sbb
cmp
adcl
ljmp
outsb
jl
sub
add
mov
cmp
fldenv
je
mov
cltd
outsb
aaa
out
push
push
push
fsubl
fnstsw
lock
sbb
mov
mov
fld
lea
pop
jmp
jmp
or
xor
adc
pop
push
or
jnp
jne
or
out
mov
sub
imul
mov
add
js
mov
inc
mov
mov
shrl
sub
loope
mov
mov
ds
ja
sub
mov
mov
mov
es
cmc
cld
mov
sar
pushf
mov
push
icebp
adc
test
mov
dec
lods
sti
test
inc
sbb
add
mov
popa
mov
scas
xor
xor
mov
dec
push
loope
movsl
jp
mov
jle
leave
jl
xor
mov
jge
mov
fcompl
ljmp
pop
pop
mov
adc
jg
mov
cmpsl
lcall
loopne
cmpsl
push
sbb
pop
leave
jmp
lock
shl
in
push
loope
nop
outsl
out
ja
mov
mov
cmp
adc
cmovle
push
lea
pop
fwait
loope
test
adcl
mov
lds
neg
xor
cltd
push
shlb
sti
filds
mov
orb
mov
jns
or
mov
jge
mov
cmpsl
movsb
cltd
mov
imul
subb
loopne
mov
jg
sbb
jnp
rorb
ret
mov
mov
stos
sti
fiadds
lret
pop
je
insb
mov
dec
in
gs
cmp
nop
adc
push
jl
lret
push
mov
cmp
ljmp
add
mov
lret
lds
jmp
jge
dec
fsub
cmp
xlat
inc
call
sub
jmp
lret
mov
lds
and
xchg
and
shrl
les
lcall
xchg
loop
incb
mov
sbb
fmul
and
sahf
jmp
xor
inc
sbb
dec
push
adc
xchg
adcb
mov
icebp
mov
xchg
add
lock
call
fisubrl
and
pop
repnz
les
cmpsl
push
clc
ffree
mov
movsl
adc
int
mov
out
or
jne
mov
and
pop
aad
paddusb
lock
leave
sbb
je
scas
in
mov
adc
xor
shlb
ret
ficomps
movsl
mov
ret
cmp
push
cmpsl
mov
lods
lret
xlat
adc
aaa
jb
mov
mov
xor
mov
jecxz
scas
add
pushf
mov
mov
sbbl
ja
scas
mov
pop
xlat
xchg
cmp
push
movsl
jno
sub
test
jne
inc
lds
mov
push
cmp
daa
or
jg
iret
cmpsl
aad
jecxz
test
in
sub
fwait
imul
lcall
lret
pop
mov
imul
mov
enter
adc
or
mov
and
pop
rcrl
jecxz
insb
aas
mov
xor
repz
int
mov
ret
in
call
jp
inc
xor
mov
negl
and
mov
negb
daa
and
dec
mov
outsb
jo
loope
test
sarb
js
mov
clc
es
lret
out
mov
mov
inc
xchg
lret
jmp
mov
lock
nop
xchg
sub
cmp
je
adc
imul
sub
les
push
data16
mov
movl
mov
push
shl
movsl
dec
xchg
fcmovnb
sub
dec
mov
ljmp
mov
mov
mov
cmpsl
inc
ds
add
gs
mov
xchg
loop
cs
mov
in
sti
inc
inc
sbb
mov
cmp
xchg
and
mov
std
mov
movsl
bound
cmp
leave
cwtl
pop
and
rorl
iret
mov
pushf
ja
xor
mov
sub
pop
pop
mov
sti
lods
jae
push
mov
and
fdivrs
repnz
jbe
sbb
rol
jns
push
mov
js
sbb
inc
pop
mov
adc
xor
mov
pop
push
cmpsl
cmp
fwait
mov
int3
mov
js
mov
popf
out
add
xor
popa
mov
mov
fsubrs
lods
jge
push
rcrl
mov
stc
sbb
mov
sub
lret
add
leave
pop
pop
or
and
jp
inc
ret
jno
mov
inc
xchg
jnp
jbe
in
xlat
jmp
ss
lods
in
cmp
out
cltd
add
mov
sbb
dec
mov
sbb
ja
gs
bound
mov
mov
or
mov
mov
jmp
aas
arpl
push
stos
mov
shl
int
and
dec
nop
stos
lods
mov
jb
stc
movsl
test
cwtl
loop
mov
adc
xlat
scas
cwtl
mul
fsubs
call
or
cmp
paddsb
adc
mov
jne
xchg
push
sub
push
pcmpeqw
ja
scas
or
mov
data16
pop
js
mov
pusha
mov
and
jmp
jmp
rcrb
push
daa
xchg
es
cmpsl
mov
pop
mov
mov
add
mov
aad
push
xchg
bound
icebp
adc
insl
xlat
pop
mov
push
movsl
push
mov
enter
dec
mov
cmpsl
enter
pop
hlt
iret
add
mov
cld
or
ja
and
test
mov
sbb
stos
es
mov
xchg
and
jb
ss
xchg
mov
push
andl
mov
mov
mov
mov
xchg
jns
int3
inc
fldenv
fidivs
xchg
fwait
in
mov
mov
data16
jge
arpl
xchg
mov
adc
sbb
xor
mov
lods
mov
scas
fcoms
jno
or
fs
adc
xchg
out
iret
test
lcall
in
xchg
cmpl
adc
lea
mov
shlb
sbb
jg
push
fwait
enter
jmp
pop
clc
cmpsl
sub
push
mov
scas
dec
aam
jbe
pop
jl
mov
xchg
pop
mov
mov
mov
mov
sub
xor
cltd
adc
mov
pop
into
cwtl
lret
mov
sub
xor
aas
mov
pop
jnp
enter
dec
jae
jge
decb
xchg
add
inc
mov
aam
mov
movsl
jg
inc
mov
push
lock
jle
or
inc
mov
pop
add
divl
dec
mov
scas
mov
mov
mov
addr16
cmp
lcall
xchg
sub
loop
mov
pushl
aaa
das
arpl
cltd
jb
push
scas
mov
cmpsl
cmpl
jb
pop
mov
jmp
enter
mov
das
push
and
add
xor
push
xchg
mov
out
test
mov
cs
xlat
shrl
fs
testl
stos
sub
pop
push
sub
mov
cld
rcrb
pop
cmpsl
mov
or
loop
mov
popf
test
out
sahf
xor
nop
shll
call
lea
in
pop
pop
mov
xchg
mov
sahf
ret
and
add
push
mov
addr16
div
mov
jp
loopne
mov
mov
mov
push
xchg
mov
fdivrl
in
mov
arpl
fs
cmp
mov
mov
xor
dec
mov
mov
xlat
jl
pop
mov
add
cltd
mov
mov
mov
loop
jb
mov
loope
mov
out
mov
sbb
xor
pusha
aam
xchg
jl
cwtl
pop
pop
rclb
mov
mov
cld
shl
jge
mov
cmp
sub
scas
out
inc
ret
sbb
subb
or
fistpll
and
call
pusha
mov
js
loope
mov
sub
cld
mov
cmpsl
iret
into
add
test
mov
push
bound
imul
cmp
and
movsl
pop
inc
iret
js
and
neg
mov
xorb
mov
loop
pusha
cmp
xlat
jge
mov
cwtl
inc
add
repz
rcrb
shl
mov
jl
mov
sub
jp
js
aas
inc
sub
test
decb
sub
mov
shll
mov
and
cmp
inc
cltd
notl
mov
mov
mov
movsb
sbb
cmp
aaa
cmpl
mov
xor
push
add
pop
jl
out
scas
push
fucomip
cmp
mov
stos
push
into
sbb
add
inc
cmpsl
jne
jns
in
xchg
pushf
pop
mov
das
shll
bound
mov
mov
shll
jo
std
adc
clc
ja
out
mov
pop
mov
movsl
mov
xchg
jno
mov
push
lret
jae
cmp
mov
out
pop
push
add
xor
adc
cmc
sbb
fwait
je
js
cmp
aas
inc
inc
cmpsl
mov
pop
lahf
stc
push
xor
xor
sbb
sub
xor
ss
jl
push
jp
xchg
imul
sub
inc
sahf
mov
push
mov
xchg
cwtl
pop
jg
loop
dec
stc
push
mov
or
loope
mov
mov
icebp
daa
daa
and
in
inc
repz
jmp
test
mov
pushf
ret
jle
jmp
xchg
mov
out
sub
inc
inc
and
mov
arpl
push
test
cltd
or
mov
gs
fistl
and
faddl
ss
cmc
cmp
dec
sbb
mov
outsb
mov
fildll
popf
ret
mov
dec
or
cmp
jge
loopne
enter
mov
push
jae
lods
fwait
sahf
push
pop
pop
mov
mov
inc
mov
daa
mov
jecxz
outsl
jno
bound
fisubs
imul
and
or
pop
inc
xchg
sub
dec
mov
test
cli
out
pop
fisubrs
mov
and
fcoms
sbb
loop
xlat
scas
add
fisubl
mov
mov
aad
cmp
mov
fiadds
mov
sbb
outsb
inc
xor
jg
dec
idivl
movsl
xor
test
jge
test
xlat
adc
push
push
ja
mov
inc
test
push
mov
sbb
in
lea
mov
mov
mov
mulb
test
mov
aaa
addb
aam
cmpsl
lds
mov
popa
mov
or
or
loop
insl
mov
push
jnp
pusha
mov
hlt
std
cmpsl
rorb
mov
and
or
sar
xor
cmp
add
mov
int
add
ret
mov
cmp
lods
sub
gs
cmpsl
xlat
out
ja
outsl
push
mov
inc
add
mov
dec
iret
mov
cmc
jne
xor
lret
sbb
cwtl
push
jbe
and
testl
mov
data16
repnz
mov
or
in
or
mov
mov
mov
cmp
mov
mov
cmp
movsb
nop
mov
jp
inc
fs
int3
fwait
cmpsl
mov
mov
sbb
test
sbb
cmpsl
loop
movsl
adc
xor
mov
mov
mov
adc
mov
mov
into
mov
stc
lods
adc
mov
cs
sbb
and
lret
outsb
popf
jnp
mov
inc
in
mov
adc
bound
sub
mov
ret
mov
xorl
jge
and
insb
mov
pop
mov
sub
int
stos
out
mov
fldl
mov
mov
dec
shll
cli
jp
jl
js
sbb
imul
inc
movsl
xchg
test
fsubl
test
stos
mov
ja
mov
inc
cmc
cmpsb
imul
dec
je
cltd
loope
lret
mov
stos
fs
cwtl
xlat
in
fidivl
mov
or
jb
fwait
xchg
xchg
cmpsb
mov
add
testl
sub
pop
xchg
hlt
pop
lret
mov
cmp
daa
mov
mov
fsubp
xor
ror
sbb
mov
sbb
cmc
sbb
fidivl
out
dec
push
mov
mov
outsb
gs
and
adc
jecxz
and
cltd
ja
cmpsb
arpl
mov
add
repz
stc
adc
mov
aad
imul
lds
stos
inc
cmp
dec
cmp
or
pop
sbb
sar
jge
adc
jne
jnp
xchg
adc
lea
mov
jo
sub
mov
adc
negl
loopne
mov
scas
cmp
mov
mov
insb
xor
mov
movb
call
sbb
es
xor
mov
and
lahf
icebp
push
inc
cmpsl
dec
mov
jnp
ret
cltd
aam
mov
mov
into
mov
iret
cmpl
popf
mov
dec
mov
shlb
jnp
ficoml
lock
out
pop
mov
pop
ret
pop
mov
mov
and
jg
xchg
xlat
pop
xchg
nop
lea
xor
mov
xlat
jnp
cmp
imul
scas
jmp
and
ret
je
sub
xchg
mov
and
sahf
or
jae
adc
add
mov
stos
and
mov
test
sahf
xor
sbbb
xchg
cwtl
mov
inc
hlt
mov
fdecstp
sbb
jecxz
cmp
mov
lcall
mov
jne
and
xor
add
cmpsl
imul
outsb
mov
pop
cltd
or
in
fisubl
jns
mov
jecxz
push
arpl
cmpsl
fs
mov
and
and
push
in
cmp
movsl
jns
push
bound
ror
cmp
mov
mov
roll
sub
or
cwtl
cmp
pop
mov
movsb
xor
mov
add
xor
lahf
dec
test
mov
jmp
add
sbb
ret
mov
cltd
cmc
xchg
ds
and
cmp
jle
mov
fs
adc
int
lahf
push
pop
call
mov
mov
jg
popa
sub
and
push
mov
mov
and
insl
jp
mov
jbe
gs
leave
push
push
in
xchg
cmpsl
sbb
jae
sbb
or
sbb
mov
mov
jb
push
cmp
mov
pop
test
stos
testl
pushf
pop
daa
stos
mov
and
xlat
lahf
test
push
and
mov
test
jl
jnp
popf
mov
andb
dec
sahf
sub
cli
xor
rcll
stos
mov
push
jnp
sub
fwait
sbb
aas
xor
cmpsl
ja
adc
sub
imul
fdivrs
push
adc
in
mov
push
push
in
xchg
dec
push
mov
decb
adc
lret
scas
xlat
jg
sbb
dec
mov
iret
lahf
jecxz
outsb
out
xlat
mov
ds
std
scas
addr16
mov
cwtl
and
mov
mov
pop
push
mov
sub
xchg
mov
pop
cmpsb
mov
xor
es
lods
xor
sbb
jecxz
scas
mov
das
test
adc
stos
mov
jae
mov
sub
cmpsl
popa
mov
dec
mov
cmpsl
jmp
rcrb
dec
xlat
and
mov
add
hlt
in
mov
lods
cwtl
or
jmp
xor
fnstenv
cmpsl
jecxz
aas
mov
lods
jnp
shlb
out
enter
faddp
xor
jnp
mov
sbb
sub
cwtl
aad
and
int
in
mov
test
mov
popa
les
lods
insb
mov
es
lea
xorb
out
and
xchg
mov
int
mov
fsubs
in
out
mov
pop
xor
out
mov
push
pushl
dec
lea
xlat
sti
stc
cmp
mov
mov
test
pop
imul
das
stc
out
mov
jns
mov
fistl
out
scas
mov
jno
movsl
push
cltd
fldenv
ja
xchg
jle
hlt
jnp
jns
pop
push
jae
mov
mov
or
sti
subl
xlat
xor
shrb
and
mov
or
and
aaa
inc
stc
mov
mov
xor
sbb
movsl
mov
outsb
cmpl
idivl
xor
es
sbb
daa
test
pop
pop
idivl
test
icebp
bound
cli
lods
js
out
push
cmpl
leave
jno
pop
push
bswap
mov
sbb
jnp
xchg
shlb
dec
lock
test
cmpb
arpl
cmp
mov
in
shl
stc
lods
jns
add
stos
scas
aad
mov
sub
ret
cwtl
sahf
into
pop
inc
add
cltd
out
cmpsb
and
repnz
mov
xchg
sarl
mov
bound
loop
jno
mov
fcompp
and
push
sbb
xchg
mov
aaa
xor
mov
jg
push
lahf
pop
repz
mov
or
cmp
leave
js
jecxz
cli
sbb
and
sbb
push
jp
bound
mov
xchg
ror
xor
push
test
mov
push
lahf
imul
jle
daa
mov
inc
and
mov
repnz
mov
insl
sahf
mov
dec
movsl
jmp
jnp
cld
fcos
push
xchg
cmc
scas
mov
mov
mov
sbb
cs
movsl
sbb
icebp
repnz
xlat
jmp
mov
dec
mov
stos
out
outsl
push
aas
inc
adcb
imul
mov
shl
andb
adc
and
into
and
mov
cmp
pop
mov
daa
mov
add
es
push
mov
xor
mov
jg
into
lds
lods
ss
mov
adc
arpl
inc
pop
jg
cmp
outsb
jns
cwtl
pusha
jge
cmpsl
int
jl
dec
and
aad
or
dec
mov
iret
mov
cmp
xchg
scas
loop
mov
imul
cwtl
in
lahf
jnp
fdivl
xlat
push
xor
fisubl
stc
push
scas
adc
cmp
aam
cmc
test
into
mov
mov
cwtl
and
xor
mov
scas
and
mov
test
cwtl
cmpb
or
sbb
mov
das
mov
out
inc
xchg
push
cmp
js
scas
jbe
out
and
inc
in
mov
mov
lret
and
lds
xchg
cmp
ljmp
cmp
sbb
test
jge
xlat
hlt
mov
adc
sbb
sbb
mov
mov
das
adc
fisubs
xlat
mov
shll
loop
ja
pop
mov
push
cmp
push
cmc
into
pop
mov
out
cmpsl
in
je
ret
cwtl
cmp
xor
push
mov
cmpsb
in
das
mov
into
mov
mov
adc
add
push
xlat
mov
jle
jns
push
mov
scas
out
enter
mov
addr16
cld
and
adc
and
mov
repz
xlat
mov
add
repnz
mov
push
daa
in
adc
jo
mov
push
pop
sub
ret
stos
push
scas
cmp
lock
jl
test
mov
into
push
mov
or
mov
jecxz
mov
mov
jbe
dec
fdecstp
mov
add
push
loopne
mov
movsl
mov
mov
loop,pn
rcrb
test
or
xchg
mov
loope
jnp
jne
mov
sub
inc
sbb
imul
andl
xor
popa
or
add
or
loopne
es
fdivrs
mov
repz
cmc
lods
ret
rorb
rcll
add
mov
scas
xchg
loop
mov
dec
mov
in
cld
bound
xorb
and
mov
jnp
xchg
adc
xchg
cmp
push
jmp
and
xchg
mov
scas
jmp
fwait
push
repz
mov
or
loopne
cmp
out
sbb
add
pop
mov
das
imul
xchg
int3
cmpsl
mov
or
mov
stc
insb
mov
repnz
mull
inc
dec
inc
enter
test
push
and
popa
or
push
cmpsl
and
push
les
mov
pop
mov
mov
adc
or
inc
out
mov
movsb
mov
adc
rcrb
sub
loopne
int3
sbb
cli
lods
insl
xor
fptan
sub
scas
xchg
jns
cltd
imul
movsl
fwait
cmp
mov
in
or
and
aad
icebp
xchg
dec
mov
stos
sub
sub
mov
adcl
lods
lcall
arpl
stos
mov
sbb
jnp
cmp
int3
cmpsl
ja
sub
pop
movsl
pop
cs
cmpsl
xor
sbb
in
pop
sub
shlb
dec
cmp
idivb
loope
mov
xchg
das
cmp
popa
mov
fdivrs
cltd
lahf
cmp
inc
mov
or
aam
mov
lea
add
cmp
mov
aas
decb
scas
push
in
jns
lahf
cmpsl
repnz
mov
je
push
xchg
sahf
aaa
mov
xchg
xor
mov
mov
mov
mov
sbb
fnsave
or
mov
fsubp
lds
iret
jae
mov
mov
inc
bound
lcall
mov
add
adc
rorb
mov
pusha
pop
mov
cmp
adc
cmp
mov
push
ds
mov
or
mov
inc
push
push
inc
fidivrl
mov
inc
dec
out
arpl
mov
mov
insl
sub
sub
leave
aaa
popa
repnz
mov
mov
mov
call
mov
les
cmp
mov
mov
xor
sbb
insl
adc
dec
mov
dec
add
jg
in
xor
aam
mov
fmulp
lret
pop
or
insb
sub
imull
jns
subl
mov
movsl
xchg
in
dec
fmull
pop
sub
push
mov
inc
xchg
push
les
movsl
mov
pop
mov
aas
rclb
dec
mov
in
xor
dec
xor
arpl
and
mov
stc
sbb
mov
rcr
arpl
mov
mov
mov
mulb
in
lea
xlat
data16
divl
imul
scas
dec
cwtl
mov
mul
mov
dec
xor
outsb
or
mov
cmp
popf
sbb
and
popa
cli
icebp
and
cmp
test
mov
or
dec
mov
negl
cmpsl
in
push
test
fldt
es
scas
loop
hlt
mov
push
mov
mov
shl
test
lret
xor
xlat
xchg
dec
int
mov
dec
int3
or
jbe
xlat
and
and
mov
push
mov
enter
ret
pop
sarl
sahf
cmpsl
bound
int3
jns
shl
mov
or
and
jle
hlt
test
pop
lea
jp
andb
mov
mov
and
mov
bound
in
jae
jne
or
es
fwait
repz
and
xor
cwtl
or
imul
je
mov
mov
mov
jb
push
cmp
int3
leave
mov
movsl
repnz
pusha
xchg
ja
adc
aad
dec
mov
or
and
je
test
mov
sbb
mov
mov
add
ret
pop
adc
push
push
aam
jbe
mov
popa
mov
ret
sub
fdivrl
sub
mov
inc
cld
aad
fcoml
negb
stos
daa
xor
mov
fdivrs
test
or
fwait
bound
jo
lock
cltd
xchg
or
and
in
jnp
pushf
mov
mov
add
movsb
and
lret
shrl
aad
pop
mov
sbb
jae
cmp
jle
or
mov
sbb
dec
push
mov
divl
jg
mov
iret
sub
mov
xchg
scas
mov
cmp
mov
arpl
sbb
cmpsb
lcall
and
mov
out
pop
int
lock
or
out
fwait
and
aas
scas
mov
adc
inc
mov
or
add
jp
imul
push
bt
mov
jecxz
and
cmpsl
push
mov
xor
xlat
outsl
orl
scas
mov
mov
pushf
sub
add
scas
cld
xlat
jg
mull
fucom
pop
xchg
aaa
or
les
pop
cmpsl
inc
pop
mov
gs
xchg
mov
mov
push
mov
call
mov
jns
mov
sub
dec
mov
loop
mov
in
push
push
arpl
jp
icebp
xchg
fimull
mov
aad
push
mov
sahf
scas
std
add
cmp
sbb
adc
sub
dec
mov
vpsrlw
xchg
cmp
mov
xlat
popf
cmp
mov
xchg
mov
dec
jbe
jnp
dec
xlat
and
pusha
cmp
push
sbb
inc
cwtl
fsubrs
xlat
or
mov
jb
xlat
stc
fs
mov
out
mov
xor
enter
in
xor
popa
shll
fadds
mov
inc
jne
inc
mov
test
pusha
test
or
mov
sub
scas
mov
fdivp
adc
adc
ss
mov
mov
jecxz
mov
mov
mov
xor
hlt
sub
outsl
xchg
adc
or
aam
ss
mov
pop
loop
adcl
mov
or
dec
dec
mov
stos
scas
mov
push
inc
mov
sbb
xchg
outsb
bound
lret
jecxz
mov
imul
movsl
sub
scas
inc
adc
pop
mov
mov
mov
mov
aaa
sub
mov
jmp
gs
out
fsubrl
lods
jle
cwtl
mov
mov
mov
or
scas
mov
add
mov
xorl
out
mov
dec
lret
push
xor
shlb
push
or
hlt
cli
xchg
mov
scas
mov
shlb
mov
xor
mov
in
mov
mov
sbb
sbb
mov
loope
test
shlb
stos
repz
rcrl
jg
mov
mov
mov
fwait
push
dec
scas
repnz
inc
jnp
mov
xor
movsl
mov
xlat
adc
sti
xor
fisubl
popf
cmpsl
sahf
je
out
jb
mov
push
fwait
and
mov
push
xchg
mov
push
sarl
push
add
or
fld
pop
mov
shll
push
push
cwtl
test
mov
mov
mov
data16
sbb
and
push
mov
std
jno
mov
push
orb
xchg
mov
ja
jmp
mov
insb
mov
les
xor
push
inc
mov
lret
mov
sbb
push
adc
mov
jno
mov
dec
jle
inc
cld
scas
mov
das
dec
and
inc
mov
arpl
fcomps
and
insl
shll
mov
mov
test
mov
xchg
inc
mov
ret
scas
test
sbb
clc
mov
lds
movsb
or
cmpsl
ss
daa
jae
mov
and
mov
lret
cmp
xchg
jg
mov
pop
lcall
push
jmp
adc
cmp
jae
lods
mov
dec
jnp
shlb
xchg
sbb
mov
shll
jge
stos
mov
mov
and
js
out
cmp
xchg
movsb
rcl
cmp
xchg
mov
inc
mov
ret
cmp
and
push
xor
mov
es
or
mov
sbb
xor
push
and
mov
mov
sahf
sub
jb
xor
cmpsl
jecxz
sbb
xorl
fisubs
jp
clc
jmp
mov
xchg
or
mov
out
mov
out
jo
adc
jle
sbb
mov
call
sub
sub
sub
xlat
std
int3
mov
xor
addr16
lods
jbe
daa
mov
mov
mov
xor
sub
nop
add
mov
pushf
lock
icebp
gs
xchg
or
inc
and
in
sbb
lret
mov
sub
repz
dec
push
cmp
mov
mov
hlt
out
sbb
js
scas
xchg
mov
cmp
push
cmp
je
in
scas
int
cs
mov
movsb
vmovdqu
insb
mov
rcr
mov
and
mov
xor
insl
iret
mov
mov
inc
pop
and
testb
lods
cwtl
movsl
mov
cld
test
es
ja
sbb
arpl
mov
mov
sbb
push
adcb
stos
cmpsl
sub
jge
shll
push
xchg
mov
imul
xchg
inc
and
push
sub
aad
cwtl
mov
xchg
mov
scas
mov
cmc
fwait
pop
or
sbb
adc
outsb
lods
loop
mov
mov
sbb
mov
outsl
cmpb
jns
dec
out
scas
mov
lods
loopne
cmp
movsl
in
sbb
push
pop
nop
lods
add
mov
mov
xchg
mov
push
repnz
popa
rclb
data16
fnstcw
push
repz
ret
mov
addb
push
xchg
fnsave
fwait
mov
sub
into
scas
pop
inc
sub
xlat
lds
lret
ja
jns
mov
aam
test
inc
movsl
mov
lcall
hlt
and
andl
push
lcall
mov
out
stc
lret
sub
dec
insb
mov
dec
xchg
sbb
sub
pop
stos
ja
mov
fisubs
pop
mov
scas
pop
mov
mov
ficoms
xchg
mov
sarl
xor
mov
xor
pop
or
pop
mov
jl
mov
outsb
or
mov
jns
ret
mov
inc
cmp
sbb
jae
adcl
sub
stos
push
and
loop
mov
fwait
sub
cwtl
ret
lds
cmpsl
rorb
xor
xor
ljmp
and
je
cmpsl
aaa
xor
insb
dec
and
mov
stc
ds
push
fisttpll
ret
and
pop
mov
jecxz
das
sahf
push
out
inc
std
cmpsl
mov
or
dec
cmp
lods
fs
mov
aaa
pop
popf
call
mov
insb
add
in
ljmp
mov
add
in
jnp
mov
nop
stc
and
sub
mov
dec
lea
lcall
stos
mov
fwait
sti
inc
jo
mov
lret
dec
mov
xlat
ljmp
mov
push
incl
mov
jno
mov
and
out
mov
fnsave
xchg
ds
cmpsl
mov
imul
imul
push
mov
enter
mov
inc
loope
cmpsl
and
jp
mov
std
mov
sub
xor
or
jnp
mov
jmp
xchg
mov
mov
jl
cwtl
dec
xor
and
adc
cmpsl
jo
cmpsb
jmp
add
mov
cmpsl
dec
or
shl
scas
cld
mov
mov
in
out
repnz
mov
stc
push
pop
aaa
add
movsl
mov
cmpsl
fstl
sar
jg
in
adc
add
adc
cmpsl
push
mov
jnp
pop
or
repnz
icebp
cwtl
in
fsubs
js
inc
movsb
cmpsl
test
ret
xchg
pop
ffreep
nop
sbb
cmp
and
lods
dec
mov
mov
push
inc
cmpsl
xchg
mov
clc
xchg
test
mov
mov
push
les
inc
mov
mov
sbb
lahf
stc
mov
mov
fwait
inc
push
ret
int
ret
xchg
into
mov
xchg
inc
enter
ds
xlat
shrb
les
scas
nop
mov
xchg
cs
mov
or
fs
xor
ds
and
pop
push
mov
roll
movsl
cltd
dec
jg
sbb
iret
fsubs
cmp
mov
int
rcll
insb
push
lahf
sbb
cmc
mov
mov
mov
es
xor
mov
mov
ret
add
xchg
clc
out
mov
push
shrb
fstp
mov
cmp
in
mov
imull
sbb
jnp
mov
scas
xchg
dec
sub
push
push
outsl
mov
inc
mov
adc
jge
mov
lcall
mov
mov
mov
cmp
xor
hlt
mov
mov
dec
push
loope
adc
cltd
mov
je
mov
divb
sub
cltd
fnsave
sub
shll
and
icebp
cwtl
repnz
cmp
push
add
stc
mov
ret
dec
cwtl
cmp
mov
clc
jmp
mov
mov
out
push
loop
add
out
mov
mov
fwait
cmpsl
shrb
test
je
mov
outsb
mov
push
mov
jb
cwtl
push
mov
xlat
or
add
mov
leave
dec
mov
hlt
jl
pinsrw
loope
or
imul
mov
xor
std
sub
cmp
movsb
adc
in
mov
shll
daa
jecxz
out
popf
insl
inc
jo
mov
fdivrl
add
pop
add
test
mov
stos
mov
js
movsl
hlt
decb
mov
das
popa
push
and
es
and
cmp
call
mov
xor
mov
and
add
iret
leave
mov
mov
loope
pop
mov
sub
ret
jno
popa
inc
shl
lcall
leave
and
push
sbb
mov
shll
push
stc
mov
push
xor
xchg
call
pop
and
mov
mov
cmpsl
mov
sbb
sub
movsl
mov
ret
xlat
push
xchg
sub
lods
xchg
mov
and
clc
movsl
fsubr
lods
cmp
orl
jl
dec
es
cmpsl
lods
inc
int
fisubs
das
dec
pop
xchg
mov
or
jmp
in
xchg
mov
jge
mov
call
sahf
cmpsl
loop
fcompl
mov
dec
in
outsb
pop
fcomp
mov
and
xchg
add
and
mov
xor
jmp
pop
adc
and
in
and
lahf
jecxz
mov
dec
repz
and
mov
in
gs
out
loop
cmpsl
pop
jb
sbb
adc
xchg
xlat
mov
mov
cwtl
pop
in
push
fwait
test
cltd
nop
sarb
xor
mov
arpl
fwait
repz
outsb
push
and
in
bound
or
dec
sbb
clc
xchg
jnp
push
mov
dec
leave
dec
stos
popf
int3
jge
xlat
mov
aad
repz
int
cmpsb
cmp
add
test
cltd
ror
cmpsl
shl
jnp
popa
addr16
movsl
adc
xlat
or
dec
mov
fidivs
push
movsl
add
jbe
idiv
sbb
xor
fists
cmp
scas
push
cwtl
jmp
js
ret
mov
pop
btr
xor
sbb
sub
mov
cmpsl
das
cmp
popf
push
popa
lods
pop
mov
test
adc
inc
mov
scas
ret
cli
bound
popa
mov
movsl
xlat
and
call
fcomps
and
sub
jp
daa
ds
mov
aas
mov
mov
mov
jp
js
mov
cs
jne
mov
xchg
mov
cmp
cmpsl
mov
or
sbb
aaa
mov
cmp
insl
fcoms
movsl
pop
scas
inc
cmpsl
mov
or
add
mov
movsb
fwait
xchg
mov
cmc
pop
andl
pop
inc
incb
mov
ss
fisttpll
xchg
mov
mov
xor
clc
mov
fisttps
rcrb
jnp
jmp
lahf
pusha
stos
push
cmpsl
cmpsl
dec
insl
mov
loope
dec
adc
cmpsb
aam
add
stos
dec
xchg
mov
mov
outsl
popf
lods
mov
dec
popa
pop
sub
rolb
out
mov
mov
jns
mov
jecxz
cmp
out
and
inc
call
mov
aam
movsl
js
lds
pop
cld
mov
icebp
hlt
jl
xlat
loope
scas
and
shll
mov
leave
in
mov
jecxz
imul
imul
lock
ja
mov
pop
aaa
adc
xchg
cmpsl
add
int3
mov
mov
inc
and
mov
mov
cmp
jecxz
dec
or
ljmp
cmp
push
push
mov
and
cmp
repz
jns
loope
add
dec
lret
mov
sub
leave
mov
adc
ret
pop
and
cmp
pop
inc
stc
test
sub
jnp
mov
mov
pop
jb
sbb
scas
mov
cltd
cli
movsb
sbb
mov
xor
mov
int
add
clc
push
xchg
fidivl
inc
shlb
mov
iret
and
lds
cltd
mov
leave
mov
pop
es
and
jns
mov
adc
addr16
cmpsl
out
es
or
mov
rclb
mov
test
and
insb
sbb
dec
xlat
lret
add
jecxz
cmpb
xor
jg
inc
adc
mov
xor
mov
xchg
enter
push
dec
mov
fisubs
fistpll
shl
mov
divl
decl
cmpsl
inc
call
pop
xor
xorl
dec
int3
into
lods
ja
cmpsl
cmp
in
sub
or
test
scas
mov
stos
dec
cmp
mov
jge
loope
dec
adc
jae
int
cli
nop
ret
mov
mov
sub
add
mov
xor
cmp
inc
pusha
xchg
cmp
mov
jae
movsl
or
cmp
inc
mov
mov
mov
adc
lock
xlat
pusha
jns
jp
inc
idivl
push
lods
jne
mov
mov
and
mov
adc
xchg
adc
ret
das
push
mov
cmp
stos
pop
mov
and
jns
shrl
mov
mov
sub
arpl
imul
test
jecxz
cmpsl
xlat
jmp
sbbl
lahf
bound
aaa
shlb
stos
xchg
mov
or
movsb
sbb
sub
jae
mov
mov
cmc
mov
pop
shll
sbb
movsl
mov
mov
sbb
cmp
in
or
shlb
jmp
jnp
into
insl
mov
mov
iret
and
imul
mov
pop
out
sub
scas
xchg
dec
rolb
enter
mov
sub
jle
ljmp
fwait
pop
cmpsl
inc
jecxz
imul
loope
mov
mov
mov
mov
sub
jle
sub
xor
jecxz
adc
les
fbstp
cmp
mov
xor
ret
xor
mov
adc
shl
mov
insb
pop
mov
xor
sub
cmpsl
push
sub
mov
xor
push
scas
sub
enter
mov
je
mov
add
bound
dec
push
lods
adc
ret
pop
rcrl
mov
fisubl
out
xlat
xorl
mov
xlat
xchg
and
ss
push
mov
adc
sbb
testb
dec
push
push
mov
test
dec
notl
cmp
scas
pop
aaa
mov
push
daa
mov
sub
lahf
mov
movsl
pop
push
push
cmpsl
es
fisubl
iret
xchg
and
sbb
lock
fbld
inc
mov
mov
or
sbb
mov
pushf
jp
xchg
mov
and
cmpsl
xor
scas
adc
pop
daa
jmp
aam
pop
out
mov
inc
mov
mov
ficoms
les
mov
ja
leave
jecxz
push
cwtl
cmpsl
mov
mov
mov
sbb
shl
mov
xor
lds
cmp
jmp
idiv
pop
lahf
add
ss
xor
pop
adc
jnp
outsl
sbb
int3
mov
das
and
fldt
cltd
mov
cwtl
jo
out
cmp
jp
mov
mov
lret
aad
mov
cld
lahf
mov
mov
stos
add
je
ret
out
sbbl
repnz
adc
shrb
mov
movsl
push
mov
and
adc
movsl
adc
and
sub
cltd
fsts
or
jae
push
fnstsw
jg
add
in
daa
mov
cmpsb
movsb
clc
aaa
cmpsl
icebp
loopne
test
loop
mov
leave
cwtl
mov
mov
imul
jp
adc
movntps
int3
pop
sbb
scas
mov
cmpsb
push
mov
or
mov
lds
push
test
push
shlb
ret
pusha
fsubs
cwtl
adc
mov
rorl
mov
loopne
or
jae
xchg
mov
shr
dec
fstpl
dec
pushf
das
stos
repz
or
mov
popa
jb
and
mov
les
pop
sbb
cmp
fildll
pop
mov
mov
pop
pop
mov
mov
jl
mov
dec
add
pop
cmpsl
mov
mov
popf
lcall
and
adc
mov
mov
cld
lock
cmp
ret
cmp
adcl
popa
test
int
mov
daa
shrb
and
jnp
test
orb
mov
mov
rorl
mov
pusha
adc
jne
rcrb
xchg
test
iret
sbb
call
mov
adc
xchg
mov
push
pop
mov
int3
out
fsub
ficoms
ja
mov
clc
push
andl
mov
sahf
stos
inc
mov
mov
lods
aaa
xchg
and
mov
push
movsl
aad
jecxz
mov
fistpll
pop
mov
adc
lds
lods
shll
xor
jns
lret
repnz
pop
outsb
subl
cmpsl
mov
xchg
dec
push
lds
pop
pop
loop
es
mov
cs
add
mov
jae
mov
mov
jnp
shrb
jmp
mov
mov
dec
xor
sub
out
in
mov
in
fnstsw
mov
inc
in
adc
insl
repnz
push
sub
aam
mov
push
jb
jg
mov
fsubs
pop
movsl
or
mov
inc
insb
mov
mov
mov
sbb
shrd
pop
mov
ret
mov
nop
jnp
xor
jge
loope
and
out
pusha
adc
jecxz
inc
xchg
cmp
xlat
pop
cmpsl
mov
sbb
pop
cmpsl
sbb
sub
lea
push
lahf
jmp
imull
cmpsl
mov
filds
adc
mov
or
test
sti
movsl
mov
gs
mulb
lret
addl
dec
mov
or
std
mov
test
dec
ret
cwtl
cmp
mov
mov
jge
mov
mov
dec
mov
jecxz
mov
hlt
push
xchg
sub
mov
mov
mov
test
inc
pusha
mov
pop
aad
js
mov
out
andb
mov
sub
xor
dec
sbb
out
push
mov
lods
push
shlb
and
testl
xlat
ret
insb
inc
outsl
xchg
inc
cmpsl
mov
and
imul
mov
pop
pop
sbb
popf
sub
pop
sbb
sahf
cmpsl
stos
lea
loope
or
dec
jl
jbe
mov
cmp
push
add
jne
and
push
jge
lods
daa
mov
fdivrl
cmpsl
mov
cmc
or
or
mov
fdivs
movsl
fdivl
jne
jecxz
outsb
cmpsb
jns
mov
imul
lods
ja
mov
sbb
mov
add
sahf
mov
lock
movsl
or
fidivl
mov
fisttps
sarb
insl
movl
xchg
ret
cmc
cwtl
jo
jbe
mov
cmp
mov
xchg
sbb
mov
xor
mov
xor
pop
mov
lret
adc
imull
mov
mov
mov
mov
xorb
std
cmp
adc
out
dec
dec
negl
fnsave
or
outsb
mov
xchg
sbb
xchg
aaa
mov
fsqrt
push
cs
mov
fbld
ret
cmpsb
sub
daa
xchg
fwait
shrl
cmpsl
xor
sbb
xor
cwtl
mov
mov
mov
loope
aas
push
scas
call
lret
pop
add
mov
adc
loopne
mov
ja
pop
test
cmp
cwtl
rcll
aam
cmpsl
scas
pop
std
xacquire
jnp
xlat
or
xor
arpl
dec
jl
xor
jmp
movzwl
push
testb
mov
leave
addb
inc
mov
movsb
ret
mov
ret
cwtl
movsl
test
mov
or
xlat
js
and
mov
cmpsl
mov
mov
fninit
push
loope
sbb
xchg
and
out
jge
pop
imul
pop
lahf
and
negb
mov
inc
movsl
lods
movsb
mov
push
into
lret
push
cs
jns
mov
stos
adc
xor
xor
punpckhbw
iret
sahf
push
mov
xchg
jns
ss
pop
daa
scas
icebp
lahf
les
push
jb
sbb
repz
push
mov
and
mov
dec
popa
push
mov
insl
cmpsl
icebp
loop
add
jns
test
lods
cli
xchg
push
pop
adc
imul
push
or
mov
movsb
inc
sbb
testl
out
push
scas
fs
cmpsl
mov
jg
jge
das
clc
stos
xchg
cmp
inc
mov
adc
dec
and
scas
mov
imul
mov
int3
fstl
mov
pusha
fbld
sar
mov
sbb
loopne
jmp
add
iret
adc
mov
and
repnz
cld
mov
or
sub
sub
cwtl
push
insl
fisubl
mov
inc
cmpsl
rolb
push
iret
mov
mov
shlb
mov
sbb
mov
mov
scas
pop
xchg
pop
mov
and
mov
incl
das
sub
dec
test
xlat
mov
or
or
movsl
mov
push
mov
push
jge
mov
add
push
cmpb
into
sbb
xlat
push
dec
adc
mov
mov
mov
scas
insb
clc
fldcw
insw
ss
cmp
xor
inc
xchg
ljmp
bound
mov
imul
fwait
add
mov
inc
lahf
scas
loope
mov
shll
or
fs
sub
inc
int3
pop
sub
mov
xchg
iret
and
les
and
cmpsl
jae
and
mov
mov
and
pop
and
mov
mov
sub
or
scas
mov
rorb
pop
arpl
pop
popa
add
xchg
jg
in
cld
and
loopne
icebp
mov
data16
dec
push
arpl
in
xlat
xor
stos
sbb
rorl
je
stos
call
cmp
cmp
pop
add
lea
dec
cmpsl
imul
cli
in
adc
jmp
mov
cli
mov
mov
out
xor
sarb
les
out
mov
mov
mov
mov
mov
std
mov
push
mov
popa
inc
sbb
aaa
jge
cmp
lahf
mov
aad
test
mov
shrb
outsb
cmpsl
xor
mov
scas
jbe
mov
cmc
dec
xlat
loope
xchg
xchg
jo
lahf
mov
lods
add
inc
outsl
jb
xlat
subl
inc
mov
cmp
je
neg
mov
scas
sbb
xlat
mov
scas
adc
sahf
mov
js
outsl
and
bound
xchg
jbe
rcrb
mov
cmp
push
mov
jno
cmc
or
movsl
gs
cmp
mov
inc
loop
outsl
test
jbe
fmuls
cmpsl
mov
sbb
mov
pop
mov
dec
xlat
adc
outsl
btr
stos
jae
pop
hlt
fnstenv
mov
mov
rolb
cmpsb
mov
orl
cwtl
dec
fadd
sub
or
pop
shll
cmpsl
mov
mov
rcl
xrelease
mov
lea
pusha
mov
test
adc
mov
rol
fwait
bound
sbb
jg
mov
cmpsl
data16
or
or
add
repnz
dec
cwtl
sbb
mov
out
mov
jecxz
out
xor
jecxz
pop
fwait
scas
and
xchg
cltd
in
std
int3
mov
not
fnsave
stos
mov
ljmp
and
mov
test
fmul
mov
jmp
push
cwtl
mov
jb
and
xlat
mov
or
mov
jmp
rcrb
clc
frstor
imul
mov
fdivrl
repnz
aam
mov
and
shl
shrb
addr16
test
lds
xor
mov
jno
mov
sbb
add
out
jecxz
jg
stc
or
jl
cmpsl
pop
dec
xchg
xchg
jmp
sbb
aam
fldenv
push
xchg
mov
xor
pop
test
cwtl
mov
negl
mov
push
dec
mov
jno,pt
mov
mov
jg
mov
in
xchg
dec
pusha
pop
dec
iret
xchg
ret
andl
xor
nop
fsubrs
jnp
insb
mov
mov
push
nop
clc
rep
xlat
push
pop
pop
pop
js
in
test
shlb
scas
pusha
and
mov
aas
sbb
es
dec
and
sahf
out
outsl
mov
movsl
pop
js
sub
cltd
rcrb
and
jne
xchg
fbstp
adc
or
fadd
into
call
jge
mov
xchg
out
fists
jbe
pop
repnz
imulb
lcall
jg
popf
ss
mov
mov
mov
or
cltd
xchg
lock
and
push
pusha
das
scas
inc
lcall
mov
mov
pop
icebp
inc
mov
jl
sub
cli
sub
ds
mov
ja
in
cmp
addr16
mov
mov
inc
loope
xchg
lods
into
cli
ja
lcall
jecxz
xchg
sbb
iret
fnstenv
cli
cmp
ror
sarl
pop
xor
sarb
cwtl
adc
les
mov
lods
sub
in
mov
test
fmulp
cpuid
and
rorl
sbb
mov
add
cmp
dec
mov
aas
mov
mov
inc
loop
movsl
aam
xchg
add
stc
leave
in
sbb
fwait
push
dec
mov
jecxz
push
mov
mov
mov
mov
test
fistpll
xchg
cmpsl
leave
dec
mov
xor
xor
es
cltd
dec
push
push
mov
sub
cwtl
push
leave
mov
jp
jne
jbe
in
inc
shlb
inc
stos
jmp
test
and
mov
ja
repnz
pop
lods
cmpsl
adc
popf
add
xchg
fildl
shlb
mov
mov
sbb
and
cmp
movsl
sub
push
push
pop
cmp
mov
mov
mov
mov
icebp
adc
sti
mov
ret
dec
sub
mov
fistl
shll
push
push
xchg
fiaddl
push
shlb
test
xchg
xchg
mov
aas
shl
xor
iret
or
sahf
mov
sub
nop
dec
cld
mov
cmpsl
or
jl
outsl
xlat
cltd
in
push
mov
mov
mov
xor
dec
adc
test
or
mov
je
push
arpl
mov
sbb
imul
ds
sub
cmc
dec
imul
dec
pushf
neg
fwait
mov
loopne
cmp
mov
cltd
shl
dec
jle
pop
fistpl
shrb
cmpsl
push
mov
mov
cmpsl
clc
repnz
loope
mov
add
dec
pshufw
cwtl
insb
ds
insl
mov
xor
mov
mov
data16
xchg
push
fwait
call
jp
sahf
cwtl
and
jne
cltd
xchg
cmp
ds
cltd
popa
lods
mov
sbb
icebp
ret
and
push
push
cmpsl
pop
push
jmp
mov
jl
xlat
pop
push
dec
xlat
mov
test
jecxz
mov
repz
mov
sub
scas
mov
mov
bound
data16
stos
add
cmp
pop
mulb
out
lcall
sbb
mov
jmp
das
mov
loope
lahf
mov
ss
push
xlat
sti
push
pop
mov
in
pop
mov
jge
jl
cld
cli
mov
add
xchg
pop
jmp
mov
in
push
clc
jl
mov
lods
imul
and
add
jb
and
mov
les
lock
inc
mov
loop
cmp
push
mov
mov
mov
dec
fidivs
cmp
or
test
cmpsl
insl
mov
fdivrs
pop
shll
mov
loope
xchg
and
xchg
insb
movsl
js
sub
insl
xchg
and
jae
mov
and
and
fwait
mov
dec
fnstsw
mov
xchg
arpl
push
dec
inc
test
xor
pusha
mov
and
xlat
nop
in
stos
pop
pop
lods
movsl
mov
sbb
test
in
into
arpl
inc
mov
mov
xor
loop
xor
aaa
sarl
sbb
shrb
mov
add
loop
in
sbb
mov
mov
mov
stos
dec
out
mov
lret
or
push
enter
popf
xchg
fldcw
pop
mov
sub
lahf
out
add
jmp
mov
test
movsl
mov
jns
mov
cmp
pop
cmp
jecxz
jle
sub
dec
sti
mov
xor
pop
cmpsl
jmp
int3
fidivl
jne
roll
xor
mov
cmp
test
push
outsb
cmpsl
push
push
inc
fadds
jp
negb
sbb
fyl2x
xchg
xchg
adc
mov
mov
cmp
xchg
jge
and
mov
les
xchg
jns
subb
lcall
cmpsl
movsl
xchg
lahf
pop
jnp
xchg
sbb
shrb
mov
xor
add
push
rolb
mov
scas
sub
arpl
test
bound
fisubrs
inc
cmpsl
push
insl
movl
mov
scas
arpl
mov
xchg
and
loope
mov
mov
push
sbb
into
jle
pop
jae
and
xchg
push
movsl
in
mov
repz
ftst
loop
cmpsb
lahf
pushf
test
cmpsl
shrl
pop
pop
push
pop
mov
shrd
nop
mov
adc
xchg
out
mov
mov
sarl
scas
mov
jmp
fwait
movsl
xorl
sbb
sbb
push
mov
push
fdivrs
xlat
loope
jl
xlat
fidivrs
pop
or
mov
mov
xor
push
scas
sbb
enter
mov
pop
aaa
xchg
mul
cltd
xlat
xchg
into
shll
out
jno
adc
and
lods
pop
mov
cmp
dec
mov
inc
or
cmpb
mov
jmp
aam
movsb
lret
mov
push
cmpsl
sbb
std
cmpsl
mov
movsl
sub
ds
adc
cltd
cmp
movsl
pop
andl
xorb
in
fisubs
jns,pn
push
xor
repz
ficoml
mul
ret
cmp
fdivs
push
enter
mov
call
mov
jp
mov
mov
push
icebp
orb
dec
mov
or
mov
push
add
mov
xorb
fstps
and
loopne
mov
jnp
hlt
jle
iret
out
int3
imul
xorl
adc
mov
sbb
fwait
mov
stos
ret
dec
pop
mov
sti
mov
xchg
jecxz
subl
mov
scas
xchg
mov
adc
jne
cmpsb
scas
inc
adc
mov
cmp
add
jnp
xor
lahf
xchg
pop
push
leave
cmp
pop
push
notw
inc
mov
mov
insb
pusha
leave
out
mov
test
inc
mov
xor
mov
pop
pop
jp
cmpsb
adc
mov
and
stos
mov
loop
orl
loopne
mov
lds
xor
scas
mov
mov
xchg
sbb
ret
mov
sub
fdivrl
insl
cltd
movsl
mov
gs
inc
mull
xorb
inc
adc
ljmp
sbb
mov
shlb
or
dec
lcall
mov
lahf
das
mov
and
adc
insl
xlat
xorl
xchg
xor
std
repz
cmpsb
mov
jmp
sti
push
sbb
mov
mov
add
mov
xor
add
movsb
mov
jb
jae
gs
rol
mov
arpl
lahf
leave
dec
cmpsl
jns
lcall
mov
mov
add
push
adc
mov
pop
or
ret
and
mov
daa
stos
loopne
sti
push
mov
xchg
mov
lock
arpl
mov
fndisi(8087
cld
data16
mov
gs
mov
push
dec
jl
inc
fsts
daa
into
push
or
xchg
movsl
out
ret
mov
cld
add
xchg
jmp
push
mov
push
fmuls
in
rcl
aam
lods
add
cwtl
cmpsb
xor
xlat
mov
aaa
data16
cwtl
jo
adc
fstl
mov
scas
jne
bound
cmpsb
mov
cmp
addr16
lea
stos
rorl
push
mov
scas
test
je
jo
jno
and
ror
mov
aas
imul
mov
leave
ljmp
cltd
xor
xor
lods
mov
push
inc
mov
add
dec
popa
jg
pop
mov
mov
test
in
in
call
dec
es
adc
rcll
mov
dec
fmull
sarb
mov
jne
push
repnz
pop
mov
xchg
xlat
addl
mov
movsl
mov
daa
lahf
or
fwait
jno
fs
dec
lcall
aad
mov
ret
mov
mov
cmp
mov
loope
mov
stc
mov
loopne
sarl
and
out
es
mov
adc
rcll
sub
mov
jae
pop
imul
mov
test
cwtl
mov
jg
push
mov
mov
les
je
negb
icebp
mov
loopne
pop
fnclex
cwtl
jns
push
and
cmp
fwait
cmpsl
lods
std
mov
mov
insl
sbb
cmp
jb
ret
mov
movsb
inc
pop
cmp
xor
sahf
mov
inc
mov
out
mov
icebp
clc
cwtl
inc
imul
out
mov
sbb
cmpsl
call
mov
in
or
xor
inc
mov
hlt
mov
fdivrl
lds
mov
cmpb
inc
pop
call
scas
cwtl
mov
iret
cwtl
in
push
xor
and
adc
fldcw
mov
xchg
lret
cmpsl
out
lret
adc
push
mov
mov
or
dec
xlat
mov
sbb
stos
mov
dec
orl
fcmovbe
xlat
push
rol
addr16
testb
mov
pop
xor
mov
sub
mov
mov
add
jbe
mov
mov
ret
mov
scas
es
push
pop
mov
cmpsl
fidivrs
js
movsl
mov
cltd
xchg
stos
pusha
data16
in
pushl
loopne
pop
push
daa
mov
shlb
gs
outsb
lahf
cmpsl
fcomi
add
sub
inc
cs
jno
jecxz
add
outsb
mov
jge
adc
addr16
scas
scas
dec
ja
mov
and
aam
lds
pop
cmpsl
hlt
ret
lret
jae
sbb
adc
or
daa
jg
pushf
mov
insl
mov
fwait
xchg
test
cmpsl
jb
in
mov
adc
movsb
cmp
jns
adc
stos
xor
sbb
or
lock
fsubs
mov
test
mul
mov
nop
mov
fstpl
lods
push
lahf
mov
movsl
clc
lcall
mov
in
mov
dec
mov
mov
mov
imul
mov
adc
scas
adc
sub
sub
outsb
nop
cmpsl
aad
xchg
cmp
sbb
pop
cmp
pop
sbbl
jno
mov
mov
in
lods
cwtl
xchg
mov
xor
stos
push
mov
lcall
cwtl
adc
mov
or
mov
push
in
mov
aam
adc
pop
jnp
or
xchg
xorl
mov
clc
into
push
mov
mov
aaa
xor
frstor
cmp
and
mov
outsl
or
mov
mov
xchg
lret
sbb
jno
call
inc
je
mov
fsubl
mov
cmp
xchg
mov
mov
cli
fcoml
lea
popf
out
mov
mov
and
icebp
ret
dec
sbb
fmuls
rcl
cmp
lahf
daa
dec
mov
and
add
mov
push
mov
push
lret
xchg
mov
mov
adc
cmpsl
push
adc
pop
sbb
mov
inc
cltd
lcall
mov
fildl
pop
movsl
ja
mov
mov
push
cmpsb
mov
mov
push
xchg
sbb
movsb
cmpsl
inc
mov
movl
outsl
mov
test
mov
mov
xlat
jns
test
into
stos
ret
pop
or
orb
loope
cmp
xchg
es
mov
add
shl
cwtl
push
mov
sub
in
mov
jns
in
cmp
mov
pop
mov
loop
icebp
scas
cmp
loopne
mov
adc
sbb
dec
ret
shrl
adc
arpl
xchg
outsl
stos
jno
in
xchg
mov
cmc
daa
mov
sub
pop
mov
jns
sahf
cmc
insl
mov
xchg
pop
cmp
push
fnstenv
lret
test
pop
mulb
cltd
bound
aaa
movsl
jns
mov
in
jmp
mov
enter
add
cli
xchg
mov
sbb
shrb
jecxz
and
lea
test
xchg
jl
mov
ljmp
mov
mov
movsl
lock
divl
stos
push
inc
movsb
or
ss
fcomps
out
imul
movsl
int3
imul
lret
mov
mov
test
or
jg
mov
mov
mov
shrb
adc
int3
sbb
scas
add
and
jbe
push
sub
or
mov
ret
pushf
mov
pop
insb
cwtl
nop
enter
scas
fbld
in
mov
cmp
rcrl
lods
mov
test
jnp
push
push
pop
jb
int
lods
mov
pushf
xor
cs
in
and
mov
mov
cmc
inc
mov
inc
leave
jecxz
jo
mov
sub
xor
mov
xor
loop
mov
inc
into
mov
and
sbb
and
cwtl
aad
outsb
shll
mov
cmpsb
loope
es
rcrb
sbb
jns
xchg
fstpl
pop
xor
push
testl
mov
cmp
es
inc
aad
clc
in
in
fwait
scas
js
inc
adc
cmpsl
push
and
mov
shrb
stc
shr
aaa
loop
cli
cmpsl
adc
xchg
xlat
pop
divb
dec
and
mov
lock
and
cltd
insb
sahf
sarl
push
mov
pop
inc
outsb
cmpsl
adc
mov
cmp
and
xchg
scas
mov
push
cmp
push
es
mov
in
mov
mov
btc
jg
add
mov
dec
loop
aas
add
xchg
cmp
push
shlb
dec
shll
or
cmp
popa
rolb
aaa
popf
jp
pop
pop
mov
dec
mov
incl
and
mov
stos
test
push
lahf
aaa
jo
mov
mov
lds
fdivs
mov
mov
dec
add
adc
iret
xorb
xor
mov
push
mov
xorl
ss
and
lods
add
mov
add
sub
sbb
mov
sbb
cltd
gs
push
mov
fidivl
mov
mov
jmp
faddp
jecxz
push
xor
cmp
std
iret
xor
xchg
mov
leave
shlb
pop
imulb
loope
mov
push
cltd
pop
jge
inc
adc
out
ss
or
cmpsl
andb
popf
and
cmp
lcall
fbld
ret
mov
cmp
mov
out
jmp
and
push
cmp
push
cmpsl
jno
xchg
cltd
mov
xchg
fisubs
cmp
scas
or
mov
cmpsl
mov
cmp
cmpsb
loopne
xor
inc
unpcklps
roll
pop
xchg
fs
push
loopne
movsl
adc
xor
mov
leave
in
cmpsl
xor
pop
or
in
out
and
ljmp
ds
in
inc
pop
out
roll
mov
cltd
xor
test
or
push
cld
aaa
ja
lds
ror
mov
and
mov
or
repnz
roll
add
out
mov
mov
inc
push
cmp
add
hlt
loope
cltd
xchg
cmpsl
mov
and
aad
mov
mov
inc
push
mov
sbb
ret
xchg
cli
mov
lret
inc
push
mov
mov
dec
mov
mov
sbb
stos
sub
mov
imul
mov
loop
pop
movsb
mov
add
inc
cmp
test
in
cwtl
mov
mov
mov
out
mov
sub
push
jnp
scas
jle
add
movsb
pop
mov
ret
push
sahf
mov
pop
mov
jl
mov
dec
mov
movsl
mov
repz
dec
mov
xchg
sahf
es
sbb
shrl
shlb
cltd
imul
jne
fidivs
and
decl
mov
pusha
push
clc
push
fadds
mov
hlt
repnz
inc
test
test
stos
in
pop
fwait
xchg
int3
pop
cmp
test
lcall
add
in
shlb
cmpsl
mov
fdivrp
cmpsl
push
pop
jnp
xlat
and
inc
in
sub
add
sbb
fwait
scas
ljmp
inc
hlt
mov
in
jb
mov
xor
and
inc
mov
mov
cmpsl
lret
inc
pop
cmp
cwtl
mov
out
pop
mov
fs
mov
mov
sarb
ret
enter
xor
nop
subl
or
into
fxch
mov
lahf
mov
lds
cmp
fidivl
push
mov
or
mov
movsl
rcrb
add
mov
mov
cmp
jg
popa
sub
fsubs
mov
xor
mov
xchg
testl
ret
jp,pt
andl
mov
cmc
sbb
cltd
mov
mov
dec
dec
in
mov
bound
inc
lock
mov
in
dec
nop
fwait
add
inc
inc
shlb
cwtl
cltd
mov
push
cmpsb
stc
cmp
mov
ss
pop
scas
ret
stc
maskmovq
out
xchg
int
daa
dec
leave
mov
xlat
shrb
in
cli
cld
mov
push
es
daa
mov
jnp
jge
and
mov
xchg
push
in
xor
sbb
out
cli
sbb
pop
scas
pop
leave
enter
mov
sub
out
add
fbstp
mov
xchg
xor
lcall
mov
jp
cmpsb
push
push
pop
mov
cmpsl
lods
lahf
outsl
shlb
cwtl
mov
mov
push
nop
xchg
xchg
mov
cmpsl
mov
mov
repnz
jl
adc
and
rcl
mov
mov
mov
in
cwtl
adc
adc
test
mov
jns
cmp
loop
mov
test
xor
jne
shll
xchg
cmc
adc
push
xchg
lods
jno
pop
sbb
xlat
xchg
cmp
mov
inc
xor
adc
in
sti
jnp
je
bound
gs
sub
cli
dec
pavgw
loope
jnp
mov
sub
icebp
inc
and
loop
cmpsl
testl
loopne
popa
jge
mov
mov
aad
int
mov
repnz
xchg
push
jns
jae
outsl
mov
mov
sbb
and
mov
shll
cltd
aas
push
xchg
sbb
mov
mov
test
sbb
mov
mov
shlb
push
lea
mov
dec
incb
xor
lea
movsb
rorb
adc
mov
ret
mov
stc
cmpsl
mov
sub
imul
inc
cmp
lahf
out
add
clc
inc
insb
loop
or
lahf
xorl
jge
xor
xlat
in
mov
pop
aaa
adc
mov
mov
or
jmp
jge
xchg
lds
push
xchg
stos
mov
cmova
mov
movsb
clc
mov
shrb
mov
sub
pop
mov
fmul
cmc
stos
jl
jns
mov
and
sbb
mov
inc
xchg
into
scas
jecxz
sub
jl
mov
jmp
movsl
push
push
jg
shlb
iret
leave
scas
add
pop
pop
jbe
inc
jne
mov
and
cs
push
rdtsc
mov
inc
cmpsl
add
test
mov
push
or
mov
popf
leave
daa
push
jle
pop
jg
lret
mov
faddl
inc
cmpsl
mov
push
cmp
xchg
mov
lods
and
xor
and
pop
or
lcall
in
hlt
jbe
out
das
movsb
inc
in
push
pop
stos
mov
addl
push
add
scas
and
cmpsb
pop
cmpsl
mov
or
sbb
pop
sbb
cmpsl
addr16
cmp
jns
rclb
mov
sti
mov
jmp
inc
push
mov
lcall
sbb
rorl
mov
pop
dec
mov
pop
cmpsb
fisttps
outsl
xor
and
mov
loope
sbb
or
mov
mov
pushl
gs
fcmovnbe
jle
mov
push
pop
push
mov
stos
mov
push
and
pop
out
mov
stos
mov
les
imul
xor
mov
jbe
mov
xor
stos
push
movsl
pop
lds
mov
pushf
insb
out
push
mov
mov
inc
push
js
int
sbb
xorl
cmpsl
mov
pusha
inc
cmp
insb
shl
sbb
pop
mov
mov
mov
mov
push
mov
xchg
inc
cli
adc
cmpsb
in
pusha
into
stc
iret
fisttpl
xor
iret
inc
mov
ds
sarl
cmp
std
lcall
sbb
lret
inc
scas
int
mov
aaa
jl
push
shrl
mov
test
lret
xchg
idivl
mov
or
inc
mov
mov
cmp
mov
jge
adc
fcomp
inc
xchg
cltd
ss
mov
and
test
dec
mov
fildl
in
scas
aaa
jp
outsb
pop
cmp
mov
mov
xor
sbb
push
sub
push
lods
pop
jecxz
mov
mov
mov
cmp
jb
outsl
mov
inc
stos
mov
testb
cmp
loop
loopne
mov
lods
ds
aaa
jp
fidivrl
bound
mov
mov
out
in
mov
test
in
daa
sbb
mov
cmpsl
hlt
jae
mov
sbb
push
mov
fwait
inc
xchg
stos
mov
inc
inc
fisttps
add
xlat
icebp
decl
mov
xchg
adc
int
mov
out
mov
mov
mov
loop
mov
ss
data16
imul
emms
dec
mov
pop
repz
sbb
test
adc
cmp
jge
and
in
out
test
aas
jb
stc
out
cmpsb
enter
dec
mov
lods
and
push
mov
push
sub
mov
mov
std
push
mov
and
shll
test
pushl
dec
adc
push
push
bound
cmp
mov
fsubl
pop
sbb
mov
cmpsl
xchg
push
fcom
sbb
mov
outsl
gs
push
repz
lock
outsl
mov
shld
outsb
jge
das
or
loop
mov
push
inc
inc
mov
cwtl
mov
scas
add
mov
call
xorl
mov
aad
add
inc
test
jg
xor
lock
push
cs
insb
cmp
outsb
add
sub
mov
mov
cmpsl
inc
mov
dec
and
sbb
xlat
push
loop
or
lds
mov
or
into
ss
pop
mov
xchg
jae
cmpsl
adc
or
mov
bnd
sbb
pop
sti
cltd
and
lods
movsl
inc
out
mov
cmpsl
push
icebp
sbb
stos
call
mov
int3
enter
and
mov
out
dec
lea
cwtl
inc
dec
insb
mov
mov
pop
mov
jb
mov
out
bound
scas
sarl
rcrb
negl
dec
adc
ffreep
inc
mov
into
stos
jmp
sahf
mov
xor
pop
js
jl
shll
shll
out
insb
push
sbb
dec
mov
fcompl
sahf
mov
cmp
movsb
mov
outsl
or
shrb
cmp
scas
xor
sub
mov
cmp
call
mov
xor
shlb
shrl
sbb
mov
mov
mov
scas
mov
xor
repnz
mov
mov
mov
push
mov
movsl
test
add
mov
jmp
mov
cmp
ret
pop
in
pushf
out
daa
jge
add
mov
hlt
cmpsl
lea
and
sbb
stos
stos
mov
cmpl
mov
int
mov
jge
lahf
gs
cmp
rorl
notl
pop
pop
mov
fsubrs
pushf
add
mov
xor
or
and
mov
and
addr16
mov
mov
xor
ss
aas
popa
jg
loop
jecxz
loopne
pop
xor
jae
xchg
cmp
loop
loope
dec
mov
xlat
mov
jnp
aaa
and
add
ret
mov
dec
test
shlb
xorl
mov
cmpsl
adc
push
xchg
aas
mov
mov
mov
mov
in
adc
dec
loope
mov
push
das
xchg
es
sbb
cmp
cmpsl
mov
add
cmpsl
ja
or
daa
fs
pop
cmp
rcll
mov
and
cli
or
jl
mov
loope
nop
cwtl
mov
or
das
cmpsl
in
es
outsb
jge
fcmovnbe
pop
pop
insl
int3
das
imul
jmp
mov
push
pop
push
mov
dec
jbe
add
cmp
fidivrs
and
popa
push
in
cli
pop
lods
test
adc
pop
mov
mov
adc
sbb
mov
sub
daa
cmpsl
imull
and
mov
pop
fildll
mov
outsb
in
scas
mov
jle
inc
addr16
mov
and
pop
mov
out
adc
mov
popa
adc
cmpsl
pop
rcrl
neg
ljmp
pop
sub
sbb
es
mov
bound
cltd
stos
mov
out
mov
add
mov
sub
mov
inc
pop
pop
mov
mov
mov
mov
and
cmpsl
mov
jo
filds
test
mov
jmp
movsb
mov
gs
jnp
xchg
or
insb
aam
lcall
out
push
add
mov
mov
mov
ljmp
lcall
pop
push
xchg
loope
cwtl
inc
popa
dec
sarl
adc
fstpt
mov
stos
scas
inc
bound
cmp
adc
adc
or
dec
fdivrs
ljmp
push
ljmp
mov
and
stos
mov
lods
pop
mov
jnp
jb
mov
sbbb
mov
inc
mov
dec
xlat
fwait
mov
test
cmpsl
push
mov
insb
mov
mov
nop
mov
cltd
cmp
ja
mov
int
test
fsubrs
movsb
scas
icebp
lcall
dec
shl
in
mov
xlat
lea
mov
test
out
jge
cmp
mov
ja
push
das
andb
push
inc
pop
mov
sarl
fwait
or
xchg
add
xchg
test
mov
arpl
xlat
inc
and
cmpsb
xor
mov
fidivl
fsubrs
sub
jge
ja
das
mov
or
jno
mov
aad
lahf
inc
pushf
mov
sbb
push
mov
jns
sti
lret
and
andb
mov
push
cmpsb
xchg
lret
sbb
mov
push
mov
inc
movsb
gs
or
mov
jnp
pop
test
xor
arpl
pop
lsl
cltd
ljmp
and
adc
loope
clc
popa
xchg
mov
jno
xchg
jno
mov
sub
sbb
xor
cwtl
lret
mov
test
ja
mov
popf
mov
mov
std
push
jmp
xor
sub
mov
repz
hlt
mov
repnz
cmpl
es
clc
inc
mov
jnp
in
outsl
mov
mov
adc
pushf
or
imul
cmpsl
mov
cmpsl
lods
mov
insl
pop
out
mov
fwait
bound
cli
test
jae
xorb
jge
jns
push
xlat
pushf
mov
dec
cltd
mov
push
and
bound
mov
cmpsb
mov
xlat
xchg
cmpsl
or
aaa
jl
sar
scas
es
jg
xchg
ja
dec
mov
adc
cltd
xor
mov
sub
dec
xor
xchg
sub
clc
dec
adc
iret
imul
cwtl
push
cmc
mov
push
mov
test
push
dec
pop
jp
add
and
mov
jmp
sahf
ljmp
fsubrl
and
fucomp
or
mov
lahf
push
test
mov
fwait
movsb
ret
push
and
mov
cmp
cmp
xchg
lcall
jl
pop
mov
mov
mov
test
xorl
inc
repnz
pop
xchg
jecxz
mov
lds
test
inc
mov
mov
cli
mov
adc
fsubl
mov
inc
les
sbb
sarl
ficoms
xchg
sahf
push
dec
mov
mov
jno
and
sub
lahf
mov
push
sbb
mov
push
imul
jg
mov
or
mov
dec
adc
inc
lcall
mov
cmc
and
subl
gs
sub
cmp
imul
sbb
inc
mov
fs
cwtl
mov
mov
mov
jle
movsl
mov
inc
add
pop
lret
pop
mov
clc
adc
fwait
pop
inc
ret
fnstcw
mov
sahf
mov
sbb
test
jge
adc
pop
mull
or
scas
mov
xchg
mov
dec
aas
lahf
fadds
jnp
jge
mov
imul
cltd
mov
stos
cmpsb
sbb
scas
dec
adc
sbb
pop
popf
mov
sbb
and
mov
mov
cmp
cmpsb
or
mov
gs
mov
cwtl
adc
bnd
or
std
lods
frstor
push
loopne
mov
push
push
mov
mov
loop
and
mov
aam
push
scas
or
insb
out
pop
popf
add
mov
mov
add
jno
fstpt
jmp
jecxz
je
and
jne
mov
test
loop
sbb
ds
nop
mov
aam
xlat
add
sub
xor
xchg
pop
ret
call
mov
arpl
mov
xchg
push
cwtl
cli
lea
int
shrl
sbb
cs
push
xchg
xchg
mov
pop
fwait
jbe
test
pop
aad
push
mov
mov
mov
jmp
pop
lea
xor
je
mov
stos
inc
pop
mov
adc
pusha
mov
dec
mov
jno
fdivrs
test
clc
and
in
push
mov
mov
lahf
mov
cmc
push
insb
ss
cmpsl
dec
or
jecxz
jle
test
mov
cli
jp
mov
out
mov
mov
gs
push
mov
push
sub
inc
xchg
cld
fs
jnp
mov
mov
int3
popa
xchg
and
pusha
lret
dec
mov
inc
xor
mov
mov
cltd
mov
lock
test
mov
xor
xlat
add
xor
dec
lahf
mov
and
mov
fbstp
xchg
jecxz
cltd
and
and
hlt
mov
outsl
and
pop
push
popa
fildll
mov
scas
aad
inc
push
loopne
mov
stos
push
aaa
inc
adc
mov
pushf
aad
mov
add
cmpsl
mov
mov
insl
pop
sbb
addr16
fcmovnb
shll
xchg
pop
gs
xor
jbe
mov
mov
mov
mov
popf
dec
or
mov
xchg
mov
mov
lret
mov
pop
sbb
out
insl
sub
adc
or
negb
sbb
out
rcrl
pop
mov
xor
es
cmpl
pop
mov
xor
pop
rcll
mov
mov
out
mov
xchg
add
inc
mov
cmpsl
mov
dec
add
pop
imul
ret
incb
cmpsl
bound
inc
fiadds
pop
jp
ret
mov
push
push
xchg
push
mov
inc
repnz
pop
loope
adc
push
jb
xchg
popa
jmp
mov
in
inc
xorl
push
cmpsl
pop
mov
scas
add
xor
loop
repnz
mov
cmpb
mov
rcr
xchg
add
xchg
mov
jmp
loope
pop
mov
and
cmc
mov
xchg
jp
inc
pop
mov
mov
or
mov
aaa
in
jns
cld
imul
mov
mov
pop
lahf
mov
daa
jmp
mov
and
or
mov
out
xchg
mov
mov
mov
enter
aaa
outsl
mov
adc
mov
sbb
int
sbb
ret
loop
push
cmp
sbb
movsb
inc
jnp
dec
nop
cmp
xlat
push
nop
mov
cmpsl
out
test
incb
js
scas
popf
adc
mov
adc
cmc
xor
outsl
dec
mov
jp
icebp
mov
jl
mov
xchg
shll
jae
mov
mov
pop
cmp
sub
add
pop
mov
or
fs
or
pop
xchg
test
jge
fidivrl
outsw
mov
push
push
mov
adc
mov
jle
mov
rorl
fnstenv
aam
popf
sbb
pop
imul
jmp
lods
stos
mov
inc
and
mov
shrl
lcall
mov
xor
out
int
mov
mov
mov
sub
adc
sbb
mov
out
dec
mov
cwtl
clc
jnp
repz
out
mov
xchg
cmp
xor
and
sbb
rorb
mov
jne
pusha
jge
insl
xor
inc
and
xchg
and
pop
daa
jnp
pop
shll
mov
mov
mov
mov
cltd
hlt
jg
insl
imul
insb
mov
nop
xor
lods
adc
push
neg
lret
cli
xlat
je,pn
data16
sbb
push
add
push
fwait
xor
add
out
inc
xchg
movsl
fcomps
mov
ss
mov
movsl
mov
cmpsl
push
loope
leave
push
js
loopne
std
stos
cwtl
lahf
sub
orb
and
cmp
les
loope
adc
sbb
add
andl
inc
mov
inc
inc
and
scas
pusha
imull
in
repnz
inc
jmp
mov
cltd
jge
mov
mov
mov
jg
sarl
xlat
xchg
test
mov
pusha
cmc
push
mov
sub
inc
mov
cmp
int
xchg
loop
cwtl
movhps
popf
dec
mov
ret
mov
inc
les
inc
mov
sub
cmp
not
sbb
cwtl
movsb
mov
mov
ljmp
movsl
cwtl
jle
ret
fxtract
mov
xor
xor
and
xchg
mov
out
je
inc
pop
fwait
mov
adc
sub
loope
cmpsl
mov
add
jne
mov
and
mov
mov
inc
pop
or
ljmp
mov
mov
sub
mov
orl
outsb
adc
aam
scas
xchg
jnp
sbb
pop
jl
mov
shl
add
repz
mov
push
adc
and
sti
xor
mov
insb
enter
fs
fdivs
and
and
shlb
and
adc
pop
and
cmp
mov
cmp
or
xor
mov
xorb
jb
jne
cmpsb
or
insl
daa
scas
jp
mov
sbb
pop
mov
cmp
push
jg
add
cmpl
cmpsl
xlat
fld
cli
dec
repnz
inc
in
mov
mov
dec
mov
arpl
cli
cmpsl
dec
les
mov
jmp
xchg
mov
add
popf
stos
rcll
mov
cmpsl
bound
imul
mov
fildll
xor
inc
jbe
mov
inc
movsl
jae
adc
mov
mov
mov
jmp
push
fcomps
iret
or
inc
test
inc
xorl
adc
test
lret
das
leave
push
int
mov
es
into
mov
push
adcb
ret
mov
mov
mov
sub
inc
mov
cwtl
ljmp
loope
cmp
pushf
mov
push
mov
jnp
fidivrs
push
and
adc
mov
js
xchg
mov
jl
fisubl
fs
and
dec
out
sbb
sbb
ss
call
flds
adc
inc
pop
pop
adc
and
cld
xchg
mov
jb
movsl
adc
out
dec
mov
fcomps
sub
sahf
jecxz
outsl
mov
into
mov
test
mov
aad
mov
mov
and
lods
mov
push
mov
add
cld
std
cmp
loop
movsl
mov
or
sbb
sbb
pop
in
int3
and
dec
mov
jg
and
sub
notl
test
daa
dec
mov
push
pop
test
mov
daa
pop
add
out
sbb
int
andl
jl
mov
or
dec
inc
or
mov
adc
pop
test
mov
xchg
sbb
mov
sbb
scas
mov
ret
cmpsl
jp
sahf
push
mov
test
lcall
out
cmpsl
dec
stc
mov
dec
stos
mov
mov
cli
pop
mov
push
jne
cwtl
mov
pop
das
stos
mov
pop
sub
mov
xchg
adc
lock
cltd
jne
mov
ss
jmp
insb
push
lock
add
repnz
mov
adc
imul
cwtl
cwtl
mov
xchg
add
mov
mov
lahf
stos
jne
loop
sbb
out
mov
ret
push
jae
mov
movsb
inc
leave
jmp
push
pop
shll
xor
shr
js
mov
mov
movsl
ret
jno
push
incb
cmpsl
cmpsb
clc
jg
rorb
cltd
aaa
jl
mov
sbb
mov
repnz
sub
loopne
xor
add
mov
cltd
mov
mov
xor
gs
js
or
sbb
loopne
addb
mov
xchg
bound
and
sub
mov
xchg
fdivs
cmp
sub
mov
es
mov
mov
pop
movsl
mov
mov
mov
mov
test
mov
outsb
push
and
arpl
sbb
pop
es
mov
cwtl
cli
pop
les
mov
cwtl
dec
rolb
and
std
cld
inc
rorl
pop
cmpsb
negb
xlat
scas
and
adc
cmc
movsl
push
sub
mov
imul
stos
js
cmpsl
mov
movsl
push
rcl
imul
ds
mov
flds
mov
jbe
stos
jne
jmp
mov
mov
mov
pushf
pop
clc
pop
push
daa
mov
push
out
mov
insl
mov
adc
inc
cmp
pop
mov
adc
mov
loop
inc
popf
add
mov
and
mov
leave
mov
inc
ret
or
fs
cli
adc
pop
jp
arpl
mov
jo
testb
je
and
stos
sub
xchg
pop
nop
aad
mov
mov
jecxz
sarb
in
lret
loope
outsl
in
mov
cmp
and
cmp
aaa
sbb
pop
loop
popa
mov
adc
outsl
or
stos
rcr
jnp
shll
movl
cmpsl
and
xlat
push
das
fwait
cmpsl
mov
jns
adc
cwtl
stos
push
arpl
pop
xchg
test
cmp
data16
jmp
sbb
mov
push
mov
and
loop
cmp
inc
scas
int3
mov
decl
cmpsl
mov
shll
imul
aaa
cmpsb
ds
inc
in
xlat
addl
mov
push
cmpsl
les
es
fnstenv
xchg
cwtl
xorb
movsl
xchg
lds
lock
das
mov
mov
sbb
ja
ss
lea
arpl
cwtl
mov
test
sbb
mov
ja
cmpsl
fwait
sbb
test
loope
cmp
outsl
cmp
scas
push
mov
sub
popa
xor
jb
and
cmp
ret
fsubrl
mov
dec
movsb
jns
fxch
out
mov
aad
adc
cmp
ja
pushf
pusha
addr16
cmc
inc
or
jns
cs
incl
jnp
in
sbb
xchg
ret
aad
pop
call
adcl
add
sub
and
test
inc
sbb
sbb
test
shll
cmp
push
mov
pop
jp
gs
ret
loop
pop
sub
cmpsb
mov
jb
push
mov
fs
test
outsl
inc
mov
ret
icebp
pusha
add
xchg
mov
push
sbb
rcrb
or
fistl
mov
sahf
and
or
lret
in
cmp
loopne
cli
lock
push
cwtl
pop
fsubrp
adc
mov
movsl
cmp
pop
dec
mov
push
cltd
dec
sbb
inc
dec
sub
mov
loope
scas
mov
mov
sub
movsl
mov
and
cmp
adc
pushf
mov
mov
adc
clc
aaa
je
lret
push
add
test
and
fsubs
pop
pusha
shl
scas
repz
push
test
fucom
test
add
dec
aaa
inc
je
jecxz
nop
scas
and
fsincos
inc
subb
mov
insb
test
mov
mov
xor
mov
aad
add
mov
cmc
push
insl
cmpsb
inc
jns
and
ret
rorb
cwtl
movsl
mov
mov
es
cmp
mov
ja
loope
ret
sahf
inc
stos
call
jecxz
lock
std
dec
sti
inc
loop
xchg
and
xorl
aaa
popf
notl
gs
jp
xor
shlb
mov
mov
sar
cmp
cmp
mov
sbb
mov
lahf
xchg
aas
lock
out
test
mov
icebp
sbb
adc
dec
mov
or
jnp
mov
mov
and
stc
in
scas
mov
pop
add
push
mov
mov
cs
xchg
mov
test
mov
dec
loopne
jg
mov
shl
orb
daa
cmp
mov
es
mov
flds
adc
mov
and
xor
cmpsl
cmp
outsl
cmc
fldenv
cld
mov
jge
and
xlat
out
iret
les
xor
fwait
jle
lret
imul
mov
test
ret
in
inc
clc
mov
out
cs
jecxz
insl
loope
xchg
jg
xchg
pop
mov
xchg
push
popl
aam
mov
and
popa
daa
enter
add
ja
mov
mov
neg
mov
test
and
mov
insb
mov
cld
pop
es
add
mov
rcrb
and
lcall
adc
mov
xchg
inc
jb
shr
push
out
pop
add
insb
ds
jmp
xchg
dec
cmp
mov
dec
xlat
or
push
mov
xchg
movsb
rcrl
ds
out
inc
mov
or
cmpsl
and
pop
movsl
cld
mov
mov
xchg
lods
dec
bound
xlat
push
jb
sahf
std
jmp
mov
mov
in
and
aas
mov
cli
cmpsl
sbb
loopne
fstps
jno
push
dec
push
mov
mov
mov
mov
js
sbbb
inc
cmpsl
cmp
jp
inc
push
xlat
mov
inc
dec
ja
iret
adcl
mov
sti
pop
mov
lret
mov
jnp
cwtl
es
adc
jmp
or
xchg
pop
jmp
fs
mov
cmpsl
mov
mov
call
testb
or
mov
outsb
or
mov
rorl
fnsave
fisubrs
lds
mov
jmp
shrb
jp
jle
scas
jne
mov
or
jo
mov
insl
mov
inc
inc
cld
imul
pushf
mov
aaa
fsubrl
out
leave
sbb
xor
or
pusha
stos
sub
ret
or
dec
das
mov
lods
aad
loop
test
pop
fsub
scas
cmpsl
adc
mov
fcmovb
mov
mov
pop
adc
pop
cmpsl
out
mov
inc
push
aaa
pop
mov
out
xorl
inc
mov
scas
sbb
mov
mov
loopne
sub
in
xlat
insb
push
movsl
stos
jne
jecxz
and
arpl
and
aas
mov
cmp
xor
add
clc
aam
jbe
sar
lock
add
xchg
inc
adc
mov
mov
and
mov
insb
push
aas
cld
scas
jge
mov
imul
sbb
or
mov
sbb
imul
xchg
hlt
lahf
cltd
sub
sub
scas
inc
mov
sti
or
ds
lahf
int
mov
loope
outsb
sbb
push
insb
and
leave
or
mov
fsubrp
or
add
jae
shrl
leave
out
pop
xchg
sub
dec
mov
push
jno
loope
mov
jp
mov
jbe
fidivl
lret
movsb
cmpsl
call
lds
pop
and
jb
std
test
lahf
xchg
in
mov
xor
mov
shll
shrl
in
xor
cwtl
jbe
lds
lahf
mov
and
sbb
inc
lods
pop
movzwl
shll
mov
testb
mov
pop
bound
cmp
int
addl
stc
ret
sbbb
push
pop
aas
es
inc
scas
cmp
cmpsl
fucomip
fsubp
mov
sbb
push
cmp
jp
push
mov
add
fwait
movsl
pop
mov
rcrl
mov
dec
dec
pop
pop
mov
test
inc
or
mov
xchg
lock
add
sbbl
mov
sbb
mov
or
push
pop
xor
out
jo
mov
mov
aaa
out
mov
inc
cli
mov
ret
xor
xor
mov
loope
cmp
sbb
mov
push
push
sbb
inc
inc
mov
iret
movsb
pushf
mov
mov
cmp
mov
dec
arpl
inc
mov
cmp
push
sbb
cmp
frstor
ss
mov
jne
jnp
adc
pop
jno
cmp
xchg
mov
mov
push
aad
mov
cmp
pusha
stos
int
push
outsb
mov
mov
sub
imul
sub
pop
int3
sbb
xchg
xchg
js
stos
mov
cwtl
cmpsb
mov
ds
xor
adc
xlat
aam
dec
xchg
adc
mov
rorb
mov
gs
in
repz
jecxz
mov
jno
add
push
mov
cmp
sbb
lods
mov
cwtl
mov
mov
cli
cwtl
sub
stos
add
sbb
stos
cmpsl
inc
into
and
shlb
hlt
subb
mov
and
out
mov
xchg
arpl
pop
or
icebp
cmp
mov
mov
stos
nop
out
leave
mov
xchg
mov
sbb
xacquire
movsl
mov
lds
shlb
sub
inc
mov
jge
xor
scas
pushf
fdivs
push
pop
cltd
cmpsl
cltd
inc
les
andl
sbbl
int
test
pop
shll
mov
jae
fsubl
cmp
jnp
and
mov
mov
xor
jae
mov
pop
push
cmpsl
or
jmp
rolb
inc
push
and
xlat
sbb
jns
xor
int
pushf
adc
mov
cltd
popf
cmp
bound
mov
int
mov
mov
cmpsb
cmp
mov
movsl
pop
xchg
daa
fs
mov
xlat
les
mov
adc
lret
fcoms
cltd
out
loop
shll
dec
pop
ret
xchg
scas
aad
cmc
push
mov
xlat
mov
mov
arpl
ret
jns
xchg
jle
mov
mov
mov
loop
mov
cmp
lds
test
movzwl
movsb
mov
or
aas
cmp
cwtl
lods
pop
lcall
outsl
scas
enter
in
mov
mov
popa
add
jbe
or
in
into
jns
call
cmp
mov
mov
mov
inc
xchg
push
xchg
mov
cmpsl
mov
push
lock
inc
mov
sti
outsb
adc
shlb
enter
cltd
mov
popa
inc
push
fidivl
mov
and
xor
push
shll
add
fwait
mov
aaa
mov
shr
pop
scas
inc
mov
mov
int3
cmp
dec
xor
shlb
loope
out
adc
popf
jnp
cmp
enter
in
int3
cmp
xchg
lock
out
jp
push
jno
inc
or
aaa
movsl
mov
jecxz
inc
inc
mov
mov
das
rcrl
sbb
mov
mov
and
rcr
mov
adc
jge
inc
jns
out
xchg
push
scas
dec
test
insb
data16
test
inc
pop
ret
push
stos
mov
in
sarb
push
xchg
xlat
scas
icebp
syscall
pop
gs
mov
xchg
inc
jmp
add
mov
test
mov
out
jbe
jnp
mov
push
xchg
mov
mov
dec
ss
pop
add
sub
outsl
stos
inc
js
les
push
dec
cltd
fsubrs
pop
insl
shll
psubd
mov
adc
imul
push
adc
and
pop
int
lods
out
mov
fwait
mov
mov
dec
repz
lret
xchg
gs
xor
mov
or
movsl
xor
test
ret
jo
or
adc
xor
mov
call
mov
lahf
stc
in
mov
imull
es
jmp
mov
inc
pusha
mov
and
cmpsl
test
fsubrs
arpl
ret
fnsave
xchg
mov
scas
fsubs
mov
or
hlt
sub
mov
test
addl
lods
sub
gs
xchg
nop
xor
int
cmpsl
cmp
cmp
cltd
adc
mov
and
pop
jp
cmpb
nop
inc
aas
jae
jl
lds
movsb
aas
shlb
cmp
cltd
cmpsb
cmp
sbb
mov
pop
push
and
add
test
xchg
cmpsl
cmp
pop
test
out
orb
icebp
xchg
jnp
andb
int
mov
and
mov
enter
sbb
cmpsl
fstps
push
aad
sysexit
fstpt
sbb
mov
stos
mov
push
add
mov
push
lods
es
lock
aas
jecxz
movsl
shll
rorb
mov
lcall
mov
sbbb
push
and
push
repnz
cmp
xchg
mov
cltd
or
rolb
add
ret
mov
loope
push
adc
into
xchg
cmc
mov
xor
pop
gs
mov
mov
and
cmc
cmp
negb
pop
iret
mov
xor
sub
xchg
mov
mov
arpl
icebp
push
cmp
hlt
mov
pop
stos
scas
inc
xor
addr16
mov
jl
dec
and
mov
cld
insl
je
xor
and
test
jnp
cmp
jae
ss
repnz
mov
loop
add
push
rclb
fcoms
adc
push
xchg
cmp
data16
jae
sbb
fnstenv
mov
inc
fs
add
xlat
sbb
scas
imul
aaa
mov
cmp
idivl
mov
push
inc
jl
out
ret
add
mov
test
add
pop
leave
mov
arpl
data16
test
sarl
mov
jbe
movsl
mov
fbstp
in
cmp
xor
mov
sbbl
pop
sti
ja
std
mov
fsubrs
mov
mov
xor
xor
inc
loope
mov
mov
fwait
xchg
push
daa
ja
mov
imul
mov
push
mov
mov
mov
movsb
mov
scas
ljmp
addb
xor
mov
fmulp
mov
pop
in
arpl
rcrl
sbb
dec
push
mov
fnstenv
push
mov
imul
out
fdivs
and
mov
leave
push
shlb
sbb
cmpsl
pop
jne
push
cmp
mov
adc
mov
lahf
clc
leave
call
fwait
inc
xlat
dec
dec
adc
mov
mov
xchg
in
sbb
stc
adc
cmp
bound
pop
mov
out
jecxz
ficoml
inc
scas
les
scas
mov
cs
in
rolb
cmpsb
mov
scas
dec
and
loope
jae
mov
ds
sbb
dec
mov
iret
inc
mov
fcoml
pop
mov
pop
jno
mov
push
lahf
jmp
adc
xlat
and
jmp
mov
pop
cmovb
js
idivb
cmp
shll
mov
mov
cltd
sub
jg
cmpsl
popa
mov
movsl
test
cmpsl
mov
scas
mov
cmpsl
and
xor
adc
leave
xchg
rcrb
scas
into
shrd
adc
push
inc
xlat
xchg
mov
dec
icebp
mov
shl
pushf
loop
jg
or
inc
cmp
dec
fwait
jbe
mov
lcall
fucomi
push
mov
inc
mov
in
mov
mov
mov
fmuls
lods
cmpsl
call
lret
jb
dec
in
mov
cli
jecxz
mov
dec
cmpsb
xchg
loop
and
mov
clc
fimuls
mov
xor
mov
nop
sub
iret
std
testb
pop
in
sbb
adc
mov
sub
mov
fisttpl
xchg
out
mov
cmp
sbb
out
sbb
pop
fwait
jo
stos
mov
xorb
push
push
lret
mov
inc
xor
idivb
add
mov
subl
loope
or
mov
imul
into
cltd
push
adc
xchg
push
imull
jmp
cmp
aas
inc
mov
jo
and
in
cmp
or
jno
repnz
mov
xchg
test
movsl
stos
out
sbb
mov
inc
cltd
pushl
lods
mov
mov
data16
mov
xchg
adc
leave
ja
je
mov
cmp
mov
xlat
xchg
loopne
sub
pmulhuw
mov
inc
mov
inc
dec
test
jae
sub
scas
call
jns
fsubrp
cmp
jo
ror
ds
inc
fs
mov
nop
loop
jns
subl
aaa
lods
iret
pusha
xor
hlt
jae
pop
adc
sub
cwtl
jno
aad
mov
xchg
out
mov
enter
mov
mov
sub
fwait
xlat
out
mov
adc
and
lods
mov
bsf
scas
mov
mov
jmp
sbb
xor
mov
pop
mov
and
sub
lods
das
mov
movsl
popf
cwtl
mov
scas
loop
push
mov
dec
iret
jp
and
cltd
mov
int
cwtl
filds
ficomps
clc
mov
jns
div
sub
fincstp
jge
cwtl
adc
sbb
or
mov
add
mov
mov
test
movsl
je
loopne
daa
jae
xchg
mov
mov
mov
subb
mov
popf
mov
fistl
mov
shll
ficompl
repnz
mov
shlb
mov
cmpsl
add
or
scas
js
cmp
cmp
daa
cwtl
sbb
lret
stos
cwtl
pop
mov
neg
in
mov
sbb
imul
mov
sub
cwtl
cmp
hlt
and
fmulp
jb
sbb
xchg
and
je
leave
push
loopne
imul
out
sbb
mov
cmc
int3
cmp
scas
cli
inc
dec
data16
pushl
lret
jp
in
js
mov
push
movsb
rclb
push
fisubs
rcll
mov
mov
xchg
mov
xchg
and
lret
outsl
mov
mov
xchg
mov
xor
mov
push
sbb
rol
add
loope
idivb
pop
out
lcall
add
test
inc
icebp
popf
mov
sub
mov
xor
cmp
jno
mov
lods
or
add
imul
sbb
sbb
aad
shll
mov
mov
jge
stos
or
movsb
insb
arpl
jp
xor
and
or
xchg
movsb
jae
mov
cmp
out
mov
jmp
test
test
or
fidivrl
push
mov
jno
mov
push
mov
or
jo
movsl
lret
push
call
jbe
mov
fmuls
mov
pop
add
cs
arpl
push
dec
scas
mov
lret
sti
and
add
xor
dec
divb
jns
rorb
xchg
clc
lahf
sarl
icebp
leave
jmp
mov
in
cmp
dec
sar
mov
push
iret
mov
sbb
sub
adc
xor
lods
loope
shr
cmpsb
mov
ds
test
dec
xor
pop
jge
mov
ret
mov
mov
pop
push
stos
xor
mov
jns
xlat
xchg
rcl
es
sbb
scas
xchg
lds
push
xchg
imul
lret
mov
pop
jne
sbb
push
cmp
int3
lea
add
adc
push
cli
add
lahf
xchg
mov
jne
movsb
js
out
mov
xchg
and
out
ljmp
cwtl
cmpsl
mov
mov
popa
test
pop
inc
in
lret
mov
out
lods
dec
test
fldlg2
add
pop
loop
sub
stos
sarl
sub
jecxz
xchg
popa
mov
and
popf
inc
cmpsl
adc
sar
scas
and
push
lahf
popa
inc
mov
mov
ss
fnstsw
push
mov
inc
aas
mov
das
popf
inc
aad
xlat
and
push
je
xchg
pop
js
cld
xor
lods
mov
xchg
push
jne
xlat
mov
aaa
insb
xor
cltd
lea
ficomps
cmpsl
fldenv
sbb
movl
mov
hlt
ret
mov
mov
mov
cwtl
sbb
dec
mov
push
fsubrp
xchg
pop
loopne
mov
out
movsl
stos
push
js
mov
scas
sbb
push
aaa
mov
shll
jle
loope
mov
test
pop
negb
jb
lret
mov
mov
dec
shrb
inc
stc
ja
scas
in
push
mov
and
shlb
mov
jno
inc
adc
mov
mov
add
shlb
dec
mov
shll
jnp
inc
dec
fildll
xlat
xor
lahf
and
or
push
xlat
lods
add
je
pop
add
notb
xor
dec
sbb
daa
stos
sahf
les
test
movsl
xlat
iret
jmp
sbb
inc
push
mov
cmp
ficoml
gs
lcall
mov
jge
sbb
cmp
and
aas
orl
add
addr16
bound
push
test
xchg
xor
andl
jmp
loopne
into
shrb
ja
out
test
shll
in
sub
add
dec
lahf
fistps
imul
push
jns
add
and
inc
sbb
mov
lret
imul
mov
std
cmp
sbb
mov
dec
mov
clc
addl
je
cltd
cmp
mov
stos
fidivl
mov
dec
fstps
cmpsl
fcoml
test
mov
xchg
movsl
and
cmpsl
sub
and
xchg
dec
mov
daa
mov
inc
mov
aaa
jmp
xlat
mov
adc
xlat
mov
and
stc
and
cltd
ja
inc
pop
fbld
pop
mov
out
fnstenv
or
into
jmp
mov
push
inc
ret
lret
lods
arpl
ret
jbe
jecxz
std
clc
cmp
loope
repnz
aam
decl
xchg
sub
mov
mov
xchg
jns
cmpsb
inc
push
les
jae
ja
cltd
cmp
mov
mov
mov
mov
mov
push
imulb
int
add
popa
mov
rcll
add
mov
test
arpl
xchg
xchg
push
rcr
subb
mov
cmc
cmp
sub
andnps
xor
fists
pushf
push
pop
and
sub
adc
mov
aam
shll
mov
or
daa
scas
sub
xchg
loop
test
mov
cs
xchg
cwtl
mov
lods
cli
adc
mov
mov
sub
jnp
pop
mov
mov
movsb
mov
cmp
mov
xlat
pushf
push
xor
fdiv
int3
jns
sub
cmp
das
jnp
sbb
xor
fcmovbe
add
mov
dec
mov
daa
cmp
add
cmpsl
mov
mov
not
push
jns
je
cli
cmpsl
jge
pop
imul
mulb
jns
bound
or
sbb
push
xchg
xchg
cmp
mov
xorl
cmpsb
es
and
out
cmpsl
pop
mov
mov
lret
shll
cmpsl
sub
jl
ds
fwait
or
fildll
mov
sahf
xor
stc
movsl
shrb
cltd
scas
xchg
sbb
push
xchg
cmpsb
jnp
aad
mov
cmp
mov
mulb
pop
mov
cmpsb
and
fidivs
mov
cmp
stos
fldl2e
cwtl
mov
xlat
sbb
daa
cmp
pusha
pop
adcl
repnz
mov
pshufw
mov
scas
xor
hlt
add
push
mov
mov
mov
jbe
movsl
xchg
push
mov
movsb
jnp
mov
call
aas
ret
mull
xlat
mov
movsl
dec
and
mov
inc
mov
lret
adc
dec
xchg
pop
sbb
mov
push
js
or
ret
fs
sbb
mov
test
lret
rcrb
arpl
pop
xchg
shlb
mov
jge
mov
mov
outsb
dec
mov
fcoml
fucomip
stos
mov
les
shll
sbb
aam
sbb
mov
xlat
cmpps
pusha
int
mov
inc
jmp
mov
push
nop
mov
mov
xchg
mov
ja
cs
rcll
out
xchg
and
test
mov
movsl
sub
mov
inc
scas
xor
test
xchg
adc
mov
or
cltd
inc
xlat
daa
xchg
mov
out
adc
jle
mov
movsl
push
mov
mov
mov
pop
mov
mov
pop
enter
pop
and
icebp
adcl
mov
xlat
fbld
lahf
loopne
test
push
nop
mov
mov
cmpsl
add
mov
and
scas
mov
arpl
stos
push
mov
inc
and
xlat
push
mov
and
movsl
jns
mov
mov
add
push
and
mov
cmp
mov
inc
mov
lahf
fmuls
xor
jno
loop
dec
loope
mov
xor
mov
xchg
or
and
xchg
pop
mov
mov
inc
inc
and
cmp
mov
inc
mov
fdivs
xlat
idivb
and
in
mov
cli
xor
hlt
sbb
pusha
adc
ljmp
sbb
or
icebp
mov
mov
scas
mov
mov
cmp
clc
cmp
dec
mov
shll
and
sbb
int
jmp
mov
shlb
sub
ret
mov
sub
and
lea
push
in
inc
xor
xor
sahf
and
aas
cmpl
pop
int3
call
sti
pop
loop
add
mov
push
mov
cs
fildl
mov
push
cmc
xchg
mov
roll
xchg
mov
popf
test
cmp
ret
out
stos
inc
mov
xchg
mov
xor
push
xor
mov
pusha
dec
ljmp
lds
xchg
mov
sbb
cmp
mov
movsl
jnp
mov
mov
cmp
push
mov
xor
movsl
mov
std
arpl
aaa
sub
xchg
scas
dec
movl
mov
mov
movsb
ss
sub
andl
cmpsb
push
call
out
push
cmp
mov
mov
jbe
sbb
xchg
fs
mov
arpl
mov
ja
xlat
in
dec
adc
pop
sarl
les
nop
test
stos
mov
in
mov
call
rorl
movsl
imul
jg
push
fdivs
cli
xchg
inc
pusha
add
rorl
jmp
hlt
mov
pop
pop
repnz
inc
je
cwtl
and
scas
loope
jne
incl
xor
mov
push
rdpmc
aas
pop
mov
nop
push
push
cmp
push
mov
arpl
jnp
mov
cmc
andb
ret
shlb
inc
inc
xchg
sub
mov
push
lock
xchg
jns
pop
imul
xlat
into
xor
movsl
ret
mov
loop
mov
fcomp
mov
out
mov
mov
ret
mov
sbbl
jns
divb
test
cmc
cwtl
imul
cmpsl
and
jp
ljmp
sahf
stc
xor
lahf
das
int
daa
repnz
push
fbstp
test
sub
xor
mov
testl
dec
scas
push
loope
mov
out
mov
xlat
sub
jno
xor
ss
xor
ljmp
pop
dec
mov
aaa
mov
adc
pop
xchg
xchg
and
cltd
xlat
loopne
ret
popa
or
jnp
mov
mov
repz
cmp
enter
mov
sbb
mov
lods
mov
pop
fwait
leave
icebp
in
data16
xchg
jp
aam
insl
xorl
pop
dec
mov
ja
sub
jbe
cmp
push
cmp
stos
out
inc
test
mov
test
mov
jno
jecxz
and
shl
xlat
and
cmp
dec
push
divl
cs
sub
mov
mov
and
adc
stc
pop
xchg
mov
arpl
and
cmp
sbb
insl
pop
aas
mov
in
inc
mov
shlb
mov
cmpsl
mov
arpl
cwtl
mov
mov
cmpsl
xor
lods
dec
or
push
cli
cmpsb
or
mov
dec
push
or
and
lahf
mov
movsb
mov
aaa
arpl
push
lcall
mov
sbb
push
xlat
cwtl
pop
outsl
lods
out
xlat
popf
cwtl
rcll
sbb
jmp
dec
int
add
inc
sahf
adc
mov
jnp
aad
cmp
cs
bnd
cmp
add
xlat
in
and
mov
movsl
fsts
mov
sahf
popa
pop
inc
push
cwtl
sbb
mov
cmc
jb
push
and
sub
xchg
and
jp
push
mov
sbb
dec
flds
inc
mov
xchg
mov
mov
add
cmpsl
cmp
shll
mov
pop
cwtl
jbe
or
mov
mov
mov
mov
lahf
and
mov
push
les
aas
jecxz
sbb
popf
jmp
and
xor
repnz
loop
jle
add
mov
ljmp
js
push
xchg
jge
xor
mov
cmp
lret
out
loope
imul
pop
scas
int
mov
and
pop
pop
cmpsb
sub
inc
xchg
push
jnp
fnstenv
fsubr
repnz
insl
mov
jae
xchg
mov
inc
ljmp
mov
outsl
ret
mov
pop
mov
aaa
scas
fs
movsl
in
enter
rcl
sti
cs
hlt
push
xlat
stc
xor
xor
cmpsb
mov
add
hlt
mov
lds
dec
add
in
repnz
jge
popf
cmpsl
push
adc
int
mov
jle
adc
jmp
mov
in
adc
inc
jge
stos
scas
mov
push
pop
pushf
mov
mov
mov
push
mov
pop
mov
or
mov
push
addl
mov
out
mov
in
dec
pusha
loope
testl
mov
mov
jle
xor
jo
inc
mov
mov
mov
mov
and
iret
inc
mov
push
loop
lea
jb
push
jge
loope
scas
or
push
adc
popa
mov
cs
cwtl
mov
cmpsl
adc
jae
mov
xchg
roll
int
arpl
push
scas
mov
and
sbb
xor
cltd
repnz
dec
mov
rep
and
insb
adc
sbbl
jge
jp
cmp
sbb
inc
shlb
xlat
xor
pop
xor
mov
lods
das
jae
cs
aaa
push
and
mov
mov
dec
pop
pop
imul
mov
mov
dec
jne
xchg
outsb
mov
scas
mov
xor
mov
stos
xlat
fwait
push
pop
dec
inc
movsl
mov
test
mov
popa
nop
mov
daa
xchg
sbb
jl
loopne
mov
mov
cmpsb
arpl
leave
ja
jecxz
mov
movsl
inc
mov
sbb
push
xor
ljmp
mov
sub
arpl
mov
mov
adc
sub
scas
mov
dec
xchg
dec
jno
xor
bound
cmp
adc
and
cli
mov
movsb
sub
outsl
sbb
mov
clc
mov
mov
mov
flds
pop
lds
rorb
mov
fldl
lods
mov
jl
mov
and
insb
loope
xor
mov
cmpsb
add
lods
cltd
sar
fsubrl
push
xor
cmpsl
sbb
into
push
mov
pop
das
jb
mov
cmpsl
outsl
xchg
mov
cmp
rcl
jns
mov
mov
fwait
xor
mov
decb
outsl
cmpsl
jbe
adc
mov
ret
in
push
insl
lods
mov
pmulhuw
mov
xchg
pop
jne
mov
xor
test
xlat
mov
xchg
push
xchg
jo
cmpsl
or
aas
sbb
cmpsl
xlat
icebp
sbb
insl
mov
mov
adc
and
sub
stos
mov
movsb
push
in
dec
test
cld
cmp
aam
ja
cs
sbb
outsl
mov
mov
push
in
jne
addr16
xor
out
cltd
std
mov
cmpsb
push
or
mov
in
arpl
jae
and
push
mov
mov
add
movsb
xlat
out
mov
pop
sbb
int
push
or
movsl
jp
mov
shl
lahf
mov
jbe
and
push
mov
cwtl
shlb
add
rclb
inc
or
mov
bound
loopne
in
cmp
mov
dec
mov
pusha
test
rcr
push
pop
xchg
mov
add
jnp
jl
cmpsl
dec
fucom
cmp
je
push
bound
fnstsw
sbb
mov
push
stc
pop
push
ss
push
ja
mov
scas
ja
and
ss
mov
addr16
adc
dec
ds
xchg
mov
das
cmp
dec
adc
xchg
mov
dec
test
cmp
xor
ds
inc
adc
das
test
shll
inc
sub
xchg
cli
jg
jnp
mov
xor
imul
in
je
pop
cltd
and
mov
mov
inc
mov
addb
je
aas
fwait
mov
rorl
push
fistps
xchg
stos
mov
les
mov
cs
mov
inc
mov
and
scas
push
pop
nop
push
sbb
mov
mov
outsl
mov
mov
xor
mov
sbb
push
adc
pmulhuw
sbb
sbb
xor
pop
imul
push
mov
ret
mov
loop
mov
or
dec
rcrl
xchg
int
cmp
in
sbb
xor
xchg
and
hlt
stos
inc
mov
mov
movsb
ffree
mov
ficomps
js
mov
cli
pop
xchg
pushf
mov
pusha
mov
mov
pop
iret
cmpsl
lret
arpl
mov
loope
add
icebp
fstps
mov
inc
mov
adc
cmpb
mov
bound
lahf
dec
mov
test
cmpsl
insb
bt
fnsave
mov
xchg
mov
lret
lods
add
mov
stos
mov
outsl
xor
idiv
loop
sbb
push
mov
pop
xlat
jb
pop
movsl
dec
aaa
lds
pop
mov
mov
mov
or
mov
test
mov
clc
xor
xchg
lret
hlt
mov
mov
aas
repnz
xor
mov
les
leave
mov
ss
jbe
dec
xlat
arpl
mov
shll
les
decb
cmpsl
mov
push
int3
and
cmp
cmpsl
leave
sub
mov
xchg
les
shlb
xchg
int
outsl
mov
mov
mov
lds
mull
mov
jno
pop
mov
pop
lds
mov
mov
ror
sub
das
push
jo
dec
mov
mov
insl
pop
scas
lret
pushf
jmp
jnp
cmpsb
cmp
push
pop
mov
or
sbb
fwait
push
adc
mov
into
inc
mov
dec
fistl
jg
mov
sub
pusha
lcall
dec
mov
xlat
jno
outsl
movsb
shlb
shlw
insb
pop
inc
addb
push
xchg
xorl
mov
push
pop
scas
mov
ror
mov
cmpsl
rcrb
jb
lea
sub
movsl
mov
movsb
stc
mov
shlb
mov
ret
ror
add
cltd
test
jns
decb
push
xlat
negb
outsb
mov
jne
xor
mov
ds
pop
mov
lahf
adc
int3
fistpl
sti
push
movsb
xchg
push
pop
pop
or
mov
test
loop
mov
mov
subl
lods
cmp
sbb
mov
mov
and
cmp
faddp
cmpsl
jno
mov
mov
in
movsb
push
cwtl
and
dec
jb
inc
insb
xchg
pop
pop
mov
lret
repz
push
mov
ror
adc
push
mov
in
add
movsl
pop
and
mov
scas
mov
shl
dec
divl
adc
dec
hlt
xchg
or
les
push
mov
sbb
mov
movb
mov
call
ret
fwait
push
inc
xchg
stos
mov
mov
lea
xlat
std
inc
mov
mulb
into
scas
psubw
xlat
sbb
fmul
ret
mov
mov
sub
mov
fimull
test
cltd
data16
cmc
cwtl
sub
movsl
bound
fisttps
and
inc
sbb
out
imul
sbb
mov
test
jae
mov
es
cwtl
or
and
mov
mov
fadd
xchg
add
mov
mov
xchg
inc
mov
xlat
stc
xlat
mov
clc
mov
mov
cld
lret
stos
mov
mov
movsl
out
xchg
std
cltd
xchg
ja
inc
pop
mov
movsl
push
roll
pusha
shlb
xor
sub
repnz
or
jg
out
mov
loop
aad
xor
cwtl
xor
mov
test
add
mov
dec
pop
aas
cs
cmpsl
xchg
xchg
mov
dec
lret
sbb
pop
mov
jns
xchg
in
mul
cmpb
or
add
imul
aas
cmp
xlat
repnz
stos
jnp
xor
mov
mov
mov
jb
xchg
std
mov
mov
mov
mov
push
cmp
pop
or
cmpsl
rcrl
mov
xchg
jle
dec
insb
jnp
gs
mov
jbe
sbbb
mov
test
xor
pop
sub
cmpsl
movzwl
xchg
or
ljmp
pop
mov
inc
mov
push
and
mov
cmp
mov
mov
and
cmpsl
sbb
iret
int3
mov
push
jecxz
stos
jmp
or
out
imul
es
out
jo
dec
inc
sub
xchg
mov
dec
adc
mov
lret
rcr
test
rcll
mov
pop
rol
mov
mov
sbb
ljmp
or
cld
ret
jnp
mov
xor
aad
mov
mov
sub
movsb
fxch
inc
mov
mov
cmp
push
mov
mov
mov
mov
out
ja
mov
inc
cmp
mov
arpl
out
and
and
sbb
dec
addl
inc
imul
adc
hlt
cmp
pop
lock
bound
mov
push
js
icebp
push
out
sbb
mov
mov
adcl
test
inc
mov
imul
cmc
dec
testl
adc
lods
push
xchg
pop
mov
mov
test
movsb
fsubrs
mov
mov
dec
clc
mov
jbe
mov
std
xor
mov
lods
cmp
lret
sub
mov
data16
and
pop
incb
addr16
mov
mov
cmp
enter
repz
xchg
or
call
dec
rcll
dec
dec
cmpsb
pop
pop
lret
mov
roll
loop
test
clc
mov
daa
sti
into
push
xor
push
pusha
mov
loop
mov
dec
xorl
mov
and
shlb
xor
inc
cmpsl
add
xchg
fstp
lret
pop
mov
loope
push
mov
mov
ret
mov
aam
xlat
test
dec
imul
mov
sbb
dec
jmp
dec
roll
aam
pop
andl
jl
cmpsl
pop
mov
stc
addr16
stos
xchg
cmp
add
inc
aas
fdivrl
xorl
stos
leave
sbb
mov
xchg
xchg
ror
mov
mov
divl
mov
test
fdiv
outsl
fs
inc
mov
test
das
jmp
aaa
mov
mov
xchg
pop
es
fdivl
mov
cltd
cmc
lds
dec
xchg
adc
int3
xchg
push
adc
mov
mov
jnp
cmp
repz
int
call
neg
add
sarl
out
lret
jae
mov
in
ret
int
xorl
mov
out
movsl
jbe
adc
les
int3
inc
mov
pop
inc
inc
enter
mov
repnz
lret
scas
mov
mov
push
push
sbb
xor
pop
lcall
cmpsl
mov
leave
fadd
xor
xchg
pop
cmc
test
clc
fnstsw
pop
shll
dec
popf
mov
mov
mov
shll
push
mov
cmc
dec
ret
inc
push
mov
repz
jne
je
fisubs
or
mov
and
in
filds
movsb
mov
ljmp
pop
or
sbb
test
cwtl
ja
int3
stos
mov
lahf
das
push
mov
xchg
movsl
pop
in
pop
cld
cwtl
or
pop
jno
test
mull
jle
stos
cmp
and
sbb
push
cmpsl
jg
mov
fcomps
fldenv
mov
clc
stos
push
shlb
pushf
mov
fdiv
out
mov
xor
lock
jle
and
mov
iret
inc
dec
ret
jecxz
pop
loope
daa
cmp
adc
bound
outsl
jnp
xorb
test
shlb
mov
and
push
jne
mov
shlb
mov
sti
cmpsl
mov
inc
sub
in
shld
leave
mov
push
push
repz
stc
insl
mov
jecxz
arpl
cmp
xlat
mov
lret
pop
mov
mov
add
add
mov
push
mov
and
fsubl
sbb
test
jo
add
mov
repnz
loop
and
sub
mov
std
mov
cld
pop
inc
ret
sahf
jecxz
mov
inc
call
sub
lahf
add
cmpsl
cmc
mov
lret
lcall
sbb
push
mov
pop
insb
mov
pop
mov
decl
push
lahf
inc
lcall
mov
jns
xor
mov
lods
sbb
mov
pop
pop
or
jae
lds
xlat
pusha
rolb
mov
pop
lods
mov
pop
inc
cwtl
sti
or
dec
clc
mov
mov
add
push
stos
mov
movsl
cmp
push
add
pushf
lea
sbb
mov
mov
lods
ret
pop
lea
fsubl
and
xor
sbb
nop
mov
push
mov
xlat
and
pusha
in
arpl
aaa
push
movsl
lods
sbb
enter
mov
pop
mov
add
rcrb
mov
jmp
out
xor
cs
int
mov
sbb
xor
mov
xor
iret
mov
icebp
sbb
mov
out
or
outsb
mov
pop
mov
testb
ss
xchg
scas
adc
stos
mov
adc
arpl
iret
add
mov
dec
daa
sub
pop
stos
push
jns
adc
leave
int
xorl
mov
dec
dec
push
mul
xchg
imull
sub
pop
mov
out
sbb
aam
push
pop
cmp
ficomps
lcall
sbb
sub
mov
cmp
push
fmul
adc
mov
pop
sbb
dec
pop
ret
rcrl
mov
stos
pop
insb
fisttpll
mov
cmp
mov
push
xorb
roll
xchg
fistl
push
sbb
jb
fcoml
inc
dec
pop
addr16
mov
cmp
xchg
gs
xlat
jb
jns
cmpsl
inc
movsl
bound
xlat
pop
dec
stos
jl
xor
xchg
aas
mov
sub
add
mov
cmpsl
arpl
shlb
cmp
push
rcr
inc
and
hlt
mov
inc
cmp
pop
and
mov
adc
pushf
mov
ja
jae
int
test
xchg
mov
mov
cmc
movsl
sub
call
mov
leave
push
rcl
rcll
dec
daa
adc
cmpsl
mov
xlat
out
ljmp
icebp
dec
pop
cmpsl
and
inc
mov
adc
pushf
jbe
std
outsl
push
push
clc
mov
pop
test
mov
or
pop
push
dec
fnstcw
lods
loop
in
mov
cld
adc
int3
stos
shr
negl
js
sub
addr16
add
jo
clc
adc
push
fmuls
loope
mov
dec
mov
mov
lret
movsb
xchg
mov
cmpsl
jmp
or
mov
fidivl
leave
pushf
out
cmc
cmpsl
add
mov
mov
pop
mov
scas
orl
mov
icebp
inc
loop
sbb
scas
fsubrs
and
popa
mov
mov
push
hlt
mov
inc
andb
fisubs
pop
cmp
movlps
leave
test
ss
jo
or
mov
dec
and
mov
pop
addr16
notl
stos
mov
or
rolb
loopne
cmpsl
cmpl
xorb
rcl
push
out
and
testl
xchg
mov
insl
push
adc
sbb
test
mov
lods
inc
xlat
pusha
ret
shll
mov
jnp
das
cltd
xchg
mov
inc
aaa
int
adc
cwtl
sti
mov
pop
fdivrl
enter
sub
shl
mov
popf
cltd
pop
lcall
shl
mov
jbe
inc
push
fsubrs
xorl
cmp
les
cmc
mov
cmpsl
sbb
fstpt
rorb
adc
mov
popf
mov
mov
xlat
push
xchg
addr16
jge
cmp
insb
into
mov
cmp
jb
jg
pop
mov
mov
cmp
xchg
add
mov
add
fistps
xchg
movsl
lahf
cmp
push
stos
das
dec
pop
xchg
stos
incl
mov
push
jle
mov
sub
mov
push
call
out
mov
int3
sbb
xlat
mov
and
faddl
jmp
shll
xor
nop
mov
jo
leave
mov
inc
mov
jg
and
mov
int3
xor
loope
aaa
jmp
daa
pusha
out
or
dec
jns
and
insb
cmp
aaa
outsb
notl
inc
loope
imul
fldcw
inc
xchg
test
cmpsl
and
sbb
out
xor
call
xchg
pop
and
adc
scas
pop
sub
mov
pop
push
mov
mov
fwait
pop
dec
adc
cwtl
sbb
sbb
xchg
jecxz
cmpsl
adc
cld
xchg
jnp
dec
je
pop
mov
adc
xchg
mov
popa
ret
out
adcb
ja
and
mov
xchg
add
popa
cmp
xchg
cmpsl
mov
ds
push
mov
shll
int3
mov
dec
or
sub
aad
test
repz
icebp
lss
sbb
mov
sbbb
cmp
ss
pop
icebp
lret
adc
cmc
je
and
xchg
add
out
push
mov
not
or
adc
push
daa
cmpsl
inc
mov
aad
inc
add
cli
out
xchg
js,pt
pop
imul
pop
movsb
mov
mov
icebp
insb
mov
outsl
push
fidivrs
lret
mov
pop
nop
int3
ret
imul
out
mov
sub
aad
stos
mov
add
xor
ret
jge
clc
xchg
loopne
cwtl
in
testb
mov
jo
hlt
ret
mov
add
xchg
in
mov
cmp
inc
or
inc
xlat
add
fcomip
outsl
clc
inc
dec
mov
inc
pop
in
mov
mov
fldl
mov
and
sub
dec
adc
or
xor
stc
mov
in
dec
fcoml
jp
arpl
xchg
mov
dec
inc
adc
push
mov
pop
sbb
dec
cmpsb
jbe
mov
aam
push
leave
mov
stc
push
pop
dec
cmp
dec
scas
loopne
xchg
stos
mov
jae
xchg
mov
es
movsb
and
add
lret
xorb
int3
sbbb
fstl
loop
fisubrs
inc
mov
loope
or
push
mov
repnz
cwtl
mov
pop
mov
mov
aam
mov
inc
mov
loop
dec
cwtl
test
add
sub
push
mov
xor
arpl
cld
lret
mov
addb
and
sbb
pop
cmpsl
push
or
xor
js
sub
mov
dec
xchg
or
push
mov
cli
mov
dec
rcll
adc
fdivr
pop
mov
or
mov
adc
xchg
mov
pusha
mov
cmpl
lds
add
cltd
aaa
imulb
pop
adc
mov
and
mov
jne
mov
push
pop
cmp
lods
push
jmp
pushf
call
add
jmp
inc
daa
insl
scas
or
and
ss
inc
push
lahf
jecxz
lea
dec
fmull
cltd
mov
xchg
jno
cmp
sbb
fbld
data16
and
fwait
mov
mov
test
adc
scas
sub
mov
imull
and
push
cwtl
xchg
lods
mov
cmpsl
repz
and
mov
mov
mov
adc
imul
xchg
xchg
sub
lods
and
ret
jo
cmpsl
cld
mov
sbb
fldt
jne
xlat
mov
subb
test
das
pop
lcall
sub
push
mov
arpl
mov
adc
fwait
repnz
loope
mov
adc
pushf
aaa
outsl
jo
xor
xor
jl
pop
mov
push
dec
roll
xor
mov
lods
mov
and
les
cmp
incb
adc
test
sub
js
push
out
lahf
hlt
jl
jno
inc
mov
outsb
and
into
push
xlat
int
mov
jns
xchg
aas
mov
mov
movsl
mov
stc
and
shlb
mov
ss
mov
popa
idivb
mov
cmpb
call
cmpsl
mov
ja
sbb
out
mov
xchg
jnp
bswap
mov
repz
xor
cmpsl
cmpsl
lods
add
mov
inc
aam
push
mov
adc
mov
xchg
and
fisubrl
mov
stos
dec
js
cltd
cmp
mov
mov
or
push
sti
lock
cs
cwtl
aad
stos
jo
mov
cmp
sbb
loopne
mov
ja
lods
sti
sbb
xchg
inc
loope
and
cmp
and
cld
imul
mov
fcmovnu
sbb
push
imul
wrmsr
mov
mov
idivl
sbb
rorb
push
std
ljmp
push
stc
jnp
int3
xchg
movsl
add
push
int
imul
sbb
jnp
mov
mov
out
cld
mov
xlat
cmp
mov
scas
or
mov
mov
jb
scas
shl
xchg
jnp
fwait
sarb
in
cmp
cmpsb
mov
mov
hlt
add
sbb
imul
cs
inc
mov
jb
cmpsl
js
fmull
mov
mov
cmp
xlat
inc
lds
adc
outsl
lret
xchg
sbb
xchg
stc
mov
inc
push
loopne
scas
negl
es
rcl
xchg
or
mov
lcall
sub
sti
cs
or
cmpsl
mov
scas
mov
add
push
sub
adc
mov
cltd
mov
aaa
jnp
loope
mov
idivb
sub
in
dec
sub
pop
cmp
ret
cmpsl
les
mov
inc
in
ss
adc
mov
xchg
mov
test
mov
cwtl
mov
adc
cwtl
sbb
stos
mov
push
push
push
mov
int
jno
mov
in
repz
cltd
jge
push
mov
xchg
scas
mov
inc
xchg
add
sub
or
icebp
int3
jne
mov
addr16
adc
mov
stos
add
jo
mov
enter
aaa
test
mov
movsl
mov
pop
mov
inc
js
mov
xchg
outsb
movsl
jg
test
mov
xor
fwait
sub
jl
shrl
jge
jb
scas
mov
arpl
pop
mov
mov
int
push
idivl
xor
jb
fistps
sub
dec
test
cmpsl
mov
jae
or
mov
movsl
jbe
xlat
cs
outsl
stc
push
loope
mov
sbb
dec
dec
mov
mov
mov
sub
mov
push
aad
mov
lret
inc
stos
sub
mov
dec
cltd
mov
jne
or
push
fsubrp
and
mov
cmpsl
outsb
dec
ja
mov
subl
mov
push
outsl
pusha
out
add
rcr
dec
test
mov
in
sub
in
mov
movsb
mov
add
lea
mov
mov
xchg
pop
pop
int
push
dec
lock
jae
cmp
jmp
mov
ja
xor
dec
sbbb
pop
fidivl
jo
cmpsb
mov
mov
jbe
xlat
or
push
lock
inc
push
movsl
lcall
andb
loop
outsl
push
xlat
push
cmpsl
or
aaa
jp
popf
cmpsb
push
mov
jnp
lcall
int3
cltd
xchg
cld
push
mov
jg
pop
mov
sbb
out
xor
loope
in
adc
pop
and
in
mov
add
mov
cmp
mov
out
inc
adc
mov
daa
outsb
xchg
mov
mov
and
cmp
mov
scas
xor
repnz
test
pop
stos
jmp
mov
jge
and
test
or
ja
cltd
jle
and
stos
pop
jnp
or
cltd
cmp
mov
loop
mov
mov
dec
fiadds
das
loope
dec
push
add
pop
nop
cmpsl
dec
mov
lcall
or
lahf
mov
mov
pop
hlt
and
mov
mov
jmp
das
inc
push
cmc
or
loope
stc
test
and
loop
subl
xor
mov
cmpsl
cmpsl
repnz
dec
or
mov
es
jne
lret
sbb
mov
mov
fisubs
das
pop
push
jge
sbb
pushf
and
mov
mov
jl
cld
push
mov
and
mov
fdivr
fsubrl
shl
pop
imul
imul
fisubrl
sbb
stc
dec
movsl
pop
ret
mov
data16
mov
bound
adc
dec
test
and
push
neg
jl
push
inc
scas
outsb
sbb
mov
ret
sub
test
inc
loope
mov
int3
mov
mov
pop
sar
mov
sti
jmp
push
imul
cmpsb
mov
fisubrs
mov
mov
in
cltd
pop
push
js
scas
stc
add
rcl
cmp
ret
adc
scas
and
imul
mov
pushf
mull
xlat
cmp
inc
cld
scas
adc
mov
mov
divl
jb
bound
in
xor
sahf
lock
mov
inc
shlb
sub
std
and
mov
in
add
repz
out
dec
bound
negl
outsb
test
imul
mov
lds
sti
rcrl
mov
outsl
ds
mov
mov
push
mov
jnp
dec
out
and
cmpsl
push
hlt
sbb
mov
mov
popf
sbb
jnp
mov
test
ret
pop
and
out
push
or
div
fdivl
sbb
scas
cmpsl
and
dec
mov
ret
xor
cld
addr16
jne
clc
jns
stos
sbb
mov
mov
lahf
gs
mov
pop
xchg
sub
mov
jno
mov
clc
xor
fisubs
fwait
popf
xlat
lahf
test
adc
loope
mov
das
andl
or
stc
cmpsb
ret
mov
add
das
adc
bound
pop
les
mov
popa
add
mov
bound
xchg
lahf
cmpsl
mov
int
mov
stos
sti
sub
jl
bound
cmpsl
mov
push
outsl
dec
xchg
cmp
jle
mov
aas
push
mov
mov
mov
push
xchg
dec
popf
cltd
lahf
inc
jb
test
cmp
mov
push
cltd
and
leave
test
cmpsb
stos
dec
or
cwtl
sub
je
sbb
inc
mov
lods
aaa
pusha
aad
push
jnp
jns
xlat
fadd
outsb
repnz
es
and
and
mov
adc
jbe
jp
insb
push
mov
fstl
pop
inc
mov
lret
or
js
mov
and
addb
leave
mov
cmp
mov
jge
xor
stos
add
mov
lods
or
test
lahf
mov
jns
mov
sub
insl
mov
add
outsl
pop
adc
mov
aad
mov
in
lret
mov
xchg
mov
xlat
cltd
in
jne,pn
int
imull
mov
fwait
mov
aad
push
xlat
pop
leave
adc
fbld
mov
sub
les
sub
movsl
cmp
sbb
movsb
lret
scas
pop
jo
lds
ss
stos
and
mov
das
xchg
cmp
gs
iret
mov
inc
mov
pop
adc
and
add
xchg
in
pop
test
xor
jge
jl
stos
add
cmp
xorl
in
add
inc
jae
xchg
push
cmpsl
fstl
adc
xor
cmpsb
and
in
fnsave
movsb
es
enter
xchg
loop
mov
mov
or
popa
mov
xlat
push
ret
movsb
add
gs
and
cltd
push
les
ret
sbb
das
lret
out
mov
mov
adc
lret
ret
in
adc
dec
lret
mov
mov
mov
mov
mov
call
cmp
pop
jb
mov
xchg
mov
pop
cwtl
notb
mov
push
js
movsb
lcall
mov
loopne
std
outsl
cmpsl
scas
dec
mov
pop
push
out
in
or
or
cmc
push
mov
mov
add
cmp
mov
add
clc
xchg
rclb
pop
fs
push
out
xchg
fwait
dec
mov
movsl
rclb
xlat
xor
xlat
xchg
ret
fdivs
or
mov
jnp
lret
dec
cs
mov
aaa
loope
js
imulb
out
test
push
push
sub
xor
xor
sbb
dec
and
inc
popa
int
mov
cmp
loopne
inc
repnz
mov
bound
popf
in
push
mov
cvtps2pi
xchg
add
pop
mov
rol
sbb
insl
mov
cmpsb
bound
or
lock
mov
dec
movsb
rolb
and
cmp
test
xor
xor
mov
jns
loopne
sbb
add
add
shll
mov
in
mov
roll
iret
mov
dec
cmpsl
mov
cltd
mov
int
xlat
fsub
pop
das
ret
jp
pop
mov
icebp
in
clc
stos
int
negl
inc
xor
mov
jnp
pop
sarl
mov
mov
pusha
lods
outsb
mov
xor
mov
aaa
xchg
imul
pop
and
pop
hlt
cwtl
dec
and
sub
mov
and
sbbl
sub
xchg
das
popf
test
push
cmp
inc
mov
inc
and
push
fstl
add
nop
insb
push
sti
and
or
je
xchg
mul
and
sub
loope
jns
push
mov
cltd
inc
lods
movsl
nop
dec
aam
rolb
daa
mov
in
push
mov
fwait
bound
repnz
popa
push
ret
mov
mov
mov
push
sysret
stc
mov
xchg
sar
pop
in
push
mov
mov
sbb
cmpsl
icebp
push
insl
or
pushl
dec
xchg
ljmp
mov
fsubs
or
js
mov
pushf
rorl
imul
cmp
lods
std
mov
sbb
jl
mov
cwtl
add
xor
mov
inc
mov
add
inc
in
jge
arpl
orb
or
xor
aas
stc
out
dec
mov
mul
cmp
pop
inc
fidivs
xor
jl
pop
push
mov
mov
cmpsl
mov
mov
test
and
enter
clc
adcl
push
mov
jno
dec
add
repz
pushf
stc
mov
xchg
push
mov
or
pusha
lods
fs
ficoml
mov
scas
rorb
ret
fwait
lea
push
mov
ja
pushf
mov
mov
jg
add
popf
aaa
inc
leave
mov
push
outsb
jb
out
mov
cwtl
mov
xor
aaa
xor
cmp
mov
cmpsb
sti
push
leave
push
jle
mov
mov
sbb
jbe
and
and
inc
mov
mov
mov
shll
enter
xchg
call
pop
sub
cltd
pop
fwait
cmp
insl
jb
or
push
jno
mov
loop
add
jns
inc
pop
mov
jecxz
aas
push
xlat
jnp
mov
add
lock
aaa
mov
pushf
addr16
idivl
cwtl
pop
mov
mov
adc
outsb
iret
adc
lods
mov
mov
push
out
add
xchg
dec
dec
cmpsl
xchg
fnstcw
and
push
leave
mov
mov
push
fidivl
testl
jo
sub
insb
ret
or
xlat
jb
sbb
push
mov
roll
outsb
jns
or
cmp
push
cwtl
xchg
inc
arpl
xchg
cltd
aas
fadds
mov
push
lret
lods
insl
fs
cmpsb
add
scas
dec
dec
pop
scas
inc
mov
mov
pushf
imul
mov
dec
aad
pop
sti
les
fwait
aas
leave
fldl
js
out
sahf
fbld
mov
sbb
jg
mov
loope
enter
xchg
cmp
mov
lahf
ret
dec
divl
cs
outsb
mov
sbb
push
pop
aad
jg
pop
jae
push
pop
lret
sbb
fisubl
outsl
cltd
mov
out
mov
or
inc
jge
bound
rorl
mov
rcrb
jle
sbb
rolb
fmul
arpl
push
and
leave
sahf
stos
loopne
jg
cmpsl
dec
pushf
adc
bound
mov
outsb
js
out
jbe
xor
mov
mov
push
test
xlat
and
fs
cmpsb
pop
adc
gs
das
in
pop
lods
mov
mov
mov
sbb
sbb
jbe
inc
addr16
fisubrl
loop
xchg
mov
popa
sbb
mov
sub
inc
sbb
pusha
mov
scas
dec
daa
mov
or
pop
leave
call
lret
mov
sbb
mov
xchg
stos
iret
es
jle
cltd
and
cmpsl
push
xor
mov
sarl
iret
sbb
or
aam
mov
adc
jnp
insb
jge
cmpsl
icebp
push
in
pop
aaa
testl
iret
sub
pop
sarb
mov
cmp
push
jae
mov
fnstenv
outsl
mov
addr16
rorb
and
mov
in
sbb
ljmp
shlb
pop
iret
subl
pop
stc
cli
sbb
jno
rolb
xor
mov
dec
xor
xlat
test
add
js
and
cmc
stc
mov
ja
testb
sbbb
xor
lods
fbld
fidivs
mov
das
add
mov
popa
push
fdivs
ret
aam
lds
push
fsubl
rorl
jo
and
mov
xchg
jmp
cmc
scas
inc
cmpsl
ret
mov
movsb
aad
or
mov
icebp
push
pushf
xchg
aas
sub
push
scas
mov
and
out
divl
roll
push
mov
mov
jo
lahf
mov
fstpt
shlb
sbb
xchg
faddl
mov
subl
mov
dec
shll
rorl
icebp
xchg
out
push
mov
outsl
xor
mov
jns
push
in
mov
mov
rolb
out
addb
movsl
and
ljmp
rcrb
divl
ret
dec
subl
and
or
into
adc
mov
xchg
sbb
lock
pop
fwait
push
ret
xchg
push
cli
xor
and
test
in
mov
out
movsb
lea
fidivs
adc
adc
add
scas
test
mov
jb
ret
sub
xchg
dec
mov
or
xchg
dec
and
jns
insl
imul
jge
pop
test
mov
cmp
xchg
fcom
stos
dec
cmpsl
sbb
mov
xor
shrl
mov
mov
iret
or
mov
cmp
popf
mov
adc
cmpsl
outsb
div
leave
and
ss
bound
arpl
les
shlb
jge
or
scas
jecxz
jne
leave
mov
xchg
sub
pop
fmuls
push
sbb
xlat
xor
pop
scas
push
mov
cmpsl
sub
cmpb
movsb
mov
mov
sti
jns
inc
xchg
adc
mov
xchg
data16
lea
in
mov
orl
pusha
nopl
xchg
jnp
mov
jge
adc
cmpsl
inc
xchg
lods
or
div
push
shlb
outsl
xchg
mov
popf
add
pop
mov
jnp
ja
jmp
sarb
inc
sbb
inc
mov
pop
lea
ret
negb
cmp
push
imul
scas
pop
push
fdivl
mov
outsb
cmp
push
in
pop
mov
xchg
mov
lcall
int
inc
clc
jg
lds
aaa
push
fdivl
and
jl
sbbl
dec
add
mov
lahf
xor
stos
cmp
into
sti
popa
mov
or
movsb
add
xchg
mov
enter
dec
inc
push
mov
fsubrl
and
outsl
cmp
inc
push
dec
xlat
fdivs
cmpsl
fwait
add
les
add
imul
xlat
mov
or
jl
pop
stos
jns
mov
mov
out
mov
xor
mov
aaa
rcrl
mov
xor
or
mov
rclb
adc
push
arpl
movl
das
fldl2t
xchg
jno
adc
mov
mov
or
mov
add
movzbl
shll
mov
and
mov
mov
rorb
mov
int
dec
cmpsb
in
mov
mov
test
add
cmpsl
insb
cwtl
pop
jmp
rolb
cmp
inc
sbb
in
xchg
repnz
imul
aaa
cmp
imul
inc
out
mov
inc
inc
sub
les
pop
push
mov
jne
loop
or
mov
ja
and
push
push
push
jbe
cmp
fists
mov
pushf
cmp
insb
pop
mov
cmp
movsl
mov
sub
xor
pop
add
shrl
roll
jns
call
mov
xchg
cmp
jle
jbe
nop
lock
xlat
ja
adc
adc
xlat
xor
stos
mov
mov
jno
mul
das
stos
dec
mov
shlb
jbe
iret
dec
scas
mov
mov
sbb
cmpsw
inc
out
jecxz
jnp
test
jo
push
xchg
bound
in
jmp
mov
mov
out
adc
push
push
test
mov
lret
sub
pop
sbb
in
jb
xlat
adc
dec
icebp
es
mov
fldcw
jae
nop
pop
stc
pusha
mov
mov
mov
mov
dec
and
stc
les
mov
jno
pop
lds
inc
jnp
lret
xchg
outsl
mov
divb
xchg
bound
ja
xchg
mov
divl
push
push
mov
mov
in
xchg
cmc
push
mov
cmpsl
fimuls
mov
out
jp
xor
test
loop
cmpsl
xor
mov
movsl
jnp
ds
in
jns
cmp
scas
lcall
bound
push
mov
loope
pop
stc
pop
into
xchg
sbb
jae
mov
out
cmp
and
xchg
test
mov
xchg
mov
mov
and
mov
xchg
jns
std
adc
mov
cltd
lock
pop
sub
push
cmpsl
dec
std
rorl
mov
pop
jge
mov
fidivrs
xchg
mov
mov
js
rcrl
int3
dec
xlat
cmpsl
add
sbb
mov
cwtl
and
mov
sbb
jno
add
iret
mov
and
stos
dec
xchg
xchg
stc
test
outsb
andl
loopne
in
loop
xor
mov
inc
or
pop
jmp
dec
pop
sbb
leave
push
and
sarl
xchg
add
adc
jecxz
ret
dec
inc
xorl
movsb
xchg
leave
cmp
int3
xlat
jmp
inc
inc
mov
mov
aad
add
out
or
push
mov
cltd
lcall
je
jnp
lea
clc
and
bound
icebp
mov
xorb
sub
movsl
xlat
test
movsl
inc
cmc
xlat
es
data16
mov
shlb
dec
adc
movsl
sub
cmp
shll
mov
add
mov
jnp
xchg
xchg
or
cmp
jl
cwtl
mov
popa
ret
mov
ljmp
cwtl
inc
mov
mov
sarb
js
lret
mov
cwtl
adc
loope
lret
enter
mov
cmp
lcall
pop
nop
scas
dec
push
mov
cmp
ret
shll
pop
in
call
inc
hlt
mov
and
inc
ja
mov
into
les
popa
ss
mov
cmpsb
mov
test
xchg
cmpsl
mov
xchg
arpl
jns
sbb
inc
mov
mov
shll
sbb
and
sub
xchg
mov
and
pop
xor
stos
or
mov
fmul
test
jge
fstpt
mov
mov
jo
jg
mov
mov
pop
adc
inc
and
outsb
mov
mov
xor
push
xlat
icebp
jge
sbb
sbb
orl
jg
fidivs
cmp
mov
mov
sbb
test
push
gs
jne
fstl
push
dec
xlat
hlt
cmpsl
mov
pop
jbe
cmp
mov
das
cwtl
cmpsl
mov
cld
popa
and
xlat
cmpsl
push
je
scas
clc
mov
sahf
jno
mov
or
lret
xor
adc
mov
in
push
imul
pop
mov
in
mov
popf
mov
loope
cmpsl
jmp
inc
mov
sub
and
jo
mov
stos
pop
leave
fnsave
mov
adc
cwtl
sbb
mov
xlat
cmp
movsl
inc
shlb
sbb
cwtl
lcall
icebp
pushf
stos
stos
and
mov
push
lret
mov
aad
inc
rcl
outsb
push
rorb
mov
pop
sahf
cld
fsubrl
push
sbb
mov
mov
jmp
mov
dec
clc
aas
iret
cmpsb
mov
rcrl
test
inc
cmp
push
shll
mov
xchg
pop
and
cmpsl
add
imul
hlt
inc
mov
pop
xchg
jns
outsb
cmp
mov
xlat
mov
mov
popf
mov
pop
cs
jns
mov
dec
and
je
enter
xchg
int
mov
shll
aam
loopne
mov
repz
stc
lcall
jae
cld
lcall
mov
in
or
das
sub
xor
lea
in
add
fs
xor
mov
pop
nop
roll
sub
cwtl
mov
mov
loop,pt
jmp
mov
xchg
xchg
out
mov
mov
mov
loope
push
mov
jbe
xlat
cmp
adcb
movsl
movsl
stos
or
xchg
pop
sub
sar
jecxz
cltd
sti
ret
loope
mov
icebp
inc
test
mov
xor
ror
es
push
aam
adc
xlat
cmp
push
xor
xor
pop
in
lea
sbbb
scas
iret
movsb
in
fs
mov
mov
mov
or
cltd
pop
adc
je
pop
add
mov
push
cmp
test
mov
and
and
movsl
mov
mov
arpl
cmpsl
fiadds
dec
adc
aad
mov
lcall
mov
bound
movsl
int
xorl
mov
adc
pop
push
mov
into
add
dec
xchg
and
test
jp
jo
mov
cmc
cmp
insb
sub
popa
rolb
mov
inc
fisubs
leave
xchg
rcl
mov
or
or
mov
rorl
lahf
das
ja
xchg
mov
js
xlat
mov
ret
lret
mov
push
cwtl
xlat
movsb
and
movsl
lea
cmp
ret
iret
pop
cmpsl
xlat
es
mov
or
and
data16
push
mov
mov
es
out
call
mov
lret
roll
pusha
mov
mov
nop
jbe
cld
inc
mov
adc
pop
es
mov
rolb
cmpsl
pop
jns
cltd
add
mov
ret
mov
xchg
rcrb
sub
sub
scas
hlt
mov
pop
dec
push
ljmp
jns
mov
and
inc
scas
mov
es
xor
mov
add
mov
sahf
push
addr16
mov
dec
sbb
aaa
mov
int
shr
out
inc
push
cmp
sti
mov
mov
inc
in
or
jbe
push
or
mov
popa
adc
aad
cmpsb
cmpsl
outsb
xor
lods
ljmp
adc
cmp
test
mov
cmp
mov
add
call
adc
mov
sarl
test
mov
sub
push
stos
jmp
jbe
mov
mov
sbb
pop
neg
je
jp
mov
cmp
mov
inc
jbe
mov
mov
test
lds
mov
cwtl
inc
xor
sbb
push
mov
scas
xchg
enter
loop
mov
bound
cmpsl
rorb
mov
aaa
lea
mov
scas
cmp
jne
mov
cmp
cmp
jns
adc
mov
mov
cwtl
and
outsb
stos
adc
loope
mov
cmpsl
lods
aas
or
mov
sbb
add
pop
mov
loope
inc
jmp
jnp
pushf
mov
push
and
mov
movsl
adc
mov
mov
aaa
mov
mov
stc
jb
movsl
mov
lret
and
jge
cmp
fwait
xchg
inc
mov
mov
and
sbb
call
js
in
addr16
jmp
out
rorl
cmp
shll
mov
mov
push
inc
cwtl
xor
mov
mov
xor
push
xchg
sub
add
adc
lret
insl
adc
cltd
or
cmc
push
mov
or
mov
mov
jmp
pushf
adc
mov
out
lret
push
mov
jg
ret
gs
shr
jae
pusha
mov
shrb
add
fnstenv
stc
xchg
pop
xlat
sbb
js
dec
xor
sbb
mov
insb
jnp
in
pop
daa
inc
mov
push
pop
xchg
mov
xchg
out
jmp
mov
inc
daa
cmpsl
std
clc
movsb
adc
sti
stos
pop
mov
mov
dec
sarb
mov
dec
rcll
add
mov
xchg
pushf
dec
and
mov
jecxz
mov
mov
sbb
jb
add
cmp
cli
lret
scas
mov
mov
xor
cwtl
scas
shlb
cld
or
jo
sbb
aaa
add
mov
iret
jecxz
cltd
stc
dec
daa
ja
cmp
xchg
mov
mov
sti
push
mov
mov
pop
xchg
mov
dec
in
adc
rcrl
popl
jge
pushf
sbb
adc
and
sub
mov
jbe
ret
pop
fdivrs
fdivs
and
mov
int
dec
push
jg
scas
mov
xchg
cmpsl
inc
out
hlt
push
insl
mov
or
mov
push
bound
pusha
mov
jno
scas
push
ret
scas
dec
mov
out
sbb
rol
mov
andl
pop
sub
addr16
mov
add
inc
mov
shrb
imul
mov
push
imul
ret
lcall
inc
dec
mov
scas
or
inc
mov
jg
outsb
sub
pop
cwtl
cmpb
dec
mov
test
movsb
sub
push
and
mov
ret
lods
mov
mov
xorl
shr
jns
cmpsl
push
or
push
xchg
sarb
mov
rorl
fwait
mov
push
mov
mov
xlat
push
cmpsl
add
fists
divl
mov
fiadds
or
imul
arpl
js
mov
adc
mov
mov
mov
jne
lret
adc
xor
and
idivl
cltd
cltd
rorb
inc
mov
ret
loopne
sbb
add
popa
loop
fimull
mov
jge
add
or
mov
addl
mov
mov
pop
mov
lea
dec
add
cmp
mov
sub
insb
ljmp
push
adc
adc
xlat
mov
mov
cmpsb
jo
sbbb
movsl
imulb
adc
mov
cltd
ret
pop
mov
xchg
mov
insb
loope
xor
jns
scas
add
mov
aaa
add
fmul
movsl
icebp
fwait
or
imul
xchg
cwtl
pusha
aad
bswap
mov
adcl
xlat
mov
add
das
mov
ja
rcl
mov
sti
xchg
push
ret
outsl
clc
mov
sub
cld
sub
mov
popa
and
push
mov
adc
scas
fsubs
cmpsl
ret
adc
dec
or
jbe
mov
mov
pop
push
das
xlat
cmpsb
dec
addl
fsubl
popf
dec
add
mov
les
je
mov
in
cmpsl
mov
xchg
call
js
or
mov
jmp
orl
lods
clc
pushf
outsb
sbb
imul
adc
inc
movsl
push
or
test
arpl
sub
add
dec
cwtl
rcll
inc
shlb
mov
inc
int
hlt
repnz
mov
mov
leave
cmp
aaa
or
mov
es
nopl
inc
cwtl
cmpsl
and
in
std
jg
inc
mov
or
fdivs
roll
cli
mov
cmpsl
pop
inc
and
adc
mov
inc
movsl
push
int
fistpll
fnstenv
dec
adc
movsb
mov
in
jns
inc
or
lds
repnz
test
lcall
or
decl
fcomip
aas
and
outsl
xchg
cwtl
push
in
cmp
push
movsl
mov
hlt
xor
push
sub
jo
mov
fldt
sbb
cltd
adc
mull
int
aam
loope
inc
btr
stc
pop
mov
lea
lahf
mov
mov
jmp
sahf
cmpl
lods
negb
mov
movsb
out
push
fisttps
int
mov
mov
test
idivl
dec
int
push
mov
mov
orl
sub
cmp
nop
sbb
push
lret
dec
mov
scas
cmc
mov
mov
dec
xor
and
xchg
scas
xor
or
in
imul
xchg
int3
adc
sub
xchg
out
out
test
negb
mov
adc
js
dec
jl
lock
mov
fidivrl
sti
push
icebp
mov
mov
jmp
aaa
fmulp
pusha
ret
sub
js
cltd
sub
cmpsl
inc
jb
mov
adc
inc
imul
mov
test
test
loope
xchg
pushf
and
jecxz
rorl
sbb
shlb
cs
adc
cmpsl
mov
mov
outsl
mov
in
inc
dec
and
pushf
xchg
mov
ja
or
idivb
inc
jbe
sbb
rcrb
rol
mov
repnz
int
xchg
adc
jbe
test
mov
mov
outsl
sub
xchg
sahf
pop
pop
mov
movsb
scas
sbb
push
adc
push
mov
into
cmpsb
dec
clc
jmp
mov
fwait
cmp
pop
add
xor
out
jge
mov
mov
and
and
mov
pop
rolb
cli
out
jno
xorl
mov
ja
loope
clc
cmp
ljmp
rcrl
icebp
lahf
xorb
jge
div
mov
test
push
mov
and
xchg
pop
ret
lahf
mov
mov
out
mov
or
add
push
enter
mov
fs
or
dec
loop
mov
cmpsl
cld
push
xchg
test
mov
pushf
mov
push
out
ficoml
sti
insb
cmp
pop
adc
cmpsb
pushl
leave
and
dec
sahf
mov
outsl
or
mov
cmp
test
dec
and
pop
xchg
mov
inc
scas
xor
pop
loop
mov
std
ja
mov
movsl
ds
push
mov
mov
cmova
pop
fisubl
cmp
mov
sbb
mov
stc
or
enter
push
xlat
mov
xor
mov
mov
stc
or
lds
mov
mov
popf
shlb
mov
push
mov
mull
xor
repz
sub
mov
adc
rcrl
popa
pop
mov
pop
imull
mov
fs
push
jno
jo
xorl
data16
dec
ret
mov
cltd
shll
adc
mov
cmpsb
add
es
cwtl
out
cmpsl
ret
xlat
cmp
pushf
int
jge
mov
jbe
jnp
in
mov
cmpsl
out
mov
and
mov
xor
xlat
pop
jecxz
push
push
pop
imul
es
jle
dec
xlat
jns
xchg
add
dec
and
negb
dec
xor
xor
sbb
push
mov
inc
inc
xlat
sbb
call
je
dec
movsl
sbb
mov
dec
test
mov
cwtl
xchg
add
ret
mov
add
sbb
jbe
jns
mov
sarb
xor
xorb
cmp
mov
xchg
sbb
je
mov
mov
mov
cmovp
rclb
push
clc
sti
mov
aaa
fnstenv
and
mov
cmp
mov
push
ja
ja
ficomps
jl
xor
outsb
or
mov
fdivs
aaa
sbb
cmp
jge
test
jo
jle
jp
jnp
sbb
jmp
xlat
fimuls
ret
push
xor
pop
loopne
aaa
loopne
das
mov
mov
pop
inc
addr16
in
xlat
cmp
loop
cs
cmp
cwtl
mov
xchg
sbb
inc
lahf
mov
insl
adc
pop
aam
push
jae
in
sbb
iret
mov
mov
mov
adcl
mov
cmp
mov
mov
out
push
xchg
mov
clc
mov
xor
je
mull
and
mov
jg
cmp
out
inc
andb
in
push
push
lods
mov
and
es
jbe
shlb
outsl
push
and
insl
mov
inc
jmp
and
xor
mov
mov
daa
in
hlt
popa
jecxz
aam
int
mov
mov
imul
add
andb
mov
xchg
push
inc
or
mov
dec
mov
data16
ror
leave
sub
pop
mov
xlat
push
and
ljmp
sahf
cmpsb
mov
jp
in
mov
mov
xchg
out
inc
xlat
test
sbb
mov
xor
frstpm(287
mov
sbb
outsl
popl
mov
mov
push
jp
jb
inc
xor
adc
icebp
pop
mov
repnz
ljmp
lahf
mov
rorb
push
pop
xchg
xlat
notl
pop
iret
sbb
dec
mov
addr16
lods
shl
mov
insw
jae
daa
fbld
dec
test
mov
mov
cwtl
mov
push
dec
cmpsl
xlat
push
pop
mov
test
xor
divb
mov
mov
cld
movsb
arpl
mov
xchg
and
mov
in
out
pop
outsb
add
cltd
inc
mov
adc
cmp
dec
pop
andb
test
mov
lcall
js
scas
mov
inc
stos
push
leave
pop
sbb
fisttpl
jle
mov
int3
in
push
pop
xor
in
out
mov
sub
out
mov
cmp
xor
dec
mov
or
mov
and
mov
mov
or
or
mov
mov
dec
loope
fcompl
mov
sub
or
test
inc
in
mov
jnp
inc
mov
mov
fdiv
rcl
filds
sbb
mov
cltd
cmpb
js
ret
push
push
scas
repz
jnp
jg
add
xlat
sub
inc
mov
mov
mov
add
popa
les
testl
pop
sbb
cmpsl
and
cld
mov
cmpsl
fcompl
lods
mov
pop
arpl
adc
fucom
lcall
cwtl
sbb
jne
insb
repz
mov
mov
stos
test
pop
jns
sbb
adc
dec
mov
pop
out
test
dec
jno
loopne
and
loope
cltd
mov
mov
lret
jns
mov
mov
cmpsl
pop
movsl
mov
pop
cmp
push
into
ret
cmp
push
mov
jmp
test
les
repz
mov
sbb
mov
mov
xor
push
divb
adc
adc
sbb
daa
mov
fs
inc
sub
hlt
sbb
scas
push
cmpsl
icebp
and
mov
movsl
jmp
lcall
arpl
not
test
test
adc
dec
pop
mov
adc
adc
mov
out
mov
mov
xchg
rcll
das
cmp
or
popa
adc
fmulp
mov
ss
jb
xchg
out
divl
imul
sets
movsl
or
imul
fwait
and
test
mov
xor
popa
mov
cmpsl
dec
pop
test
bound
ret
repnz
fadd
cmpsl
add
lahf
test
mov
addr16
shl
cmpsl
call
repz
and
xchg
mov
js
jecxz
push
cs
sbb
lods
mov
mov
pop
into
in
adc
insb
iret
clc
mov
test
mov
xor
int
mov
sbb
or
adc
jne
cmpsl
inc
sub
xchg
mov
push
mov
inc
ds
call
fidivs
test
inc
out
push
inc
aam
mov
out
pop
daa
insl
dec
pop
jae
inc
sti
mov
insb
jnp
mov
inc
lahf
mov
jmp
mov
or
mov
sbb
mov
cwtl
mov
sbb
sub
jb
das
int
xor
lea
inc
lcall
xorl
pop
rcrl
jmp
scas
test
jle
mov
mov
sbb
inc
mov
lock
dec
sbb
into
shr
mov
xchg
lods
aad
mov
decb
pop
mov
cmpsl
xchg
std
fnsave
pop
sbb
xchg
mov
jbe
mov
mov
loop
sbbl
mov
push
mov
bound
call
es
cwtl
and
mov
movsl
jg
lcall
sbb
sbb
sub
andb
mov
lahf
movsl
push
add
xchg
or
push
hlt
mov
orb
lcall
push
sbb
nop
aaa
jns
mov
push
xlat
shlb
pop
or
cltd
enter
jne
in
mov
mov
xlat
mov
xchg
jl
mov
jle
out
mov
mov
pop
loop
xchg
mov
lret
pop
mov
mov
mov
notb
scas
mov
scas
or
imul
lods
xor
mov
sub
mov
cltd
clc
sbb
mov
stos
mov
jns
pop
lods
aaa
lret
inc
mov
adc
dec
mov
mov
outsb
cltd
push
cmp
mov
and
mov
or
mov
adc
jne
lods
xchg
jg
test
push
jmp
dec
shlb
mov
mov
add
xlat
test
pop
and
sbb
push
ja
mov
mov
mov
mov
pushf
sub
aaa
loope
mov
js
or
outsl
inc
fstpt
adc
mov
inc
movsl
insb
push
cmpsb
jl
mov
out
mov
test
je
inc
ds
int
mov
shl
mov
pop
jle
pushf
add
mov
cmp
cmpsl
jmp
push
in
fidivs
stos
xchg
push
stos
movsb
mov
loopne
inc
lds
mov
mov
mov
xor
fwait
mov
inc
mov
in
push
lret
fbstp
push
mov
adc
xor
clc
mov
mov
push
ljmp
cmp
mov
test
fwait
shl
mov
jecxz
add
mov
mov
push
xor
inc
cmpsl
ja
ror
jnp
cs
mov
popa
rclb
xchg
daa
adc
push
or
mov
mov
jae
cs
ds
fwait
adc
push
cmp
push
lahf
mov
mov
and
cltd
lret
arpl
xor
mov
adc
jns
movsl
push
dec
mov
sub
call
mov
ffreep
out
arpl
mov
mov
cmp
aam
aad
add
icebp
mov
dec
arpl
roll
mull
ret
jo
xor
out
adc
hlt
jns
sub
scas
cmp
shr
jecxz
pop
sbbl
int
test
es
cmpsl
lret
fs
inc
mov
arpl
ret
stc
sub
mov
bound
and
dec
scas
or
cwtl
pop
aas
out
arpl
iret
mov
mov
mov
cwtl
mov
push
mov
stc
loop
lahf
push
into
mov
mov
or
test
jmp
mov
mov
cmpsl
xor
mov
xor
imul
jne
cmp
mov
ret
push
and
lcall
cmpsl
pop
xor
adc
mov
jecxz
shlb
add
pop
cmp
and
jae
xchg
mov
iret
jb
cmc
and
cmpsl
jge
hlt
mov
mov
mov
xchg
jae
cmpsl
lret
imul
js
cmpsb
mov
pop
pusha
lret
mov
jne
sbb
adc
pop
dec
mov
mov
cmpsb
mov
mov
inc
imul
outsb
outsl
adc
mov
dec
pop
mov
mov
xor
test
and
fsubrp
cmpsl
xchg
inc
and
mov
jge
or
jns
fidivl
int3
mov
push
xor
jno
mov
popf
cmpsl
std
sbb
int
mov
das
es
lret
adc
inc
jnp
and
mov
cmp
xchg
xor
mov
dec
addr16
cmp
xchg
in
lods
sbb
mov
mov
out
pop
inc
xchg
cmpsl
adc
xor
push
ss
mov
cmpsl
xchg
cwtl
fwait
adc
lods
inc
nop
imul
scas
sub
imul
lret
sub
mov
and
xor
push
or
xorb
mov
subb
and
xor
jp
scas
andl
sub
mov
mov
or
mov
xorb
pop
xchg
mov
pop
adc
es
test
mov
das
and
repnz
aas
xor
jbe
int
mov
mov
lods
cmp
cmp
cmpsl
dec
sub
cltd
ss
aas
adc
rcrl
cmpsb
insl
xorl
jmp
hlt
clc
sbb
jle
mov
ss
out
dec
jg
arpl
pop
mov
rcrl
xor
xchg
cmpsl
jnp
push
inc
mov
rclb
xchg
add
xchg
xor
mov
jnp
bound
push
mov
das
xchg
xchg
mov
jae
out
or
sarb
scas
mov
mov
ret
mov
stc
sub
loope
lret
scas
rorl
cli
push
mov
cmp
adc
cmpsl
mov
pop
test
mov
sar
add
mov
scas
lock
xor
cmp
scas
cmp
push
mov
stc
nop
stc
cmp
js
cmpsl
push
mov
fwait
mov
mov
aam
shlb
add
mov
add
sub
pop
scas
pop
test
xlat
aaa
adc
and
pop
xor
or
into
mov
mov
cwtl
daa
xor
mov
aam
jb
jmp
arpl
mov
mov
sahf
test
repz
or
shll
and
or
stc
bound
loopne
xchg
mov
mov
mov
sub
sbb
sub
jp
adcb
or
cmpsl
shr
adc
ja
pop
push
mov
xor
cmpsb
clc
stc
mov
pop
mov
inc
mov
fldl
test
repnz
xlat
roll
movsl
mov
outsb
cmpsl
andb
stos
push
mov
xchg
or
clc
xchg
cwtl
mov
pmullw
cmp
cmp
xor
adc
mov
hlt
dec
loop
mov
dec
mov
test
sbb
fwait
loopne
sub
ja
mov
cmp
les
jnp
lret
imul
movsb
pop
cmpsl
rorb
cwtl
jnp
and
stos
cmpsb
and
xor
in
fs
xlat
xor
arpl
nop
mov
adc
jge
ljmp
add
out
push
shll
pop
inc
and
sub
mov
push
jns
cmpsl
icebp
mov
ja
sbbl
dec
hlt
jbe
jle
enter
fmuls
stos
jns
lcall
mov
fadd
jp
inc
aas
mov
aaa
mov
dec
push
sarl
mov
sbb
xor
fwait
pop
add
repz
scas
sbb
pop
mov
push
cltd
mov
jp
mov
cwtl
shrb
repz
pop
aas
jg
ss
ret
and
jb
scas
mov
mov
fldcw
mov
data16
pushf
mov
rol
jmp
ds
leave
cmp
pop
mov
orb
fwait
cmp
jg
lret
nop
inc
test
stc
pop
repz
sbb
lods
mov
jecxz
mov
cwtl
leave
in
or
mov
xor
xor
std
lea
xchg
mov
sub
sbb
jge
mov
ror
jmpw
mov
lret
fadds
mov
test
addr16
mov
jl
dec
leave
jo
fwait
es
push
xchg
in
xor
add
sbb
mov
test
sbbb
push
sbb
inc
mov
jns
or
mov
mov
loopne
mov
cmp
jb
cmp
mov
hlt
fwait
jne
and
sbb
sub
addr16
scas
stc
adc
mov
sbb
shrl
lret
pop
dec
sbb
xor
dec
orb
rcrb
pusha
inc
mov
mov
fadds
lcall
sub
mov
dec
xorl
sbb
daa
push
arpl
push
dec
xor
mov
inc
lret
mov
adc
imul
mov
mov
inc
cwtl
fwait
push
dec
orl
add
or
inc
mov
lret
popa
mov
jo
jle
jbe
xchg
inc
xlat
mov
shl
jl
xor
sbb
xchg
aaa
cmp
pop
shlb
popa
cmp
cmpsb
adc
add
mov
mov
mov
inc
stos
roll
mov
rcl
stc
ret
inc
or
mov
popf
mov
jge
cmpsb
jne
leave
jae
mov
bnd
icebp
test
sbb
cwtl
xlat
or
mov
rolb
push
jl
icebp
cmp
aad
mov
mov
mov
dec
pop
ljmp
je
adc
add
fwait
sbb
mov
ret
bound
jmp
jno
fsubl
xor
mov
lock
and
mov
mov
aam
xor
cmpsl
xchg
adc
fwait
shll
aaa
mov
mov
pushf
mov
xor
sbb
sbb
jmp
inc
and
mov
cmpsl
adc
mov
icebp
mov
lret
and
xchg
add
push
repnz
cmpsl
imul
mov
sbb
jne
adc
mov
mov
lcall
mulb
mov
dec
push
jmp
test
pop
dec
cmpsl
xlat
arpl
loopne
cmp
mov
shlb
mov
mov
xor
sbb
rcrb
jns
ret
mov
cmp
or
mov
aam
jnp
sub
cwtl
cmpsl
xchg
jecxz
sub
jnp
test
push
cmp
dec
xorb
adc
lahf
jmp
push
incb
jae
mov
lds
sahf
mov
adcl
repnz
cmp
std
lods
cmpsl
sbb
mov
mov
jae
sub
hlt
jne
lahf
xlat
rcrl
sbb
arpl
stos
cmpsl
scas
roll
lcall
and
cmc
mov
imul
jo
pop
xchg
shr
mov
and
repnz
stc
or
lods
imul
adc
rorb
rcrb
rcrl
insb
mov
lcall
mov
int
ret
popl
cmp
icebp
jns
adc
pop
test
mov
mov
add
inc
xchg
loop
cmpl
out
xlat
repz
sbb
ja
inc
cli
jo
mov
sarl
jbe
pop
mov
lods
mov
cli
jl
xor
sbb
sbb
inc
shll
mov
jle
or
cmpsl
lret
and
mov
pop
shlb
push
data16
negb
loop
movsl
sbb
xlat
cmpsl
leave
cmpl
cmpsl
mov
fsubp
shll
sub
adcl
jae
test
scas
add
mov
test
in
loope
enter
mov
lods
and
mov
mov
rorb
mov
push
jl
andl
xor
inc
sbb
cmpsl
test
cwtl
add
dec
icebp
insl
xchg
mov
mov
stos
jb
dec
nop
sahf
mov
add
repz
ljmp
dec
jg
into
cmp
mov
and
sbb
adc
sbb
test
cmp
nop
inc
and
mov
enter
sbb
lods
andb
fbstp
mov
pop
adc
xchg
add
int
out
pop
xor
and
pop
test
nop
pop
xorl
cmp
inc
dec
inc
mov
call
sarl
mov
pop
or
xlat
push
mov
mov
sub
mov
jl
sbb
sahf
adc
xorl
xchg
cmp
mov
loop
push
ja
mov
hlt
adc
call
mov
and
arpl
out
mov
ds
ror
pop
mov
sbb
sub
mov
cmp
mov
adc
jb
or
cmpsl
dec
leave
pop
xlat
jns
cmpsl
addl
mov
jp
mov
mov
jns
mov
pop
out
dec
movsb
bound
cwtl
xor
push
add
jo
insb
hlt
imul
or
xor
mov
jo
or
lock
icebp
sub
jl
ljmp
test
fwait
inc
jp
outsl
or
lret
out
mov
jnp
cmp
cmpsl
mov
or
jae
test
cmpsb
cmp
pop
test
ljmp
sbb
into
and
shrb
dec
xlat
sbb
dec
jp
scas
mov
mov
add
addr16
imul
cli
divb
jne
stos
test
xchg
add
insl
mov
jo
movsb
leave
ja
pop
daa
lcall
mov
jae
cmpsl
sarl
xchg
pop
mov
js
fwait
jb
mov
mov
mov
es
xchg
popa
les
mov
mov
mov
mov
pushf
adc
xor
inc
add
lret
pop
xor
adc
mov
cmp
out
rorl
inc
mov
movsl
and
outsl
fwait
mov
xor
es
push
adc
cltd
sub
je
shl
addl
aas
gs
pop
sbb
movsl
arpl
mov
xor
ja
fwait
shlb
push
xor
loope
mov
xor
aaa
aas
push
mov
pop
inc
cmp
mov
lcall
mov
ja
gs
mov
rol
mov
mov
mov
cwtl
icebp
fcomps
dec
lret
push
daa
shl
mov
mov
add
jp
stos
mov
add
mov
mov
andl
xchg
aaa
mov
lahf
das
int
movsl
mulb
jecxz
mov
mov
jge
mov
aad
ficompl
jl
out
cwtl
xor
inc
lock
sbb
scas
les
pushf
or
or
sbb
mov
add
scas
int
mov
movsl
out
and
add
and
and
fisubrl
in
mov
pop
fnsave
subl
mov
mov
int
fcomp
repz
lcall
jl
cmpsb
jg
or
mov
cmpb
mov
cmc
pop
movsb
adc
mov
push
loope
adc
arpl
mov
ret
es
pop
mov
sub
dec
je
aas
rorl
adc
and
xchg
sbb
mov
fnstsw
ret
outsl
adc
mov
movsb
sbb
in
out
mov
ds
lret
push
mov
sarl
pop
mov
cmpsl
lcall
mov
cmp
xchg
pop
inc
sbbb
mov
add
jge
mov
je
sub
mov
fcom
mov
mov
mov
pop
shll
pop
shll
repnz
mov
jmp
xchg
push
inc
loope
imulb
xor
xchg
out
jns
xchg
adcl
mov
jl
fsub
dec
sbb
or
pop
aas
cmpsb
or
add
xor
test
add
int
jb
sbb
push
or
pop
mov
frstor
mov
jnp
jne
inc
dec
lret
sbb
mov
mov
and
int
add
ja
mov
sub
push
mov
cmpb
mov
repz
cmpsb
cltd
stc
ja
loop
shl
or
xlat
test
push
rol
push
rcll
cmpsl
push
mov
jno
mov
test
mov
mov
addl
push
out
lods
mov
mov
mov
fidivrs
inc
xlat
ljmp
scas
mov
in
jbe
mov
loopne
jns
push
lcall
hlt
pusha
jecxz
lds
mov
mov
jle
stos
sahf
in
mov
push
xchg
add
lcall
shll
dec
jne
mov
push
or
xorb
cwtl
pop
xor
pop
mov
mov
mov
push
paddd
jmp
adcb
mov
mov
jp
mov
inc
roll
sbb
pop
inc
in
xor
cmp
aad
pushf
jne
lret
scas
or
stos
mov
stos
mov
dec
mov
mov
lcall
cmpsl
mov
ret
ds
inc
shl
mov
jp
adc
push
out
mov
aam
fisttpl
loopne
cli
mov
stos
sahf
mov
mov
loope
lret
jb
fistps
inc
xor
mov
jbe
and
fnsave
xchg
imul
jp
movsl
lahf
adc
mov
mov
push
divb
jge
cmp
jno
ljmp
outsl
adc
js
xor
jp
int
jecxz
imul
pop
pop
cmp
mov
mov
mov
or
and
inc
jb
stos
test
clc
lcall
jae
movsl
repz
rorb
mov
adc
mov
xchg
into
sub
repnz
mov
xlat
ret
or
mov
jge
jmp
xor
loop
cltd
and
cli
jns
inc
adc
nop
cwtl
cmp
repnz
cmpsl
cmpsl
sub
or
push
pop
sbb
lods
and
jns
orl
ja
sbb
dec
and
push
loope
xor
mov
dec
mov
cmpsl
cmp
push
mov
fwait
pusha
adc
xor
or
jp
and
stc
rolb
in
add
fwait
mov
xor
xor
arpl
or
and
mov
std
mov
ljmp
test
es
mov
in
pushf
imul
sbb
rcrl
out
or
mov
jno
stc
mov
enter
hlt
pop
mov
sub
stos
test
dec
dec
lcall
and
sbb
mov
xlat
cmp
insb
mov
push
xchg
rcrb
push
push
xlat
arpl
lret
dec
xchg
xor
lea
add
test
jp
scas
js
stos
test
dec
xlat
xchg
mov
cmp
sbb
jno,pt
int
cmpsl
test
jg
pop
ljmp
arpl
fstpt
pop
dec
daa
sbb
subb
and
aaa
mov
xchg
out
add
lret
mov
fldcw
rcrl
fimull
ss
mov
notl
mov
inc
pop
mov
lock
pop
add
cmp
in
xcrypt-ctr
cmpsl
cltd
dec
scas
mov
mov
clc
lea
push
fldl
adc
jnp
sahf
mov
aad
rcrl
adc
cmp
scas
mov
jmp
leave
stos
lret
fs
mov
les
and
testb
and
ljmp
mov
mov
and
aam
bound
loopne
mov
ficompl
pop
adc
fildl
sbb
mov
scas
jmp
movsb
fcompl
bound
adc
das
mov
adc
push
pop
mov
out
aaa
cmp
mov
adc
repnz
and
sbb
aam
ss
ds
sarb
movsb
cmpsb
shll
mov
hlt
test
andb
lcall
mov
push
jle
hlt
andl
cltd
dec
inc
lret
adc
push
jp
nop
dec
cmp
sub
int3
out
fiaddl
adc
jge
in
mov
cwtl
cmpsl
mov
sub
pop
stc
lcall
jecxz
add
xor
insl
mov
outsb
pop
jno
subl
mov
mov
in
add
rcll
cwtl
push
movsb
arpl
sbb
push
ret
adc
or
pushf
jae
xchg
sbb
pop
lods
out
stos
hlt
mov
rcrl
dec
push
mov
or
leave
in
and
aad
shrb
daa
push
nop
fisttpll
mov
pushf
outsb
das
inc
popa
mov
lock
pushf
mov
sarl
mov
mov
mov
push
jo
test
stc
sahf
dec
mov
inc
sub
jb
pop
sbb
jg
or
dec
mov
arpl
sub
in
cmc
mov
cwtl
mov
movsl
inc
mov
shl
xchg
and
add
xchg
inc
aaa
sub
jnp
inc
and
iret
leave
xlat
sbb
jb
cmpsl
jnp
ds
cmpsl
arpl
mov
fwait
sahf
mov
push
repnz
xlat
jp
and
loope
jnp
xchg
sti
sbb
iret
sub
ja
mov
loope
fnstenv
xlat
loop
cli
push
lret
sub
jne
mov
cmp
and
cmp
ret
std
scas
inc
mov
mov
cmp
mov
adc
sub
mov
lods
mov
movsb
jmp
sbb
inc
xchg
fsubrl
xlat
mov
dec
dec
mov
into
or
data16
loope
adc
mov
dec
mov
leave
fmuls
mov
in
pop
sarb
stos
lret
push
fmull
dec
stos
loop
in
cmp
pop
in
insb
dec
xlat
mov
sbb
xchg
and
sub
mov
loop
xchg
mov
sbb
mov
jp
stos
rorb
int
adc
mov
aaa
mov
loope
or
mov
mov
jnp
shl
cli
rcl
add
ss
jge
imul
jmp
mov
and
jb
pop
das
sub
out
je
jp
inc
scas
add
mov
lods
test
fwait
loop
or
cmpsl
cltd
pop
xorl
je
es
mov
adc
cltd
pop
jg
lods
mov
ret
lock
shll
scas
mov
mov
jp
aaa
cmpsl
push
jmp
icebp
mov
ficompl
scas
adc
sbb
inc
push
pop
stos
mov
mov
lcall
jb
or
mov
rorl
cmp
mov
cmp
aaa
xor
mov
lret
lods
ret
lods
mov
mov
stc
cwtl
jmp
mov
or
nop
pusha
rorl
les
mov
cmpsl
das
js
and
add
mov
xor
mov
mov
cmpb
jno
movsl
je
mov
arpl
pop
and
jge
dec
add
in
fwait
cmp
cmpsl
fwait
xchg
jne
mov
scas
inc
ret
mov
shll
xchg
rcl
lds
xchg
mov
test
cwtl
icebp
mov
stos
sub
pop
push
test
push
sub
js
ss
and
outsl
inc
lods
test
mov
lret
cltd
mov
push
pop
cmp
stc
scas
adc
lds
mov
adc
movsb
xlat
xchg
jno
mov
int
fwait
test
lds
ret
daa
mov
loopne
outsl
push
inc
mov
inc
call
sub
dec
lea
mov
and
dec
add
nop
inc
stos
cli
mov
mov
xor
pushf
xchg
xchg
mov
fwait
jnp
push
and
pop
cwtl
pop
imulb
mov
mov
pusha
mov
dec
mov
mov
push
adc
hlt
sbb
mov
add
nop
lock
add
inc
pop
cmp
xlat
mov
inc
mov
cmpsb
cwtl
or
movsl
lahf
sub
cmpsl
mov
mov
ret
xchg
cmp
add
xor
test
sbbl
ret
pop
out
pop
pop
jnp
daa
push
scas
loop
enter
cmp
and
dec
push
cmpsl
jno
xor
test
hlt
cld
loopne
fidivrl
xabort
mov
fisttps
ror
mul
ret
stc
js
dec
fwait
cmp
mov
xchg
roll
je
add
movb
in
cmp
mov
pop
sbb
sbb
jns
pop
mov
xchg
arpl
inc
sbb
jb
push
dec
test
or
xor
sbb
mov
mov
scas
sahf
movsl
ss
or
fbld
sti
cltd
outsb
dec
mov
xchg
push
hlt
or
popf
testb
or
test
push
popa
xor
pop
stos
das
mov
mov
ret
pop
cld
pop
mov
pop
rclb
sub
push
xor
imul
stos
shll
es
je
xchg
xor
mov
inc
mov
mov
mov
push
jb
mov
mov
jnp
xor
outsl
test
jl
mov
mov
sbb
movsl
mov
mov
sub
push
pop
stos
cli
cmp
jne
add
lret
xor
mov
jl
fstps
and
xor
cmp
out
fistps
dec
jle
inc
xor
inc
or
int
ss
stc
mov
cwtl
cltd
mov
inc
inc
mov
and
pop
adc
pop
sub
sbb
mov
dec
movsl
jo
cmp
push
fidivs
ret
sahf
mulb
aas
fbstp
pop
or
ss
mov
cmp
mov
mul
cs
dec
or
sub
mov
pop
inc
pop
lods
scas
pop
negb
inc
xlat
lock
jne
adc
push
pop
mov
stos
mov
inc
outsl
push
sbb
cwtl
lcall
ret
int3
jno
inc
push
aam
pop
popf
and
pop
dec
add
mov
cmpsl
cmp
xor
or
popf
mov
sbb
ds
mov
es
movsl
adc
addr16
lret
cmpsl
dec
add
and
imul
fdivs
in
inc
aaa
sbb
mov
cs
push
xor
je
mov
push
sub
in
inc
xor
jg
mov
dec
inc
fwait
pop
aaa
push
xor
lcall
mov
cs
pop
add
push
les
fidivl
xor
mov
scas
imul
cmpsl
adc
sub
pop
mov
inc
push
shll
icebp
pop
jne
mov
push
mov
or
mov
mov
ss
pop
push
add
lods
mov
iret
outsl
mov
fwait
inc
dec
loopne
dec
inc
and
sbb
cmpsl
dec
sub
add
outsl
imul
xchg
stc
jg
cmp
js
inc
dec
jp
ds
test
sbbl
jnp
and
push
mov
repz
lret
jge
or
sub
pop
es
mov
xchg
jnp
xor
xlat
test
sbb
aaa
pop
jne
pop
repz
mov
and
jecxz
mov
push
jle
and
mov
cmpl
mov
not
vsqrtsd
jnp
xorl
scas
dec
jl
jae,pn
adc
mov
bound
cmp
mov
jg
and
mov
and
cmp
aas
xchg
mov
movsl
mov
js
stos
mov
cmpsl
subl
sub
push
push
std
and
xchg
cmp
loope
lcall
xchg
mov
inc
cld
mov
mov
bound
jbe
jg
aas
out
hlt
cmp
push
mov
pop
repnz
arpl
es
sbb
xchg
mov
inc
cmp
lock
sbb
incb
and
xchg
stc
jnp
mulb
pop
adc
xchg
push
aad
jge
clc
sarl
lock
mov
loop
lods
arpl
cmc
xchg
mov
pop
cmpsl
inc
and
mov
mov
test
jns
inc
mov
xor
fwait
mov
mov
arpl
leave
mov
ret
xchg
repnz
push
xorl
xor
out
adc
arpl
mov
mov
mov
inc
ret
scas
xor
mov
shll
cmp
dec
add
cltd
cmpl
imul
adcb
shll
addr16
arpl
test
inc
cmp
cmp
out
pop
movsl
mov
call
jl
inc
mov
arpl
jns
imul
pushf
xor
iret
xor
jae
jmp
mov
loope
mov
mov
mov
mov
addl
mov
or
popl
scas
sub
shrl
stc
mov
and
sbbl
jne
mov
lret
mov
je
add
xchg
jne
inc
icebp
out
mov
mov
inc
aas
daa
dec
mov
add
repnz
jp
mov
mov
sbbl
imul
inc
pop
jo
gs
jae
add
mov
rcrl
xchg
xorl
shll
popf
clc
outsl
arpl
xchg
inc
mov
fadds
fwait
loop
stc
mov
test
xchg
mov
mov
icebp
push
test
iret
ret
dec
mov
xor
shll
sbb
dec
inc
shl
sub
jecxz
push
insl
mov
rcr
stos
and
ds
inc
jnp
dec
xlat
lret
xor
in
cwtl
or
xchg
xor
mov
arpl
xlat
mov
test
add
mov
add
cmpsl
rolb
repnz
les
bound
lret
add
popf
in
or
mov
movsl
mov
inc
add
mov
or
loop
call
adc
inc
cmpsl
and
adc
fidivrs
mov
ret
iret
push
mov
cmpsb
add
test
mov
imul
aaa
cmpsl
mov
xorb
xor
stc
fincstp
into
arpl
xchg
adc
stos
push
mov
roll
adc
dec
adc
mov
arpl
xor
divl
mov
iret
cwtl
sub
mov
mov
xor
and
cmp
sbbb
aad
pop
jnp
sub
lret
roll
orb
mov
mov
adc
test
cli
add
scas
mov
adc
nop
adc
and
andb
arpl
mov
mov
sti
xor
and
clc
loop
inc
gs
fwait
mov
mov
inc
pop
jmp
inc
jae
mov
xchg
and
inc
xor
call
popf
mov
xchg
push
jb
and
icebp
mov
stc
shl
add
mov
lods
cmp
adc
pop
aas
inc
frstpm(287
mov
ja
fidivl
xlat
sub
inc
mov
mov
jno
addr16
fwait
pop
xchg
frstor
mov
jg
sarb
add
and
xchg
and
clc
gs
and
xchg
mov
mov
jnp
fidivs
xor
scas
js
push
jmp
xorb
cmp
loopne
xchg
rcll
loope
cmpsl
jbe
sbb
testl
adc
cmp
loopne
mov
push
mov
xchg
and
in
cmp
cmpsb
mov
pop
sub
push
push
bound
in
push
or
scas
jae
pusha
xlat
xchg
arpl
push
mov
and
out
call
ret
repnz
mov
mov
cmp
mov
xchg
imul
pushf
mov
mov
xor
dec
adc
xchg
or
cmpsl
jge
add
xchg
test
sbb
gs
mov
sbb
sbb
xchg
and
and
jmp
adc
loope
in
daa
cmp
lock
cmp
scas
xchg
stos
push
jns
mov
add
cmp
daa
fs
gs
and
xchg
and
fsubp
push
mov
sarb
inc
and
mov
daa
insb
push
mov
negl
addr16
cltd
add
push
fwait
mov
mov
sbb
mov
xchg
xchg
mov
sbb
push
out
xor
sbb
push
and
adc
out
pop
std
mov
dec
stc
arpl
pop
pushl
fcmovnb
loop
aas
fincstp
jns
fisttpl
loop
and
int
test
test
movsb
lods
loope
mov
loope
idivl
daa
out
add
mov
push
and
mov
aam
jl
std
cmpsl
lcall
sbb
ficomps
add
cmpsl
adc
sarb
mov
roll
xchg
arpl
xchg
fwait
mov
es
xchg
mov
sub
arpl
xor
pop
fistps
mov
and
mov
lock
xlat
xchg
mov
sarl
xchg
or
add
ffreep
cmpsl
xor
xor
cmp
xchg
sbb
mov
jge
or
pop
xor
sbb
xchg
adc
test
xchg
imul
in
mov
pop
push
fisubrs
decl
jge
loop
mov
push
xchg
pop
lods
xchg
test
mov
jg
cltd
mov
aas
push
and
add
or
lods
dec
mov
cmp
mov
xchg
jae
cmp
pop
mov
adcl
inc
dec
and
cmp
js
push
xchg
mov
and
inc
movsl
mov
repnz
sar
int
aam
or
mov
mov
mov
pop
and
cmp
jns
cmpb
mov
dec
icebp
test
sarl
sbb
sbbl
mov
jno
jne
mov
shll
xor
cmp
test
and
xchg
push
adc
mov
cmp
rol
or
daa
test
jnp
fsub
cmp
gs
mov
lahf
add
push
inc
bound
mov
xor
push
cltd
out
jge
jge
mov
les
mov
jb
jno
xchg
mov
xor
outsl
mov
aam
sub
jl
fwait
mov
add
xchg
lcall
jg
out
mov
int3
in
inc
clc
xlat
test
movsb
lret
xchg
aas
mov
sub
jnp
xor
das
sbb
mov
mov
mov
add
dec
ja
lret
adc
mov
stc
in
out
mov
adc
scas
gs
add
mov
inc
stos
out
and
inc
imul
xor
dec
adc
and
xchg
push
icebp
mov
outsl
pop
mov
lock
cmp
mov
adc
aam
mov
xchg
daa
add
add
mov
inc
movsl
mov
mov
mov
loopne
mov
andl
mov
jb
arpl
push
pop
and
subb
inc
daa
aaa
inc
push
jnp
rorl
orl
gs
jmp
and
lcall
and
cmp
hlt
jp
mov
add
mov
test
pop
jp
mov
mov
bound
pop
stos
rcrl
mov
dec
push
ret
decb
pop
and
push
and
les
xorb
ss
mov
mov
rorl
cltd
inc
fdivl
adc
xlat
xchg
pop
loop
cld
mov
inc
jg
cmpsl
push
and
inc
pop
loope
lahf
pushf
sbb
xchg
and
cmpsl
dec
in
shl
xorb
loop
push
cwtl
mov
mov
loopne
cmpl
mov
int3
and
mov
into
mov
mov
shrb
jb
add
mov
add
cwtl
cmpsb
sub
push
gs
xlat
inc
data16
pop
mov
ss
lahf
push
push
out
hlt
scas
fwait
or
jbe
xlat
daa
sub
jne
pushf
mov
fdivr
and
les
pop
cmp
and
mov
xor
pop
fadds
outsl
cmpsl
xchg
out
aaa
stc
inc
cmp
jg
roll
jp
and
mov
sub
mov
push
cmc
gs
andb
xor
mov
loope
pop
movsb
les
sbb
and
test
fisubrl
loop
addr16
arpl
add
mov
clc
gs
stos
out
add
ja
mov
cmp
xlat
fwait
xchg
xchg
movsl
mov
push
push
mov
dec
mov
cwtl
lahf
mov
xor
or
outsl
mov
stos
add
pop
movsb
andb
rclb
ss
xlat
inc
or
test
mov
cmovnp
pop
inc
notb
jmp
cmp
and
dec
imul
push
adc
add
mulb
iret
pop
inc
call
clc
fwait
mov
and
mov
sub
pop
sarb
inc
sti
mov
add
dec
xchg
lcall
std
push
or
sub
mov
and
pop
lahf
mov
test
stos
cmp
add
jl
add
xchg
cmpsl
jle
cld
pop
add
adc
mov
shr
xor
push
cmp
xor
iret
roll
in
jns
addl
rol
divl
add
push
pop
mov
jl
and
add
sub
movsl
mov
out
inc
xor
jo
adc
loop
movsl
mov
aad
xor
pop
out
xor
fstpt
mov
ss
out
hlt
ss
push
test
ret
cmp
loope
sbb
loopne
add
mov
inc
fnsave
mov
aad
mov
mov
loop
mov
out
jecxz
cmp
loop
lods
les
pop
fdivp
xlat
pop
loope
mov
lods
xor
stos
xchg
sbb
repz
imul
and
cmpsl
xchg
mov
mov
cmp
arpl
mov
mov
dec
sub
cwtl
loope
push
inc
xchg
iret
sub
enter
jb
cmpl
adc
hlt
sbbb
xor
jb
ret
stos
dec
pop
xorl
mov
mov
sbb
add
mov
loop
test
xchg
xor
xchg
xlat
adc
push
xchg
lods
stos
and
sbb
sub
mov
mov
mov
mov
popf
sub
mov
loope
addr16
cmp
cltd
mov
insl
inc
cmpsl
xchg
mov
xlat
jp
mov
xchg
scas
popf
push
test
insl
adc
xlat
xor
popa
cmp
xchg
pop
mov
xchg
jno
inc
addr16
daa
push
jo
and
or
cld
mov
xor
xor
test
mov
cwtl
movsb
xor
rcl
shll
mov
mov
test
or
pop
movsl
xorl
test
enter
and
mov
ljmp
lahf
sbb
cmpsl
dec
adc
insl
xchg
xchg
mov
adc
jae
fwait
xlat
and
in
stos
ret
movsl
stos
cmpsb
cmp
mov
jbe
fwait
aaa
mov
xchg
pop
cmp
adc
out
jns
pop
push
mov
test
inc
fnsave
mov
outsb
pushl
ljmp
pop
arpl
hlt
cwtl
jnp
sarl
inc
clc
add
cwtl
mov
sbb
and
mov
dec
movsl
leave
test
mov
scas
iret
mov
cwtl
stos
sub
test
sub
mov
xor
daa
loope
sbb
imul
or
out
or
bound
popf
ljmp
jo
lock
adc
mov
xlat
mov
inc
inc
aas
fbstp
mov
fdivs
and
jae
icebp
sbb
sbb
popa
cltd
incl
push
adc
lcall
cmp
cmc
xlat
inc
lds
mov
lods
sub
lret
cmpsb
mov
inc
cwtl
scas
das
dec
into
movsb
test
cltd
sub
in
push
outsl
in
jnp
push
gs
jmp
aas
or
cmpsl
out
pop
outsb
out
mov
xlat
in
add
adc
mov
test
cltd
cmp
mov
mov
xor
pop
aas
fdivl
cmc
xchg
push
jg
lahf
push
jne
repz
adc
sti
popf
sbb
cmc
not
xchg
pop
jle
sahf
pop
je
push
xchg
mov
jl
pushf
sbb
push
inc
sbb
out
mov
dec
popa
and
test
rcr
dec
mov
cmpsl
scas
and
jecxz
adc
inc
insl
and
jns
icebp
mov
iret
add
out
xor
ficompl
sbb
pop
loope
imul
das
xchg
mov
fnstcw
and
mov
cmp
scas
jne
imull
mov
jle
movsb
jae
pop
shlb
repnz
subl
mov
push
cmpsl
bound
cmp
loope
aas
pop
inc
je
mov
inc
shll
cmp
lock
lret
xchg
aam
mov
adc
or
jae
mov
mov
push
add
push
lds
push
mov
mov
pop
push
aaa
xorl
jecxz
shll
arpl
movsb
and
test
cmpsl
bound
xchg
loope
fs
mov
inc
inc
mov
add
xchg
or
mov
bound
mov
jp
movsl
ret
mov
sahf
inc
pop
push
xchg
repz
lea
mov
clc
inc
push
mov
sbb
loop
loope
mov
fidivl
push
imul
sbb
pusha
repnz
mov
jns
and
ret
mov
sub
test
mov
in
in
rcrl
mov
pop
mov
addr16
test
jge
outsl
pushf
xor
and
icebp
dec
xlat
stos
adc
int3
mov
ret
shr
loop
mov
mov
fimull
push
fadd
fnsave
cli
cmp
rclb
hlt
xchg
out
inc
xor
xor
jne
aam
mov
movsl
aas
shlb
cmp
loope
push
jae
cwtl
es
pop
fstpt
mov
sbb
push
inc
mov
test
call
adcl
mov
cld
test
mov
aam
daa
arpl
scas
sbb
pop
mov
test
mov
push
mov
xor
lcall
adc
imul
cmp
mov
sub
inc
cmp
adc
gs
outsl
negl
mov
xchg
mov
dec
sbb
add
ror
sarb
out
icebp
mov
test
hlt
xor
mulb
stos
rorb
movsb
dec
mov
pop
jae
cmp
jnp
push
shlb
pop
add
roll
mov
cs
cltd
mov
mov
hlt
mov
in
dec
mov
jns
jg
addr16
and
imul
cld
pop
stos
cmpsl
xchg
arpl
fidivl
dec
stos
sub
sbb
add
mov
mov
dec
inc
or
mov
jl
add
popf
cli
cwtl
lock
ss
lret
xor
cld
and
mov
addr16
jp
and
mov
sbb
sub
cmp
pop
outsl
lock
js
mov
mov
pop
push
inc
subb
pusha
test
mov
cmp
mov
add
push
adc
gs
mov
add
xor
mov
xchg
scas
mov
mov
and
fstl
mov
or
sarl
ret
mov
mov
adc
xlat
fidivrl
repnz
xor
int
arpl
and
inc
dec
xchg
jle
cmp
adc
das
cmp
mov
lods
cmc
aas
jae
mov
mov
dec
arpl
and
xchg
jb
mov
mov
cmpl
test
or
outsl
cmp
mov
mov
add
mov
cmpb
ja
mov
movsl
adc
repnz
cmp
inc
in
cld
test
test
or
push
enter
inc
jecxz
mov
lcall
insb
aas
stos
roll
inc
es
jp
scas
cmpsb
daa
aas
sbb
lret
pop
mov
loopne
add
xchg
sbb
xor
ljmp
or
in
enter
mov
mov
cmp
cwtl
icebp
rorl
out
and
jge
mov
add
cli
adc
sub
mov
sahf
icebp
jnp
mov
xor
mov
xchg
fisubrs
pop
lds
xchg
sbbb
sar
mov
das
in
ret
mov
mov
cmp
cmpl
and
js
add
cwtl
mov
fdiv
sub
popf
sarb
dec
mov
sbb
ljmp
outsl
xchg
xchg
xchg
sahf
cli
repnz
mov
ja
xlat
mov
jne
inc
adc
movsb
mov
arpl
ja
test
imul
mov
xchg
cmp
std
pusha
cwtl
ret
adc
rorl
and
scas
mov
mov
movsl
aaa
mov
xor
cli
pop
pop
add
iret
inc
dec
mov
enter
add
pop
sub
pop
in
popa
cmpsl
and
aas
in
in
cld
insb
xchg
cwtl
lods
xor
rclb
inc
jle
mov
cld
pop
sub
mov
xor
out
cmp
fsubr
cmp
cmpsl
jl
ljmp
lods
mov
bound
lret
fs
mov
mov
xorl
outsl
arpl
or
jl
or
ret
mov
pop
dec
push
xchg
mov
pusha
add
mov
cmp
add
in
cwtl
mov
movsl
jmp
icebp
mov
mov
scas
mov
sbb
mov
fnstenv
hlt
lock
cli
fwait
jns
jge
fistps
cmpsl
loope
push
mov
sub
pop
mov
mov
mov
cmp
outsl
xor
xchg
mov
xor
mov
repz
xchg
pop
sbb
mov
aas
xor
fadds
ss
mov
mov
test
out
andb
adc
cmp
mov
arpl
je
out
daa
lahf
sbb
or
add
scas
adc
scas
inc
cmpsb
cmp
mov
stos
xor
and
cwtl
outsb
mov
mov
test
mov
and
fidivs
and
sbb
add
ja
xor
mov
mov
pop
les
or
insb
sbb
pop
andl
imull
or
scas
jo
repnz
mov
int
or
leave
inc
add
mov
test
adc
addl
mov
mulb
movsb
cwtl
push
jnp
jno
or
inc
xchg
cmpsl
add
add
scas
mov
fadds
ljmp
lahf
and
aad
and
xor
int3
dec
stos
jb
push
and
ja
cmp
push
jecxz
sbb
sbb
adc
lock
fisubl
loopne
int
rcrb
xor
adc
cmpsl
xchg
mov
xlat
mov
icebp
cmp
sbb
hlt
out
add
scas
stos
push
cmp
inc
mov
sarb
jnp
mov
mov
mov
mov
arpl
adc
ret
mov
imul
pop
mov
mov
cmc
push
xchg
push
pop
mov
daa
hlt
pop
mov
aas
push
inc
mov
adc
in
jae
add
mov
out
jl
push
or
sbb
jecxz
fwait
cmp
aaa
stos
adc
mov
pop
orl
sbb
jnp
mov
cmpsl
and
mov
sbb
add
sbb
mov
mov
add
loope
xor
ss
shll
fwait
in
mov
jnp
stos
xchg
lcall
xchg
scas
pop
enter
fcom
push
mov
lcall
or
rcl
andl
mov
insb
push
adc
mov
jbe
mov
or
stc
mov
fnsave
xlat
sbbb
jle
cmpsl
call
into
cmp
cmc
movsb
in
scas
xchg
sbb
shll
dec
xor
into
mov
repnz
mov
stos
icebp
movsb
add
out
jno
push
push
mov
jae
ror
xor
cmp
mov
mov
in
cli
sbb
rclb
cmp
out
in
cmp
sub
pop
fsub
cmpsl
xor
or
xchg
mov
sub
fst
mov
stos
stos
or
mov
add
sub
xor
and
lcall
mov
xor
pop
cmpsb
ficomps
xlat
adc
test
jne
push
mov
or
gs
lret
inc
mov
cmp
test
mov
ds
mov
bound
movsl
arpl
pop
xchg
xlat
outsl
mov
adc
sub
jmp
fwait
ja
loope
xchg
jnp
xchg
je
mov
aam
mov
cmp
out
inc
mov
jg
mov
add
add
cli
imul
mov
mov
xchg
mov
pop
mov
nop
add
xlat
hlt
or
cmpsl
and
cmpsl
pop
sub
xor
xor
lods
xlat
lock
movsl
addl
xor
imul
mov
cmp
adc
mov
ljmp
cwtl
mov
mov
je
cwtl
mov
ret
iret
data16
ret
mov
jne
push
mov
push
cmp
ja
sbb
in
or
pop
fidivrl
movsl
push
lea
orl
mov
xchg
sub
mov
decl
je
mov
push
jnp
adc
xchg
cs
icebp
cmp
push
mov
fsubrs
pop
sbb
and
pop
add
cmp
pop
push
jo
imul
jns
mov
ret
add
mov
adc
loope
jbe
xchg
fbld
rclb
out
mov
lret
mov
xor
in
test
test
add
jae
arpl
aam
cmp
stos
scas
ret
in
lea
sub
cmpsb
test
loop
push
jg
and
scas
mov
pop
inc
icebp
xor
mov
mov
cmc
mov
mov
jae
xchg
adc
lcall
sub
or
mov
cmp
sub
mov
test
jnp
mov
mov
jg
pop
xchg
mov
push
sbb
mov
pop
inc
dec
std
jae
int
xorl
outsl
test
inc
jbe
cmp
jnp
xor
negb
adc
addr16
xlat
arpl
xor
adc
mov
pop
push
std
insb
xor
jecxz
mov
outsl
dec
jne
mov
hlt
or
jno
cs
push
inc
mov
dec
lds
movsl
sub
aam
insl
pop
stos
xorb
inc
xchg
mov
mov
stos
test
loope
mov
adc
jnp
xor
bnd
pop
inc
addl
lahf
in
out
xor
test
cmp
or
stos
mov
mov
cmp
out
add
inc
lods
outsl
xor
and
mov
call
stos
cwtl
mov
add
jb
lods
jecxz
pop
pop
cmp
adc
mov
xchg
add
bound
sbb
fldcw
stos
ret
fdivrs
cmc
pop
mov
cmc
insl
cwtl
xor
add
xchg
inc
scas
hlt
xlat
sub
daa
cmp
sub
fists
mov
das
lock
aam
cmpsb
bound
mov
pop
adc
mov
cs
fidivrl
sbb
aas
cltd
test
loopne
xor
mov
bound
hlt
add
sub
arpl
gs
int
mov
lret
mov
test
jmp
dec
insb
mov
and
xchg
ret
lcall
stos
dec
add
mov
test
cmp
inc
sbb
xor
arpl
dec
shll
aaa
mov
loop
mov
xchg
mov
test
mov
xchg
cmp
loop
mov
adc
add
shll
ret
out
mov
lods
imul
arpl
xchg
and
mov
jg
test
test
cli
jp
lods
in
jnp
jno
scas
stc
subl
les
push
mov
ja
xorl
movsb
sbb
subl
mov
sub
fimuls
sub
add
lods
pop
mov
cmp
dec
mov
mov
aas
or
fcomps
lock
stos
jb
and
mov
mov
and
xchg
inc
xor
roll
jge
arpl
xor
jle
movsb
mov
fwait
push
nop
adc
scas
arpl
and
mov
xor
outsb
leave
call
xor
pushf
hlt
jae
mov
test
or
mov
mov
cmp
lods
mov
xchg
test
adc
cli
shll
movq
mov
repnz
lcall
daa
test
movsb
out
testl
sub
fcoml
aas
cmp
test
test
cmpl
fiadds
lahf
hlt
cmpsl
push
fsts
arpl
pop
xlat
notl
mov
mov
or
sbb
icebp
mov
jne
stos
out
jl
adc
cmpsl
sbb
dec
popa
outsb
loopne
cmp
cmpsl
cmpsl
push
ret
adc
jnp
dec
mov
xlat
in
out
cli
lods
xchg
cmpsl
xorl
inc
stos
inc
xchg
loopne
scas
jo
xor
ficompl
mov
jmp
adcl
lcall
mov
nop
jo
pop
pop
mov
mov
xorb
lahf
cli
mov
gs
xlat
je
adc
mov
xor
and
out
cltd
mov
es
xchg
imul
dec
hlt
popf
stos
push
mov
fdivs
cli
jle
andb
aaa
xchg
jne
mov
cmpsb
daa
fmul
aam
aaa
jp
inc
inc
lods
cltd
dec
mov
pop
fwait
adcl
pop
popa
pop
or
imul
jmp
mov
or
sub
sti
inc
stos
jne
mov
in
lret
mov
push
push
call
out
xlat
jnp
mov
jae
xor
out
fdivrs
push
pop
mov
cmpsl
cmpsb
dec
sbb
mov
or
mov
mov
arpl
mov
pop
pusha
lcall
stos
outsl
into
xchg
mov
jnp
mulb
mov
mov
pop
cmp
pop
daa
xor
imul
inc
jg
loope
ret
out
pop
pop
int
xchg
test
and
pop
sbb
inc
repnz
or
in
mov
es
mov
fsubr
mov
out
data16
inc
mov
inc
sub
pop
dec
mov
popf
dec
leave
in
jae
push
fwait
mov
inc
mov
bound
sbb
lret
ja
outsl
mov
xchg
arpl
xor
and
imul
xor
mov
mov
movsb
mov
mov
lods
lds
or
dec
mov
pop
aaa
stc
push
xchg
xchg
mov
test
xor
jl
bound
xchg
adc
mov
dec
movb
xlat
cmp
shlb
mov
sti
mov
inc
mov
jnp
icebp
or
ret
inc
movsb
stos
sub
in
sub
mov
xlat
outsb
mov
cli
cmpb
and
adc
les
mov
jo
push
jecxz
sbb
mov
aam
pop
xor
xorb
and
std
enter
out
mov
mov
mov
mov
insl
xlat
mov
jp
mov
mov
jns
fidivs
adc
mov
fisubrs
push
add
scas
cmpsl
aas
imul
aaa
cmp
test
out
cld
test
xchg
xchg
mov
cld
out
fsubl
mov
jnp
repz
loop
into
jnp
scas
arpl
test
jae
es
and
dec
lds
and
das
mov
dec
imul
add
push
aad
inc
lods
mov
daa
lcall
or
aas
divb
jnp
arpl
shlb
sbb
pop
scas
bound
sahf
shlb
and
xor
sub
xor
add
and
mov
xor
mov
das
cmp
cwtl
jmp
lds
sbb
leave
fidivrl
or
mov
or
jp
xor
das
and
pop
mov
mov
pop
sub
xchg
stos
pop
inc
inc
push
push
insl
mov
mov
shlb
mov
mov
mov
nop
mov
mov
inc
and
pop
lret
enter
outsl
push
mov
dec
inc
ljmp
leave
jne
cs
jp
cmpsl
popf
cli
push
push
mov
adc
hlt
lds
jle
mov
es
pop
sbb
aas
pop
imul
adc
imul
push
jno
inc
mov
loop
mov
push
rol
mov
dec
jp
xor
jns
imul
push
idivl
adc
inc
pop
adc
cmpb
stc
in
bound
hlt
pushf
mov
loop
addr16
sbb
lds
gs
push
mov
inc
repnz
adc
jg
movsl
ret
mov
sahf
lds
inc
inc
dec
push
sbb
addr16
pop
in
mov
sbb
xor
push
mull
pushf
fdivl
data16
ja
cwtl
xchg
es
add
cwtl
jns
jge
das
mov
sub
es
arpl
pop
out
add
mov
sub
cmp
cmp
adc
mov
pop
push
mov
jl
arpl
cmp
push
loopne
ret
andb
jo
sarb
pop
sub
cmp
add
inc
incl
clc
push
arpl
mov
sub
cwtl
and
mov
lods
fwait
cld
cltd
and
divl
push
shlb
movsl
gs
mov
mov
and
inc
vaddsubps
movsl
xchg
or
mov
xchg
or
mov
and
xlat
aam
test
mov
jne
in
lock
scas
cltd
repnz
sbb
out
icebp
fwait
ljmp
lahf
add
dec
cmp
mov
inc
fwait
out
mov
lret
iret
sbb
xorl
test
daa
add
repnz
dec
push
or
cli
scas
dec
bound
fmul
mov
jno
mov
inc
pop
out
lods
neg
lods
loopne
cld
cmpsl
call
mov
sti
mov
xchg
fldl
mov
subl
cltd
cmp
push
lcall
mov
roll
test
pop
mov
xchg
xchg
push
jno
push
jmp
mov
stos
dec
xchg
in
orl
mov
daa
int3
cwtl
loopne
inc
mov
pop
inc
pop
mov
rclb
adc
mov
add
gs
xchg
mov
loop
repnz
xchg
pop
cmp
push
dec
in
cmp
mov
and
cmp
scas
adc
stos
ljmp
jae
fistpll
sbb
xlat
aas
or
adc
sub
sub
mov
fwait
jnp
cltd
sbb
xchg
and
and
das
rcrb
push
push
dec
stos
aam
push
jnp
mov
push
aas
cmp
mov
sbb
andl
in
and
sbb
scas
cwtl
fcompl
fstpl
jl
sub
mov
in
scas
hlt
repz
cmc
and
jns
adc
mov
or
imul
idivl
cli
jno
and
mov
xlat
insl
adcb
fcompl
pop
aam
push
ljmp
and
mov
mov
stc
lret
mov
mov
jnp
outsl
test
scas
sub
push
mov
push
push
imul
mov
xor
andl
dec
cwtl
movsl
pop
addr16
repz
or
and
loopne
mov
mov
test
enter
ja
test
mov
pop
cmp
cmp
dec
mov
mov
mov
cmpl
mov
sbb
xchg
mov
pushf
xchg
test
mov
xchg
xor
out
shll
and
test
mov
loop
sti
xchg
dec
jnp
outsb
jle
rolb
mov
xchg
mov
adc
cmp
dec
jle
cmp
gs
push
add
daa
add
add
push
ficompl
notb
aas
int
fsubs
mov
fs
mov
shrl
sub
andb
mov
rcl
imull
cwtl
stos
leave
add
inc
inc
and
ds
fwait
rcrl
lds
cmpsl
cld
mov
fstpl
dec
bound
xchg
fidivrl
sarl
lds
mov
fcoms
outsl
repnz
es
or
test
mov
lea
inc
movsl
xlat
jae
mov
xor
in
mov
addr16
cmp
mov
sub
mov
daa
rorl
and
jae
lcall
mov
es
mov
rclb
mov
push
xor
test
pop
cwtl
cmp
fwait
lock
sbb
shll
mov
mov
loope
fwait
shll
add
push
jne
js
shll
cmpb
jb
call
inc
fwait
orl
and
dec
push
mov
mov
imul
mov
sbb
adc
shl
xor
xchg
jnp
mov
cld
stc
and
icebp
mov
xchg
hlt
subl
lds
adc
xchg
push
xorb
cltd
cmp
dec
mov
push
outsl
mov
mov
data16
movsb
div
cmpsl
jb
or
cwtl
dec
push
jae
add
and
mov
aaa
xchg
addr16
lret
jg
sarb
sarb
mov
and
and
arpl
test
pop
adc
jae
mov
adc
xchg
push
les
mov
insb
xchg
ljmp
in
mov
popf
sub
add
xchg
add
and
arpl
pop
push
nop
mov
mov
add
cwtl
mov
and
add
fwait
xor
and
xor
jae
cmp
add
add
push
jne
adc
scas
lds
or
cmc
adc
xchg
xorb
es
test
inc
in
lahf
mov
jl
bound
adc
lret
es
mov
test
cwtl
in
sub
mov
cwtl
xchg
mov
cmpl
xor
es
cmp
sbb
mov
xlat
and
lods
cmp
in
add
mov
xorl
inc
mov
punpckhwd
rcl
jg
lods
push
incb
and
push
mov
mov
fidivl
jmp
jne
sbb
xchg
in
dec
fbld
jae
packuswb
mov
bnd
rcrb
bound
jl
fstps
mov
mov
mov
and
mov
arpl
adc
in
cmp
pop
test
add
jb
cwtl
xchg
xchg
out
sahf
cltd
cmc
add
ret
cmp
test
icebp
dec
sbb
or
inc
movsl
inc
int3
jae
adcl
aad
and
cmpsl
mov
dec
jne
push
cmp
adc
xor
pop
mov
inc
or
popa
popf
cmp
adc
jl
movsb
and
fwait
ret
imul
test
add
mov
cld
ret
cwtl
push
mov
mov
inc
shll
xor
inc
cltd
movl
cmp
sarl
aam
xchg
xorb
jne
jnp
add
mov
mov
lds
stos
cmp
mov
cmp
bound
stc
mov
mov
xlat
adc
ss
pop
mov
jae
and
loop
jge
lahf
push
jecxz
rorb
xchg
sub
mov
mov
xlat
rsm
das
xor
xchg
bound
sub
sbb
mov
out
adc
xchg
test
ja,pn
cltd
jge
jne
mov
mov
inc
add
mov
jae
idivl
lret
xchg
rol
fwait
mov
cmpl
ret
sub
stc
icebp
push
pop
adc
and
ss
imul
jg
into
les
shlb
shrl
pop
mov
test
dec
mov
mov
stc
push
adc
negl
in
mov
bnd
adcb
mov
mov
mov
xor
arpl
rcll
scas
repnz
adc
jb
xor
cmpb
cmp
sub
mov
rcrb
xchg
mov
sarb
pop
rorl
dec
nop
cmpsl
add
xor
jg
in
loope
inc
test
cmp
outsb
jns
mov
jmp
fwait
mov
xor
ret
cmpsl
xacquire
outsl
sbb
pop
xchg
xor
ss
mov
popa
and
divl
jp
sub
and
rorb
adcb
mov
shrb
jl
mov
cwtl
dec
ss
fisubrs
loope
add
stos
test
imul
cmp
jne
es
inc
cmp
xor
fisttps
loop
jecxz
shlb
and
mov
add
mov
shll
inc
mov
enter
mov
imul
adc
sub
sbb
or
and
mov
test
push
add
mov
cwtl
add
cwtl
loope
roll
and
cld
icebp
push
pop
inc
ret
out
movsb
or
in
es
and
mov
icebp
insb
push
jl
jmp
cmpsl
pop
ss
cltd
cmp
add
mov
mov
add
push
ret
in
pop
push
test
shr
icebp
jmp
verr
mov
adc
int3
jb
std
je
mov
testb
shrb
imul
mov
add
adc
and
jnp
aaa
and
xor
or
push
lcall
inc
mov
stc
mov
and
jae
and
cmpsl
sbbl
movsl
sub
stos
loope
adc
les
xor
in
movsb
jne
icebp
or
inc
daa
fbstp
mov
ret
pop
xor
addr16
in
cltd
shlb
cmp
daa
test
xlat
push
dec
fisubl
and
movsl
mov
and
cmp
stc
mov
icebp
rcrb
loope
mov
xor
cmpsb
and
jg
inc
test
xchg
pop
arpl
xor
xchg
cli
xchg
pop
test
mulb
adc
in
les
lds
sbb
sbb
enter
clc
add
arpl
xor
mov
bound
sti
cwtl
inc
jne
js
and
and
sbbb
or
mov
lock
inc
mov
xor
jns
mov
jne
cmp
inc
pop
xchg
cmp
das
icebp
cltd
inc
leave
in
mov
rcrb
lds
stos
test
and
sti
pop
inc
and
repz
and
imul
jns
test
test
dec
sub
or
mov
adc
mov
mov
mov
jge
adcb
xchg
movsb
sbb
sub
scas
push
mov
cmp
ss
push
cld
sti
ret
dec
mov
push
scas
jnp
test
dec
mov
xchg
mov
out
cwtl
mov
loope
inc
sahf
cmp
mov
scas
ljmp
iret
push
daa
adc
in
pop
cmpsl
pushf
xor
xchg
xor
stc
adc
xorl
inc
rolb
push
stos
sbb
mov
loope
outsl
andl
jl
fwait
adc
mov
insb
mov
inc
add
and
adc
pop
sarb
std
bound
mov
repnz
cmpl
cmp
xor
sbb
push
cwtl
adcb
aas
jne
mov
mov
xor
arpl
pop
xlat
pop
xor
fs
mov
gs
enter
pushf
xorb
stos
jecxz
mov
sbb
jae
add
addr16
cmp
pushf
ret
add
or
jne
cwtl
std
sar
jb
push
xor
xchg
add
mov
cmpsl
and
inc
mov
jne
cmp
into
mov
arpl
add
testl
fbld
mov
mov
mov
mov
mov
adc
icebp
cmp
daa
mov
out
mov
xchg
jae
inc
adc
mov
popf
mov
xor
mov
movsl
cmp
les
imul
sub
cmp
outsl
add
scas
cli
out
ret
mov
mov
xchg
cmp
xor
test
stos
mov
xchg
loop
xor
mov
mov
icebp
inc
mov
xor
fmul
jne
mov
add
inc
cmp
pop
inc
fidivl
sti
or
loope
jne
cmpsl
cmp
cmpsb
aaa
mov
in
push
ret
xchg
loopne
in
cltd
jne
addr16
cmp
pop
sbb
inc
loop
mov
cmpsl
mov
xor
clc
adc
loope
mov
xchg
popf
jb
and
mov
push
inc
mov
push
scas
shlb
test
bound
imul
mov
inc
xor
mov
inc
add
nop
jl
or
inc
imul
daa
mov
pop
loope
icebp
mov
jns
and
stc
sbb
arpl
push
loopne
pop
xlat
xor
add
xchg
dec
out
sub
and
inc
inc
cmp
int
or
push
mov
push
and
cmp
movsl
std
scas
mov
scas
rcrl
sub
push
lahf
cmp
icebp
dec
inc
aaa
jnp
add
cmp
dec
inc
or
call
cmpsl
mov
mov
lcall
test
dec
scas
xchg
sub
pop
or
mov
mov
xorl
mov
outsl
mov
fwait
xchg
enter
mov
push
xchg
xchg
xchg
xchg
xchg
ficoml
mov
pop
pop
push
xchg
mov
outsb
mov
xor
cmpsl
jns
in
mov
loop
pusha
mov
jnp
mov
push
xor
jle
js
pop
loop
out
test
mov
es
push
imul
cwtl
aad
mov
fsubrp
jnp
inc
cmp
mov
js
cmp
mov
ja
mov
icebp
xchg
sbb
mov
arpl
cmp
icebp
sub
loop
push
dec
xor
mov
xorl
and
incb
mov
jae
mov
loop
inc
data16
add
push
xlat
pop
mov
inc
mov
sub
loop
pop
arpl
mov
xor
fcoms
in
pop
aad
cmpsl
jnp
jl
fmuls
jmp
lret
dec
mov
ljmp
pushf
xlat
pop
and
popa
and
arpl
fwait
inc
aam
clc
cmpsl
outsb
loop
test
add
mov
mov
aas
inc
dec
mov
fwait
mov
adc
in
push
mov
test
out
idivl
sub
jne
push
mov
cmp
inc
mov
les
sbb
loop
repz
push
addr16
mov
sbb
push
lea
jge
cmp
or
sub
pop
mov
addr16
xor
scas
call
out
xor
and
mov
add
cwtl
mov
and
lds
mov
inc
mov
push
testl
cli
xchg
lds
mov
lret
js
mov
mov
mov
loop
icebp
jae
mov
mov
stos
shlb
je
cmp
inc
add
pop
inc
lock
add
ret
sub
dec
movl
arpl
dec
cmp
aas
adc
movsl
ret
in
xchg
cmp
cmc
cmp
fwait
xor
test
jb
movsl
jne
mov
dec
mov
stc
sbb
adc
daa
test
repnz
jns
push
icebp
es
lds
xor
and
push
mov
fadds
test
loop
shl
ret
push
xor
out
shlb
cltd
aam
clc
and
mov
loope
rclb
add
mov
jns
pop
inc
cmp
lods
jae
add
mov
inc
xchg
aam
cmpsl
xor
xchg
mov
inc
jae
shrl
sbb
lret
cmpsl
movsl
lret
lahf
arpl
xchg
and
pushl
mov
fld
add
aam
fucomip
xor
or
rclb
rcll
enter
cmpsl
aas
jne
mov
adc
adc
xor
mov
in
or
sbb
addr16
inc
push
mov
fildl
xlat
xlat
adc
mov
sbb
stos
dec
cmp
mov
cmp
sbb
cltd
loope
lods
sbbl
int
adc
cmp
jae
adc
and
cwtl
mov
scas
popf
xchg
mov
test
mov
stos
mov
sbb
pop
inc
mov
mov
pop
mov
idivb
jae
cmp
pop
call
aas
jg
dec
inc
fwait
cmpsl
repnz
inc
lcall
dec
aam
hlt
sti
inc
stos
roll
test
dec
mov
sarb
mov
mov
ss
xlat
jns
daa
sti
rcrb
jle
xor
cmp
xor
push
pop
and
xor
jo
mov
scas
and
ret
sub
fcoml
push
inc
mov
subb
jg
pop
divl
mov
out
ret
clc
push
mov
fistps
test
fwait
addr16
jl
and
inc
subb
cmp
jb
cmp
daa
mov
adc
add
mov
xchg
cltd
xor
push
notb
pop
push
mov
jnp
or
mov
lds
es
ret
mov
add
cmp
jno
repnz
outsl
rorl
mov
sarb
or
fwait
mov
push
test
xor
pop
inc
loopne
sub
or
jae
fadds
sbb
push
pop
stc
cmp
ss
mov
and
inc
cli
adc
mov
inc
push
outsl
bt
lret
mov
mov
jno
loop
mov
shlb
bound
das
divps
mov
int
inc
xlat
divl
pop
mov
cmp
xor
shlb
adc
fisttpll
and
mov
dec
loop
cmpl
xlat
insl
aaa
stos
xor
jle
js
mov
dec
testl
lock
mov
mov
dec
mov
or
icebp
js
popf
xor
testl
push
mov
popa
mov
stos
cmp
gs
jnp
imul
hlt
mov
fiaddl
xchg
mov
popa
lahf
pushf
jae
bound
ja
pop
cltd
jmp
insl
pop
and
outsl
pop
in
jno
jmp
push
rcll
xor
in
ljmp
jae
hlt
iret
jne
out
nop
dec
stos
cli
and
js
mov
aam
rcrb
mov
repz
cmp
mov
subb
pop
adc
sbb
cltd
movsl
icebp
ret
out
out
js
mov
pusha
inc
icebp
jne
mov
bound
sbb
insl
mov
gs
adc
inc
and
in
mov
cmpsl
idiv
inc
jne
add
imul
stc
ret
bound
test
shrb
shrb
cltd
test
adc
test
lea
mov
inc
sarb
ret
sahf
push
mov
inc
adc
pusha
in
es
imul
cwtl
rcl
inc
mov
mov
or
jns
push
aas
in
fnsave
add
repnz
rol
mov
mov
int3
xchg
adc
push
mov
xor
loop
out
mov
pushl
dec
and
xchg
mov
and
xor
mov
mov
xchg
push
jge
lds
push
and
add
jle
ret
mov
xor
cwtl
mov
idivl
bound
push
mov
ds
mov
xchg
cld
lahf
incl
lds
cmp
add
mov
arpl
jae
rcrb
mov
sbb
cld
loop
test
aas
jb
mov
pop
bound
mov
xor
push
cmpsb
outsl
mov
icebp
jne
ljmp
jb
sar
mov
inc
mov
dec
mov
sub
rcrl
adc
adc
inc
loope
andl
int
lds
mov
cmp
inc
inc
rorb
jae
cwtl
hlt
jp
push
xlat
nop
sbb
gs
inc
loope
adc
xchg
outsl
xlat
mov
cmpsb
and
jmp
cmp
repnz
push
in
mov
pop
movsl
xor
cmpsl
outsb
lea
mov
push
fcomps
arpl
loope,pt
pop
push
sub
repnz
cld
cltd
lahf
mov
scas
cwtl
rcll
xchg
lods
or
mov
pand
mov
sarb
stos
or
insl
xchg
xorl
imulb
es
sub
bound
push
add
rorl
mov
cmp
push
xor
rcl
xchg
push
mov
add
insl
arpl
pop
loope
cmovs
mov
aaa
lods
shlb
mov
jne
mov
inc
sbb
sarb
adc
mov
arpl
subb
scas
inc
mov
scas
movaps
rolb
clc
cmpsl
mov
aaa
jle
movsb
xchg
push
fwait
outsb
lock
mov
bound
data16
imul
ds
arpl
pop
xor
mov
mov
lods
lods
mov
add
mov
adc
sub
roll
sub
fadds
add
sarl
aam
fwait
cwtl
movsl
clc
adc
jae
cmp
jno
inc
mov
pop
aas
mov
sbb
inc
stos
pop
rolb
pushf
and
loop
inc
addr16
mov
lcall
inc
ret
stc
mov
imul
pop
inc
cld
and
xchg
mov
loope
shll
mov
mov
popf
cli
fcmovnb
xchg
jne
cmp
ss
aam
adc
test
jns
xchg
jne
loop
sarl
fiadds
mov
and
push
rclb
mov
out
inc
mov
xorl
mov
and
inc
test
mov
ret
out
imul
shll
ret
xor
or
in
mov
and
cwtl
xchg
stos
ret
imul
xor
dec
jmp
lahf
inc
fwait
loop
pop
and
mov
cmc
push
cli
out
sbb
repnz
lahf
mov
cmp
pop
aaa
inc
imul
mov
xor
jge
test
mov
mov
xchg
stc
push
xlat
mov
mov
adc
cmp
jns
icebp
mov
stos
dec
roll
xor
out
movsl
scas
pop
stos
jae
sub
cmp
jl
js
or
mov
mov
aas
ds
mov
cmp
loop
loope
mov
call
mov
xchg
inc
jns
mov
fs
test
loop
jae
lods
shrl
jp
mov
stos
in
cmp
cmp
subb
jnp
lods
cs
inc
dec
mov
test
pop
jge
jae
sbb
and
enter
ss
movsl
or
fwait
add
jne
mov
into
xchg
xor
inc
test
in
sbb
daa
push
jmp
mov
add
cmp
cmpsb
mov
adc
mov
lods
jns
mov
idiv
imul
adc
cltd
add
gs
in
test
mov
xchg
add
mov
push
pop
dec
imul
sarl
pop
cltd
test
push
xchg
fwait
ja
ss
arpl
daa
pop
icebp
mov
jge
loope
in
xchg
inc
sbb
lds
andb
adc
jns
mov
mov
addl
push
xchg
xchg
pop
arpl
xor
sbb
lds
mov
mov
adc
scas
pop
fadds
xor
pop
and
jb
xorl
or
test
jnp
add
add
inc
mov
mov
and
js
mov
rcrb
in
xor
xchg
lods
cmp
mov
int
stc
mov
aas
lds
push
es
and
mov
test
sarl
ret
sbb
loop
mov
arpl
add
mov
push
mov
fiadds
cmp
adc
mov
xchg
mov
push
shl
sub
cld
stc
cmp
pop
and
subb
aas
ror
test
cwtl
stos
adc
rcrb
out
pusha
pop
xor
mov
and
ljmp
out
jo
mov
cmp
push
mov
push
mov
clc
jns
pop
test
dec
inc
jo
cld
cmp
mov
xor
cltd
and
in
loope
ljmp
push
jl
pop
jae
cmpsb
add
xor
gs
xchg
cmp
in
inc
inc
jnp
xorb
xchg
xchg
les
fsub
and
and
es
jge
fwait
push
rorb
aaa
dec
mov
ds
mov
push
jmp
aam
jb
inc
fwait
test
pop
cli
imul
xchg
mov
shll
aas
gs
aam
imul
adc
xchg
jae
inc
mov
add
adcl
dec
mov
scas
jge
aas
lahf
mov
loope
jo
stos
xchg
adc
jecxz
addr16
push
ret
mov
add
jne
jp
mov
aas
cmp
push
jmp
scas
mov
xlat
xchg
xor
test
imul
es
cmp
test
jge
mov
cmpsl
adc
push
sti
icebp
jns
sbbl
stos
mov
aad
ss
cmp
mov
add
xchg
cwtl
inc
stc
addr16
or
adcb
xchg
inc
xlat
inc
rolb
arpl
cmpsl
mov
jge
sub
pop
xor
bound
cmp
lret
jl
aad
aas
inc
lds
movsl
negl
pop
rcl
push
mov
sbb
lret
push
fadds
mov
add
cmpsl
dec
xchg
pushf
les
push
and
rolb
mov
inc
mov
adcl
cmpsb
push
mov
andb
jne
mov
and
mov
loope
roll
jae
inc
aaa
ret
lret
mov
jnp
mov
lock
mov
adc
cli
mov
lret
or
push
notl
push
bound
rcpps
adc
lods
inc
mov
mov
adc
xchg
push
mov
lcall
les
jmp
lret
inc
xor
mull
fwait
int3
sbb
loop
outsl
adc
inc
xchg
clc
cli
mov
mov
dec
and
mov
jae
out
add
xor
xchg
aaa
cmpsl
or
xlat
jnp
push
test
shll
subl
xchg
xlat
mov
into
or
pop
jno
in
mov
xor
repnz
sbb
shrb
jl
dec
mov
push
xor
andl
lock
ret
rclb
cmp
mov
xor
mov
push
mov
leave
subl
idivl
jns
icebp
lock
outsl
cmp
sub
fdivs
cmp
loope
xor
sub
popa
mov
cld
lcall
mov
adc
mov
fwait
in
and
mov
cwtl
cmp
mov
jne
mov
in
mov
ss
cltd
xlat
cmp
push
cltd
ret
mov
scas
mov
xlat
xchg
and
xorl
cmpb
push
cmp
scas
xor
adc
inc
mov
jae
pop
xor
mov
jle
push
test
xor
xchg
mov
xor
push
mov
push
and
fstps
sub
xchg
jb
inc
inc
mov
push
aas
xor
xlat
test
lahf
mov
aam
mov
add
mov
cwtl
shl
xorb
xchg
mov
cmp
into
andl
jecxz
mov
mov
inc
jne
mov
jge
rorl
jae
aaa
in
cltd
sahf
loop
mov
gs
int
mov
and
imul
xchg
xlat
dec
pop
pop
shlb
out
andl
in
cmp
int3
mov
stos
mov
adc
pop
push
mov
dec
lods
and
sub
negb
test
sub
jecxz
pop
test
push
or
sbb
pop
ret
mov
mov
iret
call
jnp
test
push
outsb
sbb
and
dec
pop
imul
sbb
mov
sub
clc
stos
hlt
and
bound
mov
repz
jae
sbbl
mov
and
loope
mov
adc
repnz
xor
mov
shl
xchg
jae
ret
jge
cmp
call
sar
aas
fidivrl
sarb
cltd
inc
dec
and
mov
push
xor
out
fwait
rclb
mov
fnstsw
fnstenv
add
stc
movsb
dec
xchg
xchg
or
gs
leave
outsl
scas
loop
and
out
jne
inc
add
mov
cmp
movsl
pop
jb
mov
jmp
shll
push
or
xchg
out
xor
movsl
add
notl
fwait
iretw
imul
xor
stc
dec
xor
hlt
xlat
or
sub
loope
outsl
div
cmp
push
cwtl
push
mov
repnz
cwtl
stos
mov
loope
mov
ret
cwtl
cmp
mov
xchg
adc
jb
inc
push
sub
cmpsl
inc
cltd
rcrb
adc
jno
in
mov
add
mov
gs
push
cwtl
xchg
jge
out
and
sbb
mov
sahf
mov
mov
lcall
push
xor
adc
movsb
lods
cli
or
stc
pop
pop
fwait
out
repnz
mov
jg
xchg
xor
daa
jecxz
add
xor
pop
cmpsl
in
pop
jae
jnp
jecxz
mov
xor
mov
dec
dec
xchg
mov
jne
mov
leave
icebp
adc
gs
cmp
jb
stc
and
loope
shl
dec
pop
push
mov
push
adc
pop
xorb
and
ljmp
in
pop
xor
mov
push
test
mov
and
inc
mov
out
mov
adc
out
mov
mov
xchg
lahf
mov
dec
sahf
cmpsl
sub
cwtl
inc
adc
and
pop
iret
mov
sub
xor
push
test
xchg
mov
iret
jo
lds
in
je
mov
scas
pop
insl
lret
call
pop
push
clc
ficompl
imul
mov
or
mov
je
mov
imul
xlat
push
jb
iret
pop
call
mov
insl
jp
sub
mov
cmp
mov
cmpsl
mov
std
jle
ficomps
or
jmp
add
mov
fimull
out
pusha
pushf
cmp
in
xlat
xor
gs
icebp
cmp
fisubrl
scas
mov
aad
push
call
scas
pop
ret
in
aas
gs
add
cmp
and
pushf
lcall
movsl
xchg
add
inc
dec
js
xor
imul
test
mov
aam
or
mov
rolb
mov
jb
stc
ljmp
mov
push
scas
mov
xchg
fcmovb
add
mov
cmp
call
test
cmp
out
mov
or
rolb
mov
push
sbb
sahf
mov
mov
test
sbb
cmp
mov
test
sbb
xor
test
cmpsl
shlb
mov
lahf
xchg
pop
sub
mov
std
mov
push
jnp
xor
jb
addr16
cmp
das
xchg
push
jne
or
mov
fldl
mov
push
aaa
sub
push
push
fdivrl
mov
cmpsb
xchg
mov
mov
mov
xchg
jnp
mov
lods
sbbl
and
mov
addr16
pop
repnz
stc
aaa
add
gs
push
push
xor
inc
cmp
mov
mov
cli
cltd
xchg
in
std
adc
mov
pop
cmp
mov
xchg
jnp
xor
or
and
lds
shll
test
addr16
ljmp
xchg
jnp
rcl
or
addr16
add
enter
ljmp
xchg
stos
xor
cmpsl
and
adc
lods
mov
lods
push
addr16
pop
cltd
les
mov
addr16
ss
push
jbe
into
jnp
xor
xchg
sbb
inc
cmp
push
xor
test
mov
scas
mov
push
ja
ja
mov
jns
std
jnp
stos
xor
sbb
cli
daa
mov
jae
mov
es
loopne
ficompl
scas
mov
mov
sub
xchg
sub
adc
and
adc
daa
stc
or
fadds
mov
adc
mov
inc
loop
push
mov
xor
jp
xchg
mov
xchg
jb
xlat
fwait
mov
xor
test
xchg
into
mov
imul
and
pop
xlat
addl
jae
dec
dec
roll
mov
xchg
xchg
lds
mov
mov
xor
mov
addr16
cld
push
and
mov
xchg
gs
xor
xchg
or
add
xchg
sub
test
sub
mov
jmp
das
mov
mov
and
jae
mov
xchg
aam
fdivs
and
add
xor
mov
inc
xchg
lahf
mov
mov
add
test
sbb
dec
cmp
bound
dec
sbb
push
cmp
inc
test
or
mov
cmp
addr16
push
xchg
jnp
lret
sahf
xor
lret
adc
jnp
test
aas
cmp
out
fbstp
push
dec
test
mov
fnsave
inc
sahf
pop
sub
addr16
pop
xchg
mov
cmp
push
stos
cltd
test
mov
pop
cmpsl
in
sarb
sbb
xchg
mov
jne
mov
xchg
jnp
xor
test
xorps
push
inc
push
jg
xchg
push
idivl
mov
cmpsb
pop
pop
leave
add
movsb
xchg
mov
xchg
jnp
lret
jb
addr16
aaa
add
ja
fadds
dec
jae
xor
sub
mov
pop
jg
xchg
ror
mov
add
cld
clc
cmp
stos
cmpsl
lcall
loope
dec
mov
xor
dec
jle
test
jg
and
xor
xchg
cmp
inc
pop
into
cld
bound
ljmp
mov
xlat
dec
and
mov
mov
xor
pop
sarl
cwtl
mov
into
mov
gs
outsl
sub
sub
mov
mov
or
mov
lods
scas
scas
mov
std
insl
ret
mov
stc
mov
pop
mov
repnz
lret
repz
mov
cmp
or
scas
pop
movsl
or
jl
xlat
inc
push
lahf
insb
sbb
push
lret
mov
lock
jge
in
cmpsb
mov
stc
vorpd
int
test
andb
jne
dec
and
jno
and
ds
cmp
mov
dec
push
mov
into
mov
andl
test
add
xor
movsl
in
jns
push
mov
mov
add
mov
xchg
and
mov
push
cmp
mov
lods
mov
bound
inc
mov
xor
jecxz
test
sbb
movsl
repnz
stos
push
and
mov
cmp
dec
inc
xor
dec
popa
mov
fbld
lea
pop
inc
lock
cmpsl
scas
mov
mov
movsl
cmp
mov
orb
push
push
mov
push
sbb
test
push
jge
mov
mov
mov
mov
ret
pop
sub
or
mov
popa
mov
jp
push
test
and
iret
xchg
jb
sbb
jp
jns
lahf
scas
repnz
shll
jg
xchg
into
pusha
lret
mov
xchg
pop
push
dec
loop
cwtl
push
enter
mov
mull
pop
lea
scas
jp
dec
or
mov
mov
cli
lret
mov
rorl
and
push
mov
jne
movsl
and
imul
jp
or
inc
mov
sub
out
pushf
adc
mov
and
cmp
jae
in
mov
mov
jg
push
add
in
out
pop
pusha
scas
scas
xor
pop
cli
cmpsl
adc
leave
mov
mov
mov
sti
mov
cwtl
mulb
mov
mov
push
jmp
cmp
and
adc
hlt
enter
push
ljmp
addb
les
inc
loope
pop
xlat
mov
in
aad
sub
mov
mov
mov
mov
movsl
xlat
insl
in
into
lret
fbstp
jecxz
aad
popa
mov
test
and
xor
clc
mov
push
lret
leave
mov
add
aad
dec
fnsave
sub
popf
xchg
mov
mov
repnz
and
push
mov
test
fst
cmp
sbb
xor
mov
sub
aaa
fadds
jecxz
loop
out
imul
dec
mov
jge
inc
ficompl
cwtl
imul
add
stos
dec
test
sbb
les
mov
mov
pop
mov
insl
xchg
add
mov
mov
fcomi
not
jno
mov
pop
mov
mov
ret
sbb
popa
mov
jl
add
cmp
retw
lret
movsl
push
push
int
cli
mov
scas
adc
add
out
adc
xlat
fsubrp
cmc
mov
mov
cmpl
fnstenv
pop
frstor
pop
xor
and
adc
je
cmp
loop
mov
mov
mov
xchg
pop
mov
xor
push
ja
pop
ss
into
xlat
in
test
inc
xor
leave
pop
ds
dec
out
mov
add
inc
sahf
stc
lds
stos
push
pop
dec
shrl
xchg
movzwl
pop
stos
mov
jg
inc
cmp
mov
xchg
mov
fdivrs
scas
faddl
aad
push
jl
aas
xchg
loope
mov
and
ja
cwtl
add
lret
daa
jae
jmp
and
xlat
sar
adc
std
mov
inc
mov
add
mov
lds
xor
jns
push
ret
pop
stos
testb
sbb
ret
sub
cmp
jp
mov
fwait
mov
xchg
pusha
and
jl
xchg
inc
nop
cwtl
xchg
and
lahf
or
adc
or
pop
movsb
movsl
ja
enter
push
mov
movsl
mov
lret
test
pop
pop
and
aam
mov
das
cmp
stc
aas
xor
pop
push
mov
stos
lahf
xchg
call
das
movsl
push
add
movsl
sub
mov
or
mov
fadds
fwait
out
loope
sahf
sub
ret
fsqrt
fidivrl
cltd
call
or
adc
movsb
push
mov
scas
xchg
arpl
lahf
xor
mov
pop
xlat
mov
inc
js
dec
xchg
push
jl
aas
sahf
mulb
clc
pop
insl
cwtl
and
mov
movsl
cwtl
push
mov
stos
mov
pop
clc
xlat
out
sbb
mov
test
std
pop
mov
sti
rcrl
outsl
dec
imul
mov
in
cltd
and
adc
cmpsl
fisubrs
loop
and
daa
pushf
push
mov
mov
and
cld
and
mov
and
xlat
ljmp
mov
popa
sbb
call
and
inc
mov
adc
push
cli
and
xchg
shll
jecxz
popa
fwait
loop
test
or
mov
mov
loope
icebp
cwtl
jmp
add
ret
mov
jnp
enter
sbb
push
mov
lret
test
test
testl
fdivs
mov
cld
xchg
pop
push
repz
adcb
repnz
jnp
aas
mov
dec
test
cs
jge
and
mov
inc
mov
lahf
cmp
cwtl
lea
scas
cmp
and
mov
stos
loopne
cltd
mov
or
push
dec
ret
sbb
xor
xchg
mov
outsb
mov
xchg
jecxz
xor
mov
sbb
or
in
pop
dec
scas
jns
sbb
cltd
pushf
dec
repz
adc
jo
mov
xorb
scas
data16
mov
paddq
mov
inc
lea
inc
stos
add
rorb
popa
xlat
in
push
pushf
mov
xor
sbb
minps
mul
mov
dec
cmpsl
ret
and
movsl
loop
in
mov
ret
addl
or
pop
mov
ror
lret
mov
pop
or
pop
mov
sbbb
jp
mov
pop
fadds
dec
mov
mov
aas
jo
sbb
mov
daa
fwait
test
mov
push
inc
repz
cmpsb
mov
jp
and
rcrb
mov
repz
mov
lahf
jmp
cmpsl
sub
pop
jb
or
xchg
mov
shrb
je
mov
test
sbb
jbe
test
shll
adc
les
shrl
jl
mov
dec
movsb
fwait
es
inc
cmpsl
roll
jp
leave
rol
mov
mov
cmpsb
sub
out
mov
inc
insb
sti
daa
push
mov
out
and
xor
int3
dec
stos
adc
pop
sub
insb
mov
mov
add
mov
push
hlt
sub
mov
xchg
xor
nop
scas
mov
mov
jne
or
loop
jns
push
mov
out
sub
and
xlat
mov
das
gs
ret
jge
sbb
mov
and
fisubrs
mov
xor
stos
xor
out
jns
push
mov
lea
inc
mov
jno
xchg
push
mov
sbb
mov
mov
mov
or
mull
mov
faddl
jle
mov
lcall
sbb
loop
xlat
inc
mov
mov
rcll
dec
jle
sub
cmp
insl
push
push
mov
dec
movsl
sahf
aad
aas
mov
enter
bound
sbb
aam
cmpl
add
lds
and
sub
sbb
adc
inc
mov
mov
cmp
in
scas
sub
inc
out
mov
ret
je
and
movsl
repnz
adc
stc
mov
mov
adc
pop
dec
sub
sbb
cld
sbb
cwtl
daa
xchg
andb
popf
jl
mov
test
sahf
pop
cmp
mov
cmpsl
pop
mov
outsl
jecxz
data16
jge
mov
mov
mov
out
mov
mov
test
push
mov
push
hlt
ret
dec
arpl
pop
shr
out
out
mov
jb
cmpsl
dec
bound
lret
mov
push
pop
movsl
ds
out
sub
cmp
or
push
sbb
sahf
adc
sbb
mov
popa
icebp
test
lods
mov
call
cmpsl
mov
or
ja
test
jns
cwtl
lods
mov
bound
fistps
mov
jae
jo
mov
shrl
adc
inc
mov
mov
scas
pop
lods
sbb
jl
mov
mov
test
pop
pop
mov
sub
fildl
int
testl
loop
jo
sbbb
mov
les
dec
inc
pop
and
xor
pop
push
mov
clc
mov
repnz
fstps
pop
pop
mov
imul
inc
leave
push
sbb
rcrl
mov
jb
sub
mov
lods
out
rcrl
inc
mov
mov
push
std
mov
jo
or
fsubp
fwait
stc
aam
bound
add
aas
sbb
cmp
jmp
or
rorb
loopne
enter
es
iret
pop
jg
lea
xor
pushf
mov
stos
push
or
mov
jecxz
in
dec
ret
ja
mull
lcall
cmc
loop
cmpsl
inc
xchg
lods
cwtl
cmp
test
mov
ret
push
insl
scas
mov
push
inc
mov
inc
mov
outsb
xchg
enter
xor
popa
mov
jmp
cmp
dec
sub
sbb
pop
mov
arpl
andl
mov
js
mov
jp,pn
push
add
aam
addps
push
sub
inc
xor
shlb
subb
cmp
pushf
fnstenv
pop
jae
jmp
test
xor
or
and
jns
cmp
add
repz
xchg
xlat
insb
xchg
jbe
fwait
scas
pop
movzwl
dec
add
mov
in
xchg
stos
sub
mov
or
aas
out
clc
mov
movsl
fisubrl
ficomps
lods
out
or
mov
fdivs
mov
int3
and
fwait
jl
sbb
add
stos
into
cmc
mov
mov
sarb
ljmp
rclb
inc
fidivl
sbb
ds
mov
aad
gs
popa
movsl
adc
iret
jmp
mov
and
push
inc
jo
sub
popf
inc
lcall
mov
mov
fcoms
adc
dec
in
cmc
aas
mov
inc
insb
cltd
mov
dec
push
mov
sub
in
jbe
movsl
push
jmp
lcall
sbb
and
add
jp
imul
fsubrs
xchg
sub
jl
cmp
push
mov
mov
rolb
jns
fcmovb
push
adc
icebp
push
mov
addr16
pop
std
and
sub
mov
and
sbb
into
scas
mov
stos
shrb
push
dec
fmuls
push
movl
ror
pop
sub
ffreep
std
cmpsl
adc
adc
shlb
movsl
fistps
mov
std
jnp
sbb
cmpsl
dec
fldt
dec
mov
pushf
leave
mov
negl
loop
xor
cmc
push
jns
add
mov
test
and
jnp
std
insb
sbb
mov
cltd
cmp
pop
repnz
mov
shll
enter
jno
xor
add
cwtl
shl
cltd
xchg
cmpsl
lds
shll
fwait
mov
addr16
mov
scas
ret
mov
das
cmp
jle
mov
mov
scas
inc
xor
adc
xchg
cmp
push
mov
fstl
sub
sahf
or
aaa
mov
imull
and
or
or
push
lea
sahf
inc
out
sub
adc
mov
leave
fcmovb
cmc
fs
mov
inc
movsl
js
lock
jo
adc
cmp
adc
sub
cmc
pusha
fdivs
sti
sti
pop
sbb
adc
negb
mov
mov
push
cld
ret
mov
jae
and
stc
mov
xlat
mov
push
push
push
xorl
cmp
js
mov
sbb
sahf
scas
lock
pop
xlat
inc
sbb
adc
cmp
cwtl
repz
add
push
push
mov
ffreep
test
mov
mov
scas
xchg
mov
jge
fs
sbb
lcall
jmp
aaa
sub
movsl
nop
push
xchg
cli
mov
mov
xor
mov
and
fisttpll
mov
repz
mov
xor
outsb
in
jae
scas
notl
lods
mov
fndisi(8087
mov
sbb
das
stos
sbb
jmp
inc
cmpsl
xor
stc
sbb
cltd
mov
fnstenv
dec
push
sbb
jne
lcall
and
cmpsl
das
fdivl
fldcw
dec
mov
outsb
push
mov
cmpsl
arpl
shlb
sbb
lock
and
jb
dec
cmpsb
stc
mov
popa
xor
inc
cmpsl
in
push
jbe
push
sarb
mov
popa
mov
mov
mov
jg
push
ud2
mov
mov
aas
adc
mov
cmpsl
inc
iret
rcll
movl
mov
sbb
inc
rcl
mov
into
mov
das
lcall
movb
dec
mov
fcoml
ss
inc
mov
lds
mov
mov
out
cwtl
and
popa
outsl
pop
lods
xchg
mov
mov
push
mov
test
jns
push
enter
repz
pop
inc
or
and
nop
mov
push
mov
sbb
sub
or
cmpsl
cwtl
lods
je
in
scas
leave
mov
data16
mov
scas
dec
xchg
pop
and
mov
incl
or
pop
xchg
leave
mov
cmp
mov
cmc
je
fstps
push
push
and
loop
sub
mov
imull
jl
test
test
cmp
filds
mov
xchg
movaps
mov
jl
mov
mov
or
mov
cmc
repz
mov
mov
or
movsl
sub
pop
icebp
cmc
push
fisubl
sarl
mov
mov
or
rolb
mov
dec
pop
imul
mov
inc
rcrb
iret
cmpsw
xchg
mov
mov
inc
ljmp
jge
scas
mov
xlat
push
in
mov
mov
test
xchg
cmp
jb
and
outsl
mov
sbb
and
outsb
mov
push
and
xor
jg
bound
notl
mov
movsl
mov
jmp
insl
popf
stos
xchg
ret
into
loope
mov
dec
cmpsb
repz
push
aam
mov
les
mov
mov
in
mov
mov
repz
mov
mov
pusha
ljmp
dec
repnz
dec
inc
xor
ret
sbb
andl
pushf
lahf
repnz
fdivl
aaa
shlb
jmp
dec
loope
inc
mov
stos
pop
aad
stos
or
cmp
cmpsl
mov
push
pop
test
xchg
ret
nop
out
lods
insb
fwait
cmp
cmpsl
sahf
xchg
in
pop
jmp
out
movsb
mov
xchg
outsb
scas
loope
std
mov
daa
pop
repz
test
jl
cmpsl
jnp
inc
mov
test
popf
into
idivl
imul
sbb
pop
mov
test
popa
ret
outsl
mov
add
rcrb
mov
in
mov
push
mov
pop
jbe
xlat
pop
bound
mov
test
aad
xlat
mov
movsl
rclb
cmpsl
push
daa
xlat
and
xorl
jmp
push
xchg
cmpl
mov
mov
mov
pop
sbb
mov
in
lahf
in
or
repnz
add
xlat
add
and
movsl
mov
mov
adc
mov
cmp
xchg
out
push
jmp
cwtl
scas
push
add
mov
sub
mov
pop
loopne
sub
mov
stos
xor
pop
mov
fldenv
pop
stc
rcll
out
imul
xlat
jp
add
pop
sbb
ret
adcl
xlat
test
cltd
mov
loop
lods
xchg
in
cwtl
outsl
cld
mov
xorl
add
mov
xor
xchg
pop
mov
test
mov
mov
adc
loopne
inc
mov
push
jl
scas
mov
scas
mov
sub
cmp
arpl
mov
dec
notl
movsl
jle
mov
js
fnstcw
xchg
push
mov
push
test
lahf
jg
ss
and
adc
loope
jns
cmp
dec
inc
pop
jg
insb
xchg
push
mov
int
notl
mov
sub
jmp
mov
pushf
inc
sbb
inc
lds
mov
jae
mov
xchg
fisubrl
mov
jecxz
xor
scas
pop
mov
jle
popf
inc
and
mov
jnp
cmpsl
out
lcall
ret
dec
mov
cmpsb
mov
test
rcll
mov
dec
inc
jno
data16
cmp
dec
stos
adc
lcall
sti
stc
test
popa
xlat
sbb
icebp
xchg
lods
orb
mov
sbb
fmuls
jb,pt
push
cltd
sbbl
jnp
shll
cmpsl
stc
sub
addl
adc
sub
mov
cwtl
hlt
aad
pusha
sub
iret
cmp
cmpsb
scas
jno
sbbb
je
lea
nop
mov
enter
dec
ret
xchg
cwtl
mov
sub
stos
cmp
sub
in
adc
cwtl
mov
xchg
in
xchg
pop
mov
mov
push
lods
mov
arpl
sub
cmpsb
mov
xchg
cli
repnz
mov
insl
and
jmp
or
mov
mov
xor
add
dec
jne
lea
xchg
mov
pusha
jae
push
ja
in
test
loope
nop
mov
add
inc
mov
mov
dec
test
mov
shl
inc
mov
mov
decb
xchg
sbb
xchg
mov
dec
lcall
outsb
repz
or
lock
xchg
addl
roll
and
sbb
mov
mov
imul
jl
orps
add
mov
cmc
xlat
and
mov
jmp
jl
add
mov
or
mov
inc
sub
lahf
mov
xor
lret
mov
inc
fdivs
dec
ret
and
mov
outsb
mov
jo
ret
sub
sti
loope
xor
mov
mov
xchg
cli
ds
in
mov
fisttps
mov
push
cltd
es
sbb
inc
mov
ret
loop
inc
adc
mov
xor
xchg
mov
jnp
stos
mov
insl
in
xchg
pop
jmp
ret
or
test
mov
push
sbb
nop
mov
fs
cmpsl
leave
and
push
lods
dec
dec
xchg
add
test
cmp
mov
outsb
mov
mov
xor
divl
xor
icebp
mov
jl
mov
aas
xchg
cmp
fsubs
out
cmp
pop
xor
inc
lea
fucomi
lahf
lahf
lods
cmpsl
aaa
call
lock
movsl
jae
les
cwtl
mov
and
pop
cwtl
rolb
sub
mov
mov
cltd
mov
xchg
fildll
mov
xlat
repnz
test
imull
adc
or
and
xchg
shrd
add
sub
mov
jns
lods
cmp
xchg
mov
adc
movsl
sub
in
mov
mov
xlat
xor
divb
setno
xor
cmc
add
pop
scas
movsb
ljmp
push
push
mov
call
push
lds
cld
leave
dec
lods
jbe
divl
jns
push
sbb
mov
mov
add
adc
and
and
stos
out
push
add
dec
jmp
mov
out
mov
or
test
mov
mov
mov
movsl
pop
movb
mov
imul
mov
loope
adc
std
xor
add
xchg
mov
cmp
xchg
data16
ret
imul
mov
and
movsl
dec
mov
mov
mov
xlat
inc
out
adc
xor
inc
and
mov
pushl
cwtl
push
cmp
mov
stc
lahf
sbb
inc
inc
pop
xchg
lret
pop
mov
ljmp
jno
cmp
xchg
clc
push
mov
test
int
push
out
lods
fidivs
icebp
mov
js
push
mov
xchg
adc
inc
dec
in
push
sub
lcall
xchg
ds
ret
mov
dec
mov
cmpsb
pop
shl
popa
imul
ret
cltd
and
aaa
addr16
push
mov
pop
mov
addr16
push
and
push
out
mov
dec
sbb
cmp
jge
mov
cmp
mov
dec
jnp
stc
and
imul
adc
mov
cmpsl
mov
add
cmpsl
mov
inc
aad
mov
loope
push
mov
fsts
cwtl
popa
push
js
xor
scas
call
dec
jne
int
repz
mov
inc
std
lock
inc
sbb
mov
insb
dec
mov
stos
cmpsl
lea
test
lods
xlat
and
cltd
movsl
add
jnp
sbb
loop
cltd
adc
inc
shll
and
push
nop
mov
xor
mov
pop
frndint
test
jne
and
xchg
xor
imul
xchg
stos
out
cmpsl
jl
aam
pop
xchg
testl
mov
std
xlat
inc
and
stc
adc
xchg
adc
mov
ljmp
mov
test
lods
cmpsb
mov
dec
pushl
movsb
test
test
or
jg
imul
and
cltd
movsl
out
pop
notl
dec
loopne
jbe
ret
stos
and
mov
add
mov
pushf
clc
mov
mov
fimuls
or
clc
inc
cmpsl
outsl
push
lods
mov
sar
lods
popa
in
rep
insb
mov
mov
push
add
or
aad
paddusw
pop
int3
fists
adc
jge
hlt
pop
loop
mov
or
cmc
mov
leave
sbb
test
cmp
push
mov
inc
add
mov
and
push
stc
cmpsb
loope
scas
movsl
mov
mov
or
ljmp
jmp
rol
mov
jp
les
mov
dec
jbe
mov
cs
popf
cmc
mov
push
rclb
in
push
cli
insb
fisubl
pop
iret
aad
push
mov
add
imul
fwait
clc
cmpsb
or
push
sub
dec
jg
fdivl
rorb
and
loope
lods
mov
pop
jp
push
cmp
mov
mov
loop
mov
jnp
mov
fsubl
xchg
xchg
sbb
scas
mov
test
shrb
call
push
mov
fbstp
mov
mov
mov
cmpsl
push
sbb
and
pusha
add
xchg
mov
scas
push
mov
dec
xchg
push
test
pop
lods
xor
call
push
lahf
and
push
cmp
loope
mov
dec
add
cmp
xor
test
cmp
sub
scas
cmp
cmp
mull
fisubs
mov
mov
add
clc
inc
arpl
mov
imul
or
pop
je
mull
inc
mov
movsb
dec
xorb
sbb
push
cld
and
or
pop
pop
repnz
dec
scas
dec
scas
jp
xor
int
les
imul
iret
adc
scas
sbb
push
popf
mov
mov
dec
notl
int
push
icebp
mov
mov
jo
push
xlat
sahf
mov
gs
loop
rcrb
dec
cmpsl
dec
ljmpw
cwtl
mov
mov
mulb
pop
les
mov
adc
mov
lods
fimuls
and
int3
mov
mov
mov
inc
rorl
ja
push
sbb
xchg
in
and
cmp
mov
mov
fadd
mov
push
std
aas
ds
out
outsb
jecxz
lods
mov
inc
mov
mov
sub
idiv
sbb
inc
or
xor
sbb
adc
sbb
icebp
mov
jl
out
pop
movsl
sub
mov
sahf
and
negl
faddl
loop
dec
inc
mov
lahf
popf
jle
notl
or
xlat
pop
jns
mov
pop
andl
xchg
add
cmpsl
outsl
adc
daa
fbstp
lret
mov
mov
jle
ds
add
sbb
sti
sbb
lahf
fisubl
xchg
mov
mov
mov
fs
xchg
sbb
scas
jns
fisubrs
test
xor
push
sbb
and
pop
mov
nop
cli
bound
or
mov
dec
and
shl
cmpsl
popf
xchg
fwait
imul
mov
xchg
in
movsl
jmp
shrb
adc
inc
inc
out
in
fistpll
negl
loope
push
and
ret
je
xchg
rorb
mov
pop
aad
pop
push
iret
popf
test
stc
loope
inc
mov
or
xor
jnp
sub
jmp
mov
cmp
or
std
aad
push
out
mov
aaa
pop
lds
insl
adc
dec
lret
in
jo
mov
enter
add
push
or
or
sub
test
jbe
fsubl
cmpsl
fstps
add
add
daa
lea
lahf
mov
or
loopne
push
roll
or
test
mov
mov
aam
push
cmc
jae
xchg
jne
stc
mov
mov
pop
int
xchg
mov
pop
inc
cwtl
lods
cwtl
jmp
cltd
loop
jns
xor
jno
sub
lds
mov
in
jge
nop
cmp
pusha
mov
scas
pop
pop
mov
cmp
test
leave
xor
movsb
lock
sbb
add
jns
sbb
int
dec
stc
test
mov
rcll
jg
std
ret
fildll
mov
pop
fisubrs
aas
adc
sbbl
mov
les
test
out
xchg
gs
mov
loop
mov
scas
dec
or
mov
inc
mov
and
mov
pop
cmp
xchg
test
pop
pcmpeqw
mov
mov
mov
push
shlb
xchg
xchg
aad
push
iret
test
es
push
rcll
fadd
mov
mov
mov
lahf
iret
std
into
or
xchg
lret
leave
shl
cmpsl
inc
cmpsb
idivb
lret
clc
movsl
mov
push
jecxz
hlt
and
movsl
into
fsubs
dec
jne
fwait
rclb
inc
in
dec
ret
movsl
je
cwtl
dec
mov
cmpsb
xchg
sbb
xor
ret
outsl
scas
lret
gs
sbb
movsl
hlt
sub
cmp
xor
mov
add
arpl
cmp
lds
out
int
int3
popa
inc
sbb
mov
fisttps
fistpl
daa
aad
pop
sbb
imul
jmp
iret
cmc
lods
scas
mov
out
mov
bound
pop
inc
cli
leave
xchg
es
push
in
jp
jle
mov
inc
repz
xor
out
or
mov
xlat
xchg
pusha
xor
mov
lods
mov
popa
popf
out
shl
and
sub
data16
jge
loop
mov
cmp
xor
mov
mov
cmpsb
sub
mov
or
sahf
xchg
lea
and
js
push
push
je
sub
pop
xchg
add
test
pop
ret
add
imul
sub
jno
cltd
pop
leave
push
testb
inc
inc
loop
push
xchg
cltd
jnp
sbb
pop
scas
cmpsl
mov
cwtl
jns
hlt
cmc
lea
ret
jle
daa
push
lds
cmpsl
sbb
mov
add
sub
push
and
xchg
xlat
jmp
mov
push
mov
ja
ret
mov
ds
or
xor
lods
es
fistps
xlat
jno
mov
and
sbb
mov
sbb
jmp
in
lcall
ret
in
mov
pusha
in
inc
sahf
adc
or
mov
mov
insb
xchg
mov
xchg
movsl
mov
stc
jl
ja
xchg
addb
cmpsl
rcr
sub
mov
cmp
jg
add
mov
add
dec
fbstp
shrl
adc
mov
clc
cmp
mov
push
test
inc
scas
enter
in
mov
cmp
jle
loope
lcall
test
and
mov
mov
xor
arpl
sbb
movsb
mov
xchg
mov
loope
and
mov
flds
mov
pop
scas
mulb
mov
mov
push
clc
mov
mov
mov
sbb
pop
jbe
jnp
jecxz
ljmp
or
mov
inc
jge
dec
mov
scas
call
pop
movsl
insl
sbb
and
xchg
ret
ss
mov
icebp
insb
cwtl
sbb
test
lcall
pushf
das
filds
mov
sbb
mov
mov
mov
int3
cwtl
outsb
pop
lock
jge
mov
ret
mov
sahf
xchg
jns
mov
int3
jns
mov
movsb
inc
and
es
les
add
fbld
inc
js
push
std
jge
std
mov
hlt
cmp
mov
cmp
icebp
adc
stos
inc
aas
sub
or
cwtl
js
add
pop
xchg
jmp
es
inc
dec
popa
ret
test
test
int
and
inc
adc
movl
sbbb
or
add
xorb
xchg
xchg
fs
push
neg
push
sbb
dec
scas
add
mov
or
fwait
mov
mov
or
nop
je
mov
cmp
fs
jle
insl
xlat
movsb
sbb
cmp
stos
or
fwait
into
clc
add
repnz
in
cmpsl
js
pop
mov
dec
cld
mov
mov
cmp
jnp
pop
test
scas
xchg
repz
loop
push
les
loope
into
mov
jg
adc
xchg
sbb
or
cmp
jno
in
inc
cmpsl
sub
bound
adc
daa
int
jae
in
ret
es
test
mov
jecxz
xchg
incl
xchg
cmpsl
push
gs
inc
loopne
inc
sbb
push
mov
inc
gs
inc
les
loope
hlt
sbb
and
sub
fyl2xp1
outsl
idivl
dec
adc
or
call
mov
sbb
and
sti
scas
push
adc
push
iret
lcall
aam
out
sti
test
and
inc
addb
cmp
cmp
cmp
cmp
mull
xor
jns
inc
cmp
cmp
js
jle
stos
xor
jnp
add
int
mov
sbb
sub
jge
dec
mov
aaa
test
mov
cmpsb
andl
or
fcoml
or
ljmp
stos
and
jnp
scas
sub
imul
mov
test
leave
mov
cmp
mov
iret
cmpsl
das
movsb
jmp
jp
lods
movsl
and
gs
stos
and
cmp
enter
mov
mov
cmc
mov
gs
and
insl
orl
gs
and
mov
scas
enter
pushf
aaa
cmpsl
add
ret
inc
addl
popa
pop
inc
inc
push
jmp
xlat
lfs
lret
stos
jmp
inc
cmp
notl
rclb
mov
xor
xchg
mov
test
out
xchg
push
push
push
cmpl
outsb
mov
mov
cld
into
jmp
stos
loop
cmpsb
in
shlb
jo
out
sbb
imul
shrb
shrl
divb
pop
int
dec
push
pop
jno
jmp
or
lock
jmp
xchg
sbb
lcall
xlat
dec
or
xchg
and
mov
mov
cmp
push
mov
icebp
testl
stos
in
scas
test
cltd
and
mov
scas
pop
mov
dec
push
and
cmc
int
out
ds
cmp
push
sti
shll
xorl
outsl
scas
adc
cltd
popa
pop
mov
push
ret
imulb
pop
mov
ret
mov
outsl
das
fdivrp
lds
lahf
push
in
mov
pusha
icebp
div
loopne
mov
insb
xchg
notl
mov
in
enter
into
jns
mov
adc
xchg
int3
push
aad
mov
cmp
gs
push
xchg
repz
test
std
pop
lret
cmpsb
cmp
mov
cli
lret
dec
pop
add
xchg
adc
cmp
sbb
or
lods
mov
pop
add
cmp
dec
sti
cmpsl
dec
adc
mov
add
and
sbb
addr16
ficomps
jmp
and
mov
cltd
sbb
lret
jg
mov
xlat
incl
mov
fnstcw
iret
xlat
mov
lret
mov
out
adc
fadds
scas
leave
lahf
cmp
iret
cmp
adc
push
push
lock
cmp
fsubs
fildl
icebp
clc
movsb
sbb
sbb
stc
mov
mov
lcall
and
dec
inc
mov
cmp
test
icebp
movsb
stos
rorb
ja
mov
addr16
test
stos
cmp
mov
mov
shll
dec
cmp
mov
loopne
xor
jp
sub
lcall
test
test
inc
and
shll
cmp
aas
arpl
inc
out
out
mov
xor
push
scas
mov
js
sarb
or
mov
cld
push
movsb
popa
sbb
fmuls
cmp
sbb
aaa
and
push
jns
jne
mov
mov
jb
jp
fucomi
dec
jno
cltd
mov
shll
mov
fsubrs
push
sbb
cld
test
aaa
xchg
mov
lret
inc
std
and
mov
enter
adc
mov
adc
frstor
jne
xlat
shll
sti
aad
in
fdivr
xchg
ss
shll
cltd
cmp
inc
nop/reserved
and
mov
outsl
mov
mov
or
inc
pop
and
imul
add
mov
lret
mov
bound
scas
in
sar
fld
cmc
cmp
fadd
xchg
xchg
imul
outsb
cmp
test
adc
mov
or
in
inc
mov
es
jns
jp
push
or
mov
xor
cmpsb
nop
xor
and
cmpsb
aam
cmp
sub
shrl
insl
sub
jbe
nop
shrl
cwtl
xlat
or
jns
sbb
cmp
sbb
test
and
ret
scas
push
mov
cltd
or
nop
dec
pop
js
loope
aam
int3
pop
mov
out
or
scas
fwait
mov
cmpsl
idivb
clc
and
scas
loope
and
loopne
stos
jge
sub
imul
inc
int3
fmul
jb
adc
out
cwtl
or
aas
fisttpl
jo
out
out
das
inc
in
add
push
add
cmp
fcompl
sub
jl
fcoml
mov
jo
xchg
dec
pop
aam
or
nop
cmp
aad
dec
jp
cltd
jae
enter
mov
and
ret
push
inc
int
mov
cmpl
sub
sub
lock
cmp
cmpsb
mov
lods
sbb
stos
xor
or
and
shrb
lea
cmp
jmp
js
sbb
in
push
bound
pop
jns
test
inc
stos
cltd
leave
movsl
cmp
mov
jmp
mov
sbb
mov
cmp
popf
jmp
icebp
enter
add
mov
jae
sbb
mov
js
push
out
adc
fstpl
mov
lret
dec
push
sub
mov
sbb
adc
mov
sbb
xor
nop
sbb
iret
fisubl
jle
inc
cmp
add
inc
jmp
cmp
jno
dec
jl
sbb
test
movsb
xchg
push
add
rcrb
or
and
test
jmp
pop
inc
das
and
pop
test
pop
cmp
scas
adc
leave
insb
jmp
fidivrs
sub
in
jmp
inc
fistps
fs
enter
cwtl
dec
sub
mov
jns
and
xor
ds
shlb
repnz
xchg
sbb
xchg
pop
cwtl
cmpsl
cmp
mov
inc
push
push
pusha
mov
fxch
and
lods
mov
or
ss
bnd
pusha
add
clc
push
icebp
inc
testb
or
or
cwtl
inc
jnp
insb
fwait
mov
sarl
push
in
push
in
mov
imul
mov
jnp
jno
cli
dec
mov
sub
mov
subl
out
mov
lds
int3
idivb
xlat
cmp
xchg
movl
mov
pop
mov
divb
mov
ja
nop
fildll
mov
mov
dec
mov
mov
je
in
popf
ret
fdivl
call
pushf
test
scas
dec
addr16
cwtl
cmp
in
sub
jno
mov
pop
and
stos
stc
ss
mov
ror
out
xchg
hlt
xchg
js
push
jmp
mov
in
pushf
mov
or
and
pop
adc
cltd
out
sub
test
mov
jg
xor
xchg
mov
jns
fistpl
sub
leave
pop
mov
jns
int
insb
sbb
aad
pop
jge
add
mov
fdivp
sub
js
sub
xor
cmc
cs
aaa
in
sbb
icebp
sti
add
sbb
and
daa
jns
mov
xchg
popa
fistpl
mov
test
dec
cmp
lea
repz
mov
arpl
call
loopne
out
adc
jnp
add
dec
outsb
mov
loope
ja
push
mov
sub
cli
inc
stc
fistps
sub
in
inc
and
test
test
push
fiaddl
mov
dec
xchg
dec
sbb
jbe
and
daa
push
sahf
sub
mov
mov
movsl
fcmovnu
jne
or
cmp
aaa
and
xlat
sbbb
rorl
mov
bnd
mov
jo
lea
pop
jnp
add
jg
cmp
adc
sub
and
sbb
mov
gs
imul
sub
lods
mov
pushf
xlat
jae
and
ret
icebp
pop
mov
fmuls
fidivl
pop
movsb
cmp
push
cltd
shll
sbb
fwait
lods
test
or
mov
scas
shll
xchg
mov
scas
cwtl
xlat
dec
das
mov
cwtl
push
mov
icebp
xchg
mov
and
fisubrl
fcmovne
jg
or
leave
cs
jp
xchg
mov
and
mov
jecxz
fwait
shrb
and
xchg
xchg
mov
sub
and
fimull
mov
fnstenv
mov
xchg
repz
stos
push
popf
icebp
mov
and
fiaddl
test
mov
arpl
mov
test
in
mov
mov
jle
xor
cmpsl
pop
daa
push
mov
pop
pop
xor
sbb
add
iret
cmc
scas
fadds
cltd
pop
pop
pushf
mov
xorl
shll
clc
mov
fs
inc
sbb
mov
call
xorb
lahf
pop
imul
mov
rcl
in
lret
lahf
mov
mov
ficompl
mov
popf
cmp
xor
out
in
stc
in
jae
lods
mov
or
or
daa
fisttpll
jbe
xlat
jle
jge
das
lahf
cmpsb
mov
inc
xlat
sbbl
movb
xchg
stos
push
fs
mov
sti
dec
jno
daa
mov
lahf
inc
xchg
mov
dec
cmp
sbb
inc
testl
ret
mov
add
test
cltd
push
subb
inc
leave
mov
rclb
fs
aad
out
mov
mov
icebp
ljmp
dec
insl
cltd
xchg
fsqrt
test
stos
fdivrs
jbe
jno
cwtl
mov
mov
sbb
lods
dec
and
xor
mov
stos
movsl
xor
lahf
fcompl
mov
aaa
inc
es
xor
inc
cmpsl
cmp
adc
jnp
in
xchg
stc
mov
sbbl
cltd
mov
test
stos
test
and
mull
clc
pop
or
mov
into
sub
cmp
and
stc
mov
and
movsb
sbb
jae
mov
add
add
daa
sub
pop
in
cmp
in
mov
stos
bnd
icebp
jge
xlat
jno
mov
xor
push
mov
sbb
stos
jnp
or
mov
icebp
pop
pop
gs
mov
mov
dec
xor
cwtl
addr16
xchg
fsts
inc
xlat
addr16
lahf
mov
xor
movsl
lds
in
int
mov
enter
mov
ljmp
stc
mov
jnp
loopne
outsl
mov
ds
cmp
xor
jb
out
jl
test
cmp
movsb
mov
mov
jp
cmp
push
mov
xor
push
add
int3
fldenv
movsl
les
enter
jg
sbb
push
hlt
mov
outsl
lock
outsb
shlb
fcompl
mov
mov
movsb
rorl
into
mov
cmp
repnz
adc
mov
jne
loopne
mov
sbb
hlt
xchg
jns
test
jbe
xchg
mov
xor
bound
mov
iret
fimuls
sub
repz
mov
mov
aad
cmp
adc
adc
xor
sub
std
pusha
mov
inc
pop
inc
addr16
imul
mov
mov
repz
xchg
gs
imul
dec
and
jg
ja
sbb
cld
or
mov
or
imul
mov
xlat
repnz
fwait
mov
jo
mov
mov
pushf
test
cmc
xlat
sub
push
xor
orb
stc
push
mov
cmp
outsl
scas
jno
xchg
push
xor
dec
mov
inc
mov
mov
out
mov
jne
outsb
inc
pusha
adc
inc
cwtl
adc
mov
mov
movsb
mov
bound
scas
cld
es
push
iret
jl
xchg
mov
rorl
pop
jle
popa
mov
cmp
mov
pop
and
xor
adc
xlat
mov
jnp
mov
and
in
pop
ret
xchg
jnp
cmp
mov
gs
lcall
pop
addr16
mov
daa
fcmovu
xchg
cltd
mov
jbe
fwait
in
cmp
stos
mov
mov
aas
shl
add
test
int
dec
scas
xchg
jg
sti
shll
jns
clc
mov
out
iret
scas
and
mov
ret
fadds
push
cmp
rol
fs
mov
cmp
gs
inc
xchg
mov
adc
nop
mov
sarb
add
js
jne
inc
mov
mov
fimull
adc
and
adc
outsb
sbb
push
push
cmp
mov
decl
mov
enter
stos
mov
mov
mov
mov
sub
addl
cmpsl
xor
imul
cmp
or
adc
sbb
shrb
xor
push
adc
mov
cmp
shll
cmp
dec
inc
mov
mov
dec
xor
mov
mov
arpl
test
cmpsl
scas
or
jl
shl
sub
stos
test
aas
sub
push
sbb
mov
xlat
or
repnz
shlb
jae
cmp
mov
mov
jnp
adc
push
mov
movntps
mov
xor
mov
jnp
lret
jg
sub
xchg
mov
inc
mov
and
lret
jae
divl
inc
mov
add
lods
stos
ja
fwait
mov
loope
movsb
std
loop
cmp
jne
fimull
xor
ret
add
or
push
and
out
sub
nop
mov
lods
jns
int3
xor
mov
out
xlat
test
mov
pop
mov
inc
adc
push
mov
adc
fisubl
jecxz
sub
mov
xor
jne
cmpsl
jp
xchg
fdivrs
mov
mov
shll
std
ds
and
mov
sbbb
mov
jge
xchg
mov
xchg
inc
mov
sbb
lods
shll
jne
adc
in
test
pop
stos
inc
xor
mov
adc
dec
push
cmp
popa
cs
dec
sub
fsubr
std
jnp
push
xchg
and
adc
int3
int
push
cmp
stos
fistl
in
inc
adc
int3
jno
int
mov
sarl
cli
cmpb
xchg
mov
gs
in
mov
jg
bnd
stc
fldl
lods
mov
adc
and
mov
mov
scas
pop
mov
test
xchg
add
aam
daa
lret
scas
sbb
daa
adc
adc
icebp
clc
mov
and
loope
xor
ss
sbb
mov
xlat
push
push
mov
insl
mov
stos
movsb
jmp
mov
sbb
daa
lds
popf
popf
adc
mov
stc
mov
mov
xchg
mov
mov
adc
popf
orb
or
imul
scas
scas
cltd
stos
adc
mov
outsl
imul
test
ljmp
xlat
xor
jl
bound
lret
lds
cmp
or
scas
xchg
push
mov
mov
lods
mov
xchg
icebp
add
xlat
mov
or
mov
xor
shl
sub
adc
adc
xor
xchg
adc
inc
addr16
stos
dec
push
jecxz
xorl
push
sbb
pop
rorl
mull
loope
push
pop
mov
leave
lcall
sub
pop
jbe
mov
add
ljmp
shl
mov
std
jl
int3
ss
mov
cmp
pop
adc
and
xchg
adc
jbe
sbb
cli
mov
jp
add
mov
add
adc
add
mov
dec
mov
add
push
adc
and
dec
mov
xchg
nop
repnz
and
fcoml
xlat
xor
lahf
icebp
jmp
mov
fisttps
pop
in
and
ret
mov
outsb
lea
aas
xchg
xchg
cmpsl
addb
cmp
daa
adc
mov
add
sub
lock
xlat
out
lcall
mov
or
rorl
sbb
cmp
mov
loope
push
mov
and
xchg
idivl
mov
jl
push
imul
rolb
dec
xchg
push
cmp
pop
and
popf
test
mov
fwait
inc
inc
aad
jg
mov
mov
or
and
ret
xorb
das
lcall
mov
imul
aaa
or
adc
sbb
cmp
shll
mov
cs
fldt
xor
xchg
adc
shl
daa
fnstsw
es
xlat
adc
shll
out
mov
push
pushf
xor
cltd
xlat
push
cmpl
setbe
xor
rorb
imul
data16
mov
sub
xchg
sbb
test
decb
cmpsb
shll
cmp
cmpsl
xchg
arpl
cmp
lock
and
push
mov
push
cmp
xchg
adc
loopne
lds
stos
sub
mov
mov
mov
xchg
adc
rorb
mov
inc
mov
aam
popa
mov
mov
pushf
mov
mov
cltd
dec
jno
ljmp
jl
adc
fisttpll
movsl
jno
cwtl
filds
ja
mov
cmp
adc
fnsave
mov
mov
sbb
divb
mov
sub
cmpl
dec
jg
mov
push
ljmp
stos
mov
mov
ret
nop
daa
outsl
inc
push
sbb
je
es
lods
in
mov
xor
cwtl
or
in
cwtl
cmp
imul
pop
xchg
icebp
mov
or
mov
mov
lahf
hlt
xor
mov
stos
pop
scas
movsl
pop
add
pop
icebp
pop
mov
stc
xchg
bnd
mov
test
jp
mov
mov
sbb
xor
mov
mov
jp
add
xchg
ret
or
subl
lahf
mov
iret
cmpsl
repnz
aaa
mov
lods
cmp
dec
in
pop
aas
pop
mov
pop
sbb
jge
stos
xor
jns
mov
int
test
nop
sbb
jp
ret
pop
xor
cltd
cmp
imul
int
test
mov
or
xlat
dec
aas
push
xor
cmp
ret
mov
out
cwtl
xorl
mov
bound
fdivs
push
dec
lret
lods
daa
sub
mov
lea
loopne
imulb
push
push
stos
js
arpl
xor
sub
and
push
push
mov
mov
testl
fildll
lret
or
movsl
popf
nop
pop
popf
jae
sbb
xor
std
fwait
mov
cmp
hlt
xor
aam
mov
xlat
test
mov
fstpt
mov
mov
aam
mov
daa
fidivrl
mov
outsb
push
cmp
or
xlat
mov
icebp
imul
repz
rcll
mov
imul
stc
push
mov
fbld
sbb
push
push
out
push
xorb
das
jnp
cmp
xchg
cmp
fisubl
mov
movsb
dec
sub
stos
or
arpl
mov
test
movsb
mov
jns
cmp
xchg
mov
pop
notb
aaa
and
dec
add
jnp
fadd
arpl
lret
jg
sub
mov
xchg
jecxz
mov
inc
and
push
negb
dec
mov
xlat
bound
cwtl
mov
xchg
icebp
iret
stos
mov
sbbl
nop
add
sub
pop
mov
push
das
dec
dec
clc
fwait
test
mov
and
cmpsl
add
testl
xor
lods
je
jle
cli
and
pop
icebp
or
mov
mov
dec
xor
test
repz
xorb
mov
sub
mov
sbbl
cmp
xor
pop
jmp
int3
add
and
pushf
and
mov
add
mov
xchg
mov
cmp
jbe
mov
adc
dec
and
add
mov
xchg
enter
fs
push
fistps
ret
mov
mov
fwait
dec
push
add
mov
test
jae
es
stos
mov
mov
xchg
or
mov
pop
das
cltd
add
xchg
xor
aam
test
ret
mov
mov
adc
loopne
jp
push
mov
mov
mov
lods
clc
mov
icebp
mov
xchg
fnsave
mov
pop
push
pop
cwtl
cmpsl
test
movsb
jmp
and
mov
mov
lods
mov
jge
mov
jnp
sub
jns
mov
cs
stos
movsl
mov
loopne
push
cld
int
sbb
or
jnp
lret
xor
andb
or
mov
fcmovb
mov
xchg
cmp
mov
bound
daa
stos
mov
mov
cmpsl
sti
mov
xlat
pop
scas
cli
jnp
sbb
mov
lods
mov
daa
sub
mov
ljmp
mov
xor
add
jns
daa
std
cld
mov
bnd
scas
lcall
mov
mov
add
adc
in
jl
sbb
mov
xor
xchg
or
fidivl
xor
ds
faddl
xchg
push
sub
cmpsl
mov
icebp
pop
inc
es
cli
roll
js
mov
fiaddl
xor
movsl
arpl
add
mov
fistpll
addr16
bound
gs
sbb
fwait
outsb
test
jb
inc
xchg
jmp
jl
leave
aas
fcoms
popf
xorl
iret
cwtl
xchg
movsb
mov
push
lock
ja
jns
mov
mov
push
fwait
push
push
mov
adc
gs
xor
add
inc
fcom
std
cmc
lret
sarl
int
in
xchg
jne
js
fimull
pop
sub
cmp
enter
sbb
aaa
xlat
cmpb
stos
push
call
mov
sbb
xlat
mov
ret
test
repz
and
leave
sub
out
mov
pop
pop
cmp
cli
aas
mov
pusha
mov
icebp
es
fisubl
mov
or
sub
ljmp
pop
scas
mov
sbbl
mov
mov
sbb
jns
mov
dec
in
loop
add
mov
iret
push
inc
imul
jmp
setae
xchg
fwait
into
xlat
or
lods
push
pop
lock
les
jns
lret
aas
outsl
stc
mov
xchg
mov
mov
mov
stos
ret
xchg
fwait
mov
xor
daa
inc
fimuls
fsubs
xor
mov
cmp
mov
mov
ficoms
pop
push
xor
cld
mov
fistl
jmp
sbb
divb
cmpsb
xchg
mov
arpl
push
sbb
fistl
cld
fidivl
fadd
subb
and
decl
jnp
imul
sub
or
addr16
mov
inc
movb
mov
inc
cmp
test
stos
repz
cmp
inc
rolb
aam
fwait
xchg
mov
cmpsl
lret
int3
lock
into
mov
fidivl
dec
mov
mov
cltd
scas
pop
sub
pop
lock
sbb
pusha
cli
sbb
xchg
push
hlt
lods
push
stos
out
mov
js
dec
sub
call
or
add
jle
or
int
fstpl
cmc
mov
cwtl
and
insb
fwait
mov
outsb
cmpsl
inc
jo
out
mov
dec
and
xor
xor
ss
pop
mov
sub
mov
jns
xor
mov
mov
aas
and
mov
sub
mov
mov
lcall
punpckldq
push
mov
cwtl
shr
sub
mov
call
dec
rclb
mov
arpl
and
aad
mov
cmpsl
repz
mov
leave
arpl
cmp
lods
inc
mov
add
mov
add
xlat
xor
cmpb
mov
or
loope
xchg
jecxz
mov
xchg
mov
cwtl
std
inc
flds
out
jnp
jge
cmpsl
sbb
ja
pop
test
cmpsl
rcl
add
cmpsl
mov
sbb
mov
and
mov
adcl
iret
daa
movsl
cmp
sub
loopne
stc
cltd
sbb
mov
mov
imul
popf
push
lcall
arpl
jnp
aas
or
loopne
ja
scas
lds
and
cwtl
sub
leave
lods
ret
out
shlb
insb
mov
fwait
push
test
imul
xor
lods
insl
cwtl
inc
aas
shll
mov
ss
push
jmp
sub
mov
test
movzwl
add
xlat
inc
mov
jnp
and
xchg
movsb
jnp
cmpsl
sbb
mov
pop
mov
call
imul
mov
mov
call
lods
xlat
cmc
xorl
push
mov
icebp
cmovp
push
cmpsl
subl
xor
mov
icebp
mov
imul
mov
div
lock
lds
or
sbb
imul
mov
outsl
xor
movsw
pop
cltd
mov
add
mov
call
cmp
imul
mov
lds
gs
cld
jns
push
repnz
dec
or
adc
jno
adc
pushf
es
and
inc
sahf
fisubl
aaa
sbb
mov
shl
js
sbb
mov
stos
inc
test
sub
jno
cs
ftst
popf
mov
outsl
fidivs
testb
xor
icebp
mov
mov
mov
movb
or
sbbl
add
push
and
test
mov
mov
jne
and
mov
mov
insl
and
pop
daa
mov
dec
test
shrb
ds
cmpl
sub
movzwl
cmp
mov
cli
sahf
adc
arpl
jnp
sbb
inc
xor
lds
out
daa
mov
mov
add
jno
lahf
out
or
cmp
mov
pop
mov
iret
or
shrb
je
insl
xchg
push
xchg
inc
addr16
shrl
dec
movsb
jecxz
nop
push
mov
mov
js
stc
jg
daa
mov
loopne
xchg
cmpsl
mov
lods
hlt
mov
xor
jle
cltd
stos
sub
add
mov
lahf
test
adc
fwait
xlat
xor
pusha
mov
sbb
lcall
shrb
mov
inc
rcr
movsb
mull
ds
mov
mov
ja
data16
mov
leave
mov
sub
mov
mov
stos
mov
jnp
add
jno
mov
sub
das
mov
pusha
test
in
stos
or
stc
sub
adc
arpl
aas
aam
jecxz
sub
jg
xor
mov
xor
in
and
mov
push
andl
les
mov
mov
adc
sbb
scas
ret
xchg
cmp
repnz
and
mov
pop
cmpsl
idiv
inc
jnp
pop
cmpsl
push
jp
cmp
mov
loope
cmp
mov
pop
inc
cmpsb
cmpsl
mov
ret
shrb
test
adc
push
mov
cmp
cmpsb
fcmovnbe
lods
lcall
xchg
mov
movsb
fwait
je
mov
addr16
adcb
inc
icebp
imul
fcoms
test
pop
cmp
mov
leave
lods
insl
xchg
ret
mov
mov
mov
cmp
loope
rorl
imul
mov
sub
shll
mov
jg
pop
pop
cmp
fsub
pop
lea
andl
imull
mov
jne
pop
adc
push
push
std
out
or
cmp
aaa
mov
inc
rcrl
mov
mov
mov
and
jns
ja
mov
jbe
dec
fcoml
out
mov
adc
pop
fwait
daa
sub
xlat
outsl
fsts
ss
mov
insl
rcll
mov
test
mov
iret
ja
arpl
xor
inc
adcl
roll
insb
mov
mov
mov
pop
in
xlat
daa
ja
mov
mov
and
mov
sarl
sahf
adc
add
outsl
xor
inc
jb
mov
sub
mov
test
xor
add
lds
mov
mov
cmpsl
sub
scas
or
mov
inc
les
inc
fidivl
and
push
cmp
fcoml
shlb
add
jbe
mov
xor
mov
arpl
nop
fwait
in
sub
aas
test
mov
adc
mov
jge
adc
pushf
mov
jno
popa
mov
mov
lods
xchg
jg
test
sub
movsl
mov
shrb
jecxz
adc
repz
fstp
mov
mov
fidivrl
cmpsl
scas
test
or
jae
jp
clc
adc
push
mov
mov
xchg
outsl
dec
addr16
mov
notl
jno
push
mov
shl
pop
ja
mov
inc
std
mov
icebp
lahf
shlb
mov
xor
push
test
lods
loopne
push
xlat
mov
cmp
mov
iret
xor
repnz
mov
data16
pop
cmc
cli
addr16
shrl
inc
hlt
xor
test
add
scas
mov
mov
fists
mov
mov
mov
es
arpl
stos
mov
loopne
icebp
repz
lods
frstor
mov
xor
and
push
inc
sbb
stos
aaa
mov
push
xor
pop
mov
mov
cltd
les
and
movsl
or
das
subl
cmp
mov
stos
pop
or
jmp
scas
pop
imul
mov
test
jnp
cmp
scas
icebp
ja
mov
jnp
xchg
minps
cwtl
inc
iret
jp
subb
xor
and
inc
xor
push
daa
push
andl
mov
sbb
mov
sub
pop
mov
mov
mov
loopne
hlt
push
xchg
scas
dec
lods
mov
ret
jl
cmpsl
sbb
mov
push
mov
sahf
dec
cmp
aas
push
adc
mov
arpl
mov
outsl
mov
scas
dec
gs
cmpsl
icebp
fwait
sarb
scas
mov
fwait
test
mov
add
in
mov
lods
jg
call
sbb
mov
imul
test
xor
xlat
loopne
mov
test
dec
lahf
andb
xorl
mov
push
adc
icebp
pop
mov
cwtl
repnz
sub
mov
mov
cmpsl
incb
imul
add
jecxz
pop
or
outsl
mov
add
xlat
lea
pushl
mov
movsl
out
mov
mov
pop
daa
sub
fwait
lea
cmpsl
fdiv
fsubrs
add
leave
les
jo
mov
push
sbb
pop
xor
icebp
mov
adc
jnp
inc
pop
mov
movsb
iret
test
dec
pop
lahf
mov
mov
dec
loop
push
xor
fwait
lods
mov
lods
pop
lcall
adc
jmp
lea
sbbl
shll
mov
fidivs
and
xchg
add
cmpsl
cmpsb
add
push
xlat
int3
mov
jp
sub
inc
sahf
pop
fisttpll
popa
mov
mov
imul
stos
pop
cmpsb
aad
xor
mov
inc
cwtl
inc
cmp
jp
pop
xchg
xchg
scas
das
xchg
imul
les
mov
mov
and
fwait
dec
stos
push
mov
and
mov
mov
mov
adcl
stos
faddl
jge
arpl
push
xor
xor
jp
stos
addb
cli
mov
mov
pop
roll
paddsw
das
mov
jo
mov
mov
inc
xorl
mov
cmp
adc
andb
stos
adc
aad
push
adc
or
or
loop
lods
outsl
stos
xlat
nop
mov
sub
cmc
xchg
pop
lret
xchg
cmp
xorb
fsub
lods
shll
icebp
mov
xchg
stos
stos
mov
rclb
sbb
mov
cmp
ret
mov
adcb
mov
sbb
push
cltd
cli
mov
out
imul
or
add
inc
or
mov
rorb
mov
xor
sbbb
movsl
mov
ret
sub
rcll
test
pop
lods
mov
jl
scas
jge
mov
adc
rorb
mov
add
pop
add
stos
mov
sub
aad
outsb
sbb
mov
aas
test
addr16
pusha
xlat
mov
div
adc
mov
scas
mov
subl
lahf
pop
mov
mov
sub
inc
pushf
icebp
xchg
je
mov
faddl
in
insl
out
test
out
and
jp
mov
mov
xchg
idiv
xor
sbb
add
cmp
lahf
cli
mov
xorl
roll
leave
aaa
pushf
es
fwait
call
mov
cwtl
xchg
loope
test
and
dec
mov
pushfw
mov
mov
addr16
mov
repz
aas
out
stc
mov
addl
cmpsl
aaa
adc
xor
pop
out
or
xlat
ret
add
jle
mov
push
dec
cltd
sbb
aam
mov
mov
mov
adc
and
xor
and
out
mov
or
push
fcom
cmp
test
loop
mov
and
incl
sbb
jae
add
daa
mov
pop
pop
cmp
mov
into
cmpsl
imul
mov
jnp
dec
xchg
cli
adc
xlat
lds
das
mov
jnp
xlat
out
bound
lods
nop
mov
xchg
push
xor
call
cld
scas
mov
mov
std
int
aaa
sub
sbb
jbe
inc
ljmp
adc
scas
sub
dec
neg
cltd
sub
sti
fdivl
mov
mov
je
pop
add
cmpsl
movb
jnp
mov
mov
stos
cmpsl
jns
lret
int
and
mov
lock
or
bound
rcrb
mov
fmull
lods
xchg
push
cmp
mov
into
imul
aam
xorl
cwtl
inc
xor
nop
xchg
lcall
adc
push
scas
dec
fnstenv
dec
imul
fwait
pop
xchg
popf
xlat
pop
pop
out
lcall
stos
mov
jbe
adc
mov
sbb
sub
nop
stc
std
mov
ficompl
mov
mov
mov
push
sahf
xchg
aad
mov
adc
mov
popf
movsb
in
lret
mov
push
mov
cmp
inc
mov
iret
mov
into
mov
add
int3
mov
xor
add
add
xchg
fwait
mov
lock
lcall
cwtl
push
in
scas
cld
push
mov
repnz
clc
adc
bound
add
dec
daa
pop
hlt
fnstsw
mov
jns
into
lahf
clc
xchg
or
or
cltd
adc
and
jl
movsl
dec
test
mov
add
mov
js
add
push
cmp
decl
mov
xchg
mov
add
xor
mov
add
aaa
dec
ljmp
add
outsb
and
lea
fidivs
add
mov
push
jne
mov
xchg
xlat
out
sarb
data16
into
hlt
mov
cmp
mov
mov
lcall
call
jae
lods
mov
lods
cltd
lahf
mulb
dec
bound
xor
mov
adc
or
mov
leave
xchg
loope
xchg
cltd
xchg
shlb
mov
test
lar
sub
pop
mov
add
shll
icebp
or
call
fwait
lcall
inc
insb
arpl
mov
into
mov
test
jnp
sbb
stos
dec
adc
adc
jns
idivl
lret
test
mov
mov
int
add
cld
fwait
pushf
rcrb
adc
cmpsl
lahf
int3
stc
sub
out
cmpsl
scas
mov
hlt
cmpsl
lret
shlb
movsl
dec
and
pop
lods
sbb
mov
or
mov
sub
fcomps
sbb
inc
mov
xor
sbb
fadds
or
mov
shl
jg
test
icebp
mov
mov
mov
movsl
push
cmpsb
mov
and
xor
es
sbb
mov
imul
xlat
push
mov
dec
mov
andl
int3
ja
insl
cmp
fdivrs
xchg
xchg
sub
sbb
test
cmc
mov
xchg
adc
adc
jge
jnp
dec
xor
xor
mov
sub
xor
movsl
cltd
pop
sub
xchg
pop
mov
dec
bound
jle
mov
out
cmp
cltd
cmp
js
and
test
rcl
jg
pop
xchg
mov
mov
sub
test
arpl
xor
pop
mov
or
dec
iret
mov
jno
mov
cmp
sbb
mov
mov
mov
adc
mov
icebp
sbb
popf
mov
addr16
push
cmp
mov
mov
jmp
xchg
mov
cmp
test
add
or
cmp
jg
dec
into
je
cmova
push
pop
or
dec
sbb
mov
test
cmp
adc
imull
gs
mov
or
icebp
sbb
xor
mov
inc
xor
cltd
xchg
adc
lea
sbb
mov
rcll
divl
lret
cwtl
push
jno
shll
jmp
stc
mov
push
popa
ret
pop
test
mov
mov
pop
mov
dec
je
inc
mov
and
jnp
and
xor
add
fldt
mov
xchg
and
je
shll
stos
arpl
test
sbb
popa
mov
jnp
cli
imul
sbb
ret
ss
inc
mov
repz
add
cwtl
outsl
fwait
jecxz
rclb
mov
enter
xlat
imul
push
adc
pusha
mov
call
repz
adc
loopne
inc
int3
mov
clc
inc
xchg
xor
mov
mov
xchg
popf
sub
mov
xor
insl
out
xchg
sarl
cltd
arpl
xor
pop
scas
imul
mov
ljmp
mov
ret
cmc
test
xor
and
lods
sbb
mov
sub
test
cmp
stc
fwait
je
sub
mov
lret
lret
arpl
mov
loope
mov
daa
test
mov
movl
push
mov
ja
movsl
mov
push
mov
jge
adc
mov
mov
mov
inc
adc
mov
out
jns
add
mov
xor
mov
and
fmuls
cltd
mov
push
xor
cmp
filds
xchg
imul
xor
mov
adc
fwait
jnp
add
sti
push
lods
xorl
mov
xlat
fdivs
mov
mov
stos
icebp
cmp
mov
popf
int3
sbb
cmpsl
push
jno
xor
mov
mov
mov
fcomps
cli
sarb
mov
movsl
iret
pop
ja
cmpsl
or
jns
shrb
scas
fisubrs
mov
mov
fucom
loop
lock
iret
popf
pop
sub
add
stos
cli
fsubs
mov
push
aas
mov
mov
add
mov
stc
pop
sahf
cmpsl
cmp
xchg
adc
push
mov
stos
xchg
mov
out
cltd
loopne
stos
mov
cmp
inc
cmp
je
rcll
les
cmp
xchg
mov
arpl
ljmp
iret
cmpsb
cld
push
mov
inc
cmovp
out
repnz
icebp
jnp
adcb
add
or
jae
xorb
cwtl
and
cmp
mov
pop
jns
and
jns
mov
dec
push
sbb
mov
stos
daa
mov
outsb
xorb
or
pop
aaa
add
or
inc
sub
jle
mov
dec
xor
sbbl
loopne
iret
shll
scas
and
xchg
jns
pop
mov
or
data16
mov
testb
cltd
cmpsl
pop
xlat
test
pop
add
fbstp
aad
mov
dec
imul
push
lods
mov
dec
and
mov
or
mov
and
push
cwtl
xchg
repz
mov
jecxz
cmpsl
bound
jmp
fisubrl
mov
add
jp
add
xlat
jnp
push
lock
jecxz
nop
xchg
shll
jl
xor
ret
jne
ja
cmp
push
addb
xlat
out
lods
xchg
sbb
out
and
call
mov
mov
dec
push
inc
je
xlat
mov
addr16
outsb
inc
aam
jnp
add
daa
mov
aas
mov
paddusb
xorl
add
ljmp
mov
push
lahf
scas
and
push
xlat
out
test
mov
pop
mov
sub
push
shlb
mov
mov
mov
dec
fisubl
outsl
xor
mov
bound
aaa
mov
cwtl
popa
mov
into
mov
scas
test
pushf
daa
loopne
scas
mov
aaa
ds
sbb
orl
pop
icebp
mov
dec
lahf
dec
pop
mov
jb
adc
pop
cwtl
dec
inc
mov
mov
mov
sti
cmpsb
enter
mov
push
fwait
xchg
roll
adcb
mov
xor
test
pop
cmp
dec
jecxz
mov
repz
popa
xor
popf
lret
enterw
jne
and
daa
cld
cmp
pop
sbb
test
dec
test
shlb
add
icebp
or
jae
mov
movsb
xor
push
int
in
iret
sub
lcall
ja
mov
lahf
aaa
xchg
mov
pushf
mov
roll
aam
inc
add
mov
push
mov
xlat
in
mov
lods
das
or
sarb
mov
in
mov
test
jge
jmp
mov
add
mov
push
cmpsb
imul
mov
punpckldq
xor
sbb
mov
scas
scas
imul
pop
add
dec
lds
mov
test
mov
pushf
sub
and
dec
xchg
mov
out
call
inc
adc
push
or
mov
pop
fidivrl
es
jp
mov
lods
pop
cwtl
cwtl
mov
fistpll
mov
xchg
mov
sub
mov
mov
sti
pop
jl
xchg
add
jmp
andl
cmpsb
test
stos
mov
mov
cmp
nop
fwait
mov
mov
andl
stos
cmp
jp
mov
in
test
sbb
in
divl
or
lcall
or
add
mov
or
ja
fdivrs
bound
xor
dec
jmp
inc
movsb
jg
icebp
dec
pop
mov
mov
inc
adc
push
sbb
imul
popf
into
xchg
and
fnstsw
movsl
fldcw
dec
pop
insb
outsl
scas
lock
out
or
mov
aam
jge
test
xor
mov
dec
aas
lods
inc
and
ja
std
add
xchg
mov
push
ljmp
lret
insl
aam
add
mov
test
mov
int
pop
in
outsl
or
repnz
insb
mov
insl
pop
ds
sbb
movsb
mov
mov
mov
xor
mov
inc
sub
or
mov
in
mov
dec
cli
pusha
xchg
pop
pop
out
stos
shrl
push
cmp
mov
cmp
aam
jl
gs
fimuls
mov
sahf
testb
xchg
mov
sbb
add
sub
ja
daa
push
and
mov
mov
and
push
push
fwait
movsl
int
pop
mov
adc
stos
mov
adc
lret
mov
lods
es
pop
mov
lods
add
cmp
dec
stos
jnp
xor
xchg
pop
and
in
cmpsl
pop
test
xor
mov
subl
xorb
and
repnz
xchg
xchg
jge
jnp
mov
xchg
xor
aas
adc
daa
inc
inc
dec
or
mov
pop
fcompl
outsb
es
int
push
push
mov
sbb
scas
mov
clc
imul
fnstsw
adc
adc
cmp
adc
xlat
imul
es
mov
cmp
jns
jae
pop
jp
sub
add
xchg
mov
push
pop
jns
cmp
xchg
sub
in
pop
xchg
cmpsl
xchg
cmpsl
popa
mov
mov
stc
pop
mov
fcoml
iret
jns
jmp
mov
das
mov
jnp
sub
negl
shr
mov
jae
xor
loopne
mov
mov
leave
xchg
push
pop
adc
repz
mov
stos
aaa
add
inc
jne
and
cmpsl
xor
iret
fwait
pop
and
adc
hlt
jae
xor
ret
mov
add
repnz
aaa
inc
call
and
aam
ja
jnp
fistpll
mov
adc
jg
out
repnz
xlat
push
mov
and
arpl
ret
pop
fisubs
push
cmpsl
clc
mov
test
sbb
sbb
mov
scas
cwtl
add
jb
mov
jbe
xlat
fimuls
ja
in
mov
mov
jg
cmpsl
insb
mov
mov
and
jns
cmp
inc
hlt
ret
sbb
and
and
fisubl
shll
mov
ret
hlt
mov
test
lahf
and
cltd
xor
adc
es
mulb
add
pop
mov
scas
mov
and
test
sbb
imul
stc
xlat
inc
jno
insl
fs
scas
mov
xor
cwtl
movaps
fmuls
cmpsl
inc
sbb
fldt
mov
movsb
jge
rorl
pusha
neg
iret
ss
je
out
pop
std
fs
mov
arpl
loop
inc
pmaxub
sub
in
xchg
gs
or
mov
test
adc
xor
test
xlat
movsl
mov
push
mov
lahf
mov
sbb
cmpsl
mov
mov
daa
xor
xor
testl
mov
push
xor
add
sbb
sub
and
shl
mov
xchg
add
mov
mov
dec
jle
add
jnp
sbbb
fldcw
and
jns
idiv
stos
mov
inc
mov
and
inc
xchg
xor
jge
push
add
mov
xchg
fsubrs
inc
xlat
mov
enter
xor
mov
jg
popa
ror
jns
fcompl
popl
inc
mov
imul
jg
cs
pop
jnp
jmp
ja
jae
adc
inc
mov
pop
icebp
sub
sbb
dec
dec
bound
mov
mov
add
adc
cltd
mov
adc
mov
jns
icebp
shrl
lods
push
push
mov
out
outsl
orb
mov
cmc
mov
test
sbb
lds
pop
xchg
mov
dec
orl
cmp
cli
mov
lods
jnp
hlt
aaa
mov
test
arpl
xchg
and
mov
cmc
inc
mov
mov
mov
outsb
xchg
shll
out
cwtl
insl
int
xor
mov
mov
mov
push
mov
sbb
out
adc
mov
in
cmp
sub
and
sub
adc
fdivs
lods
pop
sti
mov
cmp
sbb
dec
bound
jecxz
jae
fwait
into
mov
lahf
mov
jo
xor
mov
xchg
pop
cmp
cwtl
adc
je
mov
jle
loope
pop
orb
jnp
xchg
fwait
push
cltd
dec
into
add
push
adc
xlat
mov
stos
je
andl
mov
lea
scas
pop
imul
lret
and
xchg
fdivrp
xchg
andl
dec
cmpb
mov
cltd
jge
or
das
and
and
xchg
sarb
add
mov
sbb
lods
xlat
mov
popa
jge
call
mov
mov
jne
cmp
icebp
int
icebp
out
mov
lds
mov
stc
sub
mov
test
movsl
lods
sbb
mov
mov
sbb
pop
add
pushf
mov
xchg
cmpsb
sbb
sbb
movsl
inc
scas
ja
inc
jl
mov
nop
and
pop
xchg
ficoml
imul
pop
pushl
xlat
ficoml
stos
push
scas
jns
int3
mov
loop
fdivrl
mov
jbe
xlat
pop
out
fld1
mov
or
orb
leave
mov
and
fcomps
lahf
in
movsb
pop
mov
sbb
pop
dec
xor
mov
sub
cmp
cmp
inc
xor
mov
int
shlb
mov
arpl
scas
and
or
xor
sahf
sarb
int
mov
mov
adc
cld
pop
cwtl
xor
fsubs
js
push
ljmp
jae
aaa
inc
rcrl
xor
sbb
push
aad
mov
add
mov
xlat
and
lods
daa
cmp
sbb
pushf
movsb
push
lcall
sahf
lds
add
fidivrs
xchg
cmp
int3
jae
inc
rcr
mov
insl
bsf
mov
bound
pop
jp
or
mov
cwtl
mov
add
imul
shrb
add
cli
test
hlt
dec
sub
data16
outsb
add
pusha
gs
mov
lahf
scas
mov
orl
mov
cmp
fidivs
jmp
ja
mov
mov
sahf
jbe
add
jecxz
cmp
cs
mov
xor
sub
cmpsl
hlt
sub
outsl
xchg
std
sbb
adc
cltd
lds
jge
dec
call
xorl
hlt
mov
addb
push
cmp
outsl
sbbl
jmp
mov
lea
dec
mov
test
subb
mov
jmp
xchg
jbe
mov
cmpl
dec
mov
fwait
lds
mov
cld
mov
pop
sbb
pop
iret
inc
insb
cmp
pop
mov
jecxz
push
push
jmp
int3
cwtl
popa
mov
pushf
push
stc
scas
mov
sbb
mov
lret
jae
cmp
shlb
or
sub
xor
pcmpeqd
out
into
mov
adcl
cmp
mov
test
fcmovb
inc
inc
cwtl
and
aad
xlat
mov
sub
push
inc
sahf
stos
cwtl
inc
adc
es
push
stos
out
out
and
loopne
xchg
mov
mov
pop
cmpsb
push
icebp
jle
mov
fadds
std
lcall
xchg
mov
adc
movsl
fnsave
sub
jbe
mov
pop
lods
icebp
xor
pop
xchg
test
inc
in
cmpsl
or
jae
inc
addl
sbb
sbb
jb
add
adc
mov
in
xchg
cmp
mov
andl
test
push
cwtl
adc
addr16
cltd
scas
stos
dec
test
sbb
fisubl
cmp
pop
push
shlb
inc
in
xchg
lahf
mov
jnp
imul
mov
cmp
push
xchg
push
repnz
data16
adc
cmpsl
pop
cld
mov
adcl
push
jne
idiv
mov
xchg
lods
mov
gs
pushf
pop
push
jne
ret
daa
cmpsl
cmp
popa
out
sbb
dec
mov
dec
mov
mov
xchg
jge
push
orb
aam
lods
das
mov
dec
ret
mov
and
cwtl
mov
mov
iret
stos
inc
aas
aaa
popa
add
ja
xchg
and
or
cmp
dec
pop
add
sahf
mov
jnp
lcall
mov
push
pop
sbb
inc
loop
sub
imul
repnz
mov
inc
iret
mov
cmp
cmpsl
insl
mov
and
fcomps
rorl
aaa
lods
je
mov
or
mov
sahf
mov
ficoms
sub
out
add
xchg
imul
adc
out
ja
mov
jmp
in
into
xchg
ror
mov
add
jmp
ret
xor
xchg
xlat
pop
add
scas
rolb
daa
gs
push
out
movb
or
mov
imul
cli
mov
pop
push
mov
xor
pop
mov
cli
mov
sbb
ja
add
test
mov
fwait
and
stc
mov
sbb
pop
push
adc
in
mov
test
push
es
test
mov
stos
movsb
lods
cli
stos
loop
mov
dec
sbb
ljmp
jl
aas
mov
add
inc
mov
ret
pop
in
mov
pop
test
hlt
mov
in
jp
cmp
ret
push
xor
mov
push
mov
sbb
and
divb
adc
jne
lahf
cli
cmp
mov
inc
les
mov
mov
sub
and
cltd
rcr
cmc
adc
popf
dec
mov
adc
shll
mov
sti
mov
or
subl
xor
imul
inc
or
mov
mov
and
bound
daa
ljmp
mov
xchg
push
xor
pop
cltd
in
loopne
ljmp
dec
daa
mov
sub
push
push
xchg
jo
xlat
cmp
scas
mov
sub
pop
add
fwait
test
and
add
imulb
orl
jmp
push
mov
pushf
cmp
push
shll
sub
out
movsl
jmp
fwait
ror
and
repnz
mov
icebp
sub
sarl
popa
or
mov
loopne
fld
out
das
pop
mov
or
sarb
xchg
icebp
mov
add
xchg
lds
in
xor
mulb
shlb
cs
insl
mov
movl
jecxz
mov
scas
push
std
cwtl
in
jae
and
xlat
inc
int
movsl
arpl
mov
fwait
push
mov
scas
jb
and
mov
add
pop
mov
repnz
jmp
mov
int3
sbb
pop
xchg
mov
bound
ljmp
and
mov
mov
jns
bound
and
push
and
neg
adc
cld
xchg
icebp
xor
cmp
and
mov
rorb
mov
movsl
xchg
lods
loopne
and
fiadds
lcall
pop
dec
jno
and
call
add
sbb
test
int3
xchg
mov
ljmp
mov
sub
adc
daa
aas
mov
sbb
mov
sub
in
aas
imul
ja
add
in
push
mov
imul
adc
cltd
mov
inc
scas
enter
mov
aam
push
sub
cmp
or
fcompl
push
lcall
add
cwtl
sbb
lods
mov
addr16
mov
and
test
cli
jl
rorb
stc
xor
jns
sbb
mov
push
cmpsl
xchg
scas
loope
btc
adc
enter
mov
sbb
fstpt
xchg
and
nop
shll
xchg
pop
adc
sbb
pop
mov
shlb
mov
inc
rolb
fwait
jl
cmp
or
icebp
scas
into
cmp
cmpb
outsl
pop
das
fdivs
add
cmp
mov
lds
popf
int
bound
stos
lock
fwait
scas
in
and
xor
lods
shrb
mov
sbb
mov
mov
divl
inc
aad
ret
arpl
leave
mov
adc
mov
push
mov
movsl
and
mov
xchg
test
addr16
cmp
into
cmpsl
in
jnp
mov
dec
loop
stc
mov
mov
mov
rorl
outsb
mov
jmp
mov
cmc
push
mov
xlat
mov
sar
dec
call
xor
std
cltd
sbbl
ds
addr16
fsubrl
push
xor
xor
lahf
shlb
lods
aas
push
push
fistpl
cmp
ret
dec
dec
mov
out
mov
lahf
add
cmp
xchg
lea
sbb
out
daa
repnz
jmp
jne
xchg
dec
adc
jp
xor
push
cmpsl
inc
push
daa
shld
arpl
and
mov
mov
mov
xchg
jnp
xor
lret
mov
mov
mov
lods
mov
xchg
xor
test
das
xlat
and
sti
mov
cmp
roll
fnstenv
ret
pop
cmpsl
cmpsb
scas
icebp
cmp
pop
iret
push
cltd
xor
scas
testl
ja
inc
mov
clc
mov
test
or
scas
xlat
add
mov
mov
xlat
xor
pop
xor
push
shlb
idiv
add
faddl
lea
iret
mov
mov
lret
test
jnp
es
das
enter
cmpsl
pushf
mov
std
jmp
cmp
mov
cmpsb
push
lds
fwait
sbbb
push
js
pop
lahf
sbb
mov
and
xor
popf
movsl
andl
subl
sbb
outsb
jne
jno
lods
cmp
pop
jnp
pop
orl
sub
mov
mov
jo
or
and
cmc
push
jp
xlat
dec
movsl
adc
mov
fwait
mov
arpl
insl
mov
push
and
mov
ljmp
sbbb
arpl
and
mov
mov
addr16
push
lods
int3
fwait
adc
cltd
xchg
lahf
mov
xor
loop
xor
sbb
xchg
lea
icebp
mov
dec
cmp
imul
aas
cmpsl
icebp
sarb
mov
adc
stos
mov
inc
inc
rcl
gs
dec
cmp
out
jge
lds
cmpsl
call
mov
scas
lock
pop
or
mov
aam
pop
lret
fdivs
jmp
mov
and
jns
push
xlat
daa
outsl
arpl
les
xchg
popa
xchg
pop
add
cmp
push
jmp
or
aas
stos
stos
lods
mov
aad
pop
mov
push
jnp
mov
xchg
jae
jo,pt
icebp
cwtl
push
out
xchg
jge
mov
sbb
les
sbb
lds
cwtl
xor
testl
cld
mov
inc
xchg
fwait
adc
mov
or
mov
push
icebp
and
sbb
or
dec
sbb
inc
lods
cmp
pop
mov
adc
addr16
fwait
or
pop
mov
das
sbb
mov
jmp
fldl
ds
mov
arpl
scas
movsl
xchg
pop
xlat
adc
jae
xchg
adc
mov
roll
push
pop
es
push
pop
bound
xor
orb
stos
shrl
cmpsl
mov
popa
xchg
push
movsl
into
lea
cmp
mov
shrb
mov
aad
leave
mov
movsl
imul
push
lret
mov
and
loop
sub
fistl
aaa
sbb
push
dec
cmpl
in
mov
scas
pop
stos
test
int3
outsl
mov
adc
add
add
mov
fsubrs
mov
lds
and
mov
cmpsl
mov
data16
inc
adc
cmp
gs
lret
inc
les
cmc
mov
lods
in
pop
mov
push
sbb
pop
fsts
cwtl
shll
add
std
xchg
xchg
sbb
mov
sbb
shrl
pop
ja
jp
sets
push
xor
jns
mov
mov
mov
add
cmpsl
icebp
lds
jmp
stc
mov
jge
cmc
dec
inc
adc
xor
cmc
loopne
rcrl
je
mov
jns
adc
scas
mov
dec
inc
mov
rorb
add
mov
sbb
and
ret
xlat
mov
lods
fs
fnstcw
dec
push
xorb
add
jns
xor
popf
lods
and
bound
mov
jno
mov
push
mov
sub
cmp
adc
dec
xchg
xlat
mov
pushf
lret
hlt
mov
lds
int
jnp
adc
xor
mov
nop
lahf
fmuls
sub
mov
mull
xchg
add
shlb
inc
stos
rcrl
cmp
mov
shrb
mov
mov
push
mov
mov
push
adc
pop
ja
lret
xor
pop
jl
cmpsl
fs
pop
pop
cmpsl
popf
xlat
jb
mov
mov
xchg
cmp
xchg
pop
add
jnp
ficomps
sub
mov
test
xor
add
ret
into
mov
pop
jo
jle
insb
rcll
fwait
xchg
aaa
cli
mov
addr16
das
leave
or
je
inc
add
mov
jmp
jns
inc
xor
mov
add
xchg
xchg
test
mov
addr16
shlb
inc
add
pop
fstps
adc
daa
testb
les
xchg
stos
pop
aam
push
sub
sti
jno
mov
aaa
lds
and
shlb
out
xor
mov
subl
mov
mov
cmp
adc
mov
push
loopne
sbb
dec
mov
push
add
lods
push
mov
push
cmc
add
mov
cs
movsl
lods
icebp
mov
xchg
mov
xor
sbb
or
adc
mov
loop
jb
push
inc
fdivs
push
mov
je
mov
popf
jl
jae
mov
fsub
mov
cwtl
inc
dec
jmp
shrl
or
inc
dec
scas
lret
push
sub
cmp
out
imul
mov
jne
or
stos
mov
dec
out
sub
mov
dec
mov
jnp
jne
sbb
cmpl
ficoms
lods
sub
adc
jb
addr16
stos
icebp
hlt
dec
movsl
add
mov
mov
adc
sbb
or
popa
pusha
mov
sarb
cli
enter
cmpsl
push
movsl
fwait
es
sub
negb
lahf
lods
mov
pusha
and
fists
and
mov
mov
mov
ja
movsl
mov
lret
andl
icebp
rclb
stc
inc
mov
push
mov
fmull
fwait
sbb
cmp
mov
pop
adc
mov
out
xchg
xor
lcall
sbb
mov
icebp
repnz
test
fsubrs
sub
push
outsb
xor
mov
cmpsb
xchg
push
data16
test
xorb
mov
push
or
sbb
and
xchg
pushf
pop
inc
std
repz
xchg
jge
fimull
xchg
ss
sbb
sbb
mov
adc
jno
cmp
jle
es
orb
mov
mov
adc
cwtl
cmp
adc
push
fidivl
cmp
mov
movsb
jp
or
je
test
mov
push
js
xor
sbb
pop
push
mov
mov
pop
icebp
cltd
add
ja
mov
sbb
or
lea
mov
imul
jnp
jp
add
scas
push
sbb
test
icebp
iret
pop
xchg
mov
sbb
test
and
icebp
sbb
push
lods
repnz
mov
std
push
test
add
scas
mov
test
cmpsl
fisubs
bound
mov
inc
mov
jl
int
mov
cwtl
imul
mov
insl
mov
aas
cli
xor
out
mov
sarb
lods
clc
mov
out
testb
pop
mov
xchg
cli
nop
scas
mov
mov
aaa
movsl
push
aam
popf
sbb
mov
mov
xlat
dec
sahf
cwtl
pop
lret
stc
xor
insl
sbb
cwtl
jae
pop
fwait
scas
lds
cmp
cmp
gs
cmp
outsl
mov
cwtl
cmp
mov
test
ljmp
jns
mov
cmp
inc
pop
lcall
fwait
dec
fstpl
dec
lret
mov
rclb
lea
cltd
pop
mov
and
xchg
mov
sbb
test
jp
addr16
testl
mov
cmpsl
lods
xlat
cmp
mov
mov
jnp
jb
mov
mov
mov
sbb
aas
cmpsb
jl
dec
cmc
in
cmp
movsl
cmpsl
mov
in
sub
mov
xlat
call
mov
or
stc
pusha
pop
cli
sbb
jmp
cmpsl
pop
repnz
sub
inc
mov
stc
mov
scas
arpl
fdiv
add
sbb
jmp
or
cmp
mov
sub
mov
add
add
mov
test
fnstcw
fbstp
inc
mov
test
lea
out
cltd
daa
mov
stc
in
mov
adc
add
dec
mov
daa
pop
divl
xchg
xchg
cmp
or
ret
daa
movsl
sbb
or
enter
and
adc
pop
stos
js
sub
ret
mov
jg
and
ja
mov
jmp
lcall
sbb
negb
test
xor
imul
cld
xchg
or
insl
test
mov
and
std
cltd
pushf
xor
mov
insl
sahf
aaa
pop
lock
mov
dec
les
xorb
mov
in
mov
jp
cld
outsl
jnp
cltd
stos
dec
stos
repz
test
dec
xchg
mov
push
mov
xor
jg
sub
mov
loop
push
mov
lods
clc
leave
inc
cmp
sub
stos
cmp
add
lods
fwait
jo
fdiv
pop
shlb
mov
cmp
mov
push
aaa
push
movsl
scas
outsl
mov
xchg
cltd
xchg
sbb
stos
or
inc
roll
les
jne
out
mov
icebp
bound
scas
ss
cmc
fwait
divl
mov
lret
pop
pop
mov
cltd
pop
mov
sbb
and
or
pop
mov
rclb
testl
and
pop
mov
js
fidivrl
iret
add
mov
out
sub
xchg
aaa
les
jp
sub
mov
andl
xchg
cmp
mov
stos
jge
test
xchg
adc
lods
mov
mov
lea
fsubrl
mov
add
iret
inc
push
loope
cmpsb
xor
lods
jae
and
imul
out
pop
jb
mov
insl
pop
cmpsl
scas
or
xor
iret
mov
scas
sbb
scas
adc
add
xor
js
mov
cli
call
cmpsb
cmp
mov
arpl
popa
mov
xchg
xchg
add
mov
addr16
ret
shlb
fisubl
inc
mov
faddl
sbb
jge
and
mov
ds
mov
mov
jnp
mov
xlat
icebp
int3
and
mov
popa
test
mov
movl
ret
rcrl
dec
arpl
and
mov
cli
adc
inc
int
ret
jge
or
jmp
mov
test
jns
mov
mov
ds
inc
add
mov
fwait
pop
mov
mov
xchg
sbb
movsb
movb
xor
mov
mov
inc
mov
sbb
test
push
pop
adc
fcomps
cwtl
add
cwtl
jnp
movsl
pushf
in
push
pop
mov
mov
cmp
in
stos
jns
jo
pop
adc
push
movsl
cmp
xor
inc
in
jno
push
icebp
jl
aaa
enter
shl
sbb
dec
imul
adc
mov
mov
sbb
dec
cmp
aam
pop
xor
mov
pop
stos
or
pushw
jae
stos
ja
mov
jno
mov
lds
push
add
mov
add
fsubs
mov
test
fistps
out
fiadds
mov
mov
or
push
popf
jmp
loope
movsb
sbb
sar
loop
std
cmp
and
cmp
movsb
cmp
mov
out
mov
push
xor
mov
inc
out
jns
adcl
mov
lds
repnz
sub
mov
pop
test
arpl
jge
or
xchg
mov
out
mov
arpl
jge
sbb
xor
incb
or
outsl
out
popa
xchg
mov
scas
mov
fisubl
cld
mov
jne
fwait
push
pop
xorb
add
mov
mov
call
mov
pop
stos
and
xchg
push
or
add
xchg
xor
shll
sbb
mov
cmp
mov
mov
inc
and
jmp
dec
loope
repz
jno
mov
mov
xor
mov
insb
mov
in
jge
mov
out
sub
es
sbb
mov
mov
sub
stos
out
jne
jg
cmp
mov
adc
pop
mov
das
jecxz
stos
lea
ss
adc
pop
adcl
mov
stos
les
mov
std
hlt
sub
jl
in
movsb
xchg
into
lods
test
mov
jo
data16
dec
pop
idivl
inc
aaa
and
mov
and
mov
mov
jmp
pop
pop
movsb
sbb
xor
lret
sbb
dec
push
int3
adcl
mov
cli
sub
pop
frndint
pop
mov
and
lret
and
movsb
xchg
lds
mov
xchg
mov
mov
sbb
scas
push
test
jecxz
bound
sbb
dec
mov
inc
xlat
xor
rolb
mov
inc
mov
cmp
fidivrs
lods
mov
hlt
ljmp
sbb
lret
fisubl
ja
fdivrl
mov
icebp
sbb
add
shlb
nop
cmpsb
aam
sarb
mov
push
mov
daa
sbb
mov
xlat
xchg
fwait
adc
jp
dec
lods
push
cwtl
das
mov
sub
mov
mov
or
add
ret
mov
adc
scas
aaa
in
push
xlat
ret
sbb
cmp
add
fwait
aas
xor
and
push
pop
sub
jae
push
sub
shll
push
pop
jg
xor
adc
dec
dec
push
cmp
pop
ljmp
push
fs
subl
cmpb
mov
xchg
jg
movsb
xchg
push
subl
fisubrs
jmp
loope
jp
mov
loop
xor
jne
adc
movsl
lret
aaa
mov
in
jb
mov
cli
xor
mov
lret
mov
mov
lods
sub
sbb
ret
cmp
jae
jbe
mov
sbb
inc
loop
cmpsb
cmpsl
test
pop
mov
mov
push
or
aaa
ja
or
dec
inc
mov
xorb
inc
inc
jae
ja
push
cwtl
arpl
xchg
xchg
movsl
adc
insl
push
mov
xchg
mov
out
inc
sub
xchg
xchg
adc
addr16
add
ja,pt
push
pop
xchg
dec
add
leave
je
push
mov
cmp
pop
cmp
gs
loopne
add
mov
mov
mov
add
sbb
ret
repz
das
cltd
and
inc
mov
xor
mov
sub
filds
dec
cmpsb
test
fwait
ljmp
lahf
xorl
push
ss
mov
add
mov
notb
jno
lods
icebp
out
pop
test
out
in
stos
outsl
jae
xchg
xlat
sub
jno
movsb
pop
mov
daa
into
dec
sbb
jbe
mov
mov
add
xchg
xor
fcom
mov
lods
or
emms
cmpsl
inc
and
and
pop
mov
addb
xor
mov
call
ret
arpl
mov
lea
aaa
pop
daa
or
pop
xlat
jl
mov
mov
mov
push
cmp
push
mov
mov
fs
xchg
add
and
loop
xchg
mov
fisubl
inc
add
add
ja
xor
scas
mov
xlat
rcrl
pop
mov
inc
pop
testb
pop
mov
dec
cmp
adc
cmc
push
mov
lds
mov
sti
loope
es
repnz
cmp
cmp
push
icebp
ficomps
jae
in
arpl
pop
or
and
and
out
push
lods
adc
cmp
sbb
sbb
push
jo
jne
sub
ucomiss
xchg
loop
dec
daa
lock
es
ret
adc
rcrl
sbb
mov
pop
mov
cmpsl
hlt
mov
jne
shl
mov
shll
out
cmp
xchg
jmp
mov
icebp
adc
pop
ret
cmp
mov
mov
orl
sbbb
jnp
in
pop
mov
xchg
mov
and
lock
data16
mov
ret
out
adc
das
lret
mov
or
jmp
xor
sbb
test
xor
or
mov
mov
mov
and
repz
mov
mov
inc
lahf
dec
mov
cmp
mov
mov
repz
pop
aas
push
in
into
dec
cwtl
std
sbb
xor
mov
mov
mov
cmpsl
shlb
aaa
cmpsb
adc
dec
mov
jns
into
and
sub
xor
das
jns
pop
shrb
xchg
aaa
xor
stos
lcall
pop
or
mov
xchg
fcom
aas
adc
dec
cmp
lods
iret
pop
xor
sti
mov
arpl
mov
sbb
out
jmp
cmc
mov
push
xlat
xor
pop
mov
pusha
cmpsl
mov
and
loope
scas
testl
sbb
xchg
mov
ret
mov
pop
add
sbb
or
cmp
mov
ljmp
add
jbe
mov
movl
add
in
insl
mov
mov
nop
das
mov
mov
outsb
js
sub
lahf
mov
cmp
mov
push
scas
adc
jnp
je
sbb
inc
add
mov
scas
pop
ja
or
jne
scas
rdpmc
cmpsl
add
rcrb
cld
cmpsb
pop
cli
adc
mov
cmpl
inc
cltd
jnp
or
mov
cmp
jo
insl
jl
mov
loop
mov
jg
inc
mov
stos
jns
inc
fldcw
add
je
xlat
mov
cmpl
xlat
jb
fwait
cmp
test
out
add
mov
lahf
mov
mov
loope
jbe
and
xchg
mov
xor
add
in
aad
dec
dec
adc
lods
and
jp
addr16
mov
push
popf
jbe
mov
decb
icebp
mov
mov
xchg
int
xor
mov
and
xor
dec
dec
stos
js
mov
dec
rep
fsubrs
sbb
inc
xchg
and
dec
aaa
fwait
das
add
push
mov
in
mov
test
popa
jae
pop
psrad
cmpsl
cmp
add
cld
jo
mov
or
pop
adc
shl
movd
jae
ds
cltd
movsl
sar
mov
push
sahf
lcall
adc
lea
cmp
mov
jae
movsl
jecxz
insb
jl
mov
sbb
loopne
mov
out
es
sub
ret
jne
jbe
mov
in
test
mov
orl
cld
xor
xlat
cmp
das
xchg
cmpsl
fnstsw
rclb
mov
jne
mov
mov
into
pushf
cmp
xor
inc
bound
cmp
xor
mov
popf
lahf
mov
cmpsl
leave
mov
movsl
mov
mov
and
fisubrl
mov
pop
stc
xor
push
jge
mov
fsubs
in
mov
icebp
fiadds
out
stc
mov
mov
icebp
enter
aam
cmpsl
jae
mov
push
push
sbb
mov
xchg
das
mov
mov
sub
mov
add
loopne
mov
xor
jp
mov
add
pop
mov
xorb
lret
mov
pop
pop
cltd
jno
loop
mov
das
mov
mov
jnp
lds
pop
mov
arpl
xor
es
cmp
out
push
popf
cli
inc
mov
push
pop
mov
mov
aaa
idivl
mov
mov
mov
push
and
mov
pop
imul
jmp
xchg
jge
sbbl
mov
mov
mov
inc
cmp
repnz
xchg
dec
cltd
push
lds
repz
mov
xlat
mov
fwait
xor
scas
popa
inc
stos
xchg
lock
fsub
mov
dec
jns
jns
xor
xcrypt-ctr
cmpsl
push
xchg
mov
arpl
mov
notl
repz
pop
mov
adc
mov
insl
or
negb
jge
mov
test
scas
sub
out
inc
mov
jo
xchg
lds
mov
lahf
jecxz
mov
mov
sbb
cmp
mov
or
xor
mov
add
add
xor
mov
pop
into
inc
adc
pop
inc
mov
data16
jnp
push
pop
push
cmp
inc
je
cli
pop
shll
aas
cmp
testl
cmc
xchg
outsb
jne
mov
pop
cmpsl
pop
aaa
fidivl
mov
mov
add
pushf
jl
scas
xchg
jnp
mov
or
mov
ret
jg
and
mov
pop
test
cmpsl
fiaddl
mov
mov
add
ds
aam
cmpsl
jg
repnz
icebp
mov
fdivrl
jl
mov
push
dec
int
aam
mov
mov
mov
mov
add
mov
inc
andb
nop
cmp
stos
mov
jl
fldl
xorb
push
xchg
cmpsl
mov
push
mov
and
nop
ret
lcall
adc
jge
mov
jl
xor
roll
mov
xchg
stos
test
mov
mov
mov
mov
cmpsb
sub
cmp
xor
xorb
icebp
pop
mov
js
bound
or
push
mov
sbb
test
and
fs
cli
xor
into
rcl
pop
aas
mov
shlb
lods
adc
push
mov
cmp
ret
inc
js
repnz
cmpl
and
inc
rcrl
lret
cltd
hlt
outsl
stos
imul
mov
xchg
push
xor
mov
xor
aaa
add
jne
daa
neg
mov
mov
icebp
lahf
cmp
dec
inc
dec
xor
test
mov
mov
push
inc
fbstp
cmpsl
pop
push
or
inc
inc
mov
cltd
std
and
pop
mov
mov
jle
ret
adc
pop
and
lock
push
jge
dec
into
add
scas
scas
lahf
or
mov
and
push
mov
push
jae
mov
mov
leave
dec
insb
inc
inc
mov
and
fs
mov
aas
jns
ljmp
cwtl
cwtl
pop
clc
sbb
test
mov
je
subl
mov
pop
push
mov
mov
mov
cmpsb
lds
mov
sbb
test
or
repnz
test
push
jae
cwtl
iret
or
lods
lret
or
sbb
ja
add
mov
mov
addr16
and
pop
mov
iret
jl
mov
and
fidivrl
lock
lods
lods
into
pop
mov
mov
ficoms
xchg
fcomi
mov
sbb
sbb
stc
jp
cmp
push
adc
xlat
stc
aas
movsl
push
mov
and
fwait
rcl
xorl
lods
add
mull
mov
mov
pushf
mov
icebp
stos
pop
cwtl
mov
scas
arpl
jno
mov
dec
adc
or
pop
data16
outsb
add
mov
stos
fdivl
mov
inc
sub
mov
push
cwtl
pop
mov
jns
imul
popf
xorl
repnz
cmp
push
mov
or
nop
ficoms
jno
inc
outsb
push
adc
scas
imul
ds
ret
test
inc
test
rcrl
push
test
cmpsl
cmp
mov
pop
aam
fstps
mov
xchg
cs
addr16
add
sub
bnd
in
mov
xchg
movsl
nop
fsubl
pop
mov
mov
jo
fisubrl
dec
jp
loope
mov
mov
insl
adc
jge
add
dec
dec
xlat
mov
xor
cmpsl
test
mov
mov
jb
mov
iret
mov
cmpsl
adc
jl
inc
mov
pop
or
shr
push
mov
flds
push
mov
mov
ja
push
push
lods
xor
jp
mov
fwait
cld
or
in
mov
test
cmp
shll
push
stos
xchg
sub
lea
push
aam
aas
sub
add
shlb
lcall
add
aas
pop
mov
or
mov
mov
sbb
fisubl
decl
sahf
inc
adc
scas
cld
imul
sahf
mov
mov
repnz
xor
mov
loop
icebp
jb
test
mov
mov
jns
je
mov
lock
push
jg
inc
fidivrs
push
add
mov
pop
movsl
sub
pop
cld
lcall
push
mov
mov
fldl
nopl
xor
enter
das
cli
add
pop
inc
pop
mov
inc
movsl
int
xchg
cmp
mov
jp
fmuls
cltd
mov
notb
imul
rol
mov
jb
stos
decb
loop
cmp
aaa
shlb
cli
or
mov
xor
mov
test
out
movsl
fdivl
sbb
sub
add
insl
fdivl
mov
mov
cwtl
test
mov
jns
sbb
mov
or
sub
mov
xchg
xor
mov
mov
and
jns
or
mov
or
mov
cmpsb
ljmp
push
and
jb
push
fidivrl
movsl
or
shlb
stos
test
mov
cmp
xchg
orb
and
adc
mov
mov
mov
aas
repz
xor
jbe
pop
dec
pop
mov
in
fmuls
pop
mov
into
daa
movsl
mov
add
mov
mov
scas
lahf
cmp
mov
ret
in
cmc
bnd
shlb
xor
movsl
mov
jnp
shrl
inc
out
loop
inc
fistps
sbb
subb
inc
cwtl
cmp
pusha
mov
xor
mov
outsl
pusha
mov
in
add
jecxz
bound
jmp
mov
dec
andl
mov
sahf
push
mov
shlb
xchg
pop
xchg
lret
jae
imul
test
sub
mov
push
std
idivb
cmp
cmc
mov
lret
cltd
subb
mov
dec
cwtl
arpl
movsb
sarl
sub
cld
js
scas
call
imul
lds
pop
fmuls
sbb
push
stos
mov
sub
les
imul
aaa
add
scas
in
repz
xchg
inc
or
inc
sbb
cmc
test
mov
adc
mov
dec
addl
imulb
push
iret
cli
scas
xchg
xor
mov
jo
inc
mov
mov
inc
cmp
pushf
lock
mov
les
mov
mov
orl
rcrl
add
stc
icebp
mov
mov
sub
mov
pop
divb
out
jge
mov
cwtl
insl
cmp
imul
mov
nop
je
fistpl
sbb
int3
jmp
out
and
xchg
insl
mov
cwtl
sub
imul
and
mov
repz
jbe
mov
mov
mov
jnp
cmp
or
cltd
ucomiss
imul
mov
push
lret
mov
imul
sti
mov
jl
fwait
cli
mov
pop
pop
and
push
xor
cmp
arpl
fbld
std
addl
xor
mov
scas
mov
and
inc
xchg
cltd
mov
cmp
mov
cld
aad
xchg
jno
int3
xor
jmp
std
stos
mov
mov
enterw
fidivrs
rorb
mov
aad
mov
int
mov
push
mov
mov
or
mov
into
pushf
mov
cmpsb
iret
mov
lret
dec
mov
repnz
inc
sbb
lcall
sub
inc
mov
loopne
or
dec
lea
imull
out
mov
add
mov
or
loope
clc
jbe
lret
mov
sub
fwait
mov
mov
pop
test
loop
out
mov
sbb
int3
mov
push
shll
mov
cmpsl
jno
mov
sub
push
ret
stos
subl
mov
lret
mov
pop
fbstp
std
shl
arpl
mov
adc
inc
add
popa
mov
hlt
pop
sbb
mov
xor
xlat
adc
aam
and
fcmovu
mov
mov
jg
iret
inc
cmp
sbb
sub
ror
add
pop
mov
ret
mov
repnz
icebp
inc
mov
inc
sarl
fldenv
adc
popf
jbe
jge
mov
xchg
pop
push
ja
cwtl
lcall
push
sbb
cmp
mov
aaa
cli
cwtl
std
call
push
sbb
sub
jnp
ds
stos
addr16
mov
mov
xchg
lods
xor
mov
aaa
inc
int
xor
mov
mov
or
fstpt
adc
xor
lds
pushf
sbb
mov
xchg
pop
dec
add
pushf
mov
ret
cmpl
mov
cmp
adc
pop
cmp
fsubrs
jne
mov
inc
cs
lcall
xor
dec
pop
jns
arpl
negl
out
das
cmp
xor
mov
adcb
mov
xchg
lds
mov
fdivl
cmpsl
cmp
imull
xchg
mov
sti
lock
jmp
aas
ja
shll
mov
stos
popa
xor
shr
ljmp
pop
push
int3
mov
sub
pop
and
testb
xchg
mov
int
xor
mov
mov
cmp
adc
pop
jge
jne
cmp
mov
stc
insl
mov
mov
inc
cmc
mov
dec
pop
or
mov
jne
jno
xor
pop
cmpsb
mov
sbb
das
fnstenv
stos
ja
and
cmc
mov
and
test
pop
push
or
fisttpll
stos
add
xor
push
shlb
mov
inc
mov
stos
mov
or
fsubrl
int
push
mov
les
test
fdiv
or
mov
mov
xchg
push
jns
mov
mov
unpcklps
mov
ficoms
mov
jns
fiaddl
pop
lahf
shlb
icebp
clc
and
mov
lods
push
mov
add
out
mov
movsb
jmp
sbbl
mov
fbstp
xchg
cmp
push
push
push
cmpsb
dec
mov
pop
cmp
mov
mov
dec
inc
aas
jns
cmpsl
xchg
sti
mov
jae
mov
cmp
mov
cltd
cli
mull
mov
shlb
movsb
jne
movsl
xor
sub
mov
enter
fdivrl
mov
cmpsl
stc
sub
scas
repz
negl
pop
mov
sbbb
sbb
and
or
ja
xchg
repnz
add
add
test
sbb
sar
frstor
pop
repnz
and
push
inc
jge
cmp
sbb
aas
mov
sub
mov
lods
jmp
push
mov
outsl
cmp
icebp
fs
inc
mov
lret
repnz
ja
mov
jnp
mov
jecxz
or
inc
xlat
add
cmp
push
sbb
inc
mov
sub
add
cwtl
adc
cmp
sbb
lds
mov
sbb
mov
jne
push
mov
stos
nop
es
or
clc
or
jecxz
mov
or
xchg
negl
xorl
mov
jno
imul
inc
jecxz
cmpsb
or
ja
sub
fildll
stos
xor
sub
fldenv
ja
xchg
out
mov
xor
lret
mov
lcall
mov
push
lods
fstenv
sbb
lret
jnp
bound
mov
fnop
xor
adc
mov
jae
cmc
in
or
cltd
sub
data16
pop
sbb
pop
or
mov
js
mov
sti
cs
pop
mov
mov
fadds
lods
cmc
xor
movsl
test
mov
pop
push
mov
clc
mov
mov
orl
stos
mov
mov
repz
or
push
pop
push
les
rorl
data16
fisubrl
or
cmp
jo
xchg
mov
push
stos
iret
ds
jge
mov
in
or
fs
insl
shl
in
aaa
leave
mov
jp
sbb
mov
mov
lcall
arpl
bound
pop
in
mov
icebp
mov
test
lcall
jnp
mov
scas
pop
out
call
inc
jmp
xor
lcall
push
mov
aam
cmpsl
sub
jmp
das
jnp
mov
push
xor
adc
aaa
cwtl
mov
cmpsl
add
mov
movsl
jecxz
mov
es
xlat
inc
mov
add
pop
bt
js
popa
jge
xor
mov
push
outsl
imul
daa
jle
pusha
loop
inc
mov
mov
jnp
mov
jl
into
loope
sub
jb
repnz
mov
test
sahf
inc
mov
sti
movsl
jno
cmpsl
in
sbb
inc
sbb
gs
push
ljmp
cmp
fcompl
mov
cmpsl
loope
imul
imul
rcrb
outsb
pop
jmp
inc
mov
and
jb
sub
inc
adc
out
xchg
mov
int
push
lcall
add
cmp
lret
testb
arpl
mov
jnp
mov
imul
sub
pusha
xor
into
mov
fisttpll
add
sbb
adc
ret
jno
stc
and
and
mov
mov
imul
xchg
mov
xor
sbb
pop
adc
sbbb
mov
add
pop
outsb
and
xor
dec
xor
repnz
out
ret
sti
mov
xlat
imul
fdivrs
cmpsl
les
or
mov
bound
test
cld
xlat
cmpsb
xor
jbe
fisubl
xchg
adc
insl
mov
imul
das
ja
jns
or
mov
pop
stos
sub
sub
add
push
and
int3
lret
mov
pop
fimull
mov
sarb
mov
lods
cmp
cmp
add
loopne
mov
cmpsl
addr16
sbb
fs
mov
sbb
and
mov
les
fildl
xor
push
dec
mov
sbb
push
inc
mov
cli
cmp
jmp
xchg
sub
stos
arpl
jb
sar
andl
mov
fiaddl
xor
sbb
insl
faddl
pop
scas
adcl
adc
test
pop
cmp
aas
cli
push
enter
xlat
mov
inc
xor
movsb
push
ja
sarb
insl
jge
push
jmp
clc
push
sbbl
mov
movsb
gs
xchg
and
xchg
icebp
dec
mov
dec
mov
adc
mov
insl
sbb
push
cli
pop
arpl
mov
mov
shrl
xchg
mov
test
jbe
mov
aas
fwait
icebp
pop
data16
xor
fildl
mov
in
mov
ret
sbb
mov
test
xlat
inc
mov
scas
loopne
lcall
xlat
shll
mov
test
out
xchg
mov
pop
jp
or
cmp
mov
lahf
scas
iret
mov
int
call
mov
dec
dec
je
ss
jl
mov
add
icebp
or
xchg
stos
xchg
rcrl
lods
testb
mov
sbb
outsb
out
sarl
mov
icebp
imul
jge
jns
sbb
jge
mov
and
je
xchg
notb
push
mov
mov
mov
out
bound
test
aaa
mov
mov
arpl
mov
add
popf
mov
in
jnp
test
notb
notl
add
or
mov
dec
mov
rorl
mov
mov
mov
cmp
fs
mull
sbb
ljmp
dec
mov
xor
dec
mov
fisubl
pop
xlat
mov
mov
dec
xor
cmp
cmpsb
js
out
adc
and
scas
loope
push
mov
mov
jg
add
add
fcomps
cmpsl
adcb
mov
leave
cs
mov
stos
push
inc
xchg
fdivl
mov
inc
test
mov
cmp
cmp
mov
or
xor
jl
pop
cmp
cli
les
cmpsb
mov
es
cltd
xlat
jl
push
pop
push
jae
inc
mov
movsl
xchg
sbb
cli
xor
jb
mov
push
addb
outsb
mov
int3
adc
mov
pop
or
push
hlt
jge
cwtl
in
loop
cli
mov
ljmp
ja
xchg
lods
lahf
add
aaa
xlat
sub
xchg
movsl
or
std
jns
xor
mov
jbe
fcomps
mov
jle
pusha
add
gs
repz
stos
cmp
mov
cmpb
add
out
cmp
cmp
fidivrl
dec
mov
xlat
test
jmp
stc
push
mov
cmp
imul
sub
mov
mov
cld
fiaddl
dec
repnz
shll
xor
into
stos
lahf
mov
shlb
add
sbb
les
mov
andl
idivb
pushf
jno
insl
xchg
ljmp
cld
adc
and
test
xchg
movb
daa
lcall
cli
dec
andb
fcomps
cmp
pop
push
jbe
cwtl
orl
mov
insb
cmp
and
hlt
push
jl
mov
sbb
insl
loope
stos
add
mov
add
mov
insl
es
mov
sahf
xchg
lret
cmp
js
imul
or
and
sbb
cmpb
js
xchg
cmpsb
lods
mov
bound
test
mulb
mov
stos
pop
loop
dec
pop
aas
adc
pop
inc
mov
mov
test
mov
test
push
jae
sub
mov
pop
add
mov
repz
push
call
jg
mov
xor
in
mov
sarb
mov
mov
inc
inc
data16
mov
rolb
mov
xchg
repz
cmp
mov
mov
iret
mov
outsl
fbstp
mov
sbb
mov
mov
out
fwait
mov
mov
sub
test
adc
orl
cmp
lea
mov
xor
pop
xor
sbbb
in
inc
inc
lret
and
fdivs
rcll
movsl
sub
fidivrs
sbb
sbb
mov
xchg
repz
xchg
mov
sbbb
mov
pop
fdivs
fcmove
push
and
ss
mov
icebp
pop
adc
in
xorb
or
adc
pop
mov
jbe
repnz
mov
ss
add
mov
push
xorb
arpl
popa
cmpsl
mov
stc
mov
mov
mov
rcll
push
mov
xorl
repnz
mov
sbb
daa
paddq
dec
jecxz
xor
scas
mov
negb
rclw
pop
jo,pn
scas
subb
filds
adcb
pop
sbb
and
add
stos
push
and
cwtl
mov
lods
aad
aas
cwtl
scas
jp
cmpb
cltd
aaa
mov
jno
sahf
inc
cmp
enter
jb
jp
jnp
addb
inc
xchg
pop
ret
mov
inc
ficoms
scas
or
not
movsb
adc
mov
xor
sub
ret
xor
mov
mov
pop
lds
daa
fimuls
adc
jecxz
mov
push
adc
pop
cmp
loope
int3
sbb
add
ret
lret
movsl
mov
mov
xlat
shl
int
scas
mov
mov
xlat
jae
xchg
jl
fcmove
stos
loop
cld
jno
ret
add
mov
lret
xchg
hlt
std
rorb
arpl
outsl
mov
cmp
xor
sub
ret
scas
xchg
pop
xchg
jmp
jl
mov
out
mov
into
out
mov
mov
xlat
jmp
xor
mov
sbb
sub
sti
lds
fucomi
jns
test
add
mov
mov
out
add
push
lods
imulb
cmp
cmp
btr
cwtl
lods
ret
mov
arpl
fwait
rclb
iret
inc
xor
mov
mov
daa
cmpsb
scas
cmp
lcall
jp
add
mov
or
pop
mov
cmp
xlat
cmp
mov
shlb
fwait
sbb
andb
and
ret
mov
push
mov
mov
test
cmp
in
enter
jnp
xor
jo
mov
stc
xor
loop
gs
jge
popa
xorl
sub
mov
jge
negb
arpl
jmp
add
dec
cmp
stc
cmp
icebp
rcll
fidivs
cmc
movsl
out
cwtl
xlat
into
mov
or
int
push
push
arpl
sbb
not
sbb
cmp
mov
dec
sarl
fs
out
mov
lret
das
ret
incl
mov
outsl
scas
out
repz
dec
decb
mov
cmc
loopne
mov
hlt
fcoml
lods
ss
push
push
cmp
push
xchg
dec
sbb
clc
xchg
pop
pop
mov
and
leave
xchg
pop
xlat
loopne
ret
into
sbb
and
cmp
fisubl
lods
mov
or
jp
mov
sbb
mov
addr16
mov
testl
int3
adc
add
mov
iret
stos
sub
test
jne
mov
icebp
jge
sti
fsub
test
scas
stos
mov
xorl
idivl
addl
or
pop
out
mov
fsubrl
adc
dec
les
pop
leave
push
popa
xchg
pop
fiadds
loop
icebp
stos
out
rolb
mov
push
daa
jmp
mov
aas
and
inc
pop
push
arpl
pushaw
adc
mov
ja
bound
xor
mov
mov
mov
mov
insl
cmp
jge
or
mov
mov
sbb
sub
xchg
push
xchg
mov
mov
fs
pushf
out
cmp
movsb
add
addr16
stos
loope
imul
mov
mov
and
dec
movsl
dec
mov
stos
xchg
and
rcrb
sti
add
es
mov
mov
and
in
dec
inc
enter
xchg
mov
xor
adc
xchg
mov
stos
cld
mov
or
roll
mov
cmpsl
cmp
mov
and
add
xorl
movsb
mov
enter
jb
mov
dec
pop
sbb
ja
inc
mov
mov
pop
aad
fsubr
lret
pushf
xor
mov
mov
mov
movsb
out
daa
add
mov
cltd
lret
jo
add
mov
or
xorl
mov
and
mov
fnstenv
mov
jge
mov
pop
in
sbbb
pop
int
ret
mov
adc
lds
mov
mov
test
inc
push
lea
std
and
dec
fwait
mov
lods
pusha
jg
insb
jbe
mov
roll
mov
dec
or
stc
cli
ja
jae
lahf
out
fucomip
xlat
mov
mov
mov
xorl
cli
mov
ja
mov
fsts
lea
jb
xlat
add
sti
xor
imul
mov
sbb
add
mov
cmp
sti
mov
xchg
loopne
push
jnp
aam
scas
sbb
inc
cmpsl
sbb
stc
sbb
jle
mov
and
sub
push
imul
add
leave
inc
adc
ss
mov
xor
and
jecxz
out
in
sbbb
pop
cmpsl
mov
and
jmp
adc
mov
je
mov
leave
or
xchg
sbb
fidivs
cmp
mov
rorl
arpl
add
mov
lret
fdivrs
mov
jl
int3
pop
cld
test
mov
test
adc
aaa
dec
xlat
andb
or
push
cmpsl
ljmp
mov
dec
cmp
into
xchg
or
hlt
cmpsl
mov
test
jno
adc
fbld
adc
iret
imul
lret
xor
add
xchg
inc
mov
test
xchg
daa
and
idivl
cmpsb
inc
fisubrl
mov
mov
aas
arpl
cltd
sbb
mov
mov
mov
and
aaa
in
sbb
sub
jne
popf
and
movzwl
fildl
lea
fiadds
jo
mov
bound
jns
lret
jns
inc
pop
leave
mov
sbb
iret
inc
lock
scas
mov
mov
aad
xor
mov
mov
cld
cmpsb
mov
and
sbb
and
mov
mov
jmp
imul
mov
ret
lret
mov
mov
stc
es
fsubl
lret
mov
add
pop
inc
xlat
fcmovb
cmpsb
das
adc
fsts
enter
out
mov
stc
jns
xor
cld
sbb
or
jecxz
movsl
pop
div
jle
imul
mov
fnsave
mov
lret
mov
rcrb
cmc
xorb
sub
ss
xor
inc
inc
cwtl
aam
test
lret
faddp
cmc
sub
pop
push
out
je
int3
mov
flds
mov
inc
call
mov
ljmp
fdiv
push
dec
add
adc
fwait
pop
sub
adc
jecxz
add
loope
mov
mov
js
mov
mov
mov
xor
mov
mov
cwtl
push
push
ss
orl
mov
outsl
addr16
mov
mov
call
push
mov
mov
out
sub
mov
add
test
incb
or
jae
loope
cmp
xlat
arpl
mov
xchg
roll
roll
add
cmp
cmc
outsl
int3
mov
stos
add
mov
jp
jae
imul
mov
dec
mov
imul
jnp
xor
daa
add
sbb
scas
cmpsl
mov
fwait
push
xor
repnz
mov
ljmp
ficompl
shlb
jge
mov
into
xor
fistps
cmp
sbb
pop
mov
and
pop
xchg
xchg
je
mov
scas
jb
xorl
ss
mov
inc
add
and
adc
dec
mov
fiaddl
in
cmpb
mov
iret
fmull
lock
xor
imul
stc
test
push
es
popf
mov
xchg
lods
and
test
cmpsb
xchg
adc
jl
or
stc
xchg
cwtl
pop
mov
add
cli
cmc
call
jle
and
xchg
or
pop
jae
mov
pop
inc
mov
es
cwtl
xlat
ficompl
and
cmpsl
cmc
lret
out
cwtl
push
mov
pop
push
aam
add
sub
jae
inc
cltd
dec
movsl
xchg
xchg
mov
inc
mov
lea
out
mov
pop
rcll
mov
adc
cmpsl
cld
push
adc
add
test
sub
das
cwtl
lahf
push
push
jp
mov
jg
lds
mov
std
pushf
call
movlps
pusha
push
je
cmp
adcl
aaa
cmc
fcomp
pop
fldenv
sbb
mov
cmp
fcomp
lret
sarb
adc
mov
add
lods
outsb
pop
lds
lret
mov
addl
mov
sar
xor
imul
jae
xlat
xchg
xor
xor
mov
push
add
test
xlat
lods
mov
icebp
adc
mov
xchg
sti
xchg
testl
mov
mov
icebp
cwtl
push
pop
sbb
nop
ljmp
cmp
movsl
aam
xor
js
mov
mov
sub
cli
mov
mov
test
sbb
and
negb
outsl
mov
aas
in
dec
mov
pop
imul
loopne
cwtl
clc
push
inc
sub
mov
xchg
iret
stc
pop
mov
imul
xchg
lahf
mov
pushf
sets
sbb
in
mov
push
and
pop
or
xchg
icebp
ja
cmpsl
sbb
adc
stos
xchg
ljmp
fsts
dec
loope
mov
mov
inc
mov
ljmp
mov
insl
stos
pop
sti
pop
mov
xlat
sbb
xlat
mulb
xorb
fnstenv
repnz
aad
cmp
push
sbb
and
adc
add
and
or
mov
pusha
adc
cmp
sub
lds
cmp
adc
sub
dec
sbb
inc
mov
imul
mov
lods
mov
fcomip
mov
jl
dec
sub
mov
cwtl
loope
adc
push
xlat
dec
fwait
orl
pushf
mov
imul
fbld
rcr
jmp
adc
lret
das
in
cmpsl
aad
jp
cmpb
push
lea
fdivrs
jb
cmp
cwtl
cmpsl
pop
add
mov
push
cmp
mov
mov
shll
push
jb
pop
addr16
cwtl
sub
sub
scas
mov
shlb
shlb
pop
mov
movsb
arpl
mov
add
xchg
and
lock
jnp
xor
mov
sbb
imul
int
fsubl
mov
mov
push
lds
sbb
jg
mov
or
ret
cmpsl
jge
push
leave
addl
cltd
into
loop
mov
fsubl
aam
lods
aaa
cwtl
sbb
mov
ja
pop
js
test
and
ljmp
repz
mov
and
adc
jge
dec
xorb
xor
jns
mov
sbb
stos
in
pop
movsl
pop
push
and
loop
mov
pop
mov
inc
mov
dec
mov
bound
lahf
cmpsl
imul
popf
scas
cld
xlat
popa
arpl
mov
cwtl
mov
dec
cmp
lea
push
scas
popa
adc
bound
movsl
cmpsb
mov
fdivl
and
mov
mov
sarl
pop
cli
cmp
mov
push
sbb
mov
out
stos
ss
sbb
ret
inc
and
and
or
mov
push
add
jl
lcall
mov
lcall
sahf
ds
mov
test
xor
sub
mov
data16
loop
fsubl
pop
or
xchg
sbb
mov
int
test
pop
pop
jg
and
mov
pop
mov
sbb
pop
cmp
popf
mov
mov
int
mov
dec
push
sub
mov
and
sbbb
dec
cli
fwait
mov
mov
add
push
mov
adc
test
roll
movsl
mov
push
and
lods
iret
dec
cmpsl
js
sub
fidivl
pop
or
mov
jmp
mov
xor
mov
out
xchg
add
sbb
js
scas
pop
mov
ss
insl
inc
cmp
out
cmpb
aas
xor
push
jne
mov
icebp
arpl
mov
lcall
addr16
lret
stc
pop
test
or
pusha
sbb
stos
outsl
imul
mov
lret
sarl
cs
addl
add
jge
xlat
or
jnp
mov
ss
sub
add
mov
imul
jo
movsl
icebp
sti
jbe
cwtl
enter
xchg
lods
mov
inc
iret
cmp
mov
jae
cmp
pop
mov
ret
add
xlat
or
xchg
mov
push
dec
cmp
mov
and
jns
sbb
cmpsl
dec
aaa
xchg
and
js
pop
imul
mov
mov
loop
gs
xor
fsubrp
dec
pop
ret
popf
mov
xchg
rcr
jbe
jl
cltd
mov
mov
stos
mov
xor
bound
jb
cmp
mov
addr16
sbb
lea
cmp
mov
xchg
mov
mov
xor
push
pop
lahf
cmp
addr16
aaa
cmp
cmp
xor
mov
cmc
cli
jmp
flds
leave
jnp
ja
inc
mov
sbbl
mov
jbe
lret
into
xchg
add
mov
jnp
mov
mov
mov
pop
mov
push
cmp
addr16
inc
out
fisubrs
inc
test
add
xlat
dec
xor
sbbl
fsubl
sbbl
adc
or
cli
repnz
ret
fisubl
xlat
or
mov
mov
imul
sbb
jp
jb
push
inc
cli
pop
aas
addr16
cmp
and
mov
mov
cmp
out
cmp
stc
cltd
imul
in
es
aam
mov
leave
stos
loope
mov
int3
mov
stos
test
addl
xchg
outsl
cmpsl
arpl
ja
xchg
imul
aaa
inc
mov
cmp
and
xlat
mov
and
mov
jmp
mov
cmp
sub
or
jge
and
dec
cmp
cmp
mov
sbb
daa
sub
icebp
mov
mov
dec
dec
sbb
cmpsl
jg
add
fidivs
mov
sbb
dec
push
aaa
ljmp
call
xor
cmp
sbb
mov
mov
sahf
add
mov
cs
mov
jne
cltd
mov
cld
sub
sub
xorb
sub
cwtl
adc
stos
mov
ficoml
sbb
movsl
sub
punpckhdq
aas
and
shll
std
lea
sbb
or
insl
mov
jcxz
jnp
or
mov
mov
std
arpl
repz
repnz
dec
and
push
mov
dec
push
in
cmp
jmp
int3
shrl
xor
outsl
lahf
and
fildl
popf
out
mov
sbb
sub
sub
mov
js
loop
mov
and
jns
mov
jp
xchg
lods
add
stos
jno
insl
icebp
lcall
iret
xlat
fidivl
fdivs
int3
and
addr16
xchg
testl
ficompl
rolb
and
sbb
mov
mov
aas
repnz
jno
mov
fistpll
pop
cwtl
push
negb
out
lahf
loope
dec
pop
mov
imul
or
dec
scas
add
jae
dec
xchg
lret
test
sbb
stos
into
or
add
cmp
inc
movsb
into
loop
pop
aaa
daa
and
mov
mov
xlat
mov
and
push
test
and
and
es
sbbb
movsl
imul
xor
inc
loopne
rclb
daa
mov
mov
sbb
imul
mov
cmp
and
shrb
mov
mov
sub
adc
cmpsl
lret
pusha
mov
add
outsl
xchg
inc
dec
push
mov
mov
movsb
in
fisubl
bound
inc
add
in
fldcw
lcall
mov
daa
repnz
jne
fdivrs
mov
jns
shlb
push
sbb
pop
in
cltd
movsb
jbe
cmp
test
and
mov
dec
adc
popa
xor
icebp
clc
gs
and
loopne
les
or
ret
scas
mov
add
aam
mov
sub
std
jno
out
in
arpl
stc
xor
ret
mov
imul
and
gs
push
rcl
mov
arpl
jl
mov
rol
loope
lret
xchg
mov
xchg
adc
jne
and
pop
or
mov
inc
inc
xlat
mov
daa
and
and
lahf
sahf
xor
push
addr16
mov
cmp
pop
sbb
mov
aas
ljmp
outsl
into
sub
lods
int3
pop
xchg
loope
mov
test
pop
adc
es
jl
ja
mov
cmp
movsl
dec
test
sbb
int3
lods
push
xor
loopne
lahf
mov
ret
jecxz
fidivs
jnp
stos
and
cmpsl
dec
or
cmp
ja
add
divl
nop
sarl
and
jae
in
xchg
data16
cmpsl
and
xchg
sbb
lcall
push
sarl
shlb
mov
nop
les
mov
inc
and
mov
fidivrl
sbb
cmp
test
mov
rol
and
cmp
push
xchg
adc
adc
scas
pop
jmp
pop
mov
int
imull
mov
fimull
hlt
mov
inc
mov
mov
mov
jae
scas
imul
js
mov
rorb
sbb
nop
cmpsl
ds
icebp
lcall
insl
repnz
nop
lahf
push
mov
adc
bound
icebp
xchg
pop
mov
cmp
sub
cltd
lret
push
inc
je
jle
xor
push
or
pushf
push
shlb
mulb
out
mov
jno
outsl
mov
add
push
dec
cltd
rcr
fmulp
push
cmpsl
sets
mov
fimuls
mov
pop
adc
loop
cltd
nop
jecxz
andl
mov
ss
lahf
pop
cwtl
movsl
fsubrs
pop
or
mov
loop
lods
out
addr16
in
les
mov
xor
lods
movsl
xchg
mov
out
mov
mov
in
pop
cmp
addl
cwtl
mov
movsl
addl
jns
dec
lods
pusha
sbb
push
jnp
push
mov
jge
cmp
xor
outsb
jnp
loope
inc
fidivrs
iret
inc
jne
push
mov
gs
xchg
mov
jl
mov
jp
mov
pushf
sub
stc
icebp
pop
ret
sub
call
shlb
mov
das
faddl
fs
pop
pop
and
cmpsl
jbe
mov
jnp
imul
pop
and
les
mov
scas
movsl
inc
pop
or
add
in
mov
jle
addl
cmp
mov
and
lcall
bndstx
mov
push
cmpsl
fdivl
mov
push
cltd
or
inc
cwtl
mov
imul
mov
dec
mov
movsl
lea
xor
cmpsl
enter
outsl
adc
lock
adc
mov
mov
add
aas
and
imul
mov
mov
lea
jbe
mov
stc
sub
test
push
imul
call
mov
test
xor
mov
cmpsl
add
movsl
sbbl
adc
mov
mov
xchg
inc
mov
dec
push
mov
mov
push
ss
sub
nop
lds
inc
mov
mov
xor
and
cmp
mov
decl
fidivl
mov
ja
push
sub
mov
and
subl
xor
push
push
mov
adc
rolb
popa
mov
out
xlat
pop
mov
jge
cmp
cwtl
pop
mov
mov
sbb
mov
sub
mov
mov
and
xor
dec
popf
push
stos
mov
je
shrb
pop
insb
add
ficomps
mov
aam
popa
lods
bnd
jns
jbe
pop
gs
xchg
jg
mov
sbbb
ss
sub
mov
pop
or
xlat
sbb
jne
cmpsb
jbe
pop
push
mov
lret
mov
xchg
jmp
push
mov
mov
sbbb
mov
pop
jae
mov
add
pop
pop
cmpsl
repnz
jnp
enter
fs
stc
out
xlat
mov
sahf
andb
adc
jle
xor
fidivrs
cmpsl
jae
test
dec
lret
mov
fwait
xchg
xor
mov
or
and
rcll
notl
pusha
mov
gs
iret
jno
adc
pop
xor
or
jbe
inc
les
ret
fldenv
sbb
jno
mov
jl
loop
addr16
es
add
test
add
mov
iret
adc
dec
mov
mov
aaa
pop
movsb
lret
out
cltd
mov
repnz
cmpl
push
mov
stc
ret
mov
mov
leave
xchg
mov
cli
add
sbb
punpcklbw
mov
inc
add
sub
jns
int3
inc
shll
imul
ficoml
fnstcw
js
xchg
mov
xlat
adc
test
lcall
lea
xchg
add
dec
xor
popa
movsb
jbe
xor
sbb
sbb
fwait
xchg
int
inc
stos
mov
test
xor
aas
scas
cmp
das
pop
cmc
pusha
mov
lret
sub
test
sbb
stc
pop
mov
scas
aaa
xor
xlat
cs
or
jnp
mov
adc
fstpt
or
mov
jo
inc
xchg
test
and
scas
pushf
jns
mov
hlt
push
shl
mov
adc
xchg
test
push
adc
mov
mov
out
aam
pop
xlat
lahf
es
mov
repz
push
and
xor
cltd
movsl
mov
xchg
or
fnstenv
lar
mov
adc
cmp
int
add
mov
jo
xor
out
push
mov
imul
loope
inc
fs
arpl
sub
mov
adc
inc
into
mov
fwait
mov
mov
test
pop
cltd
pop
and
jge
jmp
mov
jno
scas
ss
dec
stc
test
dec
jp
mov
leave
outsl
mov
cmp
push
xchg
jmp
xor
pop
jns
cmp
adc
aam
mov
mov
xchg
stos
xchg
jne
add
bnd
mov
inc
lret
pop
xchg
int3
inc
lret
mov
sub
stos
cmp
inc
dec
cmp
xchg
iret
sbb
adc
xchg
cwtl
int3
stos
dec
arpl
jns
lahf
mov
call
mov
pop
icebp
pop
xor
or
and
mov
aaa
push
idivb
xor
imul
bound
subl
cmpsl
loopne
movsb
lcall
mov
shll
ror
mov
mov
jge
enter
xchg
mov
mov
sbb
sarl
lds
add
call
mov
std
cmp
xor
pop
aam
addl
cltd
sub
xor
jns
pop
cmpsl
icebp
and
sbb
cmp
xor
xor
cmc
fldcw
orl
test
xlat
lds
gs
test
int
jl,pt
out
sub
and
hlt
or
addr16
jnp
dec
imul
in
scas
mov
pop
xchg
xor
or
xchg
mov
and
aaa
adc
aaa
adc
inc
cmpsl
xchg
mov
xchg
test
cmp
pop
mov
pop
addb
add
cli
xorl
in
sbb
fwait
mov
push
inc
fsubs
lea
hlt
cmpsl
mov
bound
repnz
mov
push
lahf
les
jmp
sahf
stc
mov
add
sbb
mov
mov
leave
iret
cmpsl
into
cmpsl
fidivrs
imul
lret
jns
daa
xor
mov
pop
in
mov
iret
cmpsl
cmp
das
repz
sub
test
jg
xor
mov
sbb
adc
ds
test
mov
dec
xchg
or
mov
sbb
mov
mov
jge
push
and
mov
mov
mov
je
push
test
shlb
shll
mov
inc
xor
ljmp
in
mov
mov
mov
sbb
xchg
call
aam
and
jmp
xchg
mov
test
add
lods
adc
push
mov
sbb
jle
dec
pop
jecxz
movsb
test
pop
dec
aad
je
mov
sti
arpl
push
pop
adc
cmp
and
cmp
out
sub
jg
mov
faddl
sbb
and
lahf
mov
icebp
add
cmp
mov
mov
sbb
sarb
arpl
cmp
fimuls
iret
mov
repz
mov
popa
stos
int
xchg
pop
push
and
sbb
icebp
mov
mov
sbb
int
cli
push
stos
cmpsl
push
iret
pop
mov
cmpsl
adc
pop
jmp
push
mov
idivl
xor
in
mov
xor
pop
pop
loop
mov
cltd
mov
xchg
mov
inc
inc
jmp
jbe
negl
add
int3
jb
insb
or
out
in
test
xor
pop
lret
mov
fisttpll
mov
cmpsl
jecxz
std
push
xorl
in
icebp
inc
push
and
mov
ror
popf
mov
iret
mov
imul
mov
xchg
mov
movsl
xor
and
scas
jnp
iret
cmp
test
xchg
or
cmpsb
mov
push
sarl
in
mov
lock
sahf
cmp
mov
sbb
and
popa
cmpsb
jnp
or
ja
mov
push
inc
xlat
scas
jmp
dec
dec
sub
shll
aaa
xor
mov
inc
mov
iret
xchg
dec
mov
mov
int
test
mov
mov
movsb
sbb
or
xchg
sub
loopne
outsl
xor
mov
dec
sub
dec
jbe
call
test
in
cmp
pop
pop
jns
icebp
jno
jno
stos
add
dec
adc
cwtl
sahf
jae
cmpsl
jg
sbb
jmp
or
cli
push
mov
xor
mov
cmpsb
mov
xchg
jmp
pop
xchg
testb
sub
addl
sbb
lret
lahf
sbb
cmp
insb
cmpsl
inc
xor
cmp
mov
and
lret
ja
mov
roll
mov
lret
cmp
pushl
xor
and
ljmp
push
xlat
xor
sbb
and
test
fbld
jnp
xor
sbb
mov
lret
rolb
fiadds
lock
cwtl
xchg
mov
mov
data16
lret
insb
scas
cmc
sub
pop
pop
repz
mov
pop
xchg
mov
loop
inc
icebp
pop
add
mov
call
ljmp
test
shll
mov
cmp
xchg
stos
rcll
mov
cmpl
sbb
aas
sbb
xchg
test
cltd
mov
jp,pt
out
mov
adc
sub
adc
cwtl
xor
lock
test
sbb
icebp
mov
add
mov
xor
mov
fldenv
dec
mov
insb
mov
test
adc
btr
jne
lahf
mov
dec
inc
hlt
je,pt
mov
add
pmullw
popa
or
lea
aaa
addl
mov
jo
add
jecxz
jae
adc
cmpsb
test
fstpl
mov
mov
xor
insl
gs
dec
aaa
cmp
scas
fwait
add
add
aaa
add
lods
pop
loopne
call
cs
mov
inc
arpl
outsl
xlat
xchg
pop
or
pop
jnp
xor
iret
repnz
scas
xor
mov
fadds
inc
mov
repnz
and
hlt
lret
xchg
mov
sub
pusha
xor
aas
inc
fidivl
xchg
ss
orb
jns
push
mov
fisubs
mov
push
lods
sbbb
icebp
adc
xchg
aaa
push
das
cld
jle
adc
in
fwait
pop
pop
cmp
lea
je
ja
and
mov
gs
lret
stc
inc
aam
xlat
loope
push
pop
call
or
dec
push
je
rclb
lret
sbb
dec
mov
pushf
out
jg
xchg
inc
testb
mov
jae
mov
icebp
cmpsb
aas
mov
cmpsl
pop
arpl
xchg
xor
mov
cwtl
out
jge
iret
push
jecxz
dec
sahf
adc
out
icebp
mov
jmp
pop
and
push
dec
mov
shlb
sub
xchg
or
mov
out
fsubrs
or
pop
cmp
mov
inc
pop
mov
hlt
mov
div
push
jne
jae
das
es
sub
cmp
inc
push
pop
mov
cmpsl
add
mov
arpl
cmp
stc
sarb
or
sub
add
xchg
or
sbbl
scas
cmc
push
mov
repnz
gs
jns
test
ljmp
imul
cmpsb
pop
mov
cli
mov
lds
loope
mov
lcall
cltd
sarl
scas
sub
xor
cmp
in
sti
or
mov
ja
stos
cmpl
lret
in
jns
adc
cmpsl
add
adc
jb
mov
mov
and
xor
cmp
lahf
fdiv
loope
in
movsb
jge
jmp
stos
and
push
lods
pop
test
mov
into
cmp
in
sub
sub
jbe
dec
or
xchg
das
arpl
fbld
int3
lcall
out
lods
lret
pop
mov
xlat
int3
sub
mov
xor
sub
mov
and
aas
fdivl
lea
movsl
mov
mov
sbb
orb
mov
xchg
cmp
inc
mov
test
jns
mov
shll
mov
jnp
push
ret
cmpsl
daa
iret
stos
add
fidivl
adc
xor
loopne
cmp
cltd
notl
dec
xchg
mov
jae
fsubs
dec
xchg
cmc
cmc
pop
sahf
xor
test
cmp
insl
out
cmpsl
xchg
es
add
mov
mov
jo
and
sbb
test
xor
pop
sbb
mov
lods
xor
cmp
pop
insl
mov
inc
test
jo
cwtl
test
popa
icebp
call
sahf
inc
xor
dec
fstl
scas
insb
jmp
cmp
addb
push
dec
mov
testl
jne
aam
adc
lods
mov
movsl
mov
call
insl
cwtl
addb
mov
cmp
add
mov
dec
mov
sub
push
and
and
daa
gs
lods
add
shl
inc
mov
pop
incb
div
mov
mov
into
mov
or
fbld
mov
addr16
mov
xchg
aam
xor
push
xchg
sbb
adc
push
loop
repnz
mov
add
adc
mov
andb
cmpsl
out
ret
sarb
loop
sbb
leave
in
or
xor
je
cmp
inc
jno
push
mov
xor
je
fistl
mov
scas
ljmp
addr16
ja
and
pop
out
movsl
mov
scas
fidivrs
lods
dec
aaa
sbbl
lods
or
mov
push
xchg
jbe
inc
mov
jae
dec
mov
pop
sbb
adc
adc
adc
adc
daa
stc
mov
rolb
xchg
jge
mov
and
scas
fdiv
iret
jne
cmpsl
push
xor
fs
sarl
mov
cmpsl
mov
mov
xor
cmp
push
stos
cmc
inc
mov
scas
sub
mov
lahf
loop
sahf
xor
cmp
xlat
inc
mov
ss
xchg
mov
movsl
aam
test
arpl
aad
js
or
out
imul
mov
xchg
mov
mov
lcall
mov
bound
icebp
jae
in
sbb
inc
test
js
les
repz
cli
add
jb
pusha
out
inc
sbb
andl
inc
mov
lds
jnp
sub
loope
xchg
mov
cli
roll
cmpsl
mov
mov
clc
fdivs
xchg
inc
lcall
je
mov
xchg
inc
and
xor
pop
dec
jae
sbb
add
xor
or
push
inc
mov
das
mulb
out
in
sarl
repnz
jl
clc
mov
push
pop
insl
xor
dec
or
cmp
xlat
xor
loop
mov
lods
mov
inc
mov
in
push
adc
adc
popl
aas
mov
in
push
mov
mov
arpl
and
adc
mov
pop
xor
jecxz
aaa
sub
hlt
loope
jne
cmp
jns
add
xor
mov
mov
xor
in
mov
in
adc
push
mov
fnsave
hlt
scas
es
jp
es
cmp
out
into
mov
xlat
mov
fsub
daa
clc
mov
mov
add
mov
sbb
cmpsl
lea
inc
mov
stos
pop
add
xor
and
inc
cmpsl
movswl
or
sbbl
mov
lahf
ss
mov
lret
mov
out
int
cmpsb
mov
mov
jns
or
cmp
dec
mov
orl
sub
xchg
mov
add
pop
out
inc
mov
add
adc
test
mov
pop
jne
jno
mov
add
pop
cld
lahf
push
sbb
xchg
scas
or
mov
xor
stc
inc
inc
ret
mov
mov
mov
xor
stc
mov
in
test
adc
es
mov
or
jns
xor
fistpl
push
mov
mov
nop
test
mov
push
sub
cmp
xchg
cmpsl
test
cmpsb
jp
adc
ret
cltd
daa
pop
mov
mov
inc
add
xlat
mov
xor
xchg
xchg
sbb
aad
inc
sbbl
cmp
sbb
ja
daa
pop
sbb
mov
insl
sbb
into
movsb
mov
push
stos
or
fwait
sub
pop
xor
ss
mov
or
lds
inc
sbb
aaa
fwait
and
push
mov
int3
subl
cltd
sub
xchg
lods
scas
fldcw
out
mov
and
imul
sti
dec
cmp
out
mov
jno
adc
inc
xlat
int3
push
je
mov
add
jne
inc
cmpsb
add
sub
ss
ss
mov
dec
and
gs
mov
shrl
stos
scas
xor
arpl
mov
mov
mov
cwtl
jmp
pop
pop
inc
lods
test
xchg
dec
sbb
cltd
addr16
pop
popa
movsl
pop
imul
cmp
and
xchg
insb
adc
out
lret
mov
pop
jne
jo
dec
aad
mov
test
mov
ficoml
xlat
mov
push
ds
mov
and
mov
jmp
and
mov
push
ficompl
mov
mov
mov
sbb
mov
mov
roll
push
mov
mov
mov
cmp
test
push
andb
dec
das
pop
inc
pop
push
int
adc
icebp
mov
outsl
dec
filds
mov
jns
xorb
cmpsl
test
and
shl
adc
mov
imul
pop
jge
repz
xchg
stc
pop
or
addr16
jns
mov
xchg
js
pop
icebp
and
in
dec
je
and
cmp
and
fidivl
mov
test
enter
test
gs
test
aas
pop
dec
sbb
sub
stos
or
xor
daa
xor
pushf
adc
and
scas
dec
hlt
xlat
lcall
mov
mov
or
jno
mov
inc
mov
in
pop
icebp
xchg
std
ja
jg
and
mov
sbb
add
dec
xor
mov
cld
adc
sahf
xchg
fwait
mov
mov
inc
add
xchg
popf
stos
xchg
lods
nop
mov
lods
dec
cmpsl
inc
testl
mov
sarb
mov
cs
pop
icebp
add
pop
cltd
xor
sub
mov
jl
mov
mov
test
sub
ds
mov
inc
push
popl
pop
xor
mov
imul
repnz
jle
cltd
mov
mov
push
outsl
and
dec
arpl
mov
sub
dec
xchg
cmp
jg
xor
dec
mov
loope
out
mov
iret
mov
mov
leave
inc
mov
inc
mov
fwait
mov
into
ss
je
xchg
and
mov
add
dec
outsl
mov
scas
pop
mov
lret
and
test
lock
mov
adc
inc
outsb
sub
mov
or
and
cmp
mov
mov
xlat
sbb
and
aad
xchg
lods
cmpb
inc
mov
stc
inc
jbe
cmpsl
lea
mov
mov
fisubs
dec
mov
dec
lods
into
sub
negb
lcall
sub
test
inc
lods
cmp
pushf
in
sub
inc
pop
mov
cmp
xchg
xorb
cwtl
in
mov
cmp
mov
mov
cmpsl
jmp
sub
xchg
enter
lahf
movl
jl
mov
stos
and
jno
pop
data16
and
shll
cmp
pop
fisubl
sbb
xlat
xlat
mov
mov
mov
pop
mov
jae
inc
lds
popa
call
jmp
or
pop
or
jno
shlb
mov
andl
add
inc
mov
fwait
clc
cmpsl
cltd
push
push
xchg
adc
mov
test
lahf
jnp
mov
and
xchg
cmp
cwtl
mov
add
jns
push
cmp
mov
mov
and
jne
mov
pop
mov
gs
xchg
jae
fcos
mov
pop
push
mov
cs
repz
call
in
mov
cmp
mov
sbb
fnstenv
xchg
jno
int3
mov
cmp
push
cmp
test
pop
daa
scas
fwait
mov
lods
imull
or
insb
jae
jno
xor
xor
or
aas
sub
jae
das
mov
mov
jnp
inc
cld
mov
push
mov
clc
fdiv
insl
mov
stos
sbb
gs
jae
mov
xlat
lahf
cmp
shlb
fnstsw
sub
inc
push
mov
jae
incb
iret
aaa
mov
scas
gs
repnz
ret
add
adcb
sub
testb
mov
push
sahf
pop
and
scas
imul
adc
mov
mov
or
cmc
push
dec
xlat
cmp
popa
andl
jo
and
xor
cmpsb
rorb
push
cltd
push
jle
xlat
scas
fsubr
mov
jb
test
aaa
xchg
jl
or
jnp
inc
mov
inc
xchg
jo
imul
jl
lock
and
add
mov
mov
fadd
test
mov
arpl
mov
xlat
movsb
out
cmpsl
imul
inc
xchg
adc
xchg
mov
lds
nop
cmpsl
cmp
dec
sbb
mov
fstps
inc
cmpsl
mov
sbb
mov
or
jmp
jno
inc
sbb
push
fs
mov
enter
mov
jae
daa
pop
imul
lods
ret
fwait
sub
call
scas
mov
mov
incb
mov
cmp
pop
push
jae
mov
mov
sbb
sub
adc
xchg
scas
jae
mov
mov
aad
pop
xchg
push
mov
dec
xchg
jns
sbb
dec
cltd
adc
divb
cwtl
imul
fisubs
cwtl
daa
out
sbb
mov
mov
fs
lods
xchg
dec
and
add
mov
cmp
scas
cmpsl
outsb
mov
xor
push
xor
repz
lcall
inc
cltd
or
iret
cmp
sbbb
test
mov
jbe
push
test
ja
fimull
sbb
push
test
xor
cld
xchg
aas
lods
jne
scas
mov
dec
mov
sub
ret
pop
int
es
shll
and
pop
mov
xorl
dec
popa
dec
imul
mov
imull
outsb
cli
dec
adcl
pop
cwtl
test
mov
ficomps
outsl
cmp
pop
fdivs
lods
mov
mov
mov
aad
lods
mov
inc
icebp
hlt
mov
xchg
push
mull
mov
incl
cmp
mov
pop
enter
jg
in
jnp
cmc
mov
add
push
inc
cmp
sbb
xchg
dec
mov
frstor
and
jg
popa
rcrl
adc
mov
inc
stos
mov
mov
dec
arpl
cmpsb
mov
adc
mov
scas
jnp
mov
inc
inc
mov
jnp
cmp
sbb
adc
mov
inc
dec
mov
cmp
and
cli
mov
jne
mov
xchg
testb
xchg
ss
or
and
lret
mov
xor
fiadds
divl
addr16
jl
imul
fsubs
xchg
xchg
jnp
cmc
cltd
xlat
pop
stos
scas
test
test
xchg
pop
ja
cmp
add
xor
cwtl
sub
and
add
cltd
int
inc
icebp
lret
push
mov
fsubrs
sbb
sahf
mov
xchg
mov
fwait
adc
dec
aas
dec
fadd
sub
pop
sbb
or
in
in
mov
aaa
cli
imul
mov
fdivp
mov
adc
sbb
cli
jp
int
mov
outsl
pop
sbb
and
cmp
cmpsl
or
jmp
lahf
cmpb
ret
cltd
lock
sub
cli
jne
dec
mov
jle
fwait
out
mov
xchg
call
mov
push
mov
inc
ret
outsl
push
jbe
mov
and
cwtl
test
dec
mov
sti
gs
insl
vmread
jl,pt
cli
mov
and
arpl
test
push
filds
jecxz
mov
ret
xor
loope
gs
bnd
dec
mov
aaa
xchg
popf
cmpsb
fmull
mov
into
idivb
mov
test
xchg
xlat
jbe
sahf
xchg
mov
dec
dec
rcrl
pusha
mov
add
adc
stos
pop
mov
cvtdq2ps
outsl
insb
flds
imul
xor
out
mov
xor
int3
xlat
stc
lds
ss
jp
add
in
loopne
mov
sub
popa
icebp
mov
xlat
stc
mov
int3
cmp
stos
cs
sub
popf
leave
inc
or
sbb
clc
sub
push
mov
and
cmp
insb
jb
mov
sbb
test
enter
cwtl
jmp
inc
mov
xorl
push
imul
mov
repz
call
cli
icebp
mov
xor
pop
in
jge
js
mov
jo
pop
inc
stos
and
mov
mov
ja
icebp
sbb
mov
xchg
pop
lahf
mov
movsl
ret
or
jp
popf
idivl
xchg
add
stos
add
push
pusha
mov
pop
shll
mov
mov
xchg
test
push
sbb
jae
mov
and
mov
stos
rcrb
jnp
out
mov
jne
jno
inc
subb
push
mov
mov
sub
insb
inc
stos
mov
test
pop
scas
xor
es
inc
mov
mov
adc
xchg
fs
shrl
pop
addr16
cltd
mov
cmpsl
pop
and
stos
or
pushf
and
lahf
shll
test
add
fs
cltd
rep
out
mov
jbe
sub
jns
data16
stos
or
xchg
out
cmpsl
or
icebp
sbb
lret
aaa
jo
mov
xor
xchg
jmp
mov
mov
jo
sub
xchg
dec
cmpsl
or
hlt
pushf
mov
mov
jnp
cwtl
add
mov
sbb
add
imul
xchg
mov
hlt
fsubs
sub
pop
ret
jmp
ficoml
imul
lret
xchg
add
mov
mov
fsubl
jbe
gs
cmp
adc
popl
cmpsl
mov
mov
arpl
sbb
inc
and
test
aaa
xor
jmp
sub
jge
cld
add
mov
mov
das
cli
mov
jns
dec
movsb
pop
cmp
xor
and
and
lds
jl
sti
mov
mov
mov
js
mov
test
icebp
xor
inc
scas
jecxz
pop
push
outsl
dec
mov
jae
xor
jp
sbb
out
lods
scas
cmp
add
bound
sub
jg
lahf
jae
into
popa
fdivs
mov
cmp
xor
movsl
mov
or
push
adcb
mov
movsb
pushf
dec
dec
sbb
sarb
pop
cltd
test
popa
test
mov
enter
push
lea
sbb
push
notl
push
mov
mov
sbb
xchg
imul
cmp
sbb
pop
mov
jae
push
je
jl
repnz
pop
repz
mov
push
into
test
gs
stc
cmp
pop
mov
std
icebp
pop
jge
mov
lods
xor
push
sbb
adc
jge
dec
scas
fidivrl
inc
mov
popf
mov
insl
sub
xlat
dec
mov
and
lahf
mov
pop
push
je
movsl
xchg
testl
cmc
mov
mov
cmpsb
pop
icebp
sub
jp
or
mov
lcall
or
mov
cltd
daa
fsubrs
mov
sbb
fidivrl
fwait
in
sub
and
jmp
mov
fbld
lods
sbb
mov
ds
xchg
outsb
fists
jno
dec
es
mov
mov
pop
lods
bts
jp
xchg
and
xlat
dec
movsb
sub
test
shlb
data16
mul
push
clc
or
insl
stos
mov
pop
push
mov
push
jnp
jb
mov
xchg
mov
popf
lcall
jg
inc
and
xor
bound
dec
or
ja
icebp
jns
mov
add
xchg
and
call
decb
mov
das
popa
mov
sti
hlt
sbbb
or
jl
inc
aam
je
inc
fimuls
pop
push
nop
inc
cmp
jae
mov
mov
inc
or
pop
xor
nop
mov
movsl
sub
dec
sbbl
and
ljmp
pop
fstpt
mov
mov
add
mov
mov
icebp
cmp
shlb
ret
inc
movsb
or
mov
sbb
int
shll
cmpsl
xor
push
cmp
pop
js
jbe
stc
arpl
loopne
mov
mov
addl
push
inc
mov
in
sub
xchg
xor
hlt
inc
cmp
sbb
jae
xor
das
mov
or
cwtl
or
popa
ds
pop
pop
sbb
mov
mov
xlat
jne
and
mov
mov
je
pushf
push
ficompl
insl
and
sbb
jmp
stc
pop
sub
pop
mov
inc
push
lock
mov
testb
pop
ljmp
arpl
imul
push
dec
mov
xchg
ss
icebp
jecxz
xchg
mov
xchg
cmpsl
fwait
mov
mov
lock
push
lret
xor
and
add
lods
divb
fnstenv
inc
adc
test
stos
xchg
out
jge
cmp
aas
test
inc
mov
add
mov
popa
jge
lock
mov
mov
lcall
mov
pop
sbb
imul
mov
fsub
sub
jno
inc
int
cld
xchg
jge
jb
push
mov
aas
in
lods
mov
xchg
add
mov
fwait
jge
cli
mov
push
sub
pop
inc
mov
stos
movl
sbb
div
push
ret
mov
cwtl
lret
or
push
test
arpl
mov
rcrb
lock
arpl
pop
movsl
int3
inc
je
imul
dec
cmp
sub
aaa
and
lret
daa
loope
xor
push
mov
mov
mov
xor
cmp
or
add
add
ret
xlat
mov
pop
aas
icebp
insl
pushf
movsl
mov
lods
pop
xchg
das
inc
mov
adc
jae
pop
pop
cmpsl
test
in
mov
mov
shl
xchg
mov
subl
cmp
fdivl
push
jle
xchg
mov
addr16
fdivrs
out
push
stos
icebp
add
mov
lods
enter
bound
mov
sub
sbb
mov
lods
hlt
fnsave
jno
dec
sbbb
cmpsl
jns
cwtl
lret
mov
push
sbb
scas
xchg
pcmpeqd
outsb
jnp
mul
lret
mov
int3
mov
cmpsl
sub
push
mov
pop
mov
lea
mov
into
adc
push
xchg
lds
movsl
mov
leave
xlat
scas
enter
jns
push
test
mov
xchg
sbb
or
and
test
jns
mov
jecxz
cmp
inc
mov
pop
insb
ret
mov
push
mov
arpl
pop
movsl
mov
cmp
jne
xor
popa
mov
fisubrs
loopne
out
lahf
pop
mov
dec
xchg
into
test
pop
sub
icebp
mov
dec
xlat
pop
add
mov
add
je
fwait
sbb
inc
mov
addr16
mov
imul
pop
mov
inc
sub
ss
sbb
mov
pop
mov
rep
sahf
leave
inc
mov
not
xor
jne
jbe
xlat
fldln2
ret
xor
sbb
cmpsb
dec
jo
mov
dec
daa
push
cmp
sbb
pop
les
mov
jl
inc
ficomps
mov
fs
cld
lock
cmp
cmp
dec
jl
inc
mov
fs
call
mov
mov
lods
lcall
xchg
mov
and
arpl
pop
mov
xchg
xchg
mov
gs
and
and
cltd
fisubl
mov
mov
sub
shlb
shll
mov
add
xor
cltd
fadds
mov
jae
test
xchg
xchg
xchg
push
std
inc
mov
ljmp
mov
cmp
dec
pusha
imull
cwtl
inc
and
jns
sub
jb
mov
mov
push
call
ss
mov
and
xor
repnz
in
fwait
mov
fs
jmp
addr16
dec
repnz
jmp
fdivrl
jbe
jo
mov
push
addr16
mov
mov
mov
cmp
xchg
cmpsl
pop
adc
mov
loop
or
cltd
lret
cmpsl
int3
stos
push
mov
xchg
or
outsl
jbe
popf
sub
mov
or
push
mov
das
push
les
bound
sahf
test
sbb
in
sub
pop
mov
push
dec
jae
sbb
jno
pop
mov
data16
jb
mov
mov
mov
sbb
pop
pop
mov
cmpsl
pop
cmp
mov
mov
and
pop
mov
roll
push
cmpb
insl
mov
mov
in
mov
adcl
xor
les
je
mov
jae
pcmpgtw
int
fwait
sbb
sub
pop
pushf
sti
cwtl
loop
sub
sbb
mov
aas
loopnew
jnp
mov
cwtl
pop
fdivp
jg
ret
ja
mov
xchg
jno
imul
arpl
and
pop
stc
push
mov
movsl
clc
cmp
shlb
shrl
fmulp
mov
addr16
mov
insb
adc
mov
sub
mov
dec
cmpsl
testb
arpl
gs
jmp
mov
cmp
or
xchg
ficoml
jp
mov
daa
sub
cmp
fisubl
cli
mov
fldt
mov
pop
push
daa
arpl
mov
movups
dec
ret
mov
cltd
movsb
inc
in
int
adc
das
loopne
xlat
xor
ljmp
mov
lcall
sbb
mov
xchg
dec
mov
mov
test
sahf
push
xlat
mov
sbb
scas
xor
mov
push
std
adc
xlat
addb
dec
mov
cwtl
mov
test
push
push
jbe
mov
scas
mov
cwtl
lahf
xor
dec
aas
sbb
cmp
jp
movsl
or
mov
inc
and
rclb
out
test
mov
pop
add
cmc
push
nop
dec
xlat
sub
loop
dec
mov
xor
int
xlat
mov
shll
xor
cmp
push
dec
imul
lods
loopne
pop
xlat
fs
xchg
hlt
scas
mov
jbe
mov
fdivl
in
mov
es
adc
pop
cmp
mov
mov
cwtl
xchg
icebp
push
cmp
mov
stos
cmp
and
mov
adc
repz
fsub
push
inc
mov
das
cmp
cmpsl
pop
mov
mov
mov
pop
leave
mov
idivb
pop
mov
popf
inc
cwtl
adcb
jne
mov
add
xchg
mov
scas
sub
fbstp
fldenv
adc
jg
mov
imul
jbe
mov
test
xchg
dec
add
aaa
inc
mov
xchg
mov
jg
mov
test
lods
and
fwait
fwait
testl
jns
sbbl
cmpsl
add
sbb
je
lahf
jns
aad
mov
xchg
jp
dec
iret
sub
cmpsl
cltd
jae
ficompl
scas
and
pop
loop
pop
out
shlb
cmpsl
add
popf
mov
pop
out
xchg
dec
cwtl
movb
sub
mov
inc
loop
cmp
mov
int
sbb
and
pushf
mov
ret
enter
xorb
adc
sahf
add
int
addr16
pop
cmc
cltd
divb
push
stos
sbb
add
aam
test
xor
pop
jbe
stos
inc
out
xchg
rol
loop
rolb
cwtl
mov
popa
addr16
stc
jnp
sub
fwait
mov
mov
xchg
mov
mov
mov
stos
dec
xor
fnstcw
or
add
and
scas
inc
cmpsl
cltd
adc
xor
fcoml
pushl
xchg
mov
call
jne
popa
sbb
and
xchg
mov
out
aam
cmc
lock
push
aad
mov
dec
adc
fiaddl
sar
mov
mov
imul
ja
js
pop
mov
cmp
sub
js
sbbl
inc
popa
scas
fcomp
imul
rorl
stos
jns
mov
mulb
pusha
mov
imul
fmul
mov
adc
inc
lods
add
mov
add
stos
sbb
fadds
cwtl
and
fildl
addr16
sbb
push
cwtl
stc
jp
lods
and
adc
test
clc
outsl
mov
cwtl
mov
hlt
sbb
mov
xchg
aas
jne
rolb
dec
xchg
out
mov
mov
xrelease
mov
nop
std
push
psrad
mov
or
xchg
sbb
xlat
int3
fwait
sbb
dec
flds
out
jl
shl
dec
fcmovb
cmp
out
pop
jecxz
xor
mov
lods
add
inc
ret
call
xchg
mov
pop
out
rcll
jl
cmpsl
push
push
fwait
das
mov
jge
dec
dec
mov
mov
ja
lcall
jne
rolb
shr
and
aas
shlb
das
mov
outsl
adc
mov
lock
xchg
pop
aaa
cs
cltd
subl
cmp
bound
fwait
subb
mov
xlat
xchg
and
popf
repz
push
scas
mov
cmpsl
bound
add
test
sub
pusha
adc
dec
std
xorl
imul
mov
imul
mov
mov
jno
cmp
mov
add
aaa
cmp
dec
sbb
fdiv
ret
inc
test
pop
or
xlat
sub
mov
test
dec
in
repz
mov
inc
je
dec
jo
fnsave
imul
mov
int3
mov
xchg
cmp
cmpsl
jnp
cmp
xchg
jne
adc
and
fdivs
push
xchg
es
pop
mov
mov
and
out
jns
notb
mov
cmp
scas
ds
sub
cmp
mov
lods
sarb
or
jbe
psubw
icebp
ja
xlat
outsb
mov
sbb
dec
xor
lahf
mov
fstl
fwait
adc
lods
mov
sti
mov
fcompl
cld
dec
mov
sbb
add
pusha
insb
aas
aaa
xchg
mov
mov
add
fdivl
ds
mov
mov
adc
je
sbb
cmp
xor
mov
inc
test
fisttpll
test
adc
add
jp
enter
lcall
xlat
push
int3
xor
mov
cmp
test
fdivs
insl
sub
mov
iret
pop
dec
call
loop
repz
aas
mov
arpl
stos
fcompl
rolb
cmp
mov
je
repz
or
rcr
cmp
mov
imul
nop
fmull
pushf
imull
pop
repnz
scas
cmc
mov
cmp
inc
inc
call
jmp
adc
xorl
mov
and
test
xor
xchg
mov
data16
cwtl
scas
pop
daa
test
inc
ficomps
mov
mov
mov
jne
mov
xor
push
mov
or
inc
and
add
jmp
inc
xchg
mov
pop
outsl
jo
add
insb
jge
cmp
push
cmp
xchg
aam
pop
movsb
mov
xchg
int3
jns
sbb
loope
mov
and
fidivl
int
sub
rorb
mov
mov
sahf
sbb
fwait
mov
rcll
mov
mov
mov
adc
mov
sahf
lods
or
loope
outsl
mov
test
roll
and
ljmp
out
and
xchg
jne
dec
dec
xchg
lods
mov
cmc
test
and
sub
mov
out
mov
mov
dec
daa
mov
pop
mov
std
mov
xorl
mov
movsb
mov
inc
testl
movsb
mov
pop
sub
mov
inc
ss
test
mov
frstor
mov
fcoml
fcoms
jb
fcomps
mov
mov
xrelease
lock
mov
pop
pop
mov
mov
das
dec
adc
jns
sbb
add
lods
stos
mov
mov
sarl
or
outsb
mov
mov
sub
mov
insb
imul
ret
test
ljmp
cmc
jl
cwtl
sti
inc
pusha
mov
sbb
mov
andb
js
pusha
xchg
xchg
loop
jle
inc
nop
mov
mov
lods
lahf
cs
mov
fcom
sbb
in
mov
test
mov
add
cmp
mov
xchg
sbb
mov
mov
mov
add
pop
xorb
push
jge
imul
xlat
sbb
std
sarl
jo
sbb
adc
enter
lods
sbb
mov
add
xchg
scas
int
add
imul
dec
mov
mov
sarb
inc
enter
mov
lds
mov
fdivr
inc
jmp
jb
lret
mov
sub
push
lahf
lods
pop
xor
push
adc
mov
and
loope
jo
aaa
pop
sbb
test
lea
xchg
imul
pop
and
sub
xor
fdivs
mov
ret
sbb
data16
fdivr
inc
out
sbb
stos
mov
pop
ja
fsubrs
adc
mov
fsubl
mov
popa
fisubs
loopne
add
mov
cwtl
xchg
mov
arpl
fnstcw
push
dec
xlat
lcall
push
sub
jo
mov
inc
pop
lea
and
cltd
cmp
jmp
mov
adc
loopne
cmp
xor
sub
mov
cmpl
stc
dec
ljmp
imulb
ret
lret
xorb
or
push
sbb
stc
shll
mov
bound
mov
mov
scas
mov
mov
dec
dec
clc
mov
shll
mov
xchg
push
xchg
add
loope
icebp
cs
mov
into
or
push
ja
cli
xchg
push
popa
lahf
jg
sbb
xlat
mov
stc
xchg
loope
aaa
test
xchg
mov
mov
sub
lcall
adc
in
jne
data16
cmc
or
sub
mov
arpl
sahf
jle
repz
mov
mov
add
test
xor
mov
pop
icebp
loopne
mov
imul
roll
fwait
in
cmpsl
push
mov
lock
mov
and
fmuls
fwait
mov
es
in
out
orb
xchg
test
imul
mov
pop
or
push
imul
icebp
jp
and
and
sarl
int3
cmpsl
enter
sbb
or
mov
push
cltd
mov
ljmp
movsb
dec
mov
push
lcall
test
adcb
push
aas
mov
fnstenv
cmp
inc
xor
call
mov
pop
inc
ja
mov
scas
divl
scas
scas
sub
out
add
xchg
dec
int3
jns
xor
aas
mov
test
outsl
cli
mov
sbb
push
dec
inc
ret
jge
dec
sbb
scas
xchg
mov
fsubp
pushf
push
mov
arpl
adc
lret
xor
mov
xchg
sti
xlat
mov
add
movsl
popw
mov
pop
ficoms
repz
xchg
push
setns
xchg
test
outsl
in
inc
cmp
out
scas
adc
cmpb
cmp
push
gs
add
mov
daa
lods
mov
sub
adc
mov
xor
mov
imul
mov
adcl
add
scas
or
mov
sbb
cmpsl
jmp
mov
jae
dec
mov
add
push
popf
add
jns
scas
mov
inc
or
in
and
mov
pushf
mov
movsl
sahf
inc
jno
ret
mov
leave
mov
pop
aas
cmpsl
stos
mov
cli
je
jns
sbbl
shrl
repnz
fnsave
mov
lahf
adc
jae
jp
add
repnz
mov
mov
popf
cs
arpl
stos
adc
fcomps
cmp
mov
mov
sbb
jmp
faddl
mov
add
mov
cmpsl
and
inc
movsb
enter
orb
and
mov
scas
imul
mov
push
in
xchg
scas
dec
mov
fwait
push
mov
and
sbb
mov
xlat
cmp
insb
sub
rol
ljmp
pop
dec
xor
aad
sub
push
out
cwtl
jp
daa
cmp
mov
int
push
int3
mov
jae
xor
jb
push
inc
dec
mov
scas
jns
push
lods
pushf
mov
jno
lds
mulb
mov
mov
jmp
lds
js
cmp
mov
inc
mov
xor
jge
cmpsb
mov
mov
xchg
movsl
mov
gs
mov
cwtl
cli
ja
or
xchg
or
into
xchg
mov
sbb
lods
inc
adc
imul
push
shrl
mov
mov
into
mov
stos
push
jns
mov
mov
test
call
int
out
fs
out
sub
icebp
imul
sbb
arpl
push
mov
or
mov
mov
pusha
lods
je
sbb
sub
xlat
ljmp
push
mov
mov
mov
mov
stos
fmul
mov
sahf
sbb
faddl
adc
lea
adc
addl
mov
sbb
jbe
xchg
cld
stos
cld
mov
xchg
arpl
loope
std
adc
jo
mov
nop
rcll
xchg
test
clc
mov
mov
mov
sarl
addl
lret
jnp
mov
mov
cmp
push
int3
jnp
mov
sub
jle
popf
shll
mov
xlat
cwtl
std
lcall
out
xorb
in
fcompl
icebp
clc
mov
push
jae
push
mov
repnz
adc
push
sbbl
mov
popa
lcall
mov
nop
cltd
mov
adc
mov
gs
fsubs
cmp
popa
fisubl
cwtl
mov
push
mov
mov
jno
jb
je
stos
jne
push
jecxz
mov
inc
js
bound
adc
shrl
pusha
and
mov
cwtl
imul
xchg
pop
xor
and
adc
test
sbb
lods
test
out
sbb
je
mov
xchg
test
les
mov
add
mov
xlat
outsb
aad
lahf
loop
lret
mov
stos
or
nop
push
gs
add
adc
mov
xchg
and
mov
cs
pop
fwait
ret
and
mov
aam
xor
test
mov
imul
movsl
cmp
push
mov
dec
insb
push
pop
adc
popf
insl
xor
bound
mov
sub
movzwl
shl
mov
mov
jae
sbb
sub
jno
jl
push
gs
adc
inc
jne
dec
test
cmp
sbbl
sbb
jge
jbe
int3
xchg
shrb
xchg
mov
push
inc
xlat
int3
cs
xor
mov
xor
push
stos
push
sub
loop
incb
test
arpl
ret
mov
xchg
js
dec
mov
xor
push
push
fdivs
test
cltd
add
icebp
and
cmpl
mov
lret
iret
xor
aas
adc
aaa
jae
cmp
mov
cltd
or
jb
mov
pop
mov
popf
outsl
jle
mov
sbb
enter
divl
jg
lahf
xchg
mov
mov
mov
daa
and
sbb
pop
mov
jae
and
cmp
xchg
sbb
divl
mov
mov
jp
imul
loop
xlat
pop
lds
xchg
xchg
mov
daa
cmpsb
and
sarb
or
inc
cmp
negl
test
sbb
xchg
mov
into
or
sub
cmpsl
pop
fmull
stos
cltd
scas
imul
jae
arpl
cmp
add
stos
fmull
jae
loopne
lock
outsb
cwtl
dec
and
iret
ss
mov
mov
movsl
mov
cli
mov
pushf
and
jp
int3
sub
imul
fisubl
into
dec
add
jne
stc
cmp
xor
jo
les
xchg
mov
jb
sub
stos
sarb
fidivrs
mov
cwtl
mov
sbb
sub
mov
lcall
out
ja
divl
add
sub
cmp
test
push
idivl
xor
mov
mov
jmp
arpl
icebp
in
xorb
mov
sbb
xchg
call
das
mov
mov
dec
sbb
push
test
cmpsl
or
ja
mov
xchg
jecxz
scas
mov
insb
fwait
mov
out
xchg
pop
jge
cltd
test
test
push
mov
pop
and
out
and
mov
shl
iret
jg
lret
xchg
dec
mov
xchg
jnp
cmp
or
xchg
sub
cmpsl
jbe
sarl
mov
lods
sub
popa
jp
mov
mov
xlat
imul
neg
dec
fidivl
sub
stos
dec
andl
or
pop
aad
mov
jae
mov
pop
test
stos
xchg
push
push
or
fwait
imul
bound
shll
jnp
pusha
jge
repnz
adc
jns
sub
xchg
add
dec
adc
xor
test
sub
cmp
cmp
ret
jmp
fwait
mov
aas
mov
stos
mov
xchg
outsl
test
mov
fbstp
repz
dec
jne
mov
out
jns
sbb
cmp
cmpsl
aam
scas
imul
sar
lock
repz
mov
cltd
dec
or
fistpl
repnz
inc
xchg
daa
mull
mov
xlat
movsb
into
mov
scas
mov
mov
pop
inc
adc
icebp
jg
sahf
sbb
fwait
cmp
into
xchg
mov
fiaddl
iret
sti
jnp
pop
iret
xor
cs
or
lret
and
incb
and
repz
lahf
fwait
dec
data16
jge
and
idivl
sbb
pop
dec
cltd
outsb
or
scas
int3
cli
xchg
mov
or
and
rclb
es
mull
int3
scas
adc
xchg
push
repz
fcomip
mov
cltd
cmpsl
imul
fcomps
mov
mov
cmpsl
jb
repnz
aam
repz
and
cmovle
mov
mov
sbb
gs
repz
int3
pop
shll
fdiv
jmp
fxch
pop
or
pop
sub
mov
jg
mov
xor
loope
mov
dec
es
aas
fs
add
popa
in
lds
mov
daa
mov
xor
xchg
inc
jo
mov
int
cmpsb
into
jl
movsb
jecxz
out
pop
add
nop
mov
pushf
mov
fistpl
icebp
lahf
jmp
xchg
xor
scas
and
test
mov
aas
jnp
jge
scas
lahf
jae
xchg
int
jbe
sti
arpl
mov
fistpl
fmuls
push
jbe
sbb
and
pop
fs
xor
dec
cwtl
imulb
mov
sbb
mov
sbb
outsl
ret
mov
jecxz
and
sbb
or
xchg
mov
mov
mov
xor
addr16
push
mov
adc
cmpsl
movsl
cmp
test
mov
mov
ja
jnp
lods
xor
dec
out
scas
movsb
lock
dec
cmpsl
mul
xor
xorb
xchg
aad
mov
imul
mov
mov
int3
mov
pop
enter
insb
and
call
out
stos
sub
scas
ret
xor
mov
movsl
es
scas
sub
lods
sub
jae
and
mov
movsl
sbb
pop
sub
dec
xchg
dec
add
je
mov
mov
mov
les
dec
mov
pop
fidivrs
mov
repnz
icebp
js
add
cmp
aad
ret
cmp
scas
add
mov
rolb
iret
aas
mov
cmpsl
ljmp
push
xchg
mov
scas
fidivs
sub
enter
pop
mov
pushf
popa
lock
sub
ljmp
xchg
repnz
mov
jmp
sbb
je
imul
mov
std
mov
dec
test
mov
dec
inc
stos
lret
jg
xorl
roll
add
dec
mov
mov
fwait
imul
and
lahf
std
adc
xchg
fcom
into
rclb
xchg
or
inc
mov
mov
ret
lea
fimull
shrl
pop
mov
jp
mov
xor
pop
xchg
lds
xlat
cmpsl
clc
sbbl
aaa
mov
mov
imul
ret
mov
jg
cmpsl
dec
jp
inc
aaa
hlt
mov
adc
ficoml
mov
jae
inc
sarb
stc
mov
mov
push
mov
jg
fwait
xor
hlt
and
lahf
dec
dec
mov
and
push
cltd
inc
imul
shll
mov
lcall
std
cmpsl
sarb
xlat
push
cwtl
mov
stos
cli
movsb
mov
aaa
xchg
jge
cmp
mov
add
fisubl
shr
cmpsl
iret
add
mov
pop
mov
sub
les
insl
imul
addr16
mov
daa
mov
xchg
sbb
movsl
scas
xchg
jno
arpl
mov
mov
ljmp
ds
and
divl
or
stc
xlat
mov
mov
fidivrl
fdivrl
mov
je
aam
std
int3
xchg
mov
sbb
cmp
daa
movsb
iret
test
mov
push
mov
pop
mov
roll
xor
inc
ja
pop
sbb
push
sbb
push
mov
mov
mov
mov
aaa
and
jbe
into
in
mov
pop
arpl
inc
loop
lahf
addr16
jns
jne
fnstenv
cmp
jbe
movsb
xchg
pop
movsl
xor
cmpsb
jne
test
frstor
mov
pusha
icebp
cmp
mov
xor
test
jp
fsubs
or
popa
dec
ja
sbb
pop
pop
mov
mov
out
pop
faddl
xlat
lcall
pop
jns
aad
jmp
add
test
cwtl
mov
pop
add
pop
sti
lahf
cmp
mov
fcmove
cmp
shl
rcrb
mov
test
dec
jmp
insb
mov
daa
pop
mov
jge
addr16
mov
mov
insl
add
mov
dec
ficoms
fiaddl
fwait
insl
xchg
in
cltd
mov
xchg
pop
das
mov
loopne
push
mov
xor
pop
or
sub
push
jno
clc
repnz
pop
add
xchg
push
sub
pop
pop
mov
mov
shll
arpl
xlat
icebp
in
repz
stos
mov
lea
mov
pop
pop
gs
xchg
scas
push
adc
add
sbb
mov
lds
xor
inc
xlat
insb
xchg
clc
pop
lock
jo
stos
gs
and
cmp
arpl
cmpsl
test
pop
mov
daa
mov
divl
in
test
mov
mov
test
add
sbbl
ss
jbe
mov
iret
mov
xchg
jo
arpl
and
cmp
mov
out
adc
mov
pushf
mov
ss
fwait
add
shrb
imul
inc
mov
pop
negl
and
mov
cmc
das
xor
sbb
js
jns
pop
sub
add
das
mov
negb
mov
push
adc
icebp
mov
mov
mov
mov
shlb
mov
fsubp
mov
bound
sub
sub
test
icebp
loopne
test
lahf
mov
or
arpl
fcompl
mov
repz
xchg
or
mov
mov
and
jecxz
add
push
movsb
lret
inc
enter
mov
jae
lods
mov
mov
lea
mov
sbb
sub
test
fidivrs
push
movsl
pop
es
movq
cmpl
mov
mov
insb
jmp
mov
mov
push
gs
mov
xchg
push
and
mov
jne
insl
mov
add
inc
mov
pop
or
xchg
shll
into
add
mov
jecxz
mov
mov
or
stos
inc
outsl
push
mov
sub
sbb
lods
bound
mov
iret
insb
or
mov
movsl
icebp
pop
pop
sbb
jle
or
cmpsl
sub
mov
jne
test
cmp
mov
jnp
xchg
mov
xor
insl
push
jae
stos
mov
xchg
stos
mov
xchg
push
jge
add
push
mov
lahf
es
mov
fmull
inc
inc
jmp
mov
or
cmp
insl
xlat
xchg
shlb
add
icebp
test
mov
inc
sub
pop
mov
cmpsl
fisubl
ss
lcall
aad
inc
mov
insl
jge
mov
mov
pop
js
push
fsubl
xor
mov
mov
pop
test
inc
mov
cld
and
mov
cmp
sub
inc
xor
scas
jl
pop
icebp
dec
inc
inc
pop
lea
jecxz
mov
cmp
cmpsl
fcompl
sub
or
add
or
movsl
aaa
cmp
jbe
inc
xchg
adc
in
mov
add
cmpsl
pop
das
adc
not
mov
xchg
sbb
dec
mov
nop
addr16
daa
insl
xor
cwtl
adc
dec
pushf
test
fistpll
stc
mov
adc
cmpsl
daa
out
mov
pop
jp
mov
into
loope
fidivs
add
fwait
mov
fs
ljmp
cwtl
or
mov
lret
sub
sbb
into
bound
cmpsl
jno
or
xchg
stos
mov
pop
imulb
cmp
inc
push
into
ja
test
setg
mov
std
add
outsl
das
xchg
cmp
jnp
mov
gs
jo
pop
fnstenv
xchg
mov
mov
movsl
stos
sbb
pop
sbb
mov
sarb
stos
pop
lods
mov
pusha
mov
outsb
adc
loope
push
xor
insb
adcl
inc
mov
sub
dec
mov
repz
inc
mov
call
xor
aaa
sbb
insb
mov
mov
xor
jl
into
fbld
fidivs
in
lret
add
mov
lcall
dec
imul
jae
xor
mov
and
inc
xlat
pop
fdivr
into
mov
out
icebp
outsl
xor
stc
sbb
dec
push
add
mov
cmp
cltd
lar
rcr
cmp
in
idivl
into
in
jno
jge
daa
fucomi
mov
bound
inc
and
xlat
xor
jp
popa
cmp
mov
mov
rcrb
sub
pop
pop
lock
mov
mov
mov
sbb
cmc
inc
shrl
fdiv
push
jnp
sub
cmp
xchg
icebp
mov
mov
out
cmpsl
stos
and
iret
sbb
popf
cli
mov
lds
fwait
and
mov
repnz
mov
dec
push
cltd
cmpsl
sbb
outsb
js
mov
lods
and
pop
movsb
das
and
pushf
shll
cltd
test
dec
xor
xor
repnz
dec
xorl
cmp
mov
cmpsl
xchg
jl
pop
mov
cmp
das
sbb
pushf
out
mov
repz
xor
jb
inc
pop
push
lcall
mov
pushfw
jne
sub
push
jmp
xlat
subb
shlb
xchg
cmpsl
decb
mov
ss
fdivrl
push
mov
das
push
sub
and
in
fwait
icebp
cli
xor
adc
out
sbb
pop
in
popa
xchg
cmp
jp
dec
dec
cmp
les
sbb
mov
add
nop
and
divl
cmp
lret
push
dec
mov
mov
pop
inc
push
call
xorb
rep
out
jb
mov
mov
aaa
or
rcll
ja
aas
push
fidivl
movsl
cs
inc
pop
push
mov
and
mov
int3
pop
cmp
xor
sub
xchg
aaa
subl
test
shlb
inc
mov
or
iret
mov
sarb
iret
ret
lods
lods
xlat
test
push
gs
lods
into
xchg
mov
ljmp
test
mov
and
popf
mov
imul
adc
mov
mov
nop
insl
into
cmp
ja,pn
out
gs
ss
pop
dec
add
mov
scas
push
sub
insl
mov
fwait
into
mov
push
pop
lret
xor
clc
lret
mov
sub
shll
or
jge
mov
xchg
xchg
test
mov
mov
movsl
stos
cmp
test
mov
add
inc
mov
sbb
xchg
xchg
cmpsb
cmp
repnz
cmc
aaa
scas
popa
mov
stc
shrl
jmp
or
fbstp
xlat
xchg
pop
pop
shl
cmp
scas
jno
and
jne
popf
inc
xchg
xchg
mov
mov
ja
mov
subl
add
mov
clc
cmp
fidivrl
test
cmpsl
mov
push
jnp
iret
mov
inc
push
or
sarl
adc
popf
aaa
daa
mov
sbb
test
inc
repnz
in
lods
scas
mov
es
icebp
or
je
mov
cmp
xor
inc
ja
or
mov
push
jnp
movsb
icebp
cltd
push
sbb
pop
outsb
cli
mov
and
cmpsl
sahf
inc
xchg
sbb
sub
test
mov
mov
bound
mov
mov
shll
test
inc
mov
scas
cltd
outsl
mov
and
fucomi
mov
fisubl
mov
push
push
sbb
mov
add
jb
dec
pop
mov
scas
mov
cmp
xorl
popf
mov
mov
jnp
and
iret
icebp
jl
push
lock
pusha
push
dec
dec
jae
mov
arpl
xchg
push
icebp
stos
mov
vmovdqa
cli
cwtl
repnz
clc
mov
lahf
into
ret
shlb
jbe
out
cltd
lea
mov
stos
lods
call
mov
sbb
stc
in
inc
mov
mov
shll
mov
lods
sbb
out
xor
mov
das
mov
adc
fwait
test
mov
gs
jne
or
orl
mov
cmp
ja
dec
mov
jmp
daa
mov
imul
mov
aaa
hlt
or
sbbb
push
cli
push
popa
jb
stos
addr16
xchg
repnz
inc
mov
add
mov
scas
jne
add
jnp
xchg
pop
push
out
cmp
mov
test
ret
rorb
add
mov
push
mov
mov
push
or
mov
inc
imulb
cwtl
stos
mov
pop
mov
mov
and
mov
sbb
jno
andl
xchg
pop
and
xor
inc
es
mov
add
ds
stc
mov
int3
rorl
sarb
cmp
xorb
pop
or
imul
pop
scas
mov
inc
or
jb
fadd
cmp
dec
fidivs
mov
cli
xlat
mov
fisubs
pop
bnd
aaa
scas
jns
or
inc
mov
jmp
loop
jg
enter
shll
sub
mov
xor
inc
lahf
mov
adc
movsl
addb
lods
inc
sbb
or
push
cli
or
pop
adc
lahf
xchg
arpl
lods
push
cmc
mov
addr16
pop
mov
mov
cmpsb
adc
mov
add
insb
mov
inc
cmp
or
scas
mov
dec
les
test
sbb
js
cwtl
dec
mov
and
inc
fucomip
rcl
mov
xor
inc
pop
mov
mov
sbb
aad
mov
jg
shl
sub
or
adc
icebp
scas
sbb
xchg
bound
fwait
mov
fdivrl
sbb
mov
add
sub
jns
fisttpl
cmpsl
stos
dec
test
fsubs
daa
xorb
mov
push
pop
jb
push
lcall
cmpsl
push
cmp
pop
das
mov
mov
test
cmpsl
std
or
mov
sbbb
test
test
stos
pop
or
addr16
or
mov
mov
scas
mulb
mov
xchg
cld
xchg
lods
int3
mov
mov
out
lahf
lahf
sbb
cmp
pusha
cmp
and
xor
mov
lds
sub
insb
out
xchg
push
mov
lods
cmpsb
stc
mov
lcall
mov
mov
jmp
repnz
das
adc
shll
addr16
dec
sbb
mov
cmp
mov
mov
pop
cld
test
jne
lods
outsb
sub
mov
jns
scas
push
sbb
push
xchg
jg
test
inc
fdivl
jmp
icebp
jge
sbb
cwtl
aam
and
sbb
rorl
mov
mov
sub
aam
xchg
jbe
mov
fs
push
sbb
insl
or
xchg
mov
cmp
xlat
lods
or
aaa
pop
jnp
xchg
jge
aas
and
xchg
outsb
inc
mov
mov
mov
lds
lods
inc
xchg
clc
scas
in
jmp
jo
mov
test
add
hlt
and
jbe
scas
or
or
stc
movsl
es
xchg
imul
nop
inc
push
and
repz
shr
lret
aad
gs
push
push
cwtl
sub
js
cs
cli
iret
xchg
insb
mov
pop
add
adc
stc
shll
push
sub
fidivl
push
shll
ficoms
mov
pop
ljmp
xor
and
ja
fwait
lods
adc
mov
push
and
jp
ret
mov
mov
push
inc
mov
xchg
jg
xorb
xlat
mov
add
cmp
stos
repnz
ljmp
adc
fwait
aad
adc
cltd
fwait
pop
out
mov
pop
lds
stos
aaa
stos
ret
mov
mov
fwait
dec
addr16
into
or
stos
movsl
pushf
mov
sbb
push
push
scas
arpl
xchg
arpl
dec
push
xchg
jle
mov
xchg
add
xchg
aaa
adc
xor
adc
out
mov
mov
mov
gs
popa
and
pop
xchg
jg
test
push
aas
and
idiv
stos
and
jge
dec
leave
xlat
rcll
int3
movsl
jns
mov
add
xchg
push
mov
sub
sub
xlat
fwait
gs
mov
pop
mov
cmp
sbb
lds
loope
xor
cli
popa
cmpsl
rorl
add
ret
xchg
iret
mov
cmp
sub
mov
mov
mov
cmpsb
loopne
xchg
imul
mov
add
lods
shl
jne
dec
mov
or
lahf
daa
jge
movsl
mov
sbb
xorb
push
xchg
mov
jns
fiaddl
add
mov
lea
out
mov
xorb
lcall
in
dec
sbb
lods
jns
sub
outsl
fstl
ja
jp
pop
mov
into
push
or
fdivl
jge
sahf
mov
pop
mov
in
add
sbb
xchg
popf
mov
bt
lret
inc
repz
mov
es
nop
sbb
mov
mov
add
push
cli
sti
mov
xor
jl
pop
and
sbb
imul
icebp
push
lods
popa
scas
xor
cwtl
xchg
ljmp
mov
ret
mov
int
dec
mov
push
cli
xor
repnz
sbb
inc
sub
pop
cli
mov
stos
mov
lret
sbb
cli
leave
fistl
lret
or
int
cmp
ljmp
jge
add
jno
mov
jae
mov
mov
mov
daa
repz
ret
shll
inc
enter
lret
sbb
xor
cmpsl
mov
mov
nop
push
sbb
cmp
push
jae
roll
mov
scas
add
popa
into
push
mov
xor
xchg
xchg
aad
jle
mov
mov
je
add
cltd
sub
shrl
mov
popf
xlat
fdivrs
movsb
sbb
das
xor
daa
add
jnp
loope
cmpsl
sub
pop
mov
dec
mov
out
fdivrl
in
dec
daa
idivb
cltd
fnstenv
test
lea
test
lcall
loopne,pn
adc
mov
les
and
inc
sub
jl
stos
or
dec
loop
jo
cmp
push
fcmovnu
pop
shlb
cmpsl
pop
cmp
mov
cmp
mov
pop
inc
jge
xlat
mov
test
ljmp
mov
cli
arpl
iret
jp
mov
inc
sbb
leave
mov
sbb
jnp
cwtl
into
xchg
pusha
cmp
sbb
mov
xorb
adc
into
pop
jnp
cmpl
adc
cmpsl
adc
ds
pop
popa
imul
and
mov
bound
scas
mov
add
ljmp
sbb
push
inc
mov
fistl
sub
popa
orl
imul
mov
cmp
pop
aaa
cwtl
popf
lds
add
mov
out
idivb
mov
popa
inc
ret
mov
cmpl
mov
mov
fs
mov
mov
and
notb
daa
or
test
mov
lods
push
rol
push
arpl
jns
cmc
mov
and
jns
fiaddl
push
shll
jle
mov
sub
mov
mov
mov
push
sub
out
mov
xchg
scas
imul
pop
sub
das
gs
push
xchg
aas
sahf
scas
dec
pop
cmp
dec
shrb
jo
dec
icebp
jnp
sub
xor
stos
imul
sbb
scas
lea
fnstcw
cmp
cmp
mov
xor
andb
pop
mov
add
ljmp
nop
loope
mov
jmp
jne
frstor
cmp
sbb
jl
add
frstor
sti
inc
mov
jp
inc
mov
mov
cmp
mov
mov
outsb
mov
jbe
push
ficoms
inc
fdivl
out
test
repz
xor
test
mov
mov
mov
add
mov
xchg
jle
cmp
jmp
adc
mov
jno
cmp
mov
mov
cmp
cmpsl
and
xor
fdivrs
push
cltd
arpl
push
lock
nop
sbb
lcall
or
add
movsl
jnp
iret
push
mov
mov
movsb
scas
mov
mov
nop
int
lahf
cli
and
cmpsl
cmpsb
or
adc
aas
or
pop
sarb
xor
mov
xlat
xchg
push
pop
jae
das
aad
sub
xor
push
mov
aaa
test
mov
push
push
iret
push
ret
scas
fs
mov
mov
inc
cmpsl
dec
hlt
pop
pop
shrb
and
idivl
sbb
cld
fisubrl
gs
mov
mov
rorb
lcall
and
push
les
pop
bound
mov
fisubrl
cmp
mov
jbe
sbb
mov
xor
test
jle
popf
push
ss
lea
jno
sbb
addr16
cmp
push
mov
test
jnp
xor
insb
aas
andl
xlat
pop
sar
push
mov
popf
sbb
nop
stos
sbb
or
push
or
bound
or
sub
adc
sbb
mov
xchg
sbb
sarb
hlt
add
adc
or
test
cmp
cmp
test
sbb
xor
or
mov
pusha
cwtl
push
jno
fldenv
mov
or
std
bound
and
add
iret
mov
or
mov
dec
mov
ucomiss
data16
xchg
xor
adc
test
lock
test
sub
add
xchg
sbb
icebp
push
xlat
bound
shlb
mov
jge
jae
dec
mov
mov
mov
jp
mov
lret
ds
iret
outsl
into
inc
cmp
adcl
nop
daa
addb
xor
popf
roll
sbbl
mov
fdivs
lds
push
mov
in
cltd
jmp
xor
stos
mov
cltd
mov
adc
es
xor
shll
mov
es
or
mov
subl
mov
ds
and
push
aad
mov
sub
jg
in
xorb
cld
hlt
xchg
mov
xchg
movaps
mov
mov
sbb
lcall
mov
sbb
mov
mov
sbb
sub
or
or
mov
cmpsl
jle
arpl
sbb
mov
nop
cmp
jge
lahf
inc
notl
cmp
or
push
gs
cmp
jbe
in
dec
std
fwait
xor
pop
not
adc
mov
push
xchg
mov
inc
sub
clc
dec
imul
or
cwtl
lock
testb
repz
ret
or
xchg
jg
mov
inc
mov
and
adc
cltd
mov
mov
xchg
mov
aas
inc
or
dec
jl
mov
inc
push
add
and
fstpl
push
sub
loopne
jmp
inc
and
mov
lea
daa
es
div
daa
pop
xlat
shrl
jmp
mov
out
mov
pop
and
jnp
sti
enter
loop
cwtl
bound
jbe
mov
cmpsb
cmovnp
cmp
mov
dec
mov
imul
jnp
sub
out
ja
sbb
sbbb
sbb
cmp
loopne
aam
pop
fidivl
stos
pop
test
ret
pop
cli
mov
fistpl
icebp
lods
cmpsl
xchg
mov
jne
inc
xchg
sbb
push
testb
and
loope
sbb
jmp
daa
movsl
pop
ja
pop
sub
jb
int3
jp
cmp
sbbb
push
xor
inc
mov
jg
pop
mov
out
cltd
mov
ret
sub
shll
popa
push
cli
push
insl
mov
xchg
cmp
mov
mov
cmp
lret
mov
adc
cltd
mov
mov
add
inc
lcall
inc
jp
adc
add
arpl
lods
in
mov
sbb
jmp
scas
jle
mov
mov
xchg
pop
pop
jbe
and
enter
push
popa
xchg
andl
mov
inc
mov
js
mov
xchg
and
les
and
mov
mov
or
dec
jno
mov
or
test
mov
gs
dec
mov
add
mov
mov
push
mov
daa
mov
fmull
aad
mov
or
add
xor
dec
nop
fidivl
xchg
mov
inc
loopne
mov
lea
cmp
and
ds
daa
mov
xor
or
jmp
jns
jo
insb
push
fxch
cmpsl
and
xchg
mov
adc
mov
mov
cmpsl
jle
mov
push
cmp
int
mov
sbb
pushf
fnstsw
xchg
mov
adc
pop
mov
mov
push
ficomps
aas
out
or
and
jg
pushf
mov
insb
in
outsb
mov
icebp
pop
mov
cli
sub
bound
jnp
mov
rcrl
xor
mov
loop
mov
inc
push
mov
jne
dec
repnz
jp
mov
fcompl
test
xlat
sbb
cmc
cmpsb
xchg
mov
xor
xchg
cmp
fisttpll
shll
push
fwait
lcall
sbb
xchg
jnp
add
or
iret
les
mov
cmpsl
push
and
rcll
sbb
add
jo
dec
clc
fdivl
test
sub
mov
imul
cs
mov
mov
mov
dec
dec
cmp
or
rcll
jne
ja
push
lahf
lret
adc
mov
cwtl
loopne
push
inc
divb
jge
gs
cltd
cli
mov
testb
mov
loop
test
cmp
fidivs
cmpsl
cli
jge
iret
mov
test
lods
test
inc
pop
cli
mov
popf
sbb
dec
add
mov
jp
sbb
mov
xor
sub
sub
jns
mov
mov
cmpsl
xchg
dec
aaa
inc
xorl
lret
fiadds
and
popa
fdivl
adc
cmpsl
arpl
inc
test
icebp
int
cmpsl
and
lret
lcall
popa
pop
cld
push
inc
cmp
das
jmp
jge
push
imul
adc
sysexit
xchg
lods
cwtl
nop
ds
xor
mov
pop
or
pusha
mov
movsl
and
ss
xor
mov
xchg
fsubrs
pop
movsb
loopne
jg
lods
gs
lahf
adc
fadd
xor
out
cmpsl
sti
addl
orl
adc
movsl
fdivs
dec
push
and
popa
pop
das
aaa
not
or
jp
pop
add
cld
leave
mov
mov
andb
adc
std
xorl
mov
mov
dec
lahf
and
out
jnp
dec
popf
inc
push
mov
cld
cmp
jae
fsubrl
mov
push
rcrl
scas
repnz
mov
pop
in
cmpsl
xchg
repz
adc
daa
cmp
pop
jecxz
mov
inc
cmc
ljmp
imul
cmp
and
cmp
test
les
pop
inc
cmpsl
scas
and
mov
out
roll
cltd
rep
push
mov
add
arpl
sbb
int3
test
fwait
aad
mov
mov
mov
xchg
xor
adc
out
mov
fwait
subl
aaa
push
pop
leave
cmp
scas
ja
addr16
jbe
ret
mov
mov
sub
xchg
mov
bound
push
cli
or
mov
mov
jnp
sub
mov
mov
dec
das
int
sbb
sbb
xchg
into
add
aaa
or
mov
pop
test
stc
add
mov
fdivl
add
out
push
sahf
xlat
popa
mov
adc
mov
mov
cmpsl
ljmp
int
mov
mov
inc
sbb
mov
xchg
fsub
mov
inc
stos
dec
lock
xor
pop
mov
insb
aaa
in
scas
push
push
mov
xchg
rolb
pop
mov
sbb
fwait
loop
cwtl
movzwl
pusha
sbb
loopne
fs
movsb
test
mov
lods
mov
movsl
dec
jae
fidivrs
adc
ret
mov
adc
in
fistpl
add
lods
mov
adc
lock
xchg
idivb
jg
jge
into
pop
repz
mov
icebp
inc
lea
or
pop
cwtl
inc
pop
loope
xlat
ss
xchg
mov
roll
cmp
sub
jge
mov
mov
loop
mov
mov
mov
mov
or
xor
or
xor
dec
jmp
jns
aaa
cs
sub
push
fidivrs
icebp
jbe
or
test
leave
mov
sbb
cmp
jg
push
cmpsl
icebp
lcall
xchg
adc
xchg
sub
pop
test
fsub
rcrb
fdivs
ljmp
xor
mov
test
test
aas
subl
mov
xchg
lds
and
lods
jnp
pop
cmp
iret
mov
cmp
mov
in
cmp
fisttpl
cmp
and
xor
and
arpl
mov
icebp
mov
xchg
lods
movsl
repz
push
scas
xlat
xor
lea
lcall
mov
loop
mov
mov
frstor
xchg
ret
pop
aad
add
aad
jg
mov
iret
stc
mov
out
jae
shll
les
xor
in
into
test
jno
jns
fwait
cmp
mov
mov
mov
pcmpeqd
mov
sbb
add
inc
and
cs
and
fdivrs
mov
les
rorb
popa
mov
pop
mov
or
adc
jge
test
jmp
rorl
mov
or
cmp
movsl
mov
ret
mov
sub
xor
std
sub
lods
dec
sub
fcmovu
mov
sub
xor
fists
or
les
lods
ljmp
mov
rdtsc
xchg
jnp
or
mov
test
xchg
pop
data16
sub
inc
ds
inc
mov
and
jne
mov
mov
mov
pop
xchg
jecxz
adc
mov
aad
cmp
or
pop
push
inc
mov
jmp
xor
cltd
and
push
xor
fwait
ret
cmpsl
xor
mov
fbld
mov
and
mov
mov
testl
fwait
xchg
mov
pop
cmpsl
jp
sbb
stc
jae
mov
out
jnp
xchg
mov
pop
xlat
andb
mov
and
mov
rolb
mov
dec
ja
adc
movsb
int
jecxz
mov
lods
dec
je
mov
push
sub
arpl
mov
cmpsb
gs
mov
xchg
aad
inc
out
mov
push
dec
cmpsl
mov
out
sbb
jmp
fistl
mov
in
mov
in
bound
sbbb
popa
int3
and
call
daa
mov
push
out
mov
lret
in
jp
add
mov
lret
fbstp
nop
dec
pop
push
fidivl
sub
mov
pop
jge
inc
add
pop
aad
es
fdivs
push
jg
add
xor
pop
pop
jge
stos
aam
xchg
cmp
add
into
xlat
push
cwtl
add
ss
and
inc
mov
mov
and
dec
inc
mov
and
push
mov
cmpsl
xchg
fimull
cmpsb
ss
mov
sbb
fwait
cmp
arpl
data16
setae
mov
addl
mov
out
jns
sub
jns
dec
fdiv
jno
mov
fldl2e
lahf
mov
or
das
pop
std
mov
gs
lods
mov
sahf
mov
enter
jno
mov
adc
add
lret
test
xor
jecxz
in
add
mov
and
cmp
dec
mov
push
je
pushf
cmpsl
pop
xchg
mov
mov
test
loop
dec
cmp
mov
xchg
fcompl
xor
mov
mov
out
and
scas
jecxz
push
mov
jge
cwtl
mov
sbb
mov
icebp
pop
addr16
addr16
pop
rolb
sbb
cmc
inc
mov
jg
loopne
call
out
and
cmp
iret
stos
lahf
cwtl
sbb
sbb
pop
insb
clc
xchg
popa
fidivl
out
cmp
and
subl
test
lock
out
mov
test
fcmovb
dec
mov
aaa
lret
mov
jle
and
cmpsl
mov
push
stc
mov
mov
fwait
dec
xchg
jno
mov
sbb
jo
sub
sahf
cmp
pusha
push
std
loopne
dec
mov
pop
mov
sbb
adc
inc
lcall
mov
mov
ds
mov
jnp
sbb
xor
mov
mov
fs
fwait
testl
sbb
jne
stos
out
aaa
les
aad
xchg
out
jae
divb
or
mov
stos
sti
or
rcll
mov
mov
mov
scas
es
movsb
jbe
lret
stc
scas
imul
cltd
mov
jbe
daa
inc
mov
jmp
sbb
and
adc
mov
int3
out
jns
and
add
mov
imul
pop
scas
inc
out
mov
scas
jge
in
adc
adc
movsl
and
xchg
lock
daa
mov
add
enter
loopne
xorb
mov
aad
jg
push
xlat
daa
out
addb
xor
mov
jp
mov
mov
sub
jns
dec
xchg
sub
sub
add
out
cmp
lods
stos
rolb
mov
movsl
mov
jl
mov
lret
je
mov
stos
jmp
mov
iret
add
lds
dec
pop
pop
xor
pop
jnp
inc
scas
cwtl
jge
lahf
shld
loope
sbb
popa
add
mov
mov
jecxz
jae
mov
popf
jnp
cmp
mov
into
hlt
aas
and
cwtl
mov
out
test
mov
lds
jnp
dec
loop
test
or
imul
add
or
mov
loop
mov
lret
iret
xor
add
mov
pop
mov
mov
mov
lret
fisubl
cmpl
sub
mov
xchg
fwait
jns
insl
jne
scas
es
cmp
pop
mov
movsb
and
add
push
aaa
fcmove
fwait
push
test
outsb
sahf
js
mov
aaa
adc
xlat
adc
sahf
mov
mov
int
cmpsl
cltd
inc
push
test
adc
in
repnz
jno
fcompl
int3
cltd
inc
push
daa
and
lcall
and
xor
jnp
fsub
xchg
add
mov
fisttps
jnp
push
jge
sbb
cmp
repnz
js
jp
mov
or
mov
cmp
ror
xorl
mov
rcrl
fcompl
mov
mov
sti
mov
notl
or
out
loop
push
aad
jns
mov
push
pop
add
cmpsl
lret
inc
arpl
sbb
in
gs
enter
and
dec
dec
lds
pop
leave
pop
xor
movsb
scas
mov
jns
jecxz
cmp
mov
pop
in
push
pop
fmulp
cmpsl
jg
enter
xor
adc
ja
out
mov
mov
scas
sbb
mov
sbb
mov
xchg
mov
rol
mov
insl
push
mov
sub
aaa
pop
push
xchg
pop
mov
pop
xor
dec
int
jmp
enter
cld
das
outsl
mov
mov
insl
ret
leave
xchg
mov
push
dec
jmp
jae
mov
imul
ds
test
int
jl
mov
pop
mov
leave
mov
in
ja
arpl
push
and
and
clc
sub
mov
xchg
xchg
pop
shrl
out
xlat
sbb
mov
mov
lods
mov
out
xchg
mov
mov
cs
fistl
jl
xchg
in
pop
mov
fbstp
jne
jle
test
mov
jnp
aam
mov
sub
push
fwait
icebp
add
sub
or
sti
insb
ss
dec
cmpsl
add
rcrb
lods
stos
cmpsb
push
xchg
into
mov
leave
test
repz
insl
mov
fxtract
jp
jae
nop
cltd
testl
push
push
mov
out
xchg
mov
cmpsl
arpl
inc
mov
dec
es
cltd
mov
push
and
mov
mov
loopne
and
aas
pusha
aam
sbbl
mov
loope
mov
mov
xor
jl
mov
or
pop
and
or
jp
jae
lods
lock
add
adc
push
and
lret
fwait
insl
sub
loopne
fwait
inc
stos
addr16
mov
jmp
mov
mov
bound
jge
repz
lods
pop
mov
movsb
adc
push
mov
icebp
cmp
mov
es
mov
mov
outsl
push
pop
stos
mov
jne
mov
fs
test
imul
mov
stc
and
xor
test
insb
sub
adc
pop
fs
mov
imul
mov
mov
leave
mov
movsb
inc
stos
shlb
arpl
xor
cli
xchg
pop
cmp
and
jge
lret
push
mov
mov
adc
inc
xchg
sbb
jno
int
cmp
mov
lock
insl
idiv
lods
push
mov
lret
decb
icebp
xchg
mov
nop
loop
sub
xor
mov
fsubl
je
or
popf
ret
mov
movhps
inc
in
jne
or
jbe
rolb
andl
mov
and
fistl
xlat
loopne
out
in
sbb
sbb
pop
scas
fdiv
jo
jl
arpl
adc
mov
imul
mov
sar
pop
xchg
or
fs
pop
cmp
or
jne
mov
iret
dec
movsl
mov
bound
cltd
push
add
push
inc
mov
test
pop
and
xor
daa
sahf
fwait
lahf
pop
aad
mov
mov
and
nop
and
data16
and
push
pop
mov
cwtl
adc
dec
cmc
insl
mov
cmpsl
int3
adc
shlb
jns
jnp
xchg
stos
mov
xorb
mov
or
or
pop
loopne
inc
xor
xor
or
push
xorb
push
insl
fcmovnbe
mov
mov
mov
fmul
cmpsb
loop
adc
rorb
ret
pop
sbbl
out
pop
and
cmp
sahf
mov
es
ror
sub
push
insl
scas
mov
cmp
mov
xor
outsl
pop
sub
fst
cmpsl
aaa
ficoml
sbb
adc
int3
mov
inc
cmp
xor
fcoml
pop
shlb
xchg
mov
xor
mov
fstpl
gs
jg
sahf
or
mov
scas
outsb
dec
mov
lock
jo
shl
push
xchg
jnp
jle
imul
sti
cli
frstor
jl
sarl
ficomps
pop
stos
adcl
addr16
xchg
fcoms
cmc
shll
adc
into
jp
js
mov
mov
pusha
fistpl
gs
je
xor
cmp
insl
and
jb
sub
or
mov
es
pop
negb
lods
out
add
lea
mov
cmp
xchg
sbb
push
cltd
mov
test
mov
fstps
mov
inc
int3
pop
pop
mov
mov
inc
mov
lcall
mov
insb
add
mov
aas
dec
jne
mov
dec
push
adc
mov
push
push
mov
cli
es
stos
std
fnstcw
or
xlat
mov
jae
xor
mov
ljmp
mov
cmpsb
fsubrl
clc
daa
mov
push
mov
sbbl
mov
shlb
cmp
jp
xchg
cmp
mov
jl
push
out
and
sbb
jb
adc
mov
shlb
popf
out
std
daa
push
fcmovu
mov
sbb
fidivl
inc
popa
push
mov
imul
pop
add
cmp
jp
push
sti
pop
pop
pop
xlat
mov
dec
mov
xlat
pop
addl
aad
outsl
mov
mov
xor
mov
xor
pop
cwtl
fcomps
ljmp
inc
aas
mov
xchg
cmp
cmpsb
mov
daa
adc
shlb
stos
jecxz
mov
inc
repnz
lds
negb
mov
mov
xor
sub
mov
mov
je
mov
xor
jns
dec
jge
jg
jae
fisttpll
mov
stos
scas
mov
xchg
into
data16
sbb
mov
cvtdq2ps
jnp
in
mov
add
and
cmp
mov
int
test
inc
imul
sbbl
mov
mov
xchg
jns
add
fisubl
pop
or
fwait
mov
mov
and
push
cltd
movsb
jnp
mov
cmp
inc
jmp
test
push
repz
lret
xlat
sbb
mov
mov
popf
out
push
xlat
in
and
fsubs
jne
mov
add
mov
incb
sarb
push
scas
cmpsb
pop
hlt
fnsave
sub
icebp
jno
pop
test
dec
mov
dec
adc
cmpsb
xchg
push
ret
xchg
das
dec
mov
dec
adc
or
xchg
xor
or
aaa
pop
sbb
lods
cli
jmp
mov
add
aam
sbb
sub
call
popa
mov
repz
push
ja
or
insl
fimull
sbb
xlat
fs
sti
push
loope
arpl
mov
inc
not
sbb
cmp
test
mov
fsubrs
stos
cwtl
add
in
xchg
imul
fisubrs
shll
cmp
movsl
pop
mov
out
int3
xchg
inc
fcmovnb
mov
sub
imul
js
fwait
movsb
faddl
adc
pop
sub
inc
daa
out
repnz
dec
xchg
cmp
xchg
nop
mov
cwtl
shrb
mov
jg
pop
pop
or
fisubrl
mov
cld
cmp
addr16
sbb
outsl
mov
push
lcall
jmp
leave
cmpsl
xchg
mov
cli
adc
xor
mov
pop
sbb
lds
inc
bound
das
mov
mov
in
cmp
js
or
roll
or
mov
pushf
mov
mov
shlb
movsl
pop
mov
aas
cltd
scas
mov
fstps
cmp
cmp
xchg
repnz
xor
sbb
mov
fisttpll
add
or
jbe
ja
popa
jge
cld
or
jmp
mov
add
call
sbb
aas
push
cmp
fwait
pop
stos
cwtl
jbe
mov
mov
xchg
scas
push
xchg
pop
and
mov
enter
add
sbb
sbb
out
push
inc
mov
cli
jp
xchg
jns
into
mov
daa
bound
sub
cmp
xlat
pop
cmp
mov
in
jp
leave
mov
mov
sbb
lds
xchg
movsl
mov
outsl
add
xor
mov
mov
das
push
mov
cmp
cwtl
lea
loope
push
dec
xchg
popf
xor
addr16
mov
cwtl
popa
in
faddl
int
and
out
jae
shlb
sbb
decb
mov
ss
push
mov
mov
add
xlat
out
add
inc
inc
test
repz
ret
and
sbb
lds
mov
in
loope
ret
cwtl
mov
test
clc
push
dec
adc
xor
mov
arpl
mov
stos
repz
leave
pop
xchg
xor
mul
mov
ds
mov
jp
jnp
sbb
std
mov
pop
jo
fs
push
out
sbb
xchg
mov
adc
add
jg
out
js
arpl
xchg
xlat
xchg
jmp
pushf
fwait
mov
cmp
fdivs
xchg
jge
mov
mov
xchg
mov
inc
xor
pop
push
out
scas
or
mov
jge
cwtl
outsw
xchg
cmpsl
or
mov
sbb
pop
mov
fidivl
fdivrs
mov
lds
call
mov
in
shll
dec
mov
movsb
sub
add
mov
add
jae
xchg
mov
or
pop
fbld
repnz
ret
iret
sbb
mov
sub
inc
lods
icebp
mov
fwait
mov
mov
shrb
cmpsl
test
filds
mov
pop
push
and
cmpsb
fcmovu
outsb
mov
mov
sar
sbb
fisttpl
ret
adc
mov
sub
push
mov
xchg
cltd
pop
sub
mov
dec
mov
les
lods
outsl
clc
adc
mov
fistl
sub
and
jp
fs
or
sahf
pop
inc
mov
jno
cmp
gs
sbb
cli
mov
addr16
psrld
cltd
mov
andl
sbbl
cmp
xlat
cwtl
pop
rolb
sbb
mov
mov
cmpsl
icebp
dec
push
mov
test
popa
mov
lcall
cs
pop
push
mov
xchg
push
cmp
scas
sbb
or
iret
mov
fucom
inc
xor
and
cwtl
jo
add
popa
cmp
insb
add
scas
dec
jg
push
mov
inc
mov
xchg
cmp
andl
popa
outsl
sbbb
stos
stos
mov
sahf
insl
aaa
inc
addr16
icebp
jne
sbb
cmp
rcr
rol
shll
pop
push
leave
or
mov
loope
mov
addr16
mov
scas
mov
and
call
aas
mov
push
mov
sub
sub
cwtl
sbb
dec
rolb
stc
aad
xlat
sbb
cmp
xchg
mov
push
xchg
test
push
repz
sbb
xchg
and
mov
xorb
dec
mov
fs
cmpsl
sbb
mov
inc
xchg
adc
xor
or
in
mov
ret
out
scas
ljmp
push
fdivs
mov
xchg
mov
mov
popa
cmpsl
subl
cli
aad
scas
adc
add
test
add
mov
stc
in
push
add
std
xchg
mov
mov
je
lcall
stos
mov
sub
xchg
lret
mov
adc
mov
daa
pop
xchg
add
jns
xchg
add
fwait
push
mov
mulb
jmp
cwtl
scas
mov
insb
mov
ljmp
jns
gs
es
icebp
fwait
cmpsl
aad
xlat
jge
mov
dec
sub
mov
xor
mov
jecxz
xor
iret
daa
lret
arpl
into
and
shrl
add
jo
cmc
cmpsl
cwtl
stos
dec
and
test
mov
pop
andl
lcall
pop
mov
lds
testb
xchg
shl
adc
insl
pop
std
out
add
mov
jp
mov
inc
xchg
popf
cmp
jl
stc
nop
mov
or
fcomps
jp
xor
dec
cmpsb
fbld
je
aad
ja
ss
push
fldcw
movsb
mov
mov
dec
cmp
gs
xor
push
fs
push
jle
lcall
sahf
daa
fimull
fdivrl
aaa
jae
xchg
mov
lds
push
mov
add
mov
cmp
mov
mov
and
and
jg
xor
inc
test
jnp
cli
out
sbb
jne
xlat
insb
shll
nop
hlt
aam
jecxz
ja
inc
cmp
mov
mov
inc
insl
jbe
lock
shlb
push
mov
fwait
jns
cmp
loope
into
mov
mov
lods
mov
push
out
repz
or
outsl
js
gs
icebp
push
lock
xor
mov
dec
pop
and
mov
test
sbb
ret
mov
jecxz
lock
cmp
or
fdivs
pop
das
dec
push
jnp
push
addr16
pop
jae
outsb
and
fmull
fsubrp
sbb
testl
xor
pop
cmc
out
je
shll
lods
mov
mov
stc
mov
inc
movsb
loope
and
xchg
cmp
jbe
mov
fs
fsubs
shll
push
push
mov
cmpsb
imul
adc
icebp
inc
testb
pushf
cmp
mov
gs
insl
imul
inc
adc
mov
pop
xor
pop
mov
jne
inc
sahf
cmp
push
xchg
pop
sbb
inc
lods
or
ret
sbb
xor
add
out
cmpsb
add
ja
lods
mov
test
mov
dec
and
push
cltd
jb
mov
xor
scas
mov
and
mov
jb
and
inc
lds
ja
xlat
repz
test
imul
or
pop
vmptrld
arpl
cltd
dec
adc
xchg
mov
fdivs
xlat
cmpsl
insb
in
rol
pop
cmp
enter
sbb
imul
fcmovb
loopne
mov
mov
cltd
ds
int3
stc
xor
add
xor
sbb
fistps
scas
xchg
negb
mov
xchg
xchg
inc
dec
xchg
fnstcw
push
cmp
inc
cwtl
mov
rcll
adc
insl
push
xlat
outsl
jbe
jl
adc
loopne
xlat
cltd
lds
xchg
into
mov
xor
int3
incb
cmpl
icebp
adc
mov
mov
int
lahf
incl
jne
mov
push
mov
aad
frstor
xor
push
int3
jle
mov
dec
xchg
mov
sub
or
fs
adc
cmc
scas
mov
xchg
xchg
xor
divl
push
cmpsl
mov
xor
inc
cmp
movsb
cwtl
cwtl
insl
mov
jle
int
adc
or
mov
sub
inc
sbb
pop
test
xlat
shrb
jno
orb
rcll
add
loope
mov
xor
cmpsb
add
xchg
repz
cmp
xor
add
mov
jnp
push
mov
xor
faddl
and
movsl
icebp
aaa
stos
fwait
push
jbe
ja
mov
mov
xchg
xchg
daa
loope
imul
nop
cmp
mov
inc
mov
cli
mov
xor
push
loopne
lcall
pop
xor
fnsave
mov
xor
pop
sbb
inc
imul
imul
cmp
jmp
sbb
nop
cli
shll
out
ds
inc
std
into
mov
mov
mov
cmpsb
call
stc
lahf
xor
jmp
mov
pop
ret
mov
fdivrs
or
add
rcrl
sbbl
xchg
test
mov
dec
mov
sub
mov
sbb
cmpsl
adc
mov
outsl
or
arpl
jmp
aas
mov
gs
xchg
mov
dec
push
mov
and
bound
mov
test
movsl
scas
inc
gs
mov
and
push
pop
int
push
mov
push
out
sbb
xchg
rolb
push
mov
cmpsl
leave
sbb
je
xchg
mov
scas
xchg
iret
or
sbb
ljmp
mov
mov
push
mov
xlat
mov
stos
mov
popa
mov
inc
and
imul
gs
cld
cli
cmp
insb
and
sub
xor
pop
arpl
add
shlb
add
mov
mov
pop
mov
mov
jmp
sti
stos
mov
xlat
jnp
pop
insl
fisttpll
jno
xchg
adc
add
lock
in
add
or
sbb
push
cmp
fistpl
lds
pop
popf
fucomip
jae
jnp
movsb
mov
enter
push
push
lods
add
sbbl
movsl
inc
jmp
sub
lods
int3
in
mov
lret
iret
and
cwtl
addb
xchg
sbb
mov
daa
sub
sbb
xchg
or
push
icebp
inc
insl
cmpsb
cwtl
sarl
dec
loop
movsb
fimull
and
cmp
jbe
mov
into
push
mov
cmp
sub
mov
repz
mov
jb
mov
jle
lods
stos
fidivs
and
mov
xorl
inc
fstps
sbb
xchg
mov
mov
test
inc
mov
pop
rcl
jecxz
mov
mov
movsb
mov
test
mov
fsubl
ljmp
jecxz
mov
gs
and
jnp
mov
xchg
mov
movsb
stos
xor
loopne
mov
fidivrl
pop
jbe
mov
xor
out
mov
repz
scas
addr16
mov
mov
sbb
mov
jle
cwtl
push
or
addr16
xlat
popa
adc
mov
into
mov
cmpsl
std
movsb
aam
mov
fcompl
rcll
sbb
cli
mov
mov
jmp
scas
cmc
xchg
dec
sbb
push
mov
out
and
inc
cmp
push
sbb
mov
nop
sar
mov
xor
data16
cmpsb
sbb
jmp
das
loopne
mov
mov
dec
or
dec
and
aaa
sub
ljmp
jnp
mov
scas
stos
mov
fwait
clc
popf
test
mov
movsl
sete
bound
stc
fwait
lods
imul
pop
cmp
adc
sbbl
mov
mov
stos
jne
inc
push
data16
and
adcl
sarb
out
mov
daa
mov
mov
stos
testb
dec
and
mov
cltd
sub
ficomps
mov
push
mov
xchg
xchg
sbb
pushf
imul
push
test
add
aad
mov
loop
push
inc
adc
mov
shlb
cld
mov
pop
xorl
ror
or
xlat
lods
xchg
ss
dec
scas
mov
test
xor
lcall
mov
and
and
mov
mov
cmc
adc
dec
test
mov
jnp
push
aam
jns
add
cld
ss
push
aaa
sbb
mov
xchg
int3
aad
imulb
push
add
jge
mov
xor
jnp
popf
mov
mov
sbbb
daa
and
sub
adc
and
loopne
add
popa
jae
mov
aaa
insb
dec
push
jmp
mov
cmp
sub
lret
push
int3
mov
popa
mov
xchg
test
shll
ja
sbb
mov
mov
push
mov
and
dec
or
popa
mov
fidivrs
mov
dec
mov
loopne
mov
mov
adc
outsl
xor
xlat
rclb
inc
mov
inc
sbb
jnp
push
mov
cmp
mov
fistps
mov
ljmp
addr16
push
cs
cmp
push
cmp
sub
aas
popf
mov
mov
in
sbbb
mov
movsl
sub
cmpsl
cmpsl
test
sub
mov
mov
loopne
bound
sbb
and
xlat
out
add
stc
scas
jne
add
lcall
ret
mov
dec
fwait
sbb
cmpsl
ret
test
xchg
loop
movb
movsb
ds
cltd
sahf
xchg
test
divl
mov
cwtl
popf
mov
cmpsl
faddl
and
mov
jo
push
inc
in
fcoml
xor
pop
mov
jl
mov
lock
mov
add
mov
dec
and
mov
or
cmp
fsubrs
sub
mov
and
cmpsl
inc
movsl
push
daa
adc
mov
xchg
push
popf
ja
jge
xor
orl
outsw
mov
sbb
pop
divl
popl
insl
mov
mov
jecxz
cmpsb
test
inc
mov
aam
xor
fdivr
cmp
xchg
js
sbb
testl
dec
cltd
inc
mov
lea
mov
insb
mov
mov
and
shll
sbb
inc
mov
inc
scas
mov
movsl
xor
cmpsl
fwait
inc
xchg
aas
scas
add
imul
and
stos
mov
and
pop
stos
and
sub
pop
sbb
cmpsl
inc
adc
or
mov
mov
mov
mov
xor
mov
cmp
mov
dec
mov
mov
leave
cmp
dec
cmc
mov
inc
mov
pushl
fadd
scas
xchg
mov
es
add
icebp
push
rolb
outsl
rcll
adc
test
nop/reserved
popf
fsubrs
fidivs
lock
pop
aas
add
cli
lahf
jae
push
test
xor
mov
xlat
shrl
inc
lods
mov
fbstp
stc
or
neg
mov
idivl
adc
xchg
in
scas
popf
jnp
into
lahf
mov
adc
mov
mov
push
xor
scas
mov
gs
test
aaa
dec
arpl
jb
lock
orb
cmp
jae
lcall
or
mov
sub
pop
mov
pop
mov
xchg
push
loope
mov
insb
or
sbb
sub
jns
icebp
pusha
or
mov
out
fadd
jnp
sti
je
addb
loop
pop
pushf
insl
popf
stos
pop
ss
push
data16
push
jo
stos
xor
insl
movsb
xor
mov
movsl
movsl
xor
jecxz
or
into
lods
pop
addr16
xor
mov
pop
addl
orl
inc
cmpsb
mov
jnp
xchg
and
pop
push
stos
cmp
pop
cltd
cld
in
xor
inc
cmpsl
icebp
mov
mov
insl
pop
sub
dec
aaa
push
lods
ret
add
pusha
aad
mov
gs
dec
imul
orl
mov
inc
stc
pop
lods
xlat
xchg
mov
mov
push
leave
add
sbb
popa
incl
add
mov
xchg
stc
bnd
lret
pop
mov
mov
adc
xchg
test
and
scas
int
jne
repnz
ja
adcl
xor
mov
and
in
lret
imul
pop
and
fisttpl
add
mov
mov
sbb
ficompl
jb
mov
push
mov
push
mov
jns
xchg
mov
dec
and
lahf
pop
fiaddl
shrl
xlat
and
xchg
mov
add
jns
fcmovbe
dec
ret
arpl
ja
mov
push
lods
scas
pop
outsl
adc
call
scas
mov
pop
sbb
or
push
jg
lods
cmp
mov
fcoml
mov
mov
into
add
and
push
stos
test
aaa
cld
mov
popf
out
daa
jle
das
mov
loop
jge
push
mov
sbb
ja
add
lcall
inc
mov
mov
stc
out
xlat
divl
xchg
xchg
enter
mov
mov
je
or
jg
push
inc
gs
mov
fisubs
mov
push
cltd
popa
or
daa
int
mov
into
and
mov
jno
scas
insl
repz
push
cmpsl
outsl
dec
mov
movsl
ja
int3
mov
or
mov
mov
cmp
dec
loop
mov
out
test
movsl
lcall
adcl
push
test
fdivl
mov
cmp
mov
xor
add
out
pop
pop
std
mov
das
mov
sbb
repnz
pop
mov
jo
mov
in
gs
aas
scas
andb
or
fwait
mov
push
mov
sub
fwait
scas
mov
and
sbb
mov
pop
xchg
andb
addr16
insb
es
add
sbb
add
dec
or
pop
or
pop
mov
sbb
mov
push
dec
mov
or
xchg
mov
divl
lcall
pushf
sub
in
test
jns
inc
std
loopne
out
and
mov
lret
cmpsl
lods
popf
cmp
leave
xor
testb
cmp
jns
scas
shl
pop
push
gs
ret
outsl
das
adc
jns
cltd
add
dec
ficompl
frstor
lcall
cmpsl
fdivrs
je
and
sbb
dec
mov
jne
mov
dec
ret
iret
call
insb
mov
fwait
jns
or
insl
in
add
dec
mov
or
lods
cltd
out
xor
aam
popa
inc
mov
sbb
mov
mov
ds
in
fnstenv
xor
adc
push
sub
sub
jno
inc
or
subl
xlat
mov
or
add
sub
mov
adc
inc
pop
mov
dec
rcrl
push
mov
fcoml
lea
stc
mov
xlat
sbb
subb
fwait
test
push
push
fidivs
mov
loope
sub
popf
and
mov
cwtl
cmp
mov
mov
lret
incb
ds
xor
sub
xlat
into
popa
add
pop
and
xchg
rol
jns
test
cmp
mov
push
rcl
mov
scas
adc
out
push
aam
mov
xchg
and
lcall
stc
xor
imul
mov
and
jp
cmp
sub
or
and
cmp
movsl
inc
mov
push
leave
mov
cltd
sbb
orl
lahf
mov
mov
mul
dec
jno
mov
pop
jnp
das
repz
fidivl
cmp
pop
jns
pop
xchg
mov
sub
sti
nop
jmp
mov
dec
mov
loop
mov
mov
mov
mov
mov
mov
mov
mov
add
insl
adc
popa
dec
sbb
loopne
pop
sub
mov
mov
loope
jb
xor
and
xor
fwait
rolb
xchg
cmp
sub
repnz
mov
bts
push
mov
dec
inc
fwait
mov
aam
in
mov
ljmp
cmpsl
into
mov
xor
dec
pushf
test
inc
aad
jae
fwait
pop
sub
xor
cltd
lret
cli
call
mov
cmc
jl
and
jmp
adc
fst
or
pusha
test
push
mov
mov
mov
loope
mov
push
aam
add
divl
xor
xchg
jecxz
sbb
movsb
movsl
icebp
xchg
mov
outsl
mov
inc
jp
dec
es
xchg
daa
jno
cltd
xor
xlat
lea
xchg
cmpsl
mov
out
jnp
aas
pop
mov
sti
push
ds
or
je
icebp
and
or
mov
lcall
mov
sbb
sub
or
incb
sahf
lret
sub
ficomps
sbb
mov
inc
fcom
add
test
add
cmp
sbb
or
sbb
mov
push
push
inc
leave
or
out
scas
cmpsl
sbb
mov
cltd
jns
fistpll
test
inc
pop
jnp
xor
xor
cmp
or
loope
xchg
mov
cmpl
xchg
sahf
aaa
mov
cmp
push
add
and
hlt
addr16
and
mov
pop
cmp
push
cmpsb
and
lret
mov
inc
mov
arpl
mov
sbb
xlat
test
cmp
icebp
mov
adc
mov
xor
pop
inc
scas
xor
cmp
jnp
sbb
push
std
int3
shlb
sbb
pop
and
outsl
divb
push
xor
inc
ret
lods
xor
xor
and
push
into
test
lahf
push
inc
xlat
jns
and
dec
stos
jns
lret
jns
pop
mov
int3
cmp
dec
sarb
enter
mov
int
cmpsl
rcrl
mov
test
jns
adcb
sub
clc
jecxz
std
mov
outsl
sbb
out
sarl
lds
daa
pop
pop
mov
movsb
int
rorb
jmp
and
test
fildll
add
ja
mov
mov
sbbl
ja
mov
bound
mov
icebp
mov
daa
mov
stos
mov
lret
movsl
out
loope
sub
push
xchg
lahf
sahf
mov
inc
fidivrs
xlat
jmp
mov
test
mov
xor
cltd
lods
rcrl
in
daa
xchg
sbb
mov
test
xor
imull
add
ss
xor
ds
addb
popw
pop
fnstsw
or
xlat
insl
lahf
mov
pop
add
push
mov
adc
adc
jnp
xor
insb
and
mov
cwtl
mov
mov
repnz
cwtl
push
pop
mov
sub
mov
arpl
test
enter
mov
jo
push
and
popf
mov
out
cmp
jae
imull
addr16
cwtl
jbe
adc
mov
add
or
aaa
cmp
faddl
mov
pop
pop
cmp
cmpsl
add
inc
arpl
mov
dec
into
and
jae
shlb
mov
pop
cmpsl
sub
insb
dec
jnp
mov
fisubrl
stos
mov
mov
inc
popa
pop
add
mov
mov
push
icebp
gs
jnp
mov
cmpsb
fsubs
xchg
mov
push
hlt
sbb
repnz
stos
sbb
pop
cmc
jnp
cmpsl
mov
mov
mov
movsl
pop
and
lock
clc
jnp
andb
mov
or
adc
mov
repz
xor
ja
das
shll
test
lret
pop
stos
pushf
mov
out
jg
arpl
fsubs
adc
aaa
pop
push
sahf
inc
mov
js
add
mov
dec
out
mov
xlat
pop
mov
mov
lods
mov
cltd
and
fcompl
dec
push
popa
mov
imul
ja
call
push
mov
or
lret
xlat
push
out
and
mov
daa
daa
popa
daa
xchg
rclb
dec
popf
int
jp
mov
lahf
xchg
xor
daa
jge
iret
mov
call
clc
je
cmp
jmp
sub
push
jne
adc
pop
cmpsl
das
mov
xor
ds
fnsave
pop
mov
jle
add
push
mov
out
stos
fcomps
pop
lods
negb
in
aaa
xor
mov
call
push
cwtl
cwtl
cmpsl
lods
fwait
mov
test
rcll
jge
lods
cltd
addr16
lcall
mov
scas
mov
pop
mov
cmp
mov
fmuls
idivl
aad
sbb
roll
outsb
clc
int
sub
mov
mov
jp
sbb
stc
lret
cltd
push
jne
cmp
push
cmp
adc
and
int3
xchg
enter
dec
int
notl
fimull
jns
fwait
dec
jae
sub
pop
sub
mov
ficomps
ja
mov
stos
adc
adc
shrd
popa
cmp
or
mov
pop
and
fsubl
inc
mov
cmp
fsts
pop
push
sbb
mov
or
mov
arpl
cmp
pop
mov
aas
es
pop
aam
lea
mov
add
not
sub
sbb
mov
xor
sub
repz
mov
jge
sub
mov
add
int3
mov
mulb
add
das
jge
arpl
xchg
mov
mov
and
lret
inc
cmpsl
and
stos
lds
movsl
fwait
sbb
sub
mov
movsb
into
repnz
cltd
fstpl
xor
jbe
lock
jae
mov
ds
ss
jno
dec
xor
rcrl
sub
stc
mov
xor
fldenv
imul
pop
xchg
push
sub
test
and
movsl
xchg
fists
sahf
hlt
mov
dec
fsubs
int3
das
adc
pop
test
mov
mov
shll
sarb
mov
xlat
ret
out
negl
inc
xor
push
xor
into
cmpsl
out
sub
mov
xor
lock
cmp
pop
add
lods
daa
sub
push
in
scas
xchg
ret
out
std
mov
jp
subb
int
ret
jb
int3
mov
xor
xchg
cmp
mov
mov
mov
and
mov
lock
mov
mov
dec
sbb
aad
mov
mov
push
rolb
inc
xor
roll
scas
mov
outsb
and
sub
mov
push
mov
mov
mov
mov
or
lods
int3
or
cs
ret
lahf
dec
sbb
inc
and
mov
stc
adc
fwait
mov
mov
cltd
stos
add
mov
test
xor
mov
mov
xchg
ja
mov
shll
add
scas
mov
fdivl
add
mov
push
jo
jb
mov
sub
mov
inc
mov
xchg
mov
xor
mov
mov
and
les
and
out
add
sub
jae
pop
jecxz
mov
js
xchg
pop
lret
fs
mov
jno
cmp
add
gs
aas
andl
dec
pop
aas
jae
mov
mov
pushf
mov
jne
add
stc
imul
nop
mov
inc
test
dec
es
mov
in
popa
xlat
xor
les
xor
add
insl
or
scas
push
ret
daa
mov
xchg
idivb
les
push
mov
movsb
add
into
xor
dec
pop
cwtl
mov
cmpsl
pushf
mov
insl
ja
repnz
or
mov
lcall
mov
add
xor
add
mov
jl
cmpl
push
ret
cld
fmuls
rcrl
push
sbb
jmp
xchg
lcall
mov
nop
push
adc
jns
mov
mov
insl
cmp
pop
lods
scas
icebp
mov
xchg
adc
test
scas
jno
or
cmp
mov
dec
mov
add
faddl
out
mov
addr16
ficomps
shl
outsl
test
mov
jbe
mov
loopne
icebp
add
mov
cmpsl
mov
fadds
sbb
mov
and
cmp
push
pop
scas
sub
int3
mov
push
mov
mov
mov
xchg
jp
adc
mov
xor
mov
cmp
xor
loope
adc
push
cmp
bound
lret
push
das
dec
mov
cmpl
sbb
sahf
lea
jg
xor
mov
push
or
mov
sbb
popa
test
xchg
add
pop
daa
aas
adc
stos
shll
addr16
fdivs
sub
sbb
mov
jge
scas
pop
mov
addr16
pop
pop
pop
xor
popf
cwtl
daa
add
cli
scas
mov
lods
rcl
mov
cmp
push
pop
loopne
fcomps
adc
cmpsl
sbb
aad
and
mov
or
push
ja
xchg
pop
mov
dec
stos
xchg
xchg
cmp
into
scas
jle
xlat
mov
es
xor
mov
xlat
jns
cltd
ret
fisubs
sbb
repz
cmp
out
mov
dec
and
mov
fs
inc
push
mov
and
jnp
jg
test
add
movsl
bound
or
subb
sub
mov
arpl
in
stos
sbb
mov
mov
sbb
aad
ret
stos
int
fcmovbe
inc
dec
cmp
mov
lods
xor
adc
out
aas
cmpsl
dec
lock
dec
mov
mov
aad
add
lods
pop
mov
xlat
push
je
xchg
mov
jecxz
cltd
fidivrs
cmp
mov
int
mov
gs
rcrl
out
cmpsl
mov
mov
and
mov
enter
add
sub
jnp
cmovg
mov
mov
mov
testl
xor
test
sbb
sbb
mov
xchg
pop
push
push
idivb
fildl
lahf
sub
mov
dec
add
mov
dec
mov
push
pop
inc
inc
fdivl
mov
jl
mov
mov
mov
outsl
jp
repnz
jns
insl
mov
cld
inc
sbbb
xor
xchg
push
mov
cmp
mov
cwtl
aad
jge
lahf
pop
or
cwtl
into
xchg
adcb
pop
or
clc
mov
sub
repnz
jp
rorb
into
sti
cmp
js
clc
mov
push
jns
mov
adc
inc
xor
arpl
mov
and
stos
arpl
pushf
mov
popa
push
mov
jg
push
xor
xchg
ds
pop
mov
jae
or
jno
mov
mov
imul
mov
xor
cwtl
std
and
in
add
fistps
outsb
movl
negb
jo
adc
arpl
mov
xor
ja
jge
aad
inc
mov
mov
sbb
aas
fwait
xlat
push
xchg
dec
mov
gs
and
fmuls
sbb
mov
add
mov
jae
imul
xchg
cwtl
mov
loop
mov
cwtl
lret
popf
mov
icebp
aaa
cli
xchg
loop
jbe
xlat
gs
cmp
mov
adc
int3
scas
repnz
sub
cltd
das
test
mov
lahf
lret
mov
xchg
and
and
daa
pushl
ret
lds
xorl
or
mov
repnz
in
std
mov
sub
inc
loop
fisttpl
xor
xchg
aas
cmp
daa
jle
movsl
add
mov
push
cmp
movsl
add
jno
mov
rcrl
xchg
adc
add
enter
call
ficoml
outsb
scas
inc
mov
push
mov
out
and
aaa
mov
iret
add
mov
adc
mov
shll
and
mov
cld
shrl
xor
es
inc
pop
lret
test
dec
cmpsl
xor
ljmp
addr16
dec
mov
test
jnp,pn
mov
stc
sarb
and
dec
outsl
and
fdivrl
sbb
mov
mov
pop
jg
das
ja
scas
scas
mov
imul
arpl
jl
xchg
repnz
icebp
jae
mov
scas
push
aas
cmc
mov
pop
mov
add
fimull
movsb
xchg
imul
lods
mov
es
adc
loop
int3
mov
or
insl
fwait
xor
mov
mov
cmpsl
in
lea
mov
jae
jmp
xlat
rolb
xchg
xchg
or
mov
pop
mov
jp
mov
adc
jle
adc
imul
mov
pop
push
test
int3
mov
mov
rorb
cmp
loopne
bswap
lods
lahf
sbb
aaa
aas
mov
dec
cltd
adc
movsb
arpl
or
sub
or
jecxz
mov
mov
pop
aad
icebp
loopne
sbb
sub
mov
mov
pop
inc
mov
test
add
or
mov
call
bound
adc
imul
scas
xchg
fwait
leave
scas
pop
arpl
sbb
cmp
mov
sbb
xor
mov
add
repnz
jecxz
adc
mov
sub
loopne
ss
pop
fsubr
mov
cwtl
shll
aaa
loope
divl
and
mov
hlt
int3
adc
stos
mov
xlat
pop
icebp
inc
cmc
xor
shlb
ds
jg
inc
mov
addr16
push
leave
push
insl
sbb
lahf
mov
popf
mov
cwtl
shrl
fnstsw
test
mov
pop
sbb
shll
mov
jle
mov
xchg
mov
pop
loope
adc
jge
mov
movsb
iret
stos
fsubr
sahf
daa
mov
popa
lret
pop
shrb
inc
bound
push
pop
ds
mov
inc
faddl
pop
xor
xor
xor
test
icebp
mov
jo
ret
pushf
and
jnp
inc
mov
leave
mov
inc
cmp
mov
mov
scas
fistpl
mov
aad
je
sub
mov
cmp
inc
int3
mov
mov
test
cld
dec
dec
xchg
mov
or
inc
ds
icebp
imul
mov
or
dec
test
sahf
push
mov
mov
addb
xchg
stos
cmp
lds
jb
scas
jae
inc
std
xorl
cmp
mov
into
mov
push
std
mov
mov
call
icebp
cmpsb
mov
adc
jp
pushf
push
mov
mov
icebp
sbbl
test
cwtl
pop
scas
add
cmpsl
dec
test
and
cwtl
mov
sbb
mov
mov
stc
fisubs
mov
imul
nop
xor
mov
adc
lret
or
sub
test
mov
xchg
cwtl
sti
jbe
xchg
add
push
repnz
add
mov
loop
or
cwtl
fcomps
and
lahf
push
xor
mov
call
jbe
testl
jp
cmpsl
sbb
movsl
cmc
cwtl
lock
loop
test
mov
sbb
fwait
sub
stos
jns
inc
jb
scas
or
dec
imul
push
xor
mov
in
dec
ja
cmp
lods
mov
jecxz
and
pop
cmp
mov
xchg
mov
fwait
shlb
xchg
ds
mov
sub
lods
push
cltd
xchg
gs
lcall
mov
mov
jl
dec
xor
hlt
adc
cltd
mov
jb
lods
lcall
inc
mov
test
aaa
push
cmpsl
cs
pop
outsb
stos
sahf
popf
stc
mov
mov
mov
pop
and
arpl
sub
enter
or
frstor
or
sbb
pop
or
and
enter
pusha
add
cmpsl
xor
mov
fsubrs
inc
mov
repz
loop
stc
pop
stos
icebp
xor
push
fidivl
lcall
dec
into
roll
pop
xlat
repnz
mov
divl
add
sbb
mov
in
xlat
das
or
xor
test
scas
outsb
outsl
mov
xor
mov
out
push
hlt
sarb
sub
out
and
popf
test
stos
pop
mov
repnz
mov
pop
fwait
cmp
pop
loope
ja
movb
or
scas
cmc
setge
or
arpl
sbb
data16
mov
popf
xchg
jle
jecxz
inc
data16
cmp
dec
push
sbb
adc
filds
jb
leave
test
or
add
scas
daa
mov
pop
mov
add
push
cmpsl
mov
cmp
outsb
inc
imul
cmp
push
cmpsl
daa
inc
pop
pushf
fiaddl
jns
or
lahf
sub
mov
mov
mov
test
addr16
arpl
jp
scas
jae
mov
mov
pop
mov
scas
add
mov
outsb
daa
mov
jae
xchg
negb
lret
rcrl
sub
xor
jnp
int3
mov
cwtl
dec
scas
adc
stos
shlb
and
sub
fsubrs
mov
add
int
mov
mov
pop
inc
cltd
data16
mov
jg
jo
insl
xor
xlat
xchg
inc
jb
lds
push
imul
jbe
leave
test
mov
mov
stc
stos
cs
add
lea
cmpsl
aam
mov
aad
arpl
rolb
xor
loopne
stc
scas
lahf
stos
into
cmpsl
fadds
or
dec
and
push
add
mov
shlb
cmc
bound
mov
push
push
mov
inc
mov
stos
pop
push
mov
leave
imul
jns
mov
inc
scas
mov
cltd
mov
or
rolb
mov
push
ljmp
rcrl
repz
fstpt
out
push
mov
sub
jae
daa
sub
shlb
dec
sub
fsubs
into
mov
inc
xor
fwait
inc
ja
mov
mov
es
sbb
cmp
arpl
and
adc
lcall
add
test
call
fmul
or
mov
xchg
push
fdiv
add
lods
lret
mov
test
jo
out
movsb
or
shr
inc
dec
jge
adc
mov
ja
xchg
adc
push
cwtl
add
dec
scas
dec
mov
std
jnp
cmpl
pop
jne
mov
addr16
cli
pop
mov
or
mov
rcrb
rcrl
mov
fcoml
out
mov
call
das
cmp
icebp
pop
dec
push
in
subl
rcl
aas
pop
xor
mov
pop
pusha
es
and
and
rcrl
addl
cmp
jge
jae
dec
mov
mov
shlb
sbb
xlat
pop
icebp
je
mov
lds
fcompl
cmp
repz
cmp
sub
cmp
adc
mov
movl
xlat
mov
pop
or
mov
ret
mov
addr16
pushf
out
mov
adc
mov
mov
sub
or
mov
dec
push
ja
or
mov
cmp
mov
mov
inc
mov
jne
inc
pop
cmp
jns
sbb
hlt
cmp
add
pusha
lahf
lods
shlb
mov
xor
jecxz
add
or
scas
sub
mov
repz
out
sbb
add
mov
sub
or
stos
xchg
imul
call
ficoms
lds
jo
push
cmp
ficoml
sbbb
sub
inc
xlat
ja
jge
lea
mov
fcoml
lods
sbb
cmp
adc
jge
dec
or
pop
xchg
xor
xor
mov
xchg
mov
insb
lret
inc
xchg
pop
pop
arpl
faddl
les
adc
das
xor
fcompl
xchg
dec
gs
xchg
popa
arpl
mov
shrl
sbb
pop
shll
vmaxss
cmp
pop
fwait
mov
inc
mov
mov
mov
data16
xchg
cltd
inc
out
add
lcall
pop
loope
cld
pop
gs
shlb
mov
cmp
imul
xor
ret
in
iret
divb
fdivrl
inc
repnz
add
sub
push
mov
mov
pop
add
scas
inc
insl
mov
testb
imul
adc
sbb
mov
fimull
test
cmp
notl
and
sbb
mov
aam
lods
mov
fmull
leave
xor
and
nopl
adc
movb
insl
loop
icebp
pop
cmp
lcall
ja
mov
icebp
fiadds
mov
xor
js
pop
lahf
jns
and
pop
fs
mov
and
jnp
cmp
dec
das
stos
pop
sarl
add
addr16
xor
mov
mov
aad
xor
mov
std
sub
mov
inc
ret
icebp
xchg
adc
push
into
mov
aaa
push
lock
sbb
rcr
ja
mov
mov
xchg
add
inc
mov
test
jle
cmp
ret
inc
mov
mov
out
jmp
jp
fnstcw
pushf
fdivl
decl
pop
cwtl
add
icebp
pop
jb
clc
mov
inc
test
and
lods
push
in
mov
icebp
outsl
push
setnp
repz
xchg
in
icebp
je
cwtl
andb
jecxz
adc
sub
xor
mov
mov
fsubl
mov
cmp
sub
rorl
push
aaa
cmc
mov
xorb
aas
ljmp
cmp
xor
loop
mov
fs
pop
add
dec
mov
mov
xor
mov
divl
xchg
repz
mov
arpl
pop
sbb
arpl
xlat
test
fnstenv
mov
and
jl
scas
fmuls
jns
pushf
sbb
jno
call
mov
cmpsl
stc
mov
cmc
gs
into
mov
inc
pop
jbe
lcall
push
sbb
dec
inc
nop
jnp
je
pop
adc
loope
mov
add
int
and
or
scas
imulb
imul
mov
andl
pop
nop
shl
adc
inc
cwtl
int3
popa
repnz
es
lock
leave
outsl
out
scas
in
cmp
aad
mov
popa
mov
fsubs
cmp
jecxz
adc
mov
insb
jge
dec
data16
jo
xor
hlt
loop
pop
adc
cmp
in
mov
mov
sbb
mov
test
cli
arpl
negl
sbb
loop
pop
or
mov
das
xchg
aad
adc
lock
lret
xchg
pop
and
adc
pop
jecxz
mov
push
ss
mov
and
pushl
jnp
lahf
icebp
inc
scas
stos
push
xchg
adc
rcl
pop
jge
inc
cmp
jae
adc
imul
mov
adc
mov
int3
repnz
outsb
movntps
test
mov
xor
aaa
pop
scas
ret
out
mov
sub
je
decl
xor
cli
mov
xor
ja
ss
add
leave
jbe
mov
lcall
scas
mov
cwtl
jno
shrb
inc
pushf
mov
stos
cmp
jmp
dec
mov
inc
test
cmp
dec
or
rolb
pop
mov
or
sarb
stos
mov
fcoml
mov
mov
cmp
mov
dec
insl
sbb
cmpsb
fs
pop
jnp
cli
pop
addb
scas
test
mov
fisubrl
sbb
bound
lret
jns
cli
sbb
jno
shlb
cmpsl
aaa
stos
inc
mov
stc
les
cmpsl
dec
mov
dec
mov
mov
inc
xor
adc
sub
pusha
adc
mov
push
inc
in
inc
mov
inc
ja
adc
pop
lods
jp
je
jns
in
mov
xchg
pop
call
pop
pop
pop
cwtl
lahf
mov
in
push
pop
js
cmp
fisubrs
inc
cmpsl
ficoms
lock
cwtl
xchg
inc
xchg
flds
jl,pn
imul
gs
aam
in
shlb
fisubs
mov
cmpsl
mov
mov
add
jmp
out
iret
jne
mov
fdivl
jbe
push
in
push
mov
sbb
push
xchg
aam
aad
int3
or
sahf
mov
push
xchg
imul
fwait
mov
jbe
stc
mov
sbb
mov
inc
push
lods
stos
jno
stos
pop
push
popa
daa
shlb
fists
adc
bound
fs
dec
mov
xchg
leave
mov
pusha
std
mov
xor
es
movsl
inc
sbb
hlt
dec
in
imul
xor
les
gs
mov
adc
insb
inc
xor
popf
ja
mov
inc
lock
mov
inc
stos
rorb
mov
pop
xchg
xor
pop
in
data16
shlb
xor
mov
les
mov
mov
xorl
jo
push
mov
sbb
sbb
jg
ja
lods
fs
jb
mov
xor
jmp
clc
fdivl
je
sbb
out
mov
movsb
mov
popa
sbb
adcl
push
loop
in
mov
cmp
stos
fwait
cltd
pop
xor
add
jns
and
sbb
lcall
leave
nop
cmp
dec
stos
xchg
imul
adc
fadd
xor
jge
aaa
sbb
cmpsl
ds
jnp
and
push
out
add
pop
in
mov
inc
mov
mov
adc
mov
and
inc
jge
sti
add
js
popf
ds
mov
mov
pop
aam
roll
dec
sbb
xor
push
or
nop
xor
adc
sbb
mov
scas
mov
lods
mov
cli
sbb
cltd
sub
int
out
mov
mov
mov
jo
fmull
out
and
sbb
enter
aad
pop
cltd
mov
and
in
jnp
inc
mov
les
and
loopne
daa
mov
repnz
out
loop
fdivl
ficoml
js
pop
dec
sbb
pop
outsl
pop
clc
pushf
cmp
aad
mov
cmpsb
mov
mov
jno
jg
aam
mov
push
jge
jae
sub
pop
cmpsb
jl
or
push
and
xor
and
stos
inc
xchg
cwtl
roll
cmpsl
jbe
xchg
mov
arpl
shlb
imulb
push
push
hlt
sahf
mov
dec
pop
jo
loop
cwtl
mov
push
lds
out
lret
add
daa
call
sbb
adc
fwait
jae
mov
or
mov
cmp
leave
inc
pop
mov
mov
cs
mov
mov
push
mov
add
jae
lahf
test
cltd
andl
xchg
xlat
jge
mov
mov
mov
push
fwait
pop
inc
aas
fnstenv
inc
cmp
fcoms
outsb
clc
lods
fsubr
mov
xchg
daa
jae
enter
cwtl
inc
fidivl
add
stos
test
mov
loop
jl
mov
arpl
lahf
aaa
jp
mov
pop
pop
push
mov
movups
pop
sub
cmp
imul
or
sbb
push
push
mov
out
loop
sbb
mov
cli
cmpsl
jp
int3
and
int
mov
jge
fucomi
xorl
xlat
jecxz
test
mov
xor
sbb
push
mov
xchg
rcl
or
mov
aam
cmpsb
daa
lcall
js
mov
cmp
lcall
test
icebp
out
cltd
pop
push
pop
jne
cmpsl
mov
test
pop
sbb
lds
dec
xchg
cmpsl
push
fdivrl
push
cltd
pop
insl
inc
nop
stos
inc
cmp
xchg
pop
mov
jge
xlat
ds
cmp
imul
cwtl
push
mov
daa
inc
mov
mov
lahf
push
iret
gs
jl
pop
sbb
out
ret
mov
mov
cmc
or
fnstenv
aas
mov
jbe
inc
xchg
push
add
fwait
add
pop
mov
ljmp
jl
mov
shl
sub
mov
pop
fucomp
stos
out
test
lods
insl
mov
fstpl
and
insl
repz
jmp
xor
lret
mov
push
dec
rclb
or
xor
fwait
xchg
xchg
mov
mov
int
mov
add
mov
test
sbb
shll
or
xor
or
xchg
testl
aad
cmp
lahf
ds
cltd
or
jg
jae
pop
cmp
mov
mov
push
and
into
lods
arpl
mov
dec
enter
jp
jnp
jbe
mov
pop
ss
pop
arpl
int3
xorl
mov
jg
sbb
test
or
mov
test
shll
mov
divl
xchg
cmpsl
xchg
stos
cmp
mov
arpl
mov
icebp
cmp
bound
cli
push
cmpsb
sbb
push
dec
xchg
ja
popf
aam
in
lods
or
test
sub
int
sub
fwait
sbb
sti
mov
aaa
xor
lods
rorb
adc
mov
fincstp
xor
xchg
add
out
test
jns
into
sbb
das
mov
push
mov
fwait
aaa
test
mov
push
sbb
into
dec
dec
cmpsl
movsb
mov
outsb
push
and
test
mov
sbb
push
push
inc
popa
mov
adc
cmpsl
mov
imul
cmpw
mov
mov
xchg
test
sbb
mov
cmp
scas
jnp
sti
push
daa
cmpsl
jno
loopne
popf
stos
sub
cwtl
pop
adc
mov
jae
mov
mov
mov
int
sbb
mov
add
cwtl
icebp
pop
sub
mov
dec
pop
je
xlat
sub
add
xor
xor
lret
mov
xor
and
daa
lods
cmpsl
subb
jmp
lret
into
xchg
sbb
lods
or
fidivrs
in
mov
es
xor
cltd
jl
rcr
mov
jns
mov
or
adc
sub
add
mov
dec
jnp
jae
pcmpeqd
repnz
and
mov
sub
test
xlat
push
aas
out
lds
mov
dec
add
mov
jecxz
pusha
stc
sbb
jno
xlat
mov
push
mov
lcall
jl
mov
dec
mov
nop
mov
mov
scas
mov
insb
movsl
jp
sbb
mov
push
test
sbb
inc
sbb
sbb
xor
mov
fcmovnb
sbb
xlat
mov
dec
popf
adc
sahf
xlat
mov
scas
push
mov
jno
xlat
xor
arpl
sub
xor
mov
xchg
lods
mov
lret
scas
test
and
xchg
mov
das
adc
xor
scas
popf
add
pop
jge
in
mov
fisubl
jg
lods
adc
dec
movsl
sahf
mov
xor
test
cmp
fwait
addl
jne
mov
lret
and
mov
xor
xor
jge
mov
mov
jmp
stos
xchg
mov
lds
fdiv
shll
adc
jo
ljmp
mov
enter
pandn
arpl
lret
pop
mov
xchg
cmc
jge
sub
clc
xlat
jecxz
inc
sahf
shl
mov
divb
push
rorl
cs
push
jp
and
mov
mov
sub
js
inc
dec
and
imul
fadds
adc
test
mov
mov
repz
xor
je
iret
lods
jns
dec
les
sub
cmpsl
cmpsl
fwait
cmp
jns
faddl
ds
add
xchg
mov
fadd
sbb
int3
sub
fwait
push
cmpsl
and
popf
roll
add
mov
js
lret
pop
adc
xorb
insl
xchg
push
fwait
jb
bound
jno
mov
sbb
mov
cwtl
add
loope
es
xor
and
int
mov
fcmovu
orl
fdivs
sub
fwait
mov
jbe
cmp
stos
mov
push
mov
pop
or
nop
mov
push
mov
jns
lcall
push
jg
fcomp
and
mov
mov
mov
mov
dec
sahf
nop
xor
inc
fwait
mov
jle
fdivrs
push
rclb
xlat
mov
jne
sbb
mov
or
adc
jl
cli
bnd
call
inc
daa
pop
in
mov
stos
xchg
mov
shll
mov
popf
cmp
pop
xchg
dec
stos
fmull
add
leave
push
mov
mov
std
pop
mov
jae
into
cmpsl
clc
stos
or
daa
sub
cmp
mov
push
mov
loop
cmp
das
pop
scas
inc
sbb
fwait
in
loope
mov
incb
test
dec
mov
jl
xchg
mov
cltd
ljmp
mov
push
xorl
xchg
mov
add
aad
sub
cmp
inc
pushf
js
xor
mov
and
mov
mov
leave
out
add
push
xchg
ficompl
pusha
ja
pop
mov
inc
sbb
fildll
mov
shlb
or
mov
adc
mov
cmp
xlat
jge
xchg
int3
lahf
fists
add
outsb
das
enter
fidivl
scas
and
adcl
idivb
sahf
mov
pop
mov
ficompl
mov
and
add
mov
push
cltd
lret
pop
mov
fbld
or
jecxz
pop
mov
sub
adc
insl
mov
xlat
push
dec
xchg
mov
and
cli
fidivl
bound
divb
jnp
mov
mov
mov
and
addr16
js
fwait
mov
icebp
divl
inc
js
daa
xlat
xor
movsl
loopne
cmpsb
mov
or
sbbb
mov
dec
scas
mov
cmpsl
icebp
in
jl
xlat
mov
pop
xchg
and
mov
mov
movsl
fisubrl
insl
sbb
mov
pop
icebp
int
jg
mov
push
popa
loope
inc
mov
rolb
mov
push
mov
in
push
dec
jns
test
mov
pusha
cmp
imul
js
mov
loopne
ja
pushf
mov
lods
inc
adc
das
lods
loop
in
mov
sahf
inc
rcrl
mov
cwtl
push
aad
cli
mov
mov
jge
mov
cwtl
sbb
or
aam
stos
xchg
pop
clc
icebp
jge
push
aad
test
and
mov
cmpsl
roll
mov
mov
mov
bound
xchg
clc
dec
mov
push
xor
push
mov
mov
icebp
loopne
int3
mov
mov
xlat
or
xchg
sub
push
jnp
mov
imul
daa
cmp
rorb
push
mov
repnz
mov
rolb
mov
dec
mov
mov
scas
mov
and
inc
and
xchg
cmp
loop
lods
mov
nop
fwait
test
mov
xchg
imul
push
xor
fcom
icebp
movsl
xor
xlat
test
mov
mov
ss
mov
aas
jae
xchg
pop
xor
mov
movsb
push
aaa
push
pop
out
jns
fcmovb
enter
loopne
mov
xchg
ja
in
adc
inc
and
jecxz
pop
or
lahf
xchg
data16
iret
inc
xchg
inc
xchg
mov
sbbb
xchg
stos
mov
jae
cmp
gs
mov
les
int3
mov
dec
lods
and
pop
cmp
outsb
outsl
jo
mov
mov
rcrb
mov
testb
jae
shlb
inc
fwait
mov
xchg
push
jg
cmpsl
jo
mov
mov
icebp
bound
fs
mov
xchg
cmpsb
das
mov
idivb
fistps
cmc
mov
xchg
mov
movsl
xchg
adc
idivl
stc
add
pop
mov
test
xor
sarb
add
inc
add
adc
jb
mov
das
sbb
jae
mov
pop
jns
faddl
pop
je
daa
aaa
inc
insl
jnp
iret
mov
imul
mov
jecxz
arpl
orb
lret
mov
jge
imul
cmpsb
mov
cmp
jp
clc
ret
mov
loopne
jecxz
jg
fadd
mov
das
jae
pushf
mov
orb
shlb
xlat
mov
mov
mov
daa
mov
fs
lcall
mov
push
xor
addr16
ljmp
test
add
sbb
scas
cmpsl
out
mov
mul
icebp
cltd
jae
inc
pop
or
or
xchg
in
xchg
orl
xor
gs
es
pop
push
push
mov
iret
rcrb
mov
int3
cmp
pushf
and
push
mov
shlb
cmp
imul
cltd
icebp
cmpsl
sbbb
int
sbb
mov
xorb
jnp
pushf
hlt
or
inc
sbb
cmp
mov
mov
ret
push
imul
pop
mov
inc
adc
ss
pop
xor
cmp
cmp
addr16
and
ja
or
jnp
lods
jne
shl
lcall
clc
insl
sbb
mov
icebp
dec
sub
data16
popa
cmpsl
scas
sahf
fstpl
icebp
push
inc
int
xor
lods
repz
mov
inc
loop
jl
sbb
xor
and
es
jl
xchg
lods
adc
xchg
stc
cmpsb
cmp
dec
pop
sub
ficoml
pop
lret
mov
das
jbe
daa
xchg
lods
mov
push
aas
xor
fadd
bound
mov
out
lret
lea
xchg
mov
xchg
mov
mov
ja
daa
rol
movsb
jge
into
add
test
push
mov
decl
dec
icebp
scas
repz
into
test
xor
stos
test
roll
sbb
ss
jnp
push
out
mov
rcrb
xorl
lods
mov
pop
icebp
test
xchg
add
cmpsl
sub
fidivl
sub
xor
cmp
inc
fwait
xchg
push
cmpsb
fs
and
loope
jp
xor
daa
hlt
popa
mov
cli
scas
pop
add
mov
ret
ljmp
pusha
mov
sub
mov
adc
in
push
mov
mov
cmpsl
pop
out
cmp
push
les
mov
xchg
pop
adc
test
pushf
mov
shlb
sbb
pop
mov
stos
out
dec
pop
xchg
xlat
add
jp
xor
fisttpll
xor
mov
mov
and
in
iret
jae
lock
xor
test
sbb
rcrl
aaa
mov
dec
pop
jl
cmp
jnp
js
cmpsl
cmc
push
push
xor
mov
lods
adc
nop
jnp
mov
es
cwtl
pushf
cmpsl
mov
iret
sbb
mov
fstps
pop
imul
aam
movsl
popf
jmp
mov
mov
shrb
inc
je
mov
and
call
sub
xor
insb
xor
ret
andl
pop
ds
mov
xchg
add
sbb
int
pop
jmp
sbb
iret
test
shrl
stos
and
push
or
xorb
mov
or
cmp
mov
loop
xlat
cltd
adc
lahf
aaa
fadd
pushw
scas
cmc
mov
sbb
mov
add
xchg
daa
lods
mov
xlat
pop
inc
pop
fisubs
mov
and
inc
xchg
popa
adc
mov
and
mov
add
pop
aas
out
pop
mov
rol
lods
sbb
mov
popf
or
pushf
out
jae
outsb
jge
mov
pop
add
and
movsb
mov
stos
pusha
cmpsl
sub
fwait
icebp
mov
xchg
movsl
jp
xchg
daa
xchg
mov
jne
and
mov
pop
xor
sbb
inc
test
cmpsl
mov
pop
sub
sbb
daa
es
xchg
xchg
cmp
sbb
test
mov
xchg
ror
add
or
movsl
jae
cmpsl
test
out
jg
inc
pop
fwait
mov
fcoml
jne
daa
xchg
mov
test
xor
jnp
out
lret
jne
pop
push
inc
or
scas
jae
pop
xorl
mov
cmpb
mov
daa
or
fdivl
push
jne
mov
cmpsb
jae
pop
sbb
fdivrl
nop
loope
aas
adc
cmp
mov
fsubrs
adc
jns
lods
fwait
inc
sub
rcrl
insl
aad
adc
mov
sbb
push
or
push
jecxz
insb
shl
xchg
lea
mov
test
fsubrs
pop
and
je
push
int3
mov
mov
iret
xor
cld
mov
sub
mov
inc
mov
sub
pop
cwtl
rorb
xor
into
mov
push
mov
mov
xor
jl
add
sbb
mov
xchg
push
pop
int3
nop
lret
das
mov
or
mov
divb
cmpsl
cmc
xor
mov
call
fbstp
push
xchg
movsl
fstpl
clc
cmpsl
lods
enter
mov
jl
push
dec
test
icebp
mov
popa
xor
jge
push
insl
movsb
fwait
cmp
mov
subl
jae
movsl
mov
mov
sbb
add
mov
mov
fsub
fwait
fstp
mov
adc
mov
mov
or
mov
and
adc
mov
or
add
xor
cld
test
mov
xlat
aaa
pop
pop
mov
jge
push
mov
pop
ficoml
gs
push
inc
cmpsl
adc
icebp
add
inc
cmpsb
mov
imul
nop
mov
ljmp
inc
mov
cltd
add
and
lock
jnp
pop
mov
mov
jl
movzwl
sub
xor
out
jae
xlat
pop
in
jge
inc
cmc
xor
jnp
cmpsl
and
arpl
outsb
mov
add
push
or
mov
cld
loop
ljmp
icebp
gs
cmpsl
ret
cltd
xlat
jle,pt
or
lcall
and
rorl
stos
or
mov
addr16
xor
cmpsl
inc
cmpsb
add
pop
mov
inc
movsl
lock
setge
add
test
mov
sbbl
push
pop
jo
mov
xor
or
xchg
idiv
out
inc
icebp
rclb
mov
cmp
push
loope
mov
jge
or
mov
xorl
fildll
xlat
cmp
pop
out
jno
mov
mov
mov
cmp
mov
mov
pop
mov
mov
icebp
dec
movsb
stos
cltd
mov
arpl
lock
inc
shrl
pop
pop
dec
out
and
cwtl
loopne
fwait
xor
inc
sbb
push
subl
mov
inc
aas
push
pop
or
mov
stos
repnz
shrb
pop
xlat
jns
fwait
and
pop
cmpsl
subb
movsl
lds
les
outsl
mov
jmp
inc
cmp
xor
sub
ljmp
stos
mov
les
vmovq
outsl
dec
mov
pop
xchg
arpl
movsl
jnp
mov
mov
pushf
adc
mov
mov
and
mov
add
repnz
ljmp
cmp
mov
addl
lods
scas
mov
mov
mov
aaa
outsl
sub
cbtw
loop
test
mov
into
mov
lods
mov
pop
mov
fiadds
pop
mov
lods
inc
imul
cmp
xor
pop
mov
mov
jae
mov
adc
and
xchg
mov
std
insb
js
decl
cmpsb
dec
pop
pop
movsb
pushf
dec
sbb
mov
dec
xor
lcall
inc
pop
push
mov
jne
rorb
das
iret
lahf
stos
inc
mov
and
pop
stos
loope
lahf
cltd
xor
jae
lret
sub
loop
psllq
mov
add
fldenv
icebp
mov
leave
adc
inc
mov
cmp
popf
fwait
test
or
daa
int3
lods
jl
xchg
xchg
divl
add
mov
cwtl
cmp
jnp
int3
nop
xorl
mov
sub
dec
movsl
mov
popa
pop
push
mov
insb
xorl
data16
aad
mov
fcmovu
sti
pop
jbe
sub
add
mov
and
mov
lds
pop
stos
cmp
xlat
xor
jae
and
mov
dec
mov
nop
ds
push
test
outsb
add
repz
or
mov
daa
mov
push
mov
and
mov
sbb
fdivrl
or
pop
ficoms
outsb
mov
jns
dec
lods
into
sbb
lret
fwait
stos
push
sub
push
pushf
jmp
je
and
loope
rcll
out
xlat
fdivrl
push
or
sub
mov
lret
cmp
je
scas
jne
mov
lret
sbb
int
stc
jecxz
sbb
scas
repz
cwtl
test
je
clc
leave
test
mov
movsl
push
ja
sub
mov
dec
mov
pop
mov
mov
mov
cli
and
pop
pop
xor
enter
test
xchg
sarl
jo
jb
int3
dec
mov
inc
mov
pop
mull
cmpsl
mov
xchg
mov
icebp
lods
ja
je
mov
pop
sbb
dec
movsl
sub
mov
xchg
test
icebp
xor
aaa
fadd
sbb
sub
or
lea
jecxz
or
mov
mov
mov
outsl
leave
mov
pop
enter
sbb
and
imul
dec
nop
push
das
shll
adc
xchg
add
fbld
sti
popfw
sbb
dec
mov
adc
mov
mov
icebp
jno
aad
daa
cld
mov
lcall
mov
or
or
jle
mov
sbb
sbb
mov
push
mov
enter
cltd
cmpb
xor
cmpsb
dec
mov
cmp
cmp
mov
ljmp
subl
sbb
addb
sbb
fs
rcl
xor
test
dec
leave
xor
cmp
adc
in
pop
ds
aas
cmp
jp
lock
pop
push
pop
fnstcw
mov
push
lea
js
repz
fsts
fbstp
push
adc
sbb
cmp
movsl
lock
jne
movsb
popa
jmp
mov
inc
sbb
lret
push
sub
ja
std
mov
int
push
dec
mov
push
js
jne
add
xor
xlat
imul
mov
mov
stos
pop
rclb
mov
aam
test
hlt
mov
mov
mov
dec
xor
xorl
and
sbb
scas
pop
fnstenv
mov
test
inc
leave
mov
sbb
mov
aas
pop
cmp
mov
popa
add
pop
mov
xchg
and
sub
or
arpl
push
mov
push
jmp
repnz
cmpsl
in
imul
or
mov
fucomp
int3
mov
shl
dec
fisubrl
loopne
jp
jmp
push
popf
add
int
jns
mov
roll
mov
add
mov
cld
pop
mov
adc
leave
mov
cmp
imul
fcoml
icebp
mull
cmp
rcr
mov
mov
xchg
popa
xor
mov
fadd
mov
jg
out
lret
mov
or
aad
xorb
jo
inc
sbb
out
imul
sub
or
pop
xchg
mov
xchg
jl
adc
mov
push
gs
insl
int3
addr16
mov
mov
sahf
popa
mov
pop
xor
hlt
mov
roll
add
icebp
and
data16
jns
jecxz
lret
mov
bound
and
mov
jp
aad
mov
mov
mov
rcll
dec
sbb
fisubrl
mov
mov
pusha
imul
fldt
mov
sbb
and
add
push
movb
fs
xchg
mov
lods
sbb
or
test
jae
mov
mov
cli
fwait
clc
mov
sub
xchg
mov
xchg
mov
and
mov
mov
add
pop
mov
lock
and
lods
stos
mov
in
pop
inc
loopne
adc
int
inc
jno
aaa
pop
jge
jp
mov
jb
lea
dec
push
add
cmpsl
pop
fwait
call
mov
loopne
test
bound
cli
jnp
int
scas
into
dec
pop
pop
sub
jno
out
mov
jmp
xor
icebp
mov
mov
sub
xchg
out
xchg
arpl
lahf
pusha
xor
inc
cmp
jl
idiv
test
fildl
or
adc
cli
mov
sahf
mov
push
mov
adc
inc
xor
xchg
scas
shrb
sbb
adc
mov
jmp
cmp
adcb
cmp
xor
mov
inc
fsubl
nop
mov
repnz
inc
andb
pop
inc
lds
mov
dec
push
mov
xchg
testl
xchg
imul
mov
mov
inc
cmp
test
aaa
adc
subb
cltd
mov
or
mov
adc
ja
and
xor
popl
push
or
lret
aaa
push
leave
mov
sub
fdivrs
decb
jb
sahf
call
cwtl
packuswb
shl
mov
mov
mov
lret
adc
sarb
jae
mov
add
push
in
adc
mov
xlat
scas
into
sahf
rcll
xor
icebp
aas
add
cwtl
pop
repz
fwait
pop
jge
or
pop
sbb
push
das
mov
aad
mov
cmp
push
xlat
mov
mov
scas
in
dec
cmpsl
add
or
pop
dec
mov
xchg
in
mov
dec
inc
add
sbbl
out
mov
and
or
sub
mov
pushf
jnp
pop
stos
mov
out
enter
add
jnp
mov
sbb
mov
inc
xchg
cmp
xchg
xor
mov
add
jg
pop
pop
adc
leave
lret
out
and
mov
addb
dec
mov
out
mov
mov
mov
outsb
lahf
dec
adc
inc
outsl
mov
incb
xor
cmp
mov
cltd
sub
push
push
sbb
dec
lahf
mov
sahf
add
std
cmc
icebp
adc
fsubrs
lret
pushf
mov
loop
bound
lcall
add
xor
or
cmpsl
xor
inc
mov
stos
shlb
xor
dec
mov
cmp
out
aam
in
fs
ret
dec
hlt
mov
xlat
js
mov
xchg
xlat
xor
sub
popa
leave
mov
icebp
pop
rclb
mov
mov
sbb
or
cmp
mov
sbb
mov
mov
pushf
jl
repz
iret
xchg
movsl
jne
cwtl
adc
pop
cmp
cmpsl
add
xchg
negb
ds
mov
pop
stc
repz
push
leave
sub
cs
mov
mov
push
insb
and
or
fwait
add
orb
pop
mov
mov
pop
and
cmp
cmp
jo
sbb
repz
test
mov
xchg
mov
mov
fnstcw
mov
mov
push
aas
mov
ljmp
movsb
xchg
pop
push
xor
andl
cmp
mov
add
mov
ret
jp
and
mov
test
stos
popa
add
inc
push
mov
jnp
jne
and
lcall
mov
jp
sahf
leave
hlt
sbb
nop
jbe
insl
lods
rclb
push
add
mov
jl,pn
shll
test
shlb
lds
loopne
mov
ss
jne
arpl
add
mov
scas
icebp
inc
addr16
mov
sbb
sub
cli
test
rcrl
xor
fidivl
lds
ds
adc
mov
adc
and
and
cmpsl
mov
add
jp
and
dec
mov
repnz
int
xchg
sbb
cmp
sbbl
lcall
repz
xchg
cltd
mov
aaa
in
jmp
cwtl
cwtl
mov
adc
mov
sbb
xchg
andb
addr16
mov
paddb
mov
pop
stos
and
cmp
sar
and
es
fdivs
xchg
and
mov
outsb
inc
in
mov
dec
sahf
cltd
pop
jecxz
cli
xlat
in
out
adc
sti
es
mov
add
scas
adc
adc
icebp
idivb
out
outsl
cmp
jns
push
scas
nop
roll
lds
stos
out
stos
jne
ja
sbb
dec
cli
ja
add
test
xor
dec
cmp
xchg
into
ds
push
dec
mov
add
mov
mov
mov
lret
stos
mov
dec
and
or
push
mov
repz
xlat
sarl
testl
dec
sbb
push
mov
icebp
jl
mov
fidivl
cmpsb
ret
idivl
shll
push
mov
add
mov
scas
mov
inc
xchg
in
adc
ret
mov
mov
mov
les
sbb
pop
dec
mov
lods
mov
jg
xlat
stos
mov
lods
mov
icebp
mov
push
cmpl
fs
xchg
data16
shlb
mov
dec
push
es
fisubrl
xchg
mov
jge
mov
dec
out
daa
cwtl
mov
aad
ret
lods
mov
mov
xchg
xchg
out
sbb
je
mov
mov
xor
cmpsl
addr16
jnp
mov
rclb
jo
ret
sbb
outsb
pop
xor
and
jnp
addr16
or
xor
outsl
repz
xchg
call
mov
sub
sub
popf
mov
mov
repnz
adc
cli
mov
lahf
fwait
outsb
mov
lods
mov
ret
xchg
btc
and
mov
daa
aas
cmp
or
movsl
mov
and
neg
decl
fldt
stos
outsl
gs
jmp
test
cltd
daa
or
stos
xor
mov
idivb
jl
das
out
xlat
mov
test
jns
jge
int3
adc
jo
mov
xor
lods
mov
cmp
and
cwtl
pop
adc
lods
lods
adc
cmpsb
jge
call
cmp
and
aas
jb
or
aaa
mov
add
lahf
mov
cmc
jns
rclb
lock
stc
in
xlat
sbb
cmp
xor
insl
jns
es
mov
mov
xchg
mov
icebp
jnp
stos
lret
add
jno
cmpsb
pop
sub
shll
out
fwait
stc
dec
xor
mov
aaa
cltd
cmc
aad
ja
addb
stos
and
icebp
mov
xchg
cmpsl
mov
mov
pop
or
out
dec
inc
mov
ss
dec
inc
sub
cltd
cltd
mov
inc
adc
or
clc
inc
mov
stos
cmp
scas
test
cmpl
xor
cmp
push
mov
mov
sbb
gs
mov
adc
scas
mov
and
mov
popa
xchg
inc
aas
push
adc
xor
sub
lahf
pusha
ss
fwait
mov
and
outsl
fidivs
cmpsl
aas
in
test
mov
aaa
sahf
roll
push
sub
in
in
mov
push
mov
loopne
fwait
push
mov
mov
test
scas
cmpsl
adc
shrb
push
out
sbb
aam
mov
mov
pop
mov
idivb
aad
int
cmpsb
push
cltd
lahf
aaa
inc
sbb
lods
shrb
mov
add
shll
in
ja
call
sahf
js
mov
lds
insl
repnz
fisubl
push
mov
mov
xchg
gs
mov
in
mov
daa
mov
stos
pop
ss
xchg
jl
mov
xlat
imul
scas
rolb
enter
jp
test
jg
test
hlt
addl
xchg
mov
aaa
aam
imulb
mov
lods
cmpsl
jae
mov
ss
test
push
aaa
shll
jge
xlat
loop
adc
mov
jg
xchg
cmpsl
jns
int3
stc
xor
cmp
cmpsb
xor
mov
add
jae
sarb
idiv
pop
mov
xchg
pop
sti
sub
int3
ds
cmp
sub
nop
mov
mov
ljmp
fsubrl
mov
mov
mov
jns
xorl
mov
lahf
or
pop
ds
xlat
clc
xchg
sbb
out
inc
mov
mov
mov
loop
mov
jns
bswap
stc
cmpsl
test
lea
mov
xor
xor
das
pop
insb
jno
mov
mov
jecxz
repz
test
mov
cmpsl
inc
stos
shll
notl
jae
out
cli
add
dec
fs
leave
mov
mov
fdivl
nop
xlat
lret
or
out
mov
cld
stc
mov
mov
lcall
adc
aam
shlb
xor
icebp
dec
add
add
push
pop
sub
test
sub
pop
das
push
xchg
add
mov
mov
aad
xchg
sbb
push
mov
lods
or
loope
sub
xlat
cmpsl
xchg
mov
or
gs
dec
jg
adc
ret
mov
sub
test
pop
mov
fmuls
xorl
mov
push
xor
lods
pop
mov
int
mov
mov
dec
add
pop
add
mov
mov
push
scas
shll
mov
ret
push
adc
adc
lock
mov
mov
sbb
jns
std
mov
mov
mov
je
pop
mov
mov
sbb
jns
jg
inc
mov
inc
mov
mov
cmpb
pop
jns
cmp
icebp
pushf
popf
jae
mov
sbb
cs
scas
stos
xor
jb
mov
sub
loop
call
or
jmp
jae
sbb
out
stc
and
insl
jecxz
cmp
scas
cmp
iret
xor
fdivl
lock
pop
stos
scas
daa
test
mov
ds
aam
outsb
aaa
jo
add
nop
cmp
test
insb
cmp
dec
fwait
mov
mov
dec
push
shll
test
mov
icebp
sub
xor
or
cmp
adcl
push
lds
popf
sub
cmp
jo
adc
mov
or
sbb
inc
push
mov
sbb
out
dec
xor
leave
movsb
mov
or
lods
add
sbb
push
xchg
sub
outsl
jbe
fsubl
mov
stc
lahf
test
cmp
test
icebp
jl
fwait
mov
out
inc
aaa
pop
mov
das
mov
cs
mov
pusha
popf
xchg
push
in
divl
pop
iret
and
adc
mov
inc
stc
mov
jne
subb
mov
mov
pop
shlb
rcrl
and
push
jno
pop
ss
orl
mov
cmp
out
fldcw
scas
mov
test
mov
stc
js
pop
xor
aad
mov
push
in
dec
popl
xlat
cli
mov
sbb
imul
sub
xchg
mov
loopne
arpl
xchg
icebp
and
jbe
cltd
push
push
leave
mov
mov
cmp
addb
xchg
cmpl
mov
mov
fnstsw
add
movaps
xor
mov
push
test
lods
adcl
ficoml
sub
xchg
or
into
out
mov
add
add
mov
sub
and
mov
fwait
stos
push
mov
cld
adc
and
pop
test
cmp
pop
mov
dec
cmp
xor
mov
bound
add
mov
push
mov
sbb
icebp
mov
xchg
fcomps
fistpll
mov
shlb
mov
mov
mov
daa
aas
mov
dec
jle
pop
xchg
mov
shll
jnp
and
cmpsl
lods
out
mov
or
adc
mov
cwtl
push
jno
fwait
sub
clc
lahf
mov
lds
xlat
scas
icebp
lea
lods
lss
cmpl
and
mov
leave
pop
push
pop
scas
xor
mov
das
mov
or
out
cmp
xlat
mov
jo
hlt
icebp
sub
repz
xchg
push
sub
mov
int3
daa
dec
lcall
shl
push
hlt
xorb
fstpl
test
jnp
repz
sahf
jno
sub
lcall
repnz
xchg
mov
and
pushf
cli
mov
fwait
mov
xorb
aaa
sbb
inc
jmp
xchg
sbb
icebp
repz
dec
mov
push
mov
aad
stos
sbb
fdivl
mov
aas
aas
les
xchg
ret
jg
pop
pop
pop
and
popf
sbb
pop
les
repnz
arpl
mov
xchg
mov
xchg
mov
mov
mov
mov
stos
sahf
cltd
ret
shlb
int3
mov
mov
shr
mov
in
in
xor
adc
dec
loope
adc
test
mov
pop
push
data16
repnz
xchg
test
ja
mov
mov
jb
mov
inc
fadds
gs
mov
and
movsb
ljmp
or
cwtl
xor
jmp
jge
stc
int
mov
enter
mov
cwtl
jb
add
xor
clc
pop
or
push
xlat
arpl
xchg
lcall
ja
jns
mov
push
movsl
mov
sub
jnp
mov
iret
cli
push
inc
das
insb
scas
sbb
daa
loope
dec
jmp
mov
adc
cmp
mov
jb
mov
mov
adc
mov
fs
mov
leave
adcb
adc
jno
push
outsb
jnp
mov
mov
cmpsl
std
jle
xor
mov
jb
int3
dec
ss
mov
dec
pop
cmp
in
jg
shll
gs
mov
cld
sbb
sub
mov
mov
push
cmp
jb
or
push
pop
bound
xchg
mov
inc
jae
pushf
xchg
mov
fwait
mov
lret
add
lods
mov
inc
mov
shlb
stc
imul
mov
fsub
orb
cmpsl
dec
int3
fistpll
inc
mov
in
mov
push
bound
push
arpl
shrb
cltd
push
andl
mov
xorl
sub
mov
inc
dec
push
mov
xor
lret
icebp
push
push
mov
dec
mov
sbb
sbb
pushf
jno
lods
aas
mov
jnp
and
and
loop
sub
or
cmc
mov
mov
xlat
arpl
mov
xchg
mov
rorb
icebp
dec
dec
mov
aas
jae
lea
mov
cmpsl
repz
mull
cmp
stos
sbb
lods
mov
iret
shrb
cmc
in
mul
dec
fadds
lcall
mov
cmpsl
cltd
cmp
mov
sub
mov
and
and
int3
jge
cwtl
xor
cmpsl
fcomps
xor
test
cmp
ss
stos
push
mov
mov
xor
jge
add
cs
or
adc
pop
popa
mov
jg
inc
test
cltd
jne
push
lock
subl
mov
into
divl
xor
jae
leave
xlat
adc
outsb
dec
push
insb
push
cmp
jl
movsl
ret
mov
push
bound
jno
pop
inc
xor
test
add
cmc
aas
leave
cmp
lret
scas
lock
mov
out
shll
mov
je
rcrl
jl
gs
shll
cmp
jecxz
scas
mov
xor
int
and
mov
inc
cmp
aas
aad
mov
jo
and
test
movsb
sbb
jg
pop
aas
xor
clc
cmp
mov
andb
push
xlat
sbb
fistpl
cmpl
fnsave
cmpsl
dec
and
mov
test
mov
lea
mov
pop
add
outsl
movsb
cli
into
mov
fimull
cs
and
xor
das
add
ss
cmp
mov
stos
rcl
xchg
sbb
jg
rcrb
jns
jnp,pn
daa
jns
enter
add
xchg
xchg
ss
in
and
push
cs
or
outsl
sbb
xor
mov
loop
test
lahf
push
pushf
add
push
cwtl
shrl
push
lds
mov
cltd
mov
xor
ret
sarb
mov
in
loop
rorl
push
icebp
shrb
xor
lret
fmull
aas
test
in
popa
adc
rep
mov
adc
mov
and
xorl
xlat
int
stc
jmp
cmpsl
mov
jns
clc
loopne
xchg
jo
addr16
jbe
xchg
cmp
jns
ret
mov
lahf
sbb
mov
or
fimull
fidivrs
cwtl
push
jbe
sub
insl
xchg
addl
mov
popa
mov
shll
and
or
loop
sbb
mov
cmp
cwtl
daa
adc
das
ljmp
mov
jne
adc
cmc
out
xchg
dec
fcomps
jb
shl
xor
jle
cmc
aad
push
scas
push
sbb
loope
testl
xorl
mov
filds
cmp
pop
or
add
jns
mov
movsl
scas
sbb
dec
mov
xchg
xlat
mov
scas
jge
je
or
xchg
xchg
push
sahf
lods
icebp
push
sub
lcall
pusha
aaa
cmp
shrl
fbstp
stos
test
cli
mov
dec
xchg
mov
int
add
sahf
cmp
icebp
les
mov
fnstcw
cmc
fnsave
sbb
xchg
cmp
jnp
movsb
imul
pop
cli
pop
dec
inc
push
mov
dec
mov
arpl
push
push
cmp
fwait
out
and
add
rcll
loop
jns
mov
aad
ficoml
jl
gs
ret
pop
xor
rorl
mov
ds
repz
mov
mov
add
or
enter
jnp
xor
mov
imul
cmp
xchg
repnz
mov
jnp
mov
iret
inc
lcall
cmpsl
sarb
mov
cwtl
mov
mov
dec
loop
rorl
mov
movsb
push
sub
insb
xorl
mov
mov
insb
or
pop
inc
mov
lret
push
jle
mov
pop
fwait
cmp
pop
aaa
inc
mov
push
inc
cmpsb
hlt
add
hlt
movsl
xlat
loop
and
mov
js
in
jge
shrl
jnp
jae
cmpsl
mov
lock
lods
out
or
xchg
xchg
mov
inc
push
sbb
rorl
mov
mov
jle
jns
lods
fisubrs
mov
mov
mov
mov
daa
popf
add
adc
ja
mov
sub
add
mov
cmpsb
jno
mov
pop
mov
insb
dec
adc
icebp
out
mov
imul
cmp
xchg
lahf
mov
cltd
scas
xor
jbe
ja
fcomip
int3
sahf
arpl
jnp
lods
xor
sbb
ja
mov
mov
dec
mov
daa
mov
jge
cwtl
sbb
mov
mov
fwait
popf
adc
clc
cmc
repnz
scas
stos
add
inc
cltd
xchg
mov
pop
mov
cmp
sbb
add
xor
sub
js
pop
jp
jnp
pop
inc
cltd
repnz
mov
mov
add
mov
das
in
lret
mov
pop
ds
mov
sbbb
cmp
xchg
fwait
push
mov
movsl
sbb
andl
mov
cmpsb
inc
xlat
movsb
shrb
xor
aaa
cmpsb
aam
sub
cmpsl
mov
arpl
push
fwait
xlat
fwait
sub
mov
sub
jns
push
mov
xchg
sahf
push
push
sub
push
adc
jns
gs
fwait
mov
es
mov
and
cmpsl
idivb
jo
and
push
jmp
mov
cwtl
add
jne
cli
scas
insl
arpl
gs
mov
iret
cmp
sub
insl
adc
sub
mov
mov
das
xor
pminub
les
push
add
mov
xchg
sahf
cltd
mov
push
and
jnp
push
add
mov
sbb
scas
sahf
into
std
inc
addr16
mov
jbe
lods
add
xchg
mov
add
adc
or
push
xor
gs
mov
mov
xchg
lods
faddp
jnp
mov
imul
adc
ljmp
xlat
cmp
xchg
cwtl
negl
sti
mov
mov
ret
stos
fsubrl
sbb
mov
xchg
jo
bswap
pop
pop
mov
jp
pop
imul
cwtl
faddl
lcall
mov
andb
faddl
sti
shll
sbb
aad
cmpsl
and
xlat
mov
mov
lds
inc
sbb
aam
mov
dec
loope
xlat
int
aaa
pop
mov
mov
inc
stos
dec
sbb
mov
sahf
fisubrs
inc
std
jmp
ds
sbb
mov
movsl
mov
or
sub
fstl
movsl
add
inc
jmp
mov
loop
inc
sysret
int
mov
fwait
mov
xchg
mov
test
xchg
jmp
pop
mov
jae
fwait
sub
mov
mov
mov
cmpsl
xor
jae
sahf
bound
add
je
xor
daa
mov
stos
xor
das
and
mov
mov
lea
fidivrl
jge
sbb
test
or
je
aas
bound
xchg
insl
mov
mov
scas
mov
xchg
cmpl
cmp
cwtl
pop
test
push
pop
fnstenv
loop
push
repz
dec
jl
jno
or
lods
jns
js
inc
jo
mov
lret
xchg
aaa
fdivrl
stos
push
hlt
fisttpl
dec
and
mov
pop
test
mov
cwtl
push
cmp
scas
jae
sahf
sub
out
pop
cwtl
xor
lds
stc
xchg
jmp
lcall
pop
mov
cli
cmp
enter
lods
mov
inc
pop
fucomp
xchg
mov
jns
enter
pop
sahf
jnp
or
and
mov
sbb
pop
pop
mov
or
xor
fwait
add
sbb
sbb
inc
or
add
mov
aas
push
ja
sub
pop
mov
repz
cvtpi2ps
leave
jns
xchg
stos
cmpsl
mov
push
mov
mov
in
outsl
xor
sbb
cmp
inc
lret
fidivs
sbb
cwtl
xorb
leave
xor
stos
inc
mov
pop
xchg
mov
fldl
mov
testl
cltd
mov
jns
add
movsl
mov
jb
and
fcoml
sbb
mov
xor
pop
inc
mov
mov
jnp
in
xor
inc
mov
adc
fmul
aam
adc
pop
xlat
and
jp
std
mov
hlt
pop
negl
mov
ljmp
bound
rcll
inc
mov
mov
bt
add
mov
jns
sti
lea
add
cmpsl
jl
test
subb
mov
icebp
mov
cld
pop
popa
mov
divb
repnz
jns
addr16
mov
mov
mov
xor
mov
mov
push
pop
sub
lods
test
enter
icebp
cmp
push
mov
rolb
and
inc
lahf
jmp
dec
ficomps
lds
daa
mov
shlb
fiadds
out
aad
xchg
mov
ljmp
jp
sub
dec
cmp
xlat
loop
sbb
lods
leave
mov
mov
into
jp
mov
fisubrs
mov
icebp
cmp
stc
jnp
and
scas
jmp
dec
mov
fiaddl
ret
adc
mov
sbb
cmpsl
sub
pop
icebp
pop
xchg
shrb
aas
imulb
mov
fdivr
xor
add
rcl
adc
fadds
jecxz
jb
mov
sub
sti
mov
inc
xor
fdivr
mov
fstp
movsl
clc
fdivrl
mov
adc
pop
mov
bswap
out
pop
sbb
cmpsl
outsb
and
aas
shrb
xor
add
xchg
cmpsl
lods
jae
cmp
ja
into
imul
fidivs
fidivl
jle
xchg
test
dec
cmp
in
mov
into
ret
push
pop
push
cmp
xchg
ficomps
xchg
jecxz
mov
jne
pop
ljmp
mov
xor
adc
movsb
and
and
push
loop
pop
scas
sub
mov
movsb
xor
inc
fcomps
dec
icebp
out
mov
xchg
mov
enter
lock
mov
fs
add
enter
or
mov
xor
jmp
pop
in
and
aad
cmpsl
xchg
clc
mov
movsb
xor
rcrl
cmpsl
sarb
xlat
jp
mov
jmp
mov
fisubrl
sahf
mov
inc
mov
sub
stos
cmc
cmp
mov
insl
pop
add
or
nop
pop
imul
cmpsl
clc
stos
shlb
add
subl
inc
lods
data16
cmpsl
imul
xlat
jge
mov
dec
pop
xor
push
ja
inc
cmp
mov
es
repz
mov
push
insl
mov
fidivl
hlt
stc
push
mov
aas
cmc
jns
pop
add
mov
mov
outsl
out
pop
mov
mov
lahf
hlt
sbb
icebp
mov
xor
sub
loop
sub
inc
fsubrl
addr16
xor
daa
pushf
and
jl
lods
ljmp
lods
jnp
or
mov
jge
mov
mov
mov
mov
arpl
push
inc
stos
fincstp
inc
mov
sti
push
mov
cmp
fstpt
insl
or
xchg
adc
add
cmp
mov
cmp
add
out
mov
pop
mov
daa
mov
arpl
out
fwait
mov
mov
jp
mov
pop
mov
rcrb
mov
imul
xor
mov
cmpsl
stos
lahf
leave
ss
sub
jge
cltd
and
out
push
cltd
mov
movsb
ret
xor
pop
cmp
mov
push
cmpl
xchg
mov
push
jmp
lds
fucomip
mov
stos
xorb
test
aaa
outsl
mov
jno
xchg
sahf
xchg
inc
pop
jae
xlat
pusha
mov
xor
popf
mov
sub
out
addb
mov
int
cmpsl
incb
icebp
mov
int3
test
xlat
xchg
dec
mov
daa
dec
loopne
push
cmp
repnz
scas
decb
mov
mov
jle
dec
out
cltd
fdivl
int3
pop
test
mov
cmpsb
daa
int
sarb
cmp
pop
outsb
mov
stos
neg
aaa
jno
test
inc
xlat
rcr
lcall
aad
in
cmpsb
jle
cltd
mov
mov
jbe
fwait
insb
jno
loope
add
dec
push
or
cs
mov
cmpsl
fwait
test
notl
out
adc
dec
lret
daa
ret
mov
inc
lods
mov
mov
insl
std
test
mov
push
lcall
push
fsubl
gs
enter
bound
adc
jl
mov
jns
fadds
xor
lret
mov
mov
adc
pop
mov
scas
and
sub
stos
lds
call
xchg
xchg
cli
fdivl
xchg
movsl
or
xlat
add
xchg
xor
xlat
adc
movsl
mov
mov
mov
mov
cmpsb
xchg
mov
xchg
jno
and
dec
or
jg
mov
fiadds
jecxz
dec
test
jnp
adc
xor
dec
push
aas
xlat
inc
pop
mov
aam
cmp
clc
xlat
cmp
add
inc
divb
sbbb
push
add
jg
xchg
inc
lods
enter
sbb
jge
out
pop
es
int
mov
mov
out
into
scas
pusha
les
ja
adc
add
mov
jge
mov
dec
inc
fdivrs
fisubrl
mov
test
cli
stos
jae
arpl
cltd
fs
aaa
mov
mov
mov
mov
adc
inc
testl
scas
adc
mov
inc
mov
adc
cmp
fs
aam
cltd
out
push
jns
mov
lret
pop
aas
dec
push
mov
aaa
lods
int
sub
mov
xlat
fidivs
xor
add
clc
sbb
xor
fs
jg
mov
push
jl
subl
aad
mov
test
pop
mov
daa
mov
stos
lret
xor
fwait
jp
mov
sub
data16
jns
xchg
push
ret
call
fisttps
push
aaa
pop
icebp
mov
jns
mov
inc
mov
dec
mov
ret
iret
mov
mov
ficoms
add
push
sbb
xor
dec
pop
arpl
mov
pop
mov
pop
pop
or
cmpsl
out
xchg
cmp
jo
lods
pop
addr16
aas
rorb
jns
xchg
insl
xchg
sub
mull
cltd
mov
mov
shl
pop
mov
sbb
and
test
scas
inc
jns
pop
xchg
mov
sbb
leave
stos
shll
aad
jl
adc
test
xchg
mov
adc
mov
lea
mov
int
pop
inc
data16
cltd
shrl
fwait
sahf
cwtl
xor
lods
loopne
test
mov
or
or
jns
jg
out
mov
insl
fidivrl
es
test
mov
cld
testl
sub
mov
add
icebp
cld
jge
cmpsb
rcrl
cli
dec
xchg
pop
push
fwait
mov
nop
xchg
loop
jp
mov
sbb
mov
sbb
mov
xor
bound
in
push
mov
xchg
add
es
pop
orb
mov
mov
mov
sahf
aaa
lret
inc
mov
bound
ss
lds
jbe
inc
addr16
or
pop
push
mov
or
and
mov
daa
mov
add
cltd
cmp
movsb
ds
jns
ficompl
popa
mov
xlat
fsubr
or
pop
imul
mov
ljmp
test
mov
mov
adc
and
mov
or
rcr
xchg
test
icebp
ja
mov
sub
je
ret
arpl
mov
jle
pop
xchg
mov
orb
lock
and
js
dec
sbb
and
mov
jb
add
mov
mov
pop
lret
rcll
and
loopne
std
scas
mov
mov
cmpsl
leave
cmpsb
inc
ja
enter
pop
ljmp
xor
ret
mov
mov
iret
lods
movsl
dec
cltd
xor
cwtl
out
fstps
imul
inc
mov
lahf
sub
mov
fcomps
rcrl
mov
cli
popf
xchg
push
sbb
divb
jbe
pop
xchg
jno
into
mov
jmp
mov
xor
fdiv
mov
inc
xchg
mov
in
cltd
mov
sub
push
mov
mov
lret
and
xchg
mov
sbb
jae
das
btr
pop
jecxz
xlat
lods
or
mov
or
mov
push
aad
mov
shll
dec
jne
fdivrs
xchg
mov
fwait
push
mov
push
sub
jnp
dec
cmpsl
cmp
out
adc
ja
lock
mov
sub
movsl
inc
jns
aad
sbb
popf
cmp
mov
aas
jae
push
cli
cmpsb
or
into
dec
lahf
imul
stos
cmpsl
mov
mov
pop
cld
pop
pop
xchg
xlat
sarl
push
or
popa
shll
push
lahf
add
jg
cmpsl
gs
repz
mov
jnp
dec
inc
mov
aam
imul
xlat
mov
inc
orl
mov
and
add
stos
cmp
repnz
mov
mov
popa
mov
dec
bound
mov
cmpsl
jns
cltd
int
mov
push
mov
pop
xchg
psubusw
and
outsb
inc
push
test
xchg
insl
add
xor
sub
insb
mov
stos
fdivs
jae
test
xlat
negl
mov
adc
test
int
jbe
jnp
mov
outsl
mov
leave
and
pop
mov
shlb
xor
add
and
mov
test
mov
ficoms
cmpsl
in
xor
adc
sbb
sbb
push
lret
iret
js
add
sbb
cmc
decl
sbbl
jb
push
in
sub
mov
dec
xchg
lahf
and
xchg
mov
stos
ss
insl
fwait
mov
jno
and
mov
in
mov
aaa
mov
lahf
loope
bound
loopne
loop
int3
and
ret
sub
inc
aam
int
mov
dec
lret
jecxz
mov
aad
divl
mov
add
sbb
je
mov
pop
pop
sbb
pop
mov
nop
cltd
sub
mov
pop
push
fdivr
mov
jno
pop
xchg
scas
xor
push
pusha
push
out
jnp
push
mov
fidivl
xlat
jno
xlat
lock
decb
dec
ss
arpl
pop
mov
sbb
xchg
jno
sbb
inc
push
xor
adc
stos
orb
pop
addr16
jmp
pop
adc
popw
cltd
mov
xor
inc
add
in
movsl
fsubrs
cltd
out
int3
xchg
fwait
jle
lods
inc
pop
shufps
hlt
sub
mov
mov
sbb
jbe
adc
scas
stos
ret
add
and
sarl
mov
mov
mulb
lret
cmpsl
inc
add
stc
addl
ljmp
push
jbe
mov
add
inc
js
adc
inc
cld
mov
mov
addr16
in
rclb
mov
or
andl
inc
test
cmpsl
popa
das
or
lea
movsb
clc
outsl
pop
mov
mov
cmp
dec
inc
mov
leave
xlat
imul
mov
out
jns
shll
adc
fcompl
mov
mov
arpl
or
aam
and
icebp
cmpsl
push
fldenv
mov
popf
iret
add
pop
jns
lret
aam
mov
jnp
mov
mov
aaa
xor
mov
pop
dec
mov
loop
push
jbe
mov
lds
out
mov
mov
pop
je
xor
test
push
xchg
xlat
mov
aad
test
repnz
in
add
mov
mov
mov
cmp
mov
push
dec
aas
imul
xlat
push
ret
mov
ja
icebp
popf
mov
pop
add
mov
dec
out
cmpsl
mov
mov
or
sbb
pop
in
arpl
xchg
add
out
fwait
push
repnz
mov
imul
movsl
ficompl
and
mov
loop
xchg
or
stos
mov
lret
cwtl
push
int
repz
mov
mov
movsl
dec
scas
lea
or
adc
jnp
prefetch
cmpsl
dec
fdivs
cli
jl
inc
dec
mov
mov
jnp
xor
mov
daa
pop
jo
shl
jae
aad
int
repz
les
nop
movsbl
xchg
cmpsl
push
icebp
scas
repnz
xchg
mov
lret
ss
int3
xchg
mov
arpl
sub
sbb
adc
dec
add
xor
mov
and
lods
sub
icebp
lahf
mov
xor
dec
fisubs
xor
xlat
movsl
stos
mov
es
pop
and
adc
mov
popa
and
sub
lods
imul
sbb
fwait
ja
xor
cmpsl
sbb
sbb
cwtl
add
mov
mov
xchg
pop
pop
mov
cmp
inc
ja
lret
inc
pop
xchg
xor
call
mov
cltd
rcrb
mov
cmp
pop
aas
adcl
sub
test
mov
daa
popf
mov
adcb
cmc
xlat
and
mov
sbb
and
mov
cwtl
shll
mov
xchg
mov
loope
mov
mov
mov
pop
aaa
xchg
jnp
xchg
cli
shll
xchg
sbb
xor
xorb
test
push
pop
mov
out
xchg
das
dec
rorb
sub
roll
lods
sbb
sub
loop
push
jo
mov
mov
imul
lahf
lret
lods
cmpsl
lea
cmpsl
sbb
enter
xchg
mov
out
movsl
mov
xchg
lahf
ja
addr16
mov
test
pop
cmp
mov
xchg
lods
add
jg
sub
test
jp
inc
xchg
mov
lahf
add
aas
fsubrs
sbb
xor
lcall
addl
imul
mov
mov
pop
and
pop
xlat
or
and
mov
or
ljmp
andl
int3
xchg
cmpsl
enter
jno
sbb
sar
sbb
cmpsl
add
push
mov
gs
fisubl
and
jae
je
mov
mov
inc
mov
outsl
out
ret
test
dec
add
das
mov
push
dec
inc
xchg
scas
jno
enter
cmpsb
push
shlb
mov
or
sub
iret
and
add
aad
pop
xor
inc
jg
xlat
mov
cmp
in
iret
movzwl
pushf
loope
andl
mov
shrl
test
sub
mov
test
push
es
xor
ficoml
lret
sbb
pop
mov
daa
xchg
int
or
xor
and
loop
leave
mov
jge
xchg
cmpsl
mov
out
push
mov
xor
cmp
sub
inc
sbb
pop
dec
mov
sbb
xchg
scas
jecxz
add
inc
lret
pushf
mov
mov
mov
mov
push
sahf
test
dec
sbbw
xor
ds
mov
insb
sarl
popf
rorb
cwtl
cmpl
fistpll
jbe
arpl
sbbb
fcmovb
xor
mov
or
mov
jbe
mov
dec
lds
dec
mov
outsl
mov
imul
add
adc
cli
popf
leave
sub
fadds
test
icebp
mov
pop
gs
in
rcrl
scas
push
mov
sub
sahf
xchg
pop
mov
sbb
pop
adc
adc
cmp
pop
out
lods
jle
mov
add
jge
mov
mov
scas
icebp
mov
stos
sbb
fsubrl
sbb
lods
lret
cwtl
sbb
xor
or
and
cmpsl
cld
and
loop
mov
mov
inc
bound
mov
mov
orl
add
cld
pop
mov
lea
jns
popf
xor
ja
cli
or
outsl
shll
xor
dec
imul
cs
sub
int
mov
movsl
sub
stos
in
jg
jg
cmp
mov
mov
ds
jae
out
cmp
arpl
jnp
sub
test
sub
shrb
add
jae
mov
sahf
jmp
popf
sbb
jns
xchg
sub
rcrb
jge
pop
movsl
pop
insl
cmpsl
stos
jo
mov
enter
loopne
inc
out
fisubs
ja
incb
repnz
loopne
push
jecxz
sbb
stos
dec
mov
sub
add
icebp
aam
lret
mov
mov
push
stos
xchg
cmp
add
fsincos
cmc
test
ret
into
std
pop
jge
adc
xor
outsb
xlat
jg
fsubl
out
xor
mov
bswap
cs
mov
inc
and
xchg
into
lea
mov
mov
mov
ss
mov
lea
js
roll
cmpb
fists
push
arpl
pushf
stos
and
cwtl
jns
rorl
fwait
lds
outsl
mov
cmc
adc
aad
out
mov
cwtl
clc
int3
jle
or
mov
adc
push
mov
lcall
xlat
dec
enter
sarl
mov
or
xlat
into
int
xlat
ret
inc
addr16
dec
mov
cld
shll
mov
lahf
clc
iret
gs
xchg
test
xchg
xlat
andl
scas
cmp
rol
outsb
push
cld
lahf
adc
mov
jns
cs
xor
adc
sub
icebp
daa
lds
jecxz
sahf
xchg
mov
cmc
inc
in
test
cmp
mov
mov
sbb
ja
inc
mov
in
mov
push
cmpsb
pop
mov
sbb
xchg
cmp
ss
jp
fildll
ljmp
push
leave
jns
xor
xchg
loopne
cmpsl
sub
mov
sub
fs
loopne
jle
mov
shlb
cmp
and
cli
add
imul
rcll
fwait
xor
imul
inc
or
mov
iret
sbbl
enter
sub
mov
cmp
sbb
mov
jge
mov
test
pop
add
mov
sbb
aad
cmp
jo
aaa
je
jp
cmpsl
cltd
add
pop
clc
mov
jb
fwait
add
sub
adc
jo
pop
mov
sbb
pop
jns
jp
loopne
mov
mov
push
jge
mov
jns
icebp
lock
dec
and
mov
aam
fwait
and
pop
mov
push
xor
or
xlat
movsb
xchg
adcb
sub
or
xor
push
cs
mov
fwait
jae
scas
push
inc
cwtl
in
add
mov
pop
sub
popf
pushf
add
cmp
jp
jecxz
mov
mov
mov
push
out
push
imul
popa
dec
sahf
mov
add
fdivl
lea
jg
add
arpl
or
jns
sbb
lea
push
ret
mov
lret
push
mov
xor
hlt
out
sete
mov
jg
movsb
mov
fildll
or
sbb
xchg
cmp
nop
mov
pop
lret
xlat
in
and
mov
insb
mov
xlat
mov
notb
cltd
push
lahf
pop
fs
adc
cmp
fisubrl
sub
xchg
push
lds
jno
test
mov
popa
dec
scas
cmp
mov
and
xlat
test
jp,pt
dec
scas
jo
test
xchg
xor
sbb
mov
mov
stos
sub
dec
popf
xor
xor
stos
sbb
xlat
mov
mov
cmp
out
addb
sub
test
cltd
daa
test
inc
jb
fwait
aas
mov
sbb
cmp
push
scas
sbb
pop
addl
mov
stos
gs
fldenv
fwait
mov
ret
lahf
aas
shrb
lret
cmpsl
mov
or
mov
daa
jae
shlb
mov
movsl
jne
xchg
mov
lret
sub
daa
fwait
add
cmpsl
jmp
and
mov
es
test
ret
lcall
or
out
das
jb
xor
and
pcmpeqd
lahf
mov
inc
jmp
loop
scas
pop
inc
dec
dec
mov
xchg
pop
xlat
inc
mov
inc
push
int
scas
rolb
cmp
test
mov
mov
shrb
sbb
inc
pop
and
cli
pop
mov
and
addr16
pop
bound
mov
lret
jge
sub
cmp
mov
aas
pop
stos
jg
dec
jecxz
mov
fs
xor
es
fldcw
clc
mov
addl
popl
and
lea
mov
sub
nop
scas
mov
mov
jp
psubusb
in
mov
xchg
movsb
cmp
imul
xchg
jge
push
add
jl
and
xchg
add
inc
mov
xchg
insl
andb
scas
and
cltd
aam
stos
ret
gs
fdivrs
andl
es
dec
stos
push
scas
and
jg
jge
cmpsb
fiadds
adc
fmul
gs
push
mov
cmpsw
loope
inc
and
out
pop
loop
inc
and
and
jns
imul
inc
inc
mov
cmpsl
xchg
loop
addr16
pop
xchg
rcrb
das
push
mov
dec
sub
cmp
lahf
popf
out
mov
xor
jecxz
popa
daa
push
cmp
sub
scas
nop
rcrl
daa
or
sbb
repz
xchg
outsl
mov
test
mov
shr
in
xor
mov
push
pop
enter
mov
cmp
mov
push
xchg
fstps
icebp
les
cmpsl
or
xchg
pop
mov
addr16
and
mov
lcall
lahf
adc
stc
mov
lret
andb
cmp
xchg
sbb
or
add
dec
jb
mov
fwait
or
and
icebp
cltd
notl
adc
cmpsl
js
scas
loope
out
mov
mov
ds
add
cltd
sub
xchg
jbe
mov
push
popa
and
lods
pop
mov
mov
in
stos
jae
daa
cmp
popa
jns
cltd
cmpsl
mov
mov
dec
push
mov
lods
xor
mov
mov
pop
jb
xchg
xchg
repnz
mov
xchg
pop
push
cld
pop
fcmovb
mov
pop
push
js
icebp
lret
mov
xchg
lods
lcall
add
mov
clc
hlt
add
popf
push
add
js
mov
iret
jge
popa
pop
lock
inc
imul
cmpb
jbe
mov
fsubrl
mov
jbe
cmpsl
aas
add
or
mov
mov
cmc
dec
out
outsb
pushf
add
pop
lcall
mov
repz
or
cmp
mov
test
rcr
xor
mov
mov
xor
into
adc
mov
test
mov
cwtl
das
out
jne
test
mov
inc
xchg
repnz
repz
movsl
fcoml
mov
xchg
movsb
push
mov
sub
fstl
leave
dec
pop
jne
xor
sbb
jp
inc
faddl
je
add
movsb
in
bound
jns
pop
cli
cmpsl
cmpsl
dec
xchg
lret
loopne
iret
data16
or
jmp
dec
jbe
scas
jb
mov
mulb
cwtl
pop
xchg
int
mov
or
fldl
xlat
ljmp
mov
xchg
sbb
inc
pop
mov
test
mov
sub
adc
sbb
xchg
mov
mov
adc
test
shll
sbb
jp
mov
ss
pop
inc
cwtl
pop
cmp
or
fs
xchg
xorb
lret
xchg
cmc
jne
mov
dec
jecxz
mov
add
jmp
data16
ficoml
mov
mov
xchg
popf
add
pop
add
pop
cli
push
cmp
dec
sub
mov
mov
lret
icebp
dec
sbb
xor
dec
jp
into
lret
mov
mov
addr16
fwait
loop
shl
mov
or
inc
mov
jnp
dec
les
cli
int3
clc
outsb
fwait
xor
mov
and
aas
xchg
ffreep
cmp
ss
pop
jns
test
outsl
mov
fwait
hlt
cmp
arpl
xlat
push
out
and
and
mov
int
hlt
fists
rcl
jo
sbb
mov
fwait
pop
pop
push
dec
push
mov
and
xlat
pop
xor
iret
cmp
jmp
test
jmp
xchg
mov
push
and
icebp
sub
ficoms
mov
mov
or
lret
int
repz
hlt
pop
je
lcall
jge
dec
or
mov
pop
sbb
push
add
mov
popf
popa
cmpsl
sti
in
cmpsb
out
cmp
aam
xlat
adcb
add
and
pop
clc
jmp
rcrb
adc
stos
call
mov
sbb
dec
outsl
int3
or
push
icebp
push
mov
bound
arpl
lret
cs
xor
out
pushf
scas
pop
xor
mov
mov
iret
mov
bound
and
jmp
aas
imul
jo
icebp
xor
pop
dec
xor
xor
sub
xor
das
sub
jge
pop
ret
add
lret
or
mov
ds
xchg
cwtl
incl
rcll
cmpb
adc
push
pop
hlt
jns
call
sti
jae
mov
aad
xchg
push
dec
lret
cld
imul
xor
inc
movsl
sbb
dec
aaa
xor
imul
mov
mov
fwait
mov
dec
xchg
mov
divb
out
mov
arpl
cmp
xlat
mov
test
fdivrl
mov
popf
mov
pusha
cmp
mov
bnd
add
inc
movsl
mov
mov
aam
mov
ficomps
cmpsl
xlat
mov
pop
and
notl
xchg
imul
shlb
mov
daa
cmp
adc
lods
mov
ret
cmp
cmpsb
pop
or
mov
sahf
inc
lods
stos
xor
orb
imul
xor
je
cwtl
in
daa
popa
push
pusha
xchg
cmp
inc
shll
mov
movups
repz
pop
push
vmulss
or
adc
lcall
test
pop
mov
mov
shrl
push
mov
mov
ret
or
cld
mov
adc
pop
aad
cmp
xor
sub
inc
out
addr16
nop
jno
int3
stc
xor
test
mov
movsb
dec
mov
cltd
test
lret
push
mov
mov
dec
rcl
cmc
xchg
mov
sbb
scas
fistps
or
stc
jnp
mov
loop
cli
xor
push
divl
lahf
push
movsl
cmpsb
mov
ficompl
pop
mov
lds
ds
jae
loope
cmovnp
adc
xorl
mov
mov
icebp
mov
push
test
jge
cmp
add
push
mov
jbe
outsl
bound
lret
dec
jae
xchg
jp
adc
clc
xor
shlb
add
jne
jns
mov
xlat
mov
lods
scas
and
mov
mov
pop
insb
inc
mov
xchg
gs
push
dec
out
stos
lcall
lods
ret
shlb
xchg
mov
hlt
scas
fcomi
mov
sbb
in
nop
cwtl
ds
mov
jbe
pop
jnp
sub
mov
mov
push
xchg
mov
insb
shrb
fsubrs
cmp
push
mov
push
dec
mov
mov
insl
mov
imul
out
cmc
mov
inc
in
mov
mov
loop
mov
lret
sub
sbb
adc
jg
mov
cmc
sti
fwait
imulb
jge
into
mov
shr
sbb
jmp
mov
or
aas
arpl
in
xchg
mov
and
jnp
xlat
and
ds
mov
movsb
sti
rolb
dec
xorb
pop
or
jmp
outsb
out
or
jno
shll
or
test
mov
cli
mov
pop
pop
or
std
xchg
insl
mov
popa
pop
cmpsl
inc
add
js
adc
jns
xchg
pop
mov
dec
xlat
jge
jnp
xor
insb
and
sbb
orl
sbb
scas
mov
pop
mov
or
cmpsb
fsubs
sbb
xchg
xchg
out
mov
mov
sub
mov
mov
add
fsubrs
outsl
fwait
sbb
xor
mov
add
sarl
mov
rolb
mov
stos
adc
mov
enter
outsl
xor
push
add
add
out
or
xor
mov
ljmp
mov
movsl
sbb
mov
cs
mov
lds
mov
ret
pop
mov
nop
in
cmpsl
mov
sbb
xor
cmp
cmpsl
fstps
aaa
mov
lcall
mov
scas
andl
lods
xchg
mov
mov
jbe
mov
ret
popa
lods
dec
sbb
mov
mov
out
mov
mov
sar
fimuls
sbb
fldcw
cmp
lods
pop
outsl
cmpsl
xor
cmp
mov
jmp
cltd
adc
or
mov
jo
inc
test
xlat
push
mov
fidivl
cmpsb
jne
test
cmp
xor
jo
xor
sub
cmp
and
testl
inc
jp
mov
mov
lods
mov
add
jge
fcoml
std
jnp
pop
push
inc
xlat
icebp
push
jmp
movsb
mov
repz
mov
outsl
pop
int3
cmc
mov
or
jnp
mov
and
loopne
push
hlt
cwtl
fsubs
test
push
fdivp
adc
sbb
scas
pop
add
setns
lahf
mov
sub
mov
inc
andl
daa
inc
jg
lods
dec
jo,pn
lods
sub
cmpsl
in
movb
cmp
mov
fsubl
pop
and
addl
xor
mov
lret
nop
enter
imul
pop
push
mov
ja
daa
outsl
fldt
add
mov
test
xchg
rcrl
mov
pop
add
lods
icebp
cmp
out
mov
mov
mov
xchg
inc
daa
mov
add
jae
pop
andb
xor
lret
inc
fwait
jb
mov
xchg
cmc
lods
mov
mov
jg
mov
xchg
addl
movsl
push
popa
sbb
loope
int3
fstpl
fwait
cmpsl
jecxz
imul
cmp
pop
inc
push
xchg
mov
mov
or
push
repz
cmp
mov
jg
dec
pushf
or
pop
jnp
push
fldt
loop
mov
pop
mov
ja
callw
or
leave
test
ret
xlat
sbb
and
cwtl
pop
jp
add
scas
imul
clc
add
cmp
scas
gs
outsl
cmp
push
jne
xchg
adc
mov
mov
xor
push
adc
dec
add
call
pop
mull
out
dec
mov
xorl
jecxz
adc
mov
arpl
and
mov
les
lods
je
xor
cmpsl
jne
divb
cltd
mov
mov
outsl
jl
mov
and
mov
incl
sub
daa
jbe
mov
ret
lods
sub
jae
xchg
and
jns
pop
shll
inc
mov
xor
xchg
mov
into
mov
add
pop
fdivp
sub
pop
push
cwtl
ja
pushf
cmp
jae
sbb
mov
into
out
scas
pop
jns
cmp
cmpsl
mov
jmp
bound
xlat
push
mov
mov
fidivrl
div
fldcw
sti
pop
data16
jae
mov
hlt
lods
xor
rcl
aad
in
call
sbb
pushf
lcall
xchg
mov
loop
rorl
in
sbb
in
movb
stos
jg
pop
mov
cltd
dec
ss
gs
nop
mov
xchg
lret
lods
inc
fwait
outsl
push
cwtl
inc
jae
insb
cmp
hlt
fwait
in
mov
std
mov
push
jns
inc
sub
fistl
dec
push
mov
and
test
ret
popf
jns
fcmovnbe
fdiv
adc
lods
or
fsubrs
fisubrl
cltd
jmp
pop
xor
xchg
fdivl
adc
subl
sub
pop
rcll
mov
push
loope
jns
and
ss
fidivrl
repnz
xchg
imul
bound
or
pop
ss
mov
add
imul
xchg
mov
mov
dec
test
aaa
shll
ret
leave
push
dec
mov
and
jae
fdivs
idiv
mov
fidivl
push
faddl
aaa
stos
or
pop
and
cwtl
mov
movsl
sub
movsb
fmulp
jae
sbb
pop
cmp
mov
stos
hlt
jnp
sbb
mov
test
pusha
mov
roll
movl
iret
ljmp
cmc
jg
or
into
sbb
inc
or
lods
mov
jne
je
push
cld
lods
jl
repnz
cmp
imul
icebp
das
adc
xchg
out
js
pushf
gs
push
imul
mov
in
cli
testb
mov
and
jns
lcall
je
jp
jns
inc
mov
les
and
sbb
mov
xor
jnp
das
stc
cmpsl
jle
xchg
mov
mov
adc
inc
adc
xchg
arpl
pop
mov
mov
mov
rolb
or
add
sbb
ljmp
ds
jb
dec
pushf
xchg
mov
int3
or
pop
fdivl
xlat
popl
mov
cmovle
lret
cmp
jnp
fwait
in
push
testb
or
mov
cmp
lea
adc
xlat
add
mov
mov
mov
pushf
mov
adc
sbb
shl
ljmp
subb
das
insl
shll
pop
lods
arpl
mov
popf
test
mov
lcall
mov
inc
icebp
call
and
insb
fiadds
mov
movups
popa
mov
pop
inc
push
sub
jns
jae
arpl
mov
mov
lods
mov
pop
arpl
fs
mov
sbb
daa
es
das
loop
pop
pop
adc
mov
or
movsl
adc
mov
add
cmpsb
xlat
xlat
pop
mov
adc
mov
out
mov
movzwl
loope
mov
out
ret
daa
int
fwait
cmp
jo
mov
jns
sarb
inc
jb
xlat
and
and
sub
lcall
cmpsl
pop
xor
jns
inc
push
jnp
and
adc
ja
dec
scas
sarl
loop
rclb
push
or
aas
mov
es
scas
xor
sbb
cmpsl
sbbb
fwait
mov
push
cmpsl
insb
leave
lock
das
mov
inc
popa
push
cld
add
mov
bound
pop
loope
pop
mov
je
fldenv
sbb
sub
xlat
sbb
movsl
cmp
test
data16
mov
icebp
pop
sbb
pop
cwtl
enter
push
mov
push
jmp
xchg
out
cmp
xlat
sbb
imul
test
mov
mov
dec
mov
mov
xor
jno
out
cmp
mov
arpl
pop
shlb
repz
mov
orl
sbb
cwtl
mov
jns
mov
push
leave
fs
xor
in
mov
addr16
in
xlat
mov
cltd
cmp
scas
inc
or
fiaddl
adcl
icebp
les
ficomps
aad
scas
mov
cmp
test
mov
cmpsb
mov
pop
inc
test
scas
dec
fdivs
ljmp
jae
les
xor
xor
repnz
mov
cltd
inc
mov
mov
cwtl
bound
out
cmpl
filds
int3
mov
mov
negb
sub
adc
add
sbb
xor
xlat
scas
xchg
mov
or
jge
stc
mov
mov
es
mov
sbb
push
jns
pop
add
mov
adc
cmp
jmp
sahf
mov
cmp
xor
andl
test
lock
cmp
mov
push
ficoml
pop
inc
sbbl
dec
jnp
mov
pop
and
dec
mov
divb
jne
sbb
add
aad
mov
mov
add
jg
rcrb
test
jp
push
leave
xchg
mov
mov
sub
mov
xchg
outsb
mov
fsubs
xchg
xlat
inc
mov
mov
xchg
mov
mov
sub
imul
mov
lahf
add
iret
cmp
or
and
cmp
insl
mov
enter
fdiv
mov
cli
hlt
push
out
and
add
add
pop
mov
imulb
and
rcl
cld
dec
cwtl
mov
andb
add
sbb
out
or
cltd
mov
jo
inc
adc
mov
insb
pushl
sbbl
popl
or
mov
xchg
xchg
mov
mov
scas
mov
cltd
test
orb
mov
addr16
popa
mov
pop
divl
loop
inc
roll
ljmp
scas
cltd
or
imul
mov
scas
dec
jge
rorl
sbb
xorl
aaa
bound
mov
lea
pop
dec
mov
addr16
es
fldl
out
cs
sub
jp
mov
lods
test
pop
xchg
mov
jg
ret
and
mov
fadds
push
mov
xor
dec
arpl
subl
cmp
jg
mov
int
mov
mov
sti
shr
aam
lods
mov
pop
or
mov
add
sti
imul
mov
push
inc
ror
fs
mov
push
xor
ljmp
add
dec
cltd
bound
movsb
outsl
jmp
push
cwtl
pop
sbb
hlt
xlat
ficompl
hlt
test
scas
dec
jmp
add
mov
mov
mov
pop
cmpsl
add
sub
std
sbb
mov
mov
push
sub
imul
nop
mov
xlat
cs
jmp
mov
cmp
pop
xlat
lahf
xchg
pop
test
es
sbb
loopne
cmp
cmp
mov
out
aas
mov
mov
imul
insl
aaa
addr16
mov
add
push
lcall
mov
hlt
lods
shlb
push
cmp
fcmovu
mov
xor
mulb
mov
popl
pop
jnp
pop
jo
out
psubq
div
dec
popf
stos
lahf
sbb
mov
pop
mov
mov
jo
data16
cmp
xchg
fsubs
mov
pop
lods
push
fwait
mov
mov
out
mov
sbb
pop
mov
push
jp
mov
mov
daa
test
out
push
add
push
pop
lret
xor
stos
insl
in
pusha
adc
jnp
sbb
aad
pop
repnz
stos
cmp
mov
aaa
cwtl
in
ljmp
mov
nop
or
or
push
push
mov
bound
and
mov
mov
dec
aad
mov
mov
xchg
mov
jnp
stos
mov
cwtl
pushl
loopne
mov
jg
addr16
pushf
and
mov
push
jno
mov
rcll
mov
test
cld
pop
xor
xchg
aad
aam
lret
daa
cmp
imul
or
jmp
fwait
xlat
or
pusha
aad
cmp
outsb
daa
nop
sub
mov
cmp
xchg
xchg
sbb
cmp
js
iret
rorl
jl
push
mov
add
mov
movsl
mov
shl
pusha
inc
repnz
sub
push
test
cltd
jno
mov
pop
icebp
xchg
lahf
adc
lods
add
mov
ljmp
mov
cli
lods
fdiv
or
or
cmp
push
insl
xor
cmp
xor
out
or
das
add
pop
sbb
mov
or
mov
test
dec
cli
jb
xlat
mov
adc
adc
add
cmpsl
imul
mov
jle
aaa
popf
push
pop
jge
lea
mov
xchg
jl
cld
pop
cmp
dec
mov
push
push
lcall
mov
cmp
cli
mov
add
or
movsb
and
shlb
bound
xor
sbb
ret
xlat
icebp
push
mov
mov
mov
pusha
mov
sbb
test
bound
fdivrs
jmp
inc
mov
push
jne
scas
fwait
lret
cwtl
mov
mov
mov
loope
icebp
jne
std
iret
out
mov
cs
inc
sbbl
mov
push
lods
lret
iret
pushf
jns
cmp
icebp
mov
cmp
mov
xchg
push
pop
lods
sbb
xchg
jns
xor
inc
out
aad
mov
ljmp
mov
mov
lret
xchg
out
adc
out
aad
fidivrs
fs
loopne
add
and
xorl
push
dec
inc
mov
ss
lahf
sarb
sub
inc
mov
cmp
arpl
push
cs
rorl
mov
sbb
stos
popa
push
adc
lret
in
or
xor
roll
daa
and
mov
mov
mov
xchg
jno
jmp
jae
mov
adc
pop
sub
push
aad
cmpb
and
xchg
mov
dec
mov
test
inc
ss
adc
icebp
repnz
pop
sbb
sbb
add
or
leave
loopne
fsubs
adc
cmpsl
sub
cltd
fsubs
cmp
divl
cmp
dec
mov
aam
sbb
inc
into
int3
adc
add
dec
xlat
iret
jns
aad
xor
and
mov
mov
pop
lret
mov
pusha
loop
stos
stos
lahf
pop
movsl
or
xchg
pop
or
cmpsl
pop
sbb
mov
cltd
shrl
mov
and
out
xchg
cmp
or
mov
rclb
xorb
xor
sub
ficoms
sbb
rorb
mov
or
mov
stc
rolb
mov
daa
fcompl
jo
cli
lods
mov
and
mov
not
add
test
call
clc
cmp
pop
jbe
data16
jnp
sub
movsb
fdivrl
mov
cmovbe
stc
sub
stc
repnz
sub
fsub
jnp
iret
cmpsl
hlt
mov
dec
mov
push
repz
mov
adc
add
lods
dec
sti
mov
fidivrl
xor
and
adc
dec
mov
cmpsl
sbb
adc
inc
inc
mov
sahf
pop
andb
imul
inc
jl
or
lods
inc
pop
aam
fcmove
jle
add
hlt
out
inc
sbb
dec
test
insl
cmp
mov
mov
cli
daa
xchg
stos
push
aaa
fwait
lahf
sti
cmpsb
gs
or
mov
int
daa
in
repz
jns
inc
mov
pop
mov
and
cli
mov
mov
push
jne
ds
mov
out
cmp
repnz
arpl
movsl
hlt
mov
jge
mov
or
mov
xchg
rclb
cmp
mov
inc
mov
daa
cmp
movsw
mov
sbb
jge
fcomps
sub
and
sbb
mov
call
mov
or
mov
lret
jge
iret
aam
push
mov
mov
pop
mov
push
leave
push
enter
lahf
dec
mov
cmpsl
mov
iret
pop
scas
jecxz
idivb
dec
sub
sbb
cmpsl
mov
ret
iret
mov
gs
push
sub
cwtl
mov
mov
pop
sub
mov
sbb
or
cmp
in
outsb
sarl
sub
sbb
mov
ficoml
adc
outsl
push
xchg
push
and
pop
mov
fcmovu
inc
sbb
jg
cmpsl
jnp
xor
mov
lret
mov
sets
push
xor
mov
adc
ja
cmp
movsl
mov
sub
repz
mul
pop
adc
loopne
loop
sbb
mov
test
lods
jge
lods
push
dec
lcall
fldl
imul
sahf
cmp
testl
cmpsl
xchg
dec
daa
pop
lods
and
mov
xor
jnp
push
jbe
arpl
nop
frstor
xlat
adc
jl
jne
sub
xchg
clc
cmp
cltd
mov
add
icebp
mov
xchg
lret
mov
mov
lods
stos
pop
xchg
adcb
cmpsl
xchg
cli
loop
lret
dec
ss
cmc
mov
jbe
dec
mov
or
mov
testb
cmpsb
into
sarb
mov
push
ljmp
jae
fldcw
stos
dec
inc
cs
jne
lret
popa
pop
xchg
or
lods
int3
aam
xorb
shl
mov
gs
jae
cltd
dec
mov
call
mov
mov
adc
and
imul
sub
mov
xchg
add
mov
scas
movsb
xchg
imul
cmc
cli
insb
jne
xlat
popf
sarb
push
xor
pop
sub
xor
mov
adc
cld
mov
xchg
add
repz
mov
outsl
dec
and
aas
dec
mov
in
rcl
test
mov
xor
inc
sti
addr16
sbb
add
in
xchg
dec
cmp
iret
jnp
pop
jns
mov
push
icebp
mov
aaa
mov
lahf
mov
fs
mov
mov
mov
mov
push
sbb
sbb
out
push
aas
xor
lods
out
xor
loop
xchg
std
inc
cltd
push
adc
mov
mov
cli
push
jg
lods
stos
mov
dec
out
mov
jnp
push
insb
in
xchg
popa
sbb
xchg
mov
jnp
sbb
inc
das
imul
test
movsb
adc
mov
jo
repnz
sbb
fidivrs
xchg
jg
shll
cmp
outsl
scas
call
pop
mov
jns
or
out
mov
push
cli
imul
cmp
iret
test
xchg
mov
or
mov
pop
cld
aam
jg
icebp
outsl
dec
mov
ljmp
xor
or
xlat
mov
sbb
mov
andl
mov
aaa
std
stos
xor
insb
mov
scas
xchg
mov
pop
arpl
fst
xchg
push
add
scas
out
inc
mov
jle
add
mov
test
mov
dec
or
lcall
dec
lar
mov
insl
mov
push
sahf
xor
or
out
push
scas
dec
fcompl
dec
inc
insl
and
xchg
divl
jnp
lret
cld
cli
or
dec
fadd
sbb
and
push
imul
mov
arpl
pop
roll
and
lods
xchg
lret
rcl
mov
pop
add
pop
mov
or
mov
icebp
xchg
out
test
mov
inc
mov
mov
mov
mov
lods
push
add
mov
mov
shrb
cmc
ret
mov
cmpsb
and
fmull
insb
mov
xor
jge
arpl
out
jnp
scas
and
mov
mov
pop
xor
mov
test
inc
iret
cmp
and
or
xchg
mov
mov
fistpl
bound
inc
stos
cmpb
adc
and
loop
or
cmpsb
mov
pop
leave
xor
mov
mov
xor
adc
mov
fisubrs
cmp
cld
mov
in
enter
lcall
or
mov
addb
int3
popf
cld
jecxz
stos
cmp
cmp
and
out
mov
loope
pop
xor
cli
xchg
dec
scas
jmp
pop
cwtl
das
add
shlb
cmc
jnp
inc
pop
jb
mov
mov
dec
or
sti
xchg
add
outsl
rcr
adc
scas
das
roll
dec
mov
mov
and
sub
mov
stc
test
testl
outsb
shrl
sbb
andb
jo
scas
pop
ret
mov
adc
mov
jns
dec
gs
cmpsl
repz
int3
lahf
inc
or
mov
mov
les
out
mov
push
fs
xor
cwtl
jne
mov
adc
mov
mov
les
pushf
xchg
adc
jae
repz
test
leave
fdivrs
mov
xor
cs
and
cmpsl
push
fsubrl
mov
push
imul
xlat
dec
sbb
pop
fisubs
xor
test
xchg
push
mov
jns
stos
out
scas
scas
popf
icebp
out
ret
shrb
mov
and
sub
jecxz
xlat
mov
scas
imul
mov
out
popf
lea
dec
sbb
mov
cmp
adc
xchg
mov
fcmovu
xchg
sub
test
mov
mov
jnp
shl
mov
fsubs
jp
sbb
mov
push
aas
jge
lods
std
mov
cmpsb
mov
iret
cwtl
jns
push
push
mov
inc
rcrb
push
push
mov
add
push
test
icebp
pop
test
std
mov
inc
fwait
pop
adc
mov
fst
xchg
rcl
rcr
pop
movsl
popf
cwtl
mov
subb
jnp
cmp
lret
mov
xchg
xchg
ficomps
inc
je
pop
icebp
mov
pop
or
scas
sahf
into
sub
jae
cli
ds
pop
xchg
and
popa
push
scas
adc
fs
push
test
rclb
xlat
mov
cli
mov
and
lret
sahf
push
mov
mov
add
adc
out
inc
call
xor
jae
or
mov
lds
aad
loope
mov
mov
ret
mov
mov
jge
dec
jno
jns
sub
xchg
mov
mov
add
lea
iret
fldenv
cmpsl
and
xlat
xlat
push
icebp
mov
add
lahf
fisubl
sbb
test
jae
and
mov
out
inc
pop
pop
and
jg
test
adc
mov
inc
xor
dec
xlat
icebp
sbb
ret
adc
and
sti
loopne
loop
sbb
rclb
clc
xor
dec
mov
shlb
push
setae
scas
push
enter
xor
or
push
int3
cmp
or
fnstenv
mov
push
in
into
sbb
mov
mov
jae
mov
xchg
imul
and
xchg
or
icebp
inc
jmp
sti
add
sbb
fistps
mov
jmp
mov
icebp
pop
cmc
fwait
jg
mov
es
lods
daa
mov
clc
hlt
sbb
fldt
lret
inc
mov
add
xchg
cwtl
push
or
ja
sbb
in
dec
xor
jg,pn
jecxz
cmc
call
ret
mov
lods
test
dec
ret
idivl
xchg
mov
cmp
mov
lock
cmpsb
push
mov
mov
enter
addr16
mov
sbb
jb
cmp
mov
in
popf
xchg
dec
mov
mull
pop
jge
pop
andb
xor
out
jnp
lcall
repz
or
mov
mov
mov
mov
and
loopne
xchg
mov
int3
inc
or
xor
mov
or
xlat
loop
sbb
or
mov
xor
xchg
jnp
arpl
mov
xor
shr
or
fucomp
hlt
repz
add
clc
stos
cmp
mov
sbb
popa
push
pop
es
xlat
cmp
cli
mov
ljmp
jg
mov
pop
add
push
jg
push
mov
adc
ret
loopne
fldenv
or
cltd
insl
adc
mov
mov
push
adc
mov
jmp
mov
fsubr
into
sub
cmpsl
push
or
cmpsl
mov
inc
adc
cmp
cmp
mov
jmp
cltd
xchg
lret
cmp
and
xchg
mov
dec
sbb
lods
pop
les
inc
mov
jns
sub
xlat
xchg
out
mov
jbe
add
mov
xor
cmpsl
lods
mov
mov
pop
pop
sbb
and
adc
ds
mov
imul
xor
push
mov
rcl
movsb
mov
lods
cmp
xchg
cmpsl
jg
mov
mov
jnp
jl
mov
adc
adcl
sub
xchg
jnp
divl
aam
mov
fwait
cmpsl
add
cwtl
xor
cld
add
cvtdq2ps
mov
lcall
repz
mov
loop
jns
into
pop
mov
push
aad
cld
mov
push
shlb
iret
xchg
outsb
xchg
mov
inc
sahf
in
cmp
mov
mov
cmc
aas
cmp
jb
jno
scas
dec
stos
arpl
es
cltd
push
das
mov
and
or
daa
lea
je
fildl
sub
pop
pushaw
jo
pop
and
ljmp
jmp
inc
loop
push
mov
add
mov
sbb
xchg
sahf
loop
mov
adc
aaa
dec
or
sub
out
pop
imul
cmpsl
xor
and
sbb
sbb
adc
cmp
inc
mov
push
adc
mov
pop
mov
pop
aad
mov
fidivrl
mov
cmp
rorb
xchg
lahf
loop
add
aad
inc
js
shrb
push
mov
fwait
mov
xor
ret
enter
pushf
mov
ss
mov
push
bound
or
mov
push
pop
mov
stos
daa
mov
aaa
cmp
notl
jge
sbb
fmull
fcmovbe
xchg
xchg
and
sbb
mov
add
sarl
xor
lcall
mov
hlt
jns
pop
sbb
push
jo
push
dec
jle
lods
push
sub
cltd
fs
scas
or
pop
fwait
mov
cmp
xor
sub
mov
rorl
jnp
in
mov
mov
ret
scas
andl
xor
test
jnp
mov
sub
lahf
mov
adc
xorb
adc
das
fildl
lahf
fdivrl
scas
lods
testb
loop
stos
outsl
mov
xor
adcb
arpl
test
jbe
jmp
data16
test
and
mov
mov
data16
jne
mov
push
mov
add
xlat
xor
mov
jnp
cmp
nop
jno
sub
stc
out
push
cmp
stos
sbb
lahf
repnz
shlb
adc
cmp
lock
andl
popa
movsl
push
push
stos
xor
sbb
inc
or
stos
mov
mov
andb
mov
mov
or
push
nop
mov
fs
mov
inc
cwtl
and
push
mov
lret
jg
jnp
sbb
mov
add
xor
pushf
jbe
sub
insl
int3
jg
jnp
negb
mov
adc
and
jns
stos
sub
add
sbb
mov
inc
mov
xlat
inc
fisubrl
xor
mov
jbe
add
icebp
lods
cltd
pop
insb
xchg
sub
xor
in
sbb
cltd
inc
lock
adc
push
sub
into
cwtl
imul
push
shll
icebp
lods
jge
xor
mov
stc
daa
push
mov
push
je
mov
setp
sbb
pop
pop
in
pop
jb
shlb
repnz
or
pop
xchg
adc
mov
loop
jae
mov
fwait
lcall
sti
hlt
xor
std
mov
jp
push
aam
push
sub
sahf
inc
mov
dec
ficoms
pop
mov
mov
xchg
adc
dec
push
push
clc
inc
fimull
mov
inc
push
mov
add
imul
jno
lahf
aaa
mov
add
or
fs
jge
push
adc
push
mov
mov
and
ja
jl
divl
aaa
push
fidivrl
sbb
fsubrl
inc
fwait
sbb
test
sub
mov
arpl
out
jns
stos
mov
enter
sarl
lods
lret
push
mov
cltd
jae
mov
inc
stos
test
das
ljmp
mov
adc
negl
lcall
and
adc
imul
adc
fldl
pop
cltd
adc
lods
pop
movsl
cmc
sub
adc
push
not
loope
out
sub
scas
and
test
fists
xchg
aad
add
mov
pusha
xorl
jae
jg
frstor
andb
push
xor
stos
mov
pusha
cltd
jl
pop
mov
push
icebp
jge
push
fwait
int3
push
cmp
sub
cwtl
test
testb
push
cmp
cltd
icebp
jl
mov
fistl
lds
and
jecxz
std
aaa
jnp
xor
pop
daa
cmc
mov
cmp
stos
ljmp
lcall
ret
popa
lret
shlb
mov
mov
aad
roll
mov
add
mov
adc
lret
xlat
push
pop
scas
jnp
lahf
push
into
scas
ljmp
xchg
sbb
cltd
mov
add
dec
or
aas
lcall
mov
xchg
icebp
xor
xchg
mov
xchg
aaa
cmp
mov
data16
fistpll
mov
or
jns
cmp
stc
push
sub
sub
iret
aaa
xchg
dec
mov
sbb
mov
shrb
aas
jb
cmpsl
xlat
lret
mov
daa
nop
push
mov
mov
sbbb
fwait
mov
lods
jnp
addr16
cmpsl
jb
fistl
jmp
adc
pop
mov
cmpsl
jno
xor
cmpsl
jno
icebp
pop
pushf
mov
and
inc
ret
lcall
mov
xlat
mov
sbb
mov
xchg
sbb
insb
pop
in
arpl
xchg
lods
mov
or
jae
pop
and
lret
sbb
sbb
push
cmc
cltd
loopne
imul
rolb
push
dec
lock
cmp
mov
call
xlat
bound
xor
push
mov
loope
push
inc
shl
bnd
push
repz
mov
aad
jns
scas
insl
or
mov
mov
add
popf
fidivl
jb
xor
mov
test
mov
cmp
nop
mov
mov
cld
cwtl
stos
add
scas
fwait
cltd
adc
shll
pop
roll
jno
mov
call
fs
or
jnp
mov
xchg
mov
inc
into
mov
inc
test
ret
xlat
cmp
dec
pop
mov
inc
mov
cmpsb
mov
movsb
cmpsl
and
cmpsl
mov
mov
and
cmp
mov
test
and
out
nop
mov
cmpl
in
mull
test
sbbb
clc
mov
call
icebp
pmulhw
pop
jnp
or
jne
addl
sub
loopne
adc
fdivs
daa
mov
das
jecxz
xorb
imul
fidivrl
adc
mov
stos
pop
push
mov
jo
mov
mov
mov
loopne
hlt
shlb
mov
mov
in
add
push
or
repz
mov
push
push
mov
scas
dec
cwtl
and
cmc
mov
popf
mov
js
pop
jb
mov
cld
icebp
mov
adc
mov
lcall
mov
or
xor
cld
roll
dec
mov
sbb
cltd
xchg
mov
icebp
jno
es
mov
iret
push
sbb
add
adc
mov
mul
out
jl
test
notl
jp
push
mov
adc
sub
fcompp
mov
pushf
je
scas
mov
xlat
jle
mov
xor
jae
cmp
mov
jns
test
mov
orb
andb
xchg
aaa
inc
mov
add
rsqrtps
jnp
xlat
sahf
sbb
stos
xlat
inc
dec
pop
rcr
add
xchg
lods
add
out
mov
popf
repnz
divb
mov
mov
stc
and
mov
pminsw
push
outsl
sbb
mov
jp
push
sbb
jl
test
mov
or
cmp
insl
popf
loopne
cmpsb
sarl
xor
mov
dec
pop
mov
divl
push
imul
inc
pop
std
mov
push
ret
cmpsl
add
fwait
mov
insl
fiaddl
mov
aad
xchg
cmpsl
out
ljmp
leave
cmc
sahf
sbb
fidivrl
and
ret
push
push
jo
mov
imul
push
mov
mov
notl
mov
es
std
inc
jge
and
sub
xchg
cmp
adc
and
or
and
mov
cs
xchg
cmc
leave
or
pop
push
jnp
loop
cmpsl
or
into
sbb
xlat
sarb
pop
mov
pop
mov
sbb
push
or
pop
arpl
sub
daa
icebp
mov
or
adc
xlat
sbb
xor
cs
daa
scas
sub
pop
scas
pop
pop
mov
into
adc
les
mov
cmp
and
fnstcw
xchg
sub
mov
dec
mov
mov
das
dec
xlat
sub
pusha
test
xor
cmpsl
mov
mov
and
movsl
mov
scas
hlt
sbb
dec
loopne
stos
or
das
cmpsl
sub
push
jp
das
sbbb
xchg
icebp
jne
jnp
lahf
xchg
test
mov
mov
dec
jecxz
into
ficompl
pop
outsl
xlat
shl
lahf
test
mov
mov
mov
dec
cmpsl
and
fidivs
ja
arpl
mov
add
out
sub
aas
sbb
lods
mov
pop
or
mov
movsb
jno
or
cli
sub
mov
rcrl
mov
cltd
lods
mov
scas
sub
mov
lea
aas
lods
mov
pop
mov
mov
sbb
ds
inc
mov
sub
push
add
adc
fwait
movl
xor
sub
add
cltd
fwait
dec
and
pop
pop
jp
insb
mov
nop
sti
les
repz
fnstenv
mov
sbb
lahf
fsubrs
mov
push
dec
jae
inc
enter
imul
je
shlb
mov
out
lahf
test
bound
scas
das
mov
mov
mov
or
sub
je
add
mov
push
dec
mov
fisttps
jmp
mov
push
aaa
imul
subb
es
xchg
add
mov
arpl
xor
out
sub
stos
mov
xchg
jne
and
dec
push
sub
scas
ljmp
fldcw
enter
dec
pusha
int
jns
imul
stos
or
in
cltd
cwtl
or
xor
sbb
mov
inc
add
jae
sub
mov
enter
and
xchg
cmp
xor
add
dec
arpl
xlat
pop
fs
out
sub
mov
mov
cltd
mov
ljmp
xlat
mov
add
cmpsb
lahf
jnp
cmp
ja
jg
gs
jne
mov
xor
sbb
js
sbbl
mov
aad
das
inc
outsb
adc
mov
or
cmp
fmul
sbb
hlt
dec
fisubl
pop
xchg
add
or
inc
or
data16
lret
nop
bnd
mov
jae
push
sub
jo
lock
adc
adc
fidivrl
and
icebp
fwait
shr
cwtl
xlat
xchg
insl
stos
mov
cmp
fs
mov
sub
ljmp
mov
or
add
lahf
pop
loop
mov
or
pop
dec
sbb
xor
adc
mov
icebp
xor
add
mov
lret
jecxz
adc
push
aaa
mov
mov
andl
inc
pop
mov
xor
mov
inc
int3
testb
mov
mov
in
mov
cmp
jnp
dec
jns
je
mov
cwtl
pop
icebp
pop
cmpsb
aas
mov
fnstenv
stos
mov
xor
lret
subb
or
mov
push
cmpsl
mov
mov
lds
jns
and
cmp
mov
stos
addr16
lods
add
jle
fwait
nop
into
iret
hlt
and
icebp
mov
leave
fsubr
add
mov
and
test
sbb
jl
add
xchg
mov
lods
popa
arpl
inc
add
jae
imul
movsb
mov
shll
sub
jno
xor
add
push
dec
cltd
jmp
push
movsl
sbb
fcom
test
xchg
cmp
or
sub
and
movsb
imul
xorl
sbbl
pop
adc
outsb
mov
inc
lods
movsl
mov
icebp
cmpl
inc
mov
mov
sub
mov
test
fwait
pop
mov
jns
push
mov
and
lret
sbb
pop
add
lahf
push
leave
ds
mov
pop
test
inc
mov
sbb
sbb
dec
popa
test
sub
xor
ret
cmp
and
sbb
add
fwait
mov
mov
mov
movsl
nop
cli
hlt
pop
mov
in
mov
into
mov
and
aaa
pop
mov
xor
fstpl
xlat
leave
jg
inc
repz
loop
cld
fistpll
pop
cmpsl
add
shrb
jp
movsl
inc
fcoml
inc
mov
mov
stos
mov
mov
adc
ret
xor
fisttpl
add
int
jns
inc
lahf
or
sbb
push
jnp
mov
lret
divb
sbb
adc
adc
cli
and
daa
cmpsl
sub
sbb
xor
in
les
mov
add
arpl
and
push
fwait
cmpl
sahf
pop
jbe
pop
pop
pextrw
adc
xor
inc
loop
enter
fdivs
add
repnz
sbb
fnsave
mov
mov
cmp
xorl
push
inc
inc
jnp
jmp
cltd
adc
dec
xlat
pop
inc
push
jnp
push
ss
ficompl
fiadds
xchg
pop
aad
icebp
dec
cwtl
les
mov
mov
test
xor
mov
xchg
sarb
cwtl
lret
add
scas
push
sbb
adc
xorb
and
pop
pop
mov
dec
mov
pop
adc
inc
mov
stos
pop
xchg
loope
xor
je
inc
cmp
sub
repnz
push
mov
xlat
mov
xor
outsl
aad
dec
mov
stos
popa
ret
sbb
ja
fld
mov
push
rcll
not
fcoml
mov
in
xchg
inc
mov
sub
push
scas
mov
jae
scas
pop
or
mov
nop
jne
mul
gs
mov
lods
icebp
popa
or
ja
adc
mov
das
test
xchg
addr16
mov
jp
mov
xor
mov
pop
pop
sbb
push
mov
daa
icebp
sbb
push
arpl
popf
pop
aas
lahf
hlt
iret
aas
mov
xchg
cmp
jae
mov
es
pop
mov
rorl
fbstp
push
cmpsl
jnp
pop
les
xlat
mov
mov
jmp
nop
xchg
mov
jnp
and
cltd
fdivp
inc
cwtl
cmpsl
maxps
mov
test
hlt
jnp
rorl
fidivs
movsl
mov
and
sbb
sbb
shrb
pop
inc
mov
stos
xchg
ficomps
cmp
xchg
dec
and
aad
jo
mov
sub
ja
dec
mov
cmpsl
aaa
jno
jle
and
fs
push
popl
movsl
push
xor
andl
cmp
bound
cwtl
popf
mov
scas
les
mov
test
pop
cmpsb
bound
mov
mov
stos
gs
adc
mov
inc
jnp
xor
dec
fidivrs
arpl
mov
cmp
cwtl
ss
mov
pop
fsub
imul
cmpsl
es
call
addr16
jnp
mov
lcall
fwait
insb
xor
fadds
rcpps
xor
mov
dec
lods
mov
mov
sbb
pop
imul
mov
add
xor
sahf
inc
mov
or
testb
std
mov
jae
add
cmovp
xchg
popa
and
cltd
sbb
and
or
or
mov
cltd
add
sbb
or
data16
mov
popf
dec
lret
sub
outsl
stos
mov
sbb
addb
jns
lret
mov
dec
push
dec
test
mov
and
adc
outsl
cmc
mov
push
sub
cmp
xor
fsts
mov
or
push
push
cmpsl
shl
addr16
mov
repnz
dec
lret
test
jns
stos
lods
mov
add
insl
xlat
sbb
mov
push
fisttpll
aam
into
fdivl
push
add
shlb
push
fsubrs
out
or
dec
xor
test
sbb
jbe
pop
push
arpl
das
popf
and
push
xchg
test
jge
stos
jbe
ret
pop
mov
jg
mov
shlb
pop
jnp
aas
mov
imul
dec
cltd
mov
sub
scas
fcmovb
mov
outsl
stos
cmc
imul
test
sbb
cmp
icebp
xchg
mov
xlat
xchg
and
xchg
inc
mov
popf
xor
fisubrs
cmpsl
aas
xor
xor
jns
mov
mov
mov
jg
cmp
inc
cmp
mov
mov
cmpsb
jno
scas
cmp
mov
int
sbb
mov
mov
mov
idivl
sahf
mov
xorl
je
adc
lahf
mov
mov
cltd
mov
out
out
int
jno
mov
in
pop
jne
jnp
and
shlb
cmc
mov
push
push
xchg
mov
push
cli
mov
mov
cmpsl
xor
addr16
mov
arpl
and
mov
cmp
xchg
push
pop
outsl
and
pop
xor
xchg
fwait
daa
dec
mov
jae
cmp
fsubrl
xlat
lods
and
cmp
add
clc
gs
jns
xchg
int3
xchg
add
mov
pusha
push
and
ds
das
aas
pop
push
mov
fisttpll
xor
or
jle
lods
test
sub
test
xor
and
mov
das
loope
mov
int3
test
xlat
inc
fstl
or
sahf
mov
add
xor
aas
or
push
popa
sbb
mull
xchg
mov
adc
lods
orb
repnz
sub
stos
idivl
cmp
stos
cmpsl
mov
mov
xchg
mov
movsl
push
pop
test
push
movsl
mov
mov
mov
arpl
mov
mov
mov
cwtl
mov
pop
cmp
dec
push
scas
jmp
sbb
fwait
out
xor
pop
sbb
es
les
lcall
inc
cwtl
jb
lahf
pop
jno
xor
mov
scas
stc
arpl
mov
mov
jne
sti
aad
and
int
pop
imul
test
pop
rorw
xlat
sub
shlb
adc
add
les
sar
xor
pop
jne
push
sahf
sti
clc
mov
add
push
ds
sbb
fisttps
popf
icebp
ret
mov
dec
add
xor
outsb
mov
xor
rclb
mov
lods
leave
or
cmc
mov
xchg
int
pop
cmp
mov
dec
adc
decb
and
mov
jo
mov
inc
scas
push
pop
pop
add
or
mov
and
mov
stos
jge
jae
jns
jle
sahf
andl
xchg
jnp
ss
repz
fidivrl
or
sub
xor
daa
pop
jl
sti
daa
mov
mov
mov
push
and
inc
xor
xchg
mov
lods
xlat
fstpl
xchg
cmp
jle
sbb
pop
mov
or
call
add
inc
sahf
add
adc
xchg
pushf
sub
mov
fdivs
adc
jae
imull
sub
jne
cmpsl
nop
shll
push
cwtl
fsts
dec
sahf
repz
lahf
mov
mov
cmp
mov
xor
sbb
sub
test
xor
sub
push
jp
sub
jg
cmpsb
scas
inc
mov
popa
mov
roll
or
mov
mov
pop
mov
lret
adc
mov
xor
jge
clc
rol
fwait
adc
cwtl
push
pop
imul
cmpsb
sbb
dec
data16
cwtl
xchg
mov
fisubrl
xchg
cwtl
xchg
xchg
addr16
lods
outsb
pop
jle
jbe
xchg
adc
fldl
cmpsb
or
xor
out
cmp
xchg
sbb
je
test
cs
and
fisubrs
mov
sahf
mov
nop
sbb
jns
fsubl
scas
adc
pop
test
and
fcoml
dec
mov
adc
mov
testb
jge
fdivl
jno
add
cmp
jl
push
mov
pusha
cli
cmp
push
mov
push
jns
fisubl
cmpsl
jg
or
ds
pop
ljmp
push
cmp
pop
mov
pusha
cmp
cwtl
movsl
cmp
cmpsl
xor
aam
fidivl
in
insl
push
ljmp
nop
pop
pop
sbb
mov
jns
jl
aam
pop
and
mov
aaa
adc
leave
adc
mov
ret
movzwl
and
mov
enter
icebp
pop
pop
add
repnz
pop
in
arpl
xchg
sahf
rcl
dec
pop
mov
xchg
mov
push
push
pop
mov
or
mov
lret
xlat
repnz
push
cmp
rolb
int3
mov
aad
cmp
xchg
mov
pop
push
sub
cmp
and
mov
sub
mov
enter
mov
mov
ljmp
cmpsl
inc
xchg
pop
scas
aas
cmp
mov
cli
ljmp
mov
adc
xor
xor
xor
testl
mov
mov
cwtl
cmc
aad
pop
sub
dec
stos
xor
lahf
push
in
jae
test
cmp
cltd
pop
push
mov
add
popa
jns
add
test
jo
jne
cwtl
ss
mov
mov
and
add
jmp
xchg
cmpsl
insl
fwait
pop
cmpsl
mov
fimull
sub
mov
cmp
lds
scas
rolb
scas
std
sahf
test
lret
jle
imulb
xchg
repz
shl
dec
jae
cmp
lret
stc
mov
fidivrs
cmp
adc
mov
ret
in
inc
stc
repz
mov
js
mov
repnz
scas
xchg
mov
jae
shl
pusha
std
xor
mov
into
mov
fwait
xor
mov
stos
std
aaa
in
arpl
cmc
mov
aad
sub
ljmp
shrb
mov
inc
add
or
jne
mov
pop
inc
mov
mov
add
movsl
mov
pop
push
mov
stos
dec
adc
mov
xor
mov
out
mov
cmp
sub
fwait
pop
lcall
ror
or
int3
test
das
arpl
outsb
and
or
into
jmp
mov
adc
sub
push
iret
xlat
aas
adc
xchg
adc
subl
mov
in
mov
cmpsl
out
mov
adc
divl
lock
out
imul
enter
pop
sbb
xchg
dec
cmp
mov
or
xchg
mov
into
adc
cmpsl
pop
arpl
mov
xchg
enter
xor
fwait
and
repz
push
testl
dec
xchg
mov
push
iret
stos
push
ja
mov
out
scas
add
scas
push
sub
loop
lcall
mov
movsl
jle
jmp
mov
ja
mov
jne
jns
jge
mov
mov
mov
scas
je
sahf
nop
ljmp
int
mov
mov
hlt
ja
mov
sbb
aas
ret
ficomps
xor
daa
cmp
add
sub
loop
mov
cmp
aaa
pop
push
jbe
mov
imul
jnp
outsb
push
lods
cmc
lock
push
mov
in
lahf
mov
gs
cmp
mov
pop
ret
jl
iret
sahf
hlt
push
xor
repnz
lcall
mov
mov
adc
push
pusha
das
push
ss
cmp
inc
in
sbb
movsl
add
les
sbb
or
cmp
push
add
iret
sbb
mov
mov
xor
fwait
pop
inc
xchg
mov
sub
push
or
fsubrl
mov
mov
mov
hlt
cmp
xor
dec
orl
jg
add
repz
aaa
mov
xchg
lods
push
and
cwtl
add
pop
movsb
scas
fidivl
push
inc
inc
mov
sbb
jns
cmp
inc
mov
lret
cmpsl
movsb
cmpsb
incb
push
adc
cltd
test
dec
push
out
stos
fwait
xor
xor
jecxz
movsl
hlt
sbb
adc
xchg
mov
mov
jl
popa
or
lret
mov
js
icebp
xchg
or
inc
pop
lds
mov
xorl
cmp
and
sbb
in
fdivs
xchg
jnp
andl
fisubl
jge
pop
fnstenv
ret
lret
jae
pusha
xlat
push
ja
pop
shr
stos
movsl
mov
mov
ss
dec
mov
arpl
mov
fisttps
stc
inc
adc
jecxz
add
mov
int3
sbb
mov
daa
mov
pop
sub
repz
iret
lahf
xor
lods
shl
test
les
xor
bound
fcmovu
stc
mov
cmp
cmp
mov
inc
cwtl
aam
fstpl
xchg
cmp
les
fwait
lods
fwait
xchg
jg
scas
mov
sbb
daa
int
sbb
mov
gs
dec
mov
push
jmp
cmp
jns
add
pop
addr16
mov
mov
stos
sub
fstps
jno
outsl
pop
mov
mov
cli
xlat
jle
fwait
adc
push
imul
mov
fstpt
push
mov
xchg
pop
adc
add
pushf
push
or
stos
and
cmpsb
mov
mov
jnp
dec
push
cmp
jno
sub
ret
push
jne
lods
fwait
mov
pop
push
lret
lahf
and
fwait
mov
sbbl
mov
stos
mov
test
lahf
sarl
and
fsubrl
xchg
add
or
cwtl
inc
push
mov
or
xorl
add
movsl
pop
sbb
scas
mov
jmp
in
rorb
mov
adc
cmp
mov
pop
push
icebp
xchg
jb
xcrypt-cfb
cmpsl
bound
cmp
out
lret
pop
ret
int3
iret
mov
mov
xor
push
sub
sub
jmp
mov
daa
sbb
jbe
int
dec
icebp
xchg
adc
stos
cmp
jae
mov
dec
pop
mov
aam
cmp
pop
jle
mov
mov
gs
iret
pop
xchg
cmpsb
push
out
xchg
xor
scas
enter
sub
insl
clc
insb
loopne
and
sub
out
add
jb
loopne
push
mov
mov
pop
mov
mov
jns
cmp
fildl
into
aaa
fidivl
add
fsubrs
jge
mov
sub
mov
repnz
mov
shlb
js
mov
push
fs
das
test
mov
adc
cltd
push
xor
aad
cmpsb
popf
add
mov
imul
xor
cmp
or
add
add
xlat
sbb
mov
nop
xlat
and
outsb
dec
xorb
lds
mov
mov
mov
flds
fnsave
popa
fs
mov
movsb
and
xchg
mov
and
sbb
cmp
stc
sbb
xchg
jge
and
adc
cmpsb
inc
xlat
cmp
loopne
mov
jo
xchg
inc
push
icebp
mov
mov
daa
mov
jge
sti
mov
or
inc
scas
icebp
mov
ss
jae
push
out
pop
insb
xchg
and
push
and
outsl
and
dec
mov
adc
push
sbb
mov
mov
sbb
testl
mov
in
negl
jnp
inc
or
sub
xchg
mov
imul
fs
cmp
lea
clc
pop
pop
add
and
mov
jns
stos
inc
and
js
leave
popa
push
and
add
mov
pop
jl
xchg
pop
mov
sbb
mov
jns
adc
and
adc
xlat
or
dec
inc
pusha
in
mov
in
dec
sbbb
lret
popa
cmp
cmpsl
push
jnp
jb
inc
mov
mov
out
cmpsl
ds
rorb
or
clc
cmpsb
dec
daa
insb
mov
rol
in
ljmp
push
cmpsl
add
mov
cld
outsb
subb
aad
xlat
or
or
mov
jnp
stos
pop
jbe
cmpsb
fsubl
mov
sbb
pop
mov
loope
cwtl
arpl
xchg
mov
push
sub
xchg
stos
imul
xor
inc
mov
pop
int3
mov
jne
mov
xchg
fstpt
out
cmp
addb
sbb
cmp
xor
sahf
lcall
mov
adc
mov
mov
iret
data16
mov
mov
mov
cmp
lret
ljmp
mov
mov
jbe
ds
faddl
lods
adc
pop
push
int
or
mov
cmp
mov
jge
nop
stc
sub
mov
std
lcall
cmp
dec
sub
es
movsl
into
data16
or
fcoms
enter
mov
adc
js
mov
pop
sub
pop
xor
jecxz
jae
mov
and
sub
imul
mov
jno
xchg
aas
add
jnp
clc
cmpl
and
orb
cmp
lret
dec
cmp
mulb
mov
or
cmp
sub
lds
push
ja
mov
mov
push
or
nop
xlat
ret
jnp
sahf
pushf
cmpsl
sub
mov
fldcw
and
and
jns
leave
inc
or
mov
mov
ja
mov
pop
mov
movsl
push
adc
mov
loop
gs
xchg
popa
jb
sti
mov
jge
mov
js
mov
jbe
adc
mov
pop
scas
or
cwtl
imul
push
fisttpl
pop
fdiv
xchg
adc
xlat
inc
imul
arpl
sub
enter
xor
push
xlat
adc
es
fldln2
fwait
mov
out
test
and
mov
mov
sub
mov
sub
cmc
stos
jmp
xchg
sahf
add
aas
test
stc
mov
pop
xor
icebp
mov
lods
jecxz
fnstcw
mov
mov
jno
or
sbb
divb
adc
int3
mov
ret
cmpl
repnz
pushf
mov
out
mov
pop
xor
inc
mov
and
sbb
and
sbb
add
rorb
pop
stos
pop
inc
pop
inc
jp
aam
xorl
xor
movsb
push
frstor
cld
cmpsl
xlat
lcall
ficompl
mov
int
rorl
xlat
mov
sub
loopne
lods
push
mov
data16
sbb
cmp
fdivrs
mov
cwtl
pop
adc
sbb
test
es
insb
jne
inc
and
repnz
cld
mov
sub
nop
push
cmc
mov
mov
iret
jae
add
inc
movsl
sbb
mov
mov
pop
cmp
inc
xor
mov
jae
or
dec
cmpsb
sbb
pop
jl
ret
pop
mov
mov
xor
in
pop
jge
cmp
rcll
add
jp
mov
push
das
inc
or
add
mov
mov
jns
cmpsl
xor
xchg
pop
fistl
cltd
sbb
test
popa
mov
and
push
pop
xor
imull
xchg
fwait
xchg
das
std
jp
and
cwtl
fdiv
stos
mov
rcrl
sarl
repz
or
testl
xor
add
mov
push
mov
xor
sbb
inc
jl
sbb
push
mov
inc
mov
jbe
mov
inc
in
cmpsb
test
sub
fwait
aaa
shll
or
sbbb
icebp
sarl
pop
xor
mov
cmp
mov
fdivs
pop
pop
arpl
sbb
shll
mov
pop
mov
arpl
outsl
fistps
enter
leave
cmpsl
mov
sub
imul
inc
cmp
add
inc
aam
sarl
jg
bound
fiaddl
jns
int
inc
lret
push
lods
fwait
mov
lea
cli
add
mov
push
lcall
inc
push
or
fisttps
mov
dec
js
pop
sbb
xor
xlat
test
repnz
xor
xlat
inc
sbb
pop
mov
sub
sbb
xlat
neg
aas
cmp
fwait
lds
mov
push
push
dec
cwtl
adc
subl
lret
stc
cltd
push
mov
mov
dec
iret
inc
stos
test
pop
je
cmp
fdivrl
inc
es
mov
inc
sbb
icebp
sub
pop
out
aas
fwait
test
cmp
xchg
or
cmp
int3
sub
xchg
iret
ffreep
adc
les
cmpsb
cmpsl
mov
cltd
jae
divb
sub
js
jbe
int3
mov
cmp
lock
cwtl
sbb
mov
mov
dec
sub
sbb
insb
mov
add
cwtl
mov
icebp
fld
mov
jns
xchg
fsubs
jp
cwtl
add
stos
sbb
sbb
cmp
mov
sub
cs
mov
jae
loopne
arpl
clc
xor
fs
mov
xchg
jle
out
insb
pop
loope
jne
add
and
mov
cmpsl
push
mov
xlat
insl
mov
popa
mov
jecxz
fdivrp
addr16
into
mov
stc
js
mov
adc
mov
jmp
aam
cmpsb
icebp
clc
xlat
or
pushf
mov
adc
sbb
inc
shrl
test
adc
inc
dec
inc
mov
pop
iret
fidivrl
xchg
mov
test
or
test
sub
dec
int
mov
cmp
jnp
inc
xorb
add
sbb
and
mov
in
jne
jbe
shll
out
xor
mov
icebp
xlat
mov
mov
or
arpl
repnz
xchg
jl
in
adc
jae
das
in
cmp
bswap
nop
andl
dec
jge
xor
push
fnstenv
add
call
pop
mov
add
sub
sub
mov
xchg
dec
cwtl
pop
or
jno
and
loop
adc
lds
test
sbb
mov
push
icebp
stos
xlat
scas
sub
mov
pusha
out
push
push
subb
add
jns
fstp
pop
scas
mov
jg
sbb
mov
cmp
mov
xor
mov
mov
mov
fstpt
xlat
fnstcw
stos
fsubrs
scas
movb
ret
fabs
push
mov
mov
jae
mov
int
dec
jb
pop
add
lods
lahf
xor
mov
das
cwtl
cmp
dec
std
arpl
xor
pop
xchg
adc
icebp
jbe
mov
arpl
sub
cmp
scas
je
cmp
xor
das
xchg
cltd
cmc
or
popf
mov
add
inc
mov
pop
mov
test
xchg
iret
out
xlat
sbb
xor
adc
mov
and
add
iret
mov
fisubs
pop
loop
sahf
imul
inc
xchg
mov
cmp
rcrb
cmpsl
sub
inc
leave
xor
mov
loop
pop
cwtl
xor
in
ret
mov
test
mov
mov
stos
push
sti
or
es
mov
fnsave
aad
je
sbb
pop
bound
subl
pop
sti
mov
mov
hlt
add
repnz
repz
lcall
pop
sti
lret
daa
scas
fidivs
sub
dec
mov
fwait
cltd
bound
cwtl
sbb
std
mov
fsubrl
and
test
mov
dec
push
arpl
repz
pop
movsl
xor
fwait
mov
xor
mov
sbb
sbb
xor
xlat
mov
dec
fnstsw
pop
scas
sti
inc
mov
mov
int3
mov
sahf
nop
test
fdivl
stos
repz
mov
xor
xchg
jno
push
iret
arpl
mov
or
mov
cmp
movsl
mov
int
mov
iret
cmpsl
sub
cmp
bound
and
sbb
imul
das
jmp
in
push
arpl
test
adc
mov
inc
add
lea
cmpsb
mov
xchg
es
mov
mov
js
push
repz
movsl
add
xchg
jle
aaa
cmc
cmp
cmpsb
xchg
sub
push
jns
cmpl
jge
mov
push
mov
or
push
stc
mov
pop
fcompl
mov
pop
cmovns
xchg
dec
fidivrl
push
mov
xchg
cmp
push
mov
pop
jge
movsl
aas
test
sub
cmpsl
lock
inc
cmp
sbb
in
mov
fwait
push
fcmovbe
cwtl
sbb
mov
repnz
xor
mov
out
das
imul
pusha
mulb
adc
adc
cld
shll
test
cs
sub
cld
jae
stos
sub
and
mov
aam
jge
jg
xor
mov
pop
mov
xlat
rorb
jnp
xlat
jecxz
pop
and
mov
aas
js
std
jns
or
mov
fcoml
test
dec
mov
push
lds
add
outsb
sub
imul
and
adc
jmp
mov
mov
sub
mov
cmpsl
mov
push
and
lods
push
shll
mov
insl
cmp
jo
xchg
test
sub
xor
mov
or
lods
and
mov
test
adc
test
mov
cwtl
push
rolb
mov
push
sub
cli
mov
adc
push
out
xor
mov
mov
test
adc
stos
xor
inc
idivb
sahf
pop
mov
adc
iret
scas
xchg
je
mov
mov
and
aad
or
test
mov
imul
mov
mov
xchg
inc
icebp
mov
jns
lods
das
outsb
pop
iret
jp
pop
sub
pop
jl
into
mov
pop
in
mov
mov
test
pop
mov
ja
cmpsl
lret
cld
jge
xor
adc
mov
cmpsl
call
fstp
sbb
sub
mov
int3
add
hlt
cwtl
filds
test
push
popf
mov
mov
add
pop
cmp
dec
mov
daa
or
lods
sbb
ds
out
mov
pop
aam
imul
stos
jecxz
mov
pop
pop
sahf
cmp
and
xor
mov
mov
into
loope
sbb
cwtl
outsb
pop
inc
mov
fs
mov
jge
fwait
or
add
jmp
popa
fwait
cmpsl
cmp
mov
or
inc
mov
popa
sub
mov
rorb
sub
add
bound
jb
sbb
enter
lea
test
push
xlat
inc
mov
add
cmp
mov
push
mov
pop
push
inc
lods
pusha
int3
adc
push
rorb
push
mov
mov
insb
scas
mov
and
daa
jbe
xchg
jecxz
cmpsl
imul
int
std
mov
in
sub
add
fwait
jp
movsl
insl
jge
call
lods
sbb
cmp
fisubrl
cmp
jns
mov
stos
mov
fmulp
cmp
sub
sbb
and
imulb
push
or
xor
sub
int3
mov
xor
mov
mov
sbb
cmp
push
movsb
fcompl
or
xor
and
mov
pop
pop
icebp
cltd
movsb
leave
pop
dec
xor
mov
inc
and
mov
pop
data16
subl
sbb
pusha
jns
mov
rcr
dec
scas
pop
mov
sbb
insl
xorb
xor
sub
jne
mov
xlat
es
mov
out
sar
movsb
aad
add
and
test
test
mov
ss
roll
pop
cmp
adc
cmp
mov
jg
std
dec
popf
mov
fs
cwtl
or
movsl
mov
mov
xchg
ret
adc
xor
mov
test
lcall
lods
xchg
daa
inc
mov
fwait
xchg
sbb
test
addr16
mov
jmp
sub
adc
imul
add
xchg
or
mov
scas
inc
arpl
sub
roll
data16
scas
mov
cmp
cmpsb
push
mov
jbe
stos
movsb
fwait
or
negl
dec
xchg
bound
imul
xor
mov
movsl
mov
inc
imulb
mov
rcrl
insl
add
negl
in
cmpsl
pop
and
cmpsl
and
jae
pushf
enter
and
dec
cmpl
pop
or
xchg
inc
push
mov
sub
fwait
cmp
sbb
sbb
fcmovbe
jp
nop
mov
cmp
aad
cmpsb
imul
push
mov
popf
sub
pop
mov
fidivl
add
push
xchg
mov
cli
into
stos
mov
push
repnz
hlt
ja
sbb
jg
pop
mov
cwtl
xchg
mov
cltd
dec
push
cmp
int3
xor
test
pop
scas
fsubl
mov
sahf
mov
rcll
cmp
les
scas
int
push
adc
mov
mov
out
lret
mov
lods
inc
cli
dec
or
mov
mov
xlat
inc
neg
fdivl
or
mov
mov
mov
out
mov
xchg
xlat
sbb
aas
and
mov
xor
add
clc
popa
xchg
sub
hlt
mov
dec
addr16
std
jge
jno
cmp
mov
adc
pop
push
mov
adc
cltd
mov
cmc
cltd
mov
mov
jecxz
daa
fcmovnu
dec
push
adc
dec
shll
lea
cmpsb
sub
cmp
jne
push
out
xlat
add
imul
xchg
mov
adc
push
dec
sbb
pop
orb
mov
ret
test
jmp
sub
mov
mov
mov
mov
jecxz
or
stos
jl
ret
xchg
roll
sbb
scas
sbb
lods
push
dec
jg
mov
jno
imull
add
das
push
jmp
push
lods
and
mov
fiaddl
dec
adcb
aad
aaa
imul
mov
lods
jmp
sti
add
mov
fdivs
test
gs
xlat
leave
or
test
xorl
xchg
xor
sbb
cwtl
dec
xchg
je
loope
aaa
xor
pop
and
aas
cmpsl
mov
jae
das
jo
jge
cmpsl
neg
mov
sub
lahf
es
mov
xchg
dec
icebp
mov
test
sbb
cltd
cmc
jle
jge
mov
sahf
loope
push
scas
push
xor
add
in
pop
mov
scas
push
loop
cld
dec
mov
xor
xlat
pop
xor
pop
or
xor
mov
inc
mov
movsl
dec
fiadds
mov
mov
iret
jg
int3
jnp
mov
inc
jnp
jmp
jb
pushl
sti
mov
nop
push
scas
mov
mov
sbb
rcrl
loop
mov
imul
nop
mov
xor
test
xlat
sbb
push
push
dec
notb
adc
cli
out
cwtl
fstpt
mov
cmpsb
adc
cltd
pushf
cmpsl
lcall
daa
mov
leave
and
mov
jge
mov
mov
test
mov
scas
call
or
mov
xchg
cmpsb
je
mov
loope
sub
or
mov
cmpl
jbe
sbb
aaa
adc
push
daa
mov
mulb
and
out
cmp
push
xor
das
lahf
or
stos
mov
stos
jae
jge
lds
insb
jp
iret
popf
mov
mov
icebp
cmp
jge
push
pop
mov
and
xchg
hlt
adc
cltd
ret
fdivrl
mov
cmp
mov
mov
cmc
xor
pop
pop
cmp
add
cmpsb
test
sahf
cwtl
sti
and
dec
and
mov
push
pop
addr16
imul
sub
xor
xlat
cli
mov
daa
inc
and
cmp
fwait
mov
jb
xor
pop
into
pushf
mov
dec
ret
aam
enter
imul
cltd
test
ds
mov
jne
adc
mov
test
sub
adc
arpl
stos
lcall
or
incb
aas
scas
fwait
add
gs
mov
jnp
mov
add
inc
nop
fnstenv
popa
lods
dec
mov
lods
sub
imul
cltd
in
data16
add
stos
shr
mov
dec
xlat
mov
aaa
jns
pop
jl
and
dec
call
dec
mov
cmp
jge
and
fdivl
cli
das
imul
xchg
sbb
loop
sbb
mov
stos
sbb
aaa
out
and
mov
or
adc
push
mov
stos
xchg
lret
xchg
mov
xor
mov
add
ror
int
adc
loopne
rep
jle
scas
mov
rcpps
mov
xchg
pop
jns
je
shll
mov
mov
jmp
pushf
frstor
xor
jnp
into
pop
cmpsl
push
inc
and
mov
jmp
push
sbb
ja
mov
jns
rolb
xorl
mov
adc
imul
imul
xchg
out
iret
push
inc
lds
and
aaa
in
xchg
jp
xor
mov
or
mov
sub
mov
mov
and
inc
ror
outsl
lods
xlat
mov
jge
mov
inc
testb
pushf
mov
jnp
data16
dec
xchg
push
leave
pushf
jae
mov
mov
inc
jge
cmp
fisubl
cltd
jnp
xor
mov
das
mov
and
jl
cwtl
adc
mov
mov
cmp
icebp
mov
int3
jg
add
adc
jne
test
mov
cwtl
mov
sarl
cmp
inc
adcb
mov
sub
mov
stos
sbb
inc
lds
test
addb
mov
add
cld
jb
cmp
mov
and
mov
scas
loop
dec
mov
mov
mov
int3
rorb
mov
outsl
push
jmp
cltd
stc
mov
dec
cmp
sbb
cmp
inc
lods
clc
mov
push
lock
mov
add
js
in
scas
inc
jbe
mov
pusha
or
ficoml
addr16
outsl
aaa
xlat
jne
push
leave
sbb
pop
movsl
cmpsl
lods
enter
mov
push
sub
stos
cmp
outsl
mov
repnz
mov
mov
cmp
daa
in
or
jmp
out
lods
outsl
mov
add
sbb
xorl
sub
ljmp
mov
loop
aaa
andl
fistl
or
cmpsl
fstps
xlat
loope
sbb
cmp
addr16
out
ficoms
lea
sbb
or
jmp
add
sub
sub
mov
fbstp
icebp
cmp
jecxz
into
popf
jns
shlb
addl
icebp
ja
test
cmpsl
aas
mov
test
pop
cmpsl
out
lds
mov
jns
mov
les
lcall
xlat
xlat
adc
pop
jmp
notb
outsl
inc
pop
and
add
rcl
aas
mov
sbb
mov
sbb
das
gs
xor
and
push
imul
mov
adc
sbb
push
mov
scas
jmp
popf
inc
jno
mov
arpl
pop
lea
cltd
and
xchg
mov
pop
xor
push
mov
xchg
fiaddl
stc
outsl
dec
pushl
mov
ficoms
shrl
sahf
fsubr
ror
cmpsl
add
fidivrl
mov
mov
mov
add
xlat
push
stc
js
dec
fisubrs
mov
sub
fwait
mov
pop
sbb
jmp
scas
cmc
js
or
and
lods
pop
xchg
cmp
cwtl
pop
scas
jno
stos
mov
mov
add
jp
movsl
sub
mov
loope
int3
xchg
add
sbb
lahf
daa
mov
shlb
mov
add
mov
jl
jg
mov
cmpsb
mov
and
mov
repz
idivl
mov
rolb
test
out
movsb
fdiv
mov
sub
mov
cmpsb
mov
std
mov
lahf
dec
and
cmp
outsl
sbbl
stos
lret
aas
or
cmpsl
lahf
jge
stos
popa
daa
shlb
clc
test
repz
mov
pushf
xlat
adc
mov
fistps
aaa
test
fnstcw
or
mov
jne
imul
pop
cli
fadds
jecxz
movsl
jbe
lods
mov
stos
xchg
xchg
data16
cmpsl
cwtl
mov
mov
pop
mov
inc
mov
insb
cmp
mov
icebp
xchg
mov
add
xor
call
mov
loopne
pop
inc
mov
add
sbb
sahf
inc
cmpsl
mov
lret
shlb
cwtl
jle
xlat
das
stc
andb
fidivl
popa
or
ficoms
xlat
movsl
inc
push
cld
call
xor
mov
xor
lods
add
stc
cmp
clc
mov
fsubs
jp
mov
mov
xchg
jae
inc
sub
mov
faddl
test
pop
mov
movsb
popa
das
sbb
insl
xor
mov
xchg
dec
rcrl
cmc
push
mov
ss
mov
insl
jg
daa
sub
ljmp
pop
mov
addr16
sub
or
mov
test
inc
xor
popf
xchg
stos
daa
add
out
jne
loop
stos
ret
mov
dec
fsubl
or
jecxz
xchg
sbb
mov
in
fstps
inc
scas
cmp
push
cmp
jns
jno
shrl
pop
xor
sbb
mov
dec
clc
pop
scas
jns
xchg
mov
mov
arpl
pop
rclb
mov
mov
push
adc
cmp
scas
and
mov
scas
loopne
mov
loope
test
clc
jno
mov
test
and
sub
mov
lret
sub
inc
mov
xor
imul
mov
mov
jnp
lret
jae
inc
cmpsl
imul
and
mov
and
stos
adc
sub
mov
sarl
mov
mov
out
xlat
inc
mov
cmc
shlb
fwait
cmp
in
mov
fdivl
mov
mov
mov
mov
inc
mov
add
jno
jge
xor
inc
xchg
sbbb
rcrl
sub
mov
fsubs
cwtl
mov
test
mov
std
pop
ja
sbb
cltd
cmp
and
pop
adc
stc
sbb
mov
jge
add
jb
aaa
or
dec
mov
andb
sti
mov
pop
movsb
mov
mov
inc
mov
adc
push
jns
leave
in
xor
mov
jo
xor
mov
ret
cmpsb
sbb
scas
stos
arpl
aaa
sbbb
mov
inc
push
mov
xchg
inc
inc
stos
imul
pop
addr16
adc
jecxz
mov
out
and
pop
pop
mov
scas
dec
iret
lahf
cmp
scas
inc
ret
fsubs
mov
loopne
loope
adc
je
inc
cmc
add
adc
gs
cltd
sub
jnp
shl
or
es
xor
mov
sbb
shll
add
int3
xor
out
xchg
aad
leave
add
lret
pop
sbb
lock
lods
cmpsl
xchg
pop
mov
arpl
mov
pop
xor
std
aaa
xchg
es
sub
mov
xor
adc
or
add
ds
jnp
xchg
stc
test
sbb
jo
pop
xchg
leave
mov
mov
loopne
mov
popa
cmp
stos
lods
leave
mov
sub
push
adc
shrb
jg
push
pushf
add
lods
in
xorl
sbb
jnp
jnp
sub
mov
dec
dec
pop
aaa
mov
and
mov
stos
sub
mov
aad
scas
push
out
inc
sub
movsl
rcrb
pop
cmp
jo
mov
fsubr
daa
mov
and
xchg
ja
es
adc
in
mov
jp
jb
fildll
cwtl
sub
hlt
adc
sbb
roll
in
repz
pop
shlb
mov
add
mov
lds
inc
mov
ret
and
inc
adc
je
cmp
add
pop
mov
xorl
mov
push
sbb
aaa
cwtl
lret
push
inc
mov
add
mov
fcomps
iret
mov
cmp
pop
mov
stos
mov
mov
jnp,pt
cs
mov
rcrb
mov
pushf
stc
xorl
mov
addb
push
pop
cwtl
aas
cli
jmp
mov
pop
arpl
jns
enter
jp
mov
outsb
push
or
pop
leave
lds
pop
mov
stos
enter
or
inc
decb
hlt
cltd
lds
imul
jg
xchg
cmpsl
and
push
test
cmp
in
add
addr16
add
mov
mov
ret
int
cltd
xchg
stc
sub
lret
add
ret
out
mov
sub
cmpsl
pop
xchg
js
mov
xchg
cltd
cmp
pop
push
xor
push
fnsave
xor
imul
xor
mov
cmp
aad
outsl
push
pop
aas
jnp
nop
mov
or
jns
into
jge
mov
pop
fwait
xor
mov
or
add
push
sub
fstps
xor
jno
jne
xlat
jo
icebp
mov
cwtl
outsb
cwtl
mov
xlat
dec
out
pop
cmpsl
add
pop
xor
faddl
repnz
mov
shlb
push
fwait
lcall
fbld
cmp
addr16
rcll
xlat
xchg
cltd
lods
add
insb
mov
bound
test
dec
add
and
lcall
adc
cmp
cwtl
rcll
push
cmp
cmp
movsb
cmp
fldl
leave
add
icebp
cmp
xchg
sub
cmpsl
into
cltd
mov
xchg
fwait
repz
and
mov
icebp
ljmp
aas
fwait
js
mov
xchg
fwait
adc
cmp
mov
lret
pusha
lret
cmp
mov
fbstp
xor
mov
xor
xchg
jbe
sbb
lods
pop
dec
xchg
icebp
imul
mov
jmp
xor
and
mov
mov
mov
outsb
repnz
aad
dec
push
pop
mov
mov
aaa
sub
icebp
push
xlat
mov
cmp
mov
xor
scas
inc
mov
cmp
stos
sub
jnp
xor
lea
ja
dec
fdivrl
mov
mov
add
fbstp
mov
bound
inc
test
mov
push
fnstenv
les
in
mov
sub
dec
cld
jns
sub
mov
mov
bound
xor
pop
test
adc
cmp
outsb
fstl
xlat
add
xor
and
fwait
bound
xor
cmp
or
xlat
mov
movsl
xor
push
outsl
adc
lret
arpl
cltd
mov
lea
dec
lahf
pop
out
mov
filds
jns
mov
cmp
xor
cli
scas
rcr
arpl
xchg
jb
mov
cmpsb
es
dec
lret
pop
mov
add
xchg
cwtl
mov
roll
pushf
mov
inc
ret
push
sbb
jb
lahf
lods
scas
loopne
xlat
mov
cmpsb
push
cs
pop
inc
data16
lret
xchg
mov
mov
cmp
dec
mov
scas
mov
andl
mov
mov
addb
mov
or
inc
ss
inc
cmp
jns
lods
lret
std
mov
xchg
repz
iret
fcompl
inc
xlat
xchg
lret
xchg
stos
js
pop
cwtl
dec
xor
sbb
inc
sub
cmp
bound
pop
leave
mov
stos
mov
cwtl
ja
es
sbb
mov
jle
test
sub
ret
mov
lds
mov
cmp
cwtl
outsb
pop
cmp
inc
stos
mov
icebp
subb
mov
jle
pop
push
jmp
into
fstl
daa
sbb
xchg
xchg
addr16
in
pop
into
out
cmpsl
andl
mov
cmpsb
scas
aas
out
je
or
xlat
fwait
imul
sarb
jmp
loop
test
cmc
sub
fwait
lods
fdivs
push
mov
xchg
mov
pop
popf
repz
rclb
mov
pop
xchg
sub
sub
sbb
fdivl
mov
addr16
daa
adcl
icebp
ja
xlat
jae
aas
mov
cmp
push
jo
jl
pop
add
inc
xor
idivw
pop
and
mov
out
rcrl
aaa
sbb
and
sbb
cmp
int3
mov
jle
test
adc
repnz
mov
iret
mov
psrlw
mov
shll
cmpsb
repz
sbb
jg
ficoms
cltd
cs
inc
xchg
movsb
pop
mov
push
jnp
sub
xlat
fwait
sub
cmp
jge
mov
mov
ficoml
jns
out
lcall
cmpl
roll
push
inc
sahf
sbb
jns
movsl
insl
fsubrl
or
pop
adc
lds
call
lods
fmuls
bound
repnz
hlt
cmp
cltd
loopne
clc
pop
cltd
das
mov
fwait
lods
and
test
int3
push
sbb
mov
dec
mov
aas
mov
add
addl
xor
js
cwtl
stos
in
mov
sbb
aas
pop
stc
or
adc
lretw
mov
fbld
mov
mov
lods
clc
mov
fcomps
mov
add
sub
mov
jne
dec
fwait
xchg
sarl
ficompl
pavgw
out
pop
mov
or
bound
dec
or
aas
fdivl
aad
int3
scas
sbb
add
out
inc
mov
nop
stos
or
int
aad
fnstcw
icebp
xchg
mov
sbb
or
xchg
mov
repz
shll
xchg
outsl
lahf
fcoml
repz
ss
fcomps
fiaddl
sbb
add
scas
lahf
sarl
pop
mov
sub
mov
xchg
fstpt
int3
pop
lahf
mov
push
shrl
push
xchg
stos
mov
push
sbb
jle
pop
insb
test
mov
fimuls
mov
xchg
daa
ljmp
lret
cmp
jne,pt
cltd
mov
lcall
pop
loop
and
lods
xorl
mov
xlat
ret
push
adc
imul
and
sub
adc
jg
xorl
and
lods
iret
testb
loop
repz
mov
jae
popa
sub
sbb
mov
int
divl
add
and
dec
scas
cmpsl
push
test
add
push
pop
cli
mov
into
ja
jno
lahf
mov
daa
mov
adc
jns
popa
das
dec
sbb
fwait
lahf
ja
imul
xchg
mov
imul
xor
mov
mov
or
int
clc
mov
sbbb
cmc
and
in
sbb
mov
jbe
mov
and
mov
mov
movsl
pop
sbb
mov
iret
test
mov
mov
push
fsub
bound
ds
mov
mov
mov
sbb
jne
cltd
pop
loope
imul
mov
ret
xlat
clc
repz
xchg
test
push
subl
mov
pop
mov
adc
fidivs
and
mov
fs
xor
xor
imulb
jbe
add
inc
fs
pusha
lods
xor
aaa
xchg
es
loop
mov
test
and
mov
lods
arpl
popa
inc
jmp
mov
mov
fsubs
pop
pop
mov
push
loope
out
and
mov
jne
jbe
repz
fcompl
push
add
scas
test
test
mov
data16
daa
mov
mov
jae
mov
cld
cmp
add
nop
testl
push
movsl
mov
mov
das
call
in
jl
fistpl
cwtl
xchg
imul
test
jl
sub
pop
dec
test
jns
push
jbe
mov
adc
xor
lahf
cli
sti
add
mov
sub
dec
xor
push
ficompl
notb
scas
ss
xor
aas
out
icebp
in
pushf
sbb
or
mov
gs
sbb
cmp
dec
pop
inc
cmc
inc
xlat
mov
xor
dec
mov
jne
jmp
test
mov
push
or
add
pop
je
lahf
int3
mov
hlt
xor
sbb
mov
icebp
adc
shll
fdivs
sbb
out
insl
sub
xchg
jnp
sbb
jge
adc
mov
pop
loope
cmpsl
loop
lret
mov
xchg
test
jns
mov
ret
iret
pop
lret
loopne
add
cs
inc
out
mov
inc
push
repz
mov
mov
mov
sti
or
ficompl
and
mov
dec
mov
jne
jae
inc
rcll
sarb
jp
fdivrl
or
ret
shl
sarb
leave
cmp
adc
or
xchg
add
lcall
push
mov
mov
xchg
inc
sahf
adc
mov
loopne
or
fwait
cmpsl
jns
cmpsl
out
push
imul
fwait
mov
inc
mov
fnstcw
pop
cmpsl
aaa
scas
pushf
jbe
out
or
push
pop
xchg
cmp
mov
push
cli
cwtl
push
cmp
add
jp
mov
aam
test
add
cmc
mov
push
mov
pop
mov
daa
xchg
mov
add
imul
and
hlt
cltd
mov
test
add
mov
test
mov
inc
data16
cld
in
idivb
cwtl
dec
aaa
cmp
pop
filds
insb
mov
xchg
jne
cmp
imul
xor
sar
sub
pushf
mov
sbb
lods
cmp
xchg
add
std
mov
inc
and
and
cwtl
psllq
incl
mov
or
jge
xchg
jne
aam
cltd
mov
rorb
sbb
repz
popa
inc
push
push
pop
aaa
adc
fs
cmp
xor
je
es
mov
aaa
or
loop,pn
mov
pop
jp
call
cmpsl
mov
stc
aaa
cltd
fwait
jmp
scas
add
addr16
cmp
iret
in
scas
pop
adc
cmc
push
mov
push
jo
jae
sbbb
xor
pop
mov
sub
or
push
mov
jecxz
xchg
mov
dec
cli
ds
cmp
out
mov
jns
mov
jmp
jb
stos
xor
inc
pop
scas
cmpsl
cwtl
mov
sub
test
fbld
inc
out
cmpsl
pop
mov
sub
enter
jns
mov
jle
inc
push
jns
push
sub
test
das
adc
in
push
xor
lods
scas
icebp
dec
mov
fisubl
or
sbb
mov
push
scas
add
lods
jp
pushf
stos
mov
mov
fbstp
fdivr
mov
pop
and
stos
mov
lret
cmpsb
mov
cmp
das
dec
jecxz
mov
mov
jg
push
fadds
mov
fldt
mov
pop
daa
mov
cs
push
xchg
cwtl
fs
sub
stos
hlt
cmpsb
dec
test
cltd
adc
cmc
fwait
mov
flds
dec
jp
movsb
fs
gs
xchg
test
jo
js
mov
jg
jge
addr16
pop
xchg
dec
xchg
pop
or
mov
scas
mov
data16
leave
std
and
mov
fwait
mov
xor
adc
adc
into
mov
rcr
out
push
mov
mov
in
cmp
lret
dec
and
mov
mov
sbb
inc
cmp
adc
xlat
pop
inc
jecxz
jns
or
ret
clc
jle
jae
scas
addr16
push
loope
mov
fcoml
mov
pop
lea
mov
subl
mov
and
xor
mov
pop
jecxz
pop
or
lods
xchg
loopne
movsl
int3
aaa
pop
mov
lods
push
mov
in
fimuls
mov
dec
sbb
push
idivb
xor
jbe
pop
fidivrs
xor
movsl
mov
push
fsubr
je
xor
movsl
test
cmp
adc
mov
repnz
out
outsl
sbb
cmp
jge
push
push
popa
cs
ficoml
adc
fmull
xchg
mov
inc
pop
xchg
and
sbb
mov
fsubl
xchg
lods
mov
scas
xlat
mov
ja
stc
mov
sub
xor
fcomip
in
and
lahf
scas
jnp
or
mov
ds
adc
xlat
inc
in
xor
shll
xchg
mov
push
cwtl
scas
nop
pop
dec
bound
xlat
jae
push
mov
cmc
data16
cli
sub
imul
fcompl
add
rorb
cwtl
aas
testl
arpl
mov
cmp
xlat
fwait
sub
adc
xchg
xor
sbb
mov
pushf
jle
int3
push
in
aaa
fs
jno
ljmp
ret
mov
cltd
mov
repnz
xor
lcall
sbb
pop
das
mov
and
inc
cmp
test
mov
mov
negb
mov
or
add
fldenv
push
jp
das
xor
cwtl
inc
sbb
xor
mov
mov
cmpsb
lcall
lret
jae
xlat
scas
push
cmc
and
mulb
test
fidivs
bound
lods
das
pop
jmp
cmp
xor
mov
jno
adc
mov
add
scas
and
jno
es
push
or
insl
mov
jecxz
lret
aam
push
addb
push
std
cmp
es
negl
imul
rclb
fwait
icebp
or
fmuls
jb
cmpsl
push
xchg
mov
es
fwait
adcb
aam
mov
mov
mov
xchg
je
dec
xor
cmpsb
jns
dec
fidivrl
pop
sub
mov
or
push
mov
cmpsl
popf
rclb
mov
into
jae
inc
movsb
add
lods
mov
xor
inc
pop
imul
add
arpl
mov
cmp
orb
in
test
sub
dec
add
push
mov
mov
add
and
stos
pop
cltd
mov
rcrl
mov
js
xor
lods
add
rcrb
icebp
and
out
aaa
sbb
aaa
mov
mov
test
out
mov
jae
xor
mov
xchg
mov
fwait
outsl
cmc
mov
xor
cli
jo
icebp
mov
daa
mov
or
add
bound
scas
rorl
cmpl
xchg
xlat
or
mov
icebp
or
ficompl
push
add
sbb
ja
inc
mov
mov
mov
push
push
pop
jnp
jo
jb
data16
mov
cmpsb
and
sarl
mov
ljmp
mov
mov
jp
and
mov
and
mov
xchg
test
ja
inc
call
icebp
out
cmpsl
cmc
pop
adc
mov
mov
jb
sub
fcom
mov
loope
cli
xor
stos
mov
repz
lods
jo
push
lea
sub
fwait
cs
ret
mov
mov
fmul
dec
lahf
or
mov
pop
ret
or
out
les
push
test
add
aaa
push
xchg
cwtl
or
inc
push
test
movsl
mov
pop
add
hlt
lret
lahf
inc
mov
icebp
bound
jnp
mov
cld
mov
sub
loop
add
fwait
mov
mov
sbb
inc
mov
or
lods
mov
out
rep
mov
add
xchg
jnp
cmpsl
mov
adc
jae
insb
lcall
mov
xor
mov
insb
sub
add
inc
push
mov
inc
lds
mov
shl
iret
fwait
repnz
daa
xchg
jmp
pop
cli
out
sub
jno
idivl
jge
ljmp
scas
popf
cli
notl
aas
arpl
out
gs
imul
mov
rorb
xor
mov
mov
aad
mov
pushf
js
and
out
push
cmpsl
in
xor
xchg
add
cmpsb
jmp
mov
cltd
pusha
cmp
add
ja
pop
adcl
addb
mov
leave
nop
in
hlt
mov
call
xor
xorl
not
jp
and
notl
aas
or
mov
iret
sbb
inc
mov
mov
mov
hlt
and
lock
mov
test
and
fstpt
jl
jne
xlat
mov
push
mov
jecxz
lahf
fwait
gs
xlat
sbb
test
addb
lahf
aas
jmp
or
mov
leave
xchg
mov
scas
mov
and
jo
cmpb
mov
pop
dec
push
jae
repz
gs
popa
ret
mov
lock
add
cmc
pop
lahf
fsubr
mov
popa
adc
in
mov
or
and
test
xchg
icebp
xor
add
mov
dec
aam
mov
jmp
mov
sbb
lahf
jg
jp
mov
sub
mov
mov
or
jb
xor
pop
jae
cli
mov
gs
dec
fsubrs
stc
les
xchg
loopne
mov
mov
pop
jno
inc
push
jne
mov
les
out
in
sub
xchg
faddl
or
out
inc
rorl
cwtl
out
rcrl
test
or
jno
adc
out
sbb
scas
rcl
shll
int
std
mov
imul
push
push
inc
push
cmp
imulb
xchg
cwtl
mov
les
nop
lds
fidivrl
and
mov
inc
mov
adc
andl
shll
lock
mov
add
add
nop
sub
push
adc
movb
mov
shrl
scas
xlat
mov
or
mov
imulb
lahf
sbb
mov
enter
cmc
and
lods
sub
jae
push
push
adc
add
mov
mov
arpl
cltd
es
cli
pop
inc
ds
scas
jno
ljmp
inc
popf
mov
push
insl
call
out
pop
test
pop
popa
mov
stc
jmp
jp
pop
xor
mov
imul
sbb
out
out
test
cmpb
mov
cmp
loop
pop
sbb
add
pop
push
sahf
jae
stos
xor
divb
pop
testl
mov
xor
testb
jnp
push
rorb
rcrl
sub
test
out
adc
and
int3
outsl
ss
popa
mov
inc
sbb
fs
dec
and
idivb
bound
aam
in
or
add
int
cmp
xor
lds
mov
aaa
pop
out
mov
push
add
daa
fidivl
mov
test
xchg
cmp
or
ja
push
and
fsubr
add
stos
stos
shlb
cmp
push
mov
aad
cltd
aaa
xlat
xor
fwait
cmc
adc
mov
aas
xchg
mov
pop
ret
aam
cltd
dec
fwait
das
shrl
xorl
and
xor
dec
xchg
pop
push
bound
mov
add
mov
mov
jb,pn
rolb
jo
sbb
xchg
jne
push
inc
jns
cld
icebp
lods
mov
ja
lods
stos
mov
jns
and
jmp
lahf
mov
mov
jno
test
sbb
insb
stos
pop
mov
dec
movsl
fnsave
xlat
sarb
lcall
in
mov
push
xlat
fcomps
inc
ds
sbb
and
and
adc
imul
jnp
mov
lret
mov
mov
sbb
cwtl
inc
mull
push
mov
in
sub
test
aad
loopne
push
lcall
scas
outsb
mov
cmp
mov
inc
mov
fnstenv
sbb
mov
lods
cmpsl
aam
movsl
push
repz
mov
and
test
int3
sub
xor
pop
xchg
adc
jle
xor
pop
mov
mov
loope
xor
mov
and
mov
push
sahf
mov
or
cli
pushf
out
fcomi
dec
and
repnz
mov
aas
hlt
mov
jb
jg
and
into
push
bound
insl
mov
sub
lcall
push
aam
mov
jnp
mov
pushf
imul
hlt
dec
rcrl
mov
mov
mov
cli
fwait
sbb
pop
sbb
cwtl
ss
ss
movsb
cs
jnp
cmpsb
jns
pop
sbb
shlb
fsubrl
mov
inc
inc
ficompl
push
mov
enter
cltd
cmpsb
jge
jae
mov
jecxz
cwtl
cli
add
outsl
out
xor
scas
leave
sub
icebp
mov
aad
inc
dec
sbb
mov
xor
out
jns
stos
mov
lea
cmpsl
and
mov
mov
mov
sbb
push
push
mov
mov
xor
mov
mov
mov
fnstenv
jge
scas
cli
mov
leave
je
mov
or
sub
add
ret
mov
mov
cmpsl
xchg
icebp
pop
adc
fwait
cmpsl
jmp
rcrb
imulb
rcrl
push
cld
pop
outsb
out
fxam
shlb
icebp
sub
cmpsl
xchg
sub
stos
lds
out
push
pop
mov
dec
popa
cwtl
iret
sbb
mov
xchg
mov
loope
js
mov
ss
add
aas
insl
mov
lahf
cwtl
pusha
jge
out
sbb
cltd
mov
inc
repz
xlat
stos
mov
dec
mov
lcall
pop
xchg
in
rcrl
jae
dec
jp
pop
push
daa
mov
icebp
xor
cld
xchg
fwait
mov
cmpsl
js
loop
insl
fdivl
mov
pop
mov
mov
push
jge
add
paddsb
jp
out
push
mov
test
mov
imul
add
into
arpl
fnstcw
mov
xor
mov
inc
stos
pop
jmp
mov
xchg
xorb
jno
outsl
mov
imul
adc
cmp
outsl
add
sbb
mov
test
fwait
mov
mov
mov
mov
dec
popa
adc
xchg
mov
sub
adc
or
pop
imul
ret
cmc
popf
adc
mov
xchg
and
cmpsl
loop
or
mov
cli
insl
sbb
adc
jb
inc
mov
je
mov
pop
popf
cmpb
adc
inc
jl
and
mov
cmpsl
sub
push
es
add
jns
sbb
lods
push
sbb
dec
cli
scas
aam
pusha
movsl
mov
sbb
cmpsb
test
in
xchg
in
mov
cwtl
adcb
out
pop
imul
cltd
add
arpl
mov
cltd
mov
mull
mov
jo
cmpsb
xchg
jg
xchg
adc
repz
addr16
sbb
and
fwait
push
xchg
scas
mov
lret
xchg
mov
push
test
xor
aaa
dec
cwtl
insl
mov
fdivrs
adc
std
fistpll
jge
mov
int
and
adc
and
repz
or
ja
xlat
mov
adc
mov
adc
or
inc
nop
cld
int3
sbb
repz
jmp
mov
cmp
out
nop
divl
cltd
jb
cmpsl
movsb
mov
add
aad
inc
test
mov
into
sbb
mov
inc
add
mov
push
adcl
push
xor
lahf
xchg
cmp
sbb
nop
mov
mov
addr16
sbb
mov
inc
pop
cmp
mov
pop
jns
adc
movsb
push
sbb
or
inc
imul
push
in
cmp
ret
les
cmp
adc
push
xlat
dec
stos
fdivr
imul
aad
mov
push
mov
hlt
cmpsl
shrb
mov
retw
movhps
xor
loop
fiaddl
pop
mov
lret
rep
notb
popf
xlat
adc
add
lods
pushf
inc
push
mov
lret
sub
push
lret
mov
sbb
andb
repz
jbe
jns
pop
ficompl
cmp
pop
cmp
adc
gs
stos
adc
mov
pop
or
mov
icebp
cmc
pop
xor
int3
pop
mov
xor
and
roll
icebp
push
mov
repz
cmpsl
in
adc
xlat
push
pop
jecxz
ret
xor
mov
aaa
cmp
ror
dec
push
fsubrs
mov
popa
cli
mov
xchg
cwtl
out
lock
jne
jae
inc
add
mov
mov
insl
dec
mov
jg
sub
nop
fwait
mov
daa
pop
sbb
mov
cmp
inc
mov
movsl
dec
xor
or
pusha
add
cmp
js
aaa
loopne
scas
movsb
jle
jg
cmp
inc
mov
cmc
jns
imul
sbb
xchg
fistpl
mov
mov
and
mov
cltd
jb
cmp
stc
xchg
mov
adc
mov
push
out
test
imul
push
add
aaa
jmp
mov
adc
mov
movb
mov
dec
jle
jnp
scas
adc
popa
and
push
jmp
xor
jnp
xlat
adc
xchg
sbb
outsl
pop
xor
xor
subps
sub
cld
xor
subb
mov
xor
xlat
add
pop
xchg
sbb
mov
cltd
scas
ja
sub
mov
adc
cs
cwtl
inc
pop
inc
jnp
add
jmp
sub
loope
fists
jae
addl
cmp
fwait
push
push
mov
xchg
or
pop
test
mov
cwtl
adc
sbb
mov
std
fwait
cmp
mov
pusha
cmpsl
and
jp
add
mov
xor
cmp
in
cmp
stos
das
js
sbb
loopne
inc
or
outsb
mov
cmp
mov
rclb
xchg
arpl
pop
add
fbstp
sahf
addr16
mov
sub
xor
xlat
fwait
pop
fcoml
bound
xchg
loope
mov
xor
shrl
inc
mov
sbb
lahf
cmp
mov
sbb
push
scas
fldl
cmp
bound
mov
test
mov
mov
aas
add
data16
shll
test
fwait
idivl
pop
adc
cltd
fucomip
jp
movsb
dec
popf
xchg
xlat
dec
mov
inc
mov
lods
mov
mov
repnz
push
pop
lahf
mov
call
push
js
pop
pop
insl
pushf
divl
and
mov
push
orb
cmc
mov
mov
jae
repz
xor
je
mov
sbb
adc
sti
pop
nop
inc
sbb
cmpb
jl
push
stos
sbb
fwait
push
mov
push
jge
mov
jbe
mov
cmp
pop
mov
xor
jae
dec
fs
mov
mov
sbb
pusha
aam
sti
mov
test
mov
and
and
mov
jnp
pop
lcall
or
mov
insl
popf
cmp
jge
add
jae
dec
fwait
hlt
mov
push
cwtl
out
pop
mov
jg
add
mov
rcr
flds
lods
stos
xlat
mov
cld
sbb
mov
and
mov
dec
xlat
jne
pushf
popa
or
mov
fidivs
popf
and
cltd
imul
add
mov
xchg
xchg
dec
add
flds
rorb
popa
sub
push
xlat
xchg
inc
xchg
push
cmpsl
lret
add
outsb
insb
sbb
icebp
jge
aad
test
pop
mov
mov
ljmp
mov
mov
mov
cmp
fdivs
pop
push
cmc
movsb
outsl
lahf
test
sub
mov
mov
xchg
sub
xchg
lea
mov
out
aas
mov
push
sbb
arpl
inc
mov
mov
inc
ja
ret
cltd
aad
scas
fs
test
insb
call
and
adc
or
pusha
movsl
shll
loopne
jecxz
add
loope
cmp
adc
mov
in
stc
mov
xchg
mov
out
fs
xor
stos
mov
rorb
mov
dec
gs
hlt
scas
mov
pop
xchg
jle
scas
fildll
mov
loop
ljmp
cmp
lahf
mov
scas
fwait
and
movl
icebp
cmp
out
fwait
pop
ret
in
out
jg
sbb
lret
inc
mov
mov
jne
data16
mov
sbb
mov
subl
icebp
clc
fs
mov
mov
cwtl
and
mov
test
mov
xchg
and
mov
mov
mov
nop
mov
jne
mov
rolb
lock
js
jbe
ficomps
mov
mov
gs
mov
jne
cmpsl
mov
adc
mov
jno
cmp
fiaddl
mov
mov
movsl
aad
push
xor
mov
and
mov
stc
sub
rcr
mov
mov
cmp
push
lahf
mov
and
insl
das
jl
mov
gs
sarb
inc
stc
mov
cmp
and
sub
mov
in
adc
mov
adc
mov
mov
xor
xorb
imul
stos
insl
loope
cmp
repz
sub
push
leave
mov
jg
push
sub
iret
and
add
movsl
test
shll
cmp
jnp
mov
mov
push
or
mov
lods
enter
xchg
pusha
test
andb
mov
shlb
gs
unpckhps
idivb
iret
test
cmp
sbb
xchg
lcall
cmp
daa
cwtl
arpl
ret
sub
mov
fmul
dec
xchg
dec
mov
test
mov
sbb
mov
fwait
jns
xchg
mov
cwtl
mov
mov
xchg
pop
cmp
xor
mov
mov
mov
mov
mov
mov
mov
mov
pop
test
pop
or
dec
popa
aaa
mov
sbb
cltd
lods
mov
das
mov
and
int
pop
adc
jb
mov
and
jo
aaa
and
scas
or
xlat
add
xlat
xor
cmp
das
mov
and
mov
cmp
xchg
scas
push
out
ss
cwtl
mov
add
push
pop
orl
push
mov
xchg
mov
mov
fildl
dec
rorl
mov
push
pop
fnsave
xor
out
dec
lods
scas
hlt
fcoms
andl
push
xchg
mov
add
das
dec
mov
cmp
xor
call
mov
lret
mov
stos
stc
insl
pop
pop
in
and
cmpsb
mov
mov
cmpsl
negb
xchg
mov
add
fdivrs
stos
shlb
mov
daa
lods
mov
insb
push
dec
loopne
mov
xor
int
sub
repnz
ljmp
lret
bound
xlat
ja
mov
inc
inc
sbb
mov
je
mov
and
cli
mov
scas
dec
jb
pop
push
inc
mov
sub
fwait
fwait
lock
mov
into
mov
sbb
mov
mov
lcall
mov
ljmp
subb
je
dec
xchg
das
cmp
imul
rdpmc
ds
xchg
mov
scas
add
pop
sub
mov
inc
xor
shlb
test
data16
in
enter
cltd
scas
xor
mov
and
inc
sbb
pop
dec
dec
lods
push
out
mov
mov
mov
int
jo
insb
stos
imul
mov
int3
loope
cltd
and
mov
pop
repz
jmp
mov
mov
icebp
jns
xor
data16
pop
cld
xlat
push
xchg
mov
push
ja
push
imul
xchg
test
mov
pop
mov
xchg
xor
andl
adc
pop
sarb
xor
mov
and
ljmp
jbe
mov
adc
dec
xchg
mov
cmp
mov
or
cwtl
fdivrs
adc
ret
ss
mov
push
test
jge
jbe
fwait
and
repz
mov
lods
pop
mov
xor
jmp
jbe
cmpsb
push
mov
lahf
psubb
test
hlt
dec
xchg
lcall
stc
mov
cltd
jp
or
sbb
outsb
movsb
popf
xor
xchg
jae
loope
aas
imul
mov
mov
ss
mov
lret
sbb
lods
xor
inc
sbb
sti
fs
and
adc
rorl
insl
jge
fnstsw
movsb
xor
jnp
mov
fwait
xchg
jg
vmwrite
xchg
aad
movsb
lcall
outsb
mov
adc
lods
es
push
movsl
mov
add
cmovnp
rolb
loop
dec
es
pop
popa
fwait
stc
jge
icebp
repz
arpl
ss
xor
lss
popa
addl
adc
dec
and
mov
aaa
inc
dec
test
int3
sub
scas
mov
add
ss
jge
xchg
mov
xchg
mov
pop
daa
test
mov
cmp
sbb
addr16
cs
idivl
mov
adc
es
mov
and
add
xor
loope
inc
mov
xor
out
and
leave
xchg
cmpsl
cmc
push
test
push
icebp
cltd
into
imul
inc
xorl
loop
cmpsl
or
js
sbb
out
rclb
test
fnsave
xor
cmpb
insl
mov
incl
push
xchg
fists
mov
mov
cmpsl
fwait
sub
dec
hlt
divb
mov
daa
aas
push
cmpsl
aad
jae
pop
insl
pop
jbe
shlb
stos
inc
aaa
xchg
and
sbb
push
push
mov
mov
lret
mov
mov
inc
ljmp
jo
fwait
xorb
add
mov
iret
lea
jns
movsl
jno
scas
ja
push
mov
fwait
loope
or
pop
int3
stos
js
inc
repz
pop
fisubrs
mov
sbb
leave
sub
jns
xchg
mov
test
hlt
mov
jg
cli
int3
cs
fcomps
call
scas
jl
adc
xchg
or
jne
std
iret
stos
into
arpl
scas
and
cmc
cmpsl
mov
sahf
arpl
movsl
clc
sbb
pop
cmp
pop
scas
fidivs
dec
rcll
jp
dec
test
hlt
mov
cmpl
pop
movsb
pop
stc
xchg
push
pusha
inc
out
scas
add
cmp
mov
cmp
test
pop
lcall
xchg
adc
sarl
xlat
aas
inc
xchg
testb
jns
mov
pop
mov
mov
stos
xchg
mov
xor
outsb
inc
in
insl
lcall
pop
data16
sbb
mov
jl
and
xchg
mov
xor
mov
fdivs
sub
test
mov
arpl
mov
cmp
fwait
mov
or
divb
dec
mov
jp
imul
sub
sub
push
pop
add
les
sbb
test
mov
xor
xchg
imul
push
into
repnz
cmpsl
push
mov
xchg
fwait
mov
popf
mov
xorl
dec
or
data16
push
jge
ret
sbb
mov
jns
mov
xor
xor
arpl
pop
rcl
adc
sub
popf
mov
mov
mov
es
or
cwtl
mov
movsb
lret
xchg
icebp
mov
daa
mov
shl
lret
filds
inc
pop
mov
cwtl
addr16
sbb
mov
mov
ss
xchg
sbb
fidivl
mov
jo
xchg
sub
adc
mov
mov
mov
mov
sbb
in
xchg
and
sub
nop
mov
dec
fisttpl
and
fdivs
adc
jge
iret
xchg
shlb
or
or
xor
sub
mov
outsl
imul
mov
jecxz
cmp
sar
mov
sbb
add
int3
jle
mov
sub
mov
mov
push
and
fdivrl
jno
mov
sub
rcll
ret
fbstp
mov
mov
inc
and
jne
cmc
mov
add
pop
popf
jbe
jno
sbb
dec
xor
cwtl
insl
mov
xchg
stos
push
dec
add
lods
ficompl
in
xchg
jno
scas
jbe
adc
xlat
xor
mov
repz
add
pop
cmp
xor
mov
add
pop
mov
into
mov
xor
sub
arpl
pop
movsl
aaa
cmp
pusha
push
mov
dec
icebp
call
das
subl
mov
negb
xchg
push
divl
sub
fsub
adc
mov
pop
or
cmpsb
cmc
mov
mov
pop
sub
sub
ret
daa
shll
addr16
lods
leave
sarb
into
lods
jb
jge
mov
bound
divb
mov
add
mov
mov
xchg
lret
cs
mov
dec
test
scas
sbb
xchg
mov
jg
popa
add
bound
cld
push
jbe
mov
clc
repnz
lds
movsl
ss
mov
cmp
inc
jb
mov
cmpsl
pop
sbb
dec
enter
cmp
aad
loopne
push
inc
mov
xchg
fidivl
and
mov
push
into
mov
mov
adc
mov
movsl
or
test
arpl
mov
fwait
adc
rorl
xlat
mov
xor
mov
pop
fsubr
jnp
sbb
in
cmpsl
mov
mov
cltd
pop
add
mov
or
test
mov
mov
stos
lea
fistps
aaa
in
repz
sbb
icebp
mov
scas
cmc
ljmp
loop
mov
lret
insb
je
cwtl
mov
daa
xchg
repnz
cmpsl
inc
sar
mov
jne
lods
mov
xorb
and
cmpsl
pop
ret
enter
fwait
inc
fcoml
test
arpl
xchg
xor
aas
sbb
cwtl
mov
inc
fdivs
cmp
dec
mov
mov
cltd
jmp
loopne
mov
and
fwait
mov
js
daa
and
loope
mov
mov
dec
inc
fsubs
mov
fistpl
ret
mov
pop
xchg
in
lahf
push
or
add
dec
jl
mov
mov
loop
xchg
ffreep
xor
cmpl
add
mov
push
mov
and
rcr
pop
xor
shll
mov
fwait
pop
movsl
pop
icebp
or
mov
mov
jp
or
mov
arpl
dec
lcall
hlt
inc
xor
pop
mov
out
bound
push
jg
mov
repnz
mov
rolb
inc
fdivrl
mov
shll
sbb
stos
mov
stc
xlat
push
xorb
cmp
push
mov
rcrl
jp
mov
mov
outsl
xor
jns
mov
mov
adcb
jmp
inc
imulb
cltd
mov
das
dec
xor
or
and
xor
cmp
mov
std
mov
sub
cmc
mov
mov
testb
jb
adc
frstor
mov
cwtl
xchg
inc
daa
fwait
xor
dec
addr16
ret
movsl
jle
hlt
xchg
movsl
mov
sbb
fwait
mov
iret
mov
cmp
pop
mov
leave
shlb
mov
scas
inc
pop
and
cwtl
outsl
rolb
push
mov
pop
add
jle
mov
xlat
pop
inc
data16
mov
jbe
in
repnz
je
mov
mov
or
and
shrb
or
addr16
mov
mov
cmpsl
test
movsl
mov
inc
mov
jg
xor
push
fiaddl
sarl
pop
lcall
stos
mov
sbb
cmp
inc
std
mov
imull
jl
leave
push
mov
imull
and
jnp
cs
cmpsl
std
cmpsb
aam
int
push
int3
cwtl
mov
fwait
dec
stos
movsb
pop
mov
and
mov
jno
lods
stc
test
mov
inc
loop
jb
mov
pop
orl
mov
out
jp
push
push
lcall
mov
cld
sbb
cwtl
test
jle
scas
jecxz
sub
ss
fwait
addr16
gs
xchg
mov
enter
mov
jl
pop
int
clc
and
xchg
mov
sahf
psllw
add
add
jge
repnz
pop
xchg
movsb
scas
pop
addr16
inc
loope
fsts
mov
mov
jp
cwtl
cltd
addr16
and
jns
fisubrl
xor
clc
repz
cld
adc
mov
scas
mov
fists
jg
imul
sti
mov
or
ror
add
imul
lods
mov
lahf
add
mov
push
mov
jae
cmp
loop
cmpsl
aas
punpckhbw
mov
mov
scas
sbb
mov
addr16
test
cwtl
int3
inc
add
in
faddl
xchg
movsb
sub
mov
mov
movsl
sub
test
mov
rcrl
inc
mov
ja
or
mov
mov
mov
jns
jae
push
fildll
sbb
repnz
arpl
lds
or
sub
cmp
jp
sti
xor
xchg
pop
xlat
add
faddl
outsb
sbbb
int3
adcl
cmp
movsb
and
call
pop
out
sbb
sbb
cli
orl
mov
sub
int
mov
inc
movsl
xlat
fwait
inc
in
ds
xchg
scas
pop
mov
and
xor
repz
sbb
jp
pop
mov
xor
sbbb
shll
sub
test
sbb
mov
push
or
mov
lret
imul
cmp
jge
or
cmp
enter
lods
jp
adc
in
ret
pop
push
hlt
pop
cwtl
test
es
movsb
ficompl
repz
mov
mov
addb
mov
movsb
and
popa
mov
push
jnp
xchg
xchg
xor
icebp
push
mov
pop
push
sub
mov
add
sbb
xlat
bound
repz
pop
mov
out
ds
jae
lods
fwait
sbbl
inc
fcomi
mov
movsb
in
daa
ds
inc
xor
mov
mov
pop
push
xorl
ja
mov
lock
fidivs
adc
xlat
rcrb
call
fadds
test
std
dec
sahf
add
adc
arpl
div
cltd
cmp
int3
lock
jnp
into
push
cmp
dec
mov
repnz
xor
loop
jns
xor
sarl
aad
negl
jecxz
movsl
xchg
imul
jns
repz
push
fwait
cmp
lds
fcoml
inc
sbb
cmp
cmpb
mov
ficoms
add
dec
dec
ret
gs
cmp
mov
lods
pop
add
loop
mov
scas
ficoml
cltd
arpl
test
sti
scas
mov
aaa
xchg
pop
lods
cmpsl
jae
push
inc
cmp
lret
push
ret
mov
fildll
negb
inc
mov
mov
mov
cmp
mov
bound
pop
pop
inc
push
inc
pop
mov
cltd
cmp
xor
and
mov
enter
out
add
mov
pop
aaa
dec
mov
js
mov
lods
mov
dec
imul
fs
rclb
dec
repz
scas
out
shll
mov
in
mov
add
adc
repnz
hlt
adc
sub
movsb
mov
sbb
cmpsl
jnp
sarl
movd
aas
fnstsw
in
mov
lahf
test
mov
imul
mov
fadd
negl
mov
in
stos
inc
sub
outsl
mov
outsb
cld
out
and
lcall
mov
lock
ss
vmread
mov
les
xlat
ficoms
cmc
mov
scas
fs
lcall
cmp
ss
xor
jbe
fadds
mov
mov
sbb
stos
lahf
clc
andb
lock
cmp
jae
mov
add
jmp
sbbl
imul
sub
sub
arpl
cwtl
mov
adc
mov
repnz
xchg
adc
test
mov
lods
add
rorl
ret
add
lcall
inc
daa
out
dec
mov
mov
sbb
and
sbb
xchg
mov
mov
dec
cwtl
or
push
roll
xchg
inc
scas
pop
and
mov
mov
or
sub
lret
dec
ss
loop
xchg
roll
cmp
mov
mov
cltd
cmpsl
pop
sbb
ds
scas
jb
test
andb
cmc
and
add
jp
cmpsl
test
test
mov
sbb
add
popf
adc
xchg
movsl
aaa
scas
das
outsb
mov
and
cmpsl
std
shlb
bound
cltd
jnp
add
pop
mov
xlat
mov
ret
mov
daa
mov
movsb
inc
xor
movsl
pusha
and
fcmovnb
jl
mov
jmp
data16
jnp
stc
imul
scas
mov
and
lret
inc
push
fistl
mov
or
xor
dec
cltd
dec
or
mov
movsb
mov
ss
pop
push
inc
out
mov
mov
test
loop
push
mov
adc
lods
jae
fs
imul
sub
mov
repnz
and
cmp
jns
lret
pop
cmp
scas
sbbl
sub
je
fs
imul
mov
inc
pop
addr16
gs
dec
mov
cmpsb
pop
mov
sbb
sub
mov
mov
mov
push
and
push
mov
push
repz
scas
das
icebp
cli
xor
sub
outsb
mov
cmpsb
loop
stos
dec
int
adc
test
or
pop
cmpsb
nop
leave
inc
mov
lods
sbb
loopne
inc
sub
cmpsl
icebp
add
cwtl
rcl
call
fwait
mov
inc
mov
xlat
sub
mov
divb
jae
mov
push
adc
adc
faddl
mov
sub
ss
lcall
loope
mov
push
xchg
mov
xlat
hlt
cwtl
xor
test
xchg
scas
push
sub
xor
jp
fimuls
or
fwait
xor
mov
outsl
mov
sbbl
fidivrl
xchg
das
fistl
mov
sbb
jecxz
mov
imulb
rcrb
adc
jle
in
test
mov
mov
xor
xorl
sbb
mov
pusha
mov
xor
sbb
es
adcl
ret
stos
aaa
lods
xorl
inc
imul
xchg
xchg
addb
es
mov
mov
dec
cmp
icebp
xlat
fisubl
mov
lahf
mov
mov
cmc
dec
mov
xor
push
sbbl
shl
xor
lahf
shlb
mov
jp
xchg
test
mov
dec
sub
insl
push
mov
gs
add
dec
test
adc
ret
sub
pop
cmc
shlb
out
fidivl
pop
mov
aas
xlat
add
mov
rorb
jp
hlt
pop
call
jecxz
fdivrl
mov
mov
jno
dec
cmpsl
scas
cmp
cs
xchg
cwtl
mov
arpl
cmpsl
cltd
aaa
shll
movsl
adc
not
das
pop
jb
mov
lcall
leave
cli
mov
jbe
pop
adc
mov
leave
idiv
sbb
jb
clc
mov
mov
sub
adc
mov
loope
sub
adc
iret
xorl
shlb
pop
shll
inc
fbld
stc
mov
imul
out
mov
and
arpl
lods
xlat
stos
movsl
sarb
and
xor
icebp
mov
int
mov
cwtl
subl
add
pop
shrl
sbb
lret
ret
lcall
pushl
and
fwait
sub
mov
xchg
into
add
fistpll
pop
sbb
pop
mov
test
mov
xor
or
dec
mov
inc
out
xlat
jecxz
mov
aaa
push
imul
and
or
xor
xlat
add
dec
lcall
xor
jne
aad
jp
ljmp
rcrl
stos
dec
inc
inc
lret
es
arpl
lods
mov
lret
shlw
int
loope
scas
test
imul
popa
mov
pop
mov
and
ja
jns
and
fstps
mov
sub
mov
mov
inc
jb
mov
test
imul
ret
aas
lret
jge
in
mov
adc
jae
stos
bound
jg
add
cld
and
sbb
lods
dec
or
jb
lds
xlat
jmp
aad
mov
pop
ret
lret
xchg
mov
pop
and
mov
xor
aad
mov
add
je
pop
xor
sub
cmp
mov
mov
gs
dec
out
cltd
dec
and
mov
cmp
mov
ret
repz
dec
jmp
aas
scas
pop
jg
dec
mov
testb
lock
mov
sbb
xchg
fmuls
add
cmp
and
mov
negl
divl
mov
xchg
scas
sub
mov
test
xor
scas
cld
pop
aaa
and
cmpsl
or
mov
mov
xor
mov
cmc
cmp
mov
sub
mov
pop
in
cmp
mov
cmpsl
xor
xlat
jg
cmpsb
cli
test
lds
mov
cmp
dec
daa
and
and
mov
ret
imul
sub
jg
xchg
and
cmp
js
sbb
jnp
bound
pop
in
jnp
icebp
test
jo
and
sub
and
bound
and
out
fwait
inc
xor
int
add
inc
stos
mov
xor
xlat
mov
xorl
xor
or
add
pop
movsb
std
fs
sub
mov
xchg
mov
sahf
push
and
testl
xor
mov
out
mov
mov
addl
notl
into
mov
jmp
fmull
sub
gs
push
out
jle
lods
push
testl
jno
sbb
push
cmpsb
push
mov
andl
cmp
mov
jle
add
lods
cltd
sbb
orb
and
mov
inc
adc
jle
xchg
mov
fwait
push
pop
cmp
add
lods
cmc
push
mov
mov
adc
lahf
add
mov
pop
mov
shrb
call
add
mov
inc
mov
mov
out
leave
xor
mov
test
sarl
or
flds
addb
xchg
fdiv
adc
jle
cmpsl
ljmp
ja
pop
mul
addr16
hlt
pop
mov
add
pop
mov
mov
cmp
loop
xlat
daa
push
and
cwtl
sub
mov
scas
dec
fs
daa
mov
movsb
ffree
shl
mov
fs
cmpsb
mov
aaa
jl
and
dec
movb
add
test
dec
andl
sub
inc
adc
pop
xlat
mov
cmpsl
mov
jl
cli
aad
xchg
je
subl
add
movsb
sbb
inc
cmpsl
out
dec
es
ret
out
mov
jp
ljmp
es
nop
mov
icebp
add
pop
in
psubsb
cmpsl
sub
sbb
icebp
ss
xchg
cwtl
insl
mov
pop
js
dec
adc
add
dec
mov
repz
xchg
mov
mov
dec
push
dec
test
mov
xchg
pop
dec
arpl
mov
and
ds
mov
addl
shl
test
cmp
push
icebp
pop
cmpsb
cmp
ja
popa
fs
xchg
sbb
sar
mov
cmpsb
cwtl
and
adc
mov
sbb
xor
adc
es
shl
inc
mov
cwtl
lea
scas
jmp
outsl
iret
cli
cltd
pop
mov
sbb
jbe
mov
loope
dec
adc
lock
mov
enter
dec
mov
std
cmp
popf
xlat
cwtl
stos
mov
mov
xor
loope
stos
jae
icebp
adc
push
bound
negb
sbb
pop
mov
cmp
jns
dec
popa
xor
push
xlat
jp
push
mov
jne
mov
xchg
cmp
add
movb
icebp
roll
repnz
mov
sbbl
loop
outsb
popf
imul
lahf
adc
sbbb
mov
jb
orb
mov
test
xchg
cmp
jns
out
xchg
jnp
sub
adc
xlat
arpl
and
cwtl
mov
xchg
push
jp
xlat
sbb
stos
mov
scas
sbb
outsl
jp
pop
clc
xor
xor
dec
mov
out
iret
notb
mov
mov
popa
lods
add
fs
das
test
andl
mov
add
mov
dec
sub
test
mov
mov
xor
cwtl
jb
cmp
shll
or
or
xchg
mov
std
imul
jp
sub
cld
jne
faddl
mov
mov
sub
sti
aad
prefetch
jno
js
adc
test
xchg
push
aas
and
inc
lock
mov
mov
and
mov
cmpb
pop
mov
push
dec
orl
inc
cs
sub
mov
js
and
mov
mov
stos
hlt
stos
sti
clc
cli
lahf
mov
cltd
test
mov
in
mov
xor
sub
wbinvd
sub
call
sbbl
ja
loopw
aas
cmp
fbld
mov
cwtl
int3
sbb
cmpsl
roll
sbb
mov
iret
jge
mull
push
xchg
mov
dec
call
cwtl
test
popa
mov
out
mov
movsl
rclb
cltd
xor
adc
cli
cmpsl
push
divl
fsubrl
add
int
lret
mov
lcall
xor
movsl
cmc
imul
cwtl
sub
and
sbb
mov
adc
imul
cmp
cwtl
mov
repz
jge
push
cmp
rorl
mov
icebp
mov
dec
mov
test
mov
subl
mov
movsl
stos
xchg
nop
aas
orl
push
fidivrl
inc
push
inc
insb
test
into
fisttpll
roll
movzwl
int3
test
sub
rol
inc
push
shlb
jge
xor
mov
jb
cmp
xchg
mov
test
push
notl
push
adc
arpl
mov
cmovae
jmp
shlb
sbb
stos
push
sbb
sbb
loopne
cmp
es
mov
test
lods
test
aas
sbb
out
push
cmp
cltd
rcr
cmp
mov
not
roll
xor
push
mov
and
mov
xorb
cwtl
dec
shlb
ja
lds
sub
cld
sti
scas
xchg
ss
test
push
add
iret
sub
add
mov
xchg
cmc
lea
inc
sub
jg
pop
mov
xchg
clc
bound
lock
lods
pop
add
test
mov
je
lret
push
push
cltd
es
xchg
cmc
pop
mov
and
adc
fwait
xchg
mov
mov
pop
std
sbb
xor
mov
inc
fwait
iret
jnp
inc
and
pop
lret
xor
mov
insl
std
stos
add
mov
mov
loop
inc
mov
xchg
into
movsb
jnp
pop
data16
mov
sub
pushf
int3
mov
dec
add
pop
pop
adc
xchg
cmp
mov
sbb
pop
sarl
push
pop
scas
inc
add
inc
sub
into
mov
cwtl
out
jge
icebp
mov
mov
rcrl
lods
repnz
cmpsl
testb
mov
mov
add
xor
jbe
test
mov
call
push
xlat
andb
fwait
hlt
mov
jnp
fcoml
testb
mov
inc
repz
xorl
mov
xlat
push
mov
cmpsl
xchg
push
sub
pop
jne
hlt
inc
in
nop
mov
pushf
dec
mov
and
enter
imul
mov
pop
lahf
mov
mov
pop
test
xchg
xchg
flds
xorl
pop
scas
add
loope
pusha
movsbl
mov
cmp
ret
data16
mov
ficoml
lock
add
movsb
xlat
and
fs
ffreep
xlat
add
jae
loope
sub
mov
inc
sub
aas
fcoms
test
mov
push
int
adc
jmp
scas
jno
das
aam
adc
mov
sub
rorl
pop
xlat
and
sarb
mov
daa
mov
push
jg
out
mov
fsub
mov
jmp
sbb
add
or
mov
ret
push
jl
mov
scas
and
push
inc
popa
pop
pop
stos
or
dec
mov
mov
jl
mov
sub
mov
shl
push
inc
adc
dec
lret
setns
jl
sub
rdpmc
bound
push
stos
add
xlat
icebp
mov
dec
movsl
lahf
xchg
mov
mov
fs
lret
negb
mov
dec
imul
icebp
stos
iret
inc
into
xchg
scas
mov
fisubrl
sub
mov
mov
mov
xchg
cwtl
mov
sbb
insb
imull
xchg
std
mov
mov
pop
shll
push
stc
cltd
mov
mov
ret
out
mov
mov
loope
mov
pop
sub
test
xchg
mov
rol
nop
cmp
lahf
sbbb
xor
mov
icebp
mov
lcall
push
push
cmp
pop
xor
add
pop
loopne
lds
xchg
sbb
mov
repz
pop
iret
and
mov
clc
push
jnp
or
mov
sbb
xlat
pop
cmpsl
inc
pop
adc
stc
cmp
xchg
sbb
push
jae
or
pop
mov
icebp
add
imul
jmp
mov
mov
push
loop
dec
icebp
mov
jns
mov
mulb
loopne
mov
pop
xchg
add
inc
push
lcall
xchg
jno
fsubrs
dec
inc
inc
mov
repz
or
test
jnp
outsl
aaa
xorl
mov
inc
or
fsubrl
adc
lods
mov
or
sbb
ret
xchg
mov
mov
xchg
pushw
xchg
popf
fwait
lret
sarb
js
mov
out
mov
sub
sub
fldenv
jne
mov
lods
fisubrl
xlat
rolb
dec
mov
jmp
popa
jge
xchg
mov
inc
sbb
gs
mov
xchg
push
lret
mov
mov
add
xor
in
subl
sub
or
imul
inc
pop
das
int
mov
daa
lret
fimuls
mov
xchg
aas
leave
pop
add
mov
and
mov
sub
cmp
mov
adc
not
mov
incl
pop
arpl
inc
mov
sbb
cmpsb
cmp
push
mov
test
rcrb
mov
push
movsw
mov
frstor
test
cmpsb
and
outsl
cmp
imul
cwtl
cld
pop
inc
negl
lcall
sub
adc
fcoml
dec
and
mov
testl
sbb
and
jl
je
cmp
sub
in
scas
dec
inc
sete
mov
mov
arpl
sarl
out
cld
scas
jmp
mov
sub
sbb
int
lods
into
mov
movsl
xlat
or
test
cmpsl
sbb
xor
sub
outsb
and
mov
xlat
mov
fmulp
xchg
mov
mov
clc
scas
loop
ja
and
fsub
pop
cli
jnp
jmp
mov
xorl
cs
pop
pushf
jae
scas
fdivrl
mov
fisubrl
scas
push
cmc
pop
add
mov
aas
stos
sbb
ss
jbe
icebp
inc
xchg
lods
arpl
cltd
mov
mov
cmp
xor
outsl
das
stos
andl
jno
sub
fnstenv
cmp
daa
ds
mov
xor
mov
push
movsl
lcall
mov
inc
xlat
xchg
out
adc
popf
inc
xor
mov
outsl
pop
leave
cmpb
ret
add
in
aas
dec
push
mov
adc
mov
adc
sbb
pop
fdivs
xchg
mov
and
mov
jns
jbe
dec
jno
mov
ds
movsl
inc
sub
cmpsl
cmp
push
gs
mov
mov
aas
movsl
addr16
sbb
mov
cmp
mov
scas
mov
cmp
push
clc
stos
iret
mov
rclb
xchg
pop
xchg
mov
add
mov
sub
pop
stc
divl
inc
aam
mov
pop
xchg
test
mov
xorb
mov
fnstcw
and
mov
loope
mov
push
ret
mov
subb
cmp
sbb
xchg
mov
inc
xor
stc
mov
adc
stos
out
and
popf
or
ss
cwtl
or
icebp
inc
push
rorb
xchg
ja
xlat
mov
mov
sbb
adc
pop
data16
and
cmp
jl
fsubrl
add
addr16
icebp
jge
add
lret
inc
addl
sahf
cmp
pop
ja
dec
mov
daa
insb
jg
fisubrs
ljmp
xor
pushf
mov
aaa
mov
test
inc
cmp
loope
adc
sub
scas
xor
xor
test
stos
jno
arpl
pop
orb
inc
xlat
xchg
imul
sbb
in
sbbl
mov
pop
xchg
pushl
ljmp
loope
daa
jl
sub
xor
xorb
dec
adc
gs
mov
xor
lock
mov
rcll
hlt
mov
mov
adc
movsb
cmpb
xchg
mov
adcl
push
mov
mov
dec
ds
mov
repnz
inc
daa
test
ljmp
xchg
nopl
sub
or
pop
add
xlat
icebp
xchg
mov
test
cmpsl
insb
testb
mov
cmp
dec
jle
lahf
jge
movl
mov
pop
sub
add
add
inc
mov
mov
loop
mov
pop
enter
in
lret
mov
das
mov
dec
cwtl
jge
rol
fstpt
pop
loope
not
mov
out
mov
das
mov
iret
mov
fnstcw
adc
mov
test
push
mov
or
mov
sub
shrl
mov
outsl
push
sbb
push
inc
jg
aaa
pop
ja
in
xchg
sbb
jno
mov
push
dec
mov
je
pushf
and
int
cmpsb
data16
mov
pop
pop
mov
jno,pn
mov
mov
jp
test
cmp
sbbb
and
cmp
out
mov
subl
sbb
sub
sbb
jg
hlt
jg
mov
push
pop
xchg
js
mov
cmpsl
sbb
nop
repz
mov
pop
jb
and
icebp
mov
xlat
cli
je
mov
scas
lods
push
ficomps
loope
lret
xor
fdivrl
jg
imul
fadd
hlt
stc
adc
icebp
test
lods
out
mov
fsubs
cmp
or
pop
mov
mov
dec
sahf
and
and
mov
outsl
mov
psllw
lahf
sbb
xchg
cld
xchg
stos
loope
cmpsl
push
xlat
mov
ret
movsl
arpl
outsl
push
xorb
xor
test
mov
push
mov
mov
and
int3
adc
addr16
sbb
add
fdivrs
and
sbb
ja
adcl
rcll
jg
adc
xor
push
lods
fwait
jo
aas
call
outsb
pop
cmpl
xchg
add
cmpsl
adc
fwait
jmp
mov
shll
push
mov
loop
movsb
and
xor
shl
movsl
mov
stos
cmpsl
xchg
xor
addl
pop
inc
sub
mov
lret
mov
imul
push
aas
scas
sub
mov
test
adc
mov
jb
mov
repnz
xor
scas
mov
mov
xchg
inc
int
xor
daa
rorl
sbb
jge
jns
mov
ljmp
lcall
mov
ja
jl
shr
cwtl
xor
lods
push
imul
pop
repnz
jmp
mov
fcmovu
xor
movsl
lret
movsl
jg
or
push
mov
int3
test
sbbl
and
jb
mov
mov
push
mov
ret
jecxz
repz
es
cwtl
aas
or
push
xor
push
dec
mov
cmpsl
sbb
xor
mov
xchg
shlb
fidivl
sahf
out
popa
xchg
and
xlat
lahf
icebp
jo
inc
push
movsl
divl
mov
fwait
xchg
jge
fdivrl
mov
jo
fdivrp
dec
jmp
and
mov
repnz
mov
pushf
mov
mov
sbbb
add
clc
jge
mov
fs
icebp
pop
mov
pop
or
jg
rcrl
jo
mov
mov
daa
and
and
adc
xor
not
ss
add
and
dec
mov
sbb
daa
stos
mov
or
cmp
mov
ret
mov
stos
cltd
xor
cmpsl
adc
ss
imul
fabs
pop
sahf
xchg
mov
into
adc
addr16
imull
add
loopne
or
inc
aam
icebp
mov
mov
sbb
ja
fsubrs
xor
bound
std
pop
movsb
xchg
inc
mov
jns
jnp
bnd
cmpb
icebp
xor
push
in
push
mov
stc
lahf
add
pop
sub
test
cli
inc
icebp
jge
scas
cmpsb
shlb
rorl
insb
pop
cmpsl
insl
jae
adc
inc
fdivl
dec
sbb
arpl
enter
xchg
mov
les
mov
in
inc
rclb
mov
insb
add
das
addr16
push
adc
add
inc
pop
xchg
icebp
adc
sbb
cwtl
in
shlb
scas
add
fcompl
fstpt
ja
jae
dec
das
int
arpl
mov
mov
mov
pop
xor
hlt
movsl
mov
lret
add
jmp
xor
mov
jecxz
add
outsl
out
pop
cmp
cmp
mov
mov
rorl
ja
xchg
repnz
xor
and
jnp
cmp
test
addr16
sub
mov
and
jne
out
xlat
subl
in
cwtl
daa
mov
es
or
bound
pop
cmc
outsb
xor
push
xor
adc
mov
push
cli
jp
xchg
call
pop
sbb
data16
jae
adc
or
mov
push
mov
outsl
in
gs
xlat
icebp
pop
sbb
jns
fwait
mov
insl
xlat
mov
inc
sbb
in
in
mov
cmp
mov
fisubrs
mov
loop
mov
mov
pop
cltd
mov
lret
push
push
add
cmp
jmp
push
lods
push
cmpsl
and
mov
jne
int3
mov
outsb
mov
sub
iret
add
xor
test
mov
mov
jno
aam
mov
ret
mov
sbb
cmp
dec
cs
gs
mov
lods
sub
lods
inc
scas
aam
mov
xchg
mov
sub
add
mov
hlt
xlat
mov
sti
mov
or
repz
outsb
movsl
in
dec
inc
pop
mov
xlat
adc
mov
pop
mov
mov
sti
mov
jbe
mov
test
xchg
or
mov
mov
xlat
pop
daa
cli
mov
data16
cmp
movsl
mov
and
icebp
mov
jne
xchg
stc
pop
xchg
cli
mov
lock
outsb
push
negb
xchg
lods
dec
add
loop
xor
test
aaa
push
mov
sbb
xor
xchg
aam
mov
xchg
stos
lret
dec
mov
xchg
fwait
cmpsl
mov
sysexit
mov
dec
xchg
and
add
mov
dec
lods
imul
pop
pop
in
icebp
push
dec
mov
ret
ja
cli
adc
dec
jle
xlat
lea
mov
mov
inc
jl
lcall
fs
and
pop
mov
sbb
stos
cmp
ljmp
popf
jnp
andb
fsts
adc
xchg
ret
insl
or
dec
scas
aad
cmp
mov
mov
or
mov
fcompl
xchg
adc
shll
lea
push
and
scas
ret
and
cld
lahf
scas
pushf
or
xchg
and
mov
pop
xlat
popa
test
cmpsl
add
repnz
and
mov
jno
sbbl
cmc
sub
packssdw
add
pop
mov
pop
sbb
push
jae
fwait
mov
and
jno
icebp
rclb
pop
xlat
mov
test
adc
cmc
fdivl
mov
fs
scas
xchg
in
scas
lea
iret
es
in
push
movsl
into
lahf
adc
xlat
cs
mov
insb
ss
icebp
pop
inc
mov
fiadds
mov
scas
js
setnp
push
xor
fwait
in
stos
in
or
jns
jno
arpl
ret
test
scas
test
mov
and
ret
stos
jl
mov
cmpsl
cmp
iret
fbld
imul
ss
bnd
jb
loopne
hlt
mov
lcall
lods
add
sub
xor
shlb
add
addr16
mov
xchg
test
jmp
lahf
inc
mov
jnp
xor
ss
stos
cli
out
out
out
sbb
addr16
orb
outsb
pop
adc
mov
dec
fstps
mov
inc
cwtl
pop
insb
js
gs
hlt
test
lods
jbe
mov
jae
dec
movsb
test
test
jno
pop
or
add
sbb
push
lea
xchg
pop
mov
ret
arpl
jle
sbb
les
lcall
notl
out
cmp
idivb
aad
jl
mov
mov
add
ret
push
sbb
mov
outsl
cwtl
jmp
jge
inc
mov
movsb
push
mov
or
adcl
loopew
or
lret
xor
and
ret
sbbb
scas
insl
test
fwait
xor
cli
xor
pop
rcll
mov
mov
mov
or
mov
leave
mov
sub
xchg
test
leave
cmp
gs
sub
sbb
mov
xchg
cli
lret
fwait
mov
out
and
adcl
push
sub
push
movzwl
sti
into
cmp
inc
cltd
xchg
sub
aam
add
cwtl
xchg
mov
push
scas
sbb
mov
mov
fnstcw
jns
js
imul
add
adc
mov
mov
orl
fistpll
cmpsl
jo
fsubp
add
jbe
mov
mov
sub
pmulhw
push
adc
add
push
test
mov
lods
leave
cmpsl
cmpsl
clc
cld
xor
cmp
std
movsl
scas
push
lods
ret
add
fisubrs
xlat
lahf
pcmpeqw
movsl
dec
mov
js
sarl
or
push
xor
pushf
int3
push
movsl
mov
sbb
fwait
xor
cmpsl
inc
jmp
jmp
pop
cmpsl
loope
or
add
mov
notl
movsb
addr16
lock
repnz
mov
lret
out
add
outsl
add
jo
xor
mov
cmp
xchg
rcrl
dec
mov
scas
pop
testl
or
mov
adc
cmpb
mov
push
push
out
divl
scas
cmpsl
cmpsl
and
jl
mov
loope
add
ds
mov
cmp
inc
and
sub
fstp
pop
push
mov
mov
xchg
jecxz
outsl
mov
jns
test
sub
je
hlt
loope
or
push
adc
xchg
inc
movsb
xlat
pop
test
fwait
inc
xchg
inc
pop
test
cmpsb
xor
ret
out
lcall
popf
mov
lds
pop
cld
gs
mov
sbb
arpl
stc
mov
adc
adc
daa
jle
and
cmpb
ds
cmpsl
add
jmp
cmp
bound
inc
mov
push
lahf
mov
jno
jnp
mov
scas
shll
jle
cmp
xchg
mov
arpl
push
lods
test
pop
fwait
test
je
mov
loope
xchg
cmpsl
mov
mov
repnz
inc
and
mov
lods
int
bound
mov
icebp
xchg
cmpsl
rcrb
mov
clc
add
sbb
test
and
sbb
mov
lahf
movsb
das
dec
icebp
leave
cs
pop
aaa
sbb
jmp
lret
xorl
psrad
mov
es
mov
xlat
push
aas
fbstp
xlat
inc
cmpsl
in
jle
push
aad
xor
cmc
repz
sbb
lcall
jbe
imul
imul
jae
and
add
loope
xchg
sbb
sbb
sbb
xor
hlt
xorb
outsl
mov
lods
clts
movsl
into
sbb
aas
xlat
mov
jge
or
xchg
cld
mov
mov
aaa
lods
mov
les
loop
or
adc
mov
das
idivl
fwait
adc
enter
add
arpl
jmp
jge
mov
cli
add
pop
jecxz
fnsave
test
push
mov
pop
inc
mov
sub
jge
lods
or
push
xor
shll
mov
mov
sub
scas
clc
and
data16
xchg
iret
dec
cmp
cmp
xorb
jge
test
mov
stos
repnz
xor
add
lcall
jno
mov
imulb
pop
mov
mov
shll
mov
mov
jb
push
cwtl
xchg
cmpsl
push
ficoml
cmp
lds
ss
scas
mov
dec
lods
and
cmp
divb
mov
fnstcw
aad
stc
xor
imull
imul
subl
dec
gs
xor
es
icebp
mov
cmpsl
sti
fildll
out
add
xchg
push
clc
jl
sbb
fdivs
test
mov
push
insl
addb
incl
jns
or
push
sub
cmpsb
test
enter
jp
push
in
jl
and
mov
lods
out
hlt
ja
pushf
mov
xchg
mov
pop
xchg
movb
int
cmpl
jl
je
cli
stos
pop
xchg
enter
ja
xor
jnp
in
xchg
mov
stos
sbb
sahf
mov
or
xchg
sti
stos
mov
lds
adc
sub
sbbl
in
mov
xlat
mov
jae
fwait
jl
mov
mov
movsl
iret
sub
sbb
into
ret
fisubs
lret
sub
call
popf
jl
and
sub
addr16
push
sub
sbb
shrb
test
outsl
dec
sbb
popa
rclb
xchg
lds
cmpb
rorl
es
test
adc
mov
push
jp
lds
ds
sarl
shll
xor
mov
jbe
fisubrs
sub
mov
lret
xchg
mov
dec
gs
cmpsl
shlb
movsl
subl
mov
daa
in
push
enter
pusha
lods
ds
sub
push
mov
dec
xor
mov
aaa
mov
loope
lcall
cmp
neg
pop
jbe
push
out
jecxz
cmpsl
repnz
adc
cwtl
in
mov
mov
mov
and
arpl
adc
inc
jns
push
xor
sub
mov
movsb
cmp
sbb
iret
sbb
daa
mov
subl
repz
mov
mov
mov
out
lret
xor
test
loope
fidivl
push
sbb
adc
mov
insl
mov
pop
cltd
imull
lds
aad
aam
mov
jo
imulb
mov
nop
xlat
jp
mov
fstl
xor
icebp
mov
ds
not
nop
pop
scas
mov
adc
add
and
ret
xlat
xor
daa
or
aad
xor
fistps
loop
aad
cmpsl
shl
push
out
das
mov
je
mov
pop
dec
int
jge
mov
cmp
jg
sub
js
jbe
in
and
inc
or
loop
test
mov
and
mov
or
sti
pop
jl
lds
es
mov
mov
loope
lret
es
scas
push
popf
cwtl
in
mov
sbb
mov
sbb
add
stos
push
mov
cmp
rcrl
cs
xchg
out
cmpsl
roll
mov
push
cmp
sbb
pushf
dec
push
dec
ja
mov
lret
pop
and
call
std
test
addl
pop
adc
push
data16
dec
imul
sub
das
sbb
mov
jp
mov
nop
pop
outsb
hlt
stos
xchg
fistpl
push
inc
mov
jge
ja
adc
nop
mov
or
out
mull
fiadds
std
cmp
jne
aam
iret
insl
shll
cltd
cmp
push
pop
ret
inc
in
sbb
dec
ljmp
adc
sub
ficoml
add
mov
or
adc
std
dec
xchg
mov
iret
or
pushf
int3
sahf
cwtl
imul
xor
adc
mov
mov
mov
pusha
dec
xor
dec
sbb
arpl
ds
mov
ja
mov
icebp
ret
out
ja
pop
dec
xchg
mov
jle
mov
mov
xchg
dec
jae
cmp
stos
mov
divl
and
aad
dec
lcall
icebp
and
iret
mov
mov
push
sub
test
jp
inc
inc
or
addl
mov
add
pop
or
mov
jp
bound
test
dec
cli
pop
mov
rclb
xor
sbb
and
add
xchg
fnstenv
mov
or
cmpsl
cmp
pop
fdivrl
sbb
in
repz
scas
jo
xlat
mov
adc
sbb
mov
add
iret
imul
mov
sub
je
cmpsl
mov
icebp
jno
sbb
cmp
loopne
xchg
in
scas
lahf
fwait
pop
add
inc
loope
mov
scas
arpl
add
js
mov
sbb
jl
andw
add
cmp
xor
repz
mov
rolb
das
js
ja
sub
in
ficompl
and
icebp
xor
mov
mov
xchg
daa
xchg
inc
vpshaq
pop
mov
out
or
dec
popf
loope
sbb
icebp
popa
inc
sahf
push
mov
or
out
lods
jne
shll
imul
mov
add
cmp
lods
inc
mov
mov
push
sbb
scas
ds
loopne
movsl
sbb
dec
adc
push
aaa
mov
stos
mov
test
xor
daa
mov
mul
cmpsb
inc
xor
xlat
hlt
xor
inc
or
mov
jae
mov
daa
inc
sbb
mov
fadd
cmpsl
adc
loopne
add
das
push
mov
icebp
mov
add
out
xchg
sbb
shlb
cmpsl
mov
cmpsb
mov
pop
pop
sbb
cmp
pop
inc
mov
pop
xchg
cmpsl
jmp
rcr
pop
mov
cmpsl
jns
notl
leave
cwtl
es
flds
jno
lret
roll
repnz
inc
push
mov
ret
inc
daa
mov
mov
les
pop
in
mov
negb
movsl
loopne
add
jmp
adc
mov
ja
lahf
lods
cmpsl
mov
out
out
push
loop
daa
pop
pop
sarl
std
je
cmc
addl
lahf
and
xchg
mov
cmp
icebp
sbb
addl
mov
sbb
cmpsl
movups
mov
mov
inc
in
ja
fsubl
daa
jne
arpl
cmp
dec
test
jb
adc
aam
ja
je
mov
mov
inc
mov
sbb
jge
sarl
jle
adc
cmp
mov
mov
dec
xor
xlat
sub
and
xor
xchg
nop
and
mov
or
jns
mov
push
xchg
mov
in
pop
xlat
test
arpl
loope
sbb
mov
xchg
mov
icebp
adc
pop
fcom
adc
popa
add
dec
mov
stos
cmpsb
xchg
lods
mov
outsl
adc
push
sub
and
xchg
xchg
or
outsl
test
mov
movsl
stc
sbb
cmp
jg
addl
aad
jl
and
jns
adc
popf
cmpsb
mov
shlb
mov
or
push
fisubl
mov
mov
es
lds
stos
sub
outsl
frstor
out
xchg
mov
jb
add
cmp
clc
inc
mov
jp
lds
test
cmp
cmp
js
jns
xor
popf
xor
dec
cmpsl
xchg
bound
mov
mov
scas
mov
negl
nop
xchg
shrl
sbb
xchg
mov
arpl
cmpsl
notl
cmpsl
pop
lods
ljmp
cld
ss
lahf
mov
cwtl
xlat
mov
imul
jle
imul
fidivrl
out
add
mov
into
pop
mov
mov
das
ss
aad
adc
xlat
sbb
and
and
jno
add
jg
aad
xchg
and
out
jno
sbb
test
lea
add
mov
imul
jae
jge
and
mov
dec
mov
out
sub
push
fdivl
negl
cli
shr
mov
xchg
cmp
push
mov
inc
jne
repz
in
mov
xor
cmpsl
mov
mov
enter
inc
shlb
in
lcall
jg
lds
mov
js
xor
test
mov
inc
mov
mov
addr16
mov
mov
sbb
ret
nop
in
mov
xchg
icebp
out
aaa
int3
inc
inc
repz
cmp
pop
cld
xcrypt-cfb
cmpsl
pusha
movb
cwtl
add
jae
mov
cltd
testb
dec
stos
cmp
imul
fwait
cmpsl
mov
xchg
mov
lret
sub
mov
lcall
mov
pop
xchg
jo
pop
dec
pusha
inc
mov
jnp
mov
sub
adc
fdivl
ret
aas
cmpsl
addr16
popf
add
sub
inc
dec
adc
add
mov
jns
cli
inc
mov
adc
xor
filds
mov
xor
mov
bound
push
mov
inc
mov
or
mov
mov
jmp
pmulhuw
dec
fxch
and
mov
push
push
mov
dec
mov
pusha
sub
aaa
movsl
jmp
mov
rcrl
xor
mov
xchg
mov
ja
mov
insb
cmp
mov
movzwl
jecxz
pop
iret
sbb
mov
sarb
fdivr
xchg
cld
test
cmpsb
mov
xchg
mov
add
lods
cmp
and
jmp
add
mov
cmp
das
je
mov
stc
jb
jnp
mov
dec
pop
stos
std
repnz
sbb
icebp
pop
xlat
or
cltd
xchg
lods
loop
mov
stos
cwtl
in
mov
cmpsl
lods
push
xor
pop
repnz
test
and
mov
shll
pop
mov
mov
sub
es
sub
in
mov
jg
push
lods
xor
lahf
xchg
cmp
or
xchg
repnz
or
cli
iret
lcall
lods
out
jp
lods
or
mov
push
mov
ret
sbb
mov
jne
lods
subl
mov
icebp
jg
imul
rcll
shl
out
test
stos
pop
aad
sbb
loop
mov
push
cli
icebp
lock
mov
pop
xor
mov
sub
jnp
cmp
js
push
jg
dec
aas
mov
mov
mov
lret
ljmp
icebp
dec
insb
scas
mov
push
or
xorb
lcall
sbb
add
dec
jmp
rcrl
mov
stos
mov
stc
out
mov
stos
and
sub
shll
std
push
nop
pop
xor
mov
mov
pop
add
sbb
cmp
push
icebp
push
xor
mov
jp
pop
mov
mov
arpl
xchg
test
add
xchg
fwait
mov
jmp
jae
arpl
push
jecxz
dec
and
andl
mov
sbb
popf
div
pop
dec
mov
push
lods
aaa
dec
sbb
mov
cli
mov
cld
xor
jo
repz
je
repnz
xor
mov
fidivs
data16
scas
cmp
scas
out
stc
test
push
push
sub
adc
cwtl
or
jnp
xchg
iret
xor
pmaxub
xchg
and
cmp
testl
ljmp
mov
loope
xlat
push
fwait
sahf
xor
add
mov
mov
cmpsb
rcrb
jo
jg
cwtl
ljmp
mov
xlat
cltd
or
xchg
lcall
sbb
mov
scas
sarl
lret
pop
aad
xor
cmpsl
int3
mov
pop
jbe
mov
push
mov
or
lcall
mov
dec
mov
ss
mov
cmpsl
mov
in
mov
stos
jl
sub
iret
push
mov
dec
rorb
push
and
lods
lock
add
decb
shlb
je
mov
xor
icebp
cmpsb
sbb
inc
add
push
cltd
mov
jmp
sbb
or
fisttpll
and
sub
pop
add
fwait
mov
xorl
sub
dec
cmpsl
and
sub
stos
ret
lods
das
rcrl
lahf
into
mov
in
add
dec
mov
dec
sbb
mov
clc
dec
notl
test
das
add
pop
lcall
dec
or
xchg
movsl
mov
cwtl
add
test
mov
mov
jge
adc
cs
das
jbe
cmp
xchg
insl
daa
xor
fdivrl
insb
cmpsb
mov
dec
mov
popf
movsl
repz
xor
cmp
and
pop
addb
dec
stos
or
jae
sbb
xchg
pop
mov
loope
cltd
jecxz
mov
cwtl
ficoml
orl
adc
push
lods
mov
sub
fs
jl
in
xlat
in
mov
mov
jnp
push
and
mov
pop
clc
jl
fstl
mov
ret
cwtl
fwait
rsqrtps
addr16
aam
lcall
add
scas
mov
xor
pop
les
mov
stc
add
fsubrl
push
add
aam
cmpsl
mov
stos
ss
mov
adc
xor
mov
inc
mov
scas
mov
jne
cmpsl
pop
cmp
mov
inc
fs
or
adc
mov
add
mov
test
lds
add
mov
out
scas
sub
pop
dec
mov
addr16
pop
cmpsl
xor
mov
les
out
mov
or
xlat
lock
mov
xchg
scas
push
xchg
push
sbb
pop
cs
push
das
mov
lods
arpl
imul
mov
push
push
jnp
cmp
cwtl
mov
and
mov
popa
sub
or
sbb
daa
scas
in
orl
fdivs
out
les
inc
cwtl
mov
scas
arpl
lods
mov
pop
add
xchg
gs
in
bound
and
mov
enter
xor
cmpsl
xlat
outsb
loop
adc
dec
mov
pop
ss
repnz
negb
xchg
es
mov
xlat
arpl
call
pop
dec
cli
mov
mov
mov
xlat
roll
mov
push
add
inc
stos
jp
xorl
and
sub
mov
outsl
mov
sahf
in
test
ret
mov
mov
subl
push
xchg
jae
mov
or
mov
imull
mov
pop
scas
cwtl
jno
das
aad
enter
mov
or
mov
in
movsl
imulb
aas
dec
mov
xor
sbb
and
xchg
mov
mov
lahf
outsb
int
enter
lcall
sbb
push
or
cmpsl
pop
aad
xchg
sbb
sub
mov
inc
ret
xchg
xor
adc
mov
xchg
repnz
mov
mov
mov
cmpsl
pop
dec
lds
scas
mov
daa
icebp
aas
shlb
and
mov
lea
jl
jge
test
mov
ja
mov
test
push
test
add
fwait
rorl
inc
xor
adc
lods
jp
or
outsl
stos
mov
daa
in
push
mov
xchg
sbb
xlat
push
aas
arpl
enter
or
jmp
sbb
cmpsb
lods
dec
mov
stos
mov
push
insl
xchg
jl
mov
testb
call
sti
pop
jnp
push
ja
mov
inc
lahf
mov
aas
fidivl
jne
jge
lock
mov
ljmp
int3
sub
dec
jecxz
inc
mov
lods
int
fwait
mov
ja
sbb
jne
cmp
scas
scas
lcall
jns
add
and
xchg
fidivs
mov
and
lahf
push
stos
and
fcmovnu
cs
mov
fcmove
rorb
mov
jae
mov
add
mov
mov
cmp
cwtl
imul
outsb
lods
addr16
dec
mov
dec
pop
mov
testl
sbb
hlt
icebp
sbb
in
inc
xchg
xchg
test
sbb
mov
lods
or
pmullw
pop
inc
and
shl
pushf
scas
fldenv
mov
adc
int3
mov
jl
cbtw
mov
jnp
imul
sarl
push
jnp
faddl
loop
xor
mov
sub
cmp
ret
xchg
mov
jg
iret
ds
mov
mov
pop
arpl
cmp
cmp
jnp
adcl
call
aam
jl
js
repz
xchg
mov
lds
ret
roll
mov
mov
neg
div
int
lret
mov
add
loopne
xor
mov
dec
popa
js
push
sub
jg
aas
inc
dec
mov
push
out
dec
lods
pusha
imul
or
js
jae
mov
inc
add
sbb
negl
test
cltd
and
or
cltd
call
inc
dec
push
aaa
sbb
mov
pusha
aas
shrl
xor
jae
into
mov
das
push
pop
cld
push
fldl
in
fwait
scas
add
scas
ja
mov
andl
fdivrs
sbb
add
or
adc
fdivs
fildll
dec
pop
xchg
lds
jmp
cmpsl
push
iret
mov
cmp
xchg
sbb
sbb
loope
xor
xor
xlat
dec
push
mov
dec
jge
cmpsl
mov
mov
adc
out
scas
ja
popf
incl
or
cmp
xchg
shll
xchg
mov
fistps
adc
daa
push
ljmp
gs
aas
mov
xor
xor
sub
lea
jns
or
push
xchg
aaa
shrl
inc
test
cmpsb
enter
and
pop
shll
sub
jmp
fmuls
xlat
es
imul
fmul
movsb
mov
mov
xor
mov
outsb
fbld
divl
inc
js
ret
mov
sbb
filds
popa
xlat
test
xlat
cltd
mov
jno
enter
dec
insb
xchg
sub
aad
mov
iret
sbb
adc
sbb
daa
xchg
mov
mov
mov
mov
pop
clc
js
gs
mov
enter
xlat
test
xchg
mov
ret
sbb
mov
stos
sbb
and
mov
adc
adc
pushf
sub
mov
mov
mov
cmc
adc
adc
sbb
and
jns
ret
mov
mov
imul
and
aad
pushf
xor
mov
lods
jns
inc
enter
xchg
stos
inc
int3
mov
mov
fisubrl
cmp
sub
cmpsb
das
sub
add
scas
mov
test
cmp
sub
mov
aaa
jne
mov
add
mov
subl
je
mov
test
test
and
mov
push
inc
arpl
push
adc
bound
aad
add
mov
fs
cmpsl
iret
mov
out
push
add
repnz
cmp
shlb
lret
push
mov
xchg
jns
cmp
mov
shrl
mov
mov
and
dec
test
lret
lahf
cmpsl
jmp
mov
mov
cli
xchg
scas
jno
je
out
outsl
lret
xor
push
lahf
mov
or
mov
add
or
sub
xchg
daa
shrb
pop
push
adc
loope
mov
sbb
andb
jp
and
push
pop
aaa
mov
movb
and
or
addr16
test
push
mov
and
cwtl
fstps
lds
scas
cwtl
cli
xchg
mov
mov
jne
scas
dec
pusha
ret
test
int
inc
and
and
mov
pop
sbb
mov
imul
imul
ret
pop
jle
fwait
cmpsl
jg
pop
outsb
mov
inc
sbb
mov
lret
xlat
adc
or
mov
cmpsb
push
fnstenv
fwait
test
cli
movsl
mov
clc
jae
cmp
mov
daa
adc
stos
dec
add
cmp
push
and
cmpsl
pop
add
push
into
pop
scas
xchg
mov
loop
rorl
nop
xchg
mov
mov
mov
dec
pop
and
xorb
jo
inc
sbb
and
xchg
adc
fistpl
add
test
cmpsl
mov
push
sbb
movsb
cs
sahf
xorb
pop
outsb
jae
sub
fildl
xor
ret
push
sbb
fisubs
dec
mov
out
divl
popf
and
repnz
jge
dec
movsl
jns
into
mov
push
enter
inc
popf
mov
mov
lods
fs
fistpl
jecxz,pt
pop
ja
adc
mov
jp
cwtl
jge
jg
xchg
and
cltd
cwtl
xchg
sbb
scas
jmp
mov
aas
and
mov
mov
and
into
fidivrs
pop
mov
hlt
and
mov
cmpsl
or
jbe
mov
add
mov
mov
mov
sub
sbb
and
mov
xchg
add
loope
adc
sub
mov
lods
cmp
into
lahf
ficomps
mov
mov
and
popf
lods
out
ret
mov
push
negb
adc
test
xchg
andb
pusha
mov
sub
mov
enter
mov
scas
jae
mov
fnstenv
push
pushf
lahf
xchg
pop
mov
mov
sahf
adc
lock
mov
dec
mov
mov
subl
lds
cltd
sbb
xchg
sbb
pop
sbb
enter
sbb
inc
incl
inc
cltd
cmp
and
outsb
xchg
out
adc
mov
inc
into
insl
mov
sbb
inc
mov
idivb
cmp
int3
pop
jo
adc
and
or
cltd
imul
lahf
xchg
stos
xchg
jge
mov
cwtl
or
jne
cwtl
mov
stc
cmc
push
cmpsl
jp
mov
jbe
scas
arpl
int3
sub
icebp
xchg
mov
mov
out
add
or
sbb
scas
mov
jge
filds
cltd
in
test
scas
lcall
repz
test
sub
cmp
push
insl
rolb
or
fwait
add
icebp
sbb
mov
cld
xor
shll
into
mov
aas
or
mov
repnz
fidivl
in
data16
xlat
xchg
pop
push
adc
add
mov
into
mov
lcall
mov
mov
xor
sbb
mov
stos
lods
fidivs
arpl
mov
or
mov
stos
sub
mov
negb
arpl
cmp
xlat
push
data16
ja
aas
add
popa
arpl
add
cmpsl
adc
and
adc
push
fmul
insl
outsb
lea
fs
mov
mov
movsl
lods
mov
inc
mov
or
data16
pop
scas
xchg
and
lahf
insl
leave
or
jg
cltd
adc
popa
pop
jl
jnp
mov
inc
push
xchg
in
mov
push
mov
sbb
jno
cmc
es
xlat
fs
mov
cmpsl
mov
add
into
xchg
cmp
shll
leave
gs
out
movsb
cmp
fs
mov
fisttps
dec
fdivr
mov
jnp
mov
aaa
js
xchg
cwtl
into
inc
or
pop
imul
jns
cmp
mov
mov
movsb
add
push
addr16
lret
hlt
ljmp
aaa
notl
icebp
cwtl
jmp
mov
movsl
sub
sbbl
jne
daa
lock
mov
in
cltd
repz
pop
sbb
xor
out
icebp
jg
push
sub
neg
pop
imul
and
gs
es
sbb
inc
pushf
adc
add
lahf
xchg
jle
scas
mov
das
jmp
cmp
fsubr
leave
mov
sub
jae
movsl
sbb
cmp
mov
fmul
dec
add
push
repz
shlb
cmp
or
push
mov
or
inc
sarl
jg
sbb
jne
montmul
cmpsb
xchg
jb
lret
mov
push
aam
mov
or
ret
divb
dec
sti
sbb
addr16
mov
imul
jne
icebp
arpl
inc
lds
adc
adc
sbb
mov
push
sbb
mov
inc
rcrl
movsl
sbb
je
pop
jecxz
mov
outsb
lret
xor
inc
int3
inc
mov
and
mov
xor
popf
adc
adc
lahf
int
jns
out
stos
cmp
push
push
and
lea
mov
stc
stos
push
mov
inc
and
idivb
gs
pop
adc
pop
aas
pop
xor
lret
xor
test
je
xchg
ret
push
call
push
lret
and
jle
add
xlat
sbb
sub
add
jo
idivb
mov
xor
xchg
cwtl
ret
pop
sub
mov
cmc
add
sub
stc
repz
sbb
or
mov
sub
mov
and
je
stos
divb
popf
cmp
add
mov
adc
mov
sub
push
push
jle
stos
sbb
ret
out
cmp
andl
rcrb
lahf
jne
cmp
jl
cmpsl
and
cwtl
or
push
jmp
mov
arpl
fs
in
cmpsl
add
or
int
xor
sub
dec
jge
xchg
je
addr16
mov
fisubs
mov
scas
mov
jnp
cmpsl
lods
mov
push
jne
mov
fwait
loope
mov
jecxz
ds
std
jns
xor
mov
mov
sbb
adc
xor
adc
pop
mov
mov
inc
ja
xlat
sub
sahf
dec
movsl
mov
sub
cltd
sbb
sbb
inc
in
cli
daa
test
arpl
dec
test
mov
std
insl
ds
sbb
mov
cmpsl
and
mov
xlat
mov
mov
mov
sbb
xchg
std
sbb
rep
cli
or
ret
scas
fstps
cmpsl
push
mov
adc
mov
sbb
shll
mov
sbb
test
test
mov
enter
test
cltd
dec
xorl
and
in
sbb
fstl
xlat
fisubrl
pushf
xlat
jno
or
insb
add
mov
mov
add
lahf
sar
jae
mov
stos
or
push
dec
inc
mov
push
call
mov
test
dec
mov
sub
mov
pop
iret
int3
cltd
rolb
movsl
cli
jnp
mov
dec
cltd
mov
add
fisubrs
int
jle
repnz
aas
stos
adc
jge
call
cltd
cmpsb
mov
fwait
rcr
jp
test
cmp
push
mov
scas
inc
orl
xchg
fstpt
inc
mov
andl
push
jl
lods
sti
xlat
jbe
xor
mov
inc
xchg
lahf
inc
adc
ret
dec
xor
loopne
mov
sub
mov
pop
xor
cmpsl
fstl
shlb
mov
push
cmpsl
mov
dec
cwtl
aam
mov
outsl
mov
lods
inc
mov
movsl
fwait
mov
hlt
sbb
lea
mov
and
lock
lret
fwait
scas
mov
mov
pop
xor
fsubrs
test
pop
cmpb
popf
pop
std
adc
stos
fdivs
xor
shlb
mov
xchg
mov
sub
adc
mov
cmp
pushf
mov
cs
loope
dec
add
inc
xor
mov
adc
sub
out
test
sbb
repz
test
ljmp
xor
imul
xlat
mov
xor
mov
sbb
mov
xlat
dec
cmp
mov
cmp
scas
xlat
call
mov
adc
shlb
add
add
mov
inc
xchg
fwait
mov
mov
mov
aad
cltd
xlat
loope
popa
clc
pop
jae
sbb
adc
mov
arpl
pushf
popf
cmpsl
bound
lcall
mov
leave
sbbb
scas
das
inc
sbb
dec
pop
adc
xor
adc
aas
ss
adc
mov
or
loop
lret
mov
mov
mov
jmp
sub
xlat
loopne
cmp
scas
and
and
fidivrl
enter
mov
mov
push
mov
push
mov
xorl
ret
pop
lcall
fwait
jo
xchg
pop
adc
hlt
repz
cld
mov
insl
lods
inc
jno
out
mov
inc
movsb
sub
rorb
xchg
cwtl
mov
or
lods
aas
and
sbb
push
lods
sub
aas
orl
popf
fdivrl
lock
xchg
adc
add
xor
es
shll
or
pop
xlat
negl
add
out
mov
add
push
and
insb
xchg
jns
sbb
and
addr16
pop
mull
icebp
imul
call
mov
mov
push
mov
pusha
cmp
push
lcall
inc
lock
ret
stos
aam
adc
xchg
cwtl
mov
ds
nop
dec
cmpsl
jbe
jg
aad
push
pop
popfw
mov
pop
aas
fs
daa
adc
jp
xchg
pusha
fdivs
mov
cmp
ret
xchg
add
out
leave
jle
jge
inc
mov
or
fmull
mov
mov
pushf
jge
sub
mov
mov
enter
cmc
mov
cmp
pop
inc
sub
jb
push
loope
and
sbb
and
xchg
add
cmpsl
mov
mov
das
jle
mov
test
fsubs
or
ds
push
fadds
cmpb
mov
jbe
sti
int
xor
cmpsl
mov
xchg
movsb
cmp
arpl
shlb
inc
and
jo
scas
pop
loop
addl
stos
fwait
arpl
inc
xor
pop
nop
mov
push
roll
jbe
mov
loopne
pop
adc
sets
outsb
jnp
test
scas
mov
mov
mov
fsts
mov
cmpsl
push
sub
xor
movsl
adc
jmp
sar
mov
sbb
fnstenv
mov
adc
and
or
fstpl
push
jns
rorl
scas
fcompl
mov
fucomip
repz
in
mov
sbb
ds
std
mov
inc
out
cli
jge
and
xor
add
imul
push
into
mov
jo
mov
mov
out
enter
fidivl
mov
fsubrs
fucomi
testl
jne
xor
bound
clc
ljmp
mov
or
shl
stos
repnz
in
add
nop
les
push
ja
mov
mov
lea
out
stc
cwtl
das
cmp
loope
aas
ss
repz
mov
mov
jmp
clc
out
cmp
push
call
mov
test
popa
aas
addl
jno
cmp
mov
xchg
bnd
mov
in
inc
cmpl
cmpsl
mov
enter
loopne
dec
jp
xchg
pop
icebp
sbbl
ror
ret
sbb
testl
loopne
aad
stos
xchg
inc
pop
add
or
lcall
mov
stos
xchg
icebp
aad
or
mov
mov
hlt
xlat
mov
mov
cmp
xlat
xchg
sub
loope
xor
mov
fwait
addr16
xchg
sub
mov
popa
stos
mov
fcmovbe
cmp
loop
mov
jb
out
xor
scas
cmpsb
scas
aad
and
mov
out
xor
cmp
cmpl
add
mov
push
or
inc
cmpsb
mov
cmp
mov
push
mov
sahf
or
dec
test
cmpsb
mov
out
icebp
adc
orl
mov
shlb
mov
add
push
mov
scas
mov
clc
xchg
into
shl
adc
inc
add
in
leave
imul
scas
pop
mov
mov
cmp
int3
icebp
mov
mov
jb
shlb
stos
cmp
xchg
mov
dec
mov
outsb
daa
and
sub
inc
xchg
jno
pop
loopne
jae
mov
jo
mov
and
into
jae
stos
inc
aad
shll
adc
pop
pop
fiadds
cmp
sbbl
push
xlat
ret
dec
xor
inc
inc
or
ret
jnp
lods
sub
fisubrs
test
lcall
fwait
pop
daa
idivl
scas
fcoml
adc
inc
das
cmc
jnp
dec
leave
sbb
and
mov
cmp
jbe
dec
jne
add
jae
jno
nop
movsl
test
and
pop
mov
adc
adc
cs
fs
movsl
movsl
lods
mov
mov
and
mov
mov
iret
xchg
mov
arpl
int
pop
mov
gs
xchg
mov
jl
or
dec
jle
mov
andl
or
test
shll
xor
sbb
popa
xorl
adc
cmp
mov
xor
mov
xchg
aaa
xchg
inc
pushl
and
scas
pop
fimuls
sbb
mov
adc
xor
cmp
shlb
bound
and
mov
icebp
dec
dec
js
sub
cmp
add
cwtl
rol
sbb
mov
push
add
and
push
pop
sbb
mov
lret
sarb
or
stos
iret
dec
sti
pusha
daa
inc
cwtl
arpl
mov
andb
cmp
cmp
pop
xchg
mov
pop
jg
shr
daa
test
xchg
mov
pop
lcall
inc
xor
leave
cmpsb
insl
rcl
jmp
mov
push
mov
aas
arpl
sbb
lret
push
ret
xor
sarb
mov
push
push
rorl
xchg
mov
mov
add
subb
mov
dec
hlt
or
xor
shll
mov
jb
clc
push
dec
cmp
pop
cmp
xchg
fs
add
pushf
mov
adc
outsl
andl
sbb
and
cmp
sbb
test
and
inc
adc
add
fnstenv
cmp
adc
nop
sub
scas
mov
lock
rcr
pop
push
sti
xchg
xchg
jne
jl
pop
mov
jmp
mov
cmc
stos
xlat
cmp
call
fwait
pushf
push
push
mov
jno
push
cmp
xchg
lret
in
mov
aas
lods
mov
hlt
sti
xlat
and
lahf
jns
ficompl
stos
or
es
cmc
mov
loope
mov
fstl
aas
int
jbe
push
movsl
push
pop
cld
test
and
mov
fwait
xor
ja
mov
pop
cltd
sbb
sti
xor
loop
and
cwtl
mov
pushf
scas
cmpsl
sarl
or
mov
cwtl
bound
es
fmull
lret
mov
xchg
and
and
iret
ficompl
inc
cmpsl
xor
in
push
mov
pusha
jns
int3
daa
test
xchg
mov
mov
mov
popa
mov
sbb
or
pop
jae
xchg
hlt
test
mov
cmpsl
sbb
mov
loopne
cli
addb
cmpsl
dec
insb
mov
lds
mov
js
cmp
or
cmp
lods
jl
mov
test
mov
jg
jno
push
iret
fnstcw
gs
daa
mov
lea
mov
xchg
cmc
cmp
sbb
shlb
cmc
jp
in
ljmp
xor
jb
mov
sbb
loopne
in
pop
movsb
cmpsb
popa
mulb
jle
fs
int3
out
add
sbb
jp
sub
imul
and
or
inc
dec
fidivs
and
cmova
pop
mov
insl
inc
test
pop
into
mov
leave
pop
bnd
fcmove
mov
inc
test
mov
sbb
fwait
and
mov
mov
test
adc
sbb
rclb
inc
aaa
fwait
popf
mov
aas
inc
push
xor
lret
xor
push
adc
cmp
xchg
mov
dec
cmpsb
xchg
movsl
fisubl
jle
sarl
sbb
loopne
xorb
cmpsl
fsubp
mov
add
push
or
inc
fdivr
mov
sub
jecxz
sahf
xor
mov
mov
scas
insb
jno
jg
or
add
imul
sbb
test
mov
or
lahf
nop
pushf
push
ss
mov
mov
dec
lret
cli
pop
mov
popf
cmp
gs
xchg
inc
test
and
xchg
ljmp
xchg
mov
daa
stos
mov
add
mov
jp
mov
mov
xorb
dec
add
call
jns
pop
cmpsl
imul
adc
lcall
jns
test
mov
imul
cltd
cwtl
fdivr
lds
cli
mov
cmpsl
subl
mov
ljmp
pop
aas
scas
cmp
or
ficompl
xlat
mov
sub
xchg
cmp
xor
orl
pop
dec
and
xor
xor
stc
daa
and
pop
xchg
cld
mov
cwtl
push
fcomps
inc
les
out
jp
mov
mov
jns
and
mov
add
sbb
mov
mov
hlt
add
mull
popf
scas
or
pop
mov
mov
xchg
sbb
fwait
pop
dec
and
and
cmp
stc
jbe
mov
pop
or
xor
js
adc
push
lods
call
inc
popf
movsl
mov
dec
cmc
jge
mov
pop
sbb
shlb
stos
pop
cmp
add
xlat
int
xor
out
cmp
xlat
dec
iret
push
dec
sbbb
fsubrl
in
xor
icebp
cmpsl
mov
je
incb
cltd
insl
sbb
iret
hlt
mov
test
lods
scas
sub
sub
sarb
shrl
aas
imul
pop
icebp
mov
cmpsl
and
mov
sbb
mov
aad
mov
test
and
mov
shll
pop
xchg
pushf
mov
mov
stos
aam
cld
mov
jae
and
mov
ja
gs
jnp
mov
loope
mov
pop
lods
pushf
faddp
movsl
jmp
ret
jne
leave
mov
jae
xor
pop
cmp
jb
jno
cli
nop
inc
jecxz
lahf
in
xlat
jmp
mov
xor
or
stos
mov
cwtl
mov
push
shrl
jno
popa
xchg
dec
cmpsb
fs
jae
or
mov
in
jno
xlat
jb
inc
inc
or
mov
mov
mov
test
cwtl
addr16
leave
inc
test
pop
xor
addr16
adcl
push
mov
cmp
or
loopne
mov
subl
cltd
and
pop
mov
shll
mov
mov
push
adc
cmp
repnz
mov
cltd
cs
mov
sarl
pop
push
mov
clc
scas
je
lret
xchg
adc
stc
mov
ja
cmp
pop
mov
scas
incb
cli
mov
dec
sub
mov
xchg
and
mov
jge
inc
leave
sbb
mov
jae
mov
test
mov
xchg
jae
push
rolb
movsb
pushf
pop
in
cmp
pop
inc
fwait
ret
mov
push
and
pop
sub
cwtl
sbb
xor
adcb
mov
movsl
xor
lock
mov
popa
subl
mov
jno
daa
sbb
adc
xchg
mov
out
scas
and
outsl
test
sbb
jge
mov
or
sub
sub
pop
pop
jle
popa
sbb
pop
shrl
scas
stos
sub
scas
mov
xor
push
mov
mov
fwait
mov
cmc
jns
es
or
mov
sub
dec
mov
xor
pop
mov
and
and
cmpsb
mov
adc
mov
mov
aaa
inc
xor
and
scas
inc
fcomps
push
mov
jl
fcoml
decb
mov
sub
mov
test
mov
and
sub
and
mov
add
mov
aas
bound
sbb
jg
push
mov
cltd
jl
call
data16
mov
xchg
mov
aaa
ret
mov
jge
scas
popa
lret
xchg
loop
call
dec
imull
fwait
test
xchg
repz
mov
lock
jmp
cmp
add
mov
fisubs
mov
sub
dec
stos
ret
jnp
addr16
movsl
push
pop
jb
cwtl
test
mov
int3
cs
mov
sbb
cltd
stos
xlat
cmpsl
mov
cmpsb
xor
xor
cmpsl
outsb
std
xor
cmp
inc
mov
mov
adc
adc
cmc
mov
mov
jns
xchg
xor
push
addl
mov
arpl
fwait
add
sahf
pop
or
mov
cmp
xlat
andl
and
ss
mov
test
mov
mul
cltd
cltd
loope
xrelease
jnp
cmpsb
and
mov
movups
mov
inc
lret
xor
int
mov
inc
ret
mov
popa
mov
add
fcmovbe
cmp
imul
fdivs
mov
inc
pop
mov
pop
lcall
adc
add
scas
inc
mov
adc
shll
adc
out
xor
sub
and
nop
frstor
mull
mov
sub
dec
inc
xchg
insl
xchg
add
movsl
cmpsb
cwtl
or
inc
outsl
aas
sub
rep
pop
idivl
lds
add
mov
scas
lahf
test
push
xor
dec
lds
andl
mov
xor
jnp
cmc
cmpsl
lahf
mov
xchg
sub
jp
loope
scas
lret
arpl
mov
add
aaa
movsl
cmpsl
shll
mov
sbb
or
idivl
stc
mov
mov
scas
fidivs
cmc
jnp
icebp
mov
loop
mov
ret
popa
mov
rol
mov
or
cmp
insl
mov
and
mov
mov
add
adc
cmp
addr16
cmp
mov
pop
cmp
aam
mov
push
fwait
mov
mov
sub
mov
mov
pop
imul
dec
aas
loop
shlb
cmp
pop
pop
in
jae
jmp
ret
or
mov
sbb
and
adc
add
sub
mov
stos
cmp
fwait
xlat
mov
cmp
mov
mov
mov
mov
out
lods
xchg
inc
into
cmp
cmpsl
push
rorl
mov
sarb
stos
mov
sbb
xchg
lods
jl
mov
ja
mov
jmp
xor
push
dec
xor
fwait
mov
sbb
jge
cmp
mov
sarb
mov
jb
fs
ficompl
mov
icebp
xor
mov
inc
mov
cmp
push
imul
into
clc
xlat
dec
icebp
loopne
jge
pop
test
ds
jae
pop
mov
mov
test
loopne
inc
pop
movsl
aaa
test
pop
cmpsl
pop
stos
push
sbbl
or
and
jo
jl
mov
fidivl
xor
call
cmp
andl
lods
mov
fldl
mov
and
cwtl
mov
mov
popf
add
inc
nop
cmp
xor
in
xor
xchg
push
add
mov
add
mov
sbb
and
mov
mov
dec
lcall
mov
es
xor
sub
mov
shl
push
std
dec
test
out
es
test
lret
enter
xchg
mov
jmp
orb
icebp
mov
mov
int3
ds
cmp
mov
xchg
mov
pop
gs
jae
scas
stos
inc
dec
jbe
repz
cmp
add
jne
mov
mov
adc
mov
ljmp
mov
inc
movsl
mov
mov
popf
cmp
push
lcall
in
sarl
mov
mov
test
lret
dec
xor
mov
xor
xlat
imul
and
pop
fsubr
jns
scas
into
xchg
and
fidivl
mov
sbb
out
push
in
mov
bound
shll
pop
push
pop
scas
orb
std
cwtl
lahf
movsb
cmp
mov
pop
xchg
cmp
adc
in
outsl
xlat
test
xchg
push
sbb
jl
cmp
hlt
mov
push
mov
fwait
mov
pusha
pop
lcall
push
dec
clc
jb
mov
sar
xlat
imul
mov
xchg
lret
mov
ficompl
adc
test
xchg
push
roll
mov
shlb
ljmp
sub
mov
mov
mov
arpl
cmpsl
lds
mov
inc
mov
pop
repnz
jl
js
out
daa
adc
ljmp
fwait
add
push
cmp
sbb
push
movzbl
stc
mov
mov
ds
inc
jmp
inc
mov
addr16
xor
sub
lcall
icebp
mov
mov
testb
xor
cltd
ret
movsb
jl
xchg
out
jns
xchg
and
nop
aad
aaa
mov
mov
mov
pop
mov
push
jns
mov
mov
inc
stos
xlat
ret
dec
andl
fwait
mov
xchg
mov
aaa
mov
jnp
sub
shr
mov
mov
imul
dec
adc
mov
add
sub
imul
mov
jnp
sub
jge
decb
add
mov
cld
mov
mov
jns
sub
mov
mov
daa
sub
popa
stos
adc
sbbl
xchg
mov
test
imul
xorl
movb
mov
movsb
iret
loope
sbb
inc
mov
lret
sbb
and
test
lods
adc
mov
mov
outsl
fidivrl
int
sub
cmp
mov
mov
adcl
pusha
daa
fstpt
sub
fcomps
adc
cmpsl
out
inc
subl
into
mov
pop
imul
shrl
cltd
inc
jns
push
fmulp
and
dec
add
inc
shlb
sbb
mov
sahf
cmpsl
imul
xchg
jbe
mov
sbb
test
lods
lds
insl
jo
clc
dec
movsl
mov
mov
mov
jge
lods
and
inc
mov
fldt
mov
sbbl
sahf
mov
mov
ret
dec
pusha
add
mov
mov
jp
mov
xorps
imul
mov
gs
push
pop
adc
lods
xchg
and
add
mov
daa
mov
mov
and
add
andl
push
in
mov
pop
mov
mov
sub
fisubl
adc
jo
mov
mov
mov
in
mov
ds
hlt
shll
lods
movsl
add
cmpsl
test
fcmovnbe
push
inc
dec
pop
shl
jno
shrb
sub
hlt
repz
gs
mov
cmpsl
adc
fisubrs
fdivrs
cmp
mov
fldcw
bound
mov
add
aad
mov
fmuls
popf
cmp
loop
push
sahf
push
test
test
mov
fsubl
lret
mov
cld
adc
xchg
mov
and
pop
mov
or
arpl
xor
mov
cmp
mov
mov
enter
andb
mov
aad
cmp
lods
movsl
ficomps
or
into
data16
push
mov
mov
jns
cli
fnsave
jb
lock
hlt
jae
add
aam
push
cmpsl
xlat
jge
sahf
xor
jno
enter
mov
rolb
mov
and
fstpl
jge
cmp
outsb
mov
ret
mov
push
add
addl
mov
jecxz
cmp
push
popf
mov
pop
imul
jo
cmpsl
out
movsl
or
cmp
or
pop
scas
cltd
mov
movsb
lret
push
ss
xchg
movsl
sbb
fsts
jns
dec
add
cmpsb
mov
test
mov
mov
mov
push
stos
and
pcmpeqb
das
movl
stc
lock
jns
sti
shll
lods
mov
or
cmpsl
adc
loop
xor
mov
std
xlat
cld
mov
mov
mov
sub
das
fwait
mov
and
fmulp
pop
mov
and
repz
enter
rcrl
mov
pop
inc
lods
pop
jg
inc
mov
scas
cmpsl
fsubrs
clc
cmpsb
xchg
mov
inc
repnz
inc
pop
pop
mov
leave
mov
mov
mov
or
lea
mov
pop
outsb
addb
sbb
lods
out
xchg
jns
push
mov
lds
ficomps
mov
xchg
push
mov
lock
mov
outsb
ljmp
out
xchg
fidivrs
cwtl
sbb
add
adc
cmpsl
cwtl
je
jnp
idiv
xchg
data16
into
mov
add
fwait
inc
das
jns
jg
subl
sbb
mov
int3
dec
aas
sbb
out
mov
cltd
rcrl
adc
mov
lahf
sub
mov
mov
xchg
jle
lods
jae
jmp
daa
sahf
shlb
add
arpl
xlat
xor
gs
jnp
mov
inc
mov
daa
mov
mov
mov
push
jae
mov
data16
pop
push
lea
test
mov
das
leave
and
lahf
movsl
mov
pop
ja
mov
add
jo
stc
sbb
mov
xlat
repnz
into
and
sub
lds
mov
lcall
mov
jo
sbb
movsl
scas
or
sbb
push
cltd
mov
ds
cmp
add
scas
lret
cwtl
sbb
cmp
xor
jo
cmpl
mov
lods
imul
xor
add
ret
lgs
push
cmp
gs
and
enter
idiv
or
xor
out
mov
addr16
sbb
or
lret
jnp
or
cmp
xchg
pop
mov
mov
pop
or
and
loope
add
xchg
sbb
cwtl
cwtl
push
out
xor
or
pop
xchg
mov
pushl
test
in
add
mov
adc
repz
cmp
jg
arpl
ficoml
pushf
ret
xor
fadd
mov
mov
push
mov
pop
mov
std
daa
nop
in
lahf
jnp
add
lcall
push
xchg
test
in
aam
adc
aad
push
icebp
rorb
push
ja
mov
pop
repz
mov
fwait
xchg
fdivrl
push
xor
mov
dec
inc
lock
pop
cmpl
jp
cmc
stos
movzwl
xor
pop
mov
push
fbld
js
xor
iret
dec
int
cltd
mov
xchg
cmpsl
and
push
push
mov
add
stos
rcrb
jecxz
outsb
sbb
int
fiadds
jns
xor
lret
sbb
cltd
imul
cli
inc
int
test
cmp
scas
mov
mov
in
xchg
leave
test
mov
mov
cwtl
jecxz
imul
inc
mov
popa
lods
fwait
cmp
or
push
jbe
add
mov
mov
push
ret
mov
and
pusha
sbb
xchg
mov
mov
in
xchg
adc
pop
out
mov
xor
movb
push
cli
jg
movsl
mov
xchg
add
ret
mov
adc
mov
cwtl
add
cmp
movzwl
inc
arpl
mov
mov
lds
sub
mov
out
adc
das
mov
sbb
icebp
and
jns
push
jl
pop
in
lahf
adc
and
icebp
arpl
sahf
sbb
test
or
loop
test
and
add
jnp
mov
lcall
mov
jne
ss
dec
fisubrs
cltd
inc
addr16
and
fcmovbe
mov
add
and
nop
loope
out
shlb
push
test
mov
mov
sbb
mov
fsubrl
hlt
jp
cwtl
es
in
mov
ljmp
and
push
push
ret
addb
mov
arpl
cmp
or
cltd
dec
xlat
push
add
jnp
jp
dec
loop
or
in
cmc
jae
cmpsl
cmp
dec
lahf
sarb
mov
mov
and
xor
mov
jecxz
push
push
lret
jmp
mov
insl
pop
stos
cmpsl
shlb
pop
and
jg
arpl
xchg
mov
jnp
movsb
mov
lods
push
add
ja
mov
fisubl
repz
mov
or
arpl
int3
or
mov
lcall
fsubrs
push
mov
jg
pop
and
clc
stos
jmp
imulb
rcrb
sbb
mov
or
lahf
fdivl
mov
je
shrl
inc
pop
cwtl
cs
mov
gs
dec
xchg
dec
mov
sbb
add
inc
repnz
push
cmp
ljmp
fildl
jnp
jno
xor
push
outsl
ljmp
mov
jnp
jae
jg
xchg
mov
fsubs
pop
pushf
movsl
dec
fwait
icebp
jbe
cmpsl
dec
sbb
stc
and
aaa
push
stos
stos
aas
hlt
ljmp
lods
xchg
adc
xor
dec
scas
inc
aas
insb
stc
add
popa
sbb
mov
icebp
fwait
lcall
xlat
into
mov
sub
push
jae
sbb
mov
cmpsl
inc
adc
stos
je
xlat
and
cmpsl
repnz
cmp
push
xlat
pop
cmp
mov
add
jge
xor
or
xchg
and
scas
sub
incl
mov
adc
mov
xor
pop
pop
add
jo
cmp
lret
jae
imul
push
mov
aaa
andl
or
repnz
adc
push
getsec
xor
movsb
es
jl
mov
mov
push
cltd
lods
push
xor
mov
xorl
fldt
ret
mov
fwait
outsb
ds
daa
pop
test
cmp
in
cmpsb
mov
fcomps
dec
mov
arpl
addr16
push
nop
divl
and
cmp
inc
or
add
scas
push
fsubrs
jle
or
pop
xchg
mov
pop
or
cmp
pop
or
or
mov
push
xchg
mov
jle
ljmp
gs
sbb
fdivrs
push
mov
outsb
sub
adc
iret
mov
mov
loop
ficompl
fwait
jg
mov
cmp
out
mov
shrl
ss
aas
jle
xor
nop
insb
adc
push
jecxz
mov
dec
push
ja
ljmp
bound
daa
pusha
movsl
sbb
imul
lods
std
add
mov
iret
ja
push
lret
pop
incl
lods
inc
test
sbb
js
and
mov
data16
test
mov
mov
sbb
cmpsb
xor
adc
jmp
jge
out
lods
sub
aad
pushf
scas
fsubs
cltd
mov
rorb
pop
jecxz
and
leave
mov
dec
ret
or
into
jge
dec
mov
inc
mov
and
or
je
mov
jmp
jge
cmc
std
sbb
lahf
ja
jg
cmpsl
incl
mov
mov
cwtl
jb
ss
bound
mov
mov
inc
inc
fstps
es
or
stos
mov
mov
shlb
addl
cmp
xlat
fwait
xchg
xor
inc
fnsave
inc
sar
movsb
mov
jne
dec
push
inc
fmul
xlat
sbb
outsl
xchg
stos
cs
and
cmpsl
cmpsb
mov
cmpsb
xchg
push
xor
lock
jmp
push
mov
add
sub
mov
jb
pop
insb
lods
push
mov
mov
lcall
out
stc
xchg
mov
lret
lcall
xchg
add
inc
mov
outsb
push
rorb
das
cmpsb
pushf
sbb
arpl
cltd
insl
and
jae
cmp
mov
xchg
mov
xlat
or
cmpsl
jb
lods
repnz
and
mov
mov
mov
xor
mov
in
mov
pop
cmovns
ficomps
stos
data16
fwait
fs
push
mov
xchg
leave
xor
push
scas
xchg
orl
cwtl
lock
into
push
lahf
mov
xchg
inc
jp
ficomps
repz
sbb
jnp
xor
orb
popf
rolb
fdivs
sbb
push
mov
add
mov
ss
mov
sub
mov
mov
test
sbbl
mov
pop
into
mov
mov
je
jge
scas
pop
lahf
mov
lea
bound
stos
insl
lods
add
xchg
cmp
pusha
les
inc
or
jno
mov
mov
call
pop
iret
stos
adc
scas
aaa
mov
xchg
arpl
add
into
inc
jg
or
scas
cltd
repz
mov
or
test
xchg
fbld
sub
ljmp
mov
mov
int
sub
lds
inc
mov
adc
add
push
mov
mov
test
sarb
or
leave
scas
fdivs
mov
jmp
xchg
dec
sbb
ret
jns
mov
mov
mov
fadd
js
fstp
mov
cmp
jo
scas
repz
push
mov
mov
stos
pop
outsb
adc
je
lods
jge
and
jle
mov
jg
hlt
cmp
sbb
mov
add
xor
lods
das
pop
mov
push
add
shlb
mov
ljmp
mov
int
psubb
insb
jno
sbb
pop
adc
lock
stos
test
cmp
hlt
lods
mov
fsubl
lret
add
leave
popa
dec
and
mov
mov
push
mov
pop
mov
and
sub
out
cmc
mov
test
loop
cmp
enter
popa
mov
loopne
mov
shr
addb
jle
mov
xor
pop
jge
and
cmpsb
lahf
fwait
sahf
push
test
add
mov
add
cmp
jmp
xor
mov
adc
jecxz
jl
mov
repz
mov
jb
imul
xlat
cltd
mov
icebp
mov
shlb
pop
aam
mov
popa
movsb
sub
mov
inc
lods
dec
sbb
xchg
bound
test
out
mov
test
pop
stos
push
pop
inc
xchg
or
jo
and
arpl
nop
and
lahf
cmp
sub
insl
mov
daa
in
cld
mov
push
mov
mov
dec
inc
mov
int3
pop
xchg
push
sbb
cmp
testl
xchg
lods
addr16
shll
cli
cmp
dec
mov
stos
and
push
push
stos
mov
mov
cmp
push
push
mov
xchg
int3
xchg
sbb
popf
adc
leave
dec
pop
inc
lea
outsb
xchg
dec
xor
cmpsl
mov
js
ljmp
sub
mov
popa
pop
cwtl
cli
or
je
jne
mov
jnp
test
cmp
xlat
add
pop
xlat
jno
xchg
mov
cli
mov
stos
fidivl
add
shll
scas
pop
je
xlat
cmc
or
jl
ss
xor
add
mov
adc
xchg
and
lods
stos
outsb
mov
inc
filds
and
mov
mov
into
cmc
ret
mov
leave
jns
fdivl
inc
mov
mov
mov
lret
add
mov
pop
inc
mov
cli
push
mov
sarb
or
add
or
jb
daa
das
jo
aaa
mov
rorl
lret
scas
mov
sbb
ret
lods
daa
xchg
mov
in
mov
or
inc
ljmp
test
jmp
addl
mov
cmpsb
lcall
add
clc
jno
sbb
mov
mov
and
push
pop
add
gs
pop
pop
jb
stos
or
in
xorb
mull
stos
scas
jge
scas
movsl
stos
push
xlat
enter
pop
arpl
mov
mov
mov
mov
dec
fwait
adcl
lret
cmpsb
adc
xchg
inc
mov
idiv
cltd
adc
imul
jge
mov
jnp
mov
in
shlb
test
sbbl
or
pop
xchg
aaa
stos
outsl
enter
int
sbb
mov
jnp
adc
pop
xchg
mov
add
push
dec
shll
scas
jge
fnsave
loope
pop
icebp
mov
fwait
movsl
inc
mov
stos
cmp
mov
mov
test
call
sarl
and
mov
adc
test
jle
es
js
shlb
movsl
mov
cmpsl
push
mov
jg
mov
jae
push
insl
jge
fwait
mov
mov
loop
sbb
scas
mov
loopne
and
mov
fnsave
insl
pop
or
adcb
push
mov
mov
mov
pop
mov
pop
iret
push
mov
add
mov
dec
push
aaa
addr16
add
jns
dec
or
repz
test
jae
mov
cmp
mov
mov
mov
cld
pop
shlb
and
dec
out
arpl
sahf
into
sbb
cmpl
mov
iret
in
cld
imul
sub
inc
into
mov
lahf
pop
dec
push
sbb
sahf
test
mov
inc
xorl
pop
push
push
mov
andl
sub
sbb
iret
dec
xchg
scas
push
and
mov
stc
aad
xchg
test
push
mov
cmp
or
cmp
pop
fnclex
outsl
in
jl
sub
mov
jnp
dec
test
or
cmc
sub
and
xchg
lahf
cwtl
mov
jnp
add
mov
cmp
cli
in
fwait
mov
xchg
enter
pop
cmc
add
cwtl
mov
mov
notl
sub
mov
dec
int3
test
mov
jg
xor
xlat
ja
icebp
pop
outsl
push
lahf
push
mov
add
cmpsl
js
les
xchg
sbb
add
pop
and
shrl
mov
lret
fdivs
inc
sub
into
pop
in
push
xchg
aad
push
mov
ret
cmpsl
imul
jge
xchg
test
cmp
dec
scas
cmpsl
mov
or
adc
lret
xchg
xor
mov
mov
xor
adc
xchg
jb
lret
xor
jg
imul
sbb
shlb
cmp
adc
scas
xor
jne
fcomp
stc
stos
in
and
mov
rorb
out
jnp
mov
in
jae
add
cmp
xchg
shlb
add
jnp
test
sbbb
cltd
popf
shrl
mov
lods
mov
xchg
stos
mov
ja
mov
cmp
outsb
es
push
adc
jl
sbb
push
lret
jecxz
fdivs
push
arpl
mov
fldt
sahf
mov
mov
icebp
push
cmc
cmpsl
push
lods
and
rorb
lret
push
or
scas
mov
pusha
or
jb
push
test
gs
lcall
or
mov
negl
sub
cmp
xchg
adc
icebp
mov
mov
cwtl
xor
jns
sub
outsb
ss
aam
lret
jg
gs
mov
ss
fcoms
xor
sbb
xchg
test
jne
mov
push
scas
mov
mov
mov
cli
xor
fimull
ljmp
mov
stos
call
or
jb
xor
add
vpcmpgtd
aam
mov
sbb
jbe
xor
fs
or
and
jnp
mov
mulb
pop
jns
into
sbb
fsub
in
shl
add
bnd
mov
or
push
pushf
xor
mov
or
movsb
cmp
xchg
jnp
outsl
imul
pop
in
jge
jp
push
push
sbb
incb
cmp
sbb
pop
mov
add
cs
mov
andl
pop
ds
mov
cmpsl
pop
and
cmp
or
aad
inc
pop
push
xorb
pusha
push
mov
cmp
lea
nop
bound
orl
xor
enter
mov
daa
xor
add
ja
fimuls
and
sbb
stos
jle
repnz
mov
xchg
test
fs
cmp
push
add
es
mov
fcmovbe
mov
arpl
jnp
xchg
neg
mov
cwtl
xor
mov
cltd
inc
push
jno
mov
bound
imul
adc
jl
pop
adc
mov
pop
jge
fildl
rcrb
adc
ljmp
aad
cmpsb
lea
movsb
jmp
sbb
cli
cmp
addr16
sbb
sahf
mov
adc
pop
mov
icebp
mov
das
mov
mov
lods
cmp
fsubl
fsubrl
xchg
push
aas
jge
movsb
pop
mov
pushl
sub
xor
out
cs
daa
in
mov
out
into
inc
cwtl
cmp
pop
jl
sbb
mov
arpl
mov
or
cmpsl
sbb
mov
fsubrs
xlat
adc
ret
fidivrs
test
jno
movsb
mov
pop
loope
stos
jns
add
push
or
cmp
xor
call
lret
in
cs
mov
mov
cltd
inc
popa
es
test
cltd
das
inc
movb
or
xchg
push
mov
push
jp
shlb
pop
sbb
sbb
jge
fdivrs
cld
and
mov
popa
movsl
jl
inc
pusha
adc
daa
dec
jno
into
notl
dec
sbb
mov
add
insl
xchg
ljmp
popf
div
cmpl
daa
cltd
fimull
sbb
sub
mov
mov
jne
push
push
xchg
xchg
cmp
loopne
cmpsl
inc
or
cltd
mov
mov
push
jg
mov
repz
push
xor
rcrb
fwait
mov
mov
ss
sub
ror
ret
jp
fadds
pop
ja
addr16
mov
inc
das
sbb
fwait
push
cmp
dec
cltd
movsb
and
adc
or
cli
mov
mov
dec
repz
cmc
push
jnp
cld
lret
mov
stc
add
cmpsl
mov
xchg
cltd
icebp
cmpsb
mov
jns
fsubl
jmp
sub
enter
push
popa
icebp
sbb
pop
mov
lahf
mov
aas
in
jge
lea
aam
pop
xorl
mov
adc
iret
xchg
xchg
mov
lcall
mov
pusha
mov
movsb
adc
shlb
test
sti
mov
mov
dec
jno
popa
mov
or
sbb
iret
sbb
scas
mov
mov
fists
subb
add
cmp
mov
add
mov
fdivr
add
adc
lret
int3
dec
cmpsl
mov
inc
aad
stos
daa
xchg
test
les
jae
fiaddl
js
outsl
arpl
mov
mov
mov
push
cmp
mov
hlt
jge
cltd
mov
call
lds
incb
test
mov
cwtl
test
dec
lods
xchg
cltd
lea
scas
jnp
mov
aam
mov
out
mov
adc
mov
cltd
mov
sbb
adc
lcall
mov
add
lahf
pop
mov
jle
xor
fcoms
mov
push
stc
and
stos
ljmp
mov
xor
mov
add
sti
inc
fdivl
cmp
dec
and
jno
pusha
aas
add
push
mov
mov
test
sar
imull
pusha
mov
jle
lret
scas
or
imul
ja
or
push
inc
mov
inc
xor
test
xchg
mov
sub
cmp
lcall
outsb
cmp
rcl
sub
mov
ret
mov
mov
mov
out
scas
cmp
lahf
jmp
shll
add
xchg
xchg
inc
mov
lods
lret
ja
adc
mov
nop
scas
mov
mov
mov
es
cmpsb
adcb
or
test
push
mov
ss
repz
testl
sbb
out
xor
dec
mov
jb
aas
xchg
daa
test
and
fidivrs
and
dec
lds
mov
ja
push
faddl
cwtl
xchg
es
sarl
scas
push
mov
cltd
fcmovb
in
mov
or
fcompl
fstl
xor
dec
xchg
mov
cmpsb
outsl
lcall
and
dec
dec
and
test
rcl
fstps
iret
mov
dec
fimuls
aad
xor
mov
jle
addr16
insb
fstpt
xor
mov
mov
adc
push
js
push
cmp
daa
lea
test
stos
movsb
mov
mov
incb
mov
mov
or
and
daa
xlat
jge
xor
sbb
jp
mov
jae
mov
sbb
mov
in
int3
mov
jp
aas
cmp
mov
call
mov
jae
jns
rcr
add
iret
mov
xor
aaa
mov
cwtl
sub
and
sbb
leave
jnp
sbb
add
mov
dec
jge
repz
ljmp
fwait
sbb
push
sbb
pop
stc
push
pop
scas
jne
mov
or
roll
pop
mov
out
mov
fimull
sar
insl
cmpsl
or
jae
xlat
xchg
sbb
ja
loope
dec
scas
gs
shll
cmpl
jbe
xchg
pop
or
leave
mov
mov
cmp
rolb
in
xor
dec
gs
sub
adc
cmp
mov
sbbl
fistpll
mov
sub
adc
int3
mov
adc
arpl
or
sbb
xchg
xchg
mov
leave
jle
pop
out
iret
xor
or
and
repz
insl
xor
mov
xor
sti
push
lcall
imul
add
and
std
and
pop
lods
mov
fidivl
or
insb
into
mov
xor
mov
mov
mov
ret
sarb
sub
dec
sbb
rcl
and
cmp
inc
mov
xlat
cwtl
fisubl
xchg
pop
movsb
cmp
cmp
outsl
sbb
mov
inc
hlt
test
push
int3
popf
and
inc
andb
mov
lds
jnp
xor
mov
dec
lret
into
aas
cld
sub
bound
lds
add
mov
popf
aam
dec
xlat
adcl
mov
mov
jle
xchg
sbb
and
pop
scas
pop
lods
sub
xchg
pop
or
jle
sbb
out
inc
rcr
xor
iret
lret
int3
cmpl
pop
jno
clc
mov
cmp
stos
mov
or
mov
popa
dec
jae
mov
cli
sub
cmpsl
sbb
addr16
pop
pusha
aaa
outsb
imul
nop
lods
test
negl
stos
mov
mov
loop
aad
cmp
stos
pop
mov
adc
stos
inc
fwait
sub
jmp
bound
push
push
std
mov
mov
fimull
inc
mov
leave
adc
push
sti
lret
aam
std
daa
cmp
mul
push
test
mov
xor
mov
push
addr16
test
std
sub
in
bound
xchg
mov
leave
sar
inc
outsb
push
xlat
mov
int3
xchg
repz
mov
jo
or
adc
pop
bound
imul
sub
fcmove
mov
popf
or
mov
insl
imulb
cwtl
and
mov
icebp
add
imull
push
xlat
sbb
xor
int3
mov
dec
lods
idivb
aad
sub
and
fwait
inc
ret
jae
fisubs
cmpb
mov
jne
mov
mov
jle
inc
push
cmp
repz
mov
fwait
mov
popa
push
jl
add
scas
sarl
int3
xor
mov
les
jae
xor
push
jecxz
fsts
or
mov
adc
lret
stos
pop
mov
leave
lea
sbb
jno
std
xor
scas
push
sbb
stc
inc
xchg
test
mov
xchg
cltd
mov
mov
xchg
lcall
aas
xchg
xchg
mov
mov
gs
out
int
mov
sbb
mov
push
lret
stc
sbb
std
mov
add
ss
fadd
lretw
mov
insb
pop
push
mov
mov
mov
mov
mov
cld
dec
cmpsl
mov
mov
rcrl
cmc
push
repz
xchg
cmp
aad
ljmp
mov
fsub
sbbb
mov
sbb
lods
jl
mov
inc
cld
ljmp
push
dec
and
cmpsb
pop
jne
aas
scas
dec
sub
jecxz
jns
cmp
outsl
inc
add
das
mov
xor
mov
push
cmp
in
adc
jae
scas
xlat
sub
lret
imul
or
xchg
test
or
daa
lods
pop
mov
imul
cli
inc
test
pop
js
pop
stos
dec
ja
mov
and
mov
mov
add
ror
inc
add
mov
mov
inc
xchg
mov
test
adc
and
fwait
adc
lods
fcomps
movsl
es
cmp
mov
mov
mov
js
fistl
nop
sub
add
outsl
rcr
test
imul
xor
pop
nop
mov
paddusb
aas
iret
xchg
fld1
fadds
pop
mov
sbb
xlat
icebp
dec
mov
mov
jmp
sub
hlt
cwtl
mov
adc
sbb
std
push
mov
aas
and
mov
out
add
mov
test
loopne
lahf
or
lret
xor
mov
push
pop
jae
cmp
sarb
and
sub
push
lcall
scas
xchg
xchg
mov
adc
mov
xor
jae
add
shlb
sub
aam
addr16
cmp
pop
push
xchg
xor
mov
or
loop
test
or
cmp
scas
dec
iret
sub
fisttpll
inc
lcall
dec
nop
pop
mov
jo
sbb
fcomps
ret
mov
mov
sarb
ja
mov
addr16
xor
sub
scas
mov
es
cmpl
mov
lahf
cmpsl
xchg
mov
mov
cmpsb
mul
aam
mov
stos
test
cwtl
jle
addr16
into
cmpsl
mov
or
add
push
xchg
loope
or
mov
out
fsubrl
cmp
subb
sbb
pop
pusha
mov
push
imul
sbb
test
xchg
jp
mov
cmp
inc
movsb
or
mov
in
test
add
jnp
pop
mov
jnp
dec
jle
xchg
ss
add
lock
cwtl
mov
mov
loope
adc
popa
jae
xor
insl
cmp
jnp
movsb
xor
scas
out
cmpsl
fwait
les
push
push
mov
insl
daa
mov
icebp
cwtl
cmpsl
in
fnstenv
mov
sub
xlat
pop
dec
jne
imul
push
test
inc
mov
pusha
in
jae
iret
mov
daa
stos
jle
cmp
push
mov
cs
insb
pop
jmp
jns
lods
mov
xor
lret
xlat
push
jge
sub
mov
test
sub
mov
imul
mov
jno
fnstenv
add
das
mov
dec
data16
ds
ss
mov
mov
or
gs
cld
cs
jae
scas
inc
jl
xchg
cmp
add
fiadds
mov
xor
mov
inc
xchg
mov
std
lods
fwait
fwait
aam
fsubrl
xlat
adc
stos
adc
ss
mov
daa
push
xchg
sub
out
jne
mov
stos
dec
pop
les
push
cmp
cmpb
mov
fistps
fiadds
mov
mov
or
bound
xchg
push
push
mov
lahf
inc
and
mov
out
frstor
ss
add
sub
xchg
pushf
push
stos
push
mov
aas
sbb
cwtl
mov
es
sub
mov
inc
iret
sarl
mov
mov
cmp
divb
scas
mov
mov
mov
push
xchg
jg
push
cmpsl
shrl
mov
xor
sbb
pop
mov
dec
loopne
xor
push
cltd
cmpsb
test
pop
cmp
adc
cmpsl
mov
out
pop
imul
sub
push
pop
jbe
jns
jo
lret
push
and
aam
or
mov
mov
jnp
mov
es
cmc
daa
shll
sahf
push
pop
aam
mov
pop
pop
xchg
jbe
lret
mov
lds
sub
pop
add
or
cmpsl
sbb
sbb
mov
andl
mov
pop
dec
add
pop
lret
mov
jns
sub
int3
jg
mov
fdivrs
mov
imul
jnp
aad
cmpsl
xlat
push
test
xchg
fildl
cwtl
rol
lea
pop
stc
fwait
aad
xlat
loopne
mov
stc
mov
mov
add
mov
cwtl
adcl
movsl
hlt
xchg
mov
mov
mov
aas
inc
ret
imul
mov
or
add
xchg
lret
test
iret
cwtl
stos
lret
into
stos
adc
popa
fildll
mov
adc
mov
cmp
jne
push
or
xchg
push
shrl
ja
int3
mov
dec
mov
and
out
scas
jno
mov
push
and
jo
jne
cwtl
cmpsl
popf
frstor
shrb
mov
clc
sbbb
add
push
lods
cmp
out
cmp
xchg
imul
stos
xor
sbbl
and
sub
inc
gs
test
push
jg
ja
jo
mov
lock
cmpsl
gs
bnd
xchg
enter
cmp
mov
mov
data16
ficoml
sub
lret
ss
or
pop
ja
jns
mov
xor
and
fsubl
sub
jecxz
cmp
add
stos
inc
mov
dec
aas
in
push
fwait
mov
jl
mov
xchg
push
or
and
ds
pusha
lds
icebp
sub
cmp
popa
mov
test
scas
jo
push
stos
jno
mov
mov
cmp
xor
adc
pop
mov
test
in
dec
inc
jle
insb
loop
std
test
cmp
jmp
mov
dec
decb
sub
cmp
sti
mov
popf
lret
clc
jns
mov
fdivs
das
iret
dec
inc
mov
ror
lahf
int3
cmp
mov
cmp
imul
or
adcl
cli
mov
mov
push
cmp
inc
xchg
imul
jno
std
lahf
or
cltd
dec
pop
push
leave
xor
mov
dec
dec
ds
mov
fidivl
mov
movsl
mov
imul
rorl
mov
add
adc
lret
pop
test
cmpsl
jp
imul
scas
arpl
pop
iret
sub
shl
cmp
mov
pop
pop
in
sbb
mov
stc
push
scas
fdivl
subb
and
mov
push
int3
cmp
fildl
testb
fidivrl
sub
xor
cmp
pushl
fimull
mov
add
mov
sbb
mov
test
or
sarl
imul
cmp
lahf
mov
push
xor
dec
addr16
sbb
mov
cmpsl
xchg
fisubrl
jg
mov
mov
or
insl
pop
scas
xchg
mov
jnp
dec
mov
addr16
andl
rcrl
and
mov
add
daa
cltd
fidivl
les
fistps
sbb
mull
or
arpl
cmp
leave
data16
xor
mov
fsubr
jbe
movsl
sub
inc
bound
scas
gs
dec
mov
mov
jns
rcr
outsl
mov
xor
add
mov
js
mov
movsl
fcoml
sbb
pusha
das
jo
push
aaa
cwtl
mov
cmp
test
adc
adc
push
mov
fstpl
fdivrl
dec
adc
fwait
push
cmpsb
subb
les
mov
pushf
fidivrl
mov
lcall
mov
adc
xchg
mov
dec
fwait
sbb
subb
call
sub
mov
movsb
lea
arpl
sbb
rorl
jae
cltd
jl
fmuls
arpl
push
mov
or
test
adc
mov
loope
int
sub
cltd
mov
sbb
arpl
mov
imul
mov
rcrl
sbb
iret
repz
imul
fwait
mov
jge
mov
out
aam
out
xlat
xchg
jecxz
lret
add
mov
les
sti
enter
push
jmp
loopne
mov
push
xor
movsb
scas
adc
sbb
lret
inc
insl
mov
int
mov
and
mov
out
push
ret
cltd
sbb
pop
scas
xlat
add
test
insl
cmp
lods
lcall
mov
movsb
sub
and
mov
ficomps
repnz
scas
pop
mov
sarb
push
or
mov
sub
in
mov
fsubr
mov
or
fidivl
mov
adc
imul
jns
in
lcall
insb
lcall
lods
test
mov
dec
push
or
cmp
pop
mov
faddl
not
mov
mov
and
mov
add
test
xchg
xlat
pop
shrb
nop
mov
notb
jl
xchg
or
dec
sub
popl
mov
and
pop
mov
ss
inc
shlb
mov
and
and
push
test
mov
mov
mov
outsb
jnp
movsb
ja
xchg
mov
fwait
push
xlat
jg
cmp
xor
xor
dec
pop
stos
sub
pop
mov
mov
mov
fidivrs
cmpsb
addr16
mov
cmp
dec
andb
leave
out
mov
mov
imul
add
cmpsl
jp
cli
cltd
and
xor
push
repz
xchg
and
insw
int3
mov
or
cmpsl
jmp
std
pop
adc
push
cld
mov
lahf
or
mov
pop
popa
cltd
cmp
inc
jge
add
subl
inc
xchg
lods
ud0
add
mov
mov
js
arpl
nop
or
aas
sahf
daa
das
cltd
xchg
mov
jae
xlat
dec
js
out
inc
mov
popa
stos
cmp
mov
xor
movsb
dec
mov
jle
push
mov
enter
mov
xor
fwait
and
push
cmpsl
or
outsb
dec
mov
ss
inc
xor
aas
ss
scas
test
lcall
lret
lds
mov
shrl
xchg
mov
ficoml
jne
scas
data16
int
jp
lods
add
pushf
add
es
or
mov
mov
lock
gs
clc
adc
in
jnp
pop
inc
into
sbb
pusha
mov
or
arpl
mov
pop
sbb
mov
mov
and
inc
fldt
fld
mov
sbb
jae
cmp
aaa
iret
iret
jne
mov
push
mov
into
sub
aad
cmp
inc
ljmp
rclb
adc
mov
adc
pop
pop
jmp
jbe
pop
mov
pop
insl
add
pop
inc
lods
aaa
push
cwtl
pop
dec
sbb
adc
clc
xor
lods
lock
pop
push
cmp
movsl
cmpsb
cmpsl
cltd
popa
arpl
xlat
mov
mov
push
jne
lahf
shll
addl
cltd
loop
mov
xchg
sbb
inc
cmpsl
fidivs
test
jge
cltd
negl
fistl
lock
jns
dec
cli
xchg
add
inc
lea
mov
mov
es
mov
jo
and
in
jns
sbbl
arpl
bound
jbe
mov
mov
push
jae
popa
out
cmc
and
xchg
mov
sahf
jo
icebp
stc
pop
mov
shr
push
mov
ret
jge
xor
hlt
inc
sub
lahf
std
mov
loop
jae
cwtl
aaa
inc
mov
mov
xorb
sbbb
mov
imul
and
sub
add
add
sbb
mov
out
pop
lret
jnp
mov
jbe
cwtl
imul
mov
stos
cmp
mov
xor
lea
js
adc
fwait
lret
sbb
outsb
test
dec
push
adc
incb
or
sub
jge
mov
push
lret
sbb
subl
xor
popa
repz
sahf
add
lods
mov
adc
js
push
aaa
mov
and
or
loop
mov
or
ja
mov
sbb
lea
mov
ret
fcomp
add
mov
xchg
sub
stc
and
fstpt
in
cmp
xchg
mov
test
mov
aaa
rol
lcall
push
add
add
subl
mov
dec
mov
call
repnz
sub
ret
int3
pop
mov
or
jg
and
cwtl
into
inc
pushf
jecxz
mov
mov
int
or
inc
add
or
jg
jmp
jl
or
and
jnp
movsl
jnp
gs
ret
mov
dec
pop
lods
add
or
mov
notl
cmp
mov
fwait
push
repnz
cmpsb
or
xor
push
fwait
push
jb
cmpsl
adc
mov
push
out
or
push
adc
push
andl
mov
jbe
xchg
xor
test
lahf
and
jns
mov
cwtl
dec
cltd
out
shrb
jno
xchg
lahf
aas
mov
fwait
mov
mov
mov
cmpsl
movlps
shl
mov
jae
xor
pusha
repnz
sti
add
ljmp
pop
cmp
fiadds
cmpsl
xchg
add
dec
lods
pop
movsl
dec
jecxz
pop
mov
shll
push
pop
cmp
jns
sbb
cmpsw
xchg
lods
mov
lret
push
jnp
insl
je
fdivrl
int3
call
mov
pushf
mov
mov
lcall
fwait
cltd
fcomip
scas
lods
cmp
jns
push
psrad
imul
sbb
push
filds
xchg
and
fwait
arpl
fcmove
outsl
mov
lahf
lods
pop
cmpsl
stos
test
cmp
jecxz
cmpsl
sub
or
adc
pop
stos
jle
xlat
or
clc
movsb
mov
daa
ja
adc
mov
pop
pop
jmp
stos
mov
iret
jp
cmp
adc
les
clc
pop
mov
out
jnp
cmpsl
dec
in
addr16
loopne
orl
mov
mov
jnp
xchg
mov
and
mov
pusha
pop
fdivrl
leave
imul
aas
xchg
mov
roll
cmpl
in
subl
xchg
pop
hlt
xor
and
mov
test
sbbl
ljmp
dec
mov
sbbl
fisubl
pop
mov
or
xchg
dec
push
sub
xchg
pop
mov
inc
mov
add
pop
rolb
movb
inc
sub
scas
pop
sbb
mov
mov
sub
daa
sbb
mov
shll
xchg
cli
jns
mov
cmpsl
orb
mov
pminsw
repz
adc
fwait
sub
notb
gs
inc
inc
test
int3
mov
cmp
sbb
sbb
mov
xor
fistl
sbb
xlat
xchg
fisttps
movsl
dec
test
mov
fidivl
mov
mov
and
lcall
aaa
jnp
cld
xchg
cmc
mov
inc
pushf
cmpsb
loopne
push
and
mov
mov
mov
pop
cmp
ja
cltd
daa
test
aas
and
mov
cwtl
inc
sbb
outsl
cmpsl
mov
jle
leave
cwtl
pop
sahf
out
sub
mov
daa
mov
int3
movsl
cmc
mov
push
sbb
call
cli
fdivrs
out
and
aaa
push
add
pop
adc
test
push
cltd
xlat
inc
push
lret
icebp
scas
push
lods
mov
in
shl
sub
mov
mov
fwait
je
xor
push
ret
fcmovnb
cmp
repz
mov
scas
sbb
mov
ret
test
inc
xchg
mov
cmpsl
outsb
dec
jae
xchg
jne
mov
adc
mov
iret
push
push
cwtl
mov
mov
imul
mov
and
imull
mov
loop
lcall
incb
test
fwait
and
mov
cmp
jg
in
sbb
stos
xor
mov
adc
loope
shll
je
mov
xchg
pop
xlat
int3
dec
sahf
shlb
add
jmp
cmp
ljmp
fnop
jge
xorb
mul
ss
sub
test
pop
inc
mov
mov
ljmp
mov
mov
shrb
pop
xlat
int3
mov
mov
imul
idivl
xorl
mov
sbb
sub
sub
cmp
das
fistl
ret
cltd
rcrl
add
jle
mov
cmp
insb
sbb
mov
inc
mov
mov
lds
sbb
stc
cwtl
mov
into
push
mov
inc
lret
mov
xchg
push
mov
ror
not
mov
sahf
cltd
jns
movsl
adc
cli
dec
js
sub
dec
das
sbb
andl
fcoml
lret
push
jne
cmp
jnp
xlat
pop
iret
das
scas
xchg
xlat
arpl
add
xor
shrb
sbb
stos
mov
jecxz
adc
pusha
stc
sarl
fdivl
inc
xor
gs
mov
jae
mov
mov
scas
mov
xchg
mov
jb
push
adc
lds
mov
xor
mov
jo
xchg
mov
jl
push
ret
cmpsl
push
xlat
sbbl
pop
imul
push
pop
fisttpl
jnp
ficompl
arpl
xor
cmp
aad
lock
xchg
addl
xchg
mov
mov
mov
add
cwtl
xchg
pop
roll
cmp
dec
adc
scas
leave
xchg
cltd
divl
test
movsb
xor
rcll
add
inc
jg
adc
cmp
cmc
cwtl
mov
push
sahf
xchg
mov
leave
mov
xchg
in
jg
mov
sbb
in
mov
stos
jnp
imul
push
cltd
or
mov
sub
cmp
sub
xor
mov
aad
lods
clc
pushf
aas
sub
dec
sbb
nop
xor
xlat
lahf
into
pop
cmpsl
jmp
inc
mov
inc
and
lods
shll
rcl
jo
xor
das
mov
xlat
xlat
fsubrl
test
outsb
cmp
cmp
arpl
jns
push
or
jg
int
aaa
outsl
pop
mov
add
sub
arpl
mov
dec
inc
adc
mov
dec
and
aas
mov
orl
adc
mov
xlat
mov
arpl
mov
and
xor
sub
mov
sub
jp
aam
inc
xchg
lret
lahf
cmpsl
incl
sbb
popa
sbb
pop
lods
inc
sub
das
arpl
mov
cwtl
jae
mov
sbb
or
jns
inc
enter
cltd
mov
pop
test
shl
xchg
sbb
jo
xor
xlat
push
data16
je
xor
sub
xchg
lods
cmp
add
mov
inc
sub
xor
fsubl
mov
mov
ss
imul
xor
jge
and
mov
iret
cmp
xchg
lret
loopne
cli
mov
clc
stos
cwtl
cmp
jmp
test
repz
sahf
add
mov
and
cltd
mov
std
iret
aaa
arpl
and
jmp
add
fwait
xchg
pop
mov
popf
dec
cwtl
sbb
xor
cmp
stos
inc
dec
aam
mov
pop
bound
cmpsb
pusha
test
mov
push
and
push
dec
push
and
cmpsb
pop
les
push
mov
arpl
dec
or
mov
xchg
push
push
dec
outsb
enter
adc
inc
xchg
mov
jbe
inc
movsl
inc
mov
or
int
loop
xlat
jge
and
mov
sub
leave
mov
ja
dec
jae
fistl
mov
bound
imul
leave
add
cmp
es
xchg
cltd
cltd
jae
mov
and
cwtl
mov
mov
lds
mov
cwtl
jle
cld
idivl
sahf
jnp
lcall
cmp
aaa
lret
mov
add
jns
cmpsl
or
pusha
mov
ljmp
or
push
clc
testl
jnp
jo
mov
pop
inc
test
sbb
or
fimuls
mov
mov
sahf
pushf
das
test
add
mov
mov
or
add
movsl
mov
mov
xchg
or
mov
mov
sbb
imul
scas
ds
testl
inc
cmp
xchg
scas
popf
pop
cwtl
xchg
mov
test
rcl
ja
mov
push
out
je
push
pop
mov
divl
jae
aaa
cmpsl
mov
add
daa
int
xor
iret
jne
push
movntq
out
xchg
cmpsl
test
xor
mov
movsl
mov
and
cmp
mov
mov
out
mov
mov
mov
jnp
loopne
pop
mov
andl
xchg
mov
mov
jg
arpl
mov
push
jae
fistpl
aas
cmc
adc
mov
fdivs
xchg
movsb
int3
jno
or
inc
jg
stos
mov
cmpsl
jnp
iret
lcall
test
jl
aas
mov
in
sub
bound
sbb
mov
inc
mov
add
jge
mov
pop
cld
test
xor
mov
dec
cmp
mov
jge
jo
frstor
and
xor
mov
divl
jg
mov
leave
mov
or
mov
cs
loope
loop
divl
popf
out
sbb
mov
or
mov
mov
mov
mov
iret
xchg
push
dec
pop
push
mov
mov
cmp
add
in
inc
push
mov
icebp
das
popf
jb
pop
sbb
mov
add
xor
mov
xchg
sbb
fisttpl
mov
and
xchg
mov
add
or
shlb
mov
das
lret
out
loop
pop
sub
lods
ret
shlb
outsl
fistpll
daa
mov
sti
push
dec
push
push
or
test
inc
lret
movsb
cs
xor
sbb
dec
mov
es
stos
mov
icebp
jns
xchg
jge
test
lahf
or
mov
das
sbb
popf
mull
jge
add
inc
xchg
xchg
roll
stc
arpl
jb
testl
std
mov
popa
bound
popl
lahf
jbe
cwtl
andb
mov
call
or
xlat
aaa
or
fnstsw
mov
popa
mov
cld
out
fcompl
mov
mov
shrl
add
pushf
and
pop
aas
jae
mov
lret
mov
xchg
int
xchg
mov
push
dec
mov
xchg
xchg
sbb
imul
mov
daa
popa
mov
jns
sbb
dec
testl
cwtl
xchg
and
dec
jle
or
mov
lea
ficoms
lret
xor
and
mov
lods
jns
mov
sub
mov
scas
mov
jecxz
mov
push
pusha
andl
loopne
aaa
sti
mov
icebp
test
xor
cli
xor
out
lds
pop
cmp
push
adc
sbb
jae
sub
xchg
add
mov
mov
scas
jnp
or
or
mov
imulb
shl
push
loope
mov
sahf
mov
mov
aas
in
hlt
cmpsl
rcrb
mov
cmp
pop
cmp
les
fiaddl
mov
imul
adc
mov
fcmovne
xor
aaa
sub
in
cli
push
test
mov
cmpsb
jbe
ficoms
xor
fsubl
scas
adc
adc
pop
mov
sub
add
stos
mov
pushf
stc
clc
daa
bound
icebp
mov
xor
xor
mov
sbb
sub
push
mov
std
adc
cmpsb
inc
cmpsl
add
add
add
and
jae
std
jge
pop
repnz
inc
mov
push
cmp
ljmp
scas
cmpsl
sbb
in
fwait
and
sti
xchg
jecxz
sub
enter
sbb
loopne
push
jle
mov
fdivrs
mov
pop
cwtl
jnp
out
cs
dec
push
mov
add
rorl
data16
push
push
xchg
sub
divb
inc
cmp
movsl
ret
cmpb
xor
lods
mov
mov
ja
add
or
aam
mov
push
xlat
mov
movsl
mov
mov
test
pop
cwtl
or
xchg
jno
cmpsl
in
aad
sbb
push
cmpsl
lods
fidivl
xchg
mov
jns
and
sbb
xor
mov
fwait
lret
hlt
cmpsl
xchg
add
cltd
sbb
in
xor
movsl
mov
pop
fnstcw
cltd
les
in
jo
push
mov
xchg
push
ss
mov
pop
xor
and
int3
hlt
fcomps
call
arpl
mov
xchg
mov
adc
xlat
push
clc
sub
into
jns
rorb
mov
dec
loope
sub
cli
cwtl
mov
dec
xor
add
outsl
arpl
test
mov
pushf
mov
jns
int3
fdivrp
imul
ljmp
jns
dec
test
xchg
test
ja
mov
imul
mov
adc
stos
imul
sbb
rol
adc
mov
test
jbe
addr16
je
mov
fildll
mov
xchg
lock
xor
punpckldq
add
cmp
xchg
ja
sbb
push
mov
fwait
inc
mov
pop
mov
pop
lret
imull
mov
mov
add
cmp
imul
inc
scas
and
xlat
push
xor
push
sub
inc
mov
sahf
sti
jnp
add
pop
pop
js
mov
xor
mov
out
ja
cmp
sbb
mov
bound
dec
mov
jmp
les
fwait
mov
pop
xchg
push
sarl
gs
inc
test
scas
mov
lods
ljmp
mov
imul
inc
jno
mov
ljmp
pop
mov
lret
inc
jne
push
leave
mov
jns
repz
mov
jl
jns
pop
das
fs
mov
rol
sub
push
cmpsb
sub
inc
pop
arpl
loope
mov
dec
mov
fdivl
sarl
cmp
fnsave
lods
mov
mov
and
adcb
ja
hlt
stos
jae
test
adc
ds
fldl
aas
fwait
cli
mov
mov
dec
fdivs
ret
lea
inc
push
adcb
xor
xlat
loop
mov
sub
lods
mov
cmpsl
mov
push
adc
xchg
fidivrl
and
adc
out
jbe
mov
push
xor
out
mov
rorb
xor
xlat
push
mov
test
or
cmp
cmc
xor
stc
inc
ror
cmp
xor
push
xorl
and
sbbl
mov
arpl
sahf
ss
mov
into
xor
loope
sub
mov
jne
mov
inc
jp
fs
mov
mov
sbb
fidivl
pop
shrb
or
aad
push
xchg
mov
add
mov
stos
scas
and
mov
jb
xlat
jae
cmpsl
push
dec
in
imul
dec
mov
outsb
lcall
loopne
jb
push
mov
mov
pop
adc
cmpsl
xor
mov
mov
ds
mov
stos
xor
mov
hlt
xchg
shll
push
mov
push
shlb
jge
cmpsb
mov
stos
xchg
push
mov
sahf
sbb
dec
sbb
inc
lcall
adc
bound
mov
scas
and
push
pop
pop
xor
mov
jg
cwtl
inc
mov
mov
lds
inc
xlat
mov
repnz
in
mov
mov
mov
push
mov
mov
mov
popa
cmp
cs
loopne
iret
outsl
mov
sbb
in
pop
and
jae
stos
shlb
cltd
mov
sahf
pop
test
mov
scas
mov
fidivs
mov
jae
adc
xchg
mov
ret
jnp
hlt
loop
ljmp
add
mov
jns
inc
xorl
and
mov
rolb
daa
mov
lods
xchg
xor
pop
mov
insl
mov
mov
lret
or
loopne
mov
or
das
scas
pop
cmp
inc
imul
inc
mov
or
cmp
pop
pusha
mov
xchg
push
subb
jbe
fmuls
sub
pop
and
scas
add
pusha
in
xlat
dec
mov
mov
stos
push
jns
fwait
inc
push
mov
sbb
shlb
sbb
into
cmp
mov
arpl
pop
or
push
inc
cmpl
dec
dec
pop
enter
add
lahf
or
movsl
fadds
ja
mov
repnz
adc
jns
enter
pop
nop
in
or
mov
mov
mov
xor
or
pop
push
mov
mov
and
pushf
cmp
cmpsl
test
xor
adc
push
les
icebp
fdivrs
mov
pushf
sarl
dec
test
es
or
inc
daa
mov
lock
dec
ret
repnz
cmpsl
jecxz
push
in
cmpsl
sbb
into
bound
cli
push
and
xorb
cmpsb
into
lret
movsl
cwtl
ss
repnz
scas
test
movsl
sbb
mov
cmpsb
addr16
mov
gs
lds
cmpl
jmp
lea
int3
or
pop
or
jp
aaa
fbstp
fcmovbe
jns
clc
test
outsb
xor
fwait
jns
shl
inc
mov
jnp
push
mov
cmp
rolb
mov
cltd
and
adc
rcl
into
add
mov
leave
test
mov
jns
mov
jno
repnz
mov
mov
add
lods
cmp
rorl
mov
mov
jnp
or
push
xor
cltd
in
jne
mov
push
xchg
movsb
stos
cmp
shll
jge
ret
lret
shl
aas
jne
aam
das
mov
add
xor
mov
sbb
mov
es
outsl
pop
lock
jae
and
mov
movsb
mov
ds
mov
je
sub
ljmp
notb
pop
into
mov
gs
ret
int
dec
test
mov
mov
push
mov
mov
aaa
pop
push
add
and
xchg
mov
or
rorl
out
in
mov
xor
xlat
jle
jo
jecxz
loope
mov
xor
mov
push
sub
inc
xor
stc
mov
popa
dec
jmp
ss
push
xlat
lcall
les
add
stos
rorb
imul
mov
scas
fdivs
and
cmp
push
sbb
jnp
lret
mov
mov
fiaddl
mov
jp
xchg
add
adc
xchg
jecxz
pusha
xchg
les
iret
lds
lret
mov
mov
neg
push
mov
dec
mov
mov
nop
rcl
fists
bound
xchg
scas
orl
popa
fidivrl
mov
mov
mov
mov
notl
xor
mov
addr16
cmp
mov
ret
rorl
loopne
lahf
mov
fwait
insb
bound
out
aas
and
cmpsl
leave
mov
pop
mov
negb
jbe
mov
aam
push
fwait
mov
mov
out
dec
xchg
xchg
adc
xchg
cmp
jnp
shll
mov
clc
test
jns
inc
mov
xchg
xchg
fmull
mov
nop
hlt
cmpsl
sarb
int3
mov
dec
mov
imul
leave
xor
hlt
add
cltd
mov
add
mov
mov
jne
inc
cmpsl
arpl
leave
sbb
mov
cmpsb
pop
sub
loop
xchg
xchg
mov
into
inc
pushf
push
mov
jge
je
pop
xlat
mov
or
dec
cmc
mov
cmp
mov
adc
and
lds
jmp
cwtl
jno
cmp
loop
lahf
and
mov
les
icebp
popa
mov
das
xchg
mov
xlat
imul
mov
pushf
fwait
fmuls
add
adc
jg
mov
pop
in
cmc
cli
iret
frndint
pop
pop
lcall
cmp
call
notl
imul
loop
mov
inc
jns
pop
jle
xchg
jg
xor
cltd
cmp
mov
or
lods
sbb
ja
add
sbb
pop
lods
scas
sub
xlat
sbb
imul
mov
imul
jnp
fwait
dec
mov
sbb
mov
adc
mov
mov
sub
mov
xchg
outsb
mov
mov
jns
cmp
mov
inc
xlat
aas
into
sbb
cmp
jae
gs
ljmp
mov
cmp
inc
repz
shll
test
mov
testl
and
add
mov
mov
jmp
xchg
adc
lds
dec
sbb
cmp
mov
aaa
js
jno
push
adc
xlat
dec
fidivs
pop
outsl
jb
pop
jecxz
and
xor
pop
mov
cltd
stos
mov
add
movsb
or
pop
mov
or
icebp
jge
mov
cltd
lock
ret
mov
cmc
pusha
scas
aaa
mov
test
add
jno
scas
lods
lock
arpl
jmp
jge
pop
pusha
jns
cmp
clc
aaa
ret
mov
pop
test
xor
ss
stos
dec
mov
fwait
mov
scas
mov
lods
fcom
sbbb
aaa
mov
leave
xor
mov
pop
or
mov
dec
cmp
sub
test
cmp
je
jno
jmp
jns
xchg
int3
pop
mov
mov
fisttpll
mov
and
cmpb
mov
fs
add
lods
push
dec
xchg
cmpsl
or
int
xchg
mov
aad
add
fnop
fwait
xchg
gs
mov
rorl
adc
sbb
mov
aaa
jg
scas
pushl
mov
sbb
push
popa
loopne
pop
mov
add
dec
das
mov
aad
xor
push
mov
loop
frstor
mov
test
int
repz
sub
mov
jnp
iret
call
aad
std
and
mov
test
cmpsl
int3
pusha
rcr
xlat
xor
outsl
mov
arpl
cs
or
push
cwtl
pop
arpl
stos
sub
push
xlat
jns
int3
iret
sar
xor
pop
out
mov
lahf
test
dec
mov
mov
stc
fistps
inc
scas
es
popa
mov
dec
mov
cmp
push
xor
inc
jo
push
shlb
out
imul
xchg
stos
inc
aam
cmpl
aaa
lret
or
cmp
insb
sbb
jecxz
mov
fsubrl
mov
cmpb
mov
and
mov
inc
in
mov
sbb
push
shll
pop
fsubs
jno
int3
adc
jns
pop
mov
fsubrl
shrl
fstps
mov
mov
pop
in
rcrb
shrb
mov
pop
dec
aaa
xchg
out
outsl
pop
lahf
sub
or
icebp
mov
cmp
les
hlt
mov
adc
out
mov
fmull
mov
sarb
stos
push
mov
jecxz
movsb
and
xor
pop
mov
mov
sbb
ja
mov
je
pop
fmuls
mov
cmpsl
mov
jecxz
adc
subl
xor
sbb
cwtl
mov
mov
mov
in
in
iret
push
mov
lea
xchg
mov
lcall
lods
sbbl
jp
stos
lret
or
jl
sbb
cmc
jne
lret
sub
cmp
lea
mov
lods
mov
xor
xchg
or
add
cltd
popa
das
ret
mov
repz
loopne
inc
fs
mov
aad
sbb
mov
push
test
and
dec
add
mov
cmp
cltd
jmp
dec
adc
jbe
xor
fneni(8087
mov
js
xchg
xor
adc
cmp
jge
mov
mov
cmp
mov
andl
test
mov
into
lods
pop
lcall
sub
mov
and
les
icebp
nop
push
pop
cld
mov
mov
cwtl
xor
fndisi(8087
push
pop
scas
arpl
sub
xor
push
mov
pop
popa
jge
dec
adc
cmp
xchg
push
sbbl
in
ret
add
das
jmp
dec
xchg
outsl
sub
fidivl
in
xor
mov
mov
outsl
bound
mov
mov
gs
pusha
mov
bound
add
insl
add
mov
inc
mov
xorl
sbb
jl
repnz
push
mov
mov
stc
pop
push
xor
cltd
arpl
sbb
inc
add
mov
clc
adc
filds
mov
sbb
call
pop
add
ja
xor
cltd
sbb
dec
scas
adc
into
or
cltd
adc
lds
and
pop
lahf
mov
dec
xchg
stc
aaa
loopne
push
sub
ret
inc
adcl
arpl
xor
in
mov
xlat
and
aaa
inc
mov
ja
js
jne
loopne
iret
sub
mov
dec
mov
mov
push
es
int3
mov
mov
fwait
push
movsb
mov
or
sbb
pop
push
jge
mov
xor
popa
aam
ret
mov
mov
cltd
add
mov
inc
fmuls
subb
or
mov
repz
and
mov
pop
xchg
dec
sbb
popa
ja
cmp
push
test
movsl
mov
xchg
mov
pop
add
jno
push
push
sub
in
cmp
or
xchg
mov
and
push
mov
xchg
xor
mov
dec
popa
pop
lret
adc
push
imul
aad
cmp
jge
mov
mov
xlat
jmp
mov
fwait
xchg
loopne
cmpsl
and
add
lahf
sbb
loop
mov
lret
jne
xchg
out
xchg
cmpsl
mov
sti
adc
jle
andb
imul
aas
inc
ficoms
or
mov
daa
test
push
xchg
cmpsl
adc
jnp
and
add
jae
scas
test
jge
adc
cmp
aam
sub
add
mov
lret
pushf
xlat
test
cmp
pop
mov
pop
mov
sbb
sbbl
jnp
inc
call
fs
mov
pushf
arpl
pusha
cmc
inc
add
aad
pop
mov
sti
std
pushf
pop
jmp
and
sub
mov
and
xchg
insl
dec
sbb
cmp
cwtl
test
dec
ss
mov
mov
lods
das
push
pop
inc
movsl
mov
and
mov
cltd
ja
subb
jp,pn
mov
hlt
out
pop
adc
mov
push
xchg
popa
int
mov
inc
mov
ret
inc
cmpsb
arpl
aas
cmpsb
aad
clc
ret
mov
loope
mov
and
or
xor
sbb
mov
inc
mov
fsubl
add
cbtw
ja
xchg
shl
mov
cmp
jge
mov
adc
mov
ror
loope
jnp
mov
cmpsb
cmp
mov
push
xor
lods
loopne
sti
cwtl
xchg
lcall
push
subb
movsl
cltd
popa
and
scas
mov
stc
stos
push
aaa
xchg
xlat
hlt
cmp
repnz
mov
or
fs
in
xlat
lods
sub
mov
cmc
loopne
sbb
aad
add
mov
fisubrl
lea
pop
shll
int
xor
cmp
or
imul
sbb
jnp
mov
mov
idivb
mov
jl
out
ds
xlat
sbb
dec
lock
fdivs
xor
lods
shll
push
sub
subl
and
sbb
mov
mov
fwait
addb
xchg
mov
shr
addl
push
sti
adc
or
pop
xlat
insl
xchg
lahf
rcl
push
in
test
arpl
jp
mov
mov
fdivl
pop
mov
adc
sub
rolb
shll
testl
movsb
jnp
gs
cmovo
mov
cmp
and
jp
sbb
inc
movsb
jno
push
mov
daa
cmp
pop
cwtl
and
int
pop
inc
jns
mov
and
push
jbe
jnp
pop
js
jl,pt
out
and
enter
clc
sbbl
and
addr16
arpl
pop
mov
int
pop
fdivrs
xchg
pop
inc
push
mov
roll
dec
mov
test
cmp
adc
and
movsb
loop
aad
cltd
bound
and
jecxz
aaa
outsl
scas
mov
cld
call
nop
test
xlat
addr16
pop
push
inc
mov
mov
xchg
daa
ljmp
inc
stos
mov
or
imul
mov
es
mov
cmpl
in
xchg
nop
pop
inc
mov
xchg
sub
mov
cltd
sbb
mov
notl
pop
xchg
mov
push
mov
imul
lds
mov
pop
jae
xchg
push
xchg
dec
cmp
pop
popa
es
loope
xchg
lret
cmpsl
cwtl
fwait
jo
sbbl
xchg
rcrl
stos
mov
sbb
fwait
or
aaa
inc
mov
test
mov
mov
mov
or
idivb
xchg
mov
pop
sub
mov
cld
cmp
jae
pop
and
out
ds
jl
inc
jbe
jbe
gs
test
jmp
fcomps
mov
test
xlat
cmpsl
arpl
jg
xchg
mov
cwtl
hlt
cmc
dec
mov
and
test
push
cmp
je
mov
sahf
incb
imul
mull
sbb
out
mov
inc
or
mov
and
ret
outsl
mov
sub
and
test
jno
xchg
int3
test
ja
mov
push
cmc
xor
stc
jnp
jae
mov
mov
xchg
mov
dec
fcmovne
pushf
xchg
jne
sbb
arpl
cmpsl
jl
lods
mov
cltd
movsb
xorl
gs
adc
bound
sub
inc
scas
sub
inc
mov
xlat
jae
xchg
rcrb
ret
sbb
leave
mov
jp
adc
inc
or
mov
arpl
pop
mov
mov
dec
lahf
aas
pop
mov
test
lcall
sbb
aas
xchg
mov
mov
lea
mov
shrb
and
or
lahf
mov
jp
lcall
test
mov
pop
jg
fwait
and
mov
cwtl
repz
out
mov
fstpl
add
and
push
jae
sub
mov
cmp
mul
sub
ds
adc
mov
ljmp
lcall
jecxz
loope
fwait
jp
or
cmp
push
pop
xor
scas
fs
pop
data16
jp
mov
jle
addb
push
jnp
jp
stos
pushf
mov
mov
aaa
hlt
jg
stc
cmp
mov
orb
arpl
adc
and
stos
or
inc
jp
mov
dec
xchg
lahf
dec
add
mov
pop
ss
push
cmp
xor
ret
xlat
mov
cmc
iret
mov
mov
mov
sbb
out
lcall
iret
push
fwait
mov
xchg
adc
lods
lcall
movsb
inc
je
in
in
sbb
ret
pushl
mov
xlat
shl
sbb
mov
inc
cwtl
inc
xchg
mov
jbe
sbb
mov
adc
sbb
cli
or
mov
cs
insl
outsl
pop
sub
xor
in
adc
mov
lret
mov
std
mov
movsl
cwtl
xor
imul
lcall
lret
mov
insb
in
jae
adc
cwtl
push
dec
pop
fstl
inc
sti
movsl
cmpsl
cli
cmp
ret
insb
mov
xchg
mov
xchg
test
inc
mov
scas
adc
xchg
sub
jmp
mov
loop
mov
jmp
sbb
sub
mov
inc
jo
and
sub
rcr
mov
jle
mov
pushf
bound
and
int
xchg
mov
movsl
lcall
and
fistpll
ficomps
mov
jnp
xor
mov
movsb
subl
dec
or
lods
scas
pop
mov
cwtl
mov
jno
std
mov
sbb
add
rcrb
sbb
sbb
arpl
cwtl
aam
mov
cmp
mov
bound
subb
stc
push
xchg
mov
es
mov
les
xchg
sbb
fwait
dec
mov
fcmovnu
push
and
mov
sbb
sarl
xchg
push
cmp
aaa
pop
mov
mov
mov
sbb
mov
gs
movsl
mov
test
mov
cs
out
pusha
dec
stos
add
lds
cmp
das
icebp
fsubs
mov
xchg
lods
sub
jl
add
xchg
pop
loope
divl
imul
iret
push
inc
push
jg
outsl
ss
lds
push
cwtl
and
ja
dec
xchg
mov
loop
andl
inc
mull
sbb
sarl
add
add
cmpsl
arpl
mov
pop
fs
mov
scas
and
xchg
aaa
mov
mov
insb
scas
adc
fimuls
sub
mov
mov
mov
add
sbb
or
out
sbbb
pop
jno
test
add
mov
push
mov
test
decl
cmp
not
mov
jmp
mov
xor
clc
inc
stos
aas
push
mov
outsl
add
addr16
xorb
push
inc
push
aaa
sbb
or
push
cmpsl
dec
popf
jae
sbb
adcb
stc
mov
xchg
cltd
mov
xlat
fcoml
adc
adc
stos
pop
sbb
jnp
and
jecxz
fcomps
aam
mov
sub
popf
cmp
out
xchg
xor
mov
mov
in
iret
pop
stos
test
mov
cmp
inc
or
mov
lahf
out
xchg
cmpsl
ja
cwtl
idivb
mov
push
dec
mov
jl
call
decl
out
mov
xor
and
sub
iret
add
mov
outsb
sbb
rcll
std
dec
cmpsl
lock
ja
jecxz
stos
inc
sbb
pop
pop
xlat
jge
pop
cmc
fwait
clc
xor
adc
outsl
xor
pop
xlat
xchg
aad
sub
adc
sbb
jl
dec
push
scas
jb
pushf
mov
sub
and
jnp
jae
stos
aas
imul
xchg
xor
pop
mov
movsb
sub
pop
adcl
mov
lcall
mov
and
xor
pop
mov
inc
cltd
sub
adc
cli
lods
stos
mov
loop
addb
pop
bound
sub
ja
inc
mov
pop
xchg
lahf
mulb
and
dec
fwait
push
xor
inc
out
iret
adc
pop
jp
push
mov
outsl
cmp
pop
imul
ss
stos
mov
mov
cmpsl
mov
sti
mov
pop
jb
jae
sbbb
cli
cmp
lods
mov
int
pop
out
cld
mov
insb
fisttpl
jl
fwait
arpl
inc
cmpsl
lods
and
lahf
inc
fwait
xor
pusha
add
mov
bound
mov
fnstsw
mov
lret
pop
adc
fcomps
in
adc
shrb
lock
arpl
jae
pop
imul
sbb
sub
rep
lods
mov
lock
int3
sbb
pop
mov
pop
test
lea
lods
xchg
mov
fiadds
push
gs
cmpsl
push
bound
adc
lcall
stos
lahf
loop
mov
cli
pushf
pop
das
mov
lea
jl
dec
pop
sbb
sub
aas
mov
mov
jmp
int3
mov
mov
nop
test
bound
aam
sti
js
xor
aas
test
sub
mov
lcall
dec
sbb
leave
push
in
scas
arpl
insb
pop
mov
xchg
mov
and
sbb
or
subl
jecxz
mov
xlat
ficoms
jbe
adc
push
adcb
adc
xor
push
xchg
mov
xor
fstpt
pop
cwtl
aam
and
pop
push
fwait
je
cwtl
stos
mov
add
jmp
pop
add
cmpsb
cltd
fwait
or
cmpsl
ss
cltd
jle
outsb
gs
adc
inc
sbb
sbb
or
mov
xorb
jbe
pop
push
mov
insl
jae
xorb
push
mov
icebp
push
sub
ret
mov
jb
or
insl
mov
fwait
outsb
lret
add
xor
and
aas
cmp
lods
sub
xor
movsl
aad
mov
mov
mov
testl
push
ret
cmp
xor
and
cmp
xlat
sbb
sub
ret
sbb
shll
cmp
xchg
mov
jo
loope
into
mov
enter
test
inc
fwait
dec
add
cmp
pop
leave
nop
push
repz
mov
mov
and
inc
divl
repz
xor
mov
add
lods
imul
fdiv
mov
cltd
add
movsl
cmp
xchg
xlat
add
imul
int
fidivs
bound
arpl
fwait
movsb
cmc
out
mov
adc
xchg
call
push
sub
mov
cltd
mov
not
aaa
popa
sub
mov
mov
mov
inc
mov
cmpsb
pop
call
ljmp
jmp
mov
cs
sub
and
insl
rdmsr
mov
daa
jno
add
mov
dec
mov
mov
cmc
xor
mov
and
mov
mov
shll
xchg
pop
mov
xchg
cmp
lods
lcall
dec
mov
jnp
xchg
fsubrl
xlat
mov
shl
pushf
les
cs
mov
aaa
mov
mov
int
xor
and
in
inc
push
pop
shrl
mov
or
mov
mov
data16
pop
mov
mov
cs
es
stos
and
sbb
lock
repz
addr16
jmp
inc
lahf
fsubl
mov
insb
dec
data16
mov
mov
jmp
jno
sahf
mov
aas
xor
xor
mov
cmp
add
mov
or
je
lods
mov
out
repz
mov
int3
fwait
inc
jge
mov
out
iret
inc
xchg
sub
out
cltd
fldenv
ja
cmpb
iret
test
imul
mov
andb
in
push
shll
fmuls
inc
scas
inc
insb
jnp
pop
imul
mov
fmuls
jno
fdivrl
dec
or
lcall
ret
and
pop
les
test
mov
shll
ds
aaa
jge
lods
stos
insb
add
in
dec
sbbl
stos
cmpsl
mov
cld
jnp
rorb
cwtl
cmc
inc
jge
arpl
scas
cld
mov
mov
mov
imul
sbb
sbb
pop
push
addr16
lods
xor
add
movsl
or
shll
insl
xchg
mov
cmpsl
ss
sub
dec
xlat
repnz
add
shrb
fdivr
mov
pop
jns
mov
aam
xchg
lret
scas
xlat
and
lods
jp
mov
jns
sub
mov
stos
mov
mov
mov
push
xor
pop
adc
push
test
adc
daa
lcall
inc
sbb
hlt
loop
mov
popa
icebp
imul
mov
sbb
mov
cmp
arpl
sub
adc
jbe
inc
mov
mov
fsubrs
pop
cmpsl
sub
test
mov
scas
std
push
addr16
or
xor
lods
nop
ljmp
cli
lods
loopne
or
lods
mov
lret
add
mov
shlb
sarb
lret
cmp
es
test
cmpsl
in
jmp
mov
loop
mov
mov
pop
movsl
sbb
ficomps
adc
inc
cwtl
inc
xchg
popa
mov
and
sbb
mov
sbb
adc
cli
and
mov
stos
jnp
xor
add
dec
cmp
daa
pop
aam
and
faddl
rclb
popa
or
xor
insl
xor
sbb
inc
mov
test
shlb
xchg
xlat
mov
movsl
int3
sbb
fwait
mov
mov
daa
icebp
mov
cltd
xchg
mov
mov
pop
loop
add
inc
jns
es
cmpsl
jmp
mov
shlb
cld
mov
push
inc
mov
mov
adc
sbb
pushf
and
push
mov
mov
test
mov
fidivl
shlb
push
xor
dec
stos
cmpsl
xchg
jp
outsb
cmp
cwtl
mov
rorb
push
inc
cltd
test
push
pushf
or
xchg
scas
fdiv
xchg
movsl
dec
mov
movb
negl
cwtl
movsl
and
inc
or
shll
mov
out
addr16
dec
aas
fidivl
mov
fcmovnb
mov
addr16
fdivl
icebp
sbb
adc
inc
cmpsl
pop
pop
lock
lahf
lods
scas
pop
sbb
inc
jne
idivb
int3
or
lods
mov
insb
xlat
into
jge
lret
ret
mov
stc
inc
ljmp
adc
dec
mov
pop
ljmp
jp
fcmovne
les
lds
xchg
cmp
add
stos
test
fwait
push
lahf
fisttps
icebp
sbb
mov
sub
lods
lea
insl
addl
sub
mov
scas
xchg
pop
xlat
hlt
sbb
shlb
out
pop
mov
ss
add
je
data16
pop
xorl
fimull
or
mov
pop
movsl
movsl
xlat
fwait
lret
pop
nop
dec
mov
sti
sbb
dec
stc
cli
cmpsl
sub
imull
inc
aas
das
cmp
repnz
popa
aaa
mov
lods
aaa
ret
push
adc
icebp
rcrl
cmp
pusha
call
jl
inc
insb
mov
int3
or
cmp
cwtl
testl
mov
xor
jp
shll
sub
cmp
in
mov
xorb
push
movsl
jle
jg
mov
sbb
cmp
mov
mov
mov
and
pusha
mov
gs
cmpsl
add
mov
xor
insl
fwait
sub
mov
imul
cmp
dec
shl
xor
stos
hlt
inc
arpl
insl
fcomps
outsb
xlat
mov
into
inc
mov
add
jmp
orb
sub
or
mov
popa
xchg
push
gs
xorb
test
lods
cltd
pusha
xor
cmc
scas
outsb
cwtl
pop
jl
scas
loop
dec
fisubs
fwait
inc
pop
lds
cmp
movsb
ret
jecxz
dec
cmc
ja
cli
icebp
mov
pop
imul
mov
in
fwait
mov
sub
mov
loopne
add
repz
enter
mov
test
add
push
bnd
outsb
inc
pop
cmp
or
mov
xlat
icebp
in
movsl
jbe
cltd
mov
fcmovnbe
mov
out
fdivl
es
xor
fnstsw
jno
mov
cwtl
scas
add
mov
mulb
shll
decb
ret
fwait
xor
xor
pop
addr16
insb
xchg
mov
adc
mov
pop
mov
jns
mov
in
movsb
adc
or
and
stc
test
int3
xchg
fadds
out
hlt
cwtl
push
fidivl
scas
mov
gs
fistps
jge
movsb
lahf
loop
mov
outsl
mov
xor
fimull
inc
mov
add
or
mov
xlat
lea
out
rcll
int3
stos
lcall
xchg
movsl
out
mov
xchg
pop
jl
cmpsl
lcall
fiadds
sub
fisubs
xchg
fiaddl
add
pop
mov
iret
test
in
mov
test
fstpl
cmpsl
mov
adc
jmp
cmpsl
dec
ja
xlat
sbb
mov
xor
adc
arpl
sbbl
add
and
sub
push
mov
cmp
repnz
loop
leave
add
or
add
cli
lahf
dec
pop
cmpsl
imul
test
movsl
js
or
sub
mov
inc
cmp
cld
pop
inc
xor
lret
mov
sbb
rcll
jnp
ljmp
cwtl
sbb
sbb
test
cmpsl
bnd
out
lock
loope
pop
clc
adc
cmp
out
mov
add
xlat
pop
push
and
cmpsl
jge
jb
mov
or
scas
mov
mov
adc
push
and
push
stos
addr16
sub
clc
pop
push
mov
es
aad
ret
fcompl
pop
icebp
xchg
xor
mov
mov
adc
cmp
cmp
mov
inc
xchg
ss
loopne
mov
inc
mov
mov
sbb
fisubrs
mov
mov
xchg
mov
ret
insb
scas
mov
aas
adc
in
jl
pusha
xor
fnstsw
mov
add
jns
xor
mov
subl
into
movsl
pop
mov
scas
aaa
mov
stos
adc
insl
stos
sarb
aaa
cs
in
add
scas
bound
adcl
mov
pop
add
loope
xchg
test
xor
icebp
int3
xlat
mov
cwtl
xchg
test
add
sbb
fcomps
cmpsl
stc
jne
jnp
cli
das
movsl
mov
xchg
leave
loopne
mov
mov
push
jmp
and
mov
movsl
int
mov
sbb
ss
loopne
mov
and
sbb
cmpsl
cld
cmp
mov
mov
dec
sub
jns
sahf
sbb
out
stos
cwtl
xor
mov
mov
pop
shlb
mov
jae
sbb
mov
test
repz
add
out
push
adc
pop
inc
lds
fadd
add
mov
jbe
pop
or
mov
sarb
cmpsb
in
push
xorl
fwait
pop
dec
lcall
mov
imul
sbb
imul
mov
out
mov
dec
subb
aam
test
xchg
jns
xchg
push
cli
pop
cmp
and
dec
jbe
jnp
bound
sbb
mov
movsl
cld
shrl
xlat
shl
iret
out
push
mov
cmpsl
imul
daa
sbb
pop
push
insl
stc
and
mov
jae
mov
mov
icebp
inc
sub
les
pop
rorb
cltd
mov
or
pop
and
mov
jb
mov
inc
xor
loop
inc
cmp
iret
jnp
fwait
cltd
mov
scas
daa
push
push
idivb
js
sub
sbb
jb
in
xchg
mov
mov
insl
mov
ret
sarb
xchg
inc
out
sbb
movsl
fdivl
insl
addr16
pop
inc
int3
mov
cwtl
sbb
inc
push
jne
cwtl
dec
loope
and
test
mov
cmp
divl
add
leave
cltd
mov
xchg
xchg
aad
add
add
mov
push
sbb
cmpsl
mov
pop
xchg
mov
pop
mov
and
icebp
addr16
pop
sahf
cmpl
shlb
mull
sbb
xchg
xlat
mov
pop
and
sarl
sbb
add
jnp
jb
aad
lret
fdivl
lea
sar
fwait
in
test
pop
test
mov
cmpsl
es
data16
loop
xlat
mov
jge
xor
shrl
stc
aas
fwait
mov
loope
dec
mov
add
test
cwtl
sub
stos
push
imul
repnz
jns
fwait
sub
std
dec
mov
outsl
push
mov
movsl
fimuls
out
cmp
cs
add
add
addr16
mov
mov
jnp
lock
mov
cmp
pop
stos
mov
scas
fwait
daa
mov
mov
mov
mov
jg
stc
aad
mov
stos
xchg
sbb
ja
stos
pop
jnp
mov
or
xor
xor
gs
dec
cld
mov
adc
and
test
cltd
test
xchg
jnp
mov
jns
add
or
push
aas
in
xchg
xlat
insl
push
and
lea
add
dec
icebp
das
neg
push
cltd
aad
je
mov
cmp
adc
test
jg
push
les
sbb
inc
outsb
loope
sub
insb
add
add
hlt
popf
bound
mov
mov
repnz
mov
icebp
mov
lods
adc
xor
xor
jg
test
js
popa
sbb
cmp
aas
cmc
jle
jno
iret
addr16
out
mov
dec
jge
lea
cld
cmovge
ss
pop
popa
aam
sahf
sbb
mov
test
mov
das
jmp
cld
mov
cltd
cmp
mov
jb
sbb
lret
push
mov
ja
xchg
bound
imul
jno
inc
mov
and
rolb
xor
and
xlat
jge
pushf
loopne
cld
scas
mov
cmp
mov
test
mov
jecxz
push
add
inc
cmpsl
xlat
sbb
movsl
movsl
aas
sarb
cli
cmpsl
pushf
sbb
sub
into
xlat
rolb
test
mov
scas
stc
mov
fdivrs
outsl
lds
push
mov
test
stos
mov
mov
clc
inc
es
lock
loopne
jle
cli
lea
mov
and
ret
lret
cmp
out
popf
add
mov
loope
and
sub
cmpsl
push
sahf
sbb
mov
mov
push
dec
mov
push
ja
mov
es
or
leave
jp
pop
add
scas
and
icebp
fwait
jno
sbb
cmpsl
xlat
xor
mov
loopne
xchg
movsb
lods
cmpsb
inc
mov
mov
jbe
je
rorb
xlat
and
and
lods
cmp
dec
jae
xor
pop
pop
bsf
in
mov
pop
cmp
mov
mov
mov
cmpsb
shlb
jns
fidivl
mov
dec
cmp
add
mov
xchg
xor
mov
mov
mov
gs
daa
mov
mov
lods
es
sbb
and
adc
out
sbb
lahf
lret
outsb
ss
sub
mov
and
pop
add
mov
insl
fidivl
pop
mov
pushf
mov
pop
ljmp
loop
mov
jp
test
sub
mov
xorb
js
ss
xchg
inc
fwait
mov
cli
xor
xor
jp
popf
dec
mov
out
push
mov
mov
shll
repz
sbb
popa
and
dec
fdiv
push
into
mov
arpl
jae
push
mov
leave
cmpsl
xchg
sub
pop
fimull
daa
mov
es
rcl
adc
loop
mov
xchg
mov
fwait
or
or
sbb
leave
fldcw
sbb
out
arpl
js
mov
out
cmp
pop
add
mov
inc
mov
std
mov
push
mov
cmp
dec
loop
cwtl
mov
pushf
and
xor
fbstp
push
jae
andl
mov
stos
shlb
adc
jno
hlt
xchg
sub
loope
and
xor
stc
sarl
xchg
imul
mov
fcmovb
lds
jl
xor
mov
lret
insl
and
jae
scas
sub
cmp
int
pop
jb
pop
stos
sub
test
scas
mov
icebp
lahf
mov
movsl
cmp
cmp
hlt
xchg
xor
cwtl
mov
inc
xchg
pop
sbb
mov
movsl
insl
jmp
mov
add
and
inc
hlt
mov
iret
pushl
pop
fcompl
add
pop
xchg
ret
inc
jns
xlat
ja
mov
icebp
je
mov
or
jle
fcmovbe
mov
mov
add
add
into
adc
icebp
ret
daa
add
mov
aad
mov
cwtl
pop
jns
xlat
negl
fdivrl
shr
or
dec
sbb
iret
out
cmpsl
xlat
inc
addr16
adc
out
pop
jge
into
xlat
cld
mov
stos
mov
cmp
mov
fistpl
mov
or
jns
mov
mov
test
mov
pop
xchg
cmp
jle
push
sbb
pop
push
adc
mov
pop
jns
lods
xor
movsb
mov
pop
lea
mov
prefetcht1
xchg
jae
loop
and
mov
cmpsb
test
mov
cli
stos
pop
mov
mov
fmul
inc
mov
pusha
sahf
mov
mov
cmp
testl
fidivl
cld
fwait
mov
adc
sbb
cwtl
sarb
mov
cld
rol
mov
into
push
fisttpl
cmp
mov
int
mov
inc
sub
mov
mov
jecxz
mov
test
xorl
xchg
jns
mov
loopne
out
movsb
adc
push
mov
cmpsb
lods
stos
test
pop
and
jne
iret
xchg
mov
int
ret
mov
sub
stos
cmpsl
mov
mov
xchg
sarb
outsl
fwait
and
and
mov
mov
lar
cmp
mov
lods
rcll
int3
cmpsl
mov
loope
ja
fwait
or
and
xchg
adc
and
xor
mov
xor
lea
mov
adc
dec
bound
xlat
decl
xchg
ss
pop
mov
xchg
mov
mov
stos
mov
aas
mov
adc
and
dec
fistl
and
mov
nop
icebp
adc
push
imul
in
cmp
xor
icebp
repnz
jae
daa
movsl
aas
iret
mulb
inc
xchg
xchg
cwtl
mov
cmp
int
add
mov
jge
loope
dec
jg
mov
fistl
and
pop
psubq
fsubs
mov
mov
aas
inc
sub
gs
dec
cmp
mov
insl
filds
cwtl
fistl
sbb
pop
mov
movsl
mov
stos
iret
fnstenv
testb
cmpsb
cmp
movsb
and
cwtl
adc
faddl
push
mov
rcrl
ficompl
int
jo
inc
mov
xchg
lea
mov
jb
push
jp
leave
mov
call
inc
lea
cmp
sahf
mov
sbb
movsl
das
aas
and
add
push
mov
pop
mov
into
outsl
xchg
fdivrs
es
imul
movsl
fdivl
movsl
mov
addr16
cmpsb
add
mov
adc
fwait
rorl
sub
arpl
adc
cmp
jnp
and
jae
ret
and
mov
repnz
or
xchg
xchg
imul
fnsave
ss
cmpsl
popa
pop
cmp
sub
enter
inc
daa
cli
and
adc
xlat
push
repz
sbb
mov
adc
lods
scas
es
outsb
push
cmp
jbe
inc
jne
popa
bound
int3
inc
or
and
add
shrb
jnp
mov
cmpsl
shll
movsb
mov
jmp
sub
xor
scas
xchg
mov
cwtl
xor
loope
mov
sub
jb
lods
xchg
pop
sbb
stc
mov
add
rcrl
mov
sbb
cwtl
xor
push
aas
xchg
lods
cmp
inc
mov
ja
dec
mov
hlt
cmp
imul
mov
in
push
orb
mov
or
sbb
sbb
leave
dec
pop
mov
adcb
clc
adc
int3
pop
pop
add
xchg
jnp
stos
inc
mov
and
ljmp
outsb
xor
cwtl
adc
insb
lods
xchg
inc
mov
xchg
lcall
rolb
mov
xchg
or
cmp
addr16
sub
lods
pop
adc
mov
mov
lret
inc
fmull
mov
xorl
shll
lsl
lods
sbb
sub
mov
jge
mov
mov
pop
xchg
xchg
rcrb
sbb
add
add
add
js
movsl
fcmove
mov
icebp
call
test
push
stos
cmc
jne
mov
add
push
jecxz
jg
scas
cmpsl
jge
mov
dec
cli
cltd
push
dec
cmpl
sbb
jb
in
imulb
mov
setns
jo
out
mov
xchg
stos
stos
stos
fwait
cmp
shll
aas
mov
loopne
call
mull
mov
jmp
in
mov
jg
int3
mov
bound
jl
jae
mov
jnp
xchg
inc
lahf
jp
sub
xchg
bound
call
stos
stc
stos
popa
mulb
inc
jnp
mov
xlat
xchg
mov
mov
fwait
stos
test
mov
mov
movsl
popa
sbb
cmpsl
mov
mov
sub
imul
sbb
mov
inc
sbb
push
mov
mov
nop
xchg
call
sbbl
out
lods
imulb
lcall
mov
or
mov
lahf
fwait
andl
xchg
or
out
stc
xor
adc
fwait
mov
mov
pop
data16
in
pop
and
shl
mov
call
out
pop
jne
arpl
add
pushf
xlat
mov
mov
lds
mov
add
jae
into
pop
mov
cmp
icebp
repz
movsl
lods
mov
inc
out
pushf
sub
mov
dec
inc
pop
aam
and
dec
cmp
cmp
out
fiaddl
xchg
insb
and
pusha
sbb
jns
mov
fwait
movsl
fcom
mov
fcmovu
adc
cmp
jno
dec
mov
jns
sub
or
outsb
test
daa
stos
pop
gs
cli
xchg
mov
add
dec
and
das
rcl
adc
xor
add
cli
stos
stos
inc
adcb
mov
imul
push
scas
lds
cmpsl
mov
mov
iret
add
popf
xlat
mov
inc
and
mov
lock
mov
into
cmp
fmuls
mov
test
and
mov
jl
aas
xchg
adc
daa
and
mov
jbe
dec
mulb
int
pop
scas
or
sbbl
test
dec
jbe
xchg
lods
arpl
mov
popf
sbb
test
sbb
fdivs
sub
sub
icebp
scas
mov
sub
sbb
cltd
mov
in
cli
jbe
mov
shll
hlt
fsubr
jae
fmuls
push
ficompl
sbb
mov
les
mov
or
sbb
mov
sbb
add
jmp
clc
fwait
mov
cmpsl
mov
cmovae
subl
adc
pushf
ret
jae
repnz
insb
xlat
je
cmpl
test
add
movsb
shll
mov
mov
pushf
aaa
mov
adc
xchg
cmpsl
push
xor
inc
inc
mov
pusha
mov
and
xor
dec
loop
jmp
ja
inc
and
mov
fwait
adc
xchg
mov
xchg
icebp
imull
inc
sbb
jb,pn
int
aam
mov
mov
stos
icebp
mov
testl
int
pop
mov
cmp
fstpl
movsl
lods
pop
repnz
int
cmpsb
mov
loopne
sti
adc
mov
cmpsl
cmp
xor
add
cmpsl
mov
ss
inc
pop
sbb
test
xchg
jae
mov
jns
movsl
cmpsb
or
out
sarl
ret
arpl
fstps
mov
cltd
ss
pop
mov
mov
lds
jnp
inc
mov
jbe
aas
xchg
les
pop
pop
mov
xchg
pop
pop
pop
mov
jae
cmpsl
lret
sub
imul
push
sahf
in
mov
inc
mov
dec
scas
jno
mov
and
jae
add
mov
jl
lock
jge
mov
fstpt
int3
mov
inc
shrb
popa
icebp
das
mov
stc
leave
mov
push
jae
mov
mov
and
inc
sbb
xchg
push
pop
cmp
mov
in
fistpll
push
js
mov
fdivl
fidivrs
mov
addr16
orl
movsb
testb
je
push
and
mov
sub
insb
mov
adc
sub
sbb
mov
nop
pop
rcrl
mov
add
lods
push
bound
mov
mov
sbb
sahf
sar
and
xor
addr16
mov
aas
sub
scas
sub
xchg
mov
sbb
and
and
into
insl
sahf
ljmp
arpl
mov
mov
cli
and
lods
into
arpl
cmc
jmp
xor
icebp
sub
jne
jbe
jno
push
mov
jp
sbb
jg
testb
iret
pop
rcrb
mov
mov
xchg
int3
mov
dec
repnz
xlat
mov
push
adc
mov
out
and
cmp
sub
jne
jp
xchg
scas
popf
lahf
sbb
dec
test
xchg
push
imul
lds
and
pop
xchg
daa
stc
aad
pushf
mov
dec
ret
enter
sub
rcl
jle
inc
sbb
jnp
jg
mov
stc
es
lret
push
or
mov
lods
andb
jae
mov
addw
mov
iret
jnp
mov
jae
enter
in
ja
adc
xor
xchg
sbb
jne
pop
xchg
inc
aad
aaa
imul
pop
fwait
cwtl
xchg
les
fsts
mov
js
fwait
je
sarb
sub
xchg
inc
mov
cwtl
inc
cmp
xchg
cmp
xor
lcall
mov
mov
gs
shll
stos
pop
fs
xor
xorl
sub
xchg
pop
enter
xor
xchg
dec
mov
mov
fldcw
mov
test
mov
add
arpl
xlat
mov
lock
pop
inc
xor
mov
fcomps
mov
and
sbb
enter
cmp
adc
jp
inc
mov
dec
xchg
mov
xchg
xchg
mov
jle
pop
adcb
cmpsl
mov
in
mov
lcall
mov
fimuls
ds
mov
mov
stc
sub
mov
cltd
popa
sbb
inc
mov
scas
lea
leave
mov
stos
dec
cltd
mov
mov
fnsave
inc
mov
setns
xchg
lret
cmpsl
or
mov
pop
sbb
lahf
icebp
mov
pop
imul
cwtl
loope
xor
andl
jb
push
inc
addr16
add
sbb
repz
pop
mov
cmpsl
jbe
loop
repnz
ret
jecxz
sub
sahf
jns
add
fs
mov
inc
push
jo
dec
inc
cltd
in
imul
and
popf
mov
das
stos
xchg
repnz
stos
test
add
mov
xorb
cmp
sbb
in
dec
and
mov
push
mov
mov
mov
push
add
mov
xchg
test
and
xor
mov
gs
adc
lahf
cmc
cmp
sbb
cmpsl
or
jne
adc
mov
lcall
testl
adc
stos
mov
test
ja
ss
arpl
es
sbb
pop
popa
add
outsl
push
cmp
mov
dec
mulb
or
test
lahf
xchg
push
push
xlat
int3
push
add
cmp
mov
xchg
test
lods
mov
mov
mov
ror
jmp
cmpsb
mov
movsl
notb
ds
push
mov
loop
clc
push
imul
leave
cmpsl
icebp
sbb
int3
or
dec
mov
bound
lret
mov
ja
pop
jo
cmpsl
scas
out
mov
mov
ror
test
sub
popf
popl
mov
ljmp
xor
jg
add
pop
outsl
cmc
mov
ljmp
rclb
pop
rcl
fisubl
stos
imul
cmp
xor
xor
mov
dec
cmpl
test
mov
xchg
adcl
cmpsl
stos
int3
rcrl
mov
mov
inc
mov
mov
add
push
jns
lahf
mov
js
pusha
mov
fsubrs
xor
add
add
xor
loop
push
popf
add
ret
xorl
push
jge
mov
cmpsb
mov
test
pop
ljmp
lods
jmp
cwtl
scas
leave
rcrb
lods
fwait
mov
mov
and
sbb
cwtl
aas
sbb
es
lods
mov
lods
jbe
xlat
pop
push
clc
xor
jns
les
stos
mov
lahf
data16
cltd
sbb
xchg
fwait
mov
mov
mov
push
dec
xor
lahf
mov
insl
js
pop
adc
cld
rclb
hlt
jle
push
pop
jno
mov
xlat
mov
idivl
jge
scas
iret
cmp
repz
mov
xor
into
sbb
aaa
mov
dec
jnp
xchg
fsubr
mov
mov
cltd
fidivrl
mov
xor
mov
mov
sub
cmc
rol
pop
shlb
mov
mov
jg
nop
cmpsl
mov
jmp
cmp
cld
xor
mov
xchg
adc
ja
stos
aaa
mov
push
xor
mov
stc
or
inc
adc
sbb
cmpsl
push
or
xorb
add
imul
int3
and
lahf
push
xor
mov
shrl
ret
mov
popa
pop
sub
mov
xorb
xor
movsl
pop
fnsave
jl
add
xlat
cmp
mov
test
mov
and
fisubl
jmp
push
cmp
cli
cmp
andb
xor
loop
cmp
mov
sub
dec
shrl
mov
leave
xor
cmp
add
add
test
adc
insb
mov
jnp
mov
fwait
in
mov
add
push
inc
sbb
jg
mov
mov
ret
repnz
inc
cltd
aaa
mov
sub
jb
or
insb
sarl
xchg
leave
fdivr
xchg
subl
and
fiadds
out
das
push
mov
jae
out
mov
jge
push
cmpsl
xchg
cmp
pushf
icebp
popw
imul
pop
cmc
out
mov
fucomp
jnp
xchg
sbb
sub
inc
icebp
inc
mov
xchg
add
push
xor
pop
jp
stos
sbb
adc
xor
mov
mov
jno
popa
dec
xchg
or
loope
jmp
push
mov
aas
or
faddl
imul
jnp
lret
adc
xchg
stc
cmp
loopne
mov
das
add
aad
sub
add
xor
and
aam
test
push
xchg
stc
movsl
and
mov
notb
in
jle
pop
mov
adc
adc
add
push
jle
jmp
icebp
das
jbe
mov
sbb
mov
clc
and
push
adc
pop
mov
and
mov
push
cmp
inc
xlat
ds
and
sub
sub
neg
scas
int3
push
mov
mov
xor
lds
push
sub
lahf
pop
mov
repz
jmp
mov
cmp
mov
pop
fisubrl
push
mov
add
mov
test
xchg
fnstenv
aas
lea
dec
push
push
mov
inc
repnz
movaps
push
add
aam
jb
test
mov
aad
add
inc
lods
and
test
add
cmpsl
dec
cld
shll
push
repnz
sbb
pop
cmc
mov
mov
mov
cmp
and
mov
mov
xor
sbb
ret
jne
xchg
sub
mov
jns
pop
or
xor
xchg
push
in
mov
loopne
pop
xlat
fmull
pusha
mov
sbb
and
scas
and
stos
mov
jecxz
xchg
and
push
mov
mov
addr16
add
mov
xor
mov
jp
jns
or
xchg
push
cmp
fiaddl
sbb
ret
sbb
sbb
cmp
arpl
cli
lods
and
mov
cmp
scas
mov
pop
pop
cmpsb
lret
cmpsl
mov
fistl
adc
adc
stos
add
pop
mov
xchg
es
xchg
jg
sahf
mov
xchg
out
fmuls
fwait
mov
xor
mov
lea
lods
adc
xorl
rcrl
je
daa
inc
mov
lcall
inc
sahf
mov
push
fstps
out
repz
mov
push
inc
dec
ds
mov
cmpsl
scas
imul
add
jb
cwtl
clc
or
cmp
mov
add
add
or
sahf
jns
rcpps
mov
fwait
pop
repz
sub
cmp
sbb
mov
xor
xor
fwait
jnp
push
arpl
inc
mov
hlt
leave
or
or
jg
adc
sub
cmpsl
mov
mov
jne
pop
or
dec
mov
rclb
adcl
fbstp
dec
dec
stos
mov
mov
jp
out
jno
sbb
ja
insb
outsb
mov
jne
fcomp
inc
mov
ret
imul
mov
cmp
cmpsl
jo
xchg
arpl
lods
pop
daa
lods
pop
fwait
movsl
iret
jmp
dec
imul
and
add
mov
add
mov
xchg
or
cmc
outsb
mov
cmpsl
movsl
psubsw
rcl
push
mov
mov
out
mov
or
sbb
mov
mov
or
mov
mov
mov
fdivs
data16
leave
sbbl
push
stos
push
cli
jg
pop
xlat
das
and
movsb
sbb
subl
ljmp
clc
inc
lahf
stos
loopne
orl
scas
mov
mov
das
xchg
pop
daa
lods
or
stc
faddl
scas
mov
mov
mov
ljmp
mov
push
cmpsl
mov
adc
in
mov
sub
movsb
jnp
fs
add
mov
cmp
test
movsl
popf
jns
push
jg
mov
pop
mov
adc
add
mov
cmp
addr16
es
int3
shll
sub
lcall
movzwl
xchg
rorl
pop
mov
mov
addr16
cmp
in
mov
pop
std
inc
pop
stos
lcall
pop
and
scas
aas
jae
cmpsl
cmpsl
fisubl
pop
cmp
jnp
in
cli
xor
add
pop
insl
cltd
repz
in
leave
enter
sub
jp
icebp
jge
pop
xchg
mov
repz
mov
dec
stos
je
iret
xlat
inc
ret
test
pop
movsl
lock
mov
mov
xlat
rcrl
sarl
subb
inc
jns
xlat
jb
sub
iret
cmpb
aad
fcomps
add
push
mov
jmp
cmp
pcmpeqd
fidivl
aam
xlat
popf
and
stos
mov
add
adc
push
gs
cs
push
jmp
mov
popa
fwait
mov
addl
data16
push
dec
fadds
test
mov
jg
mov
xchg
out
in
dec
test
mov
scas
and
popf
jle
xchg
ss
fwait
sub
xchg
popa
mov
and
push
int3
mov
lret
push
add
xor
cltd
push
es
jae
sub
mov
sub
fs
cli
cmp
xor
sarl
movsl
mov
lds
gs
cmpsl
xchg
in
mov
sbb
xchg
insb
sbb
mov
ljmp
or
dec
test
mov
mov
pusha
int3
xchg
dec
sub
mov
and
daa
fwait
clc
hlt
and
aaa
sub
mov
mov
mov
mov
cmp
nop
cmp
fildll
pop
adc
cmpsl
inc
fwait
mov
mov
loope
stos
addr16
dec
enter
push
mov
das
lods
shl
adc
rcrl
adc
aam
sbb
loope
ret
out
inc
cmp
pop
testl
jmp
std
or
inc
dec
ret
inc
loopne
xchg
shlb
out
movsb
and
jmp
icebp
adc
add
bound
jae
mov
orl
fildl
xor
jg
lds
push
imul
in
inc
mov
cmpsl
daa
fisttps
mov
imul
mov
lods
icebp
inc
sbb
cltd
sarl
lcall
subl
adc
ret
imul
cmp
inc
or
loop
push
xor
jmp
lods
mov
inc
cwtl
push
mov
mov
fisubrl
mov
arpl
nop
xchg
jmp
jecxz
adc
lret
insb
mov
movsl
xchg
cmc
cmp
lcall
pop
pop
out
testl
cmpb
inc
cmpsb
pop
mov
inc
loop
icebp
jbe
nop
mov
fs
mov
cmp
into
jno
movb
mov
or
add
mov
mov
cld
push
sbb
jno
popl
pop
cs
jbe
pop
iret
out
jno
ret
ds
and
mov
in
dec
shrb
stos
mov
mov
mov
inc
movlps
and
mov
mov
aam
xor
cmp
addr16
pop
adc
add
push
mov
and
mov
xchg
sbb
test
loop
mov
inc
fistps
jle
adc
aaa
faddp
cmp
sbb
jo
mov
mov
out
lret
sti
pop
mov
mov
bound
cltd
mov
out
mov
sbb
push
mov
pop
mov
sub
sahf
sti
mov
inc
fdivs
dec
int
mov
mov
or
leave
mov
xchg
into
repz
mov
rcl
rcl
adc
nop
pop
dec
xchg
rcrb
mov
scas
movsb
inc
mov
push
push
jae
icebp
adc
adc
push
jle
jnp
cmp
xor
jne
sbb
int3
sub
fs
inc
imul
dec
push
lahf
cwtl
cmpsl
push
mov
aam
adc
mov
fs
lret
inc
inc
scas
cmp
mov
add
ss
mov
inc
push
fstpl
mov
stos
mov
sub
adc
mov
test
mov
mov
ss
mov
mov
and
popf
pop
xor
cmp
jns
stc
stos
sub
aas
add
jb
imulb
dec
cltd
inc
add
into
mov
cmc
icebp
jmp
mov
mov
jns
hlt
movsl
cmp
lock
mov
into
jle
orb
lods
lds
mov
int3
cmp
pop
lcall
dec
cmp
and
mov
xor
dec
jne
mov
cli
mov
repnz
pop
mov
pop
dec
sub
std
cmp
inc
mov
aaa
xchg
mov
push
cmp
mov
mov
cwtl
cmp
mov
mov
adc
lea
pop
adc
push
push
mov
out
adc
or
negb
fidivrl
mov
pusha
fucomp
sub
lock
pop
cmp
mov
xchg
add
push
shlb
cmp
cmpsl
in
je
cmp
mov
ljmp
jmp
mov
das
pop
test
cltd
dec
imul
loop
adc
xchg
rclb
add
int
bound
push
sbb
ds
in
push
cmp
hlt
popf
jno
cwtl
rorl
das
adc
test
mov
xchg
push
mov
shlb
inc
jg
inc
cmp
insl
xchg
mov
test
xchg
bound
adc
sbb
mov
enter
fsubrl
sub
icebp
add
imul
insb
and
mov
xlat
test
rcll
movsb
mov
aaa
jge
shlb
xlat
stos
icebp
push
test
mov
popa
mov
push
jbe
dec
xorb
mov
cmpsl
xor
imul
mov
push
jns,pn
push
fwait
add
mov
fsub
gs
dec
mov
clc
imul
mov
jmp
repnz
push
xor
mov
out
push
lods
aas
jl
cwtl
or
dec
inc
sub
mov
sahf
pop
les
sti
fiaddl
xor
sbb
dec
ffree
mov
inc
add
xchg
test
mov
sti
adcb
outsb
inc
stos
sub
cmp
cmp
movsl
pusha
ljmp
add
ss
cmpsl
lahf
fmulp
stc
aam
loop
ja
adc
dec
ljmp
mov
sbb
aaa
pop
mov
and
xorl
repnz
sbb
test
or
mov
test
sub
jno
ja
pop
mov
mov
imul
pop
imul
lret
sub
sub
out
sbb
movb
ja
cmp
mov
pop
mov
inc
mov
fdivl
xlat
sbbb
cmp
sbb
movsb
mov
pop
inc
cmc
enter
fiadds
inc
mov
cli
or
mov
pop
je
pop
out
stos
pop
pop
cli
cmpsl
mov
aas
pop
cmp
mov
lret
frstor
cmp
lods
imul
mov
xchg
mov
xorl
call
mov
ror
xor
lods
cmpsl
mov
jecxz
mov
mov
add
shlb
jl
sub
fnstsw
mov
add
mov
mov
cmp
xchg
roll
mov
divl
inc
mov
adc
push
insl
repnz
ja
imul
xchg
shll
push
xlat
and
sub
gs
xor
mov
divl
xchg
packsswb
xchg
push
stos
pop
mov
daa
cmp
test
lock
fwait
cld
mov
sbb
push
xchg
inc
cmc
push
loop
shld
add
sti
mov
xchg
push
mov
loopne
jae
and
mov
push
mov
xchg
or
cmp
shrb
mov
xor
push
jns
leave
pop
mov
stc
andl
sub
xor
and
mov
clc
mov
pop
pop
std
ljmp
bound
xor
mov
mov
pop
or
xchg
es
mov
mov
jge
int3
and
shll
mov
xchg
sub
fnstsw
inc
cmc
mov
push
xor
jmp
ljmp
sbb
sbb
in
int3
aaa
or
jmp
jb
imul
mov
ret
sbb
cmp
inc
mov
imulb
pushf
jp
cmp
aad
mov
and
add
sub
rorb
pop
jmp
mov
loope
outsl
test
das
ret
inc
mov
jne
stos
cmpsl
enter
xor
ds
pop
je
aad
or
mov
mov
mov
xorb
mov
adc
inc
jp
pop
mov
adc
std
jns
arpl
add
iret
mov
packssdw
fwait
adc
fldt
sbb
xlat
pop
movsl
and
subl
shll
pusha
fld
jne
aas
arpl
mov
sbb
jbe
mov
jb
rcl
xchg
test
sbb
je
leave
int
leave
cltd
andb
fwait
dec
push
andb
mov
mov
dec
cwtl
fs
bnd
mov
movzwl
sbb
ret
adc
addr16
add
lods
xlat
popf
pop
mov
mov
subl
cmpsl
sbb
in
rep
rol
and
sub
xor
pop
adc
mov
lcall
scas
in
lahf
inc
cltd
sti
hlt
pop
mov
pop
sarl
sub
rcll
mov
mov
mov
mov
or
into
addb
lret
jno
cmpsl
jle
stc
push
lcall
adcb
and
in
mov
jns
xor
or
jge
pop
out
daa
mov
xchg
inc
lds
xchg
roll
mov
inc
pop
int3
pop
mov
andb
xchg
mov
dec
mov
stos
mov
sbb
lahf
sbb
xor
sub
idivb
add
lret
clc
add
cmp
and
mov
movsb
mov
gs
mov
adc
push
ja
ds
inc
mov
push
scas
xchg
mov
rorl
lods
addr16
test
in
movsl
jns
push
pop
pop
ret
shll
movsl
jmp
addl
add
push
mov
xorl
mov
sbb
divl
xchg
mov
sarb
rcr
arpl
or
mov
pushf
xor
mov
lret
movsl
mov
mov
jae
jge
cmp
mov
mov
pop
dec
mov
ret
xor
xorl
push
mov
hlt
test
mov
fwait
pop
and
mov
bound
aad
mov
in
jp
int3
xor
sbb
adcl
sub
mov
repnz
inc
inc
jmp
ficoms
out
hlt
pop
fldl
sub
mov
jno
out
stos
or
mov
call
pop
jp
repnz
mov
dec
mov
xchg
mov
push
shlb
inc
jnp
pop
pop
sbb
push
cmpsb
or
push
movsb
mov
mov
push
mov
and
and
adc
sub
xchg
pop
scas
xlat
xchg
insb
popf
jnp
inc
aaa
jp
mov
xor
shll
or
xchg
ja
xchg
cmp
sti
dec
scas
popa
cltd
xchg
sbb
pop
mov
dec
popf
stc
jae
mov
mov
icebp
push
repz
in
mov
mov
xchg
pusha
loop
lods
mov
pop
fisubl
inc
mov
mov
sub
clc
or
cwtl
outsl
scas
cmp
xlat
sbb
mov
xor
sub
dec
push
das
lods
or
xchg
push
psrld
cmp
jno
add
dec
mov
shr
adc
cmpl
pushf
cwtl
pop
jb
enter
aas
fsubs
test
movsb
int
mov
pop
adc
mov
addl
jne
mov
xchg
or
lret
cwtl
dec
jns
xchg
fdivl
mov
outsl
es
mov
mov
pop
sbb
add
into
repnz
fiaddl
ret
movsl
fs
les
pop
and
mov
in
jg
push
mov
jne
push
repnz
gs
mov
add
sbb
jno
mov
pop
cmpsb
dec
imul
add
decl
cmpsl
or
or
lahf
fcomps
mov
stos
xor
or
xchg
push
lgs
and
pop
sbb
dec
jns
mov
mov
pop
add
or
or
ret
je
mov
inc
and
pop
xlat
icebp
push
cmp
stos
mov
mov
test
push
cmpsb
pmaddwd
mov
pushf
xchg
mov
inc
repz
inc
int
fdivs
mov
clc
cwtl
jnp
mov
popa
xchg
sahf
xor
xchg
cmp
aam
adc
mov
pop
test
mov
mov
mov
sbb
mov
xchg
push
cmpsb
fcompl
mov
jle
cmp
pop
fnstsw
and
push
popl
mov
es
mov
daa
mov
sbb
mov
mov
daa
aaa
jns
in
mov
fsubrs
scas
mov
repz
pop
xchg
out
mov
xchg
test
dec
fsubs
mov
mov
fwait
pop
test
movsl
adc
sbb
jno
sub
adc
lahf
mov
loop
fs
mov
mov
pushf
lret
jb
lea
or
push
pop
mov
ja
shr
push
xchg
xlat
inc
cmp
movsl
fwait
jns
repnz
mov
or
lcall
pop
add
jp
repz
sbb
and
and
popf
mov
insl
xchg
retw
mov
push
adc
mov
jmp
sbb
adc
ljmp
shl
int
mov
sbb
icebp
inc
scas
sbb
dec
mov
movsb
xor
lea
xorl
icebp
mov
sbb
test
scas
adc
push
sbb
mov
mov
add
mov
hlt
gs
pop
cli
jl
int3
fidivrl
mov
mov
xchg
aad
adc
mov
pop
shll
gs
les
dec
xor
sub
adc
cmpsl
shrl
jmp
bound
sbb
cmp
pop
inc
imul
mov
fbstp
ljmp
mov
pop
bound
xchg
daa
nop
lret
loope
mov
fbstp
push
mov
fninit
ljmpw
mov
fists
adc
shr
cmp
inc
xchg
jno
jae
cmpsl
mov
mov
add
jb
icebp
enter
adc
sub
sbbl
inc
ss
sbb
jb
mov
lret
nop
xlat
lea
std
mov
jp
js
pop
ret
dec
add
aad
je
cmpsl
xchg
gs
xchg
test
daa
adc
xor
cmp
jo
les
sub
pop
dec
lods
icebp
xor
mov
or
movsl
sub
mov
lods
call
jg
xor
cmpsl
das
fists
xor
fiadds
jmp
ja
jle
xchg
xlat
mov
movsl
pushf
xor
mov
xchg
out
shrb
rorl
sbb
into
scas
xchg
mov
mov
cmpsb
test
add
shl
inc
mov
and
mov
into
xchg
inc
test
in
sbb
dec
imul
mov
lea
lcall
scas
xchg
cmpl
pop
div
cwtl
fmuls
xor
or
dec
loopne
mov
xchg
mov
enter
mov
push
mov
aaa
std
cmp
jge
jg
or
or
lods
es
pop
add
sbbl
cmp
push
mov
idivl
data16
mov
xor
inc
out
push
jmp
dec
loopne
nop
pop
out
jns
stos
fcom
mov
xchg
sarb
cmp
mov
mov
and
test
movsl
dec
int3
inc
pop
nop
cmp
insl
xchg
mov
and
xorl
push
test
test
mov
ljmp
pop
pop
adc
lcall
sbb
int3
mov
imul
rolb
sbb
mov
pop
sbb
test
stos
dec
cltd
push
or
add
cld
stos
jge
mov
xchg
in
lods
aas
stc
mov
jne
push
xchg
das
mov
data16
mov
pop
mov
fs
add
add
hlt
mov
or
jmp
sub
in
add
mov
mov
xchg
mov
or
sahf
popl
icebp
adc
and
jnp
pusha
cmpsb
fistps
mov
pop
push
lea
outsw
mov
fcomip
out
inc
sbb
cmp
mov
jo
mov
jnp
inc
lea
mov
scas
or
loopne
mov
into
sub
icebp
mov
es
or
aas
fcompl
mov
jmp
xchg
jno
cmp
sbb
mov
rcrl
in
xor
decb
mov
cmp
inc
xor
ret
pop
cmp
fwait
mov
cmp
addr16
scas
icebp
pop
push
daa
adc
ret
lcall
inc
mov
or
cmpl
cli
mov
fwait
stos
dec
cmp
inc
mov
lock
stos
icebp
hlt
push
mov
xchg
aas
push
int
jns
pop
pop
stc
roll
cld
pop
stos
mov
mov
push
mov
mov
icebp
std
mov
sub
or
mov
bound
jmp
pop
ds
ret
xchg
scas
sar
lahf
mov
aaa
cmp
push
shlb
mov
iret
adc
mov
xlat
mov
das
jbe
repnz
and
xchg
mov
xchg
jns
xor
xchg
xor
cmp
mov
pop
and
subb
popa
mov
cmpsl
mov
cld
stos
mov
xor
out
ljmp
xchg
mov
je
push
lret
or
push
aaa
in
mov
test
bnd
lcall
jns
lods
insb
fstpt
cmp
and
into
or
xorl
xchg
loop
mov
push
or
aad
cmpsl
jge
notl
sarb
icebp
das
sbbb
dec
pop
or
mov
data16
fnstsw
aaa
lods
popf
movsl
or
lods
lods
mov
cmp
jg
mov
dec
mov
xor
mov
add
or
decl
inc
cmpsl
cmp
sub
aaa
adc
add
mov
fadds
xchg
pop
cmpsl
cmpsb
and
jnp
test
ja
cwtl
push
setp
or
sub
aad
mov
ret
pusha
hlt
lods
sbb
inc
mov
jbe
pop
cmpl
adc
sbb
pop
adc
xor
mov
mov
and
fnstcw
xchg
inc
imulb
mov
jge
rol
sarb
fwait
testb
outsl
inc
jp
insl
dec
mov
popf
adc
cmc
push
addl
mov
sub
movsl
negb
mov
and
mov
cmpsl
xchg
lcall
adc
cltd
inc
int3
xchg
rcrl
cmp
aas
inc
adc
movsl
pop
jl
sbb
fiaddl
push
xor
shll
and
movzwl
faddl
xor
adc
mov
cmp
cmp
pop
stos
stc
mov
jne
pop
and
cwtl
mov
sbb
mov
mov
test
pop
fnstenv
outsb
rcrl
mov
in
adc
sub
adc
dec
dec
mov
gs
fcmovnbe
addr16
or
xchg
pop
in
mov
mov
or
pop
fnstenv
lret
sarb
or
xorl
mov
aam
icebp
mov
int3
out
jno
pop
push
mov
cmpsl
mov
lahf
mov
pusha
lcall
push
int
lods
mov
inc
xchg
jle
lods
mov
jmp
test
pop
mov
cmp
inc
or
and
mov
loope
movsb
cmp
cmp
mov
fidivrs
cwtl
daa
inc
popf
nop
lods
xor
lods
mov
sbb
stc
popa
pop
or
mov
mov
pop
jl
add
imul
arpl
sub
out
jecxz
stc
adc
mov
mov
test
jle
sub
sub
leave
sbbl
jmp
jge
shll
push
mov
sub
iret
mov
sbb
sbb
icebp
jo
jle
mov
lret
loopne
mov
sti
ficomps
jnp
sbb
adc
clc
mov
xor
mov
mov
mov
jmp
mov
push
cli
iret
sahf
sti
mov
movsb
leave
push
cwtl
pop
xorb
lret
mov
jne
inc
pop
pop
addr16
mov
leave
icebp
adc
cli
push
sbb
sub
pop
dec
and
fs
mov
mov
lcall
notb
sti
lods
xor
scas
test
iret
xchg
jg
sbb
pop
mov
or
xor
xorl
inc
mov
or
pop
sbb
mov
aam
add
mov
mov
jo
imul
xchg
test
dec
into
mov
jl
stos
xchg
mov
insl
icebp
rcll
in
mov
pop
int
xor
shlb
sub
adc
dec
xchg
xor
jns
xor
pop
stos
xor
lahf
lcall
mov
adc
xchg
pop
pop
adc
jae
pop
mov
aam
mov
sub
jp
andl
push
adc
mov
dec
mov
lcall
dec
popf
mov
mov
pop
jmp
iret
loopne
xor
mov
and
setnp
es
pop
push
add
and
mov
mov
test
push
xor
cmpsl
andl
push
inc
fidivl
jle
stos
insl
stos
in
rorl
cs
cmp
xchg
xchg
push
sbb
fwait
push
or
jmp
push
fbstp
mov
sub
add
movsb
mov
xor
cmpsl
add
lea
mov
icebp
je
inc
jb
out
jns
fistpl
sbb
inc
jae
inc
test
pusha
mov
fwait
mov
mov
mov
or
scas
xchg
das
sbb
xlat
xchg
iret
fwait
inc
icebp
mov
xchg
mov
and
movsl
xchg
test
inc
mov
cltd
mov
lret
mov
mov
dec
add
jecxz
add
mov
sub
fidivs
adc
jb
mov
mov
icebp
jae
jo
sub
jge
pop
cmp
jns
into
add
fistps
mov
rorl
xor
sub
and
xorb
sub
xchg
xor
mov
and
sbb
pop
popa
mov
inc
dec
pushf
int3
out
mov
sbb
xor
xchg
fmuls
mov
outsl
int
jno
mov
loopne
push
sti
adc
clc
mov
push
scas
adc
in
mov
jge
fdivrl
mov
jg
jge
add
test
add
xor
stos
dec
loope
push
pop
dec
divl
insl
ret
sbb
xor
imulb
dec
jg
popa
add
scas
lock
mov
jle
cmpsb
mov
sub
adc
xchg
aaa
pop
or
sub
arpl
shll
xor
fdivs
inc
mov
mov
and
imul
fwait
stc
pushf
add
dec
adc
cmp
sub
adc
cltd
icebp
add
pop
sahf
cli
imul
stos
and
lcall
mov
lods
mov
push
mov
mov
adc
outsl
inc
pop
pop
add
mov
ja
xor
repz
lods
jne
xacquire
sahf
out
or
daa
mov
stc
mov
push
inc
mov
movsb
inc
xor
mov
and
inc
fdivp
cmpb
cmp
jl
fisubl
sub
adc
push
jp
jnp
daa
pop
fsubr
adc
and
mov
sahf
sbb
fildll
add
or
iret
push
aad
stos
sub
xchg
jge
outsl
jns
mov
lds
mov
sbb
je
nop
out
aad
push
mov
lods
imul
testl
mov
cld
fwait
leave
ds
adc
mov
dec
mov
sbb
mov
mov
cwtl
gs
cmp
insb
and
sbb
daa
lret
add
cmp
js
mov
mov
std
in
xor
jnp
push
loope
xlat
mov
clc
ret
mov
mov
mov
pop
mov
imul
inc
movsb
es
rcl
pop
outsb
adc
mov
testb
pop
aas
or
mov
leave
fisubrl
xor
mov
pop
rclb
loopne
mov
or
idivb
ljmp
in
repnz
fimull
movsb
jp
test
add
or
sbb
inc
sub
xor
and
lods
or
cmc
jge
es
xchg
mov
or
pop
daa
fisubl
icebp
lcall
mov
cmpsl
jo
popf
mov
jnp
repz
popa
mov
sbbb
ds
pushf
in
stc
addr16
cltd
or
dec
cmpsl
inc
subl
imul
cmpsl
lret
loop
stos
popf
mov
xchg
pusha
subl
sub
mov
int3
mov
mov
pusha
mov
pushf
mov
xor
jae
push
jp
cmp
jg
jns
arpl
xor
pop
cmp
cmpsl
scas
frstor
cmp
fcompl
sub
mov
or
fimuls
mov
or
and
cmpb
sbb
jnp
fstp
scas
les
cwtl
cmp
daa
jg
mov
mov
add
test
sqrtps
popa
imul
int3
jmp
cmp
shlb
stc
jnp
mov
mov
inc
dec
mov
mov
sbb
xor
pop
cltd
mov
add
sub
data16
pusha
fdivrs
int3
fmulp
mov
mov
and
test
or
mov
or
pop
mov
es
ret
push
sarb
cmc
icebp
jb
pop
mov
iret
sahf
inc
cwtl
arpl
sub
or
adc
or
sbb
test
add
adc
mov
mov
xor
into
xchg
adc
mov
mov
push
aas
int3
mov
cmp
add
out
cmp
push
aam
mov
adc
addr16
aad
rcr
loopne
xchg
add
scas
ficoml
adc
cld
sarl
imul
xchg
dec
std
aas
xor
mov
xlat
adc
adc
into
and
adc
sub
jle
dec
mov
lret
push
lods
popf
mov
mov
mov
in
add
mov
pop
adc
lret
jns
mov
lea
fwait
mov
pop
and
gs
fidivl
mov
out
mov
enter
cmp
cs
jle
pop
push
sbb
sti
mov
xorl
adc
pusha
mov
push
int
push
ja
xlat
lods
jnp
push
xor
ss
jge
leave
mov
cld
mov
mov
popa
pop
sub
cmp
sbb
pop
mov
jae
jge
pushl
in
xchg
repz
cmpsl
mov
adcl
fdivr
shll
dec
mov
repnz
jnp
cltd
mov
int3
mov
mov
movsb
pop
mov
mov
sub
adc
stc
lods
or
dec
and
jne
mov
lret
call
ss
stos
movsl
sbb
negb
sbb
and
add
mov
adc
inc
js
mov
mov
and
aaa
mov
mov
cmp
dec
shll
mov
enter
test
sub
mov
ficomps
movsb
push
shlb
loopne
mov
scas
lods
fcmovu
test
outsl
add
pop
dec
out
sbb
icebp
enter
mov
stos
push
jl
cld
mov
mov
pop
sbb
mov
in
loop
mov
push
stos
imul
and
inc
cmp
or
push
push
jp
hlt
stc
mov
sbbl
mov
clc
and
sub
pop
pop
jns
fsubrs
or
mov
add
mov
pushf
out
dec
stos
lahf
add
push
inc
das
orl
mov
mov
call
pop
mov
js
jl
or
jbe
fildll
inc
dec
sbb
repz
mov
test
cmp
arpl
jl
mov
mov
pop
outsl
rcll
sbb
push
sbb
fsubr
and
test
rcrl
mov
xchg
push
mov
xor
dec
sahf
clc
mov
fsubl
push
mov
push
cwtl
loop
ret
mov
fsubr
inc
popf
in
mov
ljmp
dec
lock
fwait
pop
cmpsl
lret
push
or
fs
flds
or
addr16
xchg
mov
shlb
jge
test
cwtl
mov
push
mov
mov
sbb
rcrl
sahf
orb
push
pop
lahf
sub
ja
popa
cwtl
mov
scas
fwait
ret
test
dec
mov
add
pop
and
fdivrs
cmpsb
cmp
mov
xlat
pop
adc
scas
mov
lcall
jle
pushf
mov
mov
frstor
movsl
leave
ret
pop
test
pop
jmp
or
xchg
stos
sti
xchg
arpl
pop
mov
push
sub
jecxz
mov
xchg
sbbl
ret
adc
lcall
xchg
mov
lods
in
jl
pop
lds
mov
mov
in
jge
sub
fstpl
sub
and
mov
adcl
cmp
fadd
jnp
cmpsl
cmpsl
std
xor
jg
cltd
cmpsl
inc
xorl
icebp
inc
idivl
cmp
adc
lods
ficomps
xor
dec
push
and
lods
cs
insl
mov
pop
outsb
push
jecxz
or
nop
leave
imul
loope
lds
mov
or
fsubs
push
outsl
jge
in
cs
mov
sbb
xchg
das
xlat
pop
mov
and
jmp
adcb
mov
icebp
mov
mov
insl
mov
pop
jns
add
adc
xchg
loope
cmp
xchg
dec
shlb
dec
mov
or
cmp
test
mov
mov
mov
cmc
ja
mov
out
jge
xchg
mov
xor
icebp
fwait
arpl
push
mov
xlat
jb
jmp
push
sbb
push
add
scas
mov
idivl
ja
and
das
pop
xchg
xor
shll
jnp
jbe
xlat
repz
bound
pop
mov
adc
fsubr
aaa
and
sub
sbb
andb
pop
mov
aam
xchg
jmp
xorl
int3
sbb
push
cmpsl
push
movsl
cmp
mov
cmpsl
mov
mov
push
mov
fdivrs
fidivl
icebp
mov
push
ds
inc
es
inc
movsl
jo
clc
push
jl
pop
loop
mov
push
mov
bound
xchg
icebp
test
pop
push
addb
push
insb
mov
aaa
push
adc
insl
xchg
jp
lcall
cli
and
icebp
mov
scas
repz
or
jecxz
gs
rorb
mov
jge
xor
mov
cmpsb
pop
dec
xchg
hlt
test
aaa
pop
jge
mov
mov
xor
mov
jnp
xchg
in
mov
push
mov
inc
xor
jae
inc
into
sbb
mov
inc
push
dec
mov
sbb
mov
mov
xchg
aam
xchg
rcrl
rclb
cmpsl
fs
mov
fisubrl
in
insb
mov
adc
fs
nop
fwait
cmpsl
jns
into
cmpsl
das
icebp
jg
leave
mov
int
mov
push
xchg
xlat
inc
inc
mov
xor
loope
iret
jp
daa
stos
int
inc
pop
sbb
js
ds
pop
pop
push
sub
popa
fsubrs
in
mov
jae
mov
stos
sbb
mov
add
mov
rorl
ja
add
mov
dec
sbb
mov
lods
xchg
and
mov
clc
imul
push
xor
sub
jnp
test
xor
mov
idivl
jmp
lcall
jnp
xor
lds
cltd
insb
nop
xchg
stos
aaa
mov
dec
fbstp
push
fdivrl
xchg
daa
inc
cltd
xor
idiv
mov
or
pop
int
stos
dec
mov
rcrl
dec
or
push
repnz
cmpsl
sbb
in
pop
adc
mov
lock
subb
aam
icebp
pop
cld
pop
cmp
xchg
cwtl
mov
loope
das
sbb
jg
cmp
sub
lock
nop
or
fwait
outsl
stc
xchg
pop
mov
fisubrl
mov
ret
mov
fwait
sub
adc
lea
pop
std
jnp
sub
jl
movsb
inc
divl
mov
mov
call
movsl
shlb
sbb
push
addl
mov
cwtl
inc
jecxz
cli
movsb
mov
lcall
subl
add
mov
cmp
xlat
in
lcall
ficoms
mov
arpl
cmpsl
stc
mov
mov
out
cs
repz
mov
push
or
mov
and
out
aaa
adc
pop
enter
mov
pop
or
xor
cli
test
movsl
cmp
sub
cmp
push
cwtl
pop
shl
push
fidivrl
mov
fwait
pop
jae
mov
adc
shlb
stos
mov
mov
xchg
mov
cltd
icebp
add
scas
test
movups
adc
mov
jmp
or
jle
xorl
or
movsb
pushf
stos
mov
sub
inc
jl
cmpsl
inc
cltd
mov
leave
pop
xchg
add
test
loop
mov
popf
sbb
mov
lods
out
vmovdqu
inc
jl
cmpsl
stos
add
shlb
mov
jo
inc
ss
mov
in
add
push
jno
shrb
ror
movsl
icebp
mov
fs
dec
jno
jnp
cmp
mov
lcall
sbb
mov
xor
inc
test
movsl
ret
cmp
rorl
mov
push
lds
daa
mov
les
into
cmc
xlat
xlat
loope
mov
das
leave
mov
mov
out
imul
cmp
ljmp
sbb
jne
cld
and
es
mov
out
ljmp
insl
cmpsb
inc
daa
mov
pop
mov
test
lods
nop
mov
dec
sbb
shll
mov
mov
in
rcr
scas
push
xchg
stos
push
sub
cs
lret
push
das
add
mov
mov
push
arpl
je
or
data16
mov
sbb
or
mov
test
add
inc
repz
cmp
inc
xchg
lods
lds
les
gs
add
mov
or
bound
jae
xchg
mov
testb
int
leavew
icebp
mov
test
or
cli
or
loope
xlat
xchg
add
lods
test
or
mov
jo
sbb
repnz
jl
scas
shlb
dec
fstpl
xlat
cmp
icebp
inc
adc
in
mov
je
jnp
cmpsl
in
mov
add
mov
cmp
inc
sti
fstl
imul
mov
jp
in
pop
mov
xor
xor
int
mov
adc
and
lods
ret
mov
xor
ss
fwait
mov
mov
mov
lret
out
adc
cmpsl
scas
stc
adc
fwait
cmpsl
test
int
out
sbb
je
icebp
lds
cmpsl
mov
int3
mov
mov
jle
jmp
sbb
push
mov
or
adc
lods
pop
sbb
sbb
scas
xchg
mov
subb
mov
mov
rcr
pop
es
cmpsl
cmp
mov
mulb
mov
insb
scas
mov
xchg
mov
mov
aas
add
arpl
cwtl
std
nop
loop
dec
xor
push
mov
addl
fidivs
insl
mov
or
rorb
push
sbb
xchg
add
mov
cmp
movsl
aas
adc
mov
or
mov
xrelease
mov
mov
mov
and
loope
mov
lret
out
addl
popf
int3
sarl
mov
shrb
xor
fcomi
idivb
test
and
arpl
lcall
push
and
xlat
pop
mov
movsb
aam
mov
jmp
or
dec
adc
mov
mov
cmp
xlat
sub
cmpsb
mov
pop
mov
ljmp
mov
sub
and
or
sbb
push
dec
xchg
mov
xchg
test
jle
pop
push
sub
stos
adc
in
mov
push
mov
jmp
xchg
mov
je
shrb
jp
adcl
lahf
test
ret
or
xchg
adc
data16
fbld
mov
cmpb
jnp
mov
add
daa
enter
xor
cltd
xor
mov
xor
mov
fmuls
add
mov
enter
mov
ljmp
popf
cmpsl
xchg
dec
cmp
mov
in
repz
cli
ficomps
inc
test
push
jl
shll
dec
jnp
icebp
mov
push
cmpl
test
movsb
jb
cwtl
addr16
icebp
ljmp
into
dec
nop
test
sbb
mov
adc
sub
loopw
fdivs
mov
mulb
mov
push
add
cmp
jb
insb
xchg
mov
ja
xor
mov
loope
iret
repz
sbb
xor
sahf
mov
xchg
xchg
pop
cmp
lds
sub
adc
lods
xchg
sub
xor
sub
and
xchg
xchg
fistl
mov
aad
arpl
into
sub
cmpsb
test
es
xchg
in
movsl
jo
xor
cld
fwait
adc
rcrl
subl
add
outsl
mov
mov
stos
xlat
fwait
stos
ret
daa
xchg
xor
xlat
insb
xor
mulb
mov
mov
mov
ret
aas
mov
mov
pop
mov
pop
cmc
push
xchg
mov
push
adc
dec
fs
repz
pop
cmp
mov
clc
xchg
or
lea
mov
pop
cmpb
test
fldenv
xor
or
es
jecxz
mov
test
add
xchg
mov
js
mov
test
fs
aam
popf
inc
mov
outsl
inc
or
cli
sahf
fcomps
mov
cmp
xor
pop
outsb
pop
jle
das
fwait
repz
cmp
mov
test
fidivrl
xor
aad
scas
mov
hlt
lahf
jl
aas
mov
adc
mov
dec
mov
mov
pop
sahf
aas
and
lds
shlb
sbb
sub
test
cmpsl
xor
mov
faddl
sub
jno
xlat
outsl
addr16
jl
xor
push
jbe
lea
repz
mov
hlt
out
in
inc
mov
popf
ljmp
mov
daa
std
xchg
mov
mov
jb
mov
mov
imulb
cli
xchg
out
adc
sbb
mov
mov
mov
pop
cmp
jg
mov
lahf
jp
fsub
fiaddl
mov
add
mov
test
jb
push
cltd
mov
xchg
and
mov
xchg
test
test
mov
xor
test
dec
sbb
cmp
ret
jp
and
jnp
jmp
sbb
xchg
mov
aas
add
inc
xlat
xchg
into
lahf
rorl
cmpsl
aaa
dec
iret
mov
sbb
jg
and
lcall
loop
add
outsb
push
repz
adc
lods
call
mov
sub
cltd
dec
inc
gs
scas
dec
cmpsl
test
loopne
xorb
xlat
sarl
mov
jne
mov
daa
and
into
test
cmp
xor
cmpsl
pop
xchg
faddl
lods
es
dec
and
lret
pop
into
int3
mov
popf
insb
push
aam
sub
mov
addl
in
adc
das
stc
cltd
inc
stos
cmp
shll
mov
adc
cmpsl
xlat
mov
fdivrl
jno
xchg
insb
jp
xchg
mov
outsl
mov
mov
inc
scas
jno
mov
jb
movsl
mov
dec
int3
cmpsb
lods
mov
add
adc
movsl
insb
mov
cwtl
sbb
into
xchg
mov
fisubl
mov
lahf
add
mov
push
push
out
mov
cs
mov
mov
jno
sub
dec
mov
stos
adc
jp
mov
int
scas
ss
andb
and
lcall
dec
adc
mov
sbb
mov
push
jg
arpl
into
mov
lret
aad
test
es
sub
xor
addr16
cmpsb
mov
jae
mov
popa
sub
push
and
fdivrs
mov
mov
imul
adc
mov
call
jl
sbb
mov
push
das
cli
pop
or
scas
mov
mov
pop
xor
and
jne
addl
lods
lods
ja
mov
xor
jbe
movsl
xor
mov
test
stos
push
test
in
adc
cmp
jns
test
jae
xchg
aaa
test
jmp
fnstsw
stc
cmp
mov
xlat
test
sub
stos
out
inc
add
arpl
pop
adc
and
mov
xor
les
pop
ret
pop
pop
insl
sbb
mov
stos
icebp
cwtl
xchg
lret
ds
jnp
push
mov
cmp
sub
xlat
mov
or
xorl
xchg
pop
dec
mov
pmuludq
sbb
pop
stos
sbb
pop
inc
sbb
imul
stos
mov
xlat
pop
mov
pop
jns
xor
ficompl
mov
shrb
das
mov
cmp
int
rclb
test
inc
lret
and
jmp
dec
xor
and
jb
jge
push
in
xor
mov
pushf
sbb
mov
jmp
pop
mov
or
ja
int3
into
or
xor
cltd
xlat
test
dec
and
sbb
sti
jmp
jns
inc
pop
scas
cmpl
test
xchg
mov
fstps
lds
mov
into
inc
dec
mov
mov
sahf
fwait
mov
inc
test
addr16
mov
dec
andb
and
mov
mov
jae
jno
sub
mov
movsb
into
mov
test
ret
sub
jg
xor
fildll
or
mov
pop
fs
jno
mov
icebp
cwtl
loopne
imul
out
add
mov
cmp
cwtl
ret
stos
jnp
xlat
lods
scas
test
or
push
lahf
dec
daa
mov
xlat
inc
push
cltd
xor
repnz
inc
insb
daa
shrb
iret
mov
lahf
pushf
je
mov
mov
repnz
out
cld
mov
cwtl
inc
jne
hlt
pusha
jns
xrelease
push
mov
cmc
pop
ja
cmpsl
popa
rcrl
dec
divl
ds
mov
dec
mov
or
jo
push
addr16
out
pop
jno
aad
mov
xorb
es
int3
pop
lcall
jae
cmpsl
aaa
je
mov
lock
jg
ja
dec
jp
out
out
xor
outsb
inc
fsubl
fisubrl
cmpsl
cmpsl
jb
rclb
and
iret
and
add
xchg
dec
mov
cwtl
mov
cmpl
mov
aaa
hlt
in
mov
and
jg
out
mov
in
pop
mov
sti
mov
mov
cmpsb
popf
mov
cmp
and
mov
adc
mov
adc
loopne
mov
cmp
inc
fidivrs
mov
bound
imul
pushf
jge
std
push
mov
icebp
cmc
or
sbb
repz
jg
je
stos
hlt
ss
mov
ret
mov
add
cld
imul
stos
adc
arpl
dec
and
loop
loop
scas
fs
jmp
mov
and
mov
jp
movsl
sbb
jl
loopne
scas
mov
push
insl
daa
cmp
mov
outsl
sub
jns
ror
and
xlat
adc
ret
cmp
cmc
daa
roll
lcall
sets
mov
icebp
mov
and
xlat
xor
nop
clc
mov
iret
xchg
ficomps
fisttpll
or
mov
and
mov
inc
adc
xor
mov
test
inc
fldt
mov
cwtl
mov
mov
pop
arpl
scas
jl
leave
lret
cli
xor
pop
xchg
cmc
mov
sbb
xor
fwait
test
and
sbb
cmp
sbb
leave
imul
or
test
inc
or
repz
sbb
or
xlat
mov
pop
addr16
mov
arpl
lods
inc
mov
cmp
mov
fidivl
mov
shrl
test
sbb
mov
mov
sbb
jno
mov
mov
adc
icebp
xchg
jge
mov
fcoms
xlat
fdivrs
dec
inc
shll
std
scas
gs
mov
scas
push
cwtl
push
mov
mov
mov
scas
and
repnz
mov
inc
mov
cld
divl
xlat
sub
mov
mov
mov
test
fsubl
jmp
mov
adc
push
sub
sbb
adc
arpl
icebp
mov
ljmp
ret
adc
mov
das
xlat
sub
in
jge
sbb
cltd
mov
sbb
mov
push
adc
addb
ficompl
movsb
sahf
mov
test
jno
mov
fiadds
fcomi
clc
pop
mov
push
pop
cmp
sbb
outsb
cwtl
test
or
xchg
lcall
gs
mov
push
nop
push
mov
repz
roll
mov
ret
test
push
int
mov
dec
xor
dec
mov
mov
xor
ret
sti
es
mov
pop
push
cmp
add
push
jns
add
icebp
pop
xchg
pop
loop
cmpsl
lds
scas
pop
mov
fisubrl
sub
fsubs
aad
popf
cltd
andl
xor
jb
test
lcall
pushf
mov
dec
jg
mov
jl
jnp
sbb
leave
inc
mov
hlt
scas
mov
xchg
sbbl
and
cmp
cmpsl
fwait
lcall
rorb
xor
jns
repnz
mov
sbb
jae
and
mov
lods
fs
cmp
mov
pop
mov
add
lahf
cmp
repz
pop
in
mov
mov
rolb
cwtl
mov
ret
popf
jle
cmp
outsl
gs
adc
push
pop
aaa
data16
rolb
movsb
adc
mov
add
cmp
test
inc
jne
pop
outsl
mov
daa
add
mov
mov
or
mov
sahf
xchg
xchg
out
test
test
sbb
add
pushf
ja
push
pop
add
mov
cltd
int
loop
pop
cmp
add
popa
cmpsb
mov
mov
xchg
dec
jne
mov
fisubs
pop
xchg
sbb
cs
jns
test
jp
xchg
xchg
dec
popa
cmpsl
mov
mov
daa
and
mov
pop
jne
bound
jo
bound
outsb
fdivl
mov
fmuls
xchg
shlb
xchg
aam
push
cltd
inc
fsubl
hlt
xchg
adc
push
nop
push
xor
cli
mov
lahf
jnp
loop
bound
imul
xor
mov
aad
jmp
pop
pop
fadds
loop
cmp
mov
xchg
pop
mov
mov
notb
xorl
xor
stos
cmpsl
scas
icebp
lcall
mov
ret
mov
repnz
jg
mov
and
lcall
int3
xchg
cltd
cltd
or
pop
add
mov
orl
xlat
shll
jge
and
test
mull
fcompl
cmc
jno
sbb
or
sbb
xchg
xlat
imul
imul
inc
mov
es
xchg
adc
mov
mov
mov
imul
loop
into
in
pop
ljmp
pop
cmp
dec
je
mov
xor
push
gs
mov
fisubrl
stos
pop
jge
mov
cmpsl
mov
mov
in
jmp
std
adc
dec
mov
xor
lods
pop
xchg
mov
sbb
cmp
sbb
mov
jne
gs
sub
ja
aaa
cmp
and
sbb
jne
adcb
sbb
fcomps
in
add
ficompl
pop
dec
rcll
jge
xchg
lahf
pop
xchg
insl
mov
jbe
shrb
xchg
int
mov
test
loopne
mov
pushf
test
mov
mov
pop
inc
lea
shlb
fwait
mov
and
xchg
adcb
sub
scas
mov
mul
bnd
jge
mov
sub
test
cld
sbb
push
cmpsl
mov
fnsave
cli
orl
decb
pop
mov
mov
leave
int3
inc
inc
push
sbb
aam
gs
cmp
dec
daa
arpl
mov
jne
add
lret
or
adc
ja
mov
mov
mov
jbe
cltd
jb
mov
sbb
fistl
sub
fisubrs
fidivl
mov
jmp
jnp
fimull
mov
mov
or
jns
adc
mov
xor
daa
push
mov
inc
das
inc
lock
cwtl
mov
or
scas
mov
adc
lahf
add
jae
fwait
lcall
sbb
icebp
xor
sbb
inc
xchg
arpl
xchg
adc
mov
jns
cmp
pushf
mov
cmpsl
iret
les
add
mov
push
xor
bound
xchg
in
mov
mov
pop
jns
rolb
fnstsw
push
ja
fbstp
je
cmp
outsb
mov
xor
adc
jns
filds
push
jno
nop
xlat
xor
mov
movb
pusha
xchg
or
andb
testl
or
and
mov
push
mov
cmc
mov
sbb
mov
mov
pop
mov
lods
mov
xor
loope
test
stos
mov
popf
sub
lahf
pop
mov
dec
add
sbb
pushf
incl
jne
cmp
out
subl
shrl
sbb
cltd
lret
divl
fsub
adc
push
jl
mov
mov
mov
fdivs
and
pop
or
push
mov
and
xchg
xchg
xor
push
ret
sub
loop
push
mov
jge
loopne
mov
hlt
mov
pop
dec
lret
clc
pop
xor
lock
fwait
arpl
sub
pop
out
inc
sbb
je
push
jp
xchg
jge
mov
stos
sub
sub
sbb
push
adc
mov
cmpsl
ljmp
ret
addb
mov
sbb
jae
lahf
popa
add
daa
andb
popf
imul
xchg
add
mov
int3
ja
xchg
cwtl
pop
call
jg
outsb
fsubrl
push
mov
mov
or
insb
aad
repz
xor
stos
mov
loop
ds
out
mov
les
jns
mov
insl
mov
mov
sub
fiaddl
add
out
das
mov
cltd
inc
adc
ss
int3
je
mov
inc
subl
test
xchg
js
lea
fwait
test
cmp
movsl
jmp
jno
mov
jp
mov
loopne
dec
lret
inc
push
mov
imul
sbb
fucomp
and
mov
cmpsl
pop
fidivl
cmpsl
cld
stos
inc
outsl
xlat
and
pop
cmpsl
mov
in
fdivr
cmp
cmp
loope
jno
test
mov
mov
xlat
mov
test
mov
dec
xor
pop
pushf
push
jecxz
out
sub
cld
push
lds
cwtl
xor
cmp
outsl
sbb
jae
mov
rcll
scas
mov
rclb
cwtl
shll
negb
dec
dec
push
cmpsl
pop
add
icebp
ss
lcall
mov
and
lahf
xor
loopne
sub
repz
movsl
mov
scas
sbb
add
mov
aaa
lods
push
pop
jns
and
leave
repz
xchg
cmpsl
cwtl
mov
push
adc
jmp
jle
mov
pop
fwait
in
inc
arpl
in
imul
stos
mov
out
loope
sub
rorl
scas
outsl
mov
dec
jmp
add
fwait
bound
mov
pusha
ret
mov
pop
loop
jb
addb
pop
sub
das
mov
sahf
fdivs
jno
ret
adc
xchg
xlat
test
pop
shlb
mov
repz
pusha
fisttpll
jg
pop
scas
sbb
mov
cltd
in
xchg
xchg
imul
js
sub
push
cmpsl
fwait
sbb
mov
fcoms
cld
mov
mov
fldenv
fimull
fdivrl
sub
popa
mov
mov
lods
repz
cli
cmp
mov
push
call
repnz
cltd
xchg
fildll
icebp
outsb
pop
xor
ret
adc
stos
outsl
mov
jnp
int
cwtl
in
jge
mov
inc
rorb
test
fnsave
mov
addb
pop
mov
insl
xlat
imul
mov
lds
mov
cli
mov
sbb
bound
push
mov
mov
sbbl
mov
gs
pop
pop
mov
loop
xchg
in
adc
sbbl
call
aaa
cmpsl
dec
repnz
xorl
sbb
xchg
test
sbb
xlat
mov
stc
scas
and
mov
pop
mov
orb
inc
loope
mov
mov
repz
insl
xor
mov
jae
mov
arpl
add
sub
cltd
hlt
mov
xchg
movsb
dec
repz
inc
inc
mov
mov
movsl
shl
mov
test
cmpsl
repz
decb
ja
add
pop
push
xchg
cmp
cmpsl
xchg
or
andl
pop
mov
sub
mov
xchg
repz
mov
push
movsl
int
push
cwtl
loope
jb
nop
test
xlat
insb
icebp
dec
imul
adc
xor
daa
jge
mov
jecxz
mov
push
lcall
cwtl
lea
dec
jnp
mov
loop
pop
mov
repnz
lock
inc
mov
movsl
mov
or
add
pop
push
mov
sbb
xlat
ret
addr16
dec
scas
add
push
sub
mov
test
cli
xor
mov
hlt
mov
adc
or
cmpsl
mov
sar
sbb
push
call
ljmp
cmp
sub
jns
gs
stos
mov
mov
stos
pop
push
fwait
jle
mov
popl
inc
push
fs
xlat
pop
xchg
imul
mov
dec
mov
pop
sub
adcl
je
icebp
lods
fisttps
rcrb
cmp
movsl
push
add
movsb
pop
mov
mov
xlat
cmpb
xor
cmp
mov
mov
icebp
hlt
fidivrl
je
mov
mov
mov
in
cmp
cwtl
adc
rol
dec
cmpsl
jae
ret
cmp
mov
lods
imul
repz
shll
pop
fwait
jp
xorb
pop
mov
xor
and
and
push
inc
adc
test
sbbl
jge
mov
xchg
aaa
mov
fmull
test
pop
jge
out
scas
sbb
dec
jns
mov
inc
push
adc
xor
mov
lcall
mov
jnp
or
xor
mov
xchg
inc
xor
mov
jne
stos
out
les
cmp
adc
fimull
icebp
cli
rcrb
je
mov
mov
add
insl
xor
mov
mov
mov
lock
lods
in
mov
test
ret
repz
int
shrb
mov
cs
into
cmc
and
ret
jne
xor
jmp
mov
arpl
mov
and
inc
mov
faddl
arpl
lahf
mov
pop
fwait
dec
cmpsl
mov
das
mov
insb
adc
icebp
sbb
shlb
pop
imul
sbb
popa
sbb
mov
jge
push
cmpsl
dec
mov
mov
test
mov
mov
or
xchg
cmc
cmp
insl
popa
cmp
lock
into
xor
push
mov
mov
cmp
das
push
mov
adc
add
jle
fwait
cmpsb
loope
scas
leave
movsl
lahf
dec
or
mov
and
and
loop
fmuls
cmp
pop
cmpsl
mov
cmp
jns
adcb
cmp
mov
and
jns
out
fcmovne
mov
mov
sbb
scas
jae
xor
out
mov
cld
fldl
mov
push
lds
and
mov
movsb
add
inc
add
movsl
fidivrl
mov
mov
das
xlat
loop
decl
add
call
test
and
mov
add
dec
and
lds
push
test
mov
aas
sub
jns
lea
scas
loopne
mov
add
and
movups
test
daa
mov
xchg
pop
inc
pop
adc
scas
adc
addr16
mov
adc
cwtl
daa
xchg
imul
aas
mov
ja
ret
inc
aaa
mov
leave
out
adc
sbb
mov
cmpsl
sbb
ds
test
adc
add
cli
shll
addr16
sub
bnd
push
jne
adc
shlb
aas
xor
fldcw
jp
lea
ja
daa
leave
sbb
std
adc
fsts
sbb
out
mov
cmp
cli
mov
mov
ss
jae
fstpt
xchg
mov
imul
fdivrl
xor
adc
or
clc
mov
rcrl
mov
jg
xchg
xlat
xchg
mov
scas
fadds
test
fildll
dec
add
inc
mov
gs
clc
and
mov
mov
xor
fistpl
lea
or
repnz
movsl
jne
sbb
imulb
cmp
arpl
adc
pop
jg,pt
sub
mov
pop
jge
in
inc
mov
pop
lahf
add
cld
and
cwtl
mov
mov
mov
push
outsl
jne
jge
sbb
adc
push
cmpsl
dec
repnz
mov
xchg
adc
insl
cltd
jno
push
and
xorl
mov
mov
mov
loop
push
lods
cmp
pushf
inc
push
pop
js
add
out
jge
cmp
and
push
mov
xlat
cmpsl
mov
loope
inc
dec
mov
jnp
imul
mov
test
fiaddl
push
jne
mov
addr16
and
and
mov
cmpsb
in
outsl
dec
push
shl
sbb
mov
fs
je
scas
stc
stos
or
pop
in
add
arpl
xlat
cmp
xchg
daa
cld
movsl
hlt
jb
nop
mov
xor
pop
mov
scas
lcall
jl
mov
push
jb
jecxz
xchg
in
add
jns
jge
push
pop
pop
fistpl
lods
clc
or
enter
add
repnz
xor
into
sbb
dec
lds
mov
xchg
xchg
dec
addr16
stos
gs
andl
mov
jnp
aas
sub
mov
cmp
or
daa
in
xlat
mov
xchg
sub
or
fwait
sbb
icebp
dec
sbb
repnz
mov
repz
fwait
mov
xchg
cmpsl
xor
sub
sbb
xchg
test
cwtl
loope
outsl
sbb
cmpsl
inc
dec
inc
jb
jnp
xchg
xchg
pop
nop
sub
fwait
mov
mov
add
sbb
imul
and
adc
pop
pop
push
mov
add
cld
lods
sub
mov
aam
mov
xchg
rcrb
lret
test
mov
in
jne
shrb
mov
sbb
mov
mov
into
es
xbegin
sbb
cwtl
xchg
adc
lods
fwait
aas
mov
mov
stos
fiaddl
mov
fs
andb
jnp
mov
mov
lds
mov
adc
cmp
or
cli
jns
sub
mov
cmp
mov
cwtl
lods
xlat
and
cmpsl
push
mov
sub
sub
jl
shll
test
iret
mov
and
jbe
push
pop
mov
mov
jb
xchg
mov
jns
outsl
nop
scas
scas
dec
sahf
jae
and
aaa
sub
mov
test
xchg
xor
lods
xchg
outsl
dec
mov
sbb
sub
lods
mov
inc
xchg
flds
lods
mov
fwait
movsb
aam
hlt
sbb
cmpsb
pop
mov
gs
mov
bound
ret
sbb
jns
xor
faddp
mov
cmp
push
pusha
xchg
sbb
pop
mov
mov
pop
cmpsl
imulb
aam
enter
imulb
sbb
inc
pop
mov
mov
movsl
cmp
mov
xchg
sbb
mov
push
sbb
shlb
or
add
out
fcmovne
xor
mov
cmpsl
mov
dec
cltd
imul
fildll
in
pushf
movsl
js
push
fdivl
cmp
sub
movb
popf
cmp
js
ret
sysenter
idivl
add
test
mov
fbstp
adc
popa
push
adc
xchg
add
adc
pop
adcl
xchg
fidivs
lods
fwait
mov
mov
in
mov
lds
in
addb
xchg
test
cmpsl
sub
pusha
xlat
cld
dec
jmp
mov
fidivs
in
push
pop
sbb
jge
hlt
jae
scas
outsb
dec
jmp
sbb
adc
mov
xor
mov
xor
cwtl
imul
jecxz
adc
adc
into
xor
fs
mov
cwtl
sbb
dec
lret
cli
mov
mov
test
and
add
stc
ret
push
xchg
cltd
call
fwait
adc
dec
and
and
xor
sbb
ficompl
push
mov
mov
stos
sub
dec
push
mov
test
xchg
mov
sbb
popa
mov
cmp
jg
js
push
adc
jl
adc
push
or
jo
scas
sbb
and
imul
xor
aaa
mov
inc
aad
jae
mov
clc
inc
dec
shrl
enter
cmp
inc
adc
push
dec
aaa
imull
pop
mov
sub
movsl
mov
add
xchg
lahf
frstor
sub
fiaddl
mov
mov
sbb
sbb
leave
and
cli
cmp
inc
mov
mov
mov
adc
push
sbb
idivb
lods
int3
leave
sbb
stc
dec
lcall
adc
sbb
jae
mov
decb
sarl
mov
push
sbb
mov
stos
aas
fldcw
frstor
pop
jnp
fdivs
daa
fnstcw
push
mov
sub
and
jne
cltd
js
orl
fidivs
add
int
xchg
mov
push
mov
insl
xchg
cmpsb
cwtl
mov
stos
and
in
mov
lock
mov
xor
pop
fists
in
xor
test
mov
or
xlat
and
jns
adc
iret
sub
add
mov
add
aad
push
stos
mov
subl
or
and
sbb
mov
push
cmp
roll
adc
test
cwtl
jns
loopne
mov
mov
movsl
das
mov
fdivrs
xor
mov
push
ja
inc
mov
shl
stos
scas
out
or
xchg
jge
lods
jge
mov
insb
pop
rcrl
outsb
push
pop
int3
stos
loop
mov
xor
das
sbb
or
or
test
lahf
nop
mov
mov
jno
stos
ficomps
mov
xchg
mov
push
adc
adc
fsubs
adc
add
test
mov
cmpsl
inc
cmpsb
sar
lcall
fcompl
stc
inc
lods
pop
mov
mov
mov
mov
cmpsl
test
repz
loopne
stc
xchg
inc
mov
scas
lods
adc
or
dec
ret
mov
and
add
cmp
movsl
add
cmp
arpl
or
lods
xor
add
daa
test
addr16
cmpsl
cmpb
cmp
stos
push
and
mov
imul
mov
cwtl
leave
stos
add
scas
cmpsl
stc
lods
push
mov
cli
int
sbb
jmp
cltd
flds
leave
mov
lods
mov
xchg
lahf
xor
aas
loop
cmp
cmpsb
mov
cwtl
or
cli
aad
pop
xchg
xlat
mov
test
fiaddl
add
jns
jnp
stc
ret
push
lods
add
mov
cmp
loope
fists
incb
xor
mov
cltd
mov
mov
xchg
sub
and
mov
mov
dec
xor
sub
xchg
mov
arpl
out
mov
ja
jae
pop
cmpb
fwait
in
scas
jne
jo
aas
xorl
fwait
mov
pop
test
mov
cmp
outsl
xchg
cltd
test
fidivl
mov
sub
xor
mov
movsb
cmp
push
jns
pop
dec
mov
xlat
mov
scas
fwait
pop
mov
lcall
sub
fcmovbe
add
and
sbb
mov
cld
xor
loopne
push
cwtl
jb
test
lret
pop
mov
daa
and
mov
push
or
xor
outsb
test
pop
jns
cmpsl
out
mov
and
xorl
jmp
aaa
mov
imul
not
mov
sbb
add
stc
icebp
stos
add
sub
push
mov
mov
lret
xchg
xor
pop
dec
push
mov
cltd
pop
std
pop
mov
aaa
loope
stos
call
fistpll
test
sub
sbb
gs
mov
add
mov
and
movsl
out
int3
add
cltd
in
fistl
aad
hlt
lods
mov
out
cmpsl
pop
in
mov
iret
loopne
mov
jge
jg
pop
scas
inc
mov
or
mov
lea
jmp
fwait
mov
test
popf
movsl
push
cmpsb
arpl
or
sub
jecxz
sahf
icebp
ds
fwait
mov
xor
idivb
jbe
fldt
jecxz
adc
add
inc
mov
insl
mov
xor
iret
dec
push
xor
mov
nop
pop
push
hlt
movsl
adc
stos
insl
cmpsb
mov
enter
mov
cmp
jecxz
jl
ss
adc
roll
lcall
xor
lahf
scas
sbb
lahf
sahf
repz
js
shl
pop
mov
mov
push
call
mov
fwait
mov
jp
xor
sbb
cmp
hlt
xlat
mov
mov
and
xor
stos
xor
shlb
xor
repz
or
jp
pop
push
cltd
xor
sub
jne
jns
mov
sbb
mov
add
andb
sbb
mov
lock
aad
test
sub
xor
jne
xor
mov
mov
mov
jno
testl
mov
sub
addr16
jmp
ljmp
inc
call
scas
mov
mov
or
mov
rorl
jl
jecxz
fidivl
cmp
push
mov
jg
mov
jge
inc
sahf
mov
stos
xchg
fidivl
int3
sahf
outsb
fwait
mov
scas
es
mov
sbb
push
xlat
shll
cwtl
inc
mov
mov
into
cmp
mov
incb
movsb
aaa
push
xchg
and
add
das
into
mov
cmpsl
jns
divb
or
cltd
xor
pushf
sbb
fdivs
mov
pop
fdivl
dec
and
sbb
fsubrs
xor
inc
fadds
push
and
fsubrl
rcrb
xor
pop
and
sbb
xchg
mov
and
add
loop
adc
pop
sub
mov
cmpsb
mov
mov
add
jo
sub
pop
jb
mov
jge
test
lret
loopne
data16
pop
mov
in
lahf
push
mov
mov
dec
push
das
popa
mov
adc
ja
adc
jns
pop
xor
add
xchg
add
in
sub
cwtl
stos
mov
inc
and
cltd
mov
mov
outsb
popa
xchg
lods
ret
std
rcrl
mov
stc
push
mov
sub
fstpl
mov
and
icebp
fdivrl
cmpsl
mov
daa
lods
outsl
cmpsl
insl
pop
sbb
hlt
imul
mov
mov
add
push
xorl
fs
pop
lods
or
es
sti
daa
sbb
out
jae
push
mov
test
inc
xchg
pop
repz
testl
imul
jne
jns
mov
test
xor
leave
push
ficomps
mov
add
mov
inc
cmpsl
cmc
push
push
add
in
adc
pop
pop
pop
loop
shrb
mov
dec
mov
cmpsl
into
mov
movsb
aad
insl
pop
in
pop
add
pop
scas
jl
push
mov
xor
cmpsl
sub
sbb
sbb
jns
dec
in
adc
cmpsl
mov
outsb
rcrl
xchg
ljmp
out
mov
mov
jne
insb
imul
gs
les
cmp
and
mov
sti
mov
andl
lods
xorb
sbb
mov
pop
icebp
adc
jmp
jnp
mov
add
lds
lea
mov
cmpsl
sbb
sbb
fwait
movsl
test
je
mov
mov
sbb
mov
enter
mov
sub
cmp
sub
pop
cwtl
outsl
jb
fsubrl
ret
mov
fs
pop
inc
add
sub
pop
outsl
lea
mov
shl
mov
lret
rcrb
add
icebp
arpl
jl
imul
add
push
push
jae
stos
fmuls
test
ja
testb
data16
cmp
out
jbe
xlat
mov
shr
scas
jns
mov
mov
subl
lock
dec
ret
push
mov
aad
les
mov
lock
aas
xchg
repz
pop
test
int3
pop
jae
pop
test
in
and
adc
cmpsb
fsubrs
movzwl
sbb
cmpsb
add
inc
enter
aaa
movsl
mov
cld
mov
mov
xchg
or
sbb
rcrb
mov
dec
js
sub
test
jb
xchg
icebp
mov
out
cmp
insb
int3
aaa
mov
sbb
mov
xlat
xor
mov
mov
pop
push
in
hlt
jge
mov
mov
pop
int3
aas
fwait
mov
aas
push
add
pop
jns
jmp
daa
sub
mov
hlt
pushf
mov
test
icebp
sbb
in
mov
and
fdivrl
xchg
and
or
loop
and
push
cltd
mov
cmp
mov
int
lods
pop
and
mov
pop
lods
fcmovb
inc
std
xor
push
cld
jno
sti
sbb
pop
mov
fdivrs
mov
add
mov
cltd
shr
or
inc
push
fimull
jp
fnstsw
stos
adc
sbb
cltd
mov
push
pop
mov
push
and
decb
hlt
xchg
xor
enter
sub
fldcw
lahf
lods
daa
cmpsl
iret
push
fdivl
jp
adc
jg
mov
jl
lea
mov
xlat
cmp
test
dec
adc
add
cltd
xor
add
jmp
adc
add
push
push
cmp
inc
lret
xlat
iret
pop
and
mov
popa
cmpsb
ret
je
fwait
xor
ds
mov
fdivrs
lahf
jae
mov
std
xchg
adc
xor
fsubs
xlat
mov
pop
lcall
popa
arpl
ljmp
jg
sub
mov
sahf
or
mov
int
cmpsl
mov
mov
fiaddl
mov
iret
lds
adc
mov
arpl
fwait
cwtl
and
fcmovbe
mov
xlat
inc
leave
cltd
ds
push
stos
pop
pop
jge
jae
fsubl
scas
xor
mov
pop
jecxz
gs
arpl
es
rcr
rolb
mov
add
xchg
aad
test
dec
subl
ret
push
ret
cmp
sub
sbb
xlat
mov
pushl
sub
mov
into
mov
outsl
das
and
jns
arpl
mov
mov
fisubs
loope
mov
sub
out
adc
and
mov
cmp
adc
mov
addb
lret
testb
mov
and
test
loope
mov
and
test
cmp
inc
aaa
cwtl
adc
loope
jg
fsubl
mov
xchg
mov
pushl
mov
xor
cli
cwtl
hlt
aaa
xchg
insl
jnp
lods
mov
xlat
popa
dec
xchg
inc
test
outsl
sbb
adc
nop
testl
mov
and
adc
arpl
lods
or
fnsave
xchg
sbb
jp
hlt
mov
lahf
xor
aaa
add
adc
pop
xchg
mov
subl
mov
mov
mov
mov
movsl
pop
jnp
movsb
or
jmp
sarb
mov
fwait
inc
and
inc
inc
mov
pop
jle
cmpsl
sbb
cmp
dec
adc
or
test
xlat
inc
movsl
aad
jp
adc
xor
xlat
mov
adcl
sub
xor
mov
fidivrs
iret
loop
mov
and
leave
fs
mov
cli
cmp
fimull
jle
icebp
imul
mov
push
cltd
arpl
and
mov
sbb
out
xchg
dec
jp
xchg
rcr
jnp
and
scas
mov
mov
pop
cmp
call
or
push
jmp
mov
stos
or
fwait
mov
adc
cli
xor
mov
cmpl
add
hlt
jg
stos
test
push
cli
ljmp
outsb
push
xchg
test
ret
dec
inc
xlat
or
mov
xlat
and
mov
or
mov
cli
jmp
or
cmp
btl
out
xchg
mov
and
xlat
adc
mov
jb
mov
push
xchg
mov
mov
fstp
and
gs
sbb
jns
mov
push
xchg
xchg
mov
mov
and
sbb
incb
push
cmp
xor
push
fs
and
inc
subl
fstpl
shll
daa
in
iret
add
mov
imul
mov
lahf
lods
mov
cmp
mov
sub
jge
cmpsb
sbb
xchg
inc
cmp
iret
mov
sub
lcall
adc
mov
pop
shlb
or
stos
test
jnp
sub
mov
fnstsw
mov
fcoms
cltd
xchg
lods
mov
xchg
mov
rcll
jns
mov
sti
pop
jo
mov
adc
and
in
aad
pop
mov
xchg
testb
cltd
add
push
fcom
adc
cmpl
jbe
movsl
in
mov
cmp
aaa
pushf
mov
addr16
mov
mov
lock
mov
and
mulb
mov
sahf
mov
inc
xchg
daa
imul
mov
fcomps
rcll
pop
arpl
pcmpgtb
stos
icebp
jl
mov
xor
mov
jnp
sbb
sbb
and
mov
jns
pop
and
mov
add
and
ret
stc
sti
jge
fsubs
xchg
jbe
movzwl
leave
popa
adc
jnp
mov
aas
mov
sahf
sub
or
fs
sub
lahf
cltd
and
sub
mov
std
fwait
add
fnstcw
dec
push
mov
mov
cli
movsb
mov
mov
outsl
pop
xor
mov
cwtl
fsubrs
xlat
mov
fnstcw
ljmp
pop
cmp
mov
cmp
rcrb
das
shll
bound
stos
fdivl
adc
ret
pop
movsb
add
insb
ja
sti
mov
mov
std
mov
push
movsb
xor
scas
xchg
push
and
jmp
dec
arpl
in
loopne
mov
insb
jb
xor
pop
and
mov
aas
and
lods
mov
lahf
flds
mov
dec
das
movsl
push
add
popf
cwtl
jns
les
mov
jg
sub
inc
cltd
scas
ljmp
lds
xor
xorl
into
lock
mov
lea
inc
cmp
adc
testb
sbb
ljmp
xor
loope
test
ss
mov
imulb
xlat
push
dec
dec
add
mov
mov
adc
mov
sub
outsl
rcrl
push
mov
mov
push
push
jge
jmp
fistps
in
loopne
mov
push
mov
mov
pop
cli
fadd
scas
cmc
xor
mov
das
jp
ljmp
pop
arpl
fisttps
dec
add
add
cld
mov
cmpsl
mov
movsb
insl
fcoml
fisttps
mov
and
pop
push
stos
mov
adc
loope
inc
test
mov
pop
lea
dec
pop
adc
mov
pop
mov
fcompl
jno
adc
fnstenv
icebp
cwtl
cmpsb
imul
adc
mov
pop
ja
in
mov
or
sub
pop
shlb
inc
sub
mov
mov
xchg
pop
sbb
test
std
jnp
test
pop
cmpsb
cmp
test
fs
cmpsl
mov
cmp
adc
cmpsl
hlt
icebp
cwtl
insb
das
mov
xor
cs
pop
mov
add
inc
jl
or
cltd
std
and
xchg
pop
and
xchg
aas
mov
pusha
mov
mov
shll
test
mov
mov
icebp
mov
jle
clc
xor
xor
ret
int3
pop
mov
xchg
push
icebp
pusha
bound
mov
test
cmp
xchg
stos
gs
lcall
stos
jg
xchg
fwait
mov
sbb
cmp
pop
icebp
pop
mov
shrl
subb
inc
cli
mov
add
arpl
repz
jbe
jno
scas
popf
or
test
pop
stc
mov
inc
jnp
in
xchg
pop
dec
cmpsl
jecxz
xchg
fcom
outsb
push
mov
clc
add
cltd
stos
jne
push
xchg
dec
mov
mov
dec
sub
pop
test
dec
sbb
test
notb
stc
inc
jbe
dec
dec
int3
cwtl
jmp
scas
mov
or
shll
into
or
pusha
xchg
idivb
es
pushf
clc
aas
add
movsl
stos
stos
jp
jge
bound
popf
sub
shll
mov
rolb
pop
imul
mov
test
xchg
iret
das
add
mov
and
jge
cwtl
je
insl
sbb
test
fwait
jae
dec
mov
dec
iret
jns
cmp
lods
cmc
cmpsl
adc
aam
xchg
fbstp
sbb
cltd
stos
mov
mov
fwait
ror
mov
loope
rol
movsl
addr16
daa
sub
out
add
adc
jp
push
xor
cmp
mov
jae
sbb
mov
cld
adc
and
sub
xor
lahf
mov
mov
fstl
mov
icebp
sbb
adc
jle
jmp
subl
push
aad
fcompl
mov
insb
cmp
pop
ds
ljmp
test
imul
pop
gs
sbb
fwait
sbb
inc
inc
ss
cltd
mov
mov
add
aas
lcall
test
dec
sbb
data16
xchg
mov
xor
pop
mov
int
repz
movsl
adc
or
in
and
pop
dec
and
adc
fidivs
jno
jae
cwtl
stos
insl
inc
and
ret
xor
ficomps
cmpsl
and
rorl
add
mov
leave
jbe
hlt
pop
arpl
inc
enter
popf
and
cmpsl
test
mov
cli
dec
sbb
insl
push
into
jne
lcall
mov
lret
jno
je
sub
faddl
cmp
out
sbb
jnp
test
divb
mov
or
fwait
mov
ret
and
stos
sbb
cmpsb
pop
aad
stos
jg
inc
pop
cmp
cmpsl
add
mov
cli
out
sbb
mov
je
mov
cmp
pop
xor
dec
sbb
push
imulb
sub
pop
dec
icebp
mov
leave
ljmp
loop
mov
and
cmpsl
or
adc
daa
sub
jp
mov
xor
sub
sub
adc
jb
mov
mov
or
jmp
aam
decl
sub
add
push
inc
arpl
xor
mov
lea
mov
xchg
lret
inc
xchg
push
mov
sub
mov
xor
dec
idivb
pop
mov
adc
outsl
cmpsl
mov
mov
mov
sarb
enter
repnz
sub
dec
shlb
inc
mov
cmp
mov
mov
sub
aam
xchg
inc
jnp
and
mov
mov
jns
xor
lods
fcmovb
div
xchg
loopne
cs
xchg
ficomps
imul
pop
cmovge
mov
mov
inc
push
loope
ja
cltd
stc
punpckhbw
adc
mov
test
sub
dec
lcall
adc
insb
add
pop
fisubrs
fisttpll
das
jnp
aam
or
jno
or
pop
mov
mov
xchg
and
xlat
out
jnp
or
in
rcrb
daa
dec
mov
push
sbb
scas
cmp
adc
inc
sbb
mov
mov
mov
xor
push
cwtl
cli
push
mov
jl
sbb
scas
inc
mov
movsb
in
xor
jae
cwtl
xlat
mov
fmulp
test
mov
or
adc
scas
mov
adc
clc
pushf
mov
jnp
jmp
pop
jg
jae
adc
popa
mov
inc
and
std
scas
add
insl
mov
test
mov
popf
iret
or
ja
cmp
xor
lahf
mov
inc
and
fs
bound
xchg
lods
loopne
movsl
mov
leave
aad
arpl
mov
popa
ljmp
mov
mov
mov
in
add
mov
mov
inc
popa
mov
rolb
pop
sbb
mov
sbb
rorl
loopne
notb
fwait
cmovae
nop
cli
inc
pop
mov
movsb
inc
xlat
cwtl
mov
dec
shrb
xorb
shll
jbe
sbb
mov
btr
cli
xor
or
push
test
push
mov
mov
xchg
pop
mov
scas
movsb
mov
dec
pop
icebp
mov
inc
add
jmp
test
mov
fsubrs
aaa
mov
sub
cmpsl
shl
inc
jns
cltd
lods
enter
rcrl
in
inc
and
fstps
xor
mov
jg
mov
inc
pushf
sbb
insl
mov
push
inc
xchg
mov
jp
lds
xchg
ss
fnstenv
hlt
mov
ret
xlat
addr16
cmp
mov
fdivrl
dec
fs
and
inc
inc
cmpsl
mov
xor
mov
fisubs
adc
mov
push
movsl
inc
dec
addr16
fidivl
sbb
cmpsl
fstp
cmpsl
mov
shll
push
dec
stc
add
pop
xor
in
cltd
or
xchg
fsubrl
inc
xlat
inc
push
jg
and
icebp
mov
popa
ficoms
jo
mov
mov
push
cwtl
addl
dec
test
sbb
xchg
stos
mov
sbb
mov
arpl
jnp
icebp
mov
xor
into
cmpsl
bound
mov
stos
fstpt
cmp
movsb
rorl
cmpsl
lret
ss
add
insl
mov
fldt
mov
pop
sub
jmp
repz
mov
adcb
in
cmp
pusha
push
jp
mov
dec
popa
loopne
and
lods
ljmp
cmpsl
imulb
mov
int
cltd
sbb
test
stos
repnz
xor
lahf
inc
mov
and
ret
rcll
mov
xchg
sub
xchg
movsl
mov
lods
add
nop
sbb
inc
cmpsl
mov
mov
push
mov
pop
aas
loope
mov
lret
fidivl
lahf
mov
xchg
jns
sbb
add
lods
insl
push
int
fidivs
stc
out
fiaddl
jp
jnp
xchg
aam
sbb
pop
mov
or
stos
xor
xor
mov
fdivs
xorb
aas
lcall
jbe
mov
mov
mov
stos
cmp
mov
repnz
mov
push
cli
into
stos
scas
sub
aam
fwait
fs
ret
mov
adc
aaa
aaa
xor
arpl
jecxz
sar
cmpsl
into
addr16
mov
jge
sub
popf
scas
cmpsb
stos
ss
mov
sahf
push
jnp
fld
aaa
jl
ret
lock
pop
jne
loope
mov
cmp
clc
lods
mov
xor
inc
mov
imull
mov
mov
mov
and
stos
push
mov
or
lret
test
std
push
xlat
mov
xlat
loop
add
push
fucom
scas
aam
sbb
lahf
les
dec
fisubs
lret
add
mov
inc
fwait
push
inc
in
sub
mov
out
mov
scas
inc
ficomps
out
cmpsl
mov
dec
and
xchg
mov
test
mov
jns
add
adc
mov
cmc
xchg
cmp
popa
xor
cltd
fwait
mov
cwtl
dec
insb
adc
mov
dec
mov
mov
inc
xchg
push
mov
rol
jne
pop
cmp
sbb
dec
test
cmp
inc
mov
jae
add
andb
imul
cmpsb
or
das
cmp
jns
push
bound
aas
and
add
xor
testb
mov
push
xchg
stos
call
daa
dec
loop
xchg
adc
loope
mov
cmpsb
adc
jns
lock
adc
daa
out
cltd
lret
pop
xlat
out
sub
scas
sbb
mov
lret
in
mov
mov
out
mov
test
push
xchg
scas
enter
pop
iret
mov
scas
cmpsl
test
lcall
mov
addr16
mov
cli
add
mov
jbe,pt
mov
pushf
fidivl
jns
dec
pop
jbe
imul
loopne
pop
jge
cwtl
mov
fcomps
xchg
mov
test
and
movsl
sbb
cmp
and
adc
push
fwait
add
jl
icebp
cs
pop
ficompl
fwait
mov
push
xor
add
test
iret
dec
inc
jge
test
data16
push
xor
addl
imul
shlb
sbb
jecxz
mov
cmp
cwtl
push
cmpsl
movsl
outsb
test
dec
xor
fidivl
in
xlat
pop
rep
and
mov
cs
fcoms
pop
mull
cmpsb
outsl
inc
xlat
sbb
je
mov
pop
shll
addr16
insb
mov
leave
fdivl
mov
xchg
xor
mov
jmp
rorb
shrd
mov
sub
scas
push
jmp
in
mov
jnp
test
sbb
arpl
xchg
add
icebp
mov
inc
negl
cli
lahf
pop
mov
dec
mov
mov
repz
rcll
lds
ss
aam
mov
sbb
pop
mov
cltd
xor
dec
sub
and
xchg
pushl
and
sbb
iret
neg
pop
scas
pop
cmp
dec
in
sbb
xchg
pop
into
call
xchg
fwait
lret
and
xor
fwait
jne
and
cltd
xchg
sahf
mov
jae
gs
or
mov
repnz
test
bound
cmp
cld
jp
andb
aaa
fiaddl
push
mov
fidivs
mov
cmp
mov
lahf
cmc
pop
jg
and
inc
dec
xchg
sub
mov
and
arpl
or
xchg
cwtl
stos
inc
in
mov
cltd
mov
xor
dec
repz
loope
sub
sysret
inc
adc
xchg
lret
icebp
cli
xchg
pop
or
movsb
xchg
mov
sub
ret
cmpsl
jae
andl
or
test
pushf
xorl
xchg
mov
xor
jae
lret
mov
rolb
mov
movb
xor
fsubr
or
test
xlat
push
jnp
repz
pushf
les
sbb
arpl
dec
scas
shll
mov
adc
mov
movsl
ret
cs
or
popf
lret
in
mov
pusha
mov
jl
enter
add
mull
repz
xor
into
mov
xor
sub
add
xlat
xchg
mov
xchg
fadds
popa
lods
or
add
int3
popa
lods
stos
xlat
mov
rolb
push
mov
rorb
lea
or
jbe
mov
and
push
mov
inc
aas
scas
test
mov
and
movsb
or
into
daa
test
movsl
mov
adc
mov
data16
xchg
cmp
clc
lret
or
adc
sbb
repz
add
sbb
fdivl
xor
lcall
stc
pop
dec
fbld
push
xchg
mov
jbe
mov
popa
mov
push
and
cmp
fcmovnb
adc
mov
adcl
jne
fucom
mov
xor
repnz
mov
fdivrl
aaa
push
orl
push
xlat
arpl
add
jb
lahf
scas
out
aas
hlt
jl
dec
xchg
jns
sbbl
fists
testb
gs
repz
dec
pop
mov
add
pop
arpl
pop
add
sbb
pop
and
scas
mov
divb
adc
dec
mov
push
sub
cmpsl
cmp
roll
mov
xchg
xor
mov
mov
mov
icebp
sbb
stos
adc
lcall
mov
sub
sub
stc
dec
inc
pushf
mov
xchg
ds
test
xchg
adc
test
mov
scas
stos
push
mov
mov
cmp
fdivl
dec
adc
xlat
leave
cmpsb
in
add
les
divb
cmpsl
push
push
xchg
mov
add
rorl
and
icebp
sub
nop
mov
fsts
mov
cmp
mov
and
rcrl
adc
mov
icebp
addl
and
push
pop
jb
mov
xor
xchg
mov
xorl
cmp
or
inc
mov
adc
adc
mov
aaa
inc
iret
mov
mov
mov
mov
mov
aad
push
jne
sbb
mov
lret
and
jnp
or
arpl
mov
mov
lods
sahf
mov
push
sub
sub
test
mov
pop
xchg
mov
add
sub
arpl
or
jge
scas
fwait
mov
cmp
pop
pop
iret
test
adc
loope
mov
imul
jae
ss
xlat
ret
xchg
test
aas
dec
mov
mov
mov
mov
fbld
imul
add
daa
mov
out
lods
mov
lods
stc
mov
jne
mov
push
pop
adc
xchg
xchg
hlt
mov
mull
fmuls
pop
icebp
fs
sub
mov
ds
sarl
xchg
adc
push
push
jl
sbb
mov
out
mov
mov
imul
fisubrs
je
mov
lret
xorl
pop
mov
jb
leave
scas
jnp
cmpsb
cmpsl
fs
mov
mov
sbb
and
xor
je
scas
adc
mov
fwait
stos
aaa
xor
test
jae
adc
inc
fwait
and
mov
leave
je
pop
dec
lods
movsb
xor
and
push
in
fisubrl
fwait
xchg
mov
cmpsb
lds
popa
xor
mov
mov
push
aaa
iret
mov
movsl
pop
jns
fiaddl
mov
hlt
aas
sbb
pop
jmp
cwtl
cmp
sbb
sbb
ja
fmull
and
mov
mov
cmp
mov
dec
jae
sub
mov
fimuls
fdivrs
lea
mov
adc
cs
mov
jg
xlat
sbb
pop
or
es
xor
xchg
mov
in
xchg
dec
cmp
xor
sahf
bnd
mov
je
shlb
xchg
sbb
mov
xchg
nop
push
scas
nop
shll
sbb
mov
enter
ret
push
push
lds
mov
lcall
arpl
adc
mov
das
int
xor
out
data16
cmc
jl
add
push
jmp
add
xlat
push
jge
mov
shlb
jns
rcll
pop
mov
cmp
movsl
repnz
mov
lcall
dec
test
sahf
cwtl
mov
cmpsl
and
mov
mov
mov
mov
mov
scas
jo
movsb
and
je
jge
rolb
in
ja
test
jnp
mov
sub
aaa
jne
cmp
test
inc
mov
cwtl
es
repz
push
jne
mov
rolb
pop
mov
movsb
je
adc
mov
sahf
sti
inc
mov
jns
jg
pop
in
pop
lods
jnp
xor
dec
movsb
iret
or
mov
fsubrl
push
mov
movsl
xor
fstl
sbb
cltd
lcall
scas
mov
cmp
or
stos
pop
jge
mov
jnp
sti
and
rclb
mov
out
cmpsl
mov
lods
arpl
test
test
scas
mov
test
popf
mov
in
add
ret
mov
pop
mov
clc
fsubrs
xlat
test
cs
ret
shll
pop
pop
xlat
enter
ret
xor
repnz
adc
test
mov
out
sbb
push
mov
xorb
add
dec
lods
mov
cwtl
test
xlat
daa
and
mov
hlt
mov
push
add
sbb
cmp
adc
mov
rcr
mov
mov
popf
mov
jo
adc
and
movsb
mov
pop
mov
dec
mov
sub
and
and
dec
push
cmpsb
push
imul
mov
inc
rol
xor
mov
sahf
mov
xor
test
push
add
adc
ljmp
jnp
xor
sbb
mov
cs
add
xchg
push
repz
dec
pop
pushf
scas
adc
pop
gs
push
mov
pop
mov
mov
inc
mov
push
xchg
daa
mov
lahf
into
mov
inc
mov
jle
lcall
mov
cli
int
mov
inc
repnz
fwait
pop
icebp
mov
cs
sub
xchg
dec
imulb
mov
lds
jmp
mov
mov
mov
cwtl
sbb
negb
mov
aaa
test
xor
xor
lcall
mov
inc
test
mov
loop
sub
mov
loopne
xlat
cli
inc
mov
mov
fcmove
xlat
call
fnstsw
fstps
lods
repnz
pminub
inc
lahf
sub
mov
xorb
push
sub
pop
sub
lret
push
mov
push
cld
test
loop
dec
fbld
pushf
les
mov
mov
adc
ret
mov
cmpb
imul
cmpl
in
push
and
mov
sub
cmp
mov
mov
sbb
mov
jle
dec
rorb
or
jmp
mov
sub
mov
xor
mov
and
incl
stos
mov
out
clc
mov
mov
insb
ret
mov
fdivl
or
fwait
aaa
and
mov
repz
sbb
mov
and
arpl
fidivrs
sbb
shlb
mov
jg
xor
mov
repz
gs
rol
cmp
mov
mov
scas
lock
cltd
push
lahf
dec
cmp
xorb
lea
sbbl
dec
mov
fdivrs
movsl
sbb
mov
popa
mov
mov
lods
lock
push
movsb
add
and
mov
adc
shlb
call
jo
test
lret
mov
add
mov
out
and
xorb
jne
mov
pop
add
popa
cmp
imul
mov
push
aad
dec
add
imul
cli
mov
pop
dec
jae
mov
aad
outsb
lods
fdiv
cwtl
mov
push
mov
mov
gs
addl
mov
xchg
shr
pop
imul
jg
mov
imulb
imull
adc
mov
aas
sub
dec
mov
xor
addr16
mov
xlat
lcall
or
test
or
bound
cmp
mov
xchg
or
inc
mov
icebp
dec
lea
jle
test
mov
cmp
dec
mov
inc
xor
arpl
cltd
add
push
repz
fucomp
enter
push
cmp
out
fwait
jns
pop
cld
mov
xlat
aas
les
inc
push
test
xor
cwtl
pop
hlt
popl
mov
cltd
icebp
lods
pop
or
scas
addl
lret
int
push
stos
mov
mov
stos
push
mov
popf
loop
jnp
stos
cmp
repz
pop
sbb
sub
fnstenv
ja
lods
fbld
scas
cmp
jmp
xchg
xor
push
mov
inc
fcmovbe
popl
mov
and
mov
je
or
or
cmc
push
sbb
out
hlt
mov
mov
imul
dec
mov
sbb
xlat
mov
ret
popa
xchg
leave
aaa
xor
dec
icebp
pop
dec
mov
xor
pop
das
add
jnp
mov
push
push
add
xor
out
daa
mov
es
push
inc
xor
fisubs
add
ss
dec
pop
pop
loope
scas
sbb
stos
test
jp
xchg
inc
pmulhuw
push
xlat
or
and
cwtl
mov
mov
xlat
jbe
xcrypt-cfb
cmpsl
mov
mov
mov
inc
push
mov
into
mov
mov
and
hlt
fwait
cmc
pop
les
mov
add
test
xor
jmp
inc
jb
fwait
and
arpl
shlb
xor
cld
btc
sbb
subl
test
daa
jno
or
cwtl
out
scas
cli
push
imul
stos
inc
pushf
aam
idivb
fisubs
jecxz
stos
fld
das
addr16
iret
cmpsl
or
xorl
mov
mov
aad
mov
ficoml
popf
mov
sbb
fstpl
and
adc
mov
popa
mov
idivl
test
pop
add
int
pop
mov
push
mov
add
sbb
cmpsl
adc
xor
into
cmp
xchg
popa
mov
bound
jno
fidivrs
int3
cltd
pop
adc
dec
roll
xchg
fwait
test
xchg
or
es
mov
mul
inc
lahf
sub
stc
sbb
sub
mov
test
mov
iret
aad
mov
out
xorl
mov
cmp
cmc
fs
mov
sub
addr16
fdivrl
shll
int
aad
lcall
mov
pop
popf
fwait
xor
pop
lret
pushf
movzwl
inc
inc
je
je
cmpsb
pop
test
fwait
jle
ja
daa
mov
and
jbe
lahf
pop
xlat
or
mov
push
test
test
or
mov
fstpt
mov
mov
or
and
aam
in
mov
int
jmp
pop
adc
xor
ret
cwtl
sbb
xchg
cmc
push
scas
cltd
outsb
bswap
lahf
clc
aam
and
mov
fwait
fwait
push
xchg
jae
push
cmp
aad
xor
popa
inc
es
scas
xchg
lret
mov
mov
inc
add
icebp
aas
jl
les
rcll
fcomps
jecxz
cmpsl
test
jb
je
dec
test
and
cmpsl
xchg
sub
mov
stc
mov
mov
sub
repnz
test
xchg
or
jmp
mov
outsb
xor
loopne
cmpsl
xchg
pop
cltd
lahf
xlat
scas
adc
ror
test
enter
jmp
repz
sti
in
mov
cmpsl
addl
adc
jl
mov
repz
mov
jl
aas
fnsave
or
push
inc
xlat
pushf
jns
lcall
mov
enter
lret
shll
dec
push
inc
xchg
xchg
or
jbe
cmc
fcmovb
pop
pop
push
pop
mov
and
popa
test
fnstenv
mov
xlat
jle
jnp
cmp
jmp
sbb
pop
cmpsl
xor
mov
mov
fdivs
or
mov
sbb
mov
mov
mov
mov
mov
sti
ja
mov
inc
lea
test
lods
gs
xor
push
cmp
std
cmpb
pop
dec
push
and
pop
sbb
cmpsl
mov
adc
shll
cwtl
add
je
jno
insb
xor
lret
add
lcall
pop
stc
mov
stos
ret
xchg
cltd
pop
int3
inc
xchg
stos
popf
sbb
mov
mov
dec
aad
mov
dec
out
cwtl
jae
mov
dec
hlt
andl
mov
mov
sub
or
out
pop
xor
in
mov
adcb
sbb
das
dec
mov
inc
mov
rcr
lea
mov
jp
sbb
and
mov
cmc
inc
int
xor
fstps
mov
orl
cmp
mov
out
jno
sbb
stos
mov
stos
rclb
pusha
pop
lret
fimuls
test
addr16
cmp
imul
push
mov
loope
push
jne
mov
jmp
dec
mov
mov
rolb
in
mov
mov
je
jno
imulb
mov
mov
out
sub
adc
mov
fwait
dec
mov
pop
mov
scas
push
pop
shl
jmp
mov
mov
jp
xlat
and
xor
gs
stos
xlat
cmp
imul
cmp
daa
cwtl
and
mov
movsl
test
loopne
fldt
mov
xchg
dec
fwait
xchg
icebp
or
fidivs
or
and
mov
push
mov
mov
repz
cmp
dec
dec
fwait
lss
cwtl
jp
rcrb
jl
daa
fidivl
or
test
data16
cmpsl
mov
sbb
mov
shlb
and
test
add
enter
jmp
push
pop
mov
mov
mov
mov
mov
cmp
mov
xchg
rcrl
push
stc
fnsave
xor
push
xlat
imul
xor
fdivl
cmc
add
add
cld
subb
inc
mov
mov
cwtl
dec
adc
stos
test
mov
xor
push
cmpsl
push
sbb
inc
add
lret
dec
xor
jl
js
mov
cmp
sbb
push
lahf
cwtl
enter
mov
ljmp
out
inc
adc
xor
cmpl
aas
jnp
movsb
push
scas
mov
sbb
aam
xorl
mov
sbb
cwtl
jne
xchg
rcrb
mov
sub
xchg
fdivl
jecxz
mov
lods
imul
fstps
pop
adc
hlt
ja
adc
subl
mulb
inc
mov
out
xchg
adc
loop
push
mov
jne
mov
or
lahf
mov
stos
mov
repnz
mov
cmpsb
jnp
ficoms
mov
inc
mov
gs
es
icebp
sub
mov
adc
adc
ret
setae
mov
mov
cld
loope
add
sbb
arpl
push
imul
xchg
inc
mov
mov
call
cmpsl
arpl
sbbl
mov
jle
mov
add
aam
iret
fimull
pop
xchg
xchg
xchg
mov
dec
scas
xchg
pop
push
mov
popf
sbb
mov
mov
mov
push
mov
mov
mov
mov
jnp
mov
pop
scas
xchg
pusha
add
pop
cmpsl
mov
sub
push
fwait
idivl
scas
clc
adc
mov
cli
outsb
scas
xchg
jg
cmpsl
ret
mov
and
add
imul
mov
adc
sbb
inc
pop
test
into
clc
sbb
inc
rolb
jns
mull
and
test
mov
xlat
mov
xchg
xor
xor
mov
sub
xorl
int
pop
daa
mov
fisubl
aam
or
arpl
inc
in
bound
and
pop
dec
mov
outsl
in
xchg
scas
mov
fwait
stos
jns
scas
fdivl
test
test
test
cmp
pop
mov
mov
sbb
leave
subl
dec
es
mov
xchg
push
fnstenv
aad
xlat
jle
mov
sub
movsb
mov
iret
mov
bnd
ja
mov
scas
inc
or
das
aam
adc
cltd
out
fscale
scas
lea
pop
adc
xacquire
test
es
and
mov
dec
cwtl
mov
movsl
frstor
nop
cmp
int
adc
pop
divl
mov
and
sbb
iret
mov
xchg
cld
pop
jecxz
repz
lahf
mov
mov
mov
sbb
negl
jmp
gs
mov
outsl
mov
pop
xchg
jecxz
aaa
pop
cwtl
mov
ja
xchg
lcall
inc
pop
or
mov
hlt
xchg
sbb
push
mov
cltd
or
pop
cmpsl
cltd
jmp
cmp
and
or
clc
mov
mov
repz
data16
enter
jne
icebp
in
mov
xlat
lret
push
mov
push
add
inc
xor
push
sbb
push
fs
test
outsb
imul
adc
jae
scas
mov
mov
or
sub
xchg
mov
xchg
ds
and
out
cmpsl
arpl
clc
cmp
mov
jae
addl
gs
inc
xchg
scas
std
int
mov
add
push
cs
dec
xlat
stos
mov
jo
xor
fadd
cltd
inc
scas
or
mov
aas
mov
hlt
jge
ret
push
pop
fdivs
xchg
stos
adc
ja
sarl
outsl
int3
mov
pop
stos
cltd
jne
sbb
push
or
imul
loop
jge
out
mov
test
pop
mov
mov
mov
lret
movsb
mov
in
aam
mov
mov
sub
stc
xor
pop
out
xchg
iret
sbb
mov
sbb
inc
rcr
lret
mov
mov
pop
test
xchg
mov
fwait
pushf
fadds
xchg
iret
adc
push
mov
cmc
xor
xchg
ja
cli
xor
scas
faddp
inc
sbb
repnz
mov
mov
add
sub
aad
cmp
jp
lret
mov
mov
pop
movzwl
loop
icebp
sbb
lahf
imul
cli
or
daa
mov
into
mov
jl
or
loopne
roll
mov
out
roll
fists
xchg
scas
and
sub
jge
jmp
jl
out
in
sub
jns
mov
mov
int3
into
dec
add
lahf
notl
scas
cmpsl
push
sub
cmp
pop
push
or
int3
in
rcrl
fstpl
mov
call
mov
stc
fcoms
sbb
mov
int
jecxz
outsb
mov
int3
stos
mov
mov
mov
xor
sbb
iret
xor
xchg
xlat
ja
push
rorl
xchg
sub
xchg
jp
sbb
arpl
add
scas
mov
xor
pop
xor
pop
mov
test
repz
stc
test
mov
leave
adc
sub
dec
dec
inc
push
cmp
je
mov
sub
orl
inc
cld
imull
ret
push
scas
mov
mov
sbb
scas
mov
sbb
cli
adc
mov
mov
dec
hlt
iret
insl
add
add
aaa
lahf
mov
stos
fcomps
scas
in
jge
dec
mov
push
shll
sbb
add
test
imul
inc
mov
xor
shlb
xlat
pop
jge
imul
xlat
and
test
lcall
dec
and
les
xchg
fucomi
mov
add
dec
or
lret
cmp
test
push
mov
or
pop
mov
pop
in
jl
divl
ficompl
hlt
push
mov
mov
sbb
gs
jmp
icebp
and
mov
mov
ret
mov
and
pushf
aas
ja
mov
sbb
add
dec
movsb
mov
jns
jb
jl
pop
pop
cmp
test
dec
xchg
movsl
push
and
leave
mov
jp
mov
mov
ds
xor
add
add
and
btr
and
mov
mov
cltd
test
xchg
mov
repz
fcom
cmp
gs
daa
stos
inc
data16
mov
mov
adc
xchg
sbb
lret
scas
sbb
xlat
and
mov
push
mov
mov
test
xor
sub
pop
loope
lods
jl
cmp
mov
outsl
test
imul
cmp
sbb
mov
xchg
mov
mov
xchg
jno
lods
and
dec
mov
cs
jl
mov
xchg
stos
cmpsl
inc
int3
cmpsb
sbb
sbb
aad
mov
and
fucom
into
xor
jns
adc
mov
aaa
mov
in
or
mov
out
lret
jnp
repz
test
clc
and
pop
adc
adc
iret
lahf
mov
dec
or
jl
pop
xchg
xlat
mov
mov
in
dec
mov
inc
push
pop
jae
xlat
pusha
rcrl
jo
mov
and
pop
imulb
fisubrl
xor
ret
inc
cmpsb
mov
ds
inc
pop
popf
fiaddl
dec
mov
lret
xchg
movsl
lods
push
imul
movsb
mov
mov
cwtl
enter
xchg
cmc
push
inc
iret
fists
jno
dec
cmp
mov
mov
ljmp
add
sbb
mov
xor
mov
test
add
sbb
or
repnz
cli
mov
sub
mov
mov
mov
push
scas
xchg
inc
int3
test
imul
mov
adc
push
mov
xchg
xlat
jl
addr16
sbb
lds
xor
and
mov
ret
push
daa
mov
movsb
xor
lahf
lods
dec
mov
adc
inc
addr16
mov
repnz
icebp
push
pop
and
push
fwait
jg
inc
pop
jb
add
cmpb
ds
xchg
in
popl
aas
pop
jecxz
movsl
mov
xchg
sub
inc
shlb
xor
mov
fimull
repnz
mov
ss
test
mov
cltd
pop
cmp
cmpsl
pushf
pop
xchg
mov
xlat
jmp
aas
into
mov
cmp
add
sarb
adc
loope
fwait
ds
inc
jp
pop
sub
dec
sub
lahf
dec
aas
jns
mov
push
repnz
fwait
mov
mov
aas
xchg
and
cltd
packuswb
scas
ficomps
sub
xor
xchg
push
clc
and
jne
jp
daa
push
int3
aaa
inc
mov
subb
lret
call
into
test
mov
test
push
mov
stos
cltd
or
xchg
mov
lcall
stos
fbstp
mov
js
fstps
repnz
test
cltd
jns
imul
mov
jns
stos
or
jae
cltd
jle
xor
sbb
sub
push
lahf
cltd
stc
lods
adc
mov
mov
test
shr
push
mov
cltd
call
cmp
cwtl
jno
in
mov
sub
xor
sbb
imul
cwtl
sub
mov
push
in
popf
jno
lds
test
mov
stos
adc
dec
jp
mov
xlat
and
shll
xchg
rol
pop
aaa
xchg
gs
fimuls
fwait
shl
xorl
xor
repz
mov
fwait
rorl
jns
iret
pop
fists
or
mov
in
je
mov
pusha
repnz
icebp
xlat
pushf
movsl
and
mov
add
arpl
iret
movsl
jg
xor
cmp
cmp
daa
stos
xor
jg
mov
test
push
mov
outsb
rol
mov
out
mov
packssdw
mov
mov
jle
xchg
pushf
mov
xchg
into
add
test
mov
dec
out
mov
mov
andl
aas
xor
push
shll
ret
mov
or
sbb
fbld
xlat
xor
mov
sub
arpl
mov
iret
jl
mov
xchg
mov
mov
in
movsb
popf
jge
mov
adc
jp
xchg
cmp
jmp
lods
dec
test
pop
aaa
stc
mov
sub
adc
add
mov
jae
movsb
pop
inc
fidivl
cwtl
jle
cli
inc
shrl
mov
fimull
daa
movsl
jne
cwtl
and
sbb
test
cwtl
dec
fs
add
xlat
mov
push
mov
pop
movsb
shrb
jns
mov
mov
insb
and
adc
pop
pop
push
addr16
xchg
repnz
mov
mov
mov
fisubl
xor
sub
test
xlat
mov
fcmovbe
lods
sarl
popf
mov
cmpsl
scas
int3
fsubr
mov
mov
jae
xchg
dec
dec
pop
xlat
loopne
add
movsl
sbb
pop
into
lock
mov
dec
jecxz
and
jl
mov
mov
lds
mov
daa
sub
xor
int
je
mov
push
sbb
cmpsb
push
mov
add
movsb
dec
mov
and
adc
mov
mov
xor
adc
adc
mov
fstps
sbb
pop
mov
mov
xor
mov
fsubl
add
jb
mov
adc
test
pop
mov
sub
rorb
sbb
cwtl
mov
bound
jle
dec
mov
mov
adc
pop
int3
aas
stc
mov
adc
iret
movzwl
mov
pusha
sub
cmp
movsl
cmp
push
dec
mov
xchg
out
lock
push
mov
repz
fmuls
inc
lcall
fiadds
jl
iret
pop
test
pop
test
sbb
dec
sbb
jno
pop
sbb
nop
addr16
fimull
mov
xchg
loopne
lds
mov
xor
cmp
or
nop
lahf
mov
and
mov
in
dec
or
fdivs
filds
mov
mov
jo
push
fs
stc
mov
test
sub
repz
adc
fdivl
scas
es
testl
xor
fidivl
lea
fwait
pushf
jle
add
push
mov
gs
fmull
out
dec
cmp
out
fdivs
jmp
pop
mov
inc
test
sub
jno
dec
shrl
pop
xlat
pusha
lods
dec
jecxz,pn
jl
xor
mov
lret
test
clc
cmp
and
mov
fmulp
icebp
or
or
jns
mov
mov
xchg
jo
mov
pop
mov
push
out
or
jae
sti
xor
sahf
sbb
test
sub
es
inc
filds
loopne
jne
and
jl
iret
dec
pop
outsl
scas
inc
pop
cltd
icebp
in
jp
adc
cltd
xor
test
mov
scas
and
cmp
imul
xchg
xor
pop
fbstp
mov
insl
mov
mov
dec
jo
xor
decl
push
mov
and
jg
jno
jae,pn
mov
rorl
dec
cmp
mov
add
ret
push
into
fwait
jno
adc
xchg
movsb
mov
fadds
mov
in
test
pop
mov
icebp
fwait
sbbb
fldcw
pushf
adc
mov
movsb
mov
dec
mov
inc
test
sbb
jg
stc
js
lahf
pop
inc
cmpsb
jle
testb
sbb
cld
int
mov
push
adc
fs
cltd
gs
clc
mov
mov
pop
aam
push
xchg
mov
lret
jge
mov
loop
mov
push
jecxz
mov
andl
sbb
repnz
push
inc
mov
pushf
test
ljmp
sbb
mov
and
inc
rclb
ds
and
xchg
aaa
mov
mov
dec
fbld
inc
pusha
mov
cmpsb
fldcw
mov
test
jmp
jbe
mov
xlat
mov
pop
mov
add
lea
mov
add
in
loope
inc
mov
shlb
jno
xor
mov
pop
sbb
stc
adc
pop
aad
xlat
sub
fisubl
xchg
mov
jnp
inc
icebp
cltd
nop
mov
movsl
mov
xchg
xchg
cmpsl
stos
mov
and
inc
pop
es
test
mov
mov
lods
pushf
or
mov
js
and
imul
xchg
adcl
push
fwait
pop
or
lods
pop
add
cs
ljmp
xchg
push
mov
ret
lea
icebp
and
into
xchg
jnp
shll
xchg
cwtl
fdivrl
cwtl
mov
mov
ret
xlat
ljmp
mov
add
cmp
neg
int3
rcll
add
sarl
mov
popa
mov
mov
stos
mov
jns
mov
cmc
mov
mov
ror
or
mov
jnp
add
cmpsl
stos
adc
fxch
jns
cli
push
adc
sub
out
mov
js
inc
inc
daa
mov
movsl
push
pop
call
hlt
addr16
stos
dec
shl
mov
sahf
cmpsb
xor
mov
push
sbb
std
add
int3
pop
push
jmp
xchg
jo
adc
mov
repz
xchg
mov
xor
leave
daa
jno
mov
sub
xchg
popf
mov
or
mov
dec
sbb
aaa
bound
insb
rcll
jnp
xor
ljmp
aad
add
mov
pop
pop
enter
in
xchg
pop
jg
test
sub
cmp
movl
jmp
sub
fnstenv
mov
jg
inc
mov
rcrl
pop
cs
cmpsb
lock
jle
mov
sbb
je
mov
adc
sub
and
mov
fidivl
mov
xlat
add
das
and
mov
outsb
cmp
mov
fstl
sub
cmc
mov
scas
das
mov
mov
mov
fiaddl
push
jbe
xor
js
dec
in
pop
addl
jmp
mov
icebp
filds
mov
repnz
cmpl
fidivl
into
mov
cmp
mov
cmp
jl
mov
repnz
xchg
pop
negb
or
jnp
xchg
xchg
iret
mov
mov
lods
mov
stc
inc
pop
shll
outsl
mov
outsb
stc
mov
cld
pop
int
imul
cmpsb
mov
mov
push
andl
imul
pop
test
rcll
dec
scas
push
jbe
xor
pop
mov
jp
aas
aad
mov
xchg
addr16
add
enter
orl
mov
mov
mov
inc
lods
emms
mov
pop
orl
sbb
jne
int3
test
mov
adc
sti
and
xor
cli
ret
jb
int3
mov
pop
push
xchg
mov
cwtl
xchg
ret
das
out
xchg
paddd
ja
xlat
pop
andb
lods
ljmp
cmpsl
cmp
fsubs
adc
in
sub
xchg
in
popf
xorb
std
mov
adc
sub
ja
js
and
ret
and
jne
test
shlb
or
mov
popa
lea
test
fidivl
fs
cmc
fdivrs
add
fadd
xchg
sbb
les
sub
xor
jae
stos
std
and
fdivl
rcrl
fdivs
cmp
lret
outsb
lret
mov
fnsave
fadds
lahf
mov
mov
mov
lds
mov
lcallw
adc
jne
and
addr16
cmpl
dec
pop
jae
or
mov
dec
push
jge
loope
xor
insl
pushf
js
dec
sub
shll
cmpsl
fsubs
movsl
mov
mov
sbb
cltd
jbe
mov
icebp
adc
adc
stos
jle
or
into
je
pop
sbb
mov
gs
test
dec
sbb
cltd
mov
pop
jns
gs
scas
aad
push
and
mov
push
xchg
data16
and
xor
mov
sbb
sti
inc
xchg
xchg
mov
test
mov
or
push
nop
adc
push
xor
adc
dec
push
add
js
mov
repnz
and
cmc
lcall
mov
aad
loopne
add
fdivl
mov
add
and
lods
mov
jno
adc
int
stc
dec
push
es
cmpsl
orb
add
iret
adc
xor
data16
mov
sahf
push
inc
mov
in
mov
sbb
mov
cmpsl
jp
inc
icebp
mov
mov
cld
test
imul
inc
jmp
push
ret
mov
xchg
dec
ds
fisubrs
jg
out
mov
xlat
das
dec
xchg
inc
repnz
mov
rep
and
lds
jno
clc
mov
xchg
add
test
xor
mov
push
add
add
fnsave
cs
jnp
cltd
adc
test
lods
push
mov
or
divl
push
sbb
mov
leave
daa
jnp
inc
and
inc
adc
nop
sbb
jo
adc
mov
movsb
xor
push
adc
test
mov
dec
mov
sti
pminub
popa
adc
jecxz
adc
mov
and
dec
fidivrl
arpl
mov
mov
sbb
int
enter
cmp
shll
cmp
push
leave
in
cmc
test
jnp
push
cmpsl
mov
imul
sbb
idivb
or
fwait
cmpsl
push
push
jge
outsl
add
jg
in
cmc
mov
cwtl
inc
push
cmp
mov
xor
jnp
pop
mov
es
pop
pop
mov
xlat
fwait
imul
jl
sub
mov
fdiv
cli
and
pushw
lods
jb
inc
cwtl
or
push
ss
sahf
mov
jnp
and
andb
sti
shl
pop
ret
cmp
loop
movsl
cmp
call
xor
push
mov
sarb
cmpsb
rorl
mov
mov
mov
pop
dec
sbb
adc
mov
push
int3
mov
into
aaa
cmp
sbbl
cmp
pop
mov
int
inc
out
mov
repz
iret
jns
or
arpl
adc
inc
mov
icebp
mov
outsl
mov
sbb
mov
mov
xchg
mov
mov
adc
inc
pop
pop
cltd
jnp
stos
mov
mov
fs
or
out
jbe
ret
mov
das
xchg
lock
xlat
sbb
push
jg
mov
adc
lds
stc
vmread
inc
mov
cmp
mov
mov
lds
jns
push
shlb
dec
add
mov
and
lods
cld
or
or
clc
lret
mov
out
or
movsl
mov
and
adc
mov
pushf
pop
scas
and
ret
cltd
mov
cmpb
sbb
mov
pop
repnz
popf
pop
xchg
and
les
mov
repz
imul
lods
mov
mov
push
xchg
jns
pop
add
outsl
mov
inc
aas
inc
popa
and
mov
lds
imul
mov
loope
sbb
mov
and
pushf
loop
mov
loopne
mov
mov
jae
mov
mov
idivl
daa
ss
mov
pop
xchg
adc
aad
mov
stos
iret
and
xlat
test
add
adcl
into
js
mov
push
jmp
test
sti
mov
pop
movsl
adc
xchg
adc
sub
sbb
rcll
cmc
mov
sub
loope
out
mov
mov
icebp
cmp
fucomip
jnp
dec
push
xchg
into
xor
repz
cmp
shll
jno
fdivp
cmp
mov
call
or
popf
add
mov
ja
add
mov
xchg
xor
test
xor
pop
pop
inc
fidivrs
stos
shll
div
sbb
mov
loopne
mov
test
repz
jnp
jge
mov
xor
sub
xor
jns
inc
inc
in
lret
mov
arpl
mov
stos
shlb
pushf
adc
mov
aad
xchg
pop
mov
movsl
bound
jno
shrl
sbb
jne
jbe
and
pop
mov
leave
cltd
data16
and
mov
xor
xor
mov
movsl
mov
xchg
nop
sbb
into
jp
xchg
and
std
push
dec
mov
fwait
inc
lods
mov
sbb
leave
mov
shl
xchg
jnp
cmp
mov
mov
test
push
ficoms
divb
scas
jns
mov
fsubrl
mov
js
data16
lods
mov
cmpsl
mov
or
int
xlat
ja
jae
fstl
mov
loope
and
cmp
mov
dec
sbb
leave
lahf
cmp
mov
flds
pop
outsl
sbb
mov
push
cmp
mov
mov
inc
out
mov
lcall
jge
idivl
mov
pop
jns
fisubs
xchg
imul
push
negb
cwtl
fidivrl
push
pop
add
cmpsl
fwait
les
and
and
mull
mov
pop
or
fistps
and
ficoml
cmpsl
test
xchg
cmp
cmpsl
add
loope
mov
lea
push
aas
and
push
mov
jp
mov
jnp
xor
pop
rcr
cmc
mov
jne
cmpsl
loop
mov
lcall
mov
adc
stos
jns
fdivl
and
int
sbb
mov
scas
loop
fwait
jmp
mov
out
les
and
xlat
xchg
fdivl
jge
mov
gs
mov
mov
mov
mov
mov
repz
sahf
sbb
fs
into
mov
pop
or
lods
pop
lea
shlb
mov
test
add
mov
popa
mov
push
mov
arpl
add
push
rolb
mov
repnz
adc
gs
jne
sub
dec
clc
dec
mov
in
test
cwtl
mov
mov
sbb
ret
imul
xorl
divl
xchg
mov
fsubr
fldenv
mov
rcl
mov
movsb
sub
xor
mov
sbb
add
inc
jns
mov
lahf
mov
mov
pop
jno
or
jl
sbb
mov
mov
sub
add
cmpsb
insl
divb
movsl
xor
imul
pop
int3
scas
rolb
push
jae
cltd
test
stos
sbb
popa
loope
mov
mov
mov
xchg
cmpsl
xchg
mov
xchg
jns
imul
idivb
sub
fwait
sub
mov
fdivs
popa
popf
mov
sbb
pop
sahf
adc
test
outsb
pop
mov
fwait
sbb
gs
inc
add
fwait
lahf
scas
icebp
mov
adcb
ficompl
xchg
adc
and
sub
push
sub
mov
cltd
mov
lea
ja
mov
aad
xor
xchg
lret
mov
mov
divl
mov
xor
mov
push
pop
jns
mov
xlat
mov
test
sub
outsl
xchg
fidivl
rcll
scas
push
repz
and
dec
iret
js
scas
dec
xor
fsubrl
mov
das
adc
mov
and
sub
sbb
in
int
das
xlat
test
push
adc
jg
lods
lods
scas
insl
jl
addr16
mov
jnp
iret
mov
movsl
xor
mov
push
or
lea
mov
shll
push
add
jmp
sbb
lahf
xor
mov
imul
mov
negb
lock
gs
jb
xor
mov
mov
int3
shll
jmp
mov
mov
icebp
mov
jbe
lret
and
fiadds
add
and
cmpl
jne
xlat
lea
ds
xlat
or
mov
xlat
icebp
xorb
sbb
loop
mov
loope
gs
jnp
andl
mov
mov
jl
fsub
xchg
cmp
mov
mov
movsl
aaa
leave
adc
rorl
iret
and
bound
lods
aam
dec
mov
xchg
jg
jmp
lods
mov
xchg
in
data16
mov
mov
daa
idivl
addr16
cltd
mov
pop
out
or
in
imul
fistps
stos
aaa
pop
mov
dec
and
repnz
cmp
mov
hlt
inc
mov
inc
xor
cwtl
fldenv
repnz
sbb
das
mov
cmpsb
daa
arpl
jb
popf
loope
xchg
fsubrs
adcl
mov
cmpsb
ds
js
mov
test
adc
stc
insl
or
xchg
lahf
fst
xchg
lods
xchg
cmp
loope
xor
adc
popa
cmpsb
mov
inc
xchg
test
fbstp
jns
mov
mov
jge
idivl
and
stos
repnz
mov
stos
jle
out
xor
mov
xrelease
mov
aad
loopne
dec
cld
and
xor
mov
and
fcomi
pop
js
lea
sbb
out
and
mov
popf
mov
xor
fcom
and
hlt
pop
adc
or
adc
xchg
mov
cmp
stc
mov
enter
xor
clc
mov
das
mov
test
push
inc
mov
cmc
fisttps
sbb
sub
push
mov
loope
cmpsl
and
cmc
outsl
test
push
xor
pushf
mov
jns
xchg
or
jmp
ds
adc
jns
push
mov
out
mov
mov
mov
push
scas
xchg
mov
test
sub
stc
enter
mov
mov
mov
pop
in
addb
cltd
dec
addr16
mov
xchg
sarb
cld
and
mov
cltd
movsl
jo
int3
data16
scas
jbe
xor
cwtl
stos
and
iret
mov
inc
mov
notl
mov
mov
sub
stos
outsb
jns
aas
pop
xchg
iret
mov
movsl
hlt
or
mov
mov
jno
xorb
xor
mov
jnp
popf
fcomps
jge
push
orl
xor
jnp
xor
orl
ficoml
movsl
rolb
daa
sub
repz
sbb
pop
or
mov
mov
mov
xchg
jne
hlt
jp
pop
fsubr
or
jl
xlat
mov
imul
fdivrs
xlat
lcall
inc
imul
cmp
mov
insl
pop
scas
lahf
mov
das
mov
loopne
in
addr16
xor
dec
and
mov
aam
add
in
arpl
and
xor
cmp
xchg
das
jg
xchg
data16
mov
jnp
push
scas
cmpsl
gs
addr16
scas
subb
movsb
testl
xchg
mov
inc
sbb
inc
iretw
sub
dec
lods
xchg
sbb
mov
cmp
or
insl
out
adc
in
cmp
jl
dec
pop
mov
pop
insb
jne
call
xlat
sbb
scas
cmp
bound
xlat
jns
pop
fmull
call
mov
mov
sbb
push
cmp
movsb
pop
aad
sbbl
lods
cltd
shl
xor
int
into
pop
lahf
das
dec
and
mov
fs
ret
subb
test
es
mov
add
cmp
mov
lcall
mov
out
xlat
add
lcall
sub
sub
mov
mov
les
fisubs
andb
shlb
sbb
fucomp
andl
iret
pop
jne
movsb
int
mov
mov
dec
and
mov
outsb
mov
gs
cmpsl
push
pop
loope
lods
pmovmskb
and
push
xor
dec
scas
test
jle
out
xor
mov
jno
push
mov
mov
mov
iret
pop
insl
in
push
dec
sbb
out
scas
outsb
ficoml
mov
sub
clc
jle
pop
add
push
xchg
mov
shrl
ljmp
xchg
test
mov
or
cld
mov
or
loopne
movsb
sbb
jns
push
int3
or
inc
imul
sti
aam
iret
fnstcw
lods
cwtl
and
mov
daa
cmp
cmp
aad
out
mov
cmpsl
scas
add
or
fidivl
mov
mov
cmp
ds
sbb
mov
mov
mov
and
inc
sbb
cwtl
jb
mov
inc
scas
add
in
pop
jno
std
pop
xor
mov
aaa
adc
scas
or
xor
push
mov
inc
scas
imul
sub
ret
adc
sar
stos
outsl
xor
mov
test
jnp
push
arpl
andl
mov
loopne
test
icebp
ja
jp
inc
pusha
mov
add
adc
mov
lds
lret
mov
imulb
mov
cltd
ds
adc
loope
es
jns
mov
mov
mov
dec
mov
push
adc
mov
adc
int3
outsl
sbb
aaa
mov
xor
arpl
adc
xchg
jg
inc
mov
lret
enter
cmpsb
push
mov
and
mov
inc
divb
movsb
sarb
push
and
push
jp
lret
mov
mov
popf
repz
mov
and
mov
mov
inc
test
xlat
mov
stos
mov
out
push
pop
or
icebp
cmp
push
fwait
jb
or
jl
mov
loope
cmp
loopne
aas
xchg
jns
test
mov
xor
mov
sub
mov
cmpsb
out
jbe
adc
data16
addr16
pop
push
dec
cwtl
mov
scas
mov
test
and
ljmp
jle
sbbb
into
in
pop
push
mov
mov
add
push
xchg
xor
mov
jge
or
shll
mov
jns
cmp
repz
inc
fwait
jns
enter
push
sarl
and
daa
mov
and
jb
push
test
in
icebp
mov
jnp
push
pop
mov
push
and
inc
sbb
cmp
ret
cltd
cmp
xchg
rcrl
mov
cld
mov
inc
fnstenv
mov
lods
xchg
stc
xchg
xorb
jb
jnp
jno
adc
mov
jle
sbb
mov
xor
ret
test
and
int
dec
repz
cmp
scas
sbb
pop
cmpl
enter
xlat
mov
popa
dec
adc
mov
ret
sbb
mov
jp
das
xchg
shlb
pusha
xchg
push
sbb
das
mov
mov
sbb
test
icebp
dec
mov
lret
enter
lahf
adc
leave
jge
fdivrl
jl
adc
aas
mov
cwtl
movsb
inc
mov
stos
push
daa
jbe
xchg
mov
xchg
xorl
dec
enter
cmp
lahf
rcll
loopne
cli
add
lahf
out
xlat
and
xor
lods
mov
xor
pushf
daa
outsl
out
cmp
add
cli
pop
mov
pop
lods
daa
arpl
and
fsubs
sbb
xchg
movsl
cltd
xor
mov
imul
cld
lods
push
xchg
jg
test
sbb
jg
push
pop
xchg
cmpsl
mov
test
or
mov
adc
neg
notl
add
fisubs
imul
pop
push
mov
mov
mov
and
xor
mov
push
neg
mov
scas
pop
lock
add
push
mov
das
jbe
mov
stc
sub
cmpsl
out
mov
stos
dec
xor
push
pop
mov
hlt
add
mov
jae
cmpsl
das
mov
in
push
cmp
sbb
xchg
mov
xlat
push
xlat
test
jmp
cltd
test
lret
lahf
mov
rcl
jp
sub
pop
mov
jg
pop
arpl
outsb
mov
loope
shrb
mov
out
aas
cmpsl
outsl
aaa
mov
cmp
mov
adc
or
and
cmp
push
mov
jns
push
jne
mov
mov
xchg
xor
hlt
mov
lea
fidivl
imul
xchg
cmpsb
cmpsl
mov
jae
and
mov
fsubrl
add
xlat
daa
fisubs
mov
adc
mov
std
repz
jno
pop
rcrl
mov
xlat
and
add
jbe
sbb
cli
popl
fwait
lods
rcll
repz
cwtl
jns
push
aas
mov
xlat
movsl
push
lcall
adc
cmpsl
pop
loopne
dec
mov
xor
mov
into
mov
arpl
mov
inc
mov
into
mov
pop
adc
mov
or
mov
cmp
push
dec
sbb
inc
cwtl
dec
dec
and
movsl
mov
xchg
lret
mov
add
sub
repnz
in
xlat
xchg
les
jno
repz
adc
mov
ds
in
mov
inc
sahf
test
adc
jmp
xchg
pop
icebp
sub
enter
ljmp
mov
xchg
es
js
iret
or
jbe
mov
stc
mov
push
pusha
mov
xchg
fnstenv
pop
xor
mov
js
adc
sbb
das
pop
loopne
push
rorl
std
sahf
popf
and
cmpsl
call
and
stos
sbb
adc
dec
xlat
pop
lret
add
pop
mov
sarl
cmp
addb
lahf
mov
mov
sarl
hlt
inc
and
lods
and
into
xor
test
pop
fcmovu
adc
leave
cmpsl
fs
dec
mov
xchg
loopne
sub
ret
into
xchg
fpatan
mov
mov
mov
jnp
cltd
lcall
scas
add
mov
pop
or
push
cmc
je
outsb
inc
pop
insl
dec
push
fs
jg
xchg
into
add
jb
sbbb
inc
scas
outsl
mov
les
mov
shrl
ret
jnp
pop
adc
icebp
in
add
lret
fisubl
sbb
insb
jecxz
and
mov
mov
mov
aas
lcall
and
mov
mov
add
pop
mov
ja
je
std
mov
scas
mov
imul
adc
sbb
pop
push
insl
xchg
pop
test
add
sahf
lods
ficoms
xor
popf
mov
jecxz
outsb
pop
lds
inc
jnp
xlat
lahf
add
mov
inc
jbe
repnz
in
cmpsb
cmpsl
insb
mov
test
icebp
or
sub
aaa
xchg
data16
mov
mov
mov
sarb
mov
jb
push
shll
mov
dec
xor
adcl
div
mov
inc
mov
mov
and
mov
or
xor
pop
xchg
push
cwtl
lods
mov
daa
test
mov
jecxz
dec
cmpsl
call
aam
je
cmpsb
int3
fisubrl
daa
adc
jbe
sarb
cld
in
icebp
fildl
and
xchg
sbb
repz
mov
pop
mov
sbb
mov
sub
xor
lea
lret
lahf
scas
test
hlt
jns
rclb
cmpsl
or
fcomps
mov
fdivrl
jp
std
mov
xor
fildll
xor
cmp
fsub
dec
add
mov
aaa
dec
jb
mov
and
mov
stos
jnp
push
subl
add
sub
cltd
lods
insb
loope
mov
std
mov
adc
push
xor
orb
mov
aaa
fidivs
mov
mov
cmpsl
cmp
adc
adc
mov
lods
pop
and
inc
inc
cmpsl
outsb
xor
sub
or
mov
jg
inc
fsubl
lods
insl
sbb
cltd
fnsave
xchg
jo
xor
xor
mov
stos
pop
xchg
push
pop
pushf
adc
or
out
and
xchg
mov
xchg
xorb
testl
stc
rolb
out
push
mov
and
arpl
jmp
pop
rcrb
sub
dec
fiadds
push
out
inc
or
cwtl
movb
fwait
mov
dec
cmpsb
fcom
inc
xor
mov
inc
fyl2x
sub
mov
cmp
add
popa
mov
int3
test
pop
pop
sbb
push
insb
pop
mov
arpl
xor
add
mov
mov
or
ret
test
stos
iret
xor
add
mov
icebp
dec
cmpsl
popa
stos
push
cwtl
insb
sbb
subb
das
test
stos
mov
nop
sbbl
popa
mov
or
push
loopne
out
cltd
dec
fmul
mov
inc
xlat
pop
scas
test
sub
sbb
int3
stos
in
lahf
scas
sar
jg
mov
mov
add
mov
jnp
mov
mov
cli
add
in
cmp
sbb
outsl
mov
lods
jp
out
inc
mov
push
jl
cltd
mov
dec
dec
mov
insl
add
mov
test
mov
cltd
mov
int3
pop
mov
ret
dec
mov
jb
fwait
dec
pop
mov
jns
mov
xlat
loopne
dec
and
lahf
push
mov
or
cmpl
mov
scas
adc
punpckhbw
sahf
icebp
lds
mov
pop
cmp
push
cmp
mov
pop
jo
imul
ja
rcl
stc
shlb
dec
lods
sbbl
loope
scas
popa
sbb
sbb
data16
xchg
lgs
jge
adc
push
stos
mov
add
aaa
jo
add
shl
and
test
mov
mov
pushf
sbb
and
cmpsl
sbb
push
je
cwtl
cmpsb
mov
clc
mov
jne
cltd
pop
sub
pop
jns
sub
mov
xor
ret
cmpsl
test
cmp
mov
icebp
pop
shlb
lods
mov
mov
pop
lret
fwait
stc
cmpsl
or
xor
andb
push
cld
cmp
leave
fwait
dec
xor
fnstsw
mov
inc
pop
ficoms
adc
cmp
nopl
mov
mov
or
push
mov
das
loope
xor
sarl
cmpsl
inc
je
mov
mov
ja
repz
cltd
icebp
lods
or
repnz
add
dec
addr16
mov
sbb
ja
adc
pop
jnp
add
cltd
rorl
test
mov
call
mov
mov
in
lret
lods
xchg
ss
mov
add
sbb
xchg
lahf
cmpsl
cwtl
jmp
sub
fwait
imul
std
sub
inc
sub
stos
dec
frstor
sbb
lcall
jbe
cltd
xchg
mov
sub
add
mov
mov
pop
movsl
xor
xlat
push
mov
pop
inc
addr16
aas
jns
fcmove
stos
xchg
mov
xor
xlat
lds
in
add
adc
jnp
lds
mov
xlat
or
mov
fistpl
fcompl
outsl
mov
mov
jge
ret
push
mov
fsubrs
das
xor
jb
neg
pop
bound
cmpsb
mov
inc
mov
addl
stc
mov
and
and
dec
shll
push
sub
inc
cmpsl
add
mov
mov
cmpsb
gs
out
mov
fnstenv
mov
and
fwait
sbb
mov
mov
and
arpl
xchg
lcall
movsl
and
xor
xchg
adc
push
movsl
fs
xchg
and
xlat
xor
scas
rcl
or
sub
scas
mov
cmpsl
mov
and
iret
icebp
mov
stc
lea
movsl
jne
mov
push
leave
mov
les
popf
adc
ds
cmp
lods
xor
ljmp
iret
jg
test
fbld
ficoms
cwtl
xchg
scas
jge
push
ret
xchg
cs
mov
sbbb
xlat
icebp
xchg
idivl
imul
add
xchg
cwtl
and
hlt
lret
mov
clc
inc
fnstenv
movl
cmp
pop
call
mov
loopne
jae
inc
push
popa
addl
insb
faddp
adc
test
sub
xchg
jmp
ljmp
and
add
les
in
imul
sbb
cli
jle
cmp
mov
mov
jecxz
add
in
mov
push
aaa
cmp
mov
sbb
movsb
mov
add
mov
mov
call
aas
outsb
mov
dec
lahf
insl
or
clc
addr16
xchg
mov
jge
inc
jne
mov
mov
pop
mov
xchg
jnp
mov
ret
lcall
idivl
fnstcw
mov
movsl
sub
cmpsb
fucomi
mov
push
iret
cwtl
inc
push
push
jnp
mov
xor
jb
aaa
mov
dec
mov
imull
rorb
cmpsl
outsl
scas
ja
sbb
aas
fstps
xor
xor
mov
mov
ja
cltd
inc
pop
ljmp
aas
cmp
inc
sti
stc
add
sti
xchg
mov
sbb
lds
sahf
pop
pop
repnz
ja
ljmp
mov
mov
dec
dec
scas
js
and
adc
xlat
mov
mov
jge
enter
xlat
pop
dec
pusha
sub
cmp
int3
idiv
push
and
push
xchg
insl
sub
mov
es
sbb
movsl
mov
mov
repnz
int
out
cmpsb
cmp
jae
mov
clc
cmpsl
outsl
shlb
or
sbb
mov
pop
fisubrs
xor
xchg
xchg
cmpsb
mov
mov
arpl
mov
jns
xcrypt-ctr
cmpsl
sbb
mov
outsb
pop
scas
xchg
sbb
and
mov
mulb
add
push
mov
out
mov
add
dec
mov
sub
repz
movzwl
daa
mov
fwait
mov
mov
and
lods
pop
dec
int
mov
cmpsl
insl
fsubrl
xlat
addr16
mov
cwtl
mov
cltd
mov
je
in
or
addb
jle,pn
sbb
movsb
adc
ficompl
mov
mov
mov
sarl
pop
jle
lods
mov
adc
addr16
gs
dec
popf
subl
stos
movaps
movsb
js
push
lea
fcomp
jne
sti
or
mov
aas
out
stc
sbb
fbld
adc
shl
bound
xchg
mov
nop
stos
push
ficomps
inc
mov
inc
sbb
out
fdivl
xchg
popa
xor
gs
mov
insl
mov
sub
mov
mov
pop
mov
sub
shufps
pop
mov
or
test
add
lods
xor
pop
mov
xor
sbb
sub
fwait
mov
pop
cmc
lea
sub
mov
jnp
pop
into
xchg
jle
aaa
xchg
scas
cli
mov
sub
xlat
pop
cltd
fadds
cmp
out
push
push
iret
mov
fwait
aad
pop
sahf
test
sub
inc
mov
mov
push
fwait
imul
or
mov
push
push
out
add
inc
ss
mov
push
ucomiss
addb
mov
daa
mov
addr16
mov
xchg
cmp
movsl
sbb
mov
inc
sbb
cmp
das
popa
xchg
hlt
xchg
iret
jno
adc
ja
fucom
add
jb
push
mov
lahf
pop
jns
fwait
jns
mov
inc
cmp
cmp
stos
mov
sbb
dec
andl
leave
pop
mov
iret
adc
mov
int3
adc
js
pop
clc
mov
nop
push
or
mov
cmp
andb
mov
sbb
dec
fidivl
insl
lods
push
test
ja
push
mov
enter
sbb
roll
xor
jnp
push
mov
aas
fdivs
mov
es
sub
movsl
outsb
sbb
leave
arpl
adc
sub
pop
cmp
mov
add
and
aad
mov
xchg
movsl
mov
mov
das
pop
lahf
jb
test
jmp
dec
cmpsb
mov
xchg
xor
mov
push
inc
mov
xlat
push
and
fcmove
fdivs
mov
pop
and
icebp
or
mul
mov
test
mov
add
loop
mov
faddl
xchg
stos
cmc
lcall
cmp
mov
aaa
push
mov
outsl
int3
xor
pop
add
repz
inc
arpl
mov
cmpsb
cltd
jecxz
ficomps
fwait
jnp
lahf
test
jno
lret
mov
add
or
insl
mov
subl
push
push
arpl
cs
shlb
jnp
cltd
or
mov
jle
stos
xchg
adc
scas
jp
ss
mov
jnp
pop
aad
pusha
adc
outsb
stc
mull
mov
mov
fdivl
mov
pushf
mov
xlat
cwtl
and
xchg
bound
mov
mov
sub
adc
popa
or
push
lret
lret
cmpsl
das
pop
mov
jmp
push
inc
or
popf
bound
int3
or
cmp
sarb
aad
fwait
cmp
icebp
stc
fldcw
cmp
inc
jnp
cltd
mov
sub
stc
ss
into
mov
sbb
iret
fs
cmpsl
mov
jmp
mov
mov
std
pmaxsw
adc
scas
xchg
repz
stos
dec
ficoml
ret
mov
cmp
ds
add
mov
mov
ljmp
dec
mov
add
lret
addr16
fs
push
scas
and
fucomp
shll
addr16
mov
lret
push
rcll
mov
cmp
mov
cmpsl
fists
mov
mov
or
sub
fdivl
pop
pushf
fdivrs
shl
scas
sbb
imul
cli
xlat
orl
out
lds
nop
mov
jns
adc
mov
cmc
jecxz
je
mov
mov
xor
sub
divl
jb
cmp
adc
xor
jns
nop
add
push
adc
mov
fucomip
leave
cmp
shll
insb
hlt
mov
cmc
cmpsb
stc
mov
inc
inc
sbb
push
mov
fdivrs
leave
orl
test
pop
jl
mov
sub
out
jae
push
push
cmp
sbb
pop
into
sbb
std
pop
mov
test
add
cmp
je
mov
scas
inc
repz
cmpsl
inc
in
mov
int3
mov
filds
out
and
loop
pop
icebp
aas
mov
mov
lret
push
xchg
xchg
jno
leave
out
add
fiaddl
ror
loope
inc
seto
add
inc
jbe
mov
sarl
stos
adc
dec
cmpsb
mov
scas
je
mov
mov
inc
jge
fwait
in
cltd
cmp
adc
mov
les
out
pop
add
pop
popa
ret
and
popf
fsubl
xchg
mov
stos
mov
mov
popa
aas
cltd
xor
inc
mov
cmpb
lds
imul
mov
out
stos
pop
fstl
cltd
xorl
mov
fldenv
cltd
outsl
and
fildl
push
fdivrs
int
scas
sbb
dec
aaa
cwtl
xchg
pop
cld
mov
leave
cmpsl
pushf
mov
lods
movsb
or
sub
mov
xlat
mov
dec
inc
add
dec
movb
filds
mov
xchg
ficompl
add
pop
xchg
lods
xor
xchg
xor
mov
shr
insl
aas
mov
fildl
push
push
xchg
dec
mov
lahf
sub
outsl
mov
shlb
mov
lods
cwtl
cmpsl
inc
push
scas
push
addr16
mov
cwtl
scas
pop
mov
sbb
ret
jg
sarl
mov
mov
sbb
dec
dec
mov
push
mov
fs
fadds
negl
loope
pop
aaa
mov
insb
sub
mov
dec
sbb
nopl
mov
sbb
pop
fs
cmpsb
shlb
jo
in
or
and
pop
clc
add
mov
fsubrs
inc
add
nop
jnp
adc
bound
sahf
mov
scas
adc
cmp
clc
scas
jmp
lahf
xor
bound
xlat
je
mov
mov
lea
cmp
cmp
gs
fidivl
pop
loop
push
inc
lea
add
pop
pop
lods
popa
cld
sub
mov
movswl
gs
subb
cwtl
fadd
fs
ret
cmpsl
inc
xchg
icebp
pop
and
jge
insw
sbb
repnz
aas
mov
jg
add
push
xchg
into
mov
sbb
in
and
pop
jg
std
scas
stos
and
iret
insl
mov
lods
shll
pop
dec
rclb
sbb
xor
movsb
cmpsl
andb
movsl
aas
icebp
jle
repnz
pop
xor
mov
test
cwtl
cmp
js
and
add
cltd
pop
shll
or
push
fwait
pop
popl
xor
out
mov
sub
xorl
xor
pop
andb
mov
xchg
lods
stos
test
lret
push
arpl
mov
sbb
subl
xor
xchg
fwait
cmp
jns
mov
cltd
lods
mov
mov
icebp
mov
adc
xchg
pop
xchg
repz
mov
sbb
daa
mov
add
mov
ljmp
divl
mov
xor
fwait
cmpsb
mov
lret
cltd
mov
jnp
xor
mov
fs
xlat
mov
push
ret
push
xlat
scas
clc
mov
mov
cwtl
fisubl
xor
sbb
cwtl
fwait
xor
out
mov
fs
mov
lods
xchg
aad
movsb
push
mov
stos
flds
bound
mov
pop
mov
sub
testb
xor
jle
ret
sub
jp
push
xor
xchg
mov
leave
subb
imul
cmpsl
xlat
fwait
arpl
and
bound
pop
in
push
jb
mov
clc
mov
fs
bound
lcall
sbb
cmpsl
mov
pop
stos
push
mov
in
xchg
pop
lcall
adc
cmp
cmpsb
jne
shl
mov
cld
mov
push
es
push
mov
xor
movsl
mov
test
xchg
out
test
mov
xchg
mov
cmp
sbb
mov
stc
jmp
mov
hlt
xor
adc
jnp
jne
xlat
aad
mov
xor
fs
notb
popf
pop
sub
test
data16
jbe
cmp
pusha
push
xor
mov
adc
pop
cmp
fldcw
mov
push
cltd
xor
cwtl
xchg
dec
jae
dec
movsl
sbb
arpl
js
mov
xchg
out
int3
add
sub
scas
push
js
mov
sub
push
xor
inc
pop
or
aas
fwait
jo
mov
xchg
inc
inc
stos
mov
jne
rcr
pop
pop
mov
loop
xchg
sub
xchg
dec
add
adc
test
fdivl
add
mov
sbb
daa
out
imul
cwtl
ljmp
movsl
loop
aas
mov
scas
add
mov
lahf
stos
push
jbe
mov
popf
xorl
mov
or
cmpsb
jb
iret
xchg
and
daa
jg
xchg
fadds
arpl
cwtl
push
rep
or
xchg
cmpsl
in
xchg
pop
leave
shrl
mov
clc
cmpsb
adc
mov
push
scas
fs
push
xlat
xlat
and
mov
int3
mov
popa
push
int
stos
push
fwait
pusha
lahf
mov
cltd
into
jae
test
mov
jnp
lds
daa
pushf
mov
xlat
jge
daa
out
mov
sbb
icebp
or
test
imul
and
clc
push
add
xchg
out
mov
cmp
jge
movsl
cmpsl
cmp
pop
mov
scas
mov
rcll
xorb
inc
mov
mov
xlat
fnstcw
jl
cmpsl
jno
push
pop
pop
lds
inc
jns
inc
and
mov
test
push
jge
shlb
int
scas
cmp
sbb
fsubs
test
sarl
pop
fstps
mov
fcoml
adc
mov
cmp
shll
arpl
mov
mov
cltd
stos
mov
mov
dec
test
mov
fdivr
cltd
mov
jnp
add
les
jbe
mov
imul
lret
fwait
xchg
shll
sbb
pop
mov
adc
aas
js
cmpsl
movl
sbb
push
bound
jns
xlat
das
lret
and
addr16
push
mov
fbstp
scas
fdivs
dec
sub
mov
fmull
movsl
xchg
mov
mov
inc
imul
adc
addr16
pop
xchg
daa
repnz
xor
por
cwtl
and
pop
ja
fidivl
test
xchg
test
mov
mov
mov
stos
lret
addr16
cmp
add
and
mov
or
mov
mov
cmc
mov
sbb
shll
sbbl
stos
cld
sarl
mov
mov
fwait
rcl
push
repnz
hlt
pop
jno
nop
roll
push
daa
mov
popa
scas
xor
lds
mov
mov
pop
cwtl
sub
iret
fstpl
movsl
push
negb
adcl
cmpsl
pop
stos
mov
cmp
dec
mov
arpl
jg
push
cmpsl
cmpb
mov
sbb
outsb
gs
in
popa
xchg
aam
cwtl
dec
inc
fwait
test
push
inc
xchg
aas
divb
test
mov
xor
jns
sub
sbb
sub
fldl
mov
pop
pop
shlb
pop
data16
sbb
scas
xchg
fcom
xchg
fbstp
mov
pop
push
sub
jno
ret
mov
jg
jp
dec
imul
cmp
out
mov
fidivrl
hlt
jmp
stos
xor
cmc
mov
cmp
add
mov
sbbl
mov
andb
add
cmc
dec
cmpsl
shrl
out
mov
mov
jbe
aaa
and
xor
and
imull
dec
jns
adc
mov
push
mov
out
jns
ja
fs
xchg
in
ds
adc
std
xchg
jmp
scas
aas
mov
jbe
sub
dec
fwait
and
mov
mov
aaa
cmp
adc
aas
popf
bswap
lods
mov
jns
ds
cmp
sbb
shll
cmc
rorl
and
stc
iret
push
or
pop
inc
pop
aas
icebp
int
out
test
add
scas
xor
xlat
lds
fistpll
insb
mov
mov
and
cmp
fimuls
cmpsl
outsl
xchg
adc
fsubp
mov
xchg
inc
and
push
mov
popf
xchg
lcall
cwtl
jecxz
mov
mov
push
vhsubps
ret
push
fdivrs
outsl
push
sub
xchg
pop
xlat
cld
xor
sub
test
cwtl
jecxz
cmpsl
data16
pop
cltd
lds
dec
jnp
xlat
sub
test
push
scas
add
rol
out
add
std
jp
imul
sarb
shll
jae
iret
fwait
pop
xor
cwtl
ret
jl
jo
push
in
pop
sbb
mov
movsl
xor
aaa
fnstenv
pop
int3
mov
cwtl
cmpsl
adc
xor
jg
and
jno
or
pushf
stos
xor
sbb
mov
dec
and
stos
jbe
adc
sbb
les
push
mov
mov
cmp
mov
cltd
xlat
dec
sbb
sbb
mov
in
stos
fdivrl
or
cmp
fistpll
adc
hlt
lret
es
adc
mov
sbb
add
movaps
aam
loope
fcomps
insl
xchg
rolb
xor
cmp
jge
lds
inc
inc
pop
cmpl
mov
xlat
push
data16
sbb
mov
cwtl
and
mov
fcmovu
dec
mov
fnstsw
cwtl
vmulsd
les
int
sbb
xchg
testl
cmpsl
or
mov
jb
dec
xor
mov
mov
je
cmpsl
jbe
jns
jns
rclb
push
mov
leave
inc
cmp
lods
mov
imul
lret
mov
mov
lcall
repz
ficoms
pop
je
rcrl
jl
mov
fsub
fwait
pop
enter
inc
xchg
repz
jbe
or
mov
movsl
addr16
mov
ds
dec
aaa
and
mov
mov
setg
jo
mov
mov
and
xlat
fldt
lods
mov
ror
sbb
stos
lock
jnp
fdivrl
ljmp
cli
push
lcall
mov
xor
jg
pop
divb
push
mov
inc
mov
add
xorb
shlb
aaa
push
and
ds
incb
cmpsl
roll
dec
sahf
mov
mov
pop
loop
dec
cmc
and
testb
andl
and
lock
inc
add
and
push
fcoms
and
shrb
daa
stc
mov
xlat
lret
adc
pop
adc
dec
fcomp
jl
add
xor
mov
adc
mov
dec
xlat
mov
leave
jmp
jno
fidivrl
jo
es
push
out
sub
mov
cwtl
mov
mov
mov
movsb
or
imul
mov
iret
mov
cmp
mov
mov
pop
xchg
mov
dec
sahf
sbb
mov
mov
sarb
arpl
mov
sbb
popa
jecxz
gs
into
scas
xchg
or
loope
jbe
mov
adc
mov
xor
pop
test
movsl
lods
out
mov
cmpsb
outsb
adc
pusha
xor
hlt
and
mov
mov
push
mov
xlat
adc
stos
xchg
mov
mov
pop
inc
jbe
inc
pop
sbb
adc
xlat
mov
mov
divl
push
scas
dec
or
jge
or
and
mov
call
ds
mov
int3
popa
mov
mov
or
sbb
xchg
out
xchg
lret
in
loopne
cmpsl
loop
cmp
add
mov
je
xor
cli
mov
mov
jbe
mov
cmp
add
xchg
imul
ds
mov
int
xor
xchg
aaa
add
sub
cmpsl
js
inc
xor
cltd
cld
mov
mov
xchg
fwait
adc
das
shll
xlat
jecxz
mov
xchg
fstpt
into
inc
aaa
out
mov
ds
or
inc
mov
inc
jmp
xchg
inc
mov
mov
and
icebp
add
mov
xor
std
sub
mov
sub
inc
mov
xchg
fwait
jns
into
mov
pop
test
sbb
aas
cwtl
add
mov
xchg
ret
mov
out
subl
mov
push
addr16
mov
faddp
mov
sbb
pop
mov
xchg
mov
inc
fidivl
xchg
mov
mov
sarb
out
sub
mov
cmp
enter
push
add
insl
imul
cmpsl
mov
in
dec
ss
or
push
add
jl
add
mov
mov
jp
mov
inc
int3
std
pop
rcrl
pop
pop
jl
ja
test
mov
mov
shl
test
sbb
xchg
mov
jne
mov
out
add
cmpsb
push
xor
cmp
cmp
push
pop
dec
mov
mov
sub
or
cmpsl
jmp
lds
icebp
mov
add
inc
add
pop
cwtl
mov
imul
daa
fidivl
loope
cltd
in
and
pop
xlat
add
outsb
cmp
fsubr
mov
push
cmpsl
outsl
mov
sub
pop
or
outsl
scas
pop
adc
xor
out
fnsave
add
cmp
mov
aaa
mov
fisubrl
mov
fadd
xor
mov
cltd
mov
add
test
movsl
fnstenv
cmp
jbe
push
cmp
lea
or
xchg
and
negb
sbb
jl
faddl
mov
ljmp
int3
xchg
xor
pop
sahf
out
push
xcrypt-cfb
cmpsl
out
icebp
pop
pop
cli
std
cmpsl
roll
loope
mov
arpl
shr
and
add
xlat
mov
sbb
lods
scas
out
sbb
and
mov
cltd
jecxz
clc
jmp
fs
cmp
mov
in
mov
shlb
lea
xor
insb
adc
mov
das
xlat
scas
rolb
xor
xor
mov
pop
adc
inc
gs
xchg
fnsave
jl
mov
pop
xor
addr16
movsl
mov
insl
add
inc
arpl
popa
mov
cmpsl
notl
call
jns
jo
xor
jmp
xlat
and
mov
subb
loope
adc
mov
mov
push
inc
gs
push
popf
shlb
lock
rcl
inc
xlat
ss
dec
mov
scas
xor
cwtl
push
pop
cmpsb
push
or
mov
pushf
xor
mov
xchg
jb
xlat
scas
xor
pusha
xlat
mov
add
fnstenv
mov
out
pusha
jb
jae
mov
mov
hlt
pop
mov
icebp
mov
push
jae
sbb
xchg
mov
setbe
inc
in
mov
sub
mov
xor
stos
adc
mov
cmp
xor
adc
cli
jo
add
mov
sbb
mov
loope
sub
xor
cmc
mov
jb
mov
mov
mov
lret
shlb
adc
repz
lret
stos
fdiv
mov
cmp
mov
aas
push
ja
sub
push
iret
js
cmp
and
mov
xchg
cmp
xor
mov
imul
shlb
hlt
pop
xlat
or
xor
fidivs
shrl
mov
inc
scas
pop
mov
loop
movsb
int
fwait
mov
jle
les
add
imul
push
add
insl
push
jge
mov
xchg
jnp
adc
mov
mov
mov
negl
shll
gs
aam
push
stc
cmpsl
addr16
push
adc
mov
push
jp
dec
mov
jns
stos
sbb
and
test
mov
pushf
arpl
mov
mov
dec
es
into
inc
mov
adc
or
mov
mov
loop
mov
push
cmc
in
les
mov
cmpsl
test
mov
pop
mov
push
arpl
daa
movsl
shrb
mov
test
cmpl
negl
mov
push
jnp
call
cwtl
mov
daa
mov
jmp
shlb
mov
xlat
and
adc
adc
scas
xchg
jmp
dec
outsl
push
jns
xchg
divl
xchg
addr16
xor
test
daa
pop
mov
sbb
xchg
jp
jns
mov
dec
hlt
test
pop
xchg
clc
mov
jecxz
cmp
ds
pushf
pop
je
scas
loope
adc
lret
jle
cwtl
push
pusha
pop
shrd
xlat
push
pop
into
daa
popf
shrl
ja
fadds
dec
push
mov
add
add
mov
js
cmpsl
divl
lods
fnstenv
int
dec
mov
sbb
cmp
cld
repnz
push
jge
pushw
mov
pop
lods
sub
scas
mov
mov
ja
repz
pusha
xor
aas
stos
sbb
cs
decb
xlat
mov
adc
mov
xor
sbb
daa
shll
lods
push
cmpsl
lock
pop
aaa
xbegin
push
hlt
test
push
inc
mov
mov
inc
std
int3
mov
scas
aas
cwtl
or
inc
stos
mov
lods
negl
mov
xor
jns
mov
hlt
movsb
pop
add
jno
sbb
jg
mov
cwtl
pop
and
movsl
jmp
push
mov
stos
or
icebp
adc
jnp
leave
mov
jne
out
sbbl
mov
xchg
mov
xor
jns
js
sti
fcmovb
icebp
sbb
mov
scas
cmp
mov
mov
mov
cs
adc
rcrb
push
cs
pop
pop
mov
fcoms
shll
dec
lods
cmpsb
cmp
imul
insl
mov
fisubs
dec
cwtl
call
in
test
dec
sub
add
sbb
xchg
sub
mov
xorl
mov
gs
jae
jp
mov
sbb
test
mov
or
sbb
pop
or
mov
jne
cmp
jns
arpl
adc
lods
mov
mov
fdiv
insl
adc
jbe
mov
andl
fwait
sarl
lods
popa
mov
mov
cmp
mov
cltd
ss
fstps
daa
dec
pop
shlb
pop
dec
mov
scas
mov
mov
inc
ja
pop
pushf
or
outsl
sub
mov
inc
lret
fwait
dec
ss
mov
add
fdivs
repnz
mov
testb
add
icebp
pop
test
bound
mov
js
pop
or
xlat
flds
add
cld
test
dec
fwait
sbbb
mov
mov
movsl
aas
ja
imul
push
movsb
adc
out
lcall
mov
push
sbb
push
jl
push
sahf
pop
data16
scas
out
pop
shlb
mov
gs
mov
push
fcompl
fisttps
mov
mov
add
or
jmp
cmpsl
mov
xchg
out
ja
shll
jno
xor
insb
call
adc
and
and
sbbb
lods
lods
or
movsl
notl
popa
ds
aad
scas
mov
xor
and
dec
sbb
mov
je
xor
rcrl
aas
add
xchg
lods
into
xor
repz
push
mov
adc
jb
add
popf
dec
xchg
mov
insl
mov
movsl
add
rorl
pop
stc
jns
adc
sbb
add
outsb
sarb
and
iret
jae
test
mov
xchg
cmp
push
xchg
mov
lods
sub
mov
cmp
test
data16
rcrb
and
bound
or
inc
xorl
mov
fsubrl
aas
xor
mov
prefetcht0
xchg
icebp
imul
mov
mov
mov
mov
mov
mov
jo
popl
mov
and
cmpsl
mov
cltd
cltd
scas
enter
stos
jo
mov
das
ja
in
mov
icebp
js
lds
mov
mov
xchg
push
mov
aad
sub
xchg
test
mov
test
bound
sub
xchg
cmp
jl
push
xchg
aaa
fnsave
cmpl
cmp
sub
push
or
je
divb
hlt
xlat
lret
xchg
pop
and
jnp
cmp
mov
and
mov
movsl
push
adc
jecxz
mov
xor
fs
mov
dec
or
ja
sub
jno
dec
sbb
cmpsl
repnz
mov
pop
negb
mov
xchg
imul
mov
cmpsb
mov
xor
mov
movsb
inc
sbb
cli
add
push
dec
and
mov
pushf
cmpsl
sbb
or
arpl
or
loope
mov
jg
cmpsb
inc
outsl
jge
mov
mov
pop
mov
cmp
outsl
test
mov
popa
sub
negl
mov
jae
cmp
or
test
push
xchg
sub
xchg
inc
daa
mov
mov
out
jnp
or
xor
dec
ret
xlat
scas
mov
pop
daa
cld
xor
stc
cwtl
dec
enter
xlat
loopne
std
mov
push
ja
insl
cmp
fwait
jns
pop
cmp
mov
jne
ss
jns
flds
test
stos
rcr
jge
mov
inc
jg
nop
cs
mov
les
and
outsb
jge
aad
pop
call
lods
sub
mov
aas
mov
jl
jg
mov
ja
mov
mov
insb
repz
imul
shll
clc
mov
stos
sbb
xchg
flds
mov
pop
movsb
leave
mov
xorl
aaa
push
jecxz
outsl
sarl
mov
xchg
movsb
xchg
inc
out
mov
les
shll
mov
lret
sub
cltd
mov
adc
adc
test
mov
xlat
sbb
adc
leave
mov
jg
fcmovbe
xor
and
mov
sahf
shrl
cmc
mov
mov
mov
rcll
mov
mov
inc
aas
sub
dec
mov
jnp
mov
inc
mov
mov
mov
and
dec
xor
popa
fidivs
scas
fldt
mov
loopne
insb
daa
dec
mov
jns
lret
divb
mov
pusha
mov
xlat
mov
mov
decl
notb
xlat
cmpb
shll
jg
aas
sbb
cmpsl
imul
adc
jo
mov
jne
loopne
dec
mov
mov
fsts
ficompl
mov
lods
pop
dec
clc
cmp
into
sub
xchg
scas
pop
fisubrs
outsb
or
dec
int3
and
icebp
pop
daa
pop
loop
cmpsl
mov
adc
fidivl
test
add
sbb
fwait
xor
mov
orl
cmpsb
mov
test
adc
cmp
jnp
inc
scas
scas
int
cs
sub
and
repz
dec
sbb
icebp
adc
xor
jns
jecxz
std
stos
outsl
sub
pop
negl
insl
pextrw
loop
push
repz
mov
mov
lea
shl
mov
pop
and
xchg
subl
cmpsl
out
jns
pop
mov
imul
stc
ja
mov
mov
pop
icebp
mov
lods
mov
sarl
mov
adc
lods
or
cmpsl
jp
pop
pop
mov
push
push
adc
in
dec
mov
dec
mov
jecxz
test
mov
pop
cmpsl
mov
inc
mov
push
push
jae
push
add
push
mov
data16
sbb
adc
pusha
jae
movsb
push
iretw
in
enter
or
mov
mov
sahf
fnstenv
lret
push
pusha
cwtl
in
loope
sub
mov
mov
into
or
jmp
mov
stc
sub
sbb
jnp
xor
cmp
jmp
mov
mov
xor
rcll
inc
mov
cmpsl
xchg
push
jno
sbb
movsb
pop
popf
ret
test
xlat
stos
xchg
mov
and
mov
sbb
ja
popf
push
mov
clc
mov
sti
mov
push
fnsave
mov
out
repnz
dec
lret
and
mov
mov
andl
push
xlat
outsl
repnz
cli
inc
out
pop
cwtl
mov
sbb
xlat
imul
cmp
mov
shl
xor
arpl
pusha
fdivs
sbb
insl
mov
daa
mov
idiv
rcrl
jno
jge
fidivl
sbbb
sbb
loop
cmpsl
mov
push
fists
jp
mov
sbb
movsb
int3
mov
aad
push
loope
stc
mov
jp
arpl
xchg
loopne
clc
fst
xchg
orb
test
movb
fbld
repz
dec
jnp
test
lea
sbb
push
inc
sbb
je
out
mov
icebp
outsl
bound
adc
inc
ja
stc
push
movsb
std
pop
xchg
into
lods
scas
adc
das
mov
pop
lock
xor
mov
ror
add
fdivrl
push
rorl
and
push
leave
rorb
mov
nop
popf
loopne
mov
mov
sub
lock
ljmp
jae
shlb
sti
mov
mov
mov
cmpsl
cmc
mov
mov
mov
arpl
mov
push
test
mov
xor
mov
xlat
sub
cmp
sbb
fsubrl
jg
mov
call
decl
jnp
push
xchg
pop
sbb
dec
push
lods
jmp
stc
jg
aas
sbb
dec
cltd
shrl
es
inc
cmp
lods
fwait
sbb
es
cli
xor
sub
lret
push
test
add
jl
ds
jle
sbb
mov
mov
cmpsl
shrb
xchg
cli
dec
xor
ja
inc
mov
out
not
push
movsb
mov
repz
cmp
xchg
or
push
imul
inc
lret
jmp
movsb
sub
jnp
rol
mov
and
or
ja
dec
push
mov
cmp
fxch
mov
pop
mov
xchg
cmc
add
sub
aam
add
icebp
push
aad
sub
shlb
sbbl
cmpsl
mov
in
stos
sub
xchg
leave
cmp
adc
sub
mov
and
into
jge
adc
cmp
cli
push
mov
mov
cmp
in
addr16
lahf
outsl
scas
sbb
inc
pusha
movsl
cs
mov
lret
add
fucomp
mov
and
in
fwait
cmc
mov
fwait
jno
add
push
mov
aas
loopne
fmuls
mov
or
mov
fcompl
mov
call
in
fwait
mov
jns
sub
std
aas
jae
div
inc
scas
sub
scas
mov
sub
out
push
fcomps
dec
or
pop
mov
mov
mov
cwtl
das
cmpsl
stos
stc
mov
mov
pop
fists
mov
iret
leave
jp
and
cmpsb
mov
mov
test
arpl
into
cmpsb
das
dec
mov
inc
dec
mov
add
push
mov
popa
stos
js
movzwl
lds
fildl
xor
cwtl
jmp
addr16
sub
mov
inc
test
jbe
xlat
fisubl
push
lds
inc
jae
test
lcall
or
int
aas
xor
shlb
test
lea
sahf
adc
in
mov
aas
stos
sbbl
or
mov
movsl
nop
mov
mov
mov
mov
rclb
mov
cs
xchg
aam
cwtl
ret
shll
dec
mov
mov
out
mov
iret
sub
lahf
inc
jl
pop
fucom
mov
add
stos
adc
cmp
cmp
rcll
push
mov
jns
jg
stos
mov
fcomip
aas
adc
leave
mov
andb
jns
jnp
xlat
test
enter
fimull
stc
mov
outsl
jnp
mov
inc
int3
push
mov
js
pop
hlt
mov
lcall
mov
add
fsts
fldt
call
mov
stos
sub
icebp
je
fsubrs
xorb
mov
in
pop
pop
rorb
jecxz
ret
mov
sub
aaa
daa
or
xor
lea
cmp
and
decl
dec
jb
xlat
xor
inc
or
mov
fldt
and
loopne
dec
inc
cmp
cmp
push
mov
inc
mov
out
jo
xchg
pop
xor
inc
sub
jge
mov
jmp
inc
mov
daa
fdivrs
adc
fistpl
push
add
out
xlat
sbb
stc
in
mov
js
icebp
jge
mov
cmp
int
jle
stos
sbb
mov
mov
test
pop
inc
jp
adc
imull
out
mov
data16
push
ret
adc
cmp
mov
aad
adc
mov
cmp
lcall
dec
daa
dec
push
and
jp
xchg
lret
cli
xor
pop
cmp
xchg
scas
xor
test
mov
out
loop
mov
test
fs
out
mov
pop
cmp
xchg
mov
jle
and
mov
pop
inc
pop
xchg
movhps
bound
ret
mov
mov
les
or
ret
add
fistpll
neg
sbb
mov
js
mov
jae
iret
outsb
xchg
push
mov
loopne
icebp
mov
add
mov
scas
mov
add
lret
mov
and
xlat
sbb
mov
ja
cwtl
and
scas
setns
mov
into
dec
push
lahf
inc
popa
inc
jne
mov
iret
scas
out
jnp
divl
and
roll
xchg
mov
push
push
and
mov
inc
and
jns
fwait
imul
popf
clc
mov
mov
mov
in
mov
xchg
push
cltd
and
mov
divb
bound
ret
mov
aaa
test
test
lods
dec
lret
cmp
mov
mov
fwait
sub
mov
lret
es
ret
cli
js
mull
mov
xor
adc
jns
jg
mov
scas
dec
and
jns
and
adc
fxam
ja
mov
fwait
stos
mov
in
std
sbb
mov
mov
shrb
inc
jo
jl
mov
xchg
push
add
xor
std
sbb
mov
ficoml
push
idivl
sarb
out
out
scas
jns
imul
and
in
mov
cmp
mov
inc
mov
add
outsl
testl
lret
push
mov
pop
out
fwait
dec
cs
scas
sub
mov
jae
jne
sbb
and
arpl
lret
stc
xlat
mov
loope
fisubrl
mov
leave
cmpsb
cmp
sarb
movsb
mov
or
pop
xlat
dec
hlt
xlat
xchg
jg
call
test
inc
jecxz
pop
sahf
mov
je
testb
rcrb
daa
insl
add
mov
jno
pop
mov
shl
xchg
mov
and
test
push
mov
jbe
nop
mov
mov
repz
insl
enter
pop
in
mov
mov
or
mov
xor
lods
xor
popa
mull
hlt
fisubrs
cmpl
pop
stos
mov
jg
mov
fnsave
add
jne
mov
cmp
rol
mov
push
cmpsl
fcomp
and
xlat
pusha
lcall
stos
lods
pop
test
jbe
fdecstp
adc
xlat
cld
arpl
inc
sub
xor
pop
negl
xorb
or
xchg
mov
loope
cmp
lret
cwtl
push
mov
sub
outsl
lods
dec
mov
nop
jmp
and
mov
mov
imul
inc
mov
jnp
push
pop
cwtl
arpl
xor
mov
pusha
mov
dec
fsubrl
mov
sar
arpl
mov
pop
sbb
insb
add
out
adc
push
push
repz
pop
or
jns
sbbb
mov
and
dec
mov
jmp
cmp
iret
cli
or
pop
xor
call
loope
mov
scas
lods
aas
mov
inc
hlt
stos
pop
enter
pop
sti
cwtl
icebp
adc
je
repnz
fistl
jo
nop
mov
sbb
sbb
call
int3
cmp
addl
sbb
jmp
fcompl
mov
or
fnstenv
cmc
mov
dec
mov
xchg
mov
sub
pushf
movsl
inc
push
inc
cmp
sahf
cs
mov
xchg
mov
cwtl
jno
ja
push
cmpsl
clc
fdivl
aaa
popf
mov
inc
jae
jecxz
mov
pushf
mov
mov
leave
mov
and
or
sub
ja
and
test
ret
les
jb
dec
shll
inc
popf
les
mov
mov
mov
aaa
subl
mov
movsb
mov
sbb
movsl
test
lods
inc
into
cltd
rcrb
scas
addr16
int3
scas
shrl
das
out
adcb
data16
jae
scas
dec
pop
subl
popf
xchg
push
inc
and
insl
mov
cli
sub
ja
mov
daa
mov
mov
fisubl
dec
xchg
push
adc
scas
add
mov
fdivs
xchg
icebp
jg
scas
or
test
aad
fsts
add
sbb
movsb
mov
rcrb
mov
mov
mov
push
cmpsl
mov
fwait
out
inc
push
das
mov
aas
fbstp
mov
test
push
clc
jmp
jg
mov
mov
inc
notb
loop
cmp
mov
or
sbb
xchg
pushf
jbe
mov
in
adc
push
pop
xchg
sbb
mov
mov
pop
mov
xchg
sbb
and
push
cwtl
dec
jb
js
mov
popa
sbb
aaa
sbb
mov
call
fwait
mov
mov
jne
fiaddl
mov
mov
icebp
dec
jbe
mov
xchg
push
or
mov
adc
mov
gs
cwtl
mov
iret
inc
int
frstor
lods
cltd
xchg
cmpsl
mov
push
mov
adc
mov
das
enter
pop
mov
fs
into
push
out
xchg
xor
jb
mov
pop
mov
ja
mov
daa
out
fistpl
xor
enter
loopne
mov
push
sub
je
mov
stos
mov
xlat
shlb
xor
xchg
add
pop
and
imul
aas
mov
mov
leave
mov
mov
scas
sar
mov
out
int3
sbb
mov
sub
mov
cmp
jnp
sbb
jno
xorl
insl
repnz
push
ss
xor
mov
repz
divb
or
lds
mov
in
pop
pop
cmp
and
outsb
dec
fs
jg
inc
lods
mov
mov
mov
fdivrl
mov
ja
cmpb
mov
xor
shlb
testl
ja
loope
test
fwait
scas
mov
xorl
jns
cmpsl
mov
inc
scas
mov
jecxz
or
pop
mov
imul
sub
mov
ja
test
lahf
and
test
xor
into
push
sbb
jns
add
xorl
jo
cmpsl
adc
mov
test
adc
sbb
mov
push
ret
movsb
push
add
xchg
into
xor
or
int3
adc
imul
outsl
nop
or
jnp
mov
push
int3
addr16
mov
jns
mov
mov
aad
jnp
icebp
or
aas
ljmp
ret
dec
jnp
int
pop
icebp
jmp
push
mov
adc
xchg
hlt
jnp
lahf
add
mov
push
ljmp
mov
out
mov
inc
push
mov
xchg
pop
push
mov
jmp
insl
orb
or
add
sub
xchg
mov
inc
sbb
jp
fwait
bnd
xchg
adc
icebp
jge
pop
scas
jl
mov
add
nop
pop
mov
adc
outsb
mov
inc
fs
test
push
mov
or
jo
xchg
xorb
dec
pop
scas
lods
push
cwtl
xor
mov
rorb
mov
js
or
fmul
lahf
out
sbb
addr16
pusha
and
mov
mov
das
xlat
mov
inc
fwait
cmp
subl
lahf
add
outsl
jl
mov
jecxz
movsl
clc
adc
repz
xor
jge
fisttpll
xor
xlat
subl
nop
mov
cmpsb
mov
push
adc
outsl
scas
aaa
mov
jne
mov
mov
bound
sahf
out
je
stos
or
push
fidivrs
out
xor
mov
mov
adcl
pop
sub
fsub
aad
and
mov
fcompl
xorb
jae
divl
push
decb
sets
hlt
fcmovnb
mov
mov
iret
and
pop
lret
ja
mov
les
push
mov
xor
sbb
hlt
pushf
rcl
mov
xlat
das
mov
fistpl
pop
repz
fsub
cmpsl
or
mov
aad
lahf
mov
fidivl
adc
leave
jmp
pop
jge
mov
mov
and
mov
fs
mov
jp
sbb
das
add
stos
pop
pop
test
jns
mov
mov
out
xchg
stos
and
jmp
fisubl
pop
mov
or
cmpsb
and
sbb
jmp
mov
cli
cltd
inc
aaa
jp
mov
ljmp
sub
lret
cmp
movsl
test
int3
sbb
xlat
or
adc
mov
mov
sahf
mov
mov
test
mov
xchg
imul
cltd
stos
test
lea
mov
iret
xchg
xchg
adc
scas
or
and
mov
lret
into
sbb
jmp
xchg
jnp
mov
scas
inc
push
adc
mov
or
fidivl
pop
sti
and
dec
mov
fldenv
push
movsb
adc
es
and
inc
jo
jae
xor
loopne
and
pop
xorl
adc
mov
xchg
or
mov
mov
arpl
mov
add
mov
jns
imul
jg
insb
cmpsl
out
test
fwait
data16
mov
divb
mov
mov
xchg
mov
dec
stos
ss
icebp
pop
dec
pop
in
mov
mov
xor
adc
lds
mov
mov
imull
xor
scas
sbb
mov
dec
xchg
jle
fwait
cmp
or
in
mov
popa
mov
mov
push
das
js
xor
ret
mov
pop
cltd
pop
add
sbb
mov
cltd
cmpsl
mov
imul
mov
sub
mov
cmpsb
fs
dec
fwait
movsb
adc
mov
test
jnp
sub
lock
pushf
cmpsl
popa
scas
jmp
popf
cmp
xor
mov
mov
mov
addr16
mov
adc
sub
fxtract
insl
or
loop
es
mov
outsl
push
ret
mov
stos
xor
icebp
add
inc
mov
pinsrw
adc
add
stos
cwtl
cltd
adc
push
jecxz
mov
lcall
mov
jp
adc
pushf
adc
mov
neg
mov
in
lahf
jnp
ja
cltd
test
mov
shlb
aad
clc
decb
xor
mov
fs
xor
arpl
mov
sbbb
mov
fcmovne
mov
cmp
ss
jge
stos
negl
and
or
xchg
mov
aas
daa
cli
xchg
rorl
and
divb
rcll
jle
bound
mov
nop
or
aas
sbb
mov
xor
stos
call
mov
jns
int
jne
arpl
sbb
mov
cmp
inc
aad
xorb
sbbl
jns
fidivl
loopne
out
enter
mull
push
test
xorb
xchg
cmp
cld
pop
mov
nop
mov
mov
pop
sbb
push
shlb
jno
mov
inc
cmp
add
nop
pop
mov
sbb
jl
repnz
neg
push
int
fistps
mov
xchg
xor
stos
bound
sarl
icebp
popf
das
xchg
sbb
xlat
popa
mov
sar
push
movsb
mov
mov
mov
add
repnz
andb
jmp
sbb
aas
push
adc
imul
pushf
lahf
cmc
fsubl
pop
adc
jnp
daa
mov
je
lahf
xor
fidivl
fbstp
cmpsl
into
inc
mov
mov
pop
hlt
and
imul
cli
sub
xor
sbb
jbe
inc
inc
adc
add
outsl
pusha
sbb
push
je
jne
xor
sbb
cwtl
add
shlb
mov
imul
jae
cmpsl
mov
cli
push
mov
ficoms
mov
pop
cli
sub
imulb
mov
test
dec
insb
cltd
jle
mov
adc
xor
stos
daa
shlb
cltd
lahf
add
insl
sti
mov
jne
movsl
sbb
adc
push
jbe
dec
sub
mov
dec
nop
aaa
fs
lret
out
pop
insl
cwtl
pusha
fdivl
dec
je
sbb
dec
push
sbb
fbld
sti
push
jg
mov
inc
cltd
push
dec
and
mov
sub
fstl
or
xor
xchg
scas
jmp
aam
in
inc
cli
mov
sub
jmp
mov
mov
outsb
xchg
mov
mov
mov
inc
lods
adcl
ret
popa
les
push
pop
cmp
xor
mov
les
jns
fdivrl
icebp
xor
cmp
mov
iret
xchg
xchg
fidivs
cmpsl
jns
xor
mov
mov
icebp
out
inc
out
das
fwait
iret
ss
xchg
daa
lahf
scas
and
jne
dec
xor
scas
add
cwtl
sbb
stos
movsb
jae
sbb
sub
ret
mov
pop
imul
add
push
inc
dec
sub
inc
mov
pop
xchg
mov
jno
data16
mov
mov
daa
dec
out
xlat
inc
and
inc
mov
cmp
dec
mov
lea
jge
movsl
cwtl
and
cmpsl
or
mov
mov
sub
push
repz
mov
jp
scas
aam
dec
mov
out
jnp
shlb
mov
loopne
ror
cmc
xor
hlt
out
push
aaa
and
test
cmpsl
pop
les
movsb
push
fdivs
imul
mov
and
int3
jp
pushf
mov
sbb
mov
lods
dec
mov
lret
fldcw
and
repnz
stos
addr16
mov
pushf
les
bswap
sbb
loop
aad
arpl
cmpsl
mov
sbb
fwait
ljmp
stc
xchg
jne
pop
sub
mov
xor
jnp
jb
cmpsl
scas
mov
mov
push
add
mov
cmpsb
lock
lods
addr16
mov
pop
mov
outsb
clc
mov
jmp
cli
xchg
lahf
push
daa
mov
ret
xchg
call
inc
mov
cmovge
mov
es
lods
fcoml
mov
sbb
jnp
inc
xor
and
cli
pop
pop
sub
insb
addr16
int
mov
cltd
test
xor
push
sbb
mov
addr16
mov
test
rorl
cmpsl
mov
cltd
xchg
add
push
cmp
stos
mov
mov
arpl
xlat
xchg
pop
test
mov
adc
jns
fsubp
stos
lret
aas
pop
mov
xor
nop
xor
and
stos
rolb
movsl
sub
stos
add
cli
cmp
mov
jae
cli
movsb
mov
icebp
and
jle
mov
rolb
insl
test
mov
adc
lcall
sub
mov
sbb
sub
adc
mov
push
addl
mov
and
outsb
mov
pop
sti
nop
test
and
jns
jg
jmp
cltd
mov
fwait
fwait
cmp
scas
std
seto
cmpl
mov
xlat
sbb
aas
mov
xchg
sbb
shll
imul
dec
lcall
icebp
fwait
jb
daa
cmpsl
mov
shl
andb
mov
idiv
pop
dec
push
jnp
sbb
push
daa
flds
mov
into
xchg
xor
push
jo
xchg
cltd
cmp
loop
inc
xchg
pop
cmp
push
xorb
outsl
cmp
mov
out
adc
xchg
lea
movsb
cwtl
test
rcr
push
mov
popf
arpl
jnp
je
mov
sub
jbe
xor
aaa
mov
cwtl
stc
mov
daa
ja
cmpsl
rcr
mov
mov
lds
xlat
mov
movsb
in
into
mov
test
mov
cltd
xchg
gs
jnp
xlat
and
aaa
in
cmpsb
movsl
mov
xchg
sub
cmp
icebp
or
ds
mov
xchg
sarb
sub
imul
testb
movsl
es
addr16
daa
scas
sbb
jg
mov
stos
sbb
cwtl
mov
inc
inc
jo
scas
mov
lret
jmp
cmp
mov
in
sahf
jne
cmp
inc
mov
jecxz
pop
pop
mov
cmp
add
xor
xchg
es
mov
inc
mov
add
xor
sub
cmpsl
cmp
test
lcall
pop
inc
jbe
jae
lds
mov
jb
stos
jne
int3
adc
test
dec
insb
aaa
mov
jmp
orb
arpl
jp
sbb
mov
sbbb
bound
icebp
pop
mov
inc
mov
js
test
aaa
lods
enter
mov
iret
icebp
add
fwait
movsl
xor
mov
jb
sbb
push
adc
aaa
mov
das
jb
mov
jb
push
mov
sub
mov
xchg
adc
scas
mov
pop
fxch
mov
orl
jnp
adc
shll
mov
iret
mov
sbb
leave
cmp
cli
xor
xchg
movsl
xor
cs
mov
inc
pop
cwtl
xor
rorb
pop
mov
in
sbb
int
xchg
andl
push
mov
and
sbb
mov
in
push
add
mov
cmp
inc
sti
incb
add
inc
repz
cmp
rcrb
sbb
cmpsl
clc
stc
out
lahf
add
pop
pop
inc
repnz
mov
sbb
out
and
enter
mov
pop
movsl
es
stc
and
inc
add
mov
fidivrs
mov
mov
mov
mov
push
aas
mov
or
aaa
mov
mov
push
xor
adc
aaa
fs
fistl
into
xchg
ljmp
ret
aad
jae
aaa
adc
cld
lock
pop
test
jnp
adc
clc
sub
int3
call
ja
add
gs
jge
nop
lods
push
push
mov
and
adc
jno
pop
xchg
scas
stc
fcmovnbe
imul
mov
dec
pop
push
jmp
les
adcl
mov
jne
leave
inc
mov
mov
dec
xchg
mov
dec
fldl
ficoml
imul
sahf
pop
mov
push
mov
inc
lret
xchg
mov
sub
shll
ret
xchg
jnp
mov
cltd
das
dec
xor
mov
cmc
mov
test
mov
mov
sbb
insb
stc
popa
xlat
mov
jo
ror
xchg
movq
test
inc
test
mov
movsl
dec
xchg
push
shlb
mov
inc
icebp
leave
cwtl
push
js
xchg
filds
fcoml
or
xchg
bound
jg
mov
pop
and
jns
aad
sarl
dec
cli
and
mov
or
dec
xorl
xlat
lods
lea
mov
insl
ja
xlat
cmp
cwtl
pushf
pusha
lods
aaa
cld
push
lahf
add
pop
addr16
mov
orl
dec
lods
mov
imul
mov
push
or
fsubp
xlat
add
dec
xchg
jns
mov
outsl
divl
cmpb
stos
lret
push
sbb
xchg
mov
adc
mov
cmp
movsl
pushf
xchg
call
lods
stos
xrelease
mov
scas
inc
fdiv
mov
mov
leave
or
and
sbb
shll
imul
in
pop
mov
dec
sbb
je
lret
mov
add
testl
mov
mov
cmpl
mov
mov
sbb
in
lret
mov
sbbl
pop
pop
adcb
xchg
jg
add
or
xor
mov
std
arpl
pop
cld
mov
xlat
out
xor
insl
mov
and
adc
aam
ret
fs
jl
pop
repz
pop
push
jne
add
mov
loopne
dec
testl
insb
rolb
icebp
jnp
outsl
mov
mov
jnp
data16
mov
push
mov
pop
sbb
mov
vpbroadcastmw2d
jge
fs
pop
les
pop
mov
loop
in
mov
mov
test
lahf
inc
sbb
clc
dec
xorl
mov
cmpsb
mov
test
in
mov
mov
addl
mov
sbb
adc
push
loopne
repz
mulb
jnp
add
ret
jae
mov
jmp
jae
nop
mov
adc
mov
jno
stos
repnz
addr16
cwtl
push
xor
push
pop
xchg
mov
daa
mov
xchg
pop
jg
lret
cltd
aas
jnp
lahf
fistps
push
mov
mov
sbb
enter
ljmp
aas
cmpsl
icebp
adc
jge
mov
mov
lret
adc
arpl
cmp
or
pop
and
jnp
mov
xlat
mov
inc
subl
cmpsl
jge
test
mov
daa
cwtl
or
mov
lods
mov
mov
and
mov
cli
inc
stos
adc
jo
jp
jns
mov
scas
pop
and
cmp
sub
stos
jp
push
stos
mov
repnz
shll
jbe
jmp
icebp
and
mov
cmp
mov
mov
jmp
push
test
ret
rcrb
mov
rep
icebp
xor
push
cltd
sub
push
mov
faddl
cltd
ret
mov
mov
enter
sbb
mov
xor
jecxz
test
into
mov
inc
in
dec
fld
xchg
jg
shrl
je
out
or
mov
faddl
fstl
push
movsl
sarb
mov
test
dec
add
mov
xor
xchg
jnp
inc
jl
sub
mov
int3
test
add
jle
jge
shlb
pop
sti
mov
dec
push
addl
cmp
adcb
mov
mull
fs
cmp
sub
ficomps
add
pusha
xor
and
and
push
mov
push
lret
les
inc
mov
and
dec
inc
pop
push
inc
add
pop
mov
add
pushf
adc
inc
mov
mov
sbbl
movsl
sub
inc
adc
cs
arpl
test
sbb
pop
mov
ja
cmp
or
mov
mov
andl
ljmp
mov
ficoml
aam
pop
fcmovnb
mov
faddl
mov
and
fs
xor
popf
mov
mov
lds
pop
outsb
jb
xor
lret
scas
call
add
bt
sbb
cmp
push
mov
test
inc
inc
jp
insl
jne
mov
mov
imul
leave
ret
mov
push
or
inc
mov
lea
inc
sub
cs
push
xchg
push
mov
cmp
mov
mov
jmp
mov
fdivrs
push
push
mov
mov
cwtl
sbb
add
repz
into
jbe
add
mov
leave
int3
adc
cwtl
cmpsl
push
jne
or
push
mov
je
mov
pusha
fldl
xchg
pop
jge
divl
mov
cld
xchg
mov
add
ficompl
lods
cmpb
sub
stos
fimuls
cmpsl
xchg
out
ret
add
and
icebp
or
sub
mov
cwtl
lods
ficoml
push
rcrb
fwait
push
jns
add
push
arpl
xchg
cmpsl
mov
aas
add
gs
movsb
test
fwait
xor
mov
mov
aaa
out
lahf
cmpsl
dec
or
mov
jno
pop
imul
shlb
pop
outsl
js
mov
lods
jae
cmpsb
or
mov
mov
xor
cmpsl
out
add
pushf
mov
mov
mov
xlat
cmp
iret
gs
lahf
xor
pop
inc
cmp
divl
pop
mov
or
scas
cmp
paddw
clc
fsubrs
stos
cmp
stos
jg
xor
test
mov
or
xchg
ret
mov
je
mov
mov
lret
jns
or
mov
pusha
mov
mov
mov
sub
mov
divl
dec
jge
mov
mov
adc
daa
outsl
mov
mov
ds
pushf
fsubrs
add
insb
std
lret
arpl
fiadds
push
mov
ds
out
das
mov
and
mov
cltd
cmpb
push
popa
xchg
jae
lahf
dec
orl
mov
call
mov
fstpl
jge
xchg
loopne
cmp
ja
jns
pop
daa
pushf
fmuls
cmc
js
xorl
mov
or
aas
xorl
or
ss
cwtl
xor
ret
mov
call
dec
xor
leave
mov
stos
test
mov
loopne
arpl
outsl
int3
ja
xchg
sbb
lods
push
mov
iret
sbb
fs
imulb
xchg
mov
adcl
and
sbb
mov
insb
or
fdivs
push
push
xor
rcrl
jns
int
push
cmp
adc
mov
xor
aam
lods
add
pop
add
popa
pop
fsub
mov
cwtl
sbb
jns
xlat
inc
insl
mov
enter
popf
rcrb
mov
mov
ror
jg
cmp
int3
ficompl
mov
jae
mov
or
ljmp
hlt
adc
daa
ret
cmp
mov
das
jle
xchg
adc
pushl
cmpsb
fistpl
lahf
sarl
and
mov
lcall
push
mov
xor
jns
pusha
loope
mov
sbb
in
mov
mov
cmpsb
xchg
fidivrl
xor
scas
fdivl
arpl
mov
and
notb
sbb
sbb
adc
dec
sbb
mov
insb
and
cmpsl
push
and
mov
imul
mov
js
sbb
push
pop
arpl
addps
sbb
int3
mov
or
pop
add
sub
sub
sbb
ljmp
push
xlat
mov
lods
mov
sub
jns
jno
fwait
sarl
xchg
test
xlat
jnp
push
out
lods
or
mov
mov
daa
lods
add
sub
fmull
pop
inc
jns
add
cmp
dec
xlat
cld
mov
stos
out
ja
testb
ficompl
jne
subl
fwait
mov
sahf
stos
iret
lods
cbtw
movsl
loopne
test
movsl
call
push
or
mulps
adc
in
cwtl
push
jno
fadd
lods
fiadds
adc
sbb
out
aas
jl
ss
add
mov
mov
addr16
ja
xor
arpl
mov
adc
das
cltd
xlat
scas
test
fidivl
mov
mov
mov
lods
push
popa
mov
sub
lret
imul
jnp
push
mov
adc
add
lods
test
ret
mov
push
outsb
add
mov
imul
cmpl
sub
dec
stc
into
in
push
mov
sarl
mov
xor
scas
popa
test
movsb
mov
cmp
fstpl
pop
jno
mov
leave
or
xchg
xor
xlat
daa
fldl
cmpsl
fsubl
push
pushf
imull
inc
mov
jb
mov
testb
push
popf
fiaddl
or
push
mov
movsl
popa
add
jp
lods
sbb
flds
jo
cmpsl
notb
les
cli
xlat
sti
dec
xor
mov
push
mov
mov
mov
fwait
outsb
mov
imul
mov
addr16
or
jnp
add
mov
lods
addl
adc
cltd
shlb
les
push
sbb
shrb
sbb
push
mov
outsl
sub
repz
mov
mov
jno
out
cmpsl
mov
xor
ficompl
test
cmpl
hlt
fdivrs
xchg
fistpll
push
cmpsl
inc
push
pop
cmpl
mov
shlb
xor
mov
or
mov
mov
lds
and
fnsave
movsb
ror
push
mov
xlat
fcompl
pop
mov
repnz
test
mov
out
cwtl
inc
push
movsl
mov
xlat
mov
popa
mov
jg
icebp
sub
lcall
loope
or
xlat
mov
jecxz
dec
mov
ds
or
fsubs
cmpsl
sub
icebp
mov
test
iret
inc
sarb
fwait
push
aaa
jb
mov
in
mov
mov
hlt
dec
inc
xchg
sbbb
int
xlat
adc
xchg
cmpsl
mov
inc
setbe
mov
mov
sub
mov
mov
xor
ja
mov
fs
popf
mov
jbe
xchg
jle
mov
jo
mov
xlat
inc
mov
mov
and
stos
jle
xlat
add
adc
pop
mov
mov
add
pop
mov
in
jb
jne
je
mov
out
ljmp
es
adcl
cmc
mov
mov
xchg
popa
jp
xchg
rcll
dec
xor
je
mov
int
mov
mov
lcall
push
or
xlat
inc
push
sbb
lock
sahf
add
imul
subb
mov
nop
repnz
pop
cmp
mov
data16
lcall
hlt
stos
lods
push
or
mov
cmc
cmp
loope
imul
mov
mov
shl
jno
bound
jo
insl
sub
mov
stc
inc
fnstenv
and
dec
xchg
pop
pop
mov
mov
jns
int
movsb
cltd
jg
push
cli
shlb
imul
and
loope
sbb
mov
icebp
lods
cli
std
lret
fsubs
mov
mov
ret
ret
lahf
test
nop
lret
sbb
push
mov
inc
add
jns
xor
shrb
mov
fdivrp
icebp
cmpsl
mov
and
jbe
idivl
mov
inc
movsb
xor
mov
jne
cmp
pushf
xchg
xlat
mov
movsl
icebp
mov
dec
ss
rcrl
inc
divl
fistl
aaa
or
push
mov
push
pop
jp
adc
xchg
mov
imul
test
jp
imul
dec
in
adc
cmp
test
in
jge
and
or
jg
mov
adc
jle
mov
dec
mulb
fsts
mov
mov
add
xor
dec
jge
cs
sbb
cmp
xor
xchg
cmpsl
push
mov
and
jl
int3
std
jnp
subl
jp
mov
sbb
pop
ret
mov
xor
push
mov
addr16
sbb
hlt
pusha
adc
test
shl
testb
xor
movsl
mov
ljmp
mov
outsb
fwait
jle
dec
cmpsl
fnsave
jecxz
cmp
sarb
les
and
adc
stos
jae
sub
mov
mov
popa
sbb
test
mov
out
or
test
fdivl
leave
mov
mov
out
pop
push
xchg
jae
inc
mov
or
and
jo
xchg
mov
jle
lahf
fimuls
push
mov
dec
xchg
cltd
pop
xor
test
mov
xchg
cltd
mov
adc
mov
jns
fiaddl
cmp
cmp
cmpsl
xchg
filds
mov
fnstsw
mov
xlat
out
or
mov
repnz
or
mov
sub
faddp
cmpsl
sbb
mov
pop
clc
mov
loope
daa
mov
scas
mov
shll
jns
mov
sbb
mov
repnz
ja
add
jo
ret
cmp
jnp
iret
xor
jnp
xchg
enter
mov
sbb
ja
fldenv
mov
orb
hlt
pop
negb
and
cwtl
repz
sahf
push
add
inc
mov
and
jns
push
in
jno
mov
icebp
xor
pop
cwtl
sub
push
sub
movsl
push
add
fnstenv
sbb
jp
xchg
xor
push
testb
scas
pop
addl
jge
inc
xchg
adc
lcall
hlt
addr16
inc
mov
jecxz
inc
sbb
outsb
sbb
int3
sahf
xor
mov
xor
icebp
outsl
in
mov
scas
dec
cwtl
add
out
xlat
pop
enter
stc
add
xor
in
mov
cmpsb
cmp
jl
fldt
lods
pop
aas
mov
mov
push
mov
and
xor
out
mov
daa
int
ret
mov
mov
outsl
das
mov
adc
jl
sbb
imul
inc
cltd
jmp
or
or
adc
push
scas
jbe
mov
test
push
repz
loop
and
xchg
xchg
xchg
movsl
addb
jmp
scas
mov
cmp
mov
loop
fstl
fiaddl
mov
movsb
into
cmpsl
xor
xchg
dec
das
stos
add
xchg
mov
fwait
sbb
jnp
mov
xchg
mov
fdivl
out
pop
pop
xor
sub
adc
xlat
mov
shll
faddl
mov
dec
es
lods
inc
lret
lcall
subl
aaa
dec
outsb
mov
fildl
pop
xchg
cli
es
aaa
jp
mov
rcr
sub
xchg
mov
xchg
mov
mov
pop
adc
fs
mov
inc
iret
call
cwtl
cmp
inc
movsl
mov
mov
adc
gs
mov
outsl
mov
icebp
in
sub
bnd
or
int
cmpsl
fwait
test
cmp
xor
xor
in
addr16
jg
daa
mov
popa
popf
repz
push
mov
gs
sbb
mov
mov
mov
ljmp
mov
push
rorl
jnp
and
xchg
mov
out
mov
ss
xor
jmp
imul
lods
loop
jmp
push
mov
inc
aaa
js
pop
idiv
mov
fists
jl
mov
mov
xor
mov
lahf
fwait
jns
inc
push
ja
add
popa
cmp
mov
test
mov
cmp
or
fstpl
mov
cmp
xchg
gs
xor
stos
stc
cld
push
xchg
xlat
ss
or
sbb
into
test
mov
jge
out
mov
sub
push
add
or
mov
push
mov
sub
xchg
mov
inc
mov
out
add
dec
mov
sub
xor
fsubrs
xlat
xchg
pop
subl
xchg
cwtl
push
cwtl
movsb
imul
xchg
mov
cltd
jo
cmc
cld
jge
mov
cmpl
das
xchg
mov
adc
sbb
daa
pop
xchg
jns
mov
mov
push
shll
leave
sbb
mov
lock
mov
out
dec
lahf
test
mov
data16
and
movsb
ja
sahf
sahf
mov
fiaddl
hlt
mov
int3
inc
loope
xchg
bound
test
mov
xlat
push
adc
movsl
xchg
out
lds
xchg
add
inc
pop
scas
xchg
leave
dec
cmpsl
mov
push
das
sarb
pop
dec
popa
add
hlt
sahf
or
xchg
icebp
or
inc
adc
mov
mov
sub
pop
mov
add
jl
jns
sbb
jmp
adc
sub
xor
ror
mov
popf
scas
cli
xor
mov
mov
or
push
movsb
mov
int
or
mov
movb
mov
sahf
sub
in
push
ret
xorb
scas
jnp
cmp
jne
cmpsl
dec
cmp
loopne
adc
cmovs
inc
lahf
fucomp
mov
test
mov
cmp
std
pop
call
mov
xorb
push
movsl
scas
lcall
es
lods
clc
pop
cmpsb
cmpsb
and
mov
fisttpll
sbb
pop
dec
ljmp
rcrb
jp
sahf
mov
mov
push
fildll
roll
das
xor
and
pop
call
xor
mov
fnstenv
mov
mov
adc
loop
pop
iret
mov
adc
xchg
repz
fimull
cmpsl
push
loopne
out
dec
mov
cltd
or
mov
add
pop
addr16
pop
xchg
outsl
sbb
test
sahf
cmp
sbb
push
xlat
fdivl
adc
stos
xlat
xor
shl
iret
pusha
push
xor
jns
push
jl
test
test
mov
mov
cwtl
test
mov
pop
mov
xlat
xchg
ficoml
push
mov
mov
adc
fsubrl
mov
scas
out
loop
test
sbb
insb
and
mov
inc
cmp
xchg
or
fistpl
lds
sbbl
mov
xchg
addr16
sbb
pushf
stos
cmpsb
dec
mov
mov
cli
pop
nop
xor
fwait
xlat
ret
sbb
push
mov
cmp
sub
mov
mov
insl
scas
scas
sub
lret
add
xor
data16
aas
cwtl
rclb
rolb
mov
rcrl
icebp
pusha
test
sub
cmp
add
pop
arpl
mov
mov
push
gs
pop
xlat
sub
cmp
int
jecxz
fs
cmp
insl
lcall
icebp
test
idivb
mov
sbb
inc
or
xchg
mov
imul
and
mov
pop
lds
jge
add
fwait
cmpsl
and
mov
scas
sahf
pop
inc
pop
mov
insl
int
mov
icebp
leave
bound
push
rolb
div
jg
repz
scas
sarl
xlat
mov
jo
ss
pop
xlat
movsl
test
arpl
pop
rclb
mov
mov
pop
jge
fcoml
shrb
mov
popf
adc
mov
hlt
mov
jne
cwtl
mov
push
mov
push
inc
fimull
mov
test
push
jns
mov
mov
shl
dec
and
push
insb
arpl
fwait
mov
push
icebp
mov
mov
xor
or
push
xchg
hlt
movsl
push
mov
loop
test
xor
xchg
dec
mov
pushf
js
call
push
jge
adc
cmp
inc
cltd
mov
andl
mov
mov
mov
cmp
xchg
jnp
mov
hlt
push
mov
xchg
jmp
lahf
mov
sbb
ds
fstl
cmp
push
mov
xor
ss
aas
mov
xlat
mov
lret
lock
test
mov
lods
sub
sbb
sub
or
adc
jo
scas
pop
fsubrs
fwait
cltd
push
mov
aas
xchg
lea
xlat
arpl
jae
lahf
push
xor
inc
icebp
jns
inc
mov
mov
aaa
leave
adc
movsl
fidivrs
sbb
inc
mov
xor
scas
mov
push
dec
xor
mov
push
inc
je
popf
stos
data16
mov
jns
fdivrl
mov
xor
jae
loop
sub
or
sti
xchg
add
fwait
and
scas
imul
xchg
ficompl
add
xor
sbb
cmc
mov
jnp
jne
stc
fcomps
insl
mov
ficompl
pop
fsubl
in
cmp
out
iret
popf
sbb
imul
mov
pop
lahf
mov
dec
clc
shrb
ret
orb
sbb
je
dec
jne
mov
cwtl
dec
into
das
adc
xchg
cltd
inc
jg
lret
mov
sub
aas
jmp
clc
lods
imul
mov
imul
mov
sub
sbb
fsubrs
testb
xlat
mov
imul
xchg
mov
data16
add
iret
je
adc
sbb
das
es
aad
lret
adc
loope
inc
adc
push
jl
int3
mov
arpl
cmp
dec
mov
addr16
jmp
pop
lcall
out
imul
push
das
jae
fwait
sarb
inc
aas
jp
or
jno
clc
add
data16
sbb
mov
pushf
scas
out
stos
dec
mov
mov
or
rcrb
or
daa
and
push
jnp
mov
sbb
mov
mov
int
imul
mov
xlat
jge
out
bound
ret
or
mov
aaa
arpl
mov
nop
cmp
adc
shlb
les
lea
jno
outsb
jae
lahf
push
push
mov
pop
xlat
loop
xchg
pop
push
mov
loopne
rolb
push
inc
stos
mov
loope
push
dec
adc
fwait
inc
xchg
jnp
popf
jns
dec
mov
out
out
mov
add
cmp
adc
jmp
sub
cwtl
pop
inc
cltd
int3
xor
testl
mov
cmp
jnp
xchg
loopne
mov
stos
icebp
sbb
add
mov
cmp
mov
mov
negb
and
sbb
sub
cmp
cmp
fwait
mov
stos
or
cli
mov
iret
loopne
push
xchg
dec
out
sub
adc
das
xchg
ss
sub
mov
pop
mov
mov
sbb
scas
sbb
out
cwtl
stos
fld
movsl
test
pop
xlat
adc
bound
loopne
pop
mov
inc
or
mov
in
daa
and
roll
mov
mov
cmp
xchg
sbb
mov
adc
test
jl
call
hlt
adc
sub
fisttpll
dec
sub
imul
sbb
sahf
sub
cmp
jae
sub
mov
mov
fadds
lret
xchg
xchg
loop
cltd
ljmp
ds
push
xorl
mov
cmp
fcomps
xchg
mov
negb
cmc
or
lret
or
repz
daa
sbb
adc
enter
mov
das
sub
adc
and
mov
xlat
jae
xlat
insl
fsubrs
mov
jnp
jle
into
sarb
mov
lds
cmp
adc
mov
pop
or
fistpll
movl
and
push
mov
outsl
xchg
repz
mov
movsl
add
xor
es
mov
inc
pushf
pop
jae
shlb
push
jmp
movsl
mov
push
popf
xorb
pop
xchg
int3
out
mov
fwait
lret
lahf
inc
dec
inc
cwtl
xchg
add
lods
sbb
daa
scas
sbb
fisttpll
mov
pop
ror
dec
xor
movsl
sub
daa
addr16
in
bswap
cmp
and
jb
pop
lds
xlat
add
xchg
mov
fidivl
cltd
sbb
pop
and
ficompl
test
dec
cmpsl
pop
xor
jp
adc
into
push
mov
jecxz
mov
gs
jl
and
ss
xchg
sbb
bound
xor
push
lret
mov
icebp
sbb
xchg
sbb
scas
loopne
xor
fdivrl
mov
add
cltd
mov
les
bound
cmpsl
notl
push
jg
mov
mov
fldt
mov
enter
xchg
mov
fs
ja
aaa
cmpsl
stos
cmp
dec
mov
or
mov
or
mov
lahf
jb
stos
pop
mov
sub
push
mov
mov
movsl
cmp
mov
shll
mov
pop
scas
lret
rcrb
pop
arpl
mov
sbb
stc
mov
in
mov
scas
adc
int
mull
inc
mov
add
mov
and
scas
adc
xor
out
repz
xor
cwtl
mov
imul
mov
pop
in
and
mov
mov
or
mov
jp
add
sahf
and
mov
imul
fstps
ljmpw
push
cwtl
cmp
mov
push
jne
sub
and
pop
int3
dec
mov
push
mov
dec
mov
icebp
mov
sub
lea
js
xchg
je
sub
pop
xchg
icebp
daa
imul
insl
mov
push
push
imul
sbb
mov
xchg
std
sub
mov
mov
push
ds
out
call
and
mov
lahf
mov
aas
fstpt
mov
jno
xor
iret
orb
test
sbb
sub
out
and
inc
lods
icebp
and
mov
jecxz
mov
addr16
dec
mov
rep
mov
lahf
add
daa
sbb
lods
inc
stos
xlat
cwtl
cmp
xchg
inc
aad
into
out
or
lahf
mov
push
sbb
lock
mov
xor
icebp
in
xchg
mov
mov
jmp
cmpl
fdivrp
lcall
inc
sub
xchg
push
fidivl
fucom
pop
mov
push
jnp
stos
loopne
icebp
mov
inc
call
mov
outsl
xlat
mov
adc
xorb
lahf
popf
pop
xlat
mov
mov
icebp
xor
xor
mov
xchg
cmpsl
orb
push
jne
mov
sahf
fcoml
xlat
dec
add
stc
xor
in
pop
mov
dec
out
mov
mov
lret
xorl
out
mov
cli
push
mov
mov
mov
icebp
sti
rcrl
push
in
fwait
ja
arpl
fwait
mov
adc
fidivl
aaa
mov
js
sbb
stc
sbb
pop
cmpsl
mov
mov
xorb
mov
icebp
repz
outsl
cmp
adc
xchg
imul
mov
popa
pop
cmp
jl
outsl
movsb
jnp
mov
mov
inc
adc
mov
dec
mov
insb
pop
repz
mov
mov
add
fimull
aam
push
movsl
gs
ss
add
ret
mov
loop
in
jns
sub
clc
es
dec
mov
sbb
out
mov
xor
test
pop
sbb
movsl
jge
and
adc
mov
jae
jecxz
cmp
call
icebp
stos
mov
jne
loope
push
sub
sbb
lock
mov
adc
cmp
mov
aam
xchg
aad
xor
mov
fcmove
mov
dec
mov
mov
mov
xor
sub
mov
sbb
inc
aas
and
hlt
mov
scas
lret
repz
out
stc
xlat
cmp
sarl
xchg
scas
mov
xor
mov
stos
pop
jbe
adc
inc
sbb
sub
cmc
mov
or
sbb
push
pusha
jnp
dec
mov
out
xchg
mov
mov
imul
sarb
scas
lods
mov
mov
xchg
jge
sbb
cmp
or
pop
sahf
loope
dec
and
mov
cli
mov
jge
xor
mov
sbb
ficomps
stc
clc
pop
mov
fidivl
and
adc
enter
mov
push
mov
xchg
scas
or
jns
jle
inc
mov
mov
and
aaa
jbe
xlat
icebp
mov
and
lret
mov
into
jne
xor
mov
in
xchg
imul
test
inc
pusha
iret
ss
xor
out
ret
jns
loopne
mov
lcall
into
cmp
dec
sbb
mov
data16
cli
mov
xlat
jmp
sbb
scas
in
in
data16
add
mov
fs
je
addb
ljmp
imul
dec
xchg
ret
jge
enter
mov
cmc
xchg
insl
mov
mov
jo
sbb
lds
mov
mov
lret
adc
fs
and
jle
les
add
xchg
fisttps
sub
pusha
mov
cwtl
pop
or
test
ljmp
shrb
int3
es
loope
pop
sarl
push
xor
lcall
lea
mov
sub
movsb
addr16
mov
outsb
jnp
bound
xor
fwait
in
jnp
test
mov
test
and
sarl
mov
addr16
cmp
mov
mov
jne
pop
jnp
add
loop
lock
push
mov
jae
or
fwait
movsl
lods
nop
xlat
popw
mov
mov
cmp
fbstp
and
push
mov
lcall
movl
mov
jae
mov
clc
cltd
adc
xchg
or
sub
push
push
mov
inc
mov
mov
xor
xor
ret
lret
mov
dec
inc
dec
mov
jg
jno
insl
add
push
mov
cmp
mov
mov
jno
lods
fdivrl
cwtl
sbb
jmp
sub
sub
push
mov
popa
cmp
xchg
xor
xchg
pop
and
mov
cmc
ret
hlt
insb
mov
sbb
sub
push
cmpsl
cltd
dec
add
and
test
xchg
mov
jge
xorl
mov
xchg
stos
movsb
xor
les
cmpsl
mov
outsb
xchg
clc
xlat
into
gs
and
inc
das
stc
push
mov
daa
push
std
fwait
jne
inc
mov
insl
fimuls
add
fstpl
pop
lods
test
repz
mov
stos
sbb
test
mov
fildll
ret
aaa
mov
lret
in
sbb
insb
je
push
add
push
mov
sub
jp
lret
mov
repnz
and
in
popf
ret
cmpb
push
push
push
icebp
jno
add
mov
mov
ret
or
mov
in
add
fucomp
cwtl
adcl
xor
scas
xlat
das
mov
cltd
push
mov
or
cltd
repnz
mov
dec
cwtl
jge
inc
stc
outsl
lods
and
xchg
pop
mov
fwait
cld
add
mov
sbb
xchg
or
cltd
mov
inc
or
cmc
addl
je
mov
adc
scas
mov
outsb
mov
fsubs
aam
mov
gs
and
pop
sub
sbb
xchg
ret
mov
push
ret
rcrl
xchg
xchg
push
xor
cld
loope
jns
add
xchg
imull
arpl
mov
dec
mov
pop
add
cmp
out
pop
add
xlat
pop
es
lcall
lods
mov
stc
mov
les
adc
cmp
bound
das
fsubs
cltd
xchg
xlat
and
lret
xbegin
jne
mov
rcrl
sbb
or
push
cmpsl
dec
push
xor
cltd
or
mov
scas
adc
js
mov
sbb
or
mov
mov
mov
addr16
mov
push
xchg
cld
pop
and
mov
jb
nop
mov
mov
sbb
pop
cmp
pop
mov
mov
enter
add
ret
negb
mov
test
jg
jp
cli
add
dec
fucompp
mov
push
mov
mov
outsb
ds
mov
push
xor
mov
lock
sbb
pop
push
lods
sbb
icebp
pop
jmp
inc
mov
test
mov
sbb
stos
adc
xlat
sarb
pop
xchg
mov
xor
mov
mov
int
mov
inc
stos
adcl
mov
pop
add
and
mov
xchg
ret
lahf
dec
sti
cmpsl
pop
negl
rol
mov
test
cltd
mov
mov
in
inc
xchg
les
push
mov
insl
fmul
mov
cwtl
out
popa
add
mov
mov
popf
es
das
dec
movsb
lcall
push
sbb
call
mov
inc
cmp
jae
mov
jns
adc
mov
sbb
dec
jmp
pop
jnp
js
xchg
mov
mov
mov
dec
fwait
mov
jecxz
mov
in
das
fsqrt
and
mov
inc
or
popa
jne
notl
xlat
mov
arpl
fstps
scas
pop
repnz
les
xchg
cmpsb
hlt
push
mov
adc
int
insb
jnp
idiv
push
mov
mov
xlat
jb
jl
mov
push
insl
mov
out
or
imul
stc
inc
jae
mov
popf
ja
mov
xlat
mov
mov
cwtl
sbb
data16
mov
xchg
dec
cmp
cmp
imul
mov
cltd
fcompl
insl
fs
push
int3
mov
imul
shll
mov
xchg
mov
mov
lds
push
add
or
fbstp
hlt
popf
xlat
pop
mov
add
cmp
lcall
insl
add
xlat
xchg
pop
push
xchg
je
pop
xlat
dec
std
jnp
mov
sbb
rclb
mov
jge
inc
comiss
jb
push
pop
pop
in
pop
adc
jmp
pop
mov
inc
pop
jp
lea
mov
stos
mov
shlb
ret
pusha
mov
fstpt
xchg
mov
leave
cwtl
pop
mov
jno
mov
and
sub
xchg
aam
jmp
mulb
stc
mov
test
xchg
pusha
mov
movsl
mov
push
xor
fmul
int3
xchg
mov
out
or
sti
pop
xlat
mov
jns
fwait
loopne
aaa
ja
lahf
adcb
mov
add
fsub
xchg
in
hlt
cmc
mov
xor
js
mov
ja
mov
jnp
imull
in
add
mov
int
mov
or
xorb
ljmp
int3
push
bound
cmp
mov
jne
mov
mov
mov
outsl
jo
push
aas
cmp
mov
adc
ja
pop
test
ret
mov
jno
mov
cmc
dec
sbb
mov
jno
mov
movl
imul
aas
mov
mov
push
sbb
subb
movsl
ja
sub
add
or
cmp
pushf
dec
ficomps
cld
push
test
lock
stos
mov
or
cmp
test
cmp
cli
mulb
mov
lock
jbe
ja
jnp
mov
sti
mov
pusha
test
test
mov
iret
add
shrl
aaa
test
sbb
mov
into
lods
shrb
sub
mov
mov
aas
mov
mov
push
insb
mov
cltd
ret
xchg
daa
xor
in
and
jl
in
bswap
addr16
iret
andb
jb
sbb
mov
inc
rorb
sbb
leave
mov
stos
or
test
mov
mov
and
iret
mulb
cwtl
xor
in
mov
jmp
or
sbb
cmp
mov
lea
adc
sahf
mov
and
loop
mov
roll
sbb
cmp
mov
ljmp
bound
xchg
sub
inc
cmpsl
mov
dec
mov
add
ljmp
aaa
fcomps
adc
loopne
jns
aad
test
icebp
test
pop
mov
or
test
xchg
push
fwait
mov
insl
push
pop
mov
xchg
mov
or
push
mov
jl
jb
setg
mov
loope
and
add
mov
or
decl
or
imul
popf
mov
sbb
shll
iret
mov
cmp
dec
jge
inc
xchg
mov
int
cltd
jp
mov
xchg
fs
sbb
test
cltd
mov
xchg
fdivrl
jmp
sub
movsb
or
mov
or
fbld
xlat
test
negb
pop
add
addr16
mov
enter
mov
int3
cmpsl
mov
ficompl
or
aaa
lds
jnp
loope
pop
mov
and
lcall
cmp
leave
mov
mov
push
push
in
add
mov
push
pop
imul
mov
test
pushf
test
sbb
mov
inc
pop
mov
xchg
mov
pop
movsl
cmp
fcoml
mov
test
xchg
mov
mov
out
sub
push
les
cwtl
stc
call
repnz
xlat
jno
xchg
mov
scas
das
mov
js
sbb
cmp
mov
ret
lods
jno
iret
mov
push
add
lcall
repnz
leave
xchg
cmp
mov
aas
xor
mov
orb
scas
mov
jne
test
mov
mov
icebp
repnz
or
cwtl
cmpsb
es
cmpsl
aad
cmp
mov
or
xchg
add
out
mov
mov
sub
jne
inc
mov
xlat
lods
test
xor
mov
jno
in
popa
adc
adcb
mov
mov
mov
je
pop
mov
lods
das
repz
mov
xor
cmp
mov
mov
repnz
xchg
or
sub
jnp
iret
popa
mov
loopne
imulb
mov
cmpsl
mov
mov
stos
sbb
callw
xor
cld
xor
imul
mov
faddl
xchg
aaa
dec
mov
inc
ret
icebp
mov
sbb
stos
inc
lods
push
mov
lret
fwait
nop
shlb
cmpb
mov
insb
in
fdivr
sbb
xor
mov
mov
pop
ja
jno
lods
cmp
pop
mov
and
cmp
clc
mov
imul
lods
out
xchg
cltd
std
aas
cmp
cmpsl
daa
cmp
dec
pop
pop
in
inc
sbb
mov
xor
leave
adc
sub
cmc
pop
stos
cmp
xchg
push
test
xlat
xlat
repnz
rclb
adc
xor
decl
push
pop
movsl
ss
mov
and
add
mov
xchg
rcr
aas
sbbl
dec
mov
fst
cli
xchg
mov
fwait
push
inc
push
lcall
mov
sub
adc
xor
into
mov
sbb
mov
fwait
xchg
fscale
arpl
push
out
bnd
mov
shll
icebp
jns
aaa
adc
fistpll
jns
in
xcrypt-cfb
cmpsl
daa
mov
aad
inc
mov
sub
add
xlat
icebp
sti
loope
mov
jg,pn
add
or
mov
mov
and
adc
insl
xlat
cmp
jmp
xor
inc
mov
xlat
int
inc
add
mov
mov
push
shll
jle
mov
mov
sbbb
test
arpl
jnp
mov
add
cmpsl
sub
adc
push
mov
scas
popa
test
arpl
stos
fnstenv
sbb
cmp
hlt
push
jg
mov
popa
mov
cmpsl
jge
add
and
adc
ja
mov
jl
xchg
lea
fstps
repnz
cmpsb
jae
call
sub
shll
aas
cld
mov
push
and
mov
fwait
mov
testb
arpl
lahf
pop
mov
shll
cmpsl
mov
lea
in
mov
fwait
daa
xorb
cmpsl
xchg
mov
scas
std
lret
test
pop
mov
sbb
adc
rep
mov
lea
mov
cmp
imul
mov
lea
mov
and
or
mov
or
xor
sbb
icebp
mov
lea
mov
push
xlat
test
mov
adc
aad
or
dec
stos
cmpl
mov
outsb
cltd
mov
repz
jae
outsl
mov
adc
mov
cmpsl
loope
or
mov
cmp
ljmp
leave
cmp
cmp
xchg
pop
in
push
dec
xchg
insl
cmpsl
adc
cmpsb
cmp
cmpsl
mov
cwtl
insl
sbb
pop
xlat
jne
mov
mov
pop
mov
in
pop
adc
push
xor
stc
roll
and
sbb
cltd
movsl
dec
ds
jae
jp
and
scas
and
sub
popf
push
adc
or
adc
xlat
push
arpl
mov
daa
ja
out
roll
mov
sub
or
arpl
mov
sahf
mov
out
cltd
nop
shlb
add
das
pop
mov
jg
test
arpl
iret
dec
lahf
scas
push
aas
jge
inc
add
insb
les
mov
xchg
sbb
popa
outsl
sbb
mov
mov
sbb
cmp
test
outsb
or
inc
sub
push
daa
jmp
lea
xchg
sub
cmpsl
in
or
push
lcall
jne
mov
pop
rcl
push
addb
mov
outsl
mov
cmp
sbb
mov
gs
cli
mov
jle
sbb
xor
xchg
mov
popa
leave
add
scas
add
movsb
xor
xchg
aas
pop
je
sbb
push
mov
or
jnp
cmp
mov
xor
mov
in
xchg
cmp
bound
pushf
adc
mov
lcall
jnp
cmp
icebp
sbb
mov
xchg
xor
xchg
and
gs
lods
shll
inc
fiaddl
jo
jp
mov
or
rcrb
cmpsl
xchg
or
pop
popa
inc
fdivl
fsubrs
sti
test
rcrb
mov
xchg
sub
xlat
out
mov
cwtl
adc
lock
adc
pop
ss
cltd
jmp
jo
pop
jp
mov
pop
xor
dec
mov
mov
jecxz
push
in
into
mov
aas
aam
ret
stos
push
aaa
clc
mov
icebp
imul
jmp
push
lret
inc
and
mov
movsl
iret
fwait
jg
in
xchg
mov
sbb
fstpt
mov
jge
dec
add
iret
std
int
mov
je
mov
jno
or
and
sbb
cmpsb
gs
mov
sub
cmpb
cmp
stos
aas
sti
jmp
pop
sub
pop
mov
addr16
mov
leave
aaa
pop
stc
add
jb
mov
mov
pop
les
xchg
mov
inc
imul
mov
shl
icebp
aad
addb
movsl
add
mov
loopne
add
xchg
pop
sti
sarb
popf
lahf
icebp
add
stos
sub
xchg
xor
mov
jl
pop
test
mov
repnz
ror
test
and
mov
jo
mov
daa
gs
mov
and
mov
rcll
or
out
jbe
mov
dec
and
mov
stc
aas
mov
sbb
adc
mov
popa
cmc
mov
fcomps
xor
jae
jbe
dec
rol
mov
jbe
mov
mov
xor
jo,pt
lods
out
stos
push
sbb
daa
int
mov
mov
rclb
dec
pop
xor
lahf
mov
aaa
mov
negl
sub
addr16
aas
adc
addr16
movsl
daa
jae
cmpsl
das
fimull
test
scas
mov
add
mov
push
push
push
sbb
fs
pop
ror
pop
and
xchg
sbb
lock
jae
mov
mov
in
sub
add
sbb
mov
fmull
pop
xlat
rorl
inc
scas
pop
jmp
stos
icebp
test
fmul
aam
dec
shlb
mov
ss
hlt
xchg
push
shll
mov
outsl
xchg
mov
lahf
adc
fwait
xchg
mov
jecxz
jns
push
movsl
mov
decb
cmpb
mov
mov
jg
xchg
es
andb
mov
inc
mov
sarl
jno
push
ds
mov
in
xor
int
dec
orl
neg
jp
xchg
adc
lcall
imul
fdivrl
out
mov
das
in
and
mulb
lahf
lcall
push
push
rol
je
mov
test
pop
pop
sbb
mov
je
jle
cmp
jnp
and
mov
cmc
add
add
adcl
push
cmp
sbb
cmpsl
out
das
lds
adc
mov
sahf
repz
mov
dec
pop
cmp
or
jbe
loope
xchg
jae
stos
xchg
xor
cmp
xor
mov
aas
orl
mov
repnz
data16
dec
fsubl
mov
mov
iret
inc
stc
mov
repz
scas
adc
mov
and
mov
xlat
xlat
sbb
lods
mov
insl
inc
sub
test
ficompl
xor
mov
jp
xchg
outsb
or
aas
jne
xlat
mov
mov
pop
xor
mov
pusha
insl
sub
test
notb
add
lds
sbb
sbb
loopne
mov
mov
jge
xlat
icebp
push
sub
push
shll
push
inc
mov
fdivrl
xchg
test
add
lret
jecxz
or
dec
xor
mov
mov
test
or
adc
aaa
xlat
jo
ss
lahf
fsubs
inc
jno
mov
mov
xchg
sbb
ds
adc
repnz
bswap
outsb
neg
cmp
jo
mov
mov
mov
inc
mov
mov
into
test
mov
iret
and
orl
fdivrs
pop
or
sbb
mov
xor
mov
xchg
push
jmp
cmp
out
xor
jno
mov
mov
mov
pop
enter
aaa
mov
sbb
cmpsb
jns
pop
push
daa
mov
xorl
pushf
popf
xor
sahf
cmp
add
mov
jmp
lods
mov
outsl
xorl
test
jle
stos
lfs
jmp
decb
nop
cmp
fidivrl
jo
jno
xchg
add
sub
cmp
jns
mov
lret
mov
mov
xor
fisttpl
test
sbb
push
jno
into
fwait
cwtl
pop
jg
mov
add
xor
fdiv
mov
int3
or
sbb
loope
add
pop
mov
sub
and
xchg
lock
jge
aas
cmp
pop
sub
jge
mov
mov
pop
mov
mov
cltd
aas
jno
cmp
je
or
out
lahf
popa
and
push
push
xchg
hlt
ret
cwtl
push
mov
fwait
mov
popf
push
lret
jge
adc
jns
ficompl
popl
icebp
mov
ja
in
push
sbb
lods
jno
scas
pop
scas
lock
ret
pop
imul
adc
pusha
adcl
lahf
or
fwait
push
ja
sbb
sbb
jge
divl
loop
adc
lcall
mov
icebp
and
lret
mov
push
rcrb
adc
cmp
sahf
cmpsb
push
xlat
subl
idivl
adc
insl
sti
stos
mov
mov
icebp
inc
xor
fstps
fcmovbe
out
shlb
mov
xchg
test
icebp
mov
pop
cmpsl
lcall
inc
pusha
mov
mov
aaa
loope
loopne
lods
lods
out
inc
or
xchg
mov
cmp
add
and
loop
into
ret
adc
mov
popa
inc
cwtl
lahf
enter
mov
fs
mov
loope
adc
add
pop
mov
mov
loopne
or
movsb
int
mov
cmpl
mov
sbb
fcompl
fsub
dec
ror
push
fwait
add
mov
loop
movsl
jns
mov
and
test
stc
loop
cmp
and
pop
dec
lret
sub
pop
push
ljmp
cmp
insb
fcom
mov
call
lret
es
mov
mov
sub
mov
pop
sub
sbbl
cwtl
scas
repz
jp
inc
cmpsl
and
sbb
mov
sahf
test
mov
jb
mov
jno
fcmovne
shl
push
mov
mov
mov
dec
icebp
cmp
lds
or
mov
push
mov
mov
ja
lret
and
sbb
xchg
mov
xchg
test
mov
pop
jge
mov
mov
xlat
jae
scas
xchg
inc
mov
mov
jle
dec
iret
insb
and
mov
mov
loopne
testb
testl
mov
test
mov
movsl
repz
or
mov
rclb
aas
and
xor
sbb
dec
pop
and
mov
fdivrl
jmp
lods
pop
je
mov
inc
cltd
je
loopne
xchg
mov
xchg
sub
mov
mov
enter
js
scas
ja
dec
jl
adc
leave
jb
test
mov
popf
dec
ror
fcmovu
mov
inc
sub
push
mov
out
aad
mov
xor
jno
adc
mov
inc
or
loope
hlt
mov
fwait
aad
pop
mov
mov
movsl
rclb
cltd
add
lcall
lahf
cmp
sub
cli
imul
mov
leave
pop
jg
scas
xlat
in
mov
ret
outsb
push
add
mov
inc
push
mov
psllq
cmpsb
mov
movsb
rorb
shll
mov
inc
jle
jmp
pop
shl
mov
xor
cmp
mov
or
je
leave
in
cwtl
jae
rcll
movsb
mov
mov
outsb
adc
mov
jg
inc
cmpsl
mov
cld
or
dec
push
inc
popf
xor
xchg
mov
in
loop
push
adc
cmc
daa
push
mov
xor
je
and
fildl
jno
mov
xchg
sbb
fmuls
aam
cmp
shlb
dec
jp
xlat
roll
sub
sub
cld
adcl
ja
mov
xlat
pmaxub
arpl
mov
lahf
aas
std
push
gs
fdivs
aam
adcl
test
sbb
mov
lods
int3
cwtl
loope
inc
mov
inc
add
mov
inc
scas
arpl
shll
loope
add
push
mov
stos
fdivrs
mov
arpl
aaa
js
add
bound
or
in
das
arpl
lods
push
into
inc
mov
movsb
popfw
sub
sarl
mov
lds
call
out
pop
and
pop
xlat
mov
sahf
repnz
test
mov
stos
jb
frstor
dec
mov
cmp
xchg
xlat
xor
jb
xor
aaa
shlb
jg
adc
in
push
mov
daa
mov
jl
cwtl
lock
aad
xor
lcall
mov
stc
aad
and
mov
mov
fs
xor
mov
adc
xor
sbb
lea
cltd
jb
mov
pop
mov
fs
stc
adc
or
fsubrl
cmp
mov
pop
test
leave
cwtl
jl
adc
xchg
pop
jge
shr
pop
push
push
push
jge
int3
jno
rol
push
xchg
pop
mov
fucomip
movsl
add
lret
addr16
negb
xor
adc
mov
lods
outsl
pop
mov
mov
fildl
adc
jl
ja
mov
shl
aas
negb
cmpsl
inc
mov
addr16
mov
add
fidivl
mov
test
sub
btc
bound
and
xlat
rorb
pop
test
scas
dec
push
testl
pop
mov
scas
xchg
imul
mov
arpl
sub
repz
mov
dec
lea
mov
ja
imul
test
jge
ficoml
pop
mov
push
fstps
mov
push
sbb
je
mov
aas
cmpsl
mov
mov
mov
scas
in
test
mov
inc
xchg
sub
mov
sbb
icebp
jno
sub
sbb
out
mov
into
scas
inc
push
in
push
xor
inc
xor
or
mov
adc
inc
mov
lahf
aad
mov
loop
push
jge
sti
mov
jns
push
ja
repz
scas
mov
pusha
mov
stc
ljmp
int3
inc
cli
mov
mov
push
dec
sub
gs
aaa
js
mov
mov
mov
pop
mov
push
pop
pop
mov
insl
test
adc
mov
jne
push
popf
jno
xor
lahf
push
jae
xor
mov
cli
inc
mov
leave
or
stos
mov
pop
jb
mov
xor
lods
xchg
mov
cwtl
out
and
jg
mov
mov
ja
adc
xchg
jp
mov
xchg
cli
test
repz
mov
pop
pop
cmc
jbe
and
cmp
int
mov
test
jno
inc
scas
add
sahf
mov
fdivrs
push
shll
push
jnp
stc
mov
cmp
jo
add
mov
mov
pop
pop
jne
cwtl
in
jmp
ds
inc
add
out
jne
gs
jg
fs
push
outsb
scas
nop
mov
fmul
cs
test
mov
aam
imul
push
mov
into
or
dec
mov
xor
mov
mov
inc
mov
icebp
mov
dec
testl
mov
sub
popf
popa
insb
sbb
mov
iret
push
out
icebp
adc
mov
dec
add
movsl
dec
addr16
push
sbb
dec
pusha
addr16
inc
push
lret
mov
cmp
int3
mov
push
and
mov
or
stos
notl
mov
loop
icebp
mov
jo
adcb
pushf
mov
cmp
sbb
dec
mov
mov
or
dec
lea
int3
push
test
cmp
cmpsl
sbb
lock
and
push
mov
repz
scas
shrl
xchg
cmovns
xchg
mov
mov
cmp
cwtl
push
aaa
pushf
imul
mov
mov
push
mov
mov
cmp
mov
pop
push
sub
mov
mov
mov
inc
fdiv
xor
mov
daa
or
lret
mov
jbe
add
int
es
mov
push
cmp
fs
push
cmp
mov
xor
mov
pop
jmp
adc
popa
int3
mov
mov
rcll
fidivl
add
mov
add
mov
fisubrs
cmp
xlat
or
or
xor
mov
in
es
jnp
scas
insb
pop
fidivl
push
addr16
mov
xchg
cwtl
push
mov
fdivrs
lret
dec
test
cld
cmp
pop
mov
jmp
jmp
jns
push
ja
mov
pop
mov
sub
in
xor
aaa
mov
mov
and
mov
into
cmp
mov
sbb
es
xchg
sbb
aaa
dec
dec
lcall
mov
sub
shl
inc
movsb
jns
push
mov
pop
cmp
mov
inc
aas
clc
mov
test
in
push
loop
pop
sub
out
subl
stos
les
imul
mov
std
push
pop
data16
ret
scas
sub
sbb
mov
cmp
arpl
pop
or
out
lret
mov
pushf
cmpsl
push
xor
dec
jb
idivl
mov
push
stos
mov
sbb
or
xchg
mov
ds
mov
cwtl
dec
sbb
shlb
add
mov
popa
mov
fdivs
or
mov
mov
dec
add
cmpsl
movsb
shlb
and
test
pop
fbld
mov
movsl
and
mov
adc
sahf
decl
inc
mov
add
sarb
test
mov
scas
cmpsl
ja
xchg
jae
jns
arpl
inc
mov
es
fwait
insl
rcr
out
stos
sub
fdivl
adc
clc
pop
aad
jnp
mov
in
test
pop
and
frstor
pop
inc
mov
movsb
cmpsl
jns
lods
dec
xor
adc
lret
adc
sahf
dec
mov
adc
cmp
mov
fisubs
std
mov
mov
aaa
add
cwtl
or
push
movsl
outsb
inc
fwait
test
push
repnz
and
sbb
jns
ficompl
mov
int3
incb
mov
mov
decb
jecxz
int
cmp
xchg
fwait
adc
mov
arpl
xor
imul
push
jne
cmp
and
jle
pop
addr16
negl
jno
xchg
lods
icebp
pop
add
pushf
adc
pop
cmp
stc
outsb
imul
push
out
inc
out
pop
insl
mov
xor
js
pop
dec
add
mov
mov
sub
mov
loope
xchg
std
cmpsl
mov
add
push
insl
int3
leave
adc
jnp
xlat
sbb
xchg
jne
push
mov
out
push
mov
or
lods
pop
xchg
shll
lret
jecxz
and
fidivl
and
adc
sbb
xchg
pop
push
sbb
push
adc
add
jmp
sub
or
mov
mov
fsts
in
cmp
dec
cltd
adc
sub
jl
mov
xchg
mov
das
stos
stos
cmpsb
cltd
fadds
arpl
mov
test
pop
icebp
test
xchg
pusha
bswap
mov
push
pop
cmpsl
insb
movsl
into
mov
add
je
cmpl
adc
and
mov
cmp
cmp
inc
xlat
jo
sahf
pop
mov
fcmovbe
arpl
aad
rorl
pop
out
push
add
push
test
orl
mov
push
shrb
fwait
xchg
dec
cmpsl
pop
outsl
flds
sub
int
arpl
mov
hlt
xchg
adc
out
jnp
out
jmp
repnz
mov
or
pop
pusha
outsb
das
dec
ljmp
stos
mov
test
jae
mov
mov
arpl
push
pop
lret
dec
shll
push
xor
stos
cmpb
mov
inc
xlat
jge
mov
xlat
push
jecxz
repnz
pusha
xor
pop
cmpsb
sbb
fstpl
lea
int3
divb
and
pop
xchg
and
ss
bound
outsb
sub
push
pop
les
mov
mov
cmp
inc
cmpl
repnz
aaa
jne
adc
xchg
xor
out
cwtl
xor
mov
mov
jb
jae
cwtl
push
stc
mov
fsubl
cmp
test
daa
xchg
movsl
jnp
inc
out
cmpsl
pop
mov
mov
outsl
xchg
dec
pushf
lods
and
mov
loop
enter
cltd
cltd
cmpsl
loope
mov
cld
push
scas
sar
mov
je
adc
pop
insb
in
cwtl
or
cli
cmpsl
out
add
pusha
and
lds
cwtl
nop
jo
jle
sarl
dec
sbb
repz
cmp
mov
mov
int
xlat
mov
cmpsl
fidivl
cltd
pusha
std
in
mov
pop
mov
or
idivl
dec
ss
lock
xor
imul
mov
aad
cwtl
sub
mov
cmpb
rclb
jnp
dec
xchg
std
mov
sub
daa
outsl
das
or
mov
mov
xlat
pop
pop
incb
mov
jle
pop
mov
and
mov
outsb
push
data16
mov
push
mov
mov
mov
jge
pop
imul
cmp
ficoml
scas
jo
popa
mov
stc
jl
add
cltd
sbb
xlat
mov
sub
mov
aad
add
pop
fidivl
imul
xchg
pop
pop
fsubrs
mov
dec
mov
add
adc
jmp
lret
push
sbb
mov
test
push
cmp
jne
mov
ret
clc
jmp
mov
jnp
or
scas
mov
test
hlt
xchg
rcrb
aaa
lods
pop
pop
cwtl
or
stos
inc
cmpsl
mov
nop
xchg
xor
cmc
out
fwait
es
sub
mov
dec
arpl
rolb
inc
pop
addr16
mov
cltd
jnp
jp
scas
jae
sbb
test
dec
out
xchg
mov
cmp
out
pop
test
aam
jns
fildl
jecxz
mov
pop
mov
xchg
mov
rcrl
or
cmp
mov
mov
sar
sbbb
mov
sub
sbb
adc
fbstp
dec
dec
rcrb
inc
sbb
add
out
stc
mov
out
lock
sbb
adc
mov
jbe
rcll
pushf
mov
out
ficoml
mov
mov
pop
rorb
dec
mov
dec
test
xchg
hlt
pop
push
adc
and
xchg
cwtl
jbe
int3
mov
iret
addl
add
mov
jbe
mov
lods
repnz
and
adc
je
shl
mov
pop
dec
adc
pop
sahf
scas
pushf
cmp
imul
mov
fildl
mov
mov
sar
shlb
mov
xorl
stos
xor
xchg
xchg
dec
divl
sarl
hlt
loope
and
mov
sbb
aas
add
mov
pop
repz
imul
in
divb
ds
fnsave
push
sbb
mov
mov
icebp
lods
cmp
pop
mov
hlt
int3
inc
aaa
push
jl
inc
fnstenv
daa
cmp
mov
fistpl
rorl
pushf
mov
rcr
in
cmpsl
andl
out
fsubrs
inc
or
jne
or
add
xorb
cmpsb
popf
lods
mov
fwait
dec
cltd
add
test
cmpsl
or
sub
mov
call
sub
sahf
add
ret
mov
adc
cltd
inc
and
mov
sti
pushl
mov
into
mov
mov
iret
shlb
fwait
sarl
cltd
and
xchg
dec
repz
push
cmpb
push
rorl
pop
cmpb
cli
inc
fdivs
lds
cltd
int
in
test
mov
cmp
mov
add
and
xor
mov
mov
and
ret
dec
daa
int
adc
pop
scas
lcall
loop
into
mov
add
lea
sbb
mov
mov
lahf
icebp
les
mov
enter
leave
addr16
xchg
lret
jns
mov
dec
xor
sahf
aad
ds
lods
fimuls
mov
push
sub
fimull
lahf
sahf
bound
cwtl
mov
mov
mov
pop
xchg
and
mov
mov
rolb
lea
test
movsb
cmpsb
sbb
mov
loop
rep
icebp
mov
mov
adc
fdiv
cmp
daa
into
mov
lods
ror
push
mov
jo
xor
mov
jge
or
movsl
sbb
jno
dec
cmp
mov
leave
lcall
rorl
cmp
sub
xchg
sarb
jnp
cltd
mov
mov
test
jne
fsubr
test
mov
icebp
mov
sub
mov
roll
push
cwtl
lret
pop
xor
cmpsl
sarb
push
xchg
fs
ret
pop
jg
cmc
je
test
mov
xor
inc
xor
shlb
xorl
arpl
pop
ret
dec
jae
and
pop
adc
pop
xchg
mov
sbb
xchg
lock
mov
push
mov
jb
lock
xchg
push
push
lahf
cmc
mov
sub
bound
mov
inc
xorb
push
jge
lea
stos
nop
outsl
cmp
int3
xorl
fldl
mov
push
pop
and
add
in
hlt
mov
sub
xchg
insb
mov
cmp
xlat
aam
mov
lcall
mov
jo
hlt
xchg
rcl
fnsave
decb
cs
stc
cmpsl
imul
fwait
test
scas
std
das
push
jns
fsubl
sti
xchg
add
test
gs
or
jnp
adc
cmpsl
fcoml
pop
int3
mov
and
and
cltd
jecxz
mov
popa
mov
aam
mov
je
movsl
mov
mov
cltd
mov
int
addl
in
out
xchg
aad
mov
push
shll
or
lea
cmp
jne
sub
sub
aaa
mov
mov
push
std
mov
mov
jecxz
dec
or
fdivrl
or
mov
cltd
inc
cmc
sbb
dec
sub
cmp
filds
cwtl
out
jns
or
ja
jbe
stos
push
mov
sbb
mov
xlat
arpl
mov
mov
xchg
xor
sbb
pop
je
sub
stos
pop
xchg
lods
fstpt
aaa
into
mov
insb
jns
fdivl
jnp
mov
and
xor
mov
scas
add
add
sbb
bound
imul
lods
sbb
lret
and
xor
ljmp
clc
sbb
cmc
stos
hlt
cltd
pop
ljmp
add
mov
sbb
xor
packssdw
dec
xchg
and
jns
fidivl
pop
loope
iret
mov
push
sbb
popa
jge
xor
jne
aad
mov
lea
sbb
pop
xor
test
xor
adc
mov
jne
mov
movzwl
xor
fmull
jge
inc
cmp
xor
into
lahf
add
cmpsl
pop
mov
pushf
sbb
cmp
sahf
xlat
leave
cvtps2pi
test
stos
xor
mov
xor
stos
mov
jno
vpmacsdqh
adc
dec
enter
and
cs
bnd
cmpsl
out
fistps
mov
jnp
jns
or
jbe
push
jl
scas
out
stos
ror
js
insl
mov
mov
mov
pop
outsb
enter
mov
aaa
mov
xlat
mov
insb
popf
repnz
aam
sbb
pushf
sahf
and
and
jae
xchg
aas
mov
pop
loope
scas
pushf
mov
popf
sub
mov
sub
loope
add
cltd
mov
scas
inc
inc
subl
jge
pop
ret
mov
pop
cmpsl
or
les
jge
mov
cwtl
sbb
cltd
mov
test
mov
mov
cmpsb
fmul
mov
stos
jne
push
push
mov
mov
pop
sub
test
in
cmpsb
test
mov
mov
stos
push
mov
imul
mov
jo
xchg
pop
xor
cld
push
std
test
negb
lcall
cltd
fistpl
test
enter
push
icebp
out
mov
mov
pop
or
xchg
cwtl
push
fimull
jno
xchg
add
in
xlat
mov
test
sbb
sbbb
push
adc
sbb
ds
adc
and
movsb
lcall
lret
dec
xor
loopne
jne
ds
scas
add
mov
mov
bound
adcl
stos
enter
hlt
xor
stc
movsl
cmp
sub
aaa
dec
jmp
mov
popf
pop
je
xor
jp
push
sbbl
out
pop
fadd
jns
add
movsl
jno
sub
pop
test
cld
mov
inc
push
cmp
mov
cmp
xor
xchg
ja
mov
mov
jno
adc
shll
mov
pop
fidivrs
cmpsl
push
jbe
je
out
and
jne
xchg
insl
cwtl
jge
mov
push
mov
mov
inc
in
das
clc
movzwl
adc
push
pop
lea
mov
dec
ja
outsl
pop
mov
adc
mov
mov
push
xchg
mov
icebp
call
scas
mov
mov
xchg
cltd
and
lds
testl
pop
jecxz
cld
sbb
sbb
scas
out
lods
pushf
arpl
fs
pop
addl
adc
into
inc
cmpsl
jnp
sbb
mov
icebp
lods
mov
addl
push
popa
sub
aad
cmpsb
inc
mov
mov
cmpsl
mov
imul
jp
fldcw
mov
rcr
inc
enter
in
hlt
sbb
xor
es
add
mov
push
arpl
pusha
mov
rcrb
mov
inc
and
cli
xor
sbb
jnp
pop
mov
das
loope
xlat
mov
mov
xor
fcmovb
scas
mov
shrb
dec
js
arpl
cmp
imul
imull
adc
and
rcll
xchg
das
es
mov
iret
xchg
addr16
sahf
inc
inc
mov
fs
mov
jns
mov
sub
ret
lods
mov
call
adc
xchg
and
arpl
jae
test
mov
mov
js
addl
or
mov
inc
aas
jns
addr16
fidivrs
lahf
fwait
lods
inc
sbb
in
push
aam
mov
imul
jns
aaa
lahf
loop
or
je
pop
add
gs
mov
lods
test
cmp
sub
mov
or
scas
pop
and
cmpsl
push
fdivrl
pop
in
lahf
cmpsl
sbb
das
cli
cmp
add
dec
jp
pop
test
mov
mov
mov
xor
cmpsl
rcrl
cmp
jo
aad
enter
test
xlat
mov
outsl
js
push
icebp
push
xchg
popa
or
stos
jo
adc
inc
mov
cmp
fcmovbe
mov
test
loop
dec
jne
imul
popf
add
icebp
xor
jecxz
bound
pusha
test
test
xchg
clc
insl
mov
xchg
fnstenv
inc
cmc
aas
push
mov
jl
ret
and
jge
movsl
mov
mov
aas
cli
jge
sbb
inc
and
lods
out
mov
pop
xor
pop
push
arpl
xor
cltd
popf
ljmp
fistps
cmpb
mov
pop
adc
mov
sub
cmp
xchg
roll
adc
stos
nop
lcall
test
jge
loop
xlat
loope
icebp
push
nop
sbb
aaa
leave
inc
pushf
sbb
sub
ficoml
fmuls
fistl
outsl
mov
add
mov
mov
dec
mov
fnstenv
dec
xchg
mov
cmp
sub
cmp
add
into
fstl
ror
or
sahf
mov
jmp
dec
push
jp
addl
pop
loopne
mov
inc
jbe
push
movsl
shlb
mov
repz
jno
insl
imul
cmp
scas
push
dec
inc
fmuls
jnp
cli
fldenv
mov
add
cs
es
add
dec
aas
adc
orl
inc
into
and
mov
scas
pop
mov
pop
fldenv
jecxz
pushf
mov
jns
sti
clc
or
test
fs
call
xchg
inc
and
jnp
cmp
test
xlat
cmpsb
xchg
inc
scas
in
scas
pop
rcrl
push
jb
sahf
mov
repnz
xlat
ljmp
inc
je
mov
cli
in
cmp
icebp
fcmovnu
mov
add
in
or
lods
or
jge
mov
lods
fiadds
dec
and
loopne
lock
jno
jns
jp
mov
sub
mov
mov
mov
mov
jo
aad
nop
adc
sti
test
or
mov
ret
xlat
insb
or
mov
lods
imul
cli
ja
inc
dec
bound
jbe
into
gs
pop
popa
mov
sub
cmpsb
xor
lcall
arpl
mov
and
test
subl
mov
dec
fdivs
lods
leave
push
inc
and
cwtl
pop
ficompl
scas
lret
mov
je
inc
mov
sub
insl
add
jge
jno
push
lea
sbb
inc
scas
into
mov
pop
mov
or
cmpsb
inc
cmpsl
cmpsl
add
mov
lods
inc
and
rorl
imul
bound
lret
adc
scas
add
sbb
jne
shl
sarl
sub
jl
ss
mov
pop
mov
nop
int3
aaa
or
cmp
fistpl
pop
xchg
mov
pop
pop
fcom
add
std
dec
pop
xor
sbb
xchg
ret
jge
stos
sub
stos
cmc
push
mov
dec
ljmp
jecxz
adc
adc
lret
sub
mov
inc
mov
and
mov
out
insb
ret
das
jb
mov
mov
pop
push
lcall
dec
lahf
repnz
insb
cmp
sbb
mov
xorb
mov
dec
xor
repnz
jp
insl
icebp
jge
fdivl
mov
and
mov
lahf
aas
jl
mov
push
fimull
mov
and
lret
icebp
dec
cwtl
shl
jecxz
shll
mov
dec
and
sbb
cmpl
int3
xor
mov
push
lods
mov
test
pop
mov
nop
or
or
jns
lcall
subb
movsl
cltd
out
mov
sub
xor
push
aas
pop
cmp
int3
lret
mov
es
je
add
xlat
push
adc
jl
cwtl
popa
mov
and
cs
adc
stos
mov
cltd
in
jns
add
loop
iret
idivl
popa
xor
mov
dec
sbb
mov
ret
jg
movsl
cmpsl
push
push
mov
aas
stos
mov
icebp
fwait
shll
popf
mov
push
shrb
mov
arpl
mov
test
fidivl
pop
inc
jp
lock
cmp
mov
pop
xlat
cltd
pop
imul
xchg
int
mov
roll
loopne
adc
icebp
jmp
mov
repnz
stc
js
cld
mov
iret
or
mov
je
loope
dec
mov
testb
xchg
mov
mov
dec
xlat
aaa
xor
scas
lahf
stos
dec
rcr
inc
mov
push
mov
mov
ret
mov
jge
xchg
fdiv
xchg
sbb
scas
pop
xchg
jne
ret
mov
mov
xchg
ret
inc
mov
push
inc
mov
daa
adc
jnp
sbb
mov
sbb
insb
popa
jnp
mov
push
into
jecxz
mov
cmp
icebp
je
test
mov
rolb
mov
aam
jns
pop
fwait
mov
int
dec
sub
mov
xor
push
mov
pop
loopne
arpl
xor
sub
xchg
pop
xchg
cmpl
jl
pusha
movsb
mov
cmc
cmp
repz
mov
pop
movsl
data16
ja
mov
jp
stos
mov
out
test
mov
xor
out
jae
add
cmove
jg
mov
repnz
xor
fistpll
sub
sbb
pop
iret
mull
and
inc
push
scas
mov
into
popf
add
mov
xchg
test
cmp
xor
out
mov
loop
mov
mov
jge
push
lea
cmpsl
repz
test
icebp
test
xchg
mov
scas
cmp
xor
sbb
jp
daa
icebp
adcl
pop
scas
test
add
faddl
cmp
jo
cmpsl
sbb
sbb
int3
xchg
mov
sahf
mov
inc
fiadds
cmpsb
fwait
dec
push
test
jb
rcll
popf
mov
inc
in
or
mov
loope
mov
mov
dec
dec
popl
jnp
pop
mov
sub
xlat
xchg
dec
mull
stos
and
test
jl
xorl
mov
xchg
mov
xor
mov
lea
mov
mov
mov
call
mov
dec
mov
mov
sub
lcall
dec
jge
xchg
cs
fldenv
mov
or
pop
push
cmp
faddl
iret
mov
bnd
pop
and
das
cmp
aas
aad
jo
mov
push
loopne
push
lods
mov
inc
add
push
dec
mov
int3
mov
leave
test
shll
mov
in
add
push
mov
push
mov
lods
xlat
fadd
pop
std
jge
stc
push
clc
xor
mov
mov
sbb
cmp
pop
and
fldcw
xor
pushf
int3
mov
xchg
sahf
rcr
xrelease
out
adc
orb
mov
loope
out
inc
roll
mov
out
cmpsl
or
cltd
fcoms
jge
cmpsb
mov
mov
cmp
jl
in
jnp
lock
fcoml
cmpsl
test
nop
cmp
outsl
scas
insb
dec
leave
out
pop
ficoms
rorb
xchg
jnp
xor
adc
arpl
or
pop
pop
cmpsl
adc
sbb
inc
xchg
dec
lods
das
mov
iret
inc
lret
adc
je
out
pop
scas
rcll
xor
or
mov
cwtl
pop
mov
leave
jge
movsb
stos
movsl
xor
roll
test
xor
lock
xor
mov
push
js
iret
sar
mov
fimull
mov
stc
mov
cmp
jp
cmp
cmp
add
mov
es
mov
mov
jbe
repnz
lds
cltd
aam
fdivrl
repz
xchg
cmp
mov
mov
mov
mov
insb
jmp
sub
aas
test
jnp
repnz
pop
popf
negb
and
aam
inc
lcall
aas
jb
cmpsl
aaa
push
popf
cwtl
jg
xchg
push
pop
mov
test
scas
scas
ss
sub
add
mov
jns
test
ficompl
or
xchg
cmp
dec
cmp
mov
xchg
gs
mov
sbb
mov
in
sub
cld
mov
jb
push
repnz
out
icebp
sub
jns
scas
mov
adc
aad
xor
xor
mov
and
aam
mov
lret
mov
jl
lea
fcoms
cltd
xchg
negb
push
scas
sub
mov
test
pcmpgtw
and
push
shll
aad
xor
mov
sbb
shlb
cmp
mov
imul
mov
jne
and
fld
xchg
scas
push
gs
push
mov
das
pop
sbb
sbb
cmp
mov
out
cwtl
xor
test
das
pushf
mov
test
adc
out
mov
stos
jbe
mov
push
cmp
xor
mov
jo
stos
cltd
mov
xchg
cmp
or
xlat
jno
jne
daa
mov
lret
sbb
inc
test
xchg
jg
sbb
in
loop
mov
or
xchg
mov
aas
push
pop
pop
lods
mov
adc
stos
sbb
adc
mov
imul
jne
in
pop
lahf
imul
movsb
jecxz
mov
cmp
pop
cltd
gs
cmpsl
in
mov
sbb
mov
lods
in
mov
inc
mov
sbb
jne
mov
lret
adc
xor
xlat
ret
adc
scas
inc
pop
jbe
mov
mov
xlat
aas
fsubl
into
adc
cli
mov
push
jmp
cltd
filds
sbb
mov
mov
cmc
xlat
cmc
cltd
testb
rcrb
or
cmp
in
sub
jns
inc
clc
xor
test
fidivrl
cwtl
mov
aaa
shll
cmp
xlat
movsl
ficoml
lea
aam
pop
adc
jmp
lret
mov
neg
test
cmpsl
push
pop
mov
mov
insb
cmpsb
cmpsl
lea
cmp
fs
sbb
js
mov
lret
mov
out
inc
or
mov
lret
jg
scas
cmp
mov
rolb
dec
pop
lods
imul
mov
mov
popa
leave
xchg
scas
add
mov
lds
orb
mov
cmp
das
adc
mov
pop
mov
fcoml
jge
scas
and
aaa
es
pushf
mov
xchg
cmp
mov
rcrl
adc
icebp
sti
cltd
jmp
imul
jae
inc
mov
pop
inc
pushl
jmp
sti
in
rorb
cmp
lds
shrl
add
mov
out
sub
movsl
mov
adc
mov
inc
mov
orb
mov
xor
stos
mov
adc
sbbl
ficompl
push
test
mov
cmp
ficomps
out
arpl
mov
sub
insl
mov
sbb
leave
dec
mov
and
inc
jbe
mov
jnp
in
xlat
xor
test
lret
push
out
lret
cmp
repz
stc
mov
pushf
adcl
mov
aaa
xorb
outsl
push
mov
fs
shl
insl
hlt
and
sti
imul
mov
jl
idivb
jns
cmp
test
and
ljmp
popf
add
adc
jp
mov
aaa
xchg
or
test
adc
andb
push
cmpsb
xlat
pop
outsl
adc
out
cmpsl
xor
jmp
imul
divl
fwait
add
pop
jge
push
adc
scas
icebp
mov
mov
sub
add
mov
xor
stos
mov
mov
andb
pop
push
inc
inc
add
add
or
andl
jmp
xor
xchg
sahf
outsb
or
pop
dec
push
mov
imul
stos
shll
sub
mov
jns
out
mov
repnz
mov
mov
imul
mov
addr16
notl
push
test
adc
mov
cmp
or
stos
pop
sbbl
mov
mov
lret
mov
lahf
mov
pop
cmp
dec
dec
mov
cwtl
cltd
mov
popf
mov
add
sub
daa
loop
jns
jge
aaa
stos
mov
mov
fisttpl
add
xchg
cmpsb
dec
mov
push
xlat
push
sub
aaa
pop
pop
es
cmp
sarb
mov
mov
clc
cmpsb
je
arpl
lds
cltd
jl
in
iret
stos
test
mov
dec
xorb
cs
or
cmc
icebp
inc
scas
shlb
mov
push
sub
xor
mov
lods
testb
push
sub
xchg
sub
mov
loop
dec
push
mov
bound
cli
stos
pop
aaa
xlat
mov
je
xor
test
mov
data16
aaa
cwtl
mov
cmpsl
push
test
bound
movsb
xchg
in
popa
cmpsb
or
stos
test
sbb
cmp
popa
xchg
sbb
dec
jge
pop
cld
stos
push
jb
fwait
cli
clc
or
shrl
scas
cltd
sub
sbb
xchg
pop
mov
into
mov
or
scas
mov
cmp
aad
mov
rorb
mov
fcompl
cmp
popa
scas
mov
lcall
ret
lahf
dec
push
shll
mov
mov
arpl
jae
test
mov
mov
fsubs
dec
xor
daa
arpl
in
xchg
adc
xchg
mov
jl
mov
mov
mov
fcoml
daa
test
rcrb
je
mov
out
std
into
sbb
subl
pop
stos
xchg
mov
in
xchg
dec
jl
mov
scas
test
mov
add
repz
mov
and
cmpsl
outsl
mov
lcall
adc
mov
cmp
cmpsl
imul
pop
and
xor
jae
ja
cwtl
sbb
leave
scas
mov
xchg
mov
stos
stc
mov
rolb
subl
cmc
pushf
scas
add
call
jnp
inc
xlat
cmp
push
lods
mov
fsubrs
lods
mov
cli
inc
mov
lea
sarb
mov
jl
mov
bnd
mov
inc
insl
je
mov
iret
cmpsl
mov
mov
cmpl
insl
fsubl
test
mov
mov
js
add
mov
xor
xor
int
rcrb
jp
out
aas
cltd
xchg
pop
repnz
sbb
xor
lret
xor
in
call
jo
mov
mov
push
popa
xchg
cli
lahf
mov
loop
cwtd
gs
xlat
icebp
mov
and
dec
fdivs
lahf
mov
pop
cmc
mov
and
xlat
mov
outsl
aaa
out
cli
mov
push
iret
sub
movb
call
lahf
push
fidivl
int
adc
shlb
or
mov
jbe
mov
mov
mov
cmp
pop
push
mov
movsb
or
enter
cmp
inc
pop
mov
push
hlt
in
push
dec
dec
and
fildl
fnstenv
add
or
push
testl
or
inc
xor
shlb
add
ss
jnp
mov
mov
arpl
sarb
add
jns
inc
fsubr
mov
dec
sbb
cmp
test
ds
gs
popf
adc
nop
fstl
ljmp
cmp
mov
int3
mov
xor
mov
pusha
and
jns
out
mov
mov
mov
mov
fsubr
and
sbb
scas
pop
inc
cmp
arpl
or
and
cmpsb
and
xor
cwtl
cmpsl
lret
sub
adc
adc
xchg
data16
xchg
fucomp
xor
mov
jo
pcmpeqb
xor
add
mov
loopne
and
dec
xlat
icebp
clc
daa
iret
push
xor
dec
cmp
mov
add
xchg
test
and
out
push
lret
outsb
mov
mov
jae
cmp
add
mov
jo
data16
test
pmulhw
xlat
iret
divl
nop
xlat
push
loop
jbe
fwait
inc
adc
sub
imul
orl
cwtl
and
arpl
fidivrs
mov
loope
leave
mov
addr16
xor
xor
ret
iret
pop
jns
pop
push
sbb
hlt
jnp
adc
aas
inc
jl
mov
mov
jb
sbb
imul
jns
std
jle
mov
adc
pop
mov
add
stc
jp
in
xchg
mov
int3
or
and
addr16
adc
pop
decl
sub
cli
testb
lcall
pop
incb
lcall
movsl
fsubrs
sub
mov
jmp
pop
mov
mov
mov
mov
aaa
or
xor
fisubrl
jb
mov
cmpb
cmpsl
push
push
leave
iret
ds
jns
dec
sarb
test
test
cld
sbb
pop
mov
mov
mov
add
ret
data16
sbb
push
adc
test
fcoms
sbb
mov
inc
lods
pop
jmp
cltd
test
mov
mov
sub
mov
xor
push
adc
xlat
xor
mov
ja
js
stc
xchg
cmp
imul
add
scas
sbb
icebp
ret
rclb
cmpsl
sbb
or
dec
fnsave
mov
insl
xor
lods
and
loopne
cmp
mov
cli
and
mov
mov
and
xor
scas
and
lcall
inc
sbb
inc
lods
cmp
pop
daa
dec
iret
fldcw
xor
mov
dec
push
sbb
add
cwtl
fcoms
jp
xchg
repz
aad
push
push
scas
push
pushf
lock
inc
mov
mov
and
sub
sahf
ret
scas
mov
fisubrl
push
dec
mov
xorb
jb
cmp
cmp
mov
stc
test
sbb
mov
out
pop
imul
pop
in
test
rcl
jge
movsl
xchg
mov
lods
sub
adc
xor
sahf
pushf
mov
push
mov
xchg
int
mov
dec
ljmp
mov
lahf
data16
mov
icebp
aad
lcall
mov
jle
sbbl
aaa
sub
lret
rclb
mov
mov
push
cmp
cmpsl
int3
xor
ficoml
scas
jp
push
inc
hlt
mov
mov
fmul
leave
and
shll
push
nop
mov
add
mov
mov
xlat
push
jb
mov
std
enter
cmp
cmp
or
shlb
aaa
mov
popf
mov
mov
inc
inc
cwtl
pop
imul
xchg
jp
mov
das
sti
xor
dec
idivb
pop
fdivl
dec
mov
pop
jmp
cmp
dec
mov
ret
mov
popf
stc
leave
and
test
xor
mov
fistpll
sub
sub
mov
repz
sub
sub
aad
aaa
insl
arpl
mov
orl
mov
rorl
xor
dec
mov
mov
jae
test
fistps
cs
subl
inc
test
cmp
mov
jno
sub
decl
xor
addr16
popf
icebp
xchg
push
insl
inc
mov
mov
mov
mov
fdivrl
mov
cwtl
in
mov
in
mov
mov
or
xor
aad
aas
lock
mov
pop
sub
not
dec
xlat
subb
lea
cmp
invd
icebp
mov
xor
mov
mov
int3
and
mov
pop
dec
xchg
icebp
shlb
xor
or
jle
lret
cmp
mov
xor
mov
loopne
mov
mov
mov
dec
cld
push
test
aas
push
cmc
sub
jnp
push
xor
daa
sbb
or
dec
mov
cmp
aas
addl
stc
jp
pop
jnp
mov
mov
xlat
dec
stos
inc
pop
aas
mov
xor
testl
mov
push
inc
mov
sar
mov
imul
cmp
cmpl
mov
sub
mov
popa
repz
mov
gs
and
pop
xchg
sbb
int3
insl
pushf
mov
adc
push
fdivs
lret
mov
scas
data16
into
mov
idivb
lods
sub
jns
mov
movsb
cmpsl
and
mov
add
cltd
pop
inc
mov
sti
mov
push
sub
xor
jns
xor
mov
inc
mov
sbb
jne
cwtl
inc
fs
and
mov
roll
mov
ds
fnsave
setp
fdivs
xor
mov
mov
or
jmp
mov
add
std
mov
mov
pushf
aaa
shrl
lahf
add
popa
nop
stc
fldenv
sbb
fidivs
jae
sbb
cmpsl
addl
cmp
mov
or
jge
xor
mov
inc
push
ljmp
insl
ror
mov
dec
int
lds
mov
sub
lods
sbb
arpl
shll
aas
or
mov
pop
pop
lcall
incb
sbb
add
insb
scas
add
push
outsl
mov
dec
adc
xchg
and
and
pop
xchg
popa
lds
mov
aam
and
xlat
mov
fcoms
lret
xchg
ja
stc
jb
gs
aam
les
and
mov
pop
into
sbb
scas
xchg
test
mov
fwait
lcall
adc
bound
pusha
push
les
fwait
aad
mov
call
cmp
divl
xor
cmpsl
jmp
mov
adc
fwait
xchg
cmp
inc
ret
jg
mov
jns
rcrl
mov
push
loope
clc
jnp
rcrb
mov
jg
lret
cmp
mov
mov
mov
pop
mov
in
and
in
scas
icebp
cmp
jge
pop
imul
xlat
lret
pop
daa
mov
mov
icebp
addr16
jnp
std
xor
ljmp
data16
out
cmpl
jbe
adc
arpl
jb
push
popa
add
mov
mov
adc
mov
mov
mov
xchg
pop
stos
pop
jp
fxch
cmpsl
dec
jecxz
aad
lcall
xchg
sub
fidivl
int
nop
leave
sbb
divl
pop
dec
mov
int3
push
mov
faddl
mov
imul
cmp
mov
sbb
push
sti
jmp
xorb
xchg
and
jne
sbb
mov
and
mov
fsubs
out
mov
dec
mov
cs
shlb
mov
mov
test
aad
sbb
xchg
arpl
add
imul
inc
or
das
jp
cmp
mov
dec
or
push
dec
data16
mov
sbb
loopne,pt
cmp
sarl
mov
shrb
adc
jg
mov
xchg
jbe
fwait
in
or
pop
enter
cs
dec
xchg
and
out
mulb
ret
xchg
js
out
pop
adc
stos
mov
shll
shlb
fs
push
fidivrs
xchg
inc
movsb
add
cwtl
jo
je
mov
mov
lea
jmp
mov
in
cmpsb
mov
pop
imul
push
out
jae
mov
cwtl
movsb
fwait
repnz
popf
lret
mov
lahf
rolb
mov
std
fidivrl
push
mov
mov
test
xchg
popf
inc
xchg
mov
push
cmpsl
popa
bnd
test
mov
pop
xor
jbe
testl
add
cwtl
mov
scas
ss
sbb
xchg
mov
fwait
imul
ret
mov
mov
lds
mov
arpl
stos
movsl
xchg
repnz
jae
sub
push
xor
and
notb
mov
mov
mov
popf
dec
loop
cmp
pop
pop
cmpsl
xchg
cwtl
or
out
mov
mov
inc
jle
inc
dec
push
mov
inc
jns
cmp
mov
pushf
and
xlat
rcrb
dec
sub
cltd
mov
adc
mov
mov
jle
mov
push
fists
xor
out
movsl
inc
or
sbb
sub
idivl
fcompl
mov
mov
mov
stos
or
pop
je
ds
outsl
jecxz
cwtl
scas
lret
mov
mov
sbbl
and
cmp
lods
push
fsubrl
subl
dec
xlat
mov
js
insb
xlat
sbb
scas
jno
xchg
pop
movsl
rcrl
lret
add
aad
or
les
sbb
sub
rorl
lea
lods
rcr
jne
mov
jns
iret
or
sbb
mov
scas
popf
add
mov
or
xchg
jno
jo
popf
sbb
jns
pop
rcrl
bound
das
or
cmpsl
aas
dec
xchg
loope
dec
inc
mov
pop
jle
mov
sub
int3
cltd
fld
mov
mov
jbe
dec
push
adc
pusha
lret
mov
cmpsl
iret
mov
lret
xchg
pop
leave
xchg
mov
or
xchg
fldenv
xor
push
mov
pop
or
rcrb
push
arpl
pop
mov
loop
dec
fisttpll
push
mov
mov
jge
std
xor
mov
mov
jg
fmuls
mov
dec
add
inc
pop
stos
sbb
and
and
mov
mov
sbb
nop
sub
xchg
xchg
jge
inc
cmp
add
fwait
add
shl
pop
push
mov
pop
mov
xor
aad
nop
fwait
adc
mov
inc
mov
sub
xor
dec
xor
or
rorl
xor
jp
scas
sbb
aas
mov
test
popf
and
fwait
mov
add
arpl
mov
mov
jae
mov
jl
push
test
les
cmc
adc
lahf
pop
pop
je
scas
outsb
inc
jnp
mov
xlat
scas
ficoml
push
xchg
call
mov
icebp
repz
cmp
ljmp
inc
sub
mov
or
movsl
faddl
and
add
aas
idivl
push
sub
mov
mov
bound
lock
adc
stos
icebp
ret
push
out
mov
rorb
nop
iret
ljmp
mov
mov
fldl
dec
mov
jle
mov
inc
mov
sbbb
fistpl
pop
sbb
aaa
xlat
inc
jns,pt
and
adc
push
arpl
insb
repnz
inc
lcall
cltd
sub
lahf
movsl
xor
cmc
cmp
or
mov
jb
stos
iret
mov
mov
xor
icebp
mov
cwtl
imul
pop
cmpsl
ja
pop
mov
mov
xchg
xor
xchg
lret
xchg
sbb
dec
das
push
adcb
or
push
push
jmp
sbb
ds
sarl
mov
jne
jbe
andl
iret
scas
sub
xor
sar
sar
xlat
imul
push
subb
repz
lahf
fxam
test
mov
testb
xlat
jbe
mov
and
and
repnz
inc
data16
test
lds
mov
insb
cmpsl
mov
pop
lods
lods
push
mov
and
test
test
inc
mov
pop
mov
pop
loop
scas
or
adc
mov
in
int
testl
mov
jg
mov
push
loope
and
mov
sbb
xorb
mov
and
fimull
std
iret
xor
and
subb
cwtl
out
mov
pop
popa
mov
adc
xchg
mov
test
cmp
mov
test
mov
lods
push
mov
pop
mov
pop
and
and
mov
movsb
xlat
pop
cmpsl
mov
jae
addr16
stos
cmpsl
imul
pop
xor
mov
fisubrl
aam
fwait
xorl
mov
pop
push
and
dec
test
mov
insl
mov
addr16
sbb
xchg
cwtl
mov
enter
movsb
stos
mov
sbb
clc
iret
mov
mov
sub
cmp
cmp
js
scas
jns
lea
jo
scas
fcoms
popa
adc
adc
movsl
imul
lock
lcall
mov
sbb
insl
test
adc
xchg
cmpsl
pop
mov
and
xor
xor
lcall
sbb
mov
stos
xchg
xor
into
imul
pop
sbb
jge
lret
sarb
xchg
mov
xchg
call
push
mov
cmp
insl
xor
lahf
push
adc
lcall
sbb
push
mov
push
test
movsb
sahf
sub
lahf
out
mov
lods
push
adcl
mov
xchg
aas
icebp
dec
sub
mov
cmc
pop
mov
pop
jae
mov
xchg
dec
mov
stos
loopne
data16
mov
xchg
aaa
adc
mov
loop
imul
test
ljmp
push
inc
insl
mov
xor
add
push
pop
inc
out
mov
movsb
jg
mov
mov
fadd
xor
pop
mov
mov
popa
repz
mov
adc
jne
add
js
mov
add
sub
pop
dec
repnz
loop
mov
imul
add
add
cmpsl
adc
mov
addr16
pop
lahf
scas
sub
lahf
jnp
cmp
ficoml
gs
mov
and
mov
mov
je
sbb
dec
xor
insl
mov
divl
pop
aad
mov
jae
imul
mov
fwait
mov
push
scas
fldl
mov
insl
lods
andl
push
das
pop
arpl
pop
mov
or
sbb
add
test
mov
push
jae
mov
push
jbe
mov
push
movsl
add
cmp
mov
mov
jecxz
jae
cli
mov
rcr
call
sbb
jp
and
mov
arpl
cld
sub
cmc
push
divl
mov
push
fstp
pop
mov
inc
cmpsb
fidivs
mov
xorl
pop
mov
ret
mov
mov
lcall
bound
fdivl
stos
hlt
aaa
mov
mov
shrb
pushf
or
insb
daa
mov
adc
stc
aad
push
out
mov
pop
out
movsb
mov
cmp
insb
adc
loop
lcall
lahf
test
xlat
lods
xor
cwtl
rcll
jnp
jne
scas
jbe
adc
adc
sbb
call
dec
add
cltd
ljmp
mov
lock
dec
sbb
fsubrs
mov
lods
fisubl
into
xlat
movsl
sub
ret
mov
daa
ja
inc
xor
out
mov
jecxz
xchg
je
xor
adc
mov
push
mov
cli
ret
repnz
mov
enter
add
dec
lret
mov
aaa
out
arpl
sub
dec
loopne
or
sub
icebp
inc
pop
nop
sbb
les
movsl
pop
mov
punpckhbw
subl
or
iret
jge
mov
repnz
cltd
scas
imul
cmpsb
icebp
push
test
sbb
cs
cmc
shll
mov
imul
popf
arpl
sub
fwait
mov
xchg
jb
in
add
imul
and
inc
mov
xchg
sbb
pusha
xlat
call
cmp
mov
or
xor
xchg
mov
xor
ss
ss
xlat
mov
sub
mov
ret
mov
mov
jg
mov
js
xlat
lea
pop
mov
mov
lahf
cmp
fiaddl
int
aam
es
cmp
sub
mov
fstl
adc
mov
movsl
movsb
jmp
inc
dec
cmpsl
jge
ljmp
and
and
je
mov
mov
mov
mov
inc
jg
imull
fdivs
mov
push
fs
adcb
inc
jl
cmp
mov
mov
out
mov
fs
loopne
add
cmp
add
mov
addr16
xchg
cmpl
pop
sub
fs
fisttps
test
je
mov
pop
jg
or
andb
mov
sar
fdivl
pop
sbb
dec
sbb
mov
hlt
lahf
mov
insb
jg
popa
sub
sub
mov
test
add
push
mov
loopne
pop
mov
aad
mov
fwait
xor
and
fidivl
xchg
xor
mov
fidivrs
mov
jo
adc
push
call
mov
pushf
or
cmp
sub
sbb
stos
cmpsb
mov
xlat
push
mov
mov
fnstenv
imul
cltd
mov
mov
xor
mov
mov
mov
aaa
ljmp
pop
repnz
xlat
pop
ds
hlt
imul
popf
aas
mov
scas
arpl
pop
cmpsb
xchg
gs
mov
fadd
outsb
mov
cltd
xchg
jnp
cmp
scas
and
testl
arpl
push
es
adc
andl
sub
mov
insb
btc
fdivs
cwtl
cld
sbb
push
int3
xlat
mov
loop
xor
es
adc
mov
lea
icebp
mov
sub
int3
push
leave
scas
movzwl
ds
cmp
dec
mov
sub
stc
lret
cltd
xchg
aam
push
lahf
push
shll
pop
ds
shrb
cld
in
loop
scas
jbe
stos
cli
mov
dec
movsl
bound
sbbl
int3
jmp
ja
ss
lahf
push
mov
addr16
lods
cltd
outsl
adc
shll
das
mov
adc
lahf
shll
sub
mov
sub
fistl
mov
xlat
push
push
ret
inc
lods
xor
call
rclb
lock
dec
fxch
mov
jns
adc
add
sbbl
cmp
sbb
pop
gs
sub
popf
mov
xchg
mov
fwait
stos
inc
mov
pop
xor
lcall
repz
jae
push
pop
outsl
add
aaa
mov
pop
rcrb
mov
mov
or
ljmp
inc
mov
pop
jl
mov
mov
imul
sbb
xor
xor
pop
cwtl
bound
xor
mov
dec
aad
jl
cwtl
jne
pop
push
mulb
jns
ret
jno
lret
cmpsb
mov
or
inc
jnp
xchg
mov
enter
push
test
movsl
adc
dec
mov
dec
shrl
inc
jo
add
add
adc
imul
jne
sub
test
in
shll
popf
mov
push
mov
das
lcall
hlt
add
js
popa
imul
lret
mov
add
negb
out
push
sbb
test
pop
fwait
lcall
test
out
add
stc
lret
jns
add
testb
jne
sub
push
mov
repz
mov
ficoml
idivb
ja
mov
lods
lahf
sbb
fdivr
std
rcrb
pop
and
ds
mov
inc
pop
mov
xor
bound
xlat
cmp
ret
test
push
push
jbe
mov
and
icebp
adc
xor
fwait
mov
pop
sub
mov
cmpsl
or
xchg
in
in
test
dec
orb
sbbl
and
scas
popf
mov
mov
icebp
cmpsl
lock
bound
jnp
fwait
cmpsl
jmp
popa
push
arpl
cmc
jp
repnz
sub
cmpsl
xor
mov
cmp
jns
in
jg
xorl
or
bound
aaa
push
adc
ja
mov
cs
lahf
adc
sbb
xchg
sbb
sub
mov
and
xor
xlat
pop
lods
aaa
xchg
pop
sbbl
pushf
int3
pushl
dec
mov
pop
popf
or
sbb
dec
fwait
dec
xor
cmp
sbb
stc
test
mov
daa
add
lods
jge
mov
and
repz
lret
inc
mov
test
jno
aas
daa
inc
mov
xchg
xchg
mov
and
movsl
stos
leave
jno
jnp
sub
pop
xchg
stos
add
or
fiadds
inc
fcomp
inc
stos
lahf
cmp
insl
add
mov
jecxz
out
loopne
mov
mov
add
and
mov
dec
cmpsb
fcoms
jns
pop
fsubp
push
mov
mov
jg
mov
push
sub
fisttpl
fdivs
or
addl
insl
movsl
mov
mov
popa
xchg
pop
cmp
cmpsl
sbb
in
sub
insb
mov
inc
xlat
test
mov
mov
movsl
mov
cmp
fdivrl
jo
ret
sbb
insb
mov
mov
mov
negl
cmp
pop
adc
xorl
int
dec
cmpsl
cmp
mov
push
stos
lcall
nop
mov
call
mov
mov
pop
ret
inc
cli
mov
ja
test
movsb
aad
mov
mov
mov
mov
js
cmp
xor
mov
dec
jbe
pop
jp
out
aad
stos
fists
lahf
mov
movsb
xlat
arpl
adc
dec
mov
lods
fldcw
mov
adc
cmpsl
or
stos
mov
sub
fdivr
push
cmpsb
mov
popf
push
mov
mov
cmpl
fisubs
outsb
das
mov
icebp
pop
mov
jne
and
test
mov
int3
scas
cmc
sbb
mov
in
test
mov
add
fcmove
dec
not
mov
ror
xchg
arpl
negl
push
pop
shrl
xlat
xor
adc
int3
or
addr16
mov
cmp
cmp
push
sub
xchg
mov
dec
bound
or
setno
es
in
mov
or
inc
mov
jbe
cmp
xor
mov
inc
mov
xor
lds
xor
xlat
push
xchg
rep
call
movsl
into
mov
scas
bound
cmp
mov
cwtl
dec
sbb
mov
xchg
pop
push
int
mov
adc
xchg
aad
sahf
mov
pop
jp
cmp
jle
mov
cmpsb
xlat
xor
jno
mov
aas
aad
cwtl
push
dec
sarb
fnstenv
cld
out
int
cwtl
mov
cmp
es
mov
cmp
out
or
pop
sti
jnp
mov
subl
rcrb
dec
inc
cmpsl
icebp
fcmovbe
lods
aas
pop
test
mov
clc
adc
adc
jl
dec
shll
imulb
inc
mov
dec
sbb
jnp
pop
dec
divl
cmp
std
addr16
jg
or
mov
push
cmpsl
and
mov
icebp
stc
cmp
mov
sbb
and
mov
mov
flds
mov
lret
mov
inc
mov
lcall
icebp
mov
xchg
mov
cmp
sbb
call
or
adc
xchg
cs
movsl
pop
aaa
das
stc
inc
test
je
jno
xlat
xor
mov
mov
out
dec
jns
dec
mov
mov
mov
stos
loopne
fdivl
sub
fidivs
lcall
push
mov
insl
jmp
mov
or
rorl
inc
scas
cmpl
inc
insl
sub
dec
in
mov
jle
lods
xchg
push
mov
dec
cmpsb
aas
or
out
cmp
addl
rcrl
test
ljmp
cli
jge
lods
mov
rcrl
or
jl
dec
lds
mov
es
mov
fsubrl
jge
roll
cltd
cmp
xorb
lock
fimull
jbe
mov
sub
mov
addl
add
mov
xchg
mov
xchg
push
mov
push
push
cli
mov
lcall
pop
sbb
cmp
push
sbb
gs
adc
and
pop
out
scas
pop
icebp
leave
fnsave
movsl
ret
mov
insb
xchg
sbb
cwtl
fcmove
pop
pop
icebp
iret
jae
data16
shll
jbe
insl
adc
pop
data16
jmp
jns
es
jbe
fwait
repnz
mov
push
pusha
dec
mov
das
pop
iret
ds
jnp
mov
cld
mov
jae
sbb
lods
int
inc
mov
add
enter
fwait
cmpsl
rcrl
mov
cs
fdivrs
and
inc
xor
adc
mov
out
pop
and
jo
xor
repnz
cmpsl
cmp
shl
cwtl
mov
jns
ds
xlat
and
stos
loope
sbb
xor
icebp
sub
fnstenv
inc
inc
ficompl
pop
pop
pushf
cmc
fs
aaa
sbb
and
dec
xchg
push
cmpsl
xor
add
dec
mov
pop
lret
push
imul
lds
mov
add
ds
jns
gs
cmpsb
add
lock
mov
scas
jne
or
and
daa
lea
stos
xor
mov
aad
mov
xorl
in
pop
insl
push
xchg
mov
xorb
mov
xor
ja
mov
scas
dec
mov
mov
mov
fildll
scas
mov
add
in
ret
mov
mov
mov
leave
jmp
xor
cmpl
insl
jne
test
into
cmpsl
jge
adc
xor
pushl
mov
push
pop
mov
mov
xchg
lds
mov
or
addr16
xchg
aam
dec
cmp
test
cltd
inc
mov
mov
inc
iret
add
push
das
mov
aaa
sbb
mov
dec
lcall
shrl
mov
mov
nop
mov
aaa
popa
hlt
and
add
gs
mov
push
mov
sbb
je
adc
cmp
jbe
pop
adc
pop
sbb
xchg
sbb
lret
cltd
je
cwtl
mov
fisttpll
insb
mov
jo
aaa
lcall
ljmp
scas
and
mov
popf
jge
xchg
mov
aam
shlb
dec
fsts
and
mov
out
mov
xlat
repz
scas
mov
icebp
push
cs
mov
adc
insb
ficomps
jge
push
scas
mov
mov
xor
mov
push
cwtl
and
pop
stos
mov
mov
push
pop
cmc
cmpsb
ret
fistl
and
addr16
mov
mov
pop
xchg
mov
jmp
sarb
pushf
mov
jl
push
mov
mov
mov
sub
jb
jns
sbb
movsl
pop
mov
xor
cli
lcall
pusha
xor
scas
ds
jecxz
scas
lahf
mov
call
xchg
lock
cli
test
mov
xchg
cmpsl
aas
imul
sbb
aaa
cmpsl
leave
and
mov
iret
push
icebp
cmp
cmpsb
sbb
nop
sarb
cltd
xor
sbb
mov
mov
and
jmp
adc
cwtl
movsb
es
popf
or
loop
imul
xchg
jp
iret
xorl
xorb
repz
mov
daa
sbb
mov
pop
sbb
mov
xor
xor
jl
adc
mov
sub
in
int3
pop
insb
lea
in
push
es
and
and
inc
addr16
mulb
adc
and
mov
mov
pop
cmpsl
cmp
nop
xor
cmp
cld
and
mov
dec
repz
dec
xor
mov
bound
xor
je
test
jae
jg
jle
arpl
add
xchg
push
mov
and
add
push
push
cmp
loop
sbb
mov
sbb
cmpl
dec
xor
cwtl
and
stos
or
aas
mov
or
popa
xlat
arpl
rcll
mov
es
mov
mull
sub
fcompl
fldenv
sub
mul
push
sbb
out
mov
mov
cmp
xchg
xor
jb
fcmovnbe
pop
xorb
daa
mov
gs
arpl
jp
mov
xor
ret
idiv
out
loop
push
add
mov
xor
xchg
add
dec
jnp
loop
bound
push
xlat
push
ss
jnp
mov
xor
int
popa
fistps
popl
icebp
cmpsl
pop
vhsubps
mov
pop
cmp
mov
lahf
loope
jae
rcll
ja
mov
imul
dec
je
and
addb
push
cmp
cmpsb
rcrb
shrb
push
cli
int3
inc
pop
jb
lock
arpl
addb
adc
pop
mov
loop
xlat
xchg
adcb
push
xor
xlat
xor
push
add
int3
icebp
push
ret
aaa
or
adc
out
sbb
cmp
daa
daa
cli
mov
mov
mov
loope
jge
shlb
aaa
icebp
jg
loopne
testb
cmpsb
mov
inc
mov
xchg
inc
imul
mov
cli
sub
mov
shll
jnp
addr16
mov
jno
and
scas
add
push
nop
andb
push
jl
cmp
pop
mov
mov
and
jns
incb
adc
dec
mov
jae
lock
adc
mov
lcall
repz
cwtl
clc
mov
pop
outsl
mov
mov
push
daa
inc
cmp
call
imul
jns
cmpl
hlt
data16
or
cmp
addr16
popf
mov
test
stos
test
leave
fldt
stc
cmpsl
daa
jno
iret
imul
pop
pop
addr16
xor
and
jp
loope
mov
cmc
cld
arpl
sub
mov
xlat
aam
inc
rorl
arpl
cltd
push
inc
fildl
stos
or
adc
xchg
stc
fwait
cwtl
dec
xor
stos
cmp
mov
faddl
pop
cwtl
mov
insl
iret
inc
rcrl
mov
push
mov
ja
arpl
das
jnp
add
outsb
sbb
push
out
mov
lret
aaa
movsb
mov
shlb
xlat
gs
jns
mov
insl
fs
mov
lea
xlat
or
xchg
add
sbbl
stc
mov
xchg
hlt
stos
btc
mul
cmp
scas
ret
mov
xlat
repnz
xor
mov
jmp
popf
ret
repz
xchg
jp
jnp
popf
addb
xchg
and
mov
dec
out
push
call
inc
lahf
add
icebp
sbb
fisubl
inc
mov
je
out
mov
js
cmp
ret
scas
out
daa
fs
sub
mov
add
adc
insl
lods
pusha
cwtl
les
adc
add
in
lods
sbb
jle
push
adc
cwtl
sbb
test
mov
int3
rcrl
jae
imul
scas
fs
pop
jle
mov
imul
push
shl
jecxz
cmp
cmpl
xchg
mov
iret
shll
or
cmc
jmp
push
lea
addr16
stos
test
mov
push
cmp
jl
cmpl
sub
gs
rcl
cltd
push
arpl
int3
and
mov
adc
and
es
mov
inc
int
mov
std
lcall
cmpsl
loopne
jne
push
test
out
sarl
and
or
andl
mov
xlat
arpl
cmpsl
and
daa
nop
stc
adc
cltd
and
out
insl
imul
stos
in
mov
les
clc
test
sbb
fsubrs
xor
mov
cltd
shrl
and
xor
mov
addb
pop
pushf
add
imul
jae
scas
adc
xchg
jns
testb
arpl
imul
lahf
inc
mov
sub
lahf
push
add
sti
repnz
xor
mov
xchg
lods
imul
mov
cltd
inc
jg
stos
cmp
std
adc
test
outsl
out
inc
lcall
ret
in
stc
add
cltd
aam
out
scas
sbb
cmp
or
cmp
mov
rcll
arpl
test
mov
shll
std
ss
mov
cwtl
or
stc
mov
cmpsl
mov
mov
mov
stc
and
lcall
jg
jp
scas
push
add
push
stos
cmpsl
pop
outsb
pop
xchg
push
test
adc
adc
jge
aas
das
mov
lret
ret
mov
std
out
mov
ret
mov
scas
sbbl
idivl
das
jle
scas
dec
xchg
loope
mov
or
mov
push
mov
loop
jp
sahf
add
repz
pop
cmc
imul
mov
mov
or
push
cmp
mov
or
mov
mov
or
addr16
test
cli
stc
cld
inc
hlt
xlat
or
mov
stos
xor
and
inc
ret
rorl
xor
stc
sbb
stos
cmpsl
mov
cmp
shll
mov
shll
imul
jnp
add
mov
mov
lret
pop
stc
fcmovb
xor
mov
or
inc
aas
arpl
out
stc
xlat
scas
or
add
daa
mov
sub
xchg
inc
mov
gs
popf
mov
mov
cmp
es
mov
imul
repnz
and
add
addb
stc
pop
xchg
imul
xlat
adc
add
cwtl
jge
imul
mov
rorb
jg
mov
push
repnz
mov
arpl
or
mov
and
xchg
fs
and
add
or
fwait
xchg
mov
cmp
pop
mov
movsb
pop
or
mov
and
jmp
fistps
lcall
ret
arpl
lods
mov
adc
mov
test
stc
xlat
add
jns
js
pop
pop
mov
mov
mov
dec
push
jle
jae
out
pop
adc
cmc
fst
push
lahf
mov
in
jno
leave
jmp
aad
mov
andl
push
mov
and
shrb
mov
nop
ds
lcall
stc
in
mov
sub
mov
xor
and
push
push
sub
mov
push
push
inc
cmp
inc
xlat
add
flds
and
cmpsb
das
sub
sbbl
scas
jne
addl
push
fcompl
inc
add
pmullw
push
test
inc
shll
and
shrl
loope
mov
sahf
test
pop
imul
jecxz
fwait
push
mov
icebp
inc
addr16
xorl
jns
outsl
xor
push
and
dec
inc
mov
mov
mov
clc
jge
jnp
mov
stos
mov
inc
cmpl
add
jl
mov
mov
adc
mov
xlat
jecxz
mov
xor
push
mov
pop
jnp
mov
fdivs
jg
mov
mov
mov
xchg
mov
aam
mov
sub
sbbl
pop
lods
xlat
addr16
pop
popa
add
cmpsl
mov
lahf
add
xor
adc
jmp
xor
mov
push
imul
loope
jb
test
mov
mov
loop
repnz
shlb
mov
icebp
mov
or
add
jae
pop
cltd
loopne
and
xchg
adc
mov
mov
mov
jp
adc
cltd
popa
fmull
test
xchg
int3
jb
jge
xchg
aad
fsubs
mov
sahf
outsb
and
sar
and
shlb
in
aaa
add
addr16
jno
lea
pop
icebp
lcall
xorb
cmpsb
mov
roll
loopne
pop
divl
mov
xchg
icebp
pop
rcrb
lahf
xorl
in
daa
repz
push
jns
xor
lcall
mov
gs
mov
loope
add
bound
mov
shll
mov
mov
lret
and
das
xchg
ja
imul
dec
clc
popf
cmpsb
sbb
sbb
pop
hlt
loopne
push
cmp
mov
jl
aad
xchg
xlat
mov
sbb
xlat
sub
jb
xor
cmp
test
sbb
loope
mov
dec
sbb
mov
jne
xor
fstl
mov
xlat
inc
cli
imul
xchg
pop
ret
jle
cmpsl
in
fs
jbe
mov
xor
cmp
mov
rcrl
mov
mov
inc
sub
xchg
out
pop
addb
xor
mov
loope
dec
sbb
scas
fsubr
push
cmpb
fstl
sbb
pushf
mov
pop
adc
mov
xchg
divl
xlat
inc
cmp
aam
rcl
mov
pop
mov
push
mov
xlat
test
loopne
add
addr16
mov
shll
jecxz
repz
filds
das
pop
mov
in
sti
mov
lret
popf
stos
push
pop
repz
mov
pop
shlb
out
cmp
push
lret
jb
mov
mov
xor
push
outsl
inc
data16
xchg
mov
fwait
subl
dec
inc
ss
mov
roll
ret
repz
mov
pop
lods
and
sbb
cmp
clc
mov
pop
pop
dec
rorb
mov
mov
mov
and
stc
idivl
cmpsl
decl
jmp
add
addr16
jno
ss
xlat
cmp
push
and
test
sub
repnz
cmpsl
adc
jbe
mov
loope
arpl
sbb
repz
xchg
aad
lock
loope
adc
xor
leave
cmpsl
stos
int3
sbb
dec
scas
out
and
jno
mov
test
jl
mov
mov
cmpsl
and
xlat
jge
mov
shl
mov
cmp
xlat
mov
lret
sbb
cwtl
sub
popf
cmp
xor
mov
leave
adc
mov
inc
cltd
arpl
mov
sbb
lahf
xchg
scas
xchg
fwait
dec
cltd
sub
sbb
adc
and
mov
iret
xor
ja
out
mov
and
mov
xlat
repz
shll
xor
adc
or
push
cmp
scas
adc
mov
mov
bound
iret
movsb
push
daa
fwait
arpl
into
rcrb
adc
icebp
mov
lret
or
add
mov
shll
inc
shl
gs
xorl
mov
mov
pop
imul
stc
and
pop
gs
call
mov
fwait
pop
mov
mov
xchg
test
daa
and
ja
leave
mov
sbb
lahf
cwtl
fisubl
pop
add
test
insl
stos
jae
lret
inc
addr16
sub
or
xchg
mov
int
outsl
jbe
fcomp
mov
lahf
js
lock
addr16
and
imul
stos
push
xor
cld
setg
aas
inc
sahf
and
adc
addr16
sti
adc
stos
rcll
xor
mov
jecxz
lea
xchg
inc
clc
mov
pushf
mov
mov
jle
push
ss
pop
cmpsl
cmp
mov
or
test
mov
lahf
test
inc
inc
jnp
pushf
inc
mov
leave
cltd
loop
cmpsl
jo
cmp
daa
sub
mov
cmp
test
dec
scas
ss
mov
pop
push
mov
sar
sti
mov
andb
repnz
cmp
cmpl
mov
jge
leave
outsl
lcall
in
xchg
mov
mov
xor
jg
sbb
and
insl
cmpsb
sub
cltd
test
pop
sbb
xor
cmp
xlat
movsl
mov
xor
or
inc
or
push
aad
daa
fsubrs
jo
cmpsl
arpl
sbb
sbbl
fwait
push
lods
arpl
fnstsw
xor
addr16
mov
inc
dec
jmp
adc
and
xchg
mov
add
mov
ficoms
add
mov
or
sbb
pop
fsubs
cmp
or
cwtl
adc
test
mov
pop
or
addr16
cmpsl
sub
ja
cltd
lret
bound
idiv
ds
cmp
std
js
xchg
test
daa
mov
pop
push
cmp
out
scas
pop
lret
fsubs
mov
mov
pop
inc
stos
sub
shl
mov
and
shrb
int3
jb
xlat
inc
mov
popf
cmp
dec
ret
fdivrl
add
cli
aam
mov
movsl
mov
fdivrs
adc
mov
pop
add
sub
nop
fwait
call
aam
mov
mov
into
fs
aas
addr16
xchg
xchg
pop
fwait
add
or
jl
lret
and
dec
lahf
mov
mov
add
gs
ljmp
out
pop
mov
cmpsb
add
xor
out
xor
mov
ds
pop
sbb
push
inc
cld
test
mov
cwtl
arpl
sbb
xchg
fwait
xlat
idivl
mov
inc
xlat
jp
mov
fwait
add
mov
inc
call
push
daa
mov
xor
lods
stc
pusha
add
int
cmpsl
push
lahf
mov
xlat
cs
in
jnp
cmp
xor
mov
mov
adc
bound
cwtl
xchg
shll
test
and
mov
popa
sahf
mov
cltd
mov
jmp
cltd
inc
add
add
and
xor
mov
jns
loope
orl
adc
sub
mov
lods
mov
dec
movsl
ret
addr16
orl
test
mov
xor
mov
inc
mov
add
jae
jno
test
ret
out
xchg
mov
and
cmpsl
mov
sub
jae
stos
stos
xchg
or
push
mov
jns
movsb
out
jg
jnp
aas
data16
xor
dec
add
mov
addr16
andl
mov
push
mov
gs
negl
xchg
jb
fs
stos
jg
mov
inc
int
mov
pop
cwtl
sbb
xchg
sti
pop
stos
mov
les
push
or
xchg
cmp
pop
xchg
ljmp
inc
arpl
adc
and
xor
adc
inc
lret
ret
mov
bound
fwait
ret
cmc
mov
mov
push
mov
adc
xor
xor
daa
test
sub
ret
jge
arpl
jnp
dec
scas
cmpsb
xchg
mov
lods
jb
jae
lahf
movsb
and
mov
call
mov
loope
test
stos
mov
mov
andl
push
sbb
sti
xchg
lods
inc
mov
test
add
and
sarb
jb
loop
xor
je
and
and
pop
pop
adc
out
push
mov
pop
outsl
jnp
cmpsl
and
xor
loop
push
repnz
sbb
loop
cmp
fwait
and
fs
dec
nop
pop
test
loopne
or
mov
fmull
mov
insb
mov
mov
in
mov
stc
mov
push
scas
xlat
xor
ret
mov
inc
dec
loop
xor
lods
dec
andl
cmp
jge
test
in
andl
mov
xlat
sbbl
cwtl
push
es
mov
cmp
mov
repnz
xor
inc
xor
ss
negb
addl
andb
mov
addr16
mov
lsl
popa
xor
enter
fdiv
xlat
dec
inc
arpl
jle
xor
hlt
push
shlb
push
jns
stc
jmp
add
xchg
jl
sub
xlat
rorb
fwait
shll
loopne
mov
loope
repz
sub
mov
andb
jmp
in
shlb
sub
pusha
xchg
dec
jge
mov
cmp
mov
popf
int3
ja
mov
cmp
lods
mov
jecxz
cmp
mov
adc
mov
sbb
loope
mov
pop
jecxz
and
mov
jp
jge
mov
shlb
add
icebp
add
aad
mov
lods
lea
and
lret
mov
mov
jne
xchg
push
add
sahf
and
xchg
push
sbb
imul
fcmove
sti
push
xor
js
and
xchg
push
mov
pop
ret
popf
movsb
mov
adc
mov
inc
inc
pop
push
xor
iret
mov
jl
push
popf
add
sarb
sahf
aaa
mov
aas
cli
cmp
jp
fistl
jnp
cmpsl
sub
adcl
pop
clc
xlat
cmp
adc
mov
or
scas
loope
cmp
add
inc
jno
jne,pn
testl
adc
test
es
and
cltd
iret
push
test
nop
xlat
fs
mov
stos
dec
mov
daa
popf
sbb
and
mov
dec
cs
rorl
mov
mov
xchg
shl
xlat
add
mov
out
or
xchg
mov
bound
insb
cwtl
add
push
add
mov
jnp
and
push
out
sub
or
fildll
push
jae
xchg
push
mov
subl
addb
mov
pop
pop
ljmp
fidivs
imul
pop
fiaddl
daa
rorl
jmp
jnp
mov
ret
enter
jne
or
fistps
dec
lcall
fstpl
aad
jb
cwtl
sbb
mov
movzwl
add
mov
xor
movsl
mov
or
mov
pop
adc
push
daa
jb
mov
push
jns
stos
xchg
mov
inc
push
and
mov
xchg
add
jl
in
cmp
shlb
test
daa
scas
xchg
jnp
outsl
pop
bound
xchg
push
imul
dec
xchg
out
and
pop
mov
test
xchg
add
aad
xorl
adc
mov
loop
cmp
mov
scas
lahf
sub
arpl
lcall
xchg
mov
jmp
repnz
stos
sbb
add
push
xchg
shll
lea
push
mov
mov
mov
dec
leave
in
lret
cltd
push
test
mov
nop
xchg
mov
mov
and
cmp
jl
mov
loop
cmpsl
and
sub
push
ret
lock
cwtl
jmp
mov
cltd
int
mov
movsl
or
cmp
stos
mov
xchg
pop
xchg
shll
xchg
repnz
mov
mov
test
sti
xlat
jmp
ds
add
push
xor
mov
mov
mov
repz
and
gs
cmpsl
xor
arpl
mov
mov
inc
mov
test
fdivl
xchg
and
and
loop
jno
pop
repnz
pop
test
popa
adc
jns
inc
stos
xchg
mov
jae
mov
jbe
cmpsl
pop
hlt
inc
cmp
imul
ffree
cmp
into
cltd
pop
lahf
pop
xor
fisubrs
out
mov
lea
or
inc
mov
xchg
xor
popf
mov
inc
lods
daa
mov
mov
testl
scas
xor
ja
lahf
leave
jle
and
xor
mov
addl
pushf
sbb
popf
scas
jb
js
pop
mov
mov
fwait
subb
roll
adc
test
xchg
mov
push
push
arpl
dec
in
imul
mov
sbb
push
add
xor
cmp
push
gs
pop
fdivs
cwtl
test
mov
aaa
mov
push
stos
pop
jnp
imull
mov
shll
xchg
mov
pop
mov
ret
pusha
inc
jns
ja
lods
or
dec
and
int
push
fwait
lcall
rcrb
stos
clc
sbb
lock
push
xchg
jbe
mov
push
xor
jnp
lds
xor
pop
sarl
add
fwait
mov
sbb
jae
sub
fsubs
sbb
fbstp
add
fwait
out
mov
stos
andl
push
gs
cmc
test
es
fwait
xchg
or
shrb
cmp
mov
xchg
mov
js
jae
add
rcl
cmp
icebp
fwait
daa
enter
lods
xor
adc
xchg
cltd
pop
xor
out
repnz
scas
stos
mov
jnp
mov
mov
andb
stc
mov
out
rcl
lcall
mov
mov
sub
adc
mov
outsb
cmp
and
mov
add
cwtl
pusha
jl
test
push
mov
aas
jnp
or
mov
movsb
mov
arpl
lock
pop
popa
cli
push
cmc
or
cltd
cmp
cmp
mov
arpl
icebp
jnp
pushl
cltd
sub
rcr
fs
xor
mov
sarb
mov
out
mov
xchg
push
sbb
xor
stos
arpl
mov
xchg
cmp
cltd
lret
repnz
xor
mov
gs
jp
xor
bound
lahf
cld
jae
mov
mov
xlat
sbb
xchg
scas
orl
mov
scas
dec
xor
mov
ret
jmp
lea
icebp
cltd
push
pop
add
stos
sbb
sub
sbb
in
sbb
adc
xchg
ja
shlb
push
sbb
cmpsl
lods
add
shl
mov
loope
cli
and
lahf
lahf
add
add
fstps
add
cli
mov
jge
xlat
dec
pop
mov
adc
daa
andl
loopne
insb
ljmp
in
fstpl
sub
xor
or
jae
and
ljmp
mov
sbb
push
lods
call
mov
addr16
cmpsl
out
mov
ret
pop
lock
sub
cmp
cmp
mov
xor
shl
stos
mov
and
xor
aas
jno
mov
add
jne
out
xorb
xor
push
mov
xor
push
addr16
cmp
std
mov
and
std
sub
stos
mov
je
cmp
js
mov
jo
inc
cwtl
sub
jno
mov
icebp
int
test
fwait
test
imul
fwait
jae
mov
mov
mov
inc
mov
aad
cwtl
sbbl
fnstcw
mov
push
xlat
cltd
lods
roll
ret
xchg
and
fistpl
adc
cmp
pop
xlat
gs
cmp
call
jne
mov
dec
jl,pn
mov
jns
hlt
xor
mov
daa
flds
xchg
xlat
dec
sbb
mov
popf
mov
xor
xorl
and
loopne
xchg
mov
xchg
xchg
int3
inc
enter
outsb
mov
jge
ret
xor
or
mov
les
sbb
mov
in
out
hlt
divl
jnp
jne
scas
nop
fwait
add
sbb
mov
pop
sarb
out
lods
jp
stos
mov
sub
or
inc
push
lret
clc
xor
mov
scas
xor
stos
out
pop
mov
cmp
xor
and
dec
or
enter
mov
or
xor
fimuls
cmpsl
mov
stos
dec
xchg
arpl
fwait
pop
popa
stos
out
jb
mov
mov
push
lcall
fwait
testl
inc
addr16
add
mov
in
push
cwtl
xchg
xchg
test
mov
std
xchg
add
or
out
fwait
sbbb
xchg
dec
xchg
ja
mov
xlat
popf
xorb
jae
cmp
or
sahf
fwait
push
aaa
lods
cmp
add
dec
xchg
daa
stos
or
repz
sahf
cwtl
loop
fwait
mov
sbb
test
adc
arpl
mov
or
pop
mov
scas
push
adc
ret
scas
xor
push
nop
insl
fwait
push
inc
leave
cmpsl
es
fcomip
inc
mov
mov
mov
mov
push
inc
addl
out
and
pop
cwtl
pushf
das
fwait
hlt
jbe
push
dec
xlat
adc
stos
dec
fists
movsb
insb
lahf
cwtl
enter
jne
scas
ja
mov
lret
call
rcrb
jle
mov
dec
ret
cwtl
cmc
dec
je
jb
pop
and
xchg
jge
mov
cmp
or
popa
subl
aas
mov
sbb
cmp
mov
and
mov
stc
xor
sahf
leave
scas
jle
xor
sub
mov
lcall
out
test
xchg
jae
dec
sbb
sub
daa
pop
adc
push
ret
fwait
jb
mov
pusha
cli
data16
add
xchg
inc
xchg
nop
mov
cmpsl
mov
mov
mov
xchg
out
scas
mov
aad
std
mov
popa
imul
mov
mov
fsts
and
xor
push
cltd
lret
imul
or
xchg
xchg
movsl
cwtl
and
inc
ret
es
cwtl
test
add
stos
fldl
cltd
mov
xchg
mov
adc
call
xchg
mov
jp
sub
lods
jns
daa
pop
nop
sub
mov
repz
cmp
lea
testl
mov
mov
popa
sub
lds
mov
mov
mov
lret
mov
int3
pop
mov
aas
inc
pop
je
jmp
in
ja
cmp
xlat
cmpsl
dec
scas
ret
lea
scas
push
test
pop
into
push
mov
js
jmp
cmp
loope
xor
pop
lcall
loop
mov
divl
cmc
sub
mov
mov
jns
inc
mov
mov
sti
cld
push
adc
out
in
cmp
push
and
sarl
leave
cmpsb
cmpsb
inc
xchg
jbe
in
jno
repnz
mov
scas
cwtl
and
mov
mov
add
mov
pop
aad
ja
xor
mov
add
pop
lret
jbe
es
mov
mov
and
jecxz
hlt
mov
ja
jb
sti
pop
pushl
mov
mov
push
int3
sbb
mov
add
add
add
xchg
jle
ljmp
inc
icebp
dec
sub
push
fcoms
xchg
pop
sub
pop
add
pop
mov
mov
jl
iret
or
push
mov
shll
xor
clc
loop
adc
imul
sbb
mov
mov
jle
data16
pop
mov
je
fwait
in
push
cmc
mov
not
bound
icebp
stos
imul
cmp
sub
jb
jne
sti
loope
shlb
sbb
fistl
mov
push
jne
popa
inc
jbe
mov
pop
cli
inc
repz
sarb
lret
sub
sub
mov
mov
fbld
xchg
mov
leave
mov
out
sahf
stos
arpl
mov
mov
mov
inc
and
icebp
cli
jnp
mov
movsl
jecxz
ret
in
and
sbb
mov
jns
popf
and
mov
test
in
sub
lahf
cmp
mov
or
mov
movsb
push
or
pop
fsubs
js
movsb
inc
push
cmp
mov
dec
movsl
cmp
dec
sbb
fsub
mov
cmpsl
lea
repz
and
mov
std
lahf
xor
xlat
jecxz
int
push
incb
mov
mov
add
daa
and
in
mov
ret
or
jo
xor
mov
not
and
add
leave
mov
pop
inc
xor
and
fadd
cmpsl
imul
pop
mov
jg
cmp
ret
dec
pushl
cmpsl
jbe
inc
cwtl
fs
enter
out
stos
sbb
mov
rcll
jne
ss
repz
hlt
sbb
push
pop
jmp
movsl
inc
stos
push
es
test
xchg
sbb
pop
mov
mov
sahf
pop
mov
or
popa
jmp
fsubs
test
sti
loope
inc
jne
sbb
loop
pushl
ss
xchg
es
cmp
aam
mov
cmp
movsl
popa
js
movsb
inc
in
push
roll
ss
push
rcll
nop
inc
pop
cmp
jecxz
movsb
js
push
sarb
cltd
xchg
mov
xchg
aad
adc
xchg
sbb
lahf
mov
add
test
or
imull
mov
push
lcall
out
rorl
or
cmpsl
xor
xchg
dec
sbb
mov
leave
push
jp
nop
jns,pt
cmpsb
or
cmpsl
sub
mov
sti
mov
mov
imulb
mov
clc
sub
mov
test
xchg
cmp
insb
andb
push
fnstcw
jg
mov
cmp
lods
int
jns
jo
popa
jbe
push
sbb
pop
cmpsl
lea
aad
cli
ja
xlat
popf
mov
xchg
jge
ss
cwtl
scas
jne
cmp
or
push
das
pop
mov
stc
add
inc
in
mov
pop
loopne
mov
sbb
sbb
jmp
pop
insb
pop
cmpl
mov
pop
jb
imul
pop
push
jmp
insl
test
or
jge
push
orl
cmpsl
or
mov
movsl
pusha
ds
test
addr16
cmc
push
cmpsl
dec
push
mov
and
mov
pop
mov
xchg
iret
aaa
nop
mov
and
std
cli
xor
cwtl
loope
popf
and
mov
inc
pop
jns
xchg
mov
js
in
loope
fnstsw
jne
lret
xchg
stos
cmp
xchg
add
stc
mov
rcl
fcom
pop
jmp
fildll
jmp
xlat
in
leave
jo
in
faddp
in
aas
sub
cmc
mov
cmpsb
mov
mov
xor
xlat
push
inc
cmc
dec
mov
iret
xorl
mov
lcall
test
pusha
ljmp
hlt
pop
mov
xchg
sub
ret
mov
dec
lock
ljmp
rcr
loop
push
hlt
sbb
inc
cmp
ds
movsl
push
ret
mov
test
loopne
mov
mov
pop
mov
mov
jl
daa
jbe
ja
push
fwait
adc
sub
in
push
mov
nop
ja
xor
outsl
out
dec
cmpsl
sbb
jns
push
stos
fbld
xchg
imul
cmp
jb
xor
ss
mov
cmp
cmp
and
sbb
mov
push
adc
sub
and
fwait
lcall
popf
ret
dec
in
dec
fidivrs
lods
jge
adc
sbb
scas
mov
push
add
inc
das
pop
mov
lods
and
int3
push
sbb
aaa
mov
mov
jbe
outsb
pop
out
mov
imul
dec
sub
mov
cld
icebp
jp
sbb
leave
int
ja
popa
inc
test
mov
pop
rcrb
mov
leave
add
arpl
push
cs
mov
outsl
cwtl
mov
ror
cmc
add
in
jns
lods
xchg
addr16
mov
mov
enter
mov
xlat
insb
dec
ja
jge
inc
cltd
mov
sub
std
int
cwtl
sub
lret
movsb
movsl
dec
jg
mov
nop
push
or
jns
jl
xchg
scas
mov
sub
fs
sbb
cltd
mov
lea
in
imul
xchg
add
mov
fstl
push
data16
mov
out
aaa
pop
xor
dec
ljmp
dec
jle
cmp
or
mov
sti
mov
or
cmp
inc
cwtl
mov
push
xchg
or
sarb
cmp
out
cmp
dec
loopne
addr16
scas
ret
push
sbb
push
mov
push
xlat
or
cmp
icebp
pop
cmpsl
push
bound
stos
movsl
fimuls
or
mov
adc
loopne
xlat
rcl
aad
pusha
mov
fadd
sub
or
mov
add
cmpb
int
cmp
popf
jbe
or
xlat
push
aad
call
mov
jge
shlb
push
dec
cmp
mov
jne
enter
sbb
aad
xchg
sub
rcl
adc
mov
jo
or
or
mov
stc
mov
insb
fbstp
mov
es
dec
pop
dec
mov
cmp
aam
jle
cmpsb
mov
mov
pop
je
sbb
sti
leave
mov
add
sbb
mov
xchg
std
inc
push
xor
shlb
dec
mov
lds
add
xchg
sbb
jecxz
pop
data16
hlt
pop
sbb
pop
or
cmp
inc
push
jmp
jb
mov
iret
icebp
fimuls
mov
dec
mov
xor
cmp
or
dec
pop
aam
push
sbb
inc
add
and
loopne
xchg
inc
mov
mov
dec
cmp
iret
repz
inc
mov
aam
xor
in
mov
mov
jo
scas
dec
pop
mov
negl
jno
cli
dec
and
mov
rcrb
rorl
xlat
cmp
jl
mov
push
adc
cmp
sub
in
sbb
push
xor
ret
inc
lret
dec
jmp
popf
xor
call
cs
xchg
add
pushf
das
loope
ss
dec
mov
xor
lock
pop
jecxz
scas
xlat
inc
lcall
push
cwtl
push
ficoml
dec
or
pop
adc
mov
ret
std
mov
mov
and
add
notl
cmpsl
cmc
push
test
iret
mov
add
cmp
mov
adc
and
mov
fsubrl
dec
adc
iret
jne
xlat
add
leave
mov
or
sub
lret
jp
jge
inc
add
sti
mov
mov
add
xchg
jae
and
adc
in
lret
loopne
movsl
fwait
adcb
fsubl
xor
stc
cli
test
xlat
inc
fistl
pushf
mov
aaa
or
push
jb
mov
jne
cmp
rcrb
enter
ljmp
adc
xchg
xor
arpl
mov
daa
in
or
sbb
cwtl
subb
push
out
add
inc
jmp
extrq
sti
mov
xor
loope
mov
outsl
rcrb
mov
mov
out
add
scas
enter
cmp
mov
cmpsb
pop
andl
lahf
sbb
and
mov
mov
inc
insb
lahf
xor
loopne
jmp
push
pop
mov
stos
adc
or
out
test
fmul
mov
std
cld
aam
or
jo
sti
sbb
mov
pop
addr16
and
push
push
call
mov
pop
jbe
movsl
mov
or
mov
aas
mov
xchg
jo
js
mov
inc
jl
jp
mov
lahf
cmpsb
xchg
ss
push
sbb
sbb
and
xlat
testb
mov
mov
jge
test
adc
jne
stos
cmc
xor
mov
xchg
push
add
fdivp
arpl
xchg
mov
mov
dec
lcall
enter
mov
aam
cmp
jo
sub
scas
inc
or
loope
and
mov
dec
call
and
insl
sub
fmul
pushf
sub
xchg
jecxz
cli
lret
jo
jne
push
jg
out
js
shlb
cld
fdiv
aam
dec
test
ret
and
pop
leave
jne
add
jb
add
xor
cmc
movsb
xor
les
leave
add
roll
and
jge
imul
rol
xor
cmp
aaa
aam
fldl
xchg
test
aas
mov
daa
clc
fildll
mov
cmpsl
loop
sub
inc
je
xchg
mov
and
cltd
dec
aaa
or
cmpsl
aam
popa
fsubp
sub
sub
test
fs
cmc
lret
jnp
pop
pop
test
sti
test
addl
and
idivb
dec
outsl
dec
or
ret
jge
adc
mov
cmpsl
fadds
mov
cwtl
and
and
mov
pop
adc
mov
adc
jl
rol
imull
in
outsl
shll
or
push
rcll
push
and
mov
jg
loope
cwtl
cld
sbb
arpl
fwait
rolb
jge
or
mov
xor
lcall
aaa
xchg
push
mov
jecxz
imul
fcmovne
mov
mov
xchg
push
cltd
imul
inc
mov
aaa
sbb
fwait
lahf
xorl
dec
std
pop
test
arpl
add
fcmovnu
andl
rorl
or
pop
cmpl
gs
arpl
outsl
mov
dec
clc
push
inc
jbe
xlat
push
inc
testl
dec
loopne
incb
mov
xlat
sub
pop
mov
mov
mov
add
in
and
pop
lods
bound
out
scas
cmp
jmp
ffreep
jecxz
adc
fisttps
stos
mov
cmp
fdivs
mov
mov
insb
ret
mov
xor
lds
in
add
mov
push
popa
fldt
jae
mov
insb
call
ret
mov
jns
adc
jge
push
mov
pop
outsb
and
or
mov
out
mov
inc
push
xor
jnp
jae
and
test
in
xlat
loop
sub
aaa
dec
mov
test
sbb
stos
adc
push
std
out
or
jns
mov
add
pop
ss
xchg
scas
add
pushf
mov
scas
daa
mov
or
pop
cs
lcall
or
adc
ss
addl
sub
push
sbb
sub
lods
repz
dec
mov
imul
mov
cmp
mov
fdivrs
outsb
push
xchg
xchg
pusha
push
mov
mov
fldcw
lock
mull
sti
jecxz
iret
stos
out
and
pop
inc
xchg
dec
adc
xor
xchg
and
bound
mov
inc
ret
and
inc
mov
adc
mov
sahf
ja
fistpll
pop
mov
or
fidivrl
ss
add
in
xchg
or
mov
xchg
xor
jns
mov
icebp
aam
cs
sub
shll
jmp
add
adc
fsubs
sbb
lret
push
inc
ficomps
jo
cmp
and
jp
jmp
inc
and
jno
xchg
mov
in
ret
divl
sbbl
cmp
iret
and
shlb
sahf
mov
push
sub
fisttps
mov
imull
adc
inc
and
sti
test
xchg
push
mov
movsl
add
lea
xchg
outsb
stc
arpl
pop
mov
movsl
and
xlat
and
and
mov
cwtl
pop
dec
mov
push
notl
lahf
jecxz
cmpsl
lcall
sbb
repz
hlt
xlat
mov
inc
fs
jb
push
testl
adc
xchg
push
push
pop
mov
ljmp
fnstenv
ja
clc
dec
mov
out
iret
or
in
and
jecxz
cld
orb
incb
jp
dec
jnp
arpl
jge
jmp
ret
mov
aaa
sbb
lods
mov
fwait
cmc
mov
lods
enter
jb
mov
pop
or
add
aad
xor
xlat
inc
js
insb
push
sbb
outsl
clc
mov
mov
jae
mov
dec
ss
sub
cs
loope
cld
jg
iret
jno
mov
sarl
cwtl
mov
shl
mov
xchg
popa
adc
mov
mov
pop
and
adcl
shlw
pop
inc
mov
les
sub
fs
leave
scas
inc
add
lahf
shll
sub
jg
arpl
cmp
dec
lods
push
aad
sub
fidivrs
int
or
xchg
jne
in
adc
inc
shl
adc
jmp
lahf
mov
push
ret
cltd
mov
aad
repz
ret
jmp
insb
call
lcall
pusha
jl
lret
push
jg
out
add
or
dec
rolb
pop
sub
xchg
mov
das
and
jns
add
lahf
scas
pop
popa
rorb
inc
pop
cmp
arpl
pop
pushf
loopne
sbb
jne
ds
cmp
mov
fidivl
mov
mov
iret
enter
loop
cwtl
jne
and
or
xor
cwtl
ss
outsl
cmp
xchg
inc
loope
lods
dec
sbb
cmp
je
bnd
les
dec
mov
jl
cmpsl
cs
ss
cmp
divl
cmp
mov
lahf
mov
mov
popf
sub
mov
add
pop
add
cmpl
icebp
pusha
ffreep
stc
fwait
push
add
scas
movsb
repz
push
inc
xchg
call
xchg
push
pop
mov
mov
mov
cmc
sahf
mov
cwtl
mov
fwait
cmpsl
sub
xchg
test
pop
push
mov
icebp
mov
or
pop
mov
fs
out
xlat
adc
out
xor
ja
movsb
pop
push
xor
mov
mov
stos
mov
jge
les
insb
cmp
in
and
loopne
pop
scas
add
cmp
fs
mov
imul
xlat
out
and
cmp
sbb
aam
imul
in
js
mov
out
in
ret
bound
mov
xchg
ret
cmp
movsl
push
popf
inc
jo
stc
sub
leave
push
addl
jecxz,pn
inc
inc
fs
jle
cmp
ror
inc
mov
cltd
mov
mov
pop
xor
out
mov
das
or
fcmovbe
daa
sbb
jo
push
cmp
push
mov
enter
xchg
loopne
sti
stc
testb
dec
xchg
and
ja
hlt
fs
adc
imul
frstor
mov
daa
and
pop
dec
dec
cmpsl
push
xchg
sbb
jmp
js
xor
sbb
mov
pop
sahf
enter
mov
sahf
pushf
mov
je
pop
popf
scas
jns
xchg
pushf
and
sub
pop
or
mov
add
mov
test
or
jnp
mov
push
pop
lahf
sbb
and
sub
jo
clc
mov
movsl
pusha
dec
jns
test
pop
sbb
mov
dec
test
jl
and
xor
sbb
and
aad
and
and
sub
mov
sub
xchg
lcall
mov
sbb
jnp
mov
cmp
cmp
icebp
lock
call
clc
cltd
out
xchg
pop
out
jns
mov
or
cli
pusha
cmp
cwtl
lods
jo
jae
cmp
mov
dec
mov
xorl
cmpsl
aas
sub
mov
shll
loop
sub
pop
js
lock
mov
negl
mov
ret
repnz
mov
mov
insb
push
mov
and
scas
fwait
xchg
adc
push
ja
mov
adc
mov
test
push
pop
mov
lcall
mov
stc
leave
cmp
repz
xlat
out
in
push
sbb
pop
les
lock
pop
jo
lcall
and
stc
push
sti
stos
in
inc
stc
lret
mov
roll
ja
or
mov
or
pop
mov
lret
lock
lock
mov
push
fwait
sbb
aam
sub
stos
addr16
rorb
insb
fistps
orb
cltd
std
mov
mov
cmp
loope
mov
ss
sarl
pop
jmp
pop
scas
pusha
movsb
xchg
sbb
mov
test
push
sub
xchg
cmp
in
ror
mov
bound
jns
jns
dec
repnz
cmp
mov
xor
addr16
mov
dec
ss
inc
scas
jmp
push
dec
mov
movsb
lods
jb
lret
cmp
scas
stos
pop
movsb
aad
ljmp
ss
mov
sbb
mov
inc
and
sub
cmp
mov
dec
inc
mov
arpl
mov
jbe
cmp
push
mov
adc
push
cmp
outsl
aaa
test
nop
hlt
aam
int
fstl
mov
fidivs
pushf
fstpt
ja
sbb
ret
mov
scas
dec
ret
mov
mov
pop
xor
out
xchg
divl
mov
div
ja
aam
adc
ss
fstpl
inc
jg
cmc
cmpsl
jnp
icebp
ja
call
xchg
xchg
mov
mov
mov
imul
testl
mov
jne
mov
jo
adc
dec
sub
add
pop
cmp
aam
adc
xor
jp
adc
imul
inc
jb
xchg
pop
push
inc
out
jmp
aas
inc
xor
aam
xchg
dec
data16
jae
stos
jmp
ret
out
jp
cwtl
adcl
mov
add
call
mov
pop
or
test
lcall
bound
and
mov
mov
icebp
je
or
dec
stc
fnsave
out
addr16
aad
jbe
xlat
fwait
cltd
lock
xchg
fsubs
out
and
scas
mov
into
adc
dec
sbb
mov
push
dec
pop
outsl
mov
dec
test
mov
cmpsb
cmpsb
mov
mov
sbb
andb
je
stc
pmaddwd
push
dec
mov
inc
push
xchg
icebp
test
xchg
dec
inc
jge
pop
or
jl
lods
fadds
dec
mov
outsb
inc
int3
mov
add
daa
mov
jbe
sub
shl
jo
imul
mov
dec
inc
imul
enter
ss
inc
aam
dec
scas
ret
lods
clc
mov
fisubrl
aam
testl
lcall
jbe
icebp
fidivs
xchg
hlt
pop
in
insb
inc
mov
pop
sub
loop
mov
movsb
mov
add
idiv
loopne
jo
mov
mov
or
inc
and
push
and
mov
inc
mov
sbb
mov
xor
jno
cwtl
jns
cmc
mov
outsb
insb
out
mov
and
push
dec
gs
test
mov
test
test
pushf
cmp
xor
dec
mov
cmp
jmp
jmp
pop
fidivrl
sahf
push
mov
cli
or
into
stos
push
or
fbstp
cwtl
cmc
mov
sbb
mov
aas
decl
out
insl
inc
cmp
cltd
dec
sub
sub
bound
fsubl
dec
sub
mov
icebp
xchg
mov
fistpll
fwait
mov
call
sbb
mov
mov
cmp
sub
bound
xor
mov
xor
mov
mov
inc
subl
ljmp
inc
orb
push
cmp
mov
cmp
movsb
fdivs
push
xchg
pop
les
int3
sar
shll
aas
clc
lods
ret
sub
cmp
mov
or
int3
cld
cltd
cmpsl
dec
jmp
mov
mov
ds
clc
aaa
imul
and
enter
js
jmp
lods
or
leave
aad
fisubrs
add
clc
sbb
or
mov
shr
daa
cltd
and
fistl
xor
mov
movsb
clc
movsl
adc
mov
add
or
and
jns
and
xchg
push
fs
cmp
xchg
gs
test
add
cmp
mov
scas
icebp
pop
cmp
js
dec
stc
mov
push
icebp
enter
shll
clc
xorb
dec
mov
xchg
xchg
sub
aam
add
push
cmp
adc
jmp
shr
mov
repnz
dec
cmp
push
sbb
subb
in
in
cmp
clc
jno
lahf
or
sbb
aam
test
dec
incl
and
cld
pusha
mov
pop
adc
insl
cmc
inc
xor
loopne
jbe
mov
lret
lds
out
mov
jmp
lcall
xchg
arpl
jnp
inc
int
or
icebp
xlat
aas
in
sub
sbb
subb
fldl
bound
fisubs
cmp
mov
das
push
je
add
jns
js
push
cmp
push
dec
xchg
test
cmpsl
out
push
mov
pop
adc
xchg
mov
mov
sti
fadds
mov
push
mov
sub
jne
jns
cmpsl
mov
inc
mov
mov
adc
enter
sub
fstpt
stos
fs
inc
negl
xchg
mov
mov
or
dec
mov
movsl
and
jbe,pt
lods
push
and
icebp
pop
mov
push
mov
mov
xor
lret
pop
repz
mov
sub
push
adc
push
dec
xlat
push
js
push
mov
rorl
jne
cmpsl
push
and
dec
aad
jns
shrb
jge
pop
js
xchg
push
lods
loope
pop
xlat
movsb
cmpsb
stos
dec
fadd
shlb
les
loop
fisttpl
shlb
mov
pop
dec
add
push
fsubr
and
repz
sub
push
enter
inc
ja
shlb
mov
xchg
dec
and
sub
xor
pop
xchg
pop
aam
or
and
or
and
push
repz
cmpsl
popa
mov
cwtl
xor
dec
add
or
mov
bswap
aam
js
xor
shl
cmp
cmp
ja
and
xchg
mov
push
fwait
mov
repz
scas
xor
sbb
xchg
xchg
mov
and
dec
dec
fcoms
xchg
clc
fwait
jp
xchg
iret
fsts
sbb
enter
xchg
int
and
xchg
jge
bound
adc
mov
jb
aaa
dec
outsl
mov
ret
imul
je
push
ds
push
xor
adc
out
jbe
mov
xor
in
out
js
stos
inc
mov
mov
pop
jns
mov
shll
or
pushf
movsb
pop
mov
not
std
movsb
scas
cmpsb
xchg
les
mov
jb
pushf
and
sbb
mov
inc
pushf
mov
lret
mov
push
dec
call
add
mov
push
add
jmp
testb
pop
or
mov
mov
iret
jno
fmull
jecxz
mov
aad
jl
ficompl
push
mov
push
out
pop
sti
es
imul
push
scas
sarl
mov
jo
je,pt
xchg
mov
cmc
push
in
dec
mov
lock
fnsave
mov
sbb
scas
int3
subb
mov
shll
popf
rorb
or
movsb
faddp
or
fisubs
cmp
sbb
xchg
adc
dec
adc
aam
ss
cmpb
fimull
shll
cmp
inc
in
lea
cmp
dec
sub
pop
cmp
nop
pop
sbb
shr
sbb
hlt
dec
cmp
call
push
fldenv
call
cmp
leave
sub
push
jl
or
fwait
inc
call
jns
mov
popa
sbb
js
sub
in
pop
inc
mov
xlat
cmp
fiadds
xchg
js
outsb
movsb
lcall
cmp
iret
call
test
or
icebp
mov
jno
cs
test
movsl
xchg
cmp
sbbb
movsb
jecxz
cmp
sub
aam
push
add
mov
int
xlat
dec
mov
loopne
std
cmp
jne
jmp
idivl
mov
int3
cmpsl
out
adc
mov
sarl
cmc
sbb
push
sub
or
cmp
ja
in
leave
out
and
sub
mov
jp
icebp
adc
jbe
sub
push
stos
and
icebp
mov
pushf
cmpb
mov
in
xor
stc
out
mov
mov
cli
cmpsl
and
loope
mov
dec
xor
cmp
rcl
lock
pusha
xor
push
leave
jbe
jecxz
pop
dec
pop
mov
push
mov
in
lods
sbb
faddl
pop
dec
aam
popf
faddl
jno
das
stc
add
mov
icebp
shlb
add
test
out
fbld
fildll
aas
shll
pop
call
imul
lock
daa
cmp
lcall
cmp
mov
insl
icebp
stc
mov
sub
pop
push
mov
and
mov
lods
adc
and
inc
mov
test
mov
mov
leave
mov
rcr
cmp
fdivrp
mov
xchg
movsl
aaa
mov
jp
test
fbstp
scas
cmp
pop
loop
push
add
sbb
mov
jbe
sub
cmp
lods
popf
mov
push
cmp
icebp
js
adc
push
jnp
jb
inc
loop
mov
inc
or
mov
loopne
add
aas
dec
cmp
xorb
jnp
push
divl
cltd
or
inc
xlat
lods
mov
std
dec
mov
cwtl
aam
cmp
pop
mov
cmp
push
gs
cmpsl
testb
mov
add
mov
xchg
test
cmp
inc
movsb
daa
insb
ljmp
sti
mov
std
gs
fisttpll
mov
mov
daa
inc
and
mov
negl
das
lret
js
jmp
loopne
mov
cli
cmpsb
jb
je
xchg
cltd
adc
mov
sbb
imul
clc
inc
add
sub
int
and
and
idivb
pop
cltd
or
jbe
or
js
sub
push
cld
jnp
test
push
jo
push
clc
lahf
sub
das
push
and
mov
mov
add
cmp
adc
push
rcl
sarb
icebp
jbe
dec
mov
rolb
and
je
sbb
pop
mov
jl
movsb
in
xlat
movsb
jnp
jle
ret
das
jp
je
testb
aad
pop
inc
mov
popa
xchg
test
dec
and
pop
inc
mov
cmc
icebp
out
scas
hlt
cmpsl
and
scas
mov
mov
jbe
push
or
stos
cmp
sub
mov
jo
mov
inc
push
jbe
popf
cwtl
jmp
mov
sti
out
cmc
in
hlt
stc
out
stos
in
mov
hlt
rorl
movsb
shl
dec
mov
adc
fstl
dec
popf
jl
push
mov
cmp
sbb
pop
jle
flds
mov
fidivrl
mov
iret
cmp
push
aaa
out
mov
sub
dec
imul
fmuls
enter
xor
mov
and
lahf
xchg
imull
cmp
xchg
push
dec
out
pop
aam
adc
jge
mov
mov
adc
mov
je
mov
dec
mov
jmp
pop
xor
jg
cli
add
xchg
dec
add
out
mov
ja
inc
movsb
add
mov
icebp
push
cmpsl
add
mov
or
mov
stos
setae
sub
lods
adc
lods
add
aam
jbe
mov
mov
movsb
aam
jne
lock
aas
in
or
sbb
dec
mov
lret
rcrb
adc
xor
adc
into
repnz
adc
in
lret
mov
enter
cmp
mov
les
push
popa
cmp
add
out
sbb
aam
fcoms
mov
cmp
cmp
clc
loope
insl
out
call
and
imul
outsl
int
cld
jp
mov
mov
push
sub
and
pop
and
cmpsl
mov
lods
sub
adc
push
test
mov
pop
and
loope
jae
aam
push
mov
add
ret
and
int
pop
into
dec
sbb
mul
xor
ljmp
pop
and
sub
call
pop
bound
add
sarb
aam
or
retw
sub
movl
lcall
in
in
cmp
xchg
inc
icebp
lock
push
pusha
or
jmp
mov
push
out
pop
cmp
cwtl
dec
lret
inc
mov
cmpl
jo
pop
jns
add
inc
fsubs
sbb
xlat
and
aad
xchg
rcll
mov
icebp
out
sar
jmp
sbb
std
fsubl
les
sub
add
adc
daa
inc
dec
pop
sbb
stc
push
xor
ret
mov
aam
push
cmp
add
in
pop
push
cmp
ss
fadd
and
icebp
rclb
lods
lahf
and
mov
inc
mov
jae
mov
jge
jmp
push
mov
push
ss
add
stc
or
insb
aam
lods
adc
add
mov
movsb
xlat
ds
mov
and
sti
aaa
adc
mov
insb
adc
jno
xor
fimull
cld
ja
stos
dec
test
addr16
pop
stos
divb
mov
mov
rol
stos
dec
fisubrs
mov
movsb
jmp
jl
mov
add
dec
mov
aas
aam
dec
xor
std
subl
fsubs
lods
push
shlb
and
sti
sub
and
sub
xchg
mov
sub
mov
or
shlb
stos
fmulp
pop
mov
xor
and
hlt
out
push
nop
xchg
dec
mov
sub
and
fsubl
adc
in
iret
arpl
frstor
mov
popa
or
pop
mov
nop
add
es
jb
in
mov
arpl
mov
sbb
lea
mov
cs
xchg
cltd
lret
das
mov
dec
xor
enter
movsb
ja
lods
mov
loopne
mov
sbb
adc
inc
icebp
add
ja
and
jge
mov
sub
mov
movsb
push
jp
test
push
fldenv
inc
call
pop
movsb
shrl
cmp
cmp
loopne
jecxz
mov
mov
in
add
push
je
xchg
les
push
repnz
insl
mov
sbb
faddl
testl
mov
movsb
lds
scas
dec
into
pop
mov
add
dec
sub
aam
in
mov
fcomip
aam
loopne
sbb
jecxz
je
stc
pop
push
sub
mov
mov
ds
fldl
mov
mull
out
mov
push
mov
imul
xchg
mov
cli
int
dec
sbb
cmp
and
jg
xor
xlat
movsb
push
data16
imul
stos
mov
cmp
or
scas
testl
jns
xor
adc
lods
jbe
pop
mov
js
adc
cmpsl
imulb
fdiv
push
scas
bound
jbe
aam
sub
cwtl
in
iret
in
jo
mov
arpl
xlat
xchg
dec
push
lret
divb
lods
mov
das
adc
inc
mov
rclb
mov
sub
add
mov
int
mov
cmc
jmp
xchg
ds
repz
fs
mov
fs
lock
jle
outsl
cmp
enter
imul
aaa
je
bound
loopne
mov
xorb
and
dec
stc
aas
lret
mov
jbe
imul
iret
test
outsl
ljmp
aam
cltd
and
repnz
gs
xor
imul
jne
stc
cld
jb
lret
repz
mov
test
fmul
sub
out
or
adc
ja
lods
push
jl
movsl
ror
mov
sbb
push
pop
fdivl
mov
std
test
xor
neg
pop
mov
cli
dec
mov
mov
jno
scas
mov
jno
cmp
lods
fcomi
mov
mov
pop
fsubrl
imul
ja
lea
sub
stos
lock
jbe
out
popa
lods
mov
scas
sub
insb
cmp
cltd
out
ja
movsb
adc
stc
pop
xor
xchg
movsb
inc
scas
inc
ljmp
mov
lcall
mov
rorl
mov
movsb
or
push
pop
adc
dec
es
and
push
push
jmp
test
adc
dec
mov
or
stos
mov
repz
xor
test
push
lods
sbb
adc
mov
hlt
stos
xchg
int
enter
rol
mov
popa
xor
aam
cmpsl
ds
mov
lahf
mov
or
call
xor
fdivs
test
xor
movsb
jb
or
cmp
pop
cltd
loopne
push
std
shl
rclb
or
cmpsl
push
aam
push
sub
ficoms
xlat
in
pushf
rclb
or
fs
mov
mov
pop
lods
imul
jae
andb
jo
in
out
mov
stos
adc
jmp
retw
sbb
lods
gs
je
in
mov
cmp
cmp
adc
cmpsl
mov
movsb
pop
ljmp
repnz
mov
push
pop
push
fisubrs
mov
out
mov
mov
jo
incb
mov
push
cwtl
add
leave
sarb
sub
fistpll
shr
ror
mov
cmp
mov
je
push
mov
inc
lods
pop
cs
stc
ret
jb
lcall
mov
test
xor
xchg
adc
dec
sarb
mov
test
stc
loope
or
stc
mov
adc
jl
xchg
xchg
lods
push
sub
cmp
sar
idivl
addr16
js
test
cmc
cmp
js
test
andl
and
inc
pushf
repz
fdivrs
rorb
shl
enter
cmp
cmpsl
movsb
sahf
mov
adc
cmp
movsbl
or
xlat
movsb
nop
sbb
std
mov
test
cmpsb
loopne
cmp
xor
cmp
scas
aam
xchg
mov
or
stc
sub
sbb
cmp
jecxz
pop
push
pop
out
fmul
adc
iret
and
imul
cmp
add
or
mov
xchg
jo
aas
mov
adc
int3
fidivs
xchg
cmp
out
test
add
mov
jp
mov
insb
je
inc
xchg
rolb
addr16
or
addr16
movsb
jp
sbb
sbb
bound
test
mov
jmp
test
inc
movsb
sbb
pop
mov
dec
mov
movsb
pop
dec
pop
jnp
mov
add
add
mov
mov
xor
cmp
dec
inc
fmuls
leave
add
cmp
sub
in
mov
sahf
pop
ret
jno
jmp
sarl
adc
repz
jae
add
mov
mov
mov
add
in
sub
loope
mov
je
adc
ds
loopne
fidivrl
loopne
dec
shll
cmp
lods
sarb
lret
shrb
mov
aad
cmpl
test
mov
push
lahf
fstpt
jb
and
jb
loopne
imul
mov
ljmp
push
mov
mov
mov
sub
mov
movsb
shrb
loope
cmp
sub
jmp
movsb
test
out
cmc
jmp
mov
fstpt
mov
sub
mov
xor
cmp
push
nop
and
pop
stos
lods
lock
cmp
daa
sbb
pop
mov
and
mov
xor
fisubrl
or
lods
mov
and
jb
fbstp
lret
mov
stos
fldt
inc
pushl
sarb
pop
aas
mov
subb
cmpsl
mov
fstpt
ds
mov
sarb
mov
std
test
mov
inc
stos
ret
cmp
sub
lods
fs
sub
cmp
mov
movsl
ljmp
inc
lods
fisubrl
shrl
and
mov
inc
xchg
adc
ljmp
les
cmp
stos
push
mov
insl
sbb
aaa
jae,pt
aam
daa
mov
loope
int
cltd
sbb
aam
lds
stc
test
xor
or
pop
and
push
dec
pop
fs
loopne
xor
jg
inc
cltd
scas
repz
mov
iret
movsb
cmc
xor
add
lret
mov
aaa
movsl
push
xor
lods
or
and
enter
std
dec
in
xchg
inc
cmpsb
xchg
dec
je
sahf
sbb
push
mov
adcl
popf
or
inc
loope
add
sbb
mov
popf
cmpsl
xor
fisubrl
notb
test
sarb
xorps
aam
aad
cld
dec
xchg
or
mov
mov
stc
sub
dec
scas
cld
movsb
mov
scas
mov
testl
push
jne
in
pop
shlb
popf
or
rol
mov
push
aas
imul
es
push
xor
leave
push
mov
iret
mov
xor
das
enter
cmp
test
shrl
push
xor
in
fs
loopne
push
ds
dec
mov
sub
imul
repz
loop
loopne
mov
dec
jns
xlat
stc
movsb
lret
into
push
in
xor
adc
xor
add
mov
inc
loop
sahf
push
or
or
popa
leave
ljmp
xor
adc
fwait
mov
push
jecxz
cmp
xor
mov
push
pop
mov
jns
dec
xchg
cmpsl
xlat
mov
addr16
jl
ds
mov
and
xchg
cmpsl
xor
jbe
xor
loop
repz
mov
ss
adc
pushf
ljmp
stc
aam
push
inc
fwait
roll
cli
aad
mov
adc
pand
mov
popf
cmp
push
mov
adc
in
pop
stos
mov
lock
repz
pop
fdivrs
enter
aas
sbb
and
mov
and
dec
pushf
add
inc
daa
hlt
jecxz
and
sbb
leave
adc
xor
add
jecxz
enter
or
and
cmp
je
mov
pop
mov
shlb
xorb
mov
mov
lahf
outsb
in
pop
add
inc
jbe
mov
inc
inc
enter
andb
mov
fdecstp
fbstp
push
jle
lret
shrb
sti
icebp
mov
fwait
inc
or
pop
mov
imul
jmp
notl
mov
adcl
pop
stos
mov
cltd
mov
jnp
jp
loope
cmp
adc
pop
cmp
pop
cs
lods
mov
sub
lret
mov
mov
jl
mov
sar
mov
movsb
jge
sti
xchg
aaa
in
inc
xchg
jb
mov
stc
xor
mov
int
cltd
cltd
sub
jo
and
and
outsb
aad
xlat
icebp
lcall
andb
ljmp
aas
adc
popa
xchg
add
cmpsb
dec
adc
dec
mov
mov
push
sub
mov
mov
movsb
sbbl
add
cld
int
rcrl
mov
out
xchg
xchg
mov
aam
mov
or
gs
fs
test
mov
daa
push
cmp
xchg
mov
ds
in
fcmovne
push
fistl
sub
inc
jecxz
adc
fiadds
imul
adc
xor
or
xchg
jb
xor
cwtl
ja
mov
int
fucomi
fsubrl
pusha
dec
mov
cmpsl
out
dec
sahf
mov
in
jmp
pop
xlat
mov
aam
mov
mov
inc
adc
jmp
hlt
push
aaa
sub
test
cmpsl
push
dec
dec
mov
ficoms
or
jl
daa
lods
ret
imul
jo
sub
sbb
mov
adcl
sub
ja
inc
and
insb
sub
aam
ss
mov
jne
test
pop
jae
sub
mov
mov
rcl
mulb
cmp
add
fs
xor
mov
aam
jae
das
jnp
fstl
mov
cmp
mov
repz
jge
sti
addb
repnz
xor
mov
out
cmp
cmp
mov
mov
or
jge
clc
mov
mov
js
data16
in
cwtl
and
mov
dec
sbbb
and
subb
and
lret
aaa
lahf
dec
push
push
cmp
sub
xchg
into
sbb
js
adc
mov
mov
jbe
scas
sbb
sbb
mov
dec
stos
lcall
test
sarb
ficoms
mov
cmp
nop
push
mov
cmp
xchg
ds
mov
pusha
jb
mov
pop
test
cli
shrl
cwtl
cld
out
test
movsb
mov
repz
mov
test
sbb
int3
outsl
mov
js
pop
test
pop
sbb
ret
mov
out
jns
sub
jbe
mov
mov
sub
lds
xchg
cmp
add
jmp
dec
ljmp
dec
bound
sub
js
mov
repz
dec
mov
roll
cld
leave
or
and
aaa
push
mov
aad
repz
cmp
cmp
cmpb
lods
mov
dec
cltd
cmp
jle
cmp
popf
mov
cmp
xchg
and
cltd
or
inc
jno
lcall
fistpll
pushf
cmpsl
xor
mov
dec
addr16
negb
cs
sbb
mov
or
mov
cmp
shrl
and
cmp
stc
mov
push
xor
outsb
enter
adc
xchg
addr16
inc
fs
mov
scas
in
add
popf
push
les
mov
shl
add
test
out
inc
mov
loop
enter
aaa
ja
stos
shlb
xor
sub
xchg
shr
push
sarb
test
xor
in
mov
ret
jmp
xlat
inc
adcl
es
popf
repz
inc
jge
ds
adc
and
push
add
popf
xor
lahf
test
xlat
lret
testb
shl
movsl
outsl
mov
adc
or
aam
shll
cmp
out
xor
int
lret
bound
std
xchg
jge
andb
jns
inc
aam
cmpb
outsl
test
sub
jns
xchg
gs
cmp
jnp
mov
fdivrl
mov
lea
ljmp
fnstcw
mov
mov
mov
xor
cmpb
ljmp
add
push
dec
bound
fistpl
ret
sub
mov
push
mov
test
mov
or
std
add
fisubrl
fsubrs
int
adc
fldt
jp
mov
xchg
ret
xor
fbstp
xchg
mov
enter
and
mov
mov
fiadds
rolb
dec
mov
aam
sub
das
xor
mov
xchg
mov
sbb
dec
repz
imul
add
and
std
and
les
stos
sti
xchg
add
add
mov
nop
test
ret
les
cmp
sub
les
cmp
es
push
cmp
call
mov
inc
xor
js
mov
std
dec
jg
sub
movsl
push
push
mov
mov
sarl
lock
inc
dec
clc
push
pop
fildl
jmp
loope
and
jg
xchg
lods
stc
mov
cld
cld
cmpsl
test
in
jge
pop
bound
js
cs
xchg
into
xor
shlb
icebp
dec
adc
jl
sarl
outsb
jnp
pop
clc
mov
adc
lds
mov
xchg
push
xchg
xor
lds
nop
add
addr16
lods
mov
das
ja
clc
pmaddwd
adc
je
movsb
int3
out
xlat
icebp
bswap
jmp
mov
mov
adcl
shlb
out
adc
push
unpckhps
xor
mov
cs
adc
xor
icebp
mov
push
jno
jae
stc
pop
jecxz
testl
inc
repnz
mov
adc
xor
pop
ss
jno
push
out
into
mov
push
test
std
pushl
jmp
insb
lods
xor
incl
dec
das
jb
out
pop
ja
dec
mov
adc
add
push
push
dec
jbe
pop
adc
jmp
incl
cmp
mov
clc
js
jg
lods
into
aam
adc
adc
in
faddl
pop
push
cmp
mov
mov
and
xor
icebp
repz
ss
mov
xchg
cmpsl
cmp
outsl
out
push
dec
mov
subl
jae
imul
je
das
lods
cs
mov
imul
jecxz
outsl
xchg
test
and
shlb
enter
sub
adc
icebp
call
or
jo
fxch
mov
ss
mov
btrl
adc
cmp
jl
ss
fldt
xchg
xlat
icebp
push
xchg
xor
hlt
nop
xor
out
dec
lret
lods
and
or
rcrb
mov
outsl
mov
jmp
xor
int
mov
adc
xor
xchg
pop
dec
pop
aam
clc
in
das
push
stc
mov
sbb
adc
xchg
sub
xor
jmp
clc
stc
mov
mov
pop
ret
jecxz
jp
mov
les
jns
cmp
xchg
xchg
mov
mov
test
and
ret
out
push
aas
popf
cmp
xchg
fcompp
mov
sub
jp
js
movsl
inc
and
cmpsb
sub
ret
ds
mov
ret
inc
and
out
adc
pop
cmp
mov
lcall
je
adc
xlat
popf
jg
mov
gs
cmc
xchg
jbe
out
jae
mov
fsubrl
xor
lret
mov
push
sbb
sbb
mov
fwait
dec
mov
inc
test
inc
in
adc
stos
ret
roll
mov
sbb
jge
xchg
xchg
jg
repz
andl
andl
jno
ss
movsb
addb
movsb
inc
lahf
mov
movsb
cmp
testl
and
mov
sti
pop
mov
inc
insl
fwait
les
lods
inc
add
dec
fucomp
movsl
xlat
sbbb
pop
fidivrs
xchg
xchg
xchg
adc
jg
pushl
mov
std
xchg
xchg
xchg
mov
popa
and
and
push
ds
mov
sahf
mov
inc
pushf
pusha
or
mov
jle
shr
mov
in
sbb
stc
add
and
push
pop
dec
cmp
inc
or
dec
sbb
dec
shlb
pop
aam
cmp
mov
cmp
xor
xchg
ret
mov
fildl
jg
fs
sti
mov
andl
inc
inc
sti
test
inc
xor
mov
cmp
mov
sub
and
out
cmp
or
out
jbe
xor
inc
jg
xor
and
movsl
es
mov
dec
pop
push
test
idivb
add
mov
test
or
into
movsl
cmp
and
inc
xor
mov
inc
test
jge,pt
mov
jno
lods
pop
adc
jle
cld
cmp
imull
pop
mov
std
jae
push
popa
lods
sti
and
loope
fstl
cmp
cmp
and
cmp
scas
loope
dec
call
pusha
push
in
ret
minps
sub
loope
clc
pop
add
aas
aas
test
sarb
ja
sti
rorl
out
cmp
pop
cs
loop
cmpsl
push
in
jno
jge
in
cmc
mov
add
popf
insl
add
fsub
das
lahf
sub
sbb
push
fstps
es
ret
or
jp
les
ja
pop
push
movsb
aaa
lahf
add
jmp
jmp
cmpsl
mov
push
pop
lods
popf
lock
cli
arpl
movsl
insl
sbb
mov
loop
inc
jle
imul
inc
and
jp
sbb
sbb
cltd
movsl
shlb
add
les
cmp
pop
mov
popa
cmp
icebp
mov
add
mov
adc
std
and
test
ret
inc
xor
addl
fists
sti
adc
in
lds
movsb
fs
sbb
or
ds
sti
mov
xchg
jns
mov
mov
sub
cmpsl
mov
fdivrs
mov
adc
rolb
jp
cmpsb
movsb
in
sbb
ljmp
fildl
fcmovnu
in
xlat
scas
test
mov
mov
mov
adc
and
lds
cmp
lea
data16
movsb
dec
sub
fwait
int3
or
push
pushf
subl
cld
shlb
in
fs
std
rolb
jl,pt
mov
inc
insb
leave
mov
mov
adc
inc
inc
push
sub
loopne
inc
in
add
loope
sti
movsb
orl
jge
mov
pop
sbb
and
leave
jle
xchg
fadds
inc
gs
js
and
and
xorb
movsb
mov
subb
add
pop
fs
pop
sti
std
inc
jecxz
inc
and
fprem
fbld
pop
and
mov
movsl
clc
cmpl
das
clc
mov
cmp
je
push
sub
inc
fsubrs
fists
call
insb
xchg
sarb
mov
fimull
fistpll
xlat
mov
shll
sbb
loop
inc
gs
out
mov
mov
out
jo
out
mov
add
mov
adc
movsb
in
sahf
icebp
sbb
xchg
add
adc
sub
daa
add
pop
stos
int
pop
sub
int3
hlt
imul
and
movsb
inc
movsb
adc
or
movsl
or
mov
push
pusha
inc
push
dec
jae
les
std
sbb
fcomps
rorl
incl
cltd
rcrl
fwait
imul
pushf
cmp
bound
mov
inc
lret
cld
fidivrl
enter
add
ljmp
aam
es
pop
in
xlat
js
xor
imul
mov
cli
pop
fstpt
mov
xor
pop
and
fcompl
cmp
popa
sti
mov
and
adc
movsl
sub
loop
lret
fbld
std
inc
stc
sbb
sub
inc
loopne
cmpsl
pusha
xor
loop
adc
popa
cmp
dec
sub
xlat
cmp
cmp
ficompl
sub
xbegin
mov
push
mov
and
or
std
cmp
mov
mov
sub
clc
jl
cmp
hlt
nop
int3
fstpl
sarb
xlat
nop
idivl
cmpsl
cmp
push
adc
xlat
dec
cmp
and
push
dec
lahf
stos
mov
fstpl
mov
orl
cmc
xchg
sarb
or
xchg
nop
cmp
xchg
push
out
clc
cmp
lods
pop
mov
repnz
push
pop
xlat
psllw
or
mov
popa
mov
lea
jo
mov
subb
out
xlat
mov
mov
fxtract
pop
lret
imul
cmp
mov
mov
push
mov
mov
jno
mov
mov
mov
sar
scas
pop
fldenv
pop
mov
pop
or
scas
sti
pushl
in
enter
fsubs
fisubs
fdivs
xor
fdivrs
sub
push
stos
fcom
fidivrl
loope
mov
sub
popa
das
cmp
push
in
adc
mov
fisubrl
lock
fildl
mov
je
mov
out
mov
aas
inc
mov
insl
sti
jns
stos
lahf
mov
cmp
sbb
cltd
inc
pop
xor
mov
mov
cmp
lods
mov
jg
mov
clc
mov
pop
sti
mov
inc
fdivrp
or
mov
sti
scas
mov
movsl
std
lods
jle
cmp
mov
mov
movsl
add
scas
sub
mov
rorb
mov
mov
mov
cltd
mov
loope
stos
push
mov
test
test
adc
pop
cmc
mov
sbb
fimull
cmp
xlat
cmpsb
pop
enter
pop
mov
mov
sbb
mov
mov
mov
mov
inc
arpl
movsb
nop
stos
cmp
lock
daa
fldt
leave
test
fwait
clc
lods
inc
mov
mov
in
sub
mov
fsubl
mov
pusha
lods
xor
mov
mov
fstpl
movsb
inc
lods
sarb
jnp
test
inc
jg
mov
cmp
inc
addr16
sub
mov
cli
mov
call
add
pop
dec
mov
test
jp
dec
jg
pop
mov
call
xor
push
xor
mov
cmpsl
call
movsl
fwait
mov
mov
lret
movsl
in
mov
insl
mov
sbb
mov
mov
and
mov
andl
daa
inc
sub
mov
and
daa
mov
rclb
xchg
jnp
mov
fildll
push
mov
scas
pop
mov
fdivrs
lea
jecxz
jg
mov
mov
sbb
repz
pop
cmpsl
daa
stos
scas
mov
cmp
sub
xchg
xor
mov
rcl
mull
lds
cmpsl
lret
mov
fwait
sub
cmpsl
mov
mov
xlat
pop
mov
in
loope
xor
mov
test
test
mov
mov
test
mov
mov
dec
jg
mov
mov
leave
into
test
mov
leave
xorl
mov
or
mov
push
cmpsl
daa
pushf
mov
movsl
lret
mov
mov
in
jg
movsl
stos
pop
mov
into
mov
mov
mov
sub
mov
test
test
lods
or
jg
mov
sub
mov
daa
mov
mov
ljmp
dec
push
mov
xor
or
int
lret
negl
dec
mov
mov
mov
mov
outsb
push
cmpsl
shrl
mov
mov
or
and
xchg
mov
jg
jl
movsl
daa
pop
mov
pop
cmpsl
test
outsb
xor
movsb
mov
in
mov
scas
repz
mov
lods
test
adc
and
and
mov
mov
das
test
in
xor
dec
test
into
mov
dec
mov
mov
test
jg
stc
mov
push
movsb
repz
fwait
sub
mov
add
mov
out
shrl
out
movsl
scas
cmpl
mov
cmp
lods
fdivl
mov
sub
out
push
mov
xor
shrl
cmpsl
adc
fdivrs
mov
scas
mov
mov
test
mov
mov
mov
pop
je
jle
inc
mov
mov
push
cmpsl
jnp
lret
sub
mov
cmpsl
ficompl
xor
mov
repnz
cmp
cmpsl
shr
icebp
stos
leave
int3
fldcw
lock
dec
int3
divl
js
fdivrs
int
fs
or
dec
das
mov
mov
aam
cmpsl
pop
or
movsl
jecxz
xor
dec
and
cmpsl
cs
mov
pop
and
and
mov
sub
movsl
lods
enter
mov
fnstsw
int
fdivs
cs
mov
mov
test
fucomi
sub
push
jg
mov
mov
pushl
mov
mov
mov
mov
fdivl
xchg
mov
insl
call
or
cmp
mov
fadds
sarb
sub
mov
mov
int3
sub
mov
xlat
mov
sbb
adc
test
mov
or
lods
inc
scas
pop
mov
loope
rcrb
scas
xchg
stos
dec
cmp
mov
lcall
fcom
mov
movsl
leave
mov
mov
sbb
mov
fnstcw
inc
sbb
mov
dec
ljmp
mov
ljmp
call
mov
mov
mov
sub
arpl
scas
ret
xchg
and
bound
mov
test
mov
incl
ret
cmp
scas
lcallw
bound
mov
aad
adc
dec
mov
movsl
jg
cwtl
in
mov
jge
xlat
test
adc
pop
shll
jb
mov
movsb
mov
movsl
mov
imul
xchg
mov
lods
movsl
pop
popf
scas
std
mov
test
scas
xor
call
pusha
mov
adc
mov
fsubs
arpl
mov
repz
xchg
test
mov
pop
cmpsl
sbb
pop
adc
mov
vpmovmskb
mov
mov
mov
fdivrl
cmp
pop
mov
mov
ljmp
fcompl
scas
mov
scas
mov
jmp
or
jg
mov
testl
cmpsl
arpl
out
and
mov
push
jp
iret
mov
xchg
ret
std
lahf
popf
lods
xor
mov
jg
test
ret
mov
xor
mov
mov
cmp
mov
jge
lods
mov
nop
sahf
mov
mov
mov
fsubs
and
shll
test
sbb
fdivrs
jecxz
int
cmp
mov
mov
cmpsl
out
and
scas
es
stos
xor
lea
dec
scas
cmp
scas
mov
and
mov
outsb
movsl
dec
repz
shll
xor
shlb
adc
mov
cmp
push
sub
mov
stc
mov
movsl
pop
stos
adc
adc
movsl
xor
add
pop
mov
mov
inc
nop
mov
flds
mov
mov
mov
cmp
pop
and
stos
pop
jp
mov
mov
stos
lcall
pop
mov
push
sbb
mov
mov
scas
cmpsb
ds
mov
sub
push
mull
scas
test
cmp
mov
popf
test
mov
adc
fnsave
das
mov
scas
lods
and
inc
cmp
mov
mov
out
push
ret
jge
das
mov
inc
jns
add
mov
es
mov
mov
arpl
icebp
jnp
cmpsb
popf
mov
pusha
cmp
jecxz
fldt
mov
sti
rcl
mov
leave
add
imul
inc
sbb
mov
mov
loope
shlb
mov
pusha
loop
mov
mov
pop
mov
inc
and
inc
inc
push
dec
leave
add
push
inc
gs
out
int
lret
into
lahf
cmp
nop
lds
jp
dec
xor
mov
mull
cmc
fs
cmp
mov
ret
ficomps
adc
test
lahf
pop
arpl
cmpsl
dec
xchg
mov
add
lock
xor
js
je
mov
imul
sub
into
xchg
cwtl
lret
mov
iret
xchg
in
jnp
sbb
mov
cmp
shl
cmpsb
sub
inc
mov
in
cmpsb
aad
sub
or
mov
and
cmp
stos
mov
push
pusha
xor
and
mov
dec
int
aad
add
mov
sub
cmp
cmc
add
push
mov
mov
scas
mov
mov
aas
mov
inc
mov
sub
inc
stos
push
iret
test
xlat
lods
cmc
pop
lods
fnstenv
mov
fbld
mov
inc
sub
dec
adc
int
ljmp
lret
sti
mov
cmpsb
mov
cmp
scas
mov
mov
mov
stos
ss
lods
mov
push
movsl
or
mov
scas
ljmp
mov
sbb
mov
mov
inc
test
movsb
push
dec
mov
test
sub
out
mov
test
leave
sbb
sbb
scas
into
pop
fstps
or
mov
cmp
mov
cmpb
mov
scas
mov
fucom
and
lods
mov
out
dec
push
out
fwait
movsl
mov
dec
mov
adc
cmpsb
mov
js
mov
sbb
dec
pop
xor
bound
std
mov
sar
sbb
popa
dec
mov
fcomp
inc
mov
sti
cmp
loopne
add
sti
jns
pop
lret
lods
jl
mov
mov
enter
add
sahf
sub
jnp
pop
cmp
rcrb
sti
pop
inc
ds
dec
int
fwait
jmp
std
pop
fdivrs
cmp
sarb
sti
sahf
inc
jg
dec
arpl
testl
mov
mov
push
fcom
enter
cmp
rol
xlat
test
leave
aaa
sti
mov
mov
enter
mov
push
js
mov
incl
mov
sti
lods
cmp
pop
aaa
push
jecxz
cmpsl
mov
addr16
inc
push
and
mov
stc
lcall
mov
pop
mov
cmp
movsl
and
sahf
sbb
pop
mov
mov
imul
sub
xchg
data16
mov
xchg
ret
cwtl
ror
fnsave
lock
jnp
xchg
ss
fldenv
cmc
sub
mov
btc
shll
mov
scas
mov
aaa
sbb
adc
push
cltd
xchg
mov
cmpsl
mov
and
daa
or
mov
push
mov
mov
mov
xor
mov
adc
mov
and
mov
add
mov
mov
sbb
mov
pop
cwtl
nop
sahf
xchg
test
mov
cmpsb
sub
or
mov
pop
mov
mov
mov
xor
xor
pushf
xchg
lcall
sub
sub
or
mov
std
cmc
jns
jg
xlat
iret
mov
aad
push
pop
push
out
mov
in
popa
outsl
addr16
fbstp
dec
inc
sti
repz
icebp
jge
jnp
fcmovnbe
mov
rcrl
pop
push
jmp
mov
loope
imul
mov
rorl
inc
clc
lock
idivb
jle
fcom
mov
pop
push
pop
push
call
push
loopne
into
dec
pusha
dec
inc
cld
hlt
mov
bnd
jp
mov
rcrb
push
in
in
ljmp
xlat
lret
inc
dec
inc
xlat
out
sarb
lahf
xlat
inc
pop
pushf
mov
push
cmp
dec
sub
sbb
fdivs
mov
lods
aam
cmp
mov
fldcw
lods
sbb
fincstp
ss
and
js
push
cs
mov
ds
cwtl
lcall
push
fs
sbb
jle
or
mov
test
push
mov
mov
fadd
push
xorb
and
es
fdivs
cmpl
das
xchg
lods
shrl
mov
sbb
add
loope
mov
pop
cld
mov
add
aas
enter
mov
mov
mov
fst
sbb
mov
fisubrl
aaa
push
or
cwtl
add
mov
mov
xlat
or
xor
or
xor
mov
pop
shlb
jnp
shrb
lock
pop
sub
negb
iret
pop
pop
sbb
jg
xchg
std
rcrb
inc
leave
out
inc
sub
enter
jae
cmpsb
out
stc
mov
andl
into
cmp
xchg
rol
test
movsl
mov
inc
lahf
fsubrs
shlb
xor
mov
sub
xlat
movsb
mov
jge
mov
stos
sti
sub
cmc
test
mov
ret
lods
mov
jmp
mov
mov
rorb
dec
mov
add
ret
fnstsw
mov
push
mov
cmp
in
test
mov
push
cmpsb
addr16
testb
and
mov
cmp
sti
mov
jns
mov
fadd
stc
addr16
shrb
fcoms
sti
cmc
mov
xchg
inc
jle
enter
mov
outsl
sti
clc
aam
jecxz
or
cmp
mov
mov
daa
lret
jno
mov
xor
jmp
mov
test
jne
xor
in
fs
fildl
mov
sti
neg
fcmovbe
clc
sbb
test
mov
in
enter
mov
mov
mov
stos
and
sbb
push
jmp
test
stc
das
movsl
das
aam
xor
sub
jecxz
sub
shrl
or
inc
sbb
movsl
ret
leave
fs
mov
dec
sbb
sub
test
mov
ljmp
out
mov
cmp
sub
mov
aaa
imul
cmc
mov
aas
shrb
xor
inc
add
jb
pop
cmc
les
out
mov
inc
mov
leave
mov
aas
gs
xor
mov
sbb
mov
fs
mov
movsb
mov
mov
lock
sub
mov
ds
fstpt
std
cltd
mov
mov
adc
insb
fstpt
out
mov
daa
mov
test
pop
cmpsb
in
sbb
into
fsubs
lods
es
adcb
mov
test
jl
frstor
jge
out
mov
movsb
leave
div
stc
sti
fwait
mov
sbb
sbb
inc
jg
mov
enter
popf
test
mov
data16
and
test
and
addr16
mov
push
scas
movsl
mov
inc
ret
cmp
fs
fbld
andl
push
or
inc
sbb
push
cmp
out
jb
pop
and
mov
add
stc
rcr
pop
incb
mov
mov
icebp
jne
daa
gs
jmp
inc
andb
pushf
inc
inc
adc
and
lret
popa
fmuls
xchg
lea
jge
jmp
mov
loope
pop
push
sbb
stc
jae
add
sbb
pusha
loope
std
addr16
in
andl
repz
cmp
mov
imul
in
or
test
sbb
sub
mov
shll
dec
cmp
loopne
pop
and
sub
pusha
cmpsb
sub
andl
jns
inc
dec
lea
and
cmp
sbb
sbb
hlt
push
mov
stos
xlat
popf
stos
adc
push
mov
cmp
ret
in
call
sbb
mov
mov
push
popa
inc
jecxz
decl
xor
es
pusha
fdivrl
popf
pushl
lods
fdivrs
and
add
arpl
cmpsl
scas
leave
das
mov
insb
sbb
test
dec
mov
sti
out
xor
mov
mov
out
mov
and
mov
fadds
mov
mov
ret
mov
push
cmpsl
or
dec
xor
shr
mov
cmc
aam
enter
scas
dec
xor
shrb
inc
imul
repz
cmp
xlat
out
cmpsb
cltd
ret
mov
dec
fnstsw
mov
jnp
fnstsw
jbe
lcall
imul
mov
sbb
push
and
sbb
test
fcmovnbe
inc
out
or
das
int3
and
fdivs
rclb
mov
sbb
loop
xlat
mov
mull
and
xchg
frstor
jbe
cmpsl
fnsave
mov
in
mov
ret
mov
fbld
icebp
cmc
aaa
scas
int
shl
cmp
mov
stos
add
movsl
mov
mov
jb
cmpb
lret
out
inc
mov
cs
pop
jno
adc
cmp
xchg
dec
mov
lods
mov
jns
fsts
mov
fwait
xor
nop
add
mov
sub
mov
cmc
mov
or
subb
mov
or
imul
fstpt
sbb
mov
xlat
ss
pushf
test
loope
adc
lds
scas
out
xchg
sbbb
and
mov
ljmp
mov
pusha
test
das
cld
call
mov
inc
pop
bound
mov
push
shrl
bound
add
les
mov
das
cmp
xor
dec
mov
fisubrl
mov
pop
sub
mov
nop
imul
neg
jbe
mov
mov
mov
lods
scas
call
cmp
cmp
dec
js
negl
les
mov
and
mov
aas
cmp
cmp
mov
es
mov
out
fnstsw
mov
lds
cmc
mov
mov
lods
mov
xchg
fcomp
mov
jmp
popf
pop
mov
adc
mov
mov
dec
sbb
movsl
mov
xlat
mov
sub
fstps
adc
cmpsl
lock
sub
mov
mov
xor
gs
gs
leave
jl
sub
mov
push
popa
in
dec
sbb
add
test
mov
mov
add
cmpb
andb
cmpsb
clc
and
add
imul
test
mov
stos
mov
idivl
sub
jne
es
add
test
sbb
cwtl
pop
mov
mov
and
and
pushf
adc
ret
mov
scas
lds
mov
fnstsw
lcall
xchg
sub
lods
scas
out
mov
jecxz
movsl
pop
aaa
and
mov
jmp
and
jae
push
std
mov
lods
mul
mov
shll
loop
push
ds
dec
dec
mov
je
sahf
mov
movsb
mov
pusha
mov
sub
mov
imul
daa
clc
and
in
or
scas
shlb
lret
mov
fldl
dec
dec
xchg
std
mov
fcom
mov
mov
and
test
mov
cmp
jnp
addl
popa
jg
stos
add
loop
xchg
sahf
les
pop
std
mov
mov
shlb
gs
push
popa
test
push
in
mov
sbb
xchg
and
rolb
sbb
out
ss
cmpsl
mov
mov
rorb
cmp
mov
pusha
cmp
mov
lret
aas
dec
and
insb
xlat
add
inc
mov
adc
sahf
mov
mov
dec
mov
js
sbb
cmp
fadd
scas
sbb
popf
push
mov
call
or
dec
cmp
cmp
mov
jae
add
fiadds
bound
in
jp
shlb
test
gs
fbld
or
out
add
scas
dec
mov
mov
sbb
mov
or
out
mov
cltd
sub
cmp
sub
movsb
jl
insb
cmp
orb
negb
and
clc
addr16
add
cs
aas
mov
mov
xor
sub
cmpl
aam
rclb
mov
xchg
and
mov
fldl
bound
cli
mov
pop
popa
fidivrl
or
daa
add
jns
pop
popf
sub
clc
mov
cmp
inc
jl
mov
add
stc
pop
mov
and
mov
adc
push
out
fldt
mov
fstl
daa
clc
cltd
add
ljmp
les
cmp
hlt
and
mov
and
sbb
mov
xchg
cli
loope,pn
mov
andl
rcrl
stc
adc
mov
ficomps
movsl
push
push
and
mov
lock
imul
cli
in
icebp
cmp
daa
inc
cmp
add
call
mov
or
movsb
cmpl
inc
in
cmp
movsl
outsl
ja
out
ljmp
dec
les
push
dec
arpl
add
cmp
pop
inc
faddl
pusha
mov
fs
lods
mov
add
dec
pop
daa
and
pop
inc
mov
inc
or
inc
loope
jb
and
repz
pusha
test
fcomi
cmp
push
adc
mov
rclb
loope
add
push
add
xlat
mov
jl
xor
neg
pop
fstl
mov
pushf
push
in
dec
negl
sbb
ja
mov
xchg
pop
mov
movsb
fucomi
repnz
sarb
mov
pop
pop
repz
and
ret
mov
mov
gs
cmp
cmpsb
add
and
cmp
sbb
jmp
in
fsubl
fs
mov
pop
adc
mov
adc
movsl
inc
es
adcl
cmp
ret
sbb
mov
and
ds
movsb
lret
bound
outsb
test
mov
popf
xchg
lea
mov
jge
mov
stos
js
push
mov
imulb
test
flds
adc
mov
sbb
dec
mov
mov
fnsave
je
fldenv
iret
subb
xlat
mov
test
mov
pusha
mov
pop
pusha
pop
sbb
test
mov
mov
cwtl
xchg
orb
add
movsb
push
jno
movsl
pop
cmpsb
sbb
aaa
test
xor
jg
pop
fcompl
sub
or
fcoms
sub
mov
adc
sahf
ds
mov
sub
lret
mov
jle
scas
mov
push
fimull
stc
das
sub
stos
lock
dec
ror
or
loop
test
and
lcall
cwtl
or
mov
push
sbb
pushf
push
hlt
sti
push
rorl
cwtl
xor
sub
pop
fcomps
fistpll
fsts
inc
lock
xchg
pop
test
nop
sbb
xchg
mov
jnp
pusha
sbb
leave
pushf
cmc
pop
jg
cmp
mov
xlat
das
mov
movsl
test
js
sbb
fdivrs
subb
sbb
and
movsb
cmp
test
das
lods
mov
fsubrl
mov
mov
std
cmp
cwtl
mov
sbb
cmp
inc
test
mov
inc
testl
mov
fnstenv
fnstcw
mov
mov
daa
sbb
mov
cmp
mov
cmc
test
and
mov
test
mov
cmp
mov
mov
cltd
sub
fadd
testl
mov
stos
mov
fsubrl
sbb
shlb
mov
mov
mov
mov
pusha
movsl
inc
mov
cmp
lods
clc
dec
lds
mov
cmp
mov
sbb
mull
mov
test
cmp
movsl
leave
fsubs
jg
and
jg
sti
sbb
mov
xchg
mov
jno
lock
addr16
cmp
rorb
inc
add
mov
cmpsl
cmp
and
lods
cmp
add
test
test
pop
test
sub
pop
test
mov
add
fldt
mov
cmp
test
pop
out
aas
and
mov
xor
lret
popa
mov
lods
ss
and
mov
jns
mov
cmp
mov
mov
mov
movsb
std
cmp
das
lods
mov
std
mov
sahf
negl
lret
mov
mov
mov
fdivrl
movsb
daa
sbb
mov
mov
add
leave
scas
ss
inc
mov
inc
lods
pop
mov
cmp
scas
addr16
inc
sbb
mov
movsl
fnstsw
mov
stos
fsts
mov
pop
inc
scas
sahf
cmp
mov
mov
fyl2xp1
xor
inc
mov
mov
mov
mov
mov
mov
test
addr16
and
mov
lock
mov
mov
test
jmp
mov
movsb
mov
cmp
mov
mov
lods
mov
stos
inc
add
mov
scas
mov
cmp
cmp
add
mov
inc
mov
mov
cmp
rcl
stc
sub
sub
stos
cmp
sbb
ljmp
and
rcr
iret
pop
jle
sarl
mov
mov
mov
mov
cmp
lods
fwait
lods
test
pop
pop
mov
mov
cmp
mov
cmc
mov
test
jp
pop
inc
mov
or
repz
or
movsb
inc
cmp
subb
scas
and
mov
mov
jecxz
scas
mov
mov
lcall
lcall
cmp
cmp
test
jns
stos
outsb
mov
cmp
insb
movsb
movsb
bound
add
mov
mov
add
cmp
stos
pop
stos
mov
mov
cwtl
aas
add
add
mov
and
out
pop
mov
mov
sarl
mov
mov
call
movsl
stos
mov
sti
mov
add
jnp
dec
mov
loopne
mov
ds
jne
sub
pop
cmp
mov
jo
leave
mov
aaa
mov
jmp
sbb
ds
mov
mov
push
push
fstpl
movsb
mov
cmpsb
mov
sub
cmpsl
fnstsw
outsl
cmpsb
out
xor
push
mov
mov
mov
mov
test
mov
cmp
stos
mov
mov
mov
add
dec
mov
cmp
movsl
sbb
xlat
cmp
jb
fisttps
stos
mov
arpl
scas
cmc
mov
xor
popf
stc
mov
and
test
ljmp
cmp
mov
movsb
mov
dec
sbb
mov
dec
iret
popf
clc
repz
sub
cmp
repz
xor
loop
test
push
sar
mov
cmp
mov
test
scas
sbb
lods
scas
mov
xlat
fnstcw
pop
ljmp
mov
cmp
mov
lods
sub
jl
cmp
leave
mov
mov
leave
cmpsl
cmc
xor
scas
mov
mov
jp
bound
mov
fwait
dec
push
mov
xor
aas
mov
test
xor
pop
cmc
sahf
test
jmp
stc
mov
aad
sbb
mov
rorb
fstl
movsl
mov
pop
loopne
inc
xlat
test
xchg
sub
pop
mov
test
mov
sub
fildl
xadd
jo
rcrl
jno
cmpb
mov
mov
cmp
and
jge
scas
cmpsb
fisubrs
mov
mov
scas
mov
mov
mov
test
stos
mov
cmp
rep
fidivrs
stc
mov
mov
adc
into
mov
and
cmp
lcall
leave
pop
lock
test
sub
leave
mov
cmpsl
mov
jae
stos
mov
push
repz
sarb
xchg
mov
push
imul
cmp
fstpt
mov
cmp
movsl
fdivl
aad
cmpsl
insb
mov
test
shlb
cmpsb
cmp
test
ds
cmp
mov
rcrb
das
mov
pusha
cmp
pop
jl
cmc
pop
xor
cmpsb
mov
fdivl
sti
mov
mov
sbb
movsl
and
cmpsb
sbb
leave
xlat
sbb
cmpsb
lods
pop
into
movsl
push
mov
mov
mov
adc
jne
mov
jle
cmpsb
mov
mov
and
mov
cmpsl
mov
jae
stos
mov
jae
scas
jae
pushf
scas
mov
leave
rorb
add
call
mov
cmpsb
push
mov
mov
scas
pushf
jae
rolb
mov
cmc
cmpsl
fisubrs
and
mov
stos
mov
lods
in
fisubrs
stos
test
mov
mov
xlat
sbb
mov
jb
mov
cmc
mov
pop
repz
movsl
mov
dec
xor
loope
mov
mov
sbb
and
je
mov
movsl
sbb
mov
scas
mov
add
std
xor
mov
cmp
sarb
sti
cwtl
inc
in
enter
cmp
sar
sub
sbb
cmp
lods
stc
pop
cmp
sarb
sti
cltd
inc
repnz
cmp
sar
cmp
fstps
daa
enter
cmp
sarb
sti
aas
inc
lcall
fcmovb
fs
cli
sti
es
sbb
enter
cmp
shrb
sti
sub
and
mov
stos
scas
mov
jns
mov
mov
mov
test
add
jle
add
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
ret
mov
mov
aad
mov
mov
aad
cmpsb
aad
push
mov
aad
outsl
aad
xor
mov
inc
mov
enter
call
cmp
cmpsb
cld
push
mov
mov
mov
rcrb
mov
pop
cmp
stos
popa
aad
mov
aad
cmpsl
sbb
pop
movsl
mov
mov
add
stos
popf
sub
cmp
mov
mov
inc
ds
xor
fidivs
cmpsb
sbb
mov
xor
shlb
scas
cmpsl
add
mov
stos
sub
jecxz
popf
sahf
pop
stos
test
lcall
lcall
mov
jae
mov
nop
fs
lds
test
ret
add
mov
mov
out
clc
lahf
fstpl
fstpl
fstpl
fsubrs
mov
mov
aas
add
push
fldenv
sbb
mov
loope
cmc
mov
mov
lahf
mov
xor
sbb
pop
pusha
movsl
dec
stos
shrb
js
jecxz
jns
mov
cmp
add
xor
xor
xor
sbb
mov
xor
aad
or
mov
int3
test
sbb
mov
mov
mov
sbb
fistpll
mov
lret
repz
xchg
or
mov
aam
mov
cmpsb
sti
movsb
push
and
fidivrl
test
shl
xor
xchg
and
xor
mov
mov
mov
mov
mov
mov
xor
aad
mov
push
sahf
cmp
mov
inc
cmpsl
cmp
stos
aas
test
scas
dec
push
mov
mov
sahf
test
and
fucomi
mov
and
dec
mov
mov
mov
mov
leave
sub
test
dec
push
lods
cmp
mov
mov
xor
in
sti
mov
inc
and
mov
test
repz
in
cmp
notl
cmpsb
dec
mov
sub
mov
add
mov
rcll
dec
add
mov
jae
push
mov
mov
test
stos
xor
push
int
test
das
push
nop
push
jno
fnstcw
mov
mov
push
sub
xor
pusha
push
mov
shrb
das
mov
sahf
leave
movsl
mov
mov
stos
sub
cmp
pusha
and
jb
push
rolb
stos
movsl
dec
mov
scas
xchg
cmp
ffree
movsb
test
jae
mov
and
mov
jae
lods
sti
sbb
xlat
enter
sbb
test
cmpsl
mov
adcb
mov
mov
mov
xchg
jl
lahf
mov
mov
mov
push
mov
fisubrs
repz
mov
lret
mov
push
push
add
or
lods
mov
mov
repz
and
jns
fiaddl
mov
mov
shlb
movsl
pusha
mov
xchg
jmp
mov
cmc
mov
mov
out
fnstsw
fnstcw
popf
sbb
cmp
mov
test
sar
mov
stos
lods
std
pop
and
mov
xor
mov
hlt
mov
mov
dec
xor
jge
fistpl
and
cmpsb
aas
add
pop
push
mov
and
in
fisubs
cmc
cmp
test
movsl
loopne
mov
pop
lds
test
lods
call
test
cmpsb
cmc
mov
aam
scas
sbb
add
cltd
sbb
mov
repz
cmpsl
fidivrs
stc
movsl
cmp
subl
lods
add
mov
mov
lret
sbb
xor
cmp
and
sahf
mov
add
adc
mov
mov
lcall
pop
aad
test
and
popa
pop
jo
cmpsb
ret
mov
repz
fisttpll
int
repz
fstl
fnsave
mov
repz
mov
js
fstp
repz
mov
std
test
pop
test
rcr
fildl
enter
cmp
rol
cmp
es
pop
xchg
jl
call
leave
mov
or
cmp
ror
cmp
xchg
enter
cmp
rclb
sti
mov
fstpl
inc
inc
test
jecxz
mov
mov
mov
repz
repz
fldl
fisttpll
fisttpll
repz
fstl
repz
repz
sub
sub
sub
sub
sbb
cmpsl
popa
mov
aad
lret
aad
mov
aad
mov
xchg
mov
jnp
mov
and
mov
push
mov
mov
mov
add
fidivs
mov
xor
stos
aas
mov
test
xor
aas
lods
dec
jne
mov
mov
mov
leave
mov
cmc
cmpsl
mov
into
cmpsb
mov
cmpb
cmpb
ret
mov
mov
roll
add
xor
xor
mov
cltd
mov
aaa
loope
aas
and
movsb
aas
test
cmpsb
aas
in
test
inc
bound
aas
or
aas
imul
int3
arpl
shll
test
mov
lds
mov
loop
mov
stos
xlat
cmpsb
mov
loop
mov
xor
and
movsb
movsl
int
sbbb
cmpsl
xor
in
pop
movsb
add
lods
shlb
mov
xor
sarb
shl
xor
cmc
lret
xorl
mov
mov
mov
add
cmc
dec
mov
movsb
mov
cmpsl
xor
aas
stos
dec
xor
in
jnp
mov
scas
fidivs
shlb
mov
mov
and
lods
cmp
inc
mov
xor
fdivrl
sbb
into
xor
cmpsl
test
inc
daa
aad
shlb
daa
mov
loopne
fsubrs
subl
push
movsb
add
mov
aas
jp
stos
aas
mov
mov
xchg
add
stos
repz
sub
sbb
lock
lods
cmpsb
mov
movsl
test
pop
mov
test
add
mov
mov
out
and
scas
add
sub
fnsave
mov
add
lcall
das
movsl
sub
mov
test
cmpsb
fldcw
stc
mov
repz
mov
bound
xor
mov
lods
outsl
stos
inc
xor
adc
mov
mov
dec
xor
pop
mov
push
mov
outsl
push
mov
push
cmpsb
sbb
cmpsb
cmp
cmpb
cmpsb
sub
shll
fdivl
test
inc
lcall
sub
mov
movsl
aam
mov
int
bound
subb
ss
inc
and
mov
mov
sarl
mov
mov
inc
xor
popa
sbb
xor
xor
aas
stos
dec
xor
in
cmp
test
movsl
xlat
pop
add
cltd
fnstcw
and
loope
mov
mov
mov
and
test
mov
lods
mov
add
mov
mov
mov
mov
add
fidivs
xchg
lods
enter
mov
sbb
mov
mov
mov
add
ret
mov
pusha
mov
sahf
mov
mov
sahf
leave
movsl
mov
leave
cmpsl
das
test
in
push
subb
mov
mov
clc
fnstcw
test
mov
sub
mov
mov
push
mov
sbb
sbb
cwtl
xor
mov
sub
inc
test
loop
jno
sbb
lret
scas
movsl
pop
push
mov
mov
mov
ret
pusha
add
inc
in
mov
add
out
test
loop
movsb
inc
test
add
fldt
add
scas
mov
sub
lods
and
adc
cmpsl
ror
stos
xchg
jmp
cmpsb
movsb
push
mov
fs
fadds
fs
lcall
mov
mov
mov
movsl
inc
repz
fisttpll
data16
or
nop
int
nop
test
adc
xchg
or
mov
mov
mov
cmp
call
shlb
mov
fsubl
mov
lods
mov
stos
sbb
mov
xor
mov
push
mov
mov
mov
data16
bound
sub
mov
jne
sbb
mov
pop
and
std
mov
repz
stos
fisubrs
scas
cmp
mov
loopne
mov
sbbb
mov
xlat
mov
cmpsl
loop
mov
xor
sub
and
and
push
xorb
or
idiv
insl
fisubrs
cmp
imul
mov
mov
sbb
cmp
mov
mov
pusha
mov
mov
mov
mov
mov
ret
leave
cmpsb
push
rolb
call
enter
mov
std
mov
mov
xlat
shr
lds
ret
mov
push
es
mov
lods
xor
aas
mov
xor
cmpsl
cmc
mov
cltd
ret
mov
lods
das
cmp
ret
sti
pop
mov
sar
jbe
sarb
xchg
mov
scas
mov
mov
sbb
ret
mov
fsubrs
add
aad
add
add
mov
ja
lods
daa
mov
mov
fldenv
mov
fsubrl
mov
stos
xchg
leave
das
sub
scas
mov
mov
xor
and
mov
jae
mov
fstpt
lods
test
mov
and
arpl
and
es
jae
test
sub
mov
lret
scas
add
mov
repz
leave
cmp
lods
stos
je
mov
mov
ret
xor
imul
cmpb
cltd
jb
inc
sub
mov
xor
subb
sbb
test
adc
and
fnstenv
mull
add
mov
mov
mov
cmpsl
cmpsl
dec
repz
mov
mov
mov
cmp
sbb
mov
xlat
mov
repz
mov
mov
fldcw
jne
mul
lods
mov
mov
sarl
jo
jle
cmp
scas
sbb
jecxz
test
sub
sbb
scas
cltd
sbb
xor
cltd
daa
dec
xor
aas
mov
and
mov
cmp
clc
xlat
cmp
test
mov
test
idivl
test
cmc
mov
test
fldt
push
mov
cmpsl
test
mov
cli
mov
fs
ja
mov
jmp
int
jnp
mov
cmp
cmp
sub
fidivrs
sbb
and
scas
sbb
sub
xor
aas
mov
jnp
mov
andb
cmp
dec
xor
in
cmp
test
mov
xchg
int
ficomps
dec
xlat
cmp
mov
mov
mov
loop
cmpsl
and
mov
test
les
mov
mov
cmpsb
mov
aas
mov
mov
cmpsl
dec
xor
aas
lods
dec
jne
test
mov
mov
mov
mov
pop
out
les
leave
shrb
or
push
cmp
mov
stc
stos
pop
movsb
fldenv
call
and
les
ds
in
lods
ds
mov
xor
andb
xlat
enter
mov
pop
mov
push
mov
and
add
movsl
inc
adc
xorb
add
and
mov
add
mov
mov
mov
mov
xor
in
sti
mov
jp
cmpb
cmc
daa
mov
xlat
pushf
or
fbstp
lcall
pop
dec
mov
lds
daa
xchg
sbb
sbb
je
divl
push
mov
push
or
and
mov
rorb
dec
fistl
push
mov
pushf
aam
inc
add
gs
cmp
outsl
lahf
in
mov
dec
aas
mov
pushf
mov
sbb
es
mov
cmpsl
mov
lods
lahf
lahf
addr16
or
cmc
in
inc
dec
cmp
push
rcrl
sbb
hlt
mov
xor
pop
inc
out
daa
pop
mov
fnstcw
jge
lret
xchg
mov
jo
pop
add
out
fwait
sbb
aas
rclb
xabort
cmp
mov
sub
cs
xor
adc
and
imul
xchg
xchg
mov
mov
pop
outsb
jbe
cmp
imul
or
aas
popa
test
mov
lcall
sbb
out
mov
fnstcw
inc
xor
enter
cmp
shlb
mov
cli
cmp
inc
mov
mov
jo
das
lods
enter
cmp
shlb
mov
ja
divl
outsl
sti
cs
lods
sub
test
shlb
mov
jl
jns
ja
mul
dec
cmp
shrb
scas
mov
jb
hlt
jge
imul
aas
popa
enter
cmp
xor
add
stc
decb
stos
std
fdivs
shlb
scas
sti
sub
sub
mov
mov
inc
ja
mov
mov
outsb
imul
stc
daa
cmp
shlb
cmpsb
mov
mov
inc
jb
enter
cmp
shlb
and
and
cmp
sbb
test
shlb
sti
sub
mov
cmp
and
divl
fdiv
xchg
in
inc
insb
push
daa
stc
gs
shl
sti
std
inc
cmp
mov
rol
fdivs
stc
xor
shrb
jmp
fs
shlb
sti
jge
mov
je
repnz
shrb
sti
test
and
popa
cmp
sarb
cli
scas
clc
xor
testb
out
inc
lods
sub
stos
stc
sub
shlb
inc
inc
jle
enter
jge
mov
es
jne
repz
std
fnsave
lock
shrb
out
gs
imul
sub
out
movsl
cmp
rolb
aas
mov
pushf
sub
or
dec
ror
out
sti
sbb
fmul
mov
cmp
addr16
push
stc
and
out
stos
call
stc
xor
shl
cmc
mov
and
sar
add
stc
jecxz
in
sub
sub
and
rcrb
sub
lods
sti
fsubrs
xor
jne
testb
mov
mov
mov
shr
ljmp
jb
xor
shlb
pop
enter
sti
mov
jo
enter
cmp
shlb
cmp
jns
ss
divl
shlb
sti
in
inc
test
mov
leave
mov
mov
daa
repz
cmp
shrb
cld
call
inc
jecxz
enter
leave
sub
lods
inc
outsb
xor
xor
cmc
cmp
cmp
iret
mov
dec
mov
imul
out
shlb
sti
mov
cmp
inc
jp
enter
sti
call
and
fsubrs
shr
sub
mov
mov
js
in
fdivrs
cmp
shlb
and
fsubs
sti
rolb
enter
sti
mov
cmp
sub
push
shlb
popa
test
aam
call
sub
je
aaa
sti
jns
cmp
loop
in
enter
mov
fs
jb
inc
xor
sahf
mov
inc
xlat
clc
enter
cmp
add
mov
in
mov
ds
pop
insl
std
std
cmpsb
fldcw
sarb
lods
leave
fsubrs
mov
jno
mov
jb
xchg
mov
adc
sub
icebp
or
arpl
xor
mov
ss
mov
out
inc
add
int3
icebp
idivb
jae
dec
mov
and
cs
jecxz
lods
out
mov
aas
leave
arpl
lods
add
imul
adc
mov
fbstp
cmp
loopne
jns
pop
adc
jo
xchg
aas
xor
push
daa
mov
fwait
lods
xchg
mov
mov
loope
rclb
push
test
int3
les
push
cld
mov
xor
push
enter
mov
sbb
lcall
mov
lret
cmp
outsl
mov
imul
loopne
mov
lahf
ficompl
pop
cmp
mov
jmp
ljmp
mov
xor
xchg
jnp
mov
mov
mov
mov
clc
sbb
mov
mov
xchg
rol
aaa
test
out
and
neg
lcall
sbb
adc
fucomip
cmpsb
mov
lock
jns
cmpsl
xchg
scas
je
fildl
cld
mov
push
jle
cmp
jo
mov
inc
mov
pop
rcrb
mov
mov
dec
pushf
adc
sarb
subb
adc
mov
and
fdivrs
mov
jle
mov
out
and
mov
scas
push
or
mov
js
loopne
and
mov
rorb
mov
pop
jle
pop
mov
ja
mov
cmp
popa
pop
testb
ret
pop
xlat
repnz
in
scas
sbb
mov
xchg
shrl
fistpll
jae
mov
shrl
jnp
pop
mov
sbb
jmp
mov
enter
cmpsb
inc
in
mov
mov
sbb
aad
pusha
mov
mov
mov
dec
add
push
xor
ret
fldenv
mov
xlat
stos
repz
adcl
jmp
mov
sub
cli
xchg
mov
xchg
outsl
lret
lock
push
mov
add
mov
subl
das
je
mov
sub
imulb
bound
mov
xchg
test
movsl
and
dec
sub
pushl
add
imul
push
in
mov
aas
pop
hlt
push
cld
and
cmp
jp
scas
xor
movsb
mov
cwtl
js
bound
mov
mov
jmp
mov
push
repz
pop
int
mov
lret
jo
ds
jl
stc
sbb
test
mov
and
fisubrs
ret
inc
xlat
mov
adc
sbb
sbb
push
dec
mov
fidivrl
jns
jl
lret
jl
mov
push
jae
dec
cmp
mov
dec
rcl
mov
outsl
xchg
lods
cmpsl
lods
aaa
mov
bound
add
outsb
xchg
mov
pop
daa
sbb
idivl
jno
xlat
add
jl
or
mov
sub
dec
stos
out
mov
mov
sar
repnz
aam
sbb
or
xor
gs
stc
mov
sbb
pop
not
cmp
push
jge
in
xchg
cmpsl
std
repz
xlat
jnp
repnz
push
imul
dec
inc
pop
cmpsl
ret
add
xchg
and
inc
mov
xor
imul
mov
scas
stos
outsb
jecxz
dec
and
xchg
jns
mov
aas
mov
push
mov
scas
inc
jbe
fstpt
xchg
sbb
movsb
out
or
cmpsl
push
inc
jo
xor
xchg
fldl
mov
mov
mov
mov
and
jne
pop
roll
pop
dec
xchg
mov
mov
mov
mov
cli
test
mov
xlat
lret
pusha
loope
mov
mov
xchg
push
fcomps
repnz
mov
mov
inc
popf
ds
lods
mov
repz
xchg
mov
out
adc
mov
outsb
xlat
pop
push
cmp
shlb
jb
aam
dec
xchg
aad
pop
stos
scas
js
pusha
xchg
inc
mov
sbbl
sub
fstps
add
loopne
in
push
mov
stos
push
imul
popa
or
sahf
or
sbb
mov
sub
pop
test
add
push
pop
scas
test
mov
jno
frstor
jnp
or
shl
imul
mov
lods
fisttpl
or
repnz
dec
out
cli
or
push
cmp
ret
or
dec
inc
xchg
clc
push
xor
ret
add
sbb
mov
dec
ds
fs
xor
xchg
cmp
adc
hlt
pop
and
sti
pop
jge
imul
mov
xlat
sub
hlt
test
adc
fimull
mov
cli
outsl
aam
adc
push
aas
jns
stos
sbb
mov
add
in
gs
shlb
and
sub
push
mov
and
imul
xlat
or
mov
and
cmpsl
jo
xchg
mov
mov
xorl
dec
daa
lods
div
mov
imul
and
adc
xlat
mov
in
sub
imul
fdivs
ljmp
clc
cld
cwtl
push
push
mov
ds
xchg
shl
or
and
xor
mov
sahf
jne
in
mov
jb
mov
adc
mov
push
call
pop
mov
mov
daa
mov
arpl
mov
fidivrs
pop
call
jecxz
mov
out
jge
mov
mov
out
sbb
in
dec
cld
or
inc
pushl
push
daa
xchg
push
mov
sub
or
dec
cmp
jb
or
aam
jae
sbb
jnp
movsl
push
jns
mov
rolb
jmp
or
or
cmpsl
stos
xor
adc
pop
push
inc
mov
sub
mov
mov
push
push
xor
mov
dec
mov
sbb
clc
push
mov
inc
push
xor
dec
jnp
mov
stc
mov
hlt
mov
sbb
mov
inc
jge
les
imull
repnz
rorb
pop
mov
jmp
nop
xchg
fwait
test
pushf
mov
jnp
mov
lock
fwait
push
and
mov
push
sub
cmpsb
mov
sub
cmp
fisubs
cwtl
xor
je
iret
ja
xchg
xor
mov
xchg
sub
mov
push
or
int3
icebp
movsl
insl
leave
mov
hlt
sub
mov
xchg
push
stos
sarb
frstor
dec
mov
xlat
out
push
push
mov
not
ret
dec
fwait
jne
cmp
cltd
cwtl
cmpsl
xchg
out
sub
mov
add
sbb
dec
pop
cmp
mov
mov
cmpsb
cs
jbe
int
or
mov
push
scas
dec
xchg
sub
jo
mov
jg
mov
adc
cmp
cmpsb
test
loop
xlat
std
mov
cmp
imull
xor
shrb
arpl
xchg
mov
and
int
mov
jns
aam
mov
add
rorl
lcall
cmp
mov
jno
aas
iret
lcall
xchg
push
and
push
aaa
sahf
lret
in
jg
ret
cs
testl
xor
mov
imul
or
dec
cmp
add
inc
ljmp
mov
xor
ficomps
sbbb
cmp
ds
dec
fidivs
lret
out
daa
xchg
mov
int3
idivl
mov
pop
ds
sbb
pop
mov
mov
mov
lret
cwtl
lcall
mov
int
orb
ds
push
lds
clc
aaa
add
mov
inc
jb
dec
dec
les
jno
dec
inc
cmpsl
mov
cmp
push
aaa
dec
pop
out
scas
cld
xor
xchg
inc
jp
jno
mov
cmp
adc
dec
push
adc
lahf
aad
jno
and
imul
jae
cmp
scas
or
rorl
add
jle
cmpsl
xchg
inc
sbb
call
xlat
pop
mov
mov
out
mov
push
leave
std
mov
cmp
iret
pop
aas
mov
cwtl
ficoml
test
ret
add
loope
push
mov
mov
xor
lret
sahf
xchg
inc
test
adc
add
mov
imul
call
mov
cmp
mov
jae
pop
adc
stos
mov
mov
lock
adc
psrlw
add
xchg
and
mov
xchg
lds
test
test
and
lcall
fbld
std
mov
mov
inc
adc
jne
cmp
mov
mov
push
in
aam
lcall
shlb
das
sbb
icebp
cmpsl
sbb
mov
mov
and
cmpb
testl
pop
insl
ds
ljmp
xlat
rclb
xor
pop
ja
mov
fwait
cmp
jl
clc
out
mov
dec
aas
shll
sbb
mov
cmp
mov
ret
inc
ds
outsb
sti
repnz
jns
mov
pop
mov
scas
cmp
mov
sbb
sbb
mov
jne
dec
popf
pop
mov
daa
xor
cli
mov
in
pop
rcl
pushf
shrl
mov
mov
mov
pop
jecxz
jle
lcall
mov
scas
sub
sub
cmp
and
jns
inc
xor
fwait
icebp
or
pop
jns
jae
pop
mov
stos
xchg
ljmp
fbld
not
sbb
cmp
in
jecxz
cmpsl
lret
sbb
push
lods
xchg
pusha
or
dec
mov
stos
xchg
icebp
mov
dec
aam
xchg
mov
mov
xorl
push
cmpsl
sbb
jle
stos
xlat
inc
pop
push
orl
push
dec
mov
jmp
xchg
jne
mov
mov
inc
arpl
pop
icebp
jecxz
cmpsl
idivb
jnp
push
call
insb
ss
jne
bound
adc
dec
pop
mov
lock
movl
jne
cmp
xor
cltd
leave
idivb
movsb
int3
stos
jge
aas
cmpsl
jae
lods
cmp
subb
or
and
mov
or
cwtl
add
add
sahf
shlb
mov
push
sub
dec
cli
jecxz
mov
or
mov
stc
xor
data16
adc
adc
xchg
cltd
lea
out
mov
shll
out
add
jnp
sahf
cwtl
insl
dec
inc
insb
jge
scas
add
cwtl
adc
jae
mov
inc
xchg
adc
cmp
mov
ret
rolb
leave
stc
stos
sbb
xchg
ljmp
cmpsl
push
fsubs
mov
xchg
sbb
rclb
push
pop
or
fs
xchg
fmull
xchg
cmp
idivb
ss
ljmp
pop
sub
iret
mov
movsl
mov
loope
jae
movsl
jns
sti
mov
mov
sub
es
std
sbb
roll
jno
cltd
and
mov
adc
loopnew
shll
rcrl
mov
adc
test
in
jo
adc
mov
jge
inc
push
sub
cltd
stc
popa
subl
fbstp
jb
push
pop
mov
hlt
pop
sbb
ss
fdivrl
mov
jp
test
imul
mov
xchg
rcr
orl
xor
cwtl
pop
xchg
mov
sbb
cwtl
push
push
ss
mov
cld
ja
add
pop
xor
xchg
jns
mov
bound
mov
ret
filds
adc
js
ja
adc
enter
pop
lret
xorb
push
jg
mov
push
cltd
push
hlt
xor
sbb
fisubrl
adc
int3
gs
mov
mov
sub
pop
sbb
lcall
jno
add
lds
mov
ret
insb
jl
nop
xchg
cmpsb
mov
cmp
cmpsl
mov
pop
stos
cmpsl
movsl
aaa
ss
loope
fdivl
cmpl
pusha
inc
call
dec
cltd
or
xchg
outsb
cmp
dec
addr16
dec
pop
fdivl
sbb
dec
fwait
jns
mov
ljmp
clc
mov
in
call
pop
add
jge
ret
orl
mov
pop
fidivrs
xor
add
mov
lret
sub
lock
dec
cs
mov
xor
icebp
push
cmp
mov
imul
cmp
notl
cmp
xlat
ljmp
mov
mov
aas
pop
xor
mov
mov
enter
jmp
and
mov
jae
push
xchg
or
lret
sbb
jp
mov
aad
jg
insl
outsb
test
push
shll
shlb
and
pop
pop
push
lret
mov
insl
inc
mov
pop
sub
imul
mov
pusha
scas
je
xlat
aaa
cmpsb
fwait
cmc
mov
jg
js
xchg
add
vmovlpd
mov
cmpb
enter
mov
mov
sahf
inc
gs
adc
mov
lcall
pop
jp
mov
jmp
cmpsl
sub
hlt
clc
fwait
bound
into
adc
dec
xchg
cmpsb
cmpsl
es
movsb
sbb
dec
stos
jmp
pop
push
xorl
jp
and
sbb
or
pop
stos
pop
cli
ret
xor
mov
data16
jp
aad
ss
xlat
daa
xor
mov
data16
mov
imul
and
hlt
jb
mov
repnz
xchg
add
adc
push
scas
cld
sub
inc
mov
popf
in
jg
cli
jle
sbb
mov
adc
fwait
mov
xchg
mov
xor
push
xor
icebp
mov
cmpsb
ljmp
sub
shlb
jno
jmp
icebp
mov
sub
std
arpl
inc
in
negl
loope
aaa
sbb
mov
mov
xchg
and
push
and
mov
push
popf
addr16
adc
pop
add
xor
test
lret
test
hlt
cmpsb
jecxz
pop
jo
out
mov
mov
mov
or
mov
xor
jge
lret
out
mov
sbb
lret
inc
mov
repz
out
jno
mov
aad
shrb
push
es
mov
addr16
leave
lahf
call
pop
xchg
mov
scas
nop
ss
enter
mov
mov
mov
add
mov
ret
adc
out
mov
dec
enter
sets
ss
nop
mov
fnsave
mov
mov
mov
insl
repnz
pop
cmpsl
scas
xchg
lahf
pop
add
ljmp
mov
mov
into
std
sbb
scas
mov
fwait
aam
xchg
jp
dec
push
pop
andb
pop
dec
dec
mov
cld
mov
insl
aam
imul
or
out
inc
mov
lcall
orl
addr16
popa
push
and
std
pop
mov
or
aad
xchg
mov
mov
fstps
mov
insb
jnp
cli
mov
cwtl
jmp
insl
mov
test
xor
jb
cmpsl
inc
inc
insb
scas
mov
push
cld
mov
mov
mov
inc
in
mov
inc
sbb
nop
push
sahf
jl
loope
jb
dec
mov
push
jmp
rcll
mov
cmp
fcoms
dec
mov
push
mov
scas
test
fwait
mov
sub
mov
xchg
inc
push
hlt
cmpsl
mov
sub
or
jne
negb
in
pop
jecxz
mov
cmpsl
xchg
add
pop
jno
out
and
ss
mov
pop
mov
test
addr16
mov
mov
out
dec
push
shrl
sbb
mov
ds
scas
mov
sbb
imul
and
andl
jne
cmpsl
scas
inc
fsubs
stos
out
jo
adc
mov
mov
pop
aaa
and
lock
call
out
cmp
lret
or
test
jne
cwtl
cmp
or
out
cwtl
mov
mov
je
lea
mov
or
cmpsl
adc
push
ficoms
mov
sub
xchg
out
into
dec
jno
loope
add
mov
negb
sub
out
jp
or
jno
mov
xchg
inc
push
adc
in
sub
test
mov
mulb
mov
frstor
mov
sbb
push
push
sub
mov
push
xor
es
dec
xor
xchg
insb
sbb
dec
mov
int3
or
adc
scas
pop
mov
test
cwtl
cmp
lods
jbe
insl
gs
movsl
fucomi
int3
and
mov
or
lret
leave
dec
push
out
jl
xadd
inc
in
fistpll
sbb
mov
mov
add
and
cwtl
test
xchg
out
es
mov
adc
andb
xor
fistps
shlb
mov
inc
data16
pushf
mov
rcrl
cmp
add
daa
jns
lods
cmp
icebp
int3
jb
xchg
fimuls
out
mov
hlt
xchg
fidivrl
sbb
ret
fcompl
xchg
cmpb
push
test
pop
mov
fcomps
dec
jg
mov
shll
inc
cmp
cmpsb
icebp
movsb
jno
test
lahf
or
outsl
sbb
gs
rep
mov
pop
cmp
mov
xchg
lds
test
mov
xor
call
es
or
mov
mov
push
movsb
xor
push
movsl
push
xor
jns
shrl
jbe
mov
lea
arpl
mov
scas
nop
fstps
mov
mov
cmp
test
mov
cs
cmp
xchg
mov
adc
and
bound
or
xlat
and
ret
mov
push
mov
out
pop
imul
xor
inc
cld
xor
mov
cwtl
xlat
push
pusha
push
xor
inc
insl
mov
ja
sub
cmpsl
and
int
sahf
and
mov
pop
xchg
js
push
pushf
pop
push
mov
push
outsb
xchg
mov
cwtl
sbb
jp
mov
sarb
adc
fnstsw
mov
pop
push
mov
cmp
scas
cwtl
xor
mov
iret
loope
mov
aaa
mov
stos
push
dec
xchg
cmp
adc
insl
adc
pusha
mov
icebp
sbb
sbb
test
nop
pop
imul
outsb
mov
scas
and
adc
mov
jg
cmp
mov
xchg
loop
js
cmpsl
and
inc
pop
push
mov
pop
dec
mov
mov
push
loopne
aas
lods
sbb
mov
out
add
jge
xor
pop
fnstcw
mov
xchg
outsl
pop
jl
repz
lock
ljmp
arpl
cmpsl
dec
xchg
jnp
int3
inc
scas
je
ja
dec
mov
jns
fidivrs
popf
mov
mov
loop
cmp
push
stos
mov
gs
int3
lods
das
std
dec
lea
leave
jmp
mov
mov
dec
fidivs
xor
cmp
sub
mov
in
mov
lcall
cmp
out
mov
mov
out
cmpsb
push
and
sahf
jae
jle
mov
ss
es
sbb
xchg
xchg
or
xchg
mov
dec
imul
push
mov
dec
mov
loopne
dec
ret
mov
lods
inc
xorl
sbb
or
cmpsl
std
xor
mov
xor
repnz
loopne
jns
mov
adcb
mov
clc
hlt
xchg
das
jnp
cmc
sub
mov
jo
ds
xor
mov
call
push
jno
aas
pop
pop
cmpsl
mov
mov
xlat
jge
icebp
xchg
andl
fcompl
mov
lcall
jnp
lahf
xor
mov
mov
pop
cmpsl
jnp
pop
ljmp
mov
mov
movsl
shrb
aaa
sbb
xor
jno
dec
adc
ja
mov
icebp
stos
xchg
cmpsl
mov
in
jno
mov
xorb
imul
stc
pop
bound
sub
test
inc
dec
pop
lods
sub
shll
xor
and
add
mov
lods
in
sbb
pop
cmp
stos
andl
stc
popf
ljmp
scas
test
dec
sbb
cmp
fidivl
mov
xchg
mov
jne
inc
lret
dec
xor
cmc
lahf
pop
nop
mov
scas
lret
jno
add
mov
hlt
dec
lock
lahf
jg
mov
das
dec
fisubrl
mov
ficoms
call
adc
mov
sub
mov
lahf
add
sub
pop
adc
xlat
mov
mov
shrb
mov
shll
out
mov
jmp
jp
cmpb
cmp
cwtl
rcrb
pusha
out
mov
mov
mov
adc
and
xor
popf
mov
rol
push
lret
out
test
popa
insl
les
jno
loope
scas
jne
mov
mov
mov
das
jae
mov
push
lock
sbb
xlat
dec
inc
fistpll
jnp
mov
or
mov
jp
movsl
scas
je
into
push
cwtl
aad
sbb
and
sub
daa
mov
or
xchg
xchg
xchg
movsl
les
lods
xchg
dec
add
repz
dec
test
mov
aas
movsb
cmpsw
inc
mov
js
jmp
decl
cs
add
cmc
jecxz
mov
sahf
xchg
push
neg
movsb
pop
mov
mov
scas
xor
fisubs
fdivl
adc
idiv
addl
and
jbe
xor
inc
mov
mov
xor
adc
fdivrl
inc
inc
imul
pop
xor
in
jb
xlat
add
popw
pop
fnsave
inc
lods
mov
inc
cmp
mov
xor
in
popa
jg
mov
mov
mov
pop
movsl
test
leave
xchg
jle
scas
jle
pop
cmp
gs
idivb
aaa
repnz
mov
and
or
sbb
inc
sub
mov
push
int
xor
lahf
clc
mov
lds
jge
mov
mov
lea
insb
mov
nop
sbb
aaa
fldt
mov
inc
enter
mov
push
cmp
icebp
mov
adc
mov
xor
test
insl
shlb
mov
popa
jge
sbb
jge
insl
movsl
mov
cmp
pushf
sub
lcall
orl
mov
mov
add
fsubrl
stos
or
xlat
sbb
mov
jle
fsts
xor
movsl
mov
insb
fcomi
repz
push
cmpsb
mov
sbb
int3
xlat
push
and
mov
jmp
sbb
pop
push
dec
sub
xor
pop
cmpsl
mov
cmp
movsl
push
pop
divl
mov
dec
cmp
xchg
in
or
lods
mov
push
into
lods
imul
pop
cmpsl
sub
movsb
inc
je
mov
lds
ljmp
cmp
mov
mov
dec
sbb
je
pop
mov
and
cmp
adc
pop
scas
push
jg
cmp
mov
cmp
mov
mov
push
xchg
lret
les
inc
jbe
jnp
ret
hlt
jp
es
adc
mov
clc
shrl
inc
adc
jbe
sbb
add
jne
mov
cmpsb
dec
pop
testl
cs
mov
push
xor
inc
cmp
push
mov
sti
sahf
fadd
hlt
outsl
cmp
mov
cmc
les
add
mov
jge
test
stc
repz
cmp
iret
add
push
mov
xlat
scas
push
adc
pop
xor
mov
mov
jo
leave
mov
lods
mov
cmpsl
mov
jne
xchg
cs
pop
push
leave
or
lock
push
add
in
and
movsl
mulb
mov
mov
call
test
jg
movsb
std
js
cli
in
pop
mov
jno
inc
rcr
cltd
dec
test
cmp
mov
mov
and
mov
jne
mov
and
pop
js
cmp
sti
add
jl
xlat
pop
bound
sahf
test
jmp
add
outsb
dec
clc
cltd
pop
sarl
mov
ss
aaa
xchg
inc
dec
scas
inc
jge
push
mov
jb
lahf
mov
push
je
mov
dec
xchg
adc
fldcw
imul
cmpsl
ror
dec
mov
jno
and
outsb
pop
mov
insl
mov
xchg
inc
pop
scas
lods
mov
lea
stos
aad
sub
imul
outsl
in
leave
out
mov
push
roll
and
mov
sbb
jl
das
cltd
popf
mov
cmpb
clc
mov
cmp
daa
jo
dec
mov
mov
push
or
pop
clc
mov
jecxz
or
push
sbb
mov
pushf
out
pop
mov
stc
jmp
insl
pop
mov
add
xchg
jbe
inc
aam
xchg
pop
ja
add
scas
cmp
subl
imul
dec
bound
inc
push
sub
xchg
cmpsl
dec
pop
add
out
scas
inc
aas
add
mov
mov
jns
sbb
cmc
das
sub
ljmp
mov
mov
push
pushf
iret
imul
or
mov
cmpsb
lods
sbb
shrl
js
sub
mov
mov
jl
insb
popa
inc
fcom
arpl
ja
das
sub
push
sahf
push
lea
aas
sbb
je
mov
xor
fsubp
xchg
cmpsl
cmp
es
cwtl
and
clc
mov
xchg
mov
jne
xchg
neg
push
std
dec
mov
popf
pop
movsl
jns
pop
pop
insl
cmpsl
loop
aaa
std
mov
fidivrl
loope
xchg
mov
sub
subb
mov
xchg
cs
shl
aaa
in
cltd
jecxz,pt
add
testl
mov
jle
cmpsb
dec
sbb
cmp
dec
dec
clc
scas
mov
jle
mov
std
decb
das
out
xlat
push
and
jb
pushf
pushl
ret
push
lods
lods
movsb
cli
and
pop
in
push
dec
dec
mov
xor
xor
xchg
lret
in
pop
sahf
lahf
add
bound
pop
and
leave
and
mov
push
subb
iret
xchg
imul
clc
adc
leave
mov
cmpsb
fwait
in
push
xchg
or
mov
push
ret
adc
cmpl
call
cmp
mov
lea
ja
sets
add
pushf
pushl
sub
rcl
sub
add
shl
mov
jmp
dec
les
dec
mov
xor
jle
lock
pop
mov
sub
push
and
inc
ss
int
add
sbbb
syscall
jnp
mov
jne
js
test
dec
int
fcoml
and
mov
imul
push
rorl
aas
xor
add
mov
addr16
mov
test
clc
pop
jle
hlt
add
push
pop
into
sbb
ljmp
add
add
cmp
push
pusha
pushl
push
lea
jae
pusha
cmp
add
jae
cmc
cmp
pusha
lea
jae
cmc
jmp
or
cli
lock
jp
xchg
add
sub
dec
stos
jge
insb
jnp
mov
mov
sbb
int
mov
pop
xchg
leave
fstpl
pop
xchg
in
ret
push
cmp
pop
mov
jbe
outsb
mov
sbbl
push
cmpsb
sbb
sbbl
xchg
mov
out
pop
mov
adc
jns
pop
mov
mov
lea
jbe
sub
mov
and
rcr
btc
add
ror
push
clc
mov
sbb
ror
add
bt
sub
shl
rol
movl
or
add
mov
add
cmc
cmc
cmp
pusha
pushf
pushf
pushl
lea
jbe
bt
sub
stc
bswap
btc
and
mov
cmc
movsbw
mov
jmp
dec
stos
sbbl
roll
adc
pushf
push
pop
dec
cwtl
pop
dec
clc
rolb
cwtl
xchg
outsl
sbb
dec
mov
nop
pop
sar
or
add
pop
dec
in
add
jle
mov
cwtl
pop
dec
inc
push
or
mov
sbbl
roll
adc
fwait
int
mov
dec
pusha
rorl
or
rorl
inc
jo
xor
sbbl
roll
daa
push
cltd
or
dec
cmp
add
out
cs
mov
rorl
dec
push
mov
or
xor
mov
mov
sbb
stos
sbbl
roll
add
xchg
int
xchg
nop
pop
dec
in
adc
sbb
loop
dec
enter
adc
andl
pop
dec
insb
push
or
mov
insb
roll
fldt
cwtl
pop
dec
test
add
aas
cwtl
pop
dec
shlb
add
mov
js
pop
dec
adc
add
sbbl
repnz
subb
add
adc
adc
pop
xor
adcb
pop
xor
arpl
xchg
add
test
mov
dec
insb
rorl
test
test
adc
add
iret
loope
test
mov
arpl
or
repz
cwtl
pop
dec
xor
xor
outsl
nop
shrb
roll
sub
xchg
pop
dec
int3
sbb
loopne
mov
xchg
pop
dec
adc
or
rorl
push
add
stos
sbbl
roll
xlat
sbb
jl
sbbl
push
or
xchg
pushf
dec
inc
xor
push
or
lods
es
sbbl
adc
push
xchg
cmc
adc
mov
shr
adc
dec
insb
roll
xlat
ret
xchg
stos
sbbl
roll
in
jns
int
sub
dec
push
sub
pop
aad
jb
std
xchg
daa
inc
sub
test
dec
pop
add
daa
push
dec
test
mov
stos
sbbl
roll
sbb
push
inc
lret
xchg
pop
dec
sbb
sbb
sbbl
roll
mov
stos
sbbl
roll
xchg
cwtl
pop
dec
test
add
sub
lds
cmp
in
js
sbbl
jae
and
xchg
mov
cli
sti
adc
outsb
ja
add
xchg
les
mov
mov
nop
fsts
je
add
pop
jbe
fstpl
mov
pop
movsb
fsubp
fstpl
push
mov
divl
jb
stos
and
icebp
mov
outsl
push
cmp
jg
mov
xchg
enter
mov
mov
imulb
sub
mov
aad
pop
mov
addr16
jb
clc
nop
call
lea
jne
cwtl
movb
lea
push
movb
mov
jmp
and
jmp
push
push
pop
jo
inc
jnp
or
or
mov
xchg
push
and
or
adc
ja
pop
in
mov
std
aaa
cwtl
xchg
ror
inc
mov
mov
shll
cmp
jle
push
mov
cmp
jne
jl
faddl
in
sbbl
sub
push
sub
cld
push
mov
cmp
stos
test
mov
mov
call
scas
lea
je
jmp
xlat
dec
xor
test
das
pusha
popa
push
and
out
mov
dec
sti
adc
into
cltd
int
shlb
dec
mov
jecxz
insl
cmpsb
fisttpll
sbb
sbb
add
fisttpl
rcll
xor
stos
lahf
cmp
daa
clc
xor
mov
or
rorb
enter
test
inc
lea
je
fwait
xor
fwait
xor
or
cmpb
sti
inc
pop
xchg
ffreep
sahf
and
lret
fucomip
pop
repz
cmp
mov
cli
shl
cmp
loop
pop
mov
xor
mov
xor
mov
mov
jmp
or
int3
add
sbb
cmpsl
mov
testl
je
rorb
dec
adcl
test
adc
or
or
ljmp
leave
add
pop
and
push
xchg
adc
push
xlat
adc
dec
bound
add
cmp
mov
cmp
adc
ret
inc
push
dec
inc
dec
xor
cs
insb
add
scas
jmp
add
and
xchg
or
and
mov
ret
out
icebp
mov
aam
fidivrs
mov
fisubs
shlb
cltd
in
pop
inc
ror
sub
push
mov
loop
mov
add
lret
cmp
mov
add
inc
jbe
in
sbb
xor
push
int
vmovdqa
mov
test
sub
lds
pop
adc
into
add
test
push
test
rorl
pop
outsl
adc
movd
lea
ja
pushf
imul
clc
jmp
xchg
shlb
add
imul
stos
or
fidivs
cld
push
or
xor
xchg
xchg
pushf
or
mov
in
sub
push
mov
inc
xchg
push
ja
pop
imul
pop
jecxz
mov
call
sbb
clc
cmc
xor
push
add
pushf
cmpsl
mov
cmp
stos
int3
data16
and
jns,pn
arpl
lods
sbb
ret
lods
sbb
fisttpll
inc
jbe
cld
or
cmp
jle
cmp
icebp
cmp
mov
sub
fsts
movsb
cli
fwait
mov
xor
in
ss
nop
xchg
aad
xor
psubsb
sbbl
sbb
jmp
pushf
sub
push
adc
and
mov
mov
cs
mov
jle
and
adc
xor
inc
inc
aas
ds
sti
push
jns
jmp
in
iret
popf
cmp
bound
sbb
add
push
jmp
not
jmp
loope
cmp
movsb
cli
lods
cmc
jg,pt
jmp
data16
xchg
int3
add
stc
xor
mov
fstps
sub
cmp
push
push
push
pop
jns
jp
psrlq
sbb
push
xchg
mov
sub
sbb
repnz
jg
hlt
cmc
enter
and
add
scas
xchg
movsb
cmp
cmpsb
sbb
daa
sub
in
mov
inc
inc
loope
lock
dec
mov
cs
arpl
in
pop
pop
popa
jo
repnz
xchg
repz
xchg
or
imul
outsl
addb
mov
or
test
mov
int3
lcall
and
sbb
adc
mov
shll
push
jae
mov
xor
mov
push
ficomps
imull
sub
xchg
or
mov
or
into
xorl
mov
sub
add
xchg
lret
cmp
scas
fldl
cmp
mov
mov
clc
in
inc
xorl
mov
mov
shrb
dec
scas
lods
add
sbb
imul
jmp
push
rep
pusha
not
pusha
mov
push
mov
push
lea
jmp
call
movl
pusha
jmp
mov
pushf
pushf
pushl
ret
ja
sarb
fwait
lods
adc
and
sbb
inc
xchg
stos
pop
das
pusha
mov
inc
jl
xchg
sbb
xor
jnp
adc
hlt
das
mov
pop
pop
lds
or
dec
hlt
or
mov
dec
inc
scas
lds
and
cmpsb
icebp
clc
push
std
push
es
sahf
adc
dec
js
mov
movsbl
pop
push
pusha
pushf
pushf
pushl
ret
sar
mov
ret
test
jecxz
movsl
cmpsl
mov
mov
add
fwait
or
lods
cmp
add
fucomi
xor
fldcw
mov
add
fistl
and
sbb
dec
ret
push
pusha
hlt
add
xchg
inc
js
mov
int
test
cli
ss
sub
mov
lret
pop
jmp
rcll
sbb
mov
sub
pop
cs
aam
sbb
lret
sub
icebp
add
sub
xor
inc
dec
test
jns
pop
call
icebp
add
push
pushf
lea
jmp
cmc
cmc
bt
xor
call
mov
pop
movzbw
mov
pushf
pushf
mov
movb
pushl
ret
lret
pop
in
mov
push
pop
mov
cmp
std
push
das
pop
andl
or
subl
mov
adc
xchg
xchg
pop
or
and
mov
loopne
stc
out
lea
mov
fs
cli
out
sbb
mov
inc
addl
mov
and
ret
cs
aaa
cmp
push
movw
mov
movsbw
pop
pushf
push
pushl
ret
arpl
or
or
cmc
ss
push
insb
fstl
out
std
outsb
cmp
cwtl
xchg
sbb
cmc
push
nop
insl
aam
daa
in
pop
sub
pop
aaa
stc
adc
outsl
jmp
vorpd
hlt
call
inc
cmpb
pop
dec
inc
dec
jmp
inc
mov
and
repz
dec
out
pop
xor
xchg
hlt
and
into
es
push
or
push
int3
std
push
mov
pop
pop
pop
mov
mov
sbb
fucomp
sub
lods
clc
inc
sub
dec
loopne
outsb
push
mov
sub
mov
add
jb
in
push
outsb
fbld
sub
jle
rcr
in
xchg
int
pop
push
mov
repz
adc
fcoml
cld
xchg
stos
lret
enter
scas
aas
or
mov
jecxz
jecxz
or
fs
out
sub
jne
pop
js
or
insb
iret
icebp
je
loop
sub
outsb
fistps
sbb
mov
and
scas
aad
jnp
sbb
dec
pop
imul
xor
cld
gs
jnp
xor
add
ret
jg
fwait
jmp
mov
stc
outsl
cltd
pushf
ja
out
sub
sbb
sub
iret
lock
cli
popf
cltd
jno
movsl
push
jge
in
pop
lock
test
mov
mov
mov
cmp
iret
int
pop
push
imul
out
iret
loope
mov
into
out
aad
inc
scas
in
sbb
or
cmpsb
int
inc
jg
or
push
or
dec
xor
cs
insb
add
imul
cli
fmuls
stos
add
outsb
ja
icebp
or
lods
mov
add
or
jo
mov
fstpl
sbb
bound
fistpl
rorb
cmp
je
or
jge
scas
inc
jno
es
adc
adc
shll
and
mov
sub
into
add
inc
outsb
jge
ret
add
mov
int3
daa
data16
insl
add
fs
jne
bt
sub
btr
movsbl
mov
adc
not
and
xor
add
setae
mov
pusha
test
test
pushf
lea
je
push
lea
jmp
fsts
mov
fildl
cmpsl
lock
mov
addr16
arpl
push
aam
out
dec
mov
fstp
push
lcall
mov
cmp
pop
pop
push
int3
push
std
xor
insb
or
cmp
adc
es
imul
cld
dec
fcoml
out
adc
xor
rcr
push
sub
push
jb
or
lods
lcall
dec
dec
test
movsb
cli
loopne
xchg
jmp
inc
inc
ja
sbb
fdivrl
lea
dec
dec
xor
push
js
ljmp
mov
mov
rorb
push
in
sub
lods
dec
ja
in
pop
int
mov
mov
xchg
xchg
push
dec
hlt
cs
mov
jnp
mov
scas
pop
sbb
cld
inc
xchg
sub
addb
es
lahf
add
mov
fisubs
mov
dec
push
enter
cmp
jge
cmp
adc
sub
repnz
xchg
mov
lods
int
jnp
aad
xor
sub
fwait
adc
xlat
sbb
cmp
push
addr16
cmp
repnz
and
aam
pop
icebp
fstpt
shll
mov
xorb
dec
adc
out
mov
cmpsb
cmpsb
inc
xor
in
jge
or
sbb
or
bound
jp
adc
dec
out
jne
int3
pop
ja
xchg
int
fs
and
in
push
jge
xchg
repz
add
icebp
incb
jmp
cmpsl
mov
jnp
lahf
rcl
test
or
push
sbb
or
cmc
ret
sbb
dec
shll
push
ja
aas
xor
decb
notb
jle
cmpsl
jp
push
hlt
ret
jnp
mov
mov
das
mov
dec
jg
push
scas
negl
push
fnstenv
movsl
mov
cmp
sbb
xor
loopne
fwait
mov
mov
or
dec
imul
out
mov
pop
imul
push
and
cmpsl
pushf
cmc
mull
ret
cmpb
iret
pusha
aaa
mov
scas
pop
dec
int3
rcrl
cmp
test
mov
ss
inc
fcmovnu
cmp
rol
out
movsb
or
call
ret
ficoml
mov
xchg
fisubrl
adc
and
jae
adc
push
fdiv
push
into
and
mov
rclb
test
cmpsl
sbb
sub
mov
ja
push
xlat
dec
jge
mov
movsl
jp
xchg
mov
jecxz
add
aaa
call
add
and
movsl
int3
sub
mov
xchg
xchg
pop
adc
and
or
mov
mov
mov
push
ja
inc
test
cmp
ret
dec
inc
aad
das
push
gs
jo
subl
adcb
stc
out
fdiv
pop
xchg
out
cmc
lods
repnz
push
xor
std
aas
inc
je
pop
sub
dec
push
aaa
sahf
fimull
fistps
pop
cmp
xor
imulb
out
addb
pop
dec
sbb
pushl
fwait
and
out
and
les
sbb
add
sbb
dec
fstl
insb
stc
outsl
and
push
arpl
push
out
decl
cli
xor
test
jmp
lods
push
outsl
cmp
mov
cltd
mov
jmp
cmc
pop
sub
and
push
sub
lret
cmc
loope
inc
cmpsb
lcall
push
cmp
int3
or
xor
imull
stc
outsl
stc
popl
and
shlb
rclb
cmp
push
fstl
or
jle
mov
push
sbb
or
and
xor
sti
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
cmp
ret
test
sbb
shrb
mov
jo
push
sub
js
lcall
outsl
xchg
movsl
inc
rcrl
sbb
test
sbb
xchg
rcll
mov
cmp
sar
arpl
lahf
loop
mov
test
lcall
fwait
into
mov
insl
or
test
mov
mov
fcmovu
popl
outsb
and
clc
clc
add
in
cmp
sar
add
pop
mov
lds
sub
pop
in
push
jne
or
cmp
into
daa
dec
popa
ficoml
je
push
jg
adc
cmp
pushf
mov
pusha
adc
inc
pop
mov
and
call
push
in
fucomi
loop
pop
stc
and
loop
add
jno
cmpl
add
dec
inc
andb
stc
dec
jg
cwtl
mov
jle
rcll
mov
cltd
montmul
cmpsb
xchg
inc
dec
movsl
add
mov
inc
mov
int3
repz
lea
jnp
rep
bswap
bswap
not
pushf
mov
push
pushf
pushf
lea
jmp
lea
jne
shr
aam
or
and
sub
shld
mov
call
xchg
or
ret
push
mov
dec
push
xchg
add
cltd
fimull
xchg
cmp
pop
and
mov
popa
aad
inc
mov
cmp
imul
dec
movsl
push
mov
dec
mov
mov
mov
cmp
shll
xchg
cmp
int3
bound
push
int3
int
mov
cmpl
cmp
cmpsb
icebp
fs
out
pop
cmpsb
lds
fs
les
dec
lods
into
fbstp
popa
lcall
cltd
pop
mov
push
pop
mov
xchg
fwait
mov
roll
rolb
xchg
xchg
push
sbb
loope
jmp
xchg
dec
es
lret
loop
cmpsb
mov
mov
mov
or
xchg
repnz
js
sbb
mov
add
push
inc
ja
inc
test
rcr
adc
cmp
mov
loope
fstl
test
cmp
mov
out
adc
stos
std
sahf
inc
xor
fidivrs
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
fadd
movsb
cli
fs
out
dec
push
adc
cmpsl
sbb
leave
or
or
dec
sar
sarl
adc
add
dec
dec
ret
pusha
mov
mov
cmpsl
repz
add
lods
loope
adc
and
jne
mov
jnp
mov
dec
cmp
mov
lret
cmp
addb
adc
adc
adc
rcl
xor
lret
inc
lds
cld
dec
mov
and
ret
cmc
shlb
pop
pop
or
inc
adc
loope
dec
ss
xchg
push
icebp
repnz
inc
mov
sbb
mov
mov
add
loopne
and
insb
loop
les
adc
and
es
adc
int
mov
jns
incb
mov
fs
lcall
inc
inc
addl
sbb
pop
sahf
lds
cli
subl
adc
lea
jne
lahf
add
sub
shld
movzbw
pushf
mov
shr
pushf
jmp
rorb
repz
call
cmp
call
push
cmp
sbb
cmpsb
jg
mov
mov
mov
ficoml
stc
in
mov
icebp
out
fs
jbe
out
dec
jmp
cmp
cmp
jb
mov
out
std
cmp
sbb
lret
pop
mov
mov
hlt
xchg
adc
addl
popa
cmp
adc
je
ds
push
jg
in
cmp
test
rorl
cmp
andb
es
movsb
cli
popf
mov
loopne
sbb
in
addr16
ret
inc
fldt
dec
orl
shlb
or
mov
sbb
cld
push
daa
and
jns
lea
out
pop
mov
cmp
ja
push
add
sahf
into
mov
hlt
fucom
fptan
cs
xor
xchg
hlt
jo
jle
xor
jle
sub
adcb
push
pop
out
cmp
and
ljmp
cmpl
jg
add
call
inc
inc
shr
cmc
xchg
inc
stc
mov
rcl
push
mov
stc
cmc
add
je
test
push
neg
mov
clc
test
bt
call
push
int3
mov
movsb
cli
cmp
pop
and
sbb
std
lcall
or
insb
rorb
int
aad
or
mov
pop
xorb
aam
in
fdivrs
lret
enter
dec
lea
mov
lahf
into
adcl
pushf
lahf
jle
xchg
or
xor
sub
in
add
mov
leave
adc
or
xchg
icebp
and
and
stc
mov
test
cmpb
pusha
mov
lea
jmp
bswap
add
rcl
ror
mov
bt
jmp
ficoml
inc
dec
movsb
lods
out
adc
mov
into
in
adcb
es
repz
out
rclb
mov
push
aam
out
lcall
or
nop
arpl
test
push
out
popa
pop
aam
push
add
or
ds
xchg
dec
addl
or
bound
cmp
push
dec
jle
int3
adc
loopne
lods
clc
stos
cltd
cs
xlat
out
lret
mov
xchg
iret
sbb
cmp
xchg
cmc
push
dec
shl
xchg
mov
push
scas
push
jmp
xor
pop
pop
inc
sub
fstpl
and
push
push
add
js
xsha256
cmpsb
nop
test
inc
jae
stos
xchg
and
rorb
ss
movsb
xor
cmp
sbb
inc
addl
fists
xor
sbbl
sbbl
jle
hlt
dec
dec
test
movsb
mov
and
daa
pop
cmpsl
push
cmpsb
lock
leave
movsb
cli
js
or
lods
mov
adc
jnp
xor
cmp
dec
adc
inc
insb
adc
jae
jp
insl
cmpsl
lock
arpl
pop
cli
mov
lret
jl
jns
add
mov
xor
jmp
lfs
punpckhwd
mov
jns
xchg
cltd
mov
pop
inc
xor
lds
cli
inc
pop
push
xor
dec
jnp
and
popf
in
orb
ret
hlt
push
popf
adc
fsubs
arpl
xlat
clc
out
loop
jne
mov
pop
cmp
loope
nop
add
fdivl
leave
loop
push
and
fldt
es
sub
push
aam
dec
in
adc
leave
cwtl
mov
mov
out
adc
mov
xor
shrl
shr
and
lock
adc
ficoms
mov
stc
xor
lea
dec
push
xor
push
xor
push
outsl
mov
lcall
xchg
lret
xor
outsl
arpl
xchg
imul
and
xchg
das
in
test
ljmp
pop
sbb
pop
pop
xchg
popf
cmp
adc
xchg
add
inc
stos
and
add
mov
out
cmp
dec
sub
jecxz
orl
inc
mov
in
jp
int3
inc
daa
lret
movsb
cli
sahf
lahf
mov
sbb
fsubs
bound
jns
sub
wbinvd
inc
test
xchg
xchg
outsb
ljmp
outsb
mov
mov
stos
stc
jo
push
xor
lret
inc
adc
enter
inc
cmp
push
push
push
pusha
lea
jae
call
push
lea
jne
movzbl
xor
mov
bt
pushf
bt
clc
add
bt
pushf
cmp
movzwl
pop
or
mov
pushl
movw
add
stc
jmp
outsb
stos
pop
jo
shl
inc
jne
fnstsw
sbb
jge
add
das
cli
xchg
xchg
xchg
icebp
mov
sbb
stos
xchg
rcl
incl
jno
jecxz
test
pop
dec
mov
sub
lds
sbb
jmp
scas
mov
out
or
adc
jecxz
pop
and
add
scas
sbb
adc
push
push
mov
dec
outsb
outsb
or
jp
out
cwtl
dec
mov
movsb
movsb
inc
cwtl
dec
jp
shll
pushf
ret
cli
stc
cmp
or
sub
mov
arpl
movsb
cli
rorb
ret
xor
pop
nop
cltd
add
jl
sub
xchg
fchs
stc
lds
mov
push
mov
scas
call
test
scas
and
int3
fsubs
sbb
dec
addr16
or
pop
iret
stos
sahf
mov
pop
push
insl
jecxz
dec
fwait
sahf
jecxz
cmp
jne
fcmovnu
cmc
sbb
loop
mov
rclb
dec
xchg
jno
aaa
je
pushf
mov
jmp
dec
mov
sub
mov
pusha
test
pop
xor
lods
push
or
movups
jecxz
push
movsb
out
adc
dec
pop
lea
mov
mov
xor
push
sub
xor
dec
sbb
and
fimull
fsts
or
or
pusha
lret
sti
stos
out
addr16
and
sub
daa
jb
jmp
mov
xchg
adc
and
icebp
cmp
inc
or
enter
int
cli
add
cmp
pop
push
jno
test
fcmovne
cwtl
pop
xor
stc
adc
mov
das
out
test
inc
flds
push
push
and
adc
xor
clc
jmp
adc
adc
push
fs
inc
mov
add
paddusw
cwtl
cwtl
add
sysexit
xchg
cmp
mov
into
in
cmp
add
jne
push
sub
out
cmp
push
pusha
shl
mov
call
cmpsl
loop
int3
movsb
cli
ds
fcomps
jb
lods
in
test
leave
lret
sbb
mov
cmp
or
data16
out
enter
int
pop
inc
lea
testl
lret
jl
inc
je
push
outsl
in
mov
imul
std
outsb
cmp
mov
daa
sub
dec
test
push
inc
pop
arpl
dec
mov
bswap
movsl
gs
cwtl
fbstp
out
imul
jns
jmp
insl
cmpsb
pop
push
ljmp
mov
add
clc
adc
imul
in
clc
and
data16
jno
jg
add
aas
xor
ret
push
mov
jmp
mov
stos
inc
lock
mov
lret
xor
cltd
add
daa
xor
cmpsb
fwait
pushf
jb
faddl
add
pop
cs
or
xchg
loop
sahf
mov
das
xchg
test
mov
fcoms
mov
in
cs
ljmpw
test
xchg
pop
add
or
jns
and
jl
add
jp
add
mov
stc
lcall
add
jle
mov
add
push
enter
jge
xor
test
fs
jg
es
sbb
pop
push
mov
mov
loope
pop
mov
adc
insb
jae
pop
call
hlt
das
adc
movsb
cli
test
mov
dec
jge
inc
nop
jmp
pop
mov
ret
shr
add
cmpsl
inc
inc
subb
push
and
imul
cld
push
cltd
cmp
leave
arpl
sbb
ret
outsb
pusha
cli
push
lods
push
sub
out
in
in
push
lods
sarl
rclb
test
xchg
nop
push
adc
pop
xchg
push
mov
sbb
es
movsb
int
cmp
lods
sbb
pop
scas
and
jmp
xor
out
pushf
lret
add
iret
push
pop
movsl
pop
sbb
xchg
shr
mov
pushf
cmpb
pusha
jmp
sub
jmp
stos
and
shlb
or
inc
jne
fistpll
cltd
add
push
add
xchg
lret
push
push
lea
mov
push
movsl
cmp
fisttpll
insb
imul
xorl
rcl
outsb
arpl
xor
ja
xor
mov
bound
xlat
push
push
push
jae
add
cmovnp
sti
add
mov
insb
push
iret
movsb
cli
fldcw
dec
pop
dec
cltd
or
test
push
adc
push
pop
adc
imul
dec
cmpsb
sbb
add
adc
daa
mov
and
pop
pop
psubb
int3
or
add
sbb
inc
addr16
sub
frstor
es
cmp
scas
sbb
jecxz
sub
xchg
mov
push
xor
jo
out
je
push
push
or
out
sub
shll
xchg
out
add
dec
mov
popf
movsl
lock
mov
jl
lds
out
xchg
rclb
popf
dec
movsl
out
incl
cmc
cmc
ret
hlt
fcom
aam
mov
xchg
sub
jmp
sahf
lahf
outsb
aam
mov
out
pop
mov
hlt
popa
shll
in
fistl
rcrl
dec
out
mov
call
push
std
ret
xchg
out
in
hlt
js
movsb
rolb
jmp
aaa
jb
push
es
jmp
sti
ss
mov
xlat
xor
es
cmc
xor
pop
cltd
mov
pop
movsl
lea
aaa
or
leave
sub
jns
aam
movsb
cli
pop
test
out
pop
imul
es
aad
xchg
lret
int
mov
in
mov
cs
movsb
fnstsw
stos
xchg
shrl
mov
popa
or
cmc
imul
pop
shll
lcall
pop
in
xor
jmp
push
lea
inc
fbld
pop
lea
pop
mov
pop
mov
and
ss
lcall
cltd
adc
cmovs
inc
mov
divb
xor
add
cli
xlat
fsub
xor
popf
push
jg
sbb
xor
enter
sub
mov
lcall
iret
and
inc
jo
jle
negb
cli
pop
sub
aas
xor
iret
sbb
add
jbe
adc
or
xor
sbb
out
sbb
xchg
cltd
lea
fs
pop
inc
lret
sbb
test
in
fwait
stos
xor
enter
xchg
clc
outsb
outsb
xchg
roll
and
add
sar
push
xchg
lods
sbb
test
mov
push
call
movsb
cli
cmpsb
out
sbb
xor
scas
pop
inc
push
jb
inc
and
popa
adc
clc
ret
mov
add
xor
into
sbb
xchg
ret
dec
lods
lock
or
xor
push
jp
lods
xchg
movsb
ja
scas
jmp
add
jmp
outsl
popa
xchg
push
jp
in
xor
dec
pop
loop
inc
pop
xchg
xchg
pop
loop
stos
mov
daa
es
loopne
pop
aad
jp
jle
adc
sbb
bnd
push
push
push
inc
pusha
stc
rol
pushf
bt
bt
test
sub
movb
shr
mov
lea
je
jmp
cmpb
mov
mov
adc
inc
aas
adc
sbb
pop
push
jg
leave
cmpsb
lret
mov
push
sti
dec
inc
fistps
bound
out
xor
cmp
inc
mov
xor
xchg
mov
scas
fisttps
jae
jl
pop
xor
scas
mov
jae
push
jne
jmp
pop
jae
icebp
out
push
lahf
out
adc
adc
in
arpl
stos
ret
add
add
dec
insb
gs
outsb
imul
imul
aam
cli
mov
mov
notb
mov
cmc
sahf
stc
lcall
sbb
scas
push
outsb
fmull
nop
rorl
add
sbbl
outsb
icebp
out
lds
ucomiss
jmp
imul
adc
add
and
movsb
cli
jmp
pop
aas
inc
push
and
adc
cli
xchg
pop
sub
push
cmp
jg
pushf
adc
bound
mov
in
popf
and
leave
pushf
cmc
repnz
adc
enter
or
bound
cli
dec
xchg
or
ror
xchg
out
es
and
add
outsb
movsl
fcompl
push
mov
call
enter
movb
jmp
sbb
aad
cli
stos
mov
rcl
add
daa
cmp
or
xchg
jno
mov
xor
outsl
pop
mov
dec
xchg
int
aas
push
jnp
jne
pop
push
dec
dec
push
movsl
icebp
sub
add
movl
outsb
pop
aam
ficomps
aam
adc
adc
jo
push
insl
pushf
fwait
ljmp
lret
mov
aas
neg
add
cmp
mov
bt
test
call
lea
ja
sub
sub
adc
and
lea
sbb
add
push
btr
mov
ror
and
jmp
jno
int3
aam
cli
push
xchg
xchg
movl
sub
test
inc
int3
int
stc
lds
dec
mov
jbe
dec
ret
and
xorl
xchg
aam
mov
rol
notb
fmuls
sbb
mov
push
pushf
xchg
repnz
jo
add
sbb
push
or
sub
push
mov
es
mov
jmp
xor
cmc
inc
sbb
jecxz
imul
sbb
movsb
cli
ret
gs
nop
cltd
mov
or
scas
mov
sub
push
jge
out
andb
sets
push
xor
dec
and
sub
std
sar
and
outsb
imul
mov
mov
invd
jle
jbe
xchg
cli
cmpl
out
cmc
and
add
cmp
pop
xchg
movb
sbb
aaa
sbb
out
sbb
stos
leave
clc
call
aam
dec
xchg
sub
adc
cmp
movsb
cli
xchg
cli
xor
ret
mov
jge
loope
lcall
dec
mov
xchg
xlat
dec
xchg
jge
mov
in
subl
mov
imul
sub
addr16
push
adc
and
xchg
cmp
sub
push
jo
repz
into
or
in
jo
xor
jle
jo
pushf
xchg
ret
or
cmp
sub
std
cmp
jp
or
not
setns
inc
inc
push
call
cmc
add
add
add
or
shr
pushf
shl
mov
cmp
test
call
xor
hlt
adc
dec
jnp
fucomp
pop
enter
mov
push
xor
lds
icebp
addr16
mov
xor
sarb
popf
xchg
sub
inc
lds
pusha
or
xchg
dec
fwait
ljmp
adc
mov
mov
je
xchg
aad
imul
dec
xchg
insb
stos
out
jg
clc
les
aam
das
fsubs
cli
arpl
jp
fisubl
inc
adc
out
sub
popf
xchg
jns
pop
mov
ss
xchg
or
push
jmp
inc
cmc
imul
shlb
cmpsl
into
dec
sbb
mov
inc
cli
mov
add
or
xchg
push
dec
repnz
push
enter
bound
imul
push
sbb
shll
cmc
xchg
aad
pop
pop
aam
cmc
push
push
dec
dec
mov
aam
mov
movsb
ret
ficoml
cmp
push
pushf
rep
bswap
movzbw
call
push
xchg
js
movsb
cli
add
sti
insb
movsl
punpckhbw
fs
stos
mov
out
js
rcr
push
jl
mov
iret
out
imul
dec
xorb
push
adc
cwtl
rclb
or
pop
xor
sarb
cld
sub
xor
pushf
or
xor
push
and
sbb
and
rclb
mov
pop
xchg
fwait
mov
jae
nop
insb
popa
fucompp
adc
jmp
in
aas
fldenv
jecxz
sub
add
jp
fdivrp
loope
xchg
or
push
jp
adc
in
cmpsb
push
scas
test
cmp
rorb
mov
mov
ss
scas
jmp
rcll
pop
dec
les
sub
dec
cli
adc
mov
mov
cmp
shll
mov
jne
jne
rcrl
imul
roll
nop
scas
idiv
cld
add
popa
rolb
fisubrs
popf
fdivp
dec
add
ffree
fsubs
push
ja
fnstenv
xchg
lods
and
shrb
inc
js
push
inc
sub
sbb
outsl
stos
jbe
loopne
and
jmp
dec
ret
dec
mov
mov
out
adc
jns
adc
or
lahf
xchg
fstpl
dec
ljmp
jmp
push
inc
scas
scas
into
sbb
or
mov
inc
mov
daa
cli
cmp
faddp
add
xlat
inc
pushl
rol
clc
mov
sub
push
jmp
add
and
movsb
cli
lcall
add
cld
cmp
jmp
xchg
mov
pop
pop
notb
cld
std
aas
mov
pushf
int3
mov
mov
and
inc
xchg
notb
mov
fsts
sub
divl
lcall
jp,pt
jp
fwait
pop
ds
stc
imulb
xor
out
pop
inc
mov
pmulhw
mov
cli
sbb
push
push
dec
mov
sub
xchg
jmp
push
enter
out
shll
movl
push
pusha
mov
push
mov
pushl
mov
pushl
ret
bt
cmc
add
jg
sub
pushf
pushf
pusha
bt
cmp
jmp
jmp
push
push
aaa
stos
repz
sahf
xlat
data16
aam
or
sbb
adc
sub
data16
insb
test
jg
jle
mov
push
sbb
pop
sarl
jle
xlat
mov
int3
or
js
xor
sbb
cmp
das
imul
cs
loop
cmp
out
addr16
pop
imulb
inc
mov
xchg
ret
int3
in
testb
negl
inc
fmull
inc
add
outsl
outsl
dec
scas
pop
jp
test
scas
and
out
dec
push
xchg
repnz
fcomp
es
add
out
aaa
js
sbb
sub
adc
lock
jge
fsubl
fcompl
std
js
lret
dec
push
or
mov
int
scas
cmp
jg
scas
cmp
negl
jns
sbb
imul
pop
outsb
lds
ljmp
bound
int3
inc
decl
xor
repz
test
rol
rcl
push
les
xlat
flds
lret
hlt
add
mov
loopne
cld
pop
pop
add
adc
scas
jge
fmuls
pop
mov
mov
rcll
xchg
push
pop
pop
cli
sarb
bound
outsl
jno
js
or
movsl
int3
aam
xchg
push
je
adc
cmpsb
jmp
xor
mov
rcll
and
out
clc
lods
mov
dec
dec
fisubrl
sbb
push
cmp
push
cmp
mov
sbb
mov
int3
pop
sbbb
jecxz
std
cmp
frstor
mov
jg
jmp
cld
xchg
lock
and
loopne
and
cs
sar
icebp
mov
repnz
pop
mov
sahf
xchg
cltd
enter
fwait
push
scas
lods
and
out
fisttps
repz
jne
mov
add
jl
repnz
sub
and
mov
loop
or
cmpsb
sbb
xchg
cltd
dec
stc
int3
aad
pop
lock
inc
gs
imul
inc
js
inc
js
fidivrl
cmpsl
shl
lret
xor
scas
mov
sbb
and
sub
loope
dec
sbb
fcompl
hlt
mov
insl
ja
mov
cmp
test
jle
ja
pop
das
in
pushf
cmp
adc
jne
loopne
push
push
hlt
jne
dec
sbb
push
mov
mov
dec
test
sbb
hlt
add
hlt
xor
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xchg
ret
mov
lea
jmp
mov
adc
movsb
cli
cltd
add
mov
das
pop
roll
cmp
push
pop
push
or
dec
stos
in
out
xor
pusha
jns
fimuls
mov
pushf
adc
enter
jo
daa
xor
push
out
aaa
cmpb
and
pop
cmp
mov
cmc
xor
sbb
dec
dec
mov
testl
sub
mov
fs
and
sub
mov
push
adc
fmuls
movsl
adc
pop
cltd
aad
dec
push
and
push
or
scas
frstor
lret
data16
ljmp
sbbl
sbb
sti
lock
pop
xor
xor
fdivs
jb
stc
gs
mov
sbb
out
leave
cs
lock
sbb
push
mov
fcoml
mov
arpl
lods
adc
inc
iret
fstpl
cli
arpl
or
push
flds
cvtps2pd
jmp
xorl
aam
pop
imul
out
cmp
mov
subl
cli
cmp
xchg
in
xchg
adc
mov
cmc
push
pop
inc
scas
cmc
mov
mov
stos
adc
hlt
icebp
addr16
sbb
dec
imul
lahf
xchg
and
push
mov
je
and
xlat
aam
repz
and
mov
jnp
jmp
loop
mov
mov
arpl
and
test
dec
jae
roll
ds
shll
in
data16
or
mov
bt
cmp
bt
repnz
pusha
call
push
rep
lea
pop
pushl
mov
push
push
pushf
push
lea
jmp
or
fbld
cmp
mov
out
xorl
and
shlb
adc
pop
xor
loop
cmpsl
xor
jae
jg
and
lahf
imul
stos
xorb
mov
fsubp
xor
out
lret
hlt
push
dec
xchg
jle
adc
adc
je
es
vpmulhuw
test
cmp
cmp
xor
addr16
movsl
lcall
xlat
inc
gs
rolb
fs
jnp
jg
add
call
pushl
clc
jmp
stc
cmp
clc
push
repnz
mov
jmp
stc
pushf
cmp
pusha
movb
lea
ja
call
call
stos
out
loopne
cli
push
mov
stos
ret
and
push
iret
sub
sub
fists
clc
cmp
mov
xor
mov
jne
data16
cmp
das
sub
cmp
add
fcmovbe
dec
aam
loope
test
and
push
jns
test
add
adc
sahf
pop
rorl
iret
out
sahf
xchg
xor
sti
cli
sbb
aas
sahf
movsl
aam
push
pop
push
cmc
pop
aaa
inc
xchg
mov
cmpsl
jmp
cmc
add
pushl
lea
jmp
stos
out
loopne
cli
cmp
cmpsb
mov
and
and
inc
scas
fsubs
and
aas
or
sub
data16
ret
mov
and
cli
imull
adc
mov
addr16
sub
scas
and
sbb
fs
cs
jecxz
or
dec
xorb
jp
jmp
sarl
xchg
ret
sar
out
fdivp
cltd
inc
bnd
ja,pt
add
cwtl
mov
push
test
cwtl
and
mov
xchg
mov
add
loopne
jbe
push
mov
sub
xchg
int
enter
dec
ret
test
movsb
cli
xor
cmp
popf
push
aaa
test
shr
hlt
std
and
hlt
fldt
int3
rorb
adc
xlat
lea
outsb
cld
xchg
js
cmp
insb
outsb
adcb
popa
jo
adc
cltd
mov
or
and
push
inc
cld
cld
dec
sbb
jge
xor
inc
mov
scas
jns
in
jge
jmp
jmp
lea
xorb
mov
lcall
subb
sub
fstps
out
pop
lahf
xchg
dec
loop
mov
dec
xchg
sar
daa
sahf
fisubrs
dec
fidivl
insb
cmp
addr16
aam
out
lret
xor
sbb
and
mov
popa
rorb
dec
mov
lock
sti
sbb
jl
add
xlat
out
gs
jmp
cmp
call
xor
adc
mov
cmp
xchg
fnstsw
adc
push
data16
fdiv
mov
pop
and
bound
mov
icebp
lods
fst
mov
push
int3
out
arpl
add
je
xor
addr16
int
adc
push
sub
das
push
or
xchg
iret
sub
pop
or
jp
sub
push
or
mov
or
ss
or
inc
mov
jne
mov
out
sub
jb
dec
test
dec
fbld
and
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
pop
mov
add
add
add
add
addb
add
xchg
and
add
add
adc
add
cmp
add
push
ss
add
add
sub
xor
aad
sbb
pop
and
add
add
add
and
add
xor
add
add
add
xchg
jl
movsb
cli
add
pop
pop
mov
dec
imul
idivb
xorb
jb
movsl
mov
add
mov
dec
jmp
push
inc
jmp
div
xchg
aas
mov
mov
adc
clc
sahf
xor
lds
cmp
mov
add
cmp
or
addr16
negb
pop
mov
stos
sbb
in
sbb
cmp
cmp
jbe
movsb
jmp
adc
mov
push
inc
mov
in
cli
mov
outsb
lahf
call
mov
mov
mov
mov
cmp
add
push
xchg
or
je
xor
mov
cmpsl
fsubrs
push
mov
aam
or
mov
enter
gs
cwtl
dec
adc
and
mov
loope
aad
aam
aad
shll
inc
mov
xchg
mov
pop
daa
xchg
mov
or
push
pop
pop
adc
mov
ret
add
and
add
inc
inc
js
out
pushf
xlat
and
icebp
lods
jg
out
push
mov
sbb
mov
add
in
cli
pop
sbb
out
mov
out
in
popf
push
rclb
cmp
mov
cmp
xchg
imul
cmc
pop
cmpl
mov
mov
je
test
jg
ret
pushf
mov
inc
xorl
adc
inc
xorb
roll
xchg
scas
pop
in
inc
dec
mov
cmp
cmpsl
cmp
mov
dec
mov
xlat
ds
movl
pop
nop
roll
je
negb
js
sub
xor
stc
shlb
push
pop
xchg
fstpl
mov
lock
mov
push
and
fmul
insl
cwtl
xchg
shrb
in
fstl
rol
popf
jae
xor
cmp
dec
dec
rol
cmp
xor
inc
mov
mov
pop
shl
ja
cmpsl
or
fcoml
test
repz
mov
jmp
mov
incl
bswap
push
not
not
jmp
mov
cli
fs
mov
vpacksswb
fsubrl
add
scas
adc
xchg
lret
adc
mov
pop
cmp
fxtract
push
dec
mov
imul
mov
xlat
int3
or
sub
dec
pop
cltd
in
movsb
jp
dec
mov
dec
cs
cli
movsl
push
xchg
flds
pop
movsl
push
push
movsb
std
push
dec
mov
cwtl
leave
aas
ud1
movl
jns
aad
loope
test
or
sub
jg
repnz
mov
xchg
mov
sub
adc
rcrb
repnz
mov
and
in
sub
jge
and
xor
push
ret
daa
cmp
pop
cs
movsb
stos
or
push
sahf
mov
jbe
dec
aam
fisttpl
mov
cli
test
ret
popf
sahf
nop/reserved
mov
push
push
daa
inc
or
inc
sub
out
push
fistl
in
lods
call
adc
adc
mov
sbb
aam
sti
nop
push
sub
into
clc
pop
inc
xchg
cmp
xchg
mov
out
out
pop
dec
push
mov
in
hlt
push
movl
pop
xchg
fldl
xchg
add
outsl
scas
and
in
out
and
lods
fdivl
shll
mov
sub
in
nop
add
cmp
xchg
xchg
sub
jo
adc
shrb
out
jae
daa
shll
pop
fs
pop
arpl
adc
jns
and
mov
mov
push
mov
xorl
pushf
fdivs
mov
add
mov
cld
inc
pop
test
sti
adc
rorl
stc
sub
lea
push
xorb
lock
hlt
and
dec
pop
cmp
mov
das
roll
cmp
jmp
imul
ret
xor
add
repnz
cwtl
sarl
icebp
pusha
out
cmp
cmpsb
outsb
jns
add
or
mov
icebp
adc
pop
lods
or
pop
xchg
cwtl
cmovp
fnstenv
jns
xor
inc
sub
movsb
cli
cwtl
test
mov
cmp
lahf
cmp
ss
dec
call
leave
pushf
or
or
adcb
and
movsb
filds
mov
aaa
pusha
pop
fs
adc
nop
out
xlat
rolb
jle
repz
jl
rorb
loop
notl
in
aam
xor
adc
js
jne
push
or
add
lds
mov
imul
jmp
inc
jle
jmp
xchg
add
push
addr16
les
test
fnstcw
lock
push
call
test
fucomip
movsb
cli
push
addr16
repnz
lods
aad
pop
push
mov
repz
notl
das
in
sbb
jle
inc
mov
jecxz
mov
xor
into
pop
into
pop
jns,pt
call
xchg
xchg
sti
out
js
sub
stc
repnz
mov
or
addr16
mov
inc
pop
push
xchg
mov
call
daa
dec
sar
sub
sbb
imul
int3
ds
mov
in
add
add
xchg
sub
mov
push
jle
iret
loopne
push
scas
push
stos
jmp
cmp
out
outsl
jbe
adc
xchg
mov
test
xchg
pop
and
out
sbb
nop
imul
pop
hlt
xor
stc
repnz
lock
into
out
scas
mov
outsb
jmp
out
jmp
test
mov
xor
jnp
out
push
or
les
xor
stc
dec
lahf
out
xchg
mov
xor
mov
ja
jbe
add
add
out
aam
movsb
cli
pop
gs
wrmsr
test
cmpsb
mov
cltd
xor
imul
imul
push
xlat
fisttps
mov
and
xor
mov
mov
loopne
adc
mov
cwtl
leave
dec
rorb
addr16
insl
insl
dec
rorb
adc
cltd
or
cmpsl
sub
mov
cmp
mov
and
shr
movsb
cli
pop
je
out
aas
pusha
jno
mov
push
ret
mov
lret
jnp
xchg
pop
sub
jnp
or
xchg
jo
subl
push
aaa
mov
xchg
shrl
mov
xchg
or
imul
cmp
test
outsl
sahf
je
lds
mov
imul
sub
stos
sahf
mov
dec
and
push
daa
lds
dec
sub
movsb
std
push
dec
mov
xor
sbb
cld
icebp
and
dec
mov
xchg
mov
movb
pop
shll
inc
pushf
jmp
sub
in
movsb
cli
shrl
push
lret
in
push
xchg
lock
mov
fcompl
orb
adc
mov
popa
pushf
add
insl
seta
push
or
dec
push
pop
sub
repz
mov
add
xor
push
out
mov
fiadds
cld
push
jle
add
mov
xor
std
add
and
rolb
daa
dec
ret
movsb
cli
push
outsl
sarb
arpl
xchg
cmpsl
mov
std
jae
cmp
decb
hlt
lret
in
push
xchg
sub
push
ret
xor
lahf
fisubl
bound
mov
xor
lea
je
stc
add
test
cmp
cmp
call
push
test
movsb
cli
fldl2e
sub
ljmp
adc
inc
dec
mov
jecxz
rcl
daa
sub
jae
jne
mov
lahf
les
stos
les
leave
outsl
jo
mov
fcmovu
push
dec
lds
bound
and
push
out
mov
std
es
pop
xchg
js
cmp
sbb
or
xchg
and
mov
in
iret
js
mov
std
jmp
into
les
dec
dec
jmp
cld
lret
xor
into
movsb
lods
and
cld
dec
dec
mov
cld
mov
fsubr
push
push
movsb
sbb
or
dec
les
inc
ja
imul
jp
aad
movsb
cli
cmp
es
add
inc
inc
movsb
mov
shrb
push
dec
jmp
mov
call
inc
or
pop
ljmp
test
ja
idiv
adc
aam
mov
in
dec
popf
es
outsl
nop
jle
cld
fisubs
test
clc
add
fisubrs
movsl
int
pop
int3
xor
mov
jbe
xchg
std
data16
pop
mov
fs
es
and
inc
mov
fildll
mov
fs
ja
cmp
sub
sub
shld
neg
clc
add
test
btc
and
lea
mov
and
mov
push
cmc
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
sbb
test
xchg
lea
bt
setle
sbb
mov
ror
or
pushf
mov
pusha
cmp
clc
xchg
inc
sar
push
mov
bt
sub
mov
pushf
jmp
movb
sub
call
lea
je
pusha
mov
mov
movb
lea
jmp
movl
push
rep
bswap
push
lea
pushf
mov
pushf
mov
push
lea
jmp
add
call
xor
out
movsb
cli
fsubr
repnz
jae
cmc
xor
into
das
jno
sub
sahf
mov
pop
jbe
mov
enter
or
stos
sub
mov
out
out
mov
movsl
ss
call
iret
fwait
es
xor
sbb
inc
jnp
call
adc
pop
pop
mov
scas
pop
cmp
movsb
adc
call
xor
mov
pop
pusha
mov
mov
movsb
cli
push
das
nop
cltd
stos
lret
or
xchg
cmp
jnp
sarb
xchg
pushf
add
or
sarb
xor
mov
jp
pop
xchg
in
sub
sbb
xlat
aam
addb
ljmp
movsl
cmpsb
gs
fistl
and
add
and
insb
rorl
dec
dec
scas
ficoms
repz
inc
add
or
out
sub
out
incl
jge
out
movsb
cli
rorb
std
push
xchg
or
sbb
outsb
cmpsl
push
loope
loop
xchg
mov
sbb
xchg
loop
xlat
xor
in
into
mov
outsb
in
push
jge
jns
je
js
pop
mov
pop
adc
xlat
cltd
push
mov
mov
mov
adc
addr16
and
jle
xchg
addr16
jnp
adcl
loope
pop
mov
dec
xor
bound
cli
pusha
cltd
lcall
add
hlt
adc
popf
popa
ret
fcoms
andb
loopne
push
int3
fxch
fdivl
cmp
aas
jbe
cld
ss
xchg
rcrb
or
test
rcll
stos
jg
mov
shlb
dec
jo
jg
in
xchg
icebp
loop
cs
icebp
and
push
inc
pop
mov
jg
std
inc
mov
mov
cmp
cmp
popf
leave
aas
and
movsb
cli
lods
in
dec
pusha
leave
repnz
xchg
cmp
inc
aad
loope
and
push
dec
dec
sbb
adc
xchg
out
xor
imul
adc
or
mov
mull
es
test
push
ret
das
mov
popf
popf
mov
ret
cmp
std
inc
mov
imul
xchg
pop
out
sub
cmp
pusha
mov
movzbw
movsbw
pop
lea
jmp
mov
mulb
pusha
shrl
mov
mov
ljmp
inc
cmp
xchg
dec
xchg
stos
and
pop
mov
mov
mov
mov
repz
pushf
das
sarb
imul
daa
cli
push
dec
ret
or
gs
out
push
or
imul
out
xchg
std
stos
push
das
shl
push
mov
pushf
lret
repnz
mov
sub
rol
imul
sub
push
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
repz
lahf
test
movsb
cli
or
mov
sub
sbb
jns
js
dec
mov
pop
pusha
push
jbe
and
cmp
xchg
sub
xchg
cmpsb
out
sub
push
fnstenv
xchg
add
sbb
loope
add
push
jns
pop
xchg
or
push
jns
lret
sub
movsl
or
mov
icebp
movsb
jp
stc
cmp
aad
icebp
movsb
cli
inc
mov
hlt
sbb
les
movsb
outsl
call
jns
push
daa
sbb
sahf
mov
dec
gs
lret
fisttpl
sbb
cmp
sbb
push
xor
sbb
cmp
pop
push
sub
dec
arpl
jns
mov
sbb
cmpsb
dec
cmp
mov
outsb
dec
sub
sbb
iret
dec
jno
xor
add
dec
movsb
mov
je
movsb
mov
lea
es
stos
and
jg
imul
xchg
jp
movsb
cli
add
sub
or
jo
lods
jo
pop
mov
cli
jo
in
pop
mov
jge
dec
jne
cmpsl
test
inc
fwait
lods
std
cmpsl
adc
xor
sbb
ss
xor
jg
mov
clc
inc
xchg
insb
mov
jmp
dec
xchg
gs
fists
les
loop
adc
movsb
cmp
adc
jmp
or
dec
mov
rclb
mov
sbb
pop
mov
pushf
fstpt
dec
js
cmpsb
movsl
fcoml
sbb
xlat
cltd
adc
xor
hlt
movsb
cli
movsb
int
addps
repnz
mov
push
sub
pop
loop
movsl
cmpsb
loop
dec
lods
jbe
xchg
adc
lret
call
pop
add
pushf
int
aam
ror
inc
iret
gs
leave
scas
notb
or
sub
sahf
cmp
imul
enter
cmpsb
lds
mov
or
lea
dec
xchg
and
ret
jnp
cmpsb
mov
movsb
cli
add
adc
inc
xchg
dec
stos
adc
incl
lcall
xchg
sub
mov
lcall
scas
ficoms
out
ret
fcomi
push
pop
mov
hlt
call
push
cmpb
mov
and
int
add
inc
inc
jge
jmp
push
cmp
push
outsl
insb
cmpsl
xchg
mov
jae
ja
test
dec
cmp
out
pop
sbb
test
jo
bound
outsl
fimull
cmp
push
testl
jmp
dec
push
sub
mov
lods
adc
mov
sub
popf
call
out
sbb
cmc
movsb
cli
lcall
mov
xor
fstpl
lahf
mov
call
and
and
fs
mov
mov
loopne
push
gs
enter
sub
mov
inc
insb
imul
inc
test
push
jno
fisttpll
outsl
jmp
jo
dec
mov
addr16
or
iret
addr16
or
lcall
lret
fidivrl
cmpb
sbb
or
cmp
push
mov
movsb
cli
stc
push
and
sahf
cmpsl
and
ret
add
inc
clc
in
es
inc
movsl
cmp
shr
sub
fdivl
sub
cmpsb
data16
cmp
sub
std
addr16
inc
jnp
sub
addr16
mov
dec
dec
mov
jmp
sbb
sub
push
jbe
lods
inc
cmc
pushf
push
sub
pushf
stc
pushl
popl
pusha
cmp
pushf
call
cmp
cmc
movsb
cli
mov
jge
pop
pusha
mov
pushf
repz
arpl
adc
xor
xor
mov
pushf
mov
add
add
stc
int
ret
jbe
imul
sub
inc
pop
mov
and
lea
aad
shll
push
aad
and
pusha
xchg
lds
ret
add
into
insl
enter
inc
ficoml
scas
cmc
movsb
cli
push
dec
pusha
jns
add
mov
pop
lea
stc
les
stc
les
push
dec
imul
mov
fxtract
pop
iret
out
out
mov
inc
out
repz
xlat
push
pop
pop
lcall
pusha
mov
and
mov
jae
movsb
jp
jo
test
addr16
mulb
mov
lds
gs
ficoms
pop
xlat
push
push
mov
xlat
mov
push
jg
les
loop
sbb
pop
push
call
sbb
sub
add
inc
ret
push
adc
mov
dec
nop
mov
lret
es
outsl
fwait
xor
cmp
jbe
push
int
insl
mov
loopne
mov
fsubrl
stos
inc
movsl
arpl
stc
stc
mov
out
out
movsb
jb
ds
cltd
mov
dec
mov
fdiv
insl
das
test
in
pop
imul
cmp
daa
lea
push
and
repnz
jns
cwtl
push
cli
je
out
mov
out
jmp
cmp
mov
adc
pop
arpl
push
movsb
cli
xchg
xchg
mov
add
cs
sarl
rcrb
aas
dec
dec
lds
testl
int3
je
jl
add
push
add
ficompl
xchg
pop
outsb
imul
nop
repz
mov
mov
xlat
aad
xchg
add
repz
xchg
mov
pop
call
push
adc
jae
mov
jo
scas
out
push
mov
sbb
jbe
hlt
push
jecxz
andb
inc
pop
cltd
cs
mov
adc
sbb
push
mov
mov
adcl
sbb
mov
sbb
das
sbb
shll
fnstcw
shr
in
jp
fidivrl
rorb
inc
mov
cli
les
jge
xchg
xor
jno
fidivs
inc
push
aam
mov
mov
lds
lahf
push
or
xor
loope
pop
mov
sbb
add
movsb
cli
mov
lret
lods
mov
clc
popa
lret
xchg
test
inc
bound
das
cmp
leave
ljmp
sbb
push
loopne
out
enter
outsb
push
pushf
mov
sbb
inc
or
sti
popa
test
scas
lods
out
into
sub
xorl
xchg
inc
sbb
jb
xchg
stos
sbb
jge
push
cli
adc
sub
sub
or
nop
divl
jle
fsubrp
fdivs
cmpl
js
clc
movsb
cli
in
out
and
sub
stos
rcrl
cld
xchg
pushf
add
int3
or
or
out
cmp
jl
jns
xchg
xchg
xchg
das
or
mov
movsb
add
sbb
push
outsb
out
jge
outsl
insl
mov
test
fdivs
ss
addr16
or
data16
cltd
xchg
xchg
sub
sub
adc
xor
int3
shll
mov
mov
sti
aaa
test
sbb
aad
add
jbe
in
sbb
jl
xchg
xor
xor
inc
pushf
jl
scas
and
push
outsl
in
jo
mov
lcall
sub
pop
outsb
in
in
es
shrl
repnz
fcmovbe
movsl
cmpsb
inc
mov
add
sti
jno
ja
xor
test
gs
lret
xchg
add
adc
test
xchg
mov
add
mov
data16
nop
inc
jle
js
cmp
daa
xchg
out
lret
fidivs
mov
sub
test
xchg
stos
jge
mov
aad
ss
cmpl
stos
dec
test
cmc
jae
cmpsb
mov
jmp
adc
jbe
outsb
inc
mov
push
leave
fcmovnu
jg
jg
loope
cmp
iret
push
fwait
cmpb
push
jg
xchg
hlt
push
std
or
dec
cmp
scas
movswl
call
insb
fstl
mov
ret
push
lea
or
xchg
es
adc
incl
add
jmp
ret
jnp
insl
add
fcoml
hlt
repz
mov
ret
int
cmp
cmp
dec
or
inc
cli
jae
es
inc
xchg
or
movsl
sar
pusha
fcomps
fcmove
pushf
std
dec
lods
out
enter
mov
repnz
or
push
inc
adc
sbb
outsb
and
push
mov
je
cmp
jge
jl
mov
int
xor
xor
push
lds
iret
adc
cmc
outsb
cmpsl
ficomps
aad
pop
xchg
mov
mov
sbb
mov
jne
daa
jecxz
and
ret
pop
jo
jnp
loop
xor
filds
jmp
jg
dec
cmp
push
call
dec
xor
pushf
adc
orb
int
out
add
sub
lret
call
leave
lock
inc
inc
mov
rorb
outsl
push
dec
inc
mov
loope
loopne
sub
ja
inc
andb
sbb
lcall
cmpsl
movsb
outsl
or
data16
out
push
int3
sub
adc
adc
out
xor
mov
and
out
push
jns
adc
push
sub
push
xchg
mov
testl
or
fs
push
out
dec
scas
jmp
dec
mov
and
loop
adc
mov
jae
pushf
mov
cmp
mov
stos
loop
clc
adc
sahf
mov
ret
insl
add
pop
mov
pop
xor
cmp
mov
xchg
push
addr16
in
test
dec
push
xchg
icebp
sbb
mov
jge
jmp
cmpsl
into
pushf
outsl
shlb
nop
scas
and
outsl
jo
xchg
xchg
sub
movsb
mov
sub
jmp
mov
fcmovnbe
dec
mov
mov
call
adc
and
or
addr16
loope
mov
and
xlat
pop
mov
lret
inc
movb
xor
outsb
in
mov
inc
cmpsl
imul
and
out
jmp
test
or
cmp
loopne
loope
sub
fmuls
or
sahf
lods
cmp
sbb
mov
fldcw
leave
int
xor
cmpsb
pop
data16
shll
je
rcll
cmc
push
dec
lds
stos
or
push
gs
cmp
xor
cmc
lret
add
xor
test
xchg
loopne
sbb
movsb
pop
cwtl
xchg
pusha
clc
filds
jns
ret
jbe
fistl
lods
lods
jl,pn
dec
dec
dec
pop
mov
cs
pushl
stc
fwait
lds
dec
push
pop
pop
popl
adc
mov
das
add
rorb
imul
xchg
inc
subb
xchg
xchg
mov
aas
stos
stos
stos
out
loope
inc
jge
notl
out
fstps
add
xor
push
pop
mov
in
rcrb
imul
sbb
call
ljmp
xchg
aas
lcall
in
gs
cmpsb
cmp
mov
xor
outsl
xchg
daa
scas
mov
stos
inc
hlt
cli
int
repz
mov
add
or
ficoms
dec
les
xchg
cld
add
pop
repnz
sbb
enter
enter
in
outsl
sub
and
mov
sbb
scas
xlat
add
aas
cmp
sti
jmp
dec
mov
jecxz
and
dec
mov
add
shlb
sbb
xchg
subl
mov
push
rcrl
pusha
xchg
mov
int
xor
das
nop
sti
xor
loope
cmp
adc
rolb
pop
and
outsl
stos
mov
sub
in
jno
cmp
jne
push
dec
jo
aad
lret
stc
adc
xchg
push
xor
jno
cltd
test
rcl
idiv
xchg
aaa
cld
std
dec
dec
dec
xchg
leave
xor
cwtl
dec
int
sbb
ret
dec
aam
mov
push
in
jb
mov
or
mov
cmp
add
rolb
es
xchg
jbe
sub
pop
mov
adc
cmp
popf
stos
and
and
sbb
outsl
clc
pop
das
popf
and
jle
jo
mov
jnp
xor
push
loope
loope
mov
xchg
rolb
push
xchg
mov
mov
pop
mov
popf
pop
subl
jl
hlt
xor
js
mov
sub
or
jo
or
push
cs
cltd
insb
in
push
xchg
pop
inc
xchg
mov
ret
pop
fcmovb
cltd
or
or
stos
ret
fdiv
imul
xor
jmp
das
in
movsb
sbb
add
push
mov
xchg
xor
push
iret
lcall
insb
lahf
ss
aad
cmp
mov
aas
inc
jno
daa
jno
mov
popf
xchg
bound
jp
outsl
cmc
mov
xlat
dec
subb
pop
jbe
or
mov
mov
adc
mov
jne
sbb
jnp
aad
mov
lahf
push
push
or
push
adc
rorl
inc
jl
add
daa
cli
imul
adc
jg
dec
jo
pop
ja
aaa
lods
inc
xchg
sbb
ret
xchg
scas
pop
xchg
inc
test
dec
dec
ret
pop
fwait
inc
and
pop
jl
push
cli
lock
loop
gs
jecxz
push
mov
movsb
inc
popl
pop
cmp
in
mov
call
dec
cmp
cmp
lahf
stos
aas
imul
cmp
inc
add
push
push
or
mov
xor
in
stos
pop
subl
jl
and
and
test
lock
shlb
lahf
adc
lret
popa
data16
insb
fisttpll
and
push
dec
jne
fadds
mov
imul
jns
lock
mov
ds
cwtl
arpl
jne
mov
xchg
cmp
add
andl
cli
xchg
mov
mov
mov
movsl
leave
pushf
aad
vcvtps2pd
xor
push
and
and
mov
add
jno
push
vmaskmovdqu
fincstp
imul
pop
xor
loopne
inc
mov
es
and
sahf
imul
movsl
mov
cmp
je
aad
int3
cmc
fbstp
test
or
push
sbb
mov
xchg
jmp
hlt
sbb
jle
in
mov
gs
repnz
mov
pop
ds
stos
cmpb
pop
out
mov
pusha
push
add
std
outsl
ds
dec
inc
inc
fsubrp
test
mov
sub
repz
fdivr
jno
scas
int
adc
and
jge
stos
lds
in
vcvtps2pd
js
sub
cmp
cmp
outsl
lods
inc
jns
addr16
adc
ret
popa
inc
mov
mov
dec
mov
lcall
int
push
fst
enter
clc
outsl
stos
call
iret
call
cmp
mov
push
cmp
dec
mov
cmp
jns
pushf
xchg
xchg
xor
dec
mov
dec
hlt
pop
cmp
fimuls
fstpl
aad
xor
xchg
xchg
mov
cld
mov
and
out
mov
ret
sahf
push
fptan
out
icebp
mov
clc
lret
int3
aaa
cmp
xlat
cltd
rorb
inc
popa
xlat
xchg
cmp
mov
loopne
mov
sbb
movzbl
jmp
pop
xor
mov
fsubl
push
and
je
xorb
test
dec
jne
jmp
adc
sub
push
push
push
mov
jl
cmovs
xor
push
orb
mov
inc
jl
lds
ret
rorl
sub
iret
call
inc
jge
cmp
adc
inc
inc
adc
pop
pop
pop
cwtl
lds
sub
sub
mov
popf
mov
jecxz
pop
test
les
cltd
mov
mov
sar
cli
xchg
popf
cwtl
or
xor
roll
das
rol
rclb
into
xor
add
test
das
fstpl
lods
pusha
test
add
daa
jmp
dec
push
daa
test
fstpl
test
dec
addr16
scas
sbb
mov
jmp
insl
loop
cmp
xor
xchg
repz
adc
add
sub
adc
jmp
in
push
cmpsl
outsb
loopne
into
pop
jge
pusha
sbb
test
fcoml
mov
and
dec
push
ljmp
dec
stos
test
dec
cli
sti
cld
sti
sbb
sub
repnz
mov
addr16
enter
popa
ret
push
fcomps
mov
xchg
xchg
add
sub
mov
adc
pop
mov
mov
adc
cmc
xor
add
test
mov
cs
jle
push
mov
and
test
fisubrs
sbb
loop
jnp
mov
mov
imul
popa
sbb
dec
ret
cmp
sub
inc
jge
adc
pop
stos
pop
xor
insl
outsl
or
jb
xor
jmp
icebp
sub
sub
sub
push
sub
mov
scas
dec
pop
or
dec
add
das
leave
mov
jns
sbb
pop
add
mov
xchg
insl
vmovdqu
std
cmp
jne
ret
adc
xchg
push
outsl
cmpsb
sbb
xchg
pusha
cld
inc
mov
hlt
aam
mov
fsubrl
pop
leave
jle
gs
xchg
pop
lcall
pop
add
jmp
daa
shlb
mov
xchg
in
add
or
or
out
mov
scas
stos
rcl
insl
jecxz
rcrb
mov
daa
xchg
mov
ds
dec
mov
push
dec
jb
or
push
and
loopne
push
push
shlb
loop
cs
push
insl
inc
mov
pushf
pop
aas
fsubrl
sub
mov
xor
push
mov
jae
sbb
xchg
std
mov
call
leave
loop
mov
shll
aad
pop
ljmp
sbb
pop
js
test
lods
hlt
loop
arpl
xchg
xchg
mov
shrb
outsb
test
dec
sbb
ljmp
pop
dec
psrad
add
cwtl
add
fcmovnbe
outsl
gs
push
hlt
sete
scas
push
cmp
das
cmpsb
pop
sbb
mov
imul
out
dec
push
ja
push
dec
cmp
or
nop
push
jp
popf
std
sbb
jae
xor
jle
jl
outsb
pop
add
outsl
out
jbe
test
mov
out
sub
xor
xor
sub
cli
jo
adc
dec
push
es
clc
push
int
adc
adc
cmp
sbb
sbb
iret
out
ss
enter
mov
sub
lock
jecxz
or
sbb
xor
pop
rorb
fidivs
dec
dec
dec
out
icebp
mov
mov
xchg
push
adc
iret
jp
jl
mov
js
pop
daa
jmp
out
sbb
shll
push
outsb
shlb
push
test
outsl
jo
in
ds
in
mov
lock
lahf
pushf
ret
mov
xor
sub
leave
enter
adc
int3
cmp
or
push
add
jbe
adc
adc
dec
in
in
in
sub
inc
mov
sbb
push
fsts
in
push
jle
loop
pushf
or
inc
in
jle
fsubrs
mov
and
push
or
cmp
sbb
dec
daa
xchg
leave
mov
les
ljmp
cli
psrlw
add
push
mov
scas
mov
js
sub
dec
add
add
loopne
test
outsl
inc
pop
push
js
fsubl
jno
cmpsl
mov
add
cltd
in
data16
ret
add
inc
mov
inc
addr16
mov
stos
sbb
in
add
and
je
fcoms
dec
in
lahf
adc
push
mov
or
rolb
push
mov
push
add
push
jae
cmc
push
or
outsl
stc
cmp
lret
lods
pop
js
js
rcll
push
push
push
in
aas
fbstp
data16
test
dec
arpl
rcpps
jnp
cmp
xchg
cmp
aas
popa
lcall
cmp
pop
lods
ds
call
and
jbe
inc
cmp
sbb
lods
xor
in
dec
mov
imul
cli
pop
xchg
push
pop
add
les
sarl
fcmovbe
dec
bound
aam
ljmp
and
pop
mov
push
nop
fnsave
fildll
pusha
lret
add
pop
xchg
loopne
mov
mov
fmuls
xchg
xor
js
and
xchg
test
nop
test
sub
pop
gs
or
loope
pop
ds
fldz
pop
pop
movl
dec
xchg
int3
lret
ljmp
bnd
dec
inc
cmp
notb
ja
int
rorl
inc
fistpl
push
lcall
loop
cmp
rcll
mov
mov
out
cmpsl
sbb
or
and
and
xor
or
mov
lret
clc
jecxz
in
add
mov
mov
and
mov
dec
std
scas
push
jge
imul
push
mov
cmp
cmp
mov
inc
inc
jle
add
cmp
sbb
inc
cmp
std
jbe
fs
adc
ljmp
mov
sbb
mov
mov
fcoml
std
sbb
sahf
out
mov
lds
pop
aad
lret
pop
lret
inc
cmpl
movsl
shll
add
adc
xor
xchg
xor
push
or
xor
jl
pop
adc
mov
inc
sbb
push
mov
rolb
test
fsubrl
pop
iret
test
pop
mov
nop
leave
add
pop
dec
ficoml
cmc
rcl
mov
scas
and
call
pop
out
fists
push
repz
lock
pop
loope
xchg
clc
push
int
out
iret
stos
jecxz
ret
cmp
aad
dec
pop
ret
cli
insb
pop
sbb
jle
pop
push
xor
mov
div
mov
push
ret
fcompl
ror
rclb
jg
aas
jp
shrl
aas
add
inc
and
lea
pop
js
add
adc
sub
iret
icebp
xchg
adc
clc
outsb
dec
mov
mov
pop
and
pop
lcall
lods
ja
and
rorl
sbb
lahf
icebp
adc
clc
push
shlb
ror
add
addr16
insl
iret
inc
inc
inc
pop
lcall
out
push
sbb
scas
daa
lds
jp
push
lcall
jno
test
and
jp
dec
push
push
or
or
mov
out
sbb
push
jg
insl
movsb
sbb
mov
jb
int
xchg
call
xchg
aad
movsb
mov
xchg
insb
mov
dec
mov
out
mov
jmp
addb
fists
and
sbb
dec
addr16
fnstcw
imul
sub
pop
and
dec
das
test
dec
mov
fstpl
aam
inc
inc
mov
jmp
push
sbb
cmp
fdiv
push
mov
inc
sbbb
popa
lcall
rcl
dec
loope
push
orb
cmc
cmpl
push
push
sbb
dec
jmp
fisubrs
adc
cmp
mov
out
cld
push
test
jle
data16
clc
imul
cs
dec
aam
dec
lods
inc
push
cltd
pop
je
fs
mov
or
not
lock
call
push
push
xchg
pop
xchg
movb
or
add
in
insl
int
fptan
or
mov
sub
inc
inc
pop
inc
ret
js
push
mov
fimull
fdivl
jle
hlt
sbb
inc
mov
pop
cld
iret
or
and
add
inc
and
sbb
rcpps
outsl
and
sti
jecxz
mov
iret
into
or
and
cmp
adc
cmp
cmovbe
movsb
mov
stc
dec
shlb
cmpl
adc
inc
mov
cmp
daa
adcl
lret
pop
cmpsl
sub
sbb
and
sbb
sbbl
sub
adc
aad
addr16
mov
and
es
add
push
enter
and
jne
out
jns
cmc
push
or
mov
or
xchg
push
jne
or
xchg
sbb
push
sbb
pop
je
inc
mov
or
loopne
inc
pop
xor
adc
and
inc
sti
je
dec
sbb
ficoms
js
adc
mov
jns
sti
and
jbe
data16
mov
and
stos
test
rcll
nop
out
sub
mov
push
or
test
jo
and
pop
xbegin
jo
sub
mov
cmp
outsl
and
add
dec
inc
xadd
fdivrp
cmp
dec
std
rcl
ljmp
jge
mov
ss
push
jno
aam
inc
jge
adc
xchg
add
xchg
bound
cltd
cli
gs
and
test
ficoml
push
adc
jbe
out
jl
insb
and
fimuls
or
testl
mov
sbb
cmc
and
lods
lods
scas
lods
and
xchg
ror
lock
fstl
jnp
push
xchg
lret
enter
cmp
nop
mov
cli
rcl
rcl
icebp
addr16
les
fmul
cmc
imull
bound
lods
fistpl
dec
fadds
add
pop
xor
jl
mov
sti
jno
sub
bound
ror
out
fs
insb
test
popa
rorb
cs
mov
es
sub
iret
mov
mov
sub
mov
int3
add
fcomps
data16
loop
mov
push
adc
out
mov
enter
inc
mov
pop
pop
shll
ror
cmc
imull
test
fwait
mov
inc
cld
mov
pop
xchg
int3
add
add
call
cld
lahf
scas
ljmp
add
mov
and
out
lock
out
ja
ljmp
popf
shl
cmp
cs
cs
ret
lea
ret
and
add
ret
adc
sbb
stos
pushl
mov
or
gs
ljmp
lods
fildl
stos
sub
sar
push
push
mov
mov
cmp
push
cwtl
mov
loope
into
dec
cmp
in
or
inc
rcrb
aam
mov
push
adc
dec
testl
mov
out
das
mov
test
je
addr16
sub
pop
mov
jnp
enter
jecxz
pop
mov
push
out
shll
push
pop
push
sbb
mov
mov
cmpsl
sti
lods
scas
fdivrp
cmp
out
inc
pop
mov
cld
lahf
xchg
in
repz
lea
fcmovu
dec
rcrl
pop
pop
or
outsl
mov
mov
iret
mov
cmp
rorb
mov
pop
outsb
cwtl
mov
jg
shrb
gs
mov
mov
mov
fisttpl
imul
out
add
xlat
int
enter
ret
outsb
sarb
jno
popf
push
leave
loop
es
pop
mov
std
xchg
loopne
inc
mov
mov
adc
mov
inc
int3
lahf
push
xchg
pop
sbb
cld
sub
lahf
outsl
pop
rorl
add
pop
mov
xchg
xchg
call
add
fwait
test
out
aaa
popf
jae
or
sbb
jae
pop
leave
add
dec
sar
clc
shll
popf
push
in
fstl
mov
sub
bound
mov
bt
cmp
jmp
rol
test
call
and
add
mov
xlat
call
cmp
adc
and
mov
enter
leave
aas
or
in
cwtl
xor
aam
bound
mov
xchg
or
adc
dec
pop
push
xchg
in
dec
mov
sti
test
mov
pop
lea
inc
sbb
lret
push
jb
sub
lods
and
xchg
jb
rcrb
adc
enter
stos
idivb
dec
push
or
inc
loope
decl
fwait
movl
mov
and
bswap
mov
movzbw
not
mov
pop
mov
movw
mov
mov
movzbw
movsbw
jno
pop
pusha
pusha
pushf
movb
pushl
ret
or
out
aaa
nop
mov
scas
daa
xor
lret
rcl
outsl
out
xchg
imull
inc
popa
pushf
mov
push
sahf
dec
jl
xlat
lret
pusha
mov
jecxz
aaa
fsubrl
es
push
push
or
stos
dec
push
nop
lret
scas
movsl
into
es
lret
sub
mov
pop
cld
and
mov
test
cmpsl
pushf
or
cli
inc
jo
es
cmp
xchg
jne,pt
je
sub
adc
xchg
mov
mov
fsqrt
sbb
iret
rcl
cmc
stos
rorl
or
cwtl
mov
popa
xlat
ds
sub
rcll
push
xchg
mov
mov
in
arpl
or
adc
mov
subl
push
popf
mov
aaa
xchg
int
cmp
xchg
mov
nop
fisttpl
or
push
pmaxub
movsl
cli
mov
and
pop
xchg
mov
add
sbb
icebp
jg
lcall
ds
jae
nop
or
ja
add
pop
push
lret
aas
and
out
fs
fdiv
adc
lcall
psignw
pop
mov
cli
jmp
inc
pop
xlat
aam
cmpsl
dec
pop
lret
ret
ds
test
and
fisttpll
mov
fnstenv
xchg
fstl
jb
clc
arpl
jbe
out
push
jne
pop
aam
adc
sar
adc
lret
mov
ror
idiv
xchg
mov
das
outsb
in
shrl
in
push
pop
lcall
scas
lods
out
adcb
or
loopne
adc
dec
outsl
stos
idivb
mov
cmp
jo
ret
aas
xchg
movsl
add
mov
sbb
inc
das
rorb
fs
adc
out
aaa
mov
adc
sub
ret
in
push
push
push
and
lods
xor
pop
pop
cltd
jne
call
dec
sub
cmp
pushf
outsb
jae
fistps
or
mov
in
sub
sti
pusha
jne
cs
clc
and
fs
and
and
sub
data16
out
dec
fnstenv
push
xbegin
xor
imul
mov
jg
dec
les
sub
cmc
pop
icebp
mov
pushl
movl
mov
lea
jmp
call
divb
push
push
movsl
cli
sahf
cmpsl
clc
add
in
and
sub
mov
dec
fbld
cmp
idivb
mov
repz
sub
xor
xor
inc
lret
imul
push
mov
mov
push
aam
dec
jbe
sti
sti
or
fnstsw
scas
fisubrs
push
and
inc
xchg
aad
jp
push
or
pushf
movb
pushl
ret
push
push
xor
xor
fs
insb
add
jmp
xor
call
aaa
popl
pushl
pushf
cmp
movb
mov
lea
ja
not
bt
ror
shr
sub
shr
add
setb
adc
mov
cmc
push
rcl
mov
test
test
bt
repnz
pusha
call
lods
pusha
jmp
mov
cli
dec
fwait
hlt
xor
xorb
and
cld
loop
sub
loop
jge
jmp
or
mov
or
fdivrl
jae
push
mov
mov
hlt
aad
fsts
xor
fbstp
push
or
test
loope
xchg
test
or
mov
pop
outsl
cmp
movsb
stos
shl
and
lods
fdivl
outsl
mov
stc
adc
and
loop
insb
movb
mov
pushf
movb
lea
jmp
not
pushf
mov
jmp
cmp
cmc
sub
push
jmp
sub
and
mov
clc
jbe
bt
push
sub
pushl
pushl
popl
pushf
bt
cmc
pusha
cmp
pushl
movb
call
jmp
repz
movsl
cli
jp
aam
cs
test
ljmp
js
dec
repnz
jmp
push
cmpsb
jg
and
mov
cmp
adc
and
sub
lcall
int
or
xchg
out
pop
mov
jecxz
out
mov
push
push
pop
mov
mov
pop
mov
cmp
jbe
add
std
jae
pop
movsl
cli
mov
test
shrb
movsb
rcl
insb
out
sarb
jno
fs
push
xor
imul
push
test
adc
inc
popf
adc
test
mov
inc
aaa
jae
jg
addr16
xchg
sbb
cmc
and
test
and
xor
shlb
xchg
int3
lret
and
fs
sbb
sub
mov
jmp
sar
sbb
cmp
into
add
mov
push
push
nop
cmpsl
mov
loope
lret
cltd
adc
cmp
fiadds
popa
xchg
mov
and
ds
xchg
repnz
push
pop
mov
nop
mov
jecxz
jo
pop
mov
mov
mov
das
and
dec
push
cli
or
pop
pop
ja
adc
ret
adc
out
push
fiadds
mov
adc
data16
cmp
ja
xchg
cwtl
xor
pop
jg
sbb
out
adc
adc
rcrl
sbbb
lods
xchg
sub
and
leave
dec
jg
jb
xor
or
test
or
pop
divb
jae
inc
mov
dec
pop
xor
mov
add
jo
fisubs
sarl
cmpb
out
incl
and
loop
in
jnp
call
dec
mov
pusha
stc
cmp
cmpb
pusha
pushl
jmp
test
add
movsl
cli
jp
cld
push
sahf
mov
add
scas
dec
popa
stos
jne
shrl
in
push
clc
lret
inc
imull
fs
aam
movsb
stc
int3
cmc
push
inc
pop
shlb
inc
shrl
and
sbb
test
loop
xchg
sarb
pop
pop
into
sbb
arpl
cmpsl
movsb
sbb
dec
negb
pusha
push
xchg
xor
bound
or
adc
cmpsl
test
jge
or
repnz
adc
inc
inc
mov
jl
mov
mov
faddl
fsts
adcb
fcoml
ret
inc
jmp
xchg
or
sbb
icebp
cmp
orb
lods
outsl
call
mov
fcoms
mov
scas
xchg
mov
cmp
lods
imul
enter
cmpsl
adc
icebp
stos
mov
mov
mov
xchg
in
arpl
dec
dec
sbb
and
ljmp
arpl
xchg
fnstenv
dec
mov
addr16
jecxz
sti
cld
arpl
fldcw
mov
shl
loopne
push
and
iret
dec
test
xchg
fsubs
xchg
dec
out
pop
sbb
xchg
rorl
sbb
mov
shlb
cs
mov
xchg
xor
ret
daa
pop
leave
cmp
lret
rcrl
push
pop
add
incb
or
or
aas
adc
aas
jg
xchg
jl
mov
nop
nop
js
pop
xchg
stos
movsb
sbb
sub
sub
daa
push
xchg
out
arpl
sbb
nop
fldenv
cmp
into
xor
cmp
or
sub
hlt
lods
jmp
mov
cli
mov
ret
in
xchg
outsl
dec
out
ljmp
das
push
outsb
dec
out
inc
push
sub
xchg
in
pop
js
sbb
add
cmp
addr16
mov
xchg
mov
inc
dec
sbb
and
addr16
repz
jno
pop
jle
mov
cmp
pop
lcall
add
sub
inc
push
popa
bound
mov
pand
idivb
push
outsl
stos
push
mov
in
mull
mov
sbb
xor
mov
mov
adc
push
mov
popa
rolb
lea
scas
add
insb
fnstsw
sub
fidivrs
add
pushf
mov
sub
inc
add
fxch
pop
sahf
adc
and
dec
jmp
cmpb
mov
pop
push
rcl
outsb
jge
lret
add
les
inc
inc
movsl
push
pop
push
xchg
sbb
dec
mov
fistl
cmp
sti
pushf
push
and
fildll
hlt
push
test
adc
pop
mov
das
into
jae
push
cmovp
jae
sub
int3
sub
lock
pop
mov
fldt
pop
xchg
fcomip
int
pop
xchg
dec
pusha
pushl
lea
jae
pushf
movb
lea
jmp
jmp
pushf
movb
call
popa
popf
sbbb
push
aas
mov
sub
cmp
cmp
stc
les
jmp
fidivs
mov
xchg
push
lcall
push
out
dec
pop
dec
mov
or
call
mov
hlt
push
daa
and
loopne
add
and
jecxz
and
pop
subb
icebp
sbb
aad
xchg
push
push
mov
mov
and
int3
or
sbb
xlat
adc
and
lea
stc
adc
push
mov
test
mov
push
xorb
pusha
ss
cwtl
mov
pop
aam
inc
push
mov
aaa
stc
and
xchg
sbb
andl
gs
iret
or
jge
add
add
dec
add
push
adc
mov
xor
xchg
stos
lahf
sbb
fmuls
dec
push
mov
inc
pop
rclb
jge
add
mov
inc
mov
data16
sbb
shl
pop
pop
cmpsl
loopne
sbb
pop
int
cmc
shlb
push
dec
cmp
into
cmp
xchg
pop
mov
xor
int3
xor
and
test
inc
pop
cltd
movsb
xchg
add
mov
xor
inc
mov
ret
sar
sbb
nop
inc
rclb
pushf
imul
cmpsb
sbb
into
mov
aas
mov
jno
adc
mov
fdivrl
fs
push
in
lds
add
mov
xor
cmp
xchg
rcl
push
push
cltd
mov
adc
adcb
ret
dec
imul
movsbl
pop
pusha
pusha
mov
pushl
ret
add
push
movsl
cli
jecxz
dec
push
scas
and
subb
ja
adc
push
pop
mov
sub
mov
lahf
xor
xchg
pop
push
idivl
fldcw
mov
out
mov
push
dec
loopne
sbb
clc
std
dec
ljmp
js
fwait
xchg
mov
dec
mov
push
xor
lret
mov
lret
adc
inc
jp
pusha
xchg
dec
mov
push
call
mov
mov
in
push
movsl
cli
push
push
add
dec
cmpsl
push
dec
mov
bound
fstpt
cld
xor
mov
imulb
stc
push
sbb
fs
stc
xor
lock
loopne
jne
sub
cmpsb
lods
jnp
mov
pop
clc
into
pop
xor
mov
mov
pusha
bound
xor
pushf
pop
xlat
loopne
pop
ficomps
xor
hlt
pop
les
pop
xor
mov
jg
pop
jle
scas
mov
jg
addr16
jp
fcomp
push
test
pop
movsl
jp
mov
pop
movsl
cli
aad
das
pusha
popa
adc
pop
xchg
mov
jg
xor
mov
jg
stc
bound
incl
dec
xor
add
cmp
sbb
mov
dec
and
cmpsb
mov
test
mov
push
push
push
repz
ljmp
add
cmc
cmp
mov
push
xchg
xchg
dec
push
pop
pop
jmp
fstpt
and
inc
stos
loop
adcb
add
movsl
jp
adc
int3
mov
movsl
cli
sbb
sbb
jb
ret
mull
sub
and
sbb
lcall
arpl
jg
cmpsl
adc
repnz
ljmp
fistpl
sbb
popf
dec
popa
iret
in
pushf
jmp
lret
arpl
std
shlb
lcall
lret
jne
inc
sub
pop
push
push
or
and
mov
lods
mov
mov
fcmove
clc
addr16
in
cmpsb
and
sub
cli
mull
and
sahf
lcall
fisubl
pop
mov
mov
xor
data16
loope
jae
mov
mov
aad
arpl
loop
mov
sbb
push
pop
icebp
pop
je
add
dec
popa
arpl
testl
jb
inc
or
xchg
lret
je
lcall
mov
cmp
adc
or
pop
nop
int3
inc
dec
sub
test
sbb
dec
sub
mov
ret
mov
push
and
add
into
int
aam
jecxz
jnp
push
and
and
inc
pop
cmpsb
cmp
xchg
or
adc
jbe
outsb
bound
inc
scas
pop
stc
mov
xchg
int3
xchg
jmp
out
out
js
cmp
cmp
xchg
xor
cmp
mov
mov
cmc
push
and
ljmp
mov
mov
mov
pop
push
test
dec
pop
mov
stos
aam
pop
out
xchg
pop
in
and
dec
rcrb
arpl
fcomp
mov
add
scas
and
mov
ror
or
imul
popa
insb
push
popl
loopne
call
stos
and
ljmp
sbb
es
scas
lds
movsl
push
push
subb
xchg
fwait
aam
dec
sub
xchg
cmp
pop
insb
fwait
loop
xor
movsl
cld
add
push
and
add
dec
pop
stos
and
and
mov
xor
adc
nop
cltd
enter
icebp
les
or
cmp
ja
jmp
mov
push
jne
in
int
inc
stos
mov
pop
xchg
xor
dec
xchg
pop
push
jae
jp
pop
push
popl
cmc
bt
bt
cmp
call
pop
shll
aas
jo
sbb
lods
outsl
js
stos
stos
sbb
sbbb
roll
movsl
jnp
pop
es
mov
fiaddl
xor
nop
pop
pop
jae
sbb
sub
gs
adc
and
fcompl
fidivrl
fmull
dec
inc
cmpb
popf
dec
mov
xchg
jg
mov
sbb
adc
aam
call
inc
jno
xchg
inc
mov
xchg
mov
in
lret
out
and
insb
mov
cs
mov
aaa
sub
lds
sti
jno
and
cmp
iret
loopne
pop
xchg
mov
xchg
cmp
hlt
mov
pop
enter
repz
lahf
mov
imul
add
sbb
mov
push
push
ljmp
fsubp
inc
jns
ret
xor
js
outsb
test
sub
ljmp
mov
jmp
lret
in
add
pop
jmp
sub
xchg
xchg
int
pop
lcall
adc
enter
idivl
xor
push
xchg
lret
mov
mov
sti
je
jl
pop
pcmpeqd
repz
xchg
cs
popa
popa
xor
int
add
loope
mov
cmp
push
lahf
pop
ret
in
adc
or
mov
and
fs
jmp
call
pusha
xor
lea
movzbw
jmp
stos
push
mov
pushf
pushl
lea
jmp
add
and
cli
ret
int3
inc
push
sbb
loope
adc
push
pop
mov
pushf
xlat
mov
mov
ds
inc
dec
push
mov
pop
mov
dec
sbb
movsl
push
inc
mov
bnd
xor
add
inc
add
mov
dec
adc
pop
and
dec
add
xchg
xlat
adc
adc
cmp
shr
mov
mov
xlat
ds
mov
cli
jno
idivl
jge
dec
jecxz
add
movsl
cli
mov
cs
call
lds
aas
push
rcr
cmp
sbbl
mov
cmp
mov
xorl
jns
adc
pop
inc
sub
mov
scas
bound
jb
pop
adc
dec
dec
ret
stos
enter
add
inc
mov
stos
lahf
xor
sahf
xchg
or
mov
cli
pop
and
ja
in
ljmp
ljmp
push
jne
sar
sbb
inc
jbe
hlt
add
dec
push
hlt
adc
lock
insl
fs
xor
cs
insb
add
cli
mov
cmp
jp
or
mov
aad
inc
addr16
jno
int
mov
dec
mov
inc
iret
mov
xchg
fcompl
jg
dec
arpl
jecxz
fiaddl
xor
mov
xchg
or
lock
test
jo
stc
push
fidivl
xor
or
sbb
fstl
add
into
call
sbb
clc
mov
add
jmp
cmp
daa
movsl
cli
xchg
xlat
adc
jp
movsb
adc
bound
jnp
pop
test
mov
jmp
push
push
and
jecxz
cmovo
or
jns
dec
jne
bsr
push
adc
mov
les
bound
or
add
mov
pushf
xor
fcom
inc
sarb
mov
out
cmp
filds
inc
xchg
leave
sbb
inc
xchg
pop
xor
lahf
lock
dec
pop
arpl
dec
mov
xchg
int3
inc
lea
fwait
inc
inc
movsb
repz
xchg
sub
inc
mov
sbb
dec
dec
pop
mov
xor
jp
leave
add
xchg
aad
enter
aad
push
push
adc
icebp
pop
into
jne
fimull
push
mov
dec
xchg
or
insl
cld
icebp
ljmp
loope
bound
andl
jmp
push
add
adc
loop
push
dec
ljmp
lock
xor
pushf
fstpl
sbb
sub
adc
inc
imul
pusha
xlat
inc
jge
ret
adc
repz
subb
pushl
sub
pushf
cmp
clc
clc
repnz
pusha
lea
jne
and
xchg
mov
btc
bsf
sub
shrd
and
mov
pusha
sub
pusha
test
pushl
popl
jmp
je
iret
daa
movsl
cli
push
cwtl
loope
pop
xchg
lods
mov
pusha
mov
jo
loope
in
mov
cmp
jo
sbb
push
push
enter
or
cmpl
and
scas
rcr
mov
and
xor
push
out
insl
dec
imul
mov
jbe
or
and
add
or
add
inc
sub
lcall
shl
inc
fs
scas
xlat
notb
inc
adc
ss
xchg
cmp
push
xor
fs
hlt
lods
mov
aad
shlb
or
mov
leave
movb
jae
add
jae
or
or
test
lcall
lods
call
movaps
arpl
cmp
daa
inc
pop
jno
leave
call
and
test
mov
cmp
int
les
sub
rcr
or
aas
inc
push
lret
inc
and
in
jb
add
or
jp
aas
cmp
shll
dec
icebp
mov
sbb
test
mov
jecxz
in
imul
cmp
sahf
sbb
sbb
clc
pop
mov
pop
mov
test
push
ret
ret
xchg
fimuls
mov
mov
mov
pusha
pushl
mov
pushf
pushf
pushf
lea
jmp
jmp
mov
or
movsl
cli
xchg
lods
push
ja
or
add
cmpsw
add
push
push
ljmp
jnp
in
inc
jbe
addr16
mov
cmc
xchg
jnp
jecxz
push
stos
add
lret
sahf
in
pop
mov
loope
sbb
mov
icebp
or
out
lock
jo
ret
out
jle
in
fcmovnbe
sub
int
jmp
mov
adc
in
hlt
arpl
outsb
stos
push
rorb
and
in
loopnew
bound
dec
dec
in
outsl
adc
loop
mov
mov
push
push
sbb
sbbb
jg
xor
int
sbb
or
cmp
sbb
es
cmp
cmp
dec
jnp
cwtl
sarl
jno
sbb
mov
enter
xchg
sub
aaa
sub
pop
mov
bound
divl
pop
jl
sub
ror
dec
loopne
in
shrb
movsl
cli
pop
arpl
cmp
out
cmpl
inc
cmpl
das
js
mov
inc
mov
inc
sub
and
jb
daa
sbb
aas
outsl
mov
loop
mov
scas
and
cld
inc
mov
or
rcrb
dec
pusha
xorl
or
add
imul
and
cmc
and
sbb
aaa
or
push
inc
dec
cmp
fsubl
dec
push
push
push
popf
mov
cmp
add
add
jo
lea
jne
not
rcl
rcr
ror
mov
cmc
call
jl
popf
sub
sbb
mov
and
xchg
mov
jns
flds
cmpsb
daa
jge
jp
mov
adc
mov
call
loop
fnsave
iret
jne
pop
sub
cmp
addb
stos
push
mov
sbb
nop
sub
sbb
shll
or
adc
daa
ljmp
pusha
mov
cmp
xor
sub
adc
push
push
mov
push
sti
inc
insl
int3
sub
mov
push
dec
les
jb
clc
cmp
gs
cmp
clc
cmc
cmc
sub
cld
pushw
popfw
movb
mov
mov
jmp
push
pushf
lea
jae
jmp
ss
sub
mov
ja
stc
or
sbb
jg
in
jecxz,pn
popa
sub
cmp
cmp
rorb
ds
xchg
out
pusha
rorl
movsl
and
pop
sub
cmp
xchg
or
jecxz
dec
add
and
mov
push
sub
sub
in
jg
or
mov
fcmovnbe
dec
outsl
xchg
xchg
or
fimuls
mov
into
and
push
lret
into
mov
insb
stos
or
test
cmp
fdiv
lock
fildll
mov
in
ds
js
inc
cmc
ss
les
ja
push
jl
mov
cs
addr16
jp
lods
mov
ja
imull
dec
fxtract
and
xchg
std
and
push
ret
xor
out
je
jno
mov
cld
jo
mov
mov
xor
sub
jp
xlat
ja,pn
cwtl
sub
cli
test
pop
call
ret
outsl
fsubl
scas
jo
mov
das
inc
popa
push
add
inc
inc
movsw
daa
jne
imul
lret
es
push
cs
mov
js
mov
adc
lcall
dec
sbb
or
aaa
popf
popf
cmp
andb
pop
lds
fxch
js
out
cmp
int3
sub
cmp
and
jns
jae
sub
out
cmpsl
pushf
adc
xor
ja
jge
or
shlb
aad
enter
dec
in
shrb
push
inc
mov
je
add
je
add
fs
jb
test
clc
cmc
test
cmp
jmp
xor
decb
pop
xchg
sti
cmp
negb
cwtl
test
and
dec
pop
js
nop
jne
and
mov
adc
lret
cmpsl
loope
imull
dec
xchg
insl
jbe
mov
call
sbb
mull
movsb
adc
push
std
stos
data16
int
xchg
out
test
cwtl
mov
sbb
fwait
stc
imul
stc
ljmp
out
in
pop
jne
arpl
popf
add
rorl
xchg
es
mov
or
movsl
cli
pop
xchg
sub
out
cmovo
fldenv
sub
dec
push
fcoms
int
movsb
cli
aam
or
sbb
jbe
mov
sbb
addl
mov
xchg
or
into
rolb
inc
cmc
pusha
and
in
pop
pop
xchg
xchg
mov
pushf
jb
in
and
lods
aam
push
xchg
fcoms
pop
jecxz
stc
xchg
mov
movw
bt
sub
pushl
cmc
call
jmp
jbe
shrl
movsl
cli
pop
and
gs
and
push
jnp
int
sub
repz
out
aam
xlat
dec
mov
jbe
add
stos
dec
inc
xor
cmpsb
add
mov
mov
and
lock
pop
xor
or
jnp
stos
cmpsl
insl
xor
lret
inc
pop
outsb
in
scas
clc
jg
dec
ret
ret
scas
clc
jg
outsl
sbbb
push
adc
clc
addr16
cmp
aad
sbb
sbb
push
repz
push
pushl
rep
pushl
not
movzbw
mov
push
movb
movb
lea
jmp
das
movsl
mov
movsl
cli
cli
imul
or
clc
outsb
aas
xchg
repnz
decl
jae
xchg
inc
inc
mov
adc
jg
cmp
test
or
mov
cmc
div
lret
cmp
test
xor
sahf
iret
into
inc
inc
cmp
inc
mov
lods
and
ret
outsl
into
in
cmpsb
arpl
add
mov
xchg
shr
shrd
not
push
bt
mov
bts
not
sub
add
lea
jne
movzbl
bswap
bswap
mov
pusha
pusha
jmp
sub
push
shr
pushl
pushl
movb
lea
je
pusha
adc
pusha
mov
pushf
mov
lea
jmp
jmp
pushl
lea
jae
movsbl
mov
movzbw
btr
mov
mov
sub
bswap
movsbw
mov
stc
rcl
lea
mov
call
xchg
loope
movsl
cli
pop
mov
fidivrs
inc
pop
xchg
or
fdivrs
jle
test
imul
cmpsb
mov
or
lock
ror
inc
mov
pushf
and
push
pop
loop
adcb
std
es
pop
or
outsb
sahf
mov
iret
push
jge
rcll
iret
jge
cmp
iret
ja
dec
lahf
call
ret
sub
pop
push
jne
ss
or
test
movsb
or
lods
stc
neg
push
inc
mov
not
push
call
jmp
call
pop
jge
xor
xor
jb
mov
out
div
rcrl
iret
sub
call
rorb
es
mov
jl
cmp
add
loopne
stos
mov
leave
pop
rolb
sbb
jno
inc
adcl
out
adc
push
and
jno
sub
mov
mov
bound
push
adc
xor
xor
scas
xbegin
test
mov
iret
cwtl
shlb
pushf
fadds
cmpsl
mov
cwtl
in
cld
sub
popa
fcompl
and
mov
pop
les
cmp
xor
add
and
cmpb
sarl
jns
mov
jne
xchg
mov
ja
adc
mov
fidivrs
mov
lret
pusha
add
push
push
dec
outsl
je
data16
arpl
inc
add
xchg
xor
clc
sbb
and
sub
ror
add
cmc
btc
rcl
bts
mov
shr
jp
clc
sbb
mov
bt
cmp
push
repnz
pushl
pushf
lea
jne
lahf
bswap
movsbw
movb
cwtl
pushf
movzbw
mov
cwtl
lea
jmp
jmp
jle
fnstenv
movsl
cli
popa
push
pushf
in
pop
ja
stc
jb
pushf
in
out
sbb
fdivs
mov
ret
cmp
sti
popf
xlat
inc
mov
push
lock
mov
sbb
je
aaa
sub
push
jnp
sub
in
cli
cmp
cmp
dec
cs
or
mov
inc
add
shll
loop
mov
xor
jne
mov
fidivl
jo
cmc
cmc
mov
xor
jmp
mov
dec
data16
aam
mov
cmp
mov
lret
std
or
lods
pushf
pushf
cmc
neg
push
pusha
inc
pushf
push
pushl
not
pushf
lea
jle
pushf
inc
pushf
rol
jmp
pop
push
aaa
xor
cli
mov
pop
movsl
out
push
pop
mov
sbb
addb
and
enter
push
and
lods
dec
mov
jae
aaa
mov
scas
test
inc
pop
fdivrl
arpl
push
pop
pop
into
and
mov
push
mov
mov
mov
mov
in
movsw
mov
add
and
add
gs
leave
inc
clc
mov
cli
bound
or
and
pop
int
into
int
sub
flds
sarb
aad
cmp
mov
fwait
aad
cmp
rcll
lods
in
inc
mov
call
cltd
ja
cli
stc
pop
out
jp
pop
push
hlt
test
out
pushl
repz
mov
jns
lcall
jne
mov
dec
mov
icebp
xchg
ja
mov
fwait
xor
cli
in
outsb
lahf
loopne
bound
mov
shrl
sbb
sbb
scas
sbb
inc
stos
sub
adc
rolb
pop
inc
push
push
push
ret
mov
inc
fidivs
dec
outsl
decb
jge
mov
mov
adc
mov
lret
push
jne
inc
call
push
sub
cmp
xchg
out
jp
pop
shr
iret
dec
fscale
pushl
or
cmpsl
xchg
jp,pn
cmp
jno
inc
sbb
adc
xor
xchg
fistl
or
fistl
mov
es
dec
fimull
push
outsl
cmpsb
mov
xor
xor
test
push
stc
bsr
push
cmc
mov
shr
stc
sub
btr
cwtl
daa
push
call
pusha
push
not
pushf
movw
jmp
or
movsl
cli
lahf
fdivr
sub
test
mov
add
call
push
imul
repnz
inc
divb
loop
int
std
inc
xor
imul
in
ret
pop
push
loope
pop
pop
ret
repz
aas
sar
cli
repz
mov
sbb
push
xchg
and
outsl
in
aam
and
pop
pop
popf
imul
loop
iret
loopne
push
movsl
loop
add
push
bound
mov
popl
mov
gs
jmp
mov
cli
dec
outsb
xchg
and
xor
data16
sbb
mov
jmp
push
aas
hlt
sub
std
imul
xor
add
mov
cmp
add
pop
lahf
int3
cmc
inc
lret
test
lea
xor
lock
cmpl
ret
std
ss
push
in
xchg
js
shrl
push
or
mov
loopne
mov
pop
cmc
jg,pn
inc
je
cmp
in
push
sub
pushf
outsl
test
push
mov
rorb
movsb
call
not
pushf
movb
call
leave
add
movsl
cli
jno
repz
outsb
cmpsl
mov
sub
xor
ljmp
cmp
or
cmp
ss
nop
cltd
mov
pop
push
pop
pop
push
sbb
jmp
movsb
test
mov
cs
push
flds
sti
jno
ret
cltd
add
lcall
rclb
mov
mov
enter
push
lock
jle
ljmp
dec
push
sub
inc
cmp
push
jbe
and
orb
sub
in
cmp
pushf
lea
jne
not
lahf
movb
jmp
jl
pushf
aaa
movsl
cli
and
scas
out
popa
sbb
in
cs
enter
fs
std
dec
mov
push
xor
xor
xor
nop
stos
or
mov
enter
cmp
adc
inc
and
sahf
fwait
adc
add
or
ja
iret
ret
xor
and
push
mov
cwtl
cmp
adc
data16
push
jne
rcl
stc
or
int
pop
movsl
or
pop
repnz
inc
outsb
popa
bound
imul
sub
cmp
and
mov
addb
xor
dec
lcall
pop
mov
jo
adc
int3
leave
aas
pop
cmp
xor
pushf
cs
inc
add
xor
adc
mov
adc
rclb
xor
shlb
cwtl
test
imulb
dec
mov
mov
mov
adc
mov
mov
call
jmp
pushf
lahf
push
lea
jmp
test
add
cmp
call
std
xor
xor
xor
int3
cmp
add
add
add
add
add
cmp
add
add
add
add
add
xor
fdivrl
and
adc
add
add
add
add
and
add
cmp
add
add
add
add
add
dec
and
in
cmp
add
add
add
add
add
cmp
add
add
add
add
add
popa
sbb
cld
cmp
add
add
add
add
add
cmp
add
add
add
add
add
sbb
or
and
inc
xor
mov
xor
adc
and
dec
xor
lods
stc
xor
sbb
and
push
xor
mov
cmp
add
xor
mov
and
sub
and
gs
xor
xor
xor
xor
and
add
add
cli
lcall
sbb
dec
dec
test
out
incb
cltd
push
fwait
mov
push
pusha
sub
hlt
jbe
fwait
movsb
sbb
mov
dec
dec
dec
mov
or
in
mov
push
pop
lcall
xchg
jp
daa
ss
push
rorl
out
xor
std
dec
dec
rorl
lcall
mov
pop
sbb
mov
adc
in
lock
jae
sub
push
int
pusha
mov
mov
pusha
mov
rcrb
sub
jp
sbb
inc
mov
mov
push
xchg
fcoms
je
pushf
lea
jmp
mov
lods
cmp
out
add
add
ds
loopne
jecxz
xchg
push
sub
outsb
mov
xchg
adc
dec
xor
fmuls
dec
pop
fldenv
fistpl
pop
add
rorb
repnz
cmpb
scas
xchg
push
nop
sub
sub
ss
movsl
inc
bound
inc
in
xor
out
das
sub
fs
fs
lahf
rcrl
loopne
mov
mov
push
jb
lods
sbb
push
pop
pop
addr16
xor
mov
sub
repnz
sbb
xchg
dec
out
sub
cmp
cli
xchg
ljmp
mov
clc
xchg
pop
xchg
xor
ds
inc
xchg
push
inc
addr16
out
je
jnp
std
dec
jg
push
pop
mov
dec
xlat
mov
jne
cmpsb
hlt
jmp
sahf
fildll
popf
sub
pop
loop
xchg
stos
hlt
mov
add
aad
mov
adc
mov
shll
fldl2e
xor
jmp
mov
imull
jle
pop
lea
shrl
jle
xorb
push
dec
les
inc
imul
loop
inc
xor
cmpsl
out
cmpsb
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pushf
fdivrs
jbe
shlb
stos
sbb
inc
lahf
shr
mov
shr
nop
sub
into
iret
fsubrs
bound
xchg
lods
out
mov
jno
lret
aam
inc
fs
movsl
imul
cmp
leave
popa
pop
pop
jne
xlat
out
sbb
jno
sbb
pop
negl
ja
into
jno
sbb
ret
int3
mov
jb
out
in
outsl
fcmove
fsubs
adc
pop
mov
out
bound
and
or
out
jns
push
cltd
ret
mov
test
ja,pn
push
inc
mov
test
stc
iret
rcl
xor
add
fcmovnu
jns
cwtl
out
inc
adc
cli
arpl
add
pop
imul
jecxz
mull
mov
lar
mov
or
lock
insl
push
sbb
adc
sbb
out
fidivrl
add
int
sti
scas
or
das
xor
or
xchg
inc
cmp
mov
std
cld
jb
scas
das
cmp
sub
sub
inc
je
ljmp
mov
outsb
push
dec
dec
dec
dec
cs
insb
add
outsl
push
cmp
inc
mov
aam
push
das
cwtl
shrl
adc
mov
scas
jae
cwtl
jns
fidivl
aaa
add
fs
in
cmp
imul
repz
adc
test
in
dec
inc
clc
lret
iret
out
les
aas
mov
cmp
cmp
in
mov
mov
xor
lds
sbb
out
inc
pop
pop
push
mov
jg
jbe
push
jne
cmpsl
jecxz
cmp
mov
xchg
notl
rolb
xor
cli
lds
lahf
enter
ficoml
xchg
mov
mov
jl
dec
in
xchg
gs
mov
lods
rcrl
mov
sub
pop
mov
push
clc
cmp
push
push
movhps
push
pop
jae
push
mov
imulb
sub
xor
js
sub
les
push
enter
mov
mov
lods
xchg
movsl
cli
sbb
insb
insl
into
aas
push
ret
add
stc
outsl
rorb
or
xlat
loopne
es
movl
arpl
mov
cli
cwtl
outsb
ja
imul
dec
xchg
mov
out
add
int3
push
nop
xchg
fpatan
jnp
aas
dec
jns
lcall
dec
jle
lock
mov
cmp
adcb
pop
sahf
cmpsl
out
jns
outsl
outsl
mov
cmp
mov
cmp
rclb
cmp
aaa
inc
movsl
cld
arpl
shrb
cs
adc
adc
cld
sbb
xchg
shlb
cmpsb
mov
movsl
notl
cli
lds
shlb
xor
pushf
add
fsubrp
je
ret
movsl
push
aaa
mov
xor
ds
jp
fldcw
mul
fsubrs
imul
ret
mov
pop
mov
push
outsl
sub
bound
cwtl
rorl
aaa
pop
push
mov
jmp
push
adc
aaa
jb
mov
inc
xor
jl
test
push
subb
sub
mov
xlat
sar
adc
jecxz
mov
aas
scas
int
mov
xlat
outsl
fsubrl
cmp
pusha
jmp
bsr
btr
call
mov
lea
jne
stc
ror
shld
xor
rcl
shr
aad
mov
push
add
sub
adc
mov
stc
test
jmp
les
in
movsl
cli
push
into
das
test
sbb
sub
cmp
add
sub
out
pop
addl
adc
repz
add
push
nop
les
bnd
sahf
out
sub
mov
jg
test
sbb
mov
ret
cmp
fsts
iret
test
movsb
xchg
cmc
push
leave
stc
dec
enter
mov
jno
mov
dec
mov
mov
mov
ljmp
das
xchg
enter
and
jbe
add
setle
movsbw
push
mov
jmp
imul
push
aaa
add
xor
sub
rolb
adc
add
or
arpl
sbb
imull
stc
push
sbb
mov
mov
xor
xor
inc
fistpll
jmp
cmpsl
test
stos
in
lea
pop
adc
cs
popf
sub
or
sbb
adc
rolb
gs
mov
add
and
and
lret
dec
xchg
add
mov
cmp
inc
movsl
cli
xchg
popf
push
outsl
jo
repnz
and
jno
sub
hlt
shl
cmp
test
lock
arpl
xchg
jecxz
xchg
mov
mov
les
lret
sbb
repnz
dec
mov
jle
xor
leave
add
fs
adc
jno
dec
sub
xchg
cs
mov
dec
mov
push
jle
test
push
mov
fs
adc
out
mov
mov
enter
cli
sbb
ret
pop
mov
inc
jns
sub
fcom
lret
xchg
into
pop
nop
int3
cmp
dec
dec
ds
popf
push
jae
xor
sub
outsl
in
sahf
popa
lds
or
fadds
xor
fistpll
insl
and
cwtl
ficomps
dec
stc
adc
mov
add
adc
aam
repz
push
push
stos
or
add
cmp
popa
pop
lock
ret
xchg
fsubrp
test
out
add
cmc
mov
not
bswap
or
adc
sub
shl
sbb
sbb
add
mov
stc
sub
jmp
jmp
imulb
movsl
cli
enter
pushf
mov
jg
loope
inc
mov
daa
rcrl
push
push
or
jno
pop
iret
or
xor
fbstp
adc
cs
add
and
cmp
enter
mov
sbb
int
loopne
test
cmp
inc
mov
int
cmp
movsl
sbb
pop
into
xor
sbb
push
fdivrl
xchg
mov
inc
jle
or
jp
and
hlt
mov
je
dec
xchg
or
inc
movsl
cli
ja
mov
pop
cwtl
sarl
dec
out
out
dec
aad
dec
out
jne
xchg
mov
sub
adc
sbb
jp,pn
outsb
add
push
xchg
dec
mov
mov
fs
sti
loope
lea
pusha
xor
sub
add
push
pop
sub
push
test
adc
or
cmp
adc
call
in
shlb
mov
test
mov
cmpb
fildl
and
fmul
ss
testb
testb
repnz
and
mov
push
mov
outsl
outsl
in
inc
movsl
cli
inc
stos
fcmovnu
add
lcall
sub
and
pop
adc
lahf
lret
out
fsts
mov
mov
lahf
mov
lret
xchg
in
arpl
je
bound
aaa
sub
fcoms
hlt
cs
sub
or
dec
cmc
push
outsl
insb
loop
add
mov
leave
add
inc
jae
lock
shll
xchg
xchg
push
xchg
adc
xchg
xor
test
les
sbbb
push
cli
jmp
cli
jns
shrl
mov
in
mov
loop
loope
dec
push
adc
push
hlt
mov
dec
pop
aad
jo
rcrl
sahf
mov
add
into
dec
inc
cmpsl
movsb
loopne
jb
push
in
loope
mov
in
push
add
cmp
cmpsl
xchg
and
ja
sarb
xor
cmp
adc
stc
cli
ss
fs
shr
push
movsb
fildl
sbb
mov
or
fs
pop
jge
mov
dec
sbb
movzww
clc
cmc
xor
call
mov
test
push
mov
cmp
sub
jmp
test
jmp
jmp
mov
sub
clc
pushl
popf
not
mov
cltd
mov
movzbw
lea
jl
movzbl
lea
pop
mov
lea
pop
movsbw
setae
movsbl
movzbw
pop
pushf
pusha
pushl
ret
call
push
pushf
pushl
pushl
popl
pushf
lea
jmp
add
pusha
pusha
push
mov
movb
pushl
lea
jmp
mov
mov
mov
mov
movl
lea
jmp
test
or
call
pushl
popf
pushf
pusha
pushl
lea
jmp
mov
pusha
jmp
call
call
call
call
bswap
bswap
pusha
mov
mov
jmp
pushl
popl
pushl
movb
push
lea
jmp
call
pushf
popl
jmp
cmp
cmc
add
jmp
pushf
sub
pusha
pushf
lea
jmp
mov
pusha
pushf
popl
call
pusha
lea
repz
popl
cmp
sar
bsf
bswap
xchg
stc
ror
sub
xchg
ror
mov
xor
setb
xchg
sub
bsr
inc
pushl
popl
stc
movl
and
setns
mov
ror
btr
call
lea
jne
call
pushf
jmp
cmp
mov
call
jmp
pushf
lea
jo
mov
call
stc
bt
cwtl
call
push
jmp
pusha
pusha
pushf
inc
jmp
bt
setnp
mov
dec
xor
bswap
seta
movsbw
setg
not
bswap
pusha
pushf
inc
inc
stc
ror
sub
sbb
ror
xor
rol
shl
cmc
pusha
mov
jmp
bt
cmc
mov
clc
inc
mov
cmp
push
call
dec
mov
mov
and
shl
not
setge
mov
bt
pushf
sub
clc
call
mov
pushl
movb
pushf
push
lea
jmp
movb
mov
pusha
pushl
lea
jmp
bt
mov
rol
jmp
neg
call
pushl
mov
pushf
pushl
ret
mov
mov
movb
push
mov
mov
pushf
jmp
shld
mov
dec
mov
stc
stc
pushf
mov
add
lea
jo
mov
pushf
pusha
lea
jmp
mov
mov
mov
lea
jmp
pushl
popl
pushf
pushf
pushf
lea
jmp
push
mov
movb
mov
lea
jmp
pushf
pushf
lea
jne
decl
push
lea
jne
push
mov
pusha
pushf
movb
lea
jmp
call
btc
adc
mov
pusha
jmp
jmp
push
jmp
mov
push
pushf
popl
call
movw
mov
pushf
jmp
cmp
mov
bt
clc
pusha
call
aaa
xadd
sbb
jmp
mov
pushf
mov
call
test
not
je
pusha
movb
sub
clc
xor
jmp
not
setge
mov
lea
mov
pusha
lea
cpuid
cmc
test
cmp
sub
cmc
push
cmpl
pushf
pushf
jmp
bswap
bt
shl
mov
ror
add
push
movzbl
ror
bt
lea
inc
lea
movsbw
bsr
bsf
cmp
sub
bsf
adc
add
mov
shld
adc
mov
shld
shl
xor
add
cmp
test
bswap
mov
bsf
jmp
clc
mov
xor
pushf
sub
stc
pushf
stc
mov
jmp
repz
popl
jmp
mov
pusha
mov
call
pusha
call
push
xor
jmp
jmp
not
call
notl
shl
call
neg
rcr
movsbw
mov
cmp
add
pushf
pushf
push
pusha
lea
jmp
mov
aaa
movsbw
pusha
neg
mov
dec
clc
aas
mov
call
jmp
pushf
xchg
call
lea
pusha
call
mov
repz
popl
push
pushf
call
push
mov
push
mov
mov
mov
lea
jmp
call
mov
jmp
mov
jmp
pushl
popl
pushf
movl
lea
jmp
mov
mov
pushf
repz
popl
call
push
mov
push
call
pusha
call
jmp
xor
push
jmp
pushl
pushf
mov
pushf
push
pushf
lea
jmp
lea
js
push
push
jmp
pushf
popl
pushf
pushl
popl
pushl
movw
pusha
pushf
lea
jmp
not
call
add
bt
shrd
jmp
not
bt
movw
cmc
not
jmp
pushl
popl
pushf
pushf
lea
jmp
push
jmp
pushl
call
repz
popl
jmp
pushl
popl
pushf
lea
jmp
clc
sub
movb
cmp
add
pushf
pushf
jmp
pushf
push
mov
push
pusha
pushf
mov
lea
jmp
test
jmp
bt
jmp
stc
sub
mov
sbb
mov
and
jmp
jmp
repz
popl
mov
push
pushl
movb
mov
mov
pushf
mov
mov
mov
call
sub
pushf
lea
ja
jne
call
mov
movw
pushl
lea
jmp
push
mov
movw
call
pusha
not
mov
jmp
call
neg
movzbl
pusha
clc
stc
xor
movw
push
pushl
inc
test
stc
stc
neg
jmp
sub
clc
cmc
and
pushf
mov
push
mov
push
mov
pushf
popl
pusha
jmp
inc
bt
jmp
jmp
shr
clc
test
test
cmc
or
jmp
mov
pushf
push
movb
push
lea
jmp
movzbl
jmp
movb
movw
mov
pushf
push
pushf
push
lea
jmp
mov
movw
mov
push
call
pushf
pushf
inc
pushf
bt
call
push
mov
pusha
pushf
pushf
popl
pusha
movl
call
call
pushl
or
btc
push
adc
or
mov
and
shr
xor
bswap
shl
pusha
add
xchg
btc
ror
rol
xchg
bsr
stc
lea
setnp
inc
test
sub
xadd
bsf
mov
bt
xchg
bt
cmc
mov
sar
shld
add
add
mov
add
sub
and
and
add
sub
pushf
sets
neg
shl
test
sub
jg
sub
rcr
mov
bts
sub
rcl
jmp
mov
pushf
pusha
pushl
ret
xchg
call
lea
shr
shld
xor
mov
cmc
cmp
sub
push
pusha
mov
push
movb
lea
jmp
call
jmp
pusha
mov
call
pop
lds
lcall
mov
mov
mov
xor
mov
mov
mov
jo
mov
mov
mov
clc
mov
mov
mov
rorl
cli
mov
mov
mov
xor
mov
inc
iret
mov
jg
mov
int3
rorl
clc
ret
mov
clc
mov
or
mov
rorb
or
lcall
mov
mov
aam
pushl
mov
lcall
mov
movsb
mov
lcall
mov
into
mov
call
jmp
mov
lcall
aam
pushl
mov
clc
ret
mov
mov
mov
call
mov
decl
enter
mov
lcall
mov
mov
ret
clc
ret
mov
jg
mov
mov
mov
fcom
mov
jne
mov
into
mov
ljmp
mov
movsb
mov
dec
mov
fcmovb
mov
pop
ret
mov
jne
mov
xchg
mov
call
rorl
call
cli
mov
pushl
mov
lcall
mov
jne
mov
jg
mov
mov
mov
mov
rorb
outsl
rorl
or
mov
jg
mov
jo
mov
xlat
iret
mov
pusha
mov
mov
mov
mov
pop
enter
mov
incl
mov
cli
mov
jmp
mov
pushl
mov
xchg
mov
out
enter
rorl
pusha
mov
mov
mov
mov
jg
mov
jne
mov
pusha
mov
mov
fcom
mov
pop
lds
lcall
mov
jbe
mov
pop
lds
decl
mov
pop
lds
jmp
mov
jne
mov
fcom
mov
pop
lds
incl
mov
ljmp
mov
mov
mov
mov
mov
mov
pushl
mov
mov
rorl
jmp
mov
repnz
mov
test
enter
mov
into
mov
lcall
mov
jne
mov
cli
mov
decl
mov
test
les
lcall
mov
pop
ret
mov
pop
lds
push
mov
mov
fcom
mov
mov
rorb
pushl
mov
lcall
mov
int3
rorl
ljmp
mov
jmp
mov
mov
xlat
iret
mov
mov
mov
test
aam
jmp
mov
jmp
mov
xlat
iret
mov
inc
mov
lcall
mov
test
aam
jmp
mov
pushl
mov
jg
mov
clc
mov
pusha
mov
mov
into
mov
jmp
enter
mov
jmp
mov
and
mov
clc
ret
mov
test
rorb
or
lcall
mov
inc
iret
mov
jne
mov
jg
mov
test
ret
mov
mov
mov
call
push
mov
mov
inc
mov
ljmp
rorl
mov
rorb
pusha
mov
mov
test
mov
jmp
ret
mov
pop
enter
iret
mov
sub
mov
test
mov
jmp
rorb
mov
aam
mov
mov
lcall
mov
mov
iret
mov
inc
iret
mov
lods
les
pushl
mov
test
rorl
sub
mov
out
enter
rorl
test
pushf
pushf
lea
pushf
call
mov
push
pushf
mov
pusha
call
mov
ror
mov
call
jmp
mov
pushf
pusha
lea
jmp
stc
or
xadd
cmp
mov
clc
mov
push
clc
pushl
stc
sub
stc
shl
movw
mov
movw
pusha
movb
mov
pushf
popl
push
pushl
popl
movb
lea
jmp
mov
push
mov
push
pushf
lea
jmp
stc
mov
and
rcl
cmp
add
pusha
jmp
clc
xor
push
pushf
call
pushf
call
call
call
jmp
push
jmp
mov
mov
mov
pusha
pushf
mov
lea
jmp
xor
stc
sub
pushf
mov
pusha
push
pushf
lea
jmp
jmp
call
jmp
pusha
mov
movw
pusha
call
inc
mov
cmp
call
shld
sub
movzbw
ror
sar
rcl
add
add
btc
btr
neg
shl
sub
bts
bswap
rcl
sub
btr
cmp
ror
add
movzbl
shrd
push
rol
sbb
mov
pushf
test
stc
neg
pusha
add
pushf
jmp
add
cmp
cmp
stc
cmc
shld
pushf
call
mov
add
movw
mov
movb
push
push
push
lea
jmp
pushf
mov
mov
push
mov
pushf
pushl
ret
pushf
clc
sub
clc
pushl
xchg
call
push
mov
mov
lea
jmp
jmp
push
mov
mov
pushf
pusha
lea
jmp
lea
jl
add
pushf
pusha
pusha
push
mov
push
pushf
lea
jmp
call
mov
call
pushf
mov
pushl
pushl
ret
mov
call
pushf
movsbw
movsbw
dec
pop
sub
neg
jmp
cmc
cmc
xor
jmp
lea
jl
mov
pushf
lea
jmp
mov
jmp
push
movw
mov
mov
mov
jmp
push
movb
pusha
pushf
mov
pushf
mov
pushf
push
lea
jmp
sub
pusha
movb
lea
jne
test
pushf
bt
sub
lea
jl
pushf
push
movb
xchg
movb
mov
movl
call
pushf
add
pushf
pushf
pusha
mov
call
pushl
popl
pushf
pushl
pushf
lea
jmp
bt
jmp
mov
mov
push
pushl
ret
jmp
movzbl
pusha
mov
pusha
lea
mov
push
pushf
jmp
xor
jmp
push
cmc
stc
cmp
add
pusha
mov
mov
mov
lea
jmp
clc
sub
mov
clc
cmp
test
pushf
sub
pusha
pusha
jmp
call
call
dec
movzbl
call
mov
pusha
pusha
movb
lea
jmp
and
bt
mov
jge
push
cmc
sub
push
shl
jmp
pushl
popl
pushf
lea
jmp
pushf
pushf
pushf
popl
mov
mov
jmp
mov
call
mov
cmc
stc
pushf
call
push
repz
popl
pushl
pushf
call
bts
add
pushf
call
sbb
das
btr
das
rdtsc
call
jmp
pusha
mov
jmp
mov
movl
mov
push
mov
jmp
jmp
pushl
popl
pushf
pushl
movb
mov
lea
jmp
pushf
not
pusha
movzbl
mov
jmp
jmp
mov
call
daa
daa
bt
mov
ror
rcr
pop
shl
mov
pusha
bt
add
lea
jnp
mov
pushf
pushf
lea
jmp
jmp
sub
pushf
mov
add
jo
stc
add
push
push
lea
jmp
xchg
jmp
jmp
mov
mov
pushl
lea
jmp
not
mov
mov
jmp
stc
cmc
shr
push
movl
call
mov
mov
pushf
mov
pushf
movl
push
jmp
rcr
mov
bt
cmp
add
pusha
pushf
pushf
popl
pusha
jmp
bsf
sbb
adc
mov
and
bswap
mov
call
pushf
push
pushf
pushl
popl
pusha
push
lea
jmp
clc
not
sub
jg
stc
test
xor
clc
call
bt
shr
call
jmp
stc
push
add
xor
inc
sub
btr
not
pushf
cmp
sub
shl
shl
xor
call
pushl
mov
movb
pushl
mov
pushf
pushf
mov
jmp
mov
pushf
push
movb
mov
lea
jmp
movl
mov
push
push
pushf
mov
lea
jmp
pushf
pusha
mov
pushf
jmp
pusha
jmp
mov
push
lea
jmp
repz
popl
jmp
movb
sub
jmp
jmp
lea
pushl
movb
jmp
call
jmp
jmp
jmp
call
call
sub
rcl
pusha
pushf
sub
rol
bsr
sub
dec
movzbl
setns
mov
call
jmp
call
rcl
mov
add
xadd
mov
dec
mov
jmp
mov
pushf
pushf
jmp
pushf
sub
pushf
mov
movb
lea
jmp
pushf
jmp
cmc
add
bt
sub
call
mov
pushf
lea
jmp
pusha
pusha
jmp
pushf
call
cmp
aaa
call
sub
push
push
call
push
movw
push
mov
movb
jmp
call
jmp
pushf
pushf
mov
movw
pusha
push
pushl
ret
add
push
test
add
jmp
mov
movw
movb
pusha
mov
call
push
call
jmp
call
jmp
pushf
mov
mov
jmp
bt
push
cmp
mov
clc
sub
pusha
push
pushl
push
lea
jmp
push
jmp
jmp
call
btc
mov
bt
call
lea
jne
test
test
jmp
movb
lea
jg
pusha
pushf
popl
movb
call
pushf
lea
neg
dec
mov
bt
bts
rol
xor
inc
movzbl
lea
jp
inc
inc
neg
not
not
dec
xor
sar
rcr
shrd
movzbl
cmp
test
call
movsbw
ror
lea
and
bts
mov
test
sub
jmp
mov
mov
pusha
mov
mov
push
mov
jmp
mov
pushf
mov
movb
pushf
lea
jmp
mov
push
setae
jg
push
push
repz
popl
rcr
push
sbb
rcl
shld
push
sar
bts
push
bsf
xadd
neg
shld
push
stc
jmp
mov
movb
movb
call
inc
cmc
bt
add
jmp
pusha
mov
call
movl
jmp
lea
call
pushf
pusha
pusha
sub
cmc
test
xor
jmp
shl
pushf
push
pushf
mov
movl
pushf
call
mov
pushf
mov
pushf
mov
movw
movb
lea
jmp
push
pusha
mov
mov
pushf
pushf
pushf
popl
movb
lea
je
popl
pushf
pusha
pushf
lea
jmp
movb
mov
jmp
jmp
pusha
mov
pushf
mov
jmp
add
pushf
pushf
lea
jmp
inc
jmp
call
mov
pushl
jmp
movzbl
jmp
mov
mov
movb
pushf
lea
jmp
sub
pushf
mov
push
mov
movb
pushf
lea
jmp
jmp
mov
pushl
mov
pushf
movw
jmp
adc
mov
clc
sub
push
stc
add
push
call
mov
push
push
lea
jmp
push
btc
pushl
btr
mov
add
je
bsf
add
bt
not
sar
bswap
rol
or
sub
stc
bsr
btr
bswap
xor
btr
add
setge
seto
inc
cmc
test
bt
mov
pushf
jmp
mov
mov
call
pushl
xchg
call
pushf
mov
pushf
movb
pushf
repz
popl
call
pushf
popl
jmp
jmp
mov
call
cmc
add
pusha
mov
pusha
mov
pushf
mov
lea
jmp
mov
mov
pushf
lea
jmp
mov
mov
mov
jmp
pusha
mov
mov
pushf
push
lea
jmp
mov
mov
call
mov
movb
mov
movb
lea
jmp
mov
stc
bt
call
jmp
mov
movw
call
call
jmp
pushl
jmp
mov
mov
movb
jmp
inc
cmc
pushf
ror
bt
cmc
pushf
xor
call
jmp
mov
pusha
push
jmp
jmp
pushf
pusha
pushf
popl
pushf
pushl
popl
mov
pushf
pushl
lea
jmp
add
pushf
call
pushf
pushf
lea
js
je
call
jmp
xchg
pushl
pushf
movl
pusha
pushf
mov
movb
pushl
pushl
ret
pushf
push
movl
mov
call
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
bt
ja
sub
clc
cmp
jmp
push
pushf
movb
mov
pusha
push
lea
jmp
pusha
mov
jmp
add
pusha
pushf
test
pushf
mov
bt
bt
call
mov
pushf
push
mov
lea
jmp
mov
push
repz
popl
pushf
mov
mov
call
pushl
pushf
mov
jmp
pushf
push
pusha
mov
pusha
mov
pushf
call
mov
pushl
mov
pushl
push
pushl
ret
pusha
clc
call
sub
lea
jge
push
push
xchg
push
push
pusha
movl
push
pushf
jmp
jmp
mov
mov
setbe
call
jmp
movb
mov
movw
pushf
movb
jmp
call
bt
sub
pusha
ror
pushl
neg
jmp
jmp
mov
pushf
pushl
push
mov
mov
lea
jne
push
jmp
pushf
popl
mov
pushl
popl
movb
mov
movb
mov
lea
jmp
jmp
push
pushl
popl
mov
movb
mov
lea
jmp
movw
lea
jl
push
sub
jmp
mov
jmp
pushl
popl
push
push
push
lea
jmp
add
add
cmp
sub
bt
and
push
pushf
popl
pushl
pushl
popl
pusha
lea
jmp
call
mov
ror
not
btr
mov
xadd
lahf
shr
rdtsc
mov
jmp
test
add
jmp
pushl
mov
mov
pushf
mov
push
call
lahf
mov
cmc
mov
jmp
pushl
repz
popl
pushl
call
mov
jmp
mov
pusha
call
dec
dec
neg
rol
ror
bsf
add
and
movzbw
mov
clc
pushf
cmp
cmp
add
pusha
mov
mov
push
pushf
lea
jmp
push
mov
mov
push
mov
movb
mov
lea
jmp
call
pushf
movzbw
setb
mov
jmp
sub
inc
mov
bt
pusha
add
jbe
test
add
pusha
pushf
lea
jg
mov
pusha
mov
mov
push
push
lea
jmp
pushf
call
clc
mov
not
mov
test
xor
mov
bt
test
cmp
jmp
movsbw
inc
test
add
test
bsf
mov
pusha
cmc
push
stc
add
movb
mov
pushf
push
lea
jmp
mov
push
push
lea
jmp
lea
jne
bsr
or
rcl
bts
xorb
lea
mov
pop
push
movb
pusha
lea
jmp
mov
push
jmp
cmp
xchg
mov
sbb
shl
add
shrd
sub
sub
bsf
shr
not
neg
mov
stc
clc
shl
jmp
mov
push
lea
jmp
push
mov
push
pushf
lea
jmp
lea
jmp
mov
mov
pusha
push
movl
call
jmp
push
pushf
pusha
lea
je
bt
clc
sub
call
dec
shr
rcl
movzbl
test
jmp
pusha
cmp
pushf
stc
sub
mov
bt
stc
shl
pusha
mov
pushl
push
mov
pushl
call
jmp
push
push
lea
jne
rol
btc
rol
stc
mov
stc
and
bt
pushf
cmp
pushf
call
stc
add
push
pushf
pusha
lea
jmp
bt
jmp
push
push
decl
pushf
pusha
pushf
call
push
jmp
mov
movb
push
pushl
ret
mov
bt
cmp
sub
jmp
mov
jmp
movzbw
mov
pusha
jmp
xor
call
rcl
shrd
mov
btc
mov
stc
cmp
jmp
call
stc
pusha
cmc
add
test
mov
bt
cmc
or
jmp
jmp
mov
call
cwtl
mov
pushf
pushl
pusha
mov
pushf
movb
pushl
mov
movb
movl
movb
lea
jmp
cmc
sub
jmp
call
lea
je
test
push
sub
call
movb
call
sub
call
mov
jmp
pushl
mov
pushf
pushl
mov
movb
pushf
pushf
lea
jmp
add
push
call
push
pusha
pushl
inc
cmc
clc
jmp
clc
cmc
xchg
movb
pusha
mov
pusha
push
sub
push
call
pushf
pushf
lea
call
call
bt
lea
aas
shl
mov
push
add
call
setg
movsbl
bswap
push
mov
movb
push
push
movw
lea
call
rcl
mov
sub
mov
cmc
pusha
pushf
not
clc
cmc
clc
cmp
not
stc
clc
cmp
mov
and
push
mov
mov
pushf
popl
jmp
call
clc
call
mov
call
not
shrd
aas
bts
mov
adc
mov
cmp
bt
sub
pushf
clc
sub
ja
shr
jmp
sar
aaa
mov
bt
pusha
pusha
xor
cmp
cmp
mov
not
call
jmp
jmp
call
pushf
mov
mov
xchg
movb
movl
call
mov
pushf
call
movl
pushf
mov
mov
lea
jmp
shr
call
pushl
popl
mov
movb
pushl
pushf
lea
jmp
jmp
pusha
pushl
mov
lea
jg
pushf
mov
push
push
pusha
push
lea
jmp
call
rol
not
clc
mov
push
add
pusha
setge
jmp
bts
neg
mov
neg
lea
bts
rcr
mov
jne
add
jg
mov
pushf
lea
jmp
lea
ja
bsf
btc
btr
mov
rcl
movsbl
and
lea
bt
sub
rcr
inc
shld
ror
lea
btr
bsr
bswap
ror
and
btr
sub
not
pusha
mov
not
mov
pusha
pushf
pushf
popl
bswap
movsbw
movzbw
movsbw
mov
bswap
std
pusha
lea
mov
lea
lea
cld
bswap
lea
std
xchg
cld
mov
std
movw
cld
pushf
rep
xadd
movl
xadd
and
mov
rcr
mov
cmp
call
bt
clc
xchg
cmc
clc
stc
pushl
xor
stc
jmp
cmp
mov
pushl
pushf
stc
jmp
mov
pusha
jmp
push
mov
mov
jmp
pusha
mov
pushf
mov
pushf
lea
jg
push
pusha
pushf
pushf
mov
pushf
pushl
repz
popl
pushf
jmp
push
call
shl
pushl
push
mov
jmp
bt
neg
pushf
add
pushf
mov
call
push
push
pusha
mov
mov
mov
push
pushl
ret
pushf
stc
pushf
cmp
pushl
popl
call
lahf
bsf
xor
lea
call
jmp
movsbl
call
mov
call
jmp
cld
pushl
popf
push
movb
mov
lea
jmp
mov
jmp
mov
not
pusha
push
jmp
pushf
mov
pushf
call
pushf
push
mov
pushf
lea
jmp
pusha
mov
pushf
call
inc
pushf
inc
not
neg
rcl
rcr
not
pusha
btc
xor
pop
call
mov
push
pushl
pushf
popl
jmp
pushf
mov
mov
jmp
pushf
mov
call
cbtw
test
bt
cwtl
test
sub
push
mov
call
call
movw
lea
jmp
push
call
aam
inc
btc
and
mov
call
stc
neg
cmc
test
pushf
not
bt
cmp
call
pusha
push
mov
call
pushf
jmp
push
setle
cltd
mov
movzbw
movzbw
mov
pushl
push
push
pusha
divl
pushf
mov
push
mov
mov
push
pushf
pushf
popl
call
add
jns
add
push
clc
cmp
add
push
call
mov
pusha
pushf
lea
jmp
push
pushf
mov
pushf
jmp
mov
movw
mov
mov
lea
jmp
jmp
lea
jne
call
mov
call
test
add
cmp
cmc
jmp
mov
jmp
jmp
repz
popl
pushf
call
push
mov
call
push
dec
bt
sub
jmp
jmp
jmp
call
add
pushf
push
mov
pushl
lea
jmp
mov
pushl
push
movl
mov
lea
jmp
movsbw
movsbw
mov
jmp
pushf
mov
pushf
call
jmp
pushf
push
mov
pushf
mov
pushf
movb
pushf
repz
popl
movb
pushf
jmp
pushf
pusha
mov
jmp
bt
test
add
pushf
pusha
pushl
stc
add
push
pushf
movw
mov
mov
pushl
mov
lea
jmp
pusha
mov
jmp
call
pushf
popl
pushf
push
pushl
popl
pushf
movl
movl
mov
lea
jmp
jmp
