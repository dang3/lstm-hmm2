pop
fcmovnu
jle
data16
insl
add
outsl
push
icebp
mov
sub
dec
btr
mov
icebp
lods
shl
lds
push
loope
pusha
ss
inc
out
pop
cmp
cld
pop
or
push
hlt
loope
lds
cwtl
push
pop
or
adc
aaa
loopne
adcl
imul
jno
fnstsw
cmpsb
xorb
push
in
aaa
int
idivl
scas
ret
dec
sub
mov
ja
icebp
jae
adc
adc
push
pop
push
clc
mov
test
rorb
jmp
iret
stc
adc
popf
subb
sbb
lods
push
repz
test
mov
mov
pop
cmp
iret
add
xchg
jl
push
test
adc
xor
pop
mov
gs
loop
clc
or
mov
and
stos
pop
push
push
lods
and
in
jnp
movw
lea
je
setne
bsr
bswap
mov
or
neg
inc
setl
add
not
and
mov
test
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
shr
adc
movzbw
mov
pushf
pusha
xor
add
push
jmp
add
mov
loop
gs
mov
push
lods
mov
pop
rolb
sbb
push
mov
jmp
and
dec
mov
fldcw
mov
inc
jle
test
cmc
hlt
out
lret
inc
sti
jb
je
mov
and
testl
loope
xchg
xor
in
adc
jne
push
test
add
pop
scas
dec
in
call
xchg
aam
shr
add
in
add
rcr
test
xor
pusha
mov
bt
stc
call
bt
or
push
lea
je
cmp
push
cmp
pusha
lea
jne
pushf
inc
mov
jmp
lea
jae
pushf
pushf
stc
add
pushf
pusha
jmp
pushfw
popw
push
cmc
pusha
mov
bt
cmc
jmp
pusha
lea
jne
rcl
aam
pushf
xor
clc
bsr
jmp
pusha
cmpb
movb
pusha
pushl
mov
lea
jne
rcl
mov
sar
dec
mov
pusha
pusha
cmc
stc
add
test
movzwl
add
btr
bts
mov
bt
cmc
bt
add
bt
mov
cmp
test
push
lea
jne
pusha
lea
je
cmc
add
call
inc
lcall
in
int
cli
lods
test
push
push
pop
roll
fcmovbe
cmp
lock
jno
nop
push
jl
pusha
and
in
dec
insb
lock
cmpl
inc
jp
pop
insb
xor
outsb
sbb
fistl
push
test
std
sub
das
xchg
sbb
add
mov
adc
adc
int3
lret
mov
mov
xchg
fdivrl
aam
inc
sbb
jne
dec
aam
or
movsl
movsb
addr16
in
sbb
orb
inc
dec
stos
mov
sti
movsl
jp
iret
lahf
lret
fcompl
pop
jae
xchg
inc
inc
arpl
and
cmp
jecxz
jns
and
bound
dec
jecxz
mov
push
cmp
lret
out
out
in
loop
push
bound
insl
testb
sahf
popf
js
pop
lods
das
ret
dec
adcb
test
movsb
les
aad
adc
aas
jne
outsb
xchg
sbbb
mov
mov
lods
lcall
jb
xchg
push
test
dec
xor
and
sarl
or
std
pop
mov
rolb
lret
jmp
call
pushf
lea
jne
sbb
movsbw
mov
stc
pusha
cmp
pusha
pushf
mov
lea
ja
bswap
movzbw
pushf
mov
bswap
bswap
mov
call
cmp
mov
test
shl
call
pusha
pusha
lea
jne
bswap
lahf
movzbw
movzbw
mov
push
pusha
pusha
lea
jmp
call
bt
clc
call
pusha
movb
lea
je
call
pushf
movb
mov
pushf
pusha
movw
movl
pushl
ret
pusha
mov
movl
jmp
pusha
mov
pusha
setle
jmp
pusha
pushl
lea
jne
jmp
call
bt
or
jmp
pusha
push
movb
lea
jne
movzbw
mov
lahf
movb
pushf
pop
pushf
mov
bswap
movzbw
pusha
lea
push
movl
pushf
mov
pusha
pushf
push
movw
pushl
ret
movb
pushl
popl
mov
movb
mov
mov
pushl
ret
mov
imul
sub
rorb
in
jg
dec
insl
push
out
arpl
das
pop
stos
popl
mov
rcrb
mov
inc
jecxz
jne
ljmp
lret
cmp
hlt
fisttpll
jle
inc
mov
push
imul
dec
dec
pop
rolb
mov
stos
call
enter
dec
into
into
enter
mov
sub
xor
pop
out
sub
cmp
jno
int
jecxz
cmc
mov
xor
mov
adc
in
jae
inc
and
pushf
push
dec
neg
mov
call
push
call
lea
ja
clc
imul
call
pushf
mov
pushf
lea
jmp
movb
not
mov
pushf
pushf
mov
lea
jmp
pushf
shr
mov
lea
je
pushf
adc
pusha
movb
pushf
lea
jmp
cmp
jmp
stc
cmp
cmp
call
lea
je
bsf
add
bswap
neg
sub
mov
shr
bswap
sbb
and
pusha
mov
rcr
add
setl
add
shld
add
add
sbb
dec
sar
shr
mov
cmc
bt
test
jmp
add
rcl
bsr
stc
mov
bt
test
jnp
push
add
call
call
cmpb
call
push
test
call
and
mov
cmc
cmc
add
push
pushf
mov
cmp
stc
test
push
push
push
pushf
lea
je
pusha
pushl
cmc
jmp
lea
jae
pushf
movb
mov
call
adc
movsl
mov
jg
add
gs
mov
push
pop
jle
gs
cmp
pop
outsl
inc
jmp
mov
or
mov
pop
stos
adc
and
shll
push
test
loop
inc
sarb
adc
mov
lds
xor
rorb
and
jns
sbb
ja
faddl
push
mov
dec
push
popf
in
outsb
push
cmpsl
fcoml
and
popf
xchg
push
sub
xor
jecxz
push
clc
rcll
scas
sarl
pop
dec
mull
outsb
cmp
push
push
ss
jp
je
xor
sbb
dec
xor
loop
enter
in
pusha
mov
bsf
pop
add
cmc
movl
not
add
mov
pusha
bt
clc
cmc
cmp
pushf
lea
jbe
push
sub
or
ror
btr
mov
clc
mov
xchg
add
lea
movsbw
bsf
shr
xadd
btc
dec
jmp
lea
addl
xchg
lcall
adc
mov
jno
push
fldcw
cmp
push
push
sti
pop
add
adc
shrl
dec
fs
add
test
clc
fs
testl
cmpsl
jge
sbb
dec
or
bound
ret
jle
sbb
fnstsw
inc
neg
mov
sub
movb
push
cmp
movzbl
cwtl
call
jle
pusha
pushf
movl
movw
pushf
push
movl
mov
movb
mov
push
lea
jmp
call
push
pusha
call
lea
jae
cmp
test
push
call
cmc
add
pusha
lea
jmp
jg
sbb
xor
or
mov
xlat
hlt
xor
xor
test
into
mov
mov
bound
adc
fcoms
dec
xchg
sub
and
lea
cwtl
movw
mov
jmp
add
pusha
stc
call
jae
btr
cmp
ror
mov
jmp
call
bt
clc
cmp
repnz
push
mov
jmp
call
push
pop
lcall
ret
das
out
push
arpl
adc
jl
out
xor
mov
jb
test
xchg
stos
pop
xchg
sbb
mov
rcrl
jle
jmp
pop
stos
iret
std
clc
lds
pusha
cld
out
pop
int
int
or
inc
gs
getsec
je
cmpsb
xchg
stc
xchg
or
jno
fs
inc
and
push
movb
adc
mov
xchg
int3
lcall
xor
mov
loope
sub
and
xor
call
inc
inc
push
inc
push
dec
xor
cs
insb
add
cmp
inc
imul
scas
jbe
notb
adc
pop
pusha
push
scas
xor
mov
stos
sub
jge
add
int3
and
pop
xchg
push
aaa
scas
add
leave
and
insl
adc
js
cld
ljmp
mov
movsl
mov
mov
mov
or
outsl
cmp
test
xchg
pushf
pop
and
bound
inc
push
lcall
sbbl
mov
mov
movl
movb
movl
pusha
mov
pushf
push
lea
jmp
pushf
lea
jl
jne
lea
movzbl
mov
pusha
push
pusha
push
lea
jmp
pushf
lea
jne
or
xor
aad
lea
aaa
aaa
mov
cmc
rcl
mov
and
add
inc
and
rcr
mov
call
add
jmp
cmpb
pusha
jmp
push
adc
xchg
cmp
jnp
push
push
packssdw
sti
idivb
shrl
loopne
jg
int
sbb
dec
dec
add
clc
mov
stos
fists
pop
je
push
dec
std
sbbl
add
xchg
dec
rcrl
mov
mov
adc
add
add
push
movl
call
mov
imul
fstl
mov
xchg
pop
je
adc
lock
cmpsl
out
ffree
test
dec
mov
push
xchg
divl
push
mov
stos
stos
xor
stc
popl
iret
sbb
cmp
lcall
fsub
mov
mov
testl
inc
rolb
jns
movsb
aas
out
mov
sub
test
scas
push
xchg
and
xchg
push
loope
movsl
mov
outsl
jnp
hlt
outsb
adcb
xchg
mov
adc
push
out
sbb
stos
push
clc
mov
aad
jno
pop
jno
aas
mov
jle
adc
mov
lea
jns
push
xchg
out
sbb
mov
jnp
and
in
pop
int3
jbe
fnstsw
mov
loope
xor
pop
fs
lret
mov
sbb
cmp
sbb
enter
lea
out
out
pop
shlb
nop
sbb
mov
inc
lds
cmp
adc
xchg
enter
jl
jno
stos
fcmovnbe
aas
js
mov
stos
fiadds
jle
out
or
sbb
sbb
nop
xchg
push
jmp
inc
push
data16
movsl
push
mov
cmpsb
mov
add
aad
add
jno
repnz
nop
dec
imul
cld
mov
mov
movsb
xorb
mov
and
out
int3
popf
cmc
or
pop
push
mov
inc
mov
mov
in
icebp
xchg
cmp
movsb
js
int
xchg
jge
lock
lea
int
jae
jle
imul
and
imul
bt
stc
rol
call
call
fldcw
fs
sbb
hlt
loope
jp
inc
std
pusha
xchg
add
es
dec
incb
mov
imul
iret
paddd
cmpsb
sub
cmc
jmp
add
xchg
int3
xchg
push
jo
arpl
psubb
jns
or
xchg
and
xchg
and
in
xor
mov
dec
fwait
lcall
push
mov
xchg
loope
xchg
xlat
add
bound
imul
xor
clc
inc
out
pop
movsl
movsb
pop
mov
inc
out
jae
or
mov
lea
xchg
lea
cmp
cmp
xchg
aad
lods
xorb
fs
je
xchg
lea
jmp
jmp
lahf
not
lea
call
lea
jae
jle
mov
mov
push
mov
mov
setg
call
movzbw
mov
jmp
xor
cmc
mov
clc
push
cmp
add
bt
pusha
call
lea
ja
pusha
pushf
lea
jb
pusha
cmpb
pushf
lea
jne
btr
mov
cmc
call
push
movl
movl
pushl
pushl
popl
pushf
movb
pushl
ret
pusha
pushf
call
xchg
pop
inc
lcall
scas
xchg
ds
int
outsl
lret
popa
sub
into
add
enter
sub
jno
out
lock
jno
mull
push
les
hlt
inc
aam
adc
pop
sbb
adcb
mov
or
pop
lcall
pop
lods
lcall
popa
std
xor
and
popa
cltd
aad
or
repnz
mov
dec
int3
lcall
call
push
enter
adc
add
insb
ror
push
mov
pushf
pushl
jmp
jmp
movl
jmp
pushf
xor
pushf
movl
mov
jmp
shr
mov
call
jne
pusha
pushl
pusha
stos
pushl
movb
pushf
movl
lea
jmp
je
pushf
adc
pushf
pushf
pushf
lea
jmp
push
movb
lea
ja
pushf
jmp
jae
call
mov
neg
sub
jnp
xor
mov
stc
pushf
push
bt
repnz
pusha
mov
mov
lea
jne
pusha
movb
cwtl
mov
bswap
lea
pusha
pushl
movl
jmp
movw
call
movsl
leave
cwtl
inc
imul
pop
icebp
lods
mov
push
cmp
adc
jg
mov
aas
les
xor
and
mov
gs
divl
mov
mov
insl
xchg
xor
jb
enter
lods
call
fmul
adc
lock
andb
pop
mov
inc
imul
pop
out
mov
push
mov
jge
jne
loop
mov
call
push
aas
mov
add
fisttpll
stc
and
push
fistl
stos
std
cmp
cmpsb
pop
xchg
lds
or
jne
imul
sbb
insb
cmpsl
adcl
enter
flds
cmc
jns
aam
sbb
push
dec
jmp
cs
out
out
cltd
inc
imul
or
push
fists
stos
imull
mov
gs
xchg
int
cli
mov
ss
push
mov
adc
mov
test
ja
mov
fs
adc
push
shll
pop
mov
xchg
push
lea
xor
in
or
cltd
call
pushf
lods
ficompl
xchg
inc
sbb
jle
nop
out
mov
or
or
xor
lods
arpl
insb
cltd
xor
adc
fs
and
aad
lret
movl
call
pusha
lea
ja
jmp
jmp
sub
je
not
cmc
add
pusha
call
cwtl
sar
rcr
mov
inc
not
clc
add
sub
mov
pusha
pusha
test
pushf
call
xor
cltd
inc
imul
push
lret
add
mov
or
xlat
or
arpl
in
cmpsl
inc
sti
pop
sbb
mov
and
fs
test
mov
xchg
add
fwait
int
lcall
dec
jne
ficomps
into
mov
sub
les
stc
mov
mov
sahf
inc
imul
mov
push
fwait
xor
cli
dec
jne
xor
mov
in
loope
dec
jns
dec
push
mov
jne
cs
roll
rcrb
cli
imul
int
xchg
loop
add
cmp
lea
fimull
fs
or
clc
popa
pop
rclb
pop
dec
mov
pop
aas
stos
adc
dec
shrl
mov
adc
jno
sarb
add
sbb
push
dec
sbb
fsubrp
adc
insb
cmc
jge
sahf
shl
sahf
inc
imul
jg
mov
bound
push
mov
lahf
test
cwtl
fs
jecxz
std
jbe
paddsb
andb
rolb
add
movsb
test
pop
lods
stos
inc
inc
mov
adc
cli
and
sub
mov
or
jno
ret
jecxz
push
or
mov
mov
push
xor
or
push
mov
adc
iret
pop
faddl
cmp
int3
xchg
inc
and
fmull
xlat
imul
or
gs
int
ss
xor
adc
imul
pop
js
inc
push
rclb
push
push
mov
rcrb
mov
sub
xor
mov
xchg
cmp
ja
push
repz
hlt
shlb
lods
out
jle
dec
mov
inc
mov
gs
pop
jmp
jmp
pushf
movw
mov
lea
call
pushf
pusha
lea
jmp
jmp
push
call
lea
je
push
pusha
lea
jmp
movsbw
mov
pushf
mov
pushf
lods
push
xor
call
xchg
not
setno
push
movl
seta
pushl
lea
push
push
pushf
movl
jmp
aad
pushf
inc
imul
pop
ja
inc
mov
or
xchg
or
lret
jnp
add
movsb
sti
das
into
mov
test
adc
add
sahf
jnp
clc
hlt
jnp
aas
dec
cmp
jnp
jmp
jb
mov
clc
in
xor
sbb
inc
and
insl
fadd
push
xlat
jle
xor
jmp
fisubs
mov
addr16
jmp
out
adc
push
sbb
xor
lea
jae
shl
and
not
mov
bswap
lea
sub
sub
mov
xor
cmp
rol
mov
bt
clc
jne
bt
xor
push
lea
jmp
lea
mov
pusha
movb
push
pushl
ret
xchg
lea
pushl
popl
pusha
setne
mov
lahf
movl
pop
lea
movw
push
pushl
pushf
movl
push
pusha
pushf
call
push
dec
jmp
inc
imul
mov
roll
sub
xor
push
fcoml
pop
xchg
push
sbb
push
movl
jno
in
adc
lret
xchg
aas
xchg
leave
pop
jge
lret
not
mov
adc
lcall
mov
or
pop
or
and
lods
sbb
je
xor
movsb
rcrl
mov
mov
lock
dec
bsf
neg
mov
test
bt
clc
cmp
pushl
jmp
pusha
push
pushf
movl
pushf
push
movl
mov
pushf
mov
lea
jmp
shr
add
cmc
mov
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
test
add
pusha
call
rol
push
bts
rcl
xadd
not
mov
lea
sub
and
test
push
pusha
mov
aad
cmc
push
mov
rol
inc
mov
btc
ror
mov
call
call
lea
ja
rcl
dec
adc
sub
bswap
mov
lea
add
lea
mov
mov
adc
sbb
add
jmp
imul
pusha
test
add
push
lea
jmp
jmp
stc
cmp
mov
lea
ja
shl
inc
adc
sub
neg
bsr
add
add
shld
pushf
call
btr
mov
shl
xor
lahf
movsbl
push
lea
pushf
push
pusha
mov
jmp
pusha
pushl
push
movl
call
jmp
pushl
popl
pusha
push
movb
pushl
ret
pushf
pusha
lea
jne
add
push
inc
mov
cmp
sub
shr
lea
test
pusha
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pushf
call
jmp
push
lea
ja
pusha
bt
imul
movw
movb
pushf
add
push
lea
jmp
rol
call
call
jmp
jmp
test
dec
nop
inc
imul
loop
jle
mov
dec
sahf
cmpsl
lcall
push
mov
push
lret
add
jl
sub
mov
mov
cmp
add
mov
jbe
test
and
sub
test
mov
add
jb
test
pop
inc
cmp
aad
mov
fmulp
sub
push
in
xor
dec
dec
inc
jmp
fcoml
sarl
out
jnp
push
movsb
dec
mov
addr16
test
out
bswap
js
or
addr16
fsubs
dec
xchg
jle
cmc
sub
in
daa
aam
inc
imul
jnp
mov
outsb
js
mov
pop
fisubl
out
adc
imul
mov
jecxz
sbb
scas
push
jecxz
mov
call
out
adc
cltd
adc
jg
idiv
cwtl
movsb
aad
push
push
pop
cli
subl
mov
gs
jno
or
lret
sub
pop
xchg
and
ss
rol
call
mov
fidivrs
inc
lret
dec
scas
pop
lea
cmp
hlt
test
sbb
jg
icebp
add
stos
inc
in
jecxz
lcall
ss
mov
dec
arpl
sbb
add
jne
int3
cwtl
push
add
ficoml
inc
cmpsb
cli
dec
sahf
jbe
scas
sbb
mov
inc
sub
mov
mov
sbb
fnstsw
pop
and
lret
pop
cwtl
and
push
pusha
stc
lahf
mov
push
in
outsb
cmpsb
insb
cmp
imul
out
pop
aam
adc
cmp
xchg
cmc
out
dec
dec
xlat
std
mov
dec
rclb
mov
adc
inc
lea
fadd
adc
xchg
pop
cmp
outsb
jp
mov
incb
adcl
cmpsl
js
dec
in
ljmp
sti
btc
add
add
call
or
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
add
out
int
add
call
cmp
cmc
cmp
mov
pusha
movb
pushf
lea
jb
stc
bt
cmp
jbe
push
lea
jae
shr
xadd
mov
bswap
adc
mov
neg
lea
mov
cmp
pusha
sub
lea
test
repnz
pushf
pushf
push
pusha
lea
jne
bswap
call
cmc
sub
rol
mov
jmp
call
movzbw
pushf
movzwl
push
mov
lea
not
pushf
mov
pushl
lea
call
jp
pusha
pushf
lea
jne
call
jmp
pusha
sub
cmc
clc
bt
clc
cmp
jmp
movb
lea
jbe
not
cmp
shl
sub
or
and
rol
mov
btc
xadd
mov
clc
shld
bts
add
bswap
shrd
movzbw
shr
xor
shl
mov
sbb
add
push
call
call
pushf
call
push
xchg
and
lods
loopne
mov
or
les
out
sub
int3
cmp
repz
daa
mov
int
ljmp
mov
mov
test
hlt
inc
inc
js
mulb
ss
enter
xchg
lea
call
jmp
pushf
bsf
mov
pushf
pushf
and
push
clc
jmp
push
pushl
call
add
cmc
pushw
popfw
pushl
pushf
call
mov
pushl
lahf
call
incb
xchg
inc
imul
inc
lods
ds
mov
xchg
jne
je
dec
aam
sti
dec
cmpsl
out
add
shlb
jo
add
divl
mov
dec
xchg
in
inc
jne
jns
adc
pop
enter
xchg
fs
jmp
xchg
and
cmp
adcb
add
mov
dec
rol
bsf
mov
jmp
push
jnp
xchg
inc
imul
jb
cli
push
fsubrl
sarb
mov
lcall
into
pop
mov
inc
sbb
data16
cmc
stc
in
dec
inc
int
adc
imul
cs
push
ds
xor
in
dec
jae
ljmp
mov
mulb
stos
mov
out
add
push
push
or
lret
lret
lea
and
push
test
inc
jmp
cmp
sbbb
add
fs
imul
add
push
lea
je
movzbw
push
mov
bswap
bswap
jmp
pushl
popl
cwtl
not
setbe
jmp
test
mov
jmp
neg
rcl
and
add
pusha
jmp
movw
pusha
lea
ja
pusha
pushf
imul
jmp
pushf
mov
pushl
mov
jmp
call
cmp
mov
push
add
shll
lahf
pop
loopne
loopne
sbbb
sbbb
out
adc
xchg
or
movsl
repnz
shrb
xchg
dec
sbb
lock
test
cli
lock
fidivs
jno
dec
push
sbb
or
dec
fisubs
add
and
jle
mov
push
xchg
xchg
xchg
sbb
pushf
or
xchg
and
sub
not
xor
pushf
aas
mov
jbe
fdivrl
xchg
sbb
lods
lret
test
movsb
mov
xchg
out
mov
xor
mov
jl
sbbb
mov
incb
mov
lcall
fisubl
jns
adc
lcall
fwait
jmp
addl
lret
add
decb
cltd
adc
cwtl
push
cmc
mov
adc
sub
jne
mov
push
pop
das
xchg
sub
jbe
dec
je
sbb
mov
xchg
jbe
popa
rol
adc
inc
call
and
jge
test
cmp
shr
adc
fstps
jnp
int3
add
vmrun
cmc
mov
into
sbb
mov
sbb
cltd
loop
loop
cmp
inc
or
ret
std
mov
xor
mov
add
loope
pop
loop
sbbl
andb
std
xchg
or
xchg
jge
adc
mov
pushf
fistps
rcll
and
in
rcl
cltd
adc
jp
or
mov
insl
loop
nop
dec
xchg
mov
or
adc
jl
sub
pop
inc
mov
notb
sbbl
cwtl
push
sbb
adcb
jg
cmp
ficompl
sbb
pop
pop
adcb
push
lea
mov
ficompl
cld
fimuls
pop
cmp
loopne
loopne
rorb
inc
addr16
add
mov
or
sub
jo
fidivrl
in
pop
add
insb
jns
xchg
testl
push
push
movsl
inc
add
sahf
sub
mov
jb
push
fidivl
fsubl
loop
pop
iret
and
add
in
or
cs
jb
in
add
pop
dec
test
daa
adc
rorb
inc
scas
fwait
insl
add
stos
xor
add
loopne
insb
dec
or
add
mov
sub
cmp
ret
les
pop
xor
adc
outsb
jae
lcall
lods
test
add
xchg
lret
jne
push
fdivp
xor
add
std
xchg
xchg
add
push
scas
decb
fsubr
add
fidivl
imul
adc
lret
jg
pop
lret
add
mov
jmp
sbb
in
in
sub
test
cmpl
hlt
mov
les
adc
loop
fildll
mov
mov
pop
addr16
and
jno
sahf
add
ror
aaa
out
in
push
push
xorl
xchg
ss
jbe
outsb
jnp
mov
or
push
mov
out
and
sysexit
jg
pusha
dec
or
or
ljmp
in
andl
insb
rcrb
lahf
and
sub
inc
cmpsl
and
lahf
push
into
mov
or
jge
and
adc
adc
jp
mov
daa
fisttpll
aaa
jno
loop
push
int
xlat
mov
add
mov
add
push
jecxz
lret
push
add
sub
push
rsqrtps
adc
inc
sahf
andb
rolb
loope
push
or
fs
mov
test
xchg
call
mov
and
testl
pushf
add
les
push
add
call
pop
cmc
jnp
sub
or
add
push
push
and
xchg
adc
jmp
add
jb
xor
adc
add
xchg
fistpll
outsl
daa
and
or
repnz
ret
adc
inc
or
xchg
mov
xor
loop
add
push
and
test
test
and
xchg
xchg
cld
in
mov
mov
and
dec
mov
subb
adc
mov
add
mov
dec
inc
jl
lahf
aas
shrl
push
ffree
loop
cmpsl
in
dec
mov
test
roll
cmpsb
and
out
in
sbb
pop
cwtl
xlat
js
adc
add
jnp
fwait
inc
xor
sbb
and
enter
adcl
cmp
push
lcall
cld
into
pop
add
mov
sbb
addl
pop
xlat
cmp
std
mov
jns
jne
push
sbb
mov
divb
jbe
mov
in
jno
push
xor
push
pop
mov
icebp
and
shlb
movsb
and
lock
xor
sbb
dec
pop
daa
fldt
mov
add
adc
sub
cmp
test
fldl
dec
xor
push
or
cmp
xchg
shlb
dec
dec
pop
and
rorb
lret
ja
in
and
loop
pushf
and
pop
xchg
inc
test
icebp
sbb
andl
lea
dec
and
inc
std
out
cld
inc
ret
ljmp
icebp
inc
mov
inc
mov
orb
sbb
sbb
inc
xor
cmp
daa
push
inc
orl
push
push
lock
inc
push
add
xchg
inc
inc
loope
push
sub
repnz
inc
js
je
lds
push
push
loop
mov
cld
xor
pop
mov
lock
xor
or
cwtl
xchg
lahf
add
nopl
cmpsb
mov
scas
xchg
es
loopne
mov
jg
and
add
xor
loop
dec
lcall
fwait
or
sti
mov
jmp
add
movsl
loop
add
push
iret
push
push
mov
mov
sbb
shll
movsb
cwtl
int
jp
dec
inc
mov
dec
add
add
aaa
push
js
ficoml
mov
cmp
lods
pop
add
xchg
cs
decl
xchg
mov
in
in
outsl
xor
inc
jecxz
mov
and
adc
cmp
in
test
add
pop
lahf
add
sub
jne
lods
and
leave
mov
cmp
imul
loop
test
arpl
inc
add
mov
es
mov
add
repnz
insl
fldcw
shlb
stos
rorl
mov
loop
mov
mov
dec
pusha
or
aad
mov
add
pop
push
mov
stos
xchg
ret
scas
add
cltd
xchg
or
out
adc
add
mov
outsl
mov
dec
imul
mov
int
add
lret
jno
pop
xchg
xchg
testb
adc
push
xor
add
mov
dec
ret
lcall
add
adc
outsb
add
xor
pop
and
cwtl
add
adc
cmp
mov
adcb
push
int3
xchg
inc
pusha
add
cmp
sub
mov
push
adc
jae
cmc
loop
imul
xchg
popa
or
sub
aas
stos
les
test
frstor
push
cmp
and
xor
push
sahf
nop
pop
pop
xchg
xchg
int
add
out
push
and
jb
inc
lods
push
into
aam
addb
rolb
add
out
xor
fwait
cmp
adc
pop
outsl
mov
inc
bound
adcb
jp
and
repnz
adc
rorl
mov
pop
adc
cmpsb
fwait
xor
xchg
ficompl
pop
std
or
jne
aas
inc
mov
fs
pop
adc
insb
push
inc
hlt
mov
out
add
mov
aaa
add
bound
add
jns
sub
jle
and
dec
clc
rolb
sarl
loop
mov
sti
mov
jnp
mov
adc
notb
mov
add
push
fnsave
cs
ret
ljmp
push
add
repz
bound
pop
negb
lods
add
fsubrp
pop
sub
jns
mov
mov
pop
nop
lock
stos
and
out
push
push
sbb
inc
js
or
adc
sarb
inc
inc
jge
dec
pop
pop
sarl
mov
mov
cmp
ret
fistpll
pop
ljmp
in
xor
sahf
lods
mov
mov
push
nop
insb
mov
loop
adc
push
and
mov
out
mov
gs
mov
sbb
dec
or
or
call
loop
jecxz
and
call
rcll
xchg
add
jmp
adc
insb
pushf
lahf
and
and
sbb
ret
adc
iret
dec
mov
ja
in
cmp
inc
mov
adc
insb
pop
dec
cmp
lods
ja
add
popa
xor
xchg
dec
xor
and
test
add
pop
lods
xchg
mov
jl
push
xor
cmp
push
popf
movlps
nop
mov
adc
or
sub
int3
push
jnp
xchg
shll
inc
clc
call
fidivs
push
addb
mov
test
adc
scas
daa
or
es
jge
insl
add
nop
repz
loope
je
add
in
rcrb
add
outsl
invd
add
mov
leave
add
pop
dec
mov
jmp
jno
lahf
inc
insb
insl
roll
add
ret
jne
sub
xchg
repnz
jo
lock
push
add
repz
div
daa
xor
rolb
sahf
movsl
out
push
call
sbb
scas
add
or
iret
add
sbb
dec
mov
xchg
js
shlb
jge
dec
imul
or
das
mov
fs
loopne
sub
arpl
cs
sbb
add
int
jp
jno
testb
push
and
pop
imul
mov
or
xlat
pop
enter
xor
ljmp
pop
cwtl
lcall
nop
push
shlb
mov
pop
sbb
xchg
sti
xorb
mov
add
xchg
sbb
push
les
out
adc
jb
jl
andb
jl
mov
sbb
sub
push
add
or
lock
shll
mov
jae
add
loop
test
xchg
inc
cmp
test
hlt
mov
js
popf
sahf
xchg
divb
movsb
fwait
and
cmp
or
adc
pop
movb
das
lret
mov
lds
inc
incl
test
mov
test
adc
add
sub
pushf
cmp
adc
mov
iret
int
test
sub
ret
popf
push
jmp
cmc
insb
xchg
cltd
or
ret
cld
sbb
and
sbb
rcrl
push
sti
es
out
in
pushf
pop
bound
add
add
aas
outsb
enter
add
rol
je
into
test
leave
and
or
cmp
jmp
inc
addr16
imul
les
stc
and
sbb
sbb
popa
pop
ljmp
mov
pop
lea
jb
mov
cs
filds
sub
frstor
adc
stc
stos
add
xor
cmp
add
inc
outsl
jecxz
push
fucom
push
push
inc
pop
xor
xor
add
mov
scas
mov
cmp
cwtl
push
add
mov
in
jbe
aas
das
adc
pop
outsl
xor
rolb
and
aas
loop
dec
xchg
cltd
pop
outsb
out
or
adc
mov
pop
or
mov
push
xor
shll
inc
insb
mov
and
xchg
ja
arpl
in
push
pushf
inc
int
mov
lods
out
outsl
mov
push
data16
mov
insb
popf
jnp
roll
and
push
in
xor
divb
mov
dec
fdecstp
andb
add
or
sbb
xchg
xor
sahf
shlb
xor
inc
pop
andl
add
arpl
pop
scas
mov
roll
sub
sbb
into
mov
dec
insl
mov
addr16
clc
cmp
xchg
add
xor
inc
inc
lea
adc
xor
out
arpl
jbe
or
xor
add
dec
dec
push
cmpsb
add
add
xchg
mov
add
pop
add
push
sbb
xor
mov
adc
fwait
jb
cmovbe
lock
in
adcb
icebp
scas
mov
add
pusha
mov
incb
out
add
sub
lcall
pop
loop
sbb
pop
lods
add
push
mov
and
adc
clc
adc
push
int
sbb
add
rorb
push
fnop
inc
mov
in
add
fidivrl
dec
sub
ds
push
or
and
shrb
push
das
pop
push
cmp
in
sarb
pop
add
pop
push
xchg
adc
xorl
ficomps
popl
cmpsb
or
int3
les
outsb
add
scas
xor
loop
out
test
inc
mov
add
pop
scas
push
mov
adcl
ds
inc
push
bound
add
sbb
inc
stos
fisubrs
insb
jge
adc
or
ret
test
bound
add
pop
stos
data16
popl
aad
shlb
mov
lods
fstl
xor
xchg
jns
sub
test
sbb
cmp
adc
in
psubsw
push
movsb
test
ja
mov
imul
jae
cmc
js
in
push
sub
pop
cmp
mov
and
gs
pop
aaa
data16
addr16
inc
pop
ret
fs
and
shll
mov
dec
push
xchg
mulps
ret
add
or
insb
add
in
push
jno
out
dec
add
loopne
outsl
cmp
fdivr
out
fs
fidivs
jge
data16
mov
and
pop
ja
adc
xchg
adc
inc
shrb
sbb
stos
jl
movsl
out
js
je
inc
jnp
adc
ret
jns
fmuls
lret
add
xor
bound
dec
adc
sbb
adc
mov
mov
pop
adc
add
sahf
cmp
test
and
enter
sub
xlat
xchg
pop
mov
inc
dec
dec
sub
add
push
jmp
fadds
daa
test
xchg
adc
mov
xchg
int3
push
dec
fiaddl
scas
test
add
cltd
lret
fwait
xchg
push
push
or
mov
adc
mov
lds
mov
sbb
stc
cwtl
push
pop
mov
and
mov
pop
scas
adc
mov
aas
loop
nop
jo
loope
js
jge
xchg
and
dec
mov
add
add
fstpl
adc
jge
push
sbb
or
xchg
mov
add
sub
je
xchg
movsl
or
clc
push
add
jmp
aas
xchg
fdivl
add
leave
push
and
lock
iret
jmp
xchg
push
loopne
in
test
or
pop
push
mov
ljmp
addl
ret
aas
repnz
jmp
sub
sbb
and
cmc
fwait
push
jp
stc
aaa
or
mov
shll
orb
fs
prefetchwt1
daa
adc
sbb
fwait
cmpsl
popa
jns
add
into
fcmovnu
ja
push
mov
or
popl
scas
sahf
mov
jns
pusha
sbb
inc
inc
sub
stos
mov
add
sub
push
sbb
sti
ficompl
hlt
int3
inc
js
mov
fs
add
cli
xchg
mov
mov
sbb
aam
add
popf
pop
js
mov
mov
fcoms
sub
xor
push
insl
add
dec
cmp
fsubs
jnp
add
pop
aam
fwait
pop
or
ficoml
and
sbb
loopne
pop
push
inc
push
pop
push
test
sub
or
pop
mov
ret
mov
lods
jg
xor
or
dec
in
mov
jno
pop
cwtl
les
and
aad
sub
xchg
loop
jo
push
mov
mov
sbb
inc
fists
mov
dec
pushf
pmulhw
sti
or
xlat
out
orb
rcrl
add
shlb
mov
repz
cmc
mov
add
loopne
sub
lahf
out
shlb
add
shll
sbb
add
xchg
popa
jae
icebp
data16
push
pop
jns
sahf
mov
cmp
leave
add
pusha
sbb
add
xchg
push
add
dec
fsubl
hlt
push
add
out
lcall
jno
sbb
or
cli
int
arpl
icebp
test
push
adc
mov
sub
loopne
push
and
jp
movsl
and
add
daa
jo
cli
push
add
sbb
push
out
xchg
mov
sbb
adc
cmc
push
enter
loop
sbb
push
inc
adc
fistl
dec
mov
push
lock
icebp
ja
mov
shlb
cmpsb
cmpsl
lea
jle
jnp
lea
in
popf
dec
pop
loopne
add
and
addb
push
add
es
popa
add
inc
sbb
cmpsl
daa
jo
jnp
cld
pop
xchg
dec
ret
add
loopne
fmul
ss
inc
cmp
push
xchg
push
sbb
inc
or
pop
pop
mov
adc
jno
adc
movsb
add
out
and
xor
imul
and
shrl
add
pop
xor
add
adc
cltd
pusha
inc
fdivl
movl
sub
sbb
inc
scas
cmp
mov
test
add
aad
daa
add
sub
jb
add
aas
add
dec
lahf
in
stos
and
push
arpl
jae
and
add
jg
add
cmp
icebp
add
hlt
mov
sub
mov
aaa
inc
sub
orl
fcmovnu
inc
lret
adc
mov
insb
add
sub
dec
or
outsb
call
clc
add
jle
jg
in
sbb
in
mov
loope
cmp
add
frstor
scas
fdivp
pop
dec
xorl
mov
testl
adc
loop
jmp
xorb
sti
scas
ja
iret
push
cwtl
popa
idiv
sbb
mov
inc
and
or
jle
xor
dec
jb
mov
imul
ret
jnp
or
cmp
sub
das
add
es
fsubr
ja
scas
sahf
fsubr
fcompl
adc
cmp
bt
inc
je
jmp
incb
xor
adc
add
xchg
xor
cltd
sbb
add
or
fs
xlat
jmp
subl
imul
movsl
add
fwait
stos
cmp
xor
rcrl
rolb
ret
jbe
push
cld
inc
loop
iret
lods
sbb
jp
mov
xor
andl
pusha
add
and
add
xchg
les
xchg
lahf
lret
test
adc
jno
adc
push
sbb
stos
fildl
mov
addr16
add
sub
hlt
push
sub
mov
jno
adc
adc
call
sbb
popa
xor
int
mov
pop
imul
aam
xor
jo
sbb
or
shl
stc
jg
xor
shl
dec
leave
stos
xor
addb
pop
pop
icebp
sbb
imul
nop
xor
push
es
and
out
ret
lods
leave
xor
repnz
push
lods
sub
test
loop
sbb
sahf
xor
pop
lret
pop
rcrl
jne
and
adc
pop
fistpll
repnz
in
pop
push
push
icebp
sbb
and
xchg
in
xor
or
jns
mov
sub
pop
add
or
enter
and
push
addb
push
pop
enter
mov
loop
arpl
xor
lds
sub
push
call
inc
or
add
pop
enter
je
andl
pop
pandn
mov
sub
adc
inc
jg
dec
or
pop
push
or
daa
repnz
adc
aas
icebp
jns
xchg
mov
or
lcall
pop
ljmp
hlt
cmp
add
das
dec
lea
mov
loop
les
lret
shl
mov
mov
outsl
rcrl
inc
mov
xchg
adc
add
inc
rcrl
jl
adc
and
push
lea
lock
in
push
arpl
add
movsl
mov
je
lods
dec
dec
ss
jne
mov
ret
inc
add
mov
cmc
lods
add
movsb
outsl
push
cltd
xchg
or
out
ret
movsl
add
mov
das
sar
scas
or
inc
or
mov
jnp
xor
or
pusha
imul
imul
jmp
int
loope
bound
push
nop
movsl
clc
add
call
aaa
adc
jne
dec
jle
icebp
add
push
or
push
test
adc
aas
ret
dec
lods
push
adc
shld
mov
lcall
pushf
jne
in
je
dec
pop
add
push
test
ror
stc
cmc
stos
test
or
push
pusha
orb
aad
or
and
divps
stc
arpl
sbb
test
push
or
add
ss
sbb
add
dec
jns
add
jmp
add
mov
fcomps
xchg
add
div
sbb
xchg
jae
add
hlt
pop
and
sub
fnstenv
test
fs
stos
fisttpll
push
add
fcoml
adc
sbb
and
int
sbb
add
and
sub
subb
leave
sarb
add
std
pop
push
int3
pusha
out
insl
cmp
lea
sbb
and
xchg
out
cmp
xchg
lods
daa
adc
xorl
push
sbb
iret
mov
icebp
stos
jae
sahf
fwait
cmp
adc
jnp
jae
adcl
icebp
cltd
adc
nop
xor
jmp
into
shrb
andl
cmpsl
fiadds
sahf
dec
mov
xchg
loop
jno
mov
sub
mov
stc
jecxz
addl
cmpsb
test
pop
cwtl
outsl
leave
or
jl
test
icebp
push
enter
add
cld
sbb
or
and
jg
lret
mov
mov
xchg
inc
cmpsl
shrl
pop
mov
mov
fldcw
and
adc
lahf
dec
add
add
adc
sti
std
inc
add
jle
in
or
lahf
add
enter
fs
mov
shrl
xchg
jns
repz
cmpsb
mov
pop
jo
out
popf
mov
loop
stos
inc
xor
int3
pop
rcll
inc
in
sti
addl
std
jge
lret
das
cmp
dec
outsb
add
mov
and
in
daa
or
xor
inc
push
stc
notl
jmp
fisubs
arpl
xchg
pop
leave
lahf
stos
push
das
add
add
std
push
mov
mov
int3
add
push
inc
imul
or
add
push
stos
add
dec
adc
dec
push
fidivrs
adc
pop
popa
cmp
cmp
add
mov
aam
push
cmpxchg
stc
cmp
and
mov
dec
pop
test
xchg
ret
shll
add
mov
push
dec
jnp
jns
sti
arpl
or
ret
push
es
fucomi
add
sbb
fisttpll
xor
jae
sbb
add
stos
dec
add
cld
fldpi
add
mov
lea
sub
xor
adc
frstpm(287
mov
jo
jg
pop
fisttpll
cld
pop
ror
bound
pop
arpl
fwait
aas
dec
jbe
adc
test
jge
lods
dec
and
xor
out
mov
gs
scas
in
dec
jg
jge
imul
jne
adc
sbb
fsubp
add
aaa
or
xlat
popf
and
sbb
cmc
shlb
cli
ss
fisttpll
arpl
loopne
sub
push
mov
add
fstpl
sub
fiadds
xlat
jno
repz
mov
mov
inc
cltd
adc
mov
cmp
jp
and
je
adc
adc
loop
jl
and
mov
push
loop
cmp
imul
push
sti
sub
or
bound
gs
jb
add
inc
out
sbb
or
stc
or
shll
lahf
cmp
mov
stos
dec
lahf
add
hlt
or
mov
cmpb
sahf
outsb
das
ds
adc
mov
adc
rolb
lahf
jle
popa
int
shrb
es
fidivs
add
arpl
lcall
sbb
adc
push
sub
stc
add
mov
test
adc
aaa
xchg
aam
xor
out
outsl
mov
add
js
scas
lcall
sahf
les
andb
inc
cmpsb
mov
and
add
stos
add
in
call
test
dec
lahf
mov
push
aas
mov
or
push
add
sbbb
xchg
mov
repnz
xchg
sbb
xor
pushf
pop
add
mov
iret
in
pop
add
cld
cmpsl
push
add
pusha
cltd
cwtl
adc
push
and
adc
orb
and
dec
or
push
xchg
ficomps
add
jge
push
dec
sahf
mov
sub
dec
popa
mov
lds
and
sub
add
sti
or
add
sub
jne
pop
mov
add
fisttpll
lcall
imul
pop
lfs
and
inc
sbb
add
xchg
mov
loop
shlb
xchg
adc
mov
insb
dec
adc
imull
iret
fsts
and
pop
push
data16
add
push
mov
stc
inc
and
fistpl
lods
jno
std
addl
icebp
and
mov
sub
adc
add
inc
lods
popa
add
jmp
mov
inc
cs
pop
jmp
mov
vpcmpeqw
inc
loopne
jno
out
pusha
add
push
jge
dec
sbb
add
addr16
push
adc
xor
jmp
shlb
test
push
and
or
sbb
ljmp
xchg
push
jg
imul
faddl
sbb
adc
or
bsr
xlat
mov
popf
push
xchg
pop
inc
adc
xor
popf
or
add
call
sub
inc
out
outsl
xchg
push
cmp
mov
mov
or
mov
xorb
mov
ljmp
inc
inc
icebp
jecxz
nop
adc
dec
in
dec
test
pop
lods
ljmp
inc
ret
in
pop
add
xchg
sbb
notb
or
into
add
mov
inc
loop
xchg
jecxz
jae
add
mov
test
lds
mov
jno
push
add
sarb
leave
jne
add
push
inc
imul
dec
inc
ds
pop
vmread
and
stos
jns
xchg
or
add
xor
push
ret
stos
jae
and
pop
jns
add
mov
imul
cltd
sub
push
mov
lret
mov
push
xchg
xchg
pop
lds
aad
or
es
test
and
adc
dec
pusha
sub
add
hlt
pushf
xchg
add
dec
dec
jge
mov
rorb
vmread
add
mov
mov
mov
adc
add
cmp
in
push
mov
mov
mov
and
mov
aad
jns
mov
repnz
add
mov
sar
or
adc
outsl
jge
fbld
sbb
sahf
xor
add
movsl
sub
add
cmp
insl
and
test
xchg
rorl
mov
or
add
cltd
xor
shl
and
push
lea
out
pop
add
or
nop
repnz
add
jecxz
sbb
add
add
call
add
repnz
sti
inc
mov
adc
xchg
xor
loopne
xor
popf
pop
xchg
je
or
mov
std
pop
inc
xchg
cmc
outsb
xchg
mov
xchg
mov
or
add
bound
imul
fstps
or
sti
inc
push
dec
xchg
xchg
insl
inc
mov
push
or
mov
mov
mov
scas
add
in
jb
mov
ret
sub
and
xor
sub
add
add
in
leave
arpl
mov
cmp
sarb
add
adc
mov
bound
es
add
xor
mov
cmpsb
push
xchg
aad
jg
repz
inc
stos
adc
mov
mov
inc
inc
js
or
and
jg
mov
or
mov
fwait
inc
sbb
add
adc
enter
insl
add
rol
repnz
adc
test
xchg
add
or
push
pop
mov
lcall
push
inc
aad
sub
adc
add
dec
inc
sbb
stos
sbb
mov
mov
fiadds
leave
push
fadds
bound
adc
add
add
repnz
dec
push
add
xlat
add
fadds
loop
loop
mov
add
mov
jle
add
shll
or
ss
jae
out
loopne
pop
pop
pop
jnp
out
cmp
add
jle
outsl
mov
mov
cmpsl
stc
xorl
mov
andb
pop
fcomps
insb
adc
test
call
fists
lds
fnstcw
sbb
mov
mov
or
je
xchg
add
inc
xor
jecxz
fwait
or
and
cs
stc
sub
incb
insl
mov
test
jle
mov
lret
sbb
mov
xchg
dec
add
arpl
sbb
add
jae
int3
xchg
mov
mov
rcrb
dec
pop
dec
sti
orl
daa
mov
fwait
xor
and
sbb
outsb
in
mov
lcall
jmp
mov
aaa
pop
add
outsl
adc
add
arpl
fsubs
dec
push
repz
or
push
jmp
pop
in
jge
inc
clc
adc
sbb
popa
dec
add
jge
clc
pusha
decl
into
fyl2x
fistl
aas
fcompl
call
cmpsl
add
ds
cli
leave
loope
add
dec
push
inc
ftst
stos
xorl
fldt
mov
sbb
cld
cmpsl
out
adc
fnsave
or
push
ret
xchg
stos
jb
lea
or
and
mov
ljmp
push
enter
fwait
hlt
nop
adc
mov
jno
push
addl
lea
add
dec
enter
cmp
jle
repnz
ret
inc
push
xchg
add
stos
enter
adc
add
jge
push
mov
std
aam
ret
pop
ja
add
out
jge
and
add
jne
movsb
int
loop
movsl
dec
adc
nop
lret
xchg
pop
and
ret
lcall
in
jmp
rep
dec
add
jge
sub
mov
sub
pusha
and
dec
add
test
jnp
shrb
mov
pop
lahf
add
inc
repnz
ljmp
and
adc
mov
in
loopne
fcoml
mov
adc
add
es
add
insl
and
xchg
scas
add
cmp
sbb
jl
ja
mov
add
add
daa
adc
clc
ja
sub
sub
popf
bound
aaa
dec
outsl
mov
inc
mov
mov
sbb
add
fidivs
cmp
mov
mov
xchg
jg
and
pushf
clts
push
pushw
std
add
inc
pop
scas
sbbl
int3
mov
mov
jl
or
les
sarb
push
xor
pop
mov
or
and
mov
lods
iret
loop
dec
sar
jno
cmp
popa
dec
dec
jns
sbb
call
sbb
dec
add
sbb
ja
mov
push
add
sbb
mov
xchg
and
ror
and
daa
aam
mov
pop
icebp
push
outsb
sub
cld
or
pop
mov
incl
out
cmp
sbb
loop
push
popf
popa
inc
dec
sti
sbb
je
in
gs
xor
enter
andl
and
jl
mov
out
loope
cwtl
xchg
mov
adc
add
fwait
xchg
jae
jg
rclb
pop
mov
movsl
fadds
inc
lods
mov
mov
jb
dec
mov
push
loope
xchg
daa
fmull
pop
xor
cmp
dec
pop
out
or
pop
jmp
jmp
pop
fadds
loopne
or
cld
addl
aaa
popf
mov
jae
cmpsb
sbb
xor
and
fsetpm(287
movsb
mov
dec
add
les
dec
pop
adc
cmc
insb
cltd
mov
mov
add
add
mov
pop
lods
loop
out
test
add
xor
xlat
mov
push
fistps
and
fistl
push
sbb
gs
push
repz
in
add
xchg
add
jbe
jne
in
xchg
pop
jl
add
jne
mov
or
outsb
arpl
lahf
add
in
fisttpl
adc
mov
add
je
push
inc
out
lds
ja
aam
cmp
aas
pop
aad
adc
pop
add
pop
sub
loop
add
aam
sbb
and
adc
push
out
loop
aas
add
movsb
int3
call
xor
or
mov
leave
pop
mov
mov
pop
add
rcll
pop
mov
push
xchg
mov
adc
loope
in
xchg
sub
loop
mov
icebp
adc
pop
add
pop
and
jno
cmp
or
loopne
dec
rclb
testl
std
add
cmp
insl
mov
lods
jecxz
jno
in
pop
aaa
xchg
and
outsl
adc
sbb
sub
subb
cld
inc
imul
xchg
in
pop
cmp
xlat
dec
notl
sub
inc
popa
sbb
ror
sbb
mov
cld
enter
push
pushf
fbstp
mov
jnp
cltd
pop
lods
add
test
mov
mov
ljmp
pop
mov
mov
or
mov
popa
xchg
push
add
enter
add
add
xchg
xor
lock
std
and
push
sbb
pop
jnp
sub
mov
pop
lret
cmp
dec
clc
nop
dec
mov
int3
add
mov
mov
lods
loop
call
mov
push
add
sub
adc
pop
rcr
inc
jecxz
enter
addb
add
arpl
xchg
les
sbb
xchg
mov
xchg
pop
cmp
sbb
mov
les
adc
adc
jnp
test
sbb
push
sub
pushf
cwtl
or
add
and
test
nop
sbb
xchg
mov
add
lsl
cmp
divb
pop
xchg
and
stc
mov
jmp
jae
loope
int3
cmc
cltd
mov
jl
jp
mov
in
and
cmpsb
test
icebp
push
sub
cmc
lods
add
cmpl
lret
xchg
xchg
jmp
mov
shll
out
mov
jo
mov
loop
in
mov
mov
inc
adc
mov
push
mov
xor
sub
rolb
mov
cmpxchg
je
xchg
stos
add
or
add
jbe
xchg
add
mov
xor
mov
das
test
cmp
in
inc
sub
fldl
mov
dec
xor
cmp
cmp
shrl
cmpsl
mov
push
push
or
movsb
dec
add
xor
cmp
ret
pop
inc
sbb
mov
pop
or
jg
daa
je
xor
ss
and
sbb
adc
jnp
and
add
mov
sub
in
notb
and
xor
cmpsl
cwtl
jns
xchg
mov
mov
pop
sub
inc
and
nop
cld
fwait
xlat
adc
push
testl
adc
and
pushf
js
xor
jp
mov
cmp
divl
cmpsl
add
dec
xor
add
jmp
push
push
loop
ret
lahf
les
in
fdivrp
loope,pt
lea
stc
repz
and
inc
addb
xor
gs
add
clc
loope
mov
push
sub
adc
ss
daa
add
xor
push
inc
and
int
shll
pop
mov
mov
sbb
repnz
push
xchg
add
enter
mov
push
mov
xchg
les
add
jp
ss
pop
jb
in
dec
gs
xchg
or
and
lret
xchg
push
test
aaa
lods
mov
sbb
adc
nop
mov
jb
xchg
call
pop
xchg
add
loope
ljmp
cmp
in
or
and
loop
jne
cmpsb
add
sub
and
icebp
daa
pop
or
daa
or
popa
fildl
arpl
add
push
pop
les
pop
adc
and
addr16
fdivl
mov
les
xchg
div
xchg
push
sbb
sbb
out
push
sti
adc
inc
in
fildl
mov
into
add
pop
cmp
jecxz
push
or
inc
cld
cmp
mov
cmp
pushf
xorl
xor
mov
into
mov
es
add
leave
addr16
fisttpl
adc
xchg
adc
incb
mov
xchg
subl
fnstcw
xchg
mov
out
push
push
inc
mov
pop
loope
outsb
add
repz
jno
adc
test
sti
push
jg
pushf
add
mov
add
jmp
mov
xchg
xchg
inc
cmp
mov
test
xchg
mov
cs
mov
sti
cmp
add
stc
push
mov
add
mov
aas
fs
imul
push
xchg
cmp
sti
cmp
shlb
push
ljmp
add
icebp
mov
mov
mov
arpl
mov
mov
add
mov
cmpsl
sbb
cltd
and
pop
xor
mov
inc
xor
mov
aad
je
pop
test
sbb
mov
pop
jp
fiaddl
add
jmp
repnz
scas
cmpsl
add
imul
mov
lods
xor
sahf
sbb
adc
xor
jae
push
add
xor
xor
shlb
sub
xor
jecxz
adc
xchg
and
jge
dec
inc
mov
lcall
aaa
ljmp
bound
and
mov
add
mov
mov
xchg
jge
rcl
loope
xor
mov
lods
xchg
xchg
xor
mov
sbb
stos
rolb
adc
xor
or
mov
add
rcrl
mov
roll
outsb
mov
aad
cmpsl
mov
aas
pop
lret
add
mov
rcll
or
add
lods
aas
movl
mov
insb
scas
lahf
jnp
je
das
xlat
cs
loop
mov
mov
or
test
adc
in
sbb
sub
or
std
test
nop
rol
cmpsl
lods
inc
jae
sub
pop
or
in
frstor
lods
loop
fs
imul
das
cltd
mov
xor
pop
jbe
sub
jecxz
jns
jno
shrb
add
inc
aas
out
dec
xchg
jg
and
xchg
mov
xchg
sti
dec
or
andl
or
incl
adc
jmp
cmc
mov
inc
cmp
mov
add
xchg
dec
mov
loop
loope
mov
stos
sbb
and
hlt
add
push
pusha
cmpsb
push
xor
les
inc
aad
xchg
mov
cmp
mov
fisttps
sub
incl
cmp
mov
lret
loop
xlat
movsl
sub
mov
pop
cltd
and
rclb
cmp
lods
cmpsl
push
mov
add
test
addb
rcl
idivb
loop
mov
pop
rcl
jnp
int
sub
mov
cmp
mov
pop
mov
sbb
mov
jp
fstpt
xchg
sub
insb
jno
sti
aam
sub
mov
fcomi
sbb
cwtl
add
ret
adc
jne
shl
subl
cmp
pushf
call
mov
cmc
sub
ljmp
xchg
inc
add
xor
negl
dec
pop
adc
leave
mov
aaa
add
mov
jns
mov
pusha
popa
inc
imul
adc
add
stc
and
add
mov
testl
stos
test
mov
mov
andb
push
or
cmp
mov
bound
or
mov
inc
mov
mov
pop
xchg
or
in
push
pop
outsb
and
mov
enter
mov
nop
inc
and
dec
and
cmpl
or
mov
mov
add
mov
xchg
pop
and
add
mov
xor
jmp
and
adc
add
xor
sbb
xor
loop
test
pop
cmpsl
cmpsl
pop
pop
xchg
ja
testl
add
dec
xor
test
cmc
das
test
loopne
repnz
icebp
shl
pop
iret
sub
add
xor
test
push
fisubs
ds
pop
into
jl
mov
mov
add
rcl
sub
fstpl
xor
cltd
adc
popa
add
popf
push
aam
pusha
adc
mov
mov
add
sbb
je
stos
inc
mov
in
mov
or
cmpsb
inc
mov
sub
test
adc
cmp
in
xchg
pop
xchg
faddl
sbb
pop
jg
xchg
shlb
cltd
mov
cmpsb
mov
add
adc
repnz
mov
cmpsl
mov
mov
test
loop
lret
ja
out
mov
or
add
or
sbb
inc
mov
aas
loop
out
test
jecxz
inc
sbb
movsb
add
sub
cmp
mov
xchg
push
mov
mov
shr
adc
add
fldcw
mov
dec
sub
push
addr16
sbb
cmp
mov
mov
cmp
mov
sub
rcll
ja
int3
in
mov
xchg
and
mov
mov
and
sub
andb
int
cmp
cmp
adc
mov
xor
and
ljmp
sti
xor
adcl
cmp
add
pop
xchg
mov
xchg
mov
add
xchg
cmp
mov
adc
fcomps
jmp
xor
add
adc
push
or
adc
loop
mov
test
add
inc
es
loop
jl
xor
mov
xchg
jge
les
push
rcrl
or
ret
xor
xchg
and
pop
cmp
arpl
loop
fcoms
repz
scas
add
push
cltd
lahf
hlt
mov
jae
mov
mov
pop
movsl
bound
pop
add
addl
out
lods
adc
movsb
push
ja
jne
or
test
mov
insb
xchg
add
xchg
xchg
fcoms
inc
icebp
nop
adc
add
jnp
cmp
inc
xchg
outsl
lret
in
jmp
xor
ss
cmc
mov
cs
xor
inc
aaa
test
les
sub
rorl
xchg
cmp
mov
pop
inc
jecxz
sti
push
push
mov
pop
mov
adc
js
movl
mov
jge
xchg
adc
and
adc
sti
add
and
rcrl
or
add
les
jnp
fldt
or
mov
jmp
cmp
xchg
or
aaa
ret
jmp
xor
test
xor
mov
inc
cltd
mov
add
andl
or
sub
out
adc
push
mov
into
ret
mov
cmpsl
mov
xchg
cmp
out
xor
int
push
cmpl
loop
push
test
lods
lods
mov
cwtl
repz
int
loop
adcb
cmpsb
mov
mov
mov
push
add
fwait
cltd
mov
mov
int3
outsl
pop
clc
testl
ss
xchg
dec
jg
sub
data16
mov
pop
lahf
sbb
inc
adc
clc
pop
in
aas
ret
add
and
mov
cmp
xor
inc
push
add
pop
mov
test
add
shlb
loope
fistpll
pop
jbe
mov
xor
pop
sbb
test
adc
sbb
lea
lcall
mov
mov
adc
jl
rorl
add
mov
imul
mov
stos
add
sbb
insl
mov
adc
sbb
test
add
ret
into
outsb
popf
popa
sbb
add
cmp
inc
mov
cmp
adc
jge
mov
sub
mov
pop
loop
pop
add
or
xor
adc
jge
and
pop
arpl
ss
xor
xchg
jns
jecxz
mov
pop
xchg
scas
push
jno
add
not
mov
ret
shrb
add
leave
sti
lods
adc
rcll
js
pop
pop
sbb
mov
adc
repz
nop
pop
loop
shl
movsb
fsts
add
pop
nop
cmp
cmp
daa
movsl
pop
adc
mov
adc
inc
mov
dec
adc
outsb
mov
sub
pop
add
mov
mov
cmp
xchg
sub
arpl
js
cmp
xor
in
jge
xchg
add
sub
test
sti
add
scas
fldt
mov
add
aas
add
cld
jmp
mov
add
test
xor
pop
add
test
and
aad
sti
mov
adc
ret
xchg
mov
inc
dec
aas
test
mov
fdivrl
inc
sub
sbb
loop
out
lds
sbb
mov
popf
xor
mov
jecxz
cmpsl
fcompl
out
btc
lock
stos
cmp
mov
add
in
mov
mov
mov
js
inc
loopne
pop
xchg
xor
xchg
add
addb
sbb
stc
add
cltd
dec
outsl
mov
xlat
lods
add
sub
mov
add
int
nop
loope
mov
add
iret
cmpsl
mov
je
add
inc
sbbl
pushf
mov
lea
xchg
or
mov
mov
insb
in
adc
push
test
push
push
cmpsb
sub
stos
dec
mov
mov
fnstcw
jl
repz
pusha
jg
std
add
ficomps
sahf
mov
aas
mov
add
scas
inc
out
loop
out
fwait
push
jl
pushf
sbb
sbb
test
inc
jnp
sbb
cmp
ljmp
stos
push
pop
cmp
out
inc
arpl
and
mov
hlt
mov
adc
lahf
jg
js
sbbb
dec
add
push
outsb
push
add
mov
jnp
popf
insb
mov
std
push
mulb
fisubl
sbb
and
mov
xor
std
arpl
and
sbb
fnstenv
sahf
aaa
test
add
add
aas
jmp
mov
jge
ret
sbb
lock
imul
psrad
cmp
cmpl
std
inc
sar
scas
pop
cmp
mov
divb
add
lods
mov
loopne
mov
mov
out
pop
scas
lahf
popf
pop
fprem1
loop
adcl
sbb
es
or
pop
dec
std
jmp
loopne
add
and
ljmp
mov
add
mov
mov
xchg
mov
insb
xchg
fldl
shlb
jnp
mov
dec
sub
add
fcomip
mov
ja
or
mov
loop
std
mov
add
add
lahf
cwtl
andl
je
aas
jns
add
add
hlt
jl
sbb
cmp
push
out
out
inc
jne
jmp
cmc
xchg
adc
ds
dec
in
and
popf
push
add
sub
insl
test
push
mov
jp
lds
in
pop
or
push
inc
xor
stos
sbb
xor
pop
dec
dec
sbb
adc
data16
rcll
in
and
scas
adc
add
push
pop
add
or
or
ret
and
lret
lods
pushf
jg
mov
pop
mov
cmp
mov
add
push
add
add
add
add
fists
adc
mov
sbb
fidivrl
pusha
mov
loope
inc
jecxz
icebp
xchg
adc
stos
imul
lsl
repnz
mov
je
mov
fcoml
aad
addr16
mov
movb
daa
jo
scas
add
movsl
push
enter
sub
rcll
in
and
adc
mov
out
pop
jae
jle
sbb
rolb
or
pop
jmp
stos
add
pop
sbb
rolb
push
test
data16
cmp
pop
dec
cmp
cld
dec
repnz
sub
clc
cmpsl
in
mov
and
fists
mov
jno
mov
xchg
inc
loope
in
es
fdiv
push
sub
cmc
push
xchg
push
rorb
lret
add
cmp
fstl
mov
test
inc
andl
popa
push
aad
mov
cmc
jl
sub
add
mov
shr
fiaddl
stc
jns
sub
loop
rcrl
or
push
leave
lods
adc
repz
add
add
pop
scas
fnstcw
jl
test
mov
dec
fucom
push
sbb
es
out
mov
jmp
repz
mov
add
jbe
cmpps
in
cmc
cwtl
aas
popa
xchg
add
pop
in
es
and
mov
icebp
test
dec
inc
jo
loop
dec
movsl
mov
xchg
push
sub
push
ljmp
mov
gs
adc
add
add
dec
cmp
push
in
or
cmp
hlt
push
je
mov
mov
mov
and
test
and
sbb
sbb
sub
ret
aas
push
popf
jecxz
jg
xchg
das
add
ror
jbe,pt
movsb
add
lods
sbb
mov
das
cmp
jl
movsb
out
loope
aaa
rclb
or
mov
loop
sub
jge
repnz
mov
popa
add
cmpsl
jbe
and
repnz
sbb
addr16
mov
adc
mov
adc
mov
roll
xorb
add
push
cmp
call
popa
mov
mov
daa
jo
push
cmp
add
push
push
xchg
add
mov
mov
mov
xor
pop
fadd
add
mov
mov
mov
and
or
pop
pop
rcll
lds
xchg
sti
es
stos
arpl
cld
loop
scas
inc
arpl
test
mov
fs
push
imul
jle
daa
mov
loope
inc
mov
bound
pop
pop
add
and
adc
adc
dec
xchg
in
inc
minps
insb
push
insb
lcall
sbb
enter
in
sbb
ret
cmpsb
xchg
stos
aas
jecxz
test
pop
into
and
lea
adc
sub
adc
xor
lods
es
aad
stc
std
dec
roll
cmp
xchg
dec
pop
fcomps
and
pop
add
into
rclb
in
cmc
das
ja
jbe
xchg
push
movsb
aas
idivl
fbld
sbbl
std
cmp
fmull
and
addb
roll
pop
add
mov
loop
lea
test
mov
add
add
shll
xchg
add
f2xm1
les
imul
pop
addr16
leave
push
jno
pop
in
or
dec
mov
bound
mov
sub
and
xchg
xchg
add
add
jbe
pop
jl
adc
test
mov
adc
add
and
lds
stos
sbb
ljmp
add
jle
adc
cwtl
sahf
sub
add
xchg
mul
cltd
dec
emms
lods
mov
or
jnp
xchg
hlt
push
cmc
push
decb
cmpsb
dec
fcmovbe
inc
fimull
cmp
sbb
repnz
imul
test
jl
ja
mov
push
or
lods
imul
gs
push
ljmp
mov
dec
sahf
cwtl
xchg
sub
addr16
pop
jns
inc
cmp
or
fwait
arpl
inc
inc
sbb
out
sbb
pop
icebp
test
ret
pop
bound
jecxz
loop
cmpb
mov
push
push
or
or
pop
push
pop
pop
repnz
mov
lods
ss
add
in
jle
sbb
ficoml
fildll
mov
insl
lret
cld
sbb
test
or
lahf
test
pushf
fsub
lods
fwait
sub
imul
jl
fmull
fwait
xlat
loope
pusha
xor
cmc
and
jo
mov
push
repnz
out
sub
pop
lret
pop
mov
mov
andl
sub
stos
sbb
fcompl
adc
add
stos
cld
insl
sarl
popf
js
jge
pop
mov
add
cmp
mov
mul
push
shl
popf
mov
inc
pop
into
pop
movb
sbb
mov
and
out
push
mov
in
mov
mov
mov
scas
pop
popl
pop
push
insb
mov
and
lret
jge
mov
add
rorb
pop
cmpsl
rolb
icebp
outsl
pop
dec
stos
dec
xchg
aas
add
lods
pusha
mov
mov
outsl
in
sti
fsts
rcr
pop
mov
out
scas
call
addl
add
jbe
rolb
fidivrs
or
and
dec
ret
pushf
insb
push
gs
ret
sub
mov
test
jp
jg
dec
movsb
add
push
aam
jge
gs
sar
movsb
mov
cmpsl
into
adc
cwtl
fadd
loope
insb
mov
xchg
aad
jmp
add
and
int3
jmp
dec
mov
xchg
jg
sbb
icebp
fsubr
push
in
fiadds
mov
leave
movsl
dec
andl
test
sbb
or
pop
push
or
movsb
ret
mov
add
push
fdivp
sub
mov
pushf
adc
sbbb
rorb
in
imul
cmp
sbb
repz
dec
jl
xor
fadds
push
adc
cmp
inc
push
and
rcrb
and
fs
outsb
popa
adc
pop
pop
hlt
and
notb
fnstsw
adc
add
mov
mov
push
inc
mov
inc
inc
xchg
cmp
loopne
add
adc
leave
fwait
testl
das
outsl
xchg
jnp
lcall
add
and
add
xchg
cmpsl
push
aam
pop
sbb
in
cs
shlb
add
adc
mov
hlt
bound
sub
mov
xor
pop
and
stos
das
mov
jb
loop
mov
popf
es
jnp
mov
call
inc
sbbb
stos
lret
mov
pop
xchg
xchg
push
add
scas
imul
fsubrs
das
or
add
insl
ss
sbb
lahf
insb
fisubs
xor
sbb
stos
fs
add
xchg
outsb
jl
xor
xchg
inc
aam
cli
popf
movsb
enter
adc
push
inc
push
scas
out
lds
ret
mov
popf
adc
sbb
cs
lock
cld
sbbb
sbb
fisttps
push
mov
mov
pop
adc
cmp
int3
mov
and
or
data16
adc
jge
addb
lea
clc
cmp
cmp
and
ss
push
ret
test
dec
dec
push
lock
jmp
add
lods
inc
push
add
mov
sub
add
push
int3
cltd
or
lret
data16
xor
xor
pop
cmpsb
fnstenv
xchg
mov
insb
fisubrl
sbbb
cmc
push
xchg
pop
cltd
roll
out
pop
inc
test
mov
pop
push
pop
fiadds
pusha
sbb
mov
in
cmp
pop
adc
cmp
mov
jecxz
mov
add
in
inc
rolb
mov
mov
clc
sub
adcl
sahf
cld
jecxz
add
insl
rcll
add
bswap
and
cmc
orl
pop
add
dec
aas
bnd
add
mov
mov
push
pushf
filds
mov
ljmp
repz
jbe
loopne
inc
adc
lock
inc
les
ja
push
repnz
cmp
push
sbb
fs
fnstcw
and
leave
sbb
ljmp
sbbl
push
push
fs
pop
sbb
std
neg
cmp
add
jns
xchg
ret
add
mov
cmp
pop
mov
inc
xchg
mov
dec
pop
xchg
pop
mov
cmp
call
inc
cld
add
les
imul
jecxz
or
add
or
fwait
sahf
mov
fidivrl
cmp
adc
loope
sarl
pop
adc
jmp
popf
xchg
aad
jae
shrb
jecxz
js
cmova
or
mov
and
pushf
xchg
pop
jns
xchg
idiv
xorl
enter
cmp
sbb
repz
add
jno
test
bound
add
loop
in
push
pop
adc
mov
add
stos
jmp
sbb
and
insb
or
and
shll
adc
mov
das
push
add
lods
std
mov
add
add
adc
clc
and
sbb
outsb
cmp
hlt
cmp
cli
repz
pop
mov
mov
in
mov
ret
ficoms
fwait
fs
cmc
sub
add
or
stos
adc
lret
je
cmc
aam
mov
jnp
cwtl
adc
fsubs
repz
lret
add
sub
jl
fwait
iret
test
clc
fadds
xchg
dec
mov
cmpsl
mov
push
add
addr16
pop
inc
sbb
fcomip
loopne
xchg
add
add
sbb
add
cmc
and
add
pop
std
mov
add
clc
sbb
bound
stos
int3
call
jae
rcrl
mov
jo
bound
roll
add
push
popf
sbb
data16
pusha
push
stc
imul
mov
scas
stc
sarb
js
jmp
pushf
in
cmpsb
pusha
cmp
and
xchg
out
mov
xchg
jno
rcl
sbb
add
stc
xchg
adc
push
and
xor
cmp
in
cmp
or
push
mull
add
cli
pop
sahf
mov
ljmp
or
push
and
xchg
add
inc
sub
xor
pop
inc
inc
shlb
jbe
dec
test
adc
dec
adc
enter
xchg
add
add
push
lret
lcall
mov
cmp
push
jne
dec
cmp
sub
dec
add
or
sbb
push
dec
jge
jns
xor
out
es
aam
sbb
cwtl
lcall
test
outsb
cld
add
xchg
movsb
mov
mov
push
pop
cmp
nop
jno
sbb
adc
sbb
mov
xlat
adc
repz
fwait
rorb
add
int
cmp
in
sti
jecxz
nop
xor
lahf
fmuls
sub
mov
add
and
jg
rcrb
push
test
inc
xlat
filds
sub
xchg
ret
push
gs
push
cmp
lcall
sub
adc
inc
loop
add
mov
push
loop
add
fists
arpl
xor
xchg
add
mov
xorl
jl
fmuls
ret
adc
inc
inc
push
mov
into
aas
add
iret
xchg
inc
xchg
dec
add
out
xor
fsubr
adc
add
test
push
addr16
sbb
mov
rol
mov
loopne
mov
pop
popl
push
jg
push
adc
das
rolb
lahf
sub
mov
gs
jnp
pop
scas
push
push
fsubrl
addr16
and
or
cltd
mov
push
fdivp
and
add
xor
dec
add
inc
pop
cmp
leave
cmpl
push
ja
icebp
pop
pop
xor
lahf
adc
push
ret
sub
jmp
add
mov
sbb
out
add
or
pop
hlt
outsb
xor
add
sub
int3
add
add
mov
inc
cmp
pop
inc
xchg
cmp
push
add
mov
stos
nop
add
loop
into
jmp
test
sbb
mov
sbb
xchg
add
ljmp
es
mov
sbbl
filds
dec
jge
inc
mov
lds
sub
fs
pusha
outsl
xchg
loop
aam
push
add
pop
adc
int
pop
add
cmc
jo
inc
lret
neg
jmp
clc
imul
or
out
cmp
fsubrl
into
mov
cli
ret
xor
addr16
das
mov
add
push
mov
push
das
fisubrl
repz
lds
je
add
xlat
imul
icebp
push
xchg
and
pop
xchg
les
fisubl
pop
negb
ror
pop
or
ret
sub
into
cmpsl
add
test
pop
pushf
pop
add
sar
mov
xlat
or
add
sbb
fisttps
add
pop
jg
outsl
sub
push
and
mov
icebp
leave
adc
jl
inc
adc
lods
fsubrs
orl
inc
xor
popf
add
aaa
sub
and
mov
icebp
test
fs
add
mov
lods
rcrb
pop
mov
in
shl
pop
ret
add
shrl
pusha
mov
aaa
add
repz
cmpsl
aad
jno
inc
lods
loop
push
adc
add
cmc
mov
xor
fwait
add
test
cmp
adc
adcb
ds
stos
mov
inc
dec
daa
pop
pop
mov
popa
in
cwtl
loop
fisubs
stos
mov
pop
xor
sti
push
popl
mov
push
jne
loop
sahf
bound
dec
lcall
cld
fs
pop
xlat
pop
icebp
adc
divl
out
and
cli
arpl
daa
out
jle
fwait
mov
test
inc
jno
add
dec
mov
push
or
ss
push
inc
jno
mov
inc
imull
jbe
rcll
jle
mov
xchg
testl
mov
sbb
jp
add
adc
xor
jg
inc
xchg
sbb
lret
jmp
jbe
repnz
dec
imull
shlb
and
les
pop
jo
std
in
adc
movl
adc
jecxz
inc
mov
ljmp
push
mov
imul
xor
mov
and
push
ss
mov
popa
inc
pop
push
or
inc
lds
pop
daa
dec
or
push
ret
or
sahf
add
push
mov
ljmp
jo
adcl
add
jne
mov
jle
mov
repnz
aas
xor
out
int3
jnp
sbb
outsl
shlb
jbe
test
xchg
ret
adc
hlt
rolb
shll
sub
push
nop
or
adc
xor
xor
sti
xor
jns
adc
jae
add
mov
ljmp
xor
stc
inc
mov
inc
push
lds
stc
movsl
inc
por
pusha
mov
sbb
in
push
jge
mov
jnp
pop
xchg
xchg
jl
inc
sbb
dec
pop
mov
mov
jnp
movsb
test
scas
pop
add
lea
xorl
add
aas
sub
setno
push
testl
aas
or
pop
jp
push
insl
sub
lret
pop
xchg
cmp
sub
xchg
loopne
add
push
push
sbb
call
adc
pop
es
test
sarb
add
shl
in
mov
bnd
push
nop
adcl
add
shll
inc
mov
jbe
or
add
lahf
loop
inc
push
jo
jle
in
xchg
in
je
js
adc
leave
addr16
int3
add
jne
cmp
mov
add
loop
scas
fsub
add
stos
ljmp
inc
imul
icebp
popf
into
push
and
loop
adc
sbb
cmpsb
imul
jge
fsubrs
mov
orb
mov
push
inc
bound
fwait
lods
jge
insl
sub
add
adc
xlat
leave
jle
das
lret
andl
data16
mov
pop
popa
pop
xor
cld
sub
icebp
mov
loope
push
cmpsl
add
add
and
adc
pop
or
jo
daa
and
or
pop
sbb
add
loop
cmc
shlb
dec
lret
or
cwtl
or
add
xor
cmc
dec
sbb
lcall
jns
orb
call
in
ja
cltd
or
sbb
loope
xor
cmpsb
xor
data16
push
test
jle
pop
repz
popf
adc
lret
testl
cltd
xor
push
inc
push
and
xchg
sub
xor
inc
or
or
jecxz
popa
inc
ja
add
fistps
pop
xorb
or
adc
lcall
add
inc
sub
mov
mov
ret
cmp
or
aam
imul
cltd
fdivl
es
stc
and
xchg
insb
push
lret
leave
add
roll
mov
push
jns
mov
and
aam
mov
call
xchg
mov
mov
adc
add
test
add
inc
jno
mov
cmc
or
or
xor
mov
cmp
test
adc
mov
stos
loop
mov
xor
xchg
or
add
xchg
push
in
or
jb
jmp
lock
jecxz
adc
mov
xchg
jge
dec
iret
in
imul
cmpsb
xor
lcall
outsb
sbb
mov
icebp
fs
inc
sbb
std
test
fadds
test
cld
dec
out
mov
in
pop
push
out
add
in
or
xlat
cmp
lahf
push
repnz
pop
sbb
add
adc
lret
lds
add
int
add
stc
push
mov
mov
mov
xchg
mov
cmp
mov
fisubrl
push
ss
cli
mov
mov
or
or
mov
push
repz
scas
push
lds
imul
add
int3
xor
jg
leave
mov
cmc
and
mov
add
aam
pop
jo
sub
ds
push
lsl
add
ret
lret
and
icebp
sbb
loopne
mov
fadd
cmpsb
in
fs
add
std
jmp
adc
and
pop
jge
jbe
pop
cs
roll
pop
xor
and
in
inc
adcl
hlt
jno
mov
cli
push
mov
dec
addr16
into
mov
inc
movsl
xlat
and
xor
inc
lahf
lret
dec
lahf
adc
addr16
jle
inc
xchg
and
cmp
mov
sub
push
loopne
inc
ljmp
sbb
cmp
rcrl
xor
xorps
add
ret
jb
adc
push
push
push
fdivs
inc
cmp
inc
mov
adc
pop
fnsave
push
das
push
sub
orl
xor
bound
mov
lret
xorl
adc
and
out
lahf
fs
add
add
out
lods
xlat
cmpsb
aam
sar
jbe
stc
and
add
mov
add
add
cmc
push
cmp
cmp
fldl
mov
xchg
aam
enter
adc
pop
aas
cld
test
ret
das
stos
push
das
inc
repnz
jmp
push
pop
les
sbb
incl
jecxz
repz
or
outsl
xchg
sub
aas
mov
sarb
aaa
sbb
out
arpl
push
add
dec
cmpsl
add
subl
add
ficompl
add
sbb
icebp
mov
fcoms
leave
daa
add
xor
xor
pop
jbe
pop
inc
bound
jp
add
ret
jecxz
jecxz
andb
add
test
ret
dec
pop
mov
add
les
push
push
cmp
mov
push
outsb
adcb
and
stc
dec
daa
add
aam
enter
fildll
movsl
adc
or
adc
xor
mov
enter
adc
jp
pop
aas
mov
xchg
mov
imul
adc
cmpsl
add
addr16
adc
add
or
mov
add
jp
aam
loop
jmp
ss
push
cmc
cli
psubq
out
inc
inc
xor
loop
jecxz
hlt
and
negl
loop
lds
icebp
and
and
pop
mov
adc
shlb
daa
add
dec
sar
add
sbb
add
fnstcw
adc
daa
adc
add
add
jnp
sub
xor
popf
and
loop
lret
sahf
pop
dec
or
push
fldenv
cmp
popf
in
mov
test
add
add
and
icebp
xor
inc
loop
in
xlat
mov
cld
sub
mov
lret
mov
nop
aas
sbb
sub
shll
test
insl
mov
add
lods
sbb
jb
add
xchg
adc
pop
mov
out
insb
loopne
add
push
fisubrl
and
sbb
aam
lea
fninit
jb
filds
roll
jo
sbb
inc
outsb
lds
jno
add
jb
inc
sbb
mov
adc
inc
rolb
je
push
std
mov
loop
pop
add
test
mov
sbb
add
adc
bnd
xor
xchg
jecxz
rolb
pop
add
inc
out
out
add
add
sbb
xor
adc
mov
fdivrs
add
orb
test
push
loop
inc
xchg
addr16
xchg
mov
jbe
iret
pop
mov
cmp
aaa
ss
sub
add
fisttps
mov
repnz
pusha
mov
and
mov
or
add
jno
add
mov
jne
std
test
and
rorb
cmc
add
mov
inc
push
pop
loop
les
cmpsl
lret
sbb
mov
in
scas
push
xor
inc
fcmovnu
push
jb
into
sahf
mov
sbb
in
mov
xor
shlb
jmp
mov
sbb
xchg
jns
mov
fisubl
adc
andb
leave
add
dec
and
or
push
sti
and
adc
push
sbb
jecxz
fs
xor
repnz
inc
loope
sub
cmp
xor
andb
lea
in
out
and
adc
ljmp
test
pop
data16
daa
rcr
mov
ja
mov
daa
and
inc
jnp
push
pop
cld
fbld
jl
ja
jb
and
push
ds
add
fs
sbb
or
mov
jbe
inc
jb
push
and
mov
outsb
sub
les
mov
mov
mov
add
out
sbb
push
nop
mov
in
int
and
pop
pop
pop
push
lret
lds
stos
xchg
jnp
dec
adc
out
ds
lods
scas
add
imull
les
repnz
inc
mov
or
leave
dec
add
add
sahf
add
mov
xchg
add
in
sti
imul
call
mov
xchg
mov
push
inc
inc
outsl
mov
cld
mov
mov
std
ja
repz
in
jp
or
popw
std
icebp
add
mov
jno
in
loopne
inc
cmp
lods
shll
mov
in
cwtl
cld
pop
int
jl
addl
xor
loop
inc
fdivrs
sub
push
xlat
ja
fstpl
xchg
out
int
push
and
inc
scas
ljmp
orb
loope
cmp
jle
dec
sarb
add
mov
add
test
sbbl
int3
adc
sub
or
outsl
adc
or
outsl
in
push
sbbl
add
mov
lcall
pop
fildll
loop
jne
jecxz
mov
add
sahf
mov
mov
adc
and
orb
js
xchg
push
add
jg
inc
adc
cmpsb
xchg
mov
xchg
xchg
jge
test
sbb
std
sti
inc
int
test
ljmp
repz
inc
adc
mov
aaa
movsl
dec
add
sub
fldl
push
mov
adc
aam
add
aad
das
shrl
lret
add
adc
sbb
sub
pop
sbb
shr
jae
xor
add
mov
cmp
and
push
add
in
and
mov
bound
mov
ret
out
push
push
inc
stc
out
xor
push
fsub
dec
andl
aaa
xor
adc
mov
and
xchg
adc
adc
push
or
dec
mov
mov
stos
rcr
add
jae
loop
fstpl
xchg
adc
jge
and
push
sbb
jae
and
lret
sbb
lahf
pop
loop
or
adcl
add
stos
inc
std
sub
adc
and
sbb
arpl
inc
scas
outsb
add
sbb
xchg
mov
mov
ret
add
jmp
jno
in
inc
imul
loop
and
and
inc
add
adc
incl
sub
arpl
or
add
enter
dec
cwtl
add
and
push
inc
jno
cld
jecxz
push
cli
test
push
push
movsb
pop
sti
add
int
scas
jns
sub
xchg
fwait
pop
push
dec
dec
jecxz
cs
mov
add
repnz
adcb
ss
popf
add
mov
rcll
xchg
add
in
and
ds
add
orb
hlt
or
les
add
or
or
fcomps
add
lahf
rcr
push
cwtl
push
repz
jns
sub
push
ret
repnz
or
jo
pop
push
cmp
pop
push
in
dec
mov
xchg
lcall
jbe
popf
fcomps
outsl
shrl
stos
loop
test
xchg
in
xchg
lret
test
inc
xor
adc
pushf
stos
sbb
mov
into
imulb
push
repnz
in
inc
faddl
mov
jbe
stc
xchg
adc
mov
push
jg
mov
inc
adc
xchg
add
mov
inc
fsubs
out
dec
pusha
int
jno
stc
cmp
inc
pop
and
dec
fsubr
add
les
sbb
inc
add
insb
dec
add
xor
es
aad
push
add
push
pop
test
and
add
loop
hlt
pop
notl
rolb
sti
push
dec
lahf
insb
and
sbb
add
add
iret
rcr
ljmp
mov
adc
and
dec
push
bound
movsb
pop
sbb
jb
sti
mov
mov
adc
fdivs
jle
add
sub
fdivp
jne
cli
sbb
mov
mov
adcl
testl
adc
popf
or
pop
mov
shrb
into
frstor
out
imul
aaa
add
mov
cmp
out
stos
ljmp
orl
xchg
shll
xor
add
stos
pop
nop
mov
popa
mov
loopne
jmp
loop
loope
mov
mov
add
jae
mov
xor
insl
add
jb
add
test
mov
into
pop
inc
add
das
in
mov
push
js
mov
out
andb
rorb
or
aaa
jg
sbb
adc
std
pop
aam
in
sub
daa
iret
or
and
mov
loop
pop
push
xchg
int
add
testb
loop
pusha
push
out
sub
push
insb
jno
loopne
fwait
mov
fstl
or
sar
or
add
movsl
sbb
loope
pop
add
adc
cld
xor
pop
loop
stc
movsb
add
in
jmp
mov
jge
daa
or
aas
or
dec
adc
cmp
push
imul
sub
xchg
mov
mov
fistpll
ljmp
xchg
sahf
or
push
daa
repnz
enter
push
ja
in
xor
pop
sbb
fwait
jmp
push
lods
popf
aas
jae
sahf
rolb
mov
adc
ret
jmp
sbb
adc
fisttps
inc
push
icebp
pop
xlat
inc
inc
jne
rolb
mov
icebp
idiv
cmp
push
mov
xchg
add
xchg
push
add
out
rclb
lcall
adc
lds
popl
fwait
mov
or
stc
sub
xchg
push
fmul
add
cs
cmp
inc
or
cld
pop
add
add
inc
xor
outsb
lods
std
add
mov
rclb
pushf
inc
das
push
loop
xor
push
push
jmp
add
inc
roll
sbb
or
or
aaa
add
mov
add
ret
lods
ret
notl
jle
lret
and
adc
adc
out
std
jb
sub
or
in
sbb
add
loope
adc
out
lock
lahf
or
int3
fimuls
add
mov
and
inc
in
adc
or
jge
mov
test
inc
movsb
inc
fbstp
jle
pop
dec
push
dec
mov
rol
push
push
add
inc
mov
lahf
jae
fmuls
adc
js
pop
fldenv
dec
mov
pop
popf
bound
xor
leave
pop
cmpsb
rcr
orl
add
push
pop
lret
adcl
jl
scas
adc
add
cld
lods
leave
sti
inc
xor
adc
in
repnz
mov
inc
fcoml
pop
xchg
mov
jb
or
fcmovnbe
jnp
les
adc
mov
or
negb
sub
fidivrs
pop
add
mov
or
aaa
inc
repz
mov
xchg
fmulp
stos
movsb
jg
mov
xchg
mov
das
jno
and
ljmp
ds
mov
mov
push
pop
popa
bound
cmovb
jge
pop
or
xchg
inc
push
fistl
xor
lret
jmp
out
mov
or
rclb
mov
pop
xchg
je
dec
repz
jne
push
push
xchg
xor
gs
jns
sbb
aas
jbe
loope
cltd
subb
mov
or
fmuls
mov
mov
int3
pop
sub
push
pop
push
jp
add
movsb
add
out
idivb
mov
aaa
xor
push
sbb
cwtl
add
ret
jle
cmp
push
sbb
inc
pop
mov
adc
add
adc
mov
xchg
in
addr16
jae
add
mov
in
add
enter
sub
add
xorl
jo
scas
pop
xchg
mov
jmp
mov
add
inc
inc
xchg
shlb
mov
inc
es
movsb
pop
adc
xor
sub
xor
ucomiss
ret
push
xchg
mov
clc
fst
nop
and
fcomps
sbb
and
imul
pop
sti
loopne,pn
or
inc
repnz
test
push
outsb
and
loopne
or
rorb
pop
inc
or
pop
lret
sub
outsl
add
jge
inc
cmovo
int
mov
jo
pop
and
or
mov
add
xor
xor
add
push
les
shll
xchg
call
xor
xchg
mov
insb
pop
nop
add
or
pop
pop
movswl
ret
push
and
cmp
shlb
in
cmpsl
ljmp
push
cmp
lods
ret
pop
xor
out
add
cwtl
scas
mov
bound
jmp
xor
sbb
push
mov
aaa
mov
jmp
daa
idivl
jnp
insl
push
adc
loop
call
mov
sahf
jne
ds
in
xchg
add
dec
mov
or
adc
add
jle
jns
sub
sub
lea
add
mov
stos
inc
test
ds
leave
mov
adc
inc
scas
mov
xor
xstore-rng
cmpsl
adc
add
in
test
xlat
mov
hlt
repz
mov
ja
push
fmull
fildl
cltd
loope
test
add
xchg
gs
shrl
xor
pop
add
notl
iret
hlt
sar
outsl
inc
cmp
rdpmc
or
or
fimull
push
clc
pop
dec
push
addl
push
pop
lcall
or
cld
jle
mov
mov
or
sbb
in
jno
ret
cli
xchg
adc
and
xor
xchg
inc
xlat
lret
int3
movsb
lods
fsubp
adc
add
fcmovne
jbe
cmp
dec
pop
xor
add
jno
ret
add
and
add
shr
lret
test
mov
jno
aad
or
mov
stos
call
sbb
sbb
sub
sbb
add
push
lods
ja
sbb
icebp
aas
aad
add
jp
or
stos
aas
nop
insb
stc
add
out
mov
mov
dec
std
or
mov
fwait
add
mov
inc
jns
cwtl
mov
cmp
in
sbb
lret
shr
pop
inc
mov
add
stos
mov
jae
add
sahf
insl
aam
and
push
push
pusha
xor
adc
rorb
in
adc
dec
push
mov
std
sub
cmp
sahf
jns
fisubs
psubw
ret
mov
adcb
cmp
out
out
addr16
xchg
loop
imul
stos
sbb
fsubr
jmp
std
xor
aad
lret
test
mov
sbb
inc
call
iret
test
mov
shl
sahf
mov
or
jae
cwtl
sbb
add
push
cmp
mov
call
test
sbb
or
adc
xlat
aaa
repnz
and
imul
nop
adc
in
cmc
mov
shlb
push
mov
lahf
add
int3
ljmp
sbb
in
bound
adc
pop
mov
rcrb
cmpsb
pop
add
ret
inc
mov
pop
and
popf
inc
insl
mov
pop
add
sbb
adc
cmpb
addr16
xor
xchg
dec
cld
fldt
add
xchg
mov
mov
and
mov
adc
push
dec
push
sub
mov
loope
push
add
test
aas
sbb
fsubrl
xchg
push
les
mov
push
lea
loope
sub
sbb
rclb
bound
adc
mov
loop
jp
and
sarb
imul
add
inc
test
mov
fsubl
or
inc
mov
call
inc
sub
test
stos
sahf
dec
adc
in
sbb
mov
sub
in
mov
pop
mov
sub
shlb
inc
add
jl
xor
mov
sti
dec
jg
adc
or
xchg
add
mov
stos
inc
pusha
arpl
add
outsl
mov
pop
pop
rcrb
dec
jne
push
jns
in
mov
add
mov
mov
mov
repz
jge
bnd
int
mov
loopne
sub
fbstp
pop
lret
inc
cmp
pop
movsl
xchg
out
bound
jbe
lret
xchg
ds
pop
cmp
add
in
fs
add
loope
jecxz
jns
sbb
data16
and
roll
push
iret
dec
int
stc
test
out
mov
test
aad
lods
dec
mov
mov
jp
xchg
inc
lret
pop
xor
sbb
and
push
popf
out
and
idivl
stos
push
xchg
push
mov
or
xchg
ret
lret
je
loop
loope
lods
arpl
fwait
mov
shl
xchg
cltd
lea
pop
in
bound
ret
lea
cltd
lods
adc
jno
sbb
test
mov
push
js
cmp
add
pop
int3
insl
dec
arpl
jb
or
icebp
rol
pop
xchg
jns
xor
neg
arpl
hlt
ljmp
sub
enter
rcrb
loop
sbb
fmuls
add
adc
mov
jno
rorl
mov
push
icebp
lcall
pop
push
adc
rorb
lahf
add
jg
cmp
clc
in
std
out
mov
xor
xchg
add
cmp
jg
push
icebp
jb
sti
and
gs
sbbl
mov
test
xor
add
dec
add
inc
push
or
shl
push
pop
add
sti
data16
add
das
icebp
add
dec
dec
jecxz
addr16
push
push
mov
add
in
and
adc
in
push
pop
lea
fildll
cmp
adc
lods
add
repnz
push
jb
fucomp
adc
inc
out
inc
rol
push
arpl
call
or
fcmovbe
xor
loope
xchg
adc
inc
xlat
push
dec
and
ljmp
jecxz
loopne
adc
lods
and
cmpsb
inc
inc
xchg
cmc
or
mov
ds
add
rcrb
lret
and
in
nop
cmp
mov
inc
and
mov
in
sbb
xchg
add
pop
adc
fcompl
and
outsl
cmp
js
fimull
aam
sub
mov
inc
add
popa
scas
jne
fwait
imul
insb
add
cli
fprem
loopne
pop
loope
inc
add
jnp
pop
and
mul
cwtl
ljmp
fdivl
and
lods
lahf
xchg
add
and
loop
add
push
pop
and
ret
loopne
mov
gs
ja
mov
sub
in
mov
push
mov
add
cli
push
jle
inc
sbb
jb
out
mov
mov
dec
popf
popf
dec
lds
inc
pop
pop
inc
mov
or
xchg
adc
add
rcrl
sbb
push
xchg
movd
inc
shrl
cmc
xchg
andb
cmpsb
push
mov
clc
push
mov
gs
xchg
icebp
xchg
sub
xor
or
or
test
adc
jae
push
in
gs
pop
jecxz,pn
stc
rcll
adc
pop
loopne
pusha
push
sti
adc
icebp
or
pop
mov
or
cld
cmpsl
xor
add
ja
xchg
repnz
shrl
jg
or
outsb
push
in
cmpsb
ljmp
pop
or
and
pop
mov
mov
imul
nop
stos
testb
jb
jns
pop
xchg
jle
out
and
ret
push
mov
into
icebp
in
adc
inc
mov
or
fiadds
imull
imul
add
cmc
or
stc
add
xchg
inc
leave
sahf
icebp
aas
pop
cli
or
imul
movsl
popa
sbb
add
and
enter
cli
lods
shll
jae
loop
adc
pop
sbb
add
inc
lret
xchg
les
lods
sbb
push
idivl
push
outsl
sahf
mov
movsb
xchg
aad
nop
mov
adc
mov
add
mov
test
xchg
aaa
mov
and
jg
aas
scas
xor
mov
adc
mov
jg
out
lods
xor
sbb
scas
mov
popa
negl
and
aaa
les
loop
mov
dec
hlt
sbb
ret
cmp
xchg
sbb
aas
imul
int3
movsb
mov
sub
jne
repz
lret
sti
xchg
rolb
xor
cmp
mov
xor
mov
rolb
movl
push
fists
fmulp
daa
dec
testb
pop
xor
jnp
jbe
and
insb
dec
mov
add
add
test
xchg
or
mov
jmp
cmp
mov
pop
xlat
mov
jae
and
mov
mov
and
les
test
je
cmp
imul
repnz
sbb
and
mov
add
jmp
ja
and
push
adc
repz
jmp
dec
in
stos
add
push
xorb
mov
jl
add
aaa
mov
xchg
or
or
popf
scas
adc
scas
push
xchg
add
aas
nop
loope
or
jne
call
leave
shll
xor
mov
jae
mov
stos
and
jge
pop
mov
add
pop
andl
xor
ret
cmp
adc
sbb
xchg
test
add
or
mov
add
pop
mov
mov
push
inc
mov
mov
push
out
add
mov
and
cmpsl
adc
mov
mov
nop
ja
add
xor
mov
mov
mov
lret
daa
data16
in
into
rolb
dec
mov
stc
mov
stos
cld
mov
loope
out
wbinvd
pop
mov
xor
push
mov
stos
add
test
cmp
mov
mov
out
les
mov
and
cmp
aad
testb
or
ja
idivl
and
in
sub
jmp
loop
out
mov
jnp
add
fwait
ja
and
and
andb
add
notb
loopne
aas
sub
imull
outsb
pcmpgtb
adc
cmp
jae
mov
ret
or
cld
arpl
adc
cmp
mov
add
inc
xchg
lcall
jp
push
add
leave
mov
rcr
xor
hlt
sbb
cmp
xorb
sbb
adc
shll
mov
ret
imul
mov
ja
stos
outsb
mov
adc
add
adc
cld
add
int3
insl
push
mov
imul
enter
and
ss
adc
jmp
or
fildll
push
and
sbbb
mul
ljmp
inc
faddl
xor
rolb
or
mov
pop
mov
or
push
push
test
lods
add
pop
add
sbb
fistpll
mov
mov
and
aaa
xchg
adc
mov
push
or
fwait
lock
loop
popl
mov
add
mov
add
aaa
mov
mov
mov
mov
add
cmp
loop
xchg
aaa
inc
xchg
jne
mov
adc
cltd
nop
inc
jmp
fcmovbe
sti
aaa
xchg
add
insl
gs
add
data16
xchg
loope
outsb
test
add
or
dec
fwait
and
in
jmp
mov
xrelease
cmc
fdivr
insb
enter
jmp
mov
nop
sbb
aad
mov
int
add
and
mov
add
pushl
icebp
insl
xor
fildl
jmp
xchg
insb
add
cmp
jns
jmp
ret
and
loop
xchg
lret
or
nop
jmp
push
adc
lret
inc
cmp
lahf
insl
add
lcall
add
mov
add
arpl
mov
xor
xorl
movsb
or
je
and
push
jb
add
jg
addl
lock
lret
adc
add
push
nop
cmp
pushf
hlt
add
adc
push
cmpsb
repz
les
add
pop
push
mov
stos
ljmp
xlat
pushf
mov
or
test
rorb
xchg
mov
xchg
mov
mov
pushf
and
pop
mov
lea
cmp
icebp
enter
mov
xor
inc
inc
pop
stos
xchg
in
add
enter
mov
push
push
add
dec
adc
add
cmp
add
push
xor
add
leave
or
and
dec
mov
ljmp
aaa
add
dec
adcb
dec
icebp
mov
sub
mov
movsb
add
ds
add
and
sub
je
mov
adc
pushf
cmp
mov
test
repz
mov
add
cmp
loope
lcall
icebp
mov
cld
pop
add
inc
xor
orb
das
mov
jecxz
push
out
xchg
push
sbb
cmp
mov
xor
mov
xchg
popa
add
loope
lahf
daa
cmp
add
jmp
mov
and
das
sahf
pop
and
cltd
lahf
or
nop
mov
xor
sti
cmp
lret
xchg
push
mov
mov
or
cld
cmpsb
add
xchg
sub
jbe
dec
in
stc
lret
mov
pop
movzwl
pop
aam
stos
icebp
scas
mov
rorb
leave
xor
data16
sub
jb
sti
lcall
fs
xchg
dec
xchg
in
nop
repnz
leave
ret
test
push
loope
add
ret
icebp
mov
seta
sti
sub
andb
xchg
roll
add
mov
pop
push
adc
icebp
mov
xchg
cmp
in
into
fnstcw
xor
mov
mov
push
add
nop
sbb
popa
sbb
xor
add
push
loopew
and
ret
repz
sub
test
nop
mov
adc
js
cmc
mov
or
shll
mov
aas
scas
nop
cld
or
lret
loop
mov
mov
push
bound
popa
adc
xchg
or
and
test
push
cmp
jae
jle
inc
add
fcoml
mov
add
int3
push
call
xor
outsl
mov
rorb
push
and
sbb
add
cmp
fwait
xor
jl
and
push
xchg
sbb
sbbb
xchg
out
lds
andl
adc
shlb
ret
clc
test
add
mov
ds
pop
nop
dec
cmp
mov
lahf
andl
les
arpl
scas
mov
lock
in
push
mov
repnz
pop
mov
mov
scas
rcll
xor
and
sbb
inc
dec
add
pop
xchg
adc
sbb
xor
addr16
cmp
cmpsb
sbb
mov
lret
xor
sub
dec
addl
or
mov
mov
movsb
out
lea
je
add
sbbl
mov
test
jne
add
lds
test
mov
add
ja
pop
fstl
repz
imul
sbb
mov
inc
repnz
mov
das
aas
ja
pop
test
mov
in
sarl
add
mov
sub
adc
adc
adc
and
adc
and
out
push
movsb
scas
add
jbe
xchg
test
mov
out
mov
jo
lahf
cmp
nop
stos
or
sub
outsl
xor
jns
push
cmp
out
ficoms
in
xor
pop
lcall
adc
and
mov
movsb
ret
add
mov
mov
cmpsl
lods
mov
dec
nop
mov
adc
add
add
jae
in
add
lret
jmp
adc
leave
mov
add
rcpps
ss
sbb
popf
add
cmpsl
mov
fisttpl
pop
and
mov
ds
mov
sbb
mov
xchg
sbb
out
xor
arpl
dec
mov
xchg
lcall
shrb
loopne
jmp
add
sti
mov
subb
or
andl
inc
xchg
add
nop
xor
mov
test
inc
stos
add
inc
in
add
jmp
adc
add
stos
subl
sub
dec
xchg
imul
dec
test
stc
cmp
add
and
or
add
imul
arpl
cmpsb
mov
mov
jmp
insb
mov
insl
mov
add
inc
xchg
mov
push
lea
stos
or
stos
jmp
add
mov
imul
sbb
add
mov
addr16
js
pop
sbb
gs
mov
incb
rcrl
in
mov
adc
mov
mov
aam
mov
push
mov
mov
adc
sbb
mov
aaa
jne
push
and
insl
scas
icebp
push
sub
adc
jmp
scas
sahf
outsb
inc
add
nop
sahf
rcrl
sub
mov
mov
repz
loop
sbb
sbb
mov
or
xor
and
hlt
data16
sub
sbb
mov
inc
fnstenv
icebp
cwtl
xchg
das
pop
cmovns
inc
xchg
movsl
fists
adc
add
jns
nop
add
test
jl
dec
adc
pop
sbb
mov
ss
les
inc
pushf
nop
push
loope
inc
and
insb
popa
jo
and
flds
jae
dec
test
and
cld
stos
jmp
push
movsb
fmull
adc
scas
cmpb
xor
cmp
mov
add
test
mov
xor
add
pop
xchg
in
iret
daa
out
xchg
adc
push
push
adc
jmp
add
cmp
xor
xor
push
mov
das
mov
mov
mov
insl
cltd
xchg
mov
shll
fcmove
push
jbe
adc
sbb
jns
movsb
punpckhwd
push
fwait
popa
loopne
and
fbld
stos
arpl
mov
shl
jb
outsl
add
pop
cmp
add
lcall
add
je
pop
add
aaa
sbb
and
test
mov
sbb
push
lret
xchg
stc
sti
mov
add
xchg
jae
popf
pop
out
mov
sub
lsl
sbb
mov
mov
sbb
mov
push
cmp
pop
pop
jl
inc
repz
outsb
jmp
movsb
push
btr
mov
loope
lock
fwait
mov
scas
mov
sti
loop
mov
mov
add
xor
bndldx
adc
mov
outsl
dec
pop
push
add
mov
cld
pop
leave
mov
inc
cmp
sbb
into
pop
sub
sar
xchg
mov
inc
xor
add
test
loope
je
outsb
adc
inc
addl
cltd
mov
mov
call
adc
add
fwait
pushl
dec
jecxz
sub
loop
sbb
mov
push
stc
adc
or
mov
jge
xchg
add
inc
or
xchg
dec
xchg
add
push
mov
out
mov
aam
cld
aaa
daa
jae
mov
aad
in
adc
ja
jle
cmp
gs
mov
ljmp
cmpsl
dec
push
mov
inc
addr16
cmp
pop
cs
and
daa
and
dec
rcll
fisubrs
insb
pop
add
push
and
dec
add
add
or
mov
roll
movsb
in
cmpsb
leave
sbb
add
stos
xchg
cltd
dec
arpl
sbb
xor
jo
out
mov
xchg
das
mov
leave
outsb
stos
add
pushf
xchg
insl
in
mov
fs
xchg
pop
out
loope
call
or
mov
in
add
sub
push
mov
movsl
jo
mov
pop
jmp
outsb
mov
jb
jp
xchg
push
sbb
sbb
es
add
mov
int
mov
push
movq
push
mov
cmp
push
aas
in
jecxz
xchg
outsl
sbb
adc
fs
sub
repnz
cmp
pop
push
pop
out
cli
xor
je
jg
mov
enter
sbbb
add
mov
stc
lret
aaa
mov
add
mov
push
mov
mov
cltd
xlat
enter
repnz
in
mov
cmp
add
sub
mov
mov
lock
xor
sbb
fwait
mov
mov
mov
sub
xor
mov
cmp
ja
xor
and
sub
add
fdivr
mov
aas
insl
adc
jns
fwait
xor
and
out
cmc
movsl
jnp
cmpsl
jae
mov
adc
and
pmulhuw
divl
sub
sti
setns
xchg
add
enter
xor
mov
mov
sbb
shll
mov
add
fwait
scas
xchg
test
jmp
xor
stos
add
and
in
mov
outsl
xorl
loop
movsb
and
xor
subb
push
lock
loop
aaa
or
scas
in
clc
xor
bound
pop
dec
and
add
cmp
cltd
cmpsb
xchg
and
loop
lea
pop
out
add
jnp
nop
add
xor
mov
add
mov
mov
jnp
cld
xor
mov
xor
mov
jae
and
inc
xor
xor
push
adc
mov
lods
das
xor
and
push
add
mov
cld
mov
sub
loop
adc
push
mov
xor
xchg
mov
mov
add
push
pop
lock
and
mov
js
push
add
push
outsb
lods
add
mov
mov
test
xor
add
mov
out
and
bound
rclb
xchg
cmpsb
cmp
cmp
push
pop
add
scas
push
rclb
nop
iret
sbbl
lahf
ror
mov
mov
js
je
int
add
lcall
cltd
jl
inc
movsl
imul
mov
ret
and
popa
push
repnz
fisubrs
lret
mov
and
pop
inc
add
pop
mov
push
xchg
xor
mov
add
imul
add
fcmove
mov
mov
jns
xchg
sbb
adc
add
scas
dec
mov
daa
lret
js
jnp
or
push
and
jecxz
mov
dec
pop
mov
add
push
mov
xchg
lcall
jp
dec
movsl
fldenv
loope
test
add
or
jecxz
pop
xchg
mov
and
cltd
mov
daa
pop
adc
add
jb
xchg
fdivrl
add
push
sarb
add
xor
or
fcompl
out
add
inc
aaa
jnp
test
out
pop
stc
clc
push
pop
add
jb
and
pop
loope
inc
fistl
xor
out
mov
scas
or
jb
sbb
imul
add
push
mov
test
out
xchg
add
jmp
push
loop
dec
xchg
icebp
lahf
stc
nop
fwait
add
cmpsl
cli
cmp
outsl
les
xchg
ret
mov
stc
out
pushf
cmp
clc
inc
loop
xchg
iret
adc
cli
out
add
imul
mov
cmp
xor
push
es
add
rorl
mov
sbb
add
add
test
aaa
xchg
mov
xchg
sbb
mov
add
inc
mov
loope
adc
rcll
bound
add
mov
cmp
dec
mov
dec
test
imul
pushf
pop
cltd
adc
loope
stos
dec
mov
scas
mov
mov
jo
adc
cmp
mov
sub
add
in
pop
push
mov
and
fldcw
lods
and
xor
loop
jo
mov
cmp
or
jns
sbb
movsb
testl
ret
cmpsb
aaa
shll
jne
or
inc
add
and
das
sub
sbb
ds
cmp
nop
or
add
adc
xor
xchg
fucomi
ret
pop
cmpsb
test
lea
icebp
pop
jb
sub
nop
sahf
cmpsl
xor
and
mov
mov
sub
cmp
lret
pop
je
add
jno
mov
or
push
sub
pop
daa
sbb
mov
aas
roll
mov
in
leave
sbb
add
pop
outsb
mov
xchg
mov
and
cmp
lods
adc
dec
push
mov
imul
leave
loopne
sbb
xor
mov
andb
dec
aas
pop
lds
shll
imul
add
add
enter
xchg
jg
mov
mov
add
mov
add
jl
into
mov
cmp
add
lret
int
mov
inc
fnstenv
cmp
pop
jnp
xchg
mov
push
xchg
mov
add
mov
repz
leave
daa
int
fnstenv
jl
xor
cmp
mov
pop
sub
mov
aas
imul
add
add
mov
aaa
adc
add
loope
gs
xchg
add
lret
add
mov
and
push
addl
js
fnstsw
mov
mov
jmp
in
fwait
lods
sbb
mov
loop
mov
mov
pop
jg
rcr
or
pop
mov
sub
les
push
in
xchg
bound
enter
push
aaa
out
pushf
test
ljmp
mov
ret
sub
and
gs
pushf
loop
mov
jb
mov
mov
sub
jb
jo
sahf
into
test
mov
cwtl
jl
and
cmp
or
ret
mov
cmp
push
loop
lahf
lods
mov
push
test
cmp
sbb
mov
mov
push
and
sbb
or
cmp
mov
call
cmc
add
mov
loopne
sub
clc
and
test
push
or
mov
mov
test
mov
movsb
xor
cltd
xor
fwait
shl
or
lods
loope
lock
fdiv
and
sub
mov
mov
add
mov
inc
sahf
mov
mov
ficompl
add
outsb
mov
push
or
add
jno
cs
jae
add
xor
shll
sahf
mov
sub
out
cmp
outsl
dec
jno
mov
lods
rcrl
add
xor
out
scas
cmpsb
xchg
add
dec
scas
mov
dec
insl
stos
inc
push
push
andl
out
adcb
dec
xor
mov
xchg
stos
push
stos
imul
sarb
test
dec
ret
sub
loope
scas
out
bound
jle
aaa
adc
repz
dec
dec
mov
sbb
test
lahf
cmp
jecxz
rorb
add
int3
xchg
mov
lods
mul
mov
mov
sbb
insl
lock
pop
add
push
icebp
adc
adc
or
mov
mov
fstps
daa
xor
dec
push
and
mov
stc
repnz
dec
aas
mov
sbb
popa
pop
addr16
mov
out
mov
test
pop
decl
mov
repnz
sbb
jmp
adc
insl
call
xchg
add
xor
addr16
xor
mov
jle
mov
or
xor
mov
test
mov
cmpsb
and
cmp
jnp
mov
mov
cld
outsb
addb
js
push
sti
jb
nop
adc
xchg
fadds
mov
pop
inc
flds
test
and
scas
mov
shll
loop
je
pop
jecxz
insb
pop
add
cltd
mov
sub
mov
aam
ljmp
mov
sbb
and
jno
das
xchg
mov
add
test
ret
and
mov
sub
aas
and
andb
or
ret
insl
pop
stos
pusha
or
jo
loope
sub
xor
movsb
push
nop
or
pushf
jbe
xchg
das
jnp
add
fdiv
add
cmpsl
xchg
js
sub
aaa
or
mov
lock
inc
xor
je
out
das
adc
ja
lods
and
inc
mov
mov
add
test
add
imul
pavgb
cmpsb
jns
pop
mov
push
push
cmp
iret
push
mov
add
in
loop
scas
in
adc
xchg
outsb
sub
scas
test
loop
mov
jl
shll
hlt
add
sub
mov
xor
inc
lds
sub
cmp
mov
xchg
or
adc
ja
add
xor
outsb
mov
sub
add
scas
or
add
je
iret
loop
sbb
mov
dec
push
or
cmp
adc
xchg
test
sub
aas
jae
adc
xor
sub
adc
rcrb
add
mov
sbb
xchg
or
inc
ljmp
pop
xor
and
and
add
ret
mov
iret
pop
lods
xlat
and
mov
jo
xchg
add
inc
push
pop
inc
and
adcb
mov
mov
mov
mov
push
std
sbbl
test
jne
hlt
and
lret
or
and
pxor
test
dec
nop
xchg
xchg
sbb
lret
rep
mov
inc
cmp
fld
mov
mov
mov
xchg
mov
fisubrl
mov
mov
add
fwait
inc
adc
mov
or
jnp
and
cmp
nop
inc
lods
mov
jg
or
inc
mov
hlt
insl
and
jno
rorl
pop
push
gs
mov
cwtl
jae
add
xchg
sub
dec
cmp
xor
and
outsb
pop
push
sub
add
movsl
pushl
dec
cwtl
stos
jge
das
and
cmp
adc
icebp
mov
jecxz
pop
adc
mov
fisubl
mov
jg
inc
icebp
and
mov
mov
cmp
nop
cwtl
push
mov
rorl
pop
jo
jecxz
addr16
in
scas
orl
mov
jmp
jnp
aaa
adc
adc
popf
inc
test
add
int
sbb
mov
mov
sub
jno
notl
fdiv
aas
rcrl
paddsw
xchg
jle
xchg
push
or
adc
push
dec
inc
scas
loop
outsb
ja
mov
mov
sub
cld
cwtl
xor
inc
inc
sub
enter
sub
dec
pop
add
mov
mov
sbb
add
dec
push
dec
dec
sub
add
mov
repz
nop
mov
adc
mov
lods
out
adc
cli
shl
inc
push
frstor
jae
inc
add
jb
push
movd
xchg
sbb
cwtl
lahf
inc
mov
or
lds
add
cmp
add
pop
ja
ret
pop
push
mov
push
add
jg
add
insl
out
mov
mov
bound
loop
cmp
mov
or
mov
jnp
shlb
push
dec
or
cmp
xor
mov
jp
mov
addl
stos
push
sbbb
cmp
mov
sbb
rclb
add
mov
pop
andl
imul
xlat
pop
mov
mov
add
lret
xorb
shlb
ss
xor
mov
mov
nop
jmp
add
push
xchg
cmp
mov
adc
outsb
mov
sbb
mov
xor
cmp
jg
sbb
cmc
inc
in
fwait
mov
mull
jae
test
stc
cltd
rorb
bound
dec
mov
or
repnz
aad
inc
mov
ret
add
mov
roll
dec
loop
cld
aaa
fistpll
mov
repz
xchg
mov
lcall
adc
js
jg
xlat
sub
and
inc
push
out
add
adc
xchg
pop
popa
add
stos
lods
in
push
lock
mov
or
out
nop
add
pop
mov
push
xor
xchg
pop
mov
in
loop
mov
jg
adc
movsb
add
arpl
dec
mov
outsb
leave
cmpb
addl
insl
pop
adc
pop
rcl
out
cmp
adc
leave
inc
or
lds
add
lret
mov
and
arpl
add
push
dec
mov
dec
mov
sub
and
adc
inc
xlat
inc
cmp
adc
push
xchg
repz
add
inc
nop
das
shll
movb
xor
outsb
stos
fldt
mov
push
loop
imul
ds
xchg
aam
mov
adc
sbb
mov
add
mov
push
pusha
daa
add
lcall
inc
jl
and
test
cmp
ficoml
ljmp
pop
cli
fdivl
mov
mov
fisubl
cltd
icebp
ret
adc
cmp
out
xor
add
sbb
pushf
xchg
inc
add
jmp
pop
add
cmpsl
out
js
mov
xor
push
std
mov
je
into
add
rolb
test
pop
dec
mov
ret
dec
push
das
sub
sbb
push
jno
jne
jle
pop
stos
gs
add
xchg
sti
and
mov
out
add
arpl
push
cmp
add
inc
lahf
add
mov
xlat
aam
mov
stos
jno
add
add
mov
add
loope
jmp
cmp
adc
inc
sub
out
loop
loopne
sub
xchg
sbb
xchg
jb
add
sub
or
jge
iret
xchg
aas
cmp
popa
in
mov
mov
aam
dec
add
stc
adc
mov
fdivrs
push
stos
add
mov
and
ficoms
xchg
movsb
jno
aam
mov
pop
mov
sbb
add
nop
int3
push
add
insb
mov
lea
aad
jns
add
add
or
push
mov
lcall
push
mov
sahf
add
mov
stos
and
popf
aaa
dec
pop
sub
adc
roll
xor
xor
sub
pop
jmp
add
psrlw
add
std
mov
bound
adc
mov
inc
xchg
xor
pop
cli
add
aam
dec
add
enter
sub
or
pushf
xorb
jl
roll
addl
pop
add
xchg
mov
or
pop
mov
add
arpl
xor
cmpsb
andb
add
rcll
add
outsb
add
or
pusha
shll
jb
pop
stc
dec
or
roll
std
push
lea
push
lods
cwtl
jmp
rclb
ljmp
push
add
sahf
in
inc
xor
dec
push
mov
orl
push
add
xlat
loop
xchg
out
add
mov
mov
sbb
ja
xor
pushf
loop
stos
loop
or
dec
sbb
mov
adc
add
xor
mov
gs
pop
add
inc
cmp
mov
ja
hlt
adc
pop
xchg
mov
add
xor
outsb
movb
pop
xchg
xchg
ss
add
and
andps
xchg
nop
push
es
mov
ja
mov
add
and
sti
or
inc
movsb
fstpl
push
testl
dec
subb
aas
jbe
lahf
push
mov
cli
add
mov
lcall
leave
xchg
into
repnz
loope
or
adc
add
movsl
and
or
mov
add
cmp
es
inc
adc
pop
icebp
xchg
inc
or
xchg
clc
and
adc
xchg
rorb
adc
mov
lcall
add
pop
push
fwait
and
aaa
popa
mov
inc
ja
jb
dec
adc
ljmp
add
jg
add
xchg
add
jecxz
inc
inc
aas
fldlg2
add
ljmp
sbb
adc
shl
add
insb
pop
and
inc
repz
rolb
fs
mov
mov
or
inc
jmp
cmp
inc
aaa
out
mov
mov
hlt
cmpsl
movsb
loopne
pop
mov
push
push
sti
xchg
movsl
add
inc
mov
mov
fs
test
aad
inc
add
fstps
outsl
adc
mov
cli
in
cmp
add
fwait
scas
adc
sbb
inc
xor
pop
sub
sub
add
or
mov
movsb
inc
in
rolb
imul
add
sub
mov
mov
repnz
test
outsb
jp
mov
stos
ret
loopne
jb
or
movl
mov
data16
fldl
adc
fwait
into
jge
cmp
pop
mov
push
and
or
and
test
dec
test
mov
mov
mov
call
push
cmp
stos
movsb
pop
stc
and
mov
xchg
adc
lahf
test
and
xchg
cld
test
add
adc
cwtl
sahf
ss
pop
cmp
jecxz
stc
stos
mulb
mov
push
xchg
sbb
inc
cmp
adc
arpl
bound
clc
fiaddl
fwait
sub
sbbl
cli
movsl
xchg
adc
mov
mov
decb
bt
sbb
pop
fs
cld
push
mov
sbb
cltd
mov
adc
cmp
add
movsb
das
cmpl
cmp
cmp
xor
push
loop
mov
inc
or
ja
xchg
pop
adc
aaa
add
std
decl
mov
pop
add
movsb
add
inc
cmp
xor
jae
psubb
inc
add
loope
cmp
xchg
or
jle
fadds
dec
pushf
xor
add
cmpsl
das
ljmp
xlat
sub
adc
sbb
add
inc
mov
sbb
imul
test
int3
mov
add
cld
pop
test
push
and
sbb
inc
adc
and
sub
fidivl
mov
roll
pop
in
pushf
pop
xor
sub
ficompl
jb
je
xchg
inc
mov
adc
pop
mov
cmpsl
int
mov
cld
add
stos
add
shlb
mov
xchg
das
lea
mull
jmp
push
jle
daa
mov
xor
sbb
stos
and
or
xchg
pop
add
or
mov
rcrl
mov
inc
mov
mov
pop
leave
imul
popa
mov
add
pop
mov
push
add
cmp
adc
mov
sbb
fcomps
hlt
subl
les
xchg
icebp
cmpsl
out
push
scas
lahf
xor
mov
mov
sti
xor
pop
and
inc
push
sub
inc
sbb
loope
and
sti
je
add
fcomp
loop
aas
jno
scas
in
testl
shr
push
and
mulps
push
cmpsl
jno
add
das
ret
mov
add
int3
and
push
lods
pop
add
xor
push
xor
add
les
add
xchg
mov
adc
icebp
push
and
add
stos
scas
pop
jbe
movsb
add
cmc
cmp
add
repz
int3
pop
pop
and
mov
aaa
sub
stos
add
xchg
fstpl
cmp
push
dec
mov
lahf
sub
xlat
iret
loope
cltd
loope
stos
push
xor
mov
jp
mov
jns
andb
add
xchg
stos
mov
fisttpll
enter
movsb
mov
fwait
jns
inc
mov
xchg
testl
and
or
xchg
mov
pop
aas
ret
imul
subl
mov
ffreep
or
dec
mov
xor
addb
lds
add
aas
jmp
cmp
in
adc
pop
dec
xlat
stos
xchg
rol
cmp
rcl
mov
xor
leave
add
xor
jl
addb
or
movsb
rcrb
lcall
fimull
push
inc
outsl
xchg
je
cld
sbb
testl
push
xchg
dec
fwait
mov
incl
les
xchg
add
sub
pop
add
mov
xor
inc
add
testb
mov
xor
jbe
jecxz
sub
aad
ja
mov
lret
add
inc
mov
xchg
add
add
fwait
xchg
inc
inc
mov
aad
aas
sbb
insb
mov
and
sub
mov
divl
add
ja
adc
mov
fwait
sub
sahf
cmpsb
push
cpuid
mov
cld
mov
and
xor
mov
insb
and
adc
mov
jp
mov
xor
imul
stos
dec
sub
mov
jecxz
mov
lret
aaa
xchg
pop
pop
sub
xchg
mov
xorb
sahf
adc
int
sbb
cmp
arpl
sub
ljmp
push
mov
hlt
jmp
aam
cli
or
push
add
cmp
cmp
cmpsl
je
enter
lahf
mov
adc
cmovbe
mov
adc
mov
repz
stc
push
pop
je
fildll
mov
jae
mov
xor
push
sbb
loop
and
sahf
lahf
pop
fs
add
repz
fimuls
mov
mov
mov
xor
add
pop
mov
test
jae
add
push
cmc
popa
or
ret
test
clc
test
xchg
mov
xchg
cmp
in
xor
out
fldenv
add
or
mov
mov
pop
push
pushf
mov
repnz
xchg
int3
orb
pop
and
xlat
add
add
mov
stos
rcrl
push
sbb
mov
repz
stos
cld
pop
xorl
add
cwtl
mov
fiadds
aas
xor
jnp
add
xor
and
jle
mov
lahf
add
hlt
xor
nop
xor
daa
and
add
and
test
and
xor
and
cmp
lds
rcl
fmull
xor
jg
mov
xchg
add
movsl
mov
mov
and
and
pusha
cmpl
mov
add
jecxz
and
ret
jle
sub
xlat
adc
and
adc
inc
out
and
mov
mov
jp
gs
sbb
sbb
xchg
test
xor
mov
add
sbb
cmpsl
aaa
mov
push
add
inc
mov
sbb
aas
lods
out
sbb
pop
add
test
jecxz
jle
inc
mov
add
icebp
and
cmp
mov
cmp
xchg
lods
add
sub
or
aas
mov
cmp
inc
testl
xor
cmp
add
std
insb
add
sbb
pop
pop
std
add
xchg
mov
pop
aad
add
mov
add
push
pop
mov
mov
mov
adcl
and
es
shll
fnsave
je
mov
cmp
mov
fs
divb
xchg
jmp
adc
popf
popf
cmp
outsl
and
pop
and
rcrl
mov
add
adc
mov
das
inc
maskmovq
idivl
sbb
adc
jae
cld
loope
lahf
pop
pop
push
or
inc
and
add
movsl
mov
jg
xor
add
and
mov
rolb
scas
xor
aam
out
mov
xchg
into
mov
add
cld
xor
mov
xor
movsl
xlat
xchg
lcall
test
adc
add
mov
jno
adc
mov
lea
loop
push
jae
aaa
cmp
or
pop
jno
cli
sbb
fldt
adc
add
add
add
ret
enter
adc
and
fwait
pop
mov
stos
fcmovne
push
mov
mov
scas
xor
frstor
popa
add
inc
sti
mov
mov
or
cmp
sar
test
adc
aaa
mov
test
and
pop
cmp
sub
mov
fcmovne
xchg
xor
cltd
test
loope
and
mov
bound
fs
ret
aas
cmpl
cmp
mov
sbb
clc
pop
and
movsb
jne
mov
jae
out
stos
jg
pushf
stc
jp
pop
jnp
bound
adc
jbe
mov
call
sbb
sub
pushf
in
inc
ret
lds
adc
add
cmp
pop
cmp
movsl
jmp
sbb
add
add
add
and
mov
repnz
add
mov
pop
loopne
shrl
push
pop
add
mov
icebp
imul
mov
mov
or
insl
pop
sti
sub
test
adc
adc
pop
movsl
xor
sub
and
cltd
pop
add
xor
loop
xchg
push
push
and
cmpsl
pop
mov
or
ret
jae
jnp
or
repnz
outsl
std
mov
in
add
pop
inc
cmpsb
and
mov
pop
mov
call
and
mov
jb
and
movsb
pop
in
jp
sub
in
popl
nop
xor
dec
jns
add
mov
jne
xor
shl
sbb
add
xchg
or
dec
add
xor
cli
mov
aad
loop
mov
popa
cwtl
xchg
or
jns
loope
lods
aad
sub
shll
in
mov
sbb
mov
stc
scas
push
push
or
mov
addb
cmp
add
and
mov
mov
push
nop
es
sbb
and
out
sbb
je
xor
fiadds
mov
loope
sbb
inc
mov
mov
ret
nop
ret
pop
bound
ljmp
leave
mov
sbb
push
xchg
dec
scas
aas
ds
mov
fdivp
hlt
push
push
dec
mov
clc
sub
mov
or
mov
xchg
into
add
mov
rolb
movb
inc
mov
and
cmp
movntps
cmp
xor
sub
aam
push
xor
mov
mov
and
push
enter
pop
add
mov
mov
inc
leave
add
push
mov
add
scas
sub
mov
mov
sbb
add
push
push
mov
mov
and
jno
cmpsb
in
xchg
jl
jns
pop
mov
add
lcall
fildll
add
nop
scas
adc
out
pop
mov
adc
jo
dec
nop
add
mov
mov
roll
mov
in
mov
aas
adc
nop
push
hlt
repz
mov
es
pop
add
lods
ret
lock
xor
cmp
push
add
test
mov
inc
and
pop
pushf
lahf
scas
adcl
and
adc
push
cs
mov
inc
jle
jl
test
mov
pop
dec
aam
mov
repz
nop
jnp
shlb
or
push
fstpl
push
add
add
imul
and
jg
nop
aas
or
das
and
pop
loop
inc
add
mov
arpl
cmp
or
adc
roll
xchg
xchg
nop
pop
mov
test
das
mov
and
xchg
mov
xchg
sar
out
repz
inc
add
mov
jb
add
pop
scas
add
je
add
cmp
sub
sub
mov
loop
push
adc
gs
push
add
mov
mov
stos
addl
mov
adc
pop
les
bound
jnp
mov
inc
testl
and
in
js
pop
add
mov
icebp
pop
cmp
mov
mov
mov
nop
mov
add
fs
insl
scas
arpl
lods
movl
add
loope
mov
and
push
xchg
adc
jg
or
mov
inc
int
loopne
add
sar
cmp
adc
roll
jp
jecxz
out
fdivrl
pop
nop
push
std
insl
sbb
push
xchg
out
aaa
ficoml
adc
mov
and
mov
lock
inc
std
xor
add
or
fists
dec
adc
push
or
push
pop
notl
in
push
push
sub
aas
enter
add
add
in
jg
mov
mov
cli
sbbl
ret
add
xchg
adc
loop
cld
jg
sub
adcl
dec
xor
inc
inc
add
stos
clc
movsl
movsb
cli
repz
add
xchg
nop
sub
inc
js
imul
jl
or
xchg
scas
jo
add
nop
adc
lods
in
cmp
test
jg
cmp
xor
add
jnp
loope
decb
add
stos
les
adc
xchg
int3
xchg
dec
in
aas
cmpsl
inc
rorb
cmp
lea
outsl
cs
repz
loope
leave
mov
lahf
out
adc
cmp
mov
sbb
sub
incl
lds
mov
or
addb
cmc
xor
lahf
xchg
push
int3
sbb
incb
es
adc
das
jl
add
out
jp
lret
cmp
xchg
mov
push
fcomps
testl
addl
and
int3
mov
popa
out
and
push
lods
pushf
test
cltd
fildl
mov
mov
sub
loop
out
pop
xchg
add
push
and
insl
cld
imul
xor
adc
repz
push
cmp
xchg
xchg
xchg
loop
arpl
leave
cmc
adc
push
cwtl
call
inc
jecxz
sahf
shll
into
cmp
adc
mov
test
add
gs
mov
scas
nop
clc
add
sbb
in
or
out
icebp
add
and
mov
popa
js
mov
add
adc
insl
jae
add
mov
fimull
sbb
je
ljmp
enter
bound
aad
pop
add
ret
add
cli
mov
add
or
cmp
add
gs
ljmp
data16
adc
adc
or
mov
push
pop
loop
pop
and
pop
bnd
cmp
pop
enter
jp
jmp
test
sub
pop
mov
and
outsb
popf
in
cmp
xor
add
lds
lret
test
add
mov
xor
xor
and
sbb
pop
mov
aaa
pop
mov
add
dec
dec
mov
adc
movsb
cltd
inc
outsb
loop
push
add
push
popa
lcall
mov
stc
mov
jno
add
fldenv
mov
loop
mov
and
mov
in
adc
mov
sbb
in
cmc
nop
sbb
pop
add
adc
movswl
add
shrl
movsb
out
sbb
jns
add
inc
mov
pop
mov
xchg
add
xor
fdiv
ret
jl
leave
xchg
cmp
add
xlat
jbe
loop
mov
cmc
ja
in
add
or
mov
inc
pushf
mov
shll
adc
and
es
xchg
pop
cmp
pop
daa
jb
and
push
lds
adc
ucomiss
sbb
mov
int3
dec
test
xchg
test
mov
sbb
cmp
mull
xchg
add
insb
rolb
cmpsl
popf
rcll
push
adc
and
jl
cmp
mov
inc
jg
dec
jge
popa
mov
mov
and
mov
sahf
xor
lret
jb
icebp
add
xorl
sbb
lahf
mov
mov
mov
add
push
sti
add
loope
or
xor
repnz
dec
push
fldcw
stc
or
mov
mov
daa
mov
popf
xchg
mov
mov
inc
hlt
ds
mov
fwait
add
push
adc
push
pop
xor
push
int
or
andb
jmp
mov
mov
adc
xchg
loope
xlat
roll
aad
cmpsb
cmp
sbb
in
inc
dec
dec
add
dec
add
lods
idivl
outsl
fstpl
sub
mov
js
iret
ret
loope
jmp
fwait
add
and
out
add
movsl
jp
push
mov
inc
mov
mov
jne
loopne
add
dec
inc
add
into
cwtl
in
mov
mov
push
lcall
pop
add
mov
scas
cld
iret
call
mov
enter
shlb
mov
movsbl
cld
out
mov
or
sbb
add
pushf
mov
add
cs
inc
test
cmc
add
add
test
or
roll
add
lock
add
jecxz
xor
movsb
adc
add
inc
daa
outsl
les
add
mov
fstpl
nopl
xor
jl
icebp
and
cmpsl
out
dec
popa
pop
pop
insl
cmp
mov
fldenv
adcb
add
inc
pop
ss
aam
add
into
sbb
xor
sbb
adc
adc
add
arpl
jmp
push
roll
add
loop
add
pop
pop
mov
xor
adc
insl
loope
outsb
bswap
inc
lods
add
mov
dec
mov
test
adc
sarb
or
fildl
mov
xchg
iret
adc
pop
orb
in
jns
stos
jp
mov
add
loope
ret
cmpsl
adc
pop
scas
jge
scas
add
xchg
xchg
mov
jae
cmpb
sub
cwtl
js
add
mov
push
in
flds
in
outsb
aaa
push
and
jnp
or
nop
fildl
add
pop
mov
push
out
sbbl
icebp
and
fadd
fisttps
cmp
stc
les
subb
fcmovnu
outsb
adc
cvttps2pi
sahf
test
lcall
shl
mov
ds
lret
cmp
jo
add
sti
insb
mov
add
jecxz
inc
jnp
xlat
add
push
push
xor
int3
stos
ret
inc
cmp
jmp
sbb
add
xchg
dec
cmpsl
mov
xchg
add
and
pop
push
mov
popf
add
ljmp
cltd
mov
stos
cli
icebp
mov
jo
hlt
mov
fiaddl
adc
out
popf
add
push
pop
and
xchg
cmp
mov
cmc
push
test
add
adc
inc
lahf
mov
xchg
and
sbb
adc
int
mov
fwait
sbb
test
xor
xor
add
or
out
jge
pop
incb
add
cmc
cli
mov
pop
idivl
addr16
dec
fisubs
pop
rclb
xor
mov
sbb
cmp
scas
push
jmp
xor
mov
add
sub
lahf
out
push
or
fiaddl
and
xchg
iret
or
add
int3
lods
xor
dec
bound
and
aam
mov
es
mov
pop
and
push
add
push
mov
dec
cmp
jl
popf
pop
jae
loop
mov
mov
popa
incl
jp
cli
mov
mov
push
addl
jg
add
jle
mov
mov
push
je
add
inc
stos
xor
inc
push
mov
in
or
or
jge
rorl
mov
mov
scas
sub
sahf
cmp
mov
mov
and
or
insb
sbb
roll
imul
and
push
call
dec
out
stos
sub
mov
in
nop
mov
repnz
ret
inc
ret
loope
pop
std
and
push
add
cmp
outsl
lods
mov
sarb
sti
add
push
add
push
sbb
cmpsb
jl
adc
add
stos
sub
ljmp
inc
and
popf
cltd
jbe
shl
hlt
bound
mov
gs
sub
adc
bound
or
sub
adc
pop
mov
xlat
jmp
andb
dec
loop
adc
test
add
and
inc
stos
inc
pop
ss
push
pop
pushf
setp
sbb
cmpsl
and
jns
int3
pop
cmpsb
fwait
loope
add
xchg
cmp
inc
fwait
pop
mov
add
jnp
shll
insl
rolb
and
push
mov
daa
add
xor
add
mov
pop
add
and
push
jnp
fucom
adc
sub
or
pusha
lahf
add
je
inc
push
sub
add
dec
or
cmp
jl
xchg
aaa
and
or
mov
mov
imul
push
add
xchg
jp
call
jno
mov
cmp
outsl
xchg
out
sbb
es
or
xor
leave
sbb
and
or
mov
xchg
int3
dec
bound
pop
loopne
inc
test
pop
mov
or
push
sahf
xchg
jnp
aaa
add
sub
add
adc
roll
push
loop
fwait
pusha
mov
mov
out
adc
add
mov
add
mov
dec
mov
and
mov
mov
and
mov
pop
or
mov
pop
outsl
filds
jge
lods
insl
lods
mov
cmp
ja,pt
add
call
cltd
mov
leave
testl
jno
and
cltd
xchg
test
lods
sub
je
add
fidivl
add
xchg
loope
add
mov
mov
and
sbb
fs
lods
in
add
icebp
cmp
adc
xchg
mov
add
jno
lahf
ja
movsb
sub
add
adc
adc
rcrl
mov
mov
sub
arpl
and
xor
mov
inc
adc
sub
fstpt
and
mov
adc
mov
push
and
mov
dec
adc
jns
dec
mov
mov
sahf
setns
scas
jl
js
adc
or
push
mov
mov
pop
and
test
xchg
rcr
push
out
mov
movsb
gs
and
pop
mov
add
mov
out
add
ljmp
test
mov
testb
insb
mov
loopne
pop
pop
inc
dec
and
stos
jmp
mov
xchg
repnz
push
xchg
sbb
add
insb
cmpsl
repnz
mov
add
jb
xchg
mov
xor
fsubrs
pop
mov
add
popa
mov
repz
mov
pushf
jmp
xor
mov
clc
and
pop
pop
pop
add
pushf
push
lds
dec
fcoml
pop
cli
dec
mov
pop
mov
jle
mov
testb
pushf
adc
adc
pop
fwait
add
and
jecxz
mov
mov
push
dec
mov
add
cmpsl
xchg
cmc
and
mov
testb
dec
movsl
add
ret
sbb
stos
pushf
mov
pop
aad
mov
and
mov
push
cmc
and
sbb
mov
lods
and
cltd
adc
and
fisttpl
testb
repz
inc
shrl
jnp
adc
stos
and
adc
cld
ret
mov
sub
rclb
in
push
icebp
mov
adc
jle
mov
adc
pop
imul
jns
cmp
jbe
mov
stos
adc
mov
push
cwtl
lahf
lods
movsl
xchg
std
loop
das
insb
daa
mov
push
add
xchg
add
rolb
inc
fdivs
sbb
rcll
das
add
push
fsubrp
cmp
inc
dec
mov
movsl
aas
mov
test
ret
mov
sub
mov
aam
or
mov
lret
aaa
popa
fmuls
add
mov
popf
adc
add
jl
jg
xor
mov
mov
pop
push
pop
hlt
mov
aam
arpl
mov
adc
das
sbb
inc
cltd
add
mov
stc
dec
fistpl
jecxz
dec
jns
sub
mov
fwait
jbe
xor
and
and
div
outsb
sti
mov
mov
xchg
cltd
add
test
fcmovnu
out
jo
cmp
inc
icebp
push
hlt
lods
add
add
xor
mov
push
ja
test
cltd
filds
icebp
pop
mov
ret
test
jb
ljmp
xor
stos
addr16
pusha
mov
mov
shlb
add
mov
std
mull
xor
paddusw
mov
cmp
add
rcrl
xchg
into
mov
jle
popf
pushf
dec
adc
mov
repz
pop
and
pushf
add
sahf
jp
sbb
add
inc
mov
imul
ja
out
sbb
mov
cld
xchg
or
dec
cmc
ret
jae
popw
fcmovu
mov
or
in
adcl
pop
out
mov
mov
int
add
mov
mov
jecxz
push
fldcw
jb
mov
aaa
decb
and
dec
shll
sti
adc
lcall
lret
xor
out
mov
mov
mov
push
cltd
ja
aad
inc
inc
aad
and
add
int3
shll
mov
mov
loop
lahf
cld
stos
inc
mov
add
stc
fucomip
or
mov
sbb
pop
fidivrs
int
ficoml
das
sub
jp
cmpsl
mov
out
int3
and
pop
dec
test
sbb
test
jmp
repnz
outsl
shll
cltd
dec
jo
push
dec
add
fsubl
mov
inc
mov
repz
rsqrtps
nop
cmpb
repnz
and
cmpsl
addb
push
icebp
or
cmp
adc
rclb
adc
fucom
pop
insl
add
xor
xorb
faddl
or
adc
jge
adcb
mov
or
sbb
mov
add
jnp
add
movsl
decl
pop
mov
adc
outsl
and
insb
hlt
sbb
xor
mov
inc
adc
shl
pop
int
sahf
or
add
aaa
add
icebp
xchg
roll
adc
push
negl
or
fdivs
jmp
lods
popa
cld
xchg
push
pop
pop
mov
xchg
lods
dec
pop
fildll
enter
push
add
das
cmp
cmc
stos
jge
xchg
rep
add
cmp
loop
aaa
sahf
sbbb
add
mov
repz
mov
bound
add
aaa
rolb
pushf
cmp
lret
and
mov
fsubl
repz
add
and
cmpsb
pop
or
xor
mov
cmp
sub
add
xlat
and
add
mov
mov
inc
fsubs
push
mov
push
or
movsl
jne
mov
and
stos
pop
pushf
cld
or
pop
adc
mov
jg
fs
popl
mov
lods
push
loop
pusha
mov
mov
adc
call
push
repz
dec
lods
jne
xor
icebp
in
jnp
add
in
leave
mov
jmp
lock
pop
adc
mov
test
sbb
cmp
sahf
xorb
add
push
es
aad
inc
xchg
decl
fcomps
mov
xor
xor
dec
bnd
mov
push
inc
ja
push
aaa
loope
sub
and
sbb
roll
add
sbb
jecxz
push
pop
stos
sbb
insl
xchg
mov
pop
cltd
xchg
std
inc
jmp
pop
adc
fstps
pop
jb
adc
sbb
hlt
shl
addr16
or
lea
jge
int
and
fistpll
rcll
pop
and
add
xchg
addr16
xor
les
adc
dec
add
aam
jl
imul
loope
fsubrl
add
mov
mov
push
add
xchg
dec
sbb
imul
adc
lods
fisttpll
adc
mov
pop
cmp
mov
mov
dec
faddl
pusha
jecxz
push
imul
dec
pushf
lsl
push
cmpl
pop
adcb
sub
out
and
sbb
xor
xchg
cltd
sbb
add
push
add
mov
mov
pop
fidivl
adc
and
pushf
xlat
adc
push
ja
sti
mov
and
out
aam
repz
cmpsb
add
push
xchg
push
add
clc
popf
dec
add
out
aas
aaa
push
daa
add
scas
insb
xlat
in
mov
add
popf
xchg
add
test
insb
mov
dec
xlat
add
push
pop
add
fcmovu
fldl
or
sahf
movsl
add
and
mov
scas
test
insl
shrb
add
cmp
enter
test
lret
leave
out
add
icebp
dec
ret
xchg
faddl
add
subb
pop
mov
add
fldenv
mov
xchg
jmp
add
jbe
or
xor
leave
das
add
bound
mov
dec
and
jecxz
sbb
inc
mov
adc
adc
add
aam
enter
jne
int3
add
mov
out
mov
add
add
sbb
add
iret
push
filds
dec
ja
in
repz
add
inc
push
stos
mov
xchg
xor
movsl
mov
pop
je
xor
xchg
and
push
fdivrl
lods
repz
cmpxchg
sbbl
call
je
add
push
mov
and
stos
insl
mov
add
dec
adc
mov
jae
or
repz
insb
call
fisttpll
mov
add
pop
and
into
inc
sbb
movsb
cli
mov
pop
sub
and
adc
ret
test
and
add
jne
ja
pop
add
xchg
adc
jecxz
mov
js
mov
cmp
add
lahf
fnsave
loop
and
test
sahf
aam
add
rcrb
mov
movsb
imul
or
jmp
add
jle
adc
test
xor
pop
push
stc
add
les
sbb
rolb
mov
lds
xchg
mov
pop
adc
sbb
ret
cmpsb
cmovo
fldt
push
in
jo
pop
push
push
pop
jmp
pop
movsb
dec
enter
mov
adc
mov
repz
pop
popl
mov
mov
outsl
pop
rorl
add
mov
cltd
pop
sti
and
add
and
popf
jle
pop
xchg
inc
push
mov
xchg
out
jmp
lods
push
insb
push
outsl
sbb
mov
xchg
rolb
xchg
adc
ja
push
jb
inc
fcoml
cltd
jg
popa
std
dec
cmpsl
das
jecxz
inc
das
and
xchg
addr16
jl
rcrb
adc
mov
sub
xor
repnz
jp
incb
ds
repz
add
adc
bound
push
xchg
push
xchg
push
sbbl
pop
pop
and
stc
scas
sbb
aam
xchg
out
sub
aas
out
das
jo
int
xchg
xchg
mov
div
add
mov
ja
cmp
imul
sub
ljmp
dec
orb
xchg
mov
or
xor
js
xor
in
in
out
in
in
add
dec
add
notb
push
pop
jne
and
inc
cld
inc
cltd
out
dec
sbb
shr
out
cmpsb
xor
in
mov
test
xchg
inc
or
jmp
adc
int
mov
mov
xor
and
sbb
cli
ss
xor
cs
sub
es
iret
es
add
ss
push
add
mov
jns
cmp
push
inc
daa
xchg
ss
andl
dec
es
pop
or
adc
rclb
xchg
bound
cmpb
aas
push
loopne
movsl
ss
xor
cs
andl
and
into
inc
xor
or
aad
ss
inc
fmull
cltd
in
les
add
int3
add
orl
out
xor
push
subl
push
push
mov
mov
jnp
sti
add
nop
cltd
lea
add
addl
orl
or
mov
outsb
into
or
xchg
add
mov
mov
pop
jmp
in
pop
mov
cmc
adc
mov
inc
or
pushf
mov
adc
adc
ds
and
cmpsb
pop
mov
xchg
xchg
mov
divb
and
cwtl
ss
aad
cmp
pop
mov
mov
sub
push
xor
das
mov
add
jne
mov
mov
adc
mov
loope
cltd
jae
cmpsb
ret
add
std
lea
xor
xor
jbe
push
cli
pop
popf
lahf
sti
jne
add
mov
inc
and
cmp
mov
xchg
and
fbld
dec
push
xorl
and
push
fnstenv
add
xor
xchg
adc
push
and
sbb
dec
cmp
dec
sbb
sbb
ret
js
inc
pop
dec
aam
mov
mov
out
out
push
rcr
pop
jns
vandps
cmpsb
in
popa
addb
mov
push
mov
jle
xor
adc
je
das
sub
xchg
or
push
pop
mov
dec
ss
icebp
push
sbb
push
cmp
add
dec
cmc
adc
pop
imul
push
adc
pop
add
outsl
jp
insl
shrl
mov
mov
sub
sub
js
mov
adc
mov
xor
testb
inc
add
or
push
in
mov
xchg
add
imul
cmp
fstp
dec
out
fstps
jle
icebp
shlb
push
fs
xchg
mov
cmp
mul
pushf
imul
xchg
test
pop
push
fcmovne
out
jo
mov
mov
stos
dec
add
jo
add
inc
roll
inc
dec
and
push
inc
xchg
lret
lds
or
sbb
add
call
cmp
xchg
mov
push
dec
pop
xchg
pop
sub
leave
mov
add
add
shl
jns
fs
pop
sbb
loope
mov
push
in
andl
xchg
jno
imul
jge
mov
push
inc
nopl
lods
lods
or
xor
add
mov
xorl
out
aam
stos
xchg
dec
adc
add
in
mov
jb
sub
add
xor
stos
add
ss
adc
mov
subb
xchg
popl
stos
mov
mov
add
cmp
ret
push
mov
es
jle
mov
sbb
xor
arpl
pop
test
xor
mov
and
dec
add
add
cs
adc
movsb
fs
jmp
roll
imul
test
test
mov
dec
cmp
mov
mov
jg
push
mov
inc
das
push
aam
mov
dec
insb
incl
or
adc
add
cmp
in
dec
stos
mov
std
cmp
popf
add
cli
and
or
dec
jae
xorl
test
mov
test
ss
arpl
incl
es
rcrl
clc
jbe
xchg
or
or
sarb
add
adc
lock
xor
jg
dec
cmp
and
mov
push
jle
add
cltd
jl
add
adc
movsb
clc
ss
stos
add
pop
jg
sbb
fwait
xchg
mov
add
cltd
xor
jl
xchg
mov
and
ss
mov
jmp
add
ljmp
shrl
mov
add
aaa
sub
add
outsl
xorl
mov
add
insb
pop
mov
sbb
jg
outsb
mov
ss
xor
nop
add
lea
cmp
and
roll
ret
xor
arpl
cmc
xor
add
loopne
idivl
mov
mov
subl
add
pushf
sbb
and
test
les
mov
or
out
and
sbb
push
inc
and
pop
or
sbb
or
mov
stos
mov
sbb
nop
addps
add
hlt
add
mov
xlat
jnp
data16
push
les
and
pslld
mov
outsb
inc
push
cmp
je
mov
xchg
inc
stc
add
mov
mov
scas
mov
and
sub
xchg
pop
fidivl
cltd
inc
stc
and
sub
cmp
inc
sbb
add
lcall
adc
roll
pop
push
pop
mov
dec
mov
bound
repnz
fwait
popf
add
test
push
mov
sbb
xchg
negl
lcall
in
inc
dec
vmovhpd
shlb
mov
jmp
push
pop
incl
mov
cwtl
push
push
in
mov
inc
mov
in
cltd
mov
aaa
inc
push
cmc
mov
mov
add
bnd
jge
inc
pop
or
jns
ljmp
mov
adc
stc
mov
into
clc
sub
jmp
pop
add
lcall
das
xchg
push
add
hlt
je
jg
adc
sub
inc
push
mov
cmp
cmp
lods
xchg
cmp
mov
add
mov
xor
jae
and
filds
fwait
adc
xchg
or
push
ds
test
mov
loop
cmp
push
push
test
ret
cwtl
scas
fisttpll
dec
jnp
dec
xchg
xor
cli
and
ret
hlt
lods
add
idivb
sahf
mov
push
add
idiv
or
fnstcw
mov
add
loope
cmp
loop
push
add
and
mov
add
cmp
pusha
aas
rolb
jne
sub
sub
cmc
aaa
inc
je
aas
add
pop
push
out
loopne
mov
pusha
pop
cmp
mov
cmp
pop
mov
mov
cmpsl
mov
jnp
movsb
loop
aaa
jne
push
outsb
dec
xchg
mov
adc
xchg
xchg
les
mov
cwtl
xor
pop
fwait
pop
xor
adc
and
daa
lahf
add
fstpl
add
mov
sbb
sahf
pusha
outsl
repz
arpl
test
sbb
mulb
clc
stc
add
lcall
inc
sbb
add
ret
push
adc
add
aam
lods
inc
test
dec
sub
jb
shrb
call
adc
add
stos
jmp
mov
mov
paddd
add
mov
cmp
add
repz
test
add
out
inc
aad
cmp
fcompl
jo
push
popf
mov
data16
xor
or
mov
inc
jnp
mov
dec
add
add
jg
bswap
push
not
pop
and
aad
xor
dec
cmp
cmc
ret
push
inc
xchg
jmp
in
pop
xchg
and
pop
call
jns
adc
and
push
mov
adc
and
fucomip
push
sub
cmpl
cmp
sub
scas
ja
or
mov
pop
add
and
clc
ljmp
sub
js
pushl
ds
pop
in
ret
arpl
push
cmp
mov
shlb
sub
test
push
movsb
xchg
sbbl
ljmp
pop
lods
lcall
push
in
cmc
lock
je
mov
imul
inc
inc
rcrb
in
inc
or
fldt
mov
mov
push
push
pop
xchg
movsl
and
mov
pop
xchg
test
mov
cmp
jg
mov
xor
sti
and
add
jecxz
mov
inc
jg
pop
pop
sub
call
adc
pop
lret
or
roll
and
jno
pop
add
push
fists
xor
adc
out
das
add
and
jle
add
push
push
ret
lahf
aad
les
popa
imull
xchg
pop
and
push
jns
sti
add
cmp
scas
subl
in
ret
shr
fwait
ret
xchg
add
add
leave
add
popa
jle
call
mov
fisttpl
ds
lds
xor
adc
fisubrs
stos
add
jg
ret
aaa
lea
xchg
imul
push
jno
enter
rorb
pop
add
mov
movsb
adc
cld
in
cmp
shrb
rorb
mov
aad
mov
and
sbb
jge
sbb
adc
inc
outsl
mov
lods
inc
sbb
add
adc
shlb
mov
dec
std
notl
or
in
and
push
test
adc
mov
nop
add
sbb
lock
insb
add
cmp
aad
xchg
aam
add
ss
jns
ficompl
dec
arpl
jge
inc
fs
sbb
cmp
sbb
add
mov
adc
push
jns
jl
adc
sarb
cmpsb
pop
sahf
xchg
mov
jg
jmp
mov
sub
outsb
sub
xor
adc
adc
adc
add
lock
mov
jae
or
dec
pop
mov
pop
fisubs
jg
adc
repnz
push
xor
aam
xor
adc
push
loopne
leave
int
hlt
icebp
adc
cli
fldenv
push
jp
xchg
lret
int
clc
in
xor
shrl
or
push
ja
mov
mov
mov
das
pop
popa
pop
add
jecxz
adc
jno,pn
xchg
add
jae
inc
mov
shll
je
std
ficomps
xchg
outsl
or
loop
or
dec
adc
adc
fcoms
sbbl
les
xlat
sub
out
pop
es
test
or
enter
or
test
mov
push
or
adc
sub
push
or
fisubrs
jg
outsb
sbb
into
repnz
jecxz
pop
adc
dec
adc
sti
and
adc
add
fs
add
leave
add
add
int3
out
repz
ljmp
add
sub
jmp
lret
aas
outsb
lahf
sbb
and
add
inc
enter
sub
scas
pop
adcl
test
push
sbb
lahf
and
or
sub
add
lahf
lret
mov
push
cmpsb
sub
dec
inc
movsb
xchg
dec
adc
mov
add
add
adc
jmp
loop
xor
cli
popf
sbb
andb
mov
aas
insb
loop
mov
loopne
pop
loop
in
add
std
or
mov
ficomps
jo
stos
xor
outsb
fiaddl
mov
push
rol
sbb
and
lock
cld
stc
mov
mov
or
test
in
hlt
add
pop
jbe
and
lock
vpaddusb
daa
pop
cltd
inc
mov
je
sbb
loop
sbb
mov
pop
ret
push
inc
cmp
pop
movsb
add
xor
mov
jmp
mov
mov
lret
repnz
sub
mov
cmp
push
fildll
fisttpl
pop
mov
movsl
add
mov
sbb
pusha
iret
and
sarb
xor
lcall
jmp
je
and
hlt
push
pop
addb
add
inc
movsb
adc
jbe
mov
jns
adc
sbb
sub
mov
into
imul
inc
ret
jae
je
or
lret
std
add
sub
inc
mov
mov
xchg
push
popa
add
cmpl
shl
pop
jbe
ljmp
and
cltd
sub
sbb
mov
xchg
je
or
stc
xchg
push
dec
xchg
mov
or
inc
in
ret
pop
xchg
cmpsb
jg
fldcw
adc
mov
pop
js
loope
sti
jno
mov
fisttpl
in
leave
icebp
out
pop
insl
mov
xor
repnz
jns
add
xor
orb
jmp
sub
sbb
jecxz
in
fsub
push
sbb
lret
test
mov
push
push
jo
out
in
push
inc
sbb
mov
addl
sub
sbb
adc
inc
push
rorl
fistps
jns
xchg
cmp
xchg
ret
mov
repnz
push
repz
rcrl
adc
and
jecxz
iret
loope
fidivl
sti
jns
adcb
fdivs
push
dec
icebp
ficomps
push
mov
adc
es
xor
push
repnz
jnp
lods
mov
fistpl
cs
daa
cmc
dec
daa
adc
push
mov
repnz
addr16
mov
mov
inc
lods
daa
sub
je
mov
and
sub
dec
push
sbb
xor
outsl
call
rorb
adc
mov
mov
pop
inc
push
push
arpl
nopl
dec
push
xor
jecxz
dec
je
xor
and
lret
cli
mov
add
orb
and
int3
xchg
jle
xchg
adcb
push
jb
ljmp
iret
les
in
ret
cmp
loopne
xor
aaa
push
add
push
mov
call
xor
js
popa
mov
test
adc
mov
lret
testb
cs
ror
xor
seto
adc
inc
imul
in
add
or
cmp
int3
rolb
arpl
popf
add
lret
adc
loopne
les
sar
loop
add
push
push
cmp
mov
cltd
and
mov
jle
ljmp
sub
sub
add
dec
jno
sub
stc
repz
pop
and
ss
push
in
loope
inc
inc
push
add
pop
push
call
js
push
push
movhps
or
daa
in
jns
sahf
loop
fs
or
jp
xchg
icebp
mov
pop
ret
pop
cmp
push
fisubrs
movsl
out
jg
inc
push
cwtl
or
pop
sbb
pop
mov
adc
push
add
popl
sahf
test
or
mov
lahf
xchg
add
es
push
push
stos
sahf
push
lea
adc
es
xchg
in
fwait
cmc
in
ds
xor
mov
jnp
mov
adc
test
testl
and
adc
popf
xor
fisttps
cli
test
ret
xchg
out
or
cld
dec
jmp
test
and
popf
mov
scas
inc
enter
jmp
out
add
adc
or
mov
out
add
jae
push
out
sbb
sbbb
fildll
cltd
or
cmp
lret
sbb
test
cwtl
fnstsw
push
cmp
pop
inc
pop
ljmp
inc
add
int
repnz
xchg
sahf
jl
rcrb
int
lods
sub
loop
xchg
adc
sbb
js
and
dec
loop
outsb
in
add
add
pop
stos
push
xchg
int3
arpl
test
cli
sbb
rolb
dec
push
jmpw
adc
shlb
add
mov
mov
loopne
std
call
push
test
adc
mov
lcall
addb
mov
sbb
pop
sub
cmp
jle
in
sahf
push
test
icebp
push
jle
lahf
push
xor
push
call
xor
adc
in
insb
mov
xchg
arpl
jge
icebp
and
stc
test
mov
push
push
or
add
xorl
imul
xor
fsubl
pop
adc
out
popf
and
subl
xor
cmp
lret
pop
mov
xchg
repnz
shl
stc
mov
add
jl
jg
sub
mov
mov
inc
rcll
jns
ret
fdivp
xor
xchg
mov
xchg
call
inc
scas
inc
ret
rorb
out
or
in
pop
mov
or
add
jmp
sub
stos
inc
mov
adc
sbb
pop
cmp
jno
mov
inc
jb
repz
popa
push
loop
pop
les
sub
lahf
sbb
mov
and
sarb
mov
out
push
add
cmpb
in
sub
adc
stc
add
inc
in
test
adc
loope
pop
or
pop
jecxz
mov
sbbb
jmp
mov
hlt
nop
adc
adc
ficomps
xchg
in
sbb
and
push
mov
into
std
fwait
pop
test
sbb
lods
pusha
shlb
out
pop
scas
push
mov
add
inc
mov
in
dec
cmp
add
adc
jmp
das
mov
rcrl
aad
push
push
lahf
pop
sarl
and
or
dec
pusha
fiaddl
push
pop
repnz
or
lds
leave
push
in
insl
lret
movsb
bound
cld
sbb
pop
ficomps
fsubs
out
es
or
icebp
jb
inc
lret
sbb
lret
sbb
mov
sbb
inc
sbb
mov
lods
jno
arpl
imul
cmpsb
lock
and
dec
popl
inc
inc
sbb
pop
repnz
fdivrl
aam
adc
mov
mov
js
mov
dec
mov
shll
xchg
push
in
popf
in
stos
das
icebp
loope
pop
je
push
pop
mov
mov
jle
pop
xchg
dec
pop
jl
lods
imul
out
sahf
jnp
js
in
in
and
incl
ret
push
inc
ret
mov
or
push
lret
inc
cmp
sbb
xchg
pop
and
push
dec
rcrb
mov
mov
ret
pop
xchg
mov
push
into
imul
and
push
and
mov
push
sahf
add
or
sar
cmp
mov
pop
lods
dec
pop
paddd
popf
xchg
ret
shrb
mov
outsl
adc
pop
test
pop
and
ret
sbb
inc
jbe
shrb
gs
sbbb
mov
or
enter
mov
lret
call
ret
mov
jg
pop
leave
popf
loop
inc
mov
pushf
cli
add
dec
sbbb
ret
dec
in
rorb
adcl
ret
js
loopne
mov
iret
mov
nop
pop
add
xchg
sub
pop
fistps
stos
enter
adc
xlat
jp
in
pop
push
inc
cs
or
lcall
nop
sub
push
cwtl
pop
lret
movsl
icebp
lret
pushf
mov
xchg
xor
jae
add
pop
mov
ljmp
and
adc
xchg
mov
fs
aaa
sbb
jecxz
add
sahf
int3
mov
push
and
mov
cmpsb
dec
xor
pop
js
loope
sub
dec
repnz
loop
cmpl
xchg
leave
cltd
sub
mov
arpl
bound
popf
leave
xor
movsl
ret
mov
int3
cmp
fwait
popf
sbb
xchg
mov
sbb
mov
sbb
and
jmp
pop
push
push
jbe
or
inc
rcl
mov
dec
cmp
pop
and
stc
fs
or
xchg
call
push
adc
mov
leave
jp
mov
xchg
in
lret
and
add
push
aam
cmp
mov
sbb
popl
and
cwtl
mul
js
in
rorb
sti
stos
jo
sahf
push
push
add
mov
pushf
dec
add
pop
or
ret
fsub
mov
push
push
loope
xor
push
mov
or
adc
or
add
adc
lods
shlb
cld
sbb
add
pop
ljmp
jecxz
sahf
sti
arpl
adc
push
fldenv
lret
loope
hlt
pop
adc
xor
sahf
and
int3
inc
pop
fwait
ret
inc
xchg
pop
lret
or
sbb
les
or
pop
push
sti
lcall
mov
lds
out
std
sbb
xchg
incb
pushf
add
sahf
andl
pop
fdivrs
in
sbb
sbb
sbb
in
xchg
pushf
shl
dec
mov
adc
adc
ficoml
dec
js
xchg
cltd
rcl
cld
dec
sbb
sbb
fimull
lock
xchg
jns
loop
roll
orb
sbb
cmp
lcall
enter
or
sbb
xchg
add
add
add
sbb
adc
pop
adc
adc
in
xchg
push
lea
or
rcrl
add
adc
xchg
sbb
xchg
pop
cwtl
cli
or
loope
bound
push
pop
add
adc
xchg
jns
testl
add
or
incb
inc
rolb
add
adc
cs
adc
or
pop
cli
push
loope
xchg
incl
orb
adcb
xchg
mov
std
pop
mov
jle
add
mov
add
sbb
adc
fcomps
jl
push
or
adc
adcb
pop
fcomp
pop
rclb
fadds
or
rorb
rclb
push
sbb
cwtl
push
cltd
sbb
mov
adc
pop
jbe
sahf
add
xchg
pop
push
pop
and
jmp
movsb
pop
lret
mov
loope
sbb
or
ficomps
je
and
or
pushf
ds
or
fcompl
in
push
and
clc
fs
icebp
imul
cmp
fwait
jbe
push
lods
shr
adc
mov
orl
loope
in
mov
lods
or
push
lds
data16
sbb
outsb
cmp
jecxz
push
jb
test
sbb
add
in
cld
icebp
aad
jg
add
push
sbb
push
ljmp
repnz
jge
jne
repnz
ja
mov
enter
test
xorb
pop
sub
aas
shll
cmp
lods
sub
xchg
add
dec
bnd
cmp
sbb
or
and
in
addr16
insl
fwait
sbb
lret
in
js
cmc
mov
loope
push
sbb
rclb
lahf
mov
sub
mov
cmpsl
push
bound
in
fisubl
shl
xchg
sbb
and
scas
movsl
decb
int3
mov
cwtl
rcrb
arpl
out
or
outsl
inc
insl
xlat
mov
fdivs
sarl
cli
fs
enter
mov
and
push
and
imul
xchg
mov
aas
fcmovbe
in
mov
sbb
jp
icebp
sbb
add
push
bound
jge
dec
mov
dec
int3
mov
test
clc
aaa
in
mov
sahf
push
loop
pop
outsb
or
sub
ficoms
mov
lock
shll
bound
les
fld
push
cmp
rcrl
enter
in
and
xor
add
lret
push
ret
inc
outsl
add
sbb
repnz
loop
neg
in
push
out
ds
dec
into
add
adc
mov
out
imul
scas
lock
mov
cmp
test
cwtl
loop
int3
push
repnz
sub
aaa
adc
cwtl
imul
fsts
fwait
lret
jge
mov
mov
test
dec
cmp
mov
fmulp
pop
pop
js
cmp
and
call
mov
aad
cs
inc
in
or
loop
stos
sub
xchg
push
pop
mov
cli
lret
es
ljmp
dec
adc
dec
out
jnp
and
sub
mov
inc
ret
ret
cwtl
dec
sti
inc
mov
repz
int
lds
fidivs
dec
or
lahf
pop
pusha
in
inc
sub
add
cmp
stos
mov
and
cmp
pop
inc
ss
jo
push
popa
jb
inc
sbb
imul
mov
mov
dec
push
pop
mov
adcl
int3
mov
mov
or
test
push
inc
cli
scas
cmp
arpl
repz
sbb
pusha
adc
jo
pop
cmp
jge
cmp
push
or
sub
rcrl
rol
lds
inc
or
mov
push
fnstcw
fistl
xchg
xchg
push
inc
lret
jne
or
mov
mov
ret
add
sbb
adc
add
add
pop
mov
xlat
pop
mov
cwtl
mov
in
xor
enter
xchg
clc
dec
dec
jl
push
scas
js
xchg
mov
daa
sub
push
fldl
in
jle
out
xchg
xor
xchg
and
xchg
loope
xchg
addb
ret
jne
icebp
std
pop
mov
add
aas
add
fs
push
add
jbe
and
movsl
cmp
in
loop
pop
sahf
sbb
clc
jl
bound
jb
ficoml
pop
inc
out
pop
int3
les
call
lret
aad
pop
enter
aam
add
pop
mov
pop
push
sbb
movl
pushf
cmp
inc
shll
xchg
and
icebp
add
lret
sbb
aam
setno
in
add
testb
cld
adc
lret
stc
rolb
cltd
loop
mov
fwait
in
push
jle
add
push
rolb
xchg
mov
in
xlat
and
jmp
ret
xchg
jmp
int
mov
roll
int3
stos
mov
cwtl
sbb
jmp
sahf
or
test
push
fisubl
jmp
stos
cmp
cmc
mov
inc
sub
fstps
pop
pop
cmp
sbb
outsb
lret
add
xchg
or
lcall
push
fdivs
loop
dec
jl
shl
shll
cmp
sti
cmp
add
divb
jo
lar
cmp
icebp
js
out
adcl
cmp
add
mov
add
add
add
ljmp
faddl
out
xlat
adc
cwtl
add
fs
mov
int3
enter
fsubrl
ja
xor
add
adc
push
push
test
enter
or
sbb
adc
mov
add
add
sar
sbb
aam
cwtl
xor
lods
mov
jp
push
xlat
push
pop
pop
loop
gs
std
call
add
mov
push
push
test
adc
cmp
mov
push
bound
fsubs
test
sub
mov
fstpt
pop
mov
mov
jle
sar
inc
sbb
lret
stc
dec
hlt
or
mov
arpl
notl
fistpl
mov
add
dec
clc
pop
pop
mov
rorb
scas
into
std
faddl
pop
or
mov
out
and
js
pop
das
fldcw
sbb
sub
cwtl
imul
push
cld
mov
sahf
xchg
js
push
hlt
cld
dec
and
pop
fs
xchg
nop
out
xor
sti
shrb
dec
fucomp
in
ljmp
scas
data16
icebp
jecxz,pn
sub
sbb
mov
lea
out
pop
xor
cmpb
jo
inc
and
xor
push
add
push
jnp
add
lods
dec
push
add
arpl
xor
ljmp
mov
js
outsl
push
outsb
push
adc
xor
lods
fisubrl
mov
in
lcall
in
out
mov
scas
xchg
pushf
sbb
repnz
xchg
mov
fimuls
popa
clc
sbb
add
in
adc
push
add
jle
cwtl
xchg
jno
les
rcrl
enter
rcr
andl
mov
pop
pop
pushf
loop
mov
jmp
or
cmp
jno
jno
push
xor
cli
lea
sahf
out
pop
shl
gs
fnclex
push
adcl
jge
xor
icebp
dec
out
sbb
loop
mov
lods
ret
dec
inc
sbb
and
xor
fsub
int3
xlat
mov
loope
cltd
fs
mov
add
scas
aad
inc
mov
add
add
fwait
cmpsl
movsb
push
mov
add
in
and
lds
shll
orb
jae
xchg
mov
push
jle
cmp
jae
subb
clc
ds
pop
cmp
in
inc
and
adc
pushf
sbbl
lcall
repz
cmp
ret
cltd
enter
bound
les
sbb
push
vpcmpeqb
aad
xchg
dec
or
fs
imul
repnz
gs
sbb
call
xchg
imul
pop
mov
dec
ljmp
xchg
or
rorl
fcmovb
scas
sub
push
sbb
push
aad
jmp
sub
add
sbb
lock
loope
and
or
repnz
sbb
and
add
jle
lds
add
and
imul
hlt
shll
sbb
xor
pop
stos
mov
adc
mov
mov
push
daa
inc
or
lock
fcomps
lahf
lret
ret
and
aam
shll
or
inc
cli
or
addb
pop
addr16
les
sbb
lds
jno
push
xor
cmpsb
into
inc
dec
add
es
mov
mov
orl
out
stos
lret
movsl
data16
out
dec
stos
jle
xchg
xchg
ds
cmc
fwait
mov
push
push
mov
mov
push
dec
out
testb
jecxz
fstps
test
bndstx
push
aas
in
inc
popa
jmp
pop
add
call
jecxz
add
add
push
outsb
shrl
pop
xlat
adc
dec
test
jp
or
inc
out
orl
push
mov
shll
orl
xchg
add
adc
sbb
pushf
add
rcl
lret
push
insl
cmpsb
in
and
or
scas
inc
pushf
mov
push
and
sbb
outsl
fidivs
adc
cli
mov
and
push
jmp
fcmovbe
mov
int3
jge
enter
lcall
loope
cltd
popa
dec
sarl
mov
std
sbb
jae
xchg
or
out
dec
inc
xchg
add
inc
sahf
sub
xor
cwtl
rorb
pop
outsb
sub
lea
icebp
lcall
inc
mov
adc
in
dec
inc
inc
test
jns
pushf
or
mov
cmpsb
test
cltd
enter
int3
adc
push
jnp,pt
push
sbb
jle
cs
lods
mov
push
dec
jge
scas
pop
pop
sub
fdivs
lea
or
lcall
les
mull
outsb
lds
jno
push
int3
mov
cmp
mov
push
pop
call
orl
outsl
loope
loopne
rclb
in
mov
and
lds
dec
std
je
ret
dec
movsb
leave
jns
fsqrt
cmp
outsl
stc
ljmp
cmp
inc
insb
push
inc
mov
stos
xchg
cmp
or
mov
insl
or
test
mov
mov
rcrb
mov
nop
inc
inc
and
jmp
lea
test
jecxz
out
pop
cld
outsb
xchg
cmpsl
addr16
lds
mov
das
clc
push
pop
lret
outsl
push
and
jb
sti
dec
jecxz
add
push
and
js
in
int
cli
adc
sysenter
dec
jle
pop
mov
idivl
popf
in
imul
cltd
xchg
sub
popf
xlat
arpl
jecxz
pop
push
jns
sbbb
mov
cmp
aad
icebp
cmc
push
test
xorl
in
imul
push
lods
cld
jns
dec
shlb
mov
adc
bound
inc
push
loope
popa
add
lret
xor
repz
icebp
push
add
testb
xor
cltd
movaps
nop
fisubrl
add
adc
lock
sub
push
pop
cmp
push
js
sub
hlt
stos
push
mov
and
xchg
sub
mov
ds
push
ror
dec
insl
sti
pop
pop
pop
pop
imul
cld
ds
cmp
pop
push
sbb
ljmp
bound
xchg
sub
push
jge
push
ficoms
jp
pop
icebp
and
sbb
sbb
add
stos
jecxz
dec
lods
cmc
mov
add
sbbb
add
sub
cmp
ja
stos
xchg
pop
cmpsl
mov
mov
in
iret
sbb
push
jge
and
push
sbbb
pop
test
fisubrl
sbb
adc
mov
in
in
mov
lret
out
and
xlat
data16
cli
jae
loop
mov
repz
bound
in
push
pop
lea
ljmp
std
or
sub
ja
xchg
loop
mov
mov
xchg
ja
fsts
or
sahf
add
decb
mov
sbb
adc
ds
mov
xor
or
mov
mov
add
aas
loope
jb
jb
scas
mov
xor
shlb
push
xchg
icebp
dec
loopne
push
pop
in
sub
ds
aam
sbb
add
or
lret
xchg
add
inc
xchg
mov
pushf
push
mov
cmp
lods
mov
push
push
mov
sub
fwait
dec
hlt
clc
xchg
mov
jle
shl
adc
adc
das
xchg
call
xchg
stos
push
cmp
jge
fsub
shlb
pop
xchg
fmull
xchg
mov
std
fs
inc
sub
push
in
add
movsw
sbb
jno
xchg
adc
cs
push
mov
aad
stos
incl
or
inc
ret
dec
ljmp
jge
inc
add
push
sub
sarb
lods
inc
mov
dec
lret
push
mov
inc
and
pop
add
in
cmpsb
cwtl
and
pop
mov
cld
push
int
fsubs
jno
dec
les
int
and
jns
push
pop
pop
and
fsub
mov
adc
mov
test
adc
flds
xor
inc
imul
pop
cmp
cld
test
ja
cmpsl
arpl
xchg
adc
repnz
stos
cmp
or
inc
inc
out
push
pop
movsb
push
jle
leave
pop
js
cwtl
dec
or
push
push
push
fidivs
es
shrb
mov
xorb
subl
push
lea
insl
outsb
xchg
sbb
scas
cltd
and
adcb
ss
aaa
or
pop
mov
mov
or
iret
stc
loop
fstpt
and
and
in
xlat
inc
jle
movsb
mov
dec
inc
popf
gs
stc
cmp
add
shll
jmp
rol
xchg
in
pop
adc
popf
in
mov
mov
xorb
lret
ds
cmp
xchg
shrb
incl
lock
lret
jge
into
andl
mov
jecxz
sbb
ret
xchg
pop
push
dec
cmp
divb
cli
in
flds
mov
and
sub
std
mov
in
sbb
stos
mov
cmp
leave
push
ret
inc
and
dec
js
addl
sahf
sahf
sbb
notl
loope
lcall
loop
inc
repz
mov
jnp
pop
add
pop
ljmp
sahf
rcll
inc
cld
push
loopne
adc
out
sbb
inc
test
mov
cmpsb
jo
addr16
ret
cs
fwait
add
in
mov
and
shl
in
mov
addb
adc
jns
in
enter
and
sbb
cltd
sbb
inc
leave
xchg
repnz
aaa
or
jg
fstpl
test
lret
jnp
dec
jecxz
frstor
push
jns
ret
push
in
sbb
inc
icebp
pop
outsb
cmp
xor
lahf
push
neg
cltd
mov
cmp
jecxz
or
and
jo
popf
ljmp
test
in
jp
sti
jns
inc
push
je
pop
xor
inc
or
test
and
mov
mov
int3
cmp
cltd
in
test
loop
inc
inc
sbb
sbb
xor
in
test
fiaddl
xor
je
xor
loopne
jle
mov
jmp
cltd
outsb
push
inc
sub
mulb
jmp
xor
repnz
pop
inc
or
fs
es
push
popa
scas
and
outsb
sbb
fstpl
ret
test
fcom
push
adc
sub
add
jo
push
lret
inc
aaa
bound
push
mov
add
jge
sbbl
cmp
cs
lock
or
cmp
mov
cmp
mov
xchg
int
sbb
and
inc
pop
mov
mov
inc
scas
cmp
insl
or
sbb
sbb
fcoms
out
and
icebp
lret
fadd
pop
jnp
andb
and
out
mov
sahf
mov
mov
call
dec
jmp
push
mov
fisubs
shlb
sbb
jle
ja
push
and
cmpsl
mov
or
cmpb
cwtl
jns
dec
cmp
xor
into
icebp
cmp
add
scas
add
cmp
or
sub
testl
push
cmp
dec
or
add
les
push
out
jle
pop
mov
fs
cltd
mov
jmp
and
movsb
pop
loop
push
fwait
movsl
in
add
js
imul
call
rolb
enter
inc
sahf
call
inc
inc
jae
ret
push
adc
ret
leave
sbb
jle
pop
enter
enter
adc
adc
mov
sub
imul
push
mov
inc
mov
add
inc
cli
sub
shl
dec
adc
test
mov
loop
andb
fwait
stos
ja
test
leave
xchg
xchg
pushf
sbb
fstpl
ffreep
lahf
pop
cmc
add
mov
xchg
add
push
das
std
call
rol
stc
pusha
aam
add
push
jo
inc
pop
lock
pop
sub
xchg
dec
pop
sahf
and
mov
fcoms
and
xchg
cmpb
das
xor
subb
test
test
mov
dec
icebp
lret
inc
add
pushf
shl
adc
ds
jmp
outsb
jmp
mov
sti
xchg
xchg
mulb
mov
in
inc
cmp
xor
sub
repnz
mov
test
xchg
cmp
push
je
adc
aaa
inc
push
dec
jp
jns
aam
ficoms
cmp
dec
scas
jae
mov
push
arpl
mov
jg
dec
adc
cld
xor
push
pop
jmp
sbb
movsl
jnp
rorb
lea
lret
dec
subb
push
outsl
outsb
sbb
and
call
mov
push
jnp
lds
cmp
mov
loope
cmpsl
xor
call
push
jbe
mov
out
xchg
push
daa
mov
xchg
pop
mov
popa
lret
xor
xchg
or
stc
cltd
jnp
sbb
jg
cmpsl
ret
repnz
adc
and
lret
mov
sub
mov
out
add
in
pop
cmpsl
int
cltd
js
fimull
in
rcrb
adc
ljmp
mov
jnp
pushf
pop
jecxz
dec
mov
lods
ficoml
loopne
stos
and
pushf
pop
push
fdivs
aaa
jns
lcall
push
mov
insb
xchg
outsb
sub
scas
pop
mov
imul
ja
add
push
cmp
push
imul
ret
mov
cmpsb
pop
sub
cltd
mov
mov
cwtl
jecxz
adc
into
mov
push
cli
in
xorl
mov
ret
mov
pop
jle
pop
xchg
icebp
rorb
or
ret
sub
add
in
jle
nop
insl
mov
inc
and
xchg
or
stc
and
xor
mov
adcl
outsl
pop
jge
jo
ljmp
jecxz
in
sub
xor
test
test
pop
shlb
outsb
imul
cmpb
inc
loop
movsl
lock
loope
test
mov
shr
je
notb
shll
push
popa
shlb
dec
jnp
ret
sbb
ret
jecxz
sub
in
bound
dec
pop
mov
addr16
rorl
sbb
jo
gs
ret
adc
push
add
dec
pusha
loop
popa
add
loop
sbb
aam
decl
pop
add
fidivrs
inc
sub
sti
ljmp
pop
mov
mov
ljmp
aam
push
sbb
test
cmp
push
in
jecxz
or
sti
jbe
lcall
loop
dec
fstpt
outsb
jnp
and
pop
andb
test
add
jle
sbb
movsb
in
int
adc
jl
fwait
bound
pop
lahf
rcrb
adc
mov
push
xchg
jnp
adc
sbbb
mov
sbb
xchg
sti
sti
fcmovu
cmp
fwait
jnp
fwait
out
fnclex
xor
mov
stc
pop
lcall
aam
fwait
mov
dec
sub
stos
xchg
jne
repnz
and
mov
movsl
sbb
loopne
rol
add
std
adc
int3
out
sub
pop
mov
jmp
xor
dec
insb
or
in
mov
mov
sub
lret
sub
push
or
in
stos
hlt
dec
std
imul
add
push
xchg
xor
jb
lcall
sub
mov
mov
fstpt
lea
imul
cmc
sub
jne
popf
andl
fcmovnu
incl
xor
jge
cmp
and
sbb
add
fdivrl
nop
pop
mov
jecxz
in
cmc
adc
mov
xchg
pushf
pop
sbb
leave
jge
and
jg
add
jnp
push
out
enter
mov
ljmp
mov
adc
fstp
push
xchg
xor
mov
popf
mov
mov
jmp
or
mov
jmp
stos
sti
stos
cs
sub
add
lods
lea
rcrl
stos
lret
pop
jns
sub
mov
push
pop
sub
fchs
push
bound
or
inc
add
stos
les
test
push
in
rol
loop
stos
out
into
dec
or
push
out
aaa
sub
int3
out
lods
jmp
mov
movsl
and
sub
mov
lret
bound
mov
pop
enter
dec
cmc
inc
push
add
scas
cvtps2pd
add
stos
leave
je
adc
leave
jmp
sti
mov
lods
mov
dec
test
dec
lret
pop
xchg
jmp
int3
data16
push
add
or
test
xchg
setl
dec
test
fidivrl
insb
mov
and
imul
test
inc
fstps
push
sub
insb
mov
notb
into
idiv
cmpsb
pushf
pop
addb
add
jmp
sbb
sahf
inc
cmpsb
sub
cltd
inc
add
ficompl
enter
mov
add
jns
add
jmp
imul
orb
insb
or
daa
or
or
jmp
mov
repz
into
push
ret
lret
adc
jecxz
addb
sbb
and
push
lea
jge
stos
push
dec
cwtl
nop
add
cmc
aas
sub
dec
daa
xor
push
ljmp
ljmp
xchg
or
sub
fiaddl
pop
test
int
into
shlb
sbb
enter
test
scas
dec
jno
sub
out
or
loope
jmp
add
imul
jecxz
sti
incb
ret
in
or
movsl
imul
sub
aam
mov
fs
mov
push
cmpsl
mov
rorl
push
sub
flds
pop
shrb
inc
push
pop
repnz
not
jbe
pop
xchg
out
jnp
ficoms
cmc
adcb
and
sbb
ljmp
xchg
pop
mov
ljmp
fists
fs
jne
mov
push
clc
xchg
inc
sbb
xchg
shl
lret
cmp
push
push
jg
push
and
jne
xlat
in
mov
rorl
sbb
xchg
xchg
je
rclb
mov
int
shll
fstpt
ljmp
imul
sub
out
xchg
push
std
and
mov
jne
and
and
mov
jnp
and
aad
push
push
push
fidivs
sti
jne
xchg
inc
mov
sub
mov
jb
jnp
mov
std
pop
stc
push
repz
push
fdivrl
push
aam
add
xor
pop
push
mov
daa
add
xchg
push
lahf
cltd
ret
jbe,pn
popa
pop
hlt
fwait
stc
xchg
negl
cli
fdivp
xchg
fidivs
cld
sub
mov
push
cmp
adc
push
add
fcmove
or
js
add
cmp
cld
ret
sub
cmp
jp
pop
sbb
imul
sti
and
mov
xchg
les
sbb
add
sbb
cli
fidivrl
add
xchg
push
xor
fbstp
mov
sbb
rcrl
pop
cmp
adcb
into
mov
outsl
lds
mov
pop
mov
xor
stos
inc
adc
jns
push
fwait
in
pop
pop
repz
mov
sbb
cmpsl
xchg
daa
jl
frstor
xchg
in
cmc
cli
lods
repz
lret
rcll
je
pop
jbe
and
dec
push
inc
or
add
je
inc
push
mov
cmpsb
sbb
call
mov
je
mov
test
scas
jae
add
ret
icebp
xchg
add
cltd
hlt
mov
insb
lock
in
pusha
mov
push
sbb
fcoms
das
daa
fidivs
pop
push
lcall
imul
lcall
xchg
adc
mov
push
aam
mov
mov
mov
in
mov
inc
lods
jle
xor
sbb
sbb
jl
loopne
cs
or
stc
xor
inc
push
push
or
jne
clc
rcll
ficompl
add
popf
xor
lahf
sbb
sub
bound
lcall
lahf
xor
push
pop
repnz
xchg
inc
test
inc
or
ret
push
cmpsl
push
push
faddp
inc
lcall
andb
cs
mov
test
mov
idivl
pushf
push
fcompl
int3
lcall
int3
outsl
push
mov
cmc
inc
jge
mov
hlt
shrl
pop
in
lds
in
pop
cld
sbb
aaa
fmull
and
cli
xlat
add
jnp
inc
test
add
arpl
pop
lahf
or
push
sbb
test
test
sub
dec
pop
sub
sbb
push
mov
xor
push
mov
or
pop
jle
out
mov
dec
dec
ljmp
cwtl
mov
jno
and
or
stos
sub
sbb
bound
push
mov
int3
add
or
or
cld
sbb
adc
xchg
lcall
push
or
dec
xor
jo
cmp
test
or
xor
subb
rcl
push
icebp
loope
in
sbb
fistl
xor
add
and
or
lcall
fstps
std
aas
adc
pop
adc
adc
fstl
ret
jge
out
pop
add
loope
sbb
fidivrl
pop
fcomps
cmp
clc
rclb
sbb
out
loope
sti
or
loope
jnp
in
jp
fistps
jecxz
adc
cmp
clc
repnz
adc
call
push
adc
push
or
push
mov
pop
std
xchg
pop
loope
mov
loope
mov
divl
push
mov
pushf
std
shr
lcall
add
shlb
ficompl
push
adc
jo
in
add
loope
adc
jecxz
sub
out
loope
dec
and
icebp
push
or
in
sub
cmpsl
adc
xchg
aam
loope
inc
in
repnz
aam
adc
add
loopne
ficoms
lcall
sbb
adc
test
leave
xchg
into
pop
push
clc
adc
inc
dec
fadds
in
pop
subl
subb
cmpl
jno
jae
ret
add
popa
movsb
rolb
icebp
test
sbb
sbbb
jnp
add
jb
xchg
loope
fldl
mov
test
mov
mov
movsl
xchg
xchg
psrad
pop
bound
mov
ja
lods
fists
jb
je
mov
xchg
inc
adc
pop
loop
stos
inc
cmp
loope
dec
fstpt
lret
je
mov
push
fildl
xchg
sahf
xor
les
and
ret
mov
xchg
mov
cmpb
pop
in
push
push
stos
mov
add
fimull
movsl
cli
divl
insl
push
push
or
fimuls
testb
xchg
fiadds
jmp
lret
inc
out
mov
push
inc
movsl
leave
cli
addb
mov
cmpsb
mov
popf
jb
je
or
sahf
loop
mov
sbbb
call
test
mov
or
lcall
add
sti
mov
and
or
dec
pop
add
jmp
nop
or
clc
pop
pop
push
jae
pushf
pop
xchg
fs
cmc
add
test
mov
pop
push
adc
sti
pushf
xchg
popa
lods
andb
outsb
call
leave
incl
bound
sbb
int3
orl
push
enter
add
cmp
faddl
or
femms
mov
sbb
or
xchg
mov
push
push
shl
mull
xchg
dec
addb
in
rcl
int
fbld
xchg
test
scas
and
cmc
cmp
adcb
roll
xchg
leave
scas
sahf
icebp
or
xchg
test
mov
add
mov
mov
sbb
sbb
cs
and
loop
movsl
ljmp
test
push
mov
adc
ss
mov
pop
cmp
int
jnp
fcoms
shlb
lret
sbb
mov
xor
adc
mov
cmp
jae
xchg
inc
sub
insl
inc
int
mov
and
sahf
scas
or
loop
sbb
and
in
and
push
test
mov
add
lea
push
pushl
enter
in
mov
dec
aam
daa
add
cli
movsb
mov
inc
arpl
sbb
lahf
ljmp
jno
sahf
clc
stc
hlt
loop
or
ret
cmp
hlt
adc
pop
mul
fwait
das
and
sub
icebp
push
dec
and
jno
sahf
cmp
int3
stos
pop
fmull
movsb
movsb
mov
sbb
dec
adc
int3
sahf
lahf
ret
jnp
jb
outsl
fdivrs
ficoms
mov
mov
inc
mov
icebp
repnz
dec
fimuls
mov
jp
and
gs
push
test
inc
and
jle
roll
inc
stos
in
mov
and
loop
pop
xorb
adc
sub
push
std
xchg
xor
add
push
jmp
dec
add
lret
dec
add
in
dec
out
push
lods
sbb
mov
mov
adc
lret
icebp
mov
jl
inc
std
or
lock
pusha
hlt
test
pushf
mov
xchg
sahf
rolb
adcl
scas
adc
in
ret
aam
xchg
push
add
push
inc
jecxz
cmpsl
into
mov
mov
dec
fnstsw
jb
mov
dec
out
and
xchg
movsl
mov
cmp
ret
adc
mov
jle
fcoml
jle
out
or
lahf
adc
jbe
adc
loope
lea
sti
movsl
or
sbbb
stos
out
sbb
pop
stos
push
or
mov
out
sbb
test
mov
into
adc
div
loopne
xchg
inc
test
jb
push
sbb
clc
testb
jmp
fimuls
xchg
cs
loope
les
sar
cmpb
cltd
ret
sbb
jns
loope
mov
mov
lahf
in
fstl
sbb
enter
sub
cmpsl
movb
xchg
cld
cmp
icebp
pushf
loope
std
sti
xchg
push
cli
cld
or
loop
popa
fidivrl
adc
sbb
adc
dec
mov
sub
or
cltd
pop
inc
cmp
inc
add
add
xchg
or
mov
scas
orb
adc
loop
fdivrs
inc
incb
sub
sbb
or
int
mov
sbb
jb
lcall
push
xchg
rcl
mov
in
cli
dec
adc
and
mov
add
les
mov
idiv
mov
cltd
mov
xchg
mov
add
push
fidivl
ds
out
dec
add
push
popf
inc
pop
mov
std
lds
push
aas
add
mov
nop
mov
jno
pop
sbb
insl
int3
inc
fistps
cld
cmp
loopne
test
jge
in
add
nop
hlt
mov
pmulhuw
idivb
cld
rcr
pop
mov
scas
in
xchg
xchg
and
xor
add
add
ja
and
push
add
add
xchg
mov
loopne
lock
cmp
sbb
push
add
add
inc
loope
ret
xchg
cmp
in
pop
lret
sbbb
fmulp
pop
fwait
pop
repnz
or
mov
sti
ret
xor
movsl
add
cmp
cmp
jmp
add
fdivr
mov
leave
and
add
jno
movb
mov
rorl
adc
int
sbb
xchg
push
sbb
sbb
ljmp
inc
sbb
ja
adc
sarb
pop
cld
cwtl
mov
push
pop
xor
mov
jge
jbe
mov
push
adcl
fiaddl
mov
sbb
fldl
cmp
rolb
mov
inc
repnz
lea
dec
xor
mov
decb
xchg
setg
xchg
out
dec
ret
imul
mov
add
loopne
ret
into
and
nop
mov
xor
out
test
nop
pop
xor
mov
mov
xlat
cli
shl
arpl
movsb
subl
bound
add
fbstp
enterw
dec
push
pusha
rcrb
js
mov
add
jecxz
mov
fidivl
fstpl
add
sbb
or
fdivr
jns
enter
xchg
idiv
jns
jae
movsl
add
pop
xchg
jecxz
aam
cld
in
sbb
fcoms
in
in
ds
adcl
dec
stc
mov
push
sbb
mov
add
jp
fs
push
nopl
sarl
shll
push
jns
xchg
push
or
xor
lahf
mov
pop
cmp
mov
pop
add
addps
scas
mov
push
sarl
mov
cmp
or
rorl
sbb
into
sahf
inc
pop
mov
jge
std
or
mov
lods
add
faddl
pop
cmpsb
jg
fistps
xchg
bound
mov
flds
leave
insl
std
add
in
sbb
jns
inc
pop
mov
adc
add
mov
jb
bound
cmpsl
jecxz
xchg
mov
loope
push
cwtl
in
mov
inc
imul
pop
das
push
out
shlb
push
dec
gs
add
xchg
cmp
lahf
push
js
cmc
sub
mov
inc
ja
imul
mov
pushf
push
mov
sub
leave
cmp
or
out
add
sbb
shll
push
and
pop
push
mov
into
orb
fiaddl
add
push
xor
jno
push
mov
sbb
stc
pop
jb
add
mov
icebp
and
jecxz
mov
pusha
addl
jmp
add
xchg
xchg
cmp
pushf
dec
je
add
mov
movsb
sbb
mov
fs
frstor
add
in
mov
rorl
or
xchg
lcall
ficoml
cmp
icebp
and
movsb
mov
fwait
sbb
test
faddl
push
cmp
fadd
shll
push
dec
cmpsb
aad
push
mov
in
and
jb
lock
fstl
loope
inc
mov
xchg
xlat
xchg
push
pop
xchg
aam
dec
pop
cltd
mov
adc
lret
jg
xchg
bound
js
mov
and
test
cmc
aam
fiaddl
add
cmpb
or
xchg
lcall
sub
aam
cmp
stos
lret
or
sti
leave
mov
xor
icebp
sbb
sbb
mov
sarl
dec
insb
xchg
cwtl
mov
repz
ffreep
pop
addb
jne
sbb
xchg
mov
lock
push
addb
je
mov
mov
in
rcll
mov
jmp
test
aam
xchg
mov
icebp
movsb
lods
das
dec
adc
andb
shll
leave
insl
pop
sub
add
pop
ss
jecxz
or
adcb
mov
add
push
and
sti
imul
add
loop
xchg
mov
mov
xchg
jno
dec
push
out
fsubs
inc
mov
test
mov
pushf
pop
loope
or
adc
lahf
xchg
and
jp
adc
stos
test
mov
ficomps
mov
sahf
test
bound
sbb
dec
out
aaa
jl
pusha
js
or
lahf
hlt
insb
out
inc
xorl
fcompl
inc
pop
addb
loopne
xor
pop
or
jg
sahf
mov
iret
arpl
and
or
push
nop
clc
and
loop
jge
push
fidivrl
ljmp
shlb
jbe
sahf
add
ret
insl
lods
rcrb
aas
mov
in
jo
scas
aaa
dec
pop
xchg
sub
jge
cmp
testl
push
cmc
insb
cmpsl
add
xor
add
xchg
sbb
jb
jbe
roll
add
adc
cli
ja
mov
cli
test
mov
imul
adc
popa
daa
pop
inc
mov
jo
and
into
out
cld
scas
insl
xchg
xchg
jg
int3
cltd
push
push
loopne
fcom
out
cmc
jecxz
stos
add
xchg
xor
sti
enter
fwait
mov
stos
pushf
jae
js
call
arpl
lret
jnp
and
add
lea
sbb
xchg
add
push
fstpt
xchg
out
mov
not
out
loop
sbb
cmp
sbb
lock
sbb
cld
aaa
sbb
or
dec
push
mov
int
loopne
mov
scas
mov
loopne
add
add
inc
add
pop
xchg
add
loope
sbb
fwait
icebp
gs
rol
sahf
mov
lock
fnstsw
xchg
je
mov
adc
loopne
and
add
and
fidivrs
aaa
repnz
mov
sub
loop
inc
xlat
sahf
push
sbb
lock
inc
sbb
loop
inc
add
incb
fnstenv
fwait
add
incb
cmp
dec
xor
jns
add
outsl
push
loopne
and
mov
decb
dec
cmp
add
push
add
xor
add
xchg
or
cmp
add
incb
scas
pop
push
push
cmp
pop
add
incb
imul
xor
mov
cmpsl
sub
mov
filds
or
sbb
add
cmpsl
or
pop
lock
mov
pop
add
mov
xchg
add
jg
aam
adcl
fstpt
sbb
add
jg
arpl
add
out
add
mov
out
add
mov
cmp
aaa
add
push
xchg
push
cmp
or
aaa
roll
cs
add
ja
inc
arpl
mov
pop
or
mov
hlt
cmp
aas
push
test
add
notl
hlt
ds
mov
push
add
test
iret
daa
les
int3
mov
add
loopne
aad
fs
push
cmp
mov
incl
push
inc
in
mov
cmpsl
adc
adc
sarl
pop
add
mov
pop
add
das
mov
add
pop
add
push
mov
push
add
push
cmpsl
cmpsl
cmp
add
aaa
add
mov
mov
lahf
and
mov
jae
add
das
sbb
cmp
pop
add
jge
cmp
add
out
add
out
sub
add
xchg
cmp
adcl
mov
int3
mov
filds
jge
pop
out
mov
jg
lods
push
cmp
add
out
subl
fstpt
rclb
cmpb
pusha
call
pushf
jmp
shl
mov
pushf
lods
jmp
dec
outsb
imul
je
outsl
outsb
and
jb
jb
and
shr
rolb
add
shr
roll
add
loop
add
bsr
shrd
mov
jmp
pop
push
sahf
inc
imul
pop
push
clc
sbb
push
in
dec
mov
enter
test
std
into
push
add
jne
loope
cmp
pop
sbb
addr16
pop
xchg
pop
mov
faddl
jb
and
fs
push
jo
xchg
add
sbb
cmp
inc
mov
jg
push
push
sbb
jnp
decb
nop
sub
addr16
je
addr16
mov
push
xor
lcall
jge
or
mov
enter
mov
push
inc
inc
and
rcrb
ror
sahf
inc
imul
lods
jne
or
shlb
les
rorb
dec
aad
xchg
or
sahf
mov
lods
enter
sub
rorl
stos
and
jge
cmpsl
hlt
repz
jl
mov
mov
mov
mov
fisubl
mov
test
mov
int
in
mov
int
inc
test
jp
pop
pop
add
or
sbb
pop
push
in
push
popa
inc
and
sbb
xor
lea
jae
push
xor
pusha
call
mov
mov
pushf
pusha
cmpb
pusha
call
sub
lahf
inc
imul
push
movsb
dec
sub
int3
call
stc
and
and
bound
repz
daa
outsb
test
sub
testb
pop
ror
jbe
jae
sbb
and
push
outsb
test
adc
jns
pop
inc
sti
mov
mov
inc
imul
push
rcrl
pop
out
mov
and
xchg
test
sti
add
mov
pushf
ret
add
or
das
shrb
insl
adc
adc
push
xor
dec
jmp
xchg
stos
cmpsl
idivl
hlt
dec
sbb
pop
outsl
jne
mov
shll
jbe
dec
dec
stc
clc
or
in
aaa
dec
in
sub
sub
adc
add
xchg
lahf
xchg
cmp
jne
xchg
lods
aad
dec
testl
cmp
shlb
call
cmp
call
enter
inc
imul
mov
stc
adcb
fdivl
test
ret
addr16
gs
in
bound
jb
cmpsb
xchg
sbb
pop
lcall
mov
scas
fmull
rorb
mov
or
nop
out
jg
lds
or
add
jp
aas
add
stos
sub
imul
ss
mov
je
push
jl
jmp
pop
icebp
push
jle
iret
cmp
pop
cmpsl
mov
add
lcall
mov
in
pop
jbe
sub
leave
push
xchg
mov
iret
xor
fimull
jp
fs
xor
mov
mov
fs
fcomps
lods
adc
mov
ret
inc
and
cltd
push
std
mov
int
push
sub
push
sub
cwtl
in
mov
dec
dec
adc
lea
or
mov
ds
addr16
pop
push
pop
xchg
sub
push
xor
dec
fdiv
test
cmp
mov
or
daa
cld
sarb
bnd
fst
imul
cmc
gs
and
push
pushf
xor
xor
fisttpl
adc
or
pop
xchg
or
xor
cmp
clc
fdiv
jp
sub
cs
aas
jno
sbb
outsl
dec
or
mov
andb
push
out
mov
add
adc
jae
in
mov
pop
jge
es
add
cltd
lret
repnz
and
adc
mov
test
and
add
and
and
out
add
out
lea
je
mov
movsbl
lea
pushf
movsbw
not
jmp
pusha
jmp
mov
lea
jb
pushf
pusha
cmc
cmp
cmp
pushf
mov
call
pushl
popl
movb
movl
pushl
ret
lea
jne
bsf
dec
clc
not
mov
bt
bt
add
bt
cmc
bt
call
cmc
movw
cmp
movb
pushf
lea
jb
test
test
pushf
cmp
call
and
xchg
inc
imul
daa
lret
cwtl
sar
movl
xor
sub
daa
jge
xor
or
sbb
sti
ficompl
lods
mov
pop
mov
jne
sub
pop
sub
sub
xor
rorl
jl
je
fdivl
enter
lea
cmpsl
rcll
jmp
imul
pop
and
ljmp
add
add
ror
lahf
ror
push
daa
stc
push
movw
lea
rcr
sbb
sub
sbb
not
movsbl
push
ja
push
shl
push
sbb
lea
sub
bswap
jns
pusha
lea
mov
jmp
pop
xchg
aas
nop
inc
imul
push
ficoml
adc
mov
mov
pop
sbbb
pop
lret
les
fmul
cwtl
mov
sub
push
dec
adc
mov
test
jge
push
xchg
loop
inc
insl
jae
jo
jge
fs
idivl
lds
dec
nop
inc
imul
jb
inc
fistps
xor
xchg
mov
sarl
out
fwait
mov
xchg
adc
lods
cli
jge
leave
movsb
aam
frstor
stc
jmp
mov
aas
aam
push
push
and
arpl
rclb
dec
sahf
into
mov
shlb
xor
fs
xor
fisubrs
bound
popa
rcrb
xchg
pop
rorb
pop
jl
push
cmp
xor
xchg
xchg
jnp
mov
inc
lea
inc
and
cmp
ffreep
enter
push
repnz
jmp
push
jmp
rcr
jmp
jmp
mov
jmp
jmp
mov
pushf
lea
jmp
bswap
aaa
xchg
inc
imul
mov
out
cmpsb
jbe
or
sub
rcr
test
pop
mov
out
sub
xor
or
in
add
jbe
rcrb
daa
inc
mov
jb
int
sbb
dec
js
or
in
scas
js
inc
in
icebp
aad
push
fcoml
inc
jae
movsl
test
scas
push
push
out
pop
pop
xchg
add
sub
push
int3
lcall
lcall
repnz
mov
test
pop
add
sub
test
stos
add
pusha
cmp
call
ror
not
add
cmp
mov
test
cmp
stc
cmp
test
pushf
push
lea
je
stc
sub
jmp
imul
pop
movsb
push
push
adc
mov
lcall
aas
fistps
inc
loopne
enter
mov
les
mov
mov
and
iret
jo
push
out
pandn
inc
loopne
inc
adc
inc
in
xorb
fcompl
sub
jge
mov
loopne
int
xchg
inc
imul
adc
aam
fdivrl
cmpw
mov
xchg
mov
and
stc
shll
push
test
add
inc
lods
out
add
mov
jne
mov
pop
xchg
push
sub
pop
jecxz
inc
das
out
stos
scas
fadd
jno
mov
push
das
test
mov
mov
shrl
or
push
stc
dec
mov
repz
sub
mov
test
roll
push
sub
or
xor
shll
js
adc
aas
loope
int3
add
inc
lea
xchg
in
mov
mov
lea
lds
mov
xchg
sbb
mov
ljmp
push
sahf
push
pop
mov
enter
xchg
dec
out
pushf
pushl
pushf
lea
call
pusha
mov
pusha
pushf
lea
jmp
pusha
lea
jae
stc
cmc
jmp
call
mov
cmp
or
push
mov
pushf
lea
jne
bsf
cmp
mov
jmp
lea
ja
clc
imul
test
stc
add
pusha
pusha
lea
jmp
daa
adcb
inc
imul
daa
repz
repz
movsb
add
pop
pop
sub
fwait
xor
adc
ljmp
inc
or
and
and
mov
bnd
xchg
sbb
ret
je
clc
push
dec
std
xor
cmpl
adc
es
out
xchg
inc
mov
movsl
sar
sbb
cmc
leave
leave
sbb
add
inc
and
call
pop
sub
xlat
push
jp
fiaddl
push
inc
sbb
aad
imulb
sti
push
stc
mov
cmp
or
pop
mov
sti
lret
fldl
into
fmuls
loope
aam
sbb
lods
xlat
and
push
adc
pop
mov
ds
or
or
jl
out
push
das
dec
int3
orb
dec
arpl
or
nop
cltd
movsb
mov
negl
clc
mov
xor
mov
subb
mov
mov
and
mov
sbb
aaa
adc
ljmp
jmp
lea
je
jmp
add
pusha
lea
je
pushf
add
pushl
lea
jmp
lea
jb
pushf
mov
pusha
call
jmp
pusha
call
dec
rcl
mov
clc
pusha
push
pushl
cmpb
movb
jmp
jmp
jmp
lea
jo
pusha
mov
movzbw
pusha
mov
pusha
pushl
ret
add
insb
jae
jb
popa
je
add
sbb
lcall
loope
add
orl
inc
jmp
cmc
out
xchg
inc
imul
mov
sbb
addl
cmp
fsubl
hlt
rcll
mov
inc
push
pop
lret
pop
jnp
xchg
xor
mov
sub
xor
imul
fistpl
mov
hlt
mov
mov
dec
or
jge
loop
lcall
fsubrl
fs
cwtl
adc
dec
mov
mov
imul
dec
lret
and
xchg
fwait
out
inc
or
iret
lret
inc
xor
mov
pusha
ror
xchg
push
int
sbb
enter
push
clc
test
pop
sub
push
or
pop
inc
cltd
stc
inc
insl
mov
fists
mov
lahf
pusha
pushl
bswap
mov
mov
push
pushl
ret
mov
call
sbb
es
imul
jg
fisttpll
and
fdivs
sub
lods
jp
dec
cs
sahf
jb
ljmp
push
cmp
cwtl
test
sbb
js
sbb
dec
sarb
inc
das
adc
fcomps
adcb
add
xchg
xchg
jge
imul
mov
dec
dec
mov
jp
sub
xor
sbb
pop
mov
cmp
jbe
loop
inc
aad
clc
ret
sbb
dec
out
cltd
adc
push
cmp
aad
push
push
xor
int3
inc
cmp
add
pop
fistpl
mov
jg
xchg
inc
orl
mov
add
mov
mov
dec
iret
into
rcll
push
test
mov
repnz
aaa
sbb
push
jae
in
fs
aad
xor
and
fbld
push
test
out
loop
les
ret
pop
stos
aas
loop
mov
xchg
and
outsb
push
jnp
adc
ret
push
stc
and
pop
sub
cmp
loop
pop
clc
rcll
pop
shll
sbb
notl
imul
cmpl
cmp
cmp
inc
jge
je
xor
xchg
sbb
loopne
arpl
mov
in
push
icebp
lds
punpckhbw
sub
xor
jb
xchg
repnz
inc
cmp
mov
inc
arpl
inc
mov
sub
das
xchg
push
movsb
cmpsl
sbb
mov
shll
mov
int
ret
add
lock
dec
inc
xor
test
inc
or
dec
pop
std
mov
les
push
push
xor
sti
xchg
int
xor
or
push
popf
pop
out
jae
mov
pop
ja
into
jae
sbb
cli
fldt
in
and
xor
adc
jmp
in
and
loop
icebp
xchg
sahf
sbb
mov
imul
shlb
shll
push
push
rorl
cmp
xchg
pop
pop
xor
xor
rcll
not
ljmp
pop
and
mov
mulb
xor
mov
push
or
xchg
sub
jbe
mov
push
lods
xchg
daa
mov
xor
push
xor
mov
push
xor
mov
pop
jno
jb
inc
and
sbb
lcall
sbb
cmp
cmpsl
dec
inc
jl
cmp
and
inc
aad
jp
movsb
cmpl
mov
add
cltd
or
sub
add
outsb
rcrl
clc
aad
pushf
fdivs
subb
and
mov
sbb
je
push
shrl
subb
mov
xchg
xchg
pop
bound
stos
jbe
mov
add
add
jge
jge
mov
and
or
pusha
movsl
adc
sahf
push
pop
add
xchg
lahf
push
popf
sbb
add
pop
ds
add
push
mov
xchg
cmp
and
rorb
push
lcall
stos
push
out
pop
inc
cmp
popa
lods
inc
scas
mov
int3
mov
pop
addl
mov
push
adc
je
jno
push
mov
jns
jno
adc
shl
stc
fwait
xchg
je
jecxz
cli
mov
lcall
pop
sub
inc
out
in
xlat
or
das
xor
loop
sbb
outsb
inc
imul
sub
mov
and
fdivrl
mov
and
push
sti
imul
fdivr
adc
repnz
pop
jle
insl
in
call
fists
repz
fidivl
xor
mov
cmp
cli
data16
inc
push
sti
xlat
je
adc
fistl
pop
shrl
mov
add
pop
ret
xor
dec
push
addr16
push
mov
out
jle,pn
test
test
and
mov
pusha
mov
movb
movb
pushf
push
lea
jmp
mov
insb
outsl
inc
imul
sbb
pop
pushf
and
mov
push
daa
fisubs
movsb
bound
mov
stos
lods
adcl
jb
or
xchg
sbb
ret
jne
in
push
or
pop
orl
push
stc
cmpsl
inc
cwtl
aam
adc
jae
aaa
cmp
jo,pt
mov
sbb
lea
mov
pop
rorb
sbb
sub
mov
cmc
clc
cmp
stc
shl
jmp
pushf
add
mov
pusha
cmp
movzwl
lea
test
mov
stc
test
add
jmp
bswap
movb
lahf
lea
push
mov
mov
push
pushf
call
call
mov
call
mov
not
push
not
mov
pushf
pushl
ret
cmc
call
push
mov
cmc
add
jmp
xor
pushl
lea
jmp
jo
or
imul
shlb
cmp
add
jnp
xor
fcompl
ja
enter
fcoms
mov
inc
lahf
rcrl
fnstenv
or
insb
clc
rolb
js
jns
out
imul
divb
divl
movsb
cs
les
sahf
popa
out
lret
js
out
orb
bound
shlb
sbb
insb
xor
dec
jo
mov
push
or
and
dec
imul
into
adc
lods
sub
sbb
push
and
nop
or
mov
nop
test
movsl
js
into
push
iret
ret
in
sbb
sub
xchg
arpl
shlb
sub
cmpsl
dec
push
jae
jg
out
xchg
lea
lcall
rorb
mov
mov
xor
loope
mov
xor
or
mov
mov
pop
dec
xchg
lods
cli
stc
les
nop
scas
lods
cmp
sbb
and
jbe
lret
mov
adc
add
pop
xchg
jecxz
cld
adc
mov
cmp
int
jbe
scas
lock
mov
push
out
cmc
test
jecxz
xchg
xor
push
or
pop
cli
jne
or
mov
xchg
cmp
push
mov
or
dec
fstps
dec
xor
je
push
sbb
xchg
push
xchg
loopne
sbbb
daa
jmp
stc
or
lock
xchg
cmp
xlat
aas
inc
daa
push
mov
and
insl
fistpll
mov
jb
sti
shr
nop
add
in
insl
inc
imul
jmp
call
xor
pop
enter
mov
jb
ret
cmp
xchg
mov
push
cs
lret
lods
test
imul
std
fcom
stos
fists
lods
xchg
and
outsb
lods
push
dec
lcall
mov
lahf
push
push
aad
sub
ss
xchg
enter
xchg
in
xchg
add
fcomps
imul
sbb
jno
lahf
push
adc
xchg
push
sar
mov
adcl
inc
or
dec
pop
gs
sub
cli
push
jmp
xor
and
sbb
dec
mov
mov
cmp
or
fidivrs
lret
jo
add
mov
aaa
shlb
loop
sub
and
mov
push
popa
mov
stc
xchg
dec
ret
xchg
hlt
out
js
xchg
xorb
negb
sbb
and
aam
stos
clc
pushl
pushf
pushf
movl
push
push
lea
jmp
sub
call
push
jmp
lea
jne
movzbl
push
mov
movb
bswap
jmp
jmp
pushf
mov
lea
je
call
shrd
bswap
bt
mov
bsr
push
or
ror
mov
push
push
clc
call
lea
je
jmp
pop
lea
call
call
clc
clc
jmp
call
pushf
call
sbb
in
arpl
cmp
xor
and
sbb
mov
mov
or
push
xchg
jbe
rorl
pop
fldl
scas
clc
add
fistl
aad
xlat
cmp
jnp
cmpsl
push
cmc
fcoml
imulb
rcrl
push
inc
jge
pop
imull
ja
jmp
cmp
mov
or
inc
or
pop
shll
rorb
adc
cwtl
xchg
pusha
inc
imul
dec
call
testl
push
xchg
pop
fistps
cltd
xchg
sbb
loop
addb
mov
xchg
push
scas
dec
rcrl
sbb
ret
push
pop
icebp
ss
lret
loope
fucomi
fdivrl
sti
lea
jne
call
in
mov
scas
out
pushw
sbb
shlb
daa
xchg
cmpps
subl
rorb
adc
jns
sahf
icebp
imul
and
push
into
cmc
mov
fisttpll
pop
lock
and
flds
sbb
sti
pop
enter
je
mov
pop
cmp
xchg
dec
cmp
addb
incl
add
test
adc
add
lods
stc
pusha
adc
add
mov
or
sub
rcr
lea
clc
pushf
cmc
sub
pushl
pushl
popl
pushl
pushf
lea
jmp
mov
pushf
pusha
pushf
pushf
pushl
ret
movl
push
jmp
pushf
adc
lea
pushf
pushf
pushl
pushl
ret
cli
inc
push
inc
imul
lods
sbb
test
and
repz
adc
jbe
jae
add
mov
pop
add
or
add
or
jecxz
orb
outsb
pop
xor
and
push
orl
fstpt
mov
popa
inc
imul
and
push
sub
mov
and
in
mov
xor
fdivl
test
pop
mov
mov
sub
ret
ja
imul
sbb
insb
inc
mov
rcrl
arpl
jne
xchg
mov
stc
in
and
pushf
jmp
stc
ja
inc
jne
jmp
stc
or
jmp
add
popa
cmc
cmp
inc
and
lret
add
lea
call
jmp
pushf
movb
push
lea
jbe
test
bsr
lea
not
mov
bswap
shl
rcl
sar
add
shr
not
jmp
neg
cmp
mov
mov
sub
test
pushf
clc
cmp
movsbw
jmp
lea
not
lea
jmp
neg
rcl
mov
cmc
not
bsf
bsf
mov
and
mov
jmp
pushf
pushf
movw
mov
lea
call
cmp
jnp
test
sub
push
lea
jne
jmp
clc
cmp
push
pushf
pushf
mov
lea
ja
jmp
call
btr
mov
mov
clc
and
call
lea
bswap
bswap
mov
movw
lea
ja
pushf
lea
jb
clc
test
cmpb
pusha
jmp
stc
cmp
or
pushf
lea
je
call
inc
pushf
mov
pushf
mov
lea
jo
pushf
pusha
lea
call
push
pusha
jmp
mov
lea
ja
pusha
jmp
pushf
jmp
call
lea
jne
test
stc
test
pusha
mov
pushf
pushl
cmc
add
cmp
push
call
int3
and
ljmp
push
les
push
jge
mov
xorl
das
shrb
ljmp
mov
nopl
lret
add
aaa
cmp
sub
inc
insl
gs
adc
xchg
jmp
outsl
pop
nop
add
cmp
cmp
push
mov
add
sbb
bt
jmp
lea
jb
pushf
pusha
movb
pushf
pushl
ret
or
mov
jmp
pusha
mov
movl
movl
movzbl
cwtl
mov
not
lea
call
add
dec
outsl
arpl
inc
jb
add
cmp
mov
push
lea
je
pusha
pusha
push
lea
jmp
repnz
mov
jmp
push
lea
jne
not
call
mov
cwtl
lahf
movzbw
lea
push
call
lea
jae
jmp
call
movl
jmp
lea
jmp
jne
mov
sti
xchg
orl
dec
xor
dec
stos
dec
cltd
xchg
adc
jns
es
imul
sarl
sub
sahf
and
aaa
xchg
push
outsl
mov
cltd
xlat
mov
ficoml
adc
lret
insl
mov
mov
out
lock
xor
leave
jp
imul
dec
and
js
pop
imul
sub
sub
js
adc
push
mov
nop
pop
mov
cmp
push
fwait
aad
inc
xchg
mov
adc
mov
dec
movsb
in
scas
or
lret
es
mov
cld
inc
shll
stc
loope
insb
inc
in
mov
std
cmc
adc
les
inc
rcl
rclb
inc
and
mov
test
and
je
bt
add
push
cmp
jmp
pop
pushf
push
lea
je
push
call
out
jle
jp
imul
lret
stos
mov
cmp
popf
push
inc
lret
test
xchg
dec
out
cltd
xchg
push
jo
mov
rorb
push
int3
in
mov
rcl
push
push
xor
sub
inc
out
mov
dec
sti
enter
es
inc
in
in
push
ret
mov
jp
testl
xor
jge
add
jmp
int3
lcall
imul
fiadds
and
add
dec
xchg
mov
movl
mov
movl
pushf
lea
jmp
bt
or
push
pushf
mov
lea
je
push
not
mov
mov
bswap
call
sub
sub
mov
stc
cmpb
call
and
mov
imul
cld
cs
pop
dec
clc
bound
arpl
sub
mov
sub
test
or
sub
addr16
repz
fadds
pushf
pusha
mov
push
test
jmp
jmp
mov
sarl
mov
fsubs
cmp
mov
leave
test
mov
jo
sbb
xlat
xchg
push
xchg
push
jne
leave
dec
rcr
mov
sub
shll
rcrb
add
add
movzbl
jmp
or
push
pusha
lea
jne
pusha
mov
pushf
pusha
bt
or
movl
lea
je
xchg
movsbw
lea
mov
movzwl
movzbw
jmp
add
inc
js
je
jb
arpl
jae
xlat
scas
insl
js
imul
pusha
push
aam
jl
jns
aaa
mov
or
int3
aad
imul
jae
imul
sahf
shlb
jl
xchg
sahf
mov
mov
push
xchg
push
ficomps
outsb
add
mov
dec
sbb
adc
maxps
xlat
xor
push
mov
xor
imul
test
xchg
cmp
mov
xchg
in
mov
adc
add
rdpmc
int
js
fstl
pop
fwait
loopne,pt
pushf
push
jo
aam
fbstp
andl
push
pop
push
mov
in
sbb
call
dec
or
inc
or
adc
sti
and
scas
jecxz
mov
pop
jl
jg
lahf
mov
push
jecxz
inc
stos
test
ret
out
fistps
fstpt
xchg
pop
jae
xchg
cmp
jle
mov
push
mov
adc
in
pushf
mov
fmull
stc
jns
mov
int3
sbb
iret
inc
or
test
js
jge
inc
ja
sub
jbe
pop
leave
lds
leave
dec
jmp
sub
stc
fcompl
cmpsb
std
in
inc
cmp
lock
mov
rcl
bound
fldcw
pushl
jmp
lea
pushf
push
call
jmp
pushf
pusha
push
movl
movb
mov
movl
pusha
push
movb
mov
lea
jmp
pusha
pushf
pushl
lea
jae
pusha
lea
jne
jmp
test
icebp
jle
imul
shlb
sbb
enter
add
cwtl
clc
dec
push
pop
lods
ja
xor
inc
mov
inc
cs
jae
cmp
inc
xor
setge
xor
sub
aam
pop
imul
dec
sub
scas
and
or
stc
clc
jae
add
lret
dec
push
push
xchg
movsl
loop
adc
jae
or
pop
lcall
fdivp
sbbb
dec
hlt
xchg
inc
repz
mov
jg
imul
mov
cwtl
lahf
lret
dec
in
ret
das
aam
xchg
push
sbb
lods
jmp
mov
cmp
div
mov
mov
jo
xor
inc
xchg
fsubs
mov
cmp
mov
sbb
xlat
cmp
inc
inc
imul
jmp
mov
into
popf
push
gs
sbb
fldl
aam
add
outsl
adc
lds
push
cmp
int3
lock
xor
push
in
out
jp
inc
adc
loopne
sahf
imul
xchg
jbe
mov
xchg
and
pop
outsl
inc
cmp
pop
dec
imul
ljmp
mov
add
ss
pop
dec
cld
or
clc
pushf
inc
popf
movsl
dec
xchg
loope
jno
mov
fiaddl
jb
jl
lock
jbe
out
cmp
sbb
sub
xor
shll
jns
div
adcl
inc
dec
xchg
outsb
xchg
jb
or
lret
imul
aam
repnz
xchg
push
push
add
push
inc
cmp
pop
cmp
push
xchg
or
repz
jmp
pusha
call
inc
inc
outsl
jl
imul
adc
scas
push
push
fidivrl
sbb
das
xchg
cmpsb
movsl
xorl
inc
mov
loopne
fwait
sbb
adc
xchg
aas
aaa
call
movzbw
lea
call
add
add
xchg
add
add
add
ret
add
add
add
and
add
add
add
incl
add
add
and
add
insl
and
add
add
push
mov
pushl
movl
pushl
movb
pushf
call
test
bt
or
call
movw
xchg
pushf
mov
pop
movsbl
lahf
lea
pushf
mov
mov
mov
xchg
push
movl
movl
pusha
lahf
movzbw
not
lea
lea
js
push
push
mov
call
pusha
stc
add
jmp
cmp
inc
jge
imul
cmc
decl
mov
inc
insl
lods
mov
mov
lahf
and
cmp
cmpsb
xchg
or
add
fisubs
mov
mov
sbb
or
push
mov
pop
inc
lods
loop
xchg
insb
mov
gs
pop
mov
in
xchg
repnz
add
stos
test
mov
stos
daa
mov
insb
pop
add
dec
lea
iret
adc
and
idiv
sub
cmc
add
mov
movb
pushl
lea
jmp
mov
jmp
pushf
pushf
push
jmp
movzwl
sub
movsbw
call
not
inc
call
bt
call
movl
pushf
push
lea
jmp
jmp
pusha
movl
call
movl
pusha
mov
lea
jmp
pushf
xor
lea
call
movl
pushl
mov
pushl
popl
pushf
pushl
ret
jmp
and
out
inc
imul
mov
fwait
imul
xchg
pop
pusha
negl
lret
mov
fcomps
adc
cmpb
ss
add
outsb
pushf
jmp
xor
stc
outsl
cld
push
mov
xchg
lea
fsubrp
pop
rorb
cmp
sub
test
sarb
xchg
jge
lcall
push
mov
outsl
mov
lret
aad
shll
test
clc
jne
test
sub
push
inc
and
leave
push
pop
pushf
cmc
movl
add
pusha
lea
jne
sets
call
sbb
jnp
xchg
dec
aam
inc
imul
add
adc
mov
push
jae
test
rcrb
inc
pop
jo
rolb
xchg
jbe
xchg
adc
rcr
pusha
sub
test
fmull
outsb
lock
adc
sub
inc
cmp
stc
pop
aad
in
ja
inc
leave
jne
xchg
inc
push
rcr
imul
js
fiadds
push
shll
pop
mov
loope
je
mov
push
jmp
push
std
inc
test
fwait
mov
jl
jle
xor
cmp
push
popf
mov
inc
test
inc
mov
js
and
mov
lods
mov
xchg
lods
xchg
loop
xor
ret
push
mov
jo
aaa
pop
mov
aad
dec
arpl
imul
stos
and
dec
push
sbb
and
ja
daa
and
pop
data16
or
testb
ret
adc
pop
and
pop
imul
enter
sub
nop
jg
adc
sub
mov
movsl
lret
vphaddbd
push
lret
mov
xchg
xor
dec
dec
push
jg
push
insb
rcrl
je
popf
sti
mov
jae
pop
cltd
sub
stc
mov
mov
ljmp
ret
cmp
pop
inc
loopne
fistps
cld
sahf
push
cmp
xchg
jmp
and
rol
lock
test
call
inc
and
mov
and
inc
iret
pushf
inc
lea
call
movl
pushf
push
pusha
lea
jmp
or
jmp
not
jmp
sub
jno
imul
sahf
dec
sub
mov
mov
add
in
xor
ljmp
lods
pop
lcall
imul
fwait
test
push
in
lock
jne
xor
jle
scas
adc
das
inc
inc
aas
dec
outsb
ret
xchg
jecxz
mov
pop
adc
cld
dec
and
rorb
mov
aad
aas
push
rol
sarb
js
je
nop
hlt
xor
and
aas
cld
lds
or
in
cmpsb
dec
pushf
push
lea
jmp
lea
ja
push
test
add
sub
jmp
pusha
pushf
movw
lea
jae
and
pushf
mov
test
movsbw
cmp
mov
bsr
cmp
sar
mov
cmc
sub
pushf
pushl
lea
jmp
lea
jne
lahf
jmp
mov
jmp
pop
xchg
cmpsl
jbe
imul
dec
mov
lret
into
outsl
dec
cltd
cs
bound
add
push
ret
xor
loop
xchg
adc
pusha
xor
sbb
out
sbb
and
rcrl
xchg
mov
lahf
inc
rorb
rcl
inc
jmp
adc
sbb
pop
dec
jle
sbb
mov
jge
in
inc
sub
dec
in
mov
aad
xchg
fs
add
sahf
mov
pusha
movl
pushf
movb
movb
pusha
movl
pushf
lea
jmp
mov
pushf
mov
pusha
jmp
xchg
out
push
ja
imul
adc
jecxz
filds
add
lret
in
mov
sub
fisttpll
mov
pusha
cwtl
jnp
fdivp
cmp
mov
repz
mov
push
mov
cmp
dec
mov
adc
aaa
daa
adc
xor
fcoms
hlt
fsubs
push
xchg
insl
sbb
insl
jge
cmp
popa
ret
cmpsl
movsb
inc
inc
psrad
mov
test
push
or
negb
orl
mov
int3
xor
sub
pop
stc
shl
sbb
mov
pusha
pushf
jmp
xchg
pop
jmp
mov
pusha
cmc
cmp
pushl
lea
jb
pushf
pushf
cmp
cmp
movb
movb
lea
ja
pushf
and
add
lea
pushf
cmc
push
mov
clc
call
mov
xor
mov
clc
sub
pushf
pop
pop
movsbw
pop
not
jmp
lahf
lea
mov
setno
setle
pop
push
lea
mov
jmp
rol
test
neg
push
stc
mov
cmc
sub
cmp
call
add
pusha
movb
pushl
dec
lea
jle
jne
stc
rol
mov
clc
cmc
cmp
pusha
pushf
push
lea
ja
pushf
mov
xchg
mov
setae
mov
pushf
mov
call
sbb
je
imul
jne
push
in
pop
xchg
daa
lret
xchg
mov
jnp
movsl
shl
fldenv
shll
bound
push
movsl
and
std
dec
mov
adc
gs
fs
xchg
dec
adc
pop
inc
arpl
scas
ljmp
sub
repz
mov
adc
or
sbb
cmc
mov
xchg
or
and
inc
mov
add
adc
jmp
in
in
fldl
aaa
icebp
adc
xor
push
pushl
push
pusha
mov
mov
mov
call
movb
lea
je
cmc
sub
call
movzbw
mov
lea
push
movl
pusha
movb
mov
call
enter
inc
imul
pop
mov
sub
push
adcl
loope
les
icebp
mov
insb
loope
sarb
mov
add
fnstcw
push
test
dec
xchg
push
dec
scas
das
loopne
fimull
jnp
fsubl
cs
inc
add
dec
sub
and
jbe
enter
add
ret
clc
jae
mov
js
cmpsb
xchg
dec
xchg
ljmp
out
adc
arpl
xor
js
pushl
popl
pushf
push
pushl
ret
lea
call
call
movzwl
bswap
pop
lea
pusha
mov
pushf
pusha
pushl
lea
call
push
jmp
movzbw
pushl
popl
pusha
not
mov
call
call
mov
imul
jg
clc
mov
test
mov
popf
xor
jg
push
shrl
popf
popa
mov
xchg
lcall
jbe
in
call
mov
add
pushl
lea
jmp
or
push
pusha
lea
je
lea
pusha
call
add
push
gs
insb
outsl
jae
dec
gs
clc
neg
mov
ror
call
xchg
shll
imul
push
test
lods
stos
popf
stc
sub
xor
mov
push
adc
punpckldq
xor
dec
jmp
test
scas
cmpsl
mov
dec
jmp
xor
sahf
lds
adc
jne
into
mov
cs
push
mov
and
push
clc
dec
pop
xlat
testb
xor
cmp
lret
sahf
repnz
push
sbb
and
cmp
jbe,pt
cmpsl
fs
add
lea
jne
dec
mov
cmc
pushf
bt
add
clc
test
cmc
bt
movzwl
inc
bsr
pushl
mov
bt
add
cmc
stc
cmc
mov
pushl
call
es
add
add
add
ret
add
add
add
and
add
add
add
incl
add
add
and
add
insl
and
add
add
push
lea
call
push
adc
pushf
push
pusha
call
mov
stc
cmc
jmp
push
pop
jle
inc
imul
movl
js,pt
sahf
sbb
mov
xchg
cltd
inc
pop
sarb
rcr
jl
pop
sub
lret
or
test
pusha
inc
xchg
mov
cwtl
xchg
jb
in
push
push
pop
call
jns
dec
push
push
xor
mov
mov
mov
in
test
rcll
push
out
push
dec
in
loop
rcll
mov
imul
inc
fwait
adc
stc
repz
push
ja
inc
dec
aaa
inc
jmp
push
mov
and
xchg
jae
pushf
mov
mov
mov
mov
jmp
jmp
pusha
mov
mov
push
push
pushl
pushl
ret
cmp
imul
jmp
sti
aas
loope
daa
push
sbb
in
pop
cmpsb
faddl
lock
sub
push
fcmovu
repnz
mov
bound
mov
cmp
popa
out
adc
scas
inc
daa
push
sbb
push
mov
cwtl
xorl
loope
mov
sbb
dec
inc
imul
ds
and
sub
push
in
pop
cmpsb
mov
inc
jp
lea
mov
int
repnz
repnz
push
jecxz
cmp
test
mov
pop
in
lret
dec
lock
mov
insl
leave
cltd
mov
cmp
sub
test
pusha
push
call
jmp
cmp
mov
push
lea
je
cmp
pusha
stc
stc
cmp
pushf
mov
lea
je
cmp
cmp
clc
bt
cmp
call
pushl
popl
pushl
pushl
ret
add
inc
gs
outsl
fs
gs
imul
add
movl
movb
call
lea
je
shrd
cmp
cmc
dec
add
bt
dec
clc
sub
clc
adc
btr
shr
pusha
ror
xor
bsr
mov
clc
add
jne
add
bsf
bsr
add
bsf
bswap
mov
stc
shr
pushf
cmp
jmp
xchg
leave
in
dec
inc
imul
je
xor
xorb
or
je
dec
inc
loop
and
dec
dec
lock
mov
mov
inc
push
out
xchg
es
in
mov
inc
cmp
popf
outsb
lds
pop
jmp
cltd
bound
lea
xchg
xchg
gs
out
lcall
xchg
pop
rolb
sub
dec
jno
mulb
cmc
mov
iret
pushf
call
je
pusha
pushf
sub
pusha
clc
pushl
cmp
lea
jnp
push
pushf
push
lea
ja
pushf
call
fisttpl
or
jo
pop
int3
inc
cmp
fisubrs
lods
xor
xor
int
xchg
inc
repz
cs
js
push
aam
mov
test
loope
lret
lret
shrb
out
pop
popa
dec
sub
sub
into
mov
sahf
adc
test
pop
xor
mov
inc
mov
ljmp
btrl
dec
repnz
xor
jmp
jge
movsl
rol
add
add
lds
cld
mov
bt
clc
pushl
pushl
popl
add
cmc
clc
cmp
call
mov
lea
pushf
jmp
clc
test
call
cmp
jmp
movsl
xchg
inc
dec
inc
imul
roll
and
jae
mov
jge
cli
loope
mov
aaa
pop
call
cmpb
xor
popf
mov
mov
xchg
mov
insl
ds
rol
xor
push
imul
les
fisttpl
inc
push
fiaddl
jge
dec
outsb
rorb
push
xor
shll
aam
in
loop
jecxz
dec
outsl
sub
shlb
rorl
ret
leave
mov
sbb
push
or
in
addb
push
clc
or
es
dec
add
mov
clc
sti
nop
pop
xchg
sbb
lods
popa
add
lahf
cmpsl
push
in
cltd
cmp
dec
sbb
sbb
in
and
cmp
cmpsl
jmp
mov
sub
mov
push
xlat
dec
add
push
xchg
ret
push
mov
jo
xor
lcall
push
and
pushf
lea
int3
fdivr
xor
outsl
jg
dec
add
adc
cltd
push
fnsetpm(287
clc
cld
ss
fcomip
mov
das
mov
pushf
popf
rcll
fcomps
adc
test
fidivl
pop
and
arpl
mov
sahf
adc
test
sub
pop
adc
cmp
pop
test
mov
das
ja
mov
cli
push
cmc
lret
cmpsl
mov
pushf
call
and
or
enter
mov
jns
mov
filds
cmp
sbb
sbb
movsb
mov
lods
push
lret
ss
cmp
outsb
add
shll
adc
mov
sub
and
iret
test
and
cmc
dec
mov
lret
fists
popa
lea
test
sahf
pop
add
test
clc
adc
mov
ljmp
jge
test
mov
rcl
push
movsl
lahf
pop
add
adcb
mov
xchg
data16
rol
mov
icebp
leave
push
and
ret
in
sbb
jb
mov
xchg
xlat
jae
cwtl
add
xchg
xor
xchg
or
cwtl
cmp
sub
ficoms
sti
sbb
bound
pop
push
mov
mov
ljmp
inc
xchg
pop
movl
call
call
pushf
jmp
cmc
call
jmp
pushf
lea
pusha
pushl
movl
pushl
pushl
popl
movb
pushl
ret
dec
cwtl
ds
inc
imul
cmc
adc
adc
or
and
mov
xor
and
inc
push
in
mov
push
mov
shll
fstpt
pcmpgtd
test
sub
sub
mov
inc
pop
lret
insl
in
pop
cmp
jge
outsl
inc
mov
pop
hlt
mov
fsts
cltd
aas
pop
out
inc
mov
cltd
call
fwait
mov
jmp
outsb
mov
add
xchg
call
add
imul
xchg
xor
nop
sahf
lcall
jg
add
adc
scas
scas
sbb
adc
mov
add
das
push
mov
subl
arpl
sub
fistpl
xchg
aas
les
cmp
jns
pop
inc
std
repz
insb
push
mov
arpl
ret
ds
fnstenv
cltd
xor
addr16
sub
or
mov
sbb
cmpsb
inc
movsl
jno
cmp
push
xchg
je
jnp
cmp
daa
adc
push
or
pop
fcos
jle
arpl
gs
ficompl
outsl
in
in
lock
xchg
outsb
enter
ret
mov
cltd
fisttpll
jbe
shll
aaa
or
pop
scas
mov
scas
cmp
decb
adc
adc
pushf
push
rolb
xchg
and
dec
call
aam
push
sbb
or
xor
adc
inc
lock
pusha
test
bt
add
mov
lea
jmp
ret
cmp
inc
inc
imul
test
clc
pop
xor
cwtl
add
push
and
fisttpll
xor
iret
mov
jne
jge
ficompl
jl
mov
jl
daa
sti
shld
scas
subb
or
mov
out
inc
push
pop
push
andb
jge
fstl
and
outsl
imul
cli
and
les
sub
lcall
enter
sar
pop
adc
xor
mov
fwait
mov
inc
inc
imul
leave
in
in
sub
mov
xor
mov
xchg
insl
inc
lock
stos
pop
mov
mov
xor
cmpsb
imul
sub
cmp
dec
cltd
aad
cmc
gs
in
jno
btr
sub
add
bswap
pushf
shl
ror
add
movzbw
sar
or
mov
pusha
push
shr
clc
cmp
jmp
lea
jne
movzbl
mov
mov
pusha
movw
lea
jmp
test
pushf
pushl
lea
je
jmp
jbe
add
imul
cmc
inc
lret
es
push
mov
add
xchg
inc
out
cltd
inc
loop
in
fists
inc
or
fs
mov
pop
dec
jb
sub
xor
fidivrs
jle
fisubs
test
xor
adc
jg
icebp
xor
popl
dec
mov
fnsave
fimuls
pop
mov
pop
pop
push
outsl
adc
popf
loope
int
fidivs
xor
iret
lea
lea
mov
push
lea
call
call
pushl
popl
mov
pushl
pushl
ret
rcr
add
mov
dec
rol
call
or
pushf
lea
je
lea
lea
mov
call
pushf
xchg
inc
inc
imul
dec
cmp
popf
popf
scas
sub
sbb
jo
sahf
mov
xlat
push
data16
movsb
das
sub
mov
xor
in
fcompl
mov
in
mov
gs
mov
lahf
ret
mov
call
pushf
pusha
lea
je
pushf
mov
lea
mov
lea
push
mov
movzwl
movzbw
lea
jmp
call
cs
adc
inc
out
ds
leave
cmc
sbb
imulb
shrl
gs
iret
inc
test
ret
push
divl
adc
fs
scas
rcrl
xor
cmc
mov
sbb
push
inc
icebp
mov
adc
jmp
iret
jmp
jae
ljmp
sub
mov
movsl
xchg
js
das
out
pop
or
jecxz
adc
iret
lcall
inc
push
lret
ret
bound
and
movsb
shl
xlat
test
fs
je
cmp
call
dec
pop
jle
inc
imul
jae
mov
pushl
jp
and
out
sub
or
sub
mov
cmp
mov
lret
iret
dec
movsl
xor
mov
xlat
fidivrl
loopne
roll
mov
jae
ja
imul
cli
cmp
inc
xchg
loope
jecxz
imull
sbb
sbb
dec
lahf
and
hlt
add
into
sbb
push
inc
or
mov
or
cli
fldt
cmp
jne
or
jmp
jp
stos
inc
inc
imul
xchg
inc
sub
subb
jp
mov
addr16
movsl
xor
mov
adc
cs
cmpsl
push
fildl
dec
pop
mov
mov
inc
inc
imul
mov
xchg
mov
dec
lock
into
movsl
mov
fldcw
je
pushf
push
ficomps
xchg
adcl
fmul
mov
mov
pushf
push
out
dec
xchg
repz
xor
in
lret
adc
cmp
sahf
jmp
pop
lret
stc
stos
clc
imull
lds
mov
xchg
jo
mov
push
aad
mov
arpl
ds
xor
popf
out
inc
sub
sub
test
test
loop
fisubl
imul
bound
push
xor
imul
cmc
push
pop
fiaddl
mov
inc
imul
bound
xchg
sbb
cmp
pop
cmp
mov
mov
imul
pop
mov
mov
loope
dec
sbb
cld
fmuls
mov
jp
jle
cli
loop
cli
cmp
mov
mov
fisubrl
imul
clc
imul
jmp
lods
pushf
jmp
push
lock
std
std
test
cld
ret
jl
outsl
imul
popa
mov
mov
pop
add
xor
or
dec
jge
cmp
xor
inc
imul
add
loop
sub
or
inc
in
xchg
push
icebp
pop
xor
sub
fs
pushw
add
xchg
push
push
mov
jne
add
or
pushf
pop
xlat
dec
lea
jne
mov
xor
bt
movzbw
mov
call
lea
movl
lahf
pushf
lea
pushl
call
cmc
imul
bt
bt
add
pushf
pusha
lea
jmp
call
call
adc
dec
hlt
jg
movsb
lahf
jmp
push
sbb
add
push
sbbl
imul
popa
out
mov
adc
pop
push
cmp
shl
add
hlt
add
fidivs
clc
xchg
mov
mov
mov
cwtl
pop
cmp
adc
or
add
stos
jne
inc
pop
sbb
add
repz
adc
popl
ljmp
cmp
adc
decb
add
cltd
loop
add
gs
pop
stos
add
push
loope
incl
cltd
inc
loopne
adc
add
int
xchg
fbld
out
loop
xor
and
cmpb
mov
lea
mov
cltd
aas
xor
inc
adc
dec
sbb
mov
sbbb
xor
jmp
adc
adc
popl
sahf
popa
xor
mov
jecxz
mov
jp
xchg
pop
add
sub
gs
mov
add
or
ret
sub
add
push
mov
add
push
sbb
mov
cli
shl
add
mov
push
icebp
sahf
scas
add
add
ret
mov
xor
repnz
mov
push
mov
add
sub
push
pop
mov
xor
scas
and
jp
adcl
das
popa
xchg
aas
add
fildl
xchg
mov
inc
add
mov
imul
movl
pushf
pusha
movb
movl
movb
pushf
pusha
pushl
lea
jmp
pushf
xchg
mov
pushf
dec
jmp
lea
jbe
and
mov
test
mov
dec
add
bt
adc
bt
mov
cmc
btc
ror
btc
add
test
test
movl
setbe
bsr
mov
test
push
test
push
cmp
pushl
pushf
lea
jbe
sbb
lea
sub
not
rcl
mov
not
mov
xchg
add
call
mov
cmc
or
mov
call
shr
push
sub
aad
das
mov
neg
neg
ror
rol
add
shr
mov
pushl
test
movb
push
movw
movb
lea
je
test
sub
cmc
bt
cmp
cmc
cmp
push
pusha
lea
ja
jmp
pusha
pushf
mov
pusha
call
xor
les
test
xchg
mov
mov
addr16
mov
mulb
mov
jno
jmp
cmp
cltd
nop
sahf
mov
xchg
adc
sahf
pop
lods
add
loopne
add
ja
into
push
addl
pop
les
cmpsb
les
insb
pusha
pushf
insb
or
sub
or
cmp
mov
imul
inc
rorl
inc
cmc
mov
subl
lret
push
fadds
lods
and
mov
mov
dec
xor
push
jmp
das
mov
in
test
pusha
xchg
sar
fstps
mov
ja
pop
adc
jbe
mov
movsb
push
sbb
pop
mov
mov
les
pushf
pushl
popl
movl
pushl
pushl
ret
push
add
pushl
pusha
pushf
lea
jmp
pushf
lea
jne
setno
pusha
mov
push
pushl
push
lea
jmp
xchg
pop
jb
inc
imul
lahf
dec
cmpsl
push
push
jnp
mov
sbb
mov
into
mov
push
mov
sarb
mov
popf
aas
ret
push
dec
inc
sbb
test
fistl
movb
call
aam
insb
je
cwtl
add
int
stc
aaa
movsb
je
pushl
jmp
pushf
lea
je
push
add
jmp
or
jmp
movzwl
movsbl
lea
not
movsbw
mov
bswap
mov
pusha
pushf
lea
call
jmp
movl
jmp
loop
sub
dec
mov
daa
sarl
in
sbbb
jg
jne
gs
xor
mov
clc
stos
sub
xchg
fsubr
roll
movsb
sub
and
sbb
jb
mov
arpl
pusha
bound
data16
je
test
cmpsl
into
ret
das
mov
pop
in
in
loopne
mov
js
jp
outsb
lods
shlb
ds
mov
push
or
lcall
jne
mov
fsts
mov
inc
and
cwtl
inc
int
add
and
add
loop
add
rclb
add
add
xchg
cmp
add
push
add
xor
add
jae
add
rclb
add
cmp
add
xchg
cmp
add
push
add
add
imul
out
xlat
popl
lcall
in
test
cmp
xor
je
gs
and
xor
out
mov
inc
outsb
jns
xchg
or
jp
rclb
addl
loop
rorb
int3
dec
mov
mov
sbb
cmp
cwtl
fcmovb
sub
cli
jp
and
cmpsb
es
dec
loopne
fidivrs
adc
jnp
imul
xlat
mov
cmp
push
cmp
mov
xor
mov
cltd
js
push
test
stos
lea
jne
not
jmp
movb
inc
imul
aas
jmp
pop
jmp
inc
lret
gs
lds
mov
repz
jge
je
cmp
or
lods
rorb
mov
ljmp
shl
xchg
mov
mov
imul
out
add
outsb
enter
jbe
inc
cmp
or
in
or
lahf
loopne
mov
jo
lret
jno
xlat
bound
rorb
iret
das
sti
les
data16
sarl
es
or
into
dec
loope
loopne
xchg
rcrb
pop
getsec
sti
dec
dec
dec
and
mov
lods
pop
sub
enter
rcrb
cmpsl
mov
inc
imul
push
mov
mov
aas
in
add
imul
xor
jo
movsl
outsb
rcrl
mov
iret
xchg
js
mov
pop
push
cld
sbb
pop
push
push
std
sbb
xchg
shrb
ss
movb
stc
ror
pusha
test
bt
add
pushf
test
jmp
cmp
pushf
pusha
jmp
call
pushf
not
inc
add
shl
rcr
shl
xchg
xadd
mov
cmp
shl
sbb
mov
cmp
pushf
xchg
test
cmp
add
test
mov
test
jmp
sub
clc
call
lea
jne
test
bswap
btc
sub
call
test
jmp
adc
pushf
pushf
pushf
pushf
lea
jmp
insl
xor
inc
imul
sub
cmpsl
hlt
repz
repnz
xchg
inc
cmc
scas
ret
sbb
icebp
jnp
xchg
add
addr16
and
add
mov
lret
sbb
xchg
add
push
and
push
add
jl
addl
mov
das
stos
je
mov
add
aam
push
inc
imul
cs
fiadds
mov
aad
addl
cmp
test
nop
sti
ret
jecxz
or
mov
imul
mov
cmp
mov
mov
divl
jne
mov
mov
inc
mov
sbb
add
je
inc
jne
out
fdivs
clc
stc
or
imul
jecxz
and
inc
sub
and
add
rorb
dec
inc
and
int3
lods
push
jp
fs
jb
cmc
stc
test
push
cmpb
push
push
push
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
and
movl
mov
pushf
pushf
pushl
ret
test
push
mov
lea
je
bsf
jmp
pushl
popl
cmp
call
push
mov
lea
je
pusha
pushf
push
lea
jmp
cmp
movb
call
bt
ror
cmc
cmc
bt
add
stc
test
cmc
bt
not
clc
pushl
bt
call
stc
cmp
jmp
and
push
inc
imul
jmp
fldt
mov
sub
pop
lahf
dec
stc
and
rorb
cmp
fldenv
mov
lea
cmpsl
in
jnp
xchg
pop
repz
cmp
adc
movsl
mov
or
dec
movsb
adc
push
sub
movsb
lock
cld
cld
inc
push
mov
add
add
repz
inc
lods
or
scas
int
call
xchg
pop
pop
fistps
inc
push
pop
aam
lcall
xor
iret
stos
or
dec
xlat
adc
inc
lods
lock
fcomp
stc
add
pop
adc
adcl
xorb
addr16
out
pop
pushf
inc
xor
fiadds
or
cmp
repnz
xor
fsts
inc
pop
fistps
or
pop
xchg
js
lcall
out
inc
insl
imul
subb
insl
push
cs
fdivp
out
jb
xor
ret
sub
bound
dec
ja
pop
repz
sbb
push
lea
dec
mov
inc
sar
jge
jo
dec
clc
push
pop
scas
in
std
ret
int3
mov
xlat
pop
fcomps
lods
nop
mov
jl
shrb
inc
and
scas
cmpsl
sar
and
lea
je
cmp
test
cmp
pushf
lea
je
call
call
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
cs
frstor
push
inc
imul
ret
mov
adc
test
sub
jo
cld
int
push
les
and
dec
sbb
push
inc
jnp
dec
jecxz
push
ss
xor
inc
out
mov
outsb
call
cmp
inc
and
inc
mov
into
jo
xchg
test
cmp
cmp
mov
cmp
into
lcall
or
jns
jns
pop
push
xlat
jbe
in
cmp
jmp
call
popl
dec
lcall
sbb
cli
sbb
inc
adc
fsubrp
shl
and
add
fisttps
ror
incb
pop
jp
dec
pop
inc
inc
add
sub
repnz
add
xchg
sahf
test
jno
xchg
inc
lcall
pop
icebp
add
push
cmp
mov
in
test
push
cmp
xchg
or
cltd
es
es
jp
cwtl
dec
xchg
shll
add
or
add
push
and
push
call
mov
xchg
jns
dec
and
mov
adc
add
gs
ret
push
pop
dec
roll
andb
andb
dec
fwait
std
cmc
mov
and
ljmp
mov
inc
stos
inc
cmp
inc
pop
and
xchg
lds
jmp
arpl
rolb
xor
adc
fisubrl
mov
and
xorb
mov
add
movsl
mov
adc
int3
mov
enter
call
sbb
xor
inc
pop
leave
mov
add
aam
or
dec
sbb
adc
inc
or
in
lahf
cmp
js
ffreep
shlb
ret
rcrb
cwtl
push
mov
cmp
mov
mov
push
sub
scas
loop
into
sarb
scas
call
bound
dec
inc
and
js
mov
lret
push
mov
xchg
in
push
sti
fistpl
test
add
push
out
fadds
push
push
rolb
std
cmp
cmp
adcb
adc
push
jmp
mov
jae
mov
and
scas
inc
lcall
pop
and
mov
push
pop
sbbl
mov
and
js
repz
out
lahf
mov
shlb
jg
dec
outsl
mov
pop
jg
sbb
push
rol
lea
lock
mov
es
cmpb
leave
sahf
mov
popa
jg
fists
cmpb
jne
fidivl
je
cmp
cltd
in
ret
fs
or
and
adc
mov
add
sbb
push
jecxz
cmp
mov
inc
add
mov
cmp
and
shr
adc
cld
in
sar
imul
sub
add
push
cld
xchg
lahf
in
bnd
jns
jmp
lret
jg
pop
push
xor
pop
cmp
loope
pushf
repnz
mov
fiaddl
jns
pop
push
sbb
idiv
jecxz
outsb
or
dec
sbb
pop
pop
rol
xor
dec
jmp
in
pop
xorb
lods
gs
xor
fistps
mov
cmpl
dec
pop
mov
and
test
and
cmp
shll
push
jg
es
pop
ljmp
rcl
fcomps
test
inc
xchg
push
dec
sbb
loop
mov
rorb
clc
dec
mov
adc
mov
loope
mov
gs
adc
loope
dec
mov
sbb
pop
pop
push
adcb
xor
inc
in
loop
and
pushf
jns
mov
in
ret
mull
or
sub
xchg
mov
shl
xor
pusha
das
inc
imul
test
repnz
cmp
lock
add
xor
dec
mov
cwtl
and
mov
sbb
cmp
lcall
pop
adcl
daa
jp
cltd
pop
dec
jae
inc
push
outsb
bound
xchg
cmp
sbb
dec
fsubrl
xor
push
lcall
inc
cltd
mov
jnp
std
or
inc
pop
inc
mov
das
enter
push
rolb
mov
das
int
lahf
ficoml
sbbl
cltd
push
cmp
enter
int
adc
mov
or
stos
rol
mov
jle
pop
insl
jge
int
andl
xchg
out
sahf
test
adc
mov
jle
inc
gs
adc
js
or
pop
mov
lahf
fwait
mov
insb
pop
cwtl
pop
adc
dec
faddl
mov
pop
push
dec
dec
shl
adc
arpl
in
loop
jl
adc
rolb
push
pop
adc
mov
push
push
or
fs
add
lock
out
rorl
inc
push
fisttps
jno
xor
mov
mov
daa
aad
in
push
add
call
pop
test
fsubs
adc
mov
mov
adc
loope
inc
push
jmp
movd
xchg
jns
rcrb
adc
add
mov
sti
pop
adc
nop
xchg
pop
call
and
cmp
jno
inc
shrl
xchg
in
ds
jb
mov
mov
push
aas
out
insb
pop
cmp
test
pop
cmp
xchg
adc
sub
adc
xor
shrl
cmpsl
scas
jp
mov
push
mov
mov
aam
xchg
jle
jno
popa
sub
jo
je
in
add
push
cld
or
inc
xor
push
pop
sbb
sbb
push
or
fxch
pop
jp
jle
loopne
je
mov
jecxz
dec
je
jo
testl
lret
jmp
addr16
mov
push
loopne
adc
jg
dec
out
xchg
popa
js
inc
lock
and
pop
xchg
push
xchg
and
rol
popf
leave
pop
shrl
ret
sbb
ds
sbb
pop
scas
sbb
push
jg
and
add
mov
mov
push
insl
pushf
cmp
push
xchg
or
test
js
xchg
push
push
xchg
call
daa
cmpb
adc
ret
in
in
or
jnp
add
inc
or
cmp
and
or
push
mov
cltd
sbb
mov
pusha
xor
icebp
dec
adc
jecxz
loope
loop
mov
mov
push
pop
jle
dec
or
cltd
aam
sbb
adc
test
ss
adc
pushf
fwait
pop
mov
pop
add
xor
in
and
test
jnp
ljmp
adc
sarb
xchg
imul
adc
test
push
push
jmp
jnp
push
and
in
insb
pusha
sbb
sub
movsl
rcrl
stc
push
call
cmp
xchg
push
clc
into
mov
push
cmpsb
mov
nop
enter
pusha
add
push
pop
fs
cmpsb
jae
lock
dec
enter
xor
sub
fdiv
test
push
lahf
bound
addb
dec
enter
mov
ret
hlt
xchg
or
orl
aaa
push
loope
cmp
andl
inc
in
sbb
pop
cmp
pushf
push
fs
fildll
popf
xchg
subl
add
ret
dec
or
mov
mov
sbb
xchg
pop
add
and
dec
addb
lds
bound
sahf
scas
mov
pop
jns
sbb
out
mov
rcrb
jmp
movl
mov
pop
std
setg
bound
int
pop
lock
scas
cmpb
inc
loope
andl
cltd
adc
iret
sub
mov
lret
add
inc
jmp
jecxz
jns
push
sti
arpl
and
sahf
fistps
arpl
or
les
and
inc
mov
mov
push
imul
ret
loope
pop
movsl
stc
pop
fmuls
jno
outsb
aad
pop
in
enter
inc
or
push
push
cmp
fisubs
sbb
sub
std
ret
pop
sub
pop
inc
pop
push
mov
inc
xchg
pop
pop
insb
pop
cwtl
pop
movsl
lcall
addb
aad
cmpb
fisttpll
xchg
cwtl
jmp
shll
or
loop
je
dec
aas
mov
push
adc
xchg
cmp
push
cmp
cmpsl
add
cmpsb
or
mov
jp
sub
enter
xchg
cwtl
jge
loopne
inc
imull
bound
adc
dec
push
pop
jecxz
jb
in
inc
cmp
or
loop
sti
cmpsb
sbb
inc
jno
cmp
adc
xchg
pushf
cltd
mov
push
stc
mov
fdivs
mov
sbb
pop
push
or
addb
sahf
int3
pop
xchg
bound
adc
or
aam
popf
pop
call
xor
lcall
add
into
out
sbb
fldenv
cmpsl
fsubrs
lret
mov
dec
shr
xchg
mov
addb
out
push
sbb
cmp
mov
or
test
sbb
mov
xor
mov
cmp
shl
pop
sbb
sbb
add
inc
xchg
in
jno
stos
gs
xor
in
or
mov
addl
jb
fs
sbb
shrb
mov
popa
push
push
mov
mov
ljmp
inc
mov
lret
adc
or
enter
mov
aaa
mov
lds
ds
pop
sub
mov
add
and
cmpsb
rorb
adc
fiadds
fistl
cmp
xor
xchg
lret
sbb
pushf
pop
dec
push
lea
pop
mov
pop
sbb
int
stos
call
sub
ljmp
orl
mov
mov
sbb
bound
pop
into
test
inc
mov
sub
add
sbb
push
jb
in
mov
outsl
sbb
mov
lret
adc
out
out
cmp
pop
ljmp
pop
mov
orb
or
shl
popa
nop
mov
add
rol
jle
subb
test
push
or
mov
xchg
xchg
adc
inc
popl
lret
inc
test
jecxz
ret
pushf
and
shl
lds
aaa
clc
sahf
or
fbld
cltd
push
or
test
pop
insb
pop
imul
fcmovb
fdivs
cmp
inc
orb
icebp
and
loopne
je
xchg
stos
das
pushf
std
or
add
xor
test
pop
lea
in
push
js
mov
sbb
cmp
xchg
cmp
stos
repnz
lahf
sbb
jno
subb
cmpsb
es
xlat
inc
fidivrl
push
lcall
push
or
xlat
cmc
add
ret
testl
neg
sub
rcll
lahf
or
fistpl
fwait
rcll
xor
daa
inc
xor
repnz
mov
adc
pop
push
add
jle
add
mov
scas
faddl
push
std
and
shrl
sub
les
ret
test
sbb
dec
push
jp
sub
orb
push
mov
sbb
push
cld
pop
ret
out
pop
mov
xor
pop
js
pop
in
scas
addb
lahf
or
jb
lret
outsb
jbe
outsb
lret
sbb
repnz
adcb
cltd
jnp
dec
repnz
xlat
in
jbe
mov
in
enter
pop
les
pop
iret
arpl
xchg
adc
push
sbb
pop
cmp
loop
dec
xchg
sub
jns
xchg
pop
push
mul
out
inc
sub
pop
adc
negb
mov
and
lret
andl
lret
dec
popf
push
jno
add
add
repnz
insl
andb
add
adc
mov
call
mov
in
lret
roll
add
stos
movsb
cld
out
xor
lahf
shr
andl
inc
mov
cli
jae
jge
arpl
sub
movsb
cld
incl
mov
push
dec
movsb
loope
sahf
test
aas
jno
test
push
mov
cmp
sti
inc
stos
mov
inc
add
fcomps
scas
dec
outsl
popf
fdivs
lds
jl
inc
jmp
cmpl
popf
push
push
inc
clc
sub
flds
pop
call
fsubl
shll
aaa
leave
int3
or
out
jnp
sarb
adc
pusha
clc
pop
mov
mov
fsub
pop
or
cmpsl
cld
push
sbb
pop
sarb
js
jle
pusha
test
jecxz
mov
push
push
or
psubw
sbb
insl
ret
orb
popf
call
icebp
fbstp
iret
xchg
add
movsb
test
add
add
cmp
pop
lock
push
lea
clc
outsb
fmull
or
xchg
inc
fdecstp
pushf
push
cmp
fldcw
mov
aaa
xchg
xchg
add
pop
cld
or
bound
sbbl
pop
adc
nop
jmp
in
pusha
shlb
stos
lods
cmpsb
testl
in
and
out
dec
sbb
test
mov
and
aam
xchg
fcmovbe
in
cmpsl
icebp
push
clc
fdivrs
add
push
ja
icebp
adc
push
cmp
das
cli
xor
fidivrs
pop
sbb
adc
call
icebp
int
dec
cmp
inc
push
in
or
or
pop
mov
into
sbb
or
inc
or
xchg
push
cmovno
mov
stos
or
pop
mov
mov
ss
pop
bound
xchg
or
cmp
xchg
fs
dec
xor
adc
inc
inc
push
ds
mov
add
mov
pop
icebp
sarb
or
orl
push
xchg
sbb
arpl
int3
cs
or
stos
jecxz
dec
mov
xchg
fcomps
inc
outsl
cwtl
dec
pop
das
out
cmp
xchg
lods
popf
xor
addb
enter
pop
xchg
inc
fcmovu
or
fnsave
adc
xchg
filds
lret
shll
in
iret
push
js
adc
cmpb
scas
xchg
pop
adcb
cltd
xchg
add
sbb
xor
push
enter
pop
sbb
dec
sbb
adcl
addl
das
jge
mov
pushf
push
clc
ds
out
sbb
movl
jecxz
lea
fcmovnu
mov
notl
mov
filds
pop
pusha
or
mov
push
fsubrl
cmpsl
repz
push
xchg
adc
in
sahf
xchg
push
fwait
sbb
xchg
sbb
and
jl
rcr
in
dec
into
mov
xchg
add
nop
pop
xchg
mov
lcall
jmp
push
cmp
in
mov
pop
mov
cmp
add
testl
pop
int3
jae
mov
add
dec
mov
out
mov
cs
aaa
xor
adc
add
sbb
sbb
jecxz
sbb
sbb
fisttps
push
sti
in
aam
fdivs
xchg
sbb
jb
pusha
dec
push
adc
xchg
pusha
aas
xchg
adc
push
add
or
cltd
jb
icebp
pop
add
xchg
xchg
ss
jno
pop
sbb
lret
ret
adc
rorl
cmp
repnz
mov
iret
adc
add
push
std
sbb
pusha
add
iret
pop
popf
rclb
fmull
push
loope
sbb
aad
fwait
or
sbb
ror
or
add
inc
fdivs
sbb
mov
add
sbb
test
add
push
cltd
pop
lea
dec
sbb
sbb
or
add
mov
leave
lahf
mov
cmpb
stc
ja
testl
mov
cs
jl
xchg
or
dec
cltd
sahf
cltd
xor
imul
sbbb
sahf
adc
jno
xchg
jns
decl
loop
adc
stc
adc
push
fsts
sahf
xchg
mov
add
cltd
out
add
paddd
xchg
add
add
rclb
mov
cli
or
mov
stc
lret
adc
lahf
popf
out
add
or
cwtl
imul
add
or
or
push
out
adc
incb
pushf
pop
ficoms
pop
add
nop
notl
add
adc
add
mov
adc
inc
repnz
sbb
push
pop
sbb
pushf
push
inc
push
xchg
rorb
rcrb
adc
bound
lock
dec
jmp
lret
call
inc
pop
push
shlb
ret
mov
add
dec
inc
cld
dec
add
loop
mov
mov
dec
xchg
scas
das
andb
and
test
mov
lea
mov
mov
or
xchg
push
jecxz
xchg
gs
xor
inc
lahf
in
movsb
fwait
ret
dec
imul
dec
jl
ror
insl
ret
test
addr16
aaa
xchg
in
add
or
addb
sbb
loopne
icebp
in
loope
lcall
daa
mov
sbb
mov
sbb
jnp
and
fld
add
push
int
shll
cmp
sub
adc
cmp
bnd
xchg
test
push
push
cli
cmp
push
lods
fcmovnbe
insb
clc
cli
mov
sbb
or
dec
or
xchg
or
push
ret
sbb
sbb
mov
test
call
xchg
pop
fcoms
mov
pop
lds
mov
fs
lock
sbb
add
push
insb
ds
jp
mov
sbbb
jo
add
mov
mov
rclb
jge
xchg
mov
std
stos
out
jb
fstp
cmp
xchg
popf
dec
adc
das
in
popl
mov
in
xor
sti
mov
sub
fistps
loopne
push
cltd
mov
or
mov
inc
dec
insb
pushf
cmp
mov
sbb
push
cmpsb
addr16
sbb
stc
hlt
das
sti
mov
adc
pop
daa
push
pop
pop
inc
mov
cltd
in
jo
pop
lret
push
jae
jae
out
js
cltd
xor
mov
in
and
fstl
pop
inc
call
loope
loop
in
out
mov
loope
leave
xor
push
and
aas
cld
ret
mov
fdivs
ss
cmpsb
and
inc
or
in
mov
sbb
jecxz
adc
pop
repnz
dec
adc
sbb
xchg
out
mov
sbbl
cli
fisubrs
cmpsb
in
jnp
shrb
fiaddl
pop
in
and
sbb
fsubl
pop
adc
jmp
icebp
flds
inc
stc
loop
adc
aam
sub
push
aaa
mov
insb
sbb
addr16
sub
nop
push
stos
fcoms
sahf
stc
out
add
adc
xchg
cs
xor
mov
cwtl
in
nop
add
fcmovne
push
pop
shl
push
adc
pushf
push
ds
push
lcall
jecxz
jmp
fdivs
push
mov
dec
loopne
loope
xor
ds
jp
xchg
fwait
stc
fcompl
mov
cltd
mov
push
outsb
mov
jge
mov
adc
adc
jo
add
inc
ljmp
scas
mov
ss
cmp
imul
scas
pop
movsb
pusha
sbb
add
sbb
mov
loop
and
jns
jl
or
lcall
push
imul
les
sbb
and
jl
lock
add
mov
jl
mov
popf
mov
dec
xchg
shlb
ret
mov
mov
fnsave
je
pop
jne
pop
push
pandn
push
adc
icebp
js
je
sub
inc
iret
rep
hlt
iret
popf
shrb
cmp
jecxz
and
adc
inc
std
ret
dec
les
fs
push
jbe
pop
push
jo
sbb
jne
inc
mov
xchg
or
jb
jp
in
xchg
push
mov
mov
pop
sbb
push
ja
loop
xor
mov
stos
xchg
add
xor
insl
xchg
and
and
cmp
dec
pop
movsb
push
jle
mov
popa
pop
sub
out
ljmp
roll
sbb
add
in
jbe
call
jns
lcall
sbb
sub
cwtl
xchg
pushf
xchg
xchg
ret
bound
push
xchg
insb
jge
pop
mov
sahf
pop
push
insb
mov
inc
push
fldl
cmp
xchg
mov
xor
fsubl
adc
xor
adc
bound
int3
fsub
mov
or
arpl
roll
jg
inc
xchg
adc
pusha
jo
lods
or
jo
popf
roll
adc
pop
push
cmp
dec
or
imul
pop
xor
xlat
add
xchg
adc
rolb
int3
mov
mov
jae
sbb
push
mov
in
int
or
cmpsb
popf
pop
cwtl
das
xchg
imul
and
inc
mov
xchg
jg
adc
repnz
or
xor
push
dec
sub
popl
nop
lahf
pop
popf
ds
dec
das
in
push
movsl
scas
push
test
adc
or
dec
sbb
stc
adc
iret
sbb
pop
mov
cmp
mov
inc
ja
xchg
cwtl
mov
jmp
adc
jbe
loopne
inc
mov
and
add
sub
shrb
sti
inc
adc
out
lret
mov
popf
shl
add
es
pushf
movsb
adc
in
xchg
push
xor
dec
dec
repz
int
push
inc
in
mov
rolb
cld
or
insb
pop
jle
enter
sbb
fcmovu
jo
cmp
scas
pop
jae
adc
pop
mov
mov
sbb
loop
push
test
add
clc
icebp
hlt
jno
leave
jle
xchg
sub
mov
or
jg
aad
pop
movsl
into
xchg
push
add
sub
and
sub
mov
mov
adc
pop
in
push
cwtl
ficomps
pop
std
repnz
and
frstor
sti
out
lcall
cltd
adc
jg
pop
data16
dec
adc
pop
insb
bound
jg
inc
jae
scas
test
inc
popf
lods
in
add
fdiv
inc
mov
sbb
mov
cmp
pop
inc
fs
cltd
inc
loop
push
or
popa
pop
add
ljmp
imul
push
xor
sbb
imul
xor
xor
cld
dec
sbb
adc
and
mov
out
sub
xor
ja
mov
je
clc
inc
shl
mov
jg
inc
mov
je
adc
daa
add
push
cltd
mov
pop
push
gs
pop
shl
movsb
add
pop
mov
stc
dec
lea
fdivrp
push
loope
and
or
add
or
loope
dec
cli
arpl
push
or
push
dec
leave
sbb
xchg
inc
cmpsb
out
sbb
pop
clc
popl
ret
ss
mul
sbb
subb
lahf
test
scas
in
jge
mov
rcll
popf
outsl
bound
cs
xchg
mov
ret
and
in
ljmp
push
fld
jns
mov
rolb
add
or
jmp
sbb
adc
es
pop
movsb
int3
mov
or
out
xchg
sub
je
mov
cmpsl
divl
mov
push
imul
jmp
or
inc
test
jecxz
adc
das
sbb
call
or
je
mov
or
in
andb
mov
leave
pushf
jecxz
loope
push
pop
mov
cmp
sbb
xor
testl
sbb
dec
data16
fwait
xor
nop
mov
push
cmp
xchg
and
lret
mov
mov
jecxz
lds
in
flds
sbb
iret
ss
ljmp
test
jle
pop
cpuid
lret
out
test
inc
mov
pop
inc
dec
push
push
dec
shlb
xchg
clc
mov
sbb
pop
inc
idivb
movsl
adc
xchg
adc
jecxz
lahf
in
or
je
cld
adc
fildl
in
add
and
adc
mov
lds
inc
jmp
adc
daa
push
lods
or
sbb
push
insl
inc
sahf
xchg
pop
cwtl
insl
lods
xchg
lods
sub
loope
xor
enter
push
lock
sub
pop
call
scas
dec
add
nop
enter
lret
adc
xor
pop
pop
sbb
sbb
cmpsb
leave
movsb
fs
mov
and
adc
add
insl
xchg
push
lods
jle
ljmp
pop
shrl
mov
mov
in
les
jae
mov
out
add
loop
sarb
xor
inc
aam
lds
adc
adc
cmpsb
cmp
or
xchg
sub
rorb
mov
push
sahf
in
loope
js
insl
js
pop
repnz
push
mov
cmp
inc
or
pop
dec
lcall
es
mov
jp
mov
int3
inc
aad
lret
call
imul
pop
adc
adc
or
dec
cmp
gs
mov
stc
out
fmuls
dec
sbb
bound
rcrb
push
dec
jecxz
fldl
loope
inc
xchg
sbb
sbb
into
adc
adc
lods
xor
adc
pop
mov
dec
or
sbb
cmpb
pop
loop
inc
movsb
pusha
jae
bound
scas
aad
adcl
pop
andb
dec
cltd
pop
pop
outsl
jp
lcall
jmp
push
xchg
shr
jle
addl
fldenv
mov
orb
arpl
sti
out
mov
js
sbb
xchg
push
lock
in
sbb
pop
addb
mov
cwtl
or
fadds
jo
xchg
mov
sbb
sbb
notl
inc
inc
cmpsb
jne
pop
add
dec
inc
inc
dec
or
pushf
push
pop
repnz
arpl
jnp
ja
adc
lret
mov
testl
cltd
mov
push
data16
or
popl
push
std
insb
lods
lahf
push
mov
outsb
pop
enter
cmp
addl
mov
in
and
dec
icebp
sarb
nop
sub
clc
push
push
adc
and
addr16
pop
in
mov
xchg
cltd
rclb
dec
mov
mov
cmp
cmp
xchg
adc
pop
je
and
imul
dec
dec
mov
stc
and
mov
dec
nop
push
pop
rolb
add
stos
cmpb
daa
jo
and
call
es
mov
mul
pop
xchg
and
pop
jle
push
adc
or
stos
xchg
cli
mov
inc
lds
lds
loope
mov
inc
pop
xor
mov
repnz
ret
push
out
or
ret
mov
mov
out
les
inc
or
lret
mov
sbb
call
adc
push
push
in
inc
cmp
sbb
les
leave
jg
lret
sarl
xchg
fwait
sahf
add
call
push
cltd
mov
arpl
cmp
xchg
adc
mov
adc
fdivrl
into
pop
nop
addr16
ljmp
adc
sub
add
pop
add
aaa
jmp
pop
add
inc
lods
mov
mov
pop
mov
mull
jecxz
out
shl
sbb
fstps
cwtl
add
movsb
imul
loope
xor
push
repz
bound
or
subb
fs
inc
shll
sti
test
fwait
push
pop
cli
push
dec
in
jne
cmp
std
lds
jecxz
adc
sbb
int
mov
push
jle
mov
ret
pop
int
inc
mov
in
fsubl
lods
push
xor
data16
sbb
shll
pushf
mov
xchg
into
daa
hlt
cltd
or
repnz
mov
xor
inc
xchg
lahf
jmp
cli
lret
add
enter
jmp
lahf
adc
scas
xor
adc
in
fs
icebp
mov
sbbb
push
inc
imul
sbb
loope
rorb
add
xor
fcmovnb
mov
dec
subl
loop
mov
lret
cmpsl
cmp
out
je
mov
cmp
adc
jp
fdivrl
daa
xchg
jle
daa
mov
testb
cmp
mov
mov
push
cmp
les
out
data16
jmp
pop
mov
test
ret
pop
mov
mov
clts
popa
push
shrb
mov
xchg
pop
les
rorb
mov
shlb
pop
or
or
gs
out
lret
sbbl
pop
pop
stos
sbb
jp
or
jb
jb
dec
mov
in
dec
enter
icebp
mov
jnp
xchg
imul
fmul
pop
aaa
mov
fmull
fwait
lcall
out
addb
and
ljmp
sbb
jl
or
fsubr
xchg
xchg
out
lods
cmc
add
out
fwait
or
clc
adc
mov
push
cmpsb
cwtl
jmp
loope
jl
adc
sbb
adc
rorb
pop
sub
jmp
xchg
adc
or
adc
add
dec
or
mov
add
pop
add
and
jecxz
fadds
cli
inc
imul
icebp
ljmp
mov
movaps
daa
sti
in
shlb
out
cmpl
fs
push
cld
dec
cwtl
lds
testl
jle
loop
pusha
hlt
push
dec
cmpsl
xchg
mov
faddl
ret
cwtl
mov
add
and
adc
movsb
mov
orb
add
in
cmp
xchg
mov
fwait
repnz
push
add
lahf
lcall
das
mov
push
ret
jecxz
imul
adc
or
push
adc
mov
pop
adcb
xor
push
push
mov
inc
mov
cmc
ret
call
lcall
cld
mov
shl
outsl
popa
push
xchg
imul
clc
add
data16
jecxz
loopne
xchg
inc
mov
addr16
loop
mov
imul
enter
orb
fdivr
fucomi
jge
out
pop
js
fs
push
fwait
enter
pop
inc
inc
lods
jmp
pop
add
in
dec
or
inc
in
jmp
icebp
mov
cli
or
ret
in
popa
mov
psubd
out
jecxz
add
pop
mov
pop
or
cmp
andb
scas
xor
shl
or
call
das
aaa
jno
adc
js
xor
daa
loop
sbb
repnz
or
or
aaa
icebp
mov
mov
stos
clc
lea
cwtl
call
or
cmpsl
insb
rorl
movsl
cli
sbb
fstl
icebp
cmp
gs
rolb
sub
mov
arpl
mov
jecxz
fwait
push
in
push
adc
adc
xchg
rcrb
fsubl
dec
cltd
mov
inc
repz
add
clc
dec
push
pusha
fnstcw
mov
jne
fistpll
sub
test
aam
adc
clc
or
fcmovbe
jp
mov
pop
mov
aad
and
addb
das
iret
je
xchg
push
lcall
iret
inc
ret
insb
xchg
psubusw
dec
jbe
sti
mov
sbb
jle
sbb
int
repz
dec
out
fiaddl
adc
or
cli
push
adcl
dec
add
fldl
sbb
les
lret
std
addl
xlat
jbe
mov
dec
mov
mov
repnz
cmp
mov
in
or
cmc
add
lds
rorb
sbb
pop
in
sbb
add
and
sbbb
ret
sbb
cmpsb
mov
outsl
cli
cmpsl
or
mov
mov
mov
out
xor
ret
push
inc
cmpsl
sbbb
mov
adcb
fsubs
les
add
jb
add
or
out
mov
inc
sub
and
pop
fistpll
adc
loopne
in
dec
dec
adc
test
mov
mov
mov
dec
fs
push
imul
adc
push
movsb
adc
push
add
cmp
add
mov
xor
pop
arpl
pop
or
sub
lea
or
iret
sbb
push
ret
mov
xchg
out
or
cmpsl
push
loop
orl
sub
and
scas
rolb
test
lret
ret
mov
inc
pop
adc
push
aam
cmpsl
rol
fldenv
adc
rorb
push
pop
mov
jnp
pusha
push
add
repnz
cmp
stc
rcll
addb
movsb
push
fwait
add
lds
xor
mov
test
clc
lahf
dec
sbb
jecxz
add
inc
faddl
push
gs
and
mov
jg
adc
subb
xchg
push
xchg
mov
mov
and
or
aad
pop
bound
fs
add
incl
mov
and
aaa
or
fists
jle
orl
mov
jno
add
sbb
mov
mov
xchg
addl
lret
loopne
jp
loop
ficoml
dec
dec
je
loopne
and
sub
adc
aam
push
popa
push
ret
pop
sub
mov
out
xchg
lods
lods
or
xor
fdiv
xor
cmc
pop
inc
popf
push
or
adc
xor
mov
in
mov
fadds
rcl
inc
dec
int3
pop
sbb
repz
xchg
mov
loop
dec
add
push
addr16
pusha
bound
in
add
push
arpl
jae
add
pop
cmp
jb
scas
jbe
cmp
movsl
mov
cmpl
mov
enter
fstp
mov
lea
popf
loope
mov
nop
push
sbb
inc
xor
jno
and
pop
cmp
add
imul
adc
daa
andb
pop
and
pop
jmp
push
pop
addb
adc
jb
sti
add
shlb
add
cld
jmp
out
loopne
add
outsl
cmpsb
pop
and
test
add
das
test
adc
dec
adcb
in
cwtl
lods
jle
mov
inc
add
or
xchg
mov
cli
mov
adc
and
xor
setge
fmull
cmp
push
push
test
sbb
cmc
xor
cmpsl
cmpsb
ucomiss
or
es
imul
pop
sbb
or
mov
das
xor
cmp
jno
jae
call
or
add
cmp
jmp
dec
xor
ret
push
ds
repz
andb
fwait
xchg
cmp
lods
adc
add
xor
ds
adc
mov
adc
push
xlat
sub
xchg
test
mov
add
addl
mov
mov
cld
inc
add
add
mov
movsl
mov
add
push
sbb
pop
inc
data16
leave
sbb
add
lahf
jnp
or
cld
add
pop
das
push
popf
je
add
mov
jmp
inc
xchg
pop
xchg
xchg
loop
test
sbbb
jne
push
add
jmp
pop
pop
add
push
mov
push
scas
fwait
xor
movsb
xchg
add
pushf
add
lds
pop
add
dec
test
loope
sub
add
cmpxchg
cltd
mov
loopne
push
mov
scas
inc
xchg
adc
loope
mov
inc
mov
daa
add
and
dec
mov
sub
imul
out
mov
rsm
dec
movl
mov
and
roll
or
xor
sbb
push
jmp
in
leave
frstor
int3
add
and
xchg
rorl
fidivl
add
popf
dec
or
cmp
lods
cli
mov
scas
add
es
in
imul
sarb
xchg
jmp
aas
insl
int
mov
or
sbb
push
mov
sbb
ja
add
test
push
sub
mov
inc
jecxz
imull
iret
dec
jg
push
in
sbb
aas
cmp
add
jle
cltd
dec
dec
test
scas
std
into
add
sbb
fiadds
xchg
push
xor
popa
insl
enter
mov
fcoms
iret
mov
loop
xor
scas
or
cld
jnp
out
add
xor
lea
adc
movb
shr
xor
xchg
add
push
push
inc
testl
and
loop
jge
xchg
in
add
insb
jne
cltd
js
mov
adc
or
add
divl
and
jle
mov
cmp
fwait
and
jmp
jo
stos
repnz
aas
mov
pop
fadds
aam
add
in
adc
pop
add
sbb
or
imul
pop
dec
ja
mov
mov
imul
xchg
push
xor
jge
push
lock
imul
sub
inc
dec
popf
add
sbb
mov
xchg
add
jno
mov
das
inc
lahf
add
mov
add
xor
mov
sbb
fs
into
pop
push
pop
push
or
cli
cmp
std
and
mov
pop
mov
dec
add
shr
xchg
and
pop
movsl
xor
aas
or
mov
data16
dec
testb
pushf
stos
sub
sbb
or
out
cmp
or
loop
jne
call
push
dec
add
roll
incl
push
imul
lcall
add
cli
dec
stos
xchg
mov
and
mov
xor
sub
jge
or
fstpl
cli
inc
inc
pop
pop
fcmove
dec
jg
cmp
xchg
shll
add
or
fnstenv
sbb
cld
adc
mov
in
sbb
data16
xorb
pop
cmpsb
lods
add
push
add
push
mov
add
imul
pop
inc
push
pop
in
xor
leave
fwait
repz
dec
mov
sbb
pop
out
mov
dec
cmp
fildll
out
sbb
mov
loopne
mov
scas
mov
push
xchg
xchg
mov
ret
aaa
sub
loopne
bound
push
xchg
mov
cmp
hlt
orb
mov
dec
or
repnz
shll
loopne
inc
outsl
or
or
jmp
out
jg
jb
sbb
lds
fstps
lcall
pop
hlt
repnz
out
add
mov
add
mov
popa
add
pop
mov
or
scas
lds
sbb
test
mull
jmp
xor
push
jns
gs
iret
mov
adc
xorb
ss
sub
or
pop
mov
adc
insl
loop
insb
push
or
jg
stos
aaa
arpl
and
pop
adc
jb
sbb
add
je
lds
xchg
pop
sti
sub
rolb
addl
mov
lea
cmpsl
sbb
add
jbe
fdivl
je
inc
jae
pop
adc
aad
or
xor
add
in
cmp
nop
mov
stos
jl
int
roll
add
and
adc
sbb
sub
aas
inc
add
pop
js
popf
aam
adc
data16
dec
loope
or
cmp
movsb
shll
imul
jl
cmovle
scas
test
inc
inc
test
sarl
int
roll
add
scas
cmpsl
sti
mov
iret
push
fs
add
addb
or
shrl
loop
and
mov
push
push
mov
out
pop
push
xchg
addb
fimuls
or
pop
clc
movsl
add
xor
cmp
xor
xor
das
arpl
and
enter
inc
lods
ret
test
out
adc
nop
mov
fsts
jns
add
add
jecxz
push
into
pop
and
or
mov
cld
dec
mov
push
xchg
ja
push
roll
enter
adc
lahf
in
mov
sbb
or
lahf
push
jns
loop
jg
hlt
fwait
neg
or
sub
inc
adc
cmp
jbe
jp
lock
add
sbb
jecxz
int
loop
push
jo
xor
xor
out
fcmovnbe
cli
rolb
movsb
pushaw
jle
je
mov
inc
push
mov
lea
mov
dec
and
inc
filds
arpl
push
testl
xor
daa
hlt
fcmovb
lock
jg
loope
mov
xchg
add
mov
mov
nop
adc
mov
dec
popl
mov
jae
lock
cld
notb
hlt
xor
xadd
mov
cmp
cli
jnp
push
add
sub
lahf
sub
nop
mulb
notl
das
lret
iret
or
mov
sub
push
gs
in
xchg
mov
imul
xchg
jae
dec
add
cwtl
cmpb
cmp
movsl
das
adc
and
lcall
add
ljmp
add
pop
sub
mov
push
test
test
add
mov
add
cmp
jmp
movsl
add
cmc
push
loop
and
mov
shll
les
roll
rcrl
out
outsb
ret
jl
stc
sti
xchg
aam
inc
lcall
xor
mov
jo
cmp
adc
cmp
pop
mov
call
mov
wrmsr
add
sbb
cmp
xchg
xor
or
add
loop
movsl
push
push
pop
gs
pop
sbb
inc
in
jl
push
mov
xchg
adc
mov
adc
icebp
mov
cs
movb
ret
cmp
pop
lcall
inc
mov
inc
es
mov
pushf
mov
xlat
sub
test
ja
dec
mov
add
mov
rolb
push
push
lods
fwait
mov
iret
and
sub
push
adc
test
inc
fistps
fadds
loopne
mov
mov
pop
hlt
xchg
add
cmp
testb
out
outsl
pop
jge
cmp
mov
add
les
and
fwait
es
add
lea
mov
push
cmpl
imul
sar
cmpsl
add
add
jnp
insl
sub
add
mov
bound
adc
out
movsl
fwait
imul
iret
add
leave
add
dec
add
xchg
pushf
jecxz
mov
adc
sahf
aam
loopne
mov
cmp
imul
test
add
add
adc
repnz
xor
cmp
insb
mov
push
and
mov
mov
lods
adc
shl
mov
jl
mov
sbb
outsb
mov
mov
dec
int3
test
add
nop
imul
xchg
xchg
jns,pt
mov
pop
or
repnz
xlat
js
daa
lock
cmp
add
call
sbb
fcmovb
lea
ret
inc
add
aam
int3
mov
lcall
fildl
add
jb
inc
mov
iret
je
outsl
and
or
push
sub
xor
sub
cwtl
mov
mov
mov
sbb
in
bound
pop
inc
mov
adc
js
leave
stc
sub
pop
and
fdivr
push
pop
sub
add
mov
jg
mov
push
add
jb
mov
add
jne
add
lock
loope
xchg
cmc
add
ret
stos
inc
fiaddl
push
jg
add
mov
pop
iret
add
outsl
jmp
sbb
mov
push
lds
mov
jnp
sub
ret
sub
aas
rolb
adc
sbb
stc
sti
add
rorl
aaa
mov
sub
inc
mov
pop
add
inc
inc
jle
jecxz
push
xchg
jg
and
mov
out
stos
mov
jns
add
mov
je
pop
cltd
pop
aas
sbb
jno
pop
insl
out
and
push
pop
or
aas
add
data16
xlat
or
test
setnp
fstpt
dec
fadds
add
add
mov
cmc
add
ret
cmpsl
jge
test
pop
call
loopne
rorb
dec
iret
sbb
addr16
or
add
sbb
xchg
push
clc
adc
mov
push
bound
idiv
sbb
lahf
das
push
jmp
dec
pop
addl
mov
add
repz
sti
inc
mov
or
xor
or
ds
sub
and
mov
add
adc
in
or
sub
jb
push
mov
sub
adc
add
mov
jecxz
jg
lods
mov
dec
mov
jae
add
insl
test
add
inc
and
mov
sbbl
rorb
jg
xchg
fcoml
sbb
les
add
out
iret
push
mov
adc
movsl
loopne
xchg
mov
ljmp
fimull
mov
pop
sub
inc
ljmp
lcall
inc
pop
test
lds
imul
or
xchg
mov
add
out
xor
cs
jle
mov
mov
pop
cld
mov
add
orl
sub
xlat
sbb
testl
aad
popf
add
inc
lret
mov
sub
mov
jnp
insl
rcrb
add
out
mul
dec
cli
pop
inc
sub
add
xchg
outsb
insl
dec
mov
test
lahf
xor
push
fistpl
popf
loop
sarl
adc
and
icebp
in
adc
or
jae
mov
push
add
jle
cmp
cld
fldl
mov
ss
adc
dec
mov
sub
lods
and
lahf
add
or
cli
aas
cmpl
jg
pop
push
in
leave
add
fwait
xchg
enter
outsb
xchg
push
push
fistl
lods
add
cltd
jae
dec
addl
fistps
ljmp
sti
out
out
stos
push
test
adc
clc
mov
ret
sub
inc
pusha
add
sbbb
inc
mov
add
sub
stos
xchg
jmp
test
lsl
fs
jge
test
mov
dec
pushf
adc
addl
fdivrl
addl
mov
add
dec
mov
test
jp
out
outsl
mov
pop
adc
pop
gs
xor
push
nop
add
mov
adc
push
push
mov
pop
lock
shrl
out
mov
xchg
add
mov
sbb
add
lock
mov
loop
inc
fucomi
xchg
call
ret
inc
xchg
popl
lcall
mull
fidivrl
xchg
push
add
push
enter
add
test
test
mov
add
lahf
or
mov
add
in
outsl
sbb
sbb
jnp
sti
bound
lcall
jno
mov
rcrl
sub
xor
test
jns
cmp
lcall
mov
or
push
xchg
xchg
cli
inc
jg
popa
outsb
aaa
add
mov
ret
lret
add
dec
cmc
sbb
out
push
xchg
jmp
xor
or
pop
and
inc
das
cmpsl
iret
add
cmc
out
adc
loop
cmp
push
mov
push
xchg
lcall
xchg
add
sbb
cld
inc
jp
cmpsl
in
mov
pop
stos
dec
and
cmp
or
movsl
clc
addr16
xchg
jae
pop
jecxz
and
fwait
shll
inc
repz
popf
incb
lods
ss
sahf
push
mov
in
add
or
cmp
xchg
sub
adc
outsb
nop
jae
jae
popf
push
test
loop
cwtl
adc
add
sub
lds
and
mov
ljmp
add
xchg
and
fldenv
add
mov
lock
rcll
aas
dec
and
fcmove
sbb
push
jo
pop
push
sbb
pop
out
push
imul
flds
cld
jmp
sub
cmc
dec
loop
jle
jl
mov
pop
jno
add
xchg
mov
adc
adc
sahf
push
jne
inc
xor
add
faddl
aad
add
lods
or
add
lea
and
pop
cmp
fimuls
ret
out
mov
jp
dec
loop
xor
sbb
sub
xchg
add
push
lret
xor
dec
and
cmpsl
add
imul
and
enter
scas
sbb
outsl
add
in
stc
mov
out
add
clc
stos
imul
lods
cvttps2pi
testl
or
add
rcr
pop
add
and
daa
bound
xchg
leave
out
std
mov
pop
mov
daa
int
outsl
mov
mov
add
mov
and
popf
popa
ds
jle
add
or
cmpsl
loop
fadds
mov
add
arpl
and
inc
call
or
jnp
test
repz
or
insb
lret
and
mov
or
sub
test
pop
cli
or
sar
add
lahf
daa
push
movl
data16
push
outsl
adc
loopne
pop
inc
je
repz
adc
es
add
aaa
push
sti
cmp
lahf
add
add
jmp
clc
mov
out
xor
ds
packuswb
add
and
jns
and
inc
mov
jo
xchg
sbb
add
sub
test
sbb
cli
ja
lahf
and
inc
lock
mov
lds
movsb
mov
imul
or
mov
add
adc
adc
cwtl
jge
xor
adc
push
xchg
pop
fabs
cwtl
subb
andb
jg
or
stos
pop
xor
sbb
sub
dec
test
icebp
add
add
hlt
cmp
fildll
out
cwtl
dec
xchg
push
or
int
enter
ficomps
lcall
inc
outsl
ds
jge
into
add
aaa
sahf
adc
cmpsb
mov
mov
push
add
in
xor
pop
sbb
aam
outsl
adc
mov
or
fdivp
std
sbb
int3
mov
adc
scas
stos
push
test
add
sarl
fwait
lods
in
pop
xchg
sbb
and
test
shrl
inc
gs
mov
mov
add
adc
roll
fcomps
rolb
dec
ja
out
add
aam
add
xor
fldenv
enter
out
imul
test
repz
sub
enter
loopne
aaa
mov
and
add
jnp
mov
es
in
and
test
mov
out
lret
sbb
cltd
aam
popa
cmpsb
xchg
add
adc
gs
mov
and
add
test
xchg
add
push
mov
repz
sti
add
mov
fdiv
iret
out
adc
ds
xchg
fisubrl
add
mov
fsubr
add
in
addl
or
add
in
decb
add
cmp
call
xor
loop
test
les
push
mov
adcl
movsl
faddl
and
cwtl
pop
mov
psubsw
add
dec
mov
sbb
js
in
mull
sub
and
test
pusha
lock
add
popf
ret
add
mov
xor
adc
popa
add
inc
cli
js
mov
std
jl
in
xchg
sub
cli
add
sub
jbe
out
mov
inc
dec
insb
adc
sahf
push
iret
inc
add
imul
sti
mov
test
jnp
sbb
add
push
jecxz
pushf
and
mov
xlat
hlt
mov
dec
testb
cmp
fbld
orb
cmp
lahf
xor
sub
mov
les
iret
lret
imul
mov
inc
push
adc
lea
push
mov
ljmp
and
jle
int
cmpsb
add
insb
pop
mov
sbb
test
mov
mov
sbbb
adc
jmp
mov
insb
add
dec
jnp
mov
stos
and
mov
int3
fldl
in
add
js
insl
jecxz
imul
pusha
jne
push
jb
sarb
aaa
mov
sarl
call
icebp
scas
scas
lods
jo
stos
xchg
sbb
pop
out
xchg
dec
adc
and
movsb
je
pop
pop
cmp
sub
andl
stc
add
jmp
pop
shll
sbb
mov
add
sti
cs
lock
mov
add
sbb
mov
lahf
hlt
push
xor
add
aad
or
xchg
lret
mov
int3
jge
je
pop
adc
add
xchg
mov
xchg
rclb
lret
lods
mov
js
icebp
mov
popf
sbb
sbb
pop
daa
mov
add
sbb
xchg
cld
xchg
fs
mov
xchg
scas
das
inc
pop
xchg
add
repz
loopne
mov
add
sub
push
sahf
flds
xchg
xchg
or
and
xchg
dec
mov
das
or
mov
popf
add
push
lock
jo
sti
add
rol
mov
loop
scas
loope
roll
or
mov
rorl
sbb
or
mov
cmp
pop
push
xchg
add
mov
mov
insb
arpl
or
jge
push
sub
aas
xor
jb
add
pop
or
jno
mov
sbb
cmp
test
mov
jmp
ret
pop
pop
loope
add
inc
inc
xor
dec
pushf
fdivrl
sub
fimuls
xchg
ret
cmp
xor
mov
adc
jbe
add
push
lods
lcall
loop
mov
xor
popa
cmp
adc
sub
imul
xchg
add
daa
add
fidivl
inc
add
mov
or
add
jne
pop
xor
mov
ret
mov
cli
add
jge
movsb
or
mov
sub
out
cmp
outsb
or
cmp
repnz
mov
bound
jg
inc
add
loopne
pop
in
jns
fstpl
movsl
jbe
fisubrs
lret
shll
pop
or
add
cmpsl
dec
xchg
cmp
sub
and
push
add
mov
scas
xorl
pop
sti
jecxz
inc
in
in
push
lahf
nop
scas
loop
clc
xor
dec
and
stos
imul
rol
cmp
cs
sbb
adcb
addb
loope
cwtl
mov
stos
cltd
lret
and
outsl
mulb
add
fsubrs
push
adc
popa
lret
in
rorl
or
mov
cmp
faddl
add
pop
aas
dec
mov
in
mov
pop
add
pop
adc
and
adc
add
xchg
rorb
sbb
in
lock
divb
in
addr16
and
xor
jns
repz
orl
xchg
ficompl
aam
lcall
in
xor
add
xchg
sub
mov
mov
cmc
int3
add
mov
cld
lret
sbb
lea
gs
testl
add
ljmp
test
or
push
ljmp
dec
out
add
int3
jge
mov
xchg
rcll
dec
cmp
pop
inc
pop
adc
fistpl
fcomps
cwtl
adc
imulb
add
ljmp
add
adc
pop
mov
rcr
jno
stc
cmp
push
sbb
xchg
aas
jp
arpl
push
xchg
aam
pop
lods
sbb
fsts
jnp
adc
shrb
lcall
inc
ret
lods
movb
jle
and
sbb
adc
push
ret
pushl
pushf
xor
push
mov
dec
and
pop
push
adc
jg
pop
pop
or
jo
jb
xchg
xor
sbb
inc
pop
mov
clc
push
aad
inc
out
cmpsl
sbb
jae
jle
pop
call
xchg
pop
popf
lods
test
jmp
in
ja
ljmp
xor
sbb
ret
sbb
and
pop
pushf
aas
push
sub
mov
cmc
mov
fcmovb
fistpl
pop
dec
or
add
mov
mov
mov
into
jmp
lods
popa
mov
rcrb
pop
sbb
inc
lcall
shrb
cs
sbb
faddp
add
subl
pop
fwait
imul
adc
sbb
stos
loop
push
inc
ficoml
xor
test
inc
dec
adc
pop
inc
add
int3
dec
xlat
push
dec
mov
mov
push
adc
enter
sub
add
aas
orl
add
mov
lods
add
mov
and
cmc
fs
add
call
cmp
aas
xchg
add
mov
mov
sbb
jmp
shrb
sub
add
and
aam
add
out
pop
fistpl
shlb
mov
pop
ficoms
or
popf
insb
jl
jmp
dec
adc
shlb
jnp
hlt
add
jns
stos
loop
lods
cmp
mov
bound
dec
xor
movsb
sub
add
push
and
adc
and
add
adc
inc
mov
call
mov
and
mov
adc
pop
add
loopne
pop
ret
cmc
lahf
out
mov
rolb
int
movsb
or
pop
push
pushf
push
pusha
lret
mov
std
push
dec
rorb
jge
loop
xchg
push
sub
inc
ss
jle
sub
mov
aam
pop
ficomps
scas
adc
pop
dec
xor
add
lahf
das
push
mov
jnp
xchg
jo
jno
or
add
fildl
lahf
mov
xor
jb
mov
mov
xchg
faddl
pusha
push
test
fwait
sub
push
jmp
add
pop
ret
repz
mov
sbb
adc
aam
xchg
cmc
push
stos
les
aas
mov
sbb
add
xchg
and
bound
loope
sub
rclb
inc
jg
xchg
sub
jge
pop
ja
frstor
inc
jbe
aas
sub
cmp
adc
push
mov
jmp
fcoml
mov
push
add
out
add
in
andb
lcall
es
push
dec
je
inc
add
or
sub
jmp
add
mov
popa
adc
add
xlat
fldl
out
add
sub
insl
jns
mov
outsb
xchg
xlat
add
mov
imul
gs
pusha
add
sub
icebp
lahf
movsl
cmp
pop
adc
repz
sbb
int
adc
js
jl
pop
xchg
push
test
cmp
rorl
mov
pop
xchg
add
fwait
inc
xor
insb
imul
inc
pop
lret
fisubrs
pusha
add
xor
xchg
and
gs
cmp
leave
subl
cwtl
pop
add
mov
loope
cmpsl
xor
outsl
mov
push
les
inc
lods
add
mov
pushf
push
cmp
dec
xor
add
jl
mov
add
jle
hlt
cmpsl
fiadds
loopne
mov
cmp
rol
add
adc
aaa
js
xor
pop
or
add
push
lea
add
cmp
add
pop
jg
inc
cmp
add
inc
jnp
add
sahf
inc
xor
rcl
loope
mov
dec
mov
cmp
pop
dec
add
enter
add
std
int
pop
push
mov
or
add
xor
add
in
jmp
inc
scas
int
xchg
or
cmp
das
pop
negb
inc
xor
fsubl
repz
sbb
add
jb
push
add
aam
dec
cmp
cmp
sbb
shl
push
sarb
mov
xchg
mov
pop
sbb
out
push
and
nop
add
fdiv
mov
push
cltd
sub
cwtl
scas
add
push
test
sbbl
mov
mov
lcall
add
and
jge
std
sbb
mov
and
fsubrs
pop
imul
adc
loopne
sbb
das
mov
pop
or
and
out
loop
xchg
mov
mov
jb
or
in
mov
or
mov
lret
add
xchg
aam
mov
adc
cltd
xlat
jae
pop
push
loopne
lcall
shrl
adc
and
jo
sbb
fldl
out
ret
xor
dec
loope
pop
sbb
adc
shrb
vaddsd
and
push
pop
sbb
cwtl
mov
arpl
sbb
or
lods
add
mov
scas
inc
inc
ficomps
mov
xchg
xor
js
cmpsb
mov
mov
mov
rcrb
sbb
sbb
sbb
jle
sub
inc
jno
pop
repz
sahf
mov
orb
jl
in
push
jns
sub
pushf
jecxz
push
jno
jmp
mov
xor
fldt
loop
jle
mov
xlat
pop
sbb
subl
add
fisubrs
fadds
mov
xor
enter
leave
and
rcrb
dec
idivl
pusha
ss
lea
in
out
jle
pop
iret
test
push
mov
subl
mov
fidivrl
mov
mov
pop
ja
push
adc
aaa
add
jno
shr
dec
pop
fwait
cmc
sbb
test
dec
movsl
mov
adc
add
lods
cld
cld
or
dec
jle
pop
outsb
add
arpl
in
dec
sahf
xchg
xchg
jbe
pop
in
push
mov
add
add
jp
lds
jge,pn
jns
out
add
js
mov
mov
and
add
shll
inc
inc
dec
dec
pop
xor
adc
ds
ret
mov
jae
stc
pop
loop
sti
jg
out
xor
xlat
jo
add
cmp
adc
jno
in
inc
xor
insl
dec
orb
pop
stos
inc
mov
push
push
add
xchg
sbb
repnz
or
test
ja
imul
push
and
cmp
mov
jmp
lea
out
int3
outsl
jb
je
ficomps
xor
mov
ret
cmp
mov
mov
aad
out
mov
xchg
or
xlat
je
fdiv
sub
xor
js
prefetchw
add
call
add
cmp
and
jge
add
push
fbld
pop
daa
arpl
sarl
mov
out
sahf
push
fs
test
aam
imul
inc
jmp
int3
inc
push
pop
mov
dec
jae
bound
sbb
pop
xor
mov
cli
popf
clc
loop
inc
ljmp
addl
push
lret
iret
cs
adc
movsl
or
add
insl
or
repnz
es
push
add
movsb
xor
sbb
ljmp
adc
pop
inc
shrb
adc
sbb
sbbb
adc
jne
fildl
pop
mov
cwtl
fs
arpl
push
lock
inc
inc
adc
fcompl
stc
adcb
pop
push
mov
addl
push
adc
repz
adc
inc
bound
or
adc
sti
hlt
pop
add
xchg
movl
enter
xor
xchg
pop
lcall
push
mov
add
inc
fists
push
in
sub
and
mov
push
orl
into
popl
inc
xchg
test
jb
pop
clc
or
mov
add
rcrl
clc
push
fcmovnb
lock
bnd
cmp
in
movntps
add
add
shl
stos
mov
test
out
xchg
sub
push
loop
sub
add
jl
adc
sarl
adc
add
data16
and
in
add
push
jmp
xchg
pusha
add
push
ss
aaa
dec
or
cld
cli
inc
and
pop
mov
pop
ss
dec
lods
test
into
add
mov
test
loop
or
sbb
xor
add
push
mov
cli
adc
adc
and
xor
and
inc
das
mov
xor
add
push
pop
jp
sahf
mov
dec
and
fisubs
popl
arpl
xchg
jge
repnz
adc
pop
inc
cmc
mov
inc
setle
cmp
ja
ljmp
xchg
pusha
sbb
mov
shlb
mov
sub
sub
jae
insb
adc
sub
or
jle
adc
sbb
jae
jecxz
clc
adc
sbb
sahf
test
mov
in
pusha
adc
pop
sub
loop
ret
mov
pop
mov
dec
int
bound
lret
popf
shr
adc
add
jo
add
adc
add
mov
mov
xorl
loope
js
shl
fcompl
mov
mov
add
push
mov
add
xor
lcall
in
out
dec
lock
jae
and
imul
xor
icebp
lods
in
add
test
sahf
add
push
inc
int3
dec
fmull
and
lock
stos
test
ret
repz
fisttpll
jb
xchg
jl
les
pop
daa
adc
mov
cmp
call
add
xchg
lods
sbb
jl
flds
mov
loopne
shr
push
mov
call
or
add
inc
push
pop
fwait
ljmp
adc
ficomps
in
sub
mov
pop
hlt
mov
push
fadd
nop
inc
lret
mov
xchg
pop
out
rolb
in
add
rolb
lret
push
sbb
jbe
add
lock
and
mov
xor
stc
data16
bound
cmp
test
mov
adcl
call
pop
push
out
lods
sbb
pop
outsb
mov
fiaddl
lock
push
fdiv
or
inc
stc
push
loop
rclb
fadds
sbb
dec
mov
jnp
cmc
loopne
add
cmp
mov
pushf
rcll
add
enter
rcl
sbb
pusha
sbb
push
ds
and
add
mov
fisubrs
pop
inc
andb
sub
adc
or
or
into
iret
adc
mov
or
lret
push
cmp
and
cld
ret
and
xchg
loope
adc
mov
or
icebp
sahf
mov
sahf
out
fiaddl
das
dec
cmp
dec
cli
loopne
sbb
pop
pop
les
rcll
ret
push
add
int3
pop
add
dec
lcall
mov
lret
mov
mov
cli
jne
mov
mov
in
cli
cmp
sbb
jno
jae
repz
push
pop
test
sahf
rcll
fadds
pusha
adc
xlat
lret
in
add
dec
loopne
arpl
mov
push
and
jp
dec
imul
stc
fcoml
adc
rcrl
jg
push
mov
js
mov
push
xor
cmp
dec
loop
mov
add
test
pop
inc
fildl
push
pop
sub
lock
add
fisubrl
repz
test
sub
loopne
pop
aam
clc
mov
add
xor
imul
push
lret
fcoml
jmp
or
dec
lret
sahf
repz
pushl
subl
or
mov
jns
roll
xorb
stos
add
inc
mov
pop
daa
cld
ret
add
inc
pop
add
dec
and
inc
fstpl
icebp
add
cmc
aaa
js
lods
mov
sbb
aad
jmp
add
and
in
inc
cmp
cmove
add
js
and
adc
sti
and
movsb
pop
or
or
mov
pop
lcall
loop
shll
lock
or
sub
test
add
dec
int3
dec
fiaddl
push
loop
add
push
out
jno
adc
push
je
sbb
dec
add
icebp
pusha
lcall
inc
loope
incl
ds
test
jne
cmp
aad
mov
ret
mov
inc
stos
inc
lock
outsl
loop
inc
add
or
push
and
sbb
add
ficoms
enter
js
mov
xchg
mov
rcll
movsb
fisubs
pop
repnz
jge
inc
add
jbe
xor
add
testb
xchg
xchg
mov
or
mov
out
push
add
mov
dec
pop
lods
shlb
imul
push
test
xchg
xchg
aam
adc
mov
mov
mov
cmp
jge
mov
out
test
xchg
xchg
rorb
sub
leave
dec
push
enter
xor
jo
xor
xchg
inc
mov
or
sbb
or
test
add
add
inc
inc
add
in
inc
push
add
mov
mov
loope
sbb
js
test
inc
sbb
leave
outsl
incl
mov
pop
int
cmc
pop
hlt
lret
pop
cmpsl
push
xchg
mov
lret
add
or
loop
bound
imul
sbb
fldenv
mov
add
mov
mov
test
or
dec
sub
xchg
lcall
add
mov
pop
mov
dec
lcall
ret
pop
ret
add
sbb
les
sbb
js
adc
xor
ret
mov
sbb
adc
xchg
loop
push
aas
mov
aam
mov
push
clc
xchg
ljmp
stc
dec
sbb
and
in
xchg
pop
sbb
add
pop
cmp
int3
cltd
clc
shlb
jg
sbb
test
loope
dec
mov
fwait
rolb
jmp
and
dec
adc
and
sub
test
adc
dec
sbb
add
inc
and
les
lods
add
sub
sbb
sti
shl
lret
sbb
gs
negb
rolb
repz
xlat
push
js
add
inc
jae
hlt
aaa
add
jne
mov
sti
fcoms
adc
pop
sub
subb
dec
fdivp
add
popa
dec
popf
stos
clc
mov
decb
jbe
stc
sub
loopne
push
and
add
divb
sbb
jns
rolb
jl
rcrb
into
cmc
add
jns
int
movsl
add
and
sub
outsl
add
xor
scas
mov
std
stos
loop
mov
sbb
xchg
inc
adc
dec
add
js
sbb
jle
or
repz
clc
test
mov
xchg
test
add
es
jns
shlb
andb
outsl
rcrl
push
inc
roll
js
push
loop
pop
mov
add
dec
or
mov
scas
sub
pop
addr16
push
jp
adc
mov
fidivrs
sub
in
mov
add
mov
mov
fwait
add
subb
aam
enter
pop
inc
xchg
and
cmp
pop
clc
pushf
icebp
sar
add
cs
jbe
out
sbb
fcmovbe
mov
xor
adc
popf
mov
inc
dec
or
cmpsl
pushf
loop
or
add
sti
rolb
sbb
xchg
jecxz
pop
push
jbe
adc
sub
insb
mov
hlt
dec
xchg
adc
add
ljmp
push
loop
in
rolb
icebp
sbb
add
mov
outsl
enter
jg
cltd
adc
xchg
mov
sti
in
mov
and
test
negb
add
sub
lock
iret
fcomps
shr
test
out
adc
test
pop
orb
push
mov
ficoms
sahf
movb
aam
pop
xchg
sbb
outsb
push
ret
add
lcall
addr16
int
mov
push
test
dec
sbb
inc
pop
lock
loop
mov
imul
push
sbb
pop
pop
pop
push
int3
outsb
lea
inc
or
sub
cmpsb
or
jbe
fadd
dec
lcall
ret
xchg
pop
loop
clc
rol
inc
out
insb
loop
push
pop
loop
push
and
inc
sbb
scas
mov
fsubr
adc
loop
dec
sti
stos
fistpl
xchg
sbb
xor
out
pop
cld
sti
fcmovnbe
inc
push
fdivl
mov
sbb
sti
jle
jp
js
idiv
fwait
xor
fwait
imul
pop
sarb
xchg
cmpsb
gs
mov
adc
add
sti
cld
je
fistpll
pop
int
pop
sbb
mov
pop
mov
fwait
outsb
pop
fdivl
mov
adc
idiv
ljmp
faddl
fwait
cmpb
orl
mov
add
imul
jae
add
test
clc
bt
push
not
not
rcr
push
not
rcr
shr
push
mov
bsr
btr
push
rol
neg
bswap
bsr
mov
shr
lea
mov
test
xadd
mov
not
or
sub
sub
xchg
pushf
pushl
lods
mov
ror
test
add
rol
not
call
repnz
lea
je
jne
lea
mov
bsr
and
shld
sub
dec
neg
sar
mov
pushf
jmp
push
jmp
stc
sub
pushf
stc
pusha
jmp
test
cmc
test
call
pushf
pusha
lea
je
test
pushf
pushf
or
mov
lea
je
pushf
xor
aam
shr
mov
aaa
mov
jmp
movzbw
mov
sub
xor
add
not
and
sar
setl
mov
clc
cmp
test
test
jmp
lea
jne
not
stc
sar
mov
sar
bt
sub
movzbw
bts
jmp
mov
cmp
push
or
call
push
push
pushl
popl
pushf
push
pushf
pushl
ret
imul
inc
imul
inc
inc
push
xor
or
sub
adc
fstps
or
out
pop
jp
btr
outsl
jg
out
add
jecxz
cmp
and
call
imul
pop
and
dec
pop
das
mov
leave
fwait
test
push
pop
inc
lods
in
in
js
aam
mov
add
and
sub
je
jo
pop
cwtl
ja
dec
int
pop
in
xorb
sti
repnz
cwtl
hlt
hlt
sub
mov
stc
inc
imul
push
xchg
jb
sub
repnz
inc
loope
cmp
push
cmpb
jmp
stc
addb
mov
jg
lret
jmp
mov
in
pop
mov
mov
into
icebp
xor
pop
dec
jae
incb
divb
xchg
icebp
fnstsw
mov
je
arpl
in
pop
mov
xor
sub
repnz
jae
lea
dec
loopne
test
fsubrs
repz
enter
hlt
dec
cmp
enter
lods
push
pop
dec
fists
repnz
sbb
cmp
xchg
pop
push
mov
mov
out
loop
je
mov
sbb
movsb
lea
cltd
dec
loopne
imull
imul
mov
xchg
sub
icebp
xchg
shlb
hlt
mov
jmp
jmp
xorb
or
insb
js
sub
rolb
pop
xchg
testb
pusha
mov
lea
jmp
push
pusha
pushf
mov
mov
push
not
mov
mov
pushl
ret
add
mov
mov
lea
jmp
add
stc
bt
movb
pusha
cmp
call
neg
mov
stc
cmp
bt
cmpb
pushf
jmp
dec
movsb
mov
inc
imul
dec
int3
sub
test
pop
pusha
dec
jl
lret
inc
fcomps
rorb
mov
test
je
orb
mov
xlat
xor
dec
pusha
xchg
fwait
jp
xchg
fimull
out
or
xchg
jo
mov
outsb
mov
nop
cmc
shrb
jne
mov
mov
cmpsb
les
aam
push
js
push
mov
adc
cmpsl
subl
cmc
rcrl
call
pusha
lea
jb
jmp
call
push
adc
call
xor
setnp
mov
add
cmc
call
push
ror
test
add
test
not
cmc
clc
stc
clc
add
movb
lea
call
bt
call
mov
push
movb
pushl
ret
and
ficoms
sbb
dec
add
movsb
xor
inc
jmp
jg
lret
xchg
lret
call
mov
jb
mov
lds
jb
imul
xchg
cmc
shlb
sbb
dec
jae
test
dec
push
stc
or
xchg
sar
mov
hlt
faddl
fdivrl
rcrb
and
jmp
pushf
pusha
lea
je
stc
pushf
add
bt
cmc
pushf
push
cmp
jmp
pushf
lea
je
push
jmp
pushf
push
lea
je
jmp
add
dec
gs
popa
addr16
outsl
js
add
imul
mov
lret
stos
dec
imul
push
and
sarb
in
addr16
or
and
inc
int
jnp
jg
sub
inc
inc
negb
mov
jae
or
and
push
insl
into
mov
or
mov
xor
adc
push
jbe
push
cmpsb
xchg
fdivr
lcall
pop
outsl
push
std
inc
imul
dec
inc
pop
pop
daa
out
mov
jbe
mov
lret
push
sub
mov
roll
and
pop
mov
jge
adc
sub
cltd
std
inc
imul
aas
jae
out
pop
jecxz
xchg
lcall
xor
xchg
gs
insl
jns
xchg
loopne
pop
sub
pop
sub
cmc
inc
cmp
jno
in
es
jbe
sti
mov
add
mov
jle
or
shr
and
cmp
lcall
out
in
cmovo
not
lahf
jmp
stc
cmc
clc
add
cmc
cmc
pushf
mov
cmc
pushf
pusha
movb
test
movb
jmp
push
lock
std
std
andb
ret
jle
mov
pop
or
mov
pop
bound
xor
or
je
in
fmuls
push
and
aam
pop
lds
out
shlb
adc
test
pop
sub
pop
add
imul
sub
mov
sub
aad
cmc
jmp
jg
mov
shrd
add
clc
push
lea
movl
setno
pushf
sbb
cmc
mov
lea
test
stc
cmp
pushf
call
jl
adc
inc
imul
xchg
cmp
addr16
sbb
je
call
push
das
sarb
aad
xor
out
fcoml
test
pop
out
ss
jl
sbb
add
mov
add
stos
xchg
cmpsl
repz
sub
stos
aam
lods
adc
lock
lret
pushw
xchg
mov
xlat
rcrb
mov
push
xchg
cld
pusha
lea
jb
call
push
lea
mov
clc
jmp
sub
bt
pushl
popl
cmp
cmc
cmp
pushf
push
jmp
cmp
jmp
call
call
stc
call
movl
pusha
pushf
movb
lea
jmp
lea
pushf
mov
cwtl
bswap
movl
call
lret
push
lock
imul
lret
or
or
negl
in
fnstenv
js
sbb
aad
sbb
and
jo
test
cwtl
cwtl
or
sub
test
sbb
inc
imul
inc
aad
mov
sti
int3
sub
mov
leave
jg
adc
inc
or
fisubs
sbb
or
pop
xor
pop
insl
test
in
dec
sub
mov
dec
inc
lds
adc
rol
pusha
neg
jmp
call
pop
push
not
pusha
mov
pushf
mov
jmp
push
push
inc
push
xor
cs
insb
aas
cmpsl
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
and
push
mov
ss
test
xchg
mov
dec
loop
dec
xchg
xor
fistpl
mov
sbb
rcll
mov
shll
push
js
mov
inc
mov
cmp
idivb
dec
push
fldcw
ja
sub
mov
push
hlt
dec
sub
nop
xchg
add
mov
push
jge
mov
pushf
je
mov
mov
mov
jae
scas
add
cmp
test
fmull
sub
and
data16
rorb
lret
popf
pop
add
fcos
rcrb
mov
out
push
cltd
adc
add
cmp
dec
xchg
fstpl
pop
lods
xlat
or
add
fisubl
movsl
in
decb
movsb
and
repz
mov
xchg
cmpsb
jl
sbb
aad
fs
shrb
fs
or
clc
cmpsb
lahf
and
and
push
jmp
arpl
stos
sbb
inc
mov
mov
pop
pop
aam
ret
frstor
lock
lcall
int
enter
jle
sahf
sahf
aas
push
cmp
dec
sbb
shlb
push
pop
push
push
out
pop
aaa
cmpsl
pop
mov
pop
mov
test
lret
mov
xchg
rolb
gs
sub
fstp
push
xchg
xor
movsl
mov
enter
test
mov
or
jbe
push
cmp
int3
push
imul
inc
adc
cld
cld
into
and
jno
fidivrs
and
sub
jne
mov
out
cmp
clc
loopne
lock
mov
fwait
lock
cs
outsl
sarl
lods
mov
lods
pop
test
push
mov
mov
movsl
xor
mov
push
mov
aaa
sti
sub
xchg
jp
xchg
or
cs
out
subb
outsb
mov
scas
stos
lret
call
int
loop
xor
lea
gs
daa
and
pusha
jg
xor
add
push
fmuls
fildll
mov
push
fadds
sbb
cwtl
clc
ss
popf
lret
mov
clc
push
das
push
ret
mov
or
insb
pop
jne
sub
outsl
int
sbb
lock
xlat
pop
xchg
out
xor
stc
mov
cmpsb
pop
pcmpeqb
jge
pop
std
mov
rcrb
or
pandn
out
add
sbb
fs
adc
sbb
pop
insb
mov
shl
or
nop
nop
icebp
mov
cltd
out
push
push
jnp
xor
out
nop
scas
adc
push
enter
sbb
jp
sub
dec
mov
cmp
cwtl
mov
into
iret
and
mov
and
pop
mov
icebp
sbb
cs
jne
scas
shlb
hlt
sbb
xor
jg
in
add
inc
mov
pop
jbe
xor
lds
xor
mov
xchg
pop
loopne
out
sbb
pop
out
in
mov
lock
or
adc
fimull
xchg
std
aas
enter
int3
test
rorl
sti
mov
dec
xlat
in
push
pop
mov
out
sub
idiv
adc
sub
sbb
jo
out
scas
mov
test
or
adc
xor
xor
fcmovu
les
mov
imul
aaa
xchg
push
clc
sbb
aad
adc
aam
ljmp
notl
lret
sbb
add
dec
pop
rorl
and
add
sbb
mov
mov
push
lret
popf
sbb
aam
lahf
sub
loop
gs
in
jno
jecxz
sub
data16
ret
mov
pop
cmp
sbb
push
aad
inc
icebp
dec
lea
test
adc
divb
ds
in
leave
dec
add
int
mov
add
mov
adc
push
in
daa
mov
test
xchg
mov
sub
xor
fstpl
pop
mov
stc
sub
xor
fwait
inc
jmp
test
leave
rolb
or
mov
mov
lock
leave
cld
rorb
jne
repz
and
call
pusha
das
mov
jno
dec
out
pop
inc
scas
popf
xor
and
gs
fistpll
jno
inc
call
jge
add
push
jae
pop
addr16
sbbl
jp
mov
cmp
jnp
and
or
jmp
xchg
rcrl
dec
insb
sub
mov
mov
xor
outsb
fsubr
jecxz
repnz
fldt
pushf
ret
add
setne
imul
jb
inc
test
mov
inc
xchg
mov
in
push
sarb
ret
push
int3
sub
adc
mov
out
pop
fnstenv
repz
adc
xchg
adc
imul
jbe
leave
inc
xlat
int3
or
jl
mov
mov
mov
pop
dec
cltd
xchg
and
mov
jae
pandn
and
loop
shrl
or
inc
rorl
and
xlat
lret
clc
cmp
mov
lcall
mov
gs
lock
mov
enter
fwait
xor
imul
dec
mov
xchg
xchg
dec
sti
arpl
dec
mov
mov
jg
jl
clc
adc
sbb
lods
out
test
lods
stos
jae
lcall
cmp
shll
adc
cmpsl
shlb
lods
inc
nop
jl
push
sbb
and
loop
pushf
lahf
test
xchg
xlat
loope
mov
clc
push
dec
push
pop
push
xchg
aam
push
xor
lods
in
and
lahf
pop
xchg
popw
mov
mov
jne
daa
jb
ret
sbb
fwait
cmp
js
clc
outsl
mov
xchg
aas
sahf
rcrl
jecxz
sbb
addr16
aam
sti
lret
arpl
popa
clc
cwtl
jae
cld
or
arpl
pop
cmpsb
dec
scas
nop
xlat
in
mov
jle
hlt
cmpsb
inc
mov
mov
lods
xchg
loopne
sub
cmp
iret
test
mov
mov
cmp
int3
cmpsb
fcoml
test
adcb
mov
mov
out
jae
push
jbe
sbb
jbe
cmp
xor
outsb
stos
out
fisttps
inc
pop
shlb
push
pop
mov
jne
std
fwait
sub
push
and
stc
sbb
sub
sbb
insb
subl
scas
inc
sub
pop
push
pop
mov
adc
int
inc
into
mov
mov
xchg
hlt
ja
mov
adc
clc
xchg
mov
outsb
xchg
or
mov
add
lock
xchg
cs
out
push
push
leave
sub
in
packsswb
mov
ljmp
insl
iret
je
mov
add
in
dec
dec
inc
daa
int
inc
lods
test
fisubrs
jno
dec
inc
arpl
mov
xor
or
mov
mov
loope
cs
jp
inc
add
xchg
insl
inc
ficompl
cs
mov
sub
push
jb
pop
push
data16
lcall
jno
int
fsubrs
aad
faddl
add
mov
hlt
pop
andb
cmp
out
cmp
xchg
sbb
cmp
outsl
push
out
jno
dec
jle
pop
and
or
xor
mov
out
mov
cmp
mov
lcall
adc
call
cmp
loope
dec
loopne
in
aam
stos
add
rol
mov
ja
cld
stos
cmp
jae
fisttps
mov
sbb
add
ret
andl
fildll
or
jp
mov
pushf
mov
fmuls
mov
xchg
push
js
sub
adc
arpl
ret
mov
and
into
scas
es
jl
xchg
cmc
mov
or
icebp
fadds
insl
lds
sbb
cli
enter
cld
jp
pop
test
mov
cmp
sbb
out
ja
out
adc
jle
adc
mov
popa
mov
nop
cmpsb
loop
sbb
cmp
cli
je
leave
call
outsl
int3
lea
ret
jg
push
sarb
xor
adc
and
pop
dec
dec
int
jmp
adc
jb
loop
stos
sbb
dec
cmp
mov
inc
insl
mov
add
mov
cmpsl
call
stos
add
push
ret
inc
leave
flds
imul
mov
stos
dec
sub
jmp
xor
into
jbe
mov
cmp
push
shrl
test
lock
test
or
ds
fs
pop
popl
int
adcb
push
add
sti
or
leave
mov
icebp
cmp
lds
fidivl
mov
inc
inc
and
xchg
mov
sbb
add
xchg
std
jbe
into
sub
js
sub
vcmpsd
jle
mov
jecxz
mov
call
or
in
mov
cwtl
test
xchg
push
mov
imul
jp
mov
ret
inc
mov
int
dec
sub
out
pop
fidivrs
out
nop
jle
cltd
test
dec
pop
test
out
mov
jo
add
mov
arpl
cmp
or
or
xor
and
xlat
lret
jge
icebp
in
dec
add
sub
inc
out
nop
jge
or
fidivrl
stos
std
mov
scas
dec
push
stos
ljmp
dec
dec
loopne
inc
xchg
jg
cmp
fcmovnbe
fidivrs
push
fidivl
pop
jecxz
cmp
mov
in
int
mov
lret
shll
icebp
inc
movsb
fsubrs
ss
mov
push
push
sti
cs
je
mov
test
sbb
mov
popf
fistl
sbb
mov
imul
sbb
gs
dec
addl
lcall
xlat
in
or
fiadds
inc
push
test
add
aas
rolb
xlat
lahf
shrb
aad
mov
call
into
mov
and
ret
fsubr
push
pop
cmp
les
mov
dec
fs
jl
jae
push
adcb
or
jo
inc
leave
mov
mov
mov
xchg
daa
jge
cs
cmc
xchg
cli
cmp
lds
pop
sbb
inc
sbb
mov
adc
mov
or
mov
imulb
dec
mov
cld
or
insl
mov
inc
sub
sbb
pop
das
adc
push
stc
daa
add
movsbw
mov
test
pusha
movb
and
call
shrb
dec
int
imul
aam
aam
mov
in
mov
fwait
lcall
lds
pushl
ficoml
add
add
call
dec
push
inc
cwtl
push
xor
jg
mov
sahf
push
xor
loop
mov
push
xor
add
cld
in
mov
pop
stos
cmp
test
fisubrs
test
push
jle
and
imul
sti
das
test
sub
dec
test
mov
fnstcw
lret
xchg
mov
pop
sahf
ret
stc
fistps
or
arpl
cmp
pop
fdivrp
sti
sahf
mov
mov
pusha
jnp
ret
pop
cmpsb
jle
dec
push
insb
mov
mov
mov
insl
in
jnp
andb
mov
pop
dec
arpl
lahf
out
pop
cmpl
popa
test
pusha
int3
jge
push
jnp
inc
imul
sub
loop
push
inc
stc
dec
mov
mov
rcr
enter
lods
dec
into
lret
jb
mov
or
push
mov
push
cmpl
enter
frstor
aad
jnp
sub
pusha
test
dec
jns
dec
pop
popa
xchg
enter
gs
icebp
push
add
andb
mov
mov
add
jns
or
insl
mov
loop
ficomps
out
pop
insl
test
lods
mov
les
jg
in
mov
nop
popf
outsb
add
sbb
or
loopne
das
push
inc
loop
and
push
int3
mov
sbb
scas
cmovge
lock
and
nop
add
icebp
add
pop
xchg
pop
daa
push
fsubs
fdivr
imul
add
imul
inc
inc
inc
leave
fcmovnb
cmp
jno
and
es
push
pusha
add
cmpsb
sbb
mov
aam
jns
inc
aaa
in
dec
mov
xchg
in
es
shld
cmpsb
pusha
dec
cmp
pmaxub
inc
shrb
loopne
or
test
jns
xchg
jmp
test
icebp
cmp
in
or
xor
repnz
push
lea
jmp
mov
sar
call
call
add
ret
inc
imul
loope
push
xor
in
xchg
test
clc
push
add
cld
xor
dec
xchg
cs
jae
cld
push
push
inc
dec
mov
push
push
jbe
aaa
sub
pop
jns
cmp
fdivs
frstor
aaa
lcall
in
imul
lcall
int3
xor
icebp
and
in
and
pushf
cltd
daa
and
fstp
add
push
push
xor
push
mov
jbe
outsb
fiadds
addb
sub
loop
jns
push
sub
xor
clc
jo
lods
pop
cmpsb
pop
fsubl
pop
xchg
lods
dec
movb
or
adcb
into
cmpsl
mov
xor
in
rolb
aas
out
mov
jo
inc
cmpsb
xchg
inc
xchg
pop
xchg
rolb
or
test
mov
add
inc
mov
inc
jge
es
jle
inc
leave
ss
divb
mov
xchg
xor
mov
scas
fsubl
push
push
lret
add
arpl
adc
xchg
push
nop
fisubl
cmp
add
rcll
vpminub
or
negb
mov
xchg
jmp
sbb
insb
popf
add
incl
sbb
jno
loopne
mov
adc
jge
out
out
jno
dec
ds
ljmp
jae
idiv
add
cmc
mov
mov
rclb
sub
les
or
mov
sbb
das
xchg
rorb
push
dec
jl
movsb
and
or
fldt
daa
out
fsubl
mov
cmp
inc
sub
xchg
mov
loope
int
add
out
aas
popa
mov
movl
pushl
pushf
pushf
pushf
lea
jmp
stc
cmp
pusha
pushl
call
pushl
bt
jmp
pushf
inc
pushf
pushf
pusha
push
lea
jmp
cmp
mov
pusha
lea
jae
push
pusha
push
push
lea
jmp
movzbw
mov
mov
stc
push
cmpb
call
test
cmp
push
pushf
pushl
push
lea
je
cmp
bt
push
pusha
cmp
mov
lea
je
push
pushf
lea
jmp
pushf
pushf
lea
jne
pushf
not
lahf
movb
lahf
lahf
pop
bswap
push
pusha
movsbw
call
bnd
movb
push
jle
inc
pop
sub
jae
mov
cltd
inc
stos
lahf
xor
sbb
or
iret
xchg
pop
pushf
pushf
jp
cmc
in
pop
jge
adc
jo
movsb
out
xchg
xor
addr16
shl
sbb
jo
and
dec
scas
loop
and
mov
dec
dec
sbb
push
pushf
movb
lea
jo
je
pusha
movl
movb
jmp
push
push
mov
movl
pushl
pusha
movl
pusha
lea
jmp
pop
push
fmull
pushl
ret
bsr
inc
test
shr
add
xor
jmp
cmc
xor
pusha
pushl
lea
call
jmp
dec
xchg
inc
movl
xor
out
sub
cld
lea
aas
or
stc
and
sbb
aaa
pop
je
adc
xor
sub
fdivrs
pushf
xor
pop
pop
stos
imull
lahf
jb
dec
mov
aad
out
or
mov
fidivrs
fildl
jne
repnz
jne
rcl
lea
call
lea
jne
pusha
pop
pusha
bswap
mov
push
lea
jmp
movsbw
lahf
lea
movsbw
mov
lea
jl
push
movl
pushl
lea
ja
pusha
jmp
pop
pusha
movb
push
pushl
ret
stc
sub
pushl
call
test
xor
jmp
mov
xor
push
mov
clc
test
stc
repnz
jmp
movl
movb
lea
jmp
movw
jmp
mov
mov
push
mov
setp
pusha
jmp
fadd
aam
inc
imul
pop
and
fnstenv
pop
fidivl
outsl
xchg
or
sub
cld
lahf
jae
cld
ja
pop
ljmp
push
jmp
rcrb
or
loop
push
or
in
jno
sar
jmp
add
roll
jae
cmc
sbb
loop
mov
fdiv
push
xor
jae
pop
mov
ret
inc
jo
mov
inc
dec
aaa
imul
test
xor
insb
adc
add
gs
cmc
sbb
call
shlb
out
mov
das
dec
mov
cmp
mov
and
cmp
lds
jmp
inc
pop
add
rcll
lahf
hlt
xchg
enter
xchg
sbb
mov
es
jno
les
xor
xchg
pop
sbb
pop
xor
in
std
icebp
pop
fmull
mov
out
cs
mov
testl
mov
add
and
ds
pop
aam
dec
hlt
inc
inc
adc
lret
sbb
mov
mov
fldt
push
movlps
pop
adc
ret
arpl
dec
imul
outsb
inc
xchg
jge
pop
repz
mov
pop
dec
mov
push
in
gs
inc
pop
dec
lret
inc
out
xlat
xchg
incl
dec
sub
pop
int3
sub
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
pop
lahf
fiaddl
jb
inc
cmp
cmp
add
adc
imul
repz
add
imull
cmp
push
into
sbb
fidivl
pop
sbb
xchg
mov
cmp
xor
jne
cmp
add
cld
xor
add
adc
imul
enter
push
jle
repnz
sbb
aam
inc
jnp
out
push
imul
or
loop
cli
sub
inc
mov
inc
rcll
mov
std
fwait
and
inc
loop
popf
fnstcw
sbb
mov
aam
mov
xchg
pop
jle
sbbb
inc
nop
dec
int
jecxz
rolb
sbb
popa
fnstsw
shrb
int3
push
dec
push
fs
je
outsb
mov
xchg
xchg
xchg
iret
lea
call
call
jmp
test
push
or
lea
jg
pusha
pusha
mov
lea
je
bswap
not
setp
bswap
mov
movzbw
mov
mov
lea
call
test
call
test
call
call
mov
pop
pushl
not
cwtl
cwtl
pushf
mov
pusha
pushf
pushf
movl
lea
jp
movzbl
lea
jmp
call
adc
jo
inc
imul
imul
cmpb
leave
xchg
mov
mov
push
notb
lea
mov
lods
adc
shlb
pushf
fwait
xchg
or
clc
aam
loop
gs
or
cmp
cmp
mov
cmp
add
ljmp
aas
cmp
mov
ds
xor
and
mov
iret
movsl
pop
adcb
push
imul
inc
icebp
jns
ds
inc
and
mov
scas
mov
lea
js
pushf
pusha
lea
jne
push
pop
push
movb
cwtl
mov
mov
mov
lea
call
cmp
lea
push
pushf
pushl
ret
movl
mov
call
lea
jne
and
sub
shl
bswap
adc
shld
mov
bt
bt
adc
mov
add
sub
cmc
mov
stc
push
test
jmp
pusha
movb
cmc
push
sub
call
btc
neg
add
aam
push
call
rolb
xchg
flds
out
adc
in
add
rcll
imul
movsl
lds
adc
and
mov
dec
aas
rcrb
enter
stc
fistps
pop
aad
stos
test
mov
scas
mov
xchg
push
or
daa
daa
aad
adc
dec
sub
add
jbe
fidivrs
push
nop
ficoms
dec
movsb
rcrb
das
push
fs
leave
leave
popf
sbb
out
inc
dec
xchg
pop
repz
ljmp
idivl
in
cld
insb
jmp
cltd
fwait
and
xchg
sahf
xor
dec
mov
cwtl
mov
sbb
ljmp
imul
test
and
ds
adc
mov
push
mov
dec
xlat
lahf
loop
inc
mov
xchg
pop
xchg
sub
pop
mov
cmp
mov
rcrl
movsl
fldt
stos
pop
lcall
fsubrp
jae
cli
mov
jb
sahf
push
and
and
movsb
mov
sarl
inc
cwtl
std
es
sbb
addb
inc
imul
mov
xchg
dec
hlt
and
roll
sarl
jb
sarb
popf
mov
popf
sbb
dec
lds
movsb
jae
call
pop
xor
mov
shrb
nop
scas
lods
nop
loopne
pop
xchg
adc
pop
rolb
imul
mov
or
and
ret
fdiv
mov
std
jp
mov
cs
popa
ret
adc
sbb
xorb
push
xchg
shlb
cmp
mov
pop
or
xchg
test
cmp
stc
data16
fistpll
incl
dec
inc
lahf
cmpsl
repz
xor
xor
xchg
jns
xor
aad
in
arpl
jno
aas
mov
addl
adc
movsb
fbstp
xchg
sub
and
cmc
movsb
nop
jo
aad
mov
lods
and
mov
mov
jns,pn
inc
dec
pop
and
push
sub
call
inc
repnz
xor
mov
sbb
scas
adcl
jmp
adc
pushf
lea
je
pushf
cmp
sub
call
mov
pushl
lea
call
orb
shlb
and
insl
inc
pop
push
outsl
filds
insl
adc
jno
sbb
push
sub
das
nop
rcrb
adc
loop
aaa
gs
add
and
mov
add
daa
and
push
mov
pop
mov
pop
push
sub
daa
jp
aaa
clc
daa
popa
dec
xchg
ret
cmp
nop
test
lea
inc
adc
scas
fs
adc
stos
inc
pop
in
mov
dec
fildll
or
pop
pop
cmc
stc
sti
mov
testl
enter
or
cs
fsubl
mov
push
mov
fdivp
push
xor
aas
mov
xchg
add
dec
loopne
ds
mov
scas
add
popa
popa
scas
lods
shrl
ljmp
mov
adc
test
fisubrl
xchg
or
lds
loop
sub
and
push
insb
hlt
jae
std
mov
xchg
aam
lods
xchg
imul
jmp
xchg
push
adc
aam
ficompl
lods
mov
dec
adc
jns
mov
xchg
pop
insl
inc
or
mov
mov
les
mov
fldenv
in
sbb
pop
push
add
sub
iret
cmpb
mov
call
filds
addr16
cli
mov
or
jecxz
and
adc
and
bound
sar
aas
out
movsb
ret
hlt
mov
test
cmp
lods
lea
mov
addb
xor
lahf
lahf
mov
jmp
out
cmc
xlat
ljmp
sub
bt
cmp
call
xor
add
cmp
clc
call
jns
rolb
jbe
cmp
sub
xchg
mov
dec
adc
jg
loope
mov
or
or
outsb
loope
jbe
cmp
je
loopne
inc
or
int
rorb
push
cmpsb
ret
mov
bound
andl
pushf
call
xchg
lods
and
inc
test
lods
pop
dec
outsb
movsb
xchg
test
and
rorb
inc
add
scas
xchg
test
mov
jmp
mov
inc
imul
fisubs
inc
sbb
jecxz
andl
sahf
dec
bound
dec
ss
call
mov
xorl
das
test
fcom
lcall
addr16
dec
pop
jo
mov
pop
adc
adc
push
pop
and
into
cmpb
int
jle
out
repz
lahf
sub
or
stos
sub
lcall
push
dec
aad
push
sub
mov
rorb
mov
in
sbb
sbb
mov
dec
test
roll
cld
lret
lahf
andl
ja
cmp
cmp
cltd
cmc
sbb
add
jb
fidivrs
mov
jp
pop
jbe
loopne
sub
out
cmp
push
sub
iret
into
jns
mov
shrl
sbb
lret
xchg
jp
mov
sbbl
out
xor
lock
mov
testl
outsb
lock
and
push
sub
cmp
or
mov
dec
xchg
in
push
mov
fistl
lods
iret
lods
rcl
imul
xchg
mov
movsl
push
and
inc
out
lds
int3
or
sub
mov
sub
adc
push
mov
scas
pop
xor
mov
insb
imul
rcrb
mov
mov
sub
and
mov
negl
jecxz
sbb
mov
or
stc
or
and
inc
sbb
push
xor
scas
xchg
mov
mov
data16
scas
mov
pop
test
orb
jo
shr
adc
pusha
mov
sub
pushl
xchg
jecxz
sub
push
cmp
dec
icebp
lods
int
mov
jg
cli
popl
jp
outsl
lods
jg
bndstx
out
and
and
sbb
test
ret
je
mov
lods
cld
das
mov
mov
lods
icebp
sbb
mov
dec
xor
jbe
aad
dec
mov
inc
imul
sub
mov
lods
cld
das
sbb
jle
xchg
mov
lods
call
xchg
push
lcall
popf
pop
into
mov
fiadds
push
xchg
icebp
pop
cmp
fisubrl
and
jge
or
ss
ss
in
inc
mov
inc
or
mulb
lock
and
sbb
dec
in
loopne
jno
repnz
rolb
push
mov
aad
mov
cmp
sub
cli
mov
xor
or
fsubl
mov
pushf
mov
mov
and
hlt
into
jns
or
rcll
xchg
push
jmp
loope
add
or
and
inc
in
mov
sub
push
cwtl
jecxz
je
test
imull
dec
aam
xor
inc
imul
push
xlat
add
xchg
jge
dec
les
repz
inc
repz
pushl
cmpl
subb
jnp
outsb
cwtl
and
rcll
ja
mov
hlt
add
aad
rclb
sahf
xchg
adc
or
lods
sbb
fadds
add
add
jg
jecxz
pusha
movsb
imul
pop
mov
mov
and
sub
lcall
or
aaa
xlat
jae
jg
dec
arpl
and
cmpsl
pop
aam
rorb
add
add
das
outsb
lcall
call
add
add
inc
add
inc
add
rolb
in
mov
add
add
add
or
add
add
add
xorb
stc
cmc
cmc
call
call
mov
mov
pushf
mov
pusha
pop
pushf
lea
jmp
repnz
pushf
pusha
call
bsf
bt
and
test
push
setbe
sar
add
mov
bts
push
seta
bsr
pushf
mov
xchg
pushf
sbb
test
mov
mov
movzbw
add
push
sbb
bsr
dec
push
cmp
btc
btr
mov
push
not
mov
sbb
mov
mov
add
jne
or
push
jmp
lea
movb
movl
pusha
pushl
mov
pushf
push
pushl
ret
repz
xlat
inc
imul
mov
orb
test
imul
in
data16
ds
jo
test
int3
pop
add
cld
mov
stos
shll
jmp
cmp
insb
roll
in
push
addb
bound
cltd
icebp
jmp
sbb
fwait
xchg
xchg
or
mov
lods
push
jmp
or
push
push
mov
lcall
sbb
push
lret
mov
popf
popa
loop
and
sbb
sub
call
imul
out
push
push
int
inc
mov
xchg
stc
mov
cmpsb
push
sub
pop
shl
aas
sar
lcall
mov
pop
aas
cmp
mov
sub
repz
mov
into
gs
mov
push
jg
jecxz
or
or
jp
mov
sti
xchg
sbb
adc
or
shr
outsb
frstor
loop
imulb
js
clc
fistpl
movl
push
mov
lea
jmp
movl
pushf
call
lea
jne
call
lea
pushf
push
pushf
push
xchg
call
mov
imul
dec
xchg
cmpsl
orb
sti
pop
daa
push
sub
ja
sub
xor
popf
lea
and
sbb
inc
jno
in
dec
fwait
sub
adc
adcl
push
or
xorb
inc
notb
cli
scas
addr16
sub
stc
lea
jb
test
cmp
pushf
cmp
movb
jmp
movw
movl
pushf
pushf
lea
jmp
rep
movzbw
mov
pusha
movw
pushf
pushl
lea
jmp
repz
push
aad
imul
ret
mov
sub
out
push
mov
ja
lret
loop
dec
stc
push
aas
std
mov
hlt
frndint
xor
call
mov
push
leave
and
mov
fisttpl
scas
and
aam
rcr
clc
bsf
mov
pusha
clc
mov
shl
jmp
bt
clc
jmp
call
cmp
lea
jg
pusha
lea
jae
add
shl
clc
neg
mov
neg
not
shl
cmc
mov
rol
rcr
mov
bt
pushf
sub
pushf
mov
movb
lea
jmp
movw
jmp
inc
jmp
jmp
lea
jae
rcr
adc
mov
xchg
pushf
mov
sar
mov
jmp
notl
es
inc
imul
stos
outsl
jmp
test
fldt
test
xchg
sbb
xor
xorl
xchg
leave
add
pop
jl
xchg
xor
xchg
dec
shll
in
and
call
mov
mov
jge
xor
dec
pushf
lahf
pop
mov
or
fistpll
aam
xchg
mov
mov
sub
inc
sub
out
xor
inc
and
mov
pop
ja
cwtl
xchg
mov
call
sbb
mov
sub
dec
sbb
xchg
aas
adc
or
test
in
cltd
popf
stc
loope
dec
lea
insl
adc
mov
or
push
and
imul
pop
int3
in
repnz
push
daa
in
out
jmp
je
imul
out
or
test
mov
xchg
shrb
adc
int3
cmp
insl
addr16
xorb
cltd
xchg
fldcw
xorb
sarb
aaa
lret
cmp
es
adc
xor
in
and
sbb
and
mov
lock
push
pop
popf
outsb
aas
jle
cs
mov
mov
scas
pop
or
arpl
icebp
sbb
das
xorl
jnp
test
jg
loop
pop
ret
rcrl
stc
sub
das
ljmp
sub
xor
or
dec
addb
je
mov
call
push
mov
lea
cwtl
movsbl
mov
lea
push
jmp
push
int
test
imul
in
dec
adc
push
adc
imul
mov
gs
mov
leave
mov
adcb
sbbb
sbb
cwtl
mov
call
xor
and
and
loope
xchg
xor
lret
mov
mov
sysret
pop
mov
imul
lods
cmp
jmp
lea
jb
pushf
cmp
push
lea
jae
bt
mov
clc
pusha
pusha
mov
call
mov
adc
adc
not
add
pushf
jmp
shr
jl
cmp
call
addb
popf
xor
add
pop
inc
ljmp
mull
xorb
sub
push
dec
es
inc
sub
push
ss
xchg
add
movsb
mov
push
arpl
pop
adc
jo
fsubs
cltd
sbb
adc
mov
adc
add
adc
adc
mov
adc
repz
mov
aas
and
loope
push
or
adc
jno
lcall
lea
push
push
jp
inc
nop
dec
pushf
inc
and
or
cltd
xchg
jecxz
clc
sahf
test
xchg
testl
das
mov
jg
sbb
push
and
mulb
cmpsl
in
push
int
out
movsl
test
mov
clc
fwait
push
push
popf
mov
mov
icebp
aad
leave
or
test
dec
sbb
dec
out
push
stos
outsl
stc
cmp
not
lea
not
mov
pushf
lea
ja
pusha
lea
jb
bt
jmp
clc
mov
bt
call
jmp
int3
popf
pusha
pushl
lea
jae
pusha
movl
pusha
push
movb
movl
pushf
lea
jmp
sbb
ja
jbe
sbb
aaa
mov
bsf
pushf
addr16
in
jmp
inc
jnp
jne
cltd
adc
xor
add
ja
jbe
jns
jbe
fstl
clc
push
jmp
call
pusha
movl
push
lea
jmp
bt
jmp
lea
jne
ror
mov
mov
pushf
or
mov
lea
je
bswap
lea
mov
lea
bswap
push
movzwl
bswap
bswap
lea
lea
mov
pushf
pushf
call
pusha
call
nop
mov
scas
inc
imul
dec
or
jno
push
mov
sti
xchg
mov
jae
lods
or
sub
push
dec
mov
inc
mov
rcr
jbe
sbbb
inc
or
and
jmp
inc
xor
dec
cmp
imull
pop
push
shr
add
push
mov
sub
fildll
sbb
dec
cs
aam
jg
adc
or
push
lods
ss
add
xchg
call
in
jmp
loope
push
xchg
loope
pushf
xchg
add
push
popa
not
pop
push
bswap
mov
movzbw
mov
jmp
and
xlat
lods
inc
imul
inc
loop
sahf
cmpsb
sub
sti
andb
and
xor
adcl
adc
test
mov
dec
sahf
rcrl
jmp
loopne
inc
dec
jne
cld
nop
stc
adc
cmc
add
out
mov
in
cmp
xchg
jl
and
addr16
add
sbb
outsb
jno
mov
push
or
cmpsl
jge
xor
test
or
fmuls
cmp
mov
inc
push
cmp
rcll
xchg
adc
andl
js
lods
xor
sub
cmp
jecxz
and
and
add
and
decl
test
lcall
xor
pushf
mov
jmp
lea
jne
pusha
pushf
pusha
pushl
lea
call
pushf
pusha
movb
lea
jmp
pusha
stos
pushf
push
pushl
push
lea
jmp
movsbw
call
add
add
pushf
movl
pusha
jmp
lea
jae
push
add
xor
bswap
mov
adc
lea
mov
adc
mov
test
sub
pusha
push
lea
jmp
andl
jbe
add
mul
repnz
fcmovbe
push
pushf
lret
std
and
shl
push
dec
packsswb
mov
cmp
or
pusha
sbb
jl
cmp
mov
push
repnz
mov
pop
sub
xchg
cmpsl
arpl
movsb
add
jne
cmpb
sbb
xchg
push
pop
push
add
jae
movsb
mov
cmp
and
mov
lcall
inc
and
int
jmp
jmp
mov
stos
jmp
call
pusha
pushf
pusha
movw
lea
call
push
push
pushf
adc
call
pusha
mov
movl
call
pusha
jmp
lea
call
push
mov
jmp
cmp
imul
push
stos
lcall
rcrb
call
xor
jae
cmpsl
rcll
fsubrs
or
ss
iret
add
or
out
testl
out
and
loopne
or
mulb
mov
push
cmp
scas
scas
pop
fs
push
xchg
es
push
pushf
push
push
mov
mov
mov
mov
lahf
mov
sahf
adc
and
pop
add
xchg
xchg
sbb
outsb
outsb
outsl
mov
jp
lods
jnp
mov
xor
lock
dec
dec
adc
xor
dec
or
cwtl
pop
xchg
fwait
std
in
push
dec
test
loop
movsb
push
inc
sub
test
sub
add
jo
or
leave
and
aam
xchg
loope
dec
sub
add
cmp
pop
insl
in
pop
insl
cltd
cwtl
lods
outsl
js
xchg
xchg
and
scas
daa
mov
jge
shrb
std
aam
js
subl
in
jmp
pop
add
or
add
add
ja
movsl
leave
sub
jbe
lahf
push
pushf
dec
mov
roll
sbb
jns
into
pop
rorb
cmp
sbb
mov
xor
adc
inc
call
sub
mov
lret
pop
fs
pop
inc
cmc
daa
nop
mov
inc
std
std
outsl
or
inc
xchg
daa
inc
mov
adc
loop
fists
inc
and
mull
fimull
cs
xchg
mov
mov
lret
cmp
mov
out
mov
iret
std
stos
in
cltd
fdivrl
mov
and
mov
in
in
mov
jo
lret
fdivrl
pop
push
nop
add
mov
lcall
xchg
rcl
sbb
xchg
scas
enter
mov
aam
inc
and
or
add
push
pushf
movzbw
mov
lea
pushl
push
call
pushl
mov
mov
lods
cmp
call
movzbw
lea
lea
pushf
call
pushl
popl
pusha
bt
cmp
cmp
movb
lea
ja
neg
mov
clc
sub
bswap
shl
add
jnp
add
pusha
shld
sar
lea
mov
neg
test
mov
ror
mov
stc
pusha
test
jmp
fstpt
inc
imul
sti
dec
arpl
cmpsb
shlb
test
test
into
subl
cmc
pop
jecxz
mov
insl
add
fiadds
ds
imul
les
popf
dec
dec
loopne
idiv
cmp
cmp
lahf
sub
push
adc
mov
jl
hlt
mov
push
mov
xchg
loope,pt
add
sarl
mov
mov
push
jnp
outsb
cmp
stc
cltd
adc
lret
shrb
les
fsubs
pop
movsb
popf
cmpl
and
movl
pusha
pushl
ret
adc
aaa
mov
push
rcrb
jle
push
mov
es
dec
jge
scas
jg
repz
fstpt
xchg
addr16
jecxz,pn
lret
scas
jbe
jecxz
mov
rcrl
dec
fst
loopne
adc
cmc
xor
outsb
xchg
out
pop
push
out
aad
pop
stos
xchg
repnz
xchg
cmp
push
out
xchg
xlat
add
mov
insl
or
add
or
xor
sbb
jp
xor
stc
into
push
xchg
pop
or
push
jle
hlt
enter
cmp
mov
sbb
adc
sub
push
cmp
lods
out
pop
mov
sub
add
and
xchg
mov
mov
sbb
sbbb
jbe
sahf
push
ljmp
cwtl
sub
pop
xor
sti
daa
loopne
pop
and
bswap
movl
lea
movb
movl
pushf
not
jmp
inc
cmc
add
pop
or
sub
pop
push
loopne
out
fbld
inc
pop
cwtl
je
fidivrl
sbb
imull
std
mov
cmp
test
dec
xlat
rcrl
adc
xchg
push
int
sahf
inc
add
pop
ja
pop
mov
or
insb
scas
shrb
daa
add
dec
cld
je
jg
push
imul
mov
das
pop
mov
or
enter
push
inc
imul
out
fwait
sti
xor
cmp
pushf
pop
int3
dec
xchg
test
pop
lds
mov
cmpsb
clc
or
popa
mov
push
mov
xchg
rcrl
dec
mov
add
sahf
test
orb
jae
mov
daa
lret
popf
cmpsl
inc
imul
mov
inc
mov
xchg
mov
out
sbb
repnz
js
xor
daa
push
jo
jne
mov
hlt
call
fbstp
mov
outsb
icebp
inc
jae
arpl
icebp
cmp
fsts
sbb
into
add
loop
mov
xor
dec
jl
add
jns
test
cmp
lea
jne
not
movb
movsbw
mov
lahf
push
pusha
bswap
jmp
je
das
xor
pusha
mov
sar
setle
bts
shr
mov
pusha
shr
add
bsf
mov
jmp
pushl
bt
cmp
pusha
jmp
push
shrd
mov
xor
mov
and
mov
sub
jg
push
mov
sub
jmp
xor
shl
inc
mov
test
push
xor
push
rol
movw
add
pusha
bt
xor
bt
push
pushf
pushl
xor
test
test
cmc
clc
cbtw
bt
stc
cmp
clc
cwtl
cmc
sub
call
test
shr
pusha
pusha
movb
mov
pushf
push
movb
movb
pushf
popl
pushl
call
pushf
push
jmp
call
call
push
pushl
lea
je
test
cmp
xor
test
cmc
pushf
pushf
xchg
clc
pushl
stc
pushf
mov
stc
call
pushf
mov
mov
movb
pusha
pushl
ret
mov
not
pushf
push
not
mov
movzbw
movzbw
movzbw
pushl
popl
not
lea
call
mov
call
pushf
mov
mov
mov
call
movb
pushl
popl
movb
mov
mov
lea
jmp
xor
inc
pushf
shrd
not
sar
test
xor
not
call
add
movw
call
add
pushf
stc
pushf
xor
call
movl
lea
setne
call
bt
rcr
xor
adc
mov
push
clc
pushf
add
push
push
pusha
lea
jmp
mov
movb
lea
jmp
mov
pushf
movb
lea
jmp
not
mov
jmp
mov
call
neg
bt
jmp
lea
cpuid
pusha
bt
sub
stc
cmpl
movl
jmp
push
mov
pushf
pushf
pusha
jmp
jmp
pusha
mov
pushf
mov
push
lea
jmp
pushf
pushf
popl
pushf
push
mov
not
movsbw
dec
movzbl
mov
bswap
movsbw
xchg
not
call
movb
call
mov
jmp
dec
call
bsr
sar
adc
mov
cmp
bt
cmc
add
pushf
push
pushf
lea
jmp
movsbw
inc
rcr
pop
and
clc
mov
cmc
jmp
pusha
pusha
pushf
pushf
popl
push
pushl
popl
pushl
lea
jmp
push
lea
mov
movzbw
pushl
mov
pushf
not
xchg
jmp
lea
jne
pusha
pushf
mov
push
lea
jmp
mov
lea
je
push
mov
pushf
push
pushf
lea
jmp
mov
jmp
pushl
popf
movb
pushf
movb
lea
jmp
setg
mov
rol
clc
call
jmp
mov
call
fdivp
inc
add
incl
insl
inc
add
clc
inc
add
flds
inc
hlt
inc
add
add
repz
add
add
fldl
ret
lock
add
repz
add
inc
add
testl
fdivp
inc
add
repz
add
rolb
mov
lock
add
out
inc
add
incl
mov
incl
and
inc
add
in
add
cmc
inc
add
jecxz
add
inc
add
out
add
inc
add
repz
add
incl
mov
in
add
inc
add
inc
add
incl
push
rolb
fcos
inc
add
incl
mov
incl
xlat
icebp
inc
add
loope
add
inc
add
icebp
inc
add
inc
add
inc
add
in
add
in
add
fiaddl
and
inc
add
cld
inc
add
cld
inc
add
fiaddl
mov
clc
inc
add
cld
inc
add
incl
push
rolb
out
loope
add
cld
inc
add
jecxz
add
jecxz
add
out
add
cld
inc
add
out
inc
add
inc
add
repz
add
cld
inc
add
inc
add
add
cmc
inc
add
lock
add
jecxz
add
cld
inc
add
out
add
inc
add
cld
inc
add
inc
add
inc
add
cld
inc
add
loope
add
flds
sbb
inc
add
incl
insl
lock
add
cld
inc
add
inc
add
inc
add
inc
add
cld
inc
add
inc
add
in
add
cld
inc
add
icebp
inc
add
fiaddl
mov
cld
inc
add
icebp
inc
add
testb
cld
inc
add
lock
add
out
inc
add
cld
inc
add
fiaddl
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
add
out
add
inc
add
inc
add
lock
add
out
inc
add
jecxz
add
inc
add
incl
sbb
into
inc
add
add
repz
add
inc
add
cld
inc
add
jecxz
add
jecxz
add
incl
jmp
inc
add
fiaddl
sub
inc
add
cld
inc
add
testl
push
inc
add
out
inc
add
incl
nop
into
inc
add
loope
add
incl
scas
testl
nop
into
inc
add
hlt
inc
add
repz
add
cld
inc
add
rolb
fdivp
inc
add
out
inc
add
lock
add
out
add
jecxz
add
out
add
icebp
inc
add
jecxz
add
jecxz
add
out
inc
add
rolb
and
inc
add
inc
add
rolb
jnp
inc
add
cli
inc
add
rolb
repz
add
repz
add
rolb
iret
jecxz
add
ljmp
xor
inc
add
rolb
mov
cli
inc
add
ljmp
or
inc
add
inc
add
incl
repz
add
rolb
frstpm(287
inc
add
inc
add
inc
add
hlt
inc
add
incl
or
inc
add
jecxz
add
clc
inc
add
rolb
xchg
out
inc
add
inc
add
rolb
mov
out
inc
add
inc
add
rolb
insl
lock
add
inc
add
lock
add
rolb
ret
lock
add
lock
add
out
add
rolb
pop
cld
inc
add
in
add
jecxz
add
rolb
and
inc
add
out
inc
add
ljmp
and
movl
mov
mov
jmp
shl
and
mov
rcl
pusha
neg
mov
cmp
stc
clc
add
pushl
pusha
lea
jle
pushf
mov
pusha
pushf
push
lea
jmp
pushf
mov
pusha
call
jmp
pushl
pushl
popl
call
add
bt
sub
bswap
dec
not
btc
btc
movsbw
ror
mov
bsr
not
pusha
setae
movb
stc
sub
xor
rcl
xor
mov
pusha
test
jmp
or
rdtsc
xadd
shr
rdtsc
clc
cmc
sub
push
pushf
jmp
mov
pushl
pushf
pushf
pusha
pushf
popl
jmp
rol
add
pusha
movzbl
jmp
call
mov
call
lea
jg
push
pushf
lea
jmp
mov
push
push
lea
jo
pusha
mov
call
pusha
pushf
pushf
pushf
popl
pusha
mov
call
test
pushf
clc
add
pushl
pusha
call
mov
pushf
pushl
movb
mov
lea
jmp
stc
lea
push
aam
shl
bt
lea
shl
rol
bts
bswap
sub
stc
mov
lahf
pop
lea
movsbw
shld
and
shr
btr
sub
pop
mov
lea
movsbw
lea
lea
pushf
pushf
mov
push
call
call
movw
pushf
call
test
clc
or
pusha
mov
lea
je
cmp
pushf
bt
movb
sub
pushf
test
xchg
stc
mov
pushf
movb
clc
sub
call
pushf
popl
pusha
movb
call
pushl
popl
pushf
jmp
mov
pushl
jmp
mov
add
mov
call
movb
call
mov
mov
pushf
lea
jle
pushl
pusha
pushf
movl
pushl
lea
jmp
mov
pushf
inc
call
mov
jmp
mov
pushf
mov
movw
pusha
mov
pushf
lea
jmp
mov
movl
push
mov
mov
pushf
jmp
not
push
mov
jmp
pushf
push
mov
pushf
lea
jmp
call
push
std
push
cld
pushl
rep
stc
mov
xor
xor
shl
mov
bt
jmp
pushf
push
movb
pushf
popl
call
mov
call
mov
movw
call
mov
pushl
pushf
pushl
popl
jmp
mov
push
push
call
mov
pusha
mov
pushf
jmp
mov
pushf
pusha
pushf
push
lea
jmp
call
movw
add
movb
pushl
mov
pushf
pusha
lea
jmp
lea
je
stc
push
call
pushl
popl
push
movl
mov
pushl
movl
pushf
lea
jmp
call
shld
pushf
call
pusha
pushf
mov
call
pushf
mov
pushf
push
call
jmp
mov
lahf
dec
call
mov
pushf
pushl
push
pushl
mov
pushf
call
mov
movw
pushl
popl
jmp
sar
cmp
test
pushf
mov
movw
mov
mov
pusha
add
push
mov
push
push
lea
jmp
push
movb
lea
jne
rol
jge
or
neg
mov
clc
and
test
clc
call
cmc
mov
cmp
ror
movb
mov
stc
pushf
pushf
jmp
pushl
popl
push
push
push
lea
jmp
pushf
mov
call
pushf
mov
pushf
call
mov
pushl
pushf
pushl
mov
lea
jmp
mov
push
call
mov
push
mov
pushf
jmp
mov
lea
jns
push
pusha
push
pushf
popl
pusha
pushf
call
push
mov
pushl
pushf
call
movl
pushl
popl
pushf
push
pushf
lea
jmp
mov
mov
call
mov
jmp
clc
test
sub
call
pushf
mov
call
pusha
push
push
pushf
popl
movb
pusha
mov
push
jmp
push
call
cmc
push
stc
sub
cmp
neg
call
mov
movw
lea
cld
mov
bswap
bswap
pusha
jmp
mov
call
pushl
pushl
mov
movb
pushl
popl
pushl
jmp
call
pushf
popl
pushf
mov
movw
pushl
popl
movl
pusha
push
lea
jmp
xorb
lea
mov
not
setge
mov
pop
pusha
pushf
movw
mov
lea
jmp
mov
mov
push
pushf
mov
pushf
movl
call
push
pusha
pushf
popl
call
push
jmp
pushl
popl
mov
movb
lea
jmp
mov
pusha
pushf
popl
mov
movb
call
pushf
lea
jne
shl
bsf
call
call
aam
dec
lea
shr
mov
cmc
cmp
call
call
not
cmp
push
and
pushl
mov
movb
pushf
popl
lea
jbe
popl
push
push
lea
jmp
mov
jmp
and
pushf
pushf
popl
pushf
jmp
div
movb
pushl
mov
call
jmp
adc
pusha
movsbw
setl
mov
pusha
pushl
and
pushl
cmp
pushl
lea
jne
rcr
dec
xorb
movsbw
bswap
push
lea
jge
pop
pusha
pushf
lea
jmp
pushf
popl
pushf
mov
movb
pushf
mov
pushf
mov
jmp
lea
pusha
mov
mov
mov
lea
jmp
mov
pushf
pushl
popl
pushf
mov
movl
push
mov
push
mov
lea
jmp
jmp
daa
pushf
das
mov
jmp
pusha
mov
push
pushf
popl
lea
jno
popl
pusha
pushf
pusha
lea
jmp
movl
pushf
call
lea
jo
push
pusha
jmp
call
call
push
not
pushf
test
sub
test
test
mov
test
sub
pushf
mov
push
lea
jmp
pushl
popl
pushl
movl
pushf
movb
lea
jmp
mov
call
rol
lea
jnp
pusha
push
pusha
inc
cmc
call
mov
pushf
call
push
pushf
lea
js
inc
pushf
decl
pusha
push
call
call
pusha
pushf
mov
push
mov
pushl
mov
mov
movw
call
mov
cmp
adc
test
mov
pushf
sub
pushf
bt
shr
jmp
bt
xor
clc
sub
pushf
push
jmp
mov
mov
push
pusha
call
pushl
popl
push
push
pushf
push
lea
jmp
pushf
movl
push
push
pusha
push
lea
jmp
pusha
pusha
lea
jne
pushf
pushf
popl
push
mov
call
mov
jmp
call
call
mov
movb
jmp
pusha
mov
mov
pushl
mov
pusha
mov
movb
call
jmp
mov
mov
mov
push
jmp
pushl
cmp
pushl
pushf
lea
ja
xchg
call
jmp
jmp
pushf
pushl
popl
push
lea
jmp
mov
push
push
mov
pusha
jmp
mov
push
push
pushl
ret
jmp
lea
jae
shl
push
mov
pushl
mov
pushl
lea
jne
pushf
push
jmp
pushf
push
pushf
push
mov
pushl
jmp
movl
movb
pushl
movb
pushf
lea
jmp
pushf
dec
call
sub
call
mov
movl
pushl
popl
mov
call
pushf
pushf
popl
pusha
pushl
popl
movb
pushf
lea
jmp
cmp
push
pushf
call
stc
rol
cmp
cmc
neg
call
shl
movzww
cmc
jo
sub
bt
test
stc
jmp
add
add
movl
mov
lea
jmp
bswap
movsbl
cld
call
mov
call
pushf
pushf
jmp
lea
ja
mov
pushf
pushf
popl
push
pushl
popl
movl
pusha
pushf
movb
lea
jmp
movb
push
mov
call
pushf
call
jmp
pushl
mov
mov
call
pusha
jmp
mov
call
movl
pushf
pushf
popl
push
movb
call
pushf
stc
cmp
sub
stc
stc
mov
jmp
pushf
popl
mov
jmp
pushl
popl
movb
lea
jmp
mov
jmp
movb
call
jmp
rcr
neg
not
mov
sub
mov
jmp
mov
pushl
call
mov
pushf
mov
call
mov
push
mov
pushf
movb
lea
jmp
lea
je
mov
jo
pusha
dec
jmp
push
call
pushf
sub
clc
neg
call
push
movl
mov
mov
jmp
mov
pusha
movb
lea
jmp
xchg
pushf
movl
jmp
cmc
xor
call
jmp
movsbw
mov
pusha
pushf
mov
push
divl
call
pushf
pushf
popl
push
mov
call
stc
movzbl
jmp
mov
sub
jmp
pushf
pushf
mov
movw
jmp
pushf
mov
mov
mov
call
lea
inc
inc
sar
and
push
bsr
mov
call
call
call
das
bsf
xchg
das
mov
rcr
bt
neg
adc
mov
call
mov
movb
movb
lea
jmp
pusha
mov
jmp
pusha
movb
jmp
mov
mov
mov
lea
jmp
jmp
push
pushl
popf
mov
pushf
pushl
ret
mov
movb
pushf
pushf
mov
mov
call
pushf
popl
call
movl
movb
lea
jmp
call
and
mov
clc
clc
stc
sub
test
pushf
cmp
add
jmp
pushf
popl
jmp
rol
mov
shr
add
call
movb
pushf
mov
movb
mov
pushl
call
pushf
mov
pushf
mov
mov
mov
call
call
pusha
pusha
mov
push
pushf
push
pushf
mov
push
mov
movb
jmp
mov
jmp
pushf
movw
pushl
mov
jmp
test
xor
clc
cmc
add
pushf
pushl
push
lea
pusha
pushf
rol
pushf
cmp
mov
test
neg
cmc
xor
pushl
sub
jmp
setge
pushf
call
push
pushl
movb
pushf
popl
pushf
mov
mov
call
mov
call
pusha
jmp
pushf
popl
pusha
push
mov
mov
pushf
movb
mov
mov
call
mov
mov
jmp
push
not
jmp
pusha
pushl
inc
jmp
movl
mov
lea
jmp
shl
pushf
sbb
movsbw
mov
bswap
xor
rcl
mov
stc
stc
pushf
not
jmp
mov
jmp
pushf
mov
pushf
pusha
mov
jmp
push
pushl
movl
pushf
movb
mov
mov
lea
jmp
add
movb
call
pushf
mov
pushf
mov
lea
jmp
jmp
movb
pushl
popl
movw
lea
jmp
pop
lea
jg
mov
not
movzbw
movzbw
movsbw
lea
pushf
mov
pusha
mov
pushf
jmp
mov
pusha
mov
jmp
add
mov
push
mov
mov
push
pusha
push
lea
jmp
pushl
cwtl
test
stc
clc
sub
movw
mov
push
lea
jmp
jmp
mov
mov
push
jmp
mov
mov
movsbw
mov
test
test
add
pushf
pushf
mov
pushf
movb
lea
jmp
pushf
popl
push
jmp
pushf
test
sub
bt
clc
shr
call
mov
pushf
mov
pushf
mov
call
bsf
rcl
cwtl
mov
sar
mov
pusha
pusha
add
jmp
pusha
mov
push
pusha
pushf
mov
mov
pushf
jmp
call
mov
rol
pushf
stc
pushf
cmp
neg
cmp
sub
stc
add
call
cmc
sub
test
xor
call
push
pusha
pushl
mov
pushf
pushl
popl
pushf
call
lea
jmp
mov
call
pushl
popl
mov
movl
pushf
mov
movb
lea
jmp
movb
movl
pushf
pushf
lea
jmp
movb
pushf
popl
push
push
jmp
pushf
mov
pushf
jmp
movw
pushf
mov
call
movw
movl
push
pushl
pushf
movb
lea
jmp
pushl
popl
pushf
movb
jmp
cmc
bt
clc
cmc
sub
call
movl
mov
mov
lea
jmp
pushl
mov
mov
mov
call
pushl
call
pushl
mov
mov
call
ror
shrd
setle
mov
clc
jmp
pushf
popl
push
pushf
pushl
popl
push
mov
push
push
lea
jmp
clc
push
movb
add
stc
stc
test
shrd
call
jmp
pusha
call
call
mov
push
movb
pushl
pushl
ret
pushf
push
lea
jne
pusha
push
mov
pushf
lea
jmp
shld
btr
mov
clc
mov
mov
cmp
dec
call
pushf
mov
push
mov
pushf
pushf
jmp
mov
pushf
pusha
jmp
jmp
mov
pushf
pushl
pushl
ret
call
cmc
movb
ror
pushf
pushf
movb
inc
test
pushf
jmp
mov
push
pushl
pushf
pushf
lea
jmp
bt
clc
not
sub
mov
pusha
xor
bt
bt
cmc
pushf
rol
mov
cmp
pushl
jmp
movw
jmp
push
mov
jmp
call
pushf
mov
call
movl
movw
movl
lea
jmp
call
bswap
mov
shl
and
inc
ror
mov
pushf
mov
clc
add
jmp
mov
movb
movl
mov
movb
lea
jmp
mov
movl
push
call
pusha
mov
pushf
pushf
popl
jmp
jmp
sub
call
pushl
popl
movl
jmp
pushf
mov
jmp
call
bt
shl
push
mov
pusha
call
movb
mov
mov
pushl
jmp
movw
mov
jmp
call
mov
call
mov
bt
pushl
popf
push
pushf
pushl
lea
jmp
pushf
mov
pushf
pushf
popl
pusha
pushf
pushl
popl
push
lea
jmp
push
movb
mov
mov
lea
jno
push
call
jmp
dec
pushf
cmp
test
add
call
pushf
pushl
popl
mov
mov
movb
pushf
lea
jmp
push
mov
pusha
call
lea
ja
push
mov
call
pushl
movw
pushl
popl
jmp
pusha
mov
pushf
pushf
popl
pusha
pushf
mov
push
pushf
mov
jmp
mov
pushf
call
cmc
sub
ror
rcl
dec
xor
rcr
sar
mov
call
lea
jmp
mov
jmp
movl
pushf
mov
push
lea
jmp
pushf
pusha
mov
movb
movb
pushf
lea
jmp
mov
pushf
call
movsbw
mov
call
call
mov
pushf
mov
pushf
mov
lea
jmp
pushf
pusha
movb
pushf
popl
call
call
lea
jmp
mov
push
jmp
pusha
pushf
popl
call
movl
movb
movl
mov
mov
lea
jmp
sub
pusha
mov
jmp
jmp
mov
movb
bt
cmp
add
movw
pushf
popl
jmp
pushl
pushl
popl
jmp
call
mov
cmc
call
stc
neg
call
dec
and
and
mov
shl
neg
add
pushf
jmp
call
mov
push
pushf
pushl
jmp
sub
jmp
mov
mov
pushl
popl
jmp
xor
test
call
movl
mov
movb
jmp
movw
pusha
mov
jmp
call
stc
clc
test
xor
pushf
push
xchg
push
pusha
movl
call
mov
jmp
mov
movb
jmp
call
mov
pushl
pushf
mov
pushf
pushl
mov
movb
mov
push
jmp
mov
movb
pushl
movl
pushl
pushf
lea
jmp
pushf
pushf
mov
pushf
call
mov
push
mov
mov
mov
call
jmp
call
neg
rol
ror
rcl
inc
rcl
sbb
not
rol
cmc
rol
add
push
movzbl
jmp
jmp
or
mov
shr
adc
mov
clc
add
jmp
ror
clc
shrd
call
shl
movw
call
jmp
cmp
stc
add
movb
movw
std
bt
pushl
popf
push
pushf
movb
pushf
lea
jmp
aaa
xchg
mov
seto
inc
mov
bt
cmp
pushf
cmc
add
push
movw
mov
pushf
lea
jmp
mov
pushf
pushl
ret
and
call
mov
pushl
call
jmp
push
call
pushf
popl
call
mov
push
sub
call
jmp
mov
call
neg
das
and
aad
mov
bt
bt
sub
cmp
add
push
lea
js
pusha
movb
pushf
popl
pushl
pushl
popl
pushf
lea
jmp
mov
mov
jmp
shr
aad
and
mov
push
push
push
jmp
call
clc
btr
add
call
btr
cld
mov
shl
not
pop
std
movzbw
ror
pop
sar
pop
and
not
std
pop
adc
pusha
mov
std
not
shl
mov
seto
stc
mov
lea
adc
sub
mov
inc
mov
shrd
mov
movw
call
call
movl
movw
mov
mov
movb
lea
jmp
mov
jmp
pushf
push
mov
push
lea
je
push
pushf
mov
pusha
pusha
call
pusha
movb
call
mov
push
mov
mov
pushf
lea
jmp
pushl
popl
push
jmp
call
std
cld
pushl
rep
shl
mov
dec
dec
mov
or
rcr
clc
mov
cld
jmp
pushl
popl
movw
lea
jp
push
movl
push
lea
jmp
pushl
popl
mov
movl
mov
lea
jmp
push
lea
jne
jmp
push
pushf
call
not
mov
call
pusha
pushf
movl
pusha
movw
lea
jmp
call
jmp
movl
mov
pushl
movb
movb
lea
jmp
push
call
jmp
call
jge
movsbw
bswap
not
mov
call
mov
pushl
pushf
mov
push
mov
call
mov
push
push
call
mov
push
mov
pushf
popl
push
call
pushl
popl
push
push
mov
lea
jmp
mov
movsbw
inc
bsf
xor
movzbw
movzbl
mov
mov
clc
mov
or
pusha
jmp
setl
mov
pushf
mov
pusha
lea
jmp
push
mov
push
movb
mov
pushl
push
mov
push
call
push
pushf
pusha
mov
movb
pushf
pushf
popl
jmp
pushf
and
sbb
aaa
mov
clc
push
pushl
sub
mov
call
pushf
bt
shl
jmp
test
stc
sub
call
jmp
mov
jmp
cltd
setp
aad
mov
btc
mov
dec
mov
pusha
stc
pusha
stc
add
cmp
pushl
push
call
jmp
pushf
pushf
mov
pushf
pushf
mov
pushf
mov
jmp
sub
stc
movzbl
push
stc
test
sub
pusha
pushl
jmp
jns
pushf
pushf
pushf
popl
pusha
movb
jmp
pusha
pushf
push
xchg
push
push
movl
jmp
jmp
call
pushf
call
movb
mov
pushf
push
jmp
mov
push
pushf
mov
movw
lea
jmp
jmp
sar
pusha
btc
and
mov
sbb
ror
xor
clc
mov
pusha
bt
lea
jnp
sub
clc
shr
call
call
push
pushf
pushf
popl
pushf
call
clc
xchg
push
mov
mov
bt
sub
mov
lea
jne
bt
stc
pusha
movb
xor
mov
jmp
sar
neg
shl
notl
jbe
dec
btc
lahf
mov
bt
sub
cmc
and
push
pusha
push
pushf
popl
call
inc
mov
movsbw
stc
mov
call
test
cmc
cmp
sub
pushf
call
pushf
call
pusha
pushl
popl
pushf
call
pushf
cmc
sub
cmc
cmp
push
cmc
shl
jmp
movb
mov
push
mov
call
mov
push
mov
push
call
mov
jmp
xadd
aad
seto
bsr
mov
neg
mov
bt
test
stc
bt
sub
cmc
test
call
mov
jmp
push
pushl
mov
jmp
pushf
pushf
popl
call
movb
mov
pushf
pushf
push
lea
jmp
movb
movl
pushf
pushl
mov
lea
jmp
pusha
call
movw
call
pushf
mov
push
pusha
call
pushl
popl
pushl
movb
push
pushf
lea
jmp
pushl
popl
movb
lea
jmp
pusha
push
mov
call
push
call
mov
call
pusha
lea
jne
pusha
cmp
mov
test
push
and
test
test
cmp
call
mov
push
mov
pushf
call
push
stc
add
cmc
test
pushf
sub
test
stc
sub
pushl
call
pushl
movl
mov
push
call
pushf
pushf
movb
jmp
movw
pushl
popl
movw
pushl
lea
jmp
pushf
mov
pusha
mov
push
jmp
pushl
mov
jmp
bswap
bts
setg
movzbl
sub
call
mov
call
inc
call
inc
mov
bswap
ror
btr
btc
mov
rol
rcl
btr
lea
bsr
sub
adc
not
mov
not
add
sbb
mov
xor
shl
movsbw
add
and
pushf
movsbw
mov
bt
add
xor
add
stc
stc
rcl
lea
bsr
jmp
jmp
push
call
mov
lea
jne
lea
xorb
pushf
push
jmp
lea
jne
test
cmc
pushf
cmc
xor
call
movw
mov
jmp
pushf
pushl
popl
push
movl
pushf
lea
jmp
add
not
setno
movzbl
btc
xor
xor
adc
xor
ja
rol
movsbw
xor
movsbw
push
add
bsf
xor
mov
call
pushf
pushf
call
call
movb
pushl
popl
movb
mov
lea
jmp
call
mov
mov
push
lea
jmp
jmp
decl
push
call
jmp
mov
pusha
push
pushf
lea
jmp
pushf
pusha
call
jmp
jmp
pushl
popl
pushl
push
jmp
jmp
push
push
pusha
movb
pushf
popl
push
mov
jmp
setno
lahf
call
pushf
pushl
popl
call
jmp
clc
stc
stc
add
pushf
jmp
mov
mov
movw
mov
pushl
ret
clc
add
pusha
lahf
lea
test
call
jmp
rol
call
pushf
movl
mov
pushf
movb
call
mov
pusha
pushf
jmp
mov
pushf
call
mov
pushf
push
mov
movw
call
jmp
inc
xor
mov
pusha
mov
pusha
pushl
pushf
cmp
not
movb
jmp
mov
jmp
pusha
mov
mov
pushf
jmp
pushl
popl
push
movw
lea
jmp
dec
shl
mov
adc
add
setno
stc
sub
pushf
inc
bsr
mov
test
cmc
shl
movb
cmc
clc
test
shr
jmp
mov
call
jmp
pushf
movb
pushl
popl
call
mov
pushf
jmp
pushf
movl
push
lea
jmp
jmp
mov
pushf
lea
jmp
add
stc
pushf
sub
bt
clc
pushf
stc
sub
movw
push
mov
mov
pushf
lea
jmp
call
mov
mov
jmp
pushf
mov
call
call
pushf
movb
pushl
popl
call
jmp
jmp
stc
mov
jmp
mov
mov
movb
jmp
cmp
not
clc
call
jmp
lea
mov
pushf
pusha
pushf
push
lea
jmp
pushf
mov
pushl
call
call
not
mov
clc
sub
push
stc
pusha
jmp
shr
mov
push
pusha
pusha
sub
push
jmp
mov
pushf
not
rol
movsbw
stc
sar
xor
jmp
movb
jmp
jmp
pusha
jmp
cmc
pushf
cmp
add
pusha
pushf
jmp
jmp
call
jmp
call
pusha
push
mov
pushl
mov
movb
push
mov
jmp
push
mov
mov
pushf
lea
jmp
not
pop
push
movb
pusha
pushf
lea
jmp
pusha
or
pushf
test
jmp
push
pushl
popl
pushl
lea
jmp
mov
jmp
mov
bt
rol
stc
movzbl
movzbw
bswap
add
rcl
clc
stc
xor
pushf
inc
sar
xor
lea
sub
jl
rol
setb
movzbl
cmp
push
stc
mov
test
clc
or
jmp
mul
call
call
mov
jmp
mov
push
call
mov
pushf
push
mov
pushf
call
call
movl
mov
pushf
movb
mov
mov
jmp
mov
pushf
mov
pushf
pusha
lea
jmp
pushl
popl
push
lea
jmp
lea
jbe
pushf
pusha
mov
mov
push
push
pushf
popl
pushf
call
movw
mov
push
pushl
popl
jmp
jmp
pushf
pushf
mov
call
sub
test
cmc
cmp
xor
cmp
test
pushl
cmp
mov
cmp
call
call
pusha
movw
mov
pushf
mov
lea
jmp
jmp
call
jmp
mov
call
pushf
pushf
mov
pusha
pushf
mov
movw
call
jmp
movl
movb
mov
mov
movb
lea
jmp
pusha
pushl
popl
push
lea
jmp
pushf
jmp
jmp
push
jmp
jmp
jmp
pushf
mov
pushf
pushf
call
pusha
jmp
pushf
call
jmp
mov
pushf
mov
pushf
mov
call
pushl
popl
movl
pushf
pushf
pusha
lea
jmp
sbb
rol
sub
sar
mov
xor
test
mov
jmp
btr
clc
mov
test
jmp
jmp
pushf
movl
pushl
mov
push
mov
mov
movb
movw
jmp
pusha
pushf
pushf
mov
pushl
push
push
lea
jmp
jmp
or
rcl
shr
movzbl
clc
xor
clc
pusha
sub
stc
cmc
jmp
mov
mov
call
mov
mov
lea
jmp
pusha
jmp
movb
mov
movb
pushf
pushf
popl
pusha
call
setno
mov
mov
call
xor
pusha
sub
rcr
sub
call
