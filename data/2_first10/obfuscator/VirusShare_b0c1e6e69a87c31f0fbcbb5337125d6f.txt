outsb
call
mov
mov
adc
push
push
add
pushl
shll
je
sub
push
pop
mov
mov
pop
push
jb
or
push
and
repnz
or
repnz
mov
or
pop
loope
in
push
mov
inc
loope
pop
push
push
push
or
jp
add
mov
sti
repnz
pop
pop
or
pop
pop
pop
push
push
jb
jnp
push
inc
pop
mov
inc
loope
and
mov
in
insl
imull
or
and
or
push
inc
jp
push
jp
divb
push
inc
mov
jbe
push
mov
push
pop
or
sub
lods
mov
jb
jb
dec
popa
xor
pop
push
fcmovnu
fidivl
lcall
jbe
jp
add
mov
or
insl
pop
imul
lods
mov
jge
outsb
mov
and
bnd
pop
push
jae
fcmovnbe
xor
jp
mov
loopne
mov
imul
push
cmp
jp
mov
gs
or
xor
xchg
mov
shl
jno
pop
jp
lcall
and
outsb
roll
fistpl
mov
adc
sbb
pop
psllw
es
pop
imul
and
inc
faddl
sbb
inc
sbbb
das
or
mov
pop
or
jne
pop
jb
inc
mov
loopne
lods
jbe
pop
push
push
movl
or
xor
or
push
jb
add
addr16
insl
add
insl
pop
not
popa
jae
imul
pop
sub
or
or
int
out
jp
mov
or
adc
sahf
aas
push
or
mov
and
mov
mov
jle
push
xor
mov
lcall
add
imul
shl
or
inc
out
pop
repnz
lods
mov
cwtl
cmpsb
mov
pop
mov
dec
inc
push
pop
aaa
neg
clc
decl
xchg
fs
mov
in
xchg
ret
out
std
mov
sbb
ret
pop
or
jne
add
inc
test
inc
jmp
imul
inc
pop
in
pushf
ret
loopne
je
inc
xlat
cmp
lahf
or
fwait
mov
daa
pop
push
cltd
mov
pusha
cwtl
sub
push
mov
push
pop
push
pop
pop
scas
insl
lods
cmp
cmp
sbb
ja
hlt
sbb
into
mov
pop
jns
pop
daa
insl
lods
loopne
aad
add
pop
xor
jns
arpl
pushf
ret
push
outsb
scas
in
adc
push
push
pushf
sub
lds
rclb
fisubrl
incl
imul
or
add
out
out
pop
test
adc
push
jae
mov
or
mov
dec
xor
xor
xchg
mov
daa
push
sbb
int
mov
ret
andb
pop
pop
sub
push
insl
mov
dec
cmpsb
inc
mov
xor
ret
shr
jle
pushf
test
fcmovbe
pop
das
rolb
sub
xor
sbb
addr16
imul
xor
sbb
or
pop
jb
subb
adc
xor
movsb
sub
or
inc
add
ss
jp
js
test
sub
add
push
movl
pop
and
mov
fwait
jno
cmp
bnd
inc
sub
mov
adc
lret
jbe
cmp
push
mov
push
inc
push
push
lfs
decb
sub
jb
lods
mov
pop
push
imul
inc
rcl
or
imul
jle
ljmp
sub
out
push
sbb
pushl
add
data16
popf
add
inc
cltd
out
lds
lock
in
add
mov
stc
mov
int
sti
mov
sub
adc
repnz
fs
aas
mov
push
push
jg
pushl
lea
push
push
call
ret
popf
movl
mov
pop
cmp
and
lods
cmp
dec
xchg
test
cmpsl
mov
mov
xorb
stos
mov
int3
mov
jbe
add
mov
cmp
scas
cmp
pop
add
shlb
faddl
adc
mov
imul
sbb
imul
mov
push
mov
popf
mov
stos
imul
pop
or
mov
pop
loope
scas
sbb
rcll
xor
cltd
xchg
pop
inc
shll
outsb
nop
lods
push
jge
out
add
cmc
shrl
outsl
sub
push
pushf
add
int
mov
loopne
or
loope
sub
or
pop
sbb
mov
sarl
jb
insb
and
sub
sbb
fdivs
mov
shrb
mov
sbb
addb
or
cmpsb
and
xor
xor
outsl
sahf
mov
pop
xor
or
push
lods
cmp
push
mov
int
pop
or
push
xor
ss
push
ret
push
xchg
cwtl
fstpl
mov
pusha
pop
adc
pusha
xor
jg
xchg
mov
jge
pop
xchg
inc
dec
sbb
push
cmp
data16
and
xor
or
push
stos
imul
pop
scas
cltd
pop
cmpsl
sbb
xchg
and
dec
jo
dec
fwait
cmp
or
xor
daa
cmp
push
mov
fimuls
out
or
ja
sbb
aas
bound
loopne
mov
call
cs
sar
cmp
and
push
push
sti
pop
and
dec
pop
sti
ljmp
mov
into
push
in
xor
pop
je
mov
or
aam
dec
test
aaa
push
sub
mov
xchg
imul
sti
in
push
insb
sub
mov
repz
and
out
popf
xor
mov
subl
call
and
push
push
das
bound
push
xlat
sbbl
pop
cs
or
in
jmp
lods
cltd
sbb
mov
adc
adc
insl
push
imul
push
setb
lahf
sbb
lret
shl
jo
dec
fmull
clc
dec
scas
adc
test
sub
xchg
pop
sub
xor
jae
pop
data16
pop
lea
in
lods
sbb
jb
pop
jae
mov
int
imul
insl
xor
sti
mov
push
imul
inc
xor
dec
xlat
dec
repnz
or
inc
cmp
sub
cmc
mov
fiaddl
icebp
sub
adc
add
xor
lods
or
popa
inc
sub
push
or
lds
xchg
mov
adc
inc
push
xor
xlat
movsb
or
or
stc
aam
int
sub
adc
repnz
mov
pop
scas
repnz
jb
cmpsb
out
es
aaa
mov
and
jo
scas
sub
addr16
int
or
xor
ret
repnz
mov
lods
push
and
rorl
mov
rclb
loope
inc
out
pop
fwait
xor
mov
cwtl
lret
mov
les
cmp
cmp
jbe
mov
and
xchg
and
sbb
pop
push
push
movsl
scas
out
xor
xor
jnp
jo
jo
push
sub
mov
shll
mov
add
jb
mov
add
rcl
jae
sti
push
and
push
sub
jae
cs
ret
int
or
xchg
imul
pop
inc
clc
inc
xor
mov
stos
xchg
ja
cwtl
jo
xchg
adc
lret
sbb
cmp
sbb
add
push
in
out
jbe
xchg
or
ret
repnz
loope
pop
pop
cmp
arpl
je
pop
cmp
dec
mov
push
outsb
rcrl
jns
movsl
repnz
movsl
inc
imul
mov
mov
fcmovnu
repnz
fmulp
push
mov
cmp
sbb
sbb
cmp
pop
lods
rorb
or
mov
jb
add
adc
xchg
das
push
cltd
or
mov
or
push
dec
popf
mov
lea
arpl
aam
imul
inc
xor
pop
and
test
cltd
jp
pop
scas
int
inc
or
xorb
loope
xor
call
pop
push
pop
scas
out
in
and
cmp
xor
add
xlat
or
mov
out
data16
or
in
mov
mov
movsb
cwtl
adc
jp
inc
int
daa
int
ret
sar
push
xor
pushw
pop
int3
gs
mov
pushl
xorl
xchg
int
aaa
int
xchg
xchg
call
jae
pop
sti
push
rorl
js
xchg
rorl
or
or
or
lcall
xchg
test
adc
sbb
aam
push
inc
push
pop
repnz
add
in
mov
xlat
jl
add
js
es
xchg
push
xchg
stos
pop
repz
jl
mov
ret
jb
pop
push
xor
loope
sbb
rolb
pushf
mov
xchg
push
shll
lods
add
or
inc
dec
rcl
or
xchg
jecxz
push
std
adc
out
xor
cs
imul
pop
mov
aad
mov
ret
ret
jo
inc
rol
push
addr16
sbb
cmp
adc
sbb
and
ljmp
movsb
or
dec
mov
push
pop
push
push
xor
clc
shrb
inc
xor
jb
rcrb
sub
mov
addr16
jmp
adc
call
xor
mov
xor
jo
cmp
jne
push
lret
inc
mov
aam
or
test
int
sbb
xchg
bound
push
sbb
inc
mov
push
jle
push
pop
rolb
dec
int3
jle
mov
call
xor
ret
xorl
add
js
lcall
testl
cmpsb
or
pop
xorl
xor
cmp
mov
pusha
add
stos
xor
mov
mov
dec
mov
outsl
pop
dec
push
push
testl
std
outsl
in
sbb
enter
push
or
mov
sbb
inc
push
outsb
jnp
out
or
sub
add
mov
add
mov
and
cli
mov
cmp
pop
xchg
dec
cltd
cmp
popa
and
fwait
push
or
mov
insb
into
or
dec
cmp
mov
sarb
icebp
popa
imul
jp
pop
push
daa
mov
lret
and
or
xchg
lret
rorb
stos
mov
xor
loope
cwtl
or
push
xchg
cwtl
rcl
aad
pop
jmp
add
pusha
push
mov
inc
sbb
pop
lods
and
pushf
sub
and
mov
mov
push
jmp
jb
xchg
shll
ljmp
loopew
push
int
pop
icebp
adc
aaa
cmp
dec
or
aad
adc
or
pop
test
inc
aad
inc
xor
sub
popa
jae
wbinvd
xor
dec
es
aad
inc
inc
xchg
sub
das
ss
pop
jne
loope
in
arpl
call
mov
das
mov
pop
pop
test
loopne
rcrb
rcll
in
xchg
or
mov
sbb
adc
sub
add
cmpb
or
sbb
cltd
outsl
fists
jae
pushf
sbbl
js
push
jg
lret
aam
jb
adc
cmp
jbe
push
adc
xchg
into
in
jno
inc
mov
add
mov
sbb
sbb
lods
sti
sbb
dec
add
test
cs
pop
push
or
out
in
in
shlb
push
mov
ljmp
mov
mov
xchg
mov
cmp
adc
data16
pop
shll
mov
test
xor
data16
and
mov
dec
fcoml
imul
cmp
lods
adc
fmuls
sbb
gs
popa
xchg
xchg
sti
sub
xor
hlt
and
cmp
aaa
or
cltd
mov
enter
lods
xchg
stos
or
inc
ret
jne
aas
sbb
push
lret
mov
lds
orb
lcall
mov
cmp
add
mov
push
sbb
or
orl
push
scas
jne
pop
sbb
xor
cltd
jb
icebp
mov
or
xchg
mov
or
pushf
mov
popa
pop
add
mov
add
jo
lcall
scas
inc
sahf
cwtl
imulb
in
xchg
xor
xor
aad
enter
adc
cmpsl
pusha
mov
mov
mov
adc
mov
jnp
or
lcall
dec
icebp
jo
idivb
cmp
add
pop
and
mov
xlat
hlt
jo
sti
or
stos
push
inc
jns
cmp
or
jae
add
pop
inc
inc
xor
dec
clc
dec
aad
cmp
jae
pop
pop
insl
inc
xor
mov
push
sbb
cmc
inc
fnsave
loope
mov
mov
sbb
loopne
sbb
mov
sahf
push
ret
cltd
mov
push
test
ljmp
rclb
and
cmp
push
lahf
dec
xchg
mov
imul
jns
xor
dec
pushf
mov
xor
popa
xor
xchg
xor
adc
mov
imul
and
xor
pushf
mov
fsubrl
xchg
test
and
pop
xchg
xor
notl
sub
and
sbb
push
jge
xchg
and
adc
and
int
jge
mov
xchg
mov
es
cmp
jo
xlat
out
fimull
xchg
or
out
or
jp
xor
rol
and
lcall
cmpsb
jbe
inc
xor
ret
sub
adc
sbb
cmpsl
into
xchg
daa
xor
push
push
xchg
or
test
sbb
and
loope
adc
insb
cmpsl
pop
int
push
push
mov
mov
cmpsb
inc
nop
xchg
push
mov
mov
jns
and
in
xchg
ret
cltd
and
imull
inc
movsl
cmpsl
sub
pop
clc
push
mov
ss
inc
int
push
gs
push
sbb
inc
xor
cmp
lock
int3
ficompl
cwtl
cs
jp
xor
adc
negb
adc
or
cmp
pop
jne
outsl
and
sub
andb
pop
bnd
pusha
jo
xchg
mov
add
adc
sahf
dec
int
stos
jecxz
out
adc
enter
fisttps
pop
sub
xor
push
mov
push
pop
fstps
sti
jb
scas
inc
xchg
sti
daa
jle
mov
push
pushl
test
lea
push
or
in
jle
push
add
xlat
or
jne
ret
adc
sahf
and
scas
ret
call
jo
sbb
xlat
jge
xchg
jp
inc
std
mov
xchg
popa
mov
lcallw
sub
sbb
xor
pop
cltd
dec
mov
mov
add
jp
dec
inc
out
orb
mov
mov
xor
rcll
lds
gs
dec
jae
test
mov
int
push
aaa
add
xor
cwtl
xchg
in
and
xorb
mov
ret
jnp
leave
cmpsb
data16
std
cltd
js
push
nop
sbb
rcll
jle
ret
or
les
in
daa
fstps
push
lods
lea
sbb
xchg
out
inc
roll
xchg
or
or
pushf
or
pushf
mov
je
out
ljmp
xor
pop
test
push
or
mov
jnp
das
insb
xor
movsl
pusha
sbb
lcall
mov
and
cmp
sbb
jp
push
mov
call
push
into
add
add
stos
or
call
inc
xor
ror
xor
pop
jb
xor
sub
pop
jp
mov
inc
daa
stc
scas
jne
loopne
sbb
out
into
or
test
sbb
pushf
test
xor
xor
in
sub
cltd
pop
mov
lock
jmp
xchg
pop
cs
push
scas
push
inc
leave
mov
call
dec
mov
dec
or
fs
fldt
push
pushf
rorl
aad
inc
and
add
leave
mov
and
lea
inc
mov
bound
sahf
jo
dec
js
loope
in
fmull
pop
loope
call
jmp
mov
xchg
cmp
cmpsl
inc
sbb
mov
jl
inc
sbb
xor
aad
sti
push
or
jno
jg
push
imul
idivb
sub
pop
jmp
cmp
pop
jb
hlt
stos
sbb
xor
dec
cltd
lahf
add
movsl
jo
aam
sub
adc
mov
lods
sub
repnz
adc
mov
insl
inc
popa
jg
daa
sbb
inc
dec
cmpl
adc
js
cmp
test
or
out
cmp
fiaddl
inc
scas
stos
mov
negb
ret
dec
dec
arpl
xor
jecxz
or
leave
rorl
mov
lret
xor
cmp
ljmp
mov
sbb
xchg
cmpsb
pop
mov
loopne
xor
push
push
pop
pop
push
or
mov
push
sbb
inc
cli
inc
sub
xchg
addb
lods
inc
jb
pop
xchg
shll
mov
sbbl
push
cmp
push
scas
popa
cmp
jge
or
push
mov
dec
or
mov
mov
adc
cmpsb
add
in
sub
sub
imul
push
movsl
mov
js
or
stc
shll
push
mov
xchg
inc
cmp
adc
adc
pop
push
paddb
sub
jo
clc
fs
popf
xorl
daa
repnz
push
lods
jo
loope
jo
ret
loopne
pop
dec
push
std
xchg
or
push
push
adc
dec
repz
ret
push
addb
inc
xor
or
scas
bound
xor
or
imul
pop
cltd
pop
xor
test
or
leave
jmp
jnp
mov
or
or
push
add
mov
sub
mov
jbe
in
loopne
mov
icebp
cwtl
xor
daa
enter
and
cmp
or
call
add
mov
test
add
add
out
rcll
int
scas
rclb
addr16
scas
push
imul
rcrl
xor
mov
hlt
shll
addb
test
stos
or
dec
je
inc
fadds
push
pop
xchg
add
fsubl
sbb
pop
add
mov
and
loopne
inc
xchg
dec
jbe
sub
jp
add
addl
sbb
in
push
mov
inc
push
push
mov
pop
lods
jae
mov
enter
push
subb
clc
aaa
pusha
dec
enter
or
inc
adc
lock
adc
add
mov
repnz
or
sub
inc
fiaddl
lcall
movb
adc
mov
and
xchg
shl
or
aaa
adc
adc
sub
mov
hlt
or
push
icebp
test
clc
sti
clc
lea
push
push
jnp
std
cmp
lock
mov
push
lea
cmp
in
fcoml
add
push
xor
sub
je
jg
add
dec
or
mov
jp
push
jo
sub
dec
shll
ss
sbb
mov
pop
jbe
cmp
orb
stos
jmp
sub
adc
test
pushf
push
aam
jno
test
test
lea
aas
jno
aam
or
js
aam
dec
push
jae
stos
out
pop
jecxz
adc
gs
call
cmp
sbb
lea
xor
imul
add
ret
inc
or
jb
jne
dec
jo
mov
dec
int
pop
push
test
pushf
mov
and
jp
inc
add
push
or
or
data16
xchg
jns
pop
scas
xchg
lret
rorb
je
and
or
and
rolb
adc
imul
fs
movsb
jo
and
adc
test
nop
sarb
imul
repnz
xor
movsl
jae
lcall
ret
data16
dec
ficoms
xor
nop
sbbl
fsts
sub
pop
sbb
test
cmp
arpl
or
out
pop
es
rorl
loopne
orb
or
xor
sub
int3
test
push
mov
loope
push
and
mov
test
faddl
jo
enter
sbb
adc
fucom
scas
scas
cmp
jg
push
pop
loope
fmul
mov
loopne
mov
std
repz
lock
inc
mov
push
ds
scas
push
test
push
or
std
xor
mov
sub
cmp
inc
xor
inc
loopne
jb
bound
inc
inc
ret
loope
lret
sub
dec
mov
jmp
jg
insb
xchg
and
int
ret
enter
mov
adc
mov
pop
mov
inc
or
in
aaa
inc
jo
jae
cwtl
push
mov
add
push
inc
jnp
jb
int
mov
enter
xor
daa
sub
mov
adc
or
xchg
sarb
ds
and
fcoms
aad
lea
jp
popf
or
insb
aam
xchg
jnp
adc
xlat
sub
or
and
pop
sbb
jne
dec
push
out
data16
pop
imul
movsb
lods
sbb
aam
sbb
iret
inc
ja
es
jecxz
adc
add
pop
pop
in
imul
jp
into
xchg
sub
pop
lods
push
sub
ret
jae
sbb
test
and
add
pop
jp
jo
into
pop
test
inc
jae
cs
or
cmp
push
inc
loopne
mov
and
lds
push
jo
lods
in
loopne
xor
sub
shl
mov
dec
cmp
or
mov
data16
or
aam
dec
push
or
mov
addl
xchg
xor
loop
test
dec
pusha
xchg
jb,pn
sub
int3
aam
sbb
xchg
imul
icebp
xlat
add
shlb
sbb
ret
cmpsl
push
mov
loopne
shlb
sbb
or
mov
pop
lods
sbb
dec
push
je
negl
clc
sbb
mov
sub
mov
add
cmpsl
cmp
or
xchg
sub
arpl
outsb
add
jns
mov
call
dec
adc
inc
jo
push
cld
mov
mov
fidivl
jne
xchg
out
or
into
push
sub
fisttpl
or
sbb
or
sti
xchg
mov
sarl
lret
cmc
mov
movq
push
sbb
lock
ret
cwtl
xor
push
ljmp
pop
scas
xor
cmp
jo
add
mov
inc
jae
cmpsb
daa
and
jb
enter
jae
fisttpl
pop
sbb
ja
push
mov
and
inc
xor
adc
test
int
xchg
xchg
fistps
sbb
mov
adc
inc
into
add
test
call
push
repnz
cmp
inc
aam
or
pop
lcall
mov
mov
push
pop
push
push
repnz
and
shlb
sbb
adc
test
mov
dec
gs
adc
shrb
add
cmp
push
sbb
sub
jns
adc
insl
orl
adc
xchg
fcoml
sbb
inc
pusha
push
test
dec
sub
jmp
jne
push
dec
or
fiaddl
das
imul
loope
cmp
adc
sarb
ss
xlat
adc
les
test
push
mov
pop
popf
lcall
or
xchg
mov
pop
scas
andb
mov
mov
sbb
or
cmp
loopne
inc
xor
mov
xchg
dec
arpl
cwtl
out
pushf
hlt
mov
xor
inc
cld
pop
loope
loopne
test
inc
jb
jb
xor
inc
sbb
sub
or
add
or
mov
push
int
je
scas
pop
mov
cmp
push
push
or
stos
jae
and
cmp
cs
aad
outsl
fisubrs
pop
subl
xlat
jp
loope
inc
sub
lods
add
adc
loope
jmp
xchg
in
or
inc
leave
push
test
xor
push
in
hlt
fnstcw
pop
jno
cmp
cmp
sbb
push
jge
push
lods
add
pop
sub
mov
lods
mov
fs
mov
out
jo
pcmpeqd
xchg
xor
add
adcl
push
out
stos
inc
in
xchg
dec
arpl
jmp
inc
xor
and
dec
aam
or
rclb
dec
push
cmp
or
jl
mov
test
les
sarb
push
or
sarl
jo
insb
cmc
sbb
cmp
mov
xor
sub
sbb
orb
add
pop
insb
xchg
clc
popf
jo
or
cmpsl
setp
in
clc
mov
add
inc
imul
jecxz
jns
jo
and
add
mov
cmpsl
push
mov
mov
mov
or
pushf
shrb
rcl
rcrb
xor
or
call
jo
jle
push
in
inc
jecxz
jb
add
cmpsb
pop
out
in
icebp
in
add
jo
mov
xchg
push
mov
dec
lods
push
xchg
incb
das
inc
mov
mov
push
dec
lods
mov
push
push
lea
sar
sbbb
fdivp
adc
sbb
inc
and
xchg
mov
test
sub
mov
xor
mov
or
cltd
fisubl
data16
negb
cmpl
or
xor
fs
mov
xlat
inc
xor
pop
pop
dec
push
mov
mov
xchg
lret
lods
rorb
adc
data16
enter
fists
pusha
pop
push
roll
sub
lcall
add
enter
sub
xlat
sub
or
fistpl
fcomps
in
das
mov
mov
stos
or
out
push
sbb
subb
mov
pop
ror
popf
mov
cwtl
insl
nop
pushf
xor
call
or
push
in
aam
in
mov
push
xchg
inc
add
and
mov
pusha
push
lcall
scas
aas
loopne
orl
and
mov
jb
and
add
mov
outsb
mov
push
inc
adc
xor
ffreep
push
popa
stos
cltd
fdivl
sbb
loopne
mov
imul
push
xchg
mov
or
in
adc
aad
xchg
dec
insl
cs
xorl
iret
out
or
fsts
xchg
movl
or
loopne
test
lret
sbb
mov
mov
pusha
mov
repnz
fcom
lcall
pop
adc
xlat
loope
js
add
and
in
xchg
stos
and
popf
rcl
inc
mov
mov
or
push
or
add
sbb
ljmp
push
and
sbb
add
hlt
test
sub
aaa
push
cmc
jnp
xor
hlt
repnz
cmpsl
jo
or
push
dec
xchg
test
and
mov
sub
and
pop
and
push
call
inc
cs
mov
xor
insb
sbb
mov
jb
mov
dec
lods
inc
mov
jecxz
subb
inc
dec
int
xor
into
rcrl
sbb
xor
jo
push
mov
xor
stos
adc
shr
dec
inc
jmp
pusha
addb
jb
push
jo
lcall
jo
xor
test
loope
mov
pushf
in
rcll
rcrb
push
inc
in
inc
test
xor
jo
pop
mov
push
loop
sub
pop
cmp
xlat
pop
or
xor
cmp
push
data16
pop
mov
gs
ljmp
out
test
push
movsb
pushf
test
sbb
sub
dec
jb
sahf
cmc
or
lret
out
cmp
sub
jmp
mov
jae
test
subb
sbbl
ds
jge
add
pop
jle
mov
sub
lret
sbb
leave
and
mov
xchg
jge
jae
stos
push
cmp
mov
mov
lds
mov
and
jne
loope
adc
or
addl
xchg
ret
loopne
outsb
test
in
in
lret
xor
mov
fisubs
vandnpd
cmp
xchg
pop
inc
lock
shrb
mov
data16
or
jae
cmp
push
jge
push
sub
cmpl
mov
mov
xor
mov
sbb
loope
lret
sti
loope
xlat
xchg
jae
and
mov
mov
fsubrp
loopne
push
mov
pushf
imul
jecxz
es
xchg
cli
insl
sub
push
leave
jb
negb
push
hlt
rcrl
dec
clc
push
xchg
sbb
cmp
pop
xor
adc
mov
add
loope
cltd
lcall
in
add
xchg
roll
adc
add
mov
enter
add
pop
cltd
pop
xchg
shll
mov
jbe
popa
push
xchg
roll
and
call
insl
cmp
push
pop
in
push
dec
lahf
fs
jae
jmp
sahf
cmc
inc
jo
fiadds
jp
jl
mov
push
test
lret
shl
pop
aad
lods
cli
mov
mov
rclb
fdivrl
or
iret
mov
lods
sub
push
shll
ljmp
fildll
or
in
push
push
mov
and
movsb
addr16
push
ret
mov
push
xor
orb
nop
sbb
xchg
lahf
and
push
jb
out
pop
mov
push
jns
jb
add
push
pop
add
dec
jmp
decl
in
and
push
ret
ds
and
in
popf
adc
sub
add
xor
cltd
sbb
push
jp
mov
pop
aaa
mov
stos
cltd
xor
xor
xchg
or
push
adc
jo
mov
jp
jb
lods
js
notb
test
or
jnp
jbe
xchg
pusha
push
outsb
inc
mov
je
or
repnz
fimull
dec
sub
dec
sbb
pop
test
loope
arpl
cmp
or
push
or
push
cmp
or
in
dec
cmp
daa
mov
movsl
ss
movsl
sub
inc
or
rorb
push
or
and
pusha
and
push
mov
push
xchg
scas
out
cwtl
dec
inc
in
xor
xor
inc
push
mov
lret
add
js
ljmp
and
and
cwtl
jb
lret
sub
in
push
fwait
cwtl
dec
loope
cwtl
mov
pop
inc
push
es
cmpsb
test
inc
daa
int3
mov
pusha
test
xchg
ja,pt
cs
mov
stc
shll
andb
movsb
data16
jne
mov
shrl
or
push
push
femms
sbb
cmp
push
add
int3
out
loope
or
in
loopne
inc
movsl
pop
jae
repz
sub
inc
dec
push
into
aad
cmc
mov
inc
mov
add
add
nop
imul
in
call
pusha
mov
cmp
aas
xchg
into
jmp
xlat
sub
cmp
jbe
mov
adc
dec
or
mov
sub
push
push
jbe
aaa
in
dec
push
sub
sbb
xor
push
ficoml
or
cmp
mov
push
add
mov
jo
jnp
cmpsl
test
adc
in
xchg
loope
pusha
jo
mov
mov
popa
call
add
sbb
inc
je
push
daa
ret
push
xchg
enter
mov
es
xorl
push
cltd
dec
adc
push
or
aas
test
mov
loop
push
sbb
aam
push
and
int3
dec
pushw
cmpsb
xor
push
aas
xor
popa
mov
sbb
aas
rol
es
and
jae
pop
push
loopne
cmp
push
inc
xor
xor
fs
xor
in
pop
arpl
add
push
aaa
mov
popa
ljmp
push
push
imul
leave
xorl
lcall
in
dec
cmpsb
pop
mov
lds
or
inc
dec
pop
fisubrl
add
adc
fnstenv
cmpsb
dec
pop
dec
mov
xchg
jmp
or
mov
xchg
ret
sbb
sbb
aas
jp
loop
fcomps
inc
xchg
push
and
cmp
push
mov
arpl
pop
aaa
push
int
sub
stc
sbb
scas
fcoml
pop
cmp
imul
jmp
das
ret
inc
mov
into
push
and
xor
fisttps
jno
rclb
sbb
test
xor
fs
lods
jg
dec
sahf
dec
sti
push
mov
addb
out
nop
out
enter
xor
add
sub
stos
add
rcl
mov
push
loop
xchg
pop
addr16
repnz
subl
push
cltd
mov
lcall
in
mov
das
sbb
sub
sub
jmp
push
mov
pop
loope
cmp
mov
out
jo
add
out
inc
in
push
and
outsl
adc
or
pop
int
loope
rorb
or
sub
ss
loope
or
push
and
inc
ret
lock
push
inc
xorl
or
xor
mov
pop
loopne
jo
xchg
lods
out
mov
lea
push
dec
sub
pop
inc
jae
test
push
cmp
mov
loopne
mov
sbb
adc
or
ret
xchg
stc
call
pop
enter
cmp
je
xor
push
loope
call
scas
mov
in
test
in
adc
loopne
sbb
xor
cmpsb
pop
repz
sbb
lcall
sbb
dec
or
xor
sarb
and
cltd
sub
mov
jnp
mov
pop
es
mov
push
sbbb
push
xchg
push
jp
mov
pop
jnp
sub
jbe
add
or
jae
leave
shll
out
loope
test
enter
gs
sbbb
out
xchg
cmp
mov
and
inc
insl
and
imul
dec
mov
add
mov
loopne
mov
mov
mov
push
out
leave
adc
fdivrp
adc
mov
ret
enter
outsl
scas
xchg
nop
leave
jo
adc
or
pop
loope
mov
into
add
roll
inc
or
imul
push
cmp
xor
or
adc
rorl
cld
dec
jp
jmp
push
adc
add
div
mov
cmp
push
sub
pop
stc
divb
and
ljmp
inc
push
pop
inc
cmp
in
sbb
mov
enter
dec
add
xlat
sub
push
cli
das
pop
lcall
mov
pop
pop
repnz
addr16
or
xlat
dec
je
xor
sarb
into
in
in
mov
mul
ret
scas
imul
add
rcrb
dec
xor
shrb
arpl
ror
xchg
in
jb
andb
push
sub
ss
es
icebp
cmpsb
mov
enter
xchg
rcrl
mov
or
fldl
ja
pop
lock
repnz
out
mov
call
mov
mov
fisttpl
ja
test
dec
popa
test
mov
jo
mov
popa
shll
xchg
or
mov
frstor
scas
mov
cmp
sti
cmp
popf
fisttps
push
mull
lret
xchg
mov
ljmp
adc
sub
rorl
ret
mov
add
clc
shr
jbe
in
in
push
add
push
add
call
stos
lea
ret
add
inc
xchg
add
es
and
jp
test
sub
fs
imul
or
adc
xchg
ret
cmp
add
int
or
fstpt
pop
aas
pop
clc
shl
loopne
stos
or
adc
lods
out
out
cmp
sbb
sbb
aas
add
ret
inc
dec
cmp
in
inc
or
add
lret
xchg
test
testb
push
sahf
xchg
or
sbb
xor
out
sbb
test
adc
pop
call
adc
jge
stos
add
push
pop
cmp
dec
push
dec
cltd
in
pop
mov
out
mov
outsb
inc
push
sbb
xor
push
pop
pushf
add
add
mov
push
cmp
dec
sub
test
push
sub
loopne
or
icebp
or
sbb
and
test
and
jp
or
cmp
dec
or
lret
cmp
sub
mov
movsb
push
das
jp
pop
push
sbb
jp
test
loop
jno
jae
add
or
add
call
cltd
out
aam
leave
gs
movsl
add
sub
xor
jp
mov
cmpsb
cmpsb
ret
inc
out
lock
lret
aad
xchg
dec
push
push
movsl
mov
rclb
in
sbb
push
rcl
scas
jge
add
pop
xlat
in
int
mov
loopne
push
dec
bound
cmovle
add
push
sub
rolb
or
lea
xchg
bound
or
mov
rolb
mov
mov
test
cltd
pop
push
xorb
ja
hlt
mov
mov
xor
or
pop
in
ljmp
pop
mov
pop
icebp
ljmp
push
lock
dec
jecxz
push
xor
jmp
in
cmp
pop
es
sub
adc
jle
adc
dec
daa
xchg
cmp
mov
inc
xor
add
add
shlb
xor
pop
jp
push
int
int
dec
fsubrs
mov
and
and
pop
sub
subl
sahf
mov
push
xor
sbb
js
push
shlb
or
lock
cwtl
and
adc
js
jbe
mov
cmp
or
inc
push
pop
sub
sub
xor
and
add
movsl
imul
cltd
lret
adc
push
dec
data16
rclb
mov
das
out
flds
insb
sbb
or
inc
stos
cmp
cltd
sub
fildll
add
mov
movsl
sub
mov
cmp
or
jae
out
mov
sarb
mov
shlb
cmp
pop
js
sarb
rolb
test
xchg
fs
testb
repz
daa
cmp
pop
cmp
push
aad
into
push
pop
or
loope
sbb
lcall
dec
js
adc
cwtl
dec
cmpsb
dec
jle
std
push
inc
xor
or
rcrl
aam
jp
mov
ljmp
mov
add
xor
inc
mov
pop
or
push
xor
das
inc
test
ljmp
jb
pop
fcmovnb
gs
sbb
std
arpl
mov
cmc
pop
es
fsubl
inc
imul
dec
mov
mov
sbb
movl
sbb
les
je
add
dec
rolb
mov
jb
mov
bswap
aam
dec
inc
mov
inc
ja
xchg
stos
jo
adcb
movsb
loope
inc
mov
jnp
sbb
pusha
xchg
add
add
loope
xchg
ret
loope
xchg
mov
push
fdivl
lret
lcall
in
in
mov
aad
mov
iret
nop
dec
es
or
or
movsl
loope
cwtl
push
xchg
push
ljmp
orb
xchg
ljmp
jb
insb
aaa
rorb
cwtl
shlb
stos
mov
insb
cmpsl
push
lret
mov
movl
push
fs
sub
call
lea
mov
push
test
push
mov
int
pushf
mov
imul
sub
lea
and
repnz
lahf
xor
mov
popa
and
mov
filds
xchg
test
iret
xchg
out
test
sti
jmp
push
int
jl
and
pop
aad
scas
push
adc
stos
mov
aas
pop
or
scas
mov
push
sbb
cmpsl
cmc
jl
cmp
mov
xchg
push
add
or
xor
in
push
dec
ds
xchg
push
rclb
push
mov
pop
pop
jl
or
test
mov
loope
jno
lret
rcll
idivl
cmp
sbb
push
inc
mov
add
mov
out
sbb
mov
inc
nop
xorl
and
mov
cmc
xchg
mov
pushf
xor
int
das
out
cmp
daa
dec
mov
cmpsb
mov
dec
xchg
adc
xor
rcrb
adc
shrb
pop
jb
test
movd
sbbb
lods
push
mov
cmp
js
orl
aam
pushf
jae
add
ds
inc
into
push
cwtl
dec
lea
dec
iret
cmpsb
and
inc
xchg
xchg
test
orb
frstor
pop
inc
cmovnp
daa
sarb
mov
cltd
pop
jno
es
sub
add
cmp
sub
push
xchg
enter
xchg
push
sbb
jp
inc
or
xor
sti
xchg
stos
rcrb
cs
add
push
mov
addr16
xor
dec
xchg
adc
pop
dec
repnz
dec
ret
mov
pop
dec
cmc
jp
pop
loopne
push
push
lahf
insl
fisttpl
add
pop
movsb
mov
cmp
pop
stos
and
jns
scas
xor
fucomip
inc
pop
es
pop
or
into
movsl
scas
push
sbbl
stos
pop
mulb
xchg
or
and
outsl
lret
mov
cmp
dec
sbb
pop
jb
repnz
xor
cwtl
mov
ret
mov
adc
push
push
xor
les
add
mov
xchg
hlt
scas
inc
push
lods
leave
add
jb
cmpsb
adc
pop
or
test
add
sub
fsubl
xor
sbb
lret
xor
mov
sbb
xor
data16
jnp
test
data16
stos
daa
xor
mov
sbb
pop
mov
cmpsl
aad
push
dec
xlat
or
jno
sbb
add
cmp
xchg
lret
pop
aas
or
jnp
stos
push
xchg
cmp
sub
sbb
pslld
addr16
push
inc
scas
test
nop
js
mov
mov
inc
int
sbb
add
pop
xchg
xor
orb
hlt
push
xor
es
sbb
insl
add
call
adc
pop
in
add
pop
popa
jb
xor
adc
pop
jmp
repz
mov
xchg
test
dec
pop
push
stos
sbb
sub
or
invd
or
mov
cmp
cmp
mov
pop
dec
cltd
jo
xor
jo
xor
popa
test
xor
out
cmpsb
rol
mov
scas
mov
push
cmp
xchg
ret
xor
jne
push
or
sbb
adc
sbb
sub
add
or
xchg
imul
fldl
lcall
and
call
jb
int
rcrb
cwtl
inc
cmpl
addl
ljmp
dec
dec
adc
test
sub
inc
loopne
dec
adc
rclb
cmp
adc
cmp
popl
or
and
cmpsl
data16
mov
push
add
data16
pop
clc
rclb
call
cmpsl
pop
xchg
adc
adc
lods
and
pop
push
rcl
xor
xor
xor
ja
jae
adc
or
lea
sbb
fs
and
roll
push
gs
adc
dec
adc
mov
test
outsl
nop
shrl
loopne
fcompl
fwait
mov
pop
sbb
psraw
inc
cmp
lods
sub
adcb
pop
test
add
pop
xor
push
aam
push
pop
inc
mov
lret
push
scas
mov
sbb
dec
inc
test
cmp
cmp
pop
scas
inc
push
subl
rcl
xor
xor
or
das
jne
fidivl
add
out
or
push
dec
popa
pop
sub
xchg
sub
mov
sub
add
loopne
movsb
or
sbb
nop
test
push
stos
mov
jp
clc
rcrl
pushf
xchg
cmpsb
and
sbb
incl
mov
xchg
sbb
push
cmc
xlat
xor
mov
xchg
rcr
movsl
hlt
mov
pop
or
push
mov
testb
mov
adc
sub
pop
push
aam
push
or
addr16
inc
sbb
push
adc
aaa
stos
push
mov
push
mov
sub
jo
jns
cmp
in
sbb
cmpsb
mov
dec
mov
cld
lcall
pop
add
pop
test
push
jg
stos
add
sbb
adc
scas
and
shll
sub
sbb
js
push
mov
adc
aas
ret
ljmp
push
jg
jg
lock
andb
sbb
or
test
loope
xor
xor
add
icebp
mov
test
sbb
or
loope
or
icebp
pushl
loope
and
int3
or
or
mov
test
sbbb
push
pusha
stos
aaa
int
cmp
out
or
sbb
jge
xor
add
sub
jb
adcb
adc
sbb
movsl
xor
or
push
in
or
push
adc
inc
mov
jb
fwait
pusha
inc
cmpsl
ljmp
data16
mov
push
out
add
rclb
sbb
popf
and
mov
xor
dec
sarb
sbb
push
and
mov
xor
mov
cltd
jae
push
dec
shrb
stos
and
or
gs
mov
cmpsb
adc
xor
jns
mov
cs
jo
mov
push
xor
int3
and
stos
enter
shlb
xchg
shll
cltd
push
or
imul
addb
sbb
pusha
and
push
xchg
data16
dec
jecxz
and
pop
mov
push
dec
loope
xor
mov
lret
sbb
push
loopne
out
inc
or
js
push
mov
lar
add
pop
inc
pop
cltd
lcall
and
loopne
inc
cmp
mov
add
lock
pop
cmp
xchg
bnd
repnz
mov
subb
cmp
scas
mov
xlat
bound
cmp
add
cmpsb
test
inc
mov
jp
cwtl
and
mov
add
pop
cwtl
cs
sub
stc
xchg
es
xlat
test
lock
jmp
sti
out
adc
pushf
jae
jb
xchg
jno
popf
rolb
arpl
or
jae
add
mov
xor
scas
dec
add
insb
jno
pop
adc
stos
xor
or
rorb
ss
loop
mov
and
lock
and
or
sub
xor
xchg
sbb
mov
dec
pop
ret
sub
xor
pop
dec
andl
jp
or
or
mov
adc
enter
xchg
mov
sbb
into
adc
loopne
and
mov
pop
out
add
addl
mov
xor
pop
iret
pop
push
pop
pusha
xor
dec
scas
add
cmp
pop
in
xor
push
movb
jns
js
orb
mov
mov
mov
lcall
add
inc
pushf
or
xor
cmc
es
int3
and
mov
pusha
lock
jg
and
cmp
or
das
ret
inc
cmp
pushf
scas
mov
test
addb
mov
and
dec
jne
mov
jp
push
add
jle
push
xchg
ret
push
imul
adc
or
ucomiss
xor
adc
fs
cmp
in
push
mov
xchg
xchg
popa
pushl
nop
mov
call
xor
inc
out
adcl
sub
xchg
cmc
push
mov
addl
jae
and
dec
cmpsb
push
push
jne
dec
int
cmp
push
xor
std
in
jo
fsubl
xchg
and
fsubl
mov
push
test
or
mov
cwtl
pop
ljmp
int
adc
lds
xor
rorb
sbb
xchg
push
addr16
rorl
rclb
loop
adc
push
loope
xor
mov
mov
adc
stos
add
add
jp
loope
test
inc
dec
or
fsubr
push
xor
xchg
rcll
push
in
test
pop
scas
in
xor
pop
in
cs
sbb
pop
rorl
lret
push
popf
leave
cmc
pushf
add
test
pop
cmp
jo
sbb
ret
dec
mov
sub
jp
jo
in
xor
sub
popa
subps
cmp
test
adc
lahf
sub
jo
frstor
shll
push
sub
push
mov
or
out
cs
pop
faddl
cmp
rcl
or
or
push
pop
popf
xlat
pusha
lret
mov
ljmp
mov
inc
shrb
push
sbb
xor
sbb
out
in
add
mov
ret
add
sahf
inc
push
sbb
in
adc
sbb
test
push
cmpsb
sbb
rorl
ljmp
jmp
sub
add
add
sub
add
in
mov
shrl
jle
js
jno
sub
or
pop
sar
push
xlat
sub
mov
and
testb
bound
add
cli
fiadds
adc
dec
inc
mov
push
push
sub
ret
pop
hlt
jne
xchg
jle
frstor
mov
add
pusha
ljmp
adc
mov
loope
pop
push
inc
shlb
vmovdqa
mov
push
sub
incb
sub
mov
shl
push
stos
test
scas
jb
cmp
mov
add
push
out
push
iret
ss
ret
sti
test
rorb
or
xchg
add
test
xor
loop
loope
push
inc
ljmp
xchg
jmp
inc
in
inc
or
sbb
cmp
mov
push
mov
or
in
in
mov
mov
test
test
add
mov
mov
jp
cwtl
lret
xchg
push
push
sub
jbe
into
popa
mov
sbb
add
jmp
push
or
sbb
dec
fadds
push
adc
daa
mov
xchg
mov
in
test
and
mov
addr16
je
ja
imul
xchg
adc
arpl
cs
test
test
aad
push
inc
bound
lods
add
add
or
sar
xlat
xor
lods
cmp
pop
out
pop
sbb
pushf
iret
jg
sysret
sahf
push
lret
test
and
push
popf
lods
fwait
inc
pushf
adc
imull
add
add
push
popw
aam
sub
xor
push
push
test
adc
add
push
adc
and
pop
jg
cmp
xchg
lcall
std
lcall
cmp
xchg
in
and
add
dec
call
mov
mov
xor
cmp
test
sarb
push
call
mov
push
sbb
cmpsb
inc
lcall
cmp
es
sbb
add
inc
sbb
xchg
inc
fsubrl
adc
dec
add
pushf
mov
push
aam
or
aas
push
push
ljmp
out
or
rclb
imul
xchg
lock
xchg
mov
fcomps
ret
mov
nop
mov
cmp
pusha
or
cs
gs
mov
pop
int
pop
loope
xchg
push
nop
test
loopne
lahf
insl
cmp
das
mov
dec
xchg
jb
xchg
add
test
out
rorl
push
dec
cmp
jg
jae
sub
cmp
ret
lcall
divps
in
rorb
loope
out
mov
in
mov
push
push
fbstp
subb
push
push
add
push
cmp
jo
push
cwtl
cwtl
out
aad
in
loopne
jbe
ss
andl
jb
jp
lret
test
aam
and
bound
ret
fimull
sub
test
dec
and
loope
es
fldcw
arpl
mov
cmp
fldcw
stos
adc
sbb
add
lea
sahf
popf
das
sar
jmp
sbb
dec
push
das
and
and
aam
aad
je
push
pop
dec
push
add
push
dec
mov
test
mov
ss
test
add
or
inc
mov
dec
jmp
inc
or
jo
adc
ficomps
inc
push
mov
and
bound
sbbb
mov
adc
fiaddl
mulb
pop
mov
popa
push
or
sub
jp
push
xchg
rcl
cmpsb
xchg
in
push
or
adc
or
add
in
inc
pusha
push
inc
into
pusha
enter
pop
jo
ret
push
pop
mov
sbb
lea
cmp
subb
push
xlat
dec
add
pop
mov
adc
rcrb
jle
push
xchg
leave
inc
inc
or
cmp
enter
ss
inc
push
or
dec
push
push
inc
jne
jp
mov
xchg
out
jb
loope
or
add
sbb
cmp
push
push
add
pop
data16
cmpsb
dec
aad
cmp
enter
loope
enter
xor
pop
and
in
adc
mov
shlb
xchg
fidivrl
pmaddwd
test
mov
jo
insl
sub
mov
loopne
or
out
scas
ret
push
scas
mov
pop
xchg
fldt
out
imul
inc
sbb
call
pop
leave
or
dec
mov
mov
mov
sub
std
push
sbb
lret
mov
adc
idivb
inc
mov
cltd
lcall
or
add
pop
sahf
xchg
push
add
jb
movsb
inc
jmp
and
loop
test
push
cmp
stc
adc
mov
jns
push
bound
jo
jl
xchg
pop
jecxz
dec
lret
sbb
push
push
ret
push
add
or
stos
bound
lahf
inc
sub
pop
jge
add
int
jno
xor
jns
int3
inc
inc
or
add
int3
mov
xor
ljmp
or
dec
mov
pop
push
mov
push
mov
mov
xlat
sbb
pop
mov
or
fcomip
inc
xchg
in
flds
and
add
mov
pop
je
mov
jmp
hlt
lea
push
push
add
pop
sar
dec
shlb
push
adc
idiv
data16
sub
mov
bound
andb
sub
adc
push
aam
add
xchg
sbb
dec
clc
pop
ds
jp
leave
popa
sub
movsl
mov
add
pop
test
sbb
in
and
jge
orl
es
cmpsb
lret
push
xchg
mov
es
add
mov
jb
aam
xor
push
inc
inc
push
pop
filds
and
push
sbb
adc
add
xorb
in
es
dec
cs
call
dec
hlt
mov
xchg
cmpl
push
dec
js
lret
out
push
mov
jb
or
jae
jnp
int
jne
sub
xorl
push
add
push
test
push
and
push
leave
inc
cltd
pop
mov
sub
add
in
adc
into
push
jb
out
adc
or
add
lret
cmpsl
add
inc
add
inc
cmp
jb
das
pop
shl
mov
shrb
or
push
rolb
jo
and
out
xchg
test
aad
xor
jo
inc
xchg
or
cs
jo
xchg
xchg
arpl
repnz
mov
out
mov
psraw
cmc
push
dec
hlt
loop
enter
addl
sbb
enter
aaa
ja
repz
sub
add
mov
inc
clc
fbstp
sbb
fildl
xor
dec
mov
scas
fs
pop
push
pop
mov
rcl
aad
push
shrb
movl
or
and
cmp
or
or
xor
sbb
pop
jp
or
or
outsb
xchg
repnz
scas
and
cmpsl
or
jb
rclb
test
xchg
daa
jno
adc
and
lret
xor
add
sbb
jo
pop
and
mov
push
push
adc
sub
jle
sbb
mov
and
je
int
or
loope
xor
mov
or
cmpsl
sbb
or
xor
mov
loope
push
rcrb
dec
adc
movsb
or
add
ret
push
mov
or
std
ja
add
scas
push
add
push
test
out
pop
adc
mov
movsb
test
imul
pop
jb
push
fld
xchg
or
mov
push
loope
push
mov
cmpsb
data16
aam
and
sbb
or
adc
fs
push
scas
fistpll
and
test
xlat
loope
adc
adc
mov
xchg
test
push
sbb
sub
loopne
xor
cmp
sub
mov
mov
jge
lret
mov
jne
xchg
popa
call
mov
repnz
mov
dec
fs
call
push
scas
loope
pop
stos
in
filds
in
mov
test
sahf
lret
cld
test
mov
mov
mov
lock
push
xor
sub
xor
jne
inc
dec
adc
mov
sbbb
int3
mov
or
mov
sbb
popf
in
push
data16
dec
in
subl
out
mov
push
jae
push
sti
enter
mov
adc
loop
jb
or
dec
mov
cmp
jo
xor
cld
fistpl
or
push
cmpb
jae
es
pop
cmp
es
cltd
sub
popf
fistpll
push
mov
jns
dec
xchg
rcr
jne
ret
or
mov
mov
xchg
mov
add
ljmp
push
push
pop
cmc
and
addr16
pop
out
clc
outsb
jne
push
sbb
das
push
adc
cmc
or
inc
or
sarl
ret
sub
pushf
sub
stc
lock
mov
inc
xor
push
xchg
push
jae
push
cs
add
ja
jns
push
movsl
pop
es
fidivrl
jbe
push
adc
es
jae
les
movsl
dec
adc
lret
pop
push
mov
inc
and
xor
rclb
flds
ja
dec
out
jmp
repnz
test
mov
xchg
pop
xchg
or
cmp
not
and
sub
ret
lock
xor
pop
cmp
cltd
mov
test
pop
jb
cmp
add
faddl
push
push
loope
addb
les
mov
adc
and
add
sub
adc
shll
or
cli
in
push
or
out
jae
rclb
push
cmp
pusha
push
xchg
enter
lods
dec
mov
addb
adc
push
mov
out
add
xor
or
pop
or
push
in
in
jmp
add
jp
addb
inc
call
inc
shlb
leave
add
fadds
mov
cmp
data16
pop
mov
stos
add
scas
adc
push
xchg
stos
pop
shlb
and
adc
shlb
cmp
push
push
add
push
insb
jmp
xor
test
xchg
mov
std
pusha
mov
in
test
std
mov
test
cmp
sub
stos
mov
xor
sub
rcrl
jb
scas
inc
sbb
clc
inc
add
call
adc
cmpsl
stos
push
pushf
test
xor
scas
inc
sub
or
in
pop
sbb
loope
out
jl
loopne
in
sub
mov
movsl
pop
push
xchg
and
call
sub
or
roll
loope
movsb
sub
mov
and
dec
nop
mov
lret
in
xchg
jbe
push
pop
sbb
push
lods
sti
push
jbe
push
dec
cmpsb
outsl
sub
xchg
push
jae
cs
mov
pusha
fwait
cmp
push
add
cld
stos
mov
in
and
ret
and
inc
out
cmpsb
inc
je
enter
cmpsb
adc
negb
popl
rorl
into
adc
push
sbb
push
pop
push
pop
mov
mov
xor
mov
inc
or
jns
or
push
add
push
mov
push
lods
mov
insl
fstl
rcrl
aaa
std
lods
inc
push
xchg
xor
xchg
lock
sub
cmp
ja
into
sbb
push
in
adc
pop
cmpsl
jno
mov
mov
pop
push
pop
cmp
mov
sbb
push
jnp
xchg
mov
xchg
or
pop
in
mov
adc
orl
push
cmpl
jns
stos
loop
aam
pop
ja
jp
xchg
cmp
sub
aam
inc
imul
ret
xchg
pop
lods
inc
cs
outsl
dec
sub
push
jb
xor
mov
cmpl
cmp
std
mov
xor
or
out
dec
cltd
test
or
cmc
xlat
xor
jbe
mov
jne
pop
xor
mov
mov
adc
push
xor
test
loop
or
fisubrs
pop
subl
jno
popa
jb
scas
or
push
sub
gs
or
les
incl
fbstp
or
pop
cs
jae
sbbl
rcrl
sbbb
push
adc
push
sarl
adc
push
inc
adc
rorb
xchg
or
push
jae
inc
aaa
nop
test
add
jo
stos
fwait
xchg
pop
push
stos
loopne
adc
hlt
out
jo
aam
shrd
mov
adc
loopne
jbe
lcall
fwait
add
push
in
mov
and
popf
jb
xchg
and
add
lds
mov
push
or
sub
pop
adc
adc
mov
loop
nop
test
jo
jbe
xorl
popf
fmul
notb
das
mov
jmp
xchg
push
jb
pop
or
imul
imul
inc
cmp
adc
mov
dec
mov
ret
inc
jmp
pop
jmp
sub
inc
iret
scas
sbb
pop
inc
in
test
cmp
in
test
push
or
pop
subb
mov
enter
pop
xchg
lods
popf
xor
mov
ret
mov
out
inc
pop
pop
adc
mov
add
daa
pop
cmp
scas
or
int
clc
or
pop
sbb
xor
inc
jo
pop
into
enterw
cmp
cmc
mov
sub
xchg
data16
inc
das
or
loopne
mov
in
push
add
dec
aad
or
sbb
cmp
mov
jge
push
sub
outsl
insb
inc
subb
xchg
push
ret
loopne
jb
jo
cs
outsl
aam
pop
or
push
mov
out
push
mov
xchg
test
test
add
xor
aad
lcall
lods
dec
mov
cltd
test
loope
out
or
xchg
out
adc
sbb
mov
jge
sbb
movsb
fbld
dec
xor
mov
mov
cmp
jl
inc
add
stc
add
mov
lock
mov
lret
jge
mov
rcl
jae
mov
xor
mov
stos
cmp
cvttps2pi
pop
fwait
jb
push
jne
stos
push
and
loope
cmpsb
icebp
lock
inc
stos
push
adcb
push
adc
pop
addr16
cmpsb
pop
popf
out
nop
stos
mov
insb
inc
or
sbb
sbb
adc
dec
out
push
mov
js
adc
dec
popa
mov
xlat
cmp
iret
adc
push
push
cs
jnp
and
xor
jge
mov
jge
xchg
push
lcall
xlat
push
xor
jnp
loope
pusha
sbbb
jne
sub
xor
stc
adc
pushf
jmp
add
fs
lea
movsl
or
rolb
and
ret
cmpsb
sub
mov
fildll
cs
add
rcrl
push
mov
xchg
jmp
sbb
mov
pop
dec
es
adc
jge
cmp
sbb
and
pop
into
sbb
test
push
cltd
xor
or
sbb
jmp
jle
mov
test
sub
jl
xor
dec
scas
clc
movsb
mov
loopne
cld
xchg
xchg
xor
ret
loope
daa
dec
test
cmpsb
je
cmp
lret
out
dec
insl
push
xor
cmp
xor
pop
dec
push
jp
xchg
or
adc
fsubr
adc
pop
or
and
add
adc
movl
popf
push
hlt
jg
cld
out
adc
or
add
enter
sbb
cmp
cld
into
outsl
loopne
rolb
js
fdivl
enter
inc
clc
fxch
fisttpl
sub
mov
push
sub
mov
sub
mov
and
inc
iret
and
sbb
sbb
fistpll
int
loopne
jl
xor
and
jecxz
push
pop
mov
cmp
adc
mov
ljmp
cmp
inc
mov
jb
adc
cmp
das
jns
xchg
jb
stos
cmp
imul
dec
or
adc
push
xor
xor
sbb
out
adc
scas
out
adc
or
in
push
sahf
xor
aam
in
mov
ret
scas
cltd
pop
gs
jae
jno
andb
loope
lcall
scas
pushf
mov
pop
cmp
or
cmp
and
fistps
cwtl
pushf
mov
cmp
xchg
jae
je
add
in
mov
scas
sub
test
dec
test
test
in
mov
into
test
jg
push
push
sub
sub
mov
adc
or
subl
and
mov
lds
sbb
pop
lock
xor
push
scas
lea
sub
xorb
in
add
bound
cmc
adc
cmp
xor
enter
push
cmp
popf
test
mov
push
add
sbb
sub
ss
jns
shrl
add
add
adc
je
dec
xor
decl
dec
add
push
add
push
sub
inc
push
cmc
jg
aam
scas
inc
adc
pop
sub
mov
or
jg
mov
or
push
sub
push
add
pushl
add
dec
sub
dec
sub
add
add
add
push
imul
call
and
pusha
shlb
add
sbb
sbb
addl
dec
int3
jl
add
xor
jmp
sti
mov
add
inc
int3
adc
xchg
push
mov
push
gs
mov
insl
imul
das
mov
movsb
lahf
inc
fsub
cmp
in
inc
es
adc
ljmp
incb
stc
mov
lock
movl
in
mov
mov
push
jmp
push
dec
mov
and
decl
push
or
stc
push
insb
pop
adc
inc
cmpsb
xor
mov
andl
push
aad
or
in
mov
test
add
xlat
roll
test
das
enter
push
arpl
rorl
aad
or
lds
jb
ret
shl
adc
lcall
rclb
inc
xchg
mov
incb
mov
imul
outsb
loope
dec
sarl
pop
xor
push
xchg
test
sub
rolb
push
add
lret
incb
mov
and
sbb
mov
les
movsl
pop
out
or
push
xchg
cmp
pop
gs
mov
rol
cwtl
jne
mov
and
mov
push
repnz
push
imul
rol
mov
or
fs
pop
enter
xor
mov
ss
adc
subl
jno
mov
mov
mov
sbb
fiaddl
xlat
push
leave
or
ljmp
sub
fldl
jb
loopne
in
shl
jb
add
dec
andl
out
mov
orb
int3
pop
adc
pushf
orl
addb
cmp
pop
popf
push
mov
add
stos
aas
gs
repnz
jb
xor
jo
fwait
lret
or
push
mov
popf
cmp
dec
ds
insb
xchg
popa
test
cwtl
sub
dec
test
push
xor
sbb
sub
or
ljmp
inc
mov
push
push
adc
das
push
cmp
aas
sarl
leave
jmp
cld
out
scas
add
out
sbb
dec
mov
push
scas
adc
xchg
addr16
xchg
mov
icebp
inc
or
inc
adc
int
dec
mov
shlb
jb
dec
jg
dec
popa
js
push
adcl
test
sbb
pop
mov
sbb
sbb
xchg
leave
push
adc
mov
sub
pop
jl
jp
stos
xchg
leave
jno
aaa
ss
fs
addl
imul
push
push
inc
sbb
mov
xchg
sbb
divb
ljmp
cmpl
push
lock
inc
in
cs
mov
sbb
xor
jg
clc
data16
mov
iret
mov
hlt
daa
aad
rolb
ret
add
cld
inc
mov
sbb
add
cwtl
mov
mov
xor
or
pop
xchg
lcall
push
stos
mov
jmp
and
outsl
xchg
cs
into
xchg
mov
mov
mov
pop
add
stos
jnp
jp
pop
cmp
flds
lret
sbbb
or
xchg
mov
fs
inc
sbb
out
adc
push
js
sub
add
sbb
and
add
push
in
into
or
jo
jmp
sbb
data16
in
xlat
and
cmp
xchg
push
ljmp
sbb
loopne
or
and
mov
rorl
shrb
int3
dec
xchg
aaa
shufps
or
push
xor
push
push
mov
inc
mov
fnstsw
pusha
xor
jbe
xchg
and
push
scas
pop
add
cmp
popa
push
push
mov
jmp
adc
mov
out
cwtl
xor
js
push
call
and
add
popa
daa
shlb
into
lock
sub
cs
push
mov
push
or
and
mov
mov
xor
cmp
mov
or
or
push
jae
dec
push
cwtl
pop
icebp
rclb
push
xor
ljmp
negb
inc
sub
sbb
sbb
lcall
push
loope
lods
fdivr
leave
xor
insb
sub
jo
or
js
or
fcom
or
into
inc
dec
push
add
movsl
add
dec
jo
add
and
or
mov
popf
cmp
aas
cmp
inc
pop
push
push
cwtl
dec
in
sub
jle
sbb
inc
int
insb
or
fsubl
pop
inc
int
add
sbb
jne
data16
sbb
pop
subb
push
scas
insl
xchg
popa
mov
pop
pusha
push
mov
push
fdivl
add
inc
sbb
xor
mov
in
test
jno
inc
ret
loopne
rcrb
mov
sub
aad
ljmp
rclb
mov
cwtl
gs
xor
sub
or
addl
adcl
adcl
mov
lock
mov
push
push
pop
scas
idivb
ds
mov
aas
mov
jns
inc
imul
sub
xchg
mov
dec
mov
or
xor
xchg
sub
cmp
dec
xchg
mov
push
imul
es
scas
fldl
push
fdivrl
jo
jmp
and
push
je
push
or
orl
inc
push
std
inc
int
fidivl
and
aam
jb
daa
sbb
inc
sti
dec
add
dec
cmp
mov
rol
add
lea
cwtl
and
cltd
jp
or
push
cmp
jo
arpl
push
cmp
jmp
push
mov
jns
push
cmp
mov
or
mov
sbb
test
inc
add
inc
add
mov
lods
stos
popl
in
scas
add
dec
push
dec
cmp
push
ficompl
rcl
xchg
repnz
cmp
jp
lcall
pop
xor
pusha
sbbb
push
adc
mov
push
mov
or
mov
sub
jno
repnz
xchg
ret
or
popw
nop
pop
xchg
and
pop
aaa
sbb
rol
and
in
out
push
or
mov
int
mov
xchg
clc
and
inc
or
mov
xor
sbb
mov
loope
cmp
jp
cmp
in
adc
push
xchg
or
mov
add
lds
clc
aaa
xor
sub
add
push
sub
pop
fwait
daa
add
lea
push
jne
cmp
mov
lock
jb
xchg
cmpsb
xchg
push
mov
xor
cs
mov
ret
xchg
inc
ljmp
loopne
stos
shrl
lea
pop
cld
xorl
push
cmpl
add
pushf
mov
sbb
inc
mov
mov
inc
cmpsb
add
push
sub
mov
jp
pusha
clc
test
jo
dec
mov
sbb
mov
jo
sbb
mov
push
pop
subb
mov
mov
loopne
inc
fs
dec
pop
es
scas
jp
sub
nop
sub
mov
xchg
test
or
shlb
cmp
rolb
xor
dec
orl
cmpsl
pop
sub
mov
jae
or
jmp
dec
or
sbb
mov
stos
mov
sub
xchg
mov
and
add
call
sub
push
cs
mov
sub
rolb
add
sub
pop
mov
pop
pop
loope
lcall
jmp
rorb
xchg
adcl
push
cmp
push
add
sub
push
mov
orl
sub
negb
add
dec
sahf
call
int3
add
data16
imulb
sub
shll
and
jo
or
and
or
cmpsb
lret
test
lock
stos
dec
aam
sarl
cli
lock
xchg
jecxz
and
rcrl
cs
mov
idivl
add
xchg
sti
xchg
clc
mov
xor
mov
mov
xchg
dec
cltd
mov
popa
mov
or
loop
loopne
cli
push
stc
call
repz
lret
popa
adc
pop
cmp
jne
int3
or
or
jmp
dec
mov
mov
inc
jo
sub
pushf
in
sub
mov
adc
pop
mov
jo
or
xor
add
cltd
push
inc
add
push
inc
jmp
push
jae
xchg
imul
push
pop
daa
jmp
xlat
push
int
push
fiadds
jp
mov
mov
es
out
or
in
mov
scas
or
push
adc
test
sub
clc
jp
pop
jae
stos
movl
mov
cli
test
inc
outsl
pop
xchg
or
out
cmp
fcmovb
dec
and
push
lods
mov
adc
inc
out
data16
and
sbbb
xor
inc
jp
or
push
je
pop
lret
xchg
bound
dec
into
xor
and
adc
jg
xor
mov
leave
xchg
inc
inc
iret
adc
je
add
lock
inc
rcrl
cmp
cwtl
pop
cmp
xchg
negl
data16
cmp
push
orl
jb
testb
ljmp
xlat
inc
lret
mov
loope
pushf
add
mov
stos
pop
sbb
inc
in
rorb
add
push
add
push
pop
cmp
sbb
aas
bnd
or
test
in
sbb
sub
cmp
mov
aam
sub
jmp
jo
cmp
jb
loopne
in
pop
mov
frstor
enter
lcall
sbb
xor
shrl
lret
mov
icebp
push
xchg
popf
inc
push
sbb
jmp
mov
xchg
lret
cli
push
inc
stos
or
jp
nop
or
inc
hlt
rclb
mov
adc
add
out
test
mov
pop
mov
iret
pusha
aam
test
scas
or
icebp
rclb
sbb
jmp
xchg
leave
inc
mov
out
pop
imul
jb
push
add
out
mov
mov
pop
dec
gs
mov
ret
cmp
xchg
dec
push
cltd
sbb
popf
xchg
sub
add
and
or
ret
movsl
xchg
cwtl
jne
dec
and
popf
push
int
cmp
or
add
xor
cmp
shlb
fsubr
add
stc
push
adc
xchg
or
sbb
and
lcall
cmp
and
add
test
daa
fists
push
into
adc
mov
mov
lea
sbb
or
add
incl
xor
fldl
lret
pop
sub
mov
popf
sbb
inc
pop
push
push
jmp
sbb
out
mov
sbb
jge
bound
popa
mov
push
testl
dec
les
push
icebp
ss
cmp
cmp
cs
push
xor
or
xchg
call
xchg
cmp
ljmp
or
mov
les
jp
push
mov
out
xchg
push
test
mov
out
stos
mov
scas
call
in
adc
lret
nop
inc
push
shll
fiaddl
shlb
push
sbb
dec
sbb
popf
jo
pushf
mov
mov
sub
cmp
jns
dec
test
pushf
sub
push
popa
sub
test
mov
lret
aad
adc
inc
pop
jb
hlt
adc
cmp
enter
jbe
pushf
mov
jp
pop
dec
stos
shll
in
sbb
popa
xchg
jecxz
out
cltd
sbb
js
xor
and
push
test
sbb
int
push
xchg
mov
ret
in
add
dec
or
cwtl
dec
add
push
or
loopne
cltd
push
sbb
adcl
xor
inc
lea
aam
sbb
mov
jge
into
add
inc
fmuls
inc
imul
daa
ror
fidivrl
push
popf
mov
test
or
aam
jne
push
cmpsl
add
xchg
mov
xchg
pop
jecxz
clc
cmp
jns
mov
ficompl
adc
and
hlt
clc
out
jno
or
sub
inc
push
push
mov
in
dec
add
pop
movsb
pop
repnz
int3
arpl
adc
xor
lahf
sbb
sub
and
mov
in
lds
arpl
outsb
mov
sbb
adc
or
cmpsb
cmp
cmp
aaa
loopne
mov
aas
je
sub
mov
cmp
sbb
push
jae
enter
stos
mov
or
or
cltd
sub
xor
jl
or
sbbb
xchg
mov
or
popa
jb
push
fisttps
pop
and
xor
popa
daa
in
scas
out
popa
pop
enter
push
sbb
add
xor
and
push
dec
mov
mov
jecxz
mov
inc
iret
cltd
sbb
dec
out
loope
mov
add
inc
cmp
fdivrl
mov
dec
arpl
mov
push
test
ret
jb
loopne
push
sub
dec
pop
popf
add
pop
loope
or
movsl
mov
add
push
jo
or
push
dec
push
sbb
inc
pop
fs
jp
mov
push
cmc
enter
scas
cmp
sub
rolb
ljmp
std
lock
jne
jp
push
imul
scas
jle
dec
rcrb
notb
dec
cld
xor
or
imul
hlt
enter
lcall
or
mov
push
je
and
jo
inc
mov
adc
inc
dec
add
add
stc
out
cs
adc
ds
lock
cmp
cld
dec
sbb
mov
dec
sub
sub
adc
aaa
imul
sahf
jnp
andl
pop
xor
out
or
bndldx
mov
sarl
xchg
jns
cwtl
lret
push
aad
loopne
xchg
or
cmp
push
cmpsl
jb
sub
or
fcmovbe
pop
xor
pop
pop
and
mul
test
xchg
lods
push
push
add
repnz
push
mov
cltd
cli
push
out
js
das
cmp
test
sbb
sahf
or
mov
cmc
pop
push
ljmp
rolb
je
mov
xchg
enter
xor
aad
ja
data16
in
fs
mov
sub
test
test
mov
push
jae
into
mov
and
push
xchg
stos
inc
cs
test
push
cmpsb
pop
jp
cmp
stos
ja
pop
adc
clc
cmp
xchg
cmp
xchg
dec
jge
sub
jo
cltd
pop
fstl
cmp
dec
xchg
bound
mov
add
mov
ss
mov
addl
or
mov
je
add
mov
mov
out
adc
int
jb
shll
ret
dec
inc
aam
scas
jecxz
push
sub
loopne
rolb
mov
stos
lret
subb
or
dec
rolb
mov
aas
cmp
and
icebp
pop
cmp
push
add
sbb
mov
inc
add
mov
fldenv
test
inc
add
dec
sbb
xor
sub
addb
inc
pop
jo
cmc
sub
inc
adc
inc
in
dec
sub
adc
push
test
xchg
imul
call
mov
xor
std
xor
mov
iret
or
in
loopne
add
es
xor
push
pop
push
or
add
ds
jmp
stos
add
fnsave
in
or
test
fistpll
scas
or
push
jno
test
pusha
test
push
outsl
pop
jo
inc
xchg
dec
out
push
pusha
stos
jecxz
aaa
inc
andl
inc
cmp
push
rcll
pop
cltd
mov
test
arpl
pop
or
dec
loopne
addr16
pop
cmp
loope
lretw
sbbl
mov
jb
out
xchg
push
aas
inc
xchg
test
add
stos
jp
jae
or
add
xor
loope
aad
sbb
pop
mov
inc
sbb
test
cmp
mov
or
cmp
or
cmpsl
or
sbb
or
out
pop
test
xor
shrb
sub
popa
jb
out
dec
jp
jl
ret
mov
in
shlb
insl
roll
and
dec
int
shl
enter
stos
pop
cs
xchg
roll
push
scas
outsl
jb
shrl
inc
xchg
or
inc
es
push
push
xor
push
adc
cmp
mov
in
push
test
mov
rcll
les
and
es
sbb
test
je
dec
push
loop
roll
or
xlat
jle
mov
inc
sub
inc
cltd
sbb
ret
and
bound
jmp
stc
xor
pop
xchg
push
mov
pop
xchg
mov
jns
fdecstp
hlt
aad
daa
adc
pop
lahf
repnz
stos
adc
je
je
mov
jp
shl
pop
add
rcrb
xchg
sub
adcb
mov
ljmp
push
inc
loope
aas
clc
add
add
repz
lea
mov
ret
out
cmc
repnz
add
test
pop
scas
sub
lods
addl
cmp
cmp
push
sbb
lea
outsb
adc
pusha
lock
add
push
lock
inc
jecxz
jo
and
mov
add
data16
xor
inc
ja
sub
pop
sub
or
adc
in
out
hlt
jae
cmp
pop
ss
and
xor
sbb
subl
sbb
dec
pop
adc
xor
cmpsb
cs
jae
gs
int
lret
addb
mov
pusha
cmc
inc
or
or
subb
in
shl
lcall
add
stos
adc
hlt
push
xchg
cmp
daa
movsb
or
sub
orb
or
sub
stos
jo
test
xor
mov
sbb
inc
jg
sbb
adc
jp
jb
jo
cmp
add
or
leave
xchg
mov
mov
test
mov
lods
cmp
pop
nopl
rclb
push
cwtl
jno
aad
push
das
mov
pushl
push
negl
mov
int
and
inc
add
dec
outsb
and
pop
mov
pop
je
movsl
adc
cmp
bound
mov
repnz
shl
or
daa
push
mov
sbb
jmp
sbb
mov
jb
push
add
push
movsl
jb
mov
jle
mov
pop
inc
or
or
ret
add
sahf
mov
loope
insl
test
adc
pop
mov
xor
push
inc
inc
add
xor
xor
lret
push
sub
out
arpl
push
sbb
lds
xchg
mov
xor
xor
cmp
lea
shrl
xor
pop
cmp
sbb
inc
bnd
repnz
test
test
jmp
push
pusha
jo
push
jo
jecxz
repz
xor
popf
aam
add
jp
dec
adc
dec
int
test
scas
mov
std
cltd
dec
push
inc
pop
imul
rolb
enter
add
sbb
or
fadds
pop
cmp
cmp
sbb
loope
mov
xor
icebp
inc
sub
sbb
dec
rorb
out
fstps
xchg
or
es
xor
sub
dec
xor
fsubrl
addb
mov
and
rclb
out
adc
push
cmpsb
subl
pop
aaa
xor
test
mov
or
push
in
fisttps
mov
push
sub
push
sahf
arpl
sbb
stos
xchg
loopne
and
mov
or
jmp
cli
ja
loopew
inc
cmp
nop
in
int3
pushf
lret
xor
add
mov
push
mov
mov
or
ret
xchg
add
xor
loop
neg
iret
dec
sub
add
adc
insl
mov
fwait
ss
sub
or
pop
test
xchg
or
jae
sbb
in
xchg
sub
subl
add
bound
xchg
cmp
in
adc
push
inc
xor
or
stos
cwtl
mov
sub
stos
add
scas
pop
ss
mov
inc
sbb
lcall
xor
mov
mov
fisttps
cmpsb
xor
inc
pop
cmp
in
popa
ret
or
loopne
lahf
sbb
add
shll
mov
xor
sub
jmp
sbb
xor
pusha
xor
pop
into
jecxz
cltd
add
add
sahf
or
inc
inc
pop
into
loope
cmp
jo
and
int
cwtl
stos
push
es
and
xor
and
push
push
dec
aad
cmpsb
cwtl
or
popf
ret
mov
lcall
push
sti
jae,pt
xchg
andl
test
xchg
add
lock
pop
popa
xor
mov
in
jb
rclb
dec
xchg
in
push
sub
mov
sub
stos
cwtl
sbbb
xor
ficompl
popf
pop
push
dec
pop
mov
push
sarb
adc
mov
loope
pop
cmovl
inc
jnp
sub
cltd
pushf
and
scas
sti
pop
or
int3
inc
mov
movsb
nop
popf
enter
mov
inc
call
lret
xchg
xchg
add
sbb
sub
cs
sbb
pop
lods
add
jl
test
inc
sub
dec
mov
lahf
xor
mov
pop
shl
sbb
add
inc
nop
stos
lret
in
add
push
leave
lea
push
push
mov
cli
mov
data16
in
add
push
push
inc
fsubs
inc
add
ret
cmp
adc
cmp
fsubrl
push
jnp
call
adc
push
lcall
pop
imul
fdivrs
jp
sub
stc
out
ja
shrb
add
mov
inc
addr16
or
call
push
inc
cmp
add
push
loop
xor
jg
mov
shll
ja
fmuls
jnp
push
je
sarb
and
add
mov
hlt
jg
pop
add
pop
addr16
popf
stos
dec
cltd
mov
inc
mov
decl
or
mov
xchg
iret
iret
cmc
or
inc
movsl
int
xor
negb
js
sahf
cmp
jge
aad
adc
and
adc
shll
es
xor
lods
loop
xchg
bound
std
lret
mov
mov
mov
inc
cmp
cltd
std
std
mov
jno
repnz
sub
xchg
repnz
add
add
adc
std
es
scas
and
push
clc
in
xchg
subl
hlt
cmpb
mov
pop
loopne
mov
adc
add
shl
adc
ds
mov
pop
bound
cmp
sbb
out
cmpl
pop
add
add
jecxz
pop
and
mov
jmp
push
int
jo
iret
jl
push
loopne
mov
int
add
push
xchg
rorl
inc
push
or
repz
sbb
test
notb
mov
add
into
mov
mov
int
rcrb
aad
sbb
sbb
sub
out
jnp
pop
fidivrl
inc
xchg
rol
int
or
adc
pop
popa
mov
dec
and
js
rorb
rcll
add
push
adc
adc
cmp
shr
add
loop
push
test
and
js
cmp
jo
adc
inc
push
or
ret
imul
icebp
mov
cmc
add
mov
ja
ret
inc
sub
add
xchg
mov
insl
pusha
xorb
add
es
cmp
pop
test
xchg
push
stos
ret
xor
mov
sbb
sbb
or
inc
dec
imul
push
xchg
loope
pop
fwait
add
or
mov
inc
xchg
and
xor
iret
add
push
jp
cmpsb
sbb
mov
add
mov
cli
add
inc
sahf
mov
orb
sub
test
cltd
lods
mov
aas
jno
mov
in
push
xchg
popa
sub
in
adc
add
or
ret
adc
mov
jle
pop
scas
pop
sub
scas
or
cmp
push
inc
cmp
adc
rcrb
dec
mov
out
lret
or
xor
adc
xchg
push
mov
out
loop
jb
push
notl
mov
int
data16
mov
stos
mov
jnp
sub
stos
sbb
sahf
fnstcw
out
lods
mov
aam
fwait
pop
pop
into
inc
xor
icebp
mov
loope
dec
cltd
clc
imul
mov
mov
push
sbb
or
scas
mov
mov
and
mov
adc
xchg
jp
mov
inc
mov
cmpsl
push
in
aad
fisubrl
daa
xchg
inc
xor
ret
push
stos
dec
or
mov
mov
or
das
sub
arpl
xor
addl
cmp
outsb
lock
mov
mov
inc
loopne
adc
roll
testl
out
add
aas
inc
add
mov
mov
add
ret
push
les
out
or
xchg
je
js
lock
lods
add
inc
test
jg
cmp
aam
add
push
ss
pop
or
cli
les
mov
mov
add
iret
add
aaa
mov
adc
dec
add
adc
popa
fnstsw
adc
sub
adc
jae
je
dec
repnz
push
insl
jmp
push
scas
fdivl
adc
push
adc
roll
clc
das
mov
add
dec
dec
outsl
js
dec
add
adc
lret
in
outsl
mov
stc
add
sbb
mov
push
jno
pop
sub
dec
jno
cmpsl
add
mov
mov
sub
xchg
sub
sbb
jmp
push
adc
mov
inc
pop
mov
xchg
dec
add
adc
add
sbb
cli
pop
jns
adc
mov
jmp
cwtl
add
nop
stos
test
jne
andb
inc
scas
ret
push
cmp
inc
je
or
pop
testb
push
and
xor
mov
pop
cmp
lock
jae
inc
inc
sbb
inc
in
push
jns
and
add
add
stos
in
loop
cmp
inc
pop
loopne
aam
jmp
popf
adc
and
sub
and
pop
add
popf
sub
push
push
out
jb
mov
sub
push
inc
lock
and
pusha
orb
xor
and
adc
jne
dec
movsl
aas
xor
in
jo
push
data16
jo
xchg
loope
sbbb
scas
dec
sbb
cmp
push
pop
pop
lods
ret
aaa
in
adc
add
and
int
rolb
bound
push
sbb
xor
adc
js
push
decl
loopne
mov
sahf
loopne
mov
insl
clc
push
dec
in
in
mov
mov
push
rolb
add
sub
sbb
lds
movl
mov
and
fimull
test
and
out
loopne
scas
shll
aaa
or
sti
push
push
xor
add
add
sub
mov
mov
and
adc
inc
mov
int
sarl
aad
aaa
jmp
add
xor
cwtl
pop
add
dec
pop
push
pop
mov
out
popf
xor
fadd
fldl
mov
cmp
push
fwait
or
xor
mov
orl
ror
inc
mov
inc
mov
es
add
test
mov
test
pop
inc
jae
repnz
lock
mov
into
mov
xchg
lret
adc
cltd
inc
push
or
pop
lods
inc
scas
sti
out
js
mov
mov
add
adc
dec
aas
push
and
in
push
icebp
daa
xor
dec
test
mov
push
pusha
or
int
sbb
inc
ret
insb
js
shlb
sbb
xor
jne
inc
push
lcall
fiaddl
into
jo
aas
clc
shrb
sub
mov
dec
and
popa
ret
and
push
push
sbb
inc
shlb
or
push
mov
inc
xor
xor
jno
insl
mov
push
js
loop
and
enter
fwait
or
sahf
or
mov
pushf
mov
adcb
insb
and
and
push
push
or
xor
adc
dec
addl
in
jle
sbb
add
mov
xor
mov
addl
shl
push
mov
xchg
icebp
rcrl
dec
scas
and
ja
out
test
lcall
aam
push
mov
int
jmp
jno
or
add
xorl
and
js
xchg
push
dec
xchg
cs
adc
mov
push
mov
push
inc
outsl
jg
in
insb
loope
fisubl
cmc
ja
mov
xchg
mov
add
test
imul
adc
and
sub
cmp
sarb
adc
add
adc
cmp
aas
out
test
ds
add
call
flds
cmp
add
lods
cltd
sub
fbld
add
pop
xor
mov
fsubl
movsb
xor
repnz
mov
cwtl
clc
cmpsl
pushf
xor
bound
stos
pop
cmp
cmp
mov
rcll
fs
fcmovb
ja
pop
ss
pop
out
mov
push
pop
sbb
aad
push
ftst
add
pop
xchg
xor
sbb
int
and
test
inc
ror
or
test
fisttpl
adc
push
mov
jae
and
lret
add
dec
mulb
push
pop
fs
or
xchg
pop
sub
stos
sbb
call
rcl
inc
test
inc
lea
jno
xchg
add
or
in
mov
sbb
je
pop
mov
mov
and
aam
in
push
add
ror
inc
int
pop
arpl
adc
and
ret
cmp
rol
orb
sub
pusha
mov
jecxz
push
pop
jae
or
adc
push
sub
bound
mov
out
loop
enter
dec
push
stos
insb
in
xchg
add
pop
inc
xchg
jmp
mov
mov
lods
sbb
in
inc
cmp
sbb
lahf
mov
mov
mov
pop
iret
jbe
pusha
and
addr16
int
jp
loopne
dec
ss
xchg
pusha
add
inc
mov
push
cs
sbb
xor
lcall
inc
push
out
fcoml
sbb
jmp
sbb
fadds
cli
jmp
sbb
adc
add
and
test
dec
sub
sub
je
faddl
aam
adc
mov
outsb
sarl
out
jp
enter
lahf
jb
cli
cltd
lods
pop
add
push
xor
pop
pop
subl
sub
daa
add
mov
pop
pop
pop
adc
cmc
push
and
popf
mov
mov
mov
push
pusha
ret
les
jo
jo
out
pusha
push
in
push
adc
inc
push
pop
hlt
gs
cltd
addb
es
jo
test
lahf
stc
and
pop
cltd
leave
aas
imul
add
push
cmp
xchg
add
fwait
add
cs
cltd
or
xor
ficompl
adc
arpl
mov
or
mov
out
xor
jb
jae
test
data16
push
ret
jb
sbb
popa
or
loope
pusha
cmp
adc
xchg
pop
es
test
je
adcb
xor
add
lods
test
xchg
pushf
imul
or
les
and
add
add
rorb
mov
imul
mov
pop
shlb
lock
shl
test
jg
sbb
add
sbb
inc
xchg
xchg
lds
sbb
push
and
xchg
mov
mov
sbb
std
mov
into
aad
add
cmp
les
pop
xor
dec
lret
aam
or
sarl
inc
scas
data16
sbb
push
cmp
mov
jle
adc
push
or
mov
sub
cld
sub
testl
fwait
pop
sar
adc
pop
sub
add
add
cwtl
mulb
rcll
daa
out
sbb
dec
sub
test
xchg
insb
das
mov
push
cmpsb
xor
out
call
cmp
push
lock
or
inc
lock
add
les
test
mov
bound
popf
sahf
and
rclb
cli
mov
subb
iret
sub
lock
cmp
shrb
push
aam
jb
movsb
test
adc
ret
add
shrb
add
fisttpll
lods
xor
sbb
scas
out
sahf
sti
pop
int
adc
sbb
add
jmp
push
jl
hlt
roll
pop
repnz
pop
inc
push
shlb
pop
je
mov
enter
jmp
add
es
add
andb
test
add
jo
jo
add
xorb
jb
inc
loop
jo
adc
fwait
push
fcoms
cwtl
or
js
or
in
pop
cs
add
xchg
out
or
std
jne
leave
rorl
jno
fidivl
pop
xchg
sub
shrl
sbb
int
mov
or
imul
dec
adc
xchg
sub
mov
mov
or
orl
xchg
lret
push
mov
inc
cmpsb
xor
pop
lods
mov
ret
sub
mov
dec
cltd
les
xchg
stos
push
push
lds
lods
cmp
scas
aad
test
pop
push
jo
outsl
mov
push
andb
xlat
dec
push
and
inc
popa
push
fimuls
cs
es
jns
push
mov
sub
inc
pop
add
sub
mov
and
sbb
fisubrl
mov
push
or
into
push
mov
lock
out
mov
mov
jnp
loop
mov
mov
pushf
xchg
test
mov
and
xor
jo
fnstcw
pop
mov
push
cwtl
xor
pop
mov
cmp
adc
jo
outsl
push
mov
mov
xor
sti
incl
jmp
outsl
push
inc
add
or
lcall
inc
mov
jb
xchg
ret
and
and
loopne
pop
inc
and
out
int
call
push
lods
inc
pop
jp
inc
int3
adc
adc
xchg
xchg
cmc
inc
xchg
xchg
test
loopew
inc
push
mov
push
cmpsb
sbb
adc
movb
pop
test
sub
push
mov
popa
sub
out
add
addb
xor
adc
out
dec
adc
xchg
sub
cmp
dec
dec
mov
or
adcb
in
loope
pop
jno
rcrb
cmp
pop
into
lock
ret
push
repnz
sbb
or
scas
mov
call
push
adc
xor
dec
pop
and
add
push
push
cmp
movsl
outsl
les
lds
jo
xchg
ret
push
mov
xchg
push
int
sub
fs
inc
loope
test
mov
stos
jb
dec
mov
cmp
in
push
and
test
push
sbb
loope
mov
mov
fwait
xchg
pop
aad
adc
into
jp
mov
inc
mov
or
sbb
loopne
jo
cmpsl
popf
push
xchg
jg
int3
xor
push
push
rclb
daa
lods
lcall
push
cmp
inc
xchg
sub
jb
orb
or
push
popf
iret
jns
shll
cltd
jnp
inc
jne
push
pushf
incl
cmp
jmp
test
xor
push
loope
push
test
lcall
push
aad
sbb
add
sub
push
mov
add
push
pop
shrl
inc
push
push
sbb
adc
jo
or
adc
jno
adc
jp
add
leave
int3
in
xor
inc
inc
mov
dec
adc
test
cmc
mov
int
cwtl
sarl
pop
xor
push
pop
inc
mov
mov
dec
into
add
fwait
aad
sbb
add
imul
push
cmp
or
imul
sbb
jns
adc
and
jne
mov
mov
add
mov
pop
and
outsb
cmp
mov
outsb
jle
push
int
jbe
inc
push
imul
test
cmpsb
imulb
pusha
mov
int3
pop
icebp
subb
addl
aam
push
dec
sub
push
data16
sbb
pop
or
mov
push
mov
add
add
or
out
add
mov
dec
lea
or
test
lret
lds
mov
dec
xorl
ds
cmp
or
arpl
adc
fsubrl
rolb
mov
push
addl
enter
data16
adc
fndisi(8087
pop
pusha
mov
xchg
ljmp
add
push
adc
rclb
pop
orb
popl
dec
test
repnz
pop
or
ret
pop
pop
inc
xchg
pop
mov
leave
popa
add
cs
popf
cmc
in
mov
adc
xlat
or
loope
scas
mov
fs
call
push
cmp
add
mov
ds
or
add
mov
inc
sbb
xor
dec
aad
popf
xchg
sbb
sbb
adc
pop
cmp
mov
push
test
pop
xchg
push
jo
mov
in
inc
fcomps
jns
cmp
and
mov
out
add
lods
pop
scas
enter
shr
sub
cmp
scas
jle
cmp
jle
test
dec
push
adc
mov
jb
es
push
mov
out
in
into
loopne
into
in
inc
cmp
int3
inc
movsb
pop
inc
sub
pop
push
in
cmp
cmp
into
add
pop
stos
adc
mov
out
sbb
and
subl
mov
ss
cltd
jo
bound
test
fmuls
enter
xor
pop
scas
add
fdivl
inc
test
out
mov
ljmp
bnd
pop
push
xchg
stos
add
mov
mov
popl
pop
cld
sub
loopne
fwait
lds
dec
aad
or
and
adc
push
sbb
aas
test
dec
loopne,pn
icebp
inc
inc
sahf
push
jno
add
rclb
sub
cmp
addr16
adc
add
mov
cs
insl
jp
int
in
and
pop
int
mov
sub
or
push
hlt
and
jb
ljmp
dec
lret
mov
dec
test
adc
popa
lods
adc
cmp
movsb
jnp
mov
and
pop
imul
loopne
je
inc
push
pop
push
push
das
sub
mov
add
xor
mov
int
adc
push
lret
xor
popa
daa
inc
push
add
scas
fisttps
mov
ret
push
xor
orl
push
pop
cmp
jo
or
push
adc
mov
aad
fmull
xor
pop
in
sub
shrl
pusha
jb
cmp
arpl
xor
inc
test
xor
xchg
movsb
jnp
in
xor
dec
add
shrb
and
and
or
xchg
mov
jo
adc
scas
sub
dec
cmpsb
adcb
push
xor
add
pop
xchg
fldt
push
aad
aam
sbb
adc
cmpl
mov
jb
gs
inc
popa
shlb
or
mov
lcall
adc
jb
and
call
icebp
jb
adcb
sarb
mov
div
or
jo
fildl
jg
fildll
jbe
mov
and
cld
js
adc
lea
mov
add
scas
push
cltd
cli
or
inc
je
pop
add
stos
sub
cmpsb
lcall
lret
push
add
sub
xor
lcall
movsl
pmulhw
push
xchg
sub
into
iret
lock
mov
add
movb
aam
test
lcall
hlt
push
inc
scas
sbb
call
pop
pusha
add
test
insb
daa
outsb
icebp
pop
push
scas
cmp
scas
jno
popf
jo
xchg
ficompl
sub
test
inc
push
push
jp
dec
push
enter
test
int
sahf
enter
xchg
fldt
cmp
xor
cmp
mov
adc
popa
push
loop
jb
loop
add
push
cmpsl
shll
jo
mov
or
push
mov
push
out
pop
xchg
add
sbb
jl
adc
jmp
nop
sub
sub
in
cmp
cltd
adc
and
push
cmp
mov
mov
pusha
or
mov
mov
rclb
sbb
out
scas
xchg
and
xchg
or
int
and
sbb
sub
xchg
lret
add
inc
xchg
xor
aam
and
xchg
mov
imul
push
rorb
sbb
mov
sbb
mov
sub
adc
sbb
and
mov
mov
scas
or
nop
rcll
push
and
andb
adc
dec
add
cld
daa
nop
adc
or
pop
push
pop
add
lock
sbb
xor
xchg
adc
js
dec
push
inc
cmpsb
and
sub
xchg
sbb
jb
stos
push
sbb
sub
pop
test
push
push
test
mov
ljmp
adc
sbb
add
mull
shl
scas
mov
add
movsl
and
pop
je
pop
mov
push
popf
test
xchg
xor
pop
ss
push
lcall
and
popa
push
xor
cmp
addr16
insb
cltd
dec
fs
ljmp
and
popa
roll
out
int3
add
push
in
mov
jo
insb
dec
pop
pop
lock
adc
push
cmpsl
test
enter
mov
int
or
adc
push
add
xchg
add
push
inc
add
mov
inc
jb
or
and
push
push
je
fcompl
or
stos
loopnew
nop
add
inc
movsl
xor
jecxz
sbb
sub
insl
popa
test
adc
in
punpckhdq
xor
jbe
pop
cmpsb
mov
dec
pop
xor
inc
adc
repnz
xor
add
inc
push
pop
add
inc
data16
data16
stos
loope
testb
subl
cmp
ret
or
cmp
fdivs
inc
scas
mov
andps
pop
adc
addr16
jne
adc
adc
sbb
xchg
xchg
xchg
xchg
sbb
add
scas
adc
adc
repnz
aaa
add
inc
js
test
xchg
mov
ret
sti
outsl
xchg
adc
jae
mov
into
popf
mov
push
xor
aam
lret
add
pop
es
inc
dec
mov
mov
in
pushf
add
mov
xchg
loope
push
fisttpll
into
and
lret
les
int
adc
data16
inc
popa
or
xor
mov
mov
out
sbb
ret
xor
and
icebp
inc
stc
mov
inc
lahf
adc
cmpsb
out
cmc
mov
test
mov
dec
xor
mov
fistps
into
in
dec
xchg
ljmp
aam
fdivl
push
pop
jp
mov
sbb
xor
fists
test
jp
add
les
cmpsb
dec
shl
cwtl
lcall
sbb
jno
push
xor
jge
rorl
push
aad
andb
jg
loope
mov
mov
js
mov
mov
ds
jecxz
cs
xchg
mov
or
and
repnz
push
shrb
push
push
mov
scas
add
xchg
cmp
dec
inc
or
stos
adc
bswap
push
leave
fcoms
out
adc
arpl
sbb
aad
sbb
and
insb
adc
mov
jb
roll
or
mov
xchg
xchg
mov
sbb
add
aaa
xchg
popa
scas
out
add
inc
cmp
sbb
rcrl
faddl
lret
push
std
cmpsl
fs
in
xchg
push
lahf
mov
push
imul
iret
stc
adc
and
mov
ret
mov
mov
fs
ss
inc
xor
mov
sarl
sub
add
push
aas
jno
xlat
xor
mov
inc
adc
rcrl
xor
mov
jae
xchg
test
jb
sub
in
push
imul
sarl
cmp
jo
inc
stos
cmpsl
repnz
push
xor
jae
enter
out
push
aas
inc
mov
and
cmp
aas
scas
loopne
and
negl
add
mov
xor
lcall
fcmove
inc
pop
push
and
cmp
and
cmp
mov
pop
in
psubusw
hlt
push
cmp
pop
in
jg
mov
fs
push
mov
roll
inc
and
xchg
or
and
clc
xor
cmp
jb
imul
sub
or
rclb
push
mov
and
inc
cltd
and
jmp
inc
xor
in
fadds
scas
pop
lock
mov
xlat
or
inc
jae
pop
mov
or
enter
mov
lret
subb
adc
gs
push
add
or
mov
jo
popa
test
lods
int
push
sbb
xor
out
mov
push
mov
js
cmp
insl
es
or
xchg
push
adc
or
test
and
loopne
adc
mov
es
mov
push
cmp
or
aad
js
loope
xor
aaa
push
lods
push
adc
fwait
js
lret
sbb
mov
cmp
std
test
adc
test
out
xor
or
mov
cmpsb
shll
js
xchg
lret
sbb
daa
mov
leave
mov
fists
push
out
xor
leave
sub
pop
mov
mov
dec
cmc
cmpl
decl
push
shlb
xor
and
mov
and
push
pop
push
out
adc
jp
aad
orb
inc
enter
int
mov
loopne
add
es
xor
loopne
sti
lret
inc
jo
inc
mov
jnp
sbb
dec
rclb
inc
cs
call
lods
mov
sbb
sub
ljmp
sbb
test
pushf
sub
loop
lods
sbb
push
cld
push
orl
pop
cltd
or
push
dec
scas
dec
xor
adc
sbb
rclb
or
mov
insl
or
jb
mov
cmp
movsb
jge
movl
jo
ss
adc
inc
and
rclb
push
call
leave
pop
or
mov
daa
cmpsl
jmp
push
pop
in
in
aam
loop
roll
mov
mov
inc
es
jl
pop
add
loope
sub
mov
dec
jne
inc
pop
in
aam
jo
xchg
push
pop
sbb
mov
in
adc
add
pop
sarl
jp
cmp
push
add
leave
mov
pop
cmp
sub
es
adc
lods
call
es
xor
clc
mov
cmpsb
push
dec
ficomps
adcb
aad
test
loopne
mov
and
hlt
shlb
jg
pop
add
adc
sbb
lahf
int3
and
add
add
fdivp
or
add
inc
sub
mov
cmp
sbb
mov
add
mov
popa
lret
in
sbb
sbb
sbb
push
mov
cltd
jb
and
movsb
clc
nop
mov
push
in
shl
sub
mov
adc
or
shlb
pusha
mov
push
loope
push
fs
cmp
cmp
sub
cmpb
cmp
sbb
inc
sbb
gs
xchg
popa
and
cmp
push
and
scas
sbb
hlt
in
and
push
push
int3
push
mov
push
cs
mov
cmpsb
insl
add
cwtl
sub
push
ret
in
sahf
into
mov
bound
dec
pop
fwait
pop
adc
mov
or
sbb
dec
clc
or
mov
dec
lret
out
sub
adc
or
pushf
enter
cltd
shlb
mov
or
fsts
hlt
inc
push
sbb
dec
add
dec
cltd
rcl
ljmp
xor
mov
test
in
ja
mov
int
mov
in
loopne
js
daa
rcl
push
cmp
std
push
push
or
out
inc
jp
nop
mov
xlat
push
cmp
push
push
push
push
add
sbb
adc
cmp
and
push
or
inc
lret
popf
xor
xchg
xorl
jl
cmp
dec
repnz
cmp
adc
push
popa
les
ljmp
push
pop
pusha
xchg
addr16
out
xchg
test
enter
incl
lods
xor
sti
pop
sbb
cmpsl
add
inc
add
out
out
xchg
into
xorb
in
dec
retw
sbb
inc
rcll
push
mov
inc
and
dec
pop
dec
mov
aad
subb
inc
push
and
add
pop
add
mov
push
mov
inc
cmp
mov
inc
or
xchg
ret
insl
insb
adc
aam
add
in
ljmp
mov
inc
mov
cmpsl
jb
push
pop
popa
lret
xlat
jp
cmova
sub
shl
push
mov
pusha
orb
sbb
push
scas
sti
cs
jb
inc
xchg
pop
roll
notb
pop
mov
push
pop
cltd
pop
mov
imull
push
sbbl
or
xchg
fldl
push
xchg
imul
push
xchg
out
sbb
outsb
rcrb
push
jae
push
push
mov
into
xchg
sub
push
in
or
addr16
leave
rorl
lcall
pop
xlat
lock
or
loopne
add
push
int3
pop
test
inc
xor
pop
adc
adc
xor
or
inc
sbb
stos
rclb
inc
sub
mov
shl
cltd
ret
fs
inc
in
sbb
and
add
test
leave
imul
or
mov
jp
loopne
cmp
sub
test
gs
loope
sbb
adc
pop
aas
ljmp
ficoml
scas
jecxz
pusha
call
xchg
arpl
push
add
or
mov
pop
into
push
inc
adc
cwtl
test
mov
inc
add
iret
fists
push
add
xlat
add
xor
xor
push
jo
lret
push
int
inc
movb
mov
loop
dec
push
mov
out
or
adc
mov
inc
sub
ljmp
xchg
adc
add
mov
cmp
idivb
sbb
or
or
push
arpl
lods
cmpsb
bsf
mov
push
xor
data16
jno
jae
mov
adc
in
in
nop
pop
xor
int
xor
inc
mov
sbb
repnz
lret
mov
lods
push
mov
cwtl
jo
dec
mov
cmp
cwtl
push
dec
cmp
stos
inc
cmpsl
or
jo
adc
xor
push
cwtl
xor
push
insb
cmp
pop
dec
mov
repnz
movsl
sarl
jnp
cmp
outsb
mov
call
inc
or
sub
gs
test
add
orb
mov
test
sub
bound
rorb
out
mov
je
inc
or
xchg
adc
mov
add
mov
push
sub
xorb
push
jae
in
add
mov
mov
int3
in
adc
aaa
xchg
cmp
or
repnz
push
repz
pushf
or
fwait
test
mov
cld
es
or
add
adc
sbb
or
add
repz
in
nop
insb
clc
or
imul
scas
jbe
sbb
js
dec
pop
adc
in
cltd
movsl
or
mov
add
scas
dec
sub
data16
sbbb
jecxz
dec
dec
bound
xlat
decl
addb
mov
inc
inc
mov
xchg
mov
cld
cmp
addr16
mov
das
push
jbe
sbb
inc
daa
lock
ret
jo,pn
jb
cmpsb
jo
fs
or
xor
fiaddl
fisttpl
or
stos
inc
int
pop
rcl
pop
adc
inc
dec
xor
inc
xor
sbb
pop
add
test
or
or
sub
cwtl
mov
int
xorb
imul
mov
jo
mov
xor
jbe
loope
adc
shll
daa
mov
jp
mov
jb
mov
jo
lds
test
sub
stos
inc
in
aad
sub
test
ret
pusha
stc
repnz
enter
shl
shrl
mov
loope
aad
lcall
push
movsb
xor
inc
or
fisttpl
sbb
mov
push
dec
imulb
lahf
daa
int3
inc
mov
shlb
mov
cld
cmpsb
sub
xor
and
rol
add
push
test
add
and
mov
sub
inc
cmp
sarb
inc
push
sbb
pop
sbb
jp
sbb
cmp
icebp
lods
or
test
mov
inc
sub
cmp
loope
add
cmpsb
mov
in
orl
aaa
sbb
xor
in
cmp
std
rorb
push
out
dec
popa
test
adc
cs
test
xchg
mov
cltd
lcall
hlt
cmp
insl
sub
test
xchg
mov
mov
sbb
loopne
and
lds
adc
push
shll
subl
mov
inc
and
hlt
mov
and
mov
test
in
sbb
cmc
cwtl
jb
push
lret
xchg
adc
xorb
sub
pushf
and
gs
test
addr16
aam
pop
xor
add
mov
pop
cltd
add
aad
repnz
mov
xchg
or
pop
or
pop
sbbl
sub
test
mov
cmp
add
sbb
and
add
and
into
pop
add
ljmp
mov
inc
fs
mov
hlt
xorb
add
jb
pop
fnsave
adc
into
sbbb
sub
add
scas
push
cwtl
pushf
or
gs
in
cmp
repnz
jge
xor
lcall
insb
ljmp
in
cmp
dec
push
lret
fcom
cmp
subb
push
adcb
dec
push
mov
push
push
cltd
push
xor
ljmp
adc
rcrb
pop
xor
pushf
or
pop
cmpsl
and
idivb
jb
cmpsb
xchg
jne
cmp
add
and
sbb
dec
arpl
xchg
loopne
fnsave
inc
sub
inc
lret
xchg
test
cmpsl
mov
cwtl
sbb
rcrb
lahf
cmp
xor
jb
int
cmp
push
cs
jp
in
mov
sub
lret
jb
dec
push
sbb
gs
add
sbbb
jle
sub
push
cli
out
bound
lcall
inc
sbb
xchg
push
jne
mov
into
inc
int
push
xchg
js
add
out
cmp
aad
mov
in
mov
shll
adc
inc
in
add
xor
adc
es
push
or
shll
loopne
or
or
jae
or
push
fst
mov
inc
and
dec
mov
cwtl
and
xor
mov
rclb
push
loopne,pn
push
pop
hlt
daa
and
js
push
inc
or
push
sbb
or
aas
inc
xchg
add
push
les
addr16
mov
std
ret
nop
pop
xor
adc
xor
loop
popa
xor
gs
sub
mov
mov
mov
add
jo
ret
test
cmp
sub
mov
rcl
stos
popa
sbb
inc
outsl
jb
fs
es
inc
mov
stos
push
add
push
sub
push
orl
aam
mov
scas
loop
xchg
jb
faddl
push
xor
loope
inc
sti
cmp
add
ss
add
jmp
mov
stos
xchg
add
mov
fdivr
into
dec
clc
add
mov
jle
mov
repz
add
in
lods
mov
inc
jmp
adc
inc
mov
jo
sub
inc
addb
sub
adc
pop
xchg
pop
add
cmp
push
rcrl
push
fmull
cmpsl
js
jo
cmp
out
imul
sbbl
sahf
fisttps
aaa
mov
mov
outsb
mov
dec
adc
sub
loopne
into
cmpsl
push
pop
push
nop
cli
jg
add
daa
test
add
fdivrl
xchg
add
cmp
enter
icebp
int3
repnz
popf
mov
inc
and
pop
push
dec
add
adc
or
push
sahf
lret
mov
aam
out
mov
adc
adc
xchg
jp
jp
mov
cwtl
pop
scas
xor
insl
sbb
push
push
sti
aad
jo
sub
push
inc
push
cmp
test
jb,pn
in
cmpb
mov
add
pop
hlt
or
cmp
mov
js
aaa
icebp
mov
jp
in
or
xchg
jg
cmp
cmp
or
inc
xor
movsb
inc
scas
mov
call
cmp
xlat
sbb
adc
add
gs
push
rclb
cmp
mov
lret
xchg
mov
push
push
jne
loop
xor
and
sbb
cmp
sub
sub
add
cmpsl
imul
add
jb
mov
adc
adc
inc
pusha
mov
pop
mov
push
mov
dec
cwtl
jb
lods
cmpb
hlt
mov
xor
xchg
xchg
push
cs
scas
xor
mov
inc
sbb
cmpsl
jle
xor
jo
mov
pop
std
mov
ljmp
rorb
adc
xor
outsl
out
test
and
inc
stos
sbb
dec
cld
jg
push
std
jno
adc
sub
and
jno
xor
gs
add
mov
test
jle
or
push
stc
add
and
hlt
outsl
cmp
mov
adc
xchg
lret
gs
inc
enter
cmpsl
rcrb
mov
das
lret
xchg
or
loopne
push
mov
cmp
rorb
in
push
and
call
mov
loopne
shll
mov
sub
cmp
push
lret
nop
xor
xor
xor
sbb
cwtl
jmp
inc
jno
jb
pop
push
inc
ret
push
sub
xor
aad
add
subl
data16
out
xorb
popf
je
ret
nop
sub
and
sbb
sub
mov
and
test
rolb
jo
or
push
jo
or
push
mov
adc
pop
xor
sub
dec
fcompl
ljmp
push
data16
andb
push
enter
popa
pop
push
in
loopne
sbb
xchg
adcl
push
fs
pop
dec
rclb
mov
fstl
cmpsb
das
jae
and
push
push
adc
pop
gs
and
sub
sbb
add
jle
cwtl
cltd
sbb
aam
or
mov
jb
cmpsb
pop
loopne
inc
test
push
adc
pusha
jne
mov
ret
cmp
inc
cmp
loope
add
or
push
xor
push
xor
loopne
arpl
or
adc
jae
ret
loopne
rclb
in
fs
ret
push
popa
cmp
inc
out
in
xchg
in
movsb
lock
adc
and
push
sbb
loope
cli
push
xor
xor
push
loopne
push
je
pusha
enter
or
inc
dec
shlb
test
jo
jle
add
inc
push
cmpl
jb
scas
add
mov
pop
addr16
sub
jne
cmp
inc
cs
pop
subl
add
sbb
dec
loop
ljmp
roll
pushf
test
adc
sbbl
pop
jae
or
xor
jg
sbb
push
sti
stc
pop
daa
pop
sbb
sub
inc
mov
sti
andl
xlat
dec
mov
xor
xor
loopne
xor
std
in
xchg
enter
or
and
push
jae
sbb
pop
mov
enter
mov
mov
cmp
pop
push
sbbl
cmp
mov
or
mov
popa
stos
add
in
push
push
iret
and
xchg
out
dec
cs
loop
subb
add
lods
fs
push
cwtl
jb
xchg
and
test
cltd
stc
add
adc
cmc
jo
jo
test
sub
inc
into
dec
loop
push
mov
stc
cwtl
xor
cmp
adc
sub
sub
or
inc
ret
or
pop
pop
dec
cmpsb
mov
test
inc
lock
mov
in
scas
add
mov
push
js
loop
sbb
add
mov
sbb
or
or
adc
push
add
inc
mov
rorb
outsl
jno
pop
adc
jle
das
clc
jmp
adc
jbe
mov
mov
sbb
xchg
dec
dec
loopne
pop
lods
add
ret
jb
dec
push
sbb
xor
sbbb
mov
mov
add
aas
sbb
jnp
sub
pop
adc
lret
xorb
mov
xchg
push
sbb
inc
fstl
push
xor
xor
outsb
xchg
bound
push
inc
jb
call
mulb
in
loope
mov
or
fnsave
test
pop
rclb
jecxz
rclb
dec
inc
cs
sbb
mov
pop
xchg
and
cmp
es
mov
inc
sub
cmp
add
pop
pop
popa
loopne
jo
xchg
stos
ja
push
sub
mov
mov
add
sti
or
add
aaa
imul
sbb
stos
cmp
push
popa
cmp
pop
ss
adc
jmp
mov
jb
push
addr16
xchg
test
into
sbb
outsb
pop
push
xchg
and
add
out
cltd
lret
les
sub
inc
pop
lods
ret
scas
jo
push
pushf
push
loope
mov
mov
push
in
sub
jno
xchg
and
and
inc
jae
sbb
xor
and
stos
mov
fs
sahf
push
push
les
push
jg
push
loope
ret
aas
popf
fldl
add
mov
push
test
inc
sbb
leave
incl
scas
add
dec
add
add
call
rclb
xor
test
mov
adc
cmp
cmp
xor
or
roll
jae
fs
mov
lret
sahf
cmp
push
rolb
pop
test
xor
sub
jne
adc
je
pop
push
mov
int
daa
and
inc
sbb
loope
inc
xchg
fisubs
sub
aam
int3
inc
mov
cltd
add
cmp
sete
ds
ja
call
fsubrl
fwait
popa
stos
lcall
daa
xlat
xor
inc
push
sbb
sub
mov
add
js
daa
pop
jo
inc
int
or
cmp
shll
inc
adcl
ss
inc
mov
push
dec
inc
push
les
sub
jp
adc
faddl
stos
sarb
mov
inc
inc
mov
ret
adc
dec
adc
dec
xor
data16
mov
ficoms
mov
dec
push
cwtl
inc
or
sub
dec
in
mov
push
mov
cwtl
and
dec
xor
sub
sahf
in
inc
push
scas
loopne
or
shlb
add
in
mov
push
push
pop
ret
aad
sub
or
inc
sbb
pusha
sub
pop
outsl
ret
out
add
mov
mov
inc
push
and
dec
stos
rolb
rorb
jmp
add
int
adcl
sahf
insl
mov
call
ljmp
mov
or
subb
dec
imul
xchg
outsl
sahf
sbb
mov
aaa
jo
pop
jb
in
push
into
inc
scas
inc
inc
mov
push
add
jae
loopne
das
xchg
adcl
imul
in
add
ret
mov
sub
into
ja
xchg
adc
andl
shrb
sub
or
xor
dec
cwtl
andl
sub
dec
pop
pop
xor
adc
sbbl
stos
pop
filds
in
inc
dec
push
into
cmp
addl
test
ret
add
iret
lcall
mov
pop
push
sbb
add
or
mov
and
mov
inc
pushf
xor
sbb
mov
and
call
es
jo
fists
or
mov
cltd
push
or
adc
sahf
or
mov
andl
imul
xchg
inc
add
test
add
jbe
dec
inc
mov
adc
aad
inc
iret
adc
movsb
xchg
push
mov
lcall
jmp
and
pop
and
cmpsb
out
out
fwait
jno
xor
mov
ret
add
push
lea
cmp
rorb
ret
mov
test
loop
subb
mov
push
int
loopne
mov
cmpsb
ret
xchg
sbbb
cmpsb
subb
cmpsl
push
push
add
push
popa
sub
or
xor
dec
push
scas
and
nop
pop
jmp
cmp
stos
adc
call
pop
push
test
cmp
test
jmp
jl
out
mov
out
insl
mov
add
cmpb
dec
sahf
jnp
cmp
and
xchg
stos
or
mov
add
outsl
jbe
push
cwtl
or
or
jg
push
rcr
add
cmp
fidivs
or
enter
stos
icebp
and
aas
and
cmp
call
xor
sub
mov
mov
mov
mov
dec
jno
fists
adc
xchg
xor
jp
adcl
jecxz
sbb
shrb
and
outsl
dec
pop
sbb
sbb
inc
mov
add
clc
movsl
popf
lds
popa
test
cwtl
mov
addl
mov
inc
xor
xor
add
inc
lods
cltd
or
stos
pop
in
cvtps2pd
test
scas
add
andl
and
and
mov
xchg
movsl
jb
int
jno
cmp
stos
inc
sbb
push
push
xchg
and
rcrl
xchg
fildl
or
dec
xor
mov
dec
xor
lds
dec
aad
xchg
rol
in
mov
jns
sbb
and
inc
cmp
mov
es
push
adc
or
and
mov
jb
hlt
test
in
roll
adc
repnz
pop
cmp
cmp
or
in
inc
jb
test
push
aam
or
rorb
jae
mov
jmp
sbb
xor
inc
mov
into
sub
push
cwtl
and
or
roll
mov
aaa
call
mov
ljmp
out
stc
lds
sbb
add
mov
or
jns
outsb
sub
movsl
bound
pop
dec
inc
aam
aam
dec
cmp
add
add
mov
in
jae
pusha
inc
adc
stos
xor
xor
jge
dec
mov
das
lock
sbb
ret
movsb
cmp
xchg
loopne
push
add
push
js
and
or
rclb
sub
mov
jge
int
sub
or
or
mov
push
sub
in
fnstsw
loope
adc
inc
lcall
cmp
ret
mov
sbb
push
lret
and
xor
add
pop
xlat
js
adcb
xchg
es
push
adc
lahf
sbb
adc
sub
add
cmpsl
enter
jbe
jb
add
out
shl
sbb
mov
sbbl
shlb
andl
xorl
scas
loopne
pop
ss
jo
jbe
cltd
and
push
cmpsb
jne
add
sub
inc
add
and
adc
test
or
ret
sarb
or
sahf
cs
sub
sub
addb
or
mov
push
dec
mov
xor
enter
pop
mov
inc
loopne
ret
sub
xchg
push
dec
or
jp
stos
call
jne
hlt
pop
and
mov
fcomp
test
adc
cld
lahf
inc
inc
mov
push
mov
mov
add
mov
xor
arpl
push
cmp
pop
dec
icebp
test
sub
in
leave
jle
add
push
call
in
int
mov
sbb
decl
cld
rolb
pop
mov
mov
aaa
imul
fistpll
add
mov
add
add
es
mov
std
into
mov
or
add
mov
push
cmp
outsl
into
std
or
cmc
psraw
aas
sbb
mov
add
cmp
jge
idiv
lret
cmp
lret
std
out
pusha
sbb
inc
sub
pop
xchg
and
fwait
nop
out
imul
in
clc
out
pusha
or
jge
rdmsr
sbb
adc
pushf
leave
movb
mov
imul
es
fdivl
testb
in
mov
push
in
dec
mov
outsl
out
mov
mov
cmp
lods
jmp
mull
inc
pushl
mov
sahf
jl
loope
mov
fistpll
inc
mov
dec
lahf
shll
or
jg
jo
repnz
or
pop
jecxz
or
arpl
cmp
cmp
sub
push
add
arpl
jg
or
inc
mov
ds
je
cmp
xor
push
idivl
jo
sub
sbb
sbb
pushf
repz
daa
fucomi
fistpll
add
pop
int
lahf
xchg
push
xchg
fwait
stc
push
je
loopne
fwait
add
cmpsb
call
in
xchg
std
mov
push
test
stos
mov
or
les
lods
adcl
mov
inc
sub
ja
mov
sub
jecxz
fimull
out
aas
mul
cmpb
sbb
or
add
sti
into
std
scas
push
adc
aas
cmp
mull
pusha
mov
or
pop
fisttps
pop
aaa
mov
add
or
inc
loope
xchg
mov
jg
cmpsb
fucomp
jmp
mov
hlt
jb
fnstenv
mov
shlb
outsl
iret
std
sbb
adc
jecxz
sar
call
xorl
sbb
pop
jl
inc
xchg
icebp
idivl
add
rcrl
xchg
dec
push
in
mov
cmpsl
pop
dec
aad
cmc
stos
or
fdivrl
out
mov
xchg
pop
dec
or
adc
lds
cld
out
scas
xchg
jg
sbb
fistpll
cmp
xor
jns
je
out
inc
pushl
or
xor
inc
jo
jmp
fdivrp
aas
mov
popa
sub
pop
xchg
mov
xor
jae
int
or
bound
and
fsubs
stos
xchg
sbb
pop
je
std
sti
mov
ffreep
mov
mov
inc
xchg
or
scas
jg
dec
mov
and
mov
xor
pusha
xchg
stc
pop
xor
aas
xor
cld
aaa
negl
mov
clc
xlat
js
add
stc
sub
int3
mov
shll
cmp
add
js
call
test
pop
js
push
mov
hlt
out
push
filds
repz
lea
xchg
call
jmp
aad
xchg
insl
sub
rol
stc
xchg
inc
pop
jno
lcall
ja
jbe
push
jl
or
fnstsw
popa
inc
movsl
rol
mov
popa
dec
je
divb
das
dec
xchg
cld
shll
jae
andb
pop
mov
mov
ficoml
xchg
jnp
fidivrs
cmp
pop
sbb
in
les
int
xchg
mov
push
ja
shll
cmp
aaa
pop
fistpll
in
pushf
rcrb
data16
jl
mov
xchg
out
fdivr
xchg
mov
xchg
das
gs
out
lock
shl
imul
push
mov
cltd
xor
call
in
orl
mov
popl
int3
cld
push
jg
out
lea
pop
sbb
sahf
aad
sub
sbb
std
push
push
cmp
lcall
mov
aam
test
jbe
inc
lahf
xor
push
adc
and
jae
ret
out
cmp
mov
repz
icebp
mov
int
mov
hlt
pusha
or
cmp
pushl
jbe
fwait
cmpl
int3
scas
pop
stc
jae
out
mov
ja
std
cmp
jmp
mov
cld
pop
scas
incl
xlat
sub
inc
mov
xchg
mov
xchg
shl
jmp
mov
es
adc
cld
mov
sar
popf
sti
lret
test
sbb
int3
mov
mov
aaa
jno
cmp
test
dec
and
sbb
lahf
inc
daa
jns
fcomps
jg
clc
push
sub
adc
mov
je
out
fdivrl
ljmp
movl
push
sub
add
fwait
iret
aam
je
out
mov
jle
xorb
jb
add
fwait
daa
cli
pushl
sahf
icebp
xor
add
scas
std
icebp
jg
sbb
mov
sub
cwtl
cmpl
int3
cmpsl
and
sub
popa
shll
ljmp
arpl
push
push
xchg
pop
loopne
add
loope
adc
mov
fdivrl
mov
shl
pop
cmp
sti
fbld
decl
movsl
decl
or
jmp
jg
adc
mov
cmp
push
call
cmp
and
jmp
xchg
push
lahf
inc
aad
ficoms
stc
sub
pop
test
xchg
push
cmp
cmpsl
test
mov
pop
xchg
xchg
lahf
or
call
addr16
aas
mov
imul
rclb
lret
cli
call
and
dec
mov
imull
in
inc
cmp
fstps
adc
aas
ret
or
dec
outsb
loope
jo
imul
pop
jo
fisubrs
xor
dec
push
leave
lock
jno
cld
int
pop
push
add
rorb
leave
dec
jg
jge
fldenv
push
notl
int
pushf
rcrl
mov
mov
xor
sub
xor
add
adc
loopne
lret
push
dec
out
jl
std
ja
xlat
in
int
push
aas
outsl
pop
out
xchg
lcall
sub
dec
pop
mov
dec
in
stos
xchg
pop
fldl
stc
xchg
lods
adc
daa
clc
mov
mov
inc
cld
pop
loop
roll
push
test
add
movsb
js
push
test
xchg
jae
into
bound
mov
test
mov
jnp
call
sub
push
xor
pushl
or
pop
mov
sahf
call
push
fsub
or
subps
adcl
outsb
fldenv
and
mov
inc
add
ja
fdivrl
xchg
adc
addl
out
cmp
jle
lahf
pop
mov
or
mov
loope
fisubs
mov
mov
pop
sbb
pop
fbstp
mov
mov
and
jmp
add
ss
fidivrs
fcoms
imul
out
add
ret
aas
fdivrl
fdivrl
mov
or
mov
ficompl
inc
loopne
lret
pop
popf
fldcw
icebp
call
jns
dec
repz
xchg
negl
jmp
ret
std
xchg
xchg
test
out
leave
adc
nop
leave
xchg
js
jg
imul
stc
cmp
sbb
mov
loope
inc
mov
outsl
add
dec
in
enter
xor
cmpb
dec
xchg
mov
mov
xor
pop
and
fwait
shlb
cs
and
and
popf
add
and
xlat
nop
int
mov
fsubs
add
xchg
mov
sarb
dec
cli
icebp
adc
cmpsl
idivl
fmull
ret
or
cmpsl
xor
test
movsb
or
sbb
push
fstpt
ret
jge
pop
clc
cltd
sbb
push
je
push
test
filds
mov
cmp
movsl
mov
fstps
or
out
dec
mov
add
repz
and
cmp
aas
xchg
pop
xchg
push
mov
mov
xchg
adc
call
shrl
inc
inc
xlat
jae
imul
mov
repz
lret
jge
push
imul
sti
call
mov
orl
mov
lods
cs
mov
lret
ja
ret
movsl
inc
pushf
in
or
imul
test
mov
into
cmp
mov
push
push
push
enter
mov
enter
incl
push
push
into
cltd
imul
jb
jg
sub
dec
and
xchg
xchg
stc
or
lock
cmc
bound
ja
pop
imul
pop
add
shlb
loopne
xchg
mov
lods
repz
test
negl
sti
mov
jge
mov
fistps
daa
sbb
cmp
cltd
js
jg
imul
icebp
fisttpll
sbb
jne
inc
jo
ja
dec
stc
add
hlt
lret
xchg
fcoml
adc
dec
test
decl
lcall
nop
pop
gs
adc
shll
aam
xor
das
out
add
mov
mov
or
inc
mov
into
pusha
adc
insl
cmp
xlat
cmp
aas
mov
mov
cmpsl
enter
test
bswap
fstps
add
jge
cmp
loope
pop
sbb
loope
pop
xor
adc
mov
pop
dec
mov
icebp
add
dec
add
cmp
shrl
clc
aas
pusha
inc
shrl
push
mov
or
jo
call
fisubrs
out
loope
pop
pop
and
jecxz
out
lock
std
repz
mov
testl
add
jg
sti
and
test
xchg
shl
std
aaa
imul
add
pop
jbe
imulb
decl
psrad
fbstp
ss
mov
inc
insl
fmull
pushl
seto
pushf
movsb
loopne
rolb
push
and
jae
and
push
inc
rorl
decl
pop
fidivs
jae
lds
rolb
and
xchg
pop
aad
aas
push
dec
and
xchg
ja
xchg
leave
outsl
test
faddl
sti
testl
xchg
sahf
in
xorb
addr16
bound
fwait
push
sub
mov
in
cs
cmp
mov
mov
das
cmpsl
negl
mov
mov
test
std
outsb
jmp
in
jmp
popf
pop
ror
in
ret
xchg
in
in
jecxz
dec
jbe
aad
pop
mov
xchg
stos
std
sub
or
push
js
testb
lea
mov
sbb
out
std
std
or
lock
sbbb
stos
fcmovnb
mov
pop
ud0
lock
lods
push
add
jo
pop
clc
out
clc
or
ret
lret
dec
stc
dec
clc
daa
fdivr
cmp
jp
je
jns
mov
inc
jmp
jge
jb
dec
sub
fucom
incl
stos
cs
stos
dec
inc
int
jo
cmc
adc
hlt
daa
lock
addb
jns
out
push
test
add
xchg
push
ret
jno
mov
xchg
sub
xor
nop
lods
arpl
out
lret
xorl
cmp
repnz
mov
jg
mov
cmp
pop
pop
pop
sub
out
or
pop
jns
push
pushf
stos
jbe
dec
out
mov
inc
loope
and
scas
pop
inc
andb
mov
sar
mov
cmp
mov
cmpsb
jo,pn
push
in
mov
pop
jg
cli
out
imul
mov
xor
lcall
jge
sbb
jo
xchg
shlb
das
imull
ja
mov
adc
stos
inc
sbb
xchg
int3
dec
mov
xchg
jne
push
adc
jmp
clc
in
sbb
mov
daa
aam
repnz
fistps
insb
mov
bound
loopne
ret
add
cltd
pop
adc
mov
inc
xchg
sbb
or
test
pop
int
mov
sub
leave
aaa
loope
popa
push
dec
je
idiv
ret
push
pop
xchg
repnz
cmpsl
pop
aaa
popa
je
dec
jg
jg
push
pop
adc
pop
out
lahf
cwtl
push
or
or
sbb
ljmp
lock
jl
jb
mov
pop
cmp
out
std
fsub
push
add
adcl
lods
out
outsb
adc
in
cmp
cmp
icebp
test
sub
out
mov
cmp
pop
mov
push
test
push
test
into
movsl
divps
pop
shl
fdivrs
roll
add
adc
cltd
cmpsl
add
std
xchg
daa
mov
aas
push
fsubrl
adc
insl
sbb
jp
out
mov
sti
cmp
ljmp
push
leave
negb
dec
cmp
sbb
int3
inc
mov
sub
xor
and
int3
pop
test
fiaddl
js
jmp
and
sbb
add
mov
adc
xor
ret
std
cmp
dec
loop
lcall
pop
mov
outsb
push
sarb
inc
dec
enter
dec
popf
pop
adc
out
push
pop
loopne
lcall
mov
inc
inc
mov
mov
ja
out
insb
dec
lahf
mov
add
clc
subl
pop
stc
ret
add
mull
in
lock
fsubr
dec
fs
sub
lods
sahf
jge
cmc
xchg
pop
add
jbe
cld
mov
je
mov
icebp
aaa
add
mov
mov
pop
push
lcall
jne
mov
fs
lcall
add
mov
in
jno
mov
mov
stos
incl
dec
outsb
jo
aam
cmp
into
std
idiv
ret
mov
ret
rorb
test
cmc
cli
cmp
jb
jno
push
hlt
dec
mov
inc
clc
scas
add
lods
push
cmpsl
dec
pop
push
inc
cmp
aas
sbb
mov
js
pop
cmpsl
add
and
pop
sti
jg
add
sbb
in
cwtl
fidivl
repz
daa
push
lock
and
jecxz
sbb
ja
mov
cmp
pop
pop
sbb
sub
and
mov
dec
cmc
cmp
cmp
xchg
aas
dec
jns
gs
cmc
push
pop
mov
movsl
jnp
jp
jb
test
pop
cmp
jl
sbb
in
pop
sahf
cmp
inc
scas
call
in
jle
popa
pop
and
bound
push
push
fstpl
sub
out
mov
imul
lock
les
jl
out
std
sbb
jne
adc
divl
addl
mov
das
aas
mov
jno
pop
add
or
mov
int
mov
ljmp
icebp
sbb
fdivs
xor
or
lret
lret
mov
inc
push
sub
mov
dec
inc
das
push
call
mov
ret
lret
sbb
pop
ljmp
mov
pop
mov
je
inc
adc
pop
orb
loope
cwtl
aad
imul
std
inc
mov
lods
mov
idivl
std
cmp
sbb
sub
lcall
psraw
and
scas
jnp
cwtl
add
int3
jne
addr16
pop
scas
sbb
pop
adc
sahf
or
and
mov
or
jmp
std
jle
jmp
sti
jg
test
mov
jne
push
ja
int
xchg
ljmp
mov
insl
stos
or
std
idiv
cmp
pop
out
fimull
jp
jl
push
ret
sbb
adc
cmpsb
in
jp
fs
addr16
sub
in
cmp
push
jmp
cmp
testb
lret
cmpsl
jmp
std
cmp
inc
pop
pop
stos
or
or
cmp
incl
xchg
push
jae
xor
jp
lahf
std
popa
leave
fistps
clc
adc
xor
cli
pop
repnz
test
inc
test
aas
xorb
sbb
mov
idiv
mov
fistpl
and
ret
fists
adc
stos
gs
xchg
jp
call
add
xchg
pop
mov
push
push
popa
add
clc
xor
mov
jno
call
in
adc
xchg
or
mov
clc
sub
incb
ret
mov
push
int3
dec
jmp
sar
pop
fcmovnbe
and
into
repnz
cwtl
lea
out
and
lahf
inc
ffreep
jnp
in
sub
hlt
arpl
xchg
in
xchg
shr
lods
int
sub
jge
shll
js
inc
xchg
xchg
sbb
in
clc
mov
aad
pusha
stos
jg
call
or
insb
cmpsb
ja
leave
out
dec
fistpll
dec
out
test
lea
push
loopne
push
jmp
xor
adc
cli
mov
mov
fistpll
lock
xchg
ja
jp
jmp
sbb
adc
out
aaa
xlat
dec
sub
xorl
loopne
int3
das
adc
movsl
sbb
xchg
sahf
cs
sub
dec
lds
jmp
les
xchg
dec
sahf
add
mov
scas
subl
add
cltd
jmp
sti
fcos
lahf
out
inc
adc
dec
ljmp
push
pop
sahf
sbb
decb
es
bnd
stc
or
xchg
call
mov
pushl
mov
imul
mov
test
xchg
scas
fstpl
jmp
cli
mov
add
fmulp
sbb
les
xchg
mov
pop
rcrb
call
mov
movsl
add
mov
pop
outsb
push
xchg
adc
sub
dec
mov
loopne
cmpsl
mov
insl
aaa
nop
icebp
xchg
jnp
fisttpll
rorb
sub
cltd
cmp
imul
lcall
jnp
cmc
dec
sbb
pop
cli
pop
pop
lcall
push
mov
push
sub
dec
jge
push
ss
cld
adc
call
pop
push
add
arpl
notl
cmp
or
data16
fildl
fwait
icebp
in
sbb
sbb
push
fucomip
out
or
rorl
pop
and
aaa
insb
adc
jns
shll
pop
inc
in
push
cmpsb
dec
or
loopne
pop
incl
repz
aad
stos
add
bound
cli
xor
or
xchg
sub
cld
lret
loopne
mov
mov
jo
jecxz
iret
sbb
adc
das
les
pop
add
mov
lea
lahf
add
into
shll
scas
dec
dec
lds
jg
xor
imul
adc
je
adc
inc
aas
inc
out
lcall
mov
sti
dec
popa
sbb
pop
in
shl
clc
fcoml
mov
frstor
lods
lock
loop
sub
fldt
inc
adc
in
in
dec
cli
xor
push
insb
leave
mov
scas
out
imul
jle
or
xchg
stc
sbb
jl
mov
fnstsw
and
out
fidivs
mov
loope
clc
lea
adc
pop
aam
pop
fcmovnu
pop
jae
cmc
pop
add
js
xor
xchg
mov
jo
cmp
push
adc
mov
inc
in
mov
mov
orl
leave
pop
jb
aas
adc
or
push
hlt
mov
fbld
sar
jl
push
ljmp
sahf
shrl
adc
sbb
jl
fdivl
cmp
insl
or
lds
clc
adc
nop
pushl
cs
test
enter
std
arpl
and
fwait
es
xchg
adc
in
fnstsw
add
fdivrs
stos
or
mov
shlb
cmp
test
inc
xor
dec
pop
leave
xchg
xchg
std
mov
in
ret
mov
cmpsb
or
nop
pop
popf
mov
inc
fmul
push
shll
stc
ret
cmp
xorb
in
jl
jle
inc
arpl
or
ja
inc
push
add
mov
int3
jmp
call
mov
adc
cmp
pop
fisubs
scas
hlt
fwait
push
enter
fsub
add
inc
inc
hlt
test
and
pushl
cmp
int
xor
pop
mov
dec
inc
mov
movsl
jmp
lcall
fdivrp
insl
add
push
jb
sbb
xchg
mov
xchg
adc
repnz
gs
out
cmpsl
mov
mov
fs
imul
add
loop
das
cli
lahf
xor
push
xchg
jle
dec
mov
cltd
mov
jg
jg
mov
int
mov
sub
aaa
bound
lahf
clc
push
mov
loop
dec
or
outsb
cmpsl
ret
rolb
div
cmpsb
mov
and
xchg
mov
imul
ljmp
lret
fistpll
mov
popf
jp
pop
mov
pop
sbb
std
xchg
stos
and
mov
pusha
adc
jne
pop
xor
outsl
adc
fdivrl
adc
aas
fcoms
inc
adc
ljmp
fldl
insb
push
xor
das
add
pop
push
mov
sti
jecxz
push
pop
hlt
xchg
out
add
popa
inc
addl
out
imul
std
and
jo
ja
ljmp
cmp
cmpsl
mov
and
stc
ret
jno
rorb
std
out
into
loopne
jns
mov
and
cmp
jae
push
xchg
cwtl
das
inc
adc
sbb
cld
adc
mov
mov
sub
cli
jmp
scas
cmpsl
push
cmpsl
fstpl
or
xor
cmpl
jae
int3
mov
fisttps
shll
sub
outsl
xor
sub
insb
inc
into
adc
xchg
aas
pushl
in
pop
repz
sub
push
push
outsl
je
lret
fadd
pop
js
or
clc
shlb
push
inc
jno
pop
in
je
pop
subl
add
jle
test
push
push
mov
negl
out
aas
pushf
je
shlb
rcl
add
adc
xchg
xor
dec
xor
inc
ljmp
dec
add
repz
sahf
push
ret
pop
jmp
aas
sti
clc
popf
out
or
test
pop
add
inc
mov
dec
push
pop
aad
adc
decl
xchg
sub
xlat
mov
aad
xchg
push
push
mov
jne
lret
push
icebp
pop
xor
jle
dec
jge
cmp
negl
out
lea
dec
jne
femms
je
faddl
jge
rcr
dec
fistpl
sti
hlt
sub
cmp
shrb
sbb
andb
push
aad
cmp
sarl
xchg
sbb
pop
jb
pop
mov
data16
jg
mov
cltd
movsb
iret
adc
and
add
data16
push
sbb
fistpll
adc
cmp
push
out
pop
fdivrp
cmp
cmp
mov
fisttpll
filds
loope
pop
stos
lods
jnp
sbb
xor
jge
jae
sub
in
xchg
ds
mov
imul
mov
inc
dec
bound
lahf
cmp
aas
ret
out
rcll
ljmp
mov
cmc
cmp
jae
ret
cwtl
jmp
cmp
cmpsl
cwtl
pop
fidivl
sub
mov
push
rcr
pop
adc
xchg
mov
xchg
sub
in
pop
mov
add
mov
stc
out
not
mov
sahf
dec
scas
pushl
lcall
push
pop
cmp
adc
sti
mov
jnp
cmp
sbb
fcomip
add
daa
cmp
push
loop
rclb
sub
push
les
icebp
push
cwtl
sub
test
adc
xchg
imul
mov
movsb
in
push
mov
xbegin
popf
cmp
in
fstpt
sti
inc
dec
mov
inc
pop
add
std
pop
dec
popa
mov
sti
lock
sti
adc
test
out
aas
jg
lock
aas
and
jg
jp
data16
repnz
jb
stc
dec
imul
clc
clc
call
inc
iret
repnz
in
aas
pushf
sbb
les
jno
jne
popf
sar
arpl
mov
ljmp
push
imul
xor
mov
xor
xor
push
mov
sbb
cmpsb
xchg
js
nop
mov
call
jns
sbb
jmp
xor
aaa
lea
inc
add
jp
lock
mov
call
pop
jg
push
fwait
dec
fildl
pushf
xchg
xor
inc
xchg
ljmp
movsb
sbb
mov
jns
jmp
push
add
dec
ljmp
xor
mov
jl
mov
test
out
xchg
subb
popa
mov
aaa
push
sub
cld
in
xchg
sub
shll
push
js
mov
lea
int
inc
int3
ds
cld
pop
jl
jno
outsb
xchg
adc
adc
xlat
push
test
or
and
sti
xchg
sbb
out
sahf
lret
dec
es
inc
cwtl
adc
iret
fidivrs
aad
cmp
leave
das
incw
adc
mov
mov
push
pop
decl
mov
dec
push
outsb
jge
fcmovu
sub
lahf
fisubrs
test
mov
icebp
test
dec
outsb
mov
dec
fcoms
ret
loop
lock
subl
testb
dec
ljmp
jp
jae
mov
std
sbb
jo
int
adc
hlt
ds
cld
cs
cli
xor
fnstenv
jns
add
leave
xor
and
inc
sbb
jns
jmp
incl
ja
or
fisttpll
or
aas
sbb
pop
cmp
fs
push
sbb
out
lahf
lock
lock
call
loope
movl
dec
push
ficoms
out
ret
or
ds
fidivrs
adc
pop
jl
jmp
scas
decb
adc
cmpl
adc
jg
je
xchg
fs
cmp
mov
aaa
sub
pop
lret
and
jo
jmp
fsub
aas
loopne
sbb
cld
and
adc
pusha
add
add
jno
xchg
shll
and
jg
pusha
pusha
rorb
push
and
cmp
add
pop
aas
fdivr
add
jns
pop
inc
dec
dec
jge
mov
adc
lahf
stos
nop
cmp
pop
stc
outsb
lds
cli
scas
pop
repnz
dec
stos
insb
mov
fildl
inc
pop
repnz
or
lahf
std
idiv
push
or
popa
fiadds
and
in
sahf
fadds
xchg
out
cmc
fucom
mov
ret
repnz
aam
dec
cmpsl
out
cltd
leave
xchg
dec
or
xchg
test
idiv
pop
enter
cmp
sub
cld
mov
pop
sub
aas
fdivrp
dec
out
fidivs
jnp
push
inc
shl
fsts
lods
dec
xchg
out
hlt
and
repz
outsb
mov
in
imul
and
lcall
xlat
pop
and
sbb
mov
test
out
std
addr16
cmp
cli
fistpl
pop
test
dec
test
movsl
xor
pop
push
xchg
stc
clc
jbe
xchg
vminps
dec
stos
pop
jmp
mov
sub
shll
mov
frstor
aas
incl
popf
cs
out
imul
sbb
and
dec
or
insb
cmpsl
add
jno
aas
add
scas
add
shr
pop
mov
out
push
decl
enter
seta
jo
jl
out
pop
mov
sbb
mov
sbb
adc
pop
sub
sub
xor
inc
xor
adc
call
outsl
sbb
mov
mov
inc
jecxz
dec
rcrl
mov
ss
mov
stos
addl
pop
cld
inc
ret
mov
jecxz
xor
sub
lea
xchg
or
inc
in
cs
mov
mov
and
mov
pop
dec
jg
pop
shl
xor
mov
outsl
ljmp
out
leave
or
mov
mov
xchg
lahf
scas
push
cli
xchg
sbb
test
mov
add
std
or
pop
pop
and
jge
lock
sti
cmpsl
mov
rcll
movsl
and
out
rorl
arpl
mov
inc
mov
clc
into
std
xlat
not
loope
pushf
out
in
cltd
cli
cmpsl
xchg
push
push
sub
adc
dec
mov
aas
mov
sti
add
mov
jmp
mov
stos
inc
arpl
sbb
fildll
or
mov
jmp
push
fcmovnb
pop
mov
mov
pop
inc
xor
xor
mov
mov
sbb
rcrb
add
popa
xchg
inc
push
cli
jnp
lret
jp
pop
jp
jl
mov
test
cmp
loopne
mov
push
leave
sarb
and
outsl
jne
jle
loope
sbb
and
decl
hlt
stos
stos
icebp
inc
add
inc
push
lods
cltd
dec
out
mov
fwait
mov
sub
mov
dec
out
jmp
and
mov
pop
push
hlt
inc
pop
in
add
mov
jnp
inc
or
sahf
sarb
nop
scas
fdivp
pop
test
mov
es
xlat
stc
jle
jl
mov
cmc
jmp
pop
or
add
push
and
clc
call
jno
and
mov
dec
mov
sbb
iret
xor
fucomip
cltd
movsl
clc
arpl
enter
mov
jg
and
stos
push
jmp
ret
vpmaxub
enter
add
push
jbe
loope
nop
scas
push
push
dec
xchg
sbb
jg
outsb
popf
push
mov
sbb
cmpsl
inc
stos
incl
int
cltd
jno
xchg
pop
fwait
push
or
fists
clc
cmpsb
pop
das
cmp
daa
stc
dec
lret
or
das
push
push
leave
enter
aas
fs
lods
std
xor
ds
lods
dec
sub
in
in
sub
icebp
dec
lock
xchg
sub
mov
jne
movsl
fbld
call
dec
test
or
dec
icebp
shl
popl
sub
movb
cs
mov
test
sbb
test
decb
cld
add
bound
cmp
sbb
push
cmp
and
aas
xchg
icebp
xchg
cmp
push
mov
cmp
cli
jmp
je
cmpl
and
jbe
lods
lea
sarb
mov
or
cltd
cmp
fimull
cmpsl
xchg
decb
mov
mov
loope
clc
add
add
xor
dec
xchg
xlat
jnp
pusha
xchg
xchg
stc
scas
xchg
inc
xor
je
cs
xchg
jmp
les
ror
pop
lahf
xlat
clc
mov
in
pop
adc
pop
aas
lds
popf
mov
sbb
push
adc
aas
inc
pop
push
rorl
cs
jecxz
sbb
mov
popf
out
lods
daa
call
mov
ja
shll
hlt
add
loopne
clc
xchg
rcrl
andl
lock
bound
push
mov
inc
sbb
out
adc
test
int
pop
fwait
inc
push
xchg
insb
xor
out
push
mov
pop
scas
push
shlb
mov
adc
ret
cmp
inc
push
dec
pop
or
dec
jnp
push
mov
fdivr
js
pop
or
dec
lock
fbld
test
cmp
int
adc
pushf
insl
loope
sbb
xchg
shlb
mov
lret
add
cwtl
loope
xchg
ficomps
rol
xchg
test
pushf
das
jle
inc
add
pop
aad
cmc
pop
push
orl
cmp
mov
ss
std
scas
bound
mov
mov
mov
xchg
pop
fnstcw
add
shll
jecxz
inc
es
jecxz
out
jle
dec
push
insl
shlb
call
xchg
ja
ud2
decl
mov
push
call
movl
or
adc
loop
cmp
mov
aas
js
dec
xor
or
xlat
js
mov
popa
in
pop
jl
and
imul
push
je
in
and
jl
incb
jge
movsl
add
cld
dec
adc
cmp
roll
repz
add
std
sub
push
cmpsb
cltd
add
lock
sbb
mov
push
push
mov
dec
in
test
test
rcr
loope
or
fwait
std
cmp
mov
aad
jbe
std
into
pop
hlt
mov
ss
mov
call
jle
loop
xor
add
jo
leave
pop
hlt
inc
clc
arpl
xchg
push
pshufw
outsl
lahf
clc
sbb
sahf
pop
xor
jl
xor
aam
push
jle
stc
in
icebp
out
sbb
cmp
aas
jecxz
fwait
imul
mov
lock
push
mov
xlat
jecxz
jnp
aad
and
xchg
ret
cli
push
push
mov
push
gs
dec
out
dec
mov
push
ss
add
mov
and
mov
imul
ljmp
pushl
sbbb
mov
gs
inc
test
clc
and
push
mov
push
mov
pop
cmp
mov
jle
in
and
and
icebp
flds
jnp
sub
inc
adc
jecxz
std
sahf
arpl
gs
stos
rclb
add
or
mov
push
sub
mov
incl
shrl
fsubl
movsb
jle
decl
test
pop
mov
xchg
test
sahf
ja
push
or
lret
xor
stos
out
hlt
mov
dec
push
add
xor
call
pop
lock
push
insb
ds
out
cmc
and
cmp
push
and
hlt
mov
das
jo
xchg
lea
inc
jmp
aaa
sbb
ret
inc
adc
and
pop
or
test
out
push
sub
add
pop
call
lahf
jecxz
mov
rorl
ret
xchg
and
sub
ds
adc
pop
je
mov
pushf
js
jg
jg
std
jmp
stos
and
jae
cld
mov
sahf
sub
in
mov
cltd
adc
stos
dec
or
mov
jg
aad
add
mov
mov
jmp
aad
mov
dec
aam
sbbb
jno
push
mov
hlt
lods
sbb
jns
clc
dec
lcall
adc
adc
mov
jbe
out
aad
std
add
orl
xchg
jp
push
xchg
sub
push
inc
popf
lret
cmp
xor
arpl
dec
pop
std
pop
mov
sub
pop
mov
push
lock
decb
dec
scas
or
ljmp
xlat
pop
sahf
push
jg
push
stc
jge
push
xchg
inc
loop
cmp
inc
inc
cltd
push
fcos
std
pop
add
jo
ss
and
lods
sbb
gs
jb
add
idivl
int3
mov
push
and
popf
clc
pop
jecxz
iret
fbstp
sarl
mov
stos
lods
xchg
xchg
aas
inc
jns
mov
mov
sarl
and
adc
jo
shl
stc
inc
xor
cmc
xor
aaa
stos
ret
divl
mov
xor
pop
and
daa
hlt
jg
sbb
mov
jo
or
sub
jnp
mov
in
pusha
rcl
cmp
inc
js
mov
sbb
std
add
in
cmp
loopne
mov
out
inc
imul
ds
test
sbb
and
out
bound
scas
pop
stos
inc
insb
std
sahf
jecxz
ret
call
jae
adc
popa
jno
pop
mov
jo
icebp
jae
cmpsl
push
cli
xor
popf
sbb
jmp
stc
xlat
pop
in
jle
or
fcos
mov
test
into
ss
adc
mov
sbb
loop
mull
push
mov
stos
jmp
fbstp
xchg
and
sti
pop
fcoms
les
cmpl
aas
adc
icebp
dec
inc
sub
jg
jg
fistps
xchg
ret
ror
inc
cmp
in
stos
ljmp
shrl
sbb
pop
adc
xchg
xchg
outsb
ja
lcall
or
mov
mov
dec
mov
push
leave
das
jno
out
adc
mov
cld
push
push
inc
cltd
jae
int
out
lock
lods
cld
rorb
scas
cld
sbbl
aam
cwtl
and
pop
pop
cs
cmpsl
push
fcmovne
leave
cmc
push
adc
adc
test
ficoml
sarl
clc
xchg
or
sahf
cli
xchg
fistpll
aas
pop
mov
jne
xchg
nop
and
lcall
sub
nop
mov
dec
add
stc
pop
data16
mov
xor
stc
mov
je
xor
ljmp
inc
lret
push
or
scas
lock
and
or
mov
stos
negb
jno
pop
dec
rcrb
insl
pop
xchg
xchg
sbb
ja
cmp
xchg
push
fdivl
mov
cmp
add
mov
icebp
jb
and
cld
or
xchg
sub
pop
icebp
sub
adc
add
pop
pop
or
shlb
xchg
pop
decl
pop
xor
jp
ja
or
mov
pop
neg
outsl
push
dec
ljmp
cwtl
andl
cld
test
pop
loopne
add
ret
gs
pop
decl
push
clc
add
pop
jne
jne
mov
int
cmp
dec
cld
pop
stc
fldenv
dec
filds
adc
sahf
mov
dec
out
sub
xchg
mov
out
dec
stos
out
rorl
idiv
fistpll
sbbb
mov
inc
mov
sti
lcall
popa
dec
int
dec
decl
or
lahf
dec
rclb
in
mov
xchg
les
jle
push
scas
mov
cmpsl
fxch
sahf
ret
pop
mov
add
jno
outsb
dec
dec
lds
ljmp
ljmp
or
dec
xchg
dec
ja
int
sahf
cld
out
add
fdivp
adc
lods
inc
sbb
mov
pop
push
cli
pop
stos
add
ljmp
pop
or
rcr
sti
cmp
loope
cmpsl
scas
out
fsubrl
pushf
or
incb
xor
or
sub
iret
sahf
adc
jmp
mov
aas
jmp
xor
xor
pop
outsb
imul
mov
ss
loopne
je
aam
popa
add
mulb
shrb
aas
add
mov
jmp
lods
lods
dec
push
pop
sar
and
dec
verr
daa
cmp
xchg
cmp
xor
sub
mov
sti
scas
push
loope
pusha
cwtl
fdivr
lods
outsl
enter
ja
shrl
push
lock
xor
dec
fcomps
mov
scas
jmp
dec
aad
cmc
scas
int3
pop
fbld
mov
pop
stos
push
adc
test
shl
mov
mov
push
bound
jle
sub
xor
mov
lidtl
mov
lds
sub
insb
les
in
sti
push
pop
inc
add
jge
or
dec
push
xchg
mov
jl
cmc
and
lods
sub
sahf
xlat
pushl
mov
iret
jle
fsubrs
ret
add
jnp
mov
jno
faddp
mov
mov
mov
aas
arpl
mov
mov
push
lock
dec
mov
call
pop
and
loopne
xor
mov
mov
dec
iret
fistl
sub
pavgb
adc
cmp
cwtl
jns
idiv
aas
push
fidivrs
mov
pushf
ja
adcb
insb
xchg
sub
mov
jno
cmpsl
dec
push
fidivl
inc
rcr
mov
je
nop
aas
and
out
pop
mov
mov
dec
sbb
or
xchg
out
sub
addr16
push
movsb
push
push
or
fistpll
clc
outsb
movsb
fisubrl
xchg
int3
adc
test
fistps
sub
repz
fs
clc
das
adc
lock
pop
or
aam
and
jg
and
imull
rcrb
int3
out
lret
ret
pop
stos
rorl
or
lahf
sti
xchg
xchg
pop
and
divb
pop
mov
dec
add
arpl
add
jnp
std
cmp
jnp
add
insl
add
inc
popf
arpl
sbb
mov
in
and
push
xchg
mov
scas
lds
test
je
sbb
ljmp
gs
imul
mov
ror
xchg
int
or
addr16
sahf
stos
shl
popl
pop
daa
lahf
add
add
cwtl
loop
xchg
mov
aaa
mov
cmp
fidivs
ret
mov
ret
mov
cld
ret
jmp
pusha
repz
in
and
and
push
mov
inc
mov
mov
pop
cmp
mov
cwtl
jb
add
popl
aad
mov
cli
xchg
adc
andl
inc
sub
mov
mov
xchg
int
psrad
mov
mov
imul
sbb
mov
cwtl
cmc
xor
in
sbb
aaa
aad
movsb
lahf
mov
jmp
xlat
sub
sbb
aas
call
jbe
push
mov
sub
push
ja
out
icebp
cs
add
jl
mov
inc
sbb
jmp
insb
loop
pop
scas
aas
or
mov
stc
jle
dec
aas
iret
cs
lock
loopne
std
sbb
outsb
push
sti
sbb
adc
sbb
fdivrs
neg
mov
pop
stos
push
cmp
jo
out
xor
add
out
fistpll
mov
push
dec
dec
xor
jge
loop
mov
into
enter
xchg
subl
mov
pushl
scas
leave
in
pop
mov
pop
mov
je
das
push
cmp
js
lea
das
inc
mov
arpl
loopne
cli
sbb
jne
dec
xchg
aas
inc
ss
fdivrl
cmp
testl
pop
cmp
call
cmc
mov
mov
adc
ss
add
sbb
xchg
sti
enter
jmp
inc
popa
ds
lcall
push
lea
dec
jl
inc
jmp
shrb
pop
and
pop
jp
icebp
xor
outsl
sub
mov
vmovntps
push
dec
scas
std
in
cmp
loop
pop
in
out
cmpsl
dec
sbb
dec
lcall
mov
mov
pop
lods
add
dec
popa
in
and
loopne
ljmp
data16
sti
cmp
cwtl
mov
cmp
out
fidivrs
repz
movsb
and
in
hlt
call
loope
sbb
mov
pusha
arpl
sbb
shll
jo
imul
mov
and
or
mov
aam
pop
mov
cli
into
int
lret
pop
sbb
arpl
inc
sub
jmp
xor
movsl
pop
xchg
clc
dec
mov
aas
sar
into
cmp
adc
mov
mov
icebp
minps
jmp
jge
jno
mov
loope
mov
lret
xchg
clc
insl
xor
push
or
cmpsb
and
into
cmp
sub
stc
scas
loope
inc
dec
clc
mov
cmc
mov
inc
pop
push
sub
stos
enter
js
pop
jo
ljmp
xchg
dec
inc
adc
or
popf
cmpsl
sub
fstp
fstpt
cmpsb
sub
sub
loope
mov
dec
xchg
and
xchg
into
out
out
or
add
mov
dec
cmpsl
fidivrl
aas
mov
int3
hlt
les
jmp
je
loop
sarb
cmp
sbb
out
sub
lea
mov
sub
sbb
xor
jnp
cmp
movsb
mov
mov
sbb
mov
fnstsw
mov
imull
adc
cmp
out
pushl
movsl
cs
inc
fwait
shr
lea
push
incb
stos
cmp
mov
cmp
cmp
jle
cwtl
jmp
inc
cmp
push
jge
sub
and
lds
xrstors
or
in
arpl
xor
call
iret
sarb
mov
push
ficompl
movsl
je
mov
aaa
adc
test
out
sti
ficompl
test
jp
divl
test
mov
xchg
jnp
add
icebp
ficompl
std
mov
aas
call
add
pusha
sahf
pusha
out
push
cld
ret
fdivl
ljmp
push
jae
sti
ss
ja
dec
in
lret
push
push
lcall
and
push
sbb
bound
js
mov
mov
lock
dec
dec
ss
inc
fisubl
mov
std
psubsw
xchg
js
sub
movsl
mov
out
fsubrl
mov
or
xchg
push
rcl
push
icebp
adc
std
jg
imul
ret
inc
pop
stos
mov
add
pop
insb
cmp
sysret
aam
add
pushl
loopne
mov
sbb
pop
imull
lahf
mov
out
adc
decl
inc
cmp
jne
jbe
ud0
dec
and
std
fadds
lods
in
add
jl
xor
sti
dec
icebp
mov
sbb
test
hlt
arpl
mov
test
fcompl
xor
adc
std
push
jl
dec
repz
loopne
repnz
fldl
loopne
sub
sub
sbb
jg
cmc
insl
mov
sbb
jmp
loope
mov
pop
test
lcall
loopne
and
neg
and
jnp
cmp
jb
or
sub
pop
mov
cmpsl
cmpsl
push
push
push
daa
shll
push
mov
mov
aas
jae
adc
and
and
cmpsl
mov
pop
lds
pop
or
sar
xchg
jnp
dec
push
mov
sbb
outsl
arpl
in
and
outsb
insw
shlb
push
and
adc
gs
cmc
out
aas
mov
cmp
sarb
push
dec
lcall
lock
push
dec
sbbb
mov
xchg
shr
jo
mov
icebp
shlb
int3
es
push
add
cli
jmp
notb
js
aaa
lcall
fdivrl
cmp
fldcw
fistpl
shl
push
jge
fiaddl
sti
movsb
idivb
fcompl
push
jo
jne
xchg
lret
aas
sub
jle
jmp
sub
jmp
sti
pop
cld
xor
xchg
mov
pop
lahf
or
mov
out
pop
imul
aad
sbb
lock
daa
or
sbb
sbb
mov
xor
loop
ljmp
jle
jae
sbb
sahf
inc
faddl
fbld
fcmove
hlt
mov
repz
fistpl
cmpsl
gs
mov
or
add
movsb
mov
jns
cmpsb
inc
loop
xchg
sahf
addr16
test
push
lods
sbb
pop
add
push
imul
mov
mov
dec
hlt
xor
pop
cld
xchg
inc
mov
das
mov
call
ret
sti
dec
mov
xchg
mov
sbb
add
test
mov
movl
add
mov
and
les
sbb
xchg
cs
cmpsl
and
mov
push
call
call
bound
mov
xor
jnp
out
pushl
inc
clc
shll
cld
cmc
popa
cs
jnp
pop
or
roll
sub
jge
inc
push
sbbb
nop
push
xchg
ret
pop
iret
mov
sub
add
push
ljmp
mov
std
outsb
push
sub
xchg
push
push
mov
cmpsl
ret
out
cwtl
jle
or
stc
xchg
add
hlt
dec
sar
iret
mov
fisubs
loope
pushf
pushf
imulb
adc
clc
jg
cld
icebp
pop
xor
and
cmp
std
jns
sub
inc
cli
into
nop
scas
stos
sbb
add
shl
mov
dec
mov
jecxz
rorl
sarb
pop
or
les
daa
xchg
add
and
fidivrs
daa
push
push
out
lahf
std
cmpsl
js
mov
mov
mov
cmpb
or
stc
add
lahf
les
dec
inc
inc
ret
xchg
test
push
pop
scas
decl
jge
sub
xlat
cmp
ss
hlt
imul
hlt
xchg
xchg
andl
insl
jg
push
clc
aas
mov
sahf
push
pop
sahf
jnp
sti
mov
pop
fwait
pop
loop
js
lcall
out
and
add
jg
mov
adc
pusha
ss
pop
test
jns
jne
adc
fistps
inc
icebp
loopne
sbb
or
jo
cmp
fidivrl
jmp
decl
fldt
sbb
pop
out
sbb
hlt
pop
mov
xor
in
sub
xor
adc
mov
ljmp
cmc
xlat
mov
sbb
mov
push
push
fwait
sub
out
push
pusha
push
jb
jnp
sbb
pop
int
mov
stos
clc
outsl
xor
fld1
fisttpll
pushf
les
fiadds
or
jb
adc
add
in
in
mov
cwtl
rclb
adc
jge
push
push
mov
fucomip
jle
aad
cmp
xor
ret
fsub
push
call
mov
sub
lahf
aam
icebp
shl
movsl
xchg
sbb
lret
fwait
std
das
in
and
loope
add
fildll
jge
loopne
push
repnz
pop
add
mov
sbb
xor
nop
ja
fisttps
outsl
push
aaa
std
call
fimull
dec
or
popa
sbb
pop
icebp
shrb
cmpsl
add
dec
mov
adc
add
mov
iret
add
pop
out
mov
or
push
jne
pop
rcll
jbe
adc
sbb
scas
mov
outsl
mov
mov
mov
and
out
dec
pop
add
xchg
rcll
mov
mov
adcl
int3
mov
scas
cmp
in
scas
mov
pop
popa
sahf
je
daa
cld
push
insb
lea
mull
sbb
aam
sti
ja
and
add
sbb
aaa
arpl
lock
mov
psubsb
jl
and
push
testb
icebp
test
mov
clc
sub
and
or
mov
mov
inc
push
pop
movsb
jmp
sub
mov
clc
stos
dec
cli
aas
neg
and
push
repnz
jae
xchg
adc
aas
call
ljmp
lock
sbb
pusha
mov
sbb
aas
sbb
popf
icebp
fists
test
xchg
cli
push
dec
cwtl
out
ljmp
cli
or
std
lods
outsb
add
mov
mov
scas
pop
fnstenv
or
bound
sub
sub
xlat
cmp
sub
test
fdivrp
pop
stc
mov
push
dec
fs
push
lock
or
lods
movsb
dec
fxch
dec
out
pop
and
mov
pop
out
popf
pop
cmp
xor
es
loop
pop
add
shll
sbb
mov
les
jbe
ds
push
sbb
fucomip
nop
cmp
mov
arpl
test
jle
ja
leave
ucomiss
mov
iret
sub
clc
inc
loopne
loopne
jg
mov
jb
dec
ljmp
adc
outsl
cwtl
xchg
jne
mov
mov
or
sbb
pop
pushl
decb
jb
add
sbb
out
cmp
loope
jns
sub
movsb
add
cs
fadds
jl
lea
lods
pop
stos
mov
call
inc
nop
jmp
xchg
and
sahf
call
lahf
or
insb
cmpsl
jae
filds
and
shll
aam
imul
inc
mov
jo
add
in
sub
mov
lods
cmpsb
push
imul
mov
pop
sbb
xchg
clc
mov
pop
mov
mov
add
dec
sar
ret
pop
test
xor
jge
jge
jge
mov
pop
xchg
jno
call
test
lahf
test
jbe
sti
out
lahf
leave
clc
les
jg
daa
mov
test
gs
jecxz
loope
outsb
jecxz
cmp
ret
or
mov
ds
lret
aad
out
push
mov
dec
push
inc
and
jae
jmp
imul
add
mov
sbb
mov
sbbb
lock
decb
negl
inc
shl
lds
les
in
test
sbb
push
fmul
leave
or
jb
daa
jmp
fildll
jp
xchg
xchg
and
loopne
cld
pop
js
das
leave
ja,pn
xchg
scas
dec
pop
fwait
push
fidivs
pop
jge
repz
mov
test
dec
lahf
mov
fdivr
pop
out
loopne
out
mov
xlat
dec
icebp
cltd
mov
aad
js
loop
out
lock
sub
jecxz
adc
shrb
sub
bound
mov
hlt
cs
pusha
cs
lods
je
les
mov
pop
cwtl
sub
insl
xchg
sub
dec
sbb
pop
and
xor
sbb
icebp
jmp
inc
inc
jne
jae
sub
in
mov
inc
xchg
in
jno
dec
arpl
adc
aaa
ljmp
add
add
ljmp
mov
imul
lds
and
mov
cltd
mov
pop
mov
push
jle
sub
scas
pop
xchg
mov
sarb
aam
mulb
xor
or
idivl
sub
xor
push
out
fists
test
test
xchg
decl
mov
shll
test
gs
push
jg
scas
or
sub
push
lcall
adc
cmpsb
xchg
xchg
xchg
pop
in
pop
fucomp
xor
out
add
jle
push
xor
movsl
lods
jae
dec
xchg
mov
mov
fildll
pop
cltd
sbb
popa
mov
or
or
vpmuludq
mov
push
xchg
or
insl
test
mov
push
dec
pop
int
cmpsb
pop
jmp
out
fcompl
pop
std
sarl
fcoml
or
cli
sub
xor
fwait
cmpsb
fsts
repz
mov
jns
cmp
icebp
sub
in
xor
dec
clc
mov
out
push
jg
loopne
dec
in
insb
push
adc
ret
jl
iret
std
inc
lods
dec
lret
add
sub
lock
out
adc
xor
es
jg
iret
stos
loope
jns
fistpl
jmp
out
mov
cs
decb
imul
inc
inc
orb
pushf
sbb
dec
cmc
pop
test
pop
mov
int3
pop
or
fistpll
pop
cli
sbb
inc
push
aas
test
nop
jns
pusha
out
subl
mov
adc
jge
push
pop
popa
sbb
cmp
or
sbb
dec
sbb
fdivrs
add
push
cld
shrl
pusha
push
xor
mov
loopne
imul
push
lock
fildll
out
movsb
in
push
inc
xchg
lcall
sbb
and
inc
dec
scas
addr16
jg
cli
cmp
fs
cli
jmp
adc
call
ljmp
mov
pop
jae
lret
fbld
cld
dec
call
mov
cld
pusha
add
or
sarb
push
aam
jno
or
pushf
ljmp
loope
outsl
xor
fwait
inc
push
mov
ffreep
mov
es
hlt
cs
or
xchg
inc
adc
lea
call
jb
mov
cltd
in
in
dec
adc
sti
addr16
les
js
jbe
or
leave
mov
out
ficoml
popf
or
outsb
in
repnz
mov
fbstp
or
out
in
std
push
mov
and
mov
sub
cs
jnp
cld
dec
or
sahf
in
push
cmpsl
js
das
mov
das
and
mov
sub
call
jo
inc
mov
push
nop
ja
aas
sti
mov
xor
ljmp
mov
dec
sub
cwtl
push
pop
xor
cld
mov
xor
fmull
test
lret
fnstenv
int
pop
mov
jns
jl
push
push
popf
fidivrs
loopne
clc
adc
fdivr
cmp
inc
ja
adc
movsl
mov
inc
mov
das
testb
pusha
pop
lods
imul
pop
not
adc
hlt
push
ds
daa
cli
xor
push
std
lds
or
call
jne
inc
je
ja
mov
jnp
mov
adcb
xor
mov
mov
jo
iret
jge
and
mov
aad
addr16
ss
std
jecxz
pop
cmp
imul
cmp
mov
jg
mov
shlb
addr16
push
jge
test
fadd
outsl
jo
jge
and
inc
jmp
pushl
aas
mov
imul
cmp
inc
insb
mov
loope
bound
xchg
jne
push
in
sub
jmp
or
adc
mov
incl
shl
xchg
mov
mov
call
xchg
inc
je
mov
call
push
ja
xchg
xchg
or
jbe
aad
xlat
mov
mov
fpatan
ret
cmpl
cmc
orl
decl
std
push
pop
out
pop
pop
or
out
pop
out
mov
sub
and
cmp
int3
jp
push
mov
pusha
add
ret
inc
aaa
testl
out
push
adc
cld
cmp
stos
pop
andb
pop
mov
cmc
xchg
ja
inc
xchg
stos
fcoms
lahf
sti
out
push
cwtl
jge
add
repz
xor
icebp
test
sahf
std
mov
jb
pmulhw
iret
in
dec
in
pop
stc
call
mov
push
mov
out
xor
clc
mov
dec
test
pop
push
les
das
pop
mov
mov
cmp
rol
and
sub
fldt
or
mov
loopne
cmpsl
dec
cmp
loopne
and
jne
or
leave
xchg
jnp
mov
pop
push
cmp
mov
pop
or
inc
js
mov
push
mov
push
ret
out
test
out
movsb
cmp
adc
loope
push
test
jb
into
mov
mov
cmp
add
lds
loop
pop
jns
sub
dec
mov
push
out
mov
xchg
popa
adc
std
sub
repz
test
sbb
out
xor
jp
pop
push
aad
mov
incl
push
incb
repnz
pop
xor
pop
adc
xlat
mov
mov
xchg
pop
pop
inc
out
mov
cmp
rol
xor
shlb
aam
mov
ret
stos
sti
out
hlt
shlb
add
and
pop
insb
mov
inc
jl
aad
rolb
lea
add
movsl
push
or
test
ljmp
outsl
sarb
sub
lahf
lock
xchg
push
push
cmp
shrl
push
rclb
leave
push
dec
lods
pop
mov
dec
mov
mov
incl
lcall
fcompl
inc
xlat
aas
xchg
or
aas
sub
clc
loope
inc
repnz
fcoml
adc
sahf
xor
xchg
out
cli
jg
mov
insb
xchg
cmpsb
shll
shrl
ret
inc
inc
mov
add
mov
addb
fmulp
xchg
fcmovnbe
icebp
ja
jle
pop
orps
cld
cmp
mov
lock
sub
inc
hlt
fucom
dec
ret
fldl
mov
mov
jg
jge
adcl
cmp
push
dec
in
mov
xlat
adc
hlt
mull
out
aas
add
pop
add
mov
jmp
cld
imul
popa
es
or
push
ret
mov
movsb
cmpsl
jl
jbe
xchg
push
stc
sub
lea
fdivp
sub
test
mov
mov
aad
add
not
xor
inc
cld
mov
out
mov
adc
adc
loopne
push
xchg
lds
das
dec
cmc
pop
mov
sti
fcoms
jg
push
sar
mull
ljmp
inc
jp
aas
mov
fildll
push
imul
jmp
adc
and
andl
scas
clc
sbb
lods
fs
addl
lods
xchg
stos
pop
pop
in
icebp
fldl
mull
movsb
std
out
arpl
dec
mov
rcll
inc
scas
or
addr16
fistpll
xor
sbb
clc
or
fbstp
loopne
arpl
or
test
sahf
daa
popa
dec
jge
bound
ret
mov
test
loope
iret
push
dec
jbe
jne
insl
ja
sbb
lcall
out
cmp
les
add
cli
sub
das
cmc
sub
int
inc
mov
scas
int
fildl
mov
jg
inc
or
ja
cmp
inc
mov
lahf
clc
js
sbb
iret
mov
mov
jg
and
and
xor
sarl
add
imul
fsubr
jnp
mov
xchg
xchg
and
jmp
or
lods
mov
jnp
adc
lods
into
adc
sub
mov
jecxz
mov
jge
push
and
ljmp
dec
ljmp
lock
in
lods
stos
mov
jnp
push
ds
into
or
ss
stos
add
pop
sbb
stos
sar
pop
dec
rolb
pop
mov
les
fnstsw
int
push
xorb
out
bound
cmp
inc
hlt
rcr
mov
or
idiv
negb
sbb
std
fildl
fisubrs
mov
das
ljmp
daa
mov
push
xlat
pop
jnp
lods
mov
xor
jge
sbb
pop
mov
pushf
jo
dec
pop
push
fcmovnbe
scas
mov
dec
sub
dec
mov
test
mov
pop
int3
cmp
jmp
sbb
idiv
dec
dec
js
push
cmp
insb
ja
std
inc
incl
mov
fcoms
sub
pop
pop
movsb
aam
jnp
lods
neg
loope
dec
cmp
pop
cltd
dec
maskmovq
idivl
js
mov
cs
lods
rclb
in
lcall
cmp
mov
insb
push
sbb
movb
push
mov
jno
loope
call
aam
out
add
out
imul
cld
pop
xor
xor
sub
popf
testb
fsub
fisttps
inc
popl
jmp
xor
movsb
fadds
icebp
das
adc
jecxz
outsb
adc
clc
sbb
aam
or
add
lahf
add
aas
xor
pusha
jmp
nop
js
mov
mov
push
pop
imulb
or
out
push
mov
icebp
test
je
xchg
mov
outsb
aas
idiv
sbb
mov
and
rcrb
or
test
insb
pop
std
aaa
adc
fisubs
adc
clc
pushl
cmpb
roll
jecxz
sbb
mov
adc
or
mov
mov
mov
inc
add
daa
std
shrb
sub
es
fmull
fadds
lods
jne
pop
xor
pop
outsl
or
pop
std
ja
data16
ja
loop
subl
xchg
mov
push
add
test
call
arpl
les
mov
hlt
xchg
jg
sbb
dec
js
mov
sbb
adc
jge
inc
jmp
xchg
icebp
jo
lret
inc
test
push
daa
outsb
notb
cmp
mov
sub
shl
cld
push
daa
fimuls
xchg
cmp
mov
popf
repnz
and
adc
xor
leave
ret
ljmp
or
adc
enter
pusha
pop
mov
and
das
pop
jns
daa
aam
fists
mov
jno
dec
rclb
mov
add
das
or
loopne
lock
jmp
mov
mov
faddl
pop
xchg
shlb
es
dec
pop
dec
adc
ljmp
pop
inc
ja
fiaddl
adc
xchg
shlb
in
pop
test
sbb
iret
std
dec
rclb
mov
push
xor
and
stos
leave
aas
mov
push
call
ss
mul
clc
pop
and
xchg
mov
add
and
dec
or
ds
push
sahf
jecxz
and
cmp
sahf
clc
bound
jmp
mov
shll
lret
sbb
and
in
dec
outsb
outsl
xchg
and
aas
mov
mov
mov
sub
adc
decl
call
sbb
stos
xor
or
divb
out
xchg
sbb
and
clc
mov
xchg
cmc
mov
into
sti
xchg
imull
pushl
xor
ss
mov
xchg
pop
scas
push
pop
cmpsl
sub
insl
stc
ret
movsb
dec
fisttpl
jg
sbb
sub
cmpsl
push
lcall
pop
pop
hlt
lock
repnz
movsb
dec
ds
mov
sbb
cmp
int
movsb
repnz
call
inc
dec
repnz
call
mov
mov
fmull
adc
cmp
jl
pop
fistps
xor
push
pop
xchg
push
arpl
adc
push
mov
rorb
rorl
sub
or
notb
dec
ljmp
and
dec
shlb
jecxz
clc
aas
les
fimuls
pop
xor
jg
xchg
adc
inc
or
mov
or
mov
jg
jg
jno
test
inc
fbstp
loop
sbb
ljmp
mov
dec
add
cmc
aam
mov
stc
sbb
sub
lcall
sub
pop
jb
xor
mov
dec
pop
add
clc
push
cmp
int3
mov
push
fistps
pop
dec
sub
dec
stc
cli
jbe
loope
pop
xchg
add
lds
js
orb
data16
in
mov
cs
xor
cmc
dec
mov
xchg
mov
arpl
stos
imul
xchg
mov
inc
cmpsl
mov
sbb
pop
jae
popl
jno
mov
popf
push
sub
xor
rol
mov
pop
test
sahf
mov
loope
and
sti
inc
loopne
cmpsb
test
inc
aad
push
fs
clc
mov
pop
les
scas
add
and
test
call
insb
sub
lods
ss
or
pop
mov
in
add
jne
sub
mov
jg
jecxz
loope
fdiv
fstp
sbb
mov
push
decl
sbb
lods
dec
mov
jg
out
aas
and
xchg
xor
pop
mov
fistps
incl
jae
pop
ficoml
outsb
sbb
add
add
mov
mov
push
loopne
push
dec
call
into
push
xlat
add
out
add
mov
stos
pop
jnp
or
push
int
sbb
mov
mov
or
scas
lods
inc
std
lods
arpl
lods
scas
stos
insl
pop
pop
add
jmp
xor
dec
xor
test
or
xor
ret
icebp
fucomip
cmp
jae
sub
imul
and
rcrl
sub
dec
mov
bound
add
adc
clc
xchg
test
scas
mov
movsb
mov
xchg
inc
adc
lock
ds
pop
adc
sarb
xlat
adc
adc
loopne
mov
sbb
mov
mov
adc
inc
imul
loop
mov
adc
loop
aad
mov
dec
shl
loop
fldt
pusha
mov
xchg
in
pop
leavew
lahf
push
mov
icebp
pop
das
ljmp
sub
push
mov
popf
push
loop
cmp
push
xchg
mov
xor
adc
icebp
or
orb
dec
xchg
push
clc
test
push
clc
test
pop
push
mov
jmp
out
int
xor
or
ret
addr16
or
pop
scas
xor
lds
ds
and
xchg
lock
dec
adc
adc
push
ret
test
cli
lahf
std
push
in
xchg
outsb
jnp
cmc
lds
wrmsr
call
xor
ds
movsb
xchg
clc
insl
ret
or
movsl
push
movsb
inc
xchg
repnz
sbb
pop
sub
or
xor
jl
nop
and
cli
addr16
js
mov
sti
hlt
xchg
xor
sbb
sub
push
push
leave
pop
dec
imul
ja
aas
nop
add
cmpsb
pop
js
sbb
lods
mov
stos
fwait
rorl
sub
push
loop
sub
adc
xchg
cmp
lcall
jnp
mov
mov
dec
sub
jnp
inc
sub
mov
adc
rorl
cmp
cmp
ret
loope
pop
aam
push
jo
mov
cmp
int3
dec
lods
xor
mov
pop
mov
mov
sti
out
sub
and
call
jl
bound
scas
cmp
and
cmp
jb
loop
pushf
in
adc
insl
adc
push
icebp
leave
js
cmp
loop
cmp
adc
cmp
xchg
mov
jle
mov
dec
pop
scas
and
cs
cld
sbb
sub
pop
neg
jmp
es
loop
inc
cld
mov
dec
inc
shll
push
push
lock
add
mov
shr
je
xchg
ds
nop
adc
inc
rorl
in
mov
fstps
sbb
cli
mov
push
mov
cmp
ljmp
inc
push
hlt
inc
mov
scas
xor
mov
and
cli
out
sti
sar
icebp
cli
cmp
cmpsl
adc
test
sbb
xchg
sbb
test
mov
out
cmp
pop
mov
push
jo
add
nop
push
add
cvtps2pd
push
xlat
xchg
jno
test
cmp
or
sbb
iret
cmp
aas
adc
pop
or
out
insb
cmpsb
popf
sbb
fistps
xor
inc
lret
cmpsb
dec
aas
sbb
out
test
loop
mov
inc
xchg
xchg
add
pushl
lock
mov
pop
call
in
adc
inc
cld
jo
inc
aam
scas
lods
sahf
push
inc
xor
and
or
cli
cmp
dec
fwait
xor
push
cmp
ds
shlb
pop
mov
mov
cmc
outsl
xor
decl
fimuls
push
lahf
pop
sbb
fcomp
or
push
and
stc
push
xchg
sub
out
into
mov
mov
xlat
sbb
push
mov
fs
hlt
arpl
or
fimuls
pop
dec
icebp
mov
mov
adc
clc
mov
aas
cpuid
jns
pop
lret
xchg
fists
jmp
or
jo
cmp
dec
adc
dec
cld
mov
cld
jl
push
cld
inc
adc
lahf
dec
adcl
mov
shlb
outsb
mov
arpl
incl
loop
in
cltd
xchg
stos
xchg
scas
lds
aad
cmp
or
adc
aas
cs
jns
shll
sbb
data16
xor
and
cld
jg
fldenv
ja
jae
fidivl
sbb
pushl
mov
je
xchg
or
loop
and
pushf
inc
and
test
int
loope
fdivl
pusha
add
fcoml
int3
jle
push
mov
mov
xor
mov
test
mov
sbb
pushf
cs
xor
decl
arpl
sbb
outsl
in
fildl
adc
aaa
mov
jo
dec
std
add
cmp
hlt
and
std
sub
mov
pushl
ret
into
cmp
sar
sti
push
ds
mov
sti
push
push
sub
mov
std
dec
aad
stc
pop
xor
add
aas
lds
mov
cmpsl
loope
jne
mov
addl
pop
mov
roll
push
inc
aaa
pop
adc
inc
cld
fwait
cmp
inc
push
and
pop
call
ja
and
jnp
lcall
and
mov
dec
mov
xchg
cwtl
out
mov
push
ja
incb
mov
fistl
roll
es
xchg
fwait
std
out
inc
aas
jecxz
insl
jb
adc
push
cli
pushf
mov
sti
cmp
sti
jge
pusha
dec
sbb
jbe
ss
das
inc
adc
jmp
lock
mov
pmullw
cli
push
aas
fmull
sti
aam
push
mov
jge
das
mov
scas
ret
scas
dec
pop
into
decl
bound
decl
cmp
incl
ljmp
insl
cli
data16
sbb
jnp
clc
push
jg
call
es
add
mov
js
cwtl
jg
or
jno
cli
add
jp
fimuls
out
sarb
mov
jecxz
jge
popl
sbb
sbb
and
idivl
out
stos
stc
stos
xorl
cld
lcall
fdivr
hlt
pop
in
dec
push
outsl
lock
push
data16
andl
inc
fmul
mov
notb
movsb
cmp
jle
imul
lock
pop
mov
rcrl
inc
neg
and
jge
jge
xor
outsb
or
loope
mov
subl
mov
sub
nop
pop
inc
xor
dec
mov
lods
mov
and
insb
sahf
lahf
loope
fwait
push
add
dec
mov
jle
mov
iret
or
jae
cmc
or
pop
jmp
faddl
cwtl
hlt
outsl
mov
rorb
cmp
adc
popf
outsl
or
dec
leave
or
leave
xor
jo
xor
lds
loopne
adc
sbb
mov
mov
hlt
popa
js
pop
sub
sbb
inc
sbb
or
inc
cmp
sbb
les
xchg
pop
pop
pop
mov
fs
outsl
mov
pop
stos
xchg
dec
xchg
mov
std
dec
imul
cli
jp
insl
lea
aam
lahf
sbb
mov
loopne
ficoms
loop
into
dec
jne
shl
add
xor
aam
inc
pop
mov
and
je
pop
cmp
jecxz
push
inc
jl
in
jp
mov
and
scas
xchg
sbb
xchg
call
das
push
mov
jno
fbstp
pushf
movsl
lret
sbb
jp
add
cli
add
add
jg
leave
jne
dec
jl
mov
mov
jo
test
pop
push
outsl
jnp
push
pop
loopne
xor
aas
call
inc
sbb
loopne
bound
ret
push
pop
cmp
fbstp
fidivrs
lock
sbb
lcall
xor
sti
jns
mov
mov
xorl
xchg
fld
or
test
jbe
inc
cli
iret
icebp
lods
aas
out
pop
add
xlat
and
and
or
nop
pushf
fcmovbe
sub
sbb
stc
insb
je
mov
dec
push
ret
loope
add
jmp
and
mov
rol
and
lret
adc
aas
cmpl
pusha
js
sbb
fidivrs
int3
sbb
xchg
inc
nop
out
lods
cld
xchg
mov
mov
mov
lods
or
mov
pop
and
cmp
into
jne
andb
mov
dec
outsb
cld
sbb
inc
pop
add
out
jb
jmp
cld
fcomip
adc
xchg
mov
mov
mov
shl
jg
sbb
andb
imulb
mov
out
out
cmpsl
or
sub
mov
or
sub
bnd
popf
stc
jmp
mov
aaa
add
pop
and
clc
push
stos
aad
shll
sub
fisttpll
jns
icebp
xor
imul
pusha
jne
ficomps
jmp
mov
dec
jp
incb
hlt
push
jle
shlb
sbb
call
mov
mov
movsb
mov
js
out
mov
stos
in
js
inc
sti
mov
ja
jnp
fildl
cli
mov
and
jmp
jno
sti
rorl
inc
js
psllw
push
cmc
pop
clc
jne
bound
fimuls
pxor
pop
rorb
pop
mov
pop
icebp
inc
xchg
call
cld
mov
bound
adc
scas
test
cs
idiv
add
cld
jo
inc
cwtl
fidivl
and
shll
sbb
and
int
pop
xor
das
out
jnp
aas
jae
gs
pop
push
dec
xlat
dec
dec
lock
pop
inc
pop
in
inc
or
fistpll
and
sti
cmpsb
xor
call
sar
in
mov
frstor
clc
jae
sub
and
aas
adc
ja
pop
push
cmp
mov
fsubrs
pushf
sbb
cmpsb
sbb
addr16
sarl
arpl
and
pop
int3
xchg
aas
push
lds
pop
ret
mov
out
das
leave
nop
aad
gs
stos
sub
repz
pop
inc
pop
loopne
and
jnp
or
jge
sub
pop
push
int
mov
dec
dec
or
xchg
cmp
mov
inc
sbb
jnp
or
mov
inc
inc
pop
pop
popl
inc
jmp
incl
cmp
outsb
jg
es
inc
lea
dec
cmp
pop
int3
inc
add
xchg
push
and
out
xchg
fisubs
adc
scas
sar
xor
cmp
and
int3
aam
lcall
mov
fcmovb
mov
sbb
sbb
pop
mov
xchg
das
push
jns
insb
loop
sbb
movsl
mov
lea
mov
stc
movsb
inc
mov
push
or
mov
and
js
push
cmpb
js
pop
cmp
adc
jo
dec
jmp
cmp
dec
mov
cmpsl
ljmp
aas
inc
push
aaa
jbe
xor
mov
pop
dec
push
leave
adc
out
std
pop
xor
int
test
jo
fldt
sar
dec
jno
nop
mov
or
cmc
loopne
mov
jmp
pushf
fists
sub
mov
jg
dec
out
or
inc
bound
inc
dec
leave
movsb
sbb
movlhps
sub
shll
jnp
jmp
aas
and
mov
shr
aas
mov
mov
mov
call
mov
jecxz
ret
jg
orb
jge
sub
push
std
lods
imul
fwait
lretw
out
pop
xor
inc
xchg
cmpsb
jecxz
imull
xchg
into
adc
std
int3
mov
shrl
ja
pushl
push
stos
cltd
adc
pop
sbb
xchg
pusha
cs
rclb
push
int3
fisttpl
test
mov
jg
cmp
mov
loopne
xlat
dec
and
and
int
hlt
jg
out
inc
fstpt
cmp
shrl
out
fistpll
and
cmp
or
in
jge
jge
pop
sti
dec
sbb
and
mov
and
lahf
jecxz
cmc
incl
shrd
sub
pop
gs
stos
sbb
fnstsw
das
mov
shlb
jmp
enter
jbe
arpl
data16
in
adc
fs
pop
xchg
jg
push
lea
push
xchg
jnp
fs
in
push
call
jb,pt
sbb
add
add
adc
fsubr
mov
pop
in
gs
inc
mov
pop
mov
mov
fmuls
outsl
sub
lret
dec
pop
lods
outsl
push
inc
push
std
cmpsb
sbb
je
dec
das
mov
add
sub
call
hlt
arpl
jno
rorl
cld
jno
lock
pmaxsw
jne
lds
mov
inc
bound
cmp
mov
std
lods
out
push
jg
lds
sar
out
cmp
sub
mov
sbb
call
xor
ret
mov
das
jl
sbb
mov
mov
scas
andb
loop
stc
xlat
popa
popf
xchg
mov
sbb
call
fnstcw
dec
cmpsb
dec
fnstcw
test
jnp
sarb
arpl
dec
sub
scas
mov
cwtl
stc
mov
push
push
aad
in
adc
xlat
mov
dec
notl
jge
xchg
lock
ja
pop
mov
dec
xchg
shll
mov
mov
lds
in
shrb
pushl
inc
push
scas
pop
icebp
fistl
sub
popa
jae
inc
out
and
xchg
xchg
inc
scas
cmp
pop
cltd
aas
imul
mov
push
std
cmp
xchg
dec
and
inc
sub
xchg
imul
lea
add
adc
pop
xchg
jno
and
cmp
cli
jecxz
loopne
arpl
sub
decb
add
xchg
pop
mov
mov
inc
mov
and
mov
add
inc
popf
je
fsubr
cmp
sub
cmp
test
inc
cmp
loope
jo
xchg
dec
push
cld
mov
jae
nop
jmp
idivl
inc
arpl
add
xchg
or
aas
data16
pop
mov
insl
addr16
int3
cmc
adc
and
jae
dec
hlt
xor
xor
inc
xchg
in
mov
outsl
clc
nop
cmp
add
lcall
push
jg
in
dec
cmpsl
jecxz
push
and
jo
xchg
mov
out
lock
inc
aaa
push
inc
push
adc
mov
dec
dec
xchg
mov
into
or
push
lahf
sti
aaa
xchg
repz
dec
and
jge
cli
aas
movsb
push
jo
jl
sub
inc
jg
mov
aaa
dec
cld
filds
adc
push
fsubrp
pushf
shl
push
clc
aas
jle
push
add
fbld
rclb
clc
jbe
ja
out
sti
add
aas
adc
jg
pop
shll
sbb
in
push
nop
cmp
incb
mov
dec
sub
ljmp
mov
sahf
mov
les
xchg
push
sbb
outsb
fbld
icebp
scas
aad
cmc
test
jmp
fistpll
mov
fsubr
in
ret
jg
clc
push
push
andb
dec
jp
enter
cmc
jo
dec
out
cmc
dec
mov
rorb
scas
lock
sub
loop
data16
faddl
jl
aas
ret
jo
jo
mov
lahf
int3
or
jae
push
movsl
mov
jmp
sub
xchg
push
mov
cmpsl
fisttpll
pop
adc
lods
out
pop
mov
or
cmp
mov
shrb
addr16
and
or
jg
and
in
sub
cmp
mov
xchg
jge
sub
cld
or
cld
out
xchg
pop
psubusw
mulb
jmp
mov
daa
mov
push
cmp
fists
jmp
mov
fisttps
cmp
incl
icebp
xchg
sti
xchg
movl
addr16
sub
insb
rolb
or
mov
xor
rcr
push
xor
pushf
mov
adc
lret
rorb
addr16
xor
lcall
rcrb
cmp
fldl
add
adc
add
popf
inc
ret
sti
xor
mov
push
mov
in
clc
gs
stos
add
dec
cld
iret
orb
notb
pushf
inc
cmp
aas
inc
insl
dec
ret
adc
pop
mov
jge
lock
pushf
cld
bound
inc
inc
or
push
cld
adc
sub
add
inc
std
add
gs
dec
adc
outsb
and
lahf
cs
call
enter
jbe
imul
push
dec
outsl
mov
xchg
ja
xchg
mov
sbb
xor
xchg
pop
sbb
dec
xor
aas
mov
jns
fsts
arpl
pop
inc
js
xor
cwtl
jne
pop
movb
add
cmpsl
xchg
bound
sti
xchg
imul
sbb
into
jge
push
out
cmp
popl
lcall
clc
ljmp
xchg
es
ds
mov
mov
jo
sbb
movsb
adc
jl
movsb
adc
call
fs
cli
test
mov
push
inc
mov
mov
pop
inc
cmc
cmp
add
jae
mov
lods
mov
xchg
dec
mov
xor
cld
mov
fistpl
jmp
pop
fs
push
aad
jge
push
mov
mul
inc
mov
ret
pop
mov
push
mov
jp
or
cli
out
cld
mov
popf
roll
lret
xor
mov
leave
inc
popf
jne
in
push
mov
stc
gs
outsl
js
push
es
subl
xlat
jmp
cld
dec
jl
lock
in
in
mov
sub
or
movsb
jg
mov
inc
pop
sbb
or
hlt
pop
clc
fstpt
icebp
cltd
pop
and
jp
sub
les
cmp
jns
push
mov
mov
push
fstps
and
push
jecxz
push
jne
inc
jns
jecxz
mov
pop
mov
or
mov
ljmp
xchg
outsl
cmp
push
inc
cld
arpl
ds
ret
loopne
out
add
jo
xchg
xchg
and
popa
out
leave
sarl
call
frstor
je
and
pop
inc
dec
pop
and
pushl
in
cmp
das
cwtl
push
cmp
cmpsb
data16
test
pop
dec
out
push
test
pop
push
sti
mov
xchg
dec
and
or
cld
aaa
das
pop
pop
aaa
sbb
lcall
mov
mov
xor
or
insl
popf
bound
fcmovb
cld
nop
add
aad
push
std
out
inc
cld
int3
or
int3
mov
mov
hlt
aaa
cmp
movsl
jb
stos
xor
jle
dec
add
lcall
out
int3
inc
add
imul
mov
jg
push
call
insl
cmp
pop
cld
sub
adc
inc
mov
xor
mov
pop
add
pop
inc
jg
dec
mov
int3
popl
dec
jge
mov
loop
out
or
outsl
clc
outsb
hlt
add
scas
out
out
mov
inc
shl
clc
jbe
pushl
addl
aas
push
cld
pop
push
dec
clc
jne
fcomps
rcl
push
xchg
loopne
push
pop
int3
jge
xchg
add
adc
adc
lea
std
jp
or
rol
adc
and
or
pop
fldcw
movsl
rorb
or
outsb
push
push
push
sbb
and
inc
call
loope
jae
mov
mov
jnp
cmc
lods
cli
or
cmpsl
sbb
and
mov
incb
mov
fisttpl
xor
cld
inc
cmp
jecxz,pt
sub
mov
out
adc
mov
cmpsw
mov
add
lcall
loop
arpl
icebp
push
leave
push
jb
std
je
sahf
insb
sub
repnz
mov
outsb
inc
mov
mov
sbb
and
pop
in
fdivr
movsl
and
xchg
pop
mov
mov
aad
push
lods
jnp
xchg
xlat
iret
add
shld
rorb
ljmp
out
in
cwtl
insl
pop
cmp
pop
jae
xchg
in
test
and
test
sub
arpl
jne
cmc
hlt
mov
adc
jae
scas
xchg
pop
or
rol
jg
cli
test
in
imul
cmp
push
or
pop
fsub
sbb
lea
adc
ss
icebp
das
adc
pop
outsb
hlt
icebp
sub
inc
in
dec
pop
or
inc
ja
mov
test
add
pop
sub
mov
scas
sub
pop
add
sub
mov
mov
xor
pusha
pop
leave
jbe
jle
loopne
jge
pop
or
fwait
daa
and
or
ja
pop
add
int3
jno
or
clc
pop
cmpsl
ja
stc
push
dec
dec
push
jl
fstpl
test
pop
push
xchg
sbbb
xchg
test
sti
aad
idivl
pop
test
mov
outsl
dec
mov
repz
ud0
jg
lcall
insl
cmpsl
push
js
out
adc
push
mov
sbb
je
mov
jnp
outsl
adc
push
mov
jns
jmp
divl
mov
rolb
cmp
aaa
pop
mov
ret
mov
mov
pop
repz
out
clc
lods
subl
loope
pop
addr16
aad
orl
inc
loope
test
out
hlt
lea
pop
and
add
cmp
cmp
insb
adc
idivl
or
loop
movsb
or
add
xchg
push
add
add
lret
push
ror
xchg
push
adc
dec
incl
std
and
mov
adc
xchg
sub
fdivr
pop
cmpl
test
fistl
adc
push
xchg
jl,pn
jg
pop
outsl
cs
xchg
jp
inc
push
rolb
leave
int3
insb
imul
rol
add
hlt
sub
sub
dec
sbb
fwait
repz
lods
xchg
and
das
in
mull
sub
shlb
xchg
ljmp
mov
fdivr
iret
std
adc
dec
dec
movsb
mov
mov
mov
inc
inc
xor
ja
clc
xor
je
push
push
ret
and
sbb
add
fdivrl
inc
leave
push
std
idiv
sbbl
sub
arpl
xchg
add
and
mov
xor
mov
push
enter
push
rcrl
nop
sbb
jg
push
sbb
mov
adc
clc
cwtl
pop
insl
sbb
in
mov
sti
adc
push
and
jns
aaa
mov
cld
lock
aad
sbb
ja
call
aaa
add
adc
mov
lahf
add
cld
xchg
pop
mov
jl
in
mov
cmp
push
into
add
mov
fisttpll
cld
pop
cld
cmp
push
jle
ds
mov
cmp
std
std
push
sbb
xor
mov
sbb
les
addl
test
and
mov
clc
sub
test
icebp
xchg
ljmp
lds
out
cmp
pop
cli
and
mov
cwtl
add
incl
faddl
ljmp
js,pt
pop
and
dec
add
sub
shll
jp
shrl
jle
jns
das
pop
call
sbb
je
dec
and
adc
or
fidivrs
stos
pop
xlat
call
subb
jp
popf
incl
lods
orl
sbb
and
push
stos
movsl
adc
fisubs
inc
xchg
cmpsl
incl
stos
jg
lahf
dec
pop
fwait
adc
dec
test
jg
lcall
in
daa
outsl
and
mov
mov
push
ret
in
dec
jnp
stos
ret
or
std
fiaddl
ficoml
sub
cmc
es
add
add
test
lods
cmp
dec
mov
jb
inc
aad
addl
jo
xchg
andb
xor
and
adc
and
in
inc
les
insl
bnd
adc
and
ss
mov
or
jg
add
test
stc
jo
push
andl
ret
stos
lcall
mov
or
push
xchg
xorb
popa
inc
psraw
test
orl
mov
aam
mov
pop
pop
or
push
repnz
mov
inc
add
push
jbe
adc
and
jo
xchg
and
into
cmp
sub
push
imul
aas
loope
cmp
push
dec
push
insl
shlb
rclb
add
mov
rorl
das
add
xchg
bound
ja
mov
pop
cltd
orb
out
jns
out
ret
xchg
mov
add
inc
lods
mov
movl
or
stos
or
add
sbb
int
xchg
or
push
cmp
sub
inc
push
mov
dec
js
xor
rcrl
jp
or
add
test
push
shrb
push
addl
cmp
push
pusha
jp
cmp
push
dec
mov
add
lods
cmp
inc
push
mov
jp
sub
adc
jo
push
mov
cmp
inc
lods
cmp
loope
addb
and
in
inc
jmp
cmp
cmp
jg
cmpsl
das
pop
adc
cmp
and
mov
add
push
jo
jbe
mov
in
or
bound
inc
add
sbb
clc
add
addr16
jno
push
xchg
lock
mov
notb
push
or
push
insl
xlat
into
cmp
pop
ljmp
adc
push
dec
ss
in
and
adc
lock
push
adc
or
enter
mov
and
add
mov
inc
jae
lods
xchg
das
es
sbb
push
cmp
add
dec
test
ret
hlt
mov
add
inc
in
or
or
or
test
shlb
sbb
cmc
push
sub
pop
inc
xchg
or
sbb
and
shlb
dec
cmp
and
cmp
pusha
fildl
pop
push
scas
fisubrl
fs
jb
add
push
add
sbb
lock
sbb
push
shl
mov
inc
inc
out
daa
inc
add
mov
mov
je
mov
and
stos
pop
jp
xchg
or
loope
mov
cmp
push
push
pop
fsubrs
ret
adc
inc
jmp
add
dec
adc
add
call
pop
xor
loope
mov
add
in
out
pop
pusha
push
jne
popa
jecxz
push
pop
mov
lds
adc
add
imul
cli
ljmp
cs
test
pop
imul
xchg
ja
icebp
in
xor
push
dec
cltd
and
xor
dec
ljmp
push
mov
add
push
enter
mov
or
add
xchg
push
inc
inc
shll
rep
inc
lcall
rcrb
daa
inc
push
xor
xor
inc
cmove
mov
and
mov
js
mov
pusha
sahf
repnz
stos
imul
xor
push
and
ficoml
cmpsb
incb
mov
mov
add
add
stos
loopne
inc
or
mov
cld
sbb
add
push
inc
aad
movsb
int
daa
mov
xchg
fstps
es
add
pop
cmpsb
pop
jo
sub
stc
ds
pop
adc
rolb
mov
mov
cmp
js
cmc
fdivs
xor
jge
data16
aaa
pusha
mov
mov
sbb
sbb
in
dec
mov
add
xchg
mov
dec
inc
rcl
popa
jecxz
or
sti
sub
sbb
xor
add
adc
bound
lock
arpl
push
xorl
aad
imul
adc
add
adc
adc
sbb
and
pop
push
or
pushf
rcrl
xchg
jae
loopne
push
daa
movsl
stos
dec
nop
dec
fildl
xchg
ja
repnz
sub
lcall
push
push
lss
in
jo
and
test
mov
push
pop
inc
xor
adc
and
add
inc
in
jae
adc
mov
pop
xchg
ss
add
mov
sub
loopne
or
aaa
inc
mov
lret
rol
sahf
pop
addb
xchg
ret
adc
lret
aad
dec
dec
push
xor
cmpl
cmp
xor
push
sbb
add
jp
scas
int
xor
push
test
jno
lcall
dec
outsl
and
add
sbb
jge
push
test
or
out
in
bound
ss
pop
lahf
test
xor
mov
sbb
inc
xchg
mov
mov
lret
inc
dec
dec
out
lods
inc
jae
add
mov
scas
mov
hlt
loop
decl
ja
sbb
cltd
movb
xor
or
inc
push
scas
mov
inc
push
addb
jo
pop
shlb
pushf
add
daa
sbb
aad
inc
xchg
jb
xchg
sbb
and
sbb
movsb
int
mov
jo
jne
mov
outsl
cmp
xchg
push
test
pop
mov
inc
jp
and
push
mov
imul
xor
or
xor
sub
jb
loope
inc
xor
int
sub
pop
jo
in
or
inc
int
in
push
push
jnp
outsb
cmp
cmpsl
pop
jl
repnz
inc
inc
inc
xchg
jne
addr16
out
jg,pn
jno
mov
xlat
mov
mov
imul
inc
int
xchg
sub
add
shll
mov
or
lcall
data16
leave
rclb
xchg
sub
cltd
and
push
test
and
dec
nop
jbe
adc
jecxz
push
scas
mov
mov
in
jae
out
arpl
push
pop
nop
inc
les
push
hlt
cmp
and
jmp
xchg
push
mov
jb
jnp
rcrl
pop
pushf
cmp
loopne
scas
and
adc
mov
xchg
js
push
xchg
scas
xlat
or
pop
sarl
sub
add
xchg
rcl
push
mov
testb
scas
xor
inc
or
pushf
or
in
stc
sbb
inc
adc
cltd
and
sbb
in
clc
or
ds
add
inc
dec
rclb
pop
xchg
das
xchg
jae
mov
xor
jmp
adc
jne
pop
scas
xchg
ja
cmpsb
adc
push
and
mov
adc
rcl
sti
inc
push
push
push
mov
dec
fwait
stos
arpl
repnz
divl
xor
daa
popa
in
xor
into
icebp
js
pop
das
sbbl
cwtl
or
nop
inc
lcall
scas
lock
cmp
lds
dec
sbb
in
das
sbb
add
mov
lea
inc
int
movsb
inc
sbb
push
pop
aam
adc
sbb
mov
cmp
push
pop
push
aad
adc
adc
inc
stos
movsl
leave
add
inc
orb
ss
movsl
jl
add
sub
outsb
mov
aaa
out
cmp
inc
in
dec
dec
pop
cmp
sub
adc
push
inc
and
es
int
scas
dec
pop
pusha
add
stos
sbbb
test
repnz
mov
pop
out
js
int
mov
andb
cmp
lea
xchg
xor
or
out
xchg
stos
jbe
clc
inc
jg
sbb
fisubrl
and
pop
int
jae
andb
repz
out
mov
ds
xor
jge
pop
dec
xor
mov
outsl
fwait
in
mov
ftst
inc
int
mov
push
jp
pop
imul
sbb
or
int
outsb
lea
or
xorb
push
inc
jmp
repz
inc
cmp
xchg
cli
xor
sub
mov
or
js
sub
movl
stos
push
test
jecxz
mov
push
add
and
inc
inc
andb
adc
add
int
sgdtl
mov
sbb
out
dec
inc
icebp
inc
out
lret
hlt
mov
add
mov
jb
or
loope
fdivrs
arpl
and
leave
inc
add
inc
loope
sbbb
lods
pop
into
xor
mov
cmp
add
ljmp
or
imul
loopne
add
dec
insb
ss
cmpsb
sub
adc
inc
dec
mov
sbb
pop
sarb
mov
xor
and
push
test
jne
cs
xor
dec
sbb
mov
cmp
push
jae
mov
jae
mov
bnd
repnz
push
sub
pop
mov
pop
cmp
and
mov
cmp
or
cmp
clc
ret
jne
or
xor
cli
test
lods
mov
loopne
dec
cmp
inc
mov
cltd
movsb
push
and
jp
cmp
mov
jb
or
repnz
xor
es
out
pop
sub
addb
cmp
mov
stos
or
scas
sbbb
push
adc
sbb
fidivs
popa
lret
push
shll
iret
addb
lods
mov
or
push
movl
jg
lods
es
xor
cmp
jp
add
sub
xor
es
stc
ds
adc
jae
outsb
mov
cmp
mov
jp
cmp
cmp
sbb
nop
lret
cltd
es
dec
ret
inc
sbb
fwait
dec
in
ret
call
jnp
pop
lock
loop
icebp
sub
sub
add
pop
pop
dec
pusha
clc
jg
std
cmp
sub
mov
dec
packssdw
fisttps
enter
or
xor
pop
cmp
mov
int3
test
test
fldt
or
pop
cmp
xor
faddl
cmp
sbb
lcall
xchg
cmp
iret
or
jae
adc
and
sbb
push
out
add
push
push
add
cld
dec
sub
repnz
adc
insl
adc
je
dec
xor
repnz
jno
dec
cmp
mov
loop
jo
and
mov
sub
ss
ret
inc
rcrl
or
and
push
scas
pop
movsb
ret
out
loope
and
movsb
pop
stc
cmp
into
nop
lods
bound
cmp
mov
push
xor
shrb
dec
push
call
pop
inc
xorb
aad
incl
mov
push
add
rcl
rorl
test
mov
stos
cmp
adc
add
inc
add
fs
push
pop
aaa
xchg
jnp
cltd
enter
in
lds
push
cli
jp
cltd
push
push
int
dec
rcll
or
add
xchg
jb
jnp
mov
sub
aam
addr16
inc
int
sub
cwtl
fisttpll
fldcw
xchg
aam
int3
push
cmp
rclb
in
or
add
bound
imul
xorb
jbe
mov
add
sub
leave
adc
cld
cmpsl
cmp
popa
lret
rcrb
mov
sahf
sbb
rorl
cmp
adc
ret
push
push
mov
mov
push
push
iret
cmp
out
out
stos
call
push
stos
inc
push
js
mov
push
loope
stc
add
clc
fistpll
ret
push
movsl
mov
adc
pusha
mov
mov
dec
sbb
mov
repz
dec
sbb
push
sti
sub
mov
xchg
pushf
test
push
mov
cmc
adc
sbbl
scas
and
repnz
pop
cmp
xor
xorb
pushf
add
inc
or
push
push
cmp
cmpsb
mov
push
cmp
mov
dec
int
insl
orl
adc
dec
push
or
push
cmpsb
imul
inc
sbb
xor
and
mov
adc
adc
xor
xchg
loope
lret
popa
test
jge
jge
cltd
sbb
mov
mov
xchg
or
adcb
pusha
cmpsb
pushf
pop
mull
leave
push
xor
out
pop
xor
out
jp
cmp
rolb
jo
inc
xor
xchg
add
lock
sbb
out
sahf
loopne
or
add
push
nop
sub
adc
popa
shl
jb
insl
pop
inc
add
xchg
mov
adc
add
push
xchg
cld
pop
jns
sbb
jb
and
or
cs
test
add
sub
xchg
rorl
cli
mov
mov
subl
lret
gs
jne
imul
cmpsl
enterw
scas
add
std
imul
ret
cmp
loope
jmp
add
shlb
gs
xlat
add
js
or
pop
xchg
inc
roll
outsb
sbb
push
test
xlat
mov
shl
pop
add
dec
fists
xor
ret
push
jnp
cmpsb
mov
dec
cmp
mov
lret
aam
sub
pushl
lcall
add
push
daa
jae
add
pushl
and
cs
jp
dec
add
daa
and
inc
mov
adc
test
pop
repnz
xchg
jle
scas
jo
fiaddl
scas
mov
out
jae
cltd
sbb
and
cmp
push
inc
mov
lret
and
mov
mov
add
and
mov
mov
xorb
cwtl
sbb
push
or
push
scas
adc
scas
imul
mov
dec
loop
clc
icebp
mov
inc
fiadds
std
popa
cmp
adc
pushf
or
rcrb
fld
xchg
mov
mov
cs
mov
xor
mov
and
cmp
push
fistps
out
push
push
push
sub
popf
and
xchg
js
loope
repnz
int
add
andb
inc
popa
loop
sarb
rorb
popa
jb
inc
cwtl
jb
in
pop
jp
or
xor
jmp
push
sbb
sahf
repnz
cmp
or
popf
jne
jmp
xor
js
shr
inc
cmp
or
sbb
fs
int
inc
test
aaa
fsubl
inc
jae
pop
ds
mov
mov
in
mov
int
xchg
movb
popa
jb
add
shl
xchg
addr16
dec
mov
movl
pop
inc
ds
sub
or
hlt
push
aaa
and
iret
add
scas
in
mov
gs
xlat
movsb
cmpl
inc
add
ret
gs
mov
inc
cmp
jp
stc
mov
pop
pop
inc
mov
sbb
inc
fdivr
shl
xor
fwait
cs
xor
push
in
mov
idiv
pop
insb
rorb
mov
das
dec
popa
mov
xchg
sub
lcall
mov
sbb
imull
rcl
xor
aaa
or
or
cmp
mov
push
pop
push
mov
mov
push
inc
bound
stos
push
cs
or
ds
add
sbb
arpl
xor
pop
dec
jne
mov
push
inc
push
xor
orb
aas
inc
cmp
dec
sbb
jne
push
sub
xchg
shll
cltd
xchg
test
mov
inc
sbb
popa
xor
adc
ret
ret
mov
rcll
mov
daa
and
or
in
push
fnsave
push
out
clc
inc
add
pop
sbb
jno
stos
call
outsb
sub
mov
mov
xor
inc
xor
fdivr
shlb
adcb
push
incb
xor
xor
or
cs
cmp
push
jb
setne
jb
repz
jae
es
mov
xor
imul
gs
push
or
out
jo
xchg
pop
lock
mov
add
sbb
inc
or
push
mov
dec
inc
or
pop
cmpsl
mov
mov
ret
mov
out
ss
addb
out
xchg
aad
loope
clc
or
pop
add
lret
jae
inc
xor
push
or
inc
cmp
pop
adc
mov
mov
mov
jb
adc
cmp
pop
pop
fs
mov
dec
test
xchg
loopne
cmpsb
pop
repnz
lcall
pusha
inc
lock
xor
es
pop
ds
xchg
loop
mov
or
sbb
xor
or
push
shrl
popa
cmp
inc
cmp
shlb
or
xor
or
and
std
xlat
andl
test
sub
imul
jns
mov
push
cmp
fistpl
loopne
add
mov
sub
outsl
out
and
fs
mov
loope
ljmp
xorb
mov
push
sub
xor
mov
adc
int
cmp
sbb
push
inc
cmp
sub
mov
dec
pop
test
ljmp
adc
xor
rorb
sbb
jo
lea
jl
jb
lret
mov
xor
sub
outsb
push
cmp
cltd
adc
xchg
push
insl
and
jb
movsl
mov
ret
xorb
pusha
cmp
dec
cmp
pop
addb
inc
out
xchg
lock
loope
xchg
mov
orl
xor
mov
push
xor
sub
jmp
pop
adc
jne
sub
adc
cmpsb
inc
cmp
fisttpl
add
xor
sbb
xchg
cmp
adc
pop
pop
adc
jp
push
dec
fwait
and
pop
mov
ljmp
mov
jo
mov
ja
jno
sahf
mov
push
mov
mov
scas
push
push
popa
lret
fwait
imul
add
dec
mov
xchg
sub
icebp
xor
lret
loope
mov
in
xchg
xor
pusha
std
add
out
imul
and
dec
lcall
jo
xchg
jmp
ficompl
add
in
leave
shll
adc
aas
mov
and
lods
cmp
sub
xchg
xor
sbb
mov
and
xchg
test
or
xchg
rclb
dec
das
out
es
sbb
add
xor
jo
in
add
jo
dec
sbb
scas
inc
in
shlb
jno
sub
dec
pusha
xor
mov
rcrl
lret
loope
xchg
test
add
ret
sub
jb
adc
pusha
sub
mov
push
mov
mov
inc
jae
daa
jl
sbb
inc
mov
ret
lret
xor
mov
out
jb
scas
or
sbb
out
repnz
push
jecxz
add
cmp
enter
in
jo
pop
outsb
test
aaa
loope
sub
in
insb
adc
add
stos
rcrb
es
movsb
and
les
inc
or
dec
loopne
jne
out
sbbl
push
push
cmpsb
push
loopne
insb
cmp
cmc
or
pop
jns
enter
aaa
out
push
test
fs
jae
cmc
repnz
xorb
inc
lret
mov
in
subl
in
add
not
ja
push
lock
sbbb
and
inc
je
fwait
add
mov
sbbb
add
test
mov
rcr
or
sub
adc
scas
loope
int
or
jne
sub
adc
add
lods
insb
pop
inc
jge
or
mov
ljmp
push
test
push
cltd
sub
rcl
push
ror
cmpsb
push
cmp
loopne
in
xor
cmp
jb
lea
je
addb
sbb
add
in
sbb
stos
xchg
or
sbb
sub
push
mov
push
sub
mov
lcall
movsl
sbb
xor
pop
or
jbe
push
lods
and
push
scas
or
or
xchg
loope
inc
xchg
inc
push
add
jae
mov
mov
or
mov
dec
mov
cld
hlt
cmpsl
popa
aam
mov
nop
xor
cmp
and
inc
inc
cmp
pop
out
int
add
pop
mull
lock
gs
add
sub
mov
js
jl
mov
ljmp
test
mov
mov
mov
mov
lret
push
lds
pop
inc
jae
push
xchg
jae
in
adc
mov
add
inc
xor
lret
ret
repnz
push
xor
in
ds
sub
cmp
loop
jle
bound
or
ds
or
lcall
mov
pop
pop
out
pop
into
rolb
push
jae
mov
rcll
or
int
mov
mov
je
or
jo
sbb
push
out
loope,pn
push
push
push
xchg
rcll
dec
js
or
pop
and
xchg
inc
add
repz
mov
adc
sub
mov
mov
mov
add
mov
and
push
adc
fcoms
fisttps
test
mov
xorl
leave
xlat
sbb
je
outsl
int3
cld
out
sbb
ja
or
mov
lcall
out
fadds
lds
fadd
push
test
mov
clc
fimuls
add
push
pop
or
lock
fs
into
cmpsl
pop
ret
popa
test
popf
adc
xor
or
sbb
repz
or
lcall
cmp
jg
dec
sub
jae
rcrl
loopne
cld
adc
mov
push
icebp
or
js
call
lock
outsb
adc
mov
add
stos
sub
icebp
mov
or
push
in
sub
insl
dec
push
jo
cmp
jecxz
mov
and
mov
pusha
xor
roll
xchg
pop
lahf
push
push
ret
addl
mov
jmp
add
sbb
inc
stos
sbb
stos
xor
push
popl
cmp
arpl
addr16
xor
aas
js
ret
push
pop
ja
mov
mov
jb
or
jnp
aad
pop
push
popa
push
inc
xchg
mov
push
jp
inc
cwtl
fisubrl
call
inc
cwtl
or
frstor
orl
and
mov
in
dec
push
cmp
pop
sub
pop
imul
leave
in
nopl
aas
loopne
xchg
mov
ret
mov
repnz
push
pushf
sub
or
hlt
xor
jb
repnz
adc
mov
jb
shlb
push
and
pop
ret
mov
add
or
xchg
sbb
and
dec
in
dec
cld
and
lcall
mov
je
xorl
mov
mov
add
dec
jo
enter
or
sub
mov
jmp
hlt
pop
add
andl
adcb
mov
sti
lock
sti
jecxz
jp
in
in
arpl
ljmp
pop
sub
jg
dec
xchg
rcrb
mov
fwait
cmp
dec
mov
sbb
jb
js
imul
sti
iret
xor
sub
mov
in
add
push
aad
push
arpl
test
sbb
fmull
and
rolb
adc
in
jbe
add
xchg
mov
push
sti
repnz
add
inc
adc
pop
subb
pop
add
inc
or
jns
ret
dec
jg
js
mov
mov
sub
add
or
out
fdivrl
or
inc
cmp
repz
cwtl
jp
or
stc
sbb
pusha
push
xchg
loope
or
jmp
pushf
push
mov
xchg
and
mov
movl
jmp
inc
push
pop
push
mov
cwtl
xor
mov
fcmovnb
and
scas
sbb
or
jg
inc
subl
das
sub
mov
xchg
xorl
jns,pn
add
add
ret
xor
nop
and
add
push
mov
pop
or
push
xor
push
jno
js
inc
sub
or
push
adc
pop
stc
push
inc
sub
or
call
cmp
xor
push
push
push
mov
push
sbb
in
cmp
sbb
xlat
dec
cmp
sbb
test
push
pop
push
xlat
and
aaa
ficoml
xor
cmp
ret
push
fdivrp
xchg
adc
cmpsl
fisttps
loope
shl
sub
imul
shlb
js
xor
inc
cmp
pop
inc
rol
les
xchg
xchg
sbbl
jns
and
or
push
daa
xchg
jae
shlb
cmp
mov
jl
mov
imul
adcb
scas
inc
dec
xchg
push
loopne
fcoml
stos
push
mov
int
or
fdivrp
cmpsl
daa
sub
loop
stos
mov
push
jnp
loope
jo
sub
add
adc
jmp
cs
xor
push
mov
or
jae
fidivs
loopne
clc
push
and
fldt
je
orb
outsb
and
add
jmp
jae
shlb
movsl
sub
jmp
enterw
cli
test
add
push
xchg
mov
xor
dec
popf
sbb
push
inc
sub
pop
mov
pusha
and
adc
or
push
and
imul
int
cmpsl
and
adc
add
add
add
into
cmp
mov
xchg
sub
or
sbb
bound
mov
scas
stos
je
in
push
xchg
xor
push
lods
adc
sub
out
enter
xlat
sbb
adc
and
sbb
addb
mov
dec
in
out
rolb
scas
sbb
dec
lods
xor
and
adc
inc
xor
or
dec
loopne
int3
push
dec
lea
inc
jnp
xor
adc
jo
xor
jnp
push
das
or
mov
dec
sahf
xor
daa
insl
push
push
fistl
cmc
fisttpl
xlat
jne
mov
aaa
pop
xchg
mov
push
mov
jg
mov
xor
enter
pop
stos
xchg
test
push
jmp
add
push
sbb
test
pop
mov
push
mov
imul
jbe
pop
imul
subb
dec
test
loop
ss
jb
push
jae
xchg
es
jbe
xor
add
jmp
inc
or
sub
pusha
push
iret
sub
lcall
pop
push
mov
popa
jo
sub
test
shlb
or
cli
mov
js
mov
sahf
imul
incb
out
sbb
jb
pminub
rorb
adc
push
add
sub
data16
sbb
sbb
or
test
adc
aad
inc
orl
sbb
data16
jb
or
cmp
imul
push
outsl
jno
or
stos
sub
mov
or
sbb
cmp
out
inc
push
push
inc
pop
cwtl
add
mov
push
mov
inc
xor
andl
adcb
loopne
inc
imul
mov
and
orl
repnz
cmpb
or
pop
in
and
test
hlt
mov
cmpsb
mov
ljmp
push
out
mov
shll
hlt
lret
popa
pop
lea
xor
xchg
add
daa
inc
and
sbb
leave
push
or
mov
xchg
ror
movsl
jo
dec
shlb
dec
lock
push
sbbl
push
je
push
push
push
mov
scas
clc
outsb
xchg
jl
enter
sub
dec
xchg
sbb
push
inc
jbe
ljmp
pop
cmp
pop
cmp
sbb
or
dec
sub
enter
out
mov
sub
cli
aad
nop
ret
cltd
mov
adc
nop
addl
popa
xor
enter
mov
cld
push
outsl
rcl
lods
inc
daa
sub
lods
jae
add
add
pop
cmc
test
push
addl
outsb
cmp
out
cs
mov
xchg
jp
mov
lea
cltd
adcb
imul
inc
push
rorb
inc
scas
push
cmp
sbbl
dec
repnz
cmp
cwtl
dec
dec
lahf
push
es
cmpsb
push
dec
and
cwtl
dec
dec
mov
enter
mov
sbb
and
sets
test
cmp
add
addl
loopne
lret
int
add
sbb
cwtl
mov
arpl
xor
mov
pushf
in
xor
imul
pminub
filds
or
cmc
xchg
dec
aad
or
jp
cld
xchg
adc
push
cmp
xchg
xchg
and
pop
aam
cmpsb
push
dec
stos
mov
or
sbb
fdivrl
sub
and
mov
pop
xor
and
aad
jle
daa
jo
and
add
lods
xchg
sub
pop
aaa
and
add
popa
lods
in
dec
ss
dec
sti
jg
lcall
adc
dec
adc
cmp
mov
push
pushf
xor
mov
adc
and
js
jns
enter
xchg
decb
andl
aad
adc
cmp
inc
in
sar
in
leave
cltd
outsb
sub
mov
add
or
sbbb
pop
rolb
les
dec
cmpsl
lods
ret
mov
sub
jns
enter
adc
mov
je
mov
mov
jge
aam
fs
push
push
xchg
aam
cmp
rol
loopne
js
or
sti
pop
mov
popf
mov
xor
pop
shlb
repnz
jge
sub
and
jnp
add
scas
sbb
pop
inc
hlt
stc
insb
addb
xlat
xchg
mov
fistl
es
cmp
out
enter
fisubl
xchg
les
xor
xchg
ret
xchg
stos
leave
cmp
in
loop
rclb
clc
dec
inc
in
sbb
pop
cmp
add
jno
mov
orb
add
adc
cmpsb
ret
mov
jmp
mov
adc
test
test
sbbl
fidivrs
subb
push
sub
add
sbb
sbb
loopne
or
test
adc
add
xchg
mov
push
push
shrl
and
shrl
sbb
or
out
loope
mov
repnz
lods
loope
mov
cs
stos
and
test
and
add
xchg
mov
dec
call
pop
add
pushf
test
inc
add
loop
sub
pop
ss
sub
insb
add
stos
add
icebp
sbb
jae
pop
cmp
xchg
push
push
and
or
rcll
in
xchg
add
sub
add
shll
mov
pushf
or
push
jae
sahf
jno
sub
in
add
jne
jmp
mov
pminub
and
negl
fldenv
daa
mov
dec
inc
add
add
xchg
xorl
loopew
into
in
movsb
pop
inc
int3
mov
cmpsb
clc
push
mov
pop
inc
mov
xchg
rorl
and
xor
and
jb
std
mov
cwtl
repnz
sbb
ret
inc
sbb
mov
mov
mov
mov
push
jo
in
add
pop
push
xor
xor
inc
push
mov
gs
les
roll
inc
nop
leave
push
in
loop
mov
stos
xor
pop
mov
pushf
jmp
xchg
dec
int3
or
pusha
and
cmpsb
adc
cltd
rol
jp
outsl
fs
pop
call
xchg
push
mov
leave
shrb
fmull
pushf
add
bound
pop
push
mov
sub
cmp
jb
push
popa
js
loop
jae
mov
popa
push
dec
push
int
rcrl
cltd
pop
aam
push
fdivrl
push
xor
dec
pushf
xchg
add
push
fcmovb
dec
movsl
out
fdivl
dec
clc
test
mov
jecxz
add
lock
adc
mov
test
call
call
icebp
xchg
ret
inc
xchg
mov
jo
pop
xchg
andb
inc
adc
es
rcl
jb
nop
test
mov
and
jl
sbb
or
js
dec
aad
or
push
xor
gs
dec
push
jb,pn
jmp
xchg
mov
cmpsl
xor
and
aaa
rcrb
dec
sub
jo
lret
jl
inc
cwtl
rolb
lock
adc
or
test
xchg
and
cmp
push
xchg
dec
adc
bnd
sbbl
push
jp
sbb
loopne
lock
lods
cli
adc
ljmp
inc
cmp
cmpb
je
jecxz
shlb
shll
jo
movsb
xchg
inc
push
test
test
loope
push
rolb
mov
adc
inc
sub
inc
xlat
sbb
sub
add
xchg
inc
mov
push
sbb
sub
adc
xor
pop
into
xor
rorl
loope
xor
inc
push
cmc
sub
test
cli
jns
mov
push
cmpsb
dec
mov
push
bound
inc
loopne
dec
inc
test
inc
mov
push
xchg
leave
pusha
enter
mov
add
scas
cmp
std
movl
pop
push
push
sub
mov
cmp
mov
cmp
xor
inc
xor
sub
mov
push
inc
push
nop
or
pop
push
adc
jle
mov
cmp
mov
push
iret
adc
inc
dec
stos
or
cmp
and
sti
lods
repz
mov
or
inc
add
add
ljmp
push
add
xchg
sar
jge
add
dec
add
lret
sbb
inc
add
leave
or
jb
out
lret
jo
cmp
aaa
lock
enter
js
shll
xchg
cs
jl
loop
or
fdiv
aad
jno
dec
cmp
inc
add
cmp
ret
xchg
roll
mov
sub
xor
push
add
sbb
inc
popl
orl
push
mov
imul
or
or
push
add
jb
add
pop
add
mov
mov
add
sbb
in
jmp
cmpsl
add
scas
lock
and
adc
in
out
jae
clc
enter
pop
std
adc
add
xchg
add
scas
and
push
adc
inc
pop
movd
sbb
inc
orl
jp
daa
pop
sub
xor
pop
xchg
push
dec
xchg
sbb
jle
repnz
push
das
ss
push
int3
pop
test
movsl
mov
stos
lret
and
movsb
and
xor
dec
sub
dec
mov
push
mov
in
adc
jb
and
or
loope
out
jge
mov
adc
and
pop
inc
ftst
call
dec
in
into
inc
cmp
nop
xor
dec
fwait
repnz
sbb
dec
sub
lcall
insb
test
loope
int
sub
sbb
xchg
sub
les
and
or
scas
xlat
les
mov
pushf
inc
xchg
rcll
push
pop
mov
sbb
push
test
push
sbb
fs
int
pusha
jo
insl
scas
jle
jae
test
mov
int
pop
cld
mov
inc
inc
inc
sub
push
mov
clc
enter
test
mov
and
mov
dec
popa
rcrl
rorb
push
bound
int
push
xchg
mov
pushf
and
add
mov
rorb
cs
aad
jb
movsb
ret
pop
pusha
mov
scas
stos
jo
cltd
leave
sbb
inc
push
or
or
sub
shrb
fidivrs
es
mov
inc
cli
and
push
mov
iret
sbb
stos
sub
sbb
jbe
dec
cwtl
add
or
push
jg
mov
adc
mov
int
cs
push
jge
jp
imul
mov
add
inc
pop
or
inc
cmp
mov
push
stos
out
mov
outsb
or
imull
or
cmpsb
dec
cmp
and
cmpsb
mov
pop
pusha
shlb
pop
mov
lods
xchg
adc
inc
js
inc
mov
inc
jnp
push
or
cmp
shlb
lret
push
mov
xor
cmpsb
test
sbb
les
and
stos
stos
push
pop
cwtl
jb
jecxz
dec
lcall
stos
mov
inc
mov
inc
in
push
cs
dec
push
mov
inc
out
xor
inc
inc
test
jo
and
push
lods
cmp
js
push
jp
cmp
or
std
push
lea
xchg
subl
jb
jo
out
adc
mov
pop
push
loop
xor
pop
sub
in
jo
enter
and
shlb
add
pop
sbb
or
add
push
xor
sbb
je
jmp
shll
xchg
xlat
popf
sbb
sbb
rolb
adc
adc
jo
lds
lcall
cltd
jmp
adc
pop
pop
cwtl
jo
jg
sbb
add
insl
lret
jo
ljmp
cmpsb
cmpsb
mov
add
rcl
aaa
or
jae
mov
xor
dec
scas
loopne
sbb
cmp
xchg
test
fsubrl
push
scas
mov
adc
xchg
int3
push
add
cmpsl
cmp
inc
sub
xor
clc
inc
aam
xor
mov
or
movsl
push
jecxz
aam
xchg
add
ljmp
add
dec
pusha
sub
dec
mov
into
dec
push
jno
push
cmp
push
clc
leave
aad
cltd
jge
or
test
mov
jg
mov
test
add
movsl
or
lahf
or
out
rcll
push
push
inc
cmpsb
adc
or
sbb
push
sbb
push
cmp
je
pop
push
jecxz
xchg
addl
call
adc
mov
dec
sbb
sbb
cmp
add
dec
adc
pop
loope
xchg
jge
pop
or
and
lds
pop
cwtl
scas
and
mov
aad
icebp
subb
inc
fimuls
add
pop
sub
loope
scas
jg
add
call
inc
ss
es
or
adc
lret
in
lret
sbb
dec
add
mov
pop
add
cmp
sbb
popf
push
addl
cmpsl
cld
pushf
repnz
inc
repnz
stos
xchg
leave
cmp
sahf
xor
aam
cld
adc
inc
sbb
pop
or
push
test
cmpsb
xchg
dec
mov
push
fsubs
pop
cmp
lock
fsts
pop
push
cmp
add
and
sbb
in
lcall
xor
cltd
ja
mov
test
rol
sub
andl
push
push
add
sbb
sbb
adc
test
adc
or
push
add
sbb
push
sbb
cmpsb
pop
mov
or
mov
pop
xor
popa
add
loopne
aaa
out
lea
in
pushf
ret
hlt
adc
or
fldt
or
xchg
inc
mov
xchg
imul
mov
nop
pop
cmp
jo
xlat
pop
mov
fwait
roll
sbbb
or
push
inc
push
in
push
ror
jg
or
stos
xchg
xchg
adc
mov
push
mov
and
enter
orb
sbb
pop
hlt
aad
pop
lret
scas
sbb
push
xchg
jae
push
out
scas
inc
add
shll
or
and
sbb
insb
dec
add
pushl
adc
test
mov
repz
push
and
aam
loopne
xor
jle
jb
jae
add
in
into
adc
add
push
adc
or
add
pop
loopne
mov
add
dec
inc
imul
mull
rolb
lret
xor
pop
push
pusha
enter
add
dec
arpl
or
xor
xor
pop
pop
lds
in
loopne
nop
mov
inc
xor
xchg
xor
and
lds
jae
xchg
scas
mov
fwait
repz
daa
fcomps
or
loopne
lcall
cmp
js
sbb
pop
int
or
je
sbb
mov
xchg
add
push
mov
mov
imul
pop
pop
test
and
adc
cs
sub
pop
nop
sbb
out
cmp
cs
clc
lret
adc
rolb
jp
inc
sub
in
mov
mov
pop
jne
add
adc
hlt
test
xchg
or
in
jb
call
add
sbb
adc
and
and
outsb
add
dec
mov
push
inc
fldt
fcoms
mov
mov
cmp
loope
xchg
xlat
incl
sbb
dec
je
dec
lods
sti
ss
push
dec
add
test
imul
or
loopne
add
dec
jne
cmp
jp
xor
fistpll
das
dec
lcall
outsl
xor
dec
add
mov
sbb
or
cmp
mov
push
ljmp
insb
xor
sub
stc
bound
inc
std
add
mov
sbb
adcl
out
lret
shrl
dec
push
add
xor
and
lahf
xchg
loopne
inc
mov
inc
cmp
xor
shll
xor
cmp
popa
add
fdivl
or
stos
mov
push
sbb
dec
loope
in
or
or
in
mov
repnz
or
ret
sbb
shr
adc
or
mov
insb
xor
dec
add
add
jo
inc
mov
xorl
and
stos
mov
mov
mov
push
es
cmpsb
rcrl
push
push
add
mov
jo
xor
movsl
shll
fildl
leave
push
mov
sbbb
mov
inc
add
jbe
xchg
sub
test
sub
push
dec
or
call
mov
cmp
mov
xchg
cmp
adc
jp
cmp
and
mov
cmp
inc
push
or
jb
inc
adc
push
jbe
gs
lock
xor
fidivs
sarb
mov
push
inc
pop
dec
lds
inc
jecxz
loope
cld
push
call
jae
jmp
push
dec
in
dec
push
rol
adc
cmp
or
rclb
add
inc
pop
add
arpl
mov
out
xor
inc
fwait
inc
lock
mov
push
mov
es
mov
mov
aas
fwait
xor
shlb
inc
mov
sub
push
mov
mov
xor
push
push
dec
roll
mov
sub
jo
out
adc
mov
daa
cs
add
add
inc
mov
push
sub
xchg
ret
sbb
out
repz
mov
dec
add
add
pop
xchg
jge
cmp
xor
cmp
inc
or
or
sub
sub
fiaddl
out
sbb
add
add
dec
xchg
test
nop
mov
mov
xchg
push
test
ret
inc
aas
stos
loopne
fs
mov
dec
lock
add
ret
in
inc
jae
mov
push
xchg
mov
cli
mov
push
jnp
in
in
mov
jo
pop
cmpsb
jmp
jle
jo
xor
cmp
dec
add
lret
mov
fsub
push
and
negl
scas
dec
push
ficoms
testb
shlb
adc
stos
test
sub
sbb
mov
shll
inc
push
sub
sbb
xorb
pushf
jecxz
mov
jns
addr16
popf
cli
inc
cmp
add
or
fcmovb
push
inc
int
into
cmpsb
jg
in
fdivs
clc
xchg
pop
adc
lods
mov
shrl
xlat
mov
pusha
dec
roll
add
add
xor
jle
sti
pop
add
mov
push
lds
or
and
pop
mov
inc
fisttps
push
in
mov
insb
xchg
movsb
pop
sub
loop
cmpsl
fcomps
sub
xor
inc
add
mov
adc
adc
out
subb
mov
adc
scas
pop
popa
jg
popf
pop
in
insl
in
gs
ds
sbb
xorl
cmp
adc
or
inc
or
cld
or
add
and
push
fbld
xor
cmpsl
xchg
loopne
push
popa
popf
or
xorl
mov
rcll
or
loop
xchg
lret
or
inc
rclb
xor
mov
inc
pop
inc
es
scas
jp
mov
cmp
popa
sbb
aam
cltd
cmp
ret
in
out
mov
sub
loope
cmp
lahf
mov
out
pop
jecxz
lcall
xchg
sbb
insl
int
test
inc
mov
cltd
rolb
fsubrp
and
mov
inc
popl
sbb
insl
push
xchg
ljmp
sbbb
ss
jae
les
cwtl
in
sbb
fld
adc
fsubs
mov
bound
inc
loope
or
mov
test
push
xchg
aad
test
repnz
sahf
jo
or
jns
pushf
jmp
mov
mov
inc
sub
sbb
jb
sub
nop
jmp
push
loop
stos
jnp
dec
adc
outsl
in
cmp
mov
mov
shlb
inc
push
nop
sub
cwtl
push
add
pop
mov
pop
scas
and
das
xor
shl
sbb
pop
cmp
in
push
cs
sbb
sub
jg
inc
enter
fs
stos
into
mov
sbb
push
mov
sub
xor
ja
lahf
in
inc
or
in
popa
pushf
pop
sbb
sbb
cmc
adc
or
dec
cltd
or
out
xchg
xchg
movsb
inc
cmp
inc
jno
mov
test
add
into
std
aaa
add
add
pop
lret
push
cwtl
push
lea
adc
dec
or
rorl
push
cmpsl
addb
int
jno
js
call
mov
loope
jne
rcrb
mov
push
jae
xor
push
int
dec
xor
push
xor
rcll
shl
jl
sbb
cmpsl
xorb
inc
push
jo
sub
sub
imul
xor
test
push
jnp
xchg
push
xor
pop
pop
push
repnz
stos
adc
inc
xchg
mov
xchg
mov
fcoml
sub
push
inc
mov
popa
dec
lcall
out
xchg
sbb
mov
jmp
stos
mov
or
test
imul
inc
es
jo
xor
or
ss
arpl
addr16
jns
leave
aad
sub
sub
and
xor
std
mov
cmp
inc
sbb
mov
or
js
addr16
push
pop
icebp
shl
xor
loopne
add
and
mov
int3
inc
jne
push
cs
or
adc
out
mov
call
add
jmp
andl
and
xorl
pop
cmp
adc
mov
dec
and
jb
mov
inc
sbb
dec
cltd
cs
inc
lods
sbb
mov
mov
xchg
or
dec
in
inc
gs
inc
test
shll
pusha
jo
stos
sub
rcl
test
pusha
fists
dec
push
xchg
or
xor
add
pop
out
test
push
std
cmpsl
pop
cwtl
push
sub
daa
xor
push
mov
in
xchg
cmp
push
sbb
gs
test
out
or
lret
loopne
rolb
pushf
in
push
adc
lcall
or
mov
push
ljmp
cli
pop
pusha
push
data16
negl
aam
and
lret
add
push
ljmp
jp
xchg
adc
jg
cmp
roll
xor
sbb
add
or
pusha
sub
enter
popa
inc
mov
cmp
add
inc
push
cs
cwtl
jp
cs
adc
enter
loopne
test
sub
sbb
xor
bound
push
pop
pusha
pop
push
xor
xor
scas
mov
addb
mov
xor
jecxz
sti
mov
out
jp
xchg
adc
xor
fmull
xchg
mov
mov
jp
xor
inc
insb
adc
test
mov
xchg
add
sbb
sbb
push
xchg
adc
ss
stos
pop
cmp
or
rcrl
loop
inc
mov
shlb
scas
or
shrb
adc
push
shr
xchg
inc
add
adc
mov
xor
mov
cmp
mov
das
inc
xchg
fidivl
inc
hlt
arpl
clc
adc
mov
ret
sub
inc
fmull
push
outsl
loop
nop
adc
call
adcl
shl
add
cmp
sub
outsb
mov
mov
sbb
jb
xor
enter
pop
push
mov
mov
out
pop
hlt
or
inc
lds
sti
or
mov
loope,pn
outsb
dec
xor
and
push
mov
shlb
subb
scas
xchg
lret
sbb
or
cmp
pop
mov
iret
dec
push
inc
push
inc
mov
scas
fs
adc
mov
test
das
shll
repnz
loope
dec
pop
inc
cmc
cmpsl
flds
fisubrs
inc
pop
lea
pusha
stos
sbb
pop
or
xor
cmc
es
or
notl
inc
xor
inc
mov
outsl
ret
mov
shll
mov
cmpsb
test
and
push
imul
or
cs
push
test
ret
pop
mov
lret
pop
jmp
push
or
mov
jb
out
and
arpl
xor
push
arpl
push
aaa
mov
or
cmp
das
sub
inc
sbb
dec
repnz
lcall
or
jne
push
jg
pop
inc
rcl
test
mov
push
xchg
or
mov
imul
xchg
jecxz
popa
xor
mov
data16
mov
inc
push
push
inc
lds
push
pushf
or
sub
jp
xlat
sub
stos
test
xchg
in
jp
mov
cmp
pop
test
sub
add
mov
inc
cmc
out
and
jb
dec
loopne
adc
mov
jo
inc
push
sub
loopne
pop
testl
mov
mov
aam
push
hlt
jnp
dec
adc
sbb
mov
pop
add
mov
adc
rorb
jae
adc
insb
adc
aam
push
jge
push
mov
add
mov
fsubs
inc
aam
dec
push
lcall
and
daa
add
push
xchg
add
out
testb
add
sub
mov
adc
fisttpll
bound
sarl
mov
adc
test
dec
mov
fistps
pop
inc
cwtl
push
incb
push
nop
cs
mov
int
imul
mov
and
sub
inc
adc
addr16
rcrl
or
das
call
push
jp
pop
xchg
add
jb
inc
roll
aam
sbb
mov
mov
dec
shr
mov
fstps
xor
push
mov
test
add
pushf
inc
xor
cmpsb
sti
inc
cmp
mov
fs
add
xchg
jb
roll
add
xor
push
ret
nop
testl
sbb
and
and
clc
cltd
lock
mov
push
enter
jp
jnp
add
enter
push
cmp
jmp
in
ds
pop
inc
out
or
ljmp
cltd
fisttpll
sub
cmp
cmp
shl
cmpsl
scas
xor
sub
xchg
shlb
bound
pushf
and
cmp
push
js
and
cmp
pop
xor
addr16
data16
mov
xor
enter
jb
xor
adc
sbb
mov
xor
cmp
dec
ja
cltd
lcall
fists
cmp
leave
mov
cwtl
mov
lcall
mov
clc
popf
pop
inc
lods
push
into
cltd
into
inc
mov
add
je
lret
fs
aam
shl
dec
es
push
xor
aad
mov
lea
addb
fiaddl
xchg
push
and
ret
pop
cmp
pop
push
jp
adc
rcrl
loope
gs
or
or
fists
aaa
mov
insb
dec
push
insb
xchg
pop
sti
mov
iret
mov
push
push
aad
data16
pop
int
popa
punpckhbw
test
mov
cmp
push
inc
xor
mov
fistpl
push
cmp
fistl
jo
outsl
adc
das
pop
roll
mov
ljmp
pop
or
and
dec
push
inc
jae
mov
call
pop
fiaddl
iret
testb
popa
push
cmpsb
push
sbb
loope
cld
xchg
rcll
imul
fcomi
daa
nop
xor
lcall
mov
mov
loopne
in
in
pop
sbbb
out
cmp
das
pushf
movsl
pop
sub
xor
mov
pop
sbb
loop
adc
ret
jo
aaa
addr16
je
adc
cmp
mov
adc
sbb
lcall
loope
outsb
pop
cmp
nop
adc
cmp
subl
inc
and
inc
scas
pusha
mov
sbb
push
push
mov
scas
dec
leave
jle
mov
icebp
and
sbb
jnp
mov
pop
pop
stos
add
ljmp
lcall
jo
push
inc
xor
jb
pusha
jnp
dec
hlt
add
arpl
push
cmp
and
sbb
mov
pop
out
mov
mov
ljmp
inc
scas
sbb
mov
mov
add
fcom
enter
xchg
stos
repnz
dec
stos
push
cwtl
and
mov
adc
add
or
enter
sbb
mov
orb
xor
pop
in
xor
in
sarl
popa
clc
push
add
aam
sub
movsb
mov
fwait
rcr
xchg
jp
mov
stos
inc
inc
mov
in
push
mov
mov
inc
lcall
popf
add
xchg
stos
leave
add
int
lret
aad
or
jp
or
mov
or
mov
popa
ljmp
inc
cmp
mov
aam
pop
inc
inc
jne
mov
daa
xchg
add
adc
mov
cmpsb
xor
test
mov
cmp
or
mov
daa
jae
push
xor
inc
sub
push
xlat
lods
scas
push
movsbl
lcall
pop
jae
push
pop
mov
or
xor
and
jp
xchg
aam
loope
push
mov
lds
les
fs
mov
xchg
sahf
inc
xor
inc
lea
inc
add
scas
pop
pop
jns
jmp
lock
xchg
sub
test
ror
jno
xor
pop
mov
adc
lds
nop
mov
gs
and
inc
mov
sub
hlt
in
cmp
or
mov
sub
inc
push
push
cs
push
and
add
inc
adc
mov
data16
daa
sub
arpl
push
jl
mov
mov
jno
mov
adc
or
inc
and
decb
addr16
jno
cli
sbb
sub
push
dec
insl
rcr
dec
or
xor
loop
outsl
icebp
int
adc
push
out
jno
inc
jne
pop
adc
adcl
or
daa
ret
add
cmp
fs
stc
sub
movsb
fldenv
push
jnp
pop
jns
mov
in
pop
and
sub
and
xchg
inc
loopne
xor
in
or
test
jo
pop
adc
cmp
cwtl
dec
sbb
loop
add
adc
push
jo
lahf
mov
jp
xchg
adc
mov
cmp
cmp
call
and
jo
fwait
cs
loope
negl
sbb
rcrb
add
xlat
dec
pop
fwait
scas
xchg
add
and
inc
cmp
inc
inc
movsb
add
push
mov
jb
inc
in
scas
enter
stos
sub
pop
in
pushf
addr16
andb
or
jnp
subl
sub
int
roll
test
inc
jnp
loope
sbb
adc
popf
iret
add
xor
lret
jp
push
inc
push
sahf
jp
adc
push
xchg
je
jo
pop
lret
jb
stos
adcb
xor
test
dec
push
sbb
cmp
push
push
pushf
cli
dec
add
adc
pop
push
scas
xchg
push
cltd
xor
lret
testl
dec
push
enter
xchg
or
loope
xchg
stos
push
cmp
push
movsb
jb
adc
popa
push
int3
mov
pop
sbb
sbb
cmp
sbb
iret
push
in
mov
aad
xor
lea
rcrb
mov
ret
or
in
adc
or
jg
dec
lret
stos
mov
push
into
cmpl
sarl
movsb
shl
sub
add
jne
rcr
mov
push
or
push
add
push
arpl
adcb
jae
xchg
iret
les
outsb
jmp
lods
mov
xor
shlb
cwtl
test
subl
jo
sub
clc
jb
orb
aam
in
pop
in
scas
cmp
mov
fildll
pop
or
out
in
sbb
or
mov
jb
int
icebp
scas
adc
dec
or
popa
mov
sub
push
cltd
aaa
das
mov
data16
test
daa
jmp
test
cmp
jge
mov
inc
xor
test
xor
xchg
out
out
scas
shll
pop
xor
add
push
ret
jp
add
lahf
sbb
cmp
hlt
dec
xchg
je
mov
cmp
pop
adc
sub
pusha
jo
rorl
and
insl
out
pop
gs
call
push
and
lcall
loop
mov
pop
push
rol
add
push
in
xchg
sub
adc
xchg
test
fs
lcall
add
test
mov
pop
hlt
jno
add
inc
cmp
ret
jns
les
pop
das
pop
lcall
pop
or
daa
xchg
xor
sbb
adc
sub
test
mov
fbstp
pop
jo
shrl
out
cwtl
pusha
lret
loope
xchg
fidivl
enter
push
add
out
sbb
dec
or
inc
mov
push
push
dec
sbb
mov
addr16
dec
fiadds
push
push
loop
pop
in
fildll
lods
and
sub
rcl
js
stos
int
pop
push
sub
lret
loop
add
xchg
daa
sbb
add
push
shr
jae
sub
js
sub
je
sub
pop
adc
xor
cwtl
or
je
inc
adc
jb
xchg
gs
fisttpl
sbb
pop
pop
and
add
stos
add
pop
flds
loope
push
sub
ret
and
mov
popa
cmp
sbb
inc
cwtl
dec
sbb
int
inc
into
cltd
and
ret
add
test
cmp
sbb
pop
int
stos
cmp
push
cmp
add
adc
rcrb
out
mov
int
out
dec
sarl
pop
sub
xchg
mov
mov
repnz
dec
and
mov
mov
mov
or
test
dec
inc
leave
push
or
push
sub
inc
mov
mov
pop
je
std
add
mov
out
call
push
mov
scas
cmp
loopne
mov
popa
sub
dec
push
push
pusha
lret
xor
push
leave
loopw
out
mov
pop
pop
mov
adc
xchg
loopne
adc
jle
popf
inc
popa
orb
mov
js
orb
and
loope
xor
sbb
add
xchg
jmp
into
xor
shll
lret
push
xor
jg
push
std
mov
shlb
aad
mov
stos
pop
lret
add
adc
dec
mov
ret
or
sbb
push
push
pop
push
outsb
jb
rorl
pop
scas
mov
std
adc
adc
sbb
fadds
and
pop
sbb
mov
adc
in
lods
sbb
jmp
flds
xchg
cld
pop
push
jo
nopl
iret
push
jb
push
sbb
push
pop
scas
mov
or
pop
sub
xchg
lods
les
push
push
mov
inc
inc
and
jl
orl
mov
push
inc
orl
mov
xor
pop
xchg
stos
mov
adc
stos
ret
cmp
push
daa
jae
add
loopne
lds
adc
push
push
push
adc
xchg
dec
es
sbb
daa
sbb
inc
jae
xchg
sbb
maxps
pop
popa
xor
inc
mov
xor
jge
mov
in
xor
into
add
mov
cmp
lods
adc
mov
in
int
int
lods
ja
push
inc
out
sbbb
cmpsb
es
shll
and
adc
lcall
mov
subl
ret
mov
imul
and
in
shlb
pop
xor
filds
lods
pop
std
push
xor
arpl
mov
rolb
scas
stos
scas
scas
jo
mov
cs
jae
inc
fmuls
mov
add
push
std
pop
mov
stos
lret
lea
push
xchg
mov
add
add
ja
adc
adc
jmp
imul
pop
mov
mov
adc
rcl
mov
pop
jb
cs
xor
dec
decl
pop
cwtl
adc
mov
sti
mov
jns
adc
and
xor
or
jo
arpl
movsl
push
add
xor
cltd
pusha
adc
jg
popa
ss
sbb
or
add
pop
xchg
out
or
loope
cmpsb
or
ss
faddl
jmp
pushf
rcrl
je
inc
dec
xor
mov
lcall
xchg
sub
jo
pop
cmp
inc
mov
dec
cs
cs
cmp
or
jo
pop
jne
loopne
inc
call
mov
inc
push
mov
push
in
jae
push
xor
and
inc
xor
add
aam
push
xchg
xchg
mov
fcompl
jnp
orb
popf
sbb
and
sbb
push
cs
roll
mov
xorb
imul
add
and
ljmp
dec
test
cmp
shlb
movsl
jo
mov
add
imul
in
push
jo
jo
ljmp
shl
mull
or
mov
imull
ret
rcrl
cmp
sub
pop
adc
out
push
iret
in
mov
add
dec
xchg
stos
add
cmp
add
sub
inc
ja
mov
push
push
movsb
insl
xchg
cwtl
sub
andl
sbb
xor
test
popa
push
cld
push
xchg
push
sbb
sub
and
push
in
std
repz
dec
adc
xchg
in
flds
test
nop
push
pop
es
in
repnz
pop
mov
addl
mov
scas
dec
aam
adc
clc
mov
jl
sbb
scas
inc
repnz
push
dec
js
int3
mov
mov
cmpl
dec
xchg
mov
test
jg
or
ret
test
ret
imul
adc
push
inc
mov
xchg
lret
inc
cmp
inc
xor
insb
data16
xchg
andl
sub
xchg
loop
out
popa
in
mov
jae
push
mov
push
sbb
inc
mov
fisubrl
xor
inc
lock
push
clc
push
adc
add
xor
pop
pop
mov
add
movsb
and
mov
and
loope
popf
push
sbb
jne
and
pop
lock
inc
xor
out
xor
test
ret
divl
dec
sahf
add
adc
cs
mov
adc
inc
add
push
push
or
jnp
jo
xchg
jno
mov
cwtl
push
dec
cmp
mov
jns
ljmp
jo
push
ficoms
mov
push
pop
test
aaa
jp
jae
or
rclb
fs
test
lock
pop
cmp
dec
or
pusha
pop
cmp
cmp
dec
and
or
jp
test
mov
lret
and
push
inc
mov
pushf
clc
lcall
mov
cld
cmc
std
and
cmp
inc
hlt
cmp
mov
inc
icebp
push
cmp
fsubs
inc
mov
pop
out
ja
sbb
mov
sbb
shlb
push
bound
push
jb
mov
loope
les
ljmp
adc
in
inc
inc
mov
add
or
shll
into
shl
mov
in
lret
leave
dec
xchg
jb
das
mov
adc
mov
sbb
hlt
movsb
jo
jo
xchg
js
or
loope
mov
jo
addb
gs
cmp
mov
xor
push
dec
jmp
cmpsl
add
scas
into
aas
or
mov
or
push
cwtl
enter
ret
push
xor
cli
xor
add
mov
jecxz
ja
mov
or
jo
xor
lods
inc
inc
cmp
lcall
push
cmp
in
inc
cs
dec
cmpsb
rolb
int
popa
push
mov
enter
cmp
and
mov
cwtl
lret
into
div
movsb
int
test
pop
mov
mov
subb
push
jo
lret
push
movsl
jo
pushf
jo
sub
jae
push
add
enterw
inc
mov
lock
push
push
cltd
or
outsl
push
mov
lods
outsb
ret
test
cmp
in
popf
xchg
mov
mov
stc
mov
adc
sbbl
ljmp
or
test
add
add
inc
jnp
cli
sub
mov
jno
add
ljmp
and
push
mov
sbb
int
daa
popa
xor
xchg
repnz
orl
loopne
push
and
mov
jbe
les
ja
scas
into
ja
mov
lcall
ja
rorl
inc
nop
or
fwait
ss
adc
xchg
sbb
push
test
inc
inc
mov
jp
dec
cmp
xlat
in
ja
mov
cmpsb
inc
push
ror
push
adc
out
fldlg2
test
cmp
arpl
mov
lahf
inc
pushf
clc
mov
loop
cmp
rcrl
xchg
push
cmc
mov
or
push
enter
or
loope
out
mov
aad
sub
xor
scas
inc
mov
cmpsb
or
add
inc
push
jb
addl
add
leave
ss
lahf
aad
sbb
pop
fildll
mov
add
xor
pop
shrb
xor
add
and
pop
or
mov
and
test
xchg
mov
cwtl
push
push
push
sbb
stos
cli
lock
sbb
jmp
aam
sub
int
cmpsb
out
das
add
push
inc
loopne
inc
scas
sarb
call
push
sub
mov
mov
dec
mov
inc
addl
mov
push
in
jge
rorb
rorl
dec
add
xchg
cld
in
scas
cmp
or
loope
orl
add
jl
cld
and
inc
jae
imul
push
dec
add
popa
jo
and
clc
repnz
sub
je
pop
adc
or
lea
mov
xchg
js
add
cwtl
stc
fs
push
adc
sub
dec
push
mov
cmpsl
pusha
xor
ljmp
xor
mov
adc
sub
jge
push
adc
add
aad
or
pop
mov
pop
or
mov
shlb
and
lret
mov
adc
pop
and
pushl
into
pop
adc
fdivrs
jb
mov
movsb
sbbb
nop
mov
test
out
rorb
aaa
cmp
inc
out
rcl
out
pop
test
add
inc
pop
dec
jle
jo
cmpb
dec
mov
sub
loope
out
cmp
scas
daa
adc
pop
shlb
fwait
xor
push
add
sbb
inc
mov
inc
xchg
roll
push
sub
and
repz
test
sub
nop
add
xor
add
jge
xor
stc
sub
das
xchg
ljmp
call
div
inc
cmpsb
or
mov
jp
jb
add
sub
jnp
xchg
sub
iret
ret
inc
nop
mov
add
or
mov
pushf
push
mov
jg
push
or
inc
pop
inc
imul
jle
jo
lcall
sbb
mov
test
inc
inc
sub
cmpb
jae
test
cmp
push
or
jae
fnsave
hlt
and
adc
xor
loopne
mov
jp
out
sub
cmp
test
add
inc
xchg
shll
add
jb
ret
inc
stc
iret
in
lret
cmp
pop
cmp
adc
mov
stos
or
pop
mov
ljmp
xor
or
cmp
hlt
enter
xor
jecxz
fcomi
ljmp
push
outsl
and
push
iret
orb
dec
or
repz
lret
test
cmp
add
mov
push
bnd
jne
andb
int
shll
or
cmp
mov
test
scas
out
push
or
xorb
jbe
nop
or
push
das
mov
into
inc
aad
pop
adc
lret
ja
sbb
scas
and
push
outsl
pop
jb
push
adc
outsb
jb
jb
push
push
into
mov
ss
sti
ret
cmc
mov
dec
leave
push
mov
out
lock
les
or
inc
outsl
inc
xlat
inc
popf
or
fs
inc
jae
add
xchg
push
scas
imul
or
aaa
cmp
push
ja
add
inc
jb
jbe
push
mov
aad
xlat
mov
scas
adc
loopne
cmp
mov
cmp
xchg
lret
fwait
ret
andb
xchg
fmull
shl
push
sub
push
gs
push
mov
sbb
rcr
or
stos
pop
add
sahf
rcrb
or
jp
cwtl
push
cmp
cltd
std
ja
pop
stos
leave
push
mov
jmp
push
xchg
xchg
xor
pushf
filds
mov
cmc
pop
push
popa
xor
pop
add
in
push
push
mov
add
adc
xchg
aaa
aam
xor
adc
sbb
dec
xor
cmc
ja
jb
jg
jmp
rcrb
dec
cltd
out
jmp
xchg
out
lret
pop
loop
inc
int3
inc
outsb
add
rcrl
addr16
and
loop
and
mov
sub
mov
mov
mov
mov
sub
jb
out
sub
pop
aam
addr16
repnz
pop
pop
icebp
xchg
xor
push
push
addr16
jo,pn
jle
sbb
push
out
aas
loopne
xor
or
test
sub
jmp
cltd
insb
push
repnz
cmpsb
sbb
xchg
repnz
int
and
sub
jbe
push
loopne
xor
push
push
pop
cwtl
sbb
gs
stos
clc
or
cltd
and
adc
pop
or
pusha
fiaddl
pop
add
push
mov
sbb
mov
test
sbb
sbb
sbb
loopne
pusha
rclb
int3
sub
int
sbb
mov
subl
push
add
rolb
stos
test
shl
mov
popa
push
repnz
sbb
enter
loopne
shlb
lock
ret
adc
dec
push
mov
popa
shl
cmp
subl
adc
inc
loopne
add
jo
or
inc
inc
pop
call
mov
sbb
push
pop
gs
icebp
cmp
and
jmp
into
add
in
and
cltd
cmpl
adc
jne
subl
xchg
sub
ss
push
xor
add
dec
test
inc
ret
aas
sub
add
xor
mov
dec
rclb
inc
es
mov
insl
xlat
mov
push
jo
cld
lahf
dec
xlat
push
mov
ret
inc
inc
es
and
push
enter
and
mov
jecxz
fwait
add
push
mov
adc
out
dec
mov
mov
inc
sbb
mov
add
mov
lret
lahf
scas
scas
pop
movsl
adc
mov
cmp
and
scas
sub
cmpsl
fidivl
push
gs
mov
sbb
inc
jae
insb
lahf
push
sub
js
ss
push
pushf
pop
aas
xorb
cs
pop
mov
dec
sub
loopne
lds
mov
mov
jp
je
loope
sub
out
and
mov
mov
dec
or
sbb
and
add
cmp
lcall
lcall
mov
push
dec
sbb
cwtl
lret
inc
xchg
jo
mov
lret
push
pop
aad
mov
adc
ret
outsb
jecxz
add
nop
dec
cmp
lcall
in
aam
ret
push
ss
pushf
mov
inc
shl
push
jmp
repnz
push
hlt
or
mov
xchg
add
insb
movsb
cmpsb
push
cmp
ret
mov
adc
sbb
adc
and
popf
add
js
add
dec
lcall
pop
into
stos
pop
loopne
dec
div
push
push
sub
dec
pop
ret
stos
add
push
sbb
test
enter
add
stos
add
sti
sub
push
inc
xor
fisubrs
add
push
add
inc
push
fwait
and
add
mul
lret
leave
mov
sbb
les
mov
lods
int
adc
mov
lret
cmpsb
pop
loope
sub
xchg
ljmp
jo
popa
mov
mov
cltd
imul
fmul
or
movl
fimuls
imul
mov
int
mov
pop
lret
gs
ljmp
jno
and
mov
jae
push
cltd
sub
add
xchg
into
add
dec
xchg
push
aad
xchg
and
dec
cld
push
push
rolb
inc
xchg
adc
pop
jg
and
add
dec
cmc
test
mov
add
inc
mov
adc
xor
mov
sbb
mov
mov
pusha
push
ret
cmp
pop
xor
mov
fimuls
test
sbb
adc
xor
xor
loop
mov
sbb
push
aas
push
test
add
sbb
add
outsl
jle
adc
js
sub
adc
push
cmp
push
jbe
jo
test
rclb
pop
cltd
ret
add
or
xor
ficoml
mov
enter
lods
inc
stos
out
push
out
add
push
and
add
ss
xchg
in
cmpsl
jb
xor
movsb
xchg
icebp
mov
push
neg
mov
pop
jno
roll
xlat
xor
icebp
sbb
dec
jo
push
mov
pop
add
or
inc
inc
hlt
insb
pop
push
push
stc
inc
nopl
loopne
add
cmp
and
and
pop
pop
sbb
cmpsl
jns
lcall
sub
push
mov
mov
sbb
adc
stc
pop
nop
inc
adc
std
ja
enter
xor
push
lds
cmp
adc
push
scas
push
lock
shll
lret
inc
pop
xlat
or
ror
stos
push
call
push
and
aam
add
adc
lret
loop
inc
lahf
enter
and
js
je
mov
inc
inc
movsl
jo
pop
sbb
sbb
mov
sbb
sub
adc
and
test
in
aam
add
sub
xor
push
lea
cmc
popf
popf
mov
nop
rclb
adc
sub
push
dec
cmp
mov
xor
aad
push
pop
push
loope
push
push
es
adc
loopne
fs
xchg
sub
sbb
int
pushf
add
enter
addb
dec
pop
inc
inc
jae
xchg
sub
push
out
mov
xor
and
call
or
or
ret
mov
push
xor
adc
push
cmp
jo
and
scas
mov
or
or
test
js
xchg
mov
pop
inc
scas
popf
insb
mov
mov
adc
push
movsb
cmp
pop
mov
xchg
or
sbb
cmpsb
cmpsb
arpl
xor
push
in
push
test
cltd
cld
jecxz
sub
clc
sar
sbb
mov
cmpsb
test
pushl
sub
sbb
mov
push
imulb
pop
mov
pop
jo
mov
cmp
inc
add
fidivrs
mov
or
add
sbb
dec
adc
mov
notb
aad
add
jmp
and
and
jno
dec
sub
sahf
popf
pop
mov
je
inc
pop
ss
adc
pop
jge
test
loop
daa
fildl
xchg
adc
jo
cmp
push
push
sbb
inc
push
pop
adc
sub
outsb
ja
das
pop
push
pop
hlt
or
jno
mov
inc
fs
pushf
inc
mov
xor
jmp
pushf
sahf
or
sbb
inc
adcl
sub
or
mov
cmc
pushl
push
xor
xlat
sbb
pop
sub
and
scas
cmp
cmp
xchg
jno
out
adc
shrb
add
flds
pop
adc
js
pop
cwtl
add
sti
mov
pushf
jo
cwtl
addr16
ljmp
mov
push
outsb
inc
and
xor
dec
xchg
rcrb
cmp
mov
and
add
sbb
faddl
test
rcrl
jbe
push
adc
or
cwtl
inc
push
icebp
add
cltd
adc
in
xchg
stos
mov
in
sbb
or
dec
pop
mov
push
sub
scas
add
dec
fcmovbe
pop
in
mov
xchg
and
mov
icebp
add
loop
jo
xor
jo
xchg
ret
mov
lret
sbb
jle
lods
add
stos
add
mov
xor
pop
test
push
or
sysenter
adc
inc
pop
push
loopne
jnp
mov
js
or
repnz
pop
mov
cs
clc
pushl
mov
mov
das
xor
sahf
mov
and
add
jmpw
rclb
jo
adc
jo
pop
int
push
je
adcb
adc
xchg
lret
andb
xor
xor
sub
xor
xor
mov
mov
xchg
and
xchg
outsl
adc
mov
dec
add
cmp
dec
push
das
sti
or
test
mov
and
sub
cmp
cmp
push
xor
addr16
lea
add
add
xchg
outsb
xchg
pop
or
cs
lock
mov
leave
adc
dec
inc
jno
inc
cs
jae
les
pop
xorb
sahf
push
das
or
out
push
fmull
sub
je
inc
jle
repnz
inc
cltd
stos
mov
dec
inc
inc
das
add
mov
cmp
scas
push
sub
pop
inc
loope
mov
popf
sbbb
xor
mov
mov
test
nop
test
jno
push
push
xor
mov
cmp
push
mov
out
mov
sub
add
and
jmp
xchg
sub
jecxz
icebp
push
jl
enter
cmp
inc
scas
or
or
add
mov
sbb
pop
add
push
mov
cmpsb
dec
lea
xor
xor
inc
cmp
add
and
mov
cmp
lret
inc
cld
jg
and
idivl
pop
sbb
cmc
icebp
sbb
sub
in
test
dec
xchg
sbb
jno
stc
lea
out
movsb
push
scas
sbb
pushf
loope
xor
into
inc
in
inc
and
or
xor
add
test
sarl
jp
jbe
int
push
jecxz
xorb
sbb
dec
sbb
sub
add
cmp
inc
sbb
xlat
jl
call
fbld
jp
mov
pusha
test
and
fwait
pushf
inc
mov
out
and
aam
pushf
xor
ljmp
push
mov
aas
mov
xlat
test
ljmp
in
cltd
sub
and
xor
mov
adc
adc
push
dec
or
mov
inc
call
inc
push
mov
cmp
push
jo
aad
cwtl
sbb
imul
adc
lods
lret
or
sbb
sub
cmp
adc
insl
das
xchg
push
int
cmpb
push
jb
cltd
sub
in
push
pop
icebp
in
cld
outsb
out
push
gs
aas
push
cmpsb
inc
scas
loop
or
aas
lret
roll
dec
xor
pop
lods
enter
sub
mov
repz
loopne
inc
mov
aaa
mull
scas
sbbl
clc
fdivrl
jp
pushf
cmpb
shll
and
sbb
sub
jnp
dec
jb
test
xchg
inc
hlt
scas
mov
xor
sti
push
jne
adc
sbb
mov
sub
mov
mov
push
addl
in
inc
jg
sbb
into
jge
inc
cltd
rolb
push
and
mov
mov
xor
push
cmp
mov
leave
inc
push
mov
mov
stos
pop
nop
add
cmc
inc
cwtl
push
repnz
inc
scas
sub
movsb
mov
jne
mov
mov
fadds
add
push
xorb
aas
test
jo
shlb
mov
fwait
xor
inc
adc
and
cmp
xchg
jle
push
sub
inc
add
xor
pop
stos
cmp
push
push
xor
mov
lret
pop
push
push
mov
popa
cli
or
add
mov
xchg
or
rolb
mov
pusha
push
xchg
inc
cmp
pop
add
lods
jmp
cmpsb
mov
cs
pusha
sub
clc
es
add
popa
je
sbb
or
pop
pop
push
sub
jae
test
and
out
sub
sbb
or
jg
pop
push
jo
and
push
cmp
inc
or
inc
pop
jl
mov
dec
adc
mov
in
or
push
enter
pop
cmp
andl
lcall
sub
pop
inc
pop
push
mov
sarb
rcrl
add
das
pop
mov
mov
out
stos
add
aad
pop
loopne
inc
jae
mov
or
add
mov
inc
out
test
xor
push
aad
inc
jae
sub
lret
outsl
pop
sub
adc
cmp
scas
outsl
std
pushl
ds
xchg
jns
call
mov
adcb
fs
push
int
mov
push
pop
fs
fmull
sub
mov
add
push
add
out
xchg
and
rorb
addb
subb
popf
fidivrl
pop
rcll
jno
dec
wrmsr
loope
adc
lret
cmpsb
add
sbb
push
imul
push
and
rcrl
scas
jnp
rcll
jo
inc
lahf
xor
and
call
cwtl
cmp
xor
mov
pop
push
jae
lret
push
mov
loop
adc
addb
data16
jb
xchg
imul
cmp
sub
inc
xor
leave
and
addb
dec
or
test
lock
push
xchg
mov
subb
xchg
inc
jne
pminub
pop
cmc
push
dec
mov
js
test
repnz
gs
sub
sbb
xchg
mov
mov
imul
mov
pop
or
cmp
fildl
or
mov
loope
jecxz
scas
dec
popl
xchg
cmpsb
push
xchg
adc
mov
mov
dec
cmp
pop
in
insb
sub
loope
mov
pop
shlb
xchg
or
cmp
pop
ret
orl
test
out
inc
test
mov
jg
pop
mov
popf
inc
cmp
aam
xchg
fs
push
xchg
ljmp
or
jo
add
inc
jg
adc
mov
int3
hlt
push
cmp
dec
xor
rorl
mov
push
mov
or
out
xchg
in
pop
push
test
aad
mov
inc
lret
dec
xchg
enter
inc
rcrl
mov
mov
mov
or
fsubr
fiaddl
lds
and
pop
adc
lret
xchg
pop
and
out
add
int
and
jmp
mov
test
pop
icebp
jb
enter
neg
xor
adcl
sub
and
mov
add
idivl
rolb
ret
cmp
jno
popa
pop
or
notl
push
gs
dec
add
shl
xor
inc
add
sbb
sbb
stc
rclb
scas
sub
fs
push
xchg
stos
out
mov
mov
or
add
adc
push
pop
adc
xchg
shll
scas
ret
mov
inc
inc
scas
mov
push
mov
sbb
mov
fdivl
mov
push
inc
rclb
stc
add
cmp
cmpsb
and
movsl
inc
and
sub
sub
push
or
lcall
mov
pop
mov
pop
lds
in
inc
incl
push
add
push
jb
push
sbb
jns
push
mov
call
mov
repz
out
mov
xchg
in
pop
xor
cmp
adc
mov
cmp
movsw
cmpl
mov
dec
adc
sbb
xchg
xchg
test
dec
cmp
adc
add
xchg
add
idivl
out
pop
mov
adc
add
inc
or
cmp
cmc
push
cltd
sub
adcb
cmp
pushf
jae
jp,pn
push
cmc
inc
mov
cmp
add
out
loopne
loopne
jae
imul
add
fildll
andl
lret
imull
pop
push
push
and
int3
push
insl
nop
aad
cmp
cmp
jp
test
ja
lret
xor
inc
dec
mov
push
lcall
mov
mov
push
or
jg
adc
xorb
xor
push
jo
sub
or
in
ret
mov
push
test
outsb
pop
xchg
add
push
out
cltd
jo
cwtl
cmc
xor
cmp
lret
hlt
out
add
xchg
lret
or
inc
shlb
sbb
jo
sbb
add
push
int
jb
into
in
push
bound
aam
cmp
lret
pop
jnp
xchg
aad
fs
lahf
add
mov
test
sbb
jo
inc
mov
test
xor
push
pushf
push
mov
lcall
mov
call
or
pop
inc
lods
pushf
xorb
outsb
call
mov
mov
adc
push
push
add
pushl
shll
je
sub
push
pop
mov
mov
pop
push
jb
or
push
and
repnz
or
repnz
mov
or
pop
loope
in
push
mov
inc
loope
pop
push
push
push
or
jp
add
mov
sti
repnz
pop
pop
or
pop
pop
pop
push
push
jb
jnp
push
inc
pop
mov
inc
loope
and
mov
in
insl
imull
or
and
or
push
inc
jp
push
jp
divb
push
inc
mov
jbe
push
mov
push
pop
or
sub
lods
mov
jb
jb
dec
popa
xor
pop
push
fcmovnu
fidivl
lcall
jbe
jp
add
mov
or
insl
pop
imul
lods
mov
jge
outsb
mov
and
bnd
pop
push
jae
fcmovnbe
xor
jp
mov
loopne
mov
imul
push
cmp
jp
mov
gs
or
xor
xchg
mov
shl
jno
pop
jp
lcall
and
outsb
roll
fistpl
mov
adc
sbb
pop
psllw
es
pop
imul
and
inc
faddl
sbb
inc
sbbb
das
or
mov
pop
or
jne
pop
jb
inc
mov
loopne
lods
jbe
pop
push
push
movl
or
xor
or
push
jb
add
addr16
insl
add
insl
pop
not
popa
jae
imul
pop
sub
or
or
int
out
jp
mov
or
adc
sahf
aas
push
or
mov
and
mov
mov
jle
push
xor
mov
lcall
add
imul
shl
or
inc
out
pop
repnz
lods
mov
cwtl
cmpsb
mov
pop
mov
dec
inc
push
pop
aaa
neg
clc
decl
xchg
fs
mov
in
xchg
ret
out
std
mov
sbb
ret
pop
or
jne
add
inc
test
inc
jmp
imul
inc
pop
in
pushf
ret
loopne
je
inc
xlat
cmp
lahf
or
fwait
mov
daa
pop
push
cltd
mov
pusha
cwtl
sub
push
mov
push
pop
push
pop
pop
scas
insl
lods
cmp
cmp
sbb
ja
hlt
sbb
into
mov
pop
jns
pop
daa
insl
lods
loopne
aad
add
pop
xor
jns
arpl
pushf
ret
push
outsb
scas
in
adc
push
push
pushf
sub
lds
rclb
fisubrl
incl
imul
or
add
out
out
pop
test
adc
push
jae
mov
or
mov
dec
xor
xor
xchg
mov
daa
push
sbb
int
mov
ret
andb
pop
pop
sub
push
insl
mov
dec
cmpsb
inc
mov
xor
ret
shr
jle
pushf
test
fcmovbe
pop
das
rolb
sub
xor
sbb
addr16
imul
xor
sbb
or
pop
jb
subb
adc
xor
movsb
sub
or
inc
add
ss
jp
js
test
sub
add
push
movl
pop
and
mov
fwait
jno
cmp
bnd
inc
sub
mov
adc
lret
jbe
cmp
push
mov
push
inc
push
push
lfs
decb
sub
jb
lods
mov
pop
push
imul
inc
rcl
or
imul
jle
ljmp
sub
out
push
sbb
pushl
add
data16
popf
add
inc
cltd
out
lds
lock
in
add
mov
stc
mov
int
sti
mov
sub
adc
repnz
fs
aas
mov
push
push
jg
pushl
lea
push
push
call
ret
popf
movl
mov
pop
cmp
and
lods
cmp
dec
xchg
test
cmpsl
mov
mov
xorb
stos
mov
int3
mov
jbe
add
mov
cmp
scas
cmp
pop
add
shlb
faddl
adc
mov
imul
sbb
imul
mov
push
mov
popf
mov
stos
imul
pop
or
mov
pop
loope
scas
sbb
rcll
xor
cltd
xchg
pop
inc
shll
outsb
nop
lods
push
jge
out
add
cmc
shrl
outsl
sub
push
pushf
add
int
mov
loopne
or
loope
sub
or
pop
sbb
mov
sarl
jb
insb
and
sub
sbb
fdivs
mov
shrb
mov
sbb
addb
or
cmpsb
and
xor
xor
outsl
sahf
mov
pop
xor
or
push
lods
cmp
push
mov
int
pop
or
push
xor
ss
push
ret
push
xchg
cwtl
fstpl
mov
pusha
pop
adc
pusha
xor
jg
xchg
mov
jge
pop
xchg
inc
dec
sbb
push
cmp
data16
and
xor
or
push
stos
imul
pop
scas
cltd
pop
cmpsl
sbb
xchg
and
dec
jo
dec
fwait
cmp
or
xor
daa
cmp
push
mov
fimuls
out
or
ja
sbb
aas
bound
loopne
mov
call
cs
sar
cmp
and
push
push
sti
pop
and
dec
pop
sti
ljmp
mov
into
push
in
xor
pop
je
mov
or
aam
dec
test
aaa
push
sub
mov
xchg
imul
sti
in
push
insb
sub
mov
repz
and
out
popf
xor
mov
subl
call
and
push
push
das
bound
push
xlat
sbbl
pop
cs
or
in
jmp
lods
cltd
sbb
mov
adc
adc
insl
push
imul
push
setb
lahf
sbb
lret
shl
jo
dec
fmull
clc
dec
scas
adc
test
sub
xchg
pop
sub
xor
jae
pop
data16
pop
lea
in
lods
sbb
jb
pop
jae
mov
int
imul
insl
xor
sti
mov
push
imul
inc
xor
dec
xlat
dec
repnz
or
inc
cmp
sub
cmc
mov
fiaddl
icebp
sub
adc
add
xor
lods
or
popa
inc
sub
push
or
lds
xchg
mov
adc
inc
push
xor
xlat
movsb
or
or
stc
aam
int
sub
adc
repnz
mov
pop
scas
repnz
jb
cmpsb
out
es
aaa
mov
and
jo
scas
sub
addr16
int
or
xor
ret
repnz
mov
lods
push
and
rorl
mov
rclb
loope
inc
out
pop
fwait
xor
mov
cwtl
lret
mov
les
cmp
cmp
jbe
mov
and
xchg
and
sbb
pop
push
push
movsl
scas
out
xor
xor
jnp
jo
jo
push
sub
mov
shll
mov
add
jb
mov
add
rcl
jae
sti
push
and
push
sub
jae
cs
ret
int
or
xchg
imul
pop
inc
clc
inc
xor
mov
stos
xchg
ja
cwtl
jo
xchg
adc
lret
sbb
cmp
sbb
add
push
in
out
jbe
xchg
or
ret
repnz
loope
pop
pop
cmp
arpl
je
pop
cmp
dec
mov
push
outsb
rcrl
jns
movsl
repnz
movsl
inc
imul
mov
mov
fcmovnu
repnz
fmulp
push
mov
cmp
sbb
sbb
cmp
pop
lods
rorb
or
mov
jb
add
adc
xchg
das
push
cltd
or
mov
or
push
dec
popf
mov
lea
arpl
aam
imul
inc
xor
pop
and
test
cltd
jp
pop
scas
int
inc
or
xorb
loope
xor
call
pop
push
pop
scas
out
in
and
cmp
xor
add
xlat
or
mov
out
data16
or
in
mov
mov
movsb
cwtl
adc
jp
inc
int
daa
int
ret
sar
push
xor
pushw
pop
int3
gs
mov
pushl
xorl
xchg
int
aaa
int
xchg
xchg
call
jae
pop
sti
push
rorl
js
xchg
rorl
or
or
or
lcall
xchg
test
adc
sbb
aam
push
inc
push
pop
repnz
add
in
mov
xlat
jl
add
js
es
xchg
push
xchg
stos
pop
repz
jl
mov
ret
jb
pop
push
xor
loope
sbb
rolb
pushf
mov
xchg
push
shll
lods
add
or
inc
dec
rcl
or
xchg
jecxz
push
std
adc
out
xor
cs
imul
pop
mov
aad
mov
ret
ret
jo
inc
rol
push
addr16
sbb
cmp
adc
sbb
and
ljmp
movsb
or
dec
mov
push
pop
push
push
xor
clc
shrb
inc
xor
jb
rcrb
sub
mov
addr16
jmp
adc
call
xor
mov
xor
jo
cmp
jne
push
lret
inc
mov
aam
or
test
int
sbb
xchg
bound
push
sbb
inc
mov
push
jle
push
pop
rolb
dec
int3
jle
mov
call
xor
ret
xorl
add
js
lcall
testl
cmpsb
or
pop
xorl
xor
cmp
mov
pusha
add
stos
xor
mov
mov
dec
mov
outsl
pop
dec
push
push
testl
std
outsl
in
sbb
enter
push
or
mov
sbb
inc
push
outsb
jnp
out
or
sub
add
mov
add
mov
and
cli
mov
cmp
pop
xchg
dec
cltd
cmp
popa
and
fwait
push
or
mov
insb
into
or
dec
cmp
mov
sarb
icebp
popa
imul
jp
pop
push
daa
mov
lret
and
or
xchg
lret
rorb
stos
mov
xor
loope
cwtl
or
push
xchg
cwtl
rcl
aad
pop
jmp
add
pusha
push
mov
inc
sbb
pop
lods
and
pushf
sub
and
mov
mov
push
jmp
jb
xchg
shll
ljmp
loopew
push
int
pop
icebp
adc
aaa
cmp
dec
or
aad
adc
or
pop
test
inc
aad
inc
xor
sub
popa
jae
wbinvd
xor
dec
es
aad
inc
inc
xchg
sub
das
ss
pop
jne
loope
in
arpl
call
mov
das
mov
pop
pop
test
loopne
rcrb
rcll
in
xchg
or
mov
sbb
adc
sub
add
cmpb
or
sbb
cltd
outsl
fists
jae
pushf
sbbl
js
push
jg
lret
aam
jb
adc
cmp
jbe
push
adc
xchg
into
in
jno
inc
mov
add
mov
sbb
sbb
lods
sti
sbb
dec
add
test
cs
pop
push
or
out
in
in
shlb
push
mov
ljmp
mov
mov
xchg
mov
cmp
adc
data16
pop
shll
mov
test
xor
data16
and
mov
dec
fcoml
imul
cmp
lods
adc
fmuls
sbb
gs
popa
xchg
xchg
sti
sub
xor
hlt
and
cmp
aaa
or
cltd
mov
enter
lods
xchg
stos
or
inc
ret
jne
aas
sbb
push
lret
mov
lds
orb
lcall
mov
cmp
add
mov
push
sbb
or
orl
push
scas
jne
pop
sbb
xor
cltd
jb
icebp
mov
or
xchg
mov
or
pushf
mov
popa
pop
add
mov
add
jo
lcall
scas
inc
sahf
cwtl
imulb
in
xchg
xor
xor
aad
enter
adc
cmpsl
pusha
mov
mov
mov
adc
mov
jnp
or
lcall
dec
icebp
jo
idivb
cmp
add
pop
and
mov
xlat
hlt
jo
sti
or
stos
push
inc
jns
cmp
or
jae
add
pop
inc
inc
xor
dec
clc
dec
aad
cmp
jae
pop
pop
insl
inc
xor
mov
push
sbb
cmc
inc
fnsave
loope
mov
mov
sbb
loopne
sbb
mov
sahf
push
ret
cltd
mov
push
test
ljmp
rclb
and
cmp
push
lahf
dec
xchg
mov
imul
jns
xor
dec
pushf
mov
xor
popa
xor
xchg
xor
adc
mov
imul
and
xor
pushf
mov
fsubrl
xchg
test
and
pop
xchg
xor
notl
sub
and
sbb
push
jge
xchg
and
adc
and
int
jge
mov
xchg
mov
es
cmp
jo
xlat
out
fimull
xchg
or
out
or
jp
xor
rol
and
lcall
cmpsb
jbe
inc
xor
ret
sub
adc
sbb
cmpsl
into
xchg
daa
xor
push
push
xchg
or
test
sbb
and
loope
adc
insb
cmpsl
pop
int
push
push
mov
mov
cmpsb
inc
nop
xchg
push
mov
mov
jns
and
in
xchg
ret
cltd
and
imull
inc
movsl
cmpsl
sub
pop
clc
push
mov
ss
inc
int
push
gs
push
sbb
inc
xor
cmp
lock
int3
ficompl
cwtl
cs
jp
xor
adc
negb
adc
or
cmp
pop
jne
outsl
and
sub
andb
pop
bnd
pusha
jo
xchg
mov
add
adc
sahf
dec
int
stos
jecxz
out
adc
enter
fisttps
pop
sub
xor
push
mov
push
pop
fstps
sti
jb
scas
inc
xchg
sti
daa
jle
mov
push
pushl
test
lea
push
or
in
jle
push
add
xlat
or
jne
ret
adc
sahf
and
scas
ret
call
jo
sbb
xlat
jge
xchg
jp
inc
std
mov
xchg
popa
mov
lcallw
sub
sbb
xor
pop
cltd
dec
mov
mov
add
jp
dec
inc
out
orb
mov
mov
xor
rcll
lds
gs
dec
jae
test
mov
int
push
aaa
add
xor
cwtl
xchg
in
and
xorb
mov
ret
jnp
leave
cmpsb
data16
std
cltd
js
push
nop
sbb
rcll
jle
ret
or
les
in
daa
fstps
push
lods
lea
sbb
xchg
out
inc
roll
xchg
or
or
pushf
or
pushf
mov
je
out
ljmp
xor
pop
test
push
or
mov
jnp
das
insb
xor
movsl
pusha
sbb
lcall
mov
and
cmp
sbb
jp
push
mov
call
push
into
add
add
stos
or
call
inc
xor
ror
xor
pop
jb
xor
sub
pop
jp
mov
inc
daa
stc
scas
jne
loopne
sbb
out
into
or
test
sbb
pushf
test
xor
xor
in
sub
cltd
pop
mov
lock
jmp
xchg
pop
cs
push
scas
push
inc
leave
mov
call
dec
mov
dec
or
fs
fldt
push
pushf
rorl
aad
inc
and
add
leave
mov
and
lea
inc
mov
bound
sahf
jo
dec
js
loope
in
fmull
pop
loope
call
jmp
mov
xchg
cmp
cmpsl
inc
sbb
mov
jl
inc
sbb
xor
aad
sti
push
or
jno
jg
push
imul
idivb
sub
pop
jmp
cmp
pop
jb
hlt
stos
sbb
xor
dec
cltd
lahf
add
movsl
jo
aam
sub
adc
mov
lods
sub
repnz
adc
mov
insl
inc
popa
jg
daa
sbb
inc
dec
cmpl
adc
js
cmp
test
or
out
cmp
fiaddl
inc
scas
stos
mov
negb
ret
dec
dec
arpl
xor
jecxz
or
leave
rorl
mov
lret
xor
cmp
ljmp
mov
sbb
xchg
cmpsb
pop
mov
loopne
xor
push
push
pop
pop
push
or
mov
push
sbb
inc
cli
inc
sub
xchg
addb
lods
inc
jb
pop
xchg
shll
mov
sbbl
push
cmp
push
scas
popa
cmp
jge
or
push
mov
dec
or
mov
mov
adc
cmpsb
add
in
sub
sub
imul
push
movsl
mov
js
or
stc
shll
push
mov
xchg
inc
cmp
adc
adc
pop
push
paddb
sub
jo
clc
fs
popf
xorl
daa
repnz
push
lods
jo
loope
jo
ret
loopne
pop
dec
push
std
xchg
or
push
push
adc
dec
repz
ret
push
addb
inc
xor
or
scas
bound
xor
or
imul
pop
cltd
pop
xor
test
or
leave
jmp
jnp
mov
or
or
push
add
mov
sub
mov
jbe
in
loopne
mov
icebp
cwtl
xor
daa
enter
and
cmp
or
call
add
mov
test
add
add
out
rcll
int
scas
rclb
addr16
scas
push
imul
rcrl
xor
mov
hlt
shll
addb
test
stos
or
dec
je
inc
fadds
push
pop
xchg
add
fsubl
sbb
pop
add
mov
and
loopne
inc
xchg
dec
jbe
sub
jp
add
addl
sbb
in
push
mov
inc
push
push
mov
pop
lods
jae
mov
enter
push
subb
clc
aaa
pusha
dec
enter
or
inc
adc
lock
adc
add
mov
repnz
or
sub
inc
fiaddl
lcall
movb
adc
mov
and
xchg
shl
or
aaa
adc
adc
sub
mov
hlt
or
push
icebp
test
clc
sti
clc
lea
push
push
jnp
std
cmp
lock
mov
push
lea
cmp
in
fcoml
add
push
xor
sub
je
jg
add
dec
or
mov
jp
push
jo
sub
dec
shll
ss
sbb
mov
pop
jbe
cmp
orb
stos
jmp
sub
adc
test
pushf
push
aam
jno
test
test
lea
aas
jno
aam
or
js
aam
dec
push
jae
stos
out
pop
jecxz
adc
gs
call
cmp
sbb
lea
xor
imul
add
ret
inc
or
jb
jne
dec
jo
mov
dec
int
pop
push
test
pushf
mov
and
jp
inc
add
push
or
or
data16
xchg
jns
pop
scas
xchg
lret
rorb
je
and
or
and
rolb
adc
imul
fs
movsb
jo
and
adc
test
nop
sarb
imul
repnz
xor
movsl
jae
lcall
ret
data16
dec
ficoms
xor
nop
sbbl
fsts
sub
pop
sbb
test
cmp
arpl
or
out
pop
es
rorl
loopne
orb
or
xor
sub
int3
test
push
mov
loope
push
and
mov
test
faddl
jo
enter
sbb
adc
fucom
scas
scas
cmp
jg
push
pop
loope
fmul
mov
loopne
mov
std
repz
lock
inc
mov
push
ds
scas
push
test
push
or
std
xor
mov
sub
cmp
inc
xor
inc
loopne
jb
bound
inc
inc
ret
loope
lret
sub
dec
mov
jmp
jg
insb
xchg
and
int
ret
enter
mov
adc
mov
pop
mov
inc
or
in
aaa
inc
jo
jae
cwtl
push
mov
add
push
inc
jnp
jb
int
mov
enter
xor
daa
sub
mov
adc
or
xchg
sarb
ds
and
fcoms
aad
lea
jp
popf
or
insb
aam
xchg
jnp
adc
xlat
sub
or
and
pop
sbb
jne
dec
push
out
data16
pop
imul
movsb
lods
sbb
aam
sbb
iret
inc
ja
es
jecxz
adc
add
pop
pop
in
imul
jp
into
xchg
sub
pop
lods
push
sub
ret
jae
sbb
test
and
add
pop
jp
jo
into
pop
test
inc
jae
cs
or
cmp
push
inc
loopne
mov
and
lds
push
jo
lods
in
loopne
xor
sub
shl
mov
dec
cmp
or
mov
data16
or
aam
dec
push
or
mov
addl
xchg
xor
loop
test
dec
pusha
xchg
jb,pn
sub
int3
aam
sbb
xchg
imul
icebp
xlat
add
shlb
sbb
ret
cmpsl
push
mov
loopne
shlb
sbb
or
mov
pop
lods
sbb
dec
push
je
negl
clc
sbb
mov
sub
mov
add
cmpsl
cmp
or
xchg
sub
arpl
outsb
add
jns
mov
call
dec
adc
inc
jo
push
cld
mov
mov
fidivl
jne
xchg
out
or
into
push
sub
fisttpl
or
sbb
or
sti
xchg
mov
sarl
lret
cmc
mov
movq
push
sbb
lock
ret
cwtl
xor
push
ljmp
pop
scas
xor
cmp
jo
add
mov
inc
jae
cmpsb
daa
and
jb
enter
jae
fisttpl
pop
sbb
ja
push
mov
and
inc
xor
adc
test
int
xchg
xchg
fistps
sbb
mov
adc
inc
into
add
test
call
push
repnz
cmp
inc
aam
or
pop
lcall
mov
mov
push
pop
push
push
repnz
and
shlb
sbb
adc
test
mov
dec
gs
adc
shrb
add
cmp
push
sbb
sub
jns
adc
insl
orl
adc
xchg
fcoml
sbb
inc
pusha
push
test
dec
sub
jmp
jne
push
dec
or
fiaddl
das
imul
loope
cmp
adc
sarb
ss
xlat
adc
les
test
push
mov
pop
popf
lcall
or
xchg
mov
pop
scas
andb
mov
mov
sbb
or
cmp
loopne
inc
xor
mov
xchg
dec
arpl
cwtl
out
pushf
hlt
mov
xor
inc
cld
pop
loope
loopne
test
inc
jb
jb
xor
inc
sbb
sub
or
add
or
mov
push
int
je
scas
pop
mov
cmp
push
push
or
stos
jae
and
cmp
cs
aad
outsl
fisubrs
pop
subl
xlat
jp
loope
inc
sub
lods
add
adc
loope
jmp
xchg
in
or
inc
leave
push
test
xor
push
in
hlt
fnstcw
pop
jno
cmp
cmp
sbb
push
jge
push
lods
add
pop
sub
mov
lods
mov
fs
mov
out
jo
pcmpeqd
xchg
xor
add
adcl
push
out
stos
inc
in
xchg
dec
arpl
jmp
inc
xor
and
dec
aam
or
rclb
dec
push
cmp
or
jl
mov
test
les
sarb
push
or
sarl
jo
insb
cmc
sbb
cmp
mov
xor
sub
sbb
orb
add
pop
insb
xchg
clc
popf
jo
or
cmpsl
setp
in
clc
mov
add
inc
imul
jecxz
jns
jo
and
add
mov
cmpsl
push
mov
mov
mov
or
pushf
shrb
rcl
rcrb
xor
or
call
jo
jle
push
in
inc
jecxz
jb
add
cmpsb
pop
out
in
icebp
in
add
jo
mov
xchg
push
mov
dec
lods
push
xchg
incb
das
inc
mov
mov
push
dec
lods
mov
push
push
lea
sar
sbbb
fdivp
adc
sbb
inc
and
xchg
mov
test
sub
mov
xor
mov
or
cltd
fisubl
data16
negb
cmpl
or
xor
fs
mov
xlat
inc
xor
pop
pop
dec
push
mov
mov
xchg
lret
lods
rorb
adc
data16
enter
fists
pusha
pop
push
roll
sub
lcall
add
enter
sub
xlat
sub
or
fistpl
fcomps
in
das
mov
mov
stos
or
out
push
sbb
subb
mov
pop
ror
popf
mov
cwtl
insl
nop
pushf
xor
call
or
push
in
aam
in
mov
push
xchg
inc
add
and
mov
pusha
push
lcall
scas
aas
loopne
orl
and
mov
jb
and
add
mov
outsb
mov
push
inc
adc
xor
ffreep
push
popa
stos
cltd
fdivl
sbb
loopne
mov
imul
push
xchg
mov
or
in
adc
aad
xchg
dec
insl
cs
xorl
iret
out
or
fsts
xchg
movl
or
loopne
test
lret
sbb
mov
mov
pusha
mov
repnz
fcom
lcall
pop
adc
xlat
loope
js
add
and
in
xchg
stos
and
popf
rcl
inc
mov
mov
or
push
or
add
sbb
ljmp
push
and
sbb
add
hlt
test
sub
aaa
push
cmc
jnp
xor
hlt
repnz
cmpsl
jo
or
push
dec
xchg
test
and
mov
sub
and
pop
and
push
call
inc
cs
mov
xor
insb
sbb
mov
jb
mov
dec
lods
inc
mov
jecxz
subb
inc
dec
int
xor
into
rcrl
sbb
xor
jo
push
mov
xor
stos
adc
shr
dec
inc
jmp
pusha
addb
jb
push
jo
lcall
jo
xor
test
loope
mov
pushf
in
rcll
rcrb
push
inc
in
inc
test
xor
jo
pop
mov
push
loop
sub
pop
cmp
xlat
pop
or
xor
cmp
push
data16
pop
mov
gs
ljmp
out
test
push
movsb
pushf
test
sbb
sub
dec
jb
sahf
cmc
or
lret
out
cmp
sub
jmp
mov
jae
test
subb
sbbl
ds
jge
add
pop
jle
mov
sub
lret
sbb
leave
and
mov
xchg
jge
jae
stos
push
cmp
mov
mov
lds
mov
and
jne
loope
adc
or
addl
xchg
ret
loopne
outsb
test
in
in
lret
xor
mov
fisubs
vandnpd
cmp
xchg
pop
inc
lock
shrb
mov
data16
or
jae
cmp
push
jge
push
sub
cmpl
mov
mov
xor
mov
sbb
loope
lret
sti
loope
xlat
xchg
jae
and
mov
mov
fsubrp
loopne
push
mov
pushf
imul
jecxz
es
xchg
cli
insl
sub
push
leave
jb
negb
push
hlt
rcrl
dec
clc
push
xchg
sbb
cmp
pop
xor
adc
mov
add
loope
cltd
lcall
in
add
xchg
roll
adc
add
mov
enter
add
pop
cltd
pop
xchg
shll
mov
jbe
popa
push
xchg
roll
and
call
insl
cmp
push
pop
in
push
dec
lahf
fs
jae
jmp
sahf
cmc
inc
jo
fiadds
jp
jl
mov
push
test
lret
shl
pop
aad
lods
cli
mov
mov
rclb
fdivrl
or
iret
mov
lods
sub
push
shll
ljmp
fildll
or
in
push
push
mov
and
movsb
addr16
push
ret
mov
push
xor
orb
nop
sbb
xchg
lahf
and
push
jb
out
pop
mov
push
jns
jb
add
push
pop
add
dec
jmp
decl
in
and
push
ret
ds
and
in
popf
adc
sub
add
xor
cltd
sbb
push
jp
mov
pop
aaa
mov
stos
cltd
xor
xor
xchg
or
push
adc
jo
mov
jp
jb
lods
js
notb
test
or
jnp
jbe
xchg
pusha
push
outsb
inc
mov
je
or
repnz
fimull
dec
sub
dec
sbb
pop
test
loope
arpl
cmp
or
push
or
push
cmp
or
in
dec
cmp
daa
mov
movsl
ss
movsl
sub
inc
or
rorb
push
or
and
pusha
and
push
mov
push
xchg
scas
out
cwtl
dec
inc
in
xor
xor
inc
push
mov
lret
add
js
ljmp
and
and
cwtl
jb
lret
sub
in
push
fwait
cwtl
dec
loope
cwtl
mov
pop
inc
push
es
cmpsb
test
inc
daa
int3
mov
pusha
test
xchg
ja,pt
cs
mov
stc
shll
andb
movsb
data16
jne
mov
shrl
or
push
push
femms
sbb
cmp
push
add
int3
out
loope
or
in
loopne
inc
movsl
pop
jae
repz
sub
inc
dec
push
into
aad
cmc
mov
inc
mov
add
add
nop
imul
in
call
pusha
mov
cmp
aas
xchg
into
jmp
xlat
sub
cmp
jbe
mov
adc
dec
or
mov
sub
push
push
jbe
aaa
in
dec
push
sub
sbb
xor
push
ficoml
or
cmp
mov
push
add
mov
jo
jnp
cmpsl
test
adc
in
xchg
loope
pusha
jo
mov
mov
popa
call
add
sbb
inc
je
push
daa
ret
push
xchg
enter
mov
es
xorl
push
cltd
dec
adc
push
or
aas
test
mov
loop
push
sbb
aam
push
and
int3
dec
pushw
cmpsb
xor
push
aas
xor
popa
mov
sbb
aas
rol
es
and
jae
pop
push
loopne
cmp
push
inc
xor
xor
fs
xor
in
pop
arpl
add
push
aaa
mov
popa
ljmp
push
push
imul
leave
xorl
lcall
in
dec
cmpsb
pop
mov
lds
or
inc
dec
pop
fisubrl
add
adc
fnstenv
cmpsb
dec
pop
dec
mov
xchg
jmp
or
mov
xchg
ret
sbb
sbb
aas
jp
loop
fcomps
inc
xchg
push
and
cmp
push
mov
arpl
pop
aaa
push
int
sub
stc
sbb
scas
fcoml
pop
cmp
imul
jmp
das
ret
inc
mov
into
push
and
xor
fisttps
jno
rclb
sbb
test
xor
fs
lods
jg
dec
sahf
dec
sti
push
mov
addb
out
nop
out
enter
xor
add
sub
stos
add
rcl
mov
push
loop
xchg
pop
addr16
repnz
subl
push
cltd
mov
lcall
in
mov
das
sbb
sub
sub
jmp
push
mov
pop
loope
cmp
mov
out
jo
add
out
inc
in
push
and
outsl
adc
or
pop
int
loope
rorb
or
sub
ss
loope
or
push
and
inc
ret
lock
push
inc
xorl
or
xor
mov
pop
loopne
jo
xchg
lods
out
mov
lea
push
dec
sub
pop
inc
jae
test
push
cmp
mov
loopne
mov
sbb
adc
or
ret
xchg
stc
call
pop
enter
cmp
je
xor
push
loope
call
scas
mov
in
test
in
adc
loopne
sbb
xor
cmpsb
pop
repz
sbb
lcall
sbb
dec
or
xor
sarb
and
cltd
sub
mov
jnp
mov
pop
es
mov
push
sbbb
push
xchg
push
jp
mov
pop
jnp
sub
jbe
add
or
jae
leave
shll
out
loope
test
enter
gs
sbbb
out
xchg
cmp
mov
and
inc
insl
and
imul
dec
mov
add
mov
loopne
mov
mov
mov
push
out
leave
adc
fdivrp
adc
mov
ret
enter
outsl
scas
xchg
nop
leave
jo
adc
or
pop
loope
mov
into
add
roll
inc
or
imul
push
cmp
xor
or
adc
rorl
cld
dec
jp
jmp
push
adc
add
div
mov
cmp
push
sub
pop
stc
divb
and
ljmp
inc
push
pop
inc
cmp
in
sbb
mov
enter
dec
add
xlat
sub
push
cli
das
pop
lcall
mov
pop
pop
repnz
addr16
or
xlat
dec
je
xor
sarb
into
in
in
mov
mul
ret
scas
imul
add
rcrb
dec
xor
shrb
arpl
ror
xchg
in
jb
andb
push
sub
ss
es
icebp
cmpsb
mov
enter
xchg
rcrl
mov
or
fldl
ja
pop
lock
repnz
out
mov
call
mov
mov
fisttpl
ja
test
dec
popa
test
mov
jo
mov
popa
shll
xchg
or
mov
frstor
scas
mov
cmp
sti
cmp
popf
fisttps
push
mull
lret
xchg
mov
ljmp
adc
sub
rorl
ret
mov
add
clc
shr
jbe
in
in
push
add
push
add
call
stos
lea
ret
add
inc
xchg
add
es
and
jp
test
sub
fs
imul
or
adc
xchg
ret
cmp
add
int
or
fstpt
pop
aas
pop
clc
shl
loopne
stos
or
adc
lods
out
out
cmp
sbb
sbb
aas
add
ret
inc
dec
cmp
in
inc
or
add
lret
xchg
test
testb
push
sahf
xchg
or
sbb
xor
out
sbb
test
adc
pop
call
adc
jge
stos
add
push
pop
cmp
dec
push
dec
cltd
in
pop
mov
out
mov
outsb
inc
push
sbb
xor
push
pop
pushf
add
add
mov
push
cmp
dec
sub
test
push
sub
loopne
or
icebp
or
sbb
and
test
and
jp
or
cmp
dec
or
lret
cmp
sub
mov
movsb
push
das
jp
pop
push
sbb
jp
test
loop
jno
jae
add
or
add
call
cltd
out
aam
leave
gs
movsl
add
sub
xor
jp
mov
cmpsb
cmpsb
ret
inc
out
lock
lret
aad
xchg
dec
push
push
movsl
mov
rclb
in
sbb
push
rcl
scas
jge
add
pop
xlat
in
int
mov
loopne
push
dec
bound
cmovle
add
push
sub
rolb
or
lea
xchg
bound
or
mov
rolb
mov
mov
test
cltd
pop
push
xorb
ja
hlt
mov
mov
xor
or
pop
in
ljmp
pop
mov
pop
icebp
ljmp
push
lock
dec
jecxz
push
xor
jmp
in
cmp
pop
es
sub
adc
jle
adc
dec
daa
xchg
cmp
mov
inc
xor
add
add
shlb
xor
pop
jp
push
int
int
dec
fsubrs
mov
and
and
pop
sub
subl
sahf
mov
push
xor
sbb
js
push
shlb
or
lock
cwtl
and
adc
js
jbe
mov
cmp
or
inc
push
pop
sub
sub
xor
and
add
movsl
imul
cltd
lret
adc
push
dec
data16
rclb
mov
das
out
flds
insb
sbb
or
inc
stos
cmp
cltd
sub
fildll
add
mov
movsl
sub
mov
cmp
or
jae
out
mov
sarb
mov
shlb
cmp
pop
js
sarb
rolb
test
xchg
fs
testb
repz
daa
cmp
pop
cmp
push
aad
into
push
pop
or
loope
sbb
lcall
dec
js
adc
cwtl
dec
cmpsb
dec
jle
std
push
inc
xor
or
rcrl
aam
jp
mov
ljmp
mov
add
xor
inc
mov
pop
or
push
xor
das
inc
test
ljmp
jb
pop
fcmovnb
gs
sbb
std
arpl
mov
cmc
pop
es
fsubl
inc
imul
dec
mov
mov
sbb
movl
sbb
les
je
add
dec
rolb
mov
jb
mov
bswap
aam
dec
inc
mov
inc
ja
xchg
stos
jo
adcb
movsb
loope
inc
mov
jnp
sbb
pusha
xchg
add
add
loope
xchg
ret
loope
xchg
mov
push
fdivl
lret
lcall
in
in
mov
aad
mov
iret
nop
dec
es
or
or
movsl
loope
cwtl
push
xchg
push
ljmp
orb
xchg
ljmp
jb
insb
aaa
rorb
cwtl
shlb
stos
mov
insb
cmpsl
push
lret
mov
movl
push
fs
sub
call
lea
mov
push
test
push
mov
int
pushf
mov
imul
sub
lea
and
repnz
lahf
xor
mov
popa
and
mov
filds
xchg
test
iret
xchg
out
test
sti
jmp
push
int
jl
and
pop
aad
scas
push
adc
stos
mov
aas
pop
or
scas
mov
push
sbb
cmpsl
cmc
jl
cmp
mov
xchg
push
add
or
xor
in
push
dec
ds
xchg
push
rclb
push
mov
pop
pop
jl
or
test
mov
loope
jno
lret
rcll
idivl
cmp
sbb
push
inc
mov
add
mov
out
sbb
mov
inc
nop
xorl
and
mov
cmc
xchg
mov
pushf
xor
int
das
out
cmp
daa
dec
mov
cmpsb
mov
dec
xchg
adc
xor
rcrb
adc
shrb
pop
jb
test
movd
sbbb
lods
push
mov
cmp
js
orl
aam
pushf
jae
add
ds
inc
into
push
cwtl
dec
lea
dec
iret
cmpsb
and
inc
xchg
xchg
test
orb
frstor
pop
inc
cmovnp
daa
sarb
mov
cltd
pop
jno
es
sub
add
cmp
sub
push
xchg
enter
xchg
push
sbb
jp
inc
or
xor
sti
xchg
stos
rcrb
cs
add
push
mov
addr16
xor
dec
xchg
adc
pop
dec
repnz
dec
ret
mov
pop
dec
cmc
jp
pop
loopne
push
push
lahf
insl
fisttpl
add
pop
movsb
mov
cmp
pop
stos
and
jns
scas
xor
fucomip
inc
pop
es
pop
or
into
movsl
scas
push
sbbl
stos
pop
mulb
xchg
or
and
outsl
lret
mov
cmp
dec
sbb
pop
jb
repnz
xor
cwtl
mov
ret
mov
adc
push
push
xor
les
add
mov
xchg
hlt
scas
inc
push
lods
leave
add
jb
cmpsb
adc
pop
or
test
add
sub
fsubl
xor
sbb
lret
xor
mov
sbb
xor
data16
jnp
test
data16
stos
daa
xor
mov
sbb
pop
mov
cmpsl
aad
push
dec
xlat
or
jno
sbb
add
cmp
xchg
lret
pop
aas
or
jnp
stos
push
xchg
cmp
sub
sbb
pslld
addr16
push
inc
scas
test
nop
js
mov
mov
inc
int
sbb
add
pop
xchg
xor
orb
hlt
push
xor
es
sbb
insl
add
call
adc
pop
in
add
pop
popa
jb
xor
adc
pop
jmp
repz
mov
xchg
test
dec
pop
push
stos
sbb
sub
or
invd
or
mov
cmp
cmp
mov
pop
dec
cltd
jo
xor
jo
xor
popa
test
xor
out
cmpsb
rol
mov
scas
mov
push
cmp
xchg
ret
xor
jne
push
or
sbb
adc
sbb
sub
add
or
xchg
imul
fldl
lcall
and
call
jb
int
rcrb
cwtl
inc
cmpl
addl
ljmp
dec
dec
adc
test
sub
inc
loopne
dec
adc
rclb
cmp
adc
cmp
popl
or
and
cmpsl
data16
mov
push
add
data16
pop
clc
rclb
call
cmpsl
pop
xchg
adc
adc
lods
and
pop
push
rcl
xor
xor
xor
ja
jae
adc
or
lea
sbb
fs
and
roll
push
gs
adc
dec
adc
mov
test
outsl
nop
shrl
loopne
fcompl
fwait
mov
pop
sbb
psraw
inc
cmp
lods
sub
adcb
pop
test
add
pop
xor
push
aam
push
pop
inc
mov
lret
push
scas
mov
sbb
dec
inc
test
cmp
cmp
pop
scas
inc
push
subl
rcl
xor
xor
or
das
jne
fidivl
add
out
or
push
dec
popa
pop
sub
xchg
sub
mov
sub
add
loopne
movsb
or
sbb
nop
test
push
stos
mov
jp
clc
rcrl
pushf
xchg
cmpsb
and
sbb
incl
mov
xchg
sbb
push
cmc
xlat
xor
mov
xchg
rcr
movsl
hlt
mov
pop
or
push
mov
testb
mov
adc
sub
pop
push
aam
push
or
addr16
inc
sbb
push
adc
aaa
stos
push
mov
push
mov
sub
jo
jns
cmp
in
sbb
cmpsb
mov
dec
mov
cld
lcall
pop
add
pop
test
push
jg
stos
add
sbb
adc
scas
and
shll
sub
sbb
js
push
mov
adc
aas
ret
ljmp
push
jg
jg
lock
andb
sbb
or
test
loope
xor
xor
add
icebp
mov
test
sbb
or
loope
or
icebp
pushl
loope
and
int3
or
or
mov
test
sbbb
push
pusha
stos
aaa
int
cmp
out
or
sbb
jge
xor
add
sub
jb
adcb
adc
sbb
movsl
xor
or
push
in
or
push
adc
inc
mov
jb
fwait
pusha
inc
cmpsl
ljmp
data16
mov
push
out
add
rclb
sbb
popf
and
mov
xor
dec
sarb
sbb
push
and
mov
xor
mov
cltd
jae
push
dec
shrb
stos
and
or
gs
mov
cmpsb
adc
xor
jns
mov
cs
jo
mov
push
xor
int3
and
stos
enter
shlb
xchg
shll
cltd
push
or
imul
addb
sbb
pusha
and
push
xchg
data16
dec
jecxz
and
pop
mov
push
dec
loope
xor
mov
lret
sbb
push
loopne
out
inc
or
js
push
mov
lar
add
pop
inc
pop
cltd
lcall
and
loopne
inc
cmp
mov
add
lock
pop
cmp
xchg
bnd
repnz
mov
subb
cmp
scas
mov
xlat
bound
cmp
add
cmpsb
test
inc
mov
jp
cwtl
and
mov
add
pop
cwtl
cs
sub
stc
xchg
es
xlat
test
lock
jmp
sti
out
adc
pushf
jae
jb
xchg
jno
popf
rolb
arpl
or
jae
add
mov
xor
scas
dec
add
insb
jno
pop
adc
stos
xor
or
rorb
ss
loop
mov
and
lock
and
or
sub
xor
xchg
sbb
mov
dec
pop
ret
sub
xor
pop
dec
andl
jp
or
or
mov
adc
enter
xchg
mov
sbb
into
adc
loopne
and
mov
pop
out
add
addl
mov
xor
pop
iret
pop
push
pop
pusha
xor
dec
scas
add
cmp
pop
in
xor
push
movb
jns
js
orb
mov
mov
mov
lcall
add
inc
pushf
or
xor
cmc
es
int3
and
mov
pusha
lock
jg
and
cmp
or
das
ret
inc
cmp
pushf
scas
mov
test
addb
mov
and
dec
jne
mov
jp
push
add
jle
push
xchg
ret
push
imul
adc
or
ucomiss
xor
adc
fs
cmp
in
push
mov
xchg
xchg
popa
pushl
nop
mov
call
xor
inc
out
adcl
sub
xchg
cmc
push
mov
addl
jae
and
dec
cmpsb
push
push
jne
dec
int
cmp
push
xor
std
in
jo
fsubl
xchg
and
fsubl
mov
push
test
or
mov
cwtl
pop
ljmp
int
adc
lds
xor
rorb
sbb
xchg
push
addr16
rorl
rclb
loop
adc
push
loope
xor
mov
mov
adc
stos
add
add
jp
loope
test
inc
dec
or
fsubr
push
xor
xchg
rcll
push
in
test
pop
scas
in
xor
pop
in
cs
sbb
pop
rorl
lret
push
popf
leave
cmc
pushf
add
test
pop
cmp
jo
sbb
ret
dec
mov
sub
jp
jo
in
xor
sub
popa
subps
cmp
test
adc
lahf
sub
jo
frstor
shll
push
sub
push
mov
or
out
cs
pop
faddl
cmp
rcl
or
or
push
pop
popf
xlat
pusha
lret
mov
ljmp
mov
inc
shrb
push
sbb
xor
sbb
out
in
add
mov
ret
add
sahf
inc
push
sbb
in
adc
sbb
test
push
cmpsb
sbb
rorl
ljmp
jmp
sub
add
add
sub
add
in
mov
shrl
jle
js
jno
sub
or
pop
sar
push
xlat
sub
mov
and
testb
bound
add
cli
fiadds
adc
dec
inc
mov
push
push
sub
ret
pop
hlt
jne
xchg
jle
frstor
mov
add
pusha
ljmp
adc
mov
loope
pop
push
inc
shlb
vmovdqa
mov
push
sub
incb
sub
mov
shl
push
stos
test
scas
jb
cmp
mov
add
push
out
push
iret
ss
ret
sti
test
rorb
or
xchg
add
test
xor
loop
loope
push
inc
ljmp
xchg
jmp
inc
in
inc
or
sbb
cmp
mov
push
mov
or
in
in
mov
mov
test
test
add
mov
mov
jp
cwtl
lret
xchg
push
push
sub
jbe
into
popa
mov
sbb
add
jmp
push
or
sbb
dec
fadds
push
adc
daa
mov
xchg
mov
in
test
and
mov
addr16
je
ja
imul
xchg
adc
arpl
cs
test
test
aad
push
inc
bound
lods
add
add
or
sar
xlat
xor
lods
cmp
pop
out
pop
sbb
pushf
iret
jg
sysret
sahf
push
lret
test
and
push
popf
lods
fwait
inc
pushf
adc
imull
add
add
push
popw
aam
sub
xor
push
push
test
adc
add
push
adc
and
pop
jg
cmp
xchg
lcall
std
lcall
cmp
xchg
in
and
add
dec
call
mov
mov
xor
cmp
test
sarb
push
call
mov
push
sbb
cmpsb
inc
lcall
cmp
es
sbb
add
inc
sbb
xchg
inc
fsubrl
adc
dec
add
pushf
mov
push
aam
or
aas
push
push
ljmp
out
or
rclb
imul
xchg
lock
xchg
mov
fcomps
ret
mov
nop
mov
cmp
pusha
or
cs
gs
mov
pop
int
pop
loope
xchg
push
nop
test
loopne
lahf
insl
cmp
das
mov
dec
xchg
jb
xchg
add
test
out
rorl
push
dec
cmp
jg
jae
sub
cmp
ret
lcall
divps
in
rorb
loope
out
mov
in
mov
push
push
fbstp
subb
push
push
add
push
cmp
jo
push
cwtl
cwtl
out
aad
in
loopne
jbe
ss
andl
jb
jp
lret
test
aam
and
bound
ret
fimull
sub
test
dec
and
loope
es
fldcw
arpl
mov
cmp
fldcw
stos
adc
sbb
add
lea
sahf
popf
das
sar
jmp
sbb
dec
push
das
and
and
aam
aad
je
push
pop
dec
push
add
push
dec
mov
test
mov
ss
test
add
or
inc
mov
dec
jmp
inc
or
jo
adc
ficomps
inc
push
mov
and
bound
sbbb
mov
adc
fiaddl
mulb
pop
mov
popa
push
or
sub
jp
push
xchg
rcl
cmpsb
xchg
in
push
or
adc
or
add
in
inc
pusha
push
inc
into
pusha
enter
pop
jo
ret
push
pop
mov
sbb
lea
cmp
subb
push
xlat
dec
add
pop
mov
adc
rcrb
jle
push
xchg
leave
inc
inc
or
cmp
enter
ss
inc
push
or
dec
push
push
inc
jne
jp
mov
xchg
out
jb
loope
or
add
sbb
cmp
push
push
add
pop
data16
cmpsb
dec
aad
cmp
enter
loope
enter
xor
pop
and
in
adc
mov
shlb
xchg
fidivrl
pmaddwd
test
mov
jo
insl
sub
mov
loopne
or
out
scas
ret
push
scas
mov
pop
xchg
fldt
out
imul
inc
sbb
call
pop
leave
or
dec
mov
mov
mov
sub
std
push
sbb
lret
mov
adc
idivb
inc
mov
cltd
lcall
or
add
pop
sahf
xchg
push
add
jb
movsb
inc
jmp
and
loop
test
push
cmp
stc
adc
mov
jns
push
bound
jo
jl
xchg
pop
jecxz
dec
lret
sbb
push
push
ret
push
add
or
stos
bound
lahf
inc
sub
pop
jge
add
int
jno
xor
jns
int3
inc
inc
or
add
int3
mov
xor
ljmp
or
dec
mov
pop
push
mov
push
mov
mov
xlat
sbb
pop
mov
or
fcomip
inc
xchg
in
flds
and
add
mov
pop
je
mov
jmp
hlt
lea
push
push
add
pop
sar
dec
shlb
push
adc
idiv
data16
sub
mov
bound
andb
sub
adc
push
aam
add
xchg
sbb
dec
clc
pop
ds
jp
leave
popa
sub
movsl
mov
add
pop
test
sbb
in
and
jge
orl
es
cmpsb
lret
push
xchg
mov
es
add
mov
jb
aam
xor
push
inc
inc
push
pop
filds
and
push
sbb
adc
add
xorb
in
es
dec
cs
call
dec
hlt
mov
xchg
cmpl
push
dec
js
lret
out
push
mov
jb
or
jae
jnp
int
jne
sub
xorl
push
add
push
test
push
and
push
leave
inc
cltd
pop
mov
sub
add
in
adc
into
push
jb
out
adc
or
add
lret
cmpsl
add
inc
add
inc
cmp
jb
das
pop
shl
mov
shrb
or
push
rolb
jo
and
out
xchg
test
aad
xor
jo
inc
xchg
or
cs
jo
xchg
xchg
arpl
repnz
mov
out
mov
psraw
cmc
push
dec
hlt
loop
enter
addl
sbb
enter
aaa
ja
repz
sub
add
mov
inc
clc
fbstp
sbb
fildl
xor
dec
mov
scas
fs
pop
push
pop
mov
rcl
aad
push
shrb
movl
or
and
cmp
or
or
xor
sbb
pop
jp
or
or
outsb
xchg
repnz
scas
and
cmpsl
or
jb
rclb
test
xchg
daa
jno
adc
and
lret
xor
add
sbb
jo
pop
and
mov
push
push
adc
sub
jle
sbb
mov
and
je
int
or
loope
xor
mov
or
cmpsl
sbb
or
xor
mov
loope
push
rcrb
dec
adc
movsb
or
add
ret
push
mov
or
std
ja
add
scas
push
add
push
test
out
pop
adc
mov
movsb
test
imul
pop
jb
push
fld
xchg
or
mov
push
loope
push
mov
cmpsb
data16
aam
and
sbb
or
adc
fs
push
scas
fistpll
and
test
xlat
loope
adc
adc
mov
xchg
test
push
sbb
sub
loopne
xor
cmp
sub
mov
mov
jge
lret
mov
jne
xchg
popa
call
mov
repnz
mov
dec
fs
call
push
scas
loope
pop
stos
in
filds
in
mov
test
sahf
lret
cld
test
mov
mov
mov
lock
push
xor
sub
xor
jne
inc
dec
adc
mov
sbbb
int3
mov
or
mov
sbb
popf
in
push
data16
dec
in
subl
out
mov
push
jae
push
sti
enter
mov
adc
loop
jb
or
dec
mov
cmp
jo
xor
cld
fistpl
or
push
cmpb
jae
es
pop
cmp
es
cltd
sub
popf
fistpll
push
mov
jns
dec
xchg
rcr
jne
ret
or
mov
mov
xchg
mov
add
ljmp
push
push
pop
cmc
and
addr16
pop
out
clc
outsb
jne
push
sbb
das
push
adc
cmc
or
inc
or
sarl
ret
sub
pushf
sub
stc
lock
mov
inc
xor
push
xchg
push
jae
push
cs
add
ja
jns
push
movsl
pop
es
fidivrl
jbe
push
adc
es
jae
les
movsl
dec
adc
lret
pop
push
mov
inc
and
xor
rclb
flds
ja
dec
out
jmp
repnz
test
mov
xchg
pop
xchg
or
cmp
not
and
sub
ret
lock
xor
pop
cmp
cltd
mov
test
pop
jb
cmp
add
faddl
push
push
loope
addb
les
mov
adc
and
add
sub
adc
shll
or
cli
in
push
or
out
jae
rclb
push
cmp
pusha
push
xchg
enter
lods
dec
mov
addb
adc
push
mov
out
add
xor
or
pop
or
push
in
in
jmp
add
jp
addb
inc
call
inc
shlb
leave
add
fadds
mov
cmp
data16
pop
mov
stos
add
scas
adc
push
xchg
stos
pop
shlb
and
adc
shlb
cmp
push
push
add
push
insb
jmp
xor
test
xchg
mov
std
pusha
mov
in
test
std
mov
test
cmp
sub
stos
mov
xor
sub
rcrl
jb
scas
inc
sbb
clc
inc
add
call
adc
cmpsl
stos
push
pushf
test
xor
scas
inc
sub
or
in
pop
sbb
loope
out
jl
loopne
in
sub
mov
movsl
pop
push
xchg
and
call
sub
or
roll
loope
movsb
sub
mov
and
dec
nop
mov
lret
in
xchg
jbe
push
pop
sbb
push
lods
sti
push
jbe
push
dec
cmpsb
outsl
sub
xchg
push
jae
cs
mov
pusha
fwait
cmp
push
add
cld
stos
mov
in
and
ret
and
inc
out
cmpsb
inc
je
enter
cmpsb
adc
negb
popl
rorl
into
adc
push
sbb
push
pop
push
pop
mov
mov
xor
mov
inc
or
jns
or
push
add
push
mov
push
lods
mov
insl
fstl
rcrl
aaa
std
lods
inc
push
xchg
xor
xchg
lock
sub
cmp
ja
into
sbb
push
in
adc
pop
cmpsl
jno
mov
mov
pop
push
pop
cmp
mov
sbb
push
jnp
xchg
mov
xchg
or
pop
in
mov
adc
orl
push
cmpl
jns
stos
loop
aam
pop
ja
jp
xchg
cmp
sub
aam
inc
imul
ret
xchg
pop
lods
inc
cs
outsl
dec
sub
push
jb
xor
mov
cmpl
cmp
std
mov
xor
or
out
dec
cltd
test
or
cmc
xlat
xor
jbe
mov
jne
pop
xor
mov
mov
adc
push
xor
test
loop
or
fisubrs
pop
subl
jno
popa
jb
scas
or
push
sub
gs
or
les
incl
fbstp
or
pop
cs
jae
sbbl
rcrl
sbbb
push
adc
push
sarl
adc
push
inc
adc
rorb
xchg
or
push
jae
inc
aaa
nop
test
add
jo
stos
fwait
xchg
pop
push
stos
loopne
adc
hlt
out
jo
aam
shrd
mov
adc
loopne
jbe
lcall
fwait
add
push
in
mov
and
popf
jb
xchg
and
add
lds
mov
push
or
sub
pop
adc
adc
mov
loop
nop
test
jo
jbe
xorl
popf
fmul
notb
das
mov
jmp
xchg
push
jb
pop
or
imul
imul
inc
cmp
adc
mov
dec
mov
ret
inc
jmp
pop
jmp
sub
inc
iret
scas
sbb
pop
inc
in
test
cmp
in
test
push
or
pop
subb
mov
enter
pop
xchg
lods
popf
xor
mov
ret
mov
out
inc
pop
pop
adc
mov
add
daa
pop
cmp
scas
or
int
clc
or
pop
sbb
xor
inc
jo
pop
into
enterw
cmp
cmc
mov
sub
xchg
data16
inc
das
or
loopne
mov
in
push
add
dec
aad
or
sbb
cmp
mov
jge
push
sub
outsl
insb
inc
subb
xchg
push
ret
loopne
jb
jo
cs
outsl
aam
pop
or
push
mov
out
push
mov
xchg
test
test
add
xor
aad
lcall
lods
dec
mov
cltd
test
loope
out
or
xchg
out
adc
sbb
mov
jge
sbb
movsb
fbld
dec
xor
mov
mov
cmp
jl
inc
add
stc
add
mov
lock
mov
lret
jge
mov
rcl
jae
mov
xor
mov
stos
cmp
cvttps2pi
pop
fwait
jb
push
jne
stos
push
and
loope
cmpsb
icebp
lock
inc
stos
push
adcb
push
adc
pop
addr16
cmpsb
pop
popf
out
nop
stos
mov
insb
inc
or
sbb
sbb
adc
dec
out
push
mov
js
adc
dec
popa
mov
xlat
cmp
iret
adc
push
push
cs
jnp
and
xor
jge
mov
jge
xchg
push
lcall
xlat
push
xor
jnp
loope
pusha
sbbb
jne
sub
xor
stc
adc
pushf
jmp
add
fs
lea
movsl
or
rolb
and
ret
cmpsb
sub
mov
fildll
cs
add
rcrl
push
mov
xchg
jmp
sbb
mov
pop
dec
es
adc
jge
cmp
sbb
and
pop
into
sbb
test
push
cltd
xor
or
sbb
jmp
jle
mov
test
sub
jl
xor
dec
scas
clc
movsb
mov
loopne
cld
xchg
xchg
xor
ret
loope
daa
dec
test
cmpsb
je
cmp
lret
out
dec
insl
push
xor
cmp
xor
pop
dec
push
jp
xchg
or
adc
fsubr
adc
pop
or
and
add
adc
movl
popf
push
hlt
jg
cld
out
adc
or
add
enter
sbb
cmp
cld
into
outsl
loopne
rolb
js
fdivl
enter
inc
clc
fxch
fisttpl
sub
mov
push
sub
mov
sub
mov
and
inc
iret
and
sbb
sbb
fistpll
int
loopne
jl
xor
and
jecxz
push
pop
mov
cmp
adc
mov
ljmp
cmp
inc
mov
jb
adc
cmp
das
jns
xchg
jb
stos
cmp
imul
dec
or
adc
push
xor
xor
sbb
out
adc
scas
out
adc
or
in
push
sahf
xor
aam
in
mov
ret
scas
cltd
pop
gs
jae
jno
andb
loope
lcall
scas
pushf
mov
pop
cmp
or
cmp
and
fistps
cwtl
pushf
mov
cmp
xchg
jae
je
add
in
mov
scas
sub
test
dec
test
test
in
mov
into
test
jg
push
push
sub
sub
mov
adc
or
subl
and
mov
lds
sbb
pop
lock
xor
push
scas
lea
sub
xorb
in
add
bound
cmc
adc
cmp
xor
enter
push
cmp
popf
test
mov
push
add
sbb
sub
ss
jns
shrl
add
add
adc
je
dec
xor
decl
dec
add
push
add
push
sub
inc
push
cmc
jg
aam
scas
inc
adc
pop
sub
mov
or
jg
mov
or
push
sub
push
add
pushl
add
dec
sub
dec
sub
add
add
add
push
imul
call
and
pusha
shlb
add
sbb
sbb
addl
dec
int3
jl
add
xor
jmp
sti
mov
add
inc
int3
adc
xchg
push
mov
push
gs
mov
insl
imul
das
mov
movsb
lahf
inc
fsub
cmp
in
inc
es
adc
ljmp
incb
stc
mov
lock
movl
in
mov
mov
push
jmp
push
dec
mov
and
decl
push
or
stc
push
insb
pop
adc
inc
cmpsb
xor
mov
andl
push
aad
or
in
mov
test
add
xlat
roll
test
das
enter
push
arpl
rorl
aad
or
lds
jb
ret
shl
adc
lcall
rclb
inc
xchg
mov
incb
mov
imul
outsb
loope
dec
sarl
pop
xor
push
xchg
test
sub
rolb
push
add
lret
incb
mov
and
sbb
mov
les
movsl
pop
out
or
push
xchg
cmp
pop
gs
mov
rol
cwtl
jne
mov
and
mov
push
repnz
push
imul
rol
mov
or
fs
pop
enter
xor
mov
ss
adc
subl
jno
mov
mov
mov
sbb
fiaddl
xlat
push
leave
or
ljmp
sub
fldl
jb
loopne
in
shl
jb
add
dec
andl
out
mov
orb
int3
pop
adc
pushf
orl
addb
cmp
pop
popf
push
mov
add
stos
aas
gs
repnz
jb
xor
jo
fwait
lret
or
push
mov
popf
cmp
dec
ds
insb
xchg
popa
test
cwtl
sub
dec
test
push
xor
sbb
sub
or
ljmp
inc
mov
push
push
adc
das
push
cmp
aas
sarl
leave
jmp
cld
out
scas
add
out
sbb
dec
mov
push
scas
adc
xchg
addr16
xchg
mov
icebp
inc
or
inc
adc
int
dec
mov
shlb
jb
dec
jg
dec
popa
js
push
adcl
test
sbb
pop
mov
sbb
sbb
xchg
leave
push
adc
mov
sub
pop
jl
jp
stos
xchg
leave
jno
aaa
ss
fs
addl
imul
push
push
inc
sbb
mov
xchg
sbb
divb
ljmp
cmpl
push
lock
inc
in
cs
mov
sbb
xor
jg
clc
data16
mov
iret
mov
hlt
daa
aad
rolb
ret
add
cld
inc
mov
sbb
add
cwtl
mov
mov
xor
or
pop
xchg
lcall
push
stos
mov
jmp
and
outsl
xchg
cs
into
xchg
mov
mov
mov
pop
add
stos
jnp
jp
pop
cmp
flds
lret
sbbb
or
xchg
mov
fs
inc
sbb
out
adc
push
js
sub
add
sbb
and
add
push
in
into
or
jo
jmp
sbb
data16
in
xlat
and
cmp
xchg
push
ljmp
sbb
loopne
or
and
mov
rorl
shrb
int3
dec
xchg
aaa
shufps
or
push
xor
push
push
mov
inc
mov
fnstsw
pusha
xor
jbe
xchg
and
push
scas
pop
add
cmp
popa
push
push
mov
jmp
adc
mov
out
cwtl
xor
js
push
call
and
add
popa
daa
shlb
into
lock
sub
cs
push
mov
push
or
and
mov
mov
xor
cmp
mov
or
or
push
jae
dec
push
cwtl
pop
icebp
rclb
push
xor
ljmp
negb
inc
sub
sbb
sbb
lcall
push
loope
lods
fdivr
leave
xor
insb
sub
jo
or
js
or
fcom
or
into
inc
dec
push
add
movsl
add
dec
jo
add
and
or
mov
popf
cmp
aas
cmp
inc
pop
push
push
cwtl
dec
in
sub
jle
sbb
inc
int
insb
or
fsubl
pop
inc
int
add
sbb
jne
data16
sbb
pop
subb
push
scas
insl
xchg
popa
mov
pop
pusha
push
mov
push
fdivl
add
inc
sbb
xor
mov
in
test
jno
inc
ret
loopne
rcrb
mov
sub
aad
ljmp
rclb
mov
cwtl
gs
xor
sub
or
addl
adcl
adcl
mov
lock
mov
push
push
pop
scas
idivb
ds
mov
aas
mov
jns
inc
imul
sub
xchg
mov
dec
mov
or
xor
xchg
sub
cmp
dec
xchg
mov
push
imul
es
scas
fldl
push
fdivrl
jo
jmp
and
push
je
push
or
orl
inc
push
std
inc
int
fidivl
and
aam
jb
daa
sbb
inc
sti
dec
add
dec
cmp
mov
rol
add
lea
cwtl
and
cltd
jp
or
push
cmp
jo
arpl
push
cmp
jmp
push
mov
jns
push
cmp
mov
or
mov
sbb
test
inc
add
inc
add
mov
lods
stos
popl
in
scas
add
dec
push
dec
cmp
push
ficompl
rcl
xchg
repnz
cmp
jp
lcall
pop
xor
pusha
sbbb
push
adc
mov
push
mov
or
mov
sub
jno
repnz
xchg
ret
or
popw
nop
pop
xchg
and
pop
aaa
sbb
rol
and
in
out
push
or
mov
int
mov
xchg
clc
and
inc
or
mov
xor
sbb
mov
loope
cmp
jp
cmp
in
adc
push
xchg
or
mov
add
lds
clc
aaa
xor
sub
add
push
sub
pop
fwait
daa
add
lea
push
jne
cmp
mov
lock
jb
xchg
cmpsb
xchg
push
mov
xor
cs
mov
ret
xchg
inc
ljmp
loopne
stos
shrl
lea
pop
cld
xorl
push
cmpl
add
pushf
mov
sbb
inc
mov
mov
inc
cmpsb
add
push
sub
mov
jp
pusha
clc
test
jo
dec
mov
sbb
mov
jo
sbb
mov
push
pop
subb
mov
mov
loopne
inc
fs
dec
pop
es
scas
jp
sub
nop
sub
mov
xchg
test
or
shlb
cmp
rolb
xor
dec
orl
cmpsl
pop
sub
mov
jae
or
jmp
dec
or
sbb
mov
stos
mov
sub
xchg
mov
and
add
call
sub
push
cs
mov
sub
rolb
add
sub
pop
mov
pop
pop
loope
lcall
jmp
rorb
xchg
adcl
push
cmp
push
add
sub
push
mov
orl
sub
negb
add
dec
sahf
call
int3
add
data16
imulb
sub
shll
and
jo
or
and
or
cmpsb
lret
test
lock
stos
dec
aam
sarl
cli
lock
xchg
jecxz
and
rcrl
cs
mov
idivl
add
xchg
sti
xchg
clc
mov
xor
mov
mov
xchg
dec
cltd
mov
popa
mov
or
loop
loopne
cli
push
stc
call
repz
lret
popa
adc
pop
cmp
jne
int3
or
or
jmp
dec
mov
mov
inc
jo
sub
pushf
in
sub
mov
adc
pop
mov
jo
or
xor
add
cltd
push
inc
add
push
inc
jmp
push
jae
xchg
imul
push
pop
daa
jmp
xlat
push
int
push
fiadds
jp
mov
mov
es
out
or
in
mov
scas
or
push
adc
test
sub
clc
jp
pop
jae
stos
movl
mov
cli
test
inc
outsl
pop
xchg
or
out
cmp
fcmovb
dec
and
push
lods
mov
adc
inc
out
data16
and
sbbb
xor
inc
jp
or
push
je
pop
lret
xchg
bound
dec
into
xor
and
adc
jg
xor
mov
leave
xchg
inc
inc
iret
adc
je
add
lock
inc
rcrl
cmp
cwtl
pop
cmp
xchg
negl
data16
cmp
push
orl
jb
testb
ljmp
xlat
inc
lret
mov
loope
pushf
add
mov
stos
pop
sbb
inc
in
rorb
add
push
add
push
pop
cmp
sbb
aas
bnd
or
test
in
sbb
sub
cmp
mov
aam
sub
jmp
jo
cmp
jb
loopne
in
pop
mov
frstor
enter
lcall
sbb
xor
shrl
lret
mov
icebp
push
xchg
popf
inc
push
sbb
jmp
mov
xchg
lret
cli
push
inc
stos
or
jp
nop
or
inc
hlt
rclb
mov
adc
add
out
test
mov
pop
mov
iret
pusha
aam
test
scas
or
icebp
rclb
sbb
jmp
xchg
leave
inc
mov
out
pop
imul
jb
push
add
out
mov
mov
pop
dec
gs
mov
ret
cmp
xchg
dec
push
cltd
sbb
popf
xchg
sub
add
and
or
ret
movsl
xchg
cwtl
jne
dec
and
popf
push
int
cmp
or
add
xor
cmp
shlb
fsubr
add
stc
push
adc
xchg
or
sbb
and
lcall
cmp
and
add
test
daa
fists
push
into
adc
mov
mov
lea
sbb
or
add
incl
xor
fldl
lret
pop
sub
mov
popf
sbb
inc
pop
push
push
jmp
sbb
out
mov
sbb
jge
bound
popa
mov
push
testl
dec
les
push
icebp
ss
cmp
cmp
cs
push
xor
or
xchg
call
xchg
cmp
ljmp
or
mov
les
jp
push
mov
out
xchg
push
test
mov
out
stos
mov
scas
call
in
adc
lret
nop
inc
push
shll
fiaddl
shlb
push
sbb
dec
sbb
popf
jo
pushf
mov
mov
sub
cmp
jns
dec
test
pushf
sub
push
popa
sub
test
mov
lret
aad
adc
inc
pop
jb
hlt
adc
cmp
enter
jbe
pushf
mov
jp
pop
dec
stos
shll
in
sbb
popa
xchg
jecxz
out
cltd
sbb
js
xor
and
push
test
sbb
int
push
xchg
mov
ret
in
add
dec
or
cwtl
dec
add
push
or
loopne
cltd
push
sbb
adcl
xor
inc
lea
aam
sbb
mov
jge
into
add
inc
fmuls
inc
imul
daa
ror
fidivrl
push
popf
mov
test
or
aam
jne
push
cmpsl
add
xchg
mov
xchg
pop
jecxz
clc
cmp
jns
mov
ficompl
adc
and
hlt
clc
out
jno
or
sub
inc
push
push
mov
in
dec
add
pop
movsb
pop
repnz
int3
arpl
adc
xor
lahf
sbb
sub
and
mov
in
lds
arpl
outsb
mov
sbb
adc
or
cmpsb
cmp
cmp
aaa
loopne
mov
aas
je
sub
mov
cmp
sbb
push
jae
enter
stos
mov
or
or
cltd
sub
xor
jl
or
sbbb
xchg
mov
or
popa
jb
push
fisttps
pop
and
xor
popa
daa
in
scas
out
popa
pop
enter
push
sbb
add
xor
and
push
dec
mov
mov
jecxz
mov
inc
iret
cltd
sbb
dec
out
loope
mov
add
inc
cmp
fdivrl
mov
dec
arpl
mov
push
test
ret
jb
loopne
push
sub
dec
pop
popf
add
pop
loope
or
movsl
mov
add
push
jo
or
push
dec
push
sbb
inc
pop
fs
jp
mov
push
cmc
enter
scas
cmp
sub
rolb
ljmp
std
lock
jne
jp
push
imul
scas
jle
dec
rcrb
notb
dec
cld
xor
or
imul
hlt
enter
lcall
or
mov
push
je
and
jo
inc
mov
adc
inc
dec
add
add
stc
out
cs
adc
ds
lock
cmp
cld
dec
sbb
mov
dec
sub
sub
adc
aaa
imul
sahf
jnp
andl
pop
xor
out
or
bndldx
mov
sarl
xchg
jns
cwtl
lret
push
aad
loopne
xchg
or
cmp
push
cmpsl
jb
sub
or
fcmovbe
pop
xor
pop
pop
and
mul
test
xchg
lods
push
push
add
repnz
push
mov
cltd
cli
push
out
js
das
cmp
test
sbb
sahf
or
mov
cmc
pop
push
ljmp
rolb
je
mov
xchg
enter
xor
aad
ja
data16
in
fs
mov
sub
test
test
mov
push
jae
into
mov
and
push
xchg
stos
inc
cs
test
push
cmpsb
pop
jp
cmp
stos
ja
pop
adc
clc
cmp
xchg
cmp
xchg
dec
jge
sub
jo
cltd
pop
fstl
cmp
dec
xchg
bound
mov
add
mov
ss
mov
addl
or
mov
je
add
mov
mov
out
adc
int
jb
shll
ret
dec
inc
aam
scas
jecxz
push
sub
loopne
rolb
mov
stos
lret
subb
or
dec
rolb
mov
aas
cmp
and
icebp
pop
cmp
push
add
sbb
mov
inc
add
mov
fldenv
test
inc
add
dec
sbb
xor
sub
addb
inc
pop
jo
cmc
sub
inc
adc
inc
in
dec
sub
adc
push
test
xchg
imul
call
mov
xor
std
xor
mov
iret
or
in
loopne
add
es
xor
push
pop
push
or
add
ds
jmp
stos
add
fnsave
in
or
test
fistpll
scas
or
push
jno
test
pusha
test
push
outsl
pop
jo
inc
xchg
dec
out
push
pusha
stos
jecxz
aaa
inc
andl
inc
cmp
push
rcll
pop
cltd
mov
test
arpl
pop
or
dec
loopne
addr16
pop
cmp
loope
lretw
sbbl
mov
jb
out
xchg
push
aas
inc
xchg
test
add
stos
jp
jae
or
add
xor
loope
aad
sbb
pop
mov
inc
sbb
test
cmp
mov
or
cmp
or
cmpsl
or
sbb
or
out
pop
test
xor
shrb
sub
popa
jb
out
dec
jp
jl
ret
mov
in
shlb
insl
roll
and
dec
int
shl
enter
stos
pop
cs
xchg
roll
push
scas
outsl
jb
shrl
inc
xchg
or
inc
es
push
push
xor
push
adc
cmp
mov
in
push
test
mov
rcll
les
and
es
sbb
test
je
dec
push
loop
roll
or
xlat
jle
mov
inc
sub
inc
cltd
sbb
ret
and
bound
jmp
stc
xor
pop
xchg
push
mov
pop
xchg
mov
jns
fdecstp
hlt
aad
daa
adc
pop
lahf
repnz
stos
adc
je
je
mov
jp
shl
pop
add
rcrb
xchg
sub
adcb
mov
ljmp
push
inc
loope
aas
clc
add
add
repz
lea
mov
ret
out
cmc
repnz
add
test
pop
scas
sub
lods
addl
cmp
cmp
push
sbb
lea
outsb
adc
pusha
lock
add
push
lock
inc
jecxz
jo
and
mov
add
data16
xor
inc
ja
sub
pop
sub
or
adc
in
out
hlt
jae
cmp
pop
ss
and
xor
sbb
subl
sbb
dec
pop
adc
xor
cmpsb
cs
jae
gs
int
lret
addb
mov
pusha
cmc
inc
or
or
subb
in
shl
lcall
add
stos
adc
hlt
push
xchg
cmp
daa
movsb
or
sub
orb
or
sub
stos
jo
test
xor
mov
sbb
inc
jg
sbb
adc
jp
jb
jo
cmp
add
or
leave
xchg
mov
mov
test
mov
lods
cmp
pop
nopl
rclb
push
cwtl
jno
aad
push
das
mov
pushl
push
negl
mov
int
and
inc
add
dec
outsb
and
pop
mov
pop
je
movsl
adc
cmp
bound
mov
repnz
shl
or
daa
push
mov
sbb
jmp
sbb
mov
jb
push
add
push
movsl
jb
mov
jle
mov
pop
inc
or
or
ret
add
sahf
mov
loope
insl
test
adc
pop
mov
xor
push
inc
inc
add
xor
xor
lret
push
sub
out
arpl
push
sbb
lds
xchg
mov
xor
xor
cmp
lea
shrl
xor
pop
cmp
sbb
inc
bnd
repnz
test
test
jmp
push
pusha
jo
push
jo
jecxz
repz
xor
popf
aam
add
jp
dec
adc
dec
int
test
scas
mov
std
cltd
dec
push
inc
pop
imul
rolb
enter
add
sbb
or
fadds
pop
cmp
cmp
sbb
loope
mov
xor
icebp
inc
sub
sbb
dec
rorb
out
fstps
xchg
or
es
xor
sub
dec
xor
fsubrl
addb
mov
and
rclb
out
adc
push
cmpsb
subl
pop
aaa
xor
test
mov
or
push
in
fisttps
mov
push
sub
push
sahf
arpl
sbb
stos
xchg
loopne
and
mov
or
jmp
cli
ja
loopew
inc
cmp
nop
in
int3
pushf
lret
xor
add
mov
push
mov
mov
or
ret
xchg
add
xor
loop
neg
iret
dec
sub
add
adc
insl
mov
fwait
ss
sub
or
pop
test
xchg
or
jae
sbb
in
xchg
sub
subl
add
bound
xchg
cmp
in
adc
push
inc
xor
or
stos
cwtl
mov
sub
stos
add
scas
pop
ss
mov
inc
sbb
lcall
xor
mov
mov
fisttps
cmpsb
xor
inc
pop
cmp
in
popa
ret
or
loopne
lahf
sbb
add
shll
mov
xor
sub
jmp
sbb
xor
pusha
xor
pop
into
jecxz
cltd
add
add
sahf
or
inc
inc
pop
into
loope
cmp
jo
and
int
cwtl
stos
push
es
and
xor
and
push
push
dec
aad
cmpsb
cwtl
or
popf
ret
mov
lcall
push
sti
jae,pt
xchg
andl
test
xchg
add
lock
pop
popa
xor
mov
in
jb
rclb
dec
xchg
in
push
sub
mov
sub
stos
cwtl
sbbb
xor
ficompl
popf
pop
push
dec
pop
mov
push
sarb
adc
mov
loope
pop
cmovl
inc
jnp
sub
cltd
pushf
and
scas
sti
pop
or
int3
inc
mov
movsb
nop
popf
enter
mov
inc
call
lret
xchg
xchg
add
sbb
sub
cs
sbb
pop
lods
add
jl
test
inc
sub
dec
mov
lahf
xor
mov
pop
shl
sbb
add
inc
nop
stos
lret
in
add
push
leave
lea
push
push
mov
cli
mov
data16
in
add
push
push
inc
fsubs
inc
add
ret
cmp
adc
cmp
fsubrl
push
jnp
call
adc
push
lcall
pop
imul
fdivrs
jp
sub
stc
out
ja
shrb
add
mov
inc
addr16
or
call
push
inc
cmp
add
push
loop
xor
jg
mov
shll
ja
fmuls
jnp
push
je
sarb
and
add
mov
hlt
jg
pop
add
pop
addr16
popf
stos
dec
cltd
mov
inc
mov
decl
or
mov
xchg
iret
iret
cmc
or
inc
movsl
int
xor
negb
js
sahf
cmp
jge
aad
adc
and
adc
shll
es
xor
lods
loop
xchg
bound
std
lret
mov
mov
mov
inc
cmp
cltd
std
std
mov
jno
repnz
sub
xchg
repnz
add
add
adc
std
es
scas
and
push
clc
in
xchg
subl
hlt
cmpb
mov
pop
loopne
mov
adc
add
shl
adc
ds
mov
pop
bound
cmp
sbb
out
cmpl
pop
add
add
jecxz
pop
and
mov
jmp
push
int
jo
iret
jl
push
loopne
mov
int
add
push
xchg
rorl
inc
push
or
repz
sbb
test
notb
mov
add
into
mov
mov
int
rcrb
aad
sbb
sbb
sub
out
jnp
pop
fidivrl
inc
xchg
rol
int
or
adc
pop
popa
mov
dec
and
js
rorb
rcll
add
push
adc
adc
cmp
shr
add
loop
push
test
and
js
cmp
jo
adc
inc
push
or
ret
imul
icebp
mov
cmc
add
mov
ja
ret
inc
sub
add
xchg
mov
insl
pusha
xorb
add
es
cmp
pop
test
xchg
push
stos
ret
xor
mov
sbb
sbb
or
inc
dec
imul
push
xchg
loope
pop
fwait
add
or
mov
inc
xchg
and
xor
iret
add
push
jp
cmpsb
sbb
mov
add
mov
cli
add
inc
sahf
mov
orb
sub
test
cltd
lods
mov
aas
jno
mov
in
push
xchg
popa
sub
in
adc
add
or
ret
adc
mov
jle
pop
scas
pop
sub
scas
or
cmp
push
inc
cmp
adc
rcrb
dec
mov
out
lret
or
xor
adc
xchg
push
mov
out
loop
jb
push
notl
mov
int
data16
mov
stos
mov
jnp
sub
stos
sbb
sahf
fnstcw
out
lods
mov
aam
fwait
pop
pop
into
inc
xor
icebp
mov
loope
dec
cltd
clc
imul
mov
mov
push
sbb
or
scas
mov
mov
and
mov
adc
xchg
jp
mov
inc
mov
cmpsl
push
in
aad
fisubrl
daa
xchg
inc
xor
ret
push
stos
dec
or
mov
mov
or
das
sub
arpl
xor
addl
cmp
outsb
lock
mov
mov
inc
loopne
adc
roll
testl
out
add
aas
inc
add
mov
mov
add
ret
push
les
out
or
xchg
je
js
lock
lods
add
inc
test
jg
cmp
aam
add
push
ss
pop
or
cli
les
mov
mov
add
iret
add
aaa
mov
adc
dec
add
adc
popa
fnstsw
adc
sub
adc
jae
je
dec
repnz
push
insl
jmp
push
scas
fdivl
adc
push
adc
roll
clc
das
mov
add
dec
dec
outsl
js
dec
add
adc
lret
in
outsl
mov
stc
add
sbb
mov
push
jno
pop
sub
dec
jno
cmpsl
add
mov
mov
sub
xchg
sub
sbb
jmp
push
adc
mov
inc
pop
mov
xchg
dec
add
adc
add
sbb
cli
pop
jns
adc
mov
jmp
cwtl
add
nop
stos
test
jne
andb
inc
scas
ret
push
cmp
inc
je
or
pop
testb
push
and
xor
mov
pop
cmp
lock
jae
inc
inc
sbb
inc
in
push
jns
and
add
add
stos
in
loop
cmp
inc
pop
loopne
aam
jmp
popf
adc
and
sub
and
pop
add
popf
sub
push
push
out
jb
mov
sub
push
inc
lock
and
pusha
orb
xor
and
adc
jne
dec
movsl
aas
xor
in
jo
push
data16
jo
xchg
loope
sbbb
scas
dec
sbb
cmp
push
pop
pop
lods
ret
aaa
in
adc
add
and
int
rolb
bound
push
sbb
xor
adc
js
push
decl
loopne
mov
sahf
loopne
mov
insl
clc
push
dec
in
in
mov
mov
push
rolb
add
sub
sbb
lds
movl
mov
and
fimull
test
and
out
loopne
scas
shll
aaa
or
sti
push
push
xor
add
add
sub
mov
mov
and
adc
inc
mov
int
sarl
aad
aaa
jmp
add
xor
cwtl
pop
add
dec
pop
push
pop
mov
out
popf
xor
fadd
fldl
mov
cmp
push
fwait
or
xor
mov
orl
ror
inc
mov
inc
mov
es
add
test
mov
test
pop
inc
jae
repnz
lock
mov
into
mov
xchg
lret
adc
cltd
inc
push
or
pop
lods
inc
scas
sti
out
js
mov
mov
add
adc
dec
aas
push
and
in
push
icebp
daa
xor
dec
test
mov
push
pusha
or
int
sbb
inc
ret
insb
js
shlb
sbb
xor
jne
inc
push
lcall
fiaddl
into
jo
aas
clc
shrb
sub
mov
dec
and
popa
ret
and
push
push
sbb
inc
shlb
or
push
mov
inc
xor
xor
jno
insl
mov
push
js
loop
and
enter
fwait
or
sahf
or
mov
pushf
mov
adcb
insb
and
and
push
push
or
xor
adc
dec
addl
in
jle
sbb
add
mov
xor
mov
addl
shl
push
mov
xchg
icebp
rcrl
dec
scas
and
ja
out
test
lcall
aam
push
mov
int
jmp
jno
or
add
xorl
and
js
xchg
push
dec
xchg
cs
adc
mov
push
mov
push
inc
outsl
jg
in
insb
loope
fisubl
cmc
ja
mov
xchg
mov
add
test
imul
adc
and
sub
cmp
sarb
adc
add
adc
cmp
aas
out
test
ds
add
call
flds
cmp
add
lods
cltd
sub
fbld
add
pop
xor
mov
fsubl
movsb
xor
repnz
mov
cwtl
clc
cmpsl
pushf
xor
bound
stos
pop
cmp
cmp
mov
rcll
fs
fcmovb
ja
pop
ss
pop
out
mov
push
pop
sbb
aad
push
ftst
add
pop
xchg
xor
sbb
int
and
test
inc
ror
or
test
fisttpl
adc
push
mov
jae
and
lret
add
dec
mulb
push
pop
fs
or
xchg
pop
sub
stos
sbb
call
rcl
inc
test
inc
lea
jno
xchg
add
or
in
mov
sbb
je
pop
mov
mov
and
aam
in
push
add
ror
inc
int
pop
arpl
adc
and
ret
cmp
rol
orb
sub
pusha
mov
jecxz
push
pop
jae
or
adc
push
sub
bound
mov
out
loop
enter
dec
push
stos
insb
in
xchg
add
pop
inc
xchg
jmp
mov
mov
lods
sbb
in
inc
cmp
sbb
lahf
mov
mov
mov
pop
iret
jbe
pusha
and
addr16
int
jp
loopne
dec
ss
xchg
pusha
add
inc
mov
push
cs
sbb
xor
lcall
inc
push
out
fcoml
sbb
jmp
sbb
fadds
cli
jmp
sbb
adc
add
and
test
dec
sub
sub
je
faddl
aam
adc
mov
outsb
sarl
out
jp
enter
lahf
jb
cli
cltd
lods
pop
add
push
xor
pop
pop
subl
sub
daa
add
mov
pop
pop
pop
adc
cmc
push
and
popf
mov
mov
mov
push
pusha
ret
les
jo
jo
out
pusha
push
in
push
adc
inc
push
pop
hlt
gs
cltd
addb
es
jo
test
lahf
stc
and
pop
cltd
leave
aas
imul
add
push
cmp
xchg
add
fwait
add
cs
cltd
or
xor
ficompl
adc
arpl
mov
or
mov
out
xor
jb
jae
test
data16
push
ret
jb
sbb
popa
or
loope
pusha
cmp
adc
xchg
pop
es
test
je
adcb
xor
add
lods
test
xchg
pushf
imul
or
les
and
add
add
rorb
mov
imul
mov
pop
shlb
lock
shl
test
jg
sbb
add
sbb
inc
xchg
xchg
lds
sbb
push
and
xchg
mov
mov
sbb
std
mov
into
aad
add
cmp
les
pop
xor
dec
lret
aam
or
sarl
inc
scas
data16
sbb
push
cmp
mov
jle
adc
push
or
mov
sub
cld
sub
testl
fwait
pop
sar
adc
pop
sub
add
add
cwtl
mulb
rcll
daa
out
sbb
dec
sub
test
xchg
insb
das
mov
push
cmpsb
xor
out
call
cmp
push
lock
or
inc
lock
add
les
test
mov
bound
popf
sahf
and
rclb
cli
mov
subb
iret
sub
lock
cmp
shrb
push
aam
jb
movsb
test
adc
ret
add
shrb
add
fisttpll
lods
xor
sbb
scas
out
sahf
sti
pop
int
adc
sbb
add
jmp
push
jl
hlt
roll
pop
repnz
pop
inc
push
shlb
pop
je
mov
enter
jmp
add
es
add
andb
test
add
jo
jo
add
xorb
jb
inc
loop
jo
adc
fwait
push
fcoms
cwtl
or
js
or
in
pop
cs
add
xchg
out
or
std
jne
leave
rorl
jno
fidivl
pop
xchg
sub
shrl
sbb
int
mov
or
imul
dec
adc
xchg
sub
mov
mov
or
orl
xchg
lret
push
mov
inc
cmpsb
xor
pop
lods
mov
ret
sub
mov
dec
cltd
les
xchg
stos
push
push
lds
lods
cmp
scas
aad
test
pop
push
jo
outsl
mov
push
andb
xlat
dec
push
and
inc
popa
push
fimuls
cs
es
jns
push
mov
sub
inc
pop
add
sub
mov
and
sbb
fisubrl
mov
push
or
into
push
mov
lock
out
mov
mov
jnp
loop
mov
mov
pushf
xchg
test
mov
and
xor
jo
fnstcw
pop
mov
push
cwtl
xor
pop
mov
cmp
adc
jo
outsl
push
mov
mov
xor
sti
incl
jmp
outsl
push
inc
add
or
lcall
inc
mov
jb
xchg
ret
and
and
loopne
pop
inc
and
out
int
call
push
lods
inc
pop
jp
inc
int3
adc
adc
xchg
xchg
cmc
inc
xchg
xchg
test
loopew
inc
push
mov
push
cmpsb
sbb
adc
movb
pop
test
sub
push
mov
popa
sub
out
add
addb
xor
adc
out
dec
adc
xchg
sub
cmp
dec
dec
mov
or
adcb
in
loope
pop
jno
rcrb
cmp
pop
into
lock
ret
push
repnz
sbb
or
scas
mov
call
push
adc
xor
dec
pop
and
add
push
push
cmp
movsl
outsl
les
lds
jo
xchg
ret
push
mov
xchg
push
int
sub
fs
inc
loope
test
mov
stos
jb
dec
mov
cmp
in
push
and
test
push
sbb
loope
mov
mov
fwait
xchg
pop
aad
adc
into
jp
mov
inc
mov
or
sbb
loopne
jo
cmpsl
popf
push
xchg
jg
int3
xor
push
push
rclb
daa
lods
lcall
push
cmp
inc
xchg
sub
jb
orb
or
push
popf
iret
jns
shll
cltd
jnp
inc
jne
push
pushf
incl
cmp
jmp
test
xor
push
loope
push
test
lcall
push
aad
sbb
add
sub
push
mov
add
push
pop
shrl
inc
push
push
sbb
adc
jo
or
adc
jno
adc
jp
add
leave
int3
in
xor
inc
inc
mov
dec
adc
test
cmc
mov
int
cwtl
sarl
pop
xor
push
pop
inc
mov
mov
dec
into
add
fwait
aad
sbb
add
imul
push
cmp
or
imul
sbb
jns
adc
and
jne
mov
mov
add
mov
pop
and
outsb
cmp
mov
outsb
jle
push
int
jbe
inc
push
imul
test
cmpsb
imulb
pusha
mov
int3
pop
icebp
subb
addl
aam
push
dec
sub
push
data16
sbb
pop
or
mov
push
mov
add
add
or
out
add
mov
dec
lea
or
test
lret
lds
mov
dec
xorl
ds
cmp
or
arpl
adc
fsubrl
rolb
mov
push
addl
enter
data16
adc
fndisi(8087
pop
pusha
mov
xchg
ljmp
add
push
adc
rclb
pop
orb
popl
dec
test
repnz
pop
or
ret
pop
pop
inc
xchg
pop
mov
leave
popa
add
cs
popf
cmc
in
mov
adc
xlat
or
loope
scas
mov
fs
call
push
cmp
add
mov
ds
or
add
mov
inc
sbb
xor
dec
aad
popf
xchg
sbb
sbb
adc
pop
cmp
mov
push
test
pop
xchg
push
jo
mov
in
inc
fcomps
jns
cmp
and
mov
out
add
lods
pop
scas
enter
shr
sub
cmp
scas
jle
cmp
jle
test
dec
push
adc
mov
jb
es
push
mov
out
in
into
loopne
into
in
inc
cmp
int3
inc
movsb
pop
inc
sub
pop
push
in
cmp
cmp
into
add
pop
stos
adc
mov
out
sbb
and
subl
mov
ss
cltd
jo
bound
test
fmuls
enter
xor
pop
scas
add
fdivl
inc
test
out
mov
ljmp
bnd
pop
push
xchg
stos
add
mov
mov
popl
pop
cld
sub
loopne
fwait
lds
dec
aad
or
and
adc
push
sbb
aas
test
dec
loopne,pn
icebp
inc
inc
sahf
push
jno
add
rclb
sub
cmp
addr16
adc
add
mov
cs
insl
jp
int
in
and
pop
int
mov
sub
or
push
hlt
and
jb
ljmp
dec
lret
mov
dec
test
adc
popa
lods
adc
cmp
movsb
jnp
mov
and
pop
imul
loopne
je
inc
push
pop
push
push
das
sub
mov
add
xor
mov
int
adc
push
lret
xor
popa
daa
inc
push
add
scas
fisttps
mov
ret
push
xor
orl
push
pop
cmp
jo
or
push
adc
mov
aad
fmull
xor
pop
in
sub
shrl
pusha
jb
cmp
arpl
xor
inc
test
xor
xchg
movsb
jnp
in
xor
dec
add
shrb
and
and
or
xchg
mov
jo
adc
scas
sub
dec
cmpsb
adcb
push
xor
add
pop
xchg
fldt
push
aad
aam
sbb
adc
cmpl
mov
jb
gs
inc
popa
shlb
or
mov
lcall
adc
jb
and
call
icebp
jb
adcb
sarb
mov
div
or
jo
fildl
jg
fildll
jbe
mov
and
cld
js
adc
lea
mov
add
scas
push
cltd
cli
or
inc
je
pop
add
stos
sub
cmpsb
lcall
lret
push
add
sub
xor
lcall
movsl
pmulhw
push
xchg
sub
into
iret
lock
mov
add
movb
aam
test
lcall
hlt
push
inc
scas
sbb
call
pop
pusha
add
test
insb
daa
outsb
icebp
pop
push
scas
cmp
scas
jno
popf
jo
xchg
ficompl
sub
test
inc
push
push
jp
dec
push
enter
test
int
sahf
enter
xchg
fldt
cmp
xor
cmp
mov
adc
popa
push
loop
jb
loop
add
push
cmpsl
shll
jo
mov
or
push
mov
push
out
pop
xchg
add
sbb
jl
adc
jmp
nop
sub
sub
in
cmp
cltd
adc
and
push
cmp
mov
mov
pusha
or
mov
mov
rclb
sbb
out
scas
xchg
and
xchg
or
int
and
sbb
sub
xchg
lret
add
inc
xchg
xor
aam
and
xchg
mov
imul
push
rorb
sbb
mov
sbb
mov
sub
adc
sbb
and
mov
mov
scas
or
nop
rcll
push
and
andb
adc
dec
add
cld
daa
nop
adc
or
pop
push
pop
add
lock
sbb
xor
xchg
adc
js
dec
push
inc
cmpsb
and
sub
xchg
sbb
jb
stos
push
sbb
sub
pop
test
push
push
test
mov
ljmp
adc
sbb
add
mull
shl
scas
mov
add
movsl
and
pop
je
pop
mov
push
popf
test
xchg
xor
pop
ss
push
lcall
and
popa
push
xor
cmp
addr16
insb
cltd
dec
fs
ljmp
and
popa
roll
out
int3
add
push
in
mov
jo
insb
dec
pop
pop
lock
adc
push
cmpsl
test
enter
mov
int
or
adc
push
add
xchg
add
push
inc
add
mov
inc
jb
or
and
push
push
je
fcompl
or
stos
loopnew
nop
add
inc
movsl
xor
jecxz
sbb
sub
insl
popa
test
adc
in
punpckhdq
xor
jbe
pop
cmpsb
mov
dec
pop
xor
inc
adc
repnz
xor
add
inc
push
pop
add
inc
data16
data16
stos
loope
testb
subl
cmp
ret
or
cmp
fdivs
inc
scas
mov
andps
pop
adc
addr16
jne
adc
adc
sbb
xchg
xchg
xchg
xchg
sbb
add
scas
adc
adc
repnz
aaa
add
inc
js
test
xchg
mov
ret
sti
outsl
xchg
adc
jae
mov
into
popf
mov
push
xor
aam
lret
add
pop
es
inc
dec
mov
mov
in
pushf
add
mov
xchg
loope
push
fisttpll
into
and
lret
les
int
adc
data16
inc
popa
or
xor
mov
mov
out
sbb
ret
xor
and
icebp
inc
stc
mov
inc
lahf
adc
cmpsb
out
cmc
mov
test
mov
dec
xor
mov
fistps
into
in
dec
xchg
ljmp
aam
fdivl
push
pop
jp
mov
sbb
xor
fists
test
jp
add
les
cmpsb
dec
shl
cwtl
lcall
sbb
jno
push
xor
jge
rorl
push
aad
andb
jg
loope
mov
mov
js
mov
mov
ds
jecxz
cs
xchg
mov
or
and
repnz
push
shrb
push
push
mov
scas
add
xchg
cmp
dec
inc
or
stos
adc
bswap
push
leave
fcoms
out
adc
arpl
sbb
aad
sbb
and
insb
adc
mov
jb
roll
or
mov
xchg
xchg
mov
sbb
add
aaa
xchg
popa
scas
out
add
inc
cmp
sbb
rcrl
faddl
lret
push
std
cmpsl
fs
in
xchg
push
lahf
mov
push
imul
iret
stc
adc
and
mov
ret
mov
mov
fs
ss
inc
xor
mov
sarl
sub
add
push
aas
jno
xlat
xor
mov
inc
adc
rcrl
xor
mov
jae
xchg
test
jb
sub
in
push
imul
sarl
cmp
jo
inc
stos
cmpsl
repnz
push
xor
jae
enter
out
push
aas
inc
mov
and
cmp
aas
scas
loopne
and
negl
add
mov
xor
lcall
fcmove
inc
pop
push
and
cmp
and
cmp
mov
pop
in
psubusw
hlt
push
cmp
pop
in
jg
mov
fs
push
mov
roll
inc
and
xchg
or
and
clc
xor
cmp
jb
imul
sub
or
rclb
push
mov
and
inc
cltd
and
jmp
inc
xor
in
fadds
scas
pop
lock
mov
xlat
or
inc
jae
pop
mov
or
enter
mov
lret
subb
adc
gs
push
add
or
mov
jo
popa
test
lods
int
push
sbb
xor
out
mov
push
mov
js
cmp
insl
es
or
xchg
push
adc
or
test
and
loopne
adc
mov
es
mov
push
cmp
or
aad
js
loope
xor
aaa
push
lods
push
adc
fwait
js
lret
sbb
mov
cmp
std
test
adc
test
out
xor
or
mov
cmpsb
shll
js
xchg
lret
sbb
daa
mov
leave
mov
fists
push
out
xor
leave
sub
pop
mov
mov
dec
cmc
cmpl
decl
push
shlb
xor
and
mov
and
push
pop
push
out
adc
jp
aad
orb
inc
enter
int
mov
loopne
add
es
xor
loopne
sti
lret
inc
jo
inc
mov
jnp
sbb
dec
rclb
inc
cs
call
lods
mov
sbb
sub
ljmp
sbb
test
pushf
sub
loop
lods
sbb
push
cld
push
orl
pop
cltd
or
push
dec
scas
dec
xor
adc
sbb
rclb
or
mov
insl
or
jb
mov
cmp
movsb
jge
movl
jo
ss
adc
inc
and
rclb
push
call
leave
pop
or
mov
daa
cmpsl
jmp
push
pop
in
in
aam
loop
roll
mov
mov
inc
es
jl
pop
add
loope
sub
mov
dec
jne
inc
pop
in
aam
jo
xchg
push
pop
sbb
mov
in
adc
add
pop
sarl
jp
cmp
push
add
leave
mov
pop
cmp
sub
es
adc
lods
call
es
xor
clc
mov
cmpsb
push
dec
ficomps
adcb
aad
test
loopne
mov
and
hlt
shlb
jg
pop
add
adc
sbb
lahf
int3
and
add
add
fdivp
or
add
inc
sub
mov
cmp
sbb
mov
add
mov
popa
lret
in
sbb
sbb
sbb
push
mov
cltd
jb
and
movsb
clc
nop
mov
push
in
shl
sub
mov
adc
or
shlb
pusha
mov
push
loope
push
fs
cmp
cmp
sub
cmpb
cmp
sbb
inc
sbb
gs
xchg
popa
and
cmp
push
and
scas
sbb
hlt
in
and
push
push
int3
push
mov
push
cs
mov
cmpsb
insl
add
cwtl
sub
push
ret
in
sahf
into
mov
bound
dec
pop
fwait
pop
adc
mov
or
sbb
dec
clc
or
mov
dec
lret
out
sub
adc
or
pushf
enter
cltd
shlb
mov
or
fsts
hlt
inc
push
sbb
dec
add
dec
cltd
rcl
ljmp
xor
mov
test
in
ja
mov
int
mov
in
loopne
js
daa
rcl
push
cmp
std
push
push
or
out
inc
jp
nop
mov
xlat
push
cmp
push
push
push
push
add
sbb
adc
cmp
and
push
or
inc
lret
popf
xor
xchg
xorl
jl
cmp
dec
repnz
cmp
adc
push
popa
les
ljmp
push
pop
pusha
xchg
addr16
out
xchg
test
enter
incl
lods
xor
sti
pop
sbb
cmpsl
add
inc
add
out
out
xchg
into
xorb
in
dec
retw
sbb
inc
rcll
push
mov
inc
and
dec
pop
dec
mov
aad
subb
inc
push
and
add
pop
add
mov
push
mov
inc
cmp
mov
inc
or
xchg
ret
insl
insb
adc
aam
add
in
ljmp
mov
inc
mov
cmpsl
jb
push
pop
popa
lret
xlat
jp
cmova
sub
shl
push
mov
pusha
orb
sbb
push
scas
sti
cs
jb
inc
xchg
pop
roll
notb
pop
mov
push
pop
cltd
pop
mov
imull
push
sbbl
or
xchg
fldl
push
xchg
imul
push
xchg
out
sbb
outsb
rcrb
push
jae
push
push
mov
into
xchg
sub
push
in
or
addr16
leave
rorl
lcall
pop
xlat
lock
or
loopne
add
push
int3
pop
test
inc
xor
pop
adc
adc
xor
or
inc
sbb
stos
rclb
inc
sub
mov
shl
cltd
ret
fs
inc
in
sbb
and
add
test
leave
imul
or
mov
jp
loopne
cmp
sub
test
gs
loope
sbb
adc
pop
aas
ljmp
ficoml
scas
jecxz
pusha
call
xchg
arpl
push
add
or
mov
pop
into
push
inc
adc
cwtl
test
mov
inc
add
iret
fists
push
add
xlat
add
xor
xor
push
jo
lret
push
int
inc
movb
mov
loop
dec
push
mov
out
or
adc
mov
inc
sub
ljmp
xchg
adc
add
mov
cmp
idivb
sbb
or
or
push
arpl
lods
cmpsb
bsf
mov
push
xor
data16
jno
jae
mov
adc
in
in
nop
pop
xor
int
xor
inc
mov
sbb
repnz
lret
mov
lods
push
mov
cwtl
jo
dec
mov
cmp
cwtl
push
dec
cmp
stos
inc
cmpsl
or
jo
adc
xor
push
cwtl
xor
push
insb
cmp
pop
dec
mov
repnz
movsl
sarl
jnp
cmp
outsb
mov
call
inc
or
sub
gs
test
add
orb
mov
test
sub
bound
rorb
out
mov
je
inc
or
xchg
adc
mov
add
mov
push
sub
xorb
push
jae
in
add
mov
mov
int3
in
adc
aaa
xchg
cmp
or
repnz
push
repz
pushf
or
fwait
test
mov
cld
es
or
add
adc
sbb
or
add
repz
in
nop
insb
clc
or
imul
scas
jbe
sbb
js
dec
pop
adc
in
cltd
movsl
or
mov
add
scas
dec
sub
data16
sbbb
jecxz
dec
dec
bound
xlat
decl
addb
mov
inc
inc
mov
xchg
mov
cld
cmp
addr16
mov
das
push
jbe
sbb
inc
daa
lock
ret
jo,pn
jb
cmpsb
jo
fs
or
xor
fiaddl
fisttpl
or
stos
inc
int
pop
rcl
pop
adc
inc
dec
xor
inc
xor
sbb
pop
add
test
or
or
sub
cwtl
mov
int
xorb
imul
mov
jo
mov
xor
jbe
loope
adc
shll
daa
mov
jp
mov
jb
mov
jo
lds
test
sub
stos
inc
in
aad
sub
test
ret
pusha
stc
repnz
enter
shl
shrl
mov
loope
aad
lcall
push
movsb
xor
inc
or
fisttpl
sbb
mov
push
dec
imulb
lahf
daa
int3
inc
mov
shlb
mov
cld
cmpsb
sub
xor
and
rol
add
push
test
add
and
mov
sub
inc
cmp
sarb
inc
push
sbb
pop
sbb
jp
sbb
cmp
icebp
lods
or
test
mov
inc
sub
cmp
loope
add
cmpsb
mov
in
orl
aaa
sbb
xor
in
cmp
std
rorb
push
out
dec
popa
test
adc
cs
test
xchg
mov
cltd
lcall
hlt
cmp
insl
sub
test
xchg
mov
mov
sbb
loopne
and
lds
adc
push
shll
subl
mov
inc
and
hlt
mov
and
mov
test
in
sbb
cmc
cwtl
jb
push
lret
xchg
adc
xorb
sub
pushf
and
gs
test
addr16
aam
pop
xor
add
mov
pop
cltd
add
aad
repnz
mov
xchg
or
pop
or
pop
sbbl
sub
test
mov
cmp
add
sbb
and
add
and
into
pop
add
ljmp
mov
inc
fs
mov
hlt
xorb
add
jb
pop
fnsave
adc
into
sbbb
sub
add
scas
push
cwtl
pushf
or
gs
in
cmp
repnz
jge
xor
lcall
insb
ljmp
in
cmp
dec
push
lret
fcom
cmp
subb
push
adcb
dec
push
mov
push
push
cltd
push
xor
ljmp
adc
rcrb
pop
xor
pushf
or
pop
cmpsl
and
idivb
jb
cmpsb
xchg
jne
cmp
add
and
sbb
dec
arpl
xchg
loopne
fnsave
inc
sub
inc
lret
xchg
test
cmpsl
mov
cwtl
sbb
rcrb
lahf
cmp
xor
jb
int
cmp
push
cs
jp
in
mov
sub
lret
jb
dec
push
sbb
gs
add
sbbb
jle
sub
push
cli
out
bound
lcall
inc
sbb
xchg
push
jne
mov
into
inc
int
push
xchg
js
add
out
cmp
aad
mov
in
mov
shll
adc
inc
in
add
xor
adc
es
push
or
shll
loopne
or
or
jae
or
push
fst
mov
inc
and
dec
mov
cwtl
and
xor
mov
rclb
push
loopne,pn
push
pop
hlt
daa
and
js
push
inc
or
push
sbb
or
aas
inc
xchg
add
push
les
addr16
mov
std
ret
nop
pop
xor
adc
xor
loop
popa
xor
gs
sub
mov
mov
mov
add
jo
ret
test
cmp
sub
mov
rcl
stos
popa
sbb
inc
outsl
jb
fs
es
inc
mov
stos
push
add
push
sub
push
orl
aam
mov
scas
loop
xchg
jb
faddl
push
xor
loope
inc
sti
cmp
add
ss
add
jmp
mov
stos
xchg
add
mov
fdivr
into
dec
clc
add
mov
jle
mov
repz
add
in
lods
mov
inc
jmp
adc
inc
mov
jo
sub
inc
addb
sub
adc
pop
xchg
pop
add
cmp
push
rcrl
push
fmull
cmpsl
js
jo
cmp
out
imul
sbbl
sahf
fisttps
aaa
mov
mov
outsb
mov
dec
adc
sub
loopne
into
cmpsl
push
pop
push
nop
cli
jg
add
daa
test
add
fdivrl
xchg
add
cmp
enter
icebp
int3
repnz
popf
mov
inc
and
pop
push
dec
add
adc
or
push
sahf
lret
mov
aam
out
mov
adc
adc
xchg
jp
jp
mov
cwtl
pop
scas
xor
insl
sbb
push
push
sti
aad
jo
sub
push
inc
push
cmp
test
jb,pn
in
cmpb
mov
add
pop
hlt
or
cmp
mov
js
aaa
icebp
mov
jp
in
or
xchg
jg
cmp
cmp
or
inc
xor
movsb
inc
scas
mov
call
cmp
xlat
sbb
adc
add
gs
push
rclb
cmp
mov
lret
xchg
mov
push
push
jne
loop
xor
and
sbb
cmp
sub
sub
add
cmpsl
imul
add
jb
mov
adc
adc
inc
pusha
mov
pop
mov
push
mov
dec
cwtl
jb
lods
cmpb
hlt
mov
xor
xchg
xchg
push
cs
scas
xor
mov
inc
sbb
cmpsl
jle
xor
jo
mov
pop
std
mov
ljmp
rorb
adc
xor
outsl
out
test
and
inc
stos
sbb
dec
cld
jg
push
std
jno
adc
sub
and
jno
xor
gs
add
mov
test
jle
or
push
stc
add
and
hlt
outsl
cmp
mov
adc
xchg
lret
gs
inc
enter
cmpsl
rcrb
mov
das
lret
xchg
or
loopne
push
mov
cmp
rorb
in
push
and
call
mov
loopne
shll
mov
sub
cmp
push
lret
nop
xor
xor
xor
sbb
cwtl
jmp
inc
jno
jb
pop
push
inc
ret
push
sub
xor
aad
add
subl
data16
out
xorb
popf
je
ret
nop
sub
and
sbb
sub
mov
and
test
rolb
jo
or
push
jo
or
push
mov
adc
pop
xor
sub
dec
fcompl
ljmp
push
data16
andb
push
enter
popa
pop
push
in
loopne
sbb
xchg
adcl
push
fs
pop
dec
rclb
mov
fstl
cmpsb
das
jae
and
push
push
adc
pop
gs
and
sub
sbb
add
jle
cwtl
cltd
sbb
aam
or
mov
jb
cmpsb
pop
loopne
inc
test
push
adc
pusha
jne
mov
ret
cmp
inc
cmp
loope
add
or
push
xor
push
xor
loopne
arpl
or
adc
jae
ret
loopne
rclb
in
fs
ret
push
popa
cmp
inc
out
in
xchg
in
movsb
lock
adc
and
push
sbb
loope
cli
push
xor
xor
push
loopne
push
je
pusha
enter
or
inc
dec
shlb
test
jo
jle
add
inc
push
cmpl
jb
scas
add
mov
pop
addr16
sub
jne
cmp
inc
cs
pop
subl
add
sbb
dec
loop
ljmp
roll
pushf
test
adc
sbbl
pop
jae
or
xor
jg
sbb
push
sti
stc
pop
daa
pop
sbb
sub
inc
mov
sti
andl
xlat
dec
mov
xor
xor
loopne
xor
std
in
xchg
enter
or
and
push
jae
sbb
pop
mov
enter
mov
mov
cmp
pop
push
sbbl
cmp
mov
or
mov
popa
stos
add
in
push
push
iret
and
xchg
out
dec
cs
loop
subb
add
lods
fs
push
cwtl
jb
xchg
and
test
cltd
stc
add
adc
cmc
jo
jo
test
sub
inc
into
dec
loop
push
mov
stc
cwtl
xor
cmp
adc
sub
sub
or
inc
ret
or
pop
pop
dec
cmpsb
mov
test
inc
lock
mov
in
scas
add
mov
push
js
loop
sbb
add
mov
sbb
or
or
adc
push
add
inc
mov
rorb
outsl
jno
pop
adc
jle
das
clc
jmp
adc
jbe
mov
mov
sbb
xchg
dec
dec
loopne
pop
lods
add
ret
jb
dec
push
sbb
xor
sbbb
mov
mov
add
aas
sbb
jnp
sub
pop
adc
lret
xorb
mov
xchg
push
sbb
inc
fstl
push
xor
xor
outsb
xchg
bound
push
inc
jb
call
mulb
in
loope
mov
or
fnsave
test
pop
rclb
jecxz
rclb
dec
inc
cs
sbb
mov
pop
xchg
and
cmp
es
mov
inc
sub
cmp
add
pop
pop
popa
loopne
jo
xchg
stos
ja
push
sub
mov
mov
add
sti
or
add
aaa
imul
sbb
stos
cmp
push
popa
cmp
pop
ss
adc
jmp
mov
jb
push
addr16
xchg
test
into
sbb
outsb
pop
push
xchg
and
add
out
cltd
lret
les
sub
inc
pop
lods
ret
scas
jo
push
pushf
push
loope
mov
mov
push
in
sub
jno
xchg
and
and
inc
jae
sbb
xor
and
stos
mov
fs
sahf
push
push
les
push
jg
push
loope
ret
aas
popf
fldl
add
mov
push
test
inc
sbb
leave
incl
scas
add
dec
add
add
call
rclb
xor
test
mov
adc
cmp
cmp
xor
or
roll
jae
fs
mov
lret
sahf
cmp
push
rolb
pop
test
xor
sub
jne
adc
je
pop
push
mov
int
daa
and
inc
sbb
loope
inc
xchg
fisubs
sub
aam
int3
inc
mov
cltd
add
cmp
sete
ds
ja
call
fsubrl
fwait
popa
stos
lcall
daa
xlat
xor
inc
push
sbb
sub
mov
add
js
daa
pop
jo
inc
int
or
cmp
shll
inc
adcl
ss
inc
mov
push
dec
inc
push
les
sub
jp
adc
faddl
stos
sarb
mov
inc
inc
mov
ret
adc
dec
adc
dec
xor
data16
mov
ficoms
mov
dec
push
cwtl
inc
or
sub
dec
in
mov
push
mov
cwtl
and
dec
xor
sub
sahf
in
inc
push
scas
loopne
or
shlb
add
in
mov
push
push
pop
ret
aad
sub
or
inc
sbb
pusha
sub
pop
outsl
ret
out
add
mov
mov
inc
push
and
dec
stos
rolb
rorb
jmp
add
int
adcl
sahf
insl
mov
call
ljmp
mov
or
subb
dec
imul
xchg
outsl
sahf
sbb
mov
aaa
jo
pop
jb
in
push
into
inc
scas
inc
inc
mov
push
add
jae
loopne
das
xchg
adcl
imul
in
add
ret
mov
sub
into
ja
xchg
adc
andl
shrb
sub
or
xor
dec
cwtl
andl
sub
dec
pop
pop
xor
adc
sbbl
stos
pop
filds
in
inc
dec
push
into
cmp
addl
test
ret
add
iret
lcall
mov
pop
push
sbb
add
or
mov
and
mov
inc
pushf
xor
sbb
mov
and
call
es
jo
fists
or
mov
cltd
push
or
adc
sahf
or
mov
andl
imul
xchg
inc
add
test
add
jbe
dec
inc
mov
adc
aad
inc
iret
adc
movsb
xchg
push
mov
lcall
jmp
and
pop
and
cmpsb
out
out
fwait
jno
xor
mov
ret
add
push
lea
cmp
rorb
ret
mov
test
loop
subb
mov
push
int
loopne
mov
cmpsb
ret
xchg
sbbb
cmpsb
subb
cmpsl
push
push
add
push
popa
sub
or
xor
dec
push
scas
and
nop
pop
jmp
cmp
stos
adc
call
pop
push
test
cmp
test
jmp
jl
out
mov
out
insl
mov
add
cmpb
dec
sahf
jnp
cmp
and
xchg
stos
or
mov
add
outsl
jbe
push
cwtl
or
or
jg
push
rcr
add
cmp
fidivs
or
enter
stos
icebp
and
aas
and
cmp
call
xor
sub
mov
mov
mov
mov
dec
jno
fists
adc
xchg
xor
jp
adcl
jecxz
sbb
shrb
and
outsl
dec
pop
sbb
sbb
inc
mov
add
clc
movsl
popf
lds
popa
test
cwtl
mov
addl
mov
inc
xor
xor
add
inc
lods
cltd
or
stos
pop
in
cvtps2pd
test
scas
add
andl
and
and
mov
xchg
movsl
jb
int
jno
cmp
stos
inc
sbb
push
push
xchg
and
rcrl
xchg
fildl
or
dec
xor
mov
dec
xor
lds
dec
aad
xchg
rol
in
mov
jns
sbb
and
inc
cmp
mov
es
push
adc
or
and
mov
jb
hlt
test
in
roll
adc
repnz
pop
cmp
cmp
or
in
inc
jb
test
push
aam
or
rorb
jae
mov
jmp
sbb
xor
inc
mov
into
sub
push
cwtl
and
or
roll
mov
aaa
call
mov
ljmp
out
stc
lds
sbb
add
mov
or
jns
outsb
sub
movsl
bound
pop
dec
inc
aam
aam
dec
cmp
add
add
mov
in
jae
pusha
inc
adc
stos
xor
xor
jge
dec
mov
das
lock
sbb
ret
movsb
cmp
xchg
loopne
push
add
push
js
and
or
rclb
sub
mov
jge
int
sub
or
or
mov
push
sub
in
fnstsw
loope
adc
inc
lcall
cmp
ret
mov
sbb
push
lret
and
xor
add
pop
xlat
js
adcb
xchg
es
push
adc
lahf
sbb
adc
sub
add
cmpsl
enter
jbe
jb
add
out
shl
sbb
mov
sbbl
shlb
andl
xorl
scas
loopne
pop
ss
jo
jbe
cltd
and
push
cmpsb
jne
add
sub
inc
add
and
adc
test
or
ret
sarb
or
sahf
cs
sub
sub
addb
or
mov
push
dec
mov
xor
enter
pop
mov
inc
loopne
ret
sub
xchg
push
dec
or
jp
stos
call
jne
hlt
pop
and
mov
fcomp
test
adc
cld
lahf
inc
inc
mov
push
mov
mov
add
mov
xor
arpl
push
cmp
pop
dec
icebp
test
sub
in
leave
jle
add
push
call
in
int
mov
sbb
decl
cld
rolb
pop
mov
mov
aaa
imul
fistpll
add
mov
add
add
es
mov
std
into
mov
or
add
mov
push
cmp
outsl
into
std
or
cmc
psraw
aas
sbb
mov
add
cmp
jge
idiv
lret
cmp
lret
std
out
pusha
sbb
inc
sub
pop
xchg
and
fwait
nop
out
imul
in
clc
out
pusha
or
jge
rdmsr
sbb
adc
pushf
leave
movb
mov
imul
es
fdivl
testb
in
mov
push
in
dec
mov
outsl
out
mov
mov
cmp
lods
jmp
mull
inc
pushl
mov
sahf
jl
loope
mov
fistpll
inc
mov
dec
lahf
shll
or
jg
jo
repnz
or
pop
jecxz
or
arpl
cmp
cmp
sub
push
add
arpl
jg
or
inc
mov
ds
je
cmp
xor
push
idivl
jo
sub
sbb
sbb
pushf
repz
daa
fucomi
fistpll
add
pop
int
lahf
xchg
push
xchg
fwait
stc
push
je
loopne
fwait
add
cmpsb
call
in
xchg
std
mov
push
test
stos
mov
or
les
lods
adcl
mov
inc
sub
ja
mov
sub
jecxz
fimull
out
aas
mul
cmpb
sbb
or
add
sti
into
std
scas
push
adc
aas
cmp
mull
pusha
mov
or
pop
fisttps
pop
aaa
mov
add
or
inc
loope
xchg
mov
jg
cmpsb
fucomp
jmp
mov
hlt
jb
fnstenv
mov
shlb
outsl
iret
std
sbb
adc
jecxz
sar
call
xorl
sbb
pop
jl
inc
xchg
icebp
idivl
add
rcrl
xchg
dec
push
in
mov
cmpsl
pop
dec
aad
cmc
stos
or
fdivrl
out
mov
xchg
pop
dec
or
adc
lds
cld
out
scas
xchg
jg
sbb
fistpll
cmp
xor
jns
je
out
inc
pushl
or
xor
inc
jo
jmp
fdivrp
aas
mov
popa
sub
pop
xchg
mov
xor
jae
int
or
bound
and
fsubs
stos
xchg
sbb
pop
je
std
sti
mov
ffreep
mov
mov
inc
xchg
or
scas
jg
dec
mov
and
mov
xor
pusha
xchg
stc
pop
xor
aas
xor
cld
aaa
negl
mov
clc
xlat
js
add
stc
sub
int3
mov
shll
cmp
add
js
call
test
pop
js
push
mov
hlt
out
push
filds
repz
lea
xchg
call
jmp
aad
xchg
insl
sub
rol
stc
xchg
inc
pop
jno
lcall
ja
jbe
push
jl
or
fnstsw
popa
inc
movsl
rol
mov
popa
dec
je
divb
das
dec
xchg
cld
shll
jae
andb
pop
mov
mov
ficoml
xchg
jnp
fidivrs
cmp
pop
sbb
in
les
int
xchg
mov
push
ja
shll
cmp
aaa
pop
fistpll
in
pushf
rcrb
data16
jl
mov
xchg
out
fdivr
xchg
mov
xchg
das
gs
out
lock
shl
imul
push
mov
cltd
xor
call
in
orl
mov
popl
int3
cld
push
jg
out
lea
pop
sbb
sahf
aad
sub
sbb
std
push
push
cmp
lcall
mov
aam
test
jbe
inc
lahf
xor
push
adc
and
jae
ret
out
cmp
mov
repz
icebp
mov
int
mov
hlt
pusha
or
cmp
pushl
jbe
fwait
cmpl
int3
scas
pop
stc
jae
out
mov
ja
std
cmp
jmp
mov
cld
pop
scas
incl
xlat
sub
inc
mov
xchg
mov
xchg
shl
jmp
mov
es
adc
cld
mov
sar
popf
sti
lret
test
sbb
int3
mov
mov
aaa
jno
cmp
test
dec
and
sbb
lahf
inc
daa
jns
fcomps
jg
clc
push
sub
adc
mov
je
out
fdivrl
ljmp
movl
push
sub
add
fwait
iret
aam
je
out
mov
jle
xorb
jb
add
fwait
daa
cli
pushl
sahf
icebp
xor
add
scas
std
icebp
jg
sbb
mov
sub
cwtl
cmpl
int3
cmpsl
and
sub
popa
shll
ljmp
arpl
push
push
xchg
pop
loopne
add
loope
adc
mov
fdivrl
mov
shl
pop
cmp
sti
fbld
decl
movsl
decl
or
jmp
jg
adc
mov
cmp
push
call
cmp
and
jmp
xchg
push
lahf
inc
aad
ficoms
stc
sub
pop
test
xchg
push
cmp
cmpsl
test
mov
pop
xchg
xchg
lahf
or
call
addr16
aas
mov
imul
rclb
lret
cli
call
and
dec
mov
imull
in
inc
cmp
fstps
adc
aas
ret
or
dec
outsb
loope
jo
imul
pop
jo
fisubrs
xor
dec
push
leave
lock
jno
cld
int
pop
push
add
rorb
leave
dec
jg
jge
fldenv
push
notl
int
pushf
rcrl
mov
mov
xor
sub
xor
add
adc
loopne
lret
push
dec
out
jl
std
ja
xlat
in
int
push
aas
outsl
pop
out
xchg
lcall
sub
dec
pop
mov
dec
in
stos
xchg
pop
fldl
stc
xchg
lods
adc
daa
clc
mov
mov
inc
cld
pop
loop
roll
push
test
add
movsb
js
push
test
xchg
jae
into
bound
mov
test
mov
jnp
call
sub
push
xor
pushl
or
pop
mov
sahf
call
push
fsub
or
subps
adcl
outsb
fldenv
and
mov
inc
add
ja
fdivrl
xchg
adc
addl
out
cmp
jle
lahf
pop
mov
or
mov
loope
fisubs
mov
mov
pop
sbb
pop
fbstp
mov
mov
and
jmp
add
ss
fidivrs
fcoms
imul
out
add
ret
aas
fdivrl
fdivrl
mov
or
mov
ficompl
inc
loopne
lret
pop
popf
fldcw
icebp
call
jns
dec
repz
xchg
negl
jmp
ret
std
xchg
xchg
test
out
leave
adc
nop
leave
xchg
js
jg
imul
stc
cmp
sbb
mov
loope
inc
mov
outsl
add
dec
in
enter
xor
cmpb
dec
xchg
mov
mov
xor
pop
and
fwait
shlb
cs
and
and
popf
add
and
xlat
nop
int
mov
fsubs
add
xchg
mov
sarb
dec
cli
icebp
adc
cmpsl
idivl
fmull
ret
or
cmpsl
xor
test
movsb
or
sbb
push
fstpt
ret
jge
pop
clc
cltd
sbb
push
je
push
test
filds
mov
cmp
movsl
mov
fstps
or
out
dec
mov
add
repz
and
cmp
aas
xchg
pop
xchg
push
mov
mov
xchg
adc
call
shrl
inc
inc
xlat
jae
imul
mov
repz
lret
jge
push
imul
sti
call
mov
orl
mov
lods
cs
mov
lret
ja
ret
movsl
inc
pushf
in
or
imul
test
mov
into
cmp
mov
push
push
push
enter
mov
enter
incl
push
push
into
cltd
imul
jb
jg
sub
dec
and
xchg
xchg
stc
or
lock
cmc
bound
ja
pop
imul
pop
add
shlb
loopne
xchg
mov
lods
repz
test
negl
sti
mov
jge
mov
fistps
daa
sbb
cmp
cltd
js
jg
imul
icebp
fisttpll
sbb
jne
inc
jo
ja
dec
stc
add
hlt
lret
xchg
fcoml
adc
dec
test
decl
lcall
nop
pop
gs
adc
shll
aam
xor
das
out
add
mov
mov
or
inc
mov
into
pusha
adc
insl
cmp
xlat
cmp
aas
mov
mov
cmpsl
enter
test
bswap
fstps
add
jge
cmp
loope
pop
sbb
loope
pop
xor
adc
mov
pop
dec
mov
icebp
add
dec
add
cmp
shrl
clc
aas
pusha
inc
shrl
push
mov
or
jo
call
fisubrs
out
loope
pop
pop
and
jecxz
out
lock
std
repz
mov
testl
add
jg
sti
and
test
xchg
shl
std
aaa
imul
add
pop
jbe
imulb
decl
psrad
fbstp
ss
mov
inc
insl
fmull
pushl
seto
pushf
movsb
loopne
rolb
push
and
jae
and
push
inc
rorl
decl
pop
fidivs
jae
lds
rolb
and
xchg
pop
aad
aas
push
dec
and
xchg
ja
xchg
leave
outsl
test
faddl
sti
testl
xchg
sahf
in
xorb
addr16
bound
fwait
push
sub
mov
in
cs
cmp
mov
mov
das
cmpsl
negl
mov
mov
test
std
outsb
jmp
in
jmp
popf
pop
ror
in
ret
xchg
in
in
jecxz
dec
jbe
aad
pop
mov
xchg
stos
std
sub
or
push
js
testb
lea
mov
sbb
out
std
std
or
lock
sbbb
stos
fcmovnb
mov
pop
ud0
lock
lods
push
add
jo
pop
clc
out
clc
or
ret
lret
dec
stc
dec
clc
daa
fdivr
cmp
jp
je
jns
mov
inc
jmp
jge
jb
dec
sub
fucom
incl
stos
cs
stos
dec
inc
int
jo
cmc
adc
hlt
daa
lock
addb
jns
out
push
test
add
xchg
push
ret
jno
mov
xchg
sub
xor
nop
lods
arpl
out
lret
xorl
cmp
repnz
mov
jg
mov
cmp
pop
pop
pop
sub
out
or
pop
jns
push
pushf
stos
jbe
dec
out
mov
inc
loope
and
scas
pop
inc
andb
mov
sar
mov
cmp
mov
cmpsb
jo,pn
push
in
mov
pop
jg
cli
out
imul
mov
xor
lcall
jge
sbb
jo
xchg
shlb
das
imull
ja
mov
adc
stos
inc
sbb
xchg
int3
dec
mov
xchg
jne
push
adc
jmp
clc
in
sbb
mov
daa
aam
repnz
fistps
insb
mov
bound
loopne
ret
add
cltd
pop
adc
mov
inc
xchg
sbb
or
test
pop
int
mov
sub
leave
aaa
loope
popa
push
dec
je
idiv
ret
push
pop
xchg
repnz
cmpsl
pop
aaa
popa
je
dec
jg
jg
push
pop
adc
pop
out
lahf
cwtl
push
or
or
sbb
ljmp
lock
jl
jb
mov
pop
cmp
out
std
fsub
push
add
adcl
lods
out
outsb
adc
in
cmp
cmp
icebp
test
sub
out
mov
cmp
pop
mov
push
test
push
test
into
movsl
divps
pop
shl
fdivrs
roll
add
adc
cltd
cmpsl
add
std
xchg
daa
mov
aas
push
fsubrl
adc
insl
sbb
jp
out
mov
sti
cmp
ljmp
push
leave
negb
dec
cmp
sbb
int3
inc
mov
sub
xor
and
int3
pop
test
fiaddl
js
jmp
and
sbb
add
mov
adc
xor
ret
std
cmp
dec
loop
lcall
pop
mov
outsb
push
sarb
inc
dec
enter
dec
popf
pop
adc
out
push
pop
loopne
lcall
mov
inc
inc
mov
mov
ja
out
insb
dec
lahf
mov
add
clc
subl
pop
stc
ret
add
mull
in
lock
fsubr
dec
fs
sub
lods
sahf
jge
cmc
xchg
pop
add
jbe
cld
mov
je
mov
icebp
aaa
add
mov
mov
pop
push
lcall
jne
mov
fs
lcall
add
mov
in
jno
mov
mov
stos
incl
dec
outsb
jo
aam
cmp
into
std
idiv
ret
mov
ret
rorb
test
cmc
cli
cmp
jb
jno
push
hlt
dec
mov
inc
clc
scas
add
lods
push
cmpsl
dec
pop
push
inc
cmp
aas
sbb
mov
js
pop
cmpsl
add
and
pop
sti
jg
add
sbb
in
cwtl
fidivl
repz
daa
push
lock
and
jecxz
sbb
ja
mov
cmp
pop
pop
sbb
sub
and
mov
dec
cmc
cmp
cmp
xchg
aas
dec
jns
gs
cmc
push
pop
mov
movsl
jnp
jp
jb
test
pop
cmp
jl
sbb
in
pop
sahf
cmp
inc
scas
call
in
jle
popa
pop
and
bound
push
push
fstpl
sub
out
mov
imul
lock
les
jl
out
std
sbb
jne
adc
divl
addl
mov
das
aas
mov
jno
pop
add
or
mov
int
mov
ljmp
icebp
sbb
fdivs
xor
or
lret
lret
mov
inc
push
sub
mov
dec
inc
das
push
call
mov
ret
lret
sbb
pop
ljmp
mov
pop
mov
je
inc
adc
pop
orb
loope
cwtl
aad
imul
std
inc
mov
lods
mov
idivl
std
cmp
sbb
sub
lcall
psraw
and
scas
jnp
cwtl
add
int3
jne
addr16
pop
scas
sbb
pop
adc
sahf
or
and
mov
or
jmp
std
jle
jmp
sti
jg
test
mov
jne
push
ja
int
xchg
ljmp
mov
insl
stos
or
std
idiv
cmp
pop
out
fimull
jp
jl
push
ret
sbb
adc
cmpsb
in
jp
fs
addr16
sub
in
cmp
push
jmp
cmp
testb
lret
cmpsl
jmp
std
cmp
inc
pop
pop
stos
or
or
cmp
incl
xchg
push
jae
xor
jp
lahf
std
popa
leave
fistps
clc
adc
xor
cli
pop
repnz
test
inc
test
aas
xorb
sbb
mov
idiv
mov
fistpl
and
ret
fists
adc
stos
gs
xchg
jp
call
add
xchg
pop
mov
push
push
popa
add
clc
xor
mov
jno
call
in
adc
xchg
or
mov
clc
sub
incb
ret
mov
push
int3
dec
jmp
sar
pop
fcmovnbe
and
into
repnz
cwtl
lea
out
and
lahf
inc
ffreep
jnp
in
sub
hlt
arpl
xchg
in
xchg
shr
lods
int
sub
jge
shll
js
inc
xchg
xchg
sbb
in
clc
mov
aad
pusha
stos
jg
call
or
insb
cmpsb
ja
leave
out
dec
fistpll
dec
out
test
lea
push
loopne
push
jmp
xor
adc
cli
mov
mov
fistpll
lock
xchg
ja
jp
jmp
sbb
adc
out
aaa
xlat
dec
sub
xorl
loopne
int3
das
adc
movsl
sbb
xchg
sahf
cs
sub
dec
lds
jmp
les
xchg
dec
sahf
add
mov
scas
subl
add
cltd
jmp
sti
fcos
lahf
out
inc
adc
dec
ljmp
push
pop
sahf
sbb
decb
es
bnd
stc
or
xchg
call
mov
pushl
mov
imul
mov
test
xchg
scas
fstpl
jmp
cli
mov
add
fmulp
sbb
les
xchg
mov
pop
rcrb
call
mov
movsl
add
mov
pop
outsb
push
xchg
adc
sub
dec
mov
loopne
cmpsl
mov
insl
aaa
nop
icebp
xchg
jnp
fisttpll
rorb
sub
cltd
cmp
imul
lcall
jnp
cmc
dec
sbb
pop
cli
pop
pop
lcall
push
mov
push
sub
dec
jge
push
ss
cld
adc
call
pop
push
add
arpl
notl
cmp
or
data16
fildl
fwait
icebp
in
sbb
sbb
push
fucomip
out
or
rorl
pop
and
aaa
insb
adc
jns
shll
pop
inc
in
push
cmpsb
dec
or
loopne
pop
incl
repz
aad
stos
add
bound
cli
xor
or
xchg
sub
cld
lret
loopne
mov
mov
jo
jecxz
iret
sbb
adc
das
les
pop
add
mov
lea
lahf
add
into
shll
scas
dec
dec
lds
jg
xor
imul
adc
je
adc
inc
aas
inc
out
lcall
mov
sti
dec
popa
sbb
pop
in
shl
clc
fcoml
mov
frstor
lods
lock
loop
sub
fldt
inc
adc
in
in
dec
cli
xor
push
insb
leave
mov
scas
out
imul
jle
or
xchg
stc
sbb
jl
mov
fnstsw
and
out
fidivs
mov
loope
clc
lea
adc
pop
aam
pop
fcmovnu
pop
jae
cmc
pop
add
js
xor
xchg
mov
jo
cmp
push
adc
mov
inc
in
mov
mov
orl
leave
pop
jb
aas
adc
or
push
hlt
mov
fbld
sar
jl
push
ljmp
sahf
shrl
adc
sbb
jl
fdivl
cmp
insl
or
lds
clc
adc
nop
pushl
cs
test
enter
std
arpl
and
fwait
es
xchg
adc
in
fnstsw
add
fdivrs
stos
or
mov
shlb
cmp
test
inc
xor
dec
pop
leave
xchg
xchg
std
mov
in
ret
mov
cmpsb
or
nop
pop
popf
mov
inc
fmul
push
shll
stc
ret
cmp
xorb
in
jl
jle
inc
arpl
or
ja
inc
push
add
mov
int3
jmp
call
mov
adc
cmp
pop
fisubs
scas
hlt
fwait
push
enter
fsub
add
inc
inc
hlt
test
and
pushl
cmp
int
xor
pop
mov
dec
inc
mov
movsl
jmp
lcall
fdivrp
insl
add
push
jb
sbb
xchg
mov
xchg
adc
repnz
gs
out
cmpsl
mov
mov
fs
imul
add
loop
das
cli
lahf
xor
push
xchg
jle
dec
mov
cltd
mov
jg
jg
mov
int
mov
sub
aaa
bound
lahf
clc
push
mov
loop
dec
or
outsb
cmpsl
ret
rolb
div
cmpsb
mov
and
xchg
mov
imul
ljmp
lret
fistpll
mov
popf
jp
pop
mov
pop
sbb
std
xchg
stos
and
mov
pusha
adc
jne
pop
xor
outsl
adc
fdivrl
adc
aas
fcoms
inc
adc
ljmp
fldl
insb
push
xor
das
add
pop
push
mov
sti
jecxz
push
pop
hlt
xchg
out
add
popa
inc
addl
out
imul
std
and
jo
ja
ljmp
cmp
cmpsl
mov
and
stc
ret
jno
rorb
std
out
into
loopne
jns
mov
and
cmp
jae
push
xchg
cwtl
das
inc
adc
sbb
cld
adc
mov
mov
sub
cli
jmp
scas
cmpsl
push
cmpsl
fstpl
or
xor
cmpl
jae
int3
mov
fisttps
shll
sub
outsl
xor
sub
insb
inc
into
adc
xchg
aas
pushl
in
pop
repz
sub
push
push
outsl
je
lret
fadd
pop
js
or
clc
shlb
push
inc
jno
pop
in
je
pop
subl
add
jle
test
push
push
mov
negl
out
aas
pushf
je
shlb
rcl
add
adc
xchg
xor
dec
xor
inc
ljmp
dec
add
repz
sahf
push
ret
pop
jmp
aas
sti
clc
popf
out
or
test
pop
add
inc
mov
dec
push
pop
aad
adc
decl
xchg
sub
xlat
mov
aad
xchg
push
push
mov
jne
lret
push
icebp
pop
xor
jle
dec
jge
cmp
negl
out
lea
dec
jne
femms
je
faddl
jge
rcr
dec
fistpl
sti
hlt
sub
cmp
shrb
sbb
andb
push
aad
cmp
sarl
xchg
sbb
pop
jb
pop
mov
data16
jg
mov
cltd
movsb
iret
adc
and
add
data16
push
sbb
fistpll
adc
cmp
push
out
pop
fdivrp
cmp
cmp
mov
fisttpll
filds
loope
pop
stos
lods
jnp
sbb
xor
jge
jae
sub
in
xchg
ds
mov
imul
mov
inc
dec
bound
lahf
cmp
aas
ret
out
rcll
ljmp
mov
cmc
cmp
jae
ret
cwtl
jmp
cmp
cmpsl
cwtl
pop
fidivl
sub
mov
push
rcr
pop
adc
xchg
mov
xchg
sub
in
pop
mov
add
mov
stc
out
not
mov
sahf
dec
scas
pushl
lcall
push
pop
cmp
adc
sti
mov
jnp
cmp
sbb
fcomip
add
daa
cmp
push
loop
rclb
sub
push
les
icebp
push
cwtl
sub
test
adc
xchg
imul
mov
movsb
in
push
mov
xbegin
popf
cmp
in
fstpt
sti
inc
dec
mov
inc
pop
add
std
pop
dec
popa
mov
sti
lock
sti
adc
test
out
aas
jg
lock
aas
and
jg
jp
data16
repnz
jb
stc
dec
imul
clc
clc
call
inc
iret
repnz
in
aas
pushf
sbb
les
jno
jne
popf
sar
arpl
mov
ljmp
push
imul
xor
mov
xor
xor
push
mov
sbb
cmpsb
xchg
js
nop
mov
call
jns
sbb
jmp
xor
aaa
lea
inc
add
jp
lock
mov
call
pop
jg
push
fwait
dec
fildl
pushf
xchg
xor
inc
xchg
ljmp
movsb
sbb
mov
jns
jmp
push
add
dec
ljmp
xor
mov
jl
mov
test
out
xchg
subb
popa
mov
aaa
push
sub
cld
in
xchg
sub
shll
push
js
mov
lea
int
inc
int3
ds
cld
pop
jl
jno
outsb
xchg
adc
adc
xlat
push
test
or
and
sti
xchg
sbb
out
sahf
lret
dec
es
inc
cwtl
adc
iret
fidivrs
aad
cmp
leave
das
incw
adc
mov
mov
push
pop
decl
mov
dec
push
outsb
jge
fcmovu
sub
lahf
fisubrs
test
mov
icebp
test
dec
outsb
mov
dec
fcoms
ret
loop
lock
subl
testb
dec
ljmp
jp
jae
mov
std
sbb
jo
int
adc
hlt
ds
cld
cs
cli
xor
fnstenv
jns
add
leave
xor
and
inc
sbb
jns
jmp
incl
ja
or
fisttpll
or
aas
sbb
pop
cmp
fs
push
sbb
out
lahf
lock
lock
call
loope
movl
dec
push
ficoms
out
ret
or
ds
fidivrs
adc
pop
jl
jmp
scas
decb
adc
cmpl
adc
jg
je
xchg
fs
cmp
mov
aaa
sub
pop
lret
and
jo
jmp
fsub
aas
loopne
sbb
cld
and
adc
pusha
add
add
jno
xchg
shll
and
jg
pusha
pusha
rorb
push
and
cmp
add
pop
aas
fdivr
add
jns
pop
inc
dec
dec
jge
mov
adc
lahf
stos
nop
cmp
pop
stc
outsb
lds
cli
scas
pop
repnz
dec
stos
insb
mov
fildl
inc
pop
repnz
or
lahf
std
idiv
push
or
popa
fiadds
and
in
sahf
fadds
xchg
out
cmc
fucom
mov
ret
repnz
aam
dec
cmpsl
out
cltd
leave
xchg
dec
or
xchg
test
idiv
pop
enter
cmp
sub
cld
mov
pop
sub
aas
fdivrp
dec
out
fidivs
jnp
push
inc
shl
fsts
lods
dec
xchg
out
hlt
and
repz
outsb
mov
in
imul
and
lcall
xlat
pop
and
sbb
mov
test
out
std
addr16
cmp
cli
fistpl
pop
test
dec
test
movsl
xor
pop
push
xchg
stc
clc
jbe
xchg
vminps
dec
stos
pop
jmp
mov
sub
shll
mov
frstor
aas
incl
popf
cs
out
imul
sbb
and
dec
or
insb
cmpsl
add
jno
aas
add
scas
add
shr
pop
mov
out
push
decl
enter
seta
jo
jl
out
pop
mov
sbb
mov
sbb
adc
pop
sub
sub
xor
inc
xor
adc
call
outsl
sbb
mov
mov
inc
jecxz
dec
rcrl
mov
ss
mov
stos
addl
pop
cld
inc
ret
mov
jecxz
xor
sub
lea
xchg
or
inc
in
cs
mov
mov
and
mov
pop
dec
jg
pop
shl
xor
mov
outsl
ljmp
out
leave
or
mov
mov
xchg
lahf
scas
push
cli
xchg
sbb
test
mov
add
std
or
pop
pop
and
jge
lock
sti
cmpsl
mov
rcll
movsl
and
out
rorl
arpl
mov
inc
mov
clc
into
std
xlat
not
loope
pushf
out
in
cltd
cli
cmpsl
xchg
push
push
sub
adc
dec
mov
aas
mov
sti
add
mov
jmp
mov
stos
inc
arpl
sbb
fildll
or
mov
jmp
push
fcmovnb
pop
mov
mov
pop
inc
xor
xor
mov
mov
sbb
rcrb
add
popa
xchg
inc
push
cli
jnp
lret
jp
pop
jp
jl
mov
test
cmp
loopne
mov
push
leave
sarb
and
outsl
jne
jle
loope
sbb
and
decl
hlt
stos
stos
icebp
inc
add
inc
push
lods
cltd
dec
out
mov
fwait
mov
sub
mov
dec
out
jmp
and
mov
pop
push
hlt
inc
pop
in
add
mov
jnp
inc
or
sahf
sarb
nop
scas
fdivp
pop
test
mov
es
xlat
stc
jle
jl
mov
cmc
jmp
pop
or
add
push
and
clc
call
jno
and
mov
dec
mov
sbb
iret
xor
fucomip
cltd
movsl
clc
arpl
enter
mov
jg
and
stos
push
jmp
ret
vpmaxub
enter
add
push
jbe
loope
nop
scas
push
push
dec
xchg
sbb
jg
outsb
popf
push
mov
sbb
cmpsl
inc
stos
incl
int
cltd
jno
xchg
pop
fwait
push
or
fists
clc
cmpsb
pop
das
cmp
daa
stc
dec
lret
or
das
push
push
leave
enter
aas
fs
lods
std
xor
ds
lods
dec
sub
in
in
sub
icebp
dec
lock
xchg
sub
mov
jne
movsl
fbld
call
dec
test
or
dec
icebp
shl
popl
sub
movb
cs
mov
test
sbb
test
decb
cld
add
bound
cmp
sbb
push
cmp
and
aas
xchg
icebp
xchg
cmp
push
mov
cmp
cli
jmp
je
cmpl
and
jbe
lods
lea
sarb
mov
or
cltd
cmp
fimull
cmpsl
xchg
decb
mov
mov
loope
clc
add
add
xor
dec
xchg
xlat
jnp
pusha
xchg
xchg
stc
scas
xchg
inc
xor
je
cs
xchg
jmp
les
ror
pop
lahf
xlat
clc
mov
in
pop
adc
pop
aas
lds
popf
mov
sbb
push
adc
aas
inc
pop
push
rorl
cs
jecxz
sbb
mov
popf
out
lods
daa
call
mov
ja
shll
hlt
add
loopne
clc
xchg
rcrl
andl
lock
bound
push
mov
inc
sbb
out
adc
test
int
pop
fwait
inc
push
xchg
insb
xor
out
push
mov
pop
scas
push
shlb
mov
adc
ret
cmp
inc
push
dec
pop
or
dec
jnp
push
mov
fdivr
js
pop
or
dec
lock
fbld
test
cmp
int
adc
pushf
insl
loope
sbb
xchg
shlb
mov
lret
add
cwtl
loope
xchg
ficomps
rol
xchg
test
pushf
das
jle
inc
add
pop
aad
cmc
pop
push
orl
cmp
mov
ss
std
scas
bound
mov
mov
mov
xchg
pop
fnstcw
add
shll
jecxz
inc
es
jecxz
out
jle
dec
push
insl
shlb
call
xchg
ja
ud2
decl
mov
push
call
movl
or
adc
loop
cmp
mov
aas
js
dec
xor
or
xlat
js
mov
popa
in
pop
jl
and
imul
push
je
in
and
jl
incb
jge
movsl
add
cld
dec
adc
cmp
roll
repz
add
std
sub
push
cmpsb
cltd
add
lock
sbb
mov
push
push
mov
dec
in
test
test
rcr
loope
or
fwait
std
cmp
mov
aad
jbe
std
into
pop
hlt
mov
ss
mov
call
jle
loop
xor
add
jo
leave
pop
hlt
inc
clc
arpl
xchg
push
pshufw
outsl
lahf
clc
sbb
sahf
pop
xor
jl
xor
aam
push
jle
stc
in
icebp
out
sbb
cmp
aas
jecxz
fwait
imul
mov
lock
push
mov
xlat
jecxz
jnp
aad
and
xchg
ret
cli
push
push
mov
push
gs
dec
out
dec
mov
push
ss
add
mov
and
mov
imul
ljmp
pushl
sbbb
mov
gs
inc
test
clc
and
push
mov
push
mov
pop
cmp
mov
jle
in
and
and
icebp
flds
jnp
sub
inc
adc
jecxz
std
sahf
arpl
gs
stos
rclb
add
or
mov
push
sub
mov
incl
shrl
fsubl
movsb
jle
decl
test
pop
mov
xchg
test
sahf
ja
push
or
lret
xor
stos
out
hlt
mov
dec
push
add
xor
call
pop
lock
push
insb
ds
out
cmc
and
cmp
push
and
hlt
mov
das
jo
xchg
lea
inc
jmp
aaa
sbb
ret
inc
adc
and
pop
or
test
out
push
sub
add
pop
call
lahf
jecxz
mov
rorl
ret
xchg
and
sub
ds
adc
pop
je
mov
pushf
js
jg
jg
std
jmp
stos
and
jae
cld
mov
sahf
sub
in
mov
cltd
adc
stos
dec
or
mov
jg
aad
add
mov
mov
jmp
aad
mov
dec
aam
sbbb
jno
push
mov
hlt
lods
sbb
jns
clc
dec
lcall
adc
adc
mov
jbe
out
aad
std
add
orl
xchg
jp
push
xchg
sub
push
inc
popf
lret
cmp
xor
arpl
dec
pop
std
pop
mov
sub
pop
mov
push
lock
decb
dec
scas
or
ljmp
xlat
pop
sahf
push
jg
push
stc
jge
push
xchg
inc
loop
cmp
inc
inc
cltd
push
fcos
std
pop
add
jo
ss
and
lods
sbb
gs
jb
add
idivl
int3
mov
push
and
popf
clc
pop
jecxz
iret
fbstp
sarl
mov
stos
lods
xchg
xchg
aas
inc
jns
mov
mov
sarl
and
adc
jo
shl
stc
inc
xor
cmc
xor
aaa
stos
ret
divl
mov
xor
pop
and
daa
hlt
jg
sbb
mov
jo
or
sub
jnp
mov
in
pusha
rcl
cmp
inc
js
mov
sbb
std
add
in
cmp
loopne
mov
out
inc
imul
ds
test
sbb
and
out
bound
scas
pop
stos
inc
insb
std
sahf
jecxz
ret
call
jae
adc
popa
jno
pop
mov
jo
icebp
jae
cmpsl
push
cli
xor
popf
sbb
jmp
stc
xlat
pop
in
jle
or
fcos
mov
test
into
ss
adc
mov
sbb
loop
mull
push
mov
stos
jmp
fbstp
xchg
and
sti
pop
fcoms
les
cmpl
aas
adc
icebp
dec
inc
sub
jg
jg
fistps
xchg
ret
ror
inc
cmp
in
stos
ljmp
shrl
sbb
pop
adc
xchg
xchg
outsb
ja
lcall
or
mov
mov
dec
mov
push
leave
das
jno
out
adc
mov
cld
push
push
inc
cltd
jae
int
out
lock
lods
cld
rorb
scas
cld
sbbl
aam
cwtl
and
pop
pop
cs
cmpsl
push
fcmovne
leave
cmc
push
adc
adc
test
ficoml
sarl
clc
xchg
or
sahf
cli
xchg
fistpll
aas
pop
mov
jne
xchg
nop
and
lcall
sub
nop
mov
dec
add
stc
pop
data16
mov
xor
stc
mov
je
xor
ljmp
inc
lret
push
or
scas
lock
and
or
mov
stos
negb
jno
pop
dec
rcrb
insl
pop
xchg
xchg
sbb
ja
cmp
xchg
push
fdivl
mov
cmp
add
mov
icebp
jb
and
cld
or
xchg
sub
pop
icebp
sub
adc
add
pop
pop
or
shlb
xchg
pop
decl
pop
xor
jp
ja
or
mov
pop
neg
outsl
push
dec
ljmp
cwtl
andl
cld
test
pop
loopne
add
ret
gs
pop
decl
push
clc
add
pop
jne
jne
mov
int
cmp
dec
cld
pop
stc
fldenv
dec
filds
adc
sahf
mov
dec
out
sub
xchg
mov
out
dec
stos
out
rorl
idiv
fistpll
sbbb
mov
inc
mov
sti
lcall
popa
dec
int
dec
decl
or
lahf
dec
rclb
in
mov
xchg
les
jle
push
scas
mov
cmpsl
fxch
sahf
ret
pop
mov
add
jno
outsb
dec
dec
lds
ljmp
ljmp
or
dec
xchg
dec
ja
int
sahf
cld
out
add
fdivp
adc
lods
inc
sbb
mov
pop
push
cli
pop
stos
add
ljmp
pop
or
rcr
sti
cmp
loope
cmpsl
scas
out
fsubrl
pushf
or
incb
xor
or
sub
iret
sahf
adc
jmp
mov
aas
jmp
xor
xor
pop
outsb
imul
mov
ss
loopne
je
aam
popa
add
mulb
shrb
aas
add
mov
jmp
lods
lods
dec
push
pop
sar
and
dec
verr
daa
cmp
xchg
cmp
xor
sub
mov
sti
scas
push
loope
pusha
cwtl
fdivr
lods
outsl
enter
ja
shrl
push
lock
xor
dec
fcomps
mov
scas
jmp
dec
aad
cmc
scas
int3
pop
fbld
mov
pop
stos
push
adc
test
shl
mov
mov
push
bound
jle
sub
xor
mov
lidtl
mov
lds
sub
insb
les
in
sti
push
pop
inc
add
jge
or
dec
push
xchg
mov
jl
cmc
and
lods
sub
sahf
xlat
pushl
mov
iret
jle
fsubrs
ret
add
jnp
mov
jno
faddp
mov
mov
mov
aas
arpl
mov
mov
push
lock
dec
mov
call
pop
and
loopne
xor
mov
mov
dec
iret
fistl
sub
pavgb
adc
cmp
cwtl
jns
idiv
aas
push
fidivrs
mov
pushf
ja
adcb
insb
xchg
sub
mov
jno
cmpsl
dec
push
fidivl
inc
rcr
mov
je
nop
aas
and
out
pop
mov
mov
dec
sbb
or
xchg
out
sub
addr16
push
movsb
push
push
or
fistpll
clc
outsb
movsb
fisubrl
xchg
int3
adc
test
fistps
sub
repz
fs
clc
das
adc
lock
pop
or
aam
and
jg
and
imull
rcrb
int3
out
lret
ret
pop
stos
rorl
or
lahf
sti
xchg
xchg
pop
and
divb
pop
mov
dec
add
arpl
add
jnp
std
cmp
jnp
add
insl
add
inc
popf
arpl
sbb
mov
in
and
push
xchg
mov
scas
lds
test
je
sbb
ljmp
gs
imul
mov
ror
xchg
int
or
addr16
sahf
stos
shl
popl
pop
daa
lahf
add
add
cwtl
loop
xchg
mov
aaa
mov
cmp
fidivs
ret
mov
ret
mov
cld
ret
jmp
pusha
repz
in
and
and
push
mov
inc
mov
mov
pop
cmp
mov
cwtl
jb
add
popl
aad
mov
cli
xchg
adc
andl
inc
sub
mov
mov
xchg
int
psrad
mov
mov
imul
sbb
mov
cwtl
cmc
xor
in
sbb
aaa
aad
movsb
lahf
mov
jmp
xlat
sub
sbb
aas
call
jbe
push
mov
sub
push
ja
out
icebp
cs
add
jl
mov
inc
sbb
jmp
insb
loop
pop
scas
aas
or
mov
stc
jle
dec
aas
iret
cs
lock
loopne
std
sbb
outsb
push
sti
sbb
adc
sbb
fdivrs
neg
mov
pop
stos
push
cmp
jo
out
xor
add
out
fistpll
mov
push
dec
dec
xor
jge
loop
mov
into
enter
xchg
subl
mov
pushl
scas
leave
in
pop
mov
pop
mov
je
das
push
cmp
js
lea
das
inc
mov
arpl
loopne
cli
sbb
jne
dec
xchg
aas
inc
ss
fdivrl
cmp
testl
pop
cmp
call
cmc
mov
mov
adc
ss
add
sbb
xchg
sti
enter
jmp
inc
popa
ds
lcall
push
lea
dec
jl
inc
jmp
shrb
pop
and
pop
jp
icebp
xor
outsl
sub
mov
vmovntps
push
dec
scas
std
in
cmp
loop
pop
in
out
cmpsl
dec
sbb
dec
lcall
mov
mov
pop
lods
add
dec
popa
in
and
loopne
ljmp
data16
sti
cmp
cwtl
mov
cmp
out
fidivrs
repz
movsb
and
in
hlt
call
loope
sbb
mov
pusha
arpl
sbb
shll
jo
imul
mov
and
or
mov
aam
pop
mov
cli
into
int
lret
pop
sbb
arpl
inc
sub
jmp
xor
movsl
pop
xchg
clc
dec
mov
aas
sar
into
cmp
adc
mov
mov
icebp
minps
jmp
jge
jno
mov
loope
mov
lret
xchg
clc
insl
xor
push
or
cmpsb
and
into
cmp
sub
stc
scas
loope
inc
dec
clc
mov
cmc
mov
inc
pop
push
sub
stos
enter
js
pop
jo
ljmp
xchg
dec
inc
adc
or
popf
cmpsl
sub
fstp
fstpt
cmpsb
sub
sub
loope
mov
dec
xchg
and
xchg
into
out
out
or
add
mov
dec
cmpsl
fidivrl
aas
mov
int3
hlt
les
jmp
je
loop
sarb
cmp
sbb
out
sub
lea
mov
sub
sbb
xor
jnp
cmp
movsb
mov
mov
sbb
mov
fnstsw
mov
imull
adc
cmp
out
pushl
movsl
cs
inc
fwait
shr
lea
push
incb
stos
cmp
mov
cmp
cmp
jle
cwtl
jmp
inc
cmp
push
jge
sub
and
lds
xrstors
or
in
arpl
xor
call
iret
sarb
mov
push
ficompl
movsl
je
mov
aaa
adc
test
out
sti
ficompl
test
jp
divl
test
mov
xchg
jnp
add
icebp
ficompl
std
mov
aas
call
add
pusha
sahf
pusha
out
push
cld
ret
fdivl
ljmp
push
jae
sti
ss
ja
dec
in
lret
push
push
lcall
and
push
sbb
bound
js
mov
mov
lock
dec
dec
ss
inc
fisubl
mov
std
psubsw
xchg
js
sub
movsl
mov
out
fsubrl
mov
or
xchg
push
rcl
push
icebp
adc
std
jg
imul
ret
inc
pop
stos
mov
add
pop
insb
cmp
sysret
aam
add
pushl
loopne
mov
sbb
pop
imull
lahf
mov
out
adc
decl
inc
cmp
jne
jbe
ud0
dec
and
std
fadds
lods
in
add
jl
xor
sti
dec
icebp
mov
sbb
test
hlt
arpl
mov
test
fcompl
xor
adc
std
push
jl
dec
repz
loopne
repnz
fldl
loopne
sub
sub
sbb
jg
cmc
insl
mov
sbb
jmp
loope
mov
pop
test
lcall
loopne
and
neg
and
jnp
cmp
jb
or
sub
pop
mov
cmpsl
cmpsl
push
push
push
daa
shll
push
mov
mov
aas
jae
adc
and
and
cmpsl
mov
pop
lds
pop
or
sar
xchg
jnp
dec
push
mov
sbb
outsl
arpl
in
and
outsb
insw
shlb
push
and
adc
gs
cmc
out
aas
mov
cmp
sarb
push
dec
lcall
lock
push
dec
sbbb
mov
xchg
shr
jo
mov
icebp
shlb
int3
es
push
add
cli
jmp
notb
js
aaa
lcall
fdivrl
cmp
fldcw
fistpl
shl
push
jge
fiaddl
sti
movsb
idivb
fcompl
push
jo
jne
xchg
lret
aas
sub
jle
jmp
sub
jmp
sti
pop
cld
xor
xchg
mov
pop
lahf
or
mov
out
pop
imul
aad
sbb
lock
daa
or
sbb
sbb
mov
xor
loop
ljmp
jle
jae
sbb
sahf
inc
faddl
fbld
fcmove
hlt
mov
repz
fistpl
cmpsl
gs
mov
or
add
movsb
mov
jns
cmpsb
inc
loop
xchg
sahf
addr16
test
push
lods
sbb
pop
add
push
imul
mov
mov
dec
hlt
xor
pop
cld
xchg
inc
mov
das
mov
call
ret
sti
dec
mov
xchg
mov
sbb
add
test
mov
movl
add
mov
and
les
sbb
xchg
cs
cmpsl
and
mov
push
call
call
bound
mov
xor
jnp
out
pushl
inc
clc
shll
cld
cmc
popa
cs
jnp
pop
or
roll
sub
jge
inc
push
sbbb
nop
push
xchg
ret
pop
iret
mov
sub
add
push
ljmp
mov
std
outsb
push
sub
xchg
push
push
mov
cmpsl
ret
out
cwtl
jle
or
stc
xchg
add
hlt
dec
sar
iret
mov
fisubs
loope
pushf
pushf
imulb
adc
clc
jg
cld
icebp
pop
xor
and
cmp
std
jns
sub
inc
cli
into
nop
scas
stos
sbb
add
shl
mov
dec
mov
jecxz
rorl
sarb
pop
or
les
daa
xchg
add
and
fidivrs
daa
push
push
out
lahf
std
cmpsl
js
mov
mov
mov
cmpb
or
stc
add
lahf
les
dec
inc
inc
ret
xchg
test
push
pop
scas
decl
jge
sub
xlat
cmp
ss
hlt
imul
hlt
xchg
xchg
andl
insl
jg
push
clc
aas
mov
sahf
push
pop
sahf
jnp
sti
mov
pop
fwait
pop
loop
js
lcall
out
and
add
jg
mov
adc
pusha
ss
pop
test
jns
jne
adc
fistps
inc
icebp
loopne
sbb
or
jo
cmp
fidivrl
jmp
decl
fldt
sbb
pop
out
sbb
hlt
pop
mov
xor
in
sub
xor
adc
mov
ljmp
cmc
xlat
mov
sbb
mov
push
push
fwait
sub
out
push
pusha
push
jb
jnp
sbb
pop
int
mov
stos
clc
outsl
xor
fld1
fisttpll
pushf
les
fiadds
or
jb
adc
add
in
in
mov
cwtl
rclb
adc
jge
push
push
mov
fucomip
jle
aad
cmp
xor
ret
fsub
push
call
mov
sub
lahf
aam
icebp
shl
movsl
xchg
sbb
lret
fwait
std
das
in
and
loope
add
fildll
jge
loopne
push
repnz
pop
add
mov
sbb
xor
nop
ja
fisttps
outsl
push
aaa
std
call
fimull
dec
or
popa
sbb
pop
icebp
shrb
cmpsl
add
dec
mov
adc
add
mov
iret
add
pop
out
mov
or
push
jne
pop
rcll
jbe
adc
sbb
scas
mov
outsl
mov
mov
mov
and
out
dec
pop
add
xchg
rcll
mov
mov
adcl
int3
mov
scas
cmp
in
scas
mov
pop
popa
sahf
je
daa
cld
push
insb
lea
mull
sbb
aam
sti
ja
and
add
sbb
aaa
arpl
lock
mov
psubsb
jl
and
push
testb
icebp
test
mov
clc
sub
and
or
mov
mov
inc
push
pop
movsb
jmp
sub
mov
clc
stos
dec
cli
aas
neg
and
push
repnz
jae
xchg
adc
aas
call
ljmp
lock
sbb
pusha
mov
sbb
aas
sbb
popf
icebp
fists
test
xchg
cli
push
dec
cwtl
out
ljmp
cli
or
std
lods
outsb
add
mov
mov
scas
pop
fnstenv
or
bound
sub
sub
xlat
cmp
sub
test
fdivrp
pop
stc
mov
push
dec
fs
push
lock
or
lods
movsb
dec
fxch
dec
out
pop
and
mov
pop
out
popf
pop
cmp
xor
es
loop
pop
add
shll
sbb
mov
les
jbe
ds
push
sbb
fucomip
nop
cmp
mov
arpl
test
jle
ja
leave
ucomiss
mov
iret
sub
clc
inc
loopne
loopne
jg
mov
jb
dec
ljmp
adc
outsl
cwtl
xchg
jne
mov
mov
or
sbb
pop
pushl
decb
jb
add
sbb
out
cmp
loope
jns
sub
movsb
add
cs
fadds
jl
lea
lods
pop
stos
mov
call
inc
nop
jmp
xchg
and
sahf
call
lahf
or
insb
cmpsl
jae
filds
and
shll
aam
imul
inc
mov
jo
add
in
sub
mov
lods
cmpsb
push
imul
mov
pop
sbb
xchg
clc
mov
pop
mov
mov
add
dec
sar
ret
pop
test
xor
jge
jge
jge
mov
pop
xchg
jno
call
test
lahf
test
jbe
sti
out
lahf
leave
clc
les
jg
daa
mov
test
gs
jecxz
loope
outsb
jecxz
cmp
ret
or
mov
ds
lret
aad
out
push
mov
dec
push
inc
and
jae
jmp
imul
add
mov
sbb
mov
sbbb
lock
decb
negl
inc
shl
lds
les
in
test
sbb
push
fmul
leave
or
jb
daa
jmp
fildll
jp
xchg
xchg
and
loopne
cld
pop
js
das
leave
ja,pn
xchg
scas
dec
pop
fwait
push
fidivs
pop
jge
repz
mov
test
dec
lahf
mov
fdivr
pop
out
loopne
out
mov
xlat
dec
icebp
cltd
mov
aad
js
loop
out
lock
sub
jecxz
adc
shrb
sub
bound
mov
hlt
cs
pusha
cs
lods
je
les
mov
pop
cwtl
sub
insl
xchg
sub
dec
sbb
pop
and
xor
sbb
icebp
jmp
inc
inc
jne
jae
sub
in
mov
inc
xchg
in
jno
dec
arpl
adc
aaa
ljmp
add
add
ljmp
mov
imul
lds
and
mov
cltd
mov
pop
mov
push
jle
sub
scas
pop
xchg
mov
sarb
aam
mulb
xor
or
idivl
sub
xor
push
out
fists
test
test
xchg
decl
mov
shll
test
gs
push
jg
scas
or
sub
push
lcall
adc
cmpsb
xchg
xchg
xchg
pop
in
pop
fucomp
xor
out
add
jle
push
xor
movsl
lods
jae
dec
xchg
mov
mov
fildll
pop
cltd
sbb
popa
mov
or
or
vpmuludq
mov
push
xchg
or
insl
test
mov
push
dec
pop
int
cmpsb
pop
jmp
out
fcompl
pop
std
sarl
fcoml
or
cli
sub
xor
fwait
cmpsb
fsts
repz
mov
jns
cmp
icebp
sub
in
xor
dec
clc
mov
out
push
jg
loopne
dec
in
insb
push
adc
ret
jl
iret
std
inc
lods
dec
lret
add
sub
lock
out
adc
xor
es
jg
iret
stos
loope
jns
fistpl
jmp
out
mov
cs
decb
imul
inc
inc
orb
pushf
sbb
dec
cmc
pop
test
pop
mov
int3
pop
or
fistpll
pop
cli
sbb
inc
push
aas
test
nop
jns
pusha
out
subl
mov
adc
jge
push
pop
popa
sbb
cmp
or
sbb
dec
sbb
fdivrs
add
push
cld
shrl
pusha
push
xor
mov
loopne
imul
push
lock
fildll
out
movsb
in
push
inc
xchg
lcall
sbb
and
inc
dec
scas
addr16
jg
cli
cmp
fs
cli
jmp
adc
call
ljmp
mov
pop
jae
lret
fbld
cld
dec
call
mov
cld
pusha
add
or
sarb
push
aam
jno
or
pushf
ljmp
loope
outsl
xor
fwait
inc
push
mov
ffreep
mov
es
hlt
cs
or
xchg
inc
adc
lea
call
jb
mov
cltd
in
in
dec
adc
sti
addr16
les
js
jbe
or
leave
mov
out
ficoml
popf
or
outsb
in
repnz
mov
fbstp
or
out
in
std
push
mov
and
mov
sub
cs
jnp
cld
dec
or
sahf
in
push
cmpsl
js
das
mov
das
and
mov
sub
call
jo
inc
mov
push
nop
ja
aas
sti
mov
xor
ljmp
mov
dec
sub
cwtl
push
pop
xor
cld
mov
xor
fmull
test
lret
fnstenv
int
pop
mov
jns
jl
push
push
popf
fidivrs
loopne
clc
adc
fdivr
cmp
inc
ja
adc
movsl
mov
inc
mov
das
testb
pusha
pop
lods
imul
pop
not
adc
hlt
push
ds
daa
cli
xor
push
std
lds
or
call
jne
inc
je
ja
mov
jnp
mov
adcb
xor
mov
mov
jo
iret
jge
and
mov
aad
addr16
ss
std
jecxz
pop
cmp
imul
cmp
mov
jg
mov
shlb
addr16
push
jge
test
fadd
outsl
jo
jge
and
inc
jmp
pushl
aas
mov
imul
cmp
inc
insb
mov
loope
bound
xchg
jne
push
in
sub
jmp
or
adc
mov
incl
shl
xchg
mov
mov
call
xchg
inc
je
mov
call
push
ja
xchg
xchg
or
jbe
aad
xlat
mov
mov
fpatan
ret
cmpl
cmc
orl
decl
std
push
pop
out
pop
pop
or
out
pop
out
mov
sub
and
cmp
int3
jp
push
mov
pusha
add
ret
inc
aaa
testl
out
push
adc
cld
cmp
stos
pop
andb
pop
mov
cmc
xchg
ja
inc
xchg
stos
fcoms
lahf
sti
out
push
cwtl
jge
add
repz
xor
icebp
test
sahf
std
mov
jb
pmulhw
iret
in
dec
in
pop
stc
call
mov
push
mov
out
xor
clc
mov
dec
test
pop
push
les
das
pop
mov
mov
cmp
rol
and
sub
fldt
or
mov
loopne
cmpsl
dec
cmp
loopne
and
jne
or
leave
xchg
jnp
mov
pop
push
cmp
mov
pop
or
inc
js
mov
push
mov
push
ret
out
test
out
movsb
cmp
adc
loope
push
test
jb
into
mov
mov
cmp
add
lds
loop
pop
jns
sub
dec
mov
push
out
mov
xchg
popa
adc
std
sub
repz
test
sbb
out
xor
jp
pop
push
aad
mov
incl
push
incb
repnz
pop
xor
pop
adc
xlat
mov
mov
xchg
pop
pop
inc
out
mov
cmp
rol
xor
shlb
aam
mov
ret
stos
sti
out
hlt
shlb
add
and
pop
insb
mov
inc
jl
aad
rolb
lea
add
movsl
push
or
test
ljmp
outsl
sarb
sub
lahf
lock
xchg
push
push
cmp
shrl
push
rclb
leave
push
dec
lods
pop
mov
dec
mov
mov
incl
lcall
fcompl
inc
xlat
aas
xchg
or
aas
sub
clc
loope
inc
repnz
fcoml
adc
sahf
xor
xchg
out
cli
jg
mov
insb
xchg
cmpsb
shll
shrl
ret
inc
inc
mov
add
mov
addb
fmulp
xchg
fcmovnbe
icebp
ja
jle
pop
orps
cld
cmp
mov
lock
sub
inc
hlt
fucom
dec
ret
fldl
mov
mov
jg
jge
adcl
cmp
push
dec
in
mov
xlat
adc
hlt
mull
out
aas
add
pop
add
mov
jmp
cld
imul
popa
es
or
push
ret
mov
movsb
cmpsl
jl
jbe
xchg
push
stc
sub
lea
fdivp
sub
test
mov
mov
aad
add
not
xor
inc
cld
mov
out
mov
adc
adc
loopne
push
xchg
lds
das
dec
cmc
pop
mov
sti
fcoms
jg
push
sar
mull
ljmp
inc
jp
aas
mov
fildll
push
imul
jmp
adc
and
andl
scas
clc
sbb
lods
fs
addl
lods
xchg
stos
pop
pop
in
icebp
fldl
mull
movsb
std
out
arpl
dec
mov
rcll
inc
scas
or
addr16
fistpll
xor
sbb
clc
or
fbstp
loopne
arpl
or
test
sahf
daa
popa
dec
jge
bound
ret
mov
test
loope
iret
push
dec
jbe
jne
insl
ja
sbb
lcall
out
cmp
les
add
cli
sub
das
cmc
sub
int
inc
mov
scas
int
fildl
mov
jg
inc
or
ja
cmp
inc
mov
lahf
clc
js
sbb
iret
mov
mov
jg
and
and
xor
sarl
add
imul
fsubr
jnp
mov
xchg
xchg
and
jmp
or
lods
mov
jnp
adc
lods
into
adc
sub
mov
jecxz
mov
jge
push
and
ljmp
dec
ljmp
lock
in
lods
stos
mov
jnp
push
ds
into
or
ss
stos
add
pop
sbb
stos
sar
pop
dec
rolb
pop
mov
les
fnstsw
int
push
xorb
out
bound
cmp
inc
hlt
rcr
mov
or
idiv
negb
sbb
std
fildl
fisubrs
mov
das
ljmp
daa
mov
push
xlat
pop
jnp
lods
mov
xor
jge
sbb
pop
mov
pushf
jo
dec
pop
push
fcmovnbe
scas
mov
dec
sub
dec
mov
test
mov
pop
int3
cmp
jmp
sbb
idiv
dec
dec
js
push
cmp
insb
ja
std
inc
incl
mov
fcoms
sub
pop
pop
movsb
aam
jnp
lods
neg
loope
dec
cmp
pop
cltd
dec
maskmovq
idivl
js
mov
cs
lods
rclb
in
lcall
cmp
mov
insb
push
sbb
movb
push
mov
jno
loope
call
aam
out
add
out
imul
cld
pop
xor
xor
sub
popf
testb
fsub
fisttps
inc
popl
jmp
xor
movsb
fadds
icebp
das
adc
jecxz
outsb
adc
clc
sbb
aam
or
add
lahf
add
aas
xor
pusha
jmp
nop
js
mov
mov
push
pop
imulb
or
out
push
mov
icebp
test
je
xchg
mov
outsb
aas
idiv
sbb
mov
and
rcrb
or
test
insb
pop
std
aaa
adc
fisubs
adc
clc
pushl
cmpb
roll
jecxz
sbb
mov
adc
or
mov
mov
mov
inc
add
daa
std
shrb
sub
es
fmull
fadds
lods
jne
pop
xor
pop
outsl
or
pop
std
ja
data16
ja
loop
subl
xchg
mov
push
add
test
call
arpl
les
mov
hlt
xchg
jg
sbb
dec
js
mov
sbb
adc
jge
inc
jmp
xchg
icebp
jo
lret
inc
test
push
daa
outsb
notb
cmp
mov
sub
shl
cld
push
daa
fimuls
xchg
cmp
mov
popf
repnz
and
adc
xor
leave
ret
ljmp
or
adc
enter
pusha
pop
mov
and
das
pop
jns
daa
aam
fists
mov
jno
dec
rclb
mov
add
das
or
loopne
lock
jmp
mov
mov
faddl
pop
xchg
shlb
es
dec
pop
dec
adc
ljmp
pop
inc
ja
fiaddl
adc
xchg
shlb
in
pop
test
sbb
iret
std
dec
rclb
mov
push
xor
and
stos
leave
aas
mov
push
call
ss
mul
clc
pop
and
xchg
mov
add
and
dec
or
ds
push
sahf
jecxz
and
cmp
sahf
clc
bound
jmp
mov
shll
lret
sbb
and
in
dec
outsb
outsl
xchg
and
aas
mov
mov
mov
sub
adc
decl
call
sbb
stos
xor
or
divb
out
xchg
sbb
and
clc
mov
xchg
cmc
mov
into
sti
xchg
imull
pushl
xor
ss
mov
xchg
pop
scas
push
pop
cmpsl
sub
insl
stc
ret
movsb
dec
fisttpl
jg
sbb
sub
cmpsl
push
lcall
pop
pop
hlt
lock
repnz
movsb
dec
ds
mov
sbb
cmp
int
movsb
repnz
call
inc
dec
repnz
call
mov
mov
fmull
adc
cmp
jl
pop
fistps
xor
push
pop
xchg
push
arpl
adc
push
mov
rorb
rorl
sub
or
notb
dec
ljmp
and
dec
shlb
jecxz
clc
aas
les
fimuls
pop
xor
jg
xchg
adc
inc
or
mov
or
mov
jg
jg
jno
test
inc
fbstp
loop
sbb
ljmp
mov
dec
add
cmc
aam
mov
stc
sbb
sub
lcall
sub
pop
jb
xor
mov
dec
pop
add
clc
push
cmp
int3
mov
push
fistps
pop
dec
sub
dec
stc
cli
jbe
loope
pop
xchg
add
lds
js
orb
data16
in
mov
cs
xor
cmc
dec
mov
xchg
mov
arpl
stos
imul
xchg
mov
inc
cmpsl
mov
sbb
pop
jae
popl
jno
mov
popf
push
sub
xor
rol
mov
pop
test
sahf
mov
loope
and
sti
inc
loopne
cmpsb
test
inc
aad
push
fs
clc
mov
pop
les
scas
add
and
test
call
insb
sub
lods
ss
or
pop
mov
in
add
jne
sub
mov
jg
jecxz
loope
fdiv
fstp
sbb
mov
push
decl
sbb
lods
dec
mov
jg
out
aas
and
xchg
xor
pop
mov
fistps
incl
jae
pop
ficoml
outsb
sbb
add
add
mov
mov
push
loopne
push
dec
call
into
push
xlat
add
out
add
mov
stos
pop
jnp
or
push
int
sbb
mov
mov
or
scas
lods
inc
std
lods
arpl
lods
scas
stos
insl
pop
pop
add
jmp
xor
dec
xor
test
or
xor
ret
icebp
fucomip
cmp
jae
sub
imul
and
rcrl
sub
dec
mov
bound
add
adc
clc
xchg
test
scas
mov
movsb
mov
xchg
inc
adc
lock
ds
pop
adc
sarb
xlat
adc
adc
loopne
mov
sbb
mov
mov
adc
inc
imul
loop
mov
adc
loop
aad
mov
dec
shl
loop
fldt
pusha
mov
xchg
in
pop
leavew
lahf
push
mov
icebp
pop
das
ljmp
sub
push
mov
popf
push
loop
cmp
push
xchg
mov
xor
adc
icebp
or
orb
dec
xchg
push
clc
test
push
clc
test
pop
push
mov
jmp
out
int
xor
or
ret
addr16
or
pop
scas
xor
lds
ds
and
xchg
lock
dec
adc
adc
push
ret
test
cli
lahf
std
push
in
xchg
outsb
jnp
cmc
lds
wrmsr
call
xor
ds
movsb
xchg
clc
insl
ret
or
movsl
push
movsb
inc
xchg
repnz
sbb
pop
sub
or
xor
jl
nop
and
cli
addr16
js
mov
sti
hlt
xchg
xor
sbb
sub
push
push
leave
pop
dec
imul
ja
aas
nop
add
cmpsb
pop
js
sbb
lods
mov
stos
fwait
rorl
sub
push
loop
sub
adc
xchg
cmp
lcall
jnp
mov
mov
dec
sub
jnp
inc
sub
mov
adc
rorl
cmp
cmp
ret
loope
pop
aam
push
jo
mov
cmp
int3
dec
lods
xor
mov
pop
mov
mov
sti
out
sub
and
call
jl
bound
scas
cmp
and
cmp
jb
loop
pushf
in
adc
insl
adc
push
icebp
leave
js
cmp
loop
cmp
adc
cmp
xchg
mov
jle
mov
dec
pop
scas
and
cs
cld
sbb
sub
pop
neg
jmp
es
loop
inc
cld
mov
dec
inc
shll
push
push
lock
add
mov
shr
je
xchg
ds
nop
adc
inc
rorl
in
mov
fstps
sbb
cli
mov
push
mov
cmp
ljmp
inc
push
hlt
inc
mov
scas
xor
mov
and
cli
out
sti
sar
icebp
cli
cmp
cmpsl
adc
test
sbb
xchg
sbb
test
mov
out
cmp
pop
mov
push
jo
add
nop
push
add
cvtps2pd
push
xlat
xchg
jno
test
cmp
or
sbb
iret
cmp
aas
adc
pop
or
out
insb
cmpsb
popf
sbb
fistps
xor
inc
lret
cmpsb
dec
aas
sbb
out
test
loop
mov
inc
xchg
xchg
add
pushl
lock
mov
pop
call
in
adc
inc
cld
jo
inc
aam
scas
lods
sahf
push
inc
xor
and
or
cli
cmp
dec
fwait
xor
push
cmp
ds
shlb
pop
mov
mov
cmc
outsl
xor
decl
fimuls
push
lahf
pop
sbb
fcomp
or
push
and
stc
push
xchg
sub
out
into
mov
mov
xlat
sbb
push
mov
fs
hlt
arpl
or
fimuls
pop
dec
icebp
mov
mov
adc
clc
mov
aas
cpuid
jns
pop
lret
xchg
fists
jmp
or
jo
cmp
dec
adc
dec
cld
mov
cld
jl
push
cld
inc
adc
lahf
dec
adcl
mov
shlb
outsb
mov
arpl
incl
loop
in
cltd
xchg
stos
xchg
scas
lds
aad
cmp
or
adc
aas
cs
jns
shll
sbb
data16
xor
and
cld
jg
fldenv
ja
jae
fidivl
sbb
pushl
mov
je
xchg
or
loop
and
pushf
inc
and
test
int
loope
fdivl
pusha
add
fcoml
int3
jle
push
mov
mov
xor
mov
test
mov
sbb
pushf
cs
xor
decl
arpl
sbb
outsl
in
fildl
adc
aaa
mov
jo
dec
std
add
cmp
hlt
and
std
sub
mov
pushl
ret
into
cmp
sar
sti
push
ds
mov
sti
push
push
sub
mov
std
dec
aad
stc
pop
xor
add
aas
lds
mov
cmpsl
loope
jne
mov
addl
pop
mov
roll
push
inc
aaa
pop
adc
inc
cld
fwait
cmp
inc
push
and
pop
call
ja
and
jnp
lcall
and
mov
dec
mov
xchg
cwtl
out
mov
push
ja
incb
mov
fistl
roll
es
xchg
fwait
std
out
inc
aas
jecxz
insl
jb
adc
push
cli
pushf
mov
sti
cmp
sti
jge
pusha
dec
sbb
jbe
ss
das
inc
adc
jmp
lock
mov
pmullw
cli
push
aas
fmull
sti
aam
push
mov
jge
das
mov
scas
ret
scas
dec
pop
into
decl
bound
decl
cmp
incl
ljmp
insl
cli
data16
sbb
jnp
clc
push
jg
call
es
add
mov
js
cwtl
jg
or
jno
cli
add
jp
fimuls
out
sarb
mov
jecxz
jge
popl
sbb
sbb
and
idivl
out
stos
stc
stos
xorl
cld
lcall
fdivr
hlt
pop
in
dec
push
outsl
lock
push
data16
andl
inc
fmul
mov
notb
movsb
cmp
jle
imul
lock
pop
mov
rcrl
inc
neg
and
jge
jge
xor
outsb
or
loope
mov
subl
mov
sub
nop
pop
inc
xor
dec
mov
lods
mov
and
insb
sahf
lahf
loope
fwait
push
add
dec
mov
jle
mov
iret
or
jae
cmc
or
pop
jmp
faddl
cwtl
hlt
outsl
mov
rorb
cmp
adc
popf
outsl
or
dec
leave
or
leave
xor
jo
xor
lds
loopne
adc
sbb
mov
mov
hlt
popa
js
pop
sub
sbb
inc
sbb
or
inc
cmp
sbb
les
xchg
pop
pop
pop
mov
fs
outsl
mov
pop
stos
xchg
dec
xchg
mov
std
dec
imul
cli
jp
insl
lea
aam
lahf
sbb
mov
loopne
ficoms
loop
into
dec
jne
shl
add
xor
aam
inc
pop
mov
and
je
pop
cmp
jecxz
push
inc
jl
in
jp
mov
and
scas
xchg
sbb
xchg
call
das
push
mov
jno
fbstp
pushf
movsl
lret
sbb
jp
add
cli
add
add
jg
leave
jne
dec
jl
mov
mov
jo
test
pop
push
outsl
jnp
push
pop
loopne
xor
aas
call
inc
sbb
loopne
bound
ret
push
pop
cmp
fbstp
fidivrs
lock
sbb
lcall
xor
sti
jns
mov
mov
xorl
xchg
fld
or
test
jbe
inc
cli
iret
icebp
lods
aas
out
pop
add
xlat
and
and
or
nop
pushf
fcmovbe
sub
sbb
stc
insb
je
mov
dec
push
ret
loope
add
jmp
and
mov
rol
and
lret
adc
aas
cmpl
pusha
js
sbb
fidivrs
int3
sbb
xchg
inc
nop
out
lods
cld
xchg
mov
mov
mov
lods
or
mov
pop
and
cmp
into
jne
andb
mov
dec
outsb
cld
sbb
inc
pop
add
out
jb
jmp
cld
fcomip
adc
xchg
mov
mov
mov
shl
jg
sbb
andb
imulb
mov
out
out
cmpsl
or
sub
mov
or
sub
bnd
popf
stc
jmp
mov
aaa
add
pop
and
clc
push
stos
aad
shll
sub
fisttpll
jns
icebp
xor
imul
pusha
jne
ficomps
jmp
mov
dec
jp
incb
hlt
push
jle
shlb
sbb
call
mov
mov
movsb
mov
js
out
mov
stos
in
js
inc
sti
mov
ja
jnp
fildl
cli
mov
and
jmp
jno
sti
rorl
inc
js
psllw
push
cmc
pop
clc
jne
bound
fimuls
pxor
pop
rorb
pop
mov
pop
icebp
inc
xchg
call
cld
mov
bound
adc
scas
test
cs
idiv
add
cld
jo
inc
cwtl
fidivl
and
shll
sbb
and
int
pop
xor
das
out
jnp
aas
jae
gs
pop
push
dec
xlat
dec
dec
lock
pop
inc
pop
in
inc
or
fistpll
and
sti
cmpsb
xor
call
sar
in
mov
frstor
clc
jae
sub
and
aas
adc
ja
pop
push
cmp
mov
fsubrs
pushf
sbb
cmpsb
sbb
addr16
sarl
arpl
and
pop
int3
xchg
aas
push
lds
pop
ret
mov
out
das
leave
nop
aad
gs
stos
sub
repz
pop
inc
pop
loopne
and
jnp
or
jge
sub
pop
push
int
mov
dec
dec
or
xchg
cmp
mov
inc
sbb
jnp
or
mov
inc
inc
pop
pop
popl
inc
jmp
incl
cmp
outsb
jg
es
inc
lea
dec
cmp
pop
int3
inc
add
xchg
push
and
out
xchg
fisubs
adc
scas
sar
xor
cmp
and
int3
aam
lcall
mov
fcmovb
mov
sbb
sbb
pop
mov
xchg
das
push
jns
insb
loop
sbb
movsl
mov
lea
mov
stc
movsb
inc
mov
push
or
mov
and
js
push
cmpb
js
pop
cmp
adc
jo
dec
jmp
cmp
dec
mov
cmpsl
ljmp
aas
inc
push
aaa
jbe
xor
mov
pop
dec
push
leave
adc
out
std
pop
xor
int
test
jo
fldt
sar
dec
jno
nop
mov
or
cmc
loopne
mov
jmp
pushf
fists
sub
mov
jg
dec
out
or
inc
bound
inc
dec
leave
movsb
sbb
movlhps
sub
shll
jnp
jmp
aas
and
mov
shr
aas
mov
mov
mov
call
mov
jecxz
ret
jg
orb
jge
sub
push
std
lods
imul
fwait
lretw
out
pop
xor
inc
xchg
cmpsb
jecxz
imull
xchg
into
adc
std
int3
mov
shrl
ja
pushl
push
stos
cltd
adc
pop
sbb
xchg
pusha
cs
rclb
push
int3
fisttpl
test
mov
jg
cmp
mov
loopne
xlat
dec
and
and
int
hlt
jg
out
inc
fstpt
cmp
shrl
out
fistpll
and
cmp
or
in
jge
jge
pop
sti
dec
sbb
and
mov
and
lahf
jecxz
cmc
incl
shrd
sub
pop
gs
stos
sbb
fnstsw
das
mov
shlb
jmp
enter
jbe
arpl
data16
in
adc
fs
pop
xchg
jg
push
lea
push
xchg
jnp
fs
in
push
call
jb,pt
sbb
add
add
adc
fsubr
mov
pop
in
gs
inc
mov
pop
mov
mov
fmuls
outsl
sub
lret
dec
pop
lods
outsl
push
inc
push
std
cmpsb
sbb
je
dec
das
mov
add
sub
call
hlt
arpl
jno
rorl
cld
jno
lock
pmaxsw
jne
lds
mov
inc
bound
cmp
mov
std
lods
out
push
jg
lds
sar
out
cmp
sub
mov
sbb
call
xor
ret
mov
das
jl
sbb
mov
mov
scas
andb
loop
stc
xlat
popa
popf
xchg
mov
sbb
call
fnstcw
dec
cmpsb
dec
fnstcw
test
jnp
sarb
arpl
dec
sub
scas
mov
cwtl
stc
mov
push
push
aad
in
adc
xlat
mov
dec
notl
jge
xchg
lock
ja
pop
mov
dec
xchg
shll
mov
mov
lds
in
shrb
pushl
inc
push
scas
pop
icebp
fistl
sub
popa
jae
inc
out
and
xchg
xchg
inc
scas
cmp
pop
cltd
aas
imul
mov
push
std
cmp
xchg
dec
and
inc
sub
xchg
imul
lea
add
adc
pop
xchg
jno
and
cmp
cli
jecxz
loopne
arpl
sub
decb
add
xchg
pop
mov
mov
inc
mov
and
mov
add
inc
popf
je
fsubr
cmp
sub
cmp
test
inc
cmp
loope
jo
xchg
dec
push
cld
mov
jae
nop
jmp
idivl
inc
arpl
add
xchg
or
aas
data16
pop
mov
insl
addr16
int3
cmc
adc
and
jae
dec
hlt
xor
xor
inc
xchg
in
mov
outsl
clc
nop
cmp
add
lcall
push
jg
in
dec
cmpsl
jecxz
push
and
jo
xchg
mov
out
lock
inc
aaa
push
inc
push
adc
mov
dec
dec
xchg
mov
into
or
push
lahf
sti
aaa
xchg
repz
dec
and
jge
cli
aas
movsb
push
jo
jl
sub
inc
jg
mov
aaa
dec
cld
filds
adc
push
fsubrp
pushf
shl
push
clc
aas
jle
push
add
fbld
rclb
clc
jbe
ja
out
sti
add
aas
adc
jg
pop
shll
sbb
in
push
nop
cmp
incb
mov
dec
sub
ljmp
mov
sahf
mov
les
xchg
push
sbb
outsb
fbld
icebp
scas
aad
cmc
test
jmp
fistpll
mov
fsubr
in
ret
jg
clc
push
push
andb
dec
jp
enter
cmc
jo
dec
out
cmc
dec
mov
rorb
scas
lock
sub
loop
data16
faddl
jl
aas
ret
jo
jo
mov
lahf
int3
or
jae
push
movsl
mov
jmp
sub
xchg
push
mov
cmpsl
fisttpll
pop
adc
lods
out
pop
mov
or
cmp
mov
shrb
addr16
and
or
jg
and
in
sub
cmp
mov
xchg
jge
sub
cld
or
cld
out
xchg
pop
psubusw
mulb
jmp
mov
daa
mov
push
cmp
fists
jmp
mov
fisttps
cmp
incl
icebp
xchg
sti
xchg
movl
addr16
sub
insb
rolb
or
mov
xor
rcr
push
xor
pushf
mov
adc
lret
rorb
addr16
xor
lcall
rcrb
cmp
fldl
add
adc
add
popf
inc
ret
sti
xor
mov
push
mov
in
clc
gs
stos
add
dec
cld
iret
orb
notb
pushf
inc
cmp
aas
inc
insl
dec
ret
adc
pop
mov
jge
lock
pushf
cld
bound
inc
inc
or
push
cld
adc
sub
add
inc
std
add
gs
dec
adc
outsb
and
lahf
cs
call
enter
jbe
imul
push
dec
outsl
mov
xchg
ja
xchg
mov
sbb
xor
xchg
pop
sbb
dec
xor
aas
mov
jns
fsts
arpl
pop
inc
js
xor
cwtl
jne
pop
movb
add
cmpsl
xchg
bound
sti
xchg
imul
sbb
into
jge
push
out
cmp
popl
lcall
clc
ljmp
xchg
es
ds
mov
mov
jo
sbb
movsb
adc
jl
movsb
adc
call
fs
cli
test
mov
push
inc
mov
mov
pop
inc
cmc
cmp
add
jae
mov
lods
mov
xchg
dec
mov
xor
cld
mov
fistpl
jmp
pop
fs
push
aad
jge
push
mov
mul
inc
mov
ret
pop
mov
push
mov
jp
or
cli
out
cld
mov
popf
roll
lret
xor
mov
leave
inc
popf
jne
in
push
mov
stc
gs
outsl
js
push
es
subl
xlat
jmp
cld
dec
jl
lock
in
in
mov
sub
or
movsb
jg
mov
inc
pop
sbb
or
hlt
pop
clc
fstpt
icebp
cltd
pop
and
jp
sub
les
cmp
jns
push
mov
mov
push
fstps
and
push
jecxz
push
jne
inc
jns
jecxz
mov
pop
mov
or
mov
ljmp
xchg
outsl
cmp
push
inc
cld
arpl
ds
ret
loopne
out
add
jo
xchg
xchg
and
popa
out
leave
sarl
call
frstor
je
and
pop
inc
dec
pop
and
pushl
in
cmp
das
cwtl
push
cmp
cmpsb
data16
test
pop
dec
out
push
test
pop
push
sti
mov
xchg
dec
and
or
cld
aaa
das
pop
pop
aaa
sbb
lcall
mov
mov
xor
or
insl
popf
bound
fcmovb
cld
nop
add
aad
push
std
out
inc
cld
int3
or
int3
mov
mov
hlt
aaa
cmp
movsl
jb
stos
xor
jle
dec
add
lcall
out
int3
inc
add
imul
mov
jg
push
call
insl
cmp
pop
cld
sub
adc
inc
mov
xor
mov
pop
add
pop
inc
jg
dec
mov
int3
popl
dec
jge
mov
loop
out
or
outsl
clc
outsb
hlt
add
scas
out
out
mov
inc
shl
clc
jbe
pushl
addl
aas
push
cld
pop
push
dec
clc
jne
fcomps
rcl
push
xchg
loopne
push
pop
int3
jge
xchg
add
adc
adc
lea
std
jp
or
rol
adc
and
or
pop
fldcw
movsl
rorb
or
outsb
push
push
push
sbb
and
inc
call
loope
jae
mov
mov
jnp
cmc
lods
cli
or
cmpsl
sbb
and
mov
incb
mov
fisttpl
xor
cld
inc
cmp
jecxz,pt
sub
mov
out
adc
mov
cmpsw
mov
add
lcall
loop
arpl
icebp
push
leave
push
jb
std
je
sahf
insb
sub
repnz
mov
outsb
inc
mov
mov
sbb
and
pop
in
fdivr
movsl
and
xchg
pop
mov
mov
aad
push
lods
jnp
xchg
xlat
iret
add
shld
rorb
ljmp
out
in
cwtl
insl
pop
cmp
pop
jae
xchg
in
test
and
test
sub
arpl
jne
cmc
hlt
mov
adc
jae
scas
xchg
pop
or
rol
jg
cli
test
in
imul
cmp
push
or
pop
fsub
sbb
lea
adc
ss
icebp
das
adc
pop
outsb
hlt
icebp
sub
inc
in
dec
pop
or
inc
ja
mov
test
add
pop
sub
mov
scas
sub
pop
add
sub
mov
mov
xor
pusha
pop
leave
jbe
jle
loopne
jge
pop
or
fwait
daa
and
or
ja
pop
add
int3
jno
or
clc
pop
cmpsl
ja
stc
push
dec
dec
push
jl
fstpl
test
pop
push
xchg
sbbb
xchg
test
sti
aad
idivl
pop
test
mov
outsl
dec
mov
repz
ud0
jg
lcall
insl
cmpsl
push
js
out
adc
push
mov
sbb
je
mov
jnp
outsl
adc
push
mov
jns
jmp
divl
mov
rolb
cmp
aaa
pop
mov
ret
mov
mov
pop
repz
out
clc
lods
subl
loope
pop
addr16
aad
orl
inc
loope
test
out
hlt
lea
pop
and
add
cmp
cmp
insb
adc
idivl
or
loop
movsb
or
add
xchg
push
add
add
lret
push
ror
xchg
push
adc
dec
incl
std
and
mov
adc
xchg
sub
fdivr
pop
cmpl
test
fistl
adc
push
xchg
jl,pn
jg
pop
outsl
cs
xchg
jp
inc
push
rolb
leave
int3
insb
imul
rol
add
hlt
sub
sub
dec
sbb
fwait
repz
lods
xchg
and
das
in
mull
sub
shlb
xchg
ljmp
mov
fdivr
iret
std
adc
dec
dec
movsb
mov
mov
mov
inc
inc
xor
ja
clc
xor
je
push
push
ret
and
sbb
add
fdivrl
inc
leave
push
std
idiv
sbbl
sub
arpl
xchg
add
and
mov
xor
mov
push
enter
push
rcrl
nop
sbb
jg
push
sbb
mov
adc
clc
cwtl
pop
insl
sbb
in
mov
sti
adc
push
and
jns
aaa
mov
cld
lock
aad
sbb
ja
call
aaa
add
adc
mov
lahf
add
cld
xchg
pop
mov
jl
in
mov
cmp
push
into
add
mov
fisttpll
cld
pop
cld
cmp
push
jle
ds
mov
cmp
std
std
push
sbb
xor
mov
sbb
les
addl
test
and
mov
clc
sub
test
icebp
xchg
ljmp
lds
out
cmp
pop
cli
and
mov
cwtl
add
incl
faddl
ljmp
js,pt
pop
and
dec
add
sub
shll
jp
shrl
jle
jns
das
pop
call
sbb
je
dec
and
adc
or
fidivrs
stos
pop
xlat
call
subb
jp
popf
incl
lods
orl
sbb
and
push
stos
movsl
adc
fisubs
inc
xchg
cmpsl
incl
stos
jg
lahf
dec
pop
fwait
adc
dec
test
jg
lcall
in
daa
outsl
and
mov
mov
push
ret
in
dec
jnp
stos
ret
or
std
fiaddl
ficoml
sub
cmc
es
add
add
test
lods
cmp
dec
mov
jb
inc
aad
addl
jo
xchg
andb
xor
and
adc
and
in
inc
les
insl
bnd
adc
and
ss
mov
or
jg
add
test
stc
jo
push
andl
ret
stos
lcall
mov
or
push
xchg
xorb
popa
inc
psraw
test
orl
mov
aam
mov
pop
pop
or
push
repnz
mov
inc
add
push
jbe
adc
and
jo
xchg
and
into
cmp
sub
push
imul
aas
loope
cmp
push
dec
push
insl
shlb
rclb
add
mov
rorl
das
add
xchg
bound
ja
mov
pop
cltd
orb
out
jns
out
ret
xchg
mov
add
inc
lods
mov
movl
or
stos
or
add
sbb
int
xchg
or
push
cmp
sub
inc
push
mov
dec
js
xor
rcrl
jp
or
add
test
push
shrb
push
addl
cmp
push
pusha
jp
cmp
push
dec
mov
add
lods
cmp
inc
push
mov
jp
sub
adc
jo
push
mov
cmp
inc
lods
cmp
loope
addb
and
in
inc
jmp
cmp
cmp
jg
cmpsl
das
pop
adc
cmp
and
mov
add
push
jo
jbe
mov
in
or
bound
inc
add
sbb
clc
add
addr16
jno
push
xchg
lock
mov
notb
push
or
push
insl
xlat
into
cmp
pop
ljmp
adc
push
dec
ss
in
and
adc
lock
push
adc
or
enter
mov
and
add
mov
inc
jae
lods
xchg
das
es
sbb
push
cmp
add
dec
test
ret
hlt
mov
add
inc
in
or
or
or
test
shlb
sbb
cmc
push
sub
pop
inc
xchg
or
sbb
and
shlb
dec
cmp
and
cmp
pusha
fildl
pop
push
scas
fisubrl
fs
jb
add
push
add
sbb
lock
sbb
push
shl
mov
inc
inc
out
daa
inc
add
mov
mov
je
mov
and
stos
pop
jp
xchg
or
loope
mov
cmp
push
push
pop
fsubrs
ret
adc
inc
jmp
add
dec
adc
add
call
pop
xor
loope
mov
add
in
out
pop
pusha
push
jne
popa
jecxz
push
pop
mov
lds
adc
add
imul
cli
ljmp
cs
test
pop
imul
xchg
ja
icebp
in
xor
push
dec
cltd
and
xor
dec
ljmp
push
mov
add
push
enter
mov
or
add
xchg
push
inc
inc
shll
rep
inc
lcall
rcrb
daa
inc
push
xor
xor
inc
cmove
mov
and
mov
js
mov
pusha
sahf
repnz
stos
imul
xor
push
and
ficoml
cmpsb
incb
mov
mov
add
add
stos
loopne
inc
or
mov
cld
sbb
add
push
inc
aad
movsb
int
daa
mov
xchg
fstps
es
add
pop
cmpsb
pop
jo
sub
stc
ds
pop
adc
rolb
mov
mov
cmp
js
cmc
fdivs
xor
jge
data16
aaa
pusha
mov
mov
sbb
sbb
in
dec
mov
add
xchg
mov
dec
inc
rcl
popa
jecxz
or
sti
sub
sbb
xor
add
adc
bound
lock
arpl
push
xorl
aad
imul
adc
add
adc
adc
sbb
and
pop
push
or
pushf
rcrl
xchg
jae
loopne
push
daa
movsl
stos
dec
nop
dec
fildl
xchg
ja
repnz
sub
lcall
push
push
lss
in
jo
and
test
mov
push
pop
inc
xor
adc
and
add
inc
in
jae
adc
mov
pop
xchg
ss
add
mov
sub
loopne
or
aaa
inc
mov
lret
rol
sahf
pop
addb
xchg
ret
adc
lret
aad
dec
dec
push
xor
cmpl
cmp
xor
push
sbb
add
jp
scas
int
xor
push
test
jno
lcall
dec
outsl
and
add
sbb
jge
push
test
or
out
in
bound
ss
pop
lahf
test
xor
mov
sbb
inc
xchg
mov
mov
lret
inc
dec
dec
out
lods
inc
jae
add
mov
scas
mov
hlt
loop
decl
ja
sbb
cltd
movb
xor
or
inc
push
scas
mov
inc
push
addb
jo
pop
shlb
pushf
add
daa
sbb
aad
inc
xchg
jb
xchg
sbb
and
sbb
movsb
int
mov
jo
jne
mov
outsl
cmp
xchg
push
test
pop
mov
inc
jp
and
push
mov
imul
xor
or
xor
sub
jb
loope
inc
xor
int
sub
pop
jo
in
or
inc
int
in
push
push
jnp
outsb
cmp
cmpsl
pop
jl
repnz
inc
inc
inc
xchg
jne
addr16
out
jg,pn
jno
mov
xlat
mov
mov
imul
inc
int
xchg
sub
add
shll
mov
or
lcall
data16
leave
rclb
xchg
sub
cltd
and
push
test
and
dec
nop
jbe
adc
jecxz
push
scas
mov
mov
in
jae
out
arpl
push
pop
nop
inc
les
push
hlt
cmp
and
jmp
xchg
push
mov
jb
jnp
rcrl
pop
pushf
cmp
loopne
scas
and
adc
mov
xchg
js
push
xchg
scas
xlat
or
pop
sarl
sub
add
xchg
rcl
push
mov
testb
scas
xor
inc
or
pushf
or
in
stc
sbb
inc
adc
cltd
and
sbb
in
clc
or
ds
add
inc
dec
rclb
pop
xchg
das
xchg
jae
mov
xor
jmp
adc
jne
pop
scas
xchg
ja
cmpsb
adc
push
and
mov
adc
rcl
sti
inc
push
push
push
mov
dec
fwait
stos
arpl
repnz
divl
xor
daa
popa
in
xor
into
icebp
js
pop
das
sbbl
cwtl
or
nop
inc
lcall
scas
lock
cmp
lds
dec
sbb
in
das
sbb
add
mov
lea
inc
int
movsb
inc
sbb
push
pop
aam
adc
sbb
mov
cmp
push
pop
push
aad
adc
adc
inc
stos
movsl
leave
add
inc
orb
ss
movsl
jl
add
sub
outsb
mov
aaa
out
cmp
inc
in
dec
dec
pop
cmp
sub
adc
push
inc
and
es
int
scas
dec
pop
pusha
add
stos
sbbb
test
repnz
mov
pop
out
js
int
mov
andb
cmp
lea
xchg
xor
or
out
xchg
stos
jbe
clc
inc
jg
sbb
fisubrl
and
pop
int
jae
andb
repz
out
mov
ds
xor
jge
pop
dec
xor
mov
outsl
fwait
in
mov
ftst
inc
int
mov
push
jp
pop
imul
sbb
or
int
outsb
lea
or
xorb
push
inc
jmp
repz
inc
cmp
xchg
cli
xor
sub
mov
or
js
sub
movl
stos
push
test
jecxz
mov
push
add
and
inc
inc
andb
adc
add
int
sgdtl
mov
sbb
out
dec
inc
icebp
inc
out
lret
hlt
mov
add
mov
jb
or
loope
fdivrs
arpl
and
leave
inc
add
inc
loope
sbbb
lods
pop
into
xor
mov
cmp
add
ljmp
or
imul
loopne
add
dec
insb
ss
cmpsb
sub
adc
inc
dec
mov
sbb
pop
sarb
mov
xor
and
push
test
jne
cs
xor
dec
sbb
mov
cmp
push
jae
mov
jae
mov
bnd
repnz
push
sub
pop
mov
pop
cmp
and
mov
cmp
or
cmp
clc
ret
jne
or
xor
cli
test
lods
mov
loopne
dec
cmp
inc
mov
cltd
movsb
push
and
jp
cmp
mov
jb
or
repnz
xor
es
out
pop
sub
addb
cmp
mov
stos
or
scas
sbbb
push
adc
sbb
fidivs
popa
lret
push
shll
iret
addb
lods
mov
or
push
movl
jg
lods
es
xor
cmp
jp
add
sub
xor
es
stc
ds
adc
jae
outsb
mov
cmp
mov
jp
cmp
cmp
sbb
nop
lret
cltd
es
dec
ret
inc
sbb
fwait
dec
in
ret
call
jnp
pop
lock
loop
icebp
sub
sub
add
pop
pop
dec
pusha
clc
jg
std
cmp
sub
mov
dec
packssdw
fisttps
enter
or
xor
pop
cmp
mov
int3
test
test
fldt
or
pop
cmp
xor
faddl
cmp
sbb
lcall
xchg
cmp
iret
or
jae
adc
and
sbb
push
out
add
push
push
add
cld
dec
sub
repnz
adc
insl
adc
je
dec
xor
repnz
jno
dec
cmp
mov
loop
jo
and
mov
sub
ss
ret
inc
rcrl
or
and
push
scas
pop
movsb
ret
out
loope
and
movsb
pop
stc
cmp
into
nop
lods
bound
cmp
mov
push
xor
shrb
dec
push
call
pop
inc
xorb
aad
incl
mov
push
add
rcl
rorl
test
mov
stos
cmp
adc
add
inc
add
fs
push
pop
aaa
xchg
jnp
cltd
enter
in
lds
push
cli
jp
cltd
push
push
int
dec
rcll
or
add
xchg
jb
jnp
mov
sub
aam
addr16
inc
int
sub
cwtl
fisttpll
fldcw
xchg
aam
int3
push
cmp
rclb
in
or
add
bound
imul
xorb
jbe
mov
add
sub
leave
adc
cld
cmpsl
cmp
popa
lret
rcrb
mov
sahf
sbb
rorl
cmp
adc
ret
push
push
mov
mov
push
push
iret
cmp
out
out
stos
call
push
stos
inc
push
js
mov
push
loope
stc
add
clc
fistpll
ret
push
movsl
mov
adc
pusha
mov
mov
dec
sbb
mov
repz
dec
sbb
push
sti
sub
mov
xchg
pushf
test
push
mov
cmc
adc
sbbl
scas
and
repnz
pop
cmp
xor
xorb
pushf
add
inc
or
push
push
cmp
cmpsb
mov
push
cmp
mov
dec
int
insl
orl
adc
dec
push
or
push
cmpsb
imul
inc
sbb
xor
and
mov
adc
adc
xor
xchg
loope
lret
popa
test
jge
jge
cltd
sbb
mov
mov
xchg
or
adcb
pusha
cmpsb
pushf
pop
mull
leave
push
xor
out
pop
xor
out
jp
cmp
rolb
jo
inc
xor
xchg
add
lock
sbb
out
sahf
loopne
or
add
push
nop
sub
adc
popa
shl
jb
insl
pop
inc
add
xchg
mov
adc
add
push
xchg
cld
pop
jns
sbb
jb
and
or
cs
test
add
sub
xchg
rorl
cli
mov
mov
subl
lret
gs
jne
imul
cmpsl
enterw
scas
add
std
imul
ret
cmp
loope
jmp
add
shlb
gs
xlat
add
js
or
pop
xchg
inc
roll
outsb
sbb
push
test
xlat
mov
shl
pop
add
dec
fists
xor
ret
push
jnp
cmpsb
mov
dec
cmp
mov
lret
aam
sub
pushl
lcall
add
push
daa
jae
add
pushl
and
cs
jp
dec
add
daa
and
inc
mov
adc
test
pop
repnz
xchg
jle
scas
jo
fiaddl
scas
mov
out
jae
cltd
sbb
and
cmp
push
inc
mov
lret
and
mov
mov
add
and
mov
mov
xorb
cwtl
sbb
push
or
push
scas
adc
scas
imul
mov
dec
loop
clc
icebp
mov
inc
fiadds
std
popa
cmp
adc
pushf
or
rcrb
fld
xchg
mov
mov
cs
mov
xor
mov
and
cmp
push
fistps
out
push
push
push
sub
popf
and
xchg
js
loope
repnz
int
add
andb
inc
popa
loop
sarb
rorb
popa
jb
inc
cwtl
jb
in
pop
jp
or
xor
jmp
push
sbb
sahf
repnz
cmp
or
popf
jne
jmp
xor
js
shr
inc
cmp
or
sbb
fs
int
inc
test
aaa
fsubl
inc
jae
pop
ds
mov
mov
in
mov
int
xchg
movb
popa
jb
add
shl
xchg
addr16
dec
mov
movl
pop
inc
ds
sub
or
hlt
push
aaa
and
iret
add
scas
in
mov
gs
xlat
movsb
cmpl
inc
add
ret
gs
mov
inc
cmp
jp
stc
mov
pop
pop
inc
mov
sbb
inc
fdivr
shl
xor
fwait
cs
xor
push
in
mov
idiv
pop
insb
rorb
mov
das
dec
popa
mov
xchg
sub
lcall
mov
sbb
imull
rcl
xor
aaa
or
or
cmp
mov
push
pop
push
mov
mov
push
inc
bound
stos
push
cs
or
ds
add
sbb
arpl
xor
pop
dec
jne
mov
push
inc
push
xor
orb
aas
inc
cmp
dec
sbb
jne
push
sub
xchg
shll
cltd
xchg
test
mov
inc
sbb
popa
xor
adc
ret
ret
mov
rcll
mov
daa
and
or
in
push
fnsave
push
out
clc
inc
add
pop
sbb
jno
stos
call
outsb
sub
mov
mov
xor
inc
xor
fdivr
shlb
adcb
push
incb
xor
xor
or
cs
cmp
push
jb
setne
jb
repz
jae
es
mov
xor
imul
gs
push
or
out
jo
xchg
pop
lock
mov
add
sbb
inc
or
push
mov
dec
inc
or
pop
cmpsl
mov
mov
ret
mov
out
ss
addb
out
xchg
aad
loope
clc
or
pop
add
lret
jae
inc
xor
push
or
inc
cmp
pop
adc
mov
mov
mov
jb
adc
cmp
pop
pop
fs
mov
dec
test
xchg
loopne
cmpsb
pop
repnz
lcall
pusha
inc
lock
xor
es
pop
ds
xchg
loop
mov
or
sbb
xor
or
push
shrl
popa
cmp
inc
cmp
shlb
or
xor
or
and
std
xlat
andl
test
sub
imul
jns
mov
push
cmp
fistpl
loopne
add
mov
sub
outsl
out
and
fs
mov
loope
ljmp
xorb
mov
push
sub
xor
mov
adc
int
cmp
sbb
push
inc
cmp
sub
mov
dec
pop
test
ljmp
adc
xor
rorb
sbb
jo
lea
jl
jb
lret
mov
xor
sub
outsb
push
cmp
cltd
adc
xchg
push
insl
and
jb
movsl
mov
ret
xorb
pusha
cmp
dec
cmp
pop
addb
inc
out
xchg
lock
loope
xchg
mov
orl
xor
mov
push
xor
sub
jmp
pop
adc
jne
sub
adc
cmpsb
inc
cmp
fisttpl
add
xor
sbb
xchg
cmp
adc
pop
pop
adc
jp
push
dec
fwait
and
pop
mov
ljmp
mov
jo
mov
ja
jno
sahf
mov
push
mov
mov
scas
push
push
popa
lret
fwait
imul
add
dec
mov
xchg
sub
icebp
xor
lret
loope
mov
in
xchg
xor
pusha
std
add
out
imul
and
dec
lcall
jo
xchg
jmp
ficompl
add
in
leave
shll
adc
aas
mov
and
lods
cmp
sub
xchg
xor
sbb
mov
and
xchg
test
or
xchg
rclb
dec
das
out
es
sbb
add
xor
jo
in
add
jo
dec
sbb
scas
inc
in
shlb
jno
sub
dec
pusha
xor
mov
rcrl
lret
loope
xchg
test
add
ret
sub
jb
adc
pusha
sub
mov
push
mov
mov
inc
jae
daa
jl
sbb
inc
mov
ret
lret
xor
mov
out
jb
scas
or
sbb
out
repnz
push
jecxz
add
cmp
enter
in
jo
pop
outsb
test
aaa
loope
sub
in
insb
adc
add
stos
rcrb
es
movsb
and
les
inc
or
dec
loopne
jne
out
sbbl
push
push
cmpsb
push
loopne
insb
cmp
cmc
or
pop
jns
enter
aaa
out
push
test
fs
jae
cmc
repnz
xorb
inc
lret
mov
in
subl
in
add
not
ja
push
lock
sbbb
and
inc
je
fwait
add
mov
sbbb
add
test
mov
rcr
or
sub
adc
scas
loope
int
or
jne
sub
adc
add
lods
insb
pop
inc
jge
or
mov
ljmp
push
test
push
cltd
sub
rcl
push
ror
cmpsb
push
cmp
loopne
in
xor
cmp
jb
lea
je
addb
sbb
add
in
sbb
stos
xchg
or
sbb
sub
push
mov
push
sub
mov
lcall
movsl
sbb
xor
pop
or
jbe
push
lods
and
push
scas
or
or
xchg
loope
inc
xchg
inc
push
add
jae
mov
mov
or
mov
dec
mov
cld
hlt
cmpsl
popa
aam
mov
nop
xor
cmp
and
inc
inc
cmp
pop
out
int
add
pop
mull
lock
gs
add
sub
mov
js
jl
mov
ljmp
test
mov
mov
mov
mov
lret
push
lds
pop
inc
jae
push
xchg
jae
in
adc
mov
add
inc
xor
lret
ret
repnz
push
xor
in
ds
sub
cmp
loop
jle
bound
or
ds
or
lcall
mov
pop
pop
out
pop
into
rolb
push
jae
mov
rcll
or
int
mov
mov
je
or
jo
sbb
push
out
loope,pn
push
push
push
xchg
rcll
dec
js
or
pop
and
xchg
inc
add
repz
mov
adc
sub
mov
mov
mov
add
mov
and
push
adc
fcoms
fisttps
test
mov
xorl
leave
xlat
sbb
je
outsl
int3
cld
out
sbb
ja
or
mov
lcall
out
fadds
lds
fadd
push
test
mov
clc
fimuls
add
push
pop
or
lock
fs
into
cmpsl
pop
ret
popa
test
popf
adc
xor
or
sbb
repz
or
lcall
cmp
jg
dec
sub
jae
rcrl
loopne
cld
adc
mov
push
icebp
or
js
call
lock
outsb
adc
mov
add
stos
sub
icebp
mov
or
push
in
sub
insl
dec
push
jo
cmp
jecxz
mov
and
mov
pusha
xor
roll
xchg
pop
lahf
push
push
ret
addl
mov
jmp
add
sbb
inc
stos
sbb
stos
xor
push
popl
cmp
arpl
addr16
xor
aas
js
ret
push
pop
ja
mov
mov
jb
or
jnp
aad
pop
push
popa
push
inc
xchg
mov
push
jp
inc
cwtl
fisubrl
call
inc
cwtl
or
frstor
orl
and
mov
in
dec
push
cmp
pop
sub
pop
imul
leave
in
nopl
aas
loopne
xchg
mov
ret
mov
repnz
push
pushf
sub
or
hlt
xor
jb
repnz
adc
mov
jb
shlb
push
and
pop
ret
mov
add
or
xchg
sbb
and
dec
in
dec
cld
and
lcall
mov
je
xorl
mov
mov
add
dec
jo
enter
or
sub
mov
jmp
hlt
pop
add
andl
adcb
mov
sti
lock
sti
jecxz
jp
in
in
arpl
ljmp
pop
sub
jg
dec
xchg
rcrb
mov
fwait
cmp
dec
mov
sbb
jb
js
imul
sti
iret
xor
sub
mov
in
add
push
aad
push
arpl
test
sbb
fmull
and
rolb
adc
in
jbe
add
xchg
mov
push
sti
repnz
add
inc
adc
pop
subb
pop
add
inc
or
jns
ret
dec
jg
js
mov
mov
sub
add
or
out
fdivrl
or
inc
cmp
repz
cwtl
jp
or
stc
sbb
pusha
push
xchg
loope
or
jmp
pushf
push
mov
xchg
and
mov
movl
jmp
inc
push
pop
push
mov
cwtl
xor
mov
fcmovnb
and
scas
sbb
or
jg
inc
subl
das
sub
mov
xchg
xorl
jns,pn
add
add
ret
xor
nop
and
add
push
mov
pop
or
push
xor
push
jno
js
inc
sub
or
push
adc
pop
stc
push
inc
sub
or
call
cmp
xor
push
push
push
mov
push
sbb
in
cmp
sbb
xlat
dec
cmp
sbb
test
push
pop
push
xlat
and
aaa
ficoml
xor
cmp
ret
push
fdivrp
xchg
adc
cmpsl
fisttps
loope
shl
sub
imul
shlb
js
xor
inc
cmp
pop
inc
rol
les
xchg
xchg
sbbl
jns
and
or
push
daa
xchg
jae
shlb
cmp
mov
jl
mov
imul
adcb
scas
inc
dec
xchg
push
loopne
fcoml
stos
push
mov
int
or
fdivrp
cmpsl
daa
sub
loop
stos
mov
push
jnp
loope
jo
sub
add
adc
jmp
cs
xor
push
mov
or
jae
fidivs
loopne
clc
push
and
fldt
je
orb
outsb
and
add
jmp
jae
shlb
movsl
sub
jmp
enterw
cli
test
add
push
xchg
mov
xor
dec
popf
sbb
push
inc
sub
pop
mov
pusha
and
adc
or
push
and
imul
int
cmpsl
and
adc
add
add
add
into
cmp
mov
xchg
sub
or
sbb
bound
mov
scas
stos
je
in
push
xchg
xor
push
lods
adc
sub
out
enter
xlat
sbb
adc
and
sbb
addb
mov
dec
in
out
rolb
scas
sbb
dec
lods
xor
and
adc
inc
xor
or
dec
loopne
int3
push
dec
lea
inc
jnp
xor
adc
jo
xor
jnp
push
das
or
mov
dec
sahf
xor
daa
insl
push
push
fistl
cmc
fisttpl
xlat
jne
mov
aaa
pop
xchg
mov
push
mov
jg
mov
xor
enter
pop
stos
xchg
test
push
jmp
add
push
sbb
test
pop
mov
push
mov
imul
jbe
pop
imul
subb
dec
test
loop
ss
jb
push
jae
xchg
es
jbe
xor
add
jmp
inc
or
sub
pusha
push
iret
sub
lcall
pop
push
mov
popa
jo
sub
test
shlb
or
cli
mov
js
mov
sahf
imul
incb
out
sbb
jb
pminub
rorb
adc
push
add
sub
data16
sbb
sbb
or
test
adc
aad
inc
orl
sbb
data16
jb
or
cmp
imul
push
outsl
jno
or
stos
sub
mov
or
sbb
cmp
out
inc
push
push
inc
pop
cwtl
add
mov
push
mov
inc
xor
andl
adcb
loopne
inc
imul
mov
and
orl
repnz
cmpb
or
pop
in
and
test
hlt
mov
cmpsb
mov
ljmp
push
out
mov
shll
hlt
lret
popa
pop
lea
xor
xchg
add
daa
inc
and
sbb
leave
push
or
mov
xchg
ror
movsl
jo
dec
shlb
dec
lock
push
sbbl
push
je
push
push
push
mov
scas
clc
outsb
xchg
jl
enter
sub
dec
xchg
sbb
push
inc
jbe
ljmp
pop
cmp
pop
cmp
sbb
or
dec
sub
enter
out
mov
sub
cli
aad
nop
ret
cltd
mov
adc
nop
addl
popa
xor
enter
mov
cld
push
outsl
rcl
lods
inc
daa
sub
lods
jae
add
add
pop
cmc
test
push
addl
outsb
cmp
out
cs
mov
xchg
jp
mov
lea
cltd
adcb
imul
inc
push
rorb
inc
scas
push
cmp
sbbl
dec
repnz
cmp
cwtl
dec
dec
lahf
push
es
cmpsb
push
dec
and
cwtl
dec
dec
mov
enter
mov
sbb
and
sets
test
cmp
add
addl
loopne
lret
int
add
sbb
cwtl
mov
arpl
xor
mov
pushf
in
xor
imul
pminub
filds
or
cmc
xchg
dec
aad
or
jp
cld
xchg
adc
push
cmp
xchg
xchg
and
pop
aam
cmpsb
push
dec
stos
mov
or
sbb
fdivrl
sub
and
mov
pop
xor
and
aad
jle
daa
jo
and
add
lods
xchg
sub
pop
aaa
and
add
popa
lods
in
dec
ss
dec
sti
jg
lcall
adc
dec
adc
cmp
mov
push
pushf
xor
mov
adc
and
js
jns
enter
xchg
decb
andl
aad
adc
cmp
inc
in
sar
in
leave
cltd
outsb
sub
mov
add
or
sbbb
pop
rolb
les
dec
cmpsl
lods
ret
mov
sub
jns
enter
adc
mov
je
mov
mov
jge
aam
fs
push
push
xchg
aam
cmp
rol
loopne
js
or
sti
pop
mov
popf
mov
xor
pop
shlb
repnz
jge
sub
and
jnp
add
scas
sbb
pop
inc
hlt
stc
insb
addb
xlat
xchg
mov
fistl
es
cmp
out
enter
fisubl
xchg
les
xor
xchg
ret
xchg
stos
leave
cmp
in
loop
rclb
clc
dec
inc
in
sbb
pop
cmp
add
jno
mov
orb
add
adc
cmpsb
ret
mov
jmp
mov
adc
test
test
sbbl
fidivrs
subb
push
sub
add
sbb
sbb
loopne
or
test
adc
add
xchg
mov
push
push
shrl
and
shrl
sbb
or
out
loope
mov
repnz
lods
loope
mov
cs
stos
and
test
and
add
xchg
mov
dec
call
pop
add
pushf
test
inc
add
loop
sub
pop
ss
sub
insb
add
stos
add
icebp
sbb
jae
pop
cmp
xchg
push
push
and
or
rcll
in
xchg
add
sub
add
shll
mov
pushf
or
push
jae
sahf
jno
sub
in
add
jne
jmp
mov
pminub
and
negl
fldenv
daa
mov
dec
inc
add
add
xchg
xorl
loopew
into
in
movsb
pop
inc
int3
mov
cmpsb
clc
push
mov
pop
inc
mov
xchg
rorl
and
xor
and
jb
std
mov
cwtl
repnz
sbb
ret
inc
sbb
mov
mov
mov
mov
push
jo
in
add
pop
push
xor
xor
inc
push
mov
gs
les
roll
inc
nop
leave
push
in
loop
mov
stos
xor
pop
mov
pushf
jmp
xchg
dec
int3
or
pusha
and
cmpsb
adc
cltd
rol
jp
outsl
fs
pop
call
xchg
push
mov
leave
shrb
fmull
pushf
add
bound
pop
push
mov
sub
cmp
jb
push
popa
js
loop
jae
mov
popa
push
dec
push
int
rcrl
cltd
pop
aam
push
fdivrl
push
xor
dec
pushf
xchg
add
push
fcmovb
dec
movsl
out
fdivl
dec
clc
test
mov
jecxz
add
lock
adc
mov
test
call
call
icebp
xchg
ret
inc
xchg
mov
jo
pop
xchg
andb
inc
adc
es
rcl
jb
nop
test
mov
and
jl
sbb
or
js
dec
aad
or
push
xor
gs
dec
push
jb,pn
jmp
xchg
mov
cmpsl
xor
and
aaa
rcrb
dec
sub
jo
lret
jl
inc
cwtl
rolb
lock
adc
or
test
xchg
and
cmp
push
xchg
dec
adc
bnd
sbbl
push
jp
sbb
loopne
lock
lods
cli
adc
ljmp
inc
cmp
cmpb
je
jecxz
shlb
shll
jo
movsb
xchg
inc
push
test
test
loope
push
rolb
mov
adc
inc
sub
inc
xlat
sbb
sub
add
xchg
inc
mov
push
sbb
sub
adc
xor
pop
into
xor
rorl
loope
xor
inc
push
cmc
sub
test
cli
jns
mov
push
cmpsb
dec
mov
push
bound
inc
loopne
dec
inc
test
inc
mov
push
xchg
leave
pusha
enter
mov
add
scas
cmp
std
movl
pop
push
push
sub
mov
cmp
mov
cmp
xor
inc
xor
sub
mov
push
inc
push
nop
or
pop
push
adc
jle
mov
cmp
mov
push
iret
adc
inc
dec
stos
or
cmp
and
sti
lods
repz
mov
or
inc
add
add
ljmp
push
add
xchg
sar
jge
add
dec
add
lret
sbb
inc
add
leave
or
jb
out
lret
jo
cmp
aaa
lock
enter
js
shll
xchg
cs
jl
loop
or
fdiv
aad
jno
dec
cmp
inc
add
cmp
ret
xchg
roll
mov
sub
xor
push
add
sbb
inc
popl
orl
push
mov
imul
or
or
push
add
jb
add
pop
add
mov
mov
add
sbb
in
jmp
cmpsl
add
scas
lock
and
adc
in
out
jae
clc
enter
pop
std
adc
add
xchg
add
scas
and
push
adc
inc
pop
movd
sbb
inc
orl
jp
daa
pop
sub
xor
pop
xchg
push
dec
xchg
sbb
jle
repnz
push
das
ss
push
int3
pop
test
movsl
mov
stos
lret
and
movsb
and
xor
dec
sub
dec
mov
push
mov
in
adc
jb
and
or
loope
out
jge
mov
adc
and
pop
inc
ftst
call
dec
in
into
inc
cmp
nop
xor
dec
fwait
repnz
sbb
dec
sub
lcall
insb
test
loope
int
sub
sbb
xchg
sub
les
and
or
scas
xlat
les
mov
pushf
inc
xchg
rcll
push
pop
mov
sbb
push
test
push
sbb
fs
int
pusha
jo
insl
scas
jle
jae
test
mov
int
pop
cld
mov
inc
inc
inc
sub
push
mov
clc
enter
test
mov
and
mov
dec
popa
rcrl
rorb
push
bound
int
push
xchg
mov
pushf
and
add
mov
rorb
cs
aad
jb
movsb
ret
pop
pusha
mov
scas
stos
jo
cltd
leave
sbb
inc
push
or
or
sub
shrb
fidivrs
es
mov
inc
cli
and
push
mov
iret
sbb
stos
sub
sbb
jbe
dec
cwtl
add
or
push
jg
mov
adc
mov
int
cs
push
jge
jp
imul
mov
add
inc
pop
or
inc
cmp
mov
push
stos
out
mov
outsb
or
imull
or
cmpsb
dec
cmp
and
cmpsb
mov
pop
pusha
shlb
pop
mov
lods
xchg
adc
inc
js
inc
mov
inc
jnp
push
or
cmp
shlb
lret
push
mov
xor
cmpsb
test
sbb
les
and
stos
stos
push
pop
cwtl
jb
jecxz
dec
lcall
stos
mov
inc
mov
inc
in
push
cs
dec
push
mov
inc
out
xor
inc
inc
test
jo
and
push
lods
cmp
js
push
jp
cmp
or
std
push
lea
xchg
subl
jb
jo
out
adc
mov
pop
push
loop
xor
pop
sub
in
jo
enter
and
shlb
add
pop
sbb
or
add
push
xor
sbb
je
jmp
shll
xchg
xlat
popf
sbb
sbb
rolb
adc
adc
jo
lds
lcall
cltd
jmp
adc
pop
pop
cwtl
jo
jg
sbb
add
insl
lret
jo
ljmp
cmpsb
cmpsb
mov
add
rcl
aaa
or
jae
mov
xor
dec
scas
loopne
sbb
cmp
xchg
test
fsubrl
push
scas
mov
adc
xchg
int3
push
add
cmpsl
cmp
inc
sub
xor
clc
inc
aam
xor
mov
or
movsl
push
jecxz
aam
xchg
add
ljmp
add
dec
pusha
sub
dec
mov
into
dec
push
jno
push
cmp
push
clc
leave
aad
cltd
jge
or
test
mov
jg
mov
test
add
movsl
or
lahf
or
out
rcll
push
push
inc
cmpsb
adc
or
sbb
push
sbb
push
cmp
je
pop
push
jecxz
xchg
addl
call
adc
mov
dec
sbb
sbb
cmp
add
dec
adc
pop
loope
xchg
jge
pop
or
and
lds
pop
cwtl
scas
and
mov
aad
icebp
subb
inc
fimuls
add
pop
sub
loope
scas
jg
add
call
inc
ss
es
or
adc
lret
in
lret
sbb
dec
add
mov
pop
add
cmp
sbb
popf
push
addl
cmpsl
cld
pushf
repnz
inc
repnz
stos
xchg
leave
cmp
sahf
xor
aam
cld
adc
inc
sbb
pop
or
push
test
cmpsb
xchg
dec
mov
push
fsubs
pop
cmp
lock
fsts
pop
push
cmp
add
and
sbb
in
lcall
xor
cltd
ja
mov
test
rol
sub
andl
push
push
add
sbb
sbb
adc
test
adc
or
push
add
sbb
push
sbb
cmpsb
pop
mov
or
mov
pop
xor
popa
add
loopne
aaa
out
lea
in
pushf
ret
hlt
adc
or
fldt
or
xchg
inc
mov
xchg
imul
mov
nop
pop
cmp
jo
xlat
pop
mov
fwait
roll
sbbb
or
push
inc
push
in
push
ror
jg
or
stos
xchg
xchg
adc
mov
push
mov
and
enter
orb
sbb
pop
hlt
aad
pop
lret
scas
sbb
push
xchg
jae
push
out
scas
inc
add
shll
or
and
sbb
insb
dec
add
pushl
adc
test
mov
repz
push
and
aam
loopne
xor
jle
jb
jae
add
in
into
adc
add
push
adc
or
add
pop
loopne
mov
add
dec
inc
imul
mull
rolb
lret
xor
pop
push
pusha
enter
add
dec
arpl
or
xor
xor
pop
pop
lds
in
loopne
nop
mov
inc
xor
xchg
xor
and
lds
jae
xchg
scas
mov
fwait
repz
daa
fcomps
or
loopne
lcall
cmp
js
sbb
pop
int
or
je
sbb
mov
xchg
add
push
mov
mov
imul
pop
pop
test
and
adc
cs
sub
pop
nop
sbb
out
cmp
cs
clc
lret
adc
rolb
jp
inc
sub
in
mov
mov
pop
jne
add
adc
hlt
test
xchg
or
in
jb
call
add
sbb
adc
and
and
outsb
add
dec
mov
push
inc
fldt
fcoms
mov
mov
cmp
loope
xchg
xlat
incl
sbb
dec
je
dec
lods
sti
ss
push
dec
add
test
imul
or
loopne
add
dec
jne
cmp
jp
xor
fistpll
das
dec
lcall
outsl
xor
dec
add
mov
sbb
or
cmp
mov
push
ljmp
insb
xor
sub
stc
bound
inc
std
add
mov
sbb
adcl
out
lret
shrl
dec
push
add
xor
and
lahf
xchg
loopne
inc
mov
inc
cmp
xor
shll
xor
cmp
popa
add
fdivl
or
stos
mov
push
sbb
dec
loope
in
or
or
in
mov
repnz
or
ret
sbb
shr
adc
or
mov
insb
xor
dec
add
add
jo
inc
mov
xorl
and
stos
mov
mov
mov
push
es
cmpsb
rcrl
push
push
add
mov
jo
xor
movsl
shll
fildl
leave
push
mov
sbbb
mov
inc
add
jbe
xchg
sub
test
sub
push
dec
or
call
mov
cmp
mov
xchg
cmp
adc
jp
cmp
and
mov
cmp
inc
push
or
jb
inc
adc
push
jbe
gs
lock
xor
fidivs
sarb
mov
push
inc
pop
dec
lds
inc
jecxz
loope
cld
push
call
jae
jmp
push
dec
in
dec
push
rol
adc
cmp
or
rclb
add
inc
pop
add
arpl
mov
out
xor
inc
fwait
inc
lock
mov
push
mov
es
mov
mov
aas
fwait
xor
shlb
inc
mov
sub
push
mov
mov
xor
push
push
dec
roll
mov
sub
jo
out
adc
mov
daa
cs
add
add
inc
mov
push
sub
xchg
ret
sbb
out
repz
mov
dec
add
add
pop
xchg
jge
cmp
xor
cmp
inc
or
or
sub
sub
fiaddl
out
sbb
add
add
dec
xchg
test
nop
mov
mov
xchg
push
test
ret
inc
aas
stos
loopne
fs
mov
dec
lock
add
ret
in
inc
jae
mov
push
xchg
mov
cli
mov
push
jnp
in
in
mov
jo
pop
cmpsb
jmp
jle
jo
xor
cmp
dec
add
lret
mov
fsub
push
and
negl
scas
dec
push
ficoms
testb
shlb
adc
stos
test
sub
sbb
mov
shll
inc
push
sub
sbb
xorb
pushf
jecxz
mov
jns
addr16
popf
cli
inc
cmp
add
or
fcmovb
push
inc
int
into
cmpsb
jg
in
fdivs
clc
xchg
pop
adc
lods
mov
shrl
xlat
mov
pusha
dec
roll
add
add
xor
jle
sti
pop
add
mov
push
lds
or
and
pop
mov
inc
fisttps
push
in
mov
insb
xchg
movsb
pop
sub
loop
cmpsl
fcomps
sub
xor
inc
add
mov
adc
adc
out
subb
mov
adc
scas
pop
popa
jg
popf
pop
in
insl
in
gs
ds
sbb
xorl
cmp
adc
or
inc
or
cld
or
add
and
push
fbld
xor
cmpsl
xchg
loopne
push
popa
popf
or
xorl
mov
rcll
or
loop
xchg
lret
or
inc
rclb
xor
mov
inc
pop
inc
es
scas
jp
mov
cmp
popa
sbb
aam
cltd
cmp
ret
in
out
mov
sub
loope
cmp
lahf
mov
out
pop
jecxz
lcall
xchg
sbb
insl
int
test
inc
mov
cltd
rolb
fsubrp
and
mov
inc
popl
sbb
insl
push
xchg
ljmp
sbbb
ss
jae
les
cwtl
in
sbb
fld
adc
fsubs
mov
bound
inc
loope
or
mov
test
push
xchg
aad
test
repnz
sahf
jo
or
jns
pushf
jmp
mov
mov
inc
sub
sbb
jb
sub
nop
jmp
push
loop
stos
jnp
dec
adc
outsl
in
cmp
mov
mov
shlb
inc
push
nop
sub
cwtl
push
add
pop
mov
pop
scas
and
das
xor
shl
sbb
pop
cmp
in
push
cs
sbb
sub
jg
inc
enter
fs
stos
into
mov
sbb
push
mov
sub
xor
ja
lahf
in
inc
or
in
popa
pushf
pop
sbb
sbb
cmc
adc
or
dec
cltd
or
out
xchg
xchg
movsb
inc
cmp
inc
jno
mov
test
add
into
std
aaa
add
add
pop
lret
push
cwtl
push
lea
adc
dec
or
rorl
push
cmpsl
addb
int
jno
js
call
mov
loope
jne
rcrb
mov
push
jae
xor
push
int
dec
xor
push
xor
rcll
shl
jl
sbb
cmpsl
xorb
inc
push
jo
sub
sub
imul
xor
test
push
jnp
xchg
push
xor
pop
pop
push
repnz
stos
adc
inc
xchg
mov
xchg
mov
fcoml
sub
push
inc
mov
popa
dec
lcall
out
xchg
sbb
mov
jmp
stos
mov
or
test
imul
inc
es
jo
xor
or
ss
arpl
addr16
jns
leave
aad
sub
sub
and
xor
std
mov
cmp
inc
sbb
mov
or
js
addr16
push
pop
icebp
shl
xor
loopne
add
and
mov
int3
inc
jne
push
cs
or
adc
out
mov
call
add
jmp
andl
and
xorl
pop
cmp
adc
mov
dec
and
jb
mov
inc
sbb
dec
cltd
cs
inc
lods
sbb
mov
mov
xchg
or
dec
in
inc
gs
inc
test
shll
pusha
jo
stos
sub
rcl
test
pusha
fists
dec
push
xchg
or
xor
add
pop
out
test
push
std
cmpsl
pop
cwtl
push
sub
daa
xor
push
mov
in
xchg
cmp
push
sbb
gs
test
out
or
lret
loopne
rolb
pushf
in
push
adc
lcall
or
mov
push
ljmp
cli
pop
pusha
push
data16
negl
aam
and
lret
add
push
ljmp
jp
xchg
adc
jg
cmp
roll
xor
sbb
add
or
pusha
sub
enter
popa
inc
mov
cmp
add
inc
push
cs
cwtl
jp
cs
adc
enter
loopne
test
sub
sbb
xor
bound
push
pop
pusha
pop
push
xor
xor
scas
mov
addb
mov
xor
jecxz
sti
mov
out
jp
xchg
adc
xor
fmull
xchg
mov
mov
jp
xor
inc
insb
adc
test
mov
xchg
add
sbb
sbb
push
xchg
adc
ss
stos
pop
cmp
or
rcrl
loop
inc
mov
shlb
scas
or
shrb
adc
push
shr
xchg
inc
add
adc
mov
xor
mov
cmp
mov
das
inc
xchg
fidivl
inc
hlt
arpl
clc
adc
mov
ret
sub
inc
fmull
push
outsl
loop
nop
adc
call
adcl
shl
add
cmp
sub
outsb
mov
mov
sbb
jb
xor
enter
pop
push
mov
mov
out
pop
hlt
or
inc
lds
sti
or
mov
loope,pn
outsb
dec
xor
and
push
mov
shlb
subb
scas
xchg
lret
sbb
or
cmp
pop
mov
iret
dec
push
inc
push
inc
mov
scas
fs
adc
mov
test
das
shll
repnz
loope
dec
pop
inc
cmc
cmpsl
flds
fisubrs
inc
pop
lea
pusha
stos
sbb
pop
or
xor
cmc
es
or
notl
inc
xor
inc
mov
outsl
ret
mov
shll
mov
cmpsb
test
and
push
imul
or
cs
push
test
ret
pop
mov
lret
pop
jmp
push
or
mov
jb
out
and
arpl
xor
push
arpl
push
aaa
mov
or
cmp
das
sub
inc
sbb
dec
repnz
lcall
or
jne
push
jg
pop
inc
rcl
test
mov
push
xchg
or
mov
imul
xchg
jecxz
popa
xor
mov
data16
mov
inc
push
push
inc
lds
push
pushf
or
sub
jp
xlat
sub
stos
test
xchg
in
jp
mov
cmp
pop
test
sub
add
mov
inc
cmc
out
and
jb
dec
loopne
adc
mov
jo
inc
push
sub
loopne
pop
testl
mov
mov
aam
push
hlt
jnp
dec
adc
sbb
mov
pop
add
mov
adc
rorb
jae
adc
insb
adc
aam
push
jge
push
mov
add
mov
fsubs
inc
aam
dec
push
lcall
and
daa
add
push
xchg
add
out
testb
add
sub
mov
adc
fisttpll
bound
sarl
mov
adc
test
dec
mov
fistps
pop
inc
cwtl
push
incb
push
nop
cs
mov
int
imul
mov
and
sub
inc
adc
addr16
rcrl
or
das
call
push
jp
pop
xchg
add
jb
inc
roll
aam
sbb
mov
mov
dec
shr
mov
fstps
xor
push
mov
test
add
pushf
inc
xor
cmpsb
sti
inc
cmp
mov
fs
add
xchg
jb
roll
add
xor
push
ret
nop
testl
sbb
and
and
clc
cltd
lock
mov
push
enter
jp
jnp
add
enter
push
cmp
jmp
in
ds
pop
inc
out
or
ljmp
cltd
fisttpll
sub
cmp
cmp
shl
cmpsl
scas
xor
sub
xchg
shlb
bound
pushf
and
cmp
push
js
and
cmp
pop
xor
addr16
data16
mov
xor
enter
jb
xor
adc
sbb
mov
xor
cmp
dec
ja
cltd
lcall
fists
cmp
leave
mov
cwtl
mov
lcall
mov
clc
popf
pop
inc
lods
push
into
cltd
into
inc
mov
add
je
lret
fs
aam
shl
dec
es
push
xor
aad
mov
lea
addb
fiaddl
xchg
push
and
ret
pop
cmp
pop
push
jp
adc
rcrl
loope
gs
or
or
fists
aaa
mov
insb
dec
push
insb
xchg
pop
sti
mov
iret
mov
push
push
aad
data16
pop
int
popa
punpckhbw
test
mov
cmp
push
inc
xor
mov
fistpl
push
cmp
fistl
jo
outsl
adc
das
pop
roll
mov
ljmp
pop
or
and
dec
push
inc
jae
mov
call
pop
fiaddl
iret
testb
popa
push
cmpsb
push
sbb
loope
cld
xchg
rcll
imul
fcomi
daa
nop
xor
lcall
mov
mov
loopne
in
in
pop
sbbb
out
cmp
das
pushf
movsl
pop
sub
xor
mov
pop
sbb
loop
adc
ret
jo
aaa
addr16
je
adc
cmp
mov
adc
sbb
lcall
loope
outsb
pop
cmp
nop
adc
cmp
subl
inc
and
inc
scas
pusha
mov
sbb
push
push
mov
scas
dec
leave
jle
mov
icebp
and
sbb
jnp
mov
pop
pop
stos
add
ljmp
lcall
jo
push
inc
xor
jb
pusha
jnp
dec
hlt
add
arpl
push
cmp
and
sbb
mov
pop
out
mov
mov
ljmp
inc
scas
sbb
mov
mov
add
fcom
enter
xchg
stos
repnz
dec
stos
push
cwtl
and
mov
adc
add
or
enter
sbb
mov
orb
xor
pop
in
xor
in
sarl
popa
clc
push
add
aam
sub
movsb
mov
fwait
rcr
xchg
jp
mov
stos
inc
inc
mov
in
push
mov
mov
inc
lcall
popf
add
xchg
stos
leave
add
int
lret
aad
or
jp
or
mov
or
mov
popa
ljmp
inc
cmp
mov
aam
pop
inc
inc
jne
mov
daa
xchg
add
adc
mov
cmpsb
xor
test
mov
cmp
or
mov
daa
jae
push
xor
inc
sub
push
xlat
lods
scas
push
movsbl
lcall
pop
jae
push
pop
mov
or
xor
and
jp
xchg
aam
loope
push
mov
lds
les
fs
mov
xchg
sahf
inc
xor
inc
lea
inc
add
scas
pop
pop
jns
jmp
lock
xchg
sub
test
ror
jno
xor
pop
mov
adc
lds
nop
mov
gs
and
inc
mov
sub
hlt
in
cmp
or
mov
sub
inc
push
push
cs
push
and
add
inc
adc
mov
data16
daa
sub
arpl
push
jl
mov
mov
jno
mov
adc
or
inc
and
decb
addr16
jno
cli
sbb
sub
push
dec
insl
rcr
dec
or
xor
loop
outsl
icebp
int
adc
push
out
jno
inc
jne
pop
adc
adcl
or
daa
ret
add
cmp
fs
stc
sub
movsb
fldenv
push
jnp
pop
jns
mov
in
pop
and
sub
and
xchg
inc
loopne
xor
in
or
test
jo
pop
adc
cmp
cwtl
dec
sbb
loop
add
adc
push
jo
lahf
mov
jp
xchg
adc
mov
cmp
cmp
call
and
jo
fwait
cs
loope
negl
sbb
rcrb
add
xlat
dec
pop
fwait
scas
xchg
add
and
inc
cmp
inc
inc
movsb
add
push
mov
jb
inc
in
scas
enter
stos
sub
pop
in
pushf
addr16
andb
or
jnp
subl
sub
int
roll
test
inc
jnp
loope
sbb
adc
popf
iret
add
xor
lret
jp
push
inc
push
sahf
jp
adc
push
xchg
je
jo
pop
lret
jb
stos
adcb
xor
test
dec
push
sbb
cmp
push
push
pushf
cli
dec
add
adc
pop
push
scas
xchg
push
cltd
xor
lret
testl
dec
push
enter
xchg
or
loope
xchg
stos
push
cmp
push
movsb
jb
adc
popa
push
int3
mov
pop
sbb
sbb
cmp
sbb
iret
push
in
mov
aad
xor
lea
rcrb
mov
ret
or
in
adc
or
jg
dec
lret
stos
mov
push
into
cmpl
sarl
movsb
shl
sub
add
jne
rcr
mov
push
or
push
add
push
arpl
adcb
jae
xchg
iret
les
outsb
jmp
lods
mov
xor
shlb
cwtl
test
subl
jo
sub
clc
jb
orb
aam
in
pop
in
scas
cmp
mov
fildll
pop
or
out
in
sbb
or
mov
jb
int
icebp
scas
adc
dec
or
popa
mov
sub
push
cltd
aaa
das
mov
data16
test
daa
jmp
test
cmp
jge
mov
inc
xor
test
xor
xchg
out
out
scas
shll
pop
xor
add
push
ret
jp
add
lahf
sbb
cmp
hlt
dec
xchg
je
mov
cmp
pop
adc
sub
pusha
jo
rorl
and
insl
out
pop
gs
call
push
and
lcall
loop
mov
pop
push
rol
add
push
in
xchg
sub
adc
xchg
test
fs
lcall
add
test
mov
pop
hlt
jno
add
inc
cmp
ret
jns
les
pop
das
pop
lcall
pop
or
daa
xchg
xor
sbb
adc
sub
test
mov
fbstp
pop
jo
shrl
out
cwtl
pusha
lret
loope
xchg
fidivl
enter
push
add
out
sbb
dec
or
inc
mov
push
push
dec
sbb
mov
addr16
dec
fiadds
push
push
loop
pop
in
fildll
lods
and
sub
rcl
js
stos
int
pop
push
sub
lret
loop
add
xchg
daa
sbb
add
push
shr
jae
sub
js
sub
je
sub
pop
adc
xor
cwtl
or
je
inc
adc
jb
xchg
gs
fisttpl
sbb
pop
pop
and
add
stos
add
pop
flds
loope
push
sub
ret
and
mov
popa
cmp
sbb
inc
cwtl
dec
sbb
int
inc
into
cltd
and
ret
add
test
cmp
sbb
pop
int
stos
cmp
push
cmp
add
adc
rcrb
out
mov
int
out
dec
sarl
pop
sub
xchg
mov
mov
repnz
dec
and
mov
mov
mov
or
test
dec
inc
leave
push
or
push
sub
inc
mov
mov
pop
je
std
add
mov
out
call
push
mov
scas
cmp
loopne
mov
popa
sub
dec
push
push
pusha
lret
xor
push
leave
loopw
out
mov
pop
pop
mov
adc
xchg
loopne
adc
jle
popf
inc
popa
orb
mov
js
orb
and
loope
xor
sbb
add
xchg
jmp
into
xor
shll
lret
push
xor
jg
push
std
mov
shlb
aad
mov
stos
pop
lret
add
adc
dec
mov
ret
or
sbb
push
push
pop
push
outsb
jb
rorl
pop
scas
mov
std
adc
adc
sbb
fadds
and
pop
sbb
mov
adc
in
lods
sbb
jmp
flds
xchg
cld
pop
push
jo
nopl
iret
push
jb
push
sbb
push
pop
scas
mov
or
pop
sub
xchg
lods
les
push
push
mov
inc
inc
and
jl
orl
mov
push
inc
orl
mov
xor
pop
xchg
stos
mov
adc
stos
ret
cmp
push
daa
jae
add
loopne
lds
adc
push
push
push
adc
xchg
dec
es
sbb
daa
sbb
inc
jae
xchg
sbb
maxps
pop
popa
xor
inc
mov
xor
jge
mov
in
xor
into
add
mov
cmp
lods
adc
mov
in
int
int
lods
ja
push
inc
out
sbbb
cmpsb
es
shll
and
adc
lcall
mov
subl
ret
mov
imul
and
in
shlb
pop
xor
filds
lods
pop
std
push
xor
arpl
mov
rolb
scas
stos
scas
scas
jo
mov
cs
jae
inc
fmuls
mov
add
push
std
pop
mov
stos
lret
lea
push
xchg
mov
add
add
ja
adc
adc
jmp
imul
pop
mov
mov
adc
rcl
mov
pop
jb
cs
xor
dec
decl
pop
cwtl
adc
mov
sti
mov
jns
adc
and
xor
or
jo
arpl
movsl
push
add
xor
cltd
pusha
adc
jg
popa
ss
sbb
or
add
pop
xchg
out
or
loope
cmpsb
or
ss
faddl
jmp
pushf
rcrl
je
inc
dec
xor
mov
lcall
xchg
sub
jo
pop
cmp
inc
mov
dec
cs
cs
cmp
or
jo
pop
jne
loopne
inc
call
mov
inc
push
mov
push
in
jae
push
xor
and
inc
xor
add
aam
push
xchg
xchg
mov
fcompl
jnp
orb
popf
sbb
and
sbb
push
cs
roll
mov
xorb
imul
add
and
ljmp
dec
test
cmp
shlb
movsl
jo
mov
add
imul
in
push
jo
jo
ljmp
shl
mull
or
mov
imull
ret
rcrl
cmp
sub
pop
adc
out
push
iret
in
mov
add
dec
xchg
stos
add
cmp
add
sub
inc
ja
mov
push
push
movsb
insl
xchg
cwtl
sub
andl
sbb
xor
test
popa
push
cld
push
xchg
push
sbb
sub
and
push
in
std
repz
dec
adc
xchg
in
flds
test
nop
push
pop
es
in
repnz
pop
mov
addl
mov
scas
dec
aam
adc
clc
mov
jl
sbb
scas
inc
repnz
push
dec
js
int3
mov
mov
cmpl
dec
xchg
mov
test
jg
or
ret
test
ret
imul
adc
push
inc
mov
xchg
lret
inc
cmp
inc
xor
insb
data16
xchg
andl
sub
xchg
loop
out
popa
in
mov
jae
push
mov
push
sbb
inc
mov
fisubrl
xor
inc
lock
push
clc
push
adc
add
xor
pop
pop
mov
add
movsb
and
mov
and
loope
popf
push
sbb
jne
and
pop
lock
inc
xor
out
xor
test
ret
divl
dec
sahf
add
adc
cs
mov
adc
inc
add
push
push
or
jnp
jo
xchg
jno
mov
cwtl
push
dec
cmp
mov
jns
ljmp
jo
push
ficoms
mov
push
pop
test
aaa
jp
jae
or
rclb
fs
test
lock
pop
cmp
dec
or
pusha
pop
cmp
cmp
dec
and
or
jp
test
mov
lret
and
push
inc
mov
pushf
clc
lcall
mov
cld
cmc
std
and
cmp
inc
hlt
cmp
mov
inc
icebp
push
cmp
fsubs
inc
mov
pop
out
ja
sbb
mov
sbb
shlb
push
bound
push
jb
mov
loope
les
ljmp
adc
in
inc
inc
mov
add
or
shll
into
shl
mov
in
lret
leave
dec
xchg
jb
das
mov
adc
mov
sbb
hlt
movsb
jo
jo
xchg
js
or
loope
mov
jo
addb
gs
cmp
mov
xor
push
dec
jmp
cmpsl
add
scas
into
aas
or
mov
or
push
cwtl
enter
ret
push
xor
cli
xor
add
mov
jecxz
ja
mov
or
jo
xor
lods
inc
inc
cmp
lcall
push
cmp
in
inc
cs
dec
cmpsb
rolb
int
popa
push
mov
enter
cmp
and
mov
cwtl
lret
into
div
movsb
int
test
pop
mov
mov
subb
push
jo
lret
push
movsl
jo
pushf
jo
sub
jae
push
add
enterw
inc
mov
lock
push
push
cltd
or
outsl
push
mov
lods
outsb
ret
test
cmp
in
popf
xchg
mov
mov
stc
mov
adc
sbbl
ljmp
or
test
add
add
inc
jnp
cli
sub
mov
jno
add
ljmp
and
push
mov
sbb
int
daa
popa
xor
xchg
repnz
orl
loopne
push
and
mov
jbe
les
ja
scas
into
ja
mov
lcall
ja
rorl
inc
nop
or
fwait
ss
adc
xchg
sbb
push
test
inc
inc
mov
jp
dec
cmp
xlat
in
ja
mov
cmpsb
inc
push
ror
push
adc
out
fldlg2
test
cmp
arpl
mov
lahf
inc
pushf
clc
mov
loop
cmp
rcrl
xchg
push
cmc
mov
or
push
enter
or
loope
out
mov
aad
sub
xor
scas
inc
mov
cmpsb
or
add
inc
push
jb
addl
add
leave
ss
lahf
aad
sbb
pop
fildll
mov
add
xor
pop
shrb
xor
add
and
pop
or
mov
and
test
xchg
mov
cwtl
push
push
push
sbb
stos
cli
lock
sbb
jmp
aam
sub
int
cmpsb
out
das
add
push
inc
loopne
inc
scas
sarb
call
push
sub
mov
mov
dec
mov
inc
addl
mov
push
in
jge
rorb
rorl
dec
add
xchg
cld
in
scas
cmp
or
loope
orl
add
jl
cld
and
inc
jae
imul
push
dec
add
popa
jo
and
clc
repnz
sub
je
pop
adc
or
lea
mov
xchg
js
add
cwtl
stc
fs
push
adc
sub
dec
push
mov
cmpsl
pusha
xor
ljmp
xor
mov
adc
sub
jge
push
adc
add
aad
or
pop
mov
pop
or
mov
shlb
and
lret
mov
adc
pop
and
pushl
into
pop
adc
fdivrs
jb
mov
movsb
sbbb
nop
mov
test
out
rorb
aaa
cmp
inc
out
rcl
out
pop
test
add
inc
pop
dec
jle
jo
cmpb
dec
mov
sub
loope
out
cmp
scas
daa
adc
pop
shlb
fwait
xor
push
add
sbb
inc
mov
inc
xchg
roll
push
sub
and
repz
test
sub
nop
add
xor
add
jge
xor
stc
sub
das
xchg
ljmp
call
div
inc
cmpsb
or
mov
jp
jb
add
sub
jnp
xchg
sub
iret
ret
inc
nop
mov
add
or
mov
pushf
push
mov
jg
push
or
inc
pop
inc
imul
jle
jo
lcall
sbb
mov
test
inc
inc
sub
cmpb
jae
test
cmp
push
or
jae
fnsave
hlt
and
adc
xor
loopne
mov
jp
out
sub
cmp
test
add
inc
xchg
shll
add
jb
ret
inc
stc
iret
in
lret
cmp
pop
cmp
adc
mov
stos
or
pop
mov
ljmp
xor
or
cmp
hlt
enter
xor
jecxz
fcomi
ljmp
push
outsl
and
push
iret
orb
dec
or
repz
lret
test
cmp
add
mov
push
bnd
jne
andb
int
shll
or
cmp
mov
test
scas
out
push
or
xorb
jbe
nop
or
push
das
mov
into
inc
aad
pop
adc
lret
ja
sbb
scas
and
push
outsl
pop
jb
push
adc
outsb
jb
jb
push
push
into
mov
ss
sti
ret
cmc
mov
dec
leave
push
mov
out
lock
les
or
inc
outsl
inc
xlat
inc
popf
or
fs
inc
jae
add
xchg
push
scas
imul
or
aaa
cmp
push
ja
add
inc
jb
jbe
push
mov
aad
xlat
mov
scas
adc
loopne
cmp
mov
cmp
xchg
lret
fwait
ret
andb
xchg
fmull
shl
push
sub
push
gs
push
mov
sbb
rcr
or
stos
pop
add
sahf
rcrb
or
jp
cwtl
push
cmp
cltd
std
ja
pop
stos
leave
push
mov
jmp
push
xchg
xchg
xor
pushf
filds
mov
cmc
pop
push
popa
xor
pop
add
in
push
push
mov
add
adc
xchg
aaa
aam
xor
adc
sbb
dec
xor
cmc
ja
jb
jg
jmp
rcrb
dec
cltd
out
jmp
xchg
out
lret
pop
loop
inc
int3
inc
outsb
add
rcrl
addr16
and
loop
and
mov
sub
mov
mov
mov
mov
sub
jb
out
sub
pop
aam
addr16
repnz
pop
pop
icebp
xchg
xor
push
push
addr16
jo,pn
jle
sbb
push
out
aas
loopne
xor
or
test
sub
jmp
cltd
insb
push
repnz
cmpsb
sbb
xchg
repnz
int
and
sub
jbe
push
loopne
xor
push
push
pop
cwtl
sbb
gs
stos
clc
or
cltd
and
adc
pop
or
pusha
fiaddl
pop
add
push
mov
sbb
mov
test
sbb
sbb
sbb
loopne
pusha
rclb
int3
sub
int
sbb
mov
subl
push
add
rolb
stos
test
shl
mov
popa
push
repnz
sbb
enter
loopne
shlb
lock
ret
adc
dec
push
mov
popa
shl
cmp
subl
adc
inc
loopne
add
jo
or
inc
inc
pop
call
mov
sbb
push
pop
gs
icebp
cmp
and
jmp
into
add
in
and
cltd
cmpl
adc
jne
subl
xchg
sub
ss
push
xor
add
dec
test
inc
ret
aas
sub
add
xor
mov
dec
rclb
inc
es
mov
insl
xlat
mov
push
jo
cld
lahf
dec
xlat
push
mov
ret
inc
inc
es
and
push
enter
and
mov
jecxz
fwait
add
push
mov
adc
out
dec
mov
mov
inc
sbb
mov
add
mov
lret
lahf
scas
scas
pop
movsl
adc
mov
cmp
and
scas
sub
cmpsl
fidivl
push
gs
mov
sbb
inc
jae
insb
lahf
push
sub
js
ss
push
pushf
pop
aas
xorb
cs
pop
mov
dec
sub
loopne
lds
mov
mov
jp
je
loope
sub
out
and
mov
mov
dec
or
sbb
and
add
cmp
lcall
lcall
mov
push
dec
sbb
cwtl
lret
inc
xchg
jo
mov
lret
push
pop
aad
mov
adc
ret
outsb
jecxz
add
nop
dec
cmp
lcall
in
aam
ret
push
ss
pushf
mov
inc
shl
push
jmp
repnz
push
hlt
or
mov
xchg
add
insb
movsb
cmpsb
push
cmp
ret
mov
adc
sbb
adc
and
popf
add
js
add
dec
lcall
pop
into
stos
pop
loopne
dec
div
push
push
sub
dec
pop
ret
stos
add
push
sbb
test
enter
add
stos
add
sti
sub
push
inc
xor
fisubrs
add
push
add
inc
push
fwait
and
add
mul
lret
leave
mov
sbb
les
mov
lods
int
adc
mov
lret
cmpsb
pop
loope
sub
xchg
ljmp
jo
popa
mov
mov
cltd
imul
fmul
or
movl
fimuls
imul
mov
int
mov
pop
lret
gs
ljmp
jno
and
mov
jae
push
cltd
sub
add
xchg
into
add
dec
xchg
push
aad
xchg
and
dec
cld
push
push
rolb
inc
xchg
adc
pop
jg
and
add
dec
cmc
test
mov
add
inc
mov
adc
xor
mov
sbb
mov
mov
pusha
push
ret
cmp
pop
xor
mov
fimuls
test
sbb
adc
xor
xor
loop
mov
sbb
push
aas
push
test
add
sbb
add
outsl
jle
adc
js
sub
adc
push
cmp
push
jbe
jo
test
rclb
pop
cltd
ret
add
or
xor
ficoml
mov
enter
lods
inc
stos
out
push
out
add
push
and
add
ss
xchg
in
cmpsl
jb
xor
movsb
xchg
icebp
mov
push
neg
mov
pop
jno
roll
xlat
xor
icebp
sbb
dec
jo
push
mov
pop
add
or
inc
inc
hlt
insb
pop
push
push
stc
inc
nopl
loopne
add
cmp
and
and
pop
pop
sbb
cmpsl
jns
lcall
sub
push
mov
mov
sbb
adc
stc
pop
nop
inc
adc
std
ja
enter
xor
push
lds
cmp
adc
push
scas
push
lock
shll
lret
inc
pop
xlat
or
ror
stos
push
call
push
and
aam
add
adc
lret
loop
inc
lahf
enter
and
js
je
mov
inc
inc
movsl
jo
pop
sbb
sbb
mov
sbb
sub
adc
and
test
in
aam
add
sub
xor
push
lea
cmc
popf
popf
mov
nop
rclb
adc
sub
push
dec
cmp
mov
xor
aad
push
pop
push
loope
push
push
es
adc
loopne
fs
xchg
sub
sbb
int
pushf
add
enter
addb
dec
pop
inc
inc
jae
xchg
sub
push
out
mov
xor
and
call
or
or
ret
mov
push
xor
adc
push
cmp
jo
and
scas
mov
or
or
test
js
xchg
mov
pop
inc
scas
popf
insb
mov
mov
adc
push
movsb
cmp
pop
mov
xchg
or
sbb
cmpsb
cmpsb
arpl
xor
push
in
push
test
cltd
cld
jecxz
sub
clc
sar
sbb
mov
cmpsb
test
pushl
sub
sbb
mov
push
imulb
pop
mov
pop
jo
mov
cmp
inc
add
fidivrs
mov
or
add
sbb
dec
adc
mov
notb
aad
add
jmp
and
and
jno
dec
sub
sahf
popf
pop
mov
je
inc
pop
ss
adc
pop
jge
test
loop
daa
fildl
xchg
adc
jo
cmp
push
push
sbb
inc
push
pop
adc
sub
outsb
ja
das
pop
push
pop
hlt
or
jno
mov
inc
fs
pushf
inc
mov
xor
jmp
pushf
sahf
or
sbb
inc
adcl
sub
or
mov
cmc
pushl
push
xor
xlat
sbb
pop
sub
and
scas
cmp
cmp
xchg
jno
out
adc
shrb
add
flds
pop
adc
js
pop
cwtl
add
sti
mov
pushf
jo
cwtl
addr16
ljmp
mov
push
outsb
inc
and
xor
dec
xchg
rcrb
cmp
mov
and
add
sbb
faddl
test
rcrl
jbe
push
adc
or
cwtl
inc
push
icebp
add
cltd
adc
in
xchg
stos
mov
in
sbb
or
dec
pop
mov
push
sub
scas
add
dec
fcmovbe
pop
in
mov
xchg
and
mov
icebp
add
loop
jo
xor
jo
xchg
ret
mov
lret
sbb
jle
lods
add
stos
add
mov
xor
pop
test
push
or
sysenter
adc
inc
pop
push
loopne
jnp
mov
js
or
repnz
pop
mov
cs
clc
pushl
mov
mov
das
xor
sahf
mov
and
add
jmpw
rclb
jo
adc
jo
pop
int
push
je
adcb
adc
xchg
lret
andb
xor
xor
sub
xor
xor
mov
mov
xchg
and
xchg
outsl
adc
mov
dec
add
cmp
dec
push
das
sti
or
test
mov
and
sub
cmp
cmp
push
xor
addr16
lea
add
add
xchg
outsb
xchg
pop
or
cs
lock
mov
leave
adc
dec
inc
jno
inc
cs
jae
les
pop
xorb
sahf
push
das
or
out
push
fmull
sub
je
inc
jle
repnz
inc
cltd
stos
mov
dec
inc
inc
das
add
mov
cmp
scas
push
sub
pop
inc
loope
mov
popf
sbbb
xor
mov
mov
test
nop
test
jno
push
push
xor
mov
cmp
push
mov
out
mov
sub
add
and
jmp
xchg
sub
jecxz
icebp
push
jl
enter
cmp
inc
scas
or
or
add
mov
sbb
pop
add
push
mov
cmpsb
dec
lea
xor
xor
inc
cmp
add
and
mov
cmp
lret
inc
cld
jg
and
idivl
pop
sbb
cmc
icebp
sbb
sub
in
test
dec
xchg
sbb
jno
stc
lea
out
movsb
push
scas
sbb
pushf
loope
xor
into
inc
in
inc
and
or
xor
add
test
sarl
jp
jbe
int
push
jecxz
xorb
sbb
dec
sbb
sub
add
cmp
inc
sbb
xlat
jl
call
fbld
jp
mov
pusha
test
and
fwait
pushf
inc
mov
out
and
aam
pushf
xor
ljmp
push
mov
aas
mov
xlat
test
ljmp
in
cltd
sub
and
xor
mov
adc
adc
push
dec
or
mov
inc
call
inc
push
mov
cmp
push
jo
aad
cwtl
sbb
imul
adc
lods
lret
or
sbb
sub
cmp
adc
insl
das
xchg
push
int
cmpb
push
jb
cltd
sub
in
push
pop
icebp
in
cld
outsb
out
push
gs
aas
push
cmpsb
inc
scas
loop
or
aas
lret
roll
dec
xor
pop
lods
enter
sub
mov
repz
loopne
inc
mov
aaa
mull
scas
sbbl
clc
fdivrl
jp
pushf
cmpb
shll
and
sbb
sub
jnp
dec
jb
test
xchg
inc
hlt
scas
mov
xor
sti
push
jne
adc
sbb
mov
sub
mov
mov
push
addl
in
inc
jg
sbb
into
jge
inc
cltd
rolb
push
and
mov
mov
xor
push
cmp
mov
leave
inc
push
mov
mov
stos
pop
nop
add
cmc
inc
cwtl
push
repnz
inc
scas
sub
movsb
mov
jne
mov
mov
fadds
add
push
xorb
aas
test
jo
shlb
mov
fwait
xor
inc
adc
and
cmp
xchg
jle
push
sub
inc
add
xor
pop
stos
cmp
push
push
xor
mov
lret
pop
push
push
mov
popa
cli
or
add
mov
xchg
or
rolb
mov
pusha
push
xchg
inc
cmp
pop
add
lods
jmp
cmpsb
mov
cs
pusha
sub
clc
es
add
popa
je
sbb
or
pop
pop
push
sub
jae
test
and
out
sub
sbb
or
jg
pop
push
jo
and
push
cmp
inc
or
inc
pop
jl
mov
dec
adc
mov
in
or
push
enter
pop
cmp
andl
lcall
sub
pop
inc
pop
push
mov
sarb
rcrl
add
das
pop
mov
mov
out
stos
add
aad
pop
loopne
inc
jae
mov
or
add
mov
inc
out
test
xor
push
aad
inc
jae
sub
lret
outsl
pop
sub
adc
cmp
scas
outsl
std
pushl
ds
xchg
jns
call
mov
adcb
fs
push
int
mov
push
pop
fs
fmull
sub
mov
add
push
add
out
xchg
and
rorb
addb
subb
popf
fidivrl
pop
rcll
jno
dec
wrmsr
loope
adc
lret
cmpsb
add
sbb
push
imul
push
and
rcrl
scas
jnp
rcll
jo
inc
lahf
xor
and
call
cwtl
cmp
xor
mov
pop
push
jae
lret
push
mov
loop
adc
addb
data16
jb
xchg
imul
cmp
sub
inc
xor
leave
and
addb
dec
or
test
lock
push
xchg
mov
subb
xchg
inc
jne
pminub
pop
cmc
push
dec
mov
js
test
repnz
gs
sub
sbb
xchg
mov
mov
imul
mov
pop
or
cmp
fildl
or
mov
loope
jecxz
scas
dec
popl
xchg
cmpsb
push
xchg
adc
mov
mov
dec
cmp
pop
in
insb
sub
loope
mov
pop
shlb
xchg
or
cmp
pop
ret
orl
test
out
inc
test
mov
jg
pop
mov
popf
inc
cmp
aam
xchg
fs
push
xchg
ljmp
or
jo
add
inc
jg
adc
mov
int3
hlt
push
cmp
dec
xor
rorl
mov
push
mov
or
out
xchg
in
pop
push
test
aad
mov
inc
lret
dec
xchg
enter
inc
rcrl
mov
mov
mov
or
fsubr
fiaddl
lds
and
pop
adc
lret
xchg
pop
and
out
add
int
and
jmp
mov
test
pop
icebp
jb
enter
neg
xor
adcl
sub
and
mov
add
idivl
rolb
ret
cmp
jno
popa
pop
or
notl
push
gs
dec
add
shl
xor
inc
add
sbb
sbb
stc
rclb
scas
sub
fs
push
xchg
stos
out
mov
mov
or
add
adc
push
pop
adc
xchg
shll
scas
ret
mov
inc
inc
scas
mov
push
mov
sbb
mov
fdivl
mov
push
inc
rclb
stc
add
cmp
cmpsb
and
movsl
inc
and
sub
sub
push
or
lcall
mov
pop
mov
pop
lds
in
inc
incl
push
add
push
jb
push
sbb
jns
push
mov
call
mov
repz
out
mov
xchg
in
pop
xor
cmp
adc
mov
cmp
movsw
cmpl
mov
dec
adc
sbb
xchg
xchg
test
dec
cmp
adc
add
xchg
add
idivl
out
pop
mov
adc
add
inc
or
cmp
cmc
push
cltd
sub
adcb
cmp
pushf
jae
jp,pn
push
cmc
inc
mov
cmp
add
out
loopne
loopne
jae
imul
add
fildll
andl
lret
imull
pop
push
push
and
int3
push
insl
nop
aad
cmp
cmp
jp
test
ja
lret
xor
inc
dec
mov
push
lcall
mov
mov
push
or
jg
adc
xorb
xor
push
jo
sub
or
in
ret
mov
push
test
outsb
pop
xchg
add
push
out
cltd
jo
cwtl
cmc
xor
cmp
lret
hlt
out
add
xchg
lret
or
inc
shlb
sbb
jo
sbb
add
push
int
jb
into
in
push
bound
aam
cmp
lret
pop
jnp
xchg
aad
fs
lahf
add
mov
test
sbb
jo
inc
mov
test
xor
push
pushf
push
mov
lcall
mov
call
or
pop
inc
lods
pushf
xorb
lahf
or
pop
jl
call
push
cli
aaa
cld
aam
xor
aas
pop
adc
data16
xchg
imul
mov
pop
in
cmpb
mov
inc
jbe
and
xor
subb
orl
loopne
shl
jne
adc
or
cld
enter
addl
subb
pop
pop
mov
sbb
subb
add
adc
jp
sbb
stos
xor
mov
mov
xor
sbb
cmpsl
mov
sub
cmp
xor
sbbl
ja
adc
or
jb
lock
test
inc
sbb
mov
sbb
aas
test
add
lods
adc
dec
aad
jo
sbb
popf
ficomps
pop
scas
cmpsl
out
daa
ret
inc
mov
xchg
cmp
sub
push
popa
jp
add
out
pop
xor
js
pop
adc
mov
xor
outsl
inc
ficompl
inc
adc
sbb
rolb
into
mov
jo
add
inc
mov
es
adc
mov
sbb
int
mov
dec
or
dec
sub
lock
sub
gs
sbb
push
imul
sub
inc
and
mov
in
or
fbstp
pop
sbb
cmpsl
out
pop
push
or
cmp
fimull
dec
lcall
inc
xlat
daa
adc
loop
push
movsl
sub
imul
insb
ss
push
xor
push
mov
pushf
inc
cwtl
adc
mov
bound
cmp
daa
push
fdivrs
jmp
mov
sub
cmc
pop
inc
mov
sub
push
sub
inc
stos
es
sbb
imulb
inc
jbe
push
xchg
dec
fsubr
inc
imul
ret
popa
and
cmp
xor
sub
cmp
pop
push
pop
clc
pop
cwtl
icebp
xchg
rcll
add
sbb
xor
inc
test
sti
push
mov
repnz
push
mov
lock
and
rolb
push
adc
out
mov
mov
mov
and
adc
jmp
xchg
das
xor
xchg
in
pop
sbb
sbb
add
push
rorl
xchg
add
push
dec
lcall
pop
cmp
pop
xchg
and
sbb
cmp
inc
mov
xor
adc
out
xor
and
subl
mov
cltd
inc
cmpsb
push
xor
loope
cmpsl
push
and
xor
jae
mov
push
pop
cmp
jb
cmp
ret
lret
inc
xlat
pop
pusha
mov
cwtl
and
xchg
lcall
pushf
cmp
enter
ss
daa
sti
push
pop
cmpsb
rolb
mov
xchg
and
push
sbb
push
xor
adc
sbb
mov
dec
cmp
sub
push
dec
push
lcall
push
pop
and
jb
and
shrb
cmp
outsb
cmp
sbb
and
add
pop
and
or
rorb
loop
sbb
ljmp
lds
xchg
mov
mov
mov
filds
push
es
jmp
clc
inc
jecxz
or
call
sbb
add
in
enter
xor
xor
ret
add
popf
cmp
or
add
test
pop
add
fdivs
rcrl
inc
inc
and
and
mov
loopne
sub
mov
pop
push
xor
imul
loope
dec
imul
movb
sbb
enter
xor
imul
testl
enter
insl
lcall
aam
jb
pop
int
mov
aad
lahf
dec
scas
xor
push
add
lods
nop
dec
adc
in
rolb
ds
mov
inc
hlt
push
movsb
jl
mov
stos
mov
pop
loopne
or
xor
repnz
xor
xchg
mov
cmp
add
xorb
sbb
adc
push
dec
in
in
lret
test
mov
and
sub
sub
jg
mov
xor
aam
pop
test
gs
lret
inc
int
sub
and
loopne
popf
insb
loope
or
lods
es
inc
test
pop
cmp
mov
sbb
push
cmc
mov
sub
xor
jb
push
xor
fabs
sub
in
lcall
and
pushf
mov
inc
out
lahf
ss
mov
xchg
or
lds
push
outsb
and
test
xchg
in
or
xchg
mov
int3
xor
stos
dec
cmp
ds
cmpl
sub
ret
adc
gs
dec
cld
adc
test
xor
es
sbb
jmp
lret
bound
in
inc
pop
mov
inc
xor
push
cmp
and
movsl
push
xlat
add
add
jnp
push
xor
rcl
adcl
pusha
adc
mov
int3
xchg
add
int
popl
jae
mov
subb
push
popa
test
ret
test
inc
in
push
cmp
push
scas
cmpb
movsb
rorl
loopne
rcl
dec
cmp
mov
adcl
push
movsl
mov
pop
call
scas
sbb
mov
in
xchg
or
adc
push
stos
dec
push
lret
cmp
imul
and
push
inc
push
push
mov
loopne
cmp
xor
cmp
inc
dec
xchg
jp
push
push
add
dec
flds
subl
push
das
or
dec
jae
loopne
ret
adc
mov
push
mov
mov
pusha
enter
ljmp
adc
insl
adc
je
popa
push
aaa
mov
xor
sbb
cmpsb
push
sub
sub
std
test
inc
into
fs
add
call
mov
es
stos
push
inc
add
xor
ds
repz
lret
sbb
in
in
sub
cmp
or
inc
addl
sbb
mov
cmp
push
cmpl
ret
push
xor
and
cli
jbe
add
cs
xchg
jnp
lcall
add
test
jb
pop
push
es
mov
mov
sub
jp
out
jmp
adc
pop
push
push
jp
cmp
adc
cmp
xor
sbb
je
scas
and
jo
cltd
sbb
jb
xchg
mov
pop
into
sbb
mov
jle
sbb
xchg
mov
mov
pop
adc
subb
push
jne
popf
clc
xor
mov
inc
dec
push
jp
xorb
call
loop
mov
xchg
test
xchg
ret
int
lret
sub
jp
or
call
enter
lahf
jae
out
xchg
jg
ja
in
pop
int
cmp
sbb
push
scas
dec
je
jb
pusha
test
scas
push
das
dec
adc
cmp
test
mov
sbb
jb
ret
loop
push
loope
dec
repnz
jg
dec
mov
shr
test
insl
in
push
add
pusha
xor
les
stos
cs
mov
jp
and
shlb
or
and
push
xchg
ret
lds
pop
push
pop
addr16
jge
pop
dec
cltd
js
adc
lea
push
rcll
stos
xchg
shl
cmp
mov
imul
fisttpl
and
add
daa
mov
cmp
cmpsl
mov
leave
or
mov
shrl
mov
jp
push
js
shlb
hlt
mov
xor
out
push
dec
test
sub
inc
xchg
mov
pop
sub
xorl
orb
xor
or
data16
insb
push
imul
out
and
test
xor
add
mov
loope
stos
fists
or
sub
fs
mov
insl
mov
add
ud1
xor
adc
mov
mov
cmp
xchg
test
shl
jmp
cmp
add
jb
testl
les
jp
or
xlat
mov
lods
add
xchg
add
popa
cmc
cmp
test
int
int
fs
sbb
or
ds
mov
jo
push
mov
add
sub
push
pop
pop
fs
jb
cmpsb
xor
negl
in
cld
cmp
mov
aam
push
jecxz
fs
int
das
push
fwait
jae
jno
loopne
adc
adc
or
imul
lcall
adc
adc
add
scas
sub
lret
mov
adc
push
jo
pop
inc
cld
in
xor
or
iret
ljmp
add
aad
add
cwtl
stos
clc
repz
add
shrl
sub
test
vmulpd
enter
pop
enter
lahf
add
jg
adc
nop
mov
in
xor
jae
cmp
mov
sub
mov
pushf
and
mov
or
push
pop
xor
inc
shlb
in
movsl
repz
mov
sub
jb
and
or
lods
jp
and
cmpsl
lahf
cmpl
lock
add
ljmp
adc
xor
mov
fisttps
pop
loopne
int
scas
adc
jo
hlt
iret
xor
xor
jo
push
xchg
inc
int
cs
scas
mov
lcall
jb
iret
xor
pop
popf
sub
mov
push
pushf
mov
or
into
inc
ret
in
dec
jp
push
lock
cmpb
inc
sbbl
mov
inc
roll
push
add
cmp
mov
push
scas
xor
ss
adc
inc
in
cmp
ret
loopne
movsl
insl
jae
adc
inc
jo
or
mov
clc
jge
or
leave
lret
push
popf
push
xchg
lret
test
subl
orl
popa
or
jl
cmp
inc
gs
or
ljmp
jbe
ja
push
or
or
pusha
push
inc
loope
inc
cli
and
mov
pop
fisubl
adc
shrl
loopne
insb
dec
or
add
loopne
push
movsl
xchg
popa
sbb
mov
imull
adc
or
addl
loopne
int
cmp
xor
lcall
test
mov
xchg
ret
in
pop
icebp
xor
push
outsl
arpl
sub
jo
and
cmp
scas
or
fwait
xchg
push
fmul
inc
jbe
mov
cwtl
or
push
jl
push
push
push
jne
imul
dec
adc
and
divb
pop
fs
ret
ret
pop
out
shlb
popf
inc
inc
mov
xchg
push
cld
call
push
xor
push
xor
out
push
shr
loop
inc
repnz
mov
inc
jae
mov
mov
lret
aad
es
int
rorl
cs
in
les
jmp
inc
add
movsl
push
inc
sbb
loopne
in
add
push
dec
fwait
mov
scas
pop
popa
sub
int
xor
je
int
jo
ljmp
push
mov
ret
push
xchg
add
mov
lret
and
xor
outsl
je
xor
inc
or
adc
ret
and
xor
je
std
push
or
mov
jae
jge
adc
sub
mov
dec
mov
or
jb
cmpsb
sbb
gs
dec
sbb
rorb
das
int
sbb
xchg
mov
rcll
mov
xchg
inc
sbb
or
or
cmp
add
test
es
cli
inc
adc
push
sbb
inc
sbb
push
pop
xchg
scas
pop
push
mov
arpl
adc
adc
enter
jb
bound
inc
dec
gs
icebp
mov
mov
xchg
cmpsb
fistl
sub
out
or
int3
adcb
jo
sbb
les
pop
or
mov
dec
sbb
push
cmp
push
inc
pop
sub
sbb
or
sub
dec
pushf
mov
loope
jl
adc
ret
ds
stos
jb
adc
cmp
cmc
bound
bswap
push
cmp
dec
popa
ret
fcmovnb
loope
jo
pop
ret
mov
sbb
jo
xor
cwtl
enter
add
push
mov
test
rorl
and
popa
call
pop
pop
mov
push
fistl
adc
push
scas
int3
mov
loopne
xor
xchg
or
loope
insb
and
clc
movsb
or
push
xor
push
adc
push
aam
scas
ret
or
pushf
loop
push
cmp
add
cmpsl
pop
orl
mov
sub
test
sbb
subb
inc
fldl
es
cmpsb
jg
pop
sahf
mov
pop
push
adc
data16
adc
out
inc
adc
cmp
int
cmp
push
jle
out
rcrl
int3
xchg
push
shll
ret
push
inc
inc
sbb
popf
pop
int
je
push
add
aad
xor
mov
test
add
cmp
inc
xchg
mov
mov
stos
pop
daa
mov
push
mov
mov
mov
xor
cli
loope
addl
mov
add
and
cli
push
mov
push
add
jmp
pushf
mov
mov
push
add
jno
pop
das
add
fisubrl
enter
sub
fiadds
fcmove
add
jmp
addl
arpl
inc
cmp
test
int3
xchg
data16
sub
add
and
jle
mov
jmp
sbbb
mov
scas
lods
mov
adc
mov
movsl
push
test
mov
mov
out
sbb
lea
push
js
push
loope
pusha
push
add
adc
in
enter
inc
mov
cmp
inc
jbe
sbb
call
pop
je
pop
adc
scas
and
ds
mov
mov
cmp
orb
sub
push
ret
adc
push
pop
stos
adc
in
dec
push
pop
movsl
push
adc
cmp
cli
push
rclb
insb
pop
mov
mulb
mov
mov
adc
adc
xchg
sub
sbb
ret
add
ss
mov
mov
icebp
sbb
add
nop
mov
inc
rclb
and
addr16
mov
pop
cmp
cli
or
adc
fwait
inc
or
add
sarl
lret
psllq
test
pop
jbe
ret
and
sbb
aam
add
adc
je
xlat
shll
adcl
cmpsl
or
dec
add
pop
xorb
hlt
xchg
pop
scas
sbb
orl
fwait
int
mov
xchg
lods
mov
sub
mov
cwtl
dec
dec
fwait
sarl
js
add
push
cmc
aas
fwait
or
js
xchg
pop
call
push
mov
mov
jg
imul
fimuls
popa
js
ret
push
xor
push
mov
andb
inc
imul
add
andl
scas
inc
sbb
out
xorb
xor
jl
add
sub
je
xor
add
jb
popa
mov
jno
sbb
or
sbb
aaa
jnp
add
mov
push
and
popf
pop
jae
pop
and
cmp
inc
push
cmp
addb
mov
xor
sbb
and
sbb
pop
leave
sbbl
lea
push
or
dec
or
or
xchg
xor
dec
or
adc
es
js
xor
int
push
adc
push
das
sbb
pushf
loope
sbb
and
push
lods
jb
data16
cmp
jmp
pop
test
das
cwtd
push
jb
or
sti
cs
mov
xchg
or
sub
adc
inc
add
mov
cmp
repnz
cmp
repnz
sub
xor
sbb
mov
cmpsb
and
cwtl
push
mov
mov
lock
sub
dec
inc
cmp
mov
pop
push
icebp
jb
fidivrs
push
sbb
or
mov
aaa
sub
push
cmp
jecxz
add
iret
call
gs
cs
jnp
sbb
push
inc
xor
les
dec
mov
sbb
push
clc
push
push
int3
out
shll
idivb
xchg
sbb
cmp
jns
cmp
sbb
inc
cs
add
dec
sub
cs
lcall
icebp
sub
xchg
pop
loopne
xor
push
das
add
out
test
pop
leave
call
popw
mov
or
loopne
cmp
and
mov
mov
push
cs
and
push
lret
stos
mov
addb
dec
xchg
mov
xchg
pusha
stc
push
cwtl
test
mov
push
and
lret
add
mov
push
mov
int3
dec
mov
push
pop
and
out
xor
in
sbb
pushf
push
xor
enter
stos
xchg
ljmp
add
push
enter
in
rorb
push
shr
cmp
iret
dec
lcall
or
push
loopne
insl
cmp
or
in
adc
dec
repnz
inc
mov
clc
stos
ljmp
or
adc
xor
adc
pop
mov
verw
pop
push
rcrb
leave
rolb
mov
jp
rcll
push
jno
and
add
das
sub
or
popa
aam
xchg
adc
shlb
cmp
and
xor
scas
ret
push
test
js
push
mov
cmpsb
push
call
mov
adc
inc
adc
pop
mov
lret
test
cmp
jb
jmp
enter
jge
lret
inc
mov
xchg
inc
xor
clc
add
cmp
and
or
nop
aas
cwtl
add
dec
ret
insb
sub
inc
sbb
mov
cmpsl
jb
or
clc
cmp
sub
int
test
inc
icebp
jmp
ja
cmp
clc
enter
or
movsl
sbb
mov
adc
xor
fs
das
or
dec
add
out
push
pop
jb
dec
pop
int3
jle
bound
outsl
xchg
or
bound
movsl
jmp
sub
add
mov
orl
push
repnz
push
int
fs
cs
add
or
push
xchg
push
mov
xchg
fistpll
add
jo
xchg
xor
push
push
out
inc
mov
push
push
add
orl
sbb
sbb
mov
sub
jnp
pop
and
adc
bound
add
sub
mov
cltd
and
ret
jl
addb
enter
or
push
dec
pushf
sahf
adc
loop
mov
loope
fisubs
lret
xchg
pop
xchg
mov
fadds
or
sbb
push
test
xorl
and
cmpb
aad
jae
int
push
stos
or
add
mov
push
cltd
pop
add
add
ds
sbb
pop
add
stos
add
popa
sbb
mov
gs
sbbl
inc
adc
mov
inc
in
pop
int3
loopne
lods
push
mov
jmp
xor
pop
pop
jno
mov
rclb
push
bound
add
es
cltd
jo
push
sbb
gs
sub
mov
add
jne
and
or
gs
add
or
shll
daa
and
mov
rclb
pop
sub
in
push
or
add
and
inc
add
mov
stos
cmc
jg
xor
xorb
sub
add
rcrl
adc
add
popa
dec
popl
pop
xor
mov
or
rcll
insb
fs
mov
adc
stos
loop
mov
xchg
ds
sarl
unpckhps
sbb
iret
sbb
sub
and
pop
nop
push
adc
dec
movlps
push
push
push
add
mov
fdivrl
jg
mov
sbb
test
popa
add
ret
pop
push
in
jb
fsubp
mov
jo
loopne
push
mov
sub
xchg
stos
push
into
shll
xchg
mov
inc
add
cmp
loopne
dec
mov
or
sub
and
popa
test
adc
je
inc
xchg
loope
inc
mov
cmp
and
lret
or
aam
addr16
or
mov
adc
loopne
aam
pop
jl
lret
mov
mov
aas
push
xadd
or
ljmp
in
jl
mov
pop
popf
and
sbb
lret
test
push
mov
sub
fwait
aaa
sub
cmpsl
lcall
mov
out
and
xchg
mov
xorl
or
movsl
jb
mov
pop
jo
push
int
js
nop
fldcw
in
aam
into
loopne
bound
xchg
push
out
adc
loopne
mov
and
xchg
ficoml
pop
scas
jl
mov
loope
lret
xor
or
sub
sub
xchg
pushf
mov
cmpsb
js
xchg
mov
push
ljmp
mov
xlat
pop
xor
out
stos
scas
mov
pushf
and
dec
mov
jnp
mov
add
test
jb
or
xor
mov
push
cs
xor
mov
inc
jno
movsb
loopne
and
div
shl
adc
jnp
jp
subl
data16
movsb
lret
out
inc
or
and
add
sarb
mov
pushf
outsb
fisubrl
lret
roll
dec
sub
inc
xchg
fstpl
test
adc
pop
out
loop
sub
test
sbb
mov
sub
push
aam
sub
inc
inc
cmp
ret
pusha
jo
mov
addb
and
fisttps
push
jo
inc
jp
or
sub
loope
sbb
cs
push
cmpsb
sbb
inc
mov
imul
ret
add
inc
inc
xchg
cs
mov
xor
mov
or
stos
dec
push
in
push
xchg
sub
sub
es
outsb
pop
gs
push
fmull
jo
dec
xchg
inc
movsl
mov
sahf
lock
inc
insb
loopne
leave
popf
xchg
inc
jb
sbb
stos
in
lcall
inc
lods
lcall
clc
dec
or
imul
ret
mov
ret
aad
mov
xor
push
add
and
xor
std
xor
sub
jb
adc
or
add
push
sub
je
orb
and
or
repnz
mov
adc
mov
xor
loope
jp
jbe
push
dec
mov
ljmp
jbe
push
inc
push
sub
mov
mov
scas
cld
adc
scas
add
gs
dec
setp
shlb
cmc
in
in
add
push
pushf
rcrb
rcr
adc
loope
sbb
sub
fstpl
sti
lcall
xchg
test
or
es
sbb
inc
jae
jp
aad
cmp
in
jb
mov
lret
loop
add
test
cmp
or
mov
mov
push
loope
sbb
push
or
cmp
jmp
es
adc
xlat
mov
adc
jo
and
pop
mov
mov
push
ljmp
mov
lcall
imul
je
push
insl
adc
add
xchg
fdivrl
loopne
loopne
or
push
and
inc
mov
cmpsl
outsb
sbb
rcrl
cli
clc
pop
jnp
and
aad
push
mov
jle
push
adc
push
insl
sarb
or
enter
fldt
jmp
loope
out
or
cmp
test
jns
in
inc
adc
and
test
add
int
or
dec
jbe
dec
into
adc
cmp
jp
add
mov
or
sar
cltd
pusha
arpl
mov
cmp
jo
inc
mov
loop
push
xor
test
xlat
fsubl
clc
cmpsb
es
mov
gs
xchg
push
fisubl
test
pop
cmpsl
xorb
cmpsl
lret
sub
or
or
sbb
xchg
mov
or
adc
adc
adc
jp
inc
mov
adc
sbbl
push
shll
cmp
test
pop
or
test
mov
cmp
or
xchg
ret
mull
ds
bnd
push
mov
adc
add
daa
adc
mov
or
test
popf
mov
addl
pusha
xchg
push
add
test
push
lock
shll
push
xchg
lret
push
fucomi
sbb
shlb
sbb
jp
push
test
scas
push
jno
lcall
scas
lock
pop
shlb
lcall
add
and
loopne
sbb
xchg
cs
add
lret
push
cmpsb
xor
mov
loope
pop
or
jo
pop
mov
dec
push
sub
in
adc
mov
sbb
data16
push
dec
push
or
xor
sbb
orb
and
ret
mov
loopne
int3
sahf
adc
int
jo
inc
fldt
js
popa
mov
cmp
sbb
loope
jo
loope
or
loopne
in
push
es
mov
inc
test
outsb
lea
cmp
and
sub
pop
cmp
mov
mov
test
fisubs
dec
lods
icebp
sub
dec
mov
mov
lret
cli
addb
add
adc
adc
push
add
inc
lock
jb
call
gs
enter
xor
sbb
dec
mov
mov
mov
add
xchg
add
push
lds
mov
add
cld
sub
xor
aad
addb
add
xchg
or
add
ret
test
cwtl
bound
leave
add
subb
jns
ja
or
mov
aam
xor
add
mov
ljmp
or
mov
out
pop
shlb
loopne
xchg
sbbl
sub
mov
xlat
push
sub
orl
addr16
or
es
push
call
std
call
or
xchg
add
sbb
orl
sbbl
test
loopne
xor
inc
jl
mov
cmpsb
xchg
test
add
push
xor
and
das
inc
xor
loopnew
rolb
add
in
loopne
jo
mov
cmp
xor
xor
mov
inc
loopne
sub
sbb
push
cmp
jb
cmpsb
push
pop
jns
xor
loopne
push
dec
mov
jb
fsubrs
lret
mov
incl
push
adc
nop
mov
stos
push
sub
dec
int3
inc
xor
repnz
add
int
inc
ja
adc
jae
sub
je
sub
mov
adc
or
fwait
sbb
cmp
fsubl
xor
addb
push
fcompl
sub
cmpsb
and
sub
push
or
xor
mov
inc
xchg
xorl
test
cli
add
addl
aam
test
lret
add
xor
mov
ret
mov
dec
test
push
adcb
mov
inc
push
push
rclb
cmpsl
xchg
aam
sub
mov
aaa
pop
es
or
dec
js
call
sub
or
test
xor
push
in
cs
rclb
into
bound
hlt
adc
push
data16
or
insb
shr
dec
rolb
add
add
ja
pop
or
push
push
ds
leave
adc
sbb
inc
fistl
add
mov
out
jo
xlat
or
loope
stos
dec
push
inc
sbb
push
lock
push
or
inc
in
xchg
jb
push
inc
mov
sbb
jo
es
lcall
mov
push
sbb
orl
xchg
stc
inc
movsb
mov
sub
jecxz
xchg
and
jbe
es
cmp
push
jo
cmp
mov
jo
enter
jno
push
mov
in
sbb
cmp
lock
push
adc
sbb
rcll
ret
data16
pop
inc
jp
cmp
pop
add
enter
in
inc
sbb
xorl
and
mov
call
sub
ret
pop
jecxz
enter
and
sbb
push
xchg
mov
or
mov
test
cmc
lret
pop
scas
pop
scas
jp
movsl
addr16
in
mull
pop
and
cltd
jp
je
es
and
popa
xchg
clc
add
or
xchg
rol
cltd
mov
add
and
jae
or
leave
stos
stos
jecxz
bound
push
mov
push
push
in
push
jge
repnz
clc
sbb
dec
into
jmp
add
mov
inc
add
lcall
hlt
shlb
push
or
xchg
fisttpl
and
enter
xor
orl
lcall
add
push
xor
push
std
aaa
sub
jb
dec
fcompl
sub
stos
and
ret
push
int
push
sbb
ret
xor
stos
mov
add
pop
test
push
je
adc
sub
dec
mov
sub
sub
cld
in
xchg
xchg
lret
inc
ja
xorb
or
inc
insb
sbb
xlat
push
lock
inc
aas
ficoml
out
cmpsb
das
imul
adc
dec
jl
add
sbb
push
adc
push
push
hlt
xor
and
cld
inc
sub
or
fcoml
sbb
adc
pop
roll
inc
mov
hlt
cmp
imul
ret
jp
sub
push
sub
test
jno
push
sbb
jl
add
ret
addb
loope
adc
jb
cmpsl
inc
dec
in
xor
and
mov
es
lds
cwtl
lcall
lea
jne
gs
test
cmpsb
dec
cmp
dec
and
xor
pop
or
mov
adc
adc
xor
lds
nop
sub
sbb
xor
dec
inc
xchg
mov
cmp
out
shlb
inc
stos
sbb
ret
test
pushf
mul
cmc
push
cmp
xchg
jae
adc
ljmp
jo
setb
jmp
mov
push
and
pop
add
mov
mov
test
inc
popf
lds
xchg
sbb
jg,pn
add
sub
loopne
push
push
out
imul
jg
cmpsl
hlt
je
jb
mov
xor
inc
pusha
lfs
lret
pop
sahf
cmpsl
push
mov
xor
pushf
mov
js
test
rcrb
and
jg
in
adc
push
push
mov
ror
dec
mov
sub
adc
stos
sbb
dec
push
subb
pop
mov
gs
roll
sbbb
sbb
mov
and
xor
popa
push
cmp
pop
popa
bound
jl
inc
test
or
daa
movsb
inc
cmpsb
pop
rcrl
mov
cmp
rcll
dec
aad
jb
pop
lea
sbb
push
lds
xor
mov
scas
add
adc
push
adc
shlb
and
mov
pusha
jb
pop
es
loopne
scas
push
es
inc
or
adc
xchg
call
fwait
xchg
xor
sar
push
push
mov
shrl
inc
sub
mov
or
cs
dec
sub
xchg
push
add
jmp
or
pop
pop
fistpll
xchg
test
pop
sub
add
xchg
sub
or
add
aam
rcr
sub
stos
jp
scas
out
int
jnp
xchg
jne
dec
xchg
stos
pop
or
adc
push
xor
addl
aam
call
jle
pushl
lcall
cmp
cmp
add
test
scas
xor
xchg
popa
xor
sbb
cmpsl
jb
jmp
jo
push
stos
dec
jge
lock
xchg
add
and
add
daa
fcoml
pop
push
xor
lcall
mov
js
adc
ret
push
imul
loopne
loope
jp
add
enter
adc
adcb
xchg
popa
mov
das
ljmp
sub
adc
stos
jb
pop
xchg
sarb
push
push
xor
xchg
mov
sbb
push
inc
mov
mov
cltd
test
sbb
loopne
mov
or
pop
jmp
cmp
push
inc
cmp
outsb
scas
rorb
push
out
aam
jp
jo
xor
mov
inc
je
add
je
jp
jno
push
clc
xchg
addb
sub
in
rorb
inc
cwtl
or
insb
mov
ret
add
mov
hlt
mov
mov
sbb
push
dec
hlt
jp
xor
icebp
push
push
popa
loope
bnd
in
xchg
or
push
xchg
repz
adc
mov
mov
sbbl
or
adc
mov
mov
pop
scas
cltd
xor
xchg
xchg
add
and
popa
sub
xchg
and
or
xor
inc
add
dec
mov
data16
mov
or
push
cmpsb
xchg
jne
mov
add
fdivrl
mov
fnsave
sub
lret
xchg
inc
xchg
dec
movsb
xor
out
pushf
sbb
test
rorb
in
lcall
sub
jo
jb
pop
nop
mov
add
sbb
pop
pop
int3
pop
add
adc
push
add
xor
mov
or
dec
popa
push
xor
mov
inc
add
inc
stos
sbb
imul
sbb
pop
jb
out
jo
cmp
jae
scas
cmp
jecxz
jns
nop
sub
stc
sti
cltd
vpavgb
sbb
and
mov
inc
cmp
mov
dec
xor
mov
lds
adc
or
nop
pop
inc
lret
push
jo
cmp
cwtl
outsb
imul
enter
inc
test
dec
or
push
xor
push
lock
pop
and
icebp
xorl
mov
dec
loope
or
les
cmp
addr16
jae
test
xchg
xchg
add
adc
es
add
sbb
add
sbb
adc
adc
ret
pop
xchg
xor
and
mov
pop
rcll
aas
xchg
sbb
push
lds
rclb
add
sub
insl
rcrl
ret
adc
adc
jne
push
aad
notb
push
clc
out
cltd
enter
mov
movsl
mov
stos
popa
push
inc
pop
xchg
jno
sub
loop
pusha
in
mov
ret
inc
jb
jae
inc
adcl
mov
push
popa
ja
mov
mov
insb
adc
test
mov
inc
test
cli
lods
push
and
or
or
imul
ljmp
push
movsl
sbbl
mov
pop
adc
into
xchg
sbb
call
jecxz
add
lcall
dec
rolb
sbb
pop
pop
mov
cwtl
xor
push
imul
add
lret
jb
xchg
fnstenv
pop
or
lods
bnd
lcall
jl
shll
push
push
lds
xor
xchg
ja
in
int
add
stos
dec
sbb
add
push
or
xor
push
cltd
in
cmp
add
or
xor
outsb
scas
xor
adc
ret
scas
inc
sbb
test
mov
push
insl
dec
ds
out
int
xor
or
jo
mov
jbe
xorl
xchg
and
notb
mov
push
out
or
inc
xchg
jnp
sub
xor
ja
mulb
loope
mov
mov
cmp
or
sbb
scas
sbb
dec
mov
call
jle
stos
mov
cmpsb
imul
mov
and
push
cwtl
or
jns
jp
loope
ret
xlat
int
lcall
dec
pop
lods
popf
add
nop
fs
dec
inc
mov
out
lcall
out
sub
mov
icebp
outsb
mov
mov
mov
aad
xchg
mov
xor
scas
fisubs
loopne
add
add
sub
mov
in
es
cs
xchg
inc
jae
cmp
push
add
sbb
add
addl
loope
lea
enter
insb
and
or
test
inc
adc
sbb
pop
cwtl
mov
inc
add
fsubrs
gs
push
inc
adc
sbb
add
sbb
mov
jns
jae
sbb
out
dec
adc
dec
push
int
mov
inc
nop
jae
testb
pusha
inc
in
loopne
mov
cwtl
or
fwait
ss
rcrb
push
push
mov
or
mov
mov
aam
mov
dec
scas
cmp
fs
mov
cs
adc
sbb
push
jne
add
pop
xor
mov
pop
xchg
push
sub
push
inc
pop
sbb
pusha
enter
dec
or
add
add
sbb
xchg
orb
mov
dec
inc
cwtl
or
aam
pop
cmpsb
adc
mov
pop
mov
or
gs
in
dec
addl
ficoms
subb
data16
cmp
add
std
cwtl
dec
add
sbb
scas
push
mov
push
in
ret
outsb
add
sub
inc
mov
jo
add
inc
jo
add
fwait
dec
add
sbb
in
xor
lcall
jae
cmpsl
adc
lods
ret
and
or
mov
mov
fwait
shll
andl
or
cmc
jb
cld
mov
mov
into
add
outsl
dec
pop
push
ror
xorb
fldcw
lods
cmpsl
xor
push
hlt
mov
fstpl
and
add
cmp
cmpsl
sbb
loopne
xchg
pop
add
push
push
movsl
cmpsb
test
mov
or
xlat
icebp
loope
push
test
push
insb
xor
fmuls
push
ret
xor
gs
mov
pop
and
nop
mov
fs
cmp
lea
test
pop
push
push
shrb
cwtl
push
je
or
ret
shl
fnstenv
adc
inc
lock
sbb
lea
mov
xor
daa
loope
xor
mov
dec
inc
or
push
inc
add
inc
adc
stc
xchg
cld
dec
dec
adc
es
iret
sbb
mov
add
das
push
sbb
lea
aam
or
inc
stos
cmp
push
stos
or
cmp
xor
insl
popf
jo
pop
insl
mov
cmp
xor
lret
lret
pushf
and
loope
or
enter
loopne
pop
push
outsl
aas
fsubrl
xchg
loopne
aam
daa
push
fildll
cs
adc
pop
inc
aaa
or
dec
gs
adc
lcall
jne
mov
sub
jge
rcrl
jb
lret
lcall
push
ret
out
pop
inc
xlat
test
jns
cmpsl
mov
mov
ror
popa
adc
sub
test
scas
mov
lahf
push
popa
addb
xor
inc
xchg
or
add
in
dec
mov
jge
jb
add
shrl
pop
jnp
out
in
or
enter
cltd
in
aas
mov
roll
adcl
int3
sub
push
or
les
cli
sbb
loope
push
xor
dec
data16
xchg
mov
dec
add
pop
push
xor
lock
cmp
push
sbb
and
mov
imul
adc
dec
sarb
and
rclb
jo
inc
push
lock
and
mov
xor
jnp
sbb
pushf
stos
cltd
xor
and
pop
imul
pusha
ret
sub
data16
mov
cmpsl
hlt
push
push
movsb
or
pop
xchg
fimull
mov
dec
lds
lret
rcrl
push
rcrb
inc
rcr
xchg
in
sub
enter
xchg
jne
jo
ret
cmpsl
inc
fiaddl
ja
stos
or
sti
jge
repnz
push
cmp
or
movl
xor
in
enter
cmp
gs
in
fisubrl
add
repz
push
xor
mov
mov
push
pop
jle
pop
push
cmp
push
lods
outsl
add
loope
and
nop
pop
jae
mov
add
xchg
shlb
sbb
xor
fistps
gs
and
push
pop
pop
inc
xor
dec
push
dec
ljmp
inc
or
cmc
lret
sbb
popa
mov
lahf
adc
mov
data16
adc
cmp
mov
imul
cmp
enter
out
inc
xchg
add
test
sbb
aas
je
push
xor
mov
cmp
cs
inc
mov
pop
pushf
or
mov
jae
imul
xchg
inc
test
push
xor
pop
cvtpi2ps
out
dec
and
push
add
or
loope
adc
mov
mov
inc
add
cmp
pop
orb
pop
repz
inc
cmp
ja
cmp
add
and
scas
adc
icebp
cwtl
enter
rorl
xor
inc
jmp
inc
ret
add
sbb
push
add
pop
inc
push
cs
push
ret
mov
sbb
push
lret
push
fs
mov
sub
dec
push
mov
out
repnz
bound
sub
inc
jae
sbb
lret
nop
fwait
lret
push
addr16
jo
dec
outsb
xor
movsl
sbb
enter
fldl
inc
or
pop
push
mov
rolb
out
je
mov
pop
ret
jb
inc
mov
test
sbb
add
cltd
pop
jnp
push
pop
xor
popf
add
enter
xor
mov
es
cmp
fiaddl
in
push
loope
arpl
stos
inc
or
or
jmp
inc
rcll
dec
mov
and
lret
or
jecxz
push
cmp
dec
in
into
imul
inc
nop
test
fs
dec
adc
mov
loope
faddp
test
add
rol
sbb
shlb
sub
adc
les
adc
loope
rclb
inc
ret
adc
sti
add
enter
mov
push
sbb
out
add
imul
jb
ljmp
gs
movsb
je
xor
mov
and
rol
stos
cmp
add
inc
cmp
push
loopne
nop
push
inc
or
aad
cmp
jae
ljmp
pop
hlt
push
inc
mov
or
hlt
stos
lahf
jnp
mov
pop
jns
add
js
mov
sub
pop
cmc
cmp
cmp
outsb
adc
lret
addr16
xorb
mov
pushf
jae
movsl
jo
sub
andb
adc
hlt
mov
mov
jae
and
imul
dec
es
data16
cmp
pop
push
adc
cmp
ret
jp
or
pop
fmuls
dec
xchg
xor
sbb
cmp
lret
stos
lret
ret
pushf
mov
sbb
dec
jg
rclb
adc
pusha
push
or
or
or
shlb
xor
enter
add
xlat
inc
xchg
mov
sbb
xchg
mov
xor
cltd
pop
xor
jge
lahf
push
mov
mov
cltd
lcall
push
push
jp
int3
mov
shrl
mov
xor
mov
mov
xor
sbb
inc
adc
inc
ret
adc
mov
adc
adc
sub
mov
dec
pop
pop
pop
jne
out
cmp
std
xor
js
test
insl
fisubs
or
or
or
icebp
xorb
cmc
adc
xor
int
outsl
xor
popa
roll
sub
inc
iret
cltd
xchg
rcrl
es
jmp
mov
int
jb
sub
ljmp
push
push
mov
lret
xor
fnstsw
dec
xchg
sub
inc
or
sub
or
and
hlt
adcl
mov
call
sbb
add
fcomps
loope
and
mov
mov
add
andl
adc
sbb
inc
pusha
jo
enter
lcall
stos
cmp
test
inc
sbb
ret
cltd
sbb
and
jl
jecxz
pusha
cli
outsl
sub
mov
call
loopne
add
test
mov
inc
test
push
adc
addr16
enter
cmp
cvtps2pd
imul
xor
mov
rcrb
push
and
or
mov
mov
add
stos
add
lret
sahf
pop
adc
mov
inc
jnp
ror
sbb
and
pop
pop
push
mov
push
test
in
mov
repnz
inc
les
push
push
js
and
add
data16
lea
dec
test
ficoml
or
out
rcl
jbe
cmp
es
mov
fistpll
sbb
sub
mov
inc
and
addr16
adc
repz
jge
cmp
dec
adc
jnp
cmpl
or
add
or
push
cmc
xchg
sbb
dec
loop
inc
add
es
inc
rcrb
call
insb
ftst
sbb
inc
jns
xor
loop
gs
or
sti
enter
mov
in
sub
add
fwait
jmp
push
out
or
pop
cmpsb
stc
loop
xor
sbb
dec
mov
mov
dec
clc
jb
push
cld
aaa
sub
mov
inc
adc
cmpsl
in
rorl
inc
add
das
or
pop
push
out
dec
lea
sbb
js
in
pop
push
or
cmp
sbb
fisubrs
dec
xor
pop
or
decb
xchg
or
jnp
fdivl
jae
clc
sub
add
push
stos
cmp
int
mov
jge
pop
add
mov
sub
push
pop
clc
sbb
push
pusha
mov
or
pop
dec
or
aam
mov
test
push
xor
enter
mov
add
cmpsl
and
push
mov
inc
mov
pop
push
xor
movsl
xchg
in
push
push
pushf
jae
xchg
ret
sar
sub
pop
pop
xor
mov
push
addr16
cmpsb
push
or
or
das
xlat
aas
push
daa
stos
das
call
mov
sub
in
dec
sarb
in
or
or
sbb
pop
popa
rcrb
shl
push
xor
pusha
js
subl
push
jle
adc
mov
mov
inc
push
or
or
adc
pop
lds
sar
add
sbb
push
mov
mov
xor
repz
mov
subl
jbe
push
clc
mov
xchg
aad
enter
mov
adc
ret
and
or
into
adc
mov
orb
xor
std
inc
push
xchg
fcoml
lret
aaa
mov
or
sbb
aas
mov
mov
pop
and
xchg
enter
shl
ret
inc
loope
adc
daa
sbb
negl
in
addr16
hlt
in
aam
out
adcl
jp
dec
pop
add
loopne
xchg
iret
adc
or
and
adc
mov
push
popa
ret
adc
pop
mov
inc
in
push
imul
imul
push
test
pop
aad
stos
call
mov
mov
and
call
push
inc
mov
or
leave
outsb
into
decl
mov
icebp
jp
testb
push
pop
pushf
push
adc
xchg
adc
push
gs
pop
les
push
mov
jo
cmpsl
mov
or
push
cli
mov
in
ljmp
mov
jae
jl
and
sbb
xlat
stos
mov
cmp
push
fiaddl
add
cmp
cmpsb
cs
mov
inc
push
xor
xor
push
push
mov
push
jp
adc
xor
das
cltd
and
add
test
scas
fimull
sub
loopne
inc
div
inc
int
cmpsb
fcoml
push
nop
imul
test
enter
mov
mov
sbb
or
push
push
popf
xchg
jae
adcb
adc
lods
xchg
ror
xlat
or
inc
push
into
pusha
cmp
test
scas
add
loope
popa
mov
mov
loopne
inc
push
sbb
or
loopne
xchg
ret
mov
adc
xchg
int
sub
out
cmp
fs
mov
mov
mov
ljmp
xor
and
daa
adc
jge
dec
inc
and
push
inc
mov
mov
iret
jae
push
lods
xor
sti
push
sbb
jle
or
call
and
fwait
outsl
cvtdq2ps
add
sub
push
pushf
push
stc
les
cmp
mov
das
dec
push
clc
aaa
outsl
add
nop
fcoml
xchg
loopne
scas
xor
in
stos
sbb
inc
das
daa
es
sub
in
imul
mov
mov
add
sbb
cmpsl
or
xchg
or
mov
add
mov
lcall
and
rorb
roll
or
pusha
sti
pop
loopne
rcrb
xor
pop
leave
xchg
or
int3
mov
enter
or
mov
mov
inc
sbb
fcoml
out
mov
hlt
shlb
shll
push
in
iret
and
test
iret
in
push
xchg
data16
sbb
jo
jae
add
or
push
das
mov
enter
mov
sub
or
adc
mov
subl
pop
adc
xor
ljmp
movsl
jp
mov
mov
cld
cs
aam
popa
push
add
add
loop
jne
mov
mov
pop
es
mov
mov
gs
in
add
movsl
mov
cmc
mov
mov
push
adc
xor
pop
popf
mov
and
inc
push
adc
scas
adc
popa
leave
rcrl
jp
lret
ret
push
data16
push
nop
movsl
or
add
and
adc
mov
or
xchg
and
jl
inc
popa
ret
push
inc
sbbl
jp
cmp
ret
inc
adc
cmp
pushf
add
or
sbb
jecxz
add
out
sbb
and
cmp
dec
add
push
jl
mov
dec
call
ss
xchg
xorl
push
push
or
mov
cld
daa
push
fucomip
add
xor
stc
pop
stos
or
loop
and
rolb
adc
jp
xchg
jmp
fidivl
test
jnp
adc
jb
or
add
cmp
mov
daa
dec
loope
or
sbb
fdivp
xchg
ljmp
movsl
cmp
fmull
sub
cmp
adc
sub
or
and
push
fwait
and
mov
push
idivb
int
xor
sbb
mov
and
pop
ljmp
mov
or
pop
jle
mov
enter
mov
cld
test
lods
cmp
lcall
mov
shl
push
xor
pop
pusha
xor
mov
or
lock
std
cmp
mov
pop
fstl
mov
sbb
popf
stos
cmp
pop
push
xchg
sub
je
imul
in
push
add
xor
movsl
imul
aam
pop
lret
pop
jnp
aaa
or
shr
add
pop
in
test
ret
mov
xlat
push
adc
and
stos
sub
in
pop
mov
xor
lret
notb
rolb
cmp
test
sub
xor
sub
les
xchg
sub
mov
rol
bound
or
push
and
dec
cmp
in
js
sti
adc
push
push
and
inc
sbb
inc
pop
mov
fldl2e
mov
jb
pushf
call
or
add
push
xor
mov
sbb
call
push
adc
sar
mov
xchg
xor
adc
mov
mov
inc
xor
repz
repnz
adc
and
fisubrl
mov
fcomp
mov
pop
fwait
inc
adc
das
add
or
icebp
inc
orl
test
lret
outsl
jp
pop
ret
ret
adc
mov
xor
push
mov
jb
sub
cltd
fiaddl
mov
inc
rol
pusha
ljmp
sbb
or
fwait
pop
cwtl
jb
jnp
stos
mov
aam
repnz
mov
jb
sub
adc
pusha
test
add
push
push
mov
in
or
push
pop
ja
jmp
mov
sbb
jo
push
jne
pop
jecxz
cmp
test
push
inc
inc
or
add
popf
pop
pop
mov
inc
dec
jne
orb
adc
add
and
scas
das
push
xchg
adc
mov
fwait
xor
mov
insl
je
xor
es
push
jp
rolb
bound
lret
arpl
cli
or
or
xchg
stos
inc
mov
xorl
nop
inc
fiaddl
and
cmp
jno
jo
and
arpl
xchg
js
or
pop
lret
pop
popf
or
cmpsb
out
gs
dec
out
jmp
pop
fs
inc
je
out
sbb
cmc
leave
add
sub
test
inc
int
jo
push
xor
push
jmp
dec
and
daa
add
xchg
inc
ss
mov
push
sbb
ret
stos
sbb
xor
cmp
pusha
xor
sbb
xor
mov
dec
xchg
jae
or
adc
inc
and
xor
cmc
loope
jb
cli
daa
daa
xchg
mov
adc
ja
inc
xchg
dec
out
dec
mov
adc
jno
push
rcll
pusha
stos
cmp
inc
jnp
push
or
jno
test
xor
repnz
mov
inc
or
fnsave
inc
pop
push
popl
mov
or
ds
jbe
mov
jb
sbb
rolb
add
add
cs
rol
fnstenv
and
stos
rol
mov
leave
sbb
inc
mov
add
mov
xchg
xchg
jmp
out
mov
add
adc
mov
fs
push
pop
pop
stc
push
aaa
sbb
or
dec
mov
cmpsb
ljmp
adc
pop
cmp
cmp
cmp
mov
add
mov
lret
cmpsl
pop
inc
lock
loopne
outsl
add
jecxz
test
enter
xchg
adc
add
pusha
or
sbb
stos
jae
xor
inc
scas
add
outsl
inc
or
scas
jb
loop
pop
imul
adc
xor
insb
add
call
adc
jg
dec
inc
into
imul
jmp
sbb
push
and
outsb
add
mov
addr16
sub
insl
incl
xchg
js
into
inc
pop
inc
sub
add
ret
sub
cmp
mov
dec
in
sub
out
in
jne
add
pop
push
add
jo
pop
lods
stos
mov
push
add
and
rorb
add
mov
mov
xor
cmp
into
lret
add
add
and
hlt
xor
mov
test
add
and
stos
push
aad
cltd
call
lret
scas
mov
loope
sub
pop
jno
rcrb
sub
xchg
rcll
test
and
push
es
and
mov
xor
jnp
sbb
mov
push
pop
mov
or
cmp
cmp
daa
cmpb
cld
imul
stos
jae
xchg
push
add
call
call
and
adc
ljmp
mov
pop
nop
jnp
or
add
mov
enter
add
cmp
pushf
ret
push
in
dec
xchg
aad
dec
icebp
pop
and
push
es
mov
ja
andl
push
cwtl
pop
adc
lock
push
popf
xor
jb
mov
lret
inc
into
cld
push
leave
xor
or
mov
push
sahf
mov
sarb
add
pop
or
push
push
push
jne
adc
mov
cmp
inc
inc
xchg
fnstcw
loope
adc
je
fcmovnb
inc
es
mov
add
andl
out
mov
adc
hlt
jb
lods
mov
pusha
enter
pop
fcomp
dec
test
test
jbe
xchg
sbb
je
sub
int3
push
push
adc
add
pop
ljmp
push
fiaddl
popa
or
sahf
test
push
cmp
mov
and
xchg
xor
mov
xchg
sub
ficoml
subl
jl
add
xor
or
jne
stos
jp
ljmp
hlt
loope
shl
or
jg
ret
aad
pop
ss
cltd
sbb
and
push
scas
test
jge
aad
add
adc
sub
xor
ljmp
test
inc
mov
pop
mov
and
or
cs
or
mov
lret
push
fldl
mov
add
push
daa
sbbb
mov
sub
pop
loopne
pop
sub
cwtl
mov
jb
add
add
adc
push
in
push
adc
pop
inc
mov
and
out
xchg
sbb
push
fcom
push
scas
adc
lcall
sbb
xor
cmp
mov
aam
stos
mov
loope
sbb
scas
and
dec
loope
mov
adc
inc
mov
in
leave
push
or
xor
jl
add
ror
scas
push
mov
add
inc
jne
popa
rolb
enter
and
sbb
cmp
push
popf
pop
pop
sub
cmp
mov
mov
push
rcrl
add
add
in
cmp
out
xor
mov
sbb
fists
add
mov
aam
icebp
sbb
push
sbbl
mov
add
lret
and
rorl
dec
mov
mov
jbe
jmp
jns
loop
dec
mov
adc
sub
or
xorb
icebp
aas
mov
adc
cli
ffreep
pop
mov
adc
lcall
lcall
cmpsb
xor
cmp
clc
or
enter
or
add
aas
xchg
dec
jp
xor
loope
xor
mov
push
cwtl
shr
xor
mov
xor
les
dec
push
and
subb
popa
xchg
dec
sbb
test
enter
push
das
mov
cld
ja
scas
sub
push
inc
addb
xchg
cmpsb
xor
loopne
or
jp
mov
in
xchg
adc
and
inc
pop
and
adc
je
adc
mov
jne
lret
sbb
and
mov
or
mov
inc
xchg
or
and
add
and
pop
inc
mov
inc
push
daa
or
sahf
push
test
addl
pusha
sahf
dec
into
add
loope
and
mov
jo
adc
loopne
add
inc
sub
in
popa
mov
mov
xchg
xor
je
jp
cmpsl
fwait
loope
ret
cmp
cmpsb
mov
jg
scas
sbb
lcall
es
int3
shrb
or
push
scas
mov
push
inc
popa
xor
out
loopne
mov
or
mov
push
mov
cmp
pop
or
rcrb
lcall
sub
and
jb
leave
lcall
cli
adcl
xor
lcall
or
sbb
add
xchg
ret
add
lods
js
out
xor
out
int
xorl
mov
fisttpl
cmp
jno
sbb
inc
std
rcl
fisttpl
add
repnz
inc
jge
dec
and
jo,pn
aam
dec
lret
mov
sti
xchg
ss
sub
pop
adc
dec
inc
fmul
sub
dec
push
or
mov
mov
lret
sub
push
jns
adc
xchg
shr
int
in
inc
pop
jecxz
xor
jnp
into
mov
jecxz
mov
es
inc
mov
addr16
jb
in
dec
sbbb
push
fsubs
imul
mov
es
test
or
dec
ret
inc
xor
mov
push
mov
test
test
and
push
dec
mov
movsl
push
mov
push
cltd
push
xchg
jae
mov
mov
sti
inc
xchg
push
sub
pop
mov
adc
cwtl
ret
add
inc
roll
fst
sahf
jae
nop
scas
fs
scas
add
popa
mov
lcall
cltd
ret
xchg
ret
mov
call
mov
dec
shl
cs
or
push
xchg
push
fs
jnp
orl
ljmp
cltd
lcall
sub
push
fwait
mov
int3
mov
dec
xchg
out
or
sub
inc
sbb
adc
sbb
push
loope
sarl
adc
pushf
mov
mov
xor
xchg
add
pop
mov
inc
push
xor
or
pop
js
cmp
repnz
add
js
pop
cmp
mov
adc
xlat
aad
xor
or
aaa
add
and
add
enter
xor
push
es
sub
mov
lret
int3
in
inc
shll
negl
sub
rorb
jmp
sub
sbb
add
push
adc
inc
and
hlt
subb
movsb
ffreep
imul
xchg
std
mov
sti
js
adc
mov
or
js
sub
inc
iret
sub
or
pop
inc
out
push
test
mov
js
and
inc
gs
mov
loope
or
in
test
fnsave
fwait
incl
inc
and
idivb
mov
ret
pop
mov
mov
and
popa
mov
cmp
test
push
add
push
stc
std
and
lds
ljmp
and
jge
inc
jno
sbb
pextrw
stos
or
fcompl
loop
xchg
jecxz
xchg
rcll
xor
test
mov
jl
or
xchg
xor
mov
cmp
inc
loopne
mov
adc
jge
adc
ret
adc
std
add
test
pusha
lret
rclb
leave
inc
sub
in
sbb
bts
sbb
cmp
addb
or
mov
sub
sbb
or
adc
mov
mov
or
addb
mov
jns
call
insl
or
cmpb
repz
push
or
cltd
mov
lret
xor
mov
sbbb
es
inc
push
mov
pop
and
push
mov
push
pop
mov
ret
popa
lret
lock
popf
add
sub
lea
add
pusha
or
dec
add
cmp
mov
adc
hlt
push
mov
rorb
dec
pop
pusha
jo
push
in
xor
adc
add
jg
sbb
jb
add
add
adc
cmp
or
sub
push
cmc
adc
divb
or
sub
dec
lock
push
add
add
add
lods
mov
inc
add
in
out
pop
push
cmc
mov
xor
cmp
push
jb
pop
not
pop
push
pop
mov
stos
iret
push
pop
push
sub
inc
jae
rcrl
aaa
push
ret
orl
sub
mov
xor
loopne
jae
mov
orl
rclb
cmp
add
push
xorb
xlat
inc
aam
push
pusha
xor
xor
test
pop
pop
or
loopne
fs
push
sbbb
inc
mov
push
sbb
and
sub
adc
stos
adc
aam
dec
add
cmc
sub
ret
pop
rcrb
adc
push
lds
imul
outsb
cmp
lret
aad
xlat
sti
lds
pop
xor
jne
and
pusha
mov
jo
pop
pop
xchg
test
xor
sub
lcall
mov
popl
cmpsb
push
inc
mov
cmpsl
cwtl
add
cwtl
and
adc
add
push
jnp
mov
push
adc
add
pop
cmp
loopne
iret
mov
push
push
test
mov
adc
stos
int
mov
call
lock
repnz
mov
push
mov
add
sbb
ret
sti
mov
mov
icebp
insl
push
or
pop
scas
push
shrb
nop
xor
sbb
cmc
cmpsb
test
inc
repz
pop
add
adc
mov
sub
xor
test
mov
push
mov
les
dec
das
test
ficompl
cwtl
ss
jg
int
sbb
cmp
push
adc
loopne
xor
int3
mov
inc
fildll
aam
or
in
loopne
adc
pop
test
sbb
xchg
pop
xor
add
ja
mov
push
faddp
inc
in
jne
ljmp
jo
sbb
cli
aaa
push
xor
mov
push
lret
pop
sbb
mov
xchg
push
scas
mov
dec
xor
es
mov
or
sbb
mov
pop
sbb
in
mov
lahf
pop
nop
test
adc
adc
add
xor
add
test
int3
out
cmpsb
scas
xor
or
scas
push
in
inc
push
push
sbb
xchg
and
repnz
popa
push
and
or
xchg
jge
loope
rdtsc
and
or
pop
jmp
adc
mov
test
cwtl
cmp
adc
add
imul
push
xchg
bnd
xor
sbb
jno
sbb
dec
pop
pop
push
adc
jl
stos
push
add
in
push
or
mov
int
hlt
or
xor
push
insb
out
fstpl
push
sbb
xchg
xor
cli
inc
sbb
jmp
lods
nop
mov
or
je
cltd
pusha
pop
pop
movsb
pop
cwtl
pop
cs
mov
es
mov
and
mov
jo
cmpsl
adc
bound
cmp
nop
adc
mov
xor
test
dec
push
cmp
rcr
push
inc
xchg
mov
out
sbb
or
je
mov
lcall
rcll
and
lods
and
sti
insl
dec
adc
xorb
nop
mov
sub
imul
push
xor
sub
mov
aam
sbb
cld
iret
xorl
loopne
pushf
sti
xor
jg
pop
sar
in
jle
sbb
scas
push
sbb
add
daa
movsb
adc
lock
cld
push
outsb
loope
enter
mov
and
mov
jge
jnp
jno
test
test
icebp
loopne
pop
add
pop
and
mov
and
int3
stos
loopne
jae
xor
mov
rcl
mov
dec
mov
inc
mov
pop
pusha
pusha
xchg
or
mov
mov
xchg
mov
dec
push
add
and
ret
or
xchg
jecxz
adc
ret
adc
sbb
int
or
mov
les
add
xor
std
es
scas
push
scas
insb
push
shrl
pusha
sub
dec
loopne
push
fs
push
push
xchg
cmp
test
lcall
dec
add
adc
test
dec
mov
subb
inc
test
aad
std
jle
pop
adc
sub
cmp
xor
sbb
arpl
inc
insl
inc
test
fimull
xor
jo
rol
xchg
adc
ljmp
xchg
mov
inc
mov
icebp
mov
cltd
push
inc
push
es
mov
push
push
pop
in
jb
push
inc
sbb
in
mov
rolb
hlt
in
push
mov
jo
addl
out
adc
cmpsl
or
dec
sbb
xchg
mov
pushf
adc
and
insb
ss
sub
iret
add
fbld
nop
rcll
xchg
or
popf
jg
out
lcall
add
subb
add
inc
xor
stc
push
sar
cs
mov
loope
add
inc
rol
push
xchg
sub
add
out
pop
jnp
mov
push
jl
pop
cmp
mov
jae
int
sub
add
adc
dec
test
enter
aam
adc
loopne
fldt
or
mov
push
loopne
out
incl
andb
push
jae
mov
or
sbb
jb
cs
pop
arpl
push
mov
pop
cmp
lea
mov
repnz
jb
test
cmp
fistps
adc
stos
sbb
jmp
addl
jbe
mov
outsl
mov
xchg
jnp
cltd
movsb
sub
or
or
sub
lods
xchg
sbb
xor
shrb
in
push
shlb
xor
lahf
test
inc
push
add
inc
nop
jae
add
mov
inc
repnz
add
pop
sbb
js
jne
mov
add
ret
sbb
push
lods
pop
scas
mov
daa
push
jo
sub
loopne
mov
pushf
ljmp
mov
xor
test
out
xlat
mov
pop
mov
dec
nop
cmpsl
ljmp
mov
jo
scas
jb
in
and
inc
dec
jb
sbb
xchg
mov
jb
mov
lds
sar
jmp
push
bound
add
ret
in
and
add
cmp
cs
test
xchg
jae
fistpl
sbb
inc
or
sbb
and
mov
cmp
pop
orl
push
enter
xchg
xor
and
addb
jae
push
dec
out
inc
popf
lcall
dec
in
pop
xor
adc
fwait
ret
push
adc
lock
pop
je
fdivl
lret
or
mov
in
jl
pushl
mov
sbb
jb
cltd
sbb
rol
inc
out
lea
mov
jmp
je
psrld
jbe
xor
aad
subps
je
pop
add
pop
rcl
pop
add
orl
jge
push
push
jo
mov
push
and
xchg
push
add
inc
shlb
mov
enter
loop
stos
or
lock
or
pop
lahf
dec
pop
jnp
sbb
jne
push
mov
or
ficoml
or
ret
and
add
pop
inc
push
add
or
push
inc
loope
pushf
mov
jne
mov
or
imul
xlat
pop
ret
pop
mov
sub
push
xor
push
mov
hlt
outsb
icebp
pushf
cmp
test
sbb
pop
cltd
enter
pop
dec
jp
es
inc
scas
pop
adc
jne
xchg
push
lret
push
movb
inc
pop
push
inc
lret
mov
cmp
ret
rorl
scas
movsb
pop
mov
adc
dec
mov
xor
jo
add
lea
aas
inc
inc
sub
dec
xchg
push
jo
or
dec
push
clc
andb
sub
sbb
or
in
sub
inc
xchg
ret
dec
lods
fisubrl
mov
cltd
popa
rcrb
add
mov
in
sub
lds
sbb
andl
push
js
sbb
mov
sub
sbb
inc
es
cmp
cmpb
mov
and
inc
rcrl
cli
mov
or
sbb
sarl
or
je
cli
cltd
dec
inc
jne
stos
add
xor
cmpb
pop
jmp
scas
out
gs
lcall
add
ret
test
mov
scas
or
dec
orl
push
sbbl
sbb
mov
push
cmpsl
pushf
lret
shlb
jecxz
pop
mov
insl
xchg
out
and
pop
pop
test
jne
or
xor
aas
stos
adc
in
mov
sbb
test
adc
loop
data16
adc
addl
pusha
icebp
mov
xchg
xchg
and
pop
inc
in
scas
ficoml
repnz
in
and
push
pop
pop
or
dec
call
adc
test
or
cli
inc
lcall
fisubs
jle
pop
add
stos
imul
scas
jnp
cld
jb
cli
imul
test
and
pop
mov
push
mov
xor
bound
decl
or
movsb
and
pop
mov
cmpsl
xor
or
xchg
ljmp
or
loopne
loopne
add
sub
lcall
sub
push
hlt
cmpsl
mov
push
ret
mov
repnz
cwtl
sub
pop
in
enter
leave
loopne
jae
dec
cmc
mov
in
lret
scas
cmp
pop
icebp
push
sbb
lcall
lret
in
cmp
jmp
mov
push
rclb
ficoml
mov
add
pop
or
dec
sbb
add
push
cs
jo
inc
xor
lods
outsb
mov
add
mov
jo
xor
js
dec
repz
mov
cmpsl
and
jle
nop
mov
enter
movsl
and
inc
mov
pop
or
daa
dec
lahf
xchg
push
push
xor
cmp
es
mov
fwait
shlb
adc
jo
mov
dec
push
or
xor
add
adc
cs
inc
pop
xorl
mov
and
dec
dec
xchg
xor
mov
cmp
or
add
push
push
aam
cmp
sbb
adc
push
lods
adc
inc
xchg
or
stos
lock
mov
dec
rolb
pop
adc
sti
daa
or
es
rcrb
xchg
xchg
sub
ret
fs
sbb
mov
push
adc
arpl
inc
push
sub
in
addr16
stos
loope
cld
cmp
jo
and
jnp
bound
inc
scas
pop
scas
dec
clc
adc
and
jb
mov
sbb
lret
ret
movsb
fimull
les
popa
loop
xchg
push
pop
sbb
inc
sbb
jg
push
mov
push
add
out
stos
sbb
sub
notb
enter
scas
vsubpd
mov
stos
into
fsubs
push
jb
lret
in
push
cmp
dec
push
push
cmpsb
pop
lods
ficomps
add
jne
arpl
sbb
leave
je
rcrb
mov
imul
inc
sbb
ljmp
popl
popa
sub
inc
pop
jae
mov
xchg
loopne
or
sub
dec
in
add
fimull
mov
inc
inc
jae
pop
mov
cli
xchg
cltd
add
dec
inc
pushf
mov
scas
mul
xchg
mov
add
fisubrl
nop
push
insl
xorl
cmp
and
shr
loope
push
pop
xchg
les
adc
and
add
xor
ss
add
or
scas
inc
pushf
call
jle
hlt
inc
xor
int
rcll
xchg
xor
sub
adcl
sti
sbb
xchg
mov
addl
shl
and
push
sub
or
shll
mov
mov
xor
pushf
pop
lret
and
cs
add
xchg
leave
push
int
mov
xchg
pop
cmc
pusha
ret
gs
mov
and
dec
mov
adc
or
jbe
std
add
add
orb
lds
add
xor
add
pop
jmp
inc
add
lock
out
or
clc
sbb
xlat
nop
mov
inc
jl
and
push
xor
test
or
repnz
push
cmpsb
jbe
imulb
inc
repnz
cmp
or
sub
out
push
mov
mov
orb
jmp
add
call
pop
icebp
dec
xchg
orb
xor
or
dec
jp
lea
enter
lds
mov
xor
xor
push
xor
cmp
cld
xor
pop
mov
enter
jo
or
aam
std
mov
inc
cmp
or
or
pop
mov
dec
jo
push
mov
das
int
push
sub
mov
pop
jp
int
adcb
push
and
add
jne
mov
popa
lock
pop
adc
bound
cmp
push
push
or
mov
decl
pushf
leave
in
add
push
add
adcl
loope
cmp
inc
add
rclb
jb
in
or
fmulp
or
push
lret
push
add
and
js
cli
mov
data16
pop
push
cmp
xor
jecxz
filds
inc
adc
push
inc
je
sbb
pop
mov
mov
mov
hlt
and
mov
jbe
mov
std
outsl
adc
shl
xchg
or
sbb
inc
sub
or
loop
je
xchg
aam
ret
arpl
aam
call
dec
and
adc
sub
inc
adc
push
cmp
adcb
mov
bound
push
inc
lret
aam
pop
add
je
xchg
sbb
sbb
cvtps2pi
inc
add
dec
mov
dec
adc
push
movsl
addb
xchg
jne
mov
and
or
dec
out
push
fdiv
sti
push
sub
push
jnp
cmc
fadds
mov
xor
add
cli
into
xchg
loop
aam
sub
jp
and
pop
or
inc
gs
pop
insl
or
mov
mov
sub
xchg
mov
mov
insb
int3
out
test
lret
mov
dec
es
and
jnp
sub
jmp
shlb
mov
ret
enter
lret
mov
dec
jo
mulb
jb
inc
sbb
pop
xor
or
ret
mov
push
pop
imul
pop
mov
push
aam
xor
sbb
jb
cmp
cmp
loope
sti
cmp
les
adc
adc
push
mov
or
sarl
xor
add
out
ret
pop
in
cmp
lret
dec
xor
sub
scas
adc
out
cs
jmp
cmpsb
and
pop
cmp
push
scas
lret
mov
jb
iret
xchg
or
sub
and
stos
add
sbb
cmp
push
mov
mov
test
mov
push
ret
jb
jae
mov
in
push
andl
test
ja
sub
mulb
inc
xchg
adc
stc
data16
inc
movsl
dec
pop
sub
addl
mov
mov
aas
xchg
pop
jne
enter
xor
push
fcoms
sub
add
mov
push
mov
test
call
mov
idiv
clc
add
inc
sub
sub
cmp
xchg
fwait
push
pop
jb
jne
add
inc
xchg
mov
shrl
test
jecxz
nop
fstpt
insb
push
aam
shlb
adc
std
aam
push
lock
ss
xchg
orl
lahf
xchg
or
xchg
push
cmp
push
out
lods
push
add
cmp
pop
push
test
gs
sti
sub
loope
push
push
pop
or
cmc
jnp
add
push
divb
out
adc
aaa
adc
push
cli
loopne
pop
cwtl
xor
cmp
rclb
test
and
roll
sub
fwait
lret
movsl
dec
lods
inc
cmpsb
jo
decb
xor
scas
push
jecxz
test
les
add
add
lock
mov
pop
cmp
inc
jnp
movb
sti
shll
inc
xchg
test
mov
ret
pop
jg
push
push
xor
stos
pop
loopne
leave
and
test
shrb
sbb
subl
add
cmpsl
fisubs
adcb
or
ret
cli
pop
in
aaa
inc
loopne
push
pushw
sub
push
pop
lret
cmp
and
cmpl
cmp
out
add
cmp
out
cmp
pop
add
in
and
sbb
test
dec
jno
jae
es
insb
inc
add
test
mov
mov
stc
adc
fs
or
testb
lds
adc
pushf
imul
ret
mov
push
push
cmp
gs
cmp
aaa
add
jno
sub
pop
nop
inc
and
addr16
dec
outsb
inc
add
and
cmpsb
pop
insl
addr16
push
jne
mov
jle
xchg
mov
add
cltd
sub
out
add
xor
repnz
adc
cmpsb
inc
int
mov
cmpb
pop
and
and
lcall
push
mov
xchg
or
popa
popf
rcrb
adc
add
or
adc
es
add
jno
aad
sbb
jno
testb
dec
mov
scas
push
xchg
cmpsb
les
sbb
push
cmc
es
leave
push
inc
and
inc
into
mov
rorb
jae
lods
xchg
adc
jmp
jmp
push
jo
lahf
or
enter
sub
lret
testl
mov
sub
test
in
jb
and
divb
fsubl
out
rclb
data16
loopne
adc
jns
pop
cwtl
cmp
int
je
dec
adcb
cmp
es
xchg
dec
xchg
loopne
push
addl
adc
shlb
mov
inc
arpl
mov
lock
dec
sbb
add
jmp
sbb
in
sbb
add
cltd
loope
sub
in
dec
rolb
cwtl
or
in
aad
loopne
stos
or
push
xor
fs
or
sub
xlat
cwtl
pop
cmp
outsb
pop
inc
mov
adc
xor
mov
mov
sbb
add
push
out
test
bound
outsl
es
in
lds
or
xchg
mov
lret
in
clc
fildl
jmp
adcl
and
adc
aad
sbbb
fiaddl
adc
push
jo
rclb
bnd
mov
enter
adc
in
or
jo
pop
dec
sbb
sbb
or
fs
std
xor
mov
xor
xchg
sahf
push
into
loope
push
out
cmp
pop
mov
pop
aad
insb
dec
jb
loope
cmpxchg
pop
jnp
ret
jo
dec
push
jle
xchg
xlat
dec
cltd
jb
mov
pop
shlb
subb
scas
aad
scas
jp
movsb
push
or
adcb
adc
push
adc
or
inc
push
or
sbb
lcall
mov
sbb
mov
flds
pushf
stos
data16
jbe
pop
xchg
xor
inc
sbb
scas
adc
nop
stos
cmp
outsl
or
add
mov
cltd
js
pop
call
subl
xchg
addl
mov
adc
ret
sub
sbb
jns
andl
jmp
jo
scas
or
sbb
mov
mov
mov
clc
cmc
shll
cmp
jge
push
and
test
sub
mov
inc
pop
scas
xor
cmp
mov
and
push
pop
nop
ljmp
cmpsb
lret
dec
xchg
xchg
cwtl
sbb
push
arpl
or
mov
outsl
ljmp
ds
sub
scas
sbb
in
addb
sub
or
cmp
inc
movsb
sahf
aam
mov
xchg
push
mov
jp
cwtl
add
test
aam
je
and
test
repnz
sub
test
dec
inc
out
aaa
dec
sbb
scas
mov
pop
sub
add
cld
inc
sub
xor
stos
inc
testl
and
lcall
adc
or
or
mov
stos
inc
imul
sub
sbb
xchg
pop
push
mov
orb
cwtl
in
jmp
lret
mov
scas
push
rorl
cmp
xlat
or
add
je
pop
enter
adc
push
add
pop
inc
jnp
adc
cwtl
or
into
xor
jge
xor
fsubrs
adc
enter
test
xor
inc
nop
sub
test
sbb
adc
push
sbb
mov
inc
add
jb
adc
xchg
push
add
lret
xchg
adc
dec
loopne
in
mov
push
add
dec
pop
lods
jmp
outsb
repnz
jb
pop
test
xchg
int3
push
inc
inc
scas
mov
cmpsb
mov
mov
xchg
pop
test
adc
jmp
fs
pop
mov
or
fninit
adc
inc
lods
mov
inc
cltd
loopne
xchg
mov
scas
lds
dec
push
inc
mov
ret
xor
jb
and
pop
mov
jb
movsb
pop
and
enter
rorb
push
hlt
or
jo
inc
fadds
cs
data16
xchg
lret
cmp
scas
js
hlt
jg
push
std
insb
mov
js
inc
pop
add
sbb
pop
dec
mov
push
add
xchg
hlt
out
inc
pop
add
aam
sbb
mov
ss
and
add
filds
fcompl
cmc
push
aaa
adc
push
sahf
mov
call
mov
mov
daa
loop
push
xor
mov
inc
adc
pop
stc
cmp
xchg
push
fisubl
and
inc
shll
insb
shlb
loopne
xorl
adc
rol
xor
add
test
rolb
fisttps
inc
push
adc
arpl
cmc
adc
or
lcall
inc
mov
xchg
mov
cmp
xchg
mov
push
lock
xchg
sub
sub
xchg
arpl
add
adcb
pop
jno
lock
add
xor
mov
sub
xchg
or
or
xor
xor
xchg
aam
cwtl
push
jge
loopne
icebp
sbb
add
add
inc
push
loopne
mov
pop
loopne
fld1
addl
cwtl
test
sbb
or
and
add
push
add
push
mov
cmp
adc
mov
sub
push
popf
stos
popf
jo
mov
jl
stos
or
test
lret
add
adc
dec
push
xorl
sbb
iret
pushf
in
mov
sbb
inc
cwtl
or
xlat
and
inc
leave
icebp
es
push
jb
stos
inc
orl
icebp
or
inc
or
test
inc
mov
or
or
enter
gs
xchg
push
nop
movsl
inc
and
cmpsl
mov
push
sub
into
xor
stos
stos
mov
dec
sarb
pop
jno
jae
mov
adc
push
push
dec
pop
mov
scas
cmpsb
mov
mov
ret
pop
mov
or
pusha
sub
mov
pop
cs
sbbl
inc
xor
sbb
cli
test
jo
push
xchg
lcall
movsl
xor
test
stos
std
dec
add
push
push
inc
icebp
mov
in
call
test
test
insb
out
in
pushf
push
inc
andb
pushl
add
push
adc
inc
into
pop
rorl
sub
je
add
shll
sub
add
popa
add
or
mov
xor
loope
pop
sub
shrb
adc
sub
lods
jne
dec
mov
in
divb
testl
or
roll
lock
subl
dec
push
cmp
pop
add
pop
mov
cmp
int
push
sbb
aam
mov
cmpsb
incb
jp
daa
fdivrs
or
and
mov
je
mov
cmpsb
sub
inc
and
test
mov
out
xchg
and
out
adc
jl
rclb
sub
dec
push
cmp
cltd
jb
sti
lret
push
adc
bound
mov
rorl
inc
jnp
or
cmp
nop
xchg
inc
jecxz
xchg
or
mov
and
or
in
mov
sbb
mov
and
sub
into
andl
xchg
mov
push
aam
xor
incb
push
or
pop
adc
sub
sub
lcall
cmp
pop
xchg
movsl
jb
push
mov
mov
jo
push
pop
loope
ljmp
adc
push
cmp
add
jecxz
xlat
dec
aam
sbb
mov
pop
cmpsl
cmp
xor
add
jb
sbb
dec
imul
lcall
cmpsl
aad
mov
popa
add
inc
xor
nop
jns
or
push
pop
mov
lret
dec
pop
ror
in
rolb
mov
jb
dec
rcrb
ss
dec
xchg
jns
sbb
cs
and
outsl
or
inc
int3
daa
mov
and
push
pop
test
dec
lods
out
stos
jp
jle
mov
push
jnp
cmp
imul
sub
inc
sbb
pop
or
xor
orb
add
adc
pop
adc
xchg
imulb
xchg
xor
inc
sub
inc
cmc
fistpl
movsb
jb
fists
das
pop
aad
arpl
add
adc
mov
adc
or
xchg
cmp
dec
push
add
add
inc
add
cs
fimuls
loopne
dec
js
out
lahf
jecxz
rorl
loope
sbbb
mov
cmpsb
pop
ljmp
inc
int
dec
js
pop
jb
or
aam
jbe
dec
xchg
insl
push
dec
test
lret
mov
add
andl
sbb
stc
adc
sbb
sbb
arpl
sbb
push
adc
sbb
or
lcall
mov
cmpsl
push
xor
xchg
xchg
push
cmp
xlat
fsub
and
or
jns
add
mov
adc
pop
sub
sub
sub
lods
push
push
or
lcall
loopne
jmp
lcall
push
pop
pop
sbb
or
orl
addb
enter
pop
cmp
dec
mov
cmp
mov
lret
sub
adc
jae
rolb
push
adc
inc
mov
xor
cmp
mov
repnz
adc
inc
add
test
jg
mov
sbb
xor
xchg
scas
pop
pop
or
lods
jo
icebp
stc
dec
cmpsl
enter
pop
movl
sbb
jl
rcl
xor
pop
sahf
mov
jae
in
sbb
mov
shrb
in
add
push
test
push
negl
stc
inc
popl
push
mov
inc
and
xchg
stos
add
cmp
bound
in
xchg
add
test
mov
mov
or
dec
sbb
push
xor
jp
int3
inc
mov
dec
pop
mov
xor
jge
sub
stos
or
push
out
hlt
pusha
push
mov
and
pop
jmp
idivb
jg
dec
and
add
es
jae
jb
dec
inc
mov
in
jae
jb
pop
cmp
xchg
repz
or
push
mov
lcall
js
ret
adc
lcall
xor
ret
movsb
loopne
cwtl
jb
lods
push
push
bound
pop
aaa
push
mov
cmpb
in
loopne
mov
xchg
sub
or
stos
jo
push
sub
jae
es
mul
jae
inc
inc
icebp
push
daa
addb
jo
mov
and
stos
jecxz
add
fcmovnbe
push
les
into
inc
xchg
loope
add
fcmove
push
stos
inc
jno
cmpl
sub
xor
fisubl
inc
gs
push
lock
fiadds
pushl
add
call
adc
mov
sti
out
mov
std
jne
fistl
mov
cltd
push
push
popa
ds
add
inc
rorl
enter
cmovl
enter
jb
outsb
inc
xchg
lods
jae
outsb
jp
in
mov
or
push
mov
xor
lret
out
sub
jo
leave
pusha
dec
pop
in
sbb
popa
sub
jg
jb
dec
sub
stos
and
push
push
lods
out
sub
shl
jb
int
mov
pop
mov
cli
add
in
inc
mov
xchg
and
push
lcall
mov
adc
pop
mov
ret
push
add
test
dec
push
and
pop
in
xchg
mov
pop
enter
add
jp
jno,pt
and
gs
popa
and
adc
push
push
arpl
push
dec
sbbb
push
daa
push
jae
stos
cmpsl
or
cmc
shlb
andl
sbb
jo
mov
in
ret
pop
leave
test
push
cmp
cwtl
mov
orb
shlb
cs
stos
pop
inc
mov
mov
mov
enter
jb
shlb
cmpsl
mov
cld
fidivrs
enter
ljmp
cmp
jb
add
push
or
inc
out
fildl
push
and
lea
pop
es
jp
xchg
popa
push
mov
xorl
hlt
mov
call
xor
faddp
pop
mov
jmp
jb
icebp
cmp
mov
inc
push
and
popa
jb
emms
or
cmpl
js
inc
or
xchg
leave
add
inc
cmp
int
std
pop
cwtl
add
or
pop
mov
xchg
cltd
jo
and
in
addl
jo
in
xchg
lds
cmp
rcrl
inc
sbb
mov
and
mov
pop
inc
ss
xor
jae
mov
rcl
sub
sub
jo
pop
adc
jo
das
dec
sbb
movsl
jb
sbb
loop
and
enter
int
or
loope
loopne
ja
into
inc
mov
dec
ror
cltd
mov
in
adc
pushf
stos
sbb
jnp
pop
push
lret
rolb
jle
mov
mov
dec
in
pop
test
inc
pushf
mov
stos
or
xchg
pop
inc
or
xlat
fsubl
push
add
jne
in
inc
xor
jecxz
mov
aad
mov
imul
mov
dec
pop
adc
rclb
dec
cmp
in
aam
and
adc
add
addr16
rcll
sub
inc
out
mov
stc
pop
hlt
add
push
push
xchg
sbb
jo
ficomps
inc
xchg
inc
inc
shrb
cmc
inc
or
fistps
pop
loope
and
shlb
mov
or
mov
sbb
and
push
dec
lods
ja
add
adc
push
push
loope
pop
in
shrl
addr16
and
adc
ror
mov
add
call
movsl
xor
gs
push
scas
leave
pushf
sub
adc
stos
enter
inc
xchg
lcall
sti
loopne
adc
add
dec
add
and
scas
std
loopne
cmpsb
and
cmp
repnz
or
lret
lea
stos
mov
call
add
dec
dec
xor
and
popa
mov
dec
xchg
push
push
loopne
inc
mov
sub
or
insl
rorb
mov
mov
add
xor
and
leave
in
adc
mov
pop
pop
fsubl
sbb
std
inc
push
xor
lock
cmp
inc
ret
in
cmc
loopne
dec
aam
push
stos
out
add
jns
cmp
jo
stos
cmp
mov
lcall
mov
dec
and
adc
sub
cmp
inc
jb
add
push
cmp
adc
ss
add
push
xchg
adc
loope
jp
inc
jne
into
add
or
and
mov
lret
mov
jo
inc
cmc
nop
push
push
rclb
jo
sahf
xor
jnp
lds
and
idivb
add
je
sub
inc
xchg
jmp
adc
or
cmpsb
dec
inc
hlt
loopne
add
sbb
adc
cmpsl
sahf
xlat
test
mov
push
add
incl
adc
cld
daa
ja
add
mov
or
leave
ret
leave
cmpsl
roll
ret
out
popf
sub
mov
push
jmp
add
ret
sbbl
fildll
mov
mov
scas
inc
sub
mov
inc
imul
mov
sbb
test
leave
jp
adc
sbb
ficoml
push
jae
inc
js
push
or
inc
pop
jl
sarb
mov
popa
jo
sub
movsb
cmpsl
std
push
or
push
xchg
xorl
dec
cmp
mov
mov
mov
aad
movsl
cmp
jb
rorb
repnz
aad
and
out
ret
mov
in
or
add
je
add
lods
push
loope
ret
pop
mov
and
jl
jb
pop
push
xchg
out
pop
popf
ret
roll
xorl
inc
in
rclb
loope
sbb
aas
xlat
test
loop
lcall
aam
xchg
sub
dec
mov
jne
push
pop
mov
add
xorl
out
repz
sbb
push
cmpsl
pop
dec
bound
xor
pop
pusha
enter
dec
push
lret
jge
add
inc
mov
push
or
push
jl
aaa
pop
adc
or
mov
jno
into
adc
pop
lret
jo
xchg
imul
dec
outsl
cmp
push
gs
inc
enter
cmp
xor
add
push
pusha
mov
add
addl
fdivrp
mov
in
sbb
movsl
ds
mov
fbstp
or
mov
mov
scas
add
mov
sti
jae
loopne
stos
stos
push
mov
adc
stos
sbb
push
aad
gs
push
push
mov
test
cwtl
cmp
push
call
loope
mov
shl
sbb
and
repnz
and
push
cmpsb
les
push
popf
stos
cltd
imul
mov
shrl
orl
and
push
and
sbb
inc
mov
shrl
scas
jae
or
jo
inc
xchg
addr16
push
lret
out
addl
je
lcall
push
aad
lods
cmp
mov
push
out
adc
loope
push
xorb
mov
pop
cmp
nop
imul
mov
adc
cmp
andb
in
cwtl
xchg
jno
cltd
fisubs
adc
push
sahf
add
es
push
push
mov
jge
and
jbe
aam
pop
faddl
pop
add
add
mov
push
sbb
cwtl
out
xor
pop
adc
add
sbbb
xchg
subl
dec
sub
mov
andnps
add
and
cltd
jb
data16
ljmp
xor
xor
in
mov
loopne
push
sbb
jl
enter
push
stos
leave
jb
xor
sbb
mov
test
mov
imul
jne
addps
sub
xor
sub
outsb
ret
mov
inc
cld
sbb
add
mov
paddd
adc
cmp
lcall
xchg
inc
cmp
enter
jle
daa
push
and
xchg
add
loop
mov
and
xor
popa
sub
sbbl
lcall
or
push
popa
ja
or
adc
jno
sbb
cmp
jb
add
lods
cltd
push
mov
fmull
pop
sub
hlt
nop
leave
loope
mov
inc
popa
push
or
test
cmp
scas
test
push
mov
rclb
dec
adc
int
and
loope
lods
stc
popf
pop
mov
insl
and
add
mov
cmpsb
push
inc
add
mov
sbb
inc
pop
std
inc
out
popa
jo
popl
cmp
xor
xchg
aad
push
mov
or
pop
xor
mov
stc
shll
ljmp
in
pusha
jo
add
mov
cwtl
addl
xchg
mov
or
xor
fmul
aam
in
dec
cmpsl
jno
sbb
jb
mov
mov
add
mov
shlb
int
push
sbbb
inc
shll
sbb
sbb
xchg
and
sub
imulb
jb
popf
mov
cmp
test
push
xlat
fiaddl
sbbl
sbb
sbb
scas
sbb
stc
add
loope
iret
bnd
xor
pop
cltd
and
fucomip
push
push
xchg
cmpsl
inc
push
hlt
out
mov
rcr
loop
or
inc
popa
push
ja
mov
or
stos
xchg
mov
lret
or
mov
mov
push
xor
inc
test
or
inc
stos
adcb
rorl
push
xor
and
jb
xor
loope
repnz
push
mull
push
mov
movsb
inc
mov
adc
clc
pop
cmp
jae
roll
lea
pushf
mov
in
sbb
mov
inc
xor
cmp
xor
mov
incl
sbb
out
adcl
cmp
mov
pop
outsb
or
add
fmulp
iret
jnp
adc
mov
xor
push
sub
jb
xor
dec
cmp
fldenv
cli
jo
add
sub
cmc
lds
jae
or
in
xchg
in
in
testb
testb
xchg
inc
and
aad
mov
pushf
lcall
or
add
rcrb
in
xchg
xorl
movsb
mov
and
adc
sub
push
cmpsb
dec
mov
in
inc
into
pusha
out
mov
cmp
push
sbb
pop
xor
xchg
push
and
sar
add
xlat
pop
push
rcl
frstors
je
ds
push
rdmsr
inc
das
dec
push
sbb
gs
out
or
jae
dec
sub
call
stos
inc
mov
and
leave
sbb
es
adc
aas
cltd
mov
push
xchg
mov
pop
imul
or
repz
add
jae
push
jno
js
les
dec
std
lcall
jb
inc
out
mov
mov
adc
add
mov
dec
adc
push
sbb
dec
push
push
insw
rorl
sbb
inc
mov
adc
pop
mov
ja
sub
dec
pushl
add
inc
cmpsb
adc
scas
add
cwtl
test
push
out
cs
in
mov
adc
inc
dec
and
xor
push
push
loop
jl
push
push
into
inc
leave
icebp
xchg
mov
mov
add
aas
enter
adc
xor
test
mov
stos
mull
call
pop
lods
sbb
sbb
xorl
add
shrl
imul
push
mov
inc
imul
scas
push
or
in
test
xor
xor
and
inc
lods
js,pn
xchg
add
cwtl
dec
jg
shll
jne
scas
mov
adc
jo
addb
lods
popf
jb
push
insb
jecxz
mov
jmp
mov
sub
pop
sbb
stos
leave
cwtl
dec
lds
aam
stos
cmp
mov
js
iret
out
test
shrl
rcrb
es
lods
data16
xor
or
mov
scas
or
mov
adc
es
dec
scas
stos
negb
fldt
cli
mov
lock
aaa
subl
mov
or
add
adc
pop
or
and
into
jmp
lret
xchg
pop
pop
xchg
shrl
push
loope
rolb
add
cmp
aas
scas
inc
subb
adc
pop
xchg
rcll
mov
or
push
and
dec
jno
cmp
test
xchg
sub
xor
shrl
fadds
push
ljmp
dec
insl
xchg
add
xor
push
and
mov
dec
pop
hlt
pop
or
pop
loop
xor
scas
jo
mov
outsb
push
push
mov
add
lret
aad
movb
add
call
xchg
popa
repz
or
outsb
adc
add
xor
dec
push
pop
test
cs
lret
inc
sahf
or
jmp
popf
or
or
jp
jae
or
jb
mov
cmp
notl
mov
lahf
scas
inc
add
inc
scas
leave
push
push
std
or
rclb
rcrb
add
icebp
cmp
mov
fcmove
xchg
xor
mov
mov
and
jno
adc
or
jne
sbb
es
in
loopne
xor
add
lret
and
addb
push
add
out
xor
icebp
imul
mov
sbb
pusha
sub
aam
cmpsl
dec
mov
out
xchg
add
xor
adc
adc
rclb
push
mull
cmp
nop
lahf
loope
or
test
test
push
stos
sbb
popa
mov
insb
lods
cs
push
aam
inc
xor
xor
out
sub
add
add
mov
or
rclb
sub
fcompl
xor
xchg
out
mov
inc
sbb
mov
out
add
inc
lock
or
enter
push
adc
sti
inc
add
add
xchg
fnstenv
jp
add
or
lock
addb
les
push
inc
inc
cwtl
or
and
push
sub
rcrb
test
out
push
sbb
dec
cwtl
or
shll
inc
popa
xor
pop
push
pop
xor
loope
insb
mov
filds
cwtl
enter
mov
pop
sub
or
pop
mov
lret
inc
jae
push
jp
stc
xor
cmp
orl
fiaddl
repnz
inc
sub
sbb
mov
pop
inc
out
test
loopne
mov
cmp
test
add
call
iret
mov
daa
xor
sbb
xor
mov
sub
add
dec
mov
hlt
sbb
and
loop
cltd
jb
leave
mov
push
xor
fimull
xor
push
adcb
pop
mov
insl
cmp
rorb
xchg
test
cwtl
xorb
cltd
mov
test
or
sti
inc
or
ret
cmp
jo
adc
add
add
ret
jo
mov
out
pop
xchg
repnz
jb
inc
and
pop
test
adc
stos
cmp
sub
xchg
cmc
xor
ret
push
push
pop
inc
int
cs
push
mov
dec
mov
pop
shrb
imul
sbb
lret
add
scas
faddl
stos
add
xor
push
xchg
add
rclb
mov
add
aam
inc
in
and
test
mov
pop
movsl
push
cmp
es
cmp
cltd
push
and
cmp
inc
cltd
insl
sahf
sub
nop
imul
cmp
cmpsb
xchg
xor
shrb
addr16
fisubs
loope
xchg
lret
add
pop
test
out
out
loopne
cmp
sub
mov
mov
enter
xchg
cld
call
jp
pop
mov
and
mov
pop
jne
outsl
push
nop
nop
mov
inc
pop
subl
test
adc
shrl
jp
jo
jae
loope
add
out
dec
lds
or
cmpl
push
imul
in
rcll
mov
push
je
push
hlt
mov
sbb
add
and
adc
xor
cmp
cmp
push
sti
jns
stos
pop
in
ret
shrb
cmp
xor
enter
xor
out
loope
les
pop
mov
inc
jno
test
xchg
ret
mov
push
repnz
inc
fstpl
sbb
rolb
popa
test
add
sub
jo
stos
mov
add
push
inc
or
sub
call
hlt
mov
pop
in
adc
sub
mov
pushf
xor
loope
add
sahf
mov
and
pop
mov
lret
pop
mov
add
cmp
add
mov
pop
jbe
scas
daa
mov
add
mov
mulb
push
jo
cmp
push
sahf
lahf
jbe
rcrb
cmp
das
enter
daa
mov
bnd
or
and
pop
jo
adc
sbb
ret
sub
xor
xorl
cmp
mov
fisttpll
sub
sbb
xor
sbb
and
push
scas
dec
cmp
xor
add
jne
sub
sbb
ret
or
lds
xchg
and
xchg
adc
cmp
outsb
pop
loopne
aam
cmpsb
sub
addr16
or
leave
movsl
mov
or
in
sahf
sub
xchg
ss
push
pop
pop
mov
cmp
or
sbb
adc
push
xchg
add
test
ret
in
fisubl
xchg
leave
popa
add
or
add
enter
in
mov
mov
test
inc
andl
jnp
xchg
and
pop
add
mov
cmp
ret
pop
rorb
adc
or
push
mov
loope
aam
in
add
or
rcll
push
sub
xorl
fwait
dec
sbb
pop
add
loopne
sub
add
or
call
sub
mov
mov
sbb
out
push
inc
pushf
or
je
mov
hlt
push
inc
jl
push
daa
cli
inc
insb
mov
sbb
sub
les
std
inc
outsl
pop
loopne
add
jo
adc
fcmovnb
add
sbb
sub
notl
xchg
or
inc
add
les
xlat
add
or
orl
iret
and
xor
dec
stc
sbb
mov
mov
into
or
je
outsl
push
mov
add
mov
and
mov
fwait
mov
pop
cwtl
or
pop
out
dec
and
or
sbb
pop
and
xchg
sub
or
xchg
mov
adc
movsl
sub
add
imul
mov
test
mov
popf
sbb
hlt
sbbb
xor
xchg
mov
pop
popf
sub
xor
sbb
pop
and
push
es
ljmp
andl
push
les
cmp
flds
cs
xlat
or
out
mov
cmp
and
inc
movsl
jo
sar
movsb
and
shlb
imul
ficoms
mov
test
test
cltd
mov
pop
fisubrl
sub
push
es
pop
in
add
lret
arpl
add
inc
movsl
jb
xor
add
adc
mov
cmpl
flds
xor
pop
fnstenv
add
orl
dec
les
call
sbb
out
mov
xor
push
dec
jne
and
in
in
mov
sarb
sub
or
pop
adc
cmp
dec
pop
inc
rcll
stos
mov
push
sub
in
or
and
ljmp
adc
pushf
sti
test
popf
pop
scas
test
jno
test
cmp
test
xchg
xor
shlb
or
pop
add
loope
cmp
aad
inc
sub
inc
mull
push
dec
arpl
push
lea
xlat
push
adc
jo
inc
inc
scas
add
add
xor
mov
xchg
push
inc
push
ret
les
push
test
xor
mov
add
call
pusha
jae
cmp
fstl
mov
dec
mov
sbb
ror
mov
sbb
xorl
stos
pop
imul
pop
cltd
dec
adc
push
arpl
or
mov
sbb
cmpsl
sbbl
daa
leave
out
sbb
cmp
lock
inc
jnp
aad
dec
xchg
jb
scas
test
daa
pop
mov
test
push
adc
idivb
sti
in
test
and
inc
addr16
or
xor
out
sub
imul
pushf
ficomps
pop
or
mov
aam
pop
mov
loopne
test
lds
pop
ficomps
push
inc
cwtl
ret
jae
ja
or
or
cmp
add
nop
ret
push
shlb
hlt
mov
or
shlb
add
add
in
mov
jne
add
cmp
scas
push
addl
or
fsubp
sbb
xchg
jae
push
aam
cltd
sub
xchg
leave
fiadds
or
push
add
sub
pop
in
inc
inc
pop
cmp
add
add
fs
adc
test
xchg
mov
es
inc
mov
les
jg
test
out
or
mov
insb
loopne
adc
fcoms
enter
cmp
ror
lods
inc
xchg
dec
inc
sub
mov
mov
inc
cs
jl
inc
jns
dec
outsb
inc
rcrl
adcl
mov
out
mov
repnz
popf
daa
sub
in
stos
mov
fs
imul
push
dec
int
sahf
xchg
lds
add
and
mov
push
cmp
in
pop
in
stos
or
pushf
mov
hlt
inc
ret
add
jb
jp
ja
inc
bound
or
mov
dec
adc
and
mov
ret
jae
rclb
or
mov
inc
mov
icebp
sub
lret
xor
jecxz
mov
add
imul
push
mov
push
in
aas
push
sbb
push
ret
or
push
rcl
or
cmp
or
lcall
ljmp
dec
xchg
jnp
cmpsl
mov
mov
lret
je
stos
jb
nop
xor
popa
mov
mov
mov
add
push
xchg
stos
add
pop
imul
pop
push
xchg
cltd
or
or
jg
stos
push
fs
sahf
negl
add
daa
adc
aad
inc
push
out
loop
dec
xchg
push
and
push
add
cltd
sub
mov
inc
lcall
les
inc
and
cmp
neg
sub
jb
and
out
pop
rolb
adcb
aad
adc
lods
lock
push
and
aad
adc
add
arpl
icebp
jo
cwtl
sti
and
cmp
lahf
mov
fstpt
pushf
jb
jne
cli
out
sbb
push
aam
adc
in
dec
pop
jno
push
std
ljmp
sbb
push
lahf
clc
cmc
jnp
cmp
cmc
add
lret
xor
add
ljmp
push
pop
sbb
adc
and
mov
js
movsl
cmc
push
test
add
ja
dec
aas
add
push
push
repz
pop
mov
mov
add
adc
ret
mov
adc
enter
pop
cmp
mov
push
adc
dec
push
cwtl
add
enter
mov
mov
aam
js
push
js
outsl
aam
push
mov
xchg
sub
adc
push
mov
xchg
aad
add
fisubrl
and
push
adc
fs
jg
push
cmp
xor
mov
int3
jbe
or
or
mov
aad
mov
outsl
dec
add
dec
add
xorl
adc
cmp
jo
adc
jo
dec
popf
cmp
pop
jae
pop
mov
loope
loope
cltd
or
and
push
sub
lcall
test
divl
dec
jnp
push
inc
cld
inc
ljmp
jge
mov
outsl
cwtl
mov
mov
adc
stc
jecxz
and
jg
jb
dec
cmp
in
inc
sub
push
int
ret
dec
jle
or
pop
cmc
testl
push
xchg
int
sahf
jb
fisubl
or
dec
cmp
addl
ret
mov
test
ret
andb
mov
mov
xchg
xor
int3
push
mov
add
mov
pop
mov
or
lods
jg
sub
add
test
sbb
dec
roll
mov
inc
fisubs
mov
push
and
push
add
or
mov
cvtpi2ps
push
inc
mov
xchg
cli
mov
jge
out
pop
cwtl
and
sbb
inc
jnp
xor
shrb
rcr
cmpsl
ficomps
or
dec
push
lret
add
lcall
cmpb
rolb
jns
aad
add
sbb
mov
or
xchg
loop
lret
xor
fadd
rcl
dec
leave
ret
psraw
xchg
std
mov
shlb
ret
adc
xor
add
pop
cmp
jo
sub
sub
inc
push
stos
mov
xchg
add
dec
inc
andl
adc
imul
rsm
or
sbb
add
and
popa
dec
ret
mov
cmp
shrl
loope
notb
adc
inc
test
sbb
dec
fs
xor
or
pushf
dec
ljmp
cs
jp
inc
mov
or
jecxz
xor
add
pop
lods
xchg
or
aam
mov
pop
loopne
fwait
jg
and
es
loopne
sahf
sub
out
or
stos
xorb
adc
mov
mov
inc
int
add
fs
add
push
pop
loope
pop
inc
xor
push
mov
nop
mov
addb
push
cmp
mov
cmpsb
test
jo
popa
xor
push
xchg
cmp
add
adc
cmp
sbb
fldl
sbbb
sbb
sbb
ds
add
inc
daa
mov
shrl
add
pop
popa
or
loope
xor
movsb
js
and
add
cmp
adc
ja
cmp
adc
sub
push
xor
mov
cmp
sbb
mov
push
test
fbstp
ljmp
mov
into
test
xor
call
bound
arpl
jbe
xor
push
mov
inc
popa
cmc
or
and
test
ret
jl
or
mov
push
sbb
jb
jae
pop
iret
inc
push
push
adc
testb
inc
or
mov
pop
fs
loope
lds
dec
mov
ljmp
mov
mov
jmp
push
addr16
add
and
lcall
and
inc
xor
cmpsb
lcall
ret
jb
cmp
ret
adc
nop
into
popa
add
dec
enter
adc
out
or
icebp
inc
sub
add
dec
es
xor
test
jb
lahf
jns
inc
cmp
xor
and
sbb
xor
leave
les
dec
pop
loope
push
push
pop
cli
sub
sbb
cmpsb
push
lret
push
push
add
or
add
cs
cmp
push
shl
jne
inc
es
or
js
and
es
adc
jno
adc
sbb
test
loope
xchg
test
pop
push
cs
mov
lret
sub
push
add
sbb
insl
test
jp
addr16
addl
sahf
mov
jbe
adc
mov
ret
adc
mov
push
push
xchg
jecxz
les
lret
push
call
sahf
mov
mov
test
cmpsl
ret
jae
cmp
fistps
push
fs
cmpb
mov
fsubr
xchg
in
mov
inc
loopne
jecxz
add
push
cltd
jo
sbb
ljmp
xchg
xchg
dec
daa
test
add
ret
and
or
repnz
jecxz
out
or
adc
insl
pop
jnp
int
jnp
data16
adcl
setp
jge
push
sbb
jp
inc
push
test
and
call
push
nop
aas
push
xor
in
inc
inc
mov
add
jns
or
ret
pop
jae
cmp
push
xchg
inc
pop
jl
pushf
mov
mov
mov
dec
inc
inc
nop
sahf
out
popa
or
das
or
jo
sub
mov
outsl
icebp
lret
push
icebp
mov
pusha
sub
jle
jne
push
add
sti
push
and
sbb
push
lret
push
subb
xor
sbb
fucom
and
lds
dec
testl
sbb
sub
movsb
imul
repnz
adc
and
inc
sbb
arpl
mov
and
gs
mov
roll
sbbb
xchg
repz
mov
sbb
leave
adc
lea
shl
or
or
and
addl
test
inc
jb
lods
js
push
adc
lret
sub
add
repz
mov
enter
jne
add
push
mov
jno
pop
cmp
lret
jl
outsb
roll
xchg
loope
arpl
rcrb
inc
insb
add
sub
xor
adc
sbb
into
adc
fidivs
xlat
fsub
xor
mov
lods
inc
push
loopne
clc
aad
stos
add
stos
test
jp
add
jb
xor
xor
jb
stos
cltd
inc
sahf
fadds
or
mov
lret
cmpsl
ret
dec
stos
imul
sahf
xor
bound
lret
cmp
scas
lcall
and
dec
cmp
jmpw
cmpsl
out
repz
xor
out
add
mov
aaa
mov
andb
ret
inc
mov
add
inc
rolb
add
js
adc
pop
xor
jnp
sbbb
scas
xor
adc
cltd
pop
loopne
and
inc
mov
adc
movsl
xchg
sub
out
clc
roll
pop
pop
loope
add
xchg
push
das
or
test
notl
xor
mov
sbb
cmpsb
loope
sub
xchg
or
cmp
jp
push
jns
cmp
mov
test
add
daa
testl
mov
xor
jne
xchg
xor
loopne
inc
mov
pop
push
jecxz
xor
pop
pop
in
xor
xchg
cmpsb
add
ret
mov
inc
jb
pushf
xorb
lock
mov
jge
insb
push
adc
dec
sub
jo
cmp
xchg
stos
test
push
xchg
mov
mov
hlt
push
imul
ret
cmpsb
loopne
adc
ss
cmc
stos
push
into
xlat
rorl
js
or
or
inc
call
mov
cmpl
dec
aad
dec
push
sbb
add
dec
jb
scas
push
out
sahf
inc
sbb
adc
or
mov
mov
imul
sub
push
jne
stos
adc
mov
mov
adcb
addr16
inc
sbb
or
cmp
repnz
dec
inc
test
xchg
pop
cmp
add
fwait
outsb
inc
add
insl
inc
xor
scas
sbb
xor
mov
or
mov
add
sub
cmp
cmp
adc
mov
jb
inc
out
add
jb
adc
xchg
pusha
mov
shrb
sub
sub
jnp
sub
icebp
push
cmpsl
loope
lock
sbb
call
or
or
inc
push
cltd
inc
loopne
in
test
pop
cld
push
test
xchg
mov
fstpl
das
mov
add
out
sub
into
or
ljmp
jge
jae
mov
push
cmp
xor
adc
or
mov
jne
add
mov
pusha
jo
mov
add
out
push
les
sbb
push
mov
pushf
mov
sub
rclb
aad
sub
mov
jae
sub
adc
add
and
add
dec
fcoms
and
cmp
rep
sbbb
aaa
push
sub
repz
cmp
adc
or
ljmp
imul
out
mov
mov
xlat
fstps
es
inc
push
lods
subb
mov
or
push
cmpsl
xor
aad
pop
cltd
addb
jo
jo
into
dec
es
mov
scas
adc
cmp
in
jb
dec
inc
icebp
lret
mov
jo
cmpsl
inc
push
or
sahf
mov
or
adc
mov
mov
sti
addl
add
inc
sbb
push
push
fstp
loop
shl
popf
fmuls
shrb
ret
scas
jp
lret
lods
jb
lret
sbb
mov
mov
jns
ret
imull
icebp
or
sbb
dec
popf
inc
mov
add
out
inc
or
mov
pusha
push
lret
push
icebp
add
xor
adc
dec
or
stos
ja
push
xor
mov
inc
mov
jp
sbb
pop
adc
pop
pop
iret
popa
imul
push
pusha
xorb
xor
push
faddl
push
jb
lcall
scas
push
add
inc
cmp
pop
jge
addr16
sub
je
in
loope
ds
fimull
aam
pop
and
or
out
dec
in
inc
add
test
push
mov
in
incl
xchg
ds
push
mov
scas
sbb
in
rol
out
adc
sbb
daa
mov
adc
xor
xchg
add
sbb
sub
add
imul
jae
lcall
xor
fs
inc
pop
movsl
pusha
and
sbb
and
jo
add
subl
push
cmp
push
jae
push
rcr
test
inc
je
pop
aad
or
fs
mov
ret
popa
mov
dec
fisttps
scas
add
in
pop
sarl
into
xchg
inc
popa
jo
pop
add
sub
adc
lcall
scas
or
pusha
and
cltd
mov
notb
sub
mov
nop
add
jp
clc
pop
xchg
in
inc
ret
jb
mov
aaa
add
test
add
sub
stc
add
add
dec
imul
push
outsl
push
mov
enter
mov
push
sbb
jne
jecxz
pushf
adc
jb
xor
sbbb
cmp
fiadds
mov
ret
inc
pop
or
mov
in
sbb
adc
adc
pop
xchg
or
pop
test
insl
pop
xchg
ret
inc
cmp
cwtl
aas
pop
xchg
leave
push
in
or
lcall
and
sub
mov
add
rorb
sbb
jo
stos
jae
shlb
pop
cmovp
or
jb
add
sbb
cltd
insb
mov
je
pop
js
lcall
dec
push
xor
lret
movsb
loop
inc
xor
stos
fnstsw
or
ljmp
add
or
pushf
mov
shll
repz
dec
xor
xor
add
adc
mov
push
ja
and
cmp
rorl
mov
int3
or
jl
push
call
jns
fildl
loopne
adc
mov
xchg
inc
adc
mov
test
jo
inc
and
mov
popl
in
pop
or
clc
add
sub
jmp
sub
adc
push
pop
faddl
cmp
inc
xor
cld
mov
in
sub
jmp
sub
mov
xchg
sub
sbb
jno
in
mov
adc
lock
addb
arpl
or
lcall
sub
cli
fiaddl
out
push
push
cltd
dec
pinsrw
xchg
mov
and
add
cmpb
add
lcall
fisubrl
punpckhbw
cwtl
xor
sbb
dec
cld
jl
rol
add
pop
or
ret
outsb
pop
popf
pop
push
pop
scas
lcall
jmp
dec
pushf
push
or
mov
add
pop
subl
add
jb
test
adc
flds
pop
sahf
es
test
sbb
pop
pop
sbb
enter
out
stos
lret
jp
pop
cmpb
jmp
jb
push
or
push
testl
cmp
pop
push
lahf
jmp
orb
ja
leave
xchg
sbb
cs
loope
loopne
cli
push
int3
pushf
inc
stos
xor
movsb
cltd
cmp
push
lret
push
add
or
cmc
sbb
sub
rclb
jo
sub
bound
sub
push
xchg
and
xchg
imul
shll
or
ljmp
or
ja
jne
push
scas
jp
cltd
lcall
push
mov
repnz
pop
call
loope
sbb
xchg
sub
inc
sub
push
xor
or
push
cmc
test
addb
andb
adc
loop
xor
push
or
inc
movsl
and
insb
add
push
cs
sbb
pusha
jns
sbb
cmpsl
adc
push
jmp
adc
and
addr16
sub
pop
out
push
adc
orl
xor
ret
and
push
xchg
inc
mov
shlb
push
lret
inc
lock
inc
sbb
je
mov
orb
les
sub
xchg
dec
push
or
fs
pusha
jo
mov
add
in
xchg
imul
sbb
and
ljmp
xchg
mov
sub
pushf
and
ds
push
mov
push
or
or
push
sub
xor
xchg
and
push
ret
pop
test
in
adc
pop
sarl
add
cmp
lcall
or
cmp
add
inc
arpl
pop
cmp
test
pop
ret
loopne
shl
mov
adc
les
outsb
enter
add
jno
mov
test
test
jo
cs
int3
cmpsb
push
and
js
jb
or
loopne
cmp
dec
in
add
popa
lret
je
mov
ss
repnz
pusha
cmp
xchg
cwtl
jp
cwtl
inc
repz
xchg
or
push
sbb
enter
or
mov
push
pandn
jae
xor
xchg
mov
lcall
cmc
mov
mov
or
aam
mov
mov
push
into
adc
jg
push
sbb
mov
mov
add
mov
sbb
jo
out
lods
inc
xchg
xor
test
es
mov
pushf
pop
add
std
cmpsb
out
xor
xlat
dec
mov
dec
add
add
xor
pop
push
mov
adc
xchg
sbb
add
mov
dec
xorl
xchg
pop
movsb
or
popa
iret
in
or
add
enter
shrl
mov
into
mov
rolb
push
add
lahf
or
cmp
jb
add
fldcw
repnz
push
jo
sbb
in
push
add
rcll
push
cwtl
jb
mov
add
test
insl
cwtl
cmpsb
fisubl
stos
inc
ljmp
inc
lahf
or
add
popf
loopne
mov
inc
xor
psadbw
mov
in
cltd
or
push
mov
inc
push
dec
inc
inc
add
lahf
imul
and
adc
adc
out
add
add
and
xchg
test
int
jo
fstl
pushf
mov
sub
sbb
dec
mov
js
test
in
xchg
mov
jg
push
test
sub
jo
add
mov
mov
inc
or
in
push
push
mov
push
or
xor
or
dec
aam
les
jle
mov
gs
test
push
mov
jne
or
xchg
push
mov
inc
xor
scas
xchg
mov
adc
sbb
ds
cli
sbb
ljmp
int
dec
jne
shlb
out
adc
scas
ljmp
popf
sub
dec
jne
cmp
xchg
jo
mov
pop
roll
popf
and
rcl
xor
lock
xchg
sub
mov
movsb
arpl
lret
nop
dec
inc
pop
mov
or
jmp
or
lcall
mov
dec
cmp
cltd
mov
pushf
mulb
and
dec
cmp
or
cs
sbb
mov
xchg
xor
stos
or
or
pop
fs
enter
pop
cmp
scas
push
addl
push
sbb
rcrb
jns
jp
dec
sbb
xchg
es
xor
dec
push
fs
cmp
xorb
dec
ror
sbb
pop
in
stos
cmp
cmc
xor
mov
sub
outsb
rorb
pop
add
inc
jne
add
lret
inc
jp
cs
xchg
mov
leave
es
lret
inc
pop
ja
jg
and
mov
aad
roll
es
movsl
xor
test
repnz
add
or
roll
xchg
ret
adc
rolb
cmp
lea
and
loope
push
mov
fidivrl
push
das
jle
mov
sbb
inc
das
jp
inc
insl
adc
outsl
dec
mov
mov
in
or
mov
jb
push
cs
xchg
adc
mov
push
sarl
jg
mov
inc
loope
std
add
sub
sbb
cmp
dec
push
push
pusha
jb
inc
push
push
inc
xor
and
xor
cwtl
leave
ljmp
mov
cmp
jo
pop
jp
inc
adc
orb
or
xchg
or
movb
ljmp
pop
loop
out
sbb
shrl
dec
dec
jmp
xor
push
popa
mov
aaa
scas
nop
cmp
into
push
das
and
push
add
push
jae
cmp
push
ret
cmpsl
pop
lea
add
push
xor
sub
loopne
cmp
and
repnz
cs
sub
sbb
cmc
sbb
js
push
or
xor
in
imul
dec
inc
dec
loop
or
sub
jo
orl
es
fnstenv
xchg
enter
xchg
adc
dec
fsub
push
push
mov
and
push
jp
adc
loope
sbb
mov
ret
push
and
inc
lock
movsl
xor
mov
into
aad
jo
out
mov
add
cmpsb
out
sbb
dec
loopne
add
mov
push
ret
outsb
cld
movsl
mov
add
sbb
or
loope
fdivrl
pusha
mov
jp
xorb
frstor
mov
adcl
stc
jecxz
push
scas
data16
ljmp
ror
loopne
sub
stos
sub
push
pusha
sbb
sbb
adc
mov
sahf
bound
pop
or
mov
mov
les
cmp
int
jmp
and
xchg
mov
imul
add
sbb
sub
or
imull
sbb
mov
ss
popa
shlb
push
loope
add
leave
inc
push
add
cmpsb
leave
mov
pop
stos
outsb
hlt
decl
lea
xor
fdivl
or
pop
lods
in
outsl
add
ret
xchg
adcb
leave
push
xchg
adc
mov
sarl
pop
repz
pop
cmp
sub
out
adc
xor
lods
addr16
push
mov
mov
jne
jns
mov
mov
repz
das
stos
bnd
cltd
sbbb
subb
mov
push
shlb
or
into
xchg
rorl
add
cmc
jg
in
cmp
push
xor
loopne
jae
jo
mov
push
mov
imul
loopne
rorb
addr16
add
cmp
sub
and
cmp
sub
daa
add
inc
push
pop
daa
push
pop
cltd
xor
xor
jo
pushf
push
movsl
mov
ljmp
adc
testb
inc
cmp
cmp
mov
in
mov
mov
cltd
jp
in
scas
ja
js
xchg
mov
ret
push
sbb
pop
sbb
inc
cmp
cmp
jp
sbb
popl
inc
pop
jno
jo
pop
mov
outsl
adc
rorl
pop
bound
fbstp
pop
test
push
pop
nop
cmp
jo
push
pop
pop
xlat
jb
iret
aad
mov
mov
inc
xor
adc
or
arpl
sub
cmc
lcall
add
push
movsl
dec
cld
and
loope
out
jo
adc
push
scas
lods
mov
sub
mov
jo
divl
stos
push
shl
push
pop
cmp
cmp
or
iret
xchg
xor
sub
mov
sbb
fisubrl
mov
xchg
test
enter
sub
cmpsb
enter
mov
popf
xor
cmc
sub
push
popf
dec
aam
mov
sbb
lods
jo
popf
iret
gs
sbb
gs
cmc
adc
loope
mov
and
mov
xchg
test
and
lret
les
dec
mov
xchg
cld
mov
push
out
ss
xor
fiaddl
data16
push
mov
push
sbb
test
scas
scas
or
add
iret
movsl
inc
push
imull
loopne
iret
in
adc
pop
es
add
or
adc
int
xchg
inc
jnp
jge
push
lods
add
ret
mov
jo
inc
mov
xchg
xchg
push
loopne
and
retw
loopne
push
push
mov
add
push
scas
popf
or
fndisi(8087
pop
xorb
stos
push
cltd
sbb
cmp
fwait
or
movsb
sbbl
mov
mov
inc
jecxz
mov
pop
fistl
ds
push
addb
push
dec
enter
repnz
ss
inc
pushf
xor
jmp
xor
push
mov
push
and
leave
xchg
jo
push
jo
xor
cwtl
or
test
and
lcall
add
in
cwtl
pop
popa
addl
add
inc
filds
jbe
jl
cwtl
jge
test
adc
sbb
in
sbb
addb
jne
mov
push
mov
push
ret
ds
cmp
sbb
out
adc
cltd
js
pop
xchg
loope
xor
cmpsb
jb
push
adc
mov
adc
or
xor
loopne
iret
xor
add
jp
out
cmp
ss
das
shlb
jnp
pop
int
cltd
bound
imul
repz
cmp
sub
xlat
int
xor
sub
xchg
mov
jb
dec
jnp
popl
push
cmp
cs
mov
add
fmull
jo
inc
or
inc
push
adc
shl
fidivl
and
fbld
inc
cs
mov
icebp
add
mov
and
pop
scas
add
pop
xor
shl
sub
cmp
lods
adc
adc
cmpsl
jno
lret
stos
sahf
adc
adc
cltd
dec
xor
adcl
loop
stos
jb
jnp
jo
shlb
jo
dec
mov
test
sbb
das
add
iret
sub
in
sub
out
cs
sbb
insb
gs
mov
clc
add
xor
or
pop
inc
pushf
inc
sbb
xchg
xor
addl
cmp
es
push
outsl
cmpsb
fcoml
mov
das
lcall
ret
inc
pop
add
adc
sub
loopne
adc
sub
call
cmp
sub
loop
lds
pop
xlat
fcmovnbe
inc
adc
jmp
das
pop
aad
imul
shl
jb
xor
test
pop
mov
adc
cmp
adc
xchg
xchg
or
arpl
sub
add
mov
jae
sub
mov
pop
scas
sub
or
cmp
and
dec
xchg
mov
inc
adcl
cmc
aam
lods
mov
shrb
cmpsl
push
in
inc
test
add
jp
inc
jp
scas
mov
loop
adc
adc
sub
popa
mov
pop
sbb
je
adc
popa
xor
ret
inc
add
insb
adc
test
sub
and
inc
xchg
xchg
jne
add
ror
repnz
in
rolb
add
push
mov
sbb
dec
push
xor
test
jl
xchg
mov
hlt
sub
jl
loope
fisubrl
addb
into
xor
into
loopne
push
clc
jle
push
in
sti
jle
add
in
inc
dec
sbb
mov
cmpsl
inc
add
cmp
adc
pop
jb
jb
stos
pop
popa
xlat
pop
add
xor
jae
mov
in
sbb
inc
cltd
dec
cmpsl
pop
pop
sbb
pop
gs
jl
jns
inc
cltd
mov
lock
inc
lret
pop
add
stc
dec
add
mov
out
or
js
xchg
inc
push
hlt
jmp
pop
add
push
adc
rorb
mov
retw
and
sub
popf
inc
out
mov
and
and
mov
rcll
adc
mov
mov
adc
adc
xor
sbb
xor
pop
in
mov
pop
push
dec
mov
push
cmp
push
inc
cmp
pop
and
sub
jge
sub
ret
xor
inc
jne
es
getsec
addb
test
in
cmp
test
sub
sbb
stos
std
push
push
enter
adc
dec
inc
andl
scas
add
shrb
aam
add
jge
pop
popf
jb
cmp
test
cmc
jo
pusha
mov
inc
inc
cwtl
sti
add
out
cmp
notl
jp
lock
mov
stos
sbb
pop
enter
sub
gs
mov
insl
jecxz
adc
daa
add
push
loopne
mov
cmpsb
mov
into
xor
loope
cmpsl
mov
in
cmp
jecxz
outsl
push
dec
push
test
roll
sbb
push
or
add
pop
mov
or
sbb
inc
js
test
lret
xchg
sub
mov
ret
push
jae
pop
xor
sbb
xchg
and
adc
push
loope
das
addr16
push
je
sbb
pushf
mov
jo
or
push
and
pusha
stos
fidivl
scas
or
aam
xor
movsl
test
mov
mov
sub
cmp
scas
fs
mov
cmp
andl
jo
add
push
into
add
divl
pop
pop
mov
gs
push
sbb
xor
movsb
add
mov
mov
dec
pop
lahf
jb
sbb
cmp
jo
ss
lods
jb
das
pop
aas
loope
mov
fildl
adc
pop
movsb
test
andb
mov
cmpsl
movl
into
cli
push
lods
dec
xor
add
pushf
stos
mov
push
cltd
or
inc
into
loopne
gs
popl
cmp
mov
cmc
or
and
mov
sbb
lea
inc
add
call
scas
jo
loope
xchg
adcl
mov
mov
inc
sbb
into
sub
mov
bound
jnp
sub
sbb
dec
push
adc
push
data16
fidivl
inc
add
jmp
sub
jp
push
roll
mov
xchg
testl
imul
and
sbb
into
scas
mov
push
jne
xchg
mov
jg
fadds
faddl
inc
daa
cmp
faddl
stos
filds
pop
or
xor
or
shrb
dec
aas
movsb
mov
xchg
push
push
rolb
and
lcall
mov
pop
inc
jae
mov
or
mov
xor
aas
adc
pop
inc
mov
in
cmp
cmpsb
mov
lods
arpl
mov
jecxz
jle
outsb
imul
cmp
mov
add
fiaddl
push
xchg
xchg
cmpsl
jb
shll
push
pop
hlt
push
popf
aam
loope
ljmp
adc
loope
adc
sarl
cmp
xor
mov
pop
mov
sti
sbb
inc
scas
xor
addb
or
dec
pop
call
in
mov
cmp
inc
push
xor
hlt
sahf
push
add
sbb
xchg
sub
cmpsl
dec
push
pop
cwtl
push
stos
cmpsl
inc
mov
inc
sub
stos
cmp
sbb
add
pop
push
add
jbe
repnz
xchg
mull
cmp
cmpsb
sbb
addb
sbb
jb
inc
jae
pop
jne
iret
adc
xchg
mov
push
mov
or
stos
push
cwtl
xchg
add
push
pusha
add
pop
adc
les
sub
xchg
into
pusha
loopne
nop
fs
and
pop
cmpsb
xor
stos
data16
mov
scas
xor
push
lcall
xchg
test
icebp
inc
or
or
test
and
sub
mov
xchg
test
dec
scas
test
clc
and
lods
xor
cs
into
pusha
call
jb
jmp
adc
shlb
and
out
mov
fwait
xchg
push
imul
pop
xchg
roll
pop
mov
cld
jb
scas
popf
push
jae
add
cmc
adc
addr16
addb
cs
xchg
shll
js
mov
xor
mov
cmp
pop
adc
cmp
mov
sbb
test
sub
in
xchg
xor
sbb
lcall
push
js
adc
push
mov
cs
mov
test
inc
mov
jns
xchg
shrb
pop
cld
sbb
add
mov
add
inc
cmc
mov
cmpl
and
ljmp
adc
dec
cmpsb
jb
lock
test
push
stos
ret
sbb
cltd
xor
in
push
ret
insb
cltd
cmp
adc
mov
sbb
adc
sbb
dec
mov
addb
push
or
xchg
xor
insl
mov
andb
cwtl
and
loopne
lock
sbb
push
sbb
loopne
out
adc
cmc
dec
ret
inc
or
test
inc
into
dec
subb
push
cmp
lods
repnz
push
mov
pop
pushf
cmp
fs
enter
inc
add
out
repnz
cltd
add
jno
xor
or
xchg
ror
push
scas
and
mov
or
dec
cwtl
pop
xchg
enter
mov
mov
addb
outsb
cwtl
pop
sbb
aas
add
push
je
jnp
paddusb
inc
jnp
sbb
jo
cmp
leave
adc
orb
nop
xlat
fistpl
in
popa
mov
or
push
add
or
adc
icebp
and
adc
jno
mov
pop
cmp
pop
push
mov
daa
xor
aas
sub
sahf
jae
xchg
fcmovu
out
mov
push
test
scas
fisubrl
add
adc
mov
lock
popf
xorb
neg
pop
or
pop
cmp
pushf
and
xor
ret
pop
xor
das
les
lret
mov
cmp
outsb
cld
lahf
mov
sub
xor
adc
test
jno
das
add
mov
xor
push
xor
nop
or
push
cmp
rcl
dec
mov
ret
add
cmp
dec
adc
lods
pop
push
and
ret
mov
cmp
add
pop
rorl
loopne
fisttpll
push
loopne
outsl
clc
iret
add
push
es
aaa
loopnew
and
shl
in
cs
ret
pop
pop
push
imulb
cmp
cmpsb
adc
jnp
jnp
pop
jae
out
xchg
test
jg
adc
lret
add
sub
loopne
fucomp
std
add
aam
lcall
pop
inc
xchg
ret
orb
jl
mov
popa
mov
or
icebp
mov
lea
cmp
leave
jo
push
cmp
jp,pn
sbb
ficoms
loope
cmp
adc
add
add
insl
pop
mov
loope
imulb
cmp
jo
in
rorl
pop
mov
and
cmp
push
call
dec
adc
pop
cltd
push
fwait
or
mov
outsb
xchg
ret
sub
mov
pop
pop
xorb
pop
pop
cli
cs
test
inc
aas
adc
adc
pop
fwait
mov
jne
mov
sarb
lret
out
sub
xor
jmp
lods
and
push
adc
cmp
jae
int
pushf
stc
cmp
loope
mov
das
cmp
push
xor
sahf
stc
or
les
shl
into
dec
aaa
mov
out
popa
push
or
and
ss
inc
pop
rorl
insb
mov
push
mov
lcall
jg
lcall
adc
dec
scas
sbb
lahf
int
lock
clc
repnz
xchg
ss
imul
lret
test
xor
shrb
pop
jo
push
adc
add
repz
mov
cltd
push
shr
test
sar
cs
mov
adc
sbb
repz
inc
sub
cmp
ds
mov
test
push
sbb
cwtl
pop
inc
sub
sub
add
sub
in
insb
or
add
gs
cmp
mov
mov
loope
cmp
mov
mov
dec
pop
mov
shll
test
inc
cmp
push
mov
or
mov
push
add
clc
jo
or
pop
pushf
mov
mov
or
and
add
or
mov
adc
stc
push
das
lret
sub
sbb
mov
imul
mov
and
sbb
adc
enter
jle
sub
lods
jb
add
ss
sub
inc
xchg
pop
xor
jo
dec
sub
mov
adc
add
stos
jno
lock
lods
jb
push
daa
push
psubb
mov
lods
sub
push
push
xor
push
imul
dec
rclb
dec
add
xchg
les
cmp
and
scas
adc
cmpsb
faddl
es
pop
add
push
add
int
subb
mov
imul
clc
fldcw
iret
or
xchg
jmp
movb
mov
adc
daa
addb
or
and
cmp
push
decl
test
ret
mov
fiadds
adc
and
xchg
or
scas
sbbb
mov
pop
xor
add
movsb
rolb
inc
push
and
and
xchg
lret
rorb
mov
in
jecxz
or
adc
add
cmpsl
pop
in
orb
jp
add
push
pop
cmp
shlb
orl
loopne
sub
in
aam
popa
lret
jns
adc
jb
jp
xor
movsb
mov
inc
cmp
add
or
xchg
jae
loopne
repz
lret
jo
in
sub
lcall
test
lret
stos
negl
pusha
ret
mov
pop
cmp
inc
inc
pop
mov
aam
sbb
pop
cmc
jg
dec
scas
pushf
and
mov
pop
add
leave
inc
push
mov
enter
adc
add
push
jo
adc
xchg
stc
andb
jp
inc
push
flds
mov
jno
cltd
pop
inc
sub
in
inc
add
push
push
push
pop
scas
sbb
inc
popa
fsubr
cmp
cmc
lret
rorl
push
jae
mov
add
inc
cmp
lcall
sbb
or
xorl
lcall
add
push
add
mov
inc
pause
mov
fisttps
or
dec
mov
mov
ret
ja
sub
mov
mov
or
inc
je
cs
cmp
addr16
push
inc
mov
inc
inc
and
pop
adcl
cli
mov
enter
sub
inc
inc
inc
sarb
std
add
mov
sub
rorb
loopne
stc
xchg
lods
add
lret
loope
adc
pop
gs
in
in
ds
rcll
xor
sbb
mov
idivl
cmpsb
sub
lret
roll
mov
jge
pop
mov
out
push
adc
les
adc
pop
test
arpl
inc
adc
and
xorb
add
mov
sub
arpl
loopne
jecxz
movsl
sbb
xor
and
in
inc
push
shrb
sub
test
cli
inc
addb
pop
pusha
inc
loopne
rorb
test
mov
pusha
rol
xchg
loope
and
push
jae
fisubl
adc
xor
cs
dec
fcmovne
fadds
cmp
ret
lret
mov
push
mov
imul
add
push
rclb
in
out
rcr
push
adc
add
xor
mov
push
push
das
std
pop
lahf
inc
jae
inc
cmp
sub
jecxz
inc
cmp
sbb
adcb
xor
adc
mov
jp
sbb
es
mov
ret
mov
xchg
cmp
push
rcll
mov
sbbb
into
and
adc
mov
aad
xor
or
cmpsb
or
add
cld
imul
mov
roll
lods
inc
popf
int3
enter
pop
add
add
push
add
mov
movsb
test
lcall
popl
sub
push
sub
sarl
leave
sbb
inc
sbb
pop
je
jmp
lahf
rcrl
enter
inc
out
sbb
jb
popa
iret
aam
pop
inc
add
cmp
dec
mov
inc
aad
push
sub
inc
cmp
push
call
jo
bound
sbb
enter
cli
mov
mov
xchg
xchg
mov
lcall
pushl
sarb
adc
jmp
sbb
pop
dec
pop
into
lds
loop
mov
push
test
xor
pusha
dec
int
push
movsb
insb
or
or
cvtps2pd
sbb
inc
push
and
nop
inc
add
fsubr
mov
sub
int
enter
jo
in
or
dec
sbb
inc
jae
cmp
imul
sub
shrb
scas
mov
adc
adc
mov
orl
sbb
sub
call
add
int3
mov
addl
xor
adc
ret
xor
pushf
jo
or
sbb
subb
mov
daa
mov
rorb
mov
and
testb
jp
loope
rolb
lock
jne
out
and
lcall
mov
cs
in
sub
xchg
add
jecxz
dec
pop
icebp
rclb
add
lods
or
pop
loope
mov
inc
jbe
push
cs
js
out
or
mov
mov
aam
lods
pop
lock
aam
sbb
aam
sub
pop
inc
mov
and
xor
test
inc
dec
jmp
pop
or
jae
rcrl
add
xor
dec
mov
movsl
pop
push
lret
sahf
xor
add
dec
pop
rcll
filds
adc
imul
pop
jne
int3
inc
add
add
test
loopne
jne
adc
inc
ret
or
daa
test
mov
call
out
push
or
push
loopne
fstpt
clc
jp
in
jae
jb
add
mov
cmp
xor
stos
mov
or
negl
out
push
fsts
fiaddl
inc
ss
or
aam
push
ss
test
jge
cwtl
xor
jb
loopne
jae
or
jmp
ror
nop
test
and
inc
popa
int3
es
mov
je
andb
shlb
aas
sbb
loop
xlat
lock
and
mov
cs
push
push
push
cmpsb
add
sarl
xorb
leave
nop
or
daa
dec
or
push
inc
bnd
xchg
push
shrb
mov
repz
out
scas
lock
popf
mov
scas
cmpsl
pop
jae
shll
adc
add
fbld
jae
sbb
cmp
mov
jg
push
jb
sub
dec
add
and
in
jno
mov
stos
cmp
es
std
mov
jg
inc
mov
dec
mov
xor
push
adc
iret
dec
std
or
push
sbb
gs
call
arpl
jo
ret
push
jg
aas
movsb
hlt
out
inc
idivl
adc
daa
add
stos
in
push
mov
fwait
xchg
aad
aad
std
pop
js
daa
lcall
andl
mov
ret
sarb
sbb
adc
das
inc
mov
mov
fnstcw
sbb
push
and
cmp
clc
sbb
test
ret
or
mov
pop
lds
mov
push
xchg
leave
test
adc
lcall
jp
push
cmpsb
out
mov
add
dec
mov
xchg
mov
jbe
or
inc
xlat
in
lea
xchg
add
or
js
fs
xchg
cmp
mov
js
push
movsb
xor
sbb
loop
jne
sub
xchg
and
notl
es
xchg
sub
inc
sub
push
push
jb
pop
mov
add
add
mov
jl
sub
pop
arpl
inc
cmpsb
or
loop
push
js
sub
rorb
push
mov
repnz
mov
jb
sbb
inc
add
or
cmp
adc
xor
stos
add
mov
cmp
ljmp
jo
xor
in
xchg
adc
pop
add
push
out
jae
jmp
push
or
out
or
or
aam
sub
popf
or
movl
or
ret
sarb
xor
pusha
and
stos
into
dec
jle
push
or
mov
out
test
mov
dec
push
fdivrs
ss
add
push
push
cvtpi2ps
loope
and
or
jnp
stos
icebp
fsubs
cmp
lcall
jmp
sub
shrl
aad
jmp
fsts
jg
sbb
inc
movsb
mov
rorl
mov
scas
adc
add
mov
jo
inc
mov
subl
sbb
lods
mov
jne
adc
scas
adc
push
push
pop
sub
imul
inc
add
xor
push
xor
adc
into
test
xlat
and
xchg
lret
or
push
add
mov
adc
rorl
add
loope
sbb
push
mov
roll
jg
push
xchg
pop
push
push
int
inc
xchg
adc
sub
nop
cmp
mov
imull
bound
fiadds
dec
mov
mov
push
rolb
sub
stos
cs
inc
lds
aad
jp
loopne
cmp
jo
push
fsub
pop
icebp
ret
mov
push
mov
stos
xor
sbb
adc
aas
cmp
lea
loope
adc
ret
ret
push
cltd
push
ficompl
pushf
test
xchg
out
xchg
sbb
or
imul
jl
ret
popa
js
jp
rcl
mov
subb
cwtl
dec
subl
fnsave
cmovl
xchg
push
dec
cmp
or
scas
pop
scas
dec
mov
ret
and
mov
test
pop
mov
cwtl
sub
push
adc
jb
fdivrp
inc
mov
adc
adc
pop
or
sbb
test
addb
adc
jb
outsl
decb
aam
call
insl
sub
or
daa
pop
stos
push
mov
cmpsb
out
imul
xchg
and
jnp
jne
xor
in
loop
adc
xchg
mov
push
adc
and
out
aaa
fwait
es
and
sub
loope
gs
jge
push
jae
loopne
aaa
pop
xor
movups
int3
loop
shl
adc
inc
xchg
ret
rorb
jp
push
mov
mov
push
fists
or
xchg
add
pop
xchg
xor
out
mov
andl
xor
into
lahf
loop
jp
cmpsb
jg
hlt
inc
sub
inc
jmp
inc
and
scas
cltd
pop
out
jns
mov
lret
out
in
int3
lahf
add
enter
jno
add
repz
or
mov
push
mov
popa
cmp
sub
sub
jb
or
fsubs
or
addr16
xchg
dec
cmp
out
and
sub
adc
cvtps2pi
js
xor
inc
jnp
sbb
dec
or
loope
xor
mov
mov
dec
scas
lret
inc
or
ret
add
sbb
inc
xchg
xchg
inc
test
lahf
sub
lock
jae
mov
jo
jb
insl
xchg
mov
inc
cmpsl
add
cs
push
shrb
add
mov
arpl
rcrl
mov
in
pop
les
xchg
shll
out
push
and
dec
push
jge
lcall
or
add
in
fildl
scas
cmp
stos
in
jmp
pop
inc
push
pop
mov
and
pop
or
jo
loope
scas
popa
loopne
adc
loopne
xor
in
loope
xchg
mulb
cs
arpl
or
adc
lahf
cwtl
test
popf
sti
mov
js
clc
std
add
stos
sub
rorb
ja
push
je
or
or
jp
test
addr16
mov
cltd
sbb
pop
push
int
aam
lods
pop
daa
dec
xchg
pop
lret
or
xor
jmp
sub
mov
push
mov
jmp
mov
push
cwtl
push
popf
inc
cmp
xor
das
pop
inc
cmp
dec
aaa
mov
dec
adc
and
imul
jo
pop
xor
mov
add
lods
orb
rcrb
aad
xor
sbb
xor
adc
lret
xor
cmp
shrb
mov
jo
lds
es
push
push
ja
andb
leave
into
cltd
test
loop
outsl
jne
sbb
sub
ffreep
cmp
fldenv
or
test
cmc
sub
pop
sbb
test
out
je
and
addb
jp
push
lret
iret
push
mov
or
cwtl
enter
scas
pop
mov
mov
xlat
sbb
mov
push
inc
mov
insl
inc
xchg
sbbl
repz
cld
fbstp
cmpxchg
insb
dec
inc
add
lods
sbb
adc
or
push
xor
cmp
dec
das
inc
lock
shll
sbb
insl
xchg
push
inc
push
cmp
sub
dec
jecxz
test
jae
mov
xchg
sub
xor
rcll
cltd
das
loope,pt
pop
sbb
in
mov
adc
push
push
add
adc
push
enter
jb
rclb
les
cmp
dec
cmp
jp
test
xchg
pusha
mov
push
test
push
mov
add
sub
in
pushf
and
cmp
jb
aas
loope
movsl
push
pop
mov
xor
pop
push
jl
cwtl
xor
shl
shlb
add
pusha
cmpsl
std
sub
fs
movsb
and
sub
push
mov
es
add
or
jns
mov
add
out
sahf
jne
cs
cmpl
lahf
ja
out
pushf
mov
sbb
cmp
enter
mov
cwtl
xor
push
sub
js
add
mov
push
and
xchg
pusha
or
test
mov
aam
mov
adc
cmp
dec
xchg
pop
adc
ret
jnp
push
xchg
jb
loopne
inc
mov
rorl
xor
js
lcall
fists
mov
sbb
pop
xor
fwait
ss
incl
dec
aam
xor
call
ds
imul
add
pop
cmp
mov
lret
les
xlat
xchg
dec
hlt
sub
jne
lret
rorb
out
imul
jne
filds
mov
sub
xorl
pop
xor
daa
cmp
adc
and
aas
jb
jno
test
stos
and
hlt
mov
stos
or
mov
lcall
jae
mov
sub
adc
xchg
insl
xchg
or
cmpsb
add
fmull
hlt
iret
cwtl
sahf
pop
inc
pushf
stos
mov
add
push
push
stos
add
aam
in
pushf
jmp
nop
lods
jo
test
ss
push
jo
mov
mov
xor
gs
sbb
push
js
mov
push
jge
mov
xchg
std
mov
out
pushf
push
sub
sbb
add
mov
or
and
aam
push
lcall
enter
stos
mov
push
sub
push
cmp
xchg
gs
out
cmp
pop
sub
jno
or
shlb
sub
push
lret
and
sub
pop
pop
sub
dec
imul
inc
push
cmp
inc
fcomps
mov
cltd
jb
jae
ss
jno
into
pop
js
rcll
andl
mov
sub
inc
add
or
xchg
sub
decl
dec
lahf
stos
mov
mov
int3
in
shrb
fisttps
mov
lds
data16
jmp
loopne
add
pop
pop
mov
xchg
and
inc
adc
aaa
fadds
sub
mov
sub
sbb
inc
add
inc
leave
cld
xchg
push
sbb
pushf
xchg
mov
mov
and
adc
dec
xor
add
clc
push
fldt
push
lods
stc
mov
es
shl
dec
push
daa
or
sbb
pop
and
dec
inc
mov
subl
je
icebp
test
adc
add
add
dec
push
aam
and
gs
add
add
inc
hlt
pop
dec
jno
gs
and
add
mov
sbbb
test
xchg
sbb
dec
pusha
or
lahf
cmc
push
sub
xor
pop
pop
adc
xor
xor
add
rolb
imul
out
inc
cmp
clc
bound
and
ljmp
shr
into
js,pn
cltd
jo
pop
pop
pop
xchg
jecxz
push
cltd
cli
dec
xchg
lret
sub
je
out
push
add
pop
pop
push
push
adc
xorl
shr
jns
dec
add
lods
sbb
cltd
push
push
inc
dec
loope
xchg
push
sbb
push
sub
push
mov
iret
and
xchg
mov
cmpsl
xchg
cmpsb
rclb
in
xchg
pop
mov
xorb
adc
cwtl
into
xor
lods
push
call
xorl
mov
ja
je
sbb
orb
ficomps
pop
ds
or
adc
jns
mov
or
or
pop
aaa
insb
mov
popf
inc
mov
mov
inc
in
test
push
call
inc
mov
cmc
jb
sbb
push
shrb
add
push
les
jo
and
out
fwait
dec
sub
xchg
pop
aad
scas
test
and
aas
add
or
repz
sub
stc
adc
cmp
xor
mov
xor
inc
xor
fcmovbe
sahf
add
sbb
imul
sbb
inc
mull
push
adc
pop
sbb
xchg
enter
sbb
inc
jno
adc
imul
fidivrl
and
xlat
add
shlb
cmp
iret
xchg
dec
aad
add
jne
adc
adc
add
xlat
mov
cmpsb
or
xorl
inc
lods
push
xlat
ds
pop
fwait
adcl
dec
sub
sbb
mov
xchg
cld
ja
dec
dec
jne
inc
rorl
int
repz
inc
inc
or
dec
push
mov
push
or
sub
mov
daa
and
pusha
add
add
mov
loop
add
jmp
sbb
jge
adc
loop
or
mov
inc
push
int
and
int
mov
fiaddl
inc
push
jne
ja
pop
sbb
das
ret
push
lods
mov
cmp
andl
pop
pop
xchg
leave
inc
lock
dec
dec
je
lret
lea
inc
scas
enter
xor
add
repnz
subb
dec
pop
es
sti
pop
and
sbb
push
mov
inc
lcall
and
mov
xchg
sub
ret
xorb
add
rcll
and
popa
int
inc
add
adc
pushf
mov
push
ds
push
ljmp
loopne
pop
test
xor
mov
push
int
or
popf
cmp
enter
jge
add
dec
pop
jae
adc
add
push
andl
movsb
mov
loope
push
imul
or
push
push
pop
jmp
inc
out
add
push
inc
sbb
in
pop
dec
leave
nop
push
daa
adc
sbb
xchg
inc
mov
pop
in
mov
xlat
sub
jg
rcrl
frstor
sub
or
xchg
cmpsb
dec
mov
cs
aaa
pop
rolb
fdivrl
mov
adc
xchg
xorb
inc
inc
and
inc
adc
shll
fdivs
sbb
sub
mov
and
add
inc
test
dec
adc
pop
cltd
lods
mov
inc
mov
xchg
jo
pushf
and
roll
xchg
jmp
inc
sub
and
inc
mov
xchg
pushf
mov
ss
mov
test
xchg
xor
aam
jae
pop
inc
push
or
insl
mov
jne
mov
jb
cmp
pop
adc
popl
or
xchg
pop
pop
inc
mov
add
jmp
add
push
adc
jnp
mov
cmp
aam
push
xor
add
push
cs
ret
int
push
sar
push
sbb
push
mov
add
pop
test
or
scas
jbe
cltd
xor
xchg
cmpsb
or
scas
std
or
mov
mov
sbb
shll
mov
add
sbb
sub
addl
mov
xor
push
outsb
ret
mov
push
push
inc
sub
inc
cmp
xchg
adc
push
mov
lret
fdivl
inc
scas
loop
aam
cwtl
jnp
sbb
sub
xor
push
pop
sub
add
xor
dec
add
dec
ss
add
xorb
cwtl
mov
xchg
xchg
imul
pop
sbb
ljmp
inc
push
mov
mov
adc
mov
arpl
fwait
in
cld
scas
js
add
sbb
pop
incb
mov
xchg
push
push
pop
rcrl
inc
insb
xor
outsl
jp
data16
push
push
xor
sbb
fsubs
push
and
and
cltd
or
inc
popa
dec
mov
jno
cs
push
cmp
xor
call
iret
or
adc
int3
movl
jge
mov
or
sub
cltd
pop
inc
push
dec
adc
push
push
push
outsb
push
cmp
mov
dec
adc
or
jno
adc
or
rcll
xchg
adc
mov
cmp
mov
cmpsb
testb
hlt
mov
or
sub
push
fdivl
add
fsubl
add
and
jp
push
mov
lds
in
add
or
pop
test
test
scas
jp
sbb
loopne
adc
into
fs
sbb
cmp
fimuls
mov
leave
inc
cld
xor
and
add
inc
add
int
scas
sub
shll
cmp
ficoml
jo
out
shrb
es
cmp
dec
test
jns
jae
stos
add
adc
sub
lret
mov
rcrl
cltd
dec
dec
sub
sbb
test
push
cs
cs
stc
rorb
or
inc
push
push
bound
enter
repnz
and
sbb
stos
pushf
xchg
sub
mov
mov
xor
addl
cmp
hlt
pop
or
dec
push
daa
add
and
dec
imul
inc
ja
sbb
inc
pop
repz
aam
jo
adc
inc
cmpsb
iret
jp
cmp
mov
sub
fabs
popf
sarl
jo
cli
adcb
insb
push
xor
andb
inc
xor
push
push
xchg
cmpsl
or
xor
insb
or
movl
testl
subl
mov
lods
cmp
cmp
inc
xor
mov
pop
xchg
cmp
test
lcall
push
jo
aam
mov
repz
sbbb
push
mov
jns
and
outsb
enter
or
lret
in
fs
lret
push
pop
jo
rolb
cmc
push
add
mov
add
repz
xchg
daa
lods
std
adc
sbb
xchg
leave
shlb
jo
loop
pushf
cmc
jo
inc
pushf
rcrb
add
or
aam
inc
push
jno
dec
popf
dec
mov
in
add
hlt
add
repnz
es
inc
cmp
push
mov
gs
enter
jb
pop
sub
inc
mov
sti
push
icebp
aaa
mov
repnz
adc
jo
push
jns
dec
es
mov
adc
fnsave
or
mov
aam
mov
cmp
or
and
push
repz
es
lock
repnz
inc
js
mov
sub
pop
cmp
data16
pop
cmp
jmp
loope
dec
inc
cmp
imul
push
adc
fists
cwtl
mov
lods
and
cmp
lods
xchg
sbb
mov
push
push
test
cld
js
jmp
rolb
dec
inc
jle
test
adc
jge
mov
adc
inc
or
adc
adc
lahf
mov
sub
fistps
subb
and
loope
pop
xor
xchg
mov
or
fs
daa
add
fiadds
lret
iret
icebp
sub
lret
and
xor
mov
mov
adc
in
lret
aad
cltd
test
adc
loope
imull
pop
push
imul
or
adc
push
aam
adc
pusha
rcll
adc
into
into
sbb
add
jmp
jo
call
and
sub
scas
mov
pop
scas
adc
jns
dec
mov
int3
xchg
fstpt
add
popf
add
push
hlt
dec
jb
mov
sbb
jnp
mov
adc
out
pusha
add
std
mov
cmp
sub
lea
mov
xchg
xchg
int
cmpsb
mov
call
xor
repnz
inc
in
xchg
mov
andb
add
fiadds
lret
rcrl
imul
inc
int3
jmp
nop
sbb
mov
sbb
mov
shll
inc
cs
mov
andb
and
xchg
mov
xor
leave
aad
or
xchg
inc
sbbl
sub
push
andl
popf
mov
mov
mov
push
jae
mov
push
enter
sub
push
xorb
adc
push
ret
add
repz
icebp
imul
mov
shlb
add
add
popf
shrb
rclb
std
out
bound
lar
adc
dec
and
dec
pushf
inc
xor
or
lret
mov
or
push
test
sbb
int
movb
hlt
fxch
jo
push
test
dec
aad
push
fidivl
sbbl
in
out
cltd
sbb
mov
pop
cmpsl
mov
mov
sub
or
add
mov
adcb
pop
insl
push
rcl
inc
sbbl
scas
lcall
sbb
mov
sub
lds
adc
lods
xchg
cmp
pop
int
sub
enter
jbe
push
push
jp
inc
push
xor
mov
and
mov
xor
and
test
xchg
adc
push
ret
adc
or
push
add
ljmp
addl
in
sbb
or
rolb
popa
mov
xchg
push
sbb
in
jae
stos
cmp
mov
xor
pop
adc
pusha
daa
pushf
mov
roll
int
cmp
pop
leave
cli
jne
xor
sbb
cmpl
mov
popf
ret
outsb
cmovl
aad
and
ret
pop
fucom
mov
pop
inc
les
add
and
ja
fs
mov
cmp
push
cmp
xor
inc
int
mov
lods
daa
ljmp
add
xor
enter
mov
adc
fwait
mov
ret
adc
dec
sahf
scas
pop
inc
mov
nop
and
lret
mov
adc
lods
sub
add
push
sbb
js
enter
test
sbb
push
xchg
rcl
mov
adc
xlat
addb
and
and
aas
and
xchg
stos
sub
gs
push
xor
andl
adc
je
in
cmp
xor
xor
add
xlat
test
scas
sbb
outsl
std
jo
cmp
or
mov
dec
adc
cmp
fwait
rcrl
push
cmpsl
dec
mov
adc
and
sub
jb
cmc
sub
add
bound
cmp
xor
push
int3
jae
sub
cs
push
push
push
test
cmpsl
mov
pop
pop
popf
mov
pop
insl
ja
pushf
jmp
pop
and
sbb
adc
push
loope
or
add
insl
pushf
adc
sub
lahf
bound
mov
dec
sbb
ret
sub
repnz
pushf
push
rcll
in
in
xchg
or
cmp
call
mov
mov
push
imul
ja
pusha
test
xchg
cwtl
or
js
nop
rcll
or
in
addr16
sbb
int
js
sub
add
xchg
fstpl
cmp
jo
mov
jp
mov
sbb
scas
mov
pop
inc
lock
lahf
sbb
mov
add
inc
cmp
cmp
jne
xchg
pushf
bound
inc
dec
sqrtps
jo
mov
jb
mov
ret
push
push
add
pop
fs
push
and
subl
inc
mov
add
jae
and
js
sub
stos
arpl
pop
add
and
subl
jb
mov
fisttps
inc
dec
adc
pop
inc
clc
or
inc
and
lea
lock
jbe
les
movsl
rol
push
mov
pop
push
jo
nop
jle
mov
lret
jo
sub
lret
mov
dec
in
jo
sub
jle
or
add
and
shrb
mov
leave
jecxz
loope
adc
add
mov
sbb
add
xor
fidivs
mov
add
xchg
lret
adcl
pushf
dec
cmp
add
faddl
xor
mov
scas
sahf
or
pop
dec
aaa
xor
les
and
push
sahf
dec
repnz
xor
insb
add
or
pop
add
rolb
or
inc
loopne
xchg
cmp
or
push
cltd
insl
sbbb
push
je
adc
push
sub
mov
loopne
sub
das
in
push
inc
int
pop
xchg
repnz
lods
push
add
or
mov
lock
lea
stos
adc
shrl
jp
add
sbb
out
inc
or
cs
ja
aad
call
jecxz
add
mov
inc
xchg
adc
mov
adc
subl
cltd
leave
sub
xchg
stos
ret
xchg
push
data16
mov
push
jmp
push
loope
rclb
cs
orb
lret
adc
or
sbb
push
jae
fidivl
mov
pop
xchg
mov
mov
adc
add
pop
hlt
lock
or
jo
cmp
adc
lock
cmpsl
lahf
in
sub
popa
fmull
sbb
mov
fcoms
mov
add
inc
dec
out
pop
cmp
stc
pop
or
add
add
aaa
mov
add
xor
adc
outsl
add
sbb
imul
fs
pop
dec
jo
pop
inc
dec
xchg
pop
xchg
stos
jo
mov
in
pop
cs
test
pop
push
cmp
inc
mov
and
or
icebp
add
push
push
in
les
jo
xchg
repnz
incb
pop
orb
push
xor
rcrl
lock
xchg
loopne
or
push
or
pop
ror
test
cmp
popa
sub
pop
cmpsl
push
inc
mov
je
add
sub
rclb
dec
or
lds
push
pop
enter
push
mov
xorl
or
scas
clc
xchg
mov
in
mov
arpl
pusha
mov
sbb
fs
inc
or
push
rolb
mov
push
and
inc
jnp
dec
xchg
or
mov
push
sbb
push
sub
add
bound
add
cwtl
xor
xor
inc
pushl
aaa
adc
or
sub
clc
push
loope
pop
or
and
xor
jp
cwtl
pop
mov
add
push
or
xchg
push
scas
faddl
or
xor
nop
insb
pop
ret
pop
rcll
adc
jle
scas
call
inc
jmp
or
shrl
pop
mov
cmp
add
and
loope
or
mov
lcall
or
adc
or
sbb
adc
test
outsl
cmp
push
mov
and
fsubrl
sbb
aas
inc
popf
lods
adc
push
test
mov
inc
outsl
mov
jo
sub
subl
addr16
idiv
xchg
or
mov
add
into
enter
hlt
sub
jg
mov
mov
add
cmp
sbb
repz
sbb
sub
pop
mov
adc
mov
jno
jo
push
xchg
adc
addl
pop
xchg
push
mov
orl
sbb
gs
sbb
xor
jp
cs
bswap
stos
stos
sbb
cmp
push
cmp
push
mov
dec
sarb
push
cld
sub
add
xchg
stos
mov
or
int3
in
rcrl
repnz
pop
mov
cltd
test
sub
inc
je
jmp
scas
sbb
and
mov
out
inc
adc
xchg
mov
mov
cmp
rcrb
adc
cltd
dec
mov
add
pop
enter
adc
xchg
jae
or
popa
jb
pop
mov
add
rcll
cltd
sbb
or
dec
or
xchg
stos
mov
mov
push
cwtl
or
arpl
inc
mov
adc
aas
add
cmp
pop
sbb
lcall
or
stos
cld
and
sarb
adc
js
pop
add
push
sbb
leave
in
push
mov
or
add
pop
rcrl
es
inc
sub
and
inc
out
mov
or
push
in
cld
sbb
hlt
lock
or
adc
pop
xchg
mov
xchg
jnp
push
into
jmp
cmp
test
sub
out
ret
push
in
mov
aam
xchg
adc
aas
daa
pop
mov
jl
mov
movsl
dec
mov
add
rorl
stos
pop
xor
jo
sub
js
shrl
xor
xchg
addl
sbbb
and
add
mov
dec
cwtl
add
pop
cmc
xchg
and
rorl
adc
adc
rol
push
mull
ja
push
mov
push
mov
gs
push
test
jo
or
push
cmp
fsubrl
dec
push
aas
lds
add
add
js
mov
jo
fwait
ret
nop
add
xor
cmp
daa
and
or
sub
xor
popf
cld
fbstp
mov
mov
pop
add
lea
dec
sbb
mov
adc
cmp
jmp
jae
jb
and
jmp
adc
test
mov
lret
lcall
jmp
or
or
push
hlt
inc
lret
mov
or
sbb
push
mov
and
xchg
or
out
xchg
push
push
pop
xorb
lds
xor
sbb
orl
and
xorl
ljmp
rolb
pop
lret
call
cmp
cmp
scas
sub
pop
aaa
ljmp
sub
call
and
inc
icebp
sbb
sbb
xchg
lcall
jns
dec
add
inc
cmp
ja
jmp
inc
add
cmp
inc
ficoms
pop
mov
out
mov
sub
mov
dec
or
insb
pop
imulb
sub
push
pushf
int3
mov
xchg
add
addr16
mov
jb
sub
jmp
add
jle
addb
jo
mov
mov
popa
loop
mov
sub
pop
mov
test
sbb
add
push
out
enter
adc
roll
mov
adcb
test
push
mov
popa
and
in
xchg
stos
sub
ret
lock
popa
jb
pop
out
imul
pop
dec
cs
add
xor
in
cmp
or
inc
push
adc
inc
or
scas
and
out
loopne
stos
lret
lcall
sub
jno
mov
cmpsb
test
mov
loope
adcb
mov
enter
add
les
lret
cmc
mov
adc
repz
add
and
pop
loopne
shlb
das
pushf
pusha
rcrb
or
mov
adc
mov
sub
lret
jb
sub
in
ds
and
fucomi
inc
scas
cmp
stos
jo
stos
sbb
mov
add
lods
das
sub
jb
cli
push
dec
or
loope
loopne
or
push
push
and
mov
inc
test
push
pop
nop
mov
enter
shll
jae
xchg
mov
cmp
or
adc
and
push
sub
fsubs
nop
stc
sbbb
mov
ret
sub
push
adc
cmp
mov
insb
popa
adc
dec
sarl
xchg
rorl
les
mov
add
lcall
mov
jno
mov
int3
mov
nop
mov
xor
or
enter
sub
iret
outsb
mov
jecxz
inc
sub
adc
test
inc
mov
push
sbb
sbb
jo
xchg
subl
cmc
mov
push
add
inc
gs
add
pop
inc
test
push
and
cmpsb
push
jb
xor
jb
adc
ret
or
inc
jb
push
lret
sbb
add
xchg
pop
scas
cmp
test
gs
addl
push
sahf
push
mov
or
add
xchg
push
and
pusha
sbb
add
push
cmpsb
dec
mov
push
adc
lods
pop
dec
cmp
or
test
push
in
mul
aam
add
inc
adc
or
mov
inc
cld
adc
fcomps
mov
cmp
cltd
sub
sbb
push
cmpsb
push
popf
adc
xor
ret
sub
or
adc
cmp
aaa
jnp
push
push
pop
mov
sbb
cmp
mov
xor
pop
call
pop
cmp
push
or
dec
push
ja
push
mov
and
mov
mov
aas
movsb
push
xor
xor
xor
cltd
pop
push
lods
call
hlt
test
sub
es
pop
jecxz
xor
sbb
and
add
inc
adc
scas
call
mov
stos
jle
les
stos
mov
or
push
imul
cld
incl
push
rolb
push
cs
mov
aad
add
push
add
push
mov
aas
mov
leave
push
ljmp
xlat
pop
loope
mov
ljmp
sub
cmp
xor
push
or
mov
push
ret
lret
xor
fwait
inc
add
mov
in
add
mov
stos
js
subl
sub
dec
andl
mov
mov
sub
push
inc
movsl
jge
sbb
adc
test
or
jge
pop
mov
iret
pushl
sbb
push
int
or
ret
imul
scas
iret
sarl
jnp
sbb
pop
sahf
fcom
sub
cmp
dec
cmp
push
loopne
pop
notb
jo
xor
push
jb
mov
sub
repnz
stc
jmp
sbb
xchg
cwtl
cltd
bound
repnz
jnp
addb
adc
jmp
or
repz
loop
loopne
xchg
shll
cs
dec
adc
div
or
sub
pop
jns
mov
dec
ds
lcall
movsb
pop
push
xor
int
and
stos
cltd
or
push
pop
mov
loop
and
insb
sub
push
lret
in
ja
dec
push
cmpsb
outsl
clc
cld
adc
xor
cltd
test
xor
repnz
and
add
add
inc
xchg
mov
push
push
push
movsb
adc
xchg
pop
jnp
lcall
insb
sub
lret
movsl
and
fdivrs
call
xor
out
call
cmp
sbb
cmp
test
popf
adc
stos
pop
iret
fdivl
mov
scas
add
cmp
pop
and
inc
sub
mov
add
enter
mov
lock
xor
sub
stos
or
inc
loopne
jp
in
mov
pop
cmpsb
pop
jne
ret
pop
stos
iret
aam
or
dec
loopne
cmpsl
bound
scas
pop
data16
dec
int
movsb
and
push
enter
loop
mov
mov
inc
pop
int
sub
dec
push
lock
push
scas
loopne
jg
xchg
and
adc
mov
enter
mov
push
loope
and
adc
xchg
and
gs
repnz
add
cmpl
outsl
cltd
or
pop
mov
add
push
in
jp
pop
cmp
sbb
cmpsb
lret
or
mov
arpl
xor
movsb
inc
std
repnz
sub
fs
sbb
and
mov
adc
inc
mov
jo
loope
sbb
pop
addl
loopne
inc
in
pop
mov
xor
jo
mov
insl
sbb
sub
xor
sbb
imul
les
js
mov
iret
push
test
loop
movsb
aad
pop
inc
cmp
pop
inc
mov
sbb
fisttps
add
xchg
sarb
cmp
jmp
add
jns
and
and
and
pushf
pop
iret
adc
or
cmp
bound
dec
pop
cmpsl
sbbb
repz
popa
jb
mov
aad
clc
nop
sbb
xor
outsb
popl
lcall
mov
test
jb
lcall
sub
data16
mov
or
enter
cmp
mov
inc
cmp
push
pop
or
sub
adc
jge
pop
pusha
sub
or
mov
xor
sbb
xlat
pop
push
push
cmp
push
cmp
test
pop
jg
stos
or
push
mov
jb
loopne
add
pusha
or
inc
aad
push
das
add
inc
adc
add
sbb
mov
test
sar
or
shl
push
ficoms
dec
lods
sub
inc
xchg
sbb
xchg
mov
sbb
mov
pop
and
push
lret
sbb
ss
fldcw
sbb
je
mov
ds
push
nop
mov
cmp
test
aas
cli
cwtl
inc
push
cmpsl
xorb
dec
pop
cld
orb
cmp
mov
or
int
jnp
cltd
lcall
loop
pusha
sub
xchg
shl
cs
xor
rcll
xorl
aam
test
adc
push
loope
shl
decl
pop
scas
and
mov
cmp
add
leave
push
clc
push
and
aaa
int
xchg
stos
push
out
inc
inc
into
das
mov
adc
iret
mov
xchg
lahf
add
pop
cmpsb
and
fiadds
xchg
ret
shll
or
ret
subb
add
dec
sub
cwtl
test
push
hlt
mov
xor
stos
sub
xchg
add
mov
roll
and
xchg
iret
mov
sbb
ret
pop
inc
xchg
xor
pop
stc
leave
xchg
lea
bound
fidivrs
inc
shrl
dec
add
xor
sti
and
inc
jge
or
popf
movsl
in
mov
cmp
sub
push
xlat
mov
aas
sub
mov
mov
mov
cmp
shll
push
ret
cmp
pop
push
pop
cmpsl
sub
jae
js
test
xorl
jne
loopne
repnz
mov
jp
lret
out
adc
jecxz
test
subb
mov
cli
fs
add
sbb
add
testb
inc
test
xchg
dec
in
xchg
jo
daa
or
push
js
lods
cmp
xor
ja
mov
sub
jp
inc
roll
pushf
das
rorl
or
push
sub
in
add
xchg
out
std
dec
xchg
push
dec
mov
or
icebp
fildll
divps
in
jns
outsb
mov
dec
repnz
pop
mov
add
add
add
add
ja
mov
das
into
sub
xchg
leave
loop
das
xchg
jae
sub
inc
ds
mov
icebp
dec
arpl
add
lds
cwtl
inc
in
inc
rcl
sub
psraw
fsubl
mov
inc
mov
sbb
cmp
cmp
es
push
testb
call
and
inc
adc
lahf
and
scas
pop
mov
test
mov
scas
insb
xchg
mov
sbb
xchg
out
insb
cmp
cmp
push
sub
pusha
and
je
add
out
xor
pop
xchg
push
adc
cs
nop
rcr
pop
repz
ret
jo
dec
andl
adc
add
pop
add
scas
mov
pop
pop
jle
push
lret
test
loope
push
add
sub
add
dec
test
xor
ss
mov
repz
inc
adc
sub
cltd
mov
popf
sahf
sub
dec
daa
lcall
push
mov
into
push
fs
sbb
addl
adc
cmp
xchg
inc
dec
dec
cmc
loopne
aad
xchg
xchg
ret
and
addr16
inc
int
clc
bound
cmp
push
das
mov
adc
inc
jae
pop
cmp
mov
nop
stos
xor
cmp
or
push
cwtl
push
popf
test
mov
sbb
adc
xchg
mov
scas
add
sti
ds
inc
push
movsb
fmull
mov
ss
push
push
add
mov
in
dec
dec
nop
or
fs
pushw
mov
or
stos
mov
in
loopne
cwtl
xorb
push
cmp
adc
pop
push
jae
jae
jae
sbb
mov
out
push
inc
aam
daa
retw
inc
xor
push
enter
in
push
jo
xlat
or
adc
in
cmpsl
push
add
stos
aam
lahf
sub
mov
push
inc
test
and
stos
lret
adc
ret
sbb
mov
jne
pop
add
ss
sbb
stos
mov
enter
test
jg
data16
lret
jbe
sub
dec
push
mov
and
lods
dec
xchg
adc
lcall
mov
dec
mov
outsl
repnz
adcl
pop
andb
jo,pt
into
xchg
jo
pop
push
jae
and
js
sbb
add
xchg
add
pushf
mov
cmp
or
push
repnz
cmp
rolb
fs
pusha
enter
lcall
repnz
adc
xchg
lret
dec
lock
insb
push
adc
out
add
js
adc
cmp
mov
aaa
sub
push
lock
xor
lods
enter
das
lods
adc
dec
mov
lods
insb
dec
add
and
mov
push
aaa
add
lret
add
stos
xor
add
push
loope
push
xchg
loop
test
mov
jo
nop
add
sbbb
js
sbb
or
cld
push
mov
dec
inc
stos
mov
fs
sub
insl
sub
cs
dec
xor
mov
pop
cmc
push
cltd
rcl
add
dec
test
or
adc
and
lret
inc
rcrl
rcll
inc
adc
dec
rcrb
dec
inc
std
inc
mov
xchg
dec
loopne
jns
scas
aam
pop
xchg
ret
mov
xor
sahf
mov
sub
sbb
inc
mov
pop
inc
push
sahf
test
jne
es
mov
inc
andl
sub
je
shl
repnz
cmpsb
inc
add
aas
cwtl
pop
popf
xorb
inc
mov
repnz
lds
inc
sbb
pop
loope
pusha
stc
data16
cmp
jo
sbb
and
mov
and
pop
cmpl
xchg
inc
or
xchg
and
jb
cli
pop
push
stos
imulb
xorl
add
out
cltd
jb
xchg
enter
xorb
lods
adc
or
mov
mov
int
jbe
adc
or
sub
in
inc
xchg
cmp
push
int
mov
add
gs
xchg
cmp
or
pop
aas
outsb
push
cmpsl
pushf
mov
add
push
mov
pushf
ret
cli
mov
lods
pop
sbb
xlat
jb
mov
shll
cmpsb
sbb
js
sub
scas
add
xor
testb
push
push
insb
xchg
xor
mov
push
loopne
xchg
add
xchg
jp
rclb
adc
cwtl
inc
hlt
mov
add
lret
ret
jo
adc
jb
int
popa
xor
push
inc
aad
or
pop
test
xor
pusha
adc
push
leave
call
test
inc
cs
push
fildl
sbb
jp
jo
into
and
mov
int
sbb
faddl
inc
jbe
push
mov
out
test
inc
aad
mov
popf
sbb
stos
fisubl
or
dec
mov
cmp
scas
shrb
imul
mov
in
sbb
inc
jno
push
sahf
cmc
push
sub
push
loopne
xorb
push
cmp
ret
mov
adc
push
fs
clc
rcl
test
cmp
xchg
leave
adc
test
jne
add
sub
leave
loope
in
das
or
ljmp
cli
jg
mov
push
pushf
sarl
push
jnp
clc
xor
add
subb
or
imul
scas
sbb
and
xchg
inc
int3
scas
cmpsl
add
jmp
lcall
or
inc
loopne
addb
loopne
sar
mov
nop
pop
sarl
cmp
add
ja
cld
outsb
push
adc
dec
inc
lret
les
enter
add
lret
mov
adc
jb
gs
xor
cs
insb
add
aad
pop
cs
add
mov
add
daa
push
aam
pop
or
or
jl
addb
add
dec
outsl
lcall
insl
gs
outsl
inc
outsl
insl
jo
je
jb
push
sbb
mov
jbe
je
gs
jne
je
outsl
arpl
gs
jo
mov
std
push
je
imul
popa
fs
or
push
adc
std
imul
fs
imul
fistpll
outsb
push
arpl
gs
outsl
fs
gs
popa
outsb
in
outsl
xchg
fs
adc
jle
insl
dec
outsb
outsw
push
mov
jne
subl
pop
aas
insb
sbb
in
daa
dec
inc
insb
popa
addr16
dec
std
mov
pop
jne
inc
jae
imul
mov
imul
bound
arpl
xor
popa
mov
add
push
in
push
dec
dec
sbb
lods
in
fisubl
insl
icebp
dec
gs
punpcklwd
push
pop
insb
ja
mov
in
addb
incl
push
je
outsb
je
and
inc
inc
dec
inc
adc
pop
push
xchg
push
out
cmp
imul
xchg
lock
or
or
vphaddudq
push
inc
bnd
in
out
je
add
push
outsl
pop
and
push
outsb
test
jb
insl
inc
sub
aas
fistl
fwait
push
dec
push
xor
xor
jne
fistps
push
out
loope
pop
sub
insb
insb
mov
push
insb
adc
push
push
gs
lods
cmp
jo
outsl
ja
jb
sbb
outsb
jne
xchg
daa
or
or
mov
sub
cmp
out
push
push
jae
mov
test
jo
bnd
add
mov
mov
xor
or
jnp
add
call
aaa
jae
sbb
push
loope
std
mov
outsb
inc
jb
push
ds
add
test
xor
flds
movb
fsubl
sub
mov
loope
sub
lea
pop
or
sub
mov
xchg
outsl
pop
push
imul
xor
mov
shll
or
mov
aam
and
out
adc
ret
int
imul
shll
and
fwait
int
pop
test
mov
adc
outsb
mov
xlat
fiaddl
inc
stos
xchg
fildl
cmp
ret
and
mov
mov
popa
jae
mov
sub
mov
sub
xor
inc
jge
mov
jle
das
mov
insb
addr16
mov
adc
pop
sbb
imul
inc
dec
inc
loope
inc
fwait
mov
imul
push
inc
fcomps
pushf
outsl
insb
or
out
add
std
push
loope
arpl
leave
jb
lods
xor
js
ja
inc
jnp
dec
inc
pop
mov
insl
jg
dec
jo
cmp
or
jp
cmp
jb
mov
and
test
jns
sub
bound
inc
xor
arpl
ret
mov
scas
add
push
jae
xor
dec
jne
test
lods
and
xor
lods
jne
pop
dec
inc
int
jp
pop
ret
popa
bound
xchg
xor
lods
stc
xor
cmp
movsl
je
stos
push
daa
insb
sbb
or
pop
addr16
push
xchg
rclb
lds
add
out
outsb
test
dec
dec
dec
dec
push
cmp
dec
dec
inc
iret
dec
add
and
and
and
clc
aad
outsl
or
scas
push
mov
dec
outsl
sbb
es
arpl
hlt
or
mov
or
fildl
in
cmp
inc
jb
cmpsb
in
cmpsl
test
jg
mov
cmp
pop
sub
mov
pop
mov
bound
lahf
jo
out
sbb
fmul
mov
ror
hlt
cmp
push
fxch
rcrb
inc
ret
outsb
pusha
pop
mov
cmp
inc
addr16
pushf
arpl
imul
mov
jbe
fsubp
mov
dec
outsl
pop
jo
mov
fsubl
fmull
gs
push
xor
push
push
fldt
imul
test
or
rcrl
xchg
sbb
inc
ret
repz
mov
loope
je
and
stos
fwait
pop
test
lds
sbbb
add
add
add
and
jg
add
add
add
add
adc
jne
or
xor
adc
inc
or
cmp
add
add
mov
push
dec
xchg
insb
shrb
adc
push
or
mov
cmp
or
add
sbb
cmpsl
adc
jl
sbb
pshufw
rolb
add
add
incl
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
icebp
sub
jbe
fisttps
and
in
adc
mov
call
jmp
and
or
push
xor
insb
jo
xchg
sbb
movsb
mov
call
popf
roll
push
and
fnstcw
xor
addr16
jnp
sti
sub
cmp
inc
pop
out
pop
lock
mov
cli
ss
pop
xor
sbb
test
mov
push
sbb
aaa
mov
xchg
pop
inc
mov
subb
jecxz
xchg
cwtd
jnp
push
iret
test
out
test
inc
call
dec
sub
roll
pop
jge,pt
adc
dec
xor
jno
imul
add
mov
fmuls
mov
rcrb
mov
add
or
fnstsw
mov
push
lods
adc
lods
jle
js
xchg
lahf
jns
outsb
dec
dec
mov
and
pop
xchg
scas
insb
push
adc
adc
xchg
push
or
out
mov
mov
lret
xor
mov
stc
cmp
mov
cmp
fists
repz
xor
dec
rcrl
and
xchg
loopne
mov
cltd
add
aam
adc
xor
adc
popa
and
fnstenv
mov
shll
push
pop
and
shrl
adc
stos
mov
and
mov
fdivl
rcr
dec
jmp
push
cld
ljmp
cmp
lods
ss
and
adc
jmp
or
insl
add
dec
or
sub
adc
mov
movl
loopne
cwtl
and
push
arpl
fsubl
xor
mov
