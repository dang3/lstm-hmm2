std
jg
add
in
add
imul
cmp
add
imul
mov
cmp
in
ljmp
out
pop
sub
imul
sub
sub
sub
mov
mov
adc
idiv
decl
incb
inc
cld
cmp
or
mov
push
sub
sub
and
imul
ds
add
fstpt
mov
mov
rcll
adc
mov
push
mov
add
push
add
xor
mov
mov
pop
or
lock
sbb
lret
call
ja
insl
into
dec
mov
invd
mov
jg
mov
nop
mov
cmp
cmp
sub
out
outsl
mov
pop
mov
sub
mov
out
arpl
cmp
gs
sbb
clc
add
sub
mov
push
sub
movb
or
ficoms
movsb
rcrb
out
and
jbe
daa
or
bswap
mov
or
imul
and
cmp
sub
cmp
mov
mov
cmp
sbb
rclb
clc
mov
sti
ret
mov
add
decl
test
pop
idivl
and
fcmovnbe
mov
push
into
xor
mov
ret
mov
sbb
repnz
sbb
xlat
or
or
js
push
or
mov
insb
add
fldt
testb
pop
add
insb
add
movsl
cmpsl
xchg
mov
mov
push
sbb
lods
lds
jo
inc
pop
lret
pop
cld
inc
or
fidivl
add
or
popa
jnp
in
add
sub
adc
rclb
ret
jmp
fldcw
insl
sbb
or
cmp
icebp
test
lea
mov
lret
cmp
add
push
adc
push
ret
pxor
mov
sbb
fidivrs
shl
call
or
mov
adc
mov
call
pop
adc
inc
adc
std
mov
and
ljmp
pop
sub
fs
cmp
cs
shll
mov
sbb
and
add
add
adc
insl
pop
insb
loope
mov
push
xor
or
rcl
sar
add
loop
lcall
push
add
adc
out
loope
into
jmp
mov
mov
sbb
sub
mov
into
xor
mov
lahf
adc
inc
lock
xchg
sbb
lock
mov
cmp
repnz
mov
adc
shlb
adc
adc
xor
mov
loope
pop
adc
xor
fstpt
jae
cwtl
adc
lock
or
or
mov
cwtl
adcl
bound
jg
pop
push
or
shrl
mov
or
test
shll
cmp
lcall
sarb
or
jnp
adc
xor
pop
sbb
cmpsb
lods
adc
insb
or
push
insl
xchg
adc
mov
insl
cmpsl
out
mov
adc
pop
dec
scas
sarl
mov
sarl
push
movsb
mov
lods
insl
sti
adc
clc
punpcklwd
fiadds
mov
incl
adc
pop
leave
cmc
popa
imul
adc
je
mov
lret
mov
mov
jmp
adc
popf
cmpsl
add
in
mov
dec
dec
call
pushw
pop
xchg
or
pop
mov
rcll
fmuls
cld
mov
addr16
jge
enter
sbb
cmp
or
arpl
ja
fisttps
call
leave
ret
call
cmp
add
add
xor
es
or
clc
push
or
insl
movsb
outsl
int
gs
adc
fistpl
or
push
and
mov
insl
xor
icebp
pop
clc
or
adc
inc
rorb
mov
sbb
and
sub
push
sub
cld
cmp
test
sbb
mov
scas
out
inc
imul
and
in
or
adc
cmp
add
mov
popf
or
shr
rorb
or
jbe
cli
or
shlb
movsl
cli
sar
pop
out
in
test
movl
pop
lods
pop
jnp
cwtl
and
or
icebp
mov
lahf
mov
add
add
scas
and
sub
insl
pop
adc
push
push
push
adc
lcall
mov
jmp
mov
ret
enter
push
pop
loop
dec
cltd
sbb
test
xor
mov
cmp
adc
mov
loopne
add
mov
rcll
adc
dec
lods
popf
mov
push
push
outsb
ss
mov
pop
mov
xor
mov
adc
jno
call
mov
lock
dec
test
push
xor
jle
ret
and
lods
arpl
hlt
rcrl
pop
leave
pop
leave
cmp
push
mov
push
xor
into
push
push
rcl
xchg
xor
add
sub
in
xor
cli
pop
daa
or
ficoml
shl
or
insl
jnp
lcall
push
arpl
adc
rorb
clc
and
sbb
add
stos
lock
out
or
xlat
data16
cltd
mov
jmp
mov
xor
shll
pop
mov
cwtl
mov
adc
or
pop
sub
mov
push
and
insb
jmp
and
adc
or
ret
pop
jo
outsl
ljmp
adc
xchg
jp
lret
pop
clc
pop
daa
clc
sbb
sub
popa
push
data16
or
or
push
mov
bound
rol
xor
add
mov
orl
popa
sbb
xchg
sbb
jmp
push
and
inc
xchg
sbb
leave
sbb
add
jns
add
and
dec
xor
cld
data16
pop
or
push
sub
xchg
pop
mov
add
xlat
add
fwait
dec
push
fildl
jae
outsl
icebp
bound
mov
cmp
jne
or
adc
fmulp
aad
shlb
fisttpll
push
push
mov
scas
pop
leave
mov
lea
insb
add
mov
hlt
mov
pop
push
inc
add
mov
sti
ficompl
pop
sbb
repnz
dec
dec
pop
sbb
xor
mov
dec
clc
or
mov
lcall
mov
add
mov
pop
and
mov
push
push
add
frstor
icebp
enter
scas
inc
add
stc
jg
es
mov
sbb
cwtl
pop
mov
ret
rclb
loopne
inc
cwtl
push
lds
mov
mov
sbb
jo
add
unpckhps
mov
pushf
inc
fistpl
lods
xchg
dec
mov
ds
fwait
inc
add
sbb
xor
inc
and
inc
ror
lods
cmp
mov
jge
test
inc
cmc
pop
int3
pusha
sti
inc
call
pop
mov
sbb
es
xchg
sbb
imul
loopne
fdivl
loopne
xor
sbb
dec
push
inc
hlt
xchg
inc
pop
popa
insb
sbb
add
sbb
sbb
mov
add
jp
sub
add
shr
fmull
fucom
mov
ret
pop
fists
mov
and
lcall
pop
sub
loopne
call
test
addl
dec
aas
sbb
sahf
inc
imul
sbb
loopne
sub
cmp
push
ret
sub
push
dec
dec
cmp
ret
mov
mov
jmp
mov
cmp
xchg
mov
into
and
and
sub
pop
sbb
outsb
out
rolb
clc
sbb
cmp
jns
push
in
mov
ret
shr
cmpb
je
push
dec
sbb
sbb
or
clc
popf
add
push
cmpsl
out
leave
sub
jl
in
clc
shlb
mov
or
loopne
push
loopne
dec
cmpsb
add
cmpl
cmp
inc
add
sbbl
jmp
inc
test
add
mov
xchg
js
mov
push
bound
mov
inc
add
mov
imul
pop
test
sub
fiadds
add
iret
call
js
push
movsb
lock
ret
add
pop
clc
nopl
xlat
xchg
or
movsb
ret
pushf
add
inc
std
aas
mov
add
push
add
inc
mov
push
add
cs
add
fcom
adc
mov
insb
adcw
sbb
imulb
mov
in
or
mov
mov
mov
adc
xorl
repnz
or
jne
test
and
cvtps2pd
icebp
pop
out
adc
and
mov
cmpsl
fwait
mov
mov
insb
aas
lock
adc
ja
jbe
flds
sub
mov
adc
xlat
mov
imul
sbb
inc
shl
pop
dec
daa
orl
rol
sbb
add
mov
pop
loop
call
mov
sbb
adc
inc
push
jmp
cmp
xor
add
outsb
pop
xor
xchg
adc
stos
push
sub
call
mov
jo
pop
mov
nop
div
adc
xor
push
add
push
push
xor
xor
adc
jno
sbb
shll
sub
daa
jbe
jae
add
or
sbb
stos
enter
ds
sub
pop
jmp
xlat
dec
mov
adc
push
mov
lock
shlb
repnz
es
das
into
adc
aad
loopne
mov
push
jmp
or
testb
js
push
inc
or
fs
add
nop
sub
pop
jl
push
push
push
pop
shll
cmp
xchg
paddusw
or
add
out
jae
fisttpl
push
push
push
insb
fcmovbe
dec
test
cmc
sub
in
roll
jo
cwtl
dec
mov
dec
pop
or
adc
and
mov
lret
jbe
mov
mov
adc
push
outsb
popa
sbb
mov
sbb
inc
es
test
push
dec
ss
xor
loopne
xor
mov
les
and
mov
pop
sbb
push
and
ret
shl
aas
sbb
pop
sbb
xor
out
or
jns
pop
stc
into
clc
ljmp
icebp
hlt
fdiv
adc
stc
or
and
push
gs
dec
push
popa
push
or
add
fwait
rcll
xor
push
popa
push
out
sbb
sbb
push
add
cmp
ret
sbb
pop
xor
mov
lock
push
and
pop
fstpl
cs
pop
mov
cmpsb
cwtl
mov
mov
shll
or
mov
test
test
add
les
loope
fcoml
pop
in
inc
xlat
sub
cmp
pop
loope
stos
sbb
lcall
popf
push
mov
and
inc
icebp
push
rcrb
ds
cwtl
jmp
sub
cmp
out
fsubrs
gs
bound
cmp
loope
rol
cwtl
jl
and
shlb
inc
dec
jp
or
or
adc
jecxz
pop
ljmp
mov
pop
dec
adc
scas
mov
popa
lret
pop
or
sub
xchg
jp
das
imul
mov
cmp
xlat
outsb
into
dec
out
xor
sbb
cmp
inc
mov
sahf
sub
mov
icebp
sub
or
and
enter
leave
xor
call
andl
xchg
inc
inc
cmp
roll
rcl
or
int
inc
and
negb
mov
pop
xchg
repnz
xchg
dec
lock
leave
ret
mov
shlb
shrb
or
add
jb
pop
or
bound
xor
ficompl
push
xor
out
push
mov
push
cwtl
mov
pop
pop
test
lahf
or
mov
adc
adc
sbb
lret
les
ss
icebp
dec
pop
push
or
daa
push
mov
mov
sbb
jns
sub
subb
test
and
outsb
adc
rsqrtps
inc
or
or
mov
dec
lock
mov
mov
mov
fnstenv
sbb
mov
jb
add
inc
jp
mov
add
sbb
cmp
sub
pop
mov
mov
lret
enter
loope
xor
leave
lods
dec
mov
pop
jl
loop
push
imul
pop
icebp
ret
push
sub
pop
mov
ret
rclb
rolb
jo
fs
cmp
mov
sbb
push
mov
dec
xor
adc
test
cmp
insl
jmp
or
mov
test
aad
push
pop
sub
cmpsl
into
loope
jmp
mov
or
jmp
jg
jbe
int
pop
add
push
push
stc
imul
inc
rcl
in
lret
pop
outsl
xchg
or
mov
add
fistps
mov
mov
ficoms
repnz
rorb
pop
pop
adc
ret
mov
jp
pop
std
test
or
add
sbb
cmp
ret
pop
int
mov
imul
hlt
dec
mov
leave
adc
nop
pushf
sub
ficompl
insl
add
push
inc
add
jb
mov
push
add
cmp
xchg
add
adc
mov
mov
adc
rcll
icebp
mov
aad
adc
push
imul
enter
push
loopne
sbb
call
add
sbb
aad
test
push
pop
sbb
cwtl
leave
adc
mov
mov
push
nop
ljmp
push
and
adc
mov
jg
pop
or
addb
out
push
sbb
rclb
aam
cwtl
out
roll
sub
xchg
fwait
loop
pop
push
push
fldt
sbb
lods
mulb
sub
add
ja
in
cmc
sarb
push
pop
push
sub
aam
aam
es
sub
jnp
insb
pop
insb
pop
and
inc
pop
sub
xchg
pop
adc
nop
push
fldcw
fs
int
mov
ret
mov
aaa
clc
push
mov
insb
adc
adc
rorb
addl
or
jnp
out
dec
notb
roll
lahf
mov
sbb
or
pop
add
adc
into
aad
mov
stos
lea
cli
ja
pop
cmp
jne
ficompl
fdivs
push
rol
pop
xchg
xor
lret
pop
lock
cmovnp
mov
and
lods
xor
es
lcall
add
subl
lock
lock
add
jle
int3
mov
pop
sub
or
push
inc
inc
add
push
mov
push
cmp
enter
loop
aas
es
scas
movsb
xor
std
add
pusha
add
jl
pop
push
orl
pop
inc
ret
add
je
jp
push
insb
pop
cmpsb
pop
into
push
fisttpl
inc
loopne
push
cmc
xchg
sub
sbb
jecxz
sbb
dec
lods
or
sbb
sbb
add
shl
cmp
push
push
es
mov
pop
xor
jp
or
sub
int3
cld
clc
mov
rclb
js
dec
cmp
sub
push
pop
loope
push
leave
sbb
push
loopne
fwait
cmp
xor
sbb
jp
push
adc
jnp
das
mov
mov
add
es
inc
add
mov
push
or
mov
cli
sub
adc
xor
lods
es
jo
subl
ret
ja
xlat
sub
push
test
pop
mov
call
adc
popa
aam
add
mov
lods
mov
pop
icebp
hlt
sbb
push
andb
int
inc
jno
outsb
jnp
sbb
inc
lea
inc
test
jge
addl
xor
pushf
test
push
out
sbb
mov
push
enter
xchg
dec
cmp
test
mov
xor
or
sarb
inc
dec
xor
xchg
cmp
pop
sbb
pop
test
daa
add
lret
add
or
mov
push
scas
sbbb
inc
pop
xchg
jno
adc
ret
push
cmp
mov
adc
jnp
sbb
enter
sub
or
jle
adc
rcrl
mov
add
and
js
push
xchg
bound
test
ja
push
adc
push
or
scas
arpl
ret
out
scas
mov
pop
mov
add
add
inc
push
cmp
cmp
icebp
pop
xor
jne
rorl
mov
pusha
sub
jae
pop
push
dec
sbb
jbe
sbb
inc
cmp
fisubrl
sahf
rcl
shlb
adc
fwait
xchg
add
sbb
fcomps
jle
clc
or
xchg
rolb
sbb
xchg
enter
adc
add
jo
push
cmp
rcll
xorl
dec
jp
push
or
loope
pusha
rorl
in
pop
cmp
cmp
fisttpl
pushf
xor
push
jb
ret
ljmp
mov
iret
das
repz
push
sub
rclb
jno
inc
xlat
int3
and
in
mov
xchg
sbb
lods
lods
adc
sbb
pop
sbb
mov
ljmp
sub
arpl
lock
call
xor
inc
enter
cmp
lods
xchg
and
lds
jb
cmc
inc
fwait
inc
inc
aaa
add
cs
dec
and
adc
inc
push
xor
mov
stos
call
add
xor
clc
xchg
jmp
dec
mov
pop
dec
icebp
xor
test
popf
cmc
mov
push
push
not
cwtl
sub
or
leave
sbb
negl
mov
mulb
bound
push
in
xchg
pop
xchg
nop
cmp
push
out
outsb
insl
jmp
push
xchg
mov
push
in
pop
fldl
xchg
test
cmp
push
or
inc
inc
and
adcb
cmpsl
into
cmp
scas
lea
jo
int3
or
mov
imul
inc
fistpl
xchg
leave
cs
sub
xor
pop
mov
and
clc
adc
out
enter
jo
rclb
popf
cli
sti
aam
or
push
xor
rcrb
sub
addl
ja
xchg
mov
mov
maxps
xchg
clc
push
pop
dec
shr
pop
iret
mov
mov
stc
add
push
jo
push
mov
les
shr
sbb
jne
inc
out
dec
out
insb
add
rolb
rcr
push
pop
es
mov
pop
das
xchg
cmpsl
sbb
hlt
test
rclb
shl
fld
in
in
jmp
add
push
pusha
je
mov
adc
or
daa
ret
cmpsl
dec
xlat
loopne
call
push
sub
lods
add
rorb
jg
push
push
push
inc
pusha
ret
push
inc
loopne
push
or
loop
sub
adc
ret
adc
lret
pop
test
jne
jmp
stc
aad
call
add
shl
pop
dec
jne
leave
test
xor
adc
mov
arpl
rcrl
xchg
rcll
enter
cltd
xchg
mov
hlt
push
bound
lret
add
sbb
xor
into
stos
adc
push
dec
dec
push
jmp
mov
adc
sub
sbb
inc
fisttpl
into
add
cmc
mov
sbb
jg
orb
test
push
cmp
xorl
pop
movsl
leave
xor
push
scas
lcall
and
rorl
jl
xor
pop
adc
ljmp
dec
sbb
xchg
pop
andl
pusha
add
pop
mov
fwait
ror
das
stc
push
in
leave
call
and
and
scas
cmp
lcall
cli
stc
aas
icebp
stc
push
push
idivb
sbb
rol
sbb
in
lock
xor
add
pop
mov
lcall
add
push
arpl
push
hlt
inc
rolb
mov
ficompl
orl
push
push
jo
xor
inc
add
inc
mov
decl
aad
adc
lret
mov
stos
push
cmpsl
xor
mov
cmp
ds
or
push
lret
js
outsl
mov
les
loopne
ds
stos
adc
ret
mov
jb
mov
out
or
pusha
add
pop
sarl
scas
in
pushf
lods
adc
lcall
jo
pop
shll
jmp
sbbl
pop
push
and
fldl
cs
sbb
lds
push
cmp
shl
jle
leave
fsubrs
into
mov
mov
fcmovnbe
add
nop
test
in
stos
rcll
mov
add
adc
orb
jb
add
shrb
push
in
or
test
sbb
push
call
push
xchg
mov
mov
imul
int
lahf
xor
test
sub
ljmpw
or
xchg
cmpb
xor
dec
aaa
push
subb
or
and
in
insb
adc
inc
inc
push
push
xor
sub
add
sub
out
jge
and
xchg
cwtl
jo
add
clc
xchg
lahf
aam
das
xor
mov
clc
mov
subb
into
dec
mov
ret
dec
repnz
sbb
cmp
pop
pusha
cmp
arpl
and
icebp
adc
xchg
mov
int
push
xchg
pop
leave
call
xor
push
loope
adc
pop
push
push
inc
mov
inc
jae
xor
data16
pop
push
call
adc
sub
and
negl
mov
dec
sub
aam
pop
test
and
and
stos
push
xor
sub
xchg
add
aam
nopl
jnp
mov
bound
cli
push
mov
clc
lfs
jne
sbb
jno
push
lods
sbb
jl
inc
add
jns
mov
push
push
cmp
or
mov
test
pop
dec
add
inc
lcall
or
or
sbb
adc
mov
and
lock
jmp
and
test
mov
adc
scas
ljmp
rol
stc
add
xor
mov
out
cmc
cmp
popa
je
gs
or
sub
lret
jo
add
push
or
shr
add
or
sbb
movb
pusha
and
scas
popa
dec
push
sbb
mov
push
cmp
int
adc
movsl
and
cmpsb
inc
mov
push
xchg
lods
adc
dec
dec
and
xor
mov
and
push
pop
or
cs
mov
in
lods
sbb
das
shll
insl
addr16
pop
pop
push
cmp
push
inc
movsb
xchg
imul
xor
out
pop
cmc
icebp
mov
mov
push
add
push
lahf
shll
sbb
es
cwtl
or
push
roll
stos
xchg
jno
rolb
imul
lock
mov
push
xchg
or
test
xchg
sarl
es
shll
movsb
sbb
adc
jmp
je
stos
or
prefetch
test
repz
cltd
push
sub
add
fucomi
push
xor
shrb
cmpxchg
add
push
xor
adc
xchg
sub
test
xchg
stos
sbbl
icebp
cmpsb
xor
push
pop
repnz
push
sbb
adc
sub
test
xchg
enter
add
test
or
pop
push
js
push
mov
and
and
frstor
iret
repz
mov
loopne
arpl
loope
inc
es
inc
pop
and
mov
cmp
push
faddp
mov
out
scas
data16
mov
loope
outsb
inc
imul
mov
mov
out
ds
jmp
inc
test
or
sbb
lret
cmp
xchg
mov
pop
inc
lods
add
arpl
sub
sar
push
leave
scas
sbb
adc
inc
addr16
leave
loope
push
push
sbb
xchg
loope
sub
les
cwtl
movsl
test
ret
push
sub
lock
inc
shl
lret
add
or
roll
mov
cmp
clc
into
cmp
xor
loop
inc
sbb
in
test
and
sbb
sahf
add
inc
jmp
andl
mov
sarl
and
add
repnz
dec
adc
push
inc
cld
aas
add
cmp
ror
jb
lods
add
inc
stos
inc
jp
es
sbb
cmp
push
shlb
incb
mov
add
jecxz
or
sbb
and
adc
jmp
pusha
js
sbb
sub
pop
mov
sub
and
mov
rorb
jl
or
imul
insl
cmpsb
lods
dec
shrb
mov
adc
sbbb
mov
add
pop
cmp
mov
loop
lock
add
or
lret
and
je
mov
insb
nop
mov
mov
mov
out
xchg
cs
add
adc
lock
push
push
and
and
lcall
push
das
mov
jl
xchg
sbb
or
mov
xchg
sub
adc
or
add
adc
sbb
leave
hlt
inc
jae
or
icebp
in
stc
adc
sbb
lret
outsb
and
xor
cs
xchg
mov
test
sbb
inc
jnp
nop
or
call
enter
xchg
insl
ficomps
push
push
ret
int
jo
or
mov
cmp
test
pavgb
jbe
cmpsb
repnz
xchg
cmpsb
orl
dec
cltd
push
mov
mov
push
pop
xor
test
repz
inc
ret
cmp
push
dec
in
int
push
cmpb
inc
sahf
std
mov
mov
jmp
rolb
adc
ss
add
cmpsb
mov
jmp
rcrl
icebp
fs
add
sbb
jbe
jmp
mov
push
je
add
cli
sbb
pop
or
out
add
stos
xor
mov
xor
lret
sbb
lret
jo
add
xor
add
sbb
lock
lds
inc
inc
roll
or
jae
push
not
mov
out
add
sbb
cmc
push
jnp
xor
adc
data16
mov
jge
lcall
lods
lds
aad
out
or
xor
call
jae
scas
sbbb
mov
adc
push
sbb
pushf
lret
stos
push
dec
out
jl
add
pop
or
adc
add
sub
push
cwtl
jmp
adc
or
sub
add
les
mov
cltd
dec
xchg
inc
popf
pop
adc
mov
add
iret
push
push
add
push
xchg
pop
negb
jb
test
jmp
faddl
test
push
jbe
mov
and
adc
mov
shr
aas
xchg
shrl
rcll
dec
je
rorl
or
sub
add
xchg
sbb
adc
mov
cmp
pop
xor
xchg
add
xor
sahf
shrl
sbb
lea
cmpsb
jp
mov
sbb
cld
jnp
mov
push
inc
inc
adc
lcall
push
add
leave
sbb
gs
ret
or
or
mov
mov
jge
inc
fidivl
push
arpl
fnsave
cmp
int
roll
xor
mov
mov
lds
push
sbb
mov
lods
mov
sub
or
adc
loope
push
mov
cmc
add
push
pop
loop
jo
roll
cmp
in
clc
in
add
push
jecxz
psllw
inc
add
fidivs
pusha
lea
lock
mov
sub
call
ss
shlb
inc
popf
cmpsb
das
push
ret
add
pop
mov
adc
push
cmp
adc
xchg
pop
js
mov
xchg
xorb
or
popa
sbb
out
cmc
outsb
in
addr16
ficoml
sbb
in
mov
add
or
or
push
repnz
ret
add
jmp
rcrl
pushf
inc
mov
xor
ret
xor
enter
cmpsb
repz
addl
sbb
ja
addb
push
shrl
mov
and
mov
add
sub
sub
addr16
sub
inc
add
imul
or
mov
push
push
pop
adc
call
jns
or
jo
cs
and
jo
lods
repnz
inc
or
ret
inc
sbb
stc
sbb
cmpsb
cmp
cmp
pusha
mov
negb
pop
cmc
inc
pop
and
sarb
test
sub
fs
or
push
xor
mov
and
add
inc
out
sbb
add
pop
mov
xlat
mov
mov
or
incb
inc
pop
test
xchg
jge
sbb
and
jo
mov
icebp
mov
or
add
jo
inc
xor
sbb
shlb
xor
mov
sbb
add
std
jbe
push
addl
loop
add
jbe
rorl
dec
lock
add
push
push
aas
inc
mov
push
push
lahf
push
or
jmp
outsl
adc
xchg
andb
test
sbb
add
mov
dec
call
icebp
push
or
je
mov
mov
mov
and
enter
cli
xlat
cmpb
cs
jp
mov
sub
xor
aam
mov
dec
fcomip
lea
xchg
mov
addr16
pop
cltd
addr16
inc
adc
adcb
jno
or
mov
fldt
shrl
sbb
add
inc
jbe
adc
or
pop
out
movsb
xorl
mov
rorb
bswap
and
push
cltd
push
mov
inc
insb
inc
jmp
push
xor
lcall
adc
outsl
rcl
or
ja
jp
and
cmp
in
out
inc
sbbl
xchg
icebp
orb
or
ja
stc
clc
pop
sbb
jbe
jb
sub
add
ret
mov
dec
add
pop
lock
frstor
icebp
push
add
xchg
sbb
push
push
lods
cmpsl
mov
or
aam
insl
dec
call
add
adcl
dec
mov
add
insl
rcll
out
adc
dec
pusha
lods
xor
add
sub
xor
js
ljmp
push
js
lods
mov
push
mov
adc
add
jecxz
testb
add
cmpsb
or
xor
repnz
cmpsb
jo
daa
xor
mov
or
push
add
dec
wrmsr
cmp
add
mov
test
or
xor
sub
stos
add
fistl
cmp
subl
jge
lock
cltd
xchg
jmp
mov
add
popl
mov
xor
lret
mov
insl
push
xor
or
stos
lods
adc
loop
lret
sti
sbb
addb
pop
xchg
sub
negb
call
ret
adc
pusha
sbbl
lcall
ljmp
movq
inc
pop
lea
sub
xchg
negb
or
test
add
repz
xlat
mov
lret
stc
pop
xchg
sbbl
aad
add
or
lods
xchg
mov
lret
js
sarl
or
mov
push
xor
int
inc
sub
adc
ss
mov
mov
dec
cmp
push
cld
int
sub
std
add
jns
add
lds
inc
or
cld
ljmp
sub
add
cmpl
mov
and
mov
xor
jo
pusha
dec
xchg
push
mov
or
mov
loope
dec
xor
xor
adc
add
and
adc
push
movsl
jb
dec
pop
and
shr
jmp
push
test
or
movsl
pop
dec
jno
inc
jmp
or
pop
sub
lock
bound
pop
adc
addr16
and
add
inc
sbbb
add
mov
repnz
push
ret
orb
sbb
adc
or
cs
les
and
mov
add
lods
mov
insl
add
into
ret
pop
xor
adc
mov
adc
jp
and
cmpsb
and
adc
inc
in
push
fstpt
mov
pop
pop
les
aaa
call
xchg
lods
inc
loope
loop
push
jne
cmp
sbb
jecxz
xchg
stos
adc
cmc
cmp
and
arpl
iret
ror
cld
dec
sub
jmp
cmp
xor
jp
aad
add
dec
sbb
sysret
lahf
cmp
inc
cmp
out
push
pop
pop
and
sub
pop
push
test
mov
icebp
jl
imul
pop
and
cmp
push
mov
loope
jbe
outsl
movhps
adc
cltd
cmp
pusha
sbbb
lahf
stos
cmp
in
push
or
pushf
or
inc
xchg
flds
adc
or
adc
gs
xchg
jne
or
and
push
add
sbb
push
or
lret
or
push
mov
adc
mov
jae
and
push
inc
adcl
jo
sub
rcll
icebp
lock
pop
xor
movsb
inc
imul
dec
or
or
in
addl
xor
shll
push
jmp
and
outsb
push
jo
or
xchg
sub
dec
or
imul
adc
test
jo
add
ret
push
clc
mov
adc
test
adc
loop
add
push
pushf
lret
push
lods
int
fists
or
fwait
or
xor
negb
in
sbb
fcmovnb
or
sub
rcl
icebp
mov
in
pop
cmp
call
mov
mov
sbb
jmp
inc
cmp
andl
enter
add
push
push
dec
roll
mov
int3
ljmp
ja
icebp
sbb
inc
push
pop
imul
inc
push
adc
in
or
push
jmp
sub
push
sbb
bnd
xchg
or
pop
pop
cwtl
loopne
sbb
sbb
or
pop
pusha
mov
cmpl
data16
mov
and
testb
add
inc
sbb
push
test
ret
push
xchg
or
inc
adc
xchg
repnz
push
lea
xchg
icebp
enter
sbb
pop
dec
test
int
mov
in
push
mov
adc
loope
sar
add
test
xchg
fldcw
xchg
sub
js
mov
rclb
add
std
sbb
push
inc
mov
sub
adc
add
xchg
call
sub
sub
adc
add
adc
sbb
test
dec
loope
loopne
jnp
or
mov
jbe
mov
push
jge
pop
dec
int
pop
dec
pop
and
outsb
test
add
push
adc
vmaskmovdqu
stc
negl
or
lret
add
pushf
pop
pop
add
inc
and
insb
add
incl
ljmp
subb
les
xchg
and
cmp
shrl
cmp
aad
ret
rcrl
and
xchg
sahf
pop
shl
clc
sbb
sbb
xorl
cli
xchg
pop
xor
sub
push
dec
jecxz
jne
testb
mov
sub
cmp
pop
pop
and
test
ret
mov
scas
jp
stos
enter
sbb
xor
mov
add
dec
pushf
sbbl
shl
add
mov
mov
mov
popa
and
push
jge
roll
dec
rolb
mov
shl
jge
push
jle
push
add
push
sub
push
mov
iret
cmpsl
in
jb
dec
rol
mov
jb
jl
mov
call
and
xor
lcall
inc
leave
adc
mov
mov
shrb
scas
cmp
stos
adc
clc
test
test
mov
or
or
in
add
mov
add
mov
and
adc
add
ficompl
mov
add
cwtl
cmp
gs
push
hlt
sub
push
jns
lret
adc
inc
ret
out
popa
pusha
push
hlt
test
pop
dec
or
leave
push
js
inc
daa
pop
fwait
adc
pop
dec
roll
movsb
jno
ret
or
add
mov
inc
or
jecxz
pop
xchg
faddl
and
je
rolb
or
inc
lret
mov
int
enter
nop
lods
sbb
and
xor
and
ljmp
jp
mov
push
call
test
mov
pop
xor
xor
and
cmp
fldl
jl
inc
int3
push
or
leave
repz
insb
pop
inc
hlt
call
adc
jmp
jbe
stos
pop
xor
pop
popa
div
ljmp
std
mov
shrb
shlb
adc
call
enter
fsubrs
sub
jbe
inc
stos
sbb
mov
push
popf
jmp
pop
push
call
push
xor
arpl
add
gs
outsb
jne
pusha
adc
pop
xchg
and
xor
and
add
pusha
mov
frstor
mov
leave
dec
xchg
sub
sub
or
dec
cmp
inc
mov
lea
sub
sbb
add
xchg
and
mov
adc
mov
push
test
inc
or
or
leave
xchg
and
pop
daa
into
loop
imul
mov
add
sub
ficomps
push
js
js
mov
aad
inc
sbb
mov
cwtl
dec
jo
bound
mov
xchg
or
mov
add
or
sub
pop
xchg
nopl
in
add
in
xlat
adc
pop
rcll
xor
and
mov
lock
ret
rcl
in
clc
push
sub
addr16
mov
jnp
pusha
adcb
xchg
xchg
shrl
adc
pop
inc
popf
popf
and
mov
push
mov
bound
in
test
mov
pop
jbe
sub
adc
and
jle
mov
xor
test
adc
mov
shlb
inc
loope
inc
xchg
ds
shrl
pop
sbb
andl
jg
leave
mov
add
push
repnz
adc
pop
pop
rorl
pushf
sbb
shlb
add
dec
je
pop
scas
and
sbb
or
cmc
mov
dec
push
jo
and
sub
xor
popf
pop
and
xor
scas
jp
add
push
test
test
cmpsl
sub
xorl
sbb
loopne
or
sub
or
mov
bound
sti
rcll
outsb
add
cli
or
push
jl
inc
rolb
rcrb
xor
adc
jo
push
cli
or
adc
adc
push
or
jns
cmp
insl
or
push
imul
idivb
xchg
mov
push
mov
fcoml
test
inc
cmp
sub
aas
cmpsb
mov
fnsave
cmp
inc
lret
lret
sub
push
and
jns
inc
adc
mov
sbb
and
loope
or
adc
sub
sbb
lret
rcrl
push
mov
or
cmp
repz
cli
xchg
pop
clc
or
repnz
cmp
sub
adc
shlb
mov
or
push
pop
mov
rcrb
adc
shlb
lock
loopne
pop
adc
je
ret
sub
mov
aam
les
stos
mov
adc
add
nop
inc
clc
cmp
or
cmp
or
ljmp
sbb
add
pusha
movsb
outsb
sbb
and
aad
lods
loopne
leave
pushf
shlb
sbb
or
fbstp
mov
shlb
int
sbb
adc
dec
jmp
loope
mov
sbb
xchg
mov
add
xlat
mov
push
faddl
xor
dec
sub
pusha
and
pop
inc
sub
sbb
lcall
leave
fwait
xor
test
inc
cmp
out
inc
push
hlt
sub
daa
mov
and
dec
sbb
leave
call
test
dec
pop
subb
popa
pusha
adc
enter
cmp
leave
sbb
lret
lock
pop
leave
add
dec
cmpsb
ret
fimuls
xlat
or
xor
cmp
push
add
js
push
outsb
sbb
jmp
movb
lcall
outsb
aaa
cmp
icebp
sbb
mov
mov
push
pop
lds
push
add
pop
mov
mov
mov
stos
test
lock
ljmp
inc
inc
xor
rorl
ret
sti
adc
mov
cmpsb
add
loope
mov
and
adc
mov
cmp
add
dec
mov
inc
dec
mov
aam
push
jb
mov
or
aad
lea
sub
fcoml
mov
pop
cmp
push
and
add
cmc
aam
test
aam
or
push
mov
sub
gs
push
inc
sbb
jg
push
push
mov
vmaxps
mov
push
lods
or
sub
mov
shr
arpl
pop
andb
push
popf
add
pop
ss
add
push
insl
in
push
xor
roll
inc
sub
mov
addb
pop
jo
imul
jg
mov
orb
push
or
pop
out
mov
jae
sbb
mov
pop
sbb
daa
xchg
adc
push
insl
xchg
and
aad
lods
pop
adc
mov
cmp
cmp
int
and
adc
pop
shrl
loopne
mov
adc
cmc
cmp
in
push
or
and
out
leave
lds
xor
xor
mov
cltd
push
add
and
mov
push
or
adc
shll
stos
fldl
push
adc
shlb
inc
xor
and
inc
scas
sbb
xchg
dec
icebp
lcall
push
push
and
dec
mov
sbb
mov
add
mov
sbb
lret
nop
or
cmp
ss
mov
in
mov
fisubrs
repz
inc
pop
lret
loop
add
insb
add
les
imul
test
xlat
add
or
in
cltd
xor
adc
fldl
xchg
sbb
lds
and
add
push
mov
add
add
mov
ljmp
icebp
or
sbb
cmpsb
mov
xchg
shlb
ljmp
sbb
stos
lret
les
filds
cmp
add
pusha
or
jb
cs
sbb
pop
add
dec
push
jb
rorb
cmp
dec
stos
jnp
and
lods
shlb
jmp
or
push
cs
jae
andl
inc
and
xor
rcll
adc
push
inc
mov
sub
xor
sub
jne
pop
lock
mov
cmpsl
shlb
repnz
add
push
add
add
out
subb
mov
push
and
mov
jb
bound
insb
cmp
sub
rorb
subl
lahf
adc
pop
scas
subb
aam
into
push
sbb
dec
adc
aam
sub
adc
adc
add
pop
cmp
pusha
inc
or
add
sub
sbb
lcall
adc
rclb
cwtl
push
xor
add
lock
pop
lods
push
mov
mov
sub
cmpsl
add
pop
mov
or
or
or
roll
lahf
rorb
pop
push
sub
adc
call
inc
push
stos
out
enter
xor
or
rorl
adc
inc
push
mov
sub
aam
add
pop
negb
scas
test
sub
xor
out
sbb
dec
sbb
mov
ljmpw
adc
and
xchg
sbbl
mov
jb
push
push
mov
cmp
inc
and
or
adcl
rcrb
pop
push
test
std
arpl
shlb
stc
adc
mov
add
jb
add
push
and
enter
cmc
pusha
icebp
hlt
jb
inc
call
push
xor
fs
rcrl
cmp
mov
push
or
or
and
sbb
xchg
sbb
popf
insb
xchg
stos
cltd
sbb
fistpll
lret
test
push
stos
adc
and
ret
fdivl
add
adcl
clc
adc
pop
mov
rcll
fnstenv
add
push
mov
jb
dec
aaa
inc
add
xchg
jecxz
cli
mov
jbe
sbbb
mov
add
rorb
test
lods
cmp
inc
dec
aam
in
arpl
xor
dec
adc
sub
push
jo
adc
shlb
movsl
sub
roll
mov
lds
sbb
sbb
pop
rolb
xchg
call
inc
cld
imul
mov
adc
xchg
movb
cwtl
sbb
add
push
push
push
sub
test
xchg
mov
mov
movsb
and
push
and
pop
xchg
push
xchg
es
dec
adc
push
xorb
lods
jle
pop
push
adc
mov
movsl
xchg
mov
shrb
jo
rcrb
cmp
xchg
jecxz
sbbb
shl
xor
jmp
inc
pop
cmp
rcrl
add
push
jl
xlat
dec
lret
inc
orl
repz
out
scas
inc
add
and
inc
dec
push
and
jne
ret
add
adc
sub
mov
or
xchg
sti
mov
adc
and
fwait
mov
shr
pop
pop
adc
shlb
push
cmp
push
sbb
adc
rorl
and
sbb
mov
mov
pop
adc
aam
and
mov
inc
pop
cmc
or
xor
in
dec
ret
aad
roll
xor
or
mov
pop
push
lods
adc
stos
sbb
jo
inc
subb
pop
popf
cmp
fwait
das
ss
push
push
adc
mov
in
mulb
inc
loopne
jmp
xor
gs
lock
push
mov
xchg
mov
sbb
lret
hlt
xor
inc
sbb
test
hlt
lock
rorb
dec
cmp
xchg
out
loope
inc
push
fadd
jbe
sbb
or
or
xchg
or
xlat
leave
addr16
divb
and
sub
adc
push
pop
in
call
push
push
xchg
pop
or
pop
js
sbb
push
mov
nop
test
sti
clc
mov
das
bnd
xchg
call
cmpsl
test
sub
push
add
cs
stos
push
iret
aaa
cmc
push
and
push
hlt
stc
push
fisttps
jmp
fs
loopne
push
cmpb
xor
jp
ret
adc
mov
push
mov
rcrb
xchg
push
push
xchg
jbe
ss
ret
clc
bound
ret
jecxz
out
push
xor
adc
sub
pop
iret
and
mov
enter
repnz
jb
pop
and
ret
push
add
int3
push
lret
pop
mov
lock
xor
sbb
or
mov
xchg
pop
stos
push
add
dec
xchg
xor
push
mov
add
cmp
outsb
mov
or
sub
lret
sub
mov
dec
lock
inc
dec
mov
cltd
pop
mov
rcrb
mov
cmc
inc
and
movsl
lods
mov
push
pusha
sbbb
scas
shrl
fwait
inc
ret
add
movsb
mov
in
loope
sbb
xor
mov
cmp
add
or
adc
inc
mov
insl
sbb
loope
push
mov
jge
pop
insb
mov
adc
mov
lds
dec
cs
adc
ljmp
pop
or
jae
je
add
repz
add
jb
clc
dec
sbb
sub
inc
shrb
add
mov
push
sub
xchg
data16
xchg
adcb
pop
pop
pshufw
sbb
push
into
xor
jo
mov
fwait
ljmp
fimuls
xor
add
add
or
mov
push
nop
add
push
and
lcall
aad
shlb
sarl
sahf
add
cmpsb
xor
call
cmpsb
and
adc
sub
lret
mov
stos
mov
push
stos
sbb
scas
jb
add
push
or
xor
loopne
sub
test
pop
sar
hlt
pop
cmpsl
adc
clc
in
ljmp
push
push
andb
lods
cmp
enter
in
test
push
add
test
push
add
rcl
add
test
or
lods
adcl
cmpsl
pop
rcr
hlt
add
lods
dec
jbe
repz
cmp
push
jle
sbbl
mov
lock
imulb
xor
mov
int
xor
sub
ret
in
jb
add
mov
rclb
inc
and
sbb
test
ljmp
call
shrb
sbb
push
test
inc
or
in
roll
mov
arpl
add
or
or
insl
fwait
pop
mov
ret
mul
call
and
pop
push
add
sub
shlb
ficoml
mov
adc
or
ret
sbbl
scas
adc
inc
mov
mov
lods
loopne
addl
inc
and
cmp
mov
adc
dec
xor
mov
popa
add
push
cmc
mov
jo
add
lock
and
add
cmp
pop
inc
gs
push
jbe
roll
mov
jl
cld
add
and
repnz
imul
imul
push
push
add
mov
push
cltd
dec
add
push
dec
mov
inc
inc
call
sub
sbb
adc
xchg
xchg
mov
adc
add
xor
insl
or
push
adc
insb
adc
mov
xchg
ja
mov
notl
imul
outsl
xchg
add
push
jae
stos
add
xor
rcrl
mov
aad
dec
pop
mov
popf
shll
push
les
out
sbb
or
cmp
int3
or
mov
dec
adc
and
adc
enter
push
pop
sarl
aad
adc
cli
or
xchg
nop
or
lret
sbbb
dec
in
push
push
cmp
sbb
loop
sub
xor
outsb
inc
xlat
lea
cld
push
or
test
les
daa
add
mov
sub
or
dec
sti
leave
xchg
xor
std
rcll
sbb
mov
daa
pop
fists
push
pop
fwait
or
dec
adc
scas
jmp
pop
pop
into
pop
push
pop
or
or
add
push
sub
pop
sub
dec
adc
loope
sbbl
inc
xchg
sub
mov
jmp
ljmp
push
scas
dec
pusha
push
adc
cmp
ror
xchg
and
xor
mov
xchg
add
loop
loope
add
pop
les
sub
rclb
orb
mov
cmc
daa
rcll
or
dec
repnz
negb
pop
in
lret
adc
loope
mov
push
jp
add
int3
dec
adc
and
and
cld
jle
mov
or
fldenv
ljmp
sub
sbb
nop
mov
sbb
push
add
push
pop
add
mov
or
leave
xlat
push
xchg
sbb
add
fsubl
xchg
lret
neg
push
inc
ret
xchg
stos
inc
int
xchg
jmp
cltd
outsl
jmp
pop
push
call
mov
sbb
or
aaa
mov
mov
push
sub
xchg
cmp
bound
loop
xchg
icebp
sbb
xorb
jne
jae
dec
pop
jbe
adc
out
insb
sti
mov
sbb
sahf
sbbb
pop
inc
add
pop
pop
aam
or
push
int
pop
and
mov
add
movups
test
rorb
pop
insl
aam
in
add
cmp
or
pop
adc
cmp
rorl
and
push
pop
aam
aad
push
inc
fcmove
push
fadds
enter
ret
or
cmp
sub
ret
leave
cs
movsl
and
and
mov
add
loopne
ljmp
in
push
call
adc
leave
ljmp
xchg
sub
aad
adc
pop
mov
and
mov
xchg
lret
pop
fwait
sar
imul
popf
or
movsb
enterw
xchg
rcrb
int
subb
je
xchg
mov
push
lock
xchg
adc
inc
cltd
add
cmp
pop
push
add
or
push
push
push
adc
mov
sbb
pop
mov
sbb
mov
daa
ss
jmp
sbb
mov
sbb
sbb
xor
leave
jmp
xchg
lods
fimuls
pop
repnz
test
sbb
pushf
mov
scas
mov
xabort
jne
sub
jmp
stos
sbb
sbb
ret
mov
lret
adc
dec
push
push
insb
inc
cwtl
dec
icebp
xor
mov
sub
pop
dec
jmp
mov
push
mov
push
adcb
push
rcrb
sbb
xor
inc
pop
inc
mov
xor
test
mov
popa
jecxz
out
aam
cli
mov
shlb
lods
push
sahf
adc
clc
pop
adc
adc
sbb
mov
push
mull
sbb
je
pop
xlat
popa
stos
add
push
push
xchg
orb
dec
or
sub
cltd
add
push
push
ret
add
mov
mov
cmp
or
andb
mov
xchg
fmull
push
inc
xor
xchg
jo
pop
cmc
sub
rcll
sbb
movsl
pop
mov
mov
cwtl
mov
sbbb
sbb
dec
inc
popf
sub
push
push
in
test
aas
sbb
sbb
aaa
dec
push
and
sti
or
adc
push
jmp
lret
cmp
inc
stos
mov
push
jmp
js
add
and
pop
inc
ljmp
jp
dec
cmp
shrl
and
lock
pop
pop
pushf
test
adc
inc
call
push
test
mov
divb
cmp
sbb
xor
stos
inc
pusha
xor
lret
and
dec
or
pop
add
adc
pop
inc
js
and
push
nop
mov
push
call
gs
jno
loopne
js
mov
adc
stos
popa
ja
jbe
dec
aad
or
sbb
add
inc
movsl
lods
adc
mov
inc
cld
testb
or
and
jmp
inc
test
jne
mov
mov
add
gs
icebp
mov
push
xor
lcall
scas
sahf
or
mov
stos
pop
dec
out
fisttpll
cmp
inc
pop
pop
rcrb
subb
mov
aaa
cwtl
repnz
cs
xchg
add
in
xor
lods
movsb
lahf
jle
data16
xor
pop
out
push
cmp
mov
sub
ds
pusha
inc
sarl
sbb
addl
adc
adc
jns
dec
iret
sub
push
filds
imul
mov
cmp
xor
rol
adc
fs
sbb
adc
inc
shrb
pop
pop
js
sub
repnz
adc
push
dec
push
mov
or
loopne
sbb
adc
lret
pop
jp
xchg
loopne
scas
ret
movl
inc
xor
add
push
orl
jae
or
push
jmp
insl
fnop
les
sbb
xor
cmp
adc
dec
nop
mov
inc
or
push
roll
or
push
push
push
pop
in
loop
jb
cmp
pop
dec
stos
xchg
jecxz
insl
adc
outsb
decw
js
add
push
push
push
or
or
lods
add
pop
xorl
sbb
push
push
sbb
fadds
cmp
sbb
insl
add
mov
cmp
in
test
ss
movsl
faddl
ret
or
sbb
push
xor
es
pop
inc
xor
out
or
imulb
mov
cmp
add
cmpl
mov
test
orl
call
jb
add
cmp
inc
sbb
or
gs
sbb
sahf
sbb
pop
hlt
outsb
sarl
repnz
test
add
je
sub
fcmovbe
pop
add
stos
addl
mov
add
test
mull
and
dec
mov
inc
inc
mov
push
in
leave
sti
adc
mov
std
push
add
rol
push
ljmp
inc
popf
xor
fs
add
push
lahf
add
add
push
lds
sahf
lret
ret
cmpl
xchg
inc
jb
add
jne
adc
pop
sub
cmpsl
addl
hlt
mov
rcll
js
loop
cmpsl
mov
cmp
add
or
test
jno
push
test
and
mov
push
push
pop
movsl
sub
fiaddl
adc
xor
adc
jge
mov
mov
push
pop
jle
sbb
xchg
inc
fiaddl
or
mov
loopne
and
xor
xor
xchg
rcll
mov
gs
mov
and
adc
jb
push
unpcklps
sbb
std
decl
cltd
rorl
mov
sub
or
sub
bt
cmp
dec
sub
or
sbb
or
pop
arpl
push
ret
jmp
xchg
sub
mov
pop
sbb
adc
pop
jp
and
cltd
mov
int
out
and
rcl
mov
sarb
lea
gs
subb
cltd
int
inc
sbb
es
movsb
jo
adc
rcll
or
xlat
inc
mov
cmp
mov
popf
jb
ret
scas
mov
andb
hlt
ret
fdivs
scas
xor
in
xlat
jmp
sbb
jl
cmp
imul
mov
dec
adc
cmp
xor
test
cmp
or
shl
daa
test
dec
xor
push
jne
mov
push
dec
and
or
sub
push
inc
xor
rol
sbb
stc
ss
loope
call
adc
loop
movsl
enter
es
xchg
ret
xor
xor
xor
xchg
or
rcll
push
pop
add
or
int
sbb
add
pop
pop
call
mov
add
dec
or
mov
ficoms
adc
dec
mov
sub
inc
out
test
loop
fsubs
add
aad
js
xchg
sbb
jle
repz
fs
adc
lods
or
into
cmpsl
push
inc
test
ja
enter
mov
add
jbe
icebp
pop
sub
fcoms
add
push
loope
aam
sbb
jne
aad
inc
cmp
int3
sbbb
insl
or
add
dec
mov
cmpsb
mov
mov
pop
inc
cmp
sub
mov
and
sbb
aaa
das
lock
xor
sbb
jae
adc
sbb
xor
adc
mov
sbb
mov
dec
les
cmp
mov
aad
or
sbb
or
mov
cmp
push
loopne
imul
loopne
or
pusha
inc
cmp
mov
or
in
mov
pop
xor
push
push
iret
push
jecxz
int
dec
enter
insb
lea
or
and
sub
pop
push
sbb
inc
inc
rorl
rol
add
jl
pop
movsl
and
mov
or
inc
out
data16
dec
xchg
orl
test
sub
mov
jo
add
push
mov
cmp
add
mov
sbb
adc
lcall
into
add
test
sarl
mov
push
dec
adc
outsb
jg
sub
sub
dec
xlat
fmuls
out
push
add
imul
and
push
rorl
mov
insb
sub
rolb
test
out
cmc
shlb
push
scas
and
jae
or
adc
push
cmpl
nop
imul
sbb
cmp
mov
add
test
test
call
push
sub
out
inc
cmp
rcll
sub
add
inc
mov
bswap
jne
shrl
sub
fstps
mov
mov
bound
xchg
sub
packssdw
pop
shll
push
les
flds
cli
lret
cmc
cmp
subb
sbb
pusha
mov
lock
out
divl
mov
push
fwait
sub
push
call
push
popf
add
jle
or
mov
sbb
sbb
xlat
mov
sub
cmc
pop
xor
dec
mov
cmp
adc
jne
sub
inc
sub
sbb
inc
mov
fimuls
aad
sbb
insl
pop
or
push
push
add
sbb
add
outsl
or
mov
rcrl
push
pop
int3
pop
inc
mov
inc
inc
mov
cmp
shll
into
test
sbbb
in
enter
ljmp
or
and
and
in
adc
and
test
jo
xor
xor
loope
imul
add
movsl
aad
pop
inc
iret
shl
pop
add
enter
adc
push
xor
stos
adc
cmpsb
xchg
movsl
clc
and
jne
mov
mov
psubd
test
push
adc
or
daa
adc
jo
sbb
adc
push
pop
aad
sub
adc
adc
repnz
test
movsb
lret
shrb
sbb
cmp
je
adc
cmp
test
roll
andb
stos
inc
mov
adc
into
dec
pusha
lods
call
push
out
leave
push
xor
inc
outsl
insl
insb
cs
mov
sub
je
sub
into
sub
cli
and
je
mov
inc
or
in
inc
xor
and
sbb
push
adc
dec
adc
sbb
enter
push
mov
orb
xor
mov
leave
mov
mov
jmp
ljmp
adc
loopne
frstor
push
add
pop
arpl
or
add
les
std
rcr
rorl
and
adc
shll
scas
sub
dec
sbb
xor
lea
add
mov
pop
sbb
xchg
pop
cwtl
jp
repnz
in
xchg
push
and
xor
sarl
pop
xchg
prefetch
pop
mov
out
gs
aam
pusha
inc
xor
jnp
mov
repnz
scas
pusha
lock
jge
cmpsl
adc
ljmp
daa
loope
mov
and
push
pop
iret
cmpsb
pop
test
jno
adc
xchg
mov
adc
add
and
je
push
or
push
lods
mov
sbb
inc
push
fildl
mov
add
mov
punpckhdq
adc
adc
inc
mov
adc
mov
sahf
ds
mov
push
sub
shl
mov
or
or
push
gs
mov
pop
add
dec
mov
lcall
or
adc
add
mov
les
dec
test
call
or
xor
jle
and
xor
in
pop
pop
cmp
cs
and
fisttpll
stc
hlt
sub
push
addr16
push
mov
out
pop
push
cmp
adc
rorb
scas
popa
test
or
les
pop
lret
rolb
fsubrs
jo
dec
mov
loope
push
xchg
xor
inc
cmc
ret
sbb
or
mov
cmp
or
mov
pushl
lods
std
xchg
mov
push
scas
or
jmp
adc
stos
dec
push
clc
sbb
inc
aam
mov
les
sbb
push
cwtl
sbb
add
xor
push
leave
in
ret
or
pop
mov
sti
push
xor
inc
gs
orb
sub
and
push
lret
test
repz
or
or
add
cs
inc
xor
movsl
dec
ret
addb
mov
add
push
lea
imul
mull
sbb
jle
bound
sub
cmpsb
mov
or
sbbb
aas
icebp
adc
inc
dec
fadd
mov
pop
rcrl
rol
lock
mov
leave
pop
pop
push
inc
xor
inc
adc
in
add
sbb
push
sub
addb
stc
loope
lret
inc
xor
push
push
sub
mov
cmp
or
push
push
add
sbb
mov
sbb
leave
pop
int
add
outsb
or
daa
lret
sbb
stos
add
aaa
addb
add
fchs
jne
int3
jo
bound
leave
inc
ja
or
sub
adc
aas
add
into
push
adc
fcomp
and
es
mov
lea
xchg
xchg
test
add
and
test
mov
sbb
adc
adc
mov
fwait
pop
stos
inc
scas
and
aad
adc
mov
popf
sbb
mov
es
imul
push
pushf
or
mov
sub
dec
rcl
jl
cmp
inc
mov
pop
adc
mov
pop
jl
sbb
inc
daa
adc
call
test
pop
pop
cmpsl
inc
pop
lea
mov
ret
inc
stos
cmpl
and
xor
iret
cli
outsb
call
int
rorl
out
sub
sbb
or
subb
adc
and
sub
inc
leave
jg
mov
popf
scas
lds
lcall
mov
mov
push
lret
or
aam
add
sub
adc
pop
mov
push
jno
test
add
ret
les
mov
adcb
adc
sub
mov
or
pop
add
mov
xchg
xor
cmpsl
add
mov
or
pop
mov
popa
jae
adc
repnz
dec
aad
push
loop
loope
out
add
add
xchg
dec
mov
and
movsl
movb
mov
cmp
leave
inc
je
enter
mov
lds
dec
adc
add
inc
scas
and
adc
add
icebp
aas
call
add
fidivl
sbb
aam
lods
adc
mov
push
push
or
inc
les
fisubl
int
xchg
cmp
mov
cmp
in
stos
ret
or
add
add
mov
ds
push
push
ret
dec
in
push
sbb
pop
inc
sbb
dec
sub
push
dec
mov
inc
mov
xchg
cmp
hlt
pop
je
lret
pop
xchg
jmp
out
imul
pop
ljmp
cwtl
pusha
add
aad
mov
or
and
add
pop
cmpb
xor
jp
mov
cmp
push
add
mov
outsl
sbb
enter
xchg
repnz
push
xor
in
push
push
cli
jno
add
test
sub
adc
pop
lock
mov
pop
je
add
clc
adc
dec
inc
rorb
inc
pop
jmp
dec
mov
sbb
nop
out
fcompl
or
repz
cs
xchg
mov
imul
mov
inc
in
nop
out
stc
sbb
xchg
mov
in
jp
aaa
loopne
and
sbb
push
ret
sub
mov
mov
sbb
sub
xor
mov
cmp
pop
inc
stos
push
pop
fcmovb
push
sub
pop
push
test
mov
add
or
loop
stos
push
push
or
mov
and
sbb
cmp
xchg
jo
push
test
pop
lea
scas
xchg
arpl
rclb
je
push
push
outsb
fstpl
mov
or
push
mov
mov
shr
inc
or
ret
xor
pusha
mov
rcrb
push
ret
sbb
add
add
jp
mov
fisttps
push
push
clc
jp
mov
push
aas
add
mov
inc
fmuls
jno
fcomps
add
jnp
sub
add
mov
movsb
add
in
adc
xor
and
es
jo
adc
jb
push
push
fisttpl
sub
mov
fadds
and
jg
stos
xor
shll
add
sbb
or
mov
adc
dec
mov
or
jo
cwtl
and
test
mov
adcl
lock
dec
mov
sbb
rolb
add
mov
xor
push
cmp
test
ret
push
add
jo
into
mov
inc
mov
fadd
and
adc
cmp
lahf
ret
or
and
add
mov
ret
cmp
inc
lea
rclb
mov
gs
popf
dec
xchg
dec
ds
pop
shrb
xchg
popa
mov
pop
pop
add
test
out
xor
or
inc
in
add
out
imul
sub
xlat
data16
sbbb
sub
icebp
scas
push
insb
push
jle
ss
and
or
jb
sbb
mov
or
push
jns
sub
mov
push
ret
dec
or
sahf
add
or
cmpps
int3
mov
mov
stos
cmc
adc
jb
rcrb
pop
addr16
mov
add
mov
scas
shrl
subl
and
into
push
or
xor
add
push
insl
pop
sar
inc
push
sbb
or
aad
jo
ret
add
pop
dec
xchg
testl
cltd
push
sbb
sbb
push
aam
or
jbe
cmp
cmpsb
nop
icebp
xor
nop
xchg
add
push
xchg
mov
mov
xchg
adc
push
push
out
scas
cli
rolb
sub
in
clc
addb
repnz
nop
rorl
sarl
fisttpl
xchg
stc
and
data16
pop
daa
push
sbb
push
pop
scas
or
cmp
mov
cmp
scas
adc
mov
cmpsl
or
mov
out
xchg
fdivrs
xor
mov
and
add
rcll
cmp
imul
orl
lret
dec
mov
insl
cmpsb
aad
push
push
cmp
lods
loopne
mov
add
mov
rolb
or
dec
jp
pop
mov
cmp
xchg
lds
inc
jmp
sbbb
mov
mov
add
xor
sub
xchg
fwait
push
test
je
lcall
scas
sbb
adc
dec
jns
inc
dec
inc
add
xchg
add
jo
lret
push
cmp
movsl
xor
adc
sbb
icebp
add
cs
loopne
mov
mov
cmp
addb
test
rorl
xchg
xor
rorb
test
inc
loopne
add
repnz
jno
testb
scas
push
imul
jns
repnz
stos
or
push
push
pop
xchg
movsl
cmp
or
pop
add
into
push
push
add
or
xchg
mov
divl
shlb
inc
mov
add
push
xor
fisttpll
cmp
hlt
xchg
mov
adc
add
mov
push
test
adc
xor
inc
inc
arpl
mov
add
add
cmpsl
push
pop
test
stos
es
push
add
jge
sbb
mov
mov
jge
push
dec
sbb
sub
fldl
das
or
push
push
int3
adc
ror
inc
push
ret
sarb
xchg
xor
ffreep
adc
shl
sub
jmp
scas
shlb
hlt
sarb
add
dec
andb
test
adc
xor
lret
xor
popa
adc
adc
sbb
jge
adc
push
mov
xor
daa
push
adc
movsb
cmpsl
cmpsl
push
fwait
into
push
inc
xor
cmpb
lea
jns
and
test
add
xchg
out
rclb
mov
sbb
mov
mov
mov
cmp
outsb
pushf
out
imul
sbb
addb
test
enter
sbb
ljmp
dec
adcb
lahf
lods
lret
divb
push
adc
mov
daa
and
add
enter
jp
es
ret
xor
add
popa
adc
sub
xchg
or
outsl
or
inc
jne
mov
pop
lds
lds
cmp
mov
hlt
xchg
movsl
lock
mov
xchg
sarb
mov
out
pop
mov
add
scas
jo
imul
js
and
dec
mov
pop
scas
loop
js
push
dec
gs
pop
pop
aad
lods
mov
push
sbb
inc
icebp
dec
and
cmp
gs
repnz
mov
fst
rolb
jo
mov
pop
and
sar
stc
ja
sub
test
xlat
add
sti
shl
fldcw
push
dec
out
pop
test
cmp
dec
lods
adc
sbb
aad
pop
mov
add
pop
test
adc
push
push
and
add
sub
mov
and
add
pop
push
lods
rcrb
bound
xor
imul
shlb
push
xor
mov
and
add
fldenv
push
mov
out
sbb
push
or
add
xchg
add
outsb
sub
subl
push
push
cmp
or
adc
roll
or
int3
fs
icebp
pcmpgtd
shll
inc
push
dec
lret
push
movsb
das
shlb
faddl
stos
mov
push
add
test
rclb
fsubrl
pop
imul
sub
push
orb
inc
enter
mov
adc
mov
into
cmpsl
jne
dec
pushf
add
pop
shrb
lar
sub
xchg
pop
pusha
push
mov
add
stos
daa
fmuls
mov
jbe
lea
inc
and
test
negl
add
leave
or
lock
lcall
pop
adc
pop
inc
jne
lcall
mov
icebp
std
shrl
push
pop
pop
push
les
jp
sbb
cmp
add
out
dec
mov
sub
push
adc
cwtl
push
jl
test
rcrb
add
xor
lea
notb
adc
add
int
xor
pop
cltd
pop
cmc
loopne
ret
test
lret
push
fistps
fcomip
sbb
xchg
pop
bound
cmpl
add
lea
sbb
or
mov
add
sbb
or
mov
push
dec
pop
push
in
dec
xchg
add
xor
test
cltd
aas
add
push
or
jge
or
ja
xor
incl
xchg
sub
pusha
xchg
mov
xor
dec
dec
jne
icebp
adc
adcb
cmp
cmpsb
fistpll
ret
add
push
adc
jp
and
mov
mov
pop
push
push
icebp
push
and
sub
mov
test
pop
and
pop
mov
adc
mov
push
or
push
add
movsb
bound
paddw
ljmp
push
inc
test
add
clc
pop
push
shlb
je
dec
test
out
into
and
push
ljmp
lahf
aas
fwait
lods
push
js
rorb
dec
sub
jne
insb
sbb
mov
lret
inc
pop
test
mov
sub
add
add
add
lock
and
xacquire
rcrb
inc
jp
mov
mov
roll
cmp
mov
xor
mov
jg
cmp
inc
into
lods
enter
int3
icebp
mov
inc
pop
inc
xchg
dec
sbb
inc
push
sbbb
cmpsb
push
leave
aam
or
outsb
pop
sub
inc
mov
mov
out
icebp
add
pop
daa
dec
ret
out
mov
insb
int3
lret
pushf
and
push
cmpb
push
push
pop
addl
xor
stos
jb
sbb
cli
push
dec
andb
rorb
add
sete
mov
sbb
pop
arpl
ret
dec
adc
jmp
incb
inc
shll
nop
ds
inc
add
icebp
cmpsb
dec
sbb
int
adc
aam
inc
adc
inc
lahf
faddl
movsl
sbb
leave
stos
loopne
mov
cmp
orl
mov
mov
add
pop
pop
push
add
icebp
jge
movsl
js
sbb
fimuls
cmpsl
mov
inc
mov
inc
jno
push
and
jae
adc
add
push
push
or
mov
arpl
xor
push
fucomp
mov
add
dec
xchg
decb
add
add
shll
or
in
les
pmuludq
dec
shr
sub
popf
push
cwtl
push
jg
imul
sahf
or
movsl
inc
mov
add
sbb
call
push
xchg
lret
sbb
cwtl
and
push
stos
sub
ficoms
cmc
cmp
inc
cmp
cmpsl
lods
rorl
jne
js
test
or
sub
movsb
sbb
or
push
push
cld
lret
sub
pop
addr16
sbb
clc
stos
or
out
and
leave
pop
adc
add
sub
fadds
push
mov
stos
xchg
cmp
sub
or
stc
cmp
add
mov
mov
call
jp
mov
xchg
stos
jecxz
push
xor
cmp
lret
lcall
sub
inc
jae
ret
push
and
pushf
and
subb
adc
pop
sub
cs
dec
pop
adc
add
jne
xchg
pusha
xor
push
add
xor
rcl
adc
inc
push
and
push
rclb
repnz
lret
pop
sub
cmp
sbb
or
adc
xchg
stc
mov
mov
test
add
mov
orb
jbe
push
leave
push
lock
lods
adcb
call
into
xchg
mov
xchg
xor
xchg
mov
in
push
daa
sarb
fdivl
add
outsb
arpl
or
ja
bound
outsl
adc
test
cmp
sbbl
sbb
or
cmpsb
push
jno
arpl
jne
inc
popa
jb
cmp
ficoms
rorl
loope
and
rcll
roll
mov
xor
push
movsb
push
mov
push
jge
sbb
shl
inc
jmp
push
out
dec
inc
mov
test
adc
push
pop
push
add
inc
ljmp
add
mov
and
add
stc
inc
push
or
pop
add
pop
fsubrl
or
adc
adc
cmp
shl
or
fisttpl
and
leave
mov
lcall
add
xchg
sbb
ljmp
jl
shrb
push
cwtl
sub
sub
dec
jge
imulb
mov
cmp
pusha
mov
adc
cli
shll
js
clc
push
sbb
leave
dec
sub
inc
or
ret
loop
gs
sub
in
sbbb
mov
push
push
rclb
adc
push
sub
shrb
push
mov
mov
rolb
sub
fistps
mov
rolb
cmc
adcb
lea
or
js
xchg
pop
popa
or
and
lret
adc
ret
sbb
xchg
test
mov
mov
jge
dec
test
aam
inc
mov
mov
mov
enter
jge
push
dec
push
and
sbb
stos
pop
clc
rorl
add
test
mov
adc
xor
scas
mov
jns
sbb
adc
or
jmp
cmp
comiss
push
xor
add
sbb
pop
daa
stos
adc
add
lds
mov
cmp
cmp
sarb
push
sub
les
mov
outsb
mov
in
or
add
rcll
add
xor
rorl
cmp
cmp
adc
xchg
das
xchg
mov
push
jle
push
mov
paddd
or
scas
cwtl
icebp
jge
dec
mov
xor
mov
adc
cmp
call
or
addb
push
xchg
sbb
inc
push
xchg
stos
call
cmp
dec
or
and
rcr
js
adc
out
or
les
push
insl
and
sbb
insl
dec
insl
add
push
or
push
and
push
in
xor
jo
and
std
xor
rclb
scas
pop
sbb
push
mov
jno
ss
add
inc
arpl
xor
int3
ret
shrl
frstor
enter
ret
push
gs
loope
push
jb
cmovae
cmp
shl
into
in
clc
adcb
rcrb
add
sbb
push
bound
mov
cmp
popf
bound
loop
push
push
dec
gs
adc
push
rcrl
les
mov
add
push
push
jne
int3
sub
sbb
outsl
test
test
inc
mov
push
adc
push
arpl
mov
mov
adc
data16
stos
clc
rorl
insl
adc
dec
in
rcl
scas
jg
aam
out
or
push
xchg
outsb
and
add
aam
jo
cmp
subl
fcmovbe
or
andl
push
dec
imul
jg
mov
add
mov
cmp
push
mov
mov
add
dec
mov
cmp
loopne
and
lods
lds
and
sub
mov
stos
stc
rol
jbe
mov
or
iret
and
add
or
cmpl
out
sub
ss
pop
xchg
or
mov
cmp
inc
mov
stos
test
and
mov
cmp
mov
or
es
xchg
or
ret
cld
ljmp
add
add
lea
ja
and
mov
push
dec
pop
xor
adc
inc
push
pop
dec
shlb
add
xchg
dec
fiaddl
add
aam
push
loope
push
ljmp
inc
cmp
out
ret
and
xor
sub
repz
bound
cmp
pop
jp
or
push
dec
cmp
movsb
pop
shl
inc
aam
cmpb
popa
jl
or
mov
mov
jnp
addl
dec
mov
pop
das
mov
mov
or
inc
cmp
add
xchg
push
shrl
adc
cmp
lods
sub
mov
jo
in
mov
jge
inc
test
sub
jnp
mov
icebp
leave
movsb
movl
ss
push
push
push
and
inc
cmpsb
sub
add
dec
mov
or
subl
mov
xchg
stos
dec
cwtl
stos
pushf
ret
mov
stos
adc
daa
inc
ret
cmp
mov
inc
popf
subb
add
push
jnp
scas
pop
out
pop
and
mov
lcall
cmp
sbb
jo
leave
ret
mov
je
rcll
hlt
test
jmp
add
add
test
pop
adc
sbbl
xchg
fwait
lock
and
push
add
and
fsubl
stos
add
insl
jl
dec
xor
aas
jns
dec
mov
mov
adc
bound
cltd
xor
mov
insb
shrb
push
rolb
and
or
je
push
data16
lock
dec
add
xchg
fcmovb
mov
dec
mov
ja
aaa
mov
call
outsl
lods
icebp
xor
mulb
or
out
lret
jecxz
inc
push
jmp
lret
cltd
jo
sbb
cmp
es
xchg
xchg
jl
mov
or
mov
lret
inc
out
nop
imul
push
dec
pop
cltd
mov
pop
add
xor
push
arpl
aam
push
lret
lds
sub
and
sbb
cmp
sbb
mov
jmp
dec
rcll
pop
add
or
push
mov
mov
push
pop
int
roll
and
shrl
mov
inc
xchg
imul
loope
sbb
pop
adc
cmp
cli
test
pop
repz
clc
jg
pop
aas
scas
jecxz
jno
out
sar
xor
int3
push
mov
js
lahf
stc
and
adc
push
push
xchg
mov
pop
mov
gs
adc
dec
into
lds
dec
aad
xor
adc
sbb
call
scas
lahf
sbb
je
lock
sub
shlb
add
lea
je
daa
pop
rcrl
pop
test
call
add
or
sbb
add
add
xor
int3
adc
stos
push
add
push
movsb
notb
mov
inc
incb
stc
aad
xlat
push
or
adc
mov
cli
bound
or
movsb
leave
outsb
scas
cmp
lcall
cwtl
or
sbb
lods
add
mov
pop
mulb
xlat
call
add
in
icebp
push
std
mov
xchg
push
cwtl
push
popa
xor
and
popf
add
jl
loope
mov
insl
or
push
xchg
stos
inc
cld
push
adc
sbb
lds
lcall
pusha
adc
sbb
jo
movsb
clc
das
icebp
ds
mov
mov
adc
mov
xchg
jg
pop
mov
sbb
pusha
aad
or
sbb
cmp
imul
mov
rorl
jl
dec
cwtl
jo
testb
test
imul
rcrb
push
push
push
mov
push
in
and
adc
jnp
sahf
stos
in
pop
fcmovnb
incb
jbe
push
mov
dec
out
mov
inc
lret
ljmp
inc
out
sbb
test
sub
sbb
scas
mov
dec
inc
in
sbbb
clc
add
mov
pop
fnstcw
push
push
add
and
mov
or
cmp
out
icebp
cld
int3
and
mov
iret
icebp
sbb
push
adc
int
sbbb
mov
push
test
test
sbbl
es
add
aad
test
shrl
cmp
pushf
push
jnp
les
sbb
adc
add
push
scas
pop
aad
adc
fisubl
test
insb
mov
pop
and
mov
pop
gs
cmp
add
cmp
and
inc
fsub
icebp
add
sarl
js
mov
into
mov
fldenv
or
gs
call
xor
in
lea
add
dec
pop
or
faddl
das
lcall
xor
or
adc
aad
mov
xor
adc
mov
sbb
jbe
sub
fildll
mov
inc
mov
and
xchg
and
sarb
cltd
and
add
loop
jmp
lcall
push
sbb
pusha
clc
adc
mov
repz
add
outsb
mov
jmp
add
jno
add
or
sbb
clc
lret
shl
xor
popa
xlat
dec
je
mov
insb
sbb
sub
sbb
into
push
aam
cltd
fiadds
push
into
loopne
lds
and
mov
add
jecxz
adc
insl
inc
inc
mov
sub
ds
imul
sub
cmpsb
sbb
push
sbb
mov
xor
mov
sub
or
nop
push
jns
in
mov
xchg
lods
into
xchg
mov
push
push
adc
scas
pop
pop
cmp
mov
jl
push
inc
adcb
and
add
jne
mov
ret
ret
adc
and
fidivs
loopne
dec
ds
push
push
movnti
xlat
pop
gs
jo
adc
repz
sbb
add
bound
in
icebp
out
js
nop
inc
add
and
adc
jo
add
xchg
or
rolb
movsl
stos
sbb
push
shl
stos
inc
sbb
sbb
and
push
push
or
xchg
pop
loopne
inc
xchg
stos
testb
inc
shlb
inc
out
push
ret
daa
int3
sub
push
mov
lret
rorl
or
inc
push
rcrl
xchg
mov
stos
xorb
shl
sub
sub
or
repnz
js
or
sub
cmp
adc
xchg
push
xchg
addr16
push
push
sbb
addb
xor
and
out
out
jne
or
les
icebp
mov
push
jne
daa
adcb
jecxz
mov
stos
test
push
loope
xor
cltd
mov
mov
cli
mov
pop
shrb
and
lea
sub
and
mov
pop
cmp
or
or
mov
stos
jb
sbb
mov
push
jne
add
xchg
roll
or
adc
maxps
inc
push
dec
iret
xchg
adcl
sbb
xchg
sbb
push
shlb
sbb
ret
arpl
mov
sbb
mov
imul
cmpsl
int
ret
adc
lea
add
pop
js
mov
dec
stos
out
rorl
and
call
xor
add
adc
and
cmp
push
mov
pop
lret
dec
insl
daa
or
inc
stc
fucomip
jo
mov
and
sar
mov
add
fcom
sbb
lods
sub
lahf
mov
push
push
lock
std
nop
cli
pop
push
inc
loopne
rolb
int
sbb
shlb
push
push
or
inc
pushf
leave
sbb
mov
cltd
dec
out
mov
repnz
divl
add
push
cmp
sbb
pushf
lret
adc
xor
sub
pop
data16
push
dec
sbb
call
dec
mov
push
sbb
push
and
repnz
insl
jo
sub
pop
push
add
add
mov
stos
scas
test
aam
mov
push
cmp
add
outsb
add
fs
test
dec
cmp
xorb
sub
cmp
push
out
pop
mov
jl
dec
subl
add
outsb
js
sbb
dec
xor
adc
ds
add
setp
mov
dec
rcrb
push
sub
sbbb
repnz
push
push
sbb
cmp
repz
leave
or
popf
sbb
mov
xor
sti
scas
mov
pop
fwait
std
les
xchg
sbb
xor
xor
or
shll
aad
jecxz
cmc
xor
pop
cmc
mov
push
push
push
lods
inc
pop
pop
xor
mov
sbb
adc
push
je
call
mov
xchg
bound
or
mov
std
leave
les
push
sbb
pop
cmp
pusha
lcall
or
mov
pop
lcall
loopne
xchg
roll
call
mov
lret
inc
imul
xor
test
pop
mov
mov
movsb
xlat
pop
add
sti
and
push
add
addb
inc
aam
hlt
xchg
mov
ljmp
in
xchg
call
sbb
xor
scas
nop
mov
mov
and
stos
fidivl
popa
lret
sub
push
sub
xor
pop
rolb
bound
scas
shl
mov
imul
clc
sahf
and
sub
pop
jg
lcall
cmovne
xchg
inc
addr16
adc
pop
and
mov
jp
mov
or
mov
jb
pusha
inc
aas
mov
ret
hlt
mov
pop
push
sbbl
stos
add
mov
pop
adc
and
adc
mov
or
in
repz
cs
mov
in
pop
or
add
negl
es
mov
and
fldenv
or
inc
int3
lock
arpl
xor
xchg
mov
dec
enter
fimull
dec
je
popa
mov
xchg
push
mov
push
jne
push
jnp
adc
jle
movsl
nop
ss
xchg
adc
scas
mov
in
inc
and
xchg
adc
xor
scas
sub
js
sub
mov
jo
mov
cmp
add
jb
stos
push
sarl
inc
adc
push
enter
outsl
mov
pop
enter
and
sbb
ret
jne
das
stos
and
inc
xor
jb
sahf
or
cmp
cmc
in
jae
shlb
inc
adc
rol
jno
adc
and
mov
shll
addr16
lret
pusha
sbb
jne
push
inc
mov
push
out
push
test
and
sbb
add
adc
add
push
or
xlat
xor
adc
mov
add
adc
mov
and
pop
loope
les
ficoml
jg
dec
inc
cld
aam
pop
sbb
sub
je
cmp
out
sub
scas
fsub
aad
mov
icebp
sub
aam
test
pop
add
xchg
dec
repnz
es
push
add
lret
cmpsl
test
xchg
pop
add
add
dec
push
dec
cmp
mov
rcll
mov
push
mov
or
mov
push
cmp
xchg
subl
ret
mov
nop
jg
pop
push
je
loop
add
mov
shrl
clts
cmp
and
inc
push
scas
out
mov
sub
mov
stos
jb
or
xchg
push
xchg
aad
inc
xchg
repnz
add
pop
test
fwait
sbbb
inc
dec
arpl
jg
xlat
jp
enter
enter
sbb
lcall
adc
lahf
xchg
adc
andb
test
in
jl
enter
mov
pop
inc
out
add
test
push
add
pfcmpgt
fldcw
push
test
stc
pop
xor
es
add
mov
out
add
pop
test
sub
scas
add
andb
adc
les
cltd
lcall
add
mov
lock
lods
pop
or
subb
ds
stos
ss
add
xchg
xor
test
shl
sub
lock
int
subb
mov
push
sbb
incl
jns,pn
add
sub
push
push
and
mov
shrl
push
pop
rcrb
shlb
mov
popf
add
rolb
in
cmp
inc
jnp
movsl
movsb
jp
iret
sbb
add
ret
sub
hlt
in
ljmp
jnp
pop
pop
arpl
sbb
js
adc
inc
jne
mov
xor
ljmp
iret
test
xor
or
push
mov
push
test
mov
jnp
inc
inc
ja
out
sub
or
mov
xor
adc
out
loopne
or
or
dec
rol
pop
add
out
add
aad
loope
add
outsb
arpl
mov
push
adcb
sub
sbb
sub
test
scas
pop
lahf
adc
jb
pop
roll
adc
ret
xor
pop
push
je
icebp
rcrl
shlb
stos
inc
add
pop
inc
jl
pop
xor
mov
push
jns
inc
xor
sbb
push
lock
pop
push
inc
enter
sbb
movsl
cmp
mov
rol
loope
addl
xor
sbb
loopne
popa
ret
push
inc
add
sbb
or
in
call
loope
xor
mov
inc
bound
out
or
cmc
pop
pop
mov
adc
cmp
add
mov
push
or
scas
ret
sbb
sub
adc
adc
call
adc
jmp
sbb
or
and
pusha
mov
or
inc
lods
js
jo
shrl
rolb
insl
rol
sbb
push
push
sub
sub
sub
mov
cmp
fadd
out
or
and
adc
mov
inc
sbb
cwtl
lods
rorb
mov
cwtl
shr
and
addr16
sbb
stos
push
cmp
sti
stos
inc
push
and
mov
leave
dec
inc
inc
jp
inc
subl
pop
movsb
sub
popa
sbb
xor
adc
add
add
adcb
pop
ficompl
and
sub
mov
cwtl
lea
inc
sub
pop
out
inc
js
shl
ljmp
mov
sbb
adc
outsl
dec
pop
daa
mov
push
pop
stc
push
les
jb
popa
cwtl
das
jp
mov
repnz
adc
jp
cmovo
repz
loopne
cmp
sub
rcrb
rdmsr
enter
int
mov
ret
sbb
push
push
jae
js
nop
cmp
sbb
push
scas
ret
sub
outsl
adc
in
repnz
sub
xor
mov
mov
test
mov
or
mov
lcall
and
outsl
test
mov
lock
adcb
aam
adc
jb
out
push
test
hlt
ret
ret
pop
mov
sti
ret
and
sbb
loop
mov
adc
xchg
adc
test
cwtl
pop
xchg
xorb
lds
aad
test
in
cmp
sbb
arpl
imulb
enter
inc
sbbl
shlb
call
shlb
pop
sub
mov
adc
dec
sbb
sbb
adc
push
and
adc
lcall
sbb
test
adc
xchg
xor
es
jecxz
inc
xchg
inc
loope
add
adc
repnz
popf
cmp
xor
inc
dec
sarb
rolb
sbb
push
sbb
adc
rcll
iret
push
inc
fistl
gs
adc
push
insb
push
pop
leave
mov
mov
shlb
in
rcl
push
sbb
push
stos
pop
das
aad
adc
dec
mov
sbb
push
pop
sub
sub
xor
test
lods
mov
mov
pop
push
in
push
subb
pop
arpl
rcll
rorb
in
inc
mov
lea
movsb
xchg
and
shl
push
add
call
push
icebp
or
fisubrl
push
jle
fs
rclb
or
lcall
rorb
aas
xorl
xchg
sub
sub
pmulhuw
ror
outsb
hlt
mov
cmp
or
sub
rorl
xchg
inc
lods
aad
outsb
call
aad
push
subl
push
test
pop
adc
int3
sbbb
mov
sar
pop
cmp
xchg
lods
movsl
pusha
addb
roll
ret
or
adc
mov
push
xor
inc
adc
popa
out
or
cli
orb
or
and
push
mov
pop
adc
cmpb
add
or
mov
and
mov
xchg
mov
sub
adc
or
pop
sbb
add
bound
into
xchg
test
ret
dec
pop
push
movsb
cs
shll
xor
dec
and
rolb
and
mov
jne
mov
addl
inc
insl
adc
mov
jmp
mov
popf
push
icebp
push
and
xchg
push
cmpsb
sbb
call
add
push
and
testl
adc
jmp
mov
jo
mov
clc
lock
inc
ljmp
sub
push
sarl
rol
push
jecxz
imulb
and
test
sub
nop
mov
or
outsl
ret
mov
or
add
pushf
sub
push
pop
dec
jge
lock
pop
push
mov
and
xor
ret
push
push
push
xchg
sbb
out
and
dec
xor
inc
add
aas
jecxz
mov
sbb
je
xor
or
test
ret
sub
and
aaa
inc
je
add
movsl
mov
dec
push
push
movsb
stos
dec
aas
aaa
mov
imul
add
add
das
ret
sarl
stc
aam
pop
jl
push
cmp
scas
fwait
pop
sbb
xchg
add
sbb
popf
imul
sbb
inc
jo
or
jl
adc
rclb
sub
pop
inc
mov
add
fsubl
dec
or
add
addb
imulb
jb
cmc
cmpsb
sbb
inc
sub
popf
and
andl
adc
or
cmp
jne
mov
rorb
dec
sbb
add
stos
or
fisubs
push
mov
mov
dec
mov
sbb
popa
and
sti
scas
loopne
test
js
xchg
mov
adc
adc
mov
mov
rolb
jo
inc
push
shll
mov
and
cltd
test
cs
les
ret
add
mov
jle
shrl
mov
pop
or
notb
cmpsb
dec
sbb
jmp
fcoml
xor
add
add
stc
or
xor
inc
fucompp
aam
xor
mov
lds
push
push
shrl
test
mov
daa
into
or
mov
ljmp
xchg
add
jb
dec
add
jmp
or
add
adc
ror
rcrl
icebp
sub
rcrb
dec
xchg
loope
pusha
rcll
push
stos
cltd
add
xchg
push
push
insb
inc
and
inc
jp
cwtl
mov
xchg
ret
push
mov
sub
in
mov
fcoms
loope
and
sbb
sbb
loopne
rolb
mov
and
push
ret
mov
cmpsb
rolb
shlb
push
clts
in
mov
sbb
mov
cmp
adc
mov
sbb
fcoml
mov
fsubl
adc
lea
xchg
push
popa
jecxz
inc
mov
adc
push
and
pop
loopne
dec
leave
pop
popa
push
jno
xchg
jge
pop
mov
out
aam
mov
call
inc
fs
sub
add
add
shlb
mov
outsl
sbb
xchg
test
add
sub
add
add
adc
add
bt
mov
mov
shlb
in
inc
pop
cmp
inc
sbb
add
lret
enter
test
pop
lcall
cli
jno
pop
stos
and
loope
adc
xchg
dec
xor
js
arpl
outsb
shl
stc
xchg
sub
lret
mov
daa
pop
inc
push
test
lea
jns
sub
enter
push
sarb
addr16
fs
int
addb
mov
sub
adc
adc
mov
lock
push
and
xchg
pop
cltd
jp
ljmp
test
mov
rclb
cli
adc
jb
add
pop
add
xchg
sbb
ficoml
push
rorb
popa
loopne
sbbb
add
jno
dec
ret
inc
mov
add
enter
repz
pop
imul
or
repz
inc
cmp
mov
icebp
notb
notb
adc
push
mov
add
cmp
mov
mov
push
lds
mov
add
or
cmp
inc
out
shll
push
push
into
je
lret
test
mov
add
and
pop
add
data16
sbb
and
jo
mov
xchg
cmp
mov
push
add
add
inc
rcrl
mov
dec
push
lret
jle
lret
xchg
loopne
in
test
stos
push
stos
inc
add
push
add
into
inc
mov
pop
orl
push
jmp
sbb
sub
dec
add
push
mov
insl
and
sarb
add
sub
js
push
daa
xor
push
loope
xchg
xchg
or
loope
and
jnp
and
jmp
andb
xchg
aad
add
xor
shl
push
cmp
ret
sub
lret
cmp
xor
imul
test
pop
imul
dec
add
mov
mov
push
xor
cmp
jl
jge
add
pop
mov
push
mov
and
sbb
push
adc
lahf
sbb
mov
ret
pop
adc
add
ret
cmp
pop
inc
add
add
notb
stos
mov
mov
adc
mov
add
dec
bound
sbb
sub
aam
jl
mov
push
push
push
inc
ret
mov
pop
pop
or
jb
mov
xlat
jo
sub
fcmovu
xchg
mov
pop
pop
xchg
roll
push
dec
inc
outsb
or
call
jmp
pushf
and
add
stc
or
fmull
nop
cmpsl
lret
or
sub
sbb
mov
adc
add
mov
mov
mov
and
push
stos
stc
adc
pop
push
mov
and
arpl
sbb
xchg
cmp
lods
push
sbb
leave
or
push
push
pop
xchg
sbb
dec
xor
or
add
cmpsl
sbb
add
mov
and
cmpsl
movl
jecxz
or
fs
xor
sub
add
adc
rorl
jne
inc
rorb
xchg
notl
push
dec
mov
addr16
adc
lret
aaa
lea
adc
push
jnp
push
mov
xor
mov
or
mov
decb
inc
add
sub
je
std
cmpsl
test
orb
mov
adc
mov
pop
subl
and
push
adc
sbb
sub
test
cli
add
lcall
xchg
sarl
fiadds
xchg
pop
sub
xorl
dec
loope
inc
adc
and
cwtl
push
test
jo
insb
js
jo
inc
add
push
das
push
mov
lret
adc
movb
adcb
mov
nop
adc
mov
push
movsl
push
int3
ljmp
mov
dec
xor
push
or
icebp
adc
vmwrite
mov
lret
fmuls
xor
and
jno
sbb
sarl
aam
mov
push
xchg
adc
addr16
mov
roll
add
loope
dec
cmp
out
adc
or
xchg
sub
stos
add
mov
cmp
sub
lret
stos
push
mov
addr16
xor
xor
loope
mov
inc
int
rcrb
jp
imul
les
insl
dec
push
cld
sbb
aad
jno
mov
add
popf
mov
test
push
inc
pusha
and
popf
into
add
lods
pop
pop
adc
sbbl
loope
xchg
subl
stos
add
xchg
sub
popa
ret
push
stos
out
mov
dec
aad
or
test
push
test
ds
pop
mov
xchg
mov
loope
ret
xor
dec
adc
mov
xorb
je
aaa
mov
add
inc
xor
add
mov
aad
aam
xor
clc
push
fadds
mov
movups
mov
lcall
dec
shlb
hlt
test
mov
add
inc
xor
es
mov
enter
inc
inc
test
add
lock
and
rclb
lock
push
inc
xor
or
out
cs
mov
xor
loopne
jo
lcall
adc
pop
shlb
lods
push
add
lret
push
adc
mov
leave
mov
inc
in
add
sub
cmpsl
sbb
sub
adc
out
sub
add
pop
inc
or
popf
and
nop
inc
pushf
push
sub
xor
test
lahf
sahf
enter
push
lods
into
sub
add
push
sbb
rorb
xor
or
pop
test
xor
push
lret
adc
mov
cmpsb
pop
mov
add
lock
rcl
ret
add
cmc
push
inc
cmp
pop
or
lret
add
pop
out
rcl
inc
or
pushf
push
rcl
pop
jge
in
cmpsb
or
sbb
xbegin
mov
xor
push
ljmp
sbb
adc
push
add
sub
jb
mov
jae
inc
fcmove
lret
mov
sub
fwait
adc
adc
or
and
add
and
ret
mov
add
aad
inc
sbb
mov
dec
fsubs
push
cmc
mov
jp
jle
mov
pop
push
pop
pop
cmpsb
addb
xchg
js
js
xor
in
mov
mov
not
adc
jbe
xchg
dec
leave
jo
rolb
adcl
sub
mov
and
andl
lea
jne
leave
cld
dec
adc
push
lret
ret
or
cmp
mov
mov
and
mov
or
cmp
xchg
inc
pop
push
adc
xchg
dec
push
scas
fucomip
lret
adc
or
aad
jp
mov
gs
and
mov
imul
mov
and
pop
and
daa
mov
rcr
icebp
add
es
and
add
add
dec
scas
mov
lret
mov
add
sbb
pop
mov
inc
loopne
xor
fnstenv
fs
adc
mov
sub
pop
dec
in
aad
push
scas
xchg
mov
mov
xor
and
test
xchg
cli
jb
xchg
dec
sbb
in
enter
rcl
cmp
in
adc
inc
dec
cli
and
mov
pop
cli
repnz
into
mov
add
aaa
adc
in
fistps
xchg
sub
xchg
add
xor
sbbb
cmc
rorb
mov
cwtl
lahf
mov
jl
sbb
xchg
into
adc
push
daa
outsl
push
je
jo
rclb
mov
pop
mov
jb
mov
stos
mov
and
dec
add
xor
scas
pop
rorb
cmp
sbb
adc
in
lods
movb
call
fdivrl
mov
rcll
rorl
lds
cmpsl
jo
test
pop
loop
inc
fildll
je
add
jo
inc
scas
loop
sbb
and
xor
lock
lods
mov
adc
adcb
pushf
mov
mov
push
cli
mov
imul
dec
inc
push
cmp
call
loopne
rolb
sbb
pop
adc
insl
pop
cmp
loopne
out
xchg
mov
mov
enter
scas
sbb
mov
or
push
inc
dec
call
fidivl
adc
sbb
or
or
and
mov
test
mov
orb
adc
imul
inc
adc
mov
push
mov
dec
loope
adc
sub
push
inc
lods
out
add
add
lock
cmp
or
add
or
adc
and
adc
idivl
sbb
rcr
add
push
mov
shrl
mov
dec
repnz
and
dec
push
and
lock
xchg
or
fildl
xor
xor
mov
rorb
das
mov
in
adc
push
mov
test
add
cmp
dec
cs
mov
shll
mov
inc
pop
adc
sbb
push
test
sahf
mov
xchg
sbb
add
aad
leave
inc
push
movsb
sbb
in
rolb
leave
jge
adc
mov
gs
aam
cmp
inc
pop
add
adc
inc
lock
add
inc
mov
orb
and
push
stos
mov
jp
mov
and
push
add
pop
test
rcll
xor
inc
rorb
fadd
xor
movb
mov
mov
cmp
and
inc
fcoml
enter
test
sub
rorb
inc
sbb
jp
push
inc
push
xor
add
adc
xlat
jbe
repz
xchg
inc
xor
cmp
add
inc
mov
jp
add
push
pop
inc
ljmp
test
int3
ret
add
mov
add
adc
stos
lock
fdivrs
fisubl
sbb
aam
ret
push
add
and
jp
inc
adc
push
jno
inc
sub
vpblendw
mov
mov
adc
rclb
outsl
popa
inc
lret
fiaddl
lds
roll
jne
int3
cmp
or
and
add
sub
pusha
mov
push
je
loopne
adc
enter
and
mov
jo
inc
mov
sarb
adcl
sub
lret
adc
sbb
jne
xchg
loop
jge
idivl
out
add
pop
sub
faddl
xor
movsl
adc
dec
fs
fistpl
in
ror
add
sbb
int
popa
sub
aam
mov
loop
xlat
adc
roll
or
movsl
test
add
inc
xlat
cmc
outsl
and
cmpsb
pop
add
lods
inc
xchg
dec
inc
stos
ret
mov
adc
push
es
mov
out
icebp
movsb
sub
fiaddl
js
outsb
imul
sarl
pop
aad
and
add
add
aas
enter
cmpsl
sub
ss
sub
and
lcall
stc
xor
inc
mov
test
sub
adc
enter
scas
add
fwait
cmp
mov
jmp
mov
out
test
sbb
dec
adc
shrb
stc
push
out
mov
loope
xor
and
fimull
sbb
add
pushf
pop
mov
add
vandps
into
fisubl
or
xor
dec
mov
jmp
sub
sub
ds
or
adc
pop
cmp
lret
jp
jge
sbb
cmc
and
addr16
and
add
mov
push
push
test
push
xchg
add
mov
inc
fnstenv
daa
inc
lret
pop
aam
sbb
sbb
shrb
inc
out
push
xchg
loop
rolb
push
or
sahf
mov
pop
into
rcl
or
sub
lds
and
rolb
scas
cmpsl
sbb
sub
clc
push
pop
add
mov
daa
adc
cmp
adc
jmp
mov
xchg
push
xor
test
add
cwtl
adc
sbb
or
add
test
adc
adc
jb
mov
push
push
pop
pop
je
loope
mov
icebp
add
addb
enter
scas
test
lock
dec
in
mov
and
insb
or
mov
ret
std
andb
rclb
pop
jmp
mov
addl
mov
push
inc
mov
sub
adc
mov
adc
mov
arpl
sbb
outsb
push
shl
call
xlat
sub
orl
push
mov
push
mov
mov
sub
js
push
scas
pop
aad
dec
or
ret
out
femms
shl
pop
add
outsl
dec
imul
loopne
mov
xchg
mov
inc
jp
cmp
add
test
and
mov
orb
es
mulb
adc
xchg
adc
inc
add
sub
mov
jle
aaa
push
lods
add
sti
sar
test
sub
ljmp
sub
and
adc
inc
inc
call
mov
pop
push
or
test
inc
sbb
adc
or
push
xchg
pop
sub
fists
sub
dec
or
push
xchg
loope
lahf
in
test
add
push
xchg
sbb
xor
aas
add
xor
mov
or
push
pusha
cmp
mov
addb
out
test
jo
sub
movsl
cmp
ret
mov
mov
movsb
pop
sub
arpl
push
push
mov
hlt
add
call
clc
jb
jp
sub
mov
pop
sub
loopne
mov
jnp
cmp
inc
fstpl
pop
lret
enter
cmp
enter
repz
shlb
in
in
and
fdivrp
adc
arpl
push
mov
xorb
sbb
push
mov
mov
inc
jmp
aam
inc
addr16
insl
or
xchg
xchg
push
push
jo
mov
lds
shll
inc
lock
js
or
nop
or
andl
scas
ret
adc
cmp
cmp
sub
mov
inc
lods
mov
jle
leave
pop
stc
rorb
mov
adc
mov
aas
decl
push
push
icebp
push
loope
mov
xchg
fwait
adc
daa
mov
xor
bound
inc
bound
in
aad
cmp
bswap
sbb
lret
lret
inc
sub
push
xor
inc
push
lret
int
or
test
lcall
xor
jge
loopne
or
dec
cltd
or
mov
dec
test
cmp
repnz
mov
rcll
in
or
inc
mov
jo
pop
jno
xchg
mov
adc
jle
sbbl
and
push
mov
aad
mov
rcl
in
dec
add
add
jne
les
dec
inc
jo
int
jle
stos
push
inc
cmpsl
add
push
subl
sbb
mov
stc
pusha
lods
stc
and
lret
sbb
add
adc
es
jge
cmp
add
shrl
mov
fs
rolb
test
jl
adc
cmp
push
cmp
push
push
jmp
icebp
in
and
xor
xor
scas
cmp
cmpsb
sub
jbe
mov
pop
pop
aad
or
pop
xor
pop
sub
push
test
mov
inc
pop
add
pop
mov
ds
icebp
mov
jmp
mov
jmp
outsl
jp
sbb
sub
addb
and
rorl
stc
push
push
push
test
sub
rclb
ret
or
sbb
dec
ds
sbb
rol
add
xor
sbb
sbb
es
shlb
sahf
push
scas
in
adc
inc
pop
stc
adc
popf
push
pop
mov
push
pop
rolb
xor
jp
adcl
js
push
push
mov
mov
xchg
mov
mov
adc
clc
inc
mov
ljmp
add
or
mov
jne
cmpsb
adc
inc
or
push
inc
sbb
stos
adc
or
rorl
gs
aam
sbb
mov
jmp
fsubl
cwtl
push
xor
add
out
aas
ret
mov
add
pop
xor
sarb
hlt
add
push
sbb
jnp
mov
push
dec
cmp
mov
negb
and
aad
push
push
sahf
xchg
or
cmp
rorl
clc
add
rcrb
sbb
jo
andb
and
inc
icebp
fcmovbe
or
xchg
inc
cmp
adc
add
mov
push
or
mov
xchg
or
inc
fidivs
data16
cvtdq2ps
mov
push
orb
cltd
adc
scas
loope
add
rcll
mov
adc
sbb
push
andb
ret
or
jo
stos
aaa
imul
mov
dec
icebp
add
or
mov
in
call
xchg
rcr
lret
push
add
adcl
lret
mov
mov
lahf
adc
lcall
inc
cmp
cs
jmp
sbb
push
out
add
mov
or
dec
adc
mov
cmove
incl
aaa
mov
aad
mov
testl
mov
gs
scas
enter
loopne
es
xlat
scas
repnz
pop
lret
test
sub
dec
stos
cmp
sbb
mov
out
push
jo
add
loope
js
mov
testb
das
sub
push
sbbb
orb
mov
in
rolb
and
or
sbb
add
adcl
loopne
outsl
sbb
pop
sbbb
or
inc
push
push
or
aam
ret
mov
mov
add
xor
sbb
push
dec
loopne
loop
je
repnz
jne
in
sub
or
cmpsb
push
sub
aad
xlat
pushl
lods
rorb
mov
adc
in
and
or
data16
or
add
imul
daa
or
daa
bound
je
mov
sarb
sbbb
xor
inc
out
push
add
xor
or
ret
cwtl
les
stos
icebp
fwait
inc
add
and
push
in
lock
stos
pop
push
dec
jmp
cmp
and
mov
shlb
and
insl
jno
and
lods
ficoms
rclb
push
mov
sub
fs
and
cmpsb
or
or
out
and
pop
push
sub
rol
inc
fsubr
gs
ds
notb
rol
daa
adc
popa
xchg
push
sbb
or
add
outsb
hlt
mov
pop
jge
mov
dec
push
add
or
and
adc
sbb
xor
sub
cwtl
mov
xchg
sti
mov
sbb
push
mov
mov
repnz
and
push
add
jno
mov
fmull
in
add
push
into
rorb
mov
mov
or
and
je
dec
das
mov
inc
or
ja
subl
rorb
pop
inc
cmp
aam
push
jecxz
pop
push
int3
add
push
jmp
inc
fsubs
sbb
xor
cmp
jb
add
mov
into
inc
adc
lock
inc
and
xchg
inc
fadds
mov
subl
daa
add
or
or
ret
sbb
jo
loopne
ljmp
loopne
imulb
call
addr16
sub
xchg
inc
inc
cltd
bound
cli
and
add
repz
cmp
ja
jne
mov
sub
movl
stc
repz
mov
sti
pop
ret
aas
pop
insl
mov
lahf
aas
jg
sbb
push
push
pop
push
cltd
jne
adc
rclb
gs
repz
push
xchg
cmp
push
jbe
daa
cld
jns
lret
aas
jg
cld
pop
divl
scas
adc
incb
jp
bound
out
lahf
pop
xchg
dec
loop
cs
push
into
jg
cld
stc
test
push
push
mov
mov
and
out
lahf
aas
xchg
jne
lret
jecxz
mov
fnsave
cld
stc
repz
mov
sahf
sti
xchg
out
jmp
imul
aas
fisttps
lret
cmp
dec
adc
jl
out
pop
sbb
js
and
xor
lahf
aas
jg
lahf
test
ret
sbb
js
add
out
cld
stc
repz
jecxz
cmpsb
rorl
and
push
std
and
sub
mov
stc
repz
jae
fcompl
ret
mov
fnstcw
jg
cld
mov
push
lea
outsb
into
lods
rorb
cmp
xchg
out
data16
cld
stc
pop
mov
ljmp
in
js
and
iret
lahf
aas
sub
cmpsb
push
inc
dec
jns
sbb
xor
or
sbb
push
js
les
jns
inc
iret
lahf
aas
jg
adc
int3
movsl
inc
loopne
cmp
cld
stc
repz
movsb
scas
ds
add
hlt
mov
rcrl
xor
rolb
fmuls
xor
sbb
stc
repz
gs
leave
shll
inc
sti
jnp
shl
mov
mov
ret
add
xchg
xchg
mov
jnp
xor
cld
stc
fstp
jo
jbe,pn
movsb
add
jmp
mov
call
pop
cmpsl
or
cld
stc
repz
shrb
mov
fisttps
jg
nop
cmp
lods
inc
test
add
stc
repz
aam
mov
mov
out
lahf
aas
jg
sbb
and
mov
popa
les
ret
out
pop
pop
mov
aas
pop
mov
push
popa
daa
xchg
inc
aas
jg
cld
fmull
xchg
test
shrl
sbb
nop
repz
lahf
movsb
adc
and
std
jg
cld
stc
ja
pushf
xchg
jecxz
adc
jno
out
lahf
aas
inc
jle
sti
add
push
inc
adc
cld
stc
repz
in
loope
mov
mov
cmp
push
iret
lahf
aas
jg
push
adcl
pop
cmp
repz
add
add
xor
jne
pop
fwait
rol
aas
mov
fwait
inc
mov
idiv
sub
out
lahf
add
dec
subb
inc
add
or
adc
push
test
sbb
iret
lahf
aas
sub
loope
inc
in
in
cld
stc
repz
cwtl
dec
in
addr16
jg
push
jmp
and
cld
in
out
test
adcl
iret
lahf
aas
mov
sub
dec
out
js
xchg
cld
stc
repz
mov
jle
mov
push
aad
iret
lahf
aas
jg
xchg
shr
rclb
ljmp
repz
fisubrl
sbb
ficompl
aas
jg
into
pop
mov
addr16
jl
cmp
stc
repz
arpl
xor
into
nop
pop
push
or
jg
cld
mov
dec
sub
mov
cmp
rcrl
out
lahf
jecxz
cld
or
ret
xor
stc
push
pop
lods
lret
and
rcll
daa
add
iret
lahf
aas
ljmp
jmp
cld
stc
repz
dec
mov
fdivl
subl
lahf
aas
jg
add
rorb
movsl
mov
out
cltd
mov
or
inc
lds
jg
inc
repnz
cmp
push
arpl
out
lods
insl
ret
mov
aaa
cmc
je
stc
repz
ja
add
xor
mov
xchg
stos
mov
inc
out
mov
cld
stc
xor
les
sub
test
iret
lahf
aas
xchg
jmp
push
int
mov
cmp
stc
pause
mov
pop
or
pusha
movsb
add
lahf
aas
jg
push
add
sub
pushf
add
out
push
and
pop
xchg
fildll
or
adc
loopne
iret
lahf
jg
cmp
icebp
mov
das
cld
stc
repz
loop
lcall
pop
enter
iret
lahf
aas
jg
stos
jg
daa
stos
adc
lahf
sahf
js
or
stc
repz
mov
mov
mov
aas
jg
pop
das
sub
adc
mov
daa
adc
repz
cwtl
movsb
outsb
aaa
fadds
mov
jg
cld
inc
adc
cmp
dec
pop
rorl
outsb
sub
mov
cmp
jnp
inc
jg
cld
stc
imul
test
xchg
jl
pop
push
xlat
lds
out
lahf
aas
jl
js
mov
mov
cld
stc
repz
pop
repz
pop
mov
imul
aas
jg
ja
popf
imul
repz
cmpsl
popa
cmp
pushl
and
test
jl
out
lret
xorb
stc
repz
cs
pop
push
xor
shrb
lock
je
std
or
lcall
repz
lahf
xlat
cmp
mov
or
xchg
jg
cld
stc
mov
cwtl
jo
cmp
sub
jno
jl
jns
test
iret
lahf
aas
out
out
shlb
mov
cld
stc
repz
sub
pop
mov
dec
adc
in
sbb
scas
test
xor
sbb
and
int
cld
stc
repz
mov
cmpb
mov
inc
lds
push
scas
dec
jle
xor
fstpl
push
sub
cld
stc
repz
push
push
mov
pop
iret
lahf
aas
jg
and
loopne
cmpsl
jb
int
leave
into
xchg
sub
repz
jnp
adc
orl
xor
movsl
aas
jg
jo
fdivrs
add
add
out
lahf
aas
lret
inc
sub
add
jg
cld
stc
cld
test
push
in
mov
roll
mov
iret
lahf
aas
in
loope
adcl
cld
stc
repz
mov
into
outsl
jle
cwtl
lcall
iret
lahf
aas
jg
push
jbe
std
shrl
push
cld
stc
repz
xchg
pop
out
loopne
jae
mov
or
imul
inc
in
pop
mov
mov
jg
cld
stc
shll
cmp
fbld
out
lahf
aas
sub
xchg
jg
movsl
and
cld
stc
repz
adc
lods
jge
lahf
lea
inc
and
aas
jg
inc
stos
lret
ljmp
std
in
out
insl
inc
xor
mov
pushf
jbe
fdivs
jecxz
aas
jg
jl
xchg
sahf
inc
mov
fyl2xp1
repz
fs
mov
and
pop
or
cwtl
aas
jg
cld
std
push
and
mov
ja
test
lahf
xor
mov
mov
push
jg
cld
stc
je
test
imul
mov
out
lahf
aas
out
lahf
data16
mov
dec
inc
aam
and
cltd
ss
sbb
cwtl
mov
in
ljmp
jg
enter
lret
sbb
or
je
in
repnz
lret
pop
adc
mov
jg
sarb
mov
jle
enter
sahf
cmp
mov
repz
lahf
clc
sahf
sbb
lods
outsb
push
push
dec
in
cld
stc
jns
loop
test
into
aam
pusha
push
pop
out
lahf
aas
mov
mov
test
sahf
cld
stc
repz
add
jmp
xchg
cwtl
cmp
test
aas
jg
xor
inc
dec
add
xchg
jae
cld
stc
repz
cs
lods
dec
xchg
pop
pop
add
xchg
lahf
aas
jg
int
es
int
sbb
mov
repz
imul
shlb
push
aas
jg
cld
rcl
sti
iret
jecxz
pop
jae
scas
adc
sub
cmp
out
lahf
fwait
pusha
int3
push
xchg
cmpsb
xor
js
pop
jg
cld
stc
add
pop
shlb
call
xor
jp
out
lahf
aas
sub
outsl
inc
jmp
jo
xchg
cld
stc
repz
pusha
inc
lods
js
mov
push
jmp
add
lahf
aas
jg
inc
adc
cmc
adc
push
ret
cld
stc
repz
mov
jnp
cltd
sbb
push
test
jg
sub
adc
outsl
xorb
sbb
xchg
decb
sarb
out
cli
jmp
aad
cltd
ss
les
mov
ss
and
outsl
fimuls
jecxz
xchg
mov
jno
and
sahf
aas
rclb
add
aas
jg
insb
pushl
pop
shr
xor
repz
fninit
jg
mov
in
test
iret
aas
jg
cld
ss
inc
pop
jmp
xlat
jmp
mov
out
lahf
or
mov
add
xchg
xchg
inc
iret
jg
cld
stc
jno
std
loope
pop
dec
xor
les
out
lahf
aas
add
sub
fdivr
cld
stc
repz
jb
or
xchg
shlb
test
add
fsubl
imul
cmp
out
mov
std
enter
cmpsb
iret
lahf
aas
jg
inc
pop
dec
jl
and
cld
stc
repz
mov
lcall
out
inc
jns
lahf
aas
jg
sub
fistps
test
or
test
daa
or
inc
in
dec
loop
aas
jg
cld
and
mov
fnop
ljmp
and
clc
cwtl
in
pop
lahf
aas
jg
fisubrl
mov
clc
clc
sub
jmp
ja
test
repz
sbb
or
mul
in
iret
pop
sti
xlat
ret
sarl
jg
cld
xor
inc
inc
push
sub
sbb
push
jp
cmp
ljmp
fidivrl
pop
lods
cwtl
lods
push
out
lahf
aas
jno
mov
mov
or
repz
jne
lods
sub
cmp
add
stc
rep
jns
or
add
in
or
jg
cld
shll
shlb
imul
mov
repz
lahf
mov
lahf
push
rcl
cmp
repz
mov
cld
stc
mov
or
test
and
jnp
iret
lahf
aas
fs
sub
sbb
outsl
pop
jg
repnz
fildl
loop,pn
out
lahf
aas
pop
add
jecxz
pusha
sub
sub
jbe
xor
adc
sbb
out
jle
in
or
add
iret
lahf
aas
jg
inc
fcmove
xchg
test
mov
cld
stc
repz
and
inc
add
add
sahf
add
pop
sahf
and
jg
call
jne
mov
cmp
out
or
data16
sbb
push
pop
stc
repz
cmp
push
loopne
test
ds
pop
lcall
lock
in
iret
aas
jg
mov
out
xchg
and
cli
xlat
sbb
es
push
xor
pop
push
mov
icebp
int
cmpsb
nop
aaa
outsl
fidivrs
cli
mov
xorb
mov
rol
aad
push
cmpsb
pop
mov
sub
fidivrs
push
mov
insb
mov
sub
and
decl
adc
fidivrs
mov
xchg
in
and
cld
outsl
dec
mov
dec
pop
push
xchg
lahf
aas
jmp
mov
scas
xchg
fsin
icebp
sub
shlb
lret
repz
lds
jnp
lds
insl
lds
xor
aas
jg
cld
and
adcl
mov
loopne
repz
lahf
mov
pusha
sbbl
loopne
outsb
cld
dec
stos
xor
lods
inc
cmc
or
fisttpll
xor
in
stc
repz
inc
inc
pop
mov
test
roll
cld
test
cmp
inc
xor
pop
push
mov
or
aas
jg
cld
xchg
mov
and
sbb
xor
cwtl
inc
daa
repz
lahf
mov
lret
xchg
mov
mov
dec
cmp
dec
mov
pop
movsb
mov
mov
pop
stc
int
push
sub
lock
out
lahf
aas
cmp
lcall
lds
cld
stc
repz
push
out
loope
imul
jg
push
les
fcomip
aaa
adc
insl
mov
out
lret
cmpsb
int3
repz
cld
stc
ret
sbb
pop
hlt
into
clc
out
lea
mov
lahf
aas
jg
mov
dec
sbb
mov
pop
movsl
and
imull
stc
repz
ret
cmpsl
notb
mov
aam
aas
jg
lock
clc
shlb
jl
int3
cmp
push
adc
iret
mov
and
xor
cld
jae
insb
dec
jae
and
cmp
pop
and
out
lahf
pop
pop
dec
inc
pop
push
add
leave
xlat
enter
cld
stc
ret
out
arpl
into
enter
mov
iret
lahf
aas
mov
inc
divb
push
mov
cld
stc
repz
cmp
int3
cmpsb
clc
movsb
stos
push
hlt
jl
lahf
aas
jg
stos
fistpll
mov
inc
adc
cld
stc
repz
fsubrl
push
insb
push
dec
jbe
pop
lahf
aas
jg
addr16
je
xor
sub
out
repz
adc
stos
cmp
ss
jg
cld
push
ds
stos
xchg
mov
mov
push
insb
and
nop
scas
inc
jns
aaa
xchg
les
cld
stc
xor
aam
jo
push
adc
iret
lahf
aas
mov
loop
cmp
mov
cld
stc
repz
call
sbb
aam
mov
shlb
ljmp
jb
in
out
cld
stc
repz
xor
xor
ljmp
inc
sahf
aas
popl
mov
xchg
iret
lahf
aas
hlt
hlt
rcr
mov
mov
sbb
push
cmp
and
cmpsb
adc
cmc
daa
psubw
out
jg
pushf
mov
sarb
bound
ja
push
mul
xchg
in
daa
or
stc
repz
dec
cwtl
scas
test
int3
shrb
dec
inc
inc
push
lahf
aas
jg
xor
in
outsl
shrl
pop
imul
jae
test
pop
fs
stc
repz
cld
adc
test
clc
xor
lahf
aas
jg
cs
mov
insb
sbb
inc
xor
xchg
ret
sti
ljmp
jnp
adc
adc
cmpsb
insl
and
cld
sar
in
xor
pop
pop
push
stos
cmp
pop
inc
xor
scas
stc
repz
lds
aas
hlt
push
jecxz
fldpi
fnstcw
jg
cld
inc
fst
mov
cmp
stos
mov
out
lahf
fsubrs
popl
mov
mov
std
lods
sahf
or
insl
jns
mov
add
outsl
fidivrs
ror
mov
cmp
int
popa
imul
icebp
xchg
shrl
mov
and
std
pop
aad
dec
sbb
out
fwait
aaa
and
sbb
stos
pop
dec
sbb
add
fidivrs
aad
cltd
cmpsb
pop
dec
xor
rcrb
outsl
int3
shll
cmp
xchg
ljmp
xchg
jmp
and
pop
fmul
fldl
aad
fsubl
sbb
adc
fbstp
int3
nop
iret
lahf
aas
jg
rcrl
push
jp
sbb
sbb
jns
stc
repz
fcmovb
xchg
negl
fdiv
cld
scas
daa
jbe
sub
pop
daa
fcmovnbe
adc
in
stos
pusha
stc
repz
push
pusha
sbb
and
or
and
xchg
add
push
jnp
cmp
sbb
stc
repz
insl
add
loopne
fnsave
xor
xchg
aas
jg
lds
adc
push
sbbb
int
ja
adc
push
int
addr16
repz
xchg
test
mov
push
mov
xor
cmp
jno
cwtl
cmc
fnstsw
jg
cld
and
push
sub
lds
xlat
xchg
je
rolb
call
dec
push
bound
sbbl
dec
jecxz
loopne
push
repnz
inc
inc
ffree
xchg
stos
clc
sarb
aam
std
cmp
adc
push
add
mov
repz
cld
stc
repz
jmp
adc
push
dec
les
mov
fnstsw
aas
jg
leave
icebp
mov
adc
fiaddl
stc
repz
push
movsl
dec
popa
push
insb
xor
cwtl
fs
inc
sub
lahf
aas
jg
adc
lret
dec
jle
ja
stc
repz
xchg
push
lock
pop
inc
push
negb
lea
jg
cld
pushf
ret
aam
pusha
sbb
mov
sub
cmp
sub
jmp
pop
add
dec
mov
aas
cld
stc
mov
xchg
dec
jno
add
pop
aaa
aam
xchg
dec
popa
and
out
mov
xchg
flds
mov
int
aaa
push
add
ret
push
ds
sub
xchg
cmp
enter
xchg
hlt
cmpsl
lods
xchg
mov
mov
mov
add
or
int
aaa
or
arpl
jo
mov
push
cmp
mov
add
fdivrs
cmc
and
jge
fwait
aaa
outsl
adc
clc
push
jb
inc
lods
mov
pop
add
jns
out
xchg
enter
jecxz
sbb
add
xor
outsl
imulb
jne
int
jp
mov
adcb
repz
out
mov
repnz
repnz
gs
aas
jg
cld
dec
pop
xlat
scas
cmp
cmp
repz
lahf
stc
scas
inc
mov
add
rcl
lahf
aas
cmp
nop
lret
or
in
fildll
lahf
stc
repz
cli
movsl
mov
fucomip
mov
insl
adc
mov
cld
in
lods
mov
es
pop
scas
ret
out
lahf
sbb
mov
ss
inc
mov
cld
stc
inc
pusha
xchg
repnz
fnsetpm(287
rcr
mov
push
out
lahf
aas
inc
mov
lds
lea
cld
stc
repz
fsubr
sbb
push
cmpsl
push
fwait
adc
out
lahf
aas
push
mov
test
mov
cld
stc
repz
mov
pushf
icebp
push
cmp
lahf
aas
jg
or
cltd
mov
cmp
cmp
test
ss
stc
repz
jg
xlat
ret
lds
mov
fs
and
adc
jl
adc
adc
out
mov
testl
pop
in
jg,pn
cld
stc
jge
jb
cmp
ds
jmp
add
pop
es
popa
cmpsw
andb
fidivrs
gs
pop
xor
aas
ljmp
inc
xchg
mov
aaa
outsl
fidivrs
or
in
adc
and
aaa
or
clc
adc
enter
ljmp
aaa
jns
cmpl
inc
dec
push
dec
cli
stos
xchg
icebp
mov
fcmovnb
lcall
inc
push
inc
dec
shll
mov
add
push
and
xchg
popf
decb
jl
adc
stos
pop
xor
jg
insl
cmp
add
stc
sub
stc
stc
repz
dec
stc
or
out
jnp
dec
sub
cmp
fwait
bound
jle
xchg
push
mov
aas
jg
fidivl
push
inc
and
loop
lock
repz
jle
movsl
outsb
xor
inc
dec
decl
jg
cld
das
add
jle
xchg
in
adc
inc
insl
repz
lahf
cmp
lcall
and
push
jg
cld
stc
mov
fwait
mov
inc
pop
sbb
xlat
and
pusha
lahf
jg
cmp
push
jg
test
loop
mov
call
orl
subl
and
je
flds
jg
cld
stc
push
push
clc
xor
mov
xor
dec
ds
pop
movsb
xor
jg
cld
jecxz
loopne
pop
inc
lods
fiaddl
iret
ffreep
out
lahf
aas
adc
lock
imulb
fwait
cld
stc
repz
leave
jle
mov
mov
pop
cwtl
in
stc
iret
lahf
aas
jg
mov
dec
adc
pop
cld
stc
repz
dec
sub
out
enter
jo
sbb
sbb
cltd
jg,pn
test
jbe
xorb
push
xchg
jl
xor
out
fwait
mov
aam
shl
int
jns
jbe
pop
outsl
fidivrs
daa
js
aam
xor
aaa
subb
out
fwait
aaa
and
pop
data16
out
mov
sub
jns
test
cmp
xor
daa
jns
mov
shl
sub
mov
xchg
mov
cld
add
fwait
lret
test
fyl2x
cmpsl
adc
les
adc
les
jns
out
xchg
mov
xor
jne
mov
mov
jmp
loopne
cmpsl
insb
cmp
pusha
repz
fwait
adc
dec
imul
inc
das
jns
fidivrs
subl
dec
adc
je
out
fwait
aaa
fwait
out
dec
mov
mov
cmp
pop
cmp
cmpsl
rol
mov
outsl
fidivrs
out
aas
and
jle
cmp
xor
adc
les
movsb
add
negl
mov
repz
fwait
movsl
fistpll
add
outsl
fidivrs
out
outsb
bound
lods
pop
push
out
fwait
aaa
je
je
cwtl
cld
pop
std
cwtl
mov
mov
mov
pop
in
mov
jg
jp
aad
pop
pusha
push
int
aaa
outsl
test
or
xchg
lea
mov
popf
mov
dec
sbb
mov
push
push
lahf
jg
fiadds
sub
ret
cmpsl
notb
add
mov
sbb
cmpsl
clc
shlb
jl
int3
cmp
push
adc
repz
mov
mov
and
fmul
cld
stc
xlat
sbb
pop
das
mov
ljmp
cld
repnz
mov
aam
movsl
repnz
push
data16
dec
loopne
jns
out
dec
adc
xchg
out
xchg
mov
jg
or
adc
imul
test
lahf
pop
sbb
out
lds
sbb
decl
scas
fs
dec
jg
ss
outsl
fidivrs
push
insl
jb
pusha
mov
out
enter
insl
pop
add
cmp
cli
inc
jnp
cmp
ret
mov
aaa
outsl
fidivrs
imul
fs
and
out
fwait
xorb
mov
outsl
fidivrs
or
sti
stos
push
out
fwait
aaa
push
sub
hlt
cli
ljmp
repz
repnz
xor
sbb
addr16
fwait
aaa
outsl
enter
ds
xchg
push
cmp
repz
js
int
adcb
push
sub
xchg
mov
mov
stos
mov
int
aaa
sub
push
cmp
imul
outsl
fidivrs
stos
and
cs
andl
iret
int
icebp
jmp
cmp
mov
ds
divb
inc
loop
fwait
aaa
outsl
call
mov
pop
frstor
repz
or
test
insb
jae
push
xchg
aaa
outsl
fmulp
push
push
and
mov
pop
and
dec
rcl
jg
xlat
jbe
ss
mov
outsl
sti
push
stos
adc
stos
sbb
mov
aaa
outsl
fidivrs
or
mov
out
fwait
push
mov
sbb
cltd
cmp
std
outsl
fidivrs
mov
imul
cmp
movsl
add
int
aaa
pop
pmulhw
mov
or
jns
fdivs
pop
mov
lea
adc
add
fwait
mov
jp
sub
jns
out
leave
fnstsw
pop
insl
or
data16
jl
outsl
fidivrs
insb
scas
pop
stc
shrl
repz
fwait
aad
jb
das
or
add
jns
shlb
cmp
imul
and
xchg
aaa
fstp
test
jg
scas
rorb
and
xchg
popa
or
popa
popf
test
push
aaa
test
add
pushf
dec
and
int
aaa
outsl
cs
enter
and
jne
jns
out
scas
mov
test
or
or
aaa
outsl
faddp
hlt
fdivr
idiv
jecxz
push
repz
insl
popa
inc
xchg
leave
inc
push
aad
rcrb
cmp
mov
popf
ja
enter
jg
sti
shl
repz
fwait
add
push
lds
loope
inc
jne
fidivrs
sbb
xor
xor
inc
loopne
out
fwait
aaa
cs
imul
repz
out
fidivrs
daa
nop
popa
add
or
and
leave
lds
mov
scas
xor
inc
push
inc
mov
adc
fidivs
cmpsl
dec
iret
ret
shlb
xchg
or
mov
aaa
daa
es
lret
aaa
outsl
fidivs
stos
shll
jne
negb
jns
out
mov
cs
inc
mov
xor
lcall
pop
adc
loope
int3
push
inc
pop
add
out
cld
into
fdivp
xchg
mov
in
out
fnstenv
outsl
fidivrs
loope
push
int3
jnp
lret
out
int
test
or
cmp
xor
fidivrs
test
daa
rolb
int
aaa
outsl
aaa
pop
aaa
adc
inc
mov
and
les
mov
jmp
fwait
aaa
outsl
ficoms
jmp
or
push
gs
out
jno
push
dec
sub
aad
aad
lret
ds
xchg
mov
in
std
lret
cmp
int
aaa
inc
and
enter
in
sbb
mov
push
jne
lret
push
pop
lret
xor
inc
int
aaa
outsl
dec
adc
sbb
ror
insb
ret
mov
adc
pop
xor
xchg
pop
push
fs
outsl
fdivrp
pushf
mov
ja
sbb
repz
testb
dec
mov
out
mov
aaa
outsl
fidivrs
cmp
push
fmulp
repz
fwait
xchg
test
inc
imul
push
cmp
std
dec
jl
fldenv
pop
sbb
pop
int
aaa
outsl
mov
xchg
lock
test
subb
out
sti
pop
shll
mov
mov
adc
fiadds
mov
lcall
int
loope
push
push
add
pop
bound
fidivrs
xchg
lret
in
adc
sti
cmc
adc
ret
leave
fwait
sbb
lods
inc
cli
das
xor
cld
mov
mov
ja
xchg
or
and
repz
lahf
in
je
push
insb
push
dec
inc
aas
cmpsb
fs
jg
cld
stc
add
mov
or
and
mov
push
sub
jmp
js
mov
cld
stc
repz
testl
js
sbb
iret
lahf
aas
jg
fwait
mov
push
add
cmp
push
test
mov
dec
xchg
fwait
addb
test
pop
jns
icebp
xchg
jbe
pop
push
int3
inc
clc
punpckhdq
outsl
fidivrs
push
cmp
mov
repz
fwait
mov
sbb
test
outsb
lahf
outsl
fidivrs
lods
cmpsl
mov
push
into
and
test
int
aaa
incb
mov
push
and
push
xchg
mov
jle
dec
jbe
xlat
cmp
insb
add
fwait
aaa
outsl
bound
rcl
lret
scas
int3
cli
jb
dec
outsb
mov
arpl
lods
repz
test
aaa
outsl
fiadds
push
mov
je
mov
jns
out
pusha
mov
add
popa
xchg
hlt
mov
outsl
fdivrp
mov
sbb
mov
iret
int
mov
mov
in
xchg
push
ljmp
lret
mov
addb
inc
mov
mov
mov
sbb
and
repz
fwait
loop
aaa
dec
adc
sti
sahf
sub
jno
mov
jns
in
mov
dec
and
stc
repz
aad
xor
and
test
int
insl
lahf
aas
jg
xchg
xor
mov
mov
mov
dec
pop
cmp
repz
mov
jg
sbb
cld
xchg
popa
pop
jle
jg
cld
inc
sbb
aam
mov
leave
push
push
mov
stc
repz
stc
and
mov
xchg
int
idivl
jg
cld
xor
and
in
sbb
cmpb
iret
lahf
andb
mov
out
pop
xchg
xchg
enter
jp
adcl
jne
test
cmp
out
jb
out
dec
inc
push
add
push
addr16
jns
das
cmp
dec
mov
push
movsb
mov
decl
push
cmp
ljmp
out
repz
lahf
cwtl
or
fldenv
lds
cld
stc
cmp
lods
mov
push
mov
mov
iret
lahf
aas
rclb
rorb
in
cld
stc
repz
or
mov
loope
and
lahf
aas
jg
ret
mov
push
cltd
hlt
add
out
pop
dec
sbb
inc
int
and
push
inc
lahf
aas
jg
lret
scas
std
mov
test
jle
add
test
xchg
inc
xchg
roll
scas
lret
sbb
int
aaa
sbb
cmp
dec
andl
sub
xchg
rol
jecxz
jg
cld
cmp
popf
int
aaa
outsl
fisttpll
xchg
mov
add
dec
cmpsb
mov
jno
dec
sbb
ja
inc
cwtl
shll
ficoms
stc
inc
push
xor
andl
js
out
xor
les
mov
rcrb
push
xor
ja
inc
fdivp
fmul
fnstsw
das
and
or
out
fwait
xchg
sub
cli
movsl
pushf
xchg
mov
mov
enter
dec
push
test
jp
vcvtpd2dq
fwait
aaa
pop
sub
lret
iret
dec
mov
jno
enter
cmpsb
inc
lahf
cld
adc
push
andl
inc
sbb
int
ja
movsb
mov
movsb
test
faddp
subb
rep
push
jae
or
lods
fcmovnbe
aad
jno
leave
dec
adc
fwait
aaa
outsl
xchg
lret
add
mov
scas
mov
mov
test
xor
pop
test
mov
aaa
outsl
fisubs
jg
stos
inc
dec
and
imul
repz
mov
icebp
push
clc
jg
inc
mov
xchg
pop
xor
stc
repz
jb
jo
das
cmp
push
in
jg,pt
cld
fcmove
pusha
mov
fisubrs
mov
fwait
aaa
aam
cmp
cmpsl
mov
jo
out
repz
out
repz
testl
outsl
fidivrs
clc
test
mov
ljmp
lret
vmovdqa
scas
jns
out
adc
sub
mov
test
cltd
jecxz
das
jle
mov
fmuls
jle
xorl
cld
jnp
xchg
adc
xor
aas
mov
mov
cmp
lahf
aas
jg
lods
movb
xor
lds
lea
repnz
sub
jb
test
and
mov
mov
fnstenv
mov
mov
cli
fwait
aaa
outsl
fdivrp
cmp
mov
fcmovne
sbb
jns
out
pushw
jle
loop
and
sahf
pop
xchg
outsl
fidivrs
sahf
iret
pop
es
clc
popa
pop
testl
cwtl
mov
jb
ljmp
outsl
fidivrs
xor
int
insl
lock
xchg
out
fwait
aaa
sahf
sub
cmp
fsubl
mov
repz
mov
decl
icebp
arpl
or
iret
lahf
aas
adc
mov
push
testl
popa
mov
divl
pop
das
mov
out
aas
sbb
in
or
stc
cld
stc
repz
or
and
pop
outsl
fiadds
aas
gs
fucomp
leave
jecxz
push
push
mov
aaa
insl
pop
dec
aam
jecxz
call
fnstcw
rolb
test
stos
mov
mov
out
sub
movsl
inc
movsl
cli
popl
repz
mov
cmpsb
mov
pop
push
push
ds
test
rcr
outsl
fidivrs
test
mov
lock
fwait
aaa
push
dec
outsl
adc
loope
fdivrl
mov
or
pushf
jnp
aaa
push
sbb
pushl
dec
push
cmpsb
push
sbb
repnz
mov
sbb
stos
adc
mov
mov
call
insb
cmp
inc
outsb
fiadds
fldcw
imul
xchg
fwait
aaa
outsl
fwait
lds
dec
sahf
jge
cmc
aaa
mov
fwait
aaa
shlb
jne
dec
cmp
adc
jns
out
and
pushf
or
lock
daa
cmp
insb
fidivrs
add
std
enter
lahf
out
or
jae
adc
fisubrl
into
dec
sti
mov
daa
pop
fidivrs
pop
push
sbb
nop
scas
sub
int
aaa
outsl
add
test
pop
pop
sarb
and
clc
push
mov
mov
add
mov
fisubs
mov
xor
in
jns
out
mov
or
pop
add
femms
lcall
mov
and
in
mov
inc
notb
repz
fwait
lods
pop
lock
pop
outsb
dec
iret
mov
adc
xlat
mov
fdiv
cmp
dec
std
lds
in
xchg
fwait
aaa
insb
push
push
jns
push
dec
adc
jmp
fstpl
mov
adc
cld
mov
push
push
sub
loope
adc
sub
aaa
ret
xchg
loopne
mov
testl
fcoml
aad
nop
addl
xchg
sbbl
aas
jg
cld
inc
filds
sti
les
xor
iret
lahf
repnz
mov
imul
jo
repnz
jmp
push
sbb
nop
xchg
sub
mov
jp
jg
fs
jbe
dec
repz
fwait
repnz
fnstsw
mov
cmp
loop
ds
imul
mov
sbb
sub
pusha
popa
imul
mov
mov
jbe
xlat
fwait
cmp
cmp
call
aaa
outsl
jb
or
add
inc
mov
es
enter
mov
ss
fidivrs
pop
pop
addb
dec
xor
in
hlt
inc
popa
int
aaa
outsl
xorl
dec
mov
push
sti
inc
xor
jns
je
push
testl
fidivrs
test
movsl
mov
call
out
fwait
test
xchg
add
mov
aas
jg
hlt
mov
dec
or
dec
lret
ds
adc
out
lahf
mov
push
jp
lret
test
xchg
imul
cld
stc
nop
xchg
inc
or
and
clc
or
aas
lea
cmpsl
push
xchg
aam
rorl
mov
mov
mov
sbbl
icebp
xchg
out
stc
adc
int
pushl
pop
fmul
outsl
sub
push
cmp
mov
adc
daa
jb
pop
or
loopne
mov
sti
scas
fidivrs
or
or
adc
pop
loopne
mov
mov
xorl
aam
mov
jns
out
mov
add
or
pop
xor
out
mov
movsl
adc
out
fwait
ret
in
mov
mov
inc
scas
jg
jge
sbb
stc
ja
ret
fwait
out
lahf
aas
dec
xchg
lret
cltd
add
push
cltd
mov
rep
pop
inc
adc
mov
mov
mov
movb
jecxz
arpl
cld
mov
scas
sti
sub
jge
push
out
aas
jg
ss
xchg
cmp
fwait
cld
stc
repz
cmpl
xchg
leave
lahf
aas
jg
into
loop
popf
or
pop
jg
xor
fstps
adc
pop
pop
aaa
movsl
cmpsl
repz
lahf
arpl
adc
cld
stc
xor
out
int3
gs
add
xchg
iret
lahf
aas
adc
sub
mov
stos
fadds
push
out
cwtl
test
outsl
fsubrp
inc
mov
ret
rorl
xlat
int
mov
mov
out
mov
cld
stc
pop
aaa
sub
push
xchg
mov
bound
push
xchg
aas
jg
xlat
mov
test
add
cmpsl
inc
xchg
push
mov
fwait
dec
bound
inc
inc
lock
in
mov
pop
aam
out
fwait
aaa
xlat
fcomip
movsl
dec
insl
je
pop
repnz
mov
mov
stos
jl
jnp
js
ficoms
pop
aam
leave
insb
push
enter
cmp
mov
ret
sub
jns
xchg
fidivrs
cmpsl
push
loopne
outsl
scas
jae
aaa
outsl
fidivrs
lods
ret
pop
dec
rcr
dec
pop
lods
in
int
pop
mov
sbb
fidivrs
jg
subl
fwait
aas
aaa
outsl
fisttpl
in
cmovle
daa
push
jg
push
ljmp
pop
je
iret
outsl
fidivrs
mov
push
clc
cli
xchg
jecxz
inc
aas
test
aaa
xchg
mov
cmpxchg
loop
imul
sub
negb
lahf
clc
outsb
add
sbb
cmp
dec
enter
push
cmp
cmp
mov
repz
sbb
ljmp
mov
aas
jg
xlat
xchg
mov
and
icebp
clc
incb
repz
mov
adc
mov
je
cld
sub
cld
fdivrl
outsb
sub
fidivrs
mov
test
ss
outsl
dec
stos
pusha
sub
xchg
fiadds
cmp
mov
enter
xchg
inc
and
pop
cmp
pop
or
jns
out
cmp
add
push
or
fs
mov
mov
hlt
cli
sub
xchg
int
sbb
adc
ds
fidivrs
and
sub
outsl
ds
subl
daa
cmp
ficoms
ficoms
inc
jbe
mov
add
int
aaa
outsl
std
aad
sub
rcll
fdivr
fs
rclb
in
shl
outsl
fidivrs
jl
pop
inc
repnz
fwait
aaa
inc
pop
lret
mov
and
repnz
push
and
fstpt
repz
lahf
mov
mov
cmpb
stc
in
dec
enter
and
popf
cmp
mov
repnz
adc
jnp
stos
fsubrl
cld
mov
jg
inc
clc
bound
mov
jns
out
lahf
aas
clc
arpl
mov
cs
cmp
cld
stc
repz
xor
adc
mov
dec
jg,pt
sahf
js
sbb
lock
push
sbb
shlb
lahf
in
xchg
int
nop
std
and
insl
jg
cld
stc
gs
inc
push
testb
mov
lods
xchg
iret
lahf
aas
test
jg
jmp
push
in
cmc
pop
gs
fidivs
lods
sbb
stos
jns
out
inc
pushf
mov
adc
mov
or
outsl
fidivrs
mov
enter
ja
insl
repz
fwait
lret
inc
dec
dec
sbb
ret
ds
and
xchg
divb
mov
out
fwait
aaa
out
xchg
cmp
nop
xchg
in
divb
pop
sub
outsl
fidivrs
call
mov
lods
int
aas
aaa
out
inc
rclb
push
inc
pop
leave
pop
adcb
enter
jecxz
jl
and
sahf
out
mov
ljmp
cmpsb
cld
stc
repz
add
roll
fimull
lahf
aas
jg
rcl
test
lcall
repz
call
outsb
sbb
lods
lea
mov
or
lods
xchg
xchg
movsl
int
aaa
outsl
push
outsb
ret
scas
adc
xor
repz
mov
repnz
mov
push
fwait
aaa
outsl
fmulp
lret
call
psrld
jns
out
sub
mov
xchg
ds
outsl
and
cmc
mov
pop
jb
and
out
fwait
aaa
jns
popf
mov
pop
or
jns
mul
mov
xchg
push
mov
mov
outsl
or
out
push
sbb
add
imul
xchg
int3
fdivp
pop
mov
jae
mov
mov
pop
stos
arpl
clc
fs
cltd
adc
xchg
sub
shll
fidivrs
adc
out
inc
out
fwait
aaa
inc
mov
cmpl
dec
or
mov
adc
imul
repnz
lahf
aas
pushl
sub
push
push
std
scas
cld
stc
repz
pop
xchg
std
adc
mov
jne
push
leave
lahf
aas
jg
xchg
fdivs
pop
gs
imul
out
ret
sbb
jp
sub
out
out
int
aaa
push
xlat
arpl
les
inc
mov
fptan
test
ret
fisubl
aaa
mov
mov
lds
stc
repz
pusha
pop
inc
sub
or
lahf
aas
jg
adc
dec
cmp
push
int3
jnp
dec
mov
out
mov
xor
adc
jp
lahf
aas
jg
mov
push
dec
insl
inc
imul
adc
xchg
ds
sbb
push
xor
and
and
push
pop
mov
dec
in
cmc
lea
sti
fcoml
or
jns
int
ja
jp
pusha
mov
repz
push
sbb
mov
lahf
in
mov
adc
lahf
aas
jg
test
in
jecxz
adc
sub
xor
out
push
inc
inc
nop
sbb
into
xchg
iret
lahf
aas
jmp
daa
pop
push
xchg
iret
push
rcrl
repnz
mov
and
mov
mov
jns
repnz
jg
cld
add
adc
and
lcall
inc
pop
stc
repz
lahf
and
icebp
mov
xchg
mov
pop
aas
jg
cld
movsl
xor
out
cmp
inc
mov
pushf
aam
jns
mov
mov
ret
cmp
aaa
outsl
fidivrs
cmpsl
pusha
outsb
mov
pop
xchg
repz
fwait
xchg
inc
mov
dec
pop
inc
push
imul
loopne
xchg
push
int3
ja
divb
dec
out
lahf
aas
mov
fidivrl
hlt
arpl
stc
stc
repz
ds
dec
or
fidivrs
xchg
lds
cmp
int
aaa
outsl
movsl
jne
sbb
xor
sbb
repz
cmp
cmpb
mov
or
cmp
lea
xchg
enter
call
mov
sbb
mov
clc
jne
push
in
sbb
cmp
fcmovne
lahf
aas
call
sbb
pop
stos
ja
xchg
sti
xchg
popf
out
loopne
cld
stc
repz
leave
fucomi
aas
dec
xor
jg
rclb
jg
mov
jl
cmp
movsl
and
out
mov
or
ljmp
sbb
call
xchg
cld
jmp
das
and
adc
adc
cmc
ror
pop
popa
push
imul
pop
cmc
pop
addr16
syscall
lock
pop
cmp
sbbl
aas
jg
das
push
rorb
xor
mov
cli
mov
repz
popa
inc
cmpsb
leave
and
sbb
jl
cmp
repnz
jg
cld
or
sar
iret
sbb
in
gs
out
lahf
xor
xchg
icebp
stc
sbb
rcrl
or
jg
cld
stc
jge
adc
icebp
push
dec
loopne
ret
and
out
lahf
aas
mov
jne
mov
jmp
stc
repz
xor
or
icebp
aas
and
lahf
aas
jg
sahf
mov
jp
scas
and
cld
stc
repz
icebp
pop
in
mov
or
jno
mov
push
lahf
aas
jg
hlt
push
aaa
out
lcall
lods
mov
roll
xchg
adc
xchg
fcmovnb
mov
add
sub
add
jbe
pop
icebp
rcl
add
lds
bound
ljmp
repz
xchg
xchg
jmp
mov
aaa
inc
xchg
fwait
aaa
outsl
popa
ljmp
fldl
stos
lahf
jl
lahf
addr16
addr16
push
inc
jbe
xchg
aas
jg
cld
lcall
lret
loope
push
fdiv
int3
dec
sub
inc
and
arpl
inc
mov
jg
and
adc
or
repz
inc
sub
outsl
jl
xchg
fwait
aaa
push
sbb
cli
xchg
loop
mov
repz
and
fsubs
pop
mov
outsl
fidivrs
iret
dec
push
xor
out
lahf
xor
test
sbb
das
sbb
jns
out
cmpsl
std
push
mov
frstor
aaa
outsl
fidivs
aas
fs
pop
jns
sbb
jns
out
add
lods
jno
mov
adc
fidivs
outsl
fidivrs
in
push
mov
andb
push
push
jmp
sbb
outsl
fidivrs
mov
cmp
outsb
or
int
aaa
sub
push
in
div
mov
sqrtps
xchg
pop
clc
enter
cmp
xchg
ja
xchg
repz
jno
xor
jecxz
in
pushl
outsl
fidivrs
shlb
les
outsl
lret
popa
adcb
decb
add
ficomps
push
dec
daa
pop
dec
outsl
fidivrs
jb
inc
sti
daa
cmpsl
mov
repnz
int
aaa
aas
fistps
mov
xor
push
push
xchg
jns
lock
repz
dec
push
inc
sub
outsl
fiadds
sbb
sbb
cltd
iret
movsb
or
int
aaa
popf
mov
inc
mov
test
pop
adc
jno
sti
int3
push
jbe
mov
ja
cld
movsb
pusha
xor
popa
cmp
xor
jns
stc
stos
xor
and
out
in
cmp
movsb
outsl
les
dec
outsb
scas
add
adc
cmp
sarl
cltd
gs
cwtl
and
xchg
in
iret
outsl
fidivrs
lds
stos
nop
mov
icebp
loopne
fwait
aaa
sub
jno
insl
adc
shrb
xor
or
iret
lahf
aas
jg
mov
jp
mov
imul
add
cli
adc
xchg
nop
push
aas
jg
cld
and
ja
mov
jb
sahf
xchg
out
lahf
and
push
inc
mov
pop
movsb
adc
jg
cld
stc
mov
jo
sub
in
sbb
xorl
lahf
aas
lret
ret
jmp
andnps
cld
stc
repz
outsb
aaa
test
dec
cli
mov
iret
lahf
aas
jg
jmp
in
sbbb
test
clc
dec
leave
cld
stc
repz
sbb
jmp
jle
sub
adc
roll
sbb
ret
addb
int
aaa
scas
cs
xor
lods
xor
flds
jns
jo
repnz
lcall
inc
mov
jbe
inc
test
mov
inc
enter
aas
mov
push
addr16
xchg
mov
cs
fidivl
outsl
xchg
and
inc
cmc
xchg
inc
in
pop
inc
imul
out
out
fldenv
int
nop
stc
sahf
or
outsl
fidivrs
xlat
jb
xorl
xor
int
aaa
bound
xor
mov
sbb
xlat
mov
jns
mov
mov
xor
or
inc
xor
outsl
ficoms
scas
aaa
pusha
jns
les
dec
sub
das
sbb
dec
push
insb
lds
call
inc
call
sub
pop
out
pusha
adc
sub
lahf
aas
jg
test
sub
out
sbb
mov
cld
stc
repz
rclb
das
ss
outsb
adc
clc
adc
fidivrs
pop
sub
or
fwait
aaa
outsl
shlb
aad
imul
xorb
xchg
iret
outsl
fidivrs
stc
push
roll
push
aaa
out
test
push
lahf
movb
scas
mov
out
fwait
jl
cld
hlt
sbb
pop
fcompl
jns
xor
repz
mov
inc
and
outsl
push
and
inc
aad
jno
pop
out
sbb
and
jmp
or
mov
je
cmp
inc
dec
dec
jg
add
and
outsl
ficompl
lahf
fisttpll
inc
out
sub
mov
fisubrs
inc
repnz
cwtl
mov
lds
xor
xlat
mov
ss
push
loopne
pop
stc
repz
mov
pop
mov
stos
adc
aam
sarl
cld
pusha
test
sub
fs
sbb
mov
repz
lahf
dec
push
cli
fcmovnb
mov
int3
testl
out
dec
adc
jg
dec
or
adc
sbbl
icebp
enter
repnz
and
mov
or
lahf
aas
jg
jge
rorl
dec
sub
out
cld
stc
repz
cmp
pop
sbb
xchg
neg
dec
inc
lahf
aas
jg
or
inc
push
fldl
loope
pop
xchg
or
repz
subl
addr16
stos
inc
jle
cld
jno,pn
mov
fwait
add
stos
mov
fs
aas
jg
cld
xor
ret
mov
mov
cld
repz
lahf
bound
sahf
mov
mov
inc
lcall
sub
mov
ja
ja
insl
or
mov
fnstsw
jmp
dec
enter
mov
insb
ret
outsl
mov
hlt
fxch
push
sub
lret
call
fwait
aaa
outsl
fmulp
pusha
mov
push
cs
fidivs
test
push
shlb
mov
xchg
aaa
outsl
fidivrs
rol
aas
add
mov
xor
fisttpll
cli
iret
jbe
aaa
mov
fidivrs
sbb
lahf
push
pop
rcll
aad
pop
jbe
int
aaa
sub
pop
mov
sbb
aas
jg
hlt
add
cmp
xchg
mov
push
xor
out
mov
out
xchg
and
out
ja
insl
adc
mov
mov
inc
pop
push
pop
movsb
aad
jmp
lahf
aas
jg
repz
cmpsl
out
outsl
ljmp
out
add
pop
mov
mov
pminub
pop
les
pop
in
dec
addr16
pop
lds
mov
adc
push
inc
fidivrs
mov
mov
fwait
aaa
outsl
ficomps
idiv
dec
inc
sbb
frstor
out
bound
lock
cltd
and
outsl
fidivrs
mov
std
push
and
out
fwait
pop
imul
adc
inc
fwait
cmpsl
inc
lret
aas
cmp
loopne
inc
insb
out
aas
jg
cld
adc
out
xchg
shrb
mov
iret
lahf
xor
mov
fcompl
in
jg
cld
stc
mov
push
xor
repnz
xorl
cmp
xor
xor
push
std
js
push
sbb
repz
movsl
repz
mov
sbb
daa
jg
xchg
inc
outsl
fidivrs
ret
popa
push
push
aas
das
pushf
sbb
out
fwait
aaa
push
xor
add
xchg
or
sbb
cmp
js
addr16
add
jecxz
dec
nop
mov
fists
out
mov
aas
test
jmp
adc
mov
repnz
ja
jns
pusha
aas
push
cmp
lahf
std
dec
sub
cwtl
insl
cmpsl
add
test
mov
jno
xor
je
dec
scas
mov
aaa
outsl
inc
push
or
xchg
shll
xor
iret
sarl
ffree
jmp
add
aaa
outsl
imul
ficoms
add
jne
repz
and
cwtl
imul
fidivrs
adcl
repz
fwait
insl
movsb
out
or
clc
jns
sbb
mov
or
xchg
aaa
outsl
fidivrs
bound
pop
cmp
loop
repz
fwait
jge
fcomps
adc
dec
outsl
fidivrs
mov
mov
loopne
dec
sub
aaa
jmp
cmp
and
push
repz
js
aas
addr16
dec
sbb
rcll
mov
ror
clc
ret
std
inc
out
fwait
aaa
out
fndisi(8087
icebp
lods
mov
cwtl
xor
hlt
rcr
mov
mov
in
xchg
jecxz
ds
sub
stos
and
pop
movsl
stc
cmp
xor
sbb
jle
mull
pop
dec
and
test
xchg
iret
ds
push
xor
ja
dec
test
popf
mov
das
fidivrs
xchg
adc
jl
pop
sub
inc
ja
lahf
insb
fimuls
adc
sahf
repz
fwait
jns
int
pusha
pusha
lock
mov
outsl
fidivrs
pushf
iret
nop
push
leave
je
xor
xchg
jl
out
fwait
aaa
lea
sahf
xchg
das
sbbl
pop
cs
mov
inc
push
jecxz
stos
stc
dec
dec
out
test
aaa
outsl
rcrb
push
pop
xchg
lcall
xor
xchg
cmc
test
mov
out
jg
add
sbbl
lock
daa
adc
imul
push
hlt
jns
out
fsubrl
add
popa
xchg
jno
mov
outsl
fidivrs
xchg
adc
test
fwait
dec
clc
inc
daa
push
imul
pop
xchg
or
mov
or
mov
cmpsl
fidivrs
dec
test
inc
xchg
shl
int
aaa
outsl
jbe
clc
mov
hlt
push
jno
fidivrl
les
jmp
or
outsl
fidivrs
out
and
adc
lock
xchg
jns
out
mulb
add
dec
xchg
mov
and
mov
in
sbb
imul
jg
jecxz
stos
xchg
les
cmc
fistpl
sbb
sub
dec
ret
and
mov
fbstp
inc
jmp
rclb
stos
out
inc
fnsave
fwait
ja
push
push
cmpsb
inc
arpl
jmp
pop
cmp
repz
out
inc
daa
xorb
in
js
push
cld
stc
repz
test
pop
dec
and
testl
xchg
int
enter
lock
adc
insb
ljmp
outsl
fidivrs
jnp
dec
sbb
sub
out
fwait
cmpsl
adc
inc
cmc
mov
mov
cmp
adc
fistps
fwait
aaa
push
pop
cmp
ja
jne
hlt
cltd
cld
jns
out
mov
insl
dec
enter
aam
insb
mov
mov
mov
cmpsl
imul
test
stc
pop
rorl
ret
jns
lea
push
push
int
aaa
inc
or
xor
inc
sbb
out
and
out
mov
jne
add
std
mov
sub
or
xchg
add
xchg
xchg
movsb
mov
in
fwait
mov
jmp
je
std
add
iret
lahf
jg
and
aaa
sub
pop
jp
jg
cld
jns
loope
inc
cs
icebp
mov
iret
lahf
aas
fcmove
cli
adcb
imul
repz
std
cli
xor
sbb
insb
mov
mov
xchg
aas
jg
mov
in
cli
xlat
xchg
fwait
lahf
aaa
fistps
push
adc
clc
aam
and
ja
aas
addl
mov
out
fwait
xor
mov
mov
jmp
jns
jg
jl
and
mov
sbb
adc
int
aaa
out
cwtl
daa
gs
gs
sub
jns
sub
mov
lret
push
cli
shrb
sub
shl
jo
pop
jno
mov
repz
xchg
adc
jg
out
insl
jle
and
mov
mov
popf
fidivrs
mov
fmul
data16
xchg
int3
fdivl
outsb
cmpsb
fwait
mov
outsl
insl
mov
sbb
repz
in
mov
and
sbbl
ds
mov
pop
iret
repnz
add
cld
xchg
shlb
out
mov
fsubp
testb
daa
jnp
pop
lahf
aas
jg
fwait
clc
fildll
and
push
stc
repz
ret
and
pop
add
cmp
cld
cld
jo
mov
maxps
push
loope
mov
add
scas
pop
fnstcw
lret
in
pop
push
jl
xchg
push
out
inc
in
dec
cmc
or
cld
stc
shrl
xchg
dec
fs
outsl
lock
out
lahf
aas
and
shrb
cld
stc
repz
fnstenv
iret
outsb
rorl
lahf
aas
jg
and
xor
ret
fdivr
cld
stc
repz
xchg
inc
push
insl
and
adc
xrelease
or
mov
outsb
fidivrs
mov
adc
in
rolb
popf
inc
mov
mov
and
jg
aaa
data16
jmp
or
push
shrb
push
insl
stc
cltd
lods
dec
mov
inc
out
fwait
aaa
jbe
inc
clc
ljmp
inc
rcr
jns
push
in
cli
xchg
cmc
dec
mov
mov
fwait
aaa
outsl
xor
das
repz
stc
sti
enter
loopne
cmp
test
enter
jg
or
mov
push
pop
xorb
repz
push
out
sbb
mov
aas
jg
cld
cmpsb
cmc
data16
aaa
or
lret
sub
mov
iret
lahf
mov
lret
into
out
xor
cld
stc
in
dec
nop
jmp
lods
mov
adcl
cli
enter
push
cmp
sti
dec
adc
or
pop
sub
addb
lahf
aas
jg
inc
cli
jg
adc
and
inc
cld
stc
repz
jecxz
inc
call
xor
jbe
aas
jg
scas
inc
scas
outsb
insl
mov
loopne
enter
jo
in
iret
push
aas
sbb
adc
adc
aas
adc
mov
sub
jns
lret
fdiv
out
mov
enter
into
repnz
jne
adc
stc
cmp
shr
lret
aad
jle
push
dec
xor
or
imul
pop
jmp
cld
cmp
aas
jg
out
loopne
mov
int
mov
out
xchg
das
or
addr16
add
bnd
jg
mov
pop
add
jmp
jge
insl
cmpsl
fidivrs
out
and
dec
aam
jge
pop
xchg
mov
test
mov
gs
jmp
adc
jg
test
sahf
push
aaa
aas
jg
cld
loope
iret
xlat
mov
adc
dec
ficoml
xchg
pop
loop
out
lahf
mov
push
mov
inc
testl
jp
lods
out
jecxz
jmp
outsb
sbb
outsl
aam
bound
xchg
mov
dec
jns
out
bswap
out
jno
mov
outsl
and
outsl
fidivrs
int
stos
test
pop
and
ljmp
loope
or
repz
lahf
aas
les
cmpsb
jo
mov
in
lods
mov
lea
les
iret
lahf
push
fnstsw
adc
inc
jo
cld
stc
imul
mov
insl
mov
stc
xlat
inc
xchg
out
push
aas
or
in
sahf
aaa
push
push
pop
lahf
aas
jg
adc
hlt
scas
es
mov
in
repz
ds
ficomps
push
or
cld
fidivrs
out
std
adc
fsub
push
lock
lahf
ret
dec
sub
out
orb
stc
orb
cmp
ret
push
xchg
or
sub
aas
sub
js
mov
cld
stc
repz
cmp
adc
test
lahf
aas
jg
aad
mov
sbb
adc
cld
stc
repz
pop
ja
lret
in
outsb
aam
jp
add
and
out
cmp
inc
jecxz
std
cwtl
jecxz
aaa
outsl
or
add
jae
and
jno
int
inc
js
sbb
add
rcll
loope
repnz
cli
sbb
lods
pop
pop
or
and
repz
mov
xor
dec
loopne
lahf
aas
jg
and
sub
test
push
leave
jb
sub
leave
outsl
sbb
addr16
lahf
jg
xchg
fs
aas
js
mov
fiadds
stc
repz
fsubrl
cmpsl
outsb
in
mov
mov
in
push
lds
jnp
lea
cld
mov
repz
jg
inc
out
nop
xor
bound
mov
outsb
sahf
adcb
fdivr
mov
jae
in
lods
xor
sbb
outsl
ficoms
data16
popf
stos
idiv
icebp
xchg
aaa
pop
repz
fwait
add
add
ss
insl
mov
pushf
push
ljmp
iret
stc
repz
pop
jg
addr16
xor
cld
add
inc
loope
daa
pop
xor
jl
fwait
aaa
outsl
fsubp
out
es
dec
inc
scas
mov
xchg
icebp
sbb
repz
xchg
rorb
iret
lret
jmp
cmp
mov
cld
fiaddl
or
lret
ds
push
stc
repz
ja
data16
ja
cmp
ds
jg
cld
pop
add
enter
cmpsl
loop
jnp
jmp
push
insb
bound
push
add
sbb
cltd
mov
cld
cld
dec
adc
inc
test
out
jmp
fwait
ja
inc
xchg
int3
fidivrl
out
aam
mov
bound
aaa
outsl
fidivrs
dec
pop
adc
popa
shl
iret
fwait
dec
jmp
or
jo
jmp
mov
js
pop
mov
dec
lahf
subl
add
jb
jl
test
jp
ror
fwait
aaa
popf
scas
mov
xor
out
hlt
rol
xor
xchg
in
popf
xchg
leave
mov
jns
lret
sub
repnz
jo
iret
fwait
aaa
dec
lea
mov
adc
cld
jmp
xchg
lahf
cmc
in
insb
nop
mov
xor
pop
test
push
xchg
push
outsl
push
cld
stc
notl
outsb
mov
outsl
dec
sub
pushf
adc
add
add
fmull
pop
cli
push
cltd
scas
fnstcw
enter
xchg
call
dec
cmp
cld
stos
dec
cltd
mov
push
xor
in
inc
cld
arpl
cmpsl
lahf
test
shl
iret
lahf
aas
jg
lods
pop
dec
cmp
push
clc
pop
or
pop
sub
repz
fs
lods
xchg
lds
iret
jg
cld
stc
adc
lcall
mov
mov
pushf
mov
iret
lahf
aas
out
xchg
sahf
dec
cmp
cmp
xlat
mov
repz
mov
imul
add
ds
lret
stos
mov
pop
pushf
sub
mov
lret
dec
jl
scas
test
aaa
adc
lea
jns
out
lcall
pop
punpckldq
addr16
aaa
outsl
fidivrs
cmp
pop
icebp
xor
push
aas
dec
pop
xchg
xchg
fwait
cmp
pusha
add
fidivrs
mov
and
sub
sahf
imul
jge
data16
adc
mov
das
mov
mov
popf
jmp
aaa
outsl
ficomps
and
xor
test
repz
out
lahf
jno
inc
sub
ja
fmul
fninit
inc
outsb
fidivrs
addr16
push
adc
push
jnp
fwait
aaa
out
mov
mov
loope
notl
cmpl
int
sbbl
je
scas
icebp
seto
movsl
add
out
fstl
mov
lock
inc
fwait
aaa
outsl
fsubrp
imul
je
add
jae
jae
push
jns
out
cmpsb
jbe
clc
jmp
add
hlt
cltd
cld
aaa
outsl
fidivrs
and
mov
imul
fwait
imul
sub
xor
jns
pushf
insb
cmpsl
les
cmp
insl
int3
pop
cs
fwait
aaa
outsl
push
add
xor
sub
movsl
push
mov
das
xor
mov
in
fwait
aaa
outsl
fmulp
or
and
push
xor
int
jne
mov
scas
mov
aaa
outsl
fidivrs
pop
iret
xor
mov
stos
repz
fwait
sbb
xchg
int3
ret
pop
xchg
mov
ds
mov
inc
sub
pop
in
sbb
mov
aaa
adc
movsl
shlb
adc
sub
mov
cmp
adc
mov
fiadds
or
lahf
xor
pop
cmp
adc
jns
out
jnp
rcrl
sahf
push
mov
mov
movsb
sub
outsl
fidivrs
sarb
data16
repz
fwait
or
xor
xlat
mov
mov
mov
pusha
pushf
jbe
ss
xor
enter
sbb
ss
repnz
add
mov
out
out
sbb
and
idiv
mov
mov
mov
fldt
faddp
int
aaa
outsl
xor
cwtl
add
inc
mov
outsl
pop
push
in
push
jno
dec
insl
inc
jp
das
pop
out
mov
lahf
push
mov
shlb
and
add
adc
in
jns
out
xchg
cmp
testl
lods
xor
call
std
testl
cld
cmp
push
dec
in
push
jl
insb
xorb
lahf
shl
ret
cmp
stos
inc
inc
adc
stc
mov
loop
cmp
fisubrs
push
arpl
aas
inc
dec
loop
stos
popa
pop
or
cld
stc
repz
xor
or
clc
cmpsb
lods
aad
fdivs
scas
add
cmp
stos
nop
ds
adc
lcall
hlt
push
fcom
test
or
pop
lds
imul
sub
outsb
fs
ja
sub
xor
push
mov
inc
popf
jg
push
push
dec
insb
fdivrp
mov
daa
in
mov
ret
xor
pop
repnz
roll
outsb
imull
cmp
faddl
jge
out
out
call
out
lahf
jg
negb
gs
fimull
repnz
sahf
outsb
cltd
into
repnz
cltd
push
or
call
testb
fcoml
mov
adc
rcrl
lods
data16
push
aaa
cmp
xchg
lahf
aas
or
loope
ja
dec
push
insb
fildll
mov
aam
rcrl
xchg
insb
mov
jle
cld
mov
sbb
inc
dec
clc
icebp
in
inc
sub
movsl
cvtpi2ps
rclb
jns
out
ja
mov
xchg
repz
push
add
fidivrs
lods
mov
rol
daa
lock
int
jbe
jmp
mov
repz
pop
loopne
xchg
mov
mov
dec
push
and
ds
cmp
jno
jae
std
xchg
or
xorl
push
add
mov
mov
sbb
fwait
in
cld
stc
repz
mov
pop
push
add
inc
lods
or
lahf
aas
jg
jno
xchg
stos
adcb
or
out
cmp
iret
push
inc
and
pop
sahf
xor
lahf
aas
pop
stc
add
xchg
mov
jg
and
repz
push
inc
inc
add
push
stos
jnp
aam
jg
cld
mov
or
subb
fldcw
sbbb
mov
and
cwtl
mov
xchg
int
aaa
mov
sahf
rcrl
cmp
aaa
outsl
add
push
shlb
sub
loope
int
imul
daa
stc
repz
push
int3
jg
daa
jge
dec
cmp
and
cld
imul
dec
cmp
adc
mov
mov
or
popa
adc
enter
fsubl
in
pop
mov
ds
cmp
xchg
sti
push
repz
jne
rorb
sarb
ds
cmc
in
mov
decl
in
iret
lahf
aas
decl
mov
dec
popa
mov
xlat
xchg
cld
stc
repz
mov
jecxz
lea
push
inc
fistpl
pop
stos
pop
sub
adc
push
bound
xlat
jmp
mov
xchg
xchg
imul
sahf
aas
enter
mov
lahf
aas
jg
pop
sub
inc
push
rcr
pop
push
repnz
cld
stc
repz
imul
daa
rcll
or
lahf
aas
jg
add
nop
push
fs
insl
or
repz
imul
mov
pop
lret
mov
xchg
jg
cld
add
or
push
or
jae
xchg
sub
push
in
lahf
loope
push
pop
or
sbb
inc
jo
jle
jo
out
jl
ljmp
cmp
xchg
jg
add
dec
fimuls
xchg
popa
sub
push
pop
ds
enter
mov
cmc
outsl
sbb
iret
pop
das
pop
add
xor
jle
je
std
or
or
aad
outsl
mov
stc
repz
aaa
scas
sub
sbb
jne
jae
jmp
sub
mov
inc
inc
test
insl
inc
inc
ss
es
lahf
aas
jg
cmpsl
jmp
xorb
push
mov
stc
repz
daa
and
daa
scas
pop
mov
or
mov
aas
jg
cld
cmp
and
push
pop
xor
mov
out
out
lahf
in
pop
lods
jno
faddl
stos
je
imul
lahf
popa
mov
mov
ljmp
sub
insl
add
jg
fiadds
or
call
js
out
fwait
sbb
fsubl
lret
xchg
cmp
lods
scas
outsl
fidivrs
pop
hlt
mul
xchg
or
daa
out
fwait
aaa
mov
jo
mov
imul
fdivrl
outsb
push
shlb
or
mov
outsl
push
call
cmp
lahf
inc
in
std
aad
sub
fcmovu
mov
cmp
inc
pop
enter
mov
pop
fadds
lock
sbb
out
cmp
in
push
jae
sub
push
jne
outsl
fidivrs
cltd
xchg
sub
mov
pushf
fsts
les
out
fwait
aaa
cmp
cmp
or
sbb
jns
loop
mov
fld
inc
sti
mov
data16
jnp
fwait
aaa
outsl
and
jo
xor
fadds
mov
out
mov
sub
jb
rcrb
xor
cmp
xor
push
sub
clc
jns
out
stc
xchg
xor
fidivrl
imul
pop
rorb
sbb
jbe
ja
out
fwait
repnz
lret
lahf
aad
outsl
fidivrs
jmp
inc
jns
popf
jbe
stos
ret
aaa
roll
mov
pop
das
jle
jo
orb
pop
ret
cmp
pop
adc
cmpsl
jmp
and
jg
loope
sti
adc
push
pop
cmpsb
int
ja
int3
decl
js
lret
jns
out
mov
dec
xchg
xchg
xor
fsubl
aaa
outsl
fisubs
mov
jg
push
sbb
inc
stos
lret
jns
out
sarl
je
mov
and
fiadds
xor
adc
repnz
fwait
dec
cli
imul
fwait
aaa
out
mull
fcoml
pop
out
cltd
dec
fs
cmpsb
clc
enter
mov
cmp
push
ss
popf
in
aam
cmpsl
lock
cltd
stc
repz
and
and
gs
and
cld
cld
jl
mov
mov
fiadds
mov
gs
clc
add
xor
dec
repz
fwait
push
dec
fidivrl
xor
aaa
pop
push
test
mov
js
adc
je
push
int
aaa
outsl
das
mov
shl
test
out
dec
adc
jb
out
divl
mov
adc
cmpsb
mov
cmp
fnstenv
inc
fisubrs
fldenv
je
xor
into
cmpsb
int
ljmp
lock
mov
mov
insb
mov
sarb
out
fwait
aaa
and
cmp
popa
orb
cmpsb
jne
sbb
repz
push
mov
pusha
xchg
pop
fwait
aaa
outsl
fisubrs
sbb
aaa
stc
data16
mov
out
jne
sub
scas
fistl
sub
mov
push
xlat
test
enter
cld
mov
jo
ljmp
inc
dec
shll
bound
and
jns
out
add
inc
jb
fisttpll
stos
sbb
mov
inc
mov
mov
iret
pop
jg
jbe
mov
inc
hlt
mov
sbb
or
ss
pop
fnstcw
mov
sahf
push
arpl
mov
in
sahf
mov
adc
fistps
and
ret
out
cmc
xchg
out
xor
leave
xchg
loope
mov
sbb
and
cs
int
aaa
outsl
loopne
xacquire
mov
add
and
jne
sub
outsb
mov
insb
fisubrs
and
push
mov
mov
pop
das
mov
cmp
int3
cmp
bound
scas
into
pop
mov
inc
popf
fwait
aaa
sarb
cmpsl
push
pop
push
loope
mov
inc
push
or
iret
lahf
aas
decl
repz
dec
sub
and
mov
stos
xor
stc
repz
add
pop
into
les
push
or
dec
sbb
aas
jg
sbb
and
int
sarb
xor
std
mov
roll
adc
fwait
aaa
outsl
faddp
jge
push
es
imul
cwtl
jns
out
mov
test
xor
popf
stc
inc
outsb
fidivrs
and
sti
or
inc
outsb
mov
adc
les
cmp
aad
inc
add
outsl
ficomps
mov
mov
loop
negl
pop
and
test
xchg
dec
push
lods
add
and
cmpsl
add
sbb
and
push
repz
or
cs
bound
stc
mov
push
cmp
ret
xor
aad
or
add
lea
aad
outsl
inc
fiadds
inc
cmp
dec
mov
dec
imul
xchg
jle
mov
scas
push
cmp
cmp
cmp
and
push
pop
push
mov
push
jns
out
push
sbb
jns
adc
popf
lahf
aas
cld
movsb
outsl
mov
and
and
dec
xchg
fcomps
out
inc
or
push
out
stos
cmp
popf
clc
lret
sbb
adc
out
fwait
aaa
cmpsl
ret
cmc
cwtl
popf
mov
adc
sub
popf
mov
addr16
movsl
rcr
out
fs
cmp
sub
aas
pop
lods
mov
repz
mov
data16
aaa
fxch
push
cmp
or
inc
xchg
sbb
cmp
addb
mov
mov
fcoml
fcomp
sbb
fcmovu
out
dec
inc
lret
push
aaa
clc
pop
daa
out
sbb
jmp
mov
xor
out
aas
push
sqrtps
test
cld
stc
repz
arpl
test
pop
scas
push
adc
sbb
jbe
lahf
aas
jg
or
sub
repnz
repz
arpl
mov
bound
insl
jae
inc
push
jge
sarb
xchg
out
xchg
pop
test
jl,pt
stos
lods
lahf
aas
jg
mov
cmpsl
sarb
sti
push
stos
cmp
movsb
add
pop
add
nop
jmp
mov
mov
push
sub
sarl
stos
hlt
nop
sbb
mov
out
dec
lea
stc
pop
nop
into
mov
inc
mov
jge
sub
jl
test
fisubrl
jnp
unpcklps
stc
repz
daa
es
add
push
arpl
jg
cld
lock
call
push
dec
mov
pop
xor
dec
and
mov
fiaddl
pop
push
into
mov
popa
fwait
stos
cmp
jns
jne
xchg
mov
push
jno
jo
mov
rcrb
jnp
pop
mov
inc
jle
js
inc
cld
stc
repz
sbb
and
pop
and
aas
jg
arpl
loope
push
dec
mov
fyl2xp1
repz
ret
arpl
mov
adc
aam
push
shrb
jecxz
mov
mov
add
jg
pop
jne
int
aaa
outsl
nop
dec
insb
push
inc
xor
rep
ds
jns
icebp
enter
les
shlb
outsl
fidivrs
and
in
pop
jns
cs
dec
movl
outsl
fidivrs
dec
aad
mov
jbe
lds
imul
jg
jb
sub
pop
movl
cld
stc
repz
mov
rcr
incl
push
and
jg
imul
ja
sbb
adc
mov
lods
mov
repnz
push
popa
cmpsb
cmp
adc
aas
fs
dec
gs
cld
mov
jmp
xchg
and
fisttpl
jg
sahf
and
jg
push
pop
sub
pushf
nop
dec
lcall
stos
das
fwait
loop
inc
daa
push
cld
stc
ret
inc
inc
dec
and
mov
add
mov
repnz
and
or
jnp
int
ja
nop
jmp
jae
out
jns
out
mov
jmp
incb
sbbb
mov
jge
pusha
aas
sub
jns
out
dec
dec
dec
pop
mov
xorb
sarb
lock
std
fbstp
outsl
fidivrs
sbb
xchg
lea
out
dec
fwait
ljmp
adc
xor
sbb
enter
popa
lahf
in
or
sbb
repz
mov
mov
sbb
aas
xchg
insl
dec
mov
cld
stc
repz
adc
add
pop
lahf
aas
fmull
repz
jp
adc
inc
in
je
adc
cwtl
aad
jns
out
daa
inc
out
lods
jg
jg
ljmp
fidivrs
in
dec
mov
jg
cld
stc
std
mov
fs
sti
dec
daa
xlat
sahf
push
push
add
ja
iret
lahf
aas
mov
out
mov
lods
mov
mov
and
or
push
add
out
lahf
mov
repnz
cmp
inc
mov
in
icebp
xchg
or
cmc
loop
push
and
test
and
arpl
in
jmp
scas
and
insb
ficoms
mov
lahf
aas
dec
pop
pop
cld
stc
repz
xor
sub
cltd
wrmsr
cmpsb
push
scas
lahf
jl
add
cmovo
fisttps
repnz
cmpsb
nop
loop
daa
sbb
add
enter
cltd
aad
rorl
sti
xor
lahf
mov
mov
adc
mov
and
add
push
add
jmp
outsl
fidivrs
add
cs
ret
mov
int
xchg
adc
inc
xor
jg
cld
stc
sbb
push
inc
cmp
dec
jle
out
sub
and
mov
out
mov
mov
aaa
dec
cs
mov
mov
mov
jp
rcll
sub
rolb
push
pop
into
lock
jo
fidivrs
pop
mov
inc
xlat
mov
andb
outsl
dec
je
mov
inc
in
int
pop
inc
cmp
repnz
push
sbb
iret
aas
js
sbb
iret
mov
popf
enter
stc
repz
sub
inc
test
repz
sbb
xchg
lahf
sub
out
iret
lahf
aas
jg
xor
pop
addr16
in
mov
dec
xor
inc
sub
aas
jg
rorl
push
jmp
pop
inc
addr16
inc
out
xchg
and
lret
movsb
sub
mov
xor
aaa
outsl
ficoms
out
xor
mov
xchg
fwait
add
mov
fidivrs
lcall
push
or
aaa
outsl
cmpsb
xchg
pop
push
xor
rol
scas
cmp
or
sbb
xor
pop
inc
cmp
adc
jg
dec
add
mov
mov
out
mov
xchg
lods
or
test
mov
mov
cwtl
add
add
insb
je
push
xorl
imul
push
cmp
cli
in
cmpsb
test
add
out
int
std
lret
xchg
fwait
sub
repz
mov
jecxz
lds
xor
aaa
outsl
fidivrs
xchg
cli
ljmp
mov
cltd
ljmp
test
out
aas
jg
out
jp
mov
leave
div
orl
stc
repz
shr
jecxz
lods
je
insl
cmpsb
mov
popf
cld
cld
push
das
sub
dec
jnp
xor
aas
jg
add
rcl
fsubr
in
andl
daa
cmp
pop
add
shrl
out
out
fwait
aaa
aas
lock
mov
popf
fidivrs
fdivs
in
scas
pop
push
xor
fmulp
lret
aaa
outsl
sbb
aam
lock
push
mov
aas
insb
adc
int
faddl
lahf
mov
rorb
pop
sbb
mov
lods
sub
repz
sbb
lahf
or
enter
dec
jg
imul
sbb
mov
cmp
andl
push
out
ficoms
push
addr16
lods
cmp
fisubl
mov
xor
and
lcall
inc
loop
push
outsl
cmp
iret
pop
ss
fldl
repnz
pop
or
mov
sbb
mov
movb
sub
and
mov
jg
pop
mov
mov
xor
xchg
mov
pop
mov
cmp
daa
and
pushl
mov
ja
mov
mov
xor
and
ss
daa
outsl
test
push
out
mov
or
pop
subl
repz
xlat
mov
inc
subl
out
outsl
sub
sub
push
adc
arpl
add
fiadds
inc
std
notl
jp
adc
leave
fnstsw
xor
and
pop
iret
pop
ss
or
sarl
lcall
sbb
mov
add
cmp
mov
sub
mov
js
and
fildl
lahf
push
adc
xchg
popa
mov
adc
dec
push
shll
mov
pop
add
pushf
mov
and
sub
and
mov
inc
ffreep
mov
cmpsl
daa
call
or
stc
ret
push
push
testb
mov
cld
jl
dec
jl
popa
and
jg
push
dec
aad
rcrb
cmp
mov
movb
mov
sbb
out
imul
jg
inc
dec
adc
lret
inc
jne
int
xchg
mov
xor
inc
ss
push
movl
insl
neg
sub
push
daa
nop
daa
popa
add
or
and
mov
icebp
scas
xor
inc
push
inc
mov
jo
in
iret
adc
cmpsl
dec
mov
shlb
movb
xchg
cmp
subl
add
insl
inc
in
rcrl
jne
xchg
push
fisubl
mov
lahf
daa
mov
mov
push
mov
and
adc
inc
pop
adc
and
push
add
into
imul
mov
cld
out
fnstenv
fcmovb
push
int3
jnp
insl
adc
daa
scas
fisubl
mov
fisttps
cmp
pop
repz
push
inc
cmpsl
add
mul
push
stc
mov
or
aas
push
inc
xchg
and
jle
adc
or
xchg
test
xor
repz
pop
sub
inc
cmpsl
lret
fucomp
addr16
mov
je
sub
mov
xchg
mov
in
icebp
push
aaa
ret
rcll
imul
hlt
repnz
mov
inc
xor
rep
pop
xor
mov
movsl
rolb
cld
stc
pop
inc
imul
xor
dec
and
aas
xchg
ror
std
lods
sahf
or
sub
repz
ds
cs
clc
or
lahf
jg
cltd
jecxz
or
cmp
sbb
out
icebp
loopne
and
inc
dec
push
mov
inc
stc
out
cld
cld
stc
mov
arpl
mov
cs
cmp
xor
inc
fidivrs
jle
loopne
adc
out
mull
out
pop
sub
pop
jns
cmp
out
jg
retw
outsl
fidivrs
inc
or
push
stc
repz
fwait
int3
cmp
fsts
fidivrs
xchg
neg
mov
fcmovbe
pushf
fistpll
mov
iret
mov
xchg
pop
sub
mov
repz
dec
subl
aas
jg
push
adc
mov
stc
repz
dec
lds
mov
stos
loopne
dec
cmp
jg
jne
xor
int3
into
shlb
repz
sbb
inc
mov
jg
jno
jg
cld
mov
sub
dec
inc
cmc
aas
subl
repz
lahf
dec
insl
and
or
call
cs
jg
cld
stc
mov
shr
imul
frstor
iret
lahf
aas
push
jecxz
fsubrs
pop
xor
cld
stc
repz
inc
loope
lods
fdivr
imul
xchg
imul
add
and
jb
insl
xorl
pop
push
mov
adc
jmp
mov
xchg
and
inc
es
sub
and
mov
ja
jl
pop
lods
repnz
push
out
fwait
aaa
mov
aam
iret
xchg
fidivrs
mov
mov
jmp
xchg
mov
bswap
fwait
aaa
outsl
iret
in
test
xchg
mov
mov
jge
inc
std
out
mov
fimuls
mov
sub
inc
pop
lods
stc
repz
and
mov
addr16
xor
jg
cld
fistps
jl
cmovb
adc
pop
xor
push
pushf
inc
das
outsl
xor
jne
add
daa
shrl
repnz
add
cmp
xchg
idivb
adc
jmp
jne
stc
push
mov
jg
mov
sti
leave
jo
pop
and
pop
sbb
iret
lahf
aas
stc
inc
jp
and
into
xlat
stos
lret
mov
and
les
pop
inc
push
jns
out
fwait
les
mov
jb
jle
ds
orb
aam
int3
jg
cld
stc
rep
addr16
outsl
es
dec
xchg
iret
lahf
aas
jg
int
mov
addb
movsb
stos
push
cld
stc
repz
xor
ficompl
movsl
fnstsw
ret
leave
mov
fisubl
inc
xchg
es
outsl
lahf
inc
jnp
jo
icebp
call
inc
fiadds
mov
in
int
aaa
outsl
push
mov
push
lds
or
repz
or
in
dec
or
nop
adc
push
mov
std
iret
stos
subb
shlb
iret
xlat
cmp
leave
or
jno
int
aaa
outsb
push
xchg
scas
mov
jg
jne
lock
lods
cli
cld
idiv
fwait
mov
out
lahf
aas
arpl
jnp
xor
inc
ficoms
inc
push
sbb
push
or
fwait
aaa
outsl
push
add
sbb
ror
mov
sbb
jns
out
push
lahf
mov
orb
leave
out
dec
inc
lods
xlat
xchg
pop
insb
push
lret
mov
mov
je
aaa
jns
out
scas
and
insl
pushf
ljmp
aaa
outsl
fidivrs
xchg
push
push
fistl
add
mov
out
fwait
inc
push
icebp
push
jne
inc
iret
xchg
cmp
mov
xor
jns
mov
jg
fwait
loop
repnz
fwait
aaa
lds
hlt
adc
mov
push
jbe
fwait
loope
outsb
iret
push
push
fwait
aaa
outsl
xchg
push
arpl
mov
lea
cmpsl
repnz
xchg
pop
mov
inc
cmp
test
int
stos
xchg
sub
mov
repz
mov
dec
std
stos
mov
mov
jg
cld
or
cmpsl
mov
xor
mov
and
int
aaa
out
xchg
xor
xchg
mov
das
mov
addr16
pop
out
rolb
xchg
adcb
fisubrs
rcrl
adcb
pslld
and
outsl
fidivs
xchg
aaa
push
push
jb
add
adc
push
test
or
addl
mov
push
int
mov
inc
add
sub
sub
outsl
ja
mov
push
loopne
stos
dec
add
leave
jb
andb
sub
adc
dec
add
add
mov
pop
adcb
add
mov
in
mov
adc
inc
add
inc
js
ljmp
push
or
leave
int3
xchg
mov
mov
jb
std
cmc
add
lock
adc
lcall
mov
push
rolb
shr
add
pop
and
mov
inc
cmp
sub
push
add
sbb
push
mov
jp
enter
push
pusha
inc
insb
pop
jmp
icebp
or
adc
push
cmp
leave
pusha
adc
jbe
dec
ret
ds
jno
mov
inc
das
fisubrs
adc
cmpb
and
push
rorl
adc
orb
or
pop
inc
mov
add
pop
adc
pop
pop
insb
push
subb
jle
or
adc
xor
jno
sbb
add
inc
cmc
popa
shll
mov
add
and
pop
jnp
mov
data16
push
sub
lret
test
cli
sbb
push
jmp
push
adc
adc
sbb
sub
xorb
repz
mov
test
add
mov
dec
add
test
inc
in
cmp
adc
call
arpl
add
mov
icebp
add
aam
sub
cmp
cmp
and
fs
lds
imul
inc
mov
adc
and
in
mov
mov
stos
adc
cwtl
dec
mov
out
xchg
inc
adc
rolb
std
out
sarb
sbb
push
aas
mov
insl
or
sub
mov
mov
sub
xchg
mov
push
xchg
cmp
cmp
inc
mov
or
nop
cmp
add
shr
leave
mov
out
and
repnz
xor
int
arpl
push
rclb
or
sbb
lock
scas
test
std
cs
push
stos
roll
push
out
sbb
mov
inc
aas
sahf
call
xchg
test
jae
xchg
test
ret
aas
jns
int
add
xchg
or
stc
sbb
divb
in
xchg
popf
cmc
jb
or
rorl
lahf
test
and
call
xor
mov
sub
andl
inc
jb
movsb
xchg
push
out
sub
mov
pop
xor
sbb
add
add
mov
and
scas
ds
xchg
dec
stos
mov
cmp
jmp
or
adc
decb
sub
mov
call
neg
bound
stc
adc
mov
mov
add
inc
insb
icebp
inc
push
inc
mov
or
mov
lea
sbb
ret
mov
fcom
xchg
outsb
mov
rcrb
or
leave
scas
stos
fcomps
or
cmp
cmp
xor
pop
cmpsb
fucom
add
adc
fiaddl
inc
pop
or
or
sbb
mov
fistpl
cmp
pop
pushf
pop
add
nop
jmp
push
leave
cmc
add
xor
rcrl
add
jmp
inc
int3
sti
push
jp
icebp
icebp
out
push
mov
idivl
sbb
ror
sbb
mov
rcl
cmp
lods
sbb
sub
pop
jnp
mov
jle
scas
or
sub
stos
or
jb
fcmovu
and
insl
das
add
push
call
rolb
adcb
pusha
mov
and
adc
ret
mov
jmp
cli
dec
push
adc
lock
mov
mov
add
mov
mov
pop
xor
ljmp
enter
add
jne
or
dec
imulb
lret
push
cmp
orl
and
inc
or
pusha
lds
je
rol
sbb
push
and
jo
xor
inc
fstps
into
adc
mov
enter
sbb
dec
rcr
cmp
imul
fwait
aaa
movb
test
push
popf
add
pop
mov
push
adc
push
cli
test
or
testl
xchg
adc
repnz
test
and
mov
lret
scas
adc
jb
mov
push
lret
out
adc
insl
sahf
call
outsb
aad
bound
adc
hlt
mov
test
adc
or
mov
fistl
lahf
dec
add
sahf
ret
push
fwait
add
rorl
aam
add
mov
sub
xor
mov
insb
jbe
mov
sarb
inc
push
js
icebp
pop
loope
add
or
dec
adc
fdivrl
add
adc
push
or
mov
scas
hlt
stos
jp
pop
gs
call
out
mov
fsqrt
sbb
gs
sub
and
inc
fisubs
fwait
pop
clc
xor
sub
cltd
xchg
and
push
push
and
mov
pop
mov
mov
pop
jmp
bound
ret
or
dec
inc
adc
fs
inc
add
push
inc
mov
rcrb
mov
xor
mov
mov
mov
insb
add
sub
iret
mov
and
ret
push
xchg
and
pop
adc
inc
push
pop
fwait
sbb
aas
stc
lret
outsl
insb
mov
addb
or
push
sbbb
add
dec
addb
pop
movsl
movsl
ja
pushf
push
repz
sub
mov
mov
sub
cld
or
or
mov
sbb
xchg
add
mov
pop
add
lret
cltd
adcb
pop
xchg
cwtl
add
pop
mov
xchg
stos
sbb
add
mov
cli
fadds
fwait
insl
es
dec
adcb
add
es
nop
lret
iret
iret
sub
xchg
jl
inc
push
cmp
lret
test
call
into
rcll
lds
stos
push
push
cmp
mulb
add
or
add
loop
or
push
push
insb
add
roll
inc
pop
xchg
add
dec
sbb
jecxz
cmpsl
sub
mov
sbb
push
aam
or
shrb
push
iret
jmp
adc
clc
adc
push
test
or
into
xor
leave
sub
jo
push
stc
enter
sbb
inc
inc
jae
pusha
andb
out
leave
push
xor
sti
push
fmul
cmp
lds
mov
jmp
sbb
jne
push
shlb
jp
adc
and
jmp
mov
lds
push
add
aas
push
push
jl
decl
push
addr16
xchg
inc
fdivs
in
mov
or
and
sbb
jbe
rorb
inc
or
push
xor
test
stc
sbb
sub
and
push
sbb
loop
xchg
sbb
cmp
cmp
jecxz
inc
xor
movsb
test
sbb
inc
mov
cmp
and
test
stos
and
mov
lahf
fimull
xor
dec
pop
or
mov
sub
xor
ficompl
mov
ja
stos
divb
dec
clc
mov
out
cmp
add
sbb
into
jae
xor
lods
cmp
je
inc
rcll
lret
xor
pushf
fbld
adc
andb
sub
cmpsl
mov
jo
repz
xchg
sbb
in
ret
mov
xchg
les
push
call
mov
mov
repz
add
popa
sarb
dec
sbb
jnp
jb
and
mov
rclb
add
push
xchg
mov
aam
mov
int
imul
inc
push
jmp
inc
shlb
adc
adcb
ljmp
lods
pop
push
xor
ret
adc
mov
test
sub
dec
or
daa
sbb
enter
jns
push
fldl
stos
adc
cld
push
repnz
mov
jb
or
rolb
fnsave
stc
or
xor
adc
jo
sbb
mov
or
in
push
mov
or
xchg
mov
push
lea
jbe
fadd
xor
dec
xchg
adc
sbb
mov
sarl
ljmp
cmp
data16
xor
pop
mov
lock
push
aas
push
push
das
and
push
sbb
mov
cwtl
sbb
sar
xchg
stos
mov
out
je
int3
mov
stos
test
scas
stos
adc
lea
imul
bnd
adc
push
pop
stc
scas
scas
cmp
lock
lods
mov
loope
jg
and
lock
dec
popa
mov
das
or
sbb
add
or
mov
add
inc
mov
adc
add
cld
xchg
or
and
rcll
push
pusha
enter
sub
adcb
outsb
movsl
ja
outsl
mov
sbb
es
add
dec
and
andb
or
dec
push
flds
xor
lahf
lahf
pop
cmpsl
rcrb
mov
push
push
or
sbb
mov
das
sbbb
lds
aam
and
inc
add
sbb
xorb
push
push
into
insl
and
sbb
ret
cmpsb
push
and
mov
dec
and
in
cmp
lds
pop
lds
stos
bound
into
inc
icebp
jp
rolb
or
mov
inc
mov
mov
push
mov
adc
xor
mov
inc
dec
inc
in
test
or
cli
push
cmp
cmpsl
push
mov
ret
adc
clc
roll
movsb
sub
icebp
rcrl
and
daa
ror
mov
sbb
fsubs
cmp
cltd
lock
aam
and
push
xchg
cwtl
or
sbb
mov
jmp
push
push
orl
pop
mov
inc
xchg
fsubs
pop
sahf
or
popa
rorl
shrb
adc
push
pop
into
repnz
das
and
mov
xchg
cmp
hlt
mov
pop
dec
aam
add
add
imul
pop
push
roll
movsb
stos
push
js
lret
xor
and
mov
jecxz
ret
stos
orl
orl
in
adcb
push
dec
mov
mov
mov
bound
or
xchg
imul
xchg
adc
add
loope
add
add
pop
adc
rcrl
add
dec
mov
adc
adc
sahf
pusha
loope
fstpt
adc
xor
xor
add
arpl
loope
ss
dec
loopnew
js
or
aas
stc
inc
adcl
test
add
jno
dec
xchg
adc
and
test
jno
jmp
add
mov
xor
daa
mov
roll
mov
pop
pusha
movsl
pop
add
fisubl
mov
push
cmp
into
xchg
mov
adc
in
andl
xor
pop
pop
inc
lea
push
rclb
push
xor
pop
dec
or
stos
mov
hlt
or
and
adc
add
mov
jne
push
or
je
jae
push
mov
pop
add
andb
aam
roll
sbb
xchg
pop
push
dec
mov
add
aad
orb
mov
jne
mov
sbb
sbbl
into
mov
xchg
jecxz
mov
adc
adc
test
pusha
repnz
rclb
sub
and
loop
cmp
push
mov
popf
jae
xor
mov
mov
leave
mov
lcall
rorb
es
or
dec
or
lods
cli
pop
sub
sub
push
pushf
adc
jne
adc
or
lea
pop
add
jb
xchg
push
imul
pop
imul
stos
popf
and
add
pop
add
leave
dec
mov
cmp
push
mov
es
lds
push
lods
sbb
loopne
xor
orb
sbb
cld
push
insl
fldl
call
shl
mov
je
std
jmp
out
and
add
push
add
adc
in
push
rorb
sbb
andl
xchg
sbb
stos
and
int
adcl
or
inc
stc
adc
adc
or
cmp
jp
movsb
bound
sahf
rorb
mov
rorl
add
mov
adc
addb
inc
sub
mov
xchg
inc
inc
roll
pop
pushf
mov
add
ja
xor
or
test
rol
cmp
adc
lcall
add
sbb
push
mov
jns
sbb
popf
or
sbb
inc
sarb
mov
mov
and
lea
inc
call
xor
push
mov
aaa
lcall
rorl
adc
mov
inc
pop
xor
iret
pop
sarl
mov
rcl
dec
ljmp
sub
cli
not
mov
cltd
push
lock
stos
and
xchg
insb
jo
or
sbb
mov
xor
cmp
into
push
ljmp
adc
lock
and
sbb
stos
push
ljmp
ret
push
push
inc
adc
adc
or
inc
sub
pop
add
add
add
xor
je
rolb
stc
mov
outsl
bound
mov
dec
cld
test
test
sbb
push
leave
push
addb
mov
ds
decb
iret
sub
pop
enter
mov
inc
adc
cmp
pusha
dec
pop
sbb
cltd
or
pop
ret
ret
test
cmp
mov
inc
shlb
push
shlb
push
scas
fs
rclb
jnp
sub
mov
movl
and
bts
mov
add
xchg
push
xor
test
add
cs
in
cmp
call
pusha
stc
shll
in
xor
adc
rclb
sti
pop
mov
push
cwtl
rolb
pop
push
stos
inc
ror
dec
inc
add
jns
pop
mov
shl
xor
xchg
push
cmp
loope
sbb
rol
pop
inc
js
andb
shrb
jns
lcall
pop
scas
xchg
push
into
iret
and
lcall
mov
shll
test
jbe
add
in
mov
or
loop
adc
add
and
add
rcrb
jo
mov
movsb
inc
cwtl
fdivrs
mov
ret
rorl
dec
in
sbb
pusha
inc
sarb
je
sub
cwtl
add
add
gs
xor
leave
push
je
hlt
out
sarb
push
and
test
add
cvtpi2ps
andl
pop
pop
and
adc
mov
pusha
aas
adc
mov
in
push
mov
xchg
add
cmp
adc
mov
pusha
mov
sub
cmpsb
into
mov
push
xchg
into
xchg
shlb
push
add
inc
negb
nop
add
push
movsb
mov
sub
loop
add
cmp
into
in
xchg
add
popf
push
icebp
cli
popf
movsl
mov
push
or
push
js
sahf
jp
jl
pop
in
adc
inc
call
mov
fsubrl
mov
pop
adc
jnp
jnp
loope
jno
es
inc
xchg
inc
cmp
in
mov
mov
and
add
jnp
in
push
movsl
add
and
mov
add
loope
cmp
or
mov
adc
jmp
inc
dec
xchg
negb
xchg
jne
leave
adc
subl
icebp
dec
sub
ret
mov
push
xorb
rclb
xor
add
or
mov
add
ljmp
xchg
imulb
out
adcl
int3
mov
test
leave
unpcklps
push
xchg
sbb
jne
and
inc
push
loopne
std
mov
dec
jl
adc
push
pushf
stos
popf
jnp
fs
jne
cmc
or
sbb
js
pushl
sub
icebp
mov
push
cmpsb
push
je
popa
push
jb
mov
rolb
fimuls
inc
xchg
jp
dec
ljmp
sbb
pop
sub
mov
push
mov
mov
pushf
xor
push
push
push
xor
dec
xchg
je
push
loopne
push
sbb
js
ds
push
add
rolb
imul
andb
cmp
xor
sbb
test
adc
adc
loope
or
mov
ret
adc
or
push
adc
fsubl
shll
add
push
xchg
sbb
inc
pushf
add
and
push
add
arpl
jmp
rcl
fs
lea
pusha
cmp
jge
adc
inc
xchg
push
sub
mov
push
mov
mov
repnz
or
loope
or
or
and
sbb
pop
adc
dec
inc
jecxz
stos
push
xor
xchg
and
or
bound
add
pusha
push
pop
mov
mov
add
mov
lds
inc
sarb
and
and
xor
jae
xor
mov
push
call
mov
sub
jge
je
sysret
out
icebp
test
sbb
xor
mov
dec
cmpsb
add
data16
roll
or
jge
xor
sub
sahf
or
or
inc
stos
mov
dec
out
lret
pop
gs
and
xor
test
addr16
loopne
test
pop
mov
sbb
add
dec
or
or
or
jbe
inc
loopne
dec
pop
sbb
push
cmp
test
imul
sbb
or
shrl
repz
pop
push
jge
xchg
adc
mov
xor
stos
inc
push
push
inc
or
imul
out
test
repz
pop
cmp
inc
xor
mov
xchg
add
xchg
call
mov
pop
cmp
into
push
rol
add
sbbb
push
inc
in
imul
add
leave
and
and
add
push
sub
mov
jmp
adc
ret
mov
mov
lret
pop
daa
mov
loopne
jp
mov
in
cmp
insl
mov
rolb
popa
mov
sbb
inc
adc
xchg
mov
cwtl
adc
lds
push
rcr
push
or
aad
inc
pushf
inc
inc
je
mov
sbb
sbb
inc
mov
adc
lcall
xor
lods
cmp
shl
inc
adc
jmp
pop
sbb
push
add
faddl
mov
jne
push
repnz
sbb
loop
sarb
icebp
roll
into
push
mov
ret
mov
lods
test
or
idivb
rcrl
cli
lock
pop
adc
or
icebp
adc
mov
addr16
or
addb
add
cltd
loop
pop
xchg
cld
subb
inc
sbb
jge
inc
cmp
daa
repnz
je
and
lock
lds
mov
xchg
stos
testl
mov
addr16
scas
mov
sbb
fisttps
js
test
shlb
mov
aaa
inc
jnp
fsubp
sar
adc
wrmsr
push
test
adcb
ret
xor
mov
or
push
cwtl
lods
xchg
xchg
sbb
lds
sub
sahf
jnp
adc
icebp
push
push
pop
stc
sbb
and
dec
and
push
jno
push
sub
mov
push
and
dec
mov
sbb
bound
addl
bound
fscale
sbb
pop
test
lea
mov
rolb
pop
pop
leave
push
adc
adc
push
mov
add
sbb
mov
push
xor
add
ret
cmp
rorb
push
sub
pop
mov
mov
subl
test
add
add
mov
mov
adc
test
adc
sbb
mov
push
into
roll
adc
test
push
or
pop
inc
sub
add
ret
shlb
ja
or
imul
rolb
pusha
push
push
sbb
and
xchg
mov
add
orb
bound
push
imul
cmp
shlb
mov
test
push
aad
add
mov
adc
mov
repnz
cltd
clc
and
rol
push
add
and
jne
test
inc
rclb
loope
inc
pop
pop
sbb
add
lret
call
icebp
mov
sbb
mov
test
frstor
inc
push
sub
mov
add
js
jno
inc
icebp
adc
sbb
dec
int3
mov
add
lds
inc
jo
mov
add
stos
or
sbb
jb
pusha
repnz
cmpsl
lock
inc
and
xor
add
sbb
and
mov
movl
rorb
inc
mov
dec
mov
subl
clc
in
popf
test
inc
mov
loopne
cmp
sbb
pusha
push
sahf
int
cmp
jle
push
adc
pusha
add
rcl
pop
push
sbb
nop
out
leave
lret
adc
jp
adc
shr
push
bound
inc
js
in
mov
mov
xchg
xor
out
cmp
call
push
xchg
adc
cltd
mov
insl
mov
inc
push
data16
clc
pop
outsl
or
cli
or
cmp
outsb
cld
lcall
push
sub
dec
insb
push
push
mov
add
sbb
aas
int3
mov
jns
call
sub
orb
dec
test
fdivrl
es
std
or
dec
push
rcl
stc
mov
mov
jge
inc
adc
pop
push
lret
mov
xchg
lret
test
dec
dec
test
pusha
cwtl
cmpsl
xor
add
fs
xlat
jmp
dec
fstpt
adc
mov
clc
push
ss
add
cmp
adc
shl
mov
xor
xchg
imul
loop
mov
or
or
sub
xor
add
enter
lds
inc
aam
mov
ret
loopne
mov
pusha
clc
add
xchg
adc
and
enter
test
andl
out
shlb
daa
in
inc
pop
aam
sar
mov
lock
jecxz
sbb
sub
leave
xor
and
pop
cmp
xor
psraw
ret
add
sub
popf
iret
shlb
dec
les
push
out
xchg
rclb
insb
cli
adc
hlt
inc
cmp
sahf
add
sub
push
push
pop
dec
lds
rorb
jo
cltd
sbb
inc
mov
adc
xor
sbb
push
pop
add
pop
pop
mov
pusha
icebp
push
or
test
lds
add
pusha
sub
adc
or
dec
notb
aaa
push
aad
add
xchg
or
inc
xor
lret
inc
jb
cs
adc
mov
rcrb
or
add
inc
push
popa
sub
pop
and
sbb
xchg
xor
mov
mov
addb
mov
stos
cmp
and
add
sub
or
jo
cmp
adc
gs
push
lock
std
mov
sar
sbb
dec
das
mov
push
cwtl
insb
adc
pop
movsl
cmp
cltd
inc
jbe
ljmp
loop
shl
cld
lret
std
push
jmp
dec
ljmp
sbb
dec
or
mov
mov
dec
mov
fwait
or
cmp
gs
inc
stos
adc
add
adc
test
jle
push
push
and
pop
ljmp
mov
push
lock
pusha
sbb
pop
or
push
push
adc
xchg
mov
push
jb
jne
mov
lods
in
push
ret
or
dec
push
lock
out
icebp
xchg
scas
loop
cld
add
movsb
dec
sub
movsb
or
scas
mov
aad
aam
mov
js
or
pushf
mov
mov
les
pop
xor
les
push
fstl
imulb
jp
mov
loope
mov
test
and
addl
mov
mov
xchg
lock
ret
mov
roll
inc
sbbb
xchg
mov
rcrl
call
js
fxch
inc
or
adc
adc
xor
mov
ds
leave
push
sbb
mov
jb
ds
std
sbb
xchg
out
loopne
jae
out
negb
adc
in
inc
adc
push
movsb
cmp
pop
in
into
js
ds
push
ret
movaps
or
popf
add
add
or
add
mov
push
nop
jo
fcoms
lock
sbb
inc
jae
sbb
pop
xchg
imul
test
das
lock
loopne
ficompl
pop
inc
push
push
shrb
add
adc
mov
cmp
push
addr16
enter
lret
or
add
sti
ret
pusha
push
fstpl
xchg
int3
or
out
sbb
ficomps
mov
rorb
imul
test
mov
out
sahf
je
enter
rolb
mov
add
jmp
and
pushf
aam
sbb
rcrl
outsb
jmp
or
out
fs
push
inc
ljmp
add
sbb
shlb
or
mov
cltd
jo
repnz
testb
add
aam
sbb
sbb
cmp
bound
sub
repnz
mov
mov
xchg
lock
xchg
aam
es
sbb
xor
jb
lcall
adc
jae
fmuls
cmp
or
mov
push
loope
test
dec
into
push
or
xor
shrl
dec
jne
sub
adc
cld
add
push
push
mov
push
icebp
fdivs
push
or
pop
adc
loopne
lock
push
xchg
popa
addl
sti
jl
mov
xchg
lret
add
rclb
and
adc
dec
je
ljmp
loope
mov
xchg
int
inc
inc
dec
test
enter
ljmp
add
or
incb
mov
cli
xor
adc
rorl
bound
sub
mov
and
add
cmp
mov
or
aad
test
fs
adc
cmp
loopne
aad
in
cmp
push
or
pop
popa
cmp
jne
push
push
xor
add
jno
stos
xor
sahf
mov
adc
and
aaa
rorb
mov
xor
mov
push
scas
sub
push
outsb
xchg
and
push
jp
stos
or
les
test
or
adc
mov
inc
or
fsubrl
mov
cltd
roll
xchg
call
dec
test
mov
aam
or
or
adc
test
cmp
rcrl
mov
or
aam
pop
xor
add
mov
push
adc
push
mov
adc
pop
add
repz
push
mov
mov
roll
shl
inc
add
pop
dec
shll
push
enter
pop
stos
dec
ficomps
scas
adc
or
fiaddl
or
push
scas
and
and
push
mov
and
pop
sub
cmp
xchg
jl
adc
adc
push
mov
lds
sahf
pop
lds
jl
repnz
jne
or
cmp
and
pop
adc
add
mov
leave
mov
andb
xor
push
aam
cmpsl
push
add
leave
push
xchg
decb
mov
mov
scas
adc
mov
mov
cmp
add
pop
test
sbb
or
mov
fidivl
sarl
add
and
dec
andl
sub
inc
repnz
int3
xchg
mov
mov
ljmp
lsl
cmp
jno
sti
in
pop
cmp
add
sbb
shlb
push
inc
jmp
sahf
sti
mov
or
ss
incb
mov
mov
mov
or
push
adc
call
aad
cs
sub
xchg
mov
or
mov
pop
ljmp
or
aad
adc
jmp
pop
cwtl
js
add
xchg
imul
add
jno
and
andl
bound
pop
push
sub
adc
das
lcall
fsubrl
push
aam
scas
xchg
iret
mov
jne
lret
xchg
inc
xchg
sub
push
push
xor
shlb
pop
cltd
out
testb
inc
and
jmp
call
add
and
dec
loope
aad
mov
aad
jmp
pop
cld
push
add
sbb
loope
inc
add
sbb
ljmp
push
dec
adcb
push
inc
cli
faddl
mov
adc
ror
daa
xor
or
push
call
add
or
push
or
pop
add
inc
cs
cs
out
dec
int
in
mov
or
push
hlt
addb
add
sahf
xchg
adc
xchg
addl
sti
test
add
dec
shll
xor
aam
int
sub
add
mov
pop
lock
pop
lret
adc
popf
addr16
inc
xor
mov
repz
arpl
test
shlb
shrl
pop
scas
insl
nop
and
xor
mov
pop
mov
or
es
and
xchg
mov
adc
and
cmp
jne
stos
xchg
in
rorl
rcll
imul
pusha
out
inc
xchg
xor
jbe
loopne
add
aad
and
enter
test
push
fsubl
inc
in
add
dec
adc
jb
jl
addl
or
test
rclb
sbb
push
fldl
shlb
sbb
clc
or
cmpsl
push
cmp
sbb
adc
into
add
shll
add
roll
push
add
xor
sub
pop
adc
es
shlb
mov
bound
sbb
dec
sbb
and
adc
pop
out
inc
cwtl
sub
enter
and
loop
enter
rolb
sub
stos
je
fsubrs
inc
outsl
nop
pop
jae
add
jg
cmc
loopne
or
stc
adc
es
rorl
push
insb
pop
js
sbb
sbb
cmp
sub
cltd
lods
pop
test
test
push
cmp
inc
mov
push
cld
push
cmp
out
test
or
popf
xchg
xor
mov
dec
loope
call
mov
add
rorl
stc
nop
icebp
inc
mov
cli
add
cmp
outsl
addb
add
test
or
stos
adcl
dec
pop
mov
sbb
fstpt
aas
mov
inc
push
inc
test
outsb
adc
scas
pop
mov
lret
shrl
cmp
rorb
arpl
stos
int
cmp
ss
adc
es
adc
loop
cmp
add
xor
int3
lods
xchg
or
push
jo
loopne
inc
mov
push
push
lcall
icebp
or
cmp
inc
dec
clc
cmpsl
pop
inc
mov
mov
pushf
sub
stos
inc
and
pusha
push
fcomp
sbb
dec
push
fimull
mov
cmp
add
push
dec
pop
or
rolb
addr16
hlt
push
scas
pop
pushf
call
into
mov
cmpl
mov
jne
xchg
arpl
and
aas
ret
pop
rcl
inc
cwtl
or
xchg
or
xchg
xor
inc
adc
inc
pop
inc
leave
add
mov
es
inc
shll
lock
clc
xlat
stos
jo
stos
das
popa
lcall
outsb
sbb
rcl
scas
add
add
pop
jne
inc
in
sbb
fldl
sbb
ss
pop
adc
push
push
sbb
jl
out
lcall
jnp
insl
lahf
lret
inc
pop
sbb
sbb
hlt
cmp
xor
sub
xchg
addb
iret
pop
loopne
add
lret
inc
pop
call
test
push
mov
shlb
icebp
add
retw
scas
test
xchg
add
into
xor
push
push
rcl
mov
adc
adc
pop
mov
jo
push
push
push
and
adc
adc
mov
mov
js
mov
cmp
push
test
sub
das
xlat
xchg
add
nop
inc
add
stc
jp
ret
mov
push
test
inc
inc
mov
adc
repz
in
adc
dec
and
add
push
pop
push
outsl
add
rolb
mov
jns
inc
pop
data16
mov
sub
das
movsb
fcomps
fsubs
adc
push
ljmp
mov
rclb
insb
std
mov
mov
imul
mov
sbb
shlb
testb
and
sti
cltd
popa
adc
jb
jae
push
xor
or
hlt
pop
push
js
dec
lods
push
fldt
call
rorl
mov
in
add
mov
call
fmuls
pop
and
or
popa
and
mov
mov
jg
push
sub
ljmp
nop
int3
mov
dec
push
push
imul
mov
xor
cli
adc
inc
addr16
sub
jo
push
icebp
inc
sbb
pop
mov
add
sub
jp
add
cmp
mov
call
cmovae
or
not
adc
sub
leave
inc
call
jbe
inc
xor
jge
sbb
sbb
sub
jl
pop
inc
and
adc
mov
sub
jae
jb
add
mov
negb
aad
sbb
mov
lret
mov
inc
sbb
pusha
jle
sub
cmp
add
test
stos
dec
adc
popa
hlt
xchg
xor
cli
xor
js
push
addb
pop
pop
xor
adc
mov
cmp
inc
negl
lods
mov
daa
movb
lds
mov
rcrl
or
pushf
lods
js
pop
shrb
sbb
adc
sub
add
cltd
ds
nop
sub
cmp
cmp
movb
sbb
add
xor
pop
sub
lret
imul
sbb
add
sbb
enter
mov
test
inc
fcomi
cmpsb
movsl
sbb
add
or
test
mov
cmp
mov
xor
add
xchg
add
push
in
inc
xchg
orb
jne
testl
adc
in
and
addr16
or
cwtl
ljmp
aad
jmp
and
sub
add
and
add
add
push
rcrl
push
in
push
daa
add
lea
sub
subl
pop
mov
jnp
rorb
pop
mov
and
xchg
icebp
jg
jecxz
rclb
rorb
sub
mov
cmp
add
sub
pop
jne
lret
loope
adc
xchg
or
dec
cmp
dec
sub
mov
shrb
shll
mov
add
push
mov
dec
cmp
rolb
and
fcoms
mov
sti
stos
pop
and
xchg
leave
add
sub
push
or
into
inc
xchg
in
lods
jmp
or
insb
add
add
lea
push
mov
push
push
dec
sub
sbb
addr16
sub
xchg
xor
sub
fwait
mulb
adc
scas
sti
repnz
adc
dec
scas
or
adc
jb
inc
rcll
xorb
pop
inc
out
adc
pop
xchg
dec
cs
and
je
adc
pop
lock
adc
xchg
test
enter
sub
mov
ror
mov
aam
out
jb
dec
mov
pop
xor
inc
xor
add
mov
and
dec
scas
in
fiaddl
mov
mov
cmp
shld
dec
pop
roll
or
cli
inc
dec
adc
insb
pop
sub
or
mov
adc
mov
sub
rcrb
out
inc
push
in
sbb
inc
inc
scas
mov
mov
mov
xchg
mov
mov
mov
sahf
ss
bound
clc
decb
mov
inc
push
in
inc
lods
jp
test
insb
leave
adc
add
cmp
sahf
rolb
xor
sbb
jmp
push
inc
rolb
push
pop
cs
test
cmp
je
add
cmpsl
xor
push
and
into
icebp
mov
inc
xor
add
jg
push
repnz
or
les
add
jp
inc
xchg
sbb
add
mov
adc
in
addb
mov
pop
hlt
push
arpl
and
lods
psraw
pop
into
cmp
into
shlb
pop
sbb
dec
stos
mov
and
add
leave
dec
xchg
adc
mov
lods
add
cltd
cwtl
push
inc
sub
add
and
sub
mov
pop
inc
fs
sbb
cmpsl
cmpsl
mov
sbb
test
sbb
sub
sbb
pushw
xchg
push
ffree
and
es
dec
test
push
outsl
or
popf
or
sub
lcall
adc
and
test
push
add
xor
dec
inc
shrb
rorl
adc
mov
xorb
inc
fcmovnbe
jb
xor
lock
or
push
inc
sub
mov
loop
push
pop
jo
adc
push
pop
inc
push
inc
add
loop
xor
cltd
push
lcall
jo
mov
push
fsubs
dec
add
imul
mov
or
orb
add
roll
jnp
ret
push
sbbl
bound
push
das
shll
jno
jo
mov
pushf
sub
sub
dec
xchg
sbb
pop
pop
movsl
pop
mov
aad
sub
cli
mov
sub
in
jne
lea
or
push
sbb
xor
imulb
sbb
mov
push
mov
lock
push
dec
js
pop
sbb
mov
push
lret
mov
cltd
push
pop
add
loope
aad
cwtl
adc
push
push
mov
sbb
push
mov
pop
das
mov
nop
sub
pop
adc
jecxz
mov
gs
sub
shll
sbb
cld
sbb
pop
je
inc
rorb
into
or
xor
mov
movsb
inc
inc
pop
sbb
ret
rclb
sbbb
push
xor
adc
or
or
cmpsb
rep
xchg
test
sub
jo
and
sub
or
sbb
mov
mov
pop
pop
mov
jno
enter
and
pushf
mov
jo
aad
mov
adc
push
cmp
jp
adcl
cltd
push
xor
sub
add
enter
enter
adc
xchg
imul
lock
and
sarb
call
xor
mov
aam
shrb
jp
add
xlat
mov
ss
je
fwait
cmp
cmp
sahf
sbb
mov
data16
pusha
adc
jl
push
cmp
xor
data16
fildll
pop
imul
mov
lret
mov
adc
inc
add
inc
iret
jle
add
jo
subl
orb
cmpsb
or
mov
pop
or
cmp
or
cmp
loop
inc
sub
outsl
and
jp
jo
bound
stc
ja
push
push
mov
cwtl
mov
imul
xchg
stos
pusha
js
test
inc
add
cmc
adc
rorb
push
pop
lret
dec
data16
push
inc
ljmp
pop
ljmp
push
adc
dec
mov
sbb
sub
lods
dec
xor
loope
xchg
ret
add
sub
sub
into
imull
jmp
dec
xor
sub
adc
add
push
add
pop
and
adc
scas
ljmp
sbb
sbb
jl
adc
orl
pop
or
sub
addr16
sbbb
call
inc
inc
xor
test
pop
and
pop
lock
pop
sub
aad
pop
jno
sahf
lods
push
test
movb
imul
loopne
inc
ljmp
ss
push
push
clc
inc
push
push
push
mov
add
jmp
test
adc
loope,pn
pop
or
mov
subb
cmpsl
xchg
cmp
stos
or
add
rclb
mov
push
add
insl
or
lcall
stos
and
sub
add
and
cmp
push
xlat
stos
enter
push
xchg
orl
mov
mov
call
xor
imul
stos
sub
push
xchg
rcll
jo
shrb
add
push
cmp
faddl
sbb
stc
aaa
lea
or
shl
adc
sbb
cs
into
xor
js
xchg
add
push
int
sub
bound
adc
enter
sub
adc
push
mov
xchg
cmc
and
ret
ret
fsubl
imul
leave
xchg
mov
mov
rclb
mov
push
loop
rcll
mov
inc
mov
addr16
imul
shl
pop
insb
or
jp
adc
or
sbb
call
xchg
test
sub
pop
hlt
or
and
inc
enter
sbb
push
cmpsb
sub
sbb
leave
nop
or
fists
divl
jne
or
cwtl
mov
test
sbb
push
iret
shll
push
dec
stos
lds
mov
push
addb
xorl
add
lret
push
mov
in
xor
push
lods
out
cwtl
sbb
add
jb
add
xor
adc
mov
jmp
or
inc
cli
addr16
mov
out
jmp
shlb
mov
sbb
mov
mov
add
pop
and
pop
sbb
out
mov
push
xchg
adc
pop
adc
push
pop
testb
xchg
aas
pop
daa
stos
mov
outsb
and
or
js
push
test
hlt
push
sbb
mov
xor
cmp
cmp
sub
int3
or
inc
lret
cwtl
push
push
js
loope
pusha
inc
shlb
jbe
add
lret
mov
fldl
push
inc
xchg
clc
fsubr
push
int
or
push
add
push
stc
or
xor
cmp
cmpsb
sub
push
lods
sbb
and
subb
scas
ret
fsubrp
mov
rcll
push
pop
cmp
leave
add
roll
lret
lock
pusha
and
bound
xor
pop
call
mov
enter
and
pop
pop
cmpb
pop
loopne
adc
xor
es
int
add
pop
js
pop
es
lahf
shll
mov
sub
iret
mov
push
mov
xorb
test
mov
dec
mov
ret
cmp
add
insl
neg
or
pusha
enter
cmp
dec
shlb
pop
or
inc
and
add
push
cwtl
add
pop
dec
push
clc
cwtl
adc
mov
faddl
sbb
push
ljmp
add
sbb
adc
xorb
sub
add
int3
das
add
test
mov
xchg
enter
xor
inc
jno
mov
mov
mov
push
cmp
sar
lods
push
lods
das
and
mov
mov
add
loop
mov
xchg
fists
mov
dec
push
or
push
inc
push
ret
mov
sub
mov
daa
stc
and
mov
add
clc
test
imulb
sar
push
les
ficoml
sbb
sbb
std
lock
popa
jo
xchg
andl
add
push
mov
call
cmp
push
add
dec
stos
mov
jo
or
sahf
add
andl
loope
push
jae
dec
adc
movsl
lods
popa
fadds
or
insb
fwait
jmp
jae
das
fstps
les
mov
rcl
inc
add
cmp
push
adc
cmp
prefetchwt1
lock
jno
mov
mov
jno
xor
loope
leave
or
inc
lea
lcall
stc
pop
cmc
mov
sub
and
xchg
ret
push
mov
mov
ljmp
mov
and
jbe
inc
adc
leave
clc
sahf
add
imul
cld
shrl
mov
push
mov
test
popa
sbb
dec
push
call
push
xchg
add
and
jge
adc
mov
push
push
dec
sbb
aas
repnz
mov
test
fs
or
lret
sub
test
and
ret
xchg
test
lret
push
dec
insb
mov
push
fcomps
sub
cmp
les
jl
lret
add
pop
adc
ret
push
xchg
out
mov
mov
mov
sbb
es
add
push
xchg
adc
inc
push
mov
repnz
pop
adc
pop
aaa
mov
mov
stos
mov
mov
dec
mov
and
or
xor
icebp
ljmp
push
or
cs
sbb
inc
inc
sbb
xor
in
add
push
and
data16
in
sub
testb
sbbb
shrb
mov
jb
mov
pop
jne
dec
xor
jl
mov
out
mov
push
adc
add
inc
xchg
leave
adc
inc
cmpsb
mov
xchg
stos
mov
push
add
daa
incb
mov
add
pop
sbb
or
inc
adc
adc
lcall
dec
pop
adc
leave
aad
ds
adc
clc
lock
test
es
or
xadd
inc
ret
stos
mov
in
sub
and
lods
testb
push
xchg
cmpl
push
cmpsb
mov
push
sbb
add
push
sbb
push
rclb
add
add
scas
inc
push
ficoms
pusha
cmp
pop
jp
push
or
cld
addl
add
cmp
jno
pop
push
call
cmp
mov
ljmp
add
push
sub
loop
adc
test
cwtl
or
pop
jmp
add
jns
lcall
adc
pop
adc
sbb
in
notb
dec
addb
sub
pop
insl
cmp
adc
sub
adc
sbb
aad
in
lock
or
lock
hlt
inc
and
pop
or
push
sub
fcompl
je
test
pop
outsb
add
stos
xor
sub
pop
add
cmpb
pushw
or
les
aad
jmp
mov
fldl2e
xlat
and
xchg
push
add
or
push
adc
push
or
test
mov
das
xor
push
repnz
mov
test
adc
and
pop
mov
es
daa
cmp
push
dec
xchg
rcll
jne
mov
xor
insl
rolb
lds
roll
test
adc
jp
add
into
rorb
sbb
inc
inc
rcrl
hlt
lcall
lahf
mov
sbb
xchg
cmp
aad
and
push
add
pop
mov
pop
leave
sbb
clc
mov
pop
repnz
mov
aaa
inc
sub
scas
jp
adc
repnz
mov
aad
rorl
adc
pop
lret
adc
push
push
loopne
shrl
cmp
cs
sbb
rcrl
or
add
es
push
sub
push
movsl
sbb
stos
add
and
or
bound
or
inc
cmp
xchg
loopne
pop
addr16
xchg
in
aad
js
inc
add
add
int
hlt
sub
mov
pop
inc
rsm
mov
loope
add
xor
cld
push
or
mov
stos
adc
fs
test
mov
xor
roll
cli
orb
cmp
xor
mov
inc
xchg
stos
mov
mov
sub
inc
sub
lret
ficoml
mov
xchg
bndldx
push
or
and
cmp
dec
mov
adc
add
xchg
sbb
and
repnz
inc
adc
adc
push
add
add
mov
les
inc
sti
add
push
sbb
insl
ret
leave
iret
insl
mov
mov
mov
add
inc
inc
cmp
js
lcall
push
pusha
inc
sub
xor
xchg
cmpsl
push
cmp
push
or
dec
add
jb
and
xor
pop
lds
mov
xor
test
ret
insb
cli
push
in
rcr
dec
lret
movsb
addb
arpl
sbb
push
xchg
push
sbb
push
push
int
mov
dec
addb
call
es
popf
pop
jle
mov
sub
cmpsl
jle
cwtl
add
stc
adc
xor
jb
adc
inc
sbb
jl
jae
pushf
sbb
icebp
cwtl
adc
cmp
or
insb
adc
sahf
push
or
rolb
rolb
adc
adcl
push
push
xchg
repz
xchg
and
sub
aad
adc
pop
push
xor
cmp
or
cmp
shlb
clc
inc
mov
jle
push
sbbl
dec
call
mov
aam
cmp
mov
into
lds
shrl
add
sbb
pop
xor
push
sub
xor
or
into
pop
and
or
inc
pop
enter
fildl
or
xor
addl
cld
repnz
jo
mov
ss
push
push
sbb
les
mov
sbb
add
loop
loop
add
push
lock
and
lock
in
adc
sub
into
mov
sbb
add
bound
push
ja
and
lock
shlb
xor
cmpsb
iret
in
mov
pop
shll
add
and
add
imul
push
ret
pusha
push
xor
push
hlt
enter
mov
mov
bound
sbb
push
mov
xchg
addl
sub
pop
xchg
insl
pop
loopne
or
cltd
add
inc
mov
pop
mov
mov
pop
rol
xor
sub
or
add
sub
in
mov
scas
sti
sub
add
movb
xchg
and
mov
add
das
inc
rcl
or
insb
pop
mov
xor
jecxz
es
inc
dec
sbb
mov
cmp
sub
lret
push
loope
mov
inc
inc
lds
pop
pop
jecxz
jae
bound
cld
lock
push
imull
or
push
rcl
in
andl
xchg
rolb
xchg
jge
cwtl
sbbb
adc
inc
je
loopne
add
dec
inc
cmpsb
cmpsb
adc
mov
inc
arpl
pop
adcl
enter
adc
push
stc
lods
mov
pop
inc
mov
mov
mov
ljmp
adc
cmpsb
ss
push
or
sbb
sbbb
cli
fs
push
push
mov
les
and
test
xchg
notb
push
je
xor
adcb
shrb
roll
push
sbb
in
mov
xorb
pop
and
sbb
sub
inc
bound
adc
je
add
jns
aas
lds
shrl
add
mov
out
push
push
mov
call
rorb
pushf
sub
sub
loope
mov
add
aas
push
mov
xchg
shr
mov
decl
shlb
nopl
es
lahf
mov
adc
testb
pop
mov
jbe
sbb
pop
clc
unpckhps
inc
orb
jmp
fstp
outsl
fbstp
cs
sub
lea
push
sub
adc
add
fimull
rolb
je
mov
jbe
fistpl
jge
or
jne
push
push
and
and
out
repnz
pop
mov
inc
in
mov
mov
divl
adc
bound
ret
mov
jne
push
jg
cmp
jnp
add
or
add
cmp
or
push
dec
das
and
xorl
hlt
in
add
push
jns
out
sbb
or
push
add
idivb
pop
add
ret
cmp
inc
or
xchg
adc
cmp
iret
or
int3
push
sub
adc
pop
cmp
adc
or
or
and
jl
jmp
and
int
test
jne
mov
and
insl
mov
push
lea
xor
push
popf
push
out
scas
sub
xor
xchg
enter
notb
sbb
aas
test
pop
je
or
pop
ret
subl
adc
sbb
pop
or
repnz
cmp
jae
jo
inc
test
jmp
ret
jno
push
or
inc
ret
movsl
lea
pushl
or
adc
pop
je
outsb
mov
fdivr
add
int3
sti
add
int
jmp
sbb
sub
dec
mov
into
cld
mov
mov
mov
out
loope
mov
enter
cwtl
subb
push
lds
lea
movsl
add
fldz
xor
and
xchg
add
jno
pop
jle
cmp
mov
pop
in
mov
xlat
jmp
cmp
cmp
cmp
cmp
inc
sbbb
popl
push
cmp
jbe
push
aaa
fdiv
in
rcrl
js
pop
jmp
call
mov
inc
push
enter
xor
leave
mov
test
aam
cmp
push
es
aaa
dec
je
lea
add
loop
jae
dec
jne
out
adc
sbb
jnp
pop
pop
mov
pop
call
sti
clc
mov
cmp
jne
jno
sti
testb
adc
mov
xor
mov
jmp
cmpb
or
mov
push
inc
or
ja
xor
add
jmp
xchg
push
push
xor
cmp
in
rorb
pop
mov
ret
je
cmp
je
mov
out
and
lea
mov
mov
pop
cmp
mov
lods
std
outsl
push
clc
std
cmp
cmp
loope
in
cmp
aas
dec
and
cmp
das
ja
mov
pushl
js
pop
bound
std
mov
mov
aaa
jne
pop
incl
je
ja
mov
add
or
ja
arpl
mov
add
push
push
ja
dec
clc
mov
mov
dec
mov
mov
push
add
push
push
mov
mov
push
lahf
adc
mov
es
pop
sbb
push
mov
and
push
push
xor
frstor
adc
pop
movsb
pushf
cmc
mov
pushf
cwtl
dec
sbb
es
jnp
js
jne
jecxz
or
add
dec
movsl
jle
aaa
add
mov
lret
das
cld
or
inc
cmp
sub
js
fcomi
addb
add
xor
mov
mov
jle
enter
or
jmp
or
andb
inc
pop
fs
testb
inc
push
add
and
sbbl
mov
inc
and
das
outsl
int
or
or
jne
jne
dec
mov
fimull
dec
jmpw
jmp
pop
jae
pop
inc
sub
xor
mov
lods
lock
rcl
test
pop
jne
inc
inc
jmp
or
sbb
xchg
sub
ret
add
or
cmpb
jecxz
jmp
fdivs
or
sbb
sete
imul
divb
mov
dec
test
push
pop
inc
mov
push
repz
mov
aas
je
minps
sbb
popa
ret
push
pop
sbb
jbe
outsb
inc
inc
add
jo
sti
ficoml
xor
push
movl
pop
push
sti
pop
ret
dec
and
push
aam
mov
rcr
ss
sbb
test
add
lahf
pop
test
push
aam
sub
sbb
inc
cmp
pop
ljmp
pop
push
adc
cmp
inc
or
daa
ret
inc
inc
jmpw
inc
or
push
push
rol
or
sbb
sar
mov
pop
add
dec
cli
sar
xlat
xor
xor
je
mov
push
push
shll
mov
or
daa
pop
or
test
mov
jmp
pcmpeqw
ror
pop
test
je
inc
cmp
aam
jnp
add
movl
sub
sti
jmp
mov
sbb
jmp
push
adc
mov
dec
in
test
int
push
dec
lahf
es
xor
pop
pop
loopne
or
lea
outsl
fisubrs
fmul
add
andl
inc
add
sub
add
mov
lock
hlt
addr16
cmp
mov
mov
jl
pop
sbb
jge
mov
outsb
int
lret
lea
imul
pop
pop
jnp
es
roll
mov
jl
jmp
mov
adc
jle
cld
inc
and
mov
cmp
fsubrs
lcall
push
and
mov
sbb
loopne
insl
fstpt
movsb
rolb
pop
dec
sarl
in
add
inc
cmp
jl
cld
lcall
xor
pop
and
cmpl
lea
jne
jge
adc
enter
jmp
sub
mov
fcomps
sub
or
outsb
jecxz
jp
push
jo
and
sbb
in
orb
or
mov
jns
jne
or
add
addb
jl
jle
ss
pop
test
sbb
adc
mov
mov
mulb
loope
int
jnp
sub
sbb
sbb
adc
adc
jp
adc
lea
or
xor
inc
adc
xlat
outsb
insb
add
xor
adc
jbe
dec
es
mov
push
and
insb
insb
sub
xchg
es
fwait
insb
pop
adc
outsl
pop
jge
push
stc
push
cmp
push
xlat
stc
xor
dec
xor
outsb
sub
popa
pop
enter
sbb
nop
vcvttss2si
je
push
enter
int
fldcw
cmp
pop
daa
mov
pop
aad
testl
xor
je
out
mov
adc
adc
push
push
pop
movsb
pushf
sti
inc
push
fs
push
and
mov
mov
cmp
pop
mov
dec
mov
dec
pop
jl
jae
adc
out
mov
fldt
call
ret
popl
dec
jg
in
or
pop
pop
cli
push
push
or
push
test
mov
mov
sbb
cmp
add
or
dec
add
inc
cli
mov
pop
ret
int3
push
inc
xor
pop
inc
xor
mov
lock
xchg
pop
or
testl
mov
push
push
inc
adc
mov
pop
idivl
and
or
sub
xchg
jbe
je
das
je
notb
imul
or
inc
or
mov
jb
icebp
sbb
mov
sbb
arpl
or
insl
fimuls
mov
push
or
or
sbb
sbb
jmp
mov
jmp
pop
inc
mov
push
aas
pop
push
xchg
mov
outsl
push
mov
push
add
push
and
adcl
sbb
jbe
sub
push
dec
jp
subb
insb
nop
cli
out
pop
loopne
adc
into
sub
xor
mov
rolb
insl
or
ficomps
test
icebp
jb
shl
cmp
fstps
out
insb
xchg
call
call
cli
jne
icebp
adc
pop
notrack
sub
xor
pop
mov
add
push
mov
mov
gs
sub
or
or
aaa
and
add
inc
loopne
cwtl
xor
daa
aaa
push
pusha
inc
adc
mov
or
sbb
rcrl
mov
pushw
adc
and
fidivrl
das
mov
adc
xor
imul
aaa
or
movsl
jge
pop
dec
sub
je
push
push
sbb
call
pop
fmul
lods
or
bound
subl
test
xor
jne
push
push
mov
clc
call
pop
bound
add
in
outsb
fwait
inc
orl
aad
pop
xchg
sbb
pusha
call
mov
out
shrb
sbb
fldt
test
sti
or
add
adc
and
push
popa
stc
add
lret
sbb
ds
sbb
cwtl
pop
mov
sub
jmp
sbb
cld
gs
sbb
sbb
inc
push
pusha
js
mov
scas
mov
cmp
lods
jne
fldenv
push
andl
std
mov
jne
rep
stos
mov
xchg
pop
adcb
jge
arpl
or
xor
scas
jbe
inc
decl
cltd
push
pop
mov
xchg
stc
xor
lea
rcr
mov
sahf
xchg
addb
mov
xchg
outsb
mov
mov
add
xchg
ja
adc
mov
fistpll
or
cmc
inc
inc
cmpb
aaa
fsubrs
aam
add
sbb
xlat
jb
out
shll
or
out
push
lods
lods
push
mov
movups
je
push
mov
roll
jmp
inc
jns
jno
lds
lods
enter
cmp
cmp
mov
jmp
or
clc
je
fiadds
mov
push
jo
inc
jne
negl
xchg
cs
add
insb
sbb
jno
and
or
sub
mull
lahf
inc
sub
or
inc
xchg
adc
mov
leave
std
nop
cld
mov
adc
dec
sub
adc
xor
mov
push
cmp
add
add
sahf
or
push
jno
mov
inc
xor
pop
add
in
mov
iret
pop
xchg
jl
push
dec
clc
cwtl
adc
arpl
aas
sarb
incl
jb
mov
movb
js
aaa
rorl
or
aad
jmp
or
mov
and
mov
shr
test
xorl
rep
inc
inc
mov
xor
rcrb
push
in
cli
lds
xlat
mov
cmp
mov
and
sbb
push
push
push
xor
xor
jo
fs
dec
push
daa
cld
ja
pop
jb
lret
jb
mov
test
sti
sbb
mov
add
mov
in
inc
rclb
add
sbb
mov
jbe
test
add
inc
jb
add
divb
enter
mov
in
insl
pop
sbb
ja
and
lods
shr
and
dec
dec
mov
add
push
inc
insl
pop
mov
mov
ret
pop
sbb
rolb
mov
push
jge
mov
adc
or
rcrl
sbb
fimull
fldt
or
pop
push
imul
int3
add
stos
inc
aaa
pop
jmp
lea
ljmp
js
lock
data16
inc
lret
cmp
jne
mov
mov
jle
lock
aam
test
in
add
and
pop
into
gs
lods
push
add
int
pop
bnd
or
std
jmp
cld
pusha
or
rcl
pusha
pop
sbb
inc
loop
mov
inc
bound
jmp
mov
fldenv
aaa
pop
and
cwtl
imul
arpl
insl
xor
stc
daa
test
sahf
insl
sbb
cmp
inc
add
xchg
adc
pop
js
adc
js
aad
js
mov
nop
jl
loopne
and
add
adcl
lret
xor
inc
cwtl
sahf
loop
pop
xchg
xor
sub
sub
or
add
and
or
aam
test
js
in
and
out
jge
pop
leave
and
jle
outsl
outsb
adc
inc
push
pop
jb
pop
xor
inc
leave
and
and
sub
ret
or
std
lods
jmp
int3
jmp
aad
push
push
lret
push
xor
jbe
outsb
sbb
icebp
clc
jb
mov
and
insl
mov
sub
jb
rep
jmp
mov
sbb
jb
loopne
xor
test
push
lea
movsl
pop
and
nop
add
add
clc
fwait
dec
jo
rorl
mov
add
add
pop
mov
int3
xor
add
and
lret
add
cmpsb
nop
and
push
bnd
inc
aas
mov
out
add
pop
std
jg
add
in
add
imul
cmp
add
imul
mov
cmp
in
ljmp
out
pop
sub
imul
sub
sub
sub
mov
mov
adc
idiv
decl
incb
inc
cld
cmp
or
mov
push
sub
sub
and
imul
ds
add
fstpt
mov
mov
rcll
adc
mov
push
mov
add
push
add
xor
mov
mov
pop
or
lock
sbb
lret
call
ja
insl
into
dec
mov
invd
mov
jg
mov
nop
mov
cmp
cmp
sub
out
outsl
mov
pop
mov
sub
mov
out
arpl
cmp
gs
sbb
clc
add
sub
mov
push
sub
movb
or
ficoms
movsb
rcrb
out
and
jbe
daa
or
bswap
mov
or
imul
and
cmp
sub
cmp
mov
mov
cmp
sbb
rclb
clc
mov
sti
ret
mov
add
decl
test
pop
idivl
and
fcmovnbe
mov
push
into
xor
mov
ret
mov
sbb
repnz
sbb
xlat
or
or
js
push
or
mov
insb
add
fldt
testb
pop
add
insb
add
movsl
cmpsl
xchg
mov
mov
push
sbb
lods
lds
jo
inc
pop
lret
pop
cld
inc
or
fidivl
add
or
popa
jnp
in
add
sub
adc
rclb
ret
jmp
fldcw
insl
sbb
or
cmp
icebp
test
lea
mov
lret
cmp
add
push
adc
push
ret
pxor
mov
sbb
fidivrs
shl
call
or
mov
adc
mov
call
pop
adc
inc
adc
std
mov
and
ljmp
pop
sub
fs
cmp
cs
shll
mov
sbb
and
add
add
adc
insl
pop
insb
loope
mov
push
xor
or
rcl
sar
add
loop
lcall
push
add
adc
out
loope
into
jmp
mov
mov
sbb
sub
mov
into
xor
mov
lahf
adc
inc
lock
xchg
sbb
lock
mov
cmp
repnz
mov
adc
shlb
adc
adc
xor
mov
loope
pop
adc
xor
fstpt
jae
cwtl
adc
lock
or
or
mov
cwtl
adcl
bound
jg
pop
push
or
shrl
mov
or
test
shll
cmp
lcall
sarb
or
jnp
adc
xor
pop
sbb
cmpsb
lods
adc
insb
or
push
insl
xchg
adc
mov
insl
cmpsl
out
mov
adc
pop
dec
scas
sarl
mov
sarl
push
movsb
mov
lods
insl
sti
adc
clc
punpcklwd
fiadds
mov
incl
adc
pop
leave
cmc
popa
imul
adc
je
mov
lret
mov
mov
jmp
adc
popf
cmpsl
add
in
mov
dec
dec
call
pushw
pop
xchg
or
pop
mov
rcll
fmuls
cld
mov
addr16
jge
enter
sbb
cmp
or
arpl
ja
fisttps
call
leave
ret
call
cmp
add
add
xor
es
or
clc
push
or
insl
movsb
outsl
int
gs
adc
fistpl
or
push
and
mov
insl
xor
icebp
pop
clc
or
adc
inc
rorb
mov
sbb
and
sub
push
sub
cld
cmp
test
sbb
mov
scas
out
inc
imul
and
in
or
adc
cmp
add
mov
popf
or
shr
rorb
or
jbe
cli
or
shlb
movsl
cli
sar
pop
out
in
test
movl
pop
lods
pop
jnp
cwtl
and
or
icebp
mov
lahf
mov
add
add
scas
and
sub
insl
pop
adc
push
push
push
adc
lcall
mov
jmp
mov
ret
enter
push
pop
loop
dec
cltd
sbb
test
xor
mov
cmp
adc
mov
loopne
add
mov
rcll
adc
dec
lods
popf
mov
push
push
outsb
ss
mov
pop
mov
xor
mov
adc
jno
call
mov
lock
dec
test
push
xor
jle
ret
and
lods
arpl
hlt
rcrl
pop
leave
pop
leave
cmp
push
mov
push
xor
into
push
push
rcl
xchg
xor
add
sub
in
xor
cli
pop
daa
or
ficoml
shl
or
insl
jnp
lcall
push
arpl
adc
rorb
clc
and
sbb
add
stos
lock
out
or
xlat
data16
cltd
mov
jmp
mov
xor
shll
pop
mov
cwtl
mov
adc
or
pop
sub
mov
push
and
insb
jmp
and
adc
or
ret
pop
jo
outsl
ljmp
adc
xchg
jp
lret
pop
clc
pop
daa
clc
sbb
sub
popa
push
data16
or
or
push
mov
bound
rol
xor
add
mov
orl
popa
sbb
xchg
sbb
jmp
push
and
inc
xchg
sbb
leave
sbb
add
jns
add
and
dec
xor
cld
data16
pop
or
push
sub
xchg
pop
mov
add
xlat
add
fwait
dec
push
fildl
jae
outsl
icebp
bound
mov
cmp
jne
or
adc
fmulp
aad
shlb
fisttpll
push
push
mov
scas
pop
leave
mov
lea
insb
add
mov
hlt
mov
pop
push
inc
add
mov
sti
ficompl
pop
sbb
repnz
dec
dec
pop
sbb
xor
mov
dec
clc
or
mov
lcall
mov
add
mov
pop
and
mov
push
push
add
frstor
icebp
enter
scas
inc
add
stc
jg
es
mov
sbb
cwtl
pop
mov
ret
rclb
loopne
inc
cwtl
push
lds
mov
mov
sbb
jo
add
unpckhps
mov
pushf
inc
fistpl
lods
xchg
dec
mov
ds
fwait
inc
add
sbb
xor
inc
and
inc
ror
lods
cmp
mov
jge
test
inc
cmc
pop
int3
pusha
sti
inc
call
pop
mov
sbb
es
xchg
sbb
imul
loopne
fdivl
loopne
xor
sbb
dec
push
inc
hlt
xchg
inc
pop
popa
insb
sbb
add
sbb
sbb
mov
add
jp
sub
add
shr
fmull
fucom
mov
ret
pop
fists
mov
and
lcall
pop
sub
loopne
call
test
addl
dec
aas
sbb
sahf
inc
imul
sbb
loopne
sub
cmp
push
ret
sub
push
dec
dec
cmp
ret
mov
mov
jmp
mov
cmp
xchg
mov
into
and
and
sub
pop
sbb
outsb
out
rolb
clc
sbb
cmp
jns
push
in
mov
ret
shr
cmpb
je
push
dec
sbb
sbb
or
clc
popf
add
push
cmpsl
out
leave
sub
jl
in
clc
shlb
mov
or
loopne
push
loopne
dec
cmpsb
add
cmpl
cmp
inc
add
sbbl
jmp
inc
test
add
mov
xchg
js
mov
push
bound
mov
inc
add
mov
imul
pop
test
sub
fiadds
add
iret
call
js
push
movsb
lock
ret
add
pop
clc
nopl
xlat
xchg
or
movsb
ret
pushf
add
inc
std
aas
mov
add
push
add
inc
mov
push
add
cs
add
fcom
adc
mov
insb
adcw
sbb
imulb
mov
in
or
mov
mov
mov
adc
xorl
repnz
or
jne
test
and
cvtps2pd
icebp
pop
out
adc
and
mov
cmpsl
fwait
mov
mov
insb
aas
lock
adc
ja
jbe
flds
sub
mov
adc
xlat
mov
imul
sbb
inc
shl
pop
dec
daa
orl
rol
sbb
add
mov
pop
loop
call
mov
sbb
adc
inc
push
jmp
cmp
xor
add
outsb
pop
xor
xchg
adc
stos
push
sub
call
mov
jo
pop
mov
nop
div
adc
xor
push
add
push
push
xor
xor
adc
jno
sbb
shll
sub
daa
jbe
jae
add
or
sbb
stos
enter
ds
sub
pop
jmp
xlat
dec
mov
adc
push
mov
lock
shlb
repnz
es
das
into
adc
aad
loopne
mov
push
jmp
or
testb
js
push
inc
or
fs
add
nop
sub
pop
jl
push
push
push
pop
shll
cmp
xchg
paddusw
or
add
out
jae
fisttpl
push
push
push
insb
fcmovbe
dec
test
cmc
sub
in
roll
jo
cwtl
dec
mov
dec
pop
or
adc
and
mov
lret
jbe
mov
mov
adc
push
outsb
popa
sbb
mov
sbb
inc
es
test
push
dec
ss
xor
loopne
xor
mov
les
and
mov
pop
sbb
push
and
ret
shl
aas
sbb
pop
sbb
xor
out
or
jns
pop
stc
into
clc
ljmp
icebp
hlt
fdiv
adc
stc
or
and
push
gs
dec
push
popa
push
or
add
fwait
rcll
xor
push
popa
push
out
sbb
sbb
push
add
cmp
ret
sbb
pop
xor
mov
lock
push
and
pop
fstpl
cs
pop
mov
cmpsb
cwtl
mov
mov
shll
or
mov
test
test
add
les
loope
fcoml
pop
in
inc
xlat
sub
cmp
pop
loope
stos
sbb
lcall
popf
push
mov
and
inc
icebp
push
rcrb
ds
cwtl
jmp
sub
cmp
out
fsubrs
gs
bound
cmp
loope
rol
cwtl
jl
and
shlb
inc
dec
jp
or
or
adc
jecxz
pop
ljmp
mov
pop
dec
adc
scas
mov
popa
lret
pop
or
sub
xchg
jp
das
imul
mov
cmp
xlat
outsb
into
dec
out
xor
sbb
cmp
inc
mov
sahf
sub
mov
icebp
sub
or
and
enter
leave
xor
call
andl
xchg
inc
inc
cmp
roll
rcl
or
int
inc
and
negb
mov
pop
xchg
repnz
xchg
dec
lock
leave
ret
mov
shlb
shrb
or
add
jb
pop
or
bound
xor
ficompl
push
xor
out
push
mov
push
cwtl
mov
pop
pop
test
lahf
or
mov
adc
adc
sbb
lret
les
ss
icebp
dec
pop
push
or
daa
push
mov
mov
sbb
jns
sub
subb
test
and
outsb
adc
rsqrtps
inc
or
or
mov
dec
lock
mov
mov
mov
fnstenv
sbb
mov
jb
add
inc
jp
mov
add
sbb
cmp
sub
pop
mov
mov
lret
enter
loope
xor
leave
lods
dec
mov
pop
jl
loop
push
imul
pop
icebp
ret
push
sub
pop
mov
ret
rclb
rolb
jo
fs
cmp
mov
sbb
push
mov
dec
xor
adc
test
cmp
insl
jmp
or
mov
test
aad
push
pop
sub
cmpsl
into
loope
jmp
mov
or
jmp
jg
jbe
int
pop
add
push
push
stc
imul
inc
rcl
in
lret
pop
outsl
xchg
or
mov
add
fistps
mov
mov
ficoms
repnz
rorb
pop
pop
adc
ret
mov
jp
pop
std
test
or
add
sbb
cmp
ret
pop
int
mov
imul
hlt
dec
mov
leave
adc
nop
pushf
sub
ficompl
insl
add
push
inc
add
jb
mov
push
add
cmp
xchg
add
adc
mov
mov
adc
rcll
icebp
mov
aad
adc
push
imul
enter
push
loopne
sbb
call
add
sbb
aad
test
push
pop
sbb
cwtl
leave
adc
mov
mov
push
nop
ljmp
push
and
adc
mov
jg
pop
or
addb
out
push
sbb
rclb
aam
cwtl
out
roll
sub
xchg
fwait
loop
pop
push
push
fldt
sbb
lods
mulb
sub
add
ja
in
cmc
sarb
push
pop
push
sub
aam
aam
es
sub
jnp
insb
pop
insb
pop
and
inc
pop
sub
xchg
pop
adc
nop
push
fldcw
fs
int
mov
ret
mov
aaa
clc
push
mov
insb
adc
adc
rorb
addl
or
jnp
out
dec
notb
roll
lahf
mov
sbb
or
pop
add
adc
into
aad
mov
stos
lea
cli
ja
pop
cmp
jne
ficompl
fdivs
push
rol
pop
xchg
xor
lret
pop
lock
cmovnp
mov
and
lods
xor
es
lcall
add
subl
lock
lock
add
jle
int3
mov
pop
sub
or
push
inc
inc
add
push
mov
push
cmp
enter
loop
aas
es
scas
movsb
xor
std
add
pusha
add
jl
pop
push
orl
pop
inc
ret
add
je
jp
push
insb
pop
cmpsb
pop
into
push
fisttpl
inc
loopne
push
cmc
xchg
sub
sbb
jecxz
sbb
dec
lods
or
sbb
sbb
add
shl
cmp
push
push
es
mov
pop
xor
jp
or
sub
int3
cld
clc
mov
rclb
js
dec
cmp
sub
push
pop
loope
push
leave
sbb
push
loopne
fwait
cmp
xor
sbb
jp
push
adc
jnp
das
mov
mov
add
es
inc
add
mov
push
or
mov
cli
sub
adc
xor
lods
es
jo
subl
ret
ja
xlat
sub
push
test
pop
mov
call
adc
popa
aam
add
mov
lods
mov
pop
icebp
hlt
sbb
push
andb
int
inc
jno
outsb
jnp
sbb
inc
lea
inc
test
jge
addl
xor
pushf
test
push
out
sbb
mov
push
enter
xchg
dec
cmp
test
mov
xor
or
sarb
inc
dec
xor
xchg
cmp
pop
sbb
pop
test
daa
add
lret
add
or
mov
push
scas
sbbb
inc
pop
xchg
jno
adc
ret
push
cmp
mov
adc
jnp
sbb
enter
sub
or
jle
adc
rcrl
mov
add
and
js
push
xchg
bound
test
ja
push
adc
push
or
scas
arpl
ret
out
scas
mov
pop
mov
add
add
inc
push
cmp
cmp
icebp
pop
xor
jne
rorl
mov
pusha
sub
jae
pop
push
dec
sbb
jbe
sbb
inc
cmp
fisubrl
sahf
rcl
shlb
adc
fwait
xchg
add
sbb
fcomps
jle
clc
or
xchg
rolb
sbb
xchg
enter
adc
add
jo
push
cmp
rcll
xorl
dec
jp
push
or
loope
pusha
rorl
in
pop
cmp
cmp
fisttpl
pushf
xor
push
jb
ret
ljmp
mov
iret
das
repz
push
sub
rclb
jno
inc
xlat
int3
and
in
mov
xchg
sbb
lods
lods
adc
sbb
pop
sbb
mov
ljmp
sub
arpl
lock
call
xor
inc
enter
cmp
lods
xchg
and
lds
jb
cmc
inc
fwait
inc
inc
aaa
add
cs
dec
and
adc
inc
push
xor
mov
stos
call
add
xor
clc
xchg
jmp
dec
mov
pop
dec
icebp
xor
test
popf
cmc
mov
push
push
not
cwtl
sub
or
leave
sbb
negl
mov
mulb
bound
push
in
xchg
pop
xchg
nop
cmp
push
out
outsb
insl
jmp
push
xchg
mov
push
in
pop
fldl
xchg
test
cmp
push
or
inc
inc
and
adcb
cmpsl
into
cmp
scas
lea
jo
int3
or
mov
imul
inc
fistpl
xchg
leave
cs
sub
xor
pop
mov
and
clc
adc
out
enter
jo
rclb
popf
cli
sti
aam
or
push
xor
rcrb
sub
addl
ja
xchg
mov
mov
maxps
xchg
clc
push
pop
dec
shr
pop
iret
mov
mov
stc
add
push
jo
push
mov
les
shr
sbb
jne
inc
out
dec
out
insb
add
rolb
rcr
push
pop
es
mov
pop
das
xchg
cmpsl
sbb
hlt
test
rclb
shl
fld
in
in
jmp
add
push
pusha
je
mov
adc
or
daa
ret
cmpsl
dec
xlat
loopne
call
push
sub
lods
add
rorb
jg
push
push
push
inc
pusha
ret
push
inc
loopne
push
or
loop
sub
adc
ret
adc
lret
pop
test
jne
jmp
stc
aad
call
add
shl
pop
dec
jne
leave
test
xor
adc
mov
arpl
rcrl
xchg
rcll
enter
cltd
xchg
mov
hlt
push
bound
lret
add
sbb
xor
into
stos
adc
push
dec
dec
push
jmp
mov
adc
sub
sbb
inc
fisttpl
into
add
cmc
mov
sbb
jg
orb
test
push
cmp
xorl
pop
movsl
leave
xor
push
scas
lcall
and
rorl
jl
xor
pop
adc
ljmp
dec
sbb
xchg
pop
andl
pusha
add
pop
mov
fwait
ror
das
stc
push
in
leave
call
and
and
scas
cmp
lcall
cli
stc
aas
icebp
stc
push
push
idivb
sbb
rol
sbb
in
lock
xor
add
pop
mov
lcall
add
push
arpl
push
hlt
inc
rolb
mov
ficompl
orl
push
push
jo
xor
inc
add
inc
mov
decl
aad
adc
lret
mov
stos
push
cmpsl
xor
mov
cmp
ds
or
push
lret
js
outsl
mov
les
loopne
ds
stos
adc
ret
mov
jb
mov
out
or
pusha
add
pop
sarl
scas
in
pushf
lods
adc
lcall
jo
pop
shll
jmp
sbbl
pop
push
and
fldl
cs
sbb
lds
push
cmp
shl
jle
leave
fsubrs
into
mov
mov
fcmovnbe
add
nop
test
in
stos
rcll
mov
add
adc
orb
jb
add
shrb
push
in
or
test
sbb
push
call
push
xchg
mov
mov
imul
int
lahf
xor
test
sub
ljmpw
or
xchg
cmpb
xor
dec
aaa
push
subb
or
and
in
insb
adc
inc
inc
push
push
xor
sub
add
sub
out
jge
and
xchg
cwtl
jo
add
clc
xchg
lahf
aam
das
xor
mov
clc
mov
subb
into
dec
mov
ret
dec
repnz
sbb
cmp
pop
pusha
cmp
arpl
and
icebp
adc
xchg
mov
int
push
xchg
pop
leave
call
xor
push
loope
adc
pop
push
push
inc
mov
inc
jae
xor
data16
pop
push
call
adc
sub
and
negl
mov
dec
sub
aam
pop
test
and
and
stos
push
xor
sub
xchg
add
aam
nopl
jnp
mov
bound
cli
push
mov
clc
lfs
jne
sbb
jno
push
lods
sbb
jl
inc
add
jns
mov
push
push
cmp
or
mov
test
pop
dec
add
inc
lcall
or
or
sbb
adc
mov
and
lock
jmp
and
test
mov
adc
scas
ljmp
rol
stc
add
xor
mov
out
cmc
cmp
popa
je
gs
or
sub
lret
jo
add
push
or
shr
add
or
sbb
movb
pusha
and
scas
popa
dec
push
sbb
mov
push
cmp
int
adc
movsl
and
cmpsb
inc
mov
push
xchg
lods
adc
dec
dec
and
xor
mov
and
push
pop
or
cs
mov
in
lods
sbb
das
shll
insl
addr16
pop
pop
push
cmp
push
inc
movsb
xchg
imul
xor
out
pop
cmc
icebp
mov
mov
push
add
push
lahf
shll
sbb
es
cwtl
or
push
roll
stos
xchg
jno
rolb
imul
lock
mov
push
xchg
or
test
xchg
sarl
es
shll
movsb
sbb
adc
jmp
je
stos
or
prefetch
test
repz
cltd
push
sub
add
fucomi
push
xor
shrb
cmpxchg
add
push
xor
adc
xchg
sub
test
xchg
stos
sbbl
icebp
cmpsb
xor
push
pop
repnz
push
sbb
adc
sub
test
xchg
enter
add
test
or
pop
push
js
push
mov
and
and
frstor
iret
repz
mov
loopne
arpl
loope
inc
es
inc
pop
and
mov
cmp
push
faddp
mov
out
scas
data16
mov
loope
outsb
inc
imul
mov
mov
out
ds
jmp
inc
test
or
sbb
lret
cmp
xchg
mov
pop
inc
lods
add
arpl
sub
sar
push
leave
scas
sbb
adc
inc
addr16
leave
loope
push
push
sbb
xchg
loope
sub
les
cwtl
movsl
test
ret
push
sub
lock
inc
shl
lret
add
or
roll
mov
cmp
clc
into
cmp
xor
loop
inc
sbb
in
test
and
sbb
sahf
add
inc
jmp
andl
mov
sarl
and
add
repnz
dec
adc
push
inc
cld
aas
add
cmp
ror
jb
lods
add
inc
stos
inc
jp
es
sbb
cmp
push
shlb
incb
mov
add
jecxz
or
sbb
and
adc
jmp
pusha
js
sbb
sub
pop
mov
sub
and
mov
rorb
jl
or
imul
insl
cmpsb
lods
dec
shrb
mov
adc
sbbb
mov
add
pop
cmp
mov
loop
lock
add
or
lret
and
je
mov
insb
nop
mov
mov
mov
out
xchg
cs
add
adc
lock
push
push
and
and
lcall
push
das
mov
jl
xchg
sbb
or
mov
xchg
sub
adc
or
add
adc
sbb
leave
hlt
inc
jae
or
icebp
in
stc
adc
sbb
lret
outsb
and
xor
cs
xchg
mov
test
sbb
inc
jnp
nop
or
call
enter
xchg
insl
ficomps
push
push
ret
int
jo
or
mov
cmp
test
pavgb
jbe
cmpsb
repnz
xchg
cmpsb
orl
dec
cltd
push
mov
mov
push
pop
xor
test
repz
inc
ret
cmp
push
dec
in
int
push
cmpb
inc
sahf
std
mov
mov
jmp
rolb
adc
ss
add
cmpsb
mov
jmp
rcrl
icebp
fs
add
sbb
jbe
jmp
mov
push
je
add
cli
sbb
pop
or
out
add
stos
xor
mov
xor
lret
sbb
lret
jo
add
xor
add
sbb
lock
lds
inc
inc
roll
or
jae
push
not
mov
out
add
sbb
cmc
push
jnp
xor
adc
data16
mov
jge
lcall
lods
lds
aad
out
or
xor
call
jae
scas
sbbb
mov
adc
push
sbb
pushf
lret
stos
push
dec
out
jl
add
pop
or
adc
add
sub
push
cwtl
jmp
adc
or
sub
add
les
mov
cltd
dec
xchg
inc
popf
pop
adc
mov
add
iret
push
push
add
push
xchg
pop
negb
jb
test
jmp
faddl
test
push
jbe
mov
and
adc
mov
shr
aas
xchg
shrl
rcll
dec
je
rorl
or
sub
add
xchg
sbb
adc
mov
cmp
pop
xor
xchg
add
xor
sahf
shrl
sbb
lea
cmpsb
jp
mov
sbb
cld
jnp
mov
push
inc
inc
adc
lcall
push
add
leave
sbb
gs
ret
or
or
mov
mov
jge
inc
fidivl
push
arpl
fnsave
cmp
int
roll
xor
mov
mov
lds
push
sbb
mov
lods
mov
sub
or
adc
loope
push
mov
cmc
add
push
pop
loop
jo
roll
cmp
in
clc
in
add
push
jecxz
psllw
inc
add
fidivs
pusha
lea
lock
mov
sub
call
ss
shlb
inc
popf
cmpsb
das
push
ret
add
pop
mov
adc
push
cmp
adc
xchg
pop
js
mov
xchg
xorb
or
popa
sbb
out
cmc
outsb
in
addr16
ficoml
sbb
in
mov
add
or
or
push
repnz
ret
add
jmp
rcrl
pushf
inc
mov
xor
ret
xor
enter
cmpsb
repz
addl
sbb
ja
addb
push
shrl
mov
and
mov
add
sub
sub
addr16
sub
inc
add
imul
or
mov
push
push
pop
adc
call
jns
or
jo
cs
and
jo
lods
repnz
inc
or
ret
inc
sbb
stc
sbb
cmpsb
cmp
cmp
pusha
mov
negb
pop
cmc
inc
pop
and
sarb
test
sub
fs
or
push
xor
mov
and
add
inc
out
sbb
add
pop
mov
xlat
mov
mov
or
incb
inc
pop
test
xchg
jge
sbb
and
jo
mov
icebp
mov
or
add
jo
inc
xor
sbb
shlb
xor
mov
sbb
add
std
jbe
push
addl
loop
add
jbe
rorl
dec
lock
add
push
push
aas
inc
mov
push
push
lahf
push
or
jmp
outsl
adc
xchg
andb
test
sbb
add
mov
dec
call
icebp
push
or
je
mov
mov
mov
and
enter
cli
xlat
cmpb
cs
jp
mov
sub
xor
aam
mov
dec
fcomip
lea
xchg
mov
addr16
pop
cltd
addr16
inc
adc
adcb
jno
or
mov
fldt
shrl
sbb
add
inc
jbe
adc
or
pop
out
movsb
xorl
mov
rorb
bswap
and
push
cltd
push
mov
inc
insb
inc
jmp
push
xor
lcall
adc
outsl
rcl
or
ja
jp
and
cmp
in
out
inc
sbbl
xchg
icebp
orb
or
ja
stc
clc
pop
sbb
jbe
jb
sub
add
ret
mov
dec
add
pop
lock
frstor
icebp
push
add
xchg
sbb
push
push
lods
cmpsl
mov
or
aam
insl
dec
call
add
adcl
dec
mov
add
insl
rcll
out
adc
dec
pusha
lods
xor
add
sub
xor
js
ljmp
push
js
lods
mov
push
mov
adc
add
jecxz
testb
add
cmpsb
or
xor
repnz
cmpsb
jo
daa
xor
mov
or
push
add
dec
wrmsr
cmp
add
mov
test
or
xor
sub
stos
add
fistl
cmp
subl
jge
lock
cltd
xchg
jmp
mov
add
popl
mov
xor
lret
mov
insl
push
xor
or
stos
lods
adc
loop
lret
sti
sbb
addb
pop
xchg
sub
negb
call
ret
adc
pusha
sbbl
lcall
ljmp
movq
inc
pop
lea
sub
xchg
negb
or
test
add
repz
xlat
mov
lret
stc
pop
xchg
sbbl
aad
add
or
lods
xchg
mov
lret
js
sarl
or
mov
push
xor
int
inc
sub
adc
ss
mov
mov
dec
cmp
push
cld
int
sub
std
add
jns
add
lds
inc
or
cld
ljmp
sub
add
cmpl
mov
and
mov
xor
jo
pusha
dec
xchg
push
mov
or
mov
loope
dec
xor
xor
adc
add
and
adc
push
movsl
jb
dec
pop
and
shr
jmp
push
test
or
movsl
pop
dec
jno
inc
jmp
or
pop
sub
lock
bound
pop
adc
addr16
and
add
inc
sbbb
add
mov
repnz
push
ret
orb
sbb
adc
or
cs
les
and
mov
add
lods
mov
insl
add
into
ret
pop
xor
adc
mov
adc
jp
and
cmpsb
and
adc
inc
in
push
fstpt
mov
pop
pop
les
aaa
call
xchg
lods
inc
loope
loop
push
jne
cmp
sbb
jecxz
xchg
stos
adc
cmc
cmp
and
arpl
iret
ror
cld
dec
sub
jmp
cmp
xor
jp
aad
add
dec
sbb
sysret
lahf
cmp
inc
cmp
out
push
pop
pop
and
sub
pop
push
test
mov
icebp
jl
imul
pop
and
cmp
push
mov
loope
jbe
outsl
movhps
adc
cltd
cmp
pusha
sbbb
lahf
stos
cmp
in
push
or
pushf
or
inc
xchg
flds
adc
or
adc
gs
xchg
jne
or
and
push
add
sbb
push
or
lret
or
push
mov
adc
mov
jae
and
push
inc
adcl
jo
sub
rcll
icebp
lock
pop
xor
movsb
inc
imul
dec
or
or
in
addl
xor
shll
push
jmp
and
outsb
push
jo
or
xchg
sub
dec
or
imul
adc
test
jo
add
ret
push
clc
mov
adc
test
adc
loop
add
push
pushf
lret
push
lods
int
fists
or
fwait
or
xor
negb
in
sbb
fcmovnb
or
sub
rcl
icebp
mov
in
pop
cmp
call
mov
mov
sbb
jmp
inc
cmp
andl
enter
add
push
push
dec
roll
mov
int3
ljmp
ja
icebp
sbb
inc
push
pop
imul
inc
push
adc
in
or
push
jmp
sub
push
sbb
bnd
xchg
or
pop
pop
cwtl
loopne
sbb
sbb
or
pop
pusha
mov
cmpl
data16
mov
and
testb
add
inc
sbb
push
test
ret
push
xchg
or
inc
adc
xchg
repnz
push
lea
xchg
icebp
enter
sbb
pop
dec
test
int
mov
in
push
mov
adc
loope
sar
add
test
xchg
fldcw
xchg
sub
js
mov
rclb
add
std
sbb
push
inc
mov
sub
adc
add
xchg
call
sub
sub
adc
add
adc
sbb
test
dec
loope
loopne
jnp
or
mov
jbe
mov
push
jge
pop
dec
int
pop
dec
pop
and
outsb
test
add
push
adc
vmaskmovdqu
stc
negl
or
lret
add
pushf
pop
pop
add
inc
and
insb
add
incl
ljmp
subb
les
xchg
and
cmp
shrl
cmp
aad
ret
rcrl
and
xchg
sahf
pop
shl
clc
sbb
sbb
xorl
cli
xchg
pop
xor
sub
push
dec
jecxz
jne
testb
mov
sub
cmp
pop
pop
and
test
ret
mov
scas
jp
stos
enter
sbb
xor
mov
add
dec
pushf
sbbl
shl
add
mov
mov
mov
popa
and
push
jge
roll
dec
rolb
mov
shl
jge
push
jle
push
add
push
sub
push
mov
iret
cmpsl
in
jb
dec
rol
mov
jb
jl
mov
call
and
xor
lcall
inc
leave
adc
mov
mov
shrb
scas
cmp
stos
adc
clc
test
test
mov
or
or
in
add
mov
add
mov
and
adc
add
ficompl
mov
add
cwtl
cmp
gs
push
hlt
sub
push
jns
lret
adc
inc
ret
out
popa
pusha
push
hlt
test
pop
dec
or
leave
push
js
inc
daa
pop
fwait
adc
pop
dec
roll
movsb
jno
ret
or
add
mov
inc
or
jecxz
pop
xchg
faddl
and
je
rolb
or
inc
lret
mov
int
enter
nop
lods
sbb
and
xor
and
ljmp
jp
mov
push
call
test
mov
pop
xor
xor
and
cmp
fldl
jl
inc
int3
push
or
leave
repz
insb
pop
inc
hlt
call
adc
jmp
jbe
stos
pop
xor
pop
popa
div
ljmp
std
mov
shrb
shlb
adc
call
enter
fsubrs
sub
jbe
inc
stos
sbb
mov
push
popf
jmp
pop
push
call
push
xor
arpl
add
gs
outsb
jne
pusha
adc
pop
xchg
and
xor
and
add
pusha
mov
frstor
mov
leave
dec
xchg
sub
sub
or
dec
cmp
inc
mov
lea
sub
sbb
add
xchg
and
mov
adc
mov
push
test
inc
or
or
leave
xchg
and
pop
daa
into
loop
imul
mov
add
sub
ficomps
push
js
js
mov
aad
inc
sbb
mov
cwtl
dec
jo
bound
mov
xchg
or
mov
add
or
sub
pop
xchg
nopl
in
add
in
xlat
adc
pop
rcll
xor
and
mov
lock
ret
rcl
in
clc
push
sub
addr16
mov
jnp
pusha
adcb
xchg
xchg
shrl
adc
pop
inc
popf
popf
and
mov
push
mov
bound
in
test
mov
pop
jbe
sub
adc
and
jle
mov
xor
test
adc
mov
shlb
inc
loope
inc
xchg
ds
shrl
pop
sbb
andl
jg
leave
mov
add
push
repnz
adc
pop
pop
rorl
pushf
sbb
shlb
add
dec
je
pop
scas
and
sbb
or
cmc
mov
dec
push
jo
and
sub
xor
popf
pop
and
xor
scas
jp
add
push
test
test
cmpsl
sub
xorl
sbb
loopne
or
sub
or
mov
bound
sti
rcll
outsb
add
cli
or
push
jl
inc
rolb
rcrb
xor
adc
jo
push
cli
or
adc
adc
push
or
jns
cmp
insl
or
push
imul
idivb
xchg
mov
push
mov
fcoml
test
inc
cmp
sub
aas
cmpsb
mov
fnsave
cmp
inc
lret
lret
sub
push
and
jns
inc
adc
mov
sbb
and
loope
or
adc
sub
sbb
lret
rcrl
push
mov
or
cmp
repz
cli
xchg
pop
clc
or
repnz
cmp
sub
adc
shlb
mov
or
push
pop
mov
rcrb
adc
shlb
lock
loopne
pop
adc
je
ret
sub
mov
aam
les
stos
mov
adc
add
nop
inc
clc
cmp
or
cmp
or
ljmp
sbb
add
pusha
movsb
outsb
sbb
and
aad
lods
loopne
leave
pushf
shlb
sbb
or
fbstp
mov
shlb
int
sbb
adc
dec
jmp
loope
mov
sbb
xchg
mov
add
xlat
mov
push
faddl
xor
dec
sub
pusha
and
pop
inc
sub
sbb
lcall
leave
fwait
xor
test
inc
cmp
out
inc
push
hlt
sub
daa
mov
and
dec
sbb
leave
call
test
dec
pop
subb
popa
pusha
adc
enter
cmp
leave
sbb
lret
lock
pop
leave
add
dec
cmpsb
ret
fimuls
xlat
or
xor
cmp
push
add
js
push
outsb
sbb
jmp
movb
lcall
outsb
aaa
cmp
icebp
sbb
mov
mov
push
pop
lds
push
add
pop
mov
mov
mov
stos
test
lock
ljmp
inc
inc
xor
rorl
ret
sti
adc
mov
cmpsb
add
loope
mov
and
adc
mov
cmp
add
dec
mov
inc
dec
mov
aam
push
jb
mov
or
aad
lea
sub
fcoml
mov
pop
cmp
push
and
add
cmc
aam
test
aam
or
push
mov
sub
gs
push
inc
sbb
jg
push
push
mov
vmaxps
mov
push
lods
or
sub
mov
shr
arpl
pop
andb
push
popf
add
pop
ss
add
push
insl
in
push
xor
roll
inc
sub
mov
addb
pop
jo
imul
jg
mov
orb
push
or
pop
out
mov
jae
sbb
mov
pop
sbb
daa
xchg
adc
push
insl
xchg
and
aad
lods
pop
adc
mov
cmp
cmp
int
and
adc
pop
shrl
loopne
mov
adc
cmc
cmp
in
push
or
and
out
leave
lds
xor
xor
mov
cltd
push
add
and
mov
push
or
adc
shll
stos
fldl
push
adc
shlb
inc
xor
and
inc
scas
sbb
xchg
dec
icebp
lcall
push
push
and
dec
mov
sbb
mov
add
mov
sbb
lret
nop
or
cmp
ss
mov
in
mov
fisubrs
repz
inc
pop
lret
loop
add
insb
add
les
imul
test
xlat
add
or
in
cltd
xor
adc
fldl
xchg
sbb
lds
and
add
push
mov
add
add
mov
ljmp
icebp
or
sbb
cmpsb
mov
xchg
shlb
ljmp
sbb
stos
lret
les
filds
cmp
add
pusha
or
jb
cs
sbb
pop
add
dec
push
jb
rorb
cmp
dec
stos
jnp
and
lods
shlb
jmp
or
push
cs
jae
andl
inc
and
xor
rcll
adc
push
inc
mov
sub
xor
sub
jne
pop
lock
mov
cmpsl
shlb
repnz
add
push
add
add
out
subb
mov
push
and
mov
jb
bound
insb
cmp
sub
rorb
subl
lahf
adc
pop
scas
subb
aam
into
push
sbb
dec
adc
aam
sub
adc
adc
add
pop
cmp
pusha
inc
or
add
sub
sbb
lcall
adc
rclb
cwtl
push
xor
add
lock
pop
lods
push
mov
mov
sub
cmpsl
add
pop
mov
or
or
or
roll
lahf
rorb
pop
push
sub
adc
call
inc
push
stos
out
enter
xor
or
rorl
adc
inc
push
mov
sub
aam
add
pop
negb
scas
test
sub
xor
out
sbb
dec
sbb
mov
ljmpw
adc
and
xchg
sbbl
mov
jb
push
push
mov
cmp
inc
and
or
adcl
rcrb
pop
push
test
std
arpl
shlb
stc
adc
mov
add
jb
add
push
and
enter
cmc
pusha
icebp
hlt
jb
inc
call
push
xor
fs
rcrl
cmp
mov
push
or
or
and
sbb
xchg
sbb
popf
insb
xchg
stos
cltd
sbb
fistpll
lret
test
push
stos
adc
and
ret
fdivl
add
adcl
clc
adc
pop
mov
rcll
fnstenv
add
push
mov
jb
dec
aaa
inc
add
xchg
jecxz
cli
mov
jbe
sbbb
mov
add
rorb
test
lods
cmp
inc
dec
aam
in
arpl
xor
dec
adc
sub
push
jo
adc
shlb
movsl
sub
roll
mov
lds
sbb
sbb
pop
rolb
xchg
call
inc
cld
imul
mov
adc
xchg
movb
cwtl
sbb
add
push
push
push
sub
test
xchg
mov
mov
movsb
and
push
and
pop
xchg
push
xchg
es
dec
adc
push
xorb
lods
jle
pop
push
adc
mov
movsl
xchg
mov
shrb
jo
rcrb
cmp
xchg
jecxz
sbbb
shl
xor
jmp
inc
pop
cmp
rcrl
add
push
jl
xlat
dec
lret
inc
orl
repz
out
scas
inc
add
and
inc
dec
push
and
jne
ret
add
adc
sub
mov
or
xchg
sti
mov
adc
and
fwait
mov
shr
pop
pop
adc
shlb
push
cmp
push
sbb
adc
rorl
and
sbb
mov
mov
pop
adc
aam
and
mov
inc
pop
cmc
or
xor
in
dec
ret
aad
roll
xor
or
mov
pop
push
lods
adc
stos
sbb
jo
inc
subb
pop
popf
cmp
fwait
das
ss
push
push
adc
mov
in
mulb
inc
loopne
jmp
xor
gs
lock
push
mov
xchg
mov
sbb
lret
hlt
xor
inc
sbb
test
hlt
lock
rorb
dec
cmp
xchg
out
loope
inc
push
fadd
jbe
sbb
or
or
xchg
or
xlat
leave
addr16
divb
and
sub
adc
push
pop
in
call
push
push
xchg
pop
or
pop
js
sbb
push
mov
nop
test
sti
clc
mov
das
bnd
xchg
call
cmpsl
test
sub
push
add
cs
stos
push
iret
aaa
cmc
push
and
push
hlt
stc
push
fisttps
jmp
fs
loopne
push
cmpb
xor
jp
ret
adc
mov
push
mov
rcrb
xchg
push
push
xchg
jbe
ss
ret
clc
bound
ret
jecxz
out
push
xor
adc
sub
pop
iret
and
mov
enter
repnz
jb
pop
and
ret
push
add
int3
push
lret
pop
mov
lock
xor
sbb
or
mov
xchg
pop
stos
push
add
dec
xchg
xor
push
mov
add
cmp
outsb
mov
or
sub
lret
sub
mov
dec
lock
inc
dec
mov
cltd
pop
mov
rcrb
mov
cmc
inc
and
movsl
lods
mov
push
pusha
sbbb
scas
shrl
fwait
inc
ret
add
movsb
mov
in
loope
sbb
xor
mov
cmp
add
or
adc
inc
mov
insl
sbb
loope
push
mov
jge
pop
insb
mov
adc
mov
lds
dec
cs
adc
ljmp
pop
or
jae
je
add
repz
add
jb
clc
dec
sbb
sub
inc
shrb
add
mov
push
sub
xchg
data16
xchg
adcb
pop
pop
pshufw
sbb
push
into
xor
jo
mov
fwait
ljmp
fimuls
xor
add
add
or
mov
push
nop
add
push
and
lcall
aad
shlb
sarl
sahf
add
cmpsb
xor
call
cmpsb
and
adc
sub
lret
mov
stos
mov
push
stos
sbb
scas
jb
add
push
or
xor
loopne
sub
test
pop
sar
hlt
pop
cmpsl
adc
clc
in
ljmp
push
push
andb
lods
cmp
enter
in
test
push
add
test
push
add
rcl
add
test
or
lods
adcl
cmpsl
pop
rcr
hlt
add
lods
dec
jbe
repz
cmp
push
jle
sbbl
mov
lock
imulb
xor
mov
int
xor
sub
ret
in
jb
add
mov
rclb
inc
and
sbb
test
ljmp
call
shrb
sbb
push
test
inc
or
in
roll
mov
arpl
add
or
or
insl
fwait
pop
mov
ret
mul
call
and
pop
push
add
sub
shlb
ficoml
mov
adc
or
ret
sbbl
scas
adc
inc
mov
mov
lods
loopne
addl
inc
and
cmp
mov
adc
dec
xor
mov
popa
add
push
cmc
mov
jo
add
lock
and
add
cmp
pop
inc
gs
push
jbe
roll
mov
jl
cld
add
and
repnz
imul
imul
push
push
add
mov
push
cltd
dec
add
push
dec
mov
inc
inc
call
sub
sbb
adc
xchg
xchg
mov
adc
add
xor
insl
or
push
adc
insb
adc
mov
xchg
ja
mov
notl
imul
outsl
xchg
add
push
jae
stos
add
xor
rcrl
mov
aad
dec
pop
mov
popf
shll
push
les
out
sbb
or
cmp
int3
or
mov
dec
adc
and
adc
enter
push
pop
sarl
aad
adc
cli
or
xchg
nop
or
lret
sbbb
dec
in
push
push
cmp
sbb
loop
sub
xor
outsb
inc
xlat
lea
cld
push
or
test
les
daa
add
mov
sub
or
dec
sti
leave
xchg
xor
std
rcll
sbb
mov
daa
pop
fists
push
pop
fwait
or
dec
adc
scas
jmp
pop
pop
into
pop
push
pop
or
or
add
push
sub
pop
sub
dec
adc
loope
sbbl
inc
xchg
sub
mov
jmp
ljmp
push
scas
dec
pusha
push
adc
cmp
ror
xchg
and
xor
mov
xchg
add
loop
loope
add
pop
les
sub
rclb
orb
mov
cmc
daa
rcll
or
dec
repnz
negb
pop
in
lret
adc
loope
mov
push
jp
add
int3
dec
adc
and
and
cld
jle
mov
or
fldenv
ljmp
sub
sbb
nop
mov
sbb
push
add
push
pop
add
mov
or
leave
xlat
push
xchg
sbb
add
fsubl
xchg
lret
neg
push
inc
ret
xchg
stos
inc
int
xchg
jmp
cltd
outsl
jmp
pop
push
call
mov
sbb
or
aaa
mov
mov
push
sub
xchg
cmp
bound
loop
xchg
icebp
sbb
xorb
jne
jae
dec
pop
jbe
adc
out
insb
sti
mov
sbb
sahf
sbbb
pop
inc
add
pop
pop
aam
or
push
int
pop
and
mov
add
movups
test
rorb
pop
insl
aam
in
add
cmp
or
pop
adc
cmp
rorl
and
push
pop
aam
aad
push
inc
fcmove
push
fadds
enter
ret
or
cmp
sub
ret
leave
cs
movsl
and
and
mov
add
loopne
ljmp
in
push
call
adc
leave
ljmp
xchg
sub
aad
adc
pop
mov
and
mov
xchg
lret
pop
fwait
sar
imul
popf
or
movsb
enterw
xchg
rcrb
int
subb
je
xchg
mov
push
lock
xchg
adc
inc
cltd
add
cmp
pop
push
add
or
push
push
push
adc
mov
sbb
pop
mov
sbb
mov
daa
ss
jmp
sbb
mov
sbb
sbb
xor
leave
jmp
xchg
lods
fimuls
pop
repnz
test
sbb
pushf
mov
scas
mov
xabort
jne
sub
jmp
stos
sbb
sbb
ret
mov
lret
adc
dec
push
push
insb
inc
cwtl
dec
icebp
xor
mov
sub
pop
dec
jmp
mov
push
mov
push
adcb
push
rcrb
sbb
xor
inc
pop
inc
mov
xor
test
mov
popa
jecxz
out
aam
cli
mov
shlb
lods
push
sahf
adc
clc
pop
adc
adc
sbb
mov
push
mull
sbb
je
pop
xlat
popa
stos
add
push
push
xchg
orb
dec
or
sub
cltd
add
push
push
ret
add
mov
mov
cmp
or
andb
mov
xchg
fmull
push
inc
xor
xchg
jo
pop
cmc
sub
rcll
sbb
movsl
pop
mov
mov
cwtl
mov
sbbb
sbb
dec
inc
popf
sub
push
push
in
test
aas
sbb
sbb
aaa
dec
push
and
sti
or
adc
push
jmp
lret
cmp
inc
stos
mov
push
jmp
js
add
and
pop
inc
ljmp
jp
dec
cmp
shrl
and
lock
pop
pop
pushf
test
adc
inc
call
push
test
mov
divb
cmp
sbb
xor
stos
inc
pusha
xor
lret
and
dec
or
pop
add
adc
pop
inc
js
and
push
nop
mov
push
call
gs
jno
loopne
js
mov
adc
stos
popa
ja
jbe
dec
aad
or
sbb
add
inc
movsl
lods
adc
mov
inc
cld
testb
or
and
jmp
inc
test
jne
mov
mov
add
gs
icebp
mov
push
xor
lcall
scas
sahf
or
mov
stos
pop
dec
out
fisttpll
cmp
inc
pop
pop
rcrb
subb
mov
aaa
cwtl
repnz
cs
xchg
add
in
xor
lods
movsb
lahf
jle
data16
xor
pop
out
push
cmp
mov
sub
ds
pusha
inc
sarl
sbb
addl
adc
adc
jns
dec
iret
sub
push
filds
imul
mov
cmp
xor
rol
adc
fs
sbb
adc
inc
shrb
pop
pop
js
sub
repnz
adc
push
dec
push
mov
or
loopne
sbb
adc
lret
pop
jp
xchg
loopne
scas
ret
movl
inc
xor
add
push
orl
jae
or
push
jmp
insl
fnop
les
sbb
xor
cmp
adc
dec
nop
mov
inc
or
push
roll
or
push
push
push
pop
in
loop
jb
cmp
pop
dec
stos
xchg
jecxz
insl
adc
outsb
decw
js
add
push
push
push
or
or
lods
add
pop
xorl
sbb
push
push
sbb
fadds
cmp
sbb
insl
add
mov
cmp
in
test
ss
movsl
faddl
ret
or
sbb
push
xor
es
pop
inc
xor
out
or
imulb
mov
cmp
add
cmpl
mov
test
orl
call
jb
add
cmp
inc
sbb
or
gs
sbb
sahf
sbb
pop
hlt
outsb
sarl
repnz
test
add
je
sub
fcmovbe
pop
add
stos
addl
mov
add
test
mull
and
dec
mov
inc
inc
mov
push
in
leave
sti
adc
mov
std
push
add
rol
push
ljmp
inc
popf
xor
fs
add
push
lahf
add
add
push
lds
sahf
lret
ret
cmpl
xchg
inc
jb
add
jne
adc
pop
sub
cmpsl
addl
hlt
mov
rcll
js
loop
cmpsl
mov
cmp
add
or
test
jno
push
test
and
mov
push
push
pop
movsl
sub
fiaddl
adc
xor
adc
jge
mov
mov
push
pop
jle
sbb
xchg
inc
fiaddl
or
mov
loopne
and
xor
xor
xchg
rcll
mov
gs
mov
and
adc
jb
push
unpcklps
sbb
std
decl
cltd
rorl
mov
sub
or
sub
bt
cmp
dec
sub
or
sbb
or
pop
arpl
push
ret
jmp
xchg
sub
mov
pop
sbb
adc
pop
jp
and
cltd
mov
int
out
and
rcl
mov
sarb
lea
gs
subb
cltd
int
inc
sbb
es
movsb
jo
adc
rcll
or
xlat
inc
mov
cmp
mov
popf
jb
ret
scas
mov
andb
hlt
ret
fdivs
scas
xor
in
xlat
jmp
sbb
jl
cmp
imul
mov
dec
adc
cmp
xor
test
cmp
or
shl
daa
test
dec
xor
push
jne
mov
push
dec
and
or
sub
push
inc
xor
rol
sbb
stc
ss
loope
call
adc
loop
movsl
enter
es
xchg
ret
xor
xor
xor
xchg
or
rcll
push
pop
add
or
int
sbb
add
pop
pop
call
mov
add
dec
or
mov
ficoms
adc
dec
mov
sub
inc
out
test
loop
fsubs
add
aad
js
xchg
sbb
jle
repz
fs
adc
lods
or
into
cmpsl
push
inc
test
ja
enter
mov
add
jbe
icebp
pop
sub
fcoms
add
push
loope
aam
sbb
jne
aad
inc
cmp
int3
sbbb
insl
or
add
dec
mov
cmpsb
mov
mov
pop
inc
cmp
sub
mov
and
sbb
aaa
das
lock
xor
sbb
jae
adc
sbb
xor
adc
mov
sbb
mov
dec
les
cmp
mov
aad
or
sbb
or
mov
cmp
push
loopne
imul
loopne
or
pusha
inc
cmp
mov
or
in
mov
pop
xor
push
push
iret
push
jecxz
int
dec
enter
insb
lea
or
and
sub
pop
push
sbb
inc
inc
rorl
rol
add
jl
pop
movsl
and
mov
or
inc
out
data16
dec
xchg
orl
test
sub
mov
jo
add
push
mov
cmp
add
mov
sbb
adc
lcall
into
add
test
sarl
mov
push
dec
adc
outsb
jg
sub
sub
dec
xlat
fmuls
out
push
add
imul
and
push
rorl
mov
insb
sub
rolb
test
out
cmc
shlb
push
scas
and
jae
or
adc
push
cmpl
nop
imul
sbb
cmp
mov
add
test
test
call
push
sub
out
inc
cmp
rcll
sub
add
inc
mov
bswap
jne
shrl
sub
fstps
mov
mov
bound
xchg
sub
packssdw
pop
shll
push
les
flds
cli
lret
cmc
cmp
subb
sbb
pusha
mov
lock
out
divl
mov
push
fwait
sub
push
call
push
popf
add
jle
or
mov
sbb
sbb
xlat
mov
sub
cmc
pop
xor
dec
mov
cmp
adc
jne
sub
inc
sub
sbb
inc
mov
fimuls
aad
sbb
insl
pop
or
push
push
add
sbb
add
outsl
or
mov
rcrl
push
pop
int3
pop
inc
mov
inc
inc
mov
cmp
shll
into
test
sbbb
in
enter
ljmp
or
and
and
in
adc
and
test
jo
xor
xor
loope
imul
add
movsl
aad
pop
inc
iret
shl
pop
add
enter
adc
push
xor
stos
adc
cmpsb
xchg
movsl
clc
and
jne
mov
mov
psubd
test
push
adc
or
daa
adc
jo
sbb
adc
push
pop
aad
sub
adc
adc
repnz
test
movsb
lret
shrb
sbb
cmp
je
adc
cmp
test
roll
andb
stos
inc
mov
adc
into
dec
pusha
lods
call
push
out
leave
push
xor
inc
outsl
insl
insb
cs
mov
sub
je
sub
into
sub
cli
and
je
mov
inc
or
in
inc
xor
and
sbb
push
adc
dec
adc
sbb
enter
push
mov
orb
xor
mov
leave
mov
mov
jmp
ljmp
adc
loopne
frstor
push
add
pop
arpl
or
add
les
std
rcr
rorl
and
adc
shll
scas
sub
dec
sbb
xor
lea
add
mov
pop
sbb
xchg
pop
cwtl
jp
repnz
in
xchg
push
and
xor
sarl
pop
xchg
prefetch
pop
mov
out
gs
aam
pusha
inc
xor
jnp
mov
repnz
scas
pusha
lock
jge
cmpsl
adc
ljmp
daa
loope
mov
and
push
pop
iret
cmpsb
pop
test
jno
adc
xchg
mov
adc
add
and
je
push
or
push
lods
mov
sbb
inc
push
fildl
mov
add
mov
punpckhdq
adc
adc
inc
mov
adc
mov
sahf
ds
mov
push
sub
shl
mov
or
or
push
gs
mov
pop
add
dec
mov
lcall
or
adc
add
mov
les
dec
test
call
or
xor
jle
and
xor
in
pop
pop
cmp
cs
and
fisttpll
stc
hlt
sub
push
addr16
push
mov
out
pop
push
cmp
adc
rorb
scas
popa
test
or
les
pop
lret
rolb
fsubrs
jo
dec
mov
loope
push
xchg
xor
inc
cmc
ret
sbb
or
mov
cmp
or
mov
pushl
lods
std
xchg
mov
push
scas
or
jmp
adc
stos
dec
push
clc
sbb
inc
aam
mov
les
sbb
push
cwtl
sbb
add
xor
push
leave
in
ret
or
pop
mov
sti
push
xor
inc
gs
orb
sub
and
push
lret
test
repz
or
or
add
cs
inc
xor
movsl
dec
ret
addb
mov
add
push
lea
imul
mull
sbb
jle
bound
sub
cmpsb
mov
or
sbbb
aas
icebp
adc
inc
dec
fadd
mov
pop
rcrl
rol
lock
mov
leave
pop
pop
push
inc
xor
inc
adc
in
add
sbb
push
sub
addb
stc
loope
lret
inc
xor
push
push
sub
mov
cmp
or
push
push
add
sbb
mov
sbb
leave
pop
int
add
outsb
or
daa
lret
sbb
stos
add
aaa
addb
add
fchs
jne
int3
jo
bound
leave
inc
ja
or
sub
adc
aas
add
into
push
adc
fcomp
and
es
mov
lea
xchg
xchg
test
add
and
test
mov
sbb
adc
adc
mov
fwait
pop
stos
inc
scas
and
aad
adc
mov
popf
sbb
mov
es
imul
push
pushf
or
mov
sub
dec
rcl
jl
cmp
inc
mov
pop
adc
mov
pop
jl
sbb
inc
daa
adc
call
test
pop
pop
cmpsl
inc
pop
lea
mov
ret
inc
stos
cmpl
and
xor
iret
cli
outsb
call
int
rorl
out
sub
sbb
or
subb
adc
and
sub
inc
leave
jg
mov
popf
scas
lds
lcall
mov
mov
push
lret
or
aam
add
sub
adc
pop
mov
push
jno
test
add
ret
les
mov
adcb
adc
sub
mov
or
pop
add
mov
xchg
xor
cmpsl
add
mov
or
pop
mov
popa
jae
adc
repnz
dec
aad
push
loop
loope
out
add
add
xchg
dec
mov
and
movsl
movb
mov
cmp
leave
inc
je
enter
mov
lds
dec
adc
add
inc
scas
and
adc
add
icebp
aas
call
add
fidivl
sbb
aam
lods
adc
mov
push
push
or
inc
les
fisubl
int
xchg
cmp
mov
cmp
in
stos
ret
or
add
add
mov
ds
push
push
ret
dec
in
push
sbb
pop
inc
sbb
dec
sub
push
dec
mov
inc
mov
xchg
cmp
hlt
pop
je
lret
pop
xchg
jmp
out
imul
pop
ljmp
cwtl
pusha
add
aad
mov
or
and
add
pop
cmpb
xor
jp
mov
cmp
push
add
mov
outsl
sbb
enter
xchg
repnz
push
xor
in
push
push
cli
jno
add
test
sub
adc
pop
lock
mov
pop
je
add
clc
adc
dec
inc
rorb
inc
pop
jmp
dec
mov
sbb
nop
out
fcompl
or
repz
cs
xchg
mov
imul
mov
inc
in
nop
out
stc
sbb
xchg
mov
in
jp
aaa
loopne
and
sbb
push
ret
sub
mov
mov
sbb
sub
xor
mov
cmp
pop
inc
stos
push
pop
fcmovb
push
sub
pop
push
test
mov
add
or
loop
stos
push
push
or
mov
and
sbb
cmp
xchg
jo
push
test
pop
lea
scas
xchg
arpl
rclb
je
push
push
outsb
fstpl
mov
or
push
mov
mov
shr
inc
or
ret
xor
pusha
mov
rcrb
push
ret
sbb
add
add
jp
mov
fisttps
push
push
clc
jp
mov
push
aas
add
mov
inc
fmuls
jno
fcomps
add
jnp
sub
add
mov
movsb
add
in
adc
xor
and
es
jo
adc
jb
push
push
fisttpl
sub
mov
fadds
and
jg
stos
xor
shll
add
sbb
or
mov
adc
dec
mov
or
jo
cwtl
and
test
mov
adcl
lock
dec
mov
sbb
rolb
add
mov
xor
push
cmp
test
ret
push
add
jo
into
mov
inc
mov
fadd
and
adc
cmp
lahf
ret
or
and
add
mov
ret
cmp
inc
lea
rclb
mov
gs
popf
dec
xchg
dec
ds
pop
shrb
xchg
popa
mov
pop
pop
add
test
out
xor
or
inc
in
add
out
imul
sub
xlat
data16
sbbb
sub
icebp
scas
push
insb
push
jle
ss
and
or
jb
sbb
mov
or
push
jns
sub
mov
push
ret
dec
or
sahf
add
or
cmpps
int3
mov
mov
stos
cmc
adc
jb
rcrb
pop
addr16
mov
add
mov
scas
shrl
subl
and
into
push
or
xor
add
push
insl
pop
sar
inc
push
sbb
or
aad
jo
ret
add
pop
dec
xchg
testl
cltd
push
sbb
sbb
push
aam
or
jbe
cmp
cmpsb
nop
icebp
xor
nop
xchg
add
push
xchg
mov
mov
xchg
adc
push
push
out
scas
cli
rolb
sub
in
clc
addb
repnz
nop
rorl
sarl
fisttpl
xchg
stc
and
data16
pop
daa
push
sbb
push
pop
scas
or
cmp
mov
cmp
scas
adc
mov
cmpsl
or
mov
out
xchg
fdivrs
xor
mov
and
add
rcll
cmp
imul
orl
lret
dec
mov
insl
cmpsb
aad
push
push
cmp
lods
loopne
mov
add
mov
rolb
or
dec
jp
pop
mov
cmp
xchg
lds
inc
jmp
sbbb
mov
mov
add
xor
sub
xchg
fwait
push
test
je
lcall
scas
sbb
adc
dec
jns
inc
dec
inc
add
xchg
add
jo
lret
push
cmp
movsl
xor
adc
sbb
icebp
add
cs
loopne
mov
mov
cmp
addb
test
rorl
xchg
xor
rorb
test
inc
loopne
add
repnz
jno
testb
scas
push
imul
jns
repnz
stos
or
push
push
pop
xchg
movsl
cmp
or
pop
add
into
push
push
add
or
xchg
mov
divl
shlb
inc
mov
add
push
xor
fisttpll
cmp
hlt
xchg
mov
adc
add
mov
push
test
adc
xor
inc
inc
arpl
mov
add
add
cmpsl
push
pop
test
stos
es
push
add
jge
sbb
mov
mov
jge
push
dec
sbb
sub
fldl
das
or
push
push
int3
adc
ror
inc
push
ret
sarb
xchg
xor
ffreep
adc
shl
sub
jmp
scas
shlb
hlt
sarb
add
dec
andb
test
adc
xor
lret
xor
popa
adc
adc
sbb
jge
adc
push
mov
xor
daa
push
adc
movsb
cmpsl
cmpsl
push
fwait
into
push
inc
xor
cmpb
lea
jns
and
test
add
xchg
out
rclb
mov
sbb
mov
mov
mov
cmp
outsb
pushf
out
imul
sbb
addb
test
enter
sbb
ljmp
dec
adcb
lahf
lods
lret
divb
push
adc
mov
daa
and
add
enter
jp
es
ret
xor
add
popa
adc
sub
xchg
or
outsl
or
inc
jne
mov
pop
lds
lds
cmp
mov
hlt
xchg
movsl
lock
mov
xchg
sarb
mov
out
pop
mov
add
scas
jo
imul
js
and
dec
mov
pop
scas
loop
js
push
dec
gs
pop
pop
aad
lods
mov
push
sbb
inc
icebp
dec
and
cmp
gs
repnz
mov
fst
rolb
jo
mov
pop
and
sar
stc
ja
sub
test
xlat
add
sti
shl
fldcw
push
dec
out
pop
test
cmp
dec
lods
adc
sbb
aad
pop
mov
add
pop
test
adc
push
push
and
add
sub
mov
and
add
pop
push
lods
rcrb
bound
xor
imul
shlb
push
xor
mov
and
add
fldenv
push
mov
out
sbb
push
or
add
xchg
add
outsb
sub
subl
push
push
cmp
or
adc
roll
or
int3
fs
icebp
pcmpgtd
shll
inc
push
dec
lret
push
movsb
das
shlb
faddl
stos
mov
push
add
test
rclb
fsubrl
pop
imul
sub
push
orb
inc
enter
mov
adc
mov
into
cmpsl
jne
dec
pushf
add
pop
shrb
lar
sub
xchg
pop
pusha
push
mov
add
stos
daa
fmuls
mov
jbe
lea
inc
and
test
negl
add
leave
or
lock
lcall
pop
adc
pop
inc
jne
lcall
mov
icebp
std
shrl
push
pop
pop
push
les
jp
sbb
cmp
add
out
dec
mov
sub
push
adc
cwtl
push
jl
test
rcrb
add
xor
lea
notb
adc
add
int
xor
pop
cltd
pop
cmc
loopne
ret
test
lret
push
fistps
fcomip
sbb
xchg
pop
bound
cmpl
add
lea
sbb
or
mov
add
sbb
or
mov
push
dec
pop
push
in
dec
xchg
add
xor
test
cltd
aas
add
push
or
jge
or
ja
xor
incl
xchg
sub
pusha
xchg
mov
xor
dec
dec
jne
icebp
adc
adcb
cmp
cmpsb
fistpll
ret
add
push
adc
jp
and
mov
mov
pop
push
push
icebp
push
and
sub
mov
test
pop
and
pop
mov
adc
mov
push
or
push
add
movsb
bound
paddw
ljmp
push
inc
test
add
clc
pop
push
shlb
je
dec
test
out
into
and
push
ljmp
lahf
aas
fwait
lods
push
js
rorb
dec
sub
jne
insb
sbb
mov
lret
inc
pop
test
mov
sub
add
add
add
lock
and
xacquire
rcrb
inc
jp
mov
mov
roll
cmp
mov
xor
mov
jg
cmp
inc
into
lods
enter
int3
icebp
mov
inc
pop
inc
xchg
dec
sbb
inc
push
sbbb
cmpsb
push
leave
aam
or
outsb
pop
sub
inc
mov
mov
out
icebp
add
pop
daa
dec
ret
out
mov
insb
int3
lret
pushf
and
push
cmpb
push
push
pop
addl
xor
stos
jb
sbb
cli
push
dec
andb
rorb
add
sete
mov
sbb
pop
arpl
ret
dec
adc
jmp
incb
inc
shll
nop
ds
inc
add
icebp
cmpsb
dec
sbb
int
adc
aam
inc
adc
inc
lahf
faddl
movsl
sbb
leave
stos
loopne
mov
cmp
orl
mov
mov
add
pop
pop
push
add
icebp
jge
movsl
js
sbb
fimuls
cmpsl
mov
inc
mov
inc
jno
push
and
jae
adc
add
push
push
or
mov
arpl
xor
push
fucomp
mov
add
dec
xchg
decb
add
add
shll
or
in
les
pmuludq
dec
shr
sub
popf
push
cwtl
push
jg
imul
sahf
or
movsl
inc
mov
add
sbb
call
push
xchg
lret
sbb
cwtl
and
push
stos
sub
ficoms
cmc
cmp
inc
cmp
cmpsl
lods
rorl
jne
js
test
or
sub
movsb
sbb
or
push
push
cld
lret
sub
pop
addr16
sbb
clc
stos
or
out
and
leave
pop
adc
add
sub
fadds
push
mov
stos
xchg
cmp
sub
or
stc
cmp
add
mov
mov
call
jp
mov
xchg
stos
jecxz
push
xor
cmp
lret
lcall
sub
inc
jae
ret
push
and
pushf
and
subb
adc
pop
sub
cs
dec
pop
adc
add
jne
xchg
pusha
xor
push
add
xor
rcl
adc
inc
push
and
push
rclb
repnz
lret
pop
sub
cmp
sbb
or
adc
xchg
stc
mov
mov
test
add
mov
orb
jbe
push
leave
push
lock
lods
adcb
call
into
xchg
mov
xchg
xor
xchg
mov
in
push
daa
sarb
fdivl
add
outsb
arpl
or
ja
bound
outsl
adc
test
cmp
sbbl
sbb
or
cmpsb
push
jno
arpl
jne
inc
popa
jb
cmp
ficoms
rorl
loope
and
rcll
roll
mov
xor
push
movsb
push
mov
push
jge
sbb
shl
inc
jmp
push
out
dec
inc
mov
test
adc
push
pop
push
add
inc
ljmp
add
mov
and
add
stc
inc
push
or
pop
add
pop
fsubrl
or
adc
adc
cmp
shl
or
fisttpl
and
leave
mov
lcall
add
xchg
sbb
ljmp
jl
shrb
push
cwtl
sub
sub
dec
jge
imulb
mov
cmp
pusha
mov
adc
cli
shll
js
clc
push
sbb
leave
dec
sub
inc
or
ret
loop
gs
sub
in
sbbb
mov
push
push
rclb
adc
push
sub
shrb
push
mov
mov
rolb
sub
fistps
mov
rolb
cmc
adcb
lea
or
js
xchg
pop
popa
or
and
lret
adc
ret
sbb
xchg
test
mov
mov
jge
dec
test
aam
inc
mov
mov
mov
enter
jge
push
dec
push
and
sbb
stos
pop
clc
rorl
add
test
mov
adc
xor
scas
mov
jns
sbb
adc
or
jmp
cmp
comiss
push
xor
add
sbb
pop
daa
stos
adc
add
lds
mov
cmp
cmp
sarb
push
sub
les
mov
outsb
mov
in
or
add
rcll
add
xor
rorl
cmp
cmp
adc
xchg
das
xchg
mov
push
jle
push
mov
paddd
or
scas
cwtl
icebp
jge
dec
mov
xor
mov
adc
cmp
call
or
addb
push
xchg
sbb
inc
push
xchg
stos
call
cmp
dec
or
and
rcr
js
adc
out
or
les
push
insl
and
sbb
insl
dec
insl
add
push
or
push
and
push
in
xor
jo
and
std
xor
rclb
scas
pop
sbb
push
mov
jno
ss
add
inc
arpl
xor
int3
ret
shrl
frstor
enter
ret
push
gs
loope
push
jb
cmovae
cmp
shl
into
in
clc
adcb
rcrb
add
sbb
push
bound
mov
cmp
popf
bound
loop
push
push
dec
gs
adc
push
rcrl
les
mov
add
push
push
jne
int3
sub
sbb
outsl
test
test
inc
mov
push
adc
push
arpl
mov
mov
adc
data16
stos
clc
rorl
insl
adc
dec
in
rcl
scas
jg
aam
out
or
push
xchg
outsb
and
add
aam
jo
cmp
subl
fcmovbe
or
andl
push
dec
imul
jg
mov
add
mov
cmp
push
mov
mov
add
dec
mov
cmp
loopne
and
lods
lds
and
sub
mov
stos
stc
rol
jbe
mov
or
iret
and
add
or
cmpl
out
sub
ss
pop
xchg
or
mov
cmp
inc
mov
stos
test
and
mov
cmp
mov
or
es
xchg
or
ret
cld
ljmp
add
add
lea
ja
and
mov
push
dec
pop
xor
adc
inc
push
pop
dec
shlb
add
xchg
dec
fiaddl
add
aam
push
loope
push
ljmp
inc
cmp
out
ret
and
xor
sub
repz
bound
cmp
pop
jp
or
push
dec
cmp
movsb
pop
shl
inc
aam
cmpb
popa
jl
or
mov
mov
jnp
addl
dec
mov
pop
das
mov
mov
or
inc
cmp
add
xchg
push
shrl
adc
cmp
lods
sub
mov
jo
in
mov
jge
inc
test
sub
jnp
mov
icebp
leave
movsb
movl
ss
push
push
push
and
inc
cmpsb
sub
add
dec
mov
or
subl
mov
xchg
stos
dec
cwtl
stos
pushf
ret
mov
stos
adc
daa
inc
ret
cmp
mov
inc
popf
subb
add
push
jnp
scas
pop
out
pop
and
mov
lcall
cmp
sbb
jo
leave
ret
mov
je
rcll
hlt
test
jmp
add
add
test
pop
adc
sbbl
xchg
fwait
lock
and
push
add
and
fsubl
stos
add
insl
jl
dec
xor
aas
jns
dec
mov
mov
adc
bound
cltd
xor
mov
insb
shrb
push
rolb
and
or
je
push
data16
lock
dec
add
xchg
fcmovb
mov
dec
mov
ja
aaa
mov
call
outsl
lods
icebp
xor
mulb
or
out
lret
jecxz
inc
push
jmp
lret
cltd
jo
sbb
cmp
es
xchg
xchg
jl
mov
or
mov
lret
inc
out
nop
imul
push
dec
pop
cltd
mov
pop
add
xor
push
arpl
aam
push
lret
lds
sub
and
sbb
cmp
sbb
mov
jmp
dec
rcll
pop
add
or
push
mov
mov
push
pop
int
roll
and
shrl
mov
inc
xchg
imul
loope
sbb
pop
adc
cmp
cli
test
pop
repz
clc
jg
pop
aas
scas
jecxz
jno
out
sar
xor
int3
push
mov
js
lahf
stc
and
adc
push
push
xchg
mov
pop
mov
gs
adc
dec
into
lds
dec
aad
xor
adc
sbb
call
scas
lahf
sbb
je
lock
sub
shlb
add
lea
je
daa
pop
rcrl
pop
test
call
add
or
sbb
add
add
xor
int3
adc
stos
push
add
push
movsb
notb
mov
inc
incb
stc
aad
xlat
push
or
adc
mov
cli
bound
or
movsb
leave
outsb
scas
cmp
lcall
cwtl
or
sbb
lods
add
mov
pop
mulb
xlat
call
add
in
icebp
push
std
mov
xchg
push
cwtl
push
popa
xor
and
popf
add
jl
loope
mov
insl
or
push
xchg
stos
inc
cld
push
adc
sbb
lds
lcall
pusha
adc
sbb
jo
movsb
clc
das
icebp
ds
mov
mov
adc
mov
xchg
jg
pop
mov
sbb
pusha
aad
or
sbb
cmp
imul
mov
rorl
jl
dec
cwtl
jo
testb
test
imul
rcrb
push
push
push
mov
push
in
and
adc
jnp
sahf
stos
in
pop
fcmovnb
incb
jbe
push
mov
dec
out
mov
inc
lret
ljmp
inc
out
sbb
test
sub
sbb
scas
mov
dec
inc
in
sbbb
clc
add
mov
pop
fnstcw
push
push
add
and
mov
or
cmp
out
icebp
cld
int3
and
mov
iret
icebp
sbb
push
adc
int
sbbb
mov
push
test
test
sbbl
es
add
aad
test
shrl
cmp
pushf
push
jnp
les
sbb
adc
add
push
scas
pop
aad
adc
fisubl
test
insb
mov
pop
and
mov
pop
gs
cmp
add
cmp
and
inc
fsub
icebp
add
sarl
js
mov
into
mov
fldenv
or
gs
call
xor
in
lea
add
dec
pop
or
faddl
das
lcall
xor
or
adc
aad
mov
xor
adc
mov
sbb
jbe
sub
fildll
mov
inc
mov
and
xchg
and
sarb
cltd
and
add
loop
jmp
lcall
push
sbb
pusha
clc
adc
mov
repz
add
outsb
mov
jmp
add
jno
add
or
sbb
clc
lret
shl
xor
popa
xlat
dec
je
mov
insb
sbb
sub
sbb
into
push
aam
cltd
fiadds
push
into
loopne
lds
and
mov
add
jecxz
adc
insl
inc
inc
mov
sub
ds
imul
sub
cmpsb
sbb
push
sbb
mov
xor
mov
sub
or
nop
push
jns
in
mov
xchg
lods
into
xchg
mov
push
push
adc
scas
pop
pop
cmp
mov
jl
push
inc
adcb
and
add
jne
mov
ret
ret
adc
and
fidivs
loopne
dec
ds
push
push
movnti
xlat
pop
gs
jo
adc
repz
sbb
add
bound
in
icebp
out
js
nop
inc
add
and
adc
jo
add
xchg
or
rolb
movsl
stos
sbb
push
shl
stos
inc
sbb
sbb
and
push
push
or
xchg
pop
loopne
inc
xchg
stos
testb
inc
shlb
inc
out
push
ret
daa
int3
sub
push
mov
lret
rorl
or
inc
push
rcrl
xchg
mov
stos
xorb
shl
sub
sub
or
repnz
js
or
sub
cmp
adc
xchg
push
xchg
addr16
push
push
sbb
addb
xor
and
out
out
jne
or
les
icebp
mov
push
jne
daa
adcb
jecxz
mov
stos
test
push
loope
xor
cltd
mov
mov
cli
mov
pop
shrb
and
lea
sub
and
mov
pop
cmp
or
or
mov
stos
jb
sbb
mov
push
jne
add
xchg
roll
or
adc
maxps
inc
push
dec
iret
xchg
adcl
sbb
xchg
sbb
push
shlb
sbb
ret
arpl
mov
sbb
mov
imul
cmpsl
int
ret
adc
lea
add
pop
js
mov
dec
stos
out
rorl
and
call
xor
add
adc
and
cmp
push
mov
pop
lret
dec
insl
daa
or
inc
stc
fucomip
jo
mov
and
sar
mov
add
fcom
sbb
lods
sub
lahf
mov
push
push
lock
std
nop
cli
pop
push
inc
loopne
rolb
int
sbb
shlb
push
push
or
inc
pushf
leave
sbb
mov
cltd
dec
out
mov
repnz
divl
add
push
cmp
sbb
pushf
lret
adc
xor
sub
pop
data16
push
dec
sbb
call
dec
mov
push
sbb
push
and
repnz
insl
jo
sub
pop
push
add
add
mov
stos
scas
test
aam
mov
push
cmp
add
outsb
add
fs
test
dec
cmp
xorb
sub
cmp
push
out
pop
mov
jl
dec
subl
add
outsb
js
sbb
dec
xor
adc
ds
add
setp
mov
dec
rcrb
push
sub
sbbb
repnz
push
push
sbb
cmp
repz
leave
or
popf
sbb
mov
xor
sti
scas
mov
pop
fwait
std
les
xchg
sbb
xor
xor
or
shll
aad
jecxz
cmc
xor
pop
cmc
mov
push
push
push
lods
inc
pop
pop
xor
mov
sbb
adc
push
je
call
mov
xchg
bound
or
mov
std
leave
les
push
sbb
pop
cmp
pusha
lcall
or
mov
pop
lcall
loopne
xchg
roll
call
mov
lret
inc
imul
xor
test
pop
mov
mov
movsb
xlat
pop
add
sti
and
push
add
addb
inc
aam
hlt
xchg
mov
ljmp
in
xchg
call
sbb
xor
scas
nop
mov
mov
and
stos
fidivl
popa
lret
sub
push
sub
xor
pop
rolb
bound
scas
shl
mov
imul
clc
sahf
and
sub
pop
jg
lcall
cmovne
xchg
inc
addr16
adc
pop
and
mov
jp
mov
or
mov
jb
pusha
inc
aas
mov
ret
hlt
mov
pop
push
sbbl
stos
add
mov
pop
adc
and
adc
mov
or
in
repz
cs
mov
in
pop
or
add
negl
es
mov
and
fldenv
or
inc
int3
lock
arpl
xor
xchg
mov
dec
enter
fimull
dec
je
popa
mov
xchg
push
mov
push
jne
push
jnp
adc
jle
movsl
nop
ss
xchg
adc
scas
mov
in
inc
and
xchg
adc
xor
scas
sub
js
sub
mov
jo
mov
cmp
add
jb
stos
push
sarl
inc
adc
push
enter
outsl
mov
pop
enter
and
sbb
ret
jne
das
stos
and
inc
xor
jb
sahf
or
cmp
cmc
in
jae
shlb
inc
adc
rol
jno
adc
and
mov
shll
addr16
lret
pusha
sbb
jne
push
inc
mov
push
out
push
test
and
sbb
add
adc
add
push
or
xlat
xor
adc
mov
add
adc
mov
and
pop
loope
les
ficoml
jg
dec
inc
cld
aam
pop
sbb
sub
je
cmp
out
sub
scas
fsub
aad
mov
icebp
sub
aam
test
pop
add
xchg
dec
repnz
es
push
add
lret
cmpsl
test
xchg
pop
add
add
dec
push
dec
cmp
mov
rcll
mov
push
mov
or
mov
push
cmp
xchg
subl
ret
mov
nop
jg
pop
push
je
loop
add
mov
shrl
clts
cmp
and
inc
push
scas
out
mov
sub
mov
stos
jb
or
xchg
push
xchg
aad
inc
xchg
repnz
add
pop
test
fwait
sbbb
inc
dec
arpl
jg
xlat
jp
enter
enter
sbb
lcall
adc
lahf
xchg
adc
andb
test
in
jl
enter
mov
pop
inc
out
add
test
push
add
pfcmpgt
fldcw
push
test
stc
pop
xor
es
add
mov
out
add
pop
test
sub
scas
add
andb
adc
les
cltd
lcall
add
mov
lock
lods
pop
or
subb
ds
stos
ss
add
xchg
xor
test
shl
sub
lock
int
subb
mov
push
sbb
incl
jns,pn
add
sub
push
push
and
mov
shrl
push
pop
rcrb
shlb
mov
popf
add
rolb
in
cmp
inc
jnp
movsl
movsb
jp
iret
sbb
add
ret
sub
hlt
in
ljmp
jnp
pop
pop
arpl
sbb
js
adc
inc
jne
mov
xor
ljmp
iret
test
xor
or
push
mov
push
test
mov
jnp
inc
inc
ja
out
sub
or
mov
xor
adc
out
loopne
or
or
dec
rol
pop
add
out
add
aad
loope
add
outsb
arpl
mov
push
adcb
sub
sbb
sub
test
scas
pop
lahf
adc
jb
pop
roll
adc
ret
xor
pop
push
je
icebp
rcrl
shlb
stos
inc
add
pop
inc
jl
pop
xor
mov
push
jns
inc
xor
sbb
push
lock
pop
push
inc
enter
sbb
movsl
cmp
mov
rol
loope
addl
xor
sbb
loopne
popa
ret
push
inc
add
sbb
or
in
call
loope
xor
mov
inc
bound
out
or
cmc
pop
pop
mov
adc
cmp
add
mov
push
or
scas
ret
sbb
sub
adc
adc
call
adc
jmp
sbb
or
and
pusha
mov
or
inc
lods
js
jo
shrl
rolb
insl
rol
sbb
push
push
sub
sub
sub
mov
cmp
fadd
out
or
and
adc
mov
inc
sbb
cwtl
lods
rorb
mov
cwtl
shr
and
addr16
sbb
stos
push
cmp
sti
stos
inc
push
and
mov
leave
dec
inc
inc
jp
inc
subl
pop
movsb
sub
popa
sbb
xor
adc
add
add
adcb
pop
ficompl
and
sub
mov
cwtl
lea
inc
sub
pop
out
inc
js
shl
ljmp
mov
sbb
adc
outsl
dec
pop
daa
mov
push
pop
stc
push
les
jb
popa
cwtl
das
jp
mov
repnz
adc
jp
cmovo
repz
loopne
cmp
sub
rcrb
rdmsr
enter
int
mov
ret
sbb
push
push
jae
js
nop
cmp
sbb
push
scas
ret
sub
outsl
adc
in
repnz
sub
xor
mov
mov
test
mov
or
mov
lcall
and
outsl
test
mov
lock
adcb
aam
adc
jb
out
push
test
hlt
ret
ret
pop
mov
sti
ret
and
sbb
loop
mov
adc
xchg
adc
test
cwtl
pop
xchg
xorb
lds
aad
test
in
cmp
sbb
arpl
imulb
enter
inc
sbbl
shlb
call
shlb
pop
sub
mov
adc
dec
sbb
sbb
adc
push
and
adc
lcall
sbb
test
adc
xchg
xor
es
jecxz
inc
xchg
inc
loope
add
adc
repnz
popf
cmp
xor
inc
dec
sarb
rolb
sbb
push
sbb
adc
rcll
iret
push
inc
fistl
gs
adc
push
insb
push
pop
leave
mov
mov
shlb
in
rcl
push
sbb
push
stos
pop
das
aad
adc
dec
mov
sbb
push
pop
sub
sub
xor
test
lods
mov
mov
pop
push
in
push
subb
pop
arpl
rcll
rorb
in
inc
mov
lea
movsb
xchg
and
shl
push
add
call
push
icebp
or
fisubrl
push
jle
fs
rclb
or
lcall
rorb
aas
xorl
xchg
sub
sub
pmulhuw
ror
outsb
hlt
mov
cmp
or
sub
rorl
xchg
inc
lods
aad
outsb
call
aad
push
subl
push
test
pop
adc
int3
sbbb
mov
sar
pop
cmp
xchg
lods
movsl
pusha
addb
roll
ret
or
adc
mov
push
xor
inc
adc
popa
out
or
cli
orb
or
and
push
mov
pop
adc
cmpb
add
or
mov
and
mov
xchg
mov
sub
adc
or
pop
sbb
add
bound
into
xchg
test
ret
dec
pop
push
movsb
cs
shll
xor
dec
and
rolb
and
mov
jne
mov
addl
inc
insl
adc
mov
jmp
mov
popf
push
icebp
push
and
xchg
push
cmpsb
sbb
call
add
push
and
testl
adc
jmp
mov
jo
mov
clc
lock
inc
ljmp
sub
push
sarl
rol
push
jecxz
imulb
and
test
sub
nop
mov
or
outsl
ret
mov
or
add
pushf
sub
push
pop
dec
jge
lock
pop
push
mov
and
xor
ret
push
push
push
xchg
sbb
out
and
dec
xor
inc
add
aas
jecxz
mov
sbb
je
xor
or
test
ret
sub
and
aaa
inc
je
add
movsl
mov
dec
push
push
movsb
stos
dec
aas
aaa
mov
imul
add
add
das
ret
sarl
stc
aam
pop
jl
push
cmp
scas
fwait
pop
sbb
xchg
add
sbb
popf
imul
sbb
inc
jo
or
jl
adc
rclb
sub
pop
inc
mov
add
fsubl
dec
or
add
addb
imulb
jb
cmc
cmpsb
sbb
inc
sub
popf
and
andl
adc
or
cmp
jne
mov
rorb
dec
sbb
add
stos
or
fisubs
push
mov
mov
dec
mov
sbb
popa
and
sti
scas
loopne
test
js
xchg
mov
adc
adc
mov
mov
rolb
jo
inc
push
shll
mov
and
cltd
test
cs
les
ret
add
mov
jle
shrl
mov
pop
or
notb
cmpsb
dec
sbb
jmp
fcoml
xor
add
add
stc
or
xor
inc
fucompp
aam
xor
mov
lds
push
push
shrl
test
mov
daa
into
or
mov
ljmp
xchg
add
jb
dec
add
jmp
or
add
adc
ror
rcrl
icebp
sub
rcrb
dec
xchg
loope
pusha
rcll
push
stos
cltd
add
xchg
push
push
insb
inc
and
inc
jp
cwtl
mov
xchg
ret
push
mov
sub
in
mov
fcoms
loope
and
sbb
sbb
loopne
rolb
mov
and
push
ret
mov
cmpsb
rolb
shlb
push
clts
in
mov
sbb
mov
cmp
adc
mov
sbb
fcoml
mov
fsubl
adc
lea
xchg
push
popa
jecxz
inc
mov
adc
push
and
pop
loopne
dec
leave
pop
popa
push
jno
xchg
jge
pop
mov
out
aam
mov
call
inc
fs
sub
add
add
shlb
mov
outsl
sbb
xchg
test
add
sub
add
add
adc
add
bt
mov
mov
shlb
in
inc
pop
cmp
inc
sbb
add
lret
enter
test
pop
lcall
cli
jno
pop
stos
and
loope
adc
xchg
dec
xor
js
arpl
outsb
shl
stc
xchg
sub
lret
mov
daa
pop
inc
push
test
lea
jns
sub
enter
push
sarb
addr16
fs
int
addb
mov
sub
adc
adc
mov
lock
push
and
xchg
pop
cltd
jp
ljmp
test
mov
rclb
cli
adc
jb
add
pop
add
xchg
sbb
ficoml
push
rorb
popa
loopne
sbbb
add
jno
dec
ret
inc
mov
add
enter
repz
pop
imul
or
repz
inc
cmp
mov
icebp
notb
notb
adc
push
mov
add
cmp
mov
mov
push
lds
mov
add
or
cmp
inc
out
shll
push
push
into
je
lret
test
mov
add
and
pop
add
data16
sbb
and
jo
mov
xchg
cmp
mov
push
add
add
inc
rcrl
mov
dec
push
lret
jle
lret
xchg
loopne
in
test
stos
push
stos
inc
add
push
add
into
inc
mov
pop
orl
push
jmp
sbb
sub
dec
add
push
mov
insl
and
sarb
add
sub
js
push
daa
xor
push
loope
xchg
xchg
or
loope
and
jnp
and
jmp
andb
xchg
aad
add
xor
shl
push
cmp
ret
sub
lret
cmp
xor
imul
test
pop
imul
dec
add
mov
mov
push
xor
cmp
jl
jge
add
pop
mov
push
mov
and
sbb
push
adc
lahf
sbb
mov
ret
pop
adc
add
ret
cmp
pop
inc
add
add
notb
stos
mov
mov
adc
mov
add
dec
bound
sbb
sub
aam
jl
mov
push
push
push
inc
ret
mov
pop
pop
or
jb
mov
xlat
jo
sub
fcmovu
xchg
mov
pop
pop
xchg
roll
push
dec
inc
outsb
or
call
jmp
pushf
and
add
stc
or
fmull
nop
cmpsl
lret
or
sub
sbb
mov
adc
add
mov
mov
mov
and
push
stos
stc
adc
pop
push
mov
and
arpl
sbb
xchg
cmp
lods
push
sbb
leave
or
push
push
pop
xchg
sbb
dec
xor
or
add
cmpsl
sbb
add
mov
and
cmpsl
movl
jecxz
or
fs
xor
sub
add
adc
rorl
jne
inc
rorb
xchg
notl
push
dec
mov
addr16
adc
lret
aaa
lea
adc
push
jnp
push
mov
xor
mov
or
mov
decb
inc
add
sub
je
std
cmpsl
test
orb
mov
adc
mov
pop
subl
and
push
adc
sbb
sub
test
cli
add
lcall
xchg
sarl
fiadds
xchg
pop
sub
xorl
dec
loope
inc
adc
and
cwtl
push
test
jo
insb
js
jo
inc
add
push
das
push
mov
lret
adc
movb
adcb
mov
nop
adc
mov
push
movsl
push
int3
ljmp
mov
dec
xor
push
or
icebp
adc
vmwrite
mov
lret
fmuls
xor
and
jno
sbb
sarl
aam
mov
push
xchg
adc
addr16
mov
roll
add
loope
dec
cmp
out
adc
or
xchg
sub
stos
add
mov
cmp
sub
lret
stos
push
mov
addr16
xor
xor
loope
mov
inc
int
rcrb
jp
imul
les
insl
dec
push
cld
sbb
aad
jno
mov
add
popf
mov
test
push
inc
pusha
and
popf
into
add
lods
pop
pop
adc
sbbl
loope
xchg
subl
stos
add
xchg
sub
popa
ret
push
stos
out
mov
dec
aad
or
test
push
test
ds
pop
mov
xchg
mov
loope
ret
xor
dec
adc
mov
xorb
je
aaa
mov
add
inc
xor
add
mov
aad
aam
xor
clc
push
fadds
mov
movups
mov
lcall
dec
shlb
hlt
test
mov
add
inc
xor
es
mov
enter
inc
inc
test
add
lock
and
rclb
lock
push
inc
xor
or
out
cs
mov
xor
loopne
jo
lcall
adc
pop
shlb
lods
push
add
lret
push
adc
mov
leave
mov
inc
in
add
sub
cmpsl
sbb
sub
adc
out
sub
add
pop
inc
or
popf
and
nop
inc
pushf
push
sub
xor
test
lahf
sahf
enter
push
lods
into
sub
add
push
sbb
rorb
xor
or
pop
test
xor
push
lret
adc
mov
cmpsb
pop
mov
add
lock
rcl
ret
add
cmc
push
inc
cmp
pop
or
lret
add
pop
out
rcl
inc
or
pushf
push
rcl
pop
jge
in
cmpsb
or
sbb
xbegin
mov
xor
push
ljmp
sbb
adc
push
add
sub
jb
mov
jae
inc
fcmove
lret
mov
sub
fwait
adc
adc
or
and
add
and
ret
mov
add
aad
inc
sbb
mov
dec
fsubs
push
cmc
mov
jp
jle
mov
pop
push
pop
pop
cmpsb
addb
xchg
js
js
xor
in
mov
mov
not
adc
jbe
xchg
dec
leave
jo
rolb
adcl
sub
mov
and
andl
lea
jne
leave
cld
dec
adc
push
lret
ret
or
cmp
mov
mov
and
mov
or
cmp
xchg
inc
pop
push
adc
xchg
dec
push
scas
fucomip
lret
adc
or
aad
jp
mov
gs
and
mov
imul
mov
and
pop
and
daa
mov
rcr
icebp
add
es
and
add
add
dec
scas
mov
lret
mov
add
sbb
pop
mov
inc
loopne
xor
fnstenv
fs
adc
mov
sub
pop
dec
in
aad
push
scas
xchg
mov
mov
xor
and
test
xchg
cli
jb
xchg
dec
sbb
in
enter
rcl
cmp
in
adc
inc
dec
cli
and
mov
pop
cli
repnz
into
mov
add
aaa
adc
in
fistps
xchg
sub
xchg
add
xor
sbbb
cmc
rorb
mov
cwtl
lahf
mov
jl
sbb
xchg
into
adc
push
daa
outsl
push
je
jo
rclb
mov
pop
mov
jb
mov
stos
mov
and
dec
add
xor
scas
pop
rorb
cmp
sbb
adc
in
lods
movb
call
fdivrl
mov
rcll
rorl
lds
cmpsl
jo
test
pop
loop
inc
fildll
je
add
jo
inc
scas
loop
sbb
and
xor
lock
lods
mov
adc
adcb
pushf
mov
mov
push
cli
mov
imul
dec
inc
push
cmp
call
loopne
rolb
sbb
pop
adc
insl
pop
cmp
loopne
out
xchg
mov
mov
enter
scas
sbb
mov
or
push
inc
dec
call
fidivl
adc
sbb
or
or
and
mov
test
mov
orb
adc
imul
inc
adc
mov
push
mov
dec
loope
adc
sub
push
inc
lods
out
add
add
lock
cmp
or
add
or
adc
and
adc
idivl
sbb
rcr
add
push
mov
shrl
mov
dec
repnz
and
dec
push
and
lock
xchg
or
fildl
xor
xor
mov
rorb
das
mov
in
adc
push
mov
test
add
cmp
dec
cs
mov
shll
mov
inc
pop
adc
sbb
push
test
sahf
mov
xchg
sbb
add
aad
leave
inc
push
movsb
sbb
in
rolb
leave
jge
adc
mov
gs
aam
cmp
inc
pop
add
adc
inc
lock
add
inc
mov
orb
and
push
stos
mov
jp
mov
and
push
add
pop
test
rcll
xor
inc
rorb
fadd
xor
movb
mov
mov
cmp
and
inc
fcoml
enter
test
sub
rorb
inc
sbb
jp
push
inc
push
xor
add
adc
xlat
jbe
repz
xchg
inc
xor
cmp
add
inc
mov
jp
add
push
pop
inc
ljmp
test
int3
ret
add
mov
add
adc
stos
lock
fdivrs
fisubl
sbb
aam
ret
push
add
and
jp
inc
adc
push
jno
inc
sub
vpblendw
mov
mov
adc
rclb
outsl
popa
inc
lret
fiaddl
lds
roll
jne
int3
cmp
or
and
add
sub
pusha
mov
push
je
loopne
adc
enter
and
mov
jo
inc
mov
sarb
adcl
sub
lret
adc
sbb
jne
xchg
loop
jge
idivl
out
add
pop
sub
faddl
xor
movsl
adc
dec
fs
fistpl
in
ror
add
sbb
int
popa
sub
aam
mov
loop
xlat
adc
roll
or
movsl
test
add
inc
xlat
cmc
outsl
and
cmpsb
pop
add
lods
inc
xchg
dec
inc
stos
ret
mov
adc
push
es
mov
out
icebp
movsb
sub
fiaddl
js
outsb
imul
sarl
pop
aad
and
add
add
aas
enter
cmpsl
sub
ss
sub
and
lcall
stc
xor
inc
mov
test
sub
adc
enter
scas
add
fwait
cmp
mov
jmp
mov
out
test
sbb
dec
adc
shrb
stc
push
out
mov
loope
xor
and
fimull
sbb
add
pushf
pop
mov
add
vandps
into
fisubl
or
xor
dec
mov
jmp
sub
sub
ds
or
adc
pop
cmp
lret
jp
jge
sbb
cmc
and
addr16
and
add
mov
push
push
test
push
xchg
add
mov
inc
fnstenv
daa
inc
lret
pop
aam
sbb
sbb
shrb
inc
out
push
xchg
loop
rolb
push
or
sahf
mov
pop
into
rcl
or
sub
lds
and
rolb
scas
cmpsl
sbb
sub
clc
push
pop
add
mov
daa
adc
cmp
adc
jmp
mov
xchg
push
xor
test
add
cwtl
adc
sbb
or
add
test
adc
adc
jb
mov
push
push
pop
pop
je
loope
mov
icebp
add
addb
enter
scas
test
lock
dec
in
mov
and
insb
or
mov
ret
std
andb
rclb
pop
jmp
mov
addl
mov
push
inc
mov
sub
adc
mov
adc
mov
arpl
sbb
outsb
push
shl
call
xlat
sub
orl
push
mov
push
mov
mov
sub
js
push
scas
pop
aad
dec
or
ret
out
femms
shl
pop
add
outsl
dec
imul
loopne
mov
xchg
mov
inc
jp
cmp
add
test
and
mov
orb
es
mulb
adc
xchg
adc
inc
add
sub
mov
jle
aaa
push
lods
add
sti
sar
test
sub
ljmp
sub
and
adc
inc
inc
call
mov
pop
push
or
test
inc
sbb
adc
or
push
xchg
pop
sub
fists
sub
dec
or
push
xchg
loope
lahf
in
test
add
push
xchg
sbb
xor
aas
add
xor
mov
or
push
pusha
cmp
mov
addb
out
test
jo
sub
movsl
cmp
ret
mov
mov
movsb
pop
sub
arpl
push
push
mov
hlt
add
call
clc
jb
jp
sub
mov
pop
sub
loopne
mov
jnp
cmp
inc
fstpl
pop
lret
enter
cmp
enter
repz
shlb
in
in
and
fdivrp
adc
arpl
push
mov
xorb
sbb
push
mov
mov
inc
jmp
aam
inc
addr16
insl
or
xchg
xchg
push
push
jo
mov
lds
shll
inc
lock
js
or
nop
or
andl
scas
ret
adc
cmp
cmp
sub
mov
inc
lods
mov
jle
leave
pop
stc
rorb
mov
adc
mov
aas
decl
push
push
icebp
push
loope
mov
xchg
fwait
adc
daa
mov
xor
bound
inc
bound
in
aad
cmp
bswap
sbb
lret
lret
inc
sub
push
xor
inc
push
lret
int
or
test
lcall
xor
jge
loopne
or
dec
cltd
or
mov
dec
test
cmp
repnz
mov
rcll
in
or
inc
mov
jo
pop
jno
xchg
mov
adc
jle
sbbl
and
push
mov
aad
mov
rcl
in
dec
add
add
jne
les
dec
inc
jo
int
jle
stos
push
inc
cmpsl
add
push
subl
sbb
mov
stc
pusha
lods
stc
and
lret
sbb
add
adc
es
jge
cmp
add
shrl
mov
fs
rolb
test
jl
adc
cmp
push
cmp
push
push
jmp
icebp
in
and
xor
xor
scas
cmp
cmpsb
sub
jbe
mov
pop
pop
aad
or
pop
xor
pop
sub
push
test
mov
inc
pop
add
pop
mov
ds
icebp
mov
jmp
mov
jmp
outsl
jp
sbb
sub
addb
and
rorl
stc
push
push
push
test
sub
rclb
ret
or
sbb
dec
ds
sbb
rol
add
xor
sbb
sbb
es
shlb
sahf
push
scas
in
adc
inc
pop
stc
adc
popf
push
pop
mov
push
pop
rolb
xor
jp
adcl
js
push
push
mov
mov
xchg
mov
mov
adc
clc
inc
mov
ljmp
add
or
mov
jne
cmpsb
adc
inc
or
push
inc
sbb
stos
adc
or
rorl
gs
aam
sbb
mov
jmp
fsubl
cwtl
push
xor
add
out
aas
ret
mov
add
pop
xor
sarb
hlt
add
push
sbb
jnp
mov
push
dec
cmp
mov
negb
and
aad
push
push
sahf
xchg
or
cmp
rorl
clc
add
rcrb
sbb
jo
andb
and
inc
icebp
fcmovbe
or
xchg
inc
cmp
adc
add
mov
push
or
mov
xchg
or
inc
fidivs
data16
cvtdq2ps
mov
push
orb
cltd
adc
scas
loope
add
rcll
mov
adc
sbb
push
andb
ret
or
jo
stos
aaa
imul
mov
dec
icebp
add
or
mov
in
call
xchg
rcr
lret
push
add
adcl
lret
mov
mov
lahf
adc
lcall
inc
cmp
cs
jmp
sbb
push
out
add
mov
or
dec
adc
mov
cmove
incl
aaa
mov
aad
mov
testl
mov
gs
scas
enter
loopne
es
xlat
scas
repnz
pop
lret
test
sub
dec
stos
cmp
sbb
mov
out
push
jo
add
loope
js
mov
testb
das
sub
push
sbbb
orb
mov
in
rolb
and
or
sbb
add
adcl
loopne
outsl
sbb
pop
sbbb
or
inc
push
push
or
aam
ret
mov
mov
add
xor
sbb
push
dec
loopne
loop
je
repnz
jne
in
sub
or
cmpsb
push
sub
aad
xlat
pushl
lods
rorb
mov
adc
in
and
or
data16
or
add
imul
daa
or
daa
bound
je
mov
sarb
sbbb
xor
inc
out
push
add
xor
or
ret
cwtl
les
stos
icebp
fwait
inc
add
and
push
in
lock
stos
pop
push
dec
jmp
cmp
and
mov
shlb
and
insl
jno
and
lods
ficoms
rclb
push
mov
sub
fs
and
cmpsb
or
or
out
and
pop
push
sub
rol
inc
fsubr
gs
ds
notb
rol
daa
adc
popa
xchg
push
sbb
or
add
outsb
hlt
mov
pop
jge
mov
dec
push
add
or
and
adc
sbb
xor
sub
cwtl
mov
xchg
sti
mov
sbb
push
mov
mov
repnz
and
push
add
jno
mov
fmull
in
add
push
into
rorb
mov
mov
or
and
je
dec
das
mov
inc
or
ja
subl
rorb
pop
inc
cmp
aam
push
jecxz
pop
push
int3
add
push
jmp
inc
fsubs
sbb
xor
cmp
jb
add
mov
into
inc
adc
lock
inc
and
xchg
inc
fadds
mov
subl
daa
add
or
or
ret
sbb
jo
loopne
ljmp
loopne
imulb
call
addr16
sub
xchg
inc
inc
cltd
bound
cli
and
add
repz
cmp
ja
jne
mov
sub
movl
stc
repz
mov
sti
pop
ret
aas
pop
insl
mov
lahf
aas
jg
sbb
push
push
pop
push
cltd
jne
adc
rclb
gs
repz
push
xchg
cmp
push
jbe
daa
cld
jns
lret
aas
jg
cld
pop
divl
scas
adc
incb
jp
bound
out
lahf
pop
xchg
dec
loop
cs
push
into
jg
cld
stc
test
push
push
mov
mov
and
out
lahf
aas
xchg
jne
lret
jecxz
mov
fnsave
cld
stc
repz
mov
sahf
sti
xchg
out
jmp
imul
aas
fisttps
lret
cmp
dec
adc
jl
out
pop
sbb
js
and
xor
lahf
aas
jg
lahf
test
ret
sbb
js
add
out
cld
stc
repz
jecxz
cmpsb
rorl
and
push
std
and
sub
mov
stc
repz
jae
fcompl
ret
mov
fnstcw
jg
cld
mov
push
lea
outsb
into
lods
rorb
cmp
xchg
out
data16
cld
stc
pop
mov
ljmp
in
js
and
iret
lahf
aas
sub
cmpsb
push
inc
dec
jns
sbb
xor
or
sbb
push
js
les
jns
inc
iret
lahf
aas
jg
adc
int3
movsl
inc
loopne
cmp
cld
stc
repz
movsb
scas
ds
add
hlt
mov
rcrl
xor
rolb
fmuls
xor
sbb
stc
repz
gs
leave
shll
inc
sti
jnp
shl
mov
mov
ret
add
xchg
xchg
mov
jnp
xor
cld
stc
fstp
jo
jbe,pn
movsb
add
jmp
mov
call
pop
cmpsl
or
cld
stc
repz
shrb
mov
fisttps
jg
nop
cmp
lods
inc
test
add
stc
repz
aam
mov
mov
out
lahf
aas
jg
sbb
and
mov
popa
les
ret
out
pop
pop
mov
aas
pop
mov
push
popa
daa
xchg
inc
aas
jg
cld
fmull
xchg
test
shrl
sbb
nop
repz
lahf
movsb
adc
and
std
jg
cld
stc
ja
pushf
xchg
jecxz
adc
jno
out
lahf
aas
inc
jle
sti
add
push
inc
adc
cld
stc
repz
in
loope
mov
mov
cmp
push
iret
lahf
aas
jg
push
adcl
pop
cmp
repz
add
add
xor
jne
pop
fwait
rol
aas
mov
fwait
inc
mov
idiv
sub
out
lahf
add
dec
subb
inc
add
or
adc
push
test
sbb
iret
lahf
aas
sub
loope
inc
in
in
cld
stc
repz
cwtl
dec
in
addr16
jg
push
jmp
and
cld
in
out
test
adcl
iret
lahf
aas
mov
sub
dec
out
js
xchg
cld
stc
repz
mov
jle
mov
push
aad
iret
lahf
aas
jg
xchg
shr
rclb
ljmp
repz
fisubrl
sbb
ficompl
aas
jg
into
pop
mov
addr16
jl
cmp
stc
repz
arpl
xor
into
nop
pop
push
or
jg
cld
mov
dec
sub
mov
cmp
rcrl
out
lahf
jecxz
cld
or
ret
xor
stc
push
pop
lods
lret
and
rcll
daa
add
iret
lahf
aas
ljmp
jmp
cld
stc
repz
dec
mov
fdivl
subl
lahf
aas
jg
add
rorb
movsl
mov
out
cltd
mov
or
inc
lds
jg
inc
repnz
cmp
push
arpl
out
lods
insl
ret
mov
aaa
cmc
je
stc
repz
ja
add
xor
mov
xchg
stos
mov
inc
out
mov
cld
stc
xor
les
sub
test
iret
lahf
aas
xchg
jmp
push
int
mov
cmp
stc
pause
mov
pop
or
pusha
movsb
add
lahf
aas
jg
push
add
sub
pushf
add
out
push
and
pop
xchg
fildll
or
adc
loopne
iret
lahf
jg
cmp
icebp
mov
das
cld
stc
repz
loop
lcall
pop
enter
iret
lahf
aas
jg
stos
jg
daa
stos
adc
lahf
sahf
js
or
stc
repz
mov
mov
mov
aas
jg
pop
das
sub
adc
mov
daa
adc
repz
cwtl
movsb
outsb
aaa
fadds
mov
jg
cld
inc
adc
cmp
dec
pop
rorl
outsb
sub
mov
cmp
jnp
inc
jg
cld
stc
imul
test
xchg
jl
pop
push
xlat
lds
out
lahf
aas
jl
js
mov
mov
cld
stc
repz
pop
repz
pop
mov
imul
aas
jg
ja
popf
imul
repz
cmpsl
popa
cmp
pushl
and
test
jl
out
lret
xorb
stc
repz
cs
pop
push
xor
shrb
lock
je
std
or
lcall
repz
lahf
xlat
cmp
mov
or
xchg
jg
cld
stc
mov
cwtl
jo
cmp
sub
jno
jl
jns
test
iret
lahf
aas
out
out
shlb
mov
cld
stc
repz
sub
pop
mov
dec
adc
in
sbb
scas
test
xor
sbb
and
int
cld
stc
repz
mov
cmpb
mov
inc
lds
push
scas
dec
jle
xor
fstpl
push
sub
cld
stc
repz
push
push
mov
pop
iret
lahf
aas
jg
and
loopne
cmpsl
jb
int
leave
into
xchg
sub
repz
jnp
adc
orl
xor
movsl
aas
jg
jo
fdivrs
add
add
out
lahf
aas
lret
inc
sub
add
jg
cld
stc
cld
test
push
in
mov
roll
mov
iret
lahf
aas
in
loope
adcl
cld
stc
repz
mov
into
outsl
jle
cwtl
lcall
iret
lahf
aas
jg
push
jbe
std
shrl
push
cld
stc
repz
xchg
pop
out
loopne
jae
mov
or
imul
inc
in
pop
mov
mov
jg
cld
stc
shll
cmp
fbld
out
lahf
aas
sub
xchg
jg
movsl
and
cld
stc
repz
adc
lods
jge
lahf
lea
inc
and
aas
jg
inc
stos
lret
ljmp
std
in
out
insl
inc
xor
mov
pushf
jbe
fdivs
jecxz
aas
jg
jl
xchg
sahf
inc
mov
fyl2xp1
repz
fs
mov
and
pop
or
cwtl
aas
jg
cld
std
push
and
mov
ja
test
lahf
xor
mov
mov
push
jg
cld
stc
je
test
imul
mov
out
lahf
aas
out
lahf
data16
mov
dec
inc
aam
and
cltd
ss
sbb
cwtl
mov
in
ljmp
jg
enter
lret
sbb
or
je
in
repnz
lret
pop
adc
mov
jg
sarb
mov
jle
enter
sahf
cmp
mov
repz
lahf
clc
sahf
sbb
lods
outsb
push
push
dec
in
cld
stc
jns
loop
test
into
aam
pusha
push
pop
out
lahf
aas
mov
mov
test
sahf
cld
stc
repz
add
jmp
xchg
cwtl
cmp
test
aas
jg
xor
inc
dec
add
xchg
jae
cld
stc
repz
cs
lods
dec
xchg
pop
pop
add
xchg
lahf
aas
jg
int
es
int
sbb
mov
repz
imul
shlb
push
aas
jg
cld
rcl
sti
iret
jecxz
pop
jae
scas
adc
sub
cmp
out
lahf
fwait
pusha
int3
push
xchg
cmpsb
xor
js
pop
jg
cld
stc
add
pop
shlb
call
xor
jp
out
lahf
aas
sub
outsl
inc
jmp
jo
xchg
cld
stc
repz
pusha
inc
lods
js
mov
push
jmp
add
lahf
aas
jg
inc
adc
cmc
adc
push
ret
cld
stc
repz
mov
jnp
cltd
sbb
push
test
jg
sub
adc
outsl
xorb
sbb
xchg
decb
sarb
out
cli
jmp
aad
cltd
ss
les
mov
ss
and
outsl
fimuls
jecxz
xchg
mov
jno
and
sahf
aas
rclb
add
aas
jg
insb
pushl
pop
shr
xor
repz
fninit
jg
mov
in
test
iret
aas
jg
cld
ss
inc
pop
jmp
xlat
jmp
mov
out
lahf
or
mov
add
xchg
xchg
inc
iret
jg
cld
stc
jno
std
loope
pop
dec
xor
les
out
lahf
aas
add
sub
fdivr
cld
stc
repz
jb
or
xchg
shlb
test
add
fsubl
imul
cmp
out
mov
std
enter
cmpsb
iret
lahf
aas
jg
inc
pop
dec
jl
and
cld
stc
repz
mov
lcall
out
inc
jns
lahf
aas
jg
sub
fistps
test
or
test
daa
or
inc
in
dec
loop
aas
jg
cld
and
mov
fnop
ljmp
and
clc
cwtl
in
pop
lahf
aas
jg
fisubrl
mov
clc
clc
sub
jmp
ja
test
repz
sbb
or
mul
in
iret
pop
sti
xlat
ret
sarl
jg
cld
xor
inc
inc
push
sub
sbb
push
jp
cmp
ljmp
fidivrl
pop
lods
cwtl
lods
push
out
lahf
aas
jno
mov
mov
or
repz
jne
lods
sub
cmp
add
stc
rep
jns
or
add
in
or
jg
cld
shll
shlb
imul
mov
repz
lahf
mov
lahf
push
rcl
cmp
repz
mov
cld
stc
mov
or
test
and
jnp
iret
lahf
aas
fs
sub
sbb
outsl
pop
jg
repnz
fildl
loop,pn
out
lahf
aas
pop
add
jecxz
pusha
sub
sub
jbe
xor
adc
sbb
out
jle
in
or
add
iret
lahf
aas
jg
inc
fcmove
xchg
test
mov
cld
stc
repz
and
inc
add
add
sahf
add
pop
sahf
and
jg
call
jne
mov
cmp
out
or
data16
sbb
push
pop
stc
repz
cmp
push
loopne
test
ds
pop
lcall
lock
in
iret
aas
jg
mov
out
xchg
and
cli
xlat
sbb
es
push
xor
pop
push
mov
icebp
int
cmpsb
nop
aaa
outsl
fidivrs
cli
mov
xorb
mov
rol
aad
push
cmpsb
pop
mov
sub
fidivrs
push
mov
insb
mov
sub
and
decl
adc
fidivrs
mov
xchg
in
and
cld
outsl
dec
mov
dec
pop
push
xchg
lahf
aas
jmp
mov
scas
xchg
fsin
icebp
sub
shlb
lret
repz
lds
jnp
lds
insl
lds
xor
aas
jg
cld
and
adcl
mov
loopne
repz
lahf
mov
pusha
sbbl
loopne
outsb
cld
dec
stos
xor
lods
inc
cmc
or
fisttpll
xor
in
stc
repz
inc
inc
pop
mov
test
roll
cld
test
cmp
inc
xor
pop
push
mov
or
aas
jg
cld
xchg
mov
and
sbb
xor
cwtl
inc
daa
repz
lahf
mov
lret
xchg
mov
mov
dec
cmp
dec
mov
pop
movsb
mov
mov
pop
stc
int
push
sub
lock
out
lahf
aas
cmp
lcall
lds
cld
stc
repz
push
out
loope
imul
jg
push
les
fcomip
aaa
adc
insl
mov
out
lret
cmpsb
int3
repz
cld
stc
ret
sbb
pop
hlt
into
clc
out
lea
mov
lahf
aas
jg
mov
dec
sbb
mov
pop
movsl
and
imull
stc
repz
ret
cmpsl
notb
mov
aam
aas
jg
lock
clc
shlb
jl
int3
cmp
push
adc
iret
mov
and
xor
cld
jae
insb
dec
jae
and
cmp
pop
and
out
lahf
pop
pop
dec
inc
pop
push
add
leave
xlat
enter
cld
stc
ret
out
arpl
into
enter
mov
iret
lahf
aas
mov
inc
divb
push
mov
cld
stc
repz
cmp
int3
cmpsb
clc
movsb
stos
push
hlt
jl
lahf
aas
jg
stos
fistpll
mov
inc
adc
cld
stc
repz
fsubrl
push
insb
push
dec
jbe
pop
lahf
aas
jg
addr16
je
xor
sub
out
repz
adc
stos
cmp
ss
jg
cld
push
ds
stos
xchg
mov
mov
push
insb
and
nop
scas
inc
jns
aaa
xchg
les
cld
stc
xor
aam
jo
push
adc
iret
lahf
aas
mov
loop
cmp
mov
cld
stc
repz
call
sbb
aam
mov
shlb
ljmp
jb
in
out
cld
stc
repz
xor
xor
ljmp
inc
sahf
aas
popl
mov
xchg
iret
lahf
aas
hlt
hlt
rcr
mov
mov
sbb
push
cmp
and
cmpsb
adc
cmc
daa
psubw
out
jg
pushf
mov
sarb
bound
ja
push
mul
xchg
in
daa
or
stc
repz
dec
cwtl
scas
test
int3
shrb
dec
inc
inc
push
lahf
aas
jg
xor
in
outsl
shrl
pop
imul
jae
test
pop
fs
stc
repz
cld
adc
test
clc
xor
lahf
aas
jg
cs
mov
insb
sbb
inc
xor
xchg
ret
sti
ljmp
jnp
adc
adc
cmpsb
insl
and
cld
sar
in
xor
pop
pop
push
stos
cmp
pop
inc
xor
scas
stc
repz
lds
aas
hlt
push
jecxz
fldpi
fnstcw
jg
cld
inc
fst
mov
cmp
stos
mov
out
lahf
fsubrs
popl
mov
mov
std
lods
sahf
or
insl
jns
mov
add
outsl
fidivrs
ror
mov
cmp
int
popa
imul
icebp
xchg
shrl
mov
and
std
pop
aad
dec
sbb
out
fwait
aaa
and
sbb
stos
pop
dec
sbb
add
fidivrs
aad
cltd
cmpsb
pop
dec
xor
rcrb
outsl
int3
shll
cmp
xchg
ljmp
xchg
jmp
and
pop
fmul
fldl
aad
fsubl
sbb
adc
fbstp
int3
nop
iret
lahf
aas
jg
rcrl
push
jp
sbb
sbb
jns
stc
repz
fcmovb
xchg
negl
fdiv
cld
scas
daa
jbe
sub
pop
daa
fcmovnbe
adc
in
stos
pusha
stc
repz
push
pusha
sbb
and
or
and
xchg
add
push
jnp
cmp
sbb
stc
repz
insl
add
loopne
fnsave
xor
xchg
aas
jg
lds
adc
push
sbbb
int
ja
adc
push
int
addr16
repz
xchg
test
mov
push
mov
xor
cmp
jno
cwtl
cmc
fnstsw
jg
cld
and
push
sub
lds
xlat
xchg
je
rolb
call
dec
push
bound
sbbl
dec
jecxz
loopne
push
repnz
inc
inc
ffree
xchg
stos
clc
sarb
aam
std
cmp
adc
push
add
mov
repz
cld
stc
repz
jmp
adc
push
dec
les
mov
fnstsw
aas
jg
leave
icebp
mov
adc
fiaddl
stc
repz
push
movsl
dec
popa
push
insb
xor
cwtl
fs
inc
sub
lahf
aas
jg
adc
lret
dec
jle
ja
stc
repz
xchg
push
lock
pop
inc
push
negb
lea
jg
cld
pushf
ret
aam
pusha
sbb
mov
sub
cmp
sub
jmp
pop
add
dec
mov
aas
cld
stc
mov
xchg
dec
jno
add
pop
aaa
aam
xchg
dec
popa
and
out
mov
xchg
flds
mov
int
aaa
push
add
ret
push
ds
sub
xchg
cmp
enter
xchg
hlt
cmpsl
lods
xchg
mov
mov
mov
add
or
int
aaa
or
arpl
jo
mov
push
cmp
mov
add
fdivrs
cmc
and
jge
fwait
aaa
outsl
adc
clc
push
jb
inc
lods
mov
pop
add
jns
out
xchg
enter
jecxz
sbb
add
xor
outsl
imulb
jne
int
jp
mov
adcb
repz
out
mov
repnz
repnz
gs
aas
jg
cld
dec
pop
xlat
scas
cmp
cmp
repz
lahf
stc
scas
inc
mov
add
rcl
lahf
aas
cmp
nop
lret
or
in
fildll
lahf
stc
repz
cli
movsl
mov
fucomip
mov
insl
adc
mov
cld
in
lods
mov
es
pop
scas
ret
out
lahf
sbb
mov
ss
inc
mov
cld
stc
inc
pusha
xchg
repnz
fnsetpm(287
rcr
mov
push
out
lahf
aas
inc
mov
lds
lea
cld
stc
repz
fsubr
sbb
push
cmpsl
push
fwait
adc
out
lahf
aas
push
mov
test
mov
cld
stc
repz
mov
pushf
icebp
push
cmp
lahf
aas
jg
or
cltd
mov
cmp
cmp
test
ss
stc
repz
jg
xlat
ret
lds
mov
fs
and
adc
jl
adc
adc
out
mov
testl
pop
in
jg,pn
cld
stc
jge
jb
cmp
ds
jmp
add
pop
es
popa
cmpsw
andb
fidivrs
gs
pop
xor
aas
ljmp
inc
xchg
mov
aaa
outsl
fidivrs
or
in
adc
and
aaa
or
clc
adc
enter
ljmp
aaa
jns
cmpl
inc
dec
push
dec
cli
stos
xchg
icebp
mov
fcmovnb
lcall
inc
push
inc
dec
shll
mov
add
push
and
xchg
popf
decb
jl
adc
stos
pop
xor
jg
insl
cmp
add
stc
sub
stc
stc
repz
dec
stc
or
out
jnp
dec
sub
cmp
fwait
bound
jle
xchg
push
mov
aas
jg
fidivl
push
inc
and
loop
lock
repz
jle
movsl
outsb
xor
inc
dec
decl
jg
cld
das
add
jle
xchg
in
adc
inc
insl
repz
lahf
cmp
lcall
and
push
jg
cld
stc
mov
fwait
mov
inc
pop
sbb
xlat
and
pusha
lahf
jg
cmp
push
jg
test
loop
mov
call
orl
subl
and
je
flds
jg
cld
stc
push
push
clc
xor
mov
xor
dec
ds
pop
movsb
xor
jg
cld
jecxz
loopne
pop
inc
lods
fiaddl
iret
ffreep
out
lahf
aas
adc
lock
imulb
fwait
cld
stc
repz
leave
jle
mov
mov
pop
cwtl
in
stc
iret
lahf
aas
jg
mov
dec
adc
pop
cld
stc
repz
dec
sub
out
enter
jo
sbb
sbb
cltd
jg,pn
test
jbe
xorb
push
xchg
jl
xor
out
fwait
mov
aam
shl
int
jns
jbe
pop
outsl
fidivrs
daa
js
aam
xor
aaa
subb
out
fwait
aaa
and
pop
data16
out
mov
sub
jns
test
cmp
xor
daa
jns
mov
shl
sub
mov
xchg
mov
cld
add
fwait
lret
test
fyl2x
cmpsl
adc
les
adc
les
jns
out
xchg
mov
xor
jne
mov
mov
jmp
loopne
cmpsl
insb
cmp
pusha
repz
fwait
adc
dec
imul
inc
das
jns
fidivrs
subl
dec
adc
je
out
fwait
aaa
fwait
out
dec
mov
mov
cmp
pop
cmp
cmpsl
rol
mov
outsl
fidivrs
out
aas
and
jle
cmp
xor
adc
les
movsb
add
negl
mov
repz
fwait
movsl
fistpll
add
outsl
fidivrs
out
outsb
bound
lods
pop
push
out
fwait
aaa
je
je
cwtl
cld
pop
std
cwtl
mov
mov
mov
pop
in
mov
jg
jp
aad
pop
pusha
push
int
aaa
outsl
test
or
xchg
lea
mov
popf
mov
dec
sbb
mov
push
push
lahf
jg
fiadds
sub
ret
cmpsl
notb
add
mov
sbb
cmpsl
clc
shlb
jl
int3
cmp
push
adc
repz
mov
mov
and
fmul
cld
stc
xlat
sbb
pop
das
mov
ljmp
cld
repnz
mov
aam
movsl
repnz
push
data16
dec
loopne
jns
out
dec
adc
xchg
out
xchg
mov
jg
or
adc
imul
test
lahf
pop
sbb
out
lds
sbb
decl
scas
fs
dec
jg
ss
outsl
fidivrs
push
insl
jb
pusha
mov
out
enter
insl
pop
add
cmp
cli
inc
jnp
cmp
ret
mov
aaa
outsl
fidivrs
imul
fs
and
out
fwait
xorb
mov
outsl
fidivrs
or
sti
stos
push
out
fwait
aaa
push
sub
hlt
cli
ljmp
repz
repnz
xor
sbb
addr16
fwait
aaa
outsl
enter
ds
xchg
push
cmp
repz
js
int
adcb
push
sub
xchg
mov
mov
stos
mov
int
aaa
sub
push
cmp
imul
outsl
fidivrs
stos
and
cs
andl
iret
int
icebp
jmp
cmp
mov
ds
divb
inc
loop
fwait
aaa
outsl
call
mov
pop
frstor
repz
or
test
insb
jae
push
xchg
aaa
outsl
fmulp
push
push
and
mov
pop
and
dec
rcl
jg
xlat
jbe
ss
mov
outsl
sti
push
stos
adc
stos
sbb
mov
aaa
outsl
fidivrs
or
mov
out
fwait
push
mov
sbb
cltd
cmp
std
outsl
fidivrs
mov
imul
cmp
movsl
add
int
aaa
pop
pmulhw
mov
or
jns
fdivs
pop
mov
lea
adc
add
fwait
mov
jp
sub
jns
out
leave
fnstsw
pop
insl
or
data16
jl
outsl
fidivrs
insb
scas
pop
stc
shrl
repz
fwait
aad
jb
das
or
add
jns
shlb
cmp
imul
and
xchg
aaa
fstp
test
jg
scas
rorb
and
xchg
popa
or
popa
popf
test
push
aaa
test
add
pushf
dec
and
int
aaa
outsl
cs
enter
and
jne
jns
out
scas
mov
test
or
or
aaa
outsl
faddp
hlt
fdivr
idiv
jecxz
push
repz
insl
popa
inc
xchg
leave
inc
push
aad
rcrb
cmp
mov
popf
ja
enter
jg
sti
shl
repz
fwait
add
push
lds
loope
inc
jne
fidivrs
sbb
xor
xor
inc
loopne
out
fwait
aaa
cs
imul
repz
out
fidivrs
daa
nop
popa
add
or
and
leave
lds
mov
scas
xor
inc
push
inc
mov
adc
fidivs
cmpsl
dec
iret
ret
shlb
xchg
or
mov
aaa
daa
es
lret
aaa
outsl
fidivs
stos
shll
jne
negb
jns
out
mov
cs
inc
mov
xor
lcall
pop
adc
loope
int3
push
inc
pop
add
out
cld
into
fdivp
xchg
mov
in
out
fnstenv
outsl
fidivrs
loope
push
int3
jnp
lret
out
int
test
or
cmp
xor
fidivrs
test
daa
rolb
int
aaa
outsl
aaa
pop
aaa
adc
inc
mov
and
les
mov
jmp
fwait
aaa
outsl
ficoms
jmp
or
push
gs
out
jno
push
dec
sub
aad
aad
lret
ds
xchg
mov
in
std
lret
cmp
int
aaa
inc
and
enter
in
sbb
mov
push
jne
lret
push
pop
lret
xor
inc
int
aaa
outsl
dec
adc
sbb
ror
insb
ret
mov
adc
pop
xor
xchg
pop
push
fs
outsl
fdivrp
pushf
mov
ja
sbb
repz
testb
dec
mov
out
mov
aaa
outsl
fidivrs
cmp
push
fmulp
repz
fwait
xchg
test
inc
imul
push
cmp
std
dec
jl
fldenv
pop
sbb
pop
int
aaa
outsl
mov
xchg
lock
test
subb
out
sti
pop
shll
mov
mov
adc
fiadds
mov
lcall
int
loope
push
push
add
pop
bound
fidivrs
xchg
lret
in
adc
sti
cmc
adc
ret
leave
fwait
sbb
lods
inc
cli
das
xor
cld
mov
mov
ja
xchg
or
and
repz
lahf
in
je
push
insb
push
dec
inc
aas
cmpsb
fs
jg
cld
stc
add
mov
or
and
mov
push
sub
jmp
js
mov
cld
stc
repz
testl
js
sbb
iret
lahf
aas
jg
fwait
mov
push
add
cmp
push
test
mov
dec
xchg
fwait
addb
test
pop
jns
icebp
xchg
jbe
pop
push
int3
inc
clc
punpckhdq
outsl
fidivrs
push
cmp
mov
repz
fwait
mov
sbb
test
outsb
lahf
outsl
fidivrs
lods
cmpsl
mov
push
into
and
test
int
aaa
incb
mov
push
and
push
xchg
mov
jle
dec
jbe
xlat
cmp
insb
add
fwait
aaa
outsl
bound
rcl
lret
scas
int3
cli
jb
dec
outsb
mov
arpl
lods
repz
test
aaa
outsl
fiadds
push
mov
je
mov
jns
out
pusha
mov
add
popa
xchg
hlt
mov
outsl
fdivrp
mov
sbb
mov
iret
int
mov
mov
in
xchg
push
ljmp
lret
mov
addb
inc
mov
mov
mov
sbb
and
repz
fwait
loop
aaa
dec
adc
sti
sahf
sub
jno
mov
jns
in
mov
dec
and
stc
repz
aad
xor
and
test
int
insl
lahf
aas
jg
xchg
xor
mov
mov
mov
dec
pop
cmp
repz
mov
jg
sbb
cld
xchg
popa
pop
jle
jg
cld
inc
sbb
aam
mov
leave
push
push
mov
stc
repz
stc
and
mov
xchg
int
idivl
jg
cld
xor
and
in
sbb
cmpb
iret
lahf
andb
mov
out
pop
xchg
xchg
enter
jp
adcl
jne
test
cmp
out
jb
out
dec
inc
push
add
push
addr16
jns
das
cmp
dec
mov
push
movsb
mov
decl
push
cmp
ljmp
out
repz
lahf
cwtl
or
fldenv
lds
cld
stc
cmp
lods
mov
push
mov
mov
iret
lahf
aas
rclb
rorb
in
cld
stc
repz
or
mov
loope
and
lahf
aas
jg
ret
mov
push
cltd
hlt
add
out
pop
dec
sbb
inc
int
and
push
inc
lahf
aas
jg
lret
scas
std
mov
test
jle
add
test
xchg
inc
xchg
roll
scas
lret
sbb
int
aaa
sbb
cmp
dec
andl
sub
xchg
rol
jecxz
jg
cld
cmp
popf
int
aaa
outsl
fisttpll
xchg
mov
add
dec
cmpsb
mov
jno
dec
sbb
ja
inc
cwtl
shll
ficoms
stc
inc
push
xor
andl
js
out
xor
les
mov
rcrb
push
xor
ja
inc
fdivp
fmul
fnstsw
das
and
or
out
fwait
xchg
sub
cli
movsl
pushf
xchg
mov
mov
enter
dec
push
test
jp
vcvtpd2dq
fwait
aaa
pop
sub
lret
iret
dec
mov
jno
enter
cmpsb
inc
lahf
cld
adc
push
andl
inc
sbb
int
ja
movsb
mov
movsb
test
faddp
subb
rep
push
jae
or
lods
fcmovnbe
aad
jno
leave
dec
adc
fwait
aaa
outsl
xchg
lret
add
mov
scas
mov
mov
test
xor
pop
test
mov
aaa
outsl
fisubs
jg
stos
inc
dec
and
imul
repz
mov
icebp
push
clc
jg
inc
mov
xchg
pop
xor
stc
repz
jb
jo
das
cmp
push
in
jg,pt
cld
fcmove
pusha
mov
fisubrs
mov
fwait
aaa
aam
cmp
cmpsl
mov
jo
out
repz
out
repz
testl
outsl
fidivrs
clc
test
mov
ljmp
lret
vmovdqa
scas
jns
out
adc
sub
mov
test
cltd
jecxz
das
jle
mov
fmuls
jle
xorl
cld
jnp
xchg
adc
xor
aas
mov
mov
cmp
lahf
aas
jg
lods
movb
xor
lds
lea
repnz
sub
jb
test
and
mov
mov
fnstenv
mov
mov
cli
fwait
aaa
outsl
fdivrp
cmp
mov
fcmovne
sbb
jns
out
pushw
jle
loop
and
sahf
pop
xchg
outsl
fidivrs
sahf
iret
pop
es
clc
popa
pop
testl
cwtl
mov
jb
ljmp
outsl
fidivrs
xor
int
insl
lock
xchg
out
fwait
aaa
sahf
sub
cmp
fsubl
mov
repz
mov
decl
icebp
arpl
or
iret
lahf
aas
adc
mov
push
testl
popa
mov
divl
pop
das
mov
out
aas
sbb
in
or
stc
cld
stc
repz
or
and
pop
outsl
fiadds
aas
gs
fucomp
leave
jecxz
push
push
mov
aaa
insl
pop
dec
aam
jecxz
call
fnstcw
rolb
test
stos
mov
mov
out
sub
movsl
inc
movsl
cli
popl
repz
mov
cmpsb
mov
pop
push
push
ds
test
rcr
outsl
fidivrs
test
mov
lock
fwait
aaa
push
dec
outsl
adc
loope
fdivrl
mov
or
pushf
jnp
aaa
push
sbb
pushl
dec
push
cmpsb
push
sbb
repnz
mov
sbb
stos
adc
mov
mov
call
insb
cmp
inc
outsb
fiadds
fldcw
imul
xchg
fwait
aaa
outsl
fwait
lds
dec
sahf
jge
cmc
aaa
mov
fwait
aaa
shlb
jne
dec
cmp
adc
jns
out
and
pushf
or
lock
daa
cmp
insb
fidivrs
add
std
enter
lahf
out
or
jae
adc
fisubrl
into
dec
sti
mov
daa
pop
fidivrs
pop
push
sbb
nop
scas
sub
int
aaa
outsl
add
test
pop
pop
sarb
and
clc
push
mov
mov
add
mov
fisubs
mov
xor
in
jns
out
mov
or
pop
add
femms
lcall
mov
and
in
mov
inc
notb
repz
fwait
lods
pop
lock
pop
outsb
dec
iret
mov
adc
xlat
mov
fdiv
cmp
dec
std
lds
in
xchg
fwait
aaa
insb
push
push
jns
push
dec
adc
jmp
fstpl
mov
adc
cld
mov
push
push
sub
loope
adc
sub
aaa
ret
xchg
loopne
mov
testl
fcoml
aad
nop
addl
xchg
sbbl
aas
jg
cld
inc
filds
sti
les
xor
iret
lahf
repnz
mov
imul
jo
repnz
jmp
push
sbb
nop
xchg
sub
mov
jp
jg
fs
jbe
dec
repz
fwait
repnz
fnstsw
mov
cmp
loop
ds
imul
mov
sbb
sub
pusha
popa
imul
mov
mov
jbe
xlat
fwait
cmp
cmp
call
aaa
outsl
jb
or
add
inc
mov
es
enter
mov
ss
fidivrs
pop
pop
addb
dec
xor
in
hlt
inc
popa
int
aaa
outsl
xorl
dec
mov
push
sti
inc
xor
jns
je
push
testl
fidivrs
test
movsl
mov
call
out
fwait
test
xchg
add
mov
aas
jg
hlt
mov
dec
or
dec
lret
ds
adc
out
lahf
mov
push
jp
lret
test
xchg
imul
cld
stc
nop
xchg
inc
or
and
clc
or
aas
lea
cmpsl
push
xchg
aam
rorl
mov
mov
mov
sbbl
icebp
xchg
out
stc
adc
int
pushl
pop
fmul
outsl
sub
push
cmp
mov
adc
daa
jb
pop
or
loopne
mov
sti
scas
fidivrs
or
or
adc
pop
loopne
mov
mov
xorl
aam
mov
jns
out
mov
add
or
pop
xor
out
mov
movsl
adc
out
fwait
ret
in
mov
mov
inc
scas
jg
jge
sbb
stc
ja
ret
fwait
out
lahf
aas
dec
xchg
lret
cltd
add
push
cltd
mov
rep
pop
inc
adc
mov
mov
mov
movb
jecxz
arpl
cld
mov
scas
sti
sub
jge
push
out
aas
jg
ss
xchg
cmp
fwait
cld
stc
repz
cmpl
xchg
leave
lahf
aas
jg
into
loop
popf
or
pop
jg
xor
fstps
adc
pop
pop
aaa
movsl
cmpsl
repz
lahf
arpl
adc
cld
stc
xor
out
int3
gs
add
xchg
iret
lahf
aas
adc
sub
mov
stos
fadds
push
out
cwtl
test
outsl
fsubrp
inc
mov
ret
rorl
xlat
int
mov
mov
out
mov
cld
stc
pop
aaa
sub
push
xchg
mov
bound
push
xchg
aas
jg
xlat
mov
test
add
cmpsl
inc
xchg
push
mov
fwait
dec
bound
inc
inc
lock
in
mov
pop
aam
out
fwait
aaa
xlat
fcomip
movsl
dec
insl
je
pop
repnz
mov
mov
stos
jl
jnp
js
ficoms
pop
aam
leave
insb
push
enter
cmp
mov
ret
sub
jns
xchg
fidivrs
cmpsl
push
loopne
outsl
scas
jae
aaa
outsl
fidivrs
lods
ret
pop
dec
rcr
dec
pop
lods
in
int
pop
mov
sbb
fidivrs
jg
subl
fwait
aas
aaa
outsl
fisttpl
in
cmovle
daa
push
jg
push
ljmp
pop
je
iret
outsl
fidivrs
mov
push
clc
cli
xchg
jecxz
inc
aas
test
aaa
xchg
mov
cmpxchg
loop
imul
sub
negb
lahf
clc
outsb
add
sbb
cmp
dec
enter
push
cmp
cmp
mov
repz
sbb
ljmp
mov
aas
jg
xlat
xchg
mov
and
icebp
clc
incb
repz
mov
adc
mov
je
cld
sub
cld
fdivrl
outsb
sub
fidivrs
mov
test
ss
outsl
dec
stos
pusha
sub
xchg
fiadds
cmp
mov
enter
xchg
inc
and
pop
cmp
pop
or
jns
out
cmp
add
push
or
fs
mov
mov
hlt
cli
sub
xchg
int
sbb
adc
ds
fidivrs
and
sub
outsl
ds
subl
daa
cmp
ficoms
ficoms
inc
jbe
mov
add
int
aaa
outsl
std
aad
sub
rcll
fdivr
fs
rclb
in
shl
outsl
fidivrs
jl
pop
inc
repnz
fwait
aaa
inc
pop
lret
mov
and
repnz
push
and
fstpt
repz
lahf
mov
mov
cmpb
stc
in
dec
enter
and
popf
cmp
mov
repnz
adc
jnp
stos
fsubrl
cld
mov
jg
inc
clc
bound
mov
jns
out
lahf
aas
clc
arpl
mov
cs
cmp
cld
stc
repz
xor
adc
mov
dec
jg,pt
sahf
js
sbb
lock
push
sbb
shlb
lahf
in
xchg
int
nop
std
and
insl
jg
cld
stc
gs
inc
push
testb
mov
lods
xchg
iret
lahf
aas
test
jg
jmp
push
in
cmc
pop
gs
fidivs
lods
sbb
stos
jns
out
inc
pushf
mov
adc
mov
or
outsl
fidivrs
mov
enter
ja
insl
repz
fwait
lret
inc
dec
dec
sbb
ret
ds
and
xchg
divb
mov
out
fwait
aaa
out
xchg
cmp
nop
xchg
in
divb
pop
sub
outsl
fidivrs
call
mov
lods
int
aas
aaa
out
inc
rclb
push
inc
pop
leave
pop
adcb
enter
jecxz
jl
and
sahf
out
mov
ljmp
cmpsb
cld
stc
repz
add
roll
fimull
lahf
aas
jg
rcl
test
lcall
repz
call
outsb
sbb
lods
lea
mov
or
lods
xchg
xchg
movsl
int
aaa
outsl
push
outsb
ret
scas
adc
xor
repz
mov
repnz
mov
push
fwait
aaa
outsl
fmulp
lret
call
psrld
jns
out
sub
mov
xchg
ds
outsl
and
cmc
mov
pop
jb
and
out
fwait
aaa
jns
popf
mov
pop
or
jns
mul
mov
xchg
push
mov
mov
outsl
or
out
push
sbb
add
imul
xchg
int3
fdivp
pop
mov
jae
mov
mov
pop
stos
arpl
clc
fs
cltd
adc
xchg
sub
shll
fidivrs
adc
out
inc
out
fwait
aaa
inc
mov
cmpl
dec
or
mov
adc
imul
repnz
lahf
aas
pushl
sub
push
push
std
scas
cld
stc
repz
pop
xchg
std
adc
mov
jne
push
leave
lahf
aas
jg
xchg
fdivs
pop
gs
imul
out
ret
sbb
jp
sub
out
out
int
aaa
push
xlat
arpl
les
inc
mov
fptan
test
ret
fisubl
aaa
mov
mov
lds
stc
repz
pusha
pop
inc
sub
or
lahf
aas
jg
adc
dec
cmp
push
int3
jnp
dec
mov
out
mov
xor
adc
jp
lahf
aas
jg
mov
push
dec
insl
inc
imul
adc
xchg
ds
sbb
push
xor
and
and
push
pop
mov
dec
in
cmc
lea
sti
fcoml
or
jns
int
ja
jp
pusha
mov
repz
push
sbb
mov
lahf
in
mov
adc
lahf
aas
jg
test
in
jecxz
adc
sub
xor
out
push
inc
inc
nop
sbb
into
xchg
iret
lahf
aas
jmp
daa
pop
push
xchg
iret
push
rcrl
repnz
mov
and
mov
mov
jns
repnz
jg
cld
add
adc
and
lcall
inc
pop
stc
repz
lahf
and
icebp
mov
xchg
mov
pop
aas
jg
cld
movsl
xor
out
cmp
inc
mov
pushf
aam
jns
mov
mov
ret
cmp
aaa
outsl
fidivrs
cmpsl
pusha
outsb
mov
pop
xchg
repz
fwait
xchg
inc
mov
dec
pop
inc
push
imul
loopne
xchg
push
int3
ja
divb
dec
out
lahf
aas
mov
fidivrl
hlt
arpl
stc
stc
repz
ds
dec
or
fidivrs
xchg
lds
cmp
int
aaa
outsl
movsl
jne
sbb
xor
sbb
repz
cmp
cmpb
mov
or
cmp
lea
xchg
enter
call
mov
sbb
mov
clc
jne
push
in
sbb
cmp
fcmovne
lahf
aas
call
sbb
pop
stos
ja
xchg
sti
xchg
popf
out
loopne
cld
stc
repz
leave
fucomi
aas
dec
xor
jg
rclb
jg
mov
jl
cmp
movsl
and
out
mov
or
ljmp
sbb
call
xchg
cld
jmp
das
and
adc
adc
cmc
ror
pop
popa
push
imul
pop
cmc
pop
addr16
syscall
lock
pop
cmp
sbbl
aas
jg
das
push
rorb
xor
mov
cli
mov
repz
popa
inc
cmpsb
leave
and
sbb
jl
cmp
repnz
jg
cld
or
sar
iret
sbb
in
gs
out
lahf
xor
xchg
icebp
stc
sbb
rcrl
or
jg
cld
stc
jge
adc
icebp
push
dec
loopne
ret
and
out
lahf
aas
mov
jne
mov
jmp
stc
repz
xor
or
icebp
aas
and
lahf
aas
jg
sahf
mov
jp
scas
and
cld
stc
repz
icebp
pop
in
mov
or
jno
mov
push
lahf
aas
jg
hlt
push
aaa
out
lcall
lods
mov
roll
xchg
adc
xchg
fcmovnb
mov
add
sub
add
jbe
pop
icebp
rcl
add
lds
bound
ljmp
repz
xchg
xchg
jmp
mov
aaa
inc
xchg
fwait
aaa
outsl
popa
ljmp
fldl
stos
lahf
jl
lahf
addr16
addr16
push
inc
jbe
xchg
aas
jg
cld
lcall
lret
loope
push
fdiv
int3
dec
sub
inc
and
arpl
inc
mov
jg
and
adc
or
repz
inc
sub
outsl
jl
xchg
fwait
aaa
push
sbb
cli
xchg
loop
mov
repz
and
fsubs
pop
mov
outsl
fidivrs
iret
dec
push
xor
out
lahf
xor
test
sbb
das
sbb
jns
out
cmpsl
std
push
mov
frstor
aaa
outsl
fidivs
aas
fs
pop
jns
sbb
jns
out
add
lods
jno
mov
adc
fidivs
outsl
fidivrs
in
push
mov
andb
push
push
jmp
sbb
outsl
fidivrs
mov
cmp
outsb
or
int
aaa
sub
push
in
div
mov
sqrtps
xchg
pop
clc
enter
cmp
xchg
ja
xchg
repz
jno
xor
jecxz
in
pushl
outsl
fidivrs
shlb
les
outsl
lret
popa
adcb
decb
add
ficomps
push
dec
daa
pop
dec
outsl
fidivrs
jb
inc
sti
daa
cmpsl
mov
repnz
int
aaa
aas
fistps
mov
xor
push
push
xchg
jns
lock
repz
dec
push
inc
sub
outsl
fiadds
sbb
sbb
cltd
iret
movsb
or
int
aaa
popf
mov
inc
mov
test
pop
adc
jno
sti
int3
push
jbe
mov
ja
cld
movsb
pusha
xor
popa
cmp
xor
jns
stc
stos
xor
and
out
in
cmp
movsb
outsl
les
dec
outsb
scas
add
adc
cmp
sarl
cltd
gs
cwtl
and
xchg
in
iret
outsl
fidivrs
lds
stos
nop
mov
icebp
loopne
fwait
aaa
sub
jno
insl
adc
shrb
xor
or
iret
lahf
aas
jg
mov
jp
mov
imul
add
cli
adc
xchg
nop
push
aas
jg
cld
and
ja
mov
jb
sahf
xchg
out
lahf
and
push
inc
mov
pop
movsb
adc
jg
cld
stc
mov
jo
sub
in
sbb
xorl
lahf
aas
lret
ret
jmp
andnps
cld
stc
repz
outsb
aaa
test
dec
cli
mov
iret
lahf
aas
jg
jmp
in
sbbb
test
clc
dec
leave
cld
stc
repz
sbb
jmp
jle
sub
adc
roll
sbb
ret
addb
int
aaa
scas
cs
xor
lods
xor
flds
jns
jo
repnz
lcall
inc
mov
jbe
inc
test
mov
inc
enter
aas
mov
push
addr16
xchg
mov
cs
fidivl
outsl
xchg
and
inc
cmc
xchg
inc
in
pop
inc
imul
out
out
fldenv
int
nop
stc
sahf
or
outsl
fidivrs
xlat
jb
xorl
xor
int
aaa
bound
xor
mov
sbb
xlat
mov
jns
mov
mov
xor
or
inc
xor
outsl
ficoms
scas
aaa
pusha
jns
les
dec
sub
das
sbb
dec
push
insb
lds
call
inc
call
sub
pop
out
pusha
adc
sub
lahf
aas
jg
test
sub
out
sbb
mov
cld
stc
repz
rclb
das
ss
outsb
adc
clc
adc
fidivrs
pop
sub
or
fwait
aaa
outsl
shlb
aad
imul
xorb
xchg
iret
outsl
fidivrs
stc
push
roll
push
aaa
out
test
push
lahf
movb
scas
mov
out
fwait
jl
cld
hlt
sbb
pop
fcompl
jns
xor
repz
mov
inc
and
outsl
push
and
inc
aad
jno
pop
out
sbb
and
jmp
or
mov
je
cmp
inc
dec
dec
jg
add
and
outsl
ficompl
lahf
fisttpll
inc
out
sub
mov
fisubrs
inc
repnz
cwtl
mov
lds
xor
xlat
mov
ss
push
loopne
pop
stc
repz
mov
pop
mov
stos
adc
aam
sarl
cld
pusha
test
sub
fs
sbb
mov
repz
lahf
dec
push
cli
fcmovnb
mov
int3
testl
out
dec
adc
jg
dec
or
adc
sbbl
icebp
enter
repnz
and
mov
or
lahf
aas
jg
jge
rorl
dec
sub
out
cld
stc
repz
cmp
pop
sbb
xchg
neg
dec
inc
lahf
aas
jg
or
inc
push
fldl
loope
pop
xchg
or
repz
subl
addr16
stos
inc
jle
cld
jno,pn
mov
fwait
add
stos
mov
fs
aas
jg
cld
xor
ret
mov
mov
cld
repz
lahf
bound
sahf
mov
mov
inc
lcall
sub
mov
ja
ja
insl
or
mov
fnstsw
jmp
dec
enter
mov
insb
ret
outsl
mov
hlt
fxch
push
sub
lret
call
fwait
aaa
outsl
fmulp
pusha
mov
push
cs
fidivs
test
push
shlb
mov
xchg
aaa
outsl
fidivrs
rol
aas
add
mov
xor
fisttpll
cli
iret
jbe
aaa
mov
fidivrs
sbb
lahf
push
pop
rcll
aad
pop
jbe
int
aaa
sub
pop
mov
sbb
aas
jg
hlt
add
cmp
xchg
mov
push
xor
out
mov
out
xchg
and
out
ja
insl
adc
mov
mov
inc
pop
push
pop
movsb
aad
jmp
lahf
aas
jg
repz
cmpsl
out
outsl
ljmp
out
add
pop
mov
mov
pminub
pop
les
pop
in
dec
addr16
pop
lds
mov
adc
push
inc
fidivrs
mov
mov
fwait
aaa
outsl
ficomps
idiv
dec
inc
sbb
frstor
out
bound
lock
cltd
and
outsl
fidivrs
mov
std
push
and
out
fwait
pop
imul
adc
inc
fwait
cmpsl
inc
lret
aas
cmp
loopne
inc
insb
out
aas
jg
cld
adc
out
xchg
shrb
mov
iret
lahf
xor
mov
fcompl
in
jg
cld
stc
mov
push
xor
repnz
xorl
cmp
xor
xor
push
std
js
push
sbb
repz
movsl
repz
mov
sbb
daa
jg
xchg
inc
outsl
fidivrs
ret
popa
push
push
aas
das
pushf
sbb
out
fwait
aaa
push
xor
add
xchg
or
sbb
cmp
js
addr16
add
jecxz
dec
nop
mov
fists
out
mov
aas
test
jmp
adc
mov
repnz
ja
jns
pusha
aas
push
cmp
lahf
std
dec
sub
cwtl
insl
cmpsl
add
test
mov
jno
xor
je
dec
scas
mov
aaa
outsl
inc
push
or
xchg
shll
xor
iret
sarl
ffree
jmp
add
aaa
outsl
imul
ficoms
add
jne
repz
and
cwtl
imul
fidivrs
adcl
repz
fwait
insl
movsb
out
or
clc
jns
sbb
mov
or
xchg
aaa
outsl
fidivrs
bound
pop
cmp
loop
repz
fwait
jge
fcomps
adc
dec
outsl
fidivrs
mov
mov
loopne
dec
sub
aaa
jmp
cmp
and
push
repz
js
aas
addr16
dec
sbb
rcll
mov
ror
clc
ret
std
inc
out
fwait
aaa
out
fndisi(8087
icebp
lods
mov
cwtl
xor
hlt
rcr
mov
mov
in
xchg
jecxz
ds
sub
stos
and
pop
movsl
stc
cmp
xor
sbb
jle
mull
pop
dec
and
test
xchg
iret
ds
push
xor
ja
dec
test
popf
mov
das
fidivrs
xchg
adc
jl
pop
sub
inc
ja
lahf
insb
fimuls
adc
sahf
repz
fwait
jns
int
pusha
pusha
lock
mov
outsl
fidivrs
pushf
iret
nop
push
leave
je
xor
xchg
jl
out
fwait
aaa
lea
sahf
xchg
das
sbbl
pop
cs
mov
inc
push
jecxz
stos
stc
dec
dec
out
test
aaa
outsl
rcrb
push
pop
xchg
lcall
xor
xchg
cmc
test
mov
out
jg
add
sbbl
lock
daa
adc
imul
push
hlt
jns
out
fsubrl
add
popa
xchg
jno
mov
outsl
fidivrs
xchg
adc
test
fwait
dec
clc
inc
daa
push
imul
pop
xchg
or
mov
or
mov
cmpsl
fidivrs
dec
test
inc
xchg
shl
int
aaa
outsl
jbe
clc
mov
hlt
push
jno
fidivrl
les
jmp
or
outsl
fidivrs
out
and
adc
lock
xchg
jns
out
mulb
add
dec
xchg
mov
and
mov
in
sbb
imul
jg
jecxz
stos
xchg
les
cmc
fistpl
sbb
sub
dec
ret
and
mov
fbstp
inc
jmp
rclb
stos
out
inc
fnsave
fwait
ja
push
push
cmpsb
inc
arpl
jmp
pop
cmp
repz
out
inc
daa
xorb
in
js
push
cld
stc
repz
test
pop
dec
and
testl
xchg
int
enter
lock
adc
insb
ljmp
outsl
fidivrs
jnp
dec
sbb
sub
out
fwait
cmpsl
adc
inc
cmc
mov
mov
cmp
adc
fistps
fwait
aaa
push
pop
cmp
ja
jne
hlt
cltd
cld
jns
out
mov
insl
dec
enter
aam
insb
mov
mov
mov
cmpsl
imul
test
stc
pop
rorl
ret
jns
lea
push
push
int
aaa
inc
or
xor
inc
sbb
out
and
out
mov
jne
add
std
mov
sub
or
xchg
add
xchg
xchg
movsb
mov
in
fwait
mov
jmp
je
std
add
iret
lahf
jg
and
aaa
sub
pop
jp
jg
cld
jns
loope
inc
cs
icebp
mov
iret
lahf
aas
fcmove
cli
adcb
imul
repz
std
cli
xor
sbb
insb
mov
mov
xchg
aas
jg
mov
in
cli
xlat
xchg
fwait
lahf
aaa
fistps
push
adc
clc
aam
and
ja
aas
addl
mov
out
fwait
xor
mov
mov
jmp
jns
jg
jl
and
mov
sbb
adc
int
aaa
out
cwtl
daa
gs
gs
sub
jns
sub
mov
lret
push
cli
shrb
sub
shl
jo
pop
jno
mov
repz
xchg
adc
jg
out
insl
jle
and
mov
mov
popf
fidivrs
mov
fmul
data16
xchg
int3
fdivl
outsb
cmpsb
fwait
mov
outsl
insl
mov
sbb
repz
in
mov
and
sbbl
ds
mov
pop
iret
repnz
add
cld
xchg
shlb
out
mov
fsubp
testb
daa
jnp
pop
lahf
aas
jg
fwait
clc
fildll
and
push
stc
repz
ret
and
pop
add
cmp
cld
cld
jo
mov
maxps
push
loope
mov
add
scas
pop
fnstcw
lret
in
pop
push
jl
xchg
push
out
inc
in
dec
cmc
or
cld
stc
shrl
xchg
dec
fs
outsl
lock
out
lahf
aas
and
shrb
cld
stc
repz
fnstenv
iret
outsb
rorl
lahf
aas
jg
and
xor
ret
fdivr
cld
stc
repz
xchg
inc
push
insl
and
adc
xrelease
or
mov
outsb
fidivrs
mov
adc
in
rolb
popf
inc
mov
mov
and
jg
aaa
data16
jmp
or
push
shrb
push
insl
stc
cltd
lods
dec
mov
inc
out
fwait
aaa
jbe
inc
clc
ljmp
inc
rcr
jns
push
in
cli
xchg
cmc
dec
mov
mov
fwait
aaa
outsl
xor
das
repz
stc
sti
enter
loopne
cmp
test
enter
jg
or
mov
push
pop
xorb
repz
push
out
sbb
mov
aas
jg
cld
cmpsb
cmc
data16
aaa
or
lret
sub
mov
iret
lahf
mov
lret
into
out
xor
cld
stc
in
dec
nop
jmp
lods
mov
adcl
cli
enter
push
cmp
sti
dec
adc
or
pop
sub
addb
lahf
aas
jg
inc
cli
jg
adc
and
inc
cld
stc
repz
jecxz
inc
call
xor
jbe
aas
jg
scas
inc
scas
outsb
insl
mov
loopne
enter
jo
in
iret
push
aas
sbb
adc
adc
aas
adc
mov
sub
jns
lret
fdiv
out
mov
enter
into
repnz
jne
adc
stc
cmp
shr
lret
aad
jle
push
dec
xor
or
imul
pop
jmp
cld
cmp
aas
jg
out
loopne
mov
int
mov
out
xchg
das
or
addr16
add
bnd
jg
mov
pop
add
jmp
jge
insl
cmpsl
fidivrs
out
and
dec
aam
jge
pop
xchg
mov
test
mov
gs
jmp
adc
jg
test
sahf
push
aaa
aas
jg
cld
loope
iret
xlat
mov
adc
dec
ficoml
xchg
pop
loop
out
lahf
mov
push
mov
inc
testl
jp
lods
out
jecxz
jmp
outsb
sbb
outsl
aam
bound
xchg
mov
dec
jns
out
bswap
out
jno
mov
outsl
and
outsl
fidivrs
int
stos
test
pop
and
ljmp
loope
or
repz
lahf
aas
les
cmpsb
jo
mov
in
lods
mov
lea
les
iret
lahf
push
fnstsw
adc
inc
jo
cld
stc
imul
mov
insl
mov
stc
xlat
inc
xchg
out
push
aas
or
in
sahf
aaa
push
push
pop
lahf
aas
jg
adc
hlt
scas
es
mov
in
repz
ds
ficomps
push
or
cld
fidivrs
out
std
adc
fsub
push
lock
lahf
ret
dec
sub
out
orb
stc
orb
cmp
ret
push
xchg
or
sub
aas
sub
js
mov
cld
stc
repz
cmp
adc
test
lahf
aas
jg
aad
mov
sbb
adc
cld
stc
repz
pop
ja
lret
in
outsb
aam
jp
add
and
out
cmp
inc
jecxz
std
cwtl
jecxz
aaa
outsl
or
add
jae
and
jno
int
inc
js
sbb
add
rcll
loope
repnz
cli
sbb
lods
pop
pop
or
and
repz
mov
xor
dec
loopne
lahf
aas
jg
and
sub
test
push
leave
jb
sub
leave
outsl
sbb
addr16
lahf
jg
xchg
fs
aas
js
mov
fiadds
stc
repz
fsubrl
cmpsl
outsb
in
mov
mov
in
push
lds
jnp
lea
cld
mov
repz
jg
inc
out
nop
xor
bound
mov
outsb
sahf
adcb
fdivr
mov
jae
in
lods
xor
sbb
outsl
ficoms
data16
popf
stos
idiv
icebp
xchg
aaa
pop
repz
fwait
add
add
ss
insl
mov
pushf
push
ljmp
iret
stc
repz
pop
jg
addr16
xor
cld
add
inc
loope
daa
pop
xor
jl
fwait
aaa
outsl
fsubp
out
es
dec
inc
scas
mov
xchg
icebp
sbb
repz
xchg
rorb
iret
lret
jmp
cmp
mov
cld
fiaddl
or
lret
ds
push
stc
repz
ja
data16
ja
cmp
ds
jg
cld
pop
add
enter
cmpsl
loop
jnp
jmp
push
insb
bound
push
add
sbb
cltd
mov
cld
cld
dec
adc
inc
test
out
jmp
fwait
ja
inc
xchg
int3
fidivrl
out
aam
mov
bound
aaa
outsl
fidivrs
dec
pop
adc
popa
shl
iret
fwait
dec
jmp
or
jo
jmp
mov
js
pop
mov
dec
lahf
subl
add
jb
jl
test
jp
ror
fwait
aaa
popf
scas
mov
xor
out
hlt
rol
xor
xchg
in
popf
xchg
leave
mov
jns
lret
sub
repnz
jo
iret
fwait
aaa
dec
lea
mov
adc
cld
jmp
xchg
lahf
cmc
in
insb
nop
mov
xor
pop
test
push
xchg
push
outsl
push
cld
stc
notl
outsb
mov
outsl
dec
sub
pushf
adc
add
add
fmull
pop
cli
push
cltd
scas
fnstcw
enter
xchg
call
dec
cmp
cld
stos
dec
cltd
mov
push
xor
in
inc
cld
arpl
cmpsl
lahf
test
shl
iret
lahf
aas
jg
lods
pop
dec
cmp
push
clc
pop
or
pop
sub
repz
fs
lods
xchg
lds
iret
jg
cld
stc
adc
lcall
mov
mov
pushf
mov
iret
lahf
aas
out
xchg
sahf
dec
cmp
cmp
xlat
mov
repz
mov
imul
add
ds
lret
stos
mov
pop
pushf
sub
mov
lret
dec
jl
scas
test
aaa
adc
lea
jns
out
lcall
pop
punpckldq
addr16
aaa
outsl
fidivrs
cmp
pop
icebp
xor
push
aas
dec
pop
xchg
xchg
fwait
cmp
pusha
add
fidivrs
mov
and
sub
sahf
imul
jge
data16
adc
mov
das
mov
mov
popf
jmp
aaa
outsl
ficomps
and
xor
test
repz
out
lahf
jno
inc
sub
ja
fmul
fninit
inc
outsb
fidivrs
addr16
push
adc
push
jnp
fwait
aaa
out
mov
mov
loope
notl
cmpl
int
sbbl
je
scas
icebp
seto
movsl
add
out
fstl
mov
lock
inc
fwait
aaa
outsl
fsubrp
imul
je
add
jae
jae
push
jns
out
cmpsb
jbe
clc
jmp
add
hlt
cltd
cld
aaa
outsl
fidivrs
and
mov
imul
fwait
imul
sub
xor
jns
pushf
insb
cmpsl
les
cmp
insl
int3
pop
cs
fwait
aaa
outsl
push
add
xor
sub
movsl
push
mov
das
xor
mov
in
fwait
aaa
outsl
fmulp
or
and
push
xor
int
jne
mov
scas
mov
aaa
outsl
fidivrs
pop
iret
xor
mov
stos
repz
fwait
sbb
xchg
int3
ret
pop
xchg
mov
ds
mov
inc
sub
pop
in
sbb
mov
aaa
adc
movsl
shlb
adc
sub
mov
cmp
adc
mov
fiadds
or
lahf
xor
pop
cmp
adc
jns
out
jnp
rcrl
sahf
push
mov
mov
movsb
sub
outsl
fidivrs
sarb
data16
repz
fwait
or
xor
xlat
mov
mov
mov
pusha
pushf
jbe
ss
xor
enter
sbb
ss
repnz
add
mov
out
out
sbb
and
idiv
mov
mov
mov
fldt
faddp
int
aaa
outsl
xor
cwtl
add
inc
mov
outsl
pop
push
in
push
jno
dec
insl
inc
jp
das
pop
out
mov
lahf
push
mov
shlb
and
add
adc
in
jns
out
xchg
cmp
testl
lods
xor
call
std
testl
cld
cmp
push
dec
in
push
jl
insb
xorb
lahf
shl
ret
cmp
stos
inc
inc
adc
stc
mov
loop
cmp
fisubrs
push
arpl
aas
inc
dec
loop
stos
popa
pop
or
cld
stc
repz
xor
or
clc
cmpsb
lods
aad
fdivs
scas
add
cmp
stos
nop
ds
adc
lcall
hlt
push
fcom
test
or
pop
lds
imul
sub
outsb
fs
ja
sub
xor
push
mov
inc
popf
jg
push
push
dec
insb
fdivrp
mov
daa
in
mov
ret
xor
pop
repnz
roll
outsb
imull
cmp
faddl
jge
out
out
call
out
lahf
jg
negb
gs
fimull
repnz
sahf
outsb
cltd
into
repnz
cltd
push
or
call
testb
fcoml
mov
adc
rcrl
lods
data16
push
aaa
cmp
xchg
lahf
aas
or
loope
ja
dec
push
insb
fildll
mov
aam
rcrl
xchg
insb
mov
jle
cld
mov
sbb
inc
dec
clc
icebp
in
inc
sub
movsl
cvtpi2ps
rclb
jns
out
ja
mov
xchg
repz
push
add
fidivrs
lods
mov
rol
daa
lock
int
jbe
jmp
mov
repz
pop
loopne
xchg
mov
mov
dec
push
and
ds
cmp
jno
jae
std
xchg
or
xorl
push
add
mov
mov
sbb
fwait
in
cld
stc
repz
mov
pop
push
add
inc
lods
or
lahf
aas
jg
jno
xchg
stos
adcb
or
out
cmp
iret
push
inc
and
pop
sahf
xor
lahf
aas
pop
stc
add
xchg
mov
jg
and
repz
push
inc
inc
add
push
stos
jnp
aam
jg
cld
mov
or
subb
fldcw
sbbb
mov
and
cwtl
mov
xchg
int
aaa
mov
sahf
rcrl
cmp
aaa
outsl
add
push
shlb
sub
loope
int
imul
daa
stc
repz
push
int3
jg
daa
jge
dec
cmp
and
cld
imul
dec
cmp
adc
mov
mov
or
popa
adc
enter
fsubl
in
pop
mov
ds
cmp
xchg
sti
push
repz
jne
rorb
sarb
ds
cmc
in
mov
decl
in
iret
lahf
aas
decl
mov
dec
popa
mov
xlat
xchg
cld
stc
repz
mov
jecxz
lea
push
inc
fistpl
pop
stos
pop
sub
adc
push
bound
xlat
jmp
mov
xchg
xchg
imul
sahf
aas
enter
mov
lahf
aas
jg
pop
sub
inc
push
rcr
pop
push
repnz
cld
stc
repz
imul
daa
rcll
or
lahf
aas
jg
add
nop
push
fs
insl
or
repz
imul
mov
pop
lret
mov
xchg
jg
cld
add
or
push
or
jae
xchg
sub
push
in
lahf
loope
push
pop
or
sbb
inc
jo
jle
jo
out
jl
ljmp
cmp
xchg
jg
add
dec
fimuls
xchg
popa
sub
push
pop
ds
enter
mov
cmc
outsl
sbb
iret
pop
das
pop
add
xor
jle
je
std
or
or
aad
outsl
mov
stc
repz
aaa
scas
sub
sbb
jne
jae
jmp
sub
mov
inc
inc
test
insl
inc
inc
ss
es
lahf
aas
jg
cmpsl
jmp
xorb
push
mov
stc
repz
daa
and
daa
scas
pop
mov
or
mov
aas
jg
cld
cmp
and
push
pop
xor
mov
out
out
lahf
in
pop
lods
jno
faddl
stos
je
imul
lahf
popa
mov
mov
ljmp
sub
insl
add
jg
fiadds
or
call
js
out
fwait
sbb
fsubl
lret
xchg
cmp
lods
scas
outsl
fidivrs
pop
hlt
mul
xchg
or
daa
out
fwait
aaa
mov
jo
mov
imul
fdivrl
outsb
push
shlb
or
mov
outsl
push
call
cmp
lahf
inc
in
std
aad
sub
fcmovu
mov
cmp
inc
pop
enter
mov
pop
fadds
lock
sbb
out
cmp
in
push
jae
sub
push
jne
outsl
fidivrs
cltd
xchg
sub
mov
pushf
fsts
les
out
fwait
aaa
cmp
cmp
or
sbb
jns
loop
mov
fld
inc
sti
mov
data16
jnp
fwait
aaa
outsl
and
jo
xor
fadds
mov
out
mov
sub
jb
rcrb
xor
cmp
xor
push
sub
clc
jns
out
stc
xchg
xor
fidivrl
imul
pop
rorb
sbb
jbe
ja
out
fwait
repnz
lret
lahf
aad
outsl
fidivrs
jmp
inc
jns
popf
jbe
stos
ret
aaa
roll
mov
pop
das
jle
jo
orb
pop
ret
cmp
pop
adc
cmpsl
jmp
and
jg
loope
sti
adc
push
pop
cmpsb
int
ja
int3
decl
js
lret
jns
out
mov
dec
xchg
xchg
xor
fsubl
aaa
outsl
fisubs
mov
jg
push
sbb
inc
stos
lret
jns
out
sarl
je
mov
and
fiadds
xor
adc
repnz
fwait
dec
cli
imul
fwait
aaa
out
mull
fcoml
pop
out
cltd
dec
fs
cmpsb
clc
enter
mov
cmp
push
ss
popf
in
aam
cmpsl
lock
cltd
stc
repz
and
and
gs
and
cld
cld
jl
mov
mov
fiadds
mov
gs
clc
add
xor
dec
repz
fwait
push
dec
fidivrl
xor
aaa
pop
push
test
mov
js
adc
je
push
int
aaa
outsl
das
mov
shl
test
out
dec
adc
jb
out
divl
mov
adc
cmpsb
mov
cmp
fnstenv
inc
fisubrs
fldenv
je
xor
into
cmpsb
int
ljmp
lock
mov
mov
insb
mov
sarb
out
fwait
aaa
and
cmp
popa
orb
cmpsb
jne
sbb
repz
push
mov
pusha
xchg
pop
fwait
aaa
outsl
fisubrs
sbb
aaa
stc
data16
mov
out
jne
sub
scas
fistl
sub
mov
push
xlat
test
enter
cld
mov
jo
ljmp
inc
dec
shll
bound
and
jns
out
add
inc
jb
fisttpll
stos
sbb
mov
inc
mov
mov
iret
pop
jg
jbe
mov
inc
hlt
mov
sbb
or
ss
pop
fnstcw
mov
sahf
push
arpl
mov
in
sahf
mov
adc
fistps
and
ret
out
cmc
xchg
out
xor
leave
xchg
loope
mov
sbb
and
cs
int
aaa
outsl
loopne
xacquire
mov
add
and
jne
sub
outsb
mov
insb
fisubrs
and
push
mov
mov
pop
das
mov
cmp
int3
cmp
bound
scas
into
pop
mov
inc
popf
fwait
aaa
sarb
cmpsl
push
pop
push
loope
mov
inc
push
or
iret
lahf
aas
decl
repz
dec
sub
and
mov
stos
xor
stc
repz
add
pop
into
les
push
or
dec
sbb
aas
jg
sbb
and
int
sarb
xor
std
mov
roll
adc
fwait
aaa
outsl
faddp
jge
push
es
imul
cwtl
jns
out
mov
test
xor
popf
stc
inc
outsb
fidivrs
and
sti
or
inc
outsb
mov
adc
les
cmp
aad
inc
add
outsl
ficomps
mov
mov
loop
negl
pop
and
test
xchg
dec
push
lods
add
and
cmpsl
add
sbb
and
push
repz
or
cs
bound
stc
mov
push
cmp
ret
xor
aad
or
add
lea
aad
outsl
inc
fiadds
inc
cmp
dec
mov
dec
imul
xchg
jle
mov
scas
push
cmp
cmp
cmp
and
push
pop
push
mov
push
jns
out
push
sbb
jns
adc
popf
lahf
aas
cld
movsb
outsl
mov
and
and
dec
xchg
fcomps
out
inc
or
push
out
stos
cmp
popf
clc
lret
sbb
adc
out
fwait
aaa
cmpsl
ret
cmc
cwtl
popf
mov
adc
sub
popf
mov
addr16
movsl
rcr
out
fs
cmp
sub
aas
pop
lods
mov
repz
mov
data16
aaa
fxch
push
cmp
or
inc
xchg
sbb
cmp
addb
mov
mov
fcoml
fcomp
sbb
fcmovu
out
dec
inc
lret
push
aaa
clc
pop
daa
out
sbb
jmp
mov
xor
out
aas
push
sqrtps
test
cld
stc
repz
arpl
test
pop
scas
push
adc
sbb
jbe
lahf
aas
jg
or
sub
repnz
repz
arpl
mov
bound
insl
jae
inc
push
jge
sarb
xchg
out
xchg
pop
test
jl,pt
stos
lods
lahf
aas
jg
mov
cmpsl
sarb
sti
push
stos
cmp
movsb
add
pop
add
nop
jmp
mov
mov
push
sub
sarl
stos
hlt
nop
sbb
mov
out
dec
lea
stc
pop
nop
into
mov
inc
mov
jge
sub
jl
test
fisubrl
jnp
unpcklps
stc
repz
daa
es
add
push
arpl
jg
cld
lock
call
push
dec
mov
pop
xor
dec
and
mov
fiaddl
pop
push
into
mov
popa
fwait
stos
cmp
jns
jne
xchg
mov
push
jno
jo
mov
rcrb
jnp
pop
mov
inc
jle
js
inc
cld
stc
repz
sbb
and
pop
and
aas
jg
arpl
loope
push
dec
mov
fyl2xp1
repz
ret
arpl
mov
adc
aam
push
shrb
jecxz
mov
mov
add
jg
pop
jne
int
aaa
outsl
nop
dec
insb
push
inc
xor
rep
ds
jns
icebp
enter
les
shlb
outsl
fidivrs
and
in
pop
jns
cs
dec
movl
outsl
fidivrs
dec
aad
mov
jbe
lds
imul
jg
jb
sub
pop
movl
cld
stc
repz
mov
rcr
incl
push
and
jg
imul
ja
sbb
adc
mov
lods
mov
repnz
push
popa
cmpsb
cmp
adc
aas
fs
dec
gs
cld
mov
jmp
xchg
and
fisttpl
jg
sahf
and
jg
push
pop
sub
pushf
nop
dec
lcall
stos
das
fwait
loop
inc
daa
push
cld
stc
ret
inc
inc
dec
and
mov
add
mov
repnz
and
or
jnp
int
ja
nop
jmp
jae
out
jns
out
mov
jmp
incb
sbbb
mov
jge
pusha
aas
sub
jns
out
dec
dec
dec
pop
mov
xorb
sarb
lock
std
fbstp
outsl
fidivrs
sbb
xchg
lea
out
dec
fwait
ljmp
adc
xor
sbb
enter
popa
lahf
in
or
sbb
repz
mov
mov
sbb
aas
xchg
insl
dec
mov
cld
stc
repz
adc
add
pop
lahf
aas
fmull
repz
jp
adc
inc
in
je
adc
cwtl
aad
jns
out
daa
inc
out
lods
jg
jg
ljmp
fidivrs
in
dec
mov
jg
cld
stc
std
mov
fs
sti
dec
daa
xlat
sahf
push
push
add
ja
iret
lahf
aas
mov
out
mov
lods
mov
mov
and
or
push
add
out
lahf
mov
repnz
cmp
inc
mov
in
icebp
xchg
or
cmc
loop
push
and
test
and
arpl
in
jmp
scas
and
insb
ficoms
mov
lahf
aas
dec
pop
pop
cld
stc
repz
xor
sub
cltd
wrmsr
cmpsb
push
scas
lahf
jl
add
cmovo
fisttps
repnz
cmpsb
nop
loop
daa
sbb
add
enter
cltd
aad
rorl
sti
xor
lahf
mov
mov
adc
mov
and
add
push
add
jmp
outsl
fidivrs
add
cs
ret
mov
int
xchg
adc
inc
xor
jg
cld
stc
sbb
push
inc
cmp
dec
jle
out
sub
and
mov
out
mov
mov
aaa
dec
cs
mov
mov
mov
jp
rcll
sub
rolb
push
pop
into
lock
jo
fidivrs
pop
mov
inc
xlat
mov
andb
outsl
dec
je
mov
inc
in
int
pop
inc
cmp
repnz
push
sbb
iret
aas
js
sbb
iret
mov
popf
enter
stc
repz
sub
inc
test
repz
sbb
xchg
lahf
sub
out
iret
lahf
aas
jg
xor
pop
addr16
in
mov
dec
xor
inc
sub
aas
jg
rorl
push
jmp
pop
inc
addr16
inc
out
xchg
and
lret
movsb
sub
mov
xor
aaa
outsl
ficoms
out
xor
mov
xchg
fwait
add
mov
fidivrs
lcall
push
or
aaa
outsl
cmpsb
xchg
pop
push
xor
rol
scas
cmp
or
sbb
xor
pop
inc
cmp
adc
jg
dec
add
mov
mov
out
mov
xchg
lods
or
test
mov
mov
cwtl
add
add
insb
je
push
xorl
imul
push
cmp
cli
in
cmpsb
test
add
out
int
std
lret
xchg
fwait
sub
repz
mov
jecxz
lds
xor
aaa
outsl
fidivrs
xchg
cli
ljmp
mov
cltd
ljmp
test
out
aas
jg
out
jp
mov
leave
div
orl
stc
repz
shr
jecxz
lods
je
insl
cmpsb
mov
popf
cld
cld
push
das
sub
dec
jnp
xor
aas
jg
add
rcl
fsubr
in
andl
daa
cmp
pop
add
shrl
out
out
fwait
aaa
aas
lock
mov
popf
fidivrs
fdivs
in
scas
pop
push
xor
fmulp
lret
aaa
outsl
sbb
aam
lock
push
mov
aas
insb
adc
int
faddl
lahf
mov
rorb
pop
sbb
mov
lods
sub
repz
sbb
lahf
or
enter
dec
jg
imul
sbb
mov
cmp
andl
push
out
ficoms
push
addr16
lods
cmp
fisubl
mov
xor
and
lcall
inc
loop
push
outsl
cmp
iret
pop
ss
fldl
repnz
pop
or
mov
sbb
mov
movb
sub
and
mov
jg
pop
mov
mov
xor
xchg
mov
pop
mov
cmp
daa
and
pushl
mov
ja
mov
mov
xor
and
ss
daa
outsl
test
push
out
mov
or
pop
subl
repz
xlat
mov
inc
subl
out
outsl
sub
sub
push
adc
arpl
add
fiadds
inc
std
notl
jp
adc
leave
fnstsw
xor
and
pop
iret
pop
ss
or
sarl
lcall
sbb
mov
add
cmp
mov
sub
mov
js
and
fildl
lahf
push
adc
xchg
popa
mov
adc
dec
push
shll
mov
pop
add
pushf
mov
and
sub
and
mov
inc
ffreep
mov
cmpsl
daa
call
or
stc
ret
push
push
testb
mov
cld
jl
dec
jl
popa
and
jg
push
dec
aad
rcrb
cmp
mov
movb
mov
sbb
out
imul
jg
inc
dec
adc
lret
inc
jne
int
xchg
mov
xor
inc
ss
push
movl
insl
neg
sub
push
daa
nop
daa
popa
add
or
and
mov
icebp
scas
xor
inc
push
inc
mov
jo
in
iret
adc
cmpsl
dec
mov
shlb
movb
xchg
cmp
subl
add
insl
inc
in
rcrl
jne
xchg
push
fisubl
mov
lahf
daa
mov
mov
push
mov
and
adc
inc
pop
adc
and
push
add
into
imul
mov
cld
out
fnstenv
fcmovb
push
int3
jnp
insl
adc
daa
scas
fisubl
mov
fisttps
cmp
pop
repz
push
inc
cmpsl
add
mul
push
stc
mov
or
aas
push
inc
xchg
and
jle
adc
or
xchg
test
xor
repz
pop
sub
inc
cmpsl
lret
fucomp
addr16
mov
je
sub
mov
xchg
mov
in
icebp
push
aaa
ret
rcll
imul
hlt
repnz
mov
inc
xor
rep
pop
xor
mov
movsl
rolb
cld
stc
pop
inc
imul
xor
dec
and
aas
xchg
ror
std
lods
sahf
or
sub
repz
ds
cs
clc
or
lahf
jg
cltd
jecxz
or
cmp
sbb
out
icebp
loopne
and
inc
dec
push
mov
inc
stc
out
cld
cld
stc
mov
arpl
mov
cs
cmp
xor
inc
fidivrs
jle
loopne
adc
out
mull
out
pop
sub
pop
jns
cmp
out
jg
retw
outsl
fidivrs
inc
or
push
stc
repz
fwait
int3
cmp
fsts
fidivrs
xchg
neg
mov
fcmovbe
pushf
fistpll
mov
iret
mov
xchg
pop
sub
mov
repz
dec
subl
aas
jg
push
adc
mov
stc
repz
dec
lds
mov
stos
loopne
dec
cmp
jg
jne
xor
int3
into
shlb
repz
sbb
inc
mov
jg
jno
jg
cld
mov
sub
dec
inc
cmc
aas
subl
repz
lahf
dec
insl
and
or
call
cs
jg
cld
stc
mov
shr
imul
frstor
iret
lahf
aas
push
jecxz
fsubrs
pop
xor
cld
stc
repz
inc
loope
lods
fdivr
imul
xchg
imul
add
and
jb
insl
xorl
pop
push
mov
adc
jmp
mov
xchg
and
inc
es
sub
and
mov
ja
jl
pop
lods
repnz
push
out
fwait
aaa
mov
aam
iret
xchg
fidivrs
mov
mov
jmp
xchg
mov
bswap
fwait
aaa
outsl
iret
in
test
xchg
mov
mov
jge
inc
std
out
mov
fimuls
mov
sub
inc
pop
lods
stc
repz
and
mov
addr16
xor
jg
cld
fistps
jl
cmovb
adc
pop
xor
push
pushf
inc
das
outsl
xor
jne
add
daa
shrl
repnz
add
cmp
xchg
idivb
adc
jmp
jne
stc
push
mov
jg
mov
sti
leave
jo
pop
and
pop
sbb
iret
lahf
aas
stc
inc
jp
and
into
xlat
stos
lret
mov
and
les
pop
inc
push
jns
out
fwait
les
mov
jb
jle
ds
orb
aam
int3
jg
cld
stc
rep
addr16
outsl
es
dec
xchg
iret
lahf
aas
jg
int
mov
addb
movsb
stos
push
cld
stc
repz
xor
ficompl
movsl
fnstsw
ret
leave
mov
fisubl
inc
xchg
es
outsl
lahf
inc
jnp
jo
icebp
call
inc
fiadds
mov
in
int
aaa
outsl
push
mov
push
lds
or
repz
or
in
dec
or
nop
adc
push
mov
std
iret
stos
subb
shlb
iret
xlat
cmp
leave
or
jno
int
aaa
outsb
push
xchg
scas
mov
jg
jne
lock
lods
cli
cld
idiv
fwait
mov
out
lahf
aas
arpl
jnp
xor
inc
ficoms
inc
push
sbb
push
or
fwait
aaa
outsl
push
add
sbb
ror
mov
sbb
jns
out
push
lahf
mov
orb
leave
out
dec
inc
lods
xlat
xchg
pop
insb
push
lret
mov
mov
je
aaa
jns
out
scas
and
insl
pushf
ljmp
aaa
outsl
fidivrs
xchg
push
push
fistl
add
mov
out
fwait
inc
push
icebp
push
jne
inc
iret
xchg
cmp
mov
xor
jns
mov
jg
fwait
loop
repnz
fwait
aaa
lds
hlt
adc
mov
push
jbe
fwait
loope
outsb
iret
push
push
fwait
aaa
outsl
xchg
push
arpl
mov
lea
cmpsl
repnz
xchg
pop
mov
inc
cmp
test
int
stos
xchg
sub
mov
repz
mov
dec
std
stos
mov
mov
jg
cld
or
cmpsl
mov
xor
mov
and
int
aaa
out
xchg
xor
xchg
mov
das
mov
addr16
pop
out
rolb
xchg
adcb
fisubrs
rcrl
adcb
pslld
and
outsl
fidivs
xchg
aaa
push
push
jb
add
adc
push
test
or
addl
mov
push
int
mov
inc
add
sub
sub
outsl
ja
mov
push
loopne
stos
dec
add
leave
jb
andb
sub
adc
dec
add
add
mov
pop
adcb
add
mov
in
mov
adc
inc
add
inc
js
ljmp
push
or
leave
int3
xchg
mov
mov
jb
std
cmc
add
lock
adc
lcall
mov
push
rolb
shr
add
pop
and
mov
inc
cmp
sub
push
add
sbb
push
mov
jp
enter
push
pusha
inc
insb
pop
jmp
icebp
or
adc
push
cmp
leave
pusha
adc
jbe
dec
ret
ds
jno
mov
inc
das
fisubrs
adc
cmpb
and
push
rorl
adc
orb
or
pop
inc
mov
add
pop
adc
pop
pop
insb
push
subb
jle
or
adc
xor
jno
sbb
add
inc
cmc
popa
shll
mov
add
and
pop
jnp
mov
data16
push
sub
lret
test
cli
sbb
push
jmp
push
adc
adc
sbb
sub
xorb
repz
mov
test
add
mov
dec
add
test
inc
in
cmp
adc
call
arpl
add
mov
icebp
add
aam
sub
cmp
cmp
and
fs
lds
imul
inc
mov
adc
and
in
mov
mov
stos
adc
cwtl
dec
mov
out
xchg
inc
adc
rolb
std
out
sarb
sbb
push
aas
mov
insl
or
sub
mov
mov
sub
xchg
mov
push
xchg
cmp
cmp
inc
mov
or
nop
cmp
add
shr
leave
mov
out
and
repnz
xor
int
arpl
push
rclb
or
sbb
lock
scas
test
std
cs
push
stos
roll
push
out
sbb
mov
inc
aas
sahf
call
xchg
test
jae
xchg
test
ret
aas
jns
int
add
xchg
or
stc
sbb
divb
in
xchg
popf
cmc
jb
or
rorl
lahf
test
and
call
xor
mov
sub
andl
inc
jb
movsb
xchg
push
out
sub
mov
pop
xor
sbb
add
add
mov
and
scas
ds
xchg
dec
stos
mov
cmp
jmp
or
adc
decb
sub
mov
call
neg
bound
stc
adc
mov
mov
add
inc
insb
icebp
inc
push
inc
mov
or
mov
lea
sbb
ret
mov
fcom
xchg
outsb
mov
rcrb
or
leave
scas
stos
fcomps
or
cmp
cmp
xor
pop
cmpsb
fucom
add
adc
fiaddl
inc
pop
or
or
sbb
mov
fistpl
cmp
pop
pushf
pop
add
nop
jmp
push
leave
cmc
add
xor
rcrl
add
jmp
inc
int3
sti
push
jp
icebp
icebp
out
push
mov
idivl
sbb
ror
sbb
mov
rcl
cmp
lods
sbb
sub
pop
jnp
mov
jle
scas
or
sub
stos
or
jb
fcmovu
and
insl
das
add
push
call
rolb
adcb
pusha
mov
and
adc
ret
mov
jmp
cli
dec
push
adc
lock
mov
mov
add
mov
mov
pop
xor
ljmp
enter
add
jne
or
dec
imulb
lret
push
cmp
orl
and
inc
or
pusha
lds
je
rol
sbb
push
and
jo
xor
inc
fstps
into
adc
mov
enter
sbb
dec
rcr
cmp
imul
fwait
aaa
movb
test
push
popf
add
pop
mov
push
adc
push
cli
test
or
testl
xchg
adc
repnz
test
and
mov
lret
scas
adc
jb
mov
push
lret
out
adc
insl
sahf
call
outsb
aad
bound
adc
hlt
mov
test
adc
or
mov
fistl
lahf
dec
add
sahf
ret
push
fwait
add
rorl
aam
add
mov
sub
xor
mov
insb
jbe
mov
sarb
inc
push
js
icebp
pop
loope
add
or
dec
adc
fdivrl
add
adc
push
or
mov
scas
hlt
stos
jp
pop
gs
call
out
mov
fsqrt
sbb
gs
sub
and
inc
fisubs
fwait
pop
clc
xor
sub
cltd
xchg
and
push
push
and
mov
pop
mov
mov
pop
jmp
bound
ret
or
dec
inc
adc
fs
inc
add
push
inc
mov
rcrb
mov
xor
mov
mov
mov
insb
add
sub
iret
mov
and
ret
push
xchg
and
pop
adc
inc
push
pop
fwait
sbb
aas
stc
lret
outsl
insb
mov
addb
or
push
sbbb
add
dec
addb
pop
movsl
movsl
ja
pushf
push
repz
sub
mov
mov
sub
cld
or
or
mov
sbb
xchg
add
mov
pop
add
lret
cltd
adcb
pop
xchg
cwtl
add
pop
mov
xchg
stos
sbb
add
mov
cli
fadds
fwait
insl
es
dec
adcb
add
es
nop
lret
iret
iret
sub
xchg
jl
inc
push
cmp
lret
test
call
into
rcll
lds
stos
push
push
cmp
mulb
add
or
add
loop
or
push
push
insb
add
roll
inc
pop
xchg
add
dec
sbb
jecxz
cmpsl
sub
mov
sbb
push
aam
or
shrb
push
iret
jmp
adc
clc
adc
push
test
or
into
xor
leave
sub
jo
push
stc
enter
sbb
inc
inc
jae
pusha
andb
out
leave
push
xor
sti
push
fmul
cmp
lds
mov
jmp
sbb
jne
push
shlb
jp
adc
and
jmp
mov
lds
push
add
aas
push
push
jl
decl
push
addr16
xchg
inc
fdivs
in
mov
or
and
sbb
jbe
rorb
inc
or
push
xor
test
stc
sbb
sub
and
push
sbb
loop
xchg
sbb
cmp
cmp
jecxz
inc
xor
movsb
test
sbb
inc
mov
cmp
and
test
stos
and
mov
lahf
fimull
xor
dec
pop
or
mov
sub
xor
ficompl
mov
ja
stos
divb
dec
clc
mov
out
cmp
add
sbb
into
jae
xor
lods
cmp
je
inc
rcll
lret
xor
pushf
fbld
adc
andb
sub
cmpsl
mov
jo
repz
xchg
sbb
in
ret
mov
xchg
les
push
call
mov
mov
repz
add
popa
sarb
dec
sbb
jnp
jb
and
mov
rclb
add
push
xchg
mov
aam
mov
int
imul
inc
push
jmp
inc
shlb
adc
adcb
ljmp
lods
pop
push
xor
ret
adc
mov
test
sub
dec
or
daa
sbb
enter
jns
push
fldl
stos
adc
cld
push
repnz
mov
jb
or
rolb
fnsave
stc
or
xor
adc
jo
sbb
mov
or
in
push
mov
or
xchg
mov
push
lea
jbe
fadd
xor
dec
xchg
adc
sbb
mov
sarl
ljmp
cmp
data16
xor
pop
mov
lock
push
aas
push
push
das
and
push
sbb
mov
cwtl
sbb
sar
xchg
stos
mov
out
je
int3
mov
stos
test
scas
stos
adc
lea
imul
bnd
adc
push
pop
stc
scas
scas
cmp
lock
lods
mov
loope
jg
and
lock
dec
popa
mov
das
or
sbb
add
or
mov
add
inc
mov
adc
add
cld
xchg
or
and
rcll
push
pusha
enter
sub
adcb
outsb
movsl
ja
outsl
mov
sbb
es
add
dec
and
andb
or
dec
push
flds
xor
lahf
lahf
pop
cmpsl
rcrb
mov
push
push
or
sbb
mov
das
sbbb
lds
aam
and
inc
add
sbb
xorb
push
push
into
insl
and
sbb
ret
cmpsb
push
and
mov
dec
and
in
cmp
lds
pop
lds
stos
bound
into
inc
icebp
jp
rolb
or
mov
inc
mov
mov
push
mov
adc
xor
mov
inc
dec
inc
in
test
or
cli
push
cmp
cmpsl
push
mov
ret
adc
clc
roll
movsb
sub
icebp
rcrl
and
daa
ror
mov
sbb
fsubs
cmp
cltd
lock
aam
and
push
xchg
cwtl
or
sbb
mov
jmp
push
push
orl
pop
mov
inc
xchg
fsubs
pop
sahf
or
popa
rorl
shrb
adc
push
pop
into
repnz
das
and
mov
xchg
cmp
hlt
mov
pop
dec
aam
add
add
imul
pop
push
roll
movsb
stos
push
js
lret
xor
and
mov
jecxz
ret
stos
orl
orl
in
adcb
push
dec
mov
mov
mov
bound
or
xchg
imul
xchg
adc
add
loope
add
add
pop
adc
rcrl
add
dec
mov
adc
adc
sahf
pusha
loope
fstpt
adc
xor
xor
add
arpl
loope
ss
dec
loopnew
js
or
aas
stc
inc
adcl
test
add
jno
dec
xchg
adc
and
test
jno
jmp
add
mov
xor
daa
mov
roll
mov
pop
pusha
movsl
pop
add
fisubl
mov
push
cmp
into
xchg
mov
adc
in
andl
xor
pop
pop
inc
lea
push
rclb
push
xor
pop
dec
or
stos
mov
hlt
or
and
adc
add
mov
jne
push
or
je
jae
push
mov
pop
add
andb
aam
roll
sbb
xchg
pop
push
dec
mov
add
aad
orb
mov
jne
mov
sbb
sbbl
into
mov
xchg
jecxz
mov
adc
adc
test
pusha
repnz
rclb
sub
and
loop
cmp
push
mov
popf
jae
xor
mov
mov
leave
mov
lcall
rorb
es
or
dec
or
lods
cli
pop
sub
sub
push
pushf
adc
jne
adc
or
lea
pop
add
jb
xchg
push
imul
pop
imul
stos
popf
and
add
pop
add
leave
dec
mov
cmp
push
mov
es
lds
push
lods
sbb
loopne
xor
orb
sbb
cld
push
insl
fldl
call
shl
mov
je
std
jmp
out
and
add
push
add
adc
in
push
rorb
sbb
andl
xchg
sbb
stos
and
int
adcl
or
inc
stc
adc
adc
or
cmp
jp
movsb
bound
sahf
rorb
mov
rorl
add
mov
adc
addb
inc
sub
mov
xchg
inc
inc
roll
pop
pushf
mov
add
ja
xor
or
test
rol
cmp
adc
lcall
add
sbb
push
mov
jns
sbb
popf
or
sbb
inc
sarb
mov
mov
and
lea
inc
call
xor
push
mov
aaa
lcall
rorl
adc
mov
inc
pop
xor
iret
pop
sarl
mov
rcl
dec
ljmp
sub
cli
not
mov
cltd
push
lock
stos
and
xchg
insb
jo
or
sbb
mov
xor
cmp
into
push
ljmp
adc
lock
and
sbb
stos
push
ljmp
ret
push
push
inc
adc
adc
or
inc
sub
pop
add
add
add
xor
je
rolb
stc
mov
outsl
bound
mov
dec
cld
test
test
sbb
push
leave
push
addb
mov
ds
decb
iret
sub
pop
enter
mov
inc
adc
cmp
pusha
dec
pop
sbb
cltd
or
pop
ret
ret
test
cmp
mov
inc
shlb
push
shlb
push
scas
fs
rclb
jnp
sub
mov
movl
and
bts
mov
add
xchg
push
xor
test
add
cs
in
cmp
call
pusha
stc
shll
in
xor
adc
rclb
sti
pop
mov
push
cwtl
rolb
pop
push
stos
inc
ror
dec
inc
add
jns
pop
mov
shl
xor
xchg
push
cmp
loope
sbb
rol
pop
inc
js
andb
shrb
jns
lcall
pop
scas
xchg
push
into
iret
and
lcall
mov
shll
test
jbe
add
in
mov
or
loop
adc
add
and
add
rcrb
jo
mov
movsb
inc
cwtl
fdivrs
mov
ret
rorl
dec
in
sbb
pusha
inc
sarb
je
sub
cwtl
add
add
gs
xor
leave
push
je
hlt
out
sarb
push
and
test
add
cvtpi2ps
andl
pop
pop
and
adc
mov
pusha
aas
adc
mov
in
push
mov
xchg
add
cmp
adc
mov
pusha
mov
sub
cmpsb
into
mov
push
xchg
into
xchg
shlb
push
add
inc
negb
nop
add
push
movsb
mov
sub
loop
add
cmp
into
in
xchg
add
popf
push
icebp
cli
popf
movsl
mov
push
or
push
js
sahf
jp
jl
pop
in
adc
inc
call
mov
fsubrl
mov
pop
adc
jnp
jnp
loope
jno
es
inc
xchg
inc
cmp
in
mov
mov
and
add
jnp
in
push
movsl
add
and
mov
add
loope
cmp
or
mov
adc
jmp
inc
dec
xchg
negb
xchg
jne
leave
adc
subl
icebp
dec
sub
ret
mov
push
xorb
rclb
xor
add
or
mov
add
ljmp
xchg
imulb
out
adcl
int3
mov
test
leave
unpcklps
push
xchg
sbb
jne
and
inc
push
loopne
std
mov
dec
jl
adc
push
pushf
stos
popf
jnp
fs
jne
cmc
or
sbb
js
pushl
sub
icebp
mov
push
cmpsb
push
je
popa
push
jb
mov
rolb
fimuls
inc
xchg
jp
dec
ljmp
sbb
pop
sub
mov
push
mov
mov
pushf
xor
push
push
push
xor
dec
xchg
je
push
loopne
push
sbb
js
ds
push
add
rolb
imul
andb
cmp
xor
sbb
test
adc
adc
loope
or
mov
ret
adc
or
push
adc
fsubl
shll
add
push
xchg
sbb
inc
pushf
add
and
push
add
arpl
jmp
rcl
fs
lea
pusha
cmp
jge
adc
inc
xchg
push
sub
mov
push
mov
mov
repnz
or
loope
or
or
and
sbb
pop
adc
dec
inc
jecxz
stos
push
xor
xchg
and
or
bound
add
pusha
push
pop
mov
mov
add
mov
lds
inc
sarb
and
and
xor
jae
xor
mov
push
call
mov
sub
jge
je
sysret
out
icebp
test
sbb
xor
mov
dec
cmpsb
add
data16
roll
or
jge
xor
sub
sahf
or
or
inc
stos
mov
dec
out
lret
pop
gs
and
xor
test
addr16
loopne
test
pop
mov
sbb
add
dec
or
or
or
jbe
inc
loopne
dec
pop
sbb
push
cmp
test
imul
sbb
or
shrl
repz
pop
push
jge
xchg
adc
mov
xor
stos
inc
push
push
inc
or
imul
out
test
repz
pop
cmp
inc
xor
mov
xchg
add
xchg
call
mov
pop
cmp
into
push
rol
add
sbbb
push
inc
in
imul
add
leave
and
and
add
push
sub
mov
jmp
adc
ret
mov
mov
lret
pop
daa
mov
loopne
jp
mov
in
cmp
insl
mov
rolb
popa
mov
sbb
inc
adc
xchg
mov
cwtl
adc
lds
push
rcr
push
or
aad
inc
pushf
inc
inc
je
mov
sbb
sbb
inc
mov
adc
lcall
xor
lods
cmp
shl
inc
adc
jmp
pop
sbb
push
add
faddl
mov
jne
push
repnz
sbb
loop
sarb
icebp
roll
into
push
mov
ret
mov
lods
test
or
idivb
rcrl
cli
lock
pop
adc
or
icebp
adc
mov
addr16
or
addb
add
cltd
loop
pop
xchg
cld
subb
inc
sbb
jge
inc
cmp
daa
repnz
je
and
lock
lds
mov
xchg
stos
testl
mov
addr16
scas
mov
sbb
fisttps
js
test
shlb
mov
aaa
inc
jnp
fsubp
sar
adc
wrmsr
push
test
adcb
ret
xor
mov
or
push
cwtl
lods
xchg
xchg
sbb
lds
sub
sahf
jnp
adc
icebp
push
push
pop
stc
sbb
and
dec
and
push
jno
push
sub
mov
push
and
dec
mov
sbb
bound
addl
bound
fscale
sbb
pop
test
lea
mov
rolb
pop
pop
leave
push
adc
adc
push
mov
add
sbb
mov
push
xor
add
ret
cmp
rorb
push
sub
pop
mov
mov
subl
test
add
add
mov
mov
adc
test
adc
sbb
mov
push
into
roll
adc
test
push
or
pop
inc
sub
add
ret
shlb
ja
or
imul
rolb
pusha
push
push
sbb
and
xchg
mov
add
orb
bound
push
imul
cmp
shlb
mov
test
push
aad
add
mov
adc
mov
repnz
cltd
clc
and
rol
push
add
and
jne
test
inc
rclb
loope
inc
pop
pop
sbb
add
lret
call
icebp
mov
sbb
mov
test
frstor
inc
push
sub
mov
add
js
jno
inc
icebp
adc
sbb
dec
int3
mov
add
lds
inc
jo
mov
add
stos
or
sbb
jb
pusha
repnz
cmpsl
lock
inc
and
xor
add
sbb
and
mov
movl
rorb
inc
mov
dec
mov
subl
clc
in
popf
test
inc
mov
loopne
cmp
sbb
pusha
push
sahf
int
cmp
jle
push
adc
pusha
add
rcl
pop
push
sbb
nop
out
leave
lret
adc
jp
adc
shr
push
bound
inc
js
in
mov
mov
xchg
xor
out
cmp
call
push
xchg
adc
cltd
mov
insl
mov
inc
push
data16
clc
pop
outsl
or
cli
or
cmp
outsb
cld
lcall
push
sub
dec
insb
push
push
mov
add
sbb
aas
int3
mov
jns
call
sub
orb
dec
test
fdivrl
es
std
or
dec
push
rcl
stc
mov
mov
jge
inc
adc
pop
push
lret
mov
xchg
lret
test
dec
dec
test
pusha
cwtl
cmpsl
xor
add
fs
xlat
jmp
dec
fstpt
adc
mov
clc
push
ss
add
cmp
adc
shl
mov
xor
xchg
imul
loop
mov
or
or
sub
xor
add
enter
lds
inc
aam
mov
ret
loopne
mov
pusha
clc
add
xchg
adc
and
enter
test
andl
out
shlb
daa
in
inc
pop
aam
sar
mov
lock
jecxz
sbb
sub
leave
xor
and
pop
cmp
xor
psraw
ret
add
sub
popf
iret
shlb
dec
les
push
out
xchg
rclb
insb
cli
adc
hlt
inc
cmp
sahf
add
sub
push
push
pop
dec
lds
rorb
jo
cltd
sbb
inc
mov
adc
xor
sbb
push
pop
add
pop
pop
mov
pusha
icebp
push
or
test
lds
add
pusha
sub
adc
or
dec
notb
aaa
push
aad
add
xchg
or
inc
xor
lret
inc
jb
cs
adc
mov
rcrb
or
add
inc
push
popa
sub
pop
and
sbb
xchg
xor
mov
mov
addb
mov
stos
cmp
and
add
sub
or
jo
cmp
adc
gs
push
lock
std
mov
sar
sbb
dec
das
mov
push
cwtl
insb
adc
pop
movsl
cmp
cltd
inc
jbe
ljmp
loop
shl
cld
lret
std
push
jmp
dec
ljmp
sbb
dec
or
mov
mov
dec
mov
fwait
or
cmp
gs
inc
stos
adc
add
adc
test
jle
push
push
and
pop
ljmp
mov
push
lock
pusha
sbb
pop
or
push
push
adc
xchg
mov
push
jb
jne
mov
lods
in
push
ret
or
dec
push
lock
out
icebp
xchg
scas
loop
cld
add
movsb
dec
sub
movsb
or
scas
mov
aad
aam
mov
js
or
pushf
mov
mov
les
pop
xor
les
push
fstl
imulb
jp
mov
loope
mov
test
and
addl
mov
mov
xchg
lock
ret
mov
roll
inc
sbbb
xchg
mov
rcrl
call
js
fxch
inc
or
adc
adc
xor
mov
ds
leave
push
sbb
mov
jb
ds
std
sbb
xchg
out
loopne
jae
out
negb
adc
in
inc
adc
push
movsb
cmp
pop
in
into
js
ds
push
ret
movaps
or
popf
add
add
or
add
mov
push
nop
jo
fcoms
lock
sbb
inc
jae
sbb
pop
xchg
imul
test
das
lock
loopne
ficompl
pop
inc
push
push
shrb
add
adc
mov
cmp
push
addr16
enter
lret
or
add
sti
ret
pusha
push
fstpl
xchg
int3
or
out
sbb
ficomps
mov
rorb
imul
test
mov
out
sahf
je
enter
rolb
mov
add
jmp
and
pushf
aam
sbb
rcrl
outsb
jmp
or
out
fs
push
inc
ljmp
add
sbb
shlb
or
mov
cltd
jo
repnz
testb
add
aam
sbb
sbb
cmp
bound
sub
repnz
mov
mov
xchg
lock
xchg
aam
es
sbb
xor
jb
lcall
adc
jae
fmuls
cmp
or
mov
push
loope
test
dec
into
push
or
xor
shrl
dec
jne
sub
adc
cld
add
push
push
mov
push
icebp
fdivs
push
or
pop
adc
loopne
lock
push
xchg
popa
addl
sti
jl
mov
xchg
lret
add
rclb
and
adc
dec
je
ljmp
loope
mov
xchg
int
inc
inc
dec
test
enter
ljmp
add
or
incb
mov
cli
xor
adc
rorl
bound
sub
mov
and
add
cmp
mov
or
aad
test
fs
adc
cmp
loopne
aad
in
cmp
push
or
pop
popa
cmp
jne
push
push
xor
add
jno
stos
xor
sahf
mov
adc
and
aaa
rorb
mov
xor
mov
push
scas
sub
push
outsb
xchg
and
push
jp
stos
or
les
test
or
adc
mov
inc
or
fsubrl
mov
cltd
roll
xchg
call
dec
test
mov
aam
or
or
adc
test
cmp
rcrl
mov
or
aam
pop
xor
add
mov
push
adc
push
mov
adc
pop
add
repz
push
mov
mov
roll
shl
inc
add
pop
dec
shll
push
enter
pop
stos
dec
ficomps
scas
adc
or
fiaddl
or
push
scas
and
and
push
mov
and
pop
sub
cmp
xchg
jl
adc
adc
push
mov
lds
sahf
pop
lds
jl
repnz
jne
or
cmp
and
pop
adc
add
mov
leave
mov
andb
xor
push
aam
cmpsl
push
add
leave
push
xchg
decb
mov
mov
scas
adc
mov
mov
cmp
add
pop
test
sbb
or
mov
fidivl
sarl
add
and
dec
andl
sub
inc
repnz
int3
xchg
mov
mov
ljmp
lsl
cmp
jno
sti
in
pop
cmp
add
sbb
shlb
push
inc
jmp
sahf
sti
mov
or
ss
incb
mov
mov
mov
or
push
adc
call
aad
cs
sub
xchg
mov
or
mov
pop
ljmp
or
aad
adc
jmp
pop
cwtl
js
add
xchg
imul
add
jno
and
andl
bound
pop
push
sub
adc
das
lcall
fsubrl
push
aam
scas
xchg
iret
mov
jne
lret
xchg
inc
xchg
sub
push
push
xor
shlb
pop
cltd
out
testb
inc
and
jmp
call
add
and
dec
loope
aad
mov
aad
jmp
pop
cld
push
add
sbb
loope
inc
add
sbb
ljmp
push
dec
adcb
push
inc
cli
faddl
mov
adc
ror
daa
xor
or
push
call
add
or
push
or
pop
add
inc
cs
cs
out
dec
int
in
mov
or
push
hlt
addb
add
sahf
xchg
adc
xchg
addl
sti
test
add
dec
shll
xor
aam
int
sub
add
mov
pop
lock
pop
lret
adc
popf
addr16
inc
xor
mov
repz
arpl
test
shlb
shrl
pop
scas
insl
nop
and
xor
mov
pop
mov
or
es
and
xchg
mov
adc
and
cmp
jne
stos
xchg
in
rorl
rcll
imul
pusha
out
inc
xchg
xor
jbe
loopne
add
aad
and
enter
test
push
fsubl
inc
in
add
dec
adc
jb
jl
addl
or
test
rclb
sbb
push
fldl
shlb
sbb
clc
or
cmpsl
push
cmp
sbb
adc
into
add
shll
add
roll
push
add
xor
sub
pop
adc
es
shlb
mov
bound
sbb
dec
sbb
and
adc
pop
out
inc
cwtl
sub
enter
and
loop
enter
rolb
sub
stos
je
fsubrs
inc
outsl
nop
pop
jae
add
jg
cmc
loopne
or
stc
adc
es
rorl
push
insb
pop
js
sbb
sbb
cmp
sub
cltd
lods
pop
test
test
push
cmp
inc
mov
push
cld
push
cmp
out
test
or
popf
xchg
xor
mov
dec
loope
call
mov
add
rorl
stc
nop
icebp
inc
mov
cli
add
cmp
outsl
addb
add
test
or
stos
adcl
dec
pop
mov
sbb
fstpt
aas
mov
inc
push
inc
test
outsb
adc
scas
pop
mov
lret
shrl
cmp
rorb
arpl
stos
int
cmp
ss
adc
es
adc
loop
cmp
add
xor
int3
lods
xchg
or
push
jo
loopne
inc
mov
push
push
lcall
icebp
or
cmp
inc
dec
clc
cmpsl
pop
inc
mov
mov
pushf
sub
stos
inc
and
pusha
push
fcomp
sbb
dec
push
fimull
mov
cmp
add
push
dec
pop
or
rolb
addr16
hlt
push
scas
pop
pushf
call
into
mov
cmpl
mov
jne
xchg
arpl
and
aas
ret
pop
rcl
inc
cwtl
or
xchg
or
xchg
xor
inc
adc
inc
pop
inc
leave
add
mov
es
inc
shll
lock
clc
xlat
stos
jo
stos
das
popa
lcall
outsb
sbb
rcl
scas
add
add
pop
jne
inc
in
sbb
fldl
sbb
ss
pop
adc
push
push
sbb
jl
out
lcall
jnp
insl
lahf
lret
inc
pop
sbb
sbb
hlt
cmp
xor
sub
xchg
addb
iret
pop
loopne
add
lret
inc
pop
call
test
push
mov
shlb
icebp
add
retw
scas
test
xchg
add
into
xor
push
push
rcl
mov
adc
adc
pop
mov
jo
push
push
push
and
adc
adc
mov
mov
js
mov
cmp
push
test
sub
das
xlat
xchg
add
nop
inc
add
stc
jp
ret
mov
push
test
inc
inc
mov
adc
repz
in
adc
dec
and
add
push
pop
push
outsl
add
rolb
mov
jns
inc
pop
data16
mov
sub
das
movsb
fcomps
fsubs
adc
push
ljmp
mov
rclb
insb
std
mov
mov
imul
mov
sbb
shlb
testb
and
sti
cltd
popa
adc
jb
jae
push
xor
or
hlt
pop
push
js
dec
lods
push
fldt
call
rorl
mov
in
add
mov
call
fmuls
pop
and
or
popa
and
mov
mov
jg
push
sub
ljmp
nop
int3
mov
dec
push
push
imul
mov
xor
cli
adc
inc
addr16
sub
jo
push
icebp
inc
sbb
pop
mov
add
sub
jp
add
cmp
mov
call
cmovae
or
not
adc
sub
leave
inc
call
jbe
inc
xor
jge
sbb
sbb
sub
jl
pop
inc
and
adc
mov
sub
jae
jb
add
mov
negb
aad
sbb
mov
lret
mov
inc
sbb
pusha
jle
sub
cmp
add
test
stos
dec
adc
popa
hlt
xchg
xor
cli
xor
js
push
addb
pop
pop
xor
adc
mov
cmp
inc
negl
lods
mov
daa
movb
lds
mov
rcrl
or
pushf
lods
js
pop
shrb
sbb
adc
sub
add
cltd
ds
nop
sub
cmp
cmp
movb
sbb
add
xor
pop
sub
lret
imul
sbb
add
sbb
enter
mov
test
inc
fcomi
cmpsb
movsl
sbb
add
or
test
mov
cmp
mov
xor
add
xchg
add
push
in
inc
xchg
orb
jne
testl
adc
in
and
addr16
or
cwtl
ljmp
aad
jmp
and
sub
add
and
add
add
push
rcrl
push
in
push
daa
add
lea
sub
subl
pop
mov
jnp
rorb
pop
mov
and
xchg
icebp
jg
jecxz
rclb
rorb
sub
mov
cmp
add
sub
pop
jne
lret
loope
adc
xchg
or
dec
cmp
dec
sub
mov
shrb
shll
mov
add
push
mov
dec
cmp
rolb
and
fcoms
mov
sti
stos
pop
and
xchg
leave
add
sub
push
or
into
inc
xchg
in
lods
jmp
or
insb
add
add
lea
push
mov
push
push
dec
sub
sbb
addr16
sub
xchg
xor
sub
fwait
mulb
adc
scas
sti
repnz
adc
dec
scas
or
adc
jb
inc
rcll
xorb
pop
inc
out
adc
pop
xchg
dec
cs
and
je
adc
pop
lock
adc
xchg
test
enter
sub
mov
ror
mov
aam
out
jb
dec
mov
pop
xor
inc
xor
add
mov
and
dec
scas
in
fiaddl
mov
mov
cmp
shld
dec
pop
roll
or
cli
inc
dec
adc
insb
pop
sub
or
mov
adc
mov
sub
rcrb
out
inc
push
in
sbb
inc
inc
scas
mov
mov
mov
xchg
mov
mov
mov
sahf
ss
bound
clc
decb
mov
inc
push
in
inc
lods
jp
test
insb
leave
adc
add
cmp
sahf
rolb
xor
sbb
jmp
push
inc
rolb
push
pop
cs
test
cmp
je
add
cmpsl
xor
push
and
into
icebp
mov
inc
xor
add
jg
push
repnz
or
les
add
jp
inc
xchg
sbb
add
mov
adc
in
addb
mov
pop
hlt
push
arpl
and
lods
psraw
pop
into
cmp
into
shlb
pop
sbb
dec
stos
mov
and
add
leave
dec
xchg
adc
mov
lods
add
cltd
cwtl
push
inc
sub
add
and
sub
mov
pop
inc
fs
sbb
cmpsl
cmpsl
mov
sbb
test
sbb
sub
sbb
pushw
xchg
push
ffree
and
es
dec
test
push
outsl
or
popf
or
sub
lcall
adc
and
test
push
add
xor
dec
inc
shrb
rorl
adc
mov
xorb
inc
fcmovnbe
jb
xor
lock
or
push
inc
sub
mov
loop
push
pop
jo
adc
push
pop
inc
push
inc
add
loop
xor
cltd
push
lcall
jo
mov
push
fsubs
dec
add
imul
mov
or
orb
add
roll
jnp
ret
push
sbbl
bound
push
das
shll
jno
jo
mov
pushf
sub
sub
dec
xchg
sbb
pop
pop
movsl
pop
mov
aad
sub
cli
mov
sub
in
jne
lea
or
push
sbb
xor
imulb
sbb
mov
push
mov
lock
push
dec
js
pop
sbb
mov
push
lret
mov
cltd
push
pop
add
loope
aad
cwtl
adc
push
push
mov
sbb
push
mov
pop
das
mov
nop
sub
pop
adc
jecxz
mov
gs
sub
shll
sbb
cld
sbb
pop
je
inc
rorb
into
or
xor
mov
movsb
inc
inc
pop
sbb
ret
rclb
sbbb
push
xor
adc
or
or
cmpsb
rep
xchg
test
sub
jo
and
sub
or
sbb
mov
mov
pop
pop
mov
jno
enter
and
pushf
mov
jo
aad
mov
adc
push
cmp
jp
adcl
cltd
push
xor
sub
add
enter
enter
adc
xchg
imul
lock
and
sarb
call
xor
mov
aam
shrb
jp
add
xlat
mov
ss
je
fwait
cmp
cmp
sahf
sbb
mov
data16
pusha
adc
jl
push
cmp
xor
data16
fildll
pop
imul
mov
lret
mov
adc
inc
add
inc
iret
jle
add
jo
subl
orb
cmpsb
or
mov
pop
or
cmp
or
cmp
loop
inc
sub
outsl
and
jp
jo
bound
stc
ja
push
push
mov
cwtl
mov
imul
xchg
stos
pusha
js
test
inc
add
cmc
adc
rorb
push
pop
lret
dec
data16
push
inc
ljmp
pop
ljmp
push
adc
dec
mov
sbb
sub
lods
dec
xor
loope
xchg
ret
add
sub
sub
into
imull
jmp
dec
xor
sub
adc
add
push
add
pop
and
adc
scas
ljmp
sbb
sbb
jl
adc
orl
pop
or
sub
addr16
sbbb
call
inc
inc
xor
test
pop
and
pop
lock
pop
sub
aad
pop
jno
sahf
lods
push
test
movb
imul
loopne
inc
ljmp
ss
push
push
clc
inc
push
push
push
mov
add
jmp
test
adc
loope,pn
pop
or
mov
subb
cmpsl
xchg
cmp
stos
or
add
rclb
mov
push
add
insl
or
lcall
stos
and
sub
add
and
cmp
push
xlat
stos
enter
push
xchg
orl
mov
mov
call
xor
imul
stos
sub
push
xchg
rcll
jo
shrb
add
push
cmp
faddl
sbb
stc
aaa
lea
or
shl
adc
sbb
cs
into
xor
js
xchg
add
push
int
sub
bound
adc
enter
sub
adc
push
mov
xchg
cmc
and
ret
ret
fsubl
imul
leave
xchg
mov
mov
rclb
mov
push
loop
rcll
mov
inc
mov
addr16
imul
shl
pop
insb
or
jp
adc
or
sbb
call
xchg
test
sub
pop
hlt
or
and
inc
enter
sbb
push
cmpsb
sub
sbb
leave
nop
or
fists
divl
jne
or
cwtl
mov
test
sbb
push
iret
shll
push
dec
stos
lds
mov
push
addb
xorl
add
lret
push
mov
in
xor
push
lods
out
cwtl
sbb
add
jb
add
xor
adc
mov
jmp
or
inc
cli
addr16
mov
out
jmp
shlb
mov
sbb
mov
mov
add
pop
and
pop
sbb
out
mov
push
xchg
adc
pop
adc
push
pop
testb
xchg
aas
pop
daa
stos
mov
outsb
and
or
js
push
test
hlt
push
sbb
mov
xor
cmp
cmp
sub
int3
or
inc
lret
cwtl
push
push
js
loope
pusha
inc
shlb
jbe
add
lret
mov
fldl
push
inc
xchg
clc
fsubr
push
int
or
push
add
push
stc
or
xor
cmp
cmpsb
sub
push
lods
sbb
and
subb
scas
ret
fsubrp
mov
rcll
push
pop
cmp
leave
add
roll
lret
lock
pusha
and
bound
xor
pop
call
mov
enter
and
pop
pop
cmpb
pop
loopne
adc
xor
es
int
add
pop
js
pop
es
lahf
shll
mov
sub
iret
mov
push
mov
xorb
test
mov
dec
mov
ret
cmp
add
insl
neg
or
pusha
enter
cmp
dec
shlb
pop
or
inc
and
add
push
cwtl
add
pop
dec
push
clc
cwtl
adc
mov
faddl
sbb
push
ljmp
add
sbb
adc
xorb
sub
add
int3
das
add
test
mov
xchg
enter
xor
inc
jno
mov
mov
mov
push
cmp
sar
lods
push
lods
das
and
mov
mov
add
loop
mov
xchg
fists
mov
dec
push
or
push
inc
push
ret
mov
sub
mov
daa
stc
and
mov
add
clc
test
imulb
sar
push
les
ficoml
sbb
sbb
std
lock
popa
jo
xchg
andl
add
push
mov
call
cmp
push
add
dec
stos
mov
jo
or
sahf
add
andl
loope
push
jae
dec
adc
movsl
lods
popa
fadds
or
insb
fwait
jmp
jae
das
fstps
les
mov
rcl
inc
add
cmp
push
adc
cmp
prefetchwt1
lock
jno
mov
mov
jno
xor
loope
leave
or
inc
lea
lcall
stc
pop
cmc
mov
sub
and
xchg
ret
push
mov
mov
ljmp
mov
and
jbe
inc
adc
leave
clc
sahf
add
imul
cld
shrl
mov
push
mov
test
popa
sbb
dec
push
call
push
xchg
add
and
jge
adc
mov
push
push
dec
sbb
aas
repnz
mov
test
fs
or
lret
sub
test
and
ret
xchg
test
lret
push
dec
insb
mov
push
fcomps
sub
cmp
les
jl
lret
add
pop
adc
ret
push
xchg
out
mov
mov
mov
sbb
es
add
push
xchg
adc
inc
push
mov
repnz
pop
adc
pop
aaa
mov
mov
stos
mov
mov
dec
mov
and
or
xor
icebp
ljmp
push
or
cs
sbb
inc
inc
sbb
xor
in
add
push
and
data16
in
sub
testb
sbbb
shrb
mov
jb
mov
pop
jne
dec
xor
jl
mov
out
mov
push
adc
add
inc
xchg
leave
adc
inc
cmpsb
mov
xchg
stos
mov
push
add
daa
incb
mov
add
pop
sbb
or
inc
adc
adc
lcall
dec
pop
adc
leave
aad
ds
adc
clc
lock
test
es
or
xadd
inc
ret
stos
mov
in
sub
and
lods
testb
push
xchg
cmpl
push
cmpsb
mov
push
sbb
add
push
sbb
push
rclb
add
add
scas
inc
push
ficoms
pusha
cmp
pop
jp
push
or
cld
addl
add
cmp
jno
pop
push
call
cmp
mov
ljmp
add
push
sub
loop
adc
test
cwtl
or
pop
jmp
add
jns
lcall
adc
pop
adc
sbb
in
notb
dec
addb
sub
pop
insl
cmp
adc
sub
adc
sbb
aad
in
lock
or
lock
hlt
inc
and
pop
or
push
sub
fcompl
je
test
pop
outsb
add
stos
xor
sub
pop
add
cmpb
pushw
or
les
aad
jmp
mov
fldl2e
xlat
and
xchg
push
add
or
push
adc
push
or
test
mov
das
xor
push
repnz
mov
test
adc
and
pop
mov
es
daa
cmp
push
dec
xchg
rcll
jne
mov
xor
insl
rolb
lds
roll
test
adc
jp
add
into
rorb
sbb
inc
inc
rcrl
hlt
lcall
lahf
mov
sbb
xchg
cmp
aad
and
push
add
pop
mov
pop
leave
sbb
clc
mov
pop
repnz
mov
aaa
inc
sub
scas
jp
adc
repnz
mov
aad
rorl
adc
pop
lret
adc
push
push
loopne
shrl
cmp
cs
sbb
rcrl
or
add
es
push
sub
push
movsl
sbb
stos
add
and
or
bound
or
inc
cmp
xchg
loopne
pop
addr16
xchg
in
aad
js
inc
add
add
int
hlt
sub
mov
pop
inc
rsm
mov
loope
add
xor
cld
push
or
mov
stos
adc
fs
test
mov
xor
roll
cli
orb
cmp
xor
mov
inc
xchg
stos
mov
mov
sub
inc
sub
lret
ficoml
mov
xchg
bndldx
push
or
and
cmp
dec
mov
adc
add
xchg
sbb
and
repnz
inc
adc
adc
push
add
add
mov
les
inc
sti
add
push
sbb
insl
ret
leave
iret
insl
mov
mov
mov
add
inc
inc
cmp
js
lcall
push
pusha
inc
sub
xor
xchg
cmpsl
push
cmp
push
or
dec
add
jb
and
xor
pop
lds
mov
xor
test
ret
insb
cli
push
in
rcr
dec
lret
movsb
addb
arpl
sbb
push
xchg
push
sbb
push
push
int
mov
dec
addb
call
es
popf
pop
jle
mov
sub
cmpsl
jle
cwtl
add
stc
adc
xor
jb
adc
inc
sbb
jl
jae
pushf
sbb
icebp
cwtl
adc
cmp
or
insb
adc
sahf
push
or
rolb
rolb
adc
adcl
push
push
xchg
repz
xchg
and
sub
aad
adc
pop
push
xor
cmp
or
cmp
shlb
clc
inc
mov
jle
push
sbbl
dec
call
mov
aam
cmp
mov
into
lds
shrl
add
sbb
pop
xor
push
sub
xor
or
into
pop
and
or
inc
pop
enter
fildl
or
xor
addl
cld
repnz
jo
mov
ss
push
push
sbb
les
mov
sbb
add
loop
loop
add
push
lock
and
lock
in
adc
sub
into
mov
sbb
add
bound
push
ja
and
lock
shlb
xor
cmpsb
iret
in
mov
pop
shll
add
and
add
imul
push
ret
pusha
push
xor
push
hlt
enter
mov
mov
bound
sbb
push
mov
xchg
addl
sub
pop
xchg
insl
pop
loopne
or
cltd
add
inc
mov
pop
mov
mov
pop
rol
xor
sub
or
add
sub
in
mov
scas
sti
sub
add
movb
xchg
and
mov
add
das
inc
rcl
or
insb
pop
mov
xor
jecxz
es
inc
dec
sbb
mov
cmp
sub
lret
push
loope
mov
inc
inc
lds
pop
pop
jecxz
jae
bound
cld
lock
push
imull
or
push
rcl
in
andl
xchg
rolb
xchg
jge
cwtl
sbbb
adc
inc
je
loopne
add
dec
inc
cmpsb
cmpsb
adc
mov
inc
arpl
pop
adcl
enter
adc
push
stc
lods
mov
pop
inc
mov
mov
mov
ljmp
adc
cmpsb
ss
push
or
sbb
sbbb
cli
fs
push
push
mov
les
and
test
xchg
notb
push
je
xor
adcb
shrb
roll
push
sbb
in
mov
xorb
pop
and
sbb
sub
inc
bound
adc
je
add
jns
aas
lds
shrl
add
mov
out
push
push
mov
call
rorb
pushf
sub
sub
loope
mov
add
aas
push
mov
xchg
shr
mov
decl
shlb
nopl
es
lahf
mov
adc
testb
pop
mov
jbe
sbb
pop
clc
unpckhps
inc
orb
jmp
fstp
outsl
fbstp
cs
sub
lea
push
sub
adc
add
fimull
rolb
je
mov
jbe
fistpl
jge
or
jne
push
push
and
and
out
repnz
pop
mov
inc
in
mov
mov
divl
adc
bound
ret
mov
jne
push
jg
cmp
jnp
add
or
add
cmp
or
push
dec
das
and
xorl
hlt
in
add
push
jns
out
sbb
or
push
add
idivb
pop
add
ret
cmp
inc
or
xchg
adc
cmp
iret
or
int3
push
sub
adc
pop
cmp
adc
or
or
and
jl
jmp
and
int
test
jne
mov
and
insl
mov
push
lea
xor
push
popf
push
out
scas
sub
xor
xchg
enter
notb
sbb
aas
test
pop
je
or
pop
ret
subl
adc
sbb
pop
or
repnz
cmp
jae
jo
inc
test
jmp
ret
jno
push
or
inc
ret
movsl
lea
pushl
or
adc
pop
je
outsb
mov
fdivr
add
int3
sti
add
int
jmp
sbb
sub
dec
mov
into
cld
mov
mov
mov
out
loope
mov
enter
cwtl
subb
push
lds
lea
movsl
add
fldz
xor
and
xchg
add
jno
pop
jle
cmp
mov
pop
in
mov
xlat
jmp
cmp
cmp
cmp
cmp
inc
sbbb
popl
push
cmp
jbe
push
aaa
fdiv
in
rcrl
js
pop
jmp
call
mov
inc
push
enter
xor
leave
mov
test
aam
cmp
push
es
aaa
dec
je
lea
add
loop
jae
dec
jne
out
adc
sbb
jnp
pop
pop
mov
pop
call
sti
clc
mov
cmp
jne
jno
sti
testb
adc
mov
xor
mov
jmp
cmpb
or
mov
push
inc
or
ja
xor
add
jmp
xchg
push
push
xor
cmp
in
rorb
pop
mov
ret
je
cmp
je
mov
out
and
lea
mov
mov
pop
cmp
mov
lods
std
outsl
push
clc
std
cmp
cmp
loope
in
cmp
aas
dec
and
cmp
das
ja
mov
pushl
js
pop
bound
std
mov
mov
aaa
jne
pop
incl
je
ja
mov
add
or
ja
arpl
mov
add
push
push
ja
dec
clc
mov
mov
dec
mov
mov
push
add
push
push
mov
mov
push
lahf
adc
mov
es
pop
sbb
push
mov
and
push
push
xor
frstor
adc
pop
movsb
pushf
cmc
mov
pushf
cwtl
dec
sbb
es
jnp
js
jne
jecxz
or
add
dec
movsl
jle
aaa
add
mov
lret
das
cld
or
inc
cmp
sub
js
fcomi
addb
add
xor
mov
mov
jle
enter
or
jmp
or
andb
inc
pop
fs
testb
inc
push
add
and
sbbl
mov
inc
and
das
outsl
int
or
or
jne
jne
dec
mov
fimull
dec
jmpw
jmp
pop
jae
pop
inc
sub
xor
mov
lods
lock
rcl
test
pop
jne
inc
inc
jmp
or
sbb
xchg
sub
ret
add
or
cmpb
jecxz
jmp
fdivs
or
sbb
sete
imul
divb
mov
dec
test
push
pop
inc
mov
push
repz
mov
aas
je
minps
sbb
popa
ret
push
pop
sbb
jbe
outsb
inc
inc
add
jo
sti
ficoml
xor
push
movl
pop
push
sti
pop
ret
dec
and
push
aam
mov
rcr
ss
sbb
test
add
lahf
pop
test
push
aam
sub
sbb
inc
cmp
pop
ljmp
pop
push
adc
cmp
inc
or
daa
ret
inc
inc
jmpw
inc
or
push
push
rol
or
sbb
sar
mov
pop
add
dec
cli
sar
xlat
xor
xor
je
mov
push
push
shll
mov
or
daa
pop
or
test
mov
jmp
pcmpeqw
ror
pop
test
je
inc
cmp
aam
jnp
add
movl
sub
sti
jmp
mov
sbb
jmp
push
adc
mov
dec
in
test
int
push
dec
lahf
es
xor
pop
pop
loopne
or
lea
outsl
fisubrs
fmul
add
andl
inc
add
sub
add
mov
lock
hlt
addr16
cmp
mov
mov
jl
pop
sbb
jge
mov
outsb
int
lret
lea
imul
pop
pop
jnp
es
roll
mov
jl
jmp
mov
adc
jle
cld
inc
and
mov
cmp
fsubrs
lcall
push
and
mov
sbb
loopne
insl
fstpt
movsb
rolb
pop
dec
sarl
in
add
inc
cmp
jl
cld
lcall
xor
pop
and
cmpl
lea
jne
jge
adc
enter
jmp
sub
mov
fcomps
sub
or
outsb
jecxz
jp
push
jo
and
sbb
in
orb
or
mov
jns
jne
or
add
addb
jl
jle
ss
pop
test
sbb
adc
mov
mov
mulb
loope
int
jnp
sub
sbb
sbb
adc
adc
jp
adc
lea
or
xor
inc
adc
xlat
outsb
insb
add
xor
adc
jbe
dec
es
mov
push
and
insb
insb
sub
xchg
es
fwait
insb
pop
adc
outsl
pop
jge
push
stc
push
cmp
push
xlat
stc
xor
dec
xor
outsb
sub
popa
pop
enter
sbb
nop
vcvttss2si
je
push
enter
int
fldcw
cmp
pop
daa
mov
pop
aad
testl
xor
je
out
mov
adc
adc
push
push
pop
movsb
pushf
sti
inc
push
fs
push
and
mov
mov
cmp
pop
mov
dec
mov
dec
pop
jl
jae
adc
out
mov
fldt
call
ret
popl
dec
jg
in
or
pop
pop
cli
push
push
or
push
test
mov
mov
sbb
cmp
add
or
dec
add
inc
cli
mov
pop
ret
int3
push
inc
xor
pop
inc
xor
mov
lock
xchg
pop
or
testl
mov
push
push
inc
adc
mov
pop
idivl
and
or
sub
xchg
jbe
je
das
je
notb
imul
or
inc
or
mov
jb
icebp
sbb
mov
sbb
arpl
or
insl
fimuls
mov
push
or
or
sbb
sbb
jmp
mov
jmp
pop
inc
mov
push
aas
pop
push
xchg
mov
outsl
push
mov
push
add
push
and
adcl
sbb
jbe
sub
push
dec
jp
subb
insb
nop
cli
out
pop
loopne
adc
into
sub
xor
mov
rolb
insl
or
ficomps
test
icebp
jb
shl
cmp
fstps
out
insb
xchg
call
call
cli
jne
icebp
adc
pop
notrack
sub
xor
pop
mov
add
push
mov
mov
gs
sub
or
or
aaa
and
add
inc
loopne
cwtl
xor
daa
aaa
push
pusha
inc
adc
mov
or
sbb
rcrl
mov
pushw
adc
and
fidivrl
das
mov
adc
xor
imul
aaa
or
movsl
jge
pop
dec
sub
je
push
push
sbb
call
pop
fmul
lods
or
bound
subl
test
xor
jne
push
push
mov
clc
call
pop
bound
add
in
outsb
fwait
inc
orl
aad
pop
xchg
sbb
pusha
call
mov
out
shrb
sbb
fldt
test
sti
or
add
adc
and
push
popa
stc
add
lret
sbb
ds
sbb
cwtl
pop
mov
sub
jmp
sbb
cld
gs
sbb
sbb
inc
push
pusha
js
mov
scas
mov
cmp
lods
jne
fldenv
push
andl
std
mov
jne
rep
stos
mov
xchg
pop
adcb
jge
arpl
or
xor
scas
jbe
inc
decl
cltd
push
pop
mov
xchg
stc
xor
lea
rcr
mov
sahf
xchg
addb
mov
xchg
outsb
mov
mov
add
xchg
ja
adc
mov
fistpll
or
cmc
inc
inc
cmpb
aaa
fsubrs
aam
add
sbb
xlat
jb
out
shll
or
out
push
lods
lods
push
mov
movups
je
push
mov
roll
jmp
inc
jns
jno
lds
lods
enter
cmp
cmp
mov
jmp
or
clc
je
fiadds
mov
push
jo
inc
jne
negl
xchg
cs
add
insb
sbb
jno
and
or
sub
mull
lahf
inc
sub
or
inc
xchg
adc
mov
leave
std
nop
cld
mov
adc
dec
sub
adc
xor
mov
push
cmp
add
add
sahf
or
push
jno
mov
inc
xor
pop
add
in
mov
iret
pop
xchg
jl
push
dec
clc
cwtl
adc
arpl
aas
sarb
incl
jb
mov
movb
js
aaa
rorl
or
aad
jmp
or
mov
and
mov
shr
test
xorl
rep
inc
inc
mov
xor
rcrb
push
in
cli
lds
xlat
mov
cmp
mov
and
sbb
push
push
push
xor
xor
jo
fs
dec
push
daa
cld
ja
pop
jb
lret
jb
mov
test
sti
sbb
mov
add
mov
in
inc
rclb
add
sbb
mov
jbe
test
add
inc
jb
add
divb
enter
mov
in
insl
pop
sbb
ja
and
lods
shr
and
dec
dec
mov
add
push
inc
insl
pop
mov
mov
ret
pop
sbb
rolb
mov
push
jge
mov
adc
or
rcrl
sbb
fimull
fldt
or
pop
push
imul
int3
add
stos
inc
aaa
pop
jmp
lea
ljmp
js
lock
data16
inc
lret
cmp
jne
mov
mov
jle
lock
aam
test
in
add
and
pop
into
gs
lods
push
add
int
pop
bnd
or
std
jmp
cld
pusha
or
rcl
pusha
pop
sbb
inc
loop
mov
inc
bound
jmp
mov
fldenv
aaa
pop
and
cwtl
imul
arpl
insl
xor
stc
daa
test
sahf
insl
sbb
cmp
inc
add
xchg
adc
pop
js
adc
js
aad
js
mov
nop
jl
loopne
and
add
adcl
lret
xor
inc
cwtl
sahf
loop
pop
xchg
xor
sub
sub
or
add
and
or
aam
test
js
in
and
out
jge
pop
leave
and
jle
outsl
outsb
adc
inc
push
pop
jb
pop
xor
inc
leave
and
and
sub
ret
or
std
lods
jmp
int3
jmp
aad
push
push
lret
push
xor
jbe
outsb
sbb
icebp
clc
jb
mov
and
insl
mov
sub
jb
rep
jmp
mov
sbb
jb
loopne
xor
test
push
lea
movsl
pop
and
nop
add
add
clc
fwait
dec
jo
rorl
mov
add
add
pop
mov
int3
xor
add
and
lret
add
cmpsb
nop
and
push
bnd
inc
aas
mov
out
add
pop
aam
les
lods
mov
mov
call
lcall
inc
cwtl
cmpsb
imul
loop
mov
es
add
sbb
rcr
push
test
lds
mov
stc
adc
nop
or
lea
jl
cld
mov
adc
or
loopne
jo
es
neg
gs
dec
mov
daa
xchg
and
je
nop
nop
or
add
add
jne
outsl
add
dec
push
mov
dec
or
xchg
pop
mov
outsl
flds
daa
and
xchg
sub
scas
inc
jmp
pushaw
pop
test
inc
add
push
pop
fs
cmpsb
imul
sbb
sbb
adc
adc
or
lcall
add
jmp
and
add
pop
adc
mov
and
xchg
xchg
adcl
xor
pop
or
rcrb
inc
mov
and
loopne
fidivs
ljmp
push
cmp
cld
daa
and
nop
push
jne
push
or
pop
je
sbb
and
lods
mov
aad
push
jle
jmp
push
inc
or
mov
jmp
test
mov
pop
sub
std
xorb
and
and
add
jmp
int3
mov
adcb
mov
pop
incb
mov
mov
push
or
and
mov
mov
jb
jnp
imul
inc
pop
push
jno
pop
jp
cld
push
rcr
outsl
shr
jns
cld
imul
jge
xor
add
inc
dec
call
adc
roll
clc
jne
shrl
clc
in
aas
dec
pop
or
iret
jbe
ret
dec
adc
add
xchg
push
push
jae
mov
les
clc
pop
sbb
and
decb
sub
cmp
cwtl
or
sub
cmp
add
aaa
arpl
xchg
adc
add
add
out
mov
or
sar
icebp
aas
jnp
je
fildl
xchg
in
mov
aad
adc
mov
dec
pop
cmp
cmpsb
jbe
repz
icebp
out
sbb
inc
ds
jbe
cli
mov
je
cs
push
mov
enter
shlb
push
adc
xchg
and
push
mov
push
imul
or
xchg
sub
mov
or
xor
fstpl
repnz
lock
or
mov
pop
jae
push
add
mov
arpl
add
jg
paddd
mov
outsb
dec
in
or
scas
cmovbe
mov
jmp
fcmovne
jbe
or
or
sbb
sub
cmp
dec
loopne
and
addl
inc
xor
pop
adc
ds
je
push
jl
mov
fisttps
loopne
pop
jo
xor
sti
adc
cmpsb
inc
add
push
call
pop
mov
and
xor
push
or
out
lea
roll
ret
test
out
paddd
or
jns
adc
pusha
add
adc
sub
jo
bound
or
stc
jbe
sub
hlt
loope
add
cmp
enter
adc
push
lea
push
push
push
add
std
test
mov
adc
mov
es
ljmp
push
das
push
je
ss
jbe
pop
push
jg
scas
jbe
jge
sub
out
sub
mov
jmp
ret
sbb
mov
not
call
adc
fdivrs
jae
mov
ljmp
and
or
jne
clc
adc
stc
jle
imul
jns
fidivrl
fsubs
adc
add
pop
and
mov
or
push
jnp
xor
adc
jmp
lcall
das
out
push
pop
cmpsl
push
or
or
test
sub
jle
mov
inc
lock
push
fsubrl
cs
lods
adc
mov
sbb
cmp
cld
mov
mov
pop
adcb
jo
push
mov
or
inc
or
mov
jne
xchg
movq
xchg
sub
sbb
and
or
je
imul
mov
shr
push
dec
jbe
push
into
jne
data16
fs
test
jl
shl
inc
jmp
mov
push
stc
inc
or
pop
loopne
pop
jg
jnp
incb
cwtl
aas
jle
aaa
sbb
or
dec
and
and
adc
fists
shl
in
and
mov
movsb
outsl
cltd
ljmp
or
xor
sub
xchg
mov
fisubl
sbb
ss
sub
fwait
pushf
mov
jp
clc
add
scas
jp
nop
test
sti
cltd
sbb
movsl
and
fs
decb
jge
fmull
sub
cltd
or
mov
bound
sbb
mov
cmp
vphaddubd
mov
orb
mov
or
mov
lods
push
mov
out
or
push
je
mov
mov
cld
fistl
jne
shll
add
lods
push
fcomi
xor
lahf
mov
and
pcmpeqw
sbb
popf
dec
cmp
sbb
movsb
push
imul
mov
in
inc
add
add
push
pop
hlt
and
xor
xor
je
push
jb
xchg
push
xchg
cwtl
inc
loope
pushf
cmp
je
pushf
push
gs
cmp
loopne
mov
stos
xor
mov
inc
adc
adc
arpl
or
call
adc
jl
pop
sub
incl
bound
or
jmp
jmp
enter
fcmovnb
dec
loopne
ret
aaa
imul
adcb
and
or
add
jmp
mov
dec
push
sti
test
out
jns
mov
iret
adc
aaa
cltd
shll
das
mov
xchg
add
cli
ja
shll
dec
repnz
mov
movl
inc
jnp
mov
movsl
dec
add
sub
adc
ja
in
or
dec
or
mov
add
clc
xchg
mov
mov
or
inc
mov
mov
enter
clc
push
ja
mov
cmpsb
or
mov
pop
add
sub
stos
adc
inc
js
ljmp
addr16
mov
and
bound
push
cwtl
out
inc
je
adc
mov
pop
adc
or
dec
mov
fsubp
push
call
je,pt
adc
adc
xchg
je
cmp
dec
ror
add
push
xchg
jp
push
mov
jne
shrl
push
stos
imull
push
ljmpw
imul
and
mov
and
fcos
fidivl
sub
add
sbb
test
ret
adc
push
pop
je
cmp
inc
adc
out
insb
sbb
les
cmp
arpl
cmp
xchg
fisubrs
or
adc
cmp
sbb
imul
xor
push
lock
popa
mov
mov
pop
jne
mov
test
pop
inc
inc
jg
stos
enter
jo
inc
hlt
sub
push
push
or
xor
mov
mov
push
sbb
push
sbb
and
sbb
and
ds
jo
adc
mov
cmp
jo
pop
or
call
cs
mov
push
sbb
sbb
push
and
sbb
dec
fdivl
fisubl
in
adc
roll
mov
ficompl
andb
loopne
mul
or
aaa
and
or
ss
sbb
sbb
push
imul
les
push
jmp
lock
pop
mov
adc
dec
data16
dec
fsubl
push
hlt
adc
jnp
dec
in
sbb
idivb
je
testb
je
ds
mov
jbe
add
xor
lods
lea
pusha
call
or
inc
mov
mov
enter
fmull
mov
jge
je
push
fs
fwait
cmp
je
mov
add
jmp
push
xor
data16
push
test
sarb
jp
push
inc
int
test
push
test
mov
decl
in
and
icebp
dec
xchg
repz
lret
and
add
pop
inc
jnp
dec
sbb
sbb
lea
push
push
pop
push
push
movsl
mov
insb
jmp
sbb
sahf
xchg
xor
mov
outsb
loope
std
jg
mov
sbb
xor
xor
push
xor
sbb
xor
rclb
insb
push
sub
and
ret
pop
loopne
je
gs
clc
jl
pop
add
inc
pop
push
int3
sub
or
testb
data16
dec
loopne
pop
sbb
push
lock
jmp
push
int3
mov
add
and
lahf
add
sbb
mov
and
insl
pop
pop
loopne
je
sbb
mov
pop
stc
sub
add
dec
push
shl
roll
lret
pop
and
rep
cmp
and
ja
gs
dec
and
dec
mov
pushl
data16
ss
adc
pop
and
or
xor
nop
mov
xlat
lds
push
scas
add
roll
imul
or
lock
add
shll
lock
cmp
add
pop
inc
shll
and
or
mov
mov
xlat
lds
pop
push
add
dec
shll
sub
or
inc
xor
mov
pop
add
mov
imul
add
lret
jb
sub
or
jae
inc
test
mov
les
loope
out
in
mov
enter
fs
fs
hlt
lock
fs
fs
aam
add
ret
push
decl
push
fldl
icebp
jb
outsb
je
insl
and
jb
jb
jp
ficompl
xlat
jle
fwait
adc
add
dec
inc
add
inc
mov
pop
adc
push
jb
cmp
sub
outsl
dec
popa
bound
and
imul
fcmove
aaa
sti
push
daa
aaa
outsb
outsl
je
in
filds
jo
arpl
data16
outsl
ja
cmp
xchg
fldl
popa
push
outsl
outsb
aaa
ss
or
dec
jae
fs
pop
imul
jne
xor
push
enter
insb
sub
pop
xlat
pop
fldt
gs
das
pop
push
fsub
fcoml
jbe
pop
xor
imull
gs
push
insb
fcmovnu
xor
pcmpgtb
arpl
cmp
outsb
lods
dec
inc
and
gs
and
insl
jne
sbb
insb
lods
je
mov
imul
fmuls
popa
pop
xor
mov
mov
fsubl
add
jo
mov
outsl
inc
addr16
insl
and
ss
rclb
or
cmp
iret
xor
sub
sub
fbld
addr16
jae
jns
xor
outsb
outsb
subb
imul
cmp
fs
dec
xchg
cmp
push
imul
inc
sub
and
dec
imul
fistpl
push
jae
push
inc
push
and
push
aam
lret
cmp
ret
add
loopne
sub
insb
ja
sbb
fdivl
popa
xor
jbe
push
scas
jne
mov
popf
lds
xorps
jae
jl
pushl
addr16
outsl
js
add
and
sub
mov
pop
add
xor
xchg
ljmp
xchg
add
mov
add
xor
in
jg
or
outsl
insb
jbe
outsl
push
addl
dec
aaa
enter
or
add
xchg
lea
mov
add
and
xor
je
add
pop
js
or
pop
xchg
lret
and
or
mov
xchg
sbb
add
or
or
or
adc
adc
xchg
daa
dec
cwtl
adc
sbb
sbb
sbb
xchg
daa
dec
push
js
jns
jp
jbe
in
cld
sbb
or
push
loopne
nop
mov
movaps
mov
pop
push
clc
pop
add
add
leave
inc
jle
das
movsb
add
jns
and
in
movsl
sbbl
sbb
fisubl
pop
inc
and
xorl
fnsave
mov
call
mov
iret
mov
ficompl
pop
pop
fisubrl
xor
leave
in
scas
rcr
fsubp
stc
cmp
jle
add
push
jp
jne
cmp
xor
sub
dec
add
enter
test
adc
orb
add
mov
addb
popa
shll
and
push
dec
or
or
lcall
add
add
popa
jo
insb
insb
outsl
arpl
mov
add
fs
gs
popa
outsb
fs
adc
popa
xor
outsb
outsw
adc
shr
inc
outsl
insl
insl
pop
dec
imul
or
or
lods
push
insl
push
andl
xchg
in
add
push
pop
adc
fcmovu
xchg
std
jne
jb
outsb
and
outsb
push
mov
fstl
jo
inc
inc
imul
out
adc
popa
insl
imul
inc
or
jb
addr16
add
push
push
imul
dec
lods
sub
jbe
inc
jns
pop
sub
mov
test
inc
push
pop
setnp
pop
adc
addb
pop
mov
loope
sti
outsb
ret
vmread
pop
insb
jae
push
popa
insb
jne
or
add
fmull
pop
cmpb
in
negl
sbb
mov
mov
loopne
or
je
cmp
loop
je
sub
out
and
dec
jo
cmp
mov
arpl
xchg
insl
push
push
adc
lods
lea
or
pop
pop
sub
jnp
inc
dec
or
sub
push
gs
fs
push
inc
add
mov
dec
andb
mov
mov
inc
dec
inc
push
or
push
dec
or
mov
pop
enter
and
jnp
or
add
scas
and
xchg
roll
aad
dec
add
dec
push
fnstenv
inc
int3
js
xor
mov
cwtl
sbb
fisubs
int
mov
dec
xlat
loopne
bound
dec
jae
sub
std
ds
out
add
sbb
outsl
push
xor
lock
das
ja
outsb
mov
mov
dec
leave
jne
aas
out
popf
sub
insl
pop
dec
test
xor
xchg
mov
lock
add
inc
add
idiv
div
inc
add
push
add
jne
inc
shl
add
andb
jb
dec
adc
add
jbe
inc
lock
out
jbe
xchg
lock
lock
popf
pop
lods
stc
fistpll
rcr
push
dec
fldl
lock
jl
mov
cmp
daa
push
add
inc
mov
add
push
out
xchg
cmp
xor
cmp
xorb
add
lock
add
in
adc
add
insl
cmp
inc
or
sti
add
mov
outsl
inc
dec
dec
or
aas
xor
arpl
dec
cmp
add
inc
mov
jne
add
fdivrp
fildl
mov
jno
add
mov
dec
add
fbstp
insl
mov
inc
lock
add
lods
jl
inc
add
les
ja
xchg
mov
jo
lock
adc
push
filds
add
xor
rolb
adc
add
test
cmp
add
aas
xor
or
dec
jge
test
aas
mov
and
add
fstpt
cmp
mov
jg
sub
roll
outsl
clc
sbb
dec
lock
or
fnstcw
int
inc
fstp
mov
jecxz
add
addr16
xorb
in
mov
inc
mov
pop
aad
shrb
cld
outsl
pop
testl
mov
inc
inc
jl
lock
pop
outsb
scas
xor
lea
mov
jl
cmp
xchg
mov
push
mov
mov
cmp
mov
push
add
insb
js
std
lds
and
pop
mov
ret
aaa
xchg
inc
out
dec
sbb
sahf
lock
outsl
push
cmp
inc
dec
out
int3
mov
repz
jge
add
xor
ret
dec
imul
mov
add
inc
sub
jno
xchg
test
dec
or
ja
mov
or
push
inc
pop
jp
push
cmp
cmp
fdivrl
dec
mov
imul
cltd
cmp
lock
lret
mov
mov
cmp
lods
inc
pop
sub
loope
sbb
xchg
jae
enter
stc
xor
ljmp
ja
inc
add
mov
or
xor
call
pusha
cld
sti
xchg
add
cmpb
inc
aaa
adc
jle
cmpsl
inc
mov
incl
cmpl
out
mov
je
push
add
lock
sbb
pop
sti
jns
testl
cmp
je
test
std
add
mov
cld
add
dec
mov
mov
mov
jnp
icebp
sti
ret
cmp
fdivrs
jle
gs
inc
test
movsl
xlat
aas
pushf
out
ja
sti
iretw
lock
inc
imul
push
add
fsubr
mov
cs
xchg
lock
xorb
sbb
inc
or
mov
pushf
xor
out
mov
aas
cltd
inc
dec
dec
ds
ds
jb
add
in
loope
xchg
scas
aas
stos
add
adc
outsl
sbb
dec
jbe
shl
outsl
test
rolb
add
or
xor
andb
or
cmp
fistpl
pop
or
or
push
push
push
test
cmovl
xor
inc
or
adc
aaa
decb
or
dec
mov
xor
aas
push
adc
std
call
pop
adc
and
push
xor
adc
add
inc
or
sbb
fistpll
adc
sbb
adc
pop
inc
imul
es
mov
daa
cmovb
or
adc
adc
sub
jmp
adc
sbb
or
adc
and
and
mov
pop
adc
pop
fldt
or
sub
add
push
outsl
mov
std
scas
in
adc
or
push
movups
and
sbb
imul
fnstcw
sbb
add
dec
push
add
or
pop
push
adc
sub
jb
push
or
jecxz
xor
idiv
fcomip
or
dec
add
push
sbb
adc
or
fimuls
pop
push
jno
inc
cmpsb
lock
add
adc
test
fwait
sbb
or
int3
adc
or
out
pop
adc
sbb
mov
decl
push
sbb
xor
fcompl
pop
adc
adc
sbb
fwait
xchg
add
pop
mov
xor
add
add
lods
or
or
and
adc
test
add
push
inc
jmp
add
mov
nop
adc
jo
gs
mov
and
les
mov
stos
sub
hlt
sbb
push
insb
push
add
or
add
dec
pop
adc
jnp
ja
mov
inc
subl
xchg
sub
add
js
mov
add
push
addb
dec
or
jge
cmpsl
add
je,pn
add
dec
cmp
add
or
mov
jb
push
mov
or
add
sub
inc
cs
push
shlb
dec
shlb
jb
jmp
dec
or
push
and
xor
jae
or
push
push
add
stc
filds
fcoml
add
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
