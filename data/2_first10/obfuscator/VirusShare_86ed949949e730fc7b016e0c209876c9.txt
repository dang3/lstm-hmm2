push
call
ret
ret
fstpl
ret
aad
pop
cmp
jno
xlat
mov
call
ja
negl
inc
adcb
pushw
push
xchg
push
cld
push
mov
dec
pop
addr16
push
out
cmp
cwtl
jge
xchg
push
cmpsl
aad
sbb
jle
add
bswap
loop
mov
mov
adc
adc
sbb
clc
push
xchg
in
aad
sub
and
cmp
aaa
test
mov
fiadds
enter
fdivs
xor
iret
insl
jbe
jbe
or
nop
pusha
in
pop
sbb
add
cmpl
pop
mov
pop
aad
cmp
sbb
add
pop
mov
jg
mov
sub
outsl
or
pop
xchg
inc
rorb
mov
mov
xor
aad
in
sub
push
jns
xchg
mov
sub
xchg
sbb
cmp
sbb
inc
adc
mov
ja
jmp
imul
jns
jg
loopne
je
je
mov
push
movsb
xor
pop
arpl
sahf
push
xchg
or
xchg
add
or
fsubr
lahf
dec
add
mov
cld
add
mov
int3
jo
pop
mov
nop
cmp
inc
mov
push
sbb
push
mov
loopne
add
arpl
mov
push
dec
out
fs
push
mov
xchg
push
sbb
filds
push
push
test
dec
pushf
pusha
ljmp
jecxz
push
dec
psubq
aad
ds
jge
fs
mov
xchg
les
mov
jnp
movl
clc
scas
in
shl
xchg
js
sbbb
add
pop
cld
fnstcw
push
mov
push
lret
into
in
cmc
adc
dec
xor
insb
into
pop
mov
rcr
cltd
bound
mov
pushf
xchg
dec
xlat
or
xor
rolb
mov
pushf
lea
frstor
mov
sub
cmc
jnp
add
adc
pop
pop
push
fdivrs
std
jge
cs
inc
jmp
cmp
std
lret
mov
orb
test
mov
mov
mov
cmp
xchg
shlb
out
mov
or
xchg
or
mov
add
sub
add
xchg
lds
xor
iret
xor
insl
cmp
xor
xor
hlt
arpl
push
insl
mov
push
inc
gs
mov
pushf
aas
push
and
mov
sbb
adc
cmp
or
xchg
xor
stc
fscale
add
aaa
fdivs
mov
loope
sbb
cltd
adc
ret
pop
ss
sti
mov
cmpsl
add
popf
stc
cltd
aad
push
add
pop
mov
dec
mov
test
stc
sub
into
sbbl
repz
loopne
pop
pop
sub
mov
fcmovb
mov
cmpsl
lahf
sbb
xchg
pushf
adc
sti
mov
push
std
lods
bnd
jno
mov
pop
lret
or
mov
or
pusha
stos
mov
call
arpl
aam
pushf
jne
inc
mov
mov
push
sub
dec
insl
test
into
adc
sub
mov
xchg
adcb
les
inc
jno
xchg
rolb
shrl
inc
xor
and
pop
shlb
jo
dec
add
mov
jno
js
jecxz
sub
lds
pop
aam
add
pop
movsb
cmpsb
movsb
pop
loope
mov
in
les
in
and
in
bound
sbb
aam
cmc
push
mov
lcall
sbb
decb
lret
leave
enter
leave
andl
add
mull
dec
repz
inc
cwtl
mov
movsl
and
jb
xor
stc
lret
cmpsb
sti
ficomps
ja
or
ret
mov
pop
int
gs
mov
mov
hlt
repz
inc
push
sarw
out
mov
jno
adc
cmpb
add
xchg
jae
cmpl
mov
and
int
out
and
aas
test
pop
das
loopne
lods
ret
daa
sub
iret
dec
pop
mov
and
sti
leave
mov
xchg
movsb
js
movsb
and
and
pop
cltd
jp
stos
or
jg
leave
fstpt
test
gs
mov
jns
dec
out
mov
sti
add
inc
add
xor
jmp
sbb
das
movsb
cmp
adcb
push
jne
xor
fnsave
js
movb
push
sahf
fisubl
xor
pop
lods
ret
fmuls
sub
mov
pop
pop
test
dec
mov
push
aad
in
repz
ds
push
pop
vsqrtss
test
fwait
mov
dec
sarl
call
daa
test
xchg
cmp
movsb
sub
pusha
ret
mov
ret
pop
cmp
xor
insl
nop
add
ror
addl
and
sbb
mov
sub
cs
outsl
and
inc
and
dec
cmp
fistpl
shlb
and
pop
mov
cmc
lds
mov
mov
mov
into
dec
jne
std
add
pop
std
jmp
sahf
jge
lcall
sub
repz
outsl
xor
mov
xchg
jge
sub
jno
jne
leave
push
mov
mov
insl
or
cmpsb
mov
add
mov
mov
pushf
mov
mov
sub
ja
pop
popw
stos
iret
adc
mov
push
mov
jg
hlt
xchg
andl
mov
mov
jne
mov
int3
sub
mov
fisubrl
iret
cmp
mov
adc
rorb
jecxz
pop
and
stc
xlat
adc
adc
mov
mov
iret
mov
rcrb
js
insb
popa
loop
rorb
jb
xorb
inc
cmp
sbb
mov
dec
jbe
test
cmp
push
fdivr
in
push
and
xor
outsl
int3
imul
cmp
mov
cwtl
popa
jb
jecxz
add
xor
lahf
les
int
push
lcall
xlat
push
xchg
in
fucom
sti
mov
loop
and
and
test
inc
mov
mov
sbb
xor
movmskps
sbb
pop
pop
lock
or
mov
dec
sub
push
cmp
rcrb
cmpsb
dec
jp
cld
mov
mov
mov
sbb
and
jns
mov
loopne
sbb
xchg
mov
dec
push
fistpll
jg
fnsave
add
xchg
xchg
cmpsl
stos
out
mov
sbb
push
gs
repnz
inc
add
add
ja
sub
mov
push
xor
fcompl
cmp
push
mov
adc
xchg
test
ljmp
aaa
and
and
js
jp
fdivs
xor
jg
xor
sbb
movsl
jae
arpl
add
push
sub
push
jo
pop
cmp
in
and
inc
push
daa
ljmp
push
xlat
nop
stos
out
xchg
or
out
push
mov
push
inc
scas
cmpsb
popa
std
lahf
jle
clc
inc
pop
test
lds
pop
je
jno
insb
outsl
bnd
iret
xor
leave
jns
push
mov
pop
cwtl
xor
mov
repz
ja
test
mov
or
cltd
jno
adcl
pushf
mov
xchg
and
mov
je
jo
dec
cwtl
mov
push
fiadds
push
scas
sti
inc
out
inc
insl
rolb
dec
jne
ret
xchg
cmp
mov
jo
cmp
mov
xlat
cli
and
sub
fisubrs
fwait
dec
sahf
cmp
out
mov
popa
cltd
and
jo
bound
aaa
jl
int
push
sub
je
jecxz
pop
and
sti
sbb
push
test
push
das
pop
dec
or
adc
std
dec
xchg
xchg
add
scas
inc
les
icebp
sti
xor
adc
push
stos
push
xor
fbld
jbe
push
stc
out
fisubrs
push
push
nop
mov
movsl
push
jbe
pop
adc
imul
rol
das
xchg
add
fwait
lock
cmp
aam
repnz
jge
rcr
jo
mov
xchg
xchg
jbe
icebp
add
xchg
xor
stos
pop
inc
inc
push
mov
sahf
mov
push
rolb
xchg
gs
popl
sbb
sub
add
nop
pop
fdivrs
cmp
mov
mov
jnp
test
jmp
mov
bound
and
cwtl
sbb
clc
leave
push
mov
mov
dec
callw
xor
ljmp
mov
les
jmp
sub
jp
mov
roll
out
cltd
rolb
xor
enter
arpl
fwait
pop
xlat
push
xor
lods
ljmp
pop
xchg
hlt
movsl
mov
adc
xor
sti
out
lcall
mov
iret
adc
cmp
mov
mov
stos
rorb
mov
outsb
adc
sub
or
and
jno
mov
xchg
dec
cld
xor
adc
xor
dec
pop
outsb
mov
xor
arpl
or
sbb
lds
xchg
jae
test
leave
push
enter
enter
ss
int3
cmp
fistl
xor
inc
leave
sub
lock
outsb
in
mov
jl
xor
scas
sbb
inc
pop
inc
outsb
leave
lcall
bound
xor
movb
inc
cmp
xchg
subb
nop
es
movsl
mov
test
pop
add
sbb
mov
ret
push
repz
xor
xchg
andl
dec
loopne
nop
and
aas
std
or
jl
arpl
in
ret
add
push
push
inc
push
fdivrl
push
mov
xor
dec
push
cltd
dec
cli
xchg
fisubs
stos
or
fwait
dec
xchg
xor
fcompp
mov
mov
mov
loop
push
idivl
loope
aas
cld
xor
push
out
repz
push
ret
push
push
xchg
inc
mov
push
jp
cld
movsb
cmpsb
jmp
lods
inc
ret
mov
and
call
popf
mov
xlat
push
sub
ljmp
pop
jnp
xor
jle
test
dec
sti
gs
mov
jbe
movsl
shl
pop
aas
lret
pop
push
sbb
mov
pop
test
or
push
push
fdivr
mov
pop
rorb
inc
pop
mov
mov
jbe
movl
add
out
push
adc
mov
mov
ror
mov
daa
or
test
clc
ja
jbe
jae
pop
mov
dec
lret
shl
popa
test
mov
mov
ja
cmp
mov
int
inc
pop
or
xchg
stos
xchg
ds
call
xchg
imul
dec
mov
inc
dec
test
sbb
test
int
or
push
adc
aam
sub
jne
mov
retw
fscale
negl
int
pop
add
jbe
icebp
loop
and
adc
scas
fcomps
lea
xor
into
push
cmp
jl
adc
xor
pop
aam
xorb
mov
in
imul
jge
cmpsl
rclb
cltd
popf
lcall
arpl
push
jb
lret
adc
test
lret
mov
dec
aad
add
cmp
arpl
sbb
pop
xor
mov
aad
out
incl
out
dec
xor
and
fmuls
pop
pop
mov
pop
mov
push
xchg
pop
call
gs
in
pop
dec
mov
in
rclb
stos
mov
dec
inc
jnp
rcl
mov
lahf
add
dec
push
lret
sub
movsb
out
mov
push
aam
sub
outsb
jns
push
adc
cli
dec
imul
mov
fcomps
pop
movsb
int3
je
mov
mov
jg
pop
xchg
xlat
inc
in
scas
push
lret
adc
or
mov
dec
add
cmp
test
pop
mov
jp
cmp
fsubrl
cmp
push
lret
jb
fisubrl
loop
push
sub
cmp
stc
push
cld
add
mov
push
rcll
sub
lods
and
fcomps
push
loope
ljmp
imul
inc
fsubp
hlt
notl
andl
daa
mov
mov
addb
rclb
mov
shl
inc
pop
mov
xorb
mov
or
lods
dec
sub
mov
pusha
xchg
cli
pop
mov
pop
aas
pop
inc
ret
enter
push
stos
call
xor
mov
je
stos
xlat
jnp
pop
adc
fildl
xchg
dec
mov
dec
xor
in
and
sub
subb
sarl
sub
int
mov
bound
push
je
adc
dec
xchg
and
add
jmp
pushf
xchg
push
out
imul
pop
jb
pop
mov
pop
lock
subb
cltd
cmp
test
inc
aad
xor
hlt
sbb
lret
das
out
mov
sahf
mov
xor
dec
inc
sub
or
push
stos
cs
mov
mov
loope
into
retw
pop
mov
lcall
pop
pop
cmp
enter
cmc
stos
xor
mov
dec
xchg
jnp
jl
imul
mov
mov
das
or
xor
or
jg
and
out
xor
adc
and
fs
push
scas
sub
inc
cmp
popa
add
in
inc
mov
pushf
cltd
rorl
mov
jae
iret
rcrl
scas
ret
sbb
stos
repnz
lret
cmp
inc
jae
push
insb
mov
hlt
rorl
stos
cli
mov
ss
push
jmp
mov
call
and
add
pop
dec
mov
jecxz
dec
lret
inc
inc
push
and
jno
adc
add
das
shr
ds
cld
xchg
ja
std
lods
xor
fnstsw
outsl
fs
jns
int3
lret
push
dec
mov
adc
or
hlt
and
and
sbb
sbb
sbb
xchg
in
in
dec
cltd
jl
xchg
adc
lahf
stos
dec
ficoms
lods
repz
mov
jbe
jg
or
es
mov
adcl
lds
xchg
xorb
xchg
jb
icebp
mov
in
std
mov
cltd
stos
in
dec
adc
fsubs
mov
test
add
pop
mov
imul
orl
rorb
sti
lods
pop
in
orl
xchg
cltd
push
leave
add
enter
and
std
push
clc
ret
scas
outsl
xor
pop
ss
lods
loop
andl
in
or
pop
dec
hlt
xor
out
mov
mov
xor
daa
dec
push
sub
inc
mov
mov
sahf
lret
adc
cmp
in
cmp
enter
mov
xchg
dec
adc
inc
jnp
jmp
cmp
sub
loopne
stos
jb
jp
jmp
and
xchg
xchg
lret
adcl
sub
xor
sub
jb
or
bound
call
pop
shlb
test
jmp
lret
sub
mov
loope
inc
fucom
dec
ret
leave
mov
std
imul
idivl
lock
jp
rclb
out
jae
fidivrs
sbbl
jmp
cwtl
jae
lcall
sub
add
and
out
ret
xor
stos
pushf
aas
adc
dec
bound
add
pop
js
lcall
push
lret
jle
test
data16
jge
rclb
cmpsl
leave
cmpl
icebp
int
inc
inc
scas
jnp
jmp
loope
inc
insb
xchg
jo
imul
testb
out
adcb
enter
testl
push
jg
sbb
sbb
sub
outsl
and
xchg
cmc
sub
imul
xchg
out
dec
fmul
mov
jo
mov
int
dec
lods
sub
data16
clc
mov
lcall
mov
xor
xlat
js
addr16
pop
lea
outsb
dec
bound
mov
movb
sub
lock
add
jb
push
inc
fmuls
inc
and
xchg
popa
cmpsl
mov
jno
mov
mov
gs
insb
xor
mov
ficomps
cmp
jo
in
ret
adc
cmp
adc
test
pop
inc
loop
mov
jge
inc
fbstp
adc
xor
push
cmc
fnstcw
cmpsb
and
jl
mov
dec
xor
jge
je
mov
or
jne
xchg
xchg
mov
jl
outsl
lcall
xchg
xchg
sub
pop
ds
addr16
push
mov
push
repnz
test
pusha
jge
in
lds
cmp
inc
and
test
push
cmp
ss
inc
pushf
dec
mov
add
push
stos
inc
push
or
sub
pushf
out
inc
int3
int3
test
xor
sub
inc
push
popa
test
cmp
cmp
stos
fwait
aam
test
daa
fstpt
imul
pop
es
sub
test
cmp
inc
and
les
and
inc
pop
push
pop
test
mov
movsl
push
movsl
jns
stc
mov
add
notb
cmp
shlb
add
into
inc
and
push
xor
sub
mov
push
xchg
add
dec
xchg
push
jge
test
stos
mov
inc
out
add
or
leave
sbb
repnz
dec
push
adc
push
xor
jg
lret
dec
xlat
shlb
ja
xchg
jbe
aad
lods
subl
les
xorb
and
loopne
jbe
cmp
add
loopne
das
ret
inc
sub
or
outsl
js
frstor
data16
leave
adc
pusha
mov
mov
rorb
in
addr16
jnp
xchg
fidivrs
mov
adc
xchg
xor
jl
mov
sub
mov
mov
lahf
xor
mov
outsb
pusha
xor
pop
cld
jge
aaa
pop
hlt
shrl
adc
cltd
xchg
sbb
xchg
xchg
xor
fnstenvs
cli
lret
icebp
cli
fdiv
jle
cmc
ds
ret
cmp
inc
push
out
shrb
jg
repnz
test
push
jb
mov
dec
test
cmp
xchg
imul
addr16
les
outsl
jp
jbe
sbb
in
add
popf
cmp
ficoms
js
fsubs
rcr
clc
push
and
ret
sub
xchg
loope
in
adc
add
xlat
mov
mov
aas
xchg
inc
push
inc
push
mov
pop
std
xchg
clc
mov
out
dec
arpl
sbb
icebp
hlt
xor
push
imul
mov
jns
push
sar
sub
xabort
xor
sbbb
sub
lahf
fwait
inc
or
push
or
sbb
sub
pop
mov
jl
push
gs
push
pop
pop
lods
leave
cmc
nop
adc
jmp
add
call
pop
jle
repnz
push
or
cwtl
std
popf
jb
aam
xchg
add
js
xor
std
sti
popa
les
cmp
call
loop
inc
cmpsb
mov
into
xchg
jbe
xlat
add
cltd
lds
or
imul
jp
imul
in
lods
mov
int
adc
lods
filds
pop
fisttps
cld
dec
pop
push
mov
insl
or
and
test
roll
jg
adc
xorb
outsb
jg
ds
xchg
mov
and
mov
movsl
xor
ds
iret
enter
in
mov
jb
inc
jge
sub
iret
test
jle
push
pusha
int
and
jle
icebp
sub
mov
stos
fcmovne
mov
jp
push
add
out
enter
mov
mov
xchg
or
add
xchg
lea
pop
mov
fs
jo
sbb
fwait
adc
xchg
les
or
mov
cmp
iret
ds
jo
and
nop
xor
scas
push
out
push
std
jno
dec
sub
cmp
xor
dec
sub
jp
inc
jnp
gs
movsl
lock
jbe
xchg
jns
cmc
push
jno
cmpsl
xchg
xor
ljmp
xchg
push
add
mov
pop
aas
loop
sub
sbb
and
adc
aas
lods
cmp
pop
push
push
jbe
movsl
adc
push
rcll
mov
or
punpcklwd
cmpsl
or
cmp
push
xor
mov
call
push
in
xchg
mov
negl
xlat
cld
out
in
xchg
loopne
xor
int3
lods
or
cltd
in
jo
stos
out
cltd
sub
stos
sub
mov
ret
aad
leave
mov
filds
mov
mov
ljmp
pop
fnstcw
scas
jle
or
lret
mov
aas
aas
xor
jl
push
shlb
and
jnp
xchg
shrb
pop
xor
cld
loopne
int
xchg
call
sbb
loope
push
sbb
mov
repnz
loope
sti
push
inc
push
adc
mov
inc
cs
mov
xchg
lret
les
jl
lock
adc
lea
cwtl
mov
push
lea
insl
mov
xchg
movsl
mov
in
mov
jbe
fwait
mov
and
jae
outsb
int
add
enter
push
fiadds
es
push
stos
and
ljmp
push
jl
repnz
insb
into
jae
jl
rclb
pop
sahf
mov
shl
mov
sbb
mov
sub
sahf
mov
stos
in
sbb
mov
mov
adc
push
or
int3
sub
lods
mov
dec
neg
sbbb
or
jo
lea
imul
in
sbb
fnstsw
xor
mov
sti
cmp
hlt
jb
int3
jle
or
les
es
xchg
outsl
or
mov
popa
sbb
xchg
sub
sbb
lock
and
mov
clc
pop
in
push
push
pop
jmp
icebp
jg
sub
int
dec
mov
aaa
xchg
decl
mov
lock
push
dec
xor
clc
int3
cmp
or
fwait
ss
lods
fsubrl
lea
int
adc
mov
lds
push
add
or
test
push
popf
sub
push
xor
push
push
lods
lds
dec
lret
pop
push
lea
mov
mov
rol
push
shl
mov
stos
rcl
sbb
xchg
pop
cmp
insl
pusha
dec
in
sbb
inc
sbb
shlb
jg
fstpt
scas
pop
nop
cli
mulb
or
and
int3
jnp
xor
ja
cmp
sbb
or
mov
inc
cmp
imul
jmp
adc
push
repz
jmp
out
inc
bound
mov
les
in
push
leave
lods
mov
ja
test
mov
cmp
imul
mov
push
cmpsb
mov
stc
xchg
cwtl
jle
push
adc
sub
cmp
fwait
pop
cmp
movsl
bound
hlt
out
mov
sub
repz
push
in
cmp
fimuls
daa
adc
into
cs
push
mov
mov
lds
sbb
push
mov
lods
rolb
pusha
add
cmp
mov
mov
xchg
sbb
add
ja
inc
xchg
inc
and
xorl
inc
or
movsl
inc
mov
mov
pop
aad
add
in
jno
xchg
bound
mulps
int
lods
enter
inc
ficomps
mov
adcl
ret
mov
push
icebp
lods
cwtl
pop
dec
mov
jecxz
insb
jo
push
jle
pop
icebp
sbb
ret
pop
pop
mov
or
cmpsb
lods
fldenv
aaa
jp
or
push
push
mov
jns
aam
or
aad
mov
loope
pusha
pop
test
iret
mov
and
jne
in
push
mov
cmp
stos
mov
add
inc
sbb
mov
addr16
std
imul
pop
fdivs
pop
or
pop
push
ja
stos
mov
leave
loopne
jne
mov
stc
push
sub
ret
sbb
push
out
fstpt
sub
jbe
enter
jo
sub
jbe
xor
aaa
stos
jecxz
divb
fs
jp
add
jge
out
xor
dec
mov
jnp
loop,pn
mov
lock
xchg
outsb
and
pusha
push
cmp
dec
insl
and
push
int
mov
adcl
push
sti
flds
arpl
sti
mov
xchg
orl
sub
push
sub
jmp
leave
inc
adc
ds
add
stc
ficoms
test
xlat
mov
inc
push
hlt
jg
test
data16
shl
les
fsubrl
inc
int
xchg
inc
adc
jae
ljmp
cld
clc
scas
scas
mov
jo
and
test
pop
cwtl
ss
es
add
mov
jno
fsubr
push
xor
xchg
inc
sub
pusha
clc
push
inc
adc
xchg
pusha
clc
data16
adc
inc
jne
cmc
sahf
pop
sub
mov
jno
ds
pop
fsubl
and
fidivrl
hlt
jns
sbb
jbe
inc
inc
and
std
or
inc
push
cmp
mov
arpl
xchg
mov
push
xchg
inc
mov
loop
sti
jns
inc
mov
mov
or
cwtl
adcb
stc
fwait
xchg
lock
jne
cmp
icebp
jnp
or
xlat
fisttpll
and
clc
aam
jmp
mov
mov
sti
ror
fcoms
adc
lret
cld
xchg
adc
imul
mov
push
fwait
push
les
in
lret
sbb
pushf
add
xor
in
fdivs
rorb
lahf
scas
jae
xor
or
adc
push
push
in
flds
adc
adc
mov
loopne
aaa
bsr
cmp
fstps
adc
int
pop
pushf
and
mov
shr
inc
repnz
xchg
shll
inc
push
xchg
iret
and
movsl
sub
mov
mov
cmp
lret
xor
loope
push
push
notl
and
test
sub
sbb
nop
mov
push
add
mov
hlt
inc
jbe
sahf
mov
pop
sub
push
insl
jecxz
or
sub
adc
aad
inc
sub
out
push
cmpsb
ret
dec
out
std
adc
shr
push
fsubl
test
cmpsl
je
aaa
and
mov
je
add
push
outsl
ja
clc
adc
cltd
mov
and
mov
add
scas
out
fsubp
sbb
xchg
push
sub
aad
ds
lcall
jno
inc
dec
fsubrs
ss
fwait
mov
jo
add
fs
in
repz
add
cmp
roll
lret
mov
xor
loop
push
stos
mov
es
mov
testb
loopne
nop
sahf
out
fcoms
jge
rcll
adcl
adc
adc
movsb
cltd
pop
in
loop
inc
cmp
lods
push
scas
cmc
inc
inc
lcall
jnp
std
ficoml
push
cmc
mov
push
loope
push
lods
or
pop
add
into
sbb
or
cmp
cmp
jae
cmp
insl
rorb
mov
mov
jns
or
sahf
test
inc
inc
out
add
cwtl
push
fcmovbe
push
push
and
pop
in
cmp
xor
xchg
mov
pop
and
push
mov
push
sbb
int
dec
and
xchg
xor
and
sub
loop
repz
pop
xchg
sbb
scas
or
adc
fistpll
ss
xor
cs
sahf
in
jbe
repz
scas
dec
and
pop
lods
mov
sbb
or
and
mov
mov
mov
xchg
mov
jne
xchg
xchg
push
roll
xchg
mov
clc
pop
dec
sub
call
sbb
push
fsubr
inc
fiadds
or
in
jge
jmp
loop
mov
cmp
test
stos
adc
dec
xchg
aas
fsubs
iret
xchg
xor
xchg
roll
repnz
add
sbb
into
fnstenv
jae
shlb
aad
pop
mov
pushf
arpl
pushf
int
sub
sub
xchg
mov
mov
mov
and
dec
inc
xor
add
dec
push
fsubp
jo
jo
inc
push
aad
mov
xchg
dec
idivl
dec
cmp
add
jmp
insl
mov
stos
call
jns
and
je
test
es
cmp
jae
aaa
push
icebp
inc
pop
and
int
jecxz
dec
fists
fbstp
test
call
sahf
rcll
cmpsb
push
pop
in
push
add
fucomip
cmpb
adc
pop
out
pop
lock
cmpb
xchg
cli
mov
andl
pusha
mov
mov
repz
cmpsb
inc
scas
jle
xchg
jae
sbb
ljmp
push
adc
jle
mov
and
mov
ficomps
enter
push
cmp
fdivrs
popf
jge
ds
sbb
push
xchg
ret
jle
sbb
sbbb
lret
out
or
cmp
pusha
xchg
adc
cld
fdiv
sbb
xchg
mov
xor
scas
aad
fidivl
pop
cmp
pop
jne
shlb
repz
push
mov
jle
push
jecxz
fcoml
mov
add
cmp
mov
pushf
mov
xchg
lret
pop
fisubrl
jle
cli
bound
insb
cmpsl
fidivrs
movsl
cmp
nop
jmp
nop
push
pop
shlb
inc
ret
jo
fidivrl
xor
inc
sub
test
imul
mov
movsl
xchg
inc
clc
cld
ja
jbe
lods
cs
sti
fildll
mov
daa
cld
lcall
cmp
jo
repnz
lret
jg
movsb
mov
add
in
add
inc
dec
adc
repnz
mov
into
fbstp
test
popa
popf
mov
xchg
push
pop
mov
lea
add
jo
notl
xor
jge
pop
cmpsb
shlb
push
push
or
inc
das
and
push
loopne
jecxz
sub
divl
sub
sbb
mov
daa
lret
push
shrl
or
lock
call
xor
mov
je
shlb
mov
divb
cmp
sub
xchg
push
adc
insl
push
nop
jl
nop
imul
cmp
mov
cmpsl
shr
xchg
cmp
inc
xor
test
das
test
frstor
lcall
cmp
mov
loope
mov
in
call
js
and
dec
adc
and
out
or
arpl
outsb
mov
cmp
fwait
mov
or
in
shlb
add
cmp
and
mov
ja
or
jnp
in
mov
mov
push
in
aad
cmp
test
jl
stc
push
cmp
pop
pushf
fsubl
daa
mov
cmp
pop
out
ss
stos
xchg
jmp
lods
push
and
cmpsb
pop
mov
out
clc
xchg
push
push
cmpsb
jb
nop
out
sub
mov
push
push
mov
push
xchg
js
push
jb
add
outsb
push
xchg
cmp
int
mov
xchg
or
cmp
mov
mov
test
lods
mov
mov
adc
lea
sbb
fists
insb
nop
popa
call
and
mov
aam
je
and
jb
push
jecxz
sbb
scas
fidivs
sub
loope
mov
mov
sarb
fwait
std
test
dec
subb
int
and
out
jae
es
cmp
js
mov
in
cmpb
cmpsb
repz
enter
jecxz
pop
shll
sbb
sbb
jmp
ret
dec
mov
push
leave
push
or
adc
mov
sbb
pop
mov
inc
jle
sbb
jmp
fprem
push
or
stos
fsubrs
mov
testb
sub
ret
aas
add
dec
addr16
cs
push
xchg
imul
inc
mov
int
mov
loope
mov
jbe
cmp
or
rorl
hlt
out
jbe
push
push
add
test
or
ljmp
cmc
shlb
lcall
lods
ret
lahf
and
and
xlat
xor
sub
sarl
jmp
mov
ja
push
sbb
push
push
mov
xor
inc
cmp
gs
in
andl
out
arpl
push
mov
bound
cmp
mov
dec
mov
xor
mov
fiadds
add
push
push
ficoms
mov
cmp
sbb
xor
inc
jmp
enter
xor
imul
jp
dec
insb
jae
push
mov
pop
outsb
loopne
push
aam
test
xor
adc
fldt
ja
leave
orb
xchg
push
into
jge
add
lcall
push
or
lcall
rcrl
mov
enter
jg
fbstp
mov
mov
mov
in
insb
add
dec
leave
pop
lea
cltd
push
jle
ror
pop
fdivrl
and
fwait
gs
inc
hlt
roll
cmp
push
ljmp
popf
adc
add
clc
sbb
fildll
jo
cmc
repz
rep
aas
mov
shr
aad
push
fs
clc
xor
adc
jecxz
stos
stc
jno
and
cmp
sbb
out
dec
sbb
fwait
or
in
or
icebp
sbb
dec
mov
rep
jbe
push
cmp
rcll
adc
lock
jne
icebp
sbb
fdivs
stc
cmpsl
mov
pop
sub
andl
and
js
inc
or
jb
cmc
mov
jge
mov
xchg
stos
sub
enter
hlt
sbb
and
adc
sbb
push
shrl
sbb
sbb
out
hlt
mov
cmp
or
cltd
jge
lcall
xor
in
mov
cli
jmp
lock
mov
mov
nop
test
mov
and
inc
push
testb
clc
orb
test
mov
leave
arpl
xor
push
adc
cmp
syscall
add
and
mov
pxor
loopne
push
nop
jb
mov
mov
jle
lock
in
inc
arpl
push
cmp
lret
and
cmpl
pusha
jle
out
adc
adc
repz
push
jecxz
fs
or
xor
sub
or
mov
iret
pop
and
cli
push
repz
jecxz
jbe
sbbb
sbb
pop
ja
xchg
pop
ljmp
sub
pop
cmp
xor
outsl
push
push
and
sbb
xchg
pop
sbbl
add
inc
inc
mov
cmp
and
out
inc
iret
arpl
cld
lret
cmp
inc
jl
xor
je
jns
popf
mov
jns
ret
inc
inc
xor
rol
fcoml
sub
dec
xchg
add
lcall
mov
pushf
push
lret
stos
and
cmpl
lret
pop
andb
xor
adc
in
inc
push
jns
and
ja
lea
out
insl
push
lcall
xchg
fiaddl
addr16
sbbl
fidivrl
mov
adc
dec
scas
jo
push
movsb
andl
jno
testb
jmp
mov
dec
fisubl
mov
test
imul
flds
loope
mov
cmp
gs
test
sarb
sahf
sub
imul
shlb
xor
fildl
sub
repnz
dec
call
mov
inc
cmpsb
sub
push
cld
pop
pop
sbb
xchg
and
pop
sbb
movsl
sub
pop
cwtl
jnp
sub
and
insb
fisttps
sahf
dec
mov
rol
mov
jge
jle
pop
stos
mov
aad
icebp
aas
and
inc
pushf
popf
add
loope
sbb
add
in
cmp
add
xchg
mov
icebp
pushf
shll
and
popf
stos
mov
sub
and
pop
mov
daa
inc
ljmp
and
adc
jno
push
fldt
sahf
xchg
fxch
fcomps
je
jle
lret
fisttpl
mov
mov
cld
cmp
inc
paddsw
aaa
cld
mov
cltd
pop
fisubl
xor
push
inc
lock
addr16
jecxz
inc
ret
les
outsb
loopne
lds
xchg
in
cmp
inc
mov
inc
cli
adc
cmp
aad
das
pop
pop
js
push
dec
inc
or
out
ljmp
sbb
lods
mov
movsl
cmp
lahf
push
lret
sbb
mov
mov
jae
mov
cld
pop
xchg
jno
in
adc
test
arpl
pop
loopne
cmp
int3
jmp
xorb
movsl
outsl
jbe
frstor
nop
sarl
dec
in
sub
mov
jne
adc
xor
loop
addr16
jnp
pusha
in
jno
pop
inc
movsl
sarl
dec
or
push
decl
mov
sub
outsb
pusha
mov
bound
pop
push
subl
fsubrs
mov
test
shll
mov
cmp
inc
aas
icebp
dec
mov
test
ret
cmpsl
and
scas
clc
sbb
pop
repnz
sub
test
xor
cmp
lock
daa
jecxz
jb
hlt
stos
enter
xchg
loop
jbe
je
sub
sbb
loop
cli
inc
fadds
fdivrs
test
shl
testl
lock
sub
aas
les
rcll
pusha
push
outsb
push
inc
xor
xor
xchg
dec
lods
add
dec
outsl
mov
push
sbb
inc
mov
jbe
andb
mov
cli
cmp
inc
outsb
mov
adc
movsb
mov
pop
scas
xor
add
mov
inc
imul
lods
cmp
loope
jb
xor
movsb
shrl
sub
incb
push
and
js
adc
rol
ss
loopne
lahf
je
fucom
or
jns
outsl
scas
mov
arpl
scas
push
pop
loopne
jns
and
aaa
iret
es
jl
dec
xor
fmul
fsubr
movsl
and
lock
icebp
ret
add
inc
imul
leave
and
in
mov
iret
xlat
clc
daa
sbb
test
ffreep
popa
lahf
mov
mov
inc
sub
stc
out
int3
mov
stos
subl
pusha
insl
lret
call
leave
inc
or
inc
jl
jbe
sti
jmp
jae
and
pusha
mov
sub
mulb
icebp
repnz
pop
xlat
pushl
ret
pop
out
sbb
insb
test
out
call
push
dec
adc
lret
xor
stos
popa
mov
std
mov
and
xchg
shlb
fwait
loope
cmp
inc
cmp
lods
cltd
push
add
lods
imul
mov
and
dec
idivl
ret
inc
jae
or
cmc
and
cmc
nop
lock
sub
lret
sbb
and
mov
and
shl
push
pop
sti
rcll
jg
mov
xor
inc
sbb
incb
cwtl
pop
sub
mov
stc
out
ror
enter
sbb
lcall
jne
mov
adc
inc
call
aam
insl
and
test
das
sbb
pop
mov
shrb
jns
out
mov
lahf
pushf
sbb
jmp
push
mov
mov
mov
mov
xchg
adc
xor
mov
and
outsl
sti
pop
daa
push
or
test
xor
pop
das
decl
test
jle
push
xchg
adc
xchg
sbb
iret
fcomi
int
test
repz
insb
dec
ret
shlb
or
mov
hlt
jns
push
pop
mov
or
sahf
in
sub
jg
sbb
enter
add
pop
xor
aam
lahf
jg
pop
sbb
push
rcll
mov
ss
cli
sub
dec
jno
xor
mov
mov
mov
push
xor
sub
dec
cmp
xchg
xchg
push
repnz
push
mov
mov
jo
cs
sub
jbe
stc
push
dec
bnd
mov
push
aam
mov
mov
xor
xor
enter
ficompl
cmc
dec
fbstp
movsl
dec
loop
pusha
ja
and
add
test
push
jmp
jg
movsl
repnz
and
enter
popa
pop
std
mov
push
sti
insl
sub
xchg
cwtl
test
idivb
jb
xor
out
clc
aas
testl
sarb
out
mov
mov
stos
push
xchg
sbb
dec
xor
movsl
js
enter
inc
dec
ret
fcompl
pop
cld
lock
shrl
pop
sub
test
dec
popf
int
mov
xchg
lret
cmp
cmp
clc
out
mov
xchg
inc
push
out
dec
cmpsb
pop
xchg
or
pop
xchg
ret
ret
pop
sbb
ja
adc
mov
xchg
inc
mov
push
xchg
lds
sbb
divl
mov
adc
mov
fiadds
or
fmulp
shll
sub
push
iret
ds
subl
lods
mov
insl
sbb
jbe
add
lock
loop
sbb
xlat
sbb
mov
shlb
inc
xchg
xchg
lods
and
jnp
inc
mov
jmp
or
iret
mov
push
es
xlat
nop
into
stc
scas
xor
cld
or
pop
add
in
out
into
outsb
mov
and
sub
outsl
aaa
addr16
jl
jnp
mov
dec
lods
sbb
or
adc
repz
mov
jge
sarb
ljmp
add
lds
les
mov
mov
dec
test
rcrl
jnp
sahf
mov
fiadds
push
push
js
js
xchg
inc
push
jne
pusha
push
imul
mov
add
push
popf
data16
ret
mov
adc
cltd
lret
jg
call
mov
inc
lods
cld
xor
popa
iret
popf
dec
xchg
mov
mov
mov
push
mov
mov
jge
dec
adc
push
leave
jg
push
mov
jle
movsl
out
mov
mov
xor
add
sub
shll
in
mov
xor
add
xor
in
jnp
push
cmpsb
and
mov
lea
pop
adc
ja
or
cmp
fdiv
ljmp
cmp
mov
lahf
dec
sub
dec
pop
imul
jmp
daa
subl
movsl
push
mov
loopne
push
insl
aas
pop
xchg
or
lea
add
lret
ljmp
mov
test
fldt
sbb
std
ja
popf
lcall
xchg
lahf
imul
shlb
jno
mov
pop
out
stos
xor
pop
jle
and
or
sbb
xchg
jmp
inc
mov
add
icebp
test
cld
repnz
push
bound
xchg
arpl
add
stos
mov
fs
repnz
pop
push
aad
shrl
mov
xor
stos
js
mov
mov
fnstcw
dec
fcomp
jb
fidivl
jno
xchg
loope
cmpsl
stos
bound
lahf
test
xchg
subb
cwtl
xchg
adcb
sub
push
fisubrl
rorb
in
and
cmp
inc
lea
sbbb
and
test
pop
sbb
gs
pushf
pop
pop
inc
fidivl
in
hlt
dec
cmp
repz
mov
sbb
mov
sahf
and
popa
ficomps
xor
enter
std
test
cmp
mov
test
adcb
movsl
xchg
insl
lea
gs
jmp
fsubrl
lock
inc
jbe
and
mov
stos
mov
dec
dec
cmpsb
repz
or
adc
or
push
je
repz
das
sahf
aam
jns
movsl
dec
cmpsl
lds
hlt
ss
jns
dec
fs
clc
insl
push
push
mov
xchg
sti
call
jnp
mov
es
lahf
pop
or
std
xchg
push
push
adc
pop
push
rorl
jae
je
add
out
inc
test
stos
pop
nop
or
adc
jle
lods
push
dec
mov
jg
push
dec
adc
or
inc
pop
ret
or
insb
and
mov
lods
ret
je
mov
jo
mov
adc
shlb
or
adc
xlat
mov
adcl
fcoms
jnp
in
pop
std
push
scas
es
and
orl
xor
cmp
xchg
mov
aam
js
mov
dec
into
mov
xor
test
repz
dec
jb
lds
dec
std
add
mov
or
jae
shlb
xchg
cmp
cmp
ret
movsl
fistpl
and
dec
pop
pop
lea
and
call
push
adc
pushf
inc
xor
xor
add
jne
mov
adc
mov
xchg
in
push
out
xor
xchg
or
sbb
in
mov
push
pushf
loope
loopne
fwait
int3
jbe
lret
jbe
cmpsb
jo
pop
cmp
loope
or
rolb
fsubrl
movl
cmp
es
fildll
lret
js
sub
push
mov
scas
pusha
imul
and
lcall
sub
lea
lcall
dec
adc
insb
pop
fbld
mov
je
sti
in
dec
pop
xchg
aad
int3
aaa
mov
sub
cltd
insl
iret
dec
xor
sub
sbb
push
jg
pop
loope
aaa
pushf
jecxz
lahf
aaa
xchg
cmp
jmp
push
adc
sbb
xor
sub
inc
call
fnsave
adcl
cmpsl
test
xor
cwtl
xlat
mov
movsb
dec
cmpsb
fimuls
xchg
dec
cltd
cmpl
insb
mov
push
stos
mov
jne
out
in
lret
sahf
int
dec
inc
sub
loop
pushw
icebp
sub
adc
sub
mov
sti
add
movsb
lret
mov
push
fbld
pop
mov
lret
xor
orb
xor
sbb
rcrb
pop
xor
mov
roll
mov
fisubl
sbb
mov
imul
cmp
lcall
lock
add
mov
pop
xchg
cltd
jp
and
adc
push
lea
sbb
mov
add
mov
push
mov
fs
fnsave
es
icebp
adc
inc
mov
jno
sti
bound
decl
or
lods
cmp
movl
shll
outsl
test
sub
add
sub
fldenv
stos
pop
lret
cmp
aaa
clc
sub
out
fdivr
inc
or
in
and
movsl
notl
ret
bound
jecxz
int
inc
push
stos
xchg
dec
mov
cmp
pushf
lock
shr
lds
xor
fwait
lods
mov
int3
push
sarb
add
add
std
test
push
outsb
cli
xchg
bound
pop
mov
imul
jbe
outsl
mov
pop
in
out
mov
add
jo
dec
push
push
push
adc
push
mov
mov
xorb
push
pop
mov
jp
mov
in
xchg
cwtl
pushf
push
push
fstps
push
jle
insl
aam
and
out
xor
jb
adc
mov
xchg
push
sbb
inc
out
push
mov
insl
cmpsb
movsl
xor
push
xlat
adc
or
adc
jae
jge
rol
push
xor
cmp
les
sub
shl
xor
xchg
aam
orb
add
cmp
aam
or
inc
and
out
and
fucom
rolb
insb
adc
cld
add
adc
mov
mov
jg
mov
mov
push
mov
lahf
jo
enter
fnstsw
jb
add
hlt
addb
es
jo
stos
pop
xchg
incb
pop
stos
xchg
xlat
add
or
loope
out
xchg
inc
in
scas
pusha
adc
les
adc
pop
ss
cmp
mov
insl
nop
mov
inc
mov
add
out
cli
push
jmp
jb
mov
arpl
sub
cmpsl
sub
xor
add
in
mov
push
scas
lea
mov
insb
push
movsl
xchg
not
cmp
std
icebp
dec
outsl
push
pop
jp
or
adcl
subl
in
cmpb
sbb
sahf
sbb
packssdw
icebp
cs
ficompl
mov
mov
out
int
sarb
insl
mov
lret
loop
notb
scas
clc
or
pop
outsb
iret
enter
sub
imul
rcll
sub
push
jl
pop
stos
jp
jmp
mov
shll
cwtl
inc
stc
pop
enter
aad
mov
cmpsl
insb
jmp
adc
mov
movsb
cmp
shrl
jb
sbb
rorl
or
jle
jo
jae
sub
enter
out
arpl
fidivrs
xchg
in
insb
mov
jo
lds
mov
es
out
inc
movsl
pusha
orl
mov
mov
cltd
outsl
mov
add
mov
add
fdivs
lahf
dec
in
int3
hlt
repnz
insb
data16
lahf
jg
jmp
or
mov
shlb
adcb
shl
or
mov
and
jl
andb
mov
adc
das
test
mov
xor
xor
popf
jmp
hlt
fsubl
icebp
incl
inc
daa
mov
xchg
clc
mov
in
int3
outsb
js
lea
mov
lea
inc
stos
pop
pop
xchg
dec
das
js
push
xor
dec
out
add
lods
mov
cltd
shrb
and
fsubrl
cmp
imul
xor
jg
and
cli
mov
mov
out
test
jle
in
sbb
fisubrs
mov
mov
pop
cmp
sbb
xchg
sbb
outsl
bnd
pop
lods
push
jmp
and
int
imulb
shrb
cmp
out
insl
outsb
adc
ljmp
adc
xorb
xlat
mov
clc
push
adc
aad
scas
mov
repz
pop
outsb
mov
in
lret
sub
pop
int3
xor
xchg
cmp
ret
pop
cmp
bound
mov
adc
addr16
adc
es
mov
push
ficompl
in
daa
mov
jl
jns
int
or
adc
mov
add
sub
test
cltd
xchg
cwtl
inc
or
fs
jno
xchg
sub
inc
popa
inc
push
lcall
lret
cltd
pop
mov
push
imul
aad
jbe
scas
in
xlat
movsb
loopne
jg
ds
daa
push
inc
sub
sbb
jg
adc
sahf
loopne
mov
insb
insb
sarl
add
pusha
int3
and
popl
aad
sbb
stos
add
sahf
jmp
cwtl
inc
dec
sub
cltd
cltd
mov
jns
push
xchg
push
push
jne
dec
lcall
xchg
mov
xchg
inc
mov
mov
lods
andb
add
xchg
mov
push
mov
xor
in
insb
push
movsl
pop
in
sarb
sub
fadds
jo
lahf
sub
call
ss
or
ljmp
xor
lcall
inc
mov
mov
pop
les
push
xchg
mov
or
lock
inc
push
test
sub
test
mov
push
and
dec
into
and
or
and
push
jl
add
inc
lcall
push
xchg
nop
test
jmp
dec
jg
pop
rcrb
xchg
mov
jo
aas
and
cmp
addr16
rol
call
pop
mov
inc
dec
xor
fisttpll
jp
mov
dec
xchg
enter
inc
in
pop
pop
stos
mov
adc
mov
inc
add
je
addl
cli
jmp
mov
hlt
mov
lock
leave
scas
sbb
ss
mov
pop
and
add
mov
push
push
sbb
jmp
cmpsl
ds
cmc
sarl
xchg
push
add
rcll
lcall
inc
xchg
lea
int
pop
sub
cmpsl
ret
xchg
sbb
adc
mov
out
loopne
cmp
sbb
jecxz
adc
outsb
cmp
xor
ret
out
movsb
add
xor
cmp
mov
cwtl
lret
icebp
sbb
pop
sub
mov
xorb
cmp
cli
xorl
push
mov
dec
fcmovbe
jmp
sbbl
fnstsw
cmc
mov
jae
outsb
flds
out
mov
mov
xlat
cld
sbb
mov
pop
cwtl
xchg
push
pop
sbb
dec
add
popa
mov
js
js
cmp
push
xchg
fdivrl
dec
jnp
mov
scas
pop
dec
xor
mov
adc
clc
aad
sarb
inc
inc
add
xchg
rolb
cwtl
arpl
int3
aam
fistpl
inc
lock
inc
adcb
notl
push
or
push
daa
cmp
sahf
xchg
inc
pop
out
jnp
xor
shrl
je
movsl
cmpsb
out
cwtl
mov
out
inc
incl
mov
aaa
add
and
das
div
cltd
add
sbb
sbb
femms
push
sbb
fwait
ljmp
pop
sbb
push
pop
and
and
jbe
mov
or
call
jno
pushf
popa
mov
dec
sub
sbb
xor
fdivrp
lahf
movsl
sbb
fistpl
pop
add
mov
pop
push
stc
cmp
or
mov
pop
and
add
in
dec
jne
dec
jo
jp
cltd
aam
push
popl
les
fsubrs
or
mov
insl
and
ljmp
xor
mov
inc
xor
ss
ja
fmul
cmp
xor
arpl
cmp
push
sub
push
iret
call
std
leave
and
insb
jmp
xchg
outsb
jle
loope
mov
mov
test
mov
inc
int3
xor
dec
call
jmp
jmp
inc
jno
sub
pop
pop
out
je
push
rorl
outsl
mov
fwait
sbb
dec
xchg
outsl
dec
pushf
fmuls
add
test
push
sub
daa
inc
pop
insl
jg
sub
ja
xor
ja
push
cmp
int3
leave
shrl
icebp
mov
ja
cwtl
movsb
jge
and
bound
inc
inc
repz
scas
pushf
je
test
inc
rolb
xor
mov
mov
inc
add
inc
ds
push
jge
decb
ss
les
scas
xchg
jno
cltd
mov
leave
cli
sbbl
pop
rcrl
roll
fdivl
xchg
shlb
or
loope
jnp
mov
sbb
dec
ljmp
fs
push
dec
fs
adc
jns
mov
gs
sbb
or
push
pop
mov
dec
cld
inc
sbb
add
sub
pusha
xor
push
jns
jecxz
dec
mov
sbb
mov
or
jno
mov
jmp
jno
pop
lret
push
jge
xorl
loop
mulb
test
ljmp
inc
icebp
cli
mov
jle
cmpsb
and
xor
adc
mov
or
out
lea
pop
insl
push
bound
inc
cld
leave
fistpl
lret
je
xchg
push
test
test
hlt
sti
in
add
jno
dec
pushl
aas
ret
test
push
xchg
pop
iret
mov
mov
sbb
in
xor
mov
divl
and
test
add
pop
pop
popf
push
jns
inc
lret
sbb
dec
push
jl
lcall
jno
fst
mov
movsb
dec
mov
loop
daa
sbb
xchg
orl
sbb
mov
xchg
loop
fs
int
daa
dec
push
shl
cmpsl
jge
jl
aad
xchg
rclb
mov
dec
cwtl
mov
cmp
repz
jmp
mov
ret
add
push
movsl
and
push
mov
add
xchg
out
jmp
arpl
les
sub
push
sbb
mov
sub
xor
test
xchg
xchg
pop
xor
aam
xchg
int3
jmp
outsl
popf
imul
data16
test
aaa
mov
mov
ljmp
les
mov
or
push
jb
add
xchg
push
or
mov
imul
xchg
xchg
call
cltd
mov
cmp
cmp
pop
test
sbb
add
int3
xchg
adc
and
and
and
inc
cmp
xor
insb
aaa
xlat
in
addr16
cwtl
out
sub
xor
xor
push
mov
nop
dec
ljmp
pop
and
popa
popf
rorb
fwait
and
out
jmp
inc
sub
cmp
stos
iret
loopne,pt
xor
pcmpgtb
mov
mov
imul
in
or
cli
ss
mov
xchg
lret
lret
mov
mov
push
lods
fldenv
aas
adc
jbe
sarl
pop
mov
inc
mov
fbstp
test
mov
idivb
lcall
inc
jns
out
xor
xchg
jo
cmpsb
or
mov
xchg
andl
arpl
bound
sbb
xor
pushf
adc
fwait
xchg
jecxz
xor
les
rcrb
xor
fiadds
mov
scas
mov
inc
data16
cld
rolb
loop
dec
cltd
aas
ror
jo
push
movsb
cmp
jae
jmp
dec
dec
leave
mov
mov
jns
push
movd
mov
add
out
jno
mov
sbb
push
insb
lret
cmp
xchg
push
rorl
out
xchg
cmpsl
gs
dec
jbe
xchg
add
sub
cmp
lock
and
mov
add
xor
gs
out
imul
idivb
add
dec
add
cmp
mov
ret
add
inc
sbb
dec
jl
dec
mov
mov
cmp
int3
push
in
jnp
pop
sub
push
jbe
cmp
mov
fs
push
adc
add
imul
push
inc
stos
pop
pop
lock
jle
test
scas
xchg
fdivrs
iret
sbb
stos
test
push
addl
pusha
andb
xor
mov
lea
jl
cld
shlb
or
cli
and
js
pop
js
lods
push
jb
stc
mov
int
hlt
rcll
mov
das
pop
push
adc
inc
shrb
xor
les
out
repz
int
shlb
gs
rorl
jmp
lock
xchg
adc
cli
pop
icebp
aam
out
cmp
jle
xchg
fwait
std
movsb
mov
jae
sbb
fdivs
ret
cli
lret
jb
mov
sub
stos
mov
adc
mov
iret
test
dec
pop
xor
in
cmp
cmp
insl
ret
mov
into
out
mov
js
arpl
dec
mov
push
xor
out
les
das
dec
push
cmpsl
filds
stc
add
and
out
imulb
xor
and
xor
nop
adc
stos
or
test
test
dec
xor
adc
jecxz
scas
sub
out
in
sarb
lods
fs
pop
mov
dec
jmp
xchg
xorl
addb
lds
lock
test
mov
nop
test
stos
cmp
adc
push
inc
out
arpl
sti
test
or
cmp
ja
dec
pop
sub
dec
add
jbe
sbb
or
loope,pn
pop
cmp
or
adc
lahf
sti
pop
fisttps
out
ficompl
shl
and
arpl
sbb
je
test
sbb
mov
cmp
jbe
leave
pusha
push
pusha
dec
adc
ret
stos
scas
sub
jnp
test
lcall
adc
pop
fiadds
add
sarl
mov
and
jp
imul
inc
fs
pop
cmc
jg
lea
leave
inc
sbb
lcall
push
adc
aas
idivl
in
sub
dec
adc
dec
pop
xor
push
out
int
push
mov
loope
xor
out
dec
js
sti
in
mov
out
push
mov
or
aam
mov
or
jo
test
xchg
outsb
sti
dec
push
js
scas
cmp
andb
ret
mov
push
and
imul
dec
mov
int
pop
cmp
outsl
jne
mov
pop
pusha
mov
mov
addr16
btcl
loopne
movsl
je
out
xchg
movsb
cwtl
mov
testl
inc
loope
pop
cmp
enter
jo
ljmp
or
dec
sbb
mov
mov
mov
dec
mov
addr16
popf
icebp
addr16
pop
adc
daa
dec
xchg
jp
jne
push
cmp
push
fchs
jb
fidivrs
pop
dec
inc
and
std
push
cmp
push
and
in
inc
lock
pop
lock
cmpsl
or
cmpl
adc
mov
clc
inc
push
popf
dec
test
imulb
sbb
fsts
jae
or
enter
imul
cmp
js
int3
in
and
out
arpl
inc
pop
aaa
bsf
andb
rcrl
and
xchg
sbb
push
and
sub
fiaddl
xchg
or
jno
add
popf
fstps
push
bound
pop
inc
rcrl
std
cli
xchg
cmp
xchg
dec
xor
sub
out
cmp
mov
cmp
cwtl
push
fcmove
dec
xchg
xchg
insb
push
mov
or
xor
mov
cmp
idiv
std
mov
add
fs
mov
inc
cmc
or
int3
adc
iret
mov
ljmp
xchg
add
outsb
int3
pop
out
mov
sbb
push
ja
mov
mov
out
push
test
xchg
loop
pop
cltd
or
push
push
xchg
fistl
jne
fnstenv
stos
fsubrs
rclb
fsubrs
push
inc
ljmp
sti
jge
adc
mov
adc
sbb
and
mov
movsl
fcmovne
xchg
nop
sub
xlat
into
in
rorb
dec
adc
add
fists
xor
or
inc
imul
insb
std
shl
push
aaa
inc
jp
sub
sub
pop
in
sbb
or
lret
cmp
mov
push
std
mov
add
fs
xor
xchg
pushf
xchg
ds
cmp
inc
sub
in
daa
pop
push
push
pop
xchg
xchg
xchg
xchg
ret
adc
pop
cltd
popf
xorb
sbb
mov
mov
cwtl
jmp
in
mov
lahf
divb
mov
sbb
test
cmp
and
cltd
fwait
jnp
and
fcoms
sub
sbb
mov
sbb
xchg
iret
ja
jmp
mov
jbe
mov
pushf
dec
ljmp
int3
jbe
mov
push
loope
jl
pop
jg
or
pop
aam
addr16
xor
test
pop
repz
addr16
push
ror
dec
adc
cmp
loopne
dec
and
xchg
inc
icebp
mov
iret
pop
mov
loopne
iret
lret
cmpsb
push
cli
pop
pop
jb
ljmp
sub
mov
lds
jl,pn
stc
aad
fcoml
push
out
cs
jl
dec
imull
scas
scas
lds
data16
aad
cmpsb
sarl
pop
insl
mov
and
fsubs
out
mov
inc
incl
scas
pop
sub
or
jecxz
cmp
in
ficoml
fmull
in
mov
xor
pop
xor
icebp
ja
inc
adcl
incl
flds
xchg
xchg
shlb
ljmp
adc
xchg
inc
mov
mov
jne
sub
std
xchg
adc
pop
rorb
xlat
dec
push
lret
jb
sar
int
mov
mov
pop
add
jne
adc
mov
mov
inc
sub
pushf
stos
js
xor
xor
pop
int
mov
xchg
add
gs
sbb
js
inc
decl
in
and
cmp
adc
fwait
push
jno
pop
or
dec
xchg
pop
cli
in
mov
imul
pop
mov
push
movsl
mov
inc
js
xchg
leave
inc
or
push
subb
adc
insl
mov
mov
in
cmp
into
add
add
out
mov
jae
jns
popf
mov
push
and
out
mov
push
mov
push
stos
push
sub
fsubs
sub
mov
fucomp
sub
pusha
loopne
xchg
out
sub
push
xor
dec
test
je
fs
clc
popa
cmc
jae
lret
idivl
sbb
lods
mov
mov
sbb
jl
dec
out
outsb
sub
push
out
push
aaa
fisttps
and
stc
ds
and
pop
xor
push
incb
in
rorl
stos
or
cmp
mov
dec
and
data16
push
mov
cmp
and
ja
fldt
lea
xor
lea
nop
addr16
mov
add
mov
pop
test
insl
mov
sub
nop
aaa
jle
nop
pusha
ds
into
arpl
ss
bound
add
lret
xchg
add
outsb
or
je
in
adc
or
shl
jp
mov
ljmp
rcrb
inc
je
mov
cwtl
dec
jl
pop
sti
inc
aam
cltd
es
fsubl
aam
mov
cmc
cmp
jle
pop
mov
scas
int
nop
int
clc
dec
adc
dec
cs
mov
dec
push
std
pop
jnp
xchg
mov
in
mov
in
push
rcll
push
sarb
push
scas
push
mov
movl
outsb
adc
mov
cmp
lret
xor
pop
dec
sbb
hlt
xor
jp
ret
rorb
inc
notl
js
push
out
sub
loop
daa
pop
aad
add
daa
push
aas
mov
pop
nop
xlat
test
lret
pop
popa
aad
stos
fcoms
fdivrl
fimuls
push
fs
ret
movsb
adcb
mov
mov
std
idivb
cs
mov
mov
stos
add
pop
int
mov
push
mov
pop
or
xor
call
cmc
xchg
and
in
xchg
vpmaxsw
aas
or
push
call
loop
xor
in
fiaddl
arpl
mov
xlat
sub
test
cmp
mov
mov
jnp
jmp
sub
loopne
pop
mov
rorl
mov
lea
cltd
mov
loop
push
fmul
pop
enter
sub
pop
je
stos
stos
inc
push
jbe
add
notl
mov
andl
sahf
shl
jge
outsl
sbb
cmpb
pop
and
fildl
stos
outsl
pop
xchg
aaa
ret
adc
cmp
lret
nop
or
sahf
arpl
stos
cmp
sbb
pop
pop
sti
xchg
daa
cmpsb
ffreep
hlt
add
daa
int3
cmp
aas
xor
lcall
xchg
test
push
and
xchg
inc
push
mov
jmp
add
mov
cwtl
dec
pop
add
loop
insb
rorb
mov
repz
mov
pop
shrl
mov
fcomps
fwait
scas
jb
xchg
jg
stos
mov
add
push
push
sub
cld
add
xchg
sarb
clc
mov
ss
inc
cmpsl
add
into
daa
or
and
sti
sub
orb
addr16
in
add
sti
mov
sub
dec
rcrl
mov
jne
scas
sbb
push
adc
mov
mov
jge
repz
mov
movsb
or
test
ret
mov
ficoml
pop
and
adc
popf
orl
xor
jg
xor
arpl
or
sub
jbe
fistpll
or
lcall
mov
ret
mov
pop
addr16
rorl
pop
xor
bound
test
.byte
or
cwtl
adc
xor
nop
add
add
test
mulb
mov
mov
jns
cmp
xchg
sbb
dec
xor
and
addr16
and
cmp
lea
test
test
nop
mov
int3
cmpsb
std
xchg
adc
pushf
xchg
sub
rorl
call
es
push
pop
imul
pop
and
lret
adc
jge
aam
add
lock
mov
or
cmp
or
xchg
hlt
addr16
test
pop
sub
daa
pop
mov
push
out
sbb
sub
int
nop
xchg
out
xor
dec
lds
sahf
hlt
addr16
cld
ret
das
or
adc
rorb
movsl
inc
into
or
or
cmpsb
push
out
or
pop
into
sub
and
jo
pop
sbb
mulb
mov
sbb
ficompl
push
pop
push
mov
and
cmp
in
pop
test
lahf
push
xchg
or
xchg
jb
xlat
sbb
and
gs
dec
and
jmp
int3
lahf
pop
or
aam
sbb
insb
sub
iret
inc
jle
adc
push
xchg
inc
outsb
daa
and
lods
lahf
loopne
push
testb
adc
jne
push
xor
mov
sub
jnp
push
adc
jae
jno
push
xchg
and
gs
dec
push
xor
mov
mov
and
inc
mov
sub
andb
arpl
aas
out
cmpb
fs
hlt
xchg
xchg
mov
test
enter
cmc
push
mov
movsb
sahf
jns
xchg
jno
aam
jl
clc
mov
mov
outsl
lahf
aad
xchg
adcl
cmpsl
mov
loop
mov
adc
cs
add
loopne
push
gs
popa
sti
movsb
and
xchg
sbb
inc
add
xchg
or
xor
adc
lock
push
.byte
add
add
mov
add
add
add
addb
addb
add
pop
add
addb
add
lock
orb
add
xor
add
mov
add
mov
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
sub
add
inc
add
addb
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
add
add
add
add
pop
add
mov
pop
add
rolb
add
call
pop
add
add
add
sbb
add
xor
add
mov
add
add
add
add
add
add
add
pusha
add
orb
add
add
nop
add
adcb
add
add
add
add
addb
add
mov
add
add
add
add
add
subb
add
or
or
add
loop
add
testb
adcb
addb
add
and
add
inc
or
sbbb
add
or
or
add
loopne
add
clc
add
adcb
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
inc
add
add
mov
add
add
add
add
add
push
add
add
mov
add
add
add
add
add
pusha
add
add
mov
add
add
add
add
add
jo
add
add
add
mov
add
add
add
add
add
addb
add
add
add
add
add
add
nop
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
mov
add
add
add
add
add
loopne
add
add
add
mov
add
add
add
add
add
lock
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
and
add
add
add
mov
add
add
add
add
add
xor
add
add
add
mov
add
add
add
add
add
inc
push
add
add
add
mov
add
add
add
add
add
push
push
add
add
add
mov
add
add
add
add
add
pusha
push
add
add
add
mov
add
add
add
add
add
jo
add
add
add
mov
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
nop
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
addb
add
add
in
add
add
add
clc
cmp
add
add
in
add
add
add
adc
or
call
add
add
add
add
xor
add
in
add
add
add
inc
daa
or
test
add
in
add
add
add
cwtl
push
or
test
add
in
add
add
add
xor
or
push
add
add
add
add
and
add
add
add
loopne
or
test
add
in
add
add
add
js
or
push
add
add
add
add
add
in
add
add
add
dec
pop
add
adc
add
in
add
add
add
pop
pop
add
or
add
in
add
add
add
pusha
pop
add
insb
add
add
add
add
add
add
pop
add
faddl
add
in
add
add
add
test
add
aam
add
in
add
add
add
jl
add
inc
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
xor
add
add
add
add
in
add
xor
add
in
add
add
add
and
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
in
add
add
add
rol
add
add
in
add
add
add
in
or
pop
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
or
add
add
in
add
add
add
clc
or
pop
add
add
add
add
add
add
enter
add
add
add
add
add
add
or
push
add
add
add
add
add
add
or
add
add
in
add
add
add
adc
or
add
add
in
add
add
add
adc
or
pop
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
fisttpll
add
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
xor
call
xchg
movsb
incl
sbb
pop
dec
in
cmp
xchg
inc
inc
std
movsl
lea
push
fstpt
xorb
cwtl
mov
add
adc
insl
xlat
sbb
ss
add
icebp
lret
jmp
add
or
adc
loope
shlb
dec
out
xchg
mov
xchg
mov
lret
jb
push
leave
fwait
cli
push
jns
mov
xchg
fs
jmp
mov
das
cld
test
or
mov
adc
mov
je
jnp
inc
and
sub
pop
pop
ret
test
pop
pop
out
mov
adc
enter
not
ja
cmc
add
mov
cmc
adc
aaa
jmp
sbb
cmp
and
scas
dec
es
pop
cli
leave
stos
ljmp
inc
xor
loop
sub
icebp
call
stos
and
out
sbbb
mov
cld
pop
jb
or
test
and
in
adc
push
pop
xchg
repz
insl
in
rorb
push
mov
mov
xchg
mov
pop
push
xchg
inc
int3
shrb
xor
xchg
mov
fdiv
hlt
push
and
add
xor
rolb
push
fildl
add
xchg
lock
orb
sbb
cli
push
jmp
leave
call
sub
pop
xchg
or
pushf
push
dec
adc
xchg
mov
cmp
aas
loopne
push
out
sbb
mov
jmp
add
rolb
repnz
adc
dec
mov
imull
push
stos
push
sbb
sarl
or
lds
fstpt
jae
jmp
nop
lock
jecxz
adc
jbe
loop
popa
mov
mov
and
adc
inc
cwtl
sbb
mov
mov
shlb
jl
lret
imul
in
lods
cmp
fs
adc
lea
out
sahf
inc
lock
jne
movsl
ja
jle
incl
mov
inc
fadds
sub
mov
xchg
mov
cwtl
test
adcb
jae
shr
scas
mov
fidivs
ss
pop
xor
aas
adcl
movsb
arpl
dec
pcmpgtb
cmp
push
in
cmp
cld
push
jne
xor
xchg
ret
mov
cli
xlat
jl
sti
jb
mov
sbb
lds
and
mov
icebp
jl
fwait
stc
hlt
mov
ficoml
jne
cli
or
test
data16
jmp
xor
lret
mov
lahf
aam
imul
sbb
repz
or
add
lcall
movsl
jp
push
das
cmpl
xor
sarl
scas
push
pusha
sub
push
push
and
lds
xchg
fisttpl
les
xchg
add
dec
mov
pop
out
cmp
sub
add
or
imul
ret
jae
or
xchg
scas
mov
outsl
adc
pusha
dec
pop
test
and
xchg
adcl
rorl
push
sbb
loope
push
jne
adc
aam
test
push
loopne
jno
outsb
mov
push
ss
mov
movsl
inc
test
dec
xor
int
push
cmp
fldenv
shrb
stc
adc
pop
popf
sbb
add
add
push
push
and
dec
fsubrp
push
les
ja
xchg
movsb
movsl
or
xor
mov
xchg
jmp
cwtl
rcl
push
popa
pop
inc
and
int3
jo
das
adc
out
sbb
push
cmp
push
mov
pop
out
dec
fcmovnbe
call
imulb
add
inc
mov
hlt
and
addr16
xor
mov
gs
shrb
insb
push
ffreep
inc
jae
fsub
mov
jmp
outsl
mov
loopne
xchg
add
shl
cmp
pop
mov
cmp
xor
sarb
lds
cmovnp
adc
dec
pop
push
add
inc
test
call
test
mov
jb
pop
cltd
xlat
adc
test
mov
jo
pop
loop
mov
rcll
dec
cmpb
sbb
dec
outsb
movsl
cmp
pop
pop
pop
mov
gs
inc
mov
sub
rolb
dec
jbe
jb
add
mov
dec
mov
fs
sbb
mov
lahf
sbb
adc
mov
mov
ljmp
aam
fistl
pop
repnz
ficomps
or
les
in
mov
adc
mov
scas
imul
push
push
fdiv
leave
inc
rclb
aam
out
fsub
das
inc
pop
outsb
xor
push
mov
push
dec
int3
cmpsl
mov
add
pop
xchg
es
rcl
out
push
shrb
mov
xor
fwait
dec
call
movsl
sahf
rcll
popa
or
shlb
xchg
fs
test
mov
mov
mov
lcall
cmp
and
adc
inc
or
pop
xchg
inc
js
in
dec
cltd
push
mov
scas
jmp
ret
jo
clc
sub
cmpsb
cld
mov
jns
das
push
or
ficoml
cwtl
into
and
dec
mov
insb
icebp
sub
mov
out
mov
push
shrb
pop
into
add
push
std
aas
sarl
test
test
inc
cwtl
mov
push
fwait
cmpsl
push
je
movsl
add
scas
loop
xchg
mov
orl
movsl
cmpsl
int3
push
jae
push
jnp
push
pop
push
xor
fmuls
daa
lahf
xlat
adc
cmp
call
mov
icebp
je
iret
xor
addl
rorb
scas
dec
push
pop
mov
or
dec
js
insl
jno
xchg
mov
call
das
test
inc
push
xor
fstl
clc
xor
or
stc
stos
cmp
out
sarb
aas
hlt
nopl
aam
out
push
sub
aad
xchg
xchg
xor
adcl
mov
adc
or
jmp
pop
mov
xchg
loopne
cmpsl
inc
dec
push
lahf
adc
adc
pop
outsl
movsb
pop
movlps
out
mov
mov
aas
and
xlat
movsb
movsb
jns
adc
push
adc
rcrl
cmp
stos
imul
mov
jae
movsl
movb
out
mov
lret
ss
es
jnp
stc
inc
in
mov
shl
or
inc
out
xor
sub
mov
xchg
cmp
xchg
push
push
addl
int
loope
mov
mov
cld
inc
mov
inc
mov
jo
or
sub
pop
xor
outsb
jno
sub
push
xchg
lock
jge
sub
nop
push
loope
inc
pop
lret
mov
xchg
adc
xchg
ss
popf
lret
mov
xor
sbbb
pushf
mov
pushf
lods
loopne
mov
mov
mov
xor
xor
add
stos
test
jecxz
mov
mov
push
lcall
lret
cmc
dec
push
adc
sbb
in
jmp
add
fsub
cmp
xchg
lcall
lcall
cmpsb
es
pop
mov
push
movb
test
adc
adc
daa
mov
jle
dec
xchg
arpl
stos
jno
lds
pop
loop
jbe
mov
jb
and
mov
repz
or
daa
fildl
insl
jecxz
and
mov
shll
inc
mov
out
jg
hlt
out
test
fwait
ror
mov
cmp
mov
push
jbe
xchg
scas
fsub
jg
cld
jnp
es
push
xor
xchg
mov
jmp
push
mov
push
lcall
push
in
popa
arpl
aas
lods
lock
int3
daa
adc
scas
mov
mov
ret
adc
and
add
gs
outsb
sbb
ss
pop
inc
lock
ljmp
subb
inc
fsubrs
inc
movsb
mov
sub
stos
iret
les
push
ret
decb
or
adc
fistpll
add
mov
jnp
aaa
pusha
insl
shll
sarb
xor
lock
sbb
mov
aam
test
push
mov
scas
mov
testb
cmp
subl
je
incb
fs
pusha
sub
repnz
mov
jno
call
mov
imul
dec
in
les
mov
sbb
mov
cld
add
add
cli
ds
push
mov
stos
in
mov
push
add
mov
sbb
jl
icebp
sti
imul
iret
rol
xchg
push
out
push
xor
mov
test
shlb
xchg
inc
popf
stos
daa
out
aad
inc
sbb
imul
cmp
dec
addr16
dec
fisttpll
pop
mov
hlt
add
mov
and
pop
dec
or
clc
mov
daa
xchg
or
sbb
or
mov
xor
mov
mov
rclb
imul
jne
mov
shrl
inc
dec
stos
push
sub
std
sub
scas
push
sbb
loop
jno
lahf
inc
fdivp
mov
mov
and
add
sub
ljmp
push
sub
sub
cmpb
daa
or
cmp
sbb
sbb
add
sbbb
aas
mov
jae
fsubl
rclb
mov
inc
ljmp
out
out
nop
pushf
adc
mov
jmp
inc
fwait
testl
cld
or
cld
sti
lret
out
repnz
pop
stos
pop
sahf
pop
icebp
cmp
nop
jge
xor
fxsave
cmpsb
cld
xchg
addl
and
std
inc
mov
int
nop
jb
pop
push
fld1
sub
xchg
cmpsb
mov
add
stc
mov
imul
cmp
hlt
jl
push
mov
out
lock
adc
pop
jns
xchg
mov
xchg
leave
cmp
test
pop
push
jp
sub
ror
addl
xchg
inc
data16
add
mov
and
std
sahf
fsubl
fsubp
loopne
cmpsl
mov
imulb
mov
pop
xchg
enterw
je
lods
popf
cmp
xchg
aaa
inc
aas
test
push
popl
add
cmpsb
and
loopne
mov
jp
fildl
adc
push
sub
in
gs
ss
push
push
in
sub
pop
fadd
bound
popa
std
dec
xlat
ja
xor
dec
and
in
lcall
arpl
jns
jne
mov
xor
sub
xchg
and
cmpsb
and
sub
imul
shrl
std
mov
mov
ja
xchg
push
lods
mov
int3
out
or
mov
xor
or
xor
rorl
inc
pop
push
and
leave
pop
jge
test
cmp
shrb
scas
aas
shrl
pop
ror
rolb
xor
or
dec
inc
dec
adc
jle
jge
sbb
cwtl
jae
jle
cmp
jne
xchg
in
adc
lods
mull
and
cmp
lret
daa
and
into
es
fidivrl
sbb
test
mov
pop
in
fnstsw
mov
sub
popl
inc
adc
dec
mov
adc
faddl
adc
pop
dec
sbbl
mov
dec
pop
sbb
mov
sbb
pop
lock
mov
mov
cwtl
dec
xchg
subb
dec
inc
mov
nop
divl
daa
mov
dec
enter
jge
and
or
and
outsb
lahf
mov
sbb
dec
fcompl
or
popa
rorb
popa
kmovw
sub
mov
out
sub
adc
dec
inc
push
xor
rorb
adc
dec
dec
lods
push
aas
xor
push
jle
repz
fadd
push
xchg
xchg
xor
push
push
pop
xchg
imul
mov
out
cwtl
xchg
sub
inc
leave
out
jl
jp
pop
xchg
mov
mov
subb
out
vdivpd
pop
int
push
cli
dec
push
enter
sarb
push
lods
sbb
push
addb
scas
push
fldenv
cmp
add
or
arpl
mov
dec
out
insb
clc
in
ret
dec
xor
repnz
popa
lock
cmc
mov
mov
push
and
cmc
jg
inc
scas
mov
in
sahf
cli
std
dec
pop
mov
inc
sub
jb
cwtl
inc
push
and
decl
cmp
pop
mov
add
xchg
movsl
out
shr
lock
adc
sbbl
int
jl
and
fsubr
fdivl
lret
mov
jge
shr
jnp
pop
jne
int3
sbb
hlt
sti
getsec
cmp
shlb
mov
jns
int3
push
leave
cmpsb
aam
loope
in
add
push
jne
ror
push
cmp
xchg
pop
xor
ret
push
mov
imul
outsl
leave
sbb
xor
mov
loope
popa
and
mov
loop
or
push
sub
les
mov
das
push
pusha
lea
pop
inc
cmp
add
push
sub
cmp
es
add
test
mov
mov
sbb
add
mov
inc
fnsave
or
jle
inc
mov
or
out
push
mov
stc
push
sbbl
insb
fwait
ss
mov
mov
in
movsb
fisubl
mov
rcll
lahf
push
dec
daa
cmpb
pop
push
cli
sub
cmc
lcall
js
cs
mov
ficoms
enter
cmp
add
popa
mov
mov
ret
popa
push
dec
in
scas
aas
push
insb
jo
stos
js
mov
pop
fwait
push
mov
add
aas
into
jb
pop
adc
or
jg
or
jle
orb
dec
jmp
dec
ljmp
mov
pop
aad
fnstenv
or
out
push
add
jmp
dec
inc
sbb
clc
dec
pop
arpl
inc
daa
movsl
xchg
mov
jnp
lahf
jnp
or
std
jnp
cmp
sarb
pop
xchg
xchg
mov
jae
mov
mov
lret
pop
sti
sti
mov
mov
pop
push
sub
fimull
repnz
cmp
cmc
pusha
stc
jns
outsl
imul
or
cmp
mov
mov
fxam
mov
jb
into
mov
mov
push
movb
push
cmp
dec
xor
pop
dec
jno
pop
adc
and
push
sbb
cmp
jbe
popf
out
fildll
xor
fcoms
or
mov
loopne
xor
and
cmp
aas
dec
or
sbb
stos
jl
mov
dec
inc
sbb
fs
xor
adc
dec
std
jmp
test
in
pop
push
or
sub
mov
loopne
adc
dec
mov
lahf
into
and
dec
sub
aad
pop
or
loope
decb
inc
lods
loope
clc
loope
pusha
mov
jle
aaa
and
loopne
and
adc
xor
jb
sbb
test
mov
mov
mov
mov
dec
movsl
xchg
xchg
sub
in
inc
xchg
adc
pop
push
je
fisubrs
test
inc
sbb
sti
ljmp
inc
mov
out
pop
pop
add
sbb
in
rcll
fdivrl
sarl
pop
leave
pop
adc
cmpsl
outsb
adc
jmp
rorl
jne
inc
push
nop
pop
mov
out
cmpsl
pop
cmp
fidivrl
popf
dec
dec
sub
nop
dec
scas
imul
scas
add
enter
lods
mov
push
jp
push
push
sbb
aaa
push
adc
mov
lahf
or
add
adc
lret
aas
pop
insl
pop
rolb
xchg
and
clc
or
mov
sub
push
cmp
jb
inc
mov
cltd
push
jne
adc
mov
sbb
mov
inc
cmp
or
mov
hlt
ljmp
mov
popf
and
bswap
or
sbb
clc
repz
add
mov
out
sahf
andl
lahf
push
mov
sbb
sti
lds
jmp
xchg
loope
stos
cmp
mov
test
pop
mov
andl
dec
jl
xchg
loope
jo
mov
push
lcall
test
mov
pop
sbb
adc
xor
push
mov
inc
movsl
pop
sbb
and
mov
and
notb
mov
stos
std
shlb
mov
jb
pop
enter
and
stos
mov
ret
orb
jb
push
pop
insl
movsl
push
pop
jno
bound
pop
inc
js
mov
mov
pop
sub
inc
sub
leave
sub
rcr
xchg
out
fcmovnu
xor
ret
adc
ss
cs
fstpt
pop
xor
icebp
mov
outsl
xorb
daa
scas
idiv
mov
mov
cmpsl
test
jnp
jle
fldenv
scas
cld
imul
sub
cmp
div
push
pop
lock
inc
dec
in
push
int
cltd
mov
fsubr
pop
mov
xor
ja
ja
push
insl
mov
xorl
lods
cmp
sub
adc
jne
stos
notb
les
orl
or
fcoml
dec
test
xchg
out
sbb
ss
mov
sahf
pop
or
in
aas
dec
stos
mov
cmp
jge
enter
andl
pop
adc
jecxz
mov
cwtl
or
cltd
cld
sbb
jge
cmpsl
bound
and
enter
xchg
push
inc
pushf
dec
xchg
sub
adc
stos
lods
roll
enter
loop
rcrl
and
pop
icebp
das
ret
cmp
xchg
int
bound
out
das
popl
js
in
jl
call
add
bound
stos
rcll
loop
clc
popf
loope
push
jne
movsb
adc
push
cmpsb
in
aas
mov
dec
lcall
inc
sbb
fwait
sbb
aaa
scas
out
add
pop
xor
cmp
pop
pushf
mov
popl
jmp
movsb
ds
pop
decl
adc
aam
or
iret
xchg
aam
cmp
mov
fistl
or
cmp
mov
jbe
ds
dec
jmp
push
test
sahf
dec
je
ret
je
mov
lret
pop
cmpsb
sti
into
mov
inc
cli
and
mov
and
push
int3
and
jmp
sub
cwtl
scas
and
mov
out
es
push
add
jnp
xchg
inc
cmpsl
stc
sub
fiaddl
xchg
dec
jo
test
and
mov
jno
inc
pop
int3
xor
inc
mov
test
lret
test
jmp
jns
andl
or
mov
cmp
mov
jbe
push
clc
stc
popa
xor
fs
sbb
or
or
adc
addr16
faddl
mov
push
push
js
dec
shll
subl
aam
cwtl
add
nop
mov
pop
inc
mov
pop
jecxz
into
dec
mov
mov
sbb
mov
loop
dec
add
in
xchg
pop
mov
mov
jno
int
xchg
cmp
push
sahf
cmp
out
pop
fs
les
push
mov
xor
enter
add
mov
xchg
push
shll
push
rcl
imul
pop
pusha
outsl
dec
sub
stc
adc
push
dec
lds
add
cmc
xchg
jno
int
jecxz
pushf
add
insb
call
lock
stc
cmpsl
dec
xchg
shl
mov
fs
mov
int
inc
mov
daa
arpl
mov
and
dec
aas
lods
or
mov
test
push
data16
and
dec
cwtl
mov
xor
repnz
insl
mov
adc
repz
test
lds
orl
mov
outsl
fisubrs
imul
jle
out
jp
inc
xorl
popf
sub
enter
das
sbb
cmpsl
xlat
mov
or
lods
ret
lret
pop
cmp
loop
test
jmp
stos
cli
rorb
xor
sbb
movsl
pop
std
gs
adc
mov
inc
sti
mov
pop
add
sbb
fstpt
pop
sbb
mov
leave
lods
jnp
pushf
lea
inc
rcll
xor
dec
sub
xchg
pop
mov
and
cld
xor
dec
push
into
push
loop
les
movsb
cmpsl
sub
sahf
sbb
decb
adc
jo
jns
roll
cmp
xchg
ficoml
outsl
pop
sub
mov
inc
mov
aaa
cltd
xor
les
repz
push
xchg
dec
pop
out
out
mov
dec
jl
xchg
xor
stos
add
and
cmpsb
roll
adc
dec
in
je
mov
lahf
xchg
rcrb
jns
xor
addr16
std
stos
icebp
sti
mov
cltd
out
or
repz
adc
xlat
ret
loope
xchg
shl
sbb
pop
gs
aad
ss
stos
repnz
lods
jno
cltd
ret
adc
xchg
xor
push
push
and
jecxz
mov
outsl
push
jbe
inc
sti
stc
or
add
mov
clc
push
cmc
iret
loopne
mov
push
mov
and
lods
xchg
daa
sub
xor
std
pop
inc
movsl
jl
loop,pt
jecxz
movsb
adc
leave
dec
sbbb
xchg
cmp
mov
and
int3
aad
adcl
les
stos
xchg
sub
pop
xor
jge
push
mov
negb
jo
paddb
insb
rcr
fisttpl
scas
and
fisubrl
xchg
mov
notb
sub
negb
cmc
insl
pop
sbb
shll
std
cmp
and
mov
or
or
arpl
movsl
fdivrs
insb
outsb
cs
out
fistpl
scas
mov
xlat
mov
lods
movsl
mov
stc
add
nop
mov
outsb
mov
mov
dec
adc
lret
bound
jg
js
lock
sub
call
fsub
ret
aaa
push
and
push
and
insb
pop
push
pop
leave
sub
movsb
inc
mov
and
movsb
and
push
inc
jg
fcmovb
inc
arpl
sub
daa
jmp
outsl
lahf
fwait
loope
enter
xor
cmc
xchg
cmp
lea
xchg
divb
in
cli
ss
mov
pushf
or
std
lret
gs
jle
sar
psubsw
sub
push
mov
xorb
dec
jnp
in
jmp
es
rcrl
xor
sub
fisubl
and
sahf
test
loope
shrb
inc
push
lea
movsl
and
xlat
fs
cwtl
jbe
int
pop
sub
xchg
jge
or
push
inc
cld
cs
xor
push
mov
or
push
dec
adc
mov
push
inc
jge
jecxz
lret
repz
dec
xchg
push
jle
gs
rcll
cmp
cld
test
xchg
jle
sub
mov
insb
shll
mov
mov
out
imul
mov
shll
lock
xchg
fistps
mov
push
lret
cmp
push
add
repz
mov
jb
test
sbb
dec
lret
jmp
shl
jbe
les
sub
std
rorl
mov
inc
jne
imul
adc
mov
jge
ficomps
and
mov
cltd
dec
cs
mov
or
add
mov
mov
adc
jnp
lods
and
imul
xorl
popf
dec
adc
insb
push
sub
sbb
loopne
mov
jp
push
jo
rcrb
subb
sbb
sub
sub
movsb
fimuls
pop
mov
dec
sbb
adc
xchg
inc
mov
stos
mov
scas
pop
jge
cmc
nop
xlat
jns
dec
stos
in
int3
mov
scas
sub
out
fimuls
adc
xor
jmp
sbb
dec
and
sbb
xor
add
inc
stos
insl
dec
push
xor
ret
or
jl
jmp
popa
cmp
dec
inc
and
aam
push
pop
out
xor
push
dec
dec
mov
cmp
push
adc
xchg
das
pop
shl
popa
push
xor
fcmovnbe
jo
ret
push
es
mov
imul
jmp
in
inc
sub
scas
push
ljmp
ljmp
lods
lcall
xor
jo
and
in
rcpps
xchg
xorl
sub
flds
mov
cmp
mov
pushl
mov
mov
sarl
insl
int3
ds
out
pop
jmp
rol
jne
mov
in
push
aaa
popf
xor
sarb
mov
sbb
fists
xor
stc
mov
cmp
testl
cmp
fdivr
dec
mov
sub
loopne
mov
cld
leave
or
or
push
addr16
dec
daa
add
cmp
xor
or
movsb
cmp
mov
pop
mov
mov
test
xor
mov
xor
out
xor
sub
pop
jge
fidivs
push
in
cmp
cmp
pusha
pushf
jns
mov
mov
scas
stos
sbb
gs
insl
adc
jmp
or
loope
sub
pop
sbb
mov
pusha
outsb
mov
in
out
adc
pop
and
fs
mov
mov
je
jns
imul
cmpsl
mov
lock
xor
movsb
inc
mov
popl
mov
lahf
mov
ja
mov
inc
xchg
icebp
xchg
jle
dec
mov
fnstsw
lret
jle
sub
mov
pop
scas
sbb
push
sub
gs
lcall
xchg
or
testl
pop
fwait
push
insb
stc
mov
pop
lret
mov
jns
push
mov
lds
sub
pop
push
and
gs
mov
dec
shll
add
sub
or
iret
xor
jle
mov
jno
repz
mov
push
clc
in
jg
mov
repnz
and
lods
int
jp
lcall
subl
add
pop
or
ds
push
inc
jmp
sbb
subl
sub
sarb
mov
push
xchg
imul
inc
mov
enter
xor
sub
pop
cmp
pop
sahf
cmp
ljmp
data16
rorb
and
sbb
cmp
push
add
sar
jae
shlb
push
inc
pop
add
test
nop
jb
mov
imul
inc
mov
jp
mov
cs
xchg
pop
push
mov
lcall
js
loope
lret
dec
pop
addr16
push
fistpl
jg
lcall
pusha
fmull
lret
sbb
jmp
ljmp
adc
and
push
cltd
or
push
and
lods
outsl
mov
jo
push
or
icebp
mov
mov
pop
fwait
nop
movl
pop
fsubs
xor
jmp
fisubrl
sti
ss
and
cmp
sti
divb
movl
pop
mov
xchg
cmp
mov
loopne
xor
cmp
jae
pop
or
xor
jmp
icebp
push
rcl
jo
aaa
mov
rclb
push
jo
dec
shll
mov
sbbb
push
iret
dec
gs
stos
clc
popf
and
mov
dec
jne
sub
pop
fwait
xor
pop
and
mov
push
adc
addr16
push
clc
nop
lock
mov
mov
jmp
dec
xchg
pop
or
pusha
dec
out
adc
pop
jns
movb
stos
cmpsl
sarl
lahf
test
jnp
jne
shrb
add
stc
stos
arpl
sub
inc
cvttps2pi
cmc
dec
pop
mov
dec
pop
icebp
mov
adc
scas
lods
mov
pushf
stos
mov
add
in
test
mov
popf
fiaddl
cmpsl
adc
add
adc
aad
cmp
cvtpi2ps
inc
lret
stos
test
pop
fcomi
ljmp
popf
jae
rcrl
fstl
mov
in
mov
xchg
and
push
jg
loope
push
lcall
lahf
mov
push
arpl
cmpsl
fisttpl
push
xchg
jno
pop
bound
pop
pushf
stos
pop
movsl
sarl
arpl
dec
dec
xor
mov
sti
pushf
aad
ret
and
push
inc
shrb
and
std
dec
mov
lret
lahf
jge
and
xchg
mov
pop
inc
sbb
push
mov
or
cmp
push
js
and
push
jb
jmp
jnp
and
sbb
out
out
int3
and
xor
jg
test
in
push
xchg
pop
xchg
fcomps
jno
and
pop
jmp
out
sahf
xchg
pop
jb
mov
inc
sub
leave
cld
push
outsb
xchg
add
lds
ja
aaa
adc
add
and
cld
xchg
mov
or
lcall
xchg
lret
push
mov
and
cmp
xchg
jae
mov
je
sbbb
sbb
sub
sub
push
cmp
aad
mov
lods
out
xorl
pop
adc
jl
xchg
les
add
clc
hlt
xchg
jns
mov
flds
int3
movsb
out
pop
inc
lock
ja
sub
adc
xchg
addl
push
jne
hlt
iret
addr16
adc
adc
je
ret
jmp
je
xor
insl
mov
add
clc
std
jne
sahf
adc
mov
pusha
dec
xor
cmp
xchg
mov
mov
pop
sub
xchg
mov
lods
xor
xchg
mov
stc
outsb
push
out
scas
repz
adc
or
call
inc
adc
mov
fcomip
lods
insb
nop
and
mov
pusha
xchg
fwait
ja
test
xchg
inc
xchg
lret
cltd
sub
jbe
mov
frstor
lods
mov
or
mov
orb
push
je
push
mov
std
mov
decb
ljmp
xchg
lret
out
inc
pop
add
cwtl
fidivl
addr16
and
cmp
fistps
xor
mov
popf
loop
mov
dec
shlb
mov
popa
sbbb
dec
sarl
or
cli
push
cmpsb
rcl
cli
xchg
xorb
es
rol
fnstsw
or
add
je
jge
mov
insl
xchg
hlt
sub
push
dec
mov
xchg
pushf
push
adc
in
inc
pop
mov
pushf
outsl
mov
movsl
shr
cld
sbb
xchg
sub
and
cmp
insl
movsl
mov
and
clc
aad
jno
sbb
mov
shrl
adc
nop
mov
gs
adc
jmp
cmp
stos
shll
movsl
mov
push
stos
cmp
insl
push
addr16
jmp
js
js
pusha
push
popa
or
jp
xchg
and
lods
cmp
test
xchg
sbb
adc
enter
and
scas
lret
mov
repz
cmove
add
xchg
sub
mov
cmp
mov
cmc
pop
push
sbb
in
subl
sbb
int3
pop
scas
xor
test
les
dec
and
or
xchg
dec
enter
pop
inc
das
jne
jo
dec
iret
mov
shl
fwait
jl
xor
and
fs
cmp
pushf
pushf
mov
loop
dec
scas
mov
daa
xor
lret
adc
les
add
and
test
pop
xchg
lock
lret
xchg
lret
inc
sbb
mov
sbb
sahf
push
in
in
mov
adc
popa
cmp
dec
xor
sub
mov
xchg
sub
in
inc
jp
enter
xchg
clc
mov
xchg
pop
ss
aam
pop
pop
insl
push
pushf
repnz
not
clc
xor
mov
jno
cmpsl
lock
test
sub
js
lds
adc
push
mov
jg
xor
sbb
fbld
sub
rcrl
js
loope
xlat
adc
gs
in
out
add
pusha
bound
mov
fwait
mov
xchg
push
sub
ss
jle
dec
mov
push
jne
idivl
mov
dec
js
inc
lods
mov
mov
or
inc
orb
xchg
cmp
and
xchg
idivl
adcl
das
mov
adc
sbb
and
ja
add
sarb
dec
mull
jno
push
popl
lcall
les
jmp
sub
jb
xchg
dec
shlb
pushf
lret
nop
push
adc
in
xor
sbb
xchg
hlt
xchg
in
int
test
mov
pop
sbb
mov
call
data16
pusha
jle
and
jo
inc
mov
add
inc
xor
inc
mov
xor
call
xlat
add
push
gs
int3
insl
sub
jecxz
ljmp
add
push
adc
insb
push
popf
push
and
aaa
adc
in
and
xor
dec
hlt
xor
int3
inc
rcrl
inc
lret
sub
test
nop
mov
sbb
jl
and
dec
and
mov
dec
adc
test
push
or
sbb
fidivrs
popf
dec
ficoms
lcall
stc
mov
and
jle
sub
lods
out
xchg
loope
mov
inc
dec
push
addr16
je
sub
clc
jne
cwtl
inc
jns
outsb
jmp
push
arpl
rorb
loopne
imul
nop
xchg
fstps
mov
push
xchg
sbb
lret
mov
sub
inc
push
xchg
cwtl
sarl
pusha
je
mov
insl
dec
adc
rcl
push
cmp
cmp
data16
jmp
add
inc
inc
jns
adc
fisttps
lea
mov
mov
lret
or
out
les
std
inc
fwait
xchg
test
add
dec
jg
jecxz
or
dec
pop
adc
adc
lock
dec
stos
popf
test
cmp
xlat
xchg
mov
notb
pop
mul
push
jmp
inc
xlat
cmpsb
int
xchg
pop
jae
popl
stos
addr16
in
or
jae
cmp
sbb
jnp
sbb
cmp
addr16
push
inc
push
xchg
je
jge
sarb
inc
lods
jb
jge
push
or
cmp
ret
pushf
out
push
lret
shll
nop
out
push
mov
mov
leave
daa
push
cmp
mov
scas
xchg
or
test
sbb
repz
popa
cmpsb
es
leave
test
rcrb
mov
rcl
notb
les
ljmp
sub
aas
xchg
push
mov
insb
adc
popf
add
push
pop
subl
loope
movsl
jne
xchg
dec
xchg
sub
dec
sti
mov
xchg
xchg
fsts
lret
mov
mov
jbe
sbb
inc
loopne
outsb
leave
iret
dec
cmp
insb
pop
pushf
xlat
mov
adc
jbe
sub
mov
and
pop
inc
inc
jecxz
aam
xchg
andl
mov
sbb
outsl
pop
inc
pop
dec
xor
mov
rcrb
jo
mov
mov
cltd
adc
in
fs
sub
addb
mov
pop
cmp
cmpsb
icebp
xor
mov
sub
movsb
jmp
lcall
xor
jae
movsl
in
int
mov
push
jmp
jns
sub
push
sub
daa
arpl
pop
jle
lcall
adc
adc
imul
mov
fstpt
add
inc
mov
ss
sub
push
xlat
push
mov
clc
mov
stc
xchg
xchg
mov
or
sbb
sub
pop
jne
cmp
jl
xor
mov
lret
push
cs
push
stos
dec
movsl
push
add
xor
leave
mov
sbb
bnd
aaa
jno
test
inc
sbb
out
subb
int
imul
mov
inc
out
arpl
jmp
test
pop
add
incb
call
repz
dec
xchg
ficompl
repz
sub
mov
jbe
xor
fwait
sub
hlt
pop
pop
xchg
out
outsl
les
xchg
pop
leave
fs
sbb
push
push
sub
xor
inc
mov
inc
mov
pushf
add
insb
sbb
jmp
ret
insb
dec
inc
js
inc
rolb
es
dec
dec
inc
push
andl
int3
mov
mov
fidivrs
dec
aaa
jle
dec
sub
test
int3
or
int
and
fistpl
fistpl
mov
call
xchg
cmp
notl
int
movsb
inc
cltd
xor
shll
cmp
push
mov
popa
addl
jecxz
and
xor
aas
in
sarl
push
dec
int3
in
mov
lock
mov
stos
or
mov
xchg
pop
cmc
xlat
dec
in
jae
repz
in
scas
cmp
shll
push
fs
sbb
push
push
xor
fstps
or
mov
push
icebp
imul
aad
adc
mov
dec
jnp
xor
lock
mov
dec
imul
ja
notl
cmpsb
mov
mov
and
dec
cmp
dec
pop
lret
push
mov
adc
int3
or
popf
xor
stc
repnz
test
lahf
xor
outsl
jnp
inc
xor
fwait
sbb
adc
into
shrl
pop
and
mov
movsb
aas
out
jo
stos
fsub
xchg
inc
inc
rcl
cmpsb
jns
sub
push
lcall
sti
hlt
mov
add
add
sbb
adc
xor
leave
negl
cld
loope
jb
mov
sahf
xchg
mov
ss
scas
cmp
pop
cmp
stc
xchg
addr16
stos
insl
aad
out
lock
sahf
xor
repz
mov
sub
scas
inc
lahf
testl
push
int
push
xor
cmpsl
inc
fnstenv
sub
pop
shrb
cmp
pop
mov
adc
lcall
add
and
pop
insl
fsubrs
add
xchg
mov
cmp
jae
negb
into
std
lret
in
jp,pn
cld
in
cmpsb
jmp
in
cmp
sub
dec
ffreep
jl
pop
mov
das
and
cmp
int
xchg
sub
mov
and
push
jnp
addr16
pop
int
push
js
mov
sub
add
adcb
lds
test
std
aad
in
jnp
mov
adcl
testb
xor
call
repz
ret
std
fisubl
adc
int
adc
adc
mov
test
jne
cmc
mov
cli
mov
sbb
mov
jl
jno
shl
cmc
dec
sbb
cmc
push
ds
xor
stc
je
mov
push
mov
mov
ds
pop
mov
inc
mov
sub
js
or
xchg
movsl
cmp
iret
icebp
lret
dec
in
in
inc
lahf
add
mov
inc
mov
movsb
mov
cmp
fucom
scas
cs
repz
pop
adcb
xchg
inc
pop
lods
clc
mov
sub
clc
out
lcall
mov
push
pop
cmp
divps
popf
sbb
xchg
nop
adc
in
cmp
sarl
jle
or
jg
xor
mov
sub
and
dec
sub
sub
adc
ljmp
cmp
leave
lret
pop
jp
xchg
xchg
bound
mull
jl
lcall
adc
mov
dec
or
cld
in
mov
or
mov
enter
stos
je
or
fwait
add
mov
pop
push
push
jp
out
mov
cmp
dec
ss
loopne
cs
mov
push
mov
lret
push
in
jne
add
repz
arpl
add
lret
push
xor
popf
xchg
inc
out
xlat
cmp
push
sub
rolb
inc
sub
rcrb
mov
ljmp
fnstenv
jl
pop
movsl
repz
inc
rcrl
fnstcw
lahf
sbb
orl
pop
sub
fsubrl
cs
sub
subl
sub
lahf
loope
adc
jbe,pn
cmpsl
jo
fsts
dec
repnz
adc
mov
ss
inc
or
cmp
mov
inc
addb
mov
leave
sti
data16
imul
test
cmp
fcmovnb
andl
int
out
sub
addr16
lret
mov
incl
incb
xchg
ss
popa
fucomp
lahf
sub
in
les
stc
dec
and
cltd
or
mov
dec
packuswb
popf
je
pop
cwtl
push
mov
cmp
jg
add
sub
jns
stos
loope
test
xchg
push
icebp
lds
jg
dec
lahf
mov
in
into
stos
inc
dec
sbb
push
out
sahf
dec
dec
insb
lahf
shl
iret
fldenv
xor
int
in
scas
shlb
mov
jle
aad
repz
add
jecxz
cmp
inc
jns
loope
enter
adcl
cmpsl
sub
std
jnp
xor
out
sarl
push
inc
jg
popf
mov
in
pop
clc
lea
cs
test
xchg
lods
pop
ljmp
arpl
ljmp
mov
mov
pop
push
outsl
ret
ss
push
test
push
push
cmp
mov
fs
lahf
sub
or
xchg
mov
aas
mov
mov
lods
mov
or
or
xor
push
xlat
ror
ret
int
scas
fwait
bnd
pop
stos
fadd
sbbb
push
adc
movsl
ret
mov
cltd
cmc
add
mov
jmp
cli
jnp
and
movsb
loope
data16
adc
xor
pop
in
push
adc
mov
aaa
mov
pop
inc
ret
or
into
arpl
orb
inc
out
mov
ret
outsb
or
xor
or
and
addr16
ret
das
loope
popa
jbe
add
test
out
movl
sub
mov
imul
addr16
sbb
gs
ret
pushf
sub
je
lahf
cmp
data16
pop
and
cmp
out
pop
ljmp
fnsave
dec
pushl
mov
and
insb
stos
ds
xor
xchg
pop
xchg
adc
lods
jno
nop
aaa
std
mov
outsl
fcom
cmp
add
testl
pop
stc
and
jp
cmp
cmpsb
aas
in
decl
cmp
sbb
pop
int3
and
jmp
leave
add
xor
inc
movl
cmp
and
add
mov
outsl
mov
ljmp
js
mov
shlb
std
pop
call
push
mov
fdivrp
xor
divb
inc
add
mov
imul
jns
pop
cmp
cmc
fstpl
xchg
dec
pop
mov
shlb
jo
xor
les
push
mov
dec
movsl
sti
out
mov
or
push
rorb
gs
mov
or
jo
sbb
xchg
leave
dec
push
loopne
jle
scas
jns
fisubs
adc
sbb
jle
fcmovnb
cwtl
inc
mov
divl
cmp
add
ja
cmp
xchg
mov
ds
add
int3
mov
mov
bound
xlat
shl
aaa
daa
aad
xchg
outsb
push
mov
jno
xor
and
sub
push
sbb
ljmp
jae
ljmp
xchg
pop
and
cltd
pop
cmp
dec
pop
mov
push
int3
rorl
pop
pushf
ret
mov
fisubrl
test
jg
jmp
or
add
rorb
sub
fnstcw
jns
jl
sbb
jno
aad
and
or
and
jns
sbb
fsubrl
pop
out
pop
adc
sbb
add
lods
jecxz
or
rcrb
test
xchg
or
dec
pop
mov
and
cmpsb
mov
jae
sub
pop
dec
arpl
xor
imul
sub
sbb
js
fsubl
pop
test
push
jns
imul
popf
lods
daa
adc
mov
in
in
push
stos
mov
mov
jno
aas
adc
daa
xor
inc
scas
clc
shrl
out
adc
jmp
out
push
mov
xlat
and
fdivrl
and
mov
fimull
imul
dec
xchg
fadds
int3
jmp
and
loopne
xlat
jo
push
xchg
xchg
inc
fdivl
inc
pop
sbb
or
dec
xor
mov
outsl
loope
dec
pushf
imul
lcall
mov
je
pop
lret
adc
jmp
dec
jae
arpl
out
xchg
mov
xchg
adc
mov
int
mov
mov
xorb
loop
movups
fnstcw
repz
stc
pop
leave
pop
ja
xchg
adc
stos
rorl
out
pop
mov
jo
jnp
lods
js
ljmp
push
and
xor
push
cli
insl
outsb
adc
cld
xchg
jp
test
das
repz
or
repz
adc
jecxz
mov
mov
sub
inc
or
movsb
pop
push
sahf
call
inc
outsb
jl
fidivs
xchg
in
xchg
fwait
xchg
mov
sbb
dec
shll
adc
push
icebp
fs
jno
add
xchg
pop
das
xchg
inc
pop
add
mov
push
clc
call
sub
jnp
mov
mov
lahf
or
orb
lcall
mov
lds
pushl
fs
pop
jnp
cmp
mov
sbb
jne
sbb
cmpsl
mov
iret
sbb
xchg
addr16
insb
popa
dec
aam
mov
hlt
fldt
or
mov
lods
jne
aaa
push
jns
dec
call
jle
data16
shr
fstpl
sbb
jnp
cmp
in
ja
lret
and
mov
fadds
add
movsb
pop
popl
jo
js
mov
or
sub
loop
push
mov
mov
mov
fidivrl
xor
divl
mov
lahf
xchg
cmpsb
lret
sbb
pop
xchg
dec
ss
sub
mov
dec
pop
push
stos
gs
mov
insl
dec
je
jg
and
cmc
cmc
in
popl
xlat
sbb
daa
adcl
test
jp
jg
jg
loop
add
jns
jo
outsb
push
into
movsb
outsb
mov
cltd
shll
insl
jnp
fsubs
xor
lret
jns
adc
push
xor
popf
xlat
test
inc
cmc
inc
pop
lcall
add
xor
push
stc
imul
ja
aad
fs
div
adc
jmp
outsl
mov
xor
stos
inc
cmp
dec
lods
lret
cmp
sub
stc
jp
sbb
inc
mov
xchg
mov
cmpsb
or
xchg
addb
xor
dec
mov
arpl
icebp
mov
add
and
jae
pop
fistps
ss
out
enter
dec
or
add
mov
mov
out
mov
xchg
cmp
punpckldq
push
xor
sbb
out
data16
sbb
inc
imul
pop
add
stos
inc
pop
pop
pop
ljmp
mov
push
xchg
sub
cmpsb
add
cmp
adc
js,pn
sbb
sub
fs
fdivs
int3
inc
push
pop
movsb
cmp
aad
jl
pop
or
in
mov
cmp
je
pop
mul
lods
mov
sub
out
outsb
out
dec
mov
mov
cmp
movsl
cmpsl
add
mov
test
mov
sub
pop
sub
cmp
sbb
and
js
repnz
sub
xor
fwait
mov
sub
adc
xchg
decb
addr16
cmp
xor
jg
aam
sbb
cli
adc
mov
shlb
fsubrl
jno
arpl
jns
pop
fidivl
les
out
aad
sbb
or
out
cmp
jg
sub
test
nop
sub
sar
cmp
push
js
int
dec
add
insb
push
jle
sub
pop
push
push
xchg
fwait
push
jnp
sub
filds
mov
aas
insl
and
cmp
mov
pop
mov
inc
adc
loopne
mov
cmp
cltd
test
or
pop
lock
push
jg
icebp
popf
sub
ficoms
cmpsl
push
out
sub
sbb
mov
mov
out
mov
pusha
cs
ljmp
lock
clc
pop
adc
nop
ret
jl
ljmpw
daa
into
ror
mov
pusha
dec
dec
fdivrs
and
push
inc
notb
push
fcomip
fcoms
sub
popf
cmp
sbb
sbb
outsb
jl
and
test
mov
inc
push
cld
inc
push
mov
jl
fidivrs
mov
cltd
out
rclb
arpl
xchg
loope
cmp
dec
ret
faddl
cmpsb
add
mov
ret
add
xor
xchg
icebp
dec
subb
test
insl
jl
loop
iret
es
lods
push
icebp
pop
std
lock
daa
lea
xor
stc
mov
xchg
je
sub
cmp
cmpsl
jl
fs
pop
into
aaa
cmp
mov
add
and
and
and
mov
pop
add
hlt
cmpsl
test
addl
add
lahf
sub
aaa
pop
add
jbe
clc
outsl
lock
enter
int
stos
pop
andb
div
jb
pop
inc
aam
idivb
adc
mov
add
pusha
ret
mov
adcl
mov
pop
mov
sbb
clc
jns
addr16
test
addr16
sahf
ds
pop
jno
orb
stc
daa
fsubs
mov
stc
pop
pop
sub
add
add
and
ret
movsb
pop
iret
mov
addr16
loope
push
sub
fstpt
mov
in
imulb
out
mov
or
inc
lret
sbb
xchg
adc
shlb
inc
dec
dec
mov
sub
scas
sbb
lcall
das
jo
mov
arpl
fisttps
ret
ret
fcoml
cwtl
pop
fsubrl
mov
lods
xchg
arpl
outsb
out
cmpsb
aaa
addr16
and
imul
adc
les
dec
xor
clc
pop
sbb
sub
andl
rcr
in
inc
mov
das
das
push
ja
ljmp
lea
mov
repz
xchg
mov
icebp
jmp
or
lock
cwtl
mov
into
rcll
pop
jo
std
cmpsb
xchg
clc
popa
jo
xchg
rcrl
mov
sub
add
dec
add
jp
cld
xchg
jnp
loop
jo
pusha
jbe
sub
push
inc
lods
leave
jbe
and
inc
sahf
push
xor
clc
stos
jle
jnp
mov
incb
test
mov
enter
das
repz
xor
pop
inc
lahf
shlb
mov
mov
insl
sub
inc
mov
sbb
cmpsl
add
xor
icebp
getsec
push
sti
lea
lock
popa
ret
jle
fstenv
hlt
jno
pop
popf
jp
pop
outsl
mov
iret
jns
pop
jne
push
push
xchg
and
fcompl
sub
xchg
cmp
repnz
movsb
adc
fsubl
int
push
inc
xor
add
dec
jp
or
xor
shl
pop
push
arpl
arpl
jns
cmc
addr16
addr16
ret
shll
bound
mov
sub
push
mov
xor
xor
push
stos
mov
xchg
popa
pop
aas
cli
xchg
rcll
xchg
ss
and
mov
divl
pop
iret
test
adc
sub
addr16
push
outsb
inc
stos
nop
cmp
clc
std
cmp
pop
shll
xor
ja
add
pop
fpatan
mov
sub
dec
je
jmp
cltd
xchg
xchg
lds
ljmp
mov
dec
test
or
push
lret
xchg
add
sbb
pop
push
dec
pop
lcall
out
addr16
mov
xor
dec
push
imul
mov
jmp
push
js
push
adc
mov
jle
push
add
mov
and
sub
cmp
inc
xor
pop
cmc
lds
cmpsb
cmp
aam
xchg
repz
lds
jbe
xchg
addr16
mov
cmp
ja
lret
inc
inc
out
sti
dec
data16
aad
mov
push
mov
pusha
mov
sbb
xor
pusha
sub
sti
adcb
mov
dec
and
mov
jp
dec
pop
pop
xchg
xchg
mov
pop
scas
into
cmp
repz
xchg
je
insl
jge
ss
sub
loopne
and
lea
aad
in
or
lret
scas
fldl
stos
fwait
pop
addr16
lds
xchg
int3
and
sbb
or
push
or
lret
sti
push
xor
or
pop
test
loope
adc
mov
out
mov
mov
jp
pop
xor
or
jno
in
mov
adc
lahf
scas
sar
inc
pop
dec
pop
sbb
sbb
xlat
lcall
mov
jno
test
lret
std
outsb
es
push
or
lds
pusha
jg
ret
sub
mov
loopne
int3
es
jb
cmp
mov
sub
xchg
push
or
dec
push
call
out
das
xchg
mov
inc
inc
cwtl
lea
push
dec
lds
ss
xorb
dec
scas
mov
sbb
sahf
or
and
pop
enter
ljmp
insb
mov
fadds
sub
aas
sub
push
adc
push
dec
jp
outsl
and
loopne
or
std
sbb
pop
sub
stos
repz
fcompl
cmp
push
stos
mov
or
aad
inc
repnz
sub
pop
in
jo
stos
arpl
loopne
aas
sub
stos
jmp
ja
jle
xor
js
add
sub
js
push
xchg
js
pop
xchg
sbb
or
out
inc
dec
pop
xor
jp
popa
sahf
addr16
pop
scas
cmpsl
scas
jo
outsl
test
in
jne
test
xchg
jecxz
add
iret
jnp
mov
std
inc
cld
adc
push
out
sbb
test
js
push
jmp
pushf
inc
mov
xchg
push
outsl
mov
jb
cmp
sbb
scas
lret
push
jne
addr16
or
shlb
push
push
loope
mov
mov
cmp
movsl
ret
scas
adc
movb
or
addl
or
scas
or
push
add
js
stos
cmp
adc
and
loope
or
fdivp
shll
cmp
fcomps
mov
lcall
lock
cli
out
pop
pop
push
or
push
xchg
jnp
popf
sbb
push
sbb
pop
inc
stc
sahf
sbbl
jecxz
sbb
xor
mov
ret
adc
popf
dec
mov
jno
or
pop
and
ret
subl
aaa
add
out
pop
pushl
cmp
lahf
call
jle
xchg
sbb
mov
movsb
push
leave
and
fdivrl
loop
rcll
dec
lods
or
lods
in
and
mov
push
jb
sbb
mov
lcall
xchg
stc
jnp
stos
lods
shlb
cmp
idivb
scas
stos
sbb
jns
push
mov
bound
les
jecxz
cli
cld
push
mov
je
mov
mov
test
into
icebp
int
cmp
lret
push
mov
mov
jg
mov
sub
hlt
divl
jbe
inc
ret
jne
es
jg
pop
mov
sbb
jg
loope
hlt
inc
mov
push
adc
cmpsl
aad
mov
adc
sbb
mov
xor
sub
in
movsl
pop
or
imul
inc
sti
mov
mov
dec
rcll
push
mov
sti
stos
into
dec
in
cmp
xor
inc
jecxz
ja
xchg
add
icebp
sub
idivl
or
pop
jmp
sbb
or
loopne
mov
and
jl
add
outsb
xchg
sbb
out
mov
xchg
mov
jnp
loop
cltd
fisttpl
xchg
jns
out
push
mov
lret
and
aam
fmul
bswap
pop
xchg
popf
repz
jecxz
sarl
sar
push
lcall
xor
data16
cmp
out
repnz
cwtl
scas
push
shl
and
push
lea
cmpsb
jae
in
notl
pop
test
dec
in
pop
jne
jg
and
jp
pusha
arpl
cmpsb
decb
sbb
repz
mov
movsb
imul
jmp
imul
lock
xor
mov
data16
mov
arpl
jmp
pop
sub
outsl
andl
shrl
iret
fistpl
das
push
xchg
sub
xchg
pop
gs
pop
cmpsb
sbb
and
add
test
sub
xor
adc
add
insl
negl
lsl
and
mov
push
or
loop
icebp
aad
lahf
js
mov
dec
push
pop
stc
dec
lods
cs
arpl
cltd
or
mov
lds
mov
xchg
cmpsl
mov
xor
filds
mov
push
and
loop
aas
orb
test
add
mov
jg
sub
xor
adc
arpl
mov
gs
lds
or
mov
arpl
aaa
inc
sarb
push
jo
xchg
dec
in
xorl
sar
lcall
jg
iret
fsubrs
frstor
push
or
insl
and
sub
mul
push
adc
mov
jno
sbb
push
xor
xor
push
jecxz
sahf
mov
movsl
cwtl
popa
xchg
mov
aas
jb
std
mov
mov
cwtl
pop
int
cld
test
jge
and
cld
or
add
xchg
jmp
loop
and
subl
push
inc
je
enter
mov
mov
mov
cmp
mov
mov
cmp
adc
xchg
xor
mov
adc
and
ss
lea
mov
inc
repz
jne
cwtl
js
sub
dec
push
pop
movsb
pusha
push
rol
jg
sub
stos
cwtl
icebp
dec
adc
jl
imul
pusha
fs
nop
xor
mov
mov
xor
mov
mov
movsl
iret
scas
mov
mov
sbb
in
adc
inc
inc
js
lock
adc
into
int3
jmp
rcr
dec
ja
aaa
nop
inc
inc
pop
sti
rclb
sarl
fwait
pop
jae
and
jl
iret
pop
ret
sub
mov
mov
inc
jno
ljmp
jne
jecxz
loope
aad
and
and
movsl
dec
xchg
int
and
jg
dec
test
les
dec
scas
mov
adc
mov
and
dec
add
jecxz
dec
lea
adc
scas
xchg
add
incb
cmp
pop
popf
daa
sbb
leave
in
cmpb
adc
rcrb
mov
ljmp
imul
push
cmp
aam
mov
pop
js
mov
cmp
nop
pusha
xchg
mov
lea
add
nop
push
sub
push
sub
adc
scas
in
out
daa
rcrl
dec
xchg
cld
dec
fstpt
xchg
inc
xchg
jmp
in
inc
adc
fdivr
xchg
ljmp
xchg
sbb
pop
lods
push
addr16
jmp
outsl
lcall
push
std
inc
xchg
sbb
pop
andl
xchg
push
in
mov
push
cmpsl
xchg
mov
fildll
inc
inc
scas
scas
aad
shll
jno
scas
sar
test
aam
jne
dec
daa
aaa
fdivr
xor
xor
movsb
lock
out
test
push
pop
addr16
xor
jmp
filds
jmp
mov
jl
mov
xchg
cli
xchg
push
jbe
arpl
in
ror
fwait
js
and
ljmp
pop
ja
push
icebp
sbb
shr
mov
or
sbb
bound
pop
or
and
pusha
movb
xor
gs
ret
in
js
aas
jne
cmp
enter
aas
jl
add
mov
push
inc
mov
arpl
jl
clc
jl
je
jmp
add
jnp
cmp
out
inc
sbb
mov
pop
mov
mov
idiv
les
cmp
mov
xchg
in
mov
jl
in
loope
out
mov
insb
mov
inc
sub
add
add
push
sahf
stos
movsb
arpl
aam
cmp
cwtl
loope
das
mov
imul
loopne
xchg
aam
cmp
adc
adc
scas
movb
idivl
mov
mov
lahf
adc
pop
sub
out
pusha
jmp
or
fidivl
mov
sub
dec
add
popa
cs
or
xchg
push
cmp
int3
insb
ds
mov
and
ror
shll
cmp
and
push
icebp
dec
push
cmp
jb
loope
movsl
je
dec
sbbl
inc
test
push
jle,pt
xchg
sbb
sub
imul
cmp
movsl
xchg
fstpl
call
ret
xlat
insl
xchg
dec
dec
push
dec
pushf
aas
push
cmpsb
lahf
and
jbe
sbb
imul
loop
jns
rolb
mov
out
fmul
cld
mull
xchg
cmpsl
lea
jmp
lcall
nop
addr16
dec
sub
jl
clc
sbb
in
sub
stos
push
cwtl
pop
repz
stc
test
jl
sbb
jne
cmp
mov
inc
es
jmp
pop
push
or
cmp
pop
hlt
push
out
pop
movsl
or
in
rcl
or
mov
add
das
mov
push
inc
mov
aaa
pop
mov
lock
lahf
mov
or
and
out
push
adcl
push
ror
in
scas
sbb
push
xchg
push
dec
inc
sbb
lock
xchg
sar
jecxz
sbb
cld
shlb
shll
and
xchg
stos
cmp
es
ss
jg
jle
or
je
jo
add
lods
push
or
fadds
das
gs
imul
push
push
inc
lcall
jbe
or
cmpsl
xchg
adc
lret
bound
into
aaa
movsl
and
fnstsw
push
xor
iret
in
rclb
pop
test
daa
jbe
clc
and
mov
mov
inc
jns
scas
in
add
sti
adc
mov
cmp
lock
mov
xchg
pop
jae
mov
ja
iret
das
adc
fldcw
sub
pop
and
leave
adc
jns
sub
stos
push
test
sbb
mov
cmpsl
shll
adc
pop
ret
pop
add
andl
fbld
pop
and
push
test
lret
call
cltd
popf
ljmp
std
cmp
in
sub
in
push
aas
das
jmp
mov
pop
jp
sbb
les
pop
daa
pop
lcall
fdivrp
jo
in
pusha
sub
test
add
xor
lods
sbb
int
jbe
or
or
out
loopne
push
sbb
jle
imul
sub
and
incl
lret
pop
inc
leave
js
popa
add
inc
jmp
inc
mov
pop
fnstenv
ljmp
dec
data16
jp
lods
js
xor
mov
lahf
mov
pop
movsl
and
mov
aam
or
outsb
and
sbb
add
loopne
mov
outsl
mov
movsb
jnp
into
setg
sarb
cwtl
loope
jp
mov
lds
xor
mov
sub
pusha
js
inc
orb
cli
xchg
sub
or
repnz
aaa
out
push
sbb
pushf
xchg
sub
in
subl
xor
clc
scas
repz
mov
cli
mov
xor
fldpi
adc
jl
or
and
jecxz
mov
jae
fcoml
rol
push
dec
enter
xor
lret
push
xor
popf
sub
jb
inc
jno
cli
mov
cmp
movsl
mov
adc
jg
sub
mov
sbbb
shlb
mov
sbb
jnp
aad
cmp
fdiv
mov
mov
jno
call
vpaddq
cli
adc
mov
xchg
jl
ret
jmp
ljmp
push
aam
jmp
xchg
add
xor
xchg
push
add
xchg
inc
cli
cmp
push
and
inc
testl
jp
daa
or
pop
in
jg
ret
aaa
or
mov
enter
jae
lods
push
popa
or
pop
cmc
imull
dec
or
add
jecxz
sti
jecxz
lods
into
ds
push
data16
lahf
mov
dec
mov
push
and
dec
sti
or
push
mov
mov
inc
or
cmp
in
test
shll
sub
insl
cmp
mov
sahf
push
mov
cmpsl
bound
inc
adc
shlb
sarl
mov
jb
push
fildll
lret
in
add
mov
cwtl
test
repnz
jle
or
test
mov
and
stos
iret
cmpsb
lret
cmp
movsb
mov
fwait
jb
and
stc
stos
sti
scas
into
inc
pop
stc
cli
outsl
mov
fsubrl
add
mov
in
jae
shll
push
sbb
sub
adc
cmp
out
mov
or
cmc
jae
sbb
rorb
cmp
gs
pusha
push
hlt
add
jns
pushf
jno
lcall
insb
jbe
call
push
mov
addl
pop
jbe
jecxz
mov
jo
std
add
add
xchg
adc
lret
and
and
cld
ss
aaa
das
add
outsl
inc
push
in
out
and
mov
jnp
sahf
adc
mov
cmp
call
stc
jo
mov
in
fimull
testb
js
adc
or
add
bnd
xchg
xchg
and
ficompl
push
and
or
jo
cmc
jge
push
int
add
sbb
xor
jp
fnstenv
adc
movsl
add
push
iret
int
cmpb
ret
icebp
xchg
inc
lea
popa
std
jo
mov
adc
jg
xchg
push
into
fstps
sub
xchg
adc
dec
adc
mov
xlat
rol
jno
xchg
add
inc
jo
dec
stos
cmpsl
and
cmpsl
ret
cmp
cmp
xor
imul
clc
add
call
scas
xchg
xor
vpor
loope
dec
xchg
pusha
xchg
mov
pop
push
jg
adc
mov
rcr
sbb
bound
out
mov
sbb
mov
and
and
cwtl
cld
aas
imulb
cs
daa
add
or
xchg
or
inc
ss
xchg
mov
xor
movsb
negb
pop
jb
lret
dec
push
repnz
and
fisttpll
jg
stc
mov
and
aad
cmp
dec
add
lds
arpl
repz
es
cwtl
push
mov
imul
push
jg
ja
jo
sub
lds
jo
dec
cmp
loopne
fs
int3
xchg
sarb
testl
faddp
dec
dec
cmp
testl
in
push
xor
loop
push
cltd
mov
dec
shll
jb
inc
mov
sub
xor
jno
push
sbb
pop
and
xor
push
arpl
movsb
in
pop
imul
nop
outsl
add
bound
add
push
icebp
jb
in
push
pcmpgtd
leave
nop
lret
sub
stos
sahf
inc
dec
fildl
jo
ror
lods
mov
mov
mov
push
jmp
mov
rcl
std
clc
sti
addr16
mov
icebp
cmpsl
push
jecxz
cmp
and
nop
xchg
sbb
in
cmp
mov
xchg
mov
xor
dec
xchg
pop
out
negl
nop
lahf
lret
bound
sub
fdivrs
int3
cld
test
data16
imul
dec
xor
xor
ja
test
int
xlat
pushf
out
lods
iret
adc
mov
push
inc
xchg
sahf
mov
and
dec
scas
out
fcoms
pop
pop
shll
in
jns
aad
or
sbb
mov
add
aam
rcr
push
jae
cltd
fadd
push
int3
loope
fs
add
pop
imul
dec
ja
outsl
stos
ret
push
je
adc
test
sub
or
stos
ljmp
mov
sub
xchg
fimuls
dec
lods
adc
dec
jb
push
cmpsl
shl
dec
or
lret
xlat
sbb
jne
jmp
push
lret
xor
and
sbb
icebp
sbb
or
dec
mov
dec
jns
cmp
inc
pop
inc
shll
les
outsb
add
cltd
lds
inc
in
outsl
cmpsb
push
lods
lcall
fwait
repnz
jp
xchg
mov
icebp
fistl
mov
dec
repz
sti
aas
dec
roll
sub
xchg
rep
addl
repz
jb
cmp
cld
xchg
or
xchg
jge
or
out
sub
xchg
push
push
xor
jo
push
pop
sub
cmpsb
adcl
ja
popf
mov
cmc
sbb
jns
mov
jmp
aam
pushf
mov
cld
push
fbstp
pop
jne
mov
sub
xchg
rcr
bound
call
xor
insl
es
xchg
mov
pop
outsb
lret
cs
add
cmc
xchg
stos
mov
fcoms
cld
xchg
roll
jnp
xlat
jl
fmull
cli
sbb
les
mov
bound
dec
pop
or
push
sbb
cmp
pop
jae
jns
pop
sub
test
rcrl
repz
push
call
out
test
mov
insl
inc
sti
dec
vpsadbw
aad
lea
sbb
or
fistl
gs
inc
adc
aam
push
or
inc
sub
movsb
xchg
fdivs
test
cltd
in
sti
dec
pop
icebp
clc
xor
add
or
add
jg
sub
movl
dec
jmp
push
arpl
pop
jbe
xorb
jmp
mov
ja
cmpsl
ljmp
test
dec
add
loope
xchg
pop
sub
sub
adc
fistps
and
push
call
sub
call
push
popf
in
push
sarb
cs
push
hlt
insb
push
sub
jb
imul
mov
xor
and
je
and
adc
rolb
arpl
out
or
cs
negb
dec
enter
in
mov
mov
sub
fildl
sbb
mov
gs
cmp
mov
in
imul
jne
fsubl
inc
dec
into
push
inc
lret
addr16
mov
jb
in
xor
stc
mov
leave
jl
movsb
stc
pusha
cmp
add
imul
scas
sub
shrl
psubsw
pop
test
test
pop
adc
jne
lock
mov
push
out
sub
mov
mov
mov
pop
xor
sbb
js
jno
dec
cltd
gs
ja
add
jl
loopne
in
add
mov
adc
inc
movsl
mov
mov
add
sub
jmp
sbb
dec
fildll
aaa
nop
mov
mov
xor
int
jecxz
inc
cmp
adc
mov
fwait
inc
jnp
push
ficoms
cmp
sbb
cltd
jbe
jge
movsl
ret
std
and
movsl
jns
loop
xor
xchg
xorl
fcmovnbe
orb
jmp
xor
push
ss
fs
mov
int3
dec
dec
mov
cld
divl
stos
mov
shll
xor
cmc
sbb
lods
adc
push
xchg
out
inc
ja
dec
pop
sub
xchg
pop
jle
int3
or
cmp
mov
lods
mov
inc
add
mov
aaa
jmp
or
pop
or
repz
pop
jo
and
hlt
pop
push
movhps
in
sub
lds
jg
aam
decb
inc
mov
mov
mov
loopne
cmp
push
mov
out
sub
hlt
mov
in
iret
in
loopne
imul
cmpsb
or
ret
jp
push
outsb
movsl
data16
inc
pop
xchg
inc
inc
and
sbb
adc
push
daa
push
pushf
lret
pop
ss
xchg
mov
mov
dec
lret
dec
daa
push
int3
push
or
dec
or
jns
xchg
sub
jb
cwtl
inc
push
xor
xchg
push
fimuls
and
lcall
icebp
mov
popa
xchg
lods
imul
nop
pop
rolb
or
add
adc
ja
cs
hlt
dec
stc
push
lret
int3
xor
inc
xchg
loopne
jno
mov
stc
repnz
jle
jecxz
gs
push
jle
out
loope
xchg
stos
cmp
push
out
std
push
xchg
cmpl
lret
mov
popa
in
adc
test
mov
xor
mov
aas
rorb
sti
or
mov
into
movsl
out
jo
mov
or
or
fwait
push
push
adc
xchg
add
jbe,pt
lahf
out
out
pop
mov
xor
dec
loopne
rcrl
das
scas
jmp
pop
ss
cmp
ficomps
pushf
xchg
jae
pop
push
std
jnp
push
test
call
mov
xlat
ja
paddd
aad
icebp
rcr
push
push
enter
hlt
fsubrp
sub
push
xchg
inc
xchg
mov
pop
adc
pop
cmp
sbb
sbb
cli
out
xchg
roll
dec
xor
cmp
fildll
sub
cmp
jl
orl
out
and
test
adc
lods
daa
push
xor
je
mov
das
pop
dec
mov
and
dec
sbb
jl
ret
inc
nop
jb
ljmp
xchg
dec
dec
adc
or
jae
shr
into
mov
fsub
sti
jb
add
imul
loopne
leave
sub
push
mov
hlt
es
pusha
out
lock
fwait
je
enter
mov
lret
cwtl
mov
lret
add
mov
fcmovnu
call
adc
stc
popf
mov
lret
js
sbb
mov
cld
stc
lahf
fadds
jns
fmull
jp
std
imul
jg
in
sbb
jl
cmp
ret
mov
ja
sbb
loopne
mov
out
stos
or
xlat
scas
mov
mov
mull
cltd
mov
sub
sbb
jmp
subb
shl
sub
jle
xchg
lahf
pop
xchg
push
mov
decb
add
pop
jp
mov
gs
mov
in
inc
sahf
out
add
mov
mov
dec
dec
lea
mov
int
addr16
pushl
xor
push
sarl
push
inc
pop
lods
dec
inc
xchg
out
jbe
push
xchg
mov
ret
mov
subl
shrb
call
shlb
stos
inc
and
mov
and
shld
xchg
xchg
pop
jnp
mov
nop
pop
mov
xor
out
das
push
sub
popw
ja
xchg
jg
ret
inc
jmp
lret
mov
add
ret
lock
icebp
pop
jg
fwait
xchg
xchg
pop
std
mov
push
shlb
mov
mov
add
mov
xlat
ja
cmp
sub
or
loopne
mov
sbb
xchg
aam
push
sub
sbb
and
or
test
aam
and
add
andl
mov
fistpll
fmul
pop
add
cld
loop
jmp
ret
or
popa
nop
xchg
mov
pop
mov
jbe
repz
sahf
sti
ss
imul
or
mov
mov
shll
hlt
ficoms
nop
sbb
push
lahf
dec
es
push
pop
cli
mov
inc
aaa
ret
addr16
ret
jnp
jl
xor
lea
stos
jl
jp
idivb
cmp
push
into
testl
cmp
cmp
and
mov
ljmp
ret
add
movsl
cmp
sti
fdivr
stos
movsl
xor
or
mov
pop
mov
push
fstl
cmc
jl
scas
loop
cld
mov
test
mov
jecxz
popf
inc
xchg
mov
loop
cltd
mov
jp
dec
add
aad
and
pop
cld
dec
inc
idiv
mov
repnz
push
jns
mov
or
sbbl
xchg
pop
cmp
clc
push
push
in
mov
inc
mov
push
nop
aad
pop
scas
aas
in
scas
call
mov
test
nop
and
rcll
repnz
test
push
gs
jns
test
ss
bound
scas
push
scas
inc
cmpsl
subl
xor
sbb
inc
pop
pop
lahf
movsb
push
jg
adc
push
add
mov
mov
jl
movsb
fdiv
mov
sub
jnp,pn
push
movsb
push
xor
push
sbb
dec
mov
jns
mov
adc
int
and
or
jb
mov
sub
add
xor
out
mov
sbb
mov
daa
mov
mov
xchg
mov
aad
cs
and
test
jne
pop
mov
mov
scas
jae
xor
cmp
inc
iret
jno
test
ds
bound
lock
psllw
popaw
hlt
pop
test
mov
jne
rorb
in
and
ljmp
lcall
xchg
lds
mov
daa
movsb
mov
push
xchg
sti
dec
cmc
dec
divb
cmpsl
sub
mov
cmp
punpckhbw
shr
push
dec
push
sbb
out
enter
push
mov
jg
out
ret
shld
pop
sub
loope
call
loop
cmp
out
popf
loop
or
or
sub
xor
es
or
ficoml
pop
pop
cltd
inc
or
lods
in
adc
pop
mov
andl
test
pop
in
or
xchg
js
jp
das
in
lods
dec
mov
or
insl
sbb
pop
push
into
xchg
sub
xor
push
mov
jp
mov
push
cltd
repnz
mov
mov
iret
popa
sti
mov
sub
ljmp
push
fnsave
lahf
inc
push
outsl
loopne
adc
mov
shr
push
dec
and
out
mov
sbb
es
push
insb
shlb
cltd
adc
int
pusha
loope
mov
test
shl
pop
push
mov
in
xchg
out
push
out
jbe
les
js
ret
les
andb
shrl
sbb
sti
fidivrl
or
leave
inc
test
push
jmp
dec
xchg
push
inc
cmp
sbb
push
xor
jne
out
jl
arpl
add
aaa
ds
dec
mov
fwait
xchg
or
movsl
mov
jmp
jae
test
orl
ja
icebp
push
mov
rcl
or
mov
adc
fcompl
lcall
push
mov
inc
mov
cmpsl
stc
mov
mov
dec
jbe
cmpsb
es
rorb
loopne
fcoml
out
mov
mul
mov
push
push
pop
push
or
jecxz
jecxz
pop
jecxz
insb
xor
push
lock
sub
ds
in
push
fsubl
adc
out
xchg
jmp
mov
dec
stc
shlb
inc
rolb
arpl
mov
inc
std
aas
mov
hlt
adc
in
fbstp
add
int3
inc
add
loope
lods
pop
out
jge
repz
sub
lds
inc
pop
fdiv
fisttpll
sub
mov
mov
mov
mov
and
outsl
and
rol
sbb
outsb
inc
daa
push
test
inc
sarb
sbb
add
dec
ss
sub
mov
push
mov
fcomps
fsubrl
or
mov
cmpsl
arpl
cwtl
cltd
xchg
dec
jne
test
mov
xchg
call
inc
xchg
fildll
call
xchg
ds
dec
imul
inc
in
andb
mov
dec
test
sti
pop
add
stc
cmc
fdivrs
adc
or
lret
mov
jo
hlt
xchg
bound
jbe
sti
ficomps
or
decl
repz
pushf
push
push
scas
out
inc
loopne
mov
cs
mov
repz
dec
lret
sbb
adc
scas
push
inc
add
daa
mov
mov
pop
adc
stos
pop
jbe
dec
add
fidivrl
jne
pop
pop
add
sbb
pop
or
mov
movsb
dec
jg
in
inc
push
add
mov
lret
push
xlat
out
push
jmp
xchg
inc
xchg
sti
mov
lea
mov
int3
iret
jb
ret
shrb
cmp
in
sysenter
ret
js
addl
ret
ds
fadds
scas
sub
das
lds
pusha
push
div
fstpt
ret
lock
fldt
cmp
data16
lea
test
int
inc
xor
cmp
es
xchg
mov
fidivs
inc
jbe
rcrb
cld
mov
dec
fmull
and
inc
cmp
and
loop
aam
jp
mov
dec
pop
sub
pop
pop
cmpsb
and
stos
clc
dec
cmp
mov
dec
add
jle
cwtl
cltd
movsl
pop
cltd
sbb
and
cmp
pop
orl
inc
adc
fidivrl
mov
pop
mov
outsb
lock
mov
dec
lcall
mov
mov
push
test
cltd
adc
add
inc
pop
into
lret
sbb
lds
fsub
or
dec
and
fisttpl
mov
sbb
mov
cmc
pop
popf
mov
xchg
adc
pop
rorl
push
pop
sahf
xchg
mov
movsl
ljmp
jecxz
mov
sbb
loope
les
adc
popf
mov
jns
lds
lret
add
mov
jne
rorb
daa
add
inc
rclw
xor
cmp
outsl
mov
popa
insl
int3
fdivl
mov
dec
test
push
in
push
pop
sub
imull
pusha
or
or
add
iret
rcrb
das
hlt
xor
jbe
das
lahf
js
jo
sub
and
or
mov
inc
fbstp
push
mov
push
xchg
out
pop
push
xor
sub
insb
mov
mov
mov
into
xchg
or
fwait
test
xchg
jns
ficompl
xchg
test
push
add
mov
pop
addb
mov
sbb
lods
push
jae
xor
jno
mov
fstl
sbb
gs
test
mov
mov
cs
pop
sbb
mov
inc
lret
stos
lock
stc
adc
pop
daa
icebp
mov
in
dec
lret
mulb
xchg
push
mov
data16
pop
add
add
test
cmp
sbb
sub
push
aaa
jo
stc
lret
mov
test
aam
or
or
out
in
mov
or
mov
test
cmp
jmp
add
out
pop
xlat
inc
icebp
add
lret
adc
mov
in
cli
cmp
or
iret
orb
lock
cmpsl
inc
adc
sub
pop
outsb
jae
mov
jmp
xchg
stos
push
idivl
movsl
push
decb
leave
dec
mov
gs
fisubrs
xchg
pushf
dec
dec
add
or
and
or
fisubrl
pop
jb
js
dec
imul
push
add
sbb
ss
mov
dec
mov
leave
jl
cli
mov
push
into
and
jecxz
jae
ss
jp
arpl
jl
in
cltd
cmp
pop
cmp
test
and
fcomps
mov
loopne
sahf
nop
shr
sar
xchg
jb
jmp
fldt
call
xor
rolb
lahf
and
inc
lahf
mov
sahf
mull
xchg
fisttpll
out
lret
cmpsb
jge
dec
push
inc
sbb
adc
jne
call
push
mov
call
xchg
mov
mov
jmp
popf
push
sti
or
jl
inc
mov
les
outsl
in
rcrb
pop
inc
push
adc
lods
in
add
push
arpl
mov
stos
into
or
mov
pusha
in
js
sbb
mov
and
and
lock
arpl
cmp
insb
and
xchg
mov
mov
lock
inc
add
sahf
or
sbb
jno
mov
adcb
pop
andb
cs
adc
std
cmp
sarb
loopne
loope
call
and
pop
push
fdivp
or
cli
push
xchg
adc
cmp
cmpsb
jecxz
leave
arpl
cltd
add
repz
push
push
jns
aaa
je
add
sbb
xor
cmc
test
push
inc
lock
xchg
mov
dec
add
int3
lahf
sbb
jl
je
adc
mov
mov
push
repnz
mov
popa
sub
iret
jle
mov
rolb
cwtl
jae
in
jp
fdivrs
add
dec
sbb
mov
divl
decl
dec
cmp
das
repz
dec
rcrb
popa
sbb
sub
cs
pop
stos
outsl
sarl
mov
das
pusha
or
scas
imul
jns
stos
scas
cmp
sub
daa
loopne
adc
daa
aam
xor
ror
and
add
jg
push
push
fsubs
pop
mov
sti
mov
pushf
mov
gs
jge
mov
bound
test
ds
ja
push
adc
fcompl
cltd
call
cli
icebp
mov
jecxz
fidivs
subl
mov
dec
sub
into
mov
ret
inc
and
outsb
jle
in
cld
subb
fwait
cli
outsl
andl
mov
movsb
ret
mov
xor
pusha
lea
xchg
adc
push
daa
imul
mov
xchg
mov
mov
out
ret
mov
push
and
cmp
xlat
ds
sbb
dec
mov
lds
xorl
ret
repnz
or
std
bound
fidivl
cld
int
leave
adc
test
sbb
mov
xor
test
mov
or
jne
push
mov
call
lea
lods
jnp
push
mov
mov
mov
arpl
jno
add
in
andb
or
out
mov
sub
or
fcoml
fwait
sti
int
push
sbb
pop
mov
jge
mov
in
pushf
lods
pop
mov
lds
int3
jg
test
imul
cmpl
sbb
mov
aas
fcomps
or
adc
pop
push
popf
dec
xor
add
cmpsl
mov
push
repz
and
fldenv
arpl
adc
lcall
dec
mov
fdivs
jp
jl
iret
cmp
js
adcb
sub
xchg
test
jne
pusha
loopne
adc
pop
cmp
cltd
mov
stos
testb
out
or
sahf
sub
lods
mov
shl
rolb
dec
lods
lock
push
sub
lods
or
mov
lret
into
pop
in
cmp
bnd
hlt
hlt
call
pop
fdivrs
sahf
pusha
shl
pop
test
cs
orl
aad
dec
push
jp
or
shll
sbb
imull
mov
push
jp
or
loopne
pop
insb
inc
insl
popa
mov
inc
mov
jmp
jle
mov
ss
mov
inc
imul
pop
dec
or
mov
or
xor
decl
jo
mov
add
xor
out
shll
sub
aaa
aaa
rcrl
add
divb
sub
mov
jecxz
xor
xor
xor
lock
sti
cwtl
fs
int3
in
sbb
pop
fdivl
lock
add
jno
out
cwtl
testb
ds
dec
mov
sarb
enter
jg
xchg
cmp
add
fldenv
push
mov
xor
xchg
xchg
inc
aaa
loopne
jbe
inc
int
ss
test
mov
cltd
in
sbb
and
nop
xchg
out
call
jbe
rep
dec
sub
dec
jl
incb
lock
loop
inc
leave
insb
bound
aaa
adc
xchg
out
mov
dec
int
mov
mov
cmpsl
mov
add
mov
in
iret
insb
orl
and
xor
ficoml
add
mov
loopw
sub
addr16
cli
mov
stos
or
cmp
lods
insl
mov
push
xor
pusha
xchg
push
xor
roll
scas
sub
adc
pop
pop
xor
mov
lds
ss
jecxz
lcall
mov
int
add
push
cmpsb
cmpsl
inc
jle
and
pop
dec
stos
sub
push
imul
dec
test
fisubs
lock
test
push
notl
jno
mov
add
mov
faddl
out
scas
sbb
pop
fs
into
outsl
pushf
dec
lret
fsubrl
and
addr16
mov
sub
ficoms
cwtl
xor
inc
lea
fmulp
sahf
jae
insb
jmp
pop
pop
adc
jae
fs
popf
cli
or
inc
cmp
or
sub
dec
or
mov
and
int3
jge
ja
fsubr
lcall
sub
in
push
pop
mov
xchg
arpl
xchg
cmp
aam
jb
and
mov
or
roll
je
scas
inc
xor
inc
mov
mov
inc
adc
insl
out
test
into
dec
cmpsb
jg
popf
add
jg
mov
dec
dec
daa
mov
lds
lods
push
jbe
dec
mov
dec
out
mov
iret
sbb
mov
les
and
lret
xor
or
arpl
dec
imul
jge
push
stc
lahf
lods
adc
in
repz
push
jmp
pop
call
sar
in
and
jae
xor
jae
dec
je
into
mov
xchg
add
enter
loope
jl
testb
scas
mov
stc
rorb
lods
cmp
shrl
ds
les
push
shll
mov
xchg
rorb
cs
xchg
arpl
pop
mov
push
lods
cmp
loop
cmp
insb
cmp
mov
dec
rorb
inc
or
xchg
cmp
in
gs
adc
xor
pop
in
fbld
fwait
outsb
mov
jecxz
mov
push
ret
es
adc
adc
add
sbb
lods
mov
mov
hlt
and
add
aam
or
sub
cmp
imul
pusha
adc
shrl
push
sub
xchg
mov
rorl
mov
pop
cltd
rorb
sti
sarl
hlt
jns
shlb
cmpsl
add
inc
xor
stos
inc
movsb
push
pop
std
fprem1
mov
pop
jecxz,pn
mov
sarl
in
pusha
add
sbb
je
inc
ljmp
or
and
sbb
fdivs
lds
inc
sub
clc
push
xlat
sbb
and
sub
jne
test
popa
mov
lahf
adc
out
pop
cmp
cwtl
mov
mov
mov
xor
jbe
adc
pop
or
push
repnz
pop
ss
adc
addr16
out
test
gs
imul
cmp
cmp
add
mov
loop
or
cmp
inc
sub
jmp
or
and
push
push
ret
les
fisubl
push
arpl
fisttps
mov
xchg
stc
out
xchg
mov
push
inc
jnp
int3
psllq
dec
loopne
sub
or
push
fs
pop
imul
inc
sub
test
jb
cld
xor
inc
push
mov
cmp
pop
js
jae
mov
test
cmp
inc
fimuls
nop
movb
and
adc
das
dec
dec
out
aas
dec
pop
mov
pop
jbe
sub
add
dec
pop
pop
xchg
xor
int3
cs
popa
aaa
dec
xchg
and
sub
gs
mull
imul
popa
xor
data16
add
sti
mov
lret
push
xchg
adc
out
mov
movsb
imul
pop
push
aam
enter
jae
xchg
cmp
insl
adc
int3
loop
dec
pop
pop
pushf
inc
mov
or
lea
cmp
jecxz
shll
cwtl
mov
mov
lahf
jno
mov
sub
leave
push
add
lods
lods
or
nop
outsb
aam
lods
mov
dec
dec
pop
push
or
hlt
inc
ficoms
sub
jnp
aad
out
pop
dec
in
negl
inc
inc
mov
shrl
cld
adc
mov
fbstp
sub
inc
sbb
xchg
xchg
sbb
ror
insl
sbb
loope
lods
pop
enter
mov
dec
sti
push
cmp
repnz
push
xor
xchg
inc
loopne
nop
cli
enter
pop
push
sti
cs
push
popf
les
mov
push
lret
xchg
test
push
mov
repz
mov
out
enter
mov
out
mov
mov
repnz
lock
movsb
adc
lods
jbe
aam
and
add
push
adc
mov
fmull
fidivs
test
mov
jnp
outsl
xor
jp
lea
cmpl
push
mov
repz
sbb
mov
sub
and
jecxz
push
out
pop
in
adc
aas
outsb
sub
decb
lahf
popa
outsb
ss
test
enter
xlat
mov
in
sar
inc
add
push
cmp
cmp
jle
sti
loopne
sub
xor
or
fwait
cwtl
jg
das
push
xor
sbb
inc
loopne
jg
mov
popf
or
in
adc
out
mov
loope
bound
ljmp
push
fsubr
xlat
pop
sub
jne
mov
nop
movsl
add
stos
adc
push
gs
cmpsb
stos
ret
add
or
jbe
imul
push
lcall
lahf
repz
cmc
mov
cld
sub
pop
adc
out
pop
mov
add
xor
mov
enter
mov
cmp
push
jnp
xor
pop
ret
fldt
jle
int3
inc
call
adc
cs
loop
int
movsb
mov
int3
mov
add
lahf
pop
ljmp
dec
sub
sbb
movsb
repz
xor
out
dec
or
int
lods
cmp
jge
xchg
jg
sbb
mov
js
mov
subb
or
inc
int
in
addr16
cmp
and
inc
popf
xchg
sbb
fucom
repz
enter
test
test
xchg
int3
adc
or
xor
negl
repz
inc
test
or
lret
sub
in
xchg
cmpsb
inc
mov
sub
jle
sub
scas
jmp
adc
inc
sahf
xchg
sbb
cmp
imul
mov
inc
out
ljmp
add
mov
out
pop
loop
push
cltd
ret
pop
pushf
stos
push
lock
fnstsw
nop
pop
addl
jno
pop
fidivs
cmp
inc
mov
push
jno
add
nop
outsb
push
sub
mov
test
cmc
and
sahf
ljmp
fcoml
sbb
xchg
in
or
inc
pop
mov
pusha
in
adc
mov
ds
sbb
mov
mov
cmp
int
adc
aad
xchg
out
cmp
cli
adc
jmp
xlat
loopne
mov
xchg
ljmp
leave
mov
fcompl
push
outsb
cli
cmpsl
and
jmp
pop
pop
jnp
dec
xchg
stos
into
push
cli
popa
dec
jo
push
xor
mov
cld
xchg
ja
fstpl
fnstcw
pop
mov
rolb
adc
addr16
dec
pop
mov
ds
dec
js
jnp
into
int3
xlat
cli
add
mov
inc
int3
xchg
sbb
rorl
jbe
xor
test
cmp
dec
mov
lcall
xor
and
leave
xchg
imul
mov
faddl
sub
lods
push
lods
fidivl
sbb
je
sub
mov
iret
push
mov
dec
push
mov
mov
repnz
xor
cmp
push
pop
pop
in
jne
jno
repz
sub
iret
pop
mov
adc
sbb
inc
clc
or
pop
push
pop
cwtl
add
je
imul
data16
sub
jno
cmp
pop
pop
insl
loopne
xchg
fldcw
xchg
inc
adc
movsb
mov
sub
xchg
lret
or
jl
mov
sbb
and
in
push
mov
jno
aaa
mov
test
adc
repnz
int3
repz
push
xor
push
jle
out
sbb
adc
xchg
mov
mov
mov
sub
add
ret
pop
outsl
jb
jnp
lods
je
cld
pop
inc
cltd
pushf
mov
mov
pop
stos
bswap
mov
cld
mov
das
adc
nop
pop
and
jle
push
movsb
mov
pop
or
stc
adc
cmp
or
mov
daa
fwait
jl
idivb
mov
inc
and
xchg
dec
test
adc
or
cmp
push
rorl
and
inc
js
lds
sti
pusha
test
adc
sub
daa
adc
imul
fsubrs
add
dec
mov
in
call
add
int
rclb
bound
pop
jmp
mov
xor
ret
aaa
enter
dec
mov
stos
lock
xorb
xor
lahf
jne
loopne
jbe
mov
cmp
roll
push
cltd
dec
add
testl
lret
enter
int
mov
rorb
and
mov
jl
jle
mov
mov
jle
in
je
enter
nop
test
out
sbb
push
jmp
cmc
in
dec
lock
mov
mov
lret
mov
int3
jg
jle
dec
leave
mov
cmp
cmp
mov
aam
out
das
jo
sti
pop
int
pop
pop
subb
xor
jl
mov
test
inc
sub
jnp
mov
push
imul
pop
outsb
iret
xchg
cld
dec
inc
test
adc
sbb
xchg
dec
sahf
popa
mov
pop
hlt
lock
jecxz
mov
lcall
imull
adc
gs
xor
add
add
pop
or
inc
push
sahf
mov
adc
xor
jae
fsubrs
mov
std
cwtl
add
xchg
and
repz
cmp
leave
mov
push
insl
cli
xor
into
inc
imul
add
jecxz
cld
xlat
adc
ds
pop
ret
xor
insl
int
movsl
out
jl
mov
dec
adc
or
sahf
xchg
into
pop
outsb
in
xor
iret
push
ljmp
punpckhdq
jo
je
in
add
ja
mov
int3
mov
out
icebp
inc
mov
push
jns
fdivrl
jge
cmp
std
push
add
fsubrs
cwtl
mov
je
out
aam
dec
insb
fstps
pop
jg
or
int3
jp
inc
clc
add
leave
pushf
mov
movsl
out
fsts
dec
mov
cwtl
jge
mov
cmp
fdivr
out
add
test
xor
push
imul
pop
sub
shrl
add
mov
cmp
or
sbb
push
cs
stc
pushl
push
lahf
sbb
inc
stc
mov
cmc
add
arpl
cmp
sub
inc
in
mov
mov
xchg
mov
popf
movsl
xor
sarb
cli
mov
scas
scas
mov
mov
test
daa
sarb
mov
inc
ret
es
test
testb
cmpl
lods
cs
stos
jnp
fidivrl
xor
jmp
sbb
aas
push
outsl
fnstenv
js
test
negl
mov
dec
icebp
mov
add
push
and
roll
pop
push
out
adcl
insb
sub
outsb
mov
mov
fimull
mov
dec
testb
arpl
dec
xchg
cltd
cmp
mov
sar
mov
rcll
repz
icebp
mov
adc
or
jb
outsl
jno
outsl
ret
or
cmp
adc
orl
adcb
mov
fldt
stc
std
lahf
dec
in
xor
sub
and
inc
cmc
sbb
outsb
push
push
out
movsb
adc
shll
shll
testb
cld
popa
push
pop
fdivrs
xor
ret
dec
jmp
popf
roll
xchg
outsb
or
fisttpll
adcl
jecxz
pop
rcrl
or
dec
adc
in
rclb
adcb
andb
mov
inc
add
pop
outsl
cmp
jmp
pop
lahf
arpl
lock
jo
fsts
dec
popf
pop
xchg
fidivrs
mov
mov
xchg
and
ss
fisubs
xchg
cmpsb
dec
jecxz
leave
pop
inc
xchg
cltd
stc
jge
mulb
pop
dec
in
cltd
les
add
lds
pop
cmp
test
jge
aas
xor
or
out
frstor
ja
inc
nop
mov
jecxz
lea
stc
xor
out
sti
out
scas
mov
int
scas
scas
jl
les
mov
mov
or
aaa
aaa
mov
hlt
dec
and
mov
xor
xor
lcall
imull
inc
repz
xlat
pop
cli
jg
or
lcall
sub
mov
push
outsb
xor
pop
das
dec
sbb
sub
fsubrs
cmp
mov
ds
popf
add
jge
and
jg
push
and
lret
sbb
mov
xchg
roll
out
scas
dec
mov
lcall
les
or
ljmp
and
cltd
ret
movsl
pop
lods
faddl
es
pop
mov
les
mov
pop
icebp
jecxz
vpshuflw
cmp
dec
lcall
hlt
sub
ret
popf
jb
call
mov
xchg
xlat
popf
push
scas
xchg
mov
add
xchg
cmp
out
leave
mov
mov
push
lods
inc
dec
je
push
and
shll
push
xor
jg
xchg
sti
mov
sbb
ds
cld
add
sbb
mov
xchg
xor
dec
nop
jge
cld
ss
sbb
lahf
inc
fidivrs
adc
inc
adc
jle
icebp
dec
pop
scas
cmc
mov
inc
sbb
push
ret
or
incl
jne
mov
xchg
jnp
fwait
sub
pop
stos
inc
sbb
pop
jecxz
or
xor
loopne
or
add
nop
add
jnp
pop
cmp
xor
fmuls
mov
imul
loope
ljmp
cmp
dec
hlt
adc
cli
adc
into
addr16
jno
sub
push
sbb
push
ret
aam
and
sbb
loopne
jno
pusha
ss
push
lret
test
pop
shr
fucomi
adc
or
adc
xor
lahf
aaa
sbb
stos
test
add
ret
lods
dec
cwtl
xor
insb
push
test
ret
movsb
test
inc
jno
bnd
jge
negb
sub
test
dec
cmp
ja
fidivl
inc
outsb
das
cs
pop
outsl
inc
dec
shlb
jne
mov
inc
add
jge
pushf
enter
mov
sub
fmull
in
push
xchg
jl
push
push
inc
xchg
pusha
adc
jns
jns
sub
or
out
inc
xchg
pop
pushf
cli
and
cmc
jb
addr16
inc
pop
ret
cmp
gs
xchg
jae
decb
daa
mov
push
scas
lock
jne
loope
scas
mov
nop
les
push
addl
cmp
sub
sbb
stc
insl
mov
mov
enter
enter
dec
sub
push
dec
gs
push
dec
xor
pop
aam
aad
in
ret
jo
scas
fstpl
stos
xor
movsb
scas
mov
bound
mov
and
aam
cmp
jo
outsl
shlb
in
leave
jp
imul
dec
rorl
pusha
shl
les
sub
repnz
push
xor
xor
pop
fwait
cmp
inc
push
xchg
fstl
fxch
mov
stc
lret
xlat
pop
fs
jne
xor
call
bsf
jo
popf
lret
pop
insl
cmp
dec
add
daa
mov
iret
cs
dec
sbb
inc
cmc
movsl
out
mov
sbb
cmp
push
notl
ds
dec
pop
push
movsl
cmp
sbb
xchg
add
fnstenv
shll
sbb
test
in
lods
pop
and
xor
in
mov
push
adc
or
movsl
mov
xchg
cs
dec
fucomi
xor
push
cli
dec
mov
xchg
pop
xor
or
mov
fmuls
nop
loopne
inc
push
ret
adc
xor
add
mov
pop
ret
lods
and
rorb
or
cli
sti
leave
enter
sub
xor
into
insb
ret
ret
addr16
test
push
cvtps2pi
jbe
push
lods
jecxz
and
adc
or
cmpsb
arpl
jns
in
test
push
push
jmp
sbb
mov
sbb
inc
add
test
add
push
scas
mov
jl
cwtl
addb
inc
lret
sub
es
pop
jno
std
sub
popf
adc
ret
add
or
insl
sbb
mov
mov
shr
ret
jnp
mov
cli
mov
sbb
stos
push
add
loopne
inc
in
and
mov
iret
jno
add
test
or
add
icebp
xlat
repz
js
fwait
jns
insb
call
and
pop
arpl
push
mov
mov
ror
push
push
sub
mov
lret
adc
and
and
jae
loopne
jb
jno
cld
xchg
mov
fidivs
stos
mov
imul
jg
out
call
sahf
test
push
jecxz
popf
xchg
jmp
inc
leave
sti
adc
push
cmp
stos
push
add
xor
xlat
push
jl
int
and
popf
mov
dec
in
push
ljmp
xor
in
dec
sbb
mov
pop
or
int3
mov
mov
int
int3
int3
out
leave
ret
fsts
add
test
ja
mov
add
loopne
dec
mov
ud0
ficoms
repz
xor
cld
lods
mov
push
add
push
jnp
pop
jns
popa
pop
test
or
mov
jnp
popf
add
push
mov
ja
lods
jmp
pop
mov
dec
fcmovne
xor
mov
in
fidivl
inc
mov
cmc
int
cmp
add
inc
lcall
fs
mov
scas
push
dec
movsl
xor
and
push
and
int
ds
cld
and
mov
mov
sti
push
addl
or
and
packsswb
add
inc
dec
hlt
add
push
fs
xchg
adc
or
pop
and
dec
nop
pop
fidivs
pop
inc
insl
mov
adc
mov
popa
movl
stc
dec
add
leave
jmp
inc
pop
pushf
mov
xorl
pop
sbb
ret
sti
push
das
adc
jmp
dec
aam
out
xchg
popf
mov
adc
pushf
bound
add
fs
ss
jmp
iret
lock
xor
push
lcall
stos
mov
ficompl
cmc
mov
dec
stc
out
js
sbb
sub
std
je
or
mov
clc
mov
mov
jo
add
add
fistl
in
push
jmp
push
mov
sub
subl
dec
outsl
popa
or
repz
in
adc
mov
pop
sti
mov
arpl
int
cltd
std
rorb
sbb
ret
push
lcall
mov
jge
mov
xchg
clc
cmpsb
outsl
and
iret
sbb
test
push
xchg
out
mov
fs
shl
rcrb
mov
lods
jno
fiaddl
or
in
aam
pop
movsb
cmpsl
adcl
testb
pop
rorb
fists
loope
jne
test
sahf
setne
mov
ret
mov
cmp
xor
dec
add
adc
int
cwtl
cwtl
fstpl
fucomp
outsb
gs
data16
mov
and
lds
adc
inc
xchg
sbb
cmp
xor
out
imul
jbe
out
sbb
sub
ss
dec
clc
push
add
mov
scas
mov
js
in
sub
loop
es
lea
lret
jne
movsb
dec
jns
movsb
outsb
jmp
pop
js
leave
dec
jbe
jmp
and
lret
test
mov
jg
es
xchg
adc
pop
add
dec
and
mov
mov
dec
div
js
jl
add
cmpsl
ret
mov
push
cmp
pop
mov
out
ja
cwtl
mov
imul
mov
jle
cwtl
inc
pop
pop
dec
iret
add
inc
test
pop
dec
imul
scas
mov
mov
mov
pushf
insl
insb
gs
nop
adc
popa
adc
cmc
xor
push
into
push
mov
outsl
sti
adc
push
jecxz
jb
stos
dec
jne
scas
mov
pop
xor
sti
loop
dec
pop
jmp
push
push
mov
divl
and
clc
stos
adc
insb
sahf
dec
mov
mov
add
push
mov
shlb
cmpsl
lret
inc
dec
in
daa
jecxz
call
leave
fdiv
test
rcll
sti
mov
dec
or
pop
mov
test
fdivl
add
mov
xchg
cmc
push
cmpl
dec
into
sbb
xchg
aaa
cmp
adc
mov
ja
filds
push
nop
cmp
pop
aaa
cmp
xor
sbb
je
cmp
fstl
or
das
cmc
adc
sub
roll
xor
scas
addr16
push
xchg
jl
nop
test
mov
or
les
rorb
fsubr
jne
sbb
or
add
test
sub
test
arpl
adc
xchg
xorb
sub
stos
dec
out
popf
pop
push
das
and
insb
mov
jne
jnp
test
cmp
pop
pop
or
fs
aas
mull
cmpsb
cmp
sub
jmp
mov
cmpsb
outsl
sbb
push
into
std
push
pusha
xchg
enter
repz
js,pt
dec
daa
sub
push
in
enter
add
push
mov
mov
pop
mov
mov
add
push
negb
mov
pushf
ret
es
jge
inc
adc
in
jecxz
adc
outsb
mov
mov
cld
mov
push
loopne
dec
and
bound
push
push
mov
loopne
mov
or
jge
ret
inc
mov
mov
pop
mov
jne
push
addr16
mov
xor
sbb
mov
daa
pop
xchg
cmpb
or
inc
xchg
cmp
jecxz
xor
pop
les
pop
mov
or
jp
cmp
push
mov
dec
cmp
movsb
mov
hlt
insb
pop
ja
pop
xchg
vpsubb
sub
xor
enter
push
rclb
push
and
sub
mov
inc
lock
decl
subb
into
fmull
push
mov
movsb
add
ret
sbb
aas
pushl
mov
stc
pop
add
and
push
fcomps
popf
jno
xchg
and
out
lcall
mov
inc
dec
test
mov
mov
in
cli
xlat
out
pop
push
add
imul
ret
insl
jns
pop
data16
mov
ds
add
mov
sbb
jmp
fxtract
xchg
enter
nop
stos
mov
loope
test
xor
push
xor
mov
pop
mov
mov
cmpsl
and
cli
es
loope
jns
add
les
imul
jp
pop
cmp
push
sub
movsl
std
popf
xchg
nop
or
xlat
inc
jmp
jmp
addr16
and
push
es
into
pop
popa
lock
dec
repz
adc
mov
add
std
cmp
dec
xchg
fildll
scas
adc
sahf
cmp
add
and
in
push
cld
ja
jle
jno
int3
sahf
fwait
mov
mov
iret
mov
roll
out
leave
xor
fwait
sbbb
and
push
and
adc
and
punpcklwd
loope
adc
adc
mov
test
std
sub
inc
xchg
cmc
stos
mov
sti
ds
pop
decb
subb
and
in
jb
dec
xor
in
in
lahf
aad
or
addr16
mov
xor
arpl
pop
fldcw
fstl
cmp
arpl
loop
test
inc
pop
inc
or
into
das
or
mov
or
aaa
fwait
ret
xchg
iret
hlt
and
xchg
mov
shr
mov
dec
mov
out
inc
fxtract
mov
lahf
add
movsl
xor
pop
insl
pop
dec
cmpsb
xrelease
negb
push
pop
insl
cmpsl
cwtl
and
inc
jg
daa
push
ljmp
xor
sub
lea
adc
insb
mov
push
or
mov
lahf
ja
inc
in
inc
jo
lods
dec
mov
scas
xor
mov
out
faddl
adc
imul
dec
cmp
arpl
mov
dec
xor
out
adcb
stc
push
xor
inc
xor
es
sub
shl
cltd
subl
lock
fidivs
mov
push
push
push
sbb
sbb
ds
add
rcl
int3
sub
add
dec
mov
inc
std
lcall
pop
clc
testl
ja
inc
pop
cmp
je
fdivp
sbb
xlat
movsb
pop
cmp
rcll
insl
ja
enter
push
les
adc
leave
xchg
pop
sub
pop
push
jns
add
adcb
and
or
jno
andl
cmp
mov
xchg
inc
stos
jmp
dec
dec
cmpsl
cwtl
ja
js,pt
and
les
pop
or
out
jbe
les
sbb
fwait
mov
xlat
stos
push
sahf
popf
push
bound
xor
aad
es
mov
outsl
cmp
outsl
lods
dec
and
mov
imul
adc
xchg
sub
ret
das
sub
xchg
js
out
in
adc
or
mov
xchg
mov
or
push
push
jecxz
add
pop
aas
push
inc
ret
aaa
ljmp
es
inc
pop
aas
adc
sti
into
ret
jo
insl
mov
xchg
daa
les
ds
add
or
fcoml
sub
das
test
inc
imul
daa
xlat
sub
fdiv
shlb
mov
fidivrs
pop
and
push
pushl
ljmp
gs
sub
xor
es
notl
cmc
adc
xor
ret
dec
xchg
test
daa
fs
popa
scas
sbb
sarl
mov
sub
dec
nop
pop
aam
xor
dec
adc
popa
bound
xor
int
lcall
js
jge
jne
jmp
inc
jns
imul
dec
sub
ss
daa
fiadds
lahf
test
pop
test
push
xor
inc
out
xchg
movsb
cmpb
and
mov
pmullw
dec
sub
push
in
or
cld
shll
das
in
or
mov
pop
dec
fidivrs
cmc
and
mov
mov
aad
repnz
loopne
cwtl
mov
cmc
xor
scas
leave
sbb
in
mov
fwait
xchg
cld
xor
jo
sbb
dec
mov
add
aad
mov
push
adc
lahf
inc
cmp
lahf
jmp
push
lods
jecxz
cld
push
inc
pushf
fistps
adc
and
repnz
stos
cmp
push
push
push
fs
insb
push
les
test
adc
mov
xor
cli
outsb
mov
iret
xlat
je
xor
push
imul
xchg
cmpsb
and
int3
push
dec
iret
pop
mov
sbb
jmp
das
cmp
inc
call
int3
out
pop
pusha
repnz
add
sbb
les
pushf
ret
test
dec
in
pop
or
outsb
xchg
or
ret
push
ret
adc
xor
stos
ljmp
pushf
or
stc
sahf
jge
add
out
and
dec
mov
adc
dec
inc
jge
sti
jae
and
cmp
loope
jg
sub
xchg
mov
fbld
rol
xchg
and
cmp
push
in
out
and
push
int3
sbb
fildll
clc
mov
xchg
mov
sti
sub
push
jmp
and
test
ret
mov
dec
pop
jge
jg
outsl
test
push
cmpsl
icebp
loop
pop
aaa
loop
fwait
cmp
mov
mov
call
xchg
cmp
in
jnp
pop
test
mov
or
out
xor
mov
ja
add
xchg
pop
lahf
imull
test
loopne
mov
sub
or
fstpt
xor
pop
jae
pop
add
mov
test
ret
jmp
jg
insl
addl
cmp
push
mov
adc
cmp
sti
jo
or
jmp
sub
add
popf
mov
inc
ljmp
pop
pop
push
cmc
adc
xor
push
push
jmp
lods
int
cmp
push
push
xchg
jecxz
jl
mov
pop
inc
stc
in
xchg
mov
pop
adc
insb
sub
pop
out
push
xchg
sti
shll
xchg
xchg
xbegin
mov
jp
lods
and
push
dec
loopne
dec
je
sub
jg
mov
dec
lret
js
rcrl
out
dec
xchg
or
lods
inc
pop
sbb
cmpsl
jmp
dec
fidivs
push
aas
dec
xor
stos
push
xchg
xor
movsb
sbb
js
daa
inc
add
test
addr16
pinsrw
fbld
mov
test
cmpsb
cmp
push
div
mov
test
sbb
test
negl
mov
rcl
mov
pop
cli
addb
rclb
pop
sub
jg
insl
in
movsb
rcll
inc
test
movsb
dec
ds
fcmovbe
fstpl
push
repz
mov
jae
into
pusha
jecxz
call
clc
xchg
xchg
jp
clc
cmp
jne
inc
push
cmp
pop
cmp
and
push
je
sub
mov
ljmp
push
push
int3
push
pop
mov
push
in
scas
fisubrs
inc
cmp
inc
pop
repnz
ret
mov
lret
mov
sbb
cmp
cwtl
add
js
xlat
dec
je
mov
aad
sub
inc
push
sub
sub
ljmp
pop
add
jl
das
jo
in
push
inc
movsb
cltd
aaa
push
mull
mov
js
mov
mov
or
icebp
xchg
or
test
jae
xor
mov
arpl
sub
mov
nop
dec
pop
insl
cmc
or
call
in
test
imul
mov
adc
jmp
xor
rcrl
scas
or
pop
gs
mov
lret
clc
or
cmpsb
std
inc
add
popa
sbb
or
sub
cli
adc
cmc
fs
inc
out
xchg
sbb
std
mov
ja,pt
jmp
pop
xor
and
dec
pop
jo
push
in
pop
nop
pushl
out
xchg
push
add
enter
push
imul
mov
loop
xchg
mov
mov
scas
arpl
loop
test
add
inc
fildl
in
pop
sub
rclb
jle
or
sub
xor
inc
xlat
lock
or
cli
or
adc
xchg
call
dec
or
jge
xor
mov
push
pop
adc
mov
outsl
push
xor
jmp
jge
cmpl
cmpsl
movsb
std
into
pop
pusha
xchg
cltd
jae
pop
jb
and
jo
stc
shlb
and
ficoml
adc
pop
ljmp
dec
mov
das
inc
lods
inc
cld
push
push
cmp
fldt
movsb
repnz
fsub
push
push
sbb
cs
js
adc
xchg
xlat
rorb
push
cmp
repz
dec
inc
pop
xchg
lcall
sbb
ficoms
mov
mov
imul
mov
sub
sahf
sub
and
fistpll
scas
dec
inc
inc
pop
js
xchg
cmp
jne
iret
pushf
jl
in
jmp
jae
int
fcoms
cli
push
xchg
or
adc
xchg
iret
scas
ja
insb
pop
add
test
cmp
outsb
jp
sbb
pop
loopne
int
pop
or
pop
je
cmc
ss
jae
inc
movsl
orl
rorb
stc
push
enter
popf
adc
pop
movsl
adcb
jae
xchg
movsl
pop
push
adc
out
pusha
outsb
push
insb
lret
pop
sbb
xchg
mov
outsb
inc
or
xchg
mov
loop
and
dec
jle
xchg
stos
xchg
xor
inc
sub
popf
addr16
fidivrs
mov
outsb
bound
dec
loop
insb
lods
jbe
pop
xchg
sahf
sbb
pop
jmp
lods
mov
xchg
lret
gs
mov
das
inc
aaa
and
shll
insl
xor
cmp
dec
sahf
sub
xchg
mov
and
jl
aad
mov
lods
movsl
pop
inc
adcl
mov
js
rclb
nop
pop
and
popf
aaa
decb
negb
jle
leave
bndstx
sbb
scas
fisubrs
pop
xchg
sbb
imul
test
cld
test
lcall
sbb
ljmp
enter
pusha
adc
or
outsl
xchg
dec
arpl
dec
aas
out
repnz
xor
jo
push
xchg
out
loop
repnz
jbe
daa
clc
add
jle
rcll
adc
inc
mov
hlt
add
jo
xor
cmpsb
xorb
daa
lret
ss
sarl
adc
adc
out
jb
ja
push
loope
lret
adc
repz
orl
adc
addr16
xchg
movsb
pop
xor
push
jb
icebp
add
add
jmp
mov
outsl
jnp
sbb
xchg
stos
xor
mov
xor
cmp
cmp
std
jno
mov
loop
orb
adc
sbb
dec
cmp
jp
push
mov
popa
mov
fcmovnb
cli
dec
pop
mov
cwtl
mov
out
inc
sub
sbbl
test
inc
sbb
cld
inc
loope
sti
cmp
xchg
jl
repnz
mov
sahf
loop
neg
inc
enter
inc
fdivrs
popf
cmp
inc
icebp
adc
arpl
out
rcrb
jno
frstor
adc
or
stc
jp
or
in
adcb
mov
mov
test
and
dec
mov
inc
sti
adc
loope
in
popf
outsb
or
scas
in
hlt
cmovg
nop
xchg
sbb
adc
sbb
repz
nop
xor
cmp
sub
dec
fwait
jp
inc
loopne
xchg
push
imul
sarb
cwtl
and
fisubl
inc
sub
test
dec
cld
xor
sub
dec
ret
mov
cmp
dec
add
sbb
inc
or
dec
jae
sbb
es
dec
inc
icebp
cwtl
out
flds
lahf
cwtl
mov
mov
adc
iret
lret
sbbl
ljmp
jae
push
mov
xor
jo
mov
mov
flds
pusha
mov
inc
addl
js
iret
lds
cmc
js
mov
jo
jbe
and
loopne
test
in
pushf
cli
stc
repnz
sti
sub
mov
fldcw
and
dec
add
xchg
in
mov
fidivrs
js
cs
xor
sbb
es
jmp
push
jno
hlt
outsb
out
mov
xchg
mov
incl
pushf
sub
sub
shrl
movsb
pushf
push
push
sbb
push
mov
add
add
sbb
movsb
movsb
insb
in
inc
adc
rcll
dec
in
xchg
xor
test
repnz
daa
aaa
pop
cmp
mov
hlt
mov
xchg
and
lds
popa
mov
inc
scas
mov
sbb
pop
cmp
adc
loopne
mov
lcall
sahf
stos
push
std
test
inc
push
pop
xlat
aaa
mov
fldl
stos
xchg
sub
sub
mov
cmp
ret
je
addr16
cmp
cmp
and
sbb
movsl
pop
mov
cltd
lret
xchg
push
and
in
sbb
or
adc
xchg
lahf
fwait
sysret
dec
subl
testb
and
pop
outsl
sub
call
ljmp
arpl
pop
mov
inc
sbb
es
mov
subb
pop
dec
push
sub
adc
ret
adc
cltd
divl
inc
add
xor
sbb
adc
scas
enter
dec
adc
test
sar
test
insb
lea
mov
iret
js
push
mov
stc
push
push
jb
stc
xchg
sub
les
psubw
mov
xor
mov
scas
es
sub
mov
inc
jo
stos
cmp
insl
inc
adc
dec
cmpsb
lods
in
testl
mov
sbb
sbb
stos
push
bound
cmp
push
aaa
loop
addr16
shrb
mov
jge
jg
or
nop
ret
cmp
pop
xrelease
and
or
sbb
cmc
xchg
js
call
out
cmp
xchg
inc
xchg
call
sahf
aaa
mov
int3
jmp
adc
push
push
jmp
dec
add
into
push
xchg
shl
daa
mov
cmc
xchg
or
bound
pop
xlat
sbb
movsl
pop
negb
inc
iret
and
and
das
jno
out
xor
xorl
cmp
lcall
xchg
jbe
cs
movsl
add
aad
cmp
movsb
dec
xchg
jnp
stos
ds
jb
mov
push
cmp
out
pop
sub
jecxz
dec
dec
xor
iret
sbb
mov
ficoms
jl
dec
fisttps
loope
fsts
or
and
pop
inc
jne
stc
in
test
xchg
repnz
pop
xchg
push
or
icebp
icebp
mov
sub
dec
adc
data16
shr
addl
pop
aas
mov
orb
mov
fninit
mov
push
shrl
fsub
mov
sbb
ret
fcmovnb
mov
inc
mov
dec
or
dec
je
sub
int
repnz
dec
xor
mov
jg
enter
movsb
inc
push
enter
dec
repnz
pop
mov
aas
inc
fs
js
xchg
sub
add
xor
jl
sub
pop
jne
sbb
hlt
sahf
cmp
test
js
jle
sbb
dec
call
stos
fldl
cmc
bound
sbb
stos
data16
scas
mov
aas
mov
add
ret
out
or
or
int
xchg
jne
pop
neg
adc
sbb
shll
push
cwtl
adcl
push
dec
mov
fdivs
push
lods
mov
dec
in
cli
and
xchg
sti
dec
sbb
scas
xchg
cli
sub
hlt
cmpsb
lret
mov
sahf
into
leave
push
or
aad
adc
icebp
cmp
outsb
and
jge
mov
adc
rolb
insl
xchg
rcrl
pushw
sbb
movsl
push
or
addr16
dec
cmp
or
stos
jl
xor
pop
inc
stc
adc
sub
insl
loopne
mov
loopne
mov
mov
or
imul
mov
dec
iret
xchg
cmpsb
movsb
push
inc
jne
dec
call
sbb
gs
insl
pushf
push
mov
lahf
in
ss
jp
popa
fs
inc
pop
pop
inc
jge
cwtl
lret
or
inc
fildll
into
imul
test
ret
dec
mov
js
cmp
inc
mov
out
sbb
pop
les
gs
push
jbe
adc
adc
in
mov
call
andb
jge
sub
cmpsb
insb
popf
jo
cmpsl
jmp
vcomiss
mov
inc
lods
adc
xchg
pop
inc
out
jae
lds
fisttpl
rolb
mov
in
mov
mov
add
push
in
cs
sahf
aaa
sub
cmpsb
and
dec
loope
mov
push
pop
xor
lahf
add
loop
xchg
mov
leave
pusha
popa
dec
aas
aad
push
jb
sub
sbb
pop
pop
fs
sub
and
pop
pop
xchg
jb
adc
in
sbbl
aas
scas
push
popf
shr
mov
shrb
inc
fcompl
dec
dec
adc
lods
mov
cmp
xor
xchg
mov
addr16
adc
enter
push
stos
push
pop
loopne
push
dec
xchg
mov
mov
movsl
lret
js
lds
arpl
push
jo
inc
jecxz
insb
aam
mov
fsubrs
incl
xor
xor
xor
or
sub
mov
das
js
fnstcw
in
and
xor
lahf
push
repz
adc
pop
inc
rclb
sbbl
les
push
jns
bndstx
cli
loope
mov
or
xchg
into
inc
out
out
xchg
dec
stc
into
xor
lods
into
js
rcrb
stc
addr16
jb
mov
movsl
lcall
sbb
xchg
pop
ljmp
dec
rcl
cmpsb
cmpl
inc
repz
mov
dec
xchg
scas
inc
aad
loop
jae
clc
xchg
shlb
js
cmc
xor
in
mov
dec
mov
sahf
push
and
xchg
pop
pop
jge
data16
mov
and
mov
sub
jle
jl
sbb
or
pop
xor
out
js
shll
dec
xchg
sbb
dec
and
sub
mov
xor
mov
and
pop
fisubrl
sbb
mov
in
pushf
enter
jnp
leave
std
sahf
aam
dec
jns
clc
mov
int
sahf
or
outsb
aaa
cltd
lea
lcall
in
sti
ss
lock
pop
jns
adc
sti
xchg
imull
ljmp
and
mov
nop
mov
jb
or
mulb
inc
adc
cmpl
je
popf
sub
pushl
sub
jne
pop
popf
ret
mov
jns
dec
aaa
xor
jb
test
fwait
jbe
ficompl
andl
inc
jne
cmpsb
add
mov
sbb
aaa
xchg
xchg
mov
pop
dec
sub
icebp
or
bound
into
sub
test
jo
mov
loopne
lea
xor
test
or
push
push
or
xor
xchg
xchg
cmpsb
imul
fistps
jnp
xlat
fsts
jl
xchg
cmpb
in
pop
rcrb
lret
bound
mov
int
js
mov
and
arpl
adc
fildll
xor
iret
mov
jmp
dec
pop
xchg
das
cs
jne
inc
jge
push
jmp
cwtl
dec
lret
mov
inc
mov
sarb
das
adc
lods
mov
in
in
aaa
cmp
out
out
movsl
add
push
es
add
fbld
in
add
xchg
or
loopne
or
shrb
and
push
fs
aas
push
push
add
cwtl
add
lods
or
test
xor
call
movsl
adc
out
adc
iret
aad
fcoml
push
scas
cmp
sub
jnp
xchg
mov
sbbb
add
mov
pushl
dec
por
test
imul
xor
dec
and
cmpsb
idivl
pop
cmp
ficoms
pop
daa
cld
mov
add
dec
xor
sti
mov
push
cld
ret
dec
and
test
cld
cmp
aas
lahf
adc
xchg
in
inc
mov
fidivs
decb
aaa
cmpsl
stos
cmp
ret
mov
test
push
fsubs
adc
xchg
notb
nop
sarb
sbb
icebp
cmp
sub
repnz
stc
cmp
sti
outsb
cmpsb
cmpsb
push
push
enter
pop
pop
lea
fcomps
popa
daa
or
loope
jbe
das
xlat
xchg
jo
xor
movsb
ja
mov
jmp
popa
fbstp
test
fisttpl
push
test
mov
cmp
das
jg
out
add
inc
sbb
into
adc
inc
int3
mov
stos
pop
mov
iret
jne
push
into
and
sbb
cmp
jecxz
pop
scas
mov
fildl
dec
add
jp
mov
push
jo
fbld
pop
inc
and
cmpsb
sbb
inc
popa
add
stc
and
setp
jecxz
jnp
shrl
adc
mov
cmp
mov
jne
pop
cmp
lret
push
fiaddl
ljmp
pop
nop
inc
push
ret
and
jae
mov
call
cltd
fwait
outsb
pop
mov
or
pop
or
push
xor
ja
adc
cmp
mov
sbb
pop
xor
int
daa
fwait
notb
cmp
jne
std
fdivr
fidivrl
nop
sbbl
loopne
push
jge
xlat
sbb
notl
shrl
dec
in
jae
sub
cli
out
cld
or
in
out
dec
inc
cwtl
push
dec
lock
sub
xchg
nop
cmp
push
lahf
and
and
jae
inc
movsl
enter
int3
cs
inc
push
dec
fisttps
push
in
dec
sbb
pop
je
xor
insb
xchg
hlt
add
lret
jecxz
enter
add
mov
jbe
sbb
xchg
sbb
sar
je
flds
jmp
fs
ljmp
negb
or
shr
ja
fistpl
mov
rcrl
in
add
sti
and
cwtl
loop
es
lock
dec
add
or
xor
jbe
loope
sbb
mov
int
jp
in
idivl
out
xchg
cmpsb
or
sti
dec
cmpsl
xor
sub
data16
mov
inc
or
sbb
test
int
pusha
inc
out
mov
loope
test
cmc
jne
mov
xor
inc
and
pop
mov
inc
pop
mov
jnp
mov
imul
clc
and
popf
xchg
stc
sahf
jbe
ret
in
mov
cltd
sbb
sti
aas
sbb
in
inc
lods
sub
inc
cmpsb
jg
shrl
mov
std
xchg
or
jmp
add
xor
dec
adc
outsb
jp
lcall
test
scas
jle
loop
jne
jae
sub
jmp
and
inc
push
out
lret
insb
cmp
push
dec
sub
or
xchg
inc
pop
sbb
inc
cmpsb
push
outsb
aam
xchg
or
cmp
das
dec
mov
jle
pop
xor
mov
imul
sti
movsb
sbb
xor
stos
aad
xchg
scas
scas
movsb
cld
add
xor
jb
sti
jle
and
cmp
jbe
sahf
or
pushf
pop
js
dec
pop
int3
outsl
imul
pop
sub
enter
fbstp
fmull
pop
push
mov
mov
adc
or
add
mov
dec
mov
sbb
insb
in
lods
mov
push
mov
mov
leave
test
mov
xor
stc
add
in
or
mov
loopne
xor
dec
cmp
mov
add
inc
roll
inc
lds
js
fdivp
nop
les
jle
mov
mov
rol
mov
out
mov
xchg
imul
xlat
ja
mov
sbb
push
mov
xchg
divl
insb
fimuls
pop
cli
aaa
inc
pop
inc
sub
mov
sbb
push
clc
sti
add
in
add
push
dec
cmp
add
push
jae
xor
or
mov
mov
cli
adc
rclb
lock
jbe
or
notb
push
outsb
in
cmpsb
cmp
out
push
jle
and
and
addl
push
movsb
daa
sbb
ljmp
jae
mov
dec
push
icebp
stos
dec
scas
push
add
mull
stos
sti
mov
lock
out
les
mov
xchg
lret
mov
fdivr
xor
push
ret
add
loop
mov
mov
aad
lods
xchg
inc
lahf
sub
xlat
mov
jno
ja
pop
jge
push
sti
inc
ret
lea
sub
mov
jne
icebp
das
add
mov
mov
cs
aas
pop
lods
sbb
scas
adc
lods
add
jnp
aas
outsb
mov
inc
lds
fsubs
add
mov
mov
arpl
dec
pop
adc
xchg
shl
jbe
ret
inc
and
or
push
push
cwtl
ret
jne
sub
jns
and
xor
xor
sub
add
xchg
test
pop
cmpsb
pop
and
xor
aad
pop
fdiv
dec
jns
aam
dec
repz
or
xor
push
mov
and
clc
ret
notl
cmp
ret
test
insl
sbb
pop
pop
dec
bound
aad
cwtl
dec
xor
mov
fs
cmp
out
cltd
inc
std
into
mov
dec
xor
pop
pop
jnp
adc
inc
ljmp
pop
inc
cmp
jge
shrl
sbb
mov
push
sahf
mov
or
or
lea
mov
aam
jge
mov
and
cli
xor
sub
xor
mov
adc
xor
stos
xor
cmp
sub
dec
or
mov
cmp
daa
mov
outsl
je
xchg
pop
mov
cltd
push
mov
adc
fwait
addr16
or
loop
and
data16
sub
cmp
mov
hlt
ljmp
shlb
lods
dec
push
lea
pop
jnp
xchg
cli
and
das
adc
lahf
xlat
jne
and
pop
test
lahf
jecxz
jnp
push
push
jecxz
jle
jae
cli
arpl
test
in
test
loope
mov
inc
sbb
xor
std
notl
lds
test
cltd
or
sub
int3
add
imul
imul
cmp
jg
cmpsl
rcr
outsl
clc
sahf
xchg
push
je
testl
cmpsl
lock
or
lds
add
lret
push
notl
outsl
cmp
cmp
sti
mov
rorl
int3
add
mov
add
lods
jnp
in
out
call
xchg
ljmp
and
push
shl
ja
lcall
out
into
call
jae
enter
test
sti
mov
sbb
iret
add
jne
inc
dec
adc
jg
mov
sbb
scas
inc
mov
cmpb
dec
scas
adc
aad
sbb
lcall
sub
jecxz
add
mov
jb
mov
inc
xorb
je
out
stc
pop
jbe
call
lret
sbb
adc
sbbb
mov
jge
mov
inc
push
aam
std
cmp
sub
cli
pop
icebp
xchg
pop
movq
adc
pop
dec
repz
push
ljmp
push
xor
ret
adc
jo
cmp
js
neg
jecxz
sbb
dec
jle
rcrb
cli
xchg
loopne
dec
mov
sbb
push
mov
cmp
add
or
xchg
addr16
cmp
stos
xlat
stos
daa
dec
jle
arpl
pop
fldenv
dec
and
cmp
ds
push
fsubp
mov
repnz
fimuls
jae
push
xor
fisttpll
dec
xlat
dec
cmp
jle
dec
mov
cmp
and
fldcw
ret
aas
enter
rclb
cltd
int
in
xchg
or
jecxz
leave
sbb
inc
lahf
sti
push
int
hlt
mov
mov
push
cld
dec
into
push
gs
sbb
push
mov
leave
and
lret
and
push
cmp
mov
mov
pop
out
adc
loop
decb
mov
push
popa
ss
pushf
or
nop
or
out
jbe
jg
loope
add
daa
adc
cmp
fmul
sbb
dec
lea
sub
dec
into
out
dec
adc
mov
mov
mov
adc
xor
pop
sub
cmc
scas
push
clc
js
xor
pop
lret
das
xchg
notb
imul
addr16
push
push
sti
ss
pop
dec
imul
imul
jl
aaa
inc
insl
pop
enter
iret
jno
jae
testb
jbe
popf
add
xor
int3
xchg
mov
adc
mov
cmp
sub
mov
rcr
jnp
push
inc
lcall
mov
jo
and
xchg
sbb
popa
mov
mov
lock
sbb
enter
loope
adc
inc
pop
fimull
mov
testl
pop
cmc
mov
push
xor
mov
jge
daa
fbld
fistps
insl
int
loop
vpaddq
mov
ss
cs
inc
bound
and
stc
jmp
push
aas
mov
orb
dec
movsb
xor
adc
dec
and
ds
jae
addr16
xorb
movsl
jmp
in
pop
cmp
or
dec
fstpl
loope
sbb
mov
stos
stc
js
scas
and
shlb
mov
lods
mov
mov
and
ljmp
inc
sbb
dec
or
sbb
push
into
xchg
daa
or
test
jge
xor
and
rorl
sbb
add
test
mov
jge
push
push
mov
cld
sbb
imul
push
push
push
xchg
xlat
xchg
or
outsb
andl
stos
movsl
movsl
cmp
outsl
xchg
pushf
dec
in
xchg
add
fbld
push
cmp
fiaddl
nop
xor
pop
inc
mov
stc
ds
jae
sub
mov
jl
jecxz
jg
xchg
adc
imul
dec
jmp
mov
scas
push
aas
les
jns
cmpsl
jno
and
ds
cli
jne
mov
dec
mov
and
gs
xchg
jb
incl
xor
sbb
or
xchg
jo
gs
inc
xchg
jl
aas
push
ret
mov
jecxz
and
std
mov
jbe
jmp
inc
pop
cmpsb
adcb
jle
jno
pusha
test
fimull
out
sbb
gs
outsb
xchg
jno
cmp
cmp
fidivrl
or
loop
dec
dec
ret
lret
xchg
inc
cmp
cld
scas
decl
aam
fisttpl
roll
into
popf
pusha
pop
fstpl
cmp
add
push
repz
xchg
sub
pop
call
mov
jp
pop
repnz
mov
or
cmp
dec
testb
inc
sahf
mov
lret
xchg
mov
lds
pop
pop
jl
outsb
dec
pop
jnp
jg
adc
ljmp
insl
and
mov
push
daa
stos
sbb
push
fisttpl
jle
cld
mov
stos
add
and
enter
sbb
sbb
popf
test
mov
cli
pop
xor
faddl
das
mov
sbb
mov
adc
jb
out
daa
inc
imul
cs
inc
mov
mov
inc
xchg
bound
outsl
sbb
cmpsb
cmpsb
popf
fstpt
imul
fiadds
stos
or
adc
out
adc
das
xor
pop
pushl
outsl
test
cmp
or
clc
outsl
xchg
and
lock
ljmp
jecxz
cltd
inc
clc
fcoms
inc
jbe
sahf
clc
inc
dec
jmp
mov
std
jo
leave
fs
outsb
and
inc
push
data16
icebp
aas
mov
and
fwait
jl
les
dec
into
sub
mov
mov
cmp
rorb
jnp
out
leave
sub
xor
mov
jmp
mov
push
repz
out
mov
scas
sub
popf
insb
xor
imul
mov
xchg
test
sahf
loopne
nop
and
lods
xor
fwait
and
dec
ja
cmp
shr
stos
inc
adcl
iret
mov
push
jbe
pop
cmp
clc
jnp
xchg
rcll
xchg
out
mov
push
add
jmp
rcrl
lds
scas
rcrb
or
push
js
in
sub
ret
rdtsc
push
stos
push
add
push
shll
lfs
add
clc
sti
and
popf
sbb
dec
fcom
mov
sub
cli
sar
xor
in
mov
sbb
mov
test
icebp
stc
ja
xlat
sbb
out
pusha
xorl
rolb
push
pop
xchg
pop
jge
jp
lahf
loope
outsb
out
push
xchg
ret
dec
mov
xor
add
mov
xchg
aad
and
fwait
test
outsb
sub
mov
add
add
mov
cmp
repnz
int3
rolb
out
add
add
and
daa
movsl
call
xor
jne
daa
mov
insl
xchg
xchg
dec
test
aas
fdivrl
data16
in
pop
push
nop
dec
out
inc
or
xchg
ret
or
decb
ljmp
sti
daa
sahf
movsl
test
outsl
mov
mov
data16
pop
leave
dec
jmp
in
ud0
jmp
lods
xlat
es
jl
xchg
add
adc
ds
jo
fidivrs
push
mov
xchg
mov
test
mov
cmp
pop
mov
inc
cmp
pop
mov
out
aas
jl
xchg
xchg
adc
and
les
ja
jle
and
inc
ss
or
stos
and
jge
js
mov
sldt
mov
shll
jbe
stos
fldl
inc
pop
and
scas
mov
xor
or
inc
sbb
pusha
mov
adcl
ret
rorl
add
push
mov
bound
sbb
out
cmp
sub
mov
sub
cli
out
jecxz
ret
call
leave
jnp
cmc
in
dec
inc
lret
cmp
dec
jecxz
std
and
add
daa
int
jecxz
or
push
popf
std
jp
jbe
outsl
cs
ljmp
dec
popa
mov
pop
icebp
mov
je
ret
lock
add
gs
pushf
out
es
cmp
adc
adc
cltd
cmp
mov
test
cmpsl
mov
fwait
int3
xor
pop
sbbl
sub
push
sbb
cs
xchg
imul
mov
xchg
insb
pop
inc
inc
int
sub
xlat
inc
outsb
js
mov
cld
add
leave
outsb
cmp
cs
fimull
fidivrl
sub
sbb
pop
ret
dec
loopne
add
pop
jo
jl
push
cmpsb
lahf
and
inc
call
jl
in
out
pop
pusha
fstpl
sahf
je
and
sbb
shlb
mov
lret
adc
add
push
fwait
pop
add
inc
jae
and
shrb
loop
lret
dec
inc
xor
or
pop
call
xchg
andl
in
cmpsl
int
enter
sar
stos
pop
pop
adc
push
or
dec
jae
out
or
jl,pn
pushf
mov
test
xchg
nop
and
sarb
lret
push
sub
dec
stos
pop
adc
jne
cmp
test
push
test
lea
nop
popa
icebp
mov
lock
cli
sbb
dec
sbb
adc
xchg
scas
fstpl
rclb
test
xchg
js
xchg
arpl
inc
loopne
pop
in
or
cmp
cmp
adc
jle
ror
mov
and
mov
push
jbe
add
subl
cmp
jae
or
adc
lods
jecxz
pop
adc
sarl
adc
xchg
pop
mov
ffreep
mov
sub
cmpsl
pop
and
sbb
cmpsb
je
mov
mov
mov
jns
adc
cmp
sub
cltd
xchg
jge
mov
xchg
lea
xor
mov
sbb
jge
pop
fimuls
inc
mov
ffreep
outsl
ret
mov
mov
add
adcl
push
sahf
test
adc
pop
aaa
mov
mov
adc
fcompl
cmpsl
jmp
rclb
dec
test
dec
icebp
iret
cmp
jg
imul
jle
into
push
cmp
out
lock
mov
pop
test
mov
xor
xor
roll
aad
sbbb
in
bound
ds
or
addr16
inc
mov
out
and
pop
dec
out
sar
xlat
cltd
loop
hlt
mov
lods
xor
ficoml
and
lcall
dec
xchg
outsl
push
jle
push
je
adc
outsl
sarb
cs
xor
imul
xchg
xor
stc
pop
inc
or
mov
adcl
pop
push
or
mov
xor
imul
dec
movsl
dec
pop
cwtl
repz
mov
xchg
cmpl
sbb
stos
cwtl
out
and
dec
iret
loopne
imull
addr16
sbb
push
cmpsl
inc
fs
std
retw
inc
out
cmp
mov
mov
push
pop
lods
sub
push
gs
pop
fcomp
push
mov
mov
mov
xchg
or
xor
hlt
roll
out
sahf
inc
imul
cs
rcrl
popf
out
pop
jb
sub
addr16
add
data16
xchg
mov
lret
das
xchg
sbb
mov
in
pushl
xchg
and
adc
lea
test
lcall
movsb
out
insb
jno
pop
inc
in
stos
lods
dec
inc
rol
rorb
cmp
xchg
pushf
test
clc
mov
mov
cltd
xor
ret
sbb
sub
mov
push
mov
out
sbb
push
mov
mov
jle
test
sub
scas
jns
mov
sbbl
inc
shlb
repnz
pop
jo
cld
lea
or
fs
sbb
cmp
push
pop
xor
jge
cmpsb
les
xchg
decl
dec
jge
gs
and
sbb
stos
inc
inc
jmp
or
fisubs
mov
pop
push
enter
ja
jnp
shrl
push
iret
int3
push
pop
pop
xchg
scas
sahf
mov
sub
fs
push
sub
lahf
xlat
xchg
push
cwtl
inc
lret
clc
and
nop
sbb
jnp
shr
jno
mov
push
ror
pop
pop
adc
lahf
dec
mov
les
dec
add
push
iret
loop
push
add
mov
jne
pop
sbb
xor
popa
lea
jecxz
aad
lods
jae
xchg
shll
adc
mov
mov
aas
daa
dec
icebp
jno
sbb
lahf
push
in
mov
jl
pop
stos
and
mov
mov
xchg
lock
movsb
mov
cmp
cmc
aas
push
jg
test
cld
loop
jecxz
adc
scas
int3
or
jnp
cmpsl
xchg
addb
leave
cmp
xchg
negb
jns
mov
ror
filds
test
ja
mov
aam
sahf
lock
cmp
mov
cli
nop
sub
fildl
leave
pop
shlb
out
jmp
clc
lods
adc
and
lahf
inc
pusha
push
xor
pop
xor
dec
rcrl
cmp
inc
stos
xor
test
or
stc
iret
outsb
push
aaa
add
inc
pop
fdivs
call
shl
xor
jge
int3
dec
daa
daa
mov
pop
add
mov
lea
sbb
aam
popf
or
cs
pushf
xchg
push
arpl
xor
jl
xlat
inc
out
popf
adc
add
fstp
cmp
ja
mov
xchg
testl
imul
decl
ret
dec
pop
test
inc
loope
sub
mov
mov
ds
loopne
inc
outsl
mov
mov
mov
mov
test
mov
adc
shr
out
ss
cmp
cmp
xor
fmulp
aas
aas
adc
mov
pop
dec
push
fstpt
idiv
dec
adc
sbb
lret
inc
int
cmp
mov
mov
mov
sarl
fldenv
push
pop
sub
popa
push
jo
dec
stos
or
xor
leave
ds
pop
or
adcl
xchg
lds
jmp
xchg
cmc
push
dec
push
jb
jne
cmc
push
sub
xor
pop
or
jne
push
push
int
and
mov
divb
mov
pop
push
ss
out
dec
mov
or
xchg
jg
and
xlat
testb
push
mov
jg
sbb
and
xorl
adc
and
sbb
fsts
xchg
push
je
jb
jb
jl
int
sahf
mov
jo
test
lahf
inc
push
int
adc
mov
shrl
cld
dec
push
mov
xchg
call
ss
iret
jge
incb
jge
rorb
jb
jnp
push
ret
push
mov
xor
out
cmp
push
add
arpl
loope
divl
sub
jnp
test
sub
adc
leave
cmpl
repnz
mov
dec
or
sub
orl
sbb
mov
dec
aas
insl
add
pop
iret
jns
mul
nop
fsubs
or
fistps
jno
mov
aad
int3
hlt
adc
daa
or
lock
mov
push
xchg
inc
xchg
push
cmp
imul
jl
stc
adc
int
mov
arpl
das
mov
dec
jae
pop
outsl
and
add
adc
pop
pop
inc
jbe
jno
inc
add
cmpsb
das
pop
sahf
push
ss
dec
xchg
notb
test
inc
sbb
mov
xor
test
shll
cltd
or
insl
mov
aad
sbb
push
paddsb
add
xor
je
rol
cli
outsb
pop
test
inc
pop
adc
cmp
push
imul
cltd
xchg
xor
and
cld
adc
mov
and
lret
sahf
or
dec
call
cmp
cwtl
pop
mov
push
or
movsl
mov
sbb
aam
mov
dec
xor
and
cmpsb
jne
adc
sub
pop
pop
cmpsl
jb
sar
rclb
mov
subl
sub
add
scas
jp
pop
out
ficompl
icebp
xor
push
or
sbb
test
inc
lds
repnz
ds
ljmp
into
sub
pop
call
scas
jg
inc
xor
je
pop
xlat
jnp
and
inc
mov
je
xchg
inc
cld
mov
pop
outsb
and
xchg
lea
fcoml
cmp
outsb
jmp
push
inc
xor
mov
repnz
xor
mov
pop
mov
jle
dec
or
mov
adc
test
adc
lret
in
mov
ret
in
idiv
mov
xor
out
xchg
dec
das
push
fcomi
std
bound
shl
cmp
icebp
mov
jnp
jp
dec
sub
cmpl
xchg
ret
adc
icebp
lods
movsl
and
mov
sbb
repz
ret
lods
fisttpll
lds
jo
inc
xchg
xlat
xor
js
xor
cmpsl
xlat
push
gs
mov
test
xchg
mov
cld
ss
enter
fwait
dec
or
xor
and
mov
mov
mov
adc
cmp
fldt
dec
push
imul
popl
xor
jae
out
sbb
or
loop
shrl
sarb
or
jns
lods
mov
xchg
mov
adc
mov
lret
and
cld
cmp
insb
jno
pusha
outsl
mov
insl
xchg
push
sub
jne
pop
jnp
sbb
test
sub
jmp
xor
sub
cmp
cmpsl
imul
sub
push
movsb
into
lahf
std
fmul
pop
cmc
adc
dec
or
ja
cmp
mov
shrb
loopne
push
add
pop
jnp,pn
stc
inc
push
cltd
push
inc
pusha
aas
ret
imul
jp
inc
stos
jle
loope
popf
dec
pop
sub
pop
jns
enter
pop
mov
sbb
popf
data16
jp
cmp
daa
jl
jb
inc
je
inc
pusha
and
mov
fs
loop
and
out
jbe
cld
or
je
icebp
and
outsl
cmpsl
xor
and
repz
xor
inc
repz
loop
cld
in
push
pop
pop
sbb
and
jge
nop
pop
dec
outsb
mov
ss
push
fwait
ret
lods
mull
out
sahf
pop
aaa
subb
jne
rorb
mov
xlat
ret
movsb
xor
call
jp
jb
pusha
dec
push
rcrl
repnz
cmp
mov
add
jg
lahf
bnd
inc
rorb
jmp
aaa
xchg
pop
push
xor
sub
fsubl
dec
std
enter
repnz
in
jg
sub
int
mov
ret
in
adc
push
sub
pop
pop
std
cmp
cmpsb
xor
or
outsl
mov
sub
je
inc
pop
add
packuswb
shrb
or
data16
sub
mov
fimull
stc
jbe,pn
push
movsb
imul
fsubrl
pushf
sbb
lcall
inc
inc
rolb
lods
out
sbb
movsb
fwait
inc
or
inc
incl
data16
mov
mov
cmp
mov
mov
imul
pusha
rorb
dec
jge
jmp
clc
add
out
adc
inc
test
test
shll
leave
jne
inc
or
fwait
xchg
pop
out
pop
mov
test
int3
mov
xlat
jne
adc
push
enter
or
adc
repz
out
sbb
leave
pop
jae
pop
cmp
mov
mov
dec
lods
xchg
inc
sbb
and
inc
or
repz
lcall
adc
pop
inc
testb
jge
out
test
dec
sbb
es
loopne
jo
xorl
les
and
test
sub
jl
out
xchg
mov
pop
int3
je
clc
jp
xchg
or
outsl
mov
mov
insb
fdivs
dec
pop
sub
inc
rorb
add
and
popf
push
das
cltd
mov
imul
adc
xchg
pop
in
mov
shrl
in
lods
sub
push
sbbl
in
loop
cmp
arpl
scas
push
pop
and
daa
popl
mov
add
cs
les
cmpsb
dec
dec
mov
pop
cmc
bound
and
xlat
and
adcl
fadd
loop
hlt
clc
mov
sysret
ret
leave
dec
mov
pop
dec
call
out
pop
test
ja
mov
das
dec
mov
ror
xor
push
int
imul
cld
out
mov
pop
std
pop
pop
jmp
sti
cmpl
xor
div
aam
data16
sub
repz
and
pop
pop
jecxz
addb
pop
cld
mov
push
stos
inc
punpckldq
andl
pop
dec
cmp
shrl
leave
and
jg
push
sbb
and
fldl2e
dec
test
cmpsb
adc
lret
mov
xchg
fistps
imul
aam
or
test
pop
sub
mov
inc
or
mov
nop
dec
and
sub
inc
leave
mov
outsb
mov
add
mov
mov
mov
xchg
fabs
jg
adc
sbb
imul
or
or
frstor
loope
imul
subl
inc
xchg
cltd
cmp
pop
sub
cmp
repnz
push
in
hlt
arpl
cli
testb
mov
into
push
int
or
cmc
das
mov
std
and
mov
out
hlt
inc
adcb
pop
int
ror
and
inc
bound
xchg
call
inc
adc
cmp
orl
incl
mov
data16
test
mov
loope
mov
jecxz
sahf
shlb
xor
push
notb
je
inc
inc
fisttps
mov
insl
dec
stos
sub
shrl
sub
mov
and
nop
cld
mov
fdivr
push
adc
push
xchg
sbb
mov
movl
xchg
in
mov
dec
xchg
inc
imulb
lock
jbe
mov
dec
adc
sti
lcall
je
push
mov
jmp
adc
stc
es
lcall
push
test
lret
repnz
xchg
pop
sub
xchg
sbb
adc
jns
sbb
les
lea
int3
push
inc
sbb
pop
aam
les
cmp
ret
ds
mov
icebp
xchg
mov
fnstcw
ficoml
add
and
pop
mov
ja
aas
or
push
dec
pushl
imul
out
rolb
push
add
dec
out
fs
xchg
ss
dec
aam
scas
movsb
mov
dec
out
inc
notl
push
xchg
mov
jo
stc
repnz
in
cmp
xlat
xchg
cmpsl
or
test
fbstp
rcll
imul
push
push
adc
cltd
cmp
sub
or
push
out
cli
add
xchg
xchg
fdivs
jmp
dec
sbb
sahf
jmp
mov
inc
aas
pop
sbb
dec
lods
cmc
add
test
jae
dec
fimull
jbe
movq
das
aas
sub
cltd
daa
mov
sbb
push
xchg
inc
stc
test
cmp
inc
sarl
sbb
xor
mov
sbb
out
push
not
decl
clc
jecxz
movsl
add
mov
xchg
notl
xchg
bound
sbb
roll
aam
lahf
push
std
cld
add
jae
sar
pop
inc
adc
inc
or
xor
cmp
add
or
divl
jnp
or
xchg
fs
inc
sbb
mov
pop
addl
into
clc
pop
cmc
mov
dec
mov
xchg
dec
adc
aas
cwtl
ret
sub
subb
mov
xchg
rol
movsb
add
adc
inc
roll
add
pop
std
scas
cmp
sbb
adc
cs
jns
mov
out
jp
sbb
imul
push
inc
add
jg
cmp
add
mov
pop
shrb
fistpl
push
int3
xor
lret
std
jge
mov
lret
sub
adc
pop
mov
mov
mov
sub
cmp
inc
daa
push
jnp
add
imulb
out
and
scas
mov
sub
je
xor
int
in
dec
imul
movsb
mov
lods
or
add
mov
shl
arpl
mov
negl
dec
fsubrp
lock
mov
shl
cmp
shrl
xchg
jp
mov
mov
jl
or
add
adc
add
cmp
xor
adc
mov
lahf
daa
movl
mov
inc
mull
lret
inc
outsl
test
lea
and
xor
outsb
jmp
int
xor
jno
add
cmp
cmc
mov
ds
mov
cmp
in
rcr
cltd
mov
jl
fs
and
popa
lcall
movsl
rclb
outsb
or
xchg
mov
push
jne
popa
sub
adc
repnz
rclb
cmpsl
sbb
jg
xchg
lahf
clc
in
mov
sub
push
in
add
addl
cwtl
pop
stos
lret
aaa
sbb
mov
enter
and
mov
jge
out
cli
mov
jne
divl
fisubrl
dec
xchg
and
pop
mov
rolb
push
dec
call
loopne
pop
outsl
pop
imul
int3
mov
cli
jmp
jmp
mov
mov
lcall
stc
or
dec
lea
outsl
pushf
scas
sub
and
mov
lds
fucomip
mov
decb
jne
cltd
aas
frstor
fidivs
popa
adc
adc
movsb
jg
scas
scas
add
hlt
pop
pop
cld
or
push
cmp
sbb
sub
mov
sbb
adc
mov
mov
cltd
fcmovu
jge
movsl
push
cmpsb
sbb
out
mov
xchg
sbb
clc
ljmp
iret
inc
pop
rolb
fwait
aaa
pop
mov
cmc
pop
inc
add
movsl
roll
rcr
add
ret
popf
pushf
push
roll
sbb
cmp
mov
into
add
lret
clc
jo
push
and
outsl
mov
out
arpl
add
js
sbb
xchg
scas
sbb
push
sub
inc
test
in
pop
inc
or
cmp
inc
xadd
push
jb
inc
add
scas
cmc
mov
sbb
test
inc
in
jmp
sub
out
lahf
ja
mov
fwait
std
jg
fsubs
pop
insl
xchg
fldenv
std
mov
fidivl
xor
insl
addr16
insl
sub
pop
ret
xor
movb
icebp
scas
pusha
adc
inc
insl
xchg
fimuls
mov
xchg
mov
ficoml
aaa
adc
int
out
and
push
pop
dec
cli
push
roll
fwait
pop
sub
fcomps
dec
inc
dec
ficoms
outsb
scas
pushf
push
popa
mov
ds
or
sbb
sub
aaa
arpl
xchg
stos
inc
push
mov
ljmp
xlat
mov
xor
mov
out
aaa
cmp
in
add
add
sub
bound
data16
rorb
shl
push
mov
rcrl
aaa
arpl
ljmp
mov
es
add
sbb
js
aam
jne
and
push
out
adc
in
add
loope
outsb
xchg
xor
push
xor
gs
sub
lret
movsb
xlat
xchg
lcall
test
push
xor
sti
add
inc
xor
in
dec
mov
mov
xchg
push
test
push
pop
pop
icebp
outsb
mov
ret
loop
in
sti
mov
sub
mov
int
out
pushf
repnz
jbe
jl
or
rcl
dec
cmp
or
cltd
shr
push
imul
mov
and
push
out
and
jmp
orb
ret
pushf
imul
nop
into
mov
cmp
aas
jg
mov
sti
mov
fsts
ret
jbe
cmpsb
mov
cwtl
in
and
fwait
mov
xchg
divl
sub
mov
les
cmp
mov
mov
xchg
and
push
xchg
outsb
in
out
dec
jg
inc
xor
or
mov
repz
adc
popf
les
stos
push
add
push
sbb
mov
les
int
and
inc
jl
mov
cwtl
sbb
nop
jle
jge
jnp
jle
js
lds
push
mov
out
push
mov
imul
adc
imul
dec
shlb
push
xchg
aam
ljmp
pop
xor
ds
or
mov
fcomip
inc
push
xor
stc
mov
lods
outsb
sbb
add
idivb
mov
arpl
adc
xchg
inc
movl
ss
fbld
mov
iret
or
mov
cmp
sahf
ja
inc
cmp
adc
pop
xchg
fdivrp
pop
pushf
aas
add
jne
fildl
xor
xchg
mov
daa
jns
dec
imulb
adc
pushf
push
sbb
movsl
in
sbbb
roll
int
loop
repz
sub
scas
gs
xchg
and
pop
xor
jge
jae
cmp
adc
xor
fstl
pop
dec
out
into
repz
shlb
dec
mov
push
xchg
mov
pop
adc
or
inc
mov
movsl
cld
or
lahf
cmp
movsl
and
fmul
leave
lods
mov
lcall
scas
dec
sbb
dec
jmp
sbb
js
fwait
pusha
mov
in
lret
dec
lock
add
fucom
add
lea
jl
and
xor
imul
xchg
xor
loopne
push
adc
icebp
sub
or
pusha
imul
in
sbb
mov
fwait
out
je
outsb
dec
cmc
inc
sub
mov
cltd
adc
es
mov
xchg
or
add
lds
cmpsb
inc
push
jns
sbb
mov
push
popa
or
or
xor
mov
mov
pushf
ret
pop
in
fistpl
dec
jno
sbb
lret
mov
push
xchg
xor
push
jg
xor
xor
adc
das
mov
loop
test
push
ss
or
loop
add
sub
rcrl
xlat
aad
jecxz
daa
pop
jbe
aad
inc
cwtl
mov
cmp
fsubrl
cwtl
pop
repnz
xor
aad
xor
fstpl
pop
int
std
mov
ja
imul
adc
push
out
out
inc
xchg
popf
pop
mov
xrelease
scas
xor
icebp
add
loop
pop
cmc
rcrb
ss
out
lret
xor
cmp
xlat
mov
lods
aad
lods
push
adc
js
pop
add
mov
shrb
sbb
dec
mov
jnp
dec
aas
dec
jmp
iret
cmc
icebp
rcl
repnz
in
lcall
sub
mov
shrl
std
fwait
into
movsl
pop
inc
xor
fimuls
fisubrs
gs
add
jns
inc
test
and
cmp
mov
aam
clc
push
mov
shlb
jno
push
and
sbb
bound
scas
inc
mov
dec
ret
or
mov
xchg
xchg
push
testl
pop
mov
leave
ds
pop
sub
sbb
fwait
test
repz
out
jnp
push
in
push
cwtl
jne
cwtl
and
rcrb
ror
data16
not
cwtl
xor
sarl
je
sarb
iret
mov
out
lods
stc
stc
mov
or
popa
sub
aas
dec
loopne
fs
inc
mov
test
loope
std
push
std
int
jl
scas
adc
dec
xchg
mov
lock
fistl
daa
call
cwtl
sub
and
lret
ficoms
clc
mov
sbbb
push
aas
adc
fidivrs
pop
lcall
bound
fnstsw
cmpb
mov
push
rolb
mov
mov
inc
js
aaa
xchg
adc
xchg
sub
aad
int3
xchg
in
adc
sbb
sub
mov
adc
jns
add
or
test
mov
lock
int
addr16
outsb
clc
lret
rcrl
fstl
mov
or
fsubrl
in
add
mov
stos
xchg
mov
xlat
out
rcrl
in
sub
xor
mov
xchg
lock
call
or
cmp
test
inc
mov
push
pop
fstpl
mov
xchg
push
pusha
out
loop
mov
push
mov
mov
pop
or
loop
cmc
outsb
ja
cmp
and
sarb
movsb
popf
rorl
pop
sub
sub
push
pop
sub
pusha
insb
add
jle
pop
dec
and
sub
xor
xchg
mov
lds
sti
push
inc
push
or
xlat
repz
push
pop
jp
jge
xchg
inc
and
out
or
cs
rorb
movsl
popa
arpl
rcll
fcoml
bound
mov
popf
divb
cmp
rclb
pop
in
cs
mov
cmpsb
mov
sub
pusha
aad
cmp
mov
ja
push
scas
lock
icebp
out
lods
mov
adc
add
pop
pop
jo
lds
sub
insb
mov
mov
cmc
imul
imul
mov
cmpsb
movsb
in
clc
and
inc
leave
pop
mov
jae
and
pop
cmp
push
lahf
pop
pop
push
hlt
idivl
stos
sbb
and
ret
xchg
xor
mov
testl
ljmp
jnp
push
xlat
pushf
adc
movsl
jo
flds
and
adc
jp
jge
jp
mov
sahf
test
outsl
jmp
jle
subb
inc
and
shll
sub
sub
push
sub
std
xchg
inc
inc
mov
sbb
dec
push
and
outsb
dec
pop
sbb
jmp
enter
rcrl
insb
lret
out
sub
sub
or
int3
repz
add
sub
negl
test
imul
cwtl
out
mov
movsl
in
mov
inc
fisubrs
movsb
out
lods
in
and
cmp
ds
push
mov
and
sub
sub
xchg
add
add
mov
xchg
jb
pop
jmp
stc
outsb
or
jecxz
insb
loop
int3
movb
mov
repz
jle
int3
daa
out
push
jg
adcb
mov
cmp
jb
movsl
dec
adcb
fxch
out
dec
fsubs
std
add
arpl
or
lock
je
jns
jo
add
gs
call
pusha
cltd
add
cwtl
mov
sub
jg
push
pop
dec
je
fiaddl
mov
mov
test
sub
and
cmp
ljmp
cmp
jge
sub
ja
orb
sbb
mov
jle
add
popa
lods
push
incb
mov
dec
add
arpl
inc
fcompl
testb
movsb
pop
xor
push
ss
std
inc
xchg
stc
sbb
in
or
inc
push
or
lret
sbb
sbbl
repz
lahf
fiadds
das
fadds
into
cs
pop
movsb
rcrb
mov
inc
inc
push
mov
pushf
nop
aas
mov
test
mov
add
mov
jle
movsl
cmp
dec
test
clc
inc
clc
mov
fwait
mov
and
mov
lock
shlb
loopne
je
jo
push
xor
ret
fdiv
push
rorl
add
lahf
xor
adc
push
loope
sbb
cmp
out
mov
xor
andb
dec
je
movsl
stc
repz
xor
loop
fnsave
test
adc
xchg
movl
mov
and
nop
xchg
rcr
mov
imul
arpl
fsts
or
mov
icebp
in
fs
adc
dec
lock
xor
aam
das
push
add
inc
mov
and
mov
or
fdivrp
dec
xor
in
icebp
sti
jp
xor
sbb
xorl
das
cmp
std
pop
aad
pop
add
fwait
pop
fistps
cltd
pop
adc
popa
xlat
rcll
adc
xchg
test
popf
pop
stc
iret
pushf
sub
xor
or
cltd
xchg
cli
fsubrs
test
mov
out
lds
mov
mov
fwait
ret
dec
add
repnz
lcall
jbe
popl
push
dec
mov
imul
pusha
xor
gs
clc
loopne
jo
pop
lcall
movsl
cli
shlb
into
push
rclb
add
xchg
testb
lret
pop
lds
and
aaa
lret
adc
insb
dec
pop
loope
out
xor
pop
imul
cmp
sbb
ljmp
orb
xchg
lods
cmc
dec
jmp
fcmovnbe
mov
cmp
mov
xor
or
inc
jae
sbb
jp
lahf
arpl
aas
push
out
lods
sahf
test
loopne
test
push
inc
cmp
rol
sub
shll
jp
pop
mov
scas
pop
push
jns
push
dec
sbb
sbb
mov
xor
sub
cld
cmp
mov
jmp
jp
arpl
in
sub
mov
cmpsb
pop
xor
add
stos
pop
mov
dec
add
and
ljmp
stos
push
rolb
jb
mov
dec
mov
sbb
dec
push
sahf
pusha
add
fcoms
shlb
pop
mov
and
inc
pusha
cwtl
cwtl
add
inc
pop
push
inc
dec
mov
dec
xchg
addr16
inc
insl
add
ret
ret
inc
popa
mov
insl
adc
in
inc
sub
cmp
aam
jp
lret
fldl
js
outsl
js
jecxz
iret
int3
push
aam
lret
bound
push
mov
xchg
push
mov
popa
fidivl
push
fucomip
negl
jmp
loop
neg
mov
inc
or
test
je
adcb
cmp
cmp
sbb
add
sub
jecxz
jp
mov
bswap
int
mov
lods
loop
xor
repz
push
mov
jo
cs
test
lock
pop
mov
lods
adc
xchg
mov
das
xchg
xor
push
loop
stos
inc
jns
mov
test
add
dec
nop
push
push
add
fstpt
push
into
xchg
test
push
cmp
fstl
sbb
fwait
jecxz
das
in
insb
and
push
lds
leave
das
push
iret
pushf
mov
adc
push
cmpsl
fsubrl
lcall
adc
xchg
mov
mov
mov
dec
pop
out
pop
xor
iret
cmpsb
jle
shr
mov
inc
les
pop
and
or
rorb
out
std
cmc
lahf
pop
xchg
dec
jne
and
pop
sti
push
xor
test
jg
loop
adc
push
dec
inc
and
test
xor
adc
push
add
mov
mov
icebp
sbb
lahf
mov
sarl
and
jmp
movsb
ret
loope
mov
test
sub
xor
push
arpl
jbe
mull
mov
and
cmpsl
mov
loope
insb
xchg
mov
icebp
xlat
test
mov
sub
loope
cmc
push
shll
stos
nop
enter
push
shlb
inc
xchg
mov
add
pop
test
mul
scas
jns
dec
ret
cmp
push
add
mov
dec
pop
jnp
cs
std
push
out
lret
mov
iret
out
add
int
dec
js
push
mov
sahf
cmp
lods
xchg
rcr
cmc
lret
popa
or
xor
lret
adc
imul
dec
cli
push
jne
or
pop
test
mov
sub
jl
les
inc
aad
xchg
adc
or
push
loopne
jge
mov
loopne
or
or
out
inc
imul
stos
stos
cli
or
mov
roll
movsl
pop
and
xor
cmp
int
test
sti
aad
in
aad
cmp
ja
dec
fbld
xor
push
inc
add
ret
stos
out
dec
or
sub
mov
in
scas
adc
xchg
jl
sbb
jno
ret
filds
mov
sbb
xchg
pop
mov
dec
jns
dec
adc
cmp
xchg
mov
jno
push
movsl
pop
cmp
cmp
int
ss
es
rcl
out
jno
cmpsl
or
jl
lods
rep
lcall
jge
and
mov
sbb
jge
xor
insl
cli
pop
dec
push
pop
hlt
pop
pop
pop
imul
add
adc
jg
add
imul
leave
test
add
inc
das
pusha
adc
and
mov
push
int3
rolb
enter
or
mov
dec
push
inc
loope
testb
cltd
jno
pop
into
pop
xchg
or
push
hlt
sar
and
jge
xor
movsl
jle
adc
lea
cs
sub
stc
cmp
mov
jge
fistps
push
xor
xchg
cs
pusha
stos
inc
sub
lods
pushf
push
shr
jge
and
shll
jge
mov
cmpl
dec
sub
add
jae
testb
and
call
test
mov
dec
dec
sub
aaa
mov
lahf
repz
cli
push
lret
sub
xchg
pop
pusha
ds
xchg
xchg
in
test
insb
mov
and
xor
cmp
sbb
mov
push
jae
adc
push
sahf
clc
orl
in
jb
insl
and
hlt
repz
adc
pop
sub
push
mov
adc
inc
mov
sti
mov
shlb
jle
cwtl
push
into
jp
xchg
gs
nop
push
lods
ss
fiadds
jl
lret
push
out
cmp
and
xchg
mov
loop
or
and
popf
sbb
outsl
mov
cmpsl
mov
push
imul
mov
out
adc
fisttpl
pop
jmp
adc
aaa
leave
inc
add
push
jg
pusha
pusha
push
or
je
outsb
js
dec
icebp
adc
ljmp
jmp
add
mov
xor
fidivl
mov
out
lods
pop
int
or
push
pop
cmpsb
ret
fistpll
cmp
adc
inc
cmp
pop
dec
test
cmpsl
pop
addr16
sbb
pop
insl
lret
loope
or
pop
add
int3
or
mul
sbb
mov
fldt
inc
lret
leave
mov
or
dec
scas
loope
pop
adc
not
xor
push
inc
cltd
mov
pop
aad
in
push
jnp
sbb
in
in
cltd
mov
ret
mov
adc
loop
aad
cld
insl
faddl
aaa
pop
pop
shrl
les
jle
movsl
pop
jae
mov
push
pop
cmp
or
sahf
in
lods
lods
inc
and
loopne
mov
in
pop
lcall
ret
ret
andb
mov
sbb
push
inc
orb
push
cmpb
sub
imul
data16
xor
lahf
pop
xchg
or
test
movsl
xchg
test
shlb
pop
jb
cmp
test
cwtl
aas
mov
cs
popf
pop
jns
pop
daa
mov
jbe
lret
aad
mov
clc
shl
daa
int
jbe
and
jecxz
inc
inc
mov
dec
ljmp
xchg
adc
aaa
aad
bound
mov
sarl
xchg
in
jne
loope
sahf
decl
inc
sahf
jmp
xor
hlt
ja
rorb
mov
or
and
xchg
fiadds
adc
dec
pop
rolb
cs
adc
mov
mov
scas
adc
outsb
dec
cmp
pop
push
mov
imul
mov
inc
in
out
fisubl
bound
pop
xlat
mov
dec
cmp
outsb
shll
push
insl
das
push
mulb
lods
sbb
dec
jle
dec
cmp
andl
jge
cwtl
rcll
aas
mov
sbb
arpl
ljmp
lret
jmp
sbb
xchg
call
xor
ret
xlat
shlb
xchg
outsl
sbb
cwtl
mov
and
sub
fdivp
nop
dec
cmp
aas
dec
pop
mov
mov
mov
movsl
movsl
mov
fdivr
icebp
mov
adc
adc
adc
pop
bound
sbb
cmp
leave
rcll
mov
popa
fcomip
and
in
faddl
in
cmpsl
lret
or
add
xchg
xor
in
fisttpl
decl
in
out
out
loopne
jns
jecxz
jg
test
mov
mov
jmp
push
out
insl
out
and
rcrl
mov
in
inc
popa
fistpl
inc
xor
lock
sub
sub
pusha
lds
fadd
cmp
or
inc
adc
inc
dec
fld
sub
cld
aam
add
aaa
pop
mov
cvtdq2ps
xor
sbb
xchg
cmp
cmp
cs
dec
mov
hlt
push
hlt
in
sub
fadd
mov
in
fbstp
lock
nop
call
out
xchg
push
and
cmpsl
std
scas
xorb
push
mov
mov
and
mov
push
imul
add
sub
lock
xor
push
hlt
jl
hlt
loopne
imul
movsl
add
sti
bnd
test
repnz
nop
test
aaa
mov
and
in
jmp
lea
sahf
add
fucomip
mov
mov
addr16
and
or
dec
mov
int3
add
je
dec
insb
insl
cs
sbb
mov
add
mov
ficoml
pop
mov
dec
addr16
pushf
pop
shll
shrl
inc
test
jo
sub
adc
mov
dec
pop
mov
dec
xchg
js
incb
movsb
mov
fsubl
push
sub
enter
pop
outsb
cmp
incb
rcrb
or
xchg
cmp
and
cld
out
fdivrl
adc
scas
xchg
jo
sub
jnp
lahf
pop
xchg
lods
fstpl
adc
cmp
jo
lahf
dec
pop
ja
dec
ret
dec
push
pushf
jecxz
inc
sub
fwait
adc
add
insb
pop
sbb
js
push
repnz
mov
subl
mov
test
and
adcb
or
dec
in
call
jnp
int
fdivr
push
pop
jge
ret
and
pop
dec
cmpsl
jne
cltd
pop
or
popf
lret
rcrb
adc
in
cmc
jne
xchg
pop
mov
jmp
add
rcrb
xchg
add
push
into
sbb
dec
xchg
dec
fsubrs
or
adc
and
in
jo
push
dec
pop
jp
mov
dec
sbb
add
ret
pop
jecxz
movsl
fsubr
sahf
xchg
sti
or
cmc
cmp
jae
push
dec
fs
xchg
dec
or
mov
mov
pop
repz
mov
push
xor
mov
adc
cs
ljmp
jnp
repnz
mov
cmpsl
cwtl
push
repz
inc
push
mov
mov
mov
and
mov
adc
cmc
movl
nopl
or
rorl
ss
add
jbe
add
mov
ficomps
xchg
dec
mov
repnz
scas
cmp
loop
xchg
or
push
jb
xlat
outsb
outsb
ss
data16
pop
inc
in
xchg
inc
aaa
xchg
pop
push
xchg
lods
pop
stos
adc
or
jmp
rorl
data16
test
cs
xchg
fcmove
dec
xchg
pop
sub
loop
push
mov
xor
fiaddl
or
popf
jnp
ret
fs
fstpt
xor
lds
lods
repz
int3
adc
into
xchg
insl
sub
addr16
dec
jge
sub
mov
mov
leave
int
sub
inc
inc
mov
push
pop
pop
xchg
std
filds
add
sub
repz
inc
mov
clc
gs
mov
daa
sub
sbb
mov
mov
fs
lea
cli
jecxz
fcmovne
daa
sahf
stc
mov
or
sbb
les
xchg
sub
and
xor
int3
lcall
jge
scas
push
mov
and
xor
dec
lods
mov
xchg
jne
and
outsb
pop
subl
jne
arpl
jb
shlb
sub
pop
dec
jae
cmpb
ret
mov
cmp
adc
or
idivl
pop
jl
imulb
or
shlb
mov
xlat
fldl
sub
aaa
frstor
xchg
incb
rcr
add
mov
jp
mov
stc
out
int
imul
cli
adc
jmp
xor
fwait
mov
std
test
xor
sbb
and
pop
push
mov
jae
and
pop
cmp
pop
and
push
jns
lods
mov
push
pop
and
loopne
daa
cltd
out
out
push
stos
imul
sub
sahf
pop
xchg
sbb
and
hlt
dec
mov
pmullw
pop
stos
les
and
cli
stc
rclb
ja
mov
int3
dec
fisttps
push
in
in
mov
ret
pop
sub
in
dec
nop
cwtl
ds
and
push
pusha
lcall
sub
or
jl
fstl
cmp
cwtl
dec
sahf
in
into
dec
sub
mov
subl
popf
or
int3
lods
ljmp
push
add
xchg
sub
xorl
out
or
mov
and
into
testb
sub
fisttpl
jl
dec
cltd
nop
inc
jp
ficoms
mov
xchg
out
and
xchg
cmp
hlt
mov
jmp
cmpsb
mov
shll
mov
test
inc
cmp
push
lods
into
pop
mov
nop
lds
data16
jl
outsl
aas
int3
cmp
and
dec
cmpsb
loope
or
popa
sbb
inc
inc
jae
sub
in
rcrb
insl
adc
dec
je
mov
lods
jnp
movsl
and
jae
ror
fcoml
jl
sub
in
pop
jo
add
inc
insb
sub
sub
hlt
add
adc
orb
xor
sub
dec
and
cmp
roll
mov
into
ja
aas
and
cmp
jns
dec
inc
xor
in
repz
dec
add
mov
mov
test
mov
cwtl
mov
inc
cmp
or
push
pop
outsb
sbb
xor
xor
jg
jnp
shrl
xor
pop
xchg
lods
add
outsb
cwtl
pop
dec
test
hlt
fsubl
lahf
push
imul
sahf
test
push
popa
cwtl
xor
call
pushf
inc
leave
das
repz
sub
into
in
xorl
sub
shrl
push
call
lods
mov
cwtl
insb
jae
sub
je
fstps
inc
cli
or
mov
das
push
scas
rcl
pop
mov
out
xchg
mov
inc
ss
xor
outsb
or
push
jg
div
jnp
add
inc
or
dec
outsl
call
sub
shlb
in
push
cltd
sub
and
xor
inc
inc
ss
mov
lret
stos
adc
sub
add
jge
hlt
inc
int
or
frstor
jge
les
add
xor
jp
outsl
test
and
mov
test
cwtl
xchg
or
jnp
jae
inc
or
dec
mov
and
or
dec
adc
lret
add
leave
mov
push
pop
sub
mov
test
arpl
mov
mov
lret
out
xor
js
jne
push
add
je
out
or
fdivrp
and
out
fists
adc
mov
ds
or
pusha
test
add
lcall
fcmovne
out
push
outsl
inc
jecxz
mov
xchg
adc
ds
mov
add
sub
jo
xor
mov
addr16
cmpsb
pusha
mov
mov
adcb
inc
sbb
cmp
jg
xor
popa
xchg
adcl
lahf
dec
ds
pop
cmp
repnz
lds
cmp
repz
loopne
push
std
arpl
loope
addr16
and
sti
dec
xor
ja
test
sub
fwait
pop
shrb
loopne
lcall
imul
dec
fs
inc
out
addr16
daa
std
push
fs
jb
scas
test
les
in
xor
pop
pop
clc
or
mov
fsubrs
rcll
jmp
cmp
mov
insl
mov
pushf
sbb
fcomps
fs
mov
arpl
imulb
fisttpll
les
mov
out
dec
pop
leave
sbb
add
insb
lds
scas
out
imul
inc
dec
dec
push
sarl
ficoms
iret
outsl
movsl
mov
shl
jp
push
jo
dec
push
sub
cld
test
inc
sahf
pop
mov
jle
xchg
stos
mov
or
in
je
pop
sbb
push
sahf
test
dec
fidivrs
arpl
ds
jmp
sbb
jmp
add
cmc
aaa
int3
stc
popf
icebp
or
mov
fnstenv
lea
lret
mov
test
adc
imul
sub
push
and
or
imul
pop
jmp
cmc
fcompl
leave
test
cli
das
sbb
pushf
daa
ficompl
mov
xlat
xchg
dec
or
inc
xlat
xchg
push
sbb
pop
xchg
sub
lret
shll
or
repz
test
or
push
mov
insb
cmp
lret
ret
rcrl
out
cmp
fyl2x
push
or
into
add
cmpsl
jge
mov
lret
adc
mov
push
test
add
jnp
dec
mov
sub
out
sbb
subl
xor
neg
lret
lea
push
sub
mov
sbb
stos
ljmp
cs
sub
mov
imull
outsl
out
fdivs
add
pop
cld
adc
dec
arpl
scas
stos
stos
xor
xchg
scas
pop
shr
movsl
mov
pop
xor
mov
pop
mov
jmp
cmp
add
imul
sbb
xor
pop
call
stos
inc
vphaddwd
adc
pop
inc
decl
out
cli
sbb
and
pop
js
mov
mov
jecxz
and
ljmp
pop
fstpt
cmp
mulb
dec
cmp
sub
mov
fldl
add
and
dec
imul
sub
pop
lret
rcr
clc
sbb
dec
jecxz
jnp
pop
outsl
imul
pop
lods
xchg
dec
mov
les
movl
rorl
rorl
sbb
xor
sbb
stos
push
pushf
adc
lods
ja
das
mov
es
mov
push
ljmp
fisttpll
cs
enter
xor
jae
sbb
pop
jp
pop
mov
jno
int3
mov
adc
popa
nop
mov
mov
cmpl
lock
loope
std
cmpsb
shlb
loop
lret
and
add
orl
cmp
mov
dec
inc
leave
insl
cmp
ret
sub
out
les
dec
add
mov
jns
sbb
inc
push
shll
paddd
into
notl
lret
out
adc
lods
xchg
gs
ror
in
jmp
out
push
mov
adc
or
lret
xchg
outsl
pop
ret
icebp
stc
aas
fsubl
outsl
mov
mov
imull
fwait
or
dec
mov
ds
inc
aad
or
lock
jecxz
mov
and
hlt
insb
int
cmp
into
mov
lock
pushl
and
mov
and
insl
push
add
dec
repz
lods
test
jecxz
imull
pop
xor
in
sbb
fisubl
jbe
pop
daa
adc
jecxz
push
mov
xor
mov
pop
cmc
rolb
push
leave
sbb
pop
out
push
stos
out
loope
gs
lea
or
pop
rcl
xor
xlat
test
push
add
xchg
adc
idivl
cmp
xchg
cmp
push
mov
sbb
ret
xlat
movsl
mov
jns
in
push
push
fadd
sarl
jae
xor
mov
xchg
add
inc
mov
adc
jg
out
sbb
jae
stc
sub
outsb
mov
dec
ficoms
pop
pop
cmp
push
int
lods
test
out
addl
stos
xor
cmp
cmc
in
bound
cmp
fcoms
sub
mov
js
inc
dec
xor
out
into
xchg
aad
adc
and
and
xchg
popa
fists
sahf
sub
cmpsb
inc
stos
mov
pop
loop
and
push
aaa
sub
aad
mov
cld
sbbb
pop
roll
dec
lods
xchg
jmp
cwtl
sub
fisubl
mov
test
adc
iret
sub
movsb
out
call
rorb
xchg
int
or
jmp
rclb
icebp
xchg
dec
and
les
xlat
push
mov
jge
xchg
add
fildl
data16
jnp
fists
fmuls
mov
dec
or
mov
aam
incb
and
dec
lret
pop
cmp
test
lea
and
jge
fstpt
pop
cmp
or
xor
lods
outsl
mov
xchg
loop
cs
pop
orb
mov
sub
pop
inc
stc
jge
arpl
and
jae
inc
cld
jne
gs
shrl
dec
sub
test
jg
test
inc
mov
xorl
popl
pop
mov
or
call
lds
js
fmull
test
lret
pop
lret
inc
je
push
loop
xchg
pop
test
mov
enter
pop
inc
jmp
loopne
hlt
sub
mov
mov
xlat
cmp
out
and
add
dec
cmpsb
mov
xchg
add
sub
pop
sti
or
sub
sub
cmp
jge
mov
das
sbb
inc
jl
mov
dec
cli
pop
dec
or
stc
cs
adcl
push
xlat
mov
cmpsl
outsl
mov
pop
cli
shlb
cli
ret
or
sbb
inc
in
sbb
and
jmp
dec
jp
test
popf
mov
dec
out
addb
ss
gs
movsl
into
mov
cmpsb
add
sti
shlb
xor
fs
out
push
repnz
dec
ss
in
ss
dec
pop
dec
call
jecxz
push
test
adc
pusha
cmp
inc
push
push
cwtl
cli
cmp
aaa
call
mov
mov
jns
xor
fmull
sbb
xor
test
inc
adc
push
or
pop
cmc
and
or
insb
aas
fbld
mov
xor
push
or
add
outsl
rorb
mov
in
cld
inc
adc
fwait
mov
aas
dec
mov
add
movsb
jp
push
inc
js
lret
cmp
or
and
xchg
mov
movsl
popf
repnz
or
sbb
jbe
mov
rcl
sbbb
push
sbbb
dec
and
test
push
push
movsb
imul
ds
iret
pushf
stos
dec
jnp
dec
ret
xor
lahf
mov
mov
sbb
xorl
xor
fdivrl
daa
nop
fwait
lds
lahf
imul
or
and
pop
lock
xchg
xchg
push
lock
cmp
xor
push
stos
inc
pop
outsb
add
xor
adc
arpl
lahf
jecxz
mov
out
imul
mov
inc
pushf
jmp
std
aad
repnz
push
inc
sbb
adc
ja
insl
imul
lret
and
jae
fldenv
sub
xchg
insb
add
pop
call
jp
outsb
cmpsl
stc
es
sub
jnp
jo
cltd
pop
test
out
push
lret
test
sbb
mov
test
addb
sbb
dec
dec
or
adc
fcmove
es
loop
add
imul
and
sbb
push
add
mov
or
mov
out
pop
sub
mov
fsubrl
xchg
cmpsl
or
stos
mov
dec
adc
add
mov
in
jb
addb
push
in
das
insl
inc
adc
jecxz
cmc
out
push
maxps
movsb
fwait
xchg
mov
into
mov
faddl
in
mov
jo
cmc
push
repnz
inc
xchg
int3
aad
dec
iret
rol
fdivrl
xor
dec
mov
cltd
add
xor
js
in
pusha
enter
out
xchg
xor
sub
cmp
xchg
iret
push
dec
ret
adc
pushf
xor
insb
cmpsb
cmp
dec
adc
pop
out
add
call
cmp
outsl
iret
mov
clc
mov
mov
rclb
into
and
movsl
ja
insl
ret
dec
movsl
or
or
out
arpl
insw
test
fwait
jl
pop
pop
or
add
and
mov
xchg
push
in
add
movsb
jne
fsubl
cmp
lret
ds
sub
rcl
das
mov
arpl
aas
cmpsb
pushf
mov
out
add
inc
cmpsb
shrl
mov
pop
clc
or
insl
std
xchg
cmp
pop
shrl
jecxz
insb
mov
fst
jmp
jbe
sub
ds
inc
test
add
es
and
fnstenv
ret
mov
out
repnz
lret
jne
sbb
dec
int3
lock
inc
aaa
sbb
mov
lock
push
dec
fisttps
and
daa
test
mov
clc
inc
lock
int
cltd
loopne
lea
rorl
popl
movsl
ret
and
hlt
cs
adc
sub
dec
call
dec
xor
es
shld
popa
ss
testl
jg
mov
ljmp
sti
sbb
push
xchg
sahf
cmp
push
xor
cltd
and
dec
xchg
les
and
adc
lods
add
mov
sub
jge
testb
std
bound
fldt
es
popf
push
dec
in
or
lret
inc
enter
rclb
lahf
or
or
sbb
je
push
xchg
lock
cld
jmp
lcall
inc
lods
jne
test
outsl
xchg
xor
aam
push
pop
and
addr16
hlt
sbb
in
lret
push
rol
adc
dec
mov
mov
faddp
jns
push
xchg
arpl
ds
loop
mov
xor
adc
test
rcrb
mov
data16
adc
movsl
or
mov
pop
mov
testb
or
add
push
lods
shlb
mov
lcall
rcl
les
out
sbb
lret
xor
jnp
es
aaa
adc
dec
mov
in
push
sbb
cmpsl
xchg
or
shrl
in
pop
shll
xor
mov
sbb
cmpsb
mov
scas
jg
pop
mov
pop
loopne
rcl
std
rol
iret
dec
test
xor
mov
adc
test
mov
sub
sbb
sbb
loopne
and
push
pusha
lret
sbbb
mov
inc
jle
pop
scas
push
push
cwtl
int3
stc
pop
inc
mov
pushf
std
xlat
shr
xchg
xor
jns
jge
jecxz
test
dec
or
movb
mov
sub
and
popa
into
or
pop
dec
lahf
dec
jecxz
out
test
dec
imul
mov
cmpsl
jl
aam
lret
mov
sub
cmp
push
cld
bound
outsl
push
fwait
mov
jge
rcr
call
pop
jnp
int3
cld
rcrl
lahf
mov
push
inc
sbbl
fstpl
jmp
int3
pop
outsl
cmc
add
xchg
orb
outsb
dec
out
push
xor
test
add
cli
cmpsb
clc
test
xor
jl
xchg
pushf
loope
adc
ja
sub
or
jbe
fldcw
cs
mov
mov
mov
dec
cltd
mov
jno
sahf
dec
cmp
pop
popf
inc
js
jl
gs
mov
repz
repnz
adc
hlt
xchg
ret
push
stos
cmovs
and
addl
sub
jmp
cmp
dec
decb
popf
les
mov
and
shr
daa
pop
mov
fidivrs
push
jecxz
popa
mov
sbb
inc
and
lahf
pop
ret
mov
inc
cli
jmp
pop
mov
in
jmp
stos
jl
push
call
rcrl
jmp
xchg
jge
addr16
subl
inc
sbb
outsb
lds
lock
adc
inc
mov
mov
or
inc
push
sbb
add
and
push
push
fwait
xchg
hlt
test
sub
icebp
push
bound
mov
rolb
outsb
stos
push
ss
pop
add
and
pop
pop
dec
push
ret
cmpsl
ss
pop
mov
or
test
jno
jno
outsl
ljmp
pop
push
cmp
call
adc
inc
push
adc
jmp
mov
add
pop
cltd
adc
adc
push
cmc
fcoml
dec
sub
mov
ffree
add
movsb
lcall
ds
pop
dec
add
cmp
test
xor
sbb
xlat
cli
xchg
dec
sub
scas
inc
rorb
js
mov
xor
sbb
push
mov
movl
nop
add
or
test
add
notb
xor
push
out
negb
sub
inc
cmp
push
lods
ret
jl
inc
cmp
std
dec
es
mov
movsb
mov
das
mov
lret
pop
xor
scas
fwait
repz
mov
mov
imul
ret
int
insb
repz
sahf
nop
pushf
lods
test
mov
or
cmp
inc
pushf
js
nop
lods
test
and
mov
inc
push
push
dec
and
xor
mov
cmp
jmp
push
mov
and
push
int3
into
fsts
lock
ds
gs
test
outsl
inc
inc
mov
jg
mov
mov
add
push
adc
cmp
xor
jo
outsb
or
push
lahf
mov
xor
xchg
stos
imul
leave
pop
test
xor
push
cmp
jmp
push
xchg
push
inc
cmc
jecxz
sub
rcrb
ret
or
out
ret
xchg
pop
ret
and
stc
xchg
push
mov
in
lea
rorl
xorl
sbb
bound
inc
adc
out
test
inc
clc
js
or
icebp
repz
add
cmp
lods
mov
mov
fsubl
sbb
inc
cmp
ret
out
insl
ss
xlat
pop
or
sub
and
pop
sub
adc
scas
or
adc
sahf
fdivp
mov
repz
leave
repz
imul
faddl
adc
jmp
jno
jbe
rcrb
imulb
lret
rcr
cmc
pop
mov
repz
adc
loop
adc
dec
xchg
in
dec
lahf
fbstp
cmp
jb
lahf
and
or
notl
inc
int
mov
insl
cli
cmp
mov
xchg
or
mov
das
int
jl
fisubl
out
int
test
push
rolb
pop
pop
lds
pop
pop
inc
hlt
jns
push
sbb
and
inc
mov
arpl
add
les
sbb
fwait
scas
push
int
mov
xor
mov
adcb
loopne
cmpb
dec
faddp
adc
and
sti
lret
in
sub
fs
call
loopne
fcom
js
call
sbb
int
jmp
push
cmp
leave
mov
lea
mov
movsb
adc
out
out
popa
addr16
in
jl
mov
daa
xor
adc
fstpt
lods
insb
and
fbld
inc
out
add
les
outsl
mov
adc
pushw
jb
jl
dec
repnz
mov
sbb
bound
inc
dec
push
into
scas
cmp
into
test
xor
lods
pop
or
or
cwtl
rol
add
push
push
sbb
shlb
inc
std
jecxz
pop
mov
pop
and
jo
jl
jecxz
cmp
mov
adc
jge
loop
imul
jne
and
shlb
pusha
xchg
loop
push
dec
pop
or
adc
or
shll
pushw
aas
xor
pushf
std
cwtl
pop
jnp
jp
xchg
imulb
sahf
sub
xlat
lcall
movsl
xor
ljmp
fisttpl
adc
inc
adc
push
and
xor
add
mov
push
mov
mov
cmpsl
orl
add
sbb
leave
push
inc
mov
std
aaa
pushf
shlb
gs
push
jbe
dec
sub
xchg
aam
mov
push
repnz
fidivs
and
dec
add
push
push
push
stc
lcall
in
js
scas
loop
cltd
xchg
sub
imul
sarl
sub
mov
cmpsb
loopne
ret
pop
mov
adc
lret
aad
push
leave
xchg
fwait
jg
lea
mov
mov
mov
inc
jecxz
jbe
xlat
loope
dec
addr16
sbb
jp
pop
cmp
adc
jnp
loop
iret
dec
xchg
insl
rcrb
adc
cmp
mov
leave
movsb
jae
rol
and
mov
sub
mov
xchg
pop
ss
repnz
mov
xchg
inc
xchg
fucomip
pop
push
inc
and
adc
loopne
testl
jg
sbb
enter
pop
push
or
lock
adcl
xchg
mov
jmp
cmpsb
mov
xor
or
jecxz
mov
stc
mov
cli
scas
sbb
cmpb
lcall
jbe
mov
inc
sbb
mov
cs
rolb
pop
js
filds
mov
roll
sbb
and
sub
fsubl
daa
fwait
xor
sbb
aam
mov
insb
enter
jno
xchg
mov
cmp
xchg
xchg
outsl
jl
cmp
jae
lret
std
pop
xor
int
dec
xor
add
in
cmpsb
in
and
popa
in
cmpsb
sar
rolb
xor
mov
cld
jnp
pop
pop
add
pop
mov
pop
cwtl
fwait
aad
cmp
imul
jno
mov
aad
add
imul
inc
push
int3
negb
sub
outsb
jae
cmpsb
jb
aad
fdivrs
mov
sub
out
dec
mov
mov
lods
xor
adc
mov
fwait
stc
loopne
leave
dec
push
jg
mov
test
les
fcompl
mov
sub
mov
sbb
jmp
and
scas
or
cmp
xchg
pop
add
xorl
jbe
or
push
pop
xor
outsl
cmp
pop
dec
mov
inc
fimull
mov
imul
pop
sub
fwait
mov
or
mov
pop
jp
pushf
pushl
mov
pop
loopne
inc
insb
xchg
jmp
cmc
loope
mov
xchg
scas
scas
daa
mov
shrb
cwtl
sub
lcall
xchg
shll
sbb
cmpsb
aad
xlat
dec
rcll
outsl
push
inc
add
lret
cmpsb
dec
dec
call
imul
outsb
idiv
in
adc
push
push
scas
sub
push
test
fucomip
cs
pop
loope
jo
inc
jnp
inc
push
test
stc
sbb
jbe
sub
fdivs
and
fcomps
test
call
pop
jl
aas
fistps
in
cwtl
into
and
aad
push
and
xchg
in
or
leave
mov
jae
lahf
jecxz
popf
dec
scas
out
insb
cmp
fldenv
mov
sbb
adc
test
lea
or
mov
push
pop
add
into
test
stos
fldt
adc
and
rol
stos
js
cld
pusha
add
xchg
std
cmp
lcall
cli
lods
cmp
push
lea
fstps
fidivrl
inc
pop
das
cmp
adc
mov
test
ja
rcl
ret
lock
gs
lds
push
xchg
sahf
and
pop
bt
or
not
xor
pop
rcrb
test
or
lcall
add
cmpsl
test
roll
dec
and
ret
lds
push
nop
or
das
out
push
arpl
jecxz
loopne
mov
mov
add
inc
test
jp
mov
jae
and
ret
mov
sub
and
xchg
mov
lret
mov
xorb
mov
pop
push
mov
xchg
xchg
push
cli
outsl
bound
mov
hlt
jp
in
xchg
cli
rclb
clc
xor
jne
negl
enter
mov
movsb
insl
sub
not
ret
dec
or
mov
nop
cmp
and
mov
out
and
test
dec
idivb
test
push
push
dec
clc
aam
pop
or
xor
cmp
xchg
cmpsl
xlat
or
adc
add
cmp
leave
push
and
adc
jle
test
aam
mov
test
sbb
xlat
inc
push
or
mov
lods
inc
bound
mov
call
xchg
es
loopne
imul
clc
and
andl
outsb
mov
sbb
or
test
insb
push
shlb
add
lret
and
sar
test
enter
mov
xlat
xor
inc
dec
mov
popa
add
add
shlb
movsl
xchg
xchg
sub
ja
add
aaa
icebp
aam
fmulp
pop
lock
dec
clc
add
xchg
cmp
stos
sub
inc
dec
jle
stos
jbe
adc
jo
jnp
pop
inc
lods
lods
jl
call
pop
mov
inc
clc
orl
dec
popf
in
pop
rorb
or
mov
movsl
sbb
and
inc
int3
andl
cli
cli
out
and
mov
outsl
int
cld
leave
xchg
bound
add
push
mov
or
test
sub
adcb
call
insb
sub
push
lods
push
push
mov
xchg
in
xor
repnz
shrb
sbb
pop
hlt
push
push
dec
emms
jne
mov
imul
cmp
mov
imull
adc
movsb
xchg
push
ja
sub
or
cmp
dec
popa
adc
les
shlb
and
fwait
mov
cmpsb
push
outsl
push
call
mov
cli
test
jno
jge
mov
sbb
out
repz
bound
mov
ret
jmp
jg
xchg
adc
mov
pushf
xchg
repz
inc
pop
sub
adc
cmpsl
sbb
test
aad
pusha
or
lods
aam
or
ljmp
jge
xchg
aam
mov
insl
mov
loop
cli
ds
mov
cmp
xchg
std
lret
mov
pop
jecxz
pop
test
sarb
push
jns
inc
mov
cs
ret
inc
mov
bound
dec
pushf
cmp
mov
gs
sbb
mov
lods
in
jle
pushf
inc
mov
dec
push
aam
gs
jno
lret
mov
mov
rol
ja
add
jb
push
or
inc
nop
lahf
xor
xor
xor
loop
shld
and
test
pop
pop
ss
xchg
shll
and
in
mov
push
inc
mov
dec
inc
icebp
movsb
add
sbb
fmull
in
call
xchg
sub
movsb
jecxz
aad
pop
and
dec
jne
adc
push
imul
cli
out
cli
or
lcall
adc
leave
push
xchg
cmp
repnz
rcr
inc
cmpsb
jb
fsubs
push
es
xor
push
pop
mov
push
xchg
lret
sbb
jl
cmc
add
data16
addr16
jge
dec
aam
sub
push
pop
adc
mov
sti
jb
cmp
jns
loop
mov
push
lods
das
xor
jns
sbb
divb
cmp
dec
push
pop
xor
mov
movb
pop
and
inc
pop
das
sar
sbb
sbb
push
fbld
mov
jle
hlt
into
mov
cwtl
sbb
filds
sahf
repz
leave
cmp
jbe
idiv
sbb
pushf
or
push
js
popa
or
clc
loope
lds
lahf
mov
add
sub
stc
pop
jl
cmpsl
add
cmpsb
nop
mov
jge
ljmp
negl
loope
nop
fnstenv
aaa
je
mov
xor
nop
mov
das
xor
ss
lods
and
test
test
lret
push
sbb
push
sbb
lahf
sarb
or
xor
in
scas
cmp
inc
adc
pop
pushf
cmpsb
and
mul
jl
icebp
push
cli
xor
shrb
jns
or
clc
xchg
pushf
rcr
cld
cmp
shlb
jmp
add
bound
inc
int3
mov
adc
cmp
and
scas
xor
in
mov
sub
adc
jae
and
stos
or
pop
es
addb
repnz
cmp
mov
or
jae
jl
adc
sub
outsb
js
sub
out
dec
or
jnp
mov
sub
mov
mov
and
popa
xchg
stos
adc
lea
pushf
mov
inc
mov
repnz
loope
loop
addr16
fmul
les
rcr
leave
mov
fstpl
jmp
cmpsb
lcallw
jne
mov
popf
add
pop
cmc
xor
std
cmp
adc
movl
cmp
xor
insb
cltd
push
cltd
out
and
iret
je
dec
xchg
jnp
xchg
mov
pop
int
pop
cltd
out
scas
xor
data16
repz
add
ss
popa
mov
or
lret
mov
imul
cmp
pop
xchg
jno
jne
aam
cmp
mov
jl
std
xchg
sbb
jmp
pop
push
mov
push
test
xor
das
imul
mov
sbb
popa
push
sub
cmpb
adc
push
test
inc
in
out
dec
and
jns
fisubrs
xchg
mov
xchg
push
jno
or
ret
push
mov
jbe
adc
stc
cmpb
roll
xchg
pop
icebp
loope
arpl
inc
int
mov
dec
jno
adcl
insl
mov
mov
nop
mov
pop
aas
scas
int
in
pop
popa
aam
adc
cld
xchg
in
arpl
push
mov
and
or
ret
dec
jecxz
add
cmp
dec
in
sbb
hlt
add
xchg
jnp
push
cmc
adc
fdivl
vcvtsi2sdl
inc
push
cs
mov
xor
or
and
testl
repz
pusha
cmpsb
ja
xchg
sbb
inc
arpl
dec
sbb
pop
cmp
test
mov
xor
sub
fnstenv
fistpl
mov
arpl
into
jecxz
outsl
stos
insb
sub
inc
adc
sbb
sti
shll
nop
mov
sbb
pop
sbb
jns
arpl
or
jmp
scas
arpl
scas
popa
mov
push
jmp
fldcw
cmp
in
scas
sub
and
add
adc
test
cmp
add
xor
xor
enter
insl
mov
mov
cmp
adc
pop
mov
cld
jae
movsl
mov
ds
popa
cmpsb
sub
or
les
sub
lcall
pop
jmp
lahf
push
dec
scas
adc
lret
dec
sbbb
push
adc
inc
pop
shll
mov
push
fdivs
loope
push
call
cmp
sub
aad
dec
rclb
adc
pop
mov
push
xor
cmpsl
xchg
push
lret
aaa
movsl
in
call
and
jbe
icebp
shl
cmc
fildl
xchg
xchg
lahf
int3
fdivl
mov
push
fcmovnbe
daa
stc
aaa
sbb
sahf
fsubrp
pop
das
loopne
imull
arpl
imul
pop
mov
and
stc
mov
jne
inc
jle
test
mov
mov
fadds
xchg
jbe
and
rcl
shlb
sbb
jle
jmp
mov
dec
or
push
ja
or
in
cwtl
cld
std
or
cmp
int3
jbe
cli
cld
test
out
xor
mov
xchg
clc
xor
mov
cltd
rcll
mov
mov
mov
push
aam
inc
rcl
frstor
fsubrp
mov
cwtl
push
imul
cltd
in
rolb
and
inc
dec
pop
xchg
ret
mov
testb
push
lock
shrb
lret
jmp
dec
sub
int
mov
lods
mov
jno
lahf
lods
xchg
je
mov
dec
fistps
sar
inc
mov
pop
addb
ljmp
arpl
mov
gs
mov
dec
push
lcall
fidivl
mov
es
push
push
cmp
xchg
clc
loope
jle
into
mov
iret
xchg
inc
es
aas
ficoml
push
filds
mov
aas
shl
lods
out
cs
cmp
lods
aad
xor
scas
push
mov
mov
push
test
jmp
and
jg
sarb
mov
in
jb
xlat
push
sub
mov
cmc
push
dec
or
sbb
ds
lds
mov
icebp
mov
cmpsb
into
imulb
inc
mov
xchg
sub
sbbb
loopne
enter
orl
mov
push
and
and
les
sbb
mov
push
stc
ds
mov
lock
push
stos
out
sub
ror
push
inc
loopne
in
jo
sbb
xor
js
aam
sbb
jns
mov
mov
outsb
and
and
jl
insl
aad
ret
aam
mov
jmp
insl
mov
xor
mov
sarl
pushf
mov
xlat
js
jp
pop
stc
imul
and
lret
xchg
maskmovq
imull
mov
out
mov
or
xchg
pop
push
jae
sbb
aad
shlb
xchg
mov
addl
addl
dec
push
fcompl
adc
push
mov
lock
pop
mov
push
scas
iret
add
lods
pop
das
mov
push
out
subb
pop
jle
mov
sub
jno
ret
mov
dec
mov
add
pop
aam
cs
ret
stos
mov
dec
dec
sbb
mov
cmp
add
daa
inc
cmp
imul
pop
aaa
cmc
lods
ret
test
lret
mov
lret
sbb
addl
inc
sbb
pop
scas
sbb
mov
cli
add
out
jno
pop
dec
jns
rcl
xchg
mov
lock
gs
dec
dec
adc
sub
mov
out
xchg
sti
fistpl
xorb
testb
in
mov
cli
test
mov
mov
out
xor
mov
push
inc
lea
jle
push
cmp
stos
pop
imul
imul
jb
pop
mov
mov
bound
jle
mov
fimull
test
movsb
push
popa
xchg
cmpb
mov
xor
dec
jle
inc
stos
inc
jns
adc
insb
ret
mov
fsub
lret
pop
mov
cmpsl
add
inc
xchg
jmp
lods
js
std
out
xor
inc
mov
cwtl
pop
insb
xor
and
pop
xor
in
pop
xchg
xchg
arpl
inc
inc
in
add
testl
or
mov
sub
xor
push
push
scas
mov
call
push
xorl
repnz
mov
cmpb
xchg
imul
mov
jle
jo
push
or
jmp
xor
fsubl
push
subl
addr16
dec
pop
dec
fwait
imul
push
lods
mov
repz
ror
aad
push
xor
dec
xlat
sub
push
push
insl
pop
les
pop
mov
or
cmp
push
incl
mov
sbb
les
push
mov
loop
inc
jle
cmp
xor
stos
sub
push
sbb
mov
pop
push
and
mov
push
orb
je
xor
repnz
jne
stos
jnp
sbb
xor
fcom
roll
sti
xchg
js
mov
lods
in
aam
not
cmpl
xchg
dec
jns
ljmp
push
xor
push
jnp
and
fcomip
cmp
daa
add
pop
dec
cmp
test
ds
dec
mov
cmc
pop
xor
movsb
stc
sub
iret
cmpb
gs
jecxz
stos
sarb
rep
cmpsl
push
adc
add
mov
ds
jnp
repz
shrl
jo
std
mov
sub
popa
sarb
repnz
mov
inc
mov
lret
stos
stc
and
pop
ljmp
pop
fucom
pop
std
jns
sahf
es
fists
rclb
xor
loope
cli
orb
sub
ret
pushf
out
cmc
sub
out
mov
mov
lcall
sbb
mov
jae
pop
sub
dec
aaa
scas
out
out
cmp
hlt
je
cs
dec
mov
mov
les
pop
inc
jp
cmpsl
fcmovb
lods
test
xor
and
pop
cmpsl
outsb
mov
fsubr
jbe
insl
mov
lock
loope
cmp
pushf
mov
xor
movsl
xlat
fistpll
jp
dec
sub
pop
mov
jnp
dec
xchg
test
mov
mov
testb
and
xor
outsl
xor
movsl
call
das
pavgb
mov
test
clc
cmp
push
adc
in
fsubr
pop
imul
insb
orl
out
push
rclw
pop
aad
das
mov
fbld
push
pop
test
mov
pop
dec
jp
mov
les
insl
xchg
mov
adc
dec
mov
rol
push
cmp
sbb
jo
pop
icebp
sub
jmp
fsubrl
pop
cmpsl
testb
addl
jae
incl
xchg
cld
xchg
sub
cmp
mov
mov
mov
dec
scas
hlt
pop
inc
enter
mov
scas
fs
movsl
loopne
add
jecxz
xchg
xchg
jge
pop
pop
push
inc
scas
idivl
int
stos
jns
loope
jmp
add
test
std
push
iret
dec
cmp
add
xchg
rcl
sbb
fs
push
js
fisttps
sahf
or
mov
not
push
dec
lods
inc
movsb
xchg
imul
push
mov
movsl
loope
push
es
jp
int3
mov
cwtl
or
movb
or
rcll
push
push
mov
aad
testl
inc
pusha
aad
mov
push
dec
jmp
mov
fisubrs
sub
dec
push
int3
pop
jo
adc
es
dec
stos
adc
enter
daa
jg
jno
pop
scas
xor
leave
add
jecxz
cli
mov
or
mov
xorl
mov
mov
cmpl
ja
xchg
ljmp
sub
rol
cmc
mov
adc
add
and
shlb
lods
pop
ss
fdiv
fwait
cli
push
jns
stc
cld
popa
mov
xchg
mov
test
push
cli
sub
rorl
cmp
mov
and
xor
pop
inc
mov
cld
jmp
inc
vdivss
fstps
insl
dec
aad
lret
scas
pop
aaa
or
sub
cs
int
fdecstp
and
sub
daa
mov
aaa
mov
arpl
and
jp
imul
int
sbb
mov
hlt
ljmp
daa
ljmp
imul
outsb
leave
inc
dec
mov
inc
fwait
mov
push
sbb
mov
adc
dec
int
mov
popf
add
ljmp
pop
dec
clc
outsl
or
outsl
or
pop
psubsw
mov
jge
lods
mov
and
inc
hlt
dec
in
sbb
sti
loope
and
mov
mov
sbb
xchg
repz
test
sbb
push
pop
push
ret
cwtl
fs
test
pop
cltd
jo
mov
into
and
mov
add
divb
inc
stos
mov
push
sub
and
pushf
je
or
in
cli
xor
jnp
in
xor
jmp
sbb
add
into
mov
dec
addr16
lcall
push
push
ds
push
rolb
cmp
idivb
decb
cmp
popf
pandn
aad
cmp
icebp
jl
cmp
fdivs
daa
stos
insl
inc
mov
mov
mov
xlat
call
mov
out
xlat
pop
inc
cmpsb
imul
and
sti
lods
ds
add
repnz
popl
mov
jns
mov
mov
repnz
idiv
std
ficoms
inc
call
lret
fists
arpl
xor
out
lcall
adc
frstor
jae
xchg
sahf
test
loope
ja
daa
inc
pop
cli
hlt
out
add
fsubl
movsl
mov
inc
das
addr16
xchg
cmc
jne
mov
dec
jp
mov
push
out
test
pop
adc
or
pop
iret
adc
aas
loope
in
bound
mov
inc
jmp
popa
sub
lods
mov
jbe
loop
xchg
pop
xor
push
mov
repz
sub
test
sbb
subl
cld
stos
and
jo
pop
lahf
pop
mov
test
adc
jo,pt
xchg
imul
test
test
mov
cmc
ljmp
adc
mov
sbb
dec
and
or
jbe
push
push
aam
sbb
and
popa
pop
shr
sub
sbb
cltd
mov
jge
fidivrl
jle
pop
imul
fdiv
mov
popf
dec
jbe
inc
push
movsl
fxch
jecxz
dec
lods
jb
test
fldl
pop
and
sub
ret
mov
rorl
mov
sbb
insb
push
inc
scas
dec
ljmp
dec
inc
insb
or
mov
xchg
push
or
int3
xchg
insb
out
test
cmp
sbb
clc
mov
add
mov
add
xor
andl
mov
cmp
leave
lds
into
cmpsb
in
or
jne
add
jae
xchg
arpl
in
daa
mov
mov
fs
into
jge
pop
xor
scas
aaa
cmp
outsl
insl
mov
push
push
mov
push
mov
lret
push
inc
out
ret
inc
aaa
insb
and
roll
adc
jno
std
and
mov
mov
mov
aam
cld
xor
lret
hlt
mov
insl
mov
mov
fiadds
daa
jp
push
push
je
adc
leave
scas
sub
dec
ret
add
mov
xor
mov
xchg
scas
lret
and
cmp
cs
mov
mov
ret
adc
es
sub
out
shll
fisubl
pop
adc
cli
push
int
mov
cmpb
in
sbb
cltd
leave
mov
lcall
repz
mov
mov
cmp
jbe
lods
push
push
pop
push
and
add
loope
pusha
jb
shlb
popa
jg
je
lods
scas
jns
or
sbb
xor
add
neg
mov
enter
ret
dec
xor
fsubr
dec
jo
push
lods
push
mov
je
and
aad
xorl
inc
jp
cmp
lea
mov
pop
es
fildll
cmpsb
mov
jae
iret
jp
sbb
jbe
cs
pop
ret
push
xchg
addb
cmpsl
adc
mov
stos
aad
out
arpl
jno
jno
int3
sahf
fs
jne
arpl
xchg
fnstsw
leave
cli
xlat
out
pop
adc
sbb
xor
xchg
ret
sbb
sti
and
xor
lds
ljmp
lret
add
sbb
push
mov
inc
sub
popa
sub
push
dec
jae
int3
sbb
jns
push
cs
mov
sbb
mov
ret
fistl
xchg
xor
mov
sti
dec
test
push
push
out
mov
push
jecxz
cmc
std
jnp
adc
inc
stc
cmp
daa
es
adcl
cmpsl
mov
sbb
popf
mov
mov
xchg
loop
aas
fwait
imul
push
pop
sub
jl
adc
adc
jl
imul
and
andl
mov
jl
jmp
js
aam
mov
cmpsb
out
lods
xor
or
cld
dec
push
je
pusha
rcll
into
and
xor
dec
loop
cwtl
jmp
out
dec
cmp
xor
mov
inc
mov
pop
dec
cmp
ficoms
fistps
dec
movsl
in
fsubl
mov
lea
gs
lods
outsl
mov
lahf
dec
pop
gs
shll
test
xchg
mov
xor
mov
dec
mov
ret
mov
dec
and
popa
cld
lods
xor
insb
xlat
sub
cwtl
mov
imulb
insb
mov
enter
nop
push
adc
mov
jb
sub
cmpsb
cwtl
sarb
xchg
inc
hlt
dec
or
jmp
push
xchg
jle
pop
test
in
scas
shl
or
andb
pop
leave
scas
pushf
lods
ss
mov
mull
aas
jmp
gs
sub
repnz
mov
pop
sbb
cmpsl
rolb
les
aad
jbe
or
cld
insb
xchg
popf
xchg
int
dec
lock
mov
addb
sbb
cwtl
mull
repz
pop
adc
test
andb
ja
push
in
adc
jo
in
std
sbb
aad
fldl
fwait
mov
inc
in
hlt
add
cmp
cmc
or
mov
push
or
cwtl
push
addb
cs
sub
stos
mov
in
movsl
into
lahf
out
cmp
test
aas
inc
iret
into
lret
pop
xchg
jbe
cs
sbb
lret
sub
cmc
fildll
rolb
jae
add
add
paddusw
push
mov
cmpsb
xorl
or
inc
dec
jbe
addb
mov
dec
pop
dec
insb
push
push
mov
jge
ss
leave
mov
inc
jae
lcall
inc
ret
push
nop
xor
adc
and
xor
cmp
push
ret
inc
ds
xchg
push
ja
xor
push
jge
jb
inc
sbb
popa
inc
ds
pop
push
mov
mov
in
cld
mov
test
xor
sub
jb
add
frstor
add
mov
xchg
jno
lds
movsl
push
mov
mov
mov
mov
cmp
insb
sarl
pop
rcll
in
jp
sbb
cwtl
fldenv
je
and
pushf
not
adc
mov
add
out
xor
adc
aas
sbb
cltd
xchg
cld
dec
mov
lahf
cmp
aad
xor
adc
cs
inc
out
sub
shll
jb
mov
add
push
call
mov
xchg
mov
fnstsw
mov
pusha
mov
je
jmp
repnz
xor
sti
pop
xchg
push
lods
push
test
fsts
push
stos
shll
ret
sbb
jg
into
push
mov
sub
cli
jl
fcompl
lods
in
inc
outsb
sarb
popf
orl
test
lods
out
sbb
idivb
mov
sbb
clc
fstps
dec
pop
xlat
cmp
dec
fcoms
xchg
inc
inc
lock
mov
cli
ficoms
mov
inc
push
stos
jnp
out
test
cli
push
loop
stc
sbb
inc
int
mov
mov
stos
fcoml
xor
mov
inc
daa
xor
sti
test
dec
cmp
je
push
mov
push
mov
stos
aam
sbb
cltd
data16
push
xor
flds
mov
daa
lea
sbb
fnstcw
test
add
rorl
js
sbb
lahf
clc
fsts
jae
jae
ss
dec
mov
cld
dec
jmp
mov
adc
mov
dec
cmp
push
sbb
cmpsl
dec
dec
pop
lods
jmp
push
jl
jecxz
into
cld
push
or
inc
popa
lods
sbb
and
add
loop
mov
push
pushw
xlat
clc
push
aam
push
pop
pop
inc
daa
inc
ret
movsb
xchg
sar
lret
cmp
aaa
mov
xchg
shrl
mov
pop
in
rcr
cmc
cmp
cmp
cmp
scas
dec
scas
enter
icebp
cmpsl
mov
andl
cmp
push
popf
add
xor
stos
pop
cmp
or
inc
mov
mov
repnz
lods
test
mov
das
pop
add
cmp
mov
ffreep
lock
in
aas
aas
and
jb
test
xchg
stos
lods
sbb
lock
daa
pop
sub
jns
aad
mov
pop
lds
cmpsl
fsubrl
mov
dec
leave
or
out
push
mov
dec
popf
insl
adc
pushf
mov
outsl
pop
push
mov
les
imull
es
or
lcall
sbb
insl
clc
sarb
aam
lret
xor
shrb
push
sbb
ret
ja
fstps
lret
xchg
mov
imul
cmpsl
pop
xchg
dec
and
outsb
sbb
into
mov
orl
cmp
sub
mov
movsb
mov
xchg
andl
ret
cmpsl
mov
jbe
daa
push
pmaddwd
jge
cmc
das
mov
pushf
mov
inc
adc
in
pop
xchg
push
xchg
ret
popf
fs
mov
icebp
js
mov
out
mov
out
fmull
inc
adc
mov
pop
fisubrl
or
mov
xor
or
fcoms
sub
into
testb
mov
xchg
push
dec
pop
iret
and
inc
imul
mov
jno
add
sub
idivb
sbb
cmp
pop
xchg
and
cmpsb
repz
add
jno
dec
inc
outsl
jmp
jg
mov
dec
aam
testb
xchg
sahf
xor
fwait
xor
nop
stos
xorl
xchg
std
jge
adc
loope
xor
dec
add
xchg
out
pop
mov
inc
add
into
insl
out
iret
push
xor
inc
or
sub
jno
imul
pop
or
mov
mov
enter
jnp
adc
cmpb
mov
movsl
jecxz
xor
scas
int
mov
popf
xlat
jo
shrb
sub
sub
pop
mov
dec
dec
lea
lret
mov
and
pop
xor
add
dec
stc
mov
aad
mov
mov
adc
repnz
mov
jmp
xor
and
mov
jnp
lret
xchg
out
out
jmp
and
jnp
and
pop
mov
pop
ss
mov
xchg
sbb
and
dec
imul
mov
mov
cmp
je
push
loop
xor
jne
repnz
cmpsl
inc
adc
dec
push
cmp
push
cmp
cld
aad
pop
dec
sub
xor
and
loope
jo
push
testb
sbb
enter
pusha
das
inc
mov
adc
enter
repnz
xchg
fwait
add
insb
push
stos
xchg
leave
std
rol
sub
jle
imul
push
add
mov
fiaddl
push
jb
push
mov
mov
imul
divl
push
rorb
sub
jns
adc
int
es
push
es
scas
aas
cli
ror
mov
into
and
xorl
test
dec
sub
xor
movsb
pop
loopne
jne
negl
xchg
daa
bound
mov
lcall
pop
lret
out
imul
dec
lea
ret
iret
aam
mov
jmp
fdivrl
mov
mov
mov
in
into
leave
jae
sti
into
jl
outsb
psubw
dec
test
arpl
push
mov
push
ja
jbe
pop
adc
out
dec
out
shlb
lods
jecxz
ss
ffree
xor
mov
mov
nop
lods
add
fwait
popa
adc
push
pushf
push
mov
cmp
adc
and
gs
adc
and
add
mov
xchg
xchg
xchg
xchg
imul
in
mov
jnp
scas
orb
pusha
pop
ret
jge
fcomps
jbe
inc
enter
sbbl
mov
xchg
je
push
push
leave
popa
jg
inc
test
add
nop
hlt
rclb
jl
mov
stc
mov
push
data16
sub
leave
addr16
scas
jne
out
push
das
pop
inc
push
cmpsb
out
aam
inc
out
imul
push
xchg
xor
mov
pop
jl
test
jno
rorb
mov
stos
dec
push
lds
jnp
leave
lea
pop
xchg
gs
loop
add
lods
gs
push
out
aam
les
dec
pusha
test
jmp
push
jo
xchg
lods
mov
inc
lds
out
mov
xchg
mov
mov
subl
rcl
inc
stos
pop
xchg
jg
clc
mov
sub
cmp
outsl
xchg
in
bnd
je
repnz
inc
push
xchg
lcall
out
orb
imull
popf
mov
xchg
inc
mov
inc
xchg
loopne
shll
pop
mov
fwait
iret
push
in
out
xor
jns
addr16
ror
stos
mov
mov
ja
push
add
ret
dec
mov
enter
jecxz
or
mov
fcmovb
loope
cmpsl
xchg
push
in
mov
xchg
in
sbb
push
fisttps
mov
outsl
stos
pop
js
sub
leave
sbb
lret
and
xor
or
in
add
cmp
cmpsb
arpl
sub
iret
pop
mov
or
movsl
jmp
aam
add
xchg
lods
push
or
jns
dec
mov
hlt
jo
xchg
mov
or
and
ss
es
shl
xor
sub
mov
stos
xchg
ljmp
shlb
into
pop
mov
sbb
pushf
lret
adcb
movsb
mov
lods
inc
cld
in
mov
bound
pop
fstl
int3
addr16
jns
je
lods
sbb
xchg
xor
fdivl
out
xor
loopne
dec
or
aad
xchg
movsb
mov
in
mov
jp
aad
jmp
inc
or
je
push
in
mov
jmp
movl
js
insl
repnz
push
out
lods
mov
mov
fisttpll
call
adc
push
push
lret
aad
xor
enter
iret
out
jg
mov
pop
cli
cmp
mov
call
push
loopne
aad
push
mov
mov
shrl
or
push
sti
outsl
nop
pop
out
jo
nop
pop
xor
sbb
or
jmp
inc
cltd
mov
adc
push
pop
cmc
inc
push
add
loope
mov
in
mov
mov
sbb
rcrl
bound
mov
cs
pop
clc
pop
out
xor
adc
inc
out
pop
sub
pop
push
jo
mov
pmuludq
add
aam
lods
lods
cltd
jmp
pop
or
or
xlat
testl
ss
stos
mov
jo
xchg
dec
pop
mov
test
arpl
enter
movsl
or
sbbl
pop
cs
add
inc
out
xchg
es
pop
test
jnp
out
stos
inc
cmp
test
lods
mov
out
pop
push
lret
pop
mov
mov
ja
ljmp
aas
and
pushf
push
nop
lock
dec
jno
test
mov
cmp
subl
inc
sbb
jne
out
lret
dec
addb
inc
in
inc
test
gs
push
aad
stos
jnp
notl
adc
out
sub
dec
cmc
and
and
aaa
fcos
icebp
mov
movsb
dec
and
add
xor
mov
or
xchg
lcall
movsl
in
lea
xor
cld
jmp
lds
lds
out
into
rcl
fnstenv
adc
jg
mov
ja
and
ds
stos
dec
into
sub
loope
xchg
cmp
and
pinsrw
cmp
ret
cld
call
push
mov
fmull
inc
sbb
inc
sub
bound
ss
sub
xchg
adc
pop
add
out
movsb
jne
test
and
pop
lods
pop
pop
and
sbb
xchg
push
push
sub
inc
call
lods
into
dec
mov
lds
iret
lods
in
test
sarb
insb
cmp
lahf
mov
pop
jl
subl
add
or
mov
pop
cli
and
bound
xor
and
ds
adc
aas
mov
test
mov
xchg
test
or
sub
adc
mov
push
rclb
mov
aad
lcall
push
in
jl
clc
jmp
xor
add
repnz
jae
pop
aam
jbe
jns
mov
mov
push
out
cmpl
xchg
subl
xorb
and
call
mov
inc
dec
adc
ret
je
or
popf
xor
lret
adc
faddl
sbb
add
push
jp
shll
test
xchg
sbb
dec
push
int
mov
sbb
jmp
mov
pop
dec
mov
lods
or
jns
lret
mov
jo
in
pop
test
or
popa
ds
popa
mov
cmp
dec
bound
mov
sbb
inc
pop
add
push
sub
stos
xor
ss
add
xor
xchg
pop
ret
mov
jae
lock
shll
cmp
cmp
ss
pop
int
test
xchg
pop
sarl
testb
int
push
ret
sub
shrb
mov
mov
out
gs
outsb
or
lret
adc
or
cmp
cmpsl
pusha
push
mov
mov
iret
adc
or
sti
adc
out
mov
mov
sbb
sub
adc
mov
mov
mov
inc
cwtl
mov
xchg
ret
lahf
aas
cltd
enter
sub
fwait
ret
mov
incl
or
mov
mov
inc
bound
fdivs
cld
out
cmp
mov
scas
ret
mov
jo
sbb
rol
fiaddl
test
je
loope
insl
add
fsubrl
cmp
data16
out
cmp
movsl
mov
lcall
add
sub
dec
mov
jbe
push
xor
insb
and
mov
sub
push
mov
xchg
jp
mov
xorl
lods
xor
in
fcoms
lds
test
push
jns
mov
adc
jae
divl
push
lahf
add
notb
ds
cmp
aam
cwtl
xor
lahf
and
mov
or
mov
adc
sbbb
ljmp
cmp
sbb
repz
ficomps
pushf
add
cmp
inc
jge
jge
push
mov
gs
ja
sbb
push
pop
test
xchg
add
sahf
dec
out
add
ja
adc
outsb
mov
lret
lock
cmp
es
xor
addl
mov
int
dec
jnp
insb
insl
jmp
cli
dec
adc
andb
and
jge
jecxz
add
outsl
xchg
pushl
cmpw
sub
xlat
fs
pop
cmp
push
scas
or
call
jb
mov
mov
inc
push
fcoml
pop
add
ret
ja
enter
inc
sub
push
sub
mov
xchg
pop
dec
leave
lds
add
faddl
lock
out
xchg
lds
clc
adc
or
gs
fadd
sbb
aas
imul
adc
pop
frstor
adc
xor
stc
add
scas
inc
sub
inc
pushf
in
sbb
sahf
xchg
btc
push
out
sub
xchg
lds
int3
nop
or
lret
popa
cli
adc
mov
lods
ret
inc
or
sbb
aaa
push
sar
cmpsb
push
mov
fnstenv
shll
clc
int3
cmp
lea
popf
pop
das
fimuls
push
cmc
xchg
in
push
xchg
sahf
loopne
fs
loop
sti
clc
sbb
inc
cs
out
push
dec
dec
pop
jno
ror
and
jbe
inc
xor
xchg
sub
jnp
clc
popa
inc
push
sbb
fs
stos
cmc
or
pop
and
xor
fwait
cli
insb
xor
out
out
psubusb
loop
dec
sbb
xor
in
adc
aad
fs
movsb
xor
mull
add
in
sbb
adc
mov
add
and
pop
sbb
nop
ljmp
scas
xchg
sub
ja
adc
sub
repnz
mov
xor
lret
pop
mov
sub
in
xor
ja
cs
loop
je
aad
sbb
pop
ja
js
repz
fwait
je
sbbb
sarl
cmp
cmp
lcall
mov
fs
daa
outsl
iret
in
mov
mov
mov
negb
lock
popa
jge
stos
pop
mov
jne
xchg
add
mov
inc
push
xchg
mov
int3
xor
addr16
or
movntps
inc
or
adc
xchg
xchg
jmp
mov
dec
fsts
mov
daa
push
test
push
or
sti
xchg
jge
nop
lds
push
popa
mov
cmp
xchg
testb
adc
fistps
mov
repz
jae
aas
jle
lock
and
or
sub
ljmp
jge
lods
stc
mov
pop
inc
addl
loope
sbb
cmp
mov
ds
sub
fs
xchg
aas
xchg
jnp
adc
xchg
dec
and
cltd
jmp
in
scas
lret
pop
pop
clc
pop
bound
scas
ret
inc
push
or
jne
ja
sub
or
shlb
out
aaa
dec
sub
pop
push
mov
jno
pop
jle
push
mov
jbe
pop
in
pusha
jmp
insl
push
or
sub
mov
adc
or
test
xor
xchg
adc
or
mov
and
fs
xor
jecxz
sub
movb
sub
push
test
fs
xor
rclb
shlb
and
and
iret
mov
popf
cmp
xor
mov
enter
mov
cmp
imul
mov
icebp
lds
mov
cmp
dec
in
shll
mov
into
jl
inc
xchg
inc
adc
fisttpl
nop
ja,pt
out
pop
das
sub
insl
rcl
dec
ja
xchg
xchg
shll
dec
leave
rolb
rolb
rcrl
xchg
ret
enter
mov
loopne
in
dec
inc
movsb
scas
or
sbbl
add
adcb
subl
mov
xchg
notl
sbbl
jg
pop
lcall
sbb
jno
adc
add
push
and
fxch
jl
hlt
add
cmpsl
lods
dec
test
test
subl
push
push
loopne
jmp
imul
insb
scas
fldenv
fisubs
push
push
mov
cmp
push
mov
jl,pt
push
push
inc
jl
lret
mov
pop
fldt
popa
xchg
leave
jae
pop
leave
mov
orl
xor
xor
iret
and
rorl
fdivs
dec
hlt
out
call
popa
lods
test
inc
xor
mov
mov
out
xchg
xor
decl
cmp
ljmp
xchg
xor
shrd
movsl
sbb
inc
mov
mov
scas
cmpsl
pop
xor
repz
fidivl
into
dec
sub
xor
aam
cmp
int
hlt
xor
xchg
popa
and
xchg
adc
mov
lods
aas
jmp
mov
push
insb
orl
cmp
loop
mov
and
out
in
sub
pop
sbb
insb
out
test
and
icebp
sti
data16
sub
pop
arpl
imul
sbb
jmp
mov
inc
xchg
and
sahf
push
inc
mov
insb
inc
adcb
xor
movsl
das
int
ds
daa
in
dec
push
add
fwait
or
mov
xchg
orl
and
push
inc
mov
mov
dec
pand
sub
fisubl
pop
add
push
mov
loope
lds
aas
cmp
add
sub
fnstsw
inc
out
aam
lahf
dec
scas
repz
pop
cmp
bnd
popf
in
aam
sbb
xlat
jmp
lea
retw
std
fnstenv
adc
jg
lret
fs
pusha
insl
push
xor
dec
out
pop
pop
or
xchg
dec
dec
sbb
test
fmulp
or
daa
aaa
fbstp
xor
int
in
push
and
cmp
test
iret
cmpl
fnstenv
imul
pusha
lea
push
xor
iret
lret
sbb
jbe
mov
outsl
loopne
xor
push
mov
pop
push
fildll
push
data16
jne
dec
call
jmp
pop
cmp
cmp
jge
and
sahf
popa
jns
test
add
xor
push
mov
sbbl
push
cmp
dec
insl
aas
shlb
or
sub
xchg
lea
outsl
insb
mov
push
test
mov
subl
lea
push
int3
and
jb,pt
adc
and
sar
lahf
adc
inc
cld
xchg
jp
sub
cli
and
outsb
jp
xchg
jle
xchg
mov
jp
push
sarl
cltd
pop
jae
push
inc
pop
rcrl
dec
jg
test
cmp
push
cmpsb
faddl
daa
repnz
in
dec
in
mov
pop
test
adc
add
pop
and
fdivr
fldl
in
and
xchg
lods
inc
pop
inc
lock
je
cmp
xchg
dec
roll
pop
inc
aaa
std
sbb
jge
cmc
sbb
lds
xor
and
jp
test
mov
cmpsl
push
sub
inc
call
lea
push
sbb
movsl
fbld
xchg
jns
inc
dec
popf
divl
push
push
in
sub
jp
lea
mov
aas
jle
xor
inc
jno
ja
call
aam
push
dec
or
adc
sbb
rcrb
lea
inc
andb
ret
aad
inc
inc
xchg
xor
sub
sub
cmpsl
sahf
cmp
aad
adcl
sub
test
mov
sbb
cmp
js
dec
mov
xor
mov
cmp
lock
repnz
aad
movsb
lock
or
in
jbe
ffreep
sbb
add
add
test
test
in
cs
jns
cmp
mov
push
mov
insl
adc
cmc
das
rorl
inc
mov
mov
mov
faddl
push
jns
fs
mov
jae
xchg
mov
push
pusha
push
inc
or
in
sub
push
mov
sar
enter
cmpl
sub
in
cmc
aad
add
pusha
std
inc
movsl
pop
push
lods
shrl
ds
fistpl
fcomps
and
scas
inc
mov
flds
ljmp
test
cld
repz
cmp
lcall
xor
shll
dec
jnp
and
push
repnz
nop
lret
lahf
xchg
push
xor
test
out
into
cmp
push
flds
scas
pop
fwait
call
adc
and
lret
jo
cmpsb
cmp
out
cmpsl
out
mov
inc
ret
inc
dec
test
movsl
and
xor
bound
pop
adc
aam
ljmp
push
xor
mov
aaa
ds
mov
sbb
rorb
arpl
adc
stos
and
and
out
addl
dec
jo
push
jae
jge,pt
cwtl
pop
adc
enter
inc
cmc
repnz
add
push
mov
or
mov
data16
pop
cs
fwait
sahf
pushf
sbb
ss
mov
xor
xchg
sbb
nop
sbb
out
pop
rorb
aad
testb
rol
dec
jo
dec
sbb
jge
fmul
sub
stc
xchg
pop
or
pop
adc
cmp
sbb
xor
mov
inc
mov
inc
sbb
call
xor
sub
inc
movl
test
xchg
mov
aas
cmp
mov
mov
sbb
jb
inc
jo
scas
or
pop
adc
lods
in
jb
int
arpl
jns
mov
xchg
adc
addr16
jb
sub
mov
shr
out
mov
inc
jge
scas
pop
push
push
outsl
call
pop
pusha
xor
cmpb
insb
jns
lods
pop
flds
push
lret
push
outsl
pop
jmp
scas
aad
mov
pop
loope
mov
sub
jno
sbb
sar
into
cmpsl
bound
je
cmc
mov
ss
cmpsb
mov
fistps
mov
sub
sti
mov
test
xchg
outsl
push
sub
out
and
cmpsl
xchg
idivb
lahf
xchg
pop
cli
popa
test
out
imul
or
cmp
loope
jns
mov
sub
das
test
icebp
out
fwait
or
inc
popf
mov
fs
cs
out
into
out
addr16
cltd
pop
out
cmp
in
rep
mov
mov
outsl
and
adc
xchg
fisubrl
and
pop
inc
or
clc
and
cli
gs
pop
call
mov
mov
roll
xchg
and
add
cli
nop
inc
pop
adcl
pop
in
mov
adc
cmp
push
xchg
test
jns
mov
dec
in
cmp
mov
and
scas
jnp
or
in
hlt
repz
mov
cld
fimuls
fdivl
pop
mov
mov
or
rclb
xor
mov
sub
push
ds
imul
outsl
jg
and
adc
scas
mov
and
xchg
rol
movl
insl
or
bound
lret
or
je
rcll
jg
ret
loope
cmpsl
dec
xor
push
dec
and
jae
hlt
test
in
jnp
mov
pushf
lods
pushf
sbb
xchg
fmull
test
lock
mov
rcr
icebp
ss
loopne
lods
xchg
sub
insb
cmp
xchg
pop
ret
adc
add
pop
mov
cmp
mov
outsb
in
add
push
arpl
jecxz
and
jg
popa
js
pop
push
ljmp
cli
sub
adc
lock
imul
inc
inc
cmp
xor
fcmovnb
shlb
out
push
fwait
xlat
inc
and
dec
mov
fsubrl
fldl2e
repnz
test
cmp
gs
mov
imul
mov
lods
cmp
fidivl
cltd
mov
or
loope
pop
and
popf
xchg
addr16
xchg
push
and
push
int3
mov
out
mov
pusha
faddl
push
mov
sub
inc
cli
out
repnz
push
in
mov
pop
sarb
imul
xor
jns
ret
sarb
lahf
swapgs
mov
dec
cmp
sub
mov
test
int
andl
push
mov
imul
int
loopne
xor
out
adc
std
xchg
fstl
es
aaa
and
cwtl
cmp
adc
adc
daa
xchg
jns
inc
add
jge
test
xchg
mov
insl
or
jmp
inc
lret
test
sub
add
push
popa
aam
mov
fs
pop
lret
and
push
sub
nop
xchg
xlat
jns
mov
testb
sti
mov
or
out
gs
and
ror
lcall
xor
sub
sub
inc
movsl
or
xor
inc
mov
loopne
scas
push
fcom
xchg
sbb
loop
cmp
xor
dec
cmp
stc
mov
out
xor
jb
jae
and
push
cmp
lds
scas
jle
and
stc
sub
dec
lods
jo
ret
jne
arpl
push
mov
sti
stos
or
mov
lock
les
push
pop
xor
rcrb
pop
mov
addr16
mov
add
outsl
cmp
dec
jnp
mov
jmp
push
in
imul
inc
loope
inc
lea
lods
mov
sub
sbb
scas
fsubrl
jb
in
call
negl
push
mov
sbb
in
js
stc
inc
hlt
shll
ret
adc
xchg
fisubrs
shll
jge
idiv
aas
pop
xlat
mov
pop
stos
adc
and
sbb
add
and
mov
mov
xor
mov
mov
xchg
sbb
and
mov
mov
xlat
int3
lods
xor
test
in
push
jb
lds
shrl
repz
adc
rclb
repz
inc
rolb
stos
mov
inc
popa
es
mov
inc
add
loope
mov
inc
add
ja
shrl
xor
mov
pushf
icebp
ret
mov
sti
inc
mov
clc
push
mov
mov
mov
mov
and
push
dec
lret
testl
adcl
jb
xor
dec
mov
leave
or
outsl
test
add
lret
inc
mov
cmp
stc
mov
dec
mov
fwait
gs
xor
push
sub
aam
clc
into
ljmp
mulb
cmp
dec
mov
cli
fistps
mov
ror
stc
data16
xor
loopne
cmp
ficoms
js
arpl
jb
adc
repnz
cmpsb
loope
popl
mov
loop
outsb
sbb
mov
add
imul
mov
xchg
mov
cmpsl
call
out
mov
inc
xchg
mov
loopne
scas
addps
in
or
dec
loopne
push
nop
lods
xchg
test
push
jo
xor
or
sbb
adc
jnp
jbe
cmpsl
int
mov
int3
dec
dec
je
inc
movsl
icebp
adc
or
out
insl
inc
popa
imulb
test
xchg
xchg
pop
inc
sub
jp
cltd
into
push
aas
xlat
pop
jno
in
test
xchg
mov
pusha
sti
sub
inc
movw
sub
iret
rol
dec
lret
rolb
and
xor
dec
repnz
push
pop
mov
and
dec
shlb
mov
cmp
hlt
jp
mov
pop
dec
popf
adc
in
sbbl
sub
sub
mov
jb
sbb
or
push
push
movsl
iretw
dec
sbb
add
outsl
lock
pop
cmpsb
mov
gs
test
stc
push
jb
aad
add
xor
cmp
sbb
sub
jbe
dec
aas
dec
push
shrl
push
or
cmp
cmp
add
xor
ss
les
adc
pop
push
jo
pusha
subb
adc
ds
jbe
out
inc
test
jp
push
pop
push
call
fimull
and
add
ds
and
ret
pop
lods
xor
jne
jmp
xchg
sub
adc
inc
bound
push
idiv
stos
and
fidivl
nop
xchg
xchg
ds
pop
fidivrs
xchg
pop
out
mov
mov
sarb
jae
call
cmp
and
les
xchg
xor
xchg
ret
xchg
pop
dec
out
and
cmpsb
mov
push
inc
mov
stc
out
jne
inc
or
mov
xlat
shll
jle
mov
pop
or
jo
adc
mov
sub
lea
xchg
shlb
enter
jg
dec
or
push
pop
jle
mov
out
scas
xchg
nop
test
push
fs
push
jle
out
pop
sub
sbb
xor
sbb
insb
sbb
jl
je
inc
cmp
out
push
push
inc
mov
test
xor
xor
jne
enter
test
test
fnsave
add
jnp
rcrb
or
or
loop
adcb
or
inc
inc
cmpsb
test
jne
sbb
shrl
notb
mov
movsl
push
imul
aaa
lock
stc
fs
mov
mov
repnz
jecxz
lret
or
shll
mov
scas
cmpsb
mov
pop
fsubs
rol
shrl
jbe
and
lods
add
xor
mov
lods
sbb
xor
xor
xchg
and
mov
pop
int3
iret
push
mov
icebp
imul
adc
pop
andb
int
mov
jp
rorb
mov
dec
sub
call
dec
or
roll
int3
dec
mov
test
inc
adcl
sbb
lahf
jo
push
dec
mov
sub
loopne
ret
mov
inc
cmp
hlt
dec
call
imul
insl
mov
push
jnp
mov
int
iret
repnz
das
les
mov
pusha
inc
clc
cmpsl
mov
sub
or
movsb
jnp
cmp
push
sub
xchg
lcall
push
sub
dec
ret
out
push
push
invd
or
subb
push
mov
xor
jo
leave
shrb
mov
les
jp
or
sbb
mov
pusha
rorl
cmpsb
mov
mov
fdivrl
test
and
mov
xchg
loop
cmpsl
out
pop
pop
mov
sbb
aas
or
jne
jp
add
data16
xchg
pop
aas
fs
ret
sub
mov
sub
int3
jo
jb
push
std
dec
pop
jns
popl
inc
xchg
addr16
cli
push
push
mov
sahf
mov
or
pop
sbb
add
xor
jmp
mov
sbb
jle
dec
sbb
pushf
pop
xor
cmp
push
pop
ds
bound
rclb
sbb
inc
mov
outsl
int3
mov
jecxz
jno
aaa
ds
sahf
xor
movsb
mov
pop
push
int
scas
mov
pop
fsub
cmp
mov
rcl
cli
inc
xchg
in
xchg
adc
mov
dec
xchg
sbb
arpl
adc
movsl
out
mov
call
in
pop
iret
jmp
imul
mov
arpl
movzbl
add
and
addr16
inc
inc
lods
and
or
mov
lret
cmp
mov
sahf
cltd
in
dec
cmp
adc
mov
and
xchg
ss
sahf
jecxz
out
dec
inc
mov
pop
push
xchg
push
mov
xchg
fucomi
loop
mov
adc
pop
fldenv
xchg
mov
test
shrd
pop
push
xor
add
add
lea
lcall
lock
and
out
add
outsb
adc
lret
fwait
pop
repz
mov
hlt
mov
jno
push
stos
addl
jecxz
popa
mov
mov
mov
and
inc
inc
mov
lcall
mov
mov
jb
lcall
adc
xchg
jecxz
mov
bound
mov
mov
push
std
adc
pushl
loope
loope
pushf
dec
int
stos
pop
mov
cmpsb
into
ja
lock
push
pushf
push
inc
aaa
roll
cs
mov
xor
call
sahf
scas
xchg
movsl
xchg
and
or
mov
fidivl
insb
ret
xchg
sahf
dec
mov
inc
cld
mov
mov
inc
js
mov
push
push
daa
leave
loop
mov
jno
adc
arpl
push
dec
pop
jbe
sar
or
bound
cld
inc
in
mov
xor
jne
jnp
rcrl
pop
aam
lret
xchg
call
sbb
and
stos
and
in
mov
xchg
pop
push
cmp
in
in
sub
push
scas
and
xchg
pop
mov
push
jb
leave
dec
out
test
push
mov
cmp
pop
aad
test
jecxz
jne
outsb
cmp
push
sbb
inc
xorl
test
mov
jbe
add
jmp
sbb
dec
push
outsl
stc
pusha
roll
lahf
push
and
and
mov
dec
xchg
pop
push
push
jbe
popf
imul
cltd
cmp
lods
pop
nop
xor
es
leave
fcom
cmpsb
xchg
push
repnz
jecxz
cmp
es
std
mov
mov
test
fnstenv
shl
repnz
mov
dec
popw
mov
mov
leave
mov
mov
add
cmp
loope
sub
push
dec
inc
enter
mov
pop
jns
sub
adc
sti
add
std
fnsave
popw
jmp
dec
shlb
lds
sub
imull
mov
jg
add
ret
test
adc
mov
and
repnz
repnz
loope
push
mov
int
loop
jnp
jnp
jns
mov
movsb
leave
push
insb
cmp
ss
movsl
sahf
rcrl
fcomps
sbb
and
sub
mov
les
daa
sbb
out
addr16
das
mov
stos
imul
push
dec
xchg
loop
jle
jae
pop
shr
repz
fnsave
xor
dec
subb
jge
push
shlb
call
xor
add
inc
aaa
nop
out
or
inc
call
lcall
outsl
cmc
mov
jle
mov
shr
icebp
cwtl
fsubrs
cli
mov
jns
mov
js
push
mov
cmp
stc
inc
dec
mov
sarl
mov
mov
jl
bound
dec
fcmovnu
test
out
mov
or
mov
xchg
repz
das
ljmp
xchg
and
xlat
stos
gs
int
pop
ja
aam
aaa
xchg
mov
insb
jb
into
cmpsl
rcrb
mov
in
ret
shl
ss
fwait
mov
pop
mov
inc
sub
cmc
outsl
mov
xchg
pop
shl
mov
lcall
dec
jo
xorb
adc
add
cmc
mov
mov
insb
fs
sub
jb
dec
fsubl
mov
pop
jl
loopne
push
and
xchg
or
stc
mov
jo
mov
inc
lahf
test
mov
in
mov
leave
leave
sub
mov
pop
sub
nop
push
enter
inc
nop
add
icebp
cwtl
adc
sub
adc
pop
push
aaa
adc
inc
jmp
and
pop
idiv
sbb
je
xchg
and
insl
ds
imul
xor
data16
imul
aas
add
jae
loop
fs
rclb
das
lock
dec
fisubrs
fld1
and
pop
int3
test
and
fisubl
fistl
sbbl
fcoms
mov
mov
cs
rep
ja
push
je
neg
pop
fisubs
or
leave
daa
pmaddwd
scas
shrb
lret
aam
pop
dec
dec
sti
sbb
push
roll
in
push
int
dec
divb
or
sbb
and
push
shll
out
inc
outsb
add
push
mov
into
push
sbb
out
mov
pushf
ds
dec
sub
pop
in
shll
pushf
xlat
repnz
cwtl
xor
scas
mov
sbb
sbb
or
jbe
test
in
outsb
rcll
cmp
pop
pop
in
aas
ss
jbe
jge
xchg
jle
ds
in
aam
cmc
pop
cli
mov
stos
lahf
mov
sbb
adc
ljmp
or
testl
fistps
or
pop
test
in
testb
lahf
daa
les
pop
and
mov
lcall
mov
pop
stc
add
jae
jne
mov
pop
inc
push
ret
cwtl
mov
clc
fldcw
in
sbb
push
dec
inc
jae
push
notl
push
fbld
mov
mov
cmpsl
ret
shll
arpl
push
xor
call
mov
mov
int3
fwait
adc
add
dec
add
xchg
icebp
repnz
imul
xor
jb
stc
sub
jmp
xor
inc
mov
repnz
pop
std
stc
cmp
add
mov
les
fsubl
repnz
test
dec
iret
or
xor
mov
orl
sub
sbb
data16
and
loope
insb
xchg
pop
js
clc
daa
jecxz
pop
sub
pusha
dec
rorb
add
xchg
push
inc
inc
imul
mov
lds
cltd
es
popf
mov
lds
mov
adc
jecxz
and
mov
pop
shl
mov
or
or
stos
movsl
push
mov
bound
mov
adc
loop
and
sbb
add
fisttpl
cmpsb
in
push
push
push
push
xchg
cwtl
push
cmp
mov
push
jecxz
cwtl
push
sub
loop
fwait
dec
aaa
add
imul
mull
xchg
imulb
in
dec
add
enter
rcrl
hlt
das
js
lcall
insb
lcall
xor
jnp
xor
and
push
xor
std
insl
xchg
aam
and
xor
sub
xor
int3
shrl
aad
stc
or
cmp
dec
jmp
int
inc
popf
pop
shlb
jns
sti
stc
jnp
mov
xchg
jmp
lods
repz
inc
mov
popa
test
enter
pop
ljmp
cwtl
xchg
in
fwait
xchg
rolb
inc
dec
xchg
out
add
or
cltd
call
and
pop
xor
inc
pusha
aam
popf
aaa
popa
or
jbe
std
fdiv
jl
or
shll
out
xchg
inc
push
les
enter
sbb
cmp
enter
dec
push
push
mov
jae
mov
testb
repz
stc
in
jl
xchg
xor
xchg
lea
dec
orl
push
popf
sub
hlt
push
add
dec
xchg
dec
adc
fwait
xor
inc
repz
xchg
lds
mov
js
repz
jmp
xor
repnz
add
movsb
cmp
push
lcall
mov
cmp
mov
adc
add
sarb
popf
aas
testl
mov
xchg
fstps
inc
and
mov
and
mov
jo
cld
and
shll
lahf
and
into
cmpb
movsb
pop
pop
xor
sbb
xchg
xor
jg
addr16
outsl
hlt
and
and
adc
mov
mov
adc
mov
je
aam
outsl
ret
lcall
sbb
push
jle
idivb
add
cmc
sub
jle
jnp
mov
lret
shlb
test
inc
sbb
lock
or
daa
outsb
sub
push
mov
roll
dec
inc
cld
scas
add
jle
pop
inc
xlat
jnp
fs
cmp
xlat
pop
lahf
aaa
subb
in
aad
push
stc
or
xchg
xchg
dec
pusha
xchg
mov
mov
or
aad
lds
imul
and
mov
insb
cmp
stc
movsb
jns
cmc
adc
mov
aam
sub
push
adc
mov
mov
push
cmpsb
idivl
notrack
inc
hlt
jmp
xor
jns
js
imulb
fisttps
sub
les
shrl
jg
push
adc
frstor
xor
stos
out
pop
mov
and
push
clc
and
ds
dec
fsubs
dec
insl
imul
insb
cmp
mov
cmpsl
push
gs
test
fsubrs
in
adc
adc
jno
jne
mov
daa
cmp
arpl
dec
jae
push
inc
out
sbb
jbe
xchg
pushf
xchg
pop
insb
loop
or
or
aad
iret
mov
inc
nop
nop
sub
xorl
mov
push
xchg
push
das
outsb
sub
mov
jg
mov
mov
into
rcrb
xchg
jp
xchg
ss
and
xchg
push
jno
add
jb
xchg
rcll
cld
or
mov
mov
les
push
fldl
xor
jae
iret
dec
movsb
sub
dec
mov
xor
adc
es
or
test
in
cwtl
fsubp
bound
dec
add
push
daa
sarb
in
in
repz
push
pop
out
push
paddsb
adc
lods
sbb
mov
loop
push
pop
cld
pop
and
mov
ret
or
push
adc
mov
mov
mov
or
jg
pusha
cli
imul
repz
mov
lea
insl
xor
int3
sbb
jns
adc
lds
mov
mov
push
clc
inc
les
or
cmp
pop
add
sub
xchg
movsl
ljmp
imul
hlt
sbb
test
mov
out
repnz
add
xchg
xchg
ss
dec
imul
sub
push
pop
mov
cmp
xchg
mov
lcall
arpl
push
push
sub
xchg
inc
pop
shlb
iret
inc
mov
sub
es
test
pushf
sub
sti
cmpsl
jbe
pop
push
in
dec
push
sub
outsl
lods
lcall
adc
mov
ss
mov
nop
push
lret
mov
push
ret
adc
push
in
and
lea
add
icebp
xchg
ds
dec
jnp
or
sahf
jnp
xchg
inc
popa
pushf
nop
mov
jle
cmpsb
mov
fdivrl
mov
adc
xchg
push
pop
push
xchg
adcb
cmpsb
pusha
cmpsb
xchg
outsb
daa
mov
bnd
add
jne
lret
stos
repz
jle
mov
pop
scas
xor
outsl
xor
and
lods
filds
inc
out
mov
cs
sbb
dec
dec
push
js
ficoml
test
popa
and
pop
lock
rorb
add
sub
iret
inc
cmp
xchg
mov
add
mov
pop
popa
andl
inc
roll
fwait
movsl
mov
aas
icebp
xchg
xchg
adc
pop
pop
addr16
scas
xchg
cmpsl
shl
sub
cmpl
repnz
int3
push
push
add
inc
push
out
jge
call
shll
pop
mov
dec
js
shr
and
dec
out
xor
dec
lcall
or
sahf
cmpsl
xchg
push
loopne
inc
fnsetpm(287
mov
adcb
pop
push
mov
jne
xchg
mov
push
ljmp
mov
add
bound
jnp
frstor
jnp
popf
and
jp
imul
into
xchg
loopne
jge
int3
insl
in
sbb
pop
push
fsubl
pop
and
sbb
ficoms
mov
rolb
sub
xor
lock
jmp
mov
add
cmp
aaa
add
mov
push
fldcw
jp
inc
push
xchg
clc
es
fisttpll
int3
adc
cld
push
dec
push
pop
bound
fldenv
sar
into
roll
xchg
sbb
das
repz
hlt
xchg
addr16
mov
jp
jmp
xor
xchg
js
js
fldenv
cmp
ret
stos
pop
loopne
sub
cwtl
jns
clc
test
pop
outsb
loopne
push
aad
jnp
pop
inc
fwait
negb
push
icebp
in
rcl
in
mov
add
cmp
adc
jle
ret
shl
subl
adc
int3
xchg
jae
and
pushf
movl
movsl
xor
mov
add
sbb
fsubl
or
jns
stos
dec
int
sub
mov
inc
sahf
dec
movsbl
push
cmpsl
add
cmp
sahf
or
mov
das
lahf
sti
int3
shll
xchg
shlb
imul
mov
lret
clc
push
mov
jp
mov
loope
call
outsb
xchg
je
ds
addr16
icebp
jo
mov
push
icebp
xchg
xchg
jecxz
aam
nop
repnz
cli
fs
mov
in
jo
fxch
loopne
and
xor
mov
lods
inc
pop
sti
cmp
inc
outsl
movsl
add
xchg
sub
daa
pop
ja
pop
and
fidivrl
lahf
pop
push
jae
dec
adc
pop
dec
sahf
mov
push
adc
dec
mov
cmc
mov
popa
aas
call
outsl
lods
loopne
mov
into
rorl
jne
loope
or
push
imul
nop
pop
pop
leave
lret
fiaddl
push
vpor
lds
pop
sti
sti
scas
push
movsb
insb
div
jbe
fcmovnu
dec
mov
sub
sbb
insb
and
adc
cltd
or
adc
out
data16
jbe
mov
mov
xchg
mov
adc
sub
bound
jg
cmp
inc
loope
insl
pop
adcl
and
inc
std
std
sub
fisttps
add
notl
subl
mov
jp
mov
jmp
jmp
xor
stc
imul
out
data16
fiaddl
shll
jne
rcl
ret
mulb
pusha
jne
jl
nop
jno
push
cs
jb
out
adc
jbe
insl
mov
cld
cmpsl
mov
fs
and
pop
and
ret
push
fwait
mov
and
push
test
test
dec
aas
sub
int3
hlt
push
adc
push
es
aaa
pop
and
loop
aad
imul
fnstcw
inc
or
rcrl
aas
adc
add
inc
gs
jns
lods
inc
loopne
or
in
test
lea
outsb
pop
push
outsb
xchg
loop
movsl
xchg
cmp
jns
pop
push
mov
pop
nopl
push
lret
jmp
or
mov
push
into
fldl
imull
push
mov
cmpl
pandn
in
fdivl
jae
or
scas
push
out
loop
fisttpll
mov
pop
in
sub
pushf
xor
mov
xchg
sahf
xor
or
into
add
add
fisubs
xlat
push
movl
call
xchg
mov
mov
outsl
das
and
rcr
icebp
popa
cltd
loopne
out
jbe
je
jo
out
in
loop
pop
test
test
push
jmp
daa
jge
movsb
push
in
adc
dec
and
addb
sbb
mov
lcall
and
inc
push
test
out
nop
call
push
and
inc
js
ret
dec
jo
push
and
xchg
push
fpatan
jnp
js
cmc
out
fnstcw
add
fwait
imul
sbb
rorl
xlat
pop
pushf
adc
mov
xor
mov
adc
xchg
and
xchg
movsl
lret
aas
xor
sti
lea
or
aas
push
movsb
rcrl
test
psubd
nop
lahf
jno
rorl
divb
enter
movsl
lock
sub
int3
pop
incb
cli
and
cmc
lock
pop
sbb
and
lahf
into
movsb
pop
push
mov
roll
jg
in
not
sbbb
cmpsb
or
cmp
or
inc
or
push
out
push
mov
mov
xchg
enter
mov
push
mov
lods
call
mov
hlt
hlt
mov
cs
jmp
jge
cli
add
mov
adc
cmpsl
or
jbe
pop
jnp
lahf
mov
mov
out
jecxz
js
out
sbb
leave
mov
sbb
sub
repz
movsb
lods
or
inc
mov
lock
and
nop
int
mov
loop
pusha
mov
xchg
mov
test
lahf
pop
jg
jecxz
test
mov
fwait
or
ljmp
je
and
pop
daa
leave
add
xchg
xor
mov
xor
inc
stc
in
dec
mov
mov
call
cli
in
test
adc
mov
loopne
xlat
mov
imul
jle
push
sbb
fsubrl
lcall
inc
lea
mov
jp
jno
cltd
jmp
xor
fwait
xor
loopne
jge
cltd
jnp
xchg
and
inc
sub
sarb
sbb
pop
mov
mov
sub
and
cli
cmpsb
xor
stos
cmp
rorl
mov
cmp
insb
mov
es
dec
lea
mov
mov
ljmp
out
and
or
aas
lods
and
xor
dec
insl
loope
add
jecxz
adc
sbb
push
lret
data16
push
cmp
shll
rorb
mov
sbb
xchg
and
stos
roll
push
mov
xchg
addr16
ret
gs
or
fstl
cli
and
sub
dec
cmp
aas
in
test
fsubrs
js
pop
jge
inc
in
cmp
lods
and
dec
rcrb
mov
push
cmp
push
cmpsl
leave
shll
mov
dec
mov
inc
mov
cli
fistl
mov
mov
out
xchg
mov
lret
adc
xor
and
mov
jo
adcl
test
pop
js
ja
ss
imul
movsl
ss
jp
add
dec
mov
mov
pushf
jmp
and
divb
push
aas
mov
sub
lea
scas
adc
aaa
pop
repnz
xor
add
push
and
rcll
insl
dec
js
jmp
std
mov
cmp
enter
insb
dec
pop
iret
mov
mov
repz
pop
pop
mov
out
sbb
lods
sub
dec
out
sbb
mov
xchg
jo
inc
mov
not
jo
outsl
mov
shl
bound
pop
dec
pop
mov
movsl
jnp
mov
arpl
aas
shlb
pop
gs
and
js
pop
xchg
in
rcll
and
xchg
lcall
pop
push
lods
xchg
xor
popf
fldt
lods
add
xchg
mov
faddl
sbb
cmc
push
xchg
cli
sbb
enter
stc
lods
int
repnz
pop
fmulp
mov
adc
push
gs
insb
mov
hlt
rcrl
jecxz
je
jo
pop
call
shlb
or
test
adc
add
mull
pop
mov
outsl
pop
outsb
lods
roll
or
arpl
in
mov
aaa
cltd
mov
aaa
jmp
inc
mov
mov
jmp
dec
das
out
rclb
aaa
and
fldl2e
imul
xor
movsb
mov
sub
inc
sbb
call
cwtl
push
mov
pop
jl
push
mov
sub
inc
fisubs
adc
and
push
es
insb
cmp
or
jp
lds
imulb
addr16
mov
shrb
lcall
xchg
mov
mov
pusha
dec
aas
jo
cli
xor
fs
rorl
movsl
adc
and
push
leave
lods
aas
dec
jne
mov
in
pop
xchg
lahf
leave
repz
adc
lret
xlat
aaa
in
jnp
std
pop
inc
lret
outsl
mov
dec
out
inc
in
cmp
cmpl
mov
loop
pushf
pop
xor
ret
mov
into
movsb
int3
or
jmp
cmpsb
xchg
xor
push
jo
fnstcw
stos
mov
xor
sub
xor
inc
push
stos
or
repnz
shll
dec
inc
roll
cmc
mov
into
push
lcall
or
iret
icebp
pop
mov
fucomi
or
push
mov
xchg
push
jns
push
lea
cmovb
clc
and
addr16
int
test
outsl
jecxz
sbb
dec
mov
jecxz
xor
testb
sub
jns
inc
push
rorl
or
xor
inc
jns
cltd
arpl
loop
xchg
cltd
lods
loope
jmp
dec
out
rcrl
movsl
or
add
sbb
pop
filds
jnp
daa
cli
bound
dec
dec
adc
xchg
stos
inc
dec
xchg
dec
or
sbb
loopne
and
xchg
sbb
pop
in
mov
insb
mov
adc
js
mov
clc
and
js
pop
sub
arpl
sbb
mov
and
add
movsl
jle
jnp
popf
push
bound
repnz
movsl
inc
fisubl
fwait
cwtl
xchg
jns
ficoml
mov
add
popf
arpl
cmpsb
lcall
jne
xor
or
xor
ret
cmp
addl
js
rclb
iret
sub
roll
and
fst
lcall
mov
jo
pushl
fcomip
movsb
xor
xchg
ret
sbb
dec
test
and
mov
icebp
lahf
mov
out
gs
lea
mov
into
mov
mov
icebp
cmpsb
sbb
es
outsl
xor
cmp
mov
loopne
ja
jp
adcl
cmpsl
mov
pop
xchg
jmp
pop
mov
pop
outsb
cmp
or
xchg
or
cld
test
jne
ret
pop
cmp
sbb
pushf
ds
add
sbb
mov
inc
or
sbb
int
fs
adc
xor
and
jae
xchg
xchg
sub
xchg
xchg
sarl
xor
adc
pushf
fdivr
in
and
xchg
imul
shlb
lds
leave
add
movsb
add
xchg
test
out
je
pop
sbb
dec
push
add
inc
dec
and
mov
sbb
ljmp
mov
add
in
pop
pop
cld
mov
inc
bound
and
es
out
jbe
aam
xor
roll
mov
sbb
sbb
fcmovb
xchg
mov
sahf
in
pop
dec
jg
clc
mov
jl
in
andl
pop
outsb
sub
jmp
adc
or
cmc
jg
insl
lods
lret
jne
xchg
andl
fildl
das
rcll
add
jp
popa
add
mov
cmpl
test
mov
cmp
push
xchg
and
in
sub
lret
or
adc
jmp
std
sub
insb
mov
and
xlat
pop
dec
xor
xchg
test
shlb
mov
pop
pusha
jo
rcrl
sbb
lret
aam
clc
inc
add
sub
mov
pop
adc
sbb
pop
xchg
cmp
adc
jecxz
out
mov
mov
scas
or
adc
out
mov
pop
jecxz
adc
adc
dec
jg
pop
push
ret
mov
into
call
push
mov
pop
lret
or
shlb
add
hlt
test
roll
faddl
clc
mov
xchg
jmp
decb
nop
jmp
rolb
test
fdivrs
mov
insl
cmp
jne
jae
hlt
mov
push
pop
add
push
mov
in
mov
jge
pushf
mov
shlb
adc
push
rcll
jb
mov
xchg
mulb
out
sub
dec
test
les
test
call
xor
imul
ss
dec
aam
cmp
jl
cmpsl
mov
xlat
xchg
inc
inc
clc
inc
mov
push
xor
sbb
and
mov
das
lcall
push
scas
cmp
push
inc
adc
pop
imulb
sti
dec
or
fwait
sbb
pop
xor
dec
push
movsl
xchg
sub
je
out
stos
fmul
stos
out
in
test
mov
and
shr
or
arpl
mov
cwtl
and
sbb
ss
cmp
shrl
or
enter
sahf
cmp
fmull
aas
cld
int3
mov
bound
pop
and
shrb
push
shll
out
je
repnz
mov
imul
enter
lods
jbe
xor
jb
jmp
adc
out
fstpl
mov
sbb
sbb
xchg
ljmpw
and
fstpt
push
jnp
pop
stos
movb
cs
inc
jno
jecxz
mov
inc
or
xorb
sbb
out
iret
cmp
ljmp
insl
lods
and
push
fwait
insb
cs
mov
or
adc
inc
or
fadd
push
inc
in
dec
out
sarb
cli
xchg
arpl
add
into
jno
jo
mov
xchg
scas
mov
dec
test
outsl
cs
out
mov
add
push
cltd
inc
cltd
adc
dec
push
out
daa
loope
xchg
shr
fisttpll
or
shlb
push
les
pusha
je
dec
sbb
pop
out
aam
pusha
xor
insb
xor
clc
fistl
adc
xchg
xchg
or
dec
mov
js
cmp
mov
mov
sbb
cld
test
inc
jb
daa
popf
aam
xlat
outsl
ds
test
sbb
push
jl
xor
mov
ljmp
xchg
jl
subl
add
xor
adc
mov
jno
pop
dec
inc
push
or
jmp
mov
mov
cmp
jmp
decb
jnp
add
fsubl
ret
push
fidivs
in
stc
sbbb
cmp
cmp
inc
sar
push
pop
movl
and
push
rcrl
stos
pop
xchg
dec
or
cmc
inc
fcompl
mov
or
mov
push
jmp
push
pop
mov
cld
inc
mov
or
in
mov
out
loopne
cmp
xor
add
xchg
int3
cmpsb
lds
lret
cli
lea
es
scas
xorb
iret
lret
mov
add
aas
andl
sub
xchg
test
enter
jbe
lock
fisubrs
iret
arpl
cmpb
aad
subl
push
push
sbb
stos
sbb
je
xor
outsb
into
add
ds
fcmovnbe
jae
orl
arpl
je
iret
adc
sbb
cltd
jo
aam
pop
rcrb
mov
cmp
lods
cmpsl
cmpsl
int
mov
mov
mov
daa
push
leave
jb
xchg
pushf
lret
std
or
xor
mov
int
push
inc
mov
xor
and
push
je
into
inc
inc
jb
fnsave
fs
in
fwait
xchg
cmpsb
jbe
pusha
cmp
into
xchg
jp
or
pop
mov
mov
xor
lret
andb
adc
arpl
subb
js
dec
lret
mov
or
mov
push
push
push
fcompl
ficoml
shll
shlb
push
sub
in
and
jmp
lret
mov
inc
jb
xor
cmpb
inc
xchg
mov
push
push
lret
push
jecxz
data16
or
add
mov
sub
or
fs
inc
sti
cs
add
mov
push
icebp
inc
shl
mov
stos
mov
ljmp
dec
push
pop
decl
call
les
cmp
aas
mov
sbb
jl
loopne
push
shl
add
lret
mov
nop
jae
enter
jae
mov
and
push
dec
rcrl
add
test
lret
shll
mov
aas
adc
pop
mov
jge
sbb
jo
scas
sahf
mov
adc
sbb
lea
lcall
or
cmpsb
fwait
sub
js
outsl
push
and
inc
sub
mov
adc
jmp
pop
pop
mov
and
or
or
xchg
jg
pushf
adc
xor
ss
int3
outsl
gs
int3
adc
js
loope
sub
dec
icebp
or
dec
dec
add
inc
in
and
jecxz
add
shlb
push
and
cmc
nop
cli
add
sbb
mov
xchg
lcall
cmpl
jecxz
fstp
xor
cmp
jl
dec
sahf
adc
inc
fstl
dec
sub
testb
mov
sub
mov
imul
cli
pop
iret
sub
sbb
mov
cmp
mov
ret
sahf
lcall
add
or
movsl
arpl
dec
sbb
jge
loop
inc
in
ljmp
add
and
push
mov
sub
pop
sti
into
ss
stc
and
push
jbe
data16
test
xchg
adc
and
sbb
xchg
sbb
dec
scas
loope
ss
cmp
rep
mov
js
or
es
pop
xchg
arpl
push
or
lods
jbe
xchg
lret
movsb
jge
mov
pop
fs
lret
or
dec
sub
mov
sbb
scas
dec
adc
loop
mov
rcrl
ja
fldenv
mov
sbb
test
cmp
pop
cmp
test
sub
push
arpl
lahf
dec
xor
and
clc
fs
fstpt
popl
int
inc
jg
ss
push
test
push
fadds
test
xor
xor
sub
ret
lock
pop
mov
rcr
iret
lds
sahf
cmp
rclb
sbb
push
cmpsl
leave
push
cmp
stc
sub
inc
mov
adc
sbb
das
out
movsl
add
sbbb
test
shl
cwtl
ds
lret
std
maskmovq
idivl
add
jecxz
xor
ss
mov
sub
mov
mov
sarl
pop
cmp
cltd
addl
xor
lods
or
adc
out
lcall
mov
cwtl
or
popa
mov
pop
and
mov
negl
sbb
adc
test
push
adc
xorb
push
xchg
ss
fcomip
adc
and
and
xor
jp
mov
dec
ljmp
push
mov
add
pop
cmpsl
scas
inc
pop
ret
negb
pop
ljmp
mov
test
sub
jae
dec
int
sub
test
rcrl
test
xchg
ljmp
jno
loop
mov
test
adc
pop
pop
lret
pop
jmp
xchg
push
cmp
aad
sub
aaa
inc
inc
or
sahf
adc
lcall
lods
ret
hlt
mov
lds
pop
stc
repnz
mov
or
test
sbb
push
xchg
mov
into
xchg
imul
movsl
dec
jae
hlt
mov
pop
iret
sbb
sahf
outsl
jo
mov
mov
inc
pop
sbb
ds
push
int3
ljmp
push
push
shll
test
jl
rcr
das
or
push
jecxz
mov
jmp
stos
out
mov
out
fnsave
jp
push
xchg
xor
dec
fs
xchg
xchg
pop
out
inc
and
stos
inc
mov
add
cmc
mov
push
dec
cld
insl
jmp
jno
scas
fwait
xor
jge
inc
inc
add
ret
mov
das
pop
pushf
or
aaa
add
lds
jecxz
pushf
sbb
leave
adc
outsb
push
push
mov
out
mov
ret
push
ja
adc
or
sub
gs
mov
sti
mov
fwait
aam
mov
mov
aas
daa
lahf
xchg
and
gs
lea
arpl
sbb
sub
mov
inc
mov
mov
mov
push
mov
sub
xchg
in
adc
pop
or
lock
cmc
ljmp
cli
lret
pop
ja
adc
sub
repnz
push
and
cmp
sbb
xor
dec
icebp
pop
mov
xor
fdivr
xlat
out
adc
push
xlat
fists
ret
or
jae
sub
shll
hlt
adc
loopne
lods
scas
je
dec
rcr
inc
aad
sahf
hlt
ror
and
cmpl
fnstsw
pop
insb
or
sarl
int3
movsb
scas
sub
adc
sbb
lea
scas
pushf
idivb
xchg
mov
mov
je
movsl
out
mov
pop
cmpsl
cs
cbtw
push
push
test
or
ds
in
xchg
es
sub
mov
lds
jae
and
inc
sub
hlt
popa
in
mov
mov
mov
xchg
rcll
add
add
faddl
in
cmp
push
call
cs
inc
xor
bound
mov
div
mov
adc
adc
sbb
rclb
push
shll
shlb
enter
mov
mov
hlt
ja
jg
std
arpl
sub
cmp
jle
or
into
adc
xchg
jns
in
loope
pop
pop
adc
xchg
fwait
mov
icebp
ljmp
jecxz
ljmp
test
je
jb
jo
dec
jp
add
mov
out
or
mov
pop
add
shlb
stos
and
mov
and
push
call
pop
mov
xor
inc
test
pop
fimuls
inc
adc
ret
or
and
test
mov
out
cld
pop
sub
std
cmp
jle
loope
push
int
xchg
lret
or
jbe
test
push
sbb
daa
cmc
xor
or
fidivl
insl
mov
popa
shlb
sti
pop
int3
sbb
cmp
ja
out
int3
repnz
clc
daa
loop
adc
ds
in
or
dec
or
and
out
in
xchg
sbb
addr16
sub
fdivs
sub
movsb
shll
bound
dec
mov
insb
js
jnp
movsl
pushf
xor
fistpll
dec
pop
stos
xchg
insl
sbb
and
movsl
cmp
jl
dec
mov
jbe
test
push
inc
fmuls
in
mov
jo
loop
jbe
pop
in
sbb
movsb
xlat
pop
mov
lret
fists
inc
push
es
int3
xchg
push
subl
cmc
mull
divl
pop
push
cli
mov
mov
aas
jp
jp
aaa
lds
ficompl
loop
dec
inc
sbbb
int3
fcompl
mov
xchg
mov
daa
sbb
fwait
push
pop
scas
xchg
out
cld
cwtl
or
mov
cwtl
jmp
adc
nop
xor
mov
pop
xchg
jl
shrb
or
push
popf
stc
cmpsl
rolb
repz
out
sub
mov
sbb
not
xchg
movsb
add
add
inc
or
fildl
mov
loope
jbe
mov
outsb
cmp
and
mov
push
mov
aas
xor
pushf
mov
addr16
into
dec
push
aas
orl
andb
mov
mov
or
jecxz
lret
outsl
int
dec
cs
ljmp
cmp
es
or
jecxz
aad
out
push
cltd
outsb
ja
push
leave
sbb
andl
out
and
mov
ss
les
sub
push
test
push
xor
push
sbb
pushf
sbb
mov
push
adc
or
pop
lock
push
ja
imul
dec
pusha
sahf
push
adc
icebp
push
aas
nop
daa
or
cltd
mov
rorb
out
outsb
mov
cmpsb
push
int
cli
popf
add
cmp
sub
jmp
jecxz
in
xlat
xchg
nop
cmp
cld
jg
mov
or
mov
mov
inc
mov
repz
das
cmp
cltd
push
mov
data16
les
imul
mov
insl
es
lcall
int3
nop
aam
and
mov
add
adc
pop
mov
cld
std
and
jg
cmp
jns
gs
cld
adc
mov
cmpsb
movsl
ds
scas
cmp
popf
pop
movsl
or
aad
movsl
dec
stos
lret
fmull
xchg
push
sbb
adc
test
or
out
test
lock
mov
cmp
decl
insl
and
lock
fstps
mov
jo
push
scas
push
or
daa
inc
add
cld
dec
sti
pop
jl
cmc
addr16
push
jb
cs
or
dec
ss
xor
stc
addr16
adc
outsl
push
pop
test
loope
pop
push
in
push
outsb
xchg
cld
and
sub
jbe,pt
stos
or
push
jecxz
lret
xorl
pushf
sub
or
adcb
dec
sti
jnp
mov
in
sub
testb
in
pop
and
scas
imul
ds
cmp
shrb
lahf
mov
bswap
xchg
iret
dec
shr
sbb
test
push
or
subb
cmp
mov
arpl
sbb
mov
push
jge
mov
xor
loop
jbe
fists
out
push
rolb
mov
inc
js
push
fs
mov
push
aas
pop
lds
lret
stos
add
jno
out
mov
lea
mov
push
outsb
dec
cmp
xor
jnp
jmp
lock
ror
sahf
sbb
in
rorl
and
sub
cmpb
sbb
test
gs
sbb
and
mov
aad
aam
in
int
sub
mov
xor
mov
enter
aas
sbb
add
add
insb
inc
test
pop
cld
adcb
mov
mov
sbb
adc
addb
icebp
push
inc
mov
adc
shrl
and
cmc
movsb
arpl
lock
loopne
xor
jecxz
cmp
xor
mov
push
stos
mov
daa
sub
cwtl
test
outsl
addb
arpl
jbe
fsubs
mov
adc
mov
dec
cli
jnp
mov
movsb
mov
scas
push
inc
xor
sbb
mov
stc
mov
mov
leave
add
dec
shrl
xorb
jecxz
shll
testb
jmp
xchg
jnp
in
out
xchg
ljmp
aam
inc
dec
mov
xor
mov
insb
aaa
dec
lcall
pop
mov
lods
pop
fmuls
sub
repz
jge
sbb
ljmp
loopne
push
cli
inc
das
sbb
xchg
sbb
push
lea
test
and
loope
out
iret
gs
in
xchg
dec
movl
div
jmp
or
or
sbb
dec
cmp
xor
hlt
cwtl
je
cmpsb
pop
pop
stc
in
pop
popf
test
idivb
sti
push
and
inc
dec
movsb
pop
xor
aam
xchg
jnp
or
fdivs
lret
lret
out
fwait
sub
rolb
add
gs
sub
test
fstps
bound
mov
imul
in
loop
and
push
das
push
xchg
sbb
shll
ror
orl
std
fdivrs
dec
das
and
jecxz
out
movsb
clc
stos
pop
dec
scas
dec
dec
in
or
cmp
in
lcall
lds
push
mov
js
cvtdq2ps
testl
pushf
je
and
cmp
ret
sti
cs
fwait
jbe
xchg
or
push
lahf
fisubl
xchg
sbb
ret
cwtl
test
test
xchg
sub
cwtl
sbb
inc
inc
leave
sbb
dec
mov
or
xor
cmpsb
mov
daa
lock
fsubrs
fcmovne
ds
dec
aas
pop
rorb
push
pushf
fsubl
inc
cmp
jno
adc
add
push
shlb
mov
notl
mov
inc
inc
xchg
rcr
dec
daa
xor
push
stos
xchg
adc
inc
and
das
test
inc
popa
and
icebp
inc
pushf
sbb
mov
je
rcl
stos
pop
repz
inc
jo
jge
loop
jnp
jle
mov
dec
mov
push
and
push
fdivl
or
int
mov
jno
mov
fnstsw
stos
push
and
jno
rcl
jb
pop
test
sub
xor
dec
mov
aas
mov
or
fldenv
push
data16
mov
and
fs
inc
out
adc
dec
push
cmp
das
aas
pop
xor
shlb
dec
lcall
stos
in
xor
add
xchg
inc
aad
xor
inc
sbb
movsl
movsl
cmpb
xor
xchg
popf
in
inc
ret
clc
mov
cmpsb
daa
cmp
mov
popf
xor
and
sbb
cmp
xor
push
adc
dec
xchg
add
pop
adc
lods
mov
mov
je
lcall
mov
jo
push
push
cld
mov
sbb
test
push
test
jae
mov
inc
into
out
push
pop
xchg
push
and
into
loopne
iret
add
pop
pop
jne
jae
xchg
mov
dec
inc
cmpsl
fnstsw
movsl
fbstp
in
and
xor
adc
mov
loope
cmc
or
sarl
push
mov
push
pop
mov
negl
xchg
inc
mov
and
and
xchg
call
lea
out
mov
adc
sahf
sbb
lahf
leave
xor
out
fucomip
sbb
mov
sub
sbb
js
push
les
push
pop
mov
pusha
aaa
pop
jecxz
faddl
adc
jbe
cld
push
push
add
test
ret
stos
sub
pop
mov
sbbb
add
cmp
mov
fnsetpm(287
lea
cli
push
fbld
push
sub
in
sbb
pop
jle
aaa
and
lcall
inc
jb
cmpsb
out
inc
testb
out
dec
cmc
mov
mov
rclb
push
arpl
and
scas
sub
add
dec
xor
push
or
lock
push
test
jp
jmp
mov
sub
jl
adc
lds
jmp
stos
imulb
dec
and
mov
mov
cmpsb
cmp
shrb
loopne
push
jne
pushf
sahf
mov
xchg
pop
aaa
dec
jmp
dec
xrelease
in
sbbl
mov
ret
jnp
cmpb
dec
xlat
arpl
pop
ret
or
adc
and
xor
fists
sub
pop
fildl
push
mov
outsb
inc
filds
test
mov
fwait
cmp
ds
daa
lds
adc
dec
cwtl
std
mov
xchg
nop
adc
cmc
movsl
sbb
xor
inc
aaa
jb
rcl
or
xor
cmpsl
daa
push
in
cld
imul
pop
arpl
pop
scas
xchg
mov
fcoms
frstor
call
pcmpgtb
cmp
fwait
and
mov
into
ret
pushf
add
dec
movsl
jmp
roll
dec
sbb
dec
test
sbb
mov
jge
test
sbb
inc
inc
xor
popa
xlat
pop
jecxz
cmp
repnz
cmp
adc
dec
and
inc
and
lods
push
xor
fists
js
jmp
dec
pop
push
aas
pop
mov
pusha
mov
sub
loopne
cmpsb
adc
sbb
fbld
in
fcmovu
cld
and
add
or
jo
cmp
pop
push
in
xlat
mov
xrelease
and
dec
sbb
aam
insb
sub
movsb
xor
push
mov
cmpsb
test
mov
ss
cs
nop
negl
xor
jle
fs
int
iret
mov
and
repnz
xchg
sbb
dec
fwait
add
stos
jb
cmpsl
je
mov
imul
push
xchg
ret
mov
inc
lret
or
mov
insb
iret
cmpsb
pop
mov
int
mov
js
out
inc
mov
pop
inc
or
xor
sbb
adc
dec
xchg
and
jle
or
es
push
lcall
outsl
xor
jnp
std
rolb
sbb
and
fadds
pop
lret
movsl
dec
aam
imul
insb
in
cld
idivl
sti
pop
xchg
xor
mov
inc
pop
xchg
fcompl
repz
mov
loop
ret
or
push
sarb
repnz
push
xor
cwtl
lret
inc
sbb
gs
cld
jl
iret
outsl
in
stos
in
popa
cwtl
aas
xor
aam
jae
ljmp
ror
out
sbb
push
mov
mov
mov
mov
pushf
push
cwtl
push
pop
xchg
dec
push
loop
adcl
or
add
inc
dec
lods
sub
lea
mov
jmp
xor
gs
mov
or
xor
arpl
fcomp
mov
mov
sub
imul
es
push
jne
cld
mulb
xor
mov
mov
pop
sub
aaa
push
dec
adc
add
mov
mov
aam
push
adc
mov
repz
mov
jnp
xchg
scas
lea
inc
sub
mov
inc
dec
inc
shl
daa
scas
mov
xchg
incb
in
lahf
das
imul
push
out
or
mov
and
jns
mov
or
das
into
push
mov
insl
cmp
les
dec
mov
cld
in
mov
call
nop
leave
mov
cmp
adc
and
sbb
jae
out
fdivr
out
or
loop
adc
cmp
pop
push
les
leave
or
mov
or
in
sbb
xor
cmp
add
mov
hlt
and
mov
das
shlb
shlb
push
jmp
out
rorb
dec
xchg
xor
sbb
fstpt
lret
je
cmc
cmp
xchg
xor
loopne
sub
ret
retw
pusha
fsubr
push
rcrl
and
ret
push
adc
jge
outsl
jle
mov
insl
xchg
push
into
jno
arpl
jbe
lea
icebp
jbe
push
add
push
mov
loop
cmc
dec
ljmp
jle
fstpt
xchg
push
jg
test
inc
cld
ret
adc
mov
fwait
mov
add
daa
adc
inc
fbld
fcoms
dec
add
push
jp
pusha
test
lcall
xorl
shr
mov
mov
into
jp
out
mov
rorl
fisubrl
into
stc
addr16
adc
stos
add
cmp
je
mov
lret
std
sbb
cs
add
pusha
and
mov
lret
add
push
xor
dec
xchg
lret
mov
add
loop
divl
and
and
cmp
xchg
push
jae
pop
cmp
mov
jecxz
mov
xor
fs
push
sbb
jecxz
aad
sub
sub
aas
inc
cmp
jne
lret
ror
mov
test
repz
push
inc
std
jnp
lahf
sub
leave
repnz
outsl
push
movsl
or
ret
dec
call
rolb
jp
jp
aad
sbb
pop
cmp
mov
mov
imul
xchg
cmp
rcl
or
clc
mov
mov
fcmovnb
sahf
sahf
sub
adc
jbe
ja
lods
pop
icebp
fistpl
jl
shlb
cmp
mov
test
fcmovb
and
lock
dec
jge
adc
adc
lods
push
fwait
and
test
cwtl
mov
mov
repz
or
scas
push
mov
dec
add
xor
ret
clc
adc
scas
cmc
mov
cs
movsb
or
mov
testb
mov
inc
mov
iret
mov
push
popf
dec
xor
cs
push
js
les
add
fisubs
stos
pop
xchg
imul
fsubrl
cmp
aas
inc
push
test
mov
clc
in
add
cmp
loop
jl
xor
adc
add
pushf
in
and
fmulp
test
testl
cmp
mov
cmp
ja
push
cltd
arpl
cmp
call
mov
sub
push
cmpl
test
aam
arpl
pop
rcl
adc
mov
filds
dec
push
pop
mov
pusha
push
pop
enter
xchg
add
mov
insl
rcrl
sbb
or
cmp
scas
cmc
dec
ret
dec
fnsave
and
test
sub
cmp
push
add
adc
push
popa
int3
jns
test
sti
mov
sub
dec
out
push
fildl
mov
add
sbb
sti
jle
and
pop
cmp
test
push
arpl
sub
jl
fwait
ret
adc
adc
aam
scas
mov
hlt
les
pop
xchg
sub
mov
mov
xchg
subb
push
cmp
lcall
stc
cltd
and
pop
fidivl
mov
xchg
inc
cmpl
push
and
inc
cli
xchg
sub
xchg
adc
sti
dec
hlt
xchg
loop
into
mov
leave
scas
imul
fadds
imul
push
fldlg2
ljmp
cmc
pop
mov
clc
imul
ss
rclb
out
bound
lods
ja
pop
ljmp
cmpb
repz
and
jmp
loop
in
test
pushf
mov
cli
dec
shrl
shrl
loop
push
sub
push
cmp
mov
cmp
add
js
xchg
movsl
sbb
xor
push
loop
sub
fdivrl
and
cli
xchg
test
jnp
rorb
xlat
cmc
dec
mov
dec
test
and
mov
mov
loop
add
pop
mov
push
cmp
fidivrl
pop
hlt
pop
sbb
dec
je
movsb
sbb
popf
into
imul
aad
or
xor
sahf
enter
pop
dec
notl
stos
jle
icebp
lods
sar
cmp
lods
scas
lret
js
rorb
xor
dec
in
add
cmp
repz
add
jl
push
leave
test
movsb
adc
sbb
adc
mov
xchg
xor
mov
arpl
mov
test
inc
dec
jns
fwait
mov
or
inc
icebp
sub
fidivl
sahf
movsb
cld
mov
xchg
insl
mov
andb
dec
loope
push
or
insb
aaa
pop
stos
insl
mov
adc
adc
pop
pop
mov
in
sbb
ret
outsl
fs
fdivr
and
push
movsb
mov
xchg
imul
jg
inc
push
sbb
rcll
or
sub
les
fldl
add
ljmp
sub
imul
mov
sub
cmpsb
movsl
pushl
mov
sub
ja
sbbl
popf
add
xor
push
mov
jmp
cmp
loopne
sbb
lcall
lock
enter
test
xlat
insl
xchg
arpl
add
sub
fstl
xlat
cmp
mov
jmp
and
mov
xchg
xchg
mov
xor
fadds
aad
ret
pusha
jmp
add
jb
sbb
mov
ret
and
movsl
push
lods
popf
sub
xchg
cld
lret
sti
pushf
lret
cmpsl
daa
jl
inc
adc
int3
lcall
fld
nop
mov
dec
dec
lea
shll
daa
icebp
xchg
inc
mov
hlt
inc
lea
add
push
push
outsb
cmpsb
gs
mov
out
test
dec
pop
pop
ficoml
or
out
lods
adc
ret
pop
or
call
xchg
or
out
movsb
fsubr
inc
and
call
xchg
push
loopne
or
mov
inc
add
lods
pusha
pop
outsb
push
xor
cs
imul
jne
and
pop
jg
scas
divl
mov
push
pushf
lods
mov
sbb
inc
pushf
cmpsl
cmc
fsubrp
fnstcw
test
mov
out
mov
dec
sub
aas
test
aad
icebp
push
mov
push
xchg
stc
sub
iret
cmp
push
mov
cmp
mov
mov
mov
dec
inc
cmp
dec
xchg
mov
sub
xchg
daa
mov
jl
pushf
mov
stos
mov
stos
adc
fidivl
pop
pushf
dec
std
popa
das
or
cmp
stc
gs
sarl
cmpsb
xchg
and
mov
mov
mov
cmpsl
mov
mov
xchg
sbb
add
je
stos
cwtl
jmp
sbb
add
rolb
mov
into
cmp
notb
cld
test
sbb
stos
add
or
push
xor
jb
cmp
mov
xor
sar
pop
pushf
arpl
jae
dec
arpl
pop
aam
aam
push
xor
or
pushf
add
adc
js
xor
pop
js
arpl
fildll
pop
icebp
sub
jmp
fisubrl
sub
pop
cmp
xchg
lock
out
push
sub
jae
icebp
jno
repnz
xchg
ret
mov
inc
sbb
les
sub
push
xchg
in
adc
mov
jecxz
fsubrl
inc
mov
enter
push
out
cltd
lea
lea
dec
add
stc
cmp
jne
pop
iret
or
call
and
cltd
pop
or
or
jp
add
jg
inc
enter
cltd
hlt
lods
xor
js
sub
jg
pop
mov
inc
movsb
jl
jle
daa
push
cmp
daa
lcall
repz
div
cwtl
mov
andb
aad
hlt
push
movsb
mov
hlt
mov
xor
lret
inc
imul
hlt
inc
xor
inc
pop
pop
in
xorb
insl
cltd
in
daa
aad
ficoml
gs
mov
sub
add
dec
popa
xor
and
mov
repnz
ret
sub
in
stc
inc
xor
andl
jge
stos
cmovp
sub
sahf
inc
les
or
push
add
lock
or
loop
pop
jns
ret
in
ja
cmp
lods
aaa
pop
enter
sti
int
es
std
add
pushf
and
lcall
shl
in
mov
jae
add
mov
js
pop
push
cmp
xor
pop
jg
mov
insb
cs
adc
dec
sbb
xchg
call
std
mov
cmpsl
jb
push
dec
add
dec
ret
dec
fwait
into
mov
add
xor
add
cli
inc
movsb
xchg
imulb
xor
adc
xchg
jae
jmp
pop
fiaddl
movsb
or
jle
js
cltd
in
jecxz
adc
fmul
cmp
addr16
ja
mov
inc
add
sbb
lahf
shrb
test
addb
xor
add
lcall
out
mov
lods
bound
inc
mov
popa
mov
push
les
adc
or
dec
leave
aaa
pop
sub
testl
adc
sub
push
jl
jle
lock
cmp
ja
inc
mov
iret
or
jnp
jae
push
insb
mov
jo
add
cmpsb
inc
xor
mov
pop
cmp
adc
fwait
xor
push
add
push
xchg
mov
dec
mov
pop
stos
inc
outsb
jne
push
idivl
jle
push
pushf
cmp
lcall
xlat
fldcw
scas
rorb
and
sub
rorb
or
sub
adc
in
cmpsb
pop
sarb
popa
mov
les
icebp
cld
lret
or
repnz
movsl
inc
jae
adc
mov
inc
stos
xor
cld
gs
push
rol
xlat
add
inc
sub
imul
adc
aaa
lea
stos
fadd
mov
insl
cld
jle
test
in
out
cwtl
adc
loopne
das
je
xorb
mov
call
add
lret
xchg
xchg
mov
ficoms
in
lret
mov
in
imul
enter
jo
adc
push
bound
jg
xchg
push
fcoml
fstp
jg
cmp
iret
aaa
cmp
es
sub
dec
addr16
mov
xchg
daa
cmp
xchg
add
push
sbb
jnp
int
idivl
mov
xor
int3
loopne
jbe
jmp
pushf
xchg
inc
sahf
add
sarl
test
mov
test
arpl
sbb
enter
jmp
rolb
push
lods
sahf
cmc
cmp
and
xchg
out
aad
stos
sbb
fidivs
xchg
mov
addl
cwtl
pop
jnp
xlat
add
sahf
daa
mov
adc
mov
pusha
sbb
jp
and
cpuid
mov
and
cmp
loop
mov
xor
mov
std
loopne
fstl
fdivl
dec
mov
sbb
je
loop
cs
jge
out
pop
cmpsb
fildll
jns
pop
dec
sub
int
push
shl
adc
inc
jae
jno
pop
sbb
sbb
fmuls
arpl
rorb
js
call
arpl
lcall
fstpl
inc
cwtl
pop
push
and
mov
mov
jb
insb
mov
mov
popa
lods
jge
push
mov
mov
loopne
push
rcrl
cld
cltd
fcoms
add
jle
lods
shlb
push
cwtl
pop
pop
jmp
lods
adc
aas
sbb
arpl
pop
push
sbb
int
mov
inc
repz
inc
inc
fisttps
pop
ret
mov
lds
pop
pop
scas
or
loop
push
inc
xchg
mov
and
fcomps
pop
xchg
adc
test
adc
sub
data16
rcll
lcall
loop
insl
or
js
push
xchg
mov
cmp
mov
inc
mov
xchg
jmp
cltd
test
lea
scas
fimull
outsb
push
dec
fwait
in
jb
movsl
ljmp
stc
fbld
adc
push
xor
push
outsb
and
mov
inc
sub
jp
fisttps
gs
mov
mov
repnz
push
xor
xchg
pop
into
test
shrb
mov
sbb
push
jmp
sbb
js
faddl
jns
fsubrs
inc
fwait
xchg
push
sub
orl
inc
out
inc
mov
xlat
stos
mov
jge
push
jle
aaa
outsl
das
sbb
and
movsl
mov
clc
je
or
push
dec
adc
sbbl
xchg
mov
mov
lahf
cmp
out
ds
xor
xchg
aaa
loope
filds
fcoml
push
pop
inc
mov
test
push
sbb
sahf
or
cmpsb
loope
aas
xor
push
fwait
mov
pop
es
pop
jmp
mov
inc
adc
loope
insl
adc
mov
idiv
loopne
stos
inc
call
popf
pop
loope
push
adc
and
test
fs
add
xor
inc
in
sahf
pop
fidivs
inc
out
ljmp
lods
add
lahf
in
pop
push
add
stos
push
jne
pop
and
out
inc
dec
daa
dec
out
mov
pusha
jnp
pop
fdivrs
pop
push
aam
push
push
push
and
mov
jle
test
jle
mov
xor
insl
jmp
filds
xor
int
cltd
jmp
mov
mov
sbb
lret
ja
in
int3
mov
mov
jno
movsl
cs
sar
dec
pop
mov
add
sub
rcrl
inc
das
push
and
fcmove
sub
adc
push
mov
push
jno
xor
adc
pop
lea
jns
and
rcr
shrl
jno
lea
ret
push
xor
movsb
sarl
in
pop
out
dec
rclb
ljmp
mov
dec
push
dec
pop
insb
adc
push
loope
push
icebp
lds
test
and
loopne
sbb
arpl
cli
std
sub
xor
es
jg
lods
xor
clc
mov
ss
adc
lahf
dec
add
test
add
inc
pop
scas
les
stos
lahf
hlt
dec
lods
aaa
xor
mov
lret
in
je
subb
sahf
jecxz
test
fdivrp
cmp
lods
imul
fprem1
inc
cwtl
or
das
cmc
inc
adc
adc
adc
jb
movsb
movsl
pop
nop
xchg
loope
jae
jne
and
xor
fwait
or
data16
iret
pop
mov
mov
adc
adc
sbb
pop
jl
sbb
mov
mov
mov
and
daa
push
add
dec
sub
dec
loop
scas
dec
out
xor
add
mov
fildll
pop
cli
ret
and
out
sub
scas
push
aaa
sub
sub
pop
jno
add
cmp
sub
mov
sub
ds
ljmp
lods
into
in
test
in
mov
mov
or
lcall
scas
imul
dec
push
nop
fnstenv
mov
xchg
les
lock
dec
xchg
in
stc
jo
xchg
cltd
inc
jo
pop
xchg
xchg
add
dec
and
movsb
lods
push
std
mov
mov
dec
add
hlt
test
pop
jno
sub
lahf
fwait
jnp
inc
clc
mov
rorl
dec
add
iret
daa
jb
int
call
or
xchg
pop
mov
sbb
xchg
add
orl
and
cmpb
sahf
sti
push
mov
mov
insl
push
xor
jg
push
ret
leave
test
jne
jae
loop
or
pop
add
into
add
loope
and
pop
xchg
push
push
popa
cmpsb
jno
data16
leave
fwait
mov
fcoms
mov
fwait
or
subb
jns
in
loop
iret
push
mov
cmpsl
xor
stc
pop
xchg
push
xor
push
push
movsb
mov
in
dec
test
sbbb
jmp
imul
jnp
push
jnp
sub
sbb
inc
dec
bswap
les
outsl
sbb
sbb
mov
movsb
in
inc
stc
xchg
lcall
mov
pusha
jmp
pop
sub
je
xchg
pop
pop
xor
imul
mov
sbb
dec
test
lea
lock
ret
imul
movsb
jns
psrad
mov
and
add
movsb
push
pusha
xchg
lods
xor
xchg
xor
dec
mov
sub
out
add
cmp
clc
aad
es
cltd
imul
mov
pop
add
mov
ja
es
cld
sti
cmpsb
xchg
insl
add
popa
sbb
inc
and
sub
fldenv
dec
mov
cmp
cmp
mov
dec
dec
pop
pop
cmp
outsl
cmp
push
dec
xor
repnz
test
cmovl
loope
out
xor
cmp
push
cltd
movsb
cmpsl
cmp
mov
or
pop
cmpsb
pop
adc
ja
sbb
dec
sub
jmp
scas
loopne
stos
pusha
sub
jl
js
push
dec
jbe
arpl
adc
mov
inc
cltd
jne
imul
push
popf
in
and
fwait
jno
fildl
jns
adc
enter
rorb
mov
popa
jg
and
mov
cs
cli
pusha
mov
adc
dec
cmp
jnp
mov
push
add
jle
xlat
sbb
test
dec
rcrb
sbb
sarb
mov
scas
aaa
xchg
and
nop
pop
cli
and
mov
mov
adc
ljmp
test
jge
mov
inc
xchg
mov
loop
cs
aaa
inc
out
cltd
push
mov
loope
insl
out
into
out
jae
jmp
xchg
in
push
pop
mov
cmp
bound
cwtl
ret
data16
xor
jecxz
or
dec
push
shl
ja
cmp
imul
push
push
pusha
aaa
ficoms
add
sub
hlt
enter
inc
and
push
or
fbld
or
sub
inc
inc
shrb
pop
pushf
test
js
xchg
cmpsl
add
icebp
fxch
lock
cmp
cmpsl
mov
xlat
push
lock
mov
xchg
jge
add
iret
jge
mov
lods
dec
dec
jb
call
and
jg
inc
in
add
aas
sub
push
das
lods
ret
mov
lcall
movsb
mov
push
jp
push
push
adc
ficompl
and
jns
push
sub
scas
or
out
mov
sbb
and
addl
inc
fsts
movsl
adc
xchg
xchg
mov
pop
jl
add
jl
xchg
scas
outsl
fistpl
inc
rorl
ljmp
fucomi
xlat
and
and
cmp
sbb
jle
mov
pop
cs
arpl
enter
js
inc
dec
jne
into
or
lahf
loopne
and
out
mov
push
stos
and
push
and
jnp
popa
xchg
ja
sub
inc
mov
xchg
rcl
dec
addr16
fdiv
scas
pop
mov
pop
call
mull
xor
inc
mov
clc
aaa
fisubrs
loopne
sbb
addr16
shl
lock
es
mov
pop
add
sub
cmp
jnp
xor
xchg
out
inc
out
xchg
dec
lahf
mov
out
or
mov
sbb
push
in
xor
rorl
shlb
jl
mov
jge
stc
mov
fildll
cltd
fadd
pop
mov
js
out
scas
sbb
lds
outsl
mov
loop
std
jne
or
push
scas
sbb
dec
jns
loope
mov
jg
xchg
or
sbb
rorb
in
js
test
sub
popa
cmpb
xor
jle
or
mov
aas
cmp
jno
cld
pop
gs
xor
outsl
jmp
lods
and
mov
mov
push
inc
and
xchg
push
jg
or
repnz
bound
mov
test
scas
cld
xor
in
add
xchg
or
pop
mov
nop
pop
pop
fwait
mov
stc
lret
inc
push
dec
inc
sbb
lret
push
mov
mov
jge
scas
je
mov
cmp
dec
dec
jecxz
in
repz
sbb
cmpsl
outsl
cld
xchg
aas
ljmp
fdivrl
test
or
lcall
cmp
push
mov
cmp
jp
int3
call
mov
aam
and
ds
push
sub
cmpb
adc
mov
mov
or
lds
mov
mov
cltd
mov
iret
daa
sti
scas
push
outsb
cwtl
xorb
or
sub
int3
js
mov
xchg
mov
add
fnstcw
fstps
mov
pop
cmp
mov
insl
sub
add
dec
lods
mov
cwtl
fstpt
jge
mov
std
xchg
push
insb
xchg
push
nop
pushf
mov
and
out
xor
cmc
cmp
out
iret
in
push
mov
loopne
sub
ret
call
loope
ja
aam
stc
push
push
or
lea
dec
mov
xlat
dec
and
stos
fadd
mov
int3
push
out
frstor
addr16
jae
movsb
push
cli
mov
sub
fisubs
lds
icebp
cmp
addl
arpl
mov
fistps
scas
mov
repnz
test
scas
mov
dec
pop
cli
jo
mov
repz
cld
cs
sub
das
mov
add
dec
cli
icebp
sbb
sbb
xlat
jb
dec
xor
rolb
cmpsb
pop
inc
fdivp
sbb
xchg
xor
and
je
test
cmp
popf
ss
in
or
lahf
imul
loop
xchg
push
mov
into
lahf
push
sbb
inc
hlt
mov
pop
sub
xchg
mov
inc
mov
sbb
cmp
push
pusha
movsl
in
mov
sbb
popf
adc
xchg
loope
je
xchg
in
mov
ret
push
push
inc
icebp
je
push
xchg
or
sub
inc
pop
pop
clc
sub
jb
jp
xchg
andl
xchg
negb
imul
shrb
test
movsl
pop
mov
pop
lds
inc
out
sub
pop
sub
pop
mov
push
lock
ret
inc
out
xchg
aad
sub
and
jnp
jge
mov
and
nop
xchg
dec
data16
inc
push
dec
mov
stos
loopne
and
and
dec
jg
iret
fwait
mov
sbb
mov
dec
ja
xchg
lods
or
cmp
fidivl
inc
cld
icebp
mov
xor
lret
dec
and
and
mov
repnz
test
add
cld
call
call
std
adc
fs
dec
pop
xlat
mov
mov
call
push
movsb
fadd
rcl
lcall
sub
loope
push
mov
push
fdivl
pop
cltd
inc
js
jmp
jge
or
sub
jno
aaa
mov
frstor
lcall
push
cli
sahf
jg
enter
test
shlb
and
inc
leave
mov
sub
push
xor
sub
notb
repz
fwait
xor
push
inc
sbb
fistl
or
cmp
and
inc
xchg
in
popf
xchg
inc
jo
pop
in
outsb
fisttps
push
pop
mov
and
inc
mov
pop
std
push
mull
shrb
mov
pop
rcrb
pop
or
imull
daa
cmp
bound
push
mov
into
cld
repz
xor
pop
popa
test
hlt
mov
scas
pop
jp
lea
pop
in
sahf
adc
lock
mov
or
sub
mov
ror
jno
negb
pop
subb
xchg
mov
jne
jg
lock
jne
or
push
inc
dec
adc
movsl
fcompl
lods
push
pop
and
mov
popf
jp
jno
divl
adc
xor
mov
xchg
leave
pop
idivb
add
out
dec
cmpb
popf
xchg
push
dec
jge
push
jl
push
pavgb
push
call
mov
lcall
push
pop
or
add
je
pop
push
das
xor
mov
cs
jnp
out
xchg
mov
loopne
xchg
xchg
dec
push
test
or
out
ret
push
cld
aaa
ljmp
test
dec
mov
dec
jb
sbb
andb
mov
sub
stos
decl
test
add
xchg
fwait
push
pop
add
fidivs
and
lods
or
aad
out
repz
xor
jg
lret
adc
jge
rorl
out
mov
jno
xchg
rclb
push
and
mov
push
mov
push
lcall
mov
lea
dec
jg
and
cmc
paddsw
lds
mov
je
inc
lock
push
push
movsl
fcoml
push
insl
iret
xchg
jae
lcall
jns
ss
xchg
jbe
les
xor
sti
xchg
or
fcmovbe
insb
pop
dec
imul
test
inc
jmp
bound
ja
jns
shll
jge
jns
in
lock
xchg
mov
or
jecxz
rorb
pop
shlb
adc
lahf
aas
push
jns
sub
shlb
inc
fcmovnb
cmp
mov
mov
mov
jno
mov
cltd
cmpsl
out
xchg
push
mov
sahf
movsl
or
or
dec
lea
shll
or
jno
mov
dec
xor
adc
stos
loop
jge
xorl
add
or
xchg
movsl
xchg
and
dec
jnp
jge
xor
and
jl
push
int
fld
pop
aaa
or
mov
add
stos
mov
jmp
push
gs
ret
add
stos
pop
es
and
dec
cltd
jl
xor
std
mov
decb
jbe
mov
or
inc
pop
pushf
fwait
mov
ss
cltd
sub
rcr
pop
sub
jnp
push
fdivrp
int3
fists
inc
fisubrl
stc
pop
dec
mov
sahf
mov
push
popf
mov
popf
lret
call
dec
mov
ja
push
repz
jg
pop
or
sbbl
jl
jmp
lea
lahf
sbbb
mov
lcall
out
mov
pop
adc
cmp
dec
push
mov
push
push
aas
stc
bound
sti
popa
mov
adc
ds
jns
sub
push
dec
xor
xchg
mov
or
or
ljmp
inc
scas
sub
push
scas
dec
je
lahf
mov
fstp
nop
push
pop
loopne
push
fwait
int3
mov
jae
loopne
or
clc
in
out
jp
loop
mov
sub
nop
aam
imul
mov
cwtl
jle
scas
add
rorl
pop
inc
jle
dec
std
xchg
movsl
adc
pop
fstpl
push
cmp
in
pop
push
mov
cmpsb
aaa
push
adc
xchg
add
cld
mov
mov
mov
inc
jb
rolb
jp
xlat
cli
aad
sti
pop
inc
xchg
xchg
sbb
sub
inc
pusha
cmc
cmpsl
pop
mov
dec
xor
aad
mov
or
jmp
ret
loopne
sub
fwait
mul
movl
inc
xor
mov
pop
xor
inc
sti
mov
pop
scas
cmpsl
ret
mov
cmp
les
in
idivl
jno
mov
mov
popa
jmp
push
cli
mov
fdivrs
jbe
aam
push
sbbl
test
cli
ss
pop
jo
fwait
and
pop
lcall
add
mov
xchg
test
xor
cmp
dec
cmp
rorb
push
daa
mov
test
inc
sub
outsb
mov
dec
jmp
ficoml
pusha
sub
sti
sbb
mov
mov
sbb
lods
js
adc
popf
xchg
sbb
xchg
imul
inc
sub
nop
or
jne
mov
mov
pop
arpl
xor
stc
and
out
or
faddl
cmp
xor
ds
pop
call
loope
sbb
xchg
adc
pusha
or
inc
popa
jmp
sbb
stos
das
aam
mov
dec
and
scas
cli
sub
pop
insb
xor
xor
pop
cmp
movlps
outsb
fnstcw
inc
mov
fnstcw
fnsave
fs
and
roll
cmpsb
ja
ss
div
push
mov
sbb
add
loop
int3
lock
pop
imul
sbb
les
pop
scas
lahf
pop
pop
nop
inc
icebp
arpl
inc
add
xor
addl
jo
stos
dec
nop
mov
cmp
loop
jo
stos
pop
loope
jns
lock
shll
pop
das
mov
mov
jo
pop
subl
idiv
test
lods
xadd
loopne
lods
pop
add
cmp
jnp
xor
mov
xchg
or
mov
jl
sbb
push
ret
lock
hlt
inc
inc
mov
scas
fcoms
les
out
fcmovb
mov
addr16
out
es
pop
or
xchg
add
ljmp
scas
xor
pushf
popa
push
lds
pop
call
sub
sub
mov
jle
jnp
sahf
and
arpl
test
sbb
push
xor
in
push
mov
push
ror
arpl
shll
inc
in
push
mov
fidivrl
test
nop
cwtl
adc
shr
jne
cld
mov
xchg
or
arpl
dec
sbb
insl
dec
push
ret
ljmp
inc
in
outsl
out
add
dec
push
add
cmp
add
inc
add
xor
lea
cld
dec
sub
jge
sub
push
js
pop
mov
or
push
sub
test
and
xchg
push
repz
pushf
xchg
dec
jo
cli
ja
cmpsb
xchg
enter
xor
jo
jmp
fadds
aad
push
jle
loope
ss
mov
and
rclb
aam
adc
cmp
int3
add
cs
dec
mov
adc
insb
cmp
cld
inc
fisttpl
lds
ret
lret
add
ja
imul
andb
mov
xorb
stos
or
lea
cltd
push
mov
pop
iret
and
repz
notl
rcrl
psllq
pop
mov
adc
shr
adc
mov
cmp
dec
sub
dec
mov
sbb
negb
inc
shrb
push
loope
sarl
cmpsb
mov
mov
sub
add
dec
xor
in
es
into
ds
icebp
stos
and
push
or
aaa
outsl
daa
int3
imul
sbb
out
fstps
jg
add
insl
int
out
subb
inc
movsl
and
mov
mov
xchg
sar
sub
mov
xchg
ret
sub
pop
xchg
lret
jl
cmp
in
push
and
das
xor
push
add
sub
mov
adc
cmp
push
jge
jp
or
lret
lret
jno
add
hlt
mov
je
inc
sbbl
cmc
mov
out
repz
int3
xor
cmp
ret
and
jecxz
xchg
sub
adc
pop
pop
adc
mov
xchg
dec
ljmp
cs
scas
lods
hlt
int
test
jmp
mov
push
ret
loop
scas
out
icebp
push
dec
cmp
faddl
in
cli
cmc
mull
movsb
mov
stc
aad
push
insb
adc
sub
sub
bound
adc
lahf
shl
mov
push
jg
pop
std
jb
adc
hlt
call
mov
jne
mov
jmp
or
pop
add
imul
bts
popf
adc
fwait
push
lods
adc
add
lret
imul
pop
mov
cmp
shrl
enter
jbe
add
orb
int3
repz
andl
cwtl
loop
test
outsl
scas
and
xchg
aam
mov
pop
out
mov
sub
push
out
xor
dec
ja
adcb
ljmp
fld
jo
mov
pop
sti
icebp
pop
and
add
mov
lcall
adc
lcall
negl
stos
andb
adc
daa
jno
and
mov
adc
pop
xor
sbb
add
sahf
mov
icebp
push
xchg
adc
or
adcb
push
dec
loope
inc
adc
mov
lahf
xchg
ror
inc
push
inc
andb
xchg
sub
jle
xchg
inc
adc
inc
stc
sti
mov
mov
lods
add
fwait
jmp
mov
jae
out
dec
xchg
xor
fistpl
mov
jl
in
mov
loope
loope
imul
addr16
sti
cmp
pop
dec
inc
sub
stos
out
and
pop
push
sbb
js
ret
test
dec
movsl
pop
mov
adc
pushf
imul
jle
inc
cli
dec
xlat
clc
push
cmpl
cmp
sbb
and
mov
cmp
inc
or
movsl
insb
push
mov
ret
aaa
clc
mov
shrl
enter
out
jb
ja,pt
jmp
mov
je
mov
jb
mov
sub
movsb
xchg
test
cmpsl
les
dec
fs
aad
push
mov
xor
mov
leave
jnp
aad
sbb
loopne
pushf
rcrl
cmp
pushf
mov
add
dec
sbb
inc
lret
fidivl
jne
mov
mov
nop
jmp
sahf
test
cmp
adc
mov
cmpsl
sbb
repz
push
fists
sbb
insb
mov
adc
and
add
mov
xchg
push
out
add
xchg
cwtl
cs
mov
adc
imul
inc
movl
and
insb
pop
shlb
ja
dec
loopne
clc
push
mov
iret
jge
test
ds
lods
add
gs
sub
shl
imul
nop
cmp
add
sub
insb
int
mov
lock
dec
xchg
lret
je
les
mov
sarb
push
inc
fnstenv
mov
in
js
sbb
ja
movsl
stos
stos
inc
es
push
xlat
xor
jnp
in
or
jmp
xchg
mov
jo
loop
jp
add
xchg
jg
test
mov
add
loop
movsl
mov
repz
lods
test
sbbb
xor
xchg
fs
stos
jns
and
jae
mov
movsb
dec
xor
mov
dec
fs
test
adc
iret
ret
arpl
cmpsl
xor
pusha
ret
and
sub
adc
hlt
adc
cmp
cs
xchg
popf
xor
or
dec
rolb
and
out
fsubrp
jnp
ja
xor
xchg
sub
movsb
jecxz
jp
jb
out
repz
or
dec
gs
mov
fdiv
add
cmp
and
xchg
inc
dec
add
jg
loope
push
mov
pop
dec
and
sub
leave
call
jnp
xchg
iret
xor
pop
and
dec
rcr
cs
or
push
sbb
sub
dec
aas
or
mov
stos
mov
out
pop
xchg
inc
cld
pop
roll
and
imul
add
rcll
inc
pop
jg
mov
dec
mov
and
gs
push
andb
mov
data16
adc
dec
fdivl
mov
out
cltd
loopne
out
mov
jge
inc
cmp
out
testb
pop
inc
pop
ficompl
jecxz
pop
mov
mov
lds
fidivrl
inc
xor
fwait
dec
repnz
hlt
push
movsl
jbe
arpl
movsl
jns
inc
in
insb
mov
jnp
cmp
outsb
mov
in
imul
out
and
jp
in
push
sub
out
daa
jmp
cmp
jne
jg
jge
or
push
dec
imul
lods
hlt
cmp
adc
lods
xor
dec
adc
repz
in
insb
dec
or
cmp
mov
inc
lds
sub
mov
icebp
adc
jmp
outsb
mov
int
sbb
mov
addr16
add
lea
jmp
sub
dec
mov
sbb
jmp
adc
sbb
push
push
xchg
mov
fsubl
inc
xchg
jle
icebp
jns
jb
or
clc
rcr
fwait
fwait
mov
push
pop
das
sbb
push
cmp
clc
jne
js
or
clc
leave
int3
addl
xchg
mov
jno
jmp
repz
leave
shrl
mov
jns
cltd
xchg
mov
call
movsl
loop
jo
mov
mov
scas
test
sbb
mov
inc
pop
aad
sub
mov
imulb
inc
nop
rcr
mov
pop
cmp
inc
addb
popa
es
movl
aam
xchg
sahf
in
pop
shl
shll
mov
sbb
int3
lret
and
outsl
jmp
jns
mov
clc
mov
pop
call
mov
sub
pop
scas
jbe
or
xchg
daa
into
lahf
dec
cs
jae
fdiv
xor
mov
jge
fs
testb
mov
or
das
xor
push
mov
push
push
insl
mov
cmp
sar
pop
addr16
sub
xchg
mov
int3
in
adc
shll
jns
add
mov
leave
xchg
xor
lods
sbb
fstps
push
xchg
and
and
negl
sbb
jmp
lahf
pushf
xchg
arpl
lods
pusha
dec
mov
outsb
lods
stos
xlat
add
sbb
or
pop
test
sub
shll
sub
aam
and
sbb
test
and
xchg
or
xor
mov
mov
inc
or
cmp
mov
xchg
inc
sbb
inc
xchg
jno
xchg
js
popa
and
add
cld
hlt
pop
mov
sub
and
cmp
enter
pop
jo
sub
jns
repnz
fcompl
cmp
adcl
ret
or
outsl
dec
sahf
mov
rcrl
dec
add
cmp
pop
add
cmc
int
jb
push
push
and
add
lods
call
mov
xlat
cmp
push
or
mov
adc
mov
out
dec
pop
push
cmp
sub
xor
lock
in
inc
adc
cmp
push
push
pop
push
jns
xchg
stos
mov
inc
ret
push
decb
sbb
pop
or
mov
aam
fwait
leave
jmp
mov
cltd
fwait
cli
add
mov
inc
jg
and
fsubr
push
mov
lds
leave
cld
mov
jns
adc
movsl
js
stos
dec
sbb
jae
xor
notl
dec
mov
push
ret
mov
ljmp
in
adcl
mov
and
pop
inc
push
sub
shll
out
mov
adc
xchg
push
or
loopne
or
adc
addr16
loope
imul
lcall
mov
mov
or
push
js
or
adc
stos
xlat
and
int3
les
sbb
cmpsb
fsubl
xchg
push
xchg
mov
leave
gs
int3
adc
ja
and
shlb
es
and
loope
fsubrp
call
jbe
out
insl
roll
xor
in
dec
jmp
popf
icebp
scas
jp
sbb
pop
dec
ffree
fsubl
adc
inc
fnstenv
test
mov
fisttpl
je
push
xchg
in
pop
int3
pop
xchg
jae
das
jnp
sbb
jo
pop
repz
neg
jecxz
inc
cwtl
dec
jne
adc
fmull
pop
and
inc
add
xchg
je
sbb
gs
mov
in
fidivs
insl
mov
jg
fcmove
das
loopne
movsb
lods
js
out
cld
mov
and
push
addr16
in
xchg
fs
fbld
mov
mov
lahf
add
and
hlt
fsub
stc
push
out
mov
mov
divl
mov
xchg
cmpsb
test
push
aam
jae
int
cmc
pop
data16
mov
cmp
pop
pop
and
pop
inc
int
cmp
cli
push
jp
int
or
mov
pusha
das
fcmovu
stos
popa
cmp
cmpl
or
jmp
xorl
mov
or
iret
xchg
jb
add
mov
push
jne
das
std
jmp
inc
cli
mov
xchg
enter
add
pop
outsb
pop
in
nop
in
sbb
xor
mov
icebp
adc
xlat
ss
scas
and
cmp
andb
adc
jmp
sar
mov
mov
jmp
inc
jb
adc
je
lcall
jg
rcr
fs
add
scas
xor
les
lds
sub
adc
fistl
notl
jbe
mov
sbb
sbb
je
mov
mov
pop
jl
rorl
jg
sti
rcrb
sbb
xchg
dec
shr
leave
idivb
clc
xlat
aaa
lret
inc
xor
mov
or
icebp
sbb
mov
lea
stos
push
cmp
add
fcomps
jae
fbstp
push
sbb
test
add
sub
jp
push
add
scas
mov
repnz
push
lods
ljmp
rorl
iret
ss
cli
mov
leave
mov
cld
dec
mov
dec
stos
sub
pop
les
test
cmpsb
push
jle
mov
fdivl
rorl
lock
test
mov
ret
pusha
sbb
inc
sub
lret
int3
mov
outsb
repnz
xlat
movsl
mov
enter
fsubs
inc
pop
insl
inc
loope
pop
pop
push
sub
pop
out
je
hlt
pop
mov
lea
test
mov
cwtl
cs
push
push
jo
mov
addl
mov
jmp
dec
inc
sbb
scas
lret
adc
test
pop
sti
lret
mov
xchg
fimull
scas
ljmp
in
movsl
sbb
loopne
arpl
sub
fists
ds
fbld
mov
aas
sbb
mov
je
out
cli
int
sbb
sbb
push
inc
inc
inc
inc
mov
js
mov
cmp
pusha
mov
jmp
movsl
pop
jge
fldenv
ljmp
test
aad
aad
jns
insb
jo
lret
mov
mulb
scas
mov
test
insb
xor
leave
adc
push
clc
jge
pop
mov
dec
jo
inc
rcrl
cs
cmp
rolb
add
add
adc
data16
dec
in
mov
hlt
jo
pushf
or
adc
or
jnp
xor
sbb
clc
mov
scas
mov
loope
mov
subb
loope
stc
mov
adc
xchg
cmp
cmp
ret
mov
mov
out
add
pop
xchg
repz
fnsave
or
inc
cmp
js
in
call
mov
movsl
cmp
push
sbb
mov
mov
lods
mov
xchg
or
mov
es
xor
js
push
add
xorl
cmpsl
insb
sbb
daa
sahf
xchg
mov
cmp
jmp
cmpb
lcall
cli
pop
mov
ja
push
ja
dec
ljmp
sbb
dec
test
or
lret
mov
jp
sub
mov
jb
fnstcw
out
pop
std
lahf
mov
or
fmull
add
mov
andb
test
in
pop
pushf
call
sub
sub
or
or
clc
js
xchg
out
ret
fdivrl
jge
cmpsl
xor
sbb
idivb
push
sub
push
iret
dec
pushf
rorb
arpl
int3
dec
pushf
test
add
pop
out
cmpsl
sub
into
sub
xor
loope
xchg
lahf
pop
out
cmp
test
push
sarb
jns
lds
dec
rol
pop
push
mov
and
pop
imul
mov
popa
in
loopne
lock
mov
mov
push
jp
imul
mov
and
dec
adc
xchg
divb
add
sub
daa
cmp
in
jge
das
aad
mov
push
rcr
jno
fsubrl
cld
arpl
cmc
insb
ljmp
and
pop
or
cmpsb
jne
ljmp
vpsadbw
cmp
stc
adc
imul
les
imul
xchg
xchg
jo
daa
push
iret
rclb
sub
call
sub
cmpsb
std
push
sti
sub
inc
std
pop
add
sub
jmp
shll
inc
iret
mov
add
movsl
add
lds
lock
lods
sbb
in
std
lahf
sub
mov
pop
test
or
adc
lods
inc
outsl
pop
cmp
out
adc
mov
xchg
xchg
out
or
in
jp
and
mov
jmp
sub
push
xchg
fwait
dec
fs
or
cmpsb
aad
sub
push
sbb
ret
loope
cmp
adc
pop
dec
cltd
fidivrs
hlt
xorb
je
fs
lret
xchg
add
in
sbb
cmp
xchg
cmp
int3
and
xor
xor
aam
movsl
and
insl
lcall
mov
inc
in
addb
and
loop
outsb
roll
testb
dec
mov
mov
ljmp
mov
push
int3
ss
in
pop
sbb
xchg
dec
dec
pavgb
jns
xchg
loopne
adc
mov
sbbl
int
jns
inc
mov
jb
dec
sahf
aad
or
cmp
out
test
popa
mov
jo
enter
mov
mov
push
loope
xor
inc
xchg
in
outsb
xchg
jae
ficomps
cmp
stos
ret
jmp
sub
xchg
clc
mov
mov
pmulhuw
hlt
adc
iret
pop
pop
mov
stos
mov
cltd
jg
mov
lods
je
addl
push
lea
fcompl
sub
andb
mov
jno
repz
lods
out
fwait
jl
pop
dec
jo
mov
xchg
cmp
in
enter
int
lret
test
and
push
out
icebp
cmp
shrl
pop
mov
jae
ja
cld
insb
adc
cmp
and
int
lcall
or
daa
and
lods
fadds
jl
repnz
jo
imul
cmp
push
jp
xchg
outsl
or
push
leave
push
fwait
aas
dec
mov
and
pop
jl
or
push
ljmp
xchg
nop
adc
out
aad
xlat
adcl
mov
imul
dec
popa
out
out
xchg
sahf
or
jb
lcall
pushw
cltd
out
stos
lret
imul
mov
call
dec
push
movsb
mov
mov
fs
in
add
push
mov
cmp
cmp
enter
mov
fmuls
mov
sbb
ret
lcall
add
xchg
lods
ds
orl
jo
jmp
lcall
mov
cmpsl
xchg
xchg
cmp
add
xor
lahf
add
dec
movsb
addr16
lods
in
cld
inc
into
push
shll
inc
test
stos
jge
test
jns
dec
mov
and
cltd
xchg
iret
gs
or
fcmovb
xor
xchg
mov
and
dec
cmp
mov
add
idiv
jne
scas
jo
sti
sete
xlat
shr
cwtl
in
data16
js
in
cmp
and
jbe
lret
lcall
xchg
ljmp
fldenv
xor
xchg
sbb
les
testl
or
cmp
cmp
or
adc
jg
jge
xchg
das
jns
stc
dec
loop
mov
mov
mov
sbb
inc
jmp
fwait
jnp
push
sti
inc
inc
jo
and
push
sarl
jg
clts
cmp
daa
dec
mov
add
push
loop
pop
push
cmp
xchg
or
dec
dec
lea
ss
movsl
xor
mov
movsl
arpl
push
ret
cmp
jbe
sbb
rcrl
into
cmp
sub
xor
lods
or
jno
scas
cltd
pusha
and
jno
mov
stos
adc
lds
adc
sub
mov
xor
or
and
inc
mov
cmpsl
dec
add
and
repz
es
inc
cmp
incl
sti
or
push
inc
and
add
sub
mov
lcall
test
fsubrs
arpl
sarb
movsb
les
xlat
out
call
daa
lret
pop
mov
shll
cmpsl
sarb
scas
sti
push
jl
pusha
adc
sbb
or
inc
ret
jb
mov
and
jae
lock
push
testl
repz
add
adc
fs
loopne
loopne
loopne
and
iret
jle
or
daa
cmp
ret
cli
inc
fnsave
cmpsb
inc
popa
mov
sbb
popa
movsl
ss
xor
cwtl
mov
repnz
test
inc
ret
jge
lea
addr16
mov
lahf
out
cmpsb
push
lea
mov
bound
or
xchg
push
aas
shlb
dec
jecxz
push
sub
loope
sahf
mov
mul
push
clc
dec
cwtl
leave
mov
fisubrs
lahf
mov
fisttpll
dec
mov
mov
pop
out
sub
mov
jmp
stos
movsl
mov
adc
cmp
xlat
movsl
inc
cmp
shlb
mov
and
xchg
sub
jmp
mov
dec
or
push
out
scas
jo
ss
outsl
out
pushw
jl
xchg
sub
xor
loope
mov
and
pop
jnp
aaa
inc
icebp
pop
fcmovbe
in
test
data16
shll
pop
or
sarb
pusha
mov
cmpsl
xor
sub
addb
aam
jp
dec
xor
jle
je
cmc
push
xchg
popa
jl
inc
mov
and
imul
insb
stos
sub
sub
inc
and
jns
call
fwait
insb
pop
jle
or
testb
loope
mov
dec
xchg
sbb
fisubrl
ror
mov
ror
imul
stos
dec
inc
mov
es
push
pop
arpl
dec
cmp
scas
repnz
or
cmp
iret
popf
test
out
dec
fs
xchg
or
push
xchg
mov
repnz
fbstp
inc
xor
shlb
xchg
rcll
ljmp
jl
xor
imul
or
imul
loope
lods
pushf
fisubs
cmp
jnp
insl
mov
enter
sub
mov
inc
pop
cwtl
mov
stos
dec
in
sbb
lock
notb
fsubrs
std
adc
or
mov
fdivrp
lods
push
test
in
out
insb
pop
jecxz
nop
jmp
mov
sub
xchg
imul
push
push
xor
xchg
jmp
mov
scas
cwtl
in
xchg
hlt
sbbb
addr16
xor
nop
xor
fidivs
mov
pop
icebp
push
adc
adc
aam
mov
into
sti
jecxz
test
addr16
or
dec
xchg
xor
inc
das
sbbb
cltd
scas
adc
xchg
push
xlat
add
in
xchg
or
rcll
xchg
outsb
syscall
insb
gs
lods
dec
and
jl
pop
shl
lock
mov
nop
leave
inc
lds
inc
jl
sub
and
cmp
cmp
push
repz
mov
add
fcoms
js
fidivl
cmp
je
test
adc
or
push
lea
pop
hlt
test
pmulhuw
shrb
nop
pop
cmpsb
scas
pop
sahf
std
push
outsl
xor
adc
into
sbb
mov
and
cmp
mov
addl
sbb
in
lret
aaa
add
pushf
aaa
dec
mov
mov
mov
jae
push
gs
les
push
test
enter
adc
test
cli
mov
cmpl
sbb
jo
jge
pop
inc
imul
cltd
out
cmp
mov
repnz
inc
aam
js
inc
lret
mov
cs
xor
popf
clc
push
push
inc
adc
aas
jge
xchg
mov
repnz
mov
mov
push
imul
and
repz
movsl
lods
fs
inc
fildll
idivb
pop
mov
inc
fistpl
mov
and
orb
pop
stc
mov
lods
add
push
jbe
push
sub
push
dec
ljmp
adc
loopne
jns
mov
mov
mov
mov
sbb
sbb
lahf
std
pop
push
cmp
dec
mov
mov
pop
cmc
stos
ss
in
xor
and
mov
xchg
xor
enter
or
jecxz
push
sarl
or
mov
jl
push
xor
inc
mov
inc
adc
aas
and
arpl
push
jmp
mov
data16
or
insl
sti
xorb
xor
repz
pusha
pushf
cwtl
pop
cld
sub
cmp
mov
popa
lret
inc
sub
gs
std
int3
add
scas
jecxz
xchg
pop
jno
sbbb
dec
push
leave
int3
imul
cmp
mov
sbb
dec
lea
lret
and
into
jge
xlat
pop
test
fistpll
mov
jb
ret
sub
xor
adc
les
cmpsb
or
movsl
lea
sub
pop
in
mov
cs
sub
xor
inc
push
cmp
or
lcall
gs
add
fnstsw
popf
jo
push
imul
mov
pop
sbb
jns
mov
hlt
jbe
jmp
cmp
inc
movsl
jg
xor
xchg
ja
mov
hlt
cmp
mov
pop
push
mov
pop
iret
and
push
xor
ljmp
arpl
ret
stos
int3
push
mov
mov
xchg
inc
shlb
push
push
out
fisttpll
and
cmpsl
pop
pop
jb
xchg
mov
mov
test
push
or
xchg
mov
or
in
mov
aas
mov
fadd
jl
pop
mov
and
call
imul
test
out
push
cmp
mov
enter
sbb
dec
pop
adc
push
inc
mov
xchg
fwait
shl
into
aam
sbb
and
and
int
movsb
jp
xchg
push
imul
or
dec
dec
aam
sbb
fwait
je
xchg
frstor
mov
insl
jmp
scas
dec
jg
mov
in
dec
cmp
rcl
ror
and
mov
icebp
call
xchg
mov
into
xchg
hlt
and
pop
fidivl
pop
stc
or
xchg
shll
adc
lock
lahf
test
push
daa
and
ret
mov
cmp
nop
test
aas
cli
xchg
dec
sub
in
mov
mov
dec
adc
jae
mov
xor
daa
dec
faddl
add
jne
mov
adc
lods
popf
and
adc
push
mov
cmpl
mov
mov
sub
mov
repz
aaa
or
test
xor
in
sub
imul
or
insl
xchg
test
xchg
sbb
xchg
mov
popf
pop
hlt
fdivs
xchg
repz
cli
add
fwait
ss
data16
std
push
and
sbb
divb
cmpl
dec
add
pop
lret
push
test
jbe
mov
jl
insl
cs
sarl
push
sbb
jp
push
cmp
ret
arpl
notb
cmp
loopne
or
or
rorb
lods
fsubs
sbb
stos
repnz
cltd
call
bound
adc
adc
add
loop
xor
das
cltd
jp
shlb
pop
mov
icebp
mov
repz
dec
inc
popf
and
ss
push
dec
je
pand
sbb
sub
in
push
je
push
insb
mov
sub
xor
add
dec
test
das
sti
adc
lds
ja
mov
lahf
cmpsl
dec
mov
cmp
inc
inc
adc
mov
dec
mov
and
adc
test
data16
fld
ret
stos
dec
or
push
pusha
outsb
clc
sahf
lret
scas
repnz
rol
dec
negl
push
dec
int
aad
xacquire
mul
or
jae
andps
es
cmp
xor
testl
int
aaa
mov
jne
or
sbb
mov
popa
xor
movsl
mov
mov
sti
sbb
xchg
fisttpll
fcmovbe
inc
xor
sub
aad
mov
mov
cli
roll
lds
lret
rcll
cmpsb
xchg
or
push
std
rcll
das
dec
dec
jnp
adcl
cmp
popf
mov
jne
jbe
dec
insb
xchg
xchg
les
jb
sahf
adc
push
lahf
and
lahf
lods
andb
and
pop
jae
sub
pop
cmp
dec
cs
jbe
sbb
add
lret
jg
ret
test
inc
loopne
in
jg
push
mov
add
adc
or
ss
xor
cmpsl
or
push
mov
or
mov
and
jle
and
pop
mov
sub
enter
push
pop
pop
aas
insl
es
jle
dec
test
pop
pop
rclb
mov
mov
cmp
lret
shr
ret
xor
imul
and
ds
inc
push
push
xor
and
sub
in
outsb
or
xchg
movsb
test
mov
mov
adc
ret
cld
sbbb
push
shll
add
xchg
jo
aam
mov
sub
sub
push
inc
fadds
hlt
pop
movsb
or
sub
pop
dec
and
aas
loope
xchg
xchg
xlat
dec
test
jle
icebp
lcall
repz
mov
rcr
mov
mov
push
pop
mov
mov
fsubrs
gs
stc
mov
jno
movsb
push
and
lcall
ret
or
mov
outsb
lcall
pusha
ret
mov
push
pop
icebp
or
das
sub
loopne
arpl
int
xchg
and
add
pop
jnp
pop
gs
push
adc
mov
add
mov
cmpsb
xor
mov
jb
or
sbb
mov
jmp
pop
sub
sub
ljmp
push
fiadds
pop
xchg
mov
push
and
dec
jbe
mov
xorl
jno
and
int
cltd
mov
std
cmp
xor
sbb
add
push
adc
cmpb
mov
mov
in
xor
push
pop
mov
out
pop
push
mov
call
push
pop
js
cltd
inc
icebp
ret
aad
jecxz
dec
mov
mov
repz
cmp
das
sbb
sbb
or
data16
shrb
mov
js
mov
xchg
xor
ret
push
daa
loop
pop
test
adc
sub
pop
cmp
inc
lock
xchg
jnp
nop
jb
les
xchg
test
sbb
pop
cmp
mov
clc
divb
mov
push
int3
int3
bound
adc
jmp
scas
divb
insb
and
ret
pop
loop
outsb
mov
movsl
shrb
mov
ja
out
or
into
enter
outsl
shll
adc
dec
dec
sbb
sbb
ficoml
fldt
jmp
sub
popa
xchg
inc
or
pop
cmp
jl
jne
jns
xchg
loopne
fidivs
xchg
jae
sub
adc
jmp
sub
mov
adc
lea
aaa
jle
mov
sbb
xchg
dec
dec
ret
jge
ja
in
js
jns
idivb
jns
jnp
xor
jecxz
mov
inc
or
inc
xchg
ds
outsl
mov
into
jmp
jg
int
mov
xchg
mov
insb
xchg
and
pop
out
fsubrl
xchg
adc
cmp
xchg
or
jae
mov
jmp
out
imul
movsb
xchg
les
inc
das
rcl
mov
xor
std
pop
mov
popf
sbb
clc
xor
dec
jg
loopne
shl
sahf
lods
inc
sbb
in
inc
popf
pushf
cmp
and
xchg
cmp
int3
sbb
repnz
sub
cmp
jg
lds
sub
mov
and
pop
jmp
mov
call
xchg
dec
mov
shlb
out
cmpsl
jp
mov
cwtl
divl
or
adc
jmp
jge
leave
addl
lahf
ror
subb
clc
test
mov
jge
inc
cmp
add
repz
int
mov
nop
sub
adc
fisubrl
fs
repnz
mov
in
pushf
push
sbb
stc
jbe
push
inc
negb
in
stc
pop
cmp
lret
jbe
dec
and
mov
sbb
dec
daa
fnstsw
mov
testl
mov
dec
dec
cmp
sub
or
aam
jp
shrl
mull
push
jno
push
add
hlt
and
fchs
mov
mov
add
pop
xchg
sbb
cs
mov
loope
repnz
out
fldt
out
xchg
sahf
mov
movsb
or
cmp
sub
ss
shl
xchg
jne
mull
lcall
xchg
mov
xchg
in
pop
and
mov
rcr
jno
xchg
ret
pop
sahf
bound
in
adc
repz
in
push
push
jmp
adc
or
ret
movsl
pop
leave
jg
sbb
sbb
push
add
jg
mov
or
js
dec
jg
insb
mov
aaa
in
lahf
dec
inc
dec
mov
test
sbb
jne
ja
out
fs
fstps
xchg
mov
shl
sub
das
xchg
insl
or
inc
mov
enter
repnz
repnz
mov
pop
mov
dec
pop
jg
sbb
and
pop
push
sbb
aas
sbb
push
addb
cwtl
or
and
push
rcr
subl
fisubs
push
sbb
push
cli
leave
mov
xlat
push
push
dec
pop
lret
or
aam
xchg
fmull
mov
orl
push
stos
ret
adc
sub
jge
mov
in
sub
dec
rcll
xor
jle
mov
scas
cmpsb
fstpt
shl
dec
mov
mov
insl
xor
mov
jae
call
test
ficompl
or
push
pushf
cmc
es
inc
mov
rorl
faddl
push
aaa
mov
movsb
jmp
jne
pop
mov
mov
das
imul
mov
out
cmp
xchg
inc
pop
outsl
jmp
inc
fistpl
dec
into
lods
add
repz
sbb
test
frstor
jb
pop
ss
dec
or
test
xor
lret
ss
fcmove
loop
gs
imul
mov
cltd
xor
mov
inc
imul
lods
imul
repnz
imul
ja
shl
adc
jb
jae
fisubrs
mov
jns
clc
inc
clc
aas
jecxz
bound
inc
or
jns
inc
adc
lret
push
push
pop
test
lahf
mov
and
int3
push
push
push
push
pop
jle
iret
cmp
shrl
xor
or
insb
mov
sub
mov
xor
mov
out
mov
or
js
sub
push
in
decl
cwtl
sbb
popf
push
cmc
fistpll
std
cmpsl
push
imul
add
mov
leave
add
popf
and
xchg
jge
mov
and
in
inc
or
xchg
adc
lret
xchg
sub
fldl2t
fmul
or
dec
sub
add
jecxz
push
xchg
stos
adc
adc
aaa
mov
cmp
pushl
cmc
scas
inc
adc
iret
inc
sbb
frstpm(287
subl
dec
popa
fisubrs
aam
sbb
mov
and
rolb
outsb
xchg
adc
lret
mov
leave
shl
hlt
push
jl
popa
dec
or
rorb
outsb
jmp
pop
flds
cmp
xchg
hlt
push
mov
stos
test
fs
mov
aas
inc
mov
pop
adc
fcomi
inc
push
ja
insl
lahf
int
lret
xchg
lds
pop
jno
mov
mov
mov
mov
adc
movb
mov
xchg
cmc
stos
and
lods
add
pusha
adc
jbe
shlb
dec
jmp
insb
xchg
into
push
cmp
inc
jae
xor
mov
fcmovb
fs
dec
dec
leave
xor
fistl
jl
push
clc
or
push
xor
inc
call
js
test
out
and
or
stos
in
jle
aas
add
ljmp
or
sahf
lea
push
lods
inc
stos
sub
xchg
xchg
push
lahf
lods
out
mov
jne
bound
ljmp
mov
pusha
cmp
ret
test
pop
add
andl
bound
dec
ret
adc
aam
test
rcrl
adc
sti
adc
cmp
daa
leave
mov
cltd
adc
das
je
cli
sbb
in
inc
mov
inc
or
or
test
lods
dec
mov
adc
inc
test
out
pop
idivl
mov
pop
mov
into
outsl
inc
or
jmp
or
mov
pushf
out
mov
sbb
insl
lock
adc
mov
scas
hlt
std
idiv
mov
out
cmp
xchg
inc
mov
into
dec
mov
les
xchg
xchg
loopne
movsl
cmpsl
jle
shrb
push
insl
adc
in
shll
pop
cmp
jmp
sub
push
fcompl
adc
mov
movsb
test
inc
cltd
cmp
mov
mov
sbb
daa
sbb
add
das
or
xor
out
mov
aaa
mov
mov
mov
push
xchg
push
jge
xor
es
dec
bound
add
sub
ret
test
inc
fs
sbb
adc
nop
pop
sbb
cmp
dec
adc
gs
aam
and
mov
inc
inc
sti
fisttps
je
xor
adc
lea
pusha
nop
fidivl
shr
add
in
cmp
in
add
xchg
jl
xor
sbb
scas
ret
rol
setge
dec
out
push
data16
mov
fwait
negb
mov
pusha
dec
pop
inc
add
adc
sbb
mov
stos
out
popf
arpl
int
mov
ja
pop
mov
push
adcl
cwtl
add
testb
push
push
lds
or
sbb
or
push
stc
int
aad
sbb
mov
cmp
fistpl
push
loop
cld
mov
movsl
dec
sbbl
mov
lret
and
testl
rclb
pop
shlb
cmp
sbb
inc
and
shrl
pop
lods
mov
test
clc
pop
cmpsb
mov
ds
gs
insb
movsb
lret
js
cli
out
shrl
mov
push
inc
or
mov
sbb
lret
cmp
daa
push
jns
jo
jecxz
add
aam
mov
scas
mov
jp
add
call
jl
xorb
fyl2x
repnz
xor
nop
icebp
test
cld
push
sbb
mov
andb
and
test
mov
inc
lret
or
fidivrl
mov
pop
pop
mov
lods
dec
aam
sbb
aas
insb
loope
pop
jecxz
inc
xor
push
aam
adc
flds
sbb
loop
or
sahf
jo
and
xchg
iretw
mov
sbb
jne
outsl
cwtl
dec
nop
sahf
aas
movsl
je
pop
loope
int3
stos
pushf
movsl
or
pop
pushf
mov
sbbl
cli
mov
in
movsl
stc
jnp
jo
sub
add
in
ss
jmp
cltd
cld
in
mov
loopne
mov
or
cmp
addl
pop
jp
xchg
sub
xor
out
nop
adc
or
xor
jg
mov
fwait
insl
xor
shlb
daa
add
dec
sbb
test
mov
outsb
cmp
cwtl
test
dec
imul
lcall
xchg
xchg
jb
ret
je
fdivrs
dec
jmp
adc
fnstenv
add
sahf
incb
test
pop
or
leave
xchg
int3
jo
popf
sub
aad
dec
push
sbb
aam
xor
testb
adc
pop
or
pop
ret
cmpb
aaa
cmp
pop
mov
lea
dec
scas
dec
mov
sete
sbb
inc
xor
fstps
stos
add
sbb
pop
outsb
mov
movsl
sbb
fcmovb
mov
jnp
jmp
pop
pop
addr16
dec
decl
xor
add
stos
leave
push
lret
push
adc
mov
mov
add
incl
add
leave
mov
lds
leave
mov
movsb
fsubs
lahf
mov
pushf
ret
fwait
jo
xchg
inc
jns
fcom
adc
lods
idivb
xchg
cwtl
pop
loop
mov
pop
push
popa
jl
inc
lock
testl
sub
pop
xor
dec
cltd
fsubrl
inc
sub
js
iret
mov
push
push
fldl
pushf
cmp
aad
je
and
pop
lahf
xchg
hlt
into
nop
xchg
pop
or
faddl
outsb
push
pushf
jge
mov
ret
cmpsl
cs
fucom
mov
pusha
call
out
popf
jle
mov
inc
cmc
cltd
mov
fisttps
jns
mov
daa
mov
loope
test
sti
dec
sub
mov
clc
jl
sbb
cmp
call
fistpll
out
inc
and
jg
fidivs
adc
daa
push
stos
xorl
adc
mov
xor
jl
out
es
inc
sub
sbb
arpl
add
mov
pop
mov
or
movsl
jecxz
loopne
or
and
ret
in
xorb
pop
test
jno
pcmpeqw
es
scas
push
rcll
outsb
or
cmpsb
mov
fldt
test
pop
and
cli
pop
inc
dec
cld
push
push
dec
std
test
or
adc
mov
adc
pop
ja
mov
inc
aas
clc
or
negl
cmc
and
je
jae
dec
pop
xor
jp
sti
mov
xor
sub
in
stc
pop
popf
xchg
fnstcw
std
pop
and
fdivs
mov
sbb
test
lea
sub
jno
push
sub
mov
cld
mov
addr16
int
fs
not
xchg
pop
dec
fs
testb
dec
popf
cmp
aaa
loop
cltd
std
shrb
imul
out
cmpl
dec
cli
lret
fwait
mov
jo
xchg
decl
ljmp
inc
add
or
sub
enter
sbb
ret
cmp
adc
pop
cmpsl
fcomip
sbb
jmp
xchg
inc
pop
sahf
aam
dec
xchg
out
push
push
push
lahf
sbb
mov
push
or
fadd
cmpsb
jbe
fildll
ljmp
sub
rcll
inc
sub
insb
xchg
sbb
pop
ljmp
jecxz
sbb
mov
jle
mov
sahf
push
pushf
sahf
jb
imul
and
sbb
xor
pop
mov
mov
mov
adc
leave
mov
pop
in
cmpsl
mull
out
loopne
imul
cmc
jno
inc
cld
and
int3
aaa
inc
cwtl
push
rcrl
add
ret
pop
push
sbb
in
imul
inc
mov
lret
mov
cmp
sub
push
add
imul
mov
gs
mov
andb
das
lret
outsb
pop
push
mov
add
les
mov
xchg
jmp
scas
mov
or
call
test
and
pusha
push
cmp
and
stos
hlt
cld
popa
adc
cmp
pop
cs
fcmove
data16
mov
jmp
insb
fisubrl
das
shrb
mov
sub
push
jmp
adc
andb
ljmp
das
popf
xchg
fldenv
out
pop
imul
lret
fsubs
adc
fisubrs
jnp
cltd
sbb
jo
imul
out
mov
adc
enter
or
insb
xor
stc
pop
and
outsb
fildll
ss
out
xor
and
mov
testl
pop
add
je
popl
cld
fs
sub
pusha
fsubrl
aas
scas
stos
das
lret
rorl
imul
loopne
mov
cmp
imul
mov
mov
imul
fidivrl
popf
rcrl
push
call
and
jbe
bound
pusha
inc
dec
push
loopne
decl
outsl
inc
jp
sub
pop
cmp
cmc
lods
mov
push
xor
aam
aaa
dec
cwtl
clc
pusha
mov
paddq
pop
push
pop
inc
mov
fadd
mov
sub
or
out
iret
lret
push
pop
inc
and
mov
push
in
outsb
rcrl
add
adc
lea
imul
lea
adc
cld
dec
cmc
dec
test
sub
pop
inc
or
in
add
push
sub
in
test
movsl
loopne
jno
rcr
lods
xorl
adc
ja
push
and
dec
push
jb
xchg
mov
insl
dec
pop
push
ja
inc
pusha
insl
mov
adc
sbb
and
sub
movsb
or
adc
add
dec
sbb
mov
mov
in
xchg
fldt
arpl
mov
cmp
and
test
push
mov
sub
push
sub
cmp
imul
mov
shl
or
add
mov
lret
shll
popf
pop
adc
push
pusha
push
and
add
enter
xor
mov
gs
xchg
jg
adc
outsl
jmp
sub
pop
dec
fsubrs
hlt
into
jle
mov
sbb
xchg
xchg
cmp
fs
jae
flds
fisubl
xchg
nop
cmp
push
sub
dec
enter
jge
mov
pop
in
sub
lods
mov
cli
add
add
imul
pop
cltd
cmp
fwait
mov
mov
pop
lods
adc
pop
imul
pop
test
or
inc
jo
add
push
push
inc
jle
push
pop
inc
or
mov
mov
repz
dec
inc
call
or
and
ds
xchg
sub
std
leave
mov
inc
mov
adc
mov
jb
mov
lea
ds
decl
lea
stos
pusha
pop
mov
push
cmp
xor
ljmp
push
test
and
ja
ds
into
lahf
out
setbe
leave
adc
push
lods
call
mov
cmp
rcl
push
movsl
fldenv
dec
mov
mov
sti
add
iret
adc
xor
fcmovbe
test
cmp
xor
stc
nop
test
mov
std
cmc
adc
pop
mov
mov
cltd
addr16
push
cmpsb
fiaddl
pop
jbe
clc
or
jne
repnz
xchg
or
aaa
cmp
dec
mov
push
adcl
mov
dec
jp
xor
sbb
lret
or
inc
add
or
repz
xchg
movsl
mov
imul
sub
jnp
repz
cli
sub
test
mov
out
fnclex
mov
inc
fiaddl
inc
cmp
out
mov
push
ja
sti
cmp
push
flds
mov
push
and
cmp
sbb
fwait
pop
jno
shll
fs
aaa
icebp
test
cmpsl
aas
dec
icebp
aad
iret
mov
outsl
jno
jae
fsubrl
pop
xchg
out
and
sbb
jbe
movsl
pop
xor
xor
push
sub
cmp
jae
jg,pn
push
clc
cmp
push
xor
je
mov
pop
outsl
sub
inc
jp
push
mov
and
xchg
repnz
inc
xchg
xor
out
je
ljmp
add
movsl
fildll
dec
and
inc
test
fists
daa
aad
arpl
mov
stos
mov
es
add
fldpi
stos
mov
daa
pop
dec
imul
inc
popf
sbb
sbb
mov
inc
insl
ljmp
inc
push
int
notb
and
mov
test
push
mov
mov
cltd
and
imul
test
mov
jno
jb
nop
add
mov
dec
adc
aas
mov
dec
arpl
inc
push
xchg
cli
jg
add
sbb
sub
rolb
mov
pushw
ja
xor
ss
test
mov
mov
sbb
dec
push
das
jmp
setl
addr16
cmp
leave
mov
xchg
and
mov
bound
cli
xchg
inc
dec
pop
jl
push
test
adc
enter
lods
and
in
cltd
push
sbb
xchg
and
imul
or
xlat
jb
repnz
cmp
push
cmp
js
push
test
clc
mov
pop
sbb
push
push
mov
mov
jns
shr
inc
sbb
add
scas
mov
ljmp
push
inc
ljmp
std
jmp
xchg
outsb
inc
ds
jne
pop
cmp
fdiv
lods
aad
cmp
push
outsb
cs
out
hlt
pop
cmp
add
ret
or
std
mov
mov
mov
loope
mov
cmp
push
movsl
fidivs
xchg
add
cld
add
ds
jmp
inc
cmp
mov
ret
mov
jns
fwait
sbb
addr16
add
cmpsb
dec
or
pop
stc
adc
or
fwait
adc
sub
inc
scas
push
fisttps
add
call
fdivr
inc
fmull
xchg
pusha
add
gs
pop
push
lret
insb
cmp
mov
add
scas
inc
cs
sarl
ja
cli
inc
mov
mov
cmp
push
icebp
adc
sti
lods
jns
lahf
flds
xor
xor
or
decb
cmp
mov
jns
int
fucomp
lds
movd
push
push
jecxz
pop
push
xor
into
scas
add
std
xor
and
imul
pop
jle
mov
pop
lods
or
in
imul
add
sbb
ret
and
bsf
test
ljmp
pop
loope
lods
jecxz
xchg
aaa
dec
das
jmp
jb
sub
int3
call
xor
or
sbb
jnp
xchg
fiadds
sarl
push
jnp
mov
xlat
jecxz
push
cwtl
or
shlb
int3
out
out
pushf
add
cwtl
imul
sbb
jp
or
adc
sbb
jg
pop
inc
pop
mov
outsb
insl
pop
aas
and
in
push
lods
out
pop
lahf
test
jge
test
loope
pop
scas
cmp
fcmovne
and
ret
into
aam
mov
xor
or
lods
fcompl
sbb
cmpsb
fisubrl
cmc
pop
test
mov
aam
ja
xor
or
push
dec
fstpl
push
push
hlt
mov
mov
adc
jbe
sub
stos
cmp
nop
xor
test
repz
cwtl
sarb
mov
in
adc
mov
push
rclb
das
aad
inc
addr16
aad
shrb
push
loopne
addr16
adc
xchg
xor
in
xor
roll
sub
repnz
cli
aas
xchg
mov
pop
mov
xchg
push
lret
cmp
sbb
mov
sub
jg
sarl
lods
or
es
push
jecxz
cmp
or
sub
fsubs
push
add
pop
adc
pop
dec
jo
shlb
add
pop
pop
and
out
jmp
xor
stos
mov
fs
loop
ret
std
sarl
callw
jno
mov
pop
outsb
xchg
jmp
or
in
jmp
mov
jl
xor
inc
xor
mov
jns
cmc
sub
sub
pop
inc
fs
in
pop
xor
and
push
imul
fdivs
mulb
jle
and
dec
pop
jle
imul
aad
fadd
sub
fwait
push
lret
and
mov
cmp
orb
std
adc
pusha
test
jp
or
inc
addl
mov
sbb
sahf
popa
sub
sub
rcl
ja
inc
pop
and
sub
jb
out
clc
enter
dec
mov
mov
adc
xchg
cltd
loope
es
rolb
inc
rorl
sbb
add
inc
push
jns
sbb
rcrb
js
mov
or
sbb
movsb
out
bound
mov
data16
sub
stos
test
inc
je
sbb
cmp
push
pop
pop
add
rolb
adc
xorb
sbb
or
xchg
jnp
out
fistl
xchg
scas
ror
push
and
sub
enter
xchg
std
xor
ret
bound
mov
ja
roll
xor
xchg
inc
push
lret
cmp
popf
out
xchg
cmpsl
add
pop
lea
jae
jns
inc
repnz
jb
aaa
movsb
and
daa
test
mov
adc
sub
dec
adc
add
push
outsb
xor
sbb
xor
sbb
data16
mov
xchg
or
addb
cvttps2pi
or
xchg
inc
pop
setge
jb,pt
sub
jb
and
aaa
sbb
gs
xchg
ret
lahf
test
cmp
sbb
xchg
cmc
ret
dec
icebp
addl
jns
xor
sbb
sub
pusha
adc
xor
stos
xchg
ret
mov
sub
dec
cmp
cmp
mov
or
mov
icebp
fcomi
push
jo
mov
fiaddl
mov
rcrb
adc
mov
movsl
sarb
ret
mov
lcall
add
xor
subb
pop
xchg
std
adc
fxch
psrad
incl
mov
test
fsubrs
mov
out
mov
pop
out
sbb
cmc
gs
cltd
and
fcoml
je
jne
mov
imul
shrl
movsb
cmp
negl
jmp
ss
xchg
test
push
cmp
jl
sbb
cmp
fwait
sbb
stc
mov
and
inc
loopne
adc
mov
pop
fdivrs
aaa
repz
ljmp
paddsb
test
ljmp
xchg
jns
in
cld
out
pushf
inc
lods
call
xor
mov
aas
cwtl
and
mov
int3
ljmp
add
lret
ljmp
rclb
xchg
das
into
push
add
pop
sub
sub
jno
push
pop
xor
cmp
js
ss
stc
jbe
icebp
into
negl
and
mov
xchg
outsl
inc
jge
aam
and
test
cwtl
mov
dec
pop
mov
loop
mov
add
imul
add
xchg
sbb
xor
test
jo
cmpl
jo
popa
mov
cmc
mov
inc
dec
and
in
cmp
das
sbb
pop
xchg
pop
add
mov
hlt
or
sbbb
lret
push
mov
push
sbb
jns
lea
sahf
pop
push
sub
jbe
es
jns
mov
cltd
lods
pop
mov
aad
add
lods
sub
int
sbb
rcll
cltd
aad
cmpsl
push
imul
adc
pop
loope
sub
scas
fcoml
cmp
add
into
add
leave
push
xor
jp
pop
pop
popf
mov
loope
aad
nop
sarl
push
out
jb
js
and
pop
shll
stc
xor
sbb
cmc
push
cmp
cmc
sbbb
test
std
mov
iret
js
push
cltd
popf
jecxz
add
mov
ffreep
xchg
and
mov
dec
pop
cli
jmp
and
int3
sbb
cmp
pop
jl
arpl
loopne
rclb
inc
inc
leave
jb
sarl
insb
sbb
shll
clc
roll
mov
fwait
fwait
lahf
sub
pop
inc
test
and
cmc
movsl
stos
fwait
into
xor
add
fldt
ljmp
inc
movsl
adc
aam
cmp
rorb
adc
mov
call
inc
dec
mov
push
push
enter
or
cli
xchg
pop
or
add
mov
data16
scas
inc
jae
jmp
ss
mov
xlat
int3
cmp
pop
jmp
movsl
push
mov
fcoml
xchg
push
fbld
xchg
mov
sub
orb
cli
jmp
out
int3
mov
mov
cmp
mov
movsb
loopne
mov
repnz
dec
xchg
or
add
daa
and
jl
push
daa
stc
pusha
lea
enter
jle
pmovmskb
call
das
and
lcall
les
sbb
in
cmp
mov
cmp
jmp
inc
sub
je
mov
nop
add
lea
jne
jb
add
sahf
and
or
rcrb
jg
pop
std
out
popa
mov
and
xchg
dec
int
in
outsb
pop
sahf
je
adc
sub
fcompl
nop
or
outsb
add
cwtl
clc
sub
stos
cwtl
sub
xchg
aas
in
mov
mov
sbb
sahf
jecxz
xchg
fildl
out
sub
mov
std
mov
fnstsw
pusha
push
sahf
pop
xchg
mov
scas
aam
out
jnp
push
jl
js
scas
and
dec
push
icebp
mov
das
sub
or
mov
jns
mov
add
jmp
movsb
xor
cmp
lods
xchg
cmp
xchg
pop
outsl
ja
dec
and
lcall
ja
adc
and
shr
cmp
out
add
test
xchg
aas
int3
shr
and
into
outsb
jns
mov
popf
adc
gs
mov
ffree
sub
les
cltd
push
sbb
shlb
add
in
mov
lret
xor
push
hlt
push
cmp
mov
shlb
mov
xchg
test
subb
mov
push
xor
xchg
into
xchg
repnz
movsl
lea
scas
test
cmp
jecxz
cltd
daa
outsb
pop
push
sub
mov
push
mov
mov
jne
jmp
mov
in
xchg
lahf
jp
icebp
lcall
jmp
jmp
out
inc
pop
aaa
in
pop
sti
adc
or
cmp
jl
and
mov
fcoml
add
nop
pop
jmp
fs
negl
cld
test
adc
out
cs
sub
mov
cmpsl
sbb
cs
cmp
lcall
jo
push
mov
aaa
cs
mov
scas
mov
or
fmulp
shrb
mov
and
sti
das
jo
ret
cmpsb
ss
lods
mov
clc
les
push
adc
adc
dec
mov
fnstcw
popf
sbb
push
mov
out
jp
outsl
jb
nop
hlt
dec
outsl
sbb
mov
mov
jnp
aam
jmp
ror
xchg
add
xchg
mov
and
rcr
lds
mov
sti
or
cli
jp
lds
jnp
call
cmp
lock
or
mov
xchg
or
mov
dec
pminsw
repz
rcrl
mov
adcb
adc
or
out
mov
dec
sub
fs
daa
enter
mov
cmp
push
movsb
adc
xor
clc
lea
dec
loope
cmp
inc
insl
cmpl
push
aam
aad
loope
lock
pop
jmp
xor
pusha
ljmp
push
je
push
daa
icebp
or
lahf
sti
lahf
mov
mov
shlb
cmpsl
imul
adc
neg
out
dec
pop
mov
lcall
mov
fcoms
mov
push
lods
outsl
popf
cmp
mov
adc
pushw
hlt
data16
roll
pop
nop
ss
sub
pop
mov
jb
sub
mov
adc
clc
out
xor
outsl
imul
ja
adc
fiadds
and
xlat
push
test
push
test
pop
xchg
jne
into
sar
in
popf
pushf
mov
adc
xchg
dec
in
and
imul
or
fadds
je
in
jne
push
clc
and
fwait
shrl
sub
sbb
mov
rorb
inc
imul
sub
mov
popa
scas
ret
push
push
mov
addr16
mov
leave
and
in
popf
outsb
imul
mov
test
shlb
test
lds
ds
pop
mov
sbb
and
dec
arpl
sbb
cld
out
orl
stc
lret
orb
push
movsb
jmp
xchg
cmp
push
xor
dec
js
mov
push
xchg
hlt
cmp
test
hlt
cld
test
movl
lcall
pop
adc
cmp
pop
mov
pop
lret
jmp
dec
adc
and
push
add
mov
lock
xor
mov
sub
stc
movsb
test
xchg
rorb
mov
fwait
or
push
movsb
push
jle
in
scas
cmp
rcrl
loop
push
adc
xor
das
xchg
out
mov
lret
daa
inc
fiadds
jae
cmp
mov
aas
fs
rorb
jo
scas
mov
mov
iret
mov
and
push
loop
bound
jge
xchg
cmc
adc
ds
xor
fs
push
xchg
decb
movsb
dec
cltd
jns
push
xchg
lock
add
bound
sti
stos
jl
pop
xchg
or
mov
lds
bound
div
das
das
dec
xor
mov
loopne
test
lock
xor
dec
das
negl
fucomi
ds
xor
scas
inc
test
movsb
cmp
mov
into
test
fwait
push
jl
fwait
mov
push
pop
mov
enter
fnstenv
stos
adc
mov
mov
xchg
cmpsb
cmp
push
mov
aam
mov
or
mov
xor
mov
in
shlb
mov
or
add
out
stos
mul
int
aaa
jmp
adc
inc
ficoml
xchg
adc
cmpsl
out
jns
xchg
xchg
push
inc
cmc
imul
adc
mov
lds
xor
aas
and
pop
push
push
add
js
notb
inc
push
cmp
cmp
push
scas
adc
divb
inc
out
dec
adc
xchg
and
xor
xor
or
mov
out
out
mov
lcall
and
mov
xor
jo
scas
out
subps
mov
or
and
icebp
sarl
or
xor
lret
xor
fucomp
pushf
ficoms
lods
xlat
inc
jl
or
mov
lea
sbb
push
cli
mov
test
addr16
or
dec
mov
pop
adc
loope
das
adc
or
imul
ljmp
loopne
rcrl
and
jae
adc
sbbl
mov
bound
psubsb
mov
push
lahf
negl
mov
bnd
xchg
pop
arpl
inc
outsl
pop
push
pop
outsl
xchg
xor
pop
add
inc
dec
daa
pop
cmpsl
cmpsl
push
mov
pushf
hlt
sbb
sti
push
mov
out
mov
sbb
icebp
or
push
sub
fisttps
jno
aad
popa
mov
hlt
xor
ss
subl
dec
dec
push
cmp
imul
loopne
cmp
push
cltd
push
inc
jns
inc
and
xchg
cs
xchg
and
fsubrs
adc
add
sbb
xchg
out
int3
cltd
bound
or
scas
pusha
cltd
push
xor
mov
ja
shrb
cmpb
iret
lret
lds
jmp
push
es
sahf
popa
fistps
mov
jb
stos
or
loope
cmc
sti
fs
cld
jmp
jnp
cmp
out
lea
mov
cmc
xor
data16
lret
lea
jo
sbb
incl
xor
aam
jecxz
or
and
fisttpl
adcl
mov
dec
mov
or
pop
jge
jp
or
inc
movsl
sbb
insb
or
data16
aas
test
push
sub
cmp
xchg
aaa
cmp
call
test
mov
adc
sahf
bound
and
incb
add
mov
xchg
jo,pt
or
icebp
aas
mov
adc
lods
popf
pushf
pop
sbb
dec
and
ss
insb
mov
mov
inc
cmpsb
out
cmpsb
pop
push
mov
mov
repz
cmp
ror
aas
mov
mov
cmp
or
dec
mov
js
loop
sbb
sbb
aad
std
insb
lock
xorl
call
outsb
mov
push
sbb
dec
pop
gs
inc
das
mov
mov
aad
lods
jmp
sbb
or
loopne
pop
out
jg
dec
inc
xchg
stc
aam
lock
test
adc
cmp
rolb
stos
or
in
imul
mov
push
jmp
pusha
sbb
jb
rcrl
adc
mov
push
aas
aam
adc
dec
loopne
sbb
push
sub
ret
imul
mov
sub
jmp
push
xor
xor
dec
xchg
int
xchg
cli
sub
into
mov
test
inc
mov
jge
mov
into
out
adc
std
es
mov
mov
int3
add
stos
push
lods
imul
dec
mov
mov
insb
lahf
xor
popa
mov
mov
sbb
add
cmp
inc
test
and
sub
in
movsl
push
pop
sub
unpckhps
push
mov
inc
int
add
sub
xlat
sti
push
xchg
or
or
sub
imul
gs
xchg
out
mov
or
pop
outsb
adc
pop
scas
and
xor
hlt
xchg
push
inc
js
out
fstp
xchg
nop
lock
mov
adc
insl
pop
out
add
outsb
inc
aaa
mov
push
lahf
pop
pop
jnp
lods
add
faddl
in
push
aam
lods
mov
add
mull
dec
insb
mov
pop
mov
andl
jns
sub
cs
test
dec
push
gs
lret
enter
icebp
stos
rclb
cmc
cmp
push
and
inc
aam
sub
divb
pop
lret
test
out
mov
aam
jg
sbb
cwtl
adc
inc
jge
ficoml
cmpsl
fdivs
stos
iret
cli
pop
jnp
sahf
lods
into
mov
pop
lret
mov
fld
jmp
rorl
fsubrs
dec
pop
sub
mov
dec
and
lods
out
jecxz
lods
or
lock
pushf
cltd
push
aaa
jecxz
lods
mov
ljmp
les
mov
in
test
sub
daa
std
ss
fisubs
and
sbb
xor
mov
gs
sub
cmp
in
push
lock
mov
test
or
xor
cmp
daa
mov
repnz
jnp
dec
xor
mov
shlb
adc
jecxz
pop
out
cmp
sbb
es
mov
push
es
xor
rorb
xlat
jecxz
stos
pushfw
cmp
pop
bound
mov
pushf
fildll
leave
dec
dec
jmp
movsl
shlb
js
sub
jne
sbb
enter
xchg
pushl
pop
hlt
xchg
gs
jns
pop
daa
and
mov
pusha
fldz
rorb
jp
pop
mov
dec
ret
int
lahf
out
aad
sbb
lods
fldcw
std
and
xor
je
lret
mov
mov
sbb
sub
rcl
xor
pop
and
dec
pop
xchg
xchg
sarl
or
inc
in
mov
mov
lock
movsb
shll
add
out
repnz
out
jno
dec
in
mov
ss
das
outsl
xor
iret
pop
aam
cmp
xor
outsl
popf
scas
mov
andl
mov
push
dec
aam
cmp
adc
mov
pop
mov
js
cmp
and
ret
and
add
stos
inc
cld
push
push
test
mov
je
icebp
ret
hlt
mov
push
sbb
testb
fnstsw
faddl
or
loop
test
cmpsl
push
pushf
lods
sbb
lret
cmp
movsl
in
mov
mov
push
imul
mov
fsubs
jns
stc
imul
shl
loopne
outsb
sub
push
fimuls
dec
mov
lret
push
push
insb
jmp
xchg
pop
aaa
jmp
inc
sti
mov
cmp
callw
roll
movsb
fmull
pop
and
cltd
push
scas
pop
shufps
insl
leave
jno
cmc
pop
in
fiadds
rcll
int
cmp
dec
or
push
lahf
mov
into
aam
stc
popf
flds
popf
in
fdivl
insl
inc
mov
jb
out
jnp
inc
stc
cmpsb
mov
inc
push
js
ja
cltd
imul
and
movsl
adc
aaa
lds
adc
mov
icebp
jp
add
scas
mov
pop
movsl
mov
lods
dec
or
pusha
call
and
jecxz
jbe
cmpb
mov
xor
clc
sub
jnp
pop
dec
test
adcl
xchg
xor
or
push
pop
cltd
cmc
dec
lods
int
test
fmulp
or
gs
aam
sbb
mov
insl
mov
jecxz
daa
mov
or
or
sub
push
jbe
out
cmp
inc
or
loope
sub
dec
push
inc
imul
outsl
mov
shrl
mov
js
loop
add
push
mov
cs
sbb
and
cmp
inc
shr
lret
test
aad
sub
inc
or
adc
popf
push
test
push
inc
inc
pop
and
pop
rclb
push
mov
aad
jns
push
je
sbb
pop
xchg
mov
test
aad
pop
mov
das
clc
std
inc
loopne
enter
mov
cltd
dec
xlat
mov
dec
pop
stos
popa
mov
icebp
and
add
outsl
and
arpl
lret
sti
iret
mov
sbb
dec
lahf
cmp
mov
inc
mov
ljmp
insb
test
mov
das
ret
imul
jmp
xorl
push
add
jbe
dec
lods
jns
out
pushl
push
push
sbb
cwtl
stc
popa
cli
andb
mov
in
rcll
or
fnstsw
xchg
cmp
add
stos
pop
in
mov
pop
add
test
mov
pop
and
fldcw
out
into
push
shll
xchg
mov
or
mov
sub
lcall
sub
push
xchg
out
scas
and
das
test
mov
das
incl
cld
gs
negl
rcrl
dec
mov
fidivs
pushf
inc
and
in
sub
sub
ja
cli
mov
ss
outsl
xchg
and
out
pop
adc
les
cmp
sbb
and
xchg
les
mov
movsl
fs
packuswb
pop
fs
popa
cmp
pop
fnsaves
shll
dec
xorl
push
pop
jl
sub
xor
dec
push
leave
imul
xor
jg
jmp
test
pop
lds
sbb
rcll
ljmp
outsl
adc
lcall
xor
sub
test
out
dec
out
push
mov
imul
cmp
insl
sub
cmc
mov
pop
pop
imul
jle
mov
mov
out
flds
gs
xor
sti
and
xor
andb
aam
mov
outsl
cli
jo
jb
out
jmp
xlat
jnp
xchg
mov
inc
add
push
lret
sbb
les
dec
xchg
std
sub
xchg
cmpsl
mov
push
mov
inc
shll
push
sub
pop
xor
int3
inc
jl
mov
pop
xchg
out
inc
inc
pop
mov
rcrl
out
sbb
mov
jl
insb
lret
sbb
rcrl
push
cmp
mov
sbb
imul
lret
outsl
dec
xlat
test
addr16
sbb
add
and
pop
pop
lret
jg
sub
inc
repz
mov
ljmp
or
adc
sbb
ljmp
or
hlt
pop
mov
cmc
xchg
xchg
cld
movl
cld
addr16
or
push
sub
push
add
scas
cmpsb
xor
jmp
sbb
pop
add
iret
ret
mov
pop
iret
xchg
out
lds
push
lock
sbb
sbb
ret
xchg
push
repz
dec
pusha
adc
mov
mov
and
dec
push
adcb
sbb
and
mov
ret
shll
in
shlb
xor
dec
clc
push
pop
lret
test
jmp
and
cmp
addb
sbb
enter
pop
mov
stc
cwtl
xchg
adc
mov
or
pop
in
pop
insb
imul
and
lods
test
jo
fimuls
cmp
pop
xchg
mov
or
lds
stos
add
cmp
pop
xchg
pop
test
push
adc
xchg
cli
fmull
jle
push
pop
inc
inc
popa
dec
pop
xchg
push
xlat
lret
nop
mov
xchg
test
fsubrs
push
insl
mov
gs
fs
lahf
mov
mov
mov
sub
jg,pn
les
inc
xor
add
aaa
xor
cmp
sbb
fidivs
pmulhw
or
pop
rorl
sub
std
fs
jp
adc
lods
push
xor
adc
adc
inc
popf
and
pop
enter
mov
add
mov
cld
cs
mov
mov
add
aaa
inc
push
sbb
pop
dec
dec
js
dec
and
js
and
lds
mov
jo
fwait
cmp
loop
push
sbb
mov
shrb
or
push
xchg
loopne
pop
in
xchg
lahf
or
or
xchg
pop
je
dec
into
xchg
add
lcall
add
roll
mov
shlb
fwait
jp
and
jns
pop
mov
clc
xchg
dec
mov
jmp
in
adc
push
sbb
xor
je
js
and
mov
test
in
cmp
jg
xchg
sbbb
das
repnz
nop
fsts
push
jp
adc
jb
ret
push
jle
jo
inc
popf
cmc
xor
mov
bound
test
inc
add
lahf
fildl
dec
and
jl
jnp
adc
dec
sub
mov
push
jge
push
stos
cld
and
gs
repz
ja
inc
shll
sbb
adc
nop
and
sbb
sbb
mov
stos
popf
fdiv
push
jl
ja
mov
movsb
insb
jmp
rorl
fdiv
cmp
mov
orl
push
add
adc
stc
lods
icebp
testb
or
pushf
stos
imul
xor
arpl
addr16
inc
mov
out
cli
popf
loope
cmp
ss
push
push
xor
mov
jbe
inc
inc
xor
lret
stos
inc
test
dec
push
rorb
push
add
ljmp
jb
ret
jecxz
cmp
cmp
lock
cmp
cmpb
lcall
cltd
or
dec
sbb
dec
mov
lods
mov
jbe
mov
jle
test
mov
jp
vmovapd
pop
mov
lds
out
pop
std
test
sbb
out
cld
xor
cmp
push
add
cmp
pop
cld
sahf
and
fs
repz
lea
jp
cmpsl
pop
outsl
fcomip
push
add
pushf
icebp
dec
inc
jmp
int
add
sahf
push
dec
aaa
xchg
imul
and
push
jmp
jge
icebp
sbb
ds
stos
out
mov
sbb
push
divb
out
push
pop
jp
and
adc
pop
or
xchg
and
sub
fwait
or
std
push
jbe
mov
xchg
dec
xor
in
jmp
test
mov
push
mov
xchg
adc
add
repnz
mov
mov
xor
mov
bound
sub
and
sbb
dec
and
outsl
jecxz
loop
xor
dec
sahf
fistpl
push
adc
mov
es
lahf
add
mov
stc
mov
hlt
mov
pop
push
mov
movsb
lods
jle
add
adc
scas
daa
xor
aad
int
mov
pop
sub
sub
dec
push
xorl
xchg
pop
icebp
cs
ret
or
dec
cld
and
es
push
mov
mov
push
and
outsl
jns
popf
mov
aad
std
dec
fstps
mov
jne
xchg
fsubrs
adc
lret
adc
pusha
leave
or
push
rorl
faddp
test
mov
or
test
lahf
aad
push
iret
lcall
into
out
sbb
mov
pusha
sbb
sub
hlt
cltd
sbb
or
and
jnp
out
inc
mov
pushf
cmpsb
mov
push
jp
and
rol
add
push
out
add
sbb
dec
mov
leave
popf
insb
inc
pushf
lahf
sbb
iret
and
rorb
loope
into
scas
mov
or
mov
rolb
fnsave
mov
cmp
mov
test
mov
iret
mov
stos
cwtl
imul
in
stos
jo
mov
fcmovb
movsl
outsl
adc
scas
sub
fstl
push
sarl
push
push
divl
mov
inc
mov
and
pusha
adc
jl
cmpl
enter
pop
fisttps
push
pop
fbstp
inc
enter
xchg
adc
sub
addr16
mov
loopne
ror
mov
outsb
les
ret
push
jae
push
dec
inc
mov
xchg
incb
sub
jecxz
xchg
test
pushf
dec
aas
mov
lea
inc
xor
and
cmc
cmp
stc
add
or
xchg
push
jge
push
fmuls
pop
mov
sbb
int3
push
ja
pop
rcll
inc
fcomp
xchg
adc
mov
adc
int
dec
adc
cmpsb
dec
stos
std
inc
mov
xchg
popa
mov
dec
mov
add
and
dec
jno
xchg
fdivp
adc
cmpsl
pop
jp
jge
idiv
fcmovnbe
popl
fwait
ja
cmpsl
sbb
in
cmpsl
pop
push
lods
test
mov
test
fistl
mov
inc
or
xor
mov
inc
in
jno
dec
mov
jg
ss
fstl
push
insb
inc
fs
dec
or
or
adc
push
pop
adc
out
pop
outsl
dec
cwtl
cmpl
add
dec
adc
add
jecxz
mov
daa
or
sub
ss
cmpsl
xchg
fdivs
add
insl
ja
inc
cld
fcmovb
popf
cmp
out
mov
cmpsb
adc
inc
lods
jbe
mov
fstpt
into
inc
out
xor
jbe
les
addb
sub
cmp
out
loop
mov
push
sti
les
lods
stos
push
xchg
inc
stc
add
in
cmp
xchg
mov
sub
dec
cmpsl
loopne
adc
cmpsb
movsl
xchg
mov
add
or
and
mov
pop
daa
sbb
xor
subb
ret
cmp
cmp
and
pop
mov
mov
adcb
int
stos
xchg
and
mov
mov
jp
xor
lret
and
push
and
scas
stos
jg
ret
inc
sub
lock
jmp
lret
inc
pop
ja
out
scas
pop
mov
lock
pushf
mov
js
outsl
inc
mov
add
addr16
cmpsb
adc
test
cmpsl
out
jge
dec
pop
pop
xlat
adcl
push
inc
es
loope
in
loop
sahf
sbb
inc
sti
or
adc
jle
push
dec
test
cld
jle
mov
add
cltd
mov
scas
mov
enter
fwait
cs
inc
inc
adc
movsb
aas
xchg
push
shrb
pop
aad
cld
sbb
xchg
out
pop
mov
mov
daa
lods
imul
mov
inc
test
xchg
repz
push
movsb
jge
sub
aaa
call
fimuls
xchg
dec
sbb
and
push
sbb
add
jne
ret
pop
lahf
pushf
out
out
fildll
faddp
push
scas
push
mov
mov
out
pop
push
jne
divl
aas
cs
lcall
pop
ret
out
xchg
push
pop
mov
xchg
and
inc
or
or
pop
pop
cs
mov
insl
sbb
shrl
aad
cmp
push
adc
out
lea
jp
cmp
cli
or
push
loop
aam
dec
lods
xchg
shll
adc
cmpsb
enter
fidivrl
and
ret
fdivrl
fistpll
pop
fstps
loop
sbb
movl
xor
push
jns,pt
mov
mov
adc
movsl
rorl
adc
fdivl
lds
inc
out
out
sbb
sbb
and
pop
cmp
cld
xor
inc
jle
stc
leave
sbb
cmp
outsb
pop
cmpsb
jmp
pushf
cmpsl
xchg
mov
pop
adc
sbb
test
repz
es
jo
repnz
pushf
and
adc
mov
fistpll
xlat
inc
lds
cltd
into
loopne
hlt
dec
mov
xor
in
ja
loop
xor
les
or
dec
pop
loopne
push
fwait
push
jg
sub
popa
cmp
mov
cld
xchg
popf
push
push
mov
insb
inc
lds
outsl
sub
inc
dec
cmpsl
dec
das
jae
lret
mov
ja
fcom
jae
push
pop
mov
and
pop
call
dec
xchg
and
lea
inc
xor
mov
add
out
xor
jecxz
jnp
fbld
adc
ret
pushf
fsubr
xchg
insl
fsubr
dec
pop
enter
push
int3
inc
call
std
jle
push
lret
mov
pop
mov
sub
or
and
or
push
in
xor
stos
xchg
cmp
sbb
mov
int
in
mov
ljmp
outsb
push
sti
stos
add
sub
add
int
fadds
call
add
adc
inc
aaa
lahf
xor
fisubrl
push
ljmp
mov
lret
jge
add
pushf
and
pop
std
sbb
out
push
mov
aaa
adc
sub
pop
fs
adc
leave
js
pop
cmp
mov
xchg
inc
loop
inc
push
fisubs
pop
call
pushf
xchg
jge
xchg
xor
std
cli
cmc
fiaddl
aaa
jge
stc
jnp
stos
jne
cmp
mov
and
sbb
arpl
int3
fimull
add
das
popf
cmp
loope
add
cmp
xchg
fdiv
jb
mov
sbb
sti
cmp
bound
movsb
or
cmp
sbb
or
jle
pop
mov
ret
sarb
insb
popa
daa
aas
cmc
sbb
and
shll
stos
and
xor
cmp
ljmp
add
xchg
sti
movsb
or
and
mov
mov
mov
lods
mov
push
xor
jo
adc
ret
push
pop
in
sbb
pusha
jnp
shrl
add
adcl
inc
ret
mov
stc
cmp
pushf
sub
mov
mov
push
push
imul
nop
sub
pop
mov
lock
div
fdivrl
adc
stc
mov
icebp
lods
push
add
mov
xor
pop
mov
mov
xchg
xor
mov
xor
xchg
in
loope
fsubs
and
push
das
js
ds
psubusw
clc
jecxz
stos
sti
dec
out
hlt
cs
cmp
stos
jp
adcb
mov
push
int3
daa
dec
frstor
mov
jne
ror
sub
push
lds
fidivrl
aam
adc
mov
mov
sub
push
loopne
pop
sbb
pop
and
and
mov
xor
jge
xor
pop
mov
outsl
andl
test
mov
lods
test
adcl
rorl
mov
sub
inc
mov
leave
xor
test
add
iret
inc
mov
mov
pop
in
fistpll
orl
cltd
in
mov
add
idiv
loopne
jbe
mov
pop
add
jno
and
xor
sub
adc
pop
out
cmpsl
jo
popa
aaa
sub
pop
mov
jl
adc
pusha
call
stos
cmp
icebp
xchg
movsl
inc
xchg
xchg
xor
adc
in
push
les
adcl
test
mov
jae
nop
pop
jno
pushf
adc
rcrl
outsb
cs
add
fs
cmc
cmpsb
and
je
xor
mov
fwait
movsb
and
or
mov
dec
mov
pusha
cmp
sbb
mov
jne
adc
jmp
sbb
sti
cltd
inc
fwait
jbe
mov
cmp
in
scas
dec
loope
adc
lret
or
orb
ja
mov
scas
pop
mov
aaa
fisubrl
push
mov
outsb
jle
xchg
js
jno
std
or
dec
cmpsb
test
pop
mov
cmc
movsl
dec
pop
xchg
out
dec
int3
and
arpl
dec
xlat
sub
pop
outsb
adc
jp
and
into
adc
sbb
and
aas
into
jne
out
push
inc
out
inc
fimuls
sbb
mov
cmp
push
pop
call
add
xor
aaa
sub
add
inc
mov
jmp
or
xor
aas
js
xchg
pop
mov
xchg
add
sahf
decl
fnstenv
lret
xchg
pop
jmp
pop
and
xor
test
cmp
mov
ljmp
lods
in
sbb
inc
in
jo
sbb
mov
call
and
pop
adc
fbld
mov
jb
mov
pop
adc
pop
xchg
mov
testb
dec
pusha
repz
mov
push
cmp
mov
cs
cld
adc
sub
jl
outsl
arpl
mov
or
ss
leave
lds
jno
shll
sbb
sub
push
fdivr
cmpsb
bound
inc
push
popa
paddusw
call
inc
imul
jae
ss
adc
ret
adc
add
lock
xor
lea
mov
xor
mov
test
cmp
orl
sub
push
pop
mov
sahf
bnd
stos
addr16
fs
inc
insl
sub
out
xchg
lds
cmp
inc
lock
mov
pusha
inc
pop
enter
andnps
in
std
sub
xor
or
sub
stc
or
adc
or
mov
hlt
inc
cltd
cli
gs
xchg
push
push
jg
push
sbb
imul
cltd
pop
sub
push
je
inc
pop
gs
cmpsl
rcrb
mov
rorl
xchg
pusha
enter
pop
mov
inc
ret
lret
fisttps
aad
jg
les
push
pop
mov
or
addb
mov
aad
rorl
sub
inc
mov
inc
or
cmp
stos
cs
and
das
test
enter
daa
dec
sbb
stos
and
xor
stc
lea
movb
ret
scas
inc
adc
inc
cmpsl
repnz
lahf
inc
bound
jne
fnstenv
jns
pop
outsb
int3
mov
sub
imul
sbb
lods
in
xchg
push
mov
fnop
push
fldt
mov
mov
insb
js
xor
sbb
iret
push
outsl
jle
aaa
adc
adc
fwait
std
mov
mov
jmp
test
outsl
das
shll
dec
sbb
daa
out
cmp
mov
lret
stos
or
add
xor
outsb
xchg
js
xor
xchg
mov
out
mov
sbb
out
pop
dec
xor
lret
cwtl
push
ds
xchg
push
mov
cmpsb
repnz
push
adc
mov
pop
fnstcw
mov
dec
test
fisttps
std
sub
jnp
je
inc
stos
imul
push
cmp
pusha
xchg
mov
lcall
sahf
test
xchg
jbe
cmp
std
pop
imul
sbb
repnz
repz
cmp
dec
jg
pop
xor
cmp
mov
jecxz
into
sbb
pusha
gs
stos
fwait
outsl
cmp
scas
test
data16
movb
jnp
push
test
testl
js
cmp
dec
fwait
repz
imul
in
push
sub
insb
loopne
rcll
sbb
loopne
fdiv
lcall
out
sbb
xchg
shll
mov
jl
bound
add
testb
jmp
xor
sub
mull
fs
sbb
ret
xchg
inc
xor
in
in
and
lret
push
loopne
adc
lds
cli
fcoms
outsl
bnd
xchg
inc
dec
mov
push
adc
push
xor
pop
dec
lret
inc
fsubrs
cmpsl
push
add
int
aas
jmp
jno
xor
inc
jmp
dec
sahf
sbbb
mov
push
shll
xchg
fiaddl
mov
mov
lods
inc
mov
test
mov
push
push
mov
cmp
xor
mov
and
and
aaa
jne
mov
lcall
or
cs
imul
fdivl
sbb
sub
test
orl
roll
ror
jle
inc
or
push
clc
fs
icebp
or
push
std
shl
andb
rcrb
mov
fsubrs
hlt
repnz
lret
dec
xorb
xchg
pop
fistpll
lret
out
pusha
iret
cmp
push
mov
daa
xor
dec
add
rcl
mov
or
shrb
push
insl
sahf
popf
cmp
test
mov
mov
dec
insl
mov
movsl
stc
jecxz
add
xchg
fisubrl
adc
jle
nop
xor
add
mov
dec
push
xchg
mov
push
xor
mov
mov
mov
sub
cltd
xlat
mov
pop
popa
nop
lock
ss
sti
int
int3
mov
fucomip
xchg
aad
adc
dec
stc
mov
fcompl
cmp
mov
in
push
test
pusha
xchg
in
lods
and
xchg
rorb
out
scas
into
mov
mov
cs
sahf
xchg
xor
cmp
mov
ss
es
dec
fildl
mov
xlat
adc
mov
push
pop
into
dec
push
push
xchg
xchg
cmpsb
fisttps
inc
push
pop
scas
clc
jno
adc
sbb
inc
cmp
into
xchg
push
lock
xlat
and
mov
push
lret
mov
jb
fistl
testl
jae
cwtl
stos
mov
push
xchg
loope
subb
or
jecxz
xchg
dec
xchg
inc
inc
adc
cltd
mov
sahf
dec
and
into
pop
jle
inc
mov
nop
jb
daa
mov
dec
jo
out
sub
push
das
xchg
pushf
adc
jb
lock
xor
into
ja
sbb
data16
sub
repz
cld
mov
arpl
outsl
push
rolb
cmp
fwait
jbe
sarl
arpl
add
push
ljmp
mov
adc
imul
inc
mov
out
mov
ficompl
jp
and
mov
pop
mov
adc
jns
add
dec
ja
ret
cltd
aam
leave
push
mov
mov
cld
push
out
sub
push
add
pop
jb
add
dec
jbe
jbe
mov
es
stc
jp
mov
shl
adc
xchg
pop
add
mov
mov
xchg
jg
jmp
xchg
xor
mov
inc
mov
dec
jne
add
les
lcall
test
xor
notb
outsl
shll
iret
scas
sbb
ds
in
adc
cmpsb
pop
loop
js
add
in
nop
mov
ja
add
icebp
shll
and
les
lods
jg
mov
and
mov
shlb
push
sbbb
sarb
lods
testb
test
sub
fidivs
ret
mov
or
lahf
and
push
push
sub
popa
pusha
test
sbb
sarb
sub
inc
push
pop
push
mov
data16
out
cwtl
nop
or
mov
cltd
sbb
test
es
addb
push
lea
ss
jle
cwtl
data16
dec
ss
mov
aaa
rcl
xor
push
cmp
nop
lret
xchg
lds
movsl
cmp
sbb
loop
icebp
stos
outsb
inc
dec
inc
fcomi
lock
pop
aas
pcmpeqw
iret
ret
fcom
dec
ds
outsb
inc
cs
lods
scas
jns
les
mov
movsl
mov
and
jecxz
pop
push
cmp
cmp
aam
mov
cmp
rcrb
or
dec
push
adc
scas
enter
cs
push
into
aam
jmp
pop
in
frstor
and
scas
int3
adc
push
incl
gs
outsl
nop
dec
cmc
jg
sbb
leave
shr
mov
lret
lds
pop
xchg
lahf
and
aaa
or
mov
stos
mov
fdivrs
mov
cmc
shll
je
mov
inc
aam
pop
pop
mov
add
bnd
mov
sbb
sub
sub
in
lret
fimuls
and
cli
mov
xor
pop
sbb
test
fiadds
or
xor
add
je
sbb
push
das
pop
jmp
sub
mov
jae
mov
into
inc
cmp
pop
add
cwtl
mov
int
pop
sub
or
jmp
lock
mov
pushf
or
or
dec
sub
imul
cmp
inc
inc
push
or
fistpl
xbegin
xor
mov
fisttps
add
and
fisubl
xlat
adc
jo
or
or
adc
lods
stos
stos
cmpb
push
icebp
imul
into
xchg
inc
sahf
roll
std
jle
scas
push
cmp
mov
or
jmp
lods
addl
clc
and
scas
or
jl
mov
mov
daa
mov
xor
adc
int3
sbb
repz
mov
pop
or
lods
or
xchg
cltd
fisubrs
xchg
divb
dec
or
mov
mov
out
jbe
pop
ret
pop
test
imulb
cmp
mov
arpl
sbb
sahf
jle
js
mov
push
mov
mull
jp
cmp
pop
xor
sub
imul
cmp
test
jp
hlt
call
add
cmp
dec
ljmp
ret
pop
xor
or
fimull
cli
ret
and
out
stc
jecxz
lret
lods
pop
stc
xchg
loop
loope
mov
mov
sub
outsl
in
adc
mov
ret
and
pop
fldenv
mov
lcall
push
mov
and
pop
jbe
sbb
mov
or
cmpsl
xchg
repnz
mov
das
xor
fcomi
adc
movl
and
mov
inc
jge
mov
pop
jg
or
xchg
jp
or
lock
lret
loope
inc
gs
ret
or
push
mov
pop
and
jo
dec
rcrb
aas
add
sub
insl
xchg
jp
sub
jae
aam
dec
data16
sahf
into
mov
aas
cmpsb
ja
leave
jg
push
or
cltd
mov
mov
inc
sti
shrb
adc
pop
xor
xor
mov
insb
lret
fwait
jle
in
addr16
nop
or
mov
cltd
mov
lods
aam
pushf
xorb
cmp
jne
shlb
mov
mov
jge
mov
scas
cs
iret
sbb
shll
dec
jns
pusha
inc
sbb
in
scas
push
lock
not
fbstp
xchg
and
ret
js
xor
ret
sub
sub
mov
jns
push
aad
push
sub
inc
decb
pop
test
push
mov
aad
jne
ds
fstl
mov
or
pop
lret
sbb
dec
aaa
pop
or
das
cwtl
cld
mov
cwtl
out
and
call
push
mov
jno
push
add
jo
mov
mov
idivb
mov
cwtl
test
mov
int3
test
cwtl
testb
push
jg
ret
xlat
mov
sti
stos
xchg
ja
popf
add
addr16
cmpl
push
ret
iret
sub
push
pop
sub
mov
mov
pop
add
ss
pop
ret
sbbb
push
push
cld
mov
fbstp
xchg
inc
sub
cltd
shl
xchg
clc
dec
push
ljmp
sbb
outsl
cmp
pusha
scas
lret
and
in
rcll
xchg
dec
push
iret
inc
cmp
aam
mov
repz
fidivl
pop
pop
addr16
insl
arpl
sti
cld
push
repz
idiv
mov
xchg
mov
pop
jge
dec
cmp
adc
insl
lock
pop
ja
aam
insl
test
scas
rorl
dec
es
insl
pop
fnsave
add
sub
test
sbb
adc
lcall
pop
in
int
mov
add
sub
lods
sbb
mov
pop
cmp
bound
sbb
lea
sti
inc
sbb
or
jns
imulb
xchg
scas
sahf
movsb
push
add
inc
and
add
sbb
mov
cld
aad
test
pop
ffree
rclb
outsb
sbb
orl
jge
sbb
xor
insb
outsb
sarl
inc
test
and
clc
adc
lcall
sub
enter
sbb
test
inc
push
cmp
insb
mov
pop
je
aad
clc
roll
xorl
mov
sbb
adc
jmp
std
loope
scas
adc
leave
hlt
lcall
adc
mov
and
in
out
mov
xorb
ljmp
sbb
add
push
mov
cltd
test
idivl
sbb
and
pop
or
sti
rorb
xor
or
shll
inc
sbb
adcb
xchg
xor
push
pop
mov
sbb
std
arpl
enter
std
loope
in
pop
not
cltd
adc
push
dec
lahf
daa
sarl
shrb
mov
add
cld
mov
mov
mov
add
fs
mov
jno
outsl
lods
pop
adc
sub
shlb
and
inc
jns
fcoml
adc
mov
ret
sbb
mov
push
mov
rcl
or
push
or
fimull
lret
pusha
pop
xor
jp
xchg
jmp
dec
mov
mov
pop
adc
xchg
jmp
mov
dec
add
cmp
in
pushf
insb
pop
xor
psrld
ljmp
or
and
sbb
sbb
sub
push
lret
jle
push
sbbb
pop
stos
iret
rolb
aaa
adc
je
xor
aam
nop
cli
aas
inc
pop
mov
mov
mov
xchg
cld
fadds
clc
andb
shlb
pop
clc
cltd
aad
jl
sub
push
insb
pusha
in
xchg
cmp
jns
lds
test
aas
sbb
icebp
test
adcb
inc
jmp
arpl
enter
mov
pop
mov
mov
sbb
push
flds
lods
aaa
mov
dec
push
clc
add
es
pusha
or
int3
dec
cmpsl
jle
or
mov
test
fsubrp
cmpsl
mov
cli
ficompl
frstpm(287
xchg
cmp
addr16
push
icebp
push
shrl
inc
xchg
jnp
test
mov
fnstcw
test
ja
shrb
outsb
fdivrl
cmc
jmp
xchg
sub
mov
mov
mov
test
rorl
push
std
out
jns
shrb
xchg
shlb
push
outsb
pop
xor
cs
add
sub
jo
pusha
subl
inc
sub
push
sti
lock
repnz
cmp
sub
xor
scas
xchg
jl
xor
mov
lret
xor
test
xor
leave
xor
push
xchg
pop
push
push
sub
cs
push
sbb
in
test
pushf
hlt
cltd
mov
out
or
adc
pop
sahf
decl
inc
lcall
sbb
sbb
and
ljmp
shlb
shrl
xchg
int
jl
mul
mov
cmpsb
pop
jl
sbb
cmpsl
push
mov
push
ss
pop
fsubl
jl
sbb
dec
stc
aad
aas
mov
push
arpl
and
loopne
mov
aam
les
lds
mov
aas
and
mov
xchg
push
jnp,pt
icebp
or
inc
push
in
cmp
push
std
lcall
sub
jg
xlat
imulb
add
pop
test
ss
aas
rclb
dec
lock
cmpsb
push
mov
and
out
int3
mov
ficoml
adc
or
sar
mov
sbb
movsb
es
rorb
stos
or
stc
pusha
and
jp
popa
cmp
ficomps
or
test
cmpb
xor
inc
mov
mov
lret
mov
inc
insb
cmpsb
data16
mov
mov
loope
sub
and
fimull
xor
fidivrs
insb
into
mov
daa
inc
jnp
out
add
das
leave
ficoml
movsl
movsb
xor
jb
loope
insl
dec
dec
insb
mov
loope
adc
and
or
daa
or
cld
jbe
test
call
outsb
pop
je
lcall
sub
dec
mov
lea
and
aad
stos
psrad
aad
xchg
arpl
jae
scas
mov
dec
sbb
insb
jae
jmp
pop
negl
jg
fsubl
test
popa
and
and
inc
int3
cmpsb
test
fs
out
idivl
push
cmp
ret
int
or
lock
jne
mov
push
inc
cmp
repz
mov
push
daa
cld
inc
dec
dec
mov
rorb
cltd
inc
fxtract
mov
mov
ret
or
xlat
dec
jg
cltd
test
push
push
shrb
jl
inc
repz
pop
mov
and
mov
lea
in
fstpt
aaa
daa
mov
je
and
fs
mov
call
mov
imul
fistpl
sbb
shr
hlt
cltd
or
jne
push
jo
mov
ds
flds
mov
in
cmpl
xchg
sti
iret
inc
mov
in
cmp
into
jb
jmp
add
pusha
jbe
lgs
pop
fisubs
mov
mov
fistps
xchg
lcall
iret
mov
xchg
movsl
jg
inc
or
cli
push
lret
xchg
cltd
call
mov
and
mov
out
mov
push
mov
or
inc
or
or
ljmp
out
dec
roll
das
or
jnp
aam
shrl
mov
clc
inc
out
push
hlt
and
in
shlb
jg
jg
dec
stos
sahf
repz
mov
out
cmp
jecxz
negl
adc
lret
adcl
inc
divl
cs
pushf
sub
jge
lock
lds
imul
mov
push
lds
add
fimuls
clc
sub
mov
ret
fdivl
mov
and
fisttpl
ds
jnp
int
or
or
and
push
mov
sarb
xor
bound
lahf
sub
push
or
insl
or
mov
mov
cmp
push
push
push
push
xor
xor
mov
ljmp
adc
inc
inc
push
sbb
mov
shlb
ret
into
gs
sti
outsb
sbb
movsl
add
sub
out
mov
dec
push
xor
lret
sbb
cmpsb
adc
lods
bswap
xor
imul
sbb
lds
icebp
lea
inc
stos
mov
test
out
iret
dec
dec
imul
mov
fwait
pop
arpl
mov
ljmp
outsl
jecxz
lcall
cs
xchg
dec
lret
mov
push
inc
jno
or
ljmp
imul
stos
data16
leave
es
adc
dec
adc
hlt
sub
js
insl
loope
adc
pop
mov
or
incb
adc
out
sbb
and
cmpsl
jle
daa
loop
inc
clc
dec
add
int
into
js
lcall
out
dec
mov
test
in
das
or
imul
jmp
bnd
ja
std
xor
int3
out
or
push
pop
add
int3
scas
fnsave
adc
dec
enter
icebp
dec
mov
pusha
daa
push
gs
int
lret
loopne
jmp
mov
bound
test
mov
movsl
inc
jp
scas
lods
xchg
cmc
push
push
dec
cmp
les
inc
lcall
movsl
xchg
sbb
cmp
mov
stc
call
jl
int3
xor
jmp
lods
xchg
jp
or
mov
andl
inc
push
test
shlb
movsl
dec
adc
std
aam
les
sbb
sub
icebp
rolb
mov
mov
pop
mov
cs
pop
and
call
cltd
stos
enter
mov
insl
and
fistpll
cmp
pop
xchg
mov
lahf
push
xor
jns
sbb
jbe
out
imul
sub
mov
pop
sbb
test
sub
push
cmp
addr16
adc
arpl
mov
xchg
js
dec
jmp
js
push
pop
add
push
outsb
cli
imul
cs
dec
add
xchg
push
jo
int3
lahf
adc
mov
in
inc
xor
pop
mull
loope
enter
mov
fs
inc
inc
pop
xor
mov
fwait
out
pop
push
cmp
cmp
sub
lret
imul
gs
xchg
jmp
mov
and
pop
inc
mulb
push
in
sbb
and
aad
xchg
test
fcomps
sub
test
or
and
xor
xor
push
mov
cs
lods
enter
scas
movsl
bound
scas
mov
mov
in
xor
dec
arpl
add
mov
stc
cmc
xchg
sarb
push
cltd
test
mov
imul
cld
cltd
gs
jne
mov
sbb
xor
and
ficoml
scas
inc
mov
scas
mov
enter
xor
and
jnp
cs
mov
aas
sub
xor
out
movsb
lahf
push
jbe
cmc
pop
jns
push
xor
stos
dec
hlt
insb
repz
cmp
add
push
arpl
test
test
in
pop
lret
clc
repnz
jns
inc
sbb
movsl
pop
xorb
mov
mov
lods
cmp
xor
add
stos
sbb
cmp
xor
xchg
dec
mov
repnz
out
mov
mov
jne,pn
cld
mov
push
sbb
or
popa
inc
sti
sub
add
or
xchg
xchg
xchg
sub
jg
cmpb
pop
dec
fsubrl
sub
cmpsl
rol
xchg
lods
cmc
fsubrl
enter
xchg
push
inc
fstl
cmp
imul
mov
and
sbb
jo
jmp
int3
inc
in
jns
test
jae
movl
mov
inc
loopne
mov
stos
int
pushf
test
lcall
ret
mov
jle
scas
pushf
mov
dec
js,pt
sbb
push
sub
fisubl
enter
or
and
aam
mov
inc
push
pop
mov
imul
or
jno
shrb
fldenv
fldl
push
aas
inc
adc
cld
jmp
jl
cld
inc
scas
in
outsb
or
fldt
fisttpll
mov
inc
pop
js
adc
ret
imul
fsts
jl
negl
add
and
inc
sub
es
call
jge
fs
out
xchg
jp
xor
stos
xchg
xchg
call
jle
cmp
bound
mov
cmpsb
hlt
xchg
cltd
addr16
mov
jne
lahf
mov
mov
imul
cli
jb
jne
and
ret
xchg
stc
adc
adc
pop
sbb
js
and
mov
jle
dec
add
adc
loopne
js
push
insl
testb
push
ds
arpl
cwtl
mov
lret
stc
add
pcmpgtw
xchg
cmp
add
repnz
adc
outsb
xchg
pop
pop
stos
xchg
adc
je
loopne
pop
push
insb
or
cmpsb
stos
rorl
jp
int3
cmp
imul
jno
inc
dec
mov
xor
jg
add
adc
or
jmp
xchg
xorl
sub
cmp
out
fs
mov
mov
mov
sbb
decl
pop
or
js
and
decb
int3
mov
hlt
arpl
xchg
mov
adc
loope
jbe
stos
mov
dec
mov
sub
jg
popa
sti
repz
repz
fsubl
inc
jmp
dec
sub
call
add
lods
outsl
and
lock
ds
loope
adcb
adc
icebp
mov
mov
mov
cmc
adcb
cmp
push
aad
stc
call
jo
adc
sub
cwtl
and
dec
mov
adc
repnz
and
ret
adc
faddp
out
xchg
ds
addr16
dec
adc
fwait
inc
notl
fldcw
and
cmp
sub
hlt
cmp
gs
stos
loop
dec
aas
idiv
inc
cmp
push
in
test
jmp
cmp
pop
decl
add
pop
adc
cmp
inc
add
ds
les
sbb
pop
adc
test
xor
jg
xchg
sti
pop
pop
repnz
or
dec
inc
es
sub
add
out
inc
sti
mov
xor
movsb
inc
jns
add
mov
jne
mov
jle
and
out
cltd
lret
filds
or
mov
repnz
test
pop
or
outsl
out
fwait
sahf
fists
xor
ficompl
and
or
fucomi
mov
lds
pop
shl
xor
jmp
pop
jno
shll
cld
pop
push
fsubs
sbb
iret
das
orb
shll
out
imul
sarl
cmp
cmp
cmp
andps
inc
out
cmp
push
cli
xchg
mov
jge
lret
jbe
xchg
shr
sahf
scas
dec
jecxz
xchg
sbbl
mov
push
out
ja
xlat
sub
pop
addr16
mov
jl
push
xor
xlat
testl
pusha
cld
xor
fmull
ja
out
decb
sub
outsb
ja
scas
out
imul
cs
lds
daa
or
lahf
dec
pusha
jp
dec
jecxz
lock
inc
stos
sarl
inc
add
jne
sub
mov
lods
sbb
sbb
add
cmp
dec
adc
push
mov
movsl
ja
pop
inc
outsl
pushl
into
in
xor
loop
sub
xchg
fisttps
push
hlt
cmc
idiv
in
push
rorb
fldln2
js
mov
loopne
sub
lods
arpl
inc
bound
push
xchg
js
fxch
scas
sbb
call
rcr
push
sbb
mov
jp
adc
mov
push
dec
subb
mov
icebp
xlat
repnz
fst
pop
addr16
cmp
push
test
addr16
test
push
subl
inc
outsl
adc
and
outsl
pop
fwait
and
fstl
cli
iret
lahf
subl
push
ss
jmp
fsubrl
push
mov
jle
adc
and
enter
mov
and
push
shlb
rorl
hlt
test
nop
inc
test
jl
imul
test
lahf
adc
sub
mov
cmp
and
inc
into
add
and
add
ret
cli
scas
in
sbbl
pop
jmp
pop
adc
mov
daa
fistl
push
out
add
popa
daa
out
mov
leave
push
mov
int3
mov
lahf
or
xchg
je
push
adc
inc
pop
scas
out
and
mov
jg
adc
and
cwtl
mov
subl
loopne
sub
and
mov
xor
mov
pop
fs
sbb
mov
adc
push
jbe
adc
jnp
fwait
add
fbld
fsubs
and
or
icebp
push
push
inc
shll
popf
inc
out
in
inc
in
nop
jl
add
movsb
add
mov
add
pushf
mov
push
scas
xor
mov
out
lahf
jbe
and
lcall
scas
clc
adc
push
fwait
aam
mov
jecxz
notb
cmp
pop
popf
jne
outsl
popf
mov
jns
pop
repz
scas
fisttps
dec
xor
mov
out
jle
add
adc
push
inc
dec
mov
insb
inc
andnps
and
mov
sub
add
push
fs
test
xor
mov
inc
outsb
mov
adc
cmp
mov
sti
dec
loopne
or
pop
les
or
add
mov
inc
xchg
xor
fiaddl
lcall
mov
push
xor
cwtl
mov
lret
adc
mov
rcrl
rclb
inc
lock
xchg
cld
cld
sub
test
ja
push
inc
int3
cli
xor
adc
xchg
ljmp
sbb
mov
rcrl
outsb
test
mov
lahf
cs
jg
loopne
xchg
xchg
movb
pop
cld
scas
out
aaa
js
scas
lods
jb
sti
insb
push
push
mov
or
cmp
xor
or
cmp
jmp
icebp
mov
loop
inc
lods
or
lret
jnp
sti
fldt
mov
das
je
and
insl
call
jg
cld
mov
add
mov
test
sbb
xchg
adc
sub
push
repnz
in
sti
out
add
sbb
jns
xchg
in
stos
lods
leave
test
nop
jmp
sbb
sbb
and
pop
enter
cld
pop
les
stos
rclb
push
mov
xchg
cwtl
sbb
pop
dec
sub
fadds
test
loopne
lret
hlt
sbb
jl
mov
xchg
out
adc
mov
xchg
adc
rclb
mov
dec
xor
sub
add
dec
out
pop
adc
sahf
scas
mov
shrl
xchg
sbb
lods
cwtl
cld
inc
movsl
pop
scas
mov
sbb
sahf
mov
sub
pop
mov
cmp
repz
xlat
mov
mov
mov
iret
movsb
mov
sub
cmp
xchg
xchg
ret
adc
loope
fbld
sub
add
repnz
mov
sbb
es
push
pop
aaa
lret
push
push
xchg
push
adc
inc
jb
mov
rcll
inc
lret
stos
jbe
push
data16
jge
cmp
repz
push
mov
in
aad
or
cmp
xor
ficoml
cmpsb
arpl
loopne
push
cmpsl
loope
xchg
lods
loopne
adc
andb
mov
cmp
mov
decl
ja
push
mov
pop
aam
xchg
sbb
pop
out
sbb
fwait
insl
jb
fs
ljmp
arpl
push
push
sti
dec
mov
nop
fs
push
push
pop
or
xor
mov
stc
arpl
call
jge
das
push
iret
jmp
push
mov
dec
shr
fs
mov
xchg
cmpsb
mov
lret
jb
and
lret
sbbl
lea
nop
xor
pushf
xorb
fdivs
clc
xchg
movsl
pmaxub
mov
push
xchg
sub
sbb
aad
scas
ficoms
mov
push
js
cld
add
mov
xor
mov
add
in
inc
push
jle
pop
stc
dec
mov
stc
push
xor
xor
pop
imul
pop
adc
call
pop
inc
or
fwait
xlat
and
stos
or
fcompl
jb
jno
sbb
dec
mov
xchg
lret
mov
arpl
xor
dec
dec
rol
or
out
or
lret
addr16
es
jge
sub
push
and
lret
fs
mov
xchg
mov
cmpsl
mov
in
loop
stos
cmp
leave
jp
mov
inc
jl
add
popa
add
sti
rcl
mov
stos
repnz
cmp
movb
jecxz
shlb
in
push
out
in
mov
mov
lret
mov
cmpsl
cli
add
mov
nop
xor
movsb
sub
cwtl
xor
xchg
loope,pt
jo
iret
cmpsl
testb
pop
push
mov
pop
pop
cmp
xchg
loopne
pop
xchg
adc
fstpt
jp
sbb
std
xchg
mov
stc
xchg
into
xchg
and
xchg
daa
scas
push
or
jne
or
jo
mov
or
lea
adc
stos
lods
adc
bound
imul
dec
xchg
test
ljmp
cmp
lods
push
push
leave
pop
test
jns
sbb
stos
jg
push
push
mov
dec
add
test
aaa
fdivrl
clc
in
stos
add
inc
shll
xor
sar
bound
and
xchg
pop
les
push
loope
lahf
shrb
mov
gs
popa
fs
adc
mov
nop
shlb
adc
cmp
fstpt
sub
xchg
jo
mov
or
push
rcl
mulb
pop
sbb
cmp
or
insl
int3
into
call
jl
jecxz
inc
mov
mov
inc
mov
dec
notl
lock
push
mov
insb
push
dec
xchg
sub
mov
push
sub
inc
pop
mov
pusha
addr16
fs
stc
add
movsb
mov
xchg
sbb
popa
cwtl
inc
push
pop
imul
pop
sti
inc
aaa
mov
or
fcoms
jmp
aas
fistps
mov
mov
or
mov
add
or
dec
aaa
sti
fists
adc
jmp
mov
and
mov
div
imul
ret
fnstsw
sub
push
movsl
mov
in
jnp
loope
test
out
data16
pop
aaa
cmpsl
xor
icebp
push
ret
jb
cmpb
sahf
xchg
cmp
ret
int3
into
or
in
pop
pop
sub
mov
cwtl
xlat
ficomps
fldl
jl
xchg
imul
lds
or
mov
fcmovb
and
stc
ret
faddl
fwait
xor
leave
xor
mov
in
jno
repz
clc
pop
fstps
add
ficompl
fildll
adc
or
cld
or
cwtl
dec
mov
dec
std
xor
xor
pop
add
xchg
jo
xlat
notb
sub
and
pop
and
fs
addr16
bound
fistpl
cmp
xchg
sub
fs
cwtl
cmp
jle
mov
fimuls
bound
dec
popa
fs
pop
cli
inc
int3
mov
ljmp
adc
frstor
sahf
pop
addr16
xlat
js
dec
mov
fiadds
outsl
shr
jl
inc
std
jno
loope
pop
pop
push
xorb
sbb
iret
ret
ds
mov
jb
cmpsb
test
shll
push
inc
fwait
add
and
gs
test
cmpsl
pop
cmpsl
leave
mov
jecxz
mov
pusha
test
xchg
fdiv
lcall
sbb
inc
cltd
mov
lcall
aaa
enter
push
pop
pop
pop
into
inc
or
jb
jne
stos
mov
mov
fldenv
mov
movsl
pop
push
xor
xor
int
mov
jae
sbb
arpl
sub
xor
les
int
sub
test
mov
push
in
jns
pop
jns
aam
orl
jmp
cmc
aas
aaa
or
cmp
dec
push
out
in
pop
jae
es
cmp
fdivrs
fcomip
mov
mov
mov
mov
xor
cwtl
loop
add
adc
and
pop
mov
lods
cmp
cli
cmpsl
xor
addr16
rorb
push
and
mov
lods
mov
mov
enter
in
cmpsb
cli
daa
xchg
push
test
and
mov
sbb
xchg
pop
cmpl
daa
call
xlat
pushl
movsb
mov
jp
cmpl
stos
or
push
lahf
push
add
arpl
jne
in
mov
popf
hlt
icebp
jle
aaa
cwtl
adc
adc
xchg
mov
in
xchg
cmp
sub
sti
xor
lods
jno
jno
ss
mov
ds
scas
mov
fucomi
loopne
push
pop
xor
insl
mov
es
pop
jp
inc
xchg
data16
sbb
aaa
addb
push
sub
sahf
out
mov
imul
sbb
mov
out
loope
sub
jo
mov
out
mov
mov
je
add
jb
jb
ss
sbbl
aaa
mov
mov
pusha
and
dec
shlb
mov
movsb
pushf
push
mov
loope
inc
mov
pop
lahf
fcmove
push
mov
mov
addr16
sarb
cmp
mov
push
sub
call
jl
jns
cmp
xor
nop
insl
push
or
inc
sbb
push
sbb
test
gs
cmpsb
mov
inc
out
xor
mov
add
fbstp
sbb
into
ror
jo
loopne
repnz
inc
push
mov
jle
adc
fisttpll
mov
fistpll
mulb
or
pop
ljmp
sub
test
xchg
xor
call
adc
inc
call
in
roll
lahf
in
sti
jmp
cmp
cli
insb
jecxz
jne
inc
into
stos
xor
int
in
loopne
pop
fcmovbe
push
or
test
inc
out
mov
jne
call
xor
mov
in
cmp
std
mov
and
mov
aaa
mov
ljmp
sbb
adc
mov
aad
jb
fsubrs
inc
std
cmpsl
pop
xorl
pop
mov
lea
in
rcrb
rorl
mov
sub
jle
push
jmp
sahf
rorb
cmpsl
repz
adc
sbb
and
xchg
inc
jecxz
and
cmpb
cmp
dec
movsb
mov
and
shl
loop
add
push
lods
sbb
fst
repz
mov
sub
mov
dec
fnsave
mov
mov
sub
popa
ds
fistpll
stos
outsb
or
and
test
xor
loopne
lock
insb
daa
pop
pavgw
lds
andl
ret
sbb
sub
lret
mov
adc
mov
cmp
add
mov
xor
or
inc
pop
out
jmp
xchg
shlb
movsb
mov
mov
fistpl
dec
pushf
mov
adc
movb
daa
dec
dec
lcall
add
xchg
inc
xchg
xchg
adc
adc
lock
dec
adc
inc
ds
fdivs
call
loop
ljmp
lods
dec
pop
sub
jb
cmp
xor
xchg
sahf
cld
rcll
mov
dec
pop
push
scas
aad
inc
stos
mov
xchg
mov
fmuls
arpl
test
cltd
cmp
fwait
xor
sbb
jp
xchg
push
std
ret
je
iret
fsubl
bnd
scas
mov
inc
or
outsl
shll
rcr
mov
cli
pop
pop
in
lahf
cmp
or
pop
out
test
daa
push
xor
pop
lds
loope
cwtl
inc
adc
jb
rcll
int3
orl
xchg
jb
sti
pop
popf
inc
jmp
dec
hlt
jb
jo
sub
shlb
add
pop
sub
fidivl
adc
and
cmp
sarb
nop
and
mov
mov
xchg
jle
lcall
xchg
cltd
sarl
sub
mov
ss
adc
gs
sub
and
or
and
pusha
sbb
xor
jecxz
shrb
inc
sti
xor
lea
inc
repz
sbb
test
and
cmp
cmpb
jno
imulb
jno
and
cwtl
jecxz
add
scas
outsl
pop
mov
repz
inc
xor
inc
adc
xchg
loope
adc
aas
in
sub
jb
imul
push
out
nop
aaa
aad
cltd
add
gs
movsb
test
sarl
mov
pop
lds
jl
fisttps
ljmp
fdivp
in
out
push
lret
das
data16
scas
xchg
addr16
daa
sub
adc
sbb
cmp
sti
push
add
mov
in
push
xchg
cltd
sub
sub
or
mov
cmpsl
xor
xlat
xchg
mov
pushf
sub
lret
ljmp
sub
mov
fidivrs
testb
jg
lret
ret
or
out
fsubl
add
inc
inc
ficomps
inc
ja
popf
xchg
je
sub
or
mov
cmp
mov
jne
or
inc
jo
push
loopne
dec
jbe
rolb
in
pop
aas
jbe
shl
cmp
insl
pop
pop
dec
ret
xorb
pop
enter
testb
mov
scas
call
imul
add
pop
xchg
pusha
repz
push
sub
or
jo
adc
jle
pop
stos
inc
cmpsl
sbb
inc
pusha
lret
jle
xchg
mov
jmp
lcall
pop
cmp
fmuls
xor
jmp
adc
sbb
popl
nop
xchg
aas
or
shrb
and
inc
ds
sub
js
sahf
addr16
sbb
cmp
or
pop
xor
je
mov
aad
mov
sub
adc
enter
adc
outsb
xlat
or
push
fdivrs
cmp
add
push
mov
dec
xor
jge
outsb
add
add
jp
andb
cmp
and
shlb
lahf
mov
bswap
dec
cmovp
dec
and
push
insb
pop
aas
and
in
rcrl
cmc
inc
repz
out
add
insl
xchg
inc
mov
lahf
jecxz
fsts
mov
jecxz
sub
ficoms
movsl
xchg
cmp
rorb
aad
rol
insb
push
scas
xchg
repz
in
cmp
aas
push
out
cmp
pop
dec
cmp
jae
xchg
movsb
push
jge
in
xchg
mov
popa
cmc
xchg
addr16
fdivr
push
cmpsb
mov
add
vmread
stc
add
xchg
popa
call
dec
sub
lds
out
xchg
adc
call
lods
mov
xor
pusha
xor
mov
fsubr
mov
or
mov
lret
test
sbb
popf
repnz
mov
push
pop
addl
or
xchg
lret
cs
inc
or
sbb
pop
lea
sub
into
inc
mov
inc
xor
inc
jg
add
sub
stos
mov
icebp
and
dec
test
mov
fwait
push
and
inc
xchg
cld
mov
cmp
jmp
sub
ret
inc
inc
outsb
lret
adc
pop
xor
xchg
mov
lahf
lret
xchg
arpl
mov
jo
inc
sbb
mov
cmc
popf
xchg
jnp
fwait
test
push
movsl
aad
sub
dec
pusha
cmpl
adc
lret
loopne
shrl
hlt
shl
stos
and
and
cli
and
adc
hlt
addl
mov
fwait
xchg
add
mov
mov
jp
stc
insb
mov
frstor
pop
mov
nop
sub
or
stos
test
movsb
cwtl
cmp
cmp
jmp
sub
pop
cmpsb
pop
mov
sub
lcall
lahf
jb
mov
add
jns
pop
and
aam
fbld
mov
cmp
std
fsubl
fwait
hlt
jg
sti
pop
pushf
xor
mov
ret
inc
inc
ja
aam
scas
mov
test
mov
outsb
pop
fldl
dec
sbb
popa
js
js
aad
loopne
and
cs
add
add
in
mov
cmpsb
loope
add
iret
sub
jb
clc
inc
insb
clc
dec
adc
into
loope
inc
outsb
pusha
outsb
adc
cmpsb
scas
and
push
push
sub
aaa
mov
pushf
adc
pop
movsb
addr16
inc
pop
aaa
mov
imul
aam
enter
mov
push
lods
pop
sbb
jae
mov
std
push
push
fsubrp
mov
mov
sti
jne
sti
cmpl
sub
sbb
sbb
jae
push
mov
mov
out
add
jae
adc
pop
hlt
sti
xor
sahf
bound
daa
push
clc
xor
inc
mov
lods
std
add
movsl
and
cs
jbe
cmc
rcll
xchg
daa
fsubr
call
jae
mov
pop
push
sbb
icebp
mov
fwait
sbb
and
and
aas
fmull
adc
sbb
mov
cmp
or
iret
js
adc
pop
loop
lods
insb
adc
movsl
mov
setnp
mov
jae
mov
sbb
rcll
add
push
xor
insl
pusha
sbb
loope
test
das
xor
in
mov
addb
rcl
out
sbb
pop
cmp
repz
xchg
and
adc
inc
cmpsb
push
stos
xlat
fnsave
imul
je
mov
lea
sub
mov
sub
jb
xchg
sub
jecxz
adc
sbb
in
test
shrb
xor
test
stos
or
inc
mov
popa
sbb
es
outsl
in
mov
enter
or
or
mov
scas
sbb
in
xchg
in
cmp
es
cwtl
mov
vpunpcklqdq
cmp
mov
pop
ret
arpl
shll
out
push
fistps
roll
scas
pop
add
in
jmp
cmp
and
fdivrs
mov
or
cltd
jns
and
lds
push
lods
jmp
cmp
sbb
popf
mov
rcrb
cltd
aam
add
pop
outsl
jbe
addr16
and
cmp
pop
dec
out
pop
push
mov
orl
fsubr
or
mov
ds
cmp
mov
or
and
pop
mov
lods
jmp
loope
push
inc
sbbl
into
aas
loopne
rorl
outsl
and
daa
ds
xor
sbb
das
mov
adc
add
int3
jp
repz
mov
addr16
sub
push
xor
sbb
outsl
mov
mov
adc
pusha
mov
call
cmpsb
xchg
xchg
mov
test
aad
mov
arpl
movsb
dec
fwait
inc
adc
mov
or
mov
fcmovb
rolb
std
enter
push
call
cltd
std
repz
cmp
mov
fildl
addr16
add
mov
sbb
sahf
sbb
insb
mov
cmpsb
sbb
add
dec
push
xchg
aaa
cmp
aas
fdivrl
lahf
push
out
inc
test
popa
rorb
std
xchg
movsb
insb
cli
inc
pop
sbb
and
es
add
and
mov
mov
xchg
adc
fisttpll
adc
in
jo
add
or
jae
lcall
mov
add
push
xlat
movsb
jo
inc
iret
xor
jbe
adc
cmp
fisttps
mov
or
loopne
mov
push
sarl
jnp
or
loopne
fsubrp
clc
imul
and
lock
adc
shlb
mov
lahf
mov
jp
and
add
loopne
fbld
lcall
cmpsb
push
mov
imul
addr16
jecxz
jnp
or
out
add
and
rcrl
mov
dec
fcmove
sub
bound
and
sahf
cmp
fstl
mov
out
xor
mov
scas
iret
mov
pop
xor
movsb
aaa
xlat
mov
int3
xchg
mov
add
idivb
fwait
repnz
outsb
ja
jns
shl
cmc
inc
inc
inc
movsl
mov
mov
test
jle
out
aad
jno
push
xchg
decl
mov
push
add
jnp
int3
adc
in
xchg
test
in
dec
mov
insb
cli
outsb
adc
jl
sub
xchg
xchg
mov
mov
pop
inc
loope
dec
and
inc
dec
adc
pop
push
xchg
repz
push
dec
fwait
mov
xchg
add
jo
jmp
daa
aas
movsl
cwtl
aaa
sub
and
rorl
xor
loop
insb
cmp
cmpsl
jo
sub
out
xor
or
cmpsl
out
mov
push
jmp
jle
mov
pop
popl
jnp
lret
insl
mov
cmp
inc
shrb
mov
push
mov
mov
mov
xchg
pop
mov
ja
sar
xchg
movsb
or
inc
gs
call
xor
jl
add
pop
js
xlat
dec
push
rol
pop
mov
push
outsl
sbb
dec
jge
out
scas
adc
pop
addr16
lods
or
and
cmpsl
mov
out
into
in
add
mov
rcll
adc
pushf
jnp
int3
jo
and
into
sbb
mov
mov
jecxz
int3
das
cld
sti
mull
call
ret
cltd
xchg
pop
mov
cwtl
jp
mov
jmp
mov
mov
fsubrl
sbb
pop
popf
sbb
cmp
sarl
loope
ja
loope
lret
jnp
ret
sti
sub
pop
sbb
mov
mov
iret
inc
xor
cwtl
adc
lods
loopne
ljmp
call
push
mov
lock
lods
pop
aad
les
repnz
adc
mov
test
push
mov
stos
push
testl
xor
and
cld
sbb
enter
sbb
repz
scas
and
call
fcmovnb
inc
mov
xchg
or
mov
into
into
add
sbb
decb
sub
gs
aas
pop
pop
and
and
inc
rorb
xchg
dec
sbb
add
dec
lods
lods
sbb
jne
shrb
jne
xchg
cltd
mov
jle
lahf
loope
scas
rcrb
sub
scas
es
nop
pop
push
int
adc
pop
lock
sbbl
daa
shlb
test
adc
mov
stc
pop
movsb
ljmp
popf
cmpsl
cwtl
cmc
sti
dec
sub
in
in
std
pop
jp
in
xchg
ss
aad
xor
mov
xchg
or
pop
add
mov
mov
test
nop
icebp
mov
mov
sub
shll
jns
stc
cmp
cmp
mov
icebp
xchg
rcpps
sub
dec
pusha
leave
int3
aaa
jns
lea
popa
push
test
sbbb
and
pop
fbld
or
or
sub
sbb
gs
test
stos
cli
mov
sbb
adc
in
add
sbbl
icebp
cmp
mov
stos
int
aaa
mov
sub
stos
cs
imul
not
xor
out
in
mov
out
push
scas
sbb
aaa
dec
push
lcall
stc
or
jmp
cltd
pop
rcrb
cmp
lahf
add
sub
jp
insb
pmaddwd
outsl
daa
scas
mov
pop
push
mov
mov
in
mov
ljmp
stc
aam
inc
lret
mov
or
dec
das
pop
mov
push
fdivs
ljmp
or
mov
inc
cmp
cmp
sub
push
divb
cmp
cmp
mov
sub
imul
sbb
xchg
pop
shlb
test
push
cmp
and
inc
jb
arpl
int
jl
movsb
adc
test
je
mov
dec
mov
imulb
and
mov
mov
mov
std
sub
popl
mov
push
and
mov
lahf
fucomp
or
pop
aaa
add
and
pop
add
cs
pop
sbb
sti
add
andl
xchg
daa
int
aam
bound
push
scas
push
mov
sub
mov
arpl
dec
fdivrs
into
or
and
aas
in
mov
rclb
sti
jle
stos
clc
mov
es
out
outsl
cld
and
call
rolb
push
mov
aam
jbe
jne
mov
rcrl
mov
pop
insl
mov
fistps
jb
adc
push
or
xor
inc
cmp
addr16
sarb
add
mov
dec
lods
xor
lods
dec
stos
mov
out
in
xchg
jl
add
js
push
outsb
mov
push
sub
pop
cli
push
ja
aas
into
jnp
pop
lea
mov
js
lcall
xchg
icebp
push
rclb
pop
push
add
jle
xchg
stc
jmp
popf
pop
push
pop
jp
push
mov
in
mov
cmp
jle
push
stos
or
pop
adc
inc
scas
lea
and
pop
ret
pop
gs
mov
xor
outsb
and
xor
lea
in
je
and
outsb
inc
outsl
scas
adc
sbbb
jae
mov
adc
in
scas
fidivrs
sbb
rcll
pop
hlt
shrb
mov
and
pop
test
add
dec
jae
das
jecxz
inc
test
xchg
call
test
jae
imul
push
mov
and
mov
jbe
jecxz
arpl
fs
mov
aad
push
adc
inc
mov
je
popf
notl
jge
or
mov
mov
jmp
out
decb
cmpl
sbb
out
dec
addl
add
sbb
aas
pop
xor
mov
xchg
mov
adc
dec
sub
sub
add
mov
pop
in
mov
xchg
daa
cltd
aad
push
sub
cmpsl
popf
js
rep
pop
adcl
out
mov
fstpt
scas
sbb
ds
jg
sub
push
js
xor
fxch
push
test
mov
mov
int
pop
xor
sbb
movsl
cmpsb
jb
movsb
stc
out
daa
mov
adc
pop
mov
xchg
sbb
mov
mov
or
mov
bts
mov
cmp
and
out
daa
shl
cmp
cmc
aam
cltd
cld
xor
clc
push
adc
daa
enter
jl
mov
jns
push
fildll
adc
sub
sub
or
jge
and
push
sbb
sbb
fsubrl
pop
mov
insb
adc
cmpsb
test
xor
sbb
sarl
enter
pop
xor
cld
call
add
push
or
or
xchg
sbb
in
aas
inc
jo
push
test
inc
imul
and
les
hlt
jo
or
daa
and
pop
pop
lods
xor
xor
mov
aaa
push
mov
into
rcrl
int
addr16
dec
push
pop
enter
jnp
mov
mov
pop
repz
loop
push
push
dec
test
lock
nop
out
shrd
gs
cmpsb
loop
xchg
mov
sbb
lods
shlb
sub
xchg
cmp
cmp
xor
ret
sbb
mov
rcrl
sub
ret
pop
sub
in
xorb
xor
cmp
sub
jmp
loope
ja
cmp
iret
mov
fsubrs
out
je
dec
mov
rolb
cmpsb
cmp
push
or
pop
bound
push
push
and
sbb
stos
insb
fldl
dec
xor
cmpsb
ss
inc
jecxz
pop
test
hlt
mov
xchg
pop
cmp
out
std
mov
or
out
fistpll
pop
shll
cmp
jle
testb
sub
in
sbb
mov
lods
sub
push
aad
pop
cs
dec
test
jno
shlb
dec
ljmp
cltd
and
bound
fimuls
mov
adc
and
fsubrs
shrl
insl
jmp
pop
js
cmc
xlat
mov
std
push
leave
push
fs
aam
int
or
sbb
pop
stos
ljmp
faddl
push
stos
push
jmp
loope
xchg
imul
and
xlat
gs
push
fnstenv
lods
xor
dec
adc
push
nop
les
daa
fdivrl
cmp
or
jmp
dec
fmul
ret
incl
sbb
push
pop
push
pop
shl
loop
push
add
adc
imulb
in
cmc
mov
cmp
or
jnp
outsl
add
add
stc
rorl
jp
inc
cltd
roll
cmp
lods
icebp
push
xor
loope
cwtl
inc
std
push
arpl
sub
movsb
or
mov
mov
pop
inc
xchg
enter
and
cmp
and
sub
enter
and
es
pop
out
test
fwait
jo
pop
fcompl
shrl
sbb
ja
subl
add
sbb
sub
loop
push
imul
xchg
sti
xor
test
and
xchg
or
push
pop
pop
mov
xchg
or
dec
pop
dec
data16
insl
shll
in
in
mov
pop
in
and
jb
fs
aas
push
imul
pop
inc
pop
shll
mov
sbb
aam
mov
or
int
lcall
orb
orb
mov
push
int3
sbb
adcl
mov
mov
ficomps
test
inc
mov
xchg
xor
jbe
enter
sub
in
add
dec
repz
add
cltd
mov
test
std
fidivs
loop
insb
sbb
lods
test
add
xchg
scas
jge
jmp
int3
jnp
lret
inc
hlt
jo
jno
pushf
inc
push
test
outsb
inc
subb
mov
and
xchg
jae
icebp
in
lds
add
or
loope
es
in
aas
inc
add
lret
ja
das
scas
mov
xor
das
pop
mov
or
negb
cmpsb
or
or
cld
jp
cmp
pop
in
jae
fsubl
push
lret
lock
sub
mov
movsb
jne
aas
fs
cltd
movsl
ds
jle
pop
fwait
sbb
cmp
out
xchg
movsl
cld
pop
mov
nop
mov
mov
sbb
pop
push
mov
add
jnp
scas
add
mov
scas
add
sbb
fs
insl
or
push
insb
jnp
mov
sti
mov
mov
mov
mov
cmp
inc
inc
cmpsb
idivb
xor
iret
out
mov
sbb
js
xor
xlat
jno
lock
es
lock
adc
sub
mov
jne
add
pop
jge
sbb
scas
std
mov
cmp
add
and
xlat
icebp
mov
sbb
sub
or
push
sbb
adc
add
sbbb
mov
pushf
in
mov
shll
pop
in
movsl
enter
insl
enter
dec
add
test
mov
enter
cmp
mov
xchg
into
sbb
test
lods
imul
adc
mov
enter
xchg
mov
inc
pop
push
push
or
out
mov
mov
rcrb
add
push
inc
insb
std
pusha
mov
jbe
in
enter
or
cmp
cmp
nop
and
pop
dec
sub
sti
lea
sub
neg
adc
into
incb
outsb
sub
popa
stc
inc
test
jmp
lds
loope
push
xchg
data16
sarb
clc
xchg
test
enter
or
adc
or
or
cmovne
and
cmp
mov
xchg
inc
clc
fistps
xchg
xchg
test
dec
movsl
pop
js
loopne
cld
mov
popa
cmp
sbb
sbb
fmul
ja
jne
push
mov
dec
lock
push
or
into
sbb
dec
pop
push
daa
lcall
mov
ljmp
stc
xor
out
cmp
push
sbb
sbb
jno
mov
jae
mov
xor
aam
movb
cwtl
mov
rclb
mov
fimuls
cmp
xchg
dec
cltd
rcll
xor
daa
cltd
sbb
and
push
je
cmpsb
jae
cs
dec
jle
xchg
loope
xor
subb
rolb
mov
mov
fimuls
jnp
mov
loopne
jecxz
je
lds
push
mov
cli
jge
enter
popa
jg
and
pushl
mov
ss
xchg
xchg
mov
jecxz
and
enter
test
lods
mov
jle
sub
cltd
mov
push
arpl
adc
outsl
lods
test
adc
aaa
mov
push
pop
push
cmp
xor
sub
jae
shlb
cmp
push
pop
stos
fdivrs
incl
dec
dec
mov
push
movsl
cmp
jae
push
scas
dec
shlb
lret
cmpsl
inc
imul
sub
xchg
sub
inc
xchg
jns
inc
movsb
lret
ds
fs
rcr
inc
ja
or
sub
lods
inc
mov
sbb
ret
lahf
cmp
inc
cmc
popf
xchg
shrb
cmpsb
push
jae
arpl
iret
mov
pop
cmp
lods
int
or
hlt
dec
and
aas
stc
psubusb
sbb
sub
mov
mov
test
dec
pop
pop
shrb
dec
fisttpll
movsl
cld
mov
mov
push
mov
cmp
clc
xchg
push
and
or
adc
bound
or
ljmp
das
mov
les
iret
xor
andb
sbb
shrl
aad
adc
mov
or
enter
sub
cmc
or
in
sub
mov
dec
sub
add
xchg
divb
push
and
out
sbb
das
add
out
js
and
pop
adc
dec
sub
xor
push
imul
inc
mov
loopne
push
mov
xchg
pop
add
in
or
push
sub
xchg
es
pop
and
clc
fdivl
int
jg
outsb
mov
sahf
cs
adc
mov
lea
out
xor
xorl
fildll
xchg
dec
test
fs
jae
mov
pop
adc
mov
je
stc
lahf
adc
shrb
push
mov
test
scas
maskmovq
divl
lahf
jae
inc
cltd
mov
or
cmp
xor
out
mov
fimuls
ja
enter
inc
filds
and
mov
repnz
and
test
sub
test
scas
nop
cs
xchg
adc
jmp
mov
xchg
mov
imul
jb
jne
test
aas
rclb
ficoms
xchg
xorb
inc
pop
xchg
cmp
xor
fucomp
lea
mov
push
jmp
cmc
xchg
lds
repnz
ljmp
lock
xorb
outsb
pop
lret
push
ffreep
mov
push
enter
xchg
sbb
adc
fsubs
out
enter
in
push
mov
push
push
pusha
adc
test
sarl
imul
cwtl
fprem
cmp
xchg
pushf
dec
ds
pop
mov
fisubrs
lret
mov
and
push
sarb
mov
fstl
repz
sub
scas
gs
jl
jp
add
xchg
adc
sbb
mov
pushf
push
mov
sbb
add
pusha
roll
insb
hlt
andb
or
in
shr
lds
test
xchg
inc
adc
sub
loope
jb
push
mov
push
jno
subl
dec
in
xchg
insb
fldl
xor
and
subb
cmpb
pop
lcall
lds
incb
imul
cmp
sbb
fstpt
bound
xor
jge
addb
jl
mov
scas
sahf
pop
cmpsl
movsb
ljmp
mul
popf
pop
or
push
shl
insb
lods
test
pushf
jl
push
jb
inc
mov
mov
data16
push
popf
je
test
add
add
jle
mov
mov
push
hlt
pushf
xchg
arpl
push
fcoms
xor
mov
aam
popa
sub
stc
loopne
fs
adc
int3
and
mov
xor
stos
rolb
fildl
int
iret
or
jno
adc
sbb
sbb
jbe
popf
out
sbb
push
push
jno
enter
mov
mov
test
rorl
mov
pushw
cmp
test
push
push
fstl
push
xchg
xor
pop
fldcw
mov
scas
mov
dec
jo
lds
jo
jno
out
sbb
sub
and
fs
stc
dec
icebp
imul
xchg
push
sahf
ja
jg
mov
lods
insb
js
mov
or
test
pushf
xor
or
fisttpll
cmpsb
lods
sub
jnp
test
scas
pop
lahf
mov
xchg
loopne
or
mov
adc
mov
testl
add
test
jle
out
adc
test
in
sub
test
sub
add
adc
xor
pusha
cmpsl
inc
out
sub
popa
pop
pop
imul
xor
imul
hlt
mov
xchg
mov
mov
movsl
repnz
xchg
fldenv
outsl
or
nop
cs
jne
cwtl
dec
inc
and
loop
dec
cmpsl
std
sub
dec
cltd
mov
add
nop
xchg
inc
jle
mov
outsb
pusha
cmp
lock
push
or
xchg
ret
pushf
sarl
dec
xor
loop
cmc
int
adc
mov
mull
push
sbb
arpl
movsb
add
daa
xchg
sub
fsts
inc
ror
js
pop
mov
rolb
sti
cmpsb
repnz
and
adc
dec
mov
mov
mov
movsl
insb
and
ficoms
je
std
js
mov
fmull
pop
repz
sbb
adc
push
mov
roll
outsb
insl
mov
and
mov
sub
inc
jp
mov
dec
cmpsb
std
sbb
jne
xchg
jo
push
fs
lret
sbb
xchg
imul
and
jge
test
lret
fdiv
pop
xchg
and
imul
pushf
mov
sub
jbe
fwait
movl
dec
dec
mov
xchg
jb
scas
insl
or
das
cld
xor
scas
add
loope
hlt
sbb
js
add
cli
popa
aaa
loopne
and
sub
add
mov
and
xor
lods
inc
or
and
push
jmp
inc
into
jle
imul
pop
dec
aas
outsb
cmp
stos
jbe
sbb
shlb
mov
jge
call
fcoms
or
test
in
lea
sbb
shl
xchg
shrl
sbb
aas
xor
xor
jge
push
dec
jne
sbb
outsb
fadds
mov
bound
leave
inc
pop
test
test
mov
pusha
xor
lret
add
fsubl
dec
int3
jno
loopne
sub
mov
xor
push
sub
test
push
adcb
fstp
stos
outsl
data16
mov
add
push
imul
lock
inc
push
adc
scas
mov
in
dec
jnp
cltd
aad
mov
dec
and
fnstsw
ficoml
shr
dec
push
cmc
lret
adc
out
or
or
pushl
mov
jecxz
mov
in
shl
addw
stos
cmpsb
into
fucomp
mov
je
data16
mov
xchg
popf
lahf
into
lcall
rcr
adc
push
lods
sbb
shll
mov
stos
fdivs
xlat
lret
outsl
jne
into
cmp
mov
adc
push
sahf
sub
add
push
out
inc
and
sbb
cmc
mov
inc
das
mov
cmp
xor
roll
ja
and
fsin
imul
push
fmuls
mov
mov
mov
test
idivl
sbb
cmpsb
mov
cs
sarb
xchg
or
sbb
filds
hlt
popa
test
lods
cmpsl
test
mov
icebp
repz
outsb
lods
xchg
adc
scas
stc
sbb
mov
insb
cwtl
test
inc
lcall
push
in
je
repnz
movsb
leave
and
aam
pop
adc
int3
call
fidivs
imul
js
arpl
pushf
sti
push
in
sub
mov
fs
push
pop
adc
sub
mov
dec
xor
sarb
fwait
rol
sbb
shlb
iret
lods
stc
mov
push
cmp
sahf
xor
mov
aad
jge
out
mov
and
add
jbe
out
adc
orb
xchg
lock
sub
inc
lods
leave
lods
sub
push
shl
mov
pushl
xor
cmp
or
in
lcall
xchg
pop
inc
mov
xorb
cltd
pop
push
adc
and
xchg
push
repnz
das
rclb
aas
pop
pop
icebp
clc
ljmp
pop
push
adc
xchg
lret
mov
pop
out
xor
pushf
orb
xchg
xchg
dec
cmpsl
jl
mov
inc
inc
call
int
wrmsr
into
dec
xor
arpl
in
sbb
repnz
aas
cmp
and
les
inc
lret
loopne
popa
imul
xor
aas
frstor
xchg
adc
in
iret
xchg
aaa
add
add
int
nop
push
or
xchg
cmc
inc
inc
jle
sbb
pop
mov
sub
xchg
cmp
pusha
ss
loop
stc
call
loope
ja
fldenv
mov
push
out
jecxz
adc
or
jle
mov
enter
inc
inc
jne
jnp
push
mov
out
push
jbe
xchg
movsb
stos
push
adc
out
movsb
les
push
xlat
cmpsl
icebp
js
push
adcl
cs
mov
pop
shlb
cwtl
pop
or
dec
mov
rolb
and
mov
cmp
mov
pop
jl
push
ljmp
fwait
add
es
ficomps
out
mov
ljmp
jns
sbb
dec
mov
dec
jbe
in
push
jp
dec
xchg
cld
fiadds
pop
push
xor
xchg
xor
or
mov
fcomps
daa
mov
adc
shll
inc
das
sub
push
cltd
in
mov
cmc
sbb
add
sbb
cld
push
js
insb
sahf
ljmp
std
push
mov
mov
lock
push
fisttpl
push
mov
xchg
sub
mov
sbb
jmp
mov
mov
jmp
cli
mov
ficoml
out
inc
sbb
xchg
xchg
in
jns
push
andb
mov
or
sub
add
inc
mov
jmp
mov
sub
out
mov
mov
aam
pop
pop
xchg
hlt
les
movl
stos
fs
sbb
mov
sub
mov
push
jl
insl
loope
add
fisubs
push
int
hlt
mov
aad
pop
jb
or
xchg
stos
dec
add
sbb
mov
mov
and
inc
and
faddl
xor
inc
shrl
sbb
fisubl
inc
adc
or
es
dec
jle
testl
daa
ljmp
out
iret
int3
insb
inc
repz
or
les
add
sbb
pop
adc
dec
repnz
inc
cli
ficoms
jle
jecxz
mov
insl
push
jl
sbb
inc
xchg
or
mov
cmp
xchg
xor
nop
push
add
inc
mov
lods
pop
lret
mov
cmp
jl
es
aaa
fcmovnb
push
xchg
push
shll
cmp
xchg
adc
popa
sbb
out
je
xchg
inc
sti
dec
jno
call
or
jb
fwait
cmc
lds
add
sahf
adc
popa
sub
shlb
popa
popa
push
mov
jb
ret
mov
sbb
jo
mov
fstpl
sarb
inc
mov
lret
mov
fsubrs
cmp
add
mov
das
lock
popf
lahf
in
pop
add
lcall
loop
jge
cmp
or
std
dec
inc
pop
stos
int
sub
data16
sbb
push
dec
add
scas
ror
int3
jl
inc
mov
pushf
push
mov
pop
push
mov
adc
in
fstpt
mov
pop
dec
sets
fimull
ja
in
mov
fldt
call
ja
in
and
xchg
add
ss
add
lds
mov
faddl
lret
dec
and
daa
repnz
repz
fwait
inc
jl
cltd
jne
aas
or
int
xchg
push
sbb
lea
fcompl
test
jnp
aas
scas
dec
fnstcw
xorb
adc
mov
add
pop
outsb
xchg
dec
mov
ljmp
imul
imul
popa
shrl
sub
jg
les
lock
xor
arpl
ficoms
cmpsl
test
jbe
aam
inc
dec
push
lock
hlt
sbb
push
daa
scas
mov
lods
scas
popa
out
fwait
dec
lods
mov
push
xchg
das
cmp
lods
sub
or
movsl
mov
or
mov
imul
xlat
rcll
or
jle
sbb
mov
push
lds
in
es
test
popa
inc
stos
outsb
adc
loope
mov
cmp
bnd
dec
fcomps
fisttps
xor
xchg
gs
mov
dec
jmp
pop
nop
stos
mov
es
mov
mov
gs
inc
js
movsb
ret
pop
or
loop
sbb
xor
fildl
cmp
clc
mov
imul
call
inc
mov
dec
je
push
xchg
aaa
loop
xchg
aaa
jae
or
into
sub
fistl
cs
xchg
push
mov
add
sahf
std
adc
movsb
fimuls
mov
nop
mov
xor
jne
sub
add
stc
jg
sahf
sub
leave
mov
xchg
out
xor
repz
mov
and
fstpl
jns
inc
call
imul
cmpsb
fwait
lret
mov
or
mov
xchg
pushf
mov
add
sbb
fcom
test
jge
cld
mov
mov
imul
outsb
pop
mov
or
sbb
and
pop
or
mov
mov
jl
dec
or
nop
sbb
into
dec
mov
lahf
popf
push
fcompl
hlt
ret
iret
push
scas
mov
push
xchg
int3
xchg
mov
push
in
xchg
pop
and
xlat
enter
sub
lcall
pushf
push
sub
decb
mov
cs
push
cmc
inc
inc
movsl
sbb
rorl
and
add
iret
pop
ret
lret
sbb
repnz
popa
add
test
push
jae
scas
lret
mov
gs
pop
mov
into
negl
jg
mov
dec
js
push
shlb
jle
or
mov
and
mov
and
lcall
sub
and
mov
nop
xchg
mov
fs
ja
dec
add
pop
out
cli
cwtl
sbb
lds
std
shrb
orb
mov
test
fcmovnu
test
add
ret
test
popl
out
fs
fs
add
orb
es
push
popf
test
ljmp
dec
aam
insb
sbb
lcall
jp
dec
dec
fdiv
inc
fcompl
mov
bound
loope
imul
shr
sbb
addr16
nop
insl
xor
ds
repnz
adc
xchg
push
ret
mov
add
hlt
rcll
pop
mov
insb
ljmp
popf
push
inc
das
mov
nop
fldenv
ljmp
repnz
xor
mov
pop
sub
inc
icebp
dec
leave
add
les
sub
sub
iret
es
mov
xchg
sub
int3
and
lret
xor
aam
pushf
push
shrl
hlt
ljmp
test
fwait
iret
or
cmp
ret
mov
mov
jp
adc
push
in
adc
cmp
aaa
mov
push
cmp
shll
into
inc
popf
addb
mov
cmpl
in
jb
push
cwtl
es
xor
mov
es
rorl
fwait
dec
outsl
jbe
jbe
ljmp
idivl
imul
mov
jmp
je
mov
inc
and
outsl
std
jmp
or
js
jnp
repnz
clc
js
int3
lret
mov
ja
adc
inc
repnz
into
jp
scas
dec
mov
mov
push
filds
lret
xor
pop
inc
sbb
jg
jns
sub
fbld
cmp
fimuls
rorb
adc
push
popf
mov
xchg
jl
mov
sbb
std
xchg
sbb
loopne
and
aam
jae
xchg
iret
daa
cmova
mov
mov
rcrb
int
pop
inc
jbe
push
push
call
aad
xchg
ret
dec
scas
std
loopne
sbb
adc
jle
iret
push
mov
pop
jge
and
ja
inc
ljmp
out
imul
imul
xor
push
std
fstl
negw
hlt
fwait
sub
mov
call
stos
into
test
pop
repnz
cmp
lods
fimuls
push
test
push
fnstcw
rcll
fcomps
mov
or
fs
push
adc
aaa
aas
movsb
dec
mov
dec
pop
cmp
lret
stos
mov
aaa
mov
jb
out
lea
lods
pop
inc
add
xchg
enter
addr16
jb
cmp
test
mov
cmp
ret
cmp
shlb
push
ror
in
inc
fisubl
std
icebp
xchg
sub
movsw
mov
je
leave
sbb
pop
jbe
xlat
fsubp
cmc
mov
cmp
sub
repnz
clc
pop
mov
and
rcrl
repz
aas
pusha
inc
mov
mov
cmp
mov
xchg
jp
nop
lods
es
push
xorb
ss
sbb
inc
ret
pop
jne
adc
imul
add
jo
scas
push
leave
jmp
sub
into
jo
jne
test
sbb
int3
mov
int
pop
push
aam
in
xor
mov
xchg
jne
hlt
jno
mov
loope
sbb
push
out
hlt
imul
xchg
seta
xchg
rclb
inc
or
cli
clc
gs
push
xor
andl
insb
testl
mov
mov
ljmp
adc
je
sub
xor
loop
gs
data16
lock
jno
js
mov
xor
scas
notb
jmp
out
jae
xor
aad
mov
adc
pop
cmp
xchg
mov
dec
mov
push
push
aad
in
pop
mov
testl
clc
cmp
sub
in
sub
outsb
jne
rorb
add
sbb
inc
inc
or
inc
sbb
cltd
and
call
mov
mov
push
dec
cmp
mov
arpl
jge
or
leave
test
and
shr
jb
mov
cs
fs
cmp
call
mov
mov
add
push
or
mov
adc
cmp
xchg
push
imul
hlt
scas
xchg
outsl
popf
xor
and
movsl
inc
push
mov
cmpsl
pop
ficoml
clc
je
cmp
pop
ja
inc
js
scas
mov
stos
mov
pop
repz
sbbl
and
sub
push
outsl
test
lret
and
or
mov
and
es
add
call
push
inc
fildl
pop
push
cmp
jp
pop
int3
inc
aam
push
lahf
dec
ljmp
fcompl
test
jge
dec
mov
sbb
ret
cmp
mov
mov
pop
xchg
arpl
leave
fnstenv
shrl
mov
pop
ja
stc
pop
bound
inc
divb
xor
mov
lods
mov
jmp
pop
cvttps2pi
push
mov
pop
mov
mov
jl
popl
xchg
jbe
pop
addr16
popa
sub
mov
imul
jp
arpl
outsb
jo
inc
fucomip
jns
mov
xchg
lods
loope
lds
push
out
out
pusha
popa
xchg
or
cmp
mov
pop
dec
sub
int3
lock
testb
pop
out
xor
enter
jnp
data16
mov
int
add
out
inc
je
lcall
pop
in
lods
loope
jne
scas
aas
loopne
arpl
in
icebp
inc
rcrb
add
loopne
popf
pushf
xor
jl
push
repz
push
add
stos
jle
testb
push
or
jnp
mov
xchg
xor
dec
xlat
stc
pop
mov
das
or
adc
scas
adc
and
and
jmp
lret
jne
xorl
ss
sub
push
dec
ljmp
js
push
bound
std
push
rorl
jb
out
adc
incl
fmul
testb
loopne
dec
mov
and
mov
sub
arpl
loope
sti
fldl
inc
lods
xchg
mov
xchg
loop
add
std
add
das
and
adc
loopne
xchg
inc
rorl
pop
cmp
andl
in
fwait
push
imul
sbbb
out
test
roll
pop
ja
xor
bswap
es
insb
xlat
pop
enter
dec
dec
dec
test
adc
cmpsl
jo
pop
scas
pop
cmpsl
mov
mov
scas
movsb
dec
lods
cwtl
int3
or
jg
push
inc
mov
cmp
or
jmp
loopne
mov
mov
ja
cmp
jp
sub
out
xor
hlt
dec
push
or
add
sarl
inc
or
xchg
push
or
ror
scas
sbbl
js
jmp
sbb
shlb
xchg
lods
test
rcr
mov
arpl
cmpsb
cltd
lret
dec
ljmp
sub
nop
xchg
arpl
sbb
shl
hlt
outsb
loope
or
pop
or
pop
daa
scas
sub
pop
xchg
aas
ret
jb
push
push
or
bound
arpl
fisttps
cli
lds
out
arpl
adc
shll
repnz
in
ja
jmp
ds
mov
adc
and
stos
pop
pop
mov
out
pop
lods
jl
mov
scas
jp
inc
sbb
pop
push
push
jmp
out
mov
add
mov
dec
jmp
popf
fsubrs
fwait
dec
hlt
pop
leave
repnz
aam
cwtl
ja
cmp
jmp
push
jle
clc
lcall
mov
rcl
fcompl
push
out
jo
es
push
jmp
mov
in
stos
bound
iret
dec
mov
shrb
outsb
pop
add
sbb
mov
aas
pop
lods
fsubrl
sti
aad
inc
jb
stos
xchg
or
mov
ret
pop
pop
cmc
pushf
sub
pushf
cmc
imul
cmp
sbb
jae
inc
xchg
test
sahf
dec
jge
ret
inc
inc
pop
or
test
scas
inc
mov
mov
add
mov
cmp
dec
mov
out
add
dec
nop
mov
xchg
cwtl
mov
ficoml
cld
inc
cmp
loop
sbb
sbb
insl
int3
or
fucomp
sub
movzwl
cmp
mov
mov
sahf
lret
movsl
les
movsb
sbb
jl
push
in
cmp
lret
cmpsl
mov
or
lahf
pusha
bound
fdivs
stos
cld
push
jl
popf
add
les
sahf
mov
das
std
xchg
jno
int
fisttps
dec
push
inc
push
dec
inc
test
pop
xor
sbb
rcrl
cmc
mov
lock
pop
pusha
aad
push
inc
xlat
push
xchg
sub
dec
mov
mov
jae
or
sbb
xchg
orl
fdivl
xchg
int
push
cltd
and
pop
lahf
add
pop
pop
stc
lods
xor
inc
cmp
xchg
aad
out
mov
out
sub
stos
sbb
imul
mov
or
push
les
xor
jno
jp
pop
jnp
lret
addb
pop
lock
test
aam
dec
and
xchg
mov
mov
sbb
popa
lret
icebp
inc
or
ss
inc
scas
adc
movsb
inc
jl
movsl
jecxz
add
daa
push
ror
aad
pusha
enter
adc
cmc
repnz
xor
xor
inc
dec
movsl
xor
or
sub
scas
mov
pop
sbb
lcall
jnp
shll
dec
fisttpl
arpl
ret
lret
cmc
lret
pop
mov
sbb
pop
js
ss
cmp
insb
out
or
lods
mov
lods
rolb
out
loope
mov
or
add
xchg
pop
aam
js
adc
mov
mov
sar
clc
rcl
mov
rcrb
sbb
mov
sbb
into
push
lock
sub
loope
and
cmp
pop
into
cltd
mov
and
or
repnz
scas
sbb
popa
lret
sarl
add
cmpl
and
xchg
mov
xchg
test
enter
sub
leave
jb
cwtl
jge
xorl
push
ds
mov
jmp
push
lcall
and
scas
xor
sbb
ds
test
imul
push
or
mov
sbb
roll
stc
pop
rcrb
cmp
pop
js
mov
out
xor
es
jecxz
mov
icebp
fmulp
inc
cmp
or
and
movsl
inc
out
jmp
lret
pop
in
leave
xchg
jle
and
jne
add
in
mov
push
fcmovu
movd
test
or
inc
icebp
fmuls
mov
imul
pop
mov
insb
stos
mov
mov
sbb
pop
fiadds
test
nop
cwtl
fmuls
push
je
or
xchg
aam
mov
pop
dec
push
test
cmp
or
jl
dec
mov
popf
ljmp
rep
pop
xchg
das
dec
inc
jbe
fcmovu
nop
mov
sub
mov
fcmovnu
jge
ljmp
xchg
pop
enter
subl
xor
add
out
aaa
sbb
jo
mov
ret
scas
pop
ljmp
adc
div
xor
sub
mov
sub
and
push
bnd
add
test
or
addr16
add
scas
pop
mov
dec
into
pop
aaa
aas
ljmp
jae
sub
mov
repz
cmp
jne
adc
mov
adc
xlat
or
jns
adc
push
loop
in
adc
outsb
out
rcrb
js
leave
popf
or
call
jne
cmc
adc
pop
and
lret
fimull
adc
dec
inc
mov
scas
jne
in
lcall
les
out
mov
dec
imul
ljmp
je
push
es
adc
std
push
test
xor
clc
adc
xlat
mov
stc
pushf
mov
ljmp
nop
mov
les
cli
push
sbb
lea
pop
mov
jle
push
ja
cmp
outsl
pop
sbbl
push
repz
lahf
pop
and
xor
shl
filds
jle
and
mov
in
aaa
mov
sbb
imul
and
inc
push
mov
int
fwait
scas
inc
sub
mov
fs
dec
shrl
xchg
jmp
pop
cmp
repz
push
insb
mov
aaa
push
sbb
or
sbb
mov
leave
sub
xor
loop
push
mov
mov
cmp
nop
cwtl
popa
xchg
fs
pop
jns
cs
jb
sub
fwait
repnz
sbb
sub
outsb
xchg
jns
addb
sbb
popf
jmp
int
jne
fdivs
inc
jb
sbb
cwtl
xchg
xchg
and
mov
scas
sub
call
mov
shll
mov
mov
in
xor
cli
aaa
cmp
mov
jmp
lret
mov
mov
pusha
out
or
pushf
dec
inc
jns
daa
or
or
in
dec
addr16
das
pop
xchg
iret
enter
inc
sahf
std
mov
or
push
pop
fnstsw
call
jecxz
inc
pop
mov
jp
test
dec
or
cld
or
push
dec
push
cltd
daa
ficomps
imul
or
in
ret
das
xchg
les
test
iret
cli
scas
and
and
and
push
data16
add
push
inc
cmpsb
sarb
test
adc
and
lret
into
mov
sub
fbld
mov
mov
push
cli
sub
jmp
mov
jmp
shlb
mov
jnp
rorb
pop
faddl
int3
sbb
sub
bound
negl
add
insb
cmp
jle
xchg
pop
mov
mov
inc
ss
pushf
repnz
jp
cmpsl
xchg
mov
ret
push
hlt
orl
popa
xchg
mov
sub
dec
outsb
addr16
dec
into
mov
cmp
cli
leave
test
out
jb
es
add
and
mov
jmp
adc
movsb
cmp
or
cmpsl
movsb
xchg
aam
sub
rcl
jb
mov
and
cvtdq2ps
cli
rcrl
push
test
lock
and
mov
ret
popf
int
mov
push
arpl
aas
cwtl
mov
je
adc
shl
incl
out
cmp
xor
push
inc
pushf
sbbl
or
mov
mov
pop
insl
or
outsb
cmp
and
adc
xchg
pop
ret
les
mov
add
mov
xchg
jle
xchg
push
outsl
push
jmp
aad
test
xchg
or
mov
dec
pop
jg
adc
das
xlat
adc
fsubrl
into
xchg
mov
hlt
jl
add
xchg
psraw
ljmp
dec
xor
push
imul
pop
call
aam
sbb
test
xor
ret
push
shlb
je
adc
mov
sub
dec
pop
sbb
cld
add
sbb
mov
mov
flds
lock
xchg
rorl
mov
add
mov
shrl
push
jp
ror
cmp
loopne
daa
dec
shrl
aad
sbb
sbb
dec
inc
es
addb
popf
stc
and
pop
movl
xlat
cmpsb
test
ja
call
pop
repz
in
push
sarb
hlt
lcall
mov
inc
stc
ja
mov
shl
inc
xchg
dec
xor
dec
std
or
loope
sbb
ds
xor
mov
int
lret
push
cmp
ret
xchg
test
andl
sub
or
dec
mov
push
notl
cld
inc
loopne
adc
aas
inc
pop
xor
adc
push
gs
add
popf
mulb
mov
sbb
ds
mov
xor
popf
or
ret
jb
insl
ljmp
xchg
push
jne
jb
cli
xor
or
ja
mov
mov
mov
mov
cmp
out
cmp
sahf
mov
xchg
sub
inc
jno
inc
leave
adc
outsb
cmpsl
sbb
jmp
je
sub
pop
sub
or
stos
sub
in
push
inc
add
mov
jle,pt
dec
movsl
mov
cmp
or
test
hlt
in
and
xchg
dec
inc
je
xor
sub
cmc
pusha
adc
jmp
jo
pop
cmp
cmpb
fprem1
int
mov
xchg
or
sub
movsl
lds
mov
pop
fsub
mov
ds
or
sub
sbb
push
push
mov
shll
inc
add
bound
imul
mov
xchg
mov
push
push
xchg
pop
lcall
xchg
dec
pop
into
mov
fstps
subl
xchg
test
fdivrl
ret
jp
gs
lock
ljmp
rcll
test
push
mov
xchg
in
lock
mov
and
cmp
les
xchg
out
sbb
jns
add
scas
int
ret
cmp
lds
movsb
mov
out
dec
rorb
adc
mov
sub
xor
mul
push
adc
pop
xor
mov
inc
xchg
fwait
adc
jbe
lret
push
popf
ja
pop
adc
adc
lods
xchg
mov
cld
mov
adc
sbb
test
mov
cmpsb
lret
pusha
lcall
cmp
lods
inc
dec
cmp
push
outsl
mov
fwait
test
sbb
mov
fiaddl
xor
fidivrl
lret
jmp
or
call
and
mov
jns
outsb
pop
bound
fprem
aad
mov
lods
aas
mov
adc
jne
or
inc
addr16
cmp
add
and
mov
mov
lods
xor
fnstenv
js
push
pop
pusha
xor
je
add
dec
add
cmp
imul
stc
lret
lea
bound
loop
out
test
ret
sub
aam
mov
js
out
mov
dec
mov
aas
pusha
pop
xchg
dec
outsl
mov
dec
push
ja
dec
add
test
ja
xorl
xor
lahf
es
dec
shlb
in
pushf
jnp
rorl
jle
sbb
sahf
mov
rcr
mov
lret
test
and
fistl
xchg
ret
negl
add
cwtl
adc
dec
cmp
xchg
scas
mov
pushf
shrb
xchg
xlat
cmpsl
lea
or
add
lahf
icebp
cmp
sarb
push
adc
sub
push
pusha
xchg
in
loopne
stos
jecxz
psubsw
pop
and
pop
test
scas
std
fisubrs
in
fcmove
out
mov
scas
mov
inc
add
or
jb
dec
out
movsb
nop
push
dec
sbb
xchg
movsb
cmp
mov
das
add
sbb
or
pop
mov
jg
add
jns
push
cmpsb
ficoml
jns
xchg
mov
pop
lods
dec
adc
jbe
daa
or
stc
sbb
cmp
inc
xchg
pop
pop
add
push
pop
jg
test
testl
xchg
mov
test
xor
adc
jge
xchg
dec
xchg
pop
push
mov
sub
pop
cmp
and
sub
sub
push
cmpsl
pushf
fcmovnbe
or
hlt
or
push
jnp
xchg
outsb
data16
aas
mov
std
push
dec
inc
lods
or
sbb
cs
cwtl
add
cmp
outsb
push
pop
sha1nexte
cmp
jns
mov
jnp
mov
and
inc
es
les
pop
add
sub
std
movsb
jmp
and
mov
scas
push
addr16
das
mov
push
jno
aad
inc
pop
cli
sbb
sbb
add
imul
lcall
adc
push
mov
mov
in
cmp
or
mov
pop
xorl
or
into
push
add
cmpsl
inc
arpl
sahf
adc
std
mov
jl
mov
into
sbb
and
pop
mov
loop
lods
ja
jns
stc
daa
add
cmpsb
xchg
sub
add
fsubs
scas
cmp
add
fcomps
xchg
xor
mov
pop
cmpxchg
mov
lods
cmp
xor
inc
ret
jno
in
add
dec
push
aad
cwtl
es
orb
cwtl
fcomps
adc
xchg
andl
aam
adc
lods
push
icebp
rcll
std
cmpsl
lcall
xor
xor
jns
rolb
xchg
pushf
xchg
pop
mov
sbb
cmp
sahf
int3
xchg
fcomps
ffree
pop
sub
mov
xor
add
dec
idivb
and
lods
jb
fistpll
pop
mov
push
aas
fistpl
stc
dec
lahf
movsb
int
push
or
ja
mov
sub
adc
add
loop
insl
sub
or
insb
mov
scas
mov
in
sahf
jecxz
mov
xlat
repnz
cmp
or
dec
push
cwtl
bound
inc
push
mov
ds
sub
add
pop
and
out
inc
pop
aad
rcl
xchg
shrb
and
or
scas
pop
faddl
pushf
addl
mov
inc
fsincos
or
push
jp
and
and
sub
and
data16
sbb
lock
rorb
xor
push
mov
mov
mov
arpl
addb
lods
outsb
out
call
out
mov
cmp
aad
mov
and
mov
push
or
testl
pop
mov
hlt
mov
pushf
sbb
test
lods
push
popf
lods
xchg
je
in
stc
fnsave
ss
pop
stos
push
lods
mov
inc
test
aad
fimull
das
inc
andl
jae
out
popf
mov
rcr
jmp
jo
shl
outsb
or
cltd
lret
xlat
test
aaa
scas
adc
nop
das
iret
pushl
push
imul
push
dec
stos
jle
lahf
pop
data16
lock
mov
push
popa
jmp
ret
lahf
push
divl
lods
negl
sahf
adc
xchg
mov
sbb
fadd
sbb
mov
xor
adc
push
mov
stos
movsb
sbb
pushf
mov
xor
pop
add
imul
mov
cmpsb
sbb
sub
push
cmpsl
xchg
loopne
out
stc
cli
lret
cmp
or
loope
jno
cmp
xchg
mov
mov
inc
push
sbb
xchg
mov
cmp
cltd
cmp
ficompl
adc
sub
mov
add
and
mov
pop
stc
in
scas
mov
movsb
cli
xlat
loop
pop
pusha
shl
mov
push
popa
or
pushf
jmp
repnz
imul
jmp
cmpsb
data16
dec
xor
jnp
jb
dec
orl
cltd
sub
fwait
xchg
xchg
repnz
int3
in
test
xor
mov
or
scas
mov
or
pusha
rorl
sub
in
mull
mov
sub
imul
popa
int3
mov
sub
dec
or
test
jne
xor
lea
xor
shl
jp
dec
stos
enter
cmp
hlt
clc
xchg
loopne
xor
in
icebp
adc
loopne
stos
sbb
ds
fsubs
push
xor
xor
cltd
mov
mov
pop
add
or
mov
arpl
popf
sahf
in
jmp
shrl
jmp
popa
fsubrp
insl
dec
xlat
cmp
scas
pop
stos
add
sub
jno
rorb
mov
scas
aas
mov
call
fwait
or
inc
dec
xor
push
adc
cli
repnz
adc
jp
pushf
aas
les
mov
cmp
jo
and
cmpsb
rcr
sub
add
sti
xor
xor
cmpsb
stos
adc
iret
pop
push
les
xlat
fldenv
ds
in
mov
hlt
sub
ss
pushf
xor
rorl
pop
push
mov
xchg
mov
lods
sti
dec
mov
in
adc
js
jmp
mov
or
and
hlt
sbb
test
icebp
pop
mov
jae
jae
xchg
lock
scas
add
fistl
dec
mov
mov
push
xchg
cwtl
add
int
xchg
repz
mov
cmpb
push
cmp
lock
fs
mov
pop
adc
ds
rcrb
xor
loope
imul
jno
imul
add
or
in
aad
xor
cmp
aaa
xor
mov
aaa
das
push
jp
push
insb
mov
cmp
push
rcrb
and
add
or
mov
xchg
mov
lods
cmpsl
ds
loopne
push
arpl
or
lock
cmp
cmc
xchg
and
aaa
fidivrs
cli
pop
inc
xlat
sub
test
jnp
jg
jle
pop
inc
xchg
in
imul
jmp
into
mov
fidivl
and
push
adc
mov
inc
je
sub
iret
xchg
jge
sub
push
and
pop
sbb
imul
jbe
and
int
mov
data16
stos
ret
rcll
xchg
mov
adc
test
pushf
pop
jnp
jp
pop
adc
fmul
outsl
ffree
inc
scas
ret
inc
int
sbb
test
cli
cs
dec
mov
pop
hlt
and
push
cmpsl
jbe
movsl
xor
cmpsb
popf
push
js
icebp
cli
jae
gs
mov
jle
movsb
jmp
ret
sbb
jo
xchg
pop
stos
pop
mov
mov
fldcw
outsb
int3
sub
sbb
xlat
test
imul
inc
pop
fxch
xchg
orb
sub
push
je
js
inc
les
out
jo
gs
or
or
mov
xor
jle
xchg
lods
or
jmp
ret
shll
js
movsb
xchg
add
xchg
or
outsl
mov
jbe
leave
cli
aam
into
popf
mov
lods
or
cwtl
js
push
xor
ds
cmpl
or
jns
push
mov
mov
arpl
xor
int
dec
adc
movsl
les
xabort
inc
cmp
bound
iret
fs
arpl
pushf
pop
xlat
adc
sbb
dec
and
pusha
arpl
cmp
clc
xchg
jl
out
inc
adc
rclb
inc
stos
aad
jne
icebp
not
testl
push
imul
scas
xchg
inc
xchg
cli
add
subl
lret
cs
push
ret
into
inc
cmp
sub
sub
sqrtps
mov
add
adc
stos
ja
adc
jge
int3
inc
pop
lods
xchg
cmp
lea
add
insb
or
pop
test
decl
cltd
cld
lcall
shrl
push
jp
sub
jmp
js
xlat
add
js
insb
dec
dec
aas
outsb
icebp
scas
pop
mov
push
mov
and
mov
aaa
lock
pop
mov
shlb
ficoml
dec
and
mov
and
sub
cli
aam
sbb
loopne
test
xlat
int
leave
or
pushw
movsl
cmpsb
int
xchg
imul
js
mov
jp
mov
mov
movsl
aaa
pushf
hlt
push
ret
lcall
mov
popa
daa
xchg
inc
scas
mov
hlt
sarb
pop
imul
pop
aad
imul
and
into
popf
mov
sub
ret
push
adcl
jbe
xchg
dec
sub
mov
xor
xchg
inc
sarl
js
and
sbbl
mov
lods
inc
jnp
imul
push
ss
jmp
imul
xchg
sbb
fisubrl
bound
and
xor
arpl
and
mov
dec
ret
mov
aaa
inc
cltd
scas
jo
push
pop
cmp
pop
mov
test
mov
mov
icebp
pop
cmp
sbb
fmuls
out
mov
add
add
insb
xor
loope
jnp
xor
pop
int
mov
inc
sbb
stc
cmp
mov
in
cli
subl
cltd
fists
inc
imul
test
sahf
cmp
aam
stos
pusha
or
pusha
movsl
negl
mov
mov
add
inc
push
ja
lods
mov
int
hlt
jle
mov
dec
mov
loope
pop
pop
xchg
push
out
xchg
loopne
mov
repz
mov
fs
call
mov
push
clc
jns
and
pop
mov
jno
bound
sarl
fmuls
jmp
pusha
dec
in
push
loope
or
loope
outsl
push
and
call
jnp
hlt
xchg
mov
repz
mov
sbbb
daa
jl
xchg
orl
stc
push
sub
aam
in
movl
cltd
test
adc
leave
mov
mov
pop
mov
je
cmpsl
xor
or
push
mov
movsb
sbb
into
xorl
cmpsb
les
mov
cmp
ret
jb
addr16
jmp
daa
dec
scas
jge
push
sbb
or
mov
gs
sahf
or
xlat
lods
xor
cmpsb
jge
pop
xchg
mov
add
inc
or
hlt
pop
inc
stos
jecxz
into
xchg
mov
push
sub
hlt
arpl
stc
xchg
enter
fdivrl
repnz
mov
bound
push
imull
pop
outsb
cmp
sub
ret
push
adc
push
test
stc
adc
xchg
or
sub
stos
adc
xor
dec
gs
or
pop
lahf
or
xor
dec
or
lds
ficoms
cmp
sub
gs
pop
bound
lock
pop
repz
push
cmpsl
pop
sbb
dec
mulb
rcrb
icebp
ret
test
dec
imul
fisttpl
sub
outsl
inc
add
adc
arpl
aam
xor
jo
dec
mov
or
pop
cmp
aaa
nop
popa
mov
out
pop
mov
ret
jne
gs
jo
pop
jmp
xor
xlat
and
shrl
push
ret
fs
push
bound
mov
ljmp
push
push
push
and
cmp
test
or
jl
aaa
push
or
or
cmp
jnp
arpl
sbb
add
in
inc
sbbl
std
aaa
cmpsl
lcall
dec
stos
lahf
push
jmp
iret
nop
pop
xchg
inc
ss
sbb
dec
in
xor
xchg
fcomps
dec
jne
mov
test
gs
addr16
jp
outsl
sub
lcall
push
sbb
mov
mov
or
stos
add
mov
inc
sti
repnz
push
adc
mov
lret
cmp
cmpsb
in
xchg
adc
push
cmc
xchg
add
or
into
int
loopne
lret
lds
push
enter
mov
sbb
pop
jbe
call
pop
fwait
into
jbe
xchg
xor
jl
test
jbe
dec
lret
adc
fidivs
jp
das
cmp
pop
mov
fistps
cld
and
scas
popa
lahf
adc
dec
aaa
repz
das
cmpsl
push
sub
test
mov
repz
std
push
mov
imul
xchg
cwtl
aaa
out
mov
xchg
mov
loopne
ficoml
dec
fiaddl
aaa
inc
add
lahf
lods
push
jae
xchg
add
in
cmpsb
fcomps
xchg
adc
ljmp
cmpb
push
mov
sub
push
xchg
xlat
mov
popa
mov
rolb
sub
loopne
mov
rcrl
ret
push
jmp
xchg
clc
cs
cld
jecxz
xor
in
push
popa
movb
rorl
and
insl
jl
cmp
jno
call
divl
popa
cld
push
pop
push
xchg
or
aad
mov
inc
outsb
jl
mov
lds
push
outsl
mov
adc
xchg
fwait
dec
inc
push
fwait
inc
leave
lcall
mov
push
aam
mov
stos
push
aam
xchg
int
push
mov
stc
pop
cmpsb
stc
negl
xchg
xor
mov
pop
dec
out
mov
insb
adcl
cmp
xchg
inc
or
ficompl
xor
in
mov
mov
fimuls
mov
repz
fcmovnb
xor
mov
std
jmp
das
mov
pop
aas
cmp
into
cmp
scas
push
push
and
xor
mov
inc
and
inc
jns
mov
scas
inc
in
mov
lcall
lret
mov
cmp
sub
dec
mov
pop
jmp
inc
mov
mov
xlat
in
cmp
hlt
in
or
mov
xchg
dec
and
xlat
ds
xor
aam
adc
jle
jb
push
shr
sub
push
scas
ret
scas
mov
xor
imul
sti
push
xor
push
xor
jae
pop
jp
push
inc
push
xchg
cltd
lods
jecxz
lahf
pcmpgtw
xchg
in
xchg
into
jp
sub
xchg
into
adc
cmpsl
mov
mov
rorl
dec
xchg
mov
sbb
cmpsb
sbb
xchg
pusha
sub
in
test
push
out
xchg
xchg
add
cltd
jnp
fwait
ljmp
mov
cmpsl
jl
sub
aad
roll
xchg
fmull
xchg
mov
mov
movsb
inc
xor
xchg
add
aaa
pushf
or
pop
test
and
fiadds
cli
call
rol
mov
push
std
sbb
jne
js
in
xchg
push
inc
xorl
call
mov
and
push
stc
lcall
into
xor
pop
es
pop
out
xchg
pusha
icebp
sahf
mov
out
les
cmpsb
and
test
mov
fs
loope
fisubl
out
cmp
inc
cmp
add
pushf
inc
std
std
xchg
adc
xchg
les
int3
mov
mov
repz
cmpsl
ss
out
push
push
scas
das
or
adcb
dec
nop
sub
popf
dec
outsb
lea
rcrl
xor
leave
mov
jne
pop
cmpb
divb
js
dec
test
paddq
shll
ja
daa
xor
popa
mov
jge
cwtl
popa
sub
inc
enter
gs
jns
inc
popa
and
pop
sub
jns
das
xor
movsb
cwtl
xchg
rcr
push
push
mov
rclb
je
ret
xor
stos
sbb
mov
nop
mov
inc
lahf
test
enter
cmp
adc
icebp
push
fistl
or
aam
mov
pop
or
fistpl
roll
shlb
mov
int
ret
js
add
pop
ret
dec
lcall
sbb
shlb
sub
xchg
mov
notl
pop
bnd
push
inc
xor
xchg
lret
add
movsl
mov
ret
or
push
mov
xchg
jmp
xchg
mov
std
or
loopew
mov
data16
add
push
and
ret
dec
xchg
pop
inc
testb
mov
cwtl
inc
xchg
loope
pop
mov
in
push
sti
or
jmp
sarl
xlat
rclb
dec
mov
push
xchg
mov
insb
aad
push
popa
ret
mov
or
int
test
aas
xchg
ja
xor
frstor
lret
xor
stc
test
call
xchg
cmpb
sbb
repz
mov
test
or
shl
jne
arpl
jp
addr16
aam
subl
xchg
mov
push
ja
pop
push
data16
lgdtl
mov
xchg
and
jns
xchg
cmp
out
std
cld
movsb
stc
sub
cs
dec
push
push
or
cld
cmp
lds
jno
and
fimuls
xchg
rolb
jmp
add
add
rdpmc
xchg
adc
jnp
ds
aaa
js
pop
push
hlt
jl
test
push
mov
cli
adc
adc
xchg
aad
jecxz
mov
lods
rcll
mov
jle
lahf
cmc
jb
add
sub
pop
mov
mov
gs
dec
push
or
fdivrs
adc
test
adc
popa
or
mov
mov
xchg
xchg
sub
cmp
test
mov
into
ret
idivl
out
popf
ds
pop
addr16
imul
je
mov
jmp
cmpsb
pop
push
ficoml
mov
pop
pusha
and
mov
das
in
les
jecxz
fldt
pusha
inc
pop
and
shll
cs
je
addb
daa
out
sub
pop
jae
mov
xor
pop
fisubrl
sub
mov
xchg
cmpsl
mov
pop
xchg
mov
inc
and
lods
cmpsb
sub
add
stc
mov
xlat
fs
mov
cmpsl
sub
push
pop
std
aaa
sbb
push
lea
pop
std
cmp
or
test
test
xor
fildl
test
out
imul
jg
loopne
jb
ja
popa
rcrl
test
or
daa
inc
mov
les
cmp
test
in
or
imulb
call
mov
dec
jo
lods
pop
dec
pop
daa
mov
cmp
jns
decl
push
in
imul
push
lea
bound
sbb
jbe
inc
mov
add
add
lock
mov
sub
push
sbb
test
push
jmp
cmp
push
ficompl
std
shlb
js
pop
aas
in
mov
cmp
sbb
nop
cmp
int
insb
adc
adcl
dec
sti
clc
dec
sti
lock
lret
jp
and
dec
add
test
xor
sub
and
das
adc
push
pop
or
jg
iret
orb
and
add
xchg
hlt
movsl
xor
fldenv
orl
ss
jmp
xor
imul
lahf
mov
imul
mov
lret
test
lds
sbb
jo
popa
lcall
mov
add
xchg
mov
icebp
aam
mov
jl
outsl
icebp
mov
mov
add
imul
mov
decb
test
popa
imul
fnstsw
jge
shl
cli
cmp
hlt
inc
mov
xchg
cmpsb
jge
push
in
mov
cmp
fwait
dec
scas
pop
data16
cmp
call
and
push
js
mov
leave
mov
push
and
jno
mov
sarb
dec
gs
imul
pusha
fwait
sub
cmp
dec
inc
shll
daa
mov
and
aad
loope
cmp
test
sbb
adc
ret
xchg
frstor
jle
jle
jns
and
scas
push
jae
shl
daa
push
arpl
pop
xor
les
mov
push
adc
sbb
jecxz
xchg
lret
push
fldcw
inc
inc
stos
sbb
dec
jl
adc
xlat
mov
aad
jl
mov
push
aad
push
enter
flds
and
arpl
loop
jb
test
cmp
out
dec
cmp
push
test
loope
call
dec
mov
jno
aam
xchg
and
movsl
popa
mov
inc
sbb
in
pop
xlat
negl
js
xchg
xchg
sub
xchg
mov
int3
sbb
movsl
aaa
dec
aaa
xor
sahf
je
add
dec
jl
lahf
int3
pop
lret
and
push
sub
xchg
fsub
hlt
mov
sub
loop
inc
fdivr
add
insl
mov
jbe
andl
out
sbb
mov
and
insl
inc
mov
mov
or
les
hlt
pop
push
xor
iret
push
xor
insb
sub
jge
cmp
into
and
dec
cmp
xchg
movsl
sbb
fcompp
test
push
jne
popa
jnp
mov
adc
in
pop
jmp
jmp
leave
pop
and
fisttps
mov
repz
jb
inc
int3
ffree
sub
adc
shr
cmp
xor
out
stc
bound
pop
sbb
repz
scas
ss
and
je
xchg
sub
push
dec
rcrb
repz
arpl
dec
mov
ret
repz
sets
pop
jne
push
in
cli
ret
mov
stc
or
mov
test
push
scas
mov
dec
imul
xor
mov
ss
push
int3
push
cmp
xlat
rorl
xor
jns
hlt
pushf
xor
outsl
add
push
sbb
cmpsl
sbb
call
mov
xor
or
orb
xchg
mov
test
dec
ret
into
arpl
lret
cmc
xchg
ret
jmp
mov
ja
sub
sbb
sbb
cmp
inc
nop
daa
outsb
add
lock
leave
out
sub
test
rclb
enter
cmc
xchg
dec
mov
std
icebp
out
fisubrl
cmpsl
pop
pushw
mov
cmp
movsb
in
xlat
movsb
or
stos
aad
js
cmp
xor
inc
in
mov
mov
das
pop
push
cmp
inc
push
jl
mov
shlb
shlb
pop
lret
data16
xchg
xchg
cmp
stos
testb
add
movsl
adc
aad
inc
lcall
loop
mov
in
lcall
mov
xor
test
aad
repz
dec
call
mov
mov
and
int3
repnz
lahf
push
jns
mov
daa
pop
adc
nop
push
call
mov
repnz
xor
mov
addr16
mov
test
test
mov
insl
adc
inc
aaa
push
shrl
mov
push
and
sub
fldl
insb
jbe
push
movsb
mov
daa
dec
inc
enter
lods
mov
pop
push
pop
loopne
jge
dec
pop
test
cltd
lds
aam
aas
pop
filds
ds
lods
fldt
push
inc
and
jecxz
jg
lds
jmp
aam
in
xor
and
fistps
das
js
xor
push
inc
ret
fwait
sbb
adc
test
aam
pushw
xchg
out
inc
test
mov
out
inc
sub
test
xchg
mov
add
sbb
inc
sub
cmp
es
dec
cmp
sbb
adc
jge
sbb
jge
jbe
xchg
sub
fwait
pop
sbb
xchg
or
jg
mov
aam
jg
xor
dec
test
imul
int
adc
jno
mov
ja
or
pop
out
lea
rclb
lret
xor
fs
jns
loop
jnp
mov
pop
mov
jns
out
sbb
cltd
adc
xchg
adc
aas
aam
add
int
and
cmpsl
sti
pop
pushf
lret
aam
aaa
jp
lret
mov
inc
sbbb
fcmovne
sbb
cli
push
cmp
lahf
stos
nop
outsl
sahf
dec
inc
and
push
push
out
in
cmp
je
lret
insb
adc
push
add
dec
dec
xchg
mov
js
ret
xchg
stos
out
pop
sbbl
push
jnp
push
adc
inc
outsl
sub
xor
shrb
and
jns
push
std
call
jns
push
inc
fidivs
ja
push
scas
jne
pop
cld
push
mov
leave
dec
out
std
gs
jge
fmulp
mov
pop
dec
xor
or
or
adc
sub
xchg
scas
faddp
mov
sbb
inc
jl
inc
addl
push
std
or
aam
xchg
iret
sub
jg
xor
in
fwait
jl
add
imul
ss
cmp
pop
push
ret
mov
ret
xchg
loop
mov
mov
aam
aaa
lock
push
push
mov
cmc
push
cmp
mov
jmp
mov
test
inc
add
mov
fnstsw
cs
and
cld
sbb
dec
fiaddl
cmp
imul
shrl
mov
jne
pop
jnp
cmp
push
sbb
dec
pop
test
mov
jmp
xchg
gs
xor
inc
mov
mov
sbb
leave
aaa
testl
mov
mov
cmp
int3
sub
cwtl
flds
into
jl
cwtl
fcmovnb
xor
addr16
sub
shlb
clc
xchg
jns
out
xchg
pop
out
lret
aad
xchg
mov
adc
xlat
pushf
push
jo
mov
jmp
or
mov
xor
adc
fldenv
std
into
repz
inc
in
jmp
jo
cmp
shll
push
lret
fwait
cmpsb
loop
mov
inc
hlt
push
sub
pop
xlat
shlb
jmp
mov
push
pop
pop
jbe
adc
pop
add
xchg
or
out
push
adc
cmp
sub
push
fucomip
ror
pop
dec
inc
push
push
hlt
mov
jl
orl
pushf
and
imul
les
lea
jns
pop
dec
in
mov
pop
xchg
or
stos
std
inc
decl
mov
dec
ljmp
icebp
ret
cltd
adc
mov
sbb
push
pop
call
mov
sbb
or
inc
out
cmpsl
mulb
mov
lret
cmpsb
add
or
lods
aad
leave
es
aas
or
inc
test
not
lret
int
je
add
cmp
cli
and
scas
jne
mov
aas
js
test
movsbl
in
fs
push
mov
mov
xchg
dec
out
outsb
jg
test
push
mov
mov
push
ret
popl
mov
push
ret
dec
popa
repnz
and
fcomp
sub
js
xchg
scas
leave
pop
es
ds
push
imul
cmp
sahf
pop
pop
mov
pop
cmp
fildl
and
das
pop
ret
xchg
sbb
inc
xchg
stos
jg
cmp
mov
add
mov
jns
stos
or
leave
inc
lods
in
mov
adc
pop
cli
or
push
decl
and
push
pop
mov
pop
hlt
adc
cmp
cltd
dec
adc
inc
cmp
push
pop
xor
cmpsb
fstps
add
rcll
loop
inc
lock
aaa
pop
sub
jae
push
fldz
rcll
ja
stc
in
outsl
mov
or
out
xchg
lret
adc
mov
aaa
push
pop
push
jns
add
lret
mov
movsl
or
addb
andl
mov
jnp
rcll
pop
and
or
outsl
aam
xchg
xchg
mov
es
fnstsw
les
jb
call
push
fadd
lods
in
xor
jp
cmp
xchg
inc
daa
cld
outsb
sbb
mov
mov
fwait
sub
rolb
repnz
mov
push
or
repz
nop
sbb
lret
jno
roll
mov
orl
xchg
fsub
add
inc
arpl
out
and
out
popf
sbb
jbe
sti
idivb
test
adc
pusha
sub
xor
int3
idivl
xchg
push
daa
mov
cs
add
dec
lcall
test
icebp
cmp
lret
aaa
push
out
jno
rcrl
inc
fucom
pop
or
repz
insl
outsb
adc
dec
sub
std
sbb
lea
add
enter
or
xchg
push
int3
out
scas
lret
mov
jo
or
cwtl
js
mov
xor
hlt
lea
mov
push
jne
jae
push
sbbl
jns
adcb
jle
les
dec
sar
inc
mov
push
pop
int3
inc
jo
adc
ret
enter
popf
gs
movb
in
sub
or
ja
and
dec
xor
and
repz
rcrb
sti
mov
mov
movsb
jbe
clc
and
sbb
mov
pop
xchg
fisttpl
mov
leave
cs
lock
std
jg
or
arpl
js
add
or
fsubrs
int3
sub
mov
xchg
fwait
mov
pusha
jl
shr
scas
jp,pt
ss
int3
out
inc
push
daa
mov
shr
xchg
add
loop
mov
fistps
sbb
inc
jbe
xchg
and
aam
adc
insl
lods
jae
stos
test
pop
xor
fwait
sbb
sub
xor
nop
dec
cwtl
inc
daa
mov
notl
mov
and
push
repz
jne
sahf
and
xor
and
mov
fstl
inc
sub
addr16
call
cwtl
mov
jecxz
cmp
jno
xchg
xchg
pop
mov
xchg
jae
popf
out
and
pop
out
daa
cmpsb
fs
mov
dec
cmp
sar
jns
sub
das
int3
fwait
mov
and
nop
and
push
std
jecxz
cld
std
add
test
xor
insb
jb
mov
xchg
lods
mov
enter
xor
in
xchg
sbb
and
add
jbe
push
jge
jge
das
sub
dec
add
adc
aaa
xchg
std
mov
fwait
loope
in
inc
pushf
mov
mov
dec
pop
stos
jno
ja
outsl
or
adc
insb
mov
nop
push
cwtl
inc
dec
mov
cmp
xchg
rcll
xor
xchg
pushf
lret
jl
push
inc
dec
mov
sub
adc
pcmpgtb
sbb
cmp
ja
arpl
mov
xor
cmpsb
push
movsl
outsl
adc
xchg
mov
push
push
push
aam
ror
mov
xor
into
dec
push
dec
dec
adcl
outsl
xor
aas
adcb
xchg
jecxz
and
call
movsl
adc
mov
cs
jmp
nop
pop
fsubrl
add
adcb
xor
loopne
push
cwtl
and
jb
adcb
push
test
es
ja
int
ret
stc
mov
sub
roll
jne
jns
jle
lahf
insl
sbb
aas
jg
cmp
fidivl
mov
rcrb
in
inc
repnz
cmp
cld
fisubs
imul
sub
adcl
scas
cmpsb
das
cmpsb
mov
cmp
rcrl
cmp
dec
movsl
fwait
sub
inc
out
push
xchg
das
cmp
popf
in
mov
jno
cmp
xchg
push
jo
stos
mov
mov
scas
xchg
lods
adc
pop
sti
add
cli
mov
mov
ficomps
lret
adc
dec
test
xor
icebp
jmp
sbb
dec
popa
cmp
es
es
je,pt
dec
sub
dec
jle
inc
jecxz
ret
into
in
rcll
shl
int3
inc
fucomi
adc
jp
bswap
cmp
push
shr
in
xor
lods
mov
cli
pop
mov
lret
mov
sub
mov
imul
and
adc
adc
jbe
mov
js
mov
sub
mov
adc
ss
mov
sub
sbbl
out
and
xor
lahf
mov
push
ds
pop
dec
sbb
push
xchg
jno
out
cmc
xor
in
add
push
imul
mov
add
sbb
leave
fistpl
nop
clc
mov
aam
xor
adc
xchg
pop
imull
pop
pop
pop
dec
in
cmc
or
add
adc
call
xor
sub
shr
vcvtss2sd
xor
shrb
dec
pop
les
out
push
imul
sub
push
call
xor
push
sub
das
sarl
aas
sbb
mov
fisttps
push
sub
jmp
inc
sbb
push
cmp
idivl
ss
mov
push
xchg
sub
mov
xchg
sub
cli
addb
rolb
sub
dec
fs
xchg
push
icebp
mov
sbb
cmp
fstps
push
mov
cmpsl
aaa
mov
sbb
mov
jl
dec
mov
sbb
xor
sub
mov
rclb
mull
cmp
mov
mov
mov
es
imul
mov
jo
mov
jo
mov
loop
mov
pop
push
sbb
jnp
pop
xchg
add
nop
test
pusha
or
dec
js
sub
add
lahf
lret
or
out
dec
cmp
push
pop
sbb
jecxz
repz
stos
cmp
mov
mov
int3
fisubrs
xchg
dec
or
adc
xchg
addl
aad
insl
insl
rorl
nop
scas
jecxz
ret
in
pop
jle
pop
mov
mov
mov
cmp
cmp
test
cmpsl
push
jns
dec
cmc
dec
lcall
stos
lods
push
xchg
clc
jle
movsb
clc
push
jae
loope
mov
cld
fcompl
lea
inc
leave
jge
pop
icebp
sub
cmpsb
loope
push
jp
sub
pop
pusha
mov
int3
adc
sbb
aam
pop
out
stc
cmpsl
adc
push
sub
inc
pop
call
and
sub
insb
mov
xchg
insb
int
dec
sbb
int
mov
daa
fdivs
pusha
rcrb
inc
add
adcb
lods
scas
daa
pop
ja
pop
pop
outsb
push
push
test
fcompl
inc
push
mov
inc
ficoms
stc
sbb
pop
mov
sub
stos
xchg
mov
mov
lea
stos
mov
ror
pop
add
rclb
insb
repnz
popa
andl
sarb
test
hlt
inc
sbb
jge
lock
and
int
bound
outsl
or
jl
jl
jnp
in
or
out
les
xchg
test
jp
call
lahf
stc
jbe
dec
jne
clc
cli
inc
iret
mov
adc
das
insb
xor
cmp
push
addb
loope
mov
push
xchg
pushf
inc
mov
cltd
iret
cmp
out
pop
mov
ss
dec
test
les
jp
jae
inc
fidivrl
jp
test
mov
xchg
sbb
mov
out
or
mov
cwtl
xchg
or
repz
add
out
dec
sahf
jmp
dec
or
xor
lds
sub
insl
pop
in
fcmovb
divb
ret
cli
es
jl
mov
fldt
divb
ret
mov
cld
icebp
mov
sbb
loopne
leave
test
jl
mov
add
sbb
movsl
cmpsl
add
leave
xor
sub
stc
jl
push
sub
mov
data16
cmp
jo
xchg
movhps
push
jae
push
mov
scas
sub
mov
lcall
in
or
test
cmp
addb
add
mov
pop
imul
sbb
hlt
ljmp
cmp
dec
ret
mov
ret
mov
das
enter
cmc
and
lods
push
lea
enter
sbb
jle
inc
lds
mov
mov
sub
pop
and
adc
mov
jb
cmpsb
jmp
and
add
xchg
mov
out
cmp
aam
push
push
int3
outsl
popa
js
popa
inc
repz
scas
mov
and
sbb
insb
shll
jge
repz
jbe
xchg
push
inc
xchg
icebp
push
jmp
jge
arpl
cmpb
mov
sub
xchg
sub
or
add
push
movsb
or
or
xchg
push
push
jmp
add
outsb
adc
iret
lds
loop
scas
subl
jge
mov
das
add
fwait
lret
repz
jge
cs
cmp
cwtl
push
iret
mov
inc
insb
imul
in
xor
jbe
mov
mov
aam
inc
pop
xor
mov
ljmp
jp
xchg
mov
ret
push
pusha
fcmovb
scas
aad
fisttpll
repnz
insb
ja
gs
scas
inc
xor
mov
mov
xchg
cli
test
fistpll
or
movb
mov
cld
or
inc
pop
jo
or
stos
clc
jge
dec
add
rolb
inc
test
sbb
dec
xchg
dec
ss
fdivp
mov
push
fwait
in
int
mov
mov
clc
mov
xchg
aam
aaa
fidivrs
stos
sbb
cmp
dec
test
test
xchg
lret
push
idivl
mov
fiaddl
mov
and
pop
mov
xor
adc
adc
mov
gs
jo
xchg
pop
lret
pop
call
inc
jle
int3
gs
aaa
inc
sub
aaa
adc
repnz
jno
xlat
add
lods
aas
cltd
mov
fcoms
lea
stos
and
scas
push
ret
jb
push
shlb
adc
ret
cmp
roll
pop
loopne
adc
adc
inc
add
jne
inc
mov
bnd
inc
xor
repnz
mov
mov
lcall
addb
int3
mov
sarb
mov
jb
push
and
or
popf
stos
dec
push
outsb
sbb
iret
xor
hlt
dec
sbb
js
dec
popa
inc
dec
shlb
ja
ljmp
cmp
lahf
or
adcl
sbbb
xor
xor
inc
insl
mov
push
xor
lods
pop
fistpll
cmc
bound
popf
pop
andl
dec
addr16
mov
fstl
mov
push
aaa
push
enter
xchg
add
xchg
fs
daa
inc
sub
or
xchg
adc
aad
sbb
mov
adc
mov
jl
push
jae
push
dec
insl
icebp
cmp
pop
ds
pop
sbb
xchg
xor
dec
imul
xchg
inc
dec
in
cli
lahf
into
sub
push
js
je
push
mov
andps
jb
mov
xchg
pop
add
cmp
pop
xlat
dec
xchg
lret
mov
lret
leave
adc
xchg
cltd
out
and
and
aas
fstl
pop
das
mov
add
adc
imul
xchg
lret
icebp
add
dec
sub
cli
outsl
cmpsl
cltd
jae
mov
mov
xor
adc
in
pop
jae
cli
movsb
and
dec
and
jns
jb
mov
int3
push
jb
sbb
inc
nop
adc
xchg
nop
and
loope
inc
inc
test
and
sub
es
out
ret
fdivl
cmpsb
mov
xor
int
jnp
xchg
pop
push
fucom
sbb
inc
and
or
dec
add
cmp
sub
lds
xchg
es
add
out
pop
addl
mov
dec
les
mov
enter
lods
ret
jns
stos
xlat
inc
js
push
clc
mov
push
das
test
xchg
sahf
fstpl
mov
inc
dec
inc
into
push
add
push
daa
iret
outsb
xor
aaa
add
or
sbb
movsb
xchg
arpl
aaa
mov
inc
popa
pop
mov
push
and
jg
adc
mov
lock
xchg
mov
mov
mov
sbb
cli
fmull
fistpll
es
addb
rolb
aaa
fbld
inc
lahf
shlb
test
jno
call
pop
in
pop
scas
jae
iret
loop
mov
jmp
add
mov
movsl
pop
push
aaa
lods
and
jnp
adc
sub
outsb
push
or
add
inc
cwtl
fldenv
and
stc
or
ja
ret
or
adc
call
cmc
shlb
sbb
std
jg
pop
xchg
jl
xchg
stc
inc
repz
pushf
lods
in
sub
and
jns
mov
scas
insb
mov
jbe
fmul
cmpsl
movsl
lea
sub
cmp
mov
stc
jge
out
dec
test
mov
inc
movsl
cmp
inc
and
loope
jo
mov
fisubs
xor
cmp
adcb
sub
sbb
sbb
fisubs
das
xor
pop
sbb
jl
xchg
aas
fnstenv
fs
lahf
test
cmpsb
mov
daa
add
loope
addr16
add
mov
ss
sbb
sti
ds
push
idivb
scas
scas
jb
cmp
xchg
xchg
cmp
shl
bound
sub
rorb
fdiv
pop
les
sub
xchg
xchg
push
adc
lret
inc
and
jl
aad
or
int
lds
xor
or
mov
pushf
imul
cld
mov
sub
pusha
dec
lret
mov
repnz
push
fildll
stos
mov
mov
mov
jae
repz
cwtl
dec
push
inc
pop
mov
mov
add
xor
shlb
jmp
shlb
in
xlat
sub
mov
push
mov
mov
jle
inc
inc
mov
adc
lods
push
sub
shlb
xor
inc
xor
push
movsl
fsubrl
or
lods
inc
or
inc
je
xchg
dec
clc
or
pop
into
xor
xchg
nop
fldt
xor
dec
xor
push
add
cmpsb
dec
sarl
mov
xor
mov
imul
add
nop
or
mov
sahf
sahf
dec
lods
jecxz
mov
cld
dec
cmp
rcll
gs
cmc
pusha
lea
repnz
scas
push
dec
and
cmp
sbb
pop
jns
nop
push
stos
lods
pop
pusha
jns
aad
mov
fiaddl
shll
int3
pop
dec
cltd
jo
pop
cmpsb
scas
sbb
sbb
fwait
imul
push
je
mov
sub
push
add
pusha
enter
inc
daa
aaa
imul
sub
lret
in
cmp
pop
ss
test
xchg
jmp
mov
sti
or
mov
fwait
push
es
ss
out
mov
xchg
cmp
aad
pop
mov
repz
sbb
pushf
jecxz
mov
sub
nop
loope
pushf
adc
jp
fbld
lea
or
fnstcw
je
fldenv
push
fsub
mov
cli
jne
push
push
ss
or
add
mov
insl
mov
cmpsl
out
sub
cwtl
inc
and
repnz
popaw
add
out
daa
jmp
mov
mov
add
jl
out
scas
in
lcall
nop
imul
aas
clc
adc
push
and
cltd
push
test
lds
adc
scas
std
test
jmp
jl
sbb
lods
test
loopne
cltd
dec
stc
mov
jb
or
pop
or
xchg
clc
bound
fdivs
inc
jl
lret
ret
cmpsb
jecxz
ror
inc
or
pop
xor
loopne
mov
xor
mov
inc
jo
adc
cld
rorl
dec
sub
or
jecxz
in
ds
aaa
mov
stos
xchg
ds
inc
xchg
lcall
push
lret
cmp
movsl
push
movl
pop
sarb
pop
mov
mov
jne
dec
lahf
sub
fs
sub
in
cmpsb
push
mov
orb
push
pop
xor
inc
test
push
lods
mov
sahf
test
jns
into
inc
adc
cmp
sub
push
mov
inc
fimuls
popa
daa
test
push
gs
mov
xchg
adc
nop
mov
jmp
cmp
shlb
jne
insb
sbb
mov
imul
sbbl
pop
adc
filds
jge
jg
or
mov
sub
xor
shll
sub
cmp
push
inc
movsb
pop
sub
outsl
add
push
js
mov
sarb
cmpl
mov
jbe
and
bnd
adc
daa
cmc
jbe
or
jno
fadds
daa
jne
outsb
pop
mov
dec
sbb
cmc
or
mov
mov
jmp
notb
adc
jmp
out
shlb
out
xchg
push
fadds
dec
dec
loop
aam
and
movsb
jbe
or
shrb
mov
xor
ljmp
dec
cmpsb
and
cmpsb
bound
hlt
or
mov
jl
and
test
cmp
mov
push
cmp
loop
adc
push
adc
inc
and
xchg
jge
adcb
mov
adc
dec
inc
jo
scas
and
push
push
jecxz
mov
sbb
cs
mov
fsubl
or
push
push
lods
pop
xlat
ret
mov
xchg
mov
xchg
imul
cmp
jb
dec
or
lret
pop
out
mul
adc
cld
xor
xor
cmpsl
js
outsl
pop
sarb
jb
mov
or
inc
jl
mov
scas
data16
into
pop
push
ljmp
bound
pushf
xchg
cmp
mov
jno
imul
popa
mov
dec
cmpsl
pop
cli
inc
cs
jl
movsb
icebp
lods
scas
pop
xchg
movsl
mov
push
in
adc
fstpt
xor
scas
jecxz
xor
adc
xchg
mov
orb
push
fstp
xor
mov
lcall
push
inc
sub
shll
mov
out
dec
adc
xor
shl
sbb
loopne
fs
push
int
adc
ret
or
push
and
sahf
xor
stc
stos
loope
loope
das
mov
sub
pusha
xchg
in
in
ds
jg
inc
out
out
jmp
inc
mov
addr16
cwtl
and
mov
xlat
hlt
push
loopne
dec
add
mov
mov
mov
data16
icebp
je
sbb
sub
test
add
mov
fiadds
std
mov
movsb
dec
mov
imul
fmull
add
rorl
push
cs
jo
shlb
mov
enter
pop
sbb
xor
sti
pop
adc
xchg
and
xchg
and
mov
pop
mov
arpl
pop
mov
dec
icebp
jg
cmpsl
push
ds
ret
xchg
jo
xor
ret
int
ret
or
xor
sbbb
push
sub
mov
sub
in
adc
xchg
add
sbb
adc
orl
fs
or
gs
cli
cwtl
push
cmpsl
dec
dec
fsts
int3
cmpsl
and
xor
mov
and
jo
roll
loop
add
cld
test
mov
mov
icebp
mov
in
mov
mov
into
insb
test
roll
mov
stos
xchg
jmp
sub
cmpsl
je
pop
xor
cmc
fsubrl
xchg
push
out
cs
push
pop
sbb
into
rcrb
or
adc
adc
jnp
test
loop
push
pop
test
in
outsb
pusha
es
lahf
gs
ss
jnp
popf
xlat
movsb
jne
hlt
pop
inc
xor
inc
cmc
jl
sahf
scas
aam
and
pop
movsl
lret
shlb
and
test
scas
dec
in
dec
xor
inc
es
push
lret
imulb
movsl
ror
je
and
call
xchg
das
or
das
sub
jb
inc
jmp
imul
xchg
xchg
sti
insl
rcrl
lret
mov
rcrl
lea
cmp
jp
in
inc
in
in
scas
mov
inc
lret
in
testl
mov
pop
cmp
push
test
pop
in
or
inc
and
and
add
jl
arpl
jns
lods
push
xchg
cmp
dec
pop
pop
fdivl
sbb
fists
lock
dec
xor
pop
pop
jno
flds
inc
and
cmpsb
lahf
gs
bnd
sbb
pop
sarb
lahf
roll
nop
xchg
lods
in
xchg
or
arpl
int
leave
loop
sub
xchg
sbb
mov
mov
xchg
xchg
data16
sub
dec
mov
push
jg
dec
cmp
sub
lret
sub
jae
mov
cmp
push
mov
jbe
add
repnz
jns
jns
popf
mov
push
testb
sbb
xchg
ret
icebp
adc
xor
dec
xchg
ljmp
push
ja
aam
js
ss
jl
cmp
push
xor
out
je
cmp
mov
mov
and
inc
das
int3
sub
in
cmp
fs
fsubrs
push
out
jne
jno
pusha
jecxz
fstpl
or
and
psraw
scas
mov
and
es
test
stos
das
jns
jl
adc
imul
jmp
xchg
div
add
bound
jne
aad
jge
sbb
repnz
inc
pop
sbb
lret
pop
repz
stos
test
scas
fistpll
aad
lahf
sarl
pushf
bound
nop
pop
jg
cltd
and
shll
das
in
pop
sub
pop
adcb
push
jecxz
dec
mov
nop
cwtl
bswap
insl
cmpl
xor
dec
push
mov
add
pushf
push
loop
dec
arpl
pushl
ror
cltd
gs
fstpt
loopne
pop
and
push
and
xchg
mov
outsb
dec
or
popf
dec
jnp
push
push
cli
je
adc
inc
roll
pop
fcoml
rcl
rcrl
inc
filds
js
repnz
icebp
nop
dec
gs
fldl
and
xchg
xor
mov
xchg
sarl
leave
inc
lods
cmp
in
mov
test
lea
inc
xor
pop
bound
fsubs
cmpsl
cld
jecxz
data16
pop
jecxz
mov
lcall
sub
push
clc
cmp
mov
push
mov
cmp
ljmp
out
jecxz
out
rolb
push
aaa
negl
push
adc
leave
xchg
pop
pop
add
pop
and
fs
insl
xchg
pop
sbb
push
mov
or
mov
jmp
in
mov
into
fbstp
lods
pop
in
js
subb
cmpl
mov
fidivl
sbb
mov
cmc
mov
out
int3
rcrb
arpl
lods
out
inc
lret
cmp
lock
int
cltd
hlt
lds
lock
push
cmp
push
rclb
es
xchg
je
shl
fdiv
in
les
ja
sbb
shrb
sahf
dec
out
cmp
cmp
fcmove
cmp
jo
mov
std
mov
add
test
jl,pt
fcomps
data16
push
out
fwait
dec
xor
mulb
push
mov
lods
jne
sub
js
jo
mov
pusha
repz
fstpl
int3
rclb
cmpsl
sti
cmp
call
pop
ret
dec
loope
jp
stos
hlt
adc
fimull
add
roll
pop
pop
testb
mov
pop
adc
add
scas
sbb
cmpsb
push
test
mov
inc
and
fs
mov
push
lock
arpl
in
cmpsb
test
loop
adc
xchg
push
addr16
stos
jl
int3
fstpl
mov
pop
dec
idivl
xor
bound
pop
icebp
xlat
sbb
decl
xchg
push
push
sub
cmpb
test
lcall
sub
sbb
stos
jbe
jnp
popa
cmp
clc
sbb
jl
repz
fisubs
xchg
repnz
test
iret
iret
sub
mov
cmpsl
mov
jg
mov
lods
lahf
dec
fldt
lock
push
dec
inc
and
xor
es
push
cmp
adc
insb
mov
inc
pop
xor
testb
jmp
aam
push
inc
nop
add
xchg
mov
mov
pop
add
icebp
movsb
dec
fs
cmp
ja
ss
push
pushf
fldenv
cmc
mov
roll
cli
cmp
ror
push
das
or
mov
xchg
lahf
xor
loope
adc
jp
sbb
xchg
iret
jns
ffreep
xchg
ds
jmp
mov
xor
jb
mov
in
xchg
cs
cmp
fisubl
stc
test
cli
push
xchg
push
cmp
dec
in
xchg
push
into
stos
fsubrs
xor
stos
movsl
jno
add
je
out
int3
adc
mov
repz
adc
ljmp
test
pop
and
sbb
cli
gs
cmp
rcll
and
std
mov
icebp
xchg
jne
mov
outsl
cmpsb
xor
jp
and
insl
mov
jp
cmp
or
jle
std
adc
data16
stos
test
pushf
lea
dec
jb
ret
fdivp
pop
and
jecxz
rorl
inc
out
shll
je
outsb
mov
aad
lret
adc
sbb
adc
dec
adc
mov
and
insl
inc
mov
iret
call
sahf
addr16
subb
push
or
aad
xor
movsl
in
repnz
cld
push
loop
imul
clc
mov
leave
jle
inc
dec
mov
inc
mov
xor
mov
pop
les
inc
push
cwtl
xchg
loope
dec
ljmp
neg
pop
gs
xlat
scas
xchg
ljmp
ret
cmp
push
and
and
xlat
cld
cmp
sarl
sarb
mov
jne
sub
pop
call
jg
cmp
and
mov
sub
out
xor
jecxz
cmc
jnp
lods
inc
mov
insb
incl
mov
out
ffree
xchg
movsl
jns
xchg
mov
stc
in
xchg
adc
xchg
movsb
ss
xchg
cmp
arpl
sarb
fnstsw
adc
dec
xchg
xor
sub
jge
inc
push
xchg
das
rol
aas
mov
fimuls
mov
xor
push
mov
inc
push
outsl
and
cli
je
in
vmwrite
sbb
push
add
pop
mov
push
add
aam
dec
push
adc
jp
je
xchg
iret
inc
xchg
jg
mov
ds
mov
dec
ret
pop
inc
insl
cmc
test
pushw
cmpsb
mov
test
loope
cs
dec
pop
sbb
and
lret
dec
pushf
out
push
gs
stos
sub
popf
mov
cmpsl
mulps
cmpsl
xchg
xor
aas
movsb
fsubrl
jae
pop
cmp
mov
xor
nopl
jb
lea
or
sarl
mov
pop
push
and
jb
mov
jmp
stc
mov
xchg
popa
add
jnp
cltd
aaa
movsb
jne
mov
add
dec
subl
adc
leave
mov
sbbl
mov
daa
dec
or
push
fsubl
push
adc
imul
enter
pop
jo
push
or
jmp
jae
pop
in
psllw
xchg
jecxz
add
jae
into
sub
cltd
add
pusha
loopne
insb
xchg
mov
xchg
or
clc
movsb
ss
mov
cmp
fucomip
cld
cmpl
scas
mov
push
jb
lret
aad
push
dec
mov
sub
sbb
in
sti
push
lods
jne
sub
add
shlb
push
cmp
mov
add
sbb
negl
add
mov
andl
cmp
aaa
add
js
cmp
daa
add
xor
sub
ljmp
inc
rorb
sbbb
adc
aas
lret
inc
mov
or
test
rcl
pop
inc
jg
test
repnz
inc
jns
sub
mov
cmpsl
out
mov
push
aam
sub
int3
push
cmp
xchg
outsl
outsl
push
mov
sub
outsb
jnp
push
sub
lods
jae
and
push
lods
js
sahf
pop
fs
push
jno
in
sub
mov
sbb
sub
js
push
pop
imul
adc
popf
xchg
mov
fs
nop
loopne
cmc
pop
roll
cld
jl
push
push
push
sbb
and
jnp
faddp
inc
pop
das
push
xlat
inc
dec
outsl
adc
pop
cmp
orl
outsl
jae
subb
and
sub
hlt
dec
or
add
fcomi
jg
test
mov
jp
jg
push
mov
inc
outsb
addr16
sarl
into
roll
repz
push
lock
pusha
jae
fiaddl
cmp
insl
cmp
iret
cmpsb
cmp
rolw
paddw
movsb
mov
mov
rolb
dec
lods
and
push
push
sarb
pop
sbb
loopne
loopne
hlt
xlat
mov
mov
mov
cmp
jo
sub
pop
sti
mov
test
pushf
dec
rorb
push
negl
int3
ret
jns
shll
sahf
movsl
dec
mov
cmpsb
popa
push
push
popf
jmp
xchg
loop
loop
das
nop
data16
xchg
fwait
mov
mov
mov
jns
cmpsb
stos
in
and
mov
dec
sbbb
popa
loopne
mov
mov
pushf
push
int
jne
aaa
mov
sub
xor
mov
and
sub
in
gs
inc
in
jno
lahf
out
ja
insb
inc
dec
sbb
movsb
imul
jmp
divl
idivb
pop
push
adc
fmul
push
lahf
fistpl
sub
and
lahf
test
iret
mov
xlat
lock
mov
adc
loop
ss
ss
scas
jp
push
dec
dec
mov
pop
sbb
push
aas
das
test
mov
out
stos
cmp
xchg
xor
bound
mov
dec
fsts
popl
sbb
mov
sbb
push
xchg
cmp
imul
xor
xchg
cmpsl
fdivr
ja
xchg
mov
in
or
flds
out
mov
xor
dec
lret
test
mov
and
repz
dec
or
stc
jmp
cmp
add
jnp
movsl
mov
cmp
xor
lahf
lret
mov
xor
xchg
xchg
fwait
xchg
jno
add
stos
dec
outsb
adc
or
jle
pusha
pop
xchg
cmp
jno
ss
ficomps
incl
js
hlt
std
cmp
push
mov
add
mov
sub
pop
loopne
enter
mov
mov
adc
in
pop
out
xorl
xchg
or
loopne
sbb
or
in
push
push
mov
cmpsl
cmc
jg
lods
cwtl
outsb
pop
incl
sub
mov
cmp
push
fisubs
sbb
jge
movsb
das
sti
shlb
dec
popa
mov
test
xchg
xor
mov
jg
push
add
jmp
mov
xchg
fldl
popa
mov
xor
mov
dec
inc
xor
mov
test
pop
jne
jmp
arpl
xor
jnp
pop
das
ret
jbe
daa
rcl
sbb
imul
pop
jne
cmp
int3
push
fdivrp
sti
sbb
cmp
xchg
addr16
into
pushf
jge
push
mov
leave
ror
ja
xor
lcall
cmp
in
mov
mov
cmc
mov
mov
dec
bound
jl
xchg
and
mov
add
fwait
shl
or
movsl
mov
in
mov
lcall
mov
add
lods
pop
adc
jle
mov
push
ljmp
push
fiaddl
jae
ret
push
lds
adc
xchg
inc
cmp
add
insb
icebp
and
nop
sub
test
movsb
out
fimull
sti
cmp
outsl
cmpsl
and
pop
mov
repz
bnd
lods
jle
xor
cmp
adc
xor
and
mov
in
jne
je
pop
mov
cmc
adc
js
jp
mov
mov
inc
loope
jg
or
jb
sbb
subl
insb
xchg
mov
pop
lret
inc
and
les
jle
aam
or
pop
arpl
sar
pop
ret
and
loop
pop
inc
jb
shlb
inc
sbb
vpcmov
mov
test
imull
sahf
fidivs
mov
in
mov
out
or
loopne
add
pop
push
push
cmp
xchg
and
and
xchg
mov
test
rcll
call
xchg
lcall
je
les
test
pop
data16
fwait
xchg
jbe
fwait
lret
jl
repnz
scas
fdivrs
scas
inc
lods
test
mov
mov
loopne
sbb
pop
xor
and
mov
jnp
add
and
ds
stos
add
add
in
pop
mov
popa
mov
insb
dec
xlat
or
cmp
adc
xor
fldenv
pop
pop
mov
jo
lcall
jl
dec
cmp
xchg
sub
add
mov
imul
sbb
movl
scas
add
cs
mov
jg
jge
sub
pop
test
cmp
sbb
sti
cmc
lea
std
aas
nop
fcomip
mov
adc
outsb
xor
pushf
inc
xor
sbb
cmp
lcall
scas
cli
repz
daa
dec
fdivrl
and
ficoml
push
and
jp
loope
inc
inc
or
or
lods
or
movsl
out
fstpl
ds
inc
jo
inc
orl
or
inc
aaa
xchg
mov
lock
ficomps
xchg
shr
or
cmpsl
jae
mov
fisubs
imul
push
jno
outsb
cmpsb
sbb
arpl
or
cmp
lock
xchg
sahf
xchg
mov
repnz
sahf
mov
in
mov
mov
inc
lods
fisubrs
xor
inc
adc
mov
pop
mov
or
mov
fistpll
jo
push
or
in
pop
sbb
ja
pop
ret
mov
dec
iret
add
cmc
sbb
cmpsb
xor
cmpsb
loopne
push
inc
xchg
dec
sbb
orb
push
fwait
shlb
sub
sub
in
sbb
xchg
enter
mov
sub
xor
inc
or
inc
adc
js
fucomp
xlat
lea
aas
sbbb
mov
or
in
inc
fdivl
xor
in
jns
cli
mov
cli
adc
sahf
addl
cmpsb
leave
add
sbb
mov
adc
std
jecxz
add
push
out
or
inc
stos
stc
push
add
mov
xchg
pop
lcall
xor
scas
shl
push
test
stos
mov
insb
stc
or
jb
mov
pop
je
in
sbbb
clc
icebp
hlt
and
das
shr
jge
inc
out
mov
cwtl
leave
shlb
push
jbe
rcrl
lcall
lret
jge
test
fmul
mov
mov
mov
daa
icebp
and
push
xchg
xor
sbb
dec
clc
mov
ret
push
out
testb
adc
hlt
and
jnp
lock
xlat
adc
add
inc
stc
das
sti
mov
lds
mov
add
sbb
insl
lcall
inc
fwait
cmp
bswap
pop
imul
mov
daa
lret
lea
mov
aad
sub
sbb
xlat
bound
jno
jl
in
jmp
mov
sbb
mov
and
fs
aad
sarb
cmp
pop
jne
shl
pop
arpl
xor
jg
sbb
or
test
aam
or
xor
cld
insl
jo
loopw
test
mov
pop
rolb
adc
adc
dec
and
cmpsl
xor
fsubs
lret
arpl
sub
cmpsl
ret
sub
push
cmp
insb
lods
xor
jae
mov
nop
cmp
push
mov
mov
jne
inc
pop
fadd
ret
jge
in
cld
cmp
in
push
scas
test
mov
pusha
sbb
cmc
add
jmp
enter
mov
cmc
xor
repnz
xchg
fcmove
scas
leave
and
jg
jae
clc
outsb
clc
fdivs
scas
shll
cmp
ss
mov
daa
in
shrl
clc
sbb
jge
cld
cmp
cmp
fdivrl
jo
jmp
subb
xlat
lret
lcall
addb
into
out
jns
xor
lcall
push
enter
sbb
cmp
je
jg
icebp
sbb
mov
push
jge
pop
push
cld
and
pop
jnp
mov
pop
inc
jb
or
in
xor
bound
pop
adcb
divb
les
imul
aas
sub
sbb
mov
lcall
cmpsb
in
push
sub
push
dec
out
sbbl
aas
xor
sub
repz
cmp
inc
imul
fucomp
sub
lret
inc
imull
xor
cmp
shrl
or
aad
xor
jae
pop
insb
int3
sub
mov
jae
inc
addl
mov
push
out
push
lods
sub
push
inc
mov
dec
xchg
pop
insb
xor
popa
fwait
cmp
sub
out
xchg
dec
sti
ljmp
and
xchg
insl
clc
cmpsb
popf
mov
sbb
and
dec
in
push
icebp
inc
or
mov
out
xchg
repz
bound
mov
leave
jmp
pop
cmp
test
mov
subl
jmp
ficoms
mov
ficomps
pop
test
add
xor
les
mov
push
adc
pop
add
scas
test
xor
hlt
cmc
mov
mov
ret
dec
ret
add
add
insl
jmp
pop
nop
scas
inc
lds
movsb
xchg
cld
sub
test
dec
in
and
fcmovnu
dec
push
enter
js
mov
jl
jp
xorb
jae
dec
cmp
mov
out
dec
mov
std
xor
bound
out
cmp
inc
xor
cmpl
sbb
mov
pop
out
pop
xlat
adc
lcall
fmuls
data16
shlb
sbb
jp
clc
sbb
sub
xchg
movsb
mov
xchg
lods
pop
sub
fadd
fs
jb
mov
and
mov
sbb
orb
cld
imul
wrmsr
int
pop
jnp
or
sub
sbb
push
pop
dec
fs
cwtl
cmp
fbstp
fdivrp
nop
mov
xchg
ds
pusha
cmp
xorl
xor
stos
stos
dec
and
add
movsl
dec
fdivs
push
inc
fwait
shl
sarb
sbb
dec
jbe
fistpll
jp
adcl
sti
xchg
cmp
xchg
ret
mov
mov
pop
xchg
jmp
rcrb
shl
out
xor
and
xor
inc
and
xchg
xor
or
jecxz
pop
and
lods
and
jns
mov
icebp
call
lods
test
arpl
xchg
pop
lea
leave
lcall
jl
in
or
loope
outsl
fsubs
pop
or
loope
xchg
xchg
mov
add
movsl
jle
cmp
pusha
aam
xchg
nop
mov
sub
test
inc
jno
mov
movsb
faddl
inc
jns
inc
test
sbb
pop
pushf
cs
and
mov
cltd
lods
movsl
rcll
out
loopne
jmp
ja
xor
inc
inc
jl
popf
mov
rcr
mov
inc
cmpsl
add
icebp
and
lds
sub
cli
push
inc
lea
add
mov
sbb
mov
les
inc
iret
or
ret
add
int3
inc
jae
hlt
sub
or
mov
xor
popf
dec
dec
test
test
adcl
and
jo
loope
dec
test
xor
add
push
add
in
cmp
popa
xor
sub
test
cld
add
inc
sti
dec
push
lret
mov
push
aad
loope
inc
sbb
xlat
or
iret
movsb
in
out
xorl
push
and
ret
les
adc
or
mov
cli
pushf
ja
pop
repz
add
add
adc
loop
imulb
pop
pop
sbbb
lret
bound
call
loop
in
ljmp
xchg
push
mov
mov
inc
imul
out
hlt
jl
and
cli
or
xor
gs
test
push
jno
jge
mov
mov
in
fldt
out
shrb
push
jne
insl
aas
and
xchg
jb
nop
adc
lret
or
clc
jecxz
jno
mov
jle
or
cmc
mov
sub
popa
imul
xchg
inc
rcl
xchg
rcrl
dec
mov
imul
movsb
jb
hlt
ljmp
arpl
adc
pop
outsb
jecxz
subl
dec
pusha
dec
sbb
dec
mov
mov
frstor
xlat
subb
mov
pop
andb
mov
pop
mov
insl
push
or
mov
sbb
ds
dec
adc
fldl
and
pop
ss
mov
mov
sbb
mov
aam
push
adc
push
sub
pop
pop
push
in
mov
stc
cmpsb
js
lods
inc
stos
mov
dec
pop
push
mov
or
and
mov
or
push
ljmp
sbb
out
cmp
xchg
lods
pop
pop
not
repz
pop
fldcw
data16
call
lret
mov
out
aad
mov
movsl
inc
adc
and
arpl
sbb
pop
pop
ficoml
add
and
lds
inc
mov
cmp
mov
mov
in
repnz
in
sti
cmp
popf
and
jecxz
or
push
test
adc
notl
push
dec
mov
jmp
scas
pusha
mov
sub
rcr
inc
and
cld
dec
inc
adc
pop
mov
sub
cmp
mov
xor
clc
xor
lret
dec
mov
xchg
or
cli
movsl
mov
in
xchg
pop
push
into
push
repz
psubw
mov
inc
push
lahf
inc
fs
lods
int3
aaa
push
popa
aas
pop
cmp
pop
or
icebp
push
repnz
jno
sub
pop
inc
dec
data16
jbe
lods
push
push
jp
imul
sub
jmp
in
insl
sub
mov
jns
out
ret
jecxz
jg
or
insl
sub
outsb
ret
push
stc
sbb
or
push
stc
imul
outsl
stc
add
out
mov
and
mov
popa
mov
repnz
int
out
mov
inc
or
push
cmp
std
sarl
adcb
ja
adc
sarb
es
add
add
outsl
stc
xchg
mov
aam
add
in
mull
jmp
pcmpgtb
enter
fxch
sbb
std
push
enter
xor
ds
mov
in
xchg
jmp
xor
xor
leave
sub
sbb
sub
ds
xchg
jl
inc
push
jo
xchg
out
xor
imul
arpl
pop
xor
aam
stos
loop
in
adc
dec
jne
jb
push
mov
arpl
inc
repnz
lahf
inc
hlt
pop
xchg
sahf
cltd
jnp
mov
mov
xor
inc
sbb
in
fs
pop
cmpsb
jo
mov
loope
add
sbb
js
jg
mov
and
sub
cmp
dec
int3
test
xchg
into
push
lea
pop
sbb
call
data16
int
test
outsl
dec
mov
mov
insb
xchg
js
fmul
scas
add
fstpl
loope
movsb
rol
test
xor
and
test
cmp
popf
xchg
sub
jb
add
sti
sub
or
and
sbb
mov
in
fisubrs
in
sbb
aad
add
jae
mov
inc
sub
dec
int
loopne
push
mov
test
fsubrp
mov
nop
mov
popa
fildl
outsb
cli
mov
mov
pop
mov
mov
cltd
and
popa
dec
into
stos
pop
inc
cmpsl
lds
sbb
lods
cmp
adc
push
popa
das
sub
into
mov
jp
pop
aas
ss
js
dec
pop
dec
outsb
add
dec
popa
mov
out
outsb
mov
add
imul
cmp
fsts
sbb
pop
sbb
dec
mov
push
cmc
orb
fcmovnbe
push
div
sbb
xlat
repz
sub
inc
flds
inc
mov
gs
je
insl
test
mov
dec
push
rclb
mov
pop
int3
cmp
pop
in
mov
ds
push
mov
cli
cmc
push
jo
imull
pop
mov
aam
loopne
idivl
repnz
adc
xchg
xchg
aaa
xor
ss
out
lods
pop
shrb
lea
fiaddl
shlb
shlb
pushf
cmc
mov
mov
push
lock
lahf
pop
jns
pop
or
adc
mov
shlb
mov
mov
aaa
mov
stc
imul
std
stos
mov
cmp
arpl
gs
mov
mov
mov
sbb
push
jp
mov
test
bound
rcrl
clc
sbb
repnz
cmp
dec
enter
jp
stos
movsl
xor
decl
and
push
mov
aam
mov
pop
cmpl
add
mov
enter
or
or
push
push
out
push
pop
add
add
add
mov
add
cmp
rcll
dec
xchg
scas
inc
jmp
pop
call
mov
sbb
test
es
xchg
pinsrw
hlt
aas
movsl
rol
gs
in
and
jg
imul
test
push
pop
add
push
ret
subl
push
jne
cmp
push
iret
arpl
mov
or
xchg
mov
pop
js
je
sti
xchg
lahf
aaa
mov
mov
mov
mov
pop
xchg
mov
mov
and
ds
adc
daa
cmp
sahf
shl
add
pushf
rcll
aaa
rorb
loopne
arpl
jp
add
movsb
pop
cmp
clc
inc
or
minps
pop
and
jecxz
inc
shlb
jp
lds
and
int
sbb
repz
test
ss
bound
cld
jl
mov
mov
push
add
lods
icebp
dec
mov
scas
shlb
cmp
jne
adc
je
cmp
push
cmc
int
into
mov
rolb
imul
stc
jecxz
inc
fcoml
out
adc
mov
int3
inc
mov
mov
enter
fstl
lcall
sbb
mov
jns
sbb
dec
pushf
mov
jge
cmp
cmp
test
ja
push
aas
ret
mov
jbe
int3
mov
data16
jle
push
pop
and
jmp
andb
movsl
jecxz
adc
pop
cli
popa
repnz
mulb
pop
jp
repz
dec
and
out
mov
notl
mov
and
adc
jecxz
jge
sbb
ret
mov
xchg
sbb
jge
pop
dec
icebp
cmpsl
cli
inc
leave
in
sub
mov
jbe
sahf
jecxz
popa
iret
adc
mov
inc
emms
fcomip
int3
xchg
ljmp
aas
jns
cmc
ljmp
add
cmp
add
dec
dec
adc
lret
cmpl
lcall
jmp
xor
fwait
repz
out
sarb
dec
call
test
test
js
cwtl
jne
sub
add
movb
mov
comiss
cmc
rolb
mov
mov
cli
mov
clc
mov
sbb
orb
loopne
sub
cmpb
sub
mov
dec
xchg
cs
push
inc
mov
mov
hlt
push
mov
subb
jecxz
push
sbb
or
stos
add
scas
and
imull
into
fcmovbe
loope
xor
push
adc
pop
dec
shrl
push
fldenv
movsb
add
fidivrl
por
testl
pop
cmp
jne
add
dec
jecxz
and
push
or
lcall
push
movb
add
sub
jo
enter
ja
test
xorb
cs
or
jnp
dec
stos
and
inc
jge
ljmp
les
out
push
jns
jno
aaa
sahf
imul
inc
insb
mov
lcall
js
cmp
jb
dec
mov
outsb
mov
fdivl
push
mov
sbb
divb
mov
xor
mov
sub
insl
dec
andb
jnp
test
push
inc
jge
xchg
cmp
movsl
pop
in
mov
dec
dec
push
rcrl
dec
dec
imul
ja,pn
mov
call
pop
in
divl
shlb
sub
sub
mov
into
pop
xor
push
pop
and
addr16
inc
loopne
dec
jle
cli
out
xor
gs
add
test
xchg
test
inc
popf
insb
sbb
xchg
xchg
mov
dec
jne
fistpl
stos
mov
aam
sti
xchg
mov
stos
push
sub
ret
jge
jo
push
mov
lods
mov
ljmp
arpl
fdivrs
add
cmp
addl
xchg
mov
inc
inc
mov
push
idivb
scas
loop
pop
scas
push
call
xchg
push
mov
repnz
nop
adc
movsl
mov
or
push
lds
jbe
adc
imul
or
fistpl
and
adc
pop
test
stc
rcll
cwtl
push
rorb
repz
lret
xchg
addb
mov
sbb
test
or
pushf
loope
jg
rclb
loope
xchg
dec
mov
cld
imul
add
sub
popa
in
cmpsl
push
jmp
nop
push
lret
pusha
in
movsl
movsl
ja
dec
pop
es
jne
xor
pop
sbb
fwait
pop
out
xchg
sbb
xchg
dec
xchg
mov
das
jmp
push
lahf
hlt
test
int3
jo
out
xchg
and
fwait
lods
inc
loopne
sahf
cwtl
dec
jecxz
movsl
dec
cli
cs
cmpsb
lcall
pop
or
push
sub
or
jo
lret
repz
mov
popf
jnp
inc
xchg
push
jl
data16
sub
sbb
jo
btc
add
adc
mov
and
xor
movups
pop
cmp
std
push
push
add
inc
pop
inc
data16
mov
jb
stc
pop
into
jnp
jbe
lahf
les
mov
push
lds
ds
adc
cmp
adc
mov
das
pop
xor
int
out
push
fisttpl
mov
fimuls
outsl
push
sti
jmp
lea
mov
xor
andb
cmp
mov
xchg
in
loope
sbb
cli
cmpsl
xor
in
mov
jo
lock
loop
addr16
xchg
xchg
lds
mov
pusha
idivb
push
jae
adc
mov
mov
sub
or
loop
mov
stc
mov
ret
add
jecxz
shlb
imul
sti
add
jns
das
aad
jne
jl
cmp
pop
movsl
jne
mov
adc
fwait
fs
adc
hlt
mov
push
dec
jl
mov
movsl
gs
ds
jp
adc
or
sbb
pop
test
inc
out
loop
mov
jns
js
movsl
pop
lods
in
cmp
push
dec
lret
jb
mov
push
cmp
push
sub
scas
in
mov
jg
dec
test
mov
xchg
rcrl
mov
jmp
sbb
sbb
test
cli
mov
enter
dec
cmpsb
push
mov
fstl
loope
jo
mov
xor
adc
adcl
and
jp
inc
shr
sub
pop
dec
in
sbb
inc
ret
lods
or
ljmp
cmp
int
mov
repnz
inc
xor
int3
add
js
mov
idivl
mov
sbb
dec
jp
pop
in
frstor
out
xor
ljmp
mov
les
cli
outsl
or
int3
mov
xchg
add
les
add
ljmp
mov
and
jp
and
push
pushf
es
push
mulb
fdiv
sbb
pop
test
jbe
loopne
cmp
popa
ds
xchg
sbb
sub
popf
push
xor
push
lock
fidivrl
or
cmp
pop
in
xchg
and
adc
mov
adc
mov
call
orb
pusha
into
mov
pusha
lods
xor
lret
inc
pop
mov
aad
test
rol
pxor
pop
lret
mov
call
ds
scas
xchg
inc
insl
mov
cmpsl
fwait
sub
push
cmpsb
dec
jp
popa
pop
jg
push
jge
xor
test
mov
sahf
testb
icebp
cmp
dec
clc
daa
mull
fstps
loop
repnz
mov
ret
es
mov
mov
cmp
jg
popf
bound
xchg
mov
xchg
lret
dec
mov
mov
mov
or
in
jecxz
sbb
fstp
daa
aaa
test
out
sub
testb
outsl
adc
das
repz
adc
rorb
call
cwtl
movsb
fwait
cmc
nop
mov
and
jo
mov
dec
aad
pop
outsl
or
ret
inc
stos
pop
xor
ss
out
insl
pushf
outsl
out
sbb
icebp
mov
ret
mov
pop
xchg
iret
inc
xchg
sbb
push
rolb
inc
and
je
add
pushf
inc
decb
cli
xchg
repz
mov
add
lea
jl
adc
insb
rcl
movsl
mov
out
rclb
outsb
mov
inc
cmp
sbb
xor
repnz
cmc
sbb
les
mov
pushf
cld
orl
call
or
in
jle,pt
and
ret
xor
sbb
xor
sete
mov
repnz
xchg
rcrl
add
cltd
and
inc
test
mov
xor
mov
repz
jnp
cmc
shll
dec
xchg
dec
xor
jmp
idivl
subl
and
cwtl
lea
pushf
fdivl
pop
jge
lods
xor
inc
xchg
les
mov
stos
mov
jg
test
cmp
divb
rcrb
sahf
scas
jns
sbb
shrb
fs
int3
mul
push
inc
incb
pop
and
lret
sti
mov
lret
and
mov
rorb
lahf
sarl
mov
and
xchg
and
das
mov
cmp
pop
inc
out
cmpsl
cmp
pop
data16
mov
jecxz
pop
sbb
pop
stc
xor
mov
call
push
mov
jbe
cmc
test
test
fsubs
ret
and
test
mov
out
inc
adc
and
sub
ss
bound
shrb
outsl
mov
jecxz
inc
ret
dec
cltd
movsb
and
or
dec
mov
xchg
add
aam
xor
dec
push
test
push
pop
stos
jb
sti
sub
movsl
inc
call
adc
cmpsl
cmpb
test
fisttps
xchg
out
cmp
sub
inc
xor
cmp
add
fstpl
btr
push
dec
out
xlat
push
jno
sarl
inc
and
xchg
mov
mov
or
in
mov
adc
mov
xchg
out
jp
lret
stos
iret
lock
iret
fdivrl
js
xchg
cld
mov
or
lcall
loopne
int3
pop
psubw
lahf
fstpl
or
out
push
push
shll
mov
adc
push
out
das
inc
movsl
jnp
lock
mov
fs
cld
lret
loop
lock
xchg
fadd
gs
sub
cmc
enter
sbb
fstpt
xrelease
shlb
int3
adcl
and
adc
popf
imul
leave
out
xchg
pop
xor
fsubrl
mov
mov
sub
and
into
scas
daa
inc
xchg
fwait
call
fwait
lock
test
test
push
mov
jle
and
mov
sti
lahf
call
push
sbb
in
cmp
sarb
sti
fildll
push
mov
int
push
shlb
rcrl
in
mov
shlb
adc
call
add
mov
pop
push
fcomip
movsb
mov
test
jp
dec
adc
adc
xchg
inc
testb
lret
cmp
rclb
xchg
bswap
int3
jbe
fadds
mov
push
lock
xlat
rcl
adc
push
je
ljmp
xchg
xor
lock
movsb
call
bound
cs
push
das
adc
shll
push
sti
sahf
sbb
sub
jno
in
sbbl
sub
and
xor
loopne
shll
int3
xlat
cmp
xchg
mov
rcrb
push
ret
lahf
xor
jbe
cmp
les
outsl
addps
into
outsl
adc
mov
push
bnd
dec
out
adc
add
iret
xchg
cld
bound
mov
jns
xchg
subb
aaa
mov
and
xor
jb
pop
and
fcomip
popa
loop
out
jne
push
repz
inc
icebp
shrl
ss
lock
adc
push
adcb
aam
dec
sbb
addr16
pop
xorb
jecxz
notb
pop
enter
xor
pop
shr
xchg
mov
and
inc
mov
stos
pop
inc
fwait
xchg
cld
jl
dec
outsb
je
bound
cmp
pop
js
or
adc
pop
cmp
movsb
dec
inc
and
sti
pushf
jle
lea
mov
in
add
xorb
cmp
or
lcall
jnp
ja
cmpsl
fbld
xchg
testb
das
mov
pop
arpl
packssdw
dec
pop
cld
mov
insl
dec
xor
sti
aad
shrb
sub
out
or
ror
xor
lods
sti
inc
scas
lods
xchg
les
or
fistpl
sti
or
es
add
hlt
mov
or
imul
dec
adc
cmp
sub
mov
les
fsubrs
sarl
inc
mov
jae
xor
lret
orl
dec
test
call
mov
jecxz
xchg
inc
mov
dec
lods
adc
filds
bound
dec
insl
mov
add
out
in
shlb
mov
jae
dec
push
mov
sbb
mov
fs
in
push
imul
cmpsb
cmpsb
push
jmp
cmp
sti
out
repnz
repnz
mov
bound
xor
shlb
das
pop
push
addr16
add
jge
stc
xchg
fpatan
push
je
mov
cmc
mov
mov
mov
lret
clc
xchg
and
ja
dec
mov
lods
cmp
adcb
or
in
jns
es
adc
cmc
nop
jecxz
inc
cmp
dec
jae
repnz
pop
gs
scas
sti
test
call
inc
mov
or
jle
out
xchg
or
outsb
add
mov
adc
mov
xchg
push
das
int3
popa
ds
sarb
outsl
movsb
cmp
xor
dec
cld
push
insl
push
imulb
sarb
sarb
push
jbe
dec
stc
inc
mov
aaa
fidivrl
mov
out
mov
adc
mov
repnz
mov
push
xor
pusha
mov
cs
lret
mov
xchg
es
pop
call
jle
pop
lret
jno
fcmovnb
daa
mov
lahf
out
or
mov
xor
push
dec
aas
out
mov
pop
push
arpl
mov
xorb
shlb
jo
sahf
or
jp
sahf
add
fmuls
lret
outsb
sbb
pushf
add
pop
cmp
mov
inc
imul
jecxz
in
pop
adc
add
push
notb
sub
and
lods
push
dec
inc
mov
sti
pop
sub
dec
sub
mov
dec
pop
shlb
fidivl
add
jge
pop
repz
sbb
xor
mov
inc
cmp
xchg
sbb
in
mov
push
mov
popl
fidivrs
jns
enter
sahf
sub
std
mul
sbb
xchg
xchg
dec
and
jge
ja
or
inc
and
cmp
inc
xchg
fidivl
and
mov
cmp
testl
and
je
testb
mov
sub
mov
sbb
dec
xlat
in
mov
jecxz
jle
jno
cltd
lods
cmp
icebp
cli
in
in
sub
sub
mov
add
out
inc
pop
lahf
repnz
sub
aaa
enter
sub
xor
testb
jecxz
arpl
mov
stos
nop
pop
rcl
add
push
mov
sub
inc
mov
aas
dec
lahf
jnp
cmp
cmp
cmp
movsb
mov
fmul
or
inc
adc
mov
jbe
test
xlat
sbb
shl
scas
notb
in
xchg
lods
insl
test
loopne
push
mull
dec
shld
xor
fisubs
inc
dec
popa
lock
scas
in
les
dec
mov
jle
mov
jp
jbe
insb
inc
jno
aam
lods
add
shrl
pusha
dec
sbb
ret
xchg
pop
mov
out
insb
clc
call
add
movsl
add
mov
je
lds
dec
mov
or
nop
das
inc
push
sbb
cmc
pusha
dec
ja
lods
in
test
xor
push
dec
xchg
pop
dec
jns
insb
mov
lret
mov
add
loope
andnps
cmp
add
xlat
cmc
pop
add
push
shl
xor
cltd
sbb
pop
icebp
cmpsb
test
lcall
jge
shl
inc
fwait
sahf
enter
jns
jnp
push
jecxz
rcll
push
outsl
nop
sub
push
or
mov
loop
outsb
mov
sub
push
out
test
mov
sahf
inc
iret
cmp
loop
xchg
pop
call
cli
jle
pop
mov
out
jnp
cmpsl
mov
xor
add
cmp
add
mov
mov
pop
jmp
and
setno
incb
sbb
sbb
xor
add
repnz
aad
arpl
inc
sbb
jne
or
divb
sbb
mov
mov
add
push
ja
and
pusha
les
cmpsl
orb
addl
jne
cmp
mov
inc
fsubp
aas
pop
or
inc
sti
or
inc
imul
clc
fisubs
in
xchg
dec
add
dec
arpl
pushf
sbbl
aad
or
push
cwtl
inc
fildll
pop
jecxz
daa
pop
daa
pop
add
dec
or
loopne
jae
pop
mov
mov
or
mulb
sub
dec
jns
push
int3
jbe
repz
repnz
mov
push
pop
inc
jns
add
fsub
mov
loope
fwait
pop
shrl
insl
loop
bound
xchg
leave
or
pop
leave
mov
cmp
mov
dec
stos
imull
repnz
lret
and
scas
cmp
neg
xchg
push
test
or
lds
addb
jo
das
adc
or
je
mov
scas
loope
fwait
stc
jmp
mov
add
mov
inc
mov
pop
xor
outsl
mov
mov
cmpsl
cmc
daa
lahf
loopne
pushf
mov
jge
sbb
lods
mov
push
sbb
sbb
iret
in
shlb
xor
and
push
or
shr
jle
pushf
push
dec
iret
inc
push
test
sbb
mov
push
add
clc
mov
mov
jle
pop
imul
xlat
add
sti
leave
aad
mov
out
filds
shlb
or
sarl
mov
xchg
lds
int3
jno
sahf
or
lret
and
xor
and
cmp
adc
push
arpl
push
mov
mov
shufps
incb
pop
add
mov
sbb
outsb
add
sbb
daa
fmulp
xor
rorb
sub
mov
mov
mov
add
movsl
gs
push
inc
ds
imul
cmpsb
cmp
loopne
push
pushf
fdivl
lds
xchg
jg
nop
cmp
out
pop
sub
jle
pop
xor
rcll
xchg
xchg
inc
outsl
mov
mov
or
cmp
rcl
xchg
pop
adc
push
into
fdivl
pop
mov
and
outsl
aad
xchg
shlb
dec
shrb
cld
cmp
test
jmp
pusha
fistps
movsb
test
dec
jbe
bound
aam
pop
imul
cmc
inc
cmp
dec
dec
lahf
in
lds
in
cmpsl
cmp
jo
lock
addr16
fidivs
js
and
push
inc
sub
sahf
repz
fstp
rcl
xor
rclb
or
das
sub
ds
stos
cmp
xchg
rcrb
movsb
or
inc
rclb
jnp
jg
mov
lds
stos
inc
xchg
mov
out
sahf
push
inc
lret
lret
push
or
pop
movsb
mov
mov
mov
sti
and
pop
pop
sbb
add
mov
sbb
or
mov
and
xrelease
ret
pop
cmp
loope
divb
iret
mov
decb
pop
xchg
cmc
pop
cwtd
add
dec
fs
fs
mov
pop
cmpsb
sbb
sarl
pop
pop
mov
mov
repz
mov
adc
loope
test
sti
in
xchg
sahf
sbb
out
inc
jg
xor
cmp
mov
data16
push
pop
sbb
nop
mov
inc
or
push
mov
mov
es
test
mov
dec
ror
fdivrl
or
push
mov
push
rolb
sbb
fidivl
shl
xor
ljmp
aad
gs
cmp
push
arpl
jnp
lock
loopne
cmpsl
stos
dec
mov
mov
dec
mov
cmp
mov
jmp
cmp
sbb
aam
es
js
iret
dec
adc
repnz
popa
lret
iret
pop
adc
jmp
pop
and
leave
mov
je
xchg
pop
lcall
stos
stos
jmp
dec
loop
hlt
sbbl
pushf
push
dec
or
push
pop
cmpsb
pop
icebp
jmp
adc
pop
rclb
movsb
rcl
lds
sub
fsts
pop
xchg
sbb
dec
ret
mov
test
or
je
adcl
pop
mov
popf
cmpsb
movsl
das
das
jg
ds
mov
xor
push
xchg
pop
cwtl
add
pushf
andb
movsl
nop
push
loope
cs
das
pop
mov
xor
sub
dec
imul
jl
xor
sbb
cld
ret
add
pop
jb
cmc
push
hlt
cmpsl
aam
mov
inc
mov
sub
sti
and
sbb
mov
cld
push
je
jo
repnz
or
adc
adc
push
jmp
repnz
loop
add
push
xchg
data16
sahf
sbb
imul
scas
xlat
push
dec
xor
sti
popl
mov
iret
sub
xor
jno
hlt
cwtl
icebp
mov
adc
std
hlt
lahf
pop
pop
mov
mov
dec
cmp
xor
mov
pop
mov
inc
adc
out
out
movsl
aad
xchg
or
out
push
mov
jae
inc
sbb
mov
jg
in
jge
jo
jne
cld
sub
leave
or
adc
dec
sub
mov
shll
mov
cltd
fildll
jecxz
dec
leave
adc
adc
sahf
xor
int3
add
popa
in
iret
sub
sbb
cmp
test
pop
popa
mov
icebp
sub
iret
fwait
sub
dec
jg
cmp
inc
ja
lds
fwait
jns
testb
ljmp
adc
ds
aaa
add
xchg
adc
and
sarb
xchg
fadds
pop
iret
mov
sbb
inc
sti
jl
pushf
ja
sbb
out
jne
jns
cli
jne
loop
jbe
lods
lds
lret
fcmovu
ffree
aad
movsl
mov
ret
push
loope
out
xchg
mov
and
mov
scas
mov
xchg
test
inc
addl
je
int3
loop
inc
out
adc
pop
insl
and
cmp
push
fwait
daa
orb
mov
repnz
adc
repz
aas
dec
mov
pop
push
and
xor
fstpt
and
mov
push
lret
dec
cmpsb
add
pop
addr16
punpcklwd
jg
push
out
ret
add
add
fbstp
sbb
fistps
addr16
fsubrp
jmp
push
mov
fisttpll
popa
fsts
xchg
cmp
int
arpl
push
or
push
popf
inc
pop
sbb
loopne
push
sar
jnp
sub
sbb
stc
inc
jp
cltd
mov
xchg
pop
lret
dec
fcoms
push
cmpsb
cmp
xchg
outsl
test
mov
repz
cmpsl
mov
xor
sub
in
popa
lcall
cwtl
imull
inc
cmpb
lods
aam
test
in
insb
addr16
aas
mov
inc
pop
cmp
out
and
mov
sub
stos
popf
push
js
mov
call
out
dec
fwait
arpl
xchg
lret
sbb
rorb
test
ss
sbb
lcall
pop
or
mov
sarb
adcb
les
mov
sbb
rorb
test
adc
popf
loope
pop
cmp
mov
fldenv
jle
jecxz
lock
lret
loope
add
cltd
xor
xor
mov
into
rclb
push
sub
add
or
xchg
cmp
jg
sub
add
imul
cltd
mov
xor
and
fcoml
dec
or
or
ret
xor
jae
mov
rcll
adc
or
dec
lods
mov
mov
jl
mov
aas
push
sahf
leave
jnp
mov
jae
out
push
stc
repz
addr16
cmp
inc
aas
pusha
clc
test
pop
push
mov
stc
add
mov
xor
add
mov
pop
iret
inc
clc
std
lret
jne
ret
adcl
jo
scas
test
in
lret
pop
jp
int3
mov
aam
dec
cmpsb
push
ret
inc
adc
fbstp
jns
mov
and
jp
inc
sub
lds
dec
add
adc
adc
push
fwait
mov
lds
or
fnsave
outsb
fsubrs
push
xor
cmp
div
in
pop
insl
sub
ljmp
imul
popf
cli
jl
pop
cltd
inc
cwtl
lret
sub
adc
aas
or
loope
test
xor
xor
scas
xchg
jp
lahf
inc
nop
fnstcw
ss
mov
mov
sbb
xor
add
jp
lds
lods
push
xchg
mov
and
sbb
shll
lcall
clc
fwait
lcall
inc
repz
fs
xchg
test
xchg
lods
push
repnz
hlt
inc
fdiv
sub
cwtl
or
mov
ror
stos
lcall
jns
cmp
imulb
xchg
pop
mov
cmovg
mov
add
cs
sbb
add
cwtl
inc
bound
sub
jns
cmp
mov
fnstenv
pop
push
push
adc
mov
imul
popa
sub
add
das
and
out
push
shrl
pop
adc
mulb
xor
inc
mov
mov
lea
adc
sti
pop
or
pop
inc
sbb
rolb
outsb
repz
imul
xchg
adc
and
nop
mov
into
pop
cmp
and
add
inc
mov
jo
in
pop
cmp
int
jle
pop
mov
in
js
cltd
lret
push
or
xchg
stos
inc
adc
pop
outsl
fsubrp
inc
stc
xchg
cmp
insb
pusha
in
sbb
inc
aas
sbb
cld
repz
dec
loopne
in
das
addl
gs
mov
ret
jb
push
decl
jns,pt
lret
xchg
out
add
arpl
jmp
ja
lret
pop
mul
pop
mov
lock
in
testl
push
mov
js
add
mov
sbb
imul
imul
jl
dec
mov
cld
enter
jp
pop
pop
inc
cmpsb
es
sti
pop
enter
adc
fiaddl
pusha
xor
jno
in
xlat
aam
mov
sahf
popa
pop
popa
cli
sbb
push
icebp
jbe
push
xchg
dec
fstp
repnz
xchg
loop
lea
out
and
push
sbb
xchg
movsl
icebp
andl
in
pop
out
add
iret
mov
icebp
pop
sbb
and
dec
iret
pop
push
ja
loope
cwtl
xor
sbb
pop
je
jl
icebp
push
cmp
out
mov
xchg
pop
pop
aam
lcall
mov
mov
adc
shll
and
daa
mov
mov
xchg
xchg
enter
rdtsc
add
adcl
lods
es
mov
xchg
fsubrl
pusha
stos
inc
and
xor
lods
push
jp
or
rorl
jb
ss
mov
sub
cmp
sbb
loopne
lods
mov
ficoml
push
inc
mov
sub
inc
push
movl
das
js
push
dec
adc
repz
popf
pop
lahf
add
dec
cs
lcall
idivl
or
out
push
daa
mov
stos
dec
and
ss
into
rcl
jl
in
pop
fbstp
push
ds
pop
lret
lcall
mov
mov
aam
jle
rcrb
inc
stos
xchg
cltd
mov
in
repz
mov
xchg
je
stc
xor
iret
mov
das
and
cmp
sbb
mov
mov
mov
into
xor
and
insl
mov
test
inc
subl
arpl
mov
cmp
ds
lock
fidivrl
jp
mov
adc
stos
test
fidivrs
test
dec
scas
jmp
pop
jb
mov
jno
mov
pop
in
mov
data16
lea
xor
rcl
pop
in
loopne
xchg
mov
pusha
inc
inc
cmpsl
imul
cmp
and
add
insb
lea
movsb
subl
jecxz
test
or
cmp
leave
jns
xor
andl
dec
bound
int3
xor
lods
add
jmp
test
and
sbb
mov
cmp
pop
mov
dec
fwait
jnp
jb
movsb
repnz
sbb
xlat
notb
xor
pop
ret
in
cmp
mov
lock
aad
and
xor
dec
stos
cmpl
mov
inc
repnz
add
jno
inc
push
pop
es
out
mov
lret
xchg
aas
mov
lcall
dec
dec
cwtl
shlb
test
pusha
movsl
out
inc
push
imul
sbb
push
call
mov
test
es
js
loopne
out
stc
mov
out
dec
sbb
aam
roll
cmp
loopne
add
pop
or
sub
pushf
ljmp
sti
outsb
mov
js
fsubrl
and
mov
and
add
pop
add
test
sbb
xchg
test
sbb
push
push
dec
mov
pop
and
pextrw
jl
mov
jmp
xchg
cmp
movsl
xchg
mov
lods
sbb
xor
in
stc
movb
push
nop
out
cltd
jmp
js
ret
sti
dec
push
lods
inc
inc
or
mov
in
xor
pop
movsl
mov
cld
jmp
mov
out
es
sub
xchg
rcr
jnp
sub
fwait
pop
ret
adc
mov
add
iret
xchg
dec
xchg
sub
mov
mov
push
xchg
mov
sbb
push
cltd
jp
mov
ss
mov
sbb
inc
lret
jmp
ret
mov
hlt
xrelease
adc
mov
or
movsb
sbb
xlat
mov
lcall
popa
loop
aaa
movsb
lods
out
inc
out
and
in
or
loope
inc
inc
mov
imulb
cli
push
pop
in
scas
xchg
and
sarb
or
mov
and
jne
pushf
cmpsb
lret
testb
aad
nop
push
scas
scas
test
aad
and
cwtl
jle
jns
aam
adc
fwait
add
lods
xor
subl
call
movsl
roll
inc
push
push
in
mov
sub
jmp
xchg
and
popa
test
xor
xlat
cmp
jnp
sub
es
lods
int3
cmp
jge
test
loopne
btc
fmul
and
data16
std
stos
ds
or
icebp
mov
mov
repnz
xor
loop
leave
mov
arpl
sub
shl
mov
mov
pop
outsb
push
and
dec
cmp
mov
pusha
adc
mov
lods
es
pop
mov
mov
add
shlb
mov
adc
mulb
jno
fadds
xor
es
pop
lea
mov
cmc
cli
push
outsl
jl
and
cwtl
pop
sahf
adc
jo
das
inc
pop
push
ret
mov
mov
mov
and
shr
and
xlat
gs
cli
fdivs
movsb
adc
mov
add
adc
mov
jns
movb
popf
lock
mov
mov
lods
dec
pop
pop
cli
dec
insl
lock
inc
fcmovu
gs
in
fsubrp
dec
mov
xchg
inc
pop
sbb
popa
add
push
and
push
jno
or
stos
sarl
scas
push
xchg
in
mov
mov
add
mov
and
loop
stc
push
out
movsl
pop
or
sahf
pushf
int3
je
in
lds
sti
call
jne
jmp
fimull
adc
gs
into
nop
adc
mov
jno
fistpl
stos
mov
or
and
inc
outsl
scas
test
sbb
xor
in
add
pop
lcall
jp
int3
push
lcall
dec
push
jns
ljmp
out
xchg
inc
loop
add
cmp
inc
mov
and
lret
testl
dec
inc
mull
pop
mov
push
xchg
and
nop
mov
aad
int3
xchg
cltd
in
das
push
rcr
les
stos
fistps
ret
movsl
mov
jmp
stc
cli
mov
cmc
sub
sahf
lret
jnp
scas
mov
pushf
popf
xchg
cmp
dec
gs
stos
pop
out
push
sbb
aad
xor
xchg
sbb
push
movsb
rorl
loope
pop
jle
mov
mov
lods
pop
adc
in
sub
and
fs
sub
push
stc
mov
mov
cmp
xchg
test
mov
jae
test
fbld
mov
mov
fs
lods
mov
lods
cmpsb
rolb
sub
push
xchg
jae
cmp
ss
push
mov
jne
mov
test
hlt
sbb
inc
push
xor
stc
jp
push
insl
scas
sub
fimuls
ret
mov
xlat
lcall
and
cmpsb
adc
stos
jnp
push
lret
dec
dec
dec
and
fsincos
lret
pop
mov
or
lea
lcall
add
enter
jle
or
lret
scas
mov
loope
bound
insb
cmpl
int3
inc
mov
test
call
call
inc
and
jl
mov
and
cmp
mov
ljmp
test
xchg
and
jno
out
call
stc
push
mov
mov
bound
je
xor
decb
xlat
xchg
movsb
jns
xor
or
sub
or
inc
ljmp
outsb
pop
and
jge
lahf
inc
cmc
mov
ret
scas
jl
das
sub
ds
paddsw
cmp
pop
sbb
mov
lret
inc
mov
js
stos
fbld
in
or
mov
call
mov
lock
fimull
mov
das
xchg
cmp
sbb
fimuls
in
xchg
push
les
ds
sbb
cmp
imul
sub
repnz
imul
lahf
inc
test
cmpb
in
inc
mov
cmpsb
data16
add
mov
iret
popf
mov
ja
add
out
ljmp
inc
pop
hlt
mov
and
into
pop
add
jne
inc
mov
insl
push
in
sub
cmp
fs
stos
outsw
jp
jmp
jl
mov
add
lahf
or
pop
dec
mov
lds
add
dec
rcl
adc
mov
sub
xchg
pusha
sub
sbbb
sub
and
xchg
pop
int3
push
pop
mov
xchg
outsl
sbb
es
jmp
popf
dec
mov
push
insb
nop
add
sub
cmp
hlt
push
ret
cmpsl
call
int
xchg
iret
xor
mov
adc
mov
cmc
push
mov
lahf
pop
push
cmc
data16
push
in
push
mov
push
xchg
push
jp
cmp
ffreep
xor
sbb
stc
sbb
xor
andl
push
ret
push
das
ja
and
scas
fildl
jge
cmp
xchg
ss
fisttps
sub
cmp
mov
jl
je
ffree
jnp
inc
cwtl
pop
hlt
adc
les
lods
frstor
fcoml
fstl
aas
dec
hlt
mov
mov
jmp
stc
cmp
shr
lret
mov
cmpsl
outsb
xlat
insb
push
xor
not
hlt
iret
xchg
je
lret
add
sub
dec
mov
popa
int3
gs
adc
stos
into
stos
sub
arpl
push
adc
cmp
xchg
xchg
insb
sbb
pop
cmp
test
sub
lods
ret
xchg
mov
fsub
call
sub
bound
xor
scas
shl
loopne
sbb
jnp
inc
jp
mull
and
mov
adc
subl
leave
push
pushf
std
sub
sub
add
sbbl
in
dec
test
mov
pop
add
mov
aam
fisttpll
jecxz
mov
fsubl
push
mov
dec
daa
inc
xlat
mov
scas
shr
jmp
xchg
sbb
jne
sub
adc
test
std
rclb
or
mov
insl
cmp
push
int
mov
xor
dec
enter
or
jno
negl
das
mov
js
jp
arpl
inc
stc
mov
setp
test
add
out
sub
jecxz
or
inc
xchg
or
and
xor
jae
aam
adc
sti
out
pop
jp
cmpl
shl
enter
cmp
ds
cmp
and
nop
das
outsb
dec
pop
int3
out
inc
outsl
in
fsubl
div
xor
push
test
pop
ret
outsl
daa
cmpsl
sti
ret
test
or
scas
aas
dec
fisubrs
pop
mov
sub
stc
inc
cld
pop
jp
dec
test
leave
je
lahf
gs
pmulhw
push
icebp
mov
mov
test
stos
movsl
jle
cmp
mov
cmp
je
sub
xor
mov
aad
incl
and
loopne
rorb
je
xlat
lods
pop
mov
aam
leave
adc
push
fimull
adc
mov
imull
imul
push
mov
xchg
test
rolb
in
dec
insl
arpl
imull
test
xchg
aam
je
rcrb
push
test
movsl
jno
sub
addr16
inc
testb
adc
or
xor
xor
sbb
sub
aam
sub
inc
pusha
mov
lret
mov
lea
in
sahf
pop
icebp
fiadds
scas
mov
dec
les
cmp
lods
fstpt
mov
xchg
insb
xor
xor
imul
sbb
popa
jns
roll
push
xchg
andb
inc
mov
sbb
fstpl
sub
sub
scas
test
scas
test
mov
mov
lahf
inc
shll
or
pop
xor
shll
jbe
or
xchg
fidivrl
aad
dec
mov
add
dec
call
out
xchg
push
push
inc
dec
push
bound
pop
aas
dec
addr16
cmpsb
jp
les
mov
test
addr16
insl
inc
mov
hlt
stos
cmc
mov
mov
lock
fsubr
pop
aaa
push
push
mov
mov
sbb
mov
push
je
mov
push
mov
inc
insl
dec
rcrb
ds
test
sbb
idivl
lea
fisttpl
lods
or
jg
ja
jmpw
test
imul
sti
fists
fwait
cmp
inc
mov
pushf
mov
mov
jo
stos
dec
fstl
sti
loop
call
inc
outsb
outsb
add
mov
mov
dec
jne
out
mov
xor
mov
sbb
sbb
sbb
iret
out
ja
pop
fnstcw
imul
call
xor
jae
add
or
ljmp
cmpsb
lea
loope
mov
xchg
mov
cmp
mov
aas
or
repz
idivb
es
shll
fdivr
xor
shll
sub
lea
dec
ljmp
pop
movsb
scas
orl
pop
rorl
pop
push
and
sbb
stos
nop
cwtl
and
pop
out
rcrl
inc
jnp
icebp
in
sub
jae
fisubrl
repz
fimuls
mov
nop
cmpsl
scas
lret
push
jns
icebp
push
fs
daa
mov
fistpl
stos
aam
mov
jge
inc
test
add
call
cwtl
loope
mov
mov
pushf
add
fisttps
cmc
js
xchg
orl
cwtl
ss
shl
movsl
jmp
mov
and
repnz
out
xor
bound
fisttpl
scas
cmp
mov
out
mov
dec
mov
mov
xor
xor
cmp
out
sbbl
sub
mov
cs
xchg
movsb
pusha
sahf
sub
and
cmp
std
fldenv
subl
lods
cli
dec
dec
push
xor
mov
adc
push
das
inc
sbb
push
jns
inc
jnp
incl
sti
int
leave
sbb
clc
mov
lret
popf
and
mov
add
sub
rcrb
fwait
jne
repz
sub
or
adc
fbld
les
enter
je
mov
mov
lods
aad
jmp
lods
pop
jle
add
ficompl
pusha
and
sbb
pop
or
jbe
and
scas
imul
jae
sub
or
lods
scas
push
lcall
lods
outsl
sti
rorb
test
add
cmp
add
mov
add
or
test
sbb
popa
pop
adc
sub
mov
jge
push
xchg
pop
les
add
pop
adc
inc
mov
sbb
lds
mov
adc
ret
pop
cmp
orl
test
bound
sbb
insb
fs
rorb
jg
add
sbb
pop
pop
std
push
push
xchg
faddl
sbb
fldenv
push
gs
les
inc
jle
cmp
inc
and
adc
les
cmc
inc
xchg
inc
cmp
imul
outsl
popf
stos
pop
es
addr16
ffree
loop
mov
das
sbb
add
cld
cmpsb
and
loopne
mov
cmp
inc
sbb
mov
xor
sbb
jle
repnz
in
fwait
jns
or
jl
ret
mov
addr16
sbb
mov
xchg
add
insl
loope
iret
imul
xlat
dec
int
ja
mov
movsb
push
or
repnz
call
faddl
sahf
fs
jecxz
dec
data16
test
sub
xor
mov
or
mov
andb
rorb
imul
adc
into
lock
adc
hlt
js
adc
call
gs
leave
iret
ja
or
rsqrtps
push
jne
mov
mov
adc
xlat
cld
sub
stos
mov
daa
pop
sub
loop
clc
pop
or
cwtl
rcll
sbb
xchg
inc
call
fmul
popf
and
sahf
adc
pop
push
mov
sbb
sbb
imul
movsb
xchg
in
ja
xor
mov
adc
cmp
lret
loope
xor
movb
pop
jg
incl
jl
es
sub
js
add
xchg
subb
jmp
addr16
sub
imul
mov
fadd
mull
pop
mov
pop
adc
cltd
mov
rcrb
mov
xchg
aam
cli
cmc
mov
insb
add
ret
xorl
in
std
mov
push
xchg
addr16
imul
lcall
scas
mov
adc
jne
cmc
rorb
js
jge
sbb
test
cwtl
adc
jb
gs
dec
mov
in
leave
push
add
int
cmpsb
ret
jmp
pop
ret
into
lods
fwait
pop
sub
movsl
jg
xchg
fdivs
fcomi
popa
sbb
lods
push
mov
std
xchg
decl
push
lret
and
jmp
and
pop
mov
push
imul
inc
dec
pop
dec
add
mov
test
aaa
sub
test
outsb
jnp
scas
hlt
cmp
or
jo
jb
idivb
and
stos
xchg
inc
mov
insl
pop
nop
cltd
jecxz
pop
add
addr16
cmp
xchg
jns
test
rolb
xor
pop
loope
test
popa
sub
rsm
jge
int3
cmc
jbe
fcomps
pushf
cmpsb
inc
dec
inc
xchg
add
cmp
cmp
inc
add
loope
pop
test
xchg
stos
xchg
cmp
adc
mov
fchs
jecxz
lcall
pop
loopne
gs
leave
mov
and
dec
aaa
rol
lret
push
push
or
sbb
in
sub
cwtl
mov
in
ss
xchg
imul
fbld
ljmp
std
out
xor
icebp
and
and
addb
mov
mov
repnz
bound
insb
shrl
je
add
xlat
adc
insb
adc
mov
jb
mov
sub
lock
fcmovne
and
sbb
sbb
and
inc
mov
or
mov
rcl
mov
in
mov
sbb
pop
lock
xlat
imul
push
repnz
pop
icebp
or
xchg
cld
xor
add
dec
push
xchg
jnp
les
adc
cmp
inc
mov
in
sub
leave
pop
lcall
mov
fstps
or
mov
in
jns
subl
iret
sub
loope
mov
in
add
fnstenv
dec
leave
sarl
dec
cmp
push
nop
aam
iret
das
jno
jecxz
jns
push
cltd
push
and
pop
dec
out
inc
push
mov
test
sub
xor
fstpl
scas
data16
fwait
mov
jmp
pop
cmp
cld
mov
insl
inc
sbb
push
sti
sub
mov
mov
lahf
iret
jo
fstp
sub
lahf
jbe
int3
pop
xchg
mov
and
out
aaa
bound
add
je
jae
inc
sub
xor
arpl
adc
cmp
mov
movsl
and
das
mov
push
mov
lock
cmc
jo
rcl
je
adc
and
icebp
add
pusha
pop
jne
mov
or
pop
arpl
cli
mov
stos
lea
sarl
push
dec
add
pop
aad
cmp
rorb
sti
cmpsl
js
dec
dec
daa
rorl
inc
sub
adc
cmp
rol
push
jge
sbbb
lret
add
jno
xor
cs
add
test
ficomps
xchg
dec
pop
clc
imul
adc
aad
push
jmp
push
stc
mov
and
hlt
xor
jg
push
cmpl
xchg
addl
ror
hlt
lea
cmp
testl
sbb
test
fbstp
stos
enter
lock
out
pop
shlb
or
fisubl
sub
inc
out
scas
adc
pop
cltd
out
pusha
sbb
out
fucom
mov
cmc
cli
jnp
mov
cmc
xchg
iret
push
xor
lahf
mov
jmp
xor
or
sub
mov
test
inc
pop
push
xchg
out
sub
faddl
pop
fdivrl
outsb
sub
in
movsl
pop
mov
and
outsb
sub
push
cmc
mov
popf
nop
pusha
inc
out
stos
enter
sti
loopne
enter
loopne
adc
push
sbbl
pop
fistps
daa
cmc
mov
and
xchg
imul
ja
inc
mov
imul
mov
repz
in
add
dec
loopne,pn
insl
orb
pop
inc
mov
xor
fstpl
mov
aaa
mov
scas
fisubl
orl
push
clc
and
adc
fldt
sub
push
inc
and
call
cmp
popa
jp
aam
cmp
push
xchg
divb
mov
popf
sbb
push
xchg
push
pushf
lock
mov
iret
sbbb
pop
out
adc
aas
in
imul
pop
pusha
fbld
cmpsb
xchg
orb
push
outsl
movb
jnp
inc
pop
roll
fdivrl
cmpsb
ficoml
and
rcrl
ss
test
push
stc
pusha
ss
and
jle
aaa
mov
dec
adc
add
add
adc
popa
pslld
jg
cmp
sarl
dec
outsb
mov
scas
mov
call
dec
sbb
mov
shll
cmp
sbb
test
int3
cmpsl
mov
push
outsl
push
inc
iret
loope
out
aas
mov
int
add
jae
xor
xor
ret
cs
dec
rorb
js
sub
gs
xor
xchg
fidivrl
or
push
inc
or
out
mov
adc
aam
mov
scas
pop
stc
sar
cltd
sahf
lods
add
dec
dec
inc
pop
sub
ret
popf
or
sub
aaa
arpl
addr16
jge
sbb
cld
sbb
imul
sbb
popa
pop
add
jl
lea
outsl
push
in
add
enter
mov
outsl
into
add
inc
movsl
fstpt
push
das
inc
inc
xor
push
in
xlat
adc
test
pop
inc
or
mov
subb
push
dec
push
hlt
sbbl
ds
dec
fwait
loope
dec
popf
push
popf
repz
mov
or
mov
out
adc
pop
lock
cs
lds
cmpsb
shll
mov
add
outsb
push
arpl
cwtl
sub
fdivs
sbb
vsqrtpd
cmp
lahf
bound
mov
scas
in
xor
cwtl
and
sub
addr16
mov
jnp
inc
lcall
lret
fwait
test
test
sub
xchg
jb
push
call
jb
add
iret
sub
nop
adc
out
fs
xchg
and
adc
leave
or
mov
scas
into
insb
cmc
addr16
cmp
mov
cwtl
dec
jmp
push
xchg
imul
pop
jo
test
mov
stos
xchg
push
stos
mov
pushf
xor
mov
movsl
movsb
aas
push
cmp
aam
ret
pop
xchg
push
std
add
call
lahf
xchg
jae
xchg
in
cmp
pop
pushf
gs
dec
mov
in
pushf
cmpsb
and
sti
pop
sub
push
cwtl
aas
outsl
repnz
mov
test
es
mov
fisttps
ret
lcall
xchg
insw
test
stos
xor
pusha
xchg
or
sbb
sbb
je
sub
adc
dec
or
cmp
aas
icebp
push
xchg
xor
jmp
sbb
adc
add
popa
or
sub
dec
pop
lahf
out
xchg
mov
loopne
repnz
sbb
in
clc
ret
stc
pop
clc
data16
jge
rolb
jne
test
aad
and
mov
rcll
inc
fdiv
outsl
inc
xor
mov
inc
popa
sub
rcrl
adcl
cmc
cmpsl
daa
aas
ds
jno
mov
pusha
jns
fst
and
sbb
mov
dec
inc
adc
fsubrl
push
ds
mov
cli
sti
insb
jp
adcb
jne
stc
inc
jecxz
mov
xor
jle
popl
jne
sbb
or
lret
xlat
mov
ja
call
pop
mov
outsb
andb
jmp
inc
test
and
jl
stos
sbbb
das
dec
xlat
adc
popf
sarl
sbb
mov
jae
data16
cld
jge
cmpsb
lret
lock
mov
jl
sti
filds
loop
addr16
jp
and
out
dec
lods
outsb
jo
mov
xor
sahf
push
mov
push
inc
add
cmc
or
push
stc
out
loopne
mov
outsl
icebp
xlat
mov
adc
xor
dec
cmc
imul
and
ret
sub
push
paddusw
jg
rol
arpl
xchg
icebp
pop
cld
xchg
sarb
pop
pop
scas
xor
push
outsb
adc
or
movsb
add
cmp
cmp
pushf
pusha
fdivl
or
nop
cmp
call
mov
mov
inc
es
dec
je
in
mov
sti
int3
xchg
jecxz
and
or
mov
pop
mov
cmpsb
or
movsb
mov
xchg
xor
out
jle
sbb
pop
dec
cmpsl
inc
xor
loope
inc
mov
push
ljmp
lahf
cld
hlt
sub
mov
stc
sub
pop
sub
mov
mov
jmp
nop
outsl
daa
mov
dec
cltd
xchg
sbb
inc
jb
out
enter
roll
and
pop
lret
mov
in
lock
dec
xchg
inc
pop
es
cwtl
mov
insl
add
push
and
mov
iret
sbb
inc
sbb
sbb
addl
mov
popa
arpl
leave
movb
sbb
scas
js
push
shrl
jge
das
fs
rol
mov
aas
out
add
sub
lcall
push
dec
and
sarl
sub
push
jbe
pop
out
mov
in
out
testb
fdivs
lock
mov
xor
xor
ret
adc
pop
shrb
popa
push
mov
mov
sar
sub
out
jnp
aaa
xor
jno
cli
shll
ljmp
in
inc
int
fldl
push
fcmovnb
mov
push
call
lahf
pop
sbbl
ja
xlat
mov
stc
cmpsb
fwait
jge
sbb
imul
pop
les
cmp
pop
add
mov
lods
push
jo
iret
xor
arpl
mov
btr
push
std
icebp
mov
cmp
sub
mov
mov
add
testl
xchg
pusha
inc
mov
scas
loope
hlt
push
cmpl
mov
fimull
lods
mov
and
out
pop
pop
jb
mov
fwait
inc
add
or
push
mov
sarl
xor
push
arpl
pop
inc
and
push
nop
pop
mov
pop
test
cltd
fcmovnb
sbb
test
push
add
cmpsl
mov
mov
fs
dec
or
clc
lret
js
mov
out
jno
add
lock
aad
int
or
out
mov
add
js
xchg
sub
xor
mov
pop
ja
jns
ljmp
or
int3
stos
jp
sub
mov
xchg
out
jl
enter
mov
mov
imul
fs
add
out
sti
hlt
fisubrs
add
inc
push
cmp
jp
cmp
mov
test
fcoml
adc
xor
sub
sub
pusha
push
std
xchg
add
out
push
dec
pop
ja
or
or
insb
je
jae
mov
dec
dec
out
mov
push
jo
vcvttpd2dqy
mov
dec
add
xchg
inc
test
mov
fistl
adcb
and
call
and
cmpsl
push
addb
test
popa
mov
roll
dec
int3
add
mov
xchg
pop
pop
xchg
in
fidivs
lcall
mov
repnz
sbb
leave
mov
mov
jno
sti
ucomiss
ficomps
cli
fwait
jb
pop
inc
sbb
scas
mov
rclb
data16
cmc
jmp
in
test
fdivrl
push
push
xor
mov
jne
push
das
scas
add
ret
inc
or
ficompl
jp
sub
inc
scas
lods
push
scas
insb
mov
push
addl
aaa
aad
or
dec
or
push
xor
and
sbb
call
and
mov
sti
inc
jle
les
in
ret
jp
std
push
dec
jecxz
add
dec
sbb
mov
push
xor
inc
cmp
paddsw
icebp
sub
outsb
bound
clc
jne
xchg
out
mov
rcrb
ss
pop
add
aam
cmc
pop
mov
mov
cmp
bound
fdivl
and
cmp
ret
cltd
push
clc
aad
loopne
mov
fnsave
xor
testl
jmp
pop
push
add
jb
iret
add
pop
lea
pop
nop
and
pop
call
push
mov
sbb
or
mov
ljmp
mov
and
sahf
and
push
mov
ds
ficomps
and
hlt
jb
lock
incb
movsl
stc
adc
inc
movsl
loopne
push
pop
and
sahf
icebp
fwait
popf
sbb
cld
sub
icebp
pop
or
test
test
push
cs
scas
shlb
mov
pusha
adc
jno
push
inc
shl
fucomi
dec
dec
les
dec
mov
fwait
scas
test
filds
mov
jge
roll
push
xchg
lahf
dec
hlt
cmp
mov
leave
and
les
or
pop
sbb
daa
insb
adc
mov
inc
ljmp
cli
jmp
mov
sub
loopne
jno
enter
scas
aas
cltd
scas
adc
and
mov
inc
mov
cmp
mov
inc
add
xor
sbb
es
adc
sbb
lcall
cmpl
sbb
xor
jb
push
imul
sahf
lret
or
stos
mov
mov
lds
xchg
das
insb
mull
in
fld
cmpsl
insb
inc
jne
push
xchg
pushf
inc
rcrl
popf
cmc
adc
mov
dec
cmp
addb
in
popa
push
ss
push
js
sbb
xchg
bound
lcall
shlb
icebp
and
and
dec
xchg
daa
and
xchg
out
push
decb
loopne
data16
mov
jb
jmp
out
mov
scas
fcompl
mov
or
out
cld
out
test
call
and
inc
in
nop
outsb
and
xlat
in
mov
call
stc
lock
outsl
mov
imul
dec
push
cmpsl
xor
call
mov
sarl
mov
xchg
push
mov
sbb
jle
pop
jmp
sbb
sub
mov
dec
fcompl
jae
rolb
dec
insl
mov
inc
fbld
xor
mov
push
mov
pop
adc
lahf
fimuls
into
inc
inc
xor
push
repz
cmpsl
popa
mov
stos
repnz
mov
inc
test
lods
ja
mov
repz
in
movsl
dec
xor
arpl
adc
out
mov
pop
xchg
dec
inc
rcl
mov
fadd
das
lods
hlt
icebp
in
xchg
inc
test
xchg
and
dec
loopne
push
add
in
sub
shll
jge
jmp
xor
or
cwtl
rorb
rcl
ret
mov
fsub
fucomi
and
in
jge
sbb
pop
out
cmp
cmpsl
xor
inc
pop
pushf
dec
mov
xchg
pop
xchg
cmp
cld
in
dec
mov
adc
dec
push
std
lahf
sbb
test
out
mov
je
and
jns
int
mov
add
mov
dec
adc
subl
and
push
mov
fnstcw
mov
push
lods
mov
fidivrl
or
enter
push
ljmp
aaa
rcrl
fisttpll
in
je
rcr
scas
cmp
addr16
xchg
or
call
cld
sub
stos
fwait
jne
or
inc
sti
repnz
jae
xchg
cmp
das
in
ret
and
fimuls
dec
inc
xor
mov
mov
lea
pop
loop
int3
imul
xchg
roll
lret
push
push
cmp
adc
jmp
aad
jecxz
fiaddl
mov
dec
pop
imul
je
xor
in
xchg
iret
ret
jmp
inc
lods
enter
and
dec
mov
fisubs
mov
popa
outsl
mov
xor
pop
adc
in
mov
ret
mov
stos
daa
inc
mov
adc
sbb
dec
std
enter
xor
test
nop
stos
clc
aaa
lcall
int3
and
test
dec
pop
mov
push
imul
push
or
jmp
loope
mov
add
lods
insb
pusha
pop
sahf
push
xchg
sub
pusha
ret
cltd
sbbl
nop
mov
adc
cmp
xchg
into
push
es
scas
inc
mov
dec
jne
mov
mov
mov
pop
popf
shll
rorb
inc
push
incl
sub
add
pushf
inc
movsb
add
push
mov
movsl
cli
loop
ffreep
pop
inc
imul
pop
mov
add
pop
cmpl
ret
sub
adc
fs
cmc
adc
lods
add
pusha
sbb
in
pop
inc
push
dec
sahf
stos
call
dec
dec
push
stos
push
xor
lods
shlb
dec
xchg
dec
and
in
pusha
mov
pushf
cmp
adc
sbb
call
push
sbb
scas
or
ja
test
lods
in
add
stc
push
loop
adc
bnd
push
xchg
dec
das
cmpsl
mov
add
iret
pop
push
fs
shlb
shll
pop
push
push
test
enter
stos
loope
xchg
mov
test
add
xchg
fidivrl
lcall
push
pop
ss
adc
add
icebp
jbe
lods
mov
movsl
cld
fadd
test
repnz
lahf
repz
jne
push
lock
and
jne
ds
and
fistl
push
jo
jno
mov
mov
xchg
mov
xchg
and
inc
ficompl
imul
ficoms
push
fwait
and
int
xor
cmpsb
cs
push
and
sbb
jge
dec
enter
jbe
iret
dec
rolb
scas
sbb
sbb
ret
rorb
xchg
cmp
cmpsl
xlat
loopnew
js
dec
call
in
inc
movl
mov
sub
test
pop
add
loop
stos
xor
pop
push
adc
lret
les
mov
das
xchg
jno,pn
jb
inc
mov
repnz
lret
inc
adc
out
inc
mov
sbb
btc
test
pushf
and
fs
ljmp
lods
cli
or
sub
das
mov
or
adc
mov
pusha
sbb
clc
ficoms
outsl
outsb
out
cld
lods
sahf
lret
jp
int
cmc
fucom
sbb
rolb
and
adc
mov
sti
and
xchg
xchg
and
mov
mov
lea
jae
nop
mov
sbb
scas
ss
sub
sbb
inc
jp
cs
xchg
jge
loop
jmp
adc
dec
hlt
ret
cmc
push
lods
cld
loope
mov
rolb
inc
sahf
push
add
orl
inc
lods
and
bound
mov
cmp
mov
and
in
jo
add
sarb
inc
outsl
cltd
enter
add
pop
test
mov
push
pop
xchg
aad
pop
push
adc
sbb
push
push
pusha
test
xchg
push
call
jns
mov
movsl
or
add
repnz
jmp
das
jo
pop
sub
pop
ss
pop
jl
and
ret
xor
and
out
out
push
mov
jb
andl
hlt
lods
insl
xchg
lcall
insl
into
loopne
adc
aas
lea
les
lds
or
loop
enter
int
cli
cbtw
addb
inc
rcrb
mov
cmc
test
mov
popf
mov
rorb
bound
or
jae
mov
push
cltd
pop
imul
push
pop
lret
loop
and
xchg
pop
into
stc
stos
inc
lahf
shlb
aas
in
jg
jo
inc
inc
mov
add
jae,pt
lods
dec
jae
lods
test
popa
push
jne
sub
xor
in
das
gs
popa
push
sbb
movsl
sbb
cmp
int
aas
pop
dec
in
sbb
mov
pusha
mov
jmp
push
addr16
xchg
mov
mov
mov
mov
mov
divb
pop
js
push
stc
mov
data16
out
adc
fisubs
loop
jne
out
push
dec
ret
cmp
mov
pop
pop
movb
nop
push
fdivl
testb
scas
leave
fs
push
les
gs
push
jge
xchg
fcoml
mov
mov
or
lret
aam
sbb
jbe
in
push
xchg
inc
mov
cmp
jl
call
jbe
in
jl
mov
clc
test
jge
or
mov
dec
dec
decl
mov
out
or
cs
adc
test
and
test
dec
into
mov
addl
bound
fucomp
lahf
sbb
aaa
andb
xchg
or
lret
lds
jbe
lock
xchg
repz
lock
out
ss
jp
dec
ds
jmp
insb
jb
dec
jmp
aam
lcall
xchg
lret
sbb
jo
adc
sub
ja
aaa
push
loopne
das
mov
sarl
test
std
push
push
adc
mov
jb
mov
push
pushf
clc
std
inc
cli
scas
inc
sub
mov
test
lcall
lods
fwait
mov
or
sbb
enter
mov
clc
sahf
jg
fidivs
scas
pop
mov
push
pop
loop
xchg
dec
mov
sub
mov
push
cli
push
dec
rorl
xchg
cmp
pop
or
test
mov
pop
mov
je
sub
cltd
leave
adc
fstpl
jns
dec
in
sub
stc
fsts
imul
mov
pop
xchg
fstpl
cld
xor
insl
mov
add
mov
inc
mov
mov
sahf
push
sub
mov
popa
cli
dec
jg
leave
xor
push
jbe
mov
jg
shrb
xchg
scas
adc
sbb
leave
inc
call
pop
mov
pop
jns
mov
push
dec
jmp
hlt
mov
cli
mov
sub
sahf
lods
and
sbb
out
shl
cltd
and
or
mov
in
cwtl
xor
push
ja
stos
das
inc
mov
lret
or
mov
inc
jecxz
aas
sarl
xchg
lods
in
mov
add
xlat
arpl
dec
outsl
inc
call
fsubrs
cmpsl
les
lahf
je
xor
mov
outsl
jg
dec
dec
push
mov
mov
sar
les
or
daa
jp
inc
ret
mov
iret
shll
leave
lahf
imul
xchg
fisubl
stos
jnp
mov
pop
jg
xorl
sub
cmp
loope
pop
xchg
pop
int
lock
clc
inc
dec
outsl
insb
pop
sub
dec
out
jne
push
adc
cld
int
jge
decb
or
cmp
cmpsl
sbb
mov
int3
xchg
jmp
sti
sbb
insb
cmp
jno
mov
and
pop
outsl
cs
ja
shrb
gs
and
sub
push
loop
movsl
sbb
adc
cmpsb
ss
or
addr16
jecxz
mov
shll
dec
xchg
sbb
sbb
shrl
mov
mov
or
rorl
js
aaa
add
or
sbb
push
and
sbb
inc
cmp
push
mov
dec
loope
or
aad
push
add
push
je
dec
mov
sbb
shl
push
out
xor
ljmp
stos
or
pop
fwait
jae
mov
fs
pop
cmp
cmp
cs
sub
lcall
xor
push
and
pop
add
shrb
shr
imul
imul
push
ds
loop
push
lea
addl
gs
imul
mov
jl
sbb
mov
mov
sbb
push
or
dec
fprem1
mulb
sub
mov
xor
adc
pop
out
lea
lods
pop
test
lods
outsb
sub
xchg
jmp
xchg
popf
xor
test
pop
in
add
mov
and
mov
imul
iret
movsb
pusha
pop
push
sti
xchg
scas
jb
xchg
cmpsl
push
outsb
mov
jl
and
clc
sbb
les
jmp
js
jge
je
inc
and
popa
into
cld
mov
in
mov
pop
lret
les
xchg
lock
xchg
pop
pop
dec
dec
dec
leave
push
loop
pop
mov
je
sbb
test
xchg
cs
arpl
pushaw
push
mov
jle
cmp
js
fldcw
jo
cmpsb
cld
inc
jne
movsl
fsubp
push
dec
adcl
and
ljmp
push
add
shll
xchg
xchg
scas
imulb
add
dec
dec
mov
and
jmp
push
fists
push
add
rcr
adc
pop
pop
ss
jmp
pop
jp
gs
sbb
or
push
fsubr
inc
aam
and
jg
pop
xchg
inc
mov
sbb
lret
mov
mov
andb
pop
add
pop
sub
fildl
sub
dec
orl
mull
xchg
xor
js
test
clc
scas
scas
shrb
in
inc
shlb
mov
jg
jne
dec
loop
mov
adc
cs
inc
push
lds
stos
fdivrp
push
loope
pop
add
movsl
icebp
mov
xchg
stos
cld
adc
push
push
mov
out
aas
lods
xchg
dec
std
xor
stos
dec
dec
or
clc
fld
out
aad
cmpb
call
shlb
data16
pushf
mov
flds
sbb
pop
mov
aaa
in
push
xchg
shl
add
fsubs
punpcklwd
cmp
enter
test
cmp
or
push
cmp
sbb
jae
cmp
movsb
dec
ret
xchg
xor
push
lret
xor
push
push
fsubrs
and
mov
outsl
fdivl
add
sub
sub
sbb
cmp
sbb
xchg
mov
rcll
dec
adc
sbb
shr
mov
fldl
fdivl
fmull
popa
or
in
loopne
cmp
repnz
jmp
ds
mov
lahf
pop
cmp
into
mov
jge
mov
lret
adc
jl
push
repnz
sbb
push
sti
fidivrs
cltd
stc
rclb
mov
lock
lea
add
pusha
fwait
in
push
cwtl
or
jp
fimull
pop
outsb
lock
fcom
add
stos
mov
negb
pop
cmp
fsubs
lods
xchg
jnp
testb
xor
and
adc
repnz
cwtl
sarl
dec
fldt
imull
in
xchg
lahf
jne
sbb
lahf
mov
push
mov
jae
imul
in
or
mov
dec
add
mov
and
mov
rcl
xlat
and
inc
loope
add
add
outsb
mov
jmp
dec
std
jg
test
and
or
push
xchg
ret
and
dec
pusha
aaa
mov
loopne
inc
fnstenv
fadd
jnp
fildl
xchg
loope
dec
ret
inc
sbb
stos
in
mov
cmp
ret
nop
js
jbe
ljmp
and
addr16
inc
jecxz
stc
add
adc
test
adc
push
ret
dec
jno
dec
es
aaa
andl
sbb
test
hlt
pushf
je
popa
mov
cmp
insl
in
lds
xchg
hlt
inc
adc
orb
addr16
sbb
mov
and
into
loop
mov
push
int
jne
add
xchg
shr
test
fiaddl
gs
push
and
enter
loop
mov
sub
push
fnstenv
inc
pusha
inc
inc
mov
mov
insl
mov
out
mov
push
jb
jo
imul
mov
dec
popf
mov
loopne
xchg
lea
fimuls
adc
dec
xchg
pop
pop
cld
xchg
or
popl
sub
loopne
mov
lahf
mov
jb
or
fstpl
dec
pusha
sub
data16
repz
add
out
clc
hlt
negl
jmp
pop
outsb
daa
mov
inc
mov
lret
test
or
push
mov
and
or
cmpxchg
push
stos
out
and
pop
sub
jecxz
jmp
jo
fdivrl
or
push
jne
in
div
lods
sub
xchg
xchg
xchg
push
aas
or
mull
jnp
or
push
mov
popa
out
sti
mov
xchg
data16
cmc
push
mov
push
imul
frstor
adc
xchg
or
inc
push
jp
fisubs
or
or
add
nop
popa
ficoms
jg
xchg
js
jae
movsl
mov
ret
add
push
mov
xchg
push
mov
or
fbld
dec
cmp
xchg
ret
push
and
push
add
lret
stos
popf
mov
sbb
leave
in
xchg
mov
adc
les
movsl
jns
and
data16
or
cmc
or
push
or
fistpll
or
jmp
addr16
mov
add
jecxz
imul
mov
or
xor
ja
es
fldcw
fistl
gs
cmpsb
rorl
call
sub
xchg
jae
icebp
push
or
mov
out
pop
imul
mov
or
loop
and
addr16
mov
icebp
je
and
insb
pop
push
jg
mov
pop
popa
ret
sub
sub
push
out
jl
pop
mov
lods
clc
outsb
mov
inc
xchg
jnp
or
insl
ss
outsb
inc
xor
and
pushf
inc
fidivs
mov
into
pop
sub
mov
and
fstps
mov
ja
mov
mov
pop
and
xchg
jno
cs
mov
push
or
mov
int3
and
stos
mov
enter
in
imul
decl
ret
cmc
loop
pop
loop
or
xor
cwtl
push
push
fsubr
jnp
dec
pushf
in
or
shrb
and
inc
add
sahf
divb
cmpsb
stos
movl
lea
in
mov
leave
cmp
ffreep
jnp
or
sarl
push
arpl
xchg
std
js
xchg
cmp
rcl
std
sti
xchg
add
movl
sub
and
inc
dec
push
mov
sub
in
cmp
cmp
push
and
jge
pop
add
mov
xor
js
lcall
test
adc
and
jg
fmull
mov
mov
push
ljmp
jb
lahf
jp
mov
call
add
aad
jmp
adc
xor
rcll
std
test
sub
push
and
xchg
js
mov
pop
fld
pop
shl
aaa
dec
xchg
push
in
mov
cwtl
mov
jl
ret
ret
lods
and
lods
imul
lea
push
daa
decl
jle
ljmp
test
leave
sub
sub
adc
insb
pop
aas
jne
roll
mov
pop
inc
xchg
push
pop
addl
mov
ret
push
xchg
lahf
sub
cmp
mov
arpl
outsl
je
jo
dec
or
push
dec
pop
mov
ljmp
inc
and
stc
cs
dec
inc
arpl
test
adc
xlat
and
out
mov
dec
mov
mov
enter
jne
jae
mov
mov
jne
sub
add
lea
mov
leave
dec
and
push
mov
fwait
xchg
in
lahf
ja
inc
cli
xlat
adc
pop
test
dec
dec
in
int3
add
or
sub
xchg
push
mov
test
in
mov
pop
or
xchg
bts
sbb
inc
sub
sti
lock
fcomp
jo
jmp
stos
in
or
push
push
lock
mov
or
cwtl
mov
lods
ficomps
fwait
xchg
or
pop
jnp
rolb
fwait
iret
repnz
push
lcall
mov
xchg
loopne
scas
sbb
xchg
enter
test
into
sbb
aaa
xchg
movl
ret
fs
pop
mov
or
xchg
bnd
ds
adc
ja
push
fwait
inc
sbb
mov
pop
mov
mov
iret
mov
and
inc
xchg
lds
mov
or
xlat
movsl
lahf
int
fnsave
divb
sbb
xlat
xchg
andl
pop
xchg
add
jnp
cld
xor
std
push
cli
imul
sub
inc
or
out
jb
addr16
sub
gs
iret
fstp
ja
cmp
xor
xor
addr16
ljmp
outsl
push
adc
rcrb
jecxz
mulb
xor
pop
test
cmpsl
jnp
addr16
mov
xchg
dec
sub
outsl
stos
adc
mov
mov
inc
test
lods
sti
fs
repnz
fisubs
xchg
or
aam
push
mov
roll
lret
das
jl
xchg
sbb
jo
ljmp
jno
mov
mov
lods
cmp
mov
in
lahf
sbb
shl
inc
bound
popa
mov
add
add
mov
push
mov
inc
add
xchg
mov
xchg
dec
and
in
pop
in
loope
xor
pop
dec
enter
lsl
add
jmp
movsb
cli
arpl
aad
mov
sbbl
mov
rcrb
out
add
add
clc
xchg
fidivrl
addl
in
aad
mov
sbb
adc
dec
movl
sub
mov
mov
shlb
dec
dec
cs
jae
pop
daa
fildll
in
xchg
out
gs
pop
jbe
test
push
or
dec
add
jmp
push
divl
dec
leave
cltd
out
inc
fadds
push
pop
negl
or
addl
imul
sub
jne
fsubl
inc
data16
adc
imul
int3
adc
or
xchg
stc
loop
stc
or
enter
popf
inc
xchg
clc
rcrl
mov
mov
inc
mov
sbb
add
push
xchg
xor
jns
nop
cmp
inc
stos
dec
pop
adc
filds
push
shrb
add
test
adc
push
dec
hlt
out
pop
mov
das
cmp
inc
inc
mov
sti
stos
out
loope
mov
adc
in
or
das
sti
sarb
fadds
data16
jne
mulb
das
bound
and
cmp
cld
leave
hlt
adc
push
testl
fistpll
lcall
nop
into
sub
pusha
push
iret
pop
fwait
jmp
call
in
pop
mov
jo,pn
outsl
rcl
dec
push
dec
pop
scas
nop
adc
pop
in
or
lret
lea
andl
roll
jge
sbbb
scas
jmp
movsl
cmpsb
add
insb
rol
or
aam
shl
subl
fildll
jle
mov
push
xchg
out
sbb
xchg
pop
gs
mov
rcrb
fwait
pusha
insl
outsb
enter
xchg
sub
cmp
popf
daa
aaa
pop
nop
mov
mov
cmp
shlb
popa
xlat
push
outsl
push
adc
pop
movsb
mov
mov
imul
jb
lret
leave
push
mov
test
daa
repz
mov
nop
mov
xlat
jb
or
mov
lret
stc
js
add
sbb
in
sbb
jnp
cmp
loope
cltd
iret
js
sbb
mov
in
int
adc
loopne
push
xor
leave
lods
pop
mov
adc
jo
fadd
imul
or
bnd
mov
push
ss
mov
test
and
mov
dec
test
scas
mov
adc
in
xchg
jbe
pop
and
shrb
mov
pop
je
mov
popf
cmc
fs
push
dec
add
jp,pn
movsl
cmc
mov
movsb
and
mov
clc
scas
xor
cld
sub
jmp
cltd
sbb
out
dec
rorl
pushf
mov
push
dec
fs
jbe
cmp
cmp
call
xchg
dec
xor
dec
int
push
mov
sub
or
or
arpl
std
sbb
shll
push
inc
xor
aaa
sub
test
push
cltd
push
lret
push
je
mov
test
dec
rclb
lods
fwait
les
or
arpl
notl
cltd
ffreep
repz
fldl
ds
sbb
sahf
dec
mov
outsl
adc
pop
ds
sahf
pop
and
call
and
daa
repz
inc
push
mov
aad
jp
test
adc
ret
dec
cmp
dec
push
mov
push
or
ds
aam
jns
call
jo
outsb
stc
jne
mov
div
cmp
dec
ss
push
adcb
pop
cmp
cmp
fstps
lcall
ja
xor
aad
or
jb
sbb
inc
xorb
movsb
into
adcl
pop
sub
push
shll
cmp
mov
dec
loop
adc
cmc
mov
sbb
xchg
inc
lea
pop
loop
mov
jo
sbb
sarb
jecxz
sbb
mov
sbbb
jne
daa
rcrl
data16
push
subb
in
fsubrs
ja
jecxz
mov
shrb
mov
lods
test
xlat
outsb
shl
arpl
pop
add
nop
add
sub
xchg
arpl
jge
push
out
inc
add
or
pop
pop
pop
xchg
mov
fistpll
in
call
fildl
faddl
xchg
aaa
repnz
out
push
fwait
rcll
js
sbb
sub
ret
into
sarb
sub
in
movsl
mov
jb
lods
sahf
adc
or
lcall
push
cli
outsl
jno
cmc
loopne
divb
mov
dec
sbb
mov
test
adc
cmc
mov
dec
ljmp
or
cmovbe
bound
mov
insb
pop
inc
pop
mov
or
and
and
dec
bound
dec
and
xor
and
push
add
cmp
cs
xchg
sarb
and
adc
cltd
cwtl
xor
je
fisubrs
insl
dec
hlt
add
cwtl
negl
sarb
movsl
and
scas
fsts
and
xchg
sub
jecxz
or
jp
lock
out
fnsave
in
shlb
cmp
nop
push
adc
jle
leave
cmpsb
xor
lcall
icebp
sahf
mov
mov
adcb
cmp
inc
pop
lods
xlat
mull
inc
fimuls
je
add
loope
in
out
add
mov
ret
pop
call
int
lock
mov
in
cmp
push
clc
orl
mov
pushf
shr
inc
inc
fsts
bnd
dec
xor
push
inc
pop
mov
adc
mov
pushf
pushf
mov
push
es
jo,pn
push
lock
jmp
in
jne
push
insl
loopne
cmp
mov
cld
push
lcall
stos
aas
mov
cli
push
pop
fcoms
jb
push
push
jg
cmpl
inc
jp
sti
shll
out
rcrl
cltd
fwait
pop
jp
cs
xchg
jmp
sbb
in
das
mov
mov
inc
jmp
mov
adc
jge
shr
xor
cmc
sahf
jns
lods
jb
add
subl
sub
test
xchg
adc
mov
js
lret
cmp
repnz
push
jnp
iret
xchg
rcl
in
int
pop
stc
cmp
hlt
sub
add
xchg
clc
fsubrp
adc
or
insb
fsts
mov
cmp
push
add
push
adc
xchg
sub
sub
or
fdivl
lods
jmp
push
lea
mov
push
mov
test
cmp
lods
stc
nop
shrb
ss
decb
imul
ds
ja
lods
or
mov
push
pop
lcall
xor
mov
cli
shr
cmp
jp
push
jb
jae
insb
adc
push
shlb
out
in
mov
cmpsl
xchg
add
pop
jp
shlb
and
mov
fdivl
mov
movsb
bound
or
or
xchg
mov
scas
rorw
int
pop
outsb
xchg
xchg
repz
mov
popf
dec
jno,pt
lcall
pop
mov
rcrl
hlt
adc
sti
in
faddl
in
mov
cwtl
mov
push
pushf
jp
imul
cli
push
enter
ret
movsl
xor
sahf
add
mov
test
daa
lock
inc
cmp
jp
popa
pop
aaa
mov
stos
jp
pop
and
cs
pop
pop
sub
cmp
call
and
lret
ljmp
hlt
and
jmp
and
pop
mov
mov
add
or
xchg
in
jbe
mov
out
shll
jge
cld
nop
sbb
sub
icebp
mov
daa
mov
into
xchg
inc
in
les
lret
fldt
out
or
bound
lcall
inc
jge
mov
jge
xor
pop
das
sbb
add
inc
stos
xchg
mov
mov
xchg
pop
rol
out
dec
addl
jl
inc
rol
add
and
je
in
out
mov
or
and
fmull
std
adc
adc
testb
js
or
test
imul
push
xchg
mov
imul
imul
mov
leave
call
push
insl
aad
pop
stos
mov
sbb
dec
add
adc
rolb
xchg
mov
dec
mov
push
stos
bound
lahf
lods
mov
mov
adc
das
daa
roll
xor
out
es
inc
ds
shl
push
mov
cmc
xchg
mov
pop
repz
lds
mov
rcll
shl
ret
sbb
dec
sub
jmp
jge
push
lods
sbb
out
repz
add
jp
jle
pusha
lret
mov
dec
test
mov
fidivrl
sub
mov
dec
jnp
test
add
sti
pop
cmpsb
xor
and
in
clc
xor
cltd
or
dec
ss
andl
mov
adc
ss
and
shlb
mov
je
xchg
filds
jo
enter
gs
in
rclb
in
es
add
jge
leave
jl
cmp
pusha
fwait
push
xchg
or
lcall
jno
cmpsl
sub
adc
dec
call
cli
xchg
xchg
cmpsb
pushf
cmp
mov
inc
ljmp
out
pop
or
or
call
ret
out
sti
adc
imul
xor
in
jae
lods
es
mov
inc
xchg
js
pop
pushf
fisubrs
inc
rolb
xchg
ljmp
outsb
ret
lods
dec
cmp
test
push
and
dec
cmp
ret
mov
cmp
in
fisubl
push
adcl
sahf
movsb
test
cmpsl
inc
out
cmpsb
and
add
sub
aas
stc
fs
ds
push
push
sbb
xlat
icebp
dec
sub
adc
and
mov
cmc
sbb
call
es
je
mov
pop
pop
push
ja
rol
aam
lods
sub
mov
pop
xchg
pusha
mov
mov
test
add
mov
mov
ljmp
add
loope
mov
in
add
sub
and
xor
push
sbb
rcr
or
imull
fdivs
loop
xchg
lcall
dec
jmp
mov
das
pop
push
mov
repz
stos
aas
popa
fdivp
lahf
ja
push
cmpsl
dec
cmp
insl
outsl
dec
mov
sbb
int
xchg
jbe
jle
pop
pushf
pop
sub
jge
insb
sub
popf
mov
es
mov
jo
sti
or
cmp
mov
flds
loopne
mov
loope
add
sbb
jp
jg
stc
inc
mov
out
sub
and
test
xchg
js
mov
xor
insl
scas
pop
sbb
loop
jecxz
idivl
jp
sahf
mov
ret
or
or
sti
lea
push
jns
pop
mov
addl
dec
sbb
subb
push
scas
jae
cld
out
push
rcrl
dec
xchg
pop
lea
sahf
shll
je
inc
jne
ja
jl
mov
add
pusha
push
xlat
dec
jbe
jmp
outsb
mov
mov
mov
lcall
rorb
into
imul
rol
mov
jl
cmc
andb
dec
sbb
mov
sbb
xor
pop
les
mov
repnz
push
int3
jno
cmp
int3
cs
cwtl
cltd
pop
push
fisubrl
dec
movsl
daa
stos
jb
mov
movsl
pop
add
mov
clc
loopnew
xchg
push
call
inc
xor
xchg
enter
fdivr
jp
xchg
lock
or
mov
fwait
jmp
mov
icebp
add
mov
push
nop
into
fistpll
lea
mov
cwtl
xchg
fsubl
jmp
aas
cwtl
sub
cwtl
addl
mov
bound
sub
jbe
xor
inc
xor
fstpt
sbb
sbb
insb
test
push
rcll
out
xchg
jp
sbb
pop
addr16
cmp
cmc
insl
es
cs
push
scas
loope
inc
in
lcall
sbb
push
push
fsubrp
cmpsb
mov
push
repz
pop
popl
stc
negl
iret
mov
and
mov
inc
sbb
pop
ljmp
stos
xchg
movl
jmp
pop
jge
roll
into
es
jnp
imul
in
inc
out
cmp
mov
add
sbb
pop
mov
xchg
shrl
sub
shr
or
cmpl
push
jmp
mov
cld
insb
mov
mov
into
sbb
pop
inc
and
sbb
out
mov
stc
sahf
ret
out
pop
inc
inc
popl
pop
fisttps
pop
dec
dec
pushf
mov
mov
sub
js
bnd
cs
outsl
sbb
mov
or
lods
test
cltd
cmp
xor
outsl
jne
cmpsb
jge
push
testl
inc
push
add
stc
imul
add
jb
int
out
test
shl
fisubs
repz
fsubl
xchg
ds
mov
ja
lock
stos
xchg
inc
lods
lahf
mov
cmpsl
mov
sbb
xchg
pop
lret
cmp
push
dec
aaa
jecxz
jns
sbb
sbb
leave
popf
pop
cli
clc
and
sub
cmpsb
bound
cltd
in
or
cli
xchg
sub
push
in
in
mov
jp
mov
xlat
jb
xor
pop
xlat
inc
inc
push
mov
lds
cld
cmp
mov
outsl
loope
pop
rcrb
cld
push
into
mov
xchg
push
dec
push
aas
sub
jo
jl
mov
test
adc
out
jns
and
adc
scas
inc
xor
push
xchg
xorb
aad
jno
xorb
lods
sub
pop
fiadds
arpl
push
cld
add
in
mov
adc
jg
mov
dec
rcrl
ljmp
ljmp
pusha
add
jbe
mov
or
arpl
out
cs
pop
jns
xchg
popa
and
pop
call
fidivrl
test
cld
jmp
dec
popf
inc
aam
push
cmc
jp
sahf
add
add
imul
jl
or
loope
and
mov
inc
das
in
mov
mov
test
inc
or
mov
mov
xor
mov
push
adc
pop
leave
adc
xor
imul
and
xchg
stos
data16
push
mov
add
mov
lcall
pop
pop
das
hlt
or
mov
inc
lock
enter
test
ja
scas
out
repz
xchg
jae
xchg
fmull
or
xor
pop
fbstp
nop
ficompl
jp
push
push
inc
or
ret
push
test
jmp
scas
jp
mov
repz
sub
mov
push
xchg
push
pop
sbb
cmp
sub
fistps
xor
dec
jo
push
fs
pop
popf
lret
rorb
in
bound
loopne
mov
jae
cmpsb
shll
or
dec
add
xor
test
lcall
cmp
cmp
outsb
xchg
adc
jmp
outsb
popf
lods
pop
add
dec
mov
push
test
adc
iret
mov
and
call
pop
dec
mov
addr16
xor
jecxz
dec
pop
divl
pusha
pop
adc
sarb
das
and
test
psrad
xor
jl
test
test
les
jge
add
and
bound
pop
mov
mov
loop
cmp
lds
fs
imul
lea
daa
sub
cmp
aas
dec
out
movsl
ljmp
lret
out
mov
push
lods
imul
ja
cmp
adc
push
insb
inc
mov
ret
push
cmc
add
xchg
jge
push
out
mov
aas
add
xchg
xor
dec
ret
lret
xor
xchg
xchg
pop
sbb
cmp
leave
icebp
inc
arpl
add
add
lcall
inc
add
jo
fnstenv
into
lret
jo
jbe
adc
aam
dec
push
mov
sbb
add
cmp
imul
cwtl
icebp
pop
and
jbe
cs
nopl
mov
rclb
mov
add
std
in
repz
push
cli
pop
pop
lock
loopne
xchg
cmpsl
or
es
lahf
mov
xchg
stos
fimuls
xchg
ret
sbb
in
sbb
cwtl
xlat
mov
out
cmpsl
mov
ret
gs
xlat
lret
jg
iret
dec
inc
mov
test
mov
cmp
xor
jo
and
xchg
or
cmp
pusha
jle
pop
imul
push
in
push
out
test
jge
pop
cld
popa
pusha
aaa
or
pop
lret
outsb
push
push
pusha
sbb
out
mov
movsl
leave
insb
push
mov
out
cwtl
mov
into
leave
cs
dec
pop
and
mov
adcl
mov
push
clc
fisubl
outsl
inc
loopne
mov
dec
loop
popf
mov
mov
adc
push
orl
jp
mov
dec
sbb
mov
loope
lock
orl
mov
loope
push
sti
push
movsl
lea
sbb
jne
insb
pop
popf
inc
addl
push
xor
xchg
movsl
outsl
mov
adc
bound
scas
call
cli
jbe
dec
and
imul
imul
ljmp
aaa
sub
lock
or
adc
pop
out
nop
popf
adc
mov
mov
mov
mov
rolb
xchg
dec
cmp
mov
into
xor
add
add
das
add
pusha
sub
push
mov
out
inc
xchg
pop
xor
je
sbb
push
sub
sub
xchg
mov
rcr
xor
dec
arpl
int
aam
sbb
sub
lret
aaa
popa
ss
xchg
xor
cmpsb
fwait
cmp
cld
jge
insb
jb
paddsw
inc
rorb
mov
cltd
hlt
pop
mov
xchg
pushf
xor
dec
in
fs
mov
cmp
pop
pusha
in
xchg
or
stos
pop
dec
popf
sbb
in
rorb
fwait
lock
add
fcmovu
pop
popa
jns
xchg
out
sub
sbb
sbb
pusha
sbb
mov
xchg
cmpb
xor
addr16
cmp
and
pop
push
jmp
xlat
dec
stos
cmp
in
push
stos
xchg
aaa
mov
push
pop
mov
or
pop
push
adcb
icebp
xorl
ja
mov
std
cs
data16
ds
lahf
aas
loop
adc
outsb
xor
std
xor
sbb
lock
cmp
rorl
sahf
xor
dec
fwait
mov
pop
pushf
lcall
cmpsb
xor
roll
stc
mov
mov
imul
outsl
shrl
out
pop
cli
and
pop
xchg
lahf
xor
sub
mov
call
mov
jae
jbe
pop
fnstsw
sbb
in
in
shll
cmc
push
mov
fldcw
out
mov
mov
lahf
dec
mov
mov
xchg
aas
jne
adc
add
fdivr
jo
int3
out
cmc
push
loop
es
push
scas
dec
mov
dec
push
es
fwait
push
add
inc
mov
xchg
aas
sbb
cmpsb
inc
xor
and
insb
cmpps
jno
arpl
xlat
les
sbb
jle
ja
mov
jmp
insl
add
dec
inc
dec
xlat
mov
gs
data16
mov
lock
andb
inc
add
jnp
push
and
pusha
outsb
cmp
iret
xchg
pop
pop
imul
ss
lds
inc
shl
iret
xor
insl
pop
jns
cmp
test
push
ds
outsl
add
lods
inc
out
mov
sbb
or
ljmp
mov
jb
imul
and
fstp
inc
push
mov
orb
out
lret
push
lcall
mulb
test
lods
leave
or
xor
subl
imul
push
into
jnp
adcl
icebp
pop
ret
push
pop
sbb
xchg
pop
push
push
sti
mov
sbb
das
sub
dec
pushf
mov
and
pop
xlat
sub
iret
sahf
adc
test
or
xorl
jmp
sub
rcrl
loop
xchg
sub
pop
xor
cmpsb
data16
nop
and
adc
cld
not
adc
xorb
jmp
cmp
lahf
repz
outsl
xor
fcmovne
mov
mov
je
inc
jbe
test
pusha
xor
pop
xor
pop
je
inc
movsb
sbb
scas
es
xchg
jp
pop
stos
push
andl
push
jmp
cmp
cmc
push
or
push
insb
cwtl
lock
xchg
ror
push
inc
push
lock
xchg
test
mov
adc
sti
and
repz
xchg
cmc
imul
mov
ret
leave
test
sub
add
ljmp
call
sub
rolb
orl
lcall
mov
dec
in
in
repnz
pushw
in
cmp
das
cmc
add
xor
ret
stc
jb
inc
imul
sti
mov
lcall
sarl
pop
fcomps
jb
or
cltd
push
movsb
sahf
jae
jno
or
adcb
idivb
jno
test
cli
imul
addb
in
cmp
clc
jae
xor
jbe
leave
or
pop
shrb
mov
fcoms
xor
sub
mov
nop
xor
jae
and
add
adc
pop
call
mov
nop
push
sbb
cmpsb
sub
inc
lcall
rcll
lret
sbb
and
test
shll
mov
shrb
xchg
fistps
jno
sbb
lcall
push
out
into
mov
out
fs
roll
inc
sbb
jge
in
mov
lods
adc
dec
mov
roll
stc
cld
jb
add
js
mov
and
xchg
jecxz
call
in
bound
jnp
cmpsl
jmp
mov
fwait
testb
insb
mov
and
mov
inc
add
fisttps
movsb
cmc
test
scas
xchg
inc
not
loope
out
popf
xchg
sbb
dec
setbe
outsl
pop
mov
imul
mov
adc
push
movsl
arpl
cmp
insl
int3
push
cmp
and
mov
mov
cmp
int3
sti
rcrb
inc
pop
lock
cmp
aas
mov
mov
pop
sbb
fwait
add
repz
push
push
testb
outsl
dec
lret
sbb
jge
ret
lcall
int
rcrl
stos
aas
nop
sahf
mov
mov
mov
popf
pop
ficompl
xchg
pop
adc
ljmp
inc
aas
lcall
aas
loop
rolb
cltd
addr16
cmpsb
jg
popa
xchg
insl
je
addb
adc
iret
sbb
sbb
ss
dec
outsb
cld
cli
scas
int
cwtl
lahf
jecxz
inc
sti
ljmp
js
pop
sub
mov
test
pop
mov
xlat
mov
or
push
cmpsl
xchg
fidivrl
xchg
movsl
push
repz
ds
pop
jne
add
repnz
sub
shll
pop
loope
cmpsb
pop
jg
lea
jl
sbb
inc
adc
sub
jge
in
sub
call
cmpsb
add
aas
jle
shll
int
adc
push
xor
fwait
mov
or
xor
dec
nop
pop
lahf
jns
jl
dec
cmpsb
sub
int3
adc
dec
cmp
jae
push
mov
daa
cmp
lcall
cld
loope
jp
enter
inc
addl
xor
dec
in
mov
lret
push
and
adcb
ror
out
cli
aam
cld
and
cmpsl
mov
cmpb
xor
lock
push
ja
out
cld
hlt
pop
xor
bndldx
inc
mov
out
aaa
je
pop
sar
imul
ret
lods
dec
ret
fcmovnu
jmp
clc
and
nop
jae
push
jge
xchg
shll
mov
and
movsl
jmp
mov
loop
xchg
std
testl
je
and
inc
and
xchg
jo
andb
mov
fbstp
fists
imul
sbb
in
mov
mov
scas
push
jp
and
inc
divl
loope
loopne
in
mov
xchg
add
dec
mov
aam
push
stc
bound
ret
and
cmp
xor
sbb
and
sbb
mov
xchg
imul
lcall
jecxz
push
bound
cmc
and
in
lds
inc
sarl
inc
sub
xor
cmpsl
push
sbb
ljmp
push
ret
rorl
mov
loope
aam
ljmp
cmp
loopne
cmp
jo
xchg
cmp
add
xlat
aam
xor
loop
jae
cmp
insl
push
insl
inc
fiaddl
jge
adc
and
shl
mov
mov
sub
mov
lds
out
sti
les
fstp
stc
pop
sub
mov
inc
std
int3
pushf
xchg
pop
aas
sahf
ljmp
push
pop
cmpsl
je
js
loop
cmpsl
sarb
stos
mov
mov
mov
inc
out
xlat
nop
dec
and
mov
loopne
cmpsl
sbb
or
mov
mov
xchg
movsb
loopne
cmp
lret
jns
jmp
sti
roll
sbb
sbb
dec
ljmp
fisubrs
daa
sub
js
pop
cmp
popa
jbe
pop
into
ret
jmp
sti
pop
pop
std
xchg
jl
insb
call
inc
jb
xlat
es
in
push
pop
pop
ljmp
jbe
sahf
sbb
into
pusha
rolb
jb
outsl
cli
sub
cmpsb
add
adc
mov
push
fsubs
push
xchg
andl
jns
popf
hlt
ljmp
dec
push
mov
addr16
xchg
aam
aam
inc
mov
or
jl
lret
push
in
sbbb
dec
subl
ret
fwait
xor
ret
enter
scas
lock
mov
lods
ror
or
mov
mov
add
xor
lock
repnz
dec
inc
out
push
fstpl
push
lds
insb
in
outsb
jl
and
into
fucom
mov
lahf
fcmovbe
in
cmpsl
sbb
cmpsl
fidivs
inc
subb
sub
nop
vmwrite
movsb
lea
cld
fcomps
out
jmp
aaa
cmc
test
mov
dec
adc
sti
shr
adc
push
out
push
push
pop
mov
or
lds
adc
add
insb
dec
or
lret
and
and
mov
cli
nop
fdivl
icebp
xchg
mov
mov
jg
ret
jo
xor
iret
popf
in
xor
scas
and
int
inc
pop
inc
sbb
xor
add
mov
jg
pop
sahf
dec
in
lret
test
lock
dec
push
cli
rclb
and
adcb
insb
js
pop
fndisi(8087
fisttpll
cli
cmp
pop
pushf
dec
repz
mov
lea
pop
jmp
mov
sub
cld
mov
dec
fabs
pop
pusha
pop
dec
shlb
mov
sub
pop
loopne
cld
mov
out
adc
cmpsl
in
pop
inc
movsl
inc
loopne
neg
jbe
fsub
loop
fbld
cli
mov
sahf
les
pop
cmp
fwait
cmp
add
cltd
and
ljmp
ja
stos
jo
dec
xchg
jbe
xor
adc
aas
or
dec
stc
sbb
lods
scas
pop
outsl
cmp
dec
mov
dec
out
je
push
scas
nop
in
rorl
out
cmp
jno
cmp
mov
aaa
ljmp
loope
sbb
dec
mov
test
pusha
push
fwait
adc
jnp
xchg
push
popf
cmpsl
outsl
mov
mov
sub
cmc
jnp
and
test
and
cmp
fbld
stos
sub
and
sub
in
scas
jle
inc
mov
insb
or
jl
pop
pusha
mov
lcall
push
dec
fwait
dec
cld
div
mov
scas
in
loopne
dec
push
mov
jo
shll
pop
lret
in
mov
into
stos
ficoms
leave
int
loope
jbe
cmp
pushf
mov
inc
movl
jbe
nop
cmp
mov
fdivl
adc
inc
push
arpl
dec
jmp
bsf
mov
imul
cwtl
push
sbb
rcr
mov
mov
sub
cld
adc
fsubrl
daa
test
out
jnp
scas
sti
aas
aad
mov
inc
xor
and
sub
es
cmpsl
mov
sbb
notb
movsl
jnp
into
or
mov
add
insb
repz
cli
jb
push
adc
cmp
ficompl
faddp
dec
mov
push
xchg
int
lahf
daa
push
push
pop
subb
nop
pop
outsb
add
xchg
lds
push
sbb
pushf
int3
cmpsb
and
xchg
and
sbb
in
push
dec
push
fcoms
fwait
add
sbb
rep
jg
push
mov
fs
ljmp
adc
dec
cmp
mov
fwait
popf
das
test
data16
loope
lret
xor
pop
xchg
mov
pop
mov
std
dec
aaa
xchg
lahf
orl
imul
sub
out
notb
and
jb
xchg
outsb
cmpsl
aam
daa
sbb
cwtl
jns
adc
mov
pushf
outsb
aad
mov
imul
das
xor
and
push
fs
push
and
mov
js
shlb
jo
push
dec
push
add
fstps
mov
in
pop
cmp
fs
test
push
pop
in
rcrb
push
mov
pop
or
adc
jo
mov
lcall
mov
inc
jbe
cmp
jg
lcall
mov
jg
or
push
dec
std
adc
mov
pop
dec
xor
pop
rorl
and
ret
imul
mov
outsb
cmc
sarl
lds
mov
test
test
adc
out
inc
cwtl
jp
aaa
dec
sub
rcrb
orl
das
mov
xlat
xchg
sbb
pop
mov
addr16
push
ret
arpl
negb
mov
pop
not
xchg
testb
lock
mov
addr16
aam
mov
dec
sbb
and
cmpsb
and
cmp
sbb
xor
scas
mov
inc
pop
and
lret
mov
sti
ja
ljmp
pop
push
cmp
push
push
adc
mov
insl
jbe
mov
mov
dec
ds
icebp
mov
decl
pusha
xchg
fwait
lcall
xor
imul
and
push
push
push
sbb
scas
mov
cli
inc
fadds
outsl
jmp
xchg
into
cmc
xchg
clc
int
xchg
xchg
clc
add
sarb
mov
sub
add
stos
cs
jecxz
mov
and
orb
or
js
fcmovu
jg
cld
rcll
or
std
cmp
scas
clc
sub
imul
adc
add
pop
mov
sbbl
scas
push
cld
pop
adc
cld
cmpsb
outsl
push
sbb
out
stos
bound
dec
mov
ljmp
aad
out
and
out
lret
or
mull
int3
mov
sbb
mov
push
popf
push
push
cmpsl
test
ret
lret
jge
inc
push
push
pop
pop
imul
mov
fstl
cmp
outsl
imulb
adc
pop
mov
mov
int3
ret
int
cmc
cmp
aas
movsl
into
stos
dec
test
dec
and
add
dec
lret
outsl
mov
lods
add
jbe
or
ljmp
sbb
sub
sbb
fldl
xor
or
sub
add
add
xchg
xlat
jns
mov
push
dec
xor
orb
mov
jle
jmp
std
insl
ja
movsl
sbb
or
icebp
loop
push
test
insb
dec
mov
fnstenv
mov
gs
xor
stos
fsts
inc
mov
push
mov
jg
pushf
jbe
xchg
lds
cmp
arpl
and
xchg
jl
loope
mov
xor
or
test
jb
ret
cs
out
lret
sbb
jl
popa
jo
notb
sarl
pop
mov
filds
js
mov
sahf
flds
in
lret
loopne
xor
fmuls
push
sarb
xor
into
outsb
and
push
sbb
bound
movsb
shll
inc
mov
pop
push
cmp
test
imul
in
test
sub
jle
inc
incl
inc
je
cltd
pushl
cmp
enter
mov
fld
xchg
sub
add
js
lret
xor
pop
mov
cli
inc
insb
push
test
sbb
icebp
mov
and
aad
ret
cli
jp
push
dec
or
jmp
mov
arpl
mov
pop
mov
movsl
push
das
push
mov
mov
sub
fbld
sbb
loope
dec
imul
inc
ds
outsl
lahf
fbstp
stos
js
divl
and
jl
std
sbb
mov
repnz
pushw
jp
in
movb
lahf
into
add
cwtl
jmp
push
or
sub
pop
add
jb
inc
int3
cmc
gs
call
mov
push
add
adc
pop
sbb
in
or
les
sbb
xor
notb
scas
andb
test
xor
pop
je
jg
adc
iret
fstpt
dec
mov
js
inc
dec
icebp
pushf
rcl
lahf
push
and
lods
cltd
loop
clc
xchg
pop
int3
in
xor
push
stc
jae
mov
sbb
xchg
rcl
mov
pop
int3
push
fmuls
in
out
iret
pop
or
pop
jbe
les
push
ja
lods
inc
mov
ds
cli
mov
push
stos
xchg
mov
xchg
arpl
enter
test
inc
cmpsb
lods
out
fsts
int3
jp
adc
jecxz
jnp
ja
into
fcmovnb
push
das
movsl
ljmp
sbb
mov
mov
xchg
push
es
xor
cmp
int3
and
and
mov
fsubrp
mov
sbb
cs
lcall
adc
psubusw
sbb
lret
shll
les
and
popaw
jbe
xchg
pop
rorl
mov
or
insl
aam
loopne
mov
mov
shr
or
mov
mov
dec
mov
int3
pushw
inc
into
cmp
int3
setbe
pop
cmp
vpavgb
fidivl
in
cmc
add
or
imul
add
xchg
sub
xorl
mov
sub
outsb
clc
jb
rclb
shlb
cli
flds
jns
mov
xchg
lret
pushf
fimull
inc
cmp
aas
in
push
repz
jg
xchg
sti
addl
xor
jne
sub
lcall
subl
lods
movsl
cltd
xor
inc
cmc
fiaddl
pop
cmc
add
daa
push
push
pop
push
mov
adcl
pop
leave
inc
mov
mov
cld
shr
or
addr16
jns
push
xchg
add
faddl
shll
sub
inc
sub
sbb
in
inc
mov
imul
jmp
mov
adc
inc
icebp
push
lret
mov
loope
jne
cmp
xor
pop
stos
jnp
add
inc
test
in
jne
into
aad
adc
pop
push
cmp
inc
cmp
jp
scas
mov
lret
fcomps
sti
xchg
adc
cmp
into
icebp
fst
xor
into
xchg
movsl
setg
inc
add
jge
mov
mov
out
bound
loopne
dec
loope
xchg
mov
sub
sub
sub
jle
vpsrld
leave
loope
xrelease
iret
xchg
aas
add
and
cmp
mov
push
cld
add
rolb
push
push
inc
stc
push
clc
and
push
mull
ja
adc
adc
jle
imul
icebp
repnz
sub
mov
jle
imull
iret
mov
mov
test
lds
lret
mov
in
in
and
push
jg
das
pushf
xlat
pop
xor
mov
lock
pop
add
arpl
push
mov
push
aas
idivb
sub
mov
inc
mov
mov
dec
jecxz
jmp
fidivs
mov
mov
sub
jne
dec
rcrl
iret
cmp
sbb
push
jecxz
cli
daa
aas
pop
inc
sub
filds
test
adc
mov
adc
add
xor
xchg
test
lock
cmp
and
sbb
mov
cmp
jnp
mov
aam
das
fisubrl
rolb
pop
pop
jl
inc
xchg
ret
fcompl
xchg
jo
push
divl
cltd
ds
adc
lods
lcall
xchg
push
adc
sti
lods
subb
jp
sub
nop
lea
ret
push
push
repnz
push
and
loope
ja
mov
adc
jge
push
or
pusha
lret
stos
lea
mov
mov
shll
push
std
mov
jne
push
fadds
adc
in
fwait
push
aas
cmp
cmp
push
int
and
lret
fcomp
jp
mov
loope
mov
gs
mov
and
xlat
mov
dec
or
lahf
jo
mov
jge
les
ja
mov
icebp
add
pop
subb
out
push
aas
jb
pop
aaa
jmp
popa
xor
mov
outsl
pop
mov
movb
or
insl
inc
adc
or
cmpsl
add
jmp
insb
push
cmp
or
cmp
push
mov
sub
xor
lods
adc
out
in
inc
cmp
daa
stc
fwait
loope
adc
push
jne
imul
pop
mov
hlt
fsubrl
mov
lds
mov
push
shll
inc
out
jecxz
adc
lods
cld
add
adc
fidivrl
push
insl
pop
add
fs
sub
cld
dec
xchg
lcall
js
mov
dec
mov
sub
mov
aam
sbb
jle
xor
sbb
push
cs
mov
cwtl
lcall
outsb
inc
call
mov
xor
inc
pop
hlt
jl
sbb
pop
in
jge
cwtl
xchg
into
mov
and
fists
ret
mov
lret
insb
inc
dec
int
sbb
inc
push
push
and
push
pusha
arpl
out
daa
int3
pop
lcall
jo
mov
fcmovu
xchg
jp
mov
cmp
dec
mov
andl
pop
xchg
push
movsl
pop
xchg
or
mov
and
xchg
dec
jo
bound
icebp
xor
adc
lods
fstpl
adc
call
cmp
mov
cltd
js
mov
ret
xor
cmp
lahf
push
popf
pop
rorb
insb
ret
lea
or
outsb
pop
int
jmp
add
cmp
push
clc
lods
xor
cmp
andl
push
inc
push
pushf
mov
insl
jo
mov
cs
test
stc
sarl
jo
lds
sbb
adc
lahf
aam
out
push
xor
je
xor
mov
rcl
and
loope
out
xor
adc
sahf
or
fildll
and
jb
lret
sarb
and
pop
or
push
add
test
dec
ret
call
mov
mov
xchg
mov
mov
call
nop
dec
mov
cli
movsl
push
cmp
pop
clc
call
fsts
cltd
nop
inc
dec
stos
cmc
iret
mov
sub
shll
sub
adc
lret
push
int
or
popa
hlt
jmp
or
and
push
pop
lods
cld
into
insl
jb
pop
sub
cmp
xchg
sbb
ss
imul
cmp
fsubrs
leave
or
jge
pop
addr16
faddl
ret
cmpb
ljmp
lcall
or
xchg
fldt
jb
fwait
ror
iret
jnp
je
lods
or
outsb
mov
mov
negl
subb
cmp
push
lods
das
jle
leave
shlb
pop
sbb
jae
inc
inc
add
push
jnp
and
push
je
add
pop
lcall
and
jns
repz
lahf
in
xor
cmpsl
subl
out
int3
insb
bound
lret
mov
icebp
in
subl
ja
popf
jae
and
cmp
sarb
es
out
pop
inc
jo
shl
push
mov
int3
or
mov
xor
inc
das
lahf
add
inc
scas
je
imul
xlat
inc
or
imul
fisubrl
and
pop
std
lea
decb
xchg
arpl
sti
stc
cwtl
jmp
movsb
or
out
dec
dec
loop
sbb
and
inc
jno
pop
push
add
incb
icebp
jmp
adc
ret
leave
in
stos
mov
cmp
xchg
sub
shll
push
xchg
mov
jge
pop
jne
mov
out
cmp
cltd
or
push
sub
add
out
fs
cmc
and
xlat
jno
inc
addr16
add
mov
mov
sahf
adc
lcall
ror
inc
mov
mov
out
pusha
imul
jmp
sub
and
and
fldl
adc
outsl
out
push
adc
rorl
loopne
cli
jg
xor
aad
mov
mov
pop
mov
xchg
pop
jbe
loopne
cld
xor
int3
xchg
cmp
jle
insb
test
test
jns
dec
int3
push
mov
pop
insb
test
mov
or
mov
gs
jg
incl
dec
push
stos
roll
push
pop
or
ret
xchg
sub
rcrb
sub
dec
hlt
xor
sbb
mov
sti
add
sarl
mov
pop
and
lods
cmp
cmp
pushf
jmp
push
cmpsl
push
dec
int3
fcomps
xchg
mov
int
lock
jmp
sarl
dec
add
xor
jg
xor
orb
cltd
iret
mov
icebp
outsb
and
sbb
mov
loope
or
cmp
insl
addr16
xor
fmul
stos
lahf
jns
sbb
xchg
pop
lea
std
loopne
jg
cmp
push
pop
stc
xchg
in
ljmp
adc
fs
add
jmp
es
adcb
popf
lcall
test
addb
shlb
lahf
and
test
or
outsl
dec
dec
addl
cmpsl
popf
push
test
xchg
sub
jp
adc
push
push
pop
cltd
je
mov
je
and
icebp
pop
testb
xor
adc
fs
inc
in
push
jo
into
or
test
pop
xchg
mov
xchg
cwtl
sub
andb
icebp
negl
mov
cmp
push
call
xchg
out
mov
mov
inc
mov
roll
jl
xor
mov
adc
out
push
jb
inc
jle
dec
or
enter
out
in
enter
add
push
test
inc
icebp
jg
dec
cmpsl
mov
cs
sahf
sbb
lahf
add
cmp
aam
outsl
xchg
inc
test
push
lods
cli
jle
lock
outsb
in
ss
adc
hlt
out
jg
push
pop
jl
nop
arpl
and
mov
mov
jne
pop
dec
mov
jp
xor
lahf
repz
data16
lock
sub
aad
cmc
in
mov
push
cmc
pop
sbb
and
hlt
mov
push
arpl
dec
mov
fisttpl
mov
xor
push
gs
ss
addr16
lea
insl
dec
sbb
adc
ja
cld
cmc
orb
loop
popa
cld
imul
sub
cwtl
test
repz
outsl
dec
push
rorb
inc
cmp
subl
outsb
das
cli
push
push
hlt
roll
fdivrl
ret
xchg
mov
push
jl
cmp
push
push
pop
jmp
or
dec
jae
mov
cmp
rcll
pmaxsw
popf
pop
dec
sarl
inc
rorb
in
pop
aaa
notl
sti
add
imul
or
xor
jle
shrb
leave
cmp
aam
jne
and
push
jns
pop
jae
jle
jnp
adc
mov
cmp
sub
push
push
jbe
pop
dec
nop
in
fs
inc
daa
jnp
ret
mov
push
ret
inc
adc
mov
xchg
iret
outsl
dec
pop
out
sbb
out
lea
fiadds
or
mov
pop
mov
ds
push
lcall
and
inc
or
dec
cmp
mov
mov
shlb
clc
shll
push
popl
andl
mov
push
and
pop
shl
nop
sbb
aad
cwtl
dec
xchg
je
jl
clc
lods
or
lds
jmp
cmp
sub
sub
mov
inc
jae
stos
mov
xchg
sub
lret
repz
xchg
sub
fiadds
ds
add
adc
mov
ljmp
add
push
adc
pop
mov
outsb
push
je
push
lcall
jmp
cmp
popf
mov
lcall
xlat
xor
cmp
mov
adc
xchg
xchg
add
and
mov
sub
push
fstps
out
push
mov
push
cmpsb
mov
ret
inc
dec
cmpsl
fwait
add
cld
stos
fsts
or
pop
mov
xchg
jl
enter
push
mov
repnz
xchg
and
mov
pop
pop
shll
xchg
xor
add
flds
js
iret
xlat
push
js
aaa
jbe
sub
pop
inc
in
push
and
les
loope
js
push
jmp
dec
pop
dec
dec
es
and
shld
fnstsw
mov
loope
pop
mov
xchg
add
mov
add
adc
fistpll
push
add
jmp
jo
insb
xchg
adc
mov
mov
adc
mov
or
xchg
and
jecxz
xlat
mov
gs
enter
subb
pop
sub
adc
shlb
mov
decb
stc
dec
fisttpl
aam
inc
fsubr
das
popf
aad
or
dec
ds
je
cs
sbb
and
push
jnp
andb
lds
aam
insb
add
or
jl
cwtl
sbb
mov
jg
test
pop
and
pop
cmpl
push
scas
or
or
add
add
cli
fwait
pop
in
pop
cmc
outsl
dec
mov
lret
pop
or
pop
ljmp
dec
adc
inc
aad
sub
std
call
push
sahf
mov
sbb
cmpsb
cli
push
in
xchg
adc
pop
cld
in
aam
and
arpl
sbb
xor
push
push
push
pop
adc
mov
pop
sub
or
dec
aad
inc
push
out
mov
shrb
push
ja
into
cld
xor
decl
stos
icebp
in
lds
popf
clc
mov
xor
rcll
push
push
mov
lock
push
shlb
jo
out
push
pop
inc
repnz
pushf
enter
push
icebp
sahf
gs
mov
pushl
fwait
inc
fsubl
or
xchg
pushf
or
jnp
pop
mov
and
mov
ret
lods
pop
dec
enter
cltd
aas
sbb
enter
ret
jp,pt
xlat
cmpsb
aam
pop
loopne
cmp
movq
movsb
aas
mov
fwait
into
jmp
add
dec
sbb
out
dec
pop
repz
daa
xchg
inc
mov
mov
adc
inc
int
outsb
aad
out
cli
mov
cltd
jne
imul
adcl
enter
ds
sbb
test
push
icebp
stos
lahf
or
pop
dec
jae
jb
push
arpl
push
mov
push
cld
aam
jge
push
mov
decb
pusha
jecxz
adc
ficoml
dec
clc
imul
xchg
lret
adc
ljmp
roll
ret
in
jnp
xchg
inc
adc
into
push
popa
dec
sbb
adc
sbb
cmp
loopne
jnp
cltd
lods
jl
adc
gs
pusha
aad
push
and
push
or
push
subb
cmp
pop
add
ljmp
inc
pop
lcall
xor
mov
mov
pop
inc
jle
stos
repz
test
fldcw
pop
cmp
gs
outsb
iret
sub
rcr
adc
xor
arpl
outsb
mov
jmp
jmp
and
cmpb
out
out
popf
mov
repnz
js
sub
push
and
lock
fstl
or
inc
out
mov
or
add
ds
repz
jge
subb
adcl
jecxz
shl
mov
stos
addr16
lret
or
pusha
lods
into
adc
leave
pop
ja
xor
fisttps
imul
add
test
daa
les
inc
andl
and
ds
stc
decl
insl
push
push
in
minps
sarb
sub
pop
mov
jbe
push
sub
mov
push
push
sbb
addb
int3
sbb
dec
sub
into
lock
push
fcom
bts
in
or
or
lret
cmp
pop
shl
mov
ljmp
mov
xchg
nop
sub
push
push
mov
xchg
in
aad
pop
push
out
pushf
pop
and
inc
fdivrp
mov
mov
orb
sbb
and
push
js
dec
pop
mov
xlat
lahf
push
adc
mov
fwait
jae
sbb
jbe
jbe
fldl2t
add
sbb
data16
dec
push
cmp
sbbl
out
lock
inc
sbb
jp
mov
lods
bound
mov
fistpll
ss
mul
mov
shlb
std
sub
jg
shll
fists
ljmp
mov
dec
cmp
push
and
roll
xchg
sub
and
sbb
test
fbld
adc
lds
lahf
aad
nop
xor
aaa
out
or
addl
repnz
sub
mov
cmp
aaa
fisttps
cmc
or
ret
mov
push
test
fcmovnbe
iret
mov
nop
sub
mov
shrb
loopne
fdivl
sub
add
ret
sbbl
idivb
popa
leave
add
pop
jno
fmul
clc
mov
and
scas
xchg
sub
inc
add
ja
cmp
psllw
mov
or
lret
and
insb
adc
ret
jo
fistpll
out
xchg
xor
cmpsb
icebp
sbb
cmp
inc
dec
inc
mov
hlt
pushf
addr16
daa
xor
and
enter
xchg
dec
sahf
jecxz
sub
mov
mov
fcomps
sahf
in
movsl
or
mov
mov
insl
cmp
xchg
mov
aam
lret
push
negl
into
xor
push
dec
out
repnz
ljmp
mov
fnsave
sahf
mov
scas
jmp
xor
insl
out
sub
push
adc
fisubl
xlat
out
pop
cmp
mov
outsb
js
add
out
adc
sbb
call
jne
sub
ret
ljmp
mov
dec
lods
mov
pop
cwtl
stos
shrb
cwtl
and
xchg
mov
add
and
ret
nop
cmp
movsb
pop
push
fwait
or
int
das
subl
xchg
movsb
xchg
pop
xchg
and
imul
stc
pusha
sti
cmpsl
shrb
mov
out
jnp
mov
cmp
lock
mov
jne
imul
mov
sub
mov
push
int
outsl
jno
dec
cmp
pop
gs
mov
sub
push
lcall
xchg
sbb
mov
stos
pop
call
and
mov
imul
aam
inc
adc
orb
xchg
mov
pop
dec
push
and
cmpsl
inc
and
adc
andb
ficoml
scas
movsl
fwait
jl
xorl
mov
add
into
in
ljmp
mov
test
shll
aad
add
lcall
mov
cmc
sti
fdivrs
add
push
xchg
out
aam
inc
dec
test
mov
fisubs
outsb
jp
jne
mov
mov
int
ja
jmp
stos
pop
xor
add
sub
in
cmp
cmp
lds
insl
xchg
pop
leave
insl
xor
insb
push
fs
sub
test
popf
cld
pop
outsl
in
aas
insb
pop
loopne
pushf
popf
ret
leave
inc
ret
cmp
xchg
and
lcall
jnp
adc
sbb
fwait
scas
into
test
in
rclb
ret
shr
fidivs
xchg
arpl
pop
inc
stos
dec
popf
aaa
ss
fdivrl
dec
jp
pop
inc
jmp
bound
push
mov
cltd
int
cmp
sub
mov
pop
xchg
xchg
pop
mov
xor
xchg
shll
aas
jp
int
or
xchg
push
inc
aam
xchg
adc
das
lcall
cmc
xchg
mov
cs
adc
fsubrp
push
jae
addr16
filds
dec
pusha
das
sbb
loop
mov
cld
dec
or
or
test
leave
cld
in
fwait
jmp
jp
jmp
arpl
inc
cmp
cld
mov
mov
pop
fidivl
jne
adc
outsb
scas
adc
stc
mov
ror
mov
and
dec
insb
jne
sbb
inc
loopne
mov
inc
stc
gs
mov
pop
push
lcall
add
mov
ja
push
push
xlat
mov
cmp
aaa
ss
pop
or
cld
cmpsl
xchg
adc
adc
mov
addr16
fistps
push
imul
push
push
sub
icebp
adc
sub
sbb
xchg
std
lock
add
clc
fstps
ds
xchg
inc
mov
mov
fwait
pop
mov
adc
inc
fcomip
std
sbb
out
xor
inc
or
pop
fnsave
lret
ljmp
jge,pt
in
mov
fadd
repnz
dec
pop
enter
mov
mov
fdivl
mov
xor
call
jge
jle
inc
or
mov
fiaddl
add
mov
push
test
push
repnz
xor
in
das
test
and
stos
jae
jmp
bound
sbb
mov
jb
mov
or
mov
push
fstps
pop
out
push
lds
push
ds
ret
add
xor
xchg
mov
jg
adc
lcall
add
lods
in
jl
mov
stos
popf
mov
je
arpl
dec
lahf
and
pop
adc
jae
imul
push
in
xchg
out
iret
test
mov
imul
imul
lds
enter
inc
push
ret
cmc
shl
out
fisttps
mov
dec
adc
fstp
mov
in
mov
xchg
cmp
in
ror
dec
push
sbb
dec
fistps
or
xchg
out
nop
push
inc
loop
mov
pop
dec
mov
out
pop
dec
mov
fsubrs
pop
rorl
mov
add
fidivrl
mov
xor
popa
in
outsl
loopne
lods
push
loop
or
inc
sbb
sbb
or
movsl
push
decb
out
gs
nop
lret
cmp
in
jmp
mov
cmp
ffree
rol
testl
cmp
mov
ret
or
fwait
enter
data16
sub
and
fldt
mov
out
inc
dec
fisttps
adc
add
setle
int
inc
and
call
jecxz
inc
ljmp
mov
push
in
sub
dec
andb
jbe
cli
jle
fists
add
ds
out
scas
pushf
xchg
cmp
fidivrl
es
mov
cmp
int3
icebp
arpl
loope
neg
adcb
gs
cmc
jbe
int3
ss
jmp
sbb
jle
std
sahf
add
icebp
pop
pop
and
inc
pop
mov
je
adc
js
or
ss
cmp
jne
or
call
jae
inc
imul
mov
shlb
dec
std
xor
ljmp
xor
push
xlat
jo
mov
adc
push
dec
push
insl
repz
and
dec
or
dec
pop
test
cmp
jecxz
std
loop
sbb
xchg
add
in
push
jbe
cmpsb
or
leave
mov
sbb
or
xchg
fimull
jae
rolb
out
mov
xor
push
pop
and
stos
adc
lret
mov
pop
jmp
push
test
pop
adc
out
push
out
ljmp
push
pop
push
mov
pop
das
pop
jg
arpl
mov
test
jne
add
pop
and
scas
sbb
xorb
xor
adcb
dec
pop
cld
mov
xchg
jge
sahf
out
or
inc
cli
jne
fiadds
cmc
mov
push
cmpsb
dec
mov
cmp
pop
and
mov
xchg
sub
mov
mov
stos
inc
mov
jne
jl
adc
sbb
cmp
inc
fwait
and
popa
cld
add
cmp
fidivs
ss
rcrl
cmp
jb
xor
add
jae
mov
int3
xor
das
out
in
clc
mov
insl
push
mov
stos
xchg
jle
mov
loopne
test
cltd
push
mov
mov
ljmp
cmp
mov
ffree
lods
aaa
gs
js
mov
into
add
mov
or
fisubs
lret
adc
mov
ret
sub
inc
mov
adcb
leave
fptan
mov
stc
sahf
lods
or
sub
orps
xchg
dec
inc
es
pushf
icebp
bnd
push
aam
cmpsb
push
sub
push
gs
add
scas
repz
shlb
mov
test
mov
sub
icebp
mov
xchg
test
std
or
cltd
mov
mov
mov
aad
lock
addr16
sti
pop
inc
push
ret
push
jne
jmp
mov
inc
mov
enter
xchg
cmp
jg
lcall
pusha
add
loop
pop
sbb
dec
dec
and
out
repz
and
mov
sbb
sub
test
mov
rol
iret
pushf
xchg
xchg
mov
and
repz
lods
and
aas
int3
insl
fmuls
and
das
push
pop
dec
cmp
push
test
sbb
aad
fcomps
test
cmpsb
ss
adc
fildll
lcall
jmp
call
xor
icebp
jmp
dec
jmp
lods
sub
mov
xchg
das
ja
push
jl
xchg
lods
mov
aaa
dec
aaa
mov
push
adc
mov
adc
jecxz
stos
adc
push
push
sub
test
or
xor
adc
cmp
lock
repz
testb
test
lret
popa
ret
jle
bound
or
scas
pop
std
gs
in
andl
or
inc
xor
lea
pop
lods
ficoml
or
dec
mov
sbbl
sbb
arpl
loopne
in
pop
pop
mov
gs
pop
mov
std
pusha
and
sbb
pop
and
xchg
outsw
push
ret
jne
dec
ret
jp
xchg
daa
jns
mov
xor
cmp
sbb
pushf
sbb
cwtl
sub
fnstsw
test
push
mov
xchg
or
hlt
mov
int3
jbe
xchg
dec
stos
mov
dec
es
sub
xor
xor
mov
out
out
jb
adc
jge
out
push
loop
into
add
mov
add
push
sbb
sbb
mov
pop
in
mov
add
push
shlb
xor
xor
xor
rcrb
or
ret
aas
push
and
fdivs
lea
jne
sbb
mov
clc
or
into
loop
pop
in
enter
out
push
stc
movsb
arpl
push
es
loop
mov
cmpl
test
cs
cmp
add
inc
add
std
shr
scas
shll
outsl
in
ds
fbld
mov
fstpl
imul
push
arpl
mov
lods
xchg
out
mov
xor
jecxz
inc
scas
jg
aaa
gs
jmp
jmp
and
ret
in
les
in
mov
bound
sahf
and
lock
jo
idivb
test
sbb
mov
cmpsb
pusha
test
popa
sub
push
pusha
and
in
mov
and
je
jmp
cmc
pop
lret
mov
mov
xor
inc
in
xor
insb
jae
mov
into
xchg
fs
dec
push
rcrb
add
xchg
pop
ficoml
mov
pop
jo
mov
push
das
or
and
push
xorl
cmpsl
mov
dec
imul
in
push
dec
xchg
testb
ret
cmp
inc
std
int
mov
push
mov
dec
push
push
jns
aad
lret
out
das
xchg
mov
sbbb
dec
test
clc
inc
xlat
jmp
lret
rclb
aam
lahf
and
inc
xor
jle
dec
add
outsb
or
gs
jmp
test
sub
cld
add
cli
adc
jns
and
jmp
adc
imul
imul
fdivrl
ret
pop
adc
mov
popf
scas
mov
enter
mov
push
jbe
xor
subb
sbb
and
movsl
adc
leave
cmp
xor
mov
pop
mov
fadd
inc
xorb
addr16
or
push
std
pop
cwtl
add
jge
shlb
cmp
cltd
and
sbb
scas
sbb
fdivr
out
cld
mov
jecxz
clc
fisubrs
cmp
jmp
lods
dec
jnp
xchg
mov
mov
push
xchg
xor
sub
test
mov
sbb
idivb
mov
mov
mov
and
inc
por
lahf
mov
clc
andl
xor
push
mov
and
fldt
sub
rclb
out
xchg
popf
xor
lahf
sbb
add
fs
sub
pop
dec
repnz
xor
cmp
loop
add
cli
mov
fdivr
jbe
cld
shr
add
mov
test
popa
ja
lret
adc
mov
adc
push
scas
mov
icebp
xchg
repnz
push
adc
sbb
pop
xor
adcl
jnp
popf
andb
pop
ljmp
inc
pop
push
out
add
push
lea
in
jle
cmpsl
and
dec
rolb
movsb
fs
mov
rclb
xchg
adc
aaa
out
adc
pop
stos
push
adc
es
mov
lea
sbbl
bound
pop
inc
sub
lods
pushf
pop
imul
mov
mov
lret
int3
xchg
adc
adc
push
dec
mov
push
les
cmc
xchg
call
fwait
push
ret
xchg
loopne
inc
in
push
inc
xor
xor
shrl
ss
sahf
sbb
sub
fsubr
in
dec
scas
sar
sub
lret
mov
xor
push
xchg
je
mov
rcrb
data16
cmp
jecxz
mov
out
jo
sbb
call
and
cmpsl
or
xchg
fstps
and
dec
push
mov
or
cmp
mov
stc
fbstp
xchg
xor
fmull
outsl
mov
in
pop
push
mov
insl
inc
jne
mov
adc
ds
or
dec
jb
call
mov
xchg
xchg
sub
rolb
adc
lds
adc
data16
pop
frstor
enter
adc
cwtl
xchg
lock
lock
mov
dec
xlat
push
jge
mov
cmc
shl
mov
data16
cmpsb
adc
sar
fcomip
lret
mov
add
jbe
outsb
xorl
xchg
add
cld
aaa
xchg
xchg
jne
icebp
sub
mov
mov
ds
mov
and
xchg
adc
xor
movsl
ret
daa
xchg
ljmp
lock
movsl
mov
jecxz
xor
xor
mov
andb
outsl
out
nop
out
in
ljmp
pop
cmp
push
xor
test
sbb
sahf
in
aam
cmc
sti
cmp
sub
clc
fnstcw
inc
mov
cmc
sbb
enter
sub
xchg
inc
lods
xchg
xorb
jae
stc
fbstp
lea
sub
inc
jbe
test
fadd
push
pop
pop
shrl
ret
in
push
ret
and
dec
inc
sbb
add
mov
mov
push
mov
dec
insb
inc
enter
or
mov
pushf
sub
push
ds
push
aam
aas
andb
mov
bound
imul
addw
outsl
ds
inc
sbb
xchg
pop
testl
jle
test
inc
push
lret
nop
inc
cs
jbe
clc
sub
jp
jl
outsl
clc
mov
cmc
ss
lret
lret
cmc
scas
js
aad
pop
fistpll
mov
jbe
sub
mov
pop
pop
and
mov
pop
dec
jo
enter
sahf
sti
test
mov
push
pmaxub
das
inc
stos
lock
mov
push
pop
pop
shll
sahf
fsubs
mov
cmpsb
cld
push
inc
pop
jbe
clc
hlt
arpl
nop
js
iret
lret
or
cmp
cmp
mov
insb
popa
in
shl
negb
sub
adc
test
push
add
jecxz
xor
and
and
or
jbe
and
incb
pop
movsl
pop
cmpsb
dec
cmp
cmp
cwtl
fsubr
pop
cmp
push
sar
adc
out
add
addr16
push
mov
imull
xchg
lods
lds
loop
push
out
add
aad
inc
filds
xchg
scas
dec
psubsb
jmp
add
imul
push
push
rcr
out
sbb
ss
js
adc
jge
jnp
sub
stos
mov
dec
dec
push
xchg
push
rcrb
mov
xchg
jl
mov
inc
icebp
mov
dec
jge
push
mov
jb
xchg
push
ficompl
add
into
rcrb
jg
xor
es
sub
and
lock
inc
popa
lods
inc
jmp
call
inc
cmc
xor
dec
movsl
mov
aaa
andl
cmp
enter
dec
xchg
negb
push
sub
fstps
sub
rorl
dec
adc
test
test
pushf
xorb
xor
push
leave
movsb
adc
xchg
push
pusha
cmc
push
xor
les
fsubrl
pop
or
jae
jmp
js
pmaddwd
pop
outsl
mov
push
enter
xor
add
jns
ret
sub
mov
push
cmp
or
fnstcw
sbb
pop
inc
mov
jg
rorl
lcall
mov
out
dec
adc
mov
incb
pushl
jge
imul
lds
ss
dec
mov
lahf
es
jl
cmpsl
inc
jnp,pn
sub
fstl
jae
or
pop
test
out
xchg
in
scas
movsl
cs
and
mov
xorl
jo
mov
dec
jne
inc
pop
xchg
cmp
or
pop
inc
dec
movsb
jge
adc
mov
scas
cmp
sbb
addb
add
test
sbb
jecxz
inc
popf
or
dec
arpl
test
sti
push
leave
push
fistpll
outsl
and
xchg
loop
pop
scas
loopne
mov
hlt
xchg
xchg
in
ja
xchg
mov
sbb
or
inc
call
sub
leave
cld
fdivrs
or
dec
mov
lret
mov
ss
push
and
in
outsl
leave
and
mov
subl
cmp
ja
sub
adc
add
jecxz
data16
xchg
pushf
dec
loop
add
push
adc
mov
loope
leave
outsb
icebp
ss
add
int
cld
jle
cmpl
imul
lret
adc
loop
sub
or
nop
aam
in
push
sbb
mov
mov
mov
dec
push
std
aas
adc
push
mov
inc
stos
cmpsb
sbb
aad
inc
out
sbb
or
dec
dec
or
test
mov
lcall
aad
out
jns
js
cld
in
add
in
jl
sub
adc
jno
sarb
jmp
push
sbb
cmp
push
or
cmp
in
bnd
imul
movsb
push
jmp
adc
aam
xchg
mov
out
add
shlb
gs
loope
fsts
in
and
sub
test
sbb
add
cmpsb
xchg
push
fsubs
fs
xchg
dec
dec
out
mov
in
add
mov
call
dec
cmp
ret
xorl
ja
or
xchg
pop
enter
jmp
lods
cs
cmp
cmp
and
cltd
xchg
jo
and
mov
xor
in
inc
adcb
and
fs
jns
push
test
loope
pop
scas
test
lods
sbb
gs
sub
movsl
mov
pop
lods
test
insb
test
fcmovne
dec
jmp
in
stc
imul
inc
pop
jns
aaa
int3
xor
pushf
sahf
jg
xchg
sub
cmp
sbb
or
jns
bound
add
or
scas
adc
pop
insb
rcr
or
pusha
sbb
pop
decl
cmp
mov
mov
out
adc
insw
push
xchg
movl
xchg
mov
push
fiaddl
cmc
sbb
or
add
ja
push
push
cs
ret
cmp
xorl
cld
pop
dec
jge
sub
in
add
push
clc
push
daa
clc
test
mov
insl
popf
aad
mov
popf
aad
scas
ds
mov
pusha
jecxz
jecxz
out
andl
lods
popa
mov
xchg
jle
dec
cmpb
jb
adc
lcall
pop
adc
pop
ljmp
scas
arpl
fsubrs
and
xchg
sbb
pusha
cltd
fsts
pop
out
mov
push
popa
ljmp
push
add
cmp
outsb
nop
rolb
or
mov
cmc
arpl
mov
ret
inc
pop
xor
es
xchg
and
lods
push
pop
rcll
xor
in
call
ds
mov
pop
adc
pusha
pusha
xchg
sbb
inc
test
shrb
es
rol
aam
push
mov
arpl
dec
push
and
subb
inc
imul
push
mov
cmpsb
mov
cwtl
imul
pop
pop
mov
repnz
dec
mov
ds
push
jns
sub
es
mov
or
popa
cmpsl
cmp
cmp
inc
lret
enter
mov
std
leave
adc
dec
aad
dec
aad
aaa
test
jae
or
mov
shlb
push
dec
addr16
imull
repz
adc
xor
je
std
adc
xor
je
sbb
xchg
push
push
or
jmp
cmp
mov
nop
sahf
sub
insl
neg
sbb
cmpl
int
pop
rcrl
lods
pop
jg
shr
in
nop
cs
fsubl
push
mov
or
push
jle
or
push
jg
xchg
sub
sub
lods
add
mov
je
scas
int3
mov
mov
stos
jp
mov
cmc
xchg
jmp
mov
nop
push
data16
sbb
test
cld
xor
inc
fs
and
cmp
and
pop
call
jmp
call
fs
push
les
pusha
stc
js
fistpll
inc
outsl
icebp
and
movsb
bound
outsb
ret
add
pop
mov
add
xor
es
push
sub
pop
loope
mov
imul
aas
mov
cmpsl
loope
sbb
jmp
inc
cli
mov
mov
out
mov
push
mov
call
jns
sbb
shrl
shr
jmp
pop
adc
mov
mov
subl
sbb
dec
in
pushf
sbb
in
inc
int
cld
dec
pop
sub
mov
jne
das
fdiv
cwtl
popa
mov
mov
fildl
in
jnp
mov
test
into
adc
fisttpl
out
aam
popa
cmp
pop
lret
call
or
mov
jle
inc
mov
xor
mov
mov
mov
or
mov
push
es
imul
lcall
push
mov
movl
cmpsl
pop
icebp
imul
in
push
xor
mov
loopne
clc
stos
out
call
and
jle
test
repz
dec
jecxz
sub
xchg
xchg
ljmp
rorl
mov
mov
imul
jg
cmpl
xchg
fsts
cmc
push
pop
shr
and
push
shlb
sti
or
insb
outsl
xor
pop
lret
mov
aaa
int3
stc
xchg
inc
call
or
and
or
sarl
dec
lods
push
test
jmp
fldl
adc
sbb
int3
dec
jnp
and
cs
in
xchg
fsubl
mov
cmp
add
clc
lcall
leave
push
jp
cmp
pusha
or
cmpsb
mov
push
xchg
jnp
ret
sbb
in
xor
mov
insl
jae
sbb
adc
and
pushf
int3
cmp
push
fcoml
out
jno
sbb
insb
nop
imul
call
fimuls
stos
lret
sbb
dec
pop
dec
fisttps
test
sub
bound
fists
xor
daa
sbb
add
arpl
jnp
inc
jmp
pusha
call
jo
mov
mov
mov
in
mov
lods
add
daa
mov
gs
test
in
stc
xchg
xor
cmpsb
xchg
or
xchg
sbb
pop
pop
insb
fst
inc
pinsrw
pop
incb
jg
jns
sti
cmp
outsl
pop
icebp
sub
shll
sub
roll
sbb
fwait
adc
out
enter
dec
push
dec
lret
sbb
andl
testb
test
arpl
dec
or
xchg
sbb
jne
lock
or
test
dec
jle
ljmp
mov
out
ss
fldl
jae
add
fmull
ja
add
mov
jmp
pop
mov
fucom
mov
jecxz
mov
nop
jge
clc
call
mov
sbb
insb
mov
dec
das
xchg
jne
xchg
icebp
xor
add
ds
mov
mov
add
mov
sub
ret
arpl
mov
fsubrl
push
lret
clc
nop
inc
call
loope
test
and
bound
and
clc
dec
adc
int3
loopne
sbbl
mov
xchg
mov
push
fmuls
xor
gs
in
test
int
xchg
addr16
and
ljmp
or
lar
xlat
xor
sub
xchg
mov
dec
lods
out
bound
sbb
mov
add
cmpsb
testb
xchg
xor
xchg
inc
and
mov
mov
lods
xchg
xorb
loope
iret
inc
adc
mov
lods
test
fiadds
adc
xchg
mov
aas
push
push
xor
xor
dec
nop
add
mov
adc
sbbl
into
inc
roll
or
scas
cmp
sub
sahf
sub
movsb
push
xlat
insb
inc
jae
jl
js
fstpt
int
cs
mov
pop
mov
inc
ljmp
push
dec
lds
jne
daa
into
fnsave
adc
mov
arpl
add
aaa
fmuls
lahf
in
fsub
pop
bound
mov
xchg
xor
push
and
repnz
loop
comiss
sbb
repnz
mov
imul
sbb
je
sbb
push
mov
pusha
test
out
pushf
jb
daa
jns
push
mov
insb
shlb
pop
sbbl
push
test
xor
sti
dec
adcb
loopne
xor
mov
test
sti
nop
enter
jo
into
rcll
sub
or
lret
nop
sub
xchg
ss
cmpsl
push
xor
insb
push
aas
iret
les
jecxz
fsubrs
cmpxchg
test
inc
mov
loopne,pt
add
and
push
rorl
or
mov
mov
mov
xchg
pusha
loopne
and
or
dec
fidivl
ja
loope
fldl2e
jo
pop
outsb
xchg
jo
xor
inc
cmp
scas
fildll
gs
mov
inc
mov
ret
lds
repnz
fnstsw
xor
xchg
mov
dec
dec
dec
fwait
add
dec
jae
leave
fstps
aas
mov
cmc
out
jae
jb
bound
mov
fiadds
out
movb
cli
in
cmp
mov
lea
or
push
test
imul
cli
push
xor
xchg
sub
imul
and
pusha
sub
mov
popa
addr16
cwtl
aam
mov
rolb
icebp
dec
daa
adc
out
dec
js
bound
call
ret
clc
aas
inc
outsl
stc
mov
sub
push
out
sub
popf
loope
or
lock
stos
clc
idiv
xor
and
cmp
in
call
test
jns
mov
jl
cltd
fisubs
push
add
aam
push
push
sbb
push
negl
dec
sbb
aad
insl
xor
jl
mov
cmp
hlt
into
sub
ss
pop
inc
or
sarb
xor
mov
mov
and
cmc
in
enter
nop
inc
jae
xorl
cmp
sbb
setg
popa
in
push
icebp
cltd
mov
sbb
jmp
test
mov
jge
push
xor
mov
adc
aad
addl
cltd
sub
inc
cmpsb
lds
xchg
mov
add
hlt
std
add
push
ljmp
cmpsl
xchg
rcll
arpl
adc
mov
adc
out
rcrb
push
mov
insl
push
stc
inc
stos
inc
jnp,pn
mov
orb
js
xlat
popl
inc
fmuls
adcl
jl
enter
cmp
cltd
dec
xchg
cltd
mov
sub
jl
cmp
in
scas
int
mov
xchg
pushf
int3
pop
sub
ret
pop
sahf
and
cs
sub
mov
jb
ret
test
sti
call
fbld
push
jg
inc
sbb
clc
lret
insl
fisubrs
dec
stc
xor
popa
mov
es
mov
and
pminsw
sub
ss
mov
jle
sarl
stc
and
mov
push
shlb
xor
cs
filds
sar
adc
icebp
ret
push
cmp
mov
das
cs
jg
in
hlt
into
sub
icebp
fidivl
out
add
xchg
cmc
mul
xchg
add
push
nop
sarl
xchg
xchg
push
sbb
test
push
movd
imul
shr
aad
dec
pop
pop
cmpl
pop
dec
lcall
pushf
ds
loopne
outsb
fadds
test
in
repnz
adc
out
mov
jmp
data16
mov
cmp
pusha
ret
or
xor
pop
or
aad
xchg
push
cmp
pop
in
inc
xchg
add
fs
and
push
cmpsl
mov
pop
dec
pop
adc
jmp
inc
les
mov
push
das
bound
pop
fsubrl
and
mov
cltd
data16
pop
inc
les
xchg
subb
sbb
scas
out
test
sub
mov
mov
daa
gs
loopne
cmc
stc
sub
push
mov
mov
das
hlt
jne
lahf
push
dec
push
into
jmp
jle
jg
xor
inc
mov
or
repnz
and
in
mov
notb
dec
sbb
rclb
int
loope
dec
adcb
std
aas
bound
adc
les
add
lock
or
in
sub
test
popa
inc
mov
and
das
jne
daa
pop
inc
aaa
sub
fst
dec
mov
stos
cmp
sahf
imul
mov
sti
out
pushf
fnstsw
lahf
xor
mov
jp
sbb
sub
inc
test
mov
lret
imul
push
ficomps
popf
or
cmpsl
pop
ljmp
sub
and
setg
adc
sbb
push
mov
adc
push
stc
and
cmp
jns
mov
adc
hlt
jno
pop
adc
mov
movsb
adc
ret
jnp
dec
mov
jae
insb
pop
cmp
mov
hlt
inc
push
test
scas
xlat
add
cmp
add
imull
insw
dec
inc
mov
mov
dec
jg
xchg
adc
jl
mov
and
inc
insb
rcrb
or
cmc
pop
fcom
stos
insl
push
xchg
lcall
pop
cltd
test
sti
lea
inc
daa
mov
movsl
cld
pop
or
fwait
pop
sbb
dec
or
je
jne
pop
or
in
test
sbbl
hlt
nop
out
push
negb
lods
and
inc
xor
aas
out
addb
jne
jns
test
je
mov
and
mov
and
daa
inc
movsb
repnz
roll
add
cmpl
and
lahf
ret
bound
mov
dec
inc
adc
or
mov
xor
dec
sti
addr16
push
seta
sbb
into
and
idiv
mov
stos
ljmp
adc
pop
scas
jno
mov
push
dec
imul
data16
adc
xor
pushf
cmp
push
fsubs
sub
lret
mov
popf
pop
repnz
je
dec
aas
mov
lea
lea
sub
mov
cmp
rcrl
or
andl
push
movsb
jmp
insl
push
or
pop
jmp
scas
mov
insb
pop
push
add
out
sbb
xor
sub
arpl
mov
lods
mov
fists
sub
daa
pop
mov
push
jbe
data16
mov
push
cmp
jg
stc
loope
push
mov
js
outsl
lahf
pop
cmpsl
or
add
inc
dec
xchg
scas
sbb
std
and
enter
bound
add
adc
push
cmpsl
xor
pop
push
lret
sti
xor
mov
mov
xor
ret
push
mov
dec
aad
or
inc
pop
cmp
fidivrs
jmp
push
add
or
jo
test
cltd
outsb
lcall
fdivrs
inc
jle
pusha
xor
xor
xlat
inc
and
rorb
mov
xor
add
dec
imul
rorl
adc
push
fs
add
jmp
out
add
jo
fadds
stos
mov
push
jae
dec
hlt
adc
cmp
fdiv
jmp
ret
lret
hlt
push
sub
jbe
in
pminub
lea
test
lds
xor
sub
jo
aaa
mov
icebp
insb
fidivrs
sahf
hlt
pop
stos
dec
in
dec
les
mov
cs
int3
inc
xchg
lods
push
xor
pop
ljmp
lea
cli
inc
push
add
in
lods
add
js
add
sbb
lods
fwait
insl
mov
adc
mov
mov
mov
jmp
test
sbb
lret
popa
dec
aaa
out
sub
gs
sbb
push
sub
inc
scas
loop
mov
adc
push
adcb
jne
shll
rcrb
mov
add
in
xchg
sarl
fdivrl
stos
and
lds
xchg
gs
jmp
cmc
insb
push
out
cld
aad
xor
pushf
dec
adc
push
pusha
sbb
sarb
or
adc
leave
pop
iret
inc
push
mov
les
insb
rcll
pop
out
mov
incb
jl
jbe
imul
das
nop
test
fldt
pop
int3
ja
jge
add
cltd
loopne
dec
out
lcall
fdivl
je
inc
movb
out
gs
sbb
xor
je
push
mov
outsl
and
sbb
outsb
xor
mov
push
mov
dec
lds
inc
out
pop
sbb
stos
mov
out
inc
cmpl
clc
stos
lods
test
dec
jge
rolb
or
lret
jp
xchg
cmp
ljmp
iret
movsl
cmp
out
pop
cmp
jl
inc
not
xlat
stos
nop
sets
insb
js
pop
mov
test
push
stos
push
cmp
push
jb
aam
dec
and
pop
sub
mov
push
loopne
es
adc
mov
pop
sbb
sbb
das
dec
push
mov
stc
rcl
pop
xor
je
mov
pop
pop
lcall
lcall
push
inc
mov
gs
imul
and
add
jbe
pop
cmp
andb
and
dec
push
jns
sub
sbb
nop
and
dec
lcall
inc
out
xchg
cmpsb
lcall
popa
and
pop
imul
shlb
dec
mov
imul
scas
ja
js
jmp
push
xchg
les
sar
cmpsl
adc
fldenv
pop
or
add
push
out
loop
add
push
or
pop
pop
mov
mov
adc
fsts
cltd
scas
mov
lret
dec
jmp
mov
cmpsb
fisubl
repz
pop
add
fmull
xchg
insb
inc
das
imul
xchg
stos
fnstsw
incb
or
cwtl
add
xor
loop
push
jne
lret
pop
jne
sub
sub
das
les
inc
sbb
mov
jp
adc
repz
push
jnp
cwtl
lock
mov
pushf
xchg
add
dec
push
lret
sbb
push
fidivrl
inc
sbb
sbb
popa
sub
arpl
andb
mov
xchg
cld
sbb
cmpsl
sbb
loopne
mov
jae
fidivl
insb
mov
cmp
mov
xchg
sbb
dec
adc
jp
test
lods
aaa
dec
rorl
ss
fisubs
test
adc
js
vcvtsd2ss
inc
pop
cld
sti
nop
xchg
xchg
jo
or
lret
mov
test
cltd
sti
mov
cltd
stos
jbe
lea
inc
ds
aaa
mov
rcr
jg
inc
in
out
push
clc
jle
xor
jg
xor
mov
pop
sarb
push
fdivrp
mov
inc
je
dec
sbb
cmpsb
xlat
dec
push
push
fmulp
fldpi
scas
push
js
pop
test
xchg
mov
sub
lock
and
push
clc
stc
pop
pop
dec
xor
decb
push
push
fcoms
or
repz
test
dec
mov
fsubl
fistl
mov
lock
sbb
xchg
or
jbe
jnp
mov
inc
shrb
gs
push
gs
popa
xlat
sbb
nop
in
xchg
pusha
jbe
pop
not
lcall
ljmp
inc
movsb
mov
mov
in
add
or
mov
into
cmpsl
push
xlat
jmp
shlb
sub
pop
mov
cmp
out
sahf
cmp
jmp
rorl
push
lods
loop
mov
shrl
xchg
loop
fwait
cmpsl
dec
insb
out
enter
cli
xor
xchg
fisttpl
lret
bound
cmp
stos
je
mov
add
jno
push
mov
pop
adc
add
add
fnstcw
ds
sub
adc
int3
shl
mov
in
dec
shrl
add
and
fsubr
xor
sbb
cwtl
into
imul
out
xchg
sahf
push
jne
sbb
gs
or
dec
mov
fistpll
sbb
jnp
pop
sub
call
scas
test
jmp
mov
dec
addr16
int
or
mov
int3
sbb
adc
pop
test
pop
add
cs
xchg
cmp
ljmp
incb
std
inc
enter
xlat
fbstp
cs
add
fsts
and
mov
inc
out
nop
popa
outsb
mov
mov
test
add
int3
cmpl
divl
subb
hlt
push
jb
sub
lfs
popa
jb
adc
mov
clc
sub
add
aaa
test
push
std
outsb
sub
push
jbe
xchg
xchg
xor
pop
sbb
xchg
lahf
jno
xor
test
jg
dec
cmp
jg
cmp
sub
mov
ljmp
sub
jmp
and
aas
loope
push
aad
mov
mov
icebp
sbb
sub
or
sbb
in
xor
and
and
xor
js
pop
mov
scas
mov
shl
ret
dec
repnz
scas
cmpsb
testl
imul
into
mov
cli
mov
mov
sbb
xorl
fsubr
es
xlat
push
pop
mov
pop
mov
pop
pop
sub
sbb
add
daa
or
mov
jne
mov
jecxz
mov
arpl
sbb
xor
push
mov
jns
or
xchg
push
or
mov
and
fildll
mov
sahf
inc
xchg
mov
ret
out
fwait
out
jo
xor
das
pop
xchg
xchg
xchg
sub
in
imul
or
ja
jle
outsb
jns
pop
cli
add
pop
shl
dec
adc
inc
push
sub
arpl
rcrl
rolb
outsl
or
cmp
out
push
mov
ret
jmp
inc
sbb
sub
into
lock
jae
loopne
pop
push
push
dec
rcll
aaa
jns
cmp
add
rcrl
xchg
lock
cmp
add
xchg
and
subb
aad
rolb
nop
xor
pop
sbb
lea
xor
xor
scas
inc
adc
push
mov
test
cmpb
mov
imul
jmp
xor
add
sub
pop
add
fistpll
faddl
mov
mov
mov
test
aaa
inc
pop
test
call
in
stos
xrelease
xchg
es
in
dec
jg
sub
adc
dec
popf
sahf
add
cld
out
je
or
xchg
mov
or
pop
xor
push
in
test
fdivs
outsl
and
cmpsl
nop
cmp
fbld
addr16
ss
add
std
sbbb
negb
jp
mov
lea
mov
sbb
xchg
jbe
adc
mov
sti
sub
mov
xchg
and
mov
mov
loop
sbb
adc
pop
js
in
xchg
inc
xor
push
push
cmc
adc
xlat
fstpt
lods
jb
jb
mov
test
int3
and
pushf
and
xchg
stos
test
cmp
add
cmp
mov
push
dec
into
test
ja
repnz
lret
pusha
sbb
and
pop
sub
incb
pop
sbb
hlt
in
mov
sahf
lods
cmpsb
fadd
jge
push
fstpt
mov
add
inc
call
sahf
fs
xor
rolb
sbb
cmp
mov
cmp
aam
sub
or
jg
bound
daa
jbe
mov
xchg
pop
fcompl
push
cmp
sub
std
xchg
adc
push
mov
cmp
xor
jbe
jo
cmp
adc
xchg
sub
out
loop
push
scas
test
pop
pop
xchg
mov
xchg
andb
add
adcb
notb
loopne
clc
lds
lods
and
lcall
mov
inc
rolb
fadd
iret
inc
sbb
fldenv
lret
filds
enter
mov
adc
mov
dec
lods
nop
icebp
push
dec
jmp
jbe
xlat
sub
rcll
mov
xchg
mov
sub
movsl
sub
or
adc
in
inc
das
dec
arpl
inc
cmp
jmp
nop
sahf
popf
lret
jb
aam
scas
pop
add
sbb
test
fldt
bound
lods
rolb
addl
std
xchg
mov
ret
mov
fildl
inc
sub
mov
popf
xchg
cmp
pusha
shlb
fdivrs
mov
sub
cmp
xchg
xchg
jmp
mov
movsb
movsl
clc
lret
mov
popf
xchg
cmp
or
in
rcl
shll
push
dec
push
pop
jge
js
lret
mov
inc
mov
fld
daa
hlt
mov
mov
pop
cmp
nop
push
daa
outsb
jbe
lods
and
adc
dec
and
int3
movsl
int3
cmp
adc
jl
arpl
mov
mov
out
int
xor
leave
bound
das
pop
dec
push
clc
dec
adc
dec
mov
add
inc
xor
jo
jmp
mov
sbbb
loope
lret
orl
cltd
sub
or
mov
jae
jno
push
push
repz
dec
mov
sbb
test
es
add
xor
add
mov
les
xchg
sbb
divb
loope
adc
adc
mov
cs
cltd
ljmp
lods
shll
xor
test
xchg
xchg
addl
pop
lret
pushl
lcall
sti
cwtl
mov
xchg
sarl
xor
jnp
cmp
lods
sbb
sub
fwait
nop
orb
mov
sbb
sub
adc
jns
stos
int
insb
xchg
cs
imul
mov
outsb
push
mov
or
cld
les
jb
jmp
cmp
or
pop
sub
scas
push
testb
cmp
sub
movsl
inc
inc
mov
decl
jecxz
mov
outsb
mov
icebp
sbb
mov
push
pop
and
or
sub
inc
clc
dec
stos
add
ror
shlb
test
stos
add
pop
pop
xor
pop
push
insl
dec
adc
jmp
dec
dec
dec
jne
sbb
data16
push
sub
stos
jmp
add
push
lret
jo
fisttps
and
mov
lret
xor
fldcw
xlat
add
lods
enter
mov
sbb
pushf
inc
dec
and
int
les
jb
push
dec
push
pushf
mov
adc
dec
out
jmp
mov
mov
adc
mov
or
fsubs
insl
ja
jbe
in
aaa
das
ss
mov
mov
ret
in
cld
add
dec
pushf
mov
push
inc
sarb
mov
cmp
inc
andb
outsb
daa
mov
lods
add
cli
xchg
je
ret
jnp
push
and
in
adc
push
add
aaa
pop
in
fbstp
es
adc
mov
xor
jnp
fistl
add
mov
sub
cmpl
dec
cmp
xor
mov
mov
aad
push
ret
xchg
jecxz
xor
aad
push
in
iret
sub
fdivp
dec
dec
dec
rcrb
mov
fstl
or
add
and
sub
xor
sub
enter
push
sbb
sbb
mov
jbe
mov
movsl
iret
pop
cmp
jl
ljmp
js
pop
lret
pavgw
out
xor
xchg
xchg
loop
push
fldcw
mov
xchg
mov
jecxz
loope
cmp
or
adc
jecxz
dec
bound
outsl
arpl
roll
outsb
movsl
mov
mov
and
adc
jbe
sbb
out
aad
cmpsl
dec
jmp
nop
test
out
jb
iret
xor
iret
fidivrl
inc
popf
mov
inc
in
add
inc
subb
jg
or
in
cmpsl
fwait
pop
mov
mov
divb
in
es
call
fbld
inc
sub
sub
scas
loop
cmp
lret
enter
call
in
push
in
mov
cmp
add
push
or
enter
iret
or
fwait
adc
inc
loop
lds
adc
push
addr16
lods
push
and
lods
cmpsl
negb
pop
or
push
and
push
push
aad
sbb
pop
xchg
cmpsl
jge
cvtdq2ps
fsubl
mov
dec
dec
fwait
or
mov
scas
inc
lods
or
adc
ds
shr
nop
loope
ss
or
loop
je
cld
jns
ss
mov
jl
js
push
mov
jge
popa
pop
inc
inc
dec
jne
imul
jl
or
add
in
stos
jns
pop
xchg
test
sbb
push
mov
call
aaa
int
adc
dec
inc
movsb
test
jp
cli
mov
subps
notl
pop
add
cwtl
jmp
xchg
imul
clc
adc
addl
push
sbb
cmp
outsb
lret
sti
inc
scas
out
arpl
stc
shr
xor
popa
mov
mov
lds
mov
test
mov
sti
shlb
sub
imul
dec
cmp
lahf
mov
sbb
push
jge
cmpsb
adc
jnp
into
add
xlat
iret
pop
xorps
cmp
fscale
or
push
pop
lret
fldl
icebp
jne
pop
pop
mov
mov
jmp
pushf
icebp
aad
cmp
imul
pop
push
push
lods
cmp
dec
mov
int
jo
repz
or
xor
xor
cmp
adc
fmulp
add
js
xor
popa
push
push
pop
xlat
sbb
dec
add
nop
xlat
subb
mov
mov
fbld
xchg
and
jbe
sub
pop
test
stc
push
jae
lret
outsb
cmc
fildl
or
jo
sub
and
loopne
stc
mov
test
inc
cmc
push
leave
fs
in
cmp
push
sbb
popf
cmpsb
push
out
aam
mov
pop
sub
mov
mov
cmpl
jle
cwtl
xchg
push
push
jle
sbb
adc
insl
dec
and
jae
sub
inc
in
stc
iret
cmpsl
push
shr
sbb
fnsave
mov
add
and
pop
or
and
rcr
pushf
cltd
xchg
stos
or
int
into
jg
call
or
adc
add
mov
test
inc
jns
lret
lods
or
nop
pop
out
push
jne
jmp
les
push
cmpsl
adc
leave
dec
fs
rcr
jp
sti
xor
sbb
loope
inc
xor
clc
pop
pop
mov
push
add
push
mov
mov
inc
mov
arpl
pop
loope
dec
jecxz
xchg
rorb
cmp
lock
mov
nop
insb
mov
mov
push
sub
arpl
roll
sbb
fucomip
mov
dec
or
fdivs
cmp
in
leave
out
push
lret
mov
push
iret
data16
in
out
adc
incl
xchg
add
rol
std
sbb
stc
ficompl
xchg
push
mov
addr16
or
fisubs
addr16
jno
adc
outsb
loop
pop
inc
or
cwtl
add
cmpsb
cld
je
outsl
add
inc
aam
pusha
cmp
mov
shlb
dec
mov
mov
mov
jae
push
or
xchg
jmp
jo
repz
dec
rcr
fstpl
lods
jno
das
inc
movsl
outsl
shr
fstps
ret
adc
add
rorb
inc
sbb
pop
movsl
jno
cmp
dec
fdivl
popa
mov
movsl
loop
push
sahf
fists
je
in
int3
rcll
shll
jecxz
jl
cld
cmpsl
das
fisubrl
gs
pop
jns
push
cmp
lcall
jo
ret
dec
fistl
cmpsb
test
pop
iret
mov
popf
arpl
das
scas
cmp
or
jo
test
mov
es
data16
lret
loope
insb
pop
sbbb
fildl
fildll
add
add
sub
pushf
cmp
lods
cmpsl
mov
and
fdivl
cmpsb
stos
test
jge
inc
mov
push
pop
push
cltd
or
cmc
ror
sub
adc
clc
pop
and
ss
fildll
pushl
push
aas
pop
pop
das
jno
jnp
or
repz
in
std
shrl
out
ds
bound
scas
call
data16
out
jb
sti
and
and
xadd
pop
xor
lcall
pop
cmp
inc
adc
mov
jp
mov
fdivs
xchg
cmp
lods
cmp
mov
push
cmp
outsl
fistpl
dec
fidivl
test
inc
sub
dec
hlt
inc
jecxz
mov
mov
lret
insb
int
jnp
imul
hlt
fs
loope
cmpsb
nop
adc
lret
shl
ret
outsl
ret
icebp
sbb
mov
mov
mov
and
bound
stc
push
fs
ret
xlat
mov
cmc
fimuls
jno
ljmp
outsb
mov
leave
and
das
dec
cld
push
ret
ret
jo
push
enter
mov
dec
test
cmp
sahf
xlat
xchg
loop
jo
enter
cmp
into
clc
lret
test
and
fldenv
pop
outsl
xor
xor
lret
lahf
shlb
cs
jae
sub
push
ss
sub
inc
aam
add
rcrl
mov
ljmp
mov
xor
loopne
push
mov
or
xchg
in
sub
mov
lret
and
outsb
popf
sbb
and
sub
sbbl
jmp
xchg
mov
lret
mov
sbb
cmp
sahf
addl
dec
mov
popa
mov
jbe
pop
mov
xor
push
popf
dec
adc
out
ficompl
push
test
push
pop
push
cli
andb
mov
divb
and
xchg
arpl
xchg
data16
ror
outsl
shl
cmpsl
ret
cld
lea
and
std
cmp
dec
dec
lods
lods
mov
fxch
hlt
shrb
cld
dec
or
movsl
dec
sbb
pop
out
cmpsl
bound
in
imul
mov
fwait
inc
gs
pop
inc
mov
ljmp
lsl
sbb
loopne
xchg
fwait
dec
adc
repz
stc
sbb
mov
in
cs
shl
and
cmp
pop
subl
sub
icebp
dec
aam
pop
sub
mov
jns
pop
outsb
popf
mov
lea
pop
stos
pop
pop
add
xchg
sbb
ja
or
std
cwtl
jo
xor
inc
fisttps
jecxz
imul
lock
aaa
std
xchg
and
mov
push
sbb
out
aad
enter
sub
mov
scas
pop
and
loop
movsl
scas
jns
stc
aam
in
add
mov
in
sub
add
sbb
hlt
add
jecxz
mov
in
clc
sub
inc
pop
pop
inc
cwtl
jb
leave
rorb
add
sti
or
sbb
sub
dec
sbb
int
icebp
fisubl
movsl
out
mov
jg
aaa
out
push
rorl
mov
push
dec
enter
mov
mov
sub
or
call
push
push
jmp
xor
ret
mov
hlt
frstor
and
pop
leave
xchg
or
or
lods
jecxz
sub
cld
ret
mov
push
inc
mov
aas
pop
sbb
xchg
adc
test
test
inc
mov
sarl
lods
dec
push
clc
mov
icebp
mov
pop
loopne
test
mov
xchg
jb
mov
and
and
arpl
jp
lods
scas
sub
decb
and
fcmove
ret
push
fsubrs
stos
leave
pop
aam
rcll
ljmp
mov
les
sbb
negb
mov
add
push
xchg
and
inc
loope
nop
gs
add
push
std
add
repnz
jo
insl
xchg
push
push
add
pop
out
mov
mov
fwait
pop
mov
xorb
xorl
rolb
cmpsl
mov
inc
in
xor
lea
push
js
outsl
push
push
mov
cmp
leave
cmpsl
rcrb
div
push
xor
cld
mov
dec
pop
in
sub
adc
mov
push
mov
xchg
push
xchg
daa
sub
test
mov
push
xchg
in
dec
loop
pusha
push
and
and
test
and
xor
xor
xchg
andl
rolb
fsubrs
and
fsubrl
mov
mov
mov
push
pop
jecxz
pop
pop
and
xor
jns
inc
dec
fwait
xchg
test
push
dec
in
icebp
cltd
fldenv
dec
mov
dec
scas
fistps
sahf
push
inc
lahf
subl
mov
sub
mov
in
subb
rcrb
inc
mov
add
cmp
dec
xchg
adc
mov
jle
add
in
sbb
data16
cli
sub
push
popa
dec
dec
mov
cli
enter
cmp
cld
adc
push
inc
cmpsb
mov
lds
cmp
xchg
xlat
cmpsl
jge
cltd
faddl
pop
insl
nop
jmp
mov
pusha
lods
in
iret
push
icebp
rcll
int
inc
scas
mov
ljmp
push
adc
jo
fsubrl
stc
cli
jmp
push
mov
xchg
sbb
xor
cmp
cmp
shll
imul
mov
jo
rorl
imul
xor
gs
rcll
fmull
cmp
mov
outsb
mov
cmc
mov
cmp
jb
ret
in
dec
xchg
hlt
ret
jb
or
incl
cmpl
push
pushf
xor
mov
cltd
pop
xchg
cmp
or
jmp
rcr
mov
jmp
mov
sbb
out
pop
inc
inc
xor
ret
pop
cmc
outsb
xlat
fbstp
dec
jge
sub
inc
stc
mov
arpl
mov
mov
mov
out
xor
jmp
mov
inc
sarb
fcoms
cmp
imul
xchg
lds
scas
imul
mov
xchg
pop
out
mov
sahf
adc
add
insb
mov
sbbl
push
test
xchg
fildll
pop
jns
xrelease
sub
push
add
jecxz
pop
cmp
push
jae,pt
ds
popa
test
fnsetpm(287
sub
aas
mov
sub
pop
js
stc
fpatan
leave
mov
int
jnp
sbb
stc
jbe,pn
sub
push
clc
sub
mov
xchg
jno
inc
xchg
clc
xchg
push
jl
fnsave
inc
jge
mov
hlt
push
add
addr16
ret
or
sub
cmp
pusha
insb
hlt
into
sarl
insl
aam
rcrl
mov
jp
jns
mov
fs
aas
les
dec
mov
adc
xchg
out
mov
mov
dec
in
hlt
or
fmul
shll
xor
cli
jae
dec
shl
sub
dec
mov
test
and
fwait
ljmp
imul
push
aam
xchg
rclb
lcall
mov
xor
inc
lahf
aad
repz
pop
test
inc
addr16
and
jge
clc
aam
icebp
mov
jnp
push
cs
sbb
add
xchg
sbb
out
xor
lcall
fwait
ja
jae
loop
mov
imul
lea
ss
inc
add
cli
cmpsl
int3
add
jl
push
fdivrs
mov
and
push
mov
sti
rep
jl
sbb
lods
or
insl
mov
pop
xor
jbe
lcall
adc
mov
mov
jp
add
into
push
fbld
inc
lret
imul
fwait
clc
mov
mov
dec
sti
lcall
and
sbbl
sub
stos
fstl
clc
movsb
test
faddl
sbb
mov
repz
jge
push
das
pop
cmpsb
cmp
fcmovu
push
inc
fisubrs
iret
adc
in
insl
jb
lods
sub
ret
dec
cmpsl
mov
adc
faddl
outsb
xchg
push
data16
sbb
mov
ss
popa
lock
xchg
fstpt
sub
push
mov
ds
mov
fimuls
sbb
ljmp
inc
rcl
pop
call
nop
in
xor
lret
popa
mov
sbb
jnp
test
sti
xchg
sarl
sahf
js
shlb
jmp
mov
shrb
sub
aaa
cmp
paddq
in
jge
nop
stc
add
mov
and
add
adc
dec
es
pop
push
test
mov
add
mov
jecxz
or
arpl
push
fisubrl
or
popa
ret
cwtl
adc
fadd
sbb
push
jmp
dec
movsl
loope
push
pop
xor
mov
rclb
add
cmc
pop
scas
lcall
subl
cmpsb
push
inc
cmp
adcl
popf
pop
cmp
ja
adc
sbb
and
inc
shl
cmp
and
out
sub
push
lods
mov
jns
imul
das
adc
sbb
stc
cmp
repz
add
test
mov
test
cld
dec
clc
test
fs
ffree
popf
adc
aas
mov
xchg
repz
aam
call
cmc
ss
push
bound
rsqrtps
mov
mov
sub
jg
mov
add
xlat
pop
sbb
ljmp
xor
and
push
push
movsl
fidivrs
data16
jmp
adc
or
or
adc
pop
pop
push
lds
inc
push
scas
cmpsb
andb
inc
pop
xchg
daa
adc
xchg
adc
ljmp
pop
iret
repz
xor
rol
push
vstmxcsr
adc
pop
xlat
enter
inc
ja
mov
jae
jbe
aad
ret
loop
or
mov
sbb
or
cld
xchg
xchg
jne
mov
int
push
icebp
jge
loope,pt
leave
dec
fnsave
push
add
lea
ljmp
ret
and
pop
loop
imul
mov
dec
xor
stos
repnz
mov
outsl
sbb
jmp
clc
fs
dec
aas
lods
lcall
xchg
ret
xor
aas
push
sahf
mov
sub
and
mov
lahf
jae
in
dec
or
ja
adc
sub
repz
mov
nop
jb
lret
stos
mov
jbe
and
notb
fldenv
cld
je
mov
psubq
rorl
js
xor
jns
push
mov
sub
into
jg
ljmp
rcrl
lea
jb
pop
fsubrs
das
stos
xor
shlb
mov
int3
aam
sbb
add
jp
jae
or
fst
mov
vmread
outsb
sub
push
test
mov
xlat
push
adc
stc
or
sbb
cmpsl
push
stos
out
mov
rclb
sub
push
outsb
sub
insb
xor
push
test
out
leave
mov
jno
enter
div
imul
or
mov
ret
mov
fs
outsb
xchg
or
pop
lahf
jg
xor
push
mov
loopne
sub
sbb
std
dec
out
dec
inc
add
lea
aam
and
stos
scas
rcrl
outsb
fstpl
cmp
xchg
sahf
iret
iret
mov
jb
arpl
sub
into
sti
sbb
mov
mov
fwait
ds
jge
adc
dec
mov
in
loopne
mov
lahf
call
ret
sbb
xchg
cmpsl
fnsave
imul
ret
xchg
push
push
push
push
fwait
out
sub
mov
or
xchg
rcrl
xchg
jg
fcomps
fldcw
or
repz
fstl
lahf
loope
pop
loop
gs
dec
inc
xchg
jno
es
dec
mov
pop
test
push
pop
ss
pop
dec
mov
add
pop
rorl
push
imul
sbb
clc
into
add
lcall
cltd
push
pop
add
xchg
loopne
mov
jp
icebp
jb
jbe
jl
das
cld
out
xchg
sbb
push
or
lock
jg
movsl
jg
ret
push
shrl
aaa
sub
enter
pop
or
fdivr
rclb
dec
mov
stos
push
subl
jle
dec
lcall
std
test
adc
fsubrl
adc
loope
lcall
and
and
sbb
jmp
sbb
out
popf
leave
lea
je
push
mov
or
jo
cmpsb
cmp
mov
ljmp
sbbl
hlt
push
xor
mov
aam
lds
mov
add
mov
mov
div
pop
int
jne
ja
ret
xchg
xorb
call
xor
fldenv
inc
repz
inc
jns
js
icebp
mov
push
xchg
loop
clc
nop
inc
or
rorl
iret
xchg
jno
mov
xchg
pop
lods
imul
lods
in
rcll
sti
push
lods
jecxz
jbe
iret
sub
inc
into
jg
pop
stos
mov
push
loope
inc
dec
mov
imul
or
dec
mov
imul
cmpsb
daa
pop
inc
add
or
rclb
dec
mov
inc
mov
cmc
mov
xchg
push
pop
fcomip
mov
lods
clc
cli
mov
cmp
sti
mov
scas
neg
adc
xor
test
test
outsb
xchg
pop
pop
cltd
std
mov
mov
mov
fsub
in
stos
cmp
dec
xchg
ljmp
mov
leave
pop
hlt
push
mov
pushl
popl
push
cld
cmp
loop
jmp
pushf
insl
cmp
movsl
aaa
icebp
jp
jecxz
add
mov
mov
or
lds
idivb
pusha
mov
add
dec
and
or
dec
dec
xor
cmp
sub
push
inc
rorl
enter
cmp
fidivrl
jbe
cmc
stos
pop
push
xchg
add
sbb
jmp
sahf
fcmovne
pop
repz
push
cld
out
and
adc
in
imul
mov
movsl
in
mov
in
fcoml
xor
loop
imul
out
mov
xor
dec
daa
ret
fildl
aad
xor
loopne
cs
jbe
xchg
gs
aas
cmp
je
lret
stos
jbe
cli
ss
jns
repnz
xchg
xor
lret
scas
into
sub
inc
ficomps
rcrl
push
cli
jns
and
jne
cmp
stos
mov
out
cmc
or
jp
scas
fnstsw
or
adc
adc
xchg
popa
lods
sbb
mov
sbb
pop
xor
or
filds
into
mov
fidivs
xlat
push
pop
mov
dec
sbb
or
out
xor
jge
inc
add
lcall
outsb
xor
sbb
and
mov
lret
push
into
fnstsw
push
dec
cmp
xor
pop
ss
int3
mov
gs
in
inc
jl
mov
jne
dec
fwait
pop
add
pusha
push
xor
popa
inc
mov
lea
cmp
testl
test
daa
xor
shll
sub
sub
out
insb
inc
inc
cli
stos
cmp
popa
flds
jmp
push
and
fs
or
pusha
pop
into
cmc
adc
loop
loope
dec
mov
inc
xchg
mov
fcmovbe
sub
sahf
sbb
mov
xor
mov
lahf
lahf
ljmp
dec
aad
cli
mov
ret
insl
daa
lods
xor
dec
iret
rcrb
add
les
pop
mov
mov
jl
ss
push
cmc
lcall
test
mov
pop
cmp
inc
fstp
in
rorl
adc
push
push
push
es
xchg
out
mov
daa
pop
ret
xchg
lahf
addl
and
in
ret
inc
adc
push
lock
std
adc
and
insl
jbe
rcrb
mov
xor
flds
lcall
dec
xchg
adc
ret
adc
mov
mov
jb
ja
nop
mov
xor
adc
in
or
xor
fildll
cmc
aas
or
xchg
mov
imul
insb
jbe
mov
rcrb
ja
jbe
sbb
out
xor
lret
xchg
popa
sub
fmull
jmp
aad
sbb
and
ror
shlb
pop
imul
mov
lahf
xchg
cmp
into
cmp
push
push
xorl
into
push
jp
push
aam
push
fldl
xacquire
xlat
out
lea
or
sub
jnp
sarl
jae
dec
lds
loop
scas
mov
jmp
outsb
pop
xchg
rolb
cmp
repz
sbb
movsb
ret
push
mov
push
dec
cmc
mov
in
ss
mov
ficompl
pop
test
inc
inc
int
outsl
xor
fisubl
out
inc
mov
shrb
inc
scas
xor
clc
cmp
fistps
pop
imulb
sub
sbb
not
fxch
inc
sub
jl
imul
in
in
xchg
fnstenv
aaa
sbb
stos
mov
sub
repz
jg
jge
aam
cmpsb
fwait
rcr
shrl
movsb
shrb
xchg
add
insl
in
lea
and
lret
les
mov
pop
shll
in
xor
jb
sub
xor
mov
sub
cld
outsb
imul
lods
pop
pop
lods
or
sub
enter
xor
popf
rorb
xor
fwait
mov
adc
out
adc
and
mov
push
adc
les
orb
xchg
mulb
cli
test
mov
cmp
and
gs
ds
movsb
mov
mov
repnz
sahf
xlat
loop
pop
cltd
outsl
inc
cltd
int3
stos
adc
jl
jg
jg
xchg
add
sbb
out
out
hlt
rorl
xor
lcall
pop
std
cmp
mov
cltd
push
popa
scas
dec
cltd
pop
mov
pop
stos
insb
jl
jb
jg
cmpsb
jo
leave
pop
jb
or
out
pushf
and
fsubr
repz
bnd
sbb
cmp
mov
add
int
jns
jmp
xchg
cmp
dec
mov
jae
adc
pop
insb
pop
push
xlat
pop
je
mov
or
aam
das
mov
rcll
loop
add
sbb
fsubrs
adc
in
cmp
and
mov
sbb
inc
sbb
mov
mov
mov
shll
push
jmp
push
push
pop
adc
pop
std
cs
test
mov
testl
imul
push
lods
sub
outsl
hlt
inc
mov
xor
leave
push
mov
lret
repz
lret
frstor
lea
cwtl
arpl
ljmp
in
lret
mov
ret
fsubl
leave
cmp
cmp
cltd
aaa
jbe
fistl
in
ffree
xor
bound
adc
lcall
lcall
rcrb
jb
cmp
es
sbb
inc
cmp
mov
jnp
adc
dec
or
xor
sub
mov
inc
loop
push
stc
into
in
cmpsb
or
cmpsb
imulb
dec
inc
js
sbb
or
dec
pop
xor
ja
pop
insb
gs
fwait
test
dec
mov
aad
add
jnp
mov
lock
lcall
in
out
push
cmpsb
xchg
pop
jo
and
addr16
xchg
outsl
or
jae
insl
mov
fisubl
lahf
push
add
cwtl
sbbb
mov
and
cmp
xlat
fcompl
mov
or
scas
or
lahf
push
jne
loop
pop
jno
out
mov
xchg
push
loope
int3
fildl
add
loope
pushf
push
mov
pop
inc
jbe
call
dec
shr
loop
and
stos
movsl
test
xchg
ljmp
xchg
mov
xlat
mov
loopne
cmp
movsb
add
xchg
or
push
lods
movsb
mov
pop
fisubl
sub
adc
cmp
bsf
adc
loopne
xchg
push
out
sbb
xlat
stc
or
inc
xor
mov
rcr
sahf
jp
lret
xchg
dec
or
gs
xchg
scas
fnclex
mov
arpl
sbb
leave
xchg
and
jge
mov
mov
rcll
add
imul
push
dec
and
jg
lods
arpl
sub
popa
xchg
ja
mov
adc
push
xchg
mov
lds
fsubrp
roll
jle
aaa
mov
cmc
pushf
fildll
dec
mov
daa
icebp
xor
sub
ss
leave
adc
and
mov
scas
mov
decb
xor
pop
jno
jmp
adc
xchg
sbb
popf
sbb
aaa
push
movsl
es
lock
push
fnstsw
les
testl
jns
jae
add
scas
dec
mov
jle
sarl
jno
inc
js
sarb
out
mov
orl
xchg
add
sub
test
dec
jb
testb
cmpsl
pop
pop
xchg
stos
add
out
push
and
mov
cmp
lret
das
sbb
rorb
add
xor
in
and
pop
xchg
iret
movsb
out
test
sbb
jo
adc
dec
shlb
ret
rolb
xor
or
push
and
push
ss
or
nop
dec
dec
scas
iret
mov
xor
xchg
adc
sbb
inc
pop
inc
jmp
dec
rcrb
repnz
inc
in
notb
push
cltd
dec
mov
lahf
jb
mul
mov
mov
mov
xchg
dec
jnp
mov
shll
inc
cwtl
ds
iret
ret
lret
stos
aaa
dec
jp
jne
xor
push
dec
jle
pop
repz
enter
out
mov
cmpsl
push
sub
push
sbb
stos
pushf
lea
dec
insb
stos
fldl
in
mov
push
mov
add
aas
pop
in
in
and
push
cmpsl
add
push
xlat
push
sub
inc
sub
add
or
and
aas
jp
cltd
lock
inc
jae
lds
sahf
push
aaa
adc
inc
cmp
cmp
addr16
cmp
orl
jmp
dec
shrl
sub
test
es
std
lods
and
push
mov
push
loopne
mov
or
pop
push
pop
or
add
in
leave
xchg
fwait
mov
cmp
and
repz
iret
dec
cmp
cmp
mov
or
loopne
sbb
imul
mov
add
lahf
mov
sbb
inc
movsb
mov
in
mov
outsl
lret
sbb
sub
sbb
stos
sbb
cs
sub
sub
icebp
hlt
test
scas
mov
mov
out
movsl
pop
and
scas
pop
mov
enter
aad
adc
dec
pop
or
pop
inc
jbe
jns
push
mov
hlt
arpl
ficoml
fadds
cwtl
outsb
js
add
into
shl
rcl
xor
cmpsl
cmp
subb
mov
or
les
adc
nop
cld
es
divb
push
push
pop
push
sbb
sub
aas
mov
pushf
push
ficoml
dec
xchg
pop
mov
mov
xor
testb
cs
stc
daa
jge
lahf
divl
pop
imull
inc
ja
xchg
shlb
pop
pusha
stos
mov
jmp
sbb
insb
add
imul
addr16
lods
mov
hlt
ds
jecxz
test
xchg
test
xor
adcl
jne
add
arpl
fwait
cli
jp
fs
dec
outsl
add
outsb
fisubl
jle
lret
std
rcll
out
xchg
jbe
xchg
neg
loope
mov
clc
lret
inc
cmp
out
xchg
adc
add
mov
cmp
out
out
inc
or
jmp
cmp
pop
sbb
in
insl
cmpsb
lea
bound
pop
xor
jb
icebp
fneni(8087
cmp
inc
imull
fstpt
fs
outsl
fstl
adc
lcall
leave
push
addr16
add
xor
outsl
xorl
inc
add
mov
jno
jle
and
hlt
sbb
add
addr16
mov
jbe
nop
mov
stos
add
pop
lret
adc
in
stos
std
aam
inc
sub
aas
jae
stos
in
jno
jns
xor
insb
jno
add
fdiv
inc
rcl
test
addr16
jne
roll
and
pop
mov
mov
mov
push
enter
pop
dec
data16
cmp
lods
xchg
dec
or
cltd
sbb
cld
testb
pop
sub
mov
dec
mov
cmc
sar
push
mov
mov
adc
into
add
sub
insb
push
imul
bound
sub
cwtl
clc
add
pop
jmp
cmc
mov
lock
bound
cmpsl
xchg
test
mov
bound
sbb
and
sbb
xchg
dec
cltd
dec
out
in
mov
lods
stos
sarb
jbe
jl
shll
or
mov
push
mov
daa
int
adc
data16
jge
lods
shl
test
rorb
insb
ret
jae
nop
pop
xchg
pop
popa
sar
loop
aaa
xchg
mov
inc
xchg
outsb
mov
inc
test
cld
fcoml
call
add
repz
mov
lea
sbb
push
aad
movsl
inc
cli
dec
inc
ljmp
jbe
imul
mov
mov
test
push
stos
sahf
test
sub
mov
pop
les
mov
lods
lock
xchg
and
mov
xchg
inc
outsb
mov
fldcw
cmp
frstor
sbb
push
arpl
leave
data16
shr
push
dec
jae
cmp
jb
inc
jne
pusha
enter
mov
nop
ss
sub
les
orb
mov
in
or
enter
jmp
xor
mov
add
sbb
add
sub
arpl
pop
push
sahf
aad
outsb
or
cld
lods
pop
push
jns
add
pop
ret
fdivrs
adc
pop
cmpsb
popf
loopne
fnstenv
loop
mov
ja
bsr
xchg
add
or
cmp
cld
xlat
pop
stc
jl
adc
mov
jo
adc
out
mov
cmpsl
xor
das
out
xchg
mov
jnp
push
inc
and
adc
testb
cmpsl
clc
mov
outsb
sbbl
loop
das
or
sarb
ss
xor
jns
stc
push
out
shll
pop
pop
sarl
fiaddl
out
popl
mov
es
mov
fdivrl
cwtl
test
mov
cmp
imul
jle
enter
jecxz
test
dec
add
jo
mov
jecxz
rcll
leave
pusha
and
cmp
jmp
push
lcall
insb
adcb
inc
mov
jle
ds
push
xor
mov
idivl
aas
push
ljmp
movsl
or
sbb
loopne
std
sbb
xchg
repnz
jg
or
testl
push
or
lcall
or
lods
xor
pushf
add
pop
sbb
push
cmp
and
adc
loope
testb
cmp
jecxz
lods
xor
sbb
add
test
fsts
lret
in
mov
cmpl
push
jge
daa
enter
mov
lret
or
rcrb
test
xor
add
std
push
jnp
mov
fwait
and
mul
fidivs
pop
xor
aam
test
and
sub
dec
jns
jge
imul
mov
sti
fwait
sahf
inc
ljmp
inc
pop
push
fsub
mov
mov
pop
repz
popa
push
and
jge
dec
xor
lret
mov
mov
fdivs
xchg
fcompl
cmpsb
jne
jbe
into
andb
rorb
inc
cld
ror
push
or
sub
insb
nop
pop
mov
ss
std
xchg
ja
mov
sub
mov
leave
add
mov
lock
lock
les
imul
dec
or
std
inc
mov
imul
pop
lahf
xor
mov
mov
dec
xor
into
fisttps
fwait
lret
xchg
sbb
outsl
xchg
mov
aad
pop
xchg
loop
jp
imul
xor
scas
ss
lds
mov
xchg
inc
or
es
sarb
mov
ret
mov
out
pusha
push
leave
scas
push
shl
cmp
cmp
xchg
pop
cmpsl
inc
rorl
mov
dec
mov
dec
cli
daa
inc
mov
daa
lds
xor
jnp
sahf
std
pop
sbb
push
in
cvtps2pd
lea
mov
std
cld
jp
xchg
or
sahf
mov
sbb
das
sbb
stc
mov
js
aam
icebp
lds
pop
mov
fidivs
cwtl
cwtl
jnp
pop
jae
xchg
inc
int3
mov
lds
fcomp
orl
xchg
sub
out
loope
inc
inc
xchg
mov
aaa
cs
bound
or
mov
sub
mov
stos
jo
sbb
daa
xorl
fiadds
subb
sbb
push
push
popf
test
cmp
shlb
dec
je
enter
push
aam
jge
lret
mov
mov
outsb
fs
add
adc
aad
lcall
mov
jge
jns
inc
sbb
stc
pop
loope
inc
pop
fists
mov
xor
scas
mov
jb
lods
and
outsb
pusha
xchg
xor
clc
pop
cmpsb
aad
jo
xor
lock
iret
jl
stos
jnp
lods
xor
cmpsb
repz
scas
sbb
push
jmp
pop
test
and
cmpsb
loopne
fcomp
mov
pop
adc
rcll
imul
icebp
repnz
inc
mov
fcmovne
fld
lods
inc
push
xchg
scas
xor
sub
xchg
adcb
aas
or
jae
lods
xor
call
push
cmp
out
mov
or
dec
or
hlt
sbb
mov
and
testl
call
lcall
pop
daa
adc
test
pop
jnp
push
icebp
movsb
in
mov
add
push
sbb
cmp
lods
add
sub
leave
daa
push
sub
xor
mov
ds
fisubrl
les
fnstcw
cmp
clc
icebp
add
mov
pop
mov
jbe
inc
mov
pop
mov
dec
jmp
push
mov
into
leave
cmc
in
addr16
rcl
ds
mov
loop
sub
push
mov
test
adc
pop
pop
dec
mov
pop
sub
cld
mov
and
ret
push
gs
xor
mov
rcll
ss
stc
xchg
mov
lods
test
pop
xchg
cld
inc
rorb
fdiv
shl
popa
in
lret
adc
fnsave
cmc
repnz
lods
pop
mov
insl
call
mov
mov
pop
les
je
xorb
mov
shrl
stc
cmp
cltd
das
ret
push
lahf
xor
aam
popa
test
ret
ret
sub
inc
in
cmpsl
fisubs
mov
ret
mov
inc
jnp
movsb
sahf
in
jae
pop
mov
jnp
fmul
push
gs
pop
aad
add
add
ss
lods
int3
add
push
xlat
cmp
pop
adc
sub
ljmp
push
roll
jbe
mov
les
xlat
mov
sub
imul
test
push
aad
aas
js
icebp
or
xor
mov
arpl
cltd
mov
insl
pop
rol
pop
xchg
icebp
push
fcoml
iret
bound
lret
mov
js
addr16
dec
cli
cltd
sbb
movsl
adc
and
inc
push
or
inc
lods
mov
andl
inc
lret
jae
jo
and
mov
addr16
cltd
push
fmulp
fdivs
cmp
push
fmull
stos
adc
push
xor
insl
pop
pushf
mov
cmp
jp
addr16
add
ljmp
pop
gs
xor
sub
lret
fbld
xchg
or
sbb
pop
push
lcall
cmc
xor
in
lret
cmp
or
xchg
nop
and
iret
or
xor
jb
inc
in
cmp
sub
aam
cwtl
cli
mov
arpl
jle
inc
sbb
push
aam
in
sbb
pusha
loope
pop
mov
dec
mov
xor
cmp
xchg
mov
pop
pop
arpl
mov
in
mov
neg
dec
mov
test
sbb
aas
inc
mov
jg
jecxz
test
mov
pop
cmp
sub
cmpsb
daa
pop
mov
sub
das
jg
movsl
clc
inc
and
adc
lea
add
add
iret
mov
stos
lret
pop
std
fidivl
popa
inc
icebp
or
call
test
lea
aad
fwait
loopne
and
into
xchg
arpl
inc
mov
jmp
sbb
shr
sbb
pop
and
cmpsl
stc
testl
fiadds
aad
sbb
ljmp
sar
aaa
addr16
cwtl
sbb
pop
bound
ss
stos
pop
fs
sub
or
push
push
mov
test
mov
inc
or
into
and
sub
add
outsb
in
minps
cld
or
mull
sub
push
push
sbb
mov
leave
je
jmp
xor
mov
jns
sub
jo
lods
lods
mov
aad
call
inc
dec
or
popf
mov
js
mov
pop
push
mov
or
dec
test
in
aam
mov
popa
sarl
sub
aaa
out
repnz
popf
fsubrl
inc
aad
fidivrl
mov
stos
pusha
dec
lods
insb
push
and
mov
inc
mov
jecxz
mov
mov
mov
sbb
imul
mov
aad
dec
sbb
or
incb
xlat
adc
dec
cmpsb
aad
add
mov
pop
cmc
mov
out
mov
and
mov
sti
jl
aam
insb
sub
mov
jg
hlt
mov
inc
call
loopne
mov
mov
aam
mov
adc
icebp
outsl
add
js
add
int3
xor
popa
jb
ss
mov
shlb
ficompl
xchg
push
mov
cmpsb
sub
out
int
cs
mov
mov
bound
xorl
dec
stos
or
jge
and
pop
jmp
loope
xor
add
insb
cmp
xchg
lea
mov
pop
and
push
adc
mov
out
and
jp
sub
lds
or
inc
je
pop
icebp
and
inc
push
pop
push
jmp
mov
in
test
cmc
xor
or
mov
xor
sub
pop
inc
rcr
test
add
and
jns
or
jl
inc
dec
scas
pop
fnsave
icebp
adc
fnsave
negb
or
inc
call
popf
out
inc
test
xchg
into
nop
mov
mov
dec
loope
mov
xor
rcr
inc
into
mov
sub
mov
mov
jg
sub
stos
jae
inc
movb
iret
jbe
roll
cmp
dec
mov
ljmp
mov
cmp
sub
sub
fldl
dec
lods
scas
scas
push
test
jbe
aas
sbb
dec
mov
inc
dec
lock
lds
icebp
pop
push
aas
cmp
pushf
sbb
sbb
jl
xchg
sbb
adc
sti
xor
ds
dec
rclb
scas
test
dec
jg
ret
dec
int
pop
dec
mov
lcall
sahf
outsb
xchg
sub
cmp
movsl
loop
outsl
and
lods
cmpsl
stc
mov
or
lcall
xor
outsl
dec
cmpsl
in
push
dec
add
das
mov
and
gs
popf
scas
mov
mov
lcall
mov
mov
adc
dec
jo
or
cmp
pop
out
xchg
in
scas
push
xchg
xchg
ror
cmp
mov
xor
lock
jle
inc
inc
mov
cmpsb
mov
outsb
add
sbb
pop
pop
mov
jg
push
add
cmp
and
cmp
sbb
repz
dec
fistl
orl
mov
jb,pt
xchg
mov
test
push
test
clc
in
popa
psadbw
mov
cltd
add
lods
push
mov
fnsave
addr16
lret
pop
mov
fdivrl
or
clc
mov
sbb
ljmp
shrb
shll
lods
ja
adc
fwait
cmp
pop
in
iret
jno
out
clc
je
push
insb
mov
pop
pop
push
jbe
loop
ja
pop
jle
insl
push
fwait
in
fisttpll
stc
imul
pop
mov
push
push
jecxz
test
movsl
ficomps
adc
jae
push
rorb
sbb
add
popf
dec
lea
jg
popf
mov
out
inc
mov
dec
pushf
jnp
pop
lock
insl
mov
cmp
xchg
xor
cli
int3
jmp
sub
mov
inc
popa
push
movsb
fcompl
sahf
push
dec
cmpl
movsb
cmpl
and
call
cmc
and
and
mov
inc
push
imulb
cmp
aaa
cmpsl
shll
jl
adc
in
imul
sub
or
pop
in
pop
push
cmc
mov
ja
mov
pusha
imul
or
jns
mov
faddl
and
cli
loop
jle
xor
js
jne
les
js
pop
repz
in
inc
sbb
loope
and
sahf
dec
fmull
mov
out
dec
je
mov
inc
dec
ds
push
rolb
loopne
xorl
in
stc
fs
sbb
adc
jge
popa
outsl
nop
into
cmpsb
aas
movsb
adc
lcall
mov
sbb
mov
lds
fisubrs
inc
jnp
into
cltd
sti
cmc
cmp
rolb
test
sbb
adc
cmp
pop
xrelease
jae
cs
aad
popa
push
add
xlat
pop
rcll
fs
loopne
out
lea
adc
push
sbb
fldl
adc
xor
push
fs
addl
int
ficoms
xorb
sbb
scas
or
pusha
sar
cmpsl
sbb
test
in
adc
ljmp
pushf
mov
inc
mov
scas
inc
cmc
out
xor
fldl
adc
push
dec
out
pop
and
cli
jecxz
dec
cmc
aaa
sub
mov
xchg
xchg
loop
imul
test
fimuls
shlb
leave
test
push
push
or
mov
xor
jae
outsb
jmp
push
lret
sbb
adc
or
or
mov
sbb
shll
sbb
xchg
inc
out
nop
pushf
notl
das
orb
arpl
and
lods
repz
xchg
sbb
test
data16
mov
jae
imul
std
push
pop
xchg
scas
xorb
mov
inc
lock
pop
push
das
mov
aas
test
mov
adc
or
sub
in
std
inc
or
pop
addr16
xor
xchg
mov
leave
scas
adc
jmp
jns
outsl
inc
mov
fs
orl
pop
imul
outsl
std
adc
sub
sbb
cmp
mov
movd
sahf
cltd
icebp
rclb
sbb
or
lock
xorl
sbb
xchg
lret
jg
test
push
outsb
xor
xchg
fldt
cmpsb
xor
jb
push
aaa
push
sub
fistpl
sbb
lock
pop
mov
leave
stos
xlat
add
push
adc
sbb
shrb
aam
cmpb
adc
and
insb
hlt
add
mov
sbb
or
aam
jae
sub
repz
fwait
sarl
mov
jle
lds
inc
test
mov
lods
jae
push
movsb
test
jbe
dec
or
aad
or
sbbl
sbb
cltd
fbld
cmp
std
loop
stos
jmp
xchg
aad
insb
inc
pop
mov
inc
movsb
or
jl
in
sahf
push
clc
dec
mov
fwait
int
fisubrl
jmp
push
hlt
mov
fiadds
sbb
mov
sarb
fwait
enter
pop
add
xorl
push
lods
mov
xchg
inc
mov
and
jecxz
sti
mov
mov
and
in
sub
daa
iret
cmp
jg
sbb
mov
sahf
mov
lods
imul
sub
or
or
jecxz
pop
adc
insl
cmpsb
push
cmc
mov
outsl
ljmp
xor
cmp
mov
jl
mov
cwtl
insl
cmp
and
mov
stos
push
and
push
outsl
cltd
xor
jnp
sub
or
jb
cmp
popf
pop
dec
push
and
out
movsl
fcmovu
xor
mov
mov
fwait
jecxz
add
push
inc
sarb
mov
fldt
shll
cmp
adc
adc
fidivs
fisttpll
pop
ja
xchg
inc
adc
mov
add
add
pop
mov
add
test
push
cltd
out
icebp
sbb
push
lcall
sub
add
mov
call
call
mov
pop
ficomps
fwait
sub
into
and
std
fbstp
aad
sub
popf
aaa
sbb
fstps
xchg
or
lcall
cmpsl
and
xor
jge
dec
mov
push
call
xchg
mov
xchg
notl
pusha
sbb
push
push
cmp
stos
add
add
xchg
scas
cmc
inc
enter
pop
sbb
divl
sti
pop
roll
jo
test
push
lds
inc
add
cmp
aam
adc
xchg
das
sub
push
fimull
adcb
mov
adc
rorb
jmp
xor
sub
mov
lea
push
adc
pop
push
pop
mov
pop
stc
push
jge
xchg
insb
aam
dec
fstpl
mov
lds
or
cmp
popa
sub
pop
inc
cmpsb
xchg
aam
jmp
xlat
jmp
lret
in
imul
mov
stc
clc
jae
push
repz
aaa
lea
fisttpll
fnstenv
aas
imul
push
xchg
jns
repz
cmp
aam
sub
jnp
adc
mov
pop
aas
cmp
cwtl
cli
adc
jae
ljmp
jbe
push
pusha
mov
js
sub
rolb
jns
sarl
outsl
insl
in
push
mov
inc
rolb
cmp
rorb
mov
mov
mov
pop
movsb
aad
push
mov
movsl
out
into
roll
in
test
lods
clc
push
xchg
iret
and
mov
cmp
stos
or
lcall
addl
ljmp
je
sub
inc
shll
mov
das
jns
lcall
test
imul
and
xorb
sbbl
lds
add
push
pop
fwait
or
xor
jle
fistpll
sbb
aaa
sti
rclb
cs
testl
test
daa
dec
mov
aaa
or
pop
shlb
test
push
push
rcll
gs
aas
fldenv
inc
push
mov
push
int3
dec
mov
mov
push
mov
xor
popf
fisubs
orw
adc
jnp
and
movsb
add
or
xor
enter
int3
pop
xchg
mov
movsb
inc
call
mov
test
mov
je
fnstenv
jns
enter
testb
xor
jbe
dec
clc
call
ds
pop
rcrb
mov
cmp
and
jns
mov
sbb
bound
sbb
jmp
insl
xor
aas
xchg
out
out
enter
mov
sbb
inc
xchg
out
mov
or
jne
scas
xorl
repz
fisubl
icebp
enter
xchg
xor
lds
daa
inc
mov
test
jb
push
inc
cmpsb
and
add
stos
jp
mov
addr16
push
lods
sub
out
dec
pop
addr16
mov
outsb
and
xor
push
nop
jecxz
fmul
fbstp
sbb
jle
out
push
outsb
rclb
jno
sub
sbb
xchg
addr16
inc
in
lods
mov
stos
pop
mov
dec
fsubrs
out
xchg
je
cs
in
cld
dec
xchg
orb
push
lcall
cmc
aaa
fs
dec
fists
addr16
mov
test
xorl
sub
ds
pusha
xchg
mov
and
clc
add
pop
bound
lcall
mov
mov
and
mov
push
popf
out
inc
pop
xor
xor
mov
jno
push
push
inc
out
cmp
addr16
jmp
rclb
sub
adc
mov
in
shrb
dec
pop
ds
sbb
dec
leave
into
sbb
inc
sbb
imul
outsb
insb
dec
cmp
fnstsw
loope
add
push
dec
test
push
pop
in
add
stc
sub
mov
aam
andb
fucom
ljmp
iret
nop
cmp
je
sub
loope
arpl
lds
cmp
test
jecxz
pop
xor
in
mov
adc
scas
xchg
inc
jl
movsb
inc
and
popf
in
mov
sahf
sbb
sbb
pop
adc
mov
or
mov
jmp
jp
pop
out
test
ss
ja
mov
xor
pop
lahf
pusha
add
aad
mov
adcb
and
mov
mov
lcall
shrb
popa
aas
jecxz
xchg
pop
int
xor
xor
sbb
mov
js
adc
push
lcall
sbb
in
cmp
test
jb
inc
xchg
in
loop
cmp
repnz
jae
xor
push
xchg
out
mov
insl
sarl
pop
dec
shll
jecxz
fisttps
stos
cmc
ja
pop
test
mov
or
xor
inc
outsb
call
cli
add
mov
jno
stos
addr16
jmp
les
inc
addr16
dec
jmp
test
cmp
scas
ljmp
pop
add
ret
cltd
fwait
rcll
loop
and
adc
pop
add
fstps
lret
lcall
mov
popf
fwait
jne
add
sbb
arpl
addl
inc
cmp
mov
or
movsl
insb
lret
pop
xor
pop
sub
and
aam
mov
xor
mov
aaa
mov
xchg
or
fsubs
lds
or
inc
movsl
das
lcall
hlt
sub
xor
or
inc
fdivl
lods
pop
cmp
lret
xchg
xchg
int
push
pushf
arpl
sub
fwait
push
pop
lret
add
inc
xchg
ret
clc
jae
xor
shll
fs
push
lcall
loop
xor
mov
aaa
add
dec
cmp
jmp
mov
push
std
mov
mov
lret
cwtl
inc
icebp
movsl
lret
cs
gs
pop
jl
mov
dec
repz
or
hlt
mov
sub
inc
outsl
add
xlat
jo
es
cmp
mov
into
rolb
mov
int3
out
push
pop
pop
imul
jo
push
cmp
mov
inc
fildll
xorl
std
jmp
test
adcl
gs
test
jno
or
add
gs
jge
adc
test
cmp
shrb
xor
cmp
cltd
bnd
fiadds
repz
lock
ss
or
jne
jmp
jl
insb
testb
mov
mov
cmp
cmp
movsl
call
add
nop
mov
fildl
lcall
xchg
fmull
pop
movsl
sbb
dec
int
sti
cmp
mov
cmp
lock
mov
add
sub
into
adc
fsincos
fmul
fstpl
and
fdivrs
push
cmp
in
pop
mov
into
add
stos
mov
jne
adc
mov
inc
jb
mov
xchg
sbb
aam
xor
nop
lock
xchg
push
movsb
mov
xor
in
dec
or
jno
mov
in
es
jle
inc
push
movl
push
dec
dec
and
in
ror
rorb
push
xchg
lret
popa
lock
xorl
inc
sbb
pop
scas
cmpsb
pop
sahf
sbb
out
fs
sub
cmp
sbb
or
mov
mov
loope
add
repz
jne
or
adc
lock
mov
iret
sbb
stos
out
out
mov
test
mov
jnp
pusha
test
lea
lcall
cld
inc
scas
dec
ljmp
in
pop
orl
push
pop
xchg
ljmp
xchg
je
mov
dec
mov
mov
call
mov
lea
imul
xorl
lcall
and
stc
add
cwtl
mov
cmp
arpl
push
das
push
aaa
dec
lcall
outsl
xor
mov
xchg
mov
ret
imul
ds
test
add
adc
pop
icebp
outsl
loopne
or
cmp
imul
fucomi
loope
cmp
mov
mov
out
push
ret
sub
imul
pop
cmp
icebp
in
sub
in
mov
icebp
sub
lods
sub
std
mov
flds
and
and
push
movsl
cld
and
add
lods
mov
push
fwait
cltd
mov
adc
inc
cmc
inc
outsb
cs
test
push
push
cmp
xor
scas
inc
add
sub
cmp
sub
or
mov
cmp
daa
mov
adc
inc
leave
push
mov
pop
test
mov
das
mov
jns
xchg
lods
push
sub
inc
xorl
js
test
sub
hlt
insb
pusha
jae
inc
cmp
xchg
subl
nop
mov
mov
jl
cwtl
decl
mov
arpl
mov
lret
or
adc
jge
sub
cmp
addr16
jnp
push
iret
std
aas
nop
in
test
add
add
scas
mov
call
push
push
in
mov
dec
adc
subl
stos
mov
jl
out
popa
fmul
aam
sbb
jbe
dec
mov
lds
jecxz
pop
lea
xchg
aam
mov
out
push
test
mov
push
shll
xor
mov
fnstenv
cld
dec
push
jne
push
mov
inc
std
imul
jmp
cwtl
jae
pop
ret
inc
jns
pop
mov
fsub
test
or
or
sub
sub
cmp
cmp
pusha
jb
inc
movsb
imul
sbb
jns
or
or
and
inc
pop
mov
int
xor
cmc
loopne
test
inc
pop
cld
popf
mov
jge
jle
xchg
mov
pop
jns
cmp
sbb
pop
add
pop
xchg
push
fildll
fwait
sbb
xchg
sbb
gs
jnp
mov
add
mov
xlat
pusha
mov
cmc
stos
mov
sbb
lahf
loopne
repz
inc
push
movsl
push
stos
xor
iret
xor
jecxz
push
mov
add
adc
sbb
xlat
int
rorl
mov
xchg
lcall
dec
dec
push
pop
mov
push
fsubl
pmaddwd
or
mov
mov
aaa
sbb
stos
dec
mov
jecxz
mov
inc
mov
add
lcall
adc
enter
mov
aaa
inc
addr16
pop
sbb
xchg
or
lock
xor
and
xlat
in
sbb
dec
sbb
bound
inc
add
movsl
mov
cmpsb
add
imul
push
xchg
fcomps
jp
lods
xorl
xor
mov
mov
xchg
pushf
jo
mov
or
mov
ret
pop
adc
sahf
std
or
jmp
lods
lcall
stos
stc
adc
xlat
fildl
outsl
sbb
shrl
mov
xchg
push
testb
fisttpll
nop
aam
ficoms
adc
lds
push
sti
dec
mov
mov
inc
push
loop
subl
cwtl
bound
movsl
icebp
cmp
fstp
cmc
test
fmul
aaa
shll
out
cmp
fs
cmpsb
jno
inc
xchg
mov
mov
dec
test
cmpl
arpl
xor
xorl
rclb
rcrb
mov
cmp
movsb
xchg
in
xchg
push
mov
int
and
fists
faddl
mov
js
dec
mov
ret
dec
sub
jo
jno
sbb
and
ss
xchg
dec
inc
xchg
popa
xor
xor
mov
orl
jne
push
jmp
mov
add
test
or
in
arpl
inc
xchg
fld
test
das
into
add
imul
sbb
pop
jle
inc
movsl
mov
in
mov
in
xlat
into
movsb
stc
lods
test
insl
sbb
fmul
mov
mov
push
jl
js
scas
cmpl
push
and
pop
adc
inc
mov
inc
xor
std
dec
sbb
lret
outsl
cwtl
insl
outsl
daa
jae
lods
push
pushf
pop
push
push
mov
in
repnz
ret
mov
ret
stos
lock
fistps
jb
push
cmp
mov
cmp
pop
jmp
fld
add
cmp
flds
pop
pop
je
inc
and
add
sbb
push
dec
pushf
fsubs
jns
movsl
in
pop
mov
sub
cmp
jle
push
orl
cld
sbb
pop
mov
stc
in
inc
andl
repz
and
dec
and
in
cmpsb
or
cmp
adc
xchg
pushf
or
insb
push
das
xchg
mull
ja
dec
mov
push
lcall
sbb
inc
sbb
jns
subb
leave
leave
mov
stc
fmul
fwait
popf
mov
mov
and
inc
pushf
pop
xchg
test
cmp
push
or
imul
sub
int3
mulb
test
mov
lock
xchg
shlb
xchg
cmp
jg
decb
jo
sub
push
mov
movsl
pop
cs
xchg
lahf
xchg
jl
xchg
dec
cmpsl
push
aad
mov
test
pop
test
jg
pop
icebp
add
inc
jnp
scas
and
jmp
cs
testl
cmp
andl
push
push
sub
insl
inc
pop
loop
js
aaa
push
leave
or
mov
movsb
add
fst
dec
mov
sar
fwait
shll
dec
daa
xchg
sub
lret
ret
pop
ja
shlb
les
and
lds
push
imul
cltd
xor
std
stos
xorb
or
xor
int
cmp
and
mov
jg
das
xchg
sbb
mov
insb
adc
adc
loopne
dec
daa
push
faddl
dec
sahf
scas
mov
add
add
inc
inc
popa
jne
fsubs
jbe
pop
test
sbb
insb
lds
xor
mov
sbb
cmpsb
test
in
and
stos
jne
inc
sarb
sub
test
adc
adc
push
fidivrl
sub
cld
push
xor
cmp
and
mov
or
sarl
cmpsl
xchg
push
test
mov
or
aam
sbb
bound
cli
push
cmp
stc
push
ja
cmp
outsb
iret
mov
and
add
cmp
push
cmp
mov
mov
push
mov
dec
add
pop
lcall
rorl
xchg
mov
scas
jo
dec
aas
pop
je
dec
mov
push
scas
push
dec
mov
enter
mov
test
add
fidivl
cwtl
icebp
adc
inc
lea
stos
inc
cmp
adc
mov
repnz
test
out
in
ljmp
mov
in
push
or
insl
push
iret
or
mov
xor
fisubs
stos
adc
pop
ja
ss
adc
add
push
aaa
jno
or
pop
dec
jns
xor
enter
lods
dec
adc
roll
xchg
push
xor
stos
cmp
arpl
nop
mov
shl
cli
invd
inc
pop
sbb
jmp
orb
insl
push
pop
outsb
jmp
sbb
mov
fwait
jl
xlat
imul
notl
jbe
sahf
out
jnp
adc
mov
or
dec
or
cmp
int
jecxz
call
or
mov
add
jecxz
mov
sbb
cs
pop
std
inc
in
xchg
movsl
cmpsb
fdivl
frstor
cmp
and
scas
std
mov
nop
mov
mov
or
adc
adc
loopne
jmp
xchg
mov
mov
stos
mov
sub
fwait
sub
mov
test
jle
jns
mov
push
bound
inc
mov
repnz
dec
and
push
aad
or
je
xor
adc
add
nop
xchg
jecxz
movl
add
lea
sahf
mov
xchg
fildll
in
loopne
or
mov
stos
jg
or
pop
xor
aam
mov
or
dec
popf
pushf
addr16
repz
sbb
inc
std
iret
test
lahf
add
cmp
das
dec
pop
adc
cmp
enter
loopne
mov
jno
add
cs
enter
mov
addb
enter
pop
jne
mov
outsl
ret
movsl
insl
outsl
test
aas
ss
popf
cmpb
pusha
lods
mov
xor
jecxz
cmp
movsl
outsl
inc
xchg
jg
in
bound
clc
repnz
lock
pop
or
jecxz
add
push
pusha
jg
dec
push
shrb
stc
repnz
jbe
dec
fstp
daa
inc
push
shl
enter
cmp
jne
nop
clc
push
in
sarb
sbb
or
pusha
sarb
jle
dec
jae
outsb
icebp
push
repnz
jl
lahf
lret
dec
popa
mov
pop
sub
insl
test
fsts
fwait
inc
mov
scas
andl
ja
mov
xchg
bound
and
push
push
jg
fdivp
or
fsubrp
mov
lods
loopne
pusha
sub
push
insl
lahf
call
cmp
jbe,pn
dec
pop
jge
adc
xor
xlat
push
mov
out
fcmovnb
test
xchg
inc
int
and
dec
pop
pop
and
rcrl
sub
sub
xor
pop
mov
fs
scas
rcll
bound
lahf
inc
sub
dec
imul
or
dec
addb
or
in
fstpl
movsb
or
loopne
test
bound
repnz
mov
pop
dec
adc
rclb
lcall
sub
fs
mov
mov
fdivrs
push
dec
insl
out
xor
fstpl
rolb
int
sbb
fadds
test
insl
lods
push
inc
pop
fsubr
xchg
cwtl
xchg
and
jnp
dec
mov
xchg
dec
push
xor
jecxz
dec
inc
movsb
or
inc
js
push
test
cmp
enter
daa
int
clc
rorb
push
cmp
gs
dec
stos
out
mov
xchg
orl
popf
pop
xor
int
cmc
fwait
int3
scas
pop
dec
mov
push
pop
roll
cld
mull
movsl
dec
xchg
mov
xor
in
push
movsl
leave
inc
xchg
jmp
jnp
inc
pop
lret
mov
or
mov
mov
lret
add
jne
adc
xchg
jo
dec
imul
adc
mov
lock
push
stos
sub
js
pop
imul
bnd
mov
and
fs
aam
jns
out
pop
aas
rol
sbb
lods
xchg
inc
mov
xor
pop
lahf
xchg
xchg
pop
fwait
int
fsub
test
mov
loopne
fimull
mov
dec
adc
stos
cltd
mov
jne
mov
mov
cmp
pushf
cltd
jne
cs
fsubr
jno
ret
shll
lods
repz
xor
out
jl
cmp
xchg
icebp
dec
int
cltd
outsb
xchg
pop
or
cmp
cmp
dec
pop
sbb
xchg
gs
aam
incl
clc
ficoms
inc
outsl
imul
jle
dec
adc
scas
adc
in
mov
mov
sub
push
vpcmpeqd
in
lret
mov
ret
mov
xchg
ret
ss
mov
shlb
fstpl
aam
ret
jb
push
cwtl
adc
mov
mov
mov
aam
ret
ljmp
aaa
fs
sbb
fs
in
push
xchg
add
push
enter
out
pop
xor
int3
lahf
std
out
pop
pop
inc
sbb
xchg
movsl
inc
ficomps
icebp
jp
lcall
in
and
lahf
push
xchg
push
push
add
inc
lret
xor
sub
stc
xlat
outsb
jmp
rolb
popf
scas
ja
inc
fimull
sbb
lods
xchg
jbe
in
stos
leave
dec
jmp
mov
sub
les
inc
shrl
push
pop
bound
aaa
jmp
or
in
popa
mov
mov
inc
dec
and
shrl
adc
dec
jge
in
fldl
sbb
cmpl
cmp
nop
push
and
outsl
sub
fidivl
enter
jle
xchg
jbe
punpcklbw
mov
sub
push
pop
cmc
shl
sarl
mov
mov
xchg
dec
add
xor
or
jle
push
faddl
or
rolb
add
fldl
in
jae
dec
std
jbe
xor
in
push
in
je
sub
xchg
mov
lds
int
sub
sbb
or
cld
mov
fbld
nop
add
inc
cmp
xchg
adc
inc
xlat
loope
xor
jg
mov
jb
or
loope
sti
mov
jae
pop
pop
shll
ficoms
sbb
ss
in
mov
pusha
cmp
sbbl
jg
push
hlt
jnp
xchg
mov
fidivs
xor
pop
pop
pop
mov
cs
pusha
in
jge
out
jo
xor
imul
jae
les
inc
je
stc
mov
jge
mull
gs
mov
push
jg
mov
scas
and
in
cs
in
imul
addr16
mov
adc
rolb
sbb
adc
cli
and
arpl
push
mov
fwait
or
mov
cmp
out
mov
cmc
sub
sbbb
jmp
adc
icebp
mov
fs
imul
hlt
out
loop
mov
rcrl
mov
add
mull
xchg
mov
jb
push
mov
or
repz
les
or
jb
push
lret
xchg
in
loopne
mov
mov
lods
popa
adc
xor
in
sbb
dec
cwtl
mov
mov
stos
insb
loopne
dec
mov
mov
adc
jmp
push
call
call
push
cvtdq2ps
cmp
sbb
or
dec
inc
movsl
ret
fisttpl
sub
sbb
hlt
les
stos
push
cwtl
mov
xchg
adc
mov
into
dec
mov
mov
mov
arpl
and
ljmp
imul
inc
push
je
je
sub
ret
pop
push
mov
push
xor
inc
icebp
push
sbbl
mov
loop
jg
roll
leave
frstor
add
sbb
lret
imul
loope
sahf
movsl
adcb
repz
and
into
clc
mov
test
add
push
mov
dec
adc
dec
sbb
popa
and
in
stos
or
scas
bnd
or
adc
inc
imul
dec
notb
dec
mov
rcrb
xchg
push
jecxz
pop
sbb
gs
fsubrl
push
sbb
or
adcb
jl
mov
sti
sub
pop
dec
xor
scas
push
rcr
js
mov
scas
push
push
dec
mov
sub
dec
inc
dec
sub
or
stos
insb
mov
jns
cmpb
repnz
mov
test
cwtl
mov
mov
in
jns
pop
mov
push
jge
sti
xor
ds
sbb
test
add
sbb
mov
xchg
aam
out
xchg
sahf
in
fwait
movl
or
aad
das
cwtl
test
cmp
int
inc
outsl
sahf
mov
mov
mov
mov
inc
clc
xchg
ljmp
jge
mov
pop
fmul
arpl
adc
pop
scas
mov
push
out
sub
jp
pop
dec
xchg
loopne
loop
jecxz
push
add
enter
push
cmp
int3
imul
insb
jb
cwtl
mov
repnz
call
in
xlat
sub
call
push
push
adcl
add
mov
cli
cmp
or
out
fs
mov
sbb
dec
sarb
or
outsb
nop
ja
rcrb
inc
std
jae
in
adc
cmpsl
repz
xchg
rep
cld
xor
mov
sub
jns
jnp
mov
cld
popa
jle
jp
and
adc
mov
gs
adc
ret
lret
xor
adc
cmp
sbb
cltd
sar
ret
sbb
and
cmpsl
mov
push
sbb
popa
ror
dec
xchg
repnz
shlb
in
mov
insl
mov
push
repz
jbe
jo
sbb
push
std
jb
jmp
stos
add
addr16
aad
push
stos
sti
mov
xchg
mulb
or
dec
ljmp
inc
pop
mov
xor
push
adc
push
scas
scas
adc
ret
mov
sti
popa
jg
and
mov
mov
push
mov
sub
inc
inc
add
addr16
xor
scas
adcl
arpl
sbb
cmpsl
shll
jb
mov
fdivs
xor
fildll
fdiv
sub
sbb
loop
xor
shl
mov
mov
loopne
dec
mov
mov
mov
js
mov
jno
jmp
xchg
push
mov
cmp
ja
sbb
pop
mov
scas
jmp
jl
mov
repz
or
lahf
enter
cmpl
es
aam
cmp
sub
pop
push
out
mov
clc
xchg
out
add
sbbl
in
sub
hlt
test
mov
dec
out
lods
cmpb
out
subl
int
mov
sbb
mov
inc
mov
adc
jb
mov
cs
nop
lods
ret
jecxz
jge
sbb
in
lods
jge
aas
add
sbb
jp
movsb
mov
xor
es
jmp
in
and
sub
inc
daa
xchg
les
ss
cmp
fidivs
xchg
or
inc
repz
loop
sbb
mov
add
xchg
add
aaa
sub
adc
cmpsl
lret
roll
out
pop
imul
dec
test
aas
dec
icebp
cmp
xor
fcompl
mov
mov
jge
push
idiv
mov
loop
cwtl
scas
stos
pop
cmpsl
ljmp
mov
inc
fistps
test
clc
adc
mov
jmp
pop
mov
mov
stos
mov
cmp
jno
sti
push
and
push
arpl
addr16
enter
iret
mov
mov
jl
xlat
xor
popa
and
ret
call
int
xor
add
stos
repnz
xchg
xchg
repz
repz
add
sbb
pop
sbbl
cmp
aam
jne
lods
sbb
arpl
pop
sbbl
or
std
ss
sub
cmp
sbb
repnz
lahf
add
jns
in
inc
jo
loopne
adcl
pop
orb
outsl
test
adc
jp
jnp
pop
aaa
test
lods
in
subl
pusha
xlat
leave
imul
or
fsubrl
aam
dec
xor
adc
aam
add
sbb
or
push
xor
sbb
ret
jne
cli
faddp
mov
popf
sarb
dec
push
mov
popa
xor
ficompl
aas
or
mov
pop
repnz
cmp
je
insb
inc
leave
cmpsb
mov
mov
pop
inc
inc
test
clc
das
mov
mov
dec
punpckhbw
int3
jecxz
test
mov
sti
sbb
inc
imulb
scas
push
repz
lea
out
adc
test
cmp
mov
cltd
out
lahf
test
in
pop
ja
test
stos
int
pusha
in
mov
shl
pop
aas
push
jnp
imul
adc
cmp
jno
testl
add
aaa
shll
mov
cwtl
lods
xchg
fsubrs
xor
cmp
rclb
outsl
pop
rcrb
mov
dec
or
dec
adc
fs
and
push
movsl
sub
test
aaa
mov
sahf
xor
adc
sub
xchg
inc
icebp
loopne
inc
in
mov
lds
jle
dec
push
jmp
dec
xchg
push
mov
add
int3
aam
adc
fisubs
push
dec
adc
xor
inc
dec
stos
xchg
inc
ror
fnstcw
pop
roll
or
push
xchg
adc
pop
push
imul
sub
adc
push
call
loop
push
ret
and
or
rcrl
outsl
cmpl
pusha
mov
mov
movsl
xor
cmp
mov
fistpl
cmpsl
stc
add
pop
xchg
mov
jno
xchg
cmpsl
jne
fcoms
or
dec
clc
push
ds
sub
daa
mov
jb
mov
sub
pushf
jne
je
xchg
loope
sub
enter
jle
dec
dec
jp
sbb
iret
xchg
xlat
fadd
sarb
pushl
outsb
pop
mov
fs
leave
fnstsw
xchg
mov
or
jp
dec
jge
test
dec
lahf
sbb
mov
sbb
aas
sti
adc
mov
inc
repnz
inc
sahf
sub
mov
icebp
sbb
fldcw
pop
out
enter
push
mov
add
mov
sbb
iret
lods
cld
cmp
push
addr16
xchg
push
movsb
add
in
andb
dec
adc
mov
pop
push
push
add
pop
inc
add
xor
xchg
in
mov
ja
div
outsb
std
aad
int
rcl
outsl
jo
inc
mov
lahf
push
push
dec
dec
lods
punpckhwd
jecxz
mov
scas
lock
add
loop
and
mov
ljmp
push
dec
jo
mov
adcb
ds
push
mov
inc
sub
jno
dec
sub
pop
jnp
sbb
xor
push
adc
js
pop
or
int3
dec
push
shlb
fiadds
and
xchg
adc
cmp
imul
scas
fstps
scas
sub
scas
push
xorb
es
aam
leave
loope
rcr
sbb
and
and
leave
scas
cmp
and
push
xor
or
lods
cmp
mov
loopne
imul
sub
movsb
sahf
mov
in
and
insb
pop
cmpsb
xchg
xchg
sub
pop
mov
cmp
mov
lret
stos
mov
inc
inc
push
out
mov
dec
ja
ficompl
incl
stos
jo,pn
movsb
fwait
js
pop
xchg
inc
inc
push
inc
das
pushf
sbb
orl
pop
cmp
inc
cmpsb
xor
pop
popf
sub
sbb
cmpsl
ja
in
cmp
subb
mov
mov
pop
mov
out
aad
jbe
mov
mov
fimull
bound
pop
fs
enter
mov
jl
push
cmp
dec
dec
adc
mov
je
add
add
movsb
dec
in
pop
loope
jmp
xor
xchg
mov
jmp
int
pop
xchg
xor
push
sbb
lcall
fisttps
mov
cwtl
cmp
js
jnp
ds
cwtl
push
dec
mov
push
jne
inc
push
xor
loope
push
jmp
mov
mov
sahf
les
cltd
dec
jb
xor
dec
scas
mov
rclb
popf
and
jge
rclb
cmp
inc
jno
notb
scas
mov
xor
dec
cmpl
dec
pop
loop
dec
inc
lods
push
testl
out
add
jae
nop
lods
and
in
sarb
push
inc
adc
sub
pop
push
clc
aam
sub
shr
xor
mov
fisubl
ffree
fstpt
mov
xor
mov
loopew
dec
outsb
sub
dec
icebp
sbb
shrb
lods
mov
push
sub
fldl
mov
das
push
push
pop
push
jae
sub
dec
das
dec
mov
inc
arpl
repz
scas
in
sbbl
sbb
lds
sbb
mov
ja
add
pop
cwtd
pop
loopne
movsb
std
pop
sti
mov
inc
sub
mov
mov
out
aas
lods
mov
ss
mov
and
insb
sbb
cmp
jp
daa
xchg
mov
add
ja
sub
out
xchg
mov
inc
bound
divb
les
addb
cwtl
lahf
jae
dec
loop
xlat
add
fs
mov
mov
xchg
push
pop
xlat
xchg
inc
jecxz
outsb
pop
jecxz
popf
pop
sbb
ljmp
inc
popa
xlat
pop
test
mov
popl
mov
xor
int3
sbb
or
nop
cmp
mov
repnz
aaa
adc
push
stos
lea
push
mov
sub
sub
lock
cld
mov
dec
add
add
cmp
jns
out
je
cmp
lahf
shrl
mov
push
mov
ret
sbb
pop
inc
test
clc
jp
mov
test
lods
aam
push
sbb
cwtl
mul
mov
and
jne
out
mov
mov
xor
loop
add
adc
sbb
push
repnz
cs
and
cltd
sub
push
sbb
inc
lock
call
add
je
mov
test
icebp
sbb
stos
xor
adc
push
cmp
mov
dec
mov
int3
push
or
mov
xchg
test
jmp
xchg
out
mov
sub
push
xchg
cltd
iret
add
inc
xor
les
jl
xchg
dec
sub
hlt
js
jl
push
dec
pop
cli
popa
sbb
adc
sub
mov
mov
mov
xorl
inc
xchg
cs
inc
and
int3
push
es
iret
das
push
mov
in
dec
sar
aam
add
loopne
fcoms
and
push
daa
sub
outsl
xor
in
sbb
sarl
dec
xor
hlt
mov
mov
mov
iret
and
in
movsb
pop
mov
inc
lods
loop
xchg
dec
adc
dec
xchg
mov
xor
lahf
in
mov
xchg
xchg
lret
iret
cmp
out
insb
mov
pop
fdivrp
lret
popa
fs
test
decb
sub
lcall
fsubl
inc
dec
imul
fbstp
push
cmp
lds
dec
loopne
cwtl
sahf
ljmp
fwait
sub
pop
out
outsl
cmp
mov
decl
inc
mov
pushf
shll
out
mov
adc
xor
jb
xchg
push
insl
fiadds
push
lcall
lahf
and
mov
cltd
add
adc
notb
fistpll
mov
data16
mov
jge
dec
fdivrl
in
sub
dec
sub
pop
aad
add
xchg
jl
shll
ljmp
fstl
out
loope
testl
ljmp
sahf
dec
xchg
xlat
push
pop
jg
pusha
mov
imul
inc
clc
or
jl
into
xor
dec
pop
xchg
jbe
and
jmp
mov
loopne
mov
imul
xchg
bound
add
dec
xchg
fs
add
adc
int3
addb
or
data16
in
loope
xchg
add
call
loope
out
stos
insl
scas
pop
shlb
xor
xchg
test
inc
xchg
fcoms
scas
push
sbb
ja
les
sub
call
shrb
sbb
aad
sbb
xchg
push
andb
or
inc
mov
iret
and
or
add
popa
dec
jae
inc
mov
aas
popl
arpl
rcl
stos
aaa
stos
leave
pop
dec
jmp
lret
shll
push
pop
inc
idiv
repnz
push
sahf
jns
xor
pop
inc
cmp
jecxz
mov
push
add
in
mov
mov
out
movsl
or
gs
dec
or
movsl
sub
pop
out
dec
outsb
scas
ret
xchg
bound
cmp
mov
mulps
inc
iret
icebp
cmpsl
out
les
add
push
orl
stos
jns
sub
popa
cmpsl
cmp
xlat
nop
mov
stos
xchg
int
cmp
jns
push
mov
push
cmp
test
dec
fiadds
cwtl
mov
jb
inc
lcall
jmp
int3
mov
cld
mov
sub
push
xor
sub
pusha
cwtl
xchg
rolb
nop
mov
cwtl
push
sahf
xchg
sbb
jmp
xchg
dec
jge
add
testl
mov
in
xlat
shll
mov
xor
test
sbb
mov
or
test
adc
adc
sub
push
pop
int3
inc
jmp
dec
repnz
dec
int3
mov
in
cmc
in
mov
or
push
int3
adc
rcrl
lahf
dec
inc
fisttpll
outsl
xlat
sub
or
xchg
push
shl
mov
lret
sub
inc
jo
lahf
mov
roll
mov
push
pop
push
aad
mov
jl
pop
inc
ljmp
inc
dec
in
and
popf
popa
pop
or
push
pop
add
push
cmp
test
xchg
iret
mov
push
sub
pusha
mov
enter
jle
stos
data16
mov
xlat
or
adcl
jns
jge
add
fucom
or
rcrb
fildll
jne
aas
lret
or
adc
adc
mov
shrb
sbb
clc
dec
add
add
sbb
push
sti
cmp
addl
into
jo
movsb
jbe
in
std
mov
insb
cmp
rcl
movsb
sahf
mov
shlb
int3
faddl
sbb
out
xor
test
sbb
mov
lods
shlb
ficoml
mov
stc
mov
xchg
add
push
decb
mov
adc
jmp
sbb
push
adc
mov
lahf
cmpl
xor
pop
mov
xchg
mov
gs
jno
or
jno
mov
push
inc
into
rorb
mov
popa
into
xchg
and
add
repz
les
js
sbbl
in
repnz
jo
mov
cmpl
sbb
das
leave
aad
sbb
sbb
dec
sub
mov
call
psubb
push
repz
jl
imul
into
out
mov
scas
js
jbe
insb
cli
das
mov
dec
cmp
push
testb
mov
fnstcw
test
aaa
insl
push
mov
dec
insl
pusha
push
in
outsb
xchg
and
sub
frstor
test
mov
leave
pop
jb
test
push
testl
lods
in
jbe
jl
mov
and
rorb
lock
mov
bound
cld
stos
aad
inc
out
add
adcb
xchg
dec
fisubl
jo
and
rol
mov
in
push
dec
adc
mov
subl
in
add
xchg
xchg
sub
or
je
lret
or
jl
arpl
xor
rcrb
lds
jb
pop
aas
inc
xorl
or
lea
sbb
loopne
test
rorb
sub
repnz
std
inc
inc
or
ja
mov
je
fwait
mov
call
push
sub
jns
xchg
es
add
int3
or
inc
jae
sbb
in
inc
loope
mov
ficoml
push
lock
outsb
jp
mov
movsl
xorb
and
pop
xchg
pop
xchg
push
dec
sbb
bound
inc
mov
sbb
dec
xchg
ljmp
and
sbb
mov
iret
outsb
dec
mov
mov
jecxz
and
scas
sahf
fs
scas
dec
xchg
repz
nop
inc
xor
aaa
push
or
mov
stc
dec
aaa
repnz
dec
inc
in
cmp
jb
pushf
dec
mov
lods
iret
pop
mov
lret
inc
ffree
out
push
adc
faddl
or
xchg
inc
test
shlb
outsb
push
adc
mov
jge
rcrb
rclb
jmp
dec
dec
imull
or
jl
pop
pusha
push
test
push
mov
in
push
jg
ret
adc
shl
adc
dec
andl
test
inc
lret
cmp
sub
inc
aaa
imul
cmp
jno
and
out
and
mov
subb
pop
or
in
cwtl
mov
incl
mov
pop
adc
ljmp
lods
rorl
cmp
cmp
test
cmp
std
mov
cli
xor
iret
loope
cmc
push
jge
loope
xor
enter
fwait
add
fs
movsb
out
ljmp
stc
push
jp
cmp
jae
rorb
jmp
xchg
or
in
adc
xchg
outsb
movsb
ficoml
add
inc
ret
mov
adc
cmp
mov
je
aam
pop
xchg
pop
shr
insl
xorb
fsubr
pop
xlat
aas
call
outsl
push
adc
pop
cld
aaa
cmpsl
in
jp
jno
clc
mov
and
ret
int3
add
repz
mov
add
cmpsb
jno
mov
mov
xchg
mov
jbe
sub
stos
lcall
mov
cmp
daa
ss
aas
repz
lods
lea
add
cmp
sbb
lahf
or
sub
test
cmp
sub
leave
rcll
mov
test
js
sub
sbb
xor
outsl
call
mov
out
sti
testb
mov
add
dec
or
sbb
push
push
stc
mov
movsb
lock
adc
outsl
pop
ljmp
lods
jno
jg
or
pop
xor
add
out
test
jno
jmp
fisttpll
mov
jecxz
jp
out
sbb
mov
xor
outsl
mov
xor
cmp
imul
and
das
push
imul
jle
mov
ret
pusha
lea
insl
xchg
ficoms
lret
adc
dec
pusha
push
xor
icebp
or
addr16
xchg
divl
lret
nop
xor
leave
dec
cmp
adc
enter
rorb
push
sbb
inc
dec
pop
pop
pop
sbb
pop
addr16
popa
jbe
scas
jge
sbb
or
cltd
push
dec
pop
inc
or
popa
lcall
and
add
mov
scas
lods
xchg
sub
lret
cltd
mov
fdivrp
stos
sbb
aaa
sahf
mov
sub
loope
add
pop
xchg
pop
ror
cmpsb
out
jnp
shr
cmp
mov
inc
in
lods
lret
or
outsb
push
pop
dec
fimuls
outsb
push
xor
cli
subb
mov
push
xor
iret
leave
out
xchg
sub
subl
scas
mov
inc
cmp
sti
xor
fsubrl
or
cmpsb
cmp
inc
int
mov
cs
test
lret
adc
leave
test
sub
lea
sbb
dec
push
jbe
xchg
data16
push
sub
leave
fldenv
arpl
jg,pt
jecxz
out
inc
ljmp
pop
lret
lret
dec
jnp
push
mov
mov
push
push
dec
push
movb
cwtl
shll
push
mov
jp
push
mov
or
mov
scas
popa
les
icebp
adc
cltd
jl
lods
mov
data16
adc
rcrl
jb
dec
pop
data16
and
cmp
or
popf
into
je
push
push
adc
jp
mov
ret
movsb
into
out
lds
pop
cmp
cmpsl
outsb
adc
add
push
imul
lret
xchg
sar
adc
cmp
cmp
sar
xorb
mov
shlb
orb
cmp
test
out
xchg
cld
xchg
push
jge
daa
cmp
pop
and
cmc
fdivp
ret
fmuls
dec
mov
or
add
ds
push
sti
repz
mov
cld
rcrb
mov
xchg
shlb
cltd
mov
push
and
pop
sub
repz
test
rcrl
lods
int3
jle
aam
pop
movsl
loopne
add
stos
shlb
sbb
pop
test
mov
mov
int3
jb
push
dec
cmp
sub
cs
sbb
lods
add
lcall
daa
mov
mov
mov
call
jle
popa
adc
aam
push
sub
insb
cmp
sbb
not
xchg
je
rol
dec
or
pop
sub
outsb
sbbl
icebp
dec
fidivrl
jp
daa
jmp
pushf
fbstp
sub
sbb
in
mov
mov
lea
mov
sub
jl
or
scas
mov
aaa
xchg
movsb
fidivs
cmpsl
stc
int
sarl
xchg
incb
lahf
aaa
add
shlb
fs
rorb
sbb
jge
xlat
jae
lahf
lock
daa
mov
inc
test
out
pop
push
sbb
sub
popa
in
adc
pop
or
jne
mov
push
imul
fiaddl
fistpl
test
push
outsl
es
dec
pop
adc
mov
jp
push
mov
lahf
nop
pop
jae
mov
adc
popa
icebp
rcl
xchg
jecxz
loopne
pop
mov
jns
pop
ljmp
outsl
popa
std
xchg
mov
jle
and
adc
adc
pop
lea
bound
stos
dec
arpl
fldl
push
sbb
dec
in
subb
lock
pushfw
ljmp
push
lea
cmp
inc
out
push
adc
scas
mov
sarl
movsl
jns
jmp
cmp
push
jg
or
sti
mov
flds
and
or
fs
mov
arpl
xor
sub
mov
out
or
imul
jmp
push
leave
iret
int3
jmp
repnz
inc
js
fwait
mov
jnp
lret
jmp
cmp
es
lock
jl
mov
nop
cmp
cld
or
sbb
push
outsb
addr16
mov
push
daa
mov
ja
or
or
xor
push
das
in
jbe
lea
nop
add
movsl
gs
xor
shrb
xor
ljmp
push
fadd
mov
inc
mov
jnp
jnp
jae
imul
fstp
jecxz
pop
lods
mov
ljmp
dec
leave
imul
sub
daa
push
and
je
dec
fnstenv
mov
jg
add
outsb
adcl
pop
or
lahf
jne
andl
fs
sbb
mov
inc
in
sub
xchg
mov
loop
lock
ss
into
sti
xor
imul
aam
mov
in
push
or
or
pusha
xor
push
push
xchg
mov
mov
lahf
and
out
lea
push
cld
add
dec
loop
fsubs
cmp
outsl
jbe
mov
imul
mov
fmul
cmp
inc
incl
sarb
mov
cmpsb
inc
orb
in
stos
xchg
add
arpl
arpl
ljmp
xor
or
cmp
popf
test
sub
in
sub
popl
sbb
push
call
js
pop
jnp
push
mov
in
rcr
xchg
orl
cmpsb
mov
pop
sbb
loop
aad
lret
cmpsl
xlat
push
mov
lret
push
gs
stc
jge
ret
mov
adc
out
push
mov
adc
mov
sbb
xchg
lock
cltd
stos
add
in
sbb
pop
rcll
push
int
icebp
lret
and
mov
ja
repz
xchg
jmp
pop
shrb
xchg
out
clc
out
daa
lock
movsl
sub
stos
neg
jno
and
xor
adc
pusha
popw
stos
rcll
xor
pop
xor
ficompl
add
xor
mov
xchg
lahf
lret
pop
sti
insl
dec
bound
int3
jmp
mov
in
cmpsb
adc
sbb
ficoms
push
add
add
shlb
inc
sarl
and
popf
sub
pop
xchg
imul
rcrl
shlb
xchg
ja
xchg
es
jno
push
pop
or
sbb
xor
and
call
and
dec
xchg
nop
pop
sti
mov
subl
push
rcl
xchg
roll
sbb
out
fbld
scas
pop
mov
rcrb
mov
jo
repnz
out
adc
dec
xor
fsubs
dec
add
and
fwait
jp
popa
adc
incb
xchg
das
out
sub
mov
outsl
pop
and
lahf
inc
icebp
stos
std
cmp
and
adc
mov
inc
cs
ret
mov
jle
out
jl
test
mov
push
jg
insb
fs
xor
xor
jle
xorl
cwtl
sub
inc
xchg
or
mov
adc
arpl
add
sti
andb
lods
xchg
adc
lret
mov
cwtl
jge
rcl
adc
ja
insl
xchg
in
mov
and
mov
or
popf
in
shl
adc
fimull
jmp
cmc
es
jmp
je
int
rcll
in
shll
popf
cmp
xor
bnd
cli
imul
mov
push
push
jecxz
pop
mov
das
out
adc
fs
and
and
movsb
inc
out
ret
fildl
jno
xchg
xor
jo
enter
xor
mov
rcll
sub
or
or
inc
sub
inc
int
dec
cmp
iret
ret
inc
mov
sub
adc
sbb
and
or
fdivrs
adc
add
stos
cmp
mov
mov
out
fxch
xor
ret
sbb
out
mov
pusha
loope
push
xchg
push
push
cmp
mov
mov
sarl
and
xlat
scas
mov
sar
test
dec
les
push
jecxz
jno
repnz
stc
push
out
or
xor
ss
mov
jmp
enter
daa
and
dec
push
das
inc
stc
out
pop
in
loope
popa
push
sbb
xor
popf
mov
xor
pop
rcrb
aas
sbb
cmpsb
js
stos
nop
mov
sub
test
out
es
push
xchg
dec
sbbl
cmp
mov
cmp
mov
jle
pop
xor
js
sbb
insb
inc
enter
push
dec
inc
jns
mov
xor
or
and
ljmp
outsb
sub
dec
sbb
mov
sbb
out
sub
es
sbb
xchg
mov
insb
je
repnz
adc
jno
lcall
dec
fidivrs
pop
xchg
adc
or
lods
add
int
test
repz
xor
mov
mov
dec
movsb
ja
pop
or
aad
and
mov
add
fwait
jne
mov
push
je
ficoms
sbb
idivl
loop
xor
cwtl
scas
out
or
inc
inc
jge
xchg
jge
lea
sahf
mov
add
mov
das
popf
push
push
pop
leave
mov
int3
lds
clc
rcl
mov
outsb
mov
pop
sahf
adc
ficomps
jnp
notl
pop
sbbb
lds
inc
mov
inc
pushf
sub
mov
xchg
stos
jbe
add
add
cmpsb
lods
lods
addr16
sub
dec
dec
cmp
fucomp
sub
lods
mov
in
mov
push
out
mov
xor
fnsave
pop
daa
mov
xchg
adc
cld
cmpsb
je
js
push
xchg
outsb
dec
mov
jmp
cmc
mov
outsl
outsb
out
xabort
lret
adc
and
and
xchg
shll
std
inc
jnp
inc
mov
xchg
mov
xchg
jecxz
sbb
mov
stc
xchg
xor
jp
movsb
lcall
mov
xchg
inc
out
in
adc
xor
into
gs
xor
xor
popf
sbb
xlat
cmp
out
mov
inc
mov
mov
cmc
es
shl
jns
mov
imul
jbe
nop
push
jae
fsubrl
inc
lahf
loopne
sbb
cmpsl
push
jecxz
mov
add
sub
push
mull
jne
add
xor
arpl
enter
ud2
xlat
xor
cmp
jo
push
cmp
aas
push
cmc
push
push
fdivl
lret
push
loopne
fldcw
cmc
mov
push
mov
lret
xchg
inc
test
push
rorl
rcrb
fdiv
xchg
mov
mov
push
dec
add
jns
sbb
push
les
inc
cmp
jl
jo
movsb
push
adc
inc
int3
add
push
outsb
ds
adc
lcall
jecxz
divl
and
mov
jno
popa
data16
pop
push
fdivr
inc
inc
sahf
dec
hlt
call
add
inc
mov
push
pusha
mov
les
xchg
push
or
mov
mov
js
add
or
and
push
imul
adc
cs
mull
in
push
arpl
or
xchg
jae
mov
jle
cs
loop
bnd
mov
mov
shrl
sbb
leave
xor
or
cmp
pop
loopne
lret
fildl
xor
sbb
idiv
aam
lahf
push
pop
lahf
adc
pop
mov
xor
imul
aas
repnz
fistl
or
lcall
sahf
xor
mov
cmp
jg
ljmp
mov
roll
inc
out
mov
enter
inc
test
imul
repz
xchg
out
cmpsl
dec
lcall
fimuls
push
mov
inc
fldcw
mov
in
inc
loopne,pn
xor
imul
int
or
mov
repz
ljmp
icebp
push
nop
ds
xorl
sub
xchg
cmp
stos
js
test
pop
loopne
sti
movl
jns
les
iret
xchg
dec
jecxz
dec
pop
fisubrs
or
out
dec
mov
cmp
out
inc
ja
rclb
pushf
stos
sarl
enter
push
test
hlt
adc
stos
adc
cmp
out
mov
ffree
jnp
pop
xor
jbe
aam
pop
ljmp
iret
jb
les
jg
es
loopne
pop
mov
es
push
and
movl
xchg
push
das
and
cmp
xor
repnz
mov
inc
imul
je
iret
dec
in
push
cmp
inc
test
and
lret
sub
jae
fdivrs
cli
cmovp
test
mov
mov
jnp
xchg
xor
outsl
sbb
int
test
mov
mov
bswap
outsl
pop
push
inc
dec
shrl
shlb
xor
lods
cmp
hlt
ja
or
mul
pop
scas
add
scas
fstpt
jl
stos
imul
inc
fs
pop
popa
mov
and
jb
inc
cld
adc
mov
dec
cs
insb
add
arpl
sub
call
xchg
mov
pop
sub
push
rolb
jp
inc
add
cwtl
pop
sti
jecxz
mov
in
loop
popa
xchg
sub
inc
pop
test
lret
popa
xchg
pop
add
sbb
jb
inc
rcll
repz
mov
lcall
fwait
pusha
stc
mov
fs
imul
cmc
divl
and
mov
ret
incl
divb
jno
pop
xchg
out
pop
lods
push
sti
sti
mov
repnz
shl
or
sbb
sbbb
pop
cmp
ret
or
pop
adc
ds
repz
testb
dec
int3
das
ja
push
cmp
pop
pop
repnz
into
shl
mov
mov
sub
pop
mov
std
cwtl
repnz
mov
into
adc
mov
sbb
in
sbb
fsubr
adc
call
cs
sub
aas
jbe
das
adc
test
add
inc
push
popa
cmpsl
and
push
pop
nop
in
nop
leave
out
push
jno
jg
xchg
dec
mov
sysenter
xor
push
fsubl
inc
or
mov
fildll
ljmp
out
jge
fdivrl
push
popf
rorl
loopne
aad
jp
insl
scas
fistpll
sub
outsb
push
outsb
pop
dec
xchg
mov
outsl
sbb
jp
cmpsl
pop
mov
sbb
aad
pusha
jmp
mov
enter
pop
lea
jp
jb
mov
cltd
xchg
ljmp
add
setbe
sarb
sahf
sub
fmull
test
icebp
int
clc
add
mov
push
popf
dec
ds
fbstp
push
movsl
jge
push
dec
jmp
inc
pop
aaa
or
je
iret
xor
leave
rolb
aam
push
inc
test
ss
iret
mov
mov
adc
lret
mov
shrb
xlat
adc
shll
lret
cmpl
sub
movsb
sub
mov
dec
scas
fs
repz
dec
loope
sbb
enter
xchg
daa
pop
mov
or
mov
dec
push
pop
lods
pop
test
imul
sbb
mov
push
pop
lahf
sbb
push
lds
cld
fcomi
or
pop
imul
and
ret
xor
enter
xchg
jne
mov
fisubs
aas
cmp
imul
add
mov
ljmp
add
cmpsl
sti
push
in
bound
pop
mov
dec
xorl
fs
bnd
in
fmull
popa
enter
outsb
cltd
loopne
arpl
pop
inc
movsl
es
ljmp
sub
xor
xor
cld
cltd
nop
mov
iret
pop
aaa
sti
push
aad
test
in
addb
bound
xor
mov
subl
mov
sbb
sbb
aas
jge
mov
hlt
jb
dec
xchg
add
xchg
jl
adc
rorl
mov
sub
data16
pop
cmc
cmp
fisubrs
out
out
mov
sbb
push
jae
in
cmp
xchg
ret
sub
adc
std
in
test
outsb
mov
lea
pop
daa
clc
pushf
es
jge
and
ljmp
inc
and
gs
ds
cli
lds
sarl
pop
fsubrl
subl
repnz
jecxz
dec
pop
or
mov
inc
jbe
pop
pop
add
outsb
adc
sbb
enter
sbb
arpl
nop
into
fwait
in
int
hlt
fwait
pushf
push
and
andl
xchg
add
ret
aaa
fs
stos
bound
lcall
inc
push
and
push
sub
pop
dec
adc
pusha
cmp
push
mov
addb
pop
push
pop
fst
inc
ljmp
rcrl
cmp
adc
stos
int
cmp
push
je
mov
test
in
scas
sbb
xchg
cmc
fldcw
mov
xor
insb
xor
rep
lods
rcrb
jg
aas
jle
adc
xlat
ljmp
insl
test
call
scas
test
mov
sub
test
mov
ss
push
inc
cli
dec
mov
jg
leave
xor
xchg
mov
pop
or
clc
lea
fnstenv
jmp
jo
push
cld
outsb
ljmp
cmp
push
loopne
enter
ret
adc
pcmpgtw
cmpsl
repnz
mov
mov
daa
shrl
mov
sub
mov
ljmp
pmaxub
dec
xor
insb
add
sbb
repnz
pop
notb
pushf
mov
xchg
and
mov
out
jns
lock
out
push
dec
gs
and
loope
arpl
imul
mov
fisubs
lds
mov
dec
mov
fwait
push
ljmp
ss
cmp
dec
xor
cli
mov
insl
sbb
stc
fisubl
icebp
stos
add
aam
xlat
repz
and
push
push
mov
cmp
inc
sarl
adc
scas
and
scas
sbb
fidivrl
xchg
push
fdivs
or
sbb
xchg
mov
or
jns,pt
inc
pmaxub
adc
add
xlat
lret
inc
outsb
push
xchg
add
mov
xchg
clc
sti
cmp
jg
jmp
lds
cmp
xor
sarb
call
cld
ror
xor
int
sbb
push
outsl
cmc
adc
inc
imul
xor
pop
data16
jnp
push
int
xor
mov
adc
cmpsb
pusha
inc
rolb
inc
sbbb
lea
xor
or
adc
call
inc
push
mov
xor
add
pop
adcb
sbb
test
xor
sub
jno
mov
repnz
std
icebp
xor
ljmp
hlt
inc
push
and
xlat
dec
inc
xor
popf
out
rorl
push
arpl
jle
cmp
lds
out
notl
push
gs
pop
lods
ret
das
mov
mov
sbb
je
out
test
faddl
push
mov
scas
sbb
cmp
das
xchg
pop
and
lcall
lret
adc
jb
and
into
sbb
stos
push
jmp
jl
daa
test
fs
adc
outsb
sbb
int
iret
push
pop
push
repnz
cs
cmc
push
sbb
scas
bound
mov
xlat
sub
sbb
xchg
pop
sarl
pop
in
ja
jmp
aam
xor
xor
jae
cltd
pop
add
mov
adc
clc
aas
add
and
sub
stos
dec
ret
sbb
mov
push
push
push
mov
dec
sub
adc
jae
adc
fcompl
dec
jl
dec
sarl
ja
dec
add
sbb
scas
mov
insb
lret
fisubs
sti
sahf
mov
aas
out
mov
into
inc
es
arpl
inc
jb
bound
dec
stos
mov
mov
mov
inc
pusha
inc
lret
lahf
or
inc
inc
adc
push
fiaddl
hlt
xchg
pushf
sbb
mov
cmpb
stos
rol
outsb
rcrl
mov
test
adc
daa
sub
jle
mov
and
pop
mov
mov
sahf
ffree
xorl
dec
insb
jle
sbb
pop
mov
push
push
or
push
rcl
sbb
adc
enter
jae
mov
lods
xchg
out
jbe
jge
sub
rolb
out
add
cmp
cwtl
lret
xorl
mov
repz
les
inc
ljmp
shl
jl
cmpsb
inc
lahf
mov
jns
jb
lods
das
inc
jg
dec
add
push
adc
sub
add
push
lret
xlat
or
cmp
push
test
push
mov
jg
inc
loop
jo
imul
movsl
scas
pop
jns
sub
insb
data16
cltd
es
imul
push
xor
mov
xor
daa
mov
int3
xlat
sub
out
ret
adc
cmpsb
aad
enter
add
pop
pcmpeqb
jmp
xchg
jp
mov
scas
dec
lock
insb
inc
sub
jmp
and
int
aas
repz
adc
mov
sub
test
insl
sub
cmp
xlat
push
outsb
int3
jmp
clc
stos
mov
inc
movsb
xlat
dec
bound
rcrb
in
cmc
xlat
dec
idivl
sub
mov
cmc
js
fidivrs
fbld
inc
inc
push
pop
jbe
push
and
xchg
sbb
pusha
xchg
xchg
mov
pusha
xchg
mov
out
adc
gs
les
jb
fs
push
cmp
subl
inc
push
mov
sub
push
mov
lods
fnsave
lret
ret
pop
insl
mov
stc
in
out
jae
adc
add
enter
jge
hlt
mov
fnstsw
push
ret
test
mov
mov
add
inc
sub
cmp
xor
loope
and
out
repnz
xchg
in
hlt
outsb
sub
mov
jle
jl
or
insb
rcrb
in
jle
hlt
shrl
xchg
ljmp
clc
and
mov
pop
mov
and
mov
or
ds
sub
addr16
and
rolb
jnp
sbb
sub
and
mov
repz
push
cmp
jnp
outsl
mov
aaa
in
mov
js
inc
jl
adc
sub
jo
sbb
outsb
jmp
xor
fcmovbe
addl
jle
dec
adc
inc
lods
outsl
cs
and
rcrl
loopne
and
sub
inc
adc
outsb
gs
mov
mov
jmp
push
lock
jne
cmp
fcomps
cmp
dec
in
insl
and
push
int3
test
jl
stos
bound
lock
lahf
mov
ret
ljmp
cmp
out
fidivrs
int3
movsb
pop
int
pop
jl
jo
cmp
jle
or
ljmp
popf
int3
mov
test
addr16
push
mov
leave
mov
mov
addr16
pop
xlat
push
outsb
es
addr16
xchg
pop
cmp
xchg
or
jmp
in
xchg
push
fcoms
daa
add
test
add
imul
rcrl
add
mov
lods
and
cmp
push
movsb
adc
sahf
and
xchg
lods
pusha
inc
pop
pop
push
leave
xchg
add
adc
sub
inc
ss
gs
inc
nop
pop
outsl
decl
out
aaa
enter
xor
insl
out
cli
adc
idivl
inc
shl
cmp
sti
mov
je
cmp
dec
enter
sarb
out
or
ja
cmpsb
sar
inc
sub
push
and
pop
add
or
popl
xchg
mov
xchg
pop
loopne
mov
rcll
inc
fimull
fisubl
mov
sbb
mov
mov
xchg
mov
sub
int
orl
daa
jle
std
insb
xor
jg
adc
cmpsl
es
lahf
mov
inc
lret
ja
dec
pop
cmp
adc
mov
and
cmc
test
fnstcw
stos
sub
push
xor
in
pusha
xchg
arpl
mov
push
dec
imul
jl
lret
cmp
inc
xchg
jle
mov
data16
daa
test
in
mov
xorb
ret
aas
das
and
xor
test
sti
cmp
push
cmpsb
push
das
xlat
pop
gs
testb
mov
ret
and
mov
mov
shlb
aad
bnd
bnd
jae
repz
mov
movsl
fidivs
dec
sub
mov
mov
iret
ret
mov
xor
call
and
mov
add
jo
icebp
pop
imul
cmc
sahf
insl
push
push
jns
nop
rolb
dec
out
add
fldt
out
cld
mov
mov
xchg
inc
adc
pop
insb
xor
xor
leave
push
scas
adc
lds
xor
add
push
mov
jge
lea
inc
mov
test
mov
xor
adcl
outsb
test
scas
shrb
rorb
movsl
dec
add
and
das
pop
push
or
mov
push
xlat
loopne
stc
mulb
sbb
outsw
call
daa
cltd
imul
cmpsl
mov
add
dec
dec
mov
int3
stc
adc
test
cmp
cmp
jns
sbbb
lret
jmp
bound
pop
sahf
lret
int
cmp
jecxz
add
or
lcall
je
sahf
mov
stos
fnstcw
inc
les
outsl
mov
or
and
outsb
inc
sti
xchg
cmp
and
add
jge
call
popf
xor
mov
fmull
sub
lods
stos
sahf
loopne
cmp
jb
adc
push
ljmp
out
je
lret
xor
shl
mov
xor
aam
in
mov
lret
iret
roll
inc
divb
icebp
or
outsb
nop
xchg
mov
das
fs
insb
jl
adc
and
ret
pop
mov
xchg
mov
fcompl
adc
add
pop
pushf
push
rorb
pop
outsb
add
xlat
imulb
mov
dec
or
sub
es
ss
or
inc
mov
ret
mov
push
sub
pop
mov
add
xchg
pop
add
shrl
lds
or
popa
pop
mov
aas
add
les
pop
popa
or
test
dec
push
cmp
or
pop
andb
or
notb
js
cmp
outsl
mov
push
add
xrelease
or
scas
flds
adc
add
das
in
add
jo
xor
enter
and
insb
test
inc
fidivl
gs
jg
inc
mov
inc
mov
add
loope
aam
mov
ja
sbb
mov
test
add
jns
sub
je
ret
adc
push
push
aad
inc
loope
lds
ljmp
mov
fisubl
xchg
out
xor
jg
pusha
xor
jl
ja
in
sbb
sbb
fisubrs
cmp
punpcklbw
push
adc
fnstenv
stos
mov
loopne
arpl
or
pop
ss
rcrl
in
jl
std
adc
xor
mov
leave
push
cmp
xor
scas
fldt
sub
xchg
push
leave
push
lret
or
jbe
jge
into
sub
adc
mov
inc
fisttpl
cmp
mov
cmpsl
aad
sub
jg
mov
mov
js
lods
cmp
and
xchg
shrb
das
loop
pop
and
jg
jnp
dec
pop
sub
cltd
movsb
mov
sub
and
es
mov
mov
mov
sbb
and
pushf
movsl
inc
out
fnstcw
mov
mov
scas
cmpsb
add
xor
arpl
call
sbb
aaa
pop
aam
inc
shll
jb
xorl
mov
and
jle
and
jmp
jge
sub
lods
notb
jl
into
mov
ret
mov
cli
pop
sbb
test
jo
das
pop
push
jo
and
stc
xor
mov
mov
pop
cs
pop
jae
test
push
sub
adc
cmp
adc
adc
ss
test
and
mov
and
pop
sti
adc
cmpsl
pop
arpl
inc
xor
xor
xor
or
mov
jmp
mov
inc
mov
mov
sbb
sbb
fcoms
push
leave
out
insl
ljmp
jns
mov
shl
fwait
push
dec
mov
js
jb
movsb
out
push
idiv
mov
xor
pop
pop
jnp
or
in
js
cmp
cmp
sub
aas
into
addl
out
add
push
negb
clc
imul
and
add
rolb
xchg
inc
xor
test
repnz
jns
mov
cmp
loope
xchg
inc
push
jl
inc
mov
leave
or
inc
sub
aad
xor
jp
out
xchg
push
xor
hlt
sub
dec
adc
sbb
dec
mov
fstps
cmp
in
sub
and
das
mov
aad
mov
test
cltd
rolb
test
cmp
dec
adc
inc
loopne
sbb
pop
cwtl
je
les
mov
data16
add
dec
sarl
pop
add
push
xor
scas
or
mov
jg
fs
sbb
jecxz
xchg
lahf
xchg
dec
movsl
jecxz
fildl
dec
fnsave
fs
dec
cmpsb
dec
nop
mov
xchg
inc
int
push
add
test
xchg
jne
and
out
xchg
xorl
jle
fsubs
jp
jmp
cmp
fucomi
or
imul
fisttpl
sub
xlat
jne
xchg
pop
repnz
push
and
shll
mov
imul
repz
scas
xchg
pop
jno
jp
jmp
ja
mov
imul
scas
xor
add
ljmp
pop
icebp
mov
std
xor
xchg
mov
pop
out
outsb
stc
daa
inc
shl
lds
pop
inc
dec
xchg
lea
pop
pop
cmp
cs
test
in
add
aad
pop
fwait
push
cmpsl
sti
popa
dec
jg
popa
lea
mov
das
fidivrl
loope
jecxz
push
mov
pop
inc
jle
ds
push
mov
mov
push
xchg
mov
jb
jle
lock
lcall
add
test
aad
insb
loope
or
sub
mov
fnsave
fs
xchg
mov
mov
pusha
push
lea
push
ret
jne
jo
mov
xchg
pop
sbb
mov
cmc
sbb
mov
mov
xor
mov
arpl
lcall
adc
popf
out
ss
mov
or
xchg
or
sarb
out
xchg
out
imul
cmp
sti
mov
scas
addr16
add
cmp
mov
dec
fsubs
cmpsl
ljmp
cmpsl
repnz
pop
xchg
pop
pop
in
cmp
xchg
pop
jge
or
lods
mov
inc
inc
add
adc
out
xlat
sbb
out
inc
loope
in
xor
or
adc
jne
ljmp
pop
arpl
filds
add
mov
ss
mov
test
cs
mov
test
cs
cmp
repz
xor
mov
jle
push
xor
test
mov
jno,pn
jns
out
js
into
int3
and
sti
jnp
arpl
pop
out
ja
lods
pop
mov
pop
push
fisubrs
xor
jns
les
lock
dec
add
bound
mov
sbb
icebp
jle
cli
push
or
add
pop
mov
sub
test
add
loope
xlat
sbb
aam
cmp
xor
data16
pushl
jbe
sub
mov
jns
push
sbb
inc
sbb
dec
xchg
adc
test
test
xor
push
scas
pop
jle
popf
xor
add
or
pop
fstpl
jbe
in
sbb
sbb
in
xor
aas
je
sti
xor
ds
loopne
scas
pop
push
gs
cltd
or
mov
dec
adc
inc
jb
scas
and
ret
inc
adc
mov
xor
rolb
mov
jecxz
aam
jge
xor
sbb
lods
sbb
jbe
jo
insl
rorb
mov
imul
cli
popa
mov
sub
fimull
imul
stos
clc
movsb
push
mov
mov
sub
dec
push
add
mov
hlt
sub
push
push
mov
add
popl
sub
mov
or
daa
dec
mov
xchg
inc
cld
rorl
push
lds
test
cltd
lahf
es
and
jnp
fnstsw
imul
imul
cmpl
or
out
shrl
imulb
push
sbb
mov
and
inc
popf
pop
incb
xchg
iret
push
ljmp
xchg
mov
add
xchg
stc
or
fnstsw
das
cpuid
jae
cli
das
mov
jns
push
aas
pushf
add
push
sti
movsl
loopne
lock
sbb
fldcw
in
bound
mov
cli
scas
mov
push
out
fwait
loope
in
fsubs
test
inc
xchg
scas
and
mov
in
dec
int
aaa
je
pop
lds
push
lret
shl
stos
popf
pop
popf
jge
test
cltd
mov
stos
pop
test
add
sbb
inc
cs
mov
outsb
mov
adc
iret
inc
test
xchg
daa
pushf
in
in
jle
xorl
out
pop
adc
xor
sbb
push
push
jecxz
rcll
cmp
es
add
add
rol
mov
jbe
dec
and
push
es
pop
inc
jmp
adc
push
xchg
mov
or
mov
leave
nop
xchg
sbb
mov
adc
pop
mov
cmp
popf
cmp
jae
cmpsl
rolb
inc
aad
shll
sbb
push
adc
mov
dec
lret
mov
dec
scas
adcl
jge
sub
inc
inc
cmp
mov
push
cmp
xchg
sbb
daa
insl
cmpsl
cltd
xor
fistl
cs
fimuls
test
popa
loope
fsubl
jae
adc
jae
xchg
sarl
xor
cmp
xlat
mov
aas
jmp
xor
sti
shl
push
jle
jnp
test
xor
pop
loopne
dec
insb
jnp
ljmpw
cli
pop
dec
jg
pushf
cltd
stc
mov
cmp
push
test
fs
cmp
push
rolb
aaa
dec
mov
lmsw
fimull
ret
mov
add
inc
jbe
add
jnp
add
test
and
jg
xor
movsb
fst
sub
add
lea
cmpsl
and
cmp
push
inc
or
jne
push
jl
xchg
jl
mov
adc
dec
xor
inc
fistl
sub
inc
pop
mov
test
pop
rolb
pop
or
aaa
xor
and
pop
notl
inc
aad
ret
add
test
or
and
mov
mov
add
inc
aaa
and
ljmp
xchg
pushf
xor
mov
ficoml
xor
aaa
and
fincstp
xor
sbbl
bound
and
mov
ret
pop
popa
sub
lret
repnz
add
inc
sbb
fisubs
and
dec
cli
mov
or
stos
andb
popf
lods
push
les
mov
inc
pop
jl
mov
out
mov
dec
sub
xor
and
imul
mov
mov
xchg
ds
adc
push
sahf
push
ret
add
pop
adc
sahf
sub
push
mov
and
ror
pop
loop
in
push
adc
mov
and
call
ret
in
clc
jne
iret
cltd
shrb
std
bound
pop
aam
inc
push
leave
xchg
pop
testb
mul
mov
addr16
cmp
jle
ret
decb
adc
and
pop
std
push
add
data16
push
idiv
iret
rorl
lret
inc
adc
mov
cmp
stos
mov
sbb
and
sarb
pop
add
jge
sub
fwait
pop
test
fwait
mov
push
out
inc
ret
sub
pop
and
outsb
movsl
add
in
fstps
and
and
add
aaa
push
mov
and
sub
lds
cs
xchg
test
out
decb
mov
test
jo
sub
pop
push
xchg
loopne
cli
pushf
xor
inc
ss
sbb
cli
repz
sbb
shrl
out
hlt
xlat
rolb
xor
pop
gs
push
fdivl
fiadds
pop
lcall
fbld
or
test
je
mov
sahf
outsb
cmp
cmp
dec
adcl
xchg
xchg
sub
xor
iret
mov
aam
jmp
add
cmp
hlt
addb
jl
inc
std
je
xchg
ds
add
inc
cmp
sub
loop
cli
mov
lret
aam
inc
movsl
cmp
icebp
push
insb
push
mov
test
mov
stc
mov
js
sub
xor
pop
loopne
and
pop
jne
aaa
xchg
xchg
xor
aas
call
pop
jnp
aad
sbb
aam
ret
ret
subb
das
push
push
mov
fcoms
sbb
mov
addr16
mov
push
push
mov
sbb
lods
mov
stc
lea
or
push
mov
jo
mov
lret
adc
xorb
rcr
jge
cmp
int
xor
lds
xor
je
and
adc
and
jmp
jle
cli
dec
bsf
push
cmp
inc
cmpsb
mov
and
pop
push
test
pusha
mov
push
iret
dec
pop
jns
iret
les
out
data16
lock
cmpsl
cld
je
divb
sub
inc
or
add
loop
aad
sub
inc
nop
mov
fldt
jne
lods
insb
sub
repz
or
pop
sahf
adc
aas
pop
lcall
inc
addr16
mov
stc
or
cmp
stos
pop
outsb
lds
cmp
popf
xchg
cmp
jge
in
shrb
lds
daa
lock
cmp
xor
ds
cmp
les
push
outsl
adc
lret
aad
mul
fisttps
mov
jge
fists
pop
mov
pushf
and
xlat
and
in
sub
xor
aam
les
push
xor
jo
xor
jno
inc
popa
mov
movl
ljmp
push
mov
sub
fs
pop
mov
pop
iret
mov
jecxz
clc
sbb
fcomps
push
sti
sbb
pop
loop
mov
push
cmp
clc
pop
fnstcw
cmp
dec
xchg
mov
scas
cli
fprem
push
lret
inc
or
xor
pop
fs
mov
decl
xchg
mov
sub
pop
out
icebp
ss
stc
cli
and
xchg
mov
inc
pop
cs
sub
cld
shll
xchg
mov
inc
jmp
pop
test
orb
shlb
sbb
mov
mov
inc
lods
mov
mov
inc
pop
pop
mov
mov
sub
sbb
adc
imul
add
xor
nop
in
repnz
xorl
inc
push
stos
lahf
cmp
scas
mov
popa
add
cmc
int
push
sub
or
fsubrl
jne
sub
in
xor
adc
in
lods
xchg
pop
and
in
nop
pop
push
jecxz
pop
out
rol
mov
in
and
rcrb
push
scas
fwait
ja
sbb
add
mov
aaa
int
loopne
add
aam
xor
push
push
call
inc
add
xchg
scas
or
loope
add
xchg
pop
imul
addl
adc
push
mov
adc
test
pop
mov
sub
rcrl
pop
imul
les
js
in
test
push
ja
or
push
ja
mov
cmpl
jne
jecxz
fstpl
adc
je
mov
and
shrl
sbb
cmp
adcb
mov
rorl
jg
sub
insb
sub
cld
sbb
lahf
adc
movsb
pop
jae
rcrl
mov
push
test
ret
xor
mov
mov
sub
mov
fistl
outsb
xchg
outsl
pop
cmp
ljmp
pop
lcall
mov
adc
jno
icebp
repz
test
repnz
rclb
mov
leave
pop
sarl
insl
test
cs
mov
lahf
insl
inc
mov
out
fldcw
fs
pop
fnsave
push
lea
popf
mov
ja
lahf
movsb
hlt
js
pushf
push
inc
sbb
pop
push
pop
xchg
scas
jg
mov
jl
js
in
xor
cmpsb
xchg
fnsave
notl
outsb
cmp
and
fwait
xchg
cli
imul
jae
jo
popa
imul
cmovle
fmull
js
mov
fimull
mov
jb
mov
xchg
push
rcrl
aaa
aaa
xor
xchg
add
mov
dec
addb
mov
sub
mov
adc
mov
lahf
pop
nop
into
inc
cs
mov
mov
push
rcrl
bound
or
sbb
push
fdivs
mov
loopne
mov
lods
xchg
cld
ret
inc
push
sbbl
dec
sub
xchg
repnz
jne
jmp
test
adc
mov
sub
divb
sbb
push
pop
add
inc
test
testl
in
xor
sbb
lock
jnp
lahf
mov
shlb
xlat
xor
aaa
in
jb
outsb
ss
jno
repz
or
inc
push
push
nop
push
lock
adc
int3
sti
sub
in
cmp
lods
xor
in
shrl
fstpl
add
icebp
imul
repnz
cltd
loop
call
push
sub
sub
xchg
jnp
icebp
incb
in
pushf
and
dec
cmp
jecxz
push
or
cmp
scas
out
cld
push
jp
int
movsl
rcrb
dec
jb
in
jle
lcall
icebp
fimull
push
hlt
xor
pop
inc
in
cli
lret
fidivl
repz
xchg
jle
or
aaa
fsubrs
repz
lock
mov
cltd
insl
mov
sub
pop
push
in
sbb
push
outsl
pop
out
sti
in
cli
in
fistpl
mov
and
push
sahf
das
imul
mov
mov
ljmp
push
test
inc
cld
sbb
insl
add
loopne
and
iret
test
xchg
fistpll
scas
push
push
mov
movsb
pop
outsb
adc
adc
add
mull
ja
pop
jnp
pushl
or
pushl
pop
jnp
or
fisubl
dec
scas
cmp
js
scas
and
bound
into
ror
cmpsb
fs
scas
add
jg
das
sbb
sbb
jne
dec
hlt
imul
sub
add
call
push
cltd
or
xor
outsl
imul
jp
push
gs
jno
mov
and
xor
ret
or
rcl
lods
imul
aas
cmpsl
sub
mov
push
and
aas
test
push
imul
cmp
jg
jmp
sbb
lret
jo
dec
les
test
lret
and
inc
orb
popf
and
xor
cmc
xchg
jbe
xor
inc
xor
cmc
pop
mov
in
cmp
sub
fisttps
jb
push
jp
mov
sbb
cmpsb
xor
int3
xchg
sub
and
popa
pop
pop
sub
sbb
std
cmpsl
sbb
mov
push
and
xchg
test
fimull
scas
mov
or
das
mov
mov
and
push
jnp
sbb
cmp
out
sub
orl
out
cmp
add
negb
daa
cmp
or
mov
mov
xchg
in
sbb
adcl
addr16
adc
insb
xor
xchg
sbb
lods
movsb
fdivrp
mov
popa
cwtl
mov
imul
out
lcall
mov
gs
mov
sbb
sub
mov
and
call
repz
inc
pop
mov
cmpl
loopne
sbb
cmp
jnp
rclb
rcrl
fisubrl
and
int3
leavew
in
dec
call
sarl
movsl
jnp
push
scas
imul
jecxz
mov
add
sub
push
xchg
or
fisttpll
sahf
imul
cltd
pop
or
stos
mov
mov
xchg
jbe
ljmp
add
and
push
test
sub
dec
inc
or
insb
push
fsubrs
sbb
imul
jmp
mov
xor
or
ja
xchg
sub
repz
adc
lods
out
push
cli
aam
mov
xchg
dec
jo
xchg
aas
ret
xchg
inc
add
mov
ja
and
inc
out
xchg
orl
rcrb
sbb
add
outsb
shrb
das
or
push
and
mov
fs
inc
xor
cld
mov
loopne
dec
xor
inc
cmp
movsl
jl
cmp
imul
pop
hlt
mov
lahf
jl
out
inc
inc
pop
inc
fsub
adc
pop
pop
xlat
fisttps
fwait
or
jnp
arpl
mov
icebp
pop
gs
loope
loopne
stos
mov
psubb
jne
stos
shll
cld
jge
sbb
inc
push
rcll
sbb
nop
cmpsl
mov
or
cmp
mov
xor
jle
mov
xorl
imul
shl
pop
test
dec
scas
jno
test
and
cmp
inc
lea
jbe
sysexit
push
push
stos
std
push
stos
mov
mov
addr16
mov
sbb
jne
cmc
jb
xor
push
je
sbb
ja
or
idiv
pop
and
inc
fsubrl
and
fbld
fldcw
mov
push
testb
popf
clc
sbb
adc
dec
push
jecxz
dec
arpl
adc
mov
pop
int
shlb
rcrb
adc
adc
lret
imul
cmp
test
in
push
int
mov
test
lock
pop
roll
sbb
test
lcall
fnsave
mov
sub
sbb
and
pop
pop
ffree
sbb
clc
aam
ja
loope
lea
mov
inc
je
test
outsb
fistl
imul
dec
insb
sbbl
iret
xchg
push
jecxz
in
fisttpl
test
adc
ja
push
mov
mov
sbb
cli
mov
jmp
mov
pusha
add
test
push
mov
imull
push
push
and
sbb
xor
loop
in
enter
ret
jae
jmp
aam
scas
pop
pop
adc
adc
imul
xchg
xor
push
add
push
sub
mov
pop
or
ds
sub
cmp
xchg
icebp
imul
mov
ja
xchg
addl
push
popf
jae
lds
mov
push
push
push
adc
sbbb
clc
out
mov
pop
cli
lods
pop
and
jle
cmp
adc
popa
scas
dec
mov
pop
or
xor
lods
test
or
in
dec
les
movsl
lcall
repz
xlat
scas
inc
fcoml
mov
pop
mov
mov
cmc
push
push
and
enter
jecxz
bound
pop
aad
sbb
aam
int
out
jmp
push
shrd
jg
test
ja
les
sub
stos
loop
mov
frstor
xor
xchg
jp
stc
repnz
adc
push
xchg
lock
pop
mov
je
cmp
jne
inc
lcall
out
or
or
mov
pop
push
popl
test
mov
clc
push
xchg
push
xchg
jne
mov
cld
shll
leave
jno
movb
cli
lcall
sub
js
mov
cmp
adc
mov
or
xor
push
and
xchg
inc
out
dec
pop
in
add
les
test
dec
or
pop
leave
add
pop
stc
sar
testb
add
aad
push
cmp
fidivl
cmp
pop
cmpsb
jno
xchg
fs
jmp
adc
pusha
inc
xor
mov
sbb
mov
call
xor
mov
aas
into
push
cmpsb
aaa
cltd
ficompl
and
pop
loope
shl
cmp
loope
orl
lock
push
inc
pop
dec
pop
lahf
jle
jl
ljmp
popf
mov
push
sbb
fcom
js
add
lret
lret
xchg
rcll
dec
add
push
sub
lahf
pop
dec
push
mov
js
add
jp
dec
jl
add
aaa
ret
push
loopne
dec
in
movsb
fdivrl
call
lock
lods
xor
mov
push
fdivrp
bsr
fnstcw
dec
xor
sub
adc
xchg
ja
nop
mov
dec
or
sub
and
or
lock
sahf
je
ret
aad
pop
into
push
sti
sbb
dec
dec
popa
pusha
inc
jp
push
es
push
das
mov
mov
cmp
dec
adc
in
cs
xor
ffree
cmp
and
mov
dec
fsubrs
pop
push
ret
out
add
outsb
movsb
adc
iret
lods
sti
sub
pop
mov
outsl
jmp
loopne
dec
call
fistps
xchg
movsb
jle
push
mov
outsb
pop
mov
lcall
test
in
out
mov
mov
shlb
gs
or
out
jbe
in
fwait
out
in
cmpsb
push
mov
insl
sbb
clc
outsb
popa
cmp
mov
push
enter
or
fmuls
inc
imul
mov
cli
inc
scas
cli
ret
mull
andl
inc
lods
adc
jl
jge
push
bound
clc
and
pop
xor
sahf
xchg
jb
repnz
test
ret
push
sbb
sub
int
cs
pop
mov
xchg
test
xchg
jmp
or
in
movsb
inc
jmp
jle
pop
cmp
dec
out
cs
and
shl
mov
ret
dec
jne
loope
push
push
add
subl
bound
ljmp
adc
pop
arpl
cld
mov
push
pusha
shrb
dec
cmp
add
add
push
xchg
std
das
or
movsl
stc
dec
cmp
push
pushf
je
js
jge
notb
pop
ljmp
mov
lds
aaa
pushf
jae
test
js
and
inc
fstpt
or
push
rcrl
inc
cs
jl
dec
mov
aad
pop
pop
ds
jns
loop
lahf
inc
test
in
dec
xchg
aaa
dec
add
push
repz
icebp
je
push
or
sbb
sub
popa
fcompl
stos
fmulp
aas
test
push
lret
push
lcall
jae
cmp
cmp
push
mov
arpl
rclb
xor
aas
xchg
cmp
les
mov
sbbl
clc
stos
mov
add
or
mov
push
jg
das
popf
inc
mov
inc
cltd
pop
cmp
add
cmpsb
add
dec
xor
mov
mov
and
push
push
lea
mov
pop
cmp
push
adc
mov
pop
xchg
mov
or
mov
pop
lret
out
add
xlat
push
add
jg
xor
mov
gs
bound
jo
lds
pop
jno
sbb
in
mov
xlat
mov
stos
dec
in
or
dec
test
pop
push
ds
xor
lods
pop
std
lods
xor
fisttpll
add
xchg
inc
jo
pop
aam
xchg
or
sbb
enter
nop
lock
xchg
or
fists
xchg
and
lods
xor
pushf
push
inc
stos
lret
jb
into
xor
adc
push
bnd
push
movsl
adc
inc
mov
xor
popa
cmc
jg
in
aaa
andw
mov
dec
cld
adc
insl
cld
cmp
adc
shrl
imul
xchg
mov
add
or
cmp
inc
xor
dec
repz
and
bound
cmpsb
sbb
pusha
out
cmp
mov
idivl
mov
or
mov
push
and
dec
hlt
pushf
lcall
xor
pop
lds
xchg
push
fisttpl
or
dec
in
dec
and
dec
stos
push
xor
scas
cli
jo
mov
or
mov
cwtl
sti
jns
movsb
dec
cmp
adc
pop
cmp
stos
dec
stos
pop
arpl
jns
sub
pop
sahf
cwtl
xor
into
lcall
stos
stos
mov
ja
in
dec
fmuls
lret
adc
push
imul
stos
push
test
cltd
pop
mov
push
outsl
imul
pop
xchg
add
int
arpl
mov
nop
xchg
pop
bound
lds
push
jbe
dec
pop
mov
xlat
cld
or
mov
inc
mov
pop
subb
cmp
lcall
lahf
imul
jb
add
sub
scas
adc
test
jno
ss
mov
xchg
outsl
xchg
add
sti
repnz
int
sbb
jns
enter
mov
jno
std
sbb
jb
xchg
rcl
push
out
fidivrs
xchg
and
sbb
jne
sahf
push
pop
mov
jo
es
push
xor
into
xor
pop
mov
jns
scas
movsb
sub
test
je
movsb
aad
mov
jp
movsb
addl
mov
sub
mov
dec
pop
mov
mov
cmp
stos
sub
pinsrw
push
test
dec
test
js
test
adc
xor
adc
fiadds
xchg
sbb
pop
and
lods
push
jmp
inc
into
mov
movsb
ret
sub
xchg
jmp
adc
or
jae
call
stos
icebp
popa
daa
mov
rorb
mov
mov
xor
jns
pop
ss
inc
pop
push
mov
imul
pop
jbe
xchg
push
xchg
cmpsb
js
sbb
sbb
mov
sub
popf
sbb
lret
xlat
lock
aad
add
add
cs
push
movsl
add
test
or
addr16
cmpsl
in
sbb
out
lods
add
and
xor
mov
hlt
push
fcompl
leave
rorl
sbb
xor
mov
pop
dec
repz
stos
jo
adc
xchg
fs
cmc
call
mov
icebp
mov
and
push
push
adc
cwtl
dec
mov
clc
cmp
or
pop
loop
or
pop
out
mov
ds
clc
mov
push
cmp
call
inc
add
clc
push
sbb
and
call
add
lahf
inc
mov
cld
jge
sub
xlat
mov
ss
sbbb
pop
cs
add
xor
fimuls
and
sar
pop
jbe
lcall
das
lea
lahf
and
jecxz
xchg
mov
scas
clc
mov
lea
sub
push
insl
mov
add
in
loope
outsb
movsb
ss
and
int
xor
enter
adc
cmp
and
ret
or
imul
push
adc
popf
lds
xlat
shrb
jecxz
icebp
jmp
jecxz
fisttpll
inc
mov
mov
xor
std
hlt
pop
pop
ret
fists
or
mov
movsl
scas
pop
test
shlb
mov
xor
and
outsl
in
pop
ja
dec
movsl
jbe
xor
adc
inc
in
pop
int3
mov
or
or
cltd
out
imul
dec
pop
lea
pusha
rcr
pop
mov
sbb
int
ret
cld
loop
xlat
cmp
cmp
or
xchg
popa
mov
lds
sub
data16
adc
insb
jo
leave
and
push
adc
sub
jne
xchg
out
xor
cmp
fisttpl
shlb
dec
push
xchg
sub
addl
cmp
repz
push
int
enter
push
sub
jo
ret
popa
pop
xchg
or
int
jmp
jo
movsb
pop
arpl
imul
movsb
fiadds
shrl
lea
rclb
daa
pop
ljmp
mov
cwtl
cmp
ret
aam
xor
jg
xlat
scas
shll
dec
push
jnp
inc
cmp
cmc
jbe
test
sbb
push
pop
or
pop
push
lcall
out
mov
loop
roll
mov
sbb
push
push
pushf
pminsw
or
out
stos
int3
adcb
xchg
mov
rorl
xor
xchg
jp
jg
jne
jne
xchg
push
das
mov
cli
jns
pop
pop
cmc
xchg
pop
adc
sbb
out
inc
mov
lea
mov
jnp
bound
inc
test
lahf
ja
rolb
mov
fnsave
xchg
roll
mov
xchg
and
aam
xor
int3
pop
dec
repz
popa
dec
jmp
shrl
xlat
inc
dec
stc
les
std
iret
aaa
xchg
in
add
shrb
sbb
adc
ds
push
or
insb
mov
icebp
mov
add
movsl
cwtl
mov
sub
gs
loope
lcall
dec
push
icebp
icebp
cmpsl
fnstsw
cmp
test
fwait
and
xchg
fisubs
and
mov
mov
cmpsl
movsl
jno
lds
mov
xchg
daa
xchg
movnti
or
loop
mov
and
mov
gs
mov
mov
insl
popf
or
addl
mov
jno
gs
or
ja
shrl
sbb
cmp
out
loopne
mov
jmp
mov
push
mov
mov
pop
dec
sbb
mov
cwtl
xchg
dec
or
arpl
popa
dec
stc
cmp
cwtl
out
jbe
jecxz
pop
pushf
cmp
cwtl
sar
xlat
xchg
sub
arpl
push
sub
jg
in
mov
or
fnstcw
lods
sub
dec
jns
mov
sub
jmp
xor
les
mov
sub
cmp
outsb
pop
js
lods
xchg
stos
jge
js
xor
sbb
movsb
xchg
mov
out
push
popf
mov
daa
and
push
adc
pop
push
outsb
fstp
into
stos
mov
or
xchg
mov
jg
sbb
lcall
and
test
imul
xchg
sbbb
rorb
fidivrs
push
pop
jno
lahf
mov
aad
std
in
lret
adc
rclb
cmpsb
das
push
addr16
cs
jae
xchg
add
push
or
pop
jl
xlat
sbb
cmp
jg
xchg
mov
int
jae
adc
ret
xchg
inc
adc
ficoml
sub
jo
adc
std
frstor
cs
call
dec
shlb
push
mov
lret
neg
pop
outsl
out
lahf
imul
mov
xchg
xchg
idiv
pop
fs
sqrtps
pop
cmp
stc
fstps
adc
arpl
into
pop
adc
test
test
mov
pusha
push
cld
cmp
mov
adc
jp
stc
enter
inc
insl
test
mov
repnz
add
xor
push
popf
in
xor
scas
or
ja
jge
sbb
aad
jp
push
pop
imull
shrl
add
cmp
inc
sahf
cmpsl
xchg
xor
mov
jecxz
jo
pop
outsl
adc
sub
mov
insb
pop
es
push
pop
sub
rclb
sub
std
ja
inc
testl
push
mov
enter
aam
mull
orl
stos
mov
fld
mov
lods
popf
sbb
dec
adc
mov
inc
ja
out
imul
ja
lods
dec
fs
inc
sub
sbb
cmpb
xchg
outsb
pop
mov
negb
pusha
cmp
mov
mov
test
sbb
mov
adc
pusha
sbb
test
cmp
aad
test
add
push
mov
in
mov
arpl
loope
push
jecxz
push
cmpsb
es
sbb
adcl
test
fdivrs
fdivs
mov
movl
xor
adc
subb
mov
sub
add
mov
push
and
les
cmpb
icebp
gs
xchg
pop
lock
je
outsb
ret
cmp
nop
or
add
jno
mov
cmp
jae
or
aas
repz
mov
jo
cmp
repz
jle
mov
movsl
adc
xor
insb
shrb
inc
out
addr16
lock
cmpsb
push
mov
mov
loope
pop
imul
xchg
jge
mov
jnp
and
inc
adc
xor
faddl
mov
dec
test
xchg
fiadds
cmp
lods
mov
inc
popa
fcoms
xchg
data16
sbb
insb
push
inc
xor
mov
pop
or
mov
out
pop
fbstp
mov
cli
fistpl
lahf
loopne
jnp
movsl
push
cmp
jg
cli
rorl
sub
lock
insl
adc
pop
and
push
xor
inc
shl
mov
or
ud1
mov
mov
mov
popa
std
rclb
mov
mov
mov
push
pushf
dec
cmp
mov
test
ljmp
arpl
sbb
lcall
shl
sub
js
mov
into
inc
adc
sbb
lods
rcrl
push
data16
sbb
lahf
jmp
cmp
cli
mov
mov
insl
test
pusha
or
sahf
or
js
xor
push
cmp
mov
pusha
push
jne
lret
xchg
cmp
dec
mov
les
clc
add
push
repnz
add
jnp
mov
out
movsb
lahf
outsb
cwtl
fistpll
push
sar
inc
imul
and
push
out
mov
mov
clc
repnz
xchg
xchg
mov
rol
dec
mov
xchg
clc
aas
outsb
cmpsl
fucomp
stc
push
adc
mov
mov
mov
jmp
bnd
push
leave
lods
pop
sub
int
xchg
into
xchg
mov
add
loop
sahf
in
cmp
stc
cmp
mov
sbb
cld
mov
js
jnp
outsl
jns
xchg
fidivl
sti
sbb
negl
shll
mov
push
push
shlb
sti
add
cmpl
mov
lahf
addr16
adc
xchg
lcall
or
int3
mov
xchg
hlt
popf
mov
fwait
in
loopne
mov
push
test
mov
into
dec
push
pop
call
pop
dec
adc
cltd
pop
stc
hlt
pushl
lret
mov
or
inc
pavgb
lahf
mov
lahf
sahf
and
leave
out
iret
mov
nop
xchg
push
nop
mov
cmpsl
imul
mov
ror
jle
insb
imul
out
rcrb
ret
mov
out
comiss
mov
stos
cli
cmp
imul
mov
in
outsl
ljmp
mov
movsl
fistpl
fs
stos
mov
mov
and
mov
xor
fdivrs
test
jo
mov
dec
js
jmp
or
and
test
inc
repnz
das
cmp
aad
loop
and
fidivs
iret
ficompl
inc
lcall
add
sahf
addr16
outsl
inc
out
mov
sub
and
cmp
and
iret
push
data16
pop
nop
lea
hlt
push
nop
cmp
lcall
stos
and
and
mov
cmovge
int3
sub
out
loop
jge
sub
addl
cmp
mov
xchg
ljmp
and
pushf
or
mov
fs
xchg
or
dec
add
jo
dec
and
lret
push
lcall
cmpsb
pop
fdivrs
jae
sarb
mov
sub
mov
imul
cmp
xchg
cmc
adc
and
loopne
and
xchg
mov
jne
inc
mov
push
sti
mov
dec
cmpsl
and
jg
movsb
inc
sbb
fldcw
or
cltd
jno
pop
sub
daa
inc
cmc
jg
jp
filds
cmp
and
mov
push
sti
pop
ror
adc
je
aas
mov
mov
mov
or
frstor
lret
push
test
and
adc
outsl
xchg
jo
adc
stos
movsb
jmp
jno
and
sub
scas
push
mov
leave
push
add
or
jle
mov
outsl
jg
out
fcompl
loopne
std
shlw
xchg
and
ds
pop
clc
push
push
push
jecxz
xor
imul
and
sti
push
fwait
push
fmulp
notb
add
les
inc
hlt
add
lret
repnz
imul
shlb
subb
pop
add
jb
mov
ror
inc
xchg
scas
out
mov
fldt
xchg
pop
add
jbe
cltd
rorl
cmp
imul
cmp
pop
test
scas
fstps
mov
inc
call
out
inc
xchg
mov
mov
and
xchg
add
mov
out
test
and
stc
pmullw
jge
ja
andl
adc
rcr
xchg
sub
mov
mov
stos
xchg
stos
jg
popa
lods
imul
in
add
push
add
inc
test
xor
pop
dec
fcmovu
negl
loope
cmp
scas
push
fstl
cmp
and
or
xor
ret
xlat
jnp,pn
pop
mov
sarb
mov
je
mov
cli
mov
int3
push
inc
pop
pop
out
dec
inc
adc
cs
inc
jl
push
dec
ret
or
out
movsb
cli
cmpl
jnp
nop
mov
fdivs
lods
push
clc
sarb
adc
mov
or
imul
or
and
add
mov
or
push
adc
mov
subb
pop
push
rorl
add
pushf
jb
sub
idivl
fadd
scas
jmp
imul
adc
pop
jae
ja
or
stos
out
stc
jno
data16
gs
pop
dec
sbb
daa
pop
dec
inc
xor
jge
test
adc
movsl
addb
test
push
data16
in
xchg
pop
cmp
incl
jle
or
push
pop
out
in
adc
jb
call
cmp
aam
jmp
aad
mov
xor
add
std
jne
daa
in
bound
xor
push
sbb
mov
mov
sub
or
mov
mov
mov
jmp
movsl
mov
sbb
rcrb
add
aam
cli
stos
mov
jmp
sbb
inc
shlb
call
xor
push
push
mov
mov
inc
repnz
jae
sub
adc
cltd
test
xchg
addr16
dec
dec
pop
fisubs
dec
in
leave
aaa
dec
mov
inc
cmpl
push
test
mov
lock
fnstcw
repz
out
xchg
out
dec
xor
xor
bound
or
lcall
and
push
xchg
add
sub
add
add
add
fadds
and
into
ja
inc
adc
call
fists
pop
pop
sbb
mov
fisttpll
mov
dec
mov
insb
lret
push
push
jnp
es
aas
jno
dec
popa
rorl
repz
lds
sar
inc
aad
pop
dec
scas
popf
repz
cmp
add
hlt
fwait
xchg
filds
jb
ljmp
sbb
into
mov
sub
add
leave
sub
test
test
jge
lahf
cmpsb
lods
jb
imul
mov
std
test
inc
and
je
repnz
pushl
ds
nop
push
adc
popa
xchg
das
int3
cmpsl
xor
loope
xchg
mov
sub
mov
xchg
mov
outsl
ds
adcb
mov
xlat
xchg
fimuls
sahf
mov
inc
stos
pop
cli
mov
sbb
sbb
pop
rcrl
xor
test
jmp
mov
mov
cmp
add
mov
int3
jmp
dec
stos
jecxz
idivb
repz
dec
jl
xor
hlt
aas
sbb
ljmp
stos
jae
lret
jle
or
cs
xor
inc
add
adc
pop
shlb
testl
nop
shl
jecxz
in
inc
jecxz
cmp
sub
inc
push
adc
test
mov
popf
fcmovb
cmp
adc
mov
push
add
je
out
ljmp
jle
loope
mov
sbb
and
imull
stos
push
fs
arpl
jmp
fdivrs
adc
aaa
mov
out
pop
pop
ds
mov
mov
cmp
pop
and
pcmpeqd
out
mov
sarb
addr16
test
cs
pop
dec
dec
pop
mov
fwait
xor
pop
adc
nop
push
psubq
pop
cmp
into
stc
loopne
test
xor
int3
frstor
xor
push
fstl
sbb
inc
add
mov
mov
sub
dec
cmc
push
cltd
test
fmull
mov
adc
clc
push
aaa
mov
or
pop
nop
pop
mov
inc
dec
xor
fnstenv
and
icebp
jle
es
addr16
xor
cmpsb
cli
inc
cli
fsubr
jmp
cmp
fiadds
add
int3
test
xchg
loopne
mov
push
repnz
jle
mov
lods
cwtl
loopne
inc
aam
inc
sub
movsb
mov
and
insb
jl
insl
aam
mov
cli
movsb
pcmpeqb
push
popa
or
cmp
data16
out
ret
aas
or
rcrb
sti
xor
xor
iret
push
adc
out
imul
sar
scas
call
sti
mov
imul
aam
sub
cs
fiaddl
in
push
xchg
notl
cli
mov
mov
mov
rolb
push
stc
and
in
sar
mov
jnp
addr16
jge
push
inc
inc
add
sbb
mov
adc
xor
pop
and
push
std
push
mov
aaa
imul
test
push
jle
clc
add
jb
stos
test
adc
push
inc
je
pop
add
hlt
sbb
push
cmp
testl
add
xlat
or
insb
xor
aam
lret
mov
ljmp
imul
in
inc
insb
or
rcrl
and
test
and
or
mov
nop
fbstp
int
jno
lret
enter
mov
mov
sbb
mov
xchg
jge
lock
mov
ljmp
ljmp
xor
lock
ds
fidivs
or
or
push
dec
mov
inc
testl
push
or
and
cltd
jns
xchg
cs
mov
das
ljmp
pop
inc
pop
shrb
das
adc
ss
out
mov
push
not
push
outsb
adc
cli
ds
cltd
in
sub
cmp
das
std
imul
pop
pop
xchg
jmp
mov
xor
out
mov
mov
pusha
out
xchg
adc
push
xlat
cwtl
jge
rcll
shlb
std
or
imul
popf
sahf
test
fimuls
sti
jg
mov
cwtl
adc
aaa
in
fcompl
divb
nop
xchg
addb
xor
popf
sub
or
fiadds
mov
sti
add
mov
or
loop
jmp
in
fisubs
test
jo
fwait
dec
int3
ja
mov
xchg
xchg
xchg
in
xor
in
and
add
sub
enter
push
iret
pop
repnz
sub
out
loop
shrb
xchg
jbe
or
mov
imull
pop
pop
cmc
js
aad
addr16
push
mov
xchg
sbb
xchg
nop
xor
xor
sbb
or
jo
mul
ljmp
pop
push
pop
out
jne
js
fisttpll
cmp
dec
leave
fwait
mov
js
ficoms
cld
scas
cmp
inc
xchg
inc
les
mov
fldl
sub
inc
out
unpckhps
dec
lds
inc
inc
test
jb
ret
sub
repnz
sub
xchg
sub
pop
xor
push
adc
rol
mov
loop
hlt
icebp
mov
inc
es
push
mov
sahf
pop
mov
xor
mov
into
cmpb
pop
sub
shl
jno
push
jne
mov
hlt
dec
mov
inc
imul
dec
xor
sbb
jmp
stos
or
push
ja
cmc
mov
pop
adc
loope
pop
xor
stc
divl
loope
aad
xchg
sbb
arpl
in
add
lds
in
or
cmp
lret
sub
mov
pop
pop
mov
and
jb
into
das
pop
or
sub
ret
stos
mov
sub
add
jl
fidivrl
es
je
loope
hlt
xchg
in
les
xchg
out
fdivrs
inc
inc
shrl
cltd
ret
fisubrl
icebp
xchg
fsubp
mov
xor
xor
pop
mov
or
addr16
insl
push
nop
dec
cmp
jmp
sub
test
aas
fistpll
xor
lods
cmp
aas
lock
add
mov
lahf
and
mov
movsb
sahf
pop
out
imul
out
and
loop
pop
inc
cmp
loopne
loop
ret
subl
addb
cld
or
cwtl
or
shr
adc
add
pop
xchg
cmpsb
mov
subb
daa
js
imul
inc
inc
dec
in
dec
pop
cmp
sbb
sbb
mov
sahf
fucomi
and
cwtl
mov
and
push
mov
cli
mov
adc
mov
sub
data16
lock
push
sti
and
push
mov
push
inc
inc
ja
and
sarl
dec
and
dec
xchg
cmpsl
xor
adc
shrb
sbb
mov
and
sub
cli
push
jnp
dec
pop
xchg
push
mov
out
mov
dec
lcall
cmpsl
imul
or
orb
xchg
scas
ja
mov
sti
ret
xor
jg
cmp
or
mov
test
lcall
cltd
icebp
inc
xor
ja
pop
push
fistpl
pop
sbb
jo
xchg
imul
jl
mov
pop
dec
mov
jle
out
js
cmc
sub
inc
inc
push
sub
lds
inc
leave
cmp
inc
push
and
arpl
cmp
jge
xchg
stos
lret
push
in
fisttpl
xchg
lret
xor
icebp
xor
movl
pop
push
and
int3
into
lcall
or
push
test
test
das
and
add
dec
rorb
ret
test
cmpsl
or
xchg
xor
je
lret
jle
sub
pop
xor
into
stc
cs
push
sub
repz
imul
rolb
pop
sub
negb
and
jle
pusha
jle
push
lods
push
and
push
leave
and
adc
test
in
pop
pop
push
stc
add
inc
inc
or
jno
out
fisttps
inc
popf
xchg
popaw
or
sahf
loop
repnz
adc
es
ds
lock
add
xor
jle
pop
jae
ret
xchg
inc
cwtl
mov
mov
add
xor
push
test
mov
lret
mov
mov
rorb
add
orl
cmp
ss
sbb
lahf
adc
ss
xchg
push
cmp
xchg
push
in
int
test
inc
dec
xor
adc
xchg
xor
pop
dec
cmp
in
ss
lods
stc
inc
lods
jl
addl
adc
pop
das
loope
mov
out
ds
sub
jno
sti
out
dec
imul
xor
repz
mov
mov
pop
push
sub
xor
sub
push
ss
cmpsb
jl
pop
jmp
rcll
jo
pusha
sar
sbbb
or
mov
cmpsb
aad
bound
repnz
push
jg
sbb
mov
movsl
lar
fimuls
je
mov
adc
adc
push
cwtl
add
mov
addr16
push
pop
fisttpll
xchg
adc
daa
lods
das
es
xchg
cmp
inc
outsl
ljmp
bound
push
push
push
mov
mov
ret
xchg
std
cmp
adc
outsl
mov
rorb
ret
in
pop
out
add
add
sahf
jge
fwait
mov
jnp
jbe
lods
xchg
and
mov
adc
push
lods
pop
clc
test
cmp
adc
inc
leave
cld
mov
dec
jge
lds
test
scas
fldcw
int3
push
xor
aad
or
in
sub
mov
mov
lahf
aaa
pop
aam
test
or
mov
movsb
jbe
mov
inc
fs
push
jl
or
jge
xor
or
sub
and
inc
adc
cld
mov
or
inc
cli
mov
popf
mov
inc
add
shrl
mov
int
push
sub
jo
xchg
in
std
sub
jno
iret
pop
test
in
mov
or
xchg
in
dec
mov
ret
fs
dec
jecxz
jbe
daa
fmuls
adc
je
mov
pop
in
insb
dec
aam
sbb
andb
dec
pop
fs
pushf
pop
lahf
jb
inc
push
lret
test
in
fsubl
roll
or
movsb
push
mov
mov
dec
xchg
loope
push
dec
lock
sbbl
cmpl
add
adc
mov
fstp
daa
iret
out
adc
sbb
fmul
cmpb
or
cmp
mov
inc
inc
pop
lods
ljmp
push
ja
out
push
mov
jp
addb
cld
xchg
sub
bound
iret
repz
push
aaa
pop
xor
cld
sbb
iret
dec
sbb
jbe
ficoms
fistps
ret
stos
imul
sbb
pop
mov
sub
stos
loopne
add
aam
cs
push
or
mov
jp
jno
andl
mov
jp
out
imul
jae
shl
popf
test
mov
cld
les
inc
sbb
popf
jb
aam
test
pop
nop
dec
aas
or
aad
pop
popf
test
jle
mov
aas
aad
daa
mov
out
sbb
sti
test
fs
cmpsb
adc
pop
adc
ja
mov
movsl
stos
pop
in
adc
shrl
jno
arpl
and
xchg
push
mov
adc
fisttpl
hlt
jecxz
xorl
std
daa
pop
pop
es
mov
or
add
add
out
insl
int3
xchg
ficompl
push
sub
mov
js
push
jmp
mov
xchg
sbb
mov
arpl
dec
xor
inc
ret
fists
popf
xlat
out
adc
adc
orl
pushf
xor
test
add
leave
stos
cmc
das
test
fistl
shr
cmpsb
inc
mov
cmpsl
mov
pop
aam
inc
cmpsb
xor
sub
mov
fsubrl
pop
ja
shlb
in
jns
ja
insl
mov
inc
sub
sar
aas
push
sub
orl
push
std
add
sub
jp
das
test
xchg
ss
xor
and
test
mov
jbe
lahf
push
jae
sbb
mov
lahf
push
add
or
fwait
sub
jns
xlat
cmc
sbbl
loop
xor
jmp
and
out
test
xor
cld
fisttpl
test
mov
stos
pop
and
cmp
pause
mov
or
ljmp
xor
scas
inc
hlt
jbe
add
out
stos
push
cmp
js
fstps
jecxz
and
leave
cwtl
mov
mov
mov
sub
or
sub
bnd
scas
in
or
fwait
jle
loope
sub
aaa
imul
lret
jbe
in
xor
mov
stos
test
insl
dec
push
adc
lods
mov
outsl
addr16
sub
int
mov
cmp
adc
js
xchg
mov
jle
mov
xor
pop
and
clc
jp
lods
xchg
fdivrl
push
cwtl
mov
test
jo
pop
loopne
xchg
imulb
or
cmc
out
inc
lret
or
pop
jne
push
push
push
sub
and
push
push
push
shl
imul
movsb
fidivrl
jg
out
or
and
pusha
pop
mov
adc
mov
into
lock
cld
pop
dec
xor
popa
cmp
mov
sbb
test
imul
mov
cmpsl
outsb
cmp
and
mov
add
add
dec
dec
mov
cmpsl
mov
dec
out
and
push
ljmp
pushf
inc
fldenv
pop
in
adc
inc
cs
pop
mov
in
xchg
mov
mov
or
cwtl
adc
push
jne
and
mov
and
mul
test
xchg
dec
pusha
xor
movsb
fisubs
add
dec
add
nop
jns
roll
push
sub
sbb
push
imul
pop
sbb
cmpb
mov
out
hlt
add
aam
dec
inc
xchg
inc
inc
jae
mov
jge
pop
mov
add
daa
mov
ljmp
stos
dec
lock
cmp
mov
mov
or
xor
fsub
mov
sub
scas
and
xchg
std
fucomip
and
sbb
insb
hlt
cs
and
sub
cmp
mov
mov
and
shll
and
stos
rclb
adc
scas
rclb
jg
pop
adc
out
fidivrl
out
mov
push
sbb
xor
rcll
lds
pop
loope
push
fs
in
fsubrs
mov
adc
pop
fistps
mov
jbe
mov
out
add
fsubl
rolb
mov
push
or
cli
mov
jecxz
mov
mov
add
in
or
rorb
jbe
lods
ret
xor
repz
push
dec
rol
int
push
lock
cwtd
dec
cmpsb
fldt
push
repnz
push
and
subb
inc
add
and
repz
inc
jne
mov
mov
jp
jl
fistpll
in
dec
mov
jecxz
pop
pop
in
jecxz
cs
add
mov
and
pop
shrb
mov
mov
test
cmpsb
mov
adc
cmc
jl
pop
jge
pop
mov
jle
imul
add
add
fmul
sub
mov
sbb
push
push
popl
clc
add
push
inc
and
out
jmp
jb
fsubrs
jmp
mov
pop
fisttps
xor
int
fwait
dec
cmpsb
jge
loope
testl
inc
stos
jns
daa
cmp
js
fiaddl
rclb
xor
mov
loope
sbb
std
cmc
fstpt
mov
dec
adc
cmpsl
or
sbbl
movsb
xor
loope
xchg
int3
push
mov
dec
fldt
lods
push
in
mov
stc
mov
mov
rorb
sub
mov
in
cltd
lods
xor
insb
int3
inc
mov
adc
data16
jnp
scas
ficompl
stos
mov
adc
dec
pop
sbb
mov
push
mov
mov
pop
add
pop
adc
aam
mov
inc
adc
inc
mov
lock
dec
cltd
dec
and
mov
into
sbb
pop
mov
pop
mov
or
fwait
push
fistps
mov
in
cmpsb
add
out
test
push
lret
jg
sarb
clc
cli
jbe
add
sub
push
into
stos
mov
adc
shlb
mov
je
pop
add
jecxz
or
jmp
dec
out
je
adc
xlat
pop
popa
xor
dec
xchg
sub
dec
stc
movsl
and
les
ficoml
or
adc
mov
in
cmp
shl
movsb
push
dec
lahf
inc
rolb
dec
test
cmpsb
test
dec
aas
insl
aaa
dec
into
add
sub
push
lock
jbe
jbe
dec
lods
cmp
sbb
stos
push
out
xchg
push
jne
rol
lret
lds
dec
testl
and
cmp
es
jg
clc
fstpl
and
add
popa
jg
lret
addr16
aad
adc
ja
push
nop
add
sahf
and
pusha
mov
fnsave
icebp
pop
sbb
dec
cmpsb
jns
mov
enter
cwtl
in
test
dec
fdivrs
cmp
sub
jmp
int
shll
xor
inc
icebp
sub
and
mov
push
into
scas
sub
jb
test
ret
mov
add
aas
ljmp
loop
mov
push
es
and
cmp
xchg
add
test
test
mov
outsl
fdiv
into
int3
jmp
dec
lea
push
inc
outsl
add
mov
ror
pop
adcl
mov
xchg
xor
jno
aad
push
pop
mov
xchg
ss
js
std
aas
push
xor
je
adc
pop
stos
pop
mov
roll
inc
cmp
mov
mov
cmp
adc
lcall
mov
scas
or
dec
clc
add
xchg
cs
ja
es
adc
sbbl
int
push
cwtl
xchg
mov
sbb
mov
call
into
push
pop
mov
mov
imul
mov
xor
push
repnz
adcl
mov
pushf
pop
push
pop
leave
or
adc
icebp
mov
popf
or
inc
or
lahf
and
ljmp
addb
add
int
aad
and
stos
dec
iret
xor
leave
sbb
sbb
mov
repnz
add
sar
andb
repz
adc
sbb
es
xor
xchg
data16
mov
pop
adc
pop
xor
cmp
push
mov
shlb
mov
stos
pushf
outsl
xor
pop
add
and
out
inc
dec
jge
call
or
push
negl
test
rorb
lea
add
daa
jp
xor
push
add
mov
arpl
jnp
popf
subb
loop
xlat
sbb
dec
jp
das
xor
xchg
pop
es
sub
icebp
pop
or
xchg
add
sbb
and
mov
adc
mov
xchg
inc
pop
cmc
stc
scas
adc
push
add
jp
xchg
out
fimuls
sahf
dec
xchg
pop
aaa
xchg
add
enter
xchg
inc
mov
xchg
repz
cmp
pushf
cmp
jnp
pop
aas
loopne
ja
xchg
aas
cmpsb
pop
cmc
out
aaa
xor
dec
cld
mov
xchg
push
out
pop
ja
xchg
xorl
adc
pushf
mov
or
xchg
jecxz
rol
int3
pop
rcll
int3
enter
xchg
and
xchg
cmc
mov
or
pop
fstl
mov
sbb
adc
pop
cmp
out
and
gs
inc
filds
mov
gs
jae
add
sahf
popf
fdiv
cltd
stos
push
pop
sub
cmp
inc
jo
daa
fadds
push
or
test
jp
dec
in
into
cwtl
lods
inc
pusha
in
call
out
pop
stos
xchg
add
xchg
inc
push
jp
pop
fsubrl
scas
ret
push
insl
fwait
dec
jae
mov
shlb
repz
dec
test
adc
xor
cmpsb
stc
lahf
daa
shll
andl
jns
xor
jne
pop
cmp
adc
add
or
lea
mov
leave
test
dec
sbb
mov
and
stos
jp
mov
bound
jp
xlat
and
popa
popf
adc
push
and
shrl
xor
add
add
shll
add
hlt
mov
dec
xchg
int3
add
mov
jnp
dec
imul
push
or
adcb
mov
jns
incl
dec
mov
jbe
adc
enter
add
nop
push
xchg
adc
push
fdiv
pop
xor
pop
mov
iret
mov
sub
jnp
mov
roll
std
sti
inc
lret
nop
pop
jl
sarl
mul
in
daa
shrb
inc
test
in
and
push
in
scas
in
jle
dec
outsl
movhps
mov
dec
shlb
pop
pop
pop
popf
je
aas
insl
push
xchg
sti
xchg
xchg
ret
enter
stc
ja
mov
gs
add
lods
sbb
mov
mov
loope
xor
sub
or
nop
mov
daa
inc
pop
scas
mov
test
fimuls
or
dec
mov
jecxz
test
out
lahf
loopne
enter
in
dec
cmc
shl
or
imul
adc
test
adc
adcl
dec
or
mov
fidivrl
das
sub
ficoms
loopne
icebp
xchg
add
sbb
mov
adc
addl
mov
cmp
cmpsb
mov
add
mov
testl
lods
ja
aam
adc
out
mov
insl
xchg
lods
loope
je
adc
mov
push
test
cmp
fisttpl
fisttpll
sbb
stos
inc
hlt
dec
jno
div
pop
mov
sti
push
dec
push
pop
inc
cld
stc
cmpsb
inc
fnstcw
push
pop
fisttpll
jge
call
inc
std
les
pop
arpl
fwait
inc
bound
call
mov
pop
cmpsl
fldl
sbb
lods
bound
pop
subb
pop
mov
outsl
cmc
dec
lea
loope
jmp
and
xchg
jo
test
loop
enter
xor
push
in
cs
xchg
loop
sbb
test
sub
push
dec
das
ljmp
push
dec
mov
mov
test
jo
stos
bound
js
je
and
add
fistl
xchg
les
js
xor
xor
xchg
or
sbb
jle
outsb
push
jo
or
lds
or
in
jno
mov
shr
push
mov
pop
push
nop
stos
cmp
cmp
pushf
adc
into
cld
xor
sbb
pop
sahf
mov
xor
or
xor
mov
mov
sub
pop
pop
cmp
and
sahf
ret
mov
shll
xor
dec
nop
push
inc
in
sbb
ret
mov
mov
flds
in
jp
sub
sub
pop
mov
push
pop
arpl
mov
test
decl
imull
inc
sti
jnp
scas
dec
pushf
inc
ja
mov
lock
cmpsb
lahf
push
xor
ljmp
or
cmp
arpl
icebp
sub
xchg
bound
es
js
add
pop
mov
sbb
ret
mov
or
or
jp
inc
imul
adc
xor
pop
mov
stos
cmp
fdivr
xlat
jns
shll
jbe
test
adc
xchg
outsb
loope
test
push
je
cmpsl
fmull
sub
push
sahf
nop
sbb
add
out
movsl
cwtl
sub
jb
mov
cmpsb
les
xor
sti
push
push
cli
xchg
dec
repnz
xorb
jne
cmp
push
push
ljmp
push
lret
mov
lahf
and
dec
push
and
je
mov
mov
je
push
push
mov
dec
cmp
jo
dec
jbe
lods
mov
inc
loop
jbe
or
xor
sub
xorl
outsl
push
mov
mov
gs
icebp
sub
into
mov
inc
add
sbb
call
shll
push
and
repz
fs
jmp
in
cld
and
xchg
rolb
push
out
ret
lahf
jns
cs
add
cmc
pop
jae
mov
int3
outsb
repnz
test
mov
stos
pop
inc
pusha
inc
inc
cmpsl
or
mov
stos
and
icebp
mov
test
xchg
lret
ja
loop,pt
cmp
dec
loopne
repnz
scas
popf
adc
popf
jnp
out
repz
mov
mov
insb
shl
clc
xchg
jne
icebp
jne
rol
addr16
mov
push
cmp
test
add
sbb
clc
imul
bound
fstl
mov
mov
sbb
je,pt
hlt
inc
push
fadds
inc
mov
sub
cmp
cmp
cmp
mov
andb
fwait
mov
sub
pop
dec
push
or
sub
pop
iret
xor
test
inc
jle
decl
inc
jg
shl
add
addb
idivb
adc
pusha
sbb
xor
xchg
cli
push
outsl
mov
outsb
fiadds
mov
mov
xchg
mov
xlat
sbb
mov
mov
and
and
pop
inc
jle
ret
or
pop
fldt
sti
insb
cmc
push
fcoms
cmpsb
or
sub
lea
inc
pop
pop
fdivl
or
and
sbb
mov
out
cmp
cltd
test
fldenv
adc
adc
xor
sub
cli
movsb
add
cltd
sub
cmpsb
push
push
loopne
mov
sub
pop
pop
or
dec
cmpsb
iret
mov
imul
mov
aam
ljmp
fwait
or
mov
or
repz
xor
mov
push
sahf
or
popf
lds
dec
xor
faddl
mov
xor
fs
dec
mov
mov
clc
cmp
and
sbb
fldl
inc
mov
mov
cltd
xor
pop
cld
je
jmp
add
cmpb
addl
sub
mov
iret
jle
aaa
mov
sarl
lds
lock
dec
jge
push
sahf
cmp
lods
stc
out
test
out
lahf
ret
sbb
in
movsb
mov
outsb
aaa
or
mov
mov
aas
add
pop
imul
int
add
add
ljmp
lcall
inc
mov
jb
sbb
pusha
xchg
jns
mov
inc
scas
test
fdivrl
push
adc
cmp
lods
jp
cmp
test
xor
pushl
lods
add
pop
sub
lds
xchg
enter
or
sbbb
aam
jmp
cwtl
jecxz
call
clc
enter
add
push
push
daa
loopne
jg
mov
ljmp
mov
pop
movhlps
sub
daa
popf
jle
push
xchg
jne
lock
aas
es
aad
jae
addr16
pop
inc
jb
icebp
inc
cmc
and
mov
mov
sub
cli
jmp
test
cltd
push
lods
dec
rcrb
lcall
mov
cwtl
xchg
cmpsb
and
pop
fdivs
out
pop
in
jg
mov
lret
dec
mov
cwtl
pop
js
adc
rsm
cmc
mov
or
iret
jns
ljmp
cmp
mov
lock
push
ret
pusha
test
shrl
push
fwait
pop
mov
sbb
ret
jecxz
push
xchg
and
sub
xlat
jbe
pop
sbb
std
sahf
int
push
bound
ret
cli
cli
pop
jae
daa
adc
insb
mov
mov
xchg
out
in
mov
in
inc
out
dec
pop
mov
jmp
outsb
xchg
into
lods
push
into
std
add
into
sarl
cmp
or
sahf
in
push
mov
mov
cwtl
test
hlt
push
sub
pop
mov
int3
movsl
scas
into
jge
insl
fidivrs
jae
lahf
enter
pop
lret
cmc
or
or
call
pop
lret
jg
pop
daa
push
inc
dec
dec
incb
sub
mov
jns
movsl
sbb
pop
cmp
and
lds
inc
cmp
movsl
add
mov
lods
movsl
adc
inc
mov
shl
loop
or
xchg
mov
and
xchg
popa
xchg
cs
push
dec
negb
add
aad
sahf
and
call
cmp
movsb
cmp
or
ja
loopne
js
imul
dec
into
adcb
mov
mov
cmp
lahf
sbb
out
enter
imul
shll
sub
shl
in
sub
mov
repz
call
popa
js
outsb
nopl
ljmp
mov
inc
insl
mov
outsl
push
mov
mov
loopne
rclb
ss
xchg
js
mov
ljmp
fnsetpm(287
adc
ljmp
shrb
dec
in
in
inc
std
pop
push
mov
mov
enter
lods
scas
xor
movsl
fildll
adc
ss
adc
sbb
adc
xor
lcall
outsl
stos
sub
test
cmpsb
push
and
lret
pusha
cmc
inc
lret
syscall
or
sub
dec
aas
pop
jle
test
jmp
sub
mov
xchg
insb
cmp
aas
je
nop
dec
data16
add
fnstsw
adc
push
jno
movb
inc
cmp
pop
or
ss
int3
push
fidivrs
loopne
int
add
je
fwait
sub
std
mov
cmp
and
lods
jns
ds
inc
mov
movsb
xor
pop
outsl
or
xchg
mov
jbe
jmp
xchg
jno
push
mov
lock
jo
mov
sbb
dec
add
syscall
cwtl
lret
add
add
pop
ljmp
lds
pop
sar
dec
shl
sbb
lods
mov
push
cld
test
in
cmpsb
leave
pop
sbb
xor
pop
outsb
adc
xchg
cltd
subb
or
add
jle
mov
mov
lahf
dec
push
into
pushf
scas
xlat
into
cs
mov
adc
fwait
jp
push
icebp
loop
dec
push
jnp
lds
dec
lods
push
out
lods
or
dec
ja
repz
lea
lds
lcall
mov
cmpsb
sbb
add
pop
xchg
adc
mov
movsb
and
insb
lahf
dec
dec
push
push
jge
or
inc
or
adc
pop
jns
mov
ss
lcall
jmp
out
pop
outsl
jmp
in
and
adc
mov
add
sbb
fs
inc
sub
xor
mov
mov
jae
mov
outsl
mov
jne
or
stos
adc
mov
js
inc
xchg
inc
xchg
dec
xchg
xor
sbb
popa
imul
jbe
fs
es
sbb
mov
add
mov
xchg
icebp
cmpb
inc
dec
xchg
inc
inc
mov
stos
mov
popf
out
ret
sti
notb
fbld
lock
fwait
aam
xchg
jbe
add
das
sti
ljmp
pop
jg
cmp
inc
pop
in
push
mov
mov
mov
rorl
imul
nop
mov
outsb
jno
cmp
subb
shll
call
push
rcrb
dec
adc
repnz
addb
clc
stos
aaa
adc
scas
mov
ljmp
out
xor
xchg
inc
lahf
repz
dec
aaa
das
push
pop
dec
arpl
addr16
sbb
xor
std
dec
push
data16
jecxz
push
imul
out
pop
shrl
je
cmp
aaa
lcall
imul
fdivrs
sbb
xlat
cmpsl
test
bound
popf
mov
shrb
xor
jmp
into
sahf
jno
or
jns
inc
cmp
cmpsl
xchg
cld
xor
lock
ds
dec
popa
lea
dec
push
push
jge
xor
in
mov
int3
and
aaa
cmp
fists
popf
test
arpl
and
jbe
popf
mov
sbb
inc
jne
lods
pop
xchg
repnz
dec
cmp
sub
jne
jae
sarb
in
leave
rol
in
xchg
loope
jne
sar
aaa
aad
sub
je
pop
push
lock
jmp
pop
sbb
insb
inc
ucomiss
sbb
js
icebp
popf
cmpsb
push
negb
mov
loopne
sub
pusha
arpl
or
scas
mov
pop
pop
and
lods
sub
add
push
leave
push
mov
pop
leave
push
push
jmp
leave
pop
xlat
insl
stos
mov
mov
adc
cltd
mov
xor
adc
dec
mov
mov
or
push
and
jle
iret
xchg
loope
stc
push
xor
jecxz
shl
rcr
add
sbb
pop
cld
push
mov
or
int
adc
lcall
inc
add
jmp
scas
and
pop
movsb
push
pop
push
sub
pop
loope
jle
ljmp
test
cmp
mov
add
mov
sub
push
aam
inc
out
imul
mov
andb
jl
mull
divb
js
je
test
cmc
in
cs
xor
leave
scas
cs
and
jge
jmp
scas
std
sub
push
movsl
aas
lahf
push
lahf
lahf
ret
jecxz
push
xchg
arpl
dec
out
rcll
dec
push
xchg
inc
fdivrs
pop
mov
dec
dec
push
sbb
ret
loop
mov
pop
test
or
je
jmp
push
lcall
xlat
or
mov
inc
out
mov
imul
data16
adc
cli
das
call
and
or
arpl
pop
sbb
test
test
ret
or
jmp
stos
rcr
imul
or
xchg
push
dec
push
inc
sbb
inc
mov
lods
icebp
sub
cmp
sets
pushf
mov
addr16
and
xor
push
fsubrl
les
cmp
fisubrl
out
nop
daa
dec
sub
sbb
ja
mov
sti
int
sub
jp
xlat
jmp
cvtdq2ps
pusha
xchg
xchg
add
adc
jmp
loop
mov
and
inc
add
cmp
and
xchg
inc
pusha
xchg
cli
dec
out
pop
xchg
fwait
inc
dec
xor
push
out
xchg
enter
imul
jae
std
cltd
xchg
xchg
sbb
mov
ss
outsb
call
mov
fistpl
pusha
jge
push
fimull
adc
pop
pop
xorl
inc
cs
inc
adc
rolb
adc
lret
mov
pop
cwtl
lods
inc
cs
jmp
loop
icebp
pop
pop
push
decb
pop
or
ret
cmpsl
jg
imul
pop
fstl
and
xchg
cmpb
loop
push
dec
popa
pushf
sbb
int3
pop
mov
dec
ss
and
jecxz
inc
adc
out
push
fldenv
insl
add
mov
test
sbb
aam
mov
push
shld
cs
adc
adc
mov
and
mov
faddl
es
inc
jmp
xorb
out
mov
pop
inc
cmp
popf
inc
dec
mov
add
popf
aad
gs
pop
fisubs
out
hlt
lea
cli
dec
dec
inc
pop
pushf
adc
add
push
or
es
aad
jmp
sbb
cmpsb
ljmp
mov
inc
pop
jo
pushf
mov
sbb
in
cld
negb
mov
leave
cwtl
mov
imul
shr
and
aad
and
push
push
cwtl
and
daa
scas
pusha
fwait
xlat
cmp
aam
mov
adc
inc
pop
std
loop
jnp
sbb
jb
stos
rcll
mov
dec
or
mov
insl
pushf
aam
insl
insb
add
cltd
fildll
push
pushf
ret
test
dec
dec
xor
and
loope
push
pusha
aas
ljmp
fisubrl
aam
xchg
repnz
push
sbb
hlt
dec
fsubrp
inc
jp
xor
div
inc
cmp
inc
add
imul
push
mov
jno
sbb
lahf
mov
push
xchg
aam
push
pusha
mov
cmp
negb
dec
lds
add
enter
push
xchg
mov
sub
jmp
adc
lcall
pop
imul
pop
imul
scas
js
push
mov
pop
dec
je
icebp
jmp
gs
stos
shll
inc
pop
or
lods
sub
mov
das
les
mov
inc
insb
mov
sarl
sar
push
xor
mov
ret
repnz
je
movsb
movsb
mov
cltd
mov
xchg
aas
clc
dec
in
add
xchg
push
lods
and
pop
jo
ret
push
int3
test
dec
cmp
sbb
int3
sbb
sub
mov
rcl
push
cmp
cmpsl
sub
pop
mov
cmpsl
in
cmp
shll
dec
fcompl
sbb
loop
xor
inc
jae
dec
pop
xchg
cmp
insb
pop
mov
or
sbb
movsb
inc
pop
sub
adc
clc
fadd
notb
jecxz
push
mov
hlt
imul
cwtl
cwtl
fldt
mov
enter
sti
outsl
cmpsb
jecxz
pop
or
jecxz
jge,pt
js
pop
jb
inc
sub
iretw
mov
dec
pop
adcl
cmpsl
add
pop
push
mov
mov
xor
std
lock
daa
hlt
add
xor
rcr
jb
or
dec
dec
aas
jb
mov
int3
xchg
add
repnz
cs
mov
sub
pop
push
fstl
gs
andl
push
faddl
outsb
inc
mov
repnz
jnp
roll
and
cmp
daa
xchg
jns
movl
pop
gs
fisttps
inc
test
and
lods
int
loop
jge
xchg
sbb
push
aaa
push
int3
xchg
repnz
testl
leave
cmp
xchg
mov
aaa
jg
xchg
test
adc
push
movsb
icebp
adc
inc
pusha
mov
jns
das
add
xor
pop
xor
out
int
jo
fisttpll
das
xor
out
data16
jnp
pop
mov
or
aam
jmp
loop
dec
imull
inc
sub
aas
sub
repz
ljmp
repnz
xchg
xchg
dec
push
nop
xor
ja
mov
or
sbb
xchg
jge
pop
jp
pop
jecxz
mov
cltd
xor
insl
push
or
sub
enter
insb
adc
adc
jno
popa
jbe
and
and
es
icebp
cmp
and
addb
xchg
mov
cmc
xor
dec
sub
fdivrl
or
adc
out
bound
jp
sti
loope
stc
popa
jo
clc
pushf
cmp
dec
ss
mov
pop
sub
mov
xchg
push
lret
ljmp
xor
or
outsb
fwait
cmp
xorl
mov
xchg
fdiv
into
movl
mov
jno
fnstsw
scas
call
pop
sarl
orl
jl
fisubs
sbb
mov
xchg
pop
iret
cmp
imul
jle
fucom
out
sub
cwtl
xor
loop
dec
sub
jno
add
xor
xchg
cmp
mov
push
xchg
push
fdivrp
call
mov
lods
aaa
inc
ss
jnp
sub
int3
adc
shll
ljmp
push
pop
cmp
pushf
jp
xchg
lcall
add
imul
shll
scas
neg
pusha
inc
vmulps
cmp
xor
inc
or
adc
cltd
jns
das
arpl
stos
dec
js
cmp
cmp
xor
xchg
in
mov
cwtl
test
cld
jg
mov
push
ljmp
sar
out
and
xor
outsl
dec
subl
cmp
pop
out
insb
pop
pushf
or
and
dec
sbb
dec
jmp
mov
or
pusha
fadds
sub
and
icebp
sahf
hlt
push
sbb
mov
mov
inc
xchg
cld
das
or
xchg
mov
or
fwait
or
push
cmp
xchg
add
or
mov
xor
inc
jecxz
push
mov
lcall
fsubl
mov
mov
enter
xor
lock
inc
fbld
jle
xor
adc
push
inc
dec
fsubrl
jp
or
xchg
sbb
jle
mov
adc
lcall
sub
or
test
inc
dec
adc
cmpsl
mov
push
jns
inc
and
push
js
daa
push
pop
cmp
cmp
das
outsb
add
push
pop
adc
sbb
stos
xchg
pop
lods
sahf
add
adc
adc
rcll
test
and
pop
iret
add
mov
ja
repz
mov
jle
lods
iret
mov
cmp
and
pop
mov
add
and
mov
xchg
push
jb
je
lds
inc
imul
push
mov
pop
jmp
cmc
or
xor
mov
cmpsl
stos
inc
movsb
lods
lods
int3
inc
cmp
pop
data16
call
cltd
sub
nop
push
repz
push
adc
jne
adc
sti
pandn
and
stc
pop
mov
jmp
xor
loop
xlat
nop
fsubr
dec
or
lock
push
pop
sub
mov
mov
sub
ret
repz
fstpl
or
mov
jne
test
pop
jns
aam
mov
push
or
sbb
mov
mov
popa
repz
sbb
and
or
rcl
test
mov
rolb
insb
arpl
call
push
dec
out
mov
mov
jge
inc
cli
push
or
fiadds
add
leave
cmp
lods
mov
fdivrs
call
loop
in
jp
ss
push
pop
lea
or
ss
scas
xlat
insb
dec
jg
enter
cmc
inc
fsubl
clc
rcr
or
xor
jns
stos
pop
add
loope
pushf
jnp
xchg
cmc
sbb
jmp
xor
and
dec
lods
jp
lds
cmp
sub
aaa
shrl
jae
mov
pop
repnz
neg
sbb
ds
jecxz
shlb
popf
fdiv
dec
stos
jmp
sbb
fwait
lea
andb
push
jge
popf
jp
imul
sub
xchg
cmp
jle
insb
pop
stos
inc
pop
fs
nop
out
pop
add
icebp
pop
mov
repz
pop
dec
es
mov
inc
addr16
enter
pop
xor
inc
roll
add
cmpsb
leave
fcmovnbe
lods
pop
call
mov
pop
sub
and
sbb
addb
sbb
sub
aam
clc
push
lret
dec
stc
into
pop
fiaddl
push
mov
jae
cs
xchg
into
cs
scas
sub
push
int
or
daa
jle
inc
int3
sub
jp
adc
cwtl
jl
mov
pushf
sub
mov
orl
cltd
add
pop
mov
cmp
imul
mov
or
call
inc
addr16
fidivs
mov
mov
jp
mov
pop
mov
leave
or
aas
mov
insl
popa
cmp
add
repz
cmpl
movsl
scas
push
sbb
jmp
leave
xchg
jecxz
mov
cmpsl
hlt
xlat
xchg
pop
adc
xor
pop
xor
inc
int
lds
xchg
mov
add
in
cs
jne
add
push
add
inc
rorb
cwtl
int
ds
pop
bnd
in
push
iret
int
cmp
mov
scas
arpl
xor
or
dec
addl
inc
movsl
cmp
out
xchg
dec
cmp
movsb
jo
inc
xchg
lea
xor
push
or
sbb
or
leave
push
pusha
xchg
add
aaa
into
rolb
test
ret
xchg
aad
orb
jl
jnp
arpl
pop
popa
mov
push
adc
enter
out
loope
push
test
dec
rcrl
jp
insb
push
cmp
int
and
and
or
fldt
dec
nop
and
cmpl
jg
ficoml
fcoml
ret
lcall
hlt
push
push
xchg
jge
inc
in
lahf
dec
push
pop
pop
imul
push
push
push
jl
ja
iret
jl
clc
lods
jecxz
sub
pop
push
in
sti
fisubrl
ljmp
cmpsl
sub
adc
mov
pop
mov
fiadds
fildll
pushf
adc
adc
jp
cmp
mov
leave
es
jne
clc
outsb
pusha
cmp
pop
pop
dec
sbb
adc
out
movsl
adc
pop
sub
clc
pop
cmpsl
and
in
or
cwtl
and
mov
pop
xchg
inc
pusha
push
push
das
xchg
mov
xor
mov
xchg
stos
data16
sti
aam
lock
mov
aas
push
inc
jg
lods
in
arpl
repnz
and
cmpsb
cmpsl
cmp
jge
adc
popa
xor
sti
xchg
mov
ficompl
test
jmp
hlt
gs
repz
xchg
add
fisttpl
add
enter
sub
mov
scas
add
insl
mov
push
push
not
daa
fstl
xchg
push
mov
jge
in
stos
inc
adc
add
xor
sar
xchg
aaa
insb
pop
shlb
lret
sub
addr16
pop
iret
cli
clc
and
jbe
inc
push
lret
or
nop
push
jne
fcom
dec
xor
test
jnp
sbb
pop
inc
cmpsb
sahf
lret
iret
dec
or
sti
jmp
in
out
xchg
mov
push
xor
inc
sahf
sar
addl
pop
cmc
xchg
aaa
ja
shr
sbb
mov
test
iret
or
lock
mov
aad
inc
test
push
out
add
adc
or
xchg
and
push
mov
sahf
jp
push
orb
cmp
lds
sbb
sbb
xor
inc
mov
mov
popa
jmp
std
mov
cmp
and
jge
jns
pop
imull
push
mov
mov
push
mov
cmp
jnp
enter
stos
loope
in
mov
and
dec
mov
push
ja
clc
divl
cmp
ljmp
adc
ss
fld
aad
ret
sub
push
flds
mov
insl
test
add
or
cmpb
xlat
into
bound
and
adc
testl
das
in
hlt
lcall
ret
push
cs
shll
dec
push
cmpsb
out
ja
ds
lods
jb
aam
jp
test
stos
stos
dec
popf
pop
sarb
and
inc
push
sbb
stc
mov
sbb
mov
inc
inc
leave
add
sub
xchg
add
es
in
jns
mov
inc
gs
mov
push
fmull
push
and
mov
mov
pop
js
xorb
aas
jecxz
or
mov
out
xor
in
fcoml
mov
hlt
mov
cmp
popf
fidivrs
sub
pop
lods
insl
fucomip
dec
pmulhuw
jp
mov
and
inc
cmp
out
push
mov
mov
or
lea
sbb
adc
jb
lcall
mov
pop
ss
xor
adc
ja
and
mov
mov
je
rol
int
addr16
dec
sub
push
and
scas
dec
in
jb
stc
jnp
sbb
mov
mov
inc
push
imul
loopne
xchg
js
scas
lret
fidivs
data16
and
out
xchg
lds
adc
hlt
mov
enter
roll
ljmp
test
sub
push
inc
movsl
mov
jp
addb
xchg
jmp
add
jg
repnz
jle
nop
mov
stos
dec
out
push
inc
and
or
jne
xlat
mov
adc
jecxz
cmpsl
mul
test
push
adc
and
incl
in
arpl
iret
movsb
xchg
inc
dec
push
in
push
subl
gs
pushf
mov
pop
outsl
xchg
out
sub
cltd
mov
cmpsl
push
mov
mov
insl
or
mov
insb
mov
addr16
fisubs
stos
dec
add
repz
mov
ret
add
shlb
sti
and
adc
out
pop
dec
sub
cmp
sub
cmpsb
xor
mov
out
sbb
daa
pop
lods
pusha
jp
in
jecxz
lock
adc
fnsave
fsubrs
and
push
push
in
cmp
icebp
xchg
aas
mov
dec
add
daa
cld
push
sub
stc
fsubs
pop
pop
fbld
xor
outsb
fistpll
push
adcl
jo
adc
sbb
inc
push
pushw
push
fimull
push
and
dec
aas
mov
addr16
add
mov
or
pop
or
add
push
push
push
pop
addr16
xor
fwait
pop
adc
xor
push
test
push
scas
sbb
fistps
xchg
rcrb
push
and
mov
push
leave
sbb
int3
add
setl
push
push
mov
out
std
es
xchg
mov
cwtl
sbb
xor
push
addl
nop
sub
mov
push
mov
aad
or
cmp
xlat
loopew
and
loopne
orb
mov
inc
insb
pop
cmp
sub
mov
out
jae
pop
aaa
adc
mov
sub
cmp
lcall
leave
icebp
scas
or
out
mov
in
aad
lcall
repz
decb
xchg
push
icebp
cmpsb
lahf
xor
sbb
sbb
enter
mov
andb
or
adc
jmp
out
repnz
push
pop
das
lods
fwait
add
xchg
repnz
sub
data16
inc
pop
aas
cmp
mov
or
test
inc
add
jle
dec
xor
data16
ljmp
cwtl
inc
int3
outsb
jmp
pop
mov
repz
jge
pusha
xor
xchg
lahf
mov
sti
mov
ret
daa
push
shlb
daa
inc
out
xor
nop
fwait
adc
jge
int3
popa
nop
jne
into
stos
fisttps
cmp
sti
and
call
movsl
cmc
sbb
fstps
arpl
loopne
inc
pushf
mov
sarb
lods
adc
xchg
int
adc
inc
repnz
js
add
dec
clc
inc
fstl
movsl
and
pop
pop
scas
jo
and
dec
test
lods
and
push
jl
movsb
fwait
inc
cmp
push
inc
fsubs
or
aam
leave
mov
push
leave
pushf
sub
in
add
jg
push
cmc
xor
mulb
fisttps
sbb
mov
jle
fisubrl
sub
mov
dec
inc
xchg
int
clc
sub
repnz
or
adc
sbb
xor
xchg
insl
push
mov
lcall
push
fcomip
or
mov
xchg
pop
inc
je
add
icebp
nop
movsl
dec
insb
cs
mov
into
push
adc
sub
mov
cld
mov
jg
loopne
fstpt
inc
xor
sti
test
mov
adc
fcoms
and
dec
sbb
xchg
ss
inc
mov
sbb
adcb
pusha
cmp
dec
aas
adc
xor
push
daa
add
addl
xchg
pop
mov
xor
addr16
dec
adc
push
lods
xchg
or
out
cmpsb
xorb
cmp
addb
into
fsubs
sbb
push
mov
mov
fwait
push
es
adc
pop
arpl
jge
fdivs
ljmp
out
outsb
aam
cld
jne
lods
cmp
mov
ret
jp
mov
pop
pop
lcall
mov
cmc
jno
dec
lcall
pop
mov
xchg
fwait
sub
out
pop
push
popl
push
push
fbstp
jp
cmp
adc
popf
xor
cmpsl
ss
pminsw
jb
dec
stos
jg
inc
hlt
leave
jb
pop
loop
movsb
inc
data16
mov
insl
xor
ret
dec
mov
mov
stc
mov
cmpsl
sub
pop
mov
or
in
hlt
repz
jns
insl
int
mov
sub
call
xchg
outsl
test
mov
shl
pop
test
fildl
mov
icebp
adc
ja
push
je
fiaddl
in
or
or
nop
cmp
xchg
push
test
es
push
cmp
inc
lods
fists
fdiv
cltd
push
mov
push
xlat
push
cmp
incl
add
or
cmpsb
fstpl
sbb
and
mov
test
sarl
ss
push
pop
sub
das
clc
mov
out
std
lds
cwtl
ret
loopne
vmwrite
mov
shlb
cmp
inc
pop
scas
out
pop
jl
loope
cmp
cmp
aad
jne
aaa
rclb
or
pop
or
movsl
add
jecxz
psubsw
mov
movsb
push
dec
lret
xor
pop
pop
sub
lahf
arpl
sbb
pop
ss
jne
push
adc
out
mov
lods
jb
mov
inc
xchg
xchg
jmp
mov
fdiv
shrb
mov
add
jae
cmpsb
mov
jb
jmp
push
aad
fsubs
push
push
pop
nop
lahf
setg
or
jno
inc
push
mov
inc
pop
ror
cmp
addr16
and
sarl
sbb
lcall
aam
jecxz
into
xchg
dec
es
sbb
cmp
mov
lret
or
je
lret
add
add
decl
sti
cmp
daa
or
mov
repnz
dec
fdivrl
out
out
push
je
xor
pop
out
adc
fistpll
mov
mov
inc
and
inc
cmpsb
hlt
sbb
xchg
stos
outsl
iret
xchg
pop
sub
xchg
mov
xchg
data16
pop
in
std
loope
push
insl
ret
sub
pusha
cli
inc
lds
jle
fildll
pop
loop
push
sarl
leave
stos
rclb
mov
and
in
mov
add
in
in
mov
dec
pusha
scas
mov
cmc
data16
or
xchg
push
or
xchg
movsb
jg
dec
push
mov
stc
pop
push
movb
mov
out
add
dec
fmulp
and
lcall
cmp
mov
frstor
dec
sbbl
icebp
pop
push
cmp
movsl
rclb
jmp
xor
mov
lea
jmp
lahf
sub
call
xchg
daa
cmp
aas
mov
imul
jecxz
and
ljmp
pop
psubusb
or
es
sbb
sbb
cmp
sarl
ja
dec
cmc
fmull
xlat
repz
test
jbe
dec
loop
sub
and
cmp
mov
mov
mov
add
xlat
fimuls
aad
sbb
sbb
aas
and
mov
fst
sub
pop
ja
inc
inc
mov
fmuls
dec
stos
hlt
std
add
inc
pop
xor
pop
out
adc
out
mov
pop
jmp
sbbl
hlt
daa
or
bound
xchg
cwtl
sub
int
inc
cltd
bnd
subb
sub
outsb
xchg
push
inc
push
push
into
ja
int3
cltd
and
or
push
flds
jb
xchg
loop
mov
mov
pop
aam
mov
fwait
daa
shlb
push
insl
addb
cmp
sub
shll
mov
cmp
fistl
je
cmp
mov
out
les
pushf
jbe
mov
jb
sti
inc
pop
jmp
push
imul
je
inc
jmp
clc
xor
test
jecxz
cmp
add
pop
mov
push
cwtl
xor
in
out
ficomps
adc
aas
popf
adc
hlt
test
ja
inc
bound
lock
mov
jmp
dec
sub
xchg
jne
ret
or
and
inc
mov
xor
inc
lds
pop
xchg
mov
pusha
xor
mov
and
ss
lds
ret
gs
adc
add
fiaddl
xor
or
cmc
mov
inc
or
pop
jg
jecxz
ja
lods
and
push
sub
into
jl
jb
mov
mov
adcl
and
adc
xchg
and
daa
movsb
lret
xchg
lock
push
fwait
nop
cwtl
repz
dec
pop
shr
mov
mov
push
fistpll
pop
pop
mov
inc
stos
cmc
in
xor
xor
jl
int3
pop
jno
dec
jmp
sbb
dec
ret
push
or
add
cmp
add
push
or
jne
filds
push
das
outsl
rcr
push
mov
test
push
je
sub
ja
mov
fsubrs
push
lock
xchg
arpl
daa
movsb
mov
iret
jo
cmp
cmc
mov
cmp
outsb
in
jns
add
push
imul
xchg
je
test
sub
push
stos
add
sub
outsb
mov
sub
inc
mov
outsl
dec
and
test
das
mov
xchg
fwait
sbb
imul
push
add
cmp
mov
test
push
imul
lret
mov
or
pusha
inc
pop
mov
data16
nop
cmpsl
push
test
outsb
loopne
rcl
sbb
dec
daa
sarb
pop
cwtl
ds
add
lea
push
cld
pop
into
mov
mov
iret
fs
adc
inc
orl
push
pop
ljmp
jl
push
mov
fdivrl
orb
xor
adc
int
aad
mov
jg
gs
xor
pop
mov
fidivl
or
adc
popl
add
arpl
xchg
and
push
xchg
jp
mov
jns
test
jne
mov
inc
xchg
sub
rcr
data16
shl
into
jno
out
jmp
je
lock
and
xor
sbbl
inc
jmp
icebp
add
mov
shlb
inc
mov
adc
cmp
dec
inc
icebp
into
xor
je
divl
xor
test
xor
inc
cld
lea
adc
cmpl
or
add
xor
mov
sub
inc
mov
xlat
and
inc
xchg
xor
movsl
inc
mov
mov
repnz
dec
vmread
push
mov
xchg
fistpll
xor
insl
and
lcall
or
bound
insl
xor
mov
inc
lret
xor
cwtl
loop
push
aad
ja
jg
inc
add
aas
scas
jl
push
nop
jmp
fistl
jae
lds
jl
jl
cmp
inc
mov
icebp
dec
or
ljmp
loop
mov
data16
cmp
sub
inc
pop
mov
add
in
hlt
sbbl
call
pop
rcrb
and
adcb
enter
inc
push
jmp
pop
mov
xchg
mov
sarl
test
adc
les
rorl
loop
dec
dec
div
and
adc
or
ret
lods
and
sub
ds
xchg
aad
mov
add
lret
and
pop
aad
mov
xor
cmp
in
js
mov
mov
xor
sbb
test
sub
or
add
sbb
push
or
xchg
data16
push
ljmp
ss
xchg
jnp
or
popa
fs
inc
cli
pop
inc
int
sar
jmp
jo
add
mov
inc
stos
sub
je
aas
imul
sbb
push
cmp
pop
ljmp
mov
sbb
xor
mov
sub
test
xor
mov
sub
fistpl
daa
addl
ljmp
mov
fwait
test
mov
pusha
add
stc
jno
das
cmpsl
out
cld
stos
int
cmp
add
mov
bound
inc
mov
sbb
cltd
int3
pop
in
rcrb
rcr
scas
repnz
sub
sbb
lods
arpl
push
inc
pop
push
fdivr
ljmp
xchg
sub
lahf
mov
xor
and
jmp
lret
inc
es
aaa
mov
mov
cld
pop
cmp
or
std
aas
out
adcl
int
add
icebp
sub
iret
sbbl
stos
xchg
es
cmp
out
ret
mov
xor
bnd
dec
and
shrl
popf
shll
mov
sub
mov
jns
mov
outsl
lahf
out
pop
je
cltd
jmp
mov
cmp
iret
cmpb
cmp
jne
cld
and
dec
fcomip
mov
pop
sub
rorb
gs
in
pop
les
insl
xchg
adc
mov
mov
test
xor
jge
insl
aam
jns
xchg
mov
into
hlt
dec
arpl
add
xchg
add
push
pop
ss
push
pop
scas
push
mov
adc
rclb
fildll
xchg
mov
xor
mov
ljmp
push
test
out
inc
rcll
pop
movsb
into
add
sbb
addl
ds
inc
mov
insb
or
add
jmp
mov
sub
pop
sbb
adc
sub
in
fs
leave
xchg
es
xlat
adc
sub
or
add
std
ljmp
inc
and
f2xm1
add
pop
icebp
push
andb
fbstp
sbb
cmp
mov
fldenv
pop
test
je
ret
xchg
lahf
jp
scas
lret
test
and
cmp
xchg
pop
cmpsb
cmp
push
aad
int3
fcoml
aaa
jge
and
iret
xchg
lcall
sub
adcl
fstl
adc
pop
fldt
or
xor
jns
rcrl
outsl
sbb
xchg
cmpl
mov
fistpl
lods
fs
pop
addr16
insl
sub
or
pop
mov
lods
or
push
ret
in
sub
enter
in
add
inc
pop
lldt
mov
xor
fnstcw
mov
pop
pusha
and
paddsw
inc
cwtl
call
ja
fmul
xchg
pop
fwait
adc
sbb
push
jl
push
out
enter
loope
dec
lods
push
dec
xchg
movsl
mov
vminps
aad
cmpsl
xor
jno
fsubs
in
roll
sub
mov
repz
add
sbb
insl
xchg
imul
xor
xchg
xchg
repnz
cld
sub
pop
or
add
jp
push
jl
cmp
into
aam
push
inc
movsb
jbe
repz
push
mov
and
dec
and
ret
jnp
inc
jecxz
dec
sti
loope
lods
stos
sti
mov
repnz
mov
push
dec
push
and
leave
ret
mov
or
xor
sub
add
icebp
sbb
sbb
leave
rep
mov
sbb
lds
add
hlt
lock
mull
std
inc
mov
sarl
lcall
adcb
das
mov
and
leave
pusha
lods
out
sahf
mov
lock
push
cmp
aas
xor
mov
mov
push
fisttps
std
push
mov
or
lret
push
inc
imul
out
gs
xor
in
mov
jecxz
push
fmulp
jmp
fxch
jl
sub
cmp
sbbl
cmpsb
xchg
xchg
loope
and
fadds
ljmp
xlat
int3
xor
popa
or
xchg
cltd
xchg
xchg
xchg
out
xchg
inc
inc
cmp
test
mov
movsb
sub
mov
sub
jo
fadd
adc
lret
outsl
mov
xchg
sbb
addl
popa
add
inc
and
push
jecxz
popf
sbb
jb
dec
dec
and
sub
andb
imul
mov
jecxz
jb
add
push
mov
dec
and
and
popf
sti
inc
push
mov
daa
ja
xor
mov
push
jecxz
ret
aaa
mov
pop
jnp
or
add
xchg
shrl
dec
adc
je
sbb
or
inc
lock
mov
imul
test
xchg
movsb
mov
iret
test
ret
loopne
push
insl
lds
push
sbb
imul
das
add
sbb
out
scas
dec
in
mov
fs
aaa
cmc
fdivrl
leave
jae
daa
popa
pop
sbb
fmuls
fildl
icebp
repz
lock
loope
inc
dec
jle
cmp
imul
push
sar
stc
mov
int3
cltd
jmp
dec
into
ficomps
add
xchg
jg
shrb
pusha
cmpsb
and
mov
outsb
cmp
rcr
inc
nop
adc
out
lcall
outsb
or
gs
push
fistpll
outsl
xor
repz
lds
dec
xor
or
test
icebp
hlt
dec
imul
scas
dec
or
imul
out
adc
mov
pop
xchg
aaa
inc
xchg
jge
xchg
cltd
hlt
add
sbb
and
push
lahf
sbb
cmp
mov
or
lret
sbb
mov
pop
cmpsb
clc
loope
lods
pushl
sbb
jo
popl
scas
xchg
pop
into
out
mov
test
ret
inc
jo
inc
jmp
das
push
mov
or
popa
add
xlat
push
into
lret
sbb
cmp
jns
inc
inc
xor
popa
push
dec
dec
add
or
test
sbb
lcall
and
leave
out
popa
and
decb
test
jge
scas
mov
test
lahf
fsubl
push
sub
mov
shlb
mov
sub
imul
sub
xlat
or
rorb
repnz
push
test
mov
mov
aas
rcl
into
popf
xchg
imul
xorl
pop
push
hlt
adc
jl
inc
popa
jae
rcll
pop
adc
push
push
dec
ret
mov
scas
sti
pop
imul
cwtl
mov
dec
shrb
adc
or
mov
add
push
dec
add
xchg
adc
inc
mov
int3
mov
repnz
arpl
sbb
ret
pop
xor
inc
outsb
xor
push
sub
fs
mov
popf
jl
mov
js
mov
iret
fcmovnb
fldt
cmp
cmpsl
pop
lahf
sbb
cwtl
mov
hlt
ret
dec
xor
xchg
xchg
pusha
sub
xchg
inc
add
jnp
das
in
aam
gs
mov
cmpsl
popa
or
jae
leave
shl
add
xchg
dec
and
push
roll
fsubr
mov
aam
mov
loop
mov
pminub
scas
ret
sbb
mov
sbb
jae
aam
icebp
sbb
mov
nop
sbb
xchg
scas
mov
or
xlat
inc
jmp
test
and
orb
or
outsl
mov
mov
add
pop
in
aad
mov
addr16
aaa
or
ljmp
push
jne
jmp
cmp
js
jge
push
mov
jl
and
aad
mov
ficomps
sbb
mull
loope
jo
lds
push
in
je
or
jbe
push
push
mov
push
pop
xchg
inc
mov
mov
xchg
mov
xlat
gs
popf
mov
dec
out
jb
lret
imul
aaa
sbb
int
es
jno
mov
mov
call
lea
adc
jecxz
push
out
mov
xchg
movb
inc
fisttpl
add
push
rclb
mov
dec
inc
je
jp
fcmovnbe
lret
push
mov
push
push
jmp
mov
sub
mov
add
push
sbb
insb
dec
stc
cmp
enter
xchg
xor
lret
push
add
clc
lods
lret
std
cmp
test
aam
lret
ja
je
mov
stc
mov
dec
push
mov
mov
mov
and
mov
gs
mov
push
das
scas
mov
rorl
arpl
push
cmp
notb
xor
xor
mov
mov
xchg
daa
jecxz
loopne
push
inc
xor
mov
or
pop
inc
or
imul
js
sub
das
stos
movl
sbb
test
aaa
inc
or
inc
clc
movsb
xchg
cmp
ret
inc
dec
pusha
addb
inc
fstpt
and
push
fwait
xchg
aam
xorl
nop
add
push
jl
cmp
push
mov
cmp
push
cltd
xor
outsl
cltd
stos
stos
les
cmp
mov
xchg
fs
icebp
sbb
or
mov
inc
rolb
loopne
in
cmpsb
mov
das
cmp
sub
mov
lods
pusha
pop
xor
xor
sub
pop
je
adc
add
cld
scas
push
dec
test
add
imul
mov
jmp
scas
int
in
adc
pop
mov
lcall
and
pushl
loopne
pop
loope
inc
lret
or
jb
dec
rol
fwait
cmp
es
jbe
dec
sub
push
addr16
insb
jnp
lret
adc
out
out
dec
pop
sar
std
arpl
enter
sahf
pop
adc
invd
cmpsb
js
stos
je
xor
scas
bound
mov
push
les
add
loop
arpl
xchg
mov
inc
lods
test
push
adc
mov
scas
arpl
into
popa
mov
xor
ja
and
jno
psllw
sbb
cmp
loopne
jmp
insb
or
js
test
jnp
lret
jp
push
fmul
push
mov
imul
loope
pop
inc
fsubrp
sub
lock
mov
loope
pop
fnstcw
jno
sub
sar
xor
hlt
outsb
rcrb
sbb
add
pop
inc
sahf
adc
iret
push
ret
es
cmp
jo
push
aaa
and
popf
or
adc
sub
ret
lea
fwait
pop
lahf
fs
pop
inc
inc
inc
and
push
xchg
pop
mov
adc
adc
inc
cmp
fmuls
popf
out
sub
sbb
or
push
mov
add
dec
ficompl
stc
mov
enter
pop
sub
push
data16
and
xor
inc
add
xor
mov
mov
xchg
xor
xchg
or
sbbl
pop
popf
loop
rol
cmp
iret
imul
mov
mov
jg
stc
scas
adc
sub
fldl
jmp
fidivrs
xchg
sbb
stos
mov
into
cmp
inc
pop
mov
inc
xchg
in
sbb
daa
jns
cld
in
cld
or
fstps
pop
arpl
mov
pop
cmc
test
dec
pusha
and
mov
loop
incb
cmp
xor
and
rcl
mov
dec
sub
mov
pop
xchg
movsb
push
mov
xchg
push
sbb
push
xchg
enter
lret
inc
mov
mov
fsubrs
pop
push
add
mov
test
dec
cmovo
add
add
sub
sbb
mov
cld
or
popa
push
add
push
lea
lcall
mov
jb
jae
jns
xchg
aaa
mov
mov
int3
lret
fnsaves
insb
cli
mov
stc
push
push
mov
imul
inc
fwait
ljmp
sbb
add
movsl
pusha
pop
ret
jb
les
loopne
lret
or
loop
xchg
gs
push
cmp
leave
clc
aas
adc
insb
insb
int3
mov
clc
jle
push
je
mov
sbbb
in
aas
imul
aaa
dec
lds
insb
test
xor
fwait
pop
shlb
inc
popa
pop
fcmovu
pop
insl
popf
arpl
movsl
push
addr16
push
jne
xchg
or
out
fstpl
mov
xchg
outsl
out
lret
iret
mov
inc
inc
ss
test
pop
adc
sbb
push
or
jbe
adc
inc
add
filds
enter
int
ret
pop
pop
rcrl
jnp
jge
jmp
ret
test
imul
mov
or
loopne
push
cmp
pusha
test
insb
repz
ret
dec
mov
lods
sti
sbb
js
aam
push
dec
push
imull
ret
imul
xor
xor
dec
push
pop
push
ficoms
cmp
dec
lock
std
pushw
xor
jl
push
and
aad
xor
inc
in
into
dec
pop
xchg
xchg
dec
or
rcll
push
add
mov
out
pop
push
es
add
mov
lods
sahf
cmp
lods
mov
loope
push
or
mov
add
int
gs
cs
push
dec
fnstsw
xchg
dec
xor
inc
mov
ljmp
aas
das
or
lock
psubusb
imul
jnp
mov
xchg
lahf
ljmp
cmp
inc
push
mov
cwtl
sahf
scas
adc
dec
in
std
or
cwtl
mov
pop
cmp
orb
adc
or
push
inc
inc
xchg
lds
cvtpi2ps
add
ds
dec
xor
ja
in
mov
cltd
xchg
loopne
nop
std
pop
dec
sub
pop
dec
repnz
je
lret
addr16
and
subl
aaa
mov
xorb
sub
xchg
mov
inc
xorl
outsl
push
xor
adc
inc
bound
in
enter
mov
stos
push
sbb
push
ficoms
fisttpl
cmp
jle
dec
scas
mov
sub
add
xor
fistps
mov
fidivrl
data16
ss
clc
jmp
sbb
and
or
lods
repz
push
cmp
out
iret
push
test
cmp
sub
pop
cmp
lea
jne
adc
clc
mov
and
sub
out
out
js
call
add
fdivrl
or
cmp
push
dec
or
jo
dec
insb
inc
pop
cmpsb
call
and
ret
xchg
jl
lods
pop
xor
mov
test
imul
push
test
movsl
in
call
stc
mov
imul
mov
mov
add
xchg
jge
pop
stos
fmulp
jmp
or
jp
sbb
push
fldln2
add
ja
jbe
ds
sti
xor
push
mov
mov
pop
fstps
xor
and
outsb
les
dec
fsubrs
stos
and
pop
mov
jb
fbld
data16
sub
mov
inc
test
jb
inc
cld
icebp
cli
cmp
mov
add
xor
leave
into
lea
nop
incb
ljmp
add
pop
clc
loopne
xchg
leave
mov
jns
jl
test
mov
xchg
xor
xchg
pop
ret
jmp
mov
leave
test
cmp
movsb
jmp
loopne
cli
test
jp
mov
cmp
sub
fwait
xchg
ret
mov
fstcw
mov
ljmp
sbb
lods
and
insb
jg
xor
add
pop
mov
cs
je
ja
xor
pop
sbb
adc
aam
xor
mov
mov
inc
jo
mov
push
incl
lea
pop
xchg
adc
and
test
xchg
stc
push
xor
movsl
xchg
mov
pop
cltd
mov
lcall
inc
mov
and
and
lcall
xor
xor
xchg
inc
cltd
mov
dec
insb
call
dec
push
mov
push
mov
movsb
add
sbb
imul
or
xor
pop
add
gs
repnz
jb
xlat
lahf
roll
cmp
aam
das
cmp
fucomi
xchg
rorb
shl
inc
pop
adc
sbb
out
shlb
jle
bound
and
mov
add
mov
dec
adc
or
addb
cli
push
orb
mov
cmp
push
out
xchg
loopne
cld
imul
mov
loope
int
mov
loopne
push
jp
mov
mov
sbb
dec
sbb
in
repnz
rcrb
popf
test
leave
adc
lret
gs
sbb
gs
int
and
xchg
enter
pop
lret
jne
mov
dec
push
xchg
push
gs
mov
call
cwtl
add
out
sub
jle
clc
fdivrp
dec
or
lods
cmpsl
hlt
out
loopne
jp
outsb
mov
xor
xor
xchg
and
xchg
cmp
sub
add
sub
pop
cmp
and
in
int
js
shlb
xchg
sub
add
pop
pop
inc
in
movsb
int3
aad
adc
bound
mov
scas
fcomip
sbb
adcl
cwtl
push
jnp
push
ret
fldl
pop
push
xchg
mov
adc
or
iret
xor
out
or
or
rcll
in
fcoms
mov
adcl
push
je
sbb
add
in
pop
stc
and
loope
cmp
mov
dec
out
in
adc
add
add
ficomps
jns
notl
clc
or
inc
xchg
push
sbb
ret
adc
loop
mov
test
pusha
adc
cmp
cmp
fistl
add
lods
lret
iret
ret
sub
pop
dec
out
mov
mov
fisubrs
push
mov
dec
sbb
insl
xchg
arpl
mov
shll
lock
into
popa
lahf
test
pop
add
mov
mov
mov
sbb
sub
cmc
xchg
in
push
lcall
xchg
mov
lods
add
adc
lods
add
xor
sahf
std
lods
pop
fldenv
ljmp
sbb
out
loopne
mov
int
sarl
gs
je
jle
jmp
add
and
fs
xchg
test
vpavgw
xchg
mov
repnz
xor
hlt
arpl
pop
add
mov
mov
clc
jl
lods
jmp
aad
aad
xchg
sub
xor
xchg
std
ja
sahf
pop
xchg
ret
jns
adcb
test
mov
cmp
loop
and
iret
push
fsubl
jle
popa
fistpll
out
xor
out
jl
stos
xor
jno
inc
xor
jb
cltd
inc
jnp
jmp
sub
icebp
mov
mov
out
pusha
shl
in
ret
pop
enter
jge
mov
lret
mov
cmp
cmp
or
jmp
dec
jge
daa
lcall
xor
std
test
or
jno
xchg
fst
jo
ds
mov
sub
mov
fwait
push
pop
ret
pushf
sub
fiadds
call
scas
pushl
xorl
std
pop
insb
jmp
shrl
jbe
mov
dec
mov
push
pop
jns
add
aas
ds
mov
sbb
js
fnstsw
loop
jmp
mov
out
fistps
or
xor
jo
inc
mov
mov
xchg
mov
lods
aas
mov
mov
inc
xchg
pop
adc
push
aam
mov
mov
lret
sbb
or
or
outsl
pop
add
sub
popf
inc
nop
jecxz
hlt
ja
jmp
sbb
pop
or
fwait
mov
in
es
jno
xchg
es
popf
pop
mov
test
aaa
jae
dec
sti
cmc
or
aaa
jle
test
mov
bound
addr16
mov
repnz
mov
out
clc
xor
mov
push
jnp
add
jecxz
cmpsl
inc
jne
jb
sbb
popf
rorl
jns
push
jmp
cmp
sbb
loop
enter
idivb
mov
or
dec
lret
and
push
inc
push
dec
shll
adc
xchg
in
popa
sbb
lods
lods
aam
cmp
enter
mov
stos
imul
inc
push
and
inc
mov
pop
sbb
out
inc
adc
scas
inc
jle
imul
lret
ja
jmp
xorl
repz
mov
jl
adc
inc
lcall
xchg
mov
push
std
out
add
adc
hlt
dec
out
ss
in
cmpsb
jmp
sbb
fiaddl
dec
sub
and
cmp
xchg
ss
jae
in
mov
aaa
lret
cmp
pop
xlat
xchg
or
fs
aaa
jo
in
and
mov
pop
into
arpl
and
in
into
mov
jo
enter
mov
inc
shll
inc
inc
addb
mov
movsb
enter
mov
into
imul
and
pop
push
jg
inc
add
cli
jno
fcmovne
lds
scas
xor
ret
push
repnz
rorl
pop
adc
xchg
sbb
fs
lret
pop
pop
jecxz
add
sti
fs
xor
test
jae
jle
inc
repnz
add
jle
mov
dec
and
lds
dec
pop
dec
pusha
jge
cmp
or
rcl
es
outsl
lock
pop
pop
fldenv
cltd
sbb
push
jno
pop
out
lret
je
loop
pop
rorl
dec
bound
mov
outsl
fs
cmpsb
fcmovnbe
inc
mov
test
ret
add
aas
in
push
push
push
adc
xor
incl
fistpll
xchg
stos
shl
inc
ret
mov
jae
pop
lods
pop
out
imul
and
cmpsb
mov
inc
pusha
shlb
add
push
scas
cmp
sub
in
insl
inc
addl
mov
mov
bswap
das
xchg
loopne
jmp
add
sub
clc
es
lret
jae
cmp
out
into
sbb
out
inc
adc
add
and
sub
and
sbb
pushf
arpl
clc
popa
pop
mov
or
xor
jae
push
xchg
aam
cltd
cli
jae
int
ja
sub
dec
fnstenv
test
dec
pop
and
push
fidivs
sbbb
inc
iret
adc
sti
push
inc
jge
mov
add
ds
or
mov
sub
stc
dec
in
rol
movsb
insl
mov
cld
add
jae
jle
jle
inc
adc
aas
push
fadd
dec
fimull
test
jl
into
jae
adc
adc
test
dec
or
hlt
push
cltd
in
jge
add
push
ljmp
mov
dec
lcall
sub
mov
add
push
into
cld
inc
repnz
push
jnp
and
jne
mov
pop
into
jp,pt
dec
jae
dec
cmp
xor
or
jle
pop
lret
sub
iret
mov
cmp
xchg
mov
push
or
push
sub
les
and
orb
xchg
sub
mov
jne
bound
mov
adcl
imul
sbb
mov
loope
std
sbb
scas
scas
xchg
fwait
adc
xchg
jo
lcall
xor
mov
test
mov
sub
mov
and
neg
and
stos
mov
push
pop
pop
add
movsl
add
cmp
jle
ja
andl
sub
mov
shlb
pop
sub
adcl
cmpsl
jbe
cs
mov
ret
idivb
pop
out
cs
cmpsb
sub
lahf
jo
dec
mov
or
clts
mov
pop
std
imul
imul
sub
fucomip
leave
xor
setl
push
jecxz
or
and
js
jae
xchg
mov
pop
das
sbb
adc
sub
xchg
test
jl
sub
mov
sub
stos
and
aam
dec
push
xor
lock
push
mov
mov
mov
aam
gs
xchg
inc
mov
movsb
aaa
lods
je
fnstcw
push
jge
push
dec
js
push
add
fnstcw
out
int3
inc
test
pop
jg
lods
mov
adc
push
ret
inc
aas
dec
mov
test
stos
inc
jnp
test
push
lret
inc
lods
mov
sbb
inc
dec
in
movsl
mov
inc
fisubrl
cltd
movl
dec
aam
cmp
dec
add
mov
and
pop
sub
mov
add
sub
pop
jle
jp
imul
sbb
shrl
adc
mov
ret
xchg
adc
xor
inc
push
rcr
fmulp
pop
lret
arpl
pop
xchg
jmp
xor
insb
in
push
clc
lods
es
sahf
pop
mov
fldl
call
movl
push
xlat
iret
mov
cltd
daa
lods
dec
jno
and
dec
mov
call
es
out
std
cmp
or
int3
xor
adc
mov
add
pop
mov
jns
dec
mov
inc
popa
cwtl
rcl
imul
add
pusha
test
lret
aaa
lcall
push
pop
fdivrp
popl
push
sbb
aas
test
cwtl
mov
sub
loope
frstor
xchg
out
jo
cs
xor
loope
loop
jl
jge
or
andl
cwtl
pushf
mov
inc
je
mov
outsl
iret
dec
inc
loop
push
xchg
xlat
push
mov
ja
fstps
push
mov
repz
mov
sub
jb
arpl
shlb
cmpsb
ret
and
mov
stos
cmpsl
sbb
mov
mov
bound
inc
dec
je
cmp
mov
push
sbb
addr16
inc
add
test
mov
cmp
gs
filds
jae
call
imul
cmp
nop
or
loop
arpl
pop
inc
es
lds
arpl
jae
inc
jnp
sub
rol
lods
lods
pop
push
push
loop
adc
insl
xchg
dec
sbb
pop
jae
mov
das
cltd
adcb
mov
repz
fs
cmp
mov
shlb
lods
xor
push
fwait
nop
push
cmp
mov
and
outsl
push
jmp
stos
or
shlb
fnstcw
mov
leave
dec
daa
loop
rcrl
data16
lock
adc
fsts
clc
pop
imul
sbb
idiv
mov
leave
mov
adc
cmp
add
test
lahf
lret
int
add
mov
sub
and
xchg
cli
xchg
cltd
faddl
mov
adc
add
dec
rcll
call
and
test
pop
jg
or
fadds
adc
neg
outsb
loop
xchg
leave
shlb
test
mov
sbb
lods
pop
fsubs
mov
xor
mov
hlt
xorl
pop
mov
xchg
test
repz
test
pushf
aam
and
fsts
ds
mov
xchg
add
mov
or
sahf
push
mov
sub
das
roll
or
outsl
inc
sbb
mov
xchg
push
fmulp
push
mov
insb
jg
enter
mov
int
data16
lret
sub
dec
inc
pop
shrb
test
pop
mov
pop
pop
push
out
sub
les
jmp
add
pop
lods
push
lea
xor
cwtl
cli
rorl
add
test
pusha
ss
stos
bound
cwtl
rcll
scas
push
fidivrl
mov
into
sbb
adc
addl
mov
xchg
cmp
dec
add
sub
mov
lods
rcll
insl
add
pusha
mov
das
add
pop
stc
mov
jbe
notl
jmp
mov
mov
push
jmp
mov
jo
mov
or
rep
lahf
push
and
push
xchg
sbb
insl
fwait
and
add
mov
add
dec
dec
inc
or
daa
inc
mov
test
and
pop
fwait
aam
fnstsw
mov
adc
lret
cwtl
mov
stos
popl
and
lret
cld
jmp
mov
inc
icebp
nop
shld
mov
mov
xor
sbb
call
adc
xchg
test
or
xchg
mov
lret
pusha
bound
push
cmp
ret
cmpsb
cmpsb
pop
xchg
ljmp
mov
or
popa
pop
jo
pusha
sbb
in
xchg
lods
mov
jmp
notb
out
test
ja
nop
enter
aam
orl
sub
lret
aad
leave
enter
push
cmp
pop
sbb
and
sahf
outsl
or
jo
sbb
mov
cli
lea
fidivrl
icebp
xchg
loope
push
add
fcmovnu
xchg
mov
pop
push
in
xchg
mov
inc
loop
cmpsb
add
aam
pop
rcr
xchg
mov
or
mov
sbb
mov
fcomps
or
inc
sbb
xchg
mov
push
test
mov
sub
pop
mov
mov
sti
fldenv
jae
out
jo
dec
jae
dec
lea
scas
xchg
mov
cld
mov
xchg
ret
das
icebp
jne
ret
fimull
test
jae
pop
jge
or
ficoms
mov
inc
insb
dec
movsl
mov
int3
mov
outsb
arpl
shrd
imul
pop
rolb
sub
cmpsb
add
push
ret
sub
and
into
push
repnz
jmp
fimull
ret
outsb
pop
xlat
mov
arpl
rolb
and
push
push
in
in
push
mov
xlat
inc
fidivl
or
or
xchg
mov
mov
cmp
loop
es
inc
out
fnstenv
adc
lods
sub
mov
pop
sub
movsl
insl
xchg
or
stos
sbb
push
aam
cltd
xchg
std
adc
mov
mov
xchg
je
mov
xchg
in
scas
mov
or
xchg
cmc
int
lock
in
fcmovnb
cld
inc
push
inc
filds
imul
push
mov
xor
mov
faddl
sbb
mov
fstps
push
aad
jmp
and
mov
or
push
out
mov
add
ja
inc
aaa
push
out
xor
inc
daa
das
or
orl
jb
sbb
jmp
mov
sub
inc
cmp
ret
mull
pop
dec
xor
push
jmp
cmp
gs
mov
cmp
bound
push
pop
or
lods
push
ficoms
push
sub
cmc
fsubrl
movsl
js
dec
je
cmp
fdivr
mov
js
lahf
stos
sub
rcrb
repz
jne
mov
inc
add
insb
xor
dec
mov
ljmp
adc
jle
jns
iret
mov
pop
ja
inc
push
or
into
mov
rclb
arpl
adc
int
mov
in
xchg
xor
enter
fsts
ret
adc
pop
fwait
outsb
mov
mov
pop
loope
fisubrl
pushf
mov
xor
cmp
or
mov
push
adcb
arpl
or
push
jno
mov
cmp
lahf
adc
and
dec
push
pop
mov
lret
mov
inc
in
ljmp
sub
mov
adc
mov
ljmp
inc
inc
orl
dec
jo
cli
mov
lcall
popa
pop
inc
add
in
adc
and
dec
out
inc
lock
scas
mov
lret
daa
ret
cld
or
cltd
shll
mov
test
movsl
pop
imul
pusha
js
or
mov
mov
fbstp
rorl
xchg
mov
cmc
sbbb
xchg
or
mov
aad
insb
mov
enter
push
cmc
jmp
es
dec
dec
or
or
es
lret
out
xor
mov
cmp
insb
fs
sub
xor
fidivs
jb
int
rcrl
repz
or
insb
and
cld
mov
iret
aam
cmp
movsl
mov
or
insl
adc
in
cli
push
sbb
int3
dec
mov
cli
inc
daa
dec
push
mov
jmp
insb
mov
lock
mov
dec
push
vpsubusw
fwait
inc
lods
inc
lods
or
out
inc
cmp
div
jne
mov
shll
scas
cmc
jbe
lahf
mov
fldenv
cmpb
inc
mov
pusha
lret
dec
mov
push
push
aam
stos
negb
das
mov
pusha
scas
outsl
adc
aad
inc
xchg
rcrb
or
adc
sbb
mov
add
fistpll
lock
stos
jge
hlt
jmp
scas
xor
sbb
sbb
mov
pop
leave
inc
push
insb
cmpl
mov
jl
sub
sbbb
or
out
add
or
or
dec
mov
loope
lea
sbb
mov
cmp
adc
cmp
xor
mov
inc
inc
sbb
shl
les
orl
dec
xchg
imul
leave
mov
xchg
inc
cmp
cmp
sbb
pop
inc
dec
arpl
sbb
jnp
fnstcw
xor
ret
sub
sbb
pop
mov
mov
adc
mov
jnp
and
xchg
lahf
add
mov
mov
nop
jae
pop
sbb
test
ljmp
ljmp
popf
mov
stos
jae
shl
cmc
aaa
sub
je
leave
shr
cs
jae
lret
scas
jo
addr16
fcmovnb
fiaddl
cs
jnp
jge
jne
xchg
adc
outsl
jl
inc
andb
aam
es
sti
dec
dec
outsl
jns
cmp
pop
jnp
xor
addb
inc
lcall
outsl
inc
dec
mov
enter
sub
cmp
gs
add
in
adc
jae
xor
pop
mov
idivb
push
loope
int3
jg
negb
sub
jmp
nop
sar
das
fidivrl
into
ss
andl
or
pop
jg,pn
scas
arpl
lods
icebp
adc
outsl
dec
shrl
mov
sbb
sub
push
loop
cmpsb
mov
xlat
mov
sbb
lds
fstps
xor
cltd
inc
hlt
adc
jl
loope
and
cmp
lahf
in
fisttpll
xchg
cs
in
xor
xchg
mov
sub
dec
add
add
mov
xor
imul
mov
inc
ja
mov
aas
insl
orb
mov
out
mov
inc
mov
cltd
pop
ljmp
mov
or
cmp
movsl
adc
fs
mov
sbb
inc
adc
mov
inc
test
gs
ret
test
push
icebp
pushf
adc
and
xchg
xlat
xor
in
movl
inc
jmp
dec
and
lea
adc
pop
imul
push
push
xchg
fst
cmpsl
imul
mov
push
push
sbb
jg
cmp
jg
scas
addr16
aaa
adc
out
jg
dec
loope
xchg
mov
aam
inc
sub
dec
ret
sbb
jecxz
scas
aad
dec
out
adc
leave
lcall
push
sahf
and
add
dec
pushf
test
xchg
push
dec
cmpsb
mov
push
pop
icebp
adc
ss
push
psubb
out
repnz
inc
sub
leave
arpl
jnp
sub
dec
pop
aaa
pop
mov
mov
push
shll
xchg
mov
nop
cmp
and
push
insl
out
in
ret
fwait
or
cmp
les
imul
mov
imul
adc
mov
mov
sbb
pop
add
ss
ljmp
ret
loope
bound
pop
or
cmp
xor
sbb
outsb
mov
cwtl
in
pop
push
jp
pusha
aam
enter
into
lcall
xor
push
cld
lcall
mov
mov
loopne
add
mov
aam
jb
dec
stos
mov
test
rcll
sti
mov
mov
or
jg
push
jg
subb
icebp
mov
push
adc
mov
shll
add
push
stos
lods
rcll
cld
mov
or
incb
insl
mov
or
pop
sub
cltd
andb
sbb
push
add
sub
push
hlt
repnz
mov
ljmp
adc
push
test
pop
push
adc
lret
sbb
dec
sti
add
inc
outsb
movsb
lea
and
cmpsl
jne
fimuls
cmp
mov
mov
outsl
mov
sti
mov
dec
pop
xchg
dec
cltd
jns
push
jbe
jle
insl
jmp
push
sbb
cs
push
fcmovbe
scas
xor
jns
mov
dec
insl
bound
in
lods
cmc
imul
sbb
mov
std
or
in
mov
js
cmp
xor
dec
sub
out
dec
pop
xchg
dec
push
xchg
stos
dec
push
inc
imul
cltd
fildll
inc
dec
lods
std
mov
stos
fstpt
sub
into
loop
popa
cmp
lahf
jmp
fildl
mov
or
mov
inc
jae
cmpl
pop
jmp
mov
in
xchg
mov
repnz
dec
mov
inc
add
add
sub
out
bound
jns
jns
cmpsl
inc
or
cmpsl
push
ret
negb
mov
aaa
sbb
das
jae
cld
and
imul
jns
cld
jne
adc
or
ljmp
mov
pop
pop
test
mov
pushf
lahf
cmp
daa
sbb
inc
sub
sbb
fidivrs
cmpl
push
sbbb
pop
xor
mov
bound
adc
sbb
pop
outsl
adc
addl
mov
into
mov
shlb
cmpsl
sti
sub
mov
dec
and
or
xchg
and
jecxz
or
addr16
mov
test
mov
cmp
das
jmp
std
xchg
push
cmp
lods
aad
ret
shlb
fistpll
push
cmp
xchg
addb
dec
test
push
jg
cmp
sbb
jns
gs
aas
or
loop
sub
sbb
jbe
fwait
jl
stos
add
lcall
lret
xor
test
dec
xchg
mov
xor
push
flds
ret
icebp
js
sub
inc
mov
test
outsb
popf
add
cmp
adc
ds
test
mov
in
push
jno
test
dec
push
lret
mov
mov
jl
sub
pop
pushf
sbb
imul
mov
mov
xor
or
mov
fcmovbe
jns
and
add
xchg
std
dec
int3
sahf
lcall
scas
add
adc
cli
xor
mov
mov
jl
iret
push
adc
icebp
test
xchg
adc
dec
jno
pop
les
and
and
test
movsb
repnz
push
pop
xchg
clc
cmc
xchg
sub
xor
test
pop
shrb
ja
daa
or
or
fstpl
fldcw
sub
iret
outsl
inc
nop
mov
clc
xor
into
and
or
sarb
movl
mov
cmpl
jecxz
cmp
inc
data16
dec
mov
and
or
pop
jne
push
sahf
pop
dec
aaa
into
js
mov
les
jg
div
aas
mov
push
lds
pushf
lea
orb
pop
xor
js
jecxz
inc
movsb
sbbl
stos
mov
mov
jl
rcrb
imul
adc
popf
pusha
adc
and
cmp
int
add
pop
dec
lods
mov
cmc
std
or
out
fs
push
pop
sub
add
subl
mov
inc
sbb
mov
mov
call
into
jge
fld
stos
dec
xchg
imul
ljmp
jmp
imul
int
stos
out
mov
xchg
jl
push
pshufw
push
inc
lahf
lock
add
dec
scas
push
ss
push
int
xchg
mov
push
cwtl
je
dec
clc
mov
and
cmc
rorl
les
ds
int
lret
cli
sub
mov
xor
out
xlat
pop
push
inc
or
fcoms
icebp
cmpsl
ds
pop
aam
push
dec
std
jae
fcmovnb
jbe
sahf
mov
pop
sarl
add
movsl
sub
adc
jge
ret
mov
jo
mov
jns
xchg
out
and
cld
les
dec
mov
pusha
xchg
cltd
sbb
pxor
sub
rcr
test
mov
leave
push
faddl
pop
push
inc
repz
daa
inc
mov
push
cmpsb
pusha
ds
call
and
stos
and
lock
jo
in
rcl
jle
and
add
push
ja
jge
mov
mov
fidivl
fs
out
adc
shll
fcompl
les
ljmp
mov
rcrl
xor
nop
pushw
jp
dec
and
inc
xor
mov
jns
xchg
fistps
psrlq
and
cmp
inc
lahf
add
nop
mov
cwtl
jmp
cmp
push
rorl
aaa
cmp
shlb
fld
jae
add
das
out
or
sub
daa
mov
push
push
jl
xor
add
and
daa
fisttpl
cmpps
sbb
xlat
jo
je
aad
insb
das
and
in
jo
sub
xor
and
add
aam
mov
xor
movsb
sub
cmpsl
dec
out
call
testl
push
xchg
stos
dec
leave
cmc
es
test
mov
jae
xor
adcb
repz
add
stos
xchg
mov
stc
popf
mov
pop
mov
scas
cmpsl
lret
into
in
ja
in
mov
das
ret
add
cli
aaa
dec
xor
rcr
xchg
int
cmpsb
mov
ljmp
cmpsb
in
xchg
gs
jge
ret
jl
xchg
aad
dec
sti
push
cmp
xorl
into
shrb
mov
lcall
scas
imul
andb
mov
rol
mov
ljmp
fisubs
inc
adc
cwtl
aas
push
push
outsb
mov
nop
jae
out
sbb
ljmp
xlat
iret
out
cld
je
and
scas
ja
out
std
pop
push
sbb
push
lea
aas
in
xchg
or
mov
ja
fs
call
jle
and
or
mov
jbe
test
jno
push
and
push
scas
fwait
pop
or
div
enter
repnz
add
lods
add
pop
add
mov
mov
push
and
out
pop
or
pop
test
fisttpl
inc
cmpsl
mov
call
fidivrl
push
xchg
les
mov
aas
bound
repnz
cmp
pushf
sbb
jl
jle
sub
and
js
es
mov
pop
add
imul
add
mov
push
mov
or
xor
xorb
xchg
and
push
sub
jmp
pop
mov
push
out
adc
rcrb
add
gs
cmpsb
dec
or
test
mov
adc
mov
pop
pop
fidivl
pop
pop
sbb
scas
dec
ljmp
mov
lcall
push
sbb
sub
sub
add
stc
imul
cmc
pop
leave
out
loopne
cmp
roll
jo
inc
in
pop
xchg
fstpt
les
cli
push
jno
loope
push
fwait
pop
xchg
icebp
cmp
lret
ficoms
mov
xor
mov
mov
stc
xor
sub
add
stos
gs
aam
pop
in
or
or
push
pushf
fists
fistpl
data16
enter
rcrl
cs
xchg
fnstsw
add
push
sbb
mov
or
adc
cltd
clc
or
push
jg
sbb
dec
cmp
dec
push
dec
cltd
push
sbb
rcrl
loope
aam
inc
jle
imul
add
sbb
jno
mov
or
ja
add
push
xchg
xchg
iret
std
cs
adc
xchg
lret
lcall
mov
xor
fsubrl
cli
insb
ljmp
arpl
std
sub
lods
lret
je
pop
cmp
mov
loopne
xchg
movsb
cmpsb
pop
pop
repz
inc
shrb
ss
mov
xor
mov
or
das
or
test
testb
fistl
or
adc
fisubs
mov
pop
loope
jo
es
sub
aam
mov
les
pop
cmpsl
js
ret
mov
mov
out
fistpl
fsubs
jae
inc
loop
fisttps
push
testb
out
dec
popa
and
xor
adcl
and
sbb
xchg
lock
sub
loopne
ret
lods
clc
cld
fisttpl
shrl
add
mov
out
mov
mov
addr16
fnsave
mov
xchg
pop
int
jge
xor
test
out
mov
and
pusha
fmuls
js
xor
loope
daa
sahf
mov
repz
mov
out
sbb
lret
push
test
mov
mov
ss
push
fs
jo
jl
jnp
mov
jb
cmc
add
into
mov
xchg
cld
push
cmpsl
push
mov
call
lcall
xor
daa
lods
out
sub
imul
int
push
lret
loop
jge
or
lcall
adc
lcall
sub
mov
add
test
xchg
cmp
test
mov
ret
or
adc
jae
xor
stos
daa
mov
sbb
std
xor
es
mov
mov
xor
cltd
outsb
xchg
shrl
sub
ret
ds
inc
in
test
push
mulb
repz
fsub
gs
push
sbb
cmpsl
mov
and
in
test
mull
in
sbb
sbb
dec
cmp
incb
adc
fistpl
adc
mov
bound
test
mov
jae
mov
xor
sbb
je
pop
mov
xlat
outsb
pop
ja
cmp
push
fwait
or
push
inc
cltd
dec
xor
xchg
ja
stc
seta
aas
sbb
push
jb
pop
push
outsb
iret
aad
and
or
jecxz
pop
aaa
scas
or
in
push
sub
mov
pop
xchg
mov
jnp
test
inc
xchg
cli
test
rol
jecxz
popa
mov
and
adc
shlb
or
outsl
pop
outsl
dec
xchg
xor
loop
add
push
arpl
shrb
adc
clc
aaa
movsl
clc
daa
mov
and
mov
int3
sub
in
dec
in
fwait
gs
sbb
mov
in
mov
scas
add
icebp
xor
jae
test
mov
nop
adc
push
daa
out
fcmovnbe
je
aam
mov
fildl
fsts
dec
push
xchg
jp
push
mov
pop
fldcw
loop
daa
and
repz
jnp
jns
in
test
sbb
cmpl
cmpsl
mov
iret
lock
mov
and
test
mov
jecxz
mov
lods
cmp
loope
mov
sub
adc
mov
xchg
fdivl
xlat
cmp
mov
add
rorl
xchg
mov
repz
cmpsb
push
push
sub
nop
jnp
out
ror
or
std
add
out
icebp
shlb
push
je
gs
dec
xchg
mov
in
bound
adc
pop
dec
push
lcall
or
imul
xchg
cs
pop
enter
pop
cmp
mov
iret
outsl
or
sbb
and
mov
lret
imul
jmp
push
adc
dec
in
push
jae
mov
sub
ret
jnp
jne
addr16
scas
std
out
mov
in
jno
hlt
mov
cwtl
pop
jecxz
pop
ret
data16
jg
sub
pop
sbbl
imul
pushf
jle
mov
mov
mov
aaa
and
scas
fcoms
les
cld
add
mov
in
add
leave
pushf
repnz
or
jo
sub
cwtl
stos
dec
mov
push
nop
mov
dec
lcall
mov
jne
mov
cltd
je
pop
mov
mov
mov
pop
mov
sub
jno
xlat
jp
push
loop
cmp
test
pop
bound
loopne
ds
xchg
sub
sti
inc
xor
mov
insl
enter
inc
lods
xor
mov
push
mov
add
sbb
jae
or
out
pop
mov
xchg
or
xchg
ret
jb
add
mov
xor
sbb
mov
cmp
jl
mov
xor
add
add
mov
idivb
xchg
adcb
pop
fstpl
mov
sahf
sub
add
dec
in
test
sbb
outsl
fadd
movsl
add
scas
or
xchg
lret
or
lahf
inc
loope
test
cli
mov
cmpsb
adc
mov
hlt
fnstsw
popf
dec
push
add
inc
inc
outsb
fwait
add
add
imul
ror
mov
pop
cld
xchg
xorb
xchg
mov
lcall
mov
cs
or
xor
notb
sbb
mov
and
pop
mov
jnp
shll
sub
clc
leave
adc
lock
push
mov
cltd
enter
mov
or
xchg
mov
xlat
adcl
adc
sbb
stos
adc
pop
std
nop
jge
and
pop
jns
pop
sub
or
jae
and
inc
std
mov
andb
pop
scas
and
jne
incb
lcall
xchg
sahf
and
push
xor
out
imul
add
arpl
call
inc
test
mov
mov
pop
xor
mov
inc
add
in
xchg
jmp
mov
rcr
dec
push
sub
pop
icebp
outsb
aaa
sbb
xchg
outsl
rcrb
mov
pop
fs
jne
or
aaa
xchg
push
cmp
pop
mov
and
dec
adc
stc
pop
mov
icebp
out
mov
adc
push
pushl
sbb
or
stos
pop
sub
mov
xor
or
ds
or
cwtl
xchg
push
cmp
pop
loopne
lods
and
out
fsub
cmp
ds
scas
and
arpl
cs
fiaddl
adc
push
cwtl
lret
push
fnstcw
and
push
jbe
ffreep
or
and
scas
pop
cmp
stc
push
xor
xchg
aam
insl
xor
push
bound
push
cwtl
or
cmpsl
add
lret
aam
mov
test
out
mov
jo
std
mov
push
jnp
mov
sbb
fs
jge
addl
and
sub
cmp
sub
fstpt
out
mov
test
lods
lret
imul
insb
les
int
push
adc
jnp
lahf
imul
xchg
ret
add
lret
pushf
xchg
or
or
inc
fidivrs
pushf
xor
fnstenv
stos
jmp
testb
aad
push
and
jl
jg
pop
jbe
sbb
aaa
jecxz
push
bound
push
loop
dec
cltd
inc
fisubrl
loop
fidivrs
popf
addr16
adc
xchg
int3
push
push
jne
pop
adc
aad
mov
stos
bound
jmp
sbbl
sub
loopne
pop
lock
lahf
loope
ljmp
sbb
into
mov
xchg
mov
xchg
mov
sub
pop
jl
dec
add
push
or
aad
xchg
and
inc
mov
sbb
push
into
popf
repz
pusha
jmp
shr
or
push
lret
mov
lds
pop
inc
xor
decb
and
xchg
inc
and
mov
or
pop
ret
xchg
and
mov
jb
mov
jmp
icebp
cs
cmp
xchg
push
and
xchg
push
sbb
clc
adc
xor
inc
ss
sub
pop
fxch
push
pusha
and
dec
stos
cwtl
fs
jle
jp
pop
sahf
xchg
cld
add
out
js
jno
add
push
dec
mov
mov
push
cmp
sbb
enter
mov
push
push
pop
xor
fbstp
jns
stc
repz
push
fwait
sbb
sti
adc
xchg
push
pop
cmc
cltd
xchg
inc
xchg
fadds
sarl
icebp
outsb
xchg
inc
or
loope
pop
adc
mov
inc
mov
pop
jno
pop
out
std
ret
je
xor
loop
add
jnp
arpl
clc
pop
and
aad
fdivrl
mov
insl
fidivrl
cmpsb
test
cmc
aaa
mov
mov
mov
sbbb
sub
insl
jp
test
sti
int
ret
cwtl
std
fbstp
dec
loop
add
movsl
cmp
inc
inc
lea
cld
mov
cmp
sbb
adc
cmpsb
outsb
sahf
jg
sub
sub
xlat
js
jg
push
sub
sub
lret
shl
movsb
lcall
sbb
imul
inc
inc
mov
sahf
sbb
push
fsubl
mov
movsb
mov
xlat
mov
add
add
popf
adc
cli
pop
add
push
fmul
mov
leave
lods
and
dec
pusha
rcrl
cwtl
dec
xchg
loop
xchg
jge
fsave
loopne
jl
add
pop
cmc
iret
mov
sub
orb
inc
jo
hlt
addl
fwait
ljmp
xor
ficoml
outsb
rol
fs
xor
inc
dec
insb
inc
ficomps
orl
inc
sarb
addr16
inc
outsb
data16
pop
xchg
mov
leave
jmp
stc
out
data16
mov
mov
in
mov
in
scas
xchg
rol
jnp
sbb
push
jmp
ret
fcmovbe
shrl
popf
adcb
stos
jbe
sbb
out
leave
mov
scas
repz
fdivl
mov
out
mov
cwtl
xchg
mov
inc
daa
clc
xchg
mov
xchg
sbb
test
jbe,pn
jbe
push
int
je
cwtl
pop
add
mov
lock
movsb
mov
pop
push
jno
add
scas
dec
lahf
jl,pn
sbb
adc
in
dec
cmp
stos
cwtl
rdtsc
aam
iret
mov
shlb
add
sti
fnstenv
adc
and
inc
out
inc
pop
dec
add
addl
imul
push
xor
imulb
jge
push
dec
mov
fisubrs
movl
fstpt
test
inc
xor
hlt
and
and
xor
in
cwtl
call
jno
jmp
in
test
fdivrp
and
shrl
xchg
xor
fstp
pop
mov
cmp
sub
call
xchg
mov
out
xchg
or
gs
fiadds
ljmp
mov
cmp
dec
dec
scas
mov
cs
imul
ficomps
xchg
loope
out
push
xor
fucomip
lahf
and
subl
and
iret
pushf
lods
in
rcl
out
fsubrl
incb
pop
sub
fwait
outsb
bound
es
into
shlb
es
dec
pop
push
pop
pop
jns
mov
pop
jnp
mov
pop
call
mov
jns
xor
sti
mov
add
pop
popw
and
lsl
and
xchg
mov
outsl
xlat
addr16
mov
add
loop
xchg
pop
or
and
push
sub
jnp
jnp
jl
ret
add
insb
dec
popf
xor
cmpsb
loop
in
adc
stos
mov
sub
pop
cmc
xor
enter
xchg
out
rcll
loopne
mov
lods
jne,pt
dec
test
xchg
out
mov
cmp
idivl
roll
sub
pop
and
es
mov
jns
pop
popf
or
aas
sub
into
xchg
xor
movsb
bound
sbb
shrb
aas
dec
jno
adc
cmp
mov
xchg
inc
xchg
sahf
adc
ss
pop
xor
sbb
mov
dec
subb
jge
lret
shl
add
pop
mov
sub
lods
movsl
mov
add
mov
jmp
loop
lcall
pop
cs
sbb
and
xchg
inc
and
shll
je
in
repnz
and
inc
jne
inc
jbe
int3
and
adc
pop
cmc
push
or
mov
add
mov
pop
or
in
mov
sbb
dec
pop
jnp
mov
ret
jmp
xchg
fs
jg
cs
mov
loope
cli
xor
lcall
push
inc
int
lods
inc
mov
fcoms
jl
dec
xchg
daa
push
cltd
mov
sbb
jl
push
and
dec
jne
push
lods
stos
movsl
pop
push
inc
es
and
pushf
daa
insb
mov
out
test
rol
pop
punpckhwd
lock
fwait
lds
imul
push
std
std
popa
aad
es
inc
xchg
in
mov
fsubrs
or
add
lret
mov
dec
shrl
push
jne
jecxz
dec
push
dec
icebp
out
cld
pop
fcompl
out
push
mov
mov
push
xchg
ds
jb
es
jg
dec
sub
push
dec
inc
add
sbb
mov
call
xchg
notb
and
xor
xchg
idivl
mov
adc
inc
xchg
fidivl
iret
push
xor
pusha
mov
fsubrp
popa
xchg
fwait
mov
xchg
fsubrl
mov
xchg
ss
call
lods
fisubrl
jb
std
out
iret
stos
sub
fwait
mov
mov
ret
xor
adc
add
test
call
cmp
inc
sarb
sub
cmp
test
push
icebp
aad
or
popf
je
pushl
mov
push
rcl
mov
stc
mov
adc
into
in
mov
jb
imul
adc
scas
loop
mov
push
stos
push
data16
jl
push
out
cwtl
fsts
outsl
mov
dec
add
and
cmp
mov
insb
push
add
lds
adc
jns
dec
inc
fwait
inc
ret
add
loopne
sar
sbb
inc
push
add
push
loopne
push
ficomps
aaa
xor
je
in
idiv
shll
or
iret
cmc
pusha
jp
nop
cmp
daa
dec
pop
mov
dec
push
mov
iret
jecxz
repnz
sbb
xor
xchg
mov
shlb
xor
jle
mov
jae
fisubl
cmpsb
mov
sbb
popa
pushf
mov
iret
xchg
js
es
mov
repz
lods
add
and
in
outsl
adc
xchg
jle
inc
clc
cmpsl
mov
or
mov
inc
leave
xchg
mov
out
in
adc
subl
pop
pop
pop
pop
mov
jmp
repnz
mov
scas
lods
fdivl
or
aad
std
mov
jecxz
mov
mov
mov
pop
xor
xchg
xchg
mov
inc
out
dec
jbe
mov
sbb
push
lahf
aaa
sub
add
sahf
cmc
out
mov
stos
adc
inc
data16
pop
incl
test
push
aad
mov
fbstp
adc
mov
xor
stos
mov
testl
sub
lods
js
mov
jb
das
and
dec
repnz
inc
js
repnz
xor
pandn
movsb
inc
mov
fwait
sub
in
lds
insl
and
dec
jne
lret
or
or
xor
outsb
jns
cmpl
lds
or
cwtl
fcompl
mov
cmpsl
or
stc
int3
pop
pop
out
push
in
cwtl
aaa
fistl
daa
and
nop
das
insl
or
pop
push
jecxz
dec
push
rol
lods
mov
pop
and
pop
sbb
enter
mov
jo
repz
cmp
and
outsb
pop
xor
daa
loope
pop
cmp
les
mov
cmc
je
add
arpl
ret
insb
add
call
fs
add
lcall
les
or
lea
cmc
scas
sahf
leave
mov
fsub
dec
mov
jl
jnp
jl
outsl
dec
pushf
call
andb
lcall
push
into
sub
jp
mov
jae
mov
jno
popa
xor
inc
hlt
stos
scas
fldt
outsb
or
test
mov
push
pop
nop
cmpsb
push
aas
add
xlat
and
pop
dec
mov
mov
or
add
gs
push
cmp
push
dec
pop
sbb
les
int
aam
lods
mov
push
jne
sub
cwtl
jo
jo
sub
rorl
repz
aaa
sbb
lock
cmp
daa
les
jmp
dec
popf
push
sti
and
ret
mov
add
lea
mov
arpl
lcall
out
or
add
ja
lods
xchg
mov
pushf
fidivl
mov
inc
sub
scas
out
jb
test
in
je
add
mov
and
jne
out
inc
pop
jns
jo
xor
jecxz
nop
xchg
cmc
and
cmp
xchg
in
push
mov
insl
in
add
xor
mov
outsb
jg
je
stc
push
in
jle
data16
pop
inc
lea
lock
hlt
push
mov
add
enter
test
inc
out
mulb
mov
jg
sbb
div
jbe
jg
lcall
push
out
xor
sub
lock
and
in
test
out
xchg
mov
mov
sub
daa
sahf
and
imul
sub
lret
push
pop
xchg
repnz
gs
xchg
sub
mov
idivl
mov
jne
outsl
adc
and
pop
int3
or
outsb
mov
mov
cmp
inc
fsubrl
inc
gs
inc
pop
jae
jle
cltd
insb
adc
mov
popa
test
and
js
xor
sub
test
cmpsb
inc
and
add
in
xorl
sbb
lret
mov
dec
dec
pop
mov
lea
push
xor
and
mov
adc
lea
xchg
pop
cmc
rorb
cmp
jns
jge
cli
or
pop
movb
cmpb
sub
test
pop
mov
and
push
rcl
stc
lea
push
popa
mov
sahf
js
jle
add
or
push
lods
clc
mov
sub
sti
dec
push
xlat
mov
dec
das
push
inc
inc
cmpxchg
stc
inc
add
in
xchg
iret
cwtl
icebp
jmp
jl
sbb
mov
es
push
lret
sub
sbb
mov
jo
sub
ss
lret
xchg
push
cwtl
rorb
xor
mov
or
push
lahf
out
mov
xor
add
insl
jbe
cmpl
or
jb
ret
divb
mov
test
ljmp
pop
dec
push
rorb
adc
push
xchg
mov
xorb
cmp
sub
dec
shlb
int3
jg
xor
mov
mov
push
xlat
push
sti
enter
push
add
jnp
mov
xor
mov
inc
hlt
inc
lds
stos
in
aas
into
mov
mov
shlb
cli
insb
sahf
fldt
leave
fimull
xlat
sbb
xor
test
xlat
xchg
cmp
jecxz
or
inc
and
push
and
or
jae
dec
pop
call
adcb
gs
push
clc
aam
insl
or
mov
loope
std
xchg
addl
pop
or
pop
insb
outsb
push
orb
popf
leave
dec
sahf
xor
sahf
inc
pop
fstpt
inc
bnd
jno
fildl
push
mov
out
fidivs
dec
push
and
out
das
adc
leave
stos
inc
out
pop
dec
xor
dec
pop
icebp
mov
push
scas
test
push
adc
push
xchg
mov
lret
repz
sbb
test
inc
shl
lret
ds
adc
push
pop
mov
pop
xlat
int
das
repz
out
xchg
subl
call
test
add
push
data16
cld
out
jb
bound
ds
and
mov
xor
rorb
sub
jo
and
cmp
xchg
cld
xchg
cmp
sbb
mov
push
idiv
mov
jb
mov
addr16
stc
imul
popa
stc
xchg
pop
jb
add
lea
xor
inc
es
sub
out
mov
inc
push
scas
xchg
aas
push
mov
lods
push
pop
pop
xor
in
pop
cmp
call
push
scas
rcrl
mov
mulb
lret
mov
fucom
pop
dec
cmpsb
mov
xor
shlb
or
inc
jmp
inc
subl
jle
mov
aam
movsl
rcrb
in
pop
int
leave
xor
fstpt
jge
sbb
ja
loop
pop
lds
mov
aaa
rcl
ret
rcrl
popf
popf
js
jg
add
pusha
inc
mov
imul
push
dec
shlb
js
decl
mov
pushf
push
mov
jns
outsb
das
lgs
mov
sbb
adc
mov
mov
or
sti
or
leave
pop
insb
sub
bound
sub
inc
stc
mov
pushl
out
scas
push
mov
push
aas
xor
ret
push
cmc
clc
testl
enter
and
jg
push
xor
sbb
decb
jecxz
sahf
test
adc
test
stos
pop
jg
fsubl
jp
push
cs
mov
jnp
fs
adc
outsb
shl
cld
ja
mov
dec
nop
or
pusha
cwtl
cmp
es
je
ss
mov
hlt
add
in
jle
mov
stos
mov
mov
xor
sahf
in
pop
xor
mov
clc
loop
mov
xchg
aaa
mov
xchg
push
or
stos
add
add
into
pop
lahf
xor
lods
sbb
xor
or
scas
std
ret
add
call
jnp
mov
sub
mov
rcrb
bound
jecxz
mov
popa
std
nop
adc
mov
push
cltd
pop
sti
dec
es
insb
or
pop
sti
dec
ret
mov
mov
sub
rcll
mov
repnz
ds
ret
imulb
push
in
push
sbb
mov
call
mov
pop
cmpb
jns
xor
pop
xorl
movsl
dec
addb
cld
into
sahf
dec
lock
pop
or
mov
push
xor
xchg
in
mov
inc
push
daa
mov
outsb
out
mov
int
jb
cmpsl
push
lods
imul
jne
dec
mov
adc
xchg
xchg
arpl
inc
pop
and
frstor
test
popf
in
sub
in
pusha
dec
mov
add
cmpsl
cld
les
pop
cwtl
sti
repnz
pop
rcll
cmp
pushf
gs
arpl
ss
test
stos
inc
jmp
out
and
jle
icebp
idivl
inc
jo
stos
lock
mov
dec
test
mov
es
out
inc
xchg
filds
pop
mov
mov
push
xlat
jecxz
repz
je
and
mov
mov
fwait
or
push
xor
sub
jo
mov
nop
ja
stos
mov
fcomps
cmp
push
pop
sub
jne
sbb
xor
iret
xchg
dec
jns
adc
iret
fldenv
int3
popf
movsl
xchg
data16
stc
mov
js
pop
inc
cmp
ja
adc
adc
push
pushf
push
out
pop
cltd
xchg
pop
enter
loope
push
scas
inc
adc
std
addr16
decl
in
push
or
or
xchg
leave
xchg
stc
pusha
pop
pushf
xchg
scas
fistl
adc
shlb
xchg
and
rcrb
jne
cmc
lret
into
bound
mov
cvtps2pd
fnsave
mov
shll
push
dec
xlat
fmuls
stos
and
in
insb
in
or
xchg
cwtl
mov
data16
xchg
push
pop
cmc
enter
test
pop
lret
mov
dec
jge
scas
sbb
dec
and
enter
in
sub
adc
mov
test
popa
test
jmp
xchg
repnz
push
xlat
sahf
pop
add
aad
jns
dec
ret
adc
pop
mov
push
sbb
mov
mov
stos
fistps
mov
add
mov
insl
cld
and
dec
insb
test
and
lret
lcall
shll
cmp
xor
fbld
jo
push
int3
xadd
out
xchg
add
sub
xor
mov
adc
pop
pop
lea
stos
inc
jg
insb
mov
adc
inc
divl
jmp
cmpsl
jne
out
push
hlt
dec
dec
xchg
adc
dec
pop
lret
stos
xchg
sub
inc
cli
mov
test
repnz
in
dec
packsswb
stos
jecxz
out
outsb
cld
jmp
dec
pop
dec
adc
mov
call
or
xchg
sub
inc
cmp
lret
dec
fldl
movb
jne
adcb
lret
imul
or
das
jbe
mov
mov
cmpl
in
add
imul
mov
lods
fmul
bound
shrb
cs
hlt
adc
mov
and
xchg
pop
lahf
nop
rcpps
mov
fistps
sbb
mov
push
orb
testl
cmp
push
negb
imul
les
push
xor
inc
push
mov
add
xor
dec
cmp
imul
adc
fwait
stos
int
test
movsl
add
inc
fsubrs
std
push
cmp
ja
lret
push
rorb
outsl
je
jl
in
xchg
push
sbb
pop
clc
cld
cwtl
mov
mov
xlat
push
stos
mov
xchg
adc
xor
inc
dec
pop
fidivs
add
in
mov
das
sub
bound
cltd
jne
jle
lods
mov
sbb
xchg
test
pop
nop
sbb
pop
insb
dec
popa
lock
shll
pop
in
jmp
pop
mov
ret
pop
add
clc
mov
outsl
pop
add
std
cmpsb
xchg
arpl
jge
or
lcall
cmp
sbb
ret
push
jecxz
sub
jns
and
sar
pop
push
roll
ds
xchg
in
inc
inc
mov
sti
shlb
jae
jb
jg
add
lcall
push
insl
adc
mov
imul
xchg
into
imul
lahf
push
rolb
fsts
push
dec
pop
nop
into
popf
cmp
xor
loop
cs
and
shlb
jne
mov
lret
mov
test
and
mov
loope
dec
mov
shlb
push
aad
xchg
leave
cwtl
mov
aaa
jmp
in
mov
outsb
in
hlt
mov
push
rclb
je
imul
mov
dec
imul
dec
cltd
push
adc
popa
int3
daa
pop
aam
ror
in
xchg
das
mov
popa
add
outsb
jns
jmp
arpl
mov
data16
mov
inc
inc
mov
nop
mov
int3
pusha
xchg
adc
insl
dec
pop
fnsave
jmp
inc
mov
jne
sti
mov
mov
push
fimuls
nop
mov
enter
lahf
jmp
cs
dec
jne
cmp
sbb
sbb
pop
nop
loope
cmp
outsb
out
pop
mov
mov
xor
sbb
pop
rcrl
pop
and
repz
das
inc
dec
pop
sti
mov
adc
fcomi
and
or
push
mov
or
pop
adc
fisubrs
std
test
mov
or
test
arpl
pusha
mov
in
xchg
inc
xor
add
jae
lahf
push
mov
les
mov
mov
sar
imul
pop
mov
fstl
dec
notl
inc
sbb
cmc
or
shll
jle
add
fildl
addr16
jge
outsb
cmpsl
mov
mov
mov
and
pop
push
in
cmp
lcall
and
add
xor
inc
arpl
dec
in
cmp
ret
gs
xchg
sahf
loopne
orl
ret
aam
cmpsl
fcmovnb
lods
inc
rclb
loop
push
mov
or
push
inc
std
and
xlat
jmp
sub
and
shrb
in
pop
add
loopne
mov
negb
mov
out
pop
out
pop
sub
scas
push
xchg
cltd
arpl
pop
mov
popf
loop
pop
idivl
pop
dec
jl
jns
jp
test
ja
in
lock
sub
cld
mov
test
ljmp
bound
push
std
out
xchg
pop
jae
sbb
popf
andb
pop
jle
pop
mov
mov
test
jmp
mov
xchg
aad
ds
cli
cmpsb
mov
cmc
outsl
cltd
in
in
fwait
repnz
inc
sbb
xchg
aas
shr
jge
jo
inc
xor
inc
pop
push
inc
inc
es
sti
pop
test
ds
jne
rolb
lret
cwtl
icebp
insb
adc
add
testb
pop
pop
roll
repz
sbb
outsl
xchg
or
jge
xor
mov
or
mov
leave
pop
sub
movsl
jae
xchg
xchg
cltd
shrb
jecxz
jecxz
sbb
cmpsb
push
mov
arpl
je
sub
in
ss
push
push
and
adc
push
or
int3
ss
daa
mov
push
adc
xor
pop
and
cmp
rol
or
das
jmp
cmp
mov
add
pop
adc
push
lret
jge
pop
mov
push
sub
cwtl
in
push
bound
clc
mov
orl
or
imul
xchg
pop
loopne
inc
sbb
mov
mov
lea
insl
jae
es
mov
jae
int
push
mov
lods
testb
and
adc
xchg
or
inc
cmp
sub
call
mov
add
loope
xor
mov
mov
cmpsl
nop
stc
enter
popf
mov
sub
inc
push
push
mov
adc
and
outsb
aas
pop
insl
pushf
and
jnp
fldt
inc
in
cmpsb
je
lcall
js
out
in
sbb
sbb
xchg
ret
pop
hlt
insb
and
rolb
es
out
enter
fwait
call
clc
sti
inc
int3
sbb
mov
std
cmp
test
aam
fsubrs
xchg
sub
and
fwait
ret
andb
leave
rcrb
mov
clc
xchg
dec
mov
cs
jg
repz
clc
xor
pop
and
je
lds
jle
ffree
lods
jns
xchg
xchg
and
pop
pop
jae
dec
cmp
scas
sub
arpl
mov
adc
sar
lret
arpl
jl
movsl
shlb
ljmp
and
xorb
mov
or
scas
push
mov
inc
add
and
pop
adc
sarb
stos
rcrb
mov
inc
xchg
mov
sbb
xchg
push
faddl
add
lret
and
jl
nop
lahf
lea
test
inc
adc
in
mov
pop
dec
xchg
fcoml
ljmp
xchg
cwtl
adcl
cmpsl
mov
mov
push
aad
mov
test
je
rcll
stc
dec
jle
ret
push
sbb
pop
jae
mov
pusha
es
lock
mov
shlb
ja
mov
sub
mov
or
sub
sbb
pop
aam
in
or
cmp
inc
lods
cmp
scas
dec
mov
dec
les
mov
sbb
addb
push
ljmp
repz
gs
gs
jno
adc
std
data16
shr
dec
data16
test
push
sub
push
shll
fwait
mov
ljmp
adc
inc
add
loop
add
js
test
outsb
shlb
jbe
hlt
mov
lds
aaa
xor
add
push
insl
adc
xlat
imul
push
je
rcrl
popf
shl
sub
cmp
push
cltd
xchg
divb
dec
adc
out
sbb
je
pop
xchg
mov
ficomps
cltd
adc
xlat
cmp
pop
adc
jle
es
pop
fildl
push
ljmp
cmc
cli
jle
xchg
cmpb
insl
aaa
mov
mov
adc
ret
mov
mov
cwtl
rorl
add
mov
jno
enter
out
xchg
mov
in
xchg
leave
addr16
pop
stc
cli
lcall
dec
xor
cmp
out
mov
es
rolb
out
imul
sub
cmp
cld
fldl
in
pop
mov
jmp
ret
pop
adc
insb
in
jg
addr16
out
pop
loope
sub
sbb
xchg
in
jae
pop
inc
mov
and
lock
clc
cmp
xchg
stos
xor
jl
popa
stos
jnp
or
jge
adc
mov
and
in
scas
loop
cld
xorb
sbb
arpl
ss
repnz
int
adc
fs
ljmp
jb
lods
loope
notb
bound
hlt
repz
xor
nop
mov
sub
inc
jb
inc
inc
data16
or
inc
aaa
push
add
cld
mov
fndisi(8087
test
push
addr16
into
pop
adc
insl
add
scas
nop
push
clc
stc
movsb
jae
xchg
jg
leave
cli
out
mov
and
fmull
push
rclb
lock
xchg
adc
faddl
outsl
or
fidivrl
mov
gs
xchg
cmp
cld
xlat
mov
ds
add
incl
xchg
aaa
pop
jb
sub
cmpsb
movsl
inc
imul
lock
mov
icebp
cmp
in
in
cltd
pop
fwait
push
idivb
pop
out
mov
cmp
push
ror
cmpsl
sub
push
adc
lea
mov
inc
sub
out
cmp
andb
aas
push
mov
lods
lock
aad
iret
mov
adc
sbb
dec
add
js
dec
fistl
and
mov
add
cmp
imul
je
out
mov
out
stc
mov
inc
sbbl
xor
xor
fcoml
aam
fmulp
loope
fadds
and
adc
push
sbb
push
inc
dec
jl
mov
movsl
push
or
insb
clc
or
stos
pop
mov
dec
add
push
fdivrs
adc
push
xor
and
out
ret
dec
lock
popa
inc
shlb
and
outsl
aam
xchg
leave
xchg
js
dec
push
frstor
add
add
push
int3
pavgb
push
push
xlat
adc
test
fistps
and
iret
mov
mov
out
xchg
fmul
adc
ss
sub
loop
test
mov
mov
ljmp
in
in
sahf
add
dec
cmp
ret
dec
lea
jmp
mov
into
xor
shl
mov
int
inc
inc
push
xchg
imul
ret
js
inc
ret
das
cmc
cs
inc
ret
js
push
shll
repnz
adc
pop
fwait
inc
inc
dec
call
dec
mov
inc
jl
mov
pop
nop
inc
sahf
in
xor
xchg
mov
cltd
scas
or
jns
lret
mov
int
add
inc
mov
cmp
movsl
xchg
pushf
in
test
pop
bound
mov
sbb
push
adc
sbb
sbb
pop
iret
cmpsb
insl
insl
push
and
add
add
sti
push
and
or
mov
repnz
jl
sar
cltd
and
lock
adc
mov
lcall
inc
sbbb
mov
scas
stc
addb
inc
out
xchg
aas
sub
push
pop
iret
lods
pop
vcvttps2dq
or
cmp
push
jno
sti
icebp
or
je
inc
cmp
fbstp
aad
xor
xor
fwait
lahf
cmp
cmp
das
sbb
stos
cltd
cmpsb
das
jl
dec
inc
loopne
fistpll
testl
test
pop
ljmp
lcall
adc
fstl
add
lds
mov
int
scas
int3
rcr
mov
cmp
nop
xchg
mov
dec
jle
sbb
sbb
push
outsl
lcall
adc
mov
mov
movsb
cmpsb
mov
iret
aam
or
addr16
push
lret
rolb
push
xor
and
clc
and
mov
sbb
mov
cltd
or
add
push
mov
mov
adc
mov
popf
push
cs
cld
sub
es
pop
sub
gs
dec
push
push
cld
mov
stos
hlt
xlat
pop
popf
and
sub
dec
or
xor
leave
push
addr16
sub
sbbb
dec
insb
inc
dec
cmpsl
xor
cli
dec
aad
bound
jo
mov
and
jb
sub
or
int
out
test
xor
inc
sub
cmpsl
fs
cmp
xlat
cmpl
ds
jb
iret
inc
sub
or
jbe
das
test
jge
push
lods
cltd
loopne
mov
ret
outsb
loope
mov
cmp
shll
aad
push
in
xlat
movsb
shl
out
xor
out
sub
xor
popa
jl
push
icebp
dec
adc
xchg
mov
xchg
lods
std
les
in
push
jmp
nop
in
int3
cltd
lds
enter
mov
mov
int3
or
or
mov
mov
lret
mov
push
lcall
fnstenv
xchg
sarl
add
cmp
adc
das
mov
lcall
cmp
and
xchg
pop
sbb
nop
pop
cmp
aam
imull
or
ret
in
xchg
push
mov
xor
dec
testb
jae
cmp
mov
scas
ficompl
mov
xchg
mov
or
js
mov
stc
or
mov
sbb
das
sub
add
add
sbb
dec
mov
lds
fidivrs
push
xchg
adcb
aad
dec
pusha
adc
lods
adc
lret
or
cltd
adc
insl
inc
push
imul
push
ljmp
test
rcll
pusha
pop
jmp
jo
js
add
movb
xchg
or
popa
adcl
mov
ja
mov
call
adc
xor
aaa
sub
inc
paddusw
daa
aad
enter
sbb
add
adc
lods
jne
inc
sbb
stos
inc
lock
xchg
push
ds
lods
mov
pop
rcll
sub
fistpll
push
fldl
jb
cli
lds
das
sahf
pusha
xor
loope
dec
pop
mov
or
sbb
dec
lods
outsl
xchg
cmpsb
out
xchg
lods
hlt
sub
jmp
shll
xchg
or
or
shlb
mov
xlat
and
and
push
stos
adc
jmp
lahf
xor
sbb
adc
and
add
mov
lahf
inc
or
aas
loopne
or
clc
iret
lea
je
jmp
jmp
mov
scas
mov
push
mov
mov
mov
lea
pushf
es
dec
push
cmp
stos
int3
je
into
jge
stos
adc
and
leave
into
imul
int3
adc
rorl
fisubrl
add
sbb
int3
in
inc
pcmpgtb
cmpsl
in
inc
aas
inc
movsb
fisttps
negl
adc
mov
js
adc
loop
stos
imul
mov
xor
or
test
mov
loop
shrl
sti
in
jge
xchg
shll
popa
das
movsb
mov
insb
mov
cmpsb
or
leave
stos
mov
pop
mov
dec
into
dec
cmpsb
push
jmp
stc
js
xor
jno
mov
hlt
lds
mov
ret
sub
jp
and
pop
repnz
lods
dec
pop
loopne
shll
inc
push
pusha
mov
cmp
movsl
and
stc
outsl
lcall
sbb
push
sub
sbb
stos
push
mov
repz
cltd
int
jp
lahf
es
add
add
sahf
daa
mov
fwait
mov
scas
shl
pop
mov
push
sbb
push
or
cmp
mov
xor
fsubr
mov
inc
mov
xor
push
push
push
ja
sbb
or
jl
inc
and
xor
mov
insl
icebp
sbb
jge
roll
imul
xchg
outsb
inc
pop
out
or
mov
in
call
mov
jnp
xlat
ljmp
mov
inc
cmp
popf
leave
jo
xchg
adc
int
inc
shll
clc
aaa
add
sbb
iret
mov
mov
jno
jle
data16
push
jle
stc
dec
into
cmpsb
adc
add
hlt
adc
dec
sub
sub
les
dec
lret
mov
es
loope
addr16
or
rdtsc
ret
daa
and
popl
imul
repz
nop
jo
out
cli
popf
test
cs
mov
dec
mov
loope
pop
xor
cmp
jmp
add
clc
out
xchg
mov
test
pusha
loope
mov
stos
pop
lds
repnz
repnz
xchg
adcl
push
mov
sbb
clc
test
mov
jge
sbbl
in
push
stc
mov
pop
pop
in
fcomps
push
or
mov
rorl
aam
fldenv
sbb
add
out
pop
repnz
js
adc
or
ret
bound
dec
mov
inc
push
iret
stos
test
lock
sbb
xchg
add
ret
fnstenv
pop
jmp
xchg
enter
xor
mov
and
and
and
sbbb
pop
add
movsl
aad
pop
dec
push
imul
shl
test
pop
sbb
in
sub
icebp
addr16
jg
fs
imul
inc
mov
sub
xor
mov
push
mov
xor
xchg
pop
mov
push
fs
or
dec
jl
lret
pop
pop
mull
aad
sbb
scas
xor
ficompl
sbb
mov
mov
movsb
into
pop
repnz
cld
adc
mov
mov
imul
dec
mov
or
mov
ficompl
or
fisttps
loopne
int3
jge
sbb
jmp
lret
imul
insl
in
push
xchg
xor
mov
subb
push
sti
out
add
sub
daa
sub
mov
je
pop
pusha
pop
ret
bswap
cld
mov
in
jno
incl
aam
sub
pop
dec
mov
push
cmp
sub
inc
xchg
movb
lret
push
and
clc
ret
mov
dec
outsb
pop
jmp
push
xlat
adc
sub
mov
push
push
fmull
cmp
cltd
xor
mov
out
mov
cs
mov
cmp
inc
leave
and
rolb
cmp
mov
push
push
ds
sub
pop
jge
inc
je
sub
daa
xchg
mov
dec
out
scas
sub
lods
cmpsl
xchg
stos
mull
pop
mov
sub
test
cmp
and
pop
xlat
xchg
loope
jbe,pn
aad
lock
xchg
into
mov
pop
in
mov
mov
ret
sbb
or
sti
fiaddl
cmp
fidivrl
fldl
sbb
imul
cmp
push
ss
push
xor
in
xor
mov
xchg
lods
ja
nop
pop
mov
outsb
jne
test
cwtl
xor
int
pop
mov
add
rcll
movaps
popf
testb
ja
sahf
cmpsb
inc
pop
cmovno
jge
cmp
pop
or
lea
in
adc
pop
jl
sub
mov
int3
scas
adc
mov
cmpsl
insb
je
ss
shl
or
shlb
pop
rolb
nop
xchg
in
push
pop
movsl
popf
mov
jns
gs
xorl
and
pushf
shlb
or
outsl
mov
imul
and
pushf
mov
pop
cmp
cli
xor
scas
std
or
movsb
fwait
push
mov
decl
mov
adc
sbb
inc
and
cmp
xor
push
mov
lds
jle
jp
std
shlb
and
mov
mov
ljmp
pop
sbb
jne
xor
ret
loope
orb
mov
shl
push
dec
outsl
aad
stos
adc
dec
jl
ss
popf
mov
cld
sub
fistps
and
push
jbe
jle
mov
hlt
les
pop
subl
push
xchg
int3
aas
popf
xor
cmpl
inc
pusha
not
out
mov
std
mov
subb
mov
ret
xlat
adc
sbb
jle
lret
je
test
imul
push
jo
lret
rcrl
pop
scas
lods
pop
jmp
inc
stos
or
jg
cmpsb
fsubrs
jmp
cmp
inc
xchg
call
adc
xor
cwtl
dec
popa
mov
cwtl
pushf
or
dec
ss
and
leave
xor
cs
lock
or
jae
outsb
in
sbb
jmp
dec
sub
ret
ret
mov
das
xor
fcomps
adc
mov
lock
testl
or
cli
add
ret
pop
and
cmp
mov
fwait
ja
psubq
add
cmp
imul
ret
lcall
push
mov
sbb
in
inc
mov
or
and
adc
jne
pop
ljmp
enter
and
xorl
or
mov
mov
adc
add
arpl
xor
mov
pop
fdivp
mov
push
push
pushf
aad
push
xor
add
mov
loope
das
inc
lea
dec
mov
push
out
mov
or
idivb
aaa
or
xorb
test
sti
add
test
push
xchg
aam
bound
cmc
inc
pop
mov
sar
xor
or
ljmp
and
div
push
xlat
push
dec
jnp
sbb
adc
dec
sub
and
shl
push
and
gs
stc
mulps
leave
cli
sahf
lock
xchg
push
pop
adc
stc
sbb
dec
test
fiaddl
xor
es
jecxz
sub
sbb
sub
test
xor
push
dec
int3
mov
push
jmp
sub
inc
js
div
mov
aaa
scas
push
mov
jmp
insb
stos
ss
movsb
lret
cwtl
lea
fdiv
xor
cmp
stos
sbb
cltd
or
push
mov
shrl
dec
jmp
or
xchg
sub
jmp
cmp
jbe
cmp
mov
js
dec
push
dec
or
loopne
fsubs
lahf
ja
dec
pop
adc
mov
sbb
setge
push
ja
iret
sub
mov
ror
hlt
dec
inc
jne
or
jp
rcrl
mov
dec
xor
fsubrl
push
in
sub
ja
test
iret
pop
mov
outsb
xchg
clc
xchg
dec
or
movl
sbb
mov
jmp
dec
adc
frstor
in
pcmpeqw
sti
dec
test
push
ja
rcr
xchg
mov
in
and
dec
pop
repz
shlb
cmc
sar
clc
cmp
fbld
sub
mov
sub
ret
insb
leave
mov
add
fucomip
lret
and
enter
mov
sbb
dec
icebp
iret
aad
mov
adc
mov
sub
popf
mov
imul
in
mov
cmp
inc
pop
rorl
js
xchg
adc
pushf
test
push
inc
gs
scas
cmp
das
pop
bound
jb
inc
shr
pop
jecxz
mov
js
ds
xchg
sub
loope
add
lea
pop
call
lahf
push
sub
pop
subb
and
jg
test
push
mov
or
inc
jo
arpl
shr
scas
insl
rclb
mul
mov
lahf
daa
push
mov
mov
iret
dec
xchg
mov
lret
inc
or
xlat
jmp
mov
or
mov
mov
repnz
enter
sbb
cmp
jno
lret
pop
push
std
xchg
jecxz
pop
mov
test
stos
stos
sarl
dec
fidivrs
cli
mov
jns
push
fisttps
lock
mov
mov
ljmp
sub
imull
mov
sbb
dec
mov
ja
and
stos
mov
and
arpl
sbb
inc
xchg
mov
mov
cmp
fisubrs
pop
pcmpgtw
fldl
push
imul
idivb
mov
pop
shrb
pop
movl
xor
xor
test
add
fsubrl
test
sub
xchg
ljmp
and
rolb
fisttpl
ret
push
dec
cmpsb
mov
lea
xchg
jmp
dec
sub
cmovge
jg
add
hlt
inc
lods
idiv
add
loopne
dec
dec
out
cmp
sub
cmp
stos
bound
das
xchg
xchg
xchg
and
dec
loop
imul
xor
adc
into
mov
add
test
cltd
fstps
mov
rcll
jg
adc
das
sbb
adc
xor
sbb
push
or
test
movsb
mov
mov
mov
fdivrl
sbb
and
aad
and
sbb
adc
mov
in
sub
or
inc
jecxz
add
scas
xchg
or
xchg
into
push
pop
rol
scas
gs
addr16
sar
mov
push
pop
aad
fwait
pop
sbb
aad
fwait
add
leave
sub
sub
test
or
movsl
aas
filds
sbb
stos
stos
out
nop
clc
stos
dec
lds
mov
push
fsts
pop
enter
std
lods
iret
lods
xchg
mov
xchg
adc
fisubs
loopne
adc
das
pop
dec
dec
mov
leave
push
fdivrp
jmp
sub
cmp
enter
mov
movsb
cld
cwtl
ret
xchg
dec
xchg
xor
inc
aas
add
mov
or
stos
mov
into
std
test
jns
inc
clc
je
outsw
rorl
mov
sbb
xchg
or
inc
adc
popf
les
push
in
pusha
lret
mov
push
std
lock
lea
jne
cmp
std
divl
pop
xchg
and
jg
sub
ss
dec
cmp
mov
or
xchg
rcrb
or
pushf
pushf
adc
mov
fs
ss
mov
addr16
sahf
idivb
mov
or
ret
fwait
lods
pusha
inc
in
cmp
or
and
sbb
and
vpmacssdqh
lds
sub
jnp
pop
mov
jg
ret
cmpsl
lds
adc
mov
arpl
lcall
repz
dec
xor
out
push
in
adc
mov
in
loopne
push
aaa
lret
call
or
mov
mov
dec
sub
inc
fistps
les
insb
out
ficompl
cltd
loope
push
les
inc
loope
into
push
pop
out
jl
enter
push
pop
mov
in
iret
xchg
imul
push
hlt
adc
test
loope
push
adc
xor
enter
scas
sti
enter
paddsb
sub
push
jge
sbb
std
and
push
mov
mov
cmp
popa
jno
nop
and
nop
cli
in
push
iret
lds
jmp
xchg
push
in
les
sub
cmp
mov
jnp
xchg
and
push
cmp
mov
cmpsl
test
fisubs
sub
insl
mov
rolb
pop
rcrb
ja
add
loope
push
aaa
xor
push
push
xor
lock
dec
ja
aas
insl
repz
mov
push
cmpsl
mov
dec
inc
cmp
add
insb
mov
mov
mov
xor
mov
ret
mov
es
ret
xchg
clc
xchg
and
ljmp
xchg
sub
aam
mov
ds
cmpsb
xchg
sbb
push
inc
mov
imul
dec
clc
nop
mulb
pop
mov
icebp
or
cltd
cmp
sub
call
pop
lcall
cwtl
pushf
repnz
push
outsl
nop
pop
adcb
fcmovb
inc
xlat
cltd
cmp
loope
cmp
lock
xor
mov
shlb
dec
xchg
mov
int3
mov
inc
add
lret
outsb
outsb
push
inc
or
leave
dec
or
lock
pop
push
pop
subl
push
cmpl
push
inc
test
jne
push
out
int3
div
sbbb
ss
rcrb
popa
enter
add
mov
ja
cmp
cmp
fstpl
out
xchg
pusha
hlt
pusha
adc
dec
xchg
mov
dec
add
cmp
push
mov
xchg
lea
sub
sahf
punpcklwd
test
imul
xchg
push
mov
jp
push
in
mov
mov
cs
sbb
divl
mov
sahf
mov
inc
xor
push
lds
mov
pop
sbb
xchg
popa
xor
cltd
imul
fwait
lahf
lods
jp
imul
nop
pop
lea
imul
pop
and
rcr
loope
jp
mov
mov
sub
pop
mov
test
test
stos
pop
jp
stc
shll
sub
inc
fstp
or
int3
imul
lret
inc
data16
or
dec
push
cltd
push
lods
pop
pop
mov
stc
outsl
cmp
ljmp
push
cwtl
push
fcmovnu
cli
mov
sub
add
ret
scas
je
cld
aam
mov
jne
xor
icebp
cmpl
or
imul
sbb
xor
ret
sbb
inc
xor
dec
loope
lds
xchg
addb
mov
fistps
push
sub
xchg
mov
adc
mov
andl
sub
imul
dec
les
push
es
insb
je
jns
add
out
out
xor
dec
xchg
dec
add
das
mov
add
sub
xacquire
mov
mov
fisttps
jge
mov
in
out
hlt
loop
rcl
nop
or
ja
xchg
mov
lods
xchg
int
and
iret
stos
mov
sub
adc
push
insb
jecxz
enter
popf
xchg
int
jne
pop
adc
into
inc
loop
push
pop
addr16
inc
int
sti
sahf
lret
ret
les
pop
or
mov
xchg
inc
arpl
and
adc
mov
lds
xchg
xchg
bound
scas
out
loope
iret
jp
stos
aaa
lods
aas
call
data16
js
jg
cmp
inc
dec
dec
scas
sahf
and
subps
divl
lea
xor
mov
lahf
lods
push
in
cltd
in
xor
mov
lea
sub
lret
cli
mov
sbb
mov
scas
ds
jnp
lretw
fisttps
ds
jecxz
icebp
sub
inc
rcrb
ja
sbb
in
jbe
call
adc
or
inc
mov
enter
popf
aam
push
orl
push
int3
push
jb
fmul
mov
inc
cmp
lret
loop
lods
lds
sbb
lret
iret
sub
pushf
popf
iret
insb
inc
jbe
out
jno
jecxz,pn
in
cmp
ljmp
fdivrp
and
sub
xor
daa
sbb
jns
xchg
fcoml
int
cmpsb
mov
and
sbb
dec
rclb
dec
sbb
sbb
add
loopne
push
in
push
push
pop
pusha
push
jp
fcmovne
jg
push
scas
mov
sbbl
movsb
daa
jge
mov
mov
aaa
jns
cmp
and
out
dec
xchg
xlat
mov
xor
pop
lahf
cmpsb
cmp
push
jmp
aam
int
and
fwait
sub
sbbl
push
inc
mov
lret
int
ja
sub
xor
aaa
sbb
and
test
aas
fisubs
pop
dec
arpl
out
push
lret
mov
test
xchg
sub
fidivrs
jle
cmovns
aaa
aad
jmp
cmp
insl
xchg
add
push
mov
mov
fdivrl
xorb
xor
sarb
shll
bound
iret
cwtl
sub
lock
add
enter
flds
mov
jmp
mov
test
fbld
xchg
inc
mov
jae
xchg
dec
dec
mov
jnp
insb
cmpsl
cmpsb
jb
xor
sub
data16
cmp
mov
imul
not
loopne
jne
add
arpl
jae
push
cmp
sbb
not
sbbl
ljmp
fisttpl
or
adc
mov
in
adc
mov
cs
xlat
sbb
fiadds
push
leave
sbb
or
aaa
push
cmp
add
ret
mov
out
divl
cmp
out
cmp
movsb
jmp
fisttpl
pop
cmp
rol
insl
pop
mov
aam
jns
addl
leave
test
jno
jmp
ret
pop
sbb
inc
lock
inc
inc
cmpb
mov
shlb
pop
cmc
lahf
inc
dec
push
xchg
mov
or
xchg
push
xchg
int
scas
jle
shr
push
fidivrs
xchg
xchg
daa
sbb
pop
pushf
lret
mov
or
imul
out
call
std
xor
pushf
out
sub
imul
and
pop
ficompl
sbb
push
fisubl
fldt
mov
mov
mov
jl
test
jbe
iret
jns
cwtl
movsb
inc
mov
cmpl
cmpsl
xchg
sahf
pusha
data16
push
xorb
repnz
lret
sbb
addb
jge
out
add
rol
dec
mov
pop
inc
int3
stos
xchg
add
out
xchg
fs
adc
fisubrl
out
jbe
adc
pop
orl
mov
jge
in
adc
inc
dec
lret
stc
cs
out
shlb
and
jae
int
loop
sbb
push
and
dec
clc
lods
and
fadds
repz
mov
outsl
cwtl
mov
shll
ljmp
push
icebp
xor
pop
adc
stos
mov
add
xor
into
imul
xor
ret
nop
sbb
sub
mov
pop
xor
mov
and
cltd
jl
jb
ret
daa
push
inc
xor
or
pushf
xchg
in
mov
test
or
das
repz
jle
mov
mov
inc
data16
sub
push
das
jmp
push
testl
outsb
sbb
out
xor
inc
push
xchg
inc
das
xor
int
inc
loop
mov
js
arpl
fpatan
push
sbb
inc
lahf
and
ret
stos
cmpsl
and
xor
xor
pusha
and
sub
hlt
sbb
xchg
and
xchg
mov
jno
pop
scas
pop
daa
cmpsl
add
mov
jp
rcl
mov
inc
cmp
sub
mov
dec
call
outsl
and
ljmp
cmp
arpl
dec
mov
jecxz
add
in
movsb
sbb
sbb
inc
jne
or
aaa
ds
and
mov
inc
mov
lcall
mov
fwait
adc
sbb
adc
pusha
out
adc
inc
sub
ret
sbb
push
and
das
insl
xchg
xchg
stc
loope
fdivrl
push
repz
mov
mov
adc
cmc
pop
sbb
imul
inc
ds
sub
xchg
insl
mov
pushf
push
loope
jae
enter
jns
push
das
cmovae
push
in
mov
cmp
popa
out
fmuls
mov
movb
mov
popa
mov
mov
or
add
das
add
cmc
or
inc
roll
and
sarb
ret
fisttps
test
js
push
sbb
pop
ror
mov
scas
js
imul
xchg
rcll
loop
sub
push
jmp
int3
std
pop
sbb
dec
stos
cmp
cli
xor
scas
lahf
hlt
push
adc
dec
andl
dec
ss
xor
mov
int3
sbb
movsb
inc
dec
lock
and
stos
mov
sbb
xor
or
sub
push
dec
mov
and
xor
pop
sub
fdivl
add
test
xchg
repz
pop
sub
mov
adc
sub
jnp
call
jne
in
xchg
jns
xor
cmpsb
in
sub
orl
fistpll
cmp
loop
in
imul
mov
cli
enter
xchg
in
daa
test
mov
push
icebp
sbb
adc
rol
mov
in
inc
cmp
mov
aad
rcrl
xchg
push
cmp
xchg
inc
adc
clc
jb
or
jb
mov
inc
icebp
and
rep
inc
inc
je
add
rcrl
push
dec
add
aaa
pop
jnp
jnp
iret
in
jecxz
and
jne
dec
pop
pop
pop
jmp
jbe
cld
xlat
mov
dec
test
cmp
shrb
cmp
jmp
cmc
sarl
jle
jg
dec
test
nop
gs
outsl
or
inc
sbb
pop
outsl
in
jge
pop
mov
sbb
in
xchg
leave
mov
jae
pop
push
cmp
cmc
js
daa
and
cmpsb
pop
and
aam
sbb
jno
mov
cs
xor
fldl
fsubs
cli
sti
sub
in
sbbb
jp
dec
test
jo
bound
mov
outsb
xor
fwait
mov
cmp
into
jne
cmp
fcompl
xor
push
popl
pop
jp
jb
push
cltd
sbb
loopne
aam
jnp
sarl
aam
xchg
xor
pop
push
cmp
mov
push
test
pop
push
imulb
jne
dec
mov
lock
push
inc
dec
inc
mov
add
rcrb
xlat
mov
sbb
mov
jg,pn
mov
cmc
mov
leave
mov
int
ret
pop
outsl
jne
pusha
psubd
mov
sbb
lahf
lea
mov
mov
imul
xchg
or
fadds
in
mov
jns
fidivrl
aam
lahf
mov
jne
fisttps
push
cmp
rolb
inc
push
or
fmuls
mov
pop
dec
lret
jmp
lahf
add
sahf
mov
aaa
sub
out
ss
and
rorb
sbb
loop
jg
test
nop
insb
cmp
mov
movsl
int3
insl
rorb
daa
sub
add
xor
sub
mov
xor
add
pop
jle
dec
push
mov
sbb
loopne
popf
and
aam
mov
xor
cmp
icebp
sbb
pop
push
cmpsb
stos
and
xchg
xor
adc
xlat
sbb
mov
lods
push
jecxz
aaa
mov
ja
fsubrs
andb
jmp
testb
lods
mov
loop
inc
aam
xchg
arpl
das
es
iret
lods
insl
inc
leave
dec
xchg
out
pop
movsb
lcall
ss
rcr
sbb
add
sub
push
pop
fisubs
pop
and
and
xchg
sbb
dec
mov
fistpll
mov
or
fisubs
mov
cmp
inc
dec
pop
pushf
insb
es
arpl
cmp
push
into
adc
pop
mov
ss
push
dec
ds
lods
fists
imulb
sub
mov
mov
inc
xchg
fmull
jno
call
pop
and
mov
xor
roll
fstpt
or
add
xchg
sub
arpl
mov
push
scas
xchg
sbb
and
inc
sarl
inc
adc
fidivrs
cs
incl
jp
push
inc
pop
faddl
cmp
push
jg
jnp
pop
jmp
push
and
sahf
sub
repz
movsl
xchg
push
add
push
add
add
cmp
clc
gs
dec
fistl
adc
push
or
mov
or
les
inc
call
adc
fwait
xchg
mov
mov
lods
pop
addb
fldl
jne
pop
push
or
push
js
sarb
mov
push
dec
cmp
jge
mov
movsl
inc
sbb
add
lret
mov
test
mov
arpl
push
sub
iret
jmp
jge
test
pop
mov
jae
dec
or
sub
fwait
loop
out
jno
jne
imul
dec
cmp
std
sbb
sahf
xchg
mov
notb
sti
xor
in
sub
loopne
daa
push
aam
add
je
or
lods
cld
cmp
sbb
mov
dec
cmpb
jmp
pop
loop
shll
pushf
repnz
fidivl
push
and
imul
push
inc
iret
call
pop
adc
sub
xor
push
cmp
add
jnp
bound
mov
gs
cmp
xor
outsl
mov
popa
fsubl
xchg
push
mov
int3
cwtl
push
mov
jno
enter
es
jae
jg
sahf
inc
pop
arpl
mov
dec
mov
xor
lea
das
jl,pn
add
xlat
adc
mov
lahf
inc
loopne
sbb
dec
sub
int3
gs
dec
stos
dec
idivl
fimuls
pop
jl
lcall
cmp
push
lea
mov
aad
das
and
pop
jmp
mov
dec
sbb
dec
inc
in
push
bound
cmp
add
dec
or
pop
stc
jl
push
adc
xchg
sub
sbb
lahf
mov
adc
add
in
and
xor
push
dec
pop
add
jbe
loop
in
xlat
and
jmp
imul
sub
rcrl
out
mov
std
sbb
nop
xor
in
pushf
xchg
es
jmp
cmp
fmul
scas
fisubl
xor
ficoml
mov
ret
gs
pushf
pop
fildl
test
ret
jl
nop
xchg
jb
sub
icebp
fwait
xor
ret
inc
jns
les
stos
or
shlb
or
mov
in
fdiv
push
mov
notl
leave
out
test
dec
and
or
push
mov
popf
xchg
push
jae
mov
mov
mov
sti
mov
pop
xchg
jns
dec
popf
mov
and
les
xchg
cmp
scas
mov
cmpsb
mov
xchg
lock
clc
aas
lret
push
inc
lods
mov
int3
movb
or
mov
mov
aad
insl
and
rcrb
push
push
hlt
cmc
cmpsl
add
bound
pushf
imul
icebp
scas
jb
dec
icebp
orb
or
cltd
push
mov
and
push
push
fstl
xchg
mov
xchg
inc
daa
jp
jp
popw
jnp
or
aam
ret
dec
push
cmp
mov
and
repnz
enter
pshufw
call
or
mov
shrl
and
aaa
push
out
call
xchg
data16
add
mov
cmp
sub
mov
xchg
dec
push
lret
xor
out
nop
xchg
lret
movl
push
mov
cmp
add
push
mov
movsl
addb
mov
push
adc
cmp
test
sbb
sbb
mov
pop
dec
mov
lret
jb
mov
loope
xchg
andb
into
xchg
int
out
jle
sbb
cmpsl
subb
xrelease
xor
insb
xlat
imul
cmp
ja
mov
add
jg
or
sarb
mov
bound
movsb
das
jmp
fbstp
xor
fsubs
pop
cmpsl
push
mov
test
scas
stos
cmp
push
out
pushf
jo
jno
jnp
das
add
jbe
mov
nop
jmp
pop
mov
xlat
jns
and
ss
sbb
pop
std
insl
sbb
fadd
pop
pop
js
icebp
repz
in
pop
lret
adc
inc
sub
filds
and
outsl
fsubrl
jecxz
shrl
cli
xchg
out
loopne
mov
pop
or
in
int
jecxz
or
into
jmp
mulb
outsl
mov
jnp
mov
lret
out
sti
hlt
mov
mov
out
das
xor
testb
loope
rol
mov
lahf
clc
cmp
cmp
rcrl
out
out
dec
cmp
and
mov
mov
fdecstp
cltd
jl
int3
std
sub
ljmp
jno
in
mov
cli
nop
movsb
ret
xor
push
push
jmp
in
mov
xchg
mov
push
pop
fs
cmp
pop
pop
sbb
xchg
sub
sti
fcoml
jns
out
jp
jmp
mov
mov
mov
int
insl
inc
pop
or
leave
dec
rcrl
push
push
neg
jnp
mov
mov
dec
mov
scas
pop
repnz
lahf
xor
mov
cmc
cmp
int3
xorl
icebp
mov
mov
and
push
mov
add
mov
and
jo
fdivrl
pop
add
jl
push
lret
fcoms
mov
add
popl
mov
sti
imul
mov
cmp
jo
int3
aad
aas
xchg
mov
xchg
inc
cld
in
fs
jae
pop
push
xor
lcall
dec
mov
mov
xchg
mov
jbe
fdivr
inc
push
sahf
jg
ss
mov
icebp
mov
mov
mov
push
arpl
sbb
cmpsl
sub
mov
out
or
popa
test
cmpsl
sbb
je
fidivrl
and
aas
adc
scas
imul
xor
adc
scas
pop
leave
mov
xor
in
sub
mov
les
mov
insl
push
mov
adc
push
mov
syscall
xchg
mov
mov
insl
mov
loop
xchg
scas
lock
mov
in
push
aam
or
sbbl
insb
into
dec
mov
sbb
sub
cli
xchg
mov
mov
jge
push
sahf
stos
rcrl
adc
inc
cmpsl
in
dec
cld
adc
xor
push
movsl
imul
in
pop
xorl
int3
rcll
loope
jle
inc
cmpsl
gs
arpl
jns
jg
jl
cwtl
mov
push
decb
cmpsl
xchg
das
rolb
into
icebp
jg
dec
mov
mov
sar
mov
test
or
push
pop
inc
bound
fisubl
pop
nop
cmp
sub
sbb
enter
rclb
inc
outsb
pop
or
or
xor
sarl
lea
mov
add
jnp
fcmovne
mov
insl
insb
iret
aas
gs
fstpl
pop
out
rcll
mov
inc
mov
push
icebp
sbb
aas
push
in
insb
ret
sti
xchg
ja
mov
cmpsb
inc
xchg
push
cmp
mov
rorb
fwait
xchg
ret
imul
leave
movsl
jns
lahf
rcrl
cmpsb
push
push
or
daa
mov
mov
jmp
pop
cmp
push
popa
xor
xor
test
in
push
stos
and
std
cmp
je
inc
fs
leave
test
in
adc
movsl
dec
mov
pop
mov
push
rcl
mov
mov
adc
sbb
popf
cli
cmp
mov
fdivr
hlt
mov
adc
sbb
jp
inc
pop
pop
stos
subb
lock
lret
xor
add
fwait
fs
mov
push
jle
stos
inc
push
sbb
testb
xor
cmp
push
lds
jg
pop
cmp
rol
mov
leave
pop
cmp
cld
in
pushf
or
xchg
xor
cmpsl
int
mov
adc
ja
xchg
movsb
fdiv
push
outsb
inc
adc
adc
xor
cmpsb
sub
in
pop
out
xorl
sbb
or
pop
fadd
pop
adc
cmp
add
jbe
pop
push
add
xchg
xchg
jbe
dec
or
in
sahf
inc
frstpm(287
sub
xor
mov
sub
test
pusha
dec
scas
dec
adc
shll
xchg
xchg
fistpl
pop
sar
inc
enter
jo
inc
xorl
mov
pop
popf
aam
xchg
cmpsl
loopne
mov
push
mov
aam
int3
sar
loopne
mov
xchg
push
pusha
mov
xchg
out
sti
cmp
sub
gs
lret
aaa
stos
mov
lret
mov
test
adc
adc
jnp
and
xor
mov
mov
mov
dec
cwtl
fcoml
fidivrl
jno
dec
add
cmp
push
aad
call
dec
lock
mov
in
adc
cmp
aas
sbb
les
cs
lcall
xchg
dec
and
inc
jbe
pop
mov
jne
stos
jge
or
jo
dec
xlat
nop
dec
clc
add
xor
adc
scas
jae
aaa
lods
pop
push
aas
mov
add
lret
push
fimull
xchg
fldt
jnp
negb
mov
pop
mov
push
sbb
negl
or
sub
sti
xlat
jp
push
mov
cltd
push
sub
lods
dec
sub
cmp
imul
mull
push
and
and
scas
test
cmovae
call
lret
fisttps
in
inc
xchg
fidivs
hlt
enter
jns
test
fstl
xor
lret
les
inc
xor
inc
mov
stos
repz
pop
xchg
cmpl
inc
hlt
pop
cltd
dec
and
adc
push
loope
pushf
add
jp
cmpsl
loop
fiaddl
loop
jnp
sbb
and
push
aam
and
mov
or
call
ljmp
inc
in
movb
cmp
inc
push
cmpsb
xor
adc
jecxz
pop
test
test
mov
push
lret
xor
adc
ret
aaa
adc
shlb
clc
test
jno
sbb
pop
fdivrs
sbb
jg
insl
pop
cld
ljmp
ffreep
in
icebp
adc
sbb
ljmp
loopne
loope
xor
pop
sub
arpl
mov
call
jecxz
inc
iret
enter
pop
dec
lahf
add
mov
rorl
shlb
call
jno
aas
sub
outsb
aad
negb
sbb
sbb
push
cmp
repz
cmp
jnp
lods
and
outsb
sub
cmp
sar
mov
lret
jns
aam
xchg
cld
push
mov
jno
cmc
orb
inc
adc
lea
lds
mov
xchg
mov
rolb
add
inc
dec
xor
sub
dec
pop
daa
xchg
or
leave
mov
mov
outsl
add
or
or
push
dec
out
jecxz
into
push
pusha
jnp
pop
pop
call
cmpl
iret
xchg
inc
jbe
mov
adc
mov
rorb
repnz
xchg
lldt
push
or
sub
sbb
fistps
jno
pop
sub
xchg
mov
fwait
int
inc
xchg
adc
xlat
mov
push
cmpsb
push
add
aas
xlat
push
in
and
div
fmull
xchg
icebp
inc
mov
jbe
loop
cwtl
xor
addl
ljmp
sbb
ja
sub
ljmp
ds
and
cmp
shl
inc
push
stos
addr16
bound
notl
stos
repz
sub
sub
sbb
sbb
stos
cmp
add
jns
adc
clc
jge
lods
cs
es
pop
ljmp
and
lods
jmp
mov
pop
sbb
arpl
add
insl
sub
push
sti
add
dec
ret
push
adc
push
cwtl
sbb
jmp
lods
cmp
shll
out
jle
mov
rclb
push
nop
testl
dec
je
mov
push
sarb
xchg
test
out
lret
cli
and
add
repnz
pop
dec
rolb
dec
sbb
jge
adc
jmp
pushf
or
or
push
dec
push
nop
or
jle
cs
sbb
inc
repz
roll
loopne
xor
cwtl
fcoml
add
push
adc
pop
outsb
pop
adc
xchg
mov
fwait
push
es
loopne
aam
into
lods
push
test
ret
or
add
test
bound
jge
iret
ja
or
mov
stos
shll
inc
cmp
pop
enter
dec
sub
imul
cmp
mov
pusha
hlt
adc
cwtl
imul
pop
fisubl
rorb
add
in
push
pop
call
jbe
or
push
xor
fwait
inc
xor
dec
sbb
stos
xor
test
hlt
imul
outsb
mov
or
xchg
clc
push
add
arpl
cli
and
addl
shld
cmp
out
jp
testb
mov
adc
xor
add
pop
mov
movsl
scas
or
rorl
aad
dec
mov
jnp
adc
imul
rcrb
jg
lcall
lock
xor
jmp
sub
lcall
adc
add
push
not
push
cwtl
xchg
sahf
call
insb
xchg
xchg
pop
mov
sti
adc
imul
mov
out
xor
cmp
mov
sub
push
and
xchg
sbb
int
ds
xchg
ret
or
notl
cmp
cwtl
out
clc
push
popa
jns
cmc
cli
sbb
insb
pop
les
push
xchg
sbb
sub
mov
pusha
push
or
imull
lea
cmp
push
inc
or
sub
push
inc
pop
jge
mov
or
fimuls
popa
or
or
mov
sti
mov
push
adc
add
add
xchg
imul
and
popf
stos
jle
jle
mov
insl
int3
lahf
shlb
sub
dec
ret
mov
dec
and
mov
data16
fnstenv
insl
jno
push
mov
cmpsb
or
int
mov
mov
jnp
xchg
in
pop
shr
out
aam
negl
test
push
jmp
leave
lcall
frstor
and
dec
inc
pop
add
ret
in
push
mov
cmp
cmp
dec
cli
inc
add
add
insl
fisubrs
bound
mov
shrd
lahf
inc
lret
scas
dec
sbb
xor
pop
inc
icebp
or
stc
sbb
mov
iret
and
mov
lea
push
orl
pop
sbb
in
mov
and
sbb
out
pop
push
add
sarl
aas
ljmp
mov
sub
decb
mov
add
jle
adc
inc
sti
xorl
cmpsl
shll
cs
cmp
vprotb
cs
push
pop
xor
adc
add
push
test
jne
cmp
lret
daa
xor
fcomps
aam
insl
fldenv
push
push
mov
andb
jbe
cmc
cmpsl
mov
inc
or
imul
jo
mov
test
push
popa
int3
mov
fdivrl
xchg
sub
iret
test
fmull
je
xchg
jge
rcll
lock
sbb
push
mov
mov
cmp
xor
xor
xor
inc
cwtl
dec
mov
rolb
or
mov
cmp
sub
repnz
and
jmp
adc
jne
mov
enter
clc
es
dec
xchg
push
xchg
jmp
push
xchg
leave
pop
sub
mov
xorl
lock
push
daa
mov
pop
inc
lcall
daa
fcompl
jmp
jbe
sti
dec
into
leave
dec
push
adc
add
outsb
jp
mov
ret
cli
out
jmp
mov
adc
dec
sbb
andb
out
dec
aad
jno
xchg
repz
in
and
ret
scas
xor
cmc
ret
insl
cmp
sub
and
cmp
cmpl
mov
mov
cmc
cmc
into
jb
sub
test
fwait
mov
sbb
jo
cwtl
xor
xchg
fwait
mov
push
leave
or
inc
adc
iret
jnp
jg
orps
add
cmc
push
push
ret
xchg
dec
pop
and
sbb
jns
negl
mov
sub
daa
lods
fs
fistl
add
out
jbe
sbb
scas
imul
and
insb
stos
fidivrs
cltd
push
jns
and
das
lcall
mov
flds
icebp
stos
mov
xchg
scas
cmpsl
jecxz
int3
fwait
lret
xor
lea
or
fs
scas
repz
insl
mov
and
dec
fwait
out
arpl
and
xchg
dec
rol
mov
jne
pusha
insl
negb
mov
lds
or
outsl
test
xchg
mov
push
inc
pusha
outsl
pop
xor
jp
pop
sub
nop
fcmovnb
xorb
call
sti
loop
in
call
jp
ret
xlat
mov
sarb
mov
in
int
adc
mov
cmp
push
xor
push
sti
sbb
mov
inc
pop
pop
mov
xor
fcoml
out
shlb
negb
movsb
cld
push
test
adc
add
mov
mov
dec
pop
mov
add
repz
mov
pop
sbb
aaa
push
add
clc
add
js
stos
mov
pop
dec
pop
inc
shrb
jb
mov
sub
test
pop
dec
add
push
incb
out
jge
xchg
push
push
call
inc
mov
inc
les
cmp
mov
dec
adc
or
jb
fcmovnu
loop
pusha
std
or
xchg
xor
pop
sarb
loope
outsl
and
pop
mov
jo
sbb
add
jns
mov
orl
add
mov
arpl
sub
push
das
lods
in
bound
pop
in
pop
cmp
dec
stc
xor
stos
negl
mov
jnp
ds
sbbl
inc
cmpsb
fists
mov
movsb
je
std
fdivrp
ret
pop
mov
mov
xchg
stc
inc
dec
sahf
jmp
cmp
jle
out
and
daa
lea
inc
fisubrl
cwtl
imul
or
test
dec
mov
pusha
sbb
outsl
jns
stc
and
cmpsb
pop
adc
inc
jnp
bound
push
sbb
xchg
mov
jecxz
repz
pop
sbb
cmp
test
lods
mov
push
gs
movsb
loopne
bound
std
xor
xor
rorl
xor
and
frstor
push
ret
aas
jnp
mov
int
lret
mov
jg
push
insb
repz
in
jne
lock
push
jecxz
dec
in
jl
lods
sarl
fcmove
jne
xor
and
dec
cmpsb
iret
push
cmp
cmpl
sbb
push
push
mov
and
lock
jno
cmp
push
imul
cmp
xchg
bound
dec
jne
stc
jge
cmp
dec
call
mov
add
jne
bound
out
clc
mov
shl
xchg
lods
and
cmpl
cmp
jne
mov
adc
jo
push
add
imul
outsb
xor
pop
sti
gs
adc
pop
or
mov
cmp
push
pop
lea
jb
sbb
xchg
std
ja
pop
cmp
adc
mov
mov
adc
mov
lcall
nop
and
sahf
ja
xor
add
in
jecxz
or
mov
and
adc
test
xor
inc
fisubrs
push
mov
repz
adc
sub
ret
push
loop
loop
loop
popl
loope
mov
jge
dec
nop
lock
aaa
mov
mov
mov
lock
test
bound
inc
stos
push
addb
pop
jl
mov
imul
xchg
sub
or
pop
mov
out
mov
push
icebp
pop
std
pop
pop
aam
addr16
pop
in
cli
movsb
rcrb
ficoms
mov
jb
push
test
movsb
in
or
repnz
outsl
bound
xchg
sub
int3
jae
or
inc
scas
dec
cmp
or
mov
fadd
mov
pusha
popf
jmp
jnp
cltd
addb
pop
scas
lcall
sahf
cmp
subl
test
fildl
out
mov
data16
cltd
mov
cli
sub
addl
pushf
inc
pop
pop
ss
lock
jg
sbb
mov
mov
out
mov
sbb
cmp
xchg
sbb
mov
daa
scas
outsl
test
insb
cmpsl
in
mov
mov
sti
mov
jns
mov
xchg
or
adc
or
mov
aaa
adc
imul
es
mov
in
cmp
data16
out
aas
or
adc
cli
mov
divl
or
and
jmpw
ret
pop
xchg
lock
xchg
call
shrb
repz
fisttps
inc
xchg
and
pop
jge
add
das
jl
mov
mov
stos
and
jno
in
push
lods
or
mov
pop
mov
leave
xchg
shlb
xorb
inc
jne
rcrl
push
scas
shlb
xchg
xor
clc
loope
dec
sarb
sub
mov
inc
popa
lcall
cwtl
push
aaa
inc
popa
sahf
cli
or
mov
into
dec
adc
int3
push
scas
notb
test
jns
das
sub
mov
pusha
and
dec
dec
xor
mov
leave
shll
and
hlt
in
xchg
out
popf
xlat
pusha
cmp
jl
lcall
rorb
movb
pop
mov
fbld
or
std
adc
ljmpw
test
and
xchg
jge
pop
jg
jecxz
or
popf
sbb
in
testl
mov
sbb
jne
in
mov
mov
rcll
dec
sub
into
mov
jne
mov
pop
ja
orb
lret
and
iret
jp
and
adc
cmpsl
sbb
pop
dec
shr
test
xor
pushf
inc
xchg
push
ds
pop
xchg
pop
sub
cmp
mov
mov
inc
mov
addb
outsb
fadds
or
sbb
aas
xchg
imul
or
rcrb
inc
mov
mov
cmpsb
mov
xor
xor
cmp
add
or
sub
cmp
or
int3
stc
pusha
orb
dec
jecxz
insl
stc
adc
mov
ret
sarb
lcall
lods
jne
or
push
insb
shlb
sub
jge
popa
sub
ficoml
push
cmp
sbb
push
out
xchg
xchg
push
sub
push
or
pop
repnz
test
pushf
and
hlt
hlt
push
sbb
scas
lcall
jb
fmuls
addr16
push
or
xchg
xor
out
mov
xchg
lods
orl
sbb
gs
add
stos
mov
jge
mov
in
sbb
test
push
loop
sar
sub
ficompl
add
cld
cmp
and
jb
mov
xchg
inc
sbb
xor
xchg
insl
pop
leave
test
scas
xchg
mov
mov
add
ds
pop
dec
push
xor
out
dec
popa
roll
roll
push
sub
subl
mov
lcall
sub
loop
fdivrl
rorl
es
arpl
aaa
aaa
test
fisubl
sbb
fbld
mov
stos
xchg
sbb
mov
dec
mov
and
sub
xor
insb
pop
push
push
sti
fcoml
test
inc
ret
repz
xchg
xor
ljmp
nop
mov
jnp
cwtl
jl
addl
xor
rcl
mov
cmpsl
stc
xchg
xchg
dec
add
mov
imul
loop
jmp
sub
or
dec
ljmp
add
cmp
push
pop
subb
into
leave
mull
pop
sbb
lock
and
outsl
sahf
out
sbb
add
loop
jnp
loope
mov
pusha
scas
test
enter
xchg
ficoms
into
inc
cmpsb
cld
mov
pop
mov
dec
sbb
test
cmp
and
mov
pop
push
xchg
lods
aad
or
sti
call
ror
sub
dec
mov
push
lods
push
xchg
and
push
xchg
mov
xchg
xchg
ror
xchg
daa
xor
push
int
jecxz
outsb
pop
pop
or
insb
or
in
daa
icebp
pusha
xchg
pop
jge
pop
pop
dec
mov
mov
fidivrl
inc
mov
cwtl
add
daa
mov
adc
jle
add
xor
js
jmp
pop
adc
adc
ret
inc
stos
insb
out
mov
out
dec
scas
dec
jmp
das
daa
mov
mov
inc
fs
flds
sarb
push
mov
push
daa
lret
fldcw
lods
mov
hlt
test
mov
jns
fimull
push
shlb
xor
adc
punpckhbw
mov
ja
jbe
imul
mov
mov
mov
cmpsb
lret
mov
xchg
inc
and
dec
push
pop
push
insb
cld
mov
shlb
addl
cmp
das
sub
icebp
push
imul
inc
push
mov
mov
inc
dec
push
outsl
in
inc
pop
pop
xlat
xor
mov
dec
pop
shrb
or
push
mov
mov
pop
xchg
lds
or
in
cmc
cmc
cltd
xor
push
xchg
je
test
stos
pop
xor
lret
cmp
or
popa
imul
outsl
aas
aad
popf
sub
cmp
stos
xor
outsl
in
shlb
lock
sbb
push
lcall
push
ds
xchg
je
or
arpl
xchg
das
or
negl
cltd
ja
push
xchg
and
cld
int
pop
mov
xchg
inc
mov
push
mov
in
rolb
sub
push
push
into
aas
bound
adc
xor
or
cmp
dec
cmp
mov
sbb
mov
fisubl
pause
fs
shl
xor
jb
testl
test
ret
dec
xorb
or
les
inc
je
cmp
sbb
sbb
scas
ror
sub
repz
mov
and
cmp
imul
nop
enter
fmull
dec
mov
pop
pop
jno
lds
stos
inc
dec
jecxz
mov
mov
out
notb
pop
enter
ret
loop
add
dec
call
dec
dec
fisttpl
fnop
mov
mov
ljmp
ss
inc
adc
adc
sbb
cmp
inc
sub
push
sbb
ror
cmpb
outsb
cld
stos
sbb
adc
jp
dec
jb
sbb
jnp
hlt
shll
and
mov
pop
lods
inc
inc
cmpl
mov
movsb
jp
dec
fsubrl
xchg
outsb
call
shll
xchg
dec
mov
stos
scas
mov
sub
sbb
xchg
push
fst
test
push
lds
test
into
pop
mov
insl
jb
sub
outsb
daa
scas
dec
popf
addb
fs
cmpsb
pusha
xor
bound
pmulhuw
and
roll
cmp
sub
pop
subb
bound
sarl
mov
arpl
inc
sbb
dec
mov
sub
sub
mov
int3
je
js
pop
imul
test
fcomps
test
mov
cmp
add
int
inc
adc
xor
hlt
cmp
xchg
lret
push
pop
cmpb
inc
insl
cmp
rorb
lea
or
cmp
adc
out
push
push
in
pop
stos
xorb
std
dec
sahf
jae
ficoml
jge
pushf
jns
ljmp
aas
push
sub
cmp
mov
or
xchg
pusha
adc
pop
cmpl
addr16
nop
mov
lcall
lahf
add
inc
xor
sarb
push
pop
scas
pop
lret
xor
mov
jbe
push
es
xor
sbb
sub
and
in
into
add
xchg
fldl
call
les
insl
mov
push
pop
fdivs
jb
sbb
insb
cs
pop
inc
add
jbe
push
mov
pop
inc
mov
sahf
or
lcall
xchg
or
lcall
push
jp
loopne
ret
std
out
das
push
ds
inc
mov
fcmovb
pop
jge
scas
cmp
xor
mov
mov
dec
jg
lahf
inc
xor
movsb
fmull
or
add
in
xor
sbb
clc
sbb
movsb
mov
xchg
jae
xor
pushf
jbe
pop
fmull
xchg
repz
fidivrs
inc
or
ret
mov
arpl
js
ja
mov
test
ffreep
and
mov
in
aad
mov
test
jnp
and
or
xorb
lcall
sub
imul
and
push
enter
mov
icebp
push
sub
or
adc
push
inc
and
sub
hlt
aaa
sub
call
hlt
mov
test
in
pop
aad
outsl
or
aam
fwait
hlt
imul
lret
jo
cltd
fcom
and
in
addl
mov
push
jnp
push
pushf
and
aaa
aas
bnd
shlb
imul
cmp
in
outsb
inc
push
jne
icebp
dec
stos
hlt
ljmp
dec
pop
mov
mov
mov
test
rclb
psllw
xor
adc
dec
sbb
mov
jae
dec
lods
pushl
pop
in
pop
jne
push
mov
dec
cmpsl
shrl
and
xor
mov
cmp
add
push
cs
repz
je
sub
mov
sti
dec
adc
push
ja
or
inc
scas
adc
cld
xchg
loopne
ds
xor
cmp
test
push
jmp
push
adc
pushf
int
dec
lret
add
or
inc
xor
in
ffreep
ret
jl
adc
jmp
in
addb
hlt
or
aas
or
add
push
mov
shrb
xchg
inc
rorb
ss
je
dec
jnp
pop
out
and
push
loop
mov
mov
pusha
ljmp
ret
xchg
rclb
daa
aam
rclb
in
push
addr16
es
sahf
icebp
dec
and
aad
sub
adc
mov
orb
lret
lods
xor
lods
insl
cmp
lret
test
fisubs
fdivl
cli
pushf
inc
dec
fmul
adc
shll
rcrb
pushf
cmpsl
ret
add
mov
cmp
jns
cltd
lea
mov
cli
subb
xor
push
repnz
push
mov
lret
scas
int
mov
mov
sarb
gs
daa
inc
sub
push
fcomp
enter
mov
fwait
imull
dec
testb
rolb
mov
xchg
fmull
xchg
xchg
xor
push
lret
sbb
mov
pop
ficoml
and
adc
shll
int
mov
mov
or
adc
int
pop
pusha
xchg
rclb
outsb
nop
inc
std
and
adc
lock
lds
push
and
jno
xor
movsl
popa
stos
cld
je
and
sbb
jle
sbb
je
jle
inc
aaa
cld
mov
xlat
jbe
adc
adc
hlt
mov
insl
jbe
push
sub
insb
repz
orl
adc
aad
mov
es
cwtl
int
or
and
in
stc
sarl
push
pop
push
cmp
insl
int
fs
or
jne
mov
mov
test
orb
out
mov
inc
idivb
cmp
jb
in
dec
dec
sbb
or
mov
icebp
inc
mov
fiadds
xor
push
cmpsl
fmuls
int3
jbe
insl
sub
jns
add
and
and
movsb
stos
sub
push
daa
rolb
jmp
ret
out
std
push
in
or
xchg
daa
dec
add
cmc
adc
add
std
mov
aad
xchg
in
cmp
xchg
dec
cwtl
dec
push
mov
xor
cs
inc
fistpll
in
lret
scas
and
adc
jae
pop
les
mov
inc
xchg
sbb
jle
pushf
ss
jge
imul
add
fidivl
adc
aam
push
icebp
xor
sub
fs
dec
popf
mulb
inc
cmp
or
fdivr
dec
rcrb
xor
adc
icebp
cld
lods
jl
cld
jae
pushf
dec
in
data16
and
jae
pop
fildll
mov
adcl
xchg
movsb
xor
mov
stos
mov
mov
inc
outsb
xchg
aam
jns
add
fmull
dec
adc
imul
add
jo
test
pop
cmc
lea
cmc
rcrl
enter
das
pop
cmp
jno
out
pmaddwd
stc
push
pop
add
dec
fucomi
rorl
shr
js
iret
arpl
stc
xchg
test
fldl2t
and
cmpsb
addb
sub
out
mov
push
push
sti
mov
jle
int3
xor
sar
repz
repnz
adc
lcall
sub
stos
hlt
shll
add
test
mov
in
in
and
test
mov
shlb
icebp
mov
xchg
and
xor
fld
in
mov
mov
andb
pop
xchg
int3
mov
cwtl
in
sbb
or
clc
jne
divl
xchg
push
out
jae
pop
jmp
pop
or
mov
cmp
loope
mov
xor
addr16
pop
push
adc
aaa
rcll
int3
ss
jae
push
sbb
xchg
aad
jae
jle
push
add
out
xchg
mov
lahf
xchg
adc
in
bound
xchg
cmpsl
inc
imul
and
dec
pop
mov
stos
push
xchg
test
dec
mov
leave
pop
push
mov
stos
pop
repnz
xor
mov
test
dec
pusha
jmp
cmpsl
inc
sub
add
jp
in
cwtl
xor
or
fnstenv
fnstcw
xor
fdivl
daa
int3
cmp
pusha
sbb
int
mov
out
lods
lret
and
sbb
jmp
out
jmp
in
and
dec
call
js
add
mov
les
jg
cmp
push
insl
ds
cltd
push
and
push
aaa
cmpsl
fildl
sub
push
inc
mov
pop
cltd
cltd
add
and
xchg
movsb
out
pop
jb
int3
xor
xchg
mov
insl
aam
mov
inc
push
test
aaa
jbe
mov
outsl
xchg
mov
data16
fdivp
dec
xor
out
adc
dec
sbb
sbb
push
pop
inc
and
stc
or
add
ljmp
cld
popf
fists
lret
repnz
clc
call
fmuls
and
call
adc
movb
mov
cmc
push
cmp
mov
mov
or
mov
xchg
stos
call
rolb
hlt
movsb
pop
ret
push
std
sbb
add
cmc
fidivrl
add
mov
cmpsl
mov
mov
les
shlb
sbb
push
add
jecxz
insl
in
stos
popf
jmp
or
pop
andl
push
adc
add
in
cs
add
sti
xchg
xor
jp
sbb
cmpsb
adc
cs
sahf
cmc
jnp
or
sbb
adc
ficoms
xor
lret
cli
shl
pop
mov
xchg
mov
fists
dec
rcrb
cmp
jl
dec
lds
xchg
sbb
stc
ror
mov
shrl
push
pop
cmp
mov
inc
cmp
inc
ja
push
cmp
fcmovne
test
inc
into
mov
xchg
insb
insl
sbb
push
das
test
pusha
sub
mov
xor
shlb
int
sbb
addr16
jmp
std
lods
or
pop
inc
ja
adc
sahf
cmpsl
ret
sub
out
fucom
sub
mov
mov
ja
mov
pop
cmp
adc
push
push
sbbl
xor
sub
dec
fwait
insb
insb
jae
push
sub
dec
stos
test
mov
sbb
lcall
ret
mov
sbb
dec
jo
dec
mov
cmp
popf
test
sahf
movsb
sbb
icebp
bound
pop
xchg
lea
fidivrs
xor
jl
jg
mov
mov
cmpsl
cmpsl
movsl
add
rorb
pop
daa
decl
subb
loopne
ret
ret
push
pop
sbb
ret
cmp
rcrb
mov
adc
cmp
mov
iret
ljmp
xor
push
cli
and
iret
test
insl
dec
shlb
fs
ret
repnz
jo
mov
fcomi
mov
imul
inc
test
and
sbb
stos
stc
mov
movd
mov
rcll
nop
ljmp
fimuls
movsb
xchg
stos
and
xor
cmp
jo
dec
loopne
lcall
mov
mov
pop
ljmp
xchg
add
ror
subl
sub
push
scas
mov
in
fcomip
push
adc
xor
xor
and
fsubrs
adc
sbb
adc
mov
cmp
mov
fisttpl
inc
mov
pop
mov
pop
stos
mov
pop
adc
cmp
mov
fmuls
push
jno
mov
cmp
ror
xor
inc
xor
mov
iret
fbstp
push
pop
cmp
lods
fnstenv
sbb
out
adc
into
or
jp
add
das
push
dec
adc
push
pop
mov
orl
aaa
or
mov
add
mov
mov
mov
repnz
mov
int3
insl
add
mov
xor
sbb
testb
jg
xor
hlt
fsubl
xchg
and
ficoms
mov
jnp
mov
cwtl
xchg
shrl
cmpsl
cmp
sbb
stc
popa
mov
jl
sub
cmp
sub
in
cli
cmpsl
les
push
rclb
push
in
mov
pop
jbe
addb
or
sub
xchg
jnp
pop
jo
pop
ss
pop
arpl
pop
data16
lods
dec
dec
cmp
sbb
nop
in
cmp
jne
jle
xor
mov
xchg
inc
mov
dec
cli
dec
insb
nop
adc
rcrb
mov
notb
mov
data16
dec
cmp
lock
mov
jl
in
or
lods
pop
inc
push
insl
pop
cmp
inc
popa
popa
jbe
push
cmc
hlt
shlb
pop
push
xor
aaa
pusha
in
inc
jns
cmpsb
aaa
int
lods
test
or
pushf
and
shl
sbb
adc
cli
and
shrd
pop
fsubr
mov
les
mov
xor
add
inc
loop
data16
shl
xor
cmp
adc
push
xlat
in
sbb
iret
mov
stos
push
cmp
cltd
adc
jecxz
int
pop
sub
adc
mov
mov
ret
xchg
cld
mov
arpl
mov
add
inc
scas
push
stos
cmp
mov
jmp
push
push
mov
xorb
lcall
js
and
rorl
test
shrl
fs
sahf
xchg
mov
mov
inc
cmpsl
push
out
outsb
adc
jl
mov
faddl
jecxz
sti
data16
push
pushf
adc
mov
shl
aas
pop
pusha
jnp
je
cmp
clc
cmpsl
xor
jo
mov
inc
xor
dec
push
mov
outsb
jne
xor
ss
adc
popa
dec
push
out
outsb
inc
or
hlt
xor
rorb
idiv
ret
mov
and
mov
mov
loop
dec
cwtl
and
jecxz
pop
icebp
pop
inc
icebp
cmp
cmp
pop
dec
mov
into
xor
or
or
std
xor
sub
scas
je
int
dec
adc
add
lds
dec
sub
mov
push
mov
cmc
xor
test
lcall
cld
push
push
push
stc
mov
sbb
adc
pop
cmp
and
mov
push
bound
add
mov
loopne
call
xchg
mov
cmp
mov
cmc
sub
sbb
sbb
shlb
mov
bound
pushf
loop
add
lcall
and
movsb
mov
add
pop
inc
scas
in
ja
xchg
and
sbb
call
std
les
sub
mov
add
scas
call
dec
addr16
adc
push
test
push
push
inc
and
inc
cli
lsl
pop
sar
lret
add
js
test
loop
roll
loopne,pt
inc
cltd
mov
pop
adc
or
push
add
mov
shlb
fnsave
xlat
and
dec
cmp
test
or
mov
bound
test
inc
cmp
jb
lahf
jmp
push
cmpsb
push
aaa
into
inc
pushl
jns
pusha
mov
rcll
pop
and
fcomp
mov
mov
cmp
xor
repz
mov
push
xor
xchg
out
icebp
les
push
iret
hlt
in
movsl
cmp
pmaddwd
lods
lods
jo
rorb
cli
fxch
adc
dec
in
inc
leave
repnz
fldcw
out
addr16
das
add
inc
insl
sub
and
cwtl
test
ljmp
xorl
xor
xor
jbe
or
dec
inc
std
or
lahf
mov
test
jae
arpl
dec
lahf
fbld
lods
cmp
movsb
cmp
mov
sbb
ja
loop
sbb
inc
mov
fxch
bound
and
dec
dec
pop
jae
xchg
andb
cmp
stc
mov
add
in
mov
cwtl
lahf
sub
dec
outsl
xchg
and
xchg
out
inc
rorl
and
cmp
and
add
jl
mov
in
movsb
xor
push
mov
lret
cmp
aad
arpl
or
mov
or
sbb
jmp
pusha
lret
stos
cmp
icebp
push
pop
out
add
jae
xchg
or
mov
xchg
or
cmp
sub
inc
sbbb
ficomps
movsb
dec
or
push
pop
inc
xchg
js
push
and
xchg
sub
adc
loop
mov
pushf
mov
xchg
or
ret
out
stc
dec
adc
sub
repnz
sub
out
sub
push
sub
in
pop
es
in
dec
sub
xlat
inc
fimuls
jmp
dec
movsl
ffree
mov
int
sti
sub
adc
scas
leave
sahf
lret
bnd
outsl
xchg
int
push
sbb
xchg
pushf
lock
cmp
push
test
jle
pop
mov
sub
cld
gs
or
xor
jge
xchg
add
push
shlb
fwait
stos
or
push
sbb
xchg
mov
adc
out
mov
bound
ffreep
lds
int3
hlt
dec
or
fwait
inc
nop
jns
push
xchg
or
jbe
mov
out
mov
test
popa
test
cmp
cmpsb
loopne
pop
mov
dec
pop
in
and
lea
imul
dec
mov
repnz
jnp
call
out
jb
mov
jle
aad
jecxz
sar
bnd
push
fxtract
adc
out
mov
sbb
rcl
mov
pop
jge
xor
jne
mov
dec
xchg
xchg
out
and
inc
ja
cmp
jmp
pop
push
sbb
adc
ja
push
cltd
inc
or
inc
adc
pop
jge
pop
jb
ja
add
ja
sbb
cmpl
inc
stos
xchg
test
nop
dec
pop
mov
sub
xor
sarb
and
fcoms
jbe
repz
xchg
cli
shl
mov
and
mov
cmpsl
pop
mov
outsb
and
aas
mov
lea
adc
adc
les
xor
jle
inc
push
aad
add
jno
mov
push
jns
fs
mov
cmpsl
dec
inc
mov
add
xchg
mov
fistpl
push
jb
movsb
mov
loop
ja
inc
js
stos
and
push
jmp
ficoml
xor
lods
xor
ss
aas
jp
sbb
hlt
les
loop
inc
shrb
call
and
inc
or
stc
fisubl
push
mov
loopne
jg
fmuls
dec
adc
xor
cs
pop
mov
in
aaa
cmp
ljmp
fwait
in
pop
xchg
insl
jnp
cltd
dec
jmp
clc
rcl
mov
push
jmp
and
add
or
loopne
jle
orl
insb
xor
into
stos
sahf
xchg
dec
testl
dec
in
ljmp
jno
imul
adc
fiadds
imul
mov
out
data16
enter
into
movsb
lea
pop
mov
lcall
xchg
push
and
mov
test
add
movsl
xchg
cs
hlt
xchg
pop
lock
pusha
addl
mov
int
push
test
aaa
test
mov
cmpsb
mov
cmc
mov
jo
push
repnz
in
popa
outsl
sub
dec
enter
into
mov
lret
insl
adc
stos
imul
movsb
dec
sbb
ja
pop
shl
cmp
lods
leave
pop
pop
pop
xchg
cmc
rorl
lods
mov
loope
sub
call
enter
cs
ja
pushf
scas
cmp
daa
rcrl
outsb
xchg
sbb
pop
mov
sub
gs
jecxz
scas
push
fistpl
cmp
imul
daa
das
rorb
pop
xchg
sbb
fsts
or
add
test
jnp
sbb
jns
scas
mov
hlt
xor
pop
dec
push
ljmp
adc
push
fildll
mov
std
idivb
leave
adc
jns
push
pusha
jb
ja
xor
xchg
pop
jb
nop
and
jl
sbb
xor
aas
xorb
adc
negb
loop
ljmp
push
fnstsw
insb
mov
cmp
in
push
pop
repz
adc
pop
mov
xor
loopne
scas
lret
and
mov
adc
mov
or
repz
jb
fs
jnp
and
or
jle
or
sbb
icebp
in
add
mov
in
and
ja
ja
pop
cmpsl
fsts
add
lock
dec
mov
cwtl
mov
dec
ret
movsb
movsl
daa
popl
cmp
cmp
cmp
stos
dec
mov
ljmp
out
add
rcrl
dec
push
repz
cmp
push
ss
icebp
xor
adc
inc
inc
imul
adc
mov
inc
clc
dec
int
sbb
movsb
jge
or
movsl
stos
push
js
push
mov
pop
add
fdivl
cwtl
in
nop
xlat
call
sbb
in
adc
adc
lret
fbstp
push
mov
adc
add
mov
je
xchg
pop
cmc
subb
mov
adc
cmpsb
cmp
lcall
lea
mov
or
hlt
int
sbb
mov
iret
aaa
pushl
enter
lcall
bound
std
arpl
movsl
mov
aaa
pushf
cmp
ret
dec
mov
dec
out
rolb
fimuls
lods
xor
mov
insb
and
cmp
clc
pop
stos
mov
pop
inc
inc
xor
jge
lea
in
and
jle
xchg
ss
dec
hlt
in
mov
mov
mov
pop
fistl
inc
pop
push
fsubl
jnp
xchg
shrb
or
cmp
cwtl
add
fcomps
in
shll
mov
les
jmp
idivl
mov
repz
xor
push
aaa
and
sbb
stos
popa
push
test
jle
inc
dec
mov
cmp
jle
mov
ja
pop
adc
iret
dec
pop
cmp
scas
out
stc
es
mov
inc
mov
test
aad
aad
repz
adc
push
push
sub
mov
sub
inc
or
mov
imul
xor
enter
mov
nop
les
or
cld
sub
negb
mov
into
mov
dec
sub
es
add
bound
adc
jnp
mov
arpl
dec
stos
inc
inc
dec
fcmovnu
pop
sarl
int
sahf
mov
aaa
push
mov
jg
dec
fdivs
push
shll
sub
sub
stos
pop
jmp
pop
int3
xchg
nop
pop
jae
rorb
cmp
mov
pusha
lds
inc
or
movsb
mov
cli
sbb
sub
and
icebp
fidivrl
arpl
add
mov
mov
addr16
jne
inc
insb
xor
stos
pop
add
stos
or
cmp
rol
enter
insb
adc
inc
xchg
popf
and
loopne
stos
sbb
xlat
sahf
mov
andb
data16
mov
push
inc
sbb
push
std
scas
and
out
add
xor
push
pusha
mov
jb
test
scas
mov
push
inc
pop
sti
in
notb
lea
fidivrl
pop
or
and
add
cmp
adc
xchg
inc
mov
arpl
pop
add
sbb
add
push
in
adc
hlt
outsl
sbb
out
dec
add
insb
sbb
rclb
mull
jne
push
sbb
mov
jbe
jle
pop
out
fisubl
or
iret
flds
mov
out
cmp
mov
in
xchg
sbb
nop
pop
testl
outsb
sti
mov
jns
xchg
inc
pop
cmpsl
jle
cwtl
bound
xorb
clc
outsb
cmp
xabort
inc
xor
sub
push
popa
cmpsl
in
add
lahf
cmp
push
mov
jb
sahf
rep
push
test
scas
daa
aad
hlt
cmc
inc
cmp
call
int3
es
xor
ds
sbb
aad
ret
mov
cwtl
cmp
lret
xchg
lcall
jge
xchg
decb
lea
add
divl
cmp
pop
shr
push
je
xor
add
cmp
es
xchg
dec
jp
out
je
sbb
adc
push
inc
stc
and
out
out
or
lcall
jnp
in
mov
out
or
lahf
mov
dec
jecxz
jecxz
out
lret
sahf
iret
sahf
stos
push
adc
in
add
cmp
lahf
movb
pushf
cld
imul
or
add
add
jle,pn
pop
outsl
or
push
xor
mov
lds
jae
cli
lret
jg
adc
icebp
cwtl
cmpsb
push
aaa
add
push
fistpll
rorl
mov
rep
sbb
sbb
sbb
dec
jle
sahf
stos
mov
xchg
ret
push
ss
lods
test
fnstsw
adc
sbb
mov
push
in
arpl
inc
fidivl
adc
or
push
xor
ljmp
testl
push
fwait
xchg
pop
jne
sub
jb
mov
mov
cmp
ror
dec
or
xchg
or
xor
dec
cmp
daa
xchg
shr
test
lods
ss
and
iret
inc
fs
stos
cmp
mov
push
movsl
cs
push
sar
enter
arpl
insb
insl
push
popf
push
and
ljmp
sahf
dec
xchg
sahf
popf
scas
lret
fisttpl
inc
mov
jae
stos
mov
mov
ud0
mov
loope
xchg
sahf
dec
xor
sti
ss
pop
add
rol
insb
jp
push
sub
ljmp
ret
xlat
xor
insl
fucomp
lahf
outsb
and
je
ljmp
rcrl
jo
decb
add
pop
sbb
jne
stos
pop
sbb
neg
xor
enter
jp
sub
mov
daa
into
fchs
mov
add
jb
xchg
add
add
lret
movsl
adc
jb
jbe
jmp
mov
jmp
xor
adc
fwait
cmp
jne
or
sub
arpl
jl
and
xlat
push
sub
mov
adc
sbb
mov
inc
sti
in
sub
dec
cmp
pusha
pop
cmp
popf
mov
dec
leave
inc
out
mov
lahf
out
push
dec
jecxz
cmpsb
inc
adc
adc
and
sbb
pop
ret
das
sti
ficomps
and
sbb
mov
addr16
mov
ss
icebp
xor
popf
pop
xor
jg
jle
test
fisttpl
cwtl
ljmp
gs
dec
pop
outsl
cmp
lock
or
push
jae
mov
inc
scas
xor
sbb
inc
sbb
or
push
pushf
lods
pop
imul
pop
xor
jg
pop
shll
dec
jb
inc
sbb
dec
sbb
ret
lea
lret
loope
cmp
shl
bound
pop
shll
outsl
test
add
sahf
ds
adc
lret
mov
icebp
sbb
jl
mov
sub
jns
pop
jae
push
mov
ja
ret
movsb
inc
inc
ljmp
data16
testl
inc
in
and
add
xchg
fisttpl
les
cmp
popf
cmpb
sbb
cwtl
and
out
stos
ljmp
xlat
insl
pop
ja
aaa
cld
daa
xor
clc
sub
xchg
outsl
sub
imul
js
mov
jno
addr16
lcall
sub
lcall
mov
jl
lea
xchg
es
cmp
fidivrl
sub
mov
jns
in
lods
fsubrs
rolb
sahf
insl
inc
movsb
test
pop
push
cli
jp
sub
outsb
push
bound
mov
sub
sbb
inc
inc
jns
sub
push
pusha
out
popa
and
fwait
cmpsb
fisubrl
jmp
movsb
pusha
mov
lcall
xor
sbb
jecxz
jb
loop
or
rol
repz
mov
mov
pop
and
xorl
cmpsb
lret
inc
icebp
xlat
cli
jae
mov
pushf
repnz
pop
jno
xchg
std
xor
clc
cmp
cmp
in
repnz
cmp
pop
mov
push
mov
xchg
sub
push
shrl
dec
sahf
lea
cli
fwait
mov
daa
jg
in
imul
sub
mov
add
xchg
pop
insl
jle
imul
sbb
pop
mov
je
dec
or
test
pop
mov
cmp
mov
repnz
mov
or
addb
arpl
xchg
aam
mov
daa
jg
rcll
jne
inc
xor
sub
or
add
adc
cld
lahf
jecxz
pop
cmpsb
sar
pop
repnz
rdpmc
in
dec
xchg
negl
pop
xchg
ss
lods
ret
in
add
mov
mov
hlt
sbb
push
push
push
pop
inc
stos
in
imul
fisttpl
fcmovnu
mov
das
test
stos
push
scas
and
insl
mov
fidivrs
pop
les
inc
inc
mov
xor
mov
js
jge
fidivrs
add
jge
int
stos
sub
inc
es
mov
subl
in
test
pop
js
dec
push
pop
add
sbb
add
mov
cmp
sahf
or
iret
xchg
push
jecxz
outsb
mov
outsl
out
mov
jbe
nop
mov
lock
mov
int
cli
mov
cmp
cmp
dec
xor
cli
test
xor
popf
fsubrl
popa
mov
aas
neg
mov
repz
ret
pop
add
jbe
cmpsb
mov
pusha
scas
jb
inc
fs
push
decl
fucomi
jmp
mov
rcll
mov
push
clc
mov
stos
dec
loope
mov
mov
dec
sbb
stc
xor
fistl
dec
jp
imul
sub
push
repnz
fdivrp
mov
push
mov
mov
aaa
inc
test
xor
shl
mov
test
call
inc
clc
cmp
cli
in
aaa
mov
xchg
std
jo
shrb
push
in
add
push
xchg
cs
outsl
hlt
lret
and
push
arpl
test
mov
mov
adc
add
inc
std
push
dec
stos
fnsave
fidivl
out
pop
lds
cmp
xchg
in
sub
and
and
mov
cld
incb
adc
adc
fnsave
fsub
insb
cmp
dec
mov
ret
sub
push
mov
lahf
jne
bound
loope
mov
dec
ja
push
test
ja
mov
ret
sti
lock
test
dec
int
movsl
fwait
iret
pop
mov
ja
jl
iret
jle
shrb
and
scas
pop
mov
in
push
loop
lea
incl
sub
push
popf
lods
sbb
xor
out
cltd
mov
inc
mov
leave
dec
lahf
sbb
cmp
sahf
mov
jns
mov
xchg
mov
data16
pop
dec
in
lret
imulb
jb
mov
ljmp
iret
mov
lret
jmp
dec
mov
call
in
inc
mov
inc
js
data16
stc
out
sahf
insl
add
mov
push
pop
imul
or
add
pop
pop
push
or
and
and
pusha
xor
hlt
jnp
mov
mov
push
outsl
xor
mov
rcll
int
test
stos
les
in
inc
popa
sbb
adc
inc
push
stos
push
jge
aaa
orl
jge
sahf
dec
pop
push
jno
inc
cli
scas
pop
decl
cli
arpl
adc
pop
sub
add
xchg
pop
nop
int
adc
clc
ret
jbe
outsl
ljmp
mov
xchg
test
push
lahf
jnp
xor
orb
loope
clc
mov
bound
pop
ret
adc
shll
pop
jp
repz
mov
mov
sarb
cmp
or
dec
inc
push
loopne
and
mov
lods
cmp
loopne
out
push
mov
sub
leave
ss
lcall
call
push
mov
sub
ds
inc
pop
jmp
imul
mov
pop
sub
xchg
in
push
incl
nop
pop
aas
pop
and
cmp
sbb
sub
popf
sbb
out
push
inc
pop
out
hlt
fbstp
jle
or
scas
les
mov
mov
inc
inc
inc
xor
fwait
imul
outsl
fsubrs
add
out
data16
addr16
dec
pop
addr16
mov
and
je
pop
pop
mov
lret
jmp
ret
popf
push
add
nop
pop
mov
insl
dec
xorb
adc
xor
and
in
xor
dec
inc
xchg
jle
sub
jne
lcall
xchg
add
mov
out
add
xchg
inc
lea
inc
xchg
cmp
or
cmp
add
mov
daa
dec
scas
mov
jp
cmp
cmp
sbb
outsb
or
jb
enter
idivl
cmp
sub
push
enter
cmp
jmp
ljmp
push
add
dec
mov
pop
xchg
xorb
popf
ljmp
jl,pt
mov
out
sub
ss
stc
nop
stc
lds
out
mov
cmp
mov
pop
xor
mov
jg
push
insb
les
jne
lods
test
addr16
loope
test
mov
stc
lods
dec
adc
out
scas
push
in
movsb
nop
loope
movsl
out
push
shlb
xor
leave
ja
cmp
xor
xchg
outsb
mov
xchg
jo
outsb
push
pop
sar
cmc
fwait
mov
add
mov
sub
ljmp
pop
sbb
add
dec
adc
ljmp
daa
mov
iret
cmp
mov
jmp
out
loopne
mov
push
mov
add
jnp
sub
sbb
jge
shl
dec
xor
xchg
mov
shrl
push
push
fs
pop
pop
sbb
scas
imul
loopne
arpl
push
sahf
mov
jge
inc
and
and
inc
mov
mov
movsb
mov
adc
clc
lret
inc
mov
pop
sar
fiadds
dec
in
repnz
gs
lret
dec
xchg
jl
mov
add
or
out
test
cs
dec
lods
and
mov
xchg
mov
dec
adc
cli
mulb
jmp
and
xlat
mov
je
add
fisubs
add
pop
add
cmp
cmp
test
dec
movsl
mov
insb
rorb
leave
mov
dec
out
dec
adc
jne
xchg
or
fucomp
push
aam
rcrb
es
xor
mov
xchg
cmc
std
mov
addr16
cmpsb
shll
fwait
pop
loop
daa
ljmp
mov
sub
lods
sbb
xchg
icebp
inc
pop
xchg
sarb
icebp
inc
xchg
ret
dec
or
mov
test
dec
pop
repnz
pop
sub
fnstcw
mov
aam
aad
int
popf
imul
xchg
dec
sbb
rolb
pop
das
push
and
and
shlb
out
sahf
in
into
enter
pop
out
jg
aad
subl
notl
cmp
mov
lret
lods
add
cwtl
out
mov
jmp
aad
inc
sahf
cmp
sub
mov
test
cmp
shl
add
pop
fnstcw
push
in
mov
flds
jp
sbb
mov
or
jns
insb
dec
sbbl
pop
cli
loop
dec
push
inc
cltd
mov
jg
mov
adc
jp
mov
push
cmp
push
outsl
inc
jns
scas
and
imul
mov
cmpb
xchg
call
mov
cmp
shrb
mov
outsb
ljmp
dec
or
or
in
jmp
clc
shrb
cmp
jae
jae
add
mov
add
daa
aam
in
jae
push
gs
testl
loopne
mov
cmpsb
jb
adc
and
lock
sbb
or
fnstenv
cwtl
fldt
shrl
movsl
movsb
into
sub
outsb
out
lahf
jb
stc
jns
push
out
adc
enter
jecxz
loop
dec
xor
pop
hlt
lahf
adc
or
leave
das
lea
inc
xchg
push
xchg
lahf
sbb
sti
pop
iret
icebp
not
out
ret
adc
or
dec
insl
mov
sub
mov
mov
je
pop
cmpsb
dec
cmpsl
inc
push
leave
jae
jnp
jno
fistpl
mov
pop
mov
and
xor
mov
ja
push
scas
nop
repz
repz
bound
dec
popf
mov
mov
sub
xchg
mov
pop
jo
cli
jmp
jmp
xor
aad
lock
xchg
xchg
xor
movsl
mov
xchg
jge
sbb
lret
cmp
fcmovu
jns
das
fmull
out
sbb
or
push
js
jp
aad
arpl
xor
aas
push
pop
cld
pop
mov
or
insb
mov
mov
xchg
jno
sbb
sbbl
xor
repnz
xor
push
mov
dec
rcrl
inc
loopne
sub
jb
aam
jne
add
scas
call
stos
pusha
jno
mov
lock
fsts
or
dec
mov
cs
enter
inc
push
dec
data16
pop
jae
call
inc
repnz
test
shlb
stos
int3
ret
es
imul
notb
sub
addr16
fistl
sub
mov
mov
mov
xchg
push
cmp
mov
scas
shr
xchg
insb
mov
push
call
mov
sbb
in
test
inc
js
sbb
insl
mov
sub
add
and
or
pop
stc
loopne
daa
inc
push
mov
jne
jecxz
push
repnz
ljmp
mov
sub
cmp
mov
negl
repnz
sub
push
lcall
lea
dec
lret
out
inc
int3
add
mov
mov
jmp
repz
ds
pop
pushf
stos
add
loopne
cmp
mov
cmpsl
dec
lods
sarl
xchg
add
mov
ret
popf
push
mov
repnz
mov
pop
mov
fstpt
dec
imul
ret
std
add
jo
adc
jno
insl
clc
stos
add
mov
clc
in
insb
inc
rcll
push
fcoml
inc
dec
mov
repz
mov
pop
add
fsubl
das
xor
lock
push
fsubr
lret
imul
in
jp
cmp
lock
mov
repnz
xchg
push
js
sbb
sbb
int
jae
jns
hlt
jmp
fldl
jnp
xchg
outsl
xchg
cmp
je
sbb
shll
pop
cltd
adc
jge
test
dec
jmp
jle
jge
push
xchg
lahf
sbb
fldenv
lods
xchg
push
pusha
add
cmp
out
pop
cmpsl
sahf
xchg
loope
stc
sub
out
and
stos
out
and
fs
es
mov
pop
xlat
xchg
movsl
fstps
scas
sub
test
cmpsl
lret
add
pop
stos
fdivs
decb
divb
inc
dec
std
repnz
xchg
mov
stos
pop
xor
and
cli
xor
mov
push
jno
jns
in
sbb
jnp
std
adc
dec
outsb
or
xchg
push
jp
mov
mov
movsl
xor
roll
xchg
hlt
pusha
sbb
lret
jno
sbb
sub
mov
xchg
lcall
mov
mov
jmp
mov
hlt
ss
jmp
mov
inc
push
cld
shrb
sub
and
rcll
or
lods
push
stc
add
sbb
cltd
jb
adc
dec
pop
leave
xchg
xchg
add
ds
movsl
push
jbe
cwtl
sbb
lret
cmpsb
fistpll
jb
in
xor
mov
outsb
enter
lods
add
xor
fldt
sub
inc
mov
push
sti
mov
mov
cmc
cld
imul
shrb
pop
arpl
pop
xchg
pop
mov
mov
jnp
addr16
icebp
fists
or
loope
cli
pop
xlat
ja
push
cwtl
dec
sub
xor
jecxz
in
xor
in
jmp
sub
mov
insl
push
xor
dec
aas
push
in
aam
icebp
xchg
jmp
fs
inc
xor
jmp
dec
lds
xchg
and
dec
je
out
push
or
je
and
movsl
daa
loop
inc
sub
cmp
movsl
std
enter
sbb
lret
loopne
xchg
mov
or
inc
sub
in
adcb
mov
je
xor
fidivrs
mov
in
mov
inc
cmp
or
mov
jbe
orb
mov
clc
xchg
aad
dec
xorl
push
test
mov
loopne
adc
in
es
sub
test
dec
hlt
jecxz
dec
lcall
mov
adc
dec
test
loopne
add
push
jp
in
inc
shlb
jo
adc
inc
int
add
adc
mov
push
imul
xor
pop
add
mov
jne
mov
in
int
ljmp
mov
jae
and
xchg
jnp
mov
test
mov
mov
push
and
adc
inc
leave
xchg
repz
jge
lea
add
pop
mov
test
cmp
mov
xchg
cmp
and
out
mov
fidivl
dec
dec
bound
add
int3
cmpl
insl
inc
pop
mov
fidivrl
iret
dec
dec
fwait
outsl
sub
jg
cld
jge
pop
inc
cmp
xchg
into
inc
adc
test
imul
jae
add
cmp
mov
adc
leave
push
dec
push
mov
data16
inc
jbe
mov
ljmp
mov
in
clc
xor
gs
cmp
iret
pop
ss
in
pop
push
repnz
pop
sbb
sahf
push
mov
inc
icebp
xchg
leave
and
pop
aaa
mov
mov
or
push
cmp
and
mov
push
inc
inc
inc
adc
pop
cmpsb
push
test
out
loop
mov
lods
mov
rorl
adc
and
cmp
lahf
shrd
pop
insb
push
pop
xor
aad
xchg
sahf
dec
call
repz
add
arpl
add
divl
jmp
out
jge
pusha
nop
sahf
cmp
andl
rclb
ror
dec
andl
loope
test
je
enter
pop
sub
pop
idivl
popf
jb
cmc
cmp
shll
jp
arpl
movsl
sbb
outsl
xchg
pushl
repnz
hlt
push
mov
int3
pop
mov
mov
cltd
push
sbb
nop
stos
jmp
into
sub
jge
fmuls
movsl
mov
arpl
dec
add
fldt
imul
adc
shll
adcl
dec
mov
fildl
adc
mov
je
icebp
xor
inc
adc
stos
fdivrl
cmpsb
push
inc
idivl
cmp
outsl
in
pop
arpl
imul
dec
adc
sbb
push
dec
pop
jmp
mov
test
xchg
pop
rcl
mov
adc
inc
int3
ja
cltd
std
sbb
or
ljmp
mov
cmpsb
sahf
mov
shrb
ja
in
xor
outsl
lods
mov
mov
enter
lcall
pushf
xchg
movhps
jmp
in
movb
adc
pop
push
mov
and
int
cmp
mov
cmp
cli
addl
jb
sbbb
xabort
imul
jmp
or
jb
sbb
stos
mov
xchg
dec
mov
dec
dec
stos
xchg
scas
sbb
mov
fdivs
imul
out
in
xchg
negb
outsw
rcll
sbb
inc
imul
cmp
std
sub
lea
cmpsb
nop
mov
pop
ret
sbb
sbb
sbb
in
shlb
mov
mov
inc
xlat
xchg
mov
sbb
dec
inc
cmp
andl
inc
mov
jno
cld
sbb
dec
nop
dec
inc
xor
add
mov
xchg
fs
add
cmpsb
inc
ds
add
or
loope
mov
jge
jmp
mov
add
das
or
movsb
cltd
addb
mov
mov
xor
adc
cmc
xchg
popf
loope
mov
rolb
pop
pop
fnstenv
and
aaa
xchg
dec
or
js
arpl
push
mov
pop
les
cmp
sahf
push
inc
add
fcmovb
loope
test
mov
xor
cs
les
js
rdmsr
fisttpll
xchg
sbb
push
mov
lock
dec
gs
enter
adc
cs
and
cwtl
sub
sub
movsb
jne
add
push
push
std
cmp
stos
aam
sbb
loop
pop
pop
ljmp
jne
jae
inc
ret
es
push
jnp
dec
mov
and
sub
jo
push
scas
in
ds
out
mov
jg
xchg
div
mov
and
cli
push
dec
inc
jne
inc
adc
cs
jbe
cmc
pop
adc
cmp
fwait
xor
ret
mov
movsl
xchg
fcmovb
sub
movsl
jge
inc
clc
add
lahf
sub
lret
aaa
shrl
fcomp
mov
jp
insl
out
cmp
xor
push
fisubl
jae
andb
ret
data16
mov
cltd
inc
negl
in
ljmp
fnstsw
shlb
or
jecxz
loopne
xchg
xchg
sub
sub
fisttps
adc
int3
and
xchg
insb
mov
xchg
jns
pop
pop
fsubs
fidivl
in
or
mov
out
cwtl
dec
push
jbe
and
jbe
loop
rcll
adc
pusha
shl
sbb
inc
xor
xchg
pop
push
sbb
sarb
lcall
pop
xchg
cli
adc
dec
xchg
mov
mov
xor
fimull
scas
lahf
jbe
jl
adc
stos
xchg
rclb
sbb
mov
xor
repnz
stos
mov
inc
stos
sti
cmc
jnp
or
fmull
jecxz
shlb
icebp
dec
clc
arpl
sarb
insl
in
and
add
aad
jmp
and
mov
mov
jns
loopne
es
push
jge
lcall
jns
and
ljmp
cmp
mov
in
rcrl
sub
test
xor
add
lret
aad
jge
mov
mov
push
test
push
jmp
mov
lds
pop
mov
xchg
in
sub
in
xor
xchg
sub
stos
xchg
sarb
lahf
fcom
data16
mov
xchg
test
loop
shl
mov
les
andb
adc
pushf
fsubs
xor
mov
cltd
add
out
push
rcl
jb
gs
push
loop
nop
test
mov
pop
add
add
xchg
cmc
cmc
inc
imul
aaa
sbb
mov
xchg
out
xor
pop
jae
iret
push
push
fcmovu
jno
inc
shlb
and
dec
jle
test
xor
out
cvtps2pd
inc
nop
xor
lods
cmp
xor
mov
inc
pop
adc
mov
sub
add
xor
push
adc
jne
je
outsl
dec
push
or
dec
mov
fadds
adc
cmp
cwtl
push
popf
sbb
xchg
add
mov
sub
cmpsl
mov
mov
sahf
pop
mov
cmp
int3
pop
lock
cmpsl
xorb
ffreep
mov
popf
mov
dec
cmpl
fsubl
mov
jbe
inc
mov
xchg
dec
sub
push
movsb
xchg
cmp
mov
sub
lret
frstor
sbb
push
jl
pop
mov
shll
test
mov
xchg
lock
lea
iret
pop
daa
xlat
jg
mull
sbb
and
popf
fmull
push
or
mov
pmaxub
aad
and
pop
sub
and
add
pop
imul
pop
sbb
arpl
in
or
fnstenv
add
add
fildl
xchg
sub
aam
inc
adc
loope
and
aam
mov
jp
inc
jmp
and
fisttps
jecxz
dec
imul
iret
fwait
fs
sbb
sub
scas
pop
imul
addr16
mov
fwait
adc
mov
icebp
dec
iret
scas
int
stos
ja
sbb
jl
adc
cwtl
xor
imul
push
lock
mov
xchg
adc
loop
push
and
mov
stos
add
iret
adc
mov
jg
adc
cs
add
in
xchg
scas
adc
pop
add
mov
cmp
pop
ret
test
mov
inc
or
nop
xlat
pop
jmp
jmp
pop
ljmp
lahf
adc
sub
push
lcall
push
adc
adc
dec
add
mov
fsts
pop
push
daa
ret
lea
push
insb
mov
ret
dec
mov
les
push
sar
adc
mov
mov
daa
out
lock
add
pop
cmpsb
bound
xor
dec
popa
ror
adc
les
sub
push
push
rcl
jp
push
aaa
sub
push
or
and
sbb
rclb
std
fistpl
mov
movsb
arpl
out
jle
insl
fmul
add
push
lahf
enter
mov
jbe
dec
adc
jl
shr
push
or
shrl
ss
pop
and
cmpsl
sbb
cmp
jae
int3
jmp
push
adc
loope
scas
lock
mov
adc
xchg
cld
and
sti
adc
call
into
inc
cmpsl
mov
hlt
test
out
in
scas
add
lods
xlat
pusha
dec
adc
leave
adc
fcomp
xlat
aaa
and
push
orl
mov
lods
aas
pop
add
rcrb
loop
xchg
dec
scas
xor
inc
iret
jb
inc
outsl
in
mov
bound
cli
dec
xchg
test
sbb
inc
addr16
divl
lahf
mov
xchg
push
ljmp
jnp
leave
add
xor
loop
xor
cld
jne
loop
insb
fs
sbb
dec
fwait
cli
xchg
sub
fcoml
inc
movsl
push
dec
push
sar
mov
pop
enter
mov
or
test
movb
pop
sbb
mov
or
repz
dec
push
push
and
fcoml
mov
and
insl
mov
sub
aam
sbb
movsb
pop
lahf
cmpsb
stos
xor
pop
or
sub
fldcw
mov
mov
movsl
push
pushf
mov
ja
out
add
movsl
jecxz
out
jmp
sub
sbb
and
cmp
sub
sub
sti
pop
mov
nop
xchg
les
lods
or
aam
cmp
pop
dec
test
lds
push
pop
addr16
stos
inc
and
pop
pop
pop
mov
leave
mov
cld
mov
sbb
cmp
dec
cmpb
fiadds
aad
mov
sub
or
xchg
stos
repnz
mov
mov
mov
stos
mov
clc
mov
mov
inc
pop
cltd
data16
xchg
or
stos
iret
push
lods
out
jnp
xchg
fsts
inc
clc
pop
inc
inc
int3
cmp
inc
add
pusha
xchg
jp
adc
sbb
push
out
sub
enter
leave
lea
icebp
cmp
jnp
dec
aaa
addr16
pop
pop
pop
es
or
cltd
jg
insl
inc
jbe
xchg
dec
xchg
pop
and
add
ret
pop
rclb
xchg
clc
jbe
roll
je
lahf
pusha
testl
out
cmp
lods
xchg
mov
mov
sub
mov
imul
dec
dec
jmp
adc
rcl
xor
das
push
test
and
aad
adc
xchg
lods
ffreep
or
adc
xchg
and
mov
andb
out
and
out
icebp
lock
inc
popf
cli
push
leave
sti
dec
cmp
jne
std
aad
mov
scas
test
shll
movsl
push
xor
insb
shrb
cltd
dec
sub
cmc
dec
xchg
cltd
jne
out
mov
xor
loopne
xchg
xlat
sbb
ljmp
sbb
lods
dec
pop
ret
and
lret
outsl
cltd
jmp
inc
test
push
aad
sbbb
sub
mov
ret
rcrb
cmp
pop
shll
sub
add
jne
push
fwait
push
jge
inc
mov
xchg
test
in
or
mov
mov
dec
mov
aas
mov
outsb
mov
gs
je
or
mov
int
fstl
xchg
xchg
std
jne
cmc
test
out
mov
xor
jnp
mov
xchg
jle
sbb
sub
or
adc
adc
xor
inc
iret
loopne
xlat
push
cmpsb
add
inc
add
xorb
std
fidivrl
mov
leave
cmpb
jecxz
xor
pop
fcoml
xchg
cmc
xchg
add
mov
cmp
mov
int
push
sub
adc
push
push
push
dec
stc
loope
fwait
rorb
dec
sti
adc
sub
aam
jnp
mov
dec
mov
clc
push
outsb
cld
xchg
lret
shl
pop
mov
inc
or
pop
lds
dec
insb
push
popa
lods
lds
push
fstpl
cld
add
and
je
add
movsl
mov
xor
cmpb
je
xor
arpl
fidivrl
mov
stos
add
mov
mov
mov
jno
pop
sub
mov
mov
pop
dec
ret
adc
push
notl
js
pop
mov
jecxz
int
out
jg
fsubl
mov
cltd
aam
and
sub
fs
shl
jl
inc
sti
inc
int
mov
inc
test
popa
jp
adc
sbb
dec
push
jg
jno
cmp
mov
mov
fldt
ret
stc
aas
js
stos
sbb
mov
jnp
mov
notb
addl
out
gs
push
subl
cmp
insl
in
and
out
mov
push
scas
push
add
lcall
orl
ljmp
daa
movsl
jne
lods
clc
aaa
mov
in
ds
adc
fcompp
xor
call
xor
xchg
mov
jl
xchg
mov
cmp
xor
push
adc
mov
in
bound
hlt
mov
sub
pop
sub
pop
test
mov
jg
xorl
xchg
test
loope
adc
mov
into
aas
jbe
xchg
je
push
int
dec
mov
dec
stc
js
sub
mov
jae
stc
push
lahf
inc
push
mov
jne
bound
and
imul
lock
dec
mov
gs
pop
mov
mov
mov
sub
jnp
xchg
push
mov
pop
jecxz
rcll
cmpsb
cmp
inc
jne
imul
add
jo
mov
or
xchg
out
mov
inc
push
lods
mov
add
xor
mov
mov
int3
leave
mov
stos
xor
add
mov
lahf
sbb
mov
mov
ja
pushf
sbb
sub
mov
cmp
jb
adc
jne
jecxz
ljmp
or
cvttps2pi
adc
lea
mov
loope
aaa
cs
jb
or
lcall
or
mov
xor
ret
pusha
mov
or
sub
pushf
sub
fstpt
lret
punpckldq
jp
addr16
dec
call
sti
notl
int
fistps
lret
test
jbe
outsl
or
adc
mov
sub
lea
xor
test
xor
stc
or
cld
mov
dec
cmp
jmp
in
and
lock
fcompl
pushf
aaa
notl
dec
fadd
pop
inc
push
stc
push
xchg
push
jbe
jp
sbb
mov
sub
cmpsl
mov
movsl
psadbw
pop
xchg
imul
xchg
inc
pusha
insb
add
xor
sub
jp
aam
shll
clc
or
cmp
inc
shrb
int3
cmp
stc
push
movsl
push
fs
sub
dec
imul
loopne
xchg
nop
cmc
imul
clc
add
cmpsb
cli
fsubl
pop
jae
ret
cmpsb
and
mov
je
xor
mov
out
scas
mov
inc
jno
push
aas
nop
inc
les
fbld
ds
push
shrl
pop
and
insb
pop
jl
pop
add
mov
add
icebp
movsb
push
push
pop
das
daa
popf
xchg
ret
mov
clts
test
fildl
divb
enter
ds
loopne
mov
and
addr16
arpl
les
insl
and
repz
pushf
leave
mov
fcmovnb
or
xorb
mov
sub
jbe
and
pop
das
xor
or
bound
out
inc
clc
mov
imul
hlt
xor
sti
repz
push
mov
emms
or
int3
aam
sbb
int
mov
push
or
ja
bound
mov
adc
push
gs
popa
daa
sti
cwtl
push
pop
test
sbb
dec
lods
inc
dec
cli
jle
mov
scas
mov
jnp
je
scas
mov
sub
loopne
cmpb
std
addb
lea
cli
out
stc
ds
das
xorl
mov
outsl
jg
sbb
out
jo
fldl
pop
pop
popf
test
clc
js
dec
imull
push
inc
mov
jmp
sub
cmp
inc
outsl
fs
frstor
ss
iret
mov
jl
out
rcrl
fstl
xchg
lret
xchg
fistpl
mov
xor
loopne
std
aaa
ja
and
rcrl
dec
cmp
cmp
punpckhdq
jo
jbe
push
xchg
jnp
pop
sbb
cmp
mov
or
lock
pop
rolb
pop
mov
lret
inc
sbb
roll
pop
cs
js
stc
inc
lds
shl
inc
cld
mov
into
aam
adc
stos
out
cld
lcall
into
int3
sbbl
sub
sbb
jo
jle
cmp
bound
pop
inc
repnz
fldl
in
xchg
mov
mov
cmp
mov
xor
dec
and
in
daa
jno
xor
ss
aam
je
dec
mov
sar
enter
out
or
mov
int3
pop
rclb
int3
lds
ret
les
or
and
cmp
aad
in
lock
cld
lcall
mov
ret
dec
push
out
jmp
cmpsl
cmp
flds
andb
fs
repz
xor
xchg
push
add
dec
je
add
jmp
scas
iret
sti
pop
popa
fidivrl
lods
test
inc
test
int
stos
popf
das
iret
fsubrl
out
mov
ficompl
imul
mov
repz
push
dec
add
xlat
xor
push
adc
jno
adc
lahf
and
test
mov
xor
adc
cmp
sbb
mov
sahf
mov
mov
cmp
out
mov
lcall
cmp
cli
mov
sub
xlat
push
push
outsl
das
push
dec
aas
inc
lret
pop
sahf
mov
add
and
scas
cld
inc
test
cmp
jg
push
test
popa
loope
movsl
mov
mov
les
out
cltd
int
xchg
jno
xchg
adc
mov
ss
stc
adc
ja
add
inc
xlat
je
xor
push
aas
mov
cmp
daa
scas
scas
pop
xchg
push
sahf
cmp
scas
fnstenv
cmp
clc
xor
pop
push
dec
pop
negb
loop
das
dec
and
daa
cmp
xor
imul
loope
into
jg
xchg
xor
or
sti
mov
std
cmp
in
pop
je
repz
adc
std
xor
push
sub
dec
adc
test
fldcw
inc
cmp
xchg
jg
and
or
std
scas
std
sub
ficoml
in
jl
inc
fbstp
sbb
sub
push
call
pop
mov
fadds
and
xor
inc
repz
xchg
imul
xchg
mov
add
int
jb
pop
sbb
mov
add
xor
dec
sub
and
fsubs
aas
xor
fiadds
nop
mov
add
mov
xchg
test
insl
in
dec
shrl
sub
xchg
mov
xchg
jns
cmpsb
insl
mov
jl
clc
enter
fldt
insl
je
movsl
inc
je
lret
xchg
push
sahf
pop
lahf
xchg
jae
js
push
pusha
in
loopne
pop
xchg
cmpsb
mov
int3
push
lods
mov
xchg
jno
push
lret
xor
mov
mov
xor
icebp
std
push
sbbl
into
addr16
dec
sahf
repz
pop
inc
pop
dec
cmpsb
xchg
aaa
push
in
sub
mov
add
lds
in
sub
aas
inc
pop
jne
push
sub
mov
call
std
lock
aaa
and
jp
xchg
rolb
das
lcall
sub
lret
jae
dec
lods
mov
je
and
outsb
popl
mov
dec
repnz
cli
push
clc
je
pop
mov
mov
cmp
fadds
repz
ss
adcb
jno
xor
mov
scas
push
fiadds
jg
rcrl
mov
insb
jg
xchg
test
inc
test
mov
jnp
cmp
in
mov
negl
sar
out
imulb
dec
sbb
sub
insb
mov
mov
cwtl
pop
push
aas
jle
ficompl
scas
scas
sub
mov
sahf
das
add
inc
jbe
dec
adc
mov
sbb
add
cmpsb
movsb
mov
sarl
add
mov
ret
lods
adc
mov
push
les
sub
jnp
repnz
imul
es
pushf
xor
popf
jmp
aad
pop
or
add
inc
dec
jae
aaa
jecxz
cmp
xor
lods
xchg
adc
xchg
mov
jno
xor
inc
xchg
out
dec
movsb
fisubrs
mov
cmp
mov
clc
or
adc
cmp
push
add
out
je
cwtl
andb
push
mov
cltd
push
cli
imul
mov
jnp
insb
sarl
mov
es
test
orb
jecxz
fnstcw
add
fcomps
cli
outsb
scas
mov
and
addl
in
xchg
inc
push
pop
cmp
xor
cmp
aam
arpl
sub
cmp
inc
loopne
into
mov
andl
mov
popa
pop
subb
es
adc
pop
xor
lcall
mov
mov
add
jp
inc
jbe
lret
add
test
cwtl
call
and
imul
cmp
and
inc
pop
ja
cwtl
in
cmpsl
movsl
sbbl
fildl
stos
pop
jecxz
imul
cmp
cmpsb
xchg
mov
add
mov
adc
mov
adc
popf
or
outsb
and
push
mov
lds
add
lods
cwtl
pop
addb
mov
push
pop
push
clts
int
adc
mulb
stos
stc
or
gs
and
popf
cmp
lods
pop
inc
push
mov
jne
xor
cmp
xor
test
icebp
dec
sub
jle
ljmp
and
popf
mov
push
mov
push
adc
in
add
sbb
fwait
mov
nop
dec
cmp
in
shl
lea
pusha
push
stos
scas
aaa
cli
cmp
lcall
pusha
mov
and
jle
jl
clc
mov
fimuls
inc
cmp
adc
mov
push
scas
jmp
enter
xchg
movl
popf
push
fdivrs
sub
rol
inc
xchg
fisubrs
dec
inc
mov
fisubrl
pop
addr16
dec
aas
or
in
shrl
int
xchg
jle
movl
fnstenv
cmp
mov
dec
cltd
in
in
mov
loope
sbb
push
das
ret
test
fildl
push
dec
icebp
out
pop
add
pop
add
jb
in
mov
aad
test
xor
call
mov
cld
xor
shrb
test
or
test
pop
in
insb
jae
and
rorb
sbb
jg
add
push
mov
mov
fwait
sbb
or
icebp
test
outsb
add
data16
jp
dec
push
scas
push
out
sbb
jne
fmull
or
rorb
lds
psubb
cmp
xor
test
mov
ficomps
mov
mov
dec
repz
nop
data16
push
arpl
add
insb
mov
xor
out
push
xchg
xchg
insl
cmpsl
stc
rcrb
dec
xor
mov
and
dec
xor
dec
sbb
cmp
mov
sbb
jmp
rcll
or
call
xchg
iret
cmp
push
xchg
mov
fsubrl
cmp
jns
cmp
push
cmp
cmp
rclb
lahf
push
rcrb
cmp
lea
ror
out
repz
sub
fstl
outsb
outsl
js,pn
inc
sbb
xor
inc
cmc
insl
fcomp
and
hlt
aam
mov
dec
sahf
roll
xchg
sbb
xor
subl
lods
xor
stc
imul
repnz
ret
lods
ret
xor
jbe
outsl
mov
xorl
mov
mov
cmp
xor
cli
sub
adc
add
ret
cwtl
lret
bound
subb
push
ds
in
ret
inc
pusha
lret
ljmp
xchg
pop
jns
xchg
jmp
inc
loop
bound
dec
rolb
dec
xchg
mov
gs
push
xlat
aaa
mov
sub
adc
cld
xor
xchg
andb
mov
or
cmp
mov
cmp
icebp
fcmovb
arpl
sti
or
sbb
mulb
or
lock
mov
lret
negl
scas
jno
int3
incb
fdivrs
pop
outsl
rcrb
inc
or
fstps
pop
das
shlb
push
data16
xchg
in
rcrb
pop
jb
adc
imul
ds
sbb
dec
pop
pushf
mov
pop
loope
pop
lds
add
clc
incb
sub
mov
and
sbb
or
call
stos
dec
and
loope
jge
mov
inc
in
mov
inc
inc
mov
and
cmp
notl
les
xchg
mov
push
jae
loopne
cmpsl
bt
cmp
mov
mov
loop
mov
sub
mov
insl
fwait
cmc
test
jne
push
xchg
repnz
inc
xchg
sahf
mov
jns
lds
lock
out
outsb
cmpsl
pusha
shll
jge
dec
push
mov
out
je
xchg
pop
aas
sub
dec
aas
movsb
mov
cmp
cld
lret
cmp
ss
fdivl
dec
or
iret
sub
lea
xchg
xchg
inc
and
pop
test
scas
jmp
mov
xchg
cmp
cs
pop
cld
inc
mov
pushf
mov
mov
jbe
xor
movsb
xor
imul
in
mov
mov
xchg
xor
mov
call
in
ds
bound
jno
adc
sbb
mov
mov
jns
jmp
and
xor
mov
jg
fildl
pop
out
out
cli
loopne
jmp
lea
sti
add
mov
enter
or
shlb
sbb
hlt
roll
in
int3
loop
pop
roll
jnp
xor
lock
add
mull
arpl
xchg
icebp
xor
popf
mov
push
in
push
call
lret
loopne
lahf
jl
lahf
and
dec
or
movsl
pop
xchg
pop
lea
mov
inc
sar
and
cli
push
or
jl
or
iret
lahf
mov
jge
out
mov
dec
lds
pop
mov
loop
xchg
xor
dec
into
mov
rcl
sbb
stc
jp
sub
and
jl
jge
pop
nop
cmpsb
mov
push
cmpsb
or
pop
pop
xchg
lock
popf
sbb
sbb
xchg
jo
xchg
push
fwait
jl
pop
js
mov
sbb
push
and
aam
xchg
adc
ds
in
test
lods
mov
push
call
adc
neg
outsl
lds
das
test
fstps
jo
es
out
push
cs
sbb
push
aam
jl
xor
dec
repz
sbb
call
mov
or
and
pushf
add
pop
ss
in
cmp
test
iret
mov
testb
je
dec
cmp
in
leave
jb
xchg
and
andb
xchg
xchg
mov
insb
mov
jl
add
mov
mov
jecxz
mov
aad
outsb
lods
push
shll
rclb
outsb
movsl
cmpsb
sub
add
iret
jle
mov
jle
xchg
push
dec
icebp
cmp
mov
cmc
xor
sti
fs
cmpb
andb
xor
jg
pop
mov
jo
mov
sub
mov
sub
out
dec
mov
jg
sub
jge
mov
inc
call
pop
bound
dec
add
leave
cmp
bound
jge
cmp
roll
in
push
fwait
in
push
pop
mov
ljmp
mov
fnstenv
mov
push
in
aas
fldl
int
xchg
cmc
mov
adc
cmp
out
xchg
ucomiss
std
sbb
dec
scas
rolb
xchg
je
js
add
les
das
add
add
stos
bound
loop
jns
dec
jb
cwtl
mov
sub
cmc
jae
cmpsl
or
push
push
hlt
lods
sbb
pop
outsb
pop
fidivl
aam
pop
mov
push
sub
inc
test
xchg
pop
mov
mov
pop
andb
cmp
clc
stos
fnstcw
push
cmc
jecxz
int
dec
imul
jecxz
mov
mov
and
mov
mov
jns
xor
add
ss
lret
or
cmp
cld
sbb
xchg
jecxz
ja
clc
push
jns
stc
stos
or
cmp
sub
ja
dec
cli
ret
aam
dec
fwait
dec
inc
mov
cltd
outsl
xchg
aad
jecxz
jnp
fildl
aas
pop
sti
mov
mov
xchg
scas
adc
sar
and
or
lods
inc
loop
out
ficomps
ds
inc
dec
inc
insb
push
cmp
xorl
xor
scas
sub
gs
push
adc
std
les
cmp
in
or
movsb
sub
jne
sbb
push
in
inc
movsl
pushf
cmova
and
inc
arpl
test
sub
insl
xchg
mov
xor
mov
adc
jns
lret
mov
fwait
sbb
rcrl
push
jecxz
mov
pop
shr
adc
cltd
loope
enter
sarl
or
mov
popa
aam
iret
mov
aam
xchg
cmp
enter
jle
or
adc
dec
sub
xor
mov
xor
lea
cs
or
fstps
mov
and
xor
idivb
pop
and
sti
test
add
push
aas
xor
ja
nop
jg
ror
pushf
insb
repz
icebp
add
out
test
adc
test
adc
fwait
nop
js
fcoms
jne
mov
xchg
and
xchg
add
push
movsb
sub
sbb
fdivrl
js
adc
addr16
mov
and
ljmp
inc
rcrb
mov
dec
movsl
sub
and
bound
or
jo
cmp
pop
fidivrs
dec
inc
in
mov
popa
jnp
sub
adc
lret
adc
ljmp
les
rcrl
lret
xor
mov
cmp
jmp
arpl
lock
cmpsl
adc
decb
jp
es
pop
popa
xchg
inc
xchg
push
push
imull
std
out
lea
in
test
test
dec
test
push
enter
shll
mov
inc
test
out
adcl
inc
inc
push
jnp
push
xchg
mov
and
xchg
lods
push
insb
loope
or
adc
or
jmp
push
movsl
adc
xor
jno
pop
sub
ret
cmp
movsb
rcll
testl
cmp
dec
loope
ljmp
scas
xchg
adc
aaa
icebp
mov
mov
push
test
adc
in
insl
fisubl
fs
xor
movsl
xchg
loopne
fisttps
jne
daa
std
adc
jae
icebp
mov
or
cld
mov
sbbl
jmp
shl
jo
pop
pop
test
add
xchg
dec
jo
push
mov
inc
cltd
pop
imul
mov
pop
xlat
out
adc
sbb
cwtl
or
cmpsl
add
fidivrs
test
pop
adc
outsb
fcomps
sbb
dec
std
lret
pop
mov
mov
jp
and
pop
cwtl
cmp
inc
fwait
iret
push
xchg
insl
jmp
pop
mov
inc
xchg
or
sbbb
ror
leave
cmpsl
xor
xor
lcall
add
add
stc
fidivl
in
loop
mov
mov
mov
mov
out
pop
imulb
or
js
ffreep
sbb
daa
jmp
cld
in
std
outsb
add
stos
dec
pop
mov
add
adc
pop
sbb
adc
cld
and
test
out
mov
adc
sti
push
jge
xor
xchg
shl
jno
data16
daa
out
xchg
inc
xor
in
dec
fldenv
out
bound
fstl
hlt
xor
or
mov
add
xor
mov
lret
outsl
out
or
outsb
ret
push
push
mov
rcrb
cld
cltd
pop
mov
jns
jbe
pop
frstor
fs
fidivrs
test
incb
cmp
lds
adc
add
dec
add
leave
in
adc
sbb
into
jnp
jmp
testl
xchg
gs
aam
jmp
pop
ja
adc
lods
xchg
sahf
stc
mov
mov
lahf
rorl
pusha
dec
jne
pop
adc
loop
sbbb
pushf
pop
imul
mov
pusha
or
dec
pop
cmpsb
bnd
loopne
aas
sub
stc
mov
stos
push
jo
jmp
add
mov
lret
and
mov
dec
icebp
xor
xor
jno
aam
mov
mov
popf
jg
aas
cli
sub
xor
push
ret
outsb
lcall
je
mov
or
cmc
sub
mov
xor
dec
xor
js
dec
and
xchg
adc
pop
jmp
or
stos
add
repz
test
repz
sub
jmp
imul
ret
adc
std
cmpsb
aaa
inc
inc
ljmp
inc
popa
xor
xchg
pop
inc
or
or
subb
xor
xchg
adc
jg
fidivrl
mov
mov
outsb
mov
shll
test
incb
mov
dec
int3
adc
mov
in
mov
ss
pushf
jae
icebp
scas
cwtl
xchg
lret
mov
or
lods
mov
jg
pushf
mov
xchg
sbb
test
inc
loop
shrl
lea
add
in
mov
fdivrs
xor
cmpsl
add
pushf
test
push
dec
adc
adc
and
dec
test
cmp
js
rorb
and
inc
xchg
sbb
mov
inc
jns
mov
pop
lods
mov
mull
push
sub
lcall
push
mov
mov
outsb
jecxz
test
mov
icebp
adc
iret
outsl
repnz
pop
sahf
xchg
idivb
aad
mov
sbb
push
jo
ficompl
dec
rcrl
jbe
stos
cmp
sbb
add
mov
ds
lcall
faddl
sub
and
roll
lret
push
fsubl
out
xadd
repnz
cmp
and
and
xchg
lods
dec
mov
loope
adc
mov
shlb
and
mov
notl
mov
mov
cmpsb
es
int
mov
xchg
push
xor
outsl
fbld
sub
das
push
cmp
test
andl
cltd
in
jmp
out
xchg
dec
xor
and
adc
mov
xor
xchg
shr
inc
push
nop
insl
int
cmp
or
daa
loop
sbb
xchg
testl
neg
das
sahf
leave
pop
dec
repz
inc
pop
sub
pop
popf
int3
dec
cvtps2pd
jno
sub
xlat
sub
fidivl
or
mov
xorl
add
inc
push
cmp
mov
xor
cmp
adc
sub
xor
push
pop
lahf
push
sbb
ror
sbb
jns
lea
jo
mov
ljmp
lret
mov
adc
adcb
jmp
sub
pop
loope
scas
cltd
mov
les
gs
aad
add
jno
jno
ret
imull
in
xor
mov
inc
fnstenv
dec
outsb
pop
ds
lahf
xor
sub
repnz
jno
jge
inc
push
movsl
leave
cli
push
xor
pop
lea
cmp
test
lods
cmpb
add
adc
test
shrb
and
adc
outsb
pop
bound
leave
sbb
loop
movsl
add
stos
add
mov
pop
rclb
mov
rclb
mov
xchg
jge
dec
xor
mov
mov
imul
jae
imul
in
rcll
pop
ret
xchg
imul
stc
shlb
dec
in
dec
add
out
test
out
push
jo
stos
frstor
xchg
dec
and
push
mov
addr16
jmp
jg
add
xor
icebp
sub
fists
and
fldt
fstpl
push
jle
insl
lret
sbb
dec
push
lea
shlb
loopne
ja
out
leave
adc
mov
xor
mov
cmp
jmp
ret
clc
in
cmp
sub
sarb
dec
mov
push
shrl
jo
fisubs
push
xlat
mov
pop
out
jg
movsl
sub
test
or
test
addl
loopne
lea
outsl
jbe
mov
mov
or
mov
jae
outsl
inc
cmovbe
pop
ss
jp
orl
push
pusha
or
jmp
aam
sbbb
outsb
dec
jmp
jecxz
xor
push
inc
jg
daa
sbb
sti
and
pop
test
mov
mov
xchg
sub
inc
xlat
pop
imul
pop
and
inc
mov
cltd
mov
cmp
xchg
and
ret
pop
fnstenv
cmpsb
imul
cmp
push
cmpxchg
int
out
stos
bound
jge
in
and
cwtl
test
popa
pop
sti
and
mov
mov
pop
push
outsb
in
test
lods
iret
xchg
mov
add
dec
mov
dec
push
loopne
fcmovnu
test
lret
dec
popf
jmp
out
mov
adc
lcall
outsb
cmpsl
mov
idivl
sub
shrl
add
sbb
es
sub
mov
jmp
inc
int
xlat
pop
movsb
jb
xchg
test
mov
lret
push
jns
cltd
cwtd
scas
rcrb
insb
mov
dec
jle
gs
jb
icebp
jnp
inc
mov
daa
or
sub
lods
fcmovnb
dec
outsl
in
adc
pop
repz
popa
sbb
mov
mov
dec
cmpsb
mov
or
stc
dec
push
sti
pop
sahf
test
aad
popf
stc
sbb
pushf
mov
or
addr16
insb
mov
and
push
push
sbb
int3
stc
shlb
lcall
xchg
arpl
mov
repz
and
push
daa
into
add
jmp
imul
push
cmc
mov
dec
and
add
adc
stc
test
stc
mov
inc
pop
lods
sysexit
outsb
mov
mov
dec
inc
fisttps
jae
sbb
pop
test
hlt
stos
sbb
insl
test
inc
dec
or
ret
cmp
sub
dec
sub
fwait
mov
jo
fwait
xor
in
inc
mov
sub
notb
or
cwtl
mov
xchg
mov
loopne
dec
outsl
xlat
scas
xchg
dec
sub
cmp
mov
xchg
stc
movsb
pop
pop
fnsave
and
push
popa
lretw
and
cmpsl
fmul
xor
xchg
mov
mov
xchg
bound
mov
add
je
push
orb
lret
and
xor
rcl
mov
pop
popf
aam
lret
aad
xor
nop
sub
mov
ror
sub
adc
sub
push
mov
sbb
ret
mov
lds
mov
lods
pushf
jle
cld
mov
out
dec
scas
cmp
sub
aam
notl
lods
test
inc
jge
les
mov
pop
jo
dec
xchg
pusha
jbe
inc
adcb
test
push
outsb
cbtw
ljmp
int3
sub
push
std
mov
lods
shrb
ja
lods
pop
dec
push
jge
std
in
fcompp
int
fnstcw
pop
jae
data16
pop
adc
fbstp
add
iret
inc
insl
loope
loop
mov
mov
cmp
fdivl
cmp
mov
fcmovb
jno
adc
sbb
sub
xor
cmc
jl
mov
xchg
in
das
cmp
mov
icebp
incl
dec
es
push
dec
ret
mov
into
ljmp
add
mov
dec
scas
or
je
insb
repnz
inc
lea
mov
sar
adc
add
movsb
pop
mov
push
sub
movsb
gs
adcb
sub
jne
xchg
xor
jbe
lea
rcll
movsl
sbb
cmp
insb
jo
cmc
outsb
iret
fidivrl
testb
xchg
insl
jecxz
icebp
push
push
xlat
jmp
mov
sub
lds
movsb
jno
dec
ljmp
cmpsl
ficoml
cmpsl
jl
or
mov
push
adc
fnstsw
mov
cmp
cltd
cmp
andb
xchg
shll
in
loopne
mov
aam
xor
xchg
fcmovb
cmpsb
lea
xchg
sbb
and
jns
push
popf
cmpsb
cmp
fcomp
adc
ret
addr16
xchg
xchg
daa
jbe
xchg
rcl
inc
sbbb
mov
imul
xchg
cmc
sbb
mov
je
add
lock
aaa
push
rep
imull
sub
push
mov
cwtl
or
pop
mov
outsb
icebp
sti
outsb
pop
ja
sbb
push
dec
xorb
fwait
daa
clc
pop
std
sbb
inc
bound
test
dec
stc
mov
fbld
xchg
push
clc
ficomps
fsubl
rcrl
mov
test
mov
inc
jg
fcomip
sbb
xor
fcoms
mov
dec
dec
sbb
and
popa
aam
pop
mov
jg
fnstsw
dec
xor
ds
sar
push
fmull
lock
mov
xchg
dec
xor
xor
lds
fstpl
or
rcrl
and
pushf
pcmpgtd
mov
pop
dec
pop
leave
shl
jp
test
mov
mov
mov
and
scas
push
xchg
rcl
cmc
cmc
mov
jne
call
int3
xlat
push
adc
addb
lods
scas
and
adc
jnp
push
and
and
stos
lods
dec
mov
test
mov
jbe
mov
arpl
loop
loopne
xchg
push
pop
repnz
and
and
sbb
inc
addb
push
ss
mov
in
xchg
mov
and
mov
movsl
mov
xor
or
xchg
sahf
repnz
into
sbb
xor
dec
ja
insb
inc
xorb
fimuls
jno
enter
pushf
lea
addr16
cmpb
mov
stos
adc
xor
jo
lock
xchg
pop
pop
mov
call
out
xor
pushf
mov
stos
daa
imul
test
mov
pushf
inc
sub
xchg
cwtl
aam
sbb
xchg
push
mov
mov
jns
jl
movsb
xor
ret
lahf
fildl
pop
jbe
sbb
dec
mov
dec
push
sbb
gs
sahf
cltd
clc
fsub
rol
orb
cli
lret
cmp
imul
aam
dec
adc
inc
cld
out
into
loopne
adc
mov
mov
sub
fsubrs
or
orl
sti
fwait
push
cmc
inc
push
push
or
mov
cld
jle
sub
jae
out
push
add
popf
arpl
sbb
dec
push
sub
pop
pusha
dec
les
sub
bound
push
mov
shrb
lahf
in
loop
mov
mov
std
repz
sub
loope
jl
imul
inc
outsb
inc
mov
out
testl
movsb
inc
mov
xchg
lret
sbb
sub
add
mov
sub
ret
outsl
int3
punpckhwd
xchg
outsb
mov
mov
pop
arpl
pop
sbb
pop
cmp
cmp
loope
sbb
mov
jg
or
les
lods
sbb
and
iret
ds
xchg
sbb
and
and
cli
mov
xchg
shr
stos
bound
in
inc
in
push
and
pushf
test
jp
aaa
shrl
mov
movsl
push
dec
imul
fbld
mul
es
add
scas
jmp
mov
mov
lret
popa
in
sub
je
pop
pop
ljmp
mov
dec
stc
cmc
mov
nop
lea
and
pushf
stos
aam
sahf
or
mov
repnz
lock
xor
or
outsl
aam
imul
sub
push
dec
cmp
cld
shll
jp
shlb
js
dec
test
ret
xchg
push
pop
sbb
cli
int
add
int3
xchg
push
imulb
inc
hlt
dec
and
lods
stos
add
sub
sbb
ljmp
div
sbb
mov
in
push
mov
pop
cwtl
addl
in
outsb
jl
adc
pop
scas
pop
imul
mov
test
or
cmpsb
mov
mov
inc
dec
mov
xchg
shrb
adc
int3
roll
shll
dec
pop
lods
das
or
jae
loop
mov
mov
hlt
mov
add
push
stc
mov
dec
pop
movsb
out
pop
push
arpl
jae
inc
out
or
loopne
movsl
push
mov
sbb
and
fs
pop
jp
std
push
sbb
inc
or
push
xor
shll
mov
arpl
cld
jne,pt
xchg
inc
icebp
pop
out
or
mov
mov
dec
cmp
test
sbb
mov
cmovnp
aaa
jb
addb
in
sub
or
sbb
popa
ja
mov
xorb
or
lods
fsubl
adc
mov
xor
jp
inc
inc
icebp
jp
imul
shlb
cmp
sahf
adc
call
jle
imul
lods
addr16
and
lea
les
lcall
pop
lret
repnz
shrl
pop
jp
push
jb
push
insl
lock
mov
push
test
pop
jecxz
ja
mov
decl
and
pop
mov
cwtl
lret
sarl
sarl
jnp
push
int3
mov
in
jecxz
pop
cld
lret
loop
sbb
aas
mov
mov
or
inc
jbe
mov
mov
dec
popf
dec
fmul
lret
aam
dec
add
or
add
xchg
jno
and
cltd
push
lret
jb
hlt
inc
xchg
inc
cmovne
xor
add
add
stos
aam
cmp
add
fistl
xchg
in
gs
add
test
mov
pop
push
push
or
cli
and
popf
mov
or
scas
sbb
sub
sub
inc
adc
int3
mov
popa
sbb
or
scas
iret
pop
mov
ja
push
test
push
jnp
push
clc
jg
pop
nop
mov
mov
out
mov
dec
mov
inc
hlt
push
mov
sub
lcall
ja
push
pusha
jno
sbb
fwait
pusha
mov
sti
push
insb
pop
ss
jnp
dec
movsb
push
test
insb
xor
sub
mov
adc
fmuls
jne
cli
xlat
add
jns
xchg
rcl
mov
push
mov
mov
adc
dec
sub
xchg
stc
bound
clc
out
in
cmp
jmp
orl
addl
test
adc
aam
icebp
xlat
xchg
lds
cmp
testb
mov
mov
add
mov
out
sbb
gs
mov
incb
cmp
arpl
jno
and
fdivrs
movsl
adc
cltd
mov
icebp
test
lahf
pusha
cmp
xlat
cmp
pop
mov
sbb
cmp
bnd
popf
inc
test
jnp
jbe
xchg
sub
mov
xchg
lret
stos
jle
popa
outsb
sub
mov
sbb
in
push
shlb
push
scas
or
mov
cmp
pop
jb
in
xor
mov
push
nop
fmull
dec
sbb
pop
into
dec
and
or
lahf
sub
jl
lahf
shr
inc
cmpsl
imul
repz
cmp
or
cmp
push
shlb
pop
es
enterw
and
rolb
outsl
call
cwtl
jno
adc
jnp
hlt
pop
cmpsl
sbb
lods
rclb
cltd
sbb
rolb
je
jecxz
in
lret
cwtl
mov
xchg
adc
daa
jae
push
sarl
lds
rorb
in
pop
iret
and
push
sub
pusha
lea
inc
fadds
adc
decb
xor
aad
leave
push
dec
scas
cmp
push
mov
adc
jns
adc
jne
or
mov
pop
aam
int
das
mov
jo
ret
push
je
movsl
adc
scas
xchg
pop
call
repnz
stos
out
fnstsw
bound
in
or
push
ss
sti
jmp
mov
push
dec
sub
ret
cmp
mov
stc
jnp
inc
jns
add
add
pushf
sbb
mov
lea
mov
mov
insb
incl
sarl
pop
mov
dec
movsb
enter
mov
pop
sub
enter
sub
inc
in
fnsave
xchg
sbbl
cmp
pushf
adc
repz
pop
fs
dec
subl
push
pop
sbb
add
ja
shl
pusha
out
repz
mov
test
stos
dec
movsl
jl
inc
dec
pop
rclb
xor
mov
dec
pop
sub
cmp
sub
inc
lods
push
push
inc
leave
or
movsb
adc
xlat
jecxz
std
mov
shl
pop
xor
lods
jecxz
icebp
sub
iret
and
adc
out
jno
push
cmp
jmp
xchg
adc
xor
bound
outsl
xorb
xor
sub
jnp
pop
test
jmp
aam
sbb
repnz
mov
nop
out
imul
mov
push
sub
sub
fists
mov
push
int3
outsl
xor
ss
dec
pop
fwait
sbb
pop
movsl
mov
dec
mov
or
add
adc
and
out
es
xor
mov
xchg
xor
sbb
cmc
pushl
jno
jns
pop
adc
shll
sbb
or
sarl
or
sti
pop
xor
xor
data16
xchg
push
or
clc
dec
push
mov
jb,pt
call
and
fucompp
push
mov
fcmovu
dec
movsl
mov
adc
rcl
scas
in
jmp
lret
push
out
int3
ret
jno
mov
jb
cmpb
push
pop
stos
leave
jl
adc
inc
lock
pop
in
cs
insl
pop
out
ror
push
mov
cmp
inc
jecxz
cmpl
daa
xor
sbb
adc
push
jnp
sti
fs
pop
jnp
fnstsw
shlb
inc
repz
dec
lock
lret
push
loopne
push
lock
adc
cmpsl
push
sub
xor
out
int
imul
cltd
xor
adc
xchg
scas
or
lcall
pusha
fdivr
jns
je
scas
mov
jl
mov
jo
inc
jno
data16
sub
xchg
out
test
mov
push
rcl
dec
and
decb
movsl
out
sbb
jg
xchg
pushf
push
xor
pop
mov
or
push
pushf
mov
xor
mov
aas
mov
hlt
arpl
hlt
loopne
jmp
arpl
es
leave
repnz
mov
es
shlb
and
jne
sbb
sub
pop
xor
xchg
lahf
inc
xchg
push
mov
addr16
mov
sahf
lret
jo
test
mov
jge
addr16
or
loopne
in
sahf
inc
mov
test
adc
cli
pop
lret
mov
sbb
push
dec
jp
js
repz
ficompl
scas
push
loope
jo
ret
dec
mov
fcoml
adc
mov
sti
ljmp
lcall
add
test
lock
into
mov
cs
jns
aad
pop
or
stos
scas
xchg
pop
add
lods
jmp
pusha
stos
mov
lret
pop
stc
repnz
arpl
cmpsb
ljmp
mov
es
add
mov
addr16
loopne
mov
shrl
dec
in
xchg
jg
inc
xchg
or
int3
mov
mov
dec
das
aaa
and
test
inc
pop
outsb
scas
jae
outsb
mov
pop
xor
out
ljmp
aas
loope
jp
repnz
iret
sub
inc
pop
stos
push
or
call
dec
fimull
das
push
sbb
adc
push
pmullw
mov
outsl
cmp
aam
and
xor
or
mov
or
dec
and
lret
data16
dec
inc
int3
in
xchg
cmc
jge
repz
jno
push
cmp
shll
xchg
pop
rsm
cli
jb
ret
cltd
push
cli
imul
pop
dec
jecxz
sub
push
mov
jecxz
xlat
mov
pop
lret
rcr
movsb
es
jle
or
popf
sub
gs
cmp
std
add
call
xchg
ret
inc
scas
jne
lret
hlt
addr16
mov
movsl
sub
daa
repz
mov
mov
test
xorb
dec
dec
jmp
cmp
mov
mov
les
fnstcw
lret
mov
sbb
sub
dec
mov
fwait
popf
mov
call
mov
fwait
pop
loop
out
leave
cmp
in
lahf
or
imul
iret
rcrb
push
stc
mov
bound
rcr
xlat
popf
push
inc
rclb
out
flds
sbb
loope
xlat
mov
iret
lret
mov
mov
push
imul
ljmp
and
adc
sub
mov
rolb
imul
adc
xchg
lcall
das
push
cli
pop
fwait
jle
mov
mov
and
xchg
pop
fidivrl
fcoml
jp
mov
push
test
daa
inc
pop
mov
and
and
cmp
xor
or
inc
jg
jl
int3
mov
pop
or
or
mov
mov
fcoms
dec
outsl
and
dec
aad
js
or
ss
aas
adc
js
jnp
cltd
pop
mov
push
pusha
xchg
mov
jns
xchg
mov
movb
jno
jno
loope
std
xor
jno
jp
mov
push
shlb
push
mov
mov
and
cltd
repz
fstps
daa
mov
aam
aas
sbb
adc
inc
pop
in
mov
out
adc
mov
lods
adc
pop
shll
rclb
cmpsl
mov
push
dec
and
stc
dec
test
push
adc
cmpsl
ret
dec
sub
sbb
test
push
dec
sub
pop
jo
sarb
add
dec
leave
add
mov
push
add
and
mov
fwait
int
and
fbstp
xor
rcr
push
cli
fcmovb
test
jnp
lcall
add
test
ds
popa
ret
jp
push
ret
sub
add
mov
leave
mov
rolb
in
in
adc
adcl
mov
icebp
in
outsb
stc
jl
in
add
pop
mov
pushf
nop
scas
in
or
xchg
adc
xor
dec
imul
push
sub
cltd
or
ret
adcb
imul
pop
cmp
xchg
sub
cmpsl
jge
repz
or
sub
mov
adc
shlb
xor
orb
cmp
out
dec
daa
push
roll
mov
jnp
sbb
aam
push
mov
lods
fbld
in
jg
jbe
lcall
jecxz
push
ljmp
rcrb
mov
cwtl
xchg
pop
gs
call
decb
jo
xorb
lock
jns
push
pop
mov
mov
lcall
clc
xor
pop
and
ljmp
mov
cld
xor
pop
adc
gs
fsubrp
data16
hlt
roll
cli
hlt
pop
sub
std
pusha
cmp
mov
insl
pop
jno
and
xor
int
in
out
ljmp
imulb
daa
mov
insl
pop
andb
mov
in
sbb
aam
pop
xchg
fstpt
int3
lret
mov
mov
jp
outsb
addr16
cmp
xor
mov
inc
xor
fwait
repz
fs
push
out
leave
cmp
adc
lea
pop
fisttpll
and
ja
sub
cltd
lds
loop
pusha
cmp
dec
cmpsl
mov
cs
inc
push
push
je
pop
into
cld
and
scas
push
cmp
outsl
pop
in
insl
loopne
cld
mov
and
inc
mov
mov
test
sbb
in
add
xchg
repz
cmp
fnstcw
cmp
mov
jne
clc
sub
xchg
xor
pop
test
push
mov
leave
lahf
and
add
pushf
fwait
and
jmp
xchg
jns
dec
test
bound
cmpsb
mov
mov
fsubrs
pop
out
xor
push
js
mov
enter
cmp
stc
neg
sub
clc
mov
and
xchg
subl
mov
mov
jae
and
inc
les
loopne
test
add
int
and
outsb
loopne
jmp
jp
repz
rcrb
es
xchg
or
hlt
loop
adc
mov
cmp
xchg
cwtl
push
ja
data16
cmp
ficompl
daa
addl
in
loop,pn
das
dec
shrb
cmpsb
outsl
lock
or
sbb
push
js
sbb
or
add
adc
aad
mov
stos
push
outsb
in
ds
mov
mov
subb
rorb
sub
or
mov
mov
push
mov
sbb
fisubs
call
xchg
jle
out
mov
int3
push
push
mov
popa
scas
lds
cltd
jbe
sbb
out
addb
mov
jb
testb
out
stc
movsb
mov
lods
insl
jg
addr16
xchg
fwait
mov
daa
aam
xchg
das
jmp
and
add
jno
scas
or
aas
aas
jecxz
rcr
cmp
dec
test
call
or
cmpsb
out
dec
lods
adc
andb
daa
xor
lea
out
pop
bound
sti
xor
aas
data16
jb
mov
push
icebp
xchg
pop
cli
shrb
sbb
ret
mov
sti
insb
sub
cmp
mov
nop
push
ror
pop
mov
aam
cmp
xchg
mov
stc
outsl
imul
xor
and
xor
push
gs
sub
inc
or
hlt
enter
outsb
pop
sahf
popa
shll
lock
pop
loop
lds
out
add
in
sbb
test
and
jbe
aam
xor
hlt
push
sti
cwtl
pop
or
or
cmc
push
xlat
jecxz
mov
xor
dec
cmp
jge
xchg
and
std
dec
jnp
pop
jno
cli
aam
lods
mov
fcmovne
xchg
xor
addr16
cmp
data16
mov
mov
pop
xor
out
ja
sub
pmulhuw
into
xor
xor
fists
adc
les
and
add
test
and
aam
cmp
or
mov
sub
stc
push
jnp
sub
cltd
push
lret
adc
xor
sarb
cli
adc
push
out
je
xchg
sahf
and
das
xchg
adc
jo
adc
inc
sbb
mov
xchg
std
dec
mov
jno
mov
outsl
aam
mov
adc
adc
andl
lcall
std
aam
sub
sar
out
cmp
frstor
add
lods
cmpsb
fnsave
ret
stc
add
add
adc
mov
fcompl
testb
add
xor
aas
int3
mov
call
loopne
sub
loop
data16
cmp
xchg
fisttpll
dec
add
add
cmpsl
and
pop
push
outsb
pop
cmp
jle
loope
mov
popf
mov
push
test
fdivrs
push
xor
adc
sar
lea
enter
cwtl
jbe
addr16
inc
mov
push
push
out
or
sbb
dec
jp
mov
mov
push
jae
push
int3
lock
fs
mov
sbb
mov
daa
mov
mov
sub
push
iret
jle
sbb
mov
add
ds
and
adc
mov
aam
push
and
jmp
push
sbb
xchg
jb
cld
pop
out
pop
or
movsb
cmp
cmp
addl
xor
scas
call
scas
int
add
loop
xchg
scas
dec
bnd
int
or
inc
and
aad
in
fsubs
das
jno
jl
lret
outsb
jbe
cmp
std
cmpsl
sahf
pop
bound
scas
aas
lcall
shrb
jne
push
cvtdq2ps
bnd
cs
outsl
ljmp
ret
jle
mov
shrb
mov
jecxz
rclb
dec
cltd
xchg
jp
adc
jns
cmp
mov
in
stc
jno
sub
inc
addr16
scas
sbb
xchg
daa
and
mov
sub
imul
mov
data16
and
ja
lcall
and
pop
pop
xchg
mov
jg
push
add
mov
out
xchg
mov
leave
scas
xchg
xor
sti
imul
and
ljmp
lods
ficoms
jl
jmp
loop
stc
test
scas
pop
or
fdivrs
scas
lahf
popa
push
add
and
cmpsb
mov
cmp
test
push
sbb
cmpsl
dec
cwtl
sbb
into
out
js
fs
add
rcrb
fcoml
sbb
repnz
insb
popa
pop
fists
outsb
arpl
inc
add
or
cld
sub
sub
xchg
lret
inc
scas
mov
mov
sub
sbb
add
xor
xchg
cli
fnstsw
add
or
add
mov
fisttps
jno
dec
mov
xchg
jge
jno
adc
test
jb
xchg
shl
aam
and
xchg
fucomip
inc
gs
test
test
out
enter
mov
mov
cmp
add
idiv
push
cmp
ds
push
sbb
sbb
xchg
mov
or
lock
xlat
sbb
test
jae
sti
xor
shl
add
pop
sub
fimuls
bound
or
call
les
movsl
ja
pop
jecxz
push
mov
out
pop
adc
push
leave
push
inc
dec
xor
std
sub
les
js
cmp
std
cwtl
mov
in
or
pop
jbe
or
mov
jo
adcb
and
sti
sbb
stc
rcrl
mov
xchg
pop
cmpsb
loop
mov
push
fbstp
sbb
in
fisubrs
les
repz
or
jg
add
addr16
jecxz
lahf
cmp
ljmp
dec
lods
adc
lods
lret
sub
cmc
fstpl
jl
sbb
repnz
add
xchg
fcmovnb
jbe
push
mov
mov
xchg
lcall
and
in
xchg
loopne
mov
push
out
or
jno
cs
push
push
cmp
in
mov
mov
lcall
cmp
inc
add
add
mov
push
pusha
cmp
shll
sti
pop
fwait
or
dec
in
ret
icebp
adc
movsb
test
adc
aaa
adc
inc
popf
cmp
in
ret
movsl
push
arpl
int
int
insb
int
sbb
jo
repz
fwait
jno
cmp
cmp
jae
repnz
pop
mov
pusha
bound
outsb
je
nop
jb
loope
inc
cs
clc
xor
inc
fistpl
add
aas
fsts
data16
stos
jle
pop
cmp
dec
pop
je
das
mov
xor
and
stos
mov
adc
push
subb
jmp
mov
inc
outsb
ret
clc
icebp
popa
lcall
xchg
addb
into
daa
mov
lods
mov
int
or
adc
mov
dec
pusha
lock
std
jle
xchg
dec
insl
rolb
std
or
nop
push
cmpsb
test
adc
push
lds
add
aaa
iret
and
inc
push
es
in
fcomps
sbb
stc
pop
or
std
je
or
add
loop
cmp
std
enter
push
jl
shll
push
int3
and
xor
push
or
push
out
out
add
and
lea
sbb
sub
roll
in
inc
adc
test
lret
and
stos
cmpsb
adc
push
mov
inc
xchg
test
mov
dec
mov
and
mov
cmc
test
fistpll
js
shr
js
push
sub
cmp
mov
imul
testb
pop
out
nop
sahf
test
roll
jle
das
xchg
mov
dec
cs
mov
imul
dec
push
das
es
cld
out
inc
iret
xor
cmc
cmpsl
insb
add
cs
sub
lahf
jnp
hlt
iret
enter
or
outsl
and
push
fiadds
stos
mov
out
jb
xchg
sbb
aad
sub
cmc
xor
sbb
fsubrs
pop
test
into
push
mov
mov
mov
push
inc
and
cmp
cld
jecxz
int
pop
imul
shl
push
test
lahf
add
cmpsb
push
loopne
mov
xor
inc
pop
fs
out
ret
das
andb
sub
pushf
idivb
call
mov
xchg
and
inc
int3
xchg
xor
js
inc
push
arpl
xor
adc
lret
rorb
inc
jecxz
xor
sbb
mov
xchg
enter
and
fidivrs
loop
ss
loope
gs
push
push
jmp
sub
je
add
fidivs
mov
xchg
add
xchg
out
add
mov
repz
jo
jmp
pusha
stos
add
xchg
and
mov
dec
push
in
popf
sbb
push
insb
test
repnz
ret
mov
push
cmp
popf
lret
mov
lcall
mov
or
loope
and
push
cmpsb
push
push
fisttpll
outsl
xor
push
aas
shrl
push
insb
pop
cli
dec
packssdw
pushf
or
fists
push
in
cld
je
int3
popa
xor
dec
repnz
dec
or
and
test
into
pop
add
in
shll
stos
sarl
add
mov
lea
add
sar
in
cld
mov
xor
jae
dec
cmpl
adcl
jl
lret
movsb
sbb
adc
inc
lock
jmp
add
or
pop
idivb
or
cmp
leave
adc
and
add
lods
mov
iret
out
addb
shll
push
out
or
mov
add
dec
jg
sbb
cmp
mov
stc
jb
or
dec
mov
loopne
xchg
and
in
cmp
pop
stos
in
ss
mov
mov
in
stc
adc
and
bound
ja
int
push
cmp
pop
lret
sub
mov
popa
sbb
push
and
fcoms
ss
dec
insl
ljmp
loopne
jge
mov
dec
in
sbb
iret
add
mov
push
sbbb
les
or
xchg
jmp
pop
push
enter
icebp
dec
jno
orb
and
adc
sub
shrl
jmp
and
inc
xchg
ljmp
aad
cmc
mov
sbb
add
cmp
inc
or
pop
or
and
jbe
pop
icebp
cli
push
push
xor
das
mov
inc
leave
push
mov
xorb
dec
and
adc
scas
sbb
cmpsb
aas
in
adc
lds
mov
or
sahf
xor
call
out
into
pop
fcomps
movsb
nop
hlt
fwait
lahf
lahf
jo
xor
jmp
mov
popa
aad
test
imul
jno
loop
clc
xor
or
add
and
xchg
cwtl
sahf
pop
adc
lret
push
ljmp
es
ljmp
andl
push
movsb
fists
cmp
rolb
mov
test
iret
lods
jb
outsl
arpl
sub
imul
and
or
ds
push
js
jb
add
jle
jo
push
xor
scas
std
sbb
out
jp
mov
or
stos
and
mov
jbe
sbb
scas
in
hlt
inc
scas
inc
xchg
test
es
cli
sbb
jecxz
jbe
pusha
push
jge
jbe
outsl
mov
push
data16
add
cmp
cmp
push
aad
sbb
mov
movsl
sub
mov
cmpsb
mov
xorl
pop
call
daa
addr16
xlat
push
imul
xor
mov
and
inc
sarl
cs
push
cmp
in
cmpsl
pop
cmp
add
push
fcmovu
test
repnz
idiv
sbb
aas
cmp
dec
and
fistpl
push
adc
sbb
addr16
jp
jg
aaa
in
mov
xchg
lock
mov
and
xor
adc
cmp
insl
pop
fs
add
sub
sbb
adc
lds
lret
cmp
aaa
push
jne
clc
mov
jg
xchg
call
in
mov
dec
fwait
cmp
add
add
or
xor
inc
jbe
adcl
mov
push
popf
lea
sbb
xchg
aad
lock
jo
inc
cmpsb
and
stc
add
sub
or
adc
loop
cmp
xchg
cmp
mov
cmpsb
aad
mov
dec
pop
nop
stos
sbb
jecxz
xor
cltd
xor
jbe
jp
pushf
mov
or
jg
fisubrl
sub
fisttpl
xchg
insb
or
pushf
ds
out
mov
xchg
cmpb
pop
inc
mov
and
pop
nop
or
mov
mov
dec
fiadds
popf
and
fstps
mov
sbb
les
mov
jnp
push
push
xor
pop
sub
pop
clc
inc
push
xor
xor
aas
int3
push
mov
imul
jns
add
xor
ss
adc
cmp
or
add
inc
dec
and
sub
pop
pop
or
add
popf
xchg
pop
adc
and
fcomps
out
lock
xchg
cwtl
jae
movsl
push
xchg
sub
push
pop
pop
popa
sbb
push
insl
out
pop
sub
xorl
ds
ret
sbb
sub
xchg
daa
jmp
and
mov
add
pop
pop
add
jb
ret
sbb
mov
cmp
insl
mov
cld
xor
push
sbb
push
fwait
popf
or
aad
mov
cmpsb
in
mov
test
push
mov
outsb
shl
mov
mov
loope
sub
jecxz
cmp
xor
push
adc
mov
cmp
jnp
shlb
loopne
scas
lcall
in
or
sbb
push
cmp
jb
es
push
mov
sub
jae
mov
andl
pop
push
lahf
add
mov
add
leave
loopne
xor
pop
mov
mov
cmp
mov
xorl
jns
test
cli
and
fildll
sub
push
and
mov
test
imul
cltd
cmpsl
clc
cmp
jbe
mov
leave
inc
mov
idivb
cmp
mov
icebp
mov
pusha
cltd
mov
mov
add
cmp
in
sub
aas
add
cwtl
dec
jnp
cmp
adc
mov
mov
cli
inc
push
fsubl
test
icebp
mov
mov
pop
int3
fcmovbe
push
and
mov
call
dec
arpl
sub
incb
aaa
fimuls
hlt
mov
mov
jmp
cmp
xor
loop
js
je
das
vrsqrtps
dec
std
popa
cmpsb
hlt
mov
xchg
or
mov
and
ja
pop
es
shll
inc
jmp
imul
movsl
shlb
mov
mov
sbb
xor
add
push
insb
mov
outsl
icebp
pop
stos
adcb
mov
inc
and
mov
mov
js
lods
xlat
sub
insl
out
leave
pop
mov
adc
push
mov
mov
mov
or
and
fsubs
jae
or
xor
inc
xchg
jbe
popf
adc
cwtl
push
pop
enter
adc
cmp
push
adc
xchg
sub
lods
hlt
dec
cld
push
mov
loop
mov
mov
mov
sahf
daa
jo
cmp
push
xchg
mov
mov
mov
test
mov
nop
inc
out
into
mov
arpl
fbstp
sub
les
mov
daa
or
jns
dec
or
mov
lds
pop
mov
mov
mov
insl
shll
push
mov
jle
movsb
scas
xchg
push
outsl
ljmp
cltd
push
lret
push
push
je
inc
jle
ret
jmp
push
and
js
stos
xor
cwtl
cmp
adc
or
into
push
andl
xchg
push
mov
sbb
dec
sub
xchg
dec
or
fdiv
and
pop
lcall
stos
hlt
xchg
stos
or
xor
enter
xor
pop
and
pushf
mov
adc
cmp
bound
mov
and
cli
dec
push
cli
mov
enter
fnsave
mov
neg
push
adc
mov
dec
insl
daa
or
cmp
cmp
xlat
pop
fmul
xchg
pop
cmp
fcom
jbe
pop
sahf
movsl
mov
mov
inc
fmuls
mov
fsubrl
sbb
lret
add
mov
cmp
xor
sbb
icebp
sbb
mov
cmp
xor
dec
sbb
add
stc
imul
cli
mov
jb
lock
push
enter
and
out
jmp
addr16
lds
popl
loop
dec
add
testl
subl
mov
mov
es
stc
sub
sub
or
icebp
nop
enter
pop
mov
sub
mov
jne
mov
mov
test
and
cmp
scas
mov
lods
fadds
sbb
lods
and
and
dec
jp
aam
pop
sub
sahf
push
mov
insl
addb
adc
faddl
jbe
xor
xchg
mov
push
push
repnz
ret
popf
lds
cltd
leave
dec
mov
mov
jb
shll
lods
fwait
xchg
push
xchg
mov
jg
mov
aam
outsb
adc
sub
lods
pop
dec
pop
leave
add
sub
push
sbb
repnz
add
push
int
add
jg
imul
fcmovu
std
lahf
shrb
iret
aaa
jo
out
cmp
and
sbb
test
test
add
pop
jns
pushf
sub
dec
adc
inc
flds
orl
lods
cmp
fdivrl
add
lahf
push
cmp
fwait
mov
outsb
sti
imul
outsl
hlt
outsb
addr16
mov
dec
xor
add
mov
dec
inc
jp
cmc
dec
mov
mov
lods
sbb
xchg
pop
mov
inc
jns
jl
jo
inc
dec
sbb
push
jp
dec
xchg
mov
lahf
jle
popf
mov
mov
cmpsl
sbb
jmp
adc
mov
pop
in
aaa
movsl
xchg
and
or
or
je
mov
pusha
xchg
sub
push
rcr
or
popf
cmp
jmp
sahf
xor
out
inc
or
pop
arpl
mov
movsb
jb
jp
out
pusha
xchg
sub
ret
or
sahf
sub
or
jbe
sarl
stos
out
aaa
aaa
mov
sub
out
xor
cmpsb
shr
dec
mov
cli
call
fisubrl
fisubl
jb
xchg
mov
mov
ret
lock
adc
lret
xchg
mov
adc
nop
int
lcall
jp
push
push
mov
pop
aas
mov
pop
mov
test
aas
test
pop
pop
mov
push
cli
loop
stc
shl
pop
adc
mov
mov
fisubs
sub
jmp
push
std
aaa
test
mov
jl
mov
ret
or
pop
cltd
or
in
hlt
into
hlt
nop
mov
sahf
xchg
cmp
mov
divl
adc
adc
mov
cmpsb
test
incb
sub
pop
push
stos
xlat
pop
clc
jmp
shlb
aam
pop
daa
xchg
shrl
int
movsl
inc
aaa
and
push
lret
cmpb
daa
push
or
sti
push
into
jo
idivl
add
add
adc
sbbb
mov
in
insl
fsubrs
pop
adc
inc
scas
int
rcr
fistl
xchg
push
cwtl
push
or
dec
cld
mov
lods
add
movsb
pop
pop
mov
pop
scas
imul
or
repz
outsl
pusha
push
push
leave
jns
xchg
adc
sti
ret
out
mov
add
mov
jp
inc
cli
xchg
int
add
push
aaa
jnp
cs
mov
sbb
xchg
inc
leave
into
xchg
mov
jb
js
out
fnsave
push
add
ds
cld
inc
adc
or
int3
mov
fsubl
ja
aad
push
ja
pop
arpl
sub
push
loopne
inc
cmp
dec
push
mov
sub
add
mov
ror
movsl
mov
test
jmp
dec
arpl
sub
mov
orl
in
adcl
push
lods
ss
sub
cmc
ret
ds
pop
pop
fidivrs
or
mov
sub
sub
mov
cmpsl
sti
nop
mov
loope
cltd
inc
adc
push
hlt
mov
dec
and
push
test
cmp
pop
push
push
fwait
insl
xor
sub
add
cmp
mov
subb
ja
loope
cmp
fsubrs
roll
adc
sub
cmp
xchg
xchg
repz
adcb
iret
push
mov
popf
jno
in
pop
scas
add
push
fs
mov
sbbb
fdiv
jb
mov
les
fisubrs
dec
insb
add
ret
enter
imul
inc
sahf
insb
addr16
aam
jl
add
sbb
jp
push
jae
test
rcr
jmp
xor
add
push
std
mov
cmc
fcmovb
add
outsb
js
stc
pop
mov
les
roll
adc
xor
adc
jb
in
pop
aas
sti
sub
mov
imul
push
ret
push
add
loope
sbb
pop
sub
shrl
lahf
jmp
sbb
cltd
insb
mov
arpl
mov
inc
fsubl
jae
out
in
cmpsl
stc
inc
mov
add
pop
and
in
rolb
movsl
adc
insl
jnp
lret
or
dec
or
ret
scas
pop
loop
cld
push
adc
jmp
add
fcmovbe
jge
inc
xchg
mov
pop
sub
or
arpl
cmc
ss
icebp
sub
pop
inc
fldcw
jecxz
cmpsb
mov
addr16
xor
rorb
sti
jmp
dec
dec
repnz
leave
pushf
mov
sub
rcrb
popf
inc
jmp
popa
call
adc
gs
jge
out
flds
pop
mov
push
jl
xchg
push
les
xchg
es
push
cmpsl
xchg
sub
cmpsb
dec
rol
adc
push
add
popa
xor
in
push
movsl
mov
ja
sbb
cmp
cmc
shlb
ds
into
or
sbb
xchg
xchg
inc
sti
cmp
fisubl
test
lret
add
dec
sti
insl
mov
adc
xchg
cmp
int
sub
fidivrl
cwtl
push
lret
jmp
es
xor
hlt
push
lret
xchg
add
push
pusha
aaa
in
adc
xchg
call
xorb
jno
sbb
insb
mov
mov
inc
ror
dec
add
shrl
inc
mov
add
jmp
lds
sti
lock
stos
jl
int
sbb
cmp
test
orb
sub
add
icebp
repnz
loope
push
mov
pop
inc
addr16
and
mov
pushf
ret
pop
or
dec
call
out
shll
inc
stos
cltd
pushf
rcl
outsl
adc
lock
daa
roll
cld
pusha
cmc
cs
and
inc
xchg
cmp
in
fists
pushf
push
push
pusha
loope
mov
leave
or
lea
aaa
push
cmpsl
lahf
cs
mov
inc
pop
loope
std
sub
les
nop
daa
movsl
scas
lds
lods
pop
shlb
roll
mov
inc
inc
mov
jb
xchg
fs
xchg
jmp
fistps
mov
dec
jp
stc
jo
xor
ret
dec
jecxz
mov
sub
xchg
and
sbb
xor
icebp
xor
xchg
push
mov
scas
test
xchg
push
pushf
or
push
ljmp
test
lods
add
add
lea
mov
adc
gs
bound
stos
cmp
jae
iret
jecxz
jne
xor
add
cmc
call
scas
scas
dec
daa
inc
nop
or
mov
mov
add
xor
ja
push
pop
dec
rorb
mov
cld
adc
pop
jae
loopne
xchg
shrb
mov
and
inc
pop
sub
xor
mov
push
push
mov
not
jge
cs
ljmp
mov
or
cmp
xor
pop
or
jle
lret
sub
xor
sahf
mov
or
pop
dec
mov
loopne
jmp
stos
int
aam
jl
mov
insb
outsb
mov
pop
fildl
call
ds
sbb
ret
shlb
sbb
je
gs
add
rorl
jae
adc
add
clc
movsl
int
push
out
cmpsl
aaa
stos
in
push
add
mov
ds
movsl
loopne
loop
push
jmp
inc
mov
popa
mov
or
pop
aad
nop
jmp
cmp
outsl
push
jge
mov
mov
lahf
pop
sarb
into
stos
inc
sub
xchg
es
int3
add
fadd
pop
dec
and
enter
aaa
ret
inc
jbe
nop
jnp
fldl
mov
push
fistps
or
vpsrad
xchg
jne
repnz
inc
pop
inc
pop
sarl
pop
xor
xchg
les
push
jo
scas
dec
in
aad
aas
add
add
pushf
pushw
mov
push
fimull
pop
movsl
fldcw
fwait
cmp
test
sbb
cmp
out
stos
fnstsw
lcall
push
sbb
mov
arpl
stc
sbb
sub
add
out
dec
ret
imul
cli
mov
mov
push
mov
imulb
shll
adcl
aaa
daa
mov
xor
mov
call
cmpsb
mov
sub
adc
data16
leave
xlat
dec
bound
sbb
sub
jb
pop
pop
and
xor
xlat
aad
or
push
push
xchg
mov
outsb
cmp
les
add
imul
or
fs
fldenv
dec
inc
cmp
push
add
cmp
jae
sub
cmp
das
gs
mov
mov
pop
aaa
jl
rcr
leave
fists
xlat
push
int3
push
ret
xor
scas
daa
or
mov
xchg
xchg
or
mov
cmp
popf
movsb
inc
arpl
pop
outsl
cmc
and
add
mov
lcall
jnp
push
iret
jns
or
jl
or
pop
or
imul
xchg
stos
and
xor
mov
lods
cmp
jns
cmp
sub
xchg
js
mov
dec
rcr
pop
cmp
aas
or
and
sub
pushf
imul
add
shlb
fs
decl
mov
xchg
mov
pushf
test
cmpsl
xchg
xlat
in
sbb
je
lret
aad
into
iret
xchg
pop
out
int3
insl
pusha
xor
sbb
or
mov
loopne
mov
jg
outsl
imul
or
jecxz
pop
jecxz
ret
push
mov
pop
fstpl
pop
sbb
add
cs
xchg
stc
ret
add
mov
dec
stos
adc
lock
daa
js
fidivrl
pop
mov
shrl
and
popa
sbb
push
aad
inc
push
je
movsl
or
movsb
stc
icebp
stos
jns
setnp
and
das
cmpsb
in
ljmp
push
xor
cmpsb
cmp
xor
jae
push
popf
rorl
jbe
add
jge
sbbl
out
xchg
dec
push
adc
pop
js
cmc
mov
and
mov
pop
icebp
adc
sti
sbb
addr16
aaa
cmpsl
scas
cmp
ljmp
frstor
lds
xor
leave
lods
mov
cmpsl
adc
adc
ret
mov
icebp
fwait
popa
pop
arpl
mov
rcrb
or
jle
lods
xor
scas
mov
insb
testl
stc
in
clc
imul
xchg
and
sbb
into
mov
cmpb
add
sbb
aad
fs
push
xchg
cmp
jae
pushl
or
push
inc
pop
sbb
es
mov
lahf
inc
es
repz
cmc
or
rcrl
js
or
xor
sbb
test
push
dec
jmp
xchg
jl
sbb
pop
dec
pop
popf
push
lea
out
sbb
mov
cmp
rol
dec
pushf
xchg
xchg
scas
pop
and
stc
iret
repz
pop
xchg
lahf
and
and
add
fwait
cmp
sub
push
mov
sub
ljmp
outsb
push
cmc
test
aad
mov
mov
push
test
mov
jmp
mov
out
sbb
inc
push
pushl
addr16
push
cld
lahf
jne
xor
jl
mov
jge
mov
adc
jo
in
mov
ret
add
xchg
jmp
add
dec
sar
push
pop
in
enter
push
out
daa
fbld
lret
push
sub
mov
rclb
dec
push
or
and
mov
sub
dec
jmp
xchg
or
ficoml
mov
push
scas
adc
mov
in
xor
push
mov
fimuls
js
pushl
std
jae
and
sub
lahf
cmp
call
cmpsl
ret
outsb
push
mov
scas
addr16
call
xchg
movsb
push
mov
daa
in
aas
inc
jno
sub
shlb
inc
push
cmp
sub
inc
push
push
push
mov
lcall
nop
popf
ljmp
enter
mov
out
and
and
cmp
cmp
and
sbb
adcb
fcoml
and
xlat
jp
pop
aad
subl
xchg
xlat
cmp
cmp
fiadds
adc
sarb
mov
pop
sbb
or
lock
cltd
ja
lcall
or
sbb
gs
cmp
and
enter
add
lret
add
mov
rorb
push
jl
into
test
pop
int3
mov
xorb
hlt
push
and
xor
pop
jge
ds
jnp
cltd
pop
push
test
arpl
out
repnz
jae
push
inc
ds
jo
push
js
cmp
inc
js
push
or
aam
pop
gs
daa
push
lods
pop
inc
test
shll
xor
stos
cs
aaa
mov
std
mov
sbb
or
adc
fiaddl
pusha
sbb
mov
and
or
xchg
dec
pop
adc
cmp
add
les
push
sub
aaa
repnz
mov
or
mov
push
cmpsl
push
push
lods
jne
sub
dec
lret
push
test
sbb
push
loopne
ljmp
mov
push
pop
xor
pop
adc
push
sbb
bnd
insl
push
xorl
pop
popa
jb
sbb
mov
clc
push
sbb
fistps
shrl
inc
cmpsb
dec
xorb
inc
inc
iret
jle
scas
lcall
test
jg
mov
mov
sbb
call
adc
int3
shl
mov
aaa
int
test
fldenv
rclb
aaa
arpl
enter
inc
lods
sbbl
shll
and
mov
jg
sbb
test
jmp
imul
pop
dec
mov
loope
mov
jecxz
das
cmp
pusha
out
jle
or
cmp
inc
arpl
sbb
cmp
jne
and
cs
ret
jb
sub
out
cld
or
adc
pop
mov
gs
xchg
icebp
pusha
cmp
stos
xlat
cwtl
mov
xchg
pop
jne
or
call
pop
cmp
ds
test
jmp
aad
add
xchg
xor
cmp
outsb
testl
int
mov
out
add
push
sbb
mov
mov
jne
or
clc
push
push
or
add
sti
pop
mov
jb
or
dec
and
cmc
inc
je
and
daa
sub
ja
movsl
jb
xchg
test
sar
lock
in
fistpl
loop
dec
shl
xor
ret
aas
or
sub
fs
aaa
ss
cmp
jns
push
pop
nop
cmp
loopne
cmpsb
adc
lock
shll
pop
mov
mov
push
pop
outsl
out
popa
std
jo
negb
std
sbb
jl
mov
lock
les
adc
repnz
push
leave
mov
dec
mov
movsl
or
fbstp
adc
fisubrs
pop
pop
mov
cmp
mov
mov
rclb
xchg
lahf
dec
stos
mov
aaa
jo
inc
sub
leave
fs
inc
and
daa
mov
call
jae
sub
xor
iret
cmp
aas
lea
xchg
push
in
xor
rclb
mov
dec
lock
jae
das
loope
insb
nop
jg
push
jbe
jp
mov
push
mov
sub
jnp
lock
xor
ja
and
push
lods
dec
lods
xor
sbb
ret
cli
cmp
les
stos
pop
cmp
call
lock
jg
mov
dec
daa
sbb
mov
jo
inc
sbb
ret
inc
push
inc
cld
jno
jp
scas
shlb
or
in
call
in
dec
mov
pop
orl
scas
dec
jg
push
cmp
sbb
mov
add
adc
cltd
pop
adc
loop
pop
or
push
jp
inc
frstor
int3
mov
call
mov
and
mov
inc
arpl
pop
scas
cs
jle
rol
pop
rcrb
fsubrl
xchg
mov
scas
lret
xchg
pop
lret
jne
mov
sbb
or
lock
mov
test
stc
cmp
dec
or
mov
and
addr16
add
in
cmc
push
cmpsb
xchg
fxch
sbb
loop
sbb
add
loopne
into
mov
adc
fimuls
jp
mov
test
in
scas
mov
mov
mov
jne
xchg
jns
push
cmp
ljmp
xor
ljmp
scas
inc
mov
sahf
cmp
sarb
aas
xchg
push
pop
and
imul
fcomps
dec
incb
cmp
push
pop
sub
push
mov
into
and
aas
push
cs
rclb
mov
std
sub
xchg
insb
xor
mov
shld
pusha
mov
xor
push
sub
pop
dec
lods
insl
sub
mov
inc
out
fucompp
cmp
mov
pop
stos
lahf
cmpsb
xchg
popf
cmp
xor
mov
cmp
popf
mov
xchg
call
pushf
insl
stc
adcb
sahf
jg
ljmp
ret
fstpl
adc
adc
ljmp
or
mov
jge
mov
addr16
push
add
jle
arpl
sbb
fwait
js
pushf
xor
out
clc
out
push
or
cli
pop
jne
mov
enter
push
sub
mov
jno
cwtl
adc
cmpsl
rcll
out
cmp
repnz
fadds
add
mov
ds
mov
mov
sub
dec
aam
mov
loop
test
pop
and
lods
cmc
div
or
sbb
mov
xor
jo
cmpb
mov
xor
mov
adc
mov
adc
push
stos
test
fsubs
fiaddl
lods
data16
adc
stc
dec
pop
jecxz
repz
shrl
push
lret
dec
bound
loop
push
cmovs
lea
inc
adc
fnsave
popa
jp
ret
fwait
bound
mov
imul
sbb
pop
in
in
cmp
and
mov
or
stos
xchg
and
add
mov
outsl
in
cld
mov
into
cmp
dec
in
subb
aad
dec
pop
ljmp
pop
inc
stos
and
mov
sbb
cs
add
icebp
or
mov
das
jbe
scas
push
mov
fildl
mov
std
sub
mov
imul
in
pushf
inc
xor
mov
flds
iret
sub
inc
pop
lods
adc
xchg
inc
push
pop
shll
in
shl
pop
adc
lcall
inc
adc
ljmp
lret
pop
in
jno
xor
lea
aaa
lret
hlt
cwtl
pop
cs
fstl
jbe
jmp
mov
cmp
daa
insl
stos
test
mov
fwait
rcl
test
paddb
xor
je
mov
ficomps
cltd
imul
push
test
jecxz
out
mov
mov
mov
push
popf
pop
xchg
lcall
pandn
add
dec
cmp
sbb
fistpl
dec
dec
and
or
mov
mov
daa
jl
data16
pop
and
add
jne
sub
movsb
add
repnz
dec
mul
cld
dec
xchg
cmp
jns
das
cmp
aaa
cs
hlt
gs
nop
test
stc
mov
sub
movsl
js
lret
rorb
lret
lcall
ds
and
ret
jb
jne
mov
fiadds
inc
sub
pop
sub
xchg
testb
ss
popa
cld
mov
mov
incb
add
sbb
dec
daa
add
mov
and
push
in
out
loopne
push
stos
nop
mov
mov
repnz
mov
xorl
aam
sub
ret
lock
test
js
cmp
xchg
push
lods
sub
pand
jns
dec
shll
ja
mov
clc
mov
lcall
dec
subl
test
inc
sub
loop
sub
fdivl
sub
dec
adc
xor
mov
pop
clc
scas
inc
pop
pusha
pop
bound
sarl
fsub
int
xor
or
dec
sahf
or
lret
rorl
lcall
callw
lea
insb
and
and
ror
pop
inc
jecxz
fidivrs
inc
popf
test
lahf
or
out
fldcw
in
xor
loop
fistl
aad
mov
jp
sbb
push
mov
out
and
ljmp
pop
or
enter
scas
ja
test
cmpsl
push
jge
ss
lahf
in
jo
movsb
mov
test
adc
add
pop
into
mov
mov
das
sahf
push
test
mov
sub
mov
outsl
lret
or
subb
int
rolb
ljmp
ret
fisubrs
in
pop
adc
leave
dec
in
mov
mov
push
mov
ret
lock
cmp
jbe
loopne
cwtl
push
dec
add
std
jno
jecxz
inc
fwait
add
mov
or
or
cmp
je
xchg
loopne
push
lcall
cmp
pushf
fdivr
cmp
fwait
mov
jmp
in
jo
sub
cmovb
in
frstor
push
stos
mov
mov
mov
pop
pop
andl
outsb
loope
fnstsw
scas
sub
les
cli
adc
push
icebp
mov
sub
mov
cmp
icebp
cmp
and
mov
mov
cltd
push
mov
adc
rcrl
push
fistps
aaa
xchg
data16
adc
and
or
sbb
aaa
aad
inc
out
push
ja
fldenv
mov
cmpsl
dec
adc
mov
xor
bound
imul
gs
mov
and
push
frstor
sahf
insl
out
cmp
bound
enter
cmp
lfs
daa
lahf
call
xchg
ret
cld
test
loope
adc
jmp
mov
mov
xor
dec
enter
and
shrl
gs
fisttpl
scas
push
pusha
lods
lods
pop
pop
in
mov
mov
loopne
jge
out
clc
int3
mov
movzbl
sbb
std
mov
test
call
jge
pop
std
mov
dec
in
pop
xchg
repz
shll
es
inc
or
cmpsb
and
stc
enter
sbb
clc
sahf
jecxz
imulb
xlat
adc
add
pop
lock
jo
sbb
rcrb
add
cmp
stos
mov
jl
lcall
push
test
mov
fwait
jmp
cmpsb
sarb
xor
xor
fnsave
pop
add
push
xor
pcmpgtw
pop
ret
jp
push
mov
push
mov
aam
divl
vmovaps
mov
ret
pop
push
jnp
sbb
ja
and
jo
insl
dec
sbb
and
dec
in
and
loope
in
mov
cmp
je
nop
lods
out
pusha
jae
in
sbb
gs
xchg
daa
out
nop
movsb
es
xlat
or
pusha
sub
mov
test
lcall
in
out
lods
cmp
mov
scas
scas
xor
lahf
or
mov
cwtl
push
cmpsl
test
jbe
adc
outsl
xchg
push
mov
cmp
jo
jge
fisubrl
mov
mov
mov
xor
repnz
and
std
enter
dec
addr16
in
dec
add
push
mov
jecxz
daa
mov
insl
inc
mov
clc
out
and
insl
pop
push
popf
arpl
add
outsl
into
cmp
add
inc
testl
ja
iret
insl
dec
mov
test
out
loop
loope
nop
mov
cmp
jns
inc
test
inc
xor
and
hlt
pop
mov
bound
mov
jecxz
js
pop
xchg
mov
jae
clc
mov
cmpl
inc
jbe
and
push
jb
mov
jo
in
loopne
jl
sbb
mov
shrb
rcll
mov
push
sahf
out
int
cmpsl
fnstcw
add
lea
and
dec
fsts
mov
pop
adc
shlb
outsb
insl
loopne
push
mov
outsl
call
test
mov
es
mov
and
test
xor
outsl
iret
push
pop
subl
mov
insl
out
mov
int3
mov
lods
arpl
mov
loopne
call
xor
pop
sub
les
mov
and
fnsave
mov
stos
lahf
cmp
imul
sub
xlat
loopne
shl
adc
call
mov
scas
rep
adc
test
int
data16
push
jg
adc
or
ret
mov
aaa
add
sahf
cmpsb
adc
and
add
ret
dec
jno
push
jg
mov
cmc
dec
pop
ja
rorb
lods
out
jbe
dec
and
dec
notl
jne
adc
inc
testb
mov
jecxz
sub
pop
sub
iret
cmp
jg
pushf
add
xor
loop
test
cmp
jmp
ffreep
sbb
sub
pushf
xor
stos
mov
xor
fidivl
cmp
out
adc
jmp
sbb
push
inc
test
inc
sahf
repz
jo
sarb
or
xor
push
jecxz
pop
xchg
adc
mov
sub
mov
lock
push
dec
pop
fidivl
testb
sahf
mov
push
add
cltd
addr16
sti
stc
pop
lds
cbtw
cmpsl
repz
in
pop
gs
fstl
cmp
ficomps
roll
out
aam
jno
dec
or
xchg
std
scas
repnz
jmp
test
xor
test
mov
sti
pushf
xchg
add
hlt
ds
out
outsb
lea
cmp
cmp
test
ss
iret
sub
xor
hlt
orb
out
mov
movsl
dec
shlb
dec
cltd
jle
inc
inc
mov
and
cmp
dec
pop
push
icebp
js
push
dec
push
lea
mov
test
rolb
negl
pusha
cs
xor
out
jo
aad
call
fs
scas
mov
inc
jmp
repnz
stc
push
fiaddl
cmpsb
ja
pop
cmpsb
jo
jp
aas
dec
popf
or
xor
js
sub
mov
loopne
add
xor
mov
jp
jnp
aaa
push
or
mov
ja
in
jo
adc
incb
and
push
cmpsl
aam
add
xchg
insl
ljmp
fistl
out
dec
loop
fbld
inc
inc
pop
rcll
sub
fidivrs
pop
dec
mull
jae
sub
clc
pop
pop
push
xor
imul
mov
dec
push
das
cmp
shll
pop
dec
inc
scas
mov
mov
jecxz
in
sbb
es
subl
arpl
jg
dec
xchg
lcall
adc
inc
mov
ss
sub
insl
rcrb
sbb
stos
or
jae
incl
insl
out
mov
adc
xchg
movsl
out
inc
repnz
sub
in
les
cmpsb
mov
inc
cmpsl
jb
es
jns
popf
adc
cmp
mov
mov
cmp
push
cwtl
jl
repz
jbe
lods
add
and
jae
imul
orb
test
mov
sarl
and
dec
sub
into
jp
out
push
lret
cwtl
adc
sbb
addr16
sub
cmp
ljmp
add
jg
inc
add
jge
loop
dec
orb
or
xor
add
and
mov
ds
push
hlt
call
daa
pop
inc
pop
mov
cmp
test
mov
scas
bound
notl
xlat
int
xor
jnp
and
repnz
int
lods
hlt
inc
inc
roll
hlt
ss
notl
jne
out
or
mov
jp
jp
mov
inc
xchg
test
xchg
pop
ds
imul
sub
xchg
pop
cs
in
loope
and
pop
cltd
int
xor
lret
je
int
mov
loop
sub
std
scas
add
xor
sub
pop
in
popa
in
sbb
fistl
mov
adc
cmp
cmp
lahf
aas
cwtl
gs
ja
fists
add
imul
adc
sbb
jns
xor
movsl
jmp
fidivrl
mov
adc
loope
mov
loopne
inc
dec
add
fyl2x
sub
cs
inc
pop
jb
pushf
sbb
cmpsb
and
andl
push
aam
inc
or
inc
lds
xchg
fcmove
pushf
int
rol
sar
test
je
lret
mov
push
cmpsl
icebp
fisubl
js
push
call
insb
ret
xor
dec
in
jge
push
mov
jae
fnstsw
xlat
xor
and
stos
das
jcxz
and
or
lock
inc
fucom
fstpl
repnz
inc
or
sub
pop
mov
add
cs
insb
cmp
shrb
sub
xchg
dec
inc
subb
arpl
aam
mov
pop
sbb
xchg
xchg
mov
push
fldl
in
mov
xor
cmp
cmpsl
inc
scas
add
fistl
out
nop
cld
jecxz
enter
fsubs
sbb
sbb
lret
xchg
push
cmp
adc
notl
cmc
xlat
or
int3
shlb
adcl
inc
jmp
test
cwtl
mov
mov
outsb
adc
enter
push
adc
es
xchg
fldenv
int3
xchg
xor
cltd
les
push
or
sub
ds
aas
pop
push
mov
ss
xor
add
adc
ds
cmpsb
fildl
or
mov
fisttpll
negl
cltd
xchg
xor
mov
sub
out
lods
sub
popa
sub
mov
and
xchg
pusha
bound
mov
adcl
push
repz
outsb
mov
filds
hlt
sub
inc
jle
nop
jl
and
cwtl
sub
mov
add
daa
cmp
push
sbb
cmpsl
jle
cltd
mov
cld
mov
mov
jo
xchg
mov
mov
add
bound
cltd
je
fsts
cmp
push
dec
pop
cmc
pop
test
jmp
add
mov
in
dec
out
add
pop
push
or
cli
leave
cli
scas
mov
lds
cltd
or
leave
lahf
hlt
cmp
mov
dec
pop
xchg
mov
xor
stc
lods
lcall
clc
or
sub
lods
dec
lods
pop
push
test
add
bound
fcmovu
push
lods
ficomps
inc
add
ja
push
cmc
pop
push
push
clc
std
insl
push
mov
aas
mov
lods
rorl
add
cld
in
sbb
add
push
pop
pop
out
add
rcrb
adc
or
les
jp
bound
test
stc
pop
scas
das
xor
repz
cwtl
xor
and
fwait
mov
stos
sbbb
adc
aaa
loopne
mov
imul
test
mov
xor
data16
fnstenv
outsl
xor
repnz
in
out
jne
es
ret
int3
cmc
ret
push
jo
insl
xor
stos
outsb
jl
ja
add
jle
cs
push
call
cmp
inc
mov
lret
fsubrl
ret
xchg
dec
cwtl
frstor
lahf
lds
fwait
xchg
pop
push
and
mov
mov
xor
out
insb
je
mov
jns
sub
lods
cwtl
sahf
mov
and
clc
and
jg
mov
out
int3
mov
mov
cmp
lret
frstor
cmp
cwtl
cmp
and
cmp
mov
xchg
fadds
das
ficoml
pop
ret
rolb
loopne
pop
mov
mov
sub
add
pop
je
push
pop
mov
ret
jecxz
push
mov
mov
add
mov
mov
dec
daa
loop
add
jg
or
sub
and
jmp
jo
sbb
aaa
arpl
mov
movl
ret
lret
outsb
inc
inc
jns
repnz
bound
mov
xorl
xchg
sub
pop
xor
mov
les
stc
jmp
push
or
xorl
pop
repz
icebp
adc
mov
in
aas
enter
jb
aas
inc
cmp
cwtl
repnz
rorl
fadds
dec
lock
push
and
lret
enter
inc
pop
sbbb
sbb
jecxz
ret
xor
or
aad
and
or
mov
mov
sub
leave
out
adc
sbb
jl
bound
mov
cli
hlt
mov
loopne
xchg
outsl
xor
aam
mov
sub
mov
push
cs
les
cmpsl
daa
lret
lcall
cld
into
mov
xchg
pop
adc
mov
lods
int3
outsl
fstpl
nop
js
sbb
xchg
ds
dec
xchg
add
aam
je
addl
ds
jmp
push
jnp
enter
add
push
xchg
jecxz
scas
xor
cmp
int3
repnz
fisttps
push
scas
loopne
push
aam
sbb
push
lret
hlt
repnz
pop
sahf
leave
sti
test
repz
aaa
negl
jge
fimuls
or
lods
test
movsl
jb
mov
sub
lcall
jmp
push
pop
push
icebp
pop
sub
xor
das
xor
jae
mov
xchg
pop
inc
pop
mov
idiv
mov
sub
out
cld
adc
scas
xchg
aas
adc
shrl
loope
mov
jb
cmp
jle
xorl
into
jmp
fbstp
sbb
push
sbb
xchg
add
outsl
pushf
push
jg
cmp
icebp
in
xlat
lea
std
out
js
pop
add
cmp
lahf
sarl
popf
fidivrs
lcall
pop
mov
xor
nop
xor
and
jns
jle
adc
push
mov
fstpt
and
mov
jp
mov
dec
pop
adc
loope,pn
je
sbb
in
movsb
fisttpll
dec
aas
sbb
imul
sbb
push
fstl
mov
test
mov
in
aad
inc
add
rclb
add
push
dec
shl
out
int3
push
cld
aas
dec
mov
loop
inc
push
int3
xchg
insb
pop
loope
imul
fucomip
jb
dec
fdivl
jle
movsb
jo
jg
adc
mov
cld
sbb
stos
out
aas
and
lea
js
and
mov
and
or
out
js
roll
fiaddl
out
cmp
sti
inc
rclb
pushf
sahf
mov
xlat
lahf
sahf
sub
jp
cmp
cld
scas
and
inc
xorb
stos
lret
data16
aam
mov
adcb
mov
or
mov
stc
jecxz
inc
push
mov
cs
iret
dec
or
hlt
stc
mov
xchg
sub
popf
jle
mov
mov
jnp
cmp
imul
push
fwait
push
pop
std
or
pop
pushf
mov
rcll
jecxz
insl
and
pop
mov
xchg
test
push
pop
jb
adcl
inc
jg
lahf
cmp
adc
shl
cmp
or
sar
xor
cmp
xor
push
mov
inc
mulb
es
sti
test
pop
ret
xchg
aaa
mov
lcall
std
cli
mov
lcall
pop
cld
mov
fsubrs
push
jne
subb
popa
cmp
mov
fdivl
int
pop
xlat
in
push
xchg
xchg
xor
iret
xchg
fcos
mov
or
sahf
jp
into
xchg
adc
pushf
popf
pop
jecxz
int
sbb
cmp
in
dec
mov
or
fadds
pop
push
jae
call
jg
pop
aas
fcoms
mov
adc
inc
into
clc
and
repnz
lret
mov
testl
inc
aad
arpl
mov
je
repz
sub
cmpsl
push
xlat
or
xor
andb
les
cmp
lock
adc
sub
xlat
or
xchg
in
lock
mov
xchg
out
dec
loope
icebp
mov
cmp
jnp
or
roll
hlt
aaa
inc
or
jne
dec
int
and
xchg
pop
mov
cmpsl
popl
add
insl
ret
lock
sub
cmp
dec
dec
dec
ds
cmp
mov
or
jge
cltd
pop
std
inc
pop
jnp
test
scas
cmp
cmpsb
gs
mov
ljmp
pusha
mov
outsb
ds
push
or
mov
fsubl
mov
and
incl
cmpsb
test
jne
or
push
das
add
mov
in
stc
insl
cs
mov
mov
enter
fadd
mov
or
das
sbb
xchg
inc
cmc
bound
icebp
cmp
inc
jecxz
push
mov
cwtl
or
xchg
pop
pop
or
shll
in
loop
jmp
mov
jbe
and
or
stc
mov
cmp
ja
sub
inc
and
push
mov
and
icebp
dec
dec
inc
pop
pusha
aas
movsl
in
movsl
and
jbe
push
xchg
loop
xchg
push
push
xor
xchg
loopne
jp
sbb
pop
ret
movsb
add
pop
cmp
sub
xor
add
ljmp
pop
int
xchg
mov
and
fstpl
xor
fnstsw
insl
and
xor
mov
daa
mov
mov
dec
jno
cmpsb
cmp
outsl
add
pop
or
and
shrb
and
aad
jl
inc
in
adc
out
mov
roll
pop
xchg
jno
inc
inc
enter
jecxz
xor
inc
dec
dec
jb
fcmovnu
loope
and
xchg
sbb
or
jbe
lcall
mov
insb
dec
mov
mov
mov
xchg
mov
pop
je
cmp
or
mov
fmuls
xchg
andl
inc
sub
aaa
iret
push
jp
adc
dec
cld
jb
push
in
cli
jl
dec
aam
xchg
aad
mov
cmp
arpl
xchg
aas
fisttpll
dec
jmp
cs
mov
mov
adc
mov
and
jl
adc
mov
mov
cmp
push
mov
cmp
arpl
xor
add
xor
jp
mov
mov
outsl
aad
lods
imulb
or
es
cltd
and
fcompp
fldenv
add
mov
aas
pop
jle
xorl
leave
scas
xor
add
jp
push
push
mov
test
call
pop
xchg
fwait
std
mov
loope
xchg
or
out
push
sub
mov
aaa
xor
in
cwtl
cld
inc
shrl
mov
inc
xor
jmp
jb
iret
add
lds
and
addr16
and
sbb
xor
test
inc
sbb
fiaddl
jo
sbb
push
not
push
psubd
xchg
lahf
jne
loop
hlt
and
js
aam
xchg
js
adc
leave
dec
lods
mov
cmp
mov
aaa
push
or
and
pop
shll
imul
jecxz
cwtl
sahf
sub
adc
addr16
and
mov
fstl
int
cmp
xchg
inc
lcall
add
add
cmc
dec
push
sti
or
cmpsb
xor
or
xchg
insb
inc
stos
mov
jecxz
test
push
imul
add
cli
sbb
arpl
xor
pop
fidivs
hlt
in
adc
cmp
mov
xchg
es
pop
jo
in
push
cmp
push
repnz
orb
daa
xchg
sub
mov
scas
hlt
lds
cld
in
ret
pop
hlt
or
add
es
notb
enter
int3
dec
pop
push
in
loop
out
scas
cwtl
ret
inc
sbb
dec
dec
lahf
lds
dec
into
inc
xchg
rcrb
jge
or
fisttpl
pop
jge
pop
sub
add
push
fsubr
lret
rcrl
jle
scas
add
xor
popf
adc
xchg
ret
cmp
out
xchg
sub
or
pop
or
repz
jae
sbb
cltd
adc
gs
adc
pop
push
in
sbb
int
inc
ret
int3
loope
mov
lods
jne
in
push
je
les
adc
dec
mov
sbb
cmp
mov
xchg
push
mov
adcl
cltd
sub
int3
inc
daa
push
xchg
lea
push
xlat
pop
xor
inc
cmp
or
dec
mov
add
cmc
pushf
andb
jb
stos
mov
jge
hlt
cmp
mov
mov
subl
popa
pop
lcall
jp
push
inc
jae
mov
cwtl
jle
push
push
fwait
xor
bound
inc
inc
jno
icebp
insb
sub
sub
les
push
loope
ss
pop
pop
cmp
outsb
and
ja
and
insb
xchg
push
pop
jecxz
arpl
ds
cld
je
xchg
xchg
std
and
clc
test
mov
pop
in
jge
or
pop
add
dec
mov
fs
and
cld
or
fisttps
cmp
adc
mov
cmp
test
mov
and
adc
sti
test
push
or
mov
dec
icebp
outsl
cld
add
into
gs
mov
mov
xchg
mov
iret
jbe
sub
mov
pushf
out
jl
fsubrl
movsl
mov
test
test
dec
outsb
xchg
xor
lods
and
scas
push
lret
in
mov
mov
mov
lods
jo
outsw
jle
mov
addr16
inc
or
mov
test
xchg
rcll
hlt
popa
jo
ror
mov
test
push
or
neg
inc
roll
cmc
in
xchg
filds
sbb
movb
ret
rorb
aas
push
out
mov
cltd
rclb
xchg
dec
sbb
pop
push
xchg
xor
iret
incb
push
and
das
xor
test
mov
or
lods
xor
inc
fucomip
in
std
lods
push
xchg
insl
mov
inc
sahf
or
dec
adc
inc
les
sbb
imulb
jo
pop
adc
rsm
aam
sti
aad
std
cli
pop
outsb
jae
in
push
add
ret
cs
dec
fstps
clc
std
and
jl
jo
mov
push
clc
insb
daa
mov
nop
lret
and
loopne
xor
xchg
sbb
add
enter
and
pusha
push
nop
shrb
push
lods
cmp
das
mov
mov
lret
fisubl
lea
xchg
jmp
es
mov
push
aam
mov
sub
leave
jne
rcrl
inc
lods
rep
jmp
lods
mov
cmp
aam
adc
push
push
push
push
mov
push
mov
cmpsb
push
mov
and
repnz
fistpll
pusha
loop
and
inc
mov
dec
stc
scas
or
pop
mov
add
mov
add
in
inc
nop
push
sub
movsb
sbb
xor
xor
jbe
jns
and
cmp
int3
mov
lcall
mov
sbb
shll
inc
and
out
testl
jg
cltd
in
shll
adc
shrl
cmp
cmpsb
sti
mov
imul
fistl
ljmp
ljmp
pop
sar
xchg
popa
addr16
rcrb
popf
fcmove
push
push
dec
push
xchg
jo
loopne
jecxz
or
xchg
xlat
mov
rcl
mov
push
or
dec
into
fst
sbb
lret
std
jno
cmp
stos
adc
sub
mov
cmp
sahf
shlb
add
mov
pop
enter
push
mov
pop
and
rcrb
and
push
xchg
sbb
push
jns
mov
or
jmp
push
mov
cltd
xchg
pop
sub
sub
xor
cmpsb
push
mov
fsts
test
and
aaa
xchg
test
jnp
jmp
cmp
jmp
dec
xor
cmp
dec
push
dec
sbbl
cs
and
imul
xchg
sbb
xchg
test
dec
pop
sbb
lods
add
call
dec
icebp
jne
lods
pushf
mov
sbb
inc
xor
push
push
cmp
ds
int3
mov
pusha
jmp
inc
add
lret
orl
cs
test
je
nop
and
push
jecxz
scas
fdivrp
fs
pushf
mov
mov
loop
popf
cmpsb
arpl
jge
pop
mov
cmp
pop
imul
push
js
in
call
jl
rolb
cmpsl
and
jg
pusha
or
icebp
imul
inc
xchg
cmp
xorb
popa
pusha
add
push
in
stc
inc
lcall
adc
push
mov
aaa
cmp
mov
cmp
ret
imul
pop
xchg
jno
icebp
and
push
and
jnp
push
cmp
cmp
mov
add
jno
test
movsl
inc
add
sbb
int
mov
ss
dec
in
rcrb
mov
mov
leave
mov
jge
mov
push
xchg
mov
sub
pop
sbb
gs
add
dec
cwtl
push
aad
pop
pop
out
pop
and
sub
bnd
nop
rorb
or
adc
hlt
push
ret
inc
push
loopne
sti
div
mov
fisubrs
lds
sub
add
jnp
or
mov
std
lahf
push
mov
xor
out
shl
mov
jo
xor
cmp
push
xor
iret
js
je
jmp
clc
jae
cmpsb
and
dec
aaa
mov
dec
loopne
add
xor
fnstsw
lock
push
andb
lret
insl
insl
in
std
pushf
jecxz
mov
and
and
mov
mov
nop
jg
adc
fwait
js
cld
mov
data16
faddl
mov
inc
stos
adc
xchg
loopne
xchg
mov
or
into
sub
jge
adc
arpl
add
ja
divb
arpl
cltd
lcall
mov
jge
aad
and
inc
icebp
test
push
pop
jb
inc
push
mov
push
inc
fmulp
ret
jnp
and
movsb
xchg
lea
inc
sbb
lock
bound
cwtl
stos
inc
cmp
repz
push
pop
ja
mov
cmp
inc
cmpsb
xchg
out
sub
and
in
mov
fwait
sti
nop
in
mov
addl
into
cwtl
dec
leave
add
push
sub
dec
loopne
cmpsl
xor
pop
insb
nop
fsts
xchg
inc
push
jo
or
bound
movsb
xchg
mov
mov
xchg
cmc
push
je
mov
repz
leave
dec
xchg
imulb
test
sub
push
jmp
adc
test
inc
jne
sub
push
inc
das
les
fadds
mov
jno
out
sbb
xchg
xchg
xchg
and
mov
pop
int
mov
sahf
mov
clc
arpl
xchg
xlat
out
ss
pop
sbb
cmp
push
cwtl
rcrl
sbb
fdivl
push
je
mov
mov
fcoml
adc
inc
inc
cmp
hlt
pop
loopne
pop
sub
mov
push
ficoms
repz
lods
fsubs
jae
mov
pop
cmp
rcrl
push
daa
adc
call
cmp
mov
or
js
dec
int3
cs
int
mov
push
ss
sbb
loop
fisubrl
jecxz
push
lret
lea
pop
push
push
pushf
mov
inc
stc
scas
pop
lods
lock
xor
adc
ljmp
inc
out
push
loope
dec
add
movsb
ret
jnp
int3
aas
sbb
jmp
cmpb
in
sbb
ljmp
mov
mov
sti
imul
pushf
sbb
lea
cmp
std
flds
push
mov
sarb
mov
lret
aad
std
ja
pop
push
or
int3
out
jbe
inc
adc
sub
data16
mov
movsb
dec
pop
fistps
js
imul
inc
xchg
inc
sbb
fsubs
sbb
dec
pop
lds
mov
xchg
cmc
popf
mov
mov
cmp
arpl
mov
outsb
aad
inc
dec
mov
bound
dec
loop
ret
out
outsb
daa
fimuls
into
iret
pop
outsl
leave
push
ds
mov
fldl
out
aas
push
add
mov
push
jbe
imul
shl
push
cwtl
decb
dec
mov
pop
mov
jo
loopne
mov
iret
pop
sbbl
jno
pop
stos
shrb
insl
mov
test
jle
pop
arpl
push
cmp
mov
rcrl
xchg
cltd
repz
inc
push
push
bound
jmp
sbb
jl
stos
sti
push
outsl
inc
cmp
inc
roll
inc
cmp
mov
jp
add
cwtl
mov
lods
lods
imul
push
stc
jns
add
inc
lahf
cmpsb
fisttpll
out
add
xchg
cli
add
mov
xor
data16
push
ja
and
sbb
push
mov
fidivl
cwtl
xor
sbb
xchg
negb
lss
loop
ljmp
pop
mov
movsb
push
cmc
mov
push
mov
insb
mov
inc
push
push
mov
lret
and
sub
out
add
sbb
and
ljmp
jmp
cld
imul
sbb
sbb
or
dec
or
lock
inc
outsb
cmp
rorb
adcb
test
in
popa
mov
cmc
jl
imulb
jmp
jmp
jns
sahf
stos
jne
push
lcall
sub
jecxz
or
sbb
push
sub
test
ja
xor
insb
jge
cmc
shll
fs
arpl
mov
jg,pt
mov
aad
test
lcall
xchg
ss
mov
in
mov
sbb
push
ss
or
dec
into
adc
out
sub
aas
mov
dec
mov
pop
push
inc
xchg
lret
fldl
repz
in
cmp
xor
imul
mov
mov
testb
popa
ret
jp
and
push
orl
pop
sub
push
mov
scas
jp
inc
mov
xchg
xchg
incl
xchg
cmpsb
insl
jge
scas
stc
aad
sub
xchg
aam
negb
leave
push
test
or
mov
jecxz
jbe
mov
fwait
sub
arpl
push
adc
jle
fisttpl
out
mov
imul
decb
aam
ret
into
mov
jg
iret
mov
lds
test
imul
pop
lds
pushf
fdivs
aam
bound
insb
out
push
ror
inc
sti
mov
pop
insb
scas
repz
andl
push
cmpsl
sub
fs
int
adc
loope
mov
daa
enter
fwait
aad
in
pop
out
stc
sbb
dec
inc
inc
insb
int
xchg
pop
or
pop
xchg
jnp
mov
mov
cmp
lods
in
cmpsl
out
cmc
cmp
xchg
ret
fmull
xchg
or
and
mov
cmpsl
divl
push
out
sti
push
cmp
sub
lret
sub
sbb
mov
test
push
or
lock
fsubrl
and
mov
rol
pop
ret
jno
cwtl
dec
or
cmp
add
push
scas
js
cmp
jbe
sub
rorb
inc
xor
adc
or
xchg
mov
inc
daa
fstpt
sub
mov
xlat
loopne
dec
adc
das
movsb
and
xchg
dec
stc
push
out
xchg
cwtl
testb
inc
xchg
gs
xchg
arpl
push
shrl
nop
xor
xchg
insb
mov
sub
and
xchg
mov
pop
daa
sbb
out
xchg
lahf
in
and
jmp
arpl
lahf
lret
add
sbb
cmpsl
mov
test
xchg
cwtl
cmp
mov
insb
jl
sbb
int
ret
sbb
and
and
scas
pop
xor
mov
imul
mov
icebp
les
pop
cwtl
lock
sbb
pushf
xchg
or
xor
scas
xlat
add
pop
jb
jmp
add
in
and
add
jno
pop
sti
test
add
push
aas
pushf
jg
out
scas
fldl
pop
lods
sbbl
pop
cmp
or
jb
mov
push
gs
pop
or
out
insl
arpl
add
fidivl
jg
cmp
les
pushf
sahf
lea
cltd
pop
and
sbb
imul
mov
outsl
mov
adc
pop
lahf
icebp
clc
pop
sbb
mov
enter
push
xchg
test
inc
push
decl
xchg
insb
add
xchg
in
jo
and
xor
cmp
mov
fwait
inc
mov
repz
push
and
add
ret
xchg
test
xor
mov
mov
mov
pop
add
inc
repnz
add
mov
mov
push
adc
mov
add
jae
cli
jmp
ss
prefetcht2
push
sbb
push
out
add
push
ljmp
jae
fsubr
and
test
pop
add
hlt
mov
cltd
push
repnz
rcrl
mov
mov
mov
xor
nop
pop
int3
test
pushf
jge
pop
push
cmp
cmpsb
mov
mov
leave
mov
outsb
or
fistps
int
sbb
pop
jns
xor
jmp
lret
jns
and
mov
cmpb
cltd
psraw
sbb
cwtl
cmc
loopew
jb
sbb
jo
pop
push
mov
xor
mov
lods
and
fbstp
rorl
pop
mov
fiadds
push
inc
test
mov
test
adc
push
call
loope
fistpll
fadd
mov
pusha
lahf
xchg
negl
mov
lods
lock
lock
stos
std
dec
aaa
mov
xor
cltd
push
loope
push
js
or
into
pop
xchg
push
insl
pop
sub
and
mov
sarl
push
sti
pop
rol
loope
push
testb
cmp
cmp
lods
fisubl
xlat
cmp
inc
cs
addr16
in
out
pusha
les
xchg
fdivrp
pop
fstpt
fwait
sbbb
nop
neg
cltd
clc
add
cmp
lea
js
mov
push
push
insl
push
mov
sbb
inc
inc
mov
cmpsl
jbe
jmp
out
jb
je
lret
pop
pop
cmp
or
adc
repz
pop
test
jae
in
cltd
mov
es
fsts
push
jge
stos
lret
mov
cmpsb
mov
int3
loopne
mov
push
inc
and
out
ljmp
cmp
cld
pushl
lahf
and
lock
sub
and
arpl
pop
loop
icebp
dec
mov
xchg
lods
push
div
add
ret
sbb
mov
lds
adc
adc
nop
dec
fistps
mov
stos
dec
cmpsb
es
adc
ret
dec
int
test
adc
adc
inc
add
and
in
xor
loopne
stos
xchg
lea
mov
mov
xor
add
lds
and
stc
in
sbb
hlt
jle
sbb
out
cmpsl
add
mov
int3
or
mov
inc
les
ss
out
in
in
push
ror
cwtl
jmp
cltd
xlat
fdivrs
lds
jmp
test
jge
jnp
mov
cmc
in
movsb
ljmp
cltd
mov
mov
dec
insb
xchg
insb
sbb
popa
imul
mov
add
mov
cli
fidivl
fistl
fiaddl
cmp
iret
ret
push
cmp
xlat
jb
xchg
arpl
loop
fmull
loop
add
or
insb
sbb
or
and
ss
jmp
iret
in
mov
push
add
sbb
fidivrs
sbb
xor
cwtl
and
test
sti
nop
jo
call
jb
cmc
stc
mov
inc
inc
imul
jo
xor
adc
aaa
jno
mov
mov
xor
stc
daa
pusha
push
lods
lds
sti
cmpsl
or
xor
gs
test
inc
xor
mov
inc
xchg
jae
std
add
push
inc
jns
dec
jecxz
arpl
jge
cmp
mov
jg
cmp
fucomip
mov
jl
ljmp
in
pop
pop
test
push
repnz
outsb
sbb
aas
lret
push
mov
fsubr
std
inc
int
bound
sbb
js
push
pop
cmp
add
icebp
or
adc
sbb
fistpl
hlt
sbb
jle
out
sbb
mov
sahf
inc
or
mov
jp
sahf
imul
fmul
or
inc
xor
test
and
jecxz
adc
cld
inc
xchg
sub
dec
cmp
scas
mov
sbb
lret
push
sub
mov
cmp
movsb
mov
mov
jne
outsl
maxps
cwtl
inc
daa
shll
cmp
adc
addr16
mov
in
jae
push
push
sub
push
or
and
inc
mov
add
addb
fs
pop
mulb
out
mov
mov
jnp
mov
xor
xchg
lret
cs
xorb
movsb
jnp
and
fidivrl
push
cltd
icebp
test
fcoml
faddl
cmpsl
push
mov
das
jl
sbbl
mov
int3
sub
push
cmc
shll
xlat
inc
test
aaa
popf
and
mov
adc
iret
mov
sub
mov
or
pop
repnz
outsl
mov
out
mov
mov
sub
insb
fwait
stos
int
arpl
mov
shl
fcompl
loopne
jmp
in
or
xchg
dec
inc
xor
rcll
dec
das
and
inc
jg
pusha
or
roll
or
mov
xchg
sbb
jmp
xor
cmp
mov
imul
fwait
push
xchg
ja
sbb
pop
outsl
jl
mov
jb
xor
in
pop
jecxz
push
mov
dec
mov
ljmp
test
sbb
fmul
jecxz
movsb
fistpl
dec
imul
sbb
mov
xor
fstps
shrb
cltd
adcb
shlb
dec
dec
fs
inc
test
inc
push
hlt
bound
nop
and
pop
loop
push
addb
xchg
fidivl
pop
shll
add
pop
stc
clc
ret
dec
in
mov
push
xchg
cmpsb
or
dec
jno
xor
mov
xchg
mov
out
sbb
scas
fcoml
in
jge
popa
mov
push
ds
cmpsb
and
or
pop
mov
adc
mov
sbb
pop
push
aam
leave
arpl
jle
or
add
idivb
inc
stos
je
mov
aam
mov
add
loopne
repnz
nop
and
into
sbb
idivl
sbb
xchg
ret
push
add
out
cmp
cmc
repz
andl
sub
push
mov
pushf
push
mov
icebp
push
xor
mov
inc
xchg
cmp
jmp
inc
sahf
xor
pop
pop
and
shll
adc
in
cmp
inc
push
faddp
jp
js
cmp
inc
xor
push
popf
test
decb
lods
test
mov
or
dec
jae
xlat
stc
cs
gs
push
add
sbb
or
sbb
sub
xorb
addr16
xor
cmp
or
aas
push
ja
xchg
leave
xchg
push
jne
das
movb
jb
adc
es
sbb
out
push
cmpsb
enter
data16
mov
imul
pop
push
push
ret
stc
pop
jb
dec
daa
inc
or
mov
fcom
pop
int3
repz
push
imul
inc
subb
push
mov
jb
xchg
lahf
pop
jl
cmpsb
xor
mov
jae
xor
pusha
clc
shrb
loope
add
pop
ret
rorl
adc
lods
les
dec
andb
in
popa
jbe
mov
adcl
sbb
pop
adcl
sbb
ss
jnp
mov
imul
ljmp
xorl
mov
repz
int3
sbb
scas
inc
data16
xlat
xchg
lcall
inc
data16
imul
bound
je
repz
pop
das
mov
pusha
out
add
out
dec
jle
mov
add
cmp
in
dec
pop
or
sbb
ficomps
lret
cmp
jns
out
ja
mov
adc
test
xchg
icebp
mov
pop
jno
pop
mov
jo
xchg
test
push
aas
push
pop
jmp
insl
mov
sahf
add
jno
jno
and
std
cmpl
jge
push
test
mov
push
xchg
xchg
das
imul
sub
inc
roll
pop
stc
jae
enter
popa
and
push
orb
inc
push
fnsave
mov
inc
inc
add
push
rcll
jbe
enter
fsubr
mov
xchg
into
xchg
iret
mov
scas
stos
fnstcw
and
test
adc
sub
fimuls
les
push
xorl
out
fnstenv
mov
inc
shlb
push
lahf
push
push
fs
fwait
lahf
outsb
dec
sbb
sub
aam
xchg
lods
jmp
cmp
jae
inc
adc
add
xchg
xchg
pop
adc
inc
fwait
in
scas
cmpsb
sub
scas
mov
jmp
mov
push
out
lret
xchg
dec
cmp
rclb
test
cmp
mov
fldenv
push
clc
fimull
push
sub
cmp
into
lods
popf
pop
mov
fldcw
inc
sub
inc
xchg
xor
dec
add
jns
and
lock
pop
call
rorb
stos
xor
pop
popa
test
inc
mov
pop
xchg
iret
adc
ret
into
lret
mov
mov
outsl
daa
popa
fs
jbe
cli
imull
aad
push
out
mov
ja
std
and
jge
std
mov
aaa
mov
out
sti
or
cmp
pop
fists
dec
in
fbld
movsl
mov
dec
inc
xchg
lods
std
dec
int
xorl
es
hlt
xor
add
sarl
mov
and
pop
pop
outsb
sub
fiaddl
dec
in
pushf
pop
jns
rorb
inc
mov
dec
mov
jle
and
push
gs
jg
pusha
sbb
ds
cmp
fiadds
int3
mov
shl
xchg
mov
out
lea
jae
cld
stos
xchg
mov
xchg
movsb
lret
dec
ja
test
sub
xor
mov
clc
dec
movsl
repnz
fs
int3
jbe
push
rcr
daa
stos
mov
movsl
in
xor
orl
aaa
push
sub
mov
aas
cmp
sbb
mov
cwtl
mov
pop
jmp
jno
call
call
gs
mov
or
jp
adc
dec
cli
gs
dec
jae
bound
mov
lds
jno
cvtps2pi
xchg
popf
mov
and
lcall
ret
in
arpl
add
add
pop
cmp
and
cld
in
loop
nop
xchg
fists
pop
xchg
cmp
or
fistpll
sub
xchg
mov
movsl
inc
and
mov
adc
xor
and
cld
push
rcr
pop
cmpsb
mov
push
sub
xchg
sbb
mov
dec
and
xchg
fwait
stos
movsb
or
int
add
int3
jbe
loopne
cmp
xor
lods
lea
sub
movsb
xchg
push
push
int3
mov
adc
lods
jnp
test
mov
mov
jb
ds
fcompl
mov
xor
ds
sbb
fdivrp
jp
jnp
inc
ljmp
jnp
in
stos
sub
jge
ss
pop
cmp
xchg
dec
pop
mov
ds
inc
pop
div
push
dec
in
xor
mov
fs
mov
call
stc
aaa
xchg
push
inc
decb
cmc
xchg
and
or
gs
in
pusha
dec
sbb
cmp
push
jo
sbbl
sti
in
mov
cmp
pop
push
mov
int3
lret
sub
mov
inc
push
clc
pop
dec
xchg
mov
inc
pop
out
xor
mov
mov
shll
and
adc
pop
sbb
cld
cld
sahf
dec
call
push
mov
fwait
or
in
jb
sub
leave
xchg
mov
test
jl
lods
ret
jl
dec
sbb
lods
push
mov
fidivrl
shl
jp
jne
cmp
sarl
pop
adcb
push
mov
hlt
or
push
sti
stc
xor
andb
fsts
in
cmpb
mov
adc
mov
jno
sbb
mov
inc
ja
dec
insb
adc
mov
jle
data16
enter
lret
inc
addr16
or
lcall
sbb
loope
or
add
fs
pop
es
in
mov
and
in
adcb
dec
and
rcll
cltd
stc
xchg
inc
stc
cmp
sbb
cmpb
dec
in
pop
mov
xor
inc
sub
loopne
inc
and
dec
jb
in
jmp
rcll
in
call
mov
push
lods
xor
in
xchg
insb
and
dec
rol
cmp
sarb
mov
jl
mov
push
ret
sub
mov
aas
push
or
push
jns
fidivrl
sbb
clc
jmp
pop
dec
sbb
xchg
pop
and
sub
xchg
ret
xchg
mov
and
sbb
jnp
and
push
rcrb
out
pmulhuw
or
cmp
mov
int3
inc
mov
mov
into
into
pop
addr16
sahf
xchg
cmpsl
lret
pop
jg
xor
cmpsl
inc
fisttpl
pusha
cmc
lods
xchg
pushf
ret
shrl
xchg
push
stos
fsubs
xor
cmp
cwtl
out
pop
mov
push
test
dec
into
into
pop
cmp
in
dec
dec
push
pop
out
xlat
in
mov
mov
or
xor
jb,pt
imul
push
or
jge
jg
push
mov
in
jecxz
xor
iret
imul
and
mov
and
shlb
jns
gs
adc
dec
cs
mov
adc
add
cld
pop
pop
cmpsb
adc
in
pop
sbb
xor
enter
fdivrs
mov
xchg
popa
or
rcrb
sbb
mov
xor
jno
sbb
lods
in
lods
movl
cltd
cmp
loope
pop
clc
lret
daa
insl
pop
xchg
mov
push
rol
mov
lods
leave
ret
mov
fadds
sub
inc
mov
xchg
cmpsl
ds
mov
pop
cmp
stos
daa
rcl
test
sub
fsub
pop
sbb
jae
or
rcll
inc
lods
dec
scas
leave
out
sub
cmp
xor
outsb
cmp
stc
jo
inc
push
sub
xor
ds
enter
je
pop
outsb
data16
aas
add
sbb
add
cmp
pop
out
ja
pop
xchg
cmp
inc
jmp
inc
hlt
mov
xchg
xchg
sar
scas
fs
xlat
adc
outsl
rolb
andb
inc
rcr
lods
cmp
mov
push
sub
es
rcrl
sbb
mov
xchg
out
cmp
sbb
test
or
mov
pop
clc
mulb
fisttpll
lock
sbb
fstps
mov
scas
out
cmp
shrl
sbb
sar
aas
jnp
shll
mov
repz
or
push
sbb
pop
adc
cmp
inc
pushf
lods
pop
cmpsb
push
xor
lea
dec
inc
xchg
xchg
sub
mov
pop
lahf
cmc
lea
fwait
js
loope
nop
test
push
xchg
jg
xchg
mov
xchg
adc
clc
fldenv
push
inc
inc
push
xor
push
popa
and
dec
and
ds
or
out
pop
adc
sahf
imul
aas
mov
sarb
dec
add
loope
insl
cli
ret
test
ljmp
aad
std
mov
aad
mov
ds
push
lock
sbb
xor
leave
sahf
aaa
jp
dec
rcrb
push
movsb
loopne
aad
cmp
pop
lahf
sbb
insl
notb
dec
aaa
inc
push
mov
in
adc
in
sub
outsb
mov
pop
pop
int3
and
jge
mov
insl
cmpsb
mov
jns
add
pop
inc
adc
stc
push
xor
int
mov
fsubrl
jge
jmp
jbe
xlat
incl
movsb
jecxz
jl
pop
add
push
stc
jnp
fstpl
sbb
lea
xchg
jne
dec
sub
lret
mov
sub
fyl2xp1
xor
inc
xor
rolb
idivb
pop
xchg
movsl
mov
pop
adc
call
ss
mov
jmp
inc
ret
or
in
sbb
sbb
dec
call
insl
out
mov
sbb
subb
push
or
into
mov
sarl
sbb
out
rcll
jne
jb
push
dec
fld
test
and
jae
in
dec
pop
push
lods
fstl
inc
xchg
cmp
pop
push
pop
lea
pop
push
pop
outsl
push
hlt
outsl
std
push
lret
shrl
out
add
mov
mov
or
push
dec
xchg
ljmp
push
adcl
jne
or
sub
mov
mov
or
icebp
sahf
adc
rcrl
subl
testb
push
repnz
cld
fdivrl
sahf
pop
jo
sub
mov
test
pop
or
sbb
mov
in
add
sahf
sahf
or
mov
cmpsb
gs
sbb
pop
xchg
xchg
push
mov
xchg
and
sbb
ljmp
sub
or
xchg
mov
cltd
push
mov
jbe
outsl
mov
push
push
mov
fiadds
sbb
pop
out
and
push
mov
jp
aaa
fcomps
int3
push
sbb
add
jbe
push
cmc
push
imul
push
xchg
inc
and
inc
arpl
mov
jae
add
pushf
or
mov
jmp
mov
xchg
sbb
xchg
mov
shlb
sbb
pusha
sbb
loop
adc
enter
jbe
dec
jp
or
and
incl
xchg
push
cs
and
daa
stc
cmp
cmp
lcall
lods
push
mov
pop
das
mov
pop
jge
mov
dec
fwait
fisttps
sbb
sbb
mov
int
hlt
add
out
fnsave
jnp
sbb
cmp
in
cwtl
or
add
adcl
test
je
adcl
xchg
or
fidivs
dec
cmpsb
subl
adc
dec
fldenv
cmp
or
xchg
stos
pop
sbb
repz
sub
aam
inc
imul
cmpsb
mov
add
add
insb
push
xchg
xchg
jge
fisubs
adc
adc
andb
sbb
pop
jle
scas
aad
scas
loop
int
outsl
pop
pop
or
fs
xchg
or
adc
xor
push
shr
xchg
xchg
int3
addr16
data16
cmpb
pop
mov
and
int
lret
pop
xchg
insb
lcall
mov
in
mov
test
adc
repnz
subb
addr16
inc
mov
shl
push
repnz
mov
push
int3
jo
cmc
repz
cs
cmpsl
push
sub
cmpsl
push
out
out
fisubrl
adc
aas
xchg
push
mov
mov
fs
bnd
fidivrl
xor
jnp
xor
inc
push
ror
or
jmp
push
cmpb
mov
int3
loop
pop
add
pushf
stos
iret
mov
mov
push
int
fsubs
or
mov
xor
mov
mov
or
adc
or
mov
rcr
jle
mov
and
inc
add
mov
jge
jnp
xchg
and
jno
sbb
imul
gs
jmp
gs
pop
pusha
aam
fcompl
sbb
arpl
lods
add
pop
cmp
pop
sti
mov
jb
or
test
mov
add
notrack
mov
pop
mov
pop
decl
shlb
cmp
scas
ja
jo
pop
dec
jg
lret
cmp
jb
lock
test
mov
std
mov
aad
and
jbe
int3
stos
mov
mov
sub
mov
and
sub
xchg
pop
mov
popf
rolb
push
dec
fnstsw
addr16
in
xchg
mov
stc
push
test
out
sub
jo
int
test
sbbl
orb
scas
pop
ret
movsl
jnp
add
mov
sbb
das
pop
sti
push
test
insl
outsb
xor
add
std
add
push
or
inc
adc
lock
mov
cwtl
mov
int
or
popa
ljmp
pop
pop
leave
daa
in
add
push
lret
test
sub
dec
mov
in
outsb
push
xchg
leave
jl
and
rcrl
pop
fisttpl
fadds
fidivrs
movsb
xor
pop
sti
sub
icebp
adc
add
les
mov
insl
in
jno
loopne
fnstcw
sub
sub
pop
push
iret
stc
leave
sbb
add
cld
mov
mov
pop
sbb
repnz
inc
adc
and
repz
movsb
adc
shr
ret
shl
dec
cmpsb
into
sbb
es
push
cmp
xchg
or
cmp
cmc
adc
inc
or
insl
adc
mov
cmp
lret
jmp
rcrl
mov
lcall
pop
test
and
les
dec
mov
popa
cmpsb
xor
lock
int
jns
dec
dec
nop
jle
shrb
pop
stc
jmp
nop
xchg
pop
push
adc
add
mov
mov
xchg
adc
push
xchg
cmpsl
es
adc
ror
sub
test
cmpsl
data16
not
sbb
nop
aaa
jb
jbe
fidivs
mov
nop
push
stos
sub
cmp
rcll
scas
push
ret
dec
adc
jae
std
ja
xor
out
fwait
stc
xor
sub
outsb
pusha
int3
popa
shl
sbb
mov
add
and
push
insb
adc
pop
mov
dec
or
ljmp
psrlw
lcall
pop
mov
and
add
xor
adc
jge
push
and
mov
fwait
shl
jae
pop
dec
lret
lock
sahf
fimull
rcrl
jns
pop
pop
jno
push
cmp
imulb
pop
lock
fdivl
mov
push
jno
xor
jle
mov
mov
and
fisttpll
xor
mov
rclb
std
es
cmp
push
pop
jecxz
in
aam
std
adc
mov
mov
sbb
outsb
js
shl
repz
cwtl
inc
cmp
and
mov
out
mov
push
mov
sub
es
sbb
push
imul
sbb
ljmp
sub
xchg
add
jmp
or
notb
hlt
xchg
das
fcmovb
dec
inc
xor
movsb
dec
lahf
add
xor
fdecstp
adc
js
dec
mov
hlt
sbb
push
xor
adc
mov
outsl
loop
inc
or
adc
jno
outsb
xchg
push
sti
inc
repnz
iret
jecxz
sub
jmp
push
insb
jno
jne
jb
fs
jno
or
aaa
push
es
adc
sbbl
mov
mov
test
mov
hlt
sbb
jmp
sub
mov
in
dec
cwtl
mov
popf
cmpl
sbb
xchg
je
mov
test
shrl
pop
inc
xor
dec
icebp
mov
stos
test
popa
mov
sbb
inc
in
mov
push
or
jge
scas
add
inc
inc
inc
and
sbb
xor
dec
push
lret
cltd
int
sti
xor
xor
lahf
popf
jnp
jmp
and
roll
sub
lds
jmp
repnz
int3
mov
mov
loop
je
and
xor
sbb
jl
jecxz
xchg
and
sarl
inc
cld
insb
pop
mov
gs
pusha
push
cld
push
out
fstpt
push
push
jae
in
lahf
or
sub
fwait
dec
lods
jmp
das
jb
repnz
or
call
mov
or
cwtl
int3
orl
add
mov
es
loopne
shll
cltd
mov
enter
mov
out
lcall
adc
popa
pushf
sbb
int
fwait
lea
sbb
sti
xor
andb
jecxz
std
cli
outsb
test
test
aad
mov
push
cmp
jno
fistpl
mov
xor
sbb
into
insl
loop
lahf
dec
subl
and
sub
pop
in
dec
pop
sbb
pop
fistl
fimuls
dec
jb
je
xor
jmp
jnp
mov
push
aaa
and
jo
pop
inc
cmpsb
gs
and
sub
xor
mov
push
sbb
jecxz
xchg
mov
mov
pop
enter
add
mov
sbb
xor
mov
sub
inc
test
in
sub
cmp
popf
lods
xchg
ds
mov
mov
mov
add
cmpsb
pop
psubsb
fnsave
out
sti
into
mov
jecxz
mov
push
mov
sub
lret
out
xor
inc
sahf
mov
mov
jne
outsl
inc
sbb
inc
add
outsb
shlb
test
mov
mov
inc
std
popf
loope
js
xor
imul
ret
xor
inc
mov
mov
ret
mov
push
cltd
dec
rclb
je
insl
or
push
dec
bound
movsl
cmp
or
xchg
leave
pop
mov
mov
out
aas
es
leave
mov
jne
xor
mov
mov
call
ja
lret
mov
shll
xor
xor
test
bound
push
jp
jne
test
std
mov
mov
dec
mov
lods
std
pop
cmc
adc
iret
inc
dec
nop
inc
imull
xchg
adc
cld
lock
mov
jae
xchg
inc
sub
std
push
xchg
rcrl
movsl
not
pop
pusha
or
sub
mov
inc
divl
sbbl
daa
inc
push
push
and
pop
sti
sbb
pop
or
test
and
lret
ret
inc
push
into
sbb
mov
or
jp
xchg
xor
roll
xor
inc
fisubl
pop
cmp
pop
addr16
inc
out
in
clc
xchg
mov
test
aaa
int3
movsl
mov
mov
push
pusha
xchg
adc
cmpsl
mov
inc
mov
test
sub
cmp
clc
push
sahf
sub
sti
xchg
cli
mov
call
mov
sub
icebp
push
mov
cmp
pop
arpl
pop
xchg
adc
push
dec
mov
sub
lahf
mov
std
push
pop
dec
xor
xchg
mov
add
jb
testl
movsb
sbb
jnp
adc
and
push
cmpsl
out
mov
mov
mov
inc
jne
sub
sub
mov
aam
mov
inc
or
or
adc
js
fadds
xlat
xor
outsl
out
and
pop
fistpl
and
shlb
in
dec
scas
inc
push
in
fnstsw
cld
mov
cld
inc
add
test
adc
test
push
adc
xchg
ljmp
flds
lods
mov
notl
jae
adc
jno
xchg
enter
mov
inc
push
jmp
mov
mov
ror
pushf
jle
mov
push
or
mov
in
jmp
aaa
arpl
adc
roll
out
xchg
dec
mov
add
sub
or
inc
test
and
cmpsb
mov
or
pop
out
jecxz
or
out
cld
xor
sub
sbb
ss
sbb
arpl
xor
imul
lret
mov
mov
test
icebp
push
push
cmp
mov
mov
mov
sub
and
cld
outsl
test
inc
xor
hlt
mov
daa
pop
testl
outsb
stc
rcll
popa
and
and
scas
aad
cli
mov
cli
pop
aam
push
cmc
shlb
test
add
pushf
aam
insb
push
aaa
or
xor
dec
pop
push
insl
xchg
addl
and
shll
fildll
enterw
bound
dec
push
lret
hlt
xlat
test
mov
leave
xor
jp
jbe
inc
or
mov
out
cltd
test
xchg
jl
popf
xor
xor
jnp
push
mov
ljmp
sbb
jae
gs
push
cs
add
fwait
mov
xchg
inc
fs
add
lods
pop
cmp
adcb
lcall
outsb
and
pop
sub
test
cmp
call
js
mov
pop
icebp
aad
xor
push
xchg
popf
jecxz
into
cmpsl
jg
aas
add
ror
insb
pop
out
outsl
popf
dec
xchg
xor
repz
xchg
mov
int3
sbb
icebp
lret
repz
cmpsl
push
xchg
sub
jno
adc
xor
mov
push
sub
jmp
push
sbb
dec
in
je
out
mov
jp
into
aas
jns
bound
jmp
or
xchg
pusha
push
mov
movsl
imul
cld
cmp
lods
or
imul
sbb
rcl
mov
es
stc
cmc
push
pop
int3
rcrb
or
cmp
and
rcrl
push
push
cmpsb
mov
sub
mov
xor
mov
aam
sbb
pop
sbb
cli
jae
fnsave
mov
mov
jae
push
inc
lods
cld
push
test
out
mov
cmp
adc
mov
stos
popf
adc
jl
add
jae
add
pop
rclb
jge
sbb
pop
adc
mov
jmp
and
das
sub
lock
mov
adc
mov
jb
fisubrs
jp
scas
add
bound
sub
je
out
cmpw
xchg
movsl
loope
pushl
popa
pusha
cmp
data16
push
xchg
das
es
lret
iret
xchg
addr16
daa
mov
push
mov
xor
int
out
ja
popf
ds
xor
or
out
xchg
scas
add
adc
push
mov
jmp
inc
in
outsb
xor
mov
mov
pop
loope
cld
test
mov
out
push
jns
mov
or
cwtl
pop
pusha
lahf
cmp
repnz
sub
push
jnp
test
and
cmp
cwtl
fwait
in
ret
push
clc
outsb
sbb
add
fldenv
xchg
ret
idiv
orl
inc
repz
adc
xchg
icebp
cmpsb
mov
cmc
imul
es
dec
repz
orl
inc
jl
inc
jmp
in
into
movsl
and
loop,pt
loope
xor
fbld
in
sti
lret
jl
sahf
insl
nop
lds
mov
jg
ja
or
jmp
data16
dec
shlb
test
in
xlat
ret
and
int3
stos
jmp
and
cmove
mov
xor
clc
ds
and
jnp
cwtl
inc
sub
xor
mov
cmp
lret
push
jp
not
jg
int
push
xchg
sub
jno
cmp
nop
inc
insl
mov
dec
mov
jmp
inc
xchg
xchg
mov
xchg
repnz
test
mov
or
add
cmpsb
inc
in
rcrl
jecxz
in
xorb
or
stos
and
pop
push
js
xor
jecxz
icebp
xchg
xor
stos
add
stos
nop
popf
mov
or
orb
sbb
rcrb
mov
clc
sub
cmc
popw
adc
loopne
rclb
adc
push
inc
sti
pusha
jb
subl
add
add
adc
xchg
jne
out
lea
sahf
std
pop
clc
shll
adc
inc
clc
pop
cwtl
adc
stc
stos
sbb
dec
jns
inc
or
scas
add
iret
jp
xchg
push
iret
inc
enter
mov
fsubrl
or
inc
enter
fdivs
iret
js
insb
pop
or
test
inc
xor
xchg
mov
adc
enter
or
addb
cli
adc
mov
mov
mov
and
adc
icebp
mov
into
sub
mov
cmpsb
dec
mov
mov
bound
jno
scas
cmp
dec
jne
xor
inc
ljmp
andb
js
jbe
xor
and
push
xlat
or
dec
mov
ret
shlb
int3
jns
jb
fldenv
je
test
cli
in
xchg
jne
xchg
dec
fidivrs
adc
jae
sbb
and
jo
push
push
mov
mov
imul
imul
jno
xor
mov
sbb
loop
sub
xchg
mov
push
sub
rcrb
lret
scas
dec
lahf
mov
scas
mov
xchg
test
in
pop
icebp
loopne
jge
sub
cmp
mov
outsl
cs
and
std
cld
xchg
or
imul
jg
daa
into
scas
mov
std
sbb
xchg
popf
insl
stos
or
mov
dec
sub
test
insb
push
add
xor
mov
jmp
xor
jecxz
aas
dec
addr16
filds
jl
mov
shr
add
iret
mov
xchg
sbb
hlt
mov
sub
xor
push
xchg
pop
add
pushf
sub
pop
rcl
movsl
jno
insb
fisubs
test
addb
call
push
push
cmp
jge
js
pop
cmp
jecxz
shll
inc
sti
sbb
push
andl
adc
mov
sub
call
xor
ret
aaa
nop
mov
movsl
movsb
je
pop
xchg
xor
mov
int3
and
mov
cmpsb
pop
loope
fsubl
dec
pop
mov
jnp
dec
cmpsl
mov
mov
dec
comiss
jp
xor
cmpl
je
lods
fisttps
loopne
leave
mov
mov
xor
pop
gs
movsb
jge
push
cs
add
inc
push
repz
mov
dec
pop
cld
aas
bnd
push
push
push
hlt
loope
push
xlat
repz
add
push
cmpb
mov
call
adcl
pop
ljmp
adc
jecxz
mov
mov
jl
cwtl
pop
arpl
jae
dec
xchg
pop
push
stc
adc
int
push
and
in
push
stos
sbb
mov
fwait
setle
notb
shll
or
cwtl
jg
out
fs
mov
cmpsb
mov
aam
mov
out
sbb
sub
or
mov
maxps
std
pop
fbld
leave
or
cltd
cmp
pushf
les
test
mov
insl
sub
pop
ds
int3
push
sti
mov
mov
das
nop
das
mov
cld
sbb
icebp
stos
mov
das
cmp
push
subl
or
add
fcoms
mov
mov
stos
mov
outsb
js
cli
xor
or
or
leave
mov
rolb
sub
pusha
xchg
pop
xor
sbb
js
and
fisubs
aas
enter
out
mov
ficoms
lds
ret
hlt
outsb
aaa
pop
gs
hlt
pop
mov
cmp
icebp
fisttpll
ror
aas
notb
imul
lcall
or
stc
mov
cmovae
stos
int
popa
cld
add
ds
and
mulb
add
push
out
sahf
jle,pt
int
push
sub
cmp
pop
and
into
in
ds
mov
jbe
ljmp
pop
xchg
ret
insb
or
fcmovne
cwtl
into
scas
into
xor
loopne
xchg
mov
jmp
sub
push
sbb
mov
clc
xchg
aas
mov
mov
xor
and
inc
ret
xchg
xchg
cmp
mov
aad
call
lods
inc
out
and
aad
cmp
ja
inc
dec
mov
enter
lods
int
xor
cmp
insl
push
cmp
rorb
fwait
mov
mov
xor
xchg
addr16
cmp
fimuls
cmc
inc
dec
dec
sahf
sbb
test
adc
cltd
ja
or
pop
ss
lahf
addr16
and
push
jnp
add
mov
mov
jns
in
lock
xor
pop
popf
adc
push
xchg
inc
pop
mov
scas
push
mov
stos
addl
push
orb
scas
push
dec
xchg
inc
cmc
fldcw
push
arpl
cmp
andl
jne
into
sub
push
es
maskmovq
divl
das
sbb
in
sbb
adc
dec
enter
int3
sub
and
mov
insl
push
push
insl
add
add
cwtl
mov
ja
xor
mov
jbe
lret
mov
sarb
scas
sbb
out
mov
push
xchg
imul
outsb
data16
jb
loop
and
jle
out
notb
outsl
add
mov
xchg
mov
out
add
nop
lret
mov
test
adc
push
pushf
or
jmp
in
subb
imul
aas
cmpsl
imul
loop
inc
adc
movsl
or
mov
icebp
rcrb
lret
mov
mov
cmp
jecxz
inc
mov
nop
add
hlt
flds
insl
mov
lahf
mov
frstor
adc
mov
lret
and
inc
rclb
test
mov
or
jne
or
das
sbb
testl
stc
mov
sbb
jecxz
mov
fsubrs
push
and
sub
int
dec
adc
xchg
cwtl
enter
enter
push
in
daa
push
popa
mov
imul
imul
jb
dec
jne
cmp
js
mov
push
cltd
jmp
mov
sarl
push
xchg
push
sbb
push
xor
fadd
xor
jp
adc
or
addl
aam
aaa
lahf
pop
divb
movsb
stc
out
sahf
std
dec
add
dec
insb
dec
cld
dec
jns
xchg
and
stc
sbb
fildl
and
sub
mov
push
stos
daa
xor
xor
adc
int
test
xchg
adc
pop
sbb
std
fwait
cli
or
xchg
cwtl
mov
push
jbe
or
mov
cmp
imul
add
pop
cli
jle
push
xchg
mov
icebp
cmpsb
leave
leave
ds
add
in
ljmp
xlat
enter
sbb
mov
hlt
sub
out
sub
fs
aas
in
jmp
into
daa
adc
jae
fistpl
stos
pop
arpl
out
lcall
cli
inc
add
fwait
arpl
and
dec
cltd
aad
popa
andl
jl
xor
xor
sarl
test
mov
and
lea
mov
enter
cwtl
push
shlb
or
cltd
dec
sbb
lahf
mov
jle
push
sahf
adc
stc
xlat
aam
iret
cmp
xchg
push
iret
mov
pop
repnz
sub
jo
mov
jns
fdiv
aaa
xor
mov
xlat
adc
xchg
or
dec
in
fs
dec
dec
xchg
bound
xchg
xchg
inc
xchg
test
mov
lret
jmp
push
mov
out
mov
mov
or
fisttpl
out
sub
adc
out
shl
js
or
add
repnz
jge
dec
jns
jle
and
jno
cli
sbb
adc
outsl
fs
pop
or
nop
push
adc
push
mov
into
cmpsb
in
gs
dec
push
mov
jne
jae
xor
fldl
push
sub
js
ret
mov
jg
popa
lahf
rcrb
sub
pop
hlt
in
lcall
stos
mov
ret
cmpsb
popa
mov
rcrb
fcompl
cs
mov
je
insb
push
fsts
jnp
insb
and
lcall
or
jp
sub
es
sti
mov
int3
hlt
or
xchg
dec
add
xor
pop
clc
push
mov
mov
imul
andb
cmpsl
scas
pop
pop
mov
cmc
xchg
ret
inc
jno
push
hlt
dec
push
jge
push
jmp
popl
ds
fs
xor
push
in
or
imul
fdiv
les
mov
push
imul
nop
mov
call
inc
cltd
pop
sahf
das
into
or
adc
mov
lods
jmp
mov
jnp
outsb
sub
pop
mov
divl
addr16
and
insl
add
and
mov
loop
jg
xor
adc
loop
xchg
dec
movsl
cmp
dec
or
mov
add
out
and
fisttpll
dec
push
dec
xor
push
cmp
in
mov
mov
out
cs
scas
movsl
mov
sbb
sahf
out
pop
loope
popf
sub
imul
dec
stc
test
pusha
mov
jne
lret
call
sub
xchg
je
cmp
int3
sti
sti
out
out
jnp
lock
aad
xchg
pop
insl
ja
imul
mov
jbe
dec
enter
mov
mov
xchg
fisubrs
mov
xchg
sbb
out
mov
dec
ljmp
mov
mov
inc
int
lret
ljmp
mov
data16
jp
and
cmp
xor
test
call
mov
mov
add
mov
mov
mov
into
ret
sbb
xor
xchg
aas
or
add
push
in
sbb
add
xor
inc
push
lcall
pop
test
or
jns
in
sbb
cmp
sarl
add
sbb
dec
cli
rolb
mov
aam
scas
push
push
mov
popf
add
std
out
adc
push
inc
inc
inc
mov
sti
push
mov
lea
and
test
fstpl
out
or
lcall
add
pop
pop
mov
bound
imul
jno
ds
repnz
cmp
inc
sbb
jbe
in
testl
dec
js
and
push
mov
mov
fwait
in
sbb
sbb
test
stos
cld
or
or
movsl
mov
ljmp
inc
mov
daa
cmp
mov
and
mov
mov
mov
lods
lret
mov
jg
loope
hlt
mov
aad
lret
pusha
inc
lahf
jg
and
pop
mov
dec
add
cmp
cmpsl
fsubrl
xchg
mov
aad
or
xor
xor
jns
lahf
push
cmp
mov
sahf
sub
aaa
mov
push
rorl
sbb
xchg
xchg
jno
data16
mov
xlat
repnz
mov
inc
fwait
mov
sbb
lods
xorl
pop
test
ficoml
cmp
cmp
adc
xchg
push
negb
jne
xchg
sub
sbb
adc
ljmp
push
xchg
jl
data16
add
pop
xchg
gs
add
pop
sbb
jge
or
ljmp
jb
add
mov
sbb
push
leave
ljmp
adc
xor
and
sbb
xchg
sahf
add
pop
adc
out
rclb
mov
sub
lods
popf
adcl
sub
rcrb
cltd
scas
add
xchg
pop
dec
mov
call
fdivrs
ss
out
cmp
dec
mov
xor
jle
and
pop
mov
xlat
sub
rcll
xor
sub
rclb
aad
jmp
in
call
shll
xchg
scas
es
mov
testb
divl
pop
sub
push
cmpsb
push
loope
push
inc
stc
scas
sub
xchg
into
xchg
pop
sbb
mov
insb
fcoms
dec
repz
add
jecxz
imul
xchg
stc
imul
sbbl
sbbb
std
sbb
jns
pusha
call
insb
adcl
icebp
hlt
sub
xchg
imul
inc
cltd
jmp
scas
jg
add
pop
lds
lcall
and
jbe
mov
xchg
add
add
sbb
fidivl
cltd
or
mov
mov
jecxz
sti
leave
out
pop
cmp
stc
jmp
addr16
sub
sbb
pop
xor
aam
dec
int3
cwtl
andb
push
sbb
sbb
scas
outsl
lahf
jns
push
fstp
loope
jge
call
adc
dec
mov
push
xor
push
repnz
arpl
mov
push
pop
ret
enter
add
inc
lret
test
test
out
fbstp
sub
pop
pop
sbb
pop
mov
rorl
mov
stos
or
xchg
testb
stos
outsl
mov
nop
mov
jge
movsb
mov
das
jne
adc
mov
sahf
mov
xchg
icebp
jg
xchg
sub
xor
add
iret
inc
xchg
aaa
lods
mov
ja
iret
xchg
shrb
shr
mov
sahf
and
popl
aaa
dec
ficoml
pop
sti
mov
cmp
xchg
pop
out
out
jecxz
sbb
gs
outsl
cmp
icebp
aad
add
pusha
roll
add
pop
inc
stc
jecxz
rolb
or
mov
dec
rclb
inc
mov
lock
xlat
jl
add
cmp
or
push
stc
cltd
and
xor
pusha
pop
xchg
mov
mov
scas
mov
shlb
rcrl
mov
ss
test
add
in
push
test
jmp
cmc
lock
fiadds
cmp
jae
out
pop
dec
cmc
mov
repnz
xchg
in
stos
adc
or
xchg
add
cwtl
mov
std
jp
insl
cli
sahf
cmpsl
xchg
inc
lods
push
mov
jle
xchg
in
pop
cmpsl
dec
sub
push
mov
inc
lods
dec
hlt
pop
ss
adc
imul
jp
in
outsb
sarl
cmpsl
stos
pop
or
lcall
data16
cli
push
push
mov
pushf
mov
pop
call
popa
scas
cmp
in
jg
sbb
sti
and
pushf
cs
aam
pop
cmp
nop
repz
mov
cld
sbb
jg
mov
and
call
mov
cld
lea
mov
imul
xchg
out
test
mov
xchg
jle
or
cli
pop
add
lock
mov
stos
xchg
and
and
pop
mov
xor
sub
xchg
mov
xor
and
mov
and
js
push
push
rorb
fwait
icebp
sahf
xor
inc
jle
cmp
push
jns
push
push
sub
push
shlb
fldl
stos
add
fmul
cld
in
mov
cmp
loop
dec
pushf
sub
jle
leave
scas
jmp
xchg
sti
push
fs
push
bound
xlat
mov
sbbb
loope
dec
jle
mov
push
sbb
es
lods
pop
xchg
pop
lds
dec
in
fsts
int3
xorb
xor
jo
xorb
sti
dec
adc
aam
mov
jmp
sub
jne
push
jmp
int3
inc
hlt
shlb
imul
movsb
out
adc
in
xchg
outsl
jne
jmp
xchg
sub
inc
andl
popa
inc
sahf
ror
mov
cltd
fadd
adc
sbb
inc
and
pop
mov
xchg
xor
ljmp
popl
and
out
arpl
jnp
and
jg
decb
adc
das
bound
xchg
sti
xor
sub
decl
and
in
mov
xchg
ret
cmp
mov
fidivrl
cld
shlb
dec
mov
movsb
push
push
sbb
cmc
push
and
add
or
in
cmpsl
sbb
pop
lods
lea
adc
stos
cmp
aam
fimull
sbb
and
es
add
fnstenv
or
adc
decl
jne
xlat
bound
cmp
rcll
push
frstor
outsb
push
sti
cmc
inc
or
dec
gs
lahf
ja
adc
addb
and
popa
adc
rorb
mov
pop
add
push
ss
mov
xlat
inc
insl
ss
xor
mov
jo
add
mov
test
mov
gs
xchg
dec
insb
adc
shll
into
scas
pop
pop
mov
cltd
jns
pop
dec
mov
ret
mov
inc
stos
mov
in
fadd
or
cmc
inc
dec
test
push
ss
fwait
jne
in
in
jae
mov
cmp
mov
movhps
loopne
dec
or
mov
mov
pop
push
mov
outsb
inc
or
fiaddl
inc
sbbb
ficomps
cmp
xchg
clc
jnp
lock
inc
nop
insl
inc
cs
add
loop
xchg
mov
out
mov
addr16
popa
fidivrl
dec
adc
dec
ds
xlat
xlat
sarb
pop
mov
cwtl
fmuls
xor
dec
push
les
sbb
jo
xchg
ja
xchg
out
jno
xchg
xchg
mov
outsb
mov
jle
dec
jg
lret
xor
mov
mov
ja
inc
xor
mov
mov
sub
xor
adc
loopne
out
pop
pop
sbb
test
fistpll
mov
jmp
dec
adc
out
fsubr
push
jbe
ds
add
daa
pusha
cwtl
pop
adc
xor
mov
jecxz
dec
pop
push
fwait
or
mov
jae
inc
add
pop
fadds
ljmp
repz
xor
mov
sbbb
mov
icebp
movsl
call
aaa
imul
mov
pop
in
jo
enter
sub
imul
scas
mov
dec
dec
ljmp
jo
enter
leave
mov
mov
mov
outsb
stos
mov
bound
aas
jne
push
fsubrl
pop
ljmp
aas
push
mov
lahf
and
repnz
mov
jg
adc
out
pusha
out
jnp
ljmp
rorb
cwtl
xchg
nop
sbb
sub
mov
out
xchg
cmp
scas
pushf
sub
and
inc
idivb
xchg
in
mov
scas
push
aaa
mov
inc
pop
movsb
xchg
push
pop
adc
cmp
ss
xchg
jb
mov
bndstx
stc
lahf
push
mov
mov
pop
dec
cmp
inc
mov
or
mov
add
filds
sbb
rcrl
aaa
inc
cwtl
mov
ds
repz
dec
xor
mov
mov
out
fildl
aaa
out
sub
gs
mov
cmp
adc
aad
sti
ret
jbe
lret
xor
int
lret
pop
or
imul
lock
cmp
cltd
notl
or
hlt
insb
mov
shrl
mov
movsl
pop
pop
jecxz
leave
jno
bound
out
lahf
fdivl
cmc
jnp
adc
test
cmp
sbb
repz
xchg
fdivrs
jle
repnz
rorl
xchg
sbb
xchg
xor
pop
and
mov
xlat
inc
outsl
mov
in
push
test
out
pop
jno
add
mov
stc
jp
imul
push
inc
jae
out
add
mov
inc
movl
rolb
fmull
push
cmpb
add
out
jecxz
push
leave
fldenv
iret
cmp
insl
xor
xchg
mov
mov
fidivs
xchg
pop
inc
into
or
ret
clc
push
outsl
in
push
xor
les
in
add
sbb
icebp
mov
or
sbb
mov
jne
mov
mov
neg
push
pushf
jecxz
imul
and
cltd
push
or
pop
mov
ret
or
mov
xchg
jp
cltd
adc
xor
in
mov
jo
dec
cmpl
lret
aaa
sti
test
mov
mov
sahf
mov
das
sub
push
xor
int3
sub
imul
xor
mov
inc
cmc
out
mov
mov
sbb
pop
sbb
dec
push
outsb
inc
fnsave
insl
inc
lret
push
dec
cmp
pop
pop
bound
mov
xor
cli
cmc
xor
test
xor
jnp
push
add
stos
xor
arpl
clc
stc
pop
adc
out
stc
cltd
inc
shr
cwtl
or
mov
mov
outsl
adc
xor
push
test
addr16
jns
cmpsl
mov
movsb
dec
add
out
ja
pushl
dec
xor
mov
fisubl
mov
jbe
outsb
xchg
push
or
pusha
add
add
cmp
popf
push
add
inc
adc
rcl
dec
std
cltd
dec
lahf
jb
push
xor
icebp
and
sbb
push
aaa
mov
dec
out
test
sbb
mov
rorl
pop
jb
xchg
loope
cli
jge
sbb
loop
push
mov
cltd
xchg
outsl
sub
sbb
cs
adc
cmpsb
cli
out
lods
je
imul
push
nop
dec
mov
jo
stc
iret
loopne
leave
pushw
mov
or
add
adc
sbb
int
xchg
and
ss
cltd
jmp
sar
outsl
je
jo
shrb
js
sbbb
out
aam
pop
push
dec
int3
add
les
test
stos
aad
lds
adc
xchg
dec
lock
xchg
mov
mov
pop
xor
pop
push
and
jae
mov
fs
shrl
cwtl
clc
adcb
mov
out
sbb
shr
push
add
jns
dec
int3
mov
in
mov
fcmovb
in
cs
imul
xchg
mov
mov
push
jae
mov
stos
push
pop
push
push
add
ficomps
sub
cmp
sbb
daa
arpl
sti
adc
adcl
int
movsb
jne
sti
les
xor
pop
pushf
inc
loopne
ffree
cwtl
sti
mov
fidivrs
or
insb
cmp
shll
arpl
shll
in
or
int3
lret
push
rcrb
cmpsb
shlb
sub
fcmovu
add
leave
jp
insb
mov
jmp
loop
in
cmp
push
inc
int
inc
or
and
loop
mov
inc
jns
arpl
bound
outsb
fsubl
xchg
mov
mov
sub
pushf
out
in
pusha
sub
rolb
scas
push
rorb
and
in
push
adc
out
jg
jp
sub
jg
push
add
mov
inc
or
ljmp
add
loop
pop
stos
decl
lods
xchg
mov
nop
push
push
push
sub
stos
popf
adc
ret
stos
add
int
clc
dec
std
mov
push
je
pop
lods
jo
push
sub
pop
cltd
out
popf
add
adcb
mov
push
add
pop
sbb
adc
jb
dec
loope
push
icebp
push
jne
fs
mov
or
push
addl
jecxz
iret
jbe
dec
adc
jecxz
cwtl
xchg
sbb
cmovp
xlat
mov
repz
out
push
ret
loop
cld
fs
push
push
or
xor
arpl
movsl
push
xor
pop
lahf
repz
jnp
jb
jge
mov
inc
xor
rclb
dec
aaa
xlat
lods
hlt
add
jns
ljmp
dec
into
adc
je
xlat
or
rcrb
and
js
xor
mov
push
ret
out
jbe
pop
test
push
outsl
test
cmpl
push
push
scas
clc
xchg
add
mov
dec
mov
mov
dec
rclb
out
dec
ds
adc
and
call
sub
mov
pop
push
pop
aas
and
sub
mov
test
aaa
add
jmp
shll
repz
lcall
out
lret
or
xchg
or
mov
mov
add
sbb
sarb
sbb
stc
sbb
std
rcrl
push
in
and
sub
fsubrp
xchg
jae
push
push
pop
xor
movsl
mov
test
cli
ret
in
cmp
jge
mov
stc
cwtl
cs
test
idivb
test
imulb
inc
lret
push
sub
mov
out
outsl
ret
mov
sub
mov
push
inc
adc
cmpsb
les
pop
push
sub
xchg
sbb
into
mov
xchg
push
xchg
sahf
js
subb
movsb
mov
and
jge
add
xchg
pop
fstl
repnz
jg
outsl
adcb
cld
out
sbb
or
sub
out
add
and
push
pusha
into
fs
adc
mov
or
pop
ds
or
dec
mov
mov
fstl
jecxz
js
jbe
into
mov
vpor
pop
lea
daa
push
es
test
out
push
mov
sahf
dec
arpl
xchg
push
mov
cld
in
jno
rcrl
xchg
push
cmpsb
popf
insb
sbb
jge
pop
fcomps
pop
sar
xchg
clc
into
xchg
mov
xor
jno
ret
sbbb
data16
movb
negl
call
push
loopne
pop
adc
mov
jl
sbb
sub
das
mov
and
jae
scas
xor
cmp
xchg
dec
push
mov
and
test
aas
leave
repz
addr16
pop
gs
inc
cmp
inc
repz
in
inc
cmp
insl
mov
pop
mov
stos
mov
ficomps
movsb
sbb
fadd
push
orl
cmc
repz
arpl
enter
sarl
sbb
mov
inc
sub
mov
sti
fldt
fsubrs
repnz
push
lahf
dec
jns
xchg
icebp
ss
mov
mov
and
notl
fisubrs
inc
cmp
xchg
cmc
dec
cmc
imul
adc
sbbl
insb
dec
inc
mov
loop
cmp
insb
or
cmp
push
lea
stos
shll
andl
pop
stc
in
and
ja
int3
inc
mov
ja
jns
push
mov
sub
inc
mov
dec
lahf
jae
mov
pop
mov
jl
fcompl
xchg
mov
aas
xor
cmpsb
add
repz
lds
lahf
add
cmp
inc
jo
push
xchg
cltd
or
mull
div
jne
daa
cmpsl
jmp
je
test
popf
xor
aaa
mov
fistpll
lret
nop
jns
add
test
loope
imul
push
xlat
xchg
sub
inc
inc
jmp
insb
cli
mov
addr16
subb
adc
in
enter
iret
aaa
insl
gs
push
fwait
add
outsb
adc
fldl
mov
dec
push
testb
es
shl
fs
loop
push
je
sti
jb
xor
cmc
fistpll
jnp
adc
or
or
mov
mov
jle
cwtl
icebp
rorb
add
fcompl
push
cltd
shlb
mov
scas
decl
sbb
orb
sbb
out
jnp
test
out
lds
jp
js
mov
mov
pusha
cli
mov
mov
pop
dec
push
adc
ficomps
dec
cltd
inc
xlat
pushf
popa
mov
cmc
adc
mov
pop
mov
popa
xor
aad
adc
fucomp
adc
into
outsb
fsubl
ret
inc
in
pop
xor
pop
mov
mull
jle
cmp
repnz
cmp
push
and
mov
pop
movb
adc
or
das
cmpsl
filds
mov
in
pop
xor
jg
out
int3
sbb
rorl
aad
push
mov
sub
shlb
or
lds
out
out
mov
add
pushf
mov
cmp
insb
sub
bound
aas
or
ret
fstps
sbb
mov
int
bound
lret
cmp
dec
jno
cmp
mov
outsl
dec
repz
adc
mov
sbb
xor
sub
or
cli
sub
dec
inc
movsl
inc
or
jle
int
and
mov
sbbb
bound
call
mov
iret
xchg
inc
adc
lock
jo
inc
mov
push
dec
mov
cmp
jg
sar
or
mov
xchg
jnp
popl
xchg
or
xor
mov
std
idivl
sub
shll
stc
call
cli
mov
and
subl
clc
xchg
and
mov
mov
push
ja
pop
add
leave
stos
mov
mov
xchg
jbe
out
xor
in
push
cwtl
divb
sub
inc
insl
xor
lods
mov
add
scas
add
mov
lcall
xor
mov
cli
xchg
sbb
dec
and
out
adc
orb
xor
and
int
xchg
dec
cmpsb
leave
stos
ss
jae
pop
stos
jnp
mov
pop
mov
clc
mov
add
in
add
shr
xchg
cmp
pushf
xchg
movsb
lcall
pop
xchg
fcmovnb
adc
jbe
insb
push
decb
lods
jne
fincstp
ficoml
cmp
pop
xor
scas
mov
sti
movb
cmpl
shlb
or
add
ljmp
mov
dec
aas
sub
or
loopne
imul
in
test
decb
in
insb
xchg
ljmp
mov
jae
push
leave
insb
mov
ja
mov
mov
add
pushf
mov
lds
subl
repz
ret
pop
stc
jmp
jb
data16
subl
jae
ficoml
jmp
fistpll
aas
iret
lea
jle
ja
pop
hlt
jo
inc
inc
pusha
imul
ret
adcb
and
sbb
jge
cltd
popf
ficoml
mov
jge
jo
lret
addr16
outsb
out
aaa
mov
ret
push
flds
or
jns
popa
adc
jmp
jae
stos
repz
mov
ret
gs
lcall
stos
mov
pop
test
xchg
aas
dec
push
out
jno
cmpsl
aam
inc
hlt
and
xor
sub
sbb
and
xchg
mov
mov
daa
push
cmp
mov
cld
pusha
xor
jns
js
fmul
fldl
jnp
ret
mov
dec
in
sti
mov
mov
adc
xor
mov
insb
stc
shrl
mov
stc
scas
ja
out
or
bound
fs
mov
cmp
jge
sbb
add
mov
inc
fsts
and
xor
std
jns
xor
shlb
sbb
sbb
jecxz
rorl
sub
mov
mov
mov
and
push
shl
lahf
mov
mov
pusha
filds
jl
shlb
adc
filds
scas
bnd
mov
xor
fldenv
mov
sbb
sub
or
andb
fisubrs
test
mov
cmpl
mov
dec
pop
cmp
into
gs
mov
fisttps
fsubl
xor
movsb
mov
cmp
pop
lahf
jae
movsb
sahf
insl
cmp
inc
add
gs
xor
aam
aas
pop
inc
outsb
stos
pop
xor
fcoms
pusha
or
xor
lret
in
das
mov
sbb
enter
orl
test
iret
sub
sbb
push
das
les
jnp
movsl
adc
pop
dec
cmp
pop
jecxz
aaa
out
pop
push
cli
ja
adc
decl
cmp
popa
and
aad
pop
xor
dec
mov
push
call
imul
data16
or
adc
xchg
int3
mov
inc
nop
cmp
sbbb
ret
cmp
cmpsl
xchg
jo
jl
js
ret
mov
popa
inc
pop
aas
int3
nop
and
lock
dec
addb
popa
xor
cmpsl
cld
gs
aaa
pop
or
faddl
xchg
mov
out
xchg
cwtl
and
mov
rorb
imull
push
adc
pop
dec
gs
mov
jb
xchg
pop
dec
xchg
into
xor
daa
push
sbb
hlt
jo
jl
or
pop
push
pop
push
ret
inc
ds
adc
mov
leave
add
loope
push
fcompl
aad
push
mov
pop
mov
jmp
jge
out
adc
and
out
scas
stos
out
cld
int
ja
and
in
mov
dec
xchg
roll
add
xor
pop
push
fs
dec
aas
call
mov
outsb
sbb
jecxz
dec
sbb
pop
mov
push
rcrb
cmc
or
or
and
xchg
sti
repnz
std
repz
jl
mov
ret
mov
js
cmp
jle
dec
adc
ss
mov
test
lahf
div
aad
sbb
jnp
push
push
cli
dec
fs
sti
mov
in
sub
test
pop
mov
cmp
jne
push
pop
arpl
das
mov
ja
or
adc
out
and
cli
lock
add
mulb
sub
hlt
shl
push
movsl
mov
outsb
or
dec
mov
cli
mov
lods
repnz
iret
popf
dec
or
fdivp
mov
out
dec
mov
or
or
out
jg
outsl
sbb
orl
andw
outsl
scas
push
or
js
orl
sbb
inc
ja
jnp
lahf
mov
push
push
lahf
mov
dec
push
cmpsl
xor
pusha
add
mov
mov
cmp
cli
loope
mov
fdiv
xor
test
sub
xchg
rclb
xor
or
int
jmp
arpl
jae
fwait
loop
mov
and
loopne
orb
push
jecxz
push
xlat
das
sub
fsubrp
fisttpll
pop
das
fldt
and
test
sub
cs
adc
sbb
push
sahf
push
add
into
idiv
int
rol
out
mov
inc
push
popa
cmc
je
push
xchg
xlat
or
out
push
mov
mov
mov
out
popf
adc
mov
push
jae
push
mov
outsl
in
jg
sbb
mov
jae
dec
aam
cmp
jecxz
fs
xchg
or
frstor
sub
fists
push
fiaddl
add
or
rol
nop
sti
pop
xchg
aas
push
push
pop
mov
shr
aad
xor
push
mov
popf
cmp
ja
test
adcb
ss
rcrl
shrl
sub
cmp
test
dec
mov
lcall
test
add
ret
imull
ja
fs
ja
xchg
lret
xor
mov
inc
pop
cwtl
pop
andb
and
fistl
mov
xchg
lds
push
aam
or
xchg
mov
in
inc
xor
fidivrs
sub
xor
cmp
call
test
jge
loop
mov
test
or
imul
and
movsb
imul
test
mov
and
adc
ficompl
jae
pop
mov
add
in
jge
cs
arpl
test
mov
mov
aad
js
xor
imul
adc
stos
lock
push
push
push
cmp
mov
movsb
ljmp
imul
jmp
nop
sbb
cmc
dec
mov
mov
or
cltd
xchg
push
cmp
push
in
lahf
repnz
adc
aad
inc
pop
push
fimull
cmp
sub
stc
sbb
inc
adc
fnstcw
js
sbb
adc
std
repnz
xchg
pop
hlt
sub
pop
jp
adc
es
or
in
inc
test
gs
mov
mov
es
mov
fmull
lea
call
lret
pop
xor
adc
dec
xchg
dec
sbb
mov
out
fildl
jo
mov
pop
aaa
dec
mov
xor
xchg
lahf
mov
icebp
mov
dec
dec
loope
mov
inc
cmp
cmc
imul
xorb
fsubr
out
jns
jle
push
pop
push
mov
sbb
subl
sub
xchg
inc
inc
jge
cli
aad
clc
fwait
sbb
cwtl
inc
xchg
cmpsb
and
mov
aaa
sub
mov
rcl
pop
xchg
stos
adc
add
inc
pop
adc
xchg
fs
or
sub
push
push
pop
xchg
test
jmp
daa
in
or
cmp
movsl
xor
mov
sub
cwtl
pop
mov
shrl
lea
in
ja
dec
scas
outsb
cmpsl
jne
das
cmpsb
jns
divl
test
xchg
jb
mov
fldenv
adc
sub
roll
scas
cmp
push
jnp
adc
arpl
push
lcall
mov
fisubrs
xor
sarb
mov
loope,pn
mov
mov
sub
mov
or
ffree
outsb
mov
jne
inc
mov
pop
popf
into
out
jmp
sbb
dec
popa
flds
pop
push
clc
xchg
daa
xor
out
in
call
mov
cmpsl
add
int
push
lock
iret
xchg
mov
nop
mov
arpl
enter
cmp
rcl
pop
nop
and
out
adc
leave
jns
ljmp
mov
je
dec
sub
shl
jg
popa
inc
inc
sub
adc
imul
mov
enter
xchg
xor
fidivl
rcr
sahf
or
cmc
movsl
mov
push
out
enter
lods
and
ja
scas
jp
sub
mov
rolb
gs
adc
mov
cmp
imul
dec
test
xorb
sarl
jecxz
fucomi
pop
pop
gs
jecxz
pop
int
loope
sub
mov
daa
ds
imul
pop
pop
ds
and
hlt
pop
movsl
nop
loopne
mov
cwtl
adc
mov
int
or
int3
inc
stos
adc
stos
push
xor
jnp,pt
call
fcoml
loopne
ss
adc
xchg
push
cmp
js
ds
das
pop
popa
pop
or
cmp
lahf
jg
mov
mov
jl
aad
pusha
push
and
xchg
cli
xchg
and
and
das
je
and
adc
sub
xchg
add
lret
jmp
ds
mov
sbb
pop
adc
or
pop
mov
adc
mov
lret
repnz
and
or
lret
repnz
ret
mov
imul
sti
sbb
xchg
push
push
mov
push
cwtl
or
sub
mov
roll
fcoms
stc
addr16
push
add
cmc
fsub
cwtl
adc
cmpsl
cmpsl
add
sub
and
bt
ljmp
fbld
je
out
push
jp
in
in
icebp
dec
cmp
call
pop
ja
xchg
cmpsl
adc
aaa
mov
push
test
push
shlb
push
xor
outsl
dec
mov
sub
pop
add
push
xor
add
cmp
not
dec
jmp
sbb
ret
repz
in
call
dec
adc
sbb
sbbb
out
xchg
xlat
dec
sub
fisubrs
mov
sub
test
jae
dec
cld
jge
sbb
or
fwait
inc
imul
adc
jb
and
add
inc
test
mov
pop
out
sti
push
mov
fimull
test
xchg
push
pop
mov
and
leave
mov
fistpl
pop
sbb
pop
cli
push
popf
add
pop
call
jg
int3
jno
imul
dec
sbb
inc
movsb
push
shrl
mov
adc
std
jo
sbb
out
in
push
f2xm1
shlb
cmp
imul
adc
xchg
aas
setno
shrb
stos
cmp
sahf
add
xor
scas
xor
jns
mov
loop
xchg
outsb
push
or
pusha
mov
addl
cmc
inc
stos
hlt
outsb
mov
xchg
and
in
test
loop
jecxz
and
jecxz
mov
or
movl
test
jg
imul
adc
pop
dec
sbbb
lock
test
jmp
nop
les
fs
mov
cmp
daa
test
in
in
loope
xchg
jno
scas
mov
or
cmpsl
jae
and
jp
in
mov
clc
ss
sub
ficomps
hlt
xchg
xchg
popw
inc
rcll
call
mov
and
shl
gs
mov
push
lods
es
jne
outsl
stos
test
jbe
mov
std
ret
inc
sub
lret
sahf
xchg
pop
sub
shr
add
and
mov
xchg
gs
cmp
xor
jne
ds
sbb
sbb
sbbb
push
xchg
push
sub
shlb
dec
add
add
ss
pusha
jle
adc
pusha
test
cmp
pop
loopne
jns
xchg
mov
dec
mov
outsb
jb
mov
out
sbb
scas
hlt
xor
rcl
dec
ljmp
xchg
aaa
aas
mov
or
or
pop
xor
sub
add
xor
out
jne
dec
xchg
cli
insl
into
cvttps2pi
xor
jb
push
ficoml
aad
mov
das
pop
inc
pop
pop
arpl
js
add
cmp
adc
out
addr16
adc
and
push
jbe
xchg
gs
andl
leave
and
lods
je
test
sub
mov
mov
insb
ja
flds
stos
ret
bound
mov
push
lods
adc
addb
enter
sub
in
jb
dec
scas
loop
sbb
jno
add
dec
and
stc
sbb
inc
arpl
icebp
cmp
sbb
xor
fst
popa
pop
cltd
adc
or
lods
ljmp
mov
call
jp
jmp
add
mov
pop
int
mov
inc
inc
cmp
movsl
sub
les
roll
inc
cmp
ds
inc
mov
daa
ficoms
ljmp
jecxz
cmp
push
cmpl
faddl
xchg
jno
stos
frstor
xlat
xchg
push
pop
mov
sti
mov
shlb
xchg
fsubrl
out
popf
xchg
hlt
shll
ss
xor
mov
loopne
add
insl
movsl
mov
cmp
and
push
fldcw
pop
iret
fbld
fwait
popa
mov
sbb
adc
rorb
sub
push
adc
sbb
pop
sbb
or
mov
mov
add
fnstsw
mov
dec
lcall
fs
dec
lea
sbb
pop
in
in
xchg
cmpsb
fadds
push
mov
xchg
xor
mov
fildll
mov
mov
cmp
in
push
inc
mov
xchg
in
pop
adc
sub
test
pop
mov
pop
add
arpl
les
loopne
sahf
stc
popa
xchg
dec
mov
mov
loopne
sar
mov
cmpb
stc
push
adc
mov
push
ja
cs
mov
mov
cld
lock
int
dec
inc
bound
rolb
dec
dec
push
stos
cld
ror
or
jae
cltd
sbbl
popa
adc
int
subb
sahf
or
mov
cmp
cltd
and
test
add
inc
pop
xchg
mov
inc
jmp
jnp
xchg
mov
adc
les
push
lret
adc
outsl
mov
xor
lahf
xchg
jle
mov
insb
ljmp
repnz
mov
fdivp
pushf
sbb
and
xchg
stos
mov
clc
ret
push
rorl
out
pop
mov
test
mov
cmc
ss
loopne
adc
jg
aad
mov
cmp
mov
or
add
adc
and
ljmp
mov
lods
rcr
cmp
xor
add
add
fdivp
daa
push
aas
dec
pop
shll
loope
enter
and
clc
cmp
rcrb
push
pop
cmc
stos
fcmove
cld
xchg
push
xchg
nop
fisttpl
pop
add
cmp
dec
xor
jl
fidivs
and
mov
bound
nop
inc
stos
sub
outsl
pusha
addr16
push
int
xchg
leave
push
xor
sbb
push
mov
jb
mov
push
sub
push
and
inc
arpl
jns
aas
jbe
sub
mov
in
lcall
int
push
mov
sbb
pop
repz
cmp
cmp
xor
xchg
daa
pop
push
dec
xor
test
ja
push
fildl
dec
lret
lcall
arpl
cltd
loope
sub
sbb
sbbl
mov
jns
adc
push
xor
lods
adc
filds
nop
stos
aas
pusha
out
mov
and
mov
mov
pusha
pop
dec
add
lret
adc
jge
std
aaa
mov
and
mov
movsl
inc
cmp
pop
dec
ss
mov
shll
lret
mov
push
cs
lods
outsl
shl
ficoms
push
pop
mov
or
test
sahf
loope
dec
arpl
mov
insb
je
sbb
xchg
rorl
mov
and
cmpsb
inc
ss
push
mov
and
lea
dec
mov
inc
mov
dec
stos
mov
call
imul
pop
fisubrl
call
ror
stos
cmp
icebp
or
adc
mov
xchg
hlt
into
fsts
pop
pop
call
aas
add
xor
sub
idivb
mov
inc
mov
lea
rcr
out
call
jmp
sbb
dec
mov
xlat
insl
cmp
cmp
loope
sub
outsb
out
push
jge
pop
dec
xchg
popa
mov
push
decl
imul
or
push
dec
in
sbb
xchg
sub
lcall
adc
dec
dec
testl
adc
ret
int3
jbe
ljmp
out
add
scas
fstpl
mov
fcmovb
jg
mov
mov
stos
ss
test
fs
orb
call
cmp
xlat
adc
imul
popa
bound
or
or
inc
in
clc
test
dec
adc
test
xor
push
call
add
and
jg
pop
sub
mov
ror
xor
xchg
icebp
mov
jo
push
adc
and
fwait
shll
push
cwtl
popw
push
lret
sub
insb
mov
addr16
push
jge
cmpsl
adc
lret
or
mov
loop
sarb
testb
insb
push
cmp
and
outsb
clc
fbstp
outsb
pop
push
in
imul
fistl
leave
fimull
jle
out
pop
mov
rcrb
out
push
jl
insl
push
adc
mov
out
sbb
ss
or
leave
icebp
pop
jmp
cs
sti
xchg
mov
adc
ds
cmp
adc
mov
sbb
test
sbb
mov
dec
mov
or
cmp
shrb
clc
cmp
sti
cltd
xor
mov
pop
or
scas
scas
xor
mov
pop
sti
adc
int3
ja
sarl
mov
push
sbb
fdivrs
lock
adc
adc
fstl
adc
loopne
sahf
ficoml
mov
cmp
cmp
dec
movsl
subb
sbb
pusha
mov
rcrl
shll
mov
stos
mov
dec
dec
pop
movsb
cmp
xchg
inc
daa
call
inc
arpl
adc
je
cmpsl
sbb
cmp
ret
cmc
pop
jmp
outsl
xchg
cmp
popa
sub
gs
dec
test
gs
into
add
sbb
adc
jle
int3
fwait
jne
inc
mov
sahf
scas
cmp
cmp
fcomps
out
inc
inc
sbb
mov
fidivs
gs
cmp
cld
sarl
enter
mov
inc
lret
xchg
out
dec
pop
bnd
imul
jg
xchg
inc
pop
pushf
insb
xchg
lock
inc
pop
call
jmp
mov
or
lds
and
cmp
mov
push
in
aam
cmp
xor
arpl
mov
outsl
jl
fldl
add
pop
or
in
inc
js
out
add
push
fsubrl
xorl
xor
mov
push
sbb
scas
in
popa
movsl
imul
test
insb
sbb
mov
pop
lea
loop
fimull
xchg
cmpsl
pop
push
mov
jp
xchg
sbb
jne
or
mov
dec
cmp
xchg
shlb
lret
stos
out
bndstx
pop
mov
inc
dec
cmpsb
call
rcl
int
pop
int
xchg
and
je
pop
stc
sub
cwtl
ja
jne
jl
jmp
mov
cmpb
gs
scas
shrb
dec
and
cltd
push
push
push
popa
int
fimuls
inc
jl
or
pop
loop
pop
and
sub
lea
stc
dec
out
adc
sbb
andl
pop
ret
and
nop
dec
sarb
xchg
xchg
dec
leave
xchg
cmc
add
pop
mov
xor
inc
pop
jecxz
xor
bound
xchg
loopne
test
inc
fadds
dec
and
icebp
sti
inc
push
jo
pop
in
pusha
xor
xor
inc
push
and
xor
cmpsl
push
bound
cmpsl
mov
pop
xor
into
inc
mov
data16
fidivs
outsl
in
mov
insb
jl
push
add
loope
pxor
repz
dec
xchg
sti
pop
xor
push
repnz
dec
es
aaa
mov
xor
inc
add
cmc
test
sub
or
movsl
out
pop
adc
jo
dec
scas
fstps
push
mov
mov
mov
or
inc
cld
pusha
lods
mov
gs
cwtl
int3
cmp
or
mov
pop
cmp
mov
inc
nop
xlat
mov
js
mov
cs
and
jle
dec
jecxz
negl
cmp
lods
dec
sub
jg
sahf
xor
sbb
mov
loop,pn
sbb
pop
push
stos
stc
loope
fmul
inc
adc
inc
sub
adc
sub
jnp
sub
or
in
imulb
fcmovne
bound
ja
mov
mov
mov
push
out
mov
and
leave
std
or
mov
dec
popf
ljmp
test
and
or
add
movsl
popa
xchg
std
hlt
xchg
out
sbb
jns
dec
mov
and
push
stc
outsb
popf
dec
enter
and
lea
push
js
ror
cmc
and
mov
repnz
fsub
pop
pushf
decl
inc
xor
sbb
lods
in
xor
lea
int
dec
push
movsb
fimuls
sbb
jg
jg
shll
in
mov
fdiv
jecxz
and
icebp
movsl
in
call
xchg
pop
andl
fisttpl
pop
lods
mov
jnp
std
pop
lret
dec
push
jmp
and
in
pop
mov
repz
cli
roll
adc
fs
in
ret
jp
or
jmp
sti
hlt
push
pop
js
aas
pop
scas
insl
insb
inc
lahf
scas
nop
ret
xor
or
mov
mull
outsl
sbb
jb
aas
dec
add
out
cmpsl
and
imul
or
dec
js
lods
adc
push
fs
mov
sbb
push
add
shlb
xor
je
mov
outsl
or
shlb
cmp
lods
cmp
push
mov
popf
pop
mov
test
sbb
jo
test
es
ja
out
aaa
imul
push
inc
or
mov
mov
insb
xchg
mov
push
mov
mov
add
xchg
mov
loopne
mov
sti
nop
or
jmp
fcomps
js
add
pop
mov
push
push
ja
aaa
dec
fmuls
andl
sub
cmp
jno
mov
lds
aaa
aaa
aas
mov
popf
adc
sub
xor
cmpsl
jp
xchg
data16
xchg
shll
in
push
out
addr16
shl
outsb
repnz
cmpl
dec
insl
int
inc
mov
xchg
xchg
jnp
mov
push
test
mov
and
inc
mov
cmp
movsb
lds
inc
push
repz
fldcw
daa
shrl
mov
pop
cmpsl
xor
add
fsubrs
push
cmp
jo
xlat
daa
shlb
rclb
imul
rcll
mov
icebp
jno
fdivl
or
cmpsl
into
lds
dec
outsl
lock
or
sub
and
xor
ret
clc
sbb
stos
inc
cmpb
jno
fstpl
push
mov
cli
cli
test
les
call
pop
xor
jl
cwtl
pop
mov
in
inc
or
mov
mov
fucomp
cmp
and
mull
jg
hlt
push
leave
or
fcmovne
sahf
pushf
mov
sub
lds
aam
mov
lret
repz
push
in
push
sti
scas
cmp
and
jle
mov
cmp
roll
arpl
inc
sbb
xor
mov
pop
pusha
ret
in
dec
push
test
lock
xchg
fwait
cwtl
push
xor
mov
les
mov
es
xchg
sub
inc
pop
test
fldt
addr16
stc
inc
iret
sbb
aaa
cltd
pop
fstl
jp
jbe
mulb
adc
add
fs
mov
outsl
movl
ret
sbb
in
lock
fwait
mov
pop
cmp
jp
shlb
cld
nop
sub
arpl
sub
sub
xchg
orl
out
add
pop
rol
jl
aaa
sahf
jo
jne
aaa
adc
or
pop
cmp
inc
loope
xchg
lahf
subb
in
adc
loop
in
xor
test
mov
pop
mov
adc
fstpt
inc
add
repnz
cmp
repnz
mov
and
or
push
repnz
fwait
sub
mov
add
cwtl
roll
idiv
xchg
mov
push
ja
push
xor
cmp
add
dec
sub
fildll
cmp
push
lcall
test
or
push
sbb
sahf
add
test
cmc
stc
mov
fildl
jmp
jp
xchg
loope
aas
pushf
dec
cmp
aaa
movb
test
mov
lods
sbb
lock
xchg
sbb
xchg
push
push
push
inc
jg
xchg
loop
pop
rclb
jl
aam
insb
mov
cmp
daa
pop
inc
or
fbld
push
in
push
je,pt
out
fisubs
cmp
sub
bound
negb
jle
decb
sbbb
stos
test
outsl
jge
push
in
mov
outsl
cmpsl
fxch
iret
sbb
mov
rclb
sbb
loop
sti
cmpsl
cmp
fdivl
push
fs
xchg
push
sbb
inc
and
pop
inc
fisubl
pop
pop
dec
rolb
js
repz
adc
mov
sub
sti
push
pop
popa
sub
lock
lock
mov
cmc
push
push
in
jbe
cltd
in
jl
loope
movsb
xchg
jmp
imul
xchg
ret
sbb
cltd
cmp
fmull
mov
xchg
cmp
mov
pop
sbb
in
jp
push
adc
push
push
push
xchg
cmpb
push
cmp
add
xchg
mov
adc
mov
imul
inc
cmp
or
xlat
mov
sub
or
xchg
push
push
hlt
mov
rcr
xchg
xorb
mov
jo
and
addl
cmp
push
leave
xlat
scas
rorl
icebp
xor
lret
add
out
ds
lret
inc
push
insb
int
out
arpl
xchg
sbb
mov
data16
cs
pop
pop
lahf
dec
jo
testl
insl
add
stos
fisttpll
push
out
cmp
int
or
mov
inc
pop
mov
push
mov
fcoms
out
mov
xor
pusha
enter
lret
icebp
loop
ss
jecxz
xchg
stos
or
mov
xchg
pop
adc
sbb
rclb
lret
leave
xchg
mov
insl
xor
cmp
mov
vmaskmovdqu
stc
mull
sub
inc
cmpsb
scas
inc
mov
insl
scas
test
icebp
les
cmp
mov
dec
cmp
pushf
sbb
adc
dec
mov
jge
shlb
int3
dec
push
mov
aaa
loop
jbe,pn
loopne
sbb
ss
outsb
lret
jo
mov
dec
notl
stos
rclb
dec
gs
cmp
push
fdivrl
aaa
mov
or
arpl
shrb
dec
add
sahf
test
ds
xchg
insb
aam
ficomps
push
stos
sub
dec
adc
in
aam
inc
xchg
ds
ss
lods
lods
xchg
xor
mov
insb
dec
inc
pop
fucomi
cld
lods
mov
or
pop
int3
fs
jbe
adc
xorb
ds
addr16
jle
sbb
in
test
cs
xlat
mov
sub
push
jae
stos
push
std
xchg
adc
in
jne
callw
int3
pop
lea
pop
cs
orb
jno
out
pop
xchg
data16
add
arpl
movsl
push
push
add
aam
lret
add
mov
in
std
jne
cwtl
fcomp
inc
jo
mov
popa
inc
mov
jae
aam
mov
cmc
adc
mov
mov
stos
xchg
mov
rcl
mov
ljmp
pop
mov
out
cld
lahf
dec
cmp
cmp
lahf
xchg
fstpl
push
mov
outsb
or
lods
add
xor
daa
aam
jge
pop
dec
stos
dec
test
mov
ljmp
leave
cwtl
popa
insb
aad
aaa
rcrb
shll
ss
sub
jge
or
fcomp
xchg
sub
sub
jle
push
xchg
test
xchg
lods
test
popa
out
and
pop
out
push
pushf
test
fimull
add
push
lock
mov
sbb
or
repz
push
add
xchg
dec
mov
adc
pusha
mov
push
pop
jle
sub
outsl
mov
rcrl
aam
das
es
mov
sahf
popa
xchg
mov
adc
repz
aam
data16
mov
sahf
pop
jecxz
cmp
lahf
shll
add
cmp
pop
sub
stos
mov
pop
mov
push
js
in
fst
insl
movsl
aam
arpl
fxch
scas
push
mov
xchg
push
shlb
sarl
cmp
or
in
call
icebp
xchg
cltd
loop
mov
push
mov
and
adc
mov
notl
and
dec
mov
xchg
nop
jp
imul
mull
popf
inc
sub
testb
jne
mov
adc
jmp
jnp
pop
cltd
inc
dec
ds
loope
xchg
pop
inc
ret
sub
sbb
popl
add
pop
jp
out
faddl
call
fbstp
push
xchg
jge
mov
mov
shlb
xor
add
shl
jb
dec
lcall
leave
shr
test
in
mov
std
fistps
mov
sahf
sbb
es
adc
decb
lock
cwtl
daa
mov
icebp
arpl
stc
add
pusha
mov
movsb
aaa
test
push
fistpll
fcmovnb
push
adc
jnp
jae
sub
xchg
mov
push
jmp
mov
movd
sub
sbb
or
adc
cld
pop
les
xchg
data16
lcall
cmp
cmc
loopne
cwtl
pop
add
mov
out
xchg
pop
xchg
adc
loope
or
icebp
cmp
sbb
dec
jbe
int
push
sbb
popa
subl
mov
push
cltd
mov
mov
nop
lret
inc
pop
loope
stos
cmp
and
call
out
clc
lock
jno
jmp
cmp
xchg
cmc
mov
popa
lret
jno
shlb
ds
jbe
fsubl
fstpl
pop
and
stos
loopne
je
xor
popf
inc
dec
mov
push
push
bound
sti
pop
mov
or
dec
sub
mov
int
cltd
cmp
in
jno
pop
inc
lock
add
push
inc
push
xor
jbe
fdivrp
inc
call
cmpl
lret
jnp
mov
cld
push
inc
fwait
add
xchg
andl
mov
and
in
xlat
pop
test
addl
or
cwtl
add
push
mov
push
sub
rclb
xchg
inc
jne
shr
repz
faddl
shrb
nop
cs
pop
fisttpll
arpl
lds
repz
scas
push
shr
sahf
pop
inc
mov
xchg
test
sbb
sbb
jo
daa
cmp
into
jne
pop
lds
and
in
fldcw
mov
aaa
jno
dec
les
push
test
bound
mov
test
pop
xor
shrb
push
imull
jno
addl
iret
adc
sahf
mov
aam
mov
stos
inc
sbb
scas
xor
insb
inc
in
mov
aad
push
mov
in
add
cmp
sbb
scas
repnz
ds
scas
repnz
fcmove
adc
sub
pusha
xor
jp
inc
dec
mov
lcall
and
shlb
pop
sbb
call
cmpsb
icebp
inc
push
jge
mov
scas
pop
dec
pop
mov
adc
push
mov
insl
xor
push
push
or
pop
jge
sub
mov
insl
pop
mov
or
movsl
loope
push
mov
cs
cmp
fwait
sbb
les
cli
xchg
loope
cmp
hlt
dec
mov
inc
jbe
gs
lcall
and
add
mov
mov
mov
divb
js
negl
sub
sbb
test
cmp
addr16
push
clc
xchg
movsb
mov
xchg
bound
je
push
cli
dec
shll
push
cltd
or
push
in
arpl
movsb
lods
inc
fistpl
imul
cmpl
cs
mov
fbld
add
ds
movsw
jnp
in
push
sbb
nop
lods
dec
fwait
aas
xor
inc
rcll
aaa
dec
out
and
out
mov
lcall
mov
pop
cmp
push
movsb
insl
push
or
and
mov
out
mov
xchg
mov
shlb
and
ficoms
pusha
xchg
push
mov
pop
or
or
std
sbb
and
jne
push
out
or
in
je
jbe
imul
pusha
out
out
adcb
cmp
dec
movsl
sti
mov
sub
and
pop
adc
xchg
and
jp
dec
sub
mov
mov
emms
dec
lret
mov
ja
ljmp
pop
jne
outsb
outsb
lock
in
clc
or
xchg
mov
adc
mov
mov
push
adc
sbb
and
bound
rorb
jnp
or
cli
add
dec
pop
mov
sub
aaa
pop
loope
stc
shlb
in
mov
lea
and
daa
mov
shrl
pop
imull
rorb
movsl
inc
lods
inc
pop
xor
decl
push
loopne
sbb
xor
inc
jb
jb
dec
out
outsb
xchg
in
icebp
clc
mov
push
hlt
dec
pop
push
out
inc
mov
xor
sbb
push
and
lds
pop
js
dec
rcrl
lds
stos
pop
jb
aam
jecxz
clc
mov
jg
pushf
imul
test
jns
fimull
lahf
sbb
pushf
push
xchg
jp
push
repz
xchg
mov
call
cmp
mov
aas
stos
push
pop
xor
pop
pop
xlat
mov
cs
fdiv
ss
inc
push
lock
jbe
jo
mov
sbb
test
jmp
mov
fistps
push
pop
daa
fsubl
or
jnp
leave
rcrl
jno
jo
arpl
test
dec
fs
mov
aam
cltd
mov
insb
nop
and
pop
and
xor
popa
cld
mov
add
mov
push
mov
mov
outsb
fdivp
sbb
mov
insl
es
adc
cmp
inc
shll
pop
sub
outsb
cmpsl
or
in
sbb
jp
adc
pop
and
fldenv
xlat
shlb
or
jle
inc
adc
lcall
pushf
jae
push
loope
ret
cmp
push
pop
lds
sti
fldcw
loopne
sahf
pop
xchg
ljmp
dec
lock
pop
xchg
rclb
imul
aaa
outsl
push
xchg
notb
out
push
imul
xchg
nop
adc
mov
pusha
stos
push
sub
leave
add
add
mov
mov
jno
ss
jae
jne
mov
cli
inc
lret
dec
dec
mov
sbb
lcall
iret
sbb
sbb
inc
mov
sti
xchg
jmp
es
push
push
pop
inc
jge
mov
fnsave
out
jne
inc
jae
jb
sti
xor
mov
stc
xlat
aaa
test
test
xchg
inc
aam
shl
mov
imul
mov
xlat
enter
call
arpl
out
in
out
mov
sub
jae
xchg
mov
fnstsw
sub
jo
sbb
popa
jae
lahf
push
push
daa
pop
jl
push
lret
in
inc
pop
cs
cs
das
add
xchg
sbb
mov
adc
push
mov
cmpsl
mov
inc
jae
push
dec
pop
in
jae
arpl
popf
mov
jg
cmp
sbb
xor
push
mov
pop
add
xor
jb
mov
push
cmp
dec
cltd
jno
mov
pop
ss
mov
sbb
leave
ss
cmp
push
rcrl
and
dec
lea
stos
out
pop
and
jne
std
ds
inc
xchg
add
pushf
cmp
outsl
push
or
pop
imul
or
sbb
ret
arpl
loop
fdivl
xchg
sub
mov
mov
lods
cmp
jle
mov
push
ljmp
push
xor
repz
in
sbb
xor
inc
cmp
cmp
punpckhwd
lock
rol
lods
ja
or
filds
mov
jo
xlat
mov
and
xor
push
fwait
jge
ljmp
mov
sbb
sub
cs
sub
jl
sahf
mov
xlat
xor
mov
cmp
lock
arpl
imull
outsl
in
mov
pop
les
mov
test
inc
xchg
ss
sti
pushf
cmpsl
push
lds
xchg
xor
shrb
sbb
or
mov
dec
enter
mov
dec
stc
nop
lods
cmp
adc
test
rolb
sahf
out
jmp
clc
mov
imul
mov
or
out
mov
sbb
cltd
pop
sbb
xchg
mov
stc
cmp
scas
rcll
cmp
adc
dec
sbb
sti
fbstp
xor
cld
dec
adc
jle
pop
pop
in
lds
fstps
pushf
outsb
jg
mov
xchg
xchg
imul
xchg
or
mov
mov
cmp
xchg
push
jmp
das
mov
sub
mov
dec
cwtl
mov
ja
adc
jbe
cltd
test
mov
fdiv
mov
arpl
js
sub
imul
xor
popf
out
shll
std
imul
mov
iret
or
and
inc
repnz
sub
inc
aaa
scas
xchg
mov
sub
test
repnz
arpl
rcrb
jns
inc
and
in
outsb
fsubrs
xchg
mov
lahf
ds
out
out
jno
sar
or
mov
sub
sub
cmpsl
call
fidivl
in
in
jns
lcall
xchg
dec
sub
xchg
mov
and
sbb
aas
stc
mov
inc
and
and
jns
jno
aam
loopne
lahf
sahf
mov
fadds
std
pop
and
inc
lods
xchg
pop
and
scas
xchg
inc
sbb
lock
sahf
ret
adcl
and
out
xlat
push
sbb
into
jnp
mov
push
cmp
aas
test
ret
sti
ljmp
dec
in
jmp
or
scas
rcll
jne
mov
push
fsubrl
fwait
pop
int
push
cmp
pusha
add
jle
inc
icebp
push
xchg
add
or
insl
into
or
sub
lds
int
imul
sbb
adc
lahf
mov
loopne
mov
int3
shl
loop
lret
dec
mov
jmp
pop
pop
dec
jp
into
jg
dec
or
push
push
test
in
or
js
loopne
sbb
pop
push
popf
aas
fiaddl
or
mov
adc
clc
out
sti
andl
dec
fsub
pushf
shrl
mov
stos
adc
addr16
or
push
inc
test
scas
in
out
push
rclb
push
das
xchg
rcrb
daa
or
subl
test
notl
div
movsl
add
push
vmread
outsl
jecxz
lds
dec
int3
xchg
test
or
dec
inc
pop
roll
mov
xor
icebp
in
mov
sbbb
fsubrs
and
ja
fwait
sbb
dec
cmp
in
lods
sbb
jmp
sbb
into
jo
pop
loop
mov
das
mov
rcr
inc
lret
mov
rcrb
or
jl
int
fmuls
adc
inc
icebp
mov
add
insb
or
lods
ss
cmp
push
add
ss
ror
sahf
xchg
xchg
cmp
repz
jo
fidivl
gs
jb
jo
mov
inc
inc
sub
icebp
mov
pop
sub
mov
stos
inc
mov
insb
data16
jp
test
mov
xchg
pop
je
mov
and
xchg
push
stc
out
aaa
pop
adc
dec
xchg
loopne
mov
fistl
or
repz
and
or
ljmp
push
ja
and
xlat
mov
mov
xchg
int
sbb
pop
nop
pop
sti
mov
adc
mov
jecxz
cmp
xchg
test
repnz
imul
pop
mov
push
into
mov
mov
test
adc
pop
cmp
rorl
aad
mov
xor
inc
mov
push
xor
xor
xlat
xchg
and
mov
push
idivl
pop
cli
repz
adc
and
addb
cmc
and
xchg
cmpsb
jmp
adc
or
push
mov
in
repnz
mov
bound
ror
fildll
cmp
mov
jp
mov
lock
inc
nop
loopne
imul
pop
int3
fimull
ja
outsl
or
inc
data16
movsb
mov
sbb
cmp
in
push
adc
lcall
cmp
inc
inc
push
cld
sti
imul
fisubl
scas
and
and
fnstcw
aas
cmpsb
addb
out
cmc
xchg
repz
cld
or
sbb
xor
adc
icebp
pop
inc
push
pop
add
test
pop
lcall
pusha
mov
popf
add
xchg
fwait
cli
lret
cs
dec
stos
cmp
addr16
jbe
mov
lds
dec
stos
loopne
outsb
pop
mov
sbbb
pop
push
xchg
cs
xlat
pop
dec
and
xor
or
ror
or
imul
imul
das
lods
test
test
sub
dec
pop
leave
cmc
clc
pop
mov
xchg
cmp
fmuls
pop
outsb
nop
push
daa
fisubrl
push
aas
push
ljmp
xor
sbb
das
aad
pop
xor
imul
ret
test
inc
repnz
out
jge
inc
pop
fildll
mov
mov
shll
bound
mov
lods
cmp
push
xlat
inc
int3
leave
loopne
jb
xor
mov
sti
inc
or
pop
rcrb
sti
add
and
mov
loop
jnp
and
bswap
call
js
inc
sub
push
pop
adc
sbb
aaa
aaa
aad
ss
test
mov
sti
cmp
mov
push
neg
mov
ret
add
add
mov
insl
mov
in
iret
or
cld
mov
frstor
mov
inc
lods
popf
mov
add
sbb
mov
dec
sbbl
pushf
lods
sub
jo
cmc
jg
inc
hlt
fsub
mov
call
xor
fwait
xor
imul
ja
fldl
dec
das
xor
rcr
fdivs
lcall
lret
enter
add
subl
sub
mov
jbe
add
xchg
jns
fmull
int3
inc
cld
push
scas
js
mov
pop
jae
mov
sbb
cmp
nop
arpl
dec
in
and
xchg
scas
lds
mov
add
lods
jp
jne
xchg
fnstcw
repnz
mov
fimuls
push
out
pop
inc
pushl
pushl
ret
push
mov
inc
xorb
jg
popa
xchg
xor
xchg
cld
loopne
inc
xchg
mov
adc
inc
jg
lods
add
sub
in
push
insb
add
dec
lods
mov
mov
stos
mov
nop
lret
dec
gs
xlat
mov
aas
es
stos
jecxz
xlat
and
dec
jbe
lock
cmp
add
cmp
in
push
mov
gs
mov
adc
outsb
shlb
mov
add
roll
popa
ds
adc
int3
pop
xchg
ljmp
lret
sub
cltd
sub
pop
xchg
mov
iret
aas
sub
jecxz
das
call
scas
xchg
iret
inc
push
in
pop
mov
cmpb
mov
jle
cmpsl
pop
scas
pushf
in
cmpsb
jp
add
jmp
dec
cmp
movsl
jb
into
dec
mov
ret
dec
mov
jmp
pop
popf
jnp
xchg
and
xchg
sub
jecxz
sti
mov
xor
adc
lods
xor
lcall
rcrb
xor
int3
roll
outsb
jo
orl
int3
shl
mov
or
mov
frstor
inc
das
cmp
gs
xchg
xchg
bound
jecxz
mov
and
in
ss
jg
pop
sub
mov
xor
pop
add
mov
sub
mov
out
shlb
fwait
mov
loope
adc
and
cmpsl
es
scas
dec
movsl
js
cs
movsb
sti
push
dec
pop
sbb
call
inc
sbb
xchg
jmp
js
mov
in
dec
lds
push
and
idiv
or
ficoml
nop
ret
push
cmc
xchg
mov
pop
movsb
cmp
aam
pop
insb
icebp
movsl
push
sub
mov
jle
jge
xor
xchg
inc
int3
rclb
mov
fisubrl
and
jle
std
in
ljmp
lods
loop
adc
xchg
xor
pushf
mull
or
sbb
je
pop
js,pn
and
and
lock
aas
in
outsl
fisubrl
adc
sbb
test
sbb
fidivs
lds
cwtl
mov
sbb
icebp
aam
fld
sbb
daa
mov
pop
pop
push
xor
lret
add
mov
adc
out
jmp
stc
rolb
fdivrs
or
mov
insl
inc
mov
jb
xchg
and
push
loope
lock
xchg
cmp
loop
mov
pop
les
push
mov
repnz
jge
cmpl
lods
rcrb
xchg
xchg
sbb
dec
push
outsb
into
insl
in
cli
repz
aaa
out
mov
scas
mov
movb
pop
cmp
movsb
lcall
lea
pop
popa
sbb
lods
push
sbb
rcr
lret
int
lods
popf
int3
or
mov
adc
mov
sub
jno
test
pop
or
sub
fadd
les
imul
cmp
daa
or
or
jecxz
clc
cmp
movsb
fisubl
push
xor
ja
ret
mov
pop
inc
and
into
push
cmp
jl
push
sbb
cltd
push
out
int
push
ss
xor
adc
mov
pop
stos
movsl
test
enter
mov
and
fisubrl
mov
xchg
mov
in
adc
mov
dec
inc
jg
jmp
cs
xor
mov
push
mov
mov
popa
sti
and
mov
movb
pop
sub
sti
lret
mov
mov
dec
pusha
and
inc
xchg
ja
mov
mov
mov
push
or
push
mov
mov
pushf
xor
movsl
dec
arpl
sbb
es
insl
iret
cmp
inc
jecxz
pop
das
sbb
cmp
jne
aas
negb
sub
iret
mov
adc
sarb
call
nop
dec
sahf
movaps
dec
xor
mov
int
pop
aam
pmaxsw
add
stos
test
jl
gs
sbbl
ja
incb
repz
sub
mov
mov
lea
test
sbb
jne
pop
iret
cmpsl
jae
jl
repz
mov
mov
call
mov
stos
fstl
filds
and
andb
rcl
cmp
sahf
push
hlt
pop
jmp
dec
cmp
inc
add
or
add
xchg
dec
insb
xchg
arpl
fwait
enter
adc
dec
lret
xor
or
and
shr
or
data16
arpl
popa
fisubrs
inc
sahf
cmpsl
cmp
shl
sahf
lcall
push
rcll
stos
xor
jmp
ret
push
sti
out
lea
mov
fxch
cmc
sub
dec
mov
int
mov
mov
sub
xlat
imul
lea
and
lock
jmp
mov
jbe
jae
shrl
jg
js
aas
mov
inc
dec
dec
cmpl
add
movb
adc
mov
adc
rclb
ja
incl
inc
stos
ja
push
mov
mov
test
xchg
jle
jp
jmp
jl
aaa
and
jbe
pop
loope
push
dec
test
popa
xchg
mov
mov
pushf
lret
or
inc
push
cmp
int3
out
dec
in
std
jl
notb
lods
xor
int
push
movsb
mov
and
pop
inc
loopne
cmpl
sti
int
cltd
and
mov
aas
sahf
aad
xchg
jb
jno,pn
adc
add
inc
xchg
cmp
mov
rcrb
push
jnp
mov
int
inc
cltd
stos
push
cmp
inc
outsl
sbb
sahf
jle,pn
xor
xlat
sub
insl
mov
sub
push
js
xchg
add
xchg
cmc
scas
adc
sbb
pop
imul
jle
mov
pusha
add
mov
and
mov
sub
cmpsb
lcall
mov
inc
loop
lret
sub
jb
out
ss
dec
cmp
lahf
clc
sub
pop
lea
jb
stc
in
aaa
imul
ret
out
sub
lea
jno
stos
add
and
xchg
lock
iret
mov
xor
cmc
lock
imul
inc
movsl
cmc
mov
jnp
mov
push
and
sti
cli
push
stos
xchg
xor
cmp
ss
mov
cmpsb
adc
movb
nop
jecxz
mov
xchg
mov
xchg
xchg
shll
jb
mov
andl
fldt
aas
movsb
movsb
imul
sarb
push
sub
test
fisttpl
mov
mov
mov
add
lret
xlat
add
add
jecxz
jl
int
lahf
in
mov
repnz
setno
cwtl
int3
mov
cwtl
dec
sub
sub
insl
les
mov
ss
loop
rorl
cs
add
add
xchg
enter
lret
xchg
ficompl
xor
xchg
sub
sub
in
in
rolb
dec
jno
push
pop
cmp
out
cmp
push
fwait
mov
call
or
inc
test
adc
xchg
cmpsl
cmp
mov
and
sbb
cmp
mov
aas
xchg
stos
lea
out
cli
cmp
andb
stos
jmp
dec
xor
in
setg
and
ret
jg
pop
mov
imul
jno
test
mov
cmp
inc
adc
dec
and
cmp
push
mov
sbb
inc
mov
bound
and
in
outsl
jp
add
cli
or
xor
push
push
sub
mov
hlt
out
gs
add
mov
fs
popa
repz
jmp
loop
or
stc
add
mov
je
jle
push
outsb
mov
jns
out
sti
cmpsl
shr
leave
mov
xchg
call
dec
div
mov
in
push
cmp
pop
stc
in
imul
aad
in
cmp
and
out
dec
cmp
mov
jl
in
pop
dec
mov
ret
xchg
inc
imul
xchg
jo
xchg
adc
lcall
inc
dec
out
sub
test
mov
jne
push
xor
add
out
jnp
jns
mov
pop
ds
inc
fs
or
or
sub
xor
pop
mov
repnz
xor
jns
sub
loop
mov
call
pop
pop
mov
shr
pop
push
sbb
push
repnz
push
popf
xor
or
mov
pop
dec
or
adc
cmp
aam
inc
mov
ss
aad
or
out
test
in
das
ss
ret
dec
sub
into
xor
push
movsl
mov
mov
mov
jb
into
push
test
push
pop
jg
loopne
cmp
je
test
js
mov
aam
pop
sub
js
inc
pop
push
call
fildl
pop
stos
scas
sbb
popa
xchg
xchg
inc
shlb
test
mov
insl
mov
pop
xchg
sub
fs
je
mov
mov
pop
lcall
aam
je
ds
xor
or
mov
add
pop
xor
aaa
mov
jno
cwtl
push
mov
stos
imul
es
push
push
out
xor
push
sarl
pop
mov
xchg
xor
fs
inc
daa
lods
cmpsb
and
mov
sti
jp
sbb
xor
push
push
mov
sbb
cltd
in
scas
sbb
shlb
adc
add
ja
lcall
jne
jo
pop
fildl
lock
roll
dec
fs
jle
cmp
or
jnp
jg
shl
add
jge
mov
loope
or
out
mov
jns
fmuls
inc
mov
dec
adc
cmc
jo
daa
in
jo
pusha
out
ja
lods
and
jl
mov
ret
cmp
or
lea
push
inc
fcmovu
pop
pusha
add
jl
shrl
sbb
push
aam
adc
movsl
das
push
rorb
out
into
loop
pop
adc
ret
movsb
pop
leave
loop
in
lea
add
sbb
lret
sub
pop
iret
push
mov
inc
and
cld
inc
sub
or
aas
add
sbb
jge
cmpsl
mov
push
loop
xor
inc
imul
sbb
cwtl
mov
fs
or
push
ljmp
cmp
icebp
lock
xor
out
in
xor
push
in
lea
lcall
mov
jp
sbbl
faddl
negl
ret
jb
rclb
cmp
js
cmc
fidivl
add
xorl
sbb
dec
jbe
rorb
jecxz
jns
gs
sub
add
repnz
or
and
mov
jle
int
sbb
cmp
mov
rcr
repnz
jnp
push
icebp
add
add
pop
ret
inc
adc
mov
mov
mov
xor
or
and
dec
out
not
scas
inc
jg
sub
xor
mov
into
test
gs
inc
imul
add
xchg
faddl
repz
sub
lock
imul
shrl
pop
sbb
imul
inc
cmc
mov
inc
ss
ss
cltd
cmp
stos
outsb
push
shlb
aaa
or
aas
sar
ret
mov
jecxz
sub
aad
cmovp
or
jae
int3
testl
sbb
pusha
lret
cwtl
int
inc
adc
xor
xchg
in
xor
mov
ss
xchg
pop
and
js
fisttps
loope
sub
in
lret
aad
lcall
sbb
push
ds
mov
pop
stos
push
jmp
inc
pop
dec
xor
inc
lret
mov
mov
or
sbb
pop
mov
loope
out
pop
xchg
hlt
into
push
jecxz
push
cmpsb
and
sarb
xchg
xor
mov
loope
mov
mov
lods
xchg
jecxz
cld
xchg
out
lods
mov
push
jbe
ret
shrl
sti
xor
and
insb
jmp
loop
test
or
cwtl
leave
add
nop
mov
popa
std
push
xor
repnz
mov
cli
sub
xchg
jge
jbe
xchg
mov
in
gs
push
call
sbb
into
mov
xlat
lret
dec
fdivrl
jecxz
inc
xor
dec
in
clc
mov
out
arpl
in
push
and
mov
inc
call
sbb
cli
out
or
filds
lea
xchg
shlb
push
mov
out
sbb
mov
jl
lock
fwait
add
push
cli
xor
stos
push
imul
arpl
cwtl
and
push
cmp
nop
imulb
nop
pop
andb
out
fistpl
popf
decl
stos
adc
imul
cmp
les
stc
inc
test
lock
add
mov
xchg
xlat
push
pop
pop
loopne
adc
dec
andb
xchg
sbb
ffreep
fs
cmpsb
pop
ljmp
addl
ljmp
mov
add
xchg
sbb
or
inc
pop
stc
imul
and
ljmp
rorl
adc
lret
cmp
or
std
adc
in
jnp
fmulp
mov
clc
sbb
scas
testl
inc
cmc
icebp
insb
es
mov
cld
jne
lcall
inc
insl
xor
sbb
imul
scas
add
rcrb
xlat
xlat
test
insl
into
rorl
xor
xchg
fcomi
inc
jmp
cmp
cmp
pop
insl
mov
dec
mov
imul
mov
sub
mov
negb
mov
push
lcall
sub
ret
popf
out
fistpll
push
jns
jl
jns
ret
ljmp
std
xor
push
dec
mov
test
dec
sub
mov
mov
push
or
push
stc
outsl
adc
ljmp
faddp
sub
adc
inc
iret
rolb
iret
ds
sbb
jae
jge
testb
pop
cltd
sbb
mov
jecxz
popl
adc
addr16
xchg
es
pop
lea
stos
sub
fisubl
mov
cmp
pushf
fimull
pop
xchg
insb
push
push
push
pop
mov
push
fs
movsb
jo
daa
jbe
shr
inc
punpckhbw
pop
shll
cs
int3
sub
push
xchg
test
ss
ds
call
sbb
fdivp
in
ja
ret
or
cmpsl
aaa
loopne
mov
dec
lds
jp
repz
lcall
xchg
in
pop
das
ds
push
into
lret
push
sub
xchg
mov
and
popf
inc
daa
ret
fstl
dec
pop
scas
mov
xor
mov
jne
scas
add
enter
dec
inc
fmull
pop
add
ss
xchg
test
push
aaa
mov
xchg
xchg
jbe
push
repnz
adc
out
xchg
imul
push
rcrl
push
dec
aas
fbstp
stc
lcall
lods
mov
in
mov
lock
test
cmp
add
popf
lods
sti
repnz
or
add
mov
lret
ret
push
fcompl
cmc
push
dec
fst
rep
pop
and
pop
jmp
adc
loop
sub
cmp
movsl
add
daa
and
sbb
pop
in
in
jno
adc
inc
inc
mov
xlat
adc
sbb
mov
mov
push
aas
xor
hlt
add
sub
jno
inc
sbb
loop
out
loopne
add
sub
clc
mov
jmp
jl
inc
loopne
or
mov
pop
push
dec
jle
or
xor
pop
imul
test
popa
lret
mov
push
div
sbb
mov
push
push
xchg
test
add
dec
add
bound
push
xchg
or
pop
out
or
dec
fcom
dec
testb
mov
jnp
lods
mov
inc
aad
inc
shl
mov
mov
xor
jno
shll
dec
daa
push
cld
mov
movsb
pop
push
sti
push
xor
and
inc
xchg
out
les
addr16
pop
in
fadds
lcall
inc
and
lret
add
xchg
clc
sbb
dec
pop
mov
xor
add
cmp
sub
sbb
movsb
mov
adc
sub
and
xor
fwait
jmp
pop
mov
scas
mov
fstpt
add
inc
sahf
mov
sbb
push
movsb
or
aad
int
add
xor
js
int
or
mov
jb
adc
sbb
cmp
sbb
lods
test
fwait
bound
xor
lcall
loope
jo
loopne
jnp
jno
ret
push
push
pushf
mov
inc
cmp
jbe
test
shl
lock
push
lret
sub
push
mull
xchg
mov
popf
push
xchg
in
or
cld
fs
and
adc
les
sbb
int
ficomps
pop
jle
sti
xchg
add
push
xchg
das
inc
pop
xchg
cli
outsb
fsubs
repz
sub
pushf
sarb
fistps
xchg
xor
lret
and
insl
mov
call
jns
stc
cmc
adc
lods
test
fimull
outsb
or
mov
test
pop
inc
add
les
mov
das
push
loopne
ljmp
pusha
repz
das
out
xor
jge
mov
or
lret
sub
xchg
imul
outsl
daa
jle
imul
jle
je
test
pop
push
cmp
push
mov
and
xchg
pop
cmc
and
mov
rolb
mov
lock
inc
adc
pushf
mov
addr16
push
pop
inc
mov
sub
xchg
gs
movsb
mov
out
mov
into
fisttps
shll
imul
push
dec
adc
add
jmp
add
or
cltd
jge
loop
imul
cli
xchg
adc
mov
es
jae
aas
xor
mov
mov
or
pushf
push
jae
or
in
insl
std
push
js
ja
adc
rep
or
dec
fs
in
lret
bound
enter
out
fsubrs
adc
and
insb
fs
ret
inc
pop
and
aam
xor
loop
fsubp
fidivl
mov
xchg
test
add
dec
pop
push
jo
ss
pop
mov
xchg
push
repnz
imul
push
shl
out
subl
push
push
data16
ret
cwtl
jbe
data16
add
popf
pop
hlt
lret
in
cmp
mov
lds
inc
int
inc
mov
or
xor
cmp
lods
jns
jge
mov
push
pop
sub
lea
test
aam
je
out
rcll
dec
cmp
out
cmovo
movsb
repnz
mov
mov
pop
fstp
or
outsb
sub
sub
ja
push
into
lds
ret
inc
jo
in
into
jo
in
xor
mov
nop
pop
sbb
clc
shrb
je,pt
arpl
mov
push
inc
push
mov
out
int3
pop
xchg
xchg
pop
mov
stos
cltd
cld
xor
pusha
jo
cmp
rcll
test
jno
dec
imul
push
mov
mov
cltd
and
push
mov
adc
aam
stc
stc
cs
hlt
jp
sub
adc
inc
mov
cmp
fisttpl
shlb
ljmp
mov
test
push
ljmp
test
xor
insl
sti
ret
cli
daa
lock
mov
lcall
andl
movsb
sub
rcl
iret
fadd
push
stos
push
mov
dec
mov
or
mov
xchg
shl
sbbb
loope
ret
leave
xor
cmp
mov
jmp
fwait
lcall
or
add
xor
in
pop
push
pusha
orb
jnp
in
cmp
mov
imul
add
lods
and
loop
clc
or
and
dec
imul
in
jb
scas
jns
lods
int3
in
mov
sbb
mov
adc
add
frstor
or
loope
test
arpl
test
lahf
int3
aam
jecxz
cld
push
faddl
xchg
je
in
in
lahf
fs
push
std
or
mov
fstl
je
repnz
or
stos
popf
mov
rclb
lods
out
scas
inc
or
imulb
mov
xchg
lds
dec
push
cmp
imul
add
fsubl
mov
inc
mov
maskmovq
jg
cwtl
out
inc
popf
movsl
adc
icebp
or
insb
dec
call
jecxz
sbb
push
adc
js
cmp
addl
push
cli
fs
dec
cmp
xor
sahf
mov
cmp
ljmp
jl
dec
aas
pop
inc
push
inc
cmp
insl
mov
mov
js
sahf
and
les
fists
icebp
inc
cmp
iret
leave
rorl
jbe
mov
sub
lcall
inc
jmp
pop
fsts
fisttpl
int
xchg
dec
bound
frstor
push
ja
inc
mov
dec
inc
in
shrb
push
inc
loop
gs
mov
pop
shlb
fildll
dec
or
pop
mov
repz
push
cmp
xchg
push
xchg
ss
inc
pop
sbb
cmp
or
fdivs
sub
cmp
stos
lock
scas
mov
les
lods
jle
cld
divl
shrl
imul
xor
push
mov
outsb
scas
mov
mov
and
shlb
inc
ds
lods
cmp
jmp
xor
xchg
mov
xchg
push
or
lock
sarb
insl
cmpsb
aaa
jmp
rclb
or
and
decl
in
xlat
outsb
out
jo
daa
and
sahf
insl
bound
test
out
arpl
repz
xor
pop
xchg
xchg
mov
cltd
lret
out
sub
mov
mov
xchg
rcll
mov
pop
pop
sbb
lods
es
push
or
imul
outsb
lods
sbb
add
mov
add
addl
xor
jno
in
dec
cmp
cmp
push
dec
xor
fidivrs
mov
jno
inc
lcall
inc
out
ljmp
pushf
or
push
xchg
data16
push
aad
push
mov
mov
jg
hlt
shlb
ljmp
mov
mov
mov
mov
push
and
aaa
jmp
mov
sahf
add
mov
fisttpl
jl
xor
dec
dec
sbbb
shlb
add
fidivrs
jae
inc
pop
xchg
xchg
and
pop
inc
into
push
push
sarl
leave
push
jb
aad
fwait
stc
sub
and
and
adc
dec
push
push
shll
mov
inc
jge
mov
xor
inc
fs
dec
mov
or
xor
repnz
sbbb
jnp
out
mov
testl
outsl
lds
adc
or
cwtl
mov
js
sub
shll
shlb
inc
clc
sub
test
cmp
mov
rcrl
lret
push
mov
gs
mov
sub
mov
hlt
sub
adc
inc
sahf
ret
in
sbb
and
lahf
leave
or
push
add
fnstcw
cmpsb
pop
jle
les
scas
mov
lret
jge
sub
fnstcw
clc
scas
aaa
fsubr
push
lret
sub
lock
push
jmp
clc
cs
dec
or
scas
xchg
cmpsl
jo
mov
add
int
fwait
inc
dec
sti
popf
arpl
inc
mov
jmp
mov
xor
aad
dec
shl
pop
mov
cmp
xchg
xor
mov
jbe
lcall
pop
inc
iret
pop
jbe
cmc
fdivr
xchg
lahf
test
pop
dec
xor
fs
outsb
insb
dec
xchg
inc
sub
js
fdivs
push
or
inc
adc
aam
add
inc
jl
popf
sbb
pop
xchg
outsl
xchg
dec
lret
scas
pop
mov
ds
push
aam
mov
push
hlt
data16
div
xchg
pushf
and
ficoms
mov
push
arpl
data16
add
cmp
add
ficomps
mov
das
and
cmp
in
pop
or
cmp
sbb
les
sub
mov
stos
xchg
imul
leave
dec
adc
aas
dec
jecxz
fistpl
mov
push
cmpl
imul
outsl
push
popa
jns,pn
int3
shl
scas
xor
pop
int3
les
and
pushf
or
inc
shlb
jns
inc
inc
aam
xchg
mov
ljmp
mov
fnstenv
pushf
neg
movsl
fiadds
xor
std
add
xor
xchg
loopne
js
shrl
mov
pop
out
push
incl
mov
inc
sahf
add
enter
dec
addr16
sbb
xchg
addr16
fstl
icebp
push
das
or
mov
mov
dec
adc
sbb
cltd
jns
dec
push
or
mov
aad
ret
add
fnstsw
pop
lock
nop
inc
pop
stos
xchg
lcall
mov
mov
sbb
addr16
inc
test
rclb
ja
mov
stc
sbb
scas
pop
bound
nop
imulb
mov
loop
mov
outsb
jo
pop
mov
cmp
gs
ror
pop
mov
sub
stos
rorb
push
pop
fcompl
fists
sub
xor
jno
mov
cmp
jne
pop
jno
lcall
ss
imul
rcl
popa
jbe
sbb
cld
fcoms
sahf
cmp
in
or
cwtl
mov
dec
fsubrs
fdivl
jae
jno
mov
inc
aam
pop
cmp
xchg
jns
mov
imul
cmp
cld
and
mov
fadds
loopne
mov
push
push
mov
les
fidivs
stos
pop
jbe
or
popa
pop
xor
in
stos
cmpsl
sub
pop
and
in
ror
aaa
loopne
stos
outsl
jl
pop
in
jecxz
add
push
pop
scas
pop
popl
cwtl
gs
xchg
jo
fdivrs
repz
popa
fwait
mov
xor
xchg
mov
jmp
ficomps
jns
sbb
jne
push
movsb
mov
lock
xor
lcall
icebp
pop
inc
pop
xorb
jnp
bound
inc
jle
inc
sub
int
in
mov
sub
jle
add
sarl
and
pop
dec
cmc
sub
in
push
or
rclb
mov
dec
xchg
popa
test
lods
add
dec
fs
push
push
and
mov
adc
into
jmp
rcrl
ficompl
and
pop
shlb
andl
push
mov
loop
inc
mov
jmp
dec
in
test
loopne
insb
insl
in
testl
ret
and
jmp
jae
xor
push
shl
inc
cmc
push
ret
inc
add
popf
jo
mov
sub
fstps
ficoml
movsb
mov
adc
mov
in
mov
aad
popf
ljmp
out
inc
movsl
pop
sub
mov
mov
stc
test
out
aam
lock
xchg
ja
mov
inc
mov
mov
aaa
sti
pushf
inc
cmp
mov
push
push
orl
xchg
stc
sbb
imul
adc
mov
sub
inc
movsb
add
or
outsl
jne
call
push
pop
jne
outsl
xchg
xchg
stc
sub
sbb
push
ja
push
add
mov
add
sbb
orb
movsb
push
or
enter
rolb
mov
cmpsl
xor
and
push
xchg
jecxz
xchg
add
testl
or
inc
mov
insb
stc
pushf
in
lahf
push
jae
jns
lods
lods
scas
sub
push
jo
sub
cld
push
sti
enter
std
sbb
jbe
cmpsb
ja
pop
pop
fidivrl
aad
shrb
dec
leave
or
lods
xchg
sub
dec
sahf
mov
popf
sbb
loop
sub
mov
call
xchg
mov
sbb
push
push
pusha
out
pop
lods
jl
sub
jmp
lret
add
stc
ret
mov
in
xor
pop
cmpb
in
cli
jbe
cs
stos
mov
dec
sbb
sahf
xchg
xlat
cmp
scas
jns
sub
jne
add
xchg
out
into
add
movsb
inc
out
mov
mov
xor
dec
mov
in
xchg
xor
mov
push
push
sbb
mov
int3
jae
rclb
push
push
cmp
mov
in
arpl
fwait
push
sahf
insl
rcrl
cltd
or
cltd
notb
xchg
jle
mov
sbb
bound
lret
jg
fadds
cld
leave
ds
cmp
and
sbb
sub
sub
mov
sub
rcrl
stos
iret
mov
sub
jns
inc
pop
imul
into
dec
adc
in
cld
pop
lret
stos
adc
jo
repz
xchg
dec
and
mov
jecxz
inc
setb
in
jno
mov
dec
iret
mov
sub
out
cmp
mov
ss
jbe
inc
clc
lahf
cltd
insl
sub
cmp
adc
fwait
hlt
fmul
jb
fldcw
jge
mov
pushf
scas
push
xor
ljmp
ja
jns
or
sub
jmp
pop
jle
ret
fisubrs
in
popa
jmp
test
arpl
dec
or
jp
push
fidivl
cs
inc
outsl
mov
test
jl
dec
loop
cmp
lods
xchg
scas
inc
jmp
push
mov
test
adc
iret
popf
or
sbb
rolb
sbb
aam
clc
cmp
jne
sbb
mov
aam
mov
mov
inc
add
movl
adc
sbb
mov
sbbb
das
cwtl
add
icebp
nop
xor
inc
mov
inc
addr16
hlt
push
fcompl
pop
loope
sub
movsl
jg
cld
stc
imul
fstp
aas
aam
add
stc
ds
test
pop
inc
fwait
std
lea
pop
cmpsl
cltd
mov
insb
xor
movsb
addr16
mov
add
arpl
idiv
ret
rcll
inc
adc
xchg
sbbl
sbb
out
out
or
in
pop
xor
adc
scas
neg
fs
cmovp
jne
data16
shlb
aaa
pop
or
lock
jne
mov
mov
sbb
int
movsb
jbe
test
cli
out
icebp
shrb
aas
dec
adc
push
int3
int
lret
lret
ds
pop
inc
ret
out
ret
dec
pop
aas
xor
aas
pop
das
nop
cld
fucomip
add
je
mov
pop
in
into
es
xchg
lock
push
mov
lds
loop
shl
ret
lock
xor
dec
test
push
fwait
data16
mov
dec
xor
sbb
in
xor
insb
into
jbe
or
aas
sbb
add
mov
sbb
aam
ds
test
es
insl
out
mov
mov
push
inc
js
lret
setle
mov
pop
lds
iret
mov
scas
pop
dec
cltd
pcmpgtb
test
test
out
out
dec
lea
xchg
or
aam
inc
fisubs
lcall
fcom
leave
pusha
pop
pop
std
test
loope
shll
dec
xchg
insb
sbb
mov
das
les
push
add
test
mov
push
ds
stc
dec
add
movsb
js
dec
mov
frstor
fwait
mov
xchg
inc
xchg
adc
mov
push
iret
lret
lret
jne
enter
test
or
or
cs
inc
cwtl
dec
neg
mov
or
shlb
mov
mov
adc
pop
test
jge
dec
mov
mov
pusha
fiaddl
les
push
mov
push
push
inc
push
lret
cmpsb
stos
inc
insb
mov
lret
dec
ds
xchg
add
jle
ret
jp
mov
popf
or
cmpl
fstp
xchg
ljmp
adc
mov
out
loopne
or
rcl
movsb
inc
stc
test
xchg
test
test
push
jns
push
xor
pop
hlt
push
cmp
lea
add
lret
mov
into
jo
mov
dec
popa
js
pushf
push
aas
cmpsl
sti
push
lcall
flds
cmp
leave
or
scas
popa
sbbb
mov
sub
sub
adc
out
iret
fcoms
loope
dec
rclb
jno
xchg
shlb
adc
mull
push
and
insl
cmp
cmp
lds
xchg
in
sbb
sbb
xchg
data16
outsl
nop
out
push
ret
icebp
sbb
pop
iret
and
inc
sub
and
pusha
dec
roll
ss
cli
jp
lahf
fistpl
jae
mov
mov
insl
and
pop
fcmovbe
mov
sbb
jne
insb
jno
fists
fadds
call
in
out
dec
push
cmpsl
int
cwtl
jo
int
sahf
fldl
and
pusha
sub
dec
rclb
xlat
dec
test
pop
mov
inc
addr16
or
xor
push
in
mov
enter
inc
data16
cmp
loope
xor
shrl
insl
jno
jnp
pop
fistpl
jp
cmp
shr
popa
inc
mov
divb
cli
pop
mov
inc
jg
dec
dec
xor
and
jge
shll
adc
push
and
mov
pop
aad
repnz
mov
in
jbe
sub
cli
mov
ja
dec
mov
test
andl
lods
adc
sahf
aaa
in
pop
mov
jnp
xor
repz
leave
and
stc
xor
aas
cmp
jne
stos
push
xchg
pop
sbb
add
or
adc
dec
stos
clc
pop
xor
add
popf
jnp
mov
shrb
das
cmpsl
adc
pop
inc
push
iret
repz
xchg
mov
xchg
movsb
xchg
or
rcrb
xor
imulb
cmp
shrb
pushf
outsl
cli
push
jb
jmp
mov
push
cmp
mov
out
mov
mov
xor
stc
add
mov
jmp
and
jl
pop
or
push
scas
ljmp
stc
mov
xchg
xor
jae
insl
inc
ds
dec
sub
jg
pushf
insl
jbe
fsubs
andb
aaa
dec
xchg
jmp
cli
notl
and
and
mov
jle
jecxz
and
cld
lds
pop
pop
cwtl
xor
icebp
idivl
and
dec
gs
subl
adc
xor
mov
lret
sarl
xor
cmp
jns
andl
pop
in
lds
cmp
js
sbb
std
stos
hlt
and
repnz
mov
add
addl
dec
inc
arpl
in
push
jl
xchg
pop
cs
push
push
aam
adc
xchg
fisttps
pop
mull
push
lds
mov
enter
pop
and
adc
xchg
movsb
mov
fsubs
arpl
push
mov
add
mov
repz
daa
repz
test
add
sbb
shll
je
addb
mov
lahf
aam
mov
mov
jne
pop
subl
int
enter
stos
jno
sub
movsl
sbb
sbb
rcr
aaa
bound
mov
and
scas
push
jp
mov
pop
jg
fidivl
mov
or
call
mov
mov
int3
or
pop
dec
es
inc
adc
scas
iret
jp
push
pop
push
add
fidivrl
inc
aam
or
aad
test
jne
nop
push
mov
insl
xchg
fadds
and
and
and
adc
xchg
aad
mov
dec
in
clc
pop
jecxz
lret
clc
cmpsl
pandn
or
rolb
push
dec
cld
pop
leave
inc
mov
mov
das
lds
lahf
lret
in
cs
dec
sbb
fists
and
insl
mov
pop
mov
sub
mov
pop
push
imull
mov
jnp
sahf
pop
aad
pop
and
aas
sub
cmp
lret
add
or
jo
data16
adc
jecxz
mov
and
int
push
push
into
sahf
in
imull
adc
std
bound
pop
jb
ret
out
loope
ljmp
out
push
test
lds
imul
or
push
fsub
push
push
pop
inc
cmp
pop
add
push
mov
in
pop
fbstp
fmul
aaa
inc
or
pushf
push
mov
inc
scas
pushf
mov
jl
sbb
lahf
push
out
xor
adc
push
xchg
add
mov
fsub
inc
mov
cmp
lret
mov
ret
xchg
adc
xchg
loope
pop
clc
pop
cmpsl
test
xchg
mov
fcoml
jmp
sub
push
insb
inc
mov
fcoml
xchg
sbb
ss
dec
cmc
test
sbb
sub
cmp
jb
stos
inc
or
and
rclb
and
arpl
inc
jae
gs
scas
xor
mov
mov
inc
dec
nop
inc
fisttpll
ficompl
jne
sarl
or
jl
jno
lahf
xlat
dec
adc
addl
inc
fisubl
cltd
mov
lds
test
xor
stos
or
jle
and
in
and
dec
push
sub
push
push
scas
sbbl
mov
xchg
fnstsw
cmpsl
xchg
pop
xchg
insb
mov
insb
adc
mov
and
hlt
dec
push
insl
outsl
mov
out
repz
mov
jmp
sub
data16
and
inc
test
xchg
mov
pop
icebp
out
stc
jmp
push
xchg
or
pop
add
mov
xor
mov
testl
xor
push
icebp
jae
addr16
jo
cmpsb
dec
outsl
ljmp
mov
dec
and
rcrl
lret
in
mov
inc
pop
or
mov
mov
and
mov
imul
cmpsl
outsl
jnp
out
or
cmp
imul
adc
cmp
adc
push
jle
es
imul
inc
sbb
ss
loopne
repz
push
cwtl
mov
xchg
sbb
push
shlb
popa
je
add
in
lret
mov
jbe
xlat
add
sbb
sti
add
inc
push
add
lock
repnz
cld
movsl
xchg
lret
sbb
orb
scas
and
mov
push
sar
or
xor
fdivl
dec
rcll
xor
daa
cmp
outsb
insb
sti
adc
ss
fbld
xchg
stc
inc
cmp
adc
enter
js
inc
pushf
or
je
push
pop
pop
dec
cmpsl
cmp
pop
pop
jns
xchg
int
pop
lods
pop
loop
test
aam
push
in
addr16
fsubp
sahf
maxps
inc
movsl
cld
in
xchg
sbb
pop
mov
fmull
sbb
add
add
shll
pop
mov
int3
pop
xchg
aam
das
jecxz
ss
add
jne
int3
xor
or
add
or
mov
cmpsl
pop
and
scas
or
lods
jns
test
test
adc
shl
inc
lods
testb
mov
ljmp
xor
xchg
addr16
cmp
lock
cmp
dec
push
test
adc
das
mov
clc
call
mov
test
jnp
jmp
cwtl
imul
xor
ja
pop
and
pop
xchg
dec
movsb
push
enter
jecxz
cmc
jg
pop
jne
dec
jecxz
pop
adc
stos
pop
ljmp
in
ljmp
dec
or
lahf
dec
push
xor
sbb
sub
xor
xchg
out
xchg
ljmp
filds
sub
mov
test
or
pop
aad
fs
inc
sub
sbb
dec
sub
enter
cwtl
cld
ret
jnp
loop,pt
adc
xor
leave
icebp
lods
xor
cmpsb
stos
ljmp
mov
cmp
mov
add
mov
mov
lret
ljmp
dec
lods
pop
mov
push
mov
popa
or
pop
dec
aam
es
not
mov
inc
adc
cmc
jns
add
adc
clc
shl
push
outsb
movsl
lret
aas
push
in
in
xchg
mov
xor
pushf
cmpsl
jg
out
scas
pop
push
or
mov
insl
jmp
cmc
dec
jge
out
loopne
mov
dec
shl
xorb
mov
cltd
dec
rcrb
cmc
fisubl
xor
jg
pushf
sbb
mov
xor
mov
cmp
mov
dec
dec
outsl
jmp
and
mov
xchg
xchg
and
jnp
and
outsb
dec
cld
cld
sti
ret
test
sahf
in
jecxz
xor
in
push
cld
call
movsb
imul
ret
sub
cwtl
fcmove
lret
pop
sub
aad
frstor
out
scas
mov
std
aas
pop
lea
and
sbb
pop
inc
insb
push
adc
jmp
jbe
je
test
jae
stos
push
pop
mov
inc
xchg
inc
xor
add
add
testl
inc
xor
inc
mov
dec
rcll
lds
inc
and
jns
cmp
push
je
or
mov
scas
sbb
adc
sbb
mov
stc
clc
jmp
out
cmp
and
sbbl
jae
iret
xchg
jns
adc
push
lods
xchg
xchg
insb
push
addr16
mov
xor
ficoms
scas
dec
and
push
pop
mov
add
and
dec
ss
leave
push
out
push
and
xchg
mov
insl
add
adc
sub
sub
pop
pop
aaa
xchg
jl
jl
aad
jmp
rcll
inc
xchg
movsl
mov
cmp
int3
fucomp
mov
mulb
cltd
repnz
fmull
sbb
pop
movsl
dec
jno
pop
sub
icebp
and
stos
jbe
adc
hlt
gs
sar
jle
frstor
add
hlt
les
popf
inc
leave
arpl
popa
std
xor
cmp
in
push
pop
adc
mov
jecxz
mov
or
jo
push
cli
js
pop
inc
inc
push
imul
inc
add
sbb
mov
sbb
mov
fidivrs
xor
je
sahf
inc
ret
adc
sahf
lret
lahf
or
xor
add
xchg
cmp
repz
push
stos
cmp
lret
xchg
xor
repnz
xchg
add
xchg
push
in
rorl
xor
cltd
and
push
into
hlt
lock
or
stc
jb
push
pop
sbb
sbb
mov
aaa
adc
mov
jne
out
fcomps
scas
icebp
cmpsb
sub
xorps
xor
add
rcrl
xlat
pop
and
loopne
pop
mov
cmc
in
scas
cmp
jb
mov
sbb
nop
mov
cltd
divl
inc
inc
xchg
xlat
in
clc
or
data16
dec
mov
sub
ficoms
test
sub
lods
cmpsb
cli
mov
adc
shrl
push
xchg
pop
add
clc
add
test
dec
notb
add
dec
xchg
ljmp
push
out
lahf
lea
mov
dec
cli
mov
jecxz
imul
fidivrl
xchg
add
mov
and
test
pop
fidivs
sub
popf
sbb
or
push
jecxz
jmp
mov
mov
and
push
movswl
sub
and
jns
mov
inc
sub
stc
cmc
or
add
pop
fnsave
xchg
inc
push
scas
shrl
popa
dec
add
sub
or
leave
add
jg
iret
xlat
test
div
ss
and
lret
aas
sbb
pop
test
in
lods
mov
div
stos
stos
add
arpl
push
and
outsl
xor
scas
jmp
sub
icebp
hlt
js
mov
jmp
in
lds
push
pop
push
test
iret
js
fdivs
lock
ss
mov
or
mov
sbb
in
je
test
cmpsb
aad
test
push
test
dec
adc
xchg
sbb
divb
add
hlt
fcmovnb
mov
pop
mov
inc
add
in
orb
lret
push
cmp
add
hlt
mov
dec
dec
cmp
loop
mov
jne
stos
fisttpl
push
inc
cmpsb
test
inc
jge
dec
lcall
jnp
lcall
jl
jae
call
adc
pusha
push
cltd
mov
pop
sbbl
shlb
addr16
dec
lods
pop
xchg
scas
add
sub
adc
aam
mov
mov
fwait
xchg
push
mov
mov
arpl
mov
cmp
cmovnp
gs
int
xchg
daa
pop
loope
lea
mov
cwtl
add
jp
test
in
test
add
lds
inc
in
movsb
js
jb
arpl
test
rcrl
xor
inc
mov
xlat
loopne
int
call
push
es
arpl
mov
adc
push
sub
ja
test
mov
test
lcall
adc
mov
inc
mov
cmp
leave
mov
sub
push
shll
xchg
sub
lock
adc
insb
fs
lret
enter
popf
pop
mov
mov
into
cmc
lock
loopne
jb
addr16
xchg
iret
jge
lea
sub
adc
lret
add
sub
mov
jge
xchg
jge
add
in
nop
pop
cmp
loopne
gs
mov
or
rcll
sti
xor
loopne
cmovl
pop
mov
dec
in
add
mov
cmp
sub
rcl
xor
and
into
scas
stc
adc
lds
into
lods
fldt
jnp
push
inc
jo
mov
mov
mov
orb
sahf
test
fwait
push
sub
fmuls
subb
jg
push
stc
xchg
rcr
push
shl
mov
sbb
mov
mov
int
cmp
stc
sub
aaa
dec
sbb
mov
stc
js
mov
jne
pop
sub
in
mov
xorb
or
sub
loop
inc
aas
addr16
rcrb
cmpsb
cmp
jae
mov
inc
push
adc
push
enter
jb
pop
fcompl
mov
jbe
insl
sbb
mov
jg
test
mov
je
pop
lock
cs
add
xchg
outsb
cli
mov
jl
out
loope
inc
mov
lds
add
fstpt
cmp
or
cmp
pop
mov
mov
and
ffree
lret
cmp
push
adc
aaa
lret
dec
sub
nop
mov
or
xor
lcall
jmp
pop
add
mov
ficoms
xlat
jnp
jle
mov
bound
add
aam
stc
push
fld1
sub
out
ret
jo
cmp
adc
or
cli
popf
jge
push
divl
cld
je
dec
cmpsb
mov
imul
xchg
inc
push
add
mov
std
add
xor
addb
adc
jp
popa
cmp
or
pop
ret
add
mov
xchg
sub
adc
aas
ret
and
jo
cmp
pop
imul
lret
sub
inc
xorb
add
enter
roll
inc
xadd
lods
ja
xchg
pop
lret
ss
pop
or
mov
stos
mov
pop
xchg
jmp
push
adc
lcall
cmc
sbb
dec
mov
mov
les
sub
pop
jge
mov
fisttps
xor
jecxz
out
lahf
sub
push
in
leave
jae
jb
mov
rcrb
inc
lods
fdiv
rol
xor
hlt
in
inc
push
sahf
ficomps
pop
jb
js
lret
or
mov
adc
jge
idivb
pop
dec
les
inc
xor
sub
dec
mov
jb
movl
sahf
mov
pop
jl
mov
inc
sbb
mov
lods
scas
je
dec
mov
stc
cld
icebp
pop
movl
rcl
idiv
push
sub
faddp
xchg
pop
ret
int3
imul
push
rclb
pop
enter
mov
imul
popf
int3
sbb
cld
inc
ret
jne
pop
lods
or
ss
int
mov
jnp
outsl
rcrl
ljmp
cltd
repnz
out
dec
aaa
ret
call
inc
xor
fsts
sbb
std
call
scas
mov
daa
lods
pop
pop
scas
in
cmp
bound
icebp
inc
push
pop
and
or
mov
fsts
fcomps
out
xchg
fsubl
into
addl
jmp
fmulp
pop
jecxz
mov
ror
scas
fiadds
ret
pop
or
dec
enter
test
outsb
xor
test
jo
jp
mov
adc
cmp
cli
leave
movsw
loopne
or
shlb
push
adc
inc
fcomps
mov
push
add
sub
aaa
lahf
arpl
scas
fbld
dec
repz
sbb
mov
inc
and
or
cltd
mov
cli
cmp
pop
push
icebp
dec
arpl
jbe
stc
and
dec
fiadds
test
jbe
add
push
pop
fists
mov
sarb
pop
sub
mov
jnp
pop
push
mov
add
insb
pop
aas
pop
cltd
dec
jmp
and
out
pusha
mov
arpl
out
iret
out
cs
jge
mov
inc
int3
jmp
call
push
ds
mov
sub
push
sbb
inc
push
loope
mov
inc
mov
mov
lcall
inc
popa
jne
jl
daa
arpl
inc
pop
rcrl
cs
out
scas
shr
imul
inc
sub
repnz
xchg
push
outsl
or
and
shlb
push
daa
inc
add
aad
repz
arpl
ret
jmp
movsb
test
fisttps
dec
cs
jbe
cmc
and
imul
or
pop
jmp
mov
and
outsl
ds
xor
outsb
popa
cs
ltr
pop
insl
mov
lahf
cmp
sub
stc
add
fildl
lods
push
out
aad
pusha
push
loop
les
inc
inc
inc
xchg
outsl
jne
or
ja
paddsw
stos
jnp
fimull
add
js
cmp
jae
movsl
pushf
inc
stc
inc
jle
mov
hlt
rorb
mov
data16
notb
xchg
movsb
jl
xchg
sbb
nop
sbb
jo
jmp
fsts
sub
int3
xchg
pop
add
sbb
into
int3
jb
mov
add
push
mov
insb
lock
xlat
adc
les
or
pop
imul
pop
les
xchg
lcall
mov
testb
fsubs
mov
cld
pop
xchg
mov
insb
jnp
pushf
cmp
mov
sub
mov
jb
pop
popa
or
cmp
and
inc
std
rol
mov
xlat
imul
mov
ljmp
ficomps
rcrb
adc
leave
dec
xchg
inc
pop
pop
pop
sub
dec
enter
lahf
daa
outsb
xor
mov
rcl
insb
pop
idivl
fs
jg
fcoml
mov
jns
lahf
jne
fistpll
mov
xlat
sbb
push
adc
ret
lahf
mov
ds
cmp
sbb
loope
fidivrl
mov
cmc
adc
addl
shlb
scas
and
pop
cld
push
lret
mov
lret
es
cwtl
add
jmp
push
sub
add
sbbl
movsb
lock
lds
and
es
jmp
cs
movsl
sub
push
inc
sbb
mov
es
arpl
xor
add
imul
adc
repz
sub
lock
xchg
mov
pusha
aam
push
nop
adc
inc
mov
shrl
or
movsb
sti
pop
pop
dec
int
jnp
xor
mov
dec
cmpsl
dec
add
lods
pop
aas
mov
xchg
or
popf
loopne
ret
in
or
and
lret
push
push
enter
dec
int
stos
or
out
loop
iret
cltd
pop
test
sub
cs
cli
negb
imul
lds
pusha
or
test
cli
aad
adc
jo
lahf
xor
loopne
and
out
cmc
cmpsb
rcll
out
push
outsl
dec
arpl
jmp
mov
lret
cmp
in
fmuls
push
sbb
xchg
push
add
out
popa
add
mov
mov
out
js
cmp
andb
popf
xchg
dec
subb
xchg
sbb
mov
jbe
jns
bound
arpl
push
rcl
mov
cmpsb
rcll
hlt
insb
aam
scas
pop
and
push
enter
add
pop
test
fidivs
pop
sub
incl
xor
xlat
lret
mov
shll
mov
iret
inc
and
iret
sub
or
xorl
es
xchg
aam
scas
cmp
and
cmp
call
push
scas
shll
push
test
gs
push
inc
test
push
dec
gs
dec
xchg
jb
iret
cmp
adc
pop
clc
mov
dec
ds
sbb
sarl
jp
and
shlb
cltd
cs
addr16
mov
xorl
lea
add
iret
mull
popa
jnp
mov
in
shrb
out
outsb
and
adc
call
mov
push
sbb
rclb
and
out
lods
sub
icebp
hlt
add
fisttpll
pop
int3
popa
xchg
adc
cltd
adc
out
or
test
xor
xor
jns
or
stc
cld
pop
inc
jle
adc
pop
lea
or
cmp
jbe
in
jl
fcmovb
xor
pop
inc
nop
jmp
sarb
cmpsl
push
adc
sub
ljmp
lret
and
in
cmp
push
int
cwtl
sub
and
mov
lock
or
push
or
sahf
test
push
lds
mov
dec
es
pop
addr16
add
push
nop
or
dec
bound
int3
add
je
outsl
mov
mov
das
shrl
cli
pusha
push
lds
pop
jb
pop
lcall
fdivrl
lret
in
add
mov
popf
les
cmpsb
push
mov
and
push
cltd
sbb
aas
mov
in
int
cwtl
jnp
jae
imul
sar
xor
incb
xor
lock
push
sti
or
in
fld1
add
pop
outsb
les
mov
clc
dec
xchg
mov
inc
cld
subb
sub
or
xor
jle
mov
fidivs
mov
js
mov
xor
loopne
or
xchg
outsb
mov
pop
adc
fcmovu
adc
aam
js
inc
movsb
cli
jo
scas
pop
test
int
cmp
aas
pop
cltd
add
or
mov
lods
jae
outsl
push
ret
fildl
test
and
pushf
push
sahf
mov
and
out
ficoml
sub
sub
mov
sbb
mov
adc
sub
ds
sub
dec
pop
or
xchg
insl
jmp
dec
idivb
sub
in
mov
out
jo
fndisi(8087
std
or
sti
lods
and
dec
in
dec
enter
cmp
mov
lods
mov
out
es
mov
or
push
inc
loop
cmp
pop
popf
jbe
sbb
lock
fisubs
push
aaa
inc
push
lret
in
mov
xor
jecxz
daa
iret
icebp
movsb
xor
out
jecxz
lock
nop
test
pop
popa
xchg
push
pusha
ficoms
mov
cmc
or
dec
mov
lock
add
adc
lret
outsl
mov
loopne
lock
cld
or
call
orl
repnz
jge
ljmp
lock
ja
movsl
mov
fcom
out
mov
cs
sbbl
push
cmp
fs
lods
dec
pop
lds
inc
push
stos
ss
idivl
or
xor
sti
lds
mov
xchg
outsb
call
adc
daa
roll
scas
push
das
mov
push
jmp
aas
mov
mov
faddl
xchg
sti
dec
inc
or
call
test
jmp
jecxz
sub
or
dec
sub
dec
cmp
pop
push
jno
movsb
jns
test
lret
imul
loop
loop
dec
popa
addl
cltd
fcoml
and
call
xchg
loopne
and
or
add
mov
lret
aaa
add
outsl
shlb
and
mov
and
das
xor
push
add
cmc
sti
jl
aas
mov
add
cmp
mov
adc
lcall
push
xchg
or
or
adc
xor
dec
out
xchg
cmpsl
pop
dec
cmpsb
movsl
cmpl
out
sub
out
fstpl
mov
push
test
inc
fistps
leave
lea
std
mov
mov
test
pop
adc
lcall
stos
mov
xor
mov
mov
adc
lds
dec
cmp
sahf
pop
dec
je
movsb
mov
or
pop
decl
cmp
mov
repz
jb
mov
jg
hlt
dec
inc
int3
add
sbb
cmp
lcall
xchg
jecxz
fst
jge
jecxz
dec
cmpsb
pop
push
sub
mov
test
xor
shll
add
gs
lea
call
mov
add
clc
jmp
out
flds
pop
cmp
inc
fcomps
xchg
ss
es
stos
test
ret
pop
add
movsb
aad
in
xchg
sub
dec
jge
mov
cmp
mov
jp
icebp
cmp
shll
in
xor
rep
xchg
mov
push
xchg
outsb
loop
sub
mov
notb
push
inc
xchg
or
or
mov
fiaddl
sub
and
inc
dec
mov
mov
call
arpl
test
sbb
push
push
xchg
pop
push
or
sub
mov
das
xchg
push
mov
aad
fdivs
lret
jno
inc
adc
dec
sarb
xchg
mov
stc
mov
dec
test
enter
aad
inc
enter
jle
loopne
push
dec
add
cwtl
add
sbb
in
push
sbbb
mov
mov
jae
mov
xchg
pop
in
push
daa
cmp
jo
movsl
mov
add
je
add
cmp
lods
and
mov
cld
lods
mov
jge
or
and
fwait
and
sub
or
mov
xor
xor
adcb
test
pop
scas
bound
adcb
jbe
aas
stos
adc
cmpsb
xor
adc
inc
and
mov
cs
das
mov
dec
test
mov
test
insl
mov
mov
fsubrl
sbb
dec
dec
push
inc
xchg
repz
stos
mov
clc
cmp
jl
subb
cmpsl
cld
fmuls
add
mov
les
stos
jo
mov
pusha
rcll
xor
cmpsb
xor
cmp
cmp
cmp
inc
ret
or
sub
add
lcall
pop
and
cmp
inc
dec
repz
fcomp
and
adc
mov
and
mov
call
push
mov
fistps
pop
pop
and
xchg
pop
jne
or
cwtl
shll
int
daa
or
enter
in
cmp
icebp
cli
mov
lahf
fcmovnbe
dec
ret
or
sar
std
or
push
bound
xor
and
into
add
fisubs
xchg
and
in
iret
outsl
and
and
loop
pop
or
lods
mov
xorl
jno
xchg
mov
stos
inc
lock
push
call
incb
push
cmp
cmpsb
or
lahf
dec
or
sahf
xlat
hlt
popw
roll
sub
fs
pop
stos
outsl
jne
add
jecxz
push
std
or
int
rclb
dec
mov
inc
push
pop
or
xchg
dec
sub
jb
cmp
or
clc
sti
xor
xchg
out
and
movsb
inc
push
or
mov
sub
pop
mov
or
pop
jg
mov
dec
sbb
mov
cmpsl
jo
stos
jle
std
push
rolb
dec
xchg
pop
sahf
mov
cmp
xchg
das
and
push
mov
cmp
icebp
insb
jp
xchg
xor
and
subl
shrl
sub
loope
jbe
and
ds
fidivrl
in
cmpsl
xorb
cmpsl
fprem1
mov
movsl
mov
sub
and
clc
cmp
mov
lock
popf
sahf
sub
stos
mov
and
je
test
mov
sub
mov
xor
or
mov
sbb
xchg
xor
push
inc
jne
mov
xchg
cmp
jo
ret
call
ficoms
rorl
sbb
inc
xchg
xor
in
divb
or
cmp
fldcw
cmpsb
repz
dec
or
add
or
hlt
out
mov
mov
mov
out
jge
fistl
xor
sbb
cmp
mov
js
jg
lods
sub
push
data16
ret
push
pop
sahf
push
pop
jnp
adc
jg
enter
pop
xor
mul
rclb
cmpsl
jle
sub
add
inc
dec
cld
stos
in
xlat
ds
nop
mov
xlat
je
bound
bound
xor
je
or
mov
scas
jae
mov
dec
insb
pop
in
lods
add
mov
sub
xchg
lods
icebp
das
loope
cmp
fwait
mov
pop
add
clc
gs
mov
push
jle
sub
das
add
push
push
sbbb
fwait
sbb
das
add
adc
aam
jne
adc
xchg
das
popa
jbe
adc
into
jmp
ja
mov
cmp
mov
hlt
xchg
or
pop
hlt
ret
shl
sbb
push
or
call
mov
push
dec
addr16
shlb
xor
mov
popa
mov
dec
adc
pop
mov
ret
aam
mov
push
lret
xor
scas
cmp
loop
repnz
jnp
and
xor
xchg
ljmp
dec
sub
and
aaa
stos
push
pop
push
sarb
rcrl
jle
sub
sbb
jecxz
dec
mov
push
out
cmc
mov
mov
cmpsl
fdivrs
sub
adcl
cmp
insl
jae
push
or
inc
pop
xchg
movsb
pop
mov
inc
xor
mov
jle
inc
pusha
xor
ljmp
and
std
push
sub
mov
push
mov
dec
mov
mov
mov
mov
pop
out
sahf
fistpl
and
rcl
mov
lock
pop
in
sbb
mov
movsl
mov
mov
push
je
dec
lcall
subl
lock
clc
mov
pop
jg
xchg
aas
call
xchg
pop
movb
dec
xchg
and
fisubs
or
pop
mov
jbe
pop
cltd
mov
shll
jne
test
mov
cmpl
fistpl
jecxz
jle
add
mov
push
pop
pop
mov
inc
adc
sbb
movl
jl
xor
jg
xor
dec
pop
lods
push
add
mov
or
imul
xor
sbb
dec
leave
movsl
call
popa
inc
and
inc
and
outsb
out
and
sahf
out
mov
std
aaa
fs
mov
enter
inc
mov
xchg
and
jecxz
stos
iret
push
orl
mov
pop
xchg
inc
mov
fs
mov
xor
xchg
jne
sub
les
pop
jp
inc
inc
jbe
arpl
test
js
pop
or
sbb
push
jl
sbb
out
popa
and
and
jge
pushf
inc
addr16
sub
cmc
in
mov
jmp
fs
sahf
mov
or
repnz
inc
dec
sarl
xor
cli
pop
aaa
out
jmp
xor
test
mov
fstpl
orl
pusha
fwait
dec
or
pushf
cmp
lea
fmull
jmp
add
rorl
xchg
test
cltd
add
into
scas
and
adc
fidivl
xor
adc
rolb
xchg
jmp
pop
add
add
loop
insl
int3
nop
cmp
cmp
arpl
test
pop
sbb
scas
jnp
cs
push
push
xor
mov
jbe
jne
dec
jl
in
aad
sub
or
int3
hlt
inc
lahf
inc
scas
jle
pusha
xchg
push
test
dec
jge
and
xor
xor
add
push
aad
stos
stc
dec
add
icebp
aas
inc
inc
push
jb
stos
inc
scas
xchg
push
sbb
ljmp
or
cmp
and
shll
mov
add
hlt
fists
mov
shlb
xor
dec
cltd
mov
push
cs
dec
push
nop
insl
dec
test
adc
enter
mov
lea
xlat
mov
outsl
mov
dec
mov
mov
adc
sub
pop
stos
pop
bound
mov
leave
int3
loopne
shll
push
xor
stc
rcrb
pop
movsl
sbb
in
xor
xchg
adc
test
and
mov
stc
bound
cmpsb
adcl
cltd
fidivrs
mov
lea
dec
testl
out
repz
fs
out
inc
sti
ja
and
jle
js
mov
inc
in
inc
mov
pop
mov
xor
ret
jb
mov
xchg
jns
dec
cmpsl
js
je
std
mov
mov
call
mov
push
sub
in
mov
xorb
aad
sbb
ret
jle
or
jl
xor
sbb
gs
lret
and
setnp
arpl
inc
sbbl
sbb
aas
jo
imul
mov
push
mov
sbb
or
and
fs
push
jmp
out
in
push
mov
sbb
sub
repz
enter
dec
mov
jbe
add
pop
mov
scas
fdivp
sub
dec
jns
fcmovu
add
test
repz
or
mov
orb
sbb
cmpsl
or
pop
stos
jmp
jo
pop
or
loopne
cmp
std
jns
and
jae
push
dec
sti
dec
mov
daa
and
xor
jg
xchg
out
mov
inc
pop
jmp
lret
adc
sub
xchg
dec
lock
pop
ret
aad
mov
test
jecxz
cmpsl
ud0
inc
xchg
adc
popf
cltd
out
push
jno
aam
inc
pop
mov
cld
push
lret
and
test
inc
lahf
int
xor
jge
push
lds
ret
pop
or
cs
in
adc
sub
inc
jns
push
mov
add
lret
inc
stc
xchg
cmc
mov
leave
fdivrl
mov
inc
mov
inc
fcomps
xchg
mov
jae
mov
mov
push
or
jnp
pushf
jo
std
inc
push
in
pop
mov
dec
pop
cmp
mov
faddl
mov
lods
add
repz
popa
lret
sub
cmpsl
or
shrb
adc
fisttpl
jne
ror
nop
mov
out
pop
in
imul
rorb
sarb
dec
loop
ret
adc
add
stos
cltd
xchg
xchg
dec
or
fnstenv
mov
xor
ljmp
cmpsl
push
shll
mov
or
dec
shrl
push
popf
and
mov
fiadds
mov
jmp
test
mov
je
cmp
inc
rolb
shlb
jp
push
pop
jo
movsl
rclb
out
sbb
lea
mov
leave
pusha
cmp
rcl
xor
leave
mov
addb
dec
inc
add
sub
xor
sbb
mov
cmc
jle
pop
adc
pop
test
cmpsb
xchg
xchg
mov
and
dec
nop
sbb
sub
or
dec
aaa
scas
sbb
mov
lcall
or
pop
shrl
mov
int
mov
adc
fcmove
leave
int
xchg
ficomps
repnz
lds
or
pop
iret
sub
push
mov
nop
cmp
add
test
sub
leave
in
sub
mov
mov
jle
js
dec
mov
pusha
sbb
lret
fsubs
mov
out
jle
leave
dec
mov
jo
fistpl
scas
push
xchg
aam
adc
std
loopne
pop
dec
xchg
add
mov
iret
push
xor
mov
pop
adcb
lds
ja
ja
out
leave
push
stos
xchg
sbb
push
bound
lret
adc
mov
insb
xlat
hlt
jb
pop
popf
fcomi
xchg
hlt
pop
mov
insl
shll
pop
stc
pop
repnz
add
mov
fsubs
test
mov
cmp
loope
push
cld
add
jnp
push
loope
xchg
inc
imul
jmp
push
add
mov
repnz
mov
movb
out
and
jp
in
hlt
cmc
pop
ret
cmpsb
or
mov
iret
mov
out
adc
lret
adc
std
call
cmpsb
iret
fldenv
sub
pop
in
mov
dec
mov
inc
dec
sti
rcll
push
dec
inc
or
ret
and
sbb
sub
jae
pop
cmpsb
cmpsl
push
pop
scas
mov
in
mov
leave
push
testb
inc
inc
sub
fbstp
and
stc
mov
pusha
xacquire
dec
pop
cmc
cmp
ds
fildl
inc
cmpsl
pop
and
bound
mov
ds
push
ss
mov
sbb
jns
fdivl
sbb
lret
jecxz,pn
xor
sub
gs
loop
fnstcw
jp
shl
pop
stos
shlb
mov
sbb
sub
repz
jno
jecxz
repnz
scas
leave
or
pop
ret
pop
jl
jbe,pt
mov
cmc
fildl
xchg
mov
cltd
mov
mov
or
pop
addb
add
mov
out
sbbb
inc
sbb
mov
push
push
mov
push
jmp
inc
in
repnz
int
mov
xlat
or
rorl
xor
out
pop
fsubrs
pop
out
add
lock
cmp
outsb
lahf
pusha
repz
jb
data16
hlt
lret
xor
test
add
cmc
gs
call
scas
mov
in
dec
and
jle
xchg
lret
inc
test
ds
mov
fwait
loopne
inc
movsl
xor
ja
mov
insl
push
addr16
aam
and
bound
jb
cld
push
jle
jp
cmp
push
mov
lret
inc
push
inc
push
push
iret
mov
mov
popa
jp
pop
dec
mov
insl
fistpll
lock
stos
js
dec
push
sbb
or
push
and
out
idivl
out
or
jb
mov
dec
sub
lods
or
movsb
push
mov
pause
fnsave
sub
cmc
pop
or
or
mov
orb
pop
cmp
xchg
mov
into
jb
jne
xor
fcompl
mov
in
add
mov
push
shll
jnp
inc
cli
push
adc
xor
cmp
cmp
lret
mov
cmp
cmc
inc
sahf
ljmp
mov
xchg
ret
fisubs
cmp
test
dec
mov
pusha
stc
jecxz
xchg
mov
cmpsl
cmpsl
xor
hlt
xor
aam
push
push
jmp
movsb
ljmp
inc
add
call
mov
int3
sbb
or
movsb
push
jne
mov
hlt
icebp
sbb
sbb
inc
cmp
lods
lahf
xchg
test
xor
and
and
mov
fs
scas
add
dec
jb
cwtl
fldl
nop
xor
or
lahf
sbb
mov
dec
subl
leave
jmp
test
xchg
icebp
mov
test
sahf
shlb
adc
enter
xor
push
dec
push
cmpsb
repz
sbb
shr
mov
and
loope
shlb
fs
stos
dec
mov
scas
push
orb
or
dec
mov
xchg
xor
test
inc
cmp
sub
sarb
dec
ror
cld
add
jle
out
fstl
mov
addl
loopne
add
movsb
mov
lret
sub
in
fbld
lcall
mov
jge
call
fcoms
mov
repz
negb
and
sub
ja
sbbb
adc
dec
push
sbb
insb
mov
in
push
subl
xlat
pop
push
pop
sti
loopne
in
outsl
push
bound
jo
imul
sub
push
push
mov
push
push
sub
imul
daa
lods
fadd
loope
push
lods
push
and
ja
pop
fnsave
lret
adc
das
mov
inc
jg
dec
add
loop
shll
jecxz
loop
cmpsb
jno
stos
xchg
aad
movsl
cltd
xor
jne
pop
jg
fimull
mov
imul
repz
ret
idiv
jl
sahf
sbb
pop
inc
scas
insl
ret
push
add
cmovge
fwait
xchg
out
arpl
insl
xchg
cmp
in
mov
aaa
nop
in
add
dec
pop
cmp
pop
jecxz
cmp
lret
sbb
or
mov
in
xchg
mov
mov
cmc
jbe
pop
out
push
mov
insb
push
and
mov
aad
xchg
pop
int3
mov
adc
cld
jbe
cld
pushf
movsl
sub
into
inc
and
mov
jg
xchg
mov
cmp
jg
fisubrs
aam
les
test
push
mov
cmp
fstl
aas
cli
xor
pop
push
jns
scas
das
ret
jmp
rclb
in
sub
int
jns
dec
icebp
mov
push
pushf
push
andl
sbb
sub
rorb
int
pusha
mov
insl
xchg
cmc
mov
push
and
adc
out
call
frstor
pop
pop
fsub
in
cmp
daa
inc
pushf
pop
out
out
or
pop
test
shrb
imul
mov
pop
or
dec
jl
mov
sub
mov
sub
sub
push
jge
cmp
mov
pop
fwait
jg
xor
and
jp
lahf
testb
or
les
push
mov
xchg
pop
adc
test
ljmp
fistpll
mov
pop
int3
lea
pop
cmp
push
lock
cmp
xor
xorb
das
testb
and
mov
push
xorb
cmpsl
xchg
ss
pop
push
pop
jne
roll
mov
popf
lcall
jmp
mov
mov
xor
adc
mov
xchg
pop
inc
xor
mov
and
dec
xor
push
xchg
lock
cmpsb
cltd
dec
push
xlat
fstpt
daa
jl
mov
popf
hlt
fistpl
xor
push
je
push
scas
mull
cmpsl
adc
sbb
sub
adc
xchg
dec
lods
ret
sub
clc
mov
scas
pop
testl
mulb
push
push
repz
mov
inc
lods
xor
xchg
and
sub
shlb
cltd
lret
adc
es
and
loopne
pop
or
incl
ljmp
test
adc
pop
cli
fsts
pop
xchg
leave
mov
popf
inc
mov
test
adcl
dec
dec
adc
add
jne
cmc
mov
or
iret
dec
idivb
aaa
jl
pop
pop
or
add
mov
std
dec
data16
imul
inc
jl
fstps
adc
popa
mov
jg
test
fstl
sub
int
testb
stos
and
sub
mov
and
dec
stos
mov
loope
dec
in
aaa
adc
add
cmp
cmp
pop
xor
outsb
adc
or
add
dec
ja
pop
cmp
ficoms
test
mov
notb
fbld
pop
pop
inc
mov
inc
outsl
cmp
shl
loop
shl
inc
inc
dec
lret
xchg
xor
insl
lods
sub
dec
pop
mov
lock
and
xor
mov
mov
ds
mov
cmpsl
fstl
outsb
push
fnstenv
sbbb
push
adc
push
push
adc
out
push
pop
jnp
imul
mov
push
dec
dec
ss
inc
mov
pop
mov
cmp
in
decl
fcoms
push
mov
mov
and
jbe
daa
popf
in
mov
cld
jp
dec
inc
sub
lahf
mov
inc
dec
shll
negb
outsl
pop
lcall
inc
cmp
xchg
mov
gs
rolb
pop
or
mov
loope
test
cs
or
xor
leave
or
dec
es
mov
aad
int
pusha
mov
xchg
in
or
jae
jl
sub
icebp
addr16
jne
mov
push
pop
add
inc
mov
pop
fcmovu
mov
jns
cltd
stos
lahf
pop
inc
mov
inc
push
fwait
jns
repnz
mov
out
sub
sbb
sti
rorb
sbb
xchg
cs
jge
push
lcall
fdivs
or
mov
sarl
and
dec
in
and
repz
mov
mov
mov
xchg
xor
pop
sbb
insb
rolb
add
call
xlat
mov
mov
xchg
not
cmp
mov
mov
xorl
loop
lahf
or
fs
cld
inc
mov
das
out
dec
adc
test
setg
stc
lods
jno
push
scas
fidivs
jmp
sub
sbb
pop
test
daa
es
test
push
test
bound
add
xchg
push
shlb
dec
sub
or
sti
movl
mov
hlt
test
jg
cs
jmp
repz
in
lea
dec
test
test
fsts
mov
push
cmp
or
sub
xor
rclb
jae
std
pop
shl
insb
dec
pushf
loope
dec
add
push
out
jo
je
sub
pop
dec
cmp
call
je
sbb
pop
loope
inc
fldenv
xlat
scas
xchg
pop
dec
xor
xor
xchg
cmp
out
cmc
jnp
mov
xor
add
sbbb
dec
push
out
cmp
cmp
lds
ficompl
or
rcl
jecxz
mov
nop
sahf
ljmp
xlat
mov
sub
testl
or
rorl
mov
adc
push
sbb
aaa
adc
lock
xor
pcmpeqd
push
jb
or
add
or
push
xor
aaa
push
shrl
lret
jnp
fldcw
inc
shrl
das
movl
dec
cmp
push
or
mov
mov
xchg
adc
sbb
fmul
cmp
insl
pusha
out
mov
inc
mov
bound
out
inc
sbbl
lods
and
dec
out
mov
xchg
mov
out
cs
rcrb
or
scas
jo
fistps
jb
xor
ret
subb
lret
ljmp
int3
das
cltd
xchg
ret
push
out
in
icebp
pop
aas
or
mov
aad
jno
pop
and
jnp
aad
test
cmpsb
pushl
std
cwtl
popf
jge
sti
sub
push
mov
clc
pop
lock
subb
cmp
lret
pop
dec
cmpsl
xchg
test
xchg
rorl
fidivl
dec
cmpsb
pop
and
mov
cmp
jne
xlat
js
xchg
fbstp
pushf
shlb
mov
fisubrl
mov
jmp
xorl
adc
cmp
pop
test
xlat
and
or
out
sub
pop
xchg
icebp
jne
ds
dec
pop
jmp
bound
inc
cli
outsl
mov
inc
das
mov
xchg
mov
iret
lods
addb
rclb
push
fs
out
insb
jae
adc
mov
loope
cmc
and
out
jle
repnz
imul
pop
pop
cmp
test
lds
les
test
push
loope
pop
or
pop
loope
mov
bound
dec
aam
cmp
cmp
sbb
mov
out
mov
lds
and
mov
std
jl
push
cmpb
xchg
mov
push
fsts
mov
inc
sbb
lods
add
inc
or
sti
push
enter
test
scas
sbb
ficompl
jbe
cmp
inc
lahf
fsqrt
in
loope
add
mov
ret
cli
add
and
mov
lods
inc
add
or
sbb
jno
mov
pop
loop
inc
adcb
shrb
les
mov
jg
cmp
or
les
ds
adc
xor
arpl
fldcw
push
xorb
inc
jne
and
std
sbb
es
cld
notl
sub
add
and
stc
scas
not
fcmovne
repz
insl
and
add
adc
jg
mov
stos
push
rclb
add
mov
rclw
xor
add
stos
push
push
mov
loop
repz
out
loop
inc
jmp
jno
jb
adc
mov
shll
sbb
adc
js
cmp
and
clc
mov
add
or
or
test
xchg
sbb
inc
xchg
sbb
insb
fdiv
sub
pop
inc
pusha
and
mov
or
mov
mov
lods
pop
mov
movsl
imul
or
loope
data16
mov
popa
mov
mov
jp
jo
adc
outsb
leave
out
aad
fdiv
sti
sub
push
or
js
or
dec
or
test
or
add
test
ror
pop
jns
cmp
fisubrl
loope
cmp
xor
xchg
adc
jbe
inc
adc
mov
cmp
mov
xor
mov
xor
xor
mov
cld
gs
pop
add
les
lret
mov
dec
subb
mov
xchg
sbb
sbb
xor
add
ss
cmpsb
and
test
and
lea
xor
xor
xor
out
imul
jecxz
int3
icebp
cmp
xchg
xchg
push
inc
loop
inc
mov
xor
loopne
cli
cmp
lret
xor
loope
fwait
ja
pop
or
das
inc
pop
lret
lds
adc
sbb
lea
inc
jp
dec
sti
push
fnstsw
pop
jne
call
pop
add
js
sub
ja
fisubs
jae
repnz
call
mov
jb
jp
mov
shlb
push
enter
push
rcl
lods
jnp
sbb
fsubrs
loopne
subb
gs
inc
sbb
jmp
repz
dec
or
xlat
mov
pop
bound
fmuls
adc
fs
imul
dec
cs
lret
lcall
lea
xor
mov
mov
and
inc
jns
or
dec
imul
into
jg
call
scas
adc
sub
pop
lret
sub
xor
cwtl
imul
lock
push
dec
mov
rorl
jecxz
outsb
outsl
hlt
in
out
jo
mov
imul
pop
mov
lret
push
popa
xor
je
jae
lods
mov
and
sbb
dec
mov
mov
in
sbb
add
fs
add
rcll
mov
pop
pop
cld
dec
jg
pop
shrl
jnp
adc
jnp
inc
into
push
pushf
xor
das
adc
xchg
pushf
inc
icebp
repnz
aam
ret
pop
dec
cltd
xorb
call
push
xchg
cmp
je
jl
fidivl
inc
mov
mov
push
in
popf
iret
xor
sbb
and
aaa
rcrb
mov
jp
lret
sbb
leave
cli
fistpll
out
ficompl
dec
push
mul
out
lcall
inc
ljmp
stos
hlt
outsb
sbb
inc
rcll
cmp
cmp
sub
pop
xor
push
addr16
push
scas
mov
push
pop
ret
mov
push
xchg
xchg
int3
popa
test
inc
mov
push
mov
and
idivl
mov
pop
cmpsb
push
mov
out
push
fs
dec
xor
loopne
mov
adc
add
push
mov
lahf
cltd
dec
xchg
mov
jns
sti
xchg
ret
iret
out
outsl
adc
prefetch
xor
out
xchg
popf
cli
pop
inc
jno
jecxz
push
push
xchg
push
mov
pop
jns
repnz
lea
popf
jo
mov
xchg
or
je
push
pop
cmpsl
lcall
push
int3
pushf
push
jge
sub
bound
sbb
add
pushf
mov
push
dec
sbb
fisttps
popa
mov
test
repnz
pusha
add
test
sbb
jle
aaa
pop
xor
xchg
mov
mov
adc
mov
cmp
pop
mov
dec
adc
add
and
setno
or
les
seto
shrl
std
loope
ror
lret
popf
xlat
pop
out
and
pusha
mov
int3
sbb
xlat
popa
mov
inc
cmpsb
test
inc
mov
or
jg
cvtps2pi
fsubl
es
into
xchg
mov
je
inc
add
dec
cmp
or
movsb
jmp
pushf
cmpsl
mov
stos
ljmp
sub
pop
sbb
add
imul
icebp
inc
int
sub
pop
adc
xor
rcrb
and
add
add
sbb
jnp
insl
xchg
sbb
xor
jno
xlat
adc
je
fwait
jo
xchg
call
jo
clc
inc
pop
add
pop
divb
scas
sub
jbe
fisubrs
xchg
test
pop
iret
andl
sarb
mov
sub
hlt
fdivrl
sub
jp
jbe
lret
jl
stos
ja
cmp
and
cmpsb
inc
fistps
jo
xchg
add
adc
pushf
ret
adc
shr
in
add
fists
or
inc
inc
xchg
in
ljmp
xchg
pop
add
xchg
sbb
mov
test
mov
pop
mov
cmpsl
lea
imul
mov
sbb
shlb
aad
cmp
test
lods
test
dec
fidivl
outsb
jl
mov
sti
mov
xchg
js
ret
adc
inc
sahf
cwtl
push
int3
sub
jnp
out
iret
mov
aaa
dec
leave
scas
sti
outsb
mov
aad
inc
cmp
push
jno
imul
cld
fcmovbe
int
cs
mov
jl
mov
or
lret
mov
jge
xchg
lods
pop
xchg
jl
inc
lods
mov
and
shl
outsb
fstps
fwait
cwtl
and
sub
cmp
in
loope
add
js
scas
sbb
pop
mov
test
dec
adc
xchg
dec
push
cmpsb
mov
into
fnstcw
xchg
or
repz
mov
sahf
loop
xlat
stos
sarb
xchg
pushf
movsb
fcmovb
dec
fidivs
ret
mov
pusha
ret
scas
imul
jae
fdivl
mov
sub
or
mov
mov
aaa
add
stc
cmpsb
and
xor
bound
iret
and
dec
or
sub
and
js
out
xchg
stc
notl
mov
and
in
imul
repz
mov
psubusb
in
call
aad
xor
rcrb
push
int3
es
push
pop
aam
mov
ja
dec
lods
pusha
push
and
out
adc
mov
mov
mov
fsub
inc
and
mov
xor
sub
out
xor
sti
jmp
rclb
adc
lahf
mov
adc
das
mov
scas
add
hlt
jns
pop
subb
lret
push
and
mov
mov
jns
inc
cmp
pop
out
mov
int3
gs
adc
ss
mov
ljmp
mov
jl
sbb
cmp
push
mov
loope
shl
sarb
jl
ret
in
ja
sub
stos
add
sbb
xchg
ret
daa
fstpl
pusha
into
sti
xchg
dec
and
fidivs
je
in
rclb
jns
cli
mov
icebp
loopne
iret
push
mov
inc
out
cwtl
add
inc
pop
out
or
dec
jae
sarl
add
lock
adc
out
adc
aad
mov
add
xchg
out
push
dec
shll
mov
mov
int3
jo
push
sub
test
fsts
shll
jecxz
jo
or
imul
icebp
fnstsw
mov
adc
pop
and
sahf
adc
pop
aaa
push
pop
xlat
lret
sbb
loop
jecxz
xor
aad
rcl
movsl
mov
filds
ja
jnp
cmp
xchg
sbb
es
or
xor
sti
popf
adc
sub
or
fwait
xchg
movsb
in
int
dec
xor
ret
and
test
cmp
push
pop
call
mov
js
icebp
sti
adc
sub
inc
rorb
cs
scas
push
inc
inc
fimull
mov
mov
out
mov
je
ja
and
addr16
imul
dec
pusha
call
mov
sti
add
cmpsb
dec
rorb
pop
nop
mov
imul
daa
inc
fwait
sbb
dec
into
in
dec
out
scas
sbb
cmovge
inc
and
push
cmp
mov
add
sbb
clc
fnsave
dec
les
divl
pop
shrb
daa
nop
push
mov
cld
jbe
test
bound
jl
pop
inc
loopne
pushf
xchg
pop
not
addr16
mov
mov
daa
sub
inc
pop
loop
mov
or
mov
outsl
fwait
insb
inc
mov
fcmovne
les
lods
cmp
loopne
in
sbb
in
cld
mov
add
xchg
iret
dec
mov
mov
dec
adc
cmp
lock
xchg
add
pop
sbb
and
aas
enter
cs
filds
insb
es
aad
sub
popf
test
ret
mov
dec
out
repz
shrl
js
into
lock
xchg
mov
pop
xchg
sub
cltd
inc
loope
jge
inc
jge
fstp
push
or
ss
cmp
lds
ss
add
cld
fmull
pop
dec
jecxz
push
subl
mov
out
dec
pop
les
mov
aam
xor
inc
test
sbb
cmp
inc
mov
sub
xchg
test
cmp
out
pop
sub
test
sub
sbb
rcl
xor
xchg
inc
push
adc
push
ja
xchg
xor
vcomiss
stc
iret
add
int3
inc
adc
pushf
or
jb
xor
js
xlat
push
nop
shrl
cmp
arpl
mov
in
mov
stos
cli
jecxz
mov
mov
in
sbb
nop
rcrb
or
out
outsb
aad
jmp
je
jge
je
loopne
lret
mov
aas
push
xchg
data16
cmp
pushf
xchg
cwtl
pushf
xor
dec
outsl
outsb
xor
scas
add
xor
ret
arpl
inc
bound
inc
jmp
pop
and
nop
popa
aad
popf
xor
icebp
cmpb
hlt
hlt
add
sub
sbb
adc
sti
fstl
jb
fadds
out
sbb
dec
lahf
movsb
jecxz
ficompl
sbb
or
xor
mov
loopne
sahf
add
ja
fdivrp
mov
fistl
jae
stos
mov
in
cmp
xchg
pushl
fmulp
clc
jp
in
jmp
pop
lahf
repnz
dec
ljmp
push
sbb
lcall
scas
jo
in
adcb
scas
icebp
jmp
dec
sbb
and
sub
sbb
sub
inc
lods
fstp
loop
cmp
mov
test
mov
imul
push
fiadds
subb
mov
xchg
cwtl
inc
push
and
bnd
xchg
addr16
cmpl
pop
adc
in
xchg
cli
arpl
lea
fcmovnb
dec
fadds
fmuls
and
fdivrp
xchg
push
movsbl
jmp
data16
ljmp
cltd
stos
movsl
push
pop
test
shrb
stos
outsb
stos
aas
lret
mov
mov
mov
int
inc
xchg
neg
cmp
in
out
aam
hlt
std
jmp
sub
adc
xor
fmuls
enter
mov
dec
sarl
or
hlt
out
xor
jp
fldt
cli
pop
sbb
xlat
in
testb
pop
xor
rorb
es
xor
inc
lods
jbe
andl
mov
in
mov
mov
inc
imul
mov
adc
fcmovbe
popl
cwtl
insl
pop
clc
loop
push
pop
push
sub
cltd
push
or
aad
test
xchg
push
pop
in
push
shrb
in
pop
and
stos
jo
lods
mov
mov
push
mov
sub
in
stos
xor
lret
push
xlat
adc
sbbl
and
shlb
ret
repz
jae
or
and
stc
ficoml
dec
out
cmp
cli
dec
pusha
inc
and
test
mov
inc
xchg
test
cld
inc
arpl
adc
push
sbb
aam
or
test
outsl
ljmp
aad
ficompl
les
scas
sub
enter
ficoms
out
push
mov
int
jns
ljmp
push
add
andl
mov
aaa
dec
mov
jge
call
push
in
cwtl
das
add
push
or
sub
mov
int
jecxz
dec
sbb
cvtps2pi
mov
mov
xor
rorl
inc
push
xchg
ds
stos
push
xchg
adc
adc
cmpsl
inc
pop
sbb
jmp
clc
std
mov
lds
scas
into
push
mov
call
jno
lods
mov
add
mov
inc
mov
and
xchg
add
ret
imul
xchg
sbb
stos
lret
sub
sub
push
sub
sub
pop
outsb
or
jbe
cli
jmp
inc
subl
pop
aaa
scas
enter
jno
inc
dec
sti
arpl
scas
aas
in
dec
popa
or
xchg
jns
and
push
insb
sarb
mov
jnp
jno
popa
adcb
sbb
pushf
rcr
add
pop
mov
sbb
mov
repz
and
fisubrl
lret
sub
mov
loope
mov
xchg
stos
loope
sahf
aas
sarl
loopne
mov
gs
lret
aam
call
pop
xchg
jg
mov
push
add
xchg
cli
adc
mov
nop
cmp
inc
shlb
xor
out
mov
sub
in
xchg
push
into
popa
mov
addl
sbbl
int
sbb
enter
or
push
xor
movsl
imul
jne
shrl
hlt
mov
hlt
popf
pop
or
movsl
xor
ror
sub
pop
aad
xchg
xchg
pop
mov
mull
lret
stos
cmp
insl
call
inc
cmpb
inc
ds
shr
and
mov
xor
cmp
add
pop
call
shrl
inc
daa
leave
mov
sarb
inc
adc
sbb
sbb
stos
das
outsb
mov
js
ret
and
jmp
and
nop
out
add
repnz
xchg
sub
inc
push
pop
loopne
fstpl
ja
lock
adc
mov
hlt
mov
and
mov
dec
popa
cli
cwtl
adc
mov
sbb
ror
inc
icebp
insl
jmp
insl
subl
cmp
lret
sub
pusha
add
test
fwait
lock
xchg
xchg
xor
fnsave
pop
mov
dec
jb
sbb
insb
leave
outsb
inc
insl
nop
sbb
in
sub
packsswb
adc
cmc
cld
imul
mov
ret
xor
jno
lret
push
adc
mov
xor
insl
aam
lahf
and
fs
sub
popa
lods
cltd
jp
mov
push
inc
into
adc
add
sbb
out
lcall
mov
add
pop
push
fdivl
scas
test
mov
mov
out
sbb
movl
push
jp
push
jae
test
sarl
pop
idivb
sub
in
clc
sub
or
das
ror
in
adc
shrl
mov
mov
inc
or
xchg
insb
movhps
in
jmp
fstl
fisubs
jb
and
sub
mov
in
imul
enter
mov
mov
pusha
push
mov
cmp
add
movsb
cmp
jo
lret
jle
inc
or
lods
push
andl
add
pushf
or
scas
jecxz
dec
test
lods
mov
loop
xor
fsubp
add
push
loopne
sbb
lock
aam
je
sarb
xchg
jl
leave
sub
pop
in
mov
sbbb
pop
mov
dec
and
xchg
xchg
adc
cltd
add
add
cld
jo
dec
xchg
dec
push
dec
fmull
xor
jnp
cmp
jl
jne
push
push
pop
add
idivb
xchg
mov
insb
inc
ljmp
in
xchg
xchg
cmp
fisubrl
lock
or
icebp
push
jns
adc
mov
cmp
adc
jg
fldenv
scas
scas
popa
fisubrs
test
fwait
xor
fwait
pop
mov
jb
jnp
pushf
inc
fs
fstl
adc
xor
int
lods
or
jbe
mov
daa
dec
add
aaa
add
mov
ficompl
repz
jb
in
das
jge
inc
dec
jp
loop
in
stc
mov
push
sub
xor
adc
les
ret
lret
loopne
insl
aaa
sub
iret
loope
movaps
cmp
cwtl
movsl
pusha
push
sbb
loop
sti
dec
mov
cs
jp
sub
cmpb
adc
pushf
push
cmp
dec
add
dec
pop
pusha
dec
cmc
or
out
cmp
adc
xchg
xor
fsts
scas
dec
out
xchg
xor
pop
jb
sbb
mov
addr16
repz
ja
cli
xchg
outsl
lds
inc
mov
pop
stc
push
je
scas
cmp
sbb
xchg
inc
mov
mov
mov
inc
fldt
push
push
orb
lock
push
das
cli
cmp
xchg
rcll
ljmp
mov
ret
mov
imul
shll
xchg
scas
pop
loop
lcall
xor
in
faddl
dec
push
imul
jmp
adc
nop
jns
xchg
shll
andl
lock
xchg
es
hlt
xchg
push
jno
aaa
push
ja
push
mov
sub
ja
jne
add
rcll
test
mov
dec
mov
mov
icebp
out
sub
jge
fistpll
pop
push
pop
loopne
lcall
out
or
adcb
fldcw
jle
dec
mov
daa
push
mov
ret
or
inc
pop
stc
push
xor
adc
xchg
movsb
fldenv
jl
and
mov
mov
jmp
push
sbb
in
fnsave
inc
sub
push
ja
add
sub
xor
cmp
push
flds
add
and
or
icebp
mov
pushf
bound
je
leave
mov
lds
pop
imul
inc
in
lock
dec
lret
xor
sub
mov
or
mov
push
mov
sbb
bnd
mov
aas
jge
out
or
lea
dec
push
enter
lods
and
sub
lea
xchg
jae
gs
cltd
out
inc
pop
or
sub
and
mov
pop
push
fnsave
xchg
call
aas
cli
push
and
dec
inc
jnp
fldt
loope
adc
fsubrl
icebp
outsl
dec
sub
mov
sub
lea
outsl
insb
add
jb
test
jge
mov
aaa
or
pop
add
les
insb
mov
adc
jb
inc
mov
hlt
fcmovnu
mov
cmpb
xchg
into
jp
sub
and
repz
jecxz
dec
imul
pop
in
inc
dec
mov
enter
cmp
sub
or
mov
add
jbe
lret
xchg
rcr
nop
rol
aaa
in
add
inc
mov
xchg
push
loop
jne
jnp
sub
push
icebp
popw
mov
jecxz
dec
cmpsb
pop
sti
ss
fistl
xor
jecxz
adc
loop
je
sub
js
hlt
sub
repz
xlat
mov
jbe
inc
lea
jp
jle
sbb
dec
add
mov
icebp
mov
xchg
mov
cmp
cmp
lea
xchg
cltd
pop
inc
jmp
idivb
cmp
push
out
aam
cmpsb
xchg
adcl
lods
clc
repz
cmp
pop
cmp
movsb
out
add
les
push
popa
xchg
arpl
repz
dec
sarb
jbe
and
shl
push
and
cmp
xor
int
mov
ja
testl
rorl
and
inc
sbb
adc
sub
mov
decl
push
ret
push
inc
mov
imul
cli
mov
add
fucom
xlat
adc
es
lcall
jmp
jae
inc
xchg
icebp
mov
mov
xor
fnstenv
in
mov
add
icebp
addr16
cmp
mov
mov
mov
jmp
lret
cmc
push
mov
add
sbb
add
cmp
in
outsl
mul
jno
add
and
mov
pusha
vpor
cmc
dec
xchg
jne
addr16
cmp
push
int3
xor
jnp
mov
push
mov
mov
push
insl
leave
fisubs
call
imul
lods
sub
scas
cmpsb
lcall
aaa
flds
fstpt
insb
ror
inc
xor
rcrl
mov
jb
cs
aas
rclb
fidivrl
dec
ljmp
pop
push
xchg
sbb
jbe
jp
lret
je
test
sub
in
push
xor
mov
shll
je
xchg
daa
mov
fisubrs
mov
repz
rolb
cmpsb
mov
cmpsb
lods
lods
mov
add
ss
jmp
leave
jbe
rcrb
xchg
pop
in
ss
ss
sbb
mov
lahf
and
mov
bnd
ficoms
roll
stos
in
mov
push
cmp
xor
xchg
xor
mov
push
ret
popa
sti
add
add
xchg
insl
xor
push
xchg
hlt
into
cmp
insl
rcll
inc
and
cmp
xor
dec
fwait
movsl
lret
xchg
inc
adc
and
scas
movsl
dec
repz
ja
mov
mov
lahf
icebp
negb
jnp
int3
push
cmp
cmp
xor
sbb
jae
fnsave
push
pop
xor
mov
lods
add
mov
adc
xchg
aas
imul
jmp
mov
js
adc
inc
xchg
jecxz
movsl
addb
xchg
jl
mov
sahf
add
outsb
mov
dec
sub
fsubr
adc
aad
stos
cmp
sarb
xchg
fsts
les
das
xchg
imul
subb
test
test
hlt
movsl
aam
or
mov
push
neg
push
shrb
jbe
or
fmuls
sarl
pop
push
adc
je
adc
ror
push
cmpl
rclb
lcall
or
out
pop
mov
fwait
jp
push
scas
jecxz
inc
cvtpi2ps
mov
out
sti
sub
jecxz
mov
push
lds
mov
cmp
mov
test
int
leave
mov
adc
mov
lret
rorl
adc
sub
xchg
repz
js
and
in
pop
js
adc
divb
mov
xchg
cld
insb
or
jne
enter
or
jnp
inc
mov
sti
push
dec
addb
outsb
xchg
test
daa
orl
inc
adc
ljmp
outsb
pop
scas
xor
mov
xchg
jno
shlb
mov
fmull
cltd
mov
jae
in
mov
sar
test
mov
mov
negb
je
inc
imul
mov
inc
mov
dec
ljmp
lods
jmp
xchg
push
jbe
xchg
adc
rcl
call
push
xchg
ljmp
outsl
pop
lret
bound
dec
inc
xor
adc
popa
js
enter
sub
mov
add
mov
cmp
adc
stos
add
mov
xor
fsts
lods
out
or
bound
inc
flds
cwtl
loop
dec
push
sub
aas
les
mov
sbb
clc
enter
xchg
jae
xor
or
cmp
pop
pop
fisubs
add
divl
jne
ret
jg
pop
ja
add
sub
hlt
and
nop
clc
lods
fucomp
outsb
test
inc
mov
ja
add
xchg
leave
mov
addr16
in
or
inc
push
push
or
xchg
leave
ljmp
mov
dec
push
dec
pop
jmp
add
and
adc
sbb
cli
aad
dec
xor
outsb
repnz
insl
dec
hlt
jnp
inc
or
add
or
fldlg2
outsb
adcl
lret
daa
pop
adc
push
sahf
clc
mov
push
xchg
mov
lods
pop
xor
xor
lahf
ss
out
mov
lret
sti
sub
aam
cltd
pop
jecxz
mul
sbb
leave
add
outsl
mov
ljmp
mov
daa
cli
test
int3
push
jne
aaa
lds
test
loopne
les
mov
add
jns
xchg
outsb
and
pop
mov
rcll
add
inc
mov
xchg
loopne
or
push
ret
ds
mov
lahf
in
push
dec
jge
cmp
mov
and
repz
xchg
out
sbb
lea
dec
jmp
cld
repz
test
ret
jo
fstl
fnstcw
mov
or
mov
cld
add
jl
fdivrl
pop
nop
mov
push
mov
and
arpl
mov
jg
push
mov
test
int
sbb
xor
sub
or
push
idivl
pushf
mov
jo
and
mov
cmp
sti
xchg
fs
jmp
js
push
mov
and
rcl
mov
dec
and
cmp
pusha
ss
push
int
pop
sbb
movsl
mov
dec
hlt
mov
xchg
lods
sbb
fisttps
stos
mov
inc
and
stos
or
lcall
addr16
out
mov
ds
sahf
icebp
or
popf
lea
add
cs
dec
addr16
adc
push
out
jbe
jle,pn
mov
test
inc
fiadds
jl
push
pop
dec
shrb
inc
mov
xchg
jmp
ss
xor
mov
mov
hlt
xchg
dec
fs
xlat
add
push
xchg
outsl
cli
and
iret
mov
in
cmp
xchg
lds
ja
push
xorl
imul
cmp
jno
xor
dec
jmp
scas
into
push
jg
repnz
stos
adc
loope
insb
arpl
sbb
movsb
cmpsb
jge
mov
cs
xor
jno
add
dec
lea
js
into
adc
std
add
inc
popw
lahf
inc
and
repnz
mov
cmp
es
into
dec
cltd
lock
push
jmp
adc
aam
ret
and
bound
mov
cmp
and
in
mov
sub
dec
outsb
test
vmovq
mov
mov
cmc
imul
xchg
cld
cmpsl
cmc
test
outsl
cmp
pop
and
movsb
sbb
xchg
push
push
stos
adc
movsl
mov
scas
jno
mov
push
insb
push
mov
push
popa
cwtl
repz
push
dec
scas
or
xor
inc
cmp
orb
ret
jns
or
mov
sub
into
mov
inc
in
xlat
add
fcompl
popf
adc
push
std
andl
ljmp
mov
ja
adc
ds
jne
sbb
jns
inc
xor
jb
push
rolb
mov
sbb
cmpsl
and
jnp
push
jp
mov
inc
mov
jg
aad
cmc
insl
insb
les
addr16
xor
stc
mov
lret
xor
jno
daa
sbb
mov
orl
jno
movsl
stos
mov
fldcw
xor
fisubl
fdivrs
push
in
call
daa
adc
sarl
lcall
dec
sahf
jl
je
mov
inc
cs
insw
hlt
jmp
mov
jmp
ss
rcll
fs
xchg
xchg
fwait
shll
inc
push
imul
aas
stc
pop
dec
cmp
jne
insb
mov
mov
xlat
les
dec
cmpsb
lret
lahf
mov
pusha
fwait
jne
or
stc
scas
and
adc
pop
push
dec
dec
or
adc
orb
mov
fisttpll
in
or
jmp
mov
mov
data16
add
pop
pushf
sbb
loopne
mov
int3
enter
lds
xor
out
stos
das
leave
lock
jle
pop
push
lret
and
jge
add
subb
in
lods
je
mov
sarb
lcall
fs
jg
stc
and
mov
fistps
div
cmpsl
outsl
fdivl
sbb
cwtl
imull
push
lahf
shlb
in
or
mov
xchg
dec
sub
adc
js
decl
cmp
lock
sbb
cmp
and
orb
push
fbld
ds
mov
je
scas
data16
adc
sub
stos
jl
push
enter
mov
inc
jns
dec
cmp
ret
lret
imul
pop
sbb
lcall
hlt
test
jns
lock
arpl
daa
jmp
mull
inc
insl
pop
shll
insl
mov
cli
test
imul
in
imul
xchg
aaa
aas
stos
fstpl
xchg
shl
jecxz
xchg
mov
mov
popa
xor
aad
sub
pop
xchg
mov
lret
sub
cmp
int
std
sub
fdivrs
aas
je
cmc
pop
xor
mov
push
stos
rorl
or
add
outsb
adc
adcl
pop
insb
and
je
popf
or
into
decb
enter
decl
ja
test
jae
addb
mov
fstp
sti
jnp
bound
sbb
mov
shrb
xor
inc
jmp
loop
push
cmpsb
pop
jbe
cmpl
and
cmc
lret
data16
mov
movsl
sbb
mov
subl
mov
add
sahf
ss
jnp
call
pop
pop
mov
inc
popa
clc
addb
fwait
dec
jecxz
ljmp
cmpsb
nop
jne
and
inc
xor
jb
cmp
and
mov
push
mov
and
jle
rcl
xchg
call
rolb
loop
pop
int3
cmpsb
cmc
test
sti
das
push
pop
test
nop
lods
in
fwait
xchg
dec
fistpll
fidivrl
out
jne
ret
dec
js
add
fwait
in
lcall
xchg
and
dec
inc
xchg
loop
icebp
scas
repnz
out
adc
je,pn
cmp
cmp
pop
cwtl
pop
sub
lods
shll
pop
pushf
iret
mov
pushl
ret
scas
dec
test
imulb
divb
js
enter
fiadds
xchg
push
setl
sti
pop
pop
mov
push
lea
scas
jns
dec
mov
xchg
gs
mul
mov
cmpsb
ret
adc
jl
and
pop
add
pop
xor
lret
int
jecxz
dec
loopne
adc
jmp
stos
addr16
or
or
inc
cmp
aaa
movsl
mov
mov
cmp
sti
or
clc
andb
dec
inc
loopne
dec
lret
mov
lea
pop
inc
xchg
movsb
xchg
inc
das
and
xor
cmp
sub
add
rcll
jns
int
in
repnz
mov
jecxz
scas
sub
or
or
js
icebp
in
xor
cltd
mov
pop
data16
cmp
pop
sbb
mov
or
xchg
mov
ss
sub
cmp
jo
and
idivb
xlat
addr16
or
push
ret
pop
sub
cmp
fstp
push
mov
jae
sahf
inc
and
jbe
dec
addl
popa
iret
sub
mov
mov
into
push
je
into
mov
pop
inc
shrl
leave
hlt
inc
in
jg
gs
pop
mov
inc
inc
insl
into
jbe
and
scas
and
icebp
inc
mov
in
cli
pop
fwait
sbb
push
das
xchg
cld
repz
push
jp
sbb
adc
loop
imul
movsl
imul
jae
es
xor
fldcw
lret
adc
in
add
lea
das
rol
aaa
or
stos
lahf
push
sbb
cmp
xor
sub
push
ja
jns
inc
inc
shr
fdivrs
sbb
pop
mov
dec
push
push
inc
cs
lea
pop
daa
test
sti
jno
insb
cmp
xchg
and
out
out
xor
push
sbbl
mov
out
pop
movl
inc
jne
inc
pusha
cs
in
popw
sbb
fldl
xchg
xchg
in
xchg
push
jnp
push
cmpsb
insb
sbb
cmp
xchg
jmp
mov
jg
cmpl
cmpsl
cmc
jae
pop
add
xchg
dec
cmp
orb
movsb
add
sbb
dec
je
lds
cld
jnp
or
push
fldenv
arpl
and
sub
dec
stc
loope
xlat
in
fimuls
cmp
out
dec
add
jo
xchg
mov
call
mov
fwait
aaa
xchg
sbb
or
pop
pop
out
dec
xor
push
cmp
or
pop
sub
jae
cmp
outsb
jno
xchg
scas
add
pop
lcall
xchg
lret
in
mov
jmp
mov
mov
adc
mov
dec
push
pop
ret
push
in
push
sub
test
jge
fcompl
lret
xchg
imull
test
sub
popf
stc
add
xchg
mov
int
daa
and
fadd
push
jbe
sbb
dec
adc
xchg
std
inc
je
adcb
xchg
lds
add
aaa
and
jbe
int3
sub
cmp
inc
movsl
and
sar
ret
mov
dec
jmp
inc
xchg
xor
in
xchg
outsl
adc
fs
int3
rclb
pop
xchg
es
pop
dec
in
add
lahf
pop
mov
stos
adcb
jl
jmp
xlat
pop
push
int3
mov
sub
jle
out
stos
mov
xor
adc
xchg
out
sbb
addr16
sbb
lret
fwait
mov
call
movsb
sti
daa
xor
into
or
sbb
inc
push
fucomi
pop
mov
sbb
stos
loopne
pusha
dec
sub
xchg
daa
jl
cmp
shlb
sbb
shlb
mov
aaa
push
subl
stos
push
jne
pop
mov
inc
gs
add
cs
xor
mov
repz
repz
xchg
xchg
sub
xchg
cmp
xchg
inc
sub
xor
adc
mov
repnz
cli
push
mov
faddl
adc
in
dec
loopne
jb
out
inc
push
je
or
xchg
stc
push
test
mov
popf
xchg
iret
and
out
rcll
and
aaa
adc
fiaddl
orb
xchg
loopne
aad
into
popa
mov
adc
fdivr
inc
popa
push
jl
mov
jae
xlat
and
das
push
enter
add
addr16
cmp
cmp
mov
adc
scas
sarl
ja
mov
aas
lcallw
jb
sbb
stos
xchg
cmp
mov
add
and
arpl
imul
repz
mov
es
in
roll
stos
push
out
add
shr
fs
pop
cmpsb
push
fs
sbb
fisttpll
jb
jp
add
inc
scas
jl
rcrb
loope
mov
inc
test
cmp
cmp
cld
in
fcoml
pop
pop
rcrb
sbb
inc
xchg
enter
mov
jno
popa
test
mov
xchg
daa
or
repnz
mov
jo
mov
add
loop
dec
frstor
lock
adc
les
sub
cmp
orl
sti
daa
inc
lea
out
or
and
dec
add
inc
testl
mov
jae
inc
sbb
divb
out
imul
xchg
or
sbb
rol
jne
mov
pop
pop
cmpsl
repz
pop
jnp
cmp
xchg
lahf
inc
test
inc
xchg
movsl
testl
add
mov
push
mov
pushf
push
or
xor
into
in
je
add
pop
cmp
push
cld
cs
mov
push
inc
xor
pop
fucom
bound
iret
adc
rorl
popf
lock
cmpsb
xor
dec
es
sub
das
stos
adc
out
xchg
inc
cmc
out
inc
stc
outsb
push
ja
outsb
push
bnd
mov
push
loope
mov
fisttps
jg
hlt
jbe
or
insl
lea
mul
jle
inc
inc
in
fcmove
arpl
sahf
push
add
mov
sbb
mov
lods
lods
dec
mov
aaa
add
push
add
inc
xor
std
idiv
mov
cmp
jmp
lock
cmpsl
cmp
sub
fnstsw
xchg
inc
add
push
leave
icebp
jp
push
push
push
push
loopne
jecxz
test
das
js
mov
stos
inc
je
push
cmp
addl
test
dec
clc
pop
ljmp
int3
and
les
shll
xchg
sarl
pop
pop
add
hlt
sub
test
mov
test
mov
adc
movsl
bound
imul
xchg
mov
outsb
int3
inc
pop
push
xchg
dec
adc
mov
gs
push
sub
mull
mov
pop
clc
mov
cmp
xchg
push
or
jg
push
paddusw
out
imul
push
add
int3
loop
inc
jmp
imul
cmp
adc
fmull
pushf
push
in
rcr
mov
mov
inc
imul
mov
inc
mov
mov
fwait
cltd
cmp
lcall
pusha
xor
fbld
xchg
push
lret
push
xchg
imul
flds
cmpb
push
push
hlt
add
mov
test
enter
jae
daa
mov
push
cmp
scas
mov
cmp
adc
arpl
icebp
xchg
icebp
ret
shll
sub
addr16
sahf
cmp
dec
xor
push
scas
mov
outsb
xor
movsl
loope
push
push
cmp
push
popa
fidivs
pop
xchg
jbe
sbb
fdivl
negl
movl
push
cwtl
jno
ja
orb
imul
add
add
test
test
xchg
adc
aam
adc
mov
xorl
mov
mov
lret
add
test
popf
in
dec
push
fnstsw
mov
jne
rcrb
jmp
je
jnp
pusha
dec
pop
adc
cwtl
ficomps
rcrl
ucomiss
js
sbb
jne
cld
pop
xchg
mulb
lds
cli
loope
repnz
ljmp
pop
mov
sub
aas
xor
int3
leave
fisubrl
aas
js
xchg
dec
push
lds
shll
data16
int
arpl
cmpsb
or
dec
cli
iret
inc
movl
mov
pop
pushf
test
pop
push
cld
movsb
out
fists
lret
sbb
sub
sbb
stos
inc
sub
jne
sti
xchg
jne
lret
push
adc
pop
lds
in
fisubs
fmull
scas
xor
iret
popa
ja
jp
stc
mov
decl
xchg
and
in
fists
dec
mov
pop
movsl
scas
pop
daa
movsl
adc
xchg
mov
test
pop
imulb
add
push
leave
lahf
fldcw
add
fldcw
and
ret
mov
icebp
and
sarl
add
test
mov
rorb
mov
xor
and
pop
cmp
test
mov
or
and
in
pop
or
sbb
inc
sbb
and
loopne
mov
imul
xor
push
stos
mov
hlt
sysenter
shlb
jne
scas
repz
sti
inc
xchg
pop
mov
daa
add
sbb
cmp
pop
sub
pop
fldenv
aad
add
adc
pop
lds
add
adc
and
jbe
arpl
aas
dec
mov
enter
cmpsb
cmc
jg
outsl
mov
pop
or
idivl
pusha
push
cmp
ret
push
or
dec
push
sbb
aad
test
push
outsl
dec
fnstcw
mov
xor
mov
hlt
mov
and
mov
jle
dec
ret
lcall
jl
ss
loop
into
cltd
lods
and
xchg
pop
aam
lods
jae
faddl
lods
mov
cmp
sub
inc
ja
ret
and
ja
push
sbb
cmp
mov
int
jne
push
mov
les
xchg
xor
fmuls
cmp
xor
ret
and
pop
test
std
mov
gs
xchg
jnp
mov
lds
add
pop
js
loope
mov
fisubrl
xchg
das
add
divb
mov
jb
sbb
and
xor
rclb
add
xchg
aas
push
jle
nop
push
dec
fcompl
in
test
mov
ss
xchg
jecxz
test
mov
xor
add
out
adc
sub
push
fidivrs
lret
mov
imul
jb
xlat
iret
cmpsb
lock
fwait
imul
notb
and
dec
jb
imul
std
xor
imul
push
in
addl
test
xchg
das
fs
push
jecxz
jns
add
sbb
inc
dec
jmp
sub
jl
sbb
push
pop
mov
mov
inc
sbb
and
out
lret
outsb
xchg
push
xchg
push
shl
push
and
sti
aam
in
push
cwtl
popa
cmpsb
push
mov
pop
push
xchg
aad
sub
movsl
jle
ret
jge
sub
pop
jnp
aaa
fsubr
das
fldl
and
mov
mov
shll
mov
sahf
jno
jge
xchg
lcall
pop
in
clc
mov
sbb
xor
scas
jmp
shll
sti
push
ret
lcall
enter
dec
xor
scas
dec
cmp
faddl
jg
ret
fisttps
sub
movsl
sahf
mov
dec
test
scas
sti
repz
jne
jae
mov
mov
leave
cld
jg
insl
pop
xor
pop
xchg
jle
test
inc
adc
mov
inc
clc
jge
lahf
test
cli
sub
cwtl
imul
xor
and
mov
cmp
std
fwait
add
add
out
lret
lock
or
or
lcall
xor
mov
jnp
sbb
pushl
sbb
std
cmp
out
mov
lods
cltd
mov
or
dec
pop
es
ss
pop
addr16
dec
inc
repnz
sarl
jle
mov
xchg
xor
addb
lods
push
sbb
inc
stos
das
xchg
push
jge
call
mov
and
dec
fsubrs
loop
je
fcmovbe
inc
pop
notb
cmp
push
leave
dec
mov
cmp
jmp
xchg
imul
ljmp
mov
cmp
sbb
add
loop
dec
and
or
outsl
ret
movsb
out
push
mov
jb
vminss
stc
outsl
aad
pop
icebp
push
fsubrl
jns
inc
mov
cli
inc
mov
aam
into
mov
jo
test
sbb
add
xchg
xchg
bound
xlat
xchg
add
push
jge
std
xchg
mov
mov
and
xchg
mov
imul
popa
push
xchg
push
sarl
ljmp
js
mov
sti
adc
sbb
adc
mov
mov
adc
xor
mov
or
fcoml
push
xor
nop
push
cmpsl
pop
ds
test
mov
sub
popa
sbb
sub
ffree
jae
mov
sub
cmp
cmp
cmp
jge
daa
rclb
mov
mov
popa
pop
pop
lcall
repz
out
push
fwait
test
jp
add
adc
push
push
ja
cltd
cmp
inc
xchg
insb
cmc
cmp
pop
sub
adc
push
add
dec
or
dec
hlt
add
jo
jo
inc
pop
aam
out
pop
loope
call
mov
xor
mov
divb
int
jge
addr16
adc
das
or
mov
push
push
fildll
movsl
dec
cmc
add
inc
shl
or
popf
test
iret
fidivrl
mov
mov
outsl
leave
shrb
dec
int
stos
mov
rcll
sub
mov
push
mov
repnz
adc
inc
ss
xor
and
icebp
mov
sarl
nop
dec
add
scas
int
cmp
inc
flds
mov
or
into
push
jp
mov
xchg
pop
rorl
push
dec
xchg
mov
push
push
dec
mov
fists
push
aaa
mov
mov
xor
mulb
add
pusha
mov
mov
sub
mov
shlb
mov
int3
mov
mov
xchg
dec
shrl
or
and
fstpl
or
pusha
xlat
repnz
out
mov
out
cwtl
adcl
loope
pop
mov
xor
stc
adc
add
push
aas
lods
jns
mov
lret
xchg
je
lods
int3
push
test
inc
mov
pushf
stos
scas
hlt
add
ret
or
jnp
jnp
nop
pop
cmc
adc
lods
inc
dec
xor
mov
xor
and
adc
pop
inc
clc
test
pop
add
and
inc
and
scas
mov
sub
fists
loopne
xchg
fldpi
divl
jecxz
dec
in
hlt
mov
outsb
pop
pop
sbb
pop
popa
ss
sub
and
lods
and
xor
pushf
lods
adc
cli
cs
test
dec
jb
mov
lret
iret
insb
mov
rcrl
loop
push
fsubrs
imull
hlt
inc
fbstp
in
dec
mov
xchg
sub
adc
jle
jl
outsb
push
xchg
mov
loopne
cmp
xchg
inc
or
call
xor
mov
in
iret
fisubrs
out
jno
xor
inc
cmp
fwait
sbb
xchg
test
push
dec
int
xchg
jge
jl
ret
ja
scas
jg
xchg
aam
lods
mov
add
lods
test
push
mov
cld
fsubrl
icebp
sbbl
je
popa
pushw
cli
inc
into
xor
insb
sbb
pop
fisttpl
loopne
and
inc
xchg
add
jmp
cmp
jl
jbe
int
inc
mov
test
or
jge
cmc
jne
daa
inc
pop
xor
fldcw
mov
data16
mov
push
mov
sbb
and
add
pop
cmp
outsb
jae
loop
loop
popa
outsb
decb
cli
sub
pop
and
imul
sbb
lock
les
cmp
lcall
xchg
sbb
dec
dec
dec
jnp
push
mov
jb
ss
repz
rcl
adc
mov
in
repz
or
pop
mov
inc
cli
sbb
out
gs
clc
mov
sub
mov
add
mov
adc
imulb
mov
pop
sbb
lret
xchg
stos
inc
cmp
into
les
mov
mov
test
scas
pop
aam
push
sub
loopne
jg
adc
push
lds
into
xor
cmpsb
mov
in
ja
cltd
cmp
repnz
push
dec
out
jle
mov
aad
adc
adc
into
pop
stos
loopne,pn
std
imul
cmp
sbb
aad
or
int3
nop
sub
xor
push
jmp
mov
mov
mov
lods
dec
gs
push
dec
gs
stc
sbb
jae
lea
mov
dec
mov
pop
inc
fwait
cwtl
int
sbb
cmc
ja
and
sub
sbb
and
push
repz
mov
iret
loopne
mov
int
push
aam
add
dec
dec
mov
lcall
jae
sub
sub
jno
mov
sarl
gs
insl
xchg
aaa
xchg
or
loope
insb
jg
mov
sub
jmp
adc
nop
mov
cmp
xor
jp
jmp
test
adc
or
pop
pop
mov
dec
test
jno
jg
inc
jecxz
lods
lods
shrb
add
test
ljmp
add
aad
clc
aam
cs
repz
mov
mov
jae
rorb
xchg
inc
mov
mov
dec
loopne
push
mov
pop
gs
mov
test
popf
jge
or
movsl
pop
push
cs
push
xor
xor
imul
mov
int3
pusha
and
push
enter
ljmp
adc
scas
sub
pusha
js
pop
std
pop
or
or
mov
sbb
cmpsl
adc
sub
mov
rorb
sub
out
xchg
or
sub
js
xchg
sub
and
fdivrl
xchg
inc
sarb
je
stos
in
aas
or
out
adc
sub
setl
aam
mov
lcall
out
mov
and
cmp
mov
add
xchg
leave
and
rcll
push
adc
loop
sahf
pop
mov
jo
and
ljmp
xchg
test
ret
addr16
add
inc
mov
jle
imull
xorl
mov
loop
inc
inc
sbb
fisttps
mov
and
mov
pop
pop
or
xor
adc
jne
xchg
cltd
push
cltd
jo
jo
ficoms
pop
stos
cmp
nop
test
push
pop
scas
dec
test
push
imul
movsb
fisubrl
push
fmull
mov
xchg
loopne
mov
or
call
xchg
xor
mov
sub
cmc
ret
movsb
pop
rcrl
lods
or
xchg
enter
dec
icebp
lahf
adc
outsl
dec
jl
xor
pop
push
scas
mov
sub
xrelease
push
xlat
sub
imul
call
aad
cmc
std
adc
mov
in
fs
jl
or
ffreep
mov
sub
lret
addr16
xchg
je
lock
xchg
adcl
sti
call
mov
mov
dec
cmp
es
jp
pop
pop
push
pop
mov
xchg
sahf
jbe
imul
sub
mov
sub
pop
hlt
pop
popf
in
es
or
mov
jecxz
cmp
cld
sbb
xchg
lods
push
and
mov
inc
lcall
test
lret
ret
xlat
nop
sahf
test
xchg
out
lods
inc
pop
xor
shlb
jo
fidivl
mov
adc
notl
adc
movsb
jmp
into
pop
cmp
adc
pop
sbb
sbb
xlat
fwait
jno
xchg
cmc
adc
scas
int3
add
mov
mov
in
adc
xchg
inc
push
xchg
jnp
mov
push
pop
iret
xchg
add
aas
addr16
mov
or
dec
lods
fisubrs
int3
divl
inc
loopne
pop
cld
xor
test
jns
iret
movsl
adcl
fldenv
and
xchg
adc
lock
movsl
push
les
cmpsl
cmp
ljmp
sbb
mov
into
inc
orb
mov
imul
popf
pop
scas
jno
jae
sub
enter
push
pop
into
push
adc
in
sti
xchg
rorl
mov
add
mov
pop
loop
pop
jnp
mov
mov
lock
push
jmp
dec
pop
push
stos
pop
icebp
hlt
mulb
lret
push
out
subl
loopne
cli
lods
sbb
pop
sub
subl
test
aam
cs
repz
mov
add
sahf
mov
sbb
mov
lods
xchg
mov
imul
fs
inc
push
jge
jmp
sub
lods
dec
jecxz
repz
and
loop
inc
adc
cli
iret
sbb
xchg
stc
fdivrp
mov
repnz
jbe
mov
ss
sbb
sbb
and
cmp
mov
inc
jae
hlt
rorb
movsb
mov
nop
push
push
cmp
ljmp
pop
mov
sti
shll
mov
cmc
pop
mov
lret
jmp
lahf
cld
addr16
bnd
lods
inc
lcall
fcompl
mov
in
andl
sti
mov
push
xchg
aad
cs
sub
jp
mov
lret
js
aaa
adc
cmp
push
lods
xor
arpl
mov
fisubrs
xorb
sub
inc
lahf
xor
xchg
inc
jae
jl
cmp
scas
in
pop
sub
xchg
scas
sbb
inc
clc
movsl
popa
jecxz
lahf
and
sbb
push
mov
fiadds
sub
jno
mov
sbb
stc
add
ret
movsb
or
inc
daa
js
push
andb
and
push
addb
xchg
add
jne
cmpsb
in
arpl
xlat
push
cli
std
sbbb
adc
and
push
sub
jo
mov
setns
aam
cmp
ja
pushf
xor
sub
jno
jl
repz
mov
test
stc
xchg
dec
jae
or
shrb
add
lea
movsb
jecxz
sbb
mov
dec
fs
inc
push
nop
aaa
pop
aas
or
jp,pt
mov
popa
xlat
mov
sbb
loopne
mov
fcoml
push
and
mov
xor
shrb
add
ljmp
ljmp
cmp
adc
mov
dec
cmp
loope
incl
repnz
or
or
jge
pop
jg
mov
fisttpll
and
sahf
sub
daa
insl
shll
inc
aas
inc
nop
pop
inc
cmp
mov
lea
sahf
mov
mov
adc
add
mov
cwtl
ja
sub
or
imul
das
fiadds
test
mov
sub
or
test
in
add
int
and
inc
fsubl
sti
add
push
jbe
in
adcb
add
mov
xor
mov
jae
notb
ljmp
mov
movsb
mov
lock
pushf
xchg
in
cld
or
das
push
std
dec
ja
mov
inc
hlt
int
in
bound
push
and
fdivs
ret
movsl
adcl
pop
pusha
dec
lret
inc
aaa
into
pop
adc
xor
pop
adc
repz
sub
mov
dec
cmpsb
dec
jmp
adcb
repnz
sbb
test
jae
cmc
fcmovu
test
jnp
mov
mov
cltd
imul
xchg
in
sub
pop
mov
mov
aam
inc
stos
ficoms
sbb
test
stc
mov
ficoms
mov
add
out
ss
xor
pushl
sbb
xor
sub
es
jge
std
sub
ficomps
cmp
cmpsl
in
or
dec
loope
lahf
pop
rol
sarl
icebp
stc
sarb
jle
push
mov
xchg
pushl
pop
rorb
cmp
loop
dec
shlb
push
pop
test
sub
pop
cld
arpl
fisubs
iret
mov
rolb
call
fsubrs
je
in
test
cmpl
movsl
add
adc
pusha
push
adc
xchg
lea
mov
xchg
sub
jmp
mov
in
es
mov
xorb
shl
push
ret
mov
jo
stc
xchg
xchg
and
or
inc
jmp
mov
mov
shl
js
scas
and
add
shr
pop
or
loopne
pop
xchg
mov
mov
sbb
int3
xor
leave
ret
or
repz
push
sbb
jmp
sub
sarb
stc
shrb
and
cmp
fnstsw
repz
sub
push
sub
int
mov
ret
sub
jbe
xor
adc
repz
cmpsl
sarl
test
mov
mov
mov
lret
mov
ret
lock
mov
inc
cmp
sub
fcmovu
test
das
and
inc
jmp
pop
mov
daa
mov
xor
dec
cmc
inc
lcall
mov
push
outsl
xor
mov
sti
lea
shl
adc
jp
mov
lret
loop
aas
and
in
js
xchg
xchg
adc
mov
les
sti
jno
mov
sbb
xchg
and
ja
shl
cltd
jge
js
iret
scas
mov
in
mov
lods
jg
pushf
sub
inc
adc
or
ss
adc
adc
xorb
push
stos
shrl
repz
out
pop
clc
out
pop
cmpsb
cmpsb
sbb
jp
mov
add
or
test
ljmp
in
or
inc
jg
inc
ficoms
call
in
xchg
sti
push
xchg
sub
pop
negb
adc
inc
lahf
lds
imulb
orl
repz
stc
sbb
add
imul
xor
mov
or
inc
rcrl
out
inc
in
lods
bound
into
insl
mov
or
xchg
add
mov
push
lods
xchg
cld
in
add
add
xchg
mov
sub
fdivrl
mov
inc
cmp
bound
and
andl
and
imul
stc
jae
bnd
loopne
sub
push
adc
outsb
fistpll
add
mov
or
push
fistl
and
insb
add
xchg
lea
jmp
fisttps
add
mov
and
les
xchg
testb
movsl
cmp
scas
xchg
cwtl
sbb
addr16
aam
mov
into
in
dec
and
ret
arpl
movsl
pop
lods
and
movsb
jo
shrl
cmp
mov
mov
jns
scas
xchg
jge
or
dec
cs
add
push
mov
sub
fnsave
inc
sbb
and
or
aas
out
pop
dec
push
push
jmp
faddl
add
xor
das
sbb
mov
add
addr16
mov
inc
xor
repnz
pusha
mov
lock
fsubrl
mov
sub
in
repnz
test
outsb
imul
xchg
mov
xlat
aam
daa
or
mov
adc
jp
out
mov
pop
out
push
sbb
xor
ja
pop
jl
mov
xchg
stc
bnd
sarb
xor
adc
inc
and
cmp
sbb
fisubrs
mov
dec
xchg
mov
cli
ljmp
repnz
lock
push
rcr
pop
mov
in
imul
or
mov
sbb
bound
push
add
shll
cmp
or
jmp
cmp
inc
push
mov
sub
in
and
dec
mov
fwait
mov
mov
lret
clc
mov
mov
adc
adc
dec
call
jae
mov
aad
loop
jo
push
setb
push
in
clc
shll
xchg
xor
dec
jae
fdivrl
loope
xor
out
aas
inc
cli
push
mov
dec
pushl
xor
movsl
in
jb
or
or
pop
xchg
in
dec
call
lds
inc
repnz
push
aas
and
or
loop
pop
add
cmp
aaa
cs
stc
add
aaa
adc
sbb
jns
sbb
or
add
add
inc
jmp
mov
test
pop
cmpsl
dec
pop
mov
mov
sti
aam
pushf
in
push
and
aas
pop
dec
mov
les
or
adc
hlt
inc
mov
cmp
xor
adc
sbb
xor
mov
fsubp
jmp
stos
and
sbb
mov
lret
or
jl
mov
scas
push
cs
cmpsl
outsb
inc
jge
rep
sbb
sbb
test
lds
mov
das
push
jp
sbb
xorl
rcll
or
inc
ljmp
mov
js
orb
cmp
lds
packsswb
dec
dec
or
idivb
jecxz
push
push
pop
cmc
jno
push
cwtl
aas
and
wbinvd
push
nop
mov
cs
sub
or
lret
push
dec
jne
mov
pop
or
and
imul
adc
xor
pop
xchg
pop
push
mov
and
sti
push
out
mov
jae
xchg
cmp
jnp
lea
mov
test
rorb
test
xchg
fs
sub
mull
mov
addl
or
es
in
pushf
sahf
negl
out
imul
test
or
mov
sub
fucomi
xchg
add
mov
ss
push
repnz
mov
push
add
jecxz
xor
in
mov
aas
cltd
fistl
outsb
ret
mov
cmc
lahf
out
outsl
push
sub
mov
fistpll
sub
or
insb
jbe
lret
gs
adc
pop
call
sub
push
fsubs
or
lcall
dec
jb
mov
test
dec
fwait
outsl
jno
imul
pop
inc
pop
pop
pop
fdivl
inc
cmpsl
sahf
in
sub
xchg
pop
mov
js
pop
in
add
sti
sbb
push
loop
into
bound
cmpsl
sub
push
lods
sbb
movsl
andb
gs
icebp
out
and
jb
in
lods
or
dec
js
sub
jb
xor
lcall
jne
je
add
mov
out
call
aas
out
sbb
push
cmp
push
repz
aaa
add
add
xor
jb
add
mov
int3
insb
and
xchg
inc
fstps
xor
inc
jge
inc
sub
aad
sbb
cmp
mov
fistl
add
inc
pop
repnz
pop
jp
adc
leave
cmp
mov
scas
in
andl
sub
into
push
push
xor
pushf
or
fisttpll
pop
test
xchg
or
lods
arpl
lock
in
scas
cmpsl
lret
fld
into
adc
shlb
push
cmp
cli
jne
add
jns
decl
inc
inc
in
cmp
add
mov
bound
ds
cmp
in
fwait
call
jle
push
mov
dec
insl
fnstsw
popa
cmp
cmp
in
push
sbb
xchg
inc
inc
imul
test
pop
jle
cmp
aad
shlb
popa
push
and
scas
jmp
stc
mov
mov
xor
ljmp
movsl
test
mov
imul
mov
and
inc
cmp
mov
cmp
sub
shlb
incl
imul
fdivl
xor
testl
lods
repz
into
lahf
es
js
sbb
push
cmp
mov
gs
sbb
lahf
shll
jbe
mov
movsb
sub
das
scas
jae
into
adc
xchg
test
jmp
lds
mov
shll
sbb
sbb
scas
ds
mov
adc
dec
xchg
js
mov
jge
pusha
xor
js
pusha
cli
fdivs
enter
jmp
leave
testb
mov
pop
mov
lret
popf
sub
inc
mov
xchg
and
jo
stos
les
fs
sahf
or
mov
jle
xchg
int3
xor
sbb
push
lods
sar
dec
pushf
jecxz
jp
stos
dec
lods
pop
add
fisubs
imul
cmp
lret
fidivs
ja
imul
lret
sbb
notb
dec
cwtl
fiaddl
mov
mov
adc
cvtps2pd
push
mov
outsb
repnz
test
fidivl
shlb
sti
ja
fistpll
jmp
jl
popa
insl
aad
aaa
inc
xlat
jnp
xlat
mov
jge
mov
mov
and
stos
pop
imul
scas
ficomps
das
fwait
push
arpl
or
inc
or
lock
push
in
and
pop
cmp
dec
lcall
neg
lods
cmpsl
addr16
lret
lods
adc
data16
cmpl
xor
mull
std
dec
lods
pop
outsl
div
dec
inc
cld
push
add
add
and
popf
hlt
inc
mov
mov
mov
jne
or
and
push
movsb
xchg
mov
xorl
mov
ret
or
jp
adcl
insl
xlat
out
mov
add
cmp
arpl
cmpsl
mov
jg
lss
loop
inc
shrb
iret
ja
sub
int
mov
mov
fistpll
jge
stos
gs
repz
xlat
or
int3
fimull
insl
xor
xor
push
arpl
pop
sti
and
test
push
int
or
sub
data16
addr16
mov
paddusw
pop
and
fldenv
lods
push
pop
pop
les
pushf
inc
jmp
es
cwtl
lock
imull
mov
aas
in
andb
or
js
insl
hlt
xor
mov
sub
jmp
pop
add
clc
mov
jae
sbb
jmp
jnp
das
adc
test
cwtl
frstor
push
adc
pop
push
outsl
pop
les
add
pop
or
mov
push
std
inc
adc
add
movsl
adc
sub
mov
and
pop
cli
pop
ss
push
xor
push
lock
or
xor
push
jo
insb
sti
les
jae
insb
repnz
push
or
nop
sbb
dec
push
stos
rol
addr16
mov
mov
shrl
mov
loop
sub
shr
loop
jmp
popa
aam
mov
popa
adc
out
pusha
add
jb
and
dec
mov
addr16
popa
loope
out
and
inc
pop
shufps
xchg
add
mov
push
push
pop
adc
inc
pop
jge
pushl
cmpsl
mov
and
xor
and
or
fcmovnbe
pop
jg
cwtl
xchg
push
or
xor
mov
test
jb
test
stos
lahf
cmp
xchg
jle
or
xchg
leave
stos
pop
loopne
mov
repnz
mov
mov
cmp
push
jle
outsb
test
pop
pop
inc
xchg
xchg
insl
fisubrl
call
mov
sahf
loop
adc
cmp
xor
add
mov
mov
inc
cltd
mov
popf
adc
push
lahf
imul
and
pop
stc
sbb
mov
mov
shll
pop
shll
dec
mov
and
loop
or
imul
xchg
ss
insl
insb
int3
add
iret
mov
pushf
sbb
pop
push
inc
mov
or
nop
subl
pop
pop
in
jg
les
push
mov
dec
cwtl
movsl
sub
repz
lret
push
andb
push
pop
insb
das
push
cmp
adc
gs
or
xchg
clc
and
fcom
jo
xchg
cli
scas
xor
daa
and
cmovnp
clc
in
and
jae
mov
stos
daa
roll
or
xchg
clc
xchg
mov
cmp
jecxz
rol
jecxz
cmc
ficoml
icebp
cmpsl
es
push
push
sbb
sti
cltd
popl
fnstcw
jecxz
sbb
and
add
xor
inc
pushf
jb
cmp
int3
lea
in
in
pop
imul
or
andb
in
imul
std
out
in
sbb
sub
cmp
mov
mov
mov
jae
pop
push
imul
pop
push
jbe
mov
mov
xchg
dec
iret
aas
push
add
jp
and
jae
mov
or
adc
and
sub
dec
jae,pn
insb
mov
jno
jmp
mov
cmpsb
xchg
loope
sbb
jb
lock
dec
dec
mov
pop
mov
xchg
out
std
adc
stos
js
cwtl
jecxz
bound
stos
mov
push
test
pop
aas
push
mov
out
mov
xlat
sarl
repz
mov
movsl
mov
push
daa
xchg
xor
mov
jbe
cmp
mov
pop
jns
fcmovne
xor
sahf
lret
fs
inc
std
push
dec
jg
xor
aas
dec
sbb
adc
pop
mov
call
arpl
xchg
loope
int
stc
daa
or
jb
mov
xor
or
xchg
and
test
das
jecxz
movsb
popl
inc
xchg
in
push
mov
pop
jmp
or
outsl
mov
push
adc
lock
xchg
call
ljmp
arpl
sbb
outsl
insb
push
cmpsl
pop
dec
xchg
aad
ds
jnp
cmp
call
aad
and
or
lea
leave
mov
jp
nop
add
pop
mov
add
mov
ja
adcb
out
imul
jno
mov
mov
insl
outsl
and
lock
stos
popf
fxch
sbb
arpl
inc
jno
psubw
mov
movsl
les
cli
add
xchg
xor
repz
push
not
mov
test
imul
stos
test
mov
mov
mov
pop
adc
mov
test
mov
adc
push
xchg
cmp
cwtl
dec
push
xchg
jp
bound
inc
decb
test
xorl
push
or
xchg
push
push
mov
sub
jmp
add
sbb
sbb
sahf
cli
push
psubb
dec
lock
mov
flds
mov
push
jbe
adcb
or
mov
addl
pop
xor
scas
add
mov
movsb
add
adc
subl
or
jne
retw
and
outsb
mov
rorb
ret
pop
push
test
sbb
adc
lahf
cld
xchg
adc
and
enter
mov
xchg
pop
cltd
fwait
mov
shlb
sqrtps
push
lret
sbb
mov
xor
xor
jg
out
fidivs
imul
movsb
dec
in
xchg
xchg
jl
and
jl
out
or
and
dec
mov
les
pop
lock
inc
fucomi
out
jecxz
leave
leave
sbb
sub
out
fdivrl
dec
stos
popa
xchg
push
add
push
in
dec
mov
or
sub
leave
mov
jmp
sbb
sbb
movsb
jno
push
dec
push
or
jne
ds
insl
test
iret
and
iret
out
pop
dec
push
or
lds
js
lods
sbb
jb
call
mov
rcrb
fsubrl
jp
addb
inc
nop
mov
and
and
lods
or
jae
adc
shrl
cs
xchg
stc
xor
add
inc
dec
xchg
lds
cli
mov
lds
xor
adc
push
pop
pop
xchg
push
push
adc
out
pop
mov
shll
cmp
ret
jnp
push
enter
clc
push
fucomi
cmp
sbb
jbe
cmp
xor
jp
and
out
shrl
push
mov
jle
cmp
xor
mov
inc
inc
add
imul
xchg
and
adc
pop
imul
inc
pop
dec
sahf
fwait
shlb
inc
or
clc
jmp
mov
fdivr
cmp
mov
jl
dec
mov
sahf
clc
mov
idivb
sti
aam
icebp
movsl
leave
into
adc
in
jmp
xchg
aam
enter
sub
std
and
decl
jo
addr16
mov
pmaxub
mov
push
mov
stc
lcall
loop
cwtl
iret
lahf
into
in
jmp
xchg
fdivp
mov
dec
lret
cltd
mov
cmc
mov
fidivs
jg
dec
iret
pop
xchg
xchg
and
hlt
xchg
xchg
fidivs
cli
dec
inc
sahf
int3
xchg
or
loope
hlt
lret
js
jg
xor
je
mov
lea
or
jle
push
sarl
adc
pop
hlt
or
loopne
int
adc
and
aaa
loope
out
cmp
push
pop
xor
inc
enter
aad
pop
add
sbb
daa
shr
jnp
dec
lcall
mov
mov
cli
and
mov
jp
out
push
add
into
mov
shll
pop
loope
push
add
pop
test
pusha
lods
jmp
dec
push
sbb
ror
add
test
int3
aas
mov
jmp
fwait
outsb
ror
cmc
xor
cmp
push
cs
rorl
jnp
cmp
push
pop
add
or
fbstp
cltd
jae
cmpsl
lock
testb
jb
jns
test
or
hlt
rcr
mov
outsb
dec
mov
mov
iret
jmp
jns
testl
les
data16
jmp
dec
fcoml
sbb
and
aas
xor
dec
mov
rcrb
xor
loop
or
notb
jne
bound
negl
lods
scas
movlhps
ss
or
sahf
sub
repz
cmp
sub
sbb
mov
cmp
shlb
jnp
aas
imulb
iret
push
mov
nop
push
bound
jb
gs
sbb
sbb
repz
fsubl
fsubp
adc
pop
les
mov
fisttpll
imul
adc
xor
and
push
pop
xchg
dec
cmp
sbb
cmp
std
shl
clc
cli
sub
lods
sub
push
lahf
sbb
icebp
sti
jnp
lock
pop
loopne
fs
or
adc
sub
pop
and
inc
enter
mov
xchg
cli
stos
int
mov
xor
push
out
push
cmpsb
dec
mov
clc
ficoml
push
mov
fisubrs
pop
mov
fs
adc
add
sti
jnp
rcrb
js
add
xor
shl
mov
cmp
pop
ret
fnstsw
jmp
and
imul
inc
mov
or
or
jle
xchg
repz
pop
and
rcrb
ret
int
pop
out
push
xor
out
std
movsl
mov
mov
stos
push
testl
rclb
jo
das
sbb
repz
in
jno
jp
dec
sti
repz
mov
popf
enter
xchg
lret
sub
pop
push
push
add
inc
mov
imul
lret
jg
test
and
scas
insl
push
je
stos
cmp
aad
xor
pop
xchg
jae
dec
pop
stos
add
mov
add
popf
into
mov
popa
outsl
aad
rolb
mov
enter
lds
inc
push
andl
inc
mov
loope
xchg
in
lcall
in
in
cmpsl
aad
clc
out
lock
add
leave
inc
mov
rol
fmul
adc
hlt
fcoml
rcrb
xlat
rcl
mov
pop
fs
pop
mov
ds
sbb
arpl
test
xchg
daa
iret
sbb
cmpb
jns
sub
icebp
test
imul
sbb
push
outsl
push
mov
insl
fdiv
push
pop
nop
and
mov
mov
sbb
loop
sbb
sub
das
xchg
int
cmpsb
std
mov
in
cmpsl
outsl
sbb
dec
insl
fcomp
cmp
icebp
dec
cmc
daa
cmpsl
jb
insl
inc
insl
dec
in
mov
cmpsl
dec
adc
cld
xchg
xchg
adc
insb
insl
xchg
mov
lahf
leave
add
jg
sub
jle
push
rclb
popf
sub
inc
jne,pt
shll
push
in
ret
test
pop
xchg
and
imul
ja
cmp
int3
mov
stc
shlb
out
in
push
mov
subl
pop
scas
inc
lods
mull
cmc
push
jle
enter
lcall
sbb
cmp
test
das
sub
and
jno
pop
ret
dec
cmp
cmc
popa
adc
jb
cmp
stos
inc
pop
cli
cmpb
stos
sahf
test
fdivr
test
popa
sbb
mov
xchg
mov
int
std
mov
popf
mov
dec
cmc
enter
sti
xlat
iretw
sbb
jb
mov
stos
adc
and
add
sub
xchg
mov
ret
fcomps
aaa
mov
sub
icebp
jecxz
cmp
int
push
cmp
arpl
push
add
ret
add
nop
jae
cltd
sub
pop
mov
scas
outsl
adc
lock
add
jb
jo
test
sub
stc
and
insl
add
push
mov
adc
test
lret
outsb
aaa
jne
xor
xor
mov
cmp
loope
sti
sbb
jne
js
jnp
push
iret
int
movzbl
adcb
in
push
adc
mov
cmp
hlt
rcll
int
out
dec
sbbb
sub
mov
dec
dec
inc
roll
pushf
mov
test
jge
aas
push
mov
es
cmc
xlat
mov
adc
xor
and
call
vpshlq
movsl
sbb
shrb
movsl
outsl
popf
xchg
icebp
xor
addr16
out
scas
fcomps
dec
shll
lahf
mov
ret
mov
insb
and
dec
pop
out
imul
pop
fwait
xor
out
test
stos
fisttpll
jmp
call
xlat
aaa
jne
loope
das
jo
push
adc
movups
or
lret
mov
sub
outsl
es
mov
adc
cmp
and
jge
stc
inc
inc
int
sub
out
repz
adc
jl
xor
and
mov
stos
fnclex
andps
ljmp
lret
push
repz
xchg
or
cmp
fisttpl
xchg
jno
out
fwait
or
mov
in
into
and
in
pop
in
xchg
stos
das
xchg
jge
popf
aaa
xor
lret
test
inc
adc
iret
pop
ficoml
xchg
test
sbb
sti
pushf
push
mov
push
xor
cmp
pop
into
cmp
in
push
out
pmaxsw
stos
lcall
cli
sub
loope
and
test
mov
popa
std
mov
and
dec
pushf
popa
fdivl
addl
mov
sub
lods
mov
cmp
add
sbb
or
sbb
mov
xchg
inc
std
push
mov
sbb
adc
cld
jp
mov
cs
push
and
pop
nop
into
jmp
ret
cmp
cmp
addb
loop
clc
fistps
shrl
fdivl
cmc
add
push
add
subps
pop
in
cmp
pop
mov
cmp
movl
push
lock
test
orl
xor
xchg
pop
cli
lea
outsb
sbb
cmp
cmp
xor
notb
pusha
lods
das
mov
push
inc
xor
ds
fiaddl
stos
sbb
sub
pushf
test
mov
push
xor
popa
enter
stc
inc
push
mov
shll
ret
fmull
mov
cltd
mov
jnp
or
fnstsw
sub
ja
mov
dec
and
sbb
out
xor
mov
xchg
mov
rcrl
mov
or
xor
ljmp
mov
rcll
xchg
or
xchg
sbb
dec
sub
add
data16
shll
and
fadds
xor
outsl
mov
iret
outsl
lock
jb
pop
add
outsl
push
xchg
xchg
pop
jecxz
sbb
pop
and
xchg
adc
andb
test
addr16
push
ja
sbb
data16
cltd
xor
inc
push
xor
dec
or
loop
cmc
in
xchg
cmpsl
jne
xor
in
dec
xorb
nop
or
scas
or
mov
jle
inc
mov
mov
divb
dec
imul
loopne
lahf
lods
lods
push
jge
or
inc
jg
mov
jmp
and
idivl
leave
out
xchg
aad
add
loope
dec
inc
pop
iret
pop
les
xchg
xor
mov
and
pop
cmc
outsl
outsl
xor
xchg
sub
push
cltd
mov
movsb
imul
cmp
mov
out
mov
jg
dec
dec
xor
jmp
pop
and
ja
push
mov
cld
jg
sbb
pop
inc
fs
mov
jbe
orl
dec
mov
es
jg
fwait
sbb
and
clc
jle
sbbb
loopne
mov
imul
push
test
scas
jge
mov
rorb
dec
pop
cmc
int3
and
test
sub
scas
pop
lds
cwtl
dec
mov
add
jb
inc
sbb
test
icebp
push
movsb
add
scas
test
push
pop
xchg
push
mov
les
aas
push
sarl
leave
not
push
or
cmp
inc
mov
shll
push
loop
lret
jno
or
xor
mov
aam
add
xchg
push
push
cli
mov
std
cltd
faddp
stos
push
mov
xchg
and
xlat
and
les
mov
cmp
sti
mov
sbb
jecxz
mov
jnp
mov
out
add
inc
pop
ret
sbb
xor
sarb
push
lret
pop
notl
ficoml
ret
jg
loopne
lret
cmp
movsl
in
dec
mov
push
inc
movsl
or
pop
test
addr16
test
std
add
and
or
adc
sarl
xchg
sti
dec
adc
inc
aaa
push
insl
and
mov
jbe
inc
cs
xchg
add
cmp
ss
scas
adc
outsb
lahf
jp
sahf
addr16
sti
fcmovnbe
mov
pop
add
xchg
inc
mov
pop
mov
jne
clc
mov
divl
jmp
pop
adc
in
pop
pop
loopne
and
pop
adc
adc
jmp
ja
movsl
mov
dec
inc
mov
push
jo
adc
aad
div
push
fcoms
decb
xchg
jl
pop
data16
stc
xchg
cmp
add
and
loopne
mov
call
inc
fimull
test
adc
add
pushf
cmpsl
jne
ret
jns
pop
decl
inc
ss
jge
pop
dec
testb
test
lahf
or
cli
scas
sub
inc
mov
insl
js
out
lods
inc
repnz
rorb
frstor
inc
or
xchg
lock
lods
lock
pop
adc
ret
lcall
sbb
inc
sub
cli
jg
test
andb
push
insl
add
mov
adc
lods
popf
pop
jg
fcmovnb
adc
mov
int
pop
sbb
dec
or
adc
loopne
into
and
or
je
dec
sbb
sarl
add
jle
enter
pop
stos
in
mov
mov
fidivs
adc
jb
push
sub
mov
mov
jb
xorb
dec
pop
sbb
lahf
jnp
and
mov
cwtl
pushf
out
adc
mov
or
lock
inc
imul
in
push
lods
out
es
cmpsb
mov
push
daa
and
scas
enter
std
ja
mov
jg
mov
insl
or
xchg
sub
cmp
je
xor
add
jp
sbb
add
arpl
xor
lea
dec
dec
lea
or
jae
xchg
imul
iret
add
test
clc
stos
test
mov
add
push
lods
inc
js
cs
dec
in
xor
sbb
loopne
mov
out
jnp
clc
inc
ljmp
rolb
subl
or
rcl
inc
inc
jle
or
rcrl
fdivrs
and
jae
pop
in
daa
inc
mov
jg
addl
dec
mov
in
xchg
xlat
js
dec
fs
cmp
inc
cltd
sub
xchg
repz
stos
pop
subb
js
flds
cmp
xchg
adc
pushf
add
jnp
frndint
enter
loopne
mov
nop
movsb
sub
jl
or
add
push
nop
shlb
add
aaa
lock
stc
ja
fistpl
and
inc
sbb
addb
aad
insb
xor
mov
test
icebp
mov
xor
lea
cld
mov
mov
mov
jp
mov
push
sub
loopne
jno
adc
xchg
mov
into
or
loope
add
jecxz
scas
test
push
add
pop
gs
stos
aam
jecxz
imul
ljmp
dec
outsb
rcll
loope
sbb
pusha
lods
scas
pop
inc
jmp
mov
insl
push
inc
dec
jns
clc
pushf
mov
fdivrs
sub
out
adc
stos
sub
jne
faddp
jge
push
xor
cmp
lret
mov
repz
orl
inc
cli
mov
dec
mov
mov
lcall
inc
mov
and
int
xor
es
js
push
push
jne
or
imul
xorl
jbe
xor
loopne
mov
std
xor
mov
js
mov
mov
fidivrs
lods
addb
dec
push
jle
loop
adc
mov
cmp
push
mov
std
test
orps
imul
aas
imul
add
aas
push
rorl
sbb
adc
pusha
xor
into
in
and
rcrl
ret
mov
sbb
jp
mov
fisttpl
scas
rcl
push
les
ss
dec
mov
cwtl
mov
mov
nop
pavgw
dec
sti
lret
pop
dec
stos
sbb
mov
and
add
cltd
out
adc
fsubrs
addl
jne
or
loope
adc
test
or
inc
xor
add
cmp
fwait
mov
stc
pop
push
jbe
imul
mov
jne
and
sbb
and
inc
inc
adc
add
cld
xor
insb
mov
mov
enter
iret
jmp
mov
or
pop
cld
mov
js
or
aas
movsbl
push
das
mov
adc
push
in
sub
and
jne
push
sbb
cli
lods
mov
cmp
xchg
xchg
outsl
jl
jns
or
or
test
mov
fwait
in
xchg
ret
in
dec
icebp
cli
bound
sbb
je
sub
mov
push
xchg
stos
cmp
pop
adc
ss
es
pushf
cmp
scas
into
outsb
and
mov
jae
xor
cmpsl
push
aad
std
ret
or
shr
push
xor
bound
subl
xor
mov
push
jnp
mov
lea
inc
jbe
aaa
jae
insl
lret
gs
aad
sub
stos
imul
adc
or
shlb
or
ss
mov
lcall
scas
in
cmc
add
das
je
cmpsb
mov
cmpl
add
out
jp
cwtl
js
sub
mov
jmp
xchg
inc
cmp
in
push
dec
mov
or
mov
mov
mov
loopne
xchg
pop
int3
push
in
pop
xchg
mov
cmpsb
adc
ficompl
jp
or
icebp
lret
pop
dec
fwait
add
insl
inc
jl
sbbb
insb
fidivs
xchg
mov
adc
pop
loope
add
jmp
sahf
outsl
xchg
xor
push
mov
sub
je
pop
movsl
adc
insb
icebp
lret
nop
jnp
mov
arpl
sbb
dec
jbe
outsl
daa
inc
dec
fadds
inc
mov
fimuls
into
pop
stos
stos
mov
dec
call
fbld
addr16
or
popa
ror
jo
insb
jae
rcl
jge
pop
or
aam
divb
std
push
int3
pushf
cmpsb
xor
ljmp
mov
loop
mov
pop
and
hlt
cmp
aas
inc
or
and
ljmp
sbb
inc
mov
test
or
cmpsb
and
dec
ljmp
cmp
pop
inc
stc
jl
pop
loopne
data16
test
fwait
gs
ret
cmp
dec
and
xchg
repz
sbb
insb
inc
or
sub
xchg
mov
movsl
mov
xchg
sbb
fucom
adc
sbb
pusha
test
mov
or
sub
mov
push
and
mov
sbb
popa
aas
and
adc
adc
lods
shlb
mov
push
ljmp
test
daa
mov
jno
mov
pusha
xlat
push
jno
pop
jecxz
lds
push
jl
mov
mov
xor
add
shlb
les
add
jge
outsl
cmc
cmp
lods
cwtl
cmpsl
lret
fbld
sub
mov
xchg
and
movsl
dec
mov
adc
dec
stc
in
inc
sub
xor
lods
sub
push
push
pop
xor
inc
push
test
xchg
pop
insb
leave
lahf
mov
pop
enter
dec
shrb
push
add
adc
push
mov
mov
or
and
sbb
push
dec
jne
aaa
in
jnp
sbb
sub
lahf
push
loope
jbe
cmp
movsl
fisubl
in
mov
lods
push
js
mov
cmp
push
and
inc
pop
add
popa
push
jp
sbb
loopne
pmaddwd
stc
pusha
ljmp
xchg
fwait
lret
test
in
add
int3
out
rcl
clc
jno
nop
mov
jmp
xchg
mov
xlat
sbb
xchg
sbb
xor
and
jo
cmp
push
xchg
imul
mov
push
pop
iret
xchg
mov
popa
jns
jb
int3
or
cmpsb
and
in
gs
or
dec
ja
pushf
mov
or
sub
lret
add
sbb
cli
test
fistpl
mov
icebp
lret
mov
rclb
xchg
leave
cmpsb
pop
inc
fucomi
dec
out
enter
mov
pushf
push
jmp
ret
shlb
cmp
ja
jl
xlat
gs
cmp
test
ss
call
fsubs
mov
sti
lcall
xor
lea
cmp
xchg
popf
push
aas
xor
inc
rcrb
clc
sbb
jmp
mov
xor
xchg
dec
arpl
jle
nop
imulb
adc
push
jo
jo
adc
js
imul
xchg
xchg
xchg
rcrl
aad
std
mov
jbe
jecxz
add
xchg
scas
addr16
push
or
orl
loopne
fs
shrl
push
rcll
call
dec
rcl
push
pop
push
sti
out
mov
jge
push
mov
adc
mov
fbstp
ret
repz
repnz
js
and
sbbl
sti
rolb
dec
fiadds
xchg
lret
cli
mov
jbe
stos
mov
sbb
cmp
xchg
xchg
push
add
stc
sub
loope
cwtl
xor
dec
movsb
and
hlt
cmp
xchg
pop
incl
lock
addl
scas
popf
out
fidivrs
push
cli
neg
push
fimuls
adc
push
cmp
sar
dec
inc
and
lds
shlb
push
mov
test
lock
adc
in
dec
cmpsb
pushl
fadds
push
ljmp
adc
xchg
sub
sbb
rcl
call
pop
insl
mov
addr16
mov
aam
mov
cmp
insl
pop
cmp
inc
popa
sub
loopne
bound
sub
jae
sub
xor
imul
jne
pusha
cld
mov
xor
aaa
mov
imul
mov
outsl
or
mov
fbstp
icebp
pop
inc
and
lret
popf
adc
add
inc
or
dec
cld
test
push
dec
cmp
popf
in
movsb
sti
mov
iret
sbb
ss
mov
scas
sub
andl
js
hlt
dec
dec
mov
cmp
scas
in
jg
cmp
mov
les
push
stos
lcall
lock
outsb
lods
imul
test
int
je
popf
js
jb
sbbl
sbb
jmp
adc
dec
xlat
push
sub
sub
dec
inc
mov
divb
mov
lods
out
add
aam
or
js
mov
jge
sub
inc
inc
pop
mov
and
pop
not
fcmovne
into
sbb
mov
addr16
test
cli
leave
cmp
std
loopne
xchg
dec
std
fmuls
roll
ja
cmp
div
dec
push
repnz
mov
repz
aaa
loope
es
notl
cmp
mov
cmp
mov
scas
lcall
sti
xor
pop
sub
inc
push
outsl
adc
mov
mov
or
sub
aas
and
or
ljmp
shlb
movsl
jecxz
sub
rclb
test
jns
pop
xor
inc
call
loope
stos
xor
out
xor
push
imul
mov
icebp
arpl
bound
push
cmpsb
pop
mov
push
ss
int
jae
pop
mov
repz
adcl
inc
repz
jge
push
push
setg
sti
jbe
mov
cmp
jp
adc
test
sub
lret
jmp
inc
push
fwait
inc
sub
xchg
jae
dec
inc
addr16
scas
dec
pop
fists
jnp
mov
lcall
cmpsb
pmulhuw
xor
sbb
repnz
scas
xchg
shll
adc
or
ret
scas
outsl
sub
fstps
inc
js
out
mov
push
push
and
test
sbb
test
aas
push
shl
xchg
aam
mov
push
int3
rcr
adc
es
xor
cmc
mov
nop
jmp
mov
stos
outsl
push
iret
je
push
add
std
in
insb
mov
mov
pop
jmp
cmp
mov
inc
mov
jo
jo
and
pop
xchg
or
xchg
je
shll
adc
mov
or
lods
popa
add
lock
cmpl
pop
pop
sub
divl
push
cmp
dec
lcall
or
adc
repz
jo
loop
stc
roll
hlt
enter
std
mov
add
lahf
rcrb
add
mov
cmc
sub
in
pop
or
movsl
pop
jns
push
or
frstor
and
inc
xor
rolb
jl
imul
das
jnp
sarl
clc
outsb
push
outsb
sbb
mov
pop
insb
hlt
cld
pop
mov
in
cmpb
in
imul
fwait
shll
repz
mov
movsb
ss
test
add
mul
adc
dec
xor
xchg
fmul
mov
xor
repnz
inc
xchg
jl
and
pop
push
or
cs
mov
std
or
inc
imul
shll
insb
mov
in
pop
inc
or
inc
sbb
dec
pop
daa
sarl
dec
pushf
push
fs
dec
mov
pop
pop
mov
stos
dec
rcll
out
jno
int3
test
sbb
mov
loope
inc
out
push
xor
mov
xor
je
fs
sub
fcmovne
adc
mov
cs
push
mov
mov
mov
pop
and
mov
call
aam
aam
mov
mov
imul
cmpb
jl
std
incl
xor
hlt
push
xchg
and
in
out
bound
jno
lods
mov
pop
adc
xchg
push
sysenter
adc
or
cmp
out
movsl
mov
mov
lods
outsb
dec
shlb
add
leave
xchg
jb,pt
inc
mov
xor
rolb
dec
sar
adcb
into
mov
jmp
push
imul
dec
and
cmp
dec
dec
xor
lcall
mov
ljmp
mov
std
ja
roll
aaa
loop
jno
mov
cmp
lret
js
sarb
push
stos
mov
in
or
daa
fsubrp
mov
stos
jns
add
push
ja
pop
xchg
xor
loop
daa
inc
movl
pop
dec
pop
mov
orl
shrl
sbb
movsl
mov
js
nop
add
mov
lods
jae
push
loopne
xchg
sub
mov
dec
or
loope
xor
push
int
fcoms
cmpsl
or
push
pop
popa
dec
mov
cmpsb
fldcw
push
into
jecxz
es
cmpsb
mov
xchg
jle
adc
imul
xor
es
shll
add
pop
test
pop
jnp
jg
adc
in
add
js
mov
test
fimull
out
mov
shl
or
loope
pop
mov
insb
push
cmp
inc
xor
pop
repz
jne
in
out
cmpsb
push
daa
push
push
call
fbld
add
stos
jmp
push
aaa
mov
mov
push
jnp
repnz
mov
jns
pop
lods
enter
lock
repz
push
lcall
stc
push
fstl
dec
cltd
mov
loope
in
mov
sbb
mov
outsl
test
lret
mov
into
adc
icebp
int3
aam
add
iret
shlb
fadds
mov
sbb
and
out
fs
xchg
lods
mov
test
sub
push
sub
add
andl
mov
dec
cmp
xor
mov
hlt
ds
outsb
popa
sti
cld
inc
mov
mov
bound
push
fldt
mov
aaa
fists
loop
sbb
pop
in
mov
mov
jge
cmp
mov
int
int
inc
movsb
or
jno
add
mov
lods
sbb
cwtl
andb
jge
lret
lods
mov
cwtl
movsb
adc
test
pop
mov
rorb
mov
not
test
push
clc
inc
int
ss
test
cmp
add
adc
dec
leave
frstor
decl
sbb
add
pop
mov
ds
test
dec
jp
and
dec
inc
mov
mov
sbbl
jns
dec
adc
pop
mov
xchg
in
jecxz
ja
dec
test
ss
lods
das
fisubs
pop
shl
insb
fnstsw
xlat
adc
nop
push
insl
add
jmp
fwait
inc
adc
add
push
cmp
cmp
hlt
xlat
test
jle
fidivrs
fsubrs
inc
xor
inc
loopne
jmp
push
data16
mov
imulb
inc
int3
repz
movsb
imul
mov
adc
pop
popa
xchg
outsl
shl
imull
fcompl
loope
lds
hlt
mov
pop
xchg
xor
cmp
lock
pop
pop
jp
insb
sti
pop
ljmp
andl
lods
imul
mov
push
adc
sub
fwait
mov
xor
mov
sub
shr
ret
aad
jp
pop
pop
cmp
popf
push
push
test
pusha
xchg
nop
push
hlt
fisubrl
cli
mov
cli
sub
int3
xchg
cwtl
notb
fwait
data16
clc
aaa
jne
repz
push
mov
outsl
xor
clc
and
mov
arpl
ret
das
push
ds
aaa
aad
arpl
mull
xchg
and
fstpt
mov
sbb
xchg
fistl
fchs
fcoms
inc
lods
sbb
inc
add
ljmp
insb
xchg
les
pop
pop
hlt
mov
ficomps
popa
push
push
std
jno
push
or
adc
out
repnz
xchg
pop
push
xchg
dec
dec
inc
jno
mov
dec
call
cmp
inc
xor
push
and
bsf
push
jns
mov
loopne
jecxz
lods
cs
iret
std
imul
cltd
push
int
mov
sub
mov
mov
dec
iret
jae
adc
icebp
push
ljmp
in
dec
jmp
xlat
push
imul
add
cmp
je
pop
lock
mov
pop
sbb
orl
xorb
mov
sub
mov
sbb
outsb
dec
mov
leave
jmp
dec
fsubr
jmp
pop
inc
push
and
movsl
lret
or
lds
outsl
xor
lock
outsl
lret
into
bnd
xchg
mov
lahf
lahf
xchg
fmul
sub
sub
mov
decl
and
les
add
sbb
fdivp
push
cmp
or
jmp
xchg
mov
add
inc
push
loop
fs
mov
and
jb
lea
gs
ja
fcom
mov
cmpsb
mov
lea
jmp
sahf
pop
or
data16
ffree
cld
call
stos
push
psubq
push
jo
mov
negl
inc
out
ds
in
mov
movsb
orl
repnz
or
insb
adcl
repz
push
mov
mov
mov
cmp
xchg
jns
repz
xchg
lea
pusha
or
jne
mov
cltd
psubusw
sarb
cmp
sbb
sahf
mov
leave
loopne
pusha
pop
push
pop
ret
mov
out
mov
icebp
and
jl
xchg
lahf
dec
js
pop
xchg
sbb
rcrb
cmp
mov
mov
cltd
adc
xchg
lods
inc
xchg
jge
and
sbb
arpl
mov
jnp
mov
ret
push
stc
inc
mov
mov
lea
lods
jnp
push
notb
push
adc
pop
dec
out
pop
popa
leave
negb
xchg
inc
je
cld
add
adcl
lods
jnp
xor
stos
lahf
jl
mov
adc
cwtl
sbb
idivb
loope
jecxz
sbb
xchg
sbb
in
inc
scas
mov
gs
call
loopne
fwait
cwtl
imul
aaa
add
jge
shlb
push
mov
das
lahf
sbb
addl
add
addl
int3
test
data16
xchg
je
lret
cld
jo
mov
mov
jp
jg
pop
mov
lds
sub
fbld
popf
into
icebp
dec
fidivrs
aam
or
icebp
jns
pop
lahf
pop
push
mov
push
sbb
jae
into
cltd
in
jmp
mov
frstor
cld
sub
mov
pop
pcmpgtb
ja
aaa
stos
aas
xchg
xor
jg
pop
mov
and
movsl
sarl
inc
daa
inc
push
fistl
pop
out
aas
mov
adc
lahf
mov
and
loopne
push
mov
add
test
popf
sti
stc
pop
pop
jle
or
mov
push
cwtl
shlb
push
adc
and
mov
scas
adc
dec
fsubp
lods
movsb
cmp
pop
jmp
sub
jbe
mov
jecxz
push
pushl
ja
jmp
adc
outsb
test
jmp
std
repz
jg
xor
xor
xor
fwait
lea
xor
xchg
xchg
data16
xchg
jge
into
sub
mov
push
fisttpl
shrb
out
out
aam
mov
sub
sub
mov
loopne
ss
bound
pop
adc
mov
pop
mov
push
imul
out
xchg
sti
adc
cmpsl
mov
sbb
leave
and
loope
icebp
out
mov
inc
imul
xchg
inc
xchg
push
jmp
lcall
aad
xchg
xchg
jle
xor
sbb
jne
scas
fsubl
jbe
fadds
mov
leave
pop
mov
or
fnstenv
mov
ja
ret
scas
bound
in
ljmp
pop
or
jbe
dec
pop
mov
out
or
in
push
insl
pop
mov
jns
mov
inc
fidivrl
lea
int3
fs
xchg
scas
xlat
negl
dec
pop
shlb
and
addb
push
data16
mov
mov
hlt
insb
int
dec
cmp
popa
or
cmp
adc
mov
rcr
scas
sub
push
jle
mov
mov
filds
inc
fdivs
loope
jl
sub
enter
xchg
pop
mov
nop
jo
sahf
in
enter
repz
fidivrl
pop
fildll
andb
push
or
jg
xchg
inc
push
and
fisubl
add
jle
inc
nop
and
inc
push
fisubs
and
and
sub
jle
mov
nop
dec
push
test
mov
and
cmp
sbb
sbb
sub
sbb
sub
sub
jb
cmpsl
stos
lcall
xor
mov
cmp
lods
jbe
lods
popa
mov
lods
and
cmp
mov
imul
mov
inc
add
inc
sub
jmp
mov
jmp
shlb
in
loopne
or
outsl
fimull
jmp
call
sbb
stc
mov
fwait
sar
fwait
testl
mov
lods
bound
cli
xchg
push
mov
sbb
sub
sub
jl
es
rcll
xchg
iret
fimuls
dec
add
jo
adc
jno
push
or
int3
mov
pusha
jb
pop
or
push
jns
mov
stos
cmp
repnz
out
int3
lods
dec
out
inc
imul
rorb
xchg
stos
pop
mov
mov
popf
iret
scas
cltd
mov
scas
mov
or
outsl
std
into
or
jp
repz
adc
cmpsb
das
es
mov
push
lods
inc
inc
call
ficompl
fxch
pop
fnstsw
mov
push
xchg
in
mov
mov
mov
cmpsl
jl
fbld
leave
adc
mov
js
lods
or
sub
test
sar
dec
loop
xor
call
xchg
adc
jne
push
jo
shll
scas
mov
out
mov
pop
mov
lock
lock
sbb
cli
fdivrl
and
in
js
jmp
fdivl
test
loope
in
out
mov
mov
dec
mov
jne
xchg
push
jg
sbb
lret
fsub
mov
lcall
dec
out
add
enter
sub
cmc
or
xor
repnz
push
mov
dec
test
push
jg
mov
ja
int
inc
dec
nop
stos
cmp
cvtps2pd
nop
xchg
pushf
aaa
icebp
lcall
addr16
jbe
jmp
push
mov
mov
sbb
lret
mov
roll
iret
push
mov
push
mov
cmp
xchg
push
ss
iret
mov
cltd
mov
xor
dec
es
jle
adc
push
mov
cmp
push
xchg
and
cmp
adc
call
mov
loope
mov
jmp
lods
push
insl
jnp
push
sbb
cli
shlb
xor
movsb
add
popa
mov
cmp
adc
lret
inc
fsubs
fbld
scas
jle
shlb
in
lods
lret
pop
cmp
ljmp
push
mov
aad
nop
jle
das
scas
pop
mov
add
or
add
pop
mov
test
mov
outsl
incl
cwtl
jge
mov
sti
inc
pushf
lcall
push
mov
in
cmp
xor
cmp
mov
jg
fdivr
adc
jge
je
vpsubusw
or
and
pop
xor
xor
add
dec
in
sbb
in
stos
push
sub
xchg
fstpl
scas
popf
xlat
jne
jl
andl
cli
adc
cmp
jno
mov
sub
xlat
jbe
xchg
lret
mov
pusha
mov
jecxz
mov
divb
pop
add
sub
lods
sbb
stc
xor
and
in
inc
or
imul
sbb
std
clc
jns
out
aad
inc
fwait
aas
das
int3
mov
test
push
es
cld
out
and
lods
out
mov
cmp
xor
ss
out
nop
cmp
in
inc
movsb
jno
sub
int
sbb
xchg
sbb
push
cmpsl
jne
pop
cmpsl
cld
and
jge
dec
dec
dec
xchg
lods
inc
pop
add
sbb
movsl
mov
or
or
mov
sub
seto
mov
mov
xor
inc
xor
sbb
mov
mov
pop
mov
mov
xor
xor
cli
aaa
les
or
sbb
in
pop
mov
sbb
jno
mov
movsl
sub
xor
rcl
subb
xchg
xchg
jmp
push
daa
or
stos
sub
lcall
and
sbb
mov
jno
or
ds
dec
sub
daa
outsl
popf
cmpsl
or
xchg
pop
inc
mov
jle
inc
test
sahf
mov
sahf
pop
lret
and
lds
mov
mov
in
mov
icebp
add
test
in
and
and
dec
out
cld
and
xchg
popf
imul
cmp
jmp
dec
dec
clc
jle
mov
aad
pop
inc
aaa
faddl
mov
sbb
repnz
sbb
dec
lock
sar
xchg
push
insb
leave
pop
mov
test
sti
lea
mov
out
repnz
pop
adc
sbb
sub
lret
scas
cmp
dec
jmp
jp
cli
and
sub
aaa
gs
loop
xchg
imul
shrb
in
jg
sub
aaa
ficoml
aam
out
inc
and
sub
outsb
pop
in
fisubl
ja
lods
push
roll
lahf
in
in
ljmp
sub
adc
insb
mov
mov
clc
daa
sub
subb
push
rcrb
mov
or
inc
shrl
push
ds
xor
xlat
pop
out
or
lods
ret
push
xlat
or
pusha
rorb
je
shl
insb
inc
stos
loop
in
jp
adc
inc
cld
and
and
std
test
push
in
popa
jo
xchg
repz
fcoms
jns
sbb
cmp
jle
pop
dec
cmpsl
cmpsb
mov
je
sbb
jge
sar
fnstcw
es
and
push
jmp
or
sub
xor
jnp
xchg
jp
mov
xchg
mov
das
int3
ret
xchg
inc
es
pop
and
cmpsl
jns
fstpl
and
fmuls
cmpsb
sbb
pop
cmc
add
outsb
xor
je
mov
data16
xchg
les
mov
push
lods
cld
push
subl
pushf
shlb
adc
lds
add
leave
sub
pop
int3
inc
rorl
lds
ja
xor
notb
mov
fcmovu
dec
cmp
inc
inc
iret
hlt
sbb
pop
stc
inc
push
xor
popa
mov
mov
or
dec
and
lock
pop
and
and
ret
jne
out
mov
xor
imul
mov
xchg
lds
cltd
sbb
lret
mov
ja
mov
push
fisubrs
pop
cwtl
in
jecxz
lret
lea
fisttpll
js
jnp
loope
mov
cli
fistpl
dec
pop
lcall
cmp
stc
imul
xchg
ret
pop
insl
clc
jl,pn
cmp
cltd
testl
dec
adc
imul
fisttpll
es
and
pop
cmpb
push
add
adcl
jle
mov
aas
aad
in
sarl
jo
sub
sbb
sub
sub
aam
xor
sahf
sbb
jg
dec
dec
cmp
xorb
push
cmp
inc
rsm
mov
stos
hlt
bound
pop
pop
clc
mov
fdivs
pop
fmuls
xor
jmp
out
lcall
leave
icebp
push
pop
iret
aaa
adc
pusha
daa
sti
movsl
and
std
cmpsb
jo
mov
jne
jecxz
push
andb
divl
push
das
pusha
stos
mov
dec
fildl
mov
adc
pop
jg
and
repz
outsl
pop
and
cmp
dec
lods
movsb
xchg
test
cmpsl
ret
mov
add
dec
jae
mov
sbb
mov
cmpb
mov
aas
mov
sbb
push
roll
cli
mov
flds
cmp
mov
and
sarl
add
add
daa
push
pop
inc
cmp
cmpsl
fisubs
mov
test
repz
hlt
clc
add
ss
mov
mov
test
or
sbb
xchg
push
xor
stos
pusha
sbb
jae
mov
mov
sub
push
mov
mov
fmuls
push
cmp
xchg
jle
dec
out
lret
mov
jp
cmc
lret
push
adc
cs
fdivs
stos
jb
jbe
sahf
shlb
add
mov
jmp
in
or
xor
inc
jbe
iret
outsl
add
test
popa
or
cmp
xchg
jp
jmp
nop
stos
out
xor
pushf
push
sti
insb
movsl
cmp
xor
mov
mov
jb
xchg
sbb
arpl
inc
sbb
jne
jns
pop
in
or
cmp
enter
xchg
sbb
dec
loopne
into
mov
cld
inc
clc
mov
rorb
js
push
pop
adc
lahf
cmp
sti
xchg
mov
icebp
adcb
iret
dec
pop
test
xchg
pop
and
fwait
lret
mov
lcall
jns
add
stos
jae
shrb
lcall
test
and
and
fidivs
into
outsl
xchg
out
stos
mov
and
jb
cmpsl
mov
daa
orb
repnz
test
dec
test
dec
inc
sub
dec
mov
mov
jno
push
orb
cli
pop
and
pop
ljmp
stc
or
bound
mov
pop
shll
ja
push
push
clc
add
xor
lret
cs
and
adcl
jnp
popf
push
lret
loop
mov
fbld
xchg
rcrb
and
sbb
adc
call
mov
in
mov
insl
leave
or
xor
popf
movsl
ss
lcall
sti
jmp
mov
jno
inc
cmp
push
xorb
jb
outsb
seta
xchg
loopne
pop
into
jne
dec
fnstcw
fldl
jne
pop
hlt
cmpsl
inc
jo
std
mov
jecxz
cmpsl
loope
add
push
adc
stos
jb
mov
scas
add
out
enter
lahf
std
mov
call
addr16
test
or
and
aas
mov
mov
inc
scas
and
repz
sbb
sahf
pop
bswap
xor
mov
xchg
js
dec
mov
das
rcr
jbe
and
and
je
cltd
jnp
mov
mov
insl
out
repz
or
sbbl
lret
mov
lret
pop
call
hlt
cmp
pop
cltd
outsb
lea
and
scas
xchg
mov
sbb
add
fimuls
adc
pop
adc
sub
push
out
jno
pop
scas
shll
mov
cmc
mov
jnp
lcall
mov
jmp
leave
cltd
cmp
jbe
nop
testb
loop
sub
enter
outsb
cmpl
rcrl
pop
mov
push
push
bound
adc
xor
pop
jnp
push
push
cwtl
xor
cmp
jp
jb
fs
rcrl
xchg
mov
js
mov
mov
inc
mov
pop
inc
or
mov
ret
adc
je
enter
das
inc
into
pop
xorl
jno
cmp
pusha
xchg
gs
insl
mov
mov
nop
inc
aaa
cmc
adc
xchg
je
xchg
mov
jecxz
xchg
xchg
outsb
lret
or
fs
push
inc
lds
lock
inc
and
mov
mov
fbstp
fisttpl
push
mov
or
push
inc
sti
rcll
xor
add
bound
or
xchg
mov
mov
fwait
add
sahf
decl
les
jnp
xchg
lds
loop
mov
leave
icebp
cmpsb
rcrl
jb
inc
std
push
pusha
adc
mov
cmpsl
insb
cmp
fucomip
fucom
std
xchg
data16
inc
mov
lahf
ds
push
ja
js
mov
add
mov
push
nop
cmp
jge
sti
sbb
and
adc
lret
jae
inc
sub
sub
pop
lret
push
sbb
adc
and
push
jb
arpl
mov
in
sbb
or
jb
xchg
add
jge
mov
in
lcall
fstpt
in
das
test
sbb
lahf
fcoml
in
rorb
iret
aas
push
les
into
sbb
pusha
je
xor
adc
adc
lods
sbb
cmpb
sbb
fwait
adc
ja
inc
testb
inc
pcmpgtw
fsubr
push
mul
incb
movsl
inc
jle
jge
aas
out
divb
mov
aam
outsw
mov
and
int
aam
cmpsl
jge
insl
sub
test
fcmovbe
hlt
dec
cmp
mov
cmp
mov
add
pop
aad
ljmp
push
cmp
push
dec
cld
mov
daa
lret
inc
arpl
xchg
cs
aaa
cmpl
icebp
mov
scas
lret
aam
outsb
mov
iret
sbb
xor
dec
loop
rcr
or
es
dec
loop
inc
out
lods
imul
or
les
incl
add
jl
adc
fs
in
das
push
outsl
in
jo
sti
xlat
sahf
inc
std
lret
dec
cmp
pop
dec
mov
adc
imul
mov
out
xchg
mov
ret
and
test
xchg
sub
pop
mov
mov
jmp
fbld
cmp
imul
arpl
xchg
mov
xchg
mov
hlt
fbld
rorl
mov
jo
inc
dec
mov
arpl
xchg
cwtl
into
fisubrs
push
filds
add
sti
outsb
sub
xchg
and
adcb
outsl
lahf
out
sbb
ljmp
sahf
das
movsl
adc
movsb
sbb
adc
jecxz
stos
add
aam
gs
out
jge
xchg
in
out
fisubrl
inc
xchg
add
das
ftst
xchg
fcoml
push
loope
add
push
pop
cmp
adcb
add
out
add
sub
inc
outsl
call
jp
aam
mov
fadds
adc
std
mov
pop
pop
mov
out
rcr
jg
stc
push
sar
fildl
popf
push
mov
jecxz
call
addr16
push
inc
mov
mov
jge
jnp
outsb
xor
pop
cmp
mov
repz
fs
dec
inc
test
cmpsl
and
out
pop
inc
gs
insl
mov
jne
pop
sbb
fwait
insl
inc
jns,pn
fs
and
pop
cld
mov
int3
jp
cmp
insb
dec
vandpd
fld
cmpsl
jmp
cmp
jns
cmp
int
cmpsb
hlt
mov
lret
jnp
cs
and
arpl
and
jg
pop
stos
dec
mov
adc
adc
xchg
lods
push
in
mov
std
ficompl
lcall
frstor
rclb
out
add
mov
push
imul
popa
cmp
call
push
mov
add
fiadds
sbb
int
inc
pop
nop
or
lock
daa
sbb
sub
xchg
cmp
pop
aad
inc
fisubs
mov
rcrb
lahf
inc
stc
jno
sub
lock
outsb
pop
shlb
mov
xchg
sysexit
jecxz
pop
sbb
adc
jp
and
sbb
xchg
adc
cld
cwtl
imul
push
or
imul
lock
insl
lahf
push
xor
dec
lods
xor
fxch
rorb
sahf
adc
aad
inc
test
repz
enter
stos
bnd
xchg
cmp
popa
inc
pxor
ds
push
cmp
push
or
sub
insb
cld
mov
pop
inc
icebp
cmp
mov
mov
jns
adc
fisubs
sub
lret
mov
out
les
int
int
add
sbb
inc
sub
pop
mulb
in
mov
or
pop
addb
fwait
rol
adcb
jg
mov
cmp
pop
leave
xchg
dec
addr16
dec
adc
jo
call
pop
xor
push
xor
jge
push
cwtl
subl
inc
icebp
inc
xor
xor
mov
pop
xor
dec
aam
les
cmpsb
mov
xchg
rcrb
cmpsl
call
inc
jle
sahf
add
mov
popa
cmpb
jmp
or
pop
and
cltd
sbb
mov
and
stos
filds
adc
dec
push
sbb
movlps
ja
adc
in
mov
dec
cmp
enter
sbb
ja
rolb
inc
and
in
dec
pand
sti
push
pop
adc
data16
aas
stos
add
fwait
mov
jecxz
lret
sahf
mov
ss
adc
xor
xchg
pop
xor
mov
jle
sbb
cld
pop
mov
fsts
jge
jp
sub
aas
arpl
je
mov
adc
dec
int
jo
sub
sub
and
outsl
jle
repz
push
add
mov
dec
ljmp
push
insb
ficomps
fsubs
out
lods
pop
sub
pop
popf
push
pop
rcl
mov
add
inc
cltd
dec
jg
adc
aad
movsb
scas
sub
dec
push
xchg
dec
sbb
int3
ljmp
xchg
repz
xorb
jg
mov
popf
scas
mov
bound
pop
adc
dec
cmp
inc
ljmp
in
gs
jne
lea
aam
cmp
sbb
mov
js
add
leave
or
mov
mov
loope
mov
jne
xchg
xchg
pusha
pop
mov
and
div
inc
lret
sahf
rolb
stc
imul
lock
fistpll
xchg
stos
add
cmc
aad
popf
loopw
dec
and
scas
mov
enter
mov
jbe
stos
dec
dec
addr16
cwtl
loop
cmp
lea
and
jne
daa
and
mov
inc
inc
adc
aaa
fistpll
inc
xchg
mov
jmp
mov
fstpt
xchg
popa
aaa
pop
bound
and
jb
xlat
mov
mov
xchg
xlat
test
aad
adcb
inc
shlb
ss
mov
push
xacquire
mov
xchg
daa
push
xchg
mov
inc
jg
xlat
jl
leave
inc
incl
pop
dec
dec
mov
inc
jge
or
or
mov
int3
jns
xor
into
add
call
xchg
dec
mov
inc
shrl
inc
dec
or
outsl
das
adcl
daa
mov
add
ret
adc
xchg
xlat
xor
fbstp
leave
andl
in
hlt
mov
or
mov
sbb
rcr
pop
cmp
sbb
insb
cmp
xor
stos
mov
fsubrs
jle
into
arpl
imul
popa
pop
mov
sub
jmp
xor
lock
fisttpll
jp
movaps
mov
sub
sbbl
mov
pop
or
sbbl
cmp
lds
dec
bound
incb
ja
imul
cmp
dec
cli
rolb
pop
iret
jno
push
cmpsl
popl
cmc
mov
and
cmp
ja
cs
lods
jae
loope
push
xchg
pop
mov
mov
clc
xchg
mov
xchg
divl
fidivrl
inc
popf
call
pop
adc
js
in
fcomps
inc
scas
cmpb
push
jmp
xor
add
loope
pop
mov
jnp
les
insb
jge
or
cmp
pop
les
pushf
cmp
xor
test
sbbb
sbb
xchg
leave
push
inc
leave
jl
sbb
fiadds
rcrb
lret
mov
mull
mov
sub
pop
dec
out
or
test
stos
pop
rorb
movsl
mov
mov
add
sbb
dec
test
aaa
push
xchg
mov
lcall
jno
mov
jmp
sub
pop
scas
pusha
mov
cmp
or
xchg
pop
jno
pop
lahf
dec
sbb
jae
cmp
js
lea
xchg
sub
cli
push
mov
shll
push
dec
and
push
sbb
adcl
push
repz
shrl
test
fs
fs
fiaddl
mov
imul
sbb
inc
adc
in
mov
popf
jmp
inc
pop
outsb
cld
divb
insb
std
icebp
dec
inc
repnz
dec
mov
or
imul
test
push
and
jl
jecxz
inc
xor
lods
fsubrp
stos
sbb
test
xchg
das
adcb
xor
fsubrl
lock
and
js
lods
pop
loope
iret
add
jge
test
cmp
dec
scas
pusha
insb
sub
mov
sbb
popa
fisttpll
and
cmpb
cmovle
xor
jge
or
sub
sub
xchg
stos
test
xchg
jno
xchg
ljmp
scas
lds
ficoml
jmp
testb
pop
jae
sbb
lock
cwtl
aam
xchg
ja
scas
jo
rorl
testl
les
add
loope
jbe
icebp
ficompl
ja
push
aaa
out
inc
ret
pop
mov
lods
adc
incb
mov
sbb
sahf
rcr
pop
int3
cld
cs
add
aaa
mov
fsub
repz
xor
cmp
sbb
push
pop
imul
or
cmp
aad
push
loop
add
movsl
insb
cltd
loopne
inc
imul
or
jbe
lret
psubsw
lret
jo
cld
in
mov
sarb
movsl
inc
nop
cwtl
mov
loopne
add
sbb
or
pop
dec
sti
std
inc
sbb
mov
mulb
adc
jno
daa
aas
adc
mov
shrl
mov
adc
iret
rorl
pop
mov
shll
data16
jae
sub
or
into
cmc
mov
lds
mov
dec
fdiv
push
rolb
addr16
mov
inc
cld
movsl
je
call
lcall
loop
dec
call
or
push
xchg
popf
adc
int3
arpl
es
lea
inc
jmp
jecxz
jecxz
or
insl
jno
ljmp
out
loop
jl
iret
adc
xchg
pop
and
fdivl
imul
mov
cs
and
xchg
outsl
or
divb
mov
push
inc
mov
push
push
jle
pop
push
inc
and
add
sub
push
cltd
rolb
sbb
mov
pusha
mov
push
push
vmulsd
sbb
sub
and
rolb
mov
movsb
pusha
cmpsl
mov
sbb
mov
lret
cltd
push
imul
mov
inc
xchg
repz
and
inc
dec
lret
ja
enter
outsb
fbstp
stc
leave
fsts
aaa
es
sbb
ljmp
cmc
dec
fisubs
pop
insl
mov
js
jp
push
mov
popa
add
mov
icebp
mov
inc
subl
jmp
jp
inc
jg
mov
aam
je
xor
mov
lcall
push
sahf
movsb
out
cmc
push
xchg
pop
and
sarb
lahf
inc
push
lcall
mov
es
and
mov
jle
popa
and
fiaddl
insb
fstpl
lahf
data16
dec
mov
js
xor
jg
cs
pop
inc
pop
pop
pop
outsb
out
into
ja
inc
gs
aas
push
in
jae
mov
inc
fnstsw
subl
and
jl
enter
test
xor
stc
push
add
mov
push
push
mov
sbb
icebp
flds
mov
dec
data16
imul
dec
xchg
push
andl
mov
xorb
xchg
in
lahf
leave
mov
stos
clc
jmpw
mov
daa
add
add
les
mov
sub
imul
mov
test
and
adc
test
xlat
sub
dec
aad
and
pop
sahf
sbb
or
xor
jg
fldl
je
inc
or
xchg
mov
push
lds
and
or
stos
pop
insw
jecxz
outsb
xchg
mov
mov
scas
cmp
data16
adc
testl
shlb
andb
jnp
adc
out
mov
fdivr
loop
lods
inc
sub
daa
sub
and
inc
xchg
cmp
cmp
and
push
jl
icebp
push
or
add
mov
fimuls
mov
push
gs
or
dec
sbb
jle
push
enter
pop
hlt
inc
sbb
push
rclb
or
hlt
stos
add
mov
sub
in
pusha
hlt
mov
stc
xor
sahf
add
mov
sub
int
loope
mov
ds
cmp
fdivs
cmp
and
in
sub
ljmp
movsb
fcomi
fnstenv
rol
flds
movsl
outsl
xor
dec
in
add
or
lcall
mov
pusha
and
aam
cwtl
jle
sub
shll
jmp
rol
or
movsl
or
cmpsl
sbb
lret
mov
jmp
in
and
mov
ret
into
push
mov
sub
push
cmovg
xchg
das
lods
inc
fs
insl
add
mov
sub
inc
cld
rcrl
cmp
dec
scas
mov
pop
and
inc
adc
call
xchg
iret
jo
addr16
lcall
push
cwtl
and
lret
fdivl
lea
mov
in
push
mov
jecxz
mov
scas
jno
xchg
jns
aaa
jo
hlt
mov
push
or
das
mov
xchg
mov
or
nop
stos
sbb
das
pop
mov
push
and
lret
push
inc
xor
xchg
push
fsubs
xlat
in
fildll
mov
adc
or
out
pop
cs
xor
sbbb
mov
jno
cld
mov
stc
aad
mov
adc
push
xchg
js
mov
pop
cmpsl
push
push
xchg
and
int
stos
push
push
mov
jle
or
mov
data16
pop
js
jo
sahf
sub
inc
leave
sub
imul
jne
mov
inc
ljmp
sbb
inc
mov
dec
sbb
stc
adc
orb
orl
mov
sbb
mov
ffree
inc
adc
lods
inc
cmp
pop
or
ja
mov
jnp
loope
push
dec
xchg
sub
jbe
fiaddl
jmp
jo
cmp
mov
popf
dec
xchg
cmpsl
sahf
dec
addr16
sbb
and
rclb
adc
enter
sbb
mov
call
popa
and
push
adc
sbb
mov
mov
lea
lock
aad
push
mov
mov
jb
rcrb
dec
pop
sub
dec
or
orl
mov
ja
fwait
jbe
lret
leave
push
subl
inc
add
inc
cmp
in
dec
movb
push
xchg
sbb
sbb
loopne
leave
pop
mov
sbb
dec
push
sub
stos
cmc
push
pop
jae
movsl
dec
inc
std
cwtl
or
call
mov
xchg
and
push
gs
icebp
mov
jp
pop
xor
dec
fdivrl
mov
cltd
lret
mov
pop
dec
ds
je
imul
and
aas
pop
ja
test
in
xor
cmp
or
push
or
mov
push
xchg
lahf
test
mov
es
movsl
mov
inc
loopne
cmp
stos
out
and
xchg
sahf
insl
or
pop
cmp
mov
push
call
push
jmp
mov
addr16
xchg
and
jmp
jo
inc
inc
rcl
cmc
das
faddl
pop
mov
adc
mov
xchg
fcmove
or
movl
mov
mov
mov
pop
mov
push
jo
xor
ret
push
mov
jne
dec
cmpsb
jmp
inc
cs
jo
mov
call
push
rcrl
dec
mov
mov
jne
push
add
clc
add
push
inc
pop
xchg
cmpsb
cmpsl
xor
leave
std
addl
mov
scas
sbb
daa
mov
jg
cmp
cmpsb
hlt
fsubl
rorl
pop
add
mov
test
fwait
xchg
sbb
mov
loope
mov
movsl
fmull
and
sbb
rcl
mov
xchg
fistpl
inc
cmp
enter
mov
loope
add
pusha
in
mov
xchg
clc
cmc
int3
ret
sub
xchg
mov
addr16
scas
jle
lret
xor
leave
mov
mov
add
bound
lods
arpl
aad
cmc
ss
xor
push
inc
leave
test
in
icebp
pop
pop
sbb
imul
iret
fimull
jmp
dec
or
sub
insb
ss
cmpsb
adc
testb
mov
nop
xchg
jnp
mov
lods
daa
jbe
shll
popf
lods
dec
insb
je
sub
mov
cmp
in
movsb
stc
mov
mov
out
xchg
push
loope
movsl
add
addr16
mov
cmp
cmp
inc
idiv
into
mov
and
jbe
jns,pn
lods
adc
adc
test
sbb
cmp
pushf
imul
sbb
jle
daa
push
xor
jge
cmp
fcmovu
arpl
sub
aam
jp
cli
jmp
mov
les
jbe
mov
mov
std
test
dec
push
ret
mov
clc
or
imul
loope
xor
sub
sbb
flds
cmp
arpl
mov
mov
jecxz
add
jmp
mov
sbbb
add
sub
shlb
roll
repnz
decl
jmp
mov
pusha
dec
sbb
cmpsb
decb
popf
push
insl
out
mov
div
mov
add
lahf
aas
xor
pushf
xchg
cmp
xchg
popa
jge
ljmp
pop
add
cmp
fchs
mov
push
je
lods
daa
ljmp
sarb
ret
mov
mov
cltd
jnp
jl
movsb
shl
push
out
pushf
cmp
aam
pushf
dec
add
sub
and
rcrl
jp
fcomp
ret
sbb
or
orl
dec
cmp
imul
arpl
inc
stos
loope
cli
leave
bound
std
mov
or
sub
adc
int3
add
inc
int
jne
xor
jns
sbb
rol
daa
lea
mov
xchg
mov
or
mov
int
iret
pop
nop
js
mov
xor
lock
ret
jnp
jg
inc
in
pop
rolb
repnz
sahf
daa
xor
mov
je
or
arpl
aad
push
js
push
das
sahf
dec
pop
iret
mov
repz
jmp
push
aas
inc
xor
mov
loopne
shl
mov
in
ss
mov
pop
popf
inc
inc
or
mov
mov
dec
js
or
lea
push
mov
or
mulb
pushaw
fmuls
int3
dec
xchg
adcl
sbb
fwait
sub
loopne
cmpxchg
imul
push
js
fiadds
sub
add
js
aam
pop
ja
xor
inc
enter
cmc
or
mov
negb
xchg
out
sbb
leave
sub
push
fdivrl
aaa
outsl
sahf
cmp
pop
in
sub
xchg
jmp
or
hlt
cmp
je
imul
xor
sub
repnz
and
jns
jl
testl
jae
pop
mov
out
out
ffreep
fidivl
or
leave
and
fimull
inc
mulb
lahf
push
cmp
rcrb
or
jecxz
inc
insl
jge
test
imul
in
jge
in
or
xor
std
sub
fs
aam
ss
pop
popf
adc
fs
ljmp
fdivl
pop
pusha
xor
out
and
push
mov
mov
lcall
mulb
push
rcll
loope
outsl
hlt
jmp
xor
fdivrp
xchg
in
in
push
jp
fstcw
xor
cmp
movsb
mov
xchg
push
in
mov
test
dec
clc
dec
mov
sbb
int3
dec
mov
fidivrl
mov
jno
xor
mov
xor
sbb
jl
and
sbb
add
hlt
push
pop
out
ljmp
and
xor
push
jmp
sahf
jmp
mov
mov
push
repnz
mov
inc
xor
shll
adc
out
xchg
call
inc
ror
sbb
sbb
std
and
in
push
lock
lds
leave
add
enter
pop
adc
push
test
xchg
in
jp
sub
lcall
jle
mov
push
jb
lret
and
mov
test
cmp
lret
xchg
das
sbb
add
es
es
xor
xchg
loope
sbb
or
cmp
sub
sbb
lahf
adc
lds
xchg
movsl
xor
cmp
ret
std
lock
mov
cld
aas
dec
scas
std
add
pop
adc
jge
mov
fs
jmp
test
inc
test
inc
xchg
arpl
jle
fnstenv
ret
daa
jb
xlat
incl
inc
xchg
jnp
rcr
jmp
daa
add
xchg
leave
cmc
mov
sbb
into
and
inc
pop
push
scas
or
call
gs
stos
repnz
idivl
je
mov
ss
mov
fcoms
mov
imul
dec
stos
scas
stos
mov
jno
sub
hlt
fs
cmpl
adc
push
scas
dec
mov
sub
cmp
pop
loopne
in
or
mov
ds
adc
fwait
pop
cmp
in
dec
ficompl
out
push
cmp
and
sub
inc
mov
mov
mov
cli
iret
sub
or
dec
pop
mov
jp
or
scas
jne
sti
xor
cmpsl
pop
or
arpl
pusha
into
mov
mov
dec
ds
inc
xlat
frndint
in
mov
mov
popf
mov
clc
in
adc
loope
insb
scas
cmp
movsl
mov
cmp
jp
mov
test
ds
dec
and
pop
cmpsb
mov
inc
mov
sub
imul
outsb
pushf
push
and
imul
sub
scas
or
cmpsl
pop
int3
xchg
rcl
fwait
popa
aad
js
jecxz
push
into
jo
add
mov
sti
ficoms
mov
xchg
pop
or
cwtl
shl
inc
sbb
loop
cmp
imul
jecxz
push
out
and
fsubl
call
jge
inc
pop
ret
pop
mov
es
jmp
hlt
mul
fwait
push
sti
lahf
ficomps
jne
xchg
inc
cmp
enter
add
pop
or
fnstsw
mov
jecxz
in
ds
inc
jmp
clc
inc
jno
or
addb
mov
sub
test
pusha
gs
mov
bound
enter
cmp
addb
push
imul
mov
imul
xor
lods
add
xchg
movsb
mov
sub
cs
das
mov
and
loope
les
sub
push
mov
or
jp
es
data16
mov
leave
and
sahf
daa
xor
fldenv
xor
outsl
popf
and
push
test
sbb
scas
loopne
fiadds
data16
cmp
popf
insb
dec
dec
cmpsb
fimull
inc
leave
push
xchg
jns
xor
push
dec
loopne
movsb
jae
or
add
pop
sub
fwait
jo
rclb
in
sbb
add
cmp
shrl
pop
aaa
ss
popf
dec
aad
fdivrs
movsl
mov
fmull
fsubs
add
push
sti
test
cmp
sub
jmp
sub
mov
shlb
add
idivl
xchg
mov
pop
lock
pop
int3
fs
cmp
pop
jbe
cmp
lods
pop
mov
stc
sub
sub
jmp
push
and
out
adc
into
jb
cs
mov
dec
pop
jb
aam
pop
inc
cld
das
jg
movsl
in
ret
faddp
adc
sub
adc
jmp
jae
dec
push
aas
leave
or
popf
js
xlat
jp
add
test
add
push
fcomps
aas
sub
scas
ljmp
aas
push
ljmp
jns
adc
ret
js
pushf
and
pop
adc
inc
imulb
outsl
cs
mov
xlat
jge
mov
mov
lahf
shrl
clc
stos
ja
adcb
pop
cmp
pop
cmp
fistl
cmp
shll
aad
stc
mov
mov
pop
push
movsb
enter
mov
jmp
sub
and
pop
movsb
dec
cwtl
mov
lea
mov
loopne
pushf
jl
mov
xchg
data16
dec
push
jb
sbb
ds
cld
fs
enter
pop
mov
rcr
push
jnp
pop
cmp
cwtl
xchg
mov
sbb
mov
enter
cmp
xchg
divl
imul
sub
aaa
ret
fisttpll
hlt
jmp
pop
lret
lahf
sub
pop
inc
add
dec
cmp
ss
movb
sub
cmp
test
sub
mov
clc
xchg
xchg
inc
out
dec
popa
xor
rclb
lds
push
lcall
jbe
dec
mov
push
mov
jge
cwtl
xor
add
pop
in
sbb
aas
sbb
adc
in
cld
dec
mov
not
xor
sbbb
cld
cmp
neg
mov
add
mov
daa
mov
outsl
idivl
fsubr
in
sub
add
or
push
pop
push
pop
test
popa
fs
jo
jo
mov
cwtl
mov
mov
test
mov
mov
mov
loop
or
je
lock
dec
or
inc
lahf
push
inc
paddq
repz
rcll
xor
lea
push
and
lahf
add
dec
mov
test
inc
bound
cmp
sti
jecxz
mov
aad
ss
ss
inc
push
or
pop
pop
mov
mov
dec
mov
out
mov
testb
rcrb
jno
int3
insb
xlat
fistps
ret
jge
mov
jg
pop
mov
icebp
addr16
shrl
jmp
rcll
and
jecxz
xor
jae
sub
jnp
xchg
sbb
and
push
and
push
inc
sub
jecxz
lock
mov
pop
dec
pop
aad
pop
in
lcall
popw
jb
pop
aas
insb
mov
jmp
ficoms
push
sub
push
sub
cmp
imul
in
ljmp
push
sbb
mov
pop
shl
fcomi
cmpsb
idivl
mov
cmp
call
pop
xor
popa
call
dec
in
mov
add
and
adcl
jnp
outsb
mov
stc
fstpt
aad
lret
repnz
fs
fsubrs
ja
dec
cmp
xchg
or
or
adc
ljmp
mov
aas
mov
sub
nop
test
insb
imul
pop
cmp
cmp
arpl
mov
pop
mov
add
loopne
call
out
cli
adc
stos
out
lds
popa
or
lea
push
call
or
jns
mov
mov
inc
cmp
in
mov
xor
fs
xchg
push
fwait
int
dec
and
and
sub
jno
rorl
outsb
es
adc
dec
sub
inc
movlhps
movsl
sub
pop
sarb
cltd
dec
dec
inc
data16
adc
aam
adc
dec
test
ret
mov
scas
lds
push
in
sahf
mov
idivl
xchg
lock
sahf
pop
aad
and
shll
mov
mov
out
cwtl
fdivl
inc
repz
pop
mov
cltd
or
scas
mov
lret
and
test
jnp
or
into
push
movsl
mov
adc
shl
adc
inc
icebp
sarb
sub
fidivl
jp
loop
mov
into
aad
arpl
fidivl
mov
dec
jae
cwtl
sub
jae
or
add
pop
js
loop
xor
lret
mov
shl
scas
cmp
jg
jge
outsl
pop
stos
mul
and
dec
jmp
in
int3
notb
testb
cmpsw
mov
out
inc
in
push
pop
jnp
jae
cli
mov
inc
insl
mov
cmpsl
in
jmp
sub
push
cmp
inc
lods
test
xchg
mov
and
xchg
fmuls
jo
jle
sub
lods
mov
pop
push
mov
jns
fists
lods
bound
lock
insb
insl
popf
mov
push
in
xchg
mov
jg
mov
imul
dec
mov
sub
pusha
imul
movsl
adc
cmc
mov
pop
pop
inc
leave
in
test
sub
cld
xor
aaa
dec
sarb
in
mov
mov
adc
xor
mov
sub
dec
push
inc
test
adc
jl
int3
lock
rorl
push
loope
cmp
jmp
or
xor
ret
add
dec
fnsave
adc
mov
adc
xor
push
js
sbb
sub
test
jl
pop
mov
into
subl
mov
cltd
movsl
push
pop
cmp
jnp
and
test
jbe
jge
xor
xor
jecxz
mov
or
mov
sub
scas
loope
ja
mov
cmp
je
jle
in
sbb
call
jecxz
out
or
rclb
insb
in
outsl
iret
push
sbbl
mov
add
inc
ja
pop
cmpsb
aaa
outsl
lock
push
aas
push
xchg
cwtl
xor
jmp
add
loope
sub
fdivl
sbb
inc
mov
pop
pop
xor
jecxz
and
xchg
aad
loop
pop
in
movsb
dec
jecxz
movsb
or
pop
test
test
lods
imul
jge
cs
pop
jecxz
in
ds
cmp
mov
adc
dec
push
fst
fimull
xor
xchg
add
pop
mov
jge
mov
inc
or
jbe
lods
mov
mov
pop
pop
dec
imul
jo
fwait
pop
xchg
mov
jge
in
cmp
std
or
lds
adc
jae
loopne
mov
pop
ljmp
aas
js
roll
jecxz
push
setb
inc
imul
sub
inc
or
dec
and
and
gs
and
les
jno
add
enter
test
xor
aaa
push
outsb
push
ja
mov
and
test
fldenv
popa
loop
cli
cmp
clc
rcpps
stc
fadds
cmp
aad
nop
enter
pushf
rolb
aaa
test
test
rorb
jmp
add
rorl
push
mov
cmp
cmp
mov
mov
stos
imul
aas
mov
add
inc
push
xchg
sub
dec
cli
mov
out
out
movsb
jp
pop
push
jg
xor
addl
dec
xchg
lods
mov
stc
aas
mov
loopne
add
cmpsb
add
test
insl
sbb
popf
aad
xchg
movsb
and
and
pop
addr16
str
inc
pop
xor
add
mov
add
rolb
pop
cltd
pop
jae
mov
pop
test
adc
clc
cwtl
mov
cld
pop
js
add
xor
fisttpll
lcall
sahf
icebp
imul
shrl
mov
inc
cmp
mov
sub
aas
mov
jmp
into
adc
sub
push
or
push
pop
adc
jmp
rolb
jmp
icebp
sar
fisttpll
dec
dec
and
stos
insb
and
push
or
jne
jae
sarb
das
dec
mov
xchg
pop
sarl
lahf
pop
adc
cld
xchg
ret
inc
int3
lret
loopne
sub
jl
gs
mov
sub
xor
xchg
adc
mov
js
and
add
sar
ljmp
fwait
inc
dec
fwait
inc
xor
pcmpgtb
mov
in
fsubr
cmpl
stos
jno
adc
movsb
cmp
mov
sbb
popf
ss
pcmpgtd
scas
add
cltd
dec
sub
cltd
dec
pusha
cmpsb
mov
jne
pushf
adc
in
mov
mov
jb
pop
lods
xchg
cmp
jecxz
dec
push
push
stos
bound
fs
jg
or
lods
rclb
popf
sbb
ja
shl
sti
dec
adc
xor
pop
jae
pusha
push
leave
pop
cmp
cli
fldenv
push
into
call
stos
or
cli
js
jne
inc
ljmp
push
into
test
cmp
and
cmpsl
pop
adc
inc
jecxz
jmp
mov
pop
pop
sub
sarl
dec
dec
stos
pop
pop
add
xor
cmpsl
cmp
push
pop
xchg
mov
xorl
faddl
and
and
jmp
stc
mov
ss
mov
mov
mov
cmpsb
gs
push
int
inc
ret
xorl
aaa
sub
inc
addr16
imul
pop
nop
lock
fisubrs
fisubrs
out
jmp
fcoms
mov
clc
adc
and
mov
jmp
lahf
shrl
repz
xchg
shll
xor
stc
shll
fstpl
pop
jge
ljmp
jg
jo
iret
add
imul
dec
adc
jo
sahf
mov
mov
fnstenv
das
jp
shll
sub
sbb
es
sub
xor
loop
xchg
sub
sbb
enter
iret
movsl
scas
jno
out
decb
mov
sbb
sub
mov
je
mov
mov
movl
movsl
hlt
push
ror
stos
dec
add
sub
vminss
leave
lahf
std
cmc
lea
jl
xor
in
mov
push
movsl
repz
inc
nop
add
xor
sarl
jo
fwait
outsb
jg,pn
inc
sbb
jmp
es
push
xor
int3
fdivrl
leave
push
mov
enter
test
jmp
pop
nop
orb
push
ljmp
add
loopew
ja
cmc
aas
adc
xchg
jno
out
mov
add
push
sahf
addl
fwait
push
mov
jmp
cmp
cmp
sahf
add
push
pop
arpl
int3
rcrb
rcrl
mov
jp
and
inc
xor
je
jmp
js
mov
bound
sub
in
rorl
lcall
int3
adc
fisttps
repnz
pushf
sbb
ss
adc
movl
mov
in
pusha
sbb
shl
bound
js
dec
fcoml
ret
xchg
pop
addr16
and
sahf
aas
adc
shll
test
pop
xlat
push
repnz
ret
rcrl
mov
aaa
in
xchg
jb
ret
rolb
push
cmpsl
cmpb
ss
cmp
sub
mov
shl
test
roll
cli
mulb
jg
jns
rolb
mov
pop
int3
imul
add
es
sbb
jae
jo
pop
pop
ss
icebp
ja
mov
pusha
mov
mov
sbb
stc
sti
out
xor
pushf
add
xor
pop
adc
fisttpll
adc
shrl
inc
xlat
test
push
sub
fnstcw
lea
jl
jns
add
jmp
mov
add
and
fmul
sub
outsl
adc
inc
pop
movsl
and
into
jne
jle
cmp
or
add
test
fs
cs
stc
pop
pop
xlat
push
pushf
mov
cmp
pop
mov
in
stos
inc
test
mov
xor
or
addb
pop
jp
aam
mov
outsl
mov
dec
cmp
cmp
dec
or
mov
cmc
cmp
jne
sub
cwtl
jnp
and
push
rcl
mov
or
cmpsl
mov
sub
dec
mov
out
xchg
or
movsb
push
adc
mov
xor
adc
scas
mov
les
scas
lcall
xor
test
or
xor
sbb
xlat
push
repnz
test
gs
sahf
fists
pop
xchg
cmp
icebp
sub
jle
sahf
dec
stos
dec
arpl
repz
jnp
addr16
jl
ja
mov
dec
xchg
mov
rcrl
inc
sbb
test
push
lret
icebp
cmp
lahf
rcll
push
or
and
repnz
lahf
nop
cmp
cltd
cmp
gs
or
rolb
rcrb
nop
repnz
lret
repz
sub
pop
out
cmp
bound
pushf
push
arpl
and
sub
or
jl
or
inc
xlat
push
sti
sub
lods
cmp
dec
int
xchg
int3
mov
aad
or
ss
lods
inc
xor
in
repz
movsb
sbb
cmp
fcoms
mov
push
sahf
data16
cmp
xor
aam
std
lret
jg
dec
cmp
sub
fucom
mov
sbb
emms
xchg
jb
iret
out
cld
jecxz
mov
or
fistpl
xor
xor
cmpsb
ljmp
xchg
pop
push
test
inc
and
in
pusha
addl
add
push
jge
pop
out
pushw
shll
sub
rorl
jge
mov
jae
in
dec
fidivs
pusha
xchg
mov
mov
cltd
aaa
iret
and
call
xlat
jl
leave
or
xchg
adc
shlb
sub
push
lret
sbbb
jae
pop
icebp
lea
addr16
add
enter
jns
mov
xchg
jb
ds
cmpsl
mov
and
sub
inc
je
dec
pop
aad
inc
sub
leave
fisttpl
inc
mov
ds
clc
enterw
mov
jecxz
ljmp
cmp
fldl
cmpsb
push
xor
xor
or
and
test
andl
mov
adc
sub
test
jo
mov
insl
pop
fisttps
xor
js
clc
push
je
xlat
cli
cmpsb
sub
pop
movsl
sarb
test
insb
pop
sarb
sbb
cmp
add
or
jge
nop
mov
ja
movsl
lret
pusha
in
in
aas
filds
bnd
add
add
dec
add
test
jp
cmpsb
sub
subl
call
or
rcl
pop
and
iret
jge
mov
stos
xor
in
test
xorb
daa
mov
mov
jl,pt
cmpb
sbb
adc
push
inc
jmp
lods
xchg
push
in
mov
add
and
push
push
or
rorl
imul
shl
xor
orb
jmp
jg
test
xchg
mov
leave
push
test
add
jg
push
push
cmp
pop
flds
dec
xchg
adc
add
fdivl
dec
loop
shl
xor
adc
jge
cmp
inc
xchg
fnsave
and
and
test
sub
test
cli
inc
shll
jno
test
test
sbb
sti
jmp
jg
cmc
and
cmp
dec
cmc
lods
mov
cmp
jae
loop
and
dec
jg
mov
lret
and
mov
pop
jo
xchg
je
sub
push
repz
pop
in
xor
xchg
andl
sbb
sbbb
xchg
es
mov
inc
outsl
xlat
xchg
cmpsb
fnstcw
jl
scas
loop
xchg
adc
cmp
sbb
xchg
repz
mov
adc
add
xor
lods
xchg
jno
mov
leave
outsb
mov
push
test
addr16
fistl
movsl
filds
fcmovnb
and
shl
add
subb
fwait
xor
ret
add
movsb
pop
jp
mov
push
lret
outsl
jecxz
je
jmp
cld
cmp
cli
and
loop
icebp
ds
sbb
in
fistpll
int3
jmpw
dec
xor
mov
fadd
xchg
dec
or
add
xchg
ret
push
inc
and
push
fdivrs
andb
ret
lret
in
dec
sbb
or
lcall
ds
clc
jg
cmp
add
dec
scas
pop
or
scas
sbb
dec
mov
dec
pop
psubq
sbb
dec
popa
daa
mov
and
cmpsl
push
xor
aad
icebp
fs
aas
fcos
xor
das
scas
decb
outsl
mov
addl
mov
xor
fldcw
or
mov
bound
aam
jo
faddl
xchg
fcoml
pop
jecxz
aaa
test
jp
push
mov
ja
xor
lea
and
leave
pushf
sub
inc
test
or
imul
inc
jg
dec
in
push
mov
xorl
rorl
xchg
out
cmovp
xor
outsb
test
cmp
mov
jle
jo
push
adc
and
dec
cs
daa
jbe
mov
pop
inc
lods
add
lahf
sub
pop
in
cmp
insb
pop
add
cmp
jnp
leave
push
xchg
inc
or
jno
sbb
mov
add
jnp
imul
jecxz
mov
pop
push
movsb
cmp
adc
mov
jbe
or
out
cmp
add
cld
clc
inc
jo
sbb
xchg
lahf
pop
xchg
pusha
les
cmp
push
in
jecxz
mov
mov
scas
dec
mov
mov
enter
or
jbe
push
data16
xchg
mov
fadd
inc
mov
xchg
js
push
out
inc
cmp
cwtl
cmpl
adc
jnp
push
add
and
mov
sub
jle
pop
sub
arpl
mov
and
test
ja
loope
jge
mov
roll
out
ret
xor
imul
hlt
or
jnp
cwtl
sti
cmp
jecxz
movsb
xor
xor
cmp
push
out
lret
push
ret
lret
adcb
sbb
inc
pusha
outsl
sbb
push
push
sahf
and
leave
idivb
or
push
cmpsl
xor
mov
mull
aam
pusha
mov
cs
popa
inc
in
jp
jg
lret
mov
push
cmpsl
push
mov
cmp
clc
jecxz
mov
dec
add
stos
jl
enter
mov
cmpsl
inc
or
mov
ret
stc
inc
jmp
xchg
lods
rcr
fldlg2
es
loopne,pt
and
and
nop
xchg
xlat
and
push
repz
jmp
out
aaa
xchg
popa
int
scas
gs
mov
pop
cmp
out
and
stc
jp
data16
punpckldq
mov
xchg
jno
sbb
xchg
out
push
leave
inc
sub
or
in
xor
jne
sti
adc
fbld
sbb
sbb
mov
fsin
imulb
ss
sub
popf
xchg
jno
or
ss
dec
xchg
sti
xchg
addr16
mov
xor
stos
or
sub
rol
push
pop
hlt
cmp
inc
push
inc
addb
je
sub
data16
lret
jnp
imul
iret
mov
sub
mov
cmc
adc
sbb
cmp
rcr
xor
dec
idivl
adc
aaa
imul
ss
jns
fisubrs
int3
xchg
int
fsubs
shlb
add
pop
out
inc
fsts
gs
imul
add
outsb
frstor
pop
cmp
mov
fdecstp
in
test
cltd
push
ljmp
inc
in
sbb
inc
in
xchg
add
cmc
add
lcall
push
testl
push
inc
push
pop
xor
add
or
or
sti
dec
jg
bswap
cmp
sbb
int3
fcmovnb
mov
orb
adc
lret
lods
enter
xchg
in
enter
jo
les
daa
xchg
mov
jnp
mov
and
and
xchg
sub
sbb
pusha
push
out
jb
inc
xor
aam
ret
dec
pop
mov
mov
mov
cmp
repnz
in
dec
pop
les
sbb
scas
mov
sarl
inc
xchg
subb
outsl
sahf
and
std
daa
rcll
rcrl
shl
movsl
das
jne
push
lret
xor
cmp
adc
fcomip
sub
icebp
aad
aaa
inc
sub
sbbb
mov
sti
stc
mov
add
and
mov
inc
aaa
xor
adc
lahf
test
or
pop
pop
add
jl
sti
xchg
arpl
or
mov
imul
cli
push
mov
mov
or
outsl
push
movsb
ja
out
mov
clc
adc
out
xor
aam
nop
pop
jl
orb
adc
iret
fxam
lret
in
xor
js
stos
mov
dec
cmp
leave
lock
xchg
xor
xor
daa
shrb
lods
outsb
pop
leave
jnp
pop
int
fst
lret
fcompl
mov
cmpsl
add
jae
popa
xchg
mov
lcall
or
mov
lds
pop
lods
lcall
or
fiadds
push
cltd
cli
sbb
sub
cltd
lret
xchg
mov
or
cmp
in
sbb
or
out
out
sub
dec
add
nop
mov
dec
pop
and
dec
lahf
clc
mov
std
or
inc
jno
sub
adc
push
or
adc
sarl
jge
das
fs
add
push
dec
in
gs
sbb
adc
cmp
scas
adc
or
repz
push
dec
pushf
xchg
and
adc
mov
addr16
mov
call
dec
mov
push
fidivl
out
cmp
jns
sub
push
adc
sub
hlt
jge
loop
sub
or
scas
push
xorl
lods
push
xchg
gs
daa
xor
les
xor
adc
pop
xor
or
outsl
rep
and
je
sahf
outsb
xchg
popa
lds
adc
loope
sahf
sar
pop
cmpsb
cld
popf
gs
sub
lods
in
pop
and
mov
push
mov
and
loopne
callw
dec
mov
add
shrb
repz
orl
jmp
mov
push
call
add
xchg
and
rcl
add
loop
push
adc
mov
inc
bound
add
lcall
je
out
into
bound
ljmp
xchg
adc
mov
jl
aam
sub
or
das
aad
and
xor
nop
notl
xor
fnstsw
xchg
loopne
adc
addb
ds
cmp
add
testl
sbb
ja
xor
insb
dec
mov
mov
test
add
fimull
in
ds
lahf
inc
std
sub
mov
ljmp
les
xor
dec
mov
pop
xchg
mov
jb
repnz
out
mov
movsl
mov
icebp
cmc
mov
dec
dec
add
inc
in
out
repnz
mov
sub
pop
push
jno
dec
or
mov
adc
fcoms
in
andl
jmp
test
cld
icebp
in
sub
add
inc
fdivrs
dec
or
dec
ficomps
adc
scas
adc
sti
lods
test
xchg
hlt
push
pop
hlt
pop
cmp
arpl
scas
in
push
in
cmp
pushf
ficompl
dec
adc
xor
ret
repnz
sbbl
popf
popa
movsb
inc
arpl
out
inc
enter
mov
repnz
scas
rcrl
pop
test
shlb
and
xchg
std
inc
mov
mov
minps
jg
pop
pop
adc
jbe
adc
sahf
adc
push
pop
push
stc
jb
push
mov
enter
es
add
add
ret
pop
sbb
icebp
les
xor
fbld
xchg
dec
inc
cmp
mov
pusha
dec
sbb
aam
mov
pop
dec
sbb
inc
xchg
cmp
mov
jmp
dec
lret
fdivr
int3
cmp
and
adc
and
pop
push
in
cltd
add
push
int3
mov
and
rorb
sbb
xchg
add
xor
pop
adc
ret
bound
fldl
and
stc
call
mov
fndisi(8087
xor
pop
pop
mov
fcoms
pop
cmp
sub
cmp
popa
sahf
mov
sbb
fwait
jo
dec
daa
popa
mov
pop
mov
pop
aas
cmp
fdiv
pop
fistpll
xor
clc
push
loop
adc
out
lahf
xchg
test
sub
jecxz
rcrl
data16
ds
jbe
das
mov
ror
cli
pusha
loop
insb
jg
cli
cmpsl
out
out
std
xlat
inc
daa
sub
xor
and
lahf
and
pop
mov
imul
je
cmp
adc
sbb
test
fwait
mov
sarl
sti
sbb
cmp
xlat
gs
dec
out
jbe
mov
mov
sub
stc
negl
outsl
addr16
jno
jmp
test
das
jo
jmp
sbb
inc
ljmp
inc
inc
jmp
ds
mov
pop
std
xor
push
pop
jnp
cmp
push
lahf
aas
out
xchg
cmp
cmp
jecxz
and
repz
xor
inc
cltd
out
xor
stc
lret
lret
add
lods
fwait
xchg
rolb
popa
shll
jmp
add
vcvttsd2si
nop
sbb
adc
and
cmp
enter
stos
jbe
lcall
xor
loope
sti
inc
mov
pop
repnz
loope
sub
frstor
pusha
cmp
cs
cli
ss
lods
iret
adc
lods
mov
mov
scas
adc
std
hlt
lret
fwait
or
cld
cmc
mov
movsl
out
mov
adc
mov
mov
out
arpl
sub
inc
shr
jecxz
lods
dec
inc
into
fsubrl
out
outsl
xchg
sub
or
movsl
pop
cmp
mov
cmc
mov
js
pop
xchg
adc
into
pop
push
jb
and
xchg
cmpsb
mov
mov
mov
shrb
or
call
cltd
imull
xor
cltd
cmpl
adc
jno
xchg
hlt
sub
out
mov
xchg
cltd
mov
inc
in
lret
pop
pop
xorb
stc
add
push
dec
adc
loope
call
stc
inc
sti
pop
scas
dec
xchg
fbld
xchg
jbe
out
mov
pop
stos
gs
pop
cmp
pop
out
fnstenv
jg
mov
cmp
xchg
leave
rol
test
or
jne
scas
or
popf
fisubs
cmp
adc
in
ds
fadds
xchg
jle
sbb
cs
mov
xor
jmp
repnz
ficoml
xor
imul
call
mov
idiv
mov
aam
cmc
or
mov
rorb
pop
sub
push
repnz
lahf
daa
aaa
sbb
add
loopne
xor
jmp
push
inc
or
mov
lea
imul
xor
mov
xchg
jns
fisubl
mov
and
and
mov
or
test
mov
mov
adc
dec
mov
jns
push
mov
hlt
adc
ja
fwait
pop
call
out
pop
push
push
xor
mov
cmc
pop
in
imul
outsb
loop
pop
ljmp
mov
jecxz
inc
and
ret
cmc
mov
mov
inc
orb
pop
sahf
adc
test
add
dec
cmp
pop
xor
enter
jns
inc
add
sbb
stos
mov
addb
dec
mov
mov
into
ljmp
xor
aam
fdivrp
decb
jnp
lock
mov
enter
or
addr16
adc
and
push
jmp
sub
stos
xchg
inc
mov
icebp
adc
and
ds
pop
jp
inc
das
cmp
push
outsl
inc
jne
sbb
movsb
and
sbb
insl
mov
pop
jae
inc
jmp
xchg
negb
pop
aad
int
cmp
lahf
out
xadd
divb
mov
inc
testl
inc
cmp
mov
xor
lcall
fsubr
lret
leave
clc
adc
jo
and
dec
push
mov
jmp
fstpl
or
jg
adc
push
and
test
dec
adc
dec
mov
mov
pop
mull
sub
repnz
mov
lahf
sarb
or
mov
mov
andl
dec
mov
dec
and
push
lret
and
or
sbb
inc
or
lods
adc
inc
cmpsl
and
ret
or
jecxz
mov
cmp
mov
jns
jnp
pusha
mov
jp
rolb
aas
mov
mov
xchg
push
xchg
mov
mov
pop
jmp
cmp
aad
lods
ret
int3
lock
add
js
adc
fstpt
push
mov
ret
fxch
scas
cmpsl
and
loop
int3
jbe
mov
lods
dec
out
fucomp
mov
sub
ret
inc
icebp
push
fs
lods
add
fldl
inc
jb
adc
mov
lahf
daa
mov
ret
cmc
xchg
gs
test
adc
inc
loopne
mov
dec
push
out
daa
or
fwait
popf
mov
xlat
or
cmc
mov
sub
std
adc
int
nop
cmp
xor
out
ja
ret
xor
test
jle
cs
push
sub
sub
jae
dec
sbb
pop
scas
mov
fldcw
aas
popa
mov
sub
cmpsb
shll
xor
dec
push
push
nop
into
adcl
add
lds
push
pop
mov
mov
jl
sub
rcl
out
mov
ficoms
sbb
and
movsb
mov
mov
rorl
mov
mov
mov
sub
add
sbb
mov
add
imul
dec
adc
mov
push
jo
mov
daa
dec
inc
ljmp
aas
in
fimull
mov
js
mov
ja
sbb
test
les
enter
fiaddl
int
test
dec
sub
in
cld
and
ror
pop
mov
int
sar
mov
cmp
lds
jns
mov
inc
test
cmp
pop
xchg
out
pusha
loop
clc
icebp
fisubl
xchg
dec
pop
fdivrs
ret
nop
scas
dec
cmp
push
out
out
outsl
xor
lds
dec
sbb
jecxz
das
subb
dec
and
jecxz
outsb
scas
xchg
cmc
pop
mov
js
dec
fidivl
inc
insb
push
xchg
mov
mov
push
call
fstpl
pop
mov
xchg
mov
pushl
dec
in
pop
fstl
xor
mov
cwtl
add
sub
int3
addr16
lds
sbb
aas
mov
aas
aam
outsb
sbb
stos
aam
scas
test
jnp
int3
dec
push
cmp
pusha
cmp
sbb
jl
dec
daa
lods
sahf
dec
fwait
adc
jae
andl
or
lock
jle
push
push
popa
stos
inc
shrl
dec
xor
sbb
pop
mov
fwait
add
cmpb
push
inc
push
push
xlat
inc
add
popa
add
cmpsb
mov
pop
in
mov
xlat
xchg
pop
out
mov
xchg
adc
out
mov
repnz
data16
sti
movsb
stos
ficompl
dec
cmp
xchg
call
lret
outsb
xchg
pop
js
lods
and
lods
leave
rol
and
bound
in
pop
daa
push
fdivl
sbb
imulb
insb
sub
insl
outsb
stc
into
rclb
mov
arpl
outsl
jae
push
negl
jmp
pop
xchg
xchg
rolb
stc
ds
sbb
jmp
bound
in
mov
lock
outsl
fwait
ljmp
lods
in
sbb
mov
sub
outsl
or
lea
and
popf
cmp
cmp
negb
inc
pop
rcrl
ljmp
cli
ds
insl
lods
int3
mov
xchg
xchg
inc
pusha
adc
jl
xchg
lock
mov
test
test
stos
jmp
retw
in
sub
mov
push
sbb
push
cmp
mov
in
pop
pop
mov
jl
test
mov
lods
mov
shlb
repz
xorb
sub
ret
mov
ficomps
movsb
add
mov
cmp
pop
push
push
lds
shlb
aaa
fldenv
sub
fsubrs
ss
xchg
mov
add
xchg
stc
jbe
or
fidivl
push
cli
std
adc
aam
cmc
jp
loopne
scas
dec
dec
or
push
inc
jg
cmp
mov
adcb
fsubl
fsubrl
ror
cmp
lcall
jle
push
cs
cmp
pop
cwtl
stc
icebp
xor
and
out
mov
out
out
dec
sub
cltd
call
adcw
fsubrl
inc
mov
xchg
cs
or
cmp
pushf
dec
dec
add
test
adc
pop
dec
push
in
dec
xchg
push
push
dec
repnz
sub
fisttpll
dec
aam
hlt
fistl
dec
add
mov
add
xor
mov
test
pushf
mov
ja
lds
scas
lcall
scas
cmc
andl
mov
icebp
insl
pop
hlt
pop
psrad
shl
and
lods
xchg
mov
pop
add
mov
push
xchg
xor
imul
pop
fldenv
or
xor
sahf
mov
inc
mov
and
cmp
into
insl
pop
lret
add
cmc
les
cwtl
loopne
imul
push
adc
sbb
mov
call
and
fiaddl
ljmp
mov
lahf
xor
gs
or
push
push
jo
mov
out
inc
jge
and
xor
int
dec
lds
aas
addr16
sub
and
cmp
sub
and
in
xor
addl
and
pop
out
repz
and
xor
cmp
stos
mov
arpl
inc
jmp
daa
repnz
or
outsb
popa
pop
hlt
andl
mov
dec
in
je
and
cwtl
cmp
bound
push
adc
cwtl
xchg
ja
in
mov
or
out
out
stos
std
cltd
push
incl
subb
in
jl
mov
mov
aaa
rcrb
cld
sub
dec
jmp
pop
jecxz
add
mov
sub
sbb
enter
aaa
mov
inc
cs
mov
sbb
mov
and
push
xchg
mov
out
jns
push
ja
cmp
dec
push
jno
adc
push
inc
xor
daa
jl
data16
out
test
adc
dec
push
into
mov
fs
fsubr
jp
not
imul
push
xlat
pushf
add
pop
das
mov
add
stos
test
dec
aad
call
clc
push
cltd
pusha
jle
es
xor
inc
shlb
into
fiaddl
or
dec
mov
inc
pop
lea
ljmp
int
mov
push
jmp
adc
loopne
jns
jb
fwait
xorl
movsl
int3
push
sbb
add
cltd
test
xlat
lcall
lea
adc
cwtl
add
mov
jne
sbb
jmp
cmp
daa
mov
ja
outsb
fsub
lret
leave
in
sub
xlat
pusha
mov
test
jno
add
push
mov
mov
dec
aam
xor
jne
cmp
stc
pop
cld
scas
mov
push
outsl
repz
sbb
cltd
daa
stos
mov
scas
call
dec
add
mov
lods
pop
fxch
push
xor
into
aad
jmp
jns
cmpl
cmp
jge
dec
aaa
and
push
outsb
mov
mov
int
dec
push
xchg
loopne
add
sub
out
and
dec
adc
dec
pop
call
scas
cmp
jmp
xchg
ja
testb
xchg
jle
sub
lds
xchg
movsb
les
adc
sub
mov
mov
jl
push
sbb
mov
in
xchg
lret
gs
mov
inc
push
aaa
lret
mov
fs
lcall
fnstenv
sarl
cmp
push
insl
pop
out
rcll
mov
out
push
cli
jo
leave
out
aam
and
xor
popa
lcall
bound
fidivl
push
shlb
nop
enter
ss
mov
xchg
sbb
sbbb
mov
sub
mov
inc
psllw
popa
pop
ljmp
push
shrb
push
aaa
jge
cmpps
enter
test
or
mov
fadd
cmpb
repnz
ss
pop
mov
xor
cs
xchg
jl
mov
lock
loopne
xor
pop
inc
fs
xchg
push
dec
fbstp
lret
inc
dec
inc
add
adc
jne
bswap
decl
mov
leave
add
daa
insb
xor
pop
push
cmpsb
out
cli
sbb
shl
add
and
in
jns
sti
lods
xchg
out
leave
aam
inc
unpcklps
cmp
or
pusha
outsb
lock
fcomps
loope
xor
sbb
in
adc
addb
cmp
add
and
and
add
xchg
in
push
pop
test
insl
test
mov
xor
in
add
lock
adc
sbb
jg
fwait
adc
cltd
and
repz
and
or
mov
add
xor
or
inc
movb
or
mov
xor
add
pushf
inc
jb
ljmp
push
shll
or
cmpl
iret
aam
jle
adc
push
insb
mov
andl
adc
jecxz
dec
dec
outsl
mov
fildll
mov
jnp
push
push
out
xchg
mov
out
scas
mov
xchg
fistpll
sbb
dec
arpl
mov
repnz
mov
in
jo
cvtpi2ps
inc
dec
mov
stos
xchg
out
pop
push
mov
cwtl
adcb
hlt
aas
sbb
insb
jle
mov
cmpsb
ljmp
dec
adc
sub
popf
pop
icebp
xchg
inc
aas
outsl
push
push
test
xorl
popf
repnz
data16
jl
pop
je
cs
idivl
sub
and
xchg
and
out
jns
jmp
fwait
sarl
pop
lea
jne
insb
or
dec
cmp
cmpsl
fbld
mul
xor
xchg
xchg
cmpsl
mov
xorl
ja
dec
xor
fs
jp
sarb
mov
loopne
cmpsl
xchg
push
ds
mov
mov
ss
mov
jo
mov
jns
dec
insb
hlt
mov
aam
in
in
std
adc
insl
dec
cmc
popf
adc
mov
fmuls
xor
cmp
jle
xor
movsl
lods
in
xchg
push
pusha
jne
int3
repnz
xchg
int
push
stos
imul
mov
push
and
icebp
push
fwait
aam
nop
mov
mov
loopne
cmpsl
mov
pop
sarl
xchg
pop
gs
add
mov
ret
pop
xorl
or
jg
movsl
popf
scas
sub
sbb
pop
cmp
fwait
out
stos
pushl
add
stos
xor
lods
pushf
inc
mov
ds
ja
popf
icebp
mov
test
gs
jns
out
adc
aas
test
pop
test
into
insl
cmp
leave
dec
movsb
aaa
testb
shl
dec
push
lods
sub
fsts
lahf
ret
lds
shrl
lds
and
mov
andl
xchg
clc
loop
mov
rcll
adc
push
leave
sbb
ljmp
jne
je
sti
hlt
inc
or
mov
fucomp
bound
insl
mov
adc
mov
inc
mov
mov
mov
or
dec
inc
aad
add
xor
cltd
xor
call
movsl
js
lds
iret
sub
fidivl
pop
lea
push
mov
sbb
repz
stos
rorb
xchg
imul
lcall
scas
daa
cwtl
out
cmp
call
rcrb
xor
lahf
fsubr
mov
lods
in
shl
inc
mov
movsb
or
xchg
int
or
mov
lea
add
pop
icebp
xor
pop
mov
jnp
loopne
or
mov
out
push
ja
push
xchg
push
mov
in
sub
shrl
out
scas
iret
pop
mov
pushf
mov
inc
rclb
not
mov
fsts
adc
xor
dec
mov
pushf
orl
pushf
scas
sarb
sbb
aam
in
mov
mov
scas
xor
cmpsl
ret
in
xchg
cmp
cmc
add
lret
or
sbb
jo
adc
int3
jo
out
xchg
pop
dec
cmp
mov
xor
roll
mov
mov
add
iret
cmp
iret
pop
or
mov
adc
incb
jg
aad
and
test
movlps
sbbl
shrl
lds
js
inc
out
stos
std
cmpsb
mov
mov
cmp
push
inc
inc
push
jg
mov
data16
ds
pop
cmpsl
xchg
flds
insl
or
add
shrl
push
addr16
test
adc
xchg
push
in
dec
inc
jmp
mov
push
sub
and
jno
repnz
jg
xchg
add
and
jg
xchg
aas
andb
jb
lahf
cmpsb
out
cmp
mov
xchg
and
xchg
ljmp
sarb
dec
iret
inc
push
and
sti
dec
mov
mov
jns
mov
push
negb
ljmp
pop
mov
sub
loopne
arpl
lahf
mov
inc
sbb
repnz
or
repz
mov
jo
xor
lds
insb
test
out
or
aaa
out
jne
or
call
cmp
cmpsb
ss
xchg
aam
pop
cmp
inc
jle
aaa
out
inc
out
ljmp
loop
imul
addr16
cmc
aad
push
in
add
inc
xor
ljmp
push
jl
sbb
outsb
and
or
jb
imul
cmp
enter
xor
loop
outsb
sar
fldl
mov
push
iret
cli
iret
ja
fadds
idivl
lods
insb
adc
sub
jp
test
test
mov
es
in
push
pop
insl
cmpsl
add
inc
dec
fstpl
lods
out
addr16
lods
movsl
mov
mov
gs
outsb
lret
in
xlat
lds
decb
into
mov
ficoms
inc
fstpl
fisttpll
roll
cltd
shrl
insl
sub
add
push
pop
sub
sub
decl
sub
xor
push
je
xor
mov
push
mov
or
sbb
insl
faddl
pop
fimull
or
lods
jo
js
add
iret
push
mov
sub
dec
arpl
push
iret
pop
testb
adc
mov
xchg
idivb
sahf
stos
mov
jg
sub
sub
sbb
jp
cmp
call
aaa
ja
fwait
pop
adc
ds
loop
mov
stos
push
and
pusha
push
push
cs
sahf
push
in
into
inc
xchg
gs
xchg
scas
outsb
xor
movq
sub
pop
and
xchg
or
adc
test
push
lret
and
incl
mov
popa
subl
hlt
loope
inc
and
leave
sbb
mov
add
out
mov
inc
imul
out
mov
std
pop
adc
fwait
push
repnz
push
insb
xor
sub
repz
push
push
movsl
repnz
or
add
mov
call
push
inc
icebp
xchg
cmp
cltd
mov
test
in
stc
out
mov
lods
leave
and
mov
inc
sahf
sub
imul
outsb
in
pop
jne
scas
dec
pop
and
std
adc
xorb
jge
out
xchg
jecxz
xchg
or
stc
outsb
add
pop
jl
rcr
cmp
pushf
fldl2t
push
loop
in
testb
test
adc
in
cmp
iret
pop
mov
imul
pusha
mov
aam
inc
shr
and
mov
inc
mov
mov
or
mov
hlt
mov
pushf
push
push
push
pop
iret
cmpsb
or
sbb
or
leave
pop
roll
xchg
pop
jmp
inc
dec
inc
sbb
xor
or
incl
ja
shlb
and
inc
sti
movsb
sti
lock
jae
or
inc
cmp
outsl
pop
ret
ds
dec
xchg
sti
lahf
and
cmp
mov
test
imul
lahf
mov
and
imul
testl
je
fisttpl
movsl
pop
subb
xor
dec
sub
jno
push
lea
mov
lret
sbb
sti
sti
sbb
jnp
add
or
sbb
lret
stos
jns
lods
je
cmp
and
imul
repz
enter
into
fisttpl
in
aam
mov
xchg
xlat
loopne
cmp
ret
xchg
in
sub
and
sbbb
mov
leave
mov
ja
dec
jmp
lods
or
int3
pop
pop
add
sbb
cmpsb
pop
lods
jl
sub
je
dec
hlt
fstpl
push
jb
addr16
stos
and
aas
xchg
jle
test
fs
leave
mov
pop
test
cwtl
les
inc
cltd
sbb
stos
sub
xor
imul
push
gs
inc
imul
pushf
mov
js
push
pop
xchg
repnz
jbe
or
pusha
jge
xchg
test
xchg
jae
scas
mov
xchg
mov
pop
sub
lock
lods
mov
or
je
cs
icebp
mov
jbe
scas
and
xor
inc
imul
pop
mov
sbb
scas
fdivl
data16
xchg
sub
mov
adc
xor
js
wrmsr
out
les
jno
jnp
out
xchg
ret
out
in
fisttpl
cmp
sub
bound
xchg
jbe
fs
sbb
es
lret
push
imull
add
and
popa
push
lcall
mov
add
enter
inc
cmpsb
into
adc
orb
ja
mov
ss
mov
int3
movsb
cmp
xchg
mov
scas
mov
sbb
ja
dec
lret
in
add
inc
pop
lods
repnz
mov
repz
sbb
hlt
pop
pop
pusha
inc
nop
mov
push
or
insl
scas
outsl
dec
ljmp
cmp
shlb
push
dec
outsb
dec
push
xchg
leave
mov
pushf
pop
jo
cltd
out
mov
pop
andl
jecxz
cli
sub
les
cs
jno
fisttpl
lods
sbb
icebp
jno
vandnps
cwtl
out
mov
movsb
aas
lock
lret
jp
out
movl
nop
cmp
int
in
dec
xchg
aad
cs
xor
lahf
dec
adc
cmp
scas
jmp
test
cmp
mov
out
out
adc
xor
repz
fcoms
or
rorl
push
mov
or
ds
pop
jg
ror
int
inc
lds
jne
idivb
cmpsb
mov
fs
outsl
push
movsb
jl
das
dec
out
cwtl
movsl
aad
push
outsb
sub
mov
out
pop
fildll
shr
and
mov
dec
cmpsb
test
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
or
add
daa
aam
jb
inc
jns
pop
insb
xor
or
add
add
mov
call
jmp
mov
pop
mov
mov
sub
adc
sub
mov
sub
jmp
leave
into
out
cld
test
add
add
sub
call
fildll
push
xlat
les
cs
pop
gs
pop
add
mov
dec
jne
mov
jmp
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
jmp
lahf
in
mov
mov
test
xor
imul
ljmp
mov
push
and
fstps
mov
stc
add
mov
mov
mov
add
add
in
out
or
add
jg
xor
enter
aaa
dec
push
popl
xor
xor
jmp
test
inc
add
hlt
or
out
inc
xchg
cld
xchg
xor
cld
sub
mov
sub
in
stos
sub
sub
mov
lcall
adc
jbe
inc
lahf
ret
pop
into
and
lcall
ja
ret
out
sbb
xchg
xor
arpl
fstps
outsb
test
and
notb
xor
imul
in
and
leave
sbb
jnp
pop
jb
movsl
jno
mov
adc
fwait
add
or
fnstcw
push
mov
pop
dec
in
sbb
jp
pop
mov
inc
mov
mov
pop
movsl
pop
push
in
loop
out
fldcw
adc
icebp
inc
test
cmp
add
outsl
jecxz
fldcw
xor
or
push
mov
add
or
xor
daa
arpl
lret
out
inc
test
push
fisubl
bnd
jno
mov
movsl
jno
pop
bound
sar
stc
outsl
pop
pushf
imul
xlat
mov
movsb
jno
lock
push
mov
xchg
cmp
in
push
std
int
cmp
mov
jp
xchg
shll
in
std
xor
decl
cmc
push
ds
fisttpll
pop
inc
in
push
dec
ret
cmc
push
ds
cld
fiaddl
in
push
enter
mul
out
pop
inc
pushf
outsb
adc
movsb
sti
mov
xchg
lcall
fnstcw
mov
cmp
fdivs
dec
sar
ficoml
outsb
sbb
test
push
fnsave
pushf
jo
inc
push
jb
ds
in
cmp
in
push
xor
push
add
inc
in
push
test
mov
and
xchg
adc
jle
ds
xchg
pop
add
sub
pop
mov
pop
sbb
js
adc
xor
mov
pop
and
and
jmp
cmp
stos
out
mov
dec
adc
adc
lods
lods
and
jecxz
hlt
cmp
or
daa
adc
lods
lods
and
lods
and
lods
and
pop
or
icebp
aas
dec
adc
or
cmp
xlat
sub
inc
test
lods
xchg
rorb
inc
loope
pop
cmp
sub
notl
movl
or
push
lods
and
cs
and
aam
cs
and
and
cs
das
xor
and
lods
or
add
stos
pop
and
lods
and
cs
mov
stos
mov
and
and
pop
int
cmp
xor
lods
test
insb
das
lods
and
xor
cmpsl
int
and
imul
repnz
and
insl
xor
mov
and
js
lods
pop
xor
lods
and
das
and
fdivl
xor
insl
sti
and
daa
mov
arpl
scas
xchg
mov
dec
mov
lods
and
stos
inc
je
lods
lock
scas
js
mov
and
das
cmp
and
cwtl
and
lods
stos
loope
or
test
cmpsl
xor
lods
test
gs
lods
and
sbb
and
cs
and
jle
cmp
stos
and
andb
xor
and
lods
and
out
and
lods
and
lods
ljmp
mov
test
mov
and
mov
push
in
jo
jge
jo
and
ds
lahf
ljmp
test
in
jo
mov
and
mov
es
aas
jl
popf
daa
test
in
push
pusha
mov
sub
xchg
and
and
in
jo
outsb
pop
cs
sub
mov
pop
and
lods
and
pusha
and
xchg
and
and
in
jo
mov
mov
mov
pop
and
lods
and
pusha
and
xchg
and
and
in
jo
mov
push
push
test
cmp
stos
jmp
nop
mov
mov
lods
and
popf
daa
test
in
push
pusha
mov
sub
xchg
add
and
lods
adc
icebp
xorl
cmp
scas
adc
mov
xor
jns
and
stos
and
jo
and
stos
cmp
xor
jns
test
stos
and
dec
sbb
stos
stos
xchg
add
jo
and
lods
and
lods
and
and
dec
and
xor
mov
or
cmpsl
cmp
mov
xor
push
adc
fistps
scas
and
lods
mov
test
test
cmp
cmpsb
and
scas
popa
and
out
mov
add
daa
lds
xor
push
pop
das
xor
jmp
push
inc
mov
mov
dec
jmp
push
push
test
jmp
ja
arpl
xor
mov
xor
test
push
mov
popa
loop
mov
sti
cmp
sub
inc
repnz
fldt
xchg
mov
mov
outsl
cltd
imul
out
lret
adc
xchg
stc
call
cmp
bnd
jbe
pop
fs
lods
and
lods
and
lods
and
lods
and
lods
and
lods
and
lods
and
sub
cld
and
and
lods
and
lods
and
lods
and
lods
and
lods
and
lods
and
lods
and
lods
and
lods
and
shll
adc
xchg
mov
adc
sti
pop
add
or
in
shrl
addr16
cmpsl
adc
pushf
popf
pop
insb
shl
dec
iret
cs
xlat
dec
mov
es
add
es
xchg
sub
sub
xchg
test
cmc
pop
ss
pop
inc
and
dec
push
repnz
adc
sbb
add
push
and
rorb
pushl
test
into
clc
movsl
sub
bound
adc
mov
mov
inc
sub
fidivrs
lahf
test
cmp
fidivs
insl
or
repz
cld
mov
jmp
lcall
add
or
xchg
mov
xchg
pop
std
pop
xchg
push
adc
fimuls
jbe
mov
and
jge
decb
and
sahf
pop
cmp
in
xor
jmp
iret
sub
dec
xor
cmp
mov
pop
xchg
out
push
sbb
shll
or
jl
rol
popf
icebp
shrb
fs
cld
sti
out
mov
std
loop
lcall
in
rcrl
mov
stos
push
cmpsb
or
jnp
shlb
xchg
and
dec
dec
jno
aad
push
mov
dec
loopne
mov
test
mov
add
pop
je
out
popa
les
faddl
icebp
push
and
mov
sub
or
xchg
imul
dec
popf
aaa
hlt
pop
hlt
mov
mov
push
lds
imul
addr16
mov
fistps
xchg
stos
int3
pushf
insb
cwtl
ret
pushf
sub
cwtl
pop
push
mov
test
pop
pop
into
sti
int3
or
ljmp
inc
fildl
add
adc
pushf
xchg
xchg
shrl
scas
sbb
mov
push
lods
and
stos
and
jle
aas
cwtl
cmp
inc
stos
or
sbb
fs
push
pushf
test
lods
mov
ds
mov
jo
das
and
xchg
mov
ja
mov
movsl
scas
sbb
dec
push
push
mov
inc
dec
jbe
int3
inc
add
adc
in
jbe
sub
ljmp
lret
add
and
lret
xlat
xor
int3
and
das
inc
js
xchg
add
fs
nop
lret
fildl
aas
push
cmc
rol
mov
test
adc
sahf
adc
aas
andl
sbb
out
dec
cli
cs
lcall
and
inc
adc
mov
xchg
sbb
es
imul
pushf
bound
jmp
jmp
in
xchg
push
inc
pop
jae
xor
jg
cmp
ret
jnp
mov
mov
add
and
add
add
add
fmull
add
fmull
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
fmull
add
fisttpl
add
fmull
add
or
or
or
pop
fisttpll
add
fisttpll
add
or
push
fisttpll
add
or
sub
or
jno
or
aaa
fisttpll
add
or
inc
fisttpll
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
or
add
add
leave
fisttpll
add
add
add
fisttpll
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
add
add
add
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
cwtl
imul
sbbl
nop
nop
nop
and
add
add
mov
mov
cmp
insb
fs
cmp
shll
subl
popl
scas
scas
scas
add
leave
sar
cmpl
jge
pop
aaa
int
push
out
push
dec
dec
and
dec
je
ret
and
inc
imul
jno
jno
in
fdivrp
in
fmul
jmp
aam
call
ret
mov
xchg
mov
mov
mov
ret
jo
mov
mov
xchg
xchg
xchg
or
in
sar
out
fst
in
fxch
ljmp
call
ret
sub
loop
jecxz
lods
pop
jge
jge
loopne
icebp
jecxz
out
jmp
enter
ret
jmp
sarb
jmp
jae
mov
xchg
add
fcomp
hlt
jmp
out
out
loopne
jmp
rol
jmp
sarb
push
in
jmp
jge
fcmovnb
lods
call
mov
popa
popf
xchg
mov
add
add
fcmovu
push
in
in
repz
sar
call
iret
mov
call
mov
inc
movsl
ja
jecxz
mov
shll
addr16
jbe
fcmovnu
in
jmp
jmp
jmp
int
in
mov
jmp
mov
in
frstor
fnstcw
push
inc
mov
push
or
push
push
ror
into
hlt
stc
hlt
icebp
push
icebp
in
push
in
in
jmp
int3
mov
jmp
enter
xchg
ljmp
mov
je
mov
push
jmp
scas
sahf
push
popf
pushf
fwait
push
loop
fsub
div
in
cld
imul
jmp
jmp
enter
ret
scas
jmp
lret
jecxz
xchg
fidivrl
pushf
call
mov
cli
cwtl
jp
mov
jecxz
jecxz
int
int3
jecxz
clc
ffree
mov
fcmovnb
test
call
mov
cltd
call
scas
xchg
ljmp
mov
add
call
movsb
mov
xchg
lds
lahf
shll
inc
fwait
jl
mov
jg
add
add
push
je
lret
movsb
test
inc
mov
test
mov
push
lahf
mov
jmp
add
repnz
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
pop
add
incb
add
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
push
dec
sbb
sub
pop
push
push
push
push
inc
cmp
stos
shll
push
loopne
pop
mov
aaa
push
outsl
popl
pop
push
push
adc
sub
outsl
mov
dec
mov
pop
sub
sbb
mov
filds
call
lods
dec
incl
xor
push
aas
aas
aas
add
arpl
jnp
jns
push
sbb
pop
add
add
add
add
add
inc
daa
test
xor
fdivs
push
fcmove
xchg
cmp
sbb
dec
dec
push
test
jle
sti
loopne
fidivl
cmp
push
add
movups
add
add
cmp
pop
cmc
cmc
cmc
call
ror
inc
mov
insl
mov
sbb
aaa
pop
pop
pop
add
outsl
add
sbb
test
scas
pop
mov
or
add
add
add
mov
in
dec
cmpsb
inc
ljmp
and
add
add
add
add
and
and
mov
in
in
call
int
ret
ret
mov
cld
jae
push
xor
pop
add
lret
lds
adc
mov
jg
add
inc
adc
in
in
in
sarl
shrl
or
add
add
jg
jg
push
push
push
jnp
hlt
hlt
fcom
sar
out
fst
jmp
int3
jmp
aam
fmul
mov
mov
popaw
cmpsb
and
and
cltd
mov
fstpt
xchg
add
add
hlt
rclb
rep
jmp
ret
ret
scas
dec
dec
dec
add
popl
sbb
sbb
call
ror
out
fst
in
fcmovne
in
fcmove
ljmp
fcmovne
mov
mov
imul
iret
jecxz
mov
rclb
cld
repnz
imul
popf
fistpll
inc
pop
pop
pop
add
lcall
sar
lock
out
in
fmul
in
fcmove
jmp
leave
jmp
jmp
iret
mov
dec
mov
mov
inc
lods
pop
mov
out
aad
fdivrl
hlt
add
add
add
pop
pop
xor
call
loope
loop
iret
out
loope
out
in
in
fcmove
jmp
enter
ljmp
call
int
call
ret
jmp
stos
in
xlat
mov
cli
idivl
pushl
add
add
aas
aas
add
xchg
xchg
mov
rcl
int
repnz
push
loope
out
loopne
out
fst
in
fcmove
jmp
ljmp
ljmp
jmp
iret
mov
cld
sti
mov
fistpll
fwait
sub
daa
sbb
add
add
icebp
icebp
fcmovu
in
aad
repnz
push
jecxz
out
loope
out
jmp
lret
jmp
aam
jmp
sarb
jmp
sarb
cld
cld
sar
lret
jo
shlb
test
lock
dec
dec
andl
lahf
add
add
add
and
or
call
into
push
jmp
icebp
in
push
loope
out
ljmp
jmp
rol
call
sarl
jmp
lret
out
out
push
out
lods
out
fistl
fadd
mov
fcmovnb
mov
sarl
xchg
in
push
dec
inc
jge
and
adc
add
add
dec
dec
outsb
icebp
icebp
icebp
call
rcl
ljmp
push
out
push
in
push
loop
out
fst
ljmp
call
sarl
jmp
iret
mov
fmulp
scas
sti
clc
mov
push
loop
call
lods
push
call
mov
mov
loope
mov
fcmovb
lods
call
mov
sub
inc
xor
add
add
add
add
add
iret
iret
jmp
rcl
into
push
in
out
hlt
jmp
push
call
fdivr
icebp
jecxz
in
fcmove
jmp
rol
jmp
sarl
jmp
into
mov
jmp
lret
call
idivb
call
mov
cmp
sahf
pusha
faddp
scas
jmp
lret
jecxz
mov
ffreep
stos
dec
mov
hlt
mov
frstor
add
add
jg
jg
addr16
out
out
dec
int
out
call
call
push
ljmp
icebp
in
ljmp
jmp
sarb
jmp
int
jmp
int3
mov
fadd
scas
clc
out
scas
jmp
int3
test
mov
mov
push
fsubl
dec
lods
mov
loop
scas
jmp
scas
jmp
lds
aam
andl
add
add
add
add
adc
sub
loopne
neg
fstp
call
rcl
clc
icebp
in
push
out
jmp
push
jmp
push
call
out
ret
rol
jmp
iret
mov
jmp
int3
mov
jmp
leave
mov
loop
movsl
std
divb
ljmp
lods
ffree
lahf
call
mov
incl
mov
test
jmp
mov
add
add
pop
add
out
dec
enter
out
ljmp
lock
imul
call
push
jmp
xlat
jmp
rol
jmp
iret
mov
jmp
lret
mov
jmp
leave
mov
fcmovnb
lods
push
loopne
jmp
rcll
mov
ja
faddp
lods
dec
mov
jmp
test
ljmp
xchg
xchg
addb
add
rcl
shl
call
rcl
stc
cmc
icebp
clc
repz
push
repnz
push
out
ljmp
ljmp
in
mov
jmp
int3
mov
jmp
mov
ffreep
mov
fld
mov
jmp
inc
and
lret
mov
fnstcw
ja
in
int
fnstenv
pushl
jae
leave
ror
leave
sbb
add
add
add
add
aas
aas
add
cmp
pop
mov
repnz
cli
div
stc
hlt
lock
clc
repnz
push
lock
cmc
out
call
in
jmp
into
mov
jmp
lret
loopne
mov
faddp
scas
fdivrs
fwait
std
icebp
movsl
std
rep
mov
nop
je
call
mov
fstpt
test
aam
mov
lret
negl
push
pop
pop
pop
add
push
push
sub
hlt
lock
stc
stc
cmc
repnz
clc
repz
icebp
in
push
out
ljmp
fst
jmp
int3
mov
jmp
mov
ffreep
mov
fadd
lods
jmp
into
xchg
stc
jecxz
push
fisttps
jmp
xchg
call
mov
lahf
fdivrs
fwait
call
mov
ljmp
push
rorl
add
add
scas
test
in
in
icebp
in
jmp
div
in
push
out
call
jmp
lret
loopne
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
fwait
call
mov
call
mov
mov
call
mov
call
mov
call
mov
inc
mov
inc
mov
mov
mov
xchg
xchg
mov
fcom
jecxz
out
repz
out
jmp
jmp
leave
mov
ffreep
mov
ffree
scas
fadd
lods
fstpt
cmpsb
fnstcw
fdivrs
sahf
call
mov
call
mov
call
mov
call
scas
nop
cltd
je
roll
add
add
add
mov
shl
out
fld
scas
cmc
ffree
mov
fadd
lods
fcmovnb
stos
fidivrl
movsb
call
mov
lahf
call
mov
call
mov
call
mov
call
scas
nop
call
lods
pushl
pusha
cmp
cmp
add
add
jp
push
dec
subl
mov
fdivrs
call
mov
call
mov
call
mov
call
scas
xchg
call
lods
dec
test
test
mov
mov
push
cmp
mov
push
push
daa
push
inc
xor
mov
xlat
mov
pushf
call
mov
call
scas
xchg
dec
lods
mov
into
test
dec
movsl
test
mov
push
xor
insl
push
sbb
es
mov
stos
mov
mov
dec
lods
dec
test
dec
movsb
test
rcrb
movsb
push
ds
arpl
inc
sub
pop
aas
cltd
lods
mov
movsl
xchg
enter
xchg
push
sub
addl
sub
jae
sub
lahf
lahf
lahf
add
lea
lock
add
add
add
incl
cld
pop
filds
pop
incl
add
incl
add
incb
add
cld
add
cld
add
aas
clc
add
aas
clc
add
jg
add
pop
lock
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
loopne
add
clc
add
paddd
add
incl
add
cld
add
incl
jg
inc
push
ljmp
add
add
add
add
add
add
and
add
add
andb
add
pop
pop
add
sub
push
cmp
pop
pop
pop
push
cmpb
cmp
inc
sub
mov
movsl
dec
in
xchg
aas
stc
mov
fiaddl
adc
pop
pop
pop
or
add
add
add
add
or
mov
leave
outsb
in
lock
lock
in
into
jo
in
popa
fnstsw
push
push
and
addl
pop
sbb
sbb
and
push
push
stos
xchg
dec
mov
adc
inc
add
xchg
mov
lret
jnp
sti
filds
out
iret
jae
shrl
cld
test
add
add
dec
dec
dec
add
push
push
adc
sbb
addr16
add
add
cmp
sbb
pop
xchg
daa
movsl
stos
mov
iret
aam
push
out
call
fisttps
mov
sbb
inc
add
push
add
stc
fldl
shrl
inc
fwait
jge
lret
add
add
adc
add
add
cmp
add
and
dec
mov
mov
ret
ret
ret
jmp
outsl
imul
clts
outsl
outsl
outsl
add
add
add
sbb
aas
mov
mov
pop
in
int
in
into
jo
mul
in
xchg
outsb
fs
xchg
or
add
or
outsl
add
int
pop
sti
fisttps
dec
mov
inc
sti
cmp
adc
add
inc
add
add
jg
jg
add
add
test
test
hlt
hlt
hlt
loope
loop
mov
stos
cld
insb
arpl
pop
cmp
add
pop
ja
ja
add
add
daa
daa
daa
add
jle
ss
mov
insl
pushl
mov
adc
add
inc
add
add
add
cmp
push
sub
cld
out
in
imul
cmpsb
inc
jmp
or
cmp
add
xor
add
sbb
jg
pop
pop
pop
add
inc
inc
je
lock
repz
leave
call
leave
mov
inc
mov
mov
test
adc
xor
dec
dec
dec
add
add
je
jle
inc
in
shlb
lea
mov
xor
inc
cmp
pi2fd
add
add
add
add
inc
cmp
xchg
idiv
jmp
fnstenv
ljmp
and
add
and
add
add
sub
sub
xchg
xchg
xchg
add
add
ret
call
in
in
ror
sar
leave
fmulp
ret
enter
ret
mov
pushf
icebp
popa
pop
pop
sahf
or
lock
xchg
mov
xor
fadd
xchg
sub
add
add
pop
pop
pop
add
mov
mov
fnstenv
dec
repnz
or
add
add
add
add
add
add
pop
pop
pop
add
add
add
or
pop
pop
pop
xchg
stc
stc
stc
out
out
out
dec
lret
lock
jmp
int
jmp
aad
fmulp
sar
mov
inc
mov
popf
negb
push
xchg
adc
adc
and
and
mul
icebp
les
dec
test
imul
add
add
add
sti
out
or
cld
hlt
lods
call
mov
pushl
add
pop
aaa
aaa
aaa
add
arpl
pop
pop
pop
add
aam
out
repz
fdivrp
leave
in
fst
in
fcmovne
in
fcmovne
jmp
lret
enter
lret
mov
dec
mov
stos
ljmp
push
dec
xchg
adc
mov
cltd
in
jle
ret
cmc
loopne
mov
add
repz
repnz
sti
cli
repnz
jmp
mov
push
clc
movsl
inc
add
add
jnp
jnp
clc
clc
clc
jmp
lret
leave
out
in
fst
out
in
fcmovne
in
fcmove
in
fcmove
ljmp
jmp
rol
fmul
mov
dec
mov
stos
cmpsb
cltd
nop
jmp
repz
test
dec
dec
cmpsl
push
movsb
add
add
cld
icebp
mov
cld
divl
jmp
mov
pop
int3
clc
repnz
das
das
das
add
out
clc
out
out
out
fcmovnu
lret
out
out
in
in
fcmovne
in
fcmovne
in
fxch
ljmp
jmp
rol
jecxz
mov
aad
mov
int
scas
inc
mov
fxch
sahf
out
mov
iret
cmpsb
inc
hlt
cmpsb
xchg
pop
dec
sti
divb
jmp
mov
xchg
imul
add
add
add
pushf
pushf
pushf
lret
repz
jmp
jmp
int3
leave
out
loope
out
loopne
out
in
out
in
fcmove
jmp
lret
fmul
jmp
jmp
aam
jmp
rol
jmp
into
mov
call
shll
imul
scas
fdivs
mov
sti
stc
mov
jmp
ret
fstpt
leave
sbb
add
add
aaa
aaa
add
xor
repnz
lock
aad
loopne
int
lock
out
loope
out
out
in
fmul
in
fcmove
in
fxch
jmp
ljmp
ljmp
ljmp
out
mov
xlat
ret
mov
loope
test
imul
stos
cld
cld
mov
jecxz
pop
scas
xchg
inc
movsb
rol
add
add
add
or
push
mov
mov
cmc
cmc
cmc
jmp
in
dec
mov
icebp
jecxz
out
loopne
out
loope
out
in
fmul
in
fcmovne
jmp
leave
ljmp
ljmp
ljmp
jmp
rol
jmp
sarb
fcmovb
scas
push
in
mov
cld
cld
sar
cmc
mov
out
pusha
fidivrs
inc
xchg
push
push
push
pop
inc
inc
inc
add
add
add
or
add
cmc
cmc
cmc
in
in
in
dec
into
iret
jmp
fcmovnbe
push
in
lock
push
loop
out
loope
out
out
in
fcmove
ljmp
ljmp
ljmp
jmp
rol
jmp
sarl
fcmovnb
mov
jmp
mov
cld
sti
mov
loope
pop
call
mov
mov
popl
insb
or
dec
dec
add
add
add
jnp
or
int
ljmp
int3
leave
hlt
jmp
icebp
in
icebp
jecxz
out
loopne
out
loopne
out
jmp
lret
xlat
ljmp
jmp
rol
jmp
rol
call
sarb
out
mov
clc
repz
cld
cld
int
fistpll
sarl
dec
mov
jge
xor
sub
add
add
add
add
je
je
div
idiv
jecxz
jecxz
int3
int3
int3
jmp
out
push
out
repnz
push
jecxz
icebp
loop
push
loope
in
fst
jmp
enter
call
aam
jmp
sarb
call
sarb
jmp
iret
mov
in
scas
cld
cli
mov
push
out
fcmovnb
mov
fadd
mov
fadd
scas
call
mov
movsl
cwtl
mov
xor
sub
add
adc
inc
add
add
add
dec
add
sbb
aas
in
in
jmp
jmp
fdivrp
int
push
ljmp
repz
icebp
in
push
in
icebp
jecxz
out
loopne
out
fst
ljmp
jmp
aam
call
sarb
jmp
iret
mov
out
mov
fcmovb
mov
cmc
in
mov
cld
sti
sar
shlb
repnz
fstpt
fs
mov
mov
loope
mov
fadd
scas
xlat
mov
movsb
inc
mov
sti
mov
lret
and
push
pop
pop
pop
add
add
add
or
jnp
icebp
icebp
in
in
mov
loopne
hlt
jmp
hlt
ljmp
repnz
icebp
in
lock
out
loope
in
fcmovne
jmp
aam
jmp
rol
out
mov
out
mov
out
mov
loop
mov
stos
cld
clc
mov
fsubrs
jp
out
loop
dec
mov
mov
ffreep
mov
in
mov
jecxz
mov
loopne
mov
fcmovnb
stos
mov
fwait
inc
mov
cld
test
mov
push
push
push
add
add
add
and
add
xor
pop
ljmp
call
xlat
fdivr
iret
int3
lret
out
out
cmc
in
in
hlt
ljmp
repz
push
in
icebp
in
push
loop
ljmp
jmp
rol
out
mov
jmp
iret
mov
jmp
into
mov
in
mov
out
loopne
std
cli
mov
call
test
call
mov
hlt
in
mov
iret
scas
pop
inc
sahf
push
sarb
mov
in
mov
jecxz
mov
loop
mov
ffreep
lods
fidivrl
xchg
clc
mov
insl
jecxz
addr16
mov
add
add
add
add
test
repnz
loopne
loopne
out
call
call
push
jmp
push
ljmp
repnz
repnz
out
loope
jmp
aam
jmp
rol
jmp
sarl
jmp
into
mov
out
mov
jmp
int3
mov
fcmovb
test
cli
icebp
mov
cld
cli
mov
inc
fwait
inc
inc
test
loopne
mov
ljmp
mov
lods
jmp
enter
enter
enter
lods
faddp
test
mov
insl
fsubrs
xor
add
add
daa
daa
add
inc
inc
js
lock
jmp
iret
iret
ror
int
clc
icebp
in
imul
call
cmc
in
in
repz
repnz
icebp
in
out
loopne
jmp
rol
out
mov
in
mov
in
mov
in
mov
in
mov
ffree
mov
out
movsl
cld
divb
mov
lea
dec
mov
fld
cmpsl
mul
fwait
mov
jnp
dec
mov
loopne
lods
jecxz
scas
loop
lods
loop
lods
dec
scas
mov
scas
mov
cwtl
jns
mov
addr16
pop
pop
pop
lret
lret
lret
in
out
out
out
call
xlat
xlat
inc
ret
ret
push
out
jmp
div
ljmp
in
in
hlt
jmp
hlt
ljmp
repnz
in
fmul
jmp
rol
out
sar
sarl
in
mov
jmp
lret
mov
jmp
lret
mov
loope
mov
fadd
test
imul
cmpsb
std
divl
ljmp
mov
fnstcw
scas
jmp
leave
xchg
jmp
push
and
test
fs
fdivrs
stos
jmp
les
cli
mov
data16
mov
popa
leave
cwtl
mov
adc
adc
bound
xchg
hlt
hlt
hlt
jmp
loopne
call
rcl
aam
sar
clc
repz
push
icebp
in
div
jmp
imul
jmp
push
in
in
repz
repnz
jmp
rol
out
sar
iret
mov
in
mov
jmp
lret
jecxz
mov
loop
mov
ffree
scas
loopne
mov
clc
lock
xchg
fs
xchg
push
jnp
faddp
scas
ffreep
scas
call
mov
ja
scas
xchg
dec
call
pop
mov
mov
fnstcw
loop
mov
mov
lods
aam
rolb
ja
ja
sbb
sbb
xlat
xlat
xlat
repnz
out
fcomp
fdivr
mov
repnz
clc
repz
clc
repnz
div
in
imul
ljmp
in
in
hlt
jmp
repz
fdivrp
out
out
sar
iret
mov
in
mov
loope
mov
loop
mov
loop
mov
loopne
mov
xlat
mov
popf
cld
repnz
inc
lods
js
jne
sbb
sbbb
into
mov
ffree
lods
xlat
mov
xchg
jmp
shll
xchg
inc
popf
jbe
xchg
jo
lcall
leave
cmpsb
sbbl
outsl
fs
add
add
push
push
jl
lock
loopne
loopne
leave
lret
aad
stc
cmc
repnz
stc
hlt
icebp
clc
repnz
clc
repnz
push
icebp
jmp
imul
jmp
hlt
in
in
repz
out
ret
iret
mov
jmp
into
mov
loope
mov
loop
mov
loopne
mov
loopne
mov
ffree
scas
call
mov
sahf
cli
lock
jge
xor
pop
cmp
call
mov
cmpsb
fnstcw
jbe
in
int
loop
pop
call
test
cmp
mov
mov
call
insl
push
xchg
ljmp
add
or
add
sub
dec
xlat
xlat
xlat
in
rcl
sar
mov
hlt
icebp
cli
div
stc
hlt
icebp
clc
repz
clc
repz
push
icebp
in
push
out
ljmp
in
in
repz
in
mov
in
mov
jmp
lret
loop
mov
loope
mov
faddp
mov
ffree
scas
call
mov
cwtl
std
out
mov
pushl
nop
pop
lcall
scas
cwtl
call
mov
jl
in
iret
je
repnz
jmp
mov
imul
xchg
popa
repnz
jns
iret
fwait
js
shlb
add
addl
or
jp
jp
aad
clc
cli
div
cli
div
stc
cmc
repnz
stc
hlt
lock
clc
repz
div
in
div
jmp
cmc
out
jmp
hlt
jmp
lock
in
mov
jecxz
mov
loope
mov
loopne
mov
ffreep
mov
ffree
scas
mov
cwtl
sti
ljmp
std
repnz
std
lock
cld
in
popf
movsl
mov
jns
cmp
iret
mov
aam
sahf
mov
mov
shll
cwtl
aam
cwtl
std
cmpsb
test
sahf
jp
mov
in
in
in
add
add
add
jnp
sysret
add
add
test
in
ljmp
div
stc
hlt
icebp
stc
hlt
lock
clc
repz
push
icebp
in
push
out
ljmp
in
out
lock
jmp
into
mov
loope
mov
loope
mov
loopne
mov
ffreep
mov
ffreep
mov
fadd
lods
out
xchg
cli
loop
cld
jmp
nop
sti
loop
push
fisttpl
jmp
leave
xchg
call
mov
call
mov
fidivrl
sahf
call
mov
fdivs
cltd
mov
jne
mov
mov
add
add
add
dec
inc
ror
lret
aad
in
in
out
ljmp
stc
cmc
icebp
clc
repz
push
icebp
in
push
lock
imul
jmp
icebp
out
jmp
int
jmp
lret
loope
mov
loopne
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
nop
ljmp
call
mov
lcall
mov
lahf
fdivrs
sahf
call
mov
call
mov
xlat
mov
call
mov
cld
lcall
mov
push
add
mov
mov
jmp
out
lock
out
jmp
clc
repz
div
in
imul
ljmp
jmp
mov
loope
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
lods
fadd
stos
fstpt
movsb
call
mov
mov
fnstcw
mov
fdivrs
pushf
aad
cltd
call
mov
call
mov
shll
insb
fcoml
pop
aas
movsl
mov
scas
push
movsb
movsb
movsb
push
jno
outsb
dec
scas
stos
test
loopne
out
fsubrp
icebp
jmp
div
icebp
in
cmc
out
jmp
loop
mov
ffreep
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
test
fnstcw
fdivrs
mov
xlat
mov
pushf
mov
aam
xchg
aam
xchg
aam
xchg
shrb
xchg
nop
imul
imul
test
test
pusha
pop
pop
cmp
ror
fsubp
fstp
ljmp
jmp
faddp
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
stos
fnstcw
movsl
fidivrl
xlat
mov
mov
aad
fwait
call
mov
call
mov
call
mov
shll
call
lods
mov
mov
arpl
lods
jbe
cmp
imul
jns
jae
iret
lret
loop
xlat
jmp
mov
faddp
mov
fadd
scas
fcmovnb
lods
fcmovnb
stos
fidivrl
cmpsb
fnstcw
call
mov
lahf
call
mov
call
mov
aad
cltd
call
mov
call
scas
xchg
call
scas
xchg
shrb
mov
pusha
cmp
stos
mov
add
bound
push
pusha
pop
pop
push
mov
mov
aad
cmpsl
icebp
ffree
scas
fnstcw
cmpsb
fnstcw
mov
sahf
aam
pushf
aam
lcall
mov
shrb
nop
dec
stos
mov
int
mov
into
test
xchg
imul
pop
cmp
fcmovnu
fildl
xchg
sub
pop
dec
cmp
sahf
cmpsb
mov
into
mov
in
fidivrl
mov
call
mov
pushf
shll
cwtl
call
mov
shrb
nop
dec
stos
mov
int3
cmpsl
mov
int
xchg
mov
push
jle
xor
jnp
xor
sahf
xchg
nop
add
add
test
es
cmp
gs
dec
lcall
xchg
out
mov
popf
call
mov
shll
xchg
dec
lods
xchg
shrb
dec
cmpsb
xchg
int3
movsl
test
mov
ds
push
xor
lock
add
add
add
aaa
xor
push
imul
mov
pushf
test
aam
fwait
cli
shlb
xchg
dec
lods
dec
stos
mov
int3
cmpsb
xchg
lret
movsb
test
lret
mov
push
das
mov
cmpsl
mov
add
aas
cmp
sbb
dec
xor
addr16
test
xchg
jbe
int
test
cmpsb
xchg
lret
dec
mov
jne
jl
xor
gs
inc
pop
out
out
out
add
add
add
push
or
pop
adc
push
cmp
jbe
pop
inc
test
andb
movsl
xchg
lret
inc
mov
dec
je
sub
lret
adc
add
add
arpl
sbb
and
sbb
pushf
nop
push
inc
mov
dec
sub
addr16
dec
dec
pop
pop
pop
add
sbb
push
pusha
ds
insb
inc
daa
xchg
pop
inc
xor
xlat
aad
or
add
add
ret
int3
enter
loope
push
clc
pop
add
inc
sldt
sti
orb
add
incl
add
add
clc
add
pop
add
push
push
add
sldt
push
add
add
add
jmp
add
add
add
inc
add
sldt
inc
add
cmpb
add
addb
cmp
add
cmp
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
pop
add
clc
add
add
pop
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
loopne
add
add
add
clc
add
add
aas
add
incb
add
add
add
addb
add
add
lock
add
add
cld
add
add
add
incl
add
incl
add
inc
add
incl
add
clc
add
incl
add
incb
add
add
incl
jmp
ud0
add
clc
ud0
add
lcall
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
cmpsb
xchg
insb
add
lea
mov
jge
mov
jbe
shrb
outsl
add
movsl
ja
lret
add
mov
push
add
jge
out
shll
mov
test
add
movsb
sahf
add
stos
cwtl
add
mov
add
mov
addb
mov
test
shrb
add
scas
xchg
add
mov
add
mov
xchg
add
mov
add
mov
add
mov
add
mov
lahf
add
mov
cmpsl
add
mov
movsl
add
lea
loope
mov
jecxz
xchg
add
iret
xchg
add
lret
out
xchg
add
loop
add
ret
fcmovnb
test
add
ret
scas
add
ret
mov
ffree
mov
loopne
movsb
add
frstor
add
mov
jecxz
mov
loopne
mov
jecxz
mov
jecxz
mov
add
int
add
iret
mov
add
sarb
add
in
add
les
ror
roll
ror
add
rcl
add
fcmovu
add
fcmovu
add
rol
add
aam
add
rol
add
aad
add
aad
add
xlat
enter
enter
lret
fcmovne
add
fmul
add
fcmovnbe
add
add
fstp
add
hlt
lds
out
loopne
add
loope
add
loope
add
jecxz
add
out
add
call
in
hlt
ljmp
imul
jmp
add
hlt
icebp
add
or
add
or
add
add
add
add
add
adc
add
add
push
add
add
add
add
push
cmp
add
add
add
add
dec
pop
pop
pop
push
inc
xor
add
sbb
bound
push
dec
dec
nopl
add
add
dec
popa
bound
push
inc
inc
dec
adc
sub
add
sbb
addr16
push
inc
inc
or
or
add
dec
gs
inc
cmp
adc
add
imul
add
or
add
push
xor
sub
add
add
cmp
sub
and
add
and
and
sbb
add
pop
push
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
inc
and
xchg
nop
je
add
test
add
mov
add
dec
add
cwtl
inc
add
adcb
mov
stos
nop
outsb
add
lea
test
nop
jne
stos
xchg
jl
mov
jbe
mov
jnp
mov
jge
mov
mov
dec
add
cmpsb
inc
add
movsl
dec
add
lods
dec
add
lods
push
add
lods
push
add
scas
pop
add
mov
add
mov
add
mov
add
mov
pop
add
mov
pusha
add
pushf
jl
shlb
push
add
mov
add
mov
pop
add
ret
jecxz
popa
add
les
loopne
insb
add
leave
push
add
int
add
lret
jo
in
into
jae
call
enter
sarl
out
aad
add
popf
addl
mov
addb
fwait
addb
popf
lea
mov
fwait
cwtl
add
mov
mov
test
mov
xchg
add
test
fwait
add
movsb
mov
add
test
add
mov
add
movsb
test
ret
add
cmpsb
mov
int3
stos
mov
shrb
add
mov
add
mov
add
mov
add
mov
mov
ret
add
scas
xchg
add
mov
add
mov
fwait
add
mov
xchg
add
mov
lcall
mov
popf
add
mov
add
mov
test
shll
add
mov
scas
add
mov
mov
add
mov
mov
add
mov
mov
iret
mov
test
mov
xchg
add
les
add
int
add
int3
test
in
xlat
mov
ljmp
add
fisttps
add
into
xchg
add
rcll
loop
fwait
add
fcompl
add
loope
add
loopne
add
jecxz
add
loope
add
in
add
loop
add
jmp
mov
add
shrl
fcmovb
lods
add
ret
ffree
scas
add
leave
scas
add
ret
rol
mov
fcmovb
mov
faddp
mov
fcmovnb
mov
rol
mov
add
int3
mov
add
lods
add
shrb
add
fisubrs
add
mov
loopne
mov
jecxz
mov
in
mov
loope
mov
in
mov
jecxz
mov
add
int
add
into
mov
add
sarb
add
loopne
add
out
add
out
mov
add
out
scas
add
icebp
movsl
add
rep
add
rep
add
out
add
divb
add
idivb
add
sti
mov
add
mov
add
int
add
into
ret
int
add
ror
add
ror
add
rcl
add
rcl
add
aad
add
aad
add
fcmovu
add
add
fstp
add
rol
add
aam
add
rol
add
aam
add
lds
ljmp
add
fmul
add
fcmove
add
fcmove
add
fcmove
add
fmul
add
fst
add
fst
add
add
cld
roll
cmc
leave
add
loopne
add
loope
add
loop
add
loop
add
loope
add
jecxz
add
in
add
out
add
loope
add
out
add
out
add
call
call
add
call
loope
hlt
jmp
add
in
out
hlt
out
call
add
repnz
add
icebp
icebp
add
repnz
hlt
hlt
add
hlt
icebp
pop
xor
add
add
xchg
push
sbb
push
push
add
add
add
and
add
dec
jnp
add
add
pop
and
add
add
sbb
add
hlt
lret
jno
add
add
mov
shl
movsl
lahf
jno
add
sub
add
shlb
add
hlt
into
xlat
mov
sbb
add
int
out
fcmovu
mov
jae
cmp
lock
fsub
jecxz
fcmovu
fidivrl
les
add
in
in
out
fcmovu
mov
xchg
daa
dec
shl
in
out
jecxz
fcmovu
fidivrl
in
sub
dec
add
int
in
in
in
out
fcmovu
mov
sarl
dec
ljmp
fidivrl
pushf
xor
xchg
je
add
add
add
lock
div
in
in
mov
scas
stos
les
subb
scas
scas
pushf
sbb
add
push
hlt
leave
repnz
div
cmc
in
fcmovnu
mov
mov
mov
mov
push
pop
lods
cmpsl
cmpsl
push
insl
add
add
ror
sti
cli
cli
div
in
xlat
mov
mov
mov
cmpsb
ret
pushf
subb
je
arpl
add
push
lock
idiv
in
in
mov
mov
mov
xchg
stos
mov
push
pushf
cmp
add
add
iret
iret
sti
cli
cli
div
out
mov
mov
lar
cmp
add
add
add
sti
cli
cli
cli
jecxz
mov
lea
pusha
jge
pop
inc
add
add
add
add
cli
cli
cli
mul
mov
mov
xchg
insb
insb
sbb
leave
repnz
cli
cli
cli
jecxz
mov
insb
imul
inc
add
add
aam
cli
ljmp
xchg
xchg
jne
insb
addr16
dec
add
lret
mov
jne
imul
add
jbe
jne
jne
imul
dec
gs
imul
add
add
imul
add
inc
push
push
adc
aas
adc
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
sbb
jge
and
jnp
aaa
add
data16
jnp
add
jo
add
jne
add
xorb
mov
add
mov
add
xchg
cmp
fsubrs
dec
add
xchg
inc
add
pop
add
nop
pop
add
fwait
pop
add
mov
cwtl
pusha
add
cwtl
imul
mov
jae
lods
nop
jne
stos
cwtl
jae
movsl
xchg
jp
stos
xchg
jl
mov
jl
mov
lcall
mov
mov
jle
les
add
mov
dec
add
test
add
stos
dec
add
mov
add
stos
push
add
movsb
pop
add
scas
pop
add
lods
push
add
mov
add
mov
add
mov
add
mov
push
add
mov
data16
lods
fs
test
pusha
add
mov
imul
les
js
lret
mov
add
rcrl
ret
ffreep
jl
in
pusha
add
insb
add
lret
in
into
jb
loopne
jl
out
jnp
in
shlb
jmp
jl
lock
aam
add
cwtl
add
xchg
addl
scas
fwait
xchg
test
cltd
mov
stos
fwait
mov
mov
test
test
xchg
add
mov
mov
lods
mov
cwtl
add
cmpsl
xchg
add
test
pushf
add
mov
add
stos
add
mov
add
mov
addl
lret
add
cmpsl
mov
stos
mov
into
stos
mov
shrb
add
mov
add
mov
add
mov
test
mov
mov
leave
lods
xchg
add
scas
nop
add
mov
add
mov
add
mov
add
mov
add
mov
lcall
mov
sahf
add
mov
add
mov
add
mov
stos
add
mov
stos
add
mov
mov
add
mov
mov
int
mov
faddp
nop
add
lret
fwait
add
lret
out
mov
jmp
fimull
add
fiadds
add
fisttps
add
rcll
add
ficoml
add
fcompl
add
loope
add
loope
add
out
add
jmp
cltd
add
in
add
jmp
add
shlb
stos
add
shrl
add
sarl
ffree
mov
mov
aam
mov
add
leave
mov
add
lds
jecxz
stos
add
mov
loop
mov
in
mov
add
sarl
add
loope
add
loopne
add
in
add
ljmp
hlt
in
add
jmp
add
icebp
movsb
add
icebp
stos
add
loop
add
in
mov
cld
out
mov
cli
hlt
mov
stc
idivb
add
ret
ret
add
mov
add
int3
lret
add
enter
int
add
iret
int
ror
add
ror
add
aam
add
xlat
aad
xlat
xlat
fadds
fcmovnu
fildl
out
roll
aam
add
lret
add
enter
int3
add
fcmovnbe
add
fst
add
add
sti
ret
cmc
lret
add
loopne
add
loope
add
loope
add
in
add
call
jecxz
ljmp
add
jmp
add
jmp
add
out
jmp
add
repnz
add
repnz
hlt
icebp
add
clc
testl
add
das
cmp
or
add
add
push
push
push
dec
cmp
add
addb
add
outsb
sahf
mov
arpl
add
inc
push
stos
stos
inc
add
add
mov
add
add
add
add
xor
push
stos
cmpsb
data16
add
movsb
mov
add
add
cltd
jae
add
add
add
outsb
inc
push
or
add
pushf
scas
dec
xor
add
cld
fcmovnu
mov
add
add
add
sbb
add
add
mov
cmp
add
fnstsw
add
add
into
dec
sldt
add
enter
cmp
add
add
cld
fucomi
jmp
mov
jb
add
add
add
rcll
jge
add
add
cld
hlt
loopne
jmp
fnstsw
add
add
roll
outsl
push
jmp
jmp
out
mov
lret
xor
inc
push
hlt
cld
jecxz
out
jmp
jmp
call
xchg
pushf
cmpsb
xor
add
add
je
neg
out
out
out
jmp
jmp
call
mov
xlat
int3
inc
dec
cld
cld
jecxz
repnz
out
jmp
jmp
out
call
ret
xlat
push
dec
addb
add
out
out
out
out
jmp
call
out
call
in
xlat
dec
ds
add
outsl
cld
mul
ljmp
jmp
out
out
mov
mov
inc
insb
add
add
add
cld
jecxz
repz
repnz
out
jmp
out
out
out
out
mov
push
ds
xchg
xchg
xchg
bound
add
hlt
fcomi
repnz
out
jmp
out
out
out
mov
in
iret
cmp
mov
hlt
div
clc
repnz
icebp
jmp
call
mov
shr
inc
aad
inc
mov
mov
pop
add
hlt
mov
repnz
icebp
jmp
out
out
mov
mov
aad
push
leave
xor
mov
xchg
add
add
add
add
mul
fdivrp
clc
clc
clc
repnz
out
out
out
mov
lret
xor
cmp
xchg
mov
mov
sub
add
add
add
hlt
mov
clc
repnz
out
out
mov
rol
xlat
cmp
inc
mov
rol
rol
sub
add
add
add
neg
fdivrp
cli
clc
clc
clc
clc
repnz
out
out
mov
rol
leave
adc
mov
rol
rorb
add
jecxz
cli
cli
cli
stc
clc
clc
clc
repnz
out
mov
rol
int
cmp
sbb
pop
xchg
rol
ja
add
add
add
hlt
fninit
cli
cli
sti
stc
stc
clc
clc
clc
bnd
mov
rcl
push
push
sub
mov
mov
add
add
jecxz
jecxz
cli
cld
sti
sti
stc
stc
clc
clc
repz
rcrb
mov
pop
or
sub
add
add
cld
hlt
fninit
cld
sti
sti
sti
sti
stc
stc
clc
clc
bnd
rol
mov
add
or
xchg
adcl
xor
imul
add
add
jecxz
jne
std
std
sti
sti
sti
stc
stc
clc
clc
repnz
shlb
push
test
inc
inc
and
sub
add
add
add
add
std
std
std
std
sti
sti
sti
stc
clc
cli
repnz
mov
xchg
movsl
int
ror
mov
add
xchg
mov
popa
jb
jne
std
std
std
sti
sti
sti
stc
stc
clc
repnz
les
movsb
lods
mov
mov
sub
add
jecxz
idiv
std
sti
sti
sti
cli
clc
repz
les
push
fwait
mov
mov
sub
add
div
cli
cli
cli
cli
clc
clc
ffree
les
cwtl
xchg
mov
mov
jbe
pop
mov
cli
clc
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
xchg
mov
test
sub
add
mov
lds
cwtl
cwtl
cwtl
xchg
xchg
mov
test
pusha
add
in
mov
mov
cwtl
xchg
xchg
mov
mov
sub
jae
insb
cwtl
mov
mov
mov
sub
add
add
xchg
cwtl
mov
mov
sub
sub
add
bound
xchg
xchg
mov
jns
js
sub
add
imul
sub
gs
js
sub
sub
add
add
jns
dec
and
pop
add
pop
and
sub
add
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
pop
add
add
add
add
add
add
mov
or
add
add
mov
mov
push
mov
clc
clc
mov
mov
mov
add
mov
add
add
xchg
add
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
add
add
jo
call
add
add
addb
push
jo
add
add
add
mov
or
add
mov
add
add
add
xchg
or
add
add
add
add
clc
mov
call
add
or
vpmacssdd
add
add
mov
add
add
add
mov
add
add
mov
add
add
jg
mov
add
add
mov
add
add
clc
clc
clc
clc
mov
mov
clc
decl
mov
jo
clc
clc
mov
jle
mov
decl
jbe
xchg
decl
mov
push
add
mov
clc
clc
mov
mov
add
decl
mov
out
mov
add
ud0
clc
mov
call
add
mov
decl
mov
add
add
mov
add
add
add
or
xchg
add
add
add
mov
js
add
loopne
add
js
jle
add
add
add
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
or
add
add
ja
mov
rolb
mov
add
outsb
mov
xchg
add
add
add
add
add
decl
call
mov
add
psubb
or
add
call
add
add
add
add
jo
or
add
clc
mov
add
add
add
decl
jo
mov
add
clc
mov
clc
out
add
mov
jle
add
add
add
add
mov
or
mov
mov
call
add
mov
clc
clc
mov
mov
add
add
add
add
clc
mov
mov
add
add
add
clc
mov
mov
mov
or
decl
mov
xchg
add
add
clc
mov
mov
add
add
mov
mov
call
xchg
add
add
clc
mov
mov
mov
jg
mov
mov
mov
mov
mov
mov
clc
clc
decl
mov
call
mov
add
or
clc
clc
clc
mov
mov
enter
call
clc
clc
mov
mov
mov
add
clc
decl
mov
call
add
clc
mov
decl
clc
call
call
add
add
clc
clc
mov
divl
jle
js
loopne
add
or
mov
mov
add
add
clc
mov
mov
mov
add
add
or
clc
clc
clc
mov
mov
jo
add
add
add
clc
clc
mov
mov
mov
ja
add
add
add
add
mov
js
ja
or
mov
xchg
add
add
add
add
mov
js
xchg
add
mov
js
xchg
addb
add
add
js
call
xchg
add
add
xchg
enter
add
or
xchg
add
in
ja
add
add
add
add
addb
xchg
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
jmp
add
add
add
sbb
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
ret
fbld
cmp
sub
inc
mov
push
cmpsl
jnp
sub
xor
add
and
mov
lcall
std
jmp
jg
jl
dec
ret
add
into
xchg
sbb
mov
sti
dec
pop
insb
pop
lahf
fwait
and
sti
leave
adc
in
mov
aam
cld
push
cmp
repz
jo
fildll
push
or
mov
pop
dec
aad
jno
mov
jge
push
push
aam
inc
inc
enter
shrl
mov
popa
icebp
call
push
js
push
add
call
mov
imull
fisubrl
inc
orl
dec
mov
xchg
xlat
jb
cmp
jns
cmp
ss
fwait
lret
imul
icebp
iret
ret
loop
clc
xor
xchg
insb
subb
cmp
add
hlt
test
mov
ja
jbe
sbb
ret
stos
aad
fbld
mov
pushf
int3
pop
call
sbb
sti
fsts
pusha
leave
aad
decl
push
cltd
jle
adc
into
das
insb
out
or
mov
xchg
cmc
loop
pop
test
mov
push
pusha
jns
mov
lock
lods
pusha
cltd
pop
shlb
xchg
in
and
jnp
icebp
leave
pushf
pop
stos
fmull
lods
pushf
sub
rcl
xchg
call
iret
mov
popa
xchg
mov
out
jp
mov
xchg
mov
lea
mov
push
jb
sub
cld
cmp
cmpsb
add
aam
nop
mov
mov
mov
outsb
or
shrb
adc
mov
incl
cs
dec
xchg
or
adc
add
leave
insb
pop
nop
pop
xor
mov
mov
push
fisttpl
test
mov
sti
repz
mov
into
mov
scas
stos
sti
mov
push
aas
and
pop
test
xchg
mov
mov
fnstsw
and
lea
sbb
clc
into
mov
add
add
aam
push
xor
or
cmp
dec
ja
insl
int
sub
js
inc
sub
jle
mov
lret
mov
mov
mov
data16
mov
jge
fs
test
jle
pop
sbb
sub
shlb
or
test
jo
mov
inc
std
push
frndint
mov
jmp
mov
scas
daa
xchg
and
pop
loope
stc
mov
add
lock
mov
repnz
jg
in
popf
loope
cmp
and
mov
dec
push
cmp
sub
sbb
sbb
jnp
sarb
loope
arpl
out
je
insl
jnp
sbb
mov
jb
popf
mov
clc
mov
bound
xor
cmp
je
sbb
inc
cwtl
rcpps
and
fmull
mov
adc
lret
mov
and
ret
rcrl
aaa
sbb
popa
cmc
dec
push
gs
cwtl
push
xor
fistps
mov
cli
cmc
stos
in
loope
xlat
cli
aas
inc
and
mov
sbb
insl
inc
jp
ss
xor
std
jle
sbb
ja
sbb
jmp
inc
lret
inc
dec
mov
xchg
adc
mov
aad
jp
and
inc
sbbb
jae
inc
or
adc
int
pop
xchg
pop
neg
cli
bound
jle
or
push
std
pop
out
int
xor
mov
inc
idivl
adc
test
fstps
dec
cmp
into
sub
xchg
pop
jge
lods
roll
test
rol
sysenter
mov
jg
fnstsw
rol
cmpsl
push
hlt
and
pop
loop
mov
mov
call
inc
push
lea
xor
mov
outsb
xchg
mov
pop
mov
push
add
ret
ret
xchg
rcll
cmpsb
subb
sbb
ret
and
ret
scas
pushf
fwait
add
ss
fisubrl
out
loopne
sub
rcrl
les
cmc
mov
lret
pop
cmpsb
push
ja
shlb
sub
mov
je
sbb
mov
xchg
test
xlat
mov
jmp
xor
add
out
mov
std
jge
mov
and
aad
int
data16
ja
mov
and
xchg
mov
add
jno
imul
ret
xchg
sbbb
call
scas
and
cmp
iret
adc
jge
xorb
jno
push
cli
nop
lods
sub
shrb
scas
xchg
mul
inc
mov
lea
or
xor
icebp
dec
adc
fdiv
jno
out
push
shl
push
pop
adc
mov
test
mov
fwait
sub
and
js
ds
jge
into
mov
jbe
stos
aam
out
shrb
xor
xchg
push
push
dec
insl
xor
dec
lods
inc
daa
inc
repz
aaa
scas
pop
mov
mov
addl
das
push
xor
out
loopne
cmp
movsb
cmp
and
pusha
inc
data16
mov
mov
mov
movd
loope
push
xlat
imul
mov
pop
cmc
fdiv
sahf
mov
cwtl
leave
or
loopne
jb
jbe
fstpt
test
insb
das
xor
push
inc
jns
fwait
inc
lods
jb
arpl
xor
push
aad
enter
inc
push
xor
adc
repz
xchg
into
xor
mov
mov
mov
cltd
jl
mov
mov
xchg
popa
jmp
ds
or
ja
lcall
loop
jmp
jae
xorl
cltd
xchg
jae
or
jb
mov
pop
rcll
xchg
and
sub
mov
jno
push
ss
push
subb
push
sbb
outsl
jb
rclb
mov
xlat
lods
rol
mov
hlt
out
jbe
cli
sbb
outsl
ja
cmp
xor
push
lret
lea
xor
add
ficoms
loope
mov
fs
xor
movsl
ja
mov
pop
fisttpl
pop
add
pop
jns
and
mov
movsb
sbb
mov
ljmp
add
cmp
lret
or
mov
pushf
xor
jns
fmull
sbb
das
jb
into
in
dec
sar
daa
div
push
enter
cmpsl
adc
mov
push
out
cmpsb
mov
fldenv
cmp
jae
pop
bound
push
sub
jecxz
or
in
out
xor
and
sub
jmp
sbb
cmp
inc
repnz
scas
mov
clc
add
and
out
push
jge
xor
movsb
mov
lret
fstps
pusha
dec
pop
cmp
dec
in
xchg
bound
sti
sti
jl,pn
ret
pop
popf
sub
ret
mov
fdivl
mov
fisubl
scas
mov
add
add
jl
cwtl
je
xchg
dec
movsb
or
lods
andl
sbb
add
rorb
xchg
push
adc
mov
dec
mov
pshufw
std
xchg
xor
xor
je
lods
push
xchg
popf
sub
xor
cmc
movsb
ja
xchg
sbb
jne
mov
stos
mov
pop
sbb
xchg
into
inc
popf
outsl
movsl
out
lret
push
pop
bound
jl
pusha
loopne
fbld
je
notl
in
mov
icebp
dec
pushf
sub
out
push
out
jnp
arpl
cmp
or
sbb
movsl
imul
stos
jp
xchg
adc
movsb
dec
dec
pop
mov
imul
aas
jo
push
jns
push
cltd
or
xchg
push
cmp
fwait
pop
xorb
cltd
push
add
lds
cmpsl
xor
jge
adc
in
mov
mov
loopne
int
or
and
mul
iret
outsl
fimull
dec
cltd
sub
cmc
insl
jns
mov
stos
lock
in
add
sub
adc
cmpl
mov
jnp
imul
sbb
pop
movsl
divl
pop
mov
inc
in
and
xchg
pop
xor
lds
jb
xchg
jl
jnp
add
dec
adc
hlt
outsl
mov
and
mov
sub
and
icebp
add
xor
xchg
push
das
xchg
pop
fcom
repnz
loope
pop
cmp
aam
push
rolb
mov
sahf
movsl
pop
jnp
gs
mov
sub
aaa
sbb
leave
push
sahf
xchg
add
or
insl
xchg
lret
jmp
mov
sbb
cmc
or
mov
inc
push
cld
push
stc
das
lods
pop
loopne
push
dec
lods
mov
or
add
sbb
fcomi
pop
sbb
pop
mov
cmpsb
sub
jb
mov
xchg
or
or
push
and
and
stos
or
fistl
cli
mov
leave
rclb
or
sbb
lock
sbb
ss
pop
lret
push
fstpt
mov
jbe
ret
outsl
sbb
cmp
sub
popf
cmp
and
and
lods
cs
movsl
jo
fs
adcl
jo
xor
pushl
dec
aam
xchg
mov
xchg
push
mov
and
or
adc
pop
sub
pop
or
lret
arpl
jbe
add
sbb
jl
dec
or
sub
sub
gs
insl
add
sub
neg
lea
rorl
mov
fwait
and
inc
inc
and
test
cmpsb
adc
and
mov
aas
mov
repz
ss
push
xchg
dec
aas
addl
and
push
cltd
xchg
jb
pop
dec
gs
mov
sub
mov
cwtl
sub
xor
cmp
pop
mov
mov
and
call
call
pop
mov
and
pop
pop
scas
jecxz
mov
pop
lock
sub
arpl
cmp
push
inc
inc
fldt
or
push
mov
pop
dec
out
sbb
popa
inc
insl
mull
add
dec
ja
jmp
push
cmp
sbb
xchg
call
mov
sbb
outsb
data16
fwait
mov
and
inc
lods
jno
pop
pop
std
and
int3
mov
addb
inc
xor
inc
push
sub
add
in
sbb
push
pop
push
lret
leave
fistpll
movsl
aaa
stc
cmp
mov
jnp
out
cmpsb
jne
idivb
shlb
int
and
jo
dec
cmp
or
lock
fcoml
ret
mov
mov
xor
adc
repnz
jmp
and
mov
bound
push
or
xor
cmc
nop
lcall
and
cmp
xor
int3
pop
pop
and
inc
bound
mov
cld
pushf
stc
fidivl
or
cmpb
cmpsb
sahf
outsb
cmp
gs
push
mov
mov
loop
or
sbb
jg,pn
das
dec
mov
mov
jl
pusha
rcr
add
stos
jae
jne
repz
xor
pushf
mov
dec
mov
and
pushl
call
or
iret
orl
xchg
adc
and
push
shr
jbe
jge
call
xlat
sub
out
negb
je
cmp
xor
pushf
decl
xor
mov
iret
outsl
fistl
sub
jle
adc
fucomip
fcmovb
out
mov
add
inc
iret
insb
arpl
out
in
dec
jecxz
cmp
mov
int
pop
sbb
in
ficomps
xchg
repnz
push
mov
lods
addb
xchg
orl
cmp
and
mov
out
sub
inc
sahf
xchg
shll
lock
push
mov
xchg
mov
clc
add
adc
or
out
mov
leave
xor
cwtl
lods
dec
fsubrp
in
repnz
aad
add
mov
nop
sub
cmp
xchg
cld
push
lock
iret
add
fisttpl
sbb
hlt
fmuls
jae
sbb
cmpsl
sbb
push
jl
aaa
sub
xor
out
mov
jnp
rclb
sbb
ss
leave
inc
add
push
xor
pop
jo
add
movsl
subb
and
aas
pop
aas
pop
pop
pop
pop
icebp
ljmp
out
mov
test
jns
loopne
pop
out
stos
loope
es
xchg
jb
pop
and
xchg
jb,pt
xchg
xchg
subl
ljmp
das
loopne
loop
mov
ljmp
pop
push
mov
pop
cmp
mov
cld
in
cli
insb
sahf
call
inc
sti
xor
test
out
pusha
hlt
cmpsb
mov
bound
fs
pop
cmp
mov
es
and
mov
std
ret
ret
or
lock
sbb
jge
and
or
cs
sub
push
add
mov
sbb
mov
shrl
std
mov
xchg
inc
insl
xlat
out
sahf
fsubrl
push
out
and
mov
subl
jno
jns
jmp
jo
or
dec
mov
add
out
or
mov
xchg
jge
and
add
jnp
iret
popf
test
inc
mov
mov
leave
roll
sbb
and
jg
cltd
or
and
xchg
fmull
outsl
or
loop
add
rcr
lods
rcll
rcll
repnz
ror
push
aad
les
out
inc
mov
push
mov
mov
fsubrs
mov
repz
data16
jge
gs
or
adc
test
pushl
fsubs
ret
cld
js
xchg
cs
frstpm(287
sbb
popf
xchg
mov
mov
sbb
xchg
pusha
test
shr
inc
and
stos
icebp
xor
cli
ret
rorb
in
xorb
imul
cmp
and
lret
push
pop
pop
dec
imul
dec
push
jb
xchg
lret
loopne
sbb
in
aaa
pop
lret
pop
loopne
daa
sub
in
and
xchg
jg
orb
jecxz
imul
into
add
xchg
and
gs
jg
jne
and
pushf
mov
add
sub
in
leave
lock
push
mov
repnz
inc
adc
movl
mov
sub
sub
popf
fldl
fldcw
jp
js
push
movsl
sarl
cmp
inc
or
ljmp
cmp
cmpsl
cwtl
lcall
xor
mov
cmp
mov
aam
mov
insb
sahf
imul
repz
jp
pushf
les
mov
mov
or
pusha
out
dec
mov
cmp
cwtl
cmp
jae
lods
subl
loope
adc
stos
dec
in
sahf
cld
sbb
mov
push
in
add
push
jno
fwait
sbb
mov
xor
push
outsl
xor
subb
jae
std
jb
mov
sub
cmc
lcall
daa
adc
cmp
pop
out
cmp
lods
roll
cmp
cmp
xor
inc
dec
scas
adcb
dec
subl
adc
inc
jle
mov
out
xlat
mov
lock
lret
rcrl
dec
inc
jecxz
mov
aaa
xchg
sbb
pop
lret
fbld
pusha
inc
sub
xchg
jmp
cltd
mov
ficompl
or
mov
jo
mov
idivb
jae
divb
push
sbb
enter
aad
push
test
inc
test
unpckhps
xor
gs
jmp
adc
insb
pushf
xchg
jnp
setns
bsr
lcall
imul
xchg
shrl
rcll
inc
push
rcll
pop
cmp
shl
call
loop
jae
mov
pop
xchg
loopne
mov
fisubrl
cmp
cmpsl
mov
sbb
clc
test
cs
cs
aas
and
mov
cmpsb
add
jno
rep
clc
mov
fcoml
movsl
insb
dec
cmp
pop
mov
push
mov
pop
les
xchg
push
stos
cmpsl
sub
pop
push
add
push
test
ret
dec
rorl
cmc
sbb
jo
jo
mov
out
imul
call
sub
notl
jno
xchg
pop
xor
push
in
dec
repz
pop
jge
in
or
add
mov
test
sub
inc
inc
movl
pusha
mov
push
pushf
pop
es
cmp
mov
xor
loop
and
imull
jmp
rcl
jne
rcll
mov
fld
bswap
das
xor
hlt
arpl
xchg
sub
and
cmpl
jl
add
test
dec
jle
and
mov
and
mov
out
cmp
pop
xchg
sub
movsl
push
or
push
idivb
adc
dec
cltd
outsl
pop
and
adc
lock
bound
inc
pop
jne
out
aaa
xchg
pop
negb
jl
xchg
lahf
sbb
ret
arpl
xchg
and
xchg
addps
daa
jae
pushf
jo,pt
ds
adc
popf
into
popa
insb
mov
test
mov
or
pop
pop
push
test
pop
std
rorb
jbe
mov
pusha
insl
out
daa
pop
aad
jmp
lds
in
int
dec
outsb
imul
dec
cmp
repz
xchg
shrb
imul
lahf
inc
sbb
cmpsb
cmpl
mov
outsb
cwtl
scas
sarl
out
mov
jecxz
out
mov
or
push
fwait
jae
cltd
push
test
pop
in
rorl
ja
daa
lret
push
mov
jge
adc
pop
lods
mov
cli
sbb
inc
push
loop
xchg
or
lock
xchg
push
sbb
ja
dec
int3
inc
xor
pop
adc
repz
cld
nop
lock
daa
in
and
xor
jne
mov
jae
sbb
aam
clc
imul
add
outsb
jb
and
mov
mov
mov
scas
das
aas
cmp
push
ret
mov
adc
loop
sbb
add
sub
lcall
jle
and
mov
aad
sbb
in
loope
sub
jmp
add
dec
and
fs
data16
inc
dec
pop
mov
fimuls
sub
fldt
and
xchg
push
shll
pop
push
inc
sub
cld
sub
mov
or
and
mov
mov
outsl
loopne
dec
mov
jb
push
mov
mov
mov
adc
mov
or
dec
insl
xchg
stos
mov
pop
cmp
fnstcw
pop
gs
loop
cmp
outsl
push
or
outsb
push
mov
jp
shlb
pop
aaa
lcall
in
push
cmp
mov
xchg
int
sbb
movsl
mov
mov
lds
add
rorw
inc
mov
stos
and
mov
pop
loopne
cmp
mov
mov
push
je
jns
or
idivb
stos
pop
or
imul
lret
ds
inc
add
aaa
jae
adc
push
sub
and
int3
inc
add
mov
js
dec
mov
lods
mov
sti
js
lcall
pop
lcall
sub
pop
or
imul
sahf
xchg
jnp
pop
ja
pop
pusha
inc
pop
ret
cltd
push
gs
dec
aas
push
xor
mov
stos
or
push
mov
and
pop
daa
jb
xchg
or
les
xchg
loop
fs
cmpl
int
inc
xlat
sbb
dec
nop
lret
cmpsb
mov
xchg
lahf
shll
popa
clc
rcl
mov
pop
inc
out
xor
jne
sarb
mov
mov
sbb
movsl
loopne
loop
orl
psraw
mov
mov
inc
stc
mov
popf
cld
insb
clc
imul
push
xor
enter
pusha
pop
xorl
push
test
ret
int3
or
jno
fildll
cltd
jmp
mov
xorb
lods
shll
inc
fcompl
jl
inc
cmp
cmpsb
xor
sub
inc
movsl
shlb
pusha
inc
adc
push
or
jns
xor
fwait
xchg
mov
shrb
or
out
shlb
xor
emms
outsl
fdivp
lods
add
movsb
cli
xchg
jl
fldt
clc
mov
push
jns
and
mov
mov
lcall
rclb
loopne
and
adc
and
dec
sbb
cmpsl
popf
pop
jnp
mov
adc
popa
sub
pop
lock
cmpsl
imul
inc
cltd
fistl
sbb
push
mov
out
mov
popa
andb
mov
cmp
push
push
pop
jno
sbb
xor
mov
test
gs
or
mov
xchg
sbbl
sbb
jmp
inc
mov
jmp
mov
pop
inc
lods
pop
mov
mov
std
lcall
or
out
daa
in
sbb
push
mov
addr16
sub
and
scas
mov
movsl
inc
jg
mov
outsl
mov
jns
dec
movsb
push
xchg
cltd
and
jmp
mov
out
sbb
jmp
mov
frstor
inc
add
xchg
out
sbb
adc
pop
push
sbb
ljmp
pop
out
sub
ljmp
pop
test
cli
xchg
cvttps2pi
pushf
pusha
fldenv
push
cltd
pop
cmp
mov
aas
mov
jp
cmovo
test
dec
popf
xchg
adc
fnstcw
mov
fdivl
jns
sub
xor
fwait
jnp
pop
stc
mov
xchg
xchg
dec
jmp
sar
call
ja
hlt
dec
shlb
sbb
mov
pop
leave
mov
cmpsl
jae
fstpt
fsts
out
xlat
pop
xchg
rcrb
xorb
mov
mov
mov
mov
jecxz
mov
pop
mov
xchg
inc
in
out
rcll
out
movsb
push
fdivl
or
popf
adc
test
test
push
pop
fcmovnbe
lcall
mov
adc
and
icebp
mov
sbb
and
sub
cmp
xlat
xor
and
jecxz
fxch
and
faddl
add
cmp
pusha
shl
inc
es
iret
inc
xchg
test
std
or
inc
rcl
pop
sbb
adc
bound
xor
mov
ret
pop
pop
adc
xor
jo
mov
int3
rclb
cmpsl
mov
push
jne
or
xor
addr16
push
subb
call
and
dec
inc
aas
ret
iret
adc
jge
mov
data16
pop
nop
shlb
and
arpl
out
cld
sti
scas
sahf
lea
popa
ret
pop
aas
mov
mov
mov
adc
pusha
pop
sub
pop
mov
jns
mov
cmc
scas
sbb
aad
mov
imul
lock
pop
jb
mov
mov
xor
sbb
cmp
pop
push
jae
cli
je
loope
decl
mov
or
leave
nop
in
inc
mov
aam
jo
xchg
lcall
and
in
push
adc
mov
pusha
xor
inc
mov
push
je
mov
sbb
jnp
out
leave
scas
in
sbb
mov
mov
loope
and
loopne
push
lods
lds
arpl
in
cltd
inc
xchg
inc
xchg
mov
adc
inc
xor
pop
or
in
pop
adc
add
push
out
mov
inc
dec
add
mov
roll
xchg
pop
int3
push
std
jo
fmuls
ret
dec
pop
cmp
out
pop
cmp
mov
xchg
test
scas
cld
push
out
xor
cmp
les
repz
push
jl
not
jle
out
in
jp
cmp
mov
lods
or
inc
push
dec
outsb
mov
or
inc
and
icebp
in
mov
into
jl
and
cmp
fwait
scas
lods
ret
push
jae
push
movsb
int
iret
jb
das
scas
jp
pop
or
popa
and
adc
das
dec
cmpsl
mov
mov
cld
jne
cltd
pop
mov
leave
and
inc
lds
out
inc
cmp
insb
xchg
push
sahf
adc
cmp
stc
lcall
and
and
pop
pushf
or
inc
add
xor
mov
inc
ret
mov
pop
into
mov
and
jmp
stc
push
add
xchg
sub
int3
fiaddl
cwtl
inc
in
bound
ljmp
insl
sti
jo
test
xchg
mov
in
out
inc
enter
push
pop
xor
clc
int
pop
jg
or
adc
mov
push
aam
cltd
cmp
adc
lret
dec
je
cs
inc
insb
dec
ds
or
nop
pop
inc
xchg
inc
fstpt
push
ds
mov
mov
aam
mov
pop
cmp
imul
push
out
mov
pop
gs
fcomps
popa
std
cmc
or
inc
push
mov
jl
jnp
xlat
ljmp
adc
divl
rorb
jns
dec
scas
mov
xchg
xor
adc
push
or
fwait
dec
data16
stos
or
in
lods
fwait
and
jge
adc
loop
fadds
rclb
notl
mov
xchg
xchg
adc
mov
pop
push
ds
enter
addr16
loope
cmpsl
inc
ja
rcll
scas
and
fstl
jns
adc
sahf
imul
in
ss
push
mov
js
add
aaa
push
ja
sub
mov
mov
pop
stc
and
inc
mov
sahf
adcl
and
mov
jne
pop
fwait
or
mov
xor
cmp
inc
pop
test
fidivs
xchg
mov
mov
jl
xchg
dec
inc
or
and
bound
xchg
mov
jmp
iret
or
mov
push
mov
and
mov
jmp
out
fsubrp
fsubs
test
add
pushf
sub
mov
popf
inc
cmp
scas
xor
dec
jns
mov
fcomps
cltd
inc
adc
aas
out
cmp
fists
mov
insl
fiaddl
dec
lret
pop
aad
std
ljmp
adc
and
daa
cmpsl
mov
loopne
jmp
sub
dec
addr16
and
add
cmp
inc
into
dec
mov
push
lods
sub
lahf
xor
xchg
add
dec
mov
cmp
leave
jae
into
in
pop
xor
test
adc
ss
xor
loope
jno
popf
jns
xor
pop
ja
stc
lea
jae
aaa
aaa
cmpsb
outsl
cmp
pusha
lcall
dec
push
sbb
mov
mov
stos
fcoms
mov
and
gs
sub
inc
outsb
inc
hlt
insl
mov
in
xor
cmp
or
push
dec
ret
arpl
dec
push
test
cwtl
stc
out
mov
or
addr16
pop
pop
cltd
cs
sahf
cs
push
or
fldcw
mov
rol
inc
mov
mov
imul
dec
push
mov
xchg
aas
inc
icebp
push
mov
push
xor
mov
fidivl
imul
or
adc
imul
sahf
adc
fsubrl
aad
add
mov
aad
xchg
dec
pop
aaa
mov
pop
mov
sub
sub
push
aas
adc
sarl
cs
imul
aas
or
aaa
xor
and
and
icebp
fstps
es
bound
mov
das
pop
movsb
jbe
ficomps
dec
or
bound
push
stos
add
sti
int
cmp
mov
iret
pop
int
cwtl
adc
jo
adc
faddl
outsl
cmp
pop
ret
mov
xchg
xchg
andb
in
mov
mov
test
ror
stos
fdivs
adcl
mov
call
sti
imul
outsl
fldt
push
imul
aad
test
nop
add
lcall
rolb
add
and
push
je
pop
push
dec
cs
and
jecxz
lock
push
mov
fcoms
adc
insl
mov
inc
out
inc
inc
jg
imul
and
jg
and
or
std
mov
dec
lods
outsb
mov
inc
mov
fldt
out
dec
pop
sub
jae
repz
or
leave
mov
jb
ret
shrd
roll
aam
in
mov
adc
sbb
icebp
aad
mov
pushf
inc
xchg
mov
xor
in
cltd
dec
shrb
lea
and
and
sub
rorb
sub
jne
mov
adc
out
cwtl
and
inc
out
add
scas
xchg
push
inc
pop
fidivs
sbb
icebp
cmp
sub
jno
lret
test
insl
pop
out
jae
mov
data16
mov
ret
data16
gs
xor
dec
add
adc
push
xchg
cmp
mov
push
ret
dec
rolb
xor
jle
popa
scas
cwtl
cwtl
xor
cmp
adcl
icebp
push
jbe
outsb
mov
leave
sub
cltd
jns
xchg
jge
rcrb
sub
daa
insb
xor
xchg
sub
fistpll
sub
jb
push
adc
dec
or
sub
xor
push
out
cmp
cmpsl
mov
sub
dec
jecxz
in
mov
sahf
push
dec
cli
jno
mov
mov
leave
lods
mov
jp
movsl
data16
test
push
inc
xor
push
iret
sub
fmull
es
sbb
add
pop
cmp
xor
outsl
cmp
cwtl
cmp
inc
mov
cmpsb
call
mov
push
pop
sbb
insb
push
jno
aad
jae
fimuls
rolw
aaa
jo
xchg
loopne
sub
xchg
dec
fldt
mov
cwtl
lcall
push
xchg
lret
test
sub
dec
pop
loopne
repz
sbb
js,pt
daa
push
push
xchg
jmp
jle
cmc
mov
pop
cmp
mov
add
cwtl
roll
push
loope
test
aad
test
push
inc
fimull
xor
or
adc
mov
movl
rcll
push
push
mov
nop
jge
add
jnp
ss
sub
inc
xor
ret
loop
dec
icebp
movsb
and
es
adc
aaa
adc
cmp
push
jbe
mov
andb
add
mov
and
ret
dec
repnz
cmp
aam
lret
add
jmp
sub
dec
adc
pop
sbbb
push
inc
imul
mov
inc
roll
insb
pop
iret
dec
lret
in
push
pop
lds
iret
enter
and
std
pop
and
sbbb
out
popa
mov
xorb
and
or
inc
nop
pusha
inc
and
cmc
decb
ja
scas
mov
adc
aam
mov
mov
arpl
pop
ror
inc
xor
xchg
add
repz
push
div
push
sub
jne
movsb
mov
stos
add
stos
push
sbb
xchg
imul
mov
loope
cmp
sti
mov
xor
out
repnz
or
mov
push
rorl
cmpsb
addr16
or
stos
sub
push
fildl
out
imul
mov
loop
push
push
dec
shlb
inc
inc
add
cmp
test
mov
cmpsb
nop
mov
xchg
lret
jecxz
and
dec
addr16
adc
addr16
movsb
push
repnz
and
xor
sub
and
jae
inc
mov
mov
lret
fwait
rcrl
and
jo
out
mov
mov
xor
and
enter
sarl
cmpsb
repnz
sub
dec
int3
scas
cs
inc
ret
iret
push
lcall
loope
inc
test
mov
out
cs
inc
fcmovb
popa
xchg
loopne
dec
cmp
dec
rorb
pop
fistl
dec
and
and
xchg
daa
lea
pusha
push
add
push
xchg
outsb
leave
adc
leave
jno
movsl
push
xchg
stos
inc
pusha
clc
int
and
fwait
lcall
push
insb
insl
nop
fstl
mov
xchg
jmp
and
fdivl
pop
iret
lret
jbe
fnstcw
cmpb
cltd
push
int3
cmp
imul
jne
sarl
sbb
inc
mov
sbb
jl
subb
cmp
das
fsubr
imul
ds
aad
mov
bswap
inc
and
push
and
add
sub
std
shlb
fimuls
fwait
mov
jbe
je
lcall
loope
sub
pop
inc
popa
and
mov
cmp
xlat
sub
or
fsubl
xor
je
test
ja
or
push
jae
test
pop
cmp
or
outsb
test
or
lcall
mov
add
ficomps
movsb
push
lret
push
inc
xchg
xchg
popa
cmpsl
icebp
fs
mov
mov
push
test
jmp
fistpll
pop
arpl
aam
das
sub
inc
xor
lock
rolw
or
or
lods
inc
into
or
pop
jmp
outsb
xor
mov
add
imul
mov
fcompl
mov
mov
inc
test
ja
repnz
test
xor
mov
add
icebp
dec
dec
ret
mov
mov
mov
fninit
lock
push
and
cmp
adc
pop
jmp
fiaddl
ficoms
cltd
hlt
mov
lret
mov
inc
imull
mov
mov
imul
dec
hlt
arpl
add
add
les
lds
sti
mov
out
inc
inc
or
lods
mov
call
ja
sub
mov
adc
sbb
or
sbbb
cld
inc
jns
adc
and
push
lret
adcb
lds
pop
pop
pop
in
imul
and
or
sub
xchg
sbb
jbe
inc
ret
mov
sbb
and
pop
int3
std
cmpsl
xorb
pop
repz
xchg
jns
movsl
out
push
pop
movsb
jnp
orl
sbbl
icebp
insl
adcb
push
movsb
outsl
jb
xor
xchg
scas
das
jle
dec
int
lea
mov
sub
int
in
daa
les
mov
dec
or
pop
movsl
ss
adc
enter
cmp
loopne
repnz
lods
jg
in
fs
xor
lahf
sub
leave
mov
dec
mov
cs
adc
call
mov
jno
mov
mov
inc
add
xchg
cmpsb
leave
dec
mov
lea
xor
and
xor
test
dec
adc
lods
sbb
sbb
scas
gs
adc
ds
push
cwtl
popf
cmp
cmpsb
aas
popf
mov
sub
sbb
adcb
js
inc
sti
push
in
in
lcall
pop
test
add
stos
push
pop
outsl
push
aad
sub
dec
popa
clc
push
testl
adc
jo
jp
fistpl
mov
cmp
cld
repnz
test
leave
add
mov
sub
mov
les
xor
imul
nop
pop
sub
and
xor
xchg
rorb
and
popf
inc
xchg
mov
cmp
push
xor
popl
or
pop
jmp
mov
fimuls
fcmovu
xor
pushf
mov
shll
test
cmpsb
mov
sub
out
pop
jbe
xor
or
push
mov
or
les
xchg
out
and
push
adc
push
jmp
hlt
dec
popf
movsl
cwtl
js,pn
xor
rolb
icebp
pop
je
add
fadd
loopne
je
repz
adc
add
pushf
and
cmpsb
or
fs
in
add
call
sbb
mov
ds
cmpsl
jg
mov
lahf
stc
gs
jl
into
mov
inc
insl
mov
mov
or
jl
es
dec
fcmove
scas
dec
cmpsb
lahf
arpl
sbb
ret
adc
or
imul
push
stos
xor
pushf
fisttpl
adc
scas
imul
xchg
or
jl
add
pop
inc
daa
je
filds
cmpsb
inc
shl
movb
mov
adc
inc
xor
mov
push
into
data16
sbb
leave
nop
fadd
pop
pop
xchg
sbb
fwait
lahf
jne,pn
lods
filds
dec
jbe
sbb
jno
and
sbb
into
dec
mov
mov
clc
sahf
idivl
xchg
ja
push
divb
sarb
jnp
and
and
shr
mov
imul
dec
pop
and
test
push
dec
in
call
fimull
mov
or
orl
out
cmp
dec
adc
cmp
in
bound
jnp
and
adc
mov
push
leave
xlat
fs
adc
std
pop
lock
std
inc
mov
imul
int
jo
jb
std
cwtl
cmp
lock
lods
xchg
push
sub
cmp
mov
add
pop
mov
push
frstor
repz
js
aad
xorl
insl
adc
stc
inc
xchg
pop
loopne
mov
sub
popa
les
add
dec
mov
pop
lods
das
mov
mov
fiadds
nop
stc
xorb
add
push
aad
sarl
stc
sub
cld
call
movsb
push
dec
inc
cmc
cltd
js
or
mov
out
repz
imul
leave
icebp
lea
push
enter
jmp
clc
pop
dec
loop
ret
dec
and
pop
cltd
push
and
adc
lds
xorb
sub
popf
sub
sub
or
mov
out
pop
xchg
repnz
test
push
sub
jne
nop
or
push
loope
je
arpl
adc
ja
cli
push
ret
outsb
xchg
xor
les
cltd
fbstp
mov
aad
cmpsb
vmovss
adc
iret
lods
loop
orb
mov
push
pop
insl
xchg
push
jbe
jge
mov
xchg
sub
aad
cmp
hlt
mov
or
dec
aad
cmp
jns
dec
jecxz
les
into
add
xchg
jecxz
or
imul
sbb
xor
and
push
add
out
sbb
push
popa
mov
nop
adc
testb
int
adc
divl
ljmp
arpl
dec
xlat
add
pop
inc
or
xchg
xor
xchg
into
push
dec
xor
div
jle
xchg
in
push
adc
repnz
xchg
sbb
cld
in
sbb
es
js
add
cltd
adc
loop
rcrb
cld
cmp
jp
xchg
lret
popa
andb
cwtl
mov
bound
pop
mov
in
cli
push
movsl
sub
mov
pop
mov
xor
loope
mov
sbbl
int
and
mov
leave
fs
stc
adc
negb
sahf
nop
daa
cmp
inc
xor
notb
and
repz
dec
lods
pop
in
rcll
clc
int
mov
or
inc
mov
incb
adc
dec
stc
scas
dec
int3
les
ds
test
mov
xor
dec
clc
pop
out
stos
dec
mov
mov
lock
loop
mov
jle
sbb
mov
ret
sarl
or
push
scas
sub
jb
bound
push
jmp
sub
pop
cmpsb
sub
and
lret
sub
push
mov
cmp
imul
lods
sarb
mov
add
mov
clc
insl
outsb
adc
pop
and
push
cmp
enter
xchg
xor
and
arpl
ror
cmp
or
clc
pop
jne
mov
add
mov
or
sahf
jbe
into
push
xchg
int3
orb
cmpsb
push
imul
testl
sub
jb
rorl
jmp
call
xor
movsb
and
jnp
xorl
add
jbe
pop
out
inc
push
pop
mov
movsb
fsubr
je
lods
pop
movsb
xchg
in
cmp
mov
call
or
xchg
adc
add
fistpl
out
mov
or
xchg
sub
popf
inc
push
add
xchg
xchg
arpl
enter
adc
dec
pop
push
lods
shrb
xor
push
mov
mov
retw
popa
fldcw
test
and
sub
ret
lret
add
fs
jns
rcl
xor
jg
test
pusha
das
mov
dec
sub
adc
sub
pop
mov
fbstp
scas
shll
sbb
and
lock
lea
cmp
mov
or
sbbb
cs
sbb
ss
dec
loop
or
and
es
dec
push
mov
divl
mov
mov
jns
pop
bound
inc
xchg
or
jp
imul
ficoms
sarb
cmpsb
mov
cmp
dec
dec
fs
insb
in
loop
sub
push
add
mov
fsubrl
outsl
clc
sbbb
imul
arpl
inc
mov
inc
lods
push
cli
insb
cltd
pop
aaa
and
push
sbb
test
mov
outsb
push
dec
stos
dec
push
jmp
call
scas
rolb
test
iret
testb
jbe
imul
nop
aas
enter
fsubl
mov
and
pop
xchg
dec
cmp
inc
xor
rcll
push
loope
mov
xorb
dec
fisubs
or
dec
inc
sub
arpl
mov
jno
mul
filds
jae
cs
test
pop
lcall
cli
xor
jmp
loopne
mov
and
mov
xchg
fcmovnbe
dec
dec
jne
sbb
imul
mov
cmp
popa
and
cli
mov
jle
fwait
aaa
or
fsubs
inc
pop
mov
fbstp
outsl
inc
mov
lret
mov
add
icebp
push
popf
dec
xchg
in
and
imul
dec
mov
outsb
mov
xchg
call
popa
or
std
cld
or
sbb
dec
pop
sbb
rorl
lods
sub
shrb
repz
mov
fcmove
cmp
insb
push
adc
rorb
push
jbe
pop
cmp
imul
aad
adc
repnz
mov
popl
xchg
in
xlat
movsl
push
adc
loop
cmp
mov
dec
gs
and
mov
and
hlt
enter
mov
cmpsb
lea
leave
mov
lahf
jmp
int
in
mov
popa
or
cmpsl
push
shll
shr
push
test
scas
jb
in
or
scas
adcb
outsl
mov
insl
jmp
popa
push
ljmp
sub
movsb
adc
adc
mov
jl
rclb
aas
xchg
push
test
adc
test
mov
icebp
cltd
cmp
cmp
mov
mov
dec
int3
lock
jno
dec
dec
mov
mov
and
adc
or
jg
jmp
into
ljmp
inc
fucom
or
mov
or
mov
test
push
sti
lret
mov
cmpsb
pop
xchg
mov
or
outsb
test
daa
orb
loop
adc
daa
mov
imul
add
pop
mov
add
aaa
insb
sbb
loop
cmp
cmc
shl
xor
mov
out
imul
rcrl
mov
push
cwtl
sub
pusha
push
pop
sbb
push
ds
pop
lret
jne
adc
je
fwait
xor
dec
sub
pop
int3
int
fstps
ja
rcr
or
aas
jp
out
dec
or
jle
or
push
aam
cmp
jle
sub
inc
icebp
outsl
xor
jge
pop
xor
inc
pop
inc
mov
jno,pt
pop
repnz
bound
mov
fldenv
lock
into
cmp
leave
lock
scas
jns
cmp
clc
jle
mov
jp
jne
dec
add
arpl
jecxz
pop
inc
xor
pushf
adc
jne
mov
out
xor
sbb
inc
out
push
or
cmpsb
sbb
xchg
and
cmpb
aas
jecxz
outsb
aas
pop
xlat
ss
jmp
rcr
roll
lcall
fldt
xor
mov
movsb
xor
pushf
dec
and
stos
jb
in
xor
mov
jb
bnd
ss
dec
push
nop
dec
cli
daa
pushf
loopne
cmp
in
lds
dec
jle
lods
and
push
movsb
pop
mov
xlat
fwait
test
mov
xchg
cmpsl
pop
jno
aam
add
inc
daa
mov
loop
movsb
and
jecxz
xchg
mov
sbb
daa
push
and
and
cmp
push
scas
cmp
or
les
or
fsubl
fwait
cmp
mov
mov
mov
or
push
xchg
jmp
push
or
pop
ds
jno
inc
push
and
aam
cwtl
sbb
in
cmp
mov
push
cwtl
xchg
ja
scas
in
sub
jae
shl
jo
cwtl
aad
add
sub
mov
pop
sti
call
xchg
mov
scas
rcrb
xor
sbb
sbb
pushf
int3
loopne
jmp
jno,pn
inc
sbb
lds
sar
cmpb
in
push
adc
leave
into
stos
push
pop
xchg
lret
mov
mov
icebp
mov
pop
pop
ret
jo
jb
stc
test
loope
push
loop
mov
aad
shlb
clc
mull
sbb
xchg
sub
inc
scas
xchg
cmpsb
enter
bound
aaa
xor
gs
adc
fdivs
bnd
push
jecxz
and
fisttpll
lods
stc
sub
xor
mov
xor
mov
outsl
enter
push
push
loopne
testl
mov
lcall
sbb
xchg
movsb
mov
mov
lea
movsl
push
jmp
fbstp
rcll
xchg
or
cmp
mov
or
lea
jle
je,pt
dec
test
out
inc
cmc
jns
int3
clc
sub
dec
out
push
ljmp
testl
jns
in
push
stc
cmpsl
or
cmc
dec
inc
push
aad
mov
hlt
mov
mov
scas
mov
dec
repz
add
sbb
lods
sub
pop
or
idivl
inc
xor
setg
fidivrl
push
orl
sub
push
cmpsl
cmp
sbb
lea
out
push
mov
pop
mov
cmp
js
std
cli
sub
lcall
sub
lcall
jp
es
fldenv
jp
aas
adc
int3
jge
iret
add
pop
arpl
xchg
in
mov
imul
cli
and
adc
or
dec
je
loope
inc
sti
xchg
cli
in
jl
xchg
cmpsb
ficompl
push
imul
mov
cmpb
test
pop
movsl
insb
cmp
lock
loopne
int3
or
mov
out
push
inc
mov
dec
push
das
aam
push
add
mov
and
jecxz
loope
adc
or
cltd
xchg
iret
mov
outsb
and
adc
out
mov
dec
jle
mov
and
test
bound
add
out
je
and
mov
leave
or
push
enter
addr16
push
or
xor
jle
jl
cmp
sub
test
dec
mov
andl
out
popa
sub
cmp
imul
test
sbb
cmp
inc
shlb
dec
imul
and
xchg
xlat
lods
ljmp
aad
daa
testb
jg
cld
aaa
cmpl
sbb
idiv
jle
dec
sub
imulb
fsubl
lds
or
aas
fwait
outsb
inc
xor
test
frstor
sbb
add
lods
mov
and
pop
aaa
inc
outsb
test
jecxz
xchg
rcrb
in
add
int3
pop
lcall
fldl
sbb
daa
mov
jno
cmc
push
push
jl
ds
lret
ficomps
das
fwait
mov
mov
adc
popf
push
inc
adc
lahf
leave
fs
scas
les
mov
cwtl
mov
jg
repz
hlt
push
lds
adc
les
pop
mov
aam
cmpb
and
out
or
stc
mov
xchg
dec
addb
add
stos
cmc
push
dec
aam
adc
jnp
pop
ja
pop
fmull
pop
repnz
jb
cli
or
out
adc
test
adc
and
insb
cmp
notl
mov
enter
fs
xchg
xor
mov
push
test
sbb
cmp
div
and
in
or
int3
imull
hlt
mov
lock
dec
outsb
out
push
sub
imul
fstl
xchg
mov
fdivr
test
add
mov
pop
sar
add
jbe
jo
adc
out
fwait
repz
stc
addr16
or
popa
nop
mov
movsb
mov
jge
call
addr16
mov
stc
push
jo
aas
scas
push
das
fwait
in
cwtl
jle
fiaddl
pop
dec
cmp
mov
mov
out
mov
movsl
pop
and
xchg
mov
addb
sbb
adc
dec
jae
nop
faddl
dec
scas
and
imul
and
mov
rep
lcall
bound
add
mov
cmp
imul
jecxz
lcall
repz
insl
sub
lods
stc
xchg
fsts
mov
es
cmp
popa
lock
out
push
mov
xchg
mov
xchg
push
movsl
cmpsb
sbb
inc
call
or
jmp
rcrl
sub
adc
ja
and
mov
push
inc
pushf
dec
xchg
mov
pop
mov
push
lods
std
jnp
sub
sbb
leave
xchg
cmpsl
ds
sub
or
xor
cmpsb
xchg
pushf
xchg
dec
sar
or
fprem1
sti
out
sbb
add
lock
xchg
int3
mov
lea
fwait
scas
jo
daa
cli
jo
addr16
mov
es
mov
sbb
cmc
in
push
push
cli
iret
mov
xor
iret
fwait
out
mov
lahf
orb
mov
pop
xchg
jne
push
nop
add
daa
loopne
lea
mov
mov
mov
adc
shrl
in
imul
add
add
std
sbb
jae
mov
ret
xor
iret
mov
pop
push
mov
mov
in
mov
xor
enter
and
or
fldt
cmp
xor
outsl
dec
xchg
pshufw
xlat
adc
push
fdiv
mov
xchg
sti
add
repnz
ret
fsubl
lahf
in
hlt
mov
std
xor
and
in
repnz
push
mov
dec
rolb
iret
xchg
mov
sub
dec
test
sbb
mov
mov
call
out
fisubl
rolb
xchg
in
rolb
xchg
inc
inc
jbe
data16
cli
pop
scas
mov
and
ficoml
push
sbb
mov
push
jo
mov
xchg
arpl
cld
cmp
inc
push
lahf
jnp
jnp
fnstcw
aaa
pop
test
jo
dec
int
lcall
popf
and
fcomps
aaa
and
ja
push
fistl
repz
int3
mov
pop
lods
and
push
mov
mov
push
and
cmp
cmp
