pusha
dec
movl
sub
jmp
pop
sub
or
or
jmp
in
push
push
dec
pop
rol
push
dec
pop
sbb
push
dec
pop
shl
jmp
add
lods
sbb
rol
adc
inc
add
pop
sub
sub
jle
push
clc
pop
sahf
movb
jmp
xor
pop
or
jmp
push
push
dec
pop
rcl
jmp
jecxz
mov
adc
push
inc
pop
jl
sbb
sub
rcr
dec
movb
adc
xor
ror
movw
js
jmp
das
jb
sub
and
jmp
lods
mov
push
inc
pop
rol
xor
add
jae
sbb
jmp
loop
rorb
or
movb
sub
jmp
cmp
xchg
pop
jmp
inc
xor
xor
dec
pop
rcl
xor
jmp
xchg
icebp
scas
ror
add
or
movb
shl
jo
ror
and
sub
or
movb
and
jmp
and
in
inc
shrl
fistps
jl
jo
push
dec
pop
clc
movw
and
rcr
jmp
mov
shr
mov
push
xchg
pop
jmp
aaa
std
sti
inc
sub
movb
push
xchg
pop
and
sbb
push
dec
pop
jmp
push
xor
stos
jg
dec
out
out
aad
sbb
movb
or
jmp
push
inc
mov
loop
jmp
xchg
lahf
or
js
push
xchg
pop
jg
sub
inc
movl
push
inc
pop
ror
push
inc
pop
rol
jno
sbb
push
sahf
pop
rol
and
push
inc
pop
cmpl
jne
sbb
andnps
mov
jmp
add
add
mov
stos
mov
pop
cmp
xlat
mov
push
pop
addr16
pop
cld
pop
inc
mov
movsl
inc
mov
movsl
xchg
push
pop
push
and
dec
sti
dec
push
test
pop
pop
cld
pop
jmp
pop
pop
mov
or
sti
dec
in
cltd
sub
stos
dec
daa
adc
shrl
fimuls
dec
in
cltd
jl
lods
dec
sti
dec
inc
movsl
inc
mov
sahf
scas
or
sarl
push
sti
mov
pop
cld
pop
add
sbb
dec
pop
call
mov
dec
lods
or
rorl
pop
add
sbb
dec
push
pop
sbb
mov
dec
cmp
leave
pop
cmp
ss
adcl
mov
sbb
lret
mov
dec
aam
scas
or
mov
js
pop
ror
les
and
xor
mov
add
or
dec
dec
mov
sbb
inc
aas
popf
fwait
ret
imul
dec
mov
xor
push
inc
stos
push
dec
pusha
gs
pop
mov
mov
movsl
inc
mov
sbb
mov
mov
ret
jg
jnp
aaa
pop
rorl
sbb
ret
jnp
jnp
aaa
push
mov
lret
jge
xor
mov
mov
shrl
dec
aaa
pop
rorl
aam
mov
or
mov
shll
sbb
sar
js
adc
dec
mov
sbb
dec
xor
lret
sub
sub
sub
sub
sub
sub
sub
sub
jge
ljmp
lods
xor
adc
insb
mov
adc
mov
sbb
lea
mov
pop
roll
dec
into
dec
dec
outsb
sbb
cwtl
pop
test
sarb
enter
xchg
xor
xor
push
push
xchg
adc
insb
test
xor
dec
xor
mov
pop
mov
mov
push
aas
int3
mov
shl
inc
aas
and
adc
movsl
insb
adc
lcall
lods
pop
iret
sub
or
jno
cmpsl
cmp
cs
sbb
flds
dec
adc
cs
inc
movsl
mov
dec
jns
jnp
in
mov
ret
mov
pop
mov
insl
inc
movsl
mov
dec
jns
jnp
in
or
add
mov
dec
xor
cwtl
mov
mov
das
cmp
aaa
xchg
cmp
jge
jnp
aaa
pop
mov
sbb
sahf
mov
je
pop
mov
mov
inc
dec
enter
aaa
jno
cmp
sti
mov
mov
jp
pusha
xor
push
fidivl
cs
xchg
jg
test
mov
lret
mov
dec
aaa
mov
mov
dec
mov
pop
rcl
test
mov
mov
loopne
sbb
dec
mov
pop
jmp
or
dec
jmp
jg
mov
pushf
mov
or
xor
mov
pop
mov
dec
jmp
xor
and
push
mov
cmp
fnstcw
mov
cmp
shlb
fisubrl
xor
cmp
sub
or
aam
std
fistpll
fldcw
enter
fbld
je
and
pop
cmc
cmp
xor
sub
or
sub
fnstcw
iret
and
xor
pop
leave
cs
cmp
leave
cmp
aad
std
pop
cmc
cmp
das
fidivrs
lds
aad
shrl
sub
xor
es
sub
sub
sub
dec
mov
pop
mov
dec
dec
jnp
imul
mov
dec
mov
add
add
in
add
add
add
inc
add
add
add
and
add
add
add
add
clc
jp
out
sarl
sbb
ficompl
bound
rcl
icebp
jmp
mov
iret
or
das
push
bound
sub
fwait
push
push
mov
xchg
add
add
add
add
inc
icebp
add
js
lds
movsb
jns
lea
add
add
add
add
add
clc
outsl
icebp
and
in
add
stos
add
add
add
pop
add
add
add
add
add
add
add
adc
add
add
add
jl
add
or
add
add
push
add
mov
adc
add
add
add
add
mov
add
mov
add
movl
add
stos
add
add
add
add
mov
add
or
add
add
add
xchg
add
pop
add
add
movsl
add
sahf
xchg
ljmp
push
ret
imul
sbb
rol
mov
adc
push
jbe
pop
lret
push
popl
movsl
test
jle
loop
repnz
mov
mov
ds
xlat
dec
test
add
popa
fisubl
mov
loope
cmpsb
push
aaa
fiaddl
popa
mov
inc
cwtl
dec
push
pop
adc
repnz
aaa
xor
and
mov
mov
add
shrl
int3
push
mov
cmpsb
sti
mov
arpl
aaa
js
pop
andl
shrb
mov
dec
add
insb
jmp
xchg
lret
mov
xor
cmp
test
subl
jg
inc
dec
ljmp
pop
xchg
xlat
popl
test
or
repnz
pop
dec
pop
xchg
cmpsl
call
jg
cmpsl
jecxz
sub
jle
jae
jecxz
enter
mov
lcall
or
bnd
dec
pop
popf
in
mov
fmuls
xor
xchg
jmp
lcall
push
insb
inc
out
out
mov
test
cwtl
xchg
or
xor
jnp
gs
jmp
mov
cmc
dec
inc
sub
push
cwtl
jmp
sub
mov
enter
out
popf
cli
jle
mov
mov
fildll
rcrl
add
push
and
dec
jbe
sbb
inc
pop
sub
mov
push
jo
push
mov
iret
add
rcr
pusha
mov
call
adc
cmp
stc
xchg
mov
pop
das
cmpb
pop
sbbl
sbb
pop
xchg
ljmp
push
cld
adc
xchg
daa
loope
rclb
movsb
iret
sbb
addr16
mov
inc
movsb
cmpsl
mov
fiaddl
push
outsl
jne
sbb
out
into
jae
push
in
adc
push
xchg
int
sbb
test
add
xchg
sub
in
mov
mov
cmpsb
add
out
push
adc
jmp
lahf
cmc
lea
daa
or
mov
hlt
loope
adc
into
add
nop
popf
mov
enter
and
mov
mov
add
popf
nop
das
in
sbb
sbb
sarl
pusha
inc
popa
inc
mov
icebp
lret
negb
cmp
or
stc
into
push
cli
test
mov
out
in
pop
and
adc
fiaddl
cmpsl
or
cmp
insl
dec
mov
cmp
mov
sub
mov
cli
inc
shlb
cmp
inc
xor
lods
adc
mov
int
addr16
jnp
mov
pop
jp
xor
add
lret
or
lock
idivb
pushf
and
adc
xchg
pop
shr
jmp
push
mov
mov
sub
adc
daa
arpl
add
popf
cmp
ss
cmp
mov
and
sahf
pop
adc
sbb
mov
mov
lcall
or
cld
add
adc
movb
cmp
xor
out
mov
jmp
jb
mov
fsubr
xor
mov
ljmp
dec
push
fisubl
mov
lret
xchg
sti
push
mov
and
fildl
fld
add
pop
mov
mov
std
mov
stos
inc
jne
cltd
stc
imul
pop
cmp
add
loope
or
iret
pushf
push
loope
shll
outsl
clc
fwait
dec
push
xor
sub
iret
mov
fs
cmc
jbe
push
in
leave
pop
jb
cmpsb
mov
sbb
adc
sahf
ja,pn
cmp
xor
jns
jecxz
mov
popf
push
mov
sar
fidivl
pop
inc
push
test
imul
fcomp
xchg
data16
xor
jne
jl
into
push
push
dec
jg
dec
arpl
rcrb
out
aaa
loop
dec
sub
push
xchg
scas
jmp
mov
cmp
adc
mov
add
movb
mov
xchg
ffree
inc
hlt
add
xor
pop
xchg
xchg
mov
xor
or
xchg
lds
inc
pushf
xor
push
ret
pop
and
ds
jns
push
mov
idivl
xor
out
fwait
call
cmp
popa
call
jl
sbbl
add
mov
xchg
jbe
adc
dec
shll
or
cmp
adc
into
cld
pop
sbb
mov
divl
push
cmp
mov
sub
push
ret
dec
ret
pushf
rol
sahf
adc
lret
pushf
mov
jnp
xchg
cwtl
fwait
or
cmp
fildl
or
test
pop
xchg
mov
mov
pop
loope
int
das
addr16
inc
fcoml
cmp
xchg
lcall
fidivl
jp
mov
pusha
data16
and
jp
sub
xchg
test
cli
dec
hlt
jns
cmpsb
outsb
cmpl
pextrw
sbb
xchg
mov
lcall
repz
out
shll
insl
or
jb
mov
mov
mov
xor
xchg
inc
ffree
push
int
notrack
push
mov
add
xorb
mov
mov
mov
sub
mov
stc
icebp
movsl
sbb
xchg
gs
lods
add
sbb
dec
in
xchg
inc
push
inc
xchg
sub
je
cs
jle
aad
pop
ss
push
cmp
int3
daa
out
mov
cli
add
adc
mov
iret
add
sub
pop
xchg
jo
loop
fcmovu
jb
dec
lods
stc
cmp
stc
jmp
dec
ficoms
adc
and
lahf
pop
pop
out
dec
mov
jae
daa
inc
fs
repnz
push
rorb
adc
ds
popf
push
pop
sbb
outsl
adc
mov
insb
in
adc
lret
fcoml
fisubs
frstor
daa
pop
enter
add
in
enter
ja
xlat
nop
xchg
aaa
inc
data16
mov
cmovp
mov
lahf
arpl
imul
xchg
push
mov
movsl
adcl
into
pop
sub
push
mov
arpl
push
lret
in
aas
add
add
mov
xlat
enter
mov
pushf
stos
jno
sbb
mov
out
add
dec
cmpsl
sub
push
jge
add
jge
jno
mov
insb
pop
aaa
cmp
adc
inc
push
pusha
sbb
sbb
scas
int
pushf
xchg
cmp
outsl
out
jbe
test
sub
call
cmpsb
jns
pusha
sub
inc
mov
pop
sbb
inc
cmc
adc
imull
dec
leave
push
addr16
std
out
adc
push
jbe
jns
mov
push
scas
mov
mov
xor
in
fldenv
movsb
xor
stos
mov
and
or
fwait
push
jle
cli
jbe
daa
pop
ljmp
pop
pop
and
push
xchg
repz
push
andb
inc
repz
jne
mov
daa
iret
ret
cmp
add
sub
xchg
xchg
out
add
mov
sbb
nop
xor
mov
divl
movsb
push
inc
inc
jne
fimull
sub
lahf
enter
sbb
and
pop
stc
pop
fidivrs
dec
sbb
outsb
outsb
daa
pop
in
inc
cmp
jp
cmp
pop
stos
jl
xor
dec
neg
pop
int3
mov
sysenter
mov
inc
enter
fcoms
fwait
movsb
lds
gs
jnp
push
and
xorb
xchg
insl
fisubrs
fdivrs
and
fs
push
mov
sbb
push
cmp
pop
pop
outsl
test
xchg
mov
cmp
fnstenv
aad
push
lea
jbe
lds
sbb
lods
in
inc
inc
and
mov
loope
jns
es
sti
xchg
pop
sbb
jl
je
jp
out
push
sbb
cltd
xlat
mov
lock
test
movsl
mov
aam
test
pushf
jg
inc
fwait
aad
mov
fdivrl
mov
xor
movsl
std
aam
cmpb
inc
cmp
xor
xchg
imul
mov
js
pop
clc
ret
negl
pop
pop
ret
pop
jbe
dec
mov
mov
ljmp
sti
fwait
test
add
das
xor
clc
pusha
adc
mov
pushf
pop
nop
mov
mov
cmp
pop
inc
out
rorb
add
and
add
out
jbe
xchg
mov
scas
sbb
sub
imul
mov
sbb
imul
jl
into
call
or
sub
movsl
jecxz
call
push
dec
inc
stc
insl
mov
jge
test
sub
mov
sub
mov
test
mov
or
dec
bound
fsubrl
push
sub
push
fucom
leave
stc
fsubp
dec
mov
pushf
aam
in
jg
lret
mov
lds
jne
push
imul
scas
lea
loopne
pop
dec
lcall
and
xor
cmp
xor
call
dec
sarl
ljmp
hlt
je
out
in
icebp
int3
lret
push
jns
movsb
aad
stos
dec
xchg
xchg
sub
sti
mov
push
into
call
inc
popf
adc
cmpsb
gs
xor
mov
sub
jg
adc
sub
mov
or
outsl
in
mov
in
add
xchg
icebp
loope
iret
addb
outsl
xchg
je
repnz
mov
push
std
shr
cmp
lds
and
test
cmpl
xlat
arpl
mov
sub
jl
cmc
mov
and
bound
cmp
sbb
or
jbe
push
sbb
mov
dec
and
mov
shlb
pop
clc
das
stos
cmc
les
add
sub
aad
mov
call
push
mov
lret
aas
jmp
push
imul
mov
aad
adc
cmpsb
mov
aam
mov
inc
rcll
pop
insl
xchg
inc
rcl
add
adcl
pop
sarb
add
movl
xchg
add
std
dec
repz
add
xorb
imul
rorl
mov
stos
lds
xorl
or
add
std
repz
ljmp
aam
pop
push
cmc
fnstsw
cmp
sbb
xlat
sub
xlat
fwait
and
in
and
jmp
lods
outsb
lahf
fimuls
push
dec
imul
icebp
in
movsb
test
cmp
inc
test
xlat
mov
push
inc
out
imul
mov
in
lret
mov
xorb
cmc
dec
arpl
mov
stc
mov
cmp
dec
mov
cmpsb
cmpsl
in
mov
test
pop
or
out
int
lcall
sub
jbe
mov
xor
jp
mov
push
into
mov
in
lret
flds
push
mov
imul
push
adc
insb
aad
mov
or
dec
test
adcb
cmpsb
sarb
pop
jne
stos
cmp
add
out
mov
pop
cmp
dec
cmp
dec
push
dec
jg
cld
and
js
orb
jns
sub
jae
jns
push
sbb
ret
mov
sbbb
xorb
push
addr16
mov
lret
jbe
fnsave
jae
and
mov
shlb
xor
dec
inc
push
lods
loop
mov
insb
icebp
mov
sti
ds
outsl
adc
cld
dec
call
jb
dec
rcl
insb
cmc
xchg
xor
or
add
sub
daa
add
popl
inc
lret
sbb
fadd
out
enter
sub
jge
pop
push
pop
push
jbe
dec
or
add
loopne
inc
scas
jmp
push
mov
fidivrs
std
adc
xchg
mov
dec
test
lret
sahf
gs
cli
mov
sub
mov
out
shlb
jbe
sub
push
shr
pop
dec
ficoms
inc
mov
adc
sti
and
xor
popf
popa
in
mov
mov
dec
test
xor
wrmsr
lods
test
nop
cmp
xor
popa
ss
incb
dec
pop
inc
jbe
clc
sbb
loopne
cld
cs
idivl
or
sbb
mov
sbb
repnz
inc
pop
dec
scas
mov
inc
cmp
push
mov
fs
lcall
add
push
cmp
jmp
jmp
cmp
cmp
or
push
rcrb
icebp
dec
faddp
sub
loopne
mov
repnz
and
movsb
xor
mov
sub
iret
cli
ret
or
leave
inc
mov
xchg
lret
add
lahf
push
test
pop
sbb
add
aad
mov
punpcklbw
outsb
out
sti
in
aaa
pop
inc
add
dec
pop
sbb
in
ja,pn
aas
mov
insl
stc
pop
pop
ds
sbb
popf
fs
inc
dec
mov
loopne
ds
xor
or
xor
cli
pop
pop
lret
xchg
aaa
push
daa
lock
in
and
sbb
mov
mov
inc
lods
mov
mov
lods
idivb
mov
rclb
call
nop
adc
pop
outsl
pushf
lahf
in
in
mov
loopne
arpl
or
cwtl
lret
addr16
repz
enter
mov
jb
arpl
gs
jns
loopne
nop
push
mov
fimull
mov
mov
adc
mov
aad
dec
mov
xlat
lea
and
popa
mov
mov
push
mov
imul
jne
mov
jg
insb
cld
lcall
in
enter
pop
and
lea
pop
mov
imul
loope
mov
jg
sbb
fdivs
outsl
insl
pop
xchg
out
pop
jae
sub
jp
push
sub
outsb
jnp
ss
bound
mov
inc
ja
cmpl
loopne
pop
test
xchg
add
cmp
pop
adc
xor
mov
and
xchg
push
sbb
xor
sbbl
leave
push
mov
cmp
inc
add
fs
call
mov
cwtl
push
int3
dec
push
xor
clc
mov
cmp
push
push
inc
ret
xor
or
or
or
test
outsl
jp
sbb
mov
dec
xor
dec
mov
das
mov
cmp
sahf
add
add
jge
movsl
jl
lea
cmp
fidivs
pushf
sub
aam
xchg
out
js
xor
inc
out
or
leave
popa
mov
dec
xor
test
mov
movsb
lcall
sbb
or
outsl
sahf
dec
popf
mov
lcall
cmc
push
ds
lds
xor
adc
sub
test
mov
mov
in
inc
jmp
mov
inc
mov
out
dec
fbstp
and
jle
cltd
mov
enter
test
pop
mov
in
cld
or
xlat
lret
scas
mov
push
cli
js
ds
fildll
pop
cmc
gs
dec
nop
pop
out
pop
stos
adc
xchg
ja
insb
int3
mov
jb
outsl
lret
icebp
je
cmpsl
mov
dec
mov
loop
testb
push
in
jmp
outsb
gs
jge
cmpsw
xor
jge
mov
mov
mov
jne
pop
cmpb
xor
rclb
ja
jg
clc
adc
mov
mov
and
adc
jl
cltd
negb
int
xor
fiaddl
jg
test
decb
cltd
in
arpl
xchg
sbb
adc
insb
mov
orl
xchg
adcb
inc
jnp
adc
adc
inc
rclb
or
iret
and
insb
or
jmp
inc
dec
and
gs
xor
cwtl
aad
adc
jnp
or
cmp
dec
adc
and
pop
or
sub
leave
add
pusha
pop
pop
or
addl
rol
loope
push
dec
push
cmpb
mov
nop
arpl
test
mov
or
cli
insl
sub
cmpsb
insl
mov
icebp
push
loope,pn
add
adc
repz
or
imul
pop
rorb
cmp
inc
adc
dec
repz
mov
push
lods
or
adc
inc
cltd
jns
orl
push
xor
xor
aam
test
fwait
jp,pt
clc
je
ficoml
cmc
xor
das
loopne
jbe
sub
movsb
jecxz
adc
pop
push
scas
adc
sub
or
ds
adc
sbb
xor
sbb
xchg
dec
cli
dec
daa
test
push
jmp
dec
les
adc
mov
sub
dec
idivl
jnp
leave
add
fnstsw
cwtl
xor
push
lahf
dec
pop
rolb
fdivrp
and
push
inc
sub
leave
xchg
push
or
movsl
or
jno
jo
pop
scas
enter
cmp
sbb
sub
pop
add
cmpsl
mov
add
fdivl
cmp
adc
outsl
cmp
jbe
nop
dec
cltd
imul
nop
lret
movsl
test
loope
mov
int3
push
xchg
popa
ja
fs
jnp
add
mov
insl
mulb
aas
popf
dec
lret
xchg
lret
sahf
repz
jb
mov
outsl
test
jmp
test
sbb
ds
mov
add
test
or
xor
es
pop
inc
aaa
push
out
sbb
push
dec
mov
aas
jo,pn
int3
ds
stos
insl
dec
inc
aas
pop
lock
clc
loopne
add
push
add
movsl
call
mov
sub
add
adc
jne
adc
add
or
mov
mov
push
loopne
gs
sub
cld
inc
mov
mov
dec
lahf
bound
mov
fildll
push
push
adc
lret
inc
icebp
stc
fnstsw
stc
sbb
inc
ds
fistl
inc
jo
jns
int3
repz
push
mov
enter
mov
mov
pop
stc
fmuls
mov
iret
pop
mov
sbb
in
dec
loop
hlt
mov
jbe
adc
jecxz
mov
iret
inc
mov
xor
pause
cmp
aas
outsb
dec
shl
sub
push
cmc
test
addr16
pop
push
stc
add
sahf
pop
cmp
and
vpsrlq
cmp
and
or
xchg
iret
xchg
rcll
mov
cmpsb
mov
aas
js
gs
mov
in
popf
mov
mov
pop
cmp
outsb
movd
testb
inc
jb
out
mov
mov
or
inc
inc
or
push
mov
rcrb
xchg
or
sub
stos
rcrl
dec
leave
mov
lea
xchg
push
addr16
add
imul
xor
lds
jo
jne
push
jo
dec
lock
fcmovnu
jle
addr16
fidivl
shlb
lahf
xor
dec
test
push
insl
sbb
dec
mov
enter
jbe
sti
out
mov
or
mov
xor
add
repnz
mov
repnz
out
and
jp
xchg
mov
add
pusha
sbb
fldl
loopne
pop
sub
jle
push
sti
iret
bound
push
js
push
jo
inc
adc
imul
dec
pop
iret
mov
pop
popf
rorb
and
bnd
push
mov
xchg
xor
fiaddl
fildll
popa
mov
addr16
and
sub
cld
push
xchg
lahf
xchg
pop
outsl
popf
ljmp
mov
jns
add
sub
jns
das
push
cmp
mov
jge
adc
push
jae
jbe
loopne
push
fidivs
mov
decl
inc
repz
push
std
leave
or
inc
adcb
iret
loope
insb
jo
jecxz
pop
or
pop
pop
jbe
arpl
test
adcb
mov
adc
aad
jb
xchg
xchg
mov
xchg
into
fnstenv
or
pop
pop
outsl
sub
dec
mov
es
cmp
mov
hlt
insb
mov
bound
sarl
adc
cltd
xchg
insb
cmp
popa
cmpsl
test
aas
gs
loopne
lods
push
lock
rcr
mov
fdivs
nop
flds
ret
inc
jmp
nop
es
mov
jno
stc
jl
out
mov
push
subl
fidivs
popa
inc
mov
add
mov
mov
pop
shll
xchg
sarl
cwtl
lea
mov
outsl
pop
scas
xor
in
or
sub
ljmp
mov
jae
jbe
clc
repz
mov
pop
mov
stc
sbbb
insl
cld
xlat
int3
xchg
fcompl
inc
or
push
pop
xor
pop
jg
and
aam
push
jmp
mov
mov
cmp
inc
fildl
popa
xor
rcrl
mov
test
les
bnd
add
cmp
adc
inc
pop
lcall
lea
lods
dec
test
in
cld
or
xchg
pop
push
mov
mov
mov
repz
nop
dec
and
cmpsb
insb
xchg
add
ficoml
mov
js
or
lcall
inc
pushf
fisubrl
mov
cmp
mov
adc
outsl
rorb
mov
jno
repnz
ja
xlat
leave
int
sbb
int3
adc
pop
adc
jg
sub
mov
lcall
test
sub
daa
vmulss
dec
mov
rclb
mov
pop
inc
mov
daa
push
or
mov
ds
sbb
outsb
jecxz
ljmp
add
or
jne
lds
hlt
xor
cmpsb
stos
adc
inc
add
cmpsb
hlt
clc
dec
iret
fwait
push
dec
orb
aaa
xchg
sub
ror
das
fisttpl
xor
pop
mov
or
dec
jmp
dec
push
mov
xchg
cwtl
jmp
inc
mov
dec
cmovb
ja
leave
les
sar
int3
mov
sbb
pop
inc
jecxz
lcall
es
fwait
adc
push
mov
dec
arpl
lret
out
inc
pop
push
fsubl
sbb
pop
js
mov
or
int
jl
jg
and
add
push
jnp
popf
mov
ret
sub
imul
cmpb
jmp
fdivr
xorb
imul
loopnew
adc
cmpsl
imul
test
xchg
ret
lcall
dec
jp
pop
loopne
addr16
je
ljmp
jb
xchg
out
insb
out
xchg
mov
mov
lcall
cmpsl
xchg
sbb
ret
xchg
add
dec
xchg
loope
out
jge
in
lcall
mov
xor
sbb
repz
and
fstps
ds
and
les
pop
imull
or
pushf
and
mov
aas
mov
push
iret
cwtl
aad
int
sub
loopne
xchg
jae
jnp
inc
ret
imul
mov
xorl
js
sub
xchg
push
inc
mov
addr16
outsl
jno
scas
and
xchg
jne
xchg
pop
push
sub
pop
xchg
cmpsl
fwait
jae
mov
popf
std
mov
jmp
push
dec
lods
imul
or
ret
mov
sub
inc
addsd
outsl
subl
ss
out
jmp
push
std
and
or
addr16
sahf
fistpl
sahf
shrb
scas
push
mov
pop
or
ljmp
mov
cmp
mov
repz
add
mov
sub
push
icebp
dec
cmc
shlb
mov
inc
aas
fbld
mov
pop
inc
xor
ret
popf
ficoml
cmp
push
imul
sub
xor
mov
jp
mov
stc
or
xchg
cmp
in
mov
dec
out
cld
adc
cmp
loope
xor
or
xchg
dec
sbb
movl
out
mov
insl
movl
xor
jnp
aas
je
int
lods
rcl
xchg
loopne
dec
sub
mov
mov
pusha
inc
loop
jb
cmp
mov
pop
dec
xor
dec
mov
movsb
and
push
push
pop
daa
lret
pushf
mov
mov
sbb
xor
pushf
xchg
cmp
jo
jb
xchg
jl
fdivp
shll
jmp
dec
inc
cmp
and
loop
sub
pop
push
push
sub
repnz
aam
fmul
fistpll
jo
xlat
aaa
dec
jns
xor
aaa
pop
jbe
fimuls
out
mov
pusha
cld
sub
sub
aam
inc
xchg
les
cwtl
cmpsl
aam
loopne
cmpsb
nop
iret
imul
test
jne
sub
jnp
xchg
lock
jge
mov
pop
adc
popf
push
ret
add
arpl
fcmovnu
nop
pop
push
mov
jge
jle
rclb
ljmp
mov
cmp
cmp
cld
pop
loopne
sbb
mov
test
cmp
pushf
mov
in
bound
int3
push
and
stos
pop
sbb
aam
mov
lahf
adc
sub
popf
inc
cli
mov
lock
and
out
fadds
mov
in
sub
popf
xor
ljmp
and
cmp
push
cmp
mov
mov
and
mov
pop
in
fs
leave
nop
or
bound
push
mov
fbld
dec
mov
enter
and
cld
stos
inc
repnz
xchg
in
xchg
into
ret
adc
lods
imul
lret
dec
loope
inc
std
add
add
aas
jp
mov
or
setb
mov
mulb
sahf
clc
add
sub
sbb
stc
xor
add
imul
pop
jecxz
mov
lret
mov
loope
mov
into
add
jb
scas
push
rorb
cmpsb
push
cld
or
es
fldcw
enter
dec
add
inc
mov
and
jle
je
xchg
sub
stos
cli
jge
cmp
ret
mov
push
das
mov
sub
out
sahf
inc
jecxz
mov
in
test
push
mov
rorb
mov
xor
cltd
sub
gs
dec
test
inc
dec
divb
cli
and
stc
or
mulb
dec
mov
sbb
fdivs
mov
jae
shl
ljmp
shlb
insl
in
scas
add
sbb
out
mov
rcl
jecxz
data16
mov
jno
dec
imul
sbbb
outsl
out
addr16
mov
das
jo
shl
ja
cmc
pop
retw
andb
sti
filds
inc
jb
mov
cmpsb
adc
xlat
mov
das
sub
xor
push
inc
iret
and
xor
int
mov
xchg
es
insb
adc
cmp
add
sub
lea
add
add
mov
add
dec
jle
and
xor
jb
movsb
outsb
cmp
xchg
in
in
and
cmp
sub
movsl
xor
lret
mov
jbe
mov
gs
pop
cwtl
les
mov
inc
cld
dec
sahf
pop
fimull
maxps
enter
ja
jle
in
lock
xor
add
scas
or
nop
out
and
push
pop
jge
xchg
cmp
mov
jne
or
rcrb
rdpmc
xor
and
cli
xchg
aad
xchg
mov
clc
jl
xorl
pusha
pop
inc
stos
test
hlt
aam
orl
popf
mov
mov
out
pushf
cmp
adc
push
xchg
inc
jo
aam
sbb
xor
push
movsb
push
in
popf
add
xchg
into
cmp
mov
jbe
pop
adc
mov
enter
jge
sbb
bnd
ljmp
rcrl
add
gs
inc
cmp
mov
add
lods
hlt
clc
aam
jmp
pop
jge
ljmp
jns
pop
dec
testl
shl
lds
adc
je
xor
lods
outsb
sub
ret
lahf
sub
mov
inc
jl
jo
mov
dec
push
in
xlat
pop
lock
enter
cmp
bsr
push
add
inc
icebp
mov
xchg
cmp
mov
cmp
notb
inc
or
lahf
dec
pop
cs
pop
adc
mov
mov
push
push
fists
jnp
hlt
or
mov
pop
loopne
dec
outsb
push
test
push
into
add
pop
andb
pop
cli
or
xor
test
push
lea
mov
popa
insl
pop
arpl
loop
jae
clc
ljmp
dec
dec
xchg
int
xlat
xor
cs
jg
ret
aas
das
shl
mov
outsl
mov
push
fdivl
pop
pusha
addr16
test
rcll
or
sub
sub
dec
jae
notl
xor
insb
xchg
ja
mov
adc
mov
mov
cmp
mov
sub
cmc
subps
mov
cmp
or
aas
gs
jns
sbb
push
cmpsl
mov
out
or
xchg
inc
aas
aas
mov
popf
outsb
lahf
int
pop
jbe
sub
mov
in
xchg
jg
mov
dec
sub
push
ja
or
push
notl
sub
mov
jae
adc
and
mov
rcl
or
sahf
es
dec
xchg
int3
jecxz
xchg
adc
inc
lods
pop
cmp
mov
jae
test
jno
jle
sahf
jecxz
push
hlt
mov
push
mov
and
movsb
and
lret
inc
adc
lret
notb
push
sbb
adc
dec
test
cld
sbb
repz
add
test
enter
push
into
push
xchg
cmpsl
daa
cmp
stos
leave
icebp
fimuls
iret
out
sub
jmp
xor
stos
js
mov
pop
ss
jne
leave
mov
sub
mov
ja
or
test
inc
cmp
xor
cmc
adc
movsb
mov
jo
push
inc
fwait
adc
mov
cmp
lcall
dec
ds
popa
push
repz
mov
mov
inc
fs
dec
jbe
ret
jecxz
jmp
mov
push
cmpsb
pop
xchg
jb
cmpsl
mov
or
xor
fdivrl
test
dec
je
addr16
push
ficompl
adc
pop
mov
jae
push
xchg
xor
and
adc
test
es
add
lea
mov
cmp
out
sbb
cmp
mov
jg
fcmove
xor
out
or
cmp
sub
ljmp
dec
mov
sbb
repnz
shll
push
xchg
cwtl
push
push
add
and
cmp
mov
push
cmp
jae
cmp
inc
std
aaa
lods
cwtl
pusha
mov
pop
push
test
mov
es
jbe
lds
popa
lcall
sbb
sub
lahf
cmp
fwait
hlt
xchg
pop
ret
hlt
mov
loop
add
sbb
xor
cmp
or
mov
push
xchg
aad
clc
dec
cwtl
in
leave
test
lret
test
mov
jle
shll
adc
or
add
inc
aaa
repnz
sub
call
cmpsl
jmp
dec
loope
rclb
adc
lds
cmp
sbb
jns
adc
sub
jg
sahf
xor
stos
dec
cmpsb
fwait
xor
xor
hlt
jne,pt
addr16
cmpb
in
fidivl
jg
inc
jmp
jnp
xchg
add
loop
or
jns
ret
xchg
mov
mov
movsl
lds
fidivrl
cmp
icebp
test
out
outsl
fld
or
nop
rolb
lock
adc
test
or
test
jae
cmp
pop
enter
or
jo
inc
jne
pop
inc
inc
fsts
insb
xchg
inc
js
jp
dec
subl
jmp
hlt
dec
xchg
in
sub
sub
mov
addr16
or
sbb
xor
xchg
inc
cmp
cmp
clc
adc
addr16
jmp
xchg
jecxz
sahf
or
sub
mov
shr
cmp
mov
fsubrs
xchg
cli
mov
daa
sbb
and
pop
inc
aaa
dec
int
push
mov
sbb
xchg
push
and
or
cld
cmp
mov
jp
pop
mov
mov
nop
fcmovnbe
pushf
inc
xchg
push
or
cs
sub
or
sbb
pop
push
popf
add
in
xchg
and
fbld
xchg
lods
outsl
imul
mov
sbb
ds
jo
mov
mov
mov
sub
js
jl
and
mov
sub
stc
out
fstp
icebp
movsb
jns
xchg
nop
xchg
sbb
and
pop
mov
in
dec
sar
add
cmp
scas
sahf
xlat
mov
push
cmp
loopne
enter
mov
cmpsl
adc
mov
test
fcmove
cmp
fistps
inc
jns
insb
testb
ret
and
adcb
nop
js
or
inc
jmp
insl
sub
pushf
insb
mov
in
lahf
insb
mov
xor
pop
lods
pusha
push
popl
mov
in
xchg
lahf
add
push
or
or
inc
data16
dec
push
jl
in
das
and
pop
mov
dec
inc
rorb
addl
cmp
mov
data16
cmpsb
adc
mov
mov
out
mov
cmpsb
pop
or
xchg
movsb
jno
pop
mov
dec
mov
xorb
out
lds
clc
int
sbb
jp
and
dec
rcrb
inc
loopne
pop
inc
gs
pop
pop
ja
pop
jle
push
push
jmp
push
sahf
addr16
ds
mov
mov
fs
fsubp
push
pop
add
jo
ret
clc
jmp
dec
imul
inc
xor
or
add
arpl
decl
in
jl
inc
push
fistps
idivb
aad
sahf
push
add
dec
cs
out
jge
les
pop
push
cmp
loop
mov
cmpl
mov
xchg
lcall
pop
popa
pop
mov
xchg
insl
mov
adc
push
pop
sbb
hlt
pop
data16
sub
cld
test
aaa
push
rcl
clc
mov
mov
xor
sub
pop
push
push
pop
push
xchg
sbb
mov
and
push
jge
inc
les
pop
mov
ds
adcb
sahf
dec
setbe
cmp
testl
push
sbb
and
dec
shl
xor
lods
jle
leave
cmpsb
sbb
jno
outsl
cmc
insl
arpl
pop
dec
loope
inc
jbe
cmpsb
gs
inc
lret
xlat
pop
roll
into
inc
lock
add
sbb
leave
std
test
jl
push
cmp
jp
mov
insl
imul
jne
jecxz
repnz
mov
mov
pop
inc
lahf
les
mov
jp
js
nop
cmpsl
xor
and
cmp
stos
add
stc
pop
pop
data16
lahf
movsl
shr
mov
out
mov
mov
dec
sbb
out
push
sbb
scas
cwtl
jg
pop
pop
stos
cmp
shl
cmp
lds
jae
out
mov
les
mov
les
cmp
cwtl
sbb
jmp
pushf
rcrl
and
rcr
sbb
adc
rcrl
mov
repz
and
decb
inc
or
cld
fsubrl
mov
mov
push
xlat
cmp
scas
cmp
roll
or
mov
fdivrl
mov
mov
xor
sub
sbb
popf
pop
lock
std
mov
mov
std
lds
adc
xchg
xchg
popa
adc
mov
fildll
cmp
mov
ficoms
cli
ret
and
mov
in
mov
ret
lret
cwtl
mov
add
mov
add
cmc
into
cltd
rorb
mov
pop
mov
mov
aas
fcoms
mov
ljmp
or
andb
push
outsb
outsl
aaa
pop
frstor
xorb
dec
push
sub
stos
iret
jle
insb
js
fbstp
shlb
ljmp
inc
out
cwtl
inc
adc
cmpsb
and
sub
orb
lahf
dec
orb
out
mov
test
or
scas
dec
xor
mov
or
out
cld
movsb
sub
xor
hlt
fdivs
int
outsb
test
cmp
push
push
and
or
loop
pop
call
jns
mov
sub
sbb
addr16
shl
test
psrlw
and
cmp
sub
fisubrs
aam
push
cmc
lcall
cmpb
imul
andl
in
test
push
in
movsb
leave
or
add
faddl
jns
jo
lock
fcompl
xchg
outsl
cmc
das
add
loopne
ja
push
or
and
pop
js
fs
and
pusha
repnz
pop
out
add
adc
shrl
sub
nop
xchg
and
fsubs
cmp
jmp
or
jae
idivl
aas
in
xchg
cmpsl
mov
push
mov
ret
pushf
test
outsl
mov
and
push
push
movsl
push
addr16
stos
push
inc
mov
lahf
out
mov
mov
lret
hlt
cltd
ds
and
popf
jnp
sti
pop
cwtl
mov
or
fistl
es
insb
cmpsb
dec
pop
sub
pop
clc
scas
cmp
mov
jns
pusha
mov
mov
pop
pop
or
fisubl
sub
xchg
dec
in
jecxz
loopne
outsb
or
into
mov
faddl
sub
inc
push
inc
call
std
adc
xchg
dec
into
je
mov
mov
adc
pop
sub
or
add
fldt
nop
popf
insb
cmp
pop
sub
sbb
mov
ja
cmpl
jno
sti
or
outsb
cmpsl
cmp
mov
push
mov
or
lods
std
fs
xchg
mov
stc
jbe
aaa
pop
fisubrl
inc
addr16
mov
pusha
xor
lods
add
jae
stos
cli
pop
mov
xlat
or
in
mov
jp
movsl
mov
adc
popf
jo
bound
imul
call
mov
out
sarl
push
pop
mov
xor
or
xchg
xor
je
and
xchg
inc
or
sbb
pusha
push
inc
out
fiadds
rorb
int3
insl
add
add
addr16
call
mov
dec
cs
inc
jnp
xor
mov
or
pop
sbb
lret
imul
inc
sub
adc
stos
cmp
aad
shlb
cwtl
mov
sub
repnz
inc
test
cwtl
insl
cmc
popf
sub
inc
mov
dec
or
push
or
xor
int
outsl
inc
cmp
scas
loop,pt
vmread
or
hlt
xchg
shlb
sub
popf
shll
jnp
imul
mov
fmull
cmp
repnz
out
cld
rcl
imul
jo
cs
loopne
ss
push
jo
pop
stc
inc
sub
mov
lds
ljmp
fsubrs
or
push
imul
stc
dec
outsl
or
js
sbb
cli
cmp
add
add
mov
in
cmp
fistl
inc
or
dec
out
cld
pop
pop
in
ds
or
data16
xorb
push
cmp
rorb
cmc
inc
stos
mov
jmp
push
inc
sbb
or
popa
sbb
lds
insb
dec
imul
adc
ss
fisubrl
icebp
mov
mov
in
jne
in
xchg
push
inc
sbb
dec
sub
dec
sti
shlb
lds
enter
fisttpll
testl
xchg
mov
es
inc
add
jne
in
dec
test
pop
xchg
push
nop
dec
xor
cmp
sub
mov
insb
inc
pushf
incl
sbb
call
pop
test
in
inc
daa
and
leave
cld
roll
pop
dec
push
xchg
nop
or
aas
jo
adc
iret
bound
fldenv
in
mov
and
dec
pop
push
mov
xchg
into
mov
imul
xchg
lods
cld
mov
std
lds
fsubrp
iret
mov
test
and
lahf
inc
cltd
fwait
cli
movsl
xchg
ja
cmp
aam
ret
into
cmp
lahf
cmp
adcl
xor
aaa
fld
lods
inc
ss
test
fmull
xchg
fidivrs
adc
inc
push
orl
dec
mov
fdivs
adc
jno
iret
fstpl
cmpsb
cmp
add
add
filds
add
and
xor
out
push
test
std
rcrb
xchg
and
insl
jnp
adc
cmp
fsubrl
andl
neg
cmp
mov
jbe
and
ss
pop
fwait
xor
add
cs
fstpt
mov
lods
lds
sarw
xlat
add
sbb
movsl
mov
lock
cmpsl
stos
lret
inc
cmpl
mov
jmp
and
xor
or
imul
or
outsb
aam
mov
in
divl
outsl
adc
and
or
insl
orb
call
in
cmp
inc
mov
add
xchg
push
mov
ljmp
std
adcl
loop
inc
or
push
mov
pop
cmp
aad
repz
push
mov
and
mov
xchg
lds
fsubr
movsl
dec
outsl
sub
fldenv
ja
xchg
btr
rcrb
call
inc
inc
incl
je
aad
pop
mov
and
pop
neg
sub
sub
push
sbb
imul
mov
test
push
push
jns
mov
ljmp
mov
mov
mov
mov
mov
rorb
or
rcr
pop
out
insb
xor
jae
cmp
inc
inc
jns
jle
adc
lock
add
mov
sbb
cwtl
fsubrl
ss
stc
cmp
ret
pop
rclb
aas
mov
sub
push
jecxz
push
fdivrl
mov
sub
into
aam
imull
add
xchg
inc
iret
out
push
les
add
clc
jg
lret
dec
je
mov
xchg
lea
rclb
cmp
fnstenv
cmc
dec
imul
flds
pop
xchg
mov
std
int
in
cmpsl
xchg
pop
jno
lock
inc
jp
pop
jne
ret
push
mov
jbe
xchg
shrb
push
std
pop
xor
pop
adc
push
not
or
int3
mov
cmc
jb
idivb
enter
stc
mov
cmp
es
sub
scas
mov
cmp
gs
inc
addr16
push
rcrb
inc
sbb
testb
icebp
pop
subl
outsl
aad
test
outsb
cltd
imul
mov
and
jl
ljmp
je
nop
mov
adc
ficomps
push
stc
or
pop
dec
out
xor
stc
iret
stc
mov
pop
inc
ja
adc
push
roll
inc
inc
sub
aad
jbe
rcll
loope
add
mov
imul
adc
inc
pop
cmp
push
idivb
mov
fldcw
pop
jbe
ljmp
dec
pop
mov
out
cmp
pop
mov
leave
fldl
jl
repz
outsb
iret
mov
movsb
dec
fcoms
clc
loope
ljmp
adc
daa
repnz
pop
lods
leave
jg
cmpsb
call
cmpb
icebp
outsl
mov
and
fisubrl
movaps
stos
rcrb
pop
xlat
jo
xchg
cmp
jecxz
fimuls
jnp
sbb
mov
cmp
mov
inc
xchg
in
pop
sbb
and
repnz
lods
and
into
sbb
daa
dec
imul
xchg
or
or
push
jle
loope
imul
sub
pushf
iret
cs
inc
fstl
xor
xor
jmp
ljmp
aas
cmpsb
cmp
pusha
js
jnp
idivl
sub
xchg
xor
and
jecxz
test
xchg
fcmovnu
pop
and
cmpb
and
push
dec
pop
and
mov
mov
sub
movsb
xor
pop
clc
xor
cs
jecxz
mov
sbb
test
sub
fst
push
movsl
clc
shrl
jecxz
enter
lds
xchg
rclb
mov
shrb
jae
lock
repnz
mov
fs
pop
pop
scas
das
jnp
cmp
xor
in
xor
xchg
pushf
or
or
sti
sbb
rolb
ja
std
jne
fiaddl
inc
roll
push
cmp
subb
popa
aad
hlt
rcll
mov
and
cmp
aam
test
pop
cmc
push
sti
outsb
lds
jns
addr16
sub
stos
mov
push
in
aam
test
es
jb
or
cmpsb
inc
test
mov
stc
mov
mov
mov
dec
je
dec
inc
xchg
sub
shrb
jmp
fdivrl
mov
add
xchg
cmc
and
add
imul
pusha
pop
arpl
mov
jno,pn
jp
mov
mov
das
nop
pusha
mov
sbb
pushf
lods
push
ds
dec
jo
mov
fldenv
loop
xchg
jmp
xor
inc
mov
or
lods
fs
dec
out
cmp
iret
faddl
out
cs
mov
xor
push
dec
or
movsl
push
arpl
pusha
mov
push
push
xor
xchg
sub
jnp,pn
mov
inc
jl
ret
sbb
mov
dec
popa
xor
mov
or
sbb
loop
lds
int
pop
aad
ds
mov
out
pop
nopl
loopne
pop
ljmp
jecxz
iret
sub
test
sbb
dec
test
lods
xor
pusha
inc
cmp
xor
and
mov
fistpl
mov
jne
dec
pop
inc
scas
mov
clc
push
sub
orb
cmp
mov
lcall
jmp
adc
mov
stos
sub
inc
sbb
cmp
fiaddl
iret
inc
cmpsb
es
push
jo
iret
pusha
pushf
and
andl
mov
iret
mov
jnp
push
aaa
add
and
inc
inc
movsb
add
cwtl
cmp
inc
ljmp
orb
fcmovnu
mov
mov
xor
jg
movl
sub
mov
adc
imul
ss
pop
pop
aam
mov
push
lret
ljmp
lock
and
mov
sub
push
xor
imul
xchg
sub
mov
sub
lret
mull
lahf
mov
xchg
add
xchg
or
pop
out
pop
fwait
cwtl
push
scas
xchg
int
ret
xchg
or
pop
test
push
push
pop
jmp
and
sub
dec
test
add
xor
movsl
aaa
and
push
adc
ss
out
pop
or
cmp
xchg
arpl
pop
sub
pushl
add
mov
mov
push
repnz
out
xchg
std
and
das
ja
fbstp
or
icebp
dec
jnp
jnp
ret
aas
repz
lea
std
sbb
xchg
mov
add
popl
arpl
ja
jge
lds
mov
adc
int
xor
int
rcrl
out
rcll
leave
xor
xlat
push
jle
push
cld
and
test
cmp
pop
test
sub
out
cmp
sub
inc
movsb
mov
sbb
bound
mov
mov
cmp
inc
hlt
pop
mov
push
cmpb
insl
ljmp
shl
movsl
jecxz
mov
or
imul
push
fsubrp
call
cmp
xor
mov
and
sbb
jl
mov
es
adc
jl
fisttps
out
in
mov
mov
sbb
push
repnz
std
fsubrl
add
mov
sarb
jl
and
fstps
push
pop
ficoms
cmp
jb
hlt
jmp
ror
and
xchg
idivl
and
jns
out
sbb
inc
jg
dec
jge
sbb
imul
adc
jg
and
shl
push
daa
rcr
xchg
das
pushf
orl
unpckhps
aas
cs
jge
lret
rolb
xchg
pop
testb
add
jg
repz
add
sbb
ss
stc
sub
sub
js
cmpsl
rol
mov
shl
sub
sbb
dec
sarl
mov
dec
testl
jmp
or
fidivrl
out
sub
mov
clc
jbe
shrb
sti
mov
add
pop
jp
jg
arpl
cmp
mov
jg
push
add
pop
fnstcw
into
cmc
sbb
mov
lahf
dec
sub
jno
popa
jg
repnz
push
adc
loop
jb
aas
sub
xchg
jge
dec
xor
lahf
js
push
inc
in
pushf
cs
mov
out
xchg
sbb
adc
shlb
dec
or
jne
stos
ss
inc
ja
cmp
dec
mov
incb
or
xor
push
adc
inc
or
sahf
ud0
and
pop
fnstenv
or
cltd
push
and
addr16
mov
cmpsb
jg
mov
subl
mov
dec
clc
cmp
shld
push
dec
mov
insb
mov
sbb
mov
fnsave
in
nop
fcom
aaa
adc
cmpsl
push
push
lods
jg
mov
movsl
lcall
imul
xchg
outsl
xor
xor
test
andb
aaa
jmp
inc
inc
inc
sahf
rclb
cwtl
pop
inc
mov
bound
cli
pop
mov
dec
push
push
inc
in
jle
inc
mov
jl
xchg
pop
pop
test
cmp
sbbl
movsl
cmpsb
dec
cltd
push
inc
xor
mov
xor
fistpl
iret
call
mov
leave
mov
jmp
mov
insb
ret
dec
mov
adc
aad
sub
lahf
inc
inc
mov
push
pop
xor
lret
push
mov
adc
cmp
dec
xchg
xchg
movsl
sub
jae
pop
rorl
out
dec
call
aad
adc
shrl
cmp
dec
add
push
jbe
loope
mov
jmp
push
insl
scas
adc
mov
es
add
enter
pop
cmp
mov
lcall
dec
testl
cs
inc
outsb
sbb
jge
and
inc
test
or
daa
jo
subb
int3
adc
cwtl
add
mov
and
icebp
movsb
mov
aam
int3
adc
and
dec
in
jae
nop
or
jno
push
inc
daa
mov
xor
add
jge
aad
mov
bound
sub
or
inc
test
incl
push
push
jnp
fs
daa
iret
fdivl
xor
loopne
shlb
loope
xchg
lods
js
or
mov
push
lods
es
pop
cltd
push
push
and
inc
pop
icebp
add
cld
mov
cmp
adc
mov
sti
lret
dec
cmp
hlt
ficoml
adc
dec
cmpl
shrd
stos
shll
xor
and
sub
add
cmp
movsb
fwait
push
ja
xchg
pop
add
mov
push
lods
fcomip
xchg
jmp
mov
pop
cmp
lea
add
sub
ret
adc
mov
sub
inc
cmc
dec
mov
loopne
inc
sbb
pushf
mov
paddq
and
lret
ret
and
jo
icebp
mov
pop
iret
pop
add
push
lods
pop
jp
mov
stos
insl
adc
xlat
movsb
adc
sbb
aas
loop
xorb
fstp
jbe
subl
fistps
outsb
fwait
loopne
pop
push
jge
push
ret
cmpb
lods
cmc
fwait
dec
inc
stos
fwait
test
sti
adc
and
ret
cmp
push
iret
sbb
aad
ret
push
xchg
ret
xorb
dec
jl
call
push
sarl
cwtl
fwait
test
mov
xchg
pop
adc
sti
adc
fisttpl
xor
pop
dec
flds
sbb
test
xchg
mov
sbb
lcall
lea
xor
cmpb
or
call
adc
dec
mov
ret
add
in
iret
push
shlb
add
pop
aad
rcrb
daa
pop
inc
gs
imul
stc
sbb
xchg
pop
or
das
test
dec
sbb
shrl
xlat
lret
pop
mov
cmp
cmpsb
push
push
xchg
leave
leave
outsl
jp
jle
and
imul
scas
ds
dec
mov
or
iret
mov
mov
stos
stc
push
xlat
enter
ret
xor
das
jo
or
mov
mov
ja
jle
pop
jnp
cli
aad
or
scas
push
mov
xchg
fstps
fsts
fisubl
loopne
cmp
mov
add
adcb
out
xchg
mov
int
fimuls
add
jg
aad
aas
mov
or
jge
sub
ja
inc
divl
aas
cs
adc
das
push
pop
inc
dec
mov
jle
cmp
ljmp
and
fsubr
pop
test
cmp
rcll
rclb
xor
dec
rorl
js
and
xchg
xchg
es
dec
sbb
pop
clc
xchg
stos
loop
cltd
push
mov
dec
popf
pusha
adc
push
enter
pushf
mov
aam
lods
mov
in
cmpsl
xor
and
jmp
inc
les
cmp
sti
hlt
out
and
std
cs
aad
es
daa
or
in
nop
hlt
das
sarl
push
inc
das
pop
aad
out
das
or
into
pushf
mov
pop
or
ljmp
xor
push
imul
push
jmp
hlt
aas
fdivs
rcll
push
pop
les
les
push
mov
lahf
adc
xor
mov
xchg
sbb
xor
filds
add
gs
test
mov
repz
jno
push
icebp
sbb
in
xchg
mov
icebp
mov
rcrb
lods
movsl
cmpsl
push
xchg
iret
movsl
fisttpl
or
adc
cmpsb
sbb
sbb
rclb
hlt
sub
stos
aam
add
jl
xor
mov
push
sub
aam
add
fnsave
mov
cld
sub
push
xor
and
dec
and
dec
add
jge
or
adcl
or
mov
adc
sbb
dec
dec
enter
mov
dec
imul
dec
into
lea
js
mov
iret
daa
mov
mov
movsl
sahf
pop
dec
jl
test
outsl
push
push
sbb
popa
jb
leave
jl
xor
cmp
nop
push
push
fldl
add
cmp
mov
sbb
dec
aaa
mov
xchg
rclb
clc
push
inc
and
out
cmp
fmulp
and
and
xor
sahf
aam
pop
sbb
repz
call
or
push
xor
punpckhwd
bnd
mov
add
insb
rcl
aam
mov
jl
cmc
call
imul
rcrl
ss
and
xchg
jge
push
jb
add
aaa
jmp
cld
cmp
inc
pop
cmp
jle
add
daa
mov
test
outsb
jl,pt
pop
xor
outsb
jae
xlat
inc
hlt
repnz
test
sahf
mov
call
lahf
mov
dec
cmp
fwait
nop
or
sbb
adc
popaw
cltd
adc
inc
lock
mov
cmp
mov
scas
fwait
sub
repz
adc
sbb
lods
dec
js
push
test
pop
fld
in
std
jmp
jo
ret
jmp
mov
popa
imul
xchg
mov
out
mov
inc
jle
pop
or
pop
jb
lock
dec
mov
loop
cltd
cmc
hlt
push
data16
fldl
push
add
leave
inc
sbb
aaa
mov
cld
jg
jb
and
rcll
std
pop
pop
adc
mov
out
loopne
test
ret
loop
xchg
pop
push
fwait
cli
sbb
jns
adc
cld
test
dec
mov
lahf
sub
push
cld
ret
fwait
icebp
repnz
mov
sub
mov
xlat
fsts
lret
adc
and
push
mov
lods
pop
loopne
cwtl
push
lahf
mov
cmp
out
or
mov
add
push
loope
inc
insb
xlat
popa
outsl
and
iret
mov
movb
shl
cli
decb
mov
test
pushl
mov
clc
sarl
cmp
int
mov
leave
pushf
sub
ja
ja
dec
adc
out
dec
fbld
lret
test
pop
mov
inc
jecxz
jns
cmp
aaa
add
ljmp
out
sub
in
xchg
push
pop
cmpb
sub
stos
inc
inc
mov
insb
imul
hlt
arpl
rcrb
insb
movsb
data16
popf
xor
sbb
adc
rcrl
jo
daa
dec
lret
sahf
loop
rorl
subb
nop
into
sarb
xchg
ret
stos
scas
pop
push
call
or
inc
xchg
ret
fidivrl
push
xchg
movsl
les
aad
adc
cmp
mov
test
dec
jmp
push
scas
in
fistl
call
sar
lret
and
dec
test
inc
jne
lret
test
and
in
add
out
inc
ss
adc
xchg
push
pushw
push
xor
sbb
xor
es
nop
outsl
mov
scas
into
mov
movsl
mov
pop
mov
mov
or
test
push
and
test
ret
pop
sub
mov
pusha
push
sbb
call
movsb
jp
je
dec
cmpl
xchg
mov
mov
pcmpgtw
jmp
subl
outsl
dec
pushf
scas
pusha
xchg
leave
inc
das
imul
or
insl
adc
in
fdivs
vunpckhpd
dec
mov
mov
mov
mov
jne
in
inc
std
iret
dec
roll
es
inc
mov
push
sahf
inc
aaa
daa
inc
and
push
xor
out
jmp
sbb
cwtl
test
inc
pop
in
clc
shlb
cmp
pop
and
mov
imul
loop
rsm
or
fmull
or
lret
lock
adc
gs
jge
dec
push
dec
lea
sbb
jmp
in
and
mov
cmp
adc
and
les
outsl
mov
xor
mov
pop
les
add
enter
addr16
adc
adc
mov
test
jno
push
mov
icebp
fdivs
jbe
xor
call
cmp
and
addr16
mov
xchg
arpl
lds
push
ja
iret
jg
pop
scas
mov
add
fstl
xchg
sub
sub
rorb
lds
xor
shr
jns
lods
inc
insl
xor
outsb
enter
imul
jns
mov
fwait
pop
jmp
movsl
mov
push
es
or
pop
xchg
and
pushf
inc
clc
fdivl
mov
fdivrs
mov
clc
repnz
add
ja
add
sub
outsb
jae
repnz
aad
cwtl
inc
mov
jp
imul
add
jmp
ljmp
outsl
ffreep
jle
pop
mov
cld
cmc
sub
push
mov
lcall
mov
stos
add
sbb
adc
xor
push
dec
dec
dec
jns
jg
orl
xor
or
jmp
and
pusha
jns
iret
out
or
adc
je
mov
fs
int
ljmp
pop
sbb
fisttpl
scas
dec
gs
cmp
imul
dec
or
mov
sub
sub
dec
fisttps
mov
inc
sub
mov
jge
mov
xor
movsl
mov
imul
stos
int3
repnz
repnz
push
mov
hlt
aas
pop
into
aas
and
nop
add
arpl
xorb
xchg
jbe
data16
mov
aas
pop
xchg
cmp
dec
cmp
or
pop
pop
adc
out
push
push
fdivs
add
add
cmp
jle
sbb
pop
sub
mov
adc
or
enter
popa
inc
roll
and
inc
repz
and
leave
mov
xchg
adc
lock
inc
loope
inc
xchg
out
lahf
xchg
and
add
das
pop
popf
or
add
jnp
mov
sub
movsl
sahf
sub
jle
out
test
push
jge
test
mov
std
mov
pop
xchg
hlt
movsl
fwait
xor
adc
fistpll
xchg
xor
push
pop
lds
add
sub
xchg
addr16
or
add
rsqrtps
adc
call
hlt
fildll
adc
inc
inc
sub
jge
mov
lods
mov
cmp
adc
fnsetpm(287
dec
rclb
dec
push
xchg
xchg
ret
imul
xor
scas
les
sub
sbb
adc
xchg
in
mov
xlat
incl
aam
loopne
mov
jo
or
pushf
mov
sub
loop
pop
int
pop
icebp
in
xchg
fists
fwait
jno
mov
sbb
pushf
dec
loop
daa
sub
lods
sbb
lret
std
je
in
lcall
mov
sub
sub
subl
dec
mov
stos
loop
movsl
in
int3
and
mov
inc
mov
mov
sub
mov
push
hlt
dec
adc
dec
cli
ffreep
xchg
into
mov
adc
das
pop
scas
mov
mov
mov
xor
lods
scas
daa
adc
cmp
mov
or
in
and
mov
jns
inc
cmp
add
imul
movsb
sti
fs
pop
push
lock
lret
dec
pop
mov
into
pop
das
mull
jmp
sub
mov
nop
nop
sbb
sbb
xor
dec
jp
ljmp
cmp
dec
push
in
inc
dec
and
pop
add
mov
sbb
cld
in
daa
cwtl
ret
lock
loopne
pop
leave
adc
xor
data16
xor
dec
ja
and
cmp
out
ret
pop
and
jo
pop
std
jne
add
dec
mov
mov
repz
xchg
adc
fwait
ja
mov
dec
repz
insb
ljmp
pop
in
popa
and
jb
xor
pop
shr
sub
or
stos
sub
mov
jnp
mov
inc
insb
jle
adc
lods
insb
and
or
mov
jbe
mov
inc
outsb
nop
imul
jb
push
adc
pop
lcall
pop
or
sbb
lds
nop
pop
mov
sbbb
push
lret
loop
or
add
test
cwtl
sbb
mov
adc
in
adc
push
daa
lea
jns
mov
rcrl
jb
sub
mov
or
lcall
fwait
cmp
mov
cli
fldl
push
jl
out
xchg
pop
or
cmp
aad
sbb
ds
dec
clc
xchg
addr16
sahf
mov
and
or
cmp
mov
call
lods
add
mov
andb
xor
cmp
jne
push
call
lret
xor
daa
adc
sub
sbb
std
das
and
pushf
pop
popf
popf
mov
addb
subb
repnz
int
repz
repz
fistpl
mov
cld
lock
push
divl
in
int3
outsl
cli
mov
imul
fidivs
jl
into
and
shl
mov
jge
out
out
jb
mov
jl
stos
into
or
adc
fcoms
push
addr16
jl
mov
fwait
xchg
push
dec
lods
into
and
lods
fdivrl
sbb
jle
cli
leave
sbb
cmp
adc
and
cld
pop
mov
js
jns
loop
shl
sbb
dec
insb
push
mov
ja
mov
lahf
test
lret
and
or
arpl
lea
pusha
ror
mov
fiaddl
or
dec
pop
or
outsb
movsb
loop
pop
call
in
ret
add
mov
or
mov
push
test
fwait
outsb
xor
jg
or
add
bound
fisubs
xchg
inc
adc
mov
mov
xchg
jmp
jl
decl
push
adc
xchg
loope
xchg
pop
lods
movsb
sub
pop
cld
jnp
data16
bound
pusha
cs
loope
lret
push
outsl
int
scas
mov
pushf
mov
and
dec
repnz
sbb
dec
sti
subb
subb
add
std
mov
fdivs
push
cmpsb
loop
adc
jle
mov
ret
ret
mov
mov
andl
jge
testb
cmp
cmp
and
bound
sub
adc
outsl
jae
mov
pop
xor
mov
mov
jbe
or
shlb
pop
mov
enter
pop
and
dec
add
out
pop
sarb
fsubr
fsts
jl
cmp
fwait
mov
insb
je
js
imul
shr
xor
test
jecxz
xchg
mov
lret
push
sbbb
sbb
jle
add
sahf
push
sbb
mov
ret
adc
sub
data16
outsb
mov
inc
inc
insb
mov
call
inc
jne
add
push
xchg
ja
pop
dec
mov
rorl
adc
adcl
int
ljmp
pushf
lret
add
xor
mov
inc
call
add
cmpsl
sub
shrl
mov
mov
popf
lods
shufps
push
jle
daa
cmp
push
std
xor
orb
inc
ret
rcrl
or
push
mov
rorb
jle
or
enter
out
gs
or
xor
icebp
subl
cmp
mov
adc
into
inc
mov
fsubrp
scas
jp
add
test
and
push
xorl
jb
sub
lds
in
adc
iret
jl
lcall
andl
addr16
addl
jmp
or
popa
lea
test
fs
sahf
push
cmp
pop
jno
fwait
lods
enter
jnp
mov
lret
mov
div
addl
ljmp
loope
jle
dec
and
jmp
mov
adc
jbe
out
mov
mov
mov
lods
xchg
jns
test
mov
aaa
ds
lahf
dec
jne
push
ja
outsb
and
not
lock
sbb
pop
mov
xor
sbb
xchg
jl
mov
enter
xchg
loope
jge
inc
fists
xchg
jno
outsb
xchg
or
sbb
outsl
push
adc
xor
add
sbb
pushf
jnp
mov
pushf
lods
xorl
pop
je
xchg
push
pop
flds
jne
pcmpeqb
pop
test
dec
and
jno
jp
sahf
mov
imul
mov
inc
pop
sti
mov
dec
adc
push
pop
imul
mov
lahf
cmpb
cmp
jg
mov
lcall
sti
mov
repnz
sbb
sti
push
or
add
xor
push
and
jbe
mov
push
or
je
into
inc
out
leave
outsb
mov
pop
fwait
cmp
popf
jmp
cmc
rorl
nop
push
add
xlat
stos
leave
test
add
das
popf
test
test
arpl
fdiv
out
rcll
jmp
push
xor
addb
fwait
leave
out
out
xchg
jle
sbb
pop
movsb
pop
mov
push
icebp
sub
data16
push
daa
mov
jge
pop
loop
xchg
pop
pop
inc
lea
or
test
mov
cmp
and
xchg
or
lcall
fisttpll
int
pusha
jg
pop
xchg
dec
roll
jecxz
call
mov
push
dec
out
dec
pop
mov
int
xor
leave
lock
push
jbe
dec
pop
pop
adc
lcall
outsb
ret
daa
mov
sbb
add
and
sbb
out
movsb
lock
mov
jecxz
adc
inc
mov
bound
sub
mov
cld
andl
decb
mov
aaa
dec
in
pop
cmc
or
aas
jecxz
shl
jmp
testl
sub
pop
frndint
out
in
loop
jge
mov
xor
sbbl
hlt
jno
out
mov
int
fldt
ficompl
xor
divb
jge
fcmovbe
jp
mov
popf
out
loopne
push
push
andl
pop
adc
cmpsb
loopne
mov
fsubrp
scas
sar
into
das
sbb
jnp
xchg
adc
adc
or
jo
popa
pop
int3
adc
sbb
xchg
xchg
push
or
icebp
cmp
jb
dec
add
lret
mov
cmpsl
inc
cmp
rclb
push
outsl
inc
mov
lret
xchg
pop
popa
es
pop
push
push
test
cmpb
pusha
aam
loopne
loopne
lods
cmovne
imul
into
xor
add
pop
scas
movsl
lret
adc
nop
xchg
jle
mov
iret
or
push
push
inc
mov
loop
pop
jne
mov
gs
mov
lods
inc
das
sub
roll
push
bound
cli
push
jmp
dec
divps
fs
dec
cmp
inc
adc
negl
sub
dec
loop
lcall
mov
lahf
rol
clc
mov
mov
sub
cs
inc
xchg
fwait
jne
pop
cmpsb
mov
lods
mov
fdivrs
enter
sub
pop
imul
jae
stos
xor
mov
fldpi
test
je
jbe
lahf
push
or
pop
jge
out
pop
and
jl
loop
push
js
dec
push
pop
mov
mov
fisubrs
scas
xchg
sbb
aam
loopne
cmpsl
sub
in
adc
ljmp
mov
cmp
cs
push
or
xlat
mov
adc
mov
sbb
shrl
jb
cmc
pminsw
test
or
mov
mov
pop
sub
inc
movsl
mov
lcall
sbb
bound
add
addb
add
jg
cld
dec
push
hlt
dec
stos
sub
out
xchg
xor
decl
aas
jns
sbb
cmp
mov
or
jbe
filds
cwtl
dec
jp
int
aam
mov
jle
sub
insl
push
xchg
jp
xchg
std
popa
jge
add
inc
mov
in
mov
cs
cmp
jmp
mov
mov
test
and
sbb
dec
fidivl
scas
fisubrs
mov
fnsave
jae
rol
out
xchg
pushf
ds
insb
cmp
cmp
scas
in
jmp
arpl
add
in
or
jo
int
mov
xchg
imul
movsb
jp
add
push
test
jno
push
or
aam
inc
in
lahf
xor
sub
push
jp
dec
fucomip
mov
int3
hlt
inc
fistps
enter
lods
lcall
push
xchg
push
aad
nop
lahf
pop
push
mov
inc
ds
aad
fldl
mov
xchg
shlb
xor
push
sub
pop
popl
shlb
and
inc
fwait
cli
sbb
repnz
and
mov
mov
stos
inc
imul
mov
fsubrs
xlat
sbb
cli
add
dec
subb
test
mov
pop
sub
jnp
movsl
inc
sub
jb
sahf
mov
icebp
push
inc
mov
jo
xor
movsl
data16
or
inc
sbb
sbb
in
into
mov
cmp
adc
mov
sub
cwtl
dec
inc
xchg
pop
out
nop
push
ret
fisttpl
movsb
sti
push
dec
clc
outsl
lret
mov
jecxz
dec
popf
and
cltd
hlt
dec
xchg
pop
sti
jmp
adc
adc
and
and
imul
cwtl
dec
addr16
mov
mov
je
push
push
js
das
les
cmp
out
inc
sub
scas
sub
and
mov
inc
xchg
push
lods
das
hlt
xchg
inc
xchg
hlt
inc
adc
jp
sub
and
outsb
je
and
in
jne
jge
add
jmp
dec
call
mov
das
mov
js
add
add
mov
outsl
rolb
or
inc
repnz
add
pop
add
mov
cmp
dec
nop
addr16
lahf
mov
add
cmp
cltd
in
jle
es
in
ds
bound
mov
cmp
dec
ror
shrl
add
mov
mov
add
pop
insb
mov
add
or
pop
inc
iret
add
pop
ljmp
stos
or
ror
and
adc
add
daa
add
add
jle
orl
mov
mov
lcall
test
pop
incl
add
jmp
roll
add
clc
or
jnp
scas
pop
fisubl
out
dec
lds
add
mov
popa
add
mov
mov
lods
jmp
push
pop
add
stos
cmc
xor
cmp
add
rep
test
repz
xchg
add
mov
cmp
add
add
add
lret
insl
sbb
add
push
cmp
mov
notb
das
jecxz
xchg
sub
dec
add
add
int3
xlat
adc
inc
adc
lods
ja
and
dec
sti
jge
and
hlt
pop
xor
lods
add
jae
leave
pop
stos
xchg
es
movsb
in
add
sub
jnp
pop
hlt
jmp
cmp
inc
jg
fiaddl
cmp
push
pop
push
xlat
mov
mov
mov
add
add
in
inc
add
sub
add
movsl
adc
imull
mov
pop
inc
add
sub
add
sub
add
add
out
add
jg
loope
cld
ficoml
fsub
aaa
mov
add
add
mov
push
cmp
add
test
sub
jmp
