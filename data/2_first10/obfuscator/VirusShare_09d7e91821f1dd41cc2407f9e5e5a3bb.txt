push
call
and
shr
or
mov
pop
add
add
pop
add
pop
add
add
add
in
or
sbb
add
pushf
or
dec
push
pop
add
or
notb
or
mov
mov
pop
add
mov
push
add
mov
or
sbb
pop
add
mov
or
push
mov
push
add
push
pop
add
scas
pop
add
in
or
adc
add
pop
add
ret
jle
push
add
push
add
repz
add
inc
pop
add
or
sbb
or
add
movl
add
les
add
mov
pop
add
scas
pop
add
mov
add
mov
pop
add
stos
pop
add
in
push
add
pop
add
out
or
or
add
out
add
pop
add
add
add
enter
out
add
mov
add
mov
add
dec
pop
add
ret
sub
pop
add
mov
push
add
mov
pop
add
add
add
pop
add
sbb
add
add
add
mov
add
pop
add
cmp
add
out
add
stos
pop
add
mov
add
pop
add
push
add
movb
push
xchg
or
add
add
rorl
add
scas
pop
add
add
add
add
or
add
add
loopne
push
add
scas
pop
add
add
add
push
add
add
add
add
add
or
push
scas
pop
add
mov
add
pop
add
mov
add
inc
adc
add
add
add
imul
xor
mov
sub
stc
lret
ret
jb
leave
sub
sub
xchg
outsl
ss
or
mov
push
jne
and
ret
js
pushf
lret
add
ja
inc
inc
adc
pop
sub
push
inc
add
je
xchg
add
dec
jae
bound
addr16
jb
jae
outsb
je
stc
jle
jne
pushf
or
cmp
in
clc
mov
sub
je
push
jne
aaa
not
lods
or
dec
pushf
pop
popf
cwtl
pop
and
gs
outsl
scas
add
stos
inc
jmp
rcll
sbb
lea
movsb
cmp
pop
test
and
xchg
arpl
mov
jbe
inc
pop
sub
aas
clc
jno
pop
push
cwtl
rclb
pop
mul
ret
xchg
jmp
call
arpl
mov
shll
aaa
sti
mov
jmp
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
and
movb
pushl
ret
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
push
pushf
pushl
popl
movl
pushl
pushl
movw
pushl
ret
cmpsl
out
adc
imul
or
xchg
fildl
mov
aad
pop
sbb
sbbl
movsl
jb
sbb
es
mov
repnz
les
pop
or
orb
lea
cmp
jb
sarl
in
xchg
hlt
clc
cli
pop
sbb
adc
sar
and
pop
xchg
lcall
ljmp
fsubs
dec
dec
jno
xchg
mov
aas
scas
aaa
cmp
fsub
adc
or
mov
sarl
arpl
test
mov
xchg
cmp
cmp
pop
dec
outsb
pop
sahf
lock
movsl
inc
loopne
xor
shll
dec
jle
lock
xchg
pop
jle
insb
hlt
movsb
jnp
xor
pop
push
push
push
lcall
in
or
push
sahf
sbb
rorl
insl
icebp
push
or
xchg
adc
mov
jl
xchg
dec
inc
call
imul
dec
pop
pushf
sbb
jno
pushf
cmp
test
pushl
insb
stos
sbb
xor
popf
sub
add
adc
imul
add
sub
push
divl
mov
sbb
pop
xchg
mov
pop
and
out
xchg
inc
fstps
push
sbb
shll
mov
dec
je
test
cmc
push
cmp
add
bt
cmc
movb
bt
cmp
pusha
movb
lea
jb
push
pushf
pusha
call
not
pushf
call
jmp
inc
les
sbb
dec
mov
sbb
jae
adc
xchg
and
inc
pushf
fstp
stos
dec
mov
dec
cltd
mov
inc
dec
mov
loope
mov
dec
cmp
or
mov
js
lret
pop
aad
sub
inc
cmpsb
dec
sbb
shll
ret
jnp
pop
stos
fisttpll
pop
int
mov
out
ja
mov
sub
daa
sti
mov
xchg
shll
sub
das
rolb
mov
cmp
mov
jmp
lret
inc
loop
test
leave
jb
sub
or
aaa
fisubrs
mov
mov
sarb
mov
movb
arpl
inc
sbb
std
add
dec
hlt
sub
lods
push
jmp
add
fisttps
loop
leave
jmp
adc
jg
cmp
outsb
fwait
rorb
mov
sbb
inc
mov
leave
daa
xchg
pop
std
sub
xor
dec
leave
mov
lahf
ficoms
leave
call
mov
xor
pop
rcrl
adc
add
mov
rcrl
rcrb
adc
ficomps
addr16
enter
push
xlat
inc
cmc
shll
jae
fwait
mov
mov
clc
jmp
push
call
push
push
add
or
ja
push
lea
je
movsbl
movsbw
jmp
mov
das
scas
imul
aaa
popl
cmpsl
dec
call
pushf
or
xchg
sub
jl
call
aad
sub
jo
lret
xor
inc
out
movsb
xorl
jb
pmaddwd
pusha
out
pusha
lea
jb
cmc
cmp
pusha
pushf
lea
jae
sets
not
lea
mov
push
not
movsbw
lea
mov
pushf
mov
pusha
lea
jmp
push
call
sahf
dec
pop
imull
push
aaa
add
inc
mov
in
push
call
insl
mov
jno
inc
push
aaa
add
loope
inc
inc
push
inc
push
dec
xor
cs
insb
add
out
inc
add
bt
test
call
push
call
jge
stos
mov
fs
jb
test
cmp
push
lea
jae
rol
sar
sub
pushf
mov
setge
mov
movb
add
mov
pushf
test
bt
pushf
sub
movl
pushl
stc
call
lods
rcrb
dec
xchg
push
rolb
inc
aaa
rcrl
adcl
addl
test
addb
mov
adc
mov
pop
dec
cwtl
jns
inc
mov
mov
inc
adc
xchg
add
or
pop
ret
jmp
cli
push
inc
mov
xchg
jp
adc
mov
loope
movl
jge
int
mov
lahf
movb
jmp
pusha
mov
push
mov
lea
call
pushf
pushf
adc
pusha
mov
call
clc
shr
add
cmc
clc
call
add
inc
js
je
jb
arpl
jae
nop
out
jnp
mov
lret
addr16
mov
push
fs
rorl
das
stc
rolb
jbe
push
cmpsb
lods
cwtl
cli
pop
adc
or
xor
push
rcrl
jno
popa
mov
rorl
add
mov
dec
pushf
pop
shlb
int
out
cmp
les
mov
jnp
test
lods
movsl
push
sbb
mov
mov
sarl
add
imul
add
in
movl
jmp
mov
mov
pusha
cmc
jmp
add
push
gs
imul
gs
lea
jne
call
imul
pusha
add
movb
lea
jmp
jmp
je
bt
pusha
or
pushf
push
lea
je
lea
movsbw
mov
mov
lea
lea
lea
push
xchg
pushf
lea
pushl
popl
movzbw
push
bswap
movsbl
lahf
push
movl
lahf
lea
jmp
aam
aam
inc
out
inc
outsl
mov
jp
bound
mov
mov
in
fucomip
call
andb
pop
ja
dec
pusha
arpl
mov
decl
ret
popa
icebp
shlb
cmp
popf
lods
xchg
jp
cwtl
dec
js
movsl
cmp
out
scas
sbb
jp
cld
jge
fistl
sarl
scas
push
lea
call
call
add
inc
js
push
gs
dec
jne
inc
add
xor
lea
pusha
lea
movzbl
not
movzbw
mov
movzwl
lea
pushf
lea
lea
mov
mov
pushf
pushf
pushf
jmp
seta
mov
pushf
mov
inc
inc
setne
pushf
pusha
mov
mov
movb
lea
call
jmp
jmp
out
loopne
mov
lret
ja
jnp
fistl
cmpsl
push
loop
jb
pop
inc
nop
loop
sbb
sbb
add
loop
divb
and
out
push
ljmp
mov
sub
sbb
inc
js
dec
cmc
into
push
and
jno
xchg
mov
and
lcall
shrb
dec
pusha
mov
into
out
jnp
pop
dec
add
cmp
ja
mov
sbb
test
push
or
sahf
inc
lods
gs
call
sarl
xchg
sbb
pop
aam
in
inc
rclb
fnstsw
inc
sbb
pop
inc
cs
and
lds
mov
xchg
adc
lahf
add
dec
and
jo
fisubl
mov
sbb
ffreep
mov
sti
push
mov
sbb
xchg
adc
push
roll
sub
call
lods
cmp
stos
add
sahf
xchg
xchg
ret
scas
pop
add
imul
sub
int
mov
cmpsb
dec
js
pushf
add
aas
jae
jge
mov
cmp
dec
idivl
cmp
mov
fs
pusha
jmp
cmp
mov
nop
gs
mov
sarl
jnp
jmp
push
stos
pushf
movb
push
pushf
lea
jmp
lea
jne
lahf
jmp
cmc
mov
clc
stc
sub
pusha
mov
mov
movb
rep
jmp
mov
setae
movl
movsbw
lea
movsbw
lea
call
add
push
gs
je
dec
popa
outsb
fs
add
pushf
push
call
sbb
cmp
pushf
lea
jmp
pushf
mov
movl
push
movb
push
pushf
pushl
popl
movw
pushf
pushf
pushl
ret
jno
aad
push
aad
adc
aad
test
arpl
jno
pop
dec
push
dec
and
daa
in
outsl
cli
dec
xor
mov
pop
jno
cltd
neg
mov
adc
xchg
enter
xchg
adc
sarl
movsl
inc
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
ss
jmp
movb
mov
lea
lahf
pop
pushl
popl
movsbw
pusha
pushf
mov
lahf
bswap
not
movl
lea
bswap
movzbl
lea
jmp
pushf
lea
jae
call
add
add
push
call
imul
add
sbb
sbb
movl
mov
jmp
movsbw
xchg
pushf
lea
pushf
movzbl
jmp
push
call
leave
lds
stos
dec
into
outsb
ss
mov
sbb
jae
mov
add
shll
aam
int3
clc
or
and
test
jl
add
ret
js
lahf
pop
jmp
outsl
mov
dec
out
adc
xchg
xchg
mov
dec
fiadds
xor
fwait
or
and
xchg
push
dec
aam
gs
adc
test
fisubrs
lods
ret
push
mov
into
insb
cmc
sahf
sbb
mov
sarl
loope
int
inc
int
clc
sbb
pop
and
cwtl
add
in
mov
fidivl
xor
js
fwait
mov
pop
je
cmp
movsb
mov
jecxz
pop
fsubrl
fwait
push
mov
test
dec
call
add
cwtl
movzbl
mov
pusha
lea
jmp
add
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
imul
add
insb
in
shlb
pcmpeqd
les
ss
and
daa
outsb
orb
cmp
je
mov
inc
outsb
inc
and
aam
js
push
xor
addr16
popf
sub
and
cmp
push
in
mov
adc
pop
push
andb
fstl
stos
jl
jae
arpl
or
jns
sahf
and
test
mov
subb
stos
outsb
mov
inc
sub
and
fcoms
jae
mov
pop
mov
xchg
pop
hlt
rorb
in
jmp
mov
imul
inc
addr16
daa
pop
test
jae
jp
xor
aaa
mov
jmp
add
pusha
xor
shll
mov
out
repnz
shrb
mov
mov
cmpsb
not
inc
sbb
roll
cmp
test
repnz
sahf
jbe
scas
imul
and
ficompl
sbb
dec
cmp
jp
mov
push
inc
fbstp
pop
int3
jns
fistps
cwtl
ret
leave
mov
mov
adc
cmp
addr16
mov
test
add
test
add
pusha
push
stos
pushf
pushf
lea
jmp
pusha
clc
call
lea
jae
bt
cmc
xor
call
push
call
fldl
fs
jbe
rcr
setg
setne
bsr
mov
pushf
bts
add
bsf
sub
rcr
shl
mov
shr
or
inc
add
neg
movl
shrd
bt
movsbw
jmp
call
pop
pushf
xchg
movsbw
not
mov
movzbw
lea
jns
pop
call
call
add
push
gs
outsb
push
gs
js
gs
imul
gs
stos
push
pushf
pushf
lea
jmp
hlt
pushf
jmp
jecxz
cmc
cmp
jmp
pusha
jmp
xor
mov
pusha
clc
push
bt
cmpb
pushl
pushf
jmp
shr
mov
mov
aam
and
sub
ror
test
xor
push
fcomps
aaa
or
cmp
bound
mov
and
mov
cmp
ljmp
aam
out
sub
roll
push
sti
rcll
mov
sub
jo
decl
mov
push
mov
sbb
pop
sub
xchg
dec
fstpl
fimuls
aas
jmp
cmp
into
push
clc
lds
pop
adc
roll
loope
es
mov
bt
test
test
call
pusha
mov
lea
pushf
lea
jg
call
call
add
push
outsb
push
gs
js
gs
imul
gs
jne
cmc
test
mov
mov
add
leave
pop
mov
xchg
scas
push
in
push
stos
fs
inc
repz
mov
push
sub
in
pop
cwtl
sub
aas
adc
dec
roll
sub
rolb
add
je
outsl
outsb
jae
insb
gs
push
add
fidivs
add
movsb
bswap
pusha
mov
pushf
lea
jmp
mov
clc
cmp
mov
call
str
push
call
xchg
mov
lea
jne
jmp
push
call
mov
jmp
mov
pusha
not
movl
movsbw
pushl
lea
bswap
lea
pushf
pushl
movl
mov
pushl
popl
movl
pushl
ret
lea
jae
cmp
call
rolb
and
xchg
xchg
push
cltd
outsl
stos
mov
ljmp
pushw
shll
and
sub
mov
lcall
sub
ficomps
xor
lret
fisubs
or
xor
inc
sbb
repnz
xor
and
sahf
ljmp
cmp
or
sbb
dec
and
xchg
shr
repz
out
mov
int3
dec
push
xchg
lcall
xor
roll
hlt
jp
sub
jmp
add
dec
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
gs
insb
popl
add
test
mov
add
cmc
call
rcl
mov
jmp
aas
sbb
out
cmpsl
pop
mov
movnti
add
push
jae
xor
ret
in
xchg
les
fistpl
mov
push
loop
mov
mov
cmp
in
mov
pop
out
ret
mov
xor
adc
pop
lea
inc
inc
mov
aad
loopne
scas
cld
xor
jmp
mov
lock
pop
lods
std
cld
lods
cmp
mov
js
mov
xor
inc
sbb
outsl
roll
cmp
sbb
pop
mov
mov
and
int
loope
and
xchg
test
dec
mov
push
push
sbb
push
push
les
mov
push
scas
add
imul
jge
inc
daa
sbb
mov
insl
cmp
and
lret
imul
push
jmp
pop
mov
push
in
mov
test
or
mov
bnd
inc
add
adc
lcall
mov
cmp
movsb
adc
jo
shlb
out
pop
mov
repz
cmp
lret
sbb
fisubrs
xchg
sbb
cmp
lods
cmp
jle
cwtl
lea
cmpsl
cmpsl
sub
pop
stos
mov
sub
jle
mov
and
stos
roll
jge
jnp
jb
insl
outsl
outsb
cs
insb
add
xor
mov
push
pushf
lea
call
pushf
movl
pushl
lea
jae
dec
xchg
inc
not
mov
not
pushf
call
jmp
add
inc
gs
gs
dec
bound
arpl
cmpsb
sbb
jns
lret
cmp
sub
pop
hlt
pop
mov
push
ds
mov
into
insb
or
xchg
ficoms
inc
xchg
out
cld
gs
mov
stc
inc
sets
popl
mov
pusha
mov
push
push
lea
jmp
clc
test
movl
jmp
lea
ja
shr
neg
sub
shld
adc
add
pusha
bt
cmp
neg
mov
stc
mov
cmc
cmp
pushf
call
or
pushf
lea
je
call
pusha
lea
jne
pushf
pusha
push
push
lea
jmp
push
cmp
call
movsl
push
mov
and
mov
mov
clc
je
mov
sahf
ds
ss
leave
mov
xchg
push
mov
test
xchg
cmp
pop
xchg
arpl
add
xor
pushf
lock
fmulp
test
push
add
inc
test
scas
push
mov
iret
push
inc
roll
loopne
sbb
pop
xchg
push
or
lock
loopne
js
nop
dec
fsubrs
movsb
sub
mov
iret
cs
mov
or
setnp
push
sbb
ret
and
stos
xlat
lcall
mov
inc
and
testl
mov
fnsave
mov
mov
push
adc
mov
push
adc
add
add
add
add
or
add
add
mov
push
ficomps
inc
in
pop
icebp
dec
sub
cmp
sub
inc
and
in
aaa
jle
mov
scas
push
add
jb
mov
push
hlt
push
scas
bt
sub
or
fisttps
xchg
mov
push
rorb
mov
loope
and
gs
test
rorl
movsb
insb
inc
out
lods
and
pop
idivb
divb
cmpsb
and
xchg
test
xor
je
mov
jnp
adc
mov
imul
adc
sbb
popf
sbb
fisttps
inc
or
stos
ds
pushl
sbb
jecxz
lock
out
repnz
imull
adcl
mov
pop
fists
mov
outsb
jo
sbb
fsubrl
loopne
lret
sub
lea
inc
cmc
outsl
mov
rorl
and
hlt
subb
jl,pn
shrl
lret
daa
iret
fwait
xor
add
xchg
and
push
iret
jae
enter
add
xchg
ljmp
mov
mov
adc
clc
popf
jl
into
mov
imulb
jnp
push
loopne
scas
xchg
pop
test
shll
ss
mov
clc
cli
and
loopne
add
inc
push
jg
push
mov
rorl
aaa
xchg
pop
xor
call
pop
pop
lock
pop
mov
outsb
repz
movsl
test
aam
pop
or
inc
shlb
inc
add
cs
lcall
or
mov
add
inc
stos
jl
fimuls
pushf
lahf
push
cltd
vcvtps2dq
cmpsb
mov
xor
inc
fisubrs
out
mov
xor
icebp
lea
jae
cmc
pushf
xor
call
ljmp
add
mov
add
add
pop
add
pop
add
add
add
in
or
sbb
add
pushf
or
dec
push
pop
add
or
notb
or
mov
mov
pop
add
mov
push
add
mov
or
sbb
pop
add
mov
or
push
mov
push
add
push
pop
add
scas
pop
add
in
or
adc
add
pop
add
ret
jle
push
add
push
add
repz
add
inc
pop
add
or
sbb
or
add
movl
add
les
add
mov
pop
add
scas
pop
add
mov
add
mov
pop
add
stos
pop
add
in
push
add
pop
add
out
or
or
add
out
add
pop
add
add
add
enter
out
add
mov
add
mov
add
dec
pop
add
ret
sub
pop
add
mov
push
add
mov
pop
add
add
add
pop
add
sbb
add
add
add
mov
add
pop
add
cmp
add
out
add
stos
pop
add
mov
add
pop
add
push
add
movb
push
xchg
or
add
add
rorl
add
scas
pop
add
add
add
add
or
add
add
loopne
push
add
scas
pop
add
add
add
push
add
add
add
add
add
or
push
scas
pop
add
mov
add
pop
add
mov
add
inc
adc
add
add
add
rolb
mov
sarl
repz
stc
add
pusha
neg
inc
jmp
pusha
pushf
lea
jge
jae
pusha
stc
cmp
pushl
lea
jae
pushf
stc
push
call
call
push
push
pop
outsl
mov
adc
jo
dec
add
cmp
inc
int
inc
or
lea
fstpt
rcl
stos
jmp
and
js
cmp
mov
rorl
cmpsb
fstpl
adc
imul
test
int3
clc
dec
js
or
push
cmpsb
rcr
lock
mov
xchg
daa
fisttpll
out
mov
das
outsb
out
adc
ret
mov
or
iret
pop
sub
or
ret
mov
out
pop
sub
xchg
xchg
sub
addr16
std
or
outsl
xchg
pop
mov
popf
scas
add
fsts
ja
sub
dec
mov
jp
inc
xor
push
outsl
add
mov
outsl
cmpsb
outsb
adc
push
mov
xlat
out
stos
cmpsb
mov
int3
pop
inc
jnp
add
iret
ss
add
lods
xchg
lods
push
bound
xor
inc
ds
aas
mov
jmp
es
or
lret
js
bound
in
das
sub
mov
aas
or
mov
movsl
rcrl
xlat
mov
or
divb
push
mov
cltd
or
shll
dec
add
lods
jle
dec
lods
pop
fsubrl
adc
lods
lods
in
cmp
stos
sub
push
pop
jno
sti
mov
pop
mov
push
sub
dec
call
lods
aas
frstor
fcompl
push
arpl
cmpsb
inc
insb
lods
xor
div
xchg
and
outsb
pop
sub
sub
popf
jnp
outsb
sub
sub
fcmovnu
lods
test
in
pop
push
mov
stos
pop
clc
sub
imul
sub
ljmp
int
fcomi
lods
faddl
and
push
enter
lods
sub
pop
fwait
sub
dec
scas
lods
sub
jecxz
lods
stos
dec
lods
dec
jl
sub
shlb
into
mov
and
lods
lods
loope
xchg
lods
ljmp
sub
sub
lods
sub
int3
inc
add
dec
sbb
int
int
inc
in
sbbb
dec
dec
dec
lods
or
int
pop
int3
pop
setge
xchg
imul
or
lret
cltd
test
push
fwait
dec
lods
mov
ljmp
pushf
in
out
pop
out
fucomp
popf
insb
insl
xchg
in
sub
stos
pop
in
lret
and
lods
fucomp
dec
lret
lret
mov
mov
movsb
lods
sub
dec
jmp
jmp
in
test
ljmp
out
test
xchg
xchg
dec
leave
sub
jecxz,pn
and
insl
stos
dec
stos
pop
mov
int
cli
out
imul
mov
sbb
enter
lahf
dec
gs
push
mov
push
mov
fldt
insb
out
sti
mov
in
int3
sub
push
mov
mov
das
dec
ljmp
jmp
in
not
movsb
mov
jge
sub
enter
mov
outsb
sub
or
mov
imul
xchg
int
xchg
insl
lea
pop
int3
cmpsb
ret
mov
call
pop
xchg
mov
lcall
or
mov
jle
or
or
stos
xchg
sahf
pop
mov
add
cmp
mov
subb
dec
lods
ret
dec
cmpsb
int3
inc
and
and
or
add
outsb
dec
or
lods
lods
and
rcl
sub
ret
push
in
lea
stos
mov
push
insb
in
ss
sub
daa
outsl
push
lahf
js
leave
test
into
cmp
or
shlb
jle
shrb
ja
test
sahf
sub
fs
dec
push
outsb
pop
fmul
sub
cli
fnstsw
incb
xchg
add
cltd
push
lahf
push
push
pop
scas
pop
push
mov
mov
cmc
jb
movsb
in
push
insb
mov
xchg
outsl
xchg
jbe
xor
test
cmpsb
and
mov
scas
dec
mov
shlb
and
out
rol
or
idivb
dec
mov
pop
push
push
in
imul
dec
xlat
sub
dec
std
jg
mov
mov
dec
push
xchg
mov
pop
mov
jp
outsl
fsubl
mov
lret
sub
mov
test
int3
adc
outsl
jg
repnz
dec
outsb
fidivs
sahf
sub
xor
pop
cmpsb
test
daa
sbb
mov
popf
xchg
sub
inc
orl
mulb
in
outsl
nop
ja
inc
xor
scas
cmpsb
js
add
jo
dec
push
subb
and
cltd
out
imul
xorb
push
pop
push
test
lea
xchg
sti
pop
push
imul
test
lcall
cmpsb
inc
fwait
pop
std
scas
sub
xchg
inc
fwait
inc
iret
mov
sub
lret
sub
pop
adcl
fwait
or
push
jb
fdivrl
or
mov
in
data16
into
lods
push
or
loop
push
pop
insb
cmpsb
pop
data16
pop
dec
outsl
jle
insb
xor
fld
dec
sbb
cmp
bound
aam
sub
mov
out
fcomps
sti
push
js
fildll
mov
jg
mov
sub
push
or
scas
push
pop
aam
cld
or
scas
sbbb
inc
xor
mov
jl
pop
push
fistpll
scas
outsb
pop
mov
movsb
imul
jnp
sub
dec
das
mov
cs
pop
cltd
jle
in
push
int3
xchg
sub
ret
insl
out
rcr
push
jl
push
pop
fldl2e
pushf
movl
jmp
test
outsb
imul
dec
push
ret
dec
rcrl
xor
adc
or
cmp
inc
pop
lcall
sub
divb
cmpsb
hlt
dec
mov
mov
stos
mov
shll
sub
ss
add
fldt
push
test
loopne
out
cltd
dec
lods
daa
mov
out
test
push
das
sub
mov
test
scas
or
subb
jmp
imul
out
shll
pop
jbe
dec
xlat
cmp
int
jmp
fisttpll
pop
in
sub
jge
imul
push
andb
dec
shll
dec
inc
mov
pop
fsubrp
adc
addps
push
mov
jle
mov
mov
dec
pop
mov
scas
mov
mov
out
test
ja
scas
push
fcoms
stos
insb
ficoms
sub
enter
pop
xchg
push
stc
inc
sub
cmp
mov
push
dec
js
pusha
scas
in
int
xchg
add
dec
inc
imul
sbb
and
in
sbb
movsl
data16
test
and
lahf
mov
leave
jle
rorl
je
lods
clc
js
pop
rolb
sarl
pushf
add
fcoml
cmp
stc
sub
pop
leave
shrl
mov
js
pop
out
in
out
orb
dec
outsb
sub
pop
bound
repnz
test
cmp
ds
or
rclb
movsl
sub
int3
pop
mov
jl
sti
lock
movsb
dec
xchg
add
add
push
orl
aas
gs
iret
add
ret
int
sbb
je
movsl
push
int3
pop
in
jne
lock
ds
data16
das
cmpsb
loopne
test
fldenv
imul
rorb
in
push
xchg
in
pusha
in
in
inc
dec
pop
int
sbb
inc
xchg
lahf
jmp
add
sar
mov
orl
xchg
outsb
inc
pop
sahf
push
lret
ficompl
mov
xlat
pop
stos
loop
js
mov
pusha
jge
cmc
inc
jg
and
xchg
imul
out
outsl
test
cmp
fildl
out
push
inc
jbe
push
cmpsb
daa
test
pusha
outsb
int
sub
dec
pop
mov
xchg
ret
imul
jo
fistl
mov
push
fisttps
insb
faddl
inc
jmp
arpl
mov
scas
dec
std
cmpsl
sub
jns
dec
outsl
xor
loope
dec
mov
movsl
gs
pop
mov
imul
ret
cmp
jb
mov
pop
pusha
int
movsl
into
in
xchg
sbbb
jns
jnp
insb
scas
push
pop
mov
inc
sahf
adc
movsl
push
sti
jne
push
or
scas
subb
gs
or
dec
jp
out
dec
xchg
jg
popf
sub
es
cmpsb
xor
push
ficomps
lods
cmp
lahf
mov
jne
sbb
fldcw
dec
test
ret
cwtl
fs
in
jle
xchg
cmpsb
push
and
data16
dec
push
sub
mov
jo
fisttpl
sar
xchg
xchg
sti
or
mov
jae
pop
xchg
pop
jecxz
insb
cs
das
lea
xchg
into
aas
enter
mov
pop
pop
insb
mov
cmpsb
inc
xor
lods
sahf
lret
mov
mov
push
sub
fildll
scas
loop
stos
jle
jl
or
jg
dec
cmp
sti
test
cmp
dec
addl
mov
push
cmc
mov
or
or
movsb
fs
push
andb
dec
push
push
rcrb
outsb
repz
punpckhdq
ja
mov
in
cmpsb
jne
sbb
inc
outsb
outsl
clc
dec
imull
in
repz
call
pushf
xor
adc
sub
fsub
or
dec
movsb
add
movsl
leave
lods
ljmp
ret
sub
mov
into
sub
in
test
lods
push
mov
push
jge
outsb
mov
cmp
mov
enter
lods
sti
dec
sub
pop
mov
in
mov
popa
push
xchg
and
int3
pop
push
mov
rcrb
lock
out
adc
pusha
sub
inc
es
scas
mov
loopne
int3
push
ljmp
xor
jae
mov
dec
test
lods
rolb
mov
stc
in
loope
pop
rcrb
lret
dec
or
dec
js
in
cmpsb
mov
outsl
mov
sub
scas
sub
xor
mov
std
icebp
adc
imul
dec
dec
sbb
js
ljmp
stc
fsubl
add
es
pusha
int3
and
ljmp
shll
push
cmpsb
ss
inc
sar
subb
dec
repz
scas
mov
add
inc
sti
mov
jne
lods
clc
xchg
or
dec
inc
pusha
sub
lds
lea
sbb
pop
mov
fisubl
dec
push
sub
cmpsb
mov
add
mov
outsb
fildl
in
out
cmp
add
dec
cmpl
adc
mov
daa
lea
idiv
adc
mov
loopne
mov
in
xlat
sub
stos
pusha
push
in
lods
test
outsl
out
ret
sti
inc
and
jmp
ficoms
cwtl
xor
cltd
test
cwtl
sti
pop
mov
and
sub
insb
pop
jp
inc
stc
aam
mov
jle
xchg
pusha
outsb
push
stos
or
andb
mov
jns
aam
jb
mov
iret
push
es
xchg
shrb
or
stos
lret
push
dec
into
out
mov
cmpsl
jle
mov
mov
ficomps
frndint
lods
repnz
dec
repnz
pop
dec
in
sbb
ljmp
fs
cmp
or
outsl
sub
sbb
and
sbb
clc
rcll
push
ror
sub
or
and
sub
xchg
jle
out
xchg
mov
dec
imulb
xchg
fmul
imul
nop
lahf
cmpsb
lcall
cmpsl
fcmovu
jp
cmp
in
int3
ds
xchg
xchg
lea
and
mov
pop
movsl
and
pop
in
and
jp
rol
out
roll
sub
push
mov
add
and
sub
mov
stos
or
jmp
xor
pop
sub
dec
dec
sub
jmp
jle
sub
int
pop
xchg
mov
sub
hlt
imul
fnsave
aaa
out
test
adc
push
scas
lods
dec
into
mov
pusha
js
divl
popf
shll
imul
or
sbb
inc
fldln2
mov
fs
mov
adc
fsubrl
scas
hlt
lods
jg
jle
mov
in
mov
or
pusha
push
inc
cmc
mov
xchg
fisubrl
aaa
fdiv
mov
repnz
insl
pop
cmpsb
mov
pop
mov
xchg
movsl
loopne
fwait
xchg
cmpsb
cwtl
inc
push
movsl
push
in
pop
in
subb
ret
sub
fstps
mov
sub
jge
movsl
fs
mov
das
jbe
or
and
movsl
outsl
or
pop
mov
dec
jno
insl
lret
insb
sbb
mov
pop
bound
movsl
data16
shrl
inc
in
out
push
ja
mov
es
mov
add
push
sbb
jp
sub
lods
cmp
sub
and
or
rcrb
mov
push
dec
outsb
and
pop
leave
add
sti
or
pop
mov
adc
jne
xor
fbld
add
cmpsl
nop
dec
xchg
imul
divb
out
sti
dec
shrb
gs
xchg
or
cltd
push
stos
loope
dec
and
out
cld
add
in
fidivrs
call
mov
nop
mov
cmpl
outsb
outsl
je
sub
sub
cmpsl
lret
pop
imul
in
pop
mov
js
dec
ret
sub
int
push
cmc
mov
dec
pop
sarl
sub
inc
inc
fsubrs
sub
fs
adcl
ror
lods
insl
mov
int3
outsb
insl
out
pop
jmp
cld
sub
cmpsl
imul
ss
ret
popa
and
fnsave
cmpsb
pop
adc
inc
mov
imul
addb
and
sub
inc
add
cmpsb
mov
leave
insb
leave
xchg
cmpsb
and
pop
push
jnp
adc
jp
dec
or
addb
fistpl
test
out
jge
fs
pop
mov
sub
mov
mov
loop
xchg
bnd
mov
dec
cmc
outsl
nop
cmp
popf
stos
imul
sub
jmp
scas
cmp
sub
pop
dec
shrb
mov
lods
xchg
xchg
popf
data16
in
imul
dec
mov
pop
outsb
dec
xchg
fwait
cmpsb
stos
call
sub
mov
cmpsl
stos
pop
pop
mov
mov
je
stos
lock
pop
and
lret
sub
mov
or
aad
stos
shr
fstpl
lods
cmp
sub
movsl
popf
idiv
js
daa
mov
roll
scas
jo
das
push
jle
aaa
movsb
push
rorl
and
stos
mov
jbe
sarb
jle
fildl
add
jl
in
xchg
xor
xchg
fidivrs
lds
sbb
cmpsl
pop
cmp
mov
popf
mov
dec
cmp
sub
jae
es
sub
out
int
mov
dec
dec
subb
and
dec
in
cmpsb
adc
inc
ret
add
adc
or
jp
movsl
insb
jecxz
pop
jns
lahf
pop
adc
cmpsl
inc
or
or
mov
add
out
into
fisubrl
stos
pop
sub
sbb
xchg
or
lret
dec
clc
xchg
out
ret
jmp
pop
fistpl
in
outsl
mov
cmp
pop
xor
pop
in
lods
fisttpl
pushf
mov
out
fsubrs
outsb
pop
imul
pop
aad
fisttpl
xor
jne
lret
push
leave
xchg
dec
mov
fldl
ds
or
mov
arpl
or
dec
cmpsl
mov
xor
and
mov
mov
movsl
mov
out
cmpsl
pop
cmpsb
scas
mov
or
test
sbb
pop
or
int3
mov
jmp
xor
lea
or
push
ljmp
cmpsl
cmp
popa
xlat
lods
pop
das
dec
into
outsb
xchg
lock
fs
js
xlat
lds
fiaddl
pop
insl
cmc
out
sub
fcoml
pop
mov
fisubl
push
sbb
sub
enter
xchg
loope
leave
xor
dec
into
out
mov
pop
fucom
mov
dec
arpl
cmp
call
xor
and
insb
fadd
mov
sbb
cmp
cmp
cmp
fnsave
mov
pop
push
stos
adc
movsl
inc
hlt
cmp
lret
fcmovne
xchg
dec
add
jmp
bound
int3
movsb
sub
out
xchg
jle
imulb
or
dec
outsb
sub
in
rcl
mov
cmpsb
sbb
addr16
inc
lret
std
pop
or
movsl
std
outsl
mov
imul
stos
fcmovne
mov
div
mov
test
mov
pop
subl
out
outsl
popa
jns
testb
test
and
push
sarl
js
cmp
xchg
dec
imul
cmp
test
into
sub
ja
insl
cltd
stos
std
dec
imul
cmpsl
add
cmpsb
data16
sub
and
leave
fimull
shr
push
imul
or
jbe
lret
jmp
pop
lcall
pop
lods
cmpsb
cwtl
mov
push
arpl
inc
xor
sub
into
jle
fcoml
mov
or
arpl
in
or
jge
dec
jae
pop
jle
shrl
sbb
incb
sub
jle
inc
stc
mov
rcl
imulb
and
sub
xor
loopne
push
gs
and
xor
pop
bound
stos
imul
xchg
inc
pusha
js
stos
in
push
frstor
movsl
mov
insb
mov
jp
and
call
xchg
clc
pusha
insb
dec
loopne
sub
jecxz
dec
test
lods
je
mov
pop
mov
pop
fs
cmc
in
pushf
and
ret
lcall
mov
add
into
sahf
aas
addr16
xchg
or
repz
scas
scas
imul
repz
sub
inc
imul
fadd
mov
mov
test
add
shl
or
or
push
push
int3
rcr
jecxz
fadds
cmpsb
test
or
mov
shrl
push
stc
lcall
movsl
cmpsb
pand
ja
sub
addl
into
popf
xchg
das
and
jbe
adc
xorl
push
leave
movsl
mov
lret
xchg
pop
in
ficomps
into
pop
sbb
add
mov
frstor
dec
and
popf
dec
jecxz
push
stos
mov
inc
insb
movsb
sti
jle
push
in
lock
or
jge
jnp
xchg
aad
popf
sbb
cmp
push
aad
bound
add
inc
and
loopne
cmp
movsl
sahf
cmp
jge
mov
jo
mov
lret
inc
clc
fisubl
lods
ss
mov
jae,pt
out
fidivs
movsb
cmpsb
and
mov
out
popf
in
outsl
fadds
adc
xchg
inc
rorl
jle
push
dec
aam
mov
jle
out
dec
mov
pusha
out
jae
int
lahf
pop
insl
sub
js
xor
out
pop
es
imulb
lcall
ljmp
jne
fmuls
fisttps
pop
push
or
add
fsubl
outsl
mov
rcrl
adc
test
lods
mov
jmp
outsl
adc
and
incl
or
cld
pop
add
sub
push
movsl
sub
lret
fs
imul
pop
pop
inc
fdivp
jmp
in
out
jns
lods
mov
xchg
in
imul
xor
addr16
testb
ficoml
dec
ss
and
add
js
lods
mov
out
push
mov
dec
sub
add
mov
jns
movsb
sarb
movsl
xchg
clc
out
outsl
lods
mov
jb
sub
mov
mov
das
sbb
jno
dec
add
insl
inc
jmp
stc
sub
std
or
addr16
data16
inc
jb
popa
je
inc
outsl
outsb
je
add
mov
sar
xor
mov
lea
jmp
push
call
sarb
inc
gs
jb
arpl
fs
jae
add
or
xor
pushf
push
pushf
popl
pushf
push
push
or
push
mov
pushl
pushf
lea
jne
test
jmp
lea
pop
movzwl
bswap
pusha
lea
pushf
pop
push
call
jnp
mov
bound
scas
pop
loop
cmpsb
xchg
icebp
xchg
pop
push
mov
ficomps
lret
stos
movsb
add
adc
out
xor
inc
iret
xchg
adc
int
decl
mov
sub
leave
daa
xchg
scas
in
xchg
in
or
rcrb
lea
cltd
mov
push
inc
sarb
rorb
sbb
daa
cmp
dec
enter
jecxz
mov
dec
adc
out
pop
jmp
xor
pop
jbe
mov
out
mov
in
jo
nop
icebp
mov
imul
and
test
adc
pushl
lea
jmp
adc
pushl
push
movb
movb
lea
jmp
jmp
jmp
jmp
pusha
pushf
lea
jae
movzbw
movzbw
bswap
mov
not
bswap
pusha
mov
mov
push
pushf
lea
jmp
test
clc
cmc
or
push
call
xchg
adc
sbb
insb
sub
or
jo
inc
nop
repz
popa
enter
mov
inc
negb
jns
pop
ficompl
popa
add
sbb
jae
test
or
rolb
lahf
sub
cmp
pushf
and
divl
xor
shll
sahf
aam
add
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
gs
gs
inc
insb
imul
add
in
jbe
rcr
mov
xor
cld
push
mov
inc
cmpsb
push
je
push
add
test
add
push
sahf
push
dec
shrb
aad
repnz
test
shrb
aas
orb
ljmp
sub
cltd
xchg
jo
leave
nop
jmp
mov
or
mov
jb
and
push
lret
push
sub
mov
shll
cs
out
inc
lds
in
pop
in
test
or
loopne
lahf
insb
adc
les
shll
leave
jg
push
call
jg
nop
sbb
xchg
pop
push
cli
xchg
xchg
fwait
pop
xor
pop
lcall
shll
pop
pop
fidivs
jecxz
ret
adcb
outsb
decl
insl
fiaddl
scas
cmc
test
mov
and
insb
xchg
sub
outsl
pushf
mov
xor
sar
mov
jmp
xchg
xor
ds
pushf
jne
lahf
xor
ss
mov
les
jne
jmp
call
push
call
cmc
xchg
je
pushf
jmp
pusha
sub
pushf
lea
call
jmp
add
push
gs
popa
jo
outsl
fs
add
call
add
inc
gs
imul
je
inc
test
stc
cmc
cmc
cmpb
mov
push
lea
jne
push
call
add
sub
btc
mov
movsbw
add
or
shl
rcl
neg
movl
lea
mov
stc
call
lea
jne
pushf
call
push
call
dec
xchg
xchg
addr16
shrb
mov
repz
stos
pop
lret
mov
mov
je
jg
and
bound
mov
sub
xchg
add
inc
js
push
lret
out
or
push
xchg
dec
div
and
in
pushf
movsb
mov
add
adcl
icebp
insb
adc
mov
sub
lods
pop
cmp
pop
cs
sub
xchg
jg
out
cmp
inc
and
adc
popf
pushf
and
mov
sub
inc
and
mov
movl
popl
push
pushf
mov
pushf
pushl
ret
sbb
xchg
pop
and
add
push
fwait
inc
divl
mov
jns
cmp
add
imul
add
adc
sub
cmpsl
mov
loop
fsubl
push
shrl
inc
and
pushf
push
lahf
pop
movl
lahf
not
lea
call
cmp
pusha
mov
lea
je
call
call
lea
jne
bsr
or
mov
bt
call
mov
pushf
movw
mov
push
pushf
popl
movb
jmp
pushl
movb
lea
jne
pushf
jmp
pushf
pusha
movw
lea
jne
btr
bts
rcr
mov
btr
xor
mov
sub
rcr
movsbw
mov
cmp
push
stc
clc
sub
cmc
pushl
popl
stc
stc
pusha
bt
cmp
pushf
pushf
jmp
or
pushl
movb
call
add
dec
inc
dec
popa
jo
je
imul
mov
jmp
pop
mov
repz
fwait
shll
movsb
jecxz
sub
insb
dec
icebp
sub
lahf
out
cmp
das
cltd
dec
add
adc
arpl
pop
frstors
loop
stc
sub
push
shrb
nop
xor
mov
fs
fwait
push
shrl
cmp
cmc
movl
push
pushl
jmp
add
inc
gs
imul
push
call
rol
inc
gs
push
call
ljmp
repnz
add
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
jae
pushf
pusha
lea
jne
jmp
push
call
div
and
sbb
xlat
ret
dec
add
fildll
cmp
ja
inc
jp
mov
push
dec
or
jg
test
mov
or
cwtl
xchg
sub
pop
out
inc
in
add
push
out
in
mov
xor
int
sar
leave
lock
mov
cwtl
mov
jge
push
lds
jmp
sub
sub
aam
xchg
lret
sub
imul
sub
xlat
in
cmpsl
in
cmc
cmp
mov
mov
fsubrl
lods
mov
mov
mov
jb
mov
adc
popf
stos
aaa
sub
je
in
gs
test
pop
push
jb
ss
test
and
xchg
jne
mov
pop
subb
sub
xor
mov
sub
stos
ds
and
jne,pt
fs
ja
scas
lods
stos
and
adc
push
movsl
push
call
stos
sub
mov
jecxz
cmpsb
sub
fs
push
or
jne
sub
sar
or
ss
mov
lea
push
mov
neg
pop
or
scas
pop
push
inc
jo
inc
popf
jp
xchg
inc
dec
cmp
or
aam
xchg
mov
cmp
cmp
fisttpll
push
imulb
jbe
arpl
pop
fwait
lods
or
lret
mov
xchg
arpl
das
sub
outsl
jbe
int
pop
dec
dec
stos
jae
movsl
out
sahf
push
ds
fwait
dec
jbe
push
lret
push
lods
stc
cmc
popf
xchg
xorb
jmp
in
jnp
xor
cmp
pop
lret
fcom
repnz
es
or
out
imul
ss
and
shrb
mov
cmp
mov
inc
cmp
mov
jmp
mov
jmp
push
call
xchg
xchg
add
add
insb
inc
imul
jne
push
inc
jne
data16
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
rcr
add
mov
cmc
cmpb
push
jmp
mov
call
call
loopne
mov
hlt
xchg
push
or
dec
push
jp
rcrb
mov
ds
cmpb
bound
stc
xchg
sub
je
enter
cmp
fistl
inc
xchg
cld
outsb
lds
repz
push
mov
pop
push
pop
xchg
mov
pop
cs
aam
dec
mov
shrl
fs
jae
inc
js
gs
imul
je
or
movl
and
jmp
cwtl
lea
call
int
imul
pop
movnti
outsl
addr16
outsb
lock
and
mov
int
xchg
and
bound
mov
inc
mov
cwtl
pop
popf
sbb
and
scas
mov
outsb
mov
jnp
jecxz
mov
push
push
jo
shrl
in
dec
cmp
xchg
add
add
add
not
mov
test
cmp
jb
cmp
pusha
jmp
xor
sbb
jo
mov
popf
or
ret
mov
push
inc
adc
out
or
xchg
ss
fadds
jg
push
rorb
addl
dec
xlat
cmp
xor
mov
sarb
dec
add
adc
movsl
pop
xchg
pop
movsl
jmp
aas
mov
sub
loop
mov
arpl
outsb
int
sbb
out
das
inc
lea
out
ds
mov
faddl
fisttps
jmp
insb
flds
jmp
loopne
or
rcrl
aas
sbb
sub
mov
pop
movsb
inc
cltd
pop
dec
shrb
out
imul
insb
ja
inc
xor
xchg
sbb
outsl
icebp
loope
jmp
je
lea
cmpb
mov
mov
mov
cmpsb
adc
cmp
mov
jnp
lahf
mov
fwait
push
insl
xor
shrl
notl
call
sete
jmp
jae
push
inc
mov
push
mov
or
mov
add
sub
push
jle
adcl
mov
in
aas
xchg
xor
sub
pushf
push
movw
lea
call
push
lea
jmp
pop
xchg
inc
lret
xchg
imul
jb
sahf
push
dec
out
pop
es
and
sbb
clc
ror
shll
std
cmpsl
fdivrs
xor
int3
cld
ja
jmp
pusha
jmp
popf
pusha
push
pop
or
sbb
lret
cli
nop
sahf
xchg
jle
xor
mov
iret
sub
sahf
mov
jl
pop
pop
inc
movq
push
push
sub
imul
mov
and
cmp
pop
cwtl
pop
add
loope
fs
test
sbb
shll
inc
cmpsb
sbb
jmp
sbb
mov
cmc
adcb
call
addr16
leave
orl
push
addr16
sbb
je
jl
lcall
jecxz
sbb
imulb
pop
inc
push
add
cmc
mov
sbb
inc
fistpl
fxch
and
call
add
mov
icebp
shlb
xor
mov
jle
movsl
cmp
insb
and
pop
out
int
or
add
dec
cs
movsb
pop
mov
mov
in
sub
inc
jl
and
out
aam
push
cmp
xor
jnp
xchg
iret
test
dec
add
jno
iret
incb
dec
mov
stos
test
xchg
lret
lds
mov
shll
push
arpl
loopne
push
lea
je
pusha
pushl
pushl
jmp
add
add
movsbl
bsr
setp
bswap
mov
cmp
rcr
test
shr
mov
jge
pushf
bt
push
repnz
pushl
mov
pushl
lea
jne
jmp
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
xorl
add
cmp
cmp
jp
pushf
pusha
lea
jae
clc
cmp
cmc
call
pusha
lea
jne
jb
push
mov
push
pusha
lea
jmp
jmp
neg
bswap
shr
mov
call
pusha
call
popf
rdtsc
push
call
fdiv
mov
es
xor
shl
pushf
mov
movb
stc
cmpb
push
pusha
lea
jne
bt
jmp
call
add
dec
gs
jo
gs
jb
jns
clc
cmp
pop
mov
icebp
sarb
les
mov
arpl
hlt
and
loope
orb
mov
in
mov
arpl
test
mov
aaa
mov
decl
out
shlb
and
or
xchg
push
aam
xlat
das
ss
adc
orb
iret
movsb
icebp
mov
shll
shll
or
incb
add
je
push
dec
outsb
outsw
add
je
or
mov
popa
mov
and
pusha
push
pushl
ret
pushf
movl
movsbw
movzbw
pushl
lahf
lea
movw
push
lea
jo
push
movl
call
lea
not
mov
call
push
call
lea
pushw
popfw
jmp
repnz
jmp
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
test
sarl
jmp
sbb
das
and
add
dec
cmp
test
cmpl
sbb
aaa
push
inc
fmuls
int
subl
sbb
nop
sbb
mov
sarb
mov
int
push
jmp
pop
push
jmp
adc
dec
sti
cli
jl
shufps
jns
mov
aam
sti
mov
add
dec
add
push
inc
xor
add
add
add
add
add
add
add
insl
hlt
push
add
push
add
push
add
add
add
add
push
add
fstl
cmp
or
or
mov
lods
xor
pusha
pop
dec
lret
fs
cmp
push
repz
adc
jl
adc
inc
jmp
ret
pop
xor
mov
jne
stc
arpl
push
repnz
mov
loope
push
mov
out
leave
mov
nop
testb
mov
dec
add
mov
jo
sbb
mov
mov
jno
ss
jp
cmpsl
cmp
leave
xchg
les
rcrb
mov
data16
out
dec
lret
ror
out
pop
notl
dec
mov
stos
push
aam
stos
add
out
jno
lods
sti
stc
rclb
ja
nop
imulb
pop
xor
mov
call
das
add
mov
sub
and
sub
popa
in
push
sub
inc
xchg
inc
add
and
iret
ret
mov
fnstenv
mov
xor
push
cmc
jne
and
jecxz
cmp
gs
sub
out
adc
mov
hlt
ljmp
jmp
cwtl
int
adc
out
push
iret
cmp
mov
and
inc
ret
mov
inc
mov
hlt
mov
rorb
clc
or
in
icebp
fs
inc
rcll
xchg
loope
ss
scas
jle
push
push
addl
mov
cmp
inc
inc
mov
roll
cmp
and
arpl
adc
mov
and
inc
jns
dec
jae
add
repnz
sub
sahf
jo
pushf
jb
cmp
push
out
lds
scas
test
mov
popf
lret
pop
mov
pop
ret
ret
test
pop
in
sbb
ror
push
mov
xor
outsl
mov
mov
push
xor
mov
push
mov
test
ret
cli
aas
sbb
inc
es
mov
insl
lret
jg
xor
pushf
inc
or
add
pop
lds
mov
test
pop
pop
movsb
sahf
push
push
pusha
jnp
pusha
scas
mov
add
stc
adc
mov
adc
cs
adc
cli
movsb
sub
cmp
or
push
mov
out
or
sti
out
dec
or
mov
cmc
jbe
fiadds
insl
lret
dec
cmp
in
pop
daa
pop
cmp
fistl
mov
adc
xor
pop
cs
add
mov
xchg
xor
lock
scas
mov
sub
push
dec
aam
adc
lea
imul
mov
mov
mov
pop
push
das
jmp
roll
mov
mov
aas
jns
shl
xchg
cli
inc
xor
mov
mov
mov
lods
sbbl
ret
xchg
lcall
lock
outsb
leave
and
cmp
pop
mov
inc
lock
dec
icebp
sub
pop
cld
imul
fbld
in
mov
in
sub
repnz
mov
movsb
loope
dec
mov
fxch
cmp
movsb
sahf
adc
and
call
insl
lods
pop
xor
push
add
jle
mov
popa
bnd
inc
js
or
cld
jmp
imul
cmc
xchg
stos
aaa
aam
inc
fmulp
xchg
push
push
lret
sbb
lea
testl
cwtl
sbb
fadd
lret
add
sub
jle
push
pop
sti
jb
into
push
insl
mov
jecxz
mov
insl
shlb
add
lcall
push
sbb
popa
nop
push
aas
jge
stos
fnstenv
negb
sub
pop
mov
fisttpll
testb
fdivs
in
sbb
mov
fdivrs
mov
ror
cld
jb
lods
clc
aad
cmp
addb
jp
test
out
sub
xorb
sbb
nop
adc
shrb
scas
or
jp
stc
sbb
int3
cmp
decb
loope
push
aas
dec
pusha
fnclex
in
fdivr
mov
mov
ljmp
xor
push
mov
push
test
insl
inc
scas
mov
jno
aas
aam
scas
mov
call
les
or
lods
adc
lret
daa
stc
dec
std
lret
push
leave
insl
mov
add
pushf
mov
out
lea
xchg
sbb
sub
ljmp
clc
push
xchg
dec
push
jnp
jbe
pop
flds
and
shlb
xchg
or
adcb
cwtl
iret
pop
faddl
xor
inc
sub
enter
mov
sub
daa
pop
popf
cmpsb
ja
xchg
inc
xchg
ficoms
dec
xchg
jbe
sarl
cmc
and
push
pop
pop
insb
dec
lret
cs
je
jg
sub
js
jl
push
enter
in
sbbl
ds
insl
add
outsb
clc
jge
int3
mov
jle
inc
ljmp
xor
pop
sub
mov
pop
jne
or
call
sbb
or
test
sbb
dec
imul
jg
inc
loop
or
inc
orb
leave
cltd
xchg
in
jbe
insb
movb
leave
lret
push
fidivrs
jae
outsl
push
dec
scas
jnp
pop
xchg
xchg
mov
add
mov
adc
mov
loopne
std
imul
add
test
or
xor
xor
mov
dec
sub
adcb
lods
jl
fdivrs
mov
dec
nop
sbb
push
jl
repnz
aas
dec
or
sub
adc
dec
scas
or
in
call
js
or
jbe
push
icebp
test
add
bound
cmp
mov
loop
iret
push
mov
lret
adc
mov
xchg
adc
ja
adc
sti
icebp
loopne
or
push
cmp
pushf
pand
into
add
add
and
inc
insl
fidivrs
bound
jb
mov
dec
mov
pop
loope
fsubrs
mov
push
or
not
cld
sub
les
and
out
mov
pop
mov
jmp
lret
out
fmull
pop
lods
test
mov
lds
in
xor
adc
hlt
bound
sub
pop
xor
test
filds
dec
pop
mov
xchg
push
jp
jb
insb
xchg
mov
scas
imul
sub
cld
jecxz
push
repnz
adc
pop
mov
xchg
hlt
int
fisubrl
scas
pop
cmc
xchg
mov
sub
in
fistpll
xor
lods
mov
jbe
jg
xorb
add
popa
fdivs
rcr
je
sbb
lcall
mov
xchg
cmp
inc
popa
cmp
test
pushf
scas
sub
ds
jp
mov
and
and
fs
sub
pop
and
adc
cmpl
cmc
sbb
cmpsl
pushf
movsl
divb
out
repz
xlat
repnz
mov
or
out
lods
in
cmc
lds
pop
negl
sbb
pop
stos
or
pop
mov
fsts
jmp
scas
je
mov
dec
bnd
lock
out
xchg
pop
xor
lret
jmp
sbb
lret
in
push
push
push
push
ret
fwait
jo
adc
mov
dec
lahf
cmp
xor
pop
pop
pusha
pushw
dec
fxch
xor
mov
jno
stos
jle
addr16
gs
mov
xchg
dec
push
and
inc
sub
mov
jae
xchg
sub
shl
dec
push
cmpsb
or
out
es
ds
inc
jp
lahf
push
xor
repz
xor
cwtl
push
into
daa
fucom
inc
jp
xor
xchg
pop
xor
push
jge
fwait
xor
inc
repnz
fcmovu
lcall
xor
enter
pop
movsl
push
mov
xchg
pop
decl
mov
or
push
lahf
sbb
lcall
xor
or
jae
out
sti
decb
imul
movsl
and
outsl
das
pop
shlb
xchg
es
cltd
sbbl
leave
divl
mov
mov
lret
addb
scas
int
sbb
popa
leave
roll
inc
or
shll
mov
dec
icebp
mov
adc
xor
jecxz
sub
mov
inc
fmuls
mov
popf
js
pop
push
imul
popf
mov
lods
rclb
jo
xor
mov
aas
fcmovnb
pop
push
or
fiadds
adc
push
addr16
adc
sbb
mov
in
aad
lret
out
fmull
jne
xor
mov
cli
push
push
sbb
pop
icebp
orl
out
sub
adc
jmp
xchg
jae
pusha
or
or
call
out
xchg
jp
addr16
pop
push
es
cmc
mov
imul
dec
and
pop
daa
mov
push
xor
or
adc
hlt
or
movl
fisttpl
inc
or
dec
in
and
shl
sbb
mov
iret
jle
mov
sti
cmp
cld
iret
mov
fstps
mov
push
das
iret
fadds
lock
adc
xchg
xor
jg
or
xlat
fwait
mov
mov
lods
loopne
xor
jbe
push
test
lea
mov
pop
sbb
rcr
es
mov
pushf
jns
movsb
les
fs
inc
negl
inc
xchg
in
lcall
popa
bound
cltd
pop
js
leave
repz
ret
fcmovb
aad
adc
ficompl
popa
cltd
in
shl
or
mov
in
hlt
movsl
and
popa
xlat
das
gs
movsl
addl
add
fmull
out
push
mov
lock
push
sbb
aam
jle
out
mov
push
push
push
cmc
lods
lock
inc
jae
test
pop
mov
jg
mov
xchg
gs
push
lods
xchg
stc
adc
fwait
mov
rorl
int3
fwait
mov
je
ret
or
lcall
mov
inc
insb
dec
arpl
sub
jecxz
or
adc
mov
repz
das
mov
loopne
cmp
xor
xor
pop
pop
jno
mov
mov
stc
leave
xchg
inc
sub
fwait
inc
push
lock
sbb
popa
jns
and
xor
sbbb
lds
jl
adcb
jge
mov
jns
and
cmc
mov
outsl
cli
test
push
pop
ret
xor
pop
shll
sub
popf
xor
mov
stos
popf
movsl
jg
push
incb
loopne
pop
xchg
push
ror
or
lea
add
add
push
insb
jae
gs
popa
insb
jne
add
sub
add
imul
add
mov
movzbl
movl
bswap
pushf
lahf
lea
push
pushf
jmp
push
call
loope
push
call
lds
inc
imul
add
jmp
mov
sbb
in
push
adc
movb
pushl
ret
ror
push
lea
push
ror
das
push
movzbl
dec
push
daa
rol
push
add
push
shrd
setge
and
push
adc
shr
sbb
push
setge
pushf
ror
xchg
lea
seto
mov
test
bt
test
call
movsbw
movl
pushf
sete
lea
lahf
lea
jmp
into
out
mov
adc
add
scas
pop
jmp
inc
jecxz
out
sub
into
lea
fldt
jle
mov
aaa
js
lds
and
lods
push
movd
outsl
fwait
push
fdivrs
adc
jne
push
mov
aad
mov
adc
adc
pusha
outsb
sub
stos
or
sbb
mov
and
sbb
sbb
out
inc
dec
sbb
movsb
mov
lds
subb
inc
mov
loop
inc
jmp
sbb
negb
mov
lret
pop
and
lahf
pop
dec
cmp
xor
pop
cmp
rolb
scas
icebp
ret
out
inc
notl
sub
test
lods
pusha
mov
cltd
cli
scas
pop
mov
rol
xlat
popf
dec
shld
sets
shrd
mov
bt
pusha
cmc
pushf
cmpb
jmp
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
push
cmp
stc
mov
neg
bswap
shl
shld
mov
rol
rcl
stc
mov
shr
cmp
push
push
sub
mov
pusha
seto
mov
lods
stc
rol
shl
neg
bt
xor
bt
shl
neg
rol
adc
sub
pushf
stos
not
call
adc
lea
pusha
push
jmp
movzwl
sub
shl
sub
adc
sar
mov
stc
cmp
pusha
cmc
add
pusha
mov
cmc
clc
pushf
test
push
mov
call
add
dec
gs
jo
imul
xor
test
add
enter
rol
incl
lea
not
movsbw
push
bswap
push
pusha
lahf
lea
jmp
test
sub
mov
mov
pop
lret
fwait
dec
out
pop
jecxz
daa
scas
jp
jmp
mov
adc
inc
imul
gs
in
aaa
jmp
das
jmp
lods
and
iret
mov
jae
sahf
imul
filds
mov
and
mov
cli
out
and
dec
jecxz
dec
into
in
jb
adc
dec
sub
inc
popf
fcmovu
xchg
jno
and
dec
fisubl
in
mov
lret
rol
sub
mov
je
jb
gs
jo
outsb
push
jb
inc
add
dec
lods
add
pushf
rcrl
fcmovne
pop
or
mov
xchg
pop
loope
sbb
jge
out
shrl
shlb
sbb
sarl
jae
cmp
mov
pusha
mov
pop
xor
and
ss
fcmove
loop
dec
inc
pop
ffree
fidivrs
jbe
out
adc
jo
or
adc
push
std
ret
cmc
int
stos
inc
shrb
cli
mov
jno
cmp
add
mov
mov
mov
rol
pop
pop
imul
and
lea
jae
jns
mov
not
jmp
xor
cmp
mov
clc
cmpb
call
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
call
pushf
call
xchg
call
rol
pusha
and
mov
cmc
test
bt
movb
and
call
push
call
pop
repnz
add
push
imul
jb
je
arpl
fs
jb
pusha
cmp
mov
lea
jae
shl
ror
bts
mov
clc
xor
mov
setp
sete
mov
push
call
pushf
cmpsb
pushf
mov
pusha
lea
ja
push
pusha
movb
lea
jb
push
pusha
pusha
cmp
cmpb
mov
pushf
movb
push
lea
jne
ror
xor
shl
btr
mov
cmp
pushf
push
clc
add
test
pushf
jmp
call
mov
jg
add
xchg
arpl
mov
outsl
sub
stos
rcr
cmp
out
cmc
xor
jecxz
test
sahf
mov
ljmp
fwait
sbb
push
ffreep
pop
and
sbb
test
xchg
fldenv
cwtl
shl
push
push
inc
cmp
popf
shlb
mov
or
cs
call
lea
jne
call
call
push
call
aas
sbb
pushl
popl
cwtl
cwtl
lea
call
jmp
push
call
stc
push
call
xchg
sub
pushf
jmp
push
call
insl
push
call
add
in
pushf
mov
pusha
mov
pushf
movb
pushl
ret
lea
jne
std
bt
stc
popf
push
pusha
pushf
pushl
lea
jmp
imul
nop
js
mov
cld
jo
enter
xchg
and
mov
mov
dec
dec
subl
dec
push
pop
test
fs
insb
dec
lea
scas
or
cld
lds
imul
xorl
gs
adc
std
cmp
push
push
aam
push
inc
rcr
cmp
and
outsl
loope
lea
add
insb
add
popl
rol
or
push
call
push
call
jbe
push
add
cmp
fwait
addl
aaa
pop
cmp
lods
mov
push
jl
out
push
inc
and
ficoml
shlb
mov
negl
cmp
mov
pushl
rol
rol
jmp
pusha
pushf
lea
call
pusha
adc
pushf
pusha
call
repz
push
call
dec
sub
cwtl
shr
jmp
fs
call
cmc
sub
push
pusha
call
cmc
clc
cmc
sub
bt
stc
cmp
pushf
lea
jae
pusha
push
lea
jmp
lea
ja
push
pushf
stos
pusha
lea
jmp
repnz
adc
cmpsb
inc
xchg
push
inc
cmpsb
xchg
adc
repnz
jns
cmp
popa
mov
ja
push
test
btr
cmp
add
sbb
icebp
outsb
loop
call
test
inc
in
in
jg
xchg
nop
int
add
inc
mov
aad
pop
dec
mov
push
in
out
unpckhps
or
fs
mov
cwtl
mov
je
and
xor
mov
ds
and
jae
loope
or
adc
out
push
adc
push
testl
pop
dec
add
movl
and
je
test
bt
clc
sub
cmc
pushf
pushf
mov
mov
shl
dec
adc
mov
bt
test
pusha
cmc
cmp
mov
lea
ja
adc
add
bsf
push
clc
shr
rcl
add
rcl
btc
mov
pushf
bts
add
rol
bswap
sub
mov
bt
pusha
cmpsb
call
lea
pop
movsbw
movw
pop
mov
pushf
movb
lea
call
jmp
bswap
not
movsbw
mov
lea
lea
pushf
movb
call
push
lea
jne
mov
push
mov
movb
movb
pushf
popl
stc
bt
stc
or
push
pusha
pushf
lea
jne
clc
stc
push
pushl
popf
pusha
lea
jmp
add
push
gs
gs
inc
outsl
insb
outsl
jb
lea
je
and
call
lods
leave
mov
loop
fsubl
clc
mov
mov
les
xchg
add
cmpsl
vpunpckhbw
jns
xchg
adc
push
fildll
xchg
pop
lcall
sahf
lock
mov
sahf
mov
fidivrs
sub
popf
sbb
stc
inc
outsl
mov
mov
and
test
xchg
push
arpl
inc
ss
ficoms
pop
push
mov
lock
pushf
add
jg
icebp
mov
or
test
sub
and
andb
dec
ss
xlat
in
sbb
mov
scas
inc
ljmp
data16
mov
test
add
jnp
push
test
andl
jl
sbb
mov
repnz
mov
adcl
xchg
push
lcall
or
hlt
nop
fld
xor
cwtl
push
lods
push
inc
mov
stc
mov
fnstenv
add
dec
cmp
adc
adc
add
outsb
sarb
xor
jns
pop
cli
mov
clc
mov
push
ror
jno
mov
pop
fbld
xchg
imul
fwait
das
adc
mov
mov
stos
hlt
insb
inc
loope
imul
sti
dec
fldenv
push
adc
xor
cmpl
xor
mov
xor
incl
ja
jns
scas
jl
cli
dec
mov
mov
loope
jns
aas
sbb
pushf
test
movsl
ss
push
xor
mov
fcoms
dec
lahf
sub
xchg
mov
icebp
or
pushf
stos
mov
adcl
stos
inc
call
stos
imul
mov
out
js
dec
jno
push
xor
mov
xchg
xchg
out
int
outsb
cmp
jmp
jmp
or
sub
int3
fbld
and
sbb
mov
xor
push
pop
andl
ss
insb
loop
pushl
push
pushl
popl
movb
pushl
ret
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
jmp
push
call
dec
popa
xor
jp
jb
bnd
sub
xchg
int3
stos
push
mov
lea
loopne,pn
cmc
outsb
fsts
loope
and
adc
cmp
mov
jl
and
sbb
mov
ficomps
cmpsb
das
adc
push
cmp
or
pushf
call
shl
int3
dec
and
jle
inc
mov
jmp
out
sbb
mov
lret
popf
popf
lcall
outsl
insb
aaa
inc
xchg
mov
jmp
lods
xchg
daa
mov
add
aad
mov
and
fbld
and
push
sbb
in
ljmp
nop
xchg
add
insl
imul
outsl
arpl
jae
cwtl
lea
not
lea
mov
push
pusha
jmp
insl
scas
imul
pop
iret
arpl
xlat
dec
mov
stos
lcall
clc
mov
hlt
push
sbbb
dec
xchg
adcl
xchg
sbb
pop
dec
mov
es
stos
fs
sub
movsl
pop
mov
sub
inc
fcmovnb
mov
push
pushl
movb
lea
call
push
movb
jmp
and
or
mov
dec
or
cwtl
out
aam
aam
xor
lods
xlat
push
aam
xor
lret
inc
pop
jae
andl
jb
mov
mov
xor
inc
jmp
pop
scas
loope
ror
jl
dec
stc
call
cmp
pushf
jmp
mov
mov
jmp
push
call
and
int3
inc
mov
out
xor
mov
ja
pop
ja
cmpsl
cmp
mov
sahf
enter
imul
mov
add
adc
fldl
inc
inc
add
aam
mov
pop
ljmp
sbb
push
aam
out
lcall
dec
inc
jb
out
jle
pop
add
pop
loop
sbb
punpcklbw
sbb
addr16
push
mov
ss
or
stos
jae
dec
dec
lods
mov
ret
movsl
cmp
stc
test
cmp
pusha
lea
jb
pushf
call
push
lea
lea
not
movzwl
movsbw
mov
bswap
bswap
lea
bswap
mov
mov
push
pusha
lea
call
pushf
push
pusha
lea
jne
not
not
mov
push
pusha
movl
pusha
lea
jmp
mov
inc
lea
pusha
pushf
lea
call
push
pusha
pusha
adc
push
lea
call
push
push
call
add
testl
loop
dec
fmuls
inc
loopne
imull
les
mov
mov
cmpsb
leave
and
das
mov
lods
imul
fisttpl
aad
add
cmpsl
mov
mov
mov
bswap
bswap
setg
not
mov
jmp
push
call
xor
mov
mov
insb
dec
mov
sbb
pop
imul
icebp
jge
xor
sbb
ret
hlt
mov
mov
ljmp
pop
gs
pop
cmp
lret
jb,pn
and
sub
jle
and
push
stos
mov
mov
arpl
cs
fstpt
xor
hlt
sub
or
push
lds
insb
xor
addr16
ss
inc
pop
fwait
pusha
pushl
popf
pusha
push
pushf
mov
lea
jmp
movb
jmp
jmp
call
jmp
lea
jne
call
pusha
stc
jmp
cmp
call
push
pushl
lea
je
pushf
add
cmc
pushf
cmp
pusha
lea
jb
cmp
bt
call
lea
call
jmp
movb
lea
jne
sbb
btc
not
sar
mov
push
cmp
cmp
add
pushf
movzwl
pushf
lea
mov
call
or
pushf
push
jmp
lea
jg
pusha
mov
pushf
mov
call
adc
loop
mulb
mov
inc
cmpsl
lds
stos
in
and
dec
inc
cmp
cli
jnp
imul
inc
popf
sbb
aaa
pop
lahf
xchg
aam
testl
adc
ss
sbb
mov
pop
popa
mov
dec
clc
out
test
sub
testb
testl
mov
imul
jbe
jo
sarb
jne
stos
andb
mov
jmp
xor
pop
lock
jnp
fistpll
pop
sbb
xor
rcl
add
rolb
add
fdivr
xor
pushf
movb
neg
pusha
pusha
cmp
mov
sub
stc
pushf
shr
jmp
push
call
popf
pop
cmp
imul
add
or
pusha
push
call
mov
pushf
pushl
pusha
sete
lea
pushf
movl
movw
lea
jg
push
pushf
pushl
ret
call
jmp
jmp
push
call
jnp
mov
push
inc
push
xor
cs
insb
add
add
jae
popa
addr16
outsl
js
add
lahf
pushl
pusha
jmp
lea
call
movw
cmp
movb
jmp
xor
push
xchg
push
mov
mov
push
pop
mov
mov
sahf
mov
dec
repz
xchg
xchg
jnp
outsb
sbb
sbb
push
xlat
arpl
lock
and
and
push
icebp
pop
daa
ss
popa
out
inc
mov
pop
cmc
and
mov
cs
out
aaa
inc
in
pushf
sbb
lret
pop
dec
push
pop
rorb
jbe
imul
pop
cmp
ror
add
iret
bound
jp
xor
xlat
leave
adc
add
push
icebp
xchg
fildll
mov
rcl
mov
rorb
shr
sub
add
test
add
lea
shl
aas
bsf
xor
xor
rcl
sets
adc
mov
pusha
setnp
call
pushf
movl
pushf
movb
pushl
popl
mov
pusha
pushl
ret
movzwl
pop
pushl
jmp
push
pushf
movb
pushl
popl
push
pushf
pushl
ret
or
aas
mov
pushf
pushl
shl
call
jmp
movb
cwtl
pushf
mov
mov
movzbw
pop
lea
jmp
pushf
lea
jne
jmp
outsb
ljmp
mov
stos
mov
fidivrs
out
jle
sarb
add
dec
xchg
pop
scas
sbb
scas
mov
add
pop
jl
mov
lahf
or
and
inc
stos
divl
cli
mov
xchg
dec
adc
ss
in
femms
ja
into
jge
scas
sti
das
xchg
xor
jecxz
and
arpl
scas
aas
loop
into
cmp
cmp
fmul
jbe
enter
lahf
sbb
cld
sub
lea
rcll
dec
repnz
cwtl
sbb
daa
int3
bnd
js
or
insl
jae
pusha
leave
xor
dec
mov
push
cmpb
and
cmp
stc
lret
stos
xorb
sahf
in
mov
add
dec
and
push
xor
cmp
jl
or
sti
jb
cmp
pop
fbstp
mov
test
push
ss
ljmp
jae
bound
push
dec
imul
popa
insb
insb
jae
mov
cmpsb
sbb
es
repnz
cmp
inc
rorl
faddl
dec
jno
movsl
add
jecxz
and
imul
repnz
jle
sbb
mov
movsb
stos
fidivl
popa
stos
in
push
lods
and
and
outsb
and
xor
movsl
dec
rorl
or
mov
imul
xchg
std
pusha
out
mov
cwtl
sub
xlat
jl
or
rcl
mov
and
ja
pusha
neg
mov
pusha
sub
setne
shrd
jmp
inc
inc
dec
xor
cs
insb
add
ds
cmp
pushf
pushl
pushf
pusha
lea
ja
pushf
sets
call
push
call
cs
les
add
push
insb
jae
gs
popa
insb
jne
add
adc
add
jns
stc
mov
hlt
in
test
mov
arpl
add
add
test
mov
pop
xlat
roll
inc
arpl
lahf
stos
jne
adc
mov
sub
dec
mov
mov
es
sahf
sbb
fdivl
aam
scas
movl
xchg
push
xchg
pusha
xor
mov
fwait
imulb
mov
jae
movl
test
inc
cli
cmpsl
sub
ss
pop
pop
nop
jno
xchg
pop
pop
cmp
mov
mov
test
rclb
xchg
scas
sbb
inc
xchg
or
or
adc
lahf
adc
pop
iret
inc
add
add
cmp
sbb
lcall
rclb
ss
test
cli
or
rcl
push
pop
lret
iret
test
and
repnz
jns
rcll
ret
jmp
in
pop
cld
cs
movsl
jnp
inc
adc
scas
cmp
jae
and
jge
cwtl
scas
pop
cld
jo
hlt
hlt
cs
sbb
pop
jne
aad
cmp
cwtl
nop
push
or
das
das
les
xchg
enter
sarb
adc
inc
aaa
push
pop
dec
addr16
test
mov
sbb
loop
pushf
lock
fstpt
add
xor
xchg
xor
sbb
pop
mov
out
mov
rolb
xchg
rcrl
dec
leave
push
sub
mov
cltd
rcr
xchg
loope
test
pop
push
mov
fldl
imul
outsl
dec
jne
je
inc
jns
add
out
adc
pop
push
mul
pop
push
scas
dec
mov
sarb
lcall
nop
xchg
cli
dec
es
xchg
push
push
sarl
mov
push
imul
jne
and
ret
and
xor
or
pop
icebp
mov
jmp
mov
xchg
and
mov
popa
aas
cld
add
mov
mov
jbe
daa
add
or
icebp
inc
xchg
repnz
jge
push
loopne
and
nop
mov
mov
and
std
mov
add
sub
es
in
push
mov
jno
pop
xor
pop
stos
cmp
stc
inc
pop
mov
push
aam
out
sbb
jp
call
fadd
insl
aaa
test
call
jmp
and
aam
inc
in
je
ret
dec
aad
sub
mov
and
mov
out
xlat
dec
jg
test
out
xchg
xor
add
jmp
pop
clc
mov
sub
in
repnz
xchg
pop
push
mov
int
mov
sub
push
fisubs
sbb
xor
imulb
fcmovnb
jg
addb
dec
call
insl
cmpb
inc
sub
ds
nop
mov
mov
xor
push
test
ljmp
cmc
mov
mov
int
testb
ret
mov
push
clc
ljmp
repz
add
mov
push
pushf
stc
call
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
xor
lea
jmp
lea
jb
call
push
lret
lds
add
push
add
push
add
adc
add
push
add
push
add
mov
add
add
add
add
add
mov
add
lret
push
add
ds
add
lret
push
add
xchg
or
mov
lret
push
add
lds
add
mov
add
lret
push
add
push
pop
add
mov
add
int3
push
add
adc
add
mov
add
add
je
jae
outsb
arpl
jns
je
je
add
pop
jns
add
pushf
pushf
shr
call
pusha
pushf
call
bsf
adc
lea
shl
mov
pusha
jmp
push
jmp
pushf
push
movl
pushf
call
dec
pusha
inc
jmp
add
inc
gs
gs
imul
push
pushl
inc
lea
not
setl
inc
inc
inc
xchg
push
aad
lahf
shld
mov
add
or
rol
test
mov
lea
cmp
push
rcr
call
add
push
je
push
outsb
ja
outsb
add
xlat
call
mov
rcrb
shl
mov
ret
cmp
lret
jbe
out
inc
and
and
jnp
notb
in
fstl
add
push
xorl
jne
lahf
mov
test
lcall
shlb
and
jnp
xchg
call
fwait
sub
loopne
push
mov
xchg
sub
std
lcall
add
add
pushf
mov
bswap
call
lea
jne
stc
popf
pusha
lea
jmp
add
push
insb
gs
push
cmc
add
call
shr
cmc
cmp
cmp
mov
clc
push
cmp
pushf
lea
jb
cmp
cmp
pusha
call
inc
mov
pop
mov
mov
push
out
ljmp
xor
inc
cmp
cli
mov
inc
jne
aam
stc
call
iret
push
cwtl
xchg
cld
jns
sub
test
jle
mov
sbb
popf
lahf
lds
mov
push
dec
push
mov
pop
adc
adc
cmc
jg
fwait
xchg
add
jg
test
sub
enter
hlt
cltd
inc
add
fsubrs
push
aad
add
lea
pusha
mov
pushf
pushl
ret
pushf
call
test
pusha
push
cmpb
movb
lea
jne
ror
mov
cmp
stc
test
stc
add
pusha
pusha
cmc
add
js
movzwl
pusha
bt
shl
mov
bt
add
pushl
test
pushf
cmc
mov
movw
call
mov
stos
ficoml
mov
imul
xor
xchg
aas
ret
imul
push
push
out
push
mov
push
xor
push
sub
lret
out
cld
popa
sbb
lea
push
push
xchg
imul
jl
mov
das
cld
insl
push
jg
jmp
and
ss
mov
enter
movsbw
mov
movzbw
movzbw
pop
cwtl
lea
mov
jmp
add
push
gs
imul
outsl
jb
ja
and
inc
test
sbb
cli
mov
jge
sarl
cmp
push
mov
inc
jle
stos
mov
pop
fdivl
pop
lahf
jno
and
mov
lret
xchg
orl
dec
add
ja
sahf
inc
mov
daa
mov
bound
jp
cld
mov
ljmp
inc
pop
cmp
popa
into
outsl
xor
outsb
dec
enter
push
mov
pop
cs
xchg
ja
xor
cmpsb
dec
add
ss
adc
sbb
je
outsl
fs
gs
imul
add
push
in
add
in
adc
cmp
in
mov
mov
mov
clc
jae
jge
arpl
or
lcall
lds
ss
xchg
adc
in
aad
mulb
mov
testb
push
cmc
mov
or
stos
mov
cmp
mov
jg
mov
jge
fwait
xchg
fnsave
stos
sbb
jmp
inc
fildl
addr16
sti
sti
xchg
sbb
xchg
mov
jle
aam
cmp
andl
scas
fisubrl
sub
outsl
cmp
jg
xchg
xor
lahf
ss
push
add
test
jg
lods
sub
ljmp
pop
lret
dec
mov
dec
mov
or
pop
pop
out
xchg
insb
dec
loope
pop
scas
dec
fucomp
dec
test
imul
test
lret
insb
dec
loope
pop
lret
dec
mov
dec
mov
or
dec
push
dec
bound
insb
out
loope
pop
push
or
call
loope
pop
imul
dec
leave
insb
test
dec
dec
sub
lret
loope
pop
imul
stos
insb
lods
loope
pop
sub
scas
push
in
pop
scas
dec
or
dec
push
lret
pop
lret
dec
sub
mov
outsb
insb
dec
call
out
mov
mov
dec
pop
das
dec
pxor
insb
push
dec
or
mov
mov
dec
pop
sub
mov
hlt
xor
outsb
das
imul
in
popf
jmp
dec
test
mov
pop
arpl
hlt
mov
sbb
cmpsb
testl
lret
mov
adc
and
int3
sub
outsb
loop
push
mov
dec
mov
sbb
lods
sub
shll
dec
test
and
add
push
dec
test
addr16
sarl
sbb
push
dec
cmpl
imul
mov
stos
inc
stos
pop
add
sbb
cs
test
mov
ret
mov
shll
add
repz
sbb
data16
dec
add
ret
xchg
xor
sub
pop
inc
dec
outsb
dec
das
or
gs
jns
arpl
in
bound
sub
sub
imul
iret
push
bound
int
outsb
lahf
add
jb
pop
dec
jne
jbe
jae
dec
adc
popf
jecxz
jo
pop
cmp
faddl
das
sub
in
cmp
leave
mov
push
push
jmp
movsb
data16
popa
fwait
dec
in
scas
movsl
in
ljmp
sub
lds
outsb
mov
std
movsl
pop
and
mov
mov
lds
movsl
pop
jbe
lea
je
movsb
popf
or
sbb
outsb
mov
jmp
and
in
fstpl
dec
dec
in
fiaddl
push
mov
fucomi
leave
shrl
repz
and
ret
dec
stos
insb
or
jle
subl
enter
pop
mov
insb
pop
loope
movsb
cmp
repz
test
jno
lock
and
dec
push
loope
das
xor
orl
sbb
scas
mov
pop
cs
pop
mov
cmpsl
jl
or
mov
and
dec
push
pop
aam
push
sub
in
outsb
mov
fmul
pop
pop
mov
cmpsb
int
andb
ss
popf
pop
inc
mov
jmp
mov
movsl
cmc
outsb
sub
or
xchg
in
dec
dec
aad
or
insb
dec
loope
pop
or
mov
outsb
or
dec
dec
xor
dec
outsb
insb
cmp
pop
dec
pop
stos
sub
ljmp
insb
sbb
sub
push
dec
or
mov
aaa
push
outsl
in
xor
fidivs
es
insl
movsb
stos
dec
xor
inc
jno
mov
xor
push
xchg
xorb
in
inc
pop
lods
dec
shll
movsb
imul
stos
sub
mov
ror
movsl
sub
in
mov
lea
addr16
in
scas
dec
dec
insb
out
loope
pop
dec
dec
sub
mov
test
mov
imul
jmp
insb
sub
ljmp
sub
mov
mov
dec
pop
in
dec
dec
out
inc
push
movsl
mov
mov
pop
orl
popa
in
push
cmpsl
mov
mov
stc
lret
int3
leave
lods
in
dec
out
and
std
leave
fstl
mov
in
and
fs
pop
in
test
jge
fs
xchg
out
stos
int3
insb
lods
in
loope
pop
lea
mov
mov
sub
shrb
js
in
std
mov
pop
insb
sub
push
pop
or
dec
in
mov
jge
dec
dec
pop
xchg
pop
outsb
out
or
dec
sub
mov
mov
lret
or
out
stos
subb
stos
dec
xor
test
movsl
jo
add
push
sub
sub
sub
jne
in
fsubrs
sbb
inc
data16
ficoms
enter
adc
sbb
scas
pop
icebp
dec
add
mov
in
pop
mov
sbb
test
repnz
stc
loope
pop
xlat
dec
fisubrs
ret
mov
sub
sub
push
push
outsb
mov
or
mov
dec
into
fstpl
std
insl
sub
sub
cmpsl
adc
popa
mov
scas
sub
stos
xchg
imul
cs
inc
inc
test
and
stc
testl
shll
dec
mov
jae
and
mov
adc
das
mov
das
mov
shrl
or
shll
das
or
mov
push
xchg
cmp
jg
push
fisubs
dec
insl
data16
out
mov
dec
push
push
xchg
jno
imulb
fwait
sbb
add
loope
jns,pn
sub
push
cmc
mov
sub
cmpsl
insb
ret
jmp
pop
dec
jno
and
add
roll
xchg
xorb
cmp
sbb
into
jns
scas
popa
sub
hlt
jbe
out
xchg
sbb
cs
jae
add
jne
xor
sub
sub
icebp
sub
dec
test
dec
lods
pushw
xor
loop
popf
notl
jb
out
sub
dec
adc
data16
icebp
mov
push
xlat
mov
lock
out
scas
mov
dec
je
test
mov
mov
xor
aam
or
jbe
leave
xor
ja
pop
inc
push
arpl
in
nop
dec
sub
dec
cmp
add
out
das
rcll
jo
mov
aas
jae
leave
push
and
sarb
push
js
xor
jbe
in
xchg
sbb
cmp
jbe
or
adc
sub
mov
cmp
addb
dec
xor
cmpsb
and
jne
xor
out
inc
mov
or
jl
cs
add
push
adc
push
lretw
repnz
ss
inc
push
sbb
and
in
mov
or
mov
icebp
stos
call
punpckhdq
outsb
adc
jp
push
das
js
test
pop
jbe
and
hlt
pop
mov
or
mov
and
jb
sub
cmp
pop
add
pop
imul
in
dec
and
lods
mov
int3
mov
sarl
and
sub
aas
pop
inc
push
outsl
js
cmp
ja
sbb
loope
xor
mov
scas
mov
mov
leave
inc
in
cs
xor
jns
out
popf
xchg
jmp
cmc
jle
lods
shrb
sub
inc
pop
mov
pop
rcrb
mov
push
gs
and
mov
movsl
sub
push
outsb
nop
push
sahf
sub
iret
pop
add
push
daa
pop
sub
out
push
xlat
push
andl
in
andb
scas
push
push
inc
add
push
cmp
sub
cmpsl
sub
mov
push
jp
outsb
sub
in
xchg
mov
push
popa
mov
insb
mov
lret
sub
xor
sub
mov
pop
js
jp
mov
and
movsl
js
shl
pop
insl
sub
lar
cmc
aas
pop
xchg
dec
ds
and
dec
cmp
dec
and
dec
push
adc
mov
movsl
in
mov
data16
xchg
sbb
sahf
data16
push
xor
or
adc
int3
pop
test
sub
iret
loope
fdivp
push
out
sub
movsl
dec
in
dec
jle
mov
xlat
lea
in
pop
and
inc
pop
popa
out
jle
and
lret
push
sub
les
dec
dec
mov
jecxz
sub
and
cmp
in
or
outsb
lret
stos
mov
in
popl
test
lock
test
in
movsl
and
popf
orl
outsb
fadds
clc
mov
dec
lods
adc
lods
xor
lods
out
imulb
scas
sbb
xor
popa
jbe
mov
sarb
cmp
or
fsub
in
cmp
out
jle
jmp
pop
dec
add
mov
dec
lret
push
mov
lods
shrb
cmp
dec
nop
scas
cmp
stos
mov
lods
or
mov
mov
imul
mov
jecxz
cwtl
jns
out
cmp
add
iret
dec
lea
stc
in
ljmp
inc
dec
or
pop
aas
pop
cmp
pop
or
sub
dec
push
xor
pushf
or
cmp
ljmp
mov
push
or
repnz
insl
outsb
jp
mov
adc
pop
je
sbb
cmpsl
dec
jbe
and
mov
jg
pusha
filds
push
stos
icebp
pusha
nop
jo
jbe
jp
push
jns
cmp
sub
xchg
sbb
pop
fstpt
lret
insl
stc
inc
mov
movsb
je
loope
add
push
pop
sbb
inc
ret
push
cmp
sub
scas
icebp
dec
add
jmp
dec
sub
push
jbe
rcll
cmp
sti
lahf
outsb
or
sub
imul
jbe
and
mov
sub
cwtl
dec
jne
ljmp
ljmp
shrb
and
ljmp
cltd
sub
and
cmp
es
outsb
stos
outsb
inc
icebp
mov
in
inc
test
pop
cmp
dec
adc
pop
mov
jbe
sub
outsb
add
dec
loope
je
inc
pop
orl
adc
ljmp
scas
dec
aam
mov
repnz
or
mov
scas
cli
push
es
enter
lret
dec
sub
ljmp
imul
in
in
loop
push
mov
shrb
mov
rcrl
or
mov
ret
cmpsl
xchg
push
dec
mov
stos
in
lcall
scas
mov
imul
in
ljmp
and
push
cmp
mov
or
outsl
loop
scas
daa
ja
in
rorb
ljmp
sub
cmp
cli
fnsave
cmp
or
arpl
or
in
in
sub
ljmp
sbb
lret
and
repz
out
mov
decl
ljmp
cmp
faddl
lods
in
movsl
lea
in
mov
outsb
in
in
shll
pop
data16
sub
dec
in
jecxz
test
sbb
push
mov
mov
add
ljmp
ret
imul
mov
mov
cmp
out
xchg
test
push
fwait
sub
mov
in
mov
jmp
dec
push
fs
in
dec
mov
push
mov
test
out
inc
push
test
pusha
sbb
in
push
das
mov
jno
cvtpi2ps
test
imul
sub
jae
sub
pop
inc
mov
enter
fwait
jo
push
inc
pop
mov
dec
sub
and
or
xor
das
push
mov
outsl
daa
xchg
loopne
jp
popa
in
enter
adc
insl
stos
in
scas
sub
hlt
lods
in
mov
out
cld
scas
cmp
sub
pushw
add
sub
sbb
dec
dec
and
je
aam
mov
fsubrl
mov
mov
in
in
lods
xchg
pmulhw
cmp
xorl
add
lret
pop
aaa
iret
pop
out
les
sub
inc
fucomp
mov
ljmp
sub
inc
aam
pushf
scas
adc
or
hlt
pandn
into
cmp
xchg
dec
jne
out
cmp
jno
out
jge
sub
dec
outsb
xlat
pop
mov
dec
in
das
scas
push
mov
dec
mov
xchg
mov
mov
lods
out
in
lods
or
in
gs
sbb
push
sub
in
pop
add
mov
insb
push
test
cmp
cmp
or
mov
out
iret
fldcw
dec
lods
stc
and
sub
dec
dec
jmp
in
in
lods
add
fimull
sub
test
outsb
pop
push
jo
pop
mov
arpl
test
pop
add
mov
outsb
xchg
cmp
dec
lahf
gs
pusha
xchg
nop
test
sarb
adc
in
in
push
std
jmp
cmpsl
in
lods
pop
add
dec
aad
test
in
xchg
in
fisttpll
mov
aam
lock
ljmp
movsb
dec
mov
mov
sub
arpl
in
loop
dec
pop
jae
or
mov
sub
and
test
jnp
lea
sub
addl
in
pop
cmp
mov
push
outsb
mov
decb
stos
movsl
call
outsb
fsubp
xchg
mov
sub
in
pushw
in
data16
push
data16
xor
in
dec
jle
mov
test
mov
pop
aad
xchg
sub
add
dec
test
stos
dec
ftst
insb
outsb
dec
test
pusha
dec
imul
sub
cltd
or
pop
in
xchg
sub
sub
test
jmpw
sub
stos
lods
loop
aad
adcb
sub
je
lods
test
in
cmp
scas
mulb
inc
das
popa
stos
push
push
scas
xchg
ljmp
ljmp
negb
shrl
loope
adc
pop
or
outsb
clc
push
or
push
jle
pop
in
mov
test
adc
and
pop
ljmp
xchg
outsb
stc
push
dec
and
mov
sub
pusha
and
test
lcall
or
dec
or
pusha
pop
mov
dec
sbb
cltd
xor
lock
aaa
mov
aas
das
and
lods
iret
cmp
mov
outsb
and
mov
pop
dec
arpl
cmp
bound
out
jmp
testl
bswap
cmp
mov
inc
xor
fbld
out
cmp
dec
call
pop
aam
push
mov
sub
scas
dec
jae
jnp
scas
adc
outsb
sarl
pop
pop
je
cmpsl
pop
hlt
push
fwait
push
mov
jo
dec
sub
or
js
dec
sti
jmp
subb
bound
mov
lcall
pop
test
dec
pusha
sub
sub
jns
pusha
stos
sti
aad
sub
in
inc
mov
jo
pop
outsl
or
call
and
ljmp
sbb
jae
in
jmp
or
dec
sbb
call
or
outsb
repz
nop
mov
clc
dec
icebp
jmp
sub
dec
mov
cld
enter
cwtl
movsl
pop
push
xchg
fsubrs
test
pop
dec
mov
loopne
lods
fnstcw
in
mov
push
or
jp
scas
fwait
sub
shl
and
and
cmp
divb
pop
cwtl
pop
lcall
repnz
cmp
lods
out
jns
sub
jp
and
or
in
dec
adc
insl
dec
or
mov
dec
jbe
dec
pop
mov
mov
push
dec
xchg
push
insb
jl
lds
outsb
je
popa
bound
dec
pop
mov
in
or
jmp
xor
sbb
sub
pop
sub
stos
ljmp
out
push
fstpl
stos
or
jge
pop
sub
sub
sbb
ds
inc
in
and
fmull
xchg
popa
jbe
jmp
mov
pusha
sub
test
sub
pop
outsl
sub
outsb
loopne
xchg
fiaddl
jle
repnz
out
leave
in
sub
sbb
cmp
or
shrl
scas
xor
cmp
arpl
xchg
insb
dec
dec
sub
cmp
test
sbb
cltd
mov
outsl
frstpm(287
ljmp
cmp
inc
sub
pop
or
call
in
data16
in
xchg
sub
int
lods
cli
cwtl
mov
pop
addr16
dec
mov
in
push
in
pop
adc
imul
jb
and
dec
pop
je
jp
adc
dec
sti
or
filds
fldt
jo
scas
dec
pop
jg
dec
mov
scas
push
stos
cld
push
and
mov
push
in
dec
aaa
mov
pop
cmp
xor
mov
xchg
dec
sub
data16
xor
cmp
mov
ds
mov
inc
inc
out
cmp
cmp
stos
in
lret
sbb
lock
in
ljmp
insb
repnz
add
call
and
add
and
test
or
add
mov
test
loop
test
in
ljmp
jmp
scas
mov
jle
lods
pop
lret
sub
ret
sarl
jae
or
cli
push
in
mov
bound
lods
pop
lock
or
adc
lods
sub
stos
int3
in
out
and
popf
sub
fldlg2
dec
out
push
shl
iret
push
push
test
pop
outsb
ss
test
cmp
popf
mov
sub
aaa
loope
addr16
and
sub
scas
arpl
inc
test
or
scas
dec
sub
lret
mov
lods
in
in
sbb
push
fldcw
and
sub
jmp
call
mov
dec
push
jo
add
in
xor
or
pop
dec
repnz
ljmp
pop
dec
jne
ljmp
call
mov
mov
xor
stos
lea
inc
adc
ljmp
mov
in
insl
lods
insb
jo
or
scas
mov
xor
stos
mov
sbb
lods
outsb
sub
xchg
push
jle
mov
or
fwait
in
jbe
sub
leave
das
mov
adc
add
sub
daa
dec
mov
ljmp
dec
dec
or
jl
lods
ss
int
test
pop
jg
pop
imul
in
xchg
int
push
push
stc
aaa
dec
pop
in
pop
rolb
push
dec
fs
imul
lea
add
sub
out
loope
adc
push
lods
lcall
mov
fisubs
test
mov
adc
mov
xchg
icebp
push
adc
or
mov
scas
enter
sub
push
and
movsl
sub
loope
orb
pop
mov
or
hlt
in
sub
or
cld
in
adc
jmp
je
insl
iret
add
jae
lods
sbb
notl
cmp
insl
ljmp
dec
in
sub
dec
sub
or
lock
jae
enter
jbe
cltd
sub
mov
aas
sbb
sub
sub
int
dec
scas
jmp
jno
test
fldt
dec
andnps
test
subl
lods
pop
sub
lret
dec
pop
cmp
sub
test
pcmpeqw
or
xor
dec
adc
sub
ljmp
jmp
je
out
xor
sbb
ds
insl
je
mov
or
push
mov
pushf
shr
dec
icebp
das
xchg
je
dec
push
sub
data16
dec
in
ss
push
dec
lock
sahf
dec
fiaddl
loopne
lods
sub
les
push
movsl
sub
scas
jb
in
push
xor
out
sub
jno
lods
push
push
cmp
pop
inc
push
outsb
or
xor
dec
fiaddl
scas
sub
pop
hlt
int3
outsb
scas
popa
mov
xlat
movsb
jae
dec
sub
in
outsb
sub
inc
jl
movd
jl
iret
test
fwait
stos
leave
sub
outsl
xor
insl
fidivrs
in
and
mov
sub
jmp
cmp
adc
call
mov
inc
and
lea
pop
and
push
push
inc
mov
into
imul
ret
or
das
xor
and
cwtl
das
lods
sub
inc
cmp
sub
pusha
jbe
fisttps
push
jmp
jo
xor
int
into
fwait
lcall
call
jecxz
sub
jl
movsl
sub
in
pop
stos
mov
out
mov
dec
add
out
subb
pop
mov
cmp
sbb
mov
jmp
mov
add
or
ja
adcb
mov
pop
cmp
pop
push
pop
pop
fstl
aas
cmp
lret
fnstsw
arpl
sahf
popa
hlt
ljmpw
cs
pushl
popl
push
mov
pushl
ret
adc
lcall
cli
pop
dec
test
mov
cld
pop
pop
add
cli
divl
or
icebp
mov
mov
sbb
mov
cmp
xchg
cmp
jb
movsb
xor
adc
rcr
or
movsl
imulb
out
adc
ss
xor
inc
add
add
movw
pushf
call
cmc
jmp
push
lea
call
pusha
push
jmp
call
mov
lea
jmp
pusha
pushl
popf
pusha
pushf
pushf
mov
lea
jmp
lea
movzbw
mov
pushf
movzwl
movsbw
pusha
pop
bswap
lea
call
push
call
mov
or
test
add
lea
je
clc
neg
mov
rcr
add
bt
mov
clc
test
test
jmp
sub
inc
mov
add
add
add
add
push
inc
mov
add
dec
popf
dec
imul
add
jge
and
iret
inc
mov
add
add
adc
mov
add
add
iret
inc
mov
add
je
aaa
std
int3
sbb
mov
add
cmp
push
inc
mov
add
or
mov
mov
mov
mov
add
add
push
sub
or
add
or
mov
mov
add
add
xchg
cs
inc
mov
add
mov
inc
mov
add
add
dec
dec
jl
inc
mov
add
out
mov
and
inc
mov
add
inc
lcall
adc
dec
mov
mov
add
jb
shlb
xor
add
pop
shrl
mov
add
add
or
add
js
mov
incl
push
or
flds
mov
add
push
pop
mov
mov
ret
cwtl
aas
fdivrs
add
lds
aam
and
mov
add
lds
inc
sub
add
add
push
inc
mov
add
or
out
mov
iret
jge
repnz
and
inc
stos
je
inc
mov
add
dec
push
add
sbb
add
mov
inc
mov
in
push
daa
aaa
les
inc
and
add
insb
nop
or
add
rorb
imul
inc
mov
pop
fildll
xchg
int
mov
add
add
mov
mov
push
inc
mov
add
dec
pop
mull
cld
pop
pushf
pusha
lea
ja
jmp
lea
call
pushf
lea
jae
cmc
stc
call
stc
stc
or
pushf
pushl
mov
lea
jne
bswap
movsbl
bswap
mov
push
push
pushl
push
pushf
popl
mov
jmp
mov
lea
ja
call
cli
dec
leave
mov
push
roll
fsubr
stos
addr16
leave
cmc
enter
or
fcom
imul
clc
inc
repz
fidivrl
xchg
ds
scas
push
roll
mov
repz
movb
dec
je
push
jg
and
scas
mov
cltd
jecxz
mov
shll
sar
push
sbb
jae
out
xchg
pop
mov
adc
mov
jp
jl
mov
xor
mov
xchg
pop
xor
inc
iret
mov
pop
and
inc
aaa
mov
sar
jno
push
inc
mov
inc
add
not
shl
xchg
pop
cmc
mov
xor
test
or
stc
mov
push
test
jmp
jmp
add
inc
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
adc
aad
add
movsl
sbb
xchg
pop
xor
push
lcall
js
dec
xchg
jne
aaa
mov
or
jp
dec
mov
and
cmp
dec
in
lock
adc
pop
dec
adc
cmp
ss
and
aas
sbb
xlat
inc
xchg
insl
and
pop
or
jge
jge
popf
les
fcomps
mov
roll
push
test
sub
ret
call
icebp
dec
mov
mov
fcomps
lcall
dec
cmp
dec
mov
inc
imul
xchg
out
pop
add
ja
adc
or
pop
or
fisttpl
popa
and
mov
xor
inc
jmp
sbb
fists
pop
cmp
push
mov
push
ss
xchg
mov
push
fs
cmc
pushl
popf
push
pusha
mov
lea
jmp
repnz
jmp
sub
sete
lea
bswap
pop
pusha
pushf
mov
lea
bswap
xchg
mov
setae
mov
not
xchg
mov
pop
mov
movzbl
xchg
call
pusha
loope
add
shrl
mov
hlt
loopne
or
dec
mov
nop
jg
sub
les
xor
mov
mov
insl
fdivs
and
testb
aam
pop
rorb
scas
jge
testl
adc
ficompl
test
mov
pop
pop
addb
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
scas
jmp
call
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
pushl
jmp
mov
dec
xchg
push
sub
push
ds
push
ljmp
xor
dec
sub
jno
call
nop
pop
xchg
ljmp
dec
in
or
subl
movsb
icebp
push
mov
push
xchg
mov
adc
lret
push
mov
xchg
pop
fnsave
ss
cli
jo
lea
je
push
add
pushf
bt
call
pushl
pushf
pushl
ret
bswap
lea
not
mov
mov
pop
lea
movzbw
pushf
mov
call
cmp
sub
movb
bt
pushl
popl
call
lods
out
aas
add
xchg
adc
pop
scas
fidivrl
mov
and
in
test
clc
in
xlat
aam
or
jns
dec
pop
add
sbb
and
fwait
cmp
fisttpl
inc
test
ss
jge
jnp
test
and
popf
pusha
mov
pushf
lea
jmp
pusha
lea
jne
mov
lea
mov
pushf
pushf
popl
bt
pusha
pushf
clc
or
pusha
movb
call
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
lock
xor
pop
cmc
mov
add
pop
or
sbb
xor
stc
push
mov
mov
imul
rorb
fsubrp
aaa
je
mov
lahf
repz
cmp
cmp
jp
add
dec
push
adc
pop
cltd
sub
fdivs
ret
pusha
sub
sbb
xchg
cwtl
push
push
insb
xor
push
fists
pusha
sub
inc
js
and
scas
cltd
rolb
or
xchg
mov
movsb
rolb
je
or
test
pushf
shl
pushf
mov
mov
lods
pushl
pushf
bt
rol
bt
neg
bt
pushf
clc
cmp
xor
bt
neg
call
lea
je
adc
mov
add
dec
btc
and
mov
mov
jmp
subl
cltd
add
lcall
or
sub
sub
scas
data16
dec
hlt
mov
aad
loop
xchg
push
cld
jmp
aad
movsb
push
inc
sub
ja
xchg
and
notb
push
and
push
adc
mov
add
sbb
push
xor
sbb
shrb
jl
mov
fstpt
cmp
cwtl
gs
fwait
cld
mov
aas
pop
and
push
cwtl
dec
push
sbb
xor
sub
mov
lret
dec
scas
rolb
add
imul
xor
pop
sbb
xor
adc
data16
call
xor
out
stc
loopne
push
mov
push
push
add
push
into
push
bound
mov
adc
mov
pusha
popl
lahf
enter
popa
es
mov
mov
or
out
cwtl
dec
xchg
mov
lahf
dec
nop
jle
pushf
mov
dec
fbstp
rolb
mov
ds
divl
sbb
push
cwtl
dec
jnp
lods
mov
or
or
jne
adcl
test
mov
lret
movsl
mov
mov
mov
push
mov
movsb
jmp
jb
psubw
dec
jb
sub
roll
sub
fsubrs
iret
dec
rolb
add
je
inc
push
add
pop
aam
repz
incl
mov
mov
outsb
fdivs
mov
dec
push
adc
test
sbb
xor
test
add
sahf
jne
adc
sarl
cmp
gs
arpl
xchg
loopne
in
in
ss
push
mov
nop
mov
insb
mov
pusha
shrb
ret
dec
bnd
pusha
mov
outsb
or
out
dec
mov
outsl
xor
adc
iret
push
adc
xchg
jne
and
jnp
sti
mov
xlat
jp
xchg
rolb
sbb
xchg
mov
push
sbb
cld
movsb
xchg
addr16
test
pop
fcompl
negl
inc
pop
mov
lret
lret
mov
test
sub
rclb
popa
push
xchg
jle
inc
mov
test
xchg
fildll
fadd
lret
pop
aaa
rcll
xor
out
mov
inc
std
ror
pop
mov
mov
lods
lea
xor
push
and
jns
ret
inc
rolb
inc
push
scas
add
or
fs
je
cmc
clc
add
test
test
pusha
cmp
lea
jbe
push
lea
jb
clc
cmc
pusha
cmp
push
push
movb
lea
jae
not
mov
rcl
not
test
mov
mov
shrd
mov
test
test
sub
test
cmp
repnz
jmp
xor
mov
sub
xchg
nop
or
inc
mov
cmp
insb
pop
jle
sbb
fstpt
rolb
movnti
es
jmp
xor
adc
mov
and
mov
adc
and
mov
and
fsubr
pop
mov
sbb
int3
stos
ss
mov
ror
sub
popa
popa
mov
jecxz
daa
push
test
jb
les
mov
rolb
jno
xchg
pop
push
in
cmp
mov
fdivrs
cld
push
in
pop
or
sbb
push
xchg
clc
jns
mov
mov
xchg
sub
repnz
push
cmpsl
xchg
sub
rolb
shld
shl
add
btc
and
movzbw
mov
cmc
jmp
push
call
pushw
imul
push
call
outsl
cmpl
into
movsl
xchg
movb
or
call
pushf
lea
jae
lea
mov
bsr
shl
setge
inc
mov
rcr
bts
mov
clc
jmp
mov
mov
inc
jmp
push
mov
add
dec
enter
pop
ss
jb
sbbb
jp
decb
stos
xlat
push
addl
js
loop
outsb
cmp
mov
call
mov
and
jnp
movsl
fcompl
fmull
loope
inc
outsl
leave
icebp
mov
mov
push
and
xor
cmp
jae
mov
lret
mov
loop
rolb
cmp
out
das
fs
xor
xchg
nop
and
mov
jp
xlat
add
mov
and
jbe
fwait
jns
add
fldcw
and
push
pop
add
cmpsb
lds
fwait
insl
cld
lea
xor
iret
dec
testb
mov
dec
mul
inc
sub
das
sub
xor
in
cmp
imul
subl
dec
jb
jbe
xor
outsb
xlat
dec
inc
cmp
stos
int
inc
add
addl
mov
push
int
jbe
ss
ja
je
push
mov
notb
shlb
loopne
mov
icebp
sub
adc
jg
jnp
stc
mov
imul
inc
int3
jge
add
add
popf
sti
cmpsl
sub
cltd
out
and
xchg
sub
mov
add
mulb
push
mov
mov
fisubrl
dec
fwait
test
gs
sub
mov
inc
loop
test
pop
mov
mov
fisubrl
imul
xlat
mov
xorb
jp
jb
and
fmull
out
test
je
inc
dec
push
scas
icebp
rolb
and
add
pusha
pushl
pushf
pushf
dec
lea
jno
push
push
lea
jne
push
lea
jmp
push
call
mov
sbb
pusha
mov
push
pushl
ret
push
call
sbb
sbbl
pushf
pushl
pushf
lea
jmp
push
call
ret
movl
lea
jmp
pushf
lea
lea
bswap
mov
lea
pusha
mov
pusha
call
movb
lea
je
pushf
pusha
jmp
push
call
push
aaa
add
push
gs
jo
outsb
dec
gs
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
test
add
push
pusha
mov
pusha
push
lea
jmp
push
mov
out
imul
stc
lds
in
shll
sub
fcomps
dec
addr16
in
mov
divb
dec
clc
lahf
mov
sbb
jo
lods
push
sub
nop
pusha
xchg
push
addr16
stc
xlat
jl
mov
sahf
js
sbb
add
ljmp
in
in
lock
popa
dec
pop
xchg
push
shrl
xchg
fnsave
pop
cmc
js
loop
sbb
pop
repz
ficoms
pop
mov
xor
mov
std
pop
push
mov
dec
sarl
rorb
imul
pop
add
pop
jg
sti
clc
mov
jle
mov
fdivrl
cmp
jge
jo
pop
decl
push
sub
cmpsb
orl
or
sbb
aad
jg
je
mov
aad
xor
lods
push
shll
loopne
mov
dec
mov
pop
icebp
xchg
xor
add
adc
jns
jg
loope
inc
rorb
lcall
test
rcl
sar
mov
pusha
jmp
sub
call
call
stc
cmp
bt
push
add
pusha
mov
pushf
push
lea
je
cmc
cmc
clc
add
pusha
pushl
pushf
lea
jmp
add
inc
gs
jns
je
insl
dec
gs
imul
and
jno
push
setno
setp
mov
jmp
pusha
mov
lea
sub
mov
bt
clc
clc
sub
pushf
pushf
jmp
pushf
lea
movzbl
movzwl
pop
lea
pusha
movzbw
movsbw
movzbl
mov
pushl
jmp
clc
jge
lods
sbb
fsubrs
pop
adc
data16
push
out
dec
xor
lret
mov
out
xor
lock
mov
imul
mov
ret
sub
sub
dec
or
add
mov
into
popa
rorb
mov
orl
xor
adc
rolb
ret
xor
push
repnz
or
sub
out
aas
and
pop
mov
jbe
pusha
fimull
pop
inc
je
pop
aad
or
pop
mov
xchg
outsb
cmp
jo
shlb
jmp
xlat
mov
mov
int
rorb
inc
and
add
add
mov
mov
call
pop
lods
adc
nop
push
in
mov
sarb
mov
lea
mov
fnstenv
in
in
inc
inc
cs
leave
pop
sub
pop
movsl
jle
mov
roll
rorb
call
mov
lahf
cmp
pop
or
and
insb
cmp
xlat
cmp
sbb
and
leave
loope
int
loopne
out
lods
push
fnsave
imul
fwait
mov
rorb
jnp
roll
dec
leave
rcr
out
into
outsb
xchg
std
xor
sub
or
inc
lods
add
push
dec
dec
lods
outsb
and
mov
loopne
rorb
cmc
cmp
or
jmp
jmp
pusha
pushl
pushf
mov
pop
mov
movl
pusha
lea
push
bswap
lea
push
call
lea
je
push
pushl
pushl
mov
lea
jmp
movzbw
seta
mov
not
lea
pusha
movl
push
pushl
popl
pushf
pushf
pushl
ret
xchg
jmp
xlat
cmpsb
repnz
push
cli
jne
jbe
icebp
dec
lods
cmp
aad
je
aam
lock
lock
mov
inc
sarb
jle
idiv
pop
shlb
rcll
and
insl
or
aas
int3
and
stc
mov
lret
dec
loop
sbb
xorb
mov
xchg
cmp
push
movsl
add
je
movsl
loope
jp
inc
mov
jmp
push
call
dec
sahf
repz
mov
pop
push
dec
mov
repz
fwait
pop
or
lret
fidivrl
cwtl
sar
jmp
popf
fisttps
in
push
push
lahf
sbb
sti
jecxz
test
jb
test
push
push
cs
loopne
ljmp
js
sbb
xor
pusha
stc
lret
mov
rorb
lods
xor
xchg
pop
jle
rclb
cmpsl
aaa
repz
add
js
and
js
mov
push
inc
fidivrs
mov
push
add
stc
adc
outsb
dec
clc
or
xor
inc
lret
pop
sub
rorl
inc
inc
dec
repz
mov
ret
mov
daa
js
rorb
fs
jne
cmp
pusha
movb
mov
sub
movb
lea
jmp
xor
int3
mov
sbb
int3
push
jmp
leave
test
test
and
push
ret
out
inc
push
je
das
repnz
cmc
sti
jl
out
sub
jl
cmpsb
sbb
rorb
ss
decl
xchg
jmp
mov
call
push
call
xchg
popa
btc
bswap
bsf
mov
clc
clc
pusha
shl
pusha
lea
je
call
jbe
adc
jp
hlt
loop
mov
sub
iret
aas
ds
sub
fstps
push
int
inc
test
dec
ljmp
mov
adc
or
fists
pop
call
fsubs
test
push
xor
ficoms
inc
pop
mov
rorb
popf
pushf
lea
jmp
lea
call
push
jmp
cmpsb
or
push
cmpsl
jnp
pop
jnp
lcall
cli
data16
loope
sub
lahf
lcall
xchg
call
cmpb
iret
mov
push
out
pop
mov
inc
pop
jmp
or
cmp
pushf
inc
mov
aad
xchg
mov
dec
sti
or
stos
sbb
sbb
enter
into
imul
outsb
inc
enter
hlt
repz
mov
add
and
aas
cmc
xchg
fcoms
sub
fsts
mov
ffree
daa
aam
sbb
xor
and
call
pusha
adc
mov
lea
jae
jmp
pusha
lea
je
call
push
call
jecxz
cmpsb
pushl
popl
pushf
push
mov
pushl
pushl
ret
xchg
loope
adc
pop
dec
xchg
daa
cmp
outsl
aaa
test
jmp
data16
test
lahf
inc
repz
jnp
js
test
mov
dec
or
fdivrs
imul
stc
sbb
lcall
jnp
push
aaa
das
dec
popa
sbb
fdivr
cmc
ret
lret
lret
popf
push
dec
push
lahf
sahf
lods
mov
add
lret
push
and
and
cmp
cmp
and
stos
dec
fsubrs
push
and
dec
arpl
inc
xchg
push
stos
adcl
mov
rclb
popf
stc
xchg
pop
sbb
mov
inc
or
mov
xchg
push
stos
sbb
mov
sti
lea
xchg
stc
movsl
jne
xchg
cmpsl
mov
pop
cli
mov
dec
out
das
lret
cwtl
icebp
pusha
negl
xchg
ficompl
decb
das
pop
mov
enter
inc
test
in
inc
or
mov
test
lds
push
push
adc
bound
mov
rclb
jo
lahf
push
imul
xor
movl
das
jo
mov
pop
push
test
incb
shlb
repnz
bound
fisubl
inc
xor
jae
cwtl
mov
jb
loopne
jnp
insb
out
test
jb
add
test
push
push
and
cmpsl
jo
xorb
cld
jp
out
loope
fadds
jbe
inc
rol
xchg
mov
xorb
rclb
add
je
popa
jae
inc
jb
outsl
jb
sub
mov
movsl
sbb
mov
not
divl
aas
xchg
jg
mov
mov
testb
sub
pusha
enter
sbbb
mov
or
rclb
mov
xchg
push
dec
pop
cmpsl
dec
in
test
mov
sbbb
aas
les
icebp
sub
xchg
and
adc
sbb
movsl
jl
out
sub
mov
insl
cmp
bnd
sub
scas
shrl
fistl
dec
or
jg
aam
aaa
sub
incb
jl
in
rclb
clc
pusha
push
pushl
popf
pushl
mov
pushf
mov
lea
jmp
sub
mov
sete
stos
call
push
call
fldt
mov
add
popa
fs
imul
aam
sbb
or
movzbl
push
add
mov
ror
btr
sub
aaa
movsbw
test
aaa
push
and
push
bsf
das
xor
call
push
call
aad
insw
dec
movl
pusha
pushf
pushf
push
pushl
popl
movw
pushl
pushl
ret
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
orl
jmp
jno
addb
xchg
pop
insb
jb
xchg
ret
dec
mov
das
fildll
push
pop
pop
enter
repnz
imul
inc
movsl
adc
addr16
enter
addb
jge
fwait
outsb
int
in
inc
cmc
or
or
add
jno
popa
mov
shl
jecxz
pop
mov
pusha
sub
xor
pushf
pop
rclb
fs
jae
clc
xor
push
pusha
lea
call
call
lea
ja
call
mov
pushf
lea
jne
mov
call
push
call
jns
leave
dec
xchg
or
pusha
push
lea
jne
mov
pusha
mov
movb
pusha
mov
push
pushf
popl
bt
call
insb
shll
jecxz
les
mov
in
adc
test
mov
aad
push
fs
mov
pop
jnp
or
mov
not
dec
into
pop
sbb
jp
cwtl
mov
xor
fisubrs
or
sbb
xchg
dec
add
cmp
xchg
xor
nop
stc
outsl
xor
push
call
push
call
adc
lret
lds
mov
bt
add
pusha
shr
pushf
pusha
xadd
mov
shld
not
pushl
add
stc
neg
mov
test
cmpsb
call
test
mov
push
call
push
call
fsubrl
push
mov
add
add
stc
push
or
movb
movw
call
call
pushf
pushl
popl
not
not
cwtl
mov
lea
cwtl
movl
not
not
bswap
lea
jmp
push
call
divb
lds
pusha
or
and
or
test
fnstsw
int
pop
mov
jmp
pop
and
lea
dec
testl
jae
dec
insl
xor
jne
in
sub
cwtl
lret
repnz
cmpsl
lods
les
sub
push
dec
repz
push
xchg
adc
aad
adc
ja
movsl
pop
out
orb
cltd
inc
mov
inc
push
andb
dec
rclb
inc
push
cwtl
add
fs
pusha
push
lea
je
stc
sub
pushf
call
lods
in
dec
push
and
int
data16
cld
lods
cmp
dec
mov
loope
pop
test
pop
fldenv
stos
stos
data16
bound
in
aad
pop
movsl
dec
dec
mov
sbb
insb
or
test
cmp
movsl
mov
jmp
jmp
es
movsl
in
xor
dec
pop
insb
fsub
cmp
lret
dec
jnp
mov
sub
pop
pop
fisttps
push
sub
fisttpll
loope
xor
cmp
das
pop
mov
fisttpll
int3
insb
or
lcall
dec
fnstsw
dec
ljmp
jle
in
pop
sbb
fwait
sub
stc
insb
mov
or
dec
das
fisubs
pop
movsl
jge
cld
fwait
push
or
mov
pop
inc
jle
movsl
mov
in
push
dec
enter
sub
aas
pop
lods
stos
movsl
sub
addr16
push
mov
lods
cmpsb
popf
les
or
lods
lods
enter
icebp
scas
mov
or
addb
stc
addr16
out
sbb
test
cmp
mov
and
xor
inc
ds
push
sub
push
xor
lahf
aad
mov
sub
repz
das
int
sub
scas
xor
scas
pop
insl
test
sub
mov
pop
sti
dec
push
jmp
sbb
mov
insb
fwait
loope
pop
je
jl
mov
stos
insb
mov
mov
lret
mov
rep
jecxz
mov
mov
fs
lret
fmull
ret
orl
inc
sarl
mov
lret
xor
stos
out
and
popf
mov
int
ror
mov
arpl
add
mull
adc
int
lret
sti
mov
pop
add
subl
dec
gs
clc
cld
pop
fimull
xchg
pop
insb
inc
ret
sub
mov
nop
sbb
dec
std
lods
cltd
mov
jecxz
leave
xchg
dec
mov
and
pop
call
mov
jp
jo
push
mov
lret
push
pop
movsb
out
lods
shrl
mov
xor
push
in
jecxz
cmp
mov
int3
movsl
aam
jmp
mov
hlt
dec
cld
insb
add
test
inc
jecxz
mov
insb
cld
loope
pop
int3
dec
aam
mov
cli
dec
dec
lcall
arpl
roll
adc
lret
push
stos
pop
idivl
dec
int
mov
stos
sbb
int
dec
and
push
cld
and
or
push
fsub
in
imul
imul
rorb
repz
outsb
cmpsl
insb
cltd
xor
dec
dec
add
mov
xchg
mov
cmp
or
dec
mov
mov
lds
imul
movsb
insb
mov
int3
pop
lods
addb
adc
jge
shrl
gs
mov
dec
sub
sub
dec
push
jge
inc
mov
jle
push
push
movsl
arpl
mov
mov
fisttpl
mov
add
insl
push
push
nop
insb
arpl
aad
sub
je
or
test
mov
mov
sbb
xchg
push
das
popa
cmc
insb
dec
imul
mov
pop
fs
movsl
dec
insl
mov
cmp
lea
pop
jl
and
aas
pop
pop
lcall
aam
dec
pop
adc
outsl
dec
adcb
mov
or
dec
add
test
cmp
sub
rclb
test
cli
mov
cmp
dec
roll
push
test
or
pop
push
popa
je
jl
jecxz
dec
jl
lds
dec
fsubrl
mov
scas
add
push
in
push
and
dec
lods
jle
dec
fsubrl
lods
int3
sub
mov
insb
or
lods
sti
fsub
movsl
aam
int3
dec
add
in
dec
and
mov
outsl
pop
in
outsb
sub
dec
movsl
shrl
data16
fnsetpm(287
pop
pop
mov
sub
aad
inc
mov
imul
dec
ds
nop
pop
and
fcomip
imul
push
xchg
inc
mov
and
js
sbb
cwtl
mov
rcrb
stos
lea
sub
int3
outsb
bound
mov
xchg
mov
insl
dec
rol
in
mov
cmc
and
add
jmp
stos
sbb
shll
das
sti
subps
int
aas
test
insl
fldenv
jmp
adc
pop
pop
arpl
sub
pop
lea
pop
xchg
add
imul
push
shrb
fdivs
sub
cwtl
cmp
pushf
arpl
mov
popf
jp
cmc
stos
lods
inc
push
outsb
cmp
xlat
test
stos
fwait
shl
sahf
sub
fs
dec
stc
movsl
sub
test
shll
stos
sti
cld
lods
push
push
push
sbb
pop
repnz
stc
jns
fst
xchg
mov
and
add
mov
sub
jns
ds
jl
shr
jl
ficompl
popf
dec
punpckhbw
dec
mov
lea
xlat
mov
in
xor
mov
cwtl
addr16
fisubs
dec
jp
sub
mov
sbb
shrb
cs
pusha
sarl
xor
mov
mov
and
movsb
scas
loop
and
pushf
jae
lea
fisubrl
popf
pop
in
pop
dec
dec
test
imul
inc
and
movsl
popf
daa
insb
test
mov
int3
aam
insl
cmp
lods
or
in
dec
mov
dec
in
dec
sub
movsl
ljmp
cmp
mov
dec
insb
arpl
xor
xchg
cmpsb
ret
popa
xchg
push
pop
int
push
mov
mov
jbe
int
lds
lea
shr
mov
and
outsb
stos
sub
mov
in
lds
adc
cs
das
mov
pop
cmpsb
pop
sub
stos
loop
lods
in
sub
lret
add
xor
cmp
adc
lods
aam
popf
sbb
cmc
mov
lods
outsl
sub
ljmp
or
aas
popf
call
ss
xchg
jnp
leave
daa
add
stc
mov
loopne
jge
stos
in
fisubrl
ret
adcw
shll
insb
mov
mov
or
adc
xor
loope
xchg
jno
dec
call
in
pushf
fdivr
mov
push
add
mov
stos
outsb
ret
nop
xor
lea
xchg
data16
fists
shrl
xor
xchg
outsb
movsl
cs
xchg
lds
fst
int
std
cmc
in
and
inc
cmp
pop
push
dec
test
insl
movsb
cs
xchg
mov
mov
int3
add
cs
or
cmp
sub
cs
push
dec
test
mov
ret
mov
fcmovnbe
lret
add
repz
sbb
or
xor
sub
push
sub
jae
cli
movsl
lcall
mov
cs
repnz
cmp
pop
inc
pop
dec
adcl
cmp
pop
xchg
in
sub
or
shl
push
cmp
jle
sub
mov
movsl
mov
fdivrl
in
je
mov
fsubrl
cs
jbe
xor
aaa
in
push
in
bound
movsl
out
pop
pop
lds
out
pop
xor
outsb
bound
mov
movsl
push
ret
jnp
add
loop
jno
shrl
arpl
lods
out
ljmp
in
cli
push
mov
dec
in
aad
jb
mov
cld
add
lret
xor
mov
cmc
jle
push
fwait
add
rclb
pop
mov
xchg
pushf
or
dec
jmp
in
mov
xor
out
push
dec
jmp
push
xchg
bound
adc
out
aaa
mov
xchg
sub
ret
cs
enter
jns
xor
das
in
cmp
cmp
sub
data16
sarl
or
out
push
ret
sbb
shrl
sahf
sbb
jle
add
mov
adc
shll
mov
xchg
jp
popa
or
xor
mov
out
sub
mov
and
cs
shrb
cmp
adc
dec
jle
inc
xchg
aas
sub
cmp
lret
adc
fldcw
xor
mov
xchg
inc
test
nop
xchg
sarl
vcvtsi2sd
inc
movsl
test
pushf
mov
lods
lcall
mov
and
cs
adc
jnp
sub
int3
inc
xchg
stos
sub
xor
push
repnz
leave
aam
sub
outsb
xchg
sub
outsl
arpl
pop
or
sbb
rorb
outsb
movsb
jnp
sahf
sub
lods
and
or
mov
cs
inc
xor
inc
sub
fsubs
mov
xchg
das
cli
sub
add
test
jl
fdivl
pop
jg
lret
out
jbe
cli
in
dec
jb
test
lret
mov
jb
scas
xor
jae
mov
xor
icebp
pop
mov
sub
sub
mov
popa
adc
jge
out
push
shr
sub
inc
push
sub
fwait
xor
jmp
test
xor
repz
gs
xor
pop
xor
xor
fnstenv
fisubrl
xor
push
mov
es
cs
jb
xor
sub
dec
xor
sub
xchg
or
xor
xchg
or
jb
xor
sub
xchg
or
xor
xchg
aaa
cs
pop
xor
mov
push
push
xor
add
or
push
xor
nop
sub
lret
xor
ljmp
or
sub
sub
xor
sub
or
xor
mov
push
loope
out
xlat
or
xor
mov
inc
sub
sub
subb
push
sub
mov
mov
mov
mov
cmpsb
push
test
loope
fcmovnbe
sub
sub
sub
adc
cmpsb
add
test
sub
sub
adc
cmpsb
add
test
sub
sub
movsl
sub
stos
lret
in
bound
ljmp
pushf
xor
mov
cmp
push
adcl
push
das
push
push
xor
scas
mov
sub
leave
outsb
xchg
sub
push
gs
shrb
and
push
lods
sub
ss
xor
jmp
shrl
das
xor
pop
imul
mov
cmp
jns
jp
je
int
sub
sub
or
cs
jle
pop
jp
bound
lods
push
lods
into
pop
push
int
xchg
pop
sbbb
jge
xor
stos
jne
sub
insl
jne
in
dec
rep
jbe
xchg
into
push
shrb
ret
outsl
jbe
mov
ljmp
cs
push
call
jl
in
insl
outsb
pop
in
mov
push
mov
sub
fiaddl
mov
shl
sti
addr16
outsb
lret
or
mov
dec
mov
fs
jge
sub
cld
lods
aam
pusha
frstor
arpl
jbe
les
rol
dec
xor
ja
lret
inc
stos
inc
idivb
mov
mov
insl
fmuls
xor
sti
or
pop
add
fisttpll
add
or
mov
popf
stos
aas
movsl
ret
insb
pop
into
insl
fdivrl
and
call
daa
add
xchg
ret
mov
cmc
add
xchg
mov
sub
movsb
sub
and
push
push
insl
jnp
xchg
ret
push
outsl
fcompl
bound
adc
xor
cmpl
test
arpl
sbb
insl
dec
loope
cmpl
or
hlt
jae
shll
mov
cli
mov
sub
sub
addl
add
rorl
or
cwtl
out
aaa
sbb
frstor
insl
mov
leave
fisubl
imul
test
cld
sbb
in
dec
or
jmp
inc
out
pop
int3
sbbl
push
in
jns
lock
sbb
cmpl
fcmovne
jnp
sbb
imul
sub
dec
sub
dec
push
arpl
cmpl
push
pop
imul
mov
hlt
lock
sbb
pop
cmp
sub
js
popf
repz
in
lcall
stos
add
aad
mov
and
mov
leave
int3
sub
xor
sti
ret
mov
fdivs
inc
fstl
sub
and
out
and
stos
sub
mov
gs
outsl
fisttpl
fwait
pop
mov
sbb
dec
hlt
or
add
fisttpl
test
test
pop
shlb
rcl
jge
lret
jo
loop
cmp
fisttps
out
mov
cwtl
into
push
std
fldl
cmovbe
xchg
int
xchg
lcall
dec
or
imul
gs
push
loopne
stos
fwait
or
icebp
push
push
jge
dec
pop
cmpsl
or
clc
jnp
sbb
jns
in
push
xchg
push
pop
bound
adc
pop
bound
or
jae
pop
lret
push
add
jp
cmp
in
test
fsubl
stos
loope
sbb
fcmovu
xchg
xchg
and
stc
mov
shll
dec
mov
test
fnstcw
jmp
xor
mov
in
les
es
outsb
xor
lret
push
cli
cwtl
data16
dec
mov
and
push
cmpsl
xor
out
lock
sub
jo
mov
xor
lods
loopne
jbe
jmp
shlb
sub
mov
mov
xchg
int
cs
or
mov
xorl
inc
cmc
imul
gs
icebp
xor
fisubrs
mov
sub
jnp,pn
inc
xchg
loopne
sti
mov
lret
sub
test
lods
mov
pop
pop
push
adc
mov
outsb
shll
xor
ljmp
pop
dec
cmp
out
out
sub
out
xor
sub
in
stc
pop
ret
push
mov
iret
pusha
pop
mov
mov
mov
pop
test
or
mov
outsl
pop
out
xchg
pop
data16
int
pop
fcomps
outsl
or
sub
imul
data16
pop
xchg
dec
adc
sbbl
dec
xor
je,pn
fmulp
insl
mov
jno
sbb
rcrl
push
sub
pop
pop
sub
cs
cmpb
mov
sarl
cs
add
icebp
jmp
or
xor
popa
pop
push
cs
cmpl
cs
mov
shrb
enter
call
or
xor
pusha
pop
push
cs
cmpb
cmpsl
lahf
xchg
cs
mov
xlat
cs
add
imul
daa
pop
pop
cmova
aaa
das
addr16
push
cs
xchg
outsl
cmpsb
sahf
xchg
cs
mov
cs
pop
imul
es
push
movsl
push
inc
ds
mov
xchg
shrb
adc
movsb
sub
jae
aad
ret
rclb
push
push
outsb
push
mov
and
push
fsubr
mov
cmp
loope
stos
jle
movsl
icebp
pop
dec
lret
scas
test
xor
imul
lea
xchg
push
mov
push
mov
and
mov
dec
lods
gs
fisubl
adc
pop
fiadds
clc
pshufw
outsb
sub
sub
insb
dec
fsub
and
sub
or
int3
xchg
insb
dec
outsb
dec
rorl
cmp
shl
int
xorl
add
pop
in
add
outsb
fs
dec
in
lods
lods
insl
fs
jbe
jle
or
lret
test
lds
in
in
movsl
lods
jmp
hlt
ljmp
stos
xor
fmul
in
pop
subb
dec
mov
jmp
lret
inc
cwtl
xor
and
xchg
cmp
cmc
outsb
aad
add
repz
dec
fdivp
xor
xor
in
xchg
dec
fidivl
mov
stc
fs
cmp
push
test
stos
test
fiaddl
cwtl
int
lods
fnsave
xorl
dec
add
data16
aam
mov
gs
add
xor
xor
repnz
test
xchg
adc
enter
mov
insl
xchg
cld
mov
in
gs
dec
in
mov
sub
cmp
call
xor
iret
push
arpl
mov
jp
lds
insb
dec
dec
mov
adc
jo
xchg
sub
in
fidivrl
stos
imull
test
int
push
out
add
mov
mov
pushf
popf
inc
push
sub
out
je
lods
pusha
dec
xor
fildll
xlat
jbe
andb
lods
jmp
jbe
aam
inc
pop
or
sub
and
ja
outsb
mov
test
fsubs
cmpsb
pop
pop
sti
inc
popa
fwait
test
mov
pop
clc
xchg
cmovp
push
mov
lods
dec
aas
sub
inc
cmpsw
aaa
cltd
dec
adc
mov
inc
sub
fistpll
cmp
pop
pushf
mov
cmp
mov
and
pop
outsb
jmp
dec
movsl
add
je
mov
imul
idivb
dec
outsb
jmp
mov
mov
in
dec
xchg
stos
or
imul
js
in
test
out
fistps
sbb
aas
push
aad
ja
sub
and
and
in
pop
outsl
ljmp
push
in
dec
cmpsb
sub
fcmove
dec
sub
out
enter
aad
jp
scas
inc
push
fcomps
outsb
cmp
in
push
inc
out
stc
pop
or
dec
jne
in
mov
sub
imul
dec
int
scas
and
sub
fisttpl
in
push
pop
xor
mov
sbb
mov
lret
sub
jns
jl
data16
or
sub
adc
sub
leave
test
sbb
insl
fs
jns
pop
out
out
cltd
test
pop
mov
sub
icebp
fiaddl
movsl
fsubrl
fisubrl
adc
mov
sbb
ds
dec
in
gs
xchg
popf
je
out
packsswb
imul
mov
or
mov
into
dec
fisttpll
mov
fmuls
fldt
loope
outsb
repz
ret
sti
ljmp
mov
lahf
cs
and
in
sub
dec
inc
dec
cs
push
inc
mov
mov
sub
sub
lods
leave
pop
ljmp
sub
test
lcall
and
fst
pop
imulb
stos
mov
inc
jns
push
scas
xchg
sub
push
ljmp
xchg
pop
lods
sub
dec
jnp
jge
mov
aad
test
jnp
test
mov
pushf
lods
cli
out
jbe
scas
fcompl
in
dec
jae
mov
call
pop
push
lods
dec
aad
loop
pop
cmp
out
test
sub
jmp
cmp
fsubrl
rclb
inc
jecxz
sbb
in
mov
mov
dec
jne
std
cmpsl
outsb
xchg
in
dec
out
sbb
push
pop
xor
mov
jge
in
outsb
scas
iret
mov
lods
gs
jle
cmpl
repz
out
sub
sub
mov
ds
jmp
jae
leave
add
pushf
xchg
shll
pop
in
lods
dec
xor
pop
adc
jo
data16
aam
lods
in
pop
sub
in
jp
jg
outsb
loope
dec
sub
imul
fiadds
sub
in
pushf
sub
daa
xchg
outsl
ljmp
in
stos
iret
outsl
adcl
mov
xchg
out
mov
test
push
in
dec
sub
mov
pushl
dec
jecxz
sub
adcb
sub
out
enter
dec
popf
jp
push
test
mov
adc
mov
fists
scas
add
in
outsb
lret
mov
leavew
sarl
pop
out
and
sub
cld
movsb
push
in
or
sub
lods
out
aam
cs
bound
inc
hlt
mov
outsb
dec
mov
dec
or
sub
scas
pop
pusha
sub
xchg
dec
popf
cld
inc
jae
push
sub
dec
adc
sub
repz
aaa
jo
les
jae
pop
sub
push
sub
or
pop
arpl
stos
xchg
in
ljmp
shll
stos
test
in
push
dec
or
cmpsb
in
pop
pop
push
lcall
popf
mov
pop
in
xchg
je
jmp
outsl
loopne,pn
pop
nop
pop
idivb
call
adc
sub
pusha
xchg
sub
pusha
cmc
iret
lds
scas
ja
cs
push
jns
inc
test
lods
call
inc
dec
out
loope
in
pop
sub
mov
pop
enter
mov
hlt
or
imul
mov
in
fmull
and
sti
shll
dec
lods
call
mov
lods
sub
jg
adc
xchg
in
stos
jge
lods
jbe
out
leave
iret
cs
ret
in
out
fs
jae
dec
pop
cs
stos
orb
or
mov
sbb
dec
sub
cmp
ss
iret
xchg
dec
dec
xchg
jbe
dec
subb
std
and
mov
stos
sub
insl
mov
cltd
cmpsb
in
xchg
pop
in
sub
xchg
push
push
jl
sub
test
in
fisttpll
movsl
dec
lods
dec
in
and
popa
xchg
iret
out
add
or
dec
cs
aad
sub
jl
and
imul
lahf
mov
mov
sub
adc
test
sub
scas
ret
jnp
and
das
je
dec
in
leave
sub
push
flds
or
in
dec
test
adc
xchg
fdivl
sub
mov
pop
mov
aam
xchg
lods
mov
sub
aaa
movsl
push
sub
out
sub
in
das
xchg
sub
daa
pop
scas
pop
fbld
sub
rorl
ljmp
mov
push
lods
mov
mov
pop
lea
xor
mov
fnstcw
sub
call
out
in
push
push
push
mov
lahf
mov
lock
sub
xlat
cs
iret
adc
and
lods
lds
push
jl
dec
adc
in
sub
and
sub
dec
inc
cs
jmp
push
lods
sub
sar
cmp
jge
xchg
lods
and
call
push
jbe,pt
popf
stos
push
or
fs
sub
insl
cs
jbe
xor
mov
movsl
lods
test
mov
lods
adc
xchg
sbbl
jb
and
test
sub
bound
ret
push
cmp
in
das
dec
sub
mov
xchg
in
lea
mov
enter
in
sub
leave
mov
cs
cmpsb
in
das
lods
dec
xor
jle
mov
mov
lea
test
push
pop
popf
shlb
jb
dec
sub
mov
cs
jb
outsl
xchg
insb
xor
add
in
xor
repz
mov
in
sub
in
bndstx
popf
push
adc
push
sub
scas
arpl
mov
adc
sub
mov
std
mov
ret
das
jo
mov
mov
insb
hlt
add
in
ljmp
outsb
mov
sub
or
sbb
movsb
adcl
outsb
sub
dec
adc
jl
sub
test
mov
dec
sahf
fwait
mov
das
mov
scas
notb
les
jp
outsl
sbb
push
leave
test
stos
out
or
lods
cmp
push
xor
mov
jp
js
rcrb
sub
stos
mov
xor
cmp
lods
int3
mov
outsb
sbb
mov
mov
sub
jae
mov
add
in
outsb
insb
cmpsl
and
add
sub
sub
repnz
data16
in
leave
jne
pushf
sub
cli
outsl
sub
loop
scas
and
or
sub
or
add
sbbl
dec
aad
sub
outsb
popf
cmp
mov
and
cs
push
jb
dec
mov
dec
mov
popf
mov
xchg
in
imul
cs
push
add
in
aaa
in
push
arpl
test
outsb
and
lods
sub
push
imul
dec
adc
xlat
xchg
push
mov
lods
sub
xor
cs
mov
das
arpl
shlb
cs
add
ret
fadd
jge
in
psllq
sub
dec
scas
dec
addb
in
sub
cs
xor
mov
rolb
pop
outsb
pop
jbe
xchg
inc
outsb
xchg
pop
in
scas
rorb
push
jge
mov
out
outsb
call
lea
in
in
outsb
in
sub
pop
fs
scas
push
mov
sub
mov
dec
sbb
push
in
inc
lods
push
arpl
xor
les
push
lret
cs
pop
dec
sub
sub
inc
bound
sub
mov
stos
jbe
mov
jp
outsl
add
mov
mov
sub
dec
mov
imul
rclb
lea
dec
and
shll
dec
in
sub
dec
mov
xchg
jl
repnz
adc
in
lods
dec
ret
fs
push
dec
inc
imul
pop
mov
std
dec
lods
in
sub
lods
mov
in
jmp
pop
and
out
push
in
lea
sbb
mov
add
jecxz
xchg
add
sub
sub
pop
dec
jae
lods
mov
jae
arpl
and
lcall
jecxz
stos
in
lods
cmpsb
or
scas
ja
fists
and
test
sub
ret
and
or
pusha
jno
sub
subl
sub
pusha
pop
stos
xor
sub
lods
sub
dec
mov
pop
sub
or
mov
pop
add
call
sub
out
fisubrl
jmp
inc
push
dec
sub
pop
xchg
cli
cs
addb
in
stc
mov
mov
out
jne
lock
in
push
das
outsb
sub
sbb
dec
cmpsl
ret
and
test
sub
in
popf
scas
mov
sub
sub
pop
pop
cmp
shl
inc
and
pusha
jb
jecxz
lret
movsl
cwtl
mov
ljmp
aam
push
cmpsb
mov
and
lods
xchg
insb
insb
sub
dec
shl
loop
push
mov
mov
inc
dec
adc
pushf
pop
das
in
in
gs
aaa
dec
out
mov
pop
sahf
inc
stos
pusha
and
adc
sub
mov
dec
add
sub
mov
arpl
shll
test
mov
jl
sub
cwtl
dec
cmp
sti
ret
push
mov
addb
lods
outsl
les
pusha
cwtl
data16
jl
and
lods
test
shrb
movsl
cmp
mov
outsl
sbb
scas
hlt
sub
pop
sbb
pop
mov
mulb
insb
sub
clc
sub
xor
out
or
in
or
or
pop
jmp
dec
and
stos
in
leave
and
sub
inc
dec
icebp
in
xor
pop
sub
mov
cli
lea
pop
je
sub
mov
bound
in
mov
push
or
lods
in
lea
sub
rorb
dec
pop
jl
dec
adc
sub
leave
sti
and
ss
sbb
dec
lods
movsb
mov
sub
movsb
mov
je
or
in
jmp
sub
cltd
pop
or
sbb
sub
scas
inc
iret
sub
add
out
sub
adc
rcrl
outsb
cmpsb
inc
cld
sbb
sub
push
jecxz
lock
in
ljmp
mov
pop
adc
jmp
jno
xchg
push
pop
sbb
scas
sub
addr16
sbb
outsb
icebp
fs
lods
int
dec
sub
dec
xchg
dec
push
mov
add
divl
mov
mov
pop
ljmp
lea
loope
testl
imul
stc
sbb
lret
in
dec
mov
mov
ss
inc
outsb
in
scas
fsubrp
pop
mov
insb
push
or
mov
sbb
outsb
test
push
dec
sub
lret
push
imulb
popa
xor
xchg
mov
pop
sub
adc
or
insb
push
push
imul
add
sub
cltd
jbe,pt
sub
xchg
add
jl
sub
jne
sub
jb
mov
xchg
test
out
lea
repnz
int3
mov
inc
dec
das
je
xchg
pop
mov
sbb
in
lea
or
ds
adc
jp
or
movsl
pop
xor
add
daa
xchg
sub
cmp
in
mov
mov
int
xchg
push
lods
mov
or
lods
sub
push
cmp
xchg
cmp
icebp
push
push
arpl
stos
xchg
or
in
gs
int
xchg
push
lret
sub
sub
push
xchg
cmp
xchg
out
inc
in
dec
sub
sub
sbb
int3
pop
mov
cmp
sub
imul
test
roll
lea
cmpl
in
sub
jmp
aam
shlb
sub
sub
shrl
sub
jecxz
dec
xchg
dec
dec
movsl
mov
jbe
int
adc
sub
mov
mov
and
adc
int
jne
aad
mov
cli
xor
mov
ja
xor
leave
stos
xor
dec
push
in
ficompl
mov
xor
insl
in
lret
and
outsb
test
xchg
sub
sbb
lret
jae
mov
ret
lock
cli
pop
and
and
cmpsb
fcomip
push
pop
add
shrb
dec
sbb
sub
and
lret
rcll
jge
jnp
popa
loope
mov
cmp
inc
shrl
sarl
subl
stos
pop
mov
stos
iret
dec
aaa
loope
lds
inc
jmp
test
test
fsubrs
pop
hlt
movsl
pop
xorps
jae
mov
mov
pcmpeqw
jnp
iret
push
jb
mov
gs
lret
mov
outsb
add
into
fwait
jns
ud0
xchg
sub
stos
movsb
out
rep
xor
fs
xchg
or
dec
rclb
mov
shll
sub
call
cmp
rcl
pushf
sbb
cmpl
xorb
sub
and
sub
xlat
lret
in
mov
cltd
mov
dec
ret
loope
pop
jne
sub
jnp
lea
movsl
jge
or
in
popf
cmp
outsb
test
insb
xchg
loope
in
or
int3
movsl
cmp
movsb
bound
or
dec
fsub
test
pushf
push
imul
sub
out
dec
outsb
pop
xchg
insb
in
test
hlt
and
shrl
xchg
insb
push
inc
add
aas
aam
cmp
cmc
mov
sub
stos
js
cld
int3
in
pop
sbb
mov
mov
int3
sub
fwait
je
lea
mov
in
cmp
insl
movsb
bound
push
lods
sub
movsl
leave
pop
push
or
dec
stos
insb
dec
jb
pop
push
mov
or
sub
movsl
test
mov
insl
dec
dec
sub
loope
and
fisttpll
in
push
mov
out
movsl
into
dec
scas
insb
mov
outsl
pop
dec
dec
das
pop
out
dec
scas
insb
loope
pop
dec
dec
sub
mov
test
mov
imul
jmp
insb
ljmp
int3
mov
fsubs
insb
stos
loope
pop
lods
push
in
fsubs
movsl
or
insb
test
sub
dec
lret
jmp
or
or
push
pop
or
push
xchg
daa
loope
sub
dec
lret
mov
fwait
addr16
dec
les
fwait
addr16
xchg
rorl
icebp
mov
jae
and
fnstcw
or
addr16
call
in
jecxz
fs
mov
mov
dec
adc
in
push
mov
pop
add
dec
into
cld
mov
mov
xchg
jbe
fadd
mov
push
vpsubsw
insb
in
js
cmp
mov
cmc
insb
push
loope
pop
fwait
dec
adc
pop
dec
xor
pop
or
mov
ljmp
dec
test
push
rorb
dec
outsb
mov
dec
mov
pop
and
je
mov
lods
insb
mov
dec
lock
and
repnz
jmp
xchg
cmp
cmp
mov
and
dec
push
shll
push
repz
pop
jp
dec
adc
popa
insb
dec
loope
pop
outsl
dec
out
mov
aam
jae
inc
pop
cld
dec
cltd
xchg
mov
jnp
mov
sbb
dec
lods
shlb
sbb
pop
loope
pop
call
jb
inc
dec
dec
insb
xor
fistpl
dec
mov
orb
dec
loope
pop
mov
ffree
dec
sbb
aad
pop
movsl
rorl
mov
enter
xchg
pop
adc
mov
pushf
jns
pop
lret
movsl
xor
pop
pop
jno
cli
mov
dec
stos
insb
shl
pop
dec
xor
out
add
insl
dec
push
test
cmp
movsl
xor
fstps
dec
imul
pusha
insb
mov
pop
clc
dec
cmpb
cmpsl
insb
pop
loope
pop
es
stc
push
mov
out
mov
dec
add
mov
daa
insb
sbb
xchg
inc
push
insb
aaa
dec
outsb
mov
scas
movsl
lcall
loope
pop
ja
arpl
int
push
loope
pop
mov
pop
pop
mov
shrb
or
dec
in
mov
pop
jns
aam
movsl
ss
add
repz
scas
cs
xor
xor
xchg
das
int
ljmp
movsl
scas
frstor
cmp
adc
sub
je
cmp
xor
mov
inc
push
cmp
sbb
jp
dec
inc
sub
cltd
jg
sub
fdivrl
xor
mov
nop
inc
divl
in
push
push
addr16
icebp
cmp
mov
jbe,pt
mov
push
fwait
out
or
jo
insb
sub
cmp
cs
aaa
adc
jl
frstor
sub
dec
scas
add
jbe
cmp
inc
push
ret
jmp
ja
cmp
xchg
jno
stc
or
icebp
cs
sub
add
ret
jmp
xor
or
xchg
fnstcw
std
jb
push
imul
sub
xchg
xor
rol
sub
pop
xor
mov
ffreep
scas
push
fiadds
xor
mov
inc
ljmp
jp
cmpsb
inc
scas
addl
sub
ror
cmp
jno
sub
xchg
adc
jbe
in
addr16
popf
cmp
stos
adc
xor
jbe
test
out
fs
inc
scas
lret
add
cs
push
testb
sbb
jnp
fchs
sti
xor
adc
outsl
mov
ret
fisubl
mov
movsb
cmp
hlt
xor
les
jbe
inc
inc
fidivl
and
adc
or
cmp
enter
aaa
jb
push
inc
mov
adc
fbld
mov
cmp
into
fisubrs
dec
shrb
pop
stos
lret
mov
cmp
inc
lret
outsb
cs
xor
orl
dec
and
or
jecxz
mov
inc
dec
sarl
push
mov
inc
sub
sub
jg
xor
call
imul
shr
or
enter
mov
or
stc
mov
cmp
cmpsb
test
cmp
pusha
add
loope
or
sub
cmp
cmp
call
repnz
and
add
repz
aad
xorl
das
cmp
and
xor
jbe
mov
sub
sbb
andw
scas
cmp
ljmp
push
out
xor
mov
cmp
and
aam
les
data16
movsb
inc
cmp
subl
loopne
ja
mov
sub
xor
mov
sub
insb
cs
aas
xor
mov
or
lods
mov
jbe
cmp
out
xor
xlat
mov
lahf
inc
cmp
cli
test
sbb
loopne
movsl
xor
xchg
xchg
xor
shrb
jmp
or
jge
mov
and
mov
fadds
out
shrl
cmp
mov
loopne
cmp
mov
pusha
sub
rcl
shlb
inc
or
jle
mov
push
cmp
jmp
xor
in
or
jbe
shll
push
push
ljmp
hlt
aam
jo
test
cmp
or
jge
shr
data16
cmc
out
das
gs
jmp
lcall
add
sub
xchg
lret
arpl
dec
push
jo
and
sbb
cmp
push
pop
aas
je
or
mov
mov
xor
inc
xchg
iret
sbb
mov
imulb
into
out
shrb
xor
lods
mov
loopne
inc
jnp
xor
adc
jmp
or
movsl
pop
call
into
leave
xor
data16
xor
sub
sub
int
jle
inc
ja
call
dec
test
inc
mov
fsub
aad
rcrb
cs
and
idivl
ds
enter
fidivrs
cs
cmp
outsl
int
xor
jae
sub
ds
add
movsl
sbb
ret
fldenv
sub
jo
or
xor
xchg
jecxz
sub
and
xor
sbb
in
lea
bound
push
cmp
mov
xor
xor
sub
inc
pop
mov
subb
ret
cmp
movsb
adc
cmc
sbb
xor
cmp
lods
push
push
and
jecxz
jno
sub
mov
add
pop
enter
or
adc
sub
mov
ss
inc
add
cltd
mov
cmc
dec
int3
outsl
sub
mov
stc
data16
push
inc
leave
xchg
sub
sub
test
pushw
in
xor
das
orl
lea
pop
mov
call
test
sub
xor
rorl
sub
xor
or
push
insl
in
popa
sbb
pop
lods
inc
mov
cwtl
xor
cmp
loope
xchg
mov
sub
push
insb
cmp
mov
xor
enter
cmp
or
xlat
lea
out
ret
mov
jns
scas
cmp
inc
push
insb
or
add
test
or
mov
sub
adc
lret
jmp
out
cmp
imul
xchg
jge
test
pop
das
push
dec
mov
dec
pop
and
dec
sub
lahf
rcll
fwait
cmp
push
or
movsl
xchg
ljmp
mov
hlt
sahf
cmp
int3
mov
cmp
das
inc
cmp
jno
std
popf
mov
xchg
mov
bound
jmp
fisttps
adc
test
data16
cmp
das
xchg
push
pop
adc
sub
test
sub
imul
in
in
insl
pop
js
sub
dec
push
test
or
jmp
rsm
mov
lret
jbe
push
push
outsl
repnz
ret
mov
stos
fisubrl
xor
sub
inc
lods
pop
std
cmp
imul
data16
cmp
or
stos
mov
in
and
lods
jmp
sbb
outsb
and
popa
xor
mov
out
arpl
scas
jae
or
out
movsl
push
cwtl
bound
pop
hlt
scas
stos
push
ljmp
xor
mov
decl
test
adc
lea
fstpl
sti
std
xchg
inc
int3
mov
loopne
shrl
xor
inc
cmp
or
mov
movsl
dec
or
call
popl
sub
inc
in
pop
xor
or
cmc
pop
push
lea
addr16
jmp
outsl
popw
jo
mov
cld
pop
pmaxsw
add
xor
inc
lret
jmp
mov
aam
jne
lret
jmp
scas
cmp
ss
outsl
push
shrl
das
mov
outsl
lods
xor
fs
dec
imul
nop
jl
aad
loopne
popa
mov
lcall
outsl
daa
xchg
cmp
pop
mov
sub
pop
mov
das
and
or
repnz
cmc
pop
push
push
or
sti
outsb
xlat
dec
sub
or
inc
enter
xor
mov
lods
xchg
jle
sub
sub
lret
dec
lods
or
fnstsw
in
push
and
mov
adc
cmp
dec
push
test
push
jl
cs
out
xor
out
ja
cmp
jmp
dec
test
sub
xchg
jne
xchg
xor
push
xchg
int3
lret
inc
jle
sub
mov
pop
bound
sub
xchg
test
lods
dec
cmpsl
out
ds
test
mov
sub
push
stos
lods
sub
mov
push
dec
movsb
xor
push
or
sub
sbb
dec
cs
repnz
imulb
cmp
cs
jle
in
fwait
xor
pop
mov
cmp
mov
arpl
push
push
sti
push
dec
sub
mov
nop
mov
add
or
scas
incb
xor
jmp
mov
dec
popf
sub
out
mov
add
leave
sub
xor
mov
lret
xor
lods
insb
cltd
test
xlat
or
xchg
mov
cmp
mov
arpl
vpunpckhbw
adc
lock
in
mov
in
add
cmp
xor
or
stos
inc
loop
cmp
lock
outsl
adc
adc
cmp
or
mov
mov
push
lcall
xchg
imul
inc
jge
orb
or
or
or
cs
cmp
xor
xchg
lea
mov
sub
out
scas
push
insl
dec
in
out
bound
mov
fldt
imul
scas
fstl
movsl
insb
xor
jl
das
je
xchg
cmp
xor
std
sub
cld
ljmp
fnstsw
mov
adc
inc
invd
and
jge
xor
bound
lods
in
insl
dec
cs
inc
jecxz
sub
push
dec
lcall
fsub
out
outsl
scas
pop
cmp
ja
jnp
scas
lock
call
or
cmp
loop
push
sbb
in
dec
xor
jmp
jbe
pop
cmp
icebp
xchg
jae
dec
cmp
or
jo
ja
push
shll
insb
lcall
cmp
cmp
mov
push
sub
int3
add
xor
addr16
jmp
add
jbe
pop
popa
pusha
xor
inc
bnd
arpl
dec
fucomip
or
test
aad
adc
xlat
mov
pop
lock
fcomi
or
xchg
cmpsb
inc
cs
dec
mov
in
out
and
movsl
mov
sub
pushf
shr
outsb
cmp
pop
mov
dec
or
dec
mov
and
sub
sbb
test
and
or
push
inc
mov
cmp
cs
pop
dec
cmp
push
adc
push
push
int3
aas
shlb
sub
mov
pop
sub
push
mov
mov
sbb
cmp
inc
rorl
sub
or
in
lretw
push
fdivl
addr16
push
mov
leave
roll
mov
stc
movl
lret
xor
sbb
push
jnp
int
in
inc
or
xchg
push
and
cmp
clc
in
mov
aad
inc
xchg
bnd
dec
outsl
push
inc
xchg
vpunpckhwd
add
cmp
test
out
xor
insl
aad
jbe
arpl
cmp
inc
cmp
push
mov
jbe
push
mov
xchg
hlt
cs
roll
push
xchg
inc
cmp
lods
gs
jbe,pn
inc
inc
iret
testb
adc
jle
dec
addr16
cmp
test
test
fisttps
mov
add
rorb
stos
push
dec
sub
xchg
xor
push
test
xlat
pusha
mov
pusha
inc
cs
and
pop
push
fistpll
push
lret
bound
fwait
sub
inc
cmp
iret
call
pop
cmp
push
jmp
insb
xchg
aam
pop
call
adc
shlb
cmc
test
popf
cld
cmp
test
scas
movsb
sub
xor
ret
xor
jmp
or
mov
pop
test
stos
sub
jecxz
or
dec
loopne
test
cmp
push
mov
inc
andb
lcall
enter
out
and
in
dec
repnz
cmp
pop
rclb
cmc
lock
in
rcll
or
mov
cmp
negl
xor
pop
sub
or
mov
cmp
mov
mov
es
ret
shlb
jno
pusha
cld
jmp
shll
lods
insl
lea
test
movsb
xor
push
or
sub
cmpsb
outsb
pop
mov
dec
xchg
out
or
dec
push
out
sbb
push
jle
mov
xor
xor
je
test
inc
test
pushw
and
sub
in
dec
sbb
and
dec
hlt
out
pushf
jmp
sub
add
sbb
dec
xchg
lods
repnz
sti
mov
or
add
sub
fstpt
sub
shlb
imul
cli
xor
pusha
lods
enter
lret
enter
and
lcall
add
inc
fisttps
shrb
jl
mov
inc
loop
xor
inc
pop
dec
scas
imul
lret
sahf
mov
icebp
xchg
push
jl
mov
inc
adc
les
sbb
pop
cmp
ljmp
and
sbb
push
roll
rorb
mov
ret
add
int3
xor
cmp
outsl
dec
lret
sti
addr16
mov
dec
or
sub
sbb
je
jb
insl
popf
lods
testl
xor
insl
leave
outsb
sub
out
pop
fildll
dec
or
inc
cld
int
dec
dec
pop
mov
xor
mov
dec
popa
outsb
sub
fistps
push
imul
or
dec
pop
enter
call
insb
dec
scas
gs
jl
dec
mov
inc
or
adc
outsb
push
scas
dec
enter
enter
xor
das
or
fidivs
push
cmp
pop
imul
in
stos
out
dec
xor
dec
pop
jmp
insl
int3
int3
outsb
lods
lock
cmp
enter
imul
imul
pop
adc
inc
imul
add
cmp
adc
ret
cmp
xchg
in
push
insl
jmp
popa
inc
push
push
dec
or
in
cs
or
xor
jne
lea
adc
sub
inc
pop
and
mov
ss
dec
pop
or
inc
addr16
inc
test
pop
push
sub
lods
dec
sbb
inc
sub
xor
sti
sar
pop
arpl
sub
push
ror
ljmp
sub
cli
add
imul
icebp
cmp
mov
pop
pop
push
fdivs
outsb
dec
out
pop
test
jae
in
jecxz
js
or
in
arpl
dec
sub
mov
adc
sub
lds
cmpsb
lods
daa
scas
test
inc
add
sub
in
xchg
pop
xor
or
push
daa
add
add
dec
push
cmp
popa
in
cmc
lds
lods
cmp
pop
rclb
fildl
sub
mov
sbb
addb
mov
rorb
adcl
cmp
lods
jno
xchg
fcmovbe
cwtl
setg
pop
bound
insl
jge,pn
xor
sbb
dec
jne
sub
int3
ljmp
hlt
lcall
sbb
xchg
pop
mov
push
mov
jl
xor
push
loope
sub
jne
data16
imul
mov
mov
adc
cmp
sub
aam
mov
loope
imul
movsl
ret
xchg
outsb
push
jge
ja
xchg
mov
fs
sarl
xor
stos
and
inc
aaa
sub
sbb
sub
jmp
jbe
dec
mov
cs
dec
sub
out
mov
xchg
xchg
ds
leave
and
aaa
jbe
cs
les
inc
in
adc
dec
sub
repnz
xchg
inc
mov
fldt
test
cs
jnp
out
sub
subl
lods
sahf
data16
cmpsl
daa
repnz
je
push
pushf
and
mov
insl
rcr
idivb
fcoml
lcall
sub
bound
pushl
sbb
dec
lret
xchg
jl,pn
mov
cmp
jno
or
xchg
sbb
pop
mov
out
jbe
xor
jle
sub
mov
jle
and
mov
inc
or
mov
push
or
je
ljmp
lahf
in
insl
les
test
popa
insl
sub
add
mov
ret
mov
loope
in
pushf
sub
sti
or
mov
negl
clc
data16
insb
les
outsb
jmp
jl
jle,pn
xchg
test
jle
sub
cmp
pop
lret
mov
xchg
aas
add
mov
jmp
or
jne
dec
push
mov
lcall
sub
xchg
sub
imul
jecxz
lods
and
outsb
jp
cltd
pop
mov
jbe
jb,pn
clc
outsb
jmp
in
xchg
repnz
xor
imul
stc
push
inc
cmpsb
in
cs
test
data16
fisubrl
out
mov
sub
shrl
jo
nop
lcall
cs
or
adc
cs
adc
push
cs
xor
jno
fisttpll
sub
sarl
cs
les
iret
testl
jbe,pn
fmuls
pop
sub
pop
sub
push
mov
mov
dec
jg
xlat
fsubrl
out
dec
sub
out
pushf
daa
xchg
scas
mov
ds
jmp
push
sahf
popf
sub
insb
outsb
cmp
ljmp
scas
jle,pn
mov
pusha
xor
testb
push
sahf
cs
mov
jo
dec
jle
mov
aaa
jg,pn
jp
mov
das
push
sub
sub
jmp
data16
sub
xchg
adc
dec
imul
sub
mov
or
pushf
mov
sub
subl
xor
lods
shlb
outsb
stos
lahf
lret
mov
pop
data16
pop
dec
add
lret
int3
adc
sub
es
imull
xchg
dec
sub
and
push
sub
mov
sub
outsl
sub
dec
xor
jb
push
mov
sub
sub
pusha
test
lods
cmp
lcall
push
cli
insl
push
imulb
mov
sbb
std
pop
xchg
inc
mov
xorb
aam
inc
xchg
push
fisubrl
and
je
addr16
push
sub
outsb
outsb
jp
rcrb
push
ljmp
push
outsl
loopne
push
sub
lret
sub
iret
mov
js
sub
sub
es
inc
sub
lods
push
mov
mov
pop
icebp
cmp
daa
lahf
inc
outsb
arpl
ss
xchg
jns
lods
sbb
pop
mov
sub
xor
int
ja
lret
inc
sub
aam
dec
bound
arpl
loopne
das
pop
sub
imul
cs
push
movsl
cmp
push
sub
outsb
lcall
ds
mov
jp
jmp
movsb
scas
or
sub
ja
lret
dec
push
mov
cmpsl
xor
add
out
jg,pn
jmp
fwait
sub
dec
stos
mov
and
cs
jecxz
sub
adc
negl
inc
pop
push
arpl
iret
out
fisubs
inc
xchg
pop
mov
stos
stos
jle
adc
shll
dec
cmc
jne
into
cs
jmp
sub
sub
aas
push
push
popa
int
mov
sub
into
inc
mov
cmp
leave
aad
cs
lret
in
inc
jle
ljmp
add
push
or
lods
push
negb
and
in
mov
scas
loopne
in
jb
out
sub
xor
push
cs
dec
and
sahf
out
mov
das
jmp
sub
sub
lods
jne
push
cmp
outsb
shll
or
sbb
test
sti
mov
xor
sub
sub
jmp
mov
in
cs
sbb
jbe
addr16
jle
lods
or
sub
mov
dec
push
ja,pn
cmpsl
xor
xchg
jmp
sahf
mov
ret
addl
lods
cltd
jbe
or
inc
fdivl
xor
popa
mov
pusha
scas
push
cmp
je
ljmp
das
aas
mov
sub
sub
and
adc
xchg
outsb
or
jo
clc
or
mov
cmp
sbb
addr16
cmpsl
stos
cs
scas
outsb
shlb
pusha
mulb
jmp
mov
cs
push
mov
data16
icebp
cmp
into
cs
ljmp
aam
jle
adc
out
aad
mov
dec
sub
in
xor
cmpb
mov
shrw
movsl
dec
cmp
jbe
xchg
pop
dec
sbb
test
out
data16
sub
cld
jb
mov
pop
fwait
outsl
sti
sbb
mov
xchg
jne
into
sub
add
scas
repnz
sbb
arpl
imul
movsl
push
xor
sub
fbstp
mov
add
jl
in
sub
and
push
data16
sub
rol
lret
int3
dec
arpl
xor
dec
sub
lods
mov
and
sub
xlat
xor
pop
aas
cmc
fdivr
and
sub
int
xchg
cmp
das
jp
xchg
mov
and
in
sub
jne
bound
xchg
add
rcll
push
cmp
leave
jmp
sub
xor
push
notl
jae
addr16
sub
mov
push
mov
test
adc
and
lea
fisubrs
ss
jne
shrl
scas
cld
dec
sbb
push
add
xor
mov
imul
xchg
aam
cmp
rorl
mov
je,pn
jge
pushl
jo
ficompl
inc
sbb
in
aam
sub
popf
jb
inc
scas
lods
call
sub
cmp
daa
sub
xchg
jbe,pn
dec
xor
js
popa
xor
push
xor
sbb
or
loopne
rorb
mov
aam
shrl
pusha
out
movsl
outsb
mov
gs
pop
or
and
sub
pushf
in
jmp
cmp
out
xor
ret
and
sti
es
repnz
sub
xchg
dec
scas
test
inc
or
mov
into
cs
rolb
out
stc
les
pop
bound
mov
pop
add
outsl
dec
scas
fcomi
setns
movsb
pop
xchg
sub
out
jo
push
xchg
pusha
push
in
out
cs
push
xor
cmc
pop
xor
pusha
imul
sub
lods
jl
sub
jge
pop
mov
jge
push
sub
int
test
stos
into
lds
lret
sub
mov
movsb
popa
mov
xchg
outsl
pop
cld
popa
fistpll
add
push
and
dec
nop
xchg
sub
loope,pn
rorb
int3
dec
inc
xor
xor
stos
adc
push
and
sub
pop
or
sub
lret
test
add
lea
sub
mov
aad
xchg
lea
imull
pop
hlt
and
sti
lds
lret
pop
lret
mov
sbb
outsl
lods
in
pop
das
subl
scas
inc
sub
insb
imul
push
arpl
adc
dec
inc
into
sub
dec
mov
sub
mov
pop
aas
sub
les
pcmpgtd
movsl
inc
dec
xor
inc
jno
test
js
pop
sub
ljmp
push
xor
xchg
mov
jle
leave
movsb
sub
jno
and
subb
jne
ds
jns
and
sub
sbb
and
mov
sub
push
mov
inc
jle
adc
and
dec
pop
nop
fs
mov
data16
mov
xor
sahf
subl
jecxz
test
dec
or
push
lahf
pusha
jl
sub
fs
cs
mov
lods
stos
clc
and
outsl
jecxz
mov
loop
subb
outsl
dec
jge
cs
add
inc
outsl
sub
dec
push
mov
adc
push
pushf
iret
in
jle
inc
xor
mov
jp
movsb
int
adc
pop
pop
scas
cmp
insb
stos
mov
adc
out
dec
subb
mov
dec
cwtl
cs
inc
call
jle
insl
cmpsl
mov
sub
in
inc
lods
xorb
inc
lock
pop
fldcw
cmovae
frstor
pop
jmp
inc
int
xlat
sub
data16
dec
xor
jbe
cmpsb
xchg
inc
lea
cmp
ret
sub
mov
shll
in
xchg
and
das
hlt
js
sub
std
cld
mov
cs
mov
xchg
sub
jle
outsb
pusha
sub
pop
jo
test
add
dec
imul
xor
pop
lea
lock
ja
mov
lods
sub
and
js
data16
dec
dec
fldt
call
mov
jns
ja
pop
pop
and
int
ljmp
pop
adcb
sbb
mov
jle
mov
xchg
sub
pop
test
and
xor
cmc
mov
push
sub
jbe
dec
lea
scas
jmp
test
lods
xchg
and
ret
les
repz
gs
cmpsb
scas
jbe
pop
lahf
mov
pop
lods
inc
sub
sub
lods
push
jno
pop
inc
add
pushf
out
cs
jbe
fists
pusha
xor
or
add
inc
sbb
jecxz
adc
cs
cmp
test
adc
add
mov
addr16
push
ret
mov
cs
xor
mov
in
das
lea
mov
jp
clc
mul
cmp
dec
and
pop
jge
cmc
xor
cs
push
scas
xchg
sub
adc
sbb
dec
lods
into
dec
sub
lds
jno
cs
push
ret
cs
shl
scas
gs
pop
sub
lock
out
repnz
ja
adc
pop
pop
addr16
mov
pop
dec
stos
or
rcl
test
mov
sub
lock
add
test
lods
push
xor
lahf
lret
lea
fimuls
test
dec
repnz
pop
ja
push
insl
mov
ljmp
adc
jbe
ss
loop
dec
movsb
cmpsb
mov
aas
sub
addl
cwtl
lods
xchg
jp
mov
or
xchg
sub
adc
dec
sbb
in
lcall
aad
sub
jmp
mov
lods
inc
jns
mov
or
out
mov
sub
shl
sub
clc
mov
xor
sahf
xor
push
pop
fwait
mov
shlb
mov
adc
xor
xchg
lret
imul
fdivrl
push
outsb
pop
enter
xor
jmp
jp
lods
nop
cmp
xor
inc
jmp
int3
lret
dec
push
cs
call
and
movsl
in
mov
addr16
int
enter
cs
adc
dec
or
out
sbb
cmc
scas
shll
fs
popl
lods
shlb
pop
pop
icebp
xorl
iret
sub
outsb
adcb
pop
mov
adc
sbb
aam
data16
adc
or
cs
jnp
lods
mov
out
dec
fwait
mov
fstps
xchg
dec
xor
sub
sub
sub
push
lcall
jl
sub
insl
in
lock
fbstp
mov
data16
mov
insl
dec
movsb
scas
xlat
stos
push
mov
dec
xor
xor
scas
subb
dec
adc
mov
sub
jp
push
xchg
mov
push
mul
enter
add
lods
xchg
push
xchg
jle
jmp
xchg
gs
jo
in
and
mov
imul
jle
addr16
movsb
fs
popf
sbb
data16
in
cmp
fnstsw
pusha
out
je
jp
lods
pop
pop
mov
cs
sbbb
push
sub
adc
sub
outsb
dec
inc
xor
cs
cld
add
dec
sbb
xchg
enter
jne
mul
sub
outsb
xor
sbb
mov
cwtl
fcompl
jge
pop
jmp
es
imul
sub
aaa
sub
push
cmpsl
adc
mov
lcall
aam
dec
or
rorb
xchg
or
cmpsb
jb
mov
mov
insl
leave
outsb
test
push
mov
cs
stc
test
out
mov
dec
xor
cwtl
mov
wbinvd
ret
dec
jecxz
clc
xchg
sub
data16
push
xor
jmp
xor
stos
aad
and
or
sub
cmp
or
push
dec
jle
or
sub
xchg
lods
mov
outsb
das
aaa
cmc
lcall
jnp
scas
add
sub
cmp
cs
std
aad
sub
dec
outsb
jl
sbb
fdivr
aad
mov
or
cmp
pop
out
pop
sti
out
sub
lods
outsb
inc
pop
jnp
cmp
fiadds
out
pop
sub
enter
scas
cmp
inc
insl
xchg
push
pop
adc
jp
outsb
push
xor
mov
int3
sub
jp
or
decl
sub
daa
mov
das
mov
sahf
xor
call
mov
and
lods
xchg
ss
push
sub
cs
int
cmpsl
or
add
js
cmc
jle
pop
sub
insl
jbe
pop
lods
mov
inc
out
out
and
and
call
lds
mov
test
ja
push
push
push
sub
and
mov
sub
in
rclb
lods
or
cs
and
pusha
stos
outsb
mov
cmc
mov
and
xor
sub
popa
and
sub
pop
xor
and
je
icebp
xor
ja
outsb
or
sbb
movsl
sub
push
cmp
lcall
loop
cs
mov
andb
add
sub
cmp
bound
aas
int3
pop
adc
movsb
cs
pop
movsl
mov
lods
cmp
inc
sub
mov
aas
sub
test
sub
push
jle
mov
pop
es
dec
maxps
sub
or
sub
mov
cs
out
sbb
les
test
dec
lret
ss
sub
icebp
stc
cs
lds
add
sub
sahf
adc
mov
les
sub
cmp
and
push
sti
add
or
mov
or
jae
cld
add
out
fwait
push
insl
cs
cmp
xlat
lret
fmull
dec
mov
repnz
notl
mov
push
cmpsl
out
lods
adc
outsb
icebp
pop
mov
imull
mov
pop
sti
icebp
cmp
mov
cmp
mov
cld
sub
lret
out
mov
mov
sbbl
push
inc
sub
aaa
lea
outsl
clc
mov
cld
repnz
inc
or
sub
outsb
add
push
sbbl
jbe
pop
es
xchg
cmc
dec
sub
push
sub
pop
dec
dec
sbb
loopne
dec
and
xor
sbb
mov
repz
test
lods
cs
stos
push
sub
popa
pop
sbb
das
je
outsb
int3
jne
add
mov
cltd
sub
inc
xor
mov
push
or
xor
inc
pusha
sbb
outsb
ret
js
jno
cltd
jb
mov
dec
imul
mov
nop
sbbl
push
icebp
mov
lods
jp
inc
cld
mov
push
inc
mov
jbe
hlt
sbb
cmp
movsl
dec
push
addb
scas
ja
xorl
mov
stc
data16
movsl
adc
jno
jl
push
cmp
fwait
jp
mov
push
and
lods
jecxz
fwait
mov
iret
lods
xorl
cs
sub
xchg
rcr
add
ljmp
xchg
dec
dec
scas
dec
xchg
popf
push
shll
jle
and
or
cld
sub
sbb
fidivrl
clc
push
pop
nop
aad
sub
jno
popfw
lret
pop
jo
pop
sub
lods
rcrb
lods
out
xor
cmp
push
sub
iret
in
inc
test
sub
lods
shrb
cmp
sub
repnz
fldcw
lahf
fwait
outsb
je
loopne
cmp
xchg
mov
pop
movsb
jb
cs
jns
and
ljmp
or
ucomiss
add
pop
data16
ja
push
pop
sub
xchg
mov
jmp
or
jbe
sarl
lds
add
test
mov
mov
mov
loop
lcall
xchg
cs
mov
cmpsl
stos
data16
das
push
and
rcr
pop
sbb
sahf
movsb
insb
xchg
jmp
popa
or
movsl
sub
xchg
call
push
outsb
in
mov
into
cs
push
xor
shrb
clc
jle
das
cmpsb
pop
pop
xchg
mov
adc
sub
or
lods
aas
push
mov
dec
mov
lods
insb
outsb
in
pop
imul
mov
sub
xchg
int
outsb
mov
push
ds
pushf
mov
inc
fcompl
in
xor
scas
hlt
mov
sbb
fsubrl
gs
movsl
or
sub
ret
xchg
pop
jp
mov
xchg
lahf
out
lret
sbb
mov
shr
out
movsb
in
fcmovb
sub
insl
lods
push
movsb
sub
imul
sub
pop
dec
stos
insb
or
test
xor
imul
inc
insl
pop
lods
outsb
dec
xchg
pop
int
shll
sbb
call
int3
adc
femms
scas
mov
jg
loope
and
jbe
add
popf
sub
mov
or
fnsave
lods
mov
popf
lods
or
outsb
arpl
sbb
es
sub
push
repz
popa
push
fcoms
ja
inc
sub
mov
out
adc
jp
test
out
ljmp
xchg
mov
sbb
or
negb
dec
pop
dec
dec
lret
lea
iret
jge
js
in
scas
insb
ljmp
or
push
xchg
imul
mov
push
sub
mov
pushf
call
mov
ljmp
mov
sarl
dec
popf
jo
sub
outsb
int
push
sbb
and
fcomip
push
dec
xchg
test
in
addl
out
mov
out
repnz
mov
push
jne
shll
outsb
cmp
pop
insb
outsb
fmuls
lods
lds
imul
ljmp
sbb
aad
lret
sub
ret
cmc
adc
mov
into
cmpsb
xor
xorb
sbb
out
jno
in
addr16
xor
out
rcrl
sub
jbe
sub
leave
je
push
out
sbb
push
mov
popf
sbb
push
xchg
pop
subl
mov
pop
push
repnz
add
lahf
push
sub
jmp
sub
or
in
test
stos
popf
sahf
pop
pop
outsl
fsubl
addr16
fistpll
mov
cmpsb
mov
mov
fstpt
outsb
xchg
push
and
dec
lods
xor
test
mov
sbb
pop
popf
dec
sbb
fs
mov
push
mov
sete
xor
in
shrl
mov
stos
loope
lret
addr16
pop
es
in
cli
jno
filds
fiaddl
in
sbb
pop
mov
sbb
mov
xor
lods
xor
inc
popa
iret
movups
sti
loope
lret
push
orb
mov
jp
rcr
dec
pop
jle
mov
test
mov
outsb
jge
add
insl
sbb
pop
in
jae
push
fwait
pushf
lcall
cs
aaa
incl
sbb
pusha
aam
sub
js
loopne
and
jl
or
cmpl
mov
data16
adc
push
paddd
cs
xor
mov
enter
xor
js
out
sti
fdivrs
test
dec
pop
rclb
xchg
lcall
dec
sbb
xor
ds
and
shlb
xchg
mov
add
imul
mov
movl
call
jmp
or
mov
call
lea
je
jmp
outsb
xchg
bound
test
mov
repz
cmpl
mov
outsb
inc
pop
vsqrtsd
jle
jnp
mov
jo
adc
jg
les
int3
lods
mov
bound
push
jb
and
rolb
adc
pop
in
icebp
stos
scas
xchg
mov
push
popf
das
push
mov
sbb
or
stos
in
xor
cmp
mov
int3
or
and
jb
cltd
imul
test
addr16
mov
imul
jo
shlb
xor
push
fistps
das
in
or
pushf
push
in
nop
sbb
cmpsl
push
icebp
lds
mov
fs
or
scas
out
mov
inc
sbb
xor
rorl
sbbl
push
mov
call
loop
movsb
test
stos
scas
lods
push
std
sahf
inc
mov
sub
jb
inc
xor
xchg
jb
mov
dec
cli
mov
mov
enter
imul
sub
pop
imul
sbb
fadds
push
mov
ret
aad
lds
jle
lods
test
fidivs
or
push
and
push
das
in
push
xchg
sbb
nop
clc
pop
xchg
mov
lcall
aad
push
xchg
scas
adc
sahf
shrb
adc
push
call
xor
es
pop
and
mov
adc
cmp
cli
out
cli
insl
outsl
cld
jo
mov
dec
dec
daa
in
jnp
jp
shrb
cmp
pushl
popl
pushf
pushl
ret
lods
loope
sub
imul
xchg
adc
sarb
mov
lods
sbb
dec
cld
adc
in
ds
jmp
testl
mov
and
mov
jle
add
add
and
out
mov
pop
xchg
jns
sahf
inc
adc
jbe
cwtl
push
jno
aam
add
imul
orl
je
or
nop
adc
mov
fcompl
into
imul
shrb
xor
loop
dec
lcall
jb
int3
add
sub
pop
nop
jge
or
fwait
cs
in
rol
es
lret
xchg
leave
repnz
dec
inc
popf
fistpll
add
lds
stos
pop
jl
pop
nop
xorb
out
pusha
jmp
sub
shrb
sub
inc
push
dec
add
inc
cld
cmp
mov
mov
cmpsl
sub
movsb
dec
and
fistl
lret
fcoml
push
mov
cmp
shr
and
cmpb
mov
mov
mov
push
jo
js
data16
xor
loopne
or
bswap
shlb
in
mov
cmp
arpl
mov
xchg
mov
push
ja
cmp
mov
pop
lds
hlt
mov
out
ja
mov
jecxz
or
ja
lahf
shrb
and
je
gs
arpl
popa
jo
add
gs
lahf
call
test
inc
push
push
add
mov
cmp
cmp
jmp
jmp
bt
xor
clc
pusha
repnz
call
call
movsl
mov
add
lret
scas
and
insl
adc
iret
scas
repz
call
das
in
mov
mov
into
sbb
ljmp
sub
xchg
in
dec
add
mov
and
mov
rorl
scas
lods
inc
inc
xchg
aam
shrb
sbb
in
cld
pushl
popf
pushf
pushf
pushl
pushf
lea
jmp
pusha
lea
je
pushf
movzbl
push
mov
pusha
cwtl
lea
mov
mov
not
pushl
popl
setp
mov
setle
movzbw
movl
movzbl
lea
movb
movl
jmp
popf
cpuid
push
call
xchg
jnp
sbb
sub
lahf
push
call
mov
add
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
xor
pushf
stc
cmp
cmp
call
pusha
mov
pushl
popl
pushl
pushl
ret
jp
lahf
push
cwtl
xchg
pop
xchg
les
into
xchg
test
lret
push
bound
mov
pop
pop
es
xchg
mov
movsl
mov
push
inc
pop
adc
iret
or
mov
data16
popa
xor
jo
sub
jbe
pop
mov
mov
and
rclb
lcall
test
jmp
rcrb
stc
pop
imul
mov
cmpb
push
test
xor
xlat
stos
push
cmp
sbbb
and
inc
insb
shrb
ja
xchg
stos
aas
sti
xchg
fstpt
negb
inc
sti
addr16
sub
test
add
sub
gs
fcoms
jo
adc
dec
pop
lret
inc
xchg
cmp
mov
imul
test
es
shrb
push
push
pop
out
and
je
mov
mov
dec
pop
lret
fistps
cmp
mov
sub
mov
aad
cmpsb
iret
pop
fcmove
gs
mov
shl
in
jns
mov
xor
or
dec
add
scas
imul
cltd
cmp
mov
or
shlb
cltd
add
stos
lods
roll
mov
mov
and
jno
leave
xchg
xor
mov
movsb
push
nop
mov
imul
sbb
scas
mov
stos
cmp
sbb
and
inc
mov
or
push
mov
out
inc
dec
push
add
cmp
pop
loop
mov
fs
xchg
cmp
xorb
xchg
xor
jno
fstps
cmp
outsb
dec
mov
and
iret
push
jmp
cs
fdivs
xchg
xchg
test
lods
shl
adc
clc
gs
shrb
mov
pop
cmp
add
push
lods
pop
inc
fadds
stos
xchg
repnz
bound
jle
inc
mov
call
imul
daa
cs
das
adc
sub
add
into
mov
and
shrb
sub
mov
insl
adc
jg
jg
fisttpl
add
jg
bound
movsl
lea
test
or
cmp
lret
stos
jae
pop
cmp
cmpsl
mov
xor
jno
add
mov
xor
add
roll
xlat
add
call
sarb
and
push
push
lahf
inc
gs
icebp
jp
adc
inc
scas
pusha
inc
shrb
dec
sbb
dec
cmc
jge
in
inc
mov
fwait
xchg
adc
xchg
inc
stc
pop
and
mov
fdivrl
xor
mov
out
xor
rolb
or
scas
pop
pushf
sarl
xor
pop
mov
mov
mov
repz
lods
jg
add
inc
insb
insb
outsl
arpl
add
push
gs
insb
outsl
jae
dec
gs
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
outsl
popa
fs
imul
add
out
stc
cmc
pushf
stc
neg
cmp
xor
pushf
neg
bt
stc
sub
jmp
add
dec
outsb
je
jb
gs
gs
fs
imul
xchg
call
nop
xor
add
pushl
ret
jo
dec
out
dec
jno
mov
stc
jne
jge
add
mov
add
aaa
mov
imul
fnstcw
in
mov
ret
pop
aam
jmp
enter
popf
push
lock
jg
cltd
jbe
xlat
add
push
xor
inc
mov
ja
xor
lock
xchg
inc
jge
test
xlat
mov
stos
mov
xor
mov
shll
out
push
dec
mov
or
and
stos
push
les
std
add
int3
lret
cmpb
cltd
inc
shlb
and
adc
clc
mov
mov
out
pop
stos
dec
sti
lret
aas
xchg
arpl
ret
adc
scas
push
mov
lea
fsub
jmp
sbb
imul
xor
or
shl
test
daa
out
fs
xlat
mov
sbbl
cmp
sub
rclb
pop
pop
and
dec
sub
fildl
xor
sti
sbb
into
sahf
or
mov
cmpsb
imul
dec
filds
add
jo
orl
adc
push
ret
jne
mov
hlt
roll
cmp
push
add
stc
mov
or
xlat
jg
cmp
sbb
jae
loop
pop
sbb
ja
jmp
jecxz
sub
inc
call
or
shlb
movnti
cwtl
ljmp
add
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
push
inc
add
lahf
cmpsb
test
pusha
lea
jo
push
lea
je
jmp
pusha
xchg
shld
lea
bt
test
jmp
pushf
rep
pushf
pop
mov
mov
mov
lea
jmp
add
jmp
pushf
lea
jne
call
add
inc
jb
popa
je
push
push
add
inc
and
add
add
mov
movl
call
push
call
shr
sub
cmp
pop
jl,pn
fisttps
lahf
and
cmpsl
inc
sti
push
mov
xchg
and
mov
push
pop
fs
jmp
enter
arpl
or
repz
jne
dec
pop
pop
mov
sub
push
mov
int3
int
subl
jnp
lods
enter
cld
xor
sbb
push
sub
adc
sbb
mov
das
loopne
notb
dec
fld1
dec
adc
scas
les
jecxz
sbb
pop
ret
cmc
bound
int
dec
lock
fstl
adc
inc
and
add
inc
and
add
add
not
call
stc
test
mov
push
lea
je
shl
bswap
shrd
adc
add
bt
bt
btr
test
mov
bt
add
bt
cmp
mov
seto
bsr
bsr
mov
pusha
cmp
pushf
jmp
lea
jb
jmp
xchg
call
add
dec
jae
popa
insb
imul
add
add
xchg
std
or
mov
xchg
sub
subl
mov
fimuls
sbb
repnz
cmp
jecxz
testb
push
push
mov
pop
imul
div
mov
jge
xchg
xchg
out
jecxz
mov
aas
push
inc
bound
dec
mov
mov
mov
lods
dec
clc
shlb
sahf
cwtl
std
pushl
popf
pushl
push
pushf
mov
lea
jmp
lea
ja
jmp
jne
jmp
add
inc
gs
je
imul
inc
add
gs
psubsb
pushf
push
lea
jne
push
push
jmp
add
inc
gs
je
imul
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
call
call
jmp
push
call
popf
mov
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
movw
stc
cmp
jmp
push
call
jl
pop
mov
addr16
sti
fwait
inc
cmpsl
imul
js,pt
shrb
fistps
aaa
push
andb
addr16
push
and
into
xchg
jo
xchg
int3
jo
inc
push
aas
add
jmp
add
push
gs
arpl
push
arpl
fiaddl
pop
fiaddl
xrelease
jae
iret
xchg
sub
xchg
jp
jg
fs
pop
rclb
cmp
bound
mov
push
jl
les
and
bt
mov
mov
andl
xor
mov
xchg
xor
jle
mov
shlb
push
mov
pusha
pusha
push
pushf
lea
jmp
add
mov
lea
jmp
cwtl
bswap
push
movzbw
jmp
mov
call
lea
jb
pushf
pushl
ret
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
xchg
pop
cld
inc
in
cmpsb
data16
ljmp
push
pusha
add
cmpsb
movl
jmp
add
push
imul
jb
add
pushf
push
mov
inc
pushf
jmp
stos
movw
pusha
pushf
pushf
lea
jmp
ja
push
shrl
popa
sbb
decl
jbe
jmp
push
ss
nop
add
movsb
push
repz
scas
pop
pushf
jecxz
mov
mov
push
or
stos
cmp
or
add
std
test
in
inc
movsb
mov
mov
cmpsl
jl
leave
push
movsb
js
or
jmp
movsb
xor
ja
pushf
inc
bt
mov
mov
add
sbbb
cmp
popf
jo
add
mov
push
in
fcmovnbe
pop
stos
xorl
arpl
in
add
or
incl
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
or
lcall
inc
mov
mov
pushf
lea
jmp
movl
push
pushf
jmp
pushf
mov
call
pushf
pushl
pushf
push
xchg
pushf
pushf
pusha
call
lahf
mov
pop
xchg
jmp
xchg
jl
mov
lods
adcb
pop
repnz
fidivrl
xor
je
mov
push
aam
pop
je
xchg
xchg
or
scas
scas
cmpsl
aad
inc
push
mov
sbb
jno
fwait
and
subb
std
shlb
dec
inc
push
call
sbbl
lea
js
push
pusha
not
mov
pop
mov
seto
lea
jnp
lea
ja
push
movsbw
push
pusha
lea
call
out
push
inc
xchg
sbb
mov
rclb
mov
popf
mov
jbe
and
and
in
mov
lahf
mov
mov
test
fisubs
fadds
add
popa
jo
gs
insb
insb
outsl
arpl
xlat
ss
push
xchg
mov
adc
test
lock
xchg
jbe
aam
pusha
and
mov
jmp
dec
and
andb
stos
dec
sbbb
add
lock
fwait
rorb
xchg
test
ret
out
pop
or
sarb
test
mov
add
xchg
or
mov
mov
scas
popf
push
xchg
adc
pusha
inc
aam
inc
pop
or
xchg
xor
cwtl
or
sbb
test
jl
and
pop
mov
in
cli
daa
inc
fwait
enter
adc
sarb
cmpsb
mov
push
stos
xchg
sub
mov
clc
movsb
sub
push
fdivl
and
js
mov
cltd
push
mov
or
jmp
das
sub
jg
xor
mov
jg
or
adc
in
or
dec
idivl
jnp
xorl
mov
sarb
leave
add
inc
jb
popa
je
inc
imul
call
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
ljmp
dec
or
jl
orb
adc
stos
mov
xor
jge
jae
insb
cmp
push
xor
or
add
or
mov
adc
ljmp
cmp
pushf
push
fimull
mov
and
add
popf
rcll
jecxz
gs
sarb
nop
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
call
sbb
leave
pushf
pusha
pushf
lea
jne
pushf
pushl
popf
pushf
push
pushf
lea
jmp
add
dec
gs
jo
jb
add
call
push
mov
bt
xor
sub
cmc
call
push
pushf
call
push
call
out
lea
jne
adc
sub
bsf
aaa
xor
mov
ror
inc
add
add
jmp
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
imul
add
jecxz
test
mov
out
and
mov
stc
pop
mov
push
or
les
dec
mov
loopne
jl
ficoms
out
add
pop
push
cmp
inc
clc
aam
in
push
and
add
test
adc
repnz
adc
pop
fisttps
dec
jmp
or
out
jg
scas
mov
push
jecxz
cmp
aas
mov
xchg
fsubl
or
push
fcomps
ret
loop
ds
clc
push
adc
insl
es
dec
sarb
add
push
call
adc
ja
movl
mov
pusha
test
call
add
stc
call
xchg
fnsave
fldcw
mov
dec
xchg
add
sbb
incb
aas
sub
loopne
push
test
arpl
movsl
lea
mov
push
cmpsl
mov
lods
leave
pusha
adc
xchg
ret
and
sbb
push
pop
mov
lret
hlt
xor
in
std
ret
leave
enter
mov
shrl
lcall
call
pop
push
mov
js
jbe
stos
jle
test
sub
push
rolb
and
je
sub
sub
xor
jmp
xchg
inc
repnz
imul
mov
inc
sbb
inc
or
inc
xchg
ljmp
sarl
push
sarl
dec
or
xor
xor
lcall
jns
jb
mov
pusha
pushf
lea
jmp
movb
push
cwtl
mov
jmp
in
dec
or
pushf
and
add
mov
cwtl
xchg
clc
lods
cmp
insb
sub
and
out
mov
addb
pusha
mov
jp
cmp
pop
insb
inc
cmp
loope
dec
insb
std
xchg
sbb
stc
xchg
icebp
aad
mov
into
outsb
dec
jne,pn
sub
ret
xor
leave
jnp
int3
jecxz
fiaddl
xchg
push
scas
cmp
leave
outsb
jge
sub
sbb
data16
jnp
mov
enter
push
mov
int
mov
sarb
out
movl
movl
call
out
xchg
xchg
pop
icebp
enter
loope
std
mov
fldenv
jno
push
adc
push
psubd
pushf
sbb
xchg
sbb
loopne
imul
lahf
dec
rcll
cmp
loop
mov
mov
dec
dec
cld
mov
jo
pop
xor
adc
push
aam
ljmp
aad
mov
sarb
xchg
daa
push
call
aad
addb
cmp
stc
jmp
inc
push
shll
xchg
pop
mov
and
pusha
add
xor
aas
xchg
and
fisubs
cmp
in
mov
xor
movsb
push
sbb
or
adcl
jnp
xchg
arpl
sbb
mov
loop
xchg
roll
mov
jae
in
inc
dec
mov
pop
clc
sar
ret
mov
dec
push
call
not
mov
pusha
pusha
push
lea
jmp
lea
jne
jmp
add
imul
inc
clc
je
fdivrs
add
sbb
push
dec
out
cmp
sub
enter
jbe
sbb
imul
gs
shr
jb
lods
stc
lock
das
addl
pushf
lret
je
mov
enter
mov
lret
sahf
cmp
mov
mov
lock
pusha
shlb
or
cwtl
dec
adc
js
sub
adc
dec
fsubl
jg
fld1
jb
and
cmpsl
rcll
cltd
adcb
dec
sub
lret
mov
sbb
les
sarb
in
mov
hlt
push
or
jo
test
cmpb
sub
lea
xlat
inc
or
push
dec
mov
push
cmp
dec
mov
imul
cmp
jp
sbb
lcall
dec
add
bt
xadd
pushf
sub
sbb
neg
cmp
shr
adc
add
mov
sub
add
stc
add
lea
mov
mov
bt
shr
jmp
push
movl
jmp
lea
jne
call
movl
lea
pop
lea
call
push
call
add
rep
movsbw
bswap
mov
push
pushf
pushf
lea
jmp
mov
mov
lea
call
call
lea
je
jmp
push
call
jo
aaa
clc
popf
pushf
pushf
pusha
mov
lea
jmp
pushf
test
call
mov
lea
call
push
call
data16
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
push
inc
add
ja
std
inc
call
push
call
je
ret
mov
inc
sbb
sets
dec
xchg
btc
bts
mov
sub
bt
mov
movb
clc
call
pushl
popl
mov
mov
movl
pushl
ret
add
inc
gs
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
add
je
jne
inc
bound
push
je
imul
mov
lret
lds
fstpl
mov
adc
mov
in
std
mov
dec
imul
cmc
mov
ds
cmp
xor
xchg
ljmp
jbe
and
push
pop
cltd
lods
std
jmp
or
ret
dec
pop
jae
and
shll
mov
jo
or
mov
into
dec
jbe
icebp
jae
dec
lret
int
cld
jg
xchg
lahf
xchg
sub
xchg
pop
adc
dec
std
enter
inc
lcall
cmp
or
mov
ljmp
add
xchg
cmp
call
inc
cld
movl
movl
jmp
test
test
movzwl
rol
jmp
lea
jne
pushf
movzbw
mov
bts
sub
shl
dec
lea
mov
bt
sub
movb
clc
pusha
pushl
popl
jmp
jmp
lea
ret
cmp
jmp
call
push
call
push
mov
push
in
pop
dec
imul
xchg
add
jecxz
or
subb
or
push
test
test
mov
dec
adc
sub
cmc
cmc
in
push
lds
and
or
xchg
sar
repnz
cs
mov
cwtl
dec
xor
nop
mov
out
xchg
push
leave
jl
scas
jnp
xchg
and
inc
adc
loope
orb
testb
stc
pusha
mov
cmp
int3
sub
or
rolb
push
pop
orb
call
mov
sbb
sbb
movsb
sub
cmpsl
and
cli
lock
lods
fstl
rcll
and
mov
mov
sbb
or
test
add
out
std
xchg
subb
sbbl
lock
cs
jmp
pushf
adc
push
movb
lea
jae
push
call
cmp
push
pushf
jmp
lea
je
bt
test
add
pusha
cmc
cmp
pushf
call
pushf
pusha
lea
jne
pushf
btc
mov
or
cmc
shl
clc
sub
rcr
sbb
lea
lea
call
bswap
call
push
call
bound
in
pushl
mov
not
pushf
push
movl
pushl
lea
pushf
jmp
seta
mov
seta
lea
jmp
push
add
pusha
push
push
movzwl
pushf
mov
movb
add
cmc
cmp
mov
test
clc
test
call
std
cmc
popf
pusha
movb
lea
jmp
jmp
dec
mov
jne
stc
lds
xlat
cwtl
adcl
lret
jp
xor
jmp
push
push
dec
or
xlat
push
and
rcrb
inc
jmp
sub
mov
aad
into
mov
mov
hlt
shll
aad
inc
ret
hlt
cs
jg
jnp
hlt
push
mov
call
xchg
inc
mov
rolb
xlat
andb
inc
and
jmp
sub
aas
pop
jmp
out
jnp
fistpll
jae
mov
jmp
dec
xor
cmpsb
jg
push
aas
inc
and
adc
leave
pop
jbe
out
aaa
fimuls
rolb
dec
add
add
inc
gs
je
dec
popa
outsb
fs
gs
xor
movb
xchg
pop
pushf
movzbw
pushl
popl
pusha
call
jmp
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
dec
gs
jo
jb
popa
je
add
les
clc
cmp
cmp
call
ljmp
int3
push
sahf
inc
mov
pop
shrl
fwait
mov
fs
popf
mov
xor
cmp
ljmp
jle
ja
push
sbb
outsl
cmpsb
js
cs
push
rolb
mov
sahf
lods
fldenv
jl
jle
mov
mov
and
sub
add
push
fnstsw
xor
jg
jno,pn
out
mov
mov
ljmp
adc
sub
lret
int
ss
test
ss
je
inc
push
loopne
stos
sub
and
adc
rolb
pop
adc
pop
mov
loop
xchg
add
xor
pop
push
jbe
push
xor
lahf
sti
fildll
mov
dec
cmpsb
movsb
mov
xchg
cs
push
mov
repnz
mov
adc
adcl
pop
and
mov
ljmp
jne
jb
push
popa
insb
jne
inc
js
add
test
jmp
call
movw
pushl
lea
ja
bt
sub
btr
sar
add
test
dec
bt
mov
neg
rcl
sbb
mov
call
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
movl
call
mov
mov
pusha
pushf
pushl
ret
jmp
test
cmc
stc
or
call
rcll
jnp
pushf
push
loope
or
rolb
repnz
adc
test
hlt
cld
je
fisttpll
xchg
jmp
xor
pushf
mov
int
fcoms
test
lsl
mov
inc
inc
xchg
sub
jg
xlat
pop
cmp
icebp
leave
and
fimuls
cmp
or
shr
pcmpeqb
les
les
mov
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
lahf
adc
je
add
inc
and
xor
call
push
pusha
mov
pushf
lea
jmp
push
call
cmp
inc
gs
imul
mov
call
repnz
call
lea
mov
pushf
lea
jmp
pusha
adc
movb
pusha
lea
jae
push
call
push
call
scas
in
lea
jns
push
jmp
neg
clc
clc
xor
clc
pushf
neg
jmp
movl
call
call
push
call
push
fiaddl
add
insb
je
inc
jns
gs
outsl
push
imul
cmp
pushl
jmp
pusha
mov
movzbw
pushf
cwtl
lea
pushl
popl
bswap
mov
call
lea
call
test
bt
cmc
stc
cmp
call
pusha
lea
je
pusha
mov
sbb
mov
push
adc
add
shl
mov
jmp
mov
cmp
imul
rcrb
xchg
test
dec
mov
sub
inc
cmp
push
dec
in
cmpsb
lahf
lret
scas
sub
subb
int
sub
jo
mov
sub
mov
dec
or
int3
scas
outsl
lret
in
and
xor
popfw
fildll
cltd
jl
mov
out
sub
decb
sahf
in
dec
outsl
cmp
fsubl
cmp
lods
jb
dec
mov
xor
fnsave
stos
and
lret
dec
inc
jo
ja
mov
pusha
jg
or
insb
lods
incl
pop
push
dec
push
adc
movsb
jg
mov
xor
in
mov
out
aas
movsl
mull
outsl
xchg
arpl
mov
addr16
imul
inc
jmp
pusha
scas
in
out
lods
and
mov
es
sar
sub
out
out
les
fadds
pop
imul
test
inc
jl
or
sub
js
jle
mov
sub
outsb
ret
mov
in
outsl
repnz
mov
mov
xchg
add
jle
subb
rcl
sti
xor
call
insl
jne
dec
ss
test
push
js
mov
ds
test
outsl
jo
mov
mov
in
data16
jmp
sbb
cmpsb
sti
mov
add
pusha
pop
jne
jnp
inc
push
hlt
push
ss
adc
cmpsb
out
mov
sub
out
push
hlt
decb
fstp
nop
sub
pop
andl
cmpsb
add
orl
jnp
cs
sub
fiadds
xor
pushf
sbb
jle
lods
stos
das
out
fnstcw
pop
xor
es
push
mov
movsl
push
or
dec
cs
xchg
data16
xchg
or
mov
outsb
in
add
insb
cmpsb
or
inc
popf
cmp
pushf
mov
sub
scas
add
mov
dec
insl
cmpsb
or
aad
add
inc
xchg
jno
imul
movsl
cmpsb
in
int3
inc
shrb
add
sub
idiv
outsl
mov
mov
mov
push
mov
push
lods
repnz
mov
push
movsb
outsb
mov
mov
imul
sti
scas
pop
sub
notb
mov
sub
das
jle
push
cmpsb
jge
mov
pop
and
jle
lods
or
or
int
ss
mov
mov
add
scas
mov
lods
inc
jnp
add
sub
sub
aad
rclb
imul
es
pop
push
push
adc
cmpsb
pop
inc
pop
pop
or
dec
subl
jg
or
mov
repz
cmpsl
jg
mov
and
sbb
sbb
mov
mov
jle
imul
mov
fstl
in
imul
add
test
cmpsb
int3
inc
cmp
loope
or
mov
lds
push
loop
push
sub
outsl
jae
ret
lea
inc
cmp
inc
lahf
mov
or
mov
pandn
pusha
cltd
sub
iret
es
mov
imull
rol
in
dec
addr16
xor
xorb
fildll
inc
jecxz
jle
imul
sbb
pop
cltd
mov
jecxz
insl
lret
in
sub
arpl
sub
pop
movsb
movsb
push
scas
std
jbe
jge
jne
cmpsb
inc
inc
pop
mov
in
pusha
or
jnp
lea
movsl
cmc
outsl
loop
mov
int3
lods
cmpsb
mov
jmp
shll
test
fbld
xchg
pushf
inc
pop
dec
and
pop
sahf
outsl
dec
cmp
fcoms
add
scas
daa
fbld
imul
jo
push
sub
jno
lods
add
cmpl
cmc
cld
push
int3
jmp
and
lods
xor
dec
jle
push
xchg
xlat
xor
cmp
sbb
push
mov
cmc
dec
sub
stos
loope
dec
dec
jbe
xchg
enter
dec
outsl
mov
imul
xchg
push
push
sub
push
sbb
dec
je
mov
jae
sbb
clc
test
js
aad
pop
dec
pop
insb
in
fs
js
pop
out
shlb
mov
das
mov
or
pusha
mov
xchg
aas
adc
into
int3
mov
insl
lods
in
scas
cmc
pusha
ds
ret
add
push
in
cwtl
add
mov
push
outsl
lods
dec
adc
or
xor
insb
fstps
scas
dec
lret
mov
mov
orb
fwait
bound
pop
in
and
lods
dec
sub
loopne
dec
sub
adc
pop
pop
jp
or
das
cli
pushf
inc
loopne
jmp
dec
cmp
cmc
sub
push
in
rcll
push
pushl
js
dec
mov
add
movsl
sahf
cmpsb
and
in
rorb
inc
out
sbb
push
pop
pop
inc
jl
jmp
pusha
mov
xlat
jg
jge
mov
dec
in
push
inc
outsl
dec
and
pop
adc
xchg
mov
or
add
call
cmpsb
das
adc
sub
mov
push
cli
aam
add
dec
repnz
hlt
scas
insl
daa
outsb
dec
cmp
jle
into
pop
decb
cld
cs
push
xchg
xor
jae
mov
inc
fcompl
xorb
fwait
inc
cmpsl
ds
sub
sub
adc
adc
ja
ss
xchg
sub
push
adc
ficompl
add
or
mov
shl
adc
or
xchg
test
dec
mov
loope
outsb
jge
cmp
or
xchg
dec
push
xlat
pop
sub
sbb
cmpsb
mov
mov
popf
push
xlat
sub
fdivl
xor
fiaddl
mov
shr
dec
sub
inc
fstl
xchg
mov
fimuls
sub
in
fisubs
sub
adc
shll
or
cmpsb
pop
in
mov
cmc
lea
push
outsb
cmpsl
add
cmpsb
imul
enter
add
push
fwait
sbb
mov
cmp
inc
mov
or
mov
jb
in
or
adc
push
cmpb
dec
cwtl
fwait
push
jbe
xlat
aas
jo
push
addl
jmp
inc
add
dec
jp
cmp
loop
or
xor
cs
imul
dec
xchg
xor
jb
aaa
pop
lcall
mov
dec
add
and
popf
int3
loope
sub
push
aad
mov
in
push
push
outsb
xchg
popf
mov
xor
imul
push
mov
xchg
xor
mov
push
cmp
sub
push
repz
mov
jle
fldenv
and
lcall
pushf
push
daa
inc
shrl
add
push
mov
dec
jb
das
push
inc
rorl
mov
add
shrl
pop
mov
push
mov
sbb
xchg
dec
dec
mov
addr16
movsb
xchg
dec
fs
subl
add
out
scas
sub
lahf
insb
push
sahf
cli
pop
mov
cmpsb
mov
inc
das
sub
int3
dec
sarl
sbb
mov
dec
mov
dec
je
gs
pushw
lahf
mov
popa
fildll
dec
sti
es
or
mov
enter
dec
orl
fisubrl
lods
mov
imulb
cmpl
jecxz
sbb
imul
insb
jmp
or
in
sbb
mov
push
movsb
mov
lahf
inc
jb
cs
ror
pushf
and
pop
out
pushf
lret
stos
in
test
mov
cmpsl
movsl
dec
sahf
jmp
mov
add
cmpb
push
insb
outsl
sbb
mov
jp
cmp
imul
jg
inc
sub
pop
out
out
cmp
push
ja
push
insb
dec
aad
xchg
imul
aam
pop
stos
mov
aas
push
lret
cmpsb
dec
inc
inc
popa
xchg
cmc
xor
inc
ficoml
push
imul
sbb
and
insb
aad
fimull
imulb
stos
aas
loopne
in
inc
mov
push
mov
int3
xchg
mov
sahf
adc
dec
jl
push
sub
shll
sbb
movsl
xchg
outsl
loop
mov
and
lahf
test
aas
or
push
xchg
out
cmpsb
int
clc
mov
cmp
cmp
push
imul
int3
imul
fsubrl
push
or
cltd
xchg
xlat
adc
out
jmp
jp
push
adcl
push
outsl
push
push
call
xchg
or
push
mov
or
stos
sub
shll
mov
sub
dec
jnp
push
js
arpl
stos
pop
push
out
dec
inc
jmp
testb
mov
and
pusha
sbb
fldt
jne
loopne
fs
cs
addr16
and
pop
mov
adc
add
divl
mov
pop
xchg
sbb
lcall
xlat
xchg
fwait
pop
push
and
adc
fbld
imul
fisttpll
pop
int
insb
gs
push
in
pop
add
adc
jbe
aas
fsubrs
dec
mov
push
jge
sub
sti
mov
insb
mov
adc
rclb
mov
push
pop
arpl
icebp
cli
movb
inc
mov
fists
mov
ljmp
mov
adc
data16
std
jl
imul
dec
pusha
sbb
jecxz
dec
insl
xor
popf
pop
xor
cmp
xchg
int3
or
movsl
fldl
imul
rclb
test
sub
mov
ds
mov
mov
lods
or
scas
jno
js
sub
ret
add
mov
movsl
out
xchg
imull
inc
push
sbb
lods
scas
cmp
jecxz
outsb
lret
pushf
loope
ja
pop
out
dec
dec
push
scas
fnstcw
lock
test
movsb
in
pop
fsubl
mov
inc
lods
insl
mov
testb
and
mov
mov
sub
dec
push
sbb
in
cmpsl
pop
out
out
cmpsb
pop
out
and
cmp
mov
ja
ds
dec
sti
xor
mov
xor
mov
aas
stos
or
inc
xchg
jnp
stc
bound
aad
mov
sbb
pop
lds
lods
mov
fisubrl
add
aaa
lret
out
pop
inc
mov
jmp
test
sbb
sbb
mov
jecxz
xor
addr16
lahf
inc
out
loope
or
add
jp
ret
enter
dec
popa
cwtl
pop
mov
aad
aas
test
or
mov
shll
fsubs
testb
sub
cld
pop
mov
dec
jge
clc
into
subl
outsl
inc
mov
inc
cmc
push
and
mov
jp
jl
int3
into
mov
xchg
and
fs
xchg
sub
xlat
push
add
jmp
dec
pop
cmpsb
insb
dec
mov
dec
in
mov
pop
dec
ds
loope
shrl
hlt
cmp
outsl
or
sbb
fcmovnu
adc
pushf
pop
and
in
dec
fstp
xchg
fucomp
lahf
mov
dec
cli
pop
cmpsb
inc
iret
popa
or
xor
mov
or
pop
cmp
aam
jb
mov
icebp
out
push
sub
jo
lods
movsl
mov
jge
pop
jmp
xchg
into
psubd
test
and
hlt
pop
pop
dec
or
mov
rclb
mov
mov
iret
sub
stc
inc
cmp
pop
fwait
inc
repz
sub
cmc
sbb
leave
mov
push
push
pop
test
jb
or
enter
mov
sub
imul
push
cmpsl
push
fadd
out
dec
push
xchg
imulb
imul
xchg
les
lret
mov
cmpsb
dec
aaa
inc
xchg
daa
mov
imul
mov
mov
fisubrl
scas
xchg
out
or
dec
or
out
fisttpll
mov
insl
repz
aad
adc
lahf
aaa
lret
shrb
sti
jecxz
inc
dec
dec
call
pop
cmp
sub
mov
call
adc
lods
in
pop
push
imul
repz
push
dec
xchg
stos
sbb
fsubl
pop
movsl
in
popf
fildl
leave
mov
add
rcll
adc
int3
outsl
sub
sub
sub
jle
adc
out
stos
shrl
fistpll
add
and
enter
cmc
jg
bound
scas
clc
movsw
mov
addps
leave
std
jecxz
or
insb
fmull
mov
push
je
cmp
xchg
dec
pop
xchg
scas
pop
sahf
mov
jg
lret
sbb
fcmovnbe
scas
cmpl
mov
shlb
jl
repnz
xor
ret
call
push
lock
dec
movsl
add
icebp
sub
xor
cld
cmp
dec
mov
push
imul
fldenv
xor
jno
pushw
mov
sti
sub
frstor
arpl
cs
push
push
cmpsl
pop
cltd
dec
jbe
jo
sub
cmp
imul
add
lods
cmpsb
es
in
or
outsb
ffreep
adc
test
sub
les
sub
sub
imul
or
and
mov
and
movsb
scas
shll
lods
stos
dec
inc
gs
enter
jp
pop
xchg
nop
and
sbb
lret
stos
cwtl
xchg
sub
mov
xor
test
sub
adc
stos
out
mov
lea
cmpsb
inc
mov
lods
repz
and
lahf
les
mov
test
jl
ret
sub
and
mov
pushl
aad
and
outsl
nop
fwait
dec
mov
ds
ficoms
or
movsb
dec
or
pop
adc
or
mov
iret
cld
cltd
mov
inc
mov
or
cmp
lcall
mov
adc
or
pop
xlat
cmp
mov
test
pop
mov
jb
add
sahf
mov
movsb
pushl
jl
scas
movsl
shr
xchg
xchg
repnz
jge
in
mov
imul
sub
outsb
jb
pop
sub
adcl
addr16
push
outsl
push
cmp
push
orl
cmp
fistps
and
mov
fstp
mov
mov
imul
shlb
in
out
fstp
add
fistpll
sub
decb
fidivrs
or
lcall
or
mov
xchg
iret
mov
inc
sahf
ljmp
pop
pop
add
inc
cmp
arpl
pop
sbb
dec
sub
inc
fucomp
dec
sub
push
mov
out
lods
push
loop
and
pop
inc
lods
cmpsb
dec
mov
and
lods
mov
sub
inc
adc
add
xor
fnstsw
mov
inc
pop
fistps
cmp
int3
pop
sbb
jp
clc
cmp
xor
test
imul
popa
mov
in
pop
iret
test
outsl
imul
jg
or
xchg
sub
pop
iret
imul
ljmp
leave
imul
or
mov
aas
xor
outsl
push
icebp
pop
repz
popf
add
cmpsb
adc
push
pushf
arpl
push
popf
jbe
movsl
push
sub
sub
cmpsb
inc
mov
insb
bound
dec
jne
pop
mov
jge
mov
push
cmp
call
sbb
mov
push
fcompl
insl
and
outsb
mov
movsl
test
push
scas
cmc
sti
je,pn
inc
adc
in
sarl
ret
mov
sbbl
test
aaa
outsl
mov
jmp
cli
jle,pt
fmulp
cwtl
imul
sbbb
or
or
stos
sbb
das
out
push
cmc
push
in
mov
lea
ljmp
push
in
mov
pop
jle
mov
lahf
jecxz
pop
mov
out
push
inc
cmpsl
imul
out
xchg
test
outsl
rcr
sbb
push
stc
lahf
fwait
scas
push
pop
jne
xchg
cmpsl
and
fisubl
scas
sahf
xor
push
inc
pop
fisttps
push
out
adc
inc
negl
xchg
incl
sahf
daa
dec
or
and
mov
iret
and
and
inc
cmp
jmp
mov
outsb
push
pop
insb
sub
xchg
int
sub
icebp
test
mov
sub
test
out
mov
jbe
pop
jp
andb
es
jb
pop
mov
jnp
mov
xchg
and
xor
mov
cmp
popa
pop
loop
movsb
mov
xor
push
lods
cmc
mov
jb
sub
daa
mov
sub
lret
pop
aaa
pop
movsl
outsw
xchg
xchg
iret
test
in
or
jmp
pushf
clc
fwait
out
sub
pop
or
xor
pusha
inc
xlat
out
ror
mov
cmpsb
fisubs
or
outsl
cmp
std
and
lods
push
dec
out
stos
jg
dec
dec
in
mov
movsb
pop
mov
popa
and
cmp
inc
pop
sbb
jge
pop
mov
and
movsl
fildll
xchg
cmp
push
std
pushf
push
lods
mov
cs
fistps
mov
sub
pop
jne
lahf
sub
or
imul
fistps
movsl
insb
cmpsb
test
pusha
test
jecxz
cmp
cmpsb
push
out
cmpsl
orl
jge
cs
sbb
pop
pop
xor
fwait
jo
dec
mov
sub
lcall
repz
cmpsb
mov
jl
jle
cli
or
or
dec
push
leave
test
mov
shrl
fwait
push
add
sub
dec
mov
sbb
aad
loope
popf
orb
test
in
sbbb
idiv
xchg
mov
in
fdiv
cmpsb
daa
sub
lret
outsl
loope
ret
fstl
cld
mov
subl
shlb
orb
xchg
fdivrl
dec
push
mov
add
xor
dec
mov
cmp
insl
out
mov
cmpsl
mov
insb
push
sbb
inc
jno
jle
or
jne
mov
cmpsl
ret
sub
push
pop
or
stc
push
dec
pop
scas
pop
scas
test
mov
out
fwait
sub
sub
push
xor
pop
sbb
in
xchg
adc
dec
shrl
cltd
cs
cmpsb
dec
aas
mov
add
or
cmp
stos
dec
push
enter
sub
push
movsl
out
in
add
or
inc
xorb
repz
and
movsb
sar
ds
fs
negl
lods
pop
andps
lret
int3
lret
outsb
stos
push
popa
sub
jecxz
adc
jmp
shrb
popf
push
imul
iret
mov
fs
mov
cld
lods
inc
push
xchg
sub
adc
pop
add
das
adc
out
idivb
or
xor
push
iret
fdivrl
bound
sbb
lds
ret
sub
sub
lcall
gs
fmul
dec
outsb
push
test
outsb
xchg
loop
cltd
cmpsb
jno
xor
push
cmp
mov
in
cmpsb
mov
sbb
out
dec
cmp
add
outsl
pop
test
or
leave
scas
loop
mov
pop
es
or
jne
aam
fnstenv
push
cltd
scas
dec
andl
inc
pop
add
addr16
xchg
fnsave
fincstp
mov
leave
mov
xor
adc
mov
loop
add
movsl
test
stos
xchg
and
cmp
js
in
test
fisttps
sub
or
sti
es
lods
cmpb
call
sub
das
imul
adc
bound
fcompl
aad
pusha
fs
push
ficoml
movsl
sub
ja
dec
push
inc
mov
jne
in
data16
jns
add
sub
mov
push
jp
scas
sub
jle
cmpsb
idivb
push
loope
mov
pushf
sbb
lcall
add
out
sbb
incl
pop
ljmp
dec
in
inc
lds
cld
xchg
fstl
xchg
xchg
sub
movsl
jbe
lods
fisubrl
fld
outsl
int3
out
cmp
inc
jbe
mov
sbb
repz
adc
push
outsl
xchg
jle
out
mov
pop
jnp
lods
imul
lret
outsb
inc
test
stc
in
pop
xor
or
cmpsb
xchg
ss
xchg
or
cmc
popa
lcall
push
incw
int3
into
rclb
mov
push
sub
mov
in
mov
lods
cmpsb
cs
ror
add
mov
jge
cmpsb
mov
xchg
jno
or
prefetchnta
mov
and
cli
aaa
scas
pop
iret
push
in
popf
sub
in
bound
out
sub
js
adc
sbb
push
fistpl
push
xor
xchg
mov
hlt
imul
dec
cmp
sub
dec
call
cwtl
and
mov
dec
pop
insb
jge
loop
fisttpll
clc
jbe
mov
fcompl
inc
mov
int3
push
mov
scas
sub
jl
xchg
es
pusha
pop
jb
shrl
pop
stos
xor
cwtl
lret
dec
mov
iret
or
and
sub
inc
lds
mov
fwait
and
xchg
dec
push
outsb
sbb
xlat
cmp
push
cmpsb
iret
outsl
sbb
in
pop
jg
es
push
mov
ss
in
ljmp
sbb
push
pop
negl
int
jp
int3
movl
fwait
xchg
lea
lock
orl
movsl
mov
sub
test
fwait
pop
dec
pop
decb
jge
cmp
in
dec
inc
jmp
mov
sbb
push
gs
cli
adc
stos
hlt
in
or
and
jb
xchg
ljmp
loope
sub
mov
gs
outsl
push
insl
hlt
sub
dec
or
mov
lds
sub
mov
adcl
dec
xlat
mov
mov
out
stos
push
xchg
pop
pusha
mov
or
xchg
xlat
lods
std
pop
dec
push
iret
insl
int
sub
sub
mov
push
mov
jp
int
popf
es
adc
aas
lahf
xor
lea
jg
fld
mov
push
and
pop
pop
adc
std
sub
jg
jmp
sub
pusha
out
iret
push
icebp
decb
imul
test
lea
data16
bound
rcrb
and
in
ss
pop
lods
mov
dec
bound
aas
cmp
insb
fsub
adc
or
fnstenv
scas
lret
pop
test
bound
cmpsb
insb
sbbl
or
icebp
xchg
inc
dec
cmp
xor
ret
mov
push
lock
shll
push
rorl
adc
hlt
pop
outsb
inc
pop
aam
push
outsl
into
test
jl
push
es
mov
add
sub
sub
sub
divb
js
pop
sbb
jmp
dec
add
sbb
sbbl
jo
push
inc
xor
pop
jnp
xlat
cli
sarl
cmp
imul
adc
testl
lret
scas
inc
dec
pop
js
repz
or
xchg
fldln2
testl
adc
xchg
gs
mov
pop
sub
outsl
mov
add
mov
mov
ficomps
shrl
or
xchg
push
mov
frstor
jne
mov
dec
push
call
rclb
sbb
out
addl
test
out
mov
subb
test
jmp
xor
fwait
addr16
cmpsb
call
rorl
aad
add
jg
es
clc
out
xchg
cmpsb
mov
testb
out
mov
xchg
je
pop
push
pop
adc
sub
inc
mov
cmp
subl
jp
pushf
add
mov
mov
sahf
or
fnstsw
lods
ljmp
out
cmpsb
pushf
ret
sub
rcll
xor
nop
dec
mov
mov
and
stc
ret
aad
popa
mov
les
loopne
pop
and
out
or
in
jo
in
cltd
jb
inc
or
lods
lds
push
sub
jg
sti
and
mov
lea
out
dec
cmpsb
push
xchg
dec
clc
test
mov
fldt
and
outsl
rcll
cltd
cmp
test
pop
aaa
in
scas
out
test
arpl
das
cmp
call
cltd
jle
mov
lds
dec
sub
shufps
sub
adc
xor
fildl
mov
sti
lret
dec
imul
sbb
xchg
sti
shl
fisttpll
dec
bsr
shrl
loop
dec
mov
add
add
icebp
aaa
pop
cmp
outsb
dec
mov
std
adc
mov
push
lods
sahf
mov
jb
nop
cmc
cmpsb
and
int3
in
mov
dec
sbb
call
outsl
inc
xlat
xchg
sahf
sbb
or
std
sub
push
hlt
jbe
inc
call
pop
push
leave
mov
or
mov
shrl
test
push
inc
std
outsl
adc
es
adc
pop
mov
pop
add
testb
pop
roll
mov
dec
cmc
mov
jbe
sub
int
mov
imul
loope
scas
call
call
push
cmp
test
push
or
xchg
sub
inc
sbb
pusha
stos
les
insb
sbbl
rcrl
and
out
mov
jb
fwait
movsl
lret
pop
insb
jge
jg
in
sub
repnz
cmp
jg
and
test
adc
cmp
mov
inc
push
movsl
pushf
cwtl
jmp
stos
push
inc
jmp
fildl
sbb
sbb
and
insl
xchg
stos
mov
or
adc
add
cli
dec
icebp
stc
add
sbb
xchg
sub
shl
mov
pop
pop
add
call
subb
jae
xchg
imul
bound
in
fisttpll
outsl
jg
std
xchg
lods
das
sub
sbb
movsl
push
scas
mov
fistpll
jle
call
outsb
outsl
mov
mov
pop
or
sub
pop
mov
scas
mov
in
mov
push
cmp
icebp
sub
ret
inc
and
add
pop
ljmp
xchg
cmpsb
scas
jecxz
outsl
arpl
pusha
out
movsl
sub
arpl
std
xchg
cli
push
pop
ficoms
xchg
out
fnstsw
fld
loop
imul
stos
scas
mov
cmp
add
daa
pushf
in
faddp
jecxz
mull
and
xchg
jmp
mov
loope
and
andb
cs
add
in
cmp
in
clc
out
jg
fwait
jo
and
xchg
xchg
test
mov
push
dec
adc
inc
int
imul
mov
fcomps
aam
pop
cmp
scas
cmpsb
aam
push
fsubrs
out
arpl
or
loopne
pushf
mov
pop
jb
push
pop
add
pop
in
shl
mov
insl
pop
out
jnp
fwait
popa
jecxz
push
outsl
test
xchg
scas
sub
rcrl
jle
aas
movsl
outsb
dec
jg
xchg
mov
call
dec
mov
out
leave
mov
pop
roll
push
sub
insl
jmp
lret
dec
scas
fs
mov
cld
arpl
lods
fildll
pop
dec
push
out
fildl
xchg
test
ret
shll
outsl
fmull
ret
enter
nop
lods
aad
mov
lods
or
js
addr16
pop
fucomip
insl
outsl
cltd
out
std
xchg
ret
inc
mov
mov
push
mov
pop
pop
dec
jl
pop
push
in
mov
clc
xchg
cwtl
pop
aad
adc
es
xchg
or
and
xor
es
mov
js
fucomi
jle
sub
dec
sbb
push
and
pop
out
aas
and
mov
test
nop
add
arpl
inc
aas
xor
dec
sbb
mov
int
movsl
popf
insl
mov
pushf
data16
je
dec
or
jg
sub
inc
mov
pop
pop
addl
jmp
scas
jmp
xor
inc
pusha
shlb
or
cs
bound
movsl
push
cmp
xor
imul
sbb
sti
push
push
cmpsb
les
xchg
mov
js
xor
sub
sub
loopne
jne
or
icebp
jle
popa
mov
inc
jl
call
add
clc
mov
enter
jb
sub
in
push
out
or
push
iret
dec
pop
decb
imul
mov
mov
mov
orb
and
fstpt
into
fistpll
push
mov
insb
int
sbb
stc
mov
fldl
add
arpl
jle
loopne
pushf
sbb
and
push
into
pop
xlat
ret
sub
movsb
mov
mov
fs
repnz
pop
ljmp
pop
mov
add
pop
xchg
cs
test
jecxz
daa
cmp
jge
out
and
mov
roll
fwait
or
dec
test
stos
movsl
ficoml
pop
repz
into
into
inc
sub
jno
aad
andb
pop
popf
dec
fsubrp
sub
dec
idivb
cmpsb
jmp
enter
clc
test
call
fsubp
int3
mov
mov
js
mov
pop
mov
cmp
aad
in
lahf
xchg
int
adc
addr16
test
popl
cmp
out
aas
pop
xchg
in
pop
sti
push
cmp
push
je
out
add
lret
xlat
adc
pop
cld
cmp
jae
das
imul
mov
out
popl
cmpsb
jge
xchg
dec
sbb
mov
add
cmp
cmp
and
int
add
pop
xor
lea
inc
mov
push
mov
outsl
jge
pop
dec
pop
xor
scas
pop
dec
jnp
jmp
outsl
rclb
fmuls
or
test
push
clc
mov
sbb
aam
xchg
out
es
lods
dec
push
or
push
push
jg
decb
and
ret
lahf
sbb
fists
lods
push
movsl
jno
push
or
pop
jbe
cmpsb
insb
fidivrs
jne
pop
pop
adc
push
sahf
xchg
push
cltd
pop
mov
dec
imul
lahf
jae
ja
sub
test
dec
idivl
test
sahf
xor
jne
mov
cwtl
out
cmpsl
out
jbe
outsl
int
jo
sbb
push
aad
or
nop
outsb
mov
jns
sbb
sbbb
dec
dec
fnstsw
mov
add
imul
xor
cmp
or
push
cmpsb
aad
add
pop
in
lahf
push
call
lock
jle
xor
ja
add
push
cmp
push
push
xor
sbb
xchg
ljmp
mov
mov
stc
movsl
and
ljmp
test
dec
push
enter
inc
mov
repz
int
les
arpl
ret
cmp
clc
and
or
fwait
pushf
enter
std
cmp
push
cmpsb
outsl
pop
fisubl
out
aas
cmpsl
dec
dec
nop
fbld
test
add
cmpsb
dec
add
jae
jp
rep
dec
push
fsts
sub
movsl
cmp
pop
stos
ror
and
out
into
dec
outsl
pushf
jb
adc
add
sub
add
rorb
idiv
push
sbb
xor
xorb
pop
lock
cmpsb
add
out
jno
xor
nop
mov
inc
mov
jmp
dec
xchg
subb
popf
rclb
and
mov
mov
xlat
jge
sbb
into
imul
cmp
mov
shr
insb
cltd
orb
test
mov
daa
test
mov
outsb
dec
popa
decl
insb
jmp
or
inc
sub
sbb
rol
fisttpll
aas
xchg
loop
mov
aam
jmp
sbb
imul
mov
rcrl
or
clc
mov
btl
sbbb
ret
sub
and
fstl
sub
jne
pop
dec
sahf
frstor
js
xor
daa
or
jne
cwtl
mov
pop
jnp
pop
mov
movsl
js
and
and
cmpsl
arpl
aas
fldl2e
cmp
pop
mov
mov
pop
pop
cmpb
sbb
lret
pop
add
xchg
mov
sahf
and
push
fucom
xchg
mov
out
loope
popf
stc
mov
mov
push
sbb
push
outsb
clc
sbb
cmpsb
push
sahf
outsl
sbb
dec
bound
in
push
icebp
sub
insb
pop
dec
adc
pushf
sti
incb
cli
jmp
cmp
jae
mov
xchg
push
insb
mov
in
faddp
insb
or
daa
shl
aad
mov
inc
into
cmpsb
andb
xchg
pop
out
or
mov
aas
or
fstps
add
push
jnp
jne
and
pop
jne
mov
nop
sub
pusha
push
lods
push
out
push
sub
mul
pop
imul
out
addr16
push
into
pop
ja
dec
repz
in
pop
jbe
cmc
dec
mov
cmpsb
scas
mov
mov
incl
in
addb
pop
int
cmpsb
jne
and
inc
or
xchg
pusha
sub
push
cmpsb
int
inc
test
dec
in
imul
adc
pop
push
mov
mov
cmpsb
scas
out
pop
pop
or
cmp
sub
adc
into
les
mov
sub
scas
mov
cltd
cmpsb
mov
inc
jp
xchg
push
in
sahf
jbe
addr16
dec
cmp
aad
xlat
das
call
les
sbb
add
ljmp
sti
ja
cltd
inc
decb
loope
mov
dec
mov
add
dec
jecxz
mov
test
xchg
and
outsl
subb
das
js
fstpl
push
mov
sub
xor
int3
frstor
outsb
pusha
shrl
loop
ret
aas
shlb
push
lret
sbb
sub
mov
fwait
outsl
enter
rcr
jmp
xchg
cs
add
cmc
and
insl
andl
jbe
insl
dec
pop
lahf
enter
shrb
int3
movsl
in
or
imul
mov
xor
xor
xchg
outsb
icebp
jecxz
and
mov
jg
test
mov
jmp
add
sub
xchg
std
cmp
gs
pusha
aam
pop
mov
dec
sbb
outsl
xlat
dec
add
jl
adc
pop
lods
jecxz
xchg
test
mov
je
jmp
into
dec
test
ror
cmpl
or
dec
pmaxsw
or
lods
fimuls
push
fs
pusha
jl
in
mov
inc
pusha
jle
jecxz
sub
xchg
int3
outsl
inc
test
push
repz
cmp
mov
popf
sub
and
int
out
outsw
lcall
enter
mov
jno
or
xchg
cwtl
sub
out
es
jo
sub
outsb
outsl
call
lds
negl
pop
jne
lret
out
dec
push
inc
icebp
notb
push
and
xchg
jae
clc
shr
mov
fbstp
movsl
stc
pop
data16
lods
inc
dec
or
jb
pusha
jne
mov
mov
iret
fwait
push
sub
fisubrl
fwait
sbb
mov
imul
pop
andl
mov
subb
cld
movsl
lahf
pop
mov
ljmp
into
dec
das
sub
pop
xchg
pop
fisubrl
call
sub
add
fistpl
imul
test
stos
inc
mov
jbe
mov
fcmove
adc
test
or
test
enter
cmpsl
psubw
sub
loop
mov
popa
notb
dec
mov
push
inc
test
cwtl
inc
test
iret
add
jb
imul
dec
fs
outsl
outsl
shll
sub
pop
sub
pop
fucomp
imul
imul
sub
cmpsb
clc
loopne
cmp
mov
fwait
sahf
sub
mov
les
push
hlt
movsb
mov
stc
aad
das
rclb
dec
xchg
push
pushf
hlt
rcrl
aad
or
movsb
cmp
xchg
cwtl
mov
sub
in
pop
fs
add
in
xchg
outsb
cmp
mov
fildll
rcr
fstps
dec
cmp
and
std
fcmovnbe
fsubrs
xchg
test
adc
imul
in
sub
push
jns
and
imul
stos
inc
outsl
sbb
icebp
mov
push
inc
ffree
push
mov
mov
je
cltd
inc
cmp
pop
es
fidivrl
in
cmpsb
inc
ljmp
jg
jecxz
lods
dec
mov
jge
lret
fildll
add
xor
sbb
test
inc
out
inc
std
fidivl
sbbb
mov
in
sub
leave
dec
adc
adc
mov
xor
mov
outsl
sub
icebp
xchg
jp
mov
sub
jmp
pop
les
lods
popa
bound
or
push
dec
subb
jle
js
mov
sub
xchg
jge
push
mov
pop
iret
push
push
jmp
push
dec
clc
pop
aad
adc
addr16
fildll
mov
popf
call
shlb
hlt
cmp
into
push
fst
xchg
aaa
mov
xchg
jecxz
mov
mov
addr16
sub
cwtl
mov
pop
cmpsl
pop
dec
std
xchg
lea
xchg
push
inc
inc
into
add
out
aad
xor
and
dec
rcrl
adc
rorb
test
test
inc
add
mov
inc
mov
daa
add
insl
add
sub
es
or
jle
mov
fisttpl
mov
push
inc
add
sbb
rclb
pop
ja
jmp
insb
xor
out
push
push
out
rcrl
jg
or
pop
popf
lods
outsl
outsb
sbb
shlb
cmpsb
arpl
cmp
pop
in
mov
filds
in
pop
xor
dec
imul
fistps
or
divb
js
push
in
pop
or
scas
outsb
push
cmp
popa
cs
jo
sarb
mov
psraw
cwtl
out
push
mov
push
and
aaa
jmp
pop
mov
push
fcomps
in
pop
xchg
mov
jl
mov
fsubs
jne
pusha
dec
daa
addr16
lahf
lcall
adc
and
es
fdivrs
out
icebp
orl
out
lods
bound
rorl
sub
cmpsb
pusha
inc
outsl
fcom
or
mov
shlb
or
cmpsl
call
adc
sti
lods
jno
mov
push
lods
sub
fistpll
fdivrp
push
add
sub
mov
ljmp
ss
dec
jne
test
imul
scas
mov
push
push
mov
push
mul
and
mov
xlat
jp
xchg
bsr
test
mov
aas
xchg
stos
add
mov
movb
cmp
pop
jae
sub
adcb
pop
bound
fs
pop
jae
inc
and
jb
cmp
sbb
dec
push
sarl
add
imul
sub
int
cmp
ss
insb
js
sub
insb
imul
aaa
add
pop
pop
cmp
cmp
dec
out
in
xchg
and
scas
push
fidivrs
imul
push
mov
loop
dec
inc
mov
pop
pop
push
loopne
iret
dec
xchg
cmp
dec
mov
lods
test
push
repz
scas
outsb
arpl
int
pop
mov
or
sti
imul
jnp
dec
xchg
or
adc
addr16
add
bound
mov
outsl
inc
out
xchg
aam
and
lea
inc
lods
outsl
scas
lock
mov
cmpsb
decb
mov
cwtl
std
cmp
sar
lret
fnstcw
in
pop
push
test
sbb
nop
imul
lret
js
sub
fcoms
cmp
int
jle
insb
push
pop
imul
cmpsb
leave
insl
xchg
fwait
add
movsl
sub
cmpsb
jge
pop
adc
xor
loop
leave
mov
push
jecxz
cmp
pop
imul
jmp
jnp
fldcw
out
cmpsl
xor
sbb
jb
enter
xchg
lods
mov
sahf
dec
int3
mov
loopne
xor
sub
pop
dec
mov
jg
and
in
cmpsb
push
cmp
adc
xchg
fcomp
dec
adc
push
iret
into
shl
imul
pop
dec
ret
sbb
sub
mov
fwait
ljmp
fldt
outsl
sbb
ror
inc
sti
xorb
jl
aaa
or
push
testl
mov
mov
jecxz
cmpb
or
pusha
movl
cmpsb
jb
sub
sub
jb
test
movsb
inc
out
push
sub
cld
inc
add
and
xor
jne
xchg
cmpsb
adc
cmc
repz
popf
lcall
xchg
cmpsl
stc
sarl
jmp
mov
cli
and
sbb
gs
or
pop
fcmovne
and
pop
mov
push
test
dec
or
lret
notl
xchg
in
mov
enter
in
cmpsb
xchg
jmp
inc
mov
insb
data16
xchg
xor
subl
sub
lret
push
mov
sub
movsl
adc
andb
jl
inc
inc
dec
inc
cmp
xchg
test
xchg
cmc
sub
pop
xchg
out
jae,pn
mov
xchg
sahf
insl
adc
sub
cmp
shrb
sbb
outsl
daa
dec
add
inc
sbbl
cmpsb
pushf
ret
xor
je
jmp
sarl
aaa
dec
inc
out
ucomiss
mov
xchg
mov
and
jno
pop
pop
test
jnp
enter
btc
jg
lods
inc
or
outsl
loop
mov
lods
fnstsw
imulb
push
mov
mov
mov
inc
test
sub
mov
xlat
sti
das
fldl
add
lods
je
cmp
dec
std
out
out
mov
mov
fsubs
fs
shrl
inc
push
jg
scas
xor
scas
sbb
lods
stos
out
repz
cmpsb
test
fwait
fs
in
or
cmp
fldt
sub
sarb
gs
mov
sub
or
jnp
push
cmp
in
push
add
push
push
mov
jb
push
fwait
inc
push
inc
js,pn
imul
xchg
lods
mov
fisttpl
cmpb
insl
arpl
stc
inc
dec
adc
inc
mov
xor
pop
fldt
sti
jo
cmp
bound
sti
dec
dec
add
fldt
mov
repnz
fldcw
mov
sub
mov
xor
dec
lds
loopne
lods
ja
push
adc
pop
ss
push
lods
int
mov
add
pop
sub
ja
push
sbb
jns
add
mov
andb
lret
push
sub
int3
int
or
jl
lea
in
imul
stos
mov
adc
xor
cmpb
add
in
imul
test
push
cmpsb
scas
xchg
xchg
sti
dec
aas
jbe
mov
xchg
aad
sti
cmpsb
fs
lods
repnz
inc
jmp
mov
xchg
arpl
or
sub
cmp
mov
add
pop
rcrb
add
push
xor
push
mov
shlb
and
pop
dec
test
adc
jg
jmp
mov
xorl
fwait
xchg
mov
pop
das
sub
js
mov
pop
aaa
mov
xor
fildl
jb
dec
add
cwtl
in
pusha
jl
xchg
mov
sub
and
jmp
mov
shrb
lret
rorl
add
cwtl
pop
jl
outsl
std
ss
lret
inc
in
sbb
scas
pop
test
fcoml
mov
xchg
sub
es
sub
out
mov
pop
lahf
jnp
addb
mov
sbb
adc
jb
add
and
add
in
inc
add
push
imul
stos
push
jecxz
push
test
jge
scas
shrb
fildl
fists
xorb
cmp
cmpsl
pop
popf
imul
xlat
cmpsb
cli
fwait
mov
imul
arpl
push
mov
and
fists
mov
lock
inc
data16
fisubs
inc
xchg
inc
popf
mov
mov
sub
jmp
shll
xor
scas
outsl
fwait
mov
xor
sub
outsl
dec
jnp
sbb
sbb
in
enter
repz
dec
test
adc
cmp
cmp
into
push
pop
cld
iret
adc
subb
gs
adc
pusha
sub
roll
lds
js
pop
gs
outsl
dec
inc
and
fldcw
pop
lods
repz
inc
sub
int
inc
xchg
push
lods
sbb
pop
neg
sub
add
xchg
mov
movsl
pushf
xor
fwait
cli
dec
daa
das
adc
pop
sub
ret
jae
in
dec
and
adc
es
std
mov
mov
sub
jns
outsb
inc
outsl
repz
mov
in
jo
subb
lods
das
icebp
test
mov
aaa
in
stos
cmp
mov
xchg
fdivl
push
out
mov
stos
or
arpl
xchg
push
inc
jmp
imul
mov
in
cmp
jno
addl
cmp
roll
xor
xchg
xchg
jle
scas
dec
outsw
test
leave
mov
lds
imul
mov
mov
cltd
lods
fsubs
imul
subb
xor
sbb
mov
mov
pop
inc
test
xor
and
jo
mov
fildll
outsl
les
or
push
test
cmp
xor
cmpsb
insb
data16
push
cmpsb
hlt
push
pop
inc
jp
fistl
add
jnp
dec
sub
xchg
lods
sub
cmpsb
pusha
push
rcll
pop
jns
dec
inc
jecxz
pop
inc
into
lcall
stos
cmpsb
inc
cmpb
dec
push
loop
iret
pop
les
sbb
sub
shlb
mov
jmp
xor
incb
push
dec
mov
mov
rcll
lret
inc
jge
fcmovnbe
mov
mov
shrl
imull
ljmp
arpl
cmpsb
xchg
les
jg
sbb
push
jne
popa
out
jb
cmp
cs
lock
xor
mov
or
pop
out
add
cmp
lahf
sub
cmp
dec
lock
cmp
ss
dec
pop
mov
dec
xchg
pop
out
inc
pop
xchg
xor
pop
lcall
lods
cmp
inc
test
mov
dec
inc
mov
repz
sbb
lods
es
ds
xor
aam
fimuls
dec
bound
movsl
in
sbb
sahf
xor
bound
push
xchg
cmpsl
mov
aam
jmp
or
push
push
or
inc
lods
test
mov
ffree
mov
xchg
ret
out
je
outsl
dec
rcll
and
xchg
loop
in
add
int
mov
orb
out
and
movsl
dec
xchg
popf
xchg
test
xchg
mov
mov
mov
jl
hlt
xchg
bound
sbb
add
repnz
xchg
mov
int3
mov
pop
sub
gs
xchg
mov
movsl
lea
ljmp
int3
add
stos
loope
fistpll
mov
mov
ss
sbb
xchg
int3
orb
aas
cmpsl
or
ljmp
and
jo
dec
adc
push
pop
std
inc
add
pop
movsl
imulb
mov
aad
imul
adc
sbb
in
mov
add
dec
pop
outsl
cltd
stos
test
lcall
or
sub
movsl
xor
mov
cmp
int
outsb
cmpsb
mov
stos
jecxz
mov
test
test
nop
loope
pop
xlat
outsl
leave
rcrb
pusha
mov
inc
fwait
pop
mov
xchg
xchg
cltd
loopne
jno
xchg
xchg
dec
popw
pushf
stos
and
dec
in
outsb
mov
mov
les
scas
or
mov
into
loope
sub
sub
jo
lock
jbe
or
cmpsb
lahf
bound
iret
es
mov
sub
cmpsb
test
pusha
cmp
cwtl
movsb
mov
movsb
jge
icebp
fcomip
push
imul
pop
cs
imul
cmpsl
sub
das
dec
pop
movntq
out
jne
call
add
loop
dec
sbb
cmc
dec
pop
sub
sub
xor
cmp
cwtl
js
mov
data16
or
mov
pop
pop
inc
outsl
jns
insb
insb
in
push
lcall
test
pop
aad
jbe
popa
frstor
in
pop
arpl
adc
add
leave
shlb
in
inc
imul
popa
mov
push
pop
xor
into
fdivr
cmp
fs
xor
adc
jecxz
sbb
orl
dec
xchg
test
mov
dec
or
imul
arpl
and
andb
clc
ljmp
xor
test
in
fistps
sub
outsl
sbb
add
pop
orb
pushw
sbb
int
mov
in
clc
iret
add
mov
gs
dec
xchg
mov
dec
cmpsl
ds
sbb
rcrb
pushaw
xchg
addr16
sbb
outsl
cmpsb
adc
dec
ss
aad
leave
push
mov
aad
mov
pop
andl
push
inc
lods
sub
dec
aad
mov
lods
push
dec
imul
jb
push
insl
test
addr16
sbb
int
scas
das
in
sub
test
in
or
insw
mov
in
into
and
push
sub
insb
dec
lahf
js
dec
pop
sub
push
or
imul
dec
xor
insb
lods
push
int
iret
dec
push
ljmp
scas
dec
in
lods
insb
mov
stos
insl
ljmp
popa
push
push
lret
outsb
stos
mov
js
stos
insl
in
jno
push
mov
dec
inc
lods
push
fcompl
imul
outsb
popf
scas
je
in
outsb
lods
outsl
push
jbe
call
lods
test
dec
int3
scas
movsl
outsb
mov
mov
mov
jmp
adcb
sub
dec
mov
aad
lret
lret
cltd
mov
lret
or
hlt
outsl
sub
int
stos
jle
lods
in
sub
push
shrl
sub
out
imul
and
imul
insl
das
test
insl
imul
jmp
sub
dec
enter
stos
xchg
sub
loope
lret
leave
int3
outsl
pop
outsb
scas
pop
lods
mov
imul
insb
or
jecxz
jmp
or
test
std
outsb
outsl
mov
adc
je
dec
jecxz
jge
imul
pop
mov
pop
push
shrb
and
dec
dec
jo
dec
imul
out
dec
lods
mov
in
fmull
int3
xchg
movb
dec
or
ljmp
int3
lret
test
iret
insl
lret
mov
shrb
stos
and
insl
fxam
mov
test
insb
gs
movsl
in
test
int
stos
dec
mov
stos
dec
dec
out
rorl
sub
sub
lea
dec
dec
dec
and
sub
iret
test
mov
imul
mov
out
or
aas
std
test
cmpsb
andl
pop
pusha
mov
sub
lds
xor
pop
xor
dec
sub
cmp
mov
sti
sbb
pop
push
xchg
imul
out
push
test
les
lds
sub
aas
and
pusha
call
sub
hlt
bound
sub
dec
xor
lret
mov
negb
lods
mov
mov
inc
adc
dec
lret
cmpsb
xchg
in
sub
mov
stc
cmpsb
bound
mov
and
mov
xchg
lret
std
sub
std
and
xor
mov
iret
mov
push
test
arpl
outsl
popa
adc
xchg
es
mov
adc
sbb
xchg
cmpsb
stos
sub
push
push
or
jecxz
js
fwait
and
lcall
add
xchg
inc
outsl
jo
and
sub
mov
outsb
scas
inc
mov
jl
jle
clc
cwtl
test
lret
mov
cmp
jmp
mov
fnsave
lods
xchg
xchg
cmpsb
test
push
test
es
insl
sub
push
cmpsb
mov
xchg
sub
jg
pop
in
mov
leave
rcll
out
mov
out
add
repz
cmpsb
loope
fsubrl
mov
imul
scas
sub
arpl
aad
outsl
lods
fstpl
fsubl
lods
negl
cmp
sub
out
popf
fildll
sbb
lea
imul
cmpsb
cmp
fmuls
gs
dec
call
call
cli
adcl
adc
xor
jecxz
test
pop
cvtps2pi
or
cmpsb
aas
dec
sub
outsb
in
adc
jecxz
pop
test
dec
push
stc
jo
mov
outsw
imul
jge
or
cvtpi2ps
outsl
or
or
loope
xchg
jp
data16
inc
xchg
jae
adc
adc
jmp
mov
sub
push
loopne
mov
mov
fstpl
jnp
add
mov
cli
jle
jmp
jge
in
pop
push
scas
push
jg
cmpsb
xchg
ficoml
sub
cmpsb
add
test
scas
or
lods
inc
mov
lret
pop
sbb
orl
add
fisubrl
jns
sbb
inc
xchg
and
xor
sub
ss
jp
ljmp
cmc
popf
call
cmpsb
daa
sbb
cli
sbb
outsw
or
adc
in
xchg
mov
mov
aad
insb
fcompl
bound
pop
xchg
dec
dec
inc
fs
jge
and
lods
push
imul
lods
xor
pop
fsubs
cltd
loope
sub
pop
clc
jle
and
movsl
mov
sub
push
add
mov
loop
lds
cmc
leave
mov
xchg
fists
add
add
cmpsb
xor
sub
dec
lock
jo
je
xchg
clc
sub
div
adc
cwtl
pop
lcall
sub
popf
pushf
call
cld
popf
iret
pop
mov
fdivs
das
nop
daa
movsb
sub
xchg
test
mov
push
jmp
test
int
adc
dec
pop
mov
mov
dec
bound
fnsave
in
stos
xor
mov
sahf
arpl
rcl
xlat
popa
fildl
and
xor
dec
fstps
xchg
out
movsl
or
in
adc
mov
mov
test
xor
cmp
es
outsl
ljmp
inc
icebp
stos
pop
dec
or
outsl
cmp
icebp
lds
mov
mov
dec
test
push
in
or
das
es
loop
and
pop
bound
pop
notl
scas
clc
movsl
sbb
jmp
or
sub
jmp
bound
mov
arpl
adc
in
add
pop
inc
mov
sbb
fstpl
or
pop
fildll
and
xor
shl
sahf
cld
sti
mov
dec
xchg
daa
je
rcrb
push
sbb
push
cmpsl
xor
xor
pop
ret
mov
adc
jg
and
pop
mov
fstl
cmp
adcl
jmp
icebp
outsl
sub
mov
push
mov
roll
jmp
dec
in
ret
loop
mov
inc
or
rcll
mov
sub
imull
out
add
movsb
push
outsl
adcb
dec
inc
dec
aad
jg
mov
mov
push
hlt
movsl
outsl
pop
jne
jecxz
fstl
pop
jbe
and
or
cs
imul
insl
outsl
idivb
fcoms
add
mov
push
cld
xchg
push
lea
imul
xchg
pop
shr
sbb
cmpsb
sub
pop
push
movb
inc
lods
movsl
cli
test
mov
jne
aam
lods
fs
pop
daa
jne
jle
lcall
popf
xlat
out
mov
out
in
fiadds
or
add
ret
sahf
dec
cmp
pop
pop
push
movsl
cmp
adc
mov
cltd
clc
dec
dec
xchg
pop
jne
mov
addr16
test
cltd
cmp
bound
sub
pusha
pop
cmp
add
pop
inc
sub
sub
ret
push
es
stos
insb
shlb
xchg
sbb
sar
add
xchg
inc
xchg
cmpsl
icebp
and
sub
cmc
xor
pop
mov
in
xchg
pop
pop
repz
push
cmc
outsl
out
es
adc
or
xlat
pop
mov
sub
fidivs
mov
adc
cmpsb
dec
enter
shll
std
push
xlat
xchg
addr16
add
out
pop
test
sub
or
jno
sahf
jmp
pop
mov
int
popf
or
xchg
mov
imul
ja
out
scas
shll
sub
pop
ror
test
push
dec
bound
push
js
pop
inc
xor
aad
adc
cld
jmp
int
dec
outsl
pop
cwtl
fidivrs
insl
mov
pop
js
iret
and
pushf
mov
add
cmpsb
lods
cmpsb
popa
js
mov
cmpsl
out
mov
aad
pop
in
in
mov
sub
mov
add
mov
hlt
movsb
add
scas
ret
addr16
cmpsb
dec
mov
push
sbb
repnz
ret
mov
fcomps
clc
je
cmp
mov
xor
out
fists
cltd
out
ja
data16
cmc
outsl
push
call
loop
sub
outsb
es
push
scas
js
or
repnz
mov
nop
pop
test
push
adc
dec
imul
jmp
gs
cmpsb
imul
dec
rcrb
xor
sub
sub
ss
out
or
movsl
pop
insb
insl
out
jle
sbb
in
das
or
mov
mov
popf
or
enter
std
int
faddl
pop
ds
iret
add
loope
test
pop
imul
xchg
cmpsb
adc
jl
push
fcmovbe
and
fcmovnbe
dec
mov
rol
fld
pop
jecxz
inc
aad
add
insb
popa
inc
inc
sbb
popa
inc
xchg
inc
leave
repz
sbb
mov
subb
sbb
mov
jecxz
insb
or
pop
jg
xlat
lcall
shr
je
pushf
mov
cmpsb
subb
lret
push
sub
mov
or
cmp
mov
subl
mov
push
sub
or
sbb
mov
jp
mov
test
loope
pushf
and
inc
mov
movsb
in
inc
cli
call
xchg
pusha
repnz
cmp
in
push
fdivs
js
add
aad
add
sub
sahf
and
jg
test
xor
ljmp
or
enter
movsb
in
cltd
mov
cmp
dec
inc
sbb
add
fs
imul
pushf
mov
cmp
mov
xor
outsb
movsb
inc
mov
mov
dec
and
jge
push
or
push
loop
movl
jmp
xchg
lods
cwtl
mov
movsb
dec
aas
in
push
pop
xchg
dec
sub
jne
arpl
pop
sbb
mov
cmpsl
push
fs
dec
mov
or
cmpsb
jb
push
pusha
test
js
repnz
add
fnstsw
fsubl
sub
sub
cld
xor
shrl
sbb
or
outsl
mov
loopne
js
dec
sub
lds
jge
pop
jmp
je
xchg
insl
pop
sahf
aad
inc
lods
add
mov
mov
sti
arpl
and
fdivrs
iret
les
fmull
dec
imul
enter
mov
mov
jl
and
pop
stos
lret
mov
adc
ds
outsl
pop
cmp
dec
test
cs
pop
out
lret
sub
lahf
dec
push
or
ljmp
sub
mov
in
xchg
lret
jbe
cmp
scas
scas
out
popa
inc
adc
stos
adc
ds
aam
clc
popa
xchg
cwtl
jecxz
test
std
and
and
and
adc
and
dec
fistpll
sbb
and
push
gs
outsb
pushf
dec
neg
scas
dec
adc
arpl
lds
sub
mov
aam
and
icebp
and
dec
adc
leave
pusha
out
sub
pop
out
sbb
fimuls
xor
sub
sub
fcmove
mov
je
outsl
jecxz
mov
cmpsb
fistpll
push
fnsave
ja
ret
rol
jbe
pop
shrl
jl
or
das
push
rcr
loope
fs
inc
fsts
mov
dec
inc
push
mov
pop
test
jne
lea
jo
outsl
shl
pop
jne
mov
nop
mov
add
mov
dec
dec
ficoms
loope
pop
or
jne
and
inc
fmuls
mov
jg
sub
stc
jb
or
scas
mov
in
xchg
outsb
jecxz
mov
inc
mov
enter
xchg
shlb
insl
add
dec
popf
xchg
jo
ficompl
pop
or
xor
pop
cmpsl
mov
xchg
nop
outsl
sbb
faddl
add
cmp
dec
jle
mov
scas
aam
neg
insl
shr
lret
icebp
push
insb
sti
movsl
pop
out
stos
inc
and
and
push
frstor
dec
les
out
xlat
mov
js
and
sbb
push
leave
and
imul
push
outsl
fst
and
dec
jecxz
addl
mov
cmp
fstl
test
pop
imul
pop
rclb
int
lock
std
cli
outsb
or
jne
test
fucomip
jne
es
adc
fwait
cmpsb
adc
xor
and
add
in
shll
push
sahf
cmp
nop
adc
mov
stos
push
test
popf
arpl
leave
outsl
repnz
loope
cmc
rolb
push
pop
xor
mov
movsl
imul
ljmp
fs
fistps
pop
cs
sti
xchg
sub
sbb
out
mov
xor
sti
lret
ret
in
fstl
mov
xchg
fisubrs
je
mov
cmp
imul
loope
insl
mov
out
mov
ror
push
call
or
cs
sub
and
pop
add
mov
push
repnz
out
jb
pop
sbb
loop
xor
data16
push
call
jbe
lea
in
mov
out
cs
add
adcb
inc
sub
jle
jne
incb
movsl
sbb
inc
out
or
xchg
out
mov
adc
outsb
out
adc
loop
inc
xor
stc
fstpl
fs
xor
daa
or
pop
mov
clc
sub
jg
sub
out
pop
fisttps
xchg
mov
xchg
pop
outsl
jmp
scas
dec
outsb
fisubrs
fs
cmpsl
jbe
sub
sub
adc
and
jbe
jo
les
cltd
fimull
fcompl
pop
push
sar
jmp
pushf
push
mov
inc
mov
or
addr16
lret
cmpsb
xor
and
outsb
repz
mov
jp
mov
jge
scas
addr16
int3
sahf
insl
inc
fsts
pop
pop
outsl
repz
cmp
or
shl
cmpsb
add
mov
pop
or
mulb
inc
or
in
pop
inc
movsl
lcall
inc
es
pop
imul
push
xor
mov
std
ss
in
pop
inc
fdivr
inc
sub
shlb
loope
inc
andl
or
fsts
in
push
pop
or
lds
xchg
pop
cmp
fwait
popf
fisttpl
pop
jbe,pt
mov
pop
pushf
and
push
ss
call
lret
movsb
into
add
inc
in
cmpsl
inc
cli
add
or
jbe
mov
movsl
mov
sysexit
xchg
xlat
mov
call
mov
cmp
outsl
enter
filds
loop
sub
es
dec
mov
arpl
outsb
sub
imul
fisubs
mov
pop
clc
leave
scas
mov
or
sub
push
pushf
clc
mov
das
cmpsb
or
pop
add
xchg
pop
push
outsl
lret
jecxz
mov
std
mov
xchg
aam
lret
dec
or
cmp
cld
cmp
clc
mov
in
mov
call
nop
jb
adc
push
js
addl
pop
shll
clc
and
shr
xchg
mov
inc
or
testb
sub
nop
inc
cmp
mov
pushf
aam
mov
sahf
mov
shl
mov
sbbl
imul
lods
jbe
rorl
sub
lods
xchg
lock
gs
in
iret
xor
mov
mov
stos
es
mov
in
movsl
lea
insb
mov
pusha
sbb
pushf
push
xor
and
cmpsb
lret
bound
inc
pusha
das
popf
fisttpl
dec
das
xor
add
and
lcall
mov
shrl
cmp
sbb
stos
dec
pop
sub
xlat
scas
rorl
sub
pop
and
cmpsb
mov
xchg
pop
xor
adc
xchg
test
jne
mov
sbb
cmp
aas
movsl
sub
cmpsb
or
sbb
push
outsb
sbb
cmp
and
arpl
pop
imul
es
mov
imul
out
movsb
popf
jecxz
mov
scas
xor
sub
addr16
xchg
cmpsb
es
mov
lea
adc
lret
fiadds
out
mov
mov
sub
ds
sbb
adc
sub
sbbb
push
int
orb
loope
or
lahf
inc
test
les
shll
mov
movsl
xchg
jl
jne
push
jl
dec
imul
sbb
outsl
xchg
adc
mov
ljmp
pop
stos
rcr
mov
lock
dec
xlat
xchg
and
pop
faddl
clc
mov
xor
aas
sti
leave
dec
xchg
pop
in
ret
repnz
push
sub
inc
mov
fdivr
int
fists
scas
jecxz
in
add
adc
xchg
lea
jnp
sub
fsubrl
push
inc
andb
sub
lea
pop
lea
iret
sbb
sub
jne
or
out
push
sahf
sbb
popl
aaa
jae
dec
in
imul
jmp
inc
fwait
das
push
fcomi
lods
xor
inc
dec
dec
and
dec
cmp
inc
sbb
lcall
and
in
enter
sbb
jle
imul
inc
jns
adc
out
cli
jle
mov
out
ds
mov
fsubp
hlt
xchg
mov
mov
scas
xor
lea
mov
or
loopne
in
lret
xchg
add
imul
xor
xchg
push
cmp
xchg
rcrl
cmpsl
pop
jb
out
sub
and
mov
pop
xor
leave
xor
int3
fistps
xchg
imul
sub
lcall
ds
mov
add
or
into
andl
fldt
stos
xor
dec
cmp
push
cmp
jnp
push
inc
ficomps
shl
scas
adc
jmp
and
xchg
dec
add
or
push
sub
inc
sbb
in
addr16
xor
decb
int3
mov
sbb
imul
pop
test
fcmovnbe
insb
add
mov
lcall
cmp
push
std
sub
gs
xchg
xor
add
cmpsb
sbb
pop
out
and
xor
cmpsb
inc
dec
jne
xor
xor
sub
int
imul
loop
icebp
jmp
push
jno
cld
jmp
fcoms
mov
pop
les
jmp
loope
push
cmp
fidivs
pop
mov
xchg
xchg
dec
out
data16
nop
popa
cmpsb
mov
or
xchg
pop
pop
shll
icebp
cmc
sub
ficompl
push
mov
and
cmpsb
pop
test
xchg
imul
fwait
lods
sub
iret
mov
and
jne
vmptrld
inc
stos
cmpsb
mov
mov
inc
or
mov
out
rorb
dec
and
outsl
mov
stc
fldl
pop
sub
in
mov
push
jns
mov
pop
xchg
outsl
popa
in
int3
jnp
int
rcrl
mov
scas
pop
ljmp
cmp
imul
rcrb
mov
cmp
pop
daa
mov
mov
test
rcrb
sub
and
jmp
mov
out
mov
mov
icebp
fucomi
in
mov
fs
xchg
sub
mov
sub
xchg
js
in
push
mov
movsb
aas
and
sub
pop
cli
dec
ja
in
and
shll
lds
and
push
shlb
lcall
xchg
out
imul
outsl
loope
mov
out
add
xchg
lods
ficompl
lea
mov
out
jnp
subb
jecxz
repz
sub
imul
movsl
mov
add
pop
lea
dec
fimuls
data16
in
test
out
xchg
cltd
inc
fisttpll
outsl
inc
les
dec
push
cltd
test
bound
stc
push
rcrl
xchg
movsl
jge
and
or
jns
push
pop
mov
out
adc
js
mov
leave
push
push
sbb
cli
xor
adc
add
pop
das
out
sbb
out
ret
out
cwtl
jg
subb
xor
in
inc
subb
xchg
mov
add
bound
test
out
ret
mov
mov
in
mov
scas
push
mov
leave
std
sar
popa
fildll
insl
dec
add
adc
repz
add
bound
mov
into
cmp
inc
sub
fstps
icebp
inc
jo
pop
mov
fadd
std
mull
mov
add
lahf
fwait
push
gs
nop
pop
xlat
and
lock
outsl
mov
cs
hlt
sub
or
cmp
in
aad
add
lret
cmc
jbe
test
adc
mov
or
and
js
sti
cmpsb
pop
pop
imul
push
fldt
outsl
pop
and
sub
cmp
fisttpll
add
push
outsl
sub
aaa
sbb
jnp
mov
and
sbbl
xchg
push
int
fcompl
cmp
xchg
cmpsb
xchg
sub
cmp
fsubs
in
out
cmpsb
test
mov
pop
lods
cld
jb
add
in
push
rcll
or
mov
test
scas
mov
mov
pop
xor
mov
mov
cmpsb
pushw
out
pop
stc
aad
xor
pop
cmp
cltd
imull
scas
hlt
js
sbb
jge
mov
bsr
pop
add
mov
in
imul
dec
repnz
out
jne
jb
outsl
mov
imul
sbb
and
adc
filds
cmp
insb
lods
pop
adc
aad
inc
ficomps
dec
pop
clc
pop
testl
dec
call
or
ror
call
std
pop
test
xor
imul
pop
pop
mov
insb
ljmp
push
push
dec
or
push
out
test
out
test
jg
cmc
rcll
pop
lock
sti
arpl
pop
pop
std
xor
mov
mov
push
pop
mov
fnstsw
adc
out
jne
lods
daa
mov
test
add
and
sti
cmp
lret
jl
lea
lahf
sub
or
xor
cmp
cmp
lret
dec
cmpsb
jecxz
fmull
mov
fcom
sbb
fisttps
sub
pop
call
outsl
pop
mov
rclb
outsl
repnz
add
push
cmc
stos
aam
movb
outsb
dec
or
imul
mov
hlt
mov
push
cltd
jl
sbb
pop
jnp
or
sub
cwtl
icebp
outsb
mov
shl
jp
or
push
add
mov
insl
fistpll
incl
inc
xchg
repz
mov
mov
shrl
jg
push
push
int3
mov
daa
scas
orl
ja
nop
mov
xchg
bound
inc
dec
cs
and
pop
dec
out
daa
or
sbb
push
test
xchg
mull
mov
pop
adc
int3
fisubrl
pop
incb
add
pop
outsl
push
mov
xchg
mov
jecxz
cmp
dec
inc
fisttps
dec
sub
lcall
dec
inc
pusha
jmp
xor
xchg
pop
in
aad
out
imul
push
outsb
ss
inc
xor
in
pop
jne
pop
div
incl
pop
mov
mov
loop
sahf
lods
imul
insb
movsl
fldl
arpl
ljmp
test
or
scas
fbld
jbe
shrb
xchg
mov
loopne
std
nop
add
jle
cmpsb
in
in
sbb
leave
dec
ja
outsl
cmp
in
out
inc
js
ret
pop
lods
das
or
repnz
es
sub
lods
imul
repnz
jbe
adc
dec
inc
out
xchg
bound
jmp
inc
out
cmp
mov
roll
mov
test
std
xchg
mov
dec
fwait
or
dec
adc
cmpsl
push
jg
sub
imul
add
outsl
loope
xchg
jb
cmpsb
push
adc
cmpsl
dec
das
and
dec
outsl
add
sbb
roll
push
sbb
fsubrs
loope
ret
in
imul
fs
or
mov
jecxz
jns
jns
adc
mov
das
inc
dec
and
adc
mov
mov
or
pop
sti
hlt
cmpsb
adc
mov
sub
mov
add
cmp
pop
outsb
dec
dec
cmpsb
jne
or
mov
pop
xchg
sub
lea
mov
sbb
jecxz
adc
gs
sbb
mov
jae
adc
aas
es
orb
xor
inc
push
sbbb
cmp
bound
rolb
subl
mov
pop
add
into
icebp
movsl
inc
pusha
cmp
pop
lcall
clc
sarl
push
mov
xchg
or
add
inc
fstps
or
jmp
sti
pop
subb
out
xchg
mulb
jns
mov
jp
add
lea
pop
outsl
jae
pusha
cmc
adc
mov
xor
push
mov
sub
mov
loope
lahf
mov
test
mov
gs
icebp
sbb
mov
mov
shll
xchg
ficomps
adc
push
or
xlat
jle
cltd
xchg
pushl
push
ds
dec
outsl
sbb
xchg
and
mov
and
cmpsl
loop
dec
mov
fildll
lret
cmpsb
dec
lret
pop
fld
sub
cmp
pusha
cmp
gs
repz
es
xor
hlt
mov
push
and
mov
aas
cs
or
jae
rclb
cmp
ljmp
pop
les
insb
test
xor
lahf
pushf
test
into
sbb
inc
pushf
outsb
xchg
push
jle
xorb
sarl
iret
test
or
sbbl
inc
jns
jno
in
stos
outsl
dec
fucomp
push
push
dec
out
xchg
cli
mov
inc
lret
pop
cmp
in
inc
roll
int
inc
mov
ja
mov
or
inc
shl
sub
push
mov
dec
aam
cmpsb
mov
adc
std
sub
ds
mov
sbb
loop
or
pop
xchg
ss
stos
int
jg
jnp
mov
ss
xor
or
lret
out
xchg
or
lret
lea
sub
and
outsl
fiaddl
pop
push
or
lret
cs
jne
idivb
addl
lahf
imul
fldenv
dec
xchg
sbb
or
cmc
scas
or
stos
cmp
xchg
xlat
es
movsb
dec
jmp
dec
xchg
xor
xor
out
cmpsb
sub
rorl
xor
mov
stos
imul
push
sub
mov
inc
dec
rcrl
push
xor
stos
popf
and
mov
mov
sub
imul
leave
dec
std
dec
aad
mull
rcr
mov
cmpsb
adc
xor
cmc
icebp
out
and
std
inc
cmc
aad
jg
jnp
test
jne
mov
imul
and
cmpsl
cmpsb
jle
jecxz
mov
dec
jb
call
cmpsb
shll
push
pop
imul
xor
roll
fildll
mov
inc
push
pop
sbb
pop
xor
out
or
and
dec
dec
pop
insl
out
pop
mov
mov
int
icebp
movsl
int3
outsl
adc
push
mov
jne
xchg
imul
stc
icebp
cmpl
outsb
dec
or
popf
jecxz
push
dec
inc
mov
lret
mov
add
dec
andb
xor
arpl
xchg
lods
mov
shlb
lea
shrl
cmpsb
mov
add
and
ret
cwtl
int3
xchg
xchg
adc
jbe
jl
add
nop
mov
mov
out
dec
int
cmp
icebp
push
jno
push
ljmp
mov
or
dec
mov
or
loop
into
imul
es
cmpsb
jp
stc
movsl
shrb
mov
cld
mov
adc
mov
or
or
and
lahf
daa
cld
cltd
mov
cmc
ds
mov
pusha
xchg
jle
outsb
loopne
or
dec
testl
jecxz
mov
ja
loope
xchg
sahf
stos
dec
cmp
ja
sub
adc
xchg
int
and
pop
lods
cmpsb
addr16
daa
xchg
push
fsubl
xor
sti
rcr
pop
cmp
idivl
loope
fnsave
mov
in
sbb
in
mov
sbb
pop
mov
add
daa
insb
jne
pop
jle
aam
pop
jge
insl
fildl
out
jnp
xorb
sbb
movb
push
mov
jo
jecxz
in
cmc
push
pop
cmc
jne
push
movsb
dec
outsl
enter
cli
xor
sub
pop
stos
outsl
faddl
inc
mov
movsl
lods
cmp
dec
bound
mov
xor
out
pushl
inc
jne
jmp
sbb
mov
bound
lods
mov
lods
and
jg
dec
js
mov
int3
stc
arpl
pop
pushf
aas
jmp
in
int3
je
and
std
in
mov
out
pusha
ljmp
test
xlat
sub
mov
jb
das
xchg
sarb
in
jle
ja
mov
cmpsb
jg
adc
xchg
es
mov
shr
inc
shl
fs
pop
arpl
pop
mov
add
fldenv
fadds
jecxz
mov
outsl
and
sarb
xchg
or
mov
push
xchg
out
lret
rcrb
sub
in
fisttps
dec
pop
mov
sbb
and
pop
xchg
push
jno
pop
imul
loope
nop
insl
inc
out
jnp
adc
push
pop
and
outsl
in
adc
arpl
add
sub
xchg
fidivs
lods
lea
das
and
cmp
push
movsb
xor
mov
pop
pop
xlat
hlt
data16
ja
stos
pop
outsb
mov
int3
adc
push
dec
test
pop
sub
pop
adc
mov
data16
movsb
out
xchg
mov
test
test
aaa
scas
das
or
lock
adc
push
rcll
cmp
adc
outsl
push
imul
fisttpll
push
gs
cmpsl
inc
lcall
test
stos
xlat
les
dec
cmp
lcall
out
mov
out
and
dec
jg
popf
pusha
inc
add
jae
mov
test
cmp
js
std
outsl
push
enter
mov
mov
fbstp
jnp
mov
or
pusha
mov
mov
es
fists
daa
ds
xor
sub
mov
xor
jno
lahf
mov
test
sbb
sarl
mov
lret
das
push
sub
out
mov
fnstcw
inc
xchg
cmc
insl
ss
fs
scas
or
out
and
jne
xchg
cmp
sub
fldt
aam
dec
movsl
lret
pushf
cmp
pop
mov
stc
stc
test
repz
lock
leave
jb
sti
pop
shrl
loop
loopne
aaa
dec
nop
inc
scas
cltd
hlt
lahf
icebp
add
rorb
jmp
idivl
dec
mov
xor
fs
out
insl
out
mov
call
loopne
inc
ljmp
leave
fnstcw
stos
mov
outsl
xor
mov
xchg
mov
in
stc
test
jne
pop
into
rclb
cltd
cmpsb
cmp
cmp
sti
daa
insb
test
mov
fbld
and
or
stos
lret
push
mov
push
cs
push
inc
jecxz
popf
mov
test
mov
mov
pop
shll
lods
test
sub
jbe,pt
push
popa
pop
outsb
and
xchg
jl
pop
iret
mov
movsb
int3
xor
mov
mov
cli
lods
in
ja
cmp
call
dec
repz
ret
ret
dec
fcomps
mov
cmp
pop
sub
rclb
sub
leave
out
incb
lock
xlat
lods
in
add
or
shrl
outsl
pop
ljmp
pop
lea
in
lods
rorb
test
aas
enter
mov
sub
xlat
pop
std
mov
mov
sbbb
sbb
or
or
outsb
stos
stc
loope
lret
dec
xchg
sub
xor
cs
cmpsl
sbb
mov
aad
imul
cmp
adc
cmpb
test
imul
push
mov
mov
inc
dec
pop
and
hlt
stos
sub
dec
inc
push
mov
leave
fcomps
fwait
dec
pop
dec
pop
xchg
sub
divb
outsb
jmp
stos
push
sub
mov
push
pop
dec
and
mov
les
insb
dec
mov
testl
ja
xchg
lods
dec
pop
cmp
cmp
mov
mov
in
lea
movsl
inc
mov
mov
xchg
pop
push
dec
inc
xchg
dec
push
gs
shr
inc
repnz
call
fstps
int
or
fcomp
xchg
outsl
pop
jle
inc
movsb
pop
add
xchg
push
psrlq
sbb
xchg
rcr
loopne
aas
fisttps
dec
pop
push
insb
out
in
scas
les
mov
sbb
mov
jg
and
jmp
js
or
int3
ljmp
mov
fstl
test
sub
or
lcall
das
rdpmc
insb
cmpsb
movsb
stos
movsl
outsl
sbb
fistpl
xor
mov
out
mov
int
shlb
aad
push
xchg
mov
or
das
imul
xchg
frstor
mov
nop
lock
scas
repnz
test
dec
jg
mov
into
xchg
stos
pop
test
and
push
dec
test
push
mov
inc
sub
jno
jl
scas
rcrb
int3
movsl
push
mov
dec
movsl
inc
cmpsl
repz
scas
xor
cwtl
fldenv
pop
stos
xchg
or
iret
mov
xchg
and
jne
xchg
or
insb
aas
mov
add
imul
pusha
ds
lods
cmpsb
jle
push
sub
or
mov
out
xchg
ja
cmc
and
rcrb
ja
or
jbe
adc
sub
mov
jno
xchg
mov
adc
dec
mov
inc
pop
add
xchg
add
in
dec
inc
lods
imul
test
and
shrl
dec
mov
outsb
mov
pop
cmpsb
in
push
sub
xchg
inc
rcr
ds
mov
and
sbb
fst
mov
dec
sub
sbb
fs
stos
in
lahf
mov
add
pop
imul
sub
lock
pop
fwait
repz
push
scas
sahf
mov
movsb
ss
bound
xlat
inc
sub
in
xor
push
andb
xchg
leave
sbb
sbb
cmpsl
test
pop
sbb
pop
mov
out
hlt
xor
push
js
and
rorl
clc
pop
xchg
out
push
mov
sbb
roll
push
cmpb
mov
mov
mov
inc
sub
test
xlat
test
lods
cmp
sub
fadds
xlat
xchg
mov
sub
nop
cmpsb
std
xchg
or
inc
loop
fcoml
jne
sbb
mov
push
cmc
or
lods
icebp
cwtl
xchg
fs
int
mov
jl
in
mov
push
cmpsl
aad
pushf
add
loop
cwtl
jb
fucomi
add
lds
jnp
andl
dec
jmp
mov
cmpsl
rcll
lret
fistpl
xchg
lods
mov
xor
scas
sub
es
pop
int3
cltd
dec
xchg
xchg
jnp
popa
cmp
in
cmpsb
mov
lock
sub
add
adc
xor
add
add
mov
inc
stc
pop
ds
outsl
push
roll
push
cmpsb
cld
mov
or
inc
mov
inc
lods
xor
and
lods
imul
test
pop
mov
jge
out
jp
cmpsb
jbe
xchg
sub
xor
pop
addr16
sub
push
push
xor
daa
popf
and
out
jmp
mov
pop
hlt
and
lcall
sbb
dec
xchg
pop
cltd
add
dec
cltd
xchg
sahf
mov
test
adc
and
dec
sti
jno
adc
stos
lods
or
movsb
ds
xchg
pop
mov
dec
sub
fwait
jmp
lea
shrl
pop
les
outsl
add
mov
stos
insl
mov
rol
cmpsb
xchg
int3
mov
jbe
and
lcall
dec
sub
jns
adc
outsl
pop
dec
sub
cmp
mov
test
dec
push
pop
xchg
xor
es
xor
into
jecxz
std
xor
bound
mov
repz
je
andl
rcrl
fsubrl
jnp
sub
neg
pop
push
mov
mov
fisttpll
lock
dec
pop
cmp
mov
es
js
push
add
pop
enter
xlat
out
int3
and
push
push
dec
pop
sub
out
mov
dec
xlat
out
cmp
jne
je
dec
xlat
shlb
fisubrs
loop
insl
push
in
pop
ret
fsubrl
ss
xor
cmpsl
lods
lods
dec
lods
mov
repz
mov
jo
call
jg
dec
push
cmpsb
aas
shl
decb
outsl
popf
xor
imul
pop
bound
adc
fildll
mov
xlat
mov
addr16
push
jnp
out
mov
cmpsb
cmp
jp
sub
pop
xchg
notb
xchg
push
loopne
cmp
add
movl
out
lea
shlb
cmpsb
pop
mov
pusha
ficomps
arpl
cmp
out
xchg
xchg
sbb
loopne
inc
xor
fwait
outsl
imul
sahf
cmpsl
in
insl
sub
pop
mov
rcl
lret
std
bound
pop
dec
dec
loopne
push
adc
lods
jle
xor
jns
xchg
mov
mov
inc
fnsave
sbb
loope
push
sub
adc
addr16
out
sub
xor
rorw
and
aad
pop
mov
bound
pop
sub
push
or
mov
orb
push
xchg
push
sbb
fsubrp
sub
shl
cmpsl
mov
mov
imul
sub
push
xchg
or
push
cmpsb
adc
xor
xor
test
test
or
popl
stos
mov
test
sbb
int
pop
mov
cmp
icebp
lods
jmp
frstor
insb
fisubs
icebp
push
sbb
add
js
data16
out
fs
sbb
xor
bound
movsl
add
ja
mov
lret
rcll
outsl
sub
pop
testb
mov
movsb
popa
movq
dec
adc
fsubs
xor
xchg
ror
stos
pop
scas
jle
jl
out
sbb
mov
jbe
and
std
cmpsb
stos
aam
std
lret
dec
lret
ds
sub
dec
add
cmpsl
bound
jns
jmp
fcmove
dec
push
jne
daa
lods
mov
jl
sub
icebp
in
cmp
mov
jne
and
push
sbb
aad
add
sub
jmp
mov
inc
in
xor
dec
pop
push
fwait
push
aaa
push
std
pop
add
xor
lea
iret
pop
loopne
mov
cmp
mov
out
pop
call
sub
cmpsb
pop
mov
fstpt
mov
out
test
test
cmp
push
je
cmp
cli
rolb
dec
sti
insl
sub
mov
insl
mov
stos
adc
in
jb
mov
cltd
ljmp
sarb
inc
sbb
mov
shlb
data16
mov
or
cmpsb
xor
outsb
imul
fsubs
xchg
div
dec
out
ss
ret
lock
jmp
sti
jb
dec
sub
shlb
sub
xor
jmp
lods
scas
inc
sub
imul
nop
cmpsb
es
dec
es
out
inc
mov
push
ficompl
daa
in
adc
cmpsl
in
es
int3
or
adc
xor
jle
xlat
in
das
lcall
pop
pop
xchg
mul
mov
xchg
jb
jl
sbb
aad
sarb
cs
fsubr
mov
dec
mov
mov
jne
dec
push
sub
sub
xor
jb
pop
dec
repnz
mov
fidivl
xchg
fcoms
mov
cmpsl
fildll
fisubrs
sub
lahf
outsl
inc
push
jp
js
add
sbb
imul
push
sbb
xorb
ds
mov
js
xchg
movsl
mov
leave
push
rcl
test
test
hlt
and
pop
ret
mov
jmp
imul
mov
loopne
xchg
mov
popf
outsl
iret
push
into
push
loopne
sub
push
or
dec
mov
out
imul
ljmp
xchg
add
cmpsl
or
or
repz
fsubr
mov
icebp
and
mov
push
jbe
enter
sub
xor
test
outsl
add
inc
mov
jnp
bound
popa
daa
outsl
cmp
lcall
cmpsb
mov
dec
inc
fisttpll
pop
xchg
outsl
sub
and
int3
scas
and
jns
std
shlb
imul
dec
pusha
add
imul
pcmpeqd
pop
xchg
add
insb
xlat
sub
lods
dec
dec
mov
sbb
repz
mov
lahf
pop
push
cmp
push
lahf
cmp
pop
test
xchg
psadbw
in
outsl
cmp
clc
sbb
push
aas
lock
andb
sahf
pop
lret
cs
adc
sarb
xlat
fsubs
or
push
out
and
xchg
rorl
push
pop
insl
fmull
sub
ror
icebp
xor
push
xor
dec
outsl
arpl
test
cmc
sarb
pop
dec
sbb
pop
lcall
sub
push
xchg
pop
adcb
dec
fwait
sti
insl
je
test
xchg
jmp
movsl
adc
and
lods
cli
jp
cmpsl
in
lods
pop
imul
movsl
adc
pop
jne
sbb
pop
pop
inc
dec
or
mov
inc
test
pusha
pusha
js
jecxz
outsb
out
adc
pop
xlat
cmpsl
insl
addr16
clc
mov
sub
cmp
fwait
jno
mov
loope
xchg
xchg
lea
out
iret
jge
sahf
das
repz
adc
inc
jbe
sbb
and
jb
outsl
jp
jl
adc
pop
xchg
push
sti
xchg
imul
fdivrl
jne
loope
stc
adc
stos
add
in
or
sarl
mov
sub
cmp
pop
add
aas
out
sub
pop
rorb
dec
fidivs
aad
push
ds
push
cld
inc
movsl
mov
mov
sub
imul
addr16
fs
fisttpl
add
imul
push
cltd
iret
xchg
cltd
push
lcall
test
pop
xchg
xchg
stos
fcoms
push
add
and
js
and
lock
lods
out
loopne
stos
add
std
and
aad
adc
xchg
std
mov
cmpsb
pop
insb
dec
sub
xchg
inc
pop
imul
push
es
cmpsb
hlt
push
mov
adc
shrl
decl
dec
dec
pushl
lahf
loope
lret
adc
add
imul
sbb
pop
adc
cwtl
xor
cmpsb
pop
pop
mov
lods
and
cmp
sti
dec
mov
dec
dec
xor
cmc
jbe
jns
fistpll
cmpsb
pop
scas
div
mov
dec
mov
jle
imul
sub
stos
iret
pop
outsl
or
imul
sub
fdivrs
dec
fstl
push
out
insb
cmp
push
xchg
sbb
lods
test
insb
mov
fstpl
ds
jbe
mov
mov
and
xchg
mov
cs
jo
add
mov
lods
fcomps
in
jne
sbb
dec
dec
daa
adc
push
inc
dec
outsl
mov
cmpsl
sub
aas
jmp
or
mov
scas
sub
inc
aam
int3
and
lgs
dec
lock
out
dec
mov
movsb
mov
pop
imul
add
addl
lds
sbb
int
mov
xchg
and
insl
or
xchg
pop
data16
lds
push
andb
stos
cmp
in
dec
jne
lods
cmpsb
xor
outsl
in
sub
or
mov
bound
xor
jne
outsl
ficoml
decb
pusha
lods
outsb
enter
mov
mov
jmp
mov
fists
xchg
adc
inc
scas
fisubrs
mov
imul
xchg
or
fprem
jg
insb
pop
lea
imul
xchg
dec
movsb
outsb
bound
popa
int
jge
out
outsb
dec
mov
imul
nop
sbb
adc
mov
push
mov
jne
mov
out
sub
pop
mov
fsin
mov
dec
in
mov
out
int3
in
sbb
subb
push
shlb
sub
jecxz
addl
mov
push
outsl
inc
fldl
mov
roll
push
fnstcw
je
fyl2x
push
repnz
pusha
mov
outsl
sub
sub
hlt
jl
add
js
hlt
stos
ret
roll
jne
data16
inc
outsl
mov
xchg
jle
push
orb
mov
cmpsb
rclb
cmp
in
cs
push
cs
xor
int
mov
test
adc
stc
sub
sbb
mov
mov
stc
pop
cmp
xor
mov
mov
mov
imul
adc
outsl
sbb
sub
xchg
je
sbb
fstpl
aad
stos
into
inc
mov
pop
xchg
xor
clc
fcmovnbe
lods
ljmp
or
sahf
cmp
mov
xor
fsubl
subb
push
jl
inc
adc
insl
lods
or
pushf
lods
fwait
inc
mov
rolb
popf
pop
out
js
xchg
mov
test
mov
test
popa
add
or
in
aaa
outsb
jecxz
push
or
mov
cwtl
ret
inc
cmp
xlat
push
pusha
andb
sub
aaa
add
movsb
pop
clc
sbb
jg
add
sub
bound
fimull
call
jb
enter
js
aam
cli
mov
adc
or
mov
outsb
pop
in
cmpsb
mov
add
icebp
out
out
sahf
insw
xchg
aad
movsl
das
mov
js
push
outsl
mov
outsb
dec
in
in
jmp
cli
pop
cmc
cmpsb
aam
and
inc
xorb
pop
hlt
das
lret
in
sahf
movsl
push
stc
es
push
push
jle
dec
in
test
dec
add
push
sub
notb
nop
or
imul
xchg
sbb
aaa
imul
or
std
outsl
mov
enter
mov
rorl
xchg
cmp
je
or
xor
push
sahf
xlat
call
adc
dec
outsb
les
and
movsl
dec
or
fmuls
ljmp
ss
xor
fcmovnu
jg
shll
std
cmp
xor
cmp
stos
in
es
mov
sub
jo
jns
movsl
fnsave
dec
mov
adcl
xchg
movsl
insl
xlat
add
or
jg
sar
stos
xlat
or
movsl
and
int
mov
out
pop
arpl
mov
js
int
pop
inc
out
fnstcw
sarb
outsl
lods
sub
cmpsb
fistpll
sbb
jge
fimuls
ret
into
inc
mov
lods
pusha
cmpb
pop
cmpsb
xor
jmp
inc
xchg
adc
into
in
outsl
or
enter
int3
loope
fbstp
insl
out
cmpl
clc
das
push
dec
in
movsl
xchg
sahf
push
les
jne
pop
mov
jg
outsl
lret
pop
add
xor
xchg
imulb
stos
or
pop
dec
repz
pop
inc
mov
push
fs
sub
lea
es
xor
xlat
xchg
dec
and
sbb
std
outsl
cmp
cmp
clc
xlat
jmp
inc
int3
pop
aaa
xor
or
inc
pop
sbb
xchg
int
or
fwait
sub
xchg
clc
pop
test
pop
aas
aaa
inc
jnp
leave
xor
inc
repz
sbb
mov
les
imul
iret
test
pop
popa
xchg
add
daa
pop
pop
sbb
dec
pop
fistpl
pop
insb
sub
mov
out
lret
mov
push
xchg
jg
dec
jo
jbe
cmpsl
lahf
call
or
outsl
pop
dec
or
cmp
cmp
xchg
jle
mov
pusha
push
push
dec
pop
ds
cmpsb
mov
pop
sbb
dec
outsl
inc
rclb
jl
or
lods
in
int3
dec
mov
lfs
jg
sub
push
cld
data16
imul
popf
shll
std
jnp
test
lds
cmp
es
adc
inc
cltd
subl
pop
mov
jecxz
stos
outsl
sub
gs
mov
sub
repz
scas
xchg
mov
ljmp
sahf
jb
dec
xchg
pop
mov
cld
mov
sub
dec
fbld
push
push
std
mov
sbb
outsb
cmp
cs
imul
pop
int
xchg
fs
jo
pop
stos
pop
insb
loopne
mov
orb
pop
mov
jge
es
jbe
mov
mov
std
loop
dec
out
ds
cmc
sbb
mov
in
clc
setnp
mov
fildl
dec
adc
fisubrl
xchg
nop
dec
jp
cltd
and
dec
fisubrs
jge
pop
arpl
pop
mov
jle
je
add
ror
jg
in
in
or
inc
stos
push
jae
or
mov
push
test
sti
jb
sbb
out
cmc
dec
dec
pop
and
bound
cmp
stc
mov
inc
xor
xchg
inc
xchg
imul
adc
mov
pop
sub
outsl
xchg
arpl
jecxz
sub
dec
mov
scas
inc
loope
mov
dec
dec
outsl
fwait
and
sbb
sarl
imul
hlt
cmp
sarl
mov
sbb
lods
js
daa
xchg
lods
jg
cmp
movsl
mov
push
testb
dec
push
or
or
rolb
add
cmp
jnp
sub
test
add
mov
test
popf
sbbl
pop
movsb
insb
inc
loop
jns
inc
xchg
jno
std
jecxz
xor
cmpsb
sub
push
movsl
inc
js
sub
testb
xchg
cmp
xchg
push
je
push
xchg
inc
mov
jge
outsl
cmp
rolb
nop
cmpsb
pop
mov
clc
mov
sub
aaa
outsl
add
cmpl
sub
imul
divb
in
dec
sub
jb
sbb
xor
insb
mov
xchg
stos
mov
lret
sahf
ss
fbld
dec
sub
push
cmpsb
pusha
icebp
push
jae
mov
test
mov
sub
cmpsl
dec
mov
or
out
sub
or
push
mov
out
add
mov
data16
cmc
inc
mov
inc
adc
push
sub
rorb
and
daa
stos
movsl
outsl
fnsave
movsl
sbb
js
or
sub
out
jle
imulb
cmp
shrb
aas
sahf
mov
loop
jne
mov
xor
cmpsb
cmp
cmp
adc
add
pop
movsl
xchg
or
sub
fisubrl
jno
ret
insl
inc
lods
add
push
scas
mov
pop
inc
lods
dec
cmp
push
testl
adc
push
call
and
cmp
jmp
jne
nop
xor
rcrl
sti
or
lret
insb
push
fnsave
cmpsl
out
inc
in
frstor
pop
pop
and
ja
ss
xchg
dec
in
add
movsl
out
outsl
scas
test
sahf
push
loope
jp
pop
mov
fwait
ret
out
push
adc
cmp
nop
jne
cmp
pop
fs
frstor
insb
push
pop
enter
push
mov
nop
rcll
cs
inc
pop
sub
mov
mov
pop
adc
cmpsl
sub
xor
inc
stos
cmc
push
mov
lret
pop
imul
push
or
inc
lock
hlt
out
mov
dec
mov
jg
mov
outsl
cmpsb
mov
xor
js
sub
into
push
fisttps
addb
int3
xor
lahf
xchg
and
mov
pop
es
push
mov
aam
lods
subb
cmp
mov
rcrl
push
mov
or
jns
xchg
enter
sbb
stos
aas
ret
dec
cmc
push
cmc
push
es
es
pop
int
dec
add
gs
daa
es
inc
jmp
orl
and
out
data16
mov
xchg
push
push
jg
outsl
xor
mov
jbe
icebp
test
in
push
fwait
testb
cmp
fs
add
out
mov
iret
sub
push
idivb
cmpsl
inc
sbb
push
iret
mov
cmp
pushf
jl
cmp
sbb
pop
js
jmp
pop
add
iret
push
ljmp
ds
frstor
outsl
mov
or
ret
adc
add
inc
test
outsl
loopne
mov
and
xor
nop
xchg
scas
jmp
jo
cld
leave
inc
mov
inc
pop
imul
test
add
test
test
push
imul
dec
adc
js
mov
movd
xor
shll
adc
pop
sbb
imul
and
fwait
or
leave
adc
sbb
add
lds
popf
sti
and
jb
adc
cld
adc
imul
sbb
loope
xorb
mov
mov
pop
jno
movl
cli
jne
das
push
scas
insl
inc
call
or
sub
das
cwtl
adc
movsl
stos
mov
xchg
jg
andl
int3
push
jecxz
pop
cmpsb
pop
mov
add
enter
cwtl
andb
mov
les
xor
ja
add
sub
sub
and
cld
cmpsb
jle
sub
fstl
or
cmp
call
arpl
or
bound
mov
xor
jmp
xchg
popaw
mov
push
mov
dec
xchg
cltd
inc
pop
jl
jo
loop
mov
jmp
enter
xchg
push
mull
clc
cli
lahf
mov
out
and
bound
aaa
ljmp
pop
dec
push
sub
mov
pop
cmpsb
gs
or
sarl
daa
std
jae
sub
and
in
icebp
or
mov
mov
sbb
gs
mov
push
jo
aad
xchg
iret
mov
fldt
dec
aad
push
push
dec
jmp
mov
cmp
sub
push
daa
cli
xchg
pop
xor
out
aad
pop
jp
and
popa
int3
hlt
imul
test
es
lods
jnp
or
pop
pop
icebp
jnp
lods
lret
outsl
test
or
aas
or
add
scas
aad
pop
cmpsb
cmp
sbb
clc
cmp
jl
fwait
add
mov
bound
sbb
lcall
fisubrl
ds
sub
or
sub
outsl
sub
inc
loop
xor
aam
lods
xor
dec
sbb
stos
mov
sub
jge
adc
jle
mov
imul
outsb
stos
and
divb
jmp
or
enter
jge
cmpsb
pop
jns
jnp,pn
sbb
dec
in
xchg
es
fistps
dec
insb
and
ss
jge
cmp
cld
inc
xchg
lods
arpl
cs
lea
mov
dec
sbb
xchg
sbb
mov
dec
and
faddp
fucom
cmp
arpl
pushf
popa
loopne
loopne
jnp
pushf
dec
arpl
out
ss
add
movb
push
jo
in
imul
and
notb
dec
jmp
sub
mov
push
sbb
out
xchg
sahf
push
stos
sbb
jno
outsl
daa
sub
cmpsb
std
sbb
cs
std
outsl
jae
repz
out
pop
or
ficoms
imul
xchg
sbb
out
ss
mov
pushf
pop
pusha
dec
outsl
stos
outsl
push
sub
mov
xor
fucomp
loopne
mov
dec
outsl
sbb
ss
rcl
jg
or
imul
jl
or
into
push
popa
cs
pop
negb
inc
jbe
insl
es
and
fldcw
imul
lcall
enter
fs
repz
scas
cmp
je
stc
lret
pop
enter
jmp
sbb
outsl
xchg
add
out
sub
add
neg
leave
out
ja
sub
imul
stc
mov
in
dec
cmpsb
pop
pop
jns
pop
jo
sti
stos
mov
pop
inc
fstpt
jno
mov
sub
mov
aaa
pop
xor
test
outsl
or
test
sti
pop
xor
pop
repnz
les
adc
or
bound
out
out
dec
push
xchg
dec
jp
shlb
push
adc
jmp
or
popa
push
mov
jp
imul
mov
imul
js
xchg
std
scas
lahf
es
or
insl
cmp
pushf
xor
cwtl
mov
push
test
imul
mov
test
jge
add
xlat
notb
stc
cli
ja
popf
out
sbb
ret
roll
cltd
repz
loopne
jge
sbb
push
push
ret
movsl
xlat
mov
mov
sub
jge
enter
imul
add
push
xor
int
mov
out
fstl
lret
rorb
push
mov
das
xchg
iret
jb
clc
add
adc
cmp
inc
stos
sbbl
add
pop
data16
mov
push
movsb
into
repnz
inc
mov
shl
push
cmp
cmp
xor
fistl
mov
dec
sub
faddp
fsub
xor
or
aam
cmpsl
pop
out
adc
testl
insl
lea
and
imul
pop
test
mov
outsl
push
sbbl
pop
cltd
stos
add
popa
call
add
inc
call
dec
mov
les
leave
add
add
insb
inc
xchg
jne
and
xor
sub
cmpsb
outsl
fwait
ljmp
shl
leave
mov
cli
add
jbe,pt
add
xchg
pop
dec
popa
std
push
add
cmp
or
dec
gs
mov
dec
jne
mov
ja
cmpsl
or
aad
cmp
lea
jbe
sarb
add
fstpl
add
das
xor
leave
and
scas
sub
gs
pop
pop
roll
data16
scas
xchg
jmp
mov
push
lret
cmp
sbb
sub
lcall
dec
add
out
pop
pop
cmpsl
mov
ljmp
bound
popa
or
jmp
clc
lahf
xchg
daa
test
or
inc
ficompl
sarl
outsl
jge
xchg
jge
mov
fldcw
xchg
push
ss
cli
dec
push
in
and
rclb
ret
push
test
in
sti
pushf
push
ss
out
bound
dec
shll
test
mov
pop
clc
mov
ss
imul
jmp
mov
sbb
cmp
inc
sub
in
stos
imul
scas
es
rcr
cli
push
stos
mov
pop
push
pop
add
or
pusha
pop
jbe
mov
sub
cmpsb
sbb
ret
pop
cmp
sub
dec
dec
xor
out
jmp
mov
and
jmp
xchg
dec
mov
ss
lea
xlat
lret
js
cmc
pusha
aas
cmp
outsb
pop
ret
xchg
xchg
das
pop
cmc
nop
inc
adcb
cwtl
pusha
pop
xlat
mov
push
dec
push
movsl
inc
add
arpl
js
mov
fstps
ljmp
inc
insl
fisubs
scas
movsl
mov
imull
lds
and
xor
cmpsl
lcall
xchg
dec
daa
jb
into
outsl
cmp
jg
mov
ds
mov
in
test
mov
xchg
in
lcall
bts
cli
ljmp
pusha
push
xchg
test
repnz
adc
aas
sbb
inc
jae
movsl
in
inc
sbb
insb
addl
pop
std
lahf
movsl
neg
shrl
xchg
fldenv
cmpsl
mov
in
add
cwtl
imul
xor
nop
sub
scas
sbb
cmpsb
xor
addr16
dec
lret
mov
sti
cmp
icebp
mov
movsb
leave
stos
or
les
sarl
inc
mov
arpl
imul
dec
lret
cmpsb
pop
je
scas
fidivl
mov
jl
adc
test
jns
add
pop
mov
repz
int
pushf
push
push
mov
xor
frstor
jbe
push
inc
loopne
xchg
sbb
enter
xchg
aaa
push
out
adc
and
in
push
or
test
bound
dec
or
ficoms
cmpsb
scas
outsb
das
push
shll
fnstsw
outsl
cmp
xchg
jne
andl
xchg
enter
cmp
bound
test
sbb
popa
sti
jnp
sbb
sub
das
pop
in
outsl
fwait
testl
adc
mov
iret
shrl
dec
imul
dec
sbb
repz
into
xor
dec
pop
into
cli
mov
mov
cs
pop
sbb
pop
or
jecxz
iret
lods
xchg
pop
cmp
jmp
cmpb
rcl
dec
jb
std
sub
ret
mov
shlb
imul
push
mov
or
adc
sub
test
and
cmp
jle
dec
sub
cmpsb
mov
imul
lret
add
pusha
sbb
aas
dec
cmp
xor
adc
sub
or
icebp
pushf
cltd
inc
and
sub
inc
cmp
out
mov
inc
fldenv
pop
pop
out
iret
loop
cs
in
push
pop
jp
jmp
lods
rcr
mov
xchg
call
hlt
pop
or
cmpsb
xchg
jno
es
xchg
fs
leave
mov
scas
sbb
sub
imul
pop
xchg
clc
xchg
les
sub
add
mov
mov
sbb
pop
lea
hlt
outsb
aas
es
and
pop
push
sbb
mov
lock
lds
mov
mov
push
or
outsl
arpl
test
dec
mov
sbb
cmp
or
mov
sbb
outsb
inc
jl
add
mov
nop
add
es
out
pop
add
mov
in
add
rclb
fdivp
xchg
mov
pop
loop
xor
adc
mov
out
cltd
mov
out
in
out
outsl
xor
jle
movsl
push
mov
test
push
scas
inc
sub
cld
sub
test
xchg
mov
popf
push
lods
in
or
in
sbb
and
outsb
dec
xchg
outsb
aaa
int3
lea
jae
insl
pop
jno
insb
push
test
sbb
sub
inc
lock
imul
ret
js
mov
test
and
mov
ljmp
jbe
pushf
lahf
dec
aas
movsb
pop
jns
popf
aas
pop
in
insb
test
test
lret
pop
fs
test
dec
out
jmp
pop
scas
mov
imul
pop
add
jle
sbb
sub
pop
push
scas
out
test
jecxz
imul
scas
outsb
lds
dec
jmp
push
mov
dec
test
hlt
ret
or
dec
mov
int
dec
sub
inc
mov
insb
mov
mov
fs
jmp
test
xor
push
push
sub
add
leave
fsubrs
call
or
push
and
leave
in
jl
imul
ret
sub
or
mov
int3
push
fdivrp
imul
or
pop
aaa
dec
stos
mov
in
aam
pop
stos
lret
jecxz
or
leave
dec
cs
and
dec
movsl
jmp
mov
lods
and
push
scas
sub
sub
lods
fisttpll
orl
mov
or
jecxz
and
nop
sub
call
sub
jecxz
movsl
ljmp
and
shld
mov
sub
dec
fisttpl
dec
mov
lods
ljmp
cs
mov
mov
dec
leave
psubq
out
sbb
jmp
lret
outsb
mov
insb
out
insb
test
sub
nop
fbld
jl
pop
int
add
cmc
xchg
dec
inc
adc
jge
push
and
sub
pop
add
or
rolb
push
call
sti
mov
andl
sub
cmpsb
adc
sub
cmp
lea
cli
insl
mov
out
loope
mov
sub
pop
jne
lods
loope
outsl
int3
into
jbe
mov
outsl
out
movsl
das
out
inc
or
int3
add
ds
outsl
out
mov
xchg
pop
add
pusha
xchg
frstor
mov
xlat
out
or
mov
adc
or
jbe
aas
inc
cmpsb
pop
roll
or
cmp
jecxz
mov
push
push
bound
jo
jb
adcb
ljmp
xchg
stc
ret
jnp
scas
outsl
imul
cmp
es
pop
call
jnp
push
jmp
testl
enter
stos
inc
lods
clc
cmpsb
addb
imul
xor
mov
or
mov
pop
push
push
push
shl
mov
lcall
daa
pop
in
push
outsl
fimuls
inc
cs
mov
dec
sti
imul
push
inc
js
and
add
push
test
mov
outsb
clc
rorl
xchg
push
adcb
jbe
sbb
sub
les
out
jecxz
rcrl
imul
fcmovnu
outsl
xor
js
inc
out
xchg
jg
fidivs
adc
jae
popa
cmpsb
xor
jbe
inc
xchg
adc
incl
pusha
jp
jae
sahf
cmovbe
cmpsb
pop
bound
addr16
fsincos
imul
mov
sub
int
xchg
and
ss
movsl
xchg
cmpsb
or
sub
mov
xor
lock
xchg
dec
dec
cmp
cwtl
sub
jo
mov
cmp
fsubrl
scas
mov
xor
xor
data16
lock
in
in
sbb
fistpll
cmp
xor
and
pop
mov
mov
in
pop
fdiv
out
jbe
add
xor
outsb
adc
fyl2xp1
fldcw
mov
dec
loope
mov
pop
clc
xor
mov
subb
lahf
int3
stos
fcomps
into
xchg
inc
lods
sbb
pop
aaa
dec
dec
dec
and
xchg
dec
daa
jle
xor
shrl
stos
inc
cmp
das
mov
inc
imul
mov
lcall
andb
outsl
xor
ja
rorl
or
scas
sbb
jo
push
push
pop
roll
out
out
jg
dec
aaa
mov
fisttpll
sbb
pop
outsb
jb
aam
add
aad
sbb
and
mov
xor
data16
mov
lock
faddl
add
in
fs
dec
icebp
into
cmp
bt
test
insb
lret
inc
sahf
fnstenv
fcmovnb
fcoms
clc
lret
subb
mov
adc
mov
js
or
adc
or
jecxz
xor
dec
lea
stc
or
enter
out
pop
cmp
addb
add
aad
pop
fwait
xor
mov
push
orl
xchg
adc
mov
in
pop
stc
jecxz
leave
inc
dec
push
xor
mov
test
xchg
dec
frstpm(287
inc
push
push
xchg
stos
sub
loop
sarl
frstor
xor
mov
cmp
cmpsb
xor
mov
jns
jns
cmpsl
sub
jb
cmp
cmpsl
or
push
mov
pop
imul
sbb
push
or
fs
ja
sti
push
fimull
jae
lods
jg
add
push
cmovg
cmpsb
pop
add
pushf
in
xchg
test
movsb
lock
test
sahf
fmuls
aaa
or
mov
pop
in
pusha
ds
dec
cmpsb
call
int
ljmp
mov
dec
test
ror
push
es
sub
jb
mov
mov
xchg
outsl
xchg
test
pop
sub
and
mov
pop
jno
push
xchg
mov
dec
sub
cli
and
call
clc
test
cli
jle
cmp
in
scas
adcb
mov
sbb
fsts
xchg
add
xlat
das
imul
dec
mov
dec
loop
push
jmp
testl
das
ficoms
outsb
ljmp
or
mov
mov
sub
iret
sub
fistps
adc
sti
test
push
push
jo
jmp
in
fucomi
dec
imul
ret
mov
add
sti
dec
imul
and
sub
repz
roll
jmp
sub
ds
scas
arpl
aaa
cld
xchg
sub
outsb
subb
or
lea
je
sbb
andb
pop
dec
xlat
incb
fwait
push
cwtl
ja
jne
dec
movsb
cwtl
inc
jo
inc
pop
mov
sbbb
cmpsb
fcomps
xor
mov
int3
mov
jle
or
pop
pushf
sbb
loope
xlat
pop
xor
xchg
test
fnstenv
imul
adc
dec
xchg
xor
lcall
xchg
dec
pop
and
sbb
sldt
outsl
or
test
movsb
pop
mov
insl
cmc
test
and
and
sub
or
xchg
dec
mov
roll
pusha
mov
out
and
pop
adc
icebp
aam
pop
les
push
push
jp
cmpsb
movsb
mov
repnz
push
incb
mov
pop
ficoms
cmp
mov
das
mov
push
pop
cmp
jge
mulb
mov
adc
gs
jge
int
je
mov
movsl
push
test
and
mov
push
jb
aad
outsb
xchg
nop
outsl
gs
ffree
push
cli
les
dec
xchg
inc
mov
push
or
aas
gs
push
and
mov
push
lock
stos
ds
and
inc
and
inc
jecxz
das
sub
es
mov
pop
test
cmp
cmp
push
ja
cmp
cmp
out
subl
lret
push
andb
jae
mov
jne
imul
or
jle
cmpsl
orb
mov
mov
xor
jg
xchg
ud2
stc
movsl
pop
push
add
or
lea
adc
ret
scas
sbb
xchg
imul
mov
int3
mov
push
clc
pop
pusha
js
movsl
add
rorl
jns
mov
add
inc
and
xchg
jg
mov
cmpsb
inc
sub
imul
fstps
mov
inc
add
inc
xor
fldcw
xorb
push
movsl
insl
add
inc
scas
scas
aad
dec
jp
sbb
scas
pushl
fdivrl
and
mov
sub
mov
mov
and
mov
mov
in
push
imul
sub
push
sub
lock
sub
lret
push
lea
cmp
jp
dec
dec
add
dec
dec
in
jo
jle
js
ds
sub
sub
sub
roll
dec
sub
pop
xor
cmp
mov
outsb
dec
sbb
insl
in
shlb
pop
inc
jecxz
xor
adc
dec
in
sub
pop
jmp
dec
sub
or
int3
outsb
imull
out
sub
popf
xchg
push
ret
sub
fsubl
mov
lret
popf
sahf
adc
push
aaa
push
adc
dec
xchg
in
int
stc
insb
sbb
aam
pop
and
imul
jecxz
sub
pop
sarb
dec
pop
lods
call
dec
sub
sub
push
lods
sub
xchg
sub
pop
lcall
movsl
add
cmp
int3
cmpsb
stos
insb
lea
lret
scas
sti
or
movsl
sub
dec
and
int
mov
insb
fldt
stos
mov
dec
lods
sub
pop
lods
imul
imul
fcmovnb
mov
dec
int
cmp
or
mov
dec
sbb
movsl
sub
cs
call
in
imul
leave
jns
dec
mov
fucomp
push
iret
scas
jge
jecxz
jge
jecxz
mov
scas
and
dec
test
imul
jmp
mov
mov
sub
or
sti
sub
lods
sbb
lods
fistps
fcompl
xchg
lods
call
cmp
push
pop
out
push
je
mov
pop
fsubrl
lods
sub
outsl
incb
mov
bound
sub
xor
mov
jno
loopne
push
sahf
mov
mov
mov
pop
fwait
or
inc
stc
outsl
popf
icebp
xorl
shll
insl
jb
mov
les
and
inc
jne
cmpsb
fbld
dec
frstor
jbe
in
add
dec
mov
mov
leave
testl
nop
loopnew
xorb
add
lahf
jo
push
es
lret
fbld
out
push
and
movsb
lods
inc
mov
cmpsl
or
inc
mov
mov
push
imul
lods
jmp
aaa
addb
insl
push
sub
mov
mov
cmpsl
aaa
fisttpll
cmpsb
push
and
sahf
pop
arpl
stos
inc
sub
mov
int
mov
or
and
sbb
fadds
std
loope
push
shll
dec
cs
addb
inc
lret
leave
add
inc
xor
fidivs
pop
cmpsb
jne
dec
inc
in
imul
mov
sub
xor
aaa
in
shl
or
fstl
inc
jl
or
scas
into
push
pusha
fstl
push
jns
and
mov
lods
outsl
aad
int
push
jne
xor
out
pop
mov
fwait
nop
jne
leave
outsb
ds
std
and
jg
sbb
push
out
jne
sub
es
mov
lock
cmpsb
mov
notb
fcomi
in
xchg
jmp
lretw
imul
mov
cwtl
movsb
idivl
mov
fiaddl
push
push
fstpl
arpl
outsl
push
scas
lahf
sahf
sub
mov
mov
cmp
insl
inc
dec
cmp
cmpsl
mov
loope
pusha
cmp
jge
sub
inc
repz
xor
dec
cmp
cmp
dec
pop
sti
shll
sbb
daa
jecxz
xchg
push
mov
dec
jne
mov
imul
mov
pop
lret
dec
adc
sub
orb
mov
icebp
push
orb
int3
sbb
outsb
push
jmp
pusha
frstor
pop
pop
les
mov
ret
sub
aad
xchg
jo
aad
inc
shlb
shrb
or
sub
lock
jo
negb
mov
push
je
or
xchg
sub
push
adc
push
adcb
scas
xor
outsl
int3
sbb
imulb
xchg
inc
loopne
sub
movsb
xchg
fidivl
jmp
cmp
dec
xchg
dec
sbb
push
jle
mov
imul
cmpsb
mov
es
pushf
popa
cmc
adc
outsb
lret
testl
cmpsl
in
sbb
movsb
aas
movswl
push
pop
jnp
stos
mov
fs
sbb
pop
mov
clc
scas
fbld
lret
clc
mov
mov
dec
mov
test
push
adcb
pop
dec
xor
imul
or
loope
subb
xor
adc
cmc
enter
cmp
ljmp
fstps
jns
insb
push
and
ss
inc
xorl
inc
movhps
loopne
jmp
es
stos
adc
push
mov
lahf
add
or
fnsave
xchg
xchg
outsl
mov
xor
repz
lcall
mov
and
in
imul
pop
pop
mov
add
cmpsb
cmp
outsl
pcmpgtb
push
add
int
sbb
clc
pushl
mov
outsl
inc
rcr
in
adc
lods
aad
outsl
jecxz
daa
mov
aad
shlb
adc
cltd
or
subl
mov
adcb
loopne
xor
rol
dec
mov
mov
lods
adc
mov
mov
fs
cli
dec
pop
add
add
outsb
aas
xlat
pop
cmp
out
aad
jmp
or
aad
push
jnp
cmpsl
mov
subb
sub
xor
dec
movsl
jmp
inc
sub
data16
mov
repz
adc
jo
int3
lret
rclb
inc
dec
rcl
pop
pop
test
dec
sbb
ret
clc
dec
mov
mov
in
add
lods
fstpl
ja
jecxz
test
sbb
js
je
mov
pop
test
mov
es
mov
sub
jg
in
pop
aas
cmp
idiv
push
mov
jne
stos
sbb
imul
pop
dec
cmp
shrb
cmp
jb
add
pusha
inc
mov
fidivl
mov
dec
xor
add
cmp
fndisi(8087
out
mov
push
lea
fistpll
sub
aas
jmp
bound
push
push
push
std
jge
int3
shr
adc
cmc
in
movsb
jp
mov
push
jle
xchg
xchg
rcrb
mov
bound
outsl
inc
sti
ss
mov
adc
adc
add
sar
sbb
or
aam
mov
popa
lods
pusha
mov
dec
mov
and
mov
mov
cmpsb
and
das
outsb
movsb
push
sbb
pop
fwait
dec
adc
adc
mov
ret
out
movsl
out
or
jnp
test
dec
dec
xor
outsl
dec
and
ss
test
sub
call
movsl
jmp
lret
inc
mov
andb
xchg
into
and
adc
test
sub
jmp
and
and
aas
xor
cmc
cmc
mov
fildll
sarl
jp
scas
push
sbb
xchg
mov
mov
lret
js
mov
dec
xchg
dec
xchg
in
leave
jle
fsubr
cmp
lea
cmc
cmpsb
mov
cwtl
popf
lea
jmp
into
jmp
mov
es
push
fs
sti
or
aad
jl
mov
adc
jmp
repnz
in
pop
pop
cmpsb
cmp
stos
jp
sub
in
pop
imul
dec
dec
and
pop
cs
push
sub
sbb
in
cmpsb
loop
and
fucomi
add
sbb
sahf
in
lea
pop
minps
ret
mov
sub
cwtl
std
add
mov
inc
or
fisubrs
call
stos
loope
push
inc
cmpsl
mov
mov
data16
imulb
icebp
sub
pushf
nop
jno
dec
sbb
xchg
push
cmpb
sub
stos
inc
sub
popf
cmpsl
inc
mov
repz
into
mov
mov
mov
sbb
stos
js
fisttpll
mov
adc
dec
or
fildll
call
mov
and
divb
leave
adc
pusha
imul
outsl
cmpsb
pusha
sub
int
push
sub
inc
sub
loop
cmpsb
push
shlw
xor
jge
sbb
and
jnp
je
dec
cmp
std
jno
add
dec
dec
daa
and
fdivrl
and
xor
mov
or
inc
pop
mov
mov
shll
imul
lret
xor
or
xlat
out
xor
inc
sbb
cmpsb
arpl
pop
mov
mov
arpl
psrlw
bound
dec
ja
adc
aaa
imul
popl
call
mov
push
cmp
sbb
mov
in
sub
jbe
das
sbbb
insl
scas
jns
fs
and
push
insb
movsl
lahf
or
mov
sub
sbb
outsl
adc
nop
sub
add
cmpb
xchg
loope
mov
xor
insl
push
cli
sub
push
out
adc
lahf
gs
aad
enter
add
aad
mov
aas
lods
lcall
insl
outsb
gs
and
jne
sti
and
sub
xchg
test
movsl
jge
dec
dec
pop
inc
xchg
lea
in
xchg
xchg
xchg
mov
mov
outsb
mov
fsubrl
lods
add
decl
int3
inc
mov
insb
out
push
out
test
sbb
pop
or
sub
stos
inc
jl
in
adc
into
sbb
push
or
aad
ds
jl
into
or
test
movsl
out
mov
dec
or
add
inc
mov
sbb
lods
movsb
repz
loopne
mov
lret
sub
xchg
ss
sub
push
lock
in
test
sbb
mov
dec
mov
aad
jne
mov
dec
pushf
and
mov
frstor
mov
mov
xchg
pop
jp
push
dec
into
jo
loope
sbb
insb
mov
jbe
ficomps
sbb
ficomps
shrl
push
int
sub
mov
mov
and
aad
mov
xor
sahf
cmpsl
sub
outsb
shll
imul
daa
lods
or
dec
xchg
fcmovbe
add
cmpsl
sub
inc
lcall
gs
cmpsb
lock
and
or
fstps
dec
mov
dec
test
subb
mov
std
jge
sbbl
mov
or
sahf
adcl
ret
mov
mov
mov
pop
inc
sub
jl
mov
sarl
adc
inc
sbb
jnp,pn
testl
int
roll
scas
dec
sub
in
mov
or
lret
push
aad
es
nop
pop
bound
es
shrb
mov
test
and
inc
out
filds
les
inc
mov
aam
arpl
fistps
lea
ja
inc
cmp
leave
imul
mov
sub
and
out
jge
shlb
lods
inc
out
jno
stc
push
jmp
stos
xchg
push
call
dec
scas
movsl
outsl
fwait
lock
sbb
inc
dec
add
jecxz
lret
clc
xlat
mov
lods
insl
es
outsb
mov
negb
out
sub
xor
push
cmpsb
aad
inc
inc
mov
adc
roll
jl
sbb
sbb
add
das
insb
push
movsl
sub
subl
push
lods
xchg
lea
dec
lock
frstor
sahf
lds
or
mov
and
xchg
test
xlat
dec
sub
aad
mov
or
push
pop
sub
insb
out
js
jmp
cmp
repz
pop
jne
push
mov
test
mov
sub
sub
cmpsb
inc
xor
mov
push
cmp
out
cmp
mov
inc
cmpl
inc
sub
insb
lahf
cld
xchg
sub
sub
insl
mov
insl
lock
call
fdivl
jle
jbe
aad
cmpsb
lods
dec
notl
push
pop
pusha
cmpsl
imul
jae
ret
ficompl
in
iret
push
cmp
test
and
cmpsb
adc
mov
xchg
cmp
pop
xchg
mov
jbe
inc
mov
cmpsl
lds
loopne
sub
repz
clc
mov
sbb
aaa
aam
fldl
in
imul
or
lahf
aam
push
sahf
mov
mov
movsb
fistl
pop
adc
jge
shr
mov
outsb
in
mov
mov
js
inc
subl
or
jmp
xor
dec
mov
mov
lods
cmp
push
push
dec
int
pop
adc
cmp
lods
jmp
xchg
dec
or
cli
cmp
push
xor
je
mov
and
mov
andl
add
popf
mov
addr16
ja
stos
loopne
push
pushf
dec
dec
in
ds
aam
cmc
cmpsb
repnz
mov
dec
mov
fistps
pop
fildll
or
sahf
pop
pushf
dec
test
ljmp
xor
loopne
push
lret
loopne
sub
test
enter
scas
lahf
push
sub
jbe
or
cmp
xor
popf
sbb
std
mov
out
les
nop
popf
loop
fpatan
adc
loope
test
push
xchg
mov
pop
rcl
mov
jmp
cmpsb
ret
push
xor
mulb
test
jb
sub
outsl
addb
push
mov
ret
sub
cmpsb
fcomp
sbb
dec
xchg
mov
push
das
mov
xchg
mov
mov
js
adc
jb
sub
imul
dec
stos
in
sbb
xchg
mov
loope
lds
xchg
into
push
fwait
adc
fucomip
sub
iret
sub
scas
sahf
pop
lods
push
clc
inc
test
push
imul
mov
jno
dec
lods
fwait
push
and
jp
sub
push
add
xor
pop
push
adc
jnp
pop
roll
cmpsl
sahf
sti
test
mov
pusha
xchg
sbb
mov
mulb
or
mov
scas
dec
fldl
test
jbe
pop
sub
jecxz
nop
fnstcw
pop
mov
roll
jno
cmpsb
leave
mov
add
js
sub
repnz
lds
xor
xchg
sub
mov
lret
outsl
cld
lcall
cltd
sbb
fistpll
or
pop
cmp
dec
push
mov
mov
std
lret
jge
xor
pop
enter
outsl
pop
mov
rorb
filds
dec
lahf
pop
mov
mov
cld
dec
mov
into
fsubs
fldt
pop
movsb
mov
or
inc
test
or
dec
inc
loopne
fidivl
adc
or
fucom
mov
ds
mull
push
out
cmp
fldl
mul
xor
dec
outsl
pushf
push
xor
cmpsl
xor
faddl
pop
jb
fldenv
out
cmpsl
xchg
scas
lds
cmpsl
sti
sub
sahf
je
bound
push
dec
cmpsl
dec
jae
add
stos
aad
xor
dec
sub
cmc
dec
push
outsl
jno
or
retw
adc
cwtl
mov
jmp
outsb
es
call
in
nop
jno
push
insb
pop
fbld
or
jp
js
mov
dec
out
pop
out
sbb
pop
data16
shll
outsl
push
add
cld
mov
repz
dec
sti
faddl
pop
aam
jne
inc
or
sub
outsl
loop
dec
inc
nop
cld
add
nop
jl
dec
mov
mov
test
pop
dec
sti
sbb
jmp
aad
orb
mov
or
xor
outsl
jae
push
imul
sbb
movsl
mov
or
jmp
mov
and
mov
data16
shrb
push
ds
bndstx
in
xor
lret
xchg
mov
xor
cwtl
dec
and
notb
cs
mov
mov
je
or
sub
fidivrs
push
push
xor
push
push
jmp
xchg
nop
mov
dec
mov
inc
insb
dec
sbb
dec
adc
xor
jmp
or
jnp
cli
out
test
and
sub
dec
clc
stos
outsl
adc
pop
dec
dec
sahf
jecxz
cmp
or
and
mov
pop
sub
out
push
xlat
cmpsb
fmull
andb
scas
into
mov
lret
or
out
fisubs
cli
xchg
push
mov
shl
sbb
sub
data16
jecxz
cmp
jbe
cmp
jno
inc
inc
negb
mov
test
movsl
mov
pop
in
ror
incl
fldenv
scas
out
cwtl
imul
add
out
mov
cmp
hlt
in
and
mov
test
imul
pushf
dec
add
or
cmp
pop
fwait
inc
xchg
mov
push
aas
stc
mov
mov
cmp
cltd
or
xchg
push
lock
xor
movsb
imul
push
sub
xchg
std
pop
in
ja
xor
es
adc
ds
mov
test
sub
inc
lds
or
and
xor
sub
cli
xchg
fistpll
sub
pusha
outsl
out
movsl
mov
out
ret
mov
icebp
sub
add
lret
sub
aas
xchg
xchg
add
sub
stos
xchg
cmp
dec
hlt
test
dec
sub
sub
xor
in
daa
xor
jo
mov
hlt
stc
mov
rol
mov
iret
jno
popf
pop
rcrl
jle
mov
clc
xor
jge
in
sub
fistl
aad
xchg
hlt
fsubrl
test
es
sbb
sub
test
add
cmp
push
add
xor
jmp
ficomps
adc
into
xlat
sub
xchg
push
sub
jle
push
out
xor
jnp
xchg
fildll
int3
cmpsl
movsb
sub
cvtpi2ps
and
inc
jne
lcall
adc
icebp
ja
xchg
je
neg
or
pop
jecxz
sbbb
fwait
bound
add
repnz
les
bound
push
into
mov
fcomip
or
fildl
ret
or
cs
jecxz
dec
add
dec
test
xchg
inc
fmull
add
pusha
fidivrl
icebp
cli
jle
scas
jl
pop
mov
loope
mov
jmp
inc
arpl
outsl
mov
xchg
push
mov
sbb
shrb
in
lahf
stos
rep
jbe
dec
sti
push
out
ds
mov
xor
stc
mov
data16
add
sbb
shr
inc
add
call
pop
cmp
sbb
fwait
mov
mov
add
push
mov
dec
lods
into
imul
lret
cli
xchg
repz
xlat
ss
fnstenv
into
sbb
mov
sahf
pop
je
fldl
testb
xchg
add
clc
push
daa
jae
inc
adc
ret
push
sbb
outsl
pop
jb
dec
and
fisubrs
and
dec
enter
push
pushf
fmuls
mov
or
mov
ja
fisttps
das
dec
sub
jle
jno
or
scas
xchg
or
int3
adc
popf
jo
pop
or
cmp
stc
mov
enter
mov
cmp
mov
sbb
clc
mov
aad
inc
jmp
and
repz
std
in
lcall
movsb
add
ljmp
int3
adc
adc
jecxz
sub
pop
or
jge
jo
out
outsl
xor
add
xor
test
popf
jo
jnp
cs
sarb
sbb
or
adc
sbb
lock
out
xchg
into
cmp
jb
nop
adc
jne
jg
inc
hlt
in
pop
adc
xor
shlb
push
pop
jmp
xchg
jl
fcomi
adc
pop
or
xchg
cmp
nop
out
outsl
pushf
or
jne
sbb
stos
out
sub
cmpsb
test
adc
jne
add
rorl
mov
out
std
sbb
insb
outsb
jp
inc
popw
imul
fs
push
sub
xchg
outsl
es
ja
xor
out
insl
mov
jmp
jl
sahf
jnp
test
les
lods
test
xchg
sub
push
gs
fcmovne
and
out
pusha
dec
bound
sbb
xor
movsl
mov
adc
imul
in
mov
fdivl
dec
adc
lahf
dec
xorb
mov
mulb
fistps
ss
sub
push
or
dec
aam
lahf
inc
pop
pop
xor
cmpsb
dec
ljmp
and
cmp
sub
sti
lock
mov
into
and
push
rcl
push
dec
or
neg
test
std
loopne
push
imul
fildll
sub
call
fsubl
cmpsl
jno
mov
sub
imul
cmp
daa
sbb
out
mov
sub
aad
loope
movsl
dec
scas
fstpt
dec
icebp
aad
les
insl
in
shll
lret
mov
mov
ss
sbb
popf
sub
adc
cmp
mov
inc
add
nop
cli
call
lods
fimuls
addr16
inc
push
stos
mov
push
pop
fcomps
xorb
add
fwait
cmpsl
push
sub
mov
inc
imul
cwtl
lea
cmp
hlt
or
or
xchg
std
outsl
daa
leave
mov
sub
imul
mov
dec
lods
lds
pop
xor
mov
sub
rclb
mov
sub
jmp
movsl
imul
cmp
out
and
mov
outsb
out
fisttps
daa
popa
test
sub
jnp
cs
xor
in
mov
lods
outsb
or
or
in
jae
fists
outsb
jle
lea
xchg
or
lods
in
pop
mov
fldcw
scas
dec
shlb
sbb
dec
sub
pop
or
aam
or
notb
shrb
pop
lods
in
das
popf
outsb
fsubr
sub
inc
xlat
jmp
mov
or
outsb
lahf
mov
outsb
pop
loopne
push
imul
insl
sbb
enter
and
lret
push
add
outsb
cmp
in
mov
les
scas
mov
cwtl
insl
outsb
test
cltd
or
leave
dec
call
mov
lea
test
cmpsl
pop
insl
std
mov
mov
adc
fistpl
sub
push
xchg
scas
jecxz
in
out
xor
pop
mov
or
int3
addr16
mov
or
push
jmp
lcall
mov
dec
gs
insl
int
lret
sub
sub
ljmp
sub
or
sub
push
mov
jl
pop
test
mov
sbb
stos
dec
lea
dec
sub
ljmp
sub
xchg
lods
mov
into
gs
popf
lea
push
jp
lea
test
push
cs
jl
into
imul
cmpsl
popf
or
push
insl
push
stos
push
push
sub
push
outsb
fwait
lea
imul
dec
sub
enter
gs
sub
dec
outsb
mov
jmp
mov
fs
dec
das
dec
enter
test
scas
mov
xlat
test
push
outsb
sub
push
lods
insb
sub
dec
mov
sub
mov
fdivs
imul
inc
cmpsl
xor
fbld
sti
rorl
mov
sub
adcl
cwtl
xchg
inc
pop
cmp
outsl
jl
lea
decb
das
xchg
cmp
fimuls
mov
xchg
jge
out
imul
jne,pt
js
leave
mov
gs
incb
inc
js
addr16
mov
push
push
xor
pushf
data16
pop
add
and
loopne
outsb
xchg
leave
jne
adc
flds
xor
pop
mov
es
out
in
iret
sbb
sbb
test
outsb
ror
mov
cwtl
mov
add
sbb
outsl
push
sub
xor
xor
xor
in
sub
inc
aas
sub
dec
lcall
iret
movsl
and
outsb
lea
or
sub
cmpl
xchg
loope
sbb
xchg
push
jb
fld
shlb
mov
cltd
mov
lea
push
mov
fisubrs
mov
lods
sti
leave
sub
icebp
mov
imul
push
dec
addr16
imul
xor
adc
jne
pop
shrl
cmp
sbb
pusha
loopne
outsb
mov
les
dec
mov
test
lds
cmp
jle
pop
mov
sub
shl
xor
addr16
mov
sbb
in
pop
and
data16
mov
fstps
push
xchg
dec
adc
dec
cli
into
sbb
mov
dec
int3
xchg
fsubrl
into
loope
aad
cli
fcomps
mov
lea
in
dec
push
fcoms
dec
lds
push
imul
imul
pusha
mov
pop
xor
scas
jmp
shll
and
jecxz
fsubrs
xor
call
shr
sub
add
in
in
lds
mov
dec
outsl
aad
notl
and
jmp
sarb
mov
jl
lret
sub
imul
cmpsb
xchg
mov
pop
subb
mov
push
outsl
test
mov
inc
fwait
jno
daa
add
jnp
mov
mov
faddp
pop
shlb
outsl
mov
fimull
mov
rorb
fiadds
ds
mov
jns
inc
cmp
or
cmp
add
test
cmp
lret
sub
or
cmpsb
lahf
mov
dec
inc
add
mov
movsb
jns
mov
push
cmp
inc
lret
pop
lds
ret
test
xor
ja
in
or
jmp
dec
mov
mov
push
xchg
jl
fimuls
push
xchg
adc
ljmp
icebp
outsl
mov
ds
mov
imul
fwait
test
adc
push
cmpsb
mov
lock
add
lret
cmpsb
add
add
inc
insb
mov
dec
inc
sbb
pop
scas
outsl
leave
lret
cli
rcrb
cmp
mov
fldenv
out
pop
imul
cmp
divl
sub
mov
dec
add
imulb
cmp
std
loopne
cli
jnp
push
ror
mov
ja
shll
mov
sbb
mov
jns
cs
cli
jne
or
ja
and
xchg
jne
or
sub
sub
lcall
in
sub
in
hlt
lea
adc
inc
jl
sub
xchg
fsubp
push
mov
inc
mov
fsqrt
enter
mov
je
stc
xchg
push
inc
pusha
lea
pop
mov
lods
std
cmpl
push
pop
out
incb
sub
int
jne
xchg
jo
xchg
xchg
lret
inc
sub
fisttps
addr16
addr16
and
jo
fistpll
add
cmp
mov
jp
leave
dec
mov
sub
jbe
adc
cmpsl
sub
mov
pop
ss
pusha
sub
push
ja
stc
in
xor
push
fistpll
fwait
dec
sub
xchg
mov
loopne
mov
add
mov
push
mov
xor
ret
sahf
and
push
scas
cmp
jmp
stc
imul
je
ljmp
cmc
mov
and
orb
push
sub
jne
inc
lahf
out
adc
lods
leave
pop
mov
xor
jp
out
mov
icebp
sub
or
lock
outsb
xor
js
lods
fisubrl
pop
push
mov
mov
sub
sub
inc
shll
adc
sub
add
sub
shlb
nop
ds
ljmp
xor
fsubp
xchg
xchg
inc
dec
add
fildl
es
ja
daa
ds
insb
movsb
xchg
shlb
je
outsb
out
test
cwtl
and
and
loopne
cmp
mov
cmp
jb
out
xlat
jg
mov
adc
subl
or
pushf
aas
sub
mov
lea
pop
sub
sub
not
sbbb
imul
and
pop
gs
cmp
xchg
lahf
xor
fldl
ret
or
test
pop
push
sub
iret
mov
mov
cmp
rorl
in
mov
repnz
adc
cmpsl
pusha
pop
inc
mov
inc
scas
fists
test
mov
adc
in
mov
dec
and
mov
sub
pushf
pusha
mov
addr16
inc
gs
jns
xor
fldl2t
es
add
lods
out
xor
xchg
in
cs
adc
xchg
xchg
insb
inc
stos
lahf
fcoms
gs
pushf
inc
lds
pop
leave
mov
shl
inc
adc
xchg
dec
ds
jb
sub
cmp
add
xor
icebp
sbb
lock
jmp
add
mov
sub
cmp
push
sub
mov
rolb
outsl
pushf
jmp
dec
xor
in
xor
fwait
adc
cmpsb
jne
psadbw
lea
movsl
xor
push
in
iret
jb
popf
test
inc
into
out
into
rorl
cmpsb
es
adc
call
mov
jmp
icebp
xchg
out
sbb
sub
imul
in
jb,pt
out
dec
xchg
cmpsb
test
int3
or
imul
pop
xchg
mov
mov
shl
in
sti
ja
jle
adc
loope
sbb
xchg
sub
les
dec
fiadds
push
movsl
jno
out
repz
mov
pop
and
adc
and
sub
and
icebp
sub
or
mov
cmpb
push
fidivrl
movsb
jl
fs
mov
sub
pusha
inc
and
mov
cmp
xchg
pushl
movsl
out
sbb
and
or
mov
jno
jo
sub
mov
subb
pop
repnz
lret
iret
dec
pop
ss
sub
inc
sub
js
pop
cmpsb
leave
jmp
sbb
cs
or
inc
addr16
divl
imul
por
les
push
sub
out
inc
and
jmp
sub
jge
and
sub
pop
ror
or
push
cmpsb
sub
out
cli
sub
or
fucomp
out
frstor
cmp
sbb
mov
lods
sub
imul
insl
fidivl
xchg
cmp
push
jmp
and
loope
clc
xchg
dec
shrb
add
fdivrl
inc
std
sub
mov
aas
fsts
xor
pushf
mov
pop
adc
inc
xor
inc
sahf
int3
xor
xor
dec
daa
gs
xor
roll
cmp
xlat
imul
adc
test
and
in
cmpl
xlat
sahf
sub
lahf
imul
ret
movsl
jbe
pop
push
repnz
inc
iret
ds
test
sbb
popl
sub
out
daa
xor
enter
mov
and
inc
das
xchg
lret
jmp
dec
fbstp
mov
cmpsl
xlat
sub
orb
jbe
roll
imul
push
mov
fs
les
add
addl
cmp
mov
out
inc
mov
mov
rcll
negb
push
sub
xchg
fisttps
or
ljmp
mov
mov
loop
mov
aad
add
stc
xchg
scas
nop
in
xchg
incl
inc
mov
or
xor
or
pop
cmp
add
inc
outsb
lods
cmpsl
mov
inc
sub
push
arpl
push
push
mov
mov
ficoms
movsl
fsts
lods
jno
imul
loope
lods
sub
xchg
dec
push
and
xchg
sub
sarl
mov
lods
adc
pop
pop
sub
loop
add
mov
lcall
xchg
aas
push
rclb
decb
hlt
int3
push
ds
sub
xor
adc
jg
push
add
fdivs
jecxz
or
sub
xchg
and
dec
dec
mov
fdivl
add
add
outsl
inc
mov
sub
cmp
add
inc
shr
xchg
jmp
movb
fidivrs
inc
sbb
icebp
ljmp
jmp
lock
jae
divl
ret
sub
les
xchg
pushf
aas
inc
mov
add
xchg
dec
dec
add
and
push
stos
cmp
add
add
cmp
xor
inc
leave
fdivrs
outsb
in
outsb
in
stos
cmp
mov
mov
bound
xchg
jno
movsl
cmp
flds
fcmovbe
pushf
pop
callw
orb
and
sarl
xchg
dec
pusha
pusha
mov
and
xlat
popf
push
push
xor
mov
das
inc
sub
lods
frstor
dec
push
adc
es
cmpsl
ror
out
pop
ds
out
xor
push
fldcw
sub
out
std
and
inc
or
jno
loopne
add
in
pop
or
lock
dec
xlat
push
mov
fistl
adc
mov
push
mov
mov
fstpl
movsl
inc
dec
aaa
test
adc
jno
ds
lret
imul
mov
hlt
ficomps
jmp
cmpsb
push
test
xchg
inc
adc
pusha
iret
pop
jo
or
fildl
es
push
in
pop
mull
decl
inc
call
mov
or
and
cmp
mov
lahf
pop
or
pop
dec
xchg
sti
out
gs
jl
int3
add
adc
lret
or
pop
pusha
fistpll
aas
mov
cs
repnz
daa
mov
lds
mov
sti
jb
xor
dec
dec
jne
mov
shrl
mov
cmpl
lea
loopne
movsb
adc
mov
xchg
sub
sub
fbstp
lods
scas
mov
lret
or
repz
and
lea
rcrb
lods
out
roll
nop
sarl
sarb
or
xor
mov
mov
cmp
int3
push
cmc
adc
mov
push
cmp
push
out
sub
add
imul
iret
or
lret
or
and
aam
iret
les
lds
hlt
cmp
test
cltd
add
daa
sbb
pop
leave
xchg
movsb
out
outsl
push
shll
int
jne
jl
pop
xchg
sar
mov
xor
cmp
jno
fistl
jno
insb
daa
sbb
push
mov
movsbl
sub
inc
add
dec
movzwl
ficoms
or
in
sti
pushf
gs
sub
test
push
movsl
outsl
out
sbb
outsb
imul
lds
mov
stos
out
lock
cwtl
stos
test
loope
xchg
pop
shl
mov
add
mov
hlt
or
sub
les
out
daa
loope
aad
cltd
mov
mov
out
jnp
cmp
xorb
test
add
les
jle
arpl
dec
insb
pushf
pop
incb
subb
dec
xchg
aad
sti
jo
fistpll
pop
dec
aad
xchg
sti
aaa
into
fnsave
inc
push
mov
sub
imul
adc
adc
push
pushf
outsl
iret
daa
or
outsl
sbb
and
test
sti
ja
in
insl
shrl
pushf
shrb
das
adc
imul
shll
addl
mov
dec
xor
shll
les
test
inc
sub
fistpll
ror
in
lods
jnp
xor
mov
mov
xchg
sbb
das
sbb
mov
enter
pushf
xchg
leave
xor
in
repz
mov
fisttpll
xchg
sub
pop
mov
xor
stc
push
fbld
or
xor
sub
xor
or
pop
fildll
pop
insl
push
cmpsb
scas
out
cmp
dec
outsl
mov
cmc
mov
imul
push
stc
sti
push
lcall
sti
jb
stos
cmpsb
push
sbb
dec
jae
imul
push
les
leave
cmp
add
adc
inc
mov
imul
and
sub
icebp
shl
shrl
push
gs
mov
cs
movsb
out
jae
insl
mov
jg
lret
fisttpl
jae
add
inc
test
dec
repz
sub
mov
or
push
popf
aaa
test
mov
mov
or
scas
mov
pop
jnp
inc
mov
push
loope
dec
into
iret
nop
inc
loopne
push
addr16
roll
sahf
pop
into
outsl
dec
pop
inc
and
jbe
add
jne
xor
fadd
insb
sub
cmpsb
out
push
les
xchg
cli
cmp
jg
push
jbe
pop
fdivl
pop
sbb
inc
aam
repz
cltd
insb
adcb
aas
push
cld
lahf
stos
out
outsb
add
dec
lcall
notb
inc
shrb
imul
adc
mov
mov
out
sbb
jmp
popf
cmpsb
pop
lds
xchg
add
flds
xor
ja
push
lcall
lcall
lret
imul
mov
nop
cs
imul
divl
popa
xor
insb
jge
lret
sti
jae
add
and
dec
loop
cmp
iret
pop
ljmp
add
lcall
out
popf
jb
dec
inc
out
imull
cli
fldt
push
addr16
xchg
out
mov
jno
es
bound
add
outsl
jge
pop
setl
mov
aaa
popa
outsb
enter
mov
dec
xor
and
mov
push
fwait
popa
ss
outsl
jo
stos
push
pop
mov
lret
fmul
outsl
add
push
sbb
cmpsb
stos
int
stos
and
cmpsb
inc
mov
and
es
addr16
out
mov
test
dec
fwait
pop
ficoms
imul
push
or
sbb
ret
mov
outsl
cmpsl
pop
cmpsb
pop
xor
test
add
push
cmpsl
pop
out
pop
loope
pusha
add
leave
cmp
das
adc
incb
out
incb
inc
arpl
sub
sub
xchg
push
loope
mov
bound
pop
mov
je
push
call
movsb
scas
dec
and
emms
jecxz
in
movsl
lock
fnstenv
scas
pop
xchg
dec
sub
jle
sbbb
in
aad
test
push
dec
lock
mov
xchg
popf
lods
cmpsb
jmp
pop
xor
ficomps
outsb
mov
in
sbbl
adc
mov
addr16
mov
cmp
jne
pop
and
xchg
xor
loopne
arpl
clc
mov
push
sbbl
mov
inc
xchg
test
lods
push
test
dec
mulb
outsl
fiadds
stc
mov
mov
xlat
inc
hlt
pushl
ret
inc
mov
adc
aad
push
adc
bound
jmp
sub
imul
aad
inc
mov
lods
iret
dec
mov
prefetch
jo
dec
xchg
sub
scas
mov
push
subl
cltd
jle
dec
mov
aas
sbb
scas
sub
cmp
dec
movsb
mov
jns
hlt
bound
fisttpll
add
xchg
loope
sub
popl
pop
add
jecxz
push
or
adc
fbld
pop
dec
dec
sub
aad
mov
dec
cmp
stos
aas
popf
or
test
inc
test
fwait
scas
jne,pn
jo
jl
sbb
stc
imul
lret
loopne
mov
push
and
stos
mov
xchg
inc
movsl
fdiv
jg
push
scas
mov
repnz
aaa
arpl
mov
mov
cmp
cmpsb
sbb
aas
aad
inc
cld
inc
mov
xorb
sub
push
dec
pop
push
xchg
xor
jbe
fcomps
xorb
dec
pop
fsubl
or
mov
and
or
add
adc
dec
stc
cltd
clc
push
push
insb
cmpsb
ret
inc
or
movsl
sbb
sub
jnp
cwtl
lods
pop
jp
pop
and
lods
in
mov
clc
fisubrs
dec
mov
loopne
sbb
ljmp
sbb
xor
pusha
push
lahf
push
mov
sbb
xor
mov
pushf
push
xor
or
jmp
xchg
xor
fnstenv
jg
xor
in
mov
fsubrp
call
mov
and
jb
cmpsl
mov
cwtl
cmpsb
movsl
inc
pop
xor
sarb
cltd
xor
add
fs
dec
inc
cs
xchg
mov
mov
repz
test
lock
adc
pop
or
fldt
pop
dec
outsl
repnz
mov
pop
jb
shrl
mov
inc
cmc
in
sahf
sti
sub
mov
repz
js
add
popf
enter
mov
sub
pop
add
mov
in
sub
lods
mov
out
shrl
inc
in
aas
pop
subl
lods
cmp
sbb
inc
fdivl
hlt
jmp
test
push
adc
pop
shrl
pop
mov
addr16
shrl
xlat
mov
sbb
imul
or
adc
lret
sahf
cmpsl
dec
jo
pop
mov
xchg
sub
in
aad
mov
enter
push
loope
dec
xchg
movsl
addb
out
push
sub
xor
out
add
inc
sub
sub
call
int3
sbb
hlt
pop
dec
sbb
sbb
idivl
sbb
pop
xchg
sub
or
xchg
repz
js
lcall
pop
sar
xor
jmp
and
xchg
push
jecxz
insl
pop
xchg
stc
daa
pusha
mov
js
xor
out
cs
sbb
sub
cmpsb
mov
fistpl
jno
outsl
pushf
cmp
and
cmp
nop
jne
bound
fildll
push
jmp
cmpsb
inc
push
out
mov
je
popa
sub
in
mov
pusha
std
scas
lea
xchg
ficompl
xor
lds
out
call
inc
mov
insb
nop
pop
pop
xchg
gs
pop
mov
push
les
fidivs
cli
insb
pop
push
cmp
aad
inc
dec
inc
adc
mov
jnp
lods
movsl
push
inc
and
iret
mov
pop
out
inc
int
add
adc
dec
xor
cmp
lods
push
mov
dec
imul
fistl
aad
out
xchg
lret
in
jmp
and
adc
dec
arpl
popa
mov
fs
into
das
mov
adc
fistl
cmp
shl
dec
pop
or
int
test
xlat
outsl
jno
test
fs
pop
dec
sbb
cmpsb
ret
out
inc
popf
lret
outsl
mov
stos
adc
lret
and
xchg
lock
mov
into
push
and
pop
or
insb
in
outsl
push
push
gs
fdivp
popw
pop
in
sahf
push
loope
cltd
and
lods
andl
aam
or
fisttpl
out
jmp
sti
cwtl
jns
xor
jl
dec
iret
pop
xchg
pop
mov
push
je
dec
dec
cs
es
dec
cmpsb
mov
mov
in
icebp
repz
nop
out
xchg
cmc
aaa
sub
add
bound
push
and
daa
push
mov
add
std
into
call
sub
roll
and
jmp
stos
arpl
pop
mov
ficompl
or
adcb
or
pusha
outsb
daa
sub
xchg
iret
jno
jecxz
xchg
push
outsb
inc
dec
int3
nop
movl
lret
dec
cmpsb
jb
aad
mov
inc
inc
movsl
or
pop
lcall
test
out
cmpsb
rcl
jne
icebp
xchg
xchg
add
call
call
int
xchg
sbb
addr16
mov
mov
stos
repz
test
dec
push
inc
push
push
mov
test
dec
addr16
jg
mov
sub
inc
and
mov
cmp
sbb
data16
add
adc
and
mov
mov
inc
xor
es
pop
stos
push
pop
adc
daa
lds
push
sbb
fldl
shll
daa
testb
inc
sbb
or
movsl
inc
xchg
mov
mov
mov
pop
or
adcl
sub
iret
xchg
pop
and
pop
cmp
xlat
push
lods
out
aas
xchg
scas
fwait
pop
mov
adc
sub
mov
pop
lods
push
xchg
pop
js
inc
mov
cmpsb
xor
xor
lods
mov
frstor
sbb
pop
xchg
jo
fcomip
call
out
adc
push
out
xchg
aam
rcll
mov
or
or
lods
push
push
dec
clc
gs
scas
fbld
push
nop
sbb
push
push
and
mov
mov
push
xchg
cmp
sbb
out
sbb
fldl
cmp
dec
xor
andl
pop
inc
jnp
mov
sub
mov
in
std
pop
outsl
ja
pop
lret
fldcw
mov
add
pop
xchg
jl
jae
dec
mov
xchg
push
inc
jg
lds
pusha
push
lods
push
dec
sub
mov
fists
mulb
stos
into
add
lahf
loope
or
sub
sub
ljmp
jl
push
sbb
pop
mov
es
scas
lahf
test
mov
jbe
dec
xchg
jne
mov
adcl
dec
fiaddl
mov
outsl
dec
xchg
sub
std
lods
aas
nop
lods
imul
insb
ret
xchg
fnstcw
cmc
and
mov
lret
xchg
lfs
sub
imul
adc
mov
das
sub
cltd
fs
mov
xchg
cwtl
add
jb
outsb
xor
xchg
repz
inc
pop
jg
cmpsb
ljmp
push
cld
insb
inc
test
push
shl
iret
hlt
stc
daa
xchg
sbb
sub
aaa
mov
int3
sub
subl
jne
xor
dec
inc
cwtl
push
mov
jae
std
out
jnp
nop
mov
pop
inc
jmp
negb
popa
pop
sbb
jg
mov
aas
xchg
subl
add
divb
insl
add
jecxz
fbld
pop
aad
subb
jno
fcmovnb
ljmp
enter
dec
aam
ss
iret
xchg
dec
jecxz
lods
mov
cmpsl
cwtl
negl
ja
movsl
mull
pop
arpl
or
fs
dec
cmpsb
push
sub
sbb
pusha
loopne
testl
fildll
sub
test
in
sub
daa
test
sarl
adcl
fldenv
setg
jmp
insb
ljmp
enter
outsl
add
out
mov
or
pop
mov
pop
fidivrs
sub
jbe
jecxz
push
cmc
pop
push
lods
add
mov
and
sbb
addb
mov
jg
call
push
fcomi
mov
movsb
jl
inc
mov
mov
jae
inc
lea
jge
insb
adc
sub
pop
mov
inc
mov
cmpsb
and
orb
pushf
jecxz
jbe
pop
out
mov
push
outsl
imul
jo
jnp
pop
mov
inc
jmp
outsb
addb
mov
imul
out
push
mov
add
pop
inc
out
fstl
mov
add
outsl
jle
in
xlat
in
mov
bound
and
into
push
test
fucomi
push
orb
rcl
loopne
sub
outsl
dec
stos
add
push
xor
inc
and
cmp
inc
rcrb
pop
imul
std
inc
pop
sub
xor
fmulp
jns
mov
std
xchg
inc
sahf
in
daa
lret
test
inc
es
fs
adc
into
push
inc
push
xor
hlt
mov
lcall
lds
cmp
fstpt
xchg
out
pop
mov
inc
cmp
aas
xor
in
sub
sti
cmpsb
scas
das
popa
inc
add
fistps
nop
leave
pop
call
lret
testb
dec
out
outsl
jle
scas
out
mov
in
xchg
or
xchg
jb
and
sub
jle
cmpsb
insb
xorb
jb
sub
jp
imul
aad
pop
lock
fisubs
mov
xor
enter
adc
loope
inc
dec
adc
jg
in
repz
adc
aad
loop
test
fs
das
xchg
inc
jne
mov
push
out
xchg
pop
sub
add
inc
push
sbb
orl
pop
inc
sub
imul
mov
imul
insb
or
xor
jmp
ret
into
dec
mov
sarb
sbb
scas
imul
xlat
call
cmc
sub
sbb
movsl
mov
in
sti
jle
andl
les
cli
not
lea
movsl
dec
pusha
add
dec
div
sbb
mov
js
lock
inc
pop
cmp
test
mov
push
dec
fsubl
cmp
pop
sub
imul
testl
jne
rorl
in
lcall
std
push
xor
pop
mov
sub
xor
test
cmp
flds
pop
fisubrs
push
inc
jle
pop
aas
outsl
mov
mov
int
cmp
adc
push
scas
xchg
or
cmp
dec
pop
mov
add
push
xchg
je
push
dec
jmp
lods
add
int
inc
aad
mov
inc
inc
xchg
int
pop
addr16
mov
push
outsl
mov
clc
movsl
sub
xor
dec
xchg
cmpsl
in
cmp
ret
popf
scas
adc
out
dec
aaa
por
outsl
sti
lcall
shrl
jg
and
mov
negl
aam
mov
xor
ja
xchg
and
cmp
push
sub
mov
test
sub
lods
mov
cmp
pusha
and
push
sub
jg
movsl
iret
mov
roll
sub
mov
dec
mov
inc
cmpsb
sti
stc
xchg
cmc
in
leave
aad
idivl
push
out
lods
popf
xor
add
test
arpl
sub
pop
ss
addr16
movsl
scas
iret
mov
pop
xor
inc
data16
stc
arpl
pcmpgtd
movsb
out
mov
pop
push
repz
shl
push
push
in
mov
adc
cltd
inc
inc
out
imul
push
rorl
cmp
push
test
outsl
bound
mov
out
ljmp
pop
clc
pusha
push
outsl
jp
cmp
imul
mov
sub
rolb
fldl
jo
add
mov
loopne
xchg
pop
sar
insb
sbb
out
lahf
sub
mov
in
cmp
pop
mov
cmp
or
aas
pop
sarb
dec
and
pop
inc
sbb
fldt
popf
and
lret
repz
aam
js
inc
dec
outsl
jno
ss
enter
in
movsl
cmpsb
adc
add
xor
mov
ret
call
outsl
add
movsl
js
cmpsl
scas
or
mov
push
cwtl
jp
cmp
pop
push
stos
into
scas
xor
outsb
in
mov
and
push
pop
push
lea
scas
outsb
adc
adc
sbb
pop
outsb
lcall
in
push
adc
mov
dec
lods
shrb
mov
pop
xor
cld
rcrb
lock
stos
outsb
cmpsb
sbb
sub
inc
andb
mov
pop
or
dec
outsb
lret
fwait
dec
scas
adc
sub
scas
sub
pop
dec
sub
xor
daa
ja
in
cmp
lods
dec
and
popa
lods
mov
dec
jmp
jae
sub
cmp
int
or
test
jmp
lods
xchg
daa
frstor
jnp
test
sahf
xchg
and
mov
stos
dec
sub
xchg
int3
int3
in
jnp
in
mov
xchg
jbe,pt
push
mov
sub
iret
stos
cs
das
int
and
enter
lea
int
pop
out
aam
pop
sub
dec
sub
cwtl
and
iret
xchg
mov
dec
test
int3
lods
test
dec
dec
imul
push
mov
sub
insb
call
insl
or
insb
push
int
mov
movsb
outsb
insb
mov
push
push
dec
push
cs
lds
jnp
daa
or
sub
dec
sti
lods
test
imul
cmp
sub
stos
push
and
das
dec
or
and
lods
dec
imul
sbb
dec
pop
sub
sbb
jmp
push
sub
dec
dec
dec
mov
pop
dec
mov
or
dec
push
mov
iret
movsb
dec
insb
or
dec
mov
aad
sub
iret
test
cmpsb
in
out
adc
cmp
cmp
jl
mov
cmp
xchg
add
dec
imul
and
push
nop
repnz
jl
icebp
cli
in
pop
aad
outsw
mov
inc
loop
dec
shll
adc
cltd
or
imul
shlb
sarl
js
jo
call
pop
xchg
sub
outsb
mov
xor
fwait
sbb
push
mov
sub
iret
js
jp
push
test
lds
xor
repz
sbb
divl
jmp
xchg
and
dec
cmp
sub
imul
jg
or
push
es
insb
lock
cmpsl
inc
sbb
inc
cmovl
cs
lock
cld
repz
and
test
jb
inc
shll
out
pop
fisttpll
es
push
jne
nop
xchg
fwait
jg
xor
cli
xchg
sbb
xchg
mull
out
or
cmpsb
icebp
jo
sbb
outsl
xor
ffree
mov
or
popf
aam
lods
cmpsb
mov
jbe
movsb
cmp
sub
in
aad
lock
jmp
int3
inc
pushf
sub
mov
stc
mov
mov
sub
add
mov
insb
mov
push
mov
mov
push
mov
gs
fcompl
inc
mov
jl
add
enter
push
dec
pusha
cs
jecxz
add
lret
cmp
fisubrs
mov
loop
adc
repnz
mov
push
leave
xchg
dec
sbb
jecxz
jmp
pusha
push
push
xchg
int3
cwtl
push
or
pushf
in
or
lcall
int3
popf
pop
sub
push
pop
adc
dec
lahf
xor
outsl
aad
sbb
push
inc
fstpl
adc
add
les
sahf
movsb
cmp
fwait
mov
in
xchg
dec
cmpsb
sub
pop
jle
pusha
push
int
imul
or
jge,pn
out
jo
xchg
inc
push
jle
cmpsb
sub
bts
mov
out
rorb
jp
pop
push
sti
fwait
vmovsldup
nop
mov
push
jnp
popa
xchg
fnstenv
xor
out
test
movsl
pop
leave
push
sub
sbb
js
fnsave
mov
add
pop
pushf
xor
mov
loop
mov
mov
insb
mov
ds
cmpsb
std
jge
outsl
and
sub
pop
add
mov
push
repz
shrl
push
mov
mov
cwtl
mov
and
xchg
orb
popa
jnp
sti
neg
sub
fidivl
and
cmpb
mov
pop
pusha
int
data16
shll
pop
sub
inc
out
xor
mov
loope
outsl
sbb
dec
mov
inc
push
xor
jo
cmpb
rcll
ret
aaa
hlt
sub
test
cwtl
lods
and
test
js
scas
sub
insb
or
push
iret
sti
jmp
push
add
dec
test
and
mov
movsb
xchg
jecxz
jbe
not
jne
sbb
lea
sbb
aad
out
stc
enter
push
repz
and
sub
test
das
jno
sbb
jo
cmp
fdivr
movsl
imul
sub
jb
xlat
push
pop
push
bound
dec
or
jmp
inc
outsl
sarl
cmp
popf
or
mov
add
cmp
popa
jbe
arpl
cmp
outsl
loop
repz
sbb
jecxz
mov
testb
leave
jo
pop
pusha
aaa
jle
subb
adc
pop
mov
add
dec
cmpsb
sar
sahf
cmc
lea
sbb
addr16
mov
js
std
pop
cmpl
xlat
pop
ror
xchg
mov
loop
pop
jne
add
sub
fists
jg
jmp
aad
arpl
ljmp
dec
jg
pop
cmpsb
bnd
jmp
jecxz
lds
cmp
sbb
sbb
shll
aad
mov
dec
pop
mov
xor
bnd
jge
add
int3
adc
lret
jmp
aas
cmp
push
sahf
iret
and
mov
sub
mov
imul
cltd
mov
ss
outsl
add
aad
push
cwtl
in
insl
daa
insl
pusha
mov
jle
or
lea
je
inc
and
mov
pop
fcomps
outsl
fisubrs
decb
sub
adc
pop
imul
inc
adc
jle
ds
adc
xlat
pop
jb
lahf
pop
es
inc
popf
fstp
jne
addb
repz
fdiv
mov
jg
loop
mov
pop
mov
jbe
es
fnstenv
stos
or
push
test
arpl
mov
fiadds
shlb
mov
dec
test
int
js
jns
popf
jne
mov
or
adc
mov
aaa
mov
out
jbe
loope
shlb
sbb
out
loopne
pop
or
stos
push
adc
ret
xor
hlt
fstl
push
mov
sub
dec
sar
adc
dec
mov
add
cltd
imul
mov
cmp
fcomp
fdiv
add
cltd
mov
push
outsl
mov
or
dec
icebp
dec
add
subb
adc
test
xor
mov
adc
outsl
imul
daa
sub
pop
jecxz
int3
cmp
test
cmc
dec
jmp
loope
imul
outsw
xchg
jno
pusha
aas
sub
sti
push
jb
pop
mov
xchg
inc
mov
roll
jecxz
fwait
leave
push
mov
jl
scas
dec
adc
mov
push
leave
sub
sub
lret
mov
cmp
outsl
or
add
sub
test
add
xor
popf
jge
xchg
int3
dec
inc
mov
sub
outsb
andb
icebp
imul
xor
clc
stos
xchg
mov
mov
movsl
push
mov
std
mov
or
push
lock
or
or
sbb
bound
mov
test
dec
aas
sub
in
jg
mov
mov
imul
jp
cmpsb
sti
sub
nop
mov
xor
mov
in
inc
icebp
inc
xchg
stos
and
xchg
pop
mov
push
in
shrl
xchg
cmp
pop
cmp
push
sub
or
inc
scas
jmp
mov
cmpsl
cs
outsl
sbb
mov
es
add
les
and
adc
pusha
sub
inc
ja
push
jo,pt
aaa
das
and
sbb
add
movsb
xor
xchg
mov
xchg
cmpsb
or
pop
pop
js
fsts
inc
js
xor
xchg
add
fildll
outsb
jl
test
aaa
pop
int3
iret
fwait
cli
cmpsl
inc
sub
jle
jl
icebp
push
sbb
das
in
xchg
push
paddusb
lea
insb
mov
push
adc
sbb
add
cs
in
pop
mov
ja
push
and
ret
sub
outsl
test
cmp
and
fistps
sbb
push
jae
insl
scas
outsl
in
xor
sub
mov
add
lods
jne
popf
idiv
addr16
xchg
or
mov
fimuls
xchg
mov
jnp
jecxz
jbe
pop
enter
jnp
fimuls
int3
mov
adc
repnz
lods
pop
stc
into
xchg
std
clc
mov
xor
into
xchg
mov
fidivs
and
mov
jecxz
fildl
and
mov
cld
sub
lcall
mov
jmp
xchg
int3
test
mov
cmp
test
lret
cmp
mov
pushf
xchg
insl
jg
mov
add
fsubrs
xchg
inc
rorl
pop
add
mov
repz
mov
jle
pop
ds
cld
repnz
bound
fwait
sub
push
daa
sbb
loopne
leave
repz
repnz
mov
lcall
testl
pop
push
in
inc
dec
lods
add
ret
jno
lcall
jns
sub
push
stc
ja
rorl
cmpsb
jno
inc
dec
aam
adc
gs
pushf
inc
inc
jge
xor
outsb
mov
shl
dec
clc
jmp
or
mov
inc
cmp
xchg
sub
ljmp
jge
rcl
shl
add
outsl
test
outsb
jmp
add
es
repnz
jo
adc
out
dec
ficomps
cld
sbb
xchg
pop
ret
pop
insb
dec
arpl
fldt
dec
add
pusha
xchg
loopne
sbbl
in
jl
jne
sub
insl
xchg
and
cs
rcl
pop
push
insb
nop
push
mov
cld
mov
xlat
jmp
mov
xchg
inc
jle
jae
aam
sahf
xor
adc
outsl
and
in
dec
and
aad
jno
repnz
ja,pn
out
sub
pop
imul
pop
mov
rcl
fsubrp
or
and
sbb
inc
sub
es
xor
cmp
cmp
cmc
fists
enter
push
add
xchg
out
insl
jp
push
mov
sub
outsl
lret
cmpsl
dec
add
cmpsb
andb
pop
jg
mov
call
shr
in
iret
xor
push
bound
aaa
sub
xchg
imul
mov
shl
out
cmc
out
pop
shlb
fldenv
mov
test
sbb
mov
int
pop
ficomps
jle
adc
dec
xor
je
jb
pushf
push
inc
std
jl
sbb
fwait
scas
push
repnz
imul
and
insl
ret
add
cmpsl
stos
pop
xchg
dec
fistps
or
push
outsb
mov
xor
jl
sub
xchg
jno
fnstsw
pop
xchg
sub
clc
iret
sti
sub
les
xchg
gs
clc
push
jnp,pn
jo
rcrb
call
movsl
pop
adcb
jle
mov
pop
or
inc
mov
int3
inc
retw
push
sbb
xchg
cmpsb
out
out
xor
fidivrl
mov
mov
xchg
xchg
push
jmp
xchg
jo
scas
test
push
dec
mov
out
add
pop
sbb
sbb
arpl
movsb
sub
mov
cmpsb
insl
insb
and
sub
outsl
and
ret
or
inc
xchg
push
lfs
sub
xchg
inc
cmpsb
ficomps
cmpsb
es
sti
push
into
add
movsl
mov
dec
clc
push
pop
lods
push
mov
ljmp
dec
int
xchg
or
lret
mov
mov
loopne
out
cs
jge
mov
xor
mov
sub
mov
js
xor
mull
imulb
mov
neg
movsl
scas
fldcw
daa
mov
cmp
pop
fidivrs
lea
add
ljmp
test
out
sbb
and
daa
in
ds
cmp
das
jnp
mov
repnz
dec
ljmp
mov
test
test
mov
xor
mov
sbb
lods
xor
dec
out
icebp
push
push
mov
cmpsl
mov
sub
pop
pop
jne
add
pusha
jmp
jb
mov
das
bound
movb
lods
xor
dec
aaa
jbe
sbb
add
sub
or
rorl
movsb
ss
sti
dec
pop
lcall
xchg
pop
lods
dec
dec
or
cmpsl
or
pop
sub
js
inc
js
jmp
jle
push
or
icebp
jp
jle
paddusw
dec
ds
mov
movsb
dec
lea
sbb
shrb
dec
lea
fsubrl
divb
test
xor
lea
dec
shrl
inc
fists
lock
arpl
sub
cmpb
add
dec
xchg
insb
es
fwait
outsb
push
outsb
push
dec
adc
dec
cmc
pop
mov
call
mov
pop
jp
jge
jecxz
scas
repz
loopne
mov
movsb
cmpsl
jb
dec
and
xchg
add
arpl
mov
adcl
sbb
mov
cmpsb
push
lea
pop
xchg
and
inc
and
iret
inc
sub
cmp
icebp
ror
push
xchg
mov
fmul
sub
lds
xchg
mov
sub
mov
fbld
loope
scas
data16
push
cmpsb
mov
out
test
xlat
hlt
outsl
cmp
lds
push
sbb
push
xchg
aad
int3
subb
mov
fldt
add
mov
xor
in
mov
cmp
popf
repz
sub
xor
push
or
push
mov
loopne
es
pop
and
andb
out
andl
fstl
int3
or
flds
xor
push
std
imul
jl
pushf
clc
xchg
push
out
clc
pushf
mov
inc
xor
pop
in
mov
push
dec
jne
fbld
mov
push
sbb
outsb
mov
outsb
and
icebp
xchg
test
pop
mov
push
std
repz
rclb
pusha
mov
bound
or
push
mov
pop
add
or
fwait
cmp
xor
xchg
jno
out
jle
jge
data16
push
dec
shr
aad
sub
dec
pop
push
dec
testb
scas
push
sub
sub
orb
stc
in
and
frstor
dec
nop
xchg
pop
or
pop
xor
cmp
xchg
jl
cmp
ds
imul
adc
jg
popf
inc
or
filds
js
dec
and
aad
outsl
loopne
insl
fwait
inc
fisubrs
dec
lahf
into
xchg
repz
int
jne
jno
sub
outsb
pop
sahf
arpl
push
and
or
iret
fwait
stos
add
pop
jp
in
cltd
mov
jno
sub
inc
icebp
and
pushf
loope
icebp
insl
adc
clc
movsl
xor
nop
add
iret
sub
loopne
aad
adc
pmullw
in
push
pop
iret
lock
dec
in
add
inc
xor
iret
lret
mov
push
inc
inc
pop
jne
sub
xor
push
jmp
out
push
xchg
fwait
push
cmc
cmp
mov
jp
inc
mov
xchg
sub
in
xchg
pop
inc
outsl
jb
inc
mov
dec
dec
jp
xchg
mov
xor
repz
jno
dec
insl
in
iret
xor
fs
sbb
repz
and
loopne
inc
ljmp
push
add
jno
jnp
movsl
bound
int
cli
pusha
loopne
adc
sub
in
out
push
icebp
out
cmp
add
sub
addl
mov
pusha
pop
pop
pop
inc
jg
sub
mov
push
jle
dec
cwtl
les
aaa
push
jle
test
add
inc
movsl
into
and
push
sub
in
add
dec
lea
lds
pop
sub
mov
add
sahf
mov
adc
movsl
stc
test
jne
push
sti
aad
dec
jnp
xchg
in
repz
cli
sub
imul
jmp
cmpl
lret
out
xchg
out
push
pusha
and
jle
mov
repz
add
test
xlat
xor
mov
flds
in
fcmovnu
in
cmp
call
inc
test
xchg
pop
insb
adc
int3
or
pop
add
sub
ret
test
or
lods
inc
popf
sbb
outsl
pop
arpl
fsubs
sbb
or
or
add
dec
int3
stos
lret
rolb
mov
add
test
adc
cli
cmc
int
pop
mov
fmuls
add
repz
jbe
lea
inc
jl
dec
imul
mov
cmpsb
dec
mov
daa
push
jbe
rorb
lret
test
mov
clc
dec
in
in
dec
movsl
ds
push
inc
ja
mov
or
mov
mov
bound
pop
xor
test
aas
mov
dec
fadds
in
in
fsubrp
pop
imul
jl
sbb
add
dec
xor
mov
inc
cmp
out
popf
dec
push
pop
xchg
pop
in
dec
cmpb
dec
xchg
outsl
call
or
inc
mov
es
lahf
jecxz
daa
outsl
xor
das
stc
dec
fldcw
hlt
xor
ljmp
xchg
lods
jns
outsl
fistps
lods
out
mov
sbb
jbe
xchg
add
and
das
jmp
movsl
outsl
int
in
rorl
dec
rcl
fs
inc
int
sub
mov
cli
jmp
sbb
push
stos
sti
mov
push
gs
and
or
ret
decb
inc
xlat
jle
movsl
scas
pushf
insl
and
mov
ret
mov
addr16
xor
in
movsb
out
outsb
mov
xlat
or
jo
scas
rcrb
mov
mov
lahf
sbb
outsl
sbb
mov
clc
xchg
fildll
xorl
pop
jg
inc
movhps
pop
in
cmpsb
movb
bound
pop
iret
mov
sub
js
clc
jp
cmp
pop
sahf
arpl
cmp
cmp
test
sub
aad
pop
mov
pop
popl
inc
sub
cmp
cmp
mov
iret
shrl
popf
clc
scas
loopne
in
inc
fsubrs
xchg
mull
mov
gs
das
dec
lods
add
stc
into
mov
cmc
test
and
rcrl
adc
les
cld
xchg
stos
sbb
fwait
add
xchg
inc
inc
dec
ds
sti
push
xchg
outsb
cmpsb
nop
mov
dec
scas
mov
dec
arpl
mov
cmpsb
xor
sbb
jg
dec
cltd
cwtl
push
ret
jecxz
lcall
dec
rol
fwait
sahf
cltd
aam
aas
int
mov
cmp
sbb
hlt
mov
and
dec
or
xchg
xchg
rclb
mov
pop
jmp
mov
mov
xchg
dec
ss
add
inc
mov
or
pushf
divl
mov
jmp
das
push
xchg
and
cmp
jecxz
sub
cmpsb
xor
xchg
imul
rcll
fisttpl
jge
pop
std
pop
ret
cmp
faddl
mov
adc
enter
nop
int
ffree
hlt
pushf
pop
movsl
mov
xchg
hlt
aas
inc
pop
out
inc
subb
mov
mov
dec
testl
cs
jbe
add
in
jecxz
or
cmp
inc
outsl
adc
fnstenv
jb
xlat
sub
dec
ret
sub
ljmp
scas
pop
pop
and
fcmovne
imulb
cmp
mov
frstor
outsl
jp
mov
cmp
sub
icebp
movsl
push
push
mov
aad
sub
hlt
sub
stos
das
add
sbb
insl
subb
xchg
jl
pop
push
repz
cmpsb
mov
or
add
mov
std
std
pop
imul
cwtl
sub
fnsave
sub
and
lcall
insb
stos
mov
xor
sub
sub
scas
push
js,pt
adc
xor
xchg
outsl
movsl
bound
fwait
repz
lock
jbe
sbb
pop
add
push
xchg
mov
add
es
add
xor
jl
mov
sbb
movsb
dec
inc
mov
cmp
out
mov
cmp
push
push
cmp
mov
dec
fs
inc
scas
jmp
push
dec
int
sub
xorb
insl
out
xchg
pop
sbb
lret
push
jl
movsl
xor
xor
xor
std
push
sub
pop
outsl
test
or
sub
add
push
jmp
push
xchg
inc
lret
add
xchg
sbb
stos
or
add
gs
jo
fldt
test
cmpsl
imul
jne
or
cwtl
test
mov
xchg
mov
movsl
shrl
div
ljmp
mov
lcall
lods
fsubs
les
movsl
insl
sbb
stos
xor
push
sbb
lret
std
fldcw
mov
pushf
imul
inc
sub
scas
das
inc
insl
add
sbb
pop
cmpsl
stos
cmc
sub
xchg
movsb
lahf
cwtl
loope
cmpsb
and
xor
xchg
mov
cmp
outsb
mov
pop
imul
hlt
mov
jecxz
out
cmpsl
pop
outsl
subb
js
mov
dec
xchg
sahf
bound
test
push
sub
pushf
or
outsl
dec
jnp
mov
in
xchg
and
out
test
stos
out
std
loopne
fdiv
sub
aam
dec
cmp
std
cmpsb
pop
lret
add
mov
outsl
lahf
gs
jmp
pop
sbb
mov
jne
xchg
xchg
out
jge
call
inc
loope
xor
popf
pushf
mov
sub
pop
lods
lods
roll
mov
in
jmp
mov
sub
outsl
dec
arpl
xchg
xor
aas
stos
sub
jle
lret
test
add
bound
and
push
ds
je
addb
arpl
cmp
cmp
xor
dec
inc
sub
xor
subb
ret
sub
dec
aas
xor
mov
fwait
dec
sahf
test
inc
test
jle
push
xchg
mov
jg
int
inc
mov
and
addr16
pop
or
cmp
stc
stos
mov
pop
aaa
jne
push
sub
loopne
add
outsl
xchg
xchg
stos
icebp
stos
jmp
rcrb
scas
rol
sub
mov
push
imul
movsl
rep
lds
out
insb
push
lock
rep
inc
dec
pop
mov
cmpsb
mul
inc
fsubrl
push
push
outsl
or
jecxz
clc
in
push
sahf
sahf
add
dec
arpl
fmul
test
sbb
xor
imul
inc
adc
ret
push
mov
xor
fldt
xor
xor
std
cmp
mov
lahf
push
xchg
call
and
cmpsl
adc
mov
popf
xchg
insl
aad
sub
and
test
test
adc
fs
sbb
fwait
les
shlb
push
fsubl
cmpsb
aam
add
cmp
lods
outsl
add
push
inc
cmpsb
push
push
adc
cwtl
cmpsl
imull
inc
scas
pop
test
xor
mov
outsb
sub
cmc
les
push
sub
jmp
ficompl
inc
mov
dec
mov
mulb
pop
jae
int
fisttps
sar
cmpsb
test
fisttps
push
inc
pop
mov
fdivrl
jecxz
test
mov
ret
loop
xchg
and
insb
add
jmp
add
inc
pop
mov
inc
jecxz
lcallw
es
xchg
dec
out
or
jmp
les
dec
jl
fdivrp
nop
pop
shlb
cmp
sub
cmp
ja
pop
outsb
lock
dec
in
lahf
iret
dec
cwtl
call
scas
xchg
sbb
cld
mov
push
inc
mov
sub
test
dec
and
lock
jecxz
inc
les
and
mov
mov
repz
stos
inc
cmp
dec
sub
mov
mov
mov
fwait
lds
xchg
and
in
outsl
jne
in
ja
jecxz
mov
jp
push
mov
out
sub
add
cmpsb
cmpsb
es
jl
dec
addr16
test
push
sti
addb
subl
loop
cmc
and
test
shlb
mov
push
jmp
ret
sbb
test
xchg
mov
in
mov
addl
add
popa
xchg
je
repnz
mov
aas
sbb
or
fnstsw
jno
inc
sub
outsb
xor
push
stc
addr16
inc
pop
xor
movsl
jmp
pop
inc
xor
sub
mov
xor
dec
mov
js
inc
pop
jge
shll
push
jmp
sahf
fists
cmp
cmpsl
push
test
fsubs
loope
push
sub
xor
push
sub
stc
add
sub
bound
mov
mov
sbb
mov
ljmp
fstpl
ja
adc
mov
sub
out
pop
add
or
sbb
out
jle
es
push
outsl
pop
popa
sbb
jg
or
scas
test
inc
gs
aas
hlt
stc
xor
popa
enter
sti
sub
push
xchg
jecxz
lahf
cwtl
outsl
fwait
stc
data16
cmpsb
jb
sbb
pop
pop
call
add
movsl
lahf
sub
cmp
fistpl
jno
mov
test
jmp
int
aad
or
std
in
movsb
enter
add
fsubp
sub
orl
dec
popa
push
sub
mov
insl
imul
sbb
fcomps
adc
pop
xor
les
add
or
shl
cld
mov
imul
cli
sbb
js
stos
test
dec
out
mov
insb
outsl
enter
pop
pusha
adc
lods
dec
jmp
sahf
sub
sbb
cmp
mov
call
pop
sbb
or
addr16
sub
sbb
or
aaa
shl
addr16
dec
cld
pusha
xchg
pop
aam
mov
lock
test
xor
iret
je
inc
iret
cs
push
lcall
stos
jle
es
pop
jb
stos
inc
push
add
outsb
lret
cmpsb
ss
jbe
aas
xor
push
les
push
rorl
movsb
push
mov
out
hlt
mulb
fsub
mov
mov
jge
loop
sarb
popf
in
lcall
lock
mov
sub
pop
xor
cmp
shrl
daa
dec
les
pop
lahf
es
or
xchg
inc
insb
cmpsl
ret
or
pop
shrl
aaa
xor
add
iret
adc
ret
and
rcrl
inc
pop
xor
or
or
dec
mov
out
cld
push
add
inc
jl
aad
mov
inc
mov
jbe
pop
mov
loope
pop
aad
mov
fcompl
iret
dec
movsb
pop
mov
sub
imul
sub
jmp
std
lds
sbbl
add
push
mov
xchg
inc
lret
shll
mov
adc
fiadds
out
jbe
outsl
inc
and
fs
push
adc
sbb
mov
push
jl
aad
cmp
jmp
jbe
add
xchg
mov
jle
cltd
sub
add
insl
push
dec
imul
sub
sbb
pop
mov
mov
pushl
xchg
outsb
repz
lods
test
or
scas
xor
xchg
jle
mov
dec
scas
adc
loopne
lahf
decl
add
pop
enter
dec
jne
pop
popa
imul
mov
aad
out
push
pop
mov
out
sub
inc
pop
mov
adc
jns
push
outsb
mov
xchg
push
aad
sub
add
cltd
xor
sbb
shlb
insl
in
mov
mov
dec
stos
test
push
popf
sub
push
les
mov
xchg
jnp
add
mov
push
lods
div
leave
popa
push
mov
jb
outsl
pop
push
mov
push
cmp
adc
mov
xor
sub
cmc
int
in
in
cmpsb
or
jae
pop
cmp
bswap
lods
xor
jge
hlt
les
imul
pop
dec
sub
imul
loope
push
sub
inc
loopne
arpl
inc
jecxz
loop
jl
inc
mov
scas
shl
std
sbb
mov
inc
pop
xchg
dec
xchg
scas
fstpt
lret
xchg
repz
xchg
loop
pop
dec
add
andl
ds
and
movsl
or
mul
cmpl
pop
pusha
jle
dec
imul
sarl
cmpsb
pop
push
std
out
mov
pushl
arpl
bound
movsb
inc
or
inc
fistpl
outsl
fwait
xchg
outsl
fwait
or
mov
push
cmp
lcall
pop
js
mov
out
adc
int3
add
loop
lea
adc
lret
sub
cmpsb
push
push
inc
imul
pop
inc
pop
add
in
jb
dec
in
imul
xchg
jae
addl
iret
push
orb
jnp
cmpsb
fdivrl
daa
popa
test
push
pop
jbe
jg
les
xor
dec
adc
shll
sub
das
or
cli
into
sarb
shlb
xor
dec
pop
lret
rcll
scas
enter
sbb
cmpsb
mov
dec
mov
jb
aas
cmp
jb
xchg
mov
insb
scas
pop
aad
mov
test
adc
loopne
in
data16
les
lods
mov
xchg
inc
mov
aaa
outsl
sbb
lods
jge
icebp
pop
lds
or
mov
add
bound
sbb
add
push
jl
les
dec
lret
test
xchg
fstp
xor
inc
lods
outsl
push
int3
inc
ds
xchg
into
in
cmpsb
push
movsl
mov
ret
subl
cmp
xchg
sub
roll
les
pavgb
addb
inc
jg
repz
out
xor
push
inc
add
xchg
mov
adc
sbb
adc
lea
lahf
loopne
jmp
cmpsb
mov
dec
push
and
roll
add
cmp
mov
mov
shlb
fsubrs
cmp
sub
stos
cmpsb
fcmovnu
add
or
sbb
lahf
mov
out
xchg
outsl
cli
imul
orb
call
mov
sub
xor
pop
dec
mov
pop
int3
add
fadds
add
pusha
jg
mov
cmp
lahf
fwait
inc
dec
mov
sbb
sub
mov
mov
xchg
test
outsl
adc
push
cli
stc
inc
orl
fwait
push
push
pop
outsl
lds
rcr
in
cmpsl
cmp
add
push
xchg
cmpsb
rorb
jb
pop
mov
repnz
mov
cmpsl
testl
aad
pop
push
jno
inc
jl
jecxz
add
cmpsb
lea
sbb
add
movsl
out
mov
xchg
sub
and
sbb
add
mov
popa
push
std
mov
lret
aad
mov
and
scas
xchg
push
fisubs
xor
jecxz
fidivs
pop
call
cmp
xchg
outsl
adc
mov
push
outsb
cmp
mov
cmpsb
sbbl
mov
mov
inc
and
test
xor
test
xchg
fdivrs
add
es
inc
mov
dec
mov
shl
fsubrs
aas
pmulhuw
pop
out
imul
jmp
jp
call
test
adc
mov
dec
or
cmp
mov
pusha
outsl
mov
jecxz
inc
fwait
subl
and
inc
push
out
out
imul
das
cmp
jl
pop
clc
les
sub
aad
push
addr16
jae
movl
xor
imull
mov
int
stos
scas
lods
adc
aas
inc
outsl
jp
xchg
mov
mov
ja
and
mov
add
mov
sub
shlb
push
aad
cmp
out
push
sti
mov
inc
sbb
xor
inc
sbb
sbb
fisubl
pop
outsl
in
inc
add
pop
notb
pop
xchg
aam
outsl
xlat
cmp
nop
das
xchg
xchg
imul
sub
pop
rcrb
inc
fxch
aam
sub
imul
std
mov
rcrb
mov
push
pop
arpl
sbb
stos
mov
in
sub
loopne
imul
insb
mov
ret
mov
push
cmovbe
xlat
sahf
sub
xchg
mov
flds
in
sub
add
push
pusha
xchg
in
sbb
dec
std
outsl
cmpsb
pop
fsubs
and
pop
cmpl
jns
daa
test
lea
push
sub
outsl
adc
loopne
and
xchg
fs
sbb
test
pop
jmp
mov
fdivrp
aas
jb
dec
and
daa
jge
popf
mov
cmpsb
sarl
sbb
sub
mov
lahf
jne
jmp
outsb
in
push
and
out
stc
aam
cmp
sub
sub
imul
inc
in
stos
sbb
addr16
lahf
jle
jbe
popf
adc
rcrb
ss
pop
mov
dec
testl
inc
fidivrs
xchg
fstpt
ss
inc
pop
push
inc
add
stos
mov
imul
stos
jle
pop
sub
pop
outsl
in
movsl
cmpsb
inc
mov
or
xchg
cmc
cmpsb
test
mov
icebp
out
add
mov
das
inc
pop
jmp
adc
incb
push
fiaddl
pop
inc
or
sub
mov
bound
das
insl
pop
popa
mov
mov
iret
test
sbb
jne
out
roll
popa
rcrl
push
xchg
sub
jbe
pop
push
test
jns
scas
sub
sub
incb
fcomps
hlt
std
aas
xor
insb
xchg
mov
test
mov
sub
outsl
mov
cmc
add
dec
lods
stc
jne
sub
jne
pop
repnz
xchg
out
imul
ret
dec
push
sub
and
mov
mov
mov
dec
pop
loopne
xor
mov
movsb
jns
and
push
lods
lret
xor
sti
jae
in
dec
shl
imul
sbb
aam
sub
xor
cmpsb
jne
sbb
pop
fwait
push
xor
jle
add
fcmovu
fiadds
push
dec
out
pop
movsl
push
movsl
push
outsl
inc
pop
pop
scas
xor
pop
ret
pop
jo
sbb
sub
push
pop
dec
testb
add
cmp
inc
insb
sbbl
mov
mov
xchg
cmp
sbb
insb
sti
xchg
xchg
push
or
jge
mov
dec
pop
mov
dec
imul
or
addr16
lcall
stos
sbbl
xchg
cmovb
xchg
shl
sub
rolb
and
sub
cmp
pop
mov
pop
imul
dec
add
ficomps
gs
cmp
dec
cld
sahf
or
or
sub
popa
push
out
es
fmul
fldl
fldl
aaa
out
inc
and
xor
pusha
fyl2xp1
orb
das
mov
test
mov
and
pusha
inc
out
push
inc
jb
dec
cmp
xchg
shrb
les
shl
test
sahf
aad
push
adc
adc
jb
mov
pop
jle
ds
je
aas
mov
mov
and
jo
scas
add
dec
subb
scas
and
sub
inc
pop
icebp
nop
xchg
pop
sbb
sbb
mov
jl
inc
fistpl
sbb
imull
fwait
sbb
mov
repz
cmpsl
pop
je
xchg
inc
jl
xor
lcall
neg
xchg
pop
inc
ss
insb
stc
outsl
inc
dec
ret
adc
mov
frstor
mov
sub
dec
pop
outsl
cmpsl
out
jne
pop
lahf
push
out
inc
cs
jns
sti
add
shlb
xor
jne
movb
inc
in
out
xchg
mov
std
cmp
iret
test
inc
pop
js
jmp
sub
ljmp
sub
push
cli
dec
sarl
add
push
mov
xlat
movsl
mov
cmpsl
cmp
rcrl
sub
dec
dec
insl
mov
xchg
addr16
dec
repz
jbe
lret
sahf
fdivp
cmp
jne
mull
mov
xchg
sub
pop
bound
in
outsb
pusha
int3
fimull
stos
add
add
mov
jg
mov
out
mov
jmp
aad
and
lret
add
fst
outsb
shl
xchg
shrl
imul
jne
insl
xchg
shll
dec
push
lret
ljmp
or
lods
test
jns
hlt
push
pop
stc
sub
push
mov
sub
mov
inc
add
push
and
imul
adc
mov
push
pop
mov
push
adc
cmpsb
inc
aam
lds
int
jecxz
sti
inc
shrb
out
mov
jno
cmp
fldcw
les
adcl
push
adc
pusha
data16
mov
bound
sub
mov
in
pop
lahf
repz
pop
test
inc
inc
scas
std
clc
out
pop
sub
push
cwtl
iret
repz
and
inc
push
xor
scas
daa
sbb
sub
sbb
imul
mov
filds
cmpsb
or
add
jl
outsl
push
pop
mov
dec
or
test
pusha
fistps
mov
pushl
dec
and
pop
dec
movsb
sub
out
sub
dec
adcb
add
mov
adc
enter
popf
shll
cmpsl
mov
sub
cmc
mov
mov
mov
fwait
sub
pop
mov
subl
inc
mov
adc
cli
call
or
mov
stc
dec
mov
sbb
xchg
inc
push
push
pop
mov
mov
daa
push
pusha
daa
mov
cmpb
inc
iret
or
stc
dec
imulb
outsl
add
ss
les
mov
and
cltd
ljmp
incl
jmp
dec
pop
pop
or
stc
hlt
jle
das
outsl
fstps
ljmp
clc
or
dec
or
xchg
dec
push
sbb
xor
mov
stos
lock
sub
popf
sbb
and
and
dec
int
mov
in
jo
outsl
sub
sub
and
pop
gs
in
xchg
mov
or
lea
mov
fwait
in
cmp
xchg
testb
cmpsb
outsb
mov
or
lods
imul
mov
or
sti
cmpsb
aas
cmpsb
xchg
les
call
in
mov
gs
cmovo
lods
jae
push
adcb
and
cmpsb
push
dec
cmpsb
sbb
es
lock
addr16
cmpsb
int3
sub
pop
mov
orl
mov
test
loop
into
jge
dec
sub
mov
mov
mov
add
mov
out
sbb
push
xchg
loop
add
jo
cmpsb
pop
adc
pop
sub
popa
dec
push
sub
les
jb
xor
ljmp
imul
mov
sub
push
pop
add
popa
and
test
xchg
and
test
out
xchg
jmp
addb
outsl
sbb
xor
xchg
aad
mov
test
mov
inc
cmpsl
orl
dec
pop
movsl
gs
shll
mov
pop
cmp
mov
rol
lock
adc
outsl
and
scas
mov
push
je,pt
xchg
cmpsb
and
scas
dec
outsb
xor
and
fldl
out
xchg
shll
in
mov
push
jmp
outsl
push
xchg
aad
fsubrl
pop
negl
add
arpl
mov
dec
std
add
push
xorb
xchg
shr
or
cwtl
jmp
mov
mov
pop
mov
stos
jo
cmp
flds
lods
mov
aad
push
dec
inc
add
adc
push
sbb
loopne
stos
xchg
aam
fwait
out
mov
cli
xchg
or
mov
xchg
popa
test
xchg
iret
push
pusha
dec
sbb
bound
je
fsubl
xchg
notl
stc
pop
add
sub
sbb
and
jmp
aad
data16
jbe
aad
dec
lock
xchg
nop
sbb
mov
hlt
in
dec
lds
mov
pop
imul
jg
into
mov
xchg
xor
in
fsubrs
es
in
stos
sub
xor
lods
call
xchg
pop
outsb
in
dec
mov
ds
cmpsb
xor
aad
or
out
les
imul
dec
in
fdivs
pop
sahf
dec
and
xor
shll
dec
sbb
jp
push
xchg
xchg
pop
test
sahf
lret
mov
lcall
pusha
jb
outsb
dec
push
push
sbb
inc
cltd
shr
in
or
out
inc
notl
or
dec
xor
push
dec
sub
push
or
and
nop
das
negb
xlat
outsl
scas
cwtl
lock
aas
cmpsl
stc
xor
test
jmp
aaa
dec
sti
sub
stos
or
mov
call
cmp
xlat
fcmove
mov
sbb
push
inc
je
pop
and
or
sub
sbb
or
pop
mov
sub
xor
dec
int
push
aad
ss
outsb
lcall
xsha1
cmpsb
mov
je
pop
bound
inc
adc
or
sub
pop
movsl
es
in
dec
pop
in
cmp
dec
jnp
and
mov
add
mov
xchg
out
je
push
and
pop
dec
cwtl
dec
sub
inc
cmp
int3
cmp
repz
xor
rcl
add
imul
repz
outsl
jo
loopne
dec
scas
cmpsb
adc
pushf
sub
lods
mov
test
sti
sbb
push
das
cmp
mov
add
jnp
shrb
or
adc
in
fs
xchg
subl
shrl
sbb
sub
shlb
stc
leave
pop
js
sti
test
nop
and
pop
adc
std
repnz
lahf
lret
mov
int
sub
xchg
jae
xchg
inc
iret
sub
mov
xchg
mov
fdivp
cmpsb
pusha
adc
push
ds
test
lahf
inc
jp
sti
mov
jbe
inc
outsl
icebp
imul
and
mov
xchg
push
fcomps
xchg
outsl
xchg
rorl
inc
push
mov
imul
cmp
mov
imul
insb
mov
outsl
mov
mov
xor
dec
sub
dec
clc
add
mov
dec
std
sub
into
ret
shrl
insb
fidivrs
es
push
pop
hlt
into
inc
loop
test
push
push
imul
orb
mov
int3
arpl
test
add
test
jnp
pop
in
imul
cmp
mov
mov
pop
sahf
in
inc
dec
pop
jecxz
inc
sub
mov
push
ret
sub
in
ds
ds
sti
dec
sub
pop
dec
jl
sti
pop
sub
inc
cmp
add
shl
stos
pop
xor
outsb
pop
movsl
addb
push
bound
mov
rclb
in
adc
lea
ss
ja
movsl
mov
fnstenv
cmp
xchg
push
std
dec
jno
dec
cmpsb
insb
xchg
das
data16
push
and
adc
andl
incb
mov
movsl
cld
outsl
xor
fcmovnu
cmp
das
sbb
or
imul
sub
bound
mov
fisttps
adcb
fimuls
xchg
outsb
cmpsb
inc
mov
outsl
xchg
dec
movsl
call
shlb
jl
out
movsl
lds
sbb
push
cmp
sbbl
mov
dec
mov
bound
call
mov
ret
out
loope
notb
mov
rcr
cmp
mov
inc
pop
mov
bound
out
decl
dec
mov
mov
fstpl
ror
in
sub
xchg
pushf
xchg
sub
nop
push
push
fistps
ret
mov
sub
cwtl
pop
sub
mov
jnp
popf
sbb
mov
ret
adc
aas
sbb
inc
xorb
std
xchg
in
lret
addr16
add
or
lods
fildll
sub
push
pop
sub
jnp
sub
clc
scas
xor
stc
mov
xchg
xchg
fistpll
outsl
jle
pop
or
sti
mov
sub
push
jb
test
jmp
inc
iret
push
subb
shll
pop
aad
jno
fadds
pop
dec
into
repz
ds
and
adc
or
xor
xor
inc
addr16
or
lea
movsb
mov
sbb
pop
js
or
fistps
cmc
cmp
iret
jne
or
or
test
roll
jl
lock
fwait
mov
out
push
je
mov
daa
leave
fildl
shrl
push
jmp
shrl
jmp
scas
addr16
lcall
xchg
xchg
fstpl
or
mov
cmc
cmpsb
outsl
jne
add
test
mov
adcb
or
mov
pusha
pop
imul
sahf
pop
inc
or
push
or
xchg
pushf
loope
jae
jbe
push
icebp
adc
mov
stc
sub
jle
movsb
in
incb
add
push
cs
out
out
mov
addr16
loop
dec
jo
jge
neg
cmp
dec
xchg
mov
push
mov
xchg
test
lret
jmp
sub
xor
sbb
mov
addb
sub
lret
das
ss
add
call
pop
and
int
mov
mov
push
negl
and
mov
jo
sub
push
inc
repz
pop
out
outsb
iret
jp
pop
in
inc
push
adc
cmpb
fucomp
movsl
cmpsb
pop
mov
mov
divb
xlat
es
adc
popf
inc
xchg
in
dec
ja
jb
and
pop
lea
cmpsb
in
mov
adc
jg
aaa
sbb
les
cs
lcall
repnz
jo
mov
clc
out
dec
bound
xor
movsl
jno
push
xchg
mov
outsl
outsb
dec
hlt
inc
outsb
call
lea
inc
sbb
sub
mov
loopne
int3
xor
pop
inc
mov
aaa
and
mov
sub
push
movsl
les
mov
dec
js
xchg
stos
pminub
pop
jg
insb
add
lock
mov
dec
imul
xor
aad
add
lock
xor
jb
shlb
rorl
iret
out
scas
and
mov
cwtl
les
xchg
test
outsb
cltd
ds
stc
mov
sub
push
jecxz
jl
pusha
loope
xor
cmpsl
cmp
pop
fildl
push
push
push
xor
xchg
lods
push
sub
xlat
lret
scas
push
jecxz
ljmp
xlat
bound
pusha
inc
or
test
ja
add
cmpsb
sbb
dec
mov
outsw
out
mov
je
dec
pusha
rcrl
insl
sub
sbb
into
lds
mov
hlt
jb
pop
push
push
fsubp
les
leave
dec
ss
roll
sbb
lret
push
and
pop
mov
cmpsb
in
cwtl
dec
popf
xchg
loope
orb
xor
pop
jmp
dec
add
int
xchg
lcall
jnp
sbb
dec
lcall
aas
aas
inc
ror
fdivrs
mov
jmp
test
cmp
push
sub
pop
push
cmc
pop
std
inc
negl
hlt
and
dec
mov
push
bound
push
push
xchg
popa
or
shrb
lea
jle
gs
test
sbb
les
fistps
andps
stc
test
xor
pop
cmp
ds
cmpsl
sub
sbb
xchg
push
xor
push
or
outsl
mov
arpl
pushf
mov
mov
inc
push
cmpsb
test
loopne
aad
sub
cmp
repz
movsl
cmp
add
mov
imull
jb
cmp
lods
xlat
addb
dec
test
adcl
imul
inc
outsb
inc
es
add
fisubrl
mov
addr16
outsl
cld
mov
mov
adc
sbb
lea
sbb
xchg
dec
popf
inc
mov
jmp
mov
push
leave
push
and
repnz
icebp
cmpsl
repnz
jne
repnz
iret
je
outsl
xchg
ss
xor
mov
js
repnz
into
stos
sbbl
jg
insb
sbb
cmp
pop
cmpsb
out
fld
lods
pop
and
jle
loope
sbb
add
leave
xchg
lods
mov
loope
adcl
cmp
add
es
jge
and
adc
or
stc
lock
add
clc
movsb
stc
test
sbb
sbb
cmc
inc
cmp
inc
sbb
add
dec
fstpl
or
paddsw
xchg
sti
dec
repz
add
nop
mov
enter
sub
dec
inc
cmp
sahf
jge
pop
jmp
int3
sub
lret
imul
jo
jb
inc
int3
dec
jecxz
cmp
movsl
pop
outsl
cwtl
add
jecxz
pop
or
jno
stos
les
fdiv
and
testl
add
inc
xlat
sub
icebp
repnz
jmp
fldcw
mov
mov
mov
enter
sub
test
push
ficoml
sbb
xchg
repnz
jb
jne
or
or
mov
mov
pusha
xor
out
aaa
push
sbb
xor
xchg
shll
cmp
inc
call
repz
fsubrs
pusha
stc
and
inc
mov
insl
mov
loop
pop
cmp
dec
or
jo
push
int3
jb
into
pop
in
or
bound
jp
dec
iret
fdivrl
outsl
movsb
mov
in
fucomip
or
enter
imul
imul
sub
pop
pop
push
dec
stos
mov
into
push
inc
push
add
aad
xchg
outsl
lcall
mov
cmpsb
xchg
xchg
cmpsb
xchg
pop
inc
loope
mov
jle
mov
adc
mov
pop
lcall
popa
outsl
mov
out
pop
mov
xor
scas
repz
mov
add
dec
inc
aas
stc
pop
xor
inc
bound
ljmp
out
fldcw
stc
movsb
icebp
outsb
test
xor
or
push
pop
out
movsl
insl
mov
mov
push
inc
dec
xor
sub
fs
push
jecxz
mov
xlat
inc
mov
jnp
inc
xor
xor
iret
mov
pop
icebp
fmulp
mov
push
add
pop
xor
sub
cmp
andb
sub
cmp
outsl
mov
mov
faddp
cmp
fsubrp
inc
not
js
enter
add
lea
imul
mov
shrl
shl
sub
mov
inc
pop
xor
xchg
rcl
and
repnz
jb
pushf
jle
roll
cmp
mov
lret
pop
mul
outsl
je
sub
bound
dec
mov
jnp
cli
jbe
cmp
jbe
and
popa
adc
pop
jmp
data16
mov
push
mov
fnsave
push
test
xchg
testl
sub
out
sbb
and
jge
sub
sbb
xor
and
fs
sub
jge
mov
push
sub
out
xor
push
rcrl
cmp
dec
adc
in
cmpsb
nop
mov
jl
sub
ljmp
mov
fs
outsl
pop
imul
scas
jge
in
dec
pop
adc
sbb
xchg
sub
lret
jge
or
jbe
push
lret
jecxz
inc
dec
jbe
movsb
and
loop
sub
outsb
dec
addr16
ds
mov
xchg
and
sub
aad
shrb
dec
std
insl
es
imul
aad
mov
subl
test
dec
inc
ss
mov
dec
imul
pop
aad
jl
cmp
insb
cmp
adc
and
or
dec
cmp
and
aas
inc
pushf
sti
or
jge
outsb
daa
dec
jne
call
jmp
lods
and
outsl
push
cmp
jne
and
lds
mov
dec
cmc
repnz
call
add
fcmovnb
sbb
adc
mov
mov
and
js
test
cli
ss
es
dec
pop
mov
add
push
pop
movl
imul
and
enter
ds
cmpl
ja
or
lea
jne
lods
push
out
jp
les
outsb
sbb
loopne
mov
stos
cmp
mov
push
insb
iret
adc
gs
outsl
into
mov
loope
pop
cmp
lods
cmc
insb
outsl
push
xlat
sbb
out
lds
pop
pop
jb
cmp
fistpl
call
call
mov
aaa
mov
pusha
lcall
sub
es
pop
adc
out
sbbb
ret
popf
cmp
scas
pop
or
into
or
lods
out
sbb
popf
lods
andl
jne
push
inc
sub
add
std
dec
int
or
loopne
out
cltd
data16
mov
data16
xchg
out
cmpsb
mov
outsl
xor
inc
addb
lea
aam
jne
test
rcll
es
push
inc
sub
or
lret
sarl
jno
rcl
lods
jo
loop
das
cmc
sub
push
xchg
mov
ss
cmp
dec
ds
aas
jbe
arpl
inc
dec
mov
fwait
pop
pop
stos
xor
inc
sub
test
inc
adc
add
enter
fistpll
dec
orl
movsl
test
insb
jecxz
sbb
mov
push
pop
mov
jecxz
pop
cmpb
cltd
data16
std
ds
sbb
std
or
lret
imul
mov
jl
test
inc
js
sub
jo
jmp
iret
fbld
inc
push
dec
cmc
outsl
inc
je
test
clc
fwait
adc
mov
imul
jp
inc
mov
and
fstpt
push
stc
push
into
insb
dec
ds
int
sbb
test
in
movsl
lods
outsl
mov
dec
pop
movsl
sub
movsb
je
enter
js
icebp
dec
addr16
dec
mov
fsubrs
mov
xor
loopne
lods
cmp
aam
xchg
lahf
lock
ja
mov
mov
pop
and
pop
and
push
push
dec
cmp
pop
add
mov
or
imul
or
notb
mov
pop
enter
movsb
repz
lret
cmpsb
lcall
mov
in
in
cmp
push
ja
imul
je
out
dec
outsl
cltd
xchg
dec
mov
lcall
mov
cmp
cmpsb
mov
inc
adc
in
jecxz
inc
sbb
xchg
pop
or
mov
jbe
outsb
rcrb
in
popa
scas
pop
xchg
cmpsb
push
xor
outsb
sub
mov
and
inc
inc
lods
lods
xor
in
fidivl
pop
sbb
inc
pop
sub
imul
in
movsb
ljmp
mov
cmp
outsb
sub
push
movsb
pop
push
lret
test
aad
adc
insb
int3
pop
pop
sub
gs
outsb
mov
sub
pop
or
mov
mov
dec
or
test
cmpsb
mov
insb
mov
popf
loopne
arpl
icebp
inc
mov
jmp
fs
movsl
insl
popa
sub
pop
vpshlb
scas
test
call
or
outsb
jmp
and
ljmp
lret
mov
add
mov
push
insb
ret
in
movsl
insl
dec
imul
sub
mov
imul
rorl
dec
lods
scas
ljmp
sbb
jge
jecxz
movsl
mov
movsl
fnstsw
dec
jnp
dec
sub
push
rorb
jns
out
out
mov
dec
and
jmp
sub
in
push
jo
movsb
fmul
aam
sti
in
dec
fs
dec
add
dec
leave
jnp
outsl
mov
test
sub
imul
sub
pop
cld
or
dec
call
subb
in
sub
pop
dec
insb
scas
in
sub
call
jmp
sub
cltd
cmp
sub
mov
sub
test
push
jecxz
jg
dec
int
iret
fsubr
push
sub
insl
sub
scas
test
or
lcall
into
cwtl
in
outsb
cmpsl
outsb
leave
int3
insb
sub
xchg
jle
mov
add
push
ss
mov
cwtl
clc
mov
fdivrl
outsl
xor
lea
sbb
enter
or
fneni(8087
loop
lret
xorl
jns
mov
mov
cmp
test
jno
repnz
mov
rorl
mov
in
add
movsb
loope
sahf
bound
ret
movsb
fwait
pop
push
mov
cmpl
stos
mov
add
push
pop
sub
cmpsb
xchg
adc
sti
fninit
mov
jle
dec
xor
cmp
add
dec
lock
xor
mov
mov
sub
and
jg
jne
mov
dec
arpl
std
movsl
outsl
jle
es
lock
ret
xchg
addr16
inc
jns
lret
fcoms
sbb
imul
add
sub
sub
das
pop
fildll
pop
cld
es
lds
lret
loope
cmpsb
xchg
test
test
sbb
fucom
xor
cmp
stos
dec
outsl
jl
imul
icebp
cmc
jae
insl
mov
icebp
and
out
jecxz
add
shlb
or
cmpsb
sahf
iret
iret
xchg
sub
int3
xor
dec
xchg
dec
dec
cmpsb
pushf
imul
sub
push
adc
inc
mov
push
and
test
bound
or
scas
call
mov
jmp
cwtl
cmpsl
inc
fs
mov
pushf
lods
inc
cmpsb
sbb
dec
psubd
jo
xchg
inc
mov
or
mov
mov
shlb
nop
pop
loopne
in
incl
or
push
sub
sbb
xchg
mov
ffree
in
out
loope
outsl
push
sbb
gs
pop
and
mul
inc
jbe
orb
xor
pop
int3
enter
sbb
jecxz
adc
mov
es
cmp
test
pop
dec
lret
xchg
dec
iret
imul
inc
rorl
stc
cmc
mov
inc
xchg
subl
shlb
aad
adc
jge
sbb
int
ficoms
sub
aam
mov
mov
scas
jne
or
mov
sub
and
lret
popf
sub
mov
or
loopne
pop
ljmp
jne
jo
lea
sub
inc
add
xor
xor
repz
pusha
enter
mov
mov
inc
or
fcmovne
iret
fs
je
jo,pn
sti
push
mov
sbb
push
in
or
outsb
addr16
sub
jmp
dec
in
cmpsb
sarb
enter
js
xchg
pop
inc
and
push
gs
dec
data16
fs
popa
imul
lods
adc
sub
jne
es
push
popf
dec
into
int3
dec
xchg
dec
add
dec
jle
push
mov
dec
sbb
sub
mov
mov
cltd
lods
pop
adc
xor
test
sub
dec
cmp
pop
dec
outsb
out
pop
test
test
outsl
out
in
pop
iret
fstpl
jnp
push
push
dec
int3
push
sbb
mov
test
dec
jle
adc
dec
lods
mov
outsb
dec
push
sbb
sbb
outsb
mov
insl
lret
popf
push
dec
test
sub
imul
movsl
dec
dec
out
dec
push
dec
mov
mov
insl
mov
scas
ljmp
or
imul
int3
mov
dec
lret
dec
lods
gs
jp
fwait
lods
fs
sbb
call
leave
subps
jl
jecxz
movsl
dec
and
dec
dec
lods
outsb
mov
push
lods
popf
int3
and
lods
lahf
dec
push
das
push
lods
insl
mov
leave
fmuls
sbb
dec
mov
mov
loope
popf
loopne
outsb
fwait
andnps
insl
mov
leave
in
cmp
js
iret
dec
dec
dec
dec
dec
fisttpll
fucomp
jnp
das
mov
sub
sbb
aad
push
dec
rorl
daa
movsl
outsb
jmp
insb
mov
call
or
leave
out
ret
dec
test
dec
jns
ror
int3
test
dec
out
mov
les
into
sub
out
scas
sbb
mov
imul
ds
outsl
insl
fstps
pop
inc
cmpsb
jg
aaa
mov
cmpsl
loopne
xor
cmp
sbb
es
leave
inc
sub
cmpsb
stos
out
mov
fisttps
xor
inc
push
sub
sub
lahf
cwtl
mov
jp
fnstenv
addb
adc
adc
cmpsb
gs
xor
push
jb
scas
into
das
pop
mov
mov
add
stos
pusha
sbb
adc
sub
outsb
jmp
lods
cmpsb
les
add
xchg
mov
pop
mov
testb
imul
scas
push
mov
jecxz
mov
fld
or
fwait
pop
in
or
pop
cmpsb
lock
ds
data16
shrl
les
rorl
dec
cmpsb
pop
add
insb
es
in
shll
fwait
mov
js
and
adc
popa
add
mov
popf
outsl
data16
push
fldl
pop
cwtl
jne
add
inc
aad
test
mov
movsl
repz
mov
xchg
insl
push
out
mov
pusha
testb
jecxz
xor
dec
test
pusha
sbb
dec
mov
push
xor
pop
cmpsb
imul
std
xchg
ds
stos
cmpsb
hlt
mov
popa
xor
enterw
test
xor
mov
hlt
inc
jmp
jg
shll
outsl
cmpsl
lcall
repz
sub
enter
andl
add
add
jmp
lds
int
das
rcll
nop
faddl
xchg
in
xor
cmpsb
loope
stc
addr16
sbb
cmpsl
xchg
int
jnp
outsb
cmc
xchg
pushf
icebp
sub
out
and
push
push
rcrl
test
fs
sbb
imul
cmpsl
push
mov
cmp
or
fimull
add
cmpsb
jmp
dec
enter
cmp
je
lock
shrb
sub
int
ja
outsl
xchg
or
pop
adc
xchg
inc
cmp
mov
std
cmpsb
add
loop
add
sahf
daa
xchg
scas
or
ljmp
clc
xlat
sub
and
inc
icebp
push
push
nop
out
out
pushf
out
mov
sbb
inc
mov
cmc
lret
xor
es
add
imul
and
mov
ljmp
or
mov
sbb
or
shrb
mov
mov
add
push
into
pop
jne
inc
xchg
pop
data16
insl
rcll
out
lahf
test
push
push
and
mov
idivb
push
lods
lods
daa
aam
outsl
stos
icebp
mov
and
int
push
outsl
add
mov
mov
subb
lds
jge
mov
enter
sti
outsl
adc
mov
xor
repz
xor
mov
dec
inc
imul
dec
add
push
adc
mov
pop
mov
imul
rorl
loope
lahf
mov
pop
sub
outsl
fbld
add
or
inc
jae
cli
cmp
push
dec
andl
dec
mov
cmpsl
cmpsb
adc
bound
gs
xlat
and
jle
push
push
pop
inc
outsl
loop
icebp
les
shrl
adc
fistps
hlt
dec
adc
clc
mov
dec
jne
jmp
cmpsb
popa
scas
fistl
jg
mov
scas
in
inc
or
jmp
sbb
aaa
jl
js
push
mov
mov
scas
inc
sub
push
fdivp
daa
jl
push
cs
sub
test
mov
les
dec
and
nop
shlb
movsl
pop
add
leave
sarb
lret
xorb
inc
mov
sub
and
outsb
orb
or
adc
outsl
daa
lods
mov
and
jmp
mov
fs
xor
jmp
ds
inc
push
flds
sahf
repz
inc
into
jns
int3
pop
add
cld
or
imul
rorl
add
push
pop
pop
sub
arpl
icebp
mov
lds
fidivl
icebp
leave
xchg
js
int
aaa
ds
mov
inc
scas
insl
bnd
pop
das
out
push
sbb
sub
xlat
mov
or
xor
sbb
sbb
xor
mov
cmpb
es
pop
mov
jecxz,pt
xchg
jbe
jge
out
jmp
xchg
mov
dec
dec
test
mov
xchg
cmp
inc
iret
sbb
ds
jle
lret
push
inc
pusha
lods
mov
int
jmp
iret
jmp
add
and
ss
cld
movsl
cltd
sar
insl
mov
cmp
push
xor
inc
jl
mov
sbb
xchg
shll
xchg
jnp
mov
inc
imul
push
jb
les
insb
scas
mov
jge
cmc
outsl
mov
inc
out
sbb
sub
out
stos
sahf
daa
adc
scas
js
push
jmp
aaa
sbbb
es
inc
out
xor
cmpsb
out
push
adc
stos
aam
sub
xchg
nop
gs
push
popa
xchg
leave
pop
test
mov
in
rcll
das
loopne
adc
xor
mov
das
fisubrs
dec
add
xor
sub
pop
mov
mov
fldt
cmovle
push
pop
add
insb
orb
lods
test
pop
or
or
outsl
fwait
cmp
test
mov
sbb
dec
dec
and
fcompl
lock
cmc
int3
xor
jmp
sub
add
cmp
mov
mov
fsubr
sub
sub
push
outsb
add
es
dec
les
test
cmp
in
out
fstps
push
lods
daa
sub
bound
adc
mov
imull
lret
sti
xchg
cmp
and
mov
cmp
xchg
cmc
xchg
outsl
inc
fildll
push
cmp
sahf
insl
fcmovnb
call
xor
xchg
imul
test
ret
aas
xchg
mov
mov
lods
xchg
je
dec
sbb
pop
xchg
and
ficomps
inc
push
mov
add
data16
inc
sub
add
xchg
sub
ds
sbb
dec
ja
dec
mov
outsb
push
imul
mov
test
outsb
pop
scas
mov
mov
in
shrd
mov
aam
or
jo
dec
int3
sub
subl
cmp
aam
bound
test
xchg
hlt
or
xchg
loopne
push
jecxz
adc
lods
push
jne
in
pop
out
sub
dec
mov
cmpsw
fstpt
leave
shrl
test
jmp
cwtl
lret
pop
or
jmp
mov
movsb
rcl
insl
insl
mov
scas
hlt
insb
test
aaa
popf
inc
or
enter
call
insl
dec
or
push
sbb
aam
pop
outsb
stos
imul
ret
push
dec
imul
dec
pusha
dec
out
imul
or
outsb
movsl
push
je
mov
push
add
loope
repz
mov
cltd
imul
sbb
sub
movsb
stos
insb
in
insl
int
scas
add
mov
cs
or
push
and
test
adc
and
das
jl
cltd
dec
mov
scas
cmp
shrb
inc
or
outsb
iret
dec
jns
dec
dec
scas
das
sub
xchg
idiv
or
test
lods
sti
imul
lods
and
imul
loope
or
dec
pop
push
stos
jecxz
and
sub
pop
stos
mov
pop
pop
fsubr
lcall
ljmp
jmp
sub
cmpsb
jne
das
daa
jno
out
xchg
xor
les
mov
out
fistl
dec
pusha
inc
fwait
jp
cmpsb
hlt
sbbl
sub
int
add
push
xor
fimull
js
sub
iret
dec
mov
mov
movsb
ljmp
movsb
lret
ss
shlb
out
repz
sub
xchg
outsl
dec
sub
push
inc
push
push
mov
in
outsl
test
dec
mov
pop
pop
loope
neg
rcr
lahf
les
push
test
dec
in
inc
clc
cld
jnp
xorb
xor
xor
lea
mov
sub
repnz
mov
cld
sti
imul
and
adcb
pop
mov
lods
addr16
fs
mov
dec
in
addr16
rcr
lock
test
mov
and
mov
dec
insb
mov
inc
testl
adc
enter
js
sbbb
shll
shrl
sub
jecxz
int3
mov
outsl
jle
jecxz
jb
outsb
mov
pop
add
sub
or
pop
in
lods
push
pop
movsl
sahf
outsl
test
pop
adc
repnz
daa
cmp
mov
cld
jmp
leave
xor
mov
sub
push
fistl
int3
mov
cmp
pop
xchg
inc
jecxz,pn
aad
lock
xchg
add
dec
xor
nop
push
pushf
jno
dec
outsl
xchg
icebp
sub
mov
icebp
push
js
lea
scas
inc
inc
adc
in
mov
push
sub
sahf
sub
lods
imul
js
cmpsb
loop
sub
repnz
jle
xor
add
sbb
sub
movsl
scas
daa
loopne
pop
push
cmpsb
addb
cmpl
jg
fcmovne
sbb
pushf
outsl
idivl
into
jae
cmpsb
and
xor
addl
sub
mov
in
bound
shrb
imul
push
fwait
xor
mov
push
dec
or
movsl
xlat
daa
arpl
das
jnp
lods
js
lods
push
in
sbb
in
lods
lret
add
stos
and
or
jge
jl
outsb
in
sub
call
lods
dec
xchg
outsb
sbb
in
in
sbb
sbb
xor
out
mov
leave
out
insb
pop
mov
sub
in
sub
gs
insb
lods
stos
fs
push
sub
gs
sub
jge
jmp
lea
shlb
stos
jle
sub
lahf
dec
aam
pop
lods
stos
lea
pop
outsb
in
xchg
in
fisubs
int
push
or
sub
sub
dec
cltd
insl
sub
jbe
stos
sub
gs
push
lea
sbb
pop
lods
fldl
mov
iret
lods
lret
leave
or
or
jp
lods
mov
cmp
in
scas
cmpsb
imul
push
imul
mov
pop
jmp
fldt
insl
into
icebp
push
stos
push
lret
push
in
lods
dec
mov
jmp
test
jmp
imul
lret
lods
mov
lods
insb
lods
pop
sub
mov
sub
dec
das
test
mov
sub
movsb
sub
mov
sub
jge
outsb
dec
lods
jg
rorl
sub
dec
lods
pop
int3
popf
stos
sub
ret
imul
dec
dec
dec
scas
test
int
push
leave
or
mov
loope
leave
int3
mov
dec
mov
lods
int3
jmp
or
mov
sub
in
test
imul
fmuls
or
das
lahf
or
dec
jmp
test
stos
push
ljmp
push
mov
jmp
fxam
int
fxam
leave
mov
jge
insl
dec
dec
dec
jmp
jmp
dec
lret
insl
int
mov
mov
leave
jmp
outsl
xor
testl
mov
pop
pop
aaa
add
mov
out
adc
jnp
loop
xor
aas
cmp
insl
mov
lret
mov
dec
mov
mov
mov
cmc
cmpsb
pusha
insb
push
and
or
jl
jecxz
incb
push
dec
lods
js
rol
fisttpll
cmp
xor
mov
cmpsb
pop
cmp
enter
or
mov
xchg
push
int
sub
inc
int
dec
test
inc
sub
jmp
sub
mov
sbb
out
rcrl
mov
push
aas
clc
adc
je
jb
inc
adc
inc
out
jno
and
mov
cli
xor
pop
or
fbstp
mov
sub
push
cmc
mov
aas
in
sysexit
inc
in
sub
call
jl
pop
adc
dec
pop
inc
cmp
test
js
callw
jo
cmp
push
into
pop
mov
clc
subl
inc
test
cmp
xchg
xchg
lods
push
decb
arpl
dec
call
cld
mov
pusha
jno
sbb
mov
outsb
dec
pop
mov
jg
sub
inc
sti
add
sub
outsl
push
pop
sub
and
aaa
cmp
mov
das
cmpsb
mov
sub
ficompl
fldt
or
gs
cmpsb
repnz
cmpb
scas
les
into
xchg
bnd
aad
lahf
jecxz
vandpd
mov
inc
dec
ds
dec
mov
mov
sbb
movsl
fnstenv
mov
pop
leave
lret
jle
aaa
mov
ret
or
scas
inc
dec
hlt
fstps
out
ljmp
dec
xchg
movl
push
and
jae
out
cld
add
sub
mov
ret
add
test
adc
dec
and
cmpsb
pop
jne
jmp
pop
mov
cs
gs
mov
push
enter
push
mov
iret
add
js
imul
sub
or
bt
fldenv
enter
push
test
push
loopne
out
mov
gs
repz
pop
mov
or
dec
xchg
pushw
jg
pop
iret
lods
xor
subb
lcall
icebp
dec
push
push
inc
shl
bound
jns
ds
pop
stc
outsb
sub
cs
mov
lret
jb
jmp
scas
cs
ljmp
adc
xchg
sub
pusha
sub
scas
add
mov
cmp
adc
mov
or
rorb
push
sub
mov
xchg
insl
ret
scas
in
mov
fldenv
cs
daa
mov
sub
push
cmp
dec
mov
dec
inc
cmc
scas
seta
fwait
outsb
push
xor
mov
in
push
pusha
and
std
inc
inc
xor
sbb
push
movsb
xchg
into
lea
adc
loopne
xchg
gs
loope
ss
out
test
fsubs
sub
fwait
movsb
jle
js
sub
jecxz
aas
call
ss
ljmp
lods
cld
jo
ret
mov
out
cmp
mov
or
sbb
cmpsl
dec
push
sbb
pop
push
dec
inc
cmc
jae
cmp
inc
sysexit
inc
in
mov
sub
jmp
dec
sbb
and
imul
inc
cmc
xor
inc
rcrb
dec
cs
test
imul
sbb
jmp
sbb
pop
mov
add
sub
pop
sub
lcall
pop
jbe
cs
mov
ja
ret
cs
lcall
and
idivl
repz
in
push
add
dec
into
sar
out
cs
jp
cs
dec
out
sub
sbb
adc
in
imul
lds
xor
andb
mov
sbb
cmp
ss
sbb
push
or
scas
or
pop
out
or
mul
mov
mov
sub
pop
jbe
jo
inc
mov
les
loop
xchg
in
mov
xlat
iret
shl
lahf
cs
pop
mov
lods
call
je
fldcw
cmp
push
std
cmp
aam
jmp
pop
out
pop
cltd
cs
fmul
test
fldl
icebp
out
stos
int3
xor
ret
into
pop
fildll
repnz
gs
mov
dec
ss
pushf
mov
into
imull
movl
sub
dec
scas
outsb
iret
repz
push
push
in
jne
loopne
pop
inc
sbb
arpl
pushf
dec
jl
scas
dec
mov
test
jnp
mov
inc
pop
loop
push
fnstsw
sub
sub
lods
add
sub
mov
andb
sub
xchg
cmp
scas
imul
stc
adc
and
mov
add
in
cld
sbb
fisubl
data16
dec
inc
lods
test
shl
xor
jl
loopne
mov
mov
outsl
es
inc
inc
cs
icebp
out
movsb
movsl
mov
pusha
xor
dec
inc
in
pop
clc
mov
icebp
lds
out
lret
loopne
xchg
pop
cmc
push
jge
mov
flds
cs
sub
mov
dec
lds
arpl
dec
icebp
cmc
out
sub
pop
mov
and
mov
pushf
cmp
push
outsl
adc
ja
cs
stc
jcxz
sbb
xor
dec
push
or
adc
scas
jbe
push
sub
push
lods
pop
fsubrs
jbe
sbb
push
into
pop
push
pop
out
sub
pop
dec
pop
mov
ret
dec
scas
mov
cs
pusha
xchg
test
inc
sub
dec
dec
or
xor
repnz
sub
mov
dec
sbbb
sub
daa
sub
jbe
cwtl
pop
push
mov
shlb
loope
lret
call
xor
xchg
in
dec
cs
xchg
and
xchg
out
pop
sub
fisubrl
mov
mov
lods
lods
push
inc
pop
cmc
call
xchg
pop
ljmp
stos
mov
mov
inc
push
mov
into
mov
scas
rcl
sub
outsb
xchg
xor
outsb
and
into
pop
dec
imul
sub
and
cs
dec
jl
pop
xlat
cs
sub
add
jnp
push
mov
fstps
mov
mov
pushl
xchg
scas
sarl
and
mov
nop
bound
mov
sub
jmp
loop
or
shlb
sub
outsb
daa
rcrl
dec
pop
lods
fs
mov
xor
sub
mov
flds
sarb
into
jmp
pop
inc
mov
or
xchg
cs
in
dec
inc
data16
dec
out
and
lods
in
sarb
sub
xchg
dec
ja
pop
mov
mov
adc
push
sub
cmp
in
loop
mov
data16
fcomip
fwait
or
sub
outsl
pop
mov
cltd
inc
push
sub
lods
sbb
scas
sub
int
or
jle
mov
xor
das
insb
imul
adc
cld
outsl
scas
insl
jbe
inc
aaa
jmp
pop
cmpsb
push
jecxz
add
sti
out
loopne
xchg
lds
mov
insb
jp
imul
subl
jmp
mov
push
sub
ret
push
and
xchg
insl
sub
lods
push
pop
cs
mov
xor
cltd
daa
wbinvd
adc
dec
shl
inc
jbe,pt
js
cs
shrl
mov
sbb
push
jbe
mov
dec
pop
dec
data16
leave
dec
inc
or
xchg
int
dec
imul
das
fbld
scas
std
mov
icebp
lods
roll
cs
jp
sbb
jo
les
pop
xor
mov
jge
cs
dec
enter
inc
jo
pop
filds
les
loop
inc
mov
dec
jl
ficoml
jp
outsl
add
mov
sub
mov
fldt
cmp
sub
aad
push
sub
mov
subb
mov
cs
mov
inc
push
xchg
or
lods
xchg
outsb
jne
jo
imulb
inc
inc
shlb
js
movd
push
sub
add
mov
outsb
lret
jl
in
push
pop
mov
sub
imul
dec
lods
sub
inc
bound
scas
inc
mov
sub
fs
xor
xchg
cmc
int
repnz
xorl
scas
in
bound
iret
sbb
sub
push
add
inc
js
ucomiss
xor
mov
jo
jl
pop
shrb
pop
sbb
test
or
call
scas
cmp
stos
sub
inc
outsb
hlt
inc
dec
repz
sbb
jl
sub
stos
mov
mov
test
in
dec
mulps
test
cmp
cmp
test
pop
dec
mov
fldt
test
insl
jmp
pop
adc
loope
cmp
push
fs
mov
stc
imul
insb
sub
sub
dec
aad
mov
stos
jle
pop
movsl
out
xor
outsl
popf
shr
aas
and
adc
data16
shlb
int3
mov
into
mov
jecxz
outsb
pusha
sub
push
pop
jg
pop
or
cmp
add
xchg
jmp
call
push
lds
adc
jbe
push
or
fisubl
sub
jnp
push
rclb
push
and
cmpsb
loope
lods
xchg
mov
loopne
mov
loope
inc
push
mov
scas
imul
insw
or
movsb
sub
movsb
bound
adc
mov
jno
pusha
ret
or
insb
loop
mov
dec
push
xchg
mov
sbb
sub
and
in
and
imull
movsl
pop
rclb
test
mov
movsl
out
jecxz
xchg
or
xchg
dec
in
frstor
lods
imull
sub
sahf
xorb
lods
xchg
aad
and
mov
or
push
add
popf
movsb
pop
dec
pop
push
outsb
jbe
or
mov
mov
insb
fldcw
push
xchg
sub
in
loope
sbb
lret
ret
insl
sub
testb
sahf
mov
mov
in
bound
fnstcw
push
cwtl
inc
es
outsb
insb
cs
sbb
ss
mov
fisttpll
ss
mov
lods
adcb
scas
int
dec
ss
add
sub
dec
push
lods
sub
xor
xlat
pop
and
add
push
add
jmp
std
jge
xor
cmp
imul
in
mull
jnp
dec
gs
repz
pop
shrl
xchg
bound
imull
lea
and
lds
push
enter
jg
rorl
push
sbb
popf
pop
fmuls
std
mov
sub
je
out
data16
push
ja
jbe
in
mov
sarl
jp
mov
jmp
and
adc
popf
fimull
mov
push
cmp
adc
lds
xchg
lods
mov
into
xchg
adc
lods
repnz
aaa
mov
lods
data16
dec
xchg
fsub
sub
dec
data16
inc
mov
and
jl
test
and
inc
dec
imul
repnz
fldt
rorl
xchg
pop
xchg
mov
loope
cmc
xchg
inc
popa
out
pop
jno
mov
sub
aad
roll
push
fsts
shrl
out
adc
push
push
je
sbb
dec
dec
adc
cld
and
mov
in
or
mov
out
mov
jge
in
pop
push
mov
mov
push
pop
or
mov
das
mov
lods
push
mov
push
push
dec
imul
setl
sub
jmp
mov
xchg
sti
jle
sbb
repnz
push
sbb
xchg
push
jg
mov
fwait
out
jge
int
or
dec
lods
jb
imul
jmp
mov
data16
xor
dec
sub
jno
sub
jmp
xchg
dec
xchg
mov
pop
daa
arpl
sbb
fxch
xchg
aad
lods
dec
jae
inc
int
dec
ret
or
test
dec
dec
sub
sti
mov
sub
outsb
or
pop
pop
push
and
movsl
lods
sub
shrl
push
imull
insl
stc
jae
pop
sub
inc
stos
leave
cmp
addr16
mov
out
jne
push
xor
push
xchg
test
pop
inc
adc
xlat
dec
push
push
lods
nop
cltd
jge
adc
pop
jmp
lahf
rorl
pop
cli
cs
dec
hlt
lret
xchg
mov
cmp
aas
pop
in
jl
movsb
arpl
loopne
popa
pop
imul
pop
sub
fdivl
fs
jp
inc
mov
sub
loop
mov
out
aaa
dec
or
dec
stos
lods
enter
and
jae
inc
push
out
pop
ja
adc
sub
repz
push
insl
mov
adc
aam
sub
lods
leave
sub
mov
das
sub
out
xor
dec
jnp
outsb
pusha
mov
jns
sub
outsb
ljmp
fsubrl
out
mov
test
cmpsb
lret
imul
push
or
arpl
mov
mov
mov
sub
out
fisttpl
les
mov
retw
lret
clc
ljmp
jmp
lcall
sub
or
fisttpl
in
dec
pop
iret
dec
popa
xor
cs
xchg
mov
imul
sti
jle
xchg
lret
shrb
sub
dec
out
or
int
rorb
mov
test
xchg
push
fdivrl
sub
hlt
insb
sbb
sub
cmpsb
dec
sbb
sbb
outsb
mov
xchg
loope
repz
push
lock
sbb
in
push
sub
jnp
pop
inc
or
dec
outsb
fwait
mov
std
imul
jge
out
sub
mov
addb
insl
fistpl
sbb
lds
jmp
cmpsl
jmp
mov
dec
xor
pop
jno
clc
dec
pop
jo
adc
or
mov
push
mov
int3
imul
data16
sti
xor
jae
insb
fimull
movsl
jecxz
cli
jmp
mov
gs
inc
sbb
push
sbb
xchg
pmaxsw
push
das
sub
or
and
ret
sti
stc
stos
in
dec
imul
ss
leave
cltd
out
dec
test
ljmp
repz
jmp
push
dec
jbe
fcoml
push
mov
out
and
addr16
pop
mov
sbb
shlb
in
mov
lcall
lea
jno
push
cmp
mov
rorb
push
fldenv
test
xor
lahf
mov
pusha
adc
call
add
ret
data16
mov
mov
cld
ja
js
pop
mov
push
cmp
xchg
sub
aad
icebp
pop
jae
sub
shrl
hlt
pop
sub
jo
dec
lock
lds
sub
ret
in
loope
outsl
cs
lret
cltd
adc
mov
and
xchg
push
mov
dec
data16
xor
mov
loopne
xor
aaa
pop
mov
mov
loope
lret
dec
fidivs
push
enter
jmp
xor
pop
fmulp
js
imulb
mov
add
add
movsb
and
cli
jmp
js
arpl
in
ljmp
push
adc
adc
xor
mov
xchg
mov
popa
stos
call
outsb
and
dec
sub
adcl
jo
out
stos
dec
push
mov
jae
or
lods
loope
notb
filds
sub
jae
mov
test
or
loop
dec
scas
in
sub
adc
test
add
in
jmp
test
lea
out
aas
mov
pusha
das
scas
mov
repz
imul
push
pop
aaa
fnstsw
lods
das
jae
pop
in
mov
je
aaa
data16
std
mov
jne
int3
test
push
data16
out
push
jnp
scas
fwait
hlt
ds
adc
xchg
sub
pop
cmpsl
rorb
adc
push
mov
mov
pop
push
out
jg
jbe
add
test
add
idivl
jnp
sub
dec
repnz
or
andb
xchg
sbb
test
jge
lea
fs
mov
sbb
inc
add
and
iret
lods
test
lods
xor
add
pop
int
lods
mov
dec
or
or
jne
imul
addr16
int
test
popa
lret
add
lods
stos
rcrl
dec
fcoml
mov
adc
outsb
stos
shrb
stos
fsubrl
add
dec
sub
hlt
inc
ss
in
cmp
es
outsl
inc
out
movsl
push
pop
push
and
xor
sub
in
jmp
in
dec
xor
sub
out
jo
sti
push
in
xchg
or
cltd
insb
or
lea
cmp
data16
aam
popa
sub
mov
cmp
jno
sub
les
sub
adc
into
jmp
out
pop
dec
jnp
outsb
sub
loope
jge
imul
popf
ljmp
loopne
out
push
orps
xchg
sahf
inc
pop
dec
out
call
shrl
outsb
or
lretw
mov
mov
sub
fistl
inc
outsb
or
in
jmp
push
inc
out
or
sub
sub
in
lahf
sub
inc
test
stc
loop,pn
int3
scas
int
inc
pop
popf
lock
or
loope
subb
sub
lds
jbe
imul
dec
insl
sub
sbbl
lods
dec
adc
test
jne
lret
push
jns
scas
jmp
add
sub
jbe
adc
loope
aam
int
andl
xor
adc
js
subb
sub
pop
fcmove
or
repz
lds
punpckhdq
shl
mov
mov
stc
loop
mov
xchg
mov
nop
jnp
mov
daa
dec
push
clc
mov
sub
addr16
loope
fnop
lret
cs
and
xor
sub
jns
sub
leave
outsb
or
ljmp
pop
dec
testl
rcl
pop
xor
stc
pushf
mov
fimull
xchg
jp
inc
sub
mov
sub
pop
fucomip
dec
sub
jl
mov
in
shl
das
ja
push
add
xchg
movd
sub
lret
je
mov
sub
clc
push
fwait
in
sub
insl
sub
idivb
jne
lret
pop
lret
out
in
dec
push
lds
aam
ror
push
push
nop
push
xchg
mov
imul
je
cmp
sub
sub
or
std
mov
lods
add
sub
dec
jge
inc
in
sub
push
sbb
insl
mov
pop
cmpsl
cld
addr16
mov
pop
push
pop
lods
pop
pop
jle
adc
jno
shrb
imul
sbb
mov
dec
bound
loop
sub
inc
push
dec
add
mov
sbb
xlat
xchg
push
sub
xchg
xor
cmc
lods
jmp
ret
sub
sub
std
cltd
enter
push
imul
add
ljmp
pushl
outsb
inc
jbe
lea
hlt
adc
scas
in
sub
test
or
cmp
jle
xor
dec
popf
test
mov
dec
ror
sub
lods
jno
outsl
test
fwait
or
lods
movsb
decl
or
sbb
xlat
jmp
jne
inc
or
leave
outsl
sub
bound
cmc
and
sub
xchg
inc
adc
pop
push
das
mov
mov
mov
sub
xlat
scas
lock
cwtl
mov
lea
jle
in
add
mov
xchg
cmp
dec
nop
or
out
sub
test
mov
mov
stc
cwtl
push
xor
or
fadd
dec
je
sti
in
mov
cmp
insl
jmp
mov
insb
inc
sub
fwait
insb
cmp
das
xchg
jle
test
push
mov
arpl
push
test
bound
nop
inc
lods
ret
xchg
xlat
in
push
xchg
in
sub
dec
fsubrp
dec
pop
adc
pusha
mov
cmp
in
cs
inc
out
mov
in
mov
jbe
je
dec
pop
jmp
imul
stos
dec
and
xchg
cli
pop
mov
mov
dec
hlt
xchg
inc
jbe
scas
sub
jb
frndint
stc
jmp
sbb
or
xor
iret
xor
mov
in
add
std
nop
xchg
aad
imul
push
loop
sbb
cld
lahf
mov
and
dec
sub
dec
xchg
mov
mov
xchg
jns
data16
mov
lea
mov
push
enter
mov
xchg
inc
xchg
dec
sub
push
mov
adc
jne
dec
cld
push
cmp
movsl
jge
jmp
movlps
pop
jl
out
cmp
ja
mov
sub
and
sbb
adc
jp
pusha
sbb
out
push
pop
int3
das
rclb
and
push
add
xor
inc
stos
imulb
aas
mov
push
mov
sbb
loop
lea
das
or
xchg
cli
nop
cmpb
lea
test
rolb
out
mov
insl
push
cltd
pop
add
mov
stos
cltd
mov
sub
pmaxsw
dec
lea
sbb
popf
xlat
lret
sub
lret
sub
sub
imul
lods
dec
arpl
xchg
dec
sub
arpl
jmp
rcrl
and
rcl
out
stos
and
inc
leave
lahf
jne
dec
into
movsl
in
cmp
mov
test
mov
movsl
sub
lods
mov
push
ffree
mov
cmc
das
or
sub
jae
movsb
lock
sub
pop
bound
sub
dec
xchg
mov
outsb
xchg
lods
mov
push
push
clc
je
enter
pop
ss
cmp
mov
xchg
pop
bswap
cmp
jmp
mov
lret
sub
mov
adc
push
pop
hlt
dec
sub
push
xor
out
xor
cwtl
pusha
sti
dec
sub
pop
das
les
fdivrp
imul
push
and
test
add
ja
lret
xchg
aas
mov
mov
aaa
decb
push
mov
hlt
sub
aad
xor
jns
int
out
ss
stos
ljmp
cmp
xchg
mov
xchg
and
in
pop
pop
add
jmp
dec
lock
sbb
call
sub
mov
jne
pop
lods
fldl2e
repnz
mov
xchg
cltd
lahf
shll
call
dec
jbe
mov
xchg
stos
test
xchg
divl
mov
lret
sub
repnz
ret
icebp
std
insb
jge
sub
jmp
rorl
aad
cli
rorb
in
dec
adc
pop
mov
int
scas
dec
dec
std
and
sti
mov
into
cmp
mov
fldl
inc
call
fcmovbe
rorl
sub
stos
jmp
jnp
pop
mov
inc
into
push
stos
lret
adc
je
movsl
xchg
jnp
loop
lea
add
fdivs
jl
pop
cltd
sar
sub
rclb
jbe
mov
bound
movsl
mov
repnz
sub
cmp
out
sub
add
sub
xlat
pop
test
sub
fcompl
and
lret
fdivrs
loopne
pop
scas
pop
dec
loope
sub
subps
popf
jecxz
mov
pop
lahf
sahf
jbe
insl
in
xor
fildl
insl
hlt
jle
or
jge
lods
add
sub
or
cli
add
mov
mov
mov
sub
ret
sbb
jb
mov
pop
sub
aaa
leave
test
stos
sub
pop
adc
outsb
sub
ret
xchg
int3
sub
cmc
xor
jmp
cmpsl
stc
mull
bnd
jne
subb
test
stos
popf
and
test
pusha
inc
scas
fwait
mov
and
in
call
jne
mov
dec
mov
or
lret
sub
popa
push
dec
pop
pop
mov
mov
push
or
xor
or
test
xchg
fiaddl
das
outsb
fmull
mov
call
mov
test
xchg
pop
sbb
adc
cmp
mov
jg
mov
lea
inc
in
lods
dec
adc
jbe
adc
out
popf
outsl
lea
in
dec
xchg
sub
cmc
std
arpl
push
sbb
pusha
pop
adc
mov
sub
sub
test
notl
mov
xchg
pop
bound
xchg
push
push
pop
ljmp
icebp
cmp
lods
mov
cltd
insb
or
roll
std
and
push
icebp
mov
mov
mov
test
or
mov
ljmp
xor
scas
cmpsb
pop
scas
jl
pop
repnz
das
cmp
jp
dec
cmp
jae
movsl
repnz
dec
ljmp
das
lret
mov
pop
dec
lods
sub
les
rcrl
xchg
sbb
test
mov
jmp
fdiv
ret
insl
jmp
sub
pop
add
fwait
rcll
dec
jmp
addb
mov
out
or
xor
fucomp
fcmovu
dec
or
jl
inc
sub
push
inc
push
in
cmp
and
mov
sub
cld
push
in
sbb
test
dec
jmp
imul
mov
test
loopne
rcrb
enter
or
dec
sub
jmp
push
sub
mov
mov
rcrl
mov
sub
mov
and
or
xchg
bound
lods
popa
out
je
sbb
sbb
stos
lahf
fnsave
mov
xchg
jge
daa
insb
loope
inc
adc
jmp
in
mov
in
lcall
sbb
out
lock
int3
or
push
jnp
mov
imul
pop
or
lods
insb
lretw
dec
jg
shrb
adc
pop
pop
pop
add
xchg
push
icebp
push
mov
pop
dec
cmp
push
scas
data16
sub
mov
dec
or
iret
dec
or
cmc
mov
jb
pop
push
xchg
js
shr
xchg
lock
imul
mov
pusha
test
leave
sub
pop
push
mov
lods
cmp
les
ljmp
xchg
data16
cmp
shll
enter
or
test
ficomps
leave
pop
sbb
out
and
je
mov
loop
pop
lahf
cmp
ljmp
mov
fisubrs
bound
inc
in
adc
insb
pop
movsb
mov
imul
aas
lods
sbb
mov
dec
popf
xor
insb
out
cmp
mov
push
call
dec
jmp
icebp
clc
push
bound
fwait
dec
sub
cmp
test
dec
fisubrl
or
push
aad
out
jnp
mov
jne
mov
inc
jnp
out
das
mov
cmp
aad
loopne
icebp
xor
out
loope
mov
pop
dec
sub
xchg
adc
ja
test
or
js
jb
mov
sub
gs
mov
jle
pushf
arpl
aaa
adc
push
sub
les
jg
dec
sbb
cmp
push
stos
sub
push
mov
sub
ds
mov
cmc
int3
xchg
or
clc
mov
sub
shrb
clc
in
sub
movsb
shll
adc
pop
jge
lods
icebp
orb
xchg
inc
add
jb
xchg
sub
dec
in
and
sti
and
mov
movsb
pop
pop
xlat
sub
fwait
imull
test
arpl
and
mov
pop
std
xchg
fstpl
int
dec
mov
sub
inc
pop
fimull
add
and
xor
add
cmp
imul
loope
mov
pop
or
daa
dec
mov
icebp
mov
int
je
sbb
lds
xchg
in
mov
icebp
or
dec
sub
imul
jns
insb
dec
and
xor
jo
jnp
pop
mov
push
mov
xchg
cwtl
aaa
xchg
and
push
jbe
popf
pop
lahf
mov
mov
fmul
test
dec
rorb
push
mov
mov
jge
data16
dec
xor
push
pop
inc
add
lret
inc
or
jne
push
jg
dec
arpl
cmp
int3
cmp
fwait
xchg
in
push
es
mov
cmc
dec
add
out
mov
addr16
outsb
out
and
js
add
sbb
jae
adc
pusha
cmp
in
jge
add
lahf
push
mov
stos
or
imul
or
pusha
xchg
and
xchg
out
imul
and
cmpsb
daa
jmp
loopne
lret
sub
add
out
xchg
pop
and
outsb
pop
rcrb
dec
pop
lods
mov
mov
cmp
sub
and
mov
inc
xor
xchg
aas
sub
mov
jne
sub
loop
jo
add
outsb
in
in
pop
xor
lods
jmp
enter
fdivrs
dec
movsb
inc
xor
inc
pop
mov
gs
jae
jmp
repnz
outsb
jne
dec
or
sti
dec
repnz
adc
bound
or
test
cli
pop
cli
lods
mov
std
enter
leave
stos
sub
dec
mov
int
xchg
sub
sub
loop
and
outsb
test
in
add
imul
iret
pop
pop
mov
out
lea
movsl
xchg
js
call
subb
add
mov
out
xlat
cld
divps
cmp
test
insb
data16
dec
sahf
aas
xor
sub
sub
jp
sub
in
cmc
sub
test
cmp
jle
movsl
in
int3
dec
jge
jmp
jo
out
lods
dec
in
push
xchg
dec
push
adc
std
jge
pop
cmpsl
push
jo
xchg
push
or
jmp
pusha
movq
push
mov
rcll
ucomiss
add
aad
rol
dec
add
pop
leave
mov
mov
jae
push
lock
cmpsl
inc
aam
dec
adc
pop
cmp
sub
fmull
lods
pop
add
add
jbe
inc
mov
movsl
test
in
mov
aad
out
stos
sub
mov
and
out
out
xchg
xchg
mov
stos
push
dec
pushw
inc
inc
stos
out
push
lcall
pop
push
mov
imul
leave
cs
add
imul
xlat
popf
jae
scas
out
pop
mov
pop
push
inc
imul
movsb
lcall
popa
xchg
fdivl
and
ret
dec
cs
mov
xor
cmc
push
scas
mov
add
lock
pop
or
faddl
dec
sub
out
stos
add
jl
or
lds
cmp
jns
ljmp
and
or
sub
pushf
push
mov
pop
pop
xchg
inc
faddl
or
jmp
push
sub
mov
or
pushf
mov
mov
dec
mov
jmp
ss
shll
lods
sahf
mov
xchg
sub
push
cld
or
imul
dec
cmpsl
repnz
xor
push
cwtl
lods
or
lret
je
dec
insl
gs
mulb
mov
mov
and
and
adc
call
and
mov
fisttps
xlat
xor
sub
fldcw
xchg
rorl
mov
loopne
idivl
call
scas
cli
push
add
mov
sarw
js
dec
cli
push
aaa
mov
cmc
push
mov
rcrb
push
lods
mov
dec
movsb
sub
pop
movsl
mov
push
jge
data16
insb
insb
bound
cmp
mov
adc
mov
dec
push
xor
daa
mov
push
inc
cmc
and
push
in
fdivs
test
lods
mov
cmc
mov
popa
std
mov
pop
lock
arpl
dec
into
shl
sti
add
sub
stc
ljmp
push
push
xchg
stc
sub
mov
in
fs
or
inc
std
idivb
insb
pop
sub
in
bound
clc
mov
xchg
ss
in
pop
or
in
pop
mov
out
mov
or
sub
adcl
dec
xor
mov
mov
sbb
jo
pusha
mov
pop
jge
xor
out
or
sbb
sub
in
movsb
leave
movsl
xor
dec
xchg
xor
dec
xor
jae
dec
insl
pusha
call
and
sub
xchg
popf
sub
jb
push
es
imul
outsl
adc
lea
iret
inc
mov
mov
jmp
movsl
cmp
dec
popa
out
popf
mov
fs
dec
sub
cmc
hlt
mov
cmpsb
inc
test
addr16
pop
aad
scas
or
push
icebp
lods
lea
outsb
fisttpll
lret
xlat
stos
in
xchg
xor
adc
xchg
lods
jmp
sbb
sub
sub
pop
aaa
mov
lods
into
jle
mov
leave
outsl
xchg
xchg
dec
fstl
bound
mov
mov
xchg
std
sbb
jp
xchg
lret
je
fnstsw
sub
outsl
rorb
loope
sbb
adc
imul
lds
jle
sbb
jmp
dec
or
dec
out
loopne
or
sub
jl
popf
roll
loope
mov
cwtl
inc
sbb
push
xchg
clc
scas
pop
push
imul
jnp
icebp
loop
das
jge
pop
or
push
jmp
cmp
mov
mov
lods
imul
inc
xor
adc
sbb
dec
dec
inc
cmpsb
add
fists
jmp
call
in
jl
jg
in
xchg
ds
mov
out
mov
pop
jo
pop
adc
dec
out
sub
ds
sub
cmc
lcall
popa
mov
stc
movsl
ds
lcall
mov
add
repnz
dec
scas
lods
mov
cld
aaa
mov
sub
out
cltd
loopne
or
or
sub
xchg
leave
into
cmp
arpl
sub
je
xor
adc
xor
xor
arpl
in
psubq
insl
dec
imul
xor
lret
into
arpl
xchg
mov
dec
mov
and
js
pop
ret
mov
mov
movsb
jecxz
pop
pop
or
imul
mov
pop
outsb
mov
stos
or
mov
shrl
enter
and
or
xchg
and
adc
icebp
sbb
cmc
push
ret
insb
outsl
sub
dec
fsubrs
mov
push
int
lods
pop
xrelease
xchg
mov
ret
dec
or
ja
sub
std
or
mov
test
les
add
movsl
push
jp
fsubl
bswap
fnsave
xor
hlt
mov
rorl
andl
test
cltd
inc
mov
pushf
out
imul
loopne
push
pop
jge
ret
lcall
stc
adc
int
test
roll
or
in
outsb
or
pop
sub
or
or
imul
cmp
fmuls
imul
sub
dec
adc
dec
imul
out
sub
inc
dec
pop
fwait
adc
push
sub
out
ret
sub
dec
adc
pop
mov
push
lahf
aas
xchg
ret
lret
sub
mov
movsl
and
and
dec
lds
mov
sub
popa
insb
ret
in
pop
pop
loop
mov
or
dec
sub
add
xchg
std
mov
xchg
mov
pop
and
test
push
xor
jge
cs
call
das
lea
cmp
test
stos
repnz
bound
iret
pop
in
push
sub
sarb
xor
fs
dec
jo
cmpsl
or
insl
scas
sub
into
dec
or
in
pop
mov
or
mov
lods
push
xchg
xor
call
xchg
mov
adc
test
movsb
rclb
test
ja
cmc
loope
mov
xor
pop
sbb
lods
pop
fldl
xorb
add
pop
imul
add
push
jns
stos
mov
mov
insb
test
pop
cli
jo
cltd
test
pop
sub
js
in
lds
sub
mov
in
movsb
push
cli
push
or
out
sub
rorb
lods
outsb
aad
or
mov
psubsb
or
int3
pop
hlt
push
xor
jae
pop
test
mov
dec
aaa
loopne
icebp
xchg
addr16
cmp
dec
leave
dec
in
aam
fistl
push
fsubs
xchg
imul
outsl
mov
test
xchg
jmp
imul
push
je
movsl
lods
icebp
dec
jecxz
adc
sub
lods
xlat
mov
pop
fstps
and
sub
and
addr16
movsl
and
or
mov
sub
outsb
or
mov
das
iret
add
and
add
sub
iret
insb
xchg
mov
bound
in
enter
add
pop
mov
push
test
fwait
into
jmp
sbb
pop
enter
cs
movsl
outsl
sub
cltd
shlb
rorl
fdivl
dec
punpckhdq
outsl
in
notw
decl
sub
mov
adc
int3
dec
cmp
call
out
and
mov
repnz
mov
jl
cmp
cmp
cmpsb
imul
jbe
repnz
insb
inc
xor
mov
ds
jno
movsl
subb
mov
dec
sbb
jecxz
imul
lods
in
push
fs
adc
fdivl
push
xlat
xchg
add
push
push
addr16
sbb
xorl
jmp
xchg
mov
push
out
test
jl
jb
stos
pop
movsl
jo
mov
cmp
scas
mov
dec
dec
cld
or
test
inc
roll
xor
ljmp
data16
and
pop
stos
arpl
jmp
testb
int
xor
jne
ret
jecxz
sbbl
pop
dec
movsl
into
and
outsl
xchg
xchg
mov
rcrb
imul
icebp
push
mov
in
push
das
xchg
rorb
cmp
push
adc
rcrb
lods
dec
or
mov
inc
leave
test
xchg
sbb
mov
adc
out
and
dec
loope
test
jae
adc
inc
cli
outsb
sub
insl
mov
inc
es
insb
cltd
sub
enter
add
cmp
rcrl
add
jo
dec
sub
jnp
inc
ret
and
xchg
sub
pop
cli
or
lods
sti
adc
adc
in
stos
loopne
cwtl
insl
call
mov
jmp
jl
cwtl
mov
and
lea
andb
or
push
cmc
or
bound
dec
xor
orb
mov
or
jno
ss
jns
outsb
pop
bound
pushf
dec
mov
out
xlat
sbb
push
loope
jae
adc
and
xor
dec
or
mov
mov
mov
jne
loopne
mov
push
outsb
fimull
fistpll
xchg
notb
mov
stc
sub
sub
outsl
sub
cmp
out
in
test
data16
jmp
int3
sbb
into
cmp
daa
dec
pop
mov
dec
cmp
lcall
lret
cmpsl
fdivrl
add
cmc
adc
adc
cmp
push
jbe
stos
testl
mov
out
loop
jp
sub
les
jmp
cltd
inc
jg
xchg
lock
insl
dec
fidivs
sahf
mov
dec
sbb
dec
lods
imul
lret
jp
test
mov
cmpsb
lock
bound
or
inc
or
lods
in
pusha
dec
pop
sub
stos
in
and
out
inc
mov
push
aam
addr16
repz
call
scas
dec
add
lret
repz
dec
mov
xor
outsb
lcall
dec
mov
or
in
add
mov
and
push
out
mov
stc
push
mov
adc
and
lds
push
daa
int
lcall
leave
adc
dec
cmp
cwtl
or
push
fwait
xorl
sub
or
sub
jb
pop
mov
test
or
ret
mov
jg
add
xor
xchg
or
das
ss
or
pop
inc
repnz
insb
pop
mov
lods
cmp
mov
call
xchg
dec
int3
cmc
adc
in
outsb
int
xchg
sub
adc
dec
das
daa
ds
sti
and
data16
mov
sub
cli
mov
dec
dec
jg
testb
cs
jl
jno
adc
imul
out
nop
lahf
push
sub
mov
pop
js
pop
dec
insl
inc
mov
and
mov
lea
dec
push
dec
movsl
cmp
orb
or
sbb
push
sub
push
push
jne
lret
mov
cmp
cmc
cmpl
stos
mov
stos
jb
leave
stc
push
jle
outsb
pushf
cmp
sbb
mov
imul
push
test
imul
test
lds
or
stos
lea
add
cwtl
in
cld
ret
out
addr16
mov
sub
hlt
daa
pop
xor
lea
sub
or
punpckldq
pop
dec
dec
hlt
jmp
ss
adc
add
inc
in
lret
test
add
fcoms
pop
adc
adc
in
sub
dec
movsl
xchg
push
ret
rolb
or
outsl
mov
je
and
sbb
out
cld
jae
sub
pop
lahf
sub
mov
test
fsub
iret
pop
ss
scas
sub
add
mov
fxch
sub
mov
jne
xor
xchg
adc
into
bound
lods
sbb
and
fcoml
sub
and
cmp
sub
mov
fimuls
insb
test
imul
push
std
out
insl
fadds
dec
in
fnsave
lret
or
lods
or
aad
outsl
adc
call
popf
push
add
ljmp
lret
xchg
enter
jp
shrb
pop
sbb
jmp
js
dec
ret
push
cmpsb
movsl
out
xchg
mov
add
sub
js
stos
xor
lods
dec
shlw
cmp
je
divl
mov
lret
adcb
and
lretw
push
loop
jo
movsl
sarb
scas
sub
lea
sub
and
xchg
cld
outsb
or
bound
xchg
pop
mov
pushf
pop
stos
sub
jae
loop
dec
cmp
fs
stos
stos
sbb
js
or
pop
or
pushf
out
dec
sbb
adc
rol
or
mov
fucomi
stos
addr16
jbe
sub
jae
movntps
loop
test
fcoms
mov
jecxz
jb
daa
push
pop
xchg
stos
je
xchg
adc
sub
orb
or
add
mov
mov
or
call
adc
adc
or
fs
dec
movsl
pop
out
or
push
mov
dec
jbe
mov
es
cs
mov
stc
ljmp
mov
sub
mov
dec
sar
in
cs
fiadds
or
jbe
outsb
inc
pop
cs
add
test
insb
lds
stc
dec
xchg
pop
inc
dec
push
les
jo
cmp
jbe
loopnew
sub
jl
xchg
dec
mull
sub
or
sub
out
sbb
in
xchg
xor
xor
sub
mov
rcl
sub
jle
ds
push
and
jns
or
psubusw
stos
sub
out
cmp
test
in
mov
push
jae
sub
divl
xchg
rorb
add
dec
cmp
test
sahf
jno
mov
pop
in
dec
addl
movsb
sahf
test
movsl
aaa
inc
pop
movq
insb
xchg
es
or
in
or
imul
movsl
mov
xadd
xchg
mov
lea
dec
incb
data16
das
fcoms
cmpsb
jmp
ja
sahf
mov
jmp
popf
jne
in
lods
test
inc
mov
push
popa
psubw
mov
push
and
push
movsl
loop
stos
test
ljmp
sub
and
ljmp
js
jmp
dec
push
sbb
or
mov
subl
xor
xchg
lea
and
push
inc
mov
fsts
push
das
cmp
orl
fimull
adc
in
sub
pop
sub
cmpsb
lods
sub
push
ss
dec
lret
jmp
mov
subb
loopne
dec
stos
jl
add
movsl
es
cmp
loop
pushf
in
stos
mov
xor
movntq
jg
dec
flds
fucomp
fimuls
push
xchg
jne
mulb
loopne
inc
lods
mov
jge
adc
mov
pop
xchg
test
cmp
ds
outsl
jne
lret
loope
xor
iret
mov
or
in
dec
inc
lcall
ss
test
inc
fst
cmpsl
jnp
decb
idivw
icebp
in
mov
lea
mov
xchg
lods
cmp
mov
pop
imul
dec
fldt
mov
ds
sub
cld
dec
pop
mov
es
or
ss
in
loop
mov
sub
sub
in
xchg
daa
leave
bnd
jle
sub
std
pushf
jae
sub
test
push
adc
scas
lods
lock
add
test
pop
movsl
inc
push
xchg
lock
add
sub
aad
adc
idivl
sub
push
jne
out
cmp
lea
gs
fldcw
jge
push
hlt
rep
mov
xchg
cld
arpl
test
in
in
addb
std
mov
cmp
jmp
dec
xchg
and
push
dec
jmp
in
cwtl
jb
sbb
push
sbb
out
pop
lret
idiv
and
stc
outsb
pop
sub
ret
movsl
test
in
sub
mov
movsb
push
lods
mov
bound
outsb
sub
jo
push
sub
leave
lahf
sub
bound
or
das
sbb
aam
push
jp
or
push
in
push
lods
insl
pop
jne
fldcw
out
mov
int3
push
mov
addps
inc
lcall
or
out
dec
shlb
push
addb
ss
push
out
bound
dec
outsb
mov
sub
and
insb
addr16
in
cmp
lods
xchg
xor
xor
inc
iret
mov
xor
dec
xor
ss
mov
sub
mov
jmp
test
pop
in
leave
jno
dec
jo
out
icebp
sub
fisubrl
gs
mov
push
mov
xlat
outsb
or
inc
fwait
outsb
enter
bound
or
and
dec
lcall
pop
sub
cli
aaa
scas
jg
movsb
or
jecxz
mov
dec
fdivrl
cs
xor
les
lret
andl
call
pop
pushf
rcrl
dec
mov
outsb
push
outsl
movsl
jmp
into
dec
pop
cltd
xchg
imul
mov
xor
ret
mov
mov
push
testb
xor
pop
sub
xchg
adc
addr16
dec
pop
pop
xchg
mov
cld
mov
outsb
xchg
loop
icebp
insb
out
es
lods
cs
ss
enter
dec
int
or
dec
test
lds
nop
insl
dec
mov
lods
pop
out
cmp
or
in
jbe
hlt
push
popa
add
pop
mul
outsl
loopne
ljmp
xorb
das
cmp
mov
sub
adc
mov
sbb
scas
test
xlat
dec
and
or
jb
inc
mov
movsl
or
inc
aas
outsb
jmp
sub
dec
dec
notb
dec
sub
pop
jno
cs
cmp
mov
push
test
xchg
repnz
data16
inc
dec
inc
adc
or
xchg
mov
scas
in
aas
dec
dec
adc
mov
push
lods
pop
insl
sti
leave
loop
pushf
mov
dec
lods
sub
lcall
xorb
xlat
scas
fstl
sub
in
test
jmp
adc
lods
gs
push
nop
mov
adc
sub
sbb
pop
test
mov
xchg
leavew
insb
lea
hlt
leave
jge
int3
leave
push
inc
sub
jne
lea
and
fstpt
popf
push
mov
outsl
ljmp
cs
stc
dec
sbb
lea
or
cmpsb
and
mov
std
push
das
imul
mov
push
mov
test
or
dec
push
fimull
cmc
and
sub
test
test
sub
stos
or
or
push
jae
out
add
dec
insb
sub
out
iret
adc
push
dec
int
sub
sbb
lock
shrb
sahf
mov
xchg
faddl
push
sub
jge
inc
test
push
mov
pop
jg
pop
es
mov
sub
rcll
xchg
leave
mov
or
mov
sub
adc
sbbl
std
dec
dec
cmc
adc
add
cmp
dec
push
push
or
rcrl
popa
outsl
popf
mov
pop
or
pop
ljmp
pop
xchg
dec
in
sbb
in
movsl
data16
dec
and
or
in
iret
dec
setne
dec
push
cmpl
cmp
lods
lods
cmp
mov
loopne
sar
insl
mov
pop
loop
scas
xchg
mov
imul
lods
and
dec
xlat
mov
jmp
test
lods
add
and
or
pop
mov
and
fcompl
or
test
dec
inc
sub
incl
adc
mov
insb
sub
dec
xor
aaa
ja
cmp
dec
push
jmp
sub
pop
repnz
jmp
or
add
mov
xor
cmpsl
out
sub
push
jecxz
sbb
lods
out
adc
repz
loopne
mov
mov
popf
and
outsl
inc
jmp
rorb
subl
lret
ficomps
mov
mov
mov
mov
jo
test
fistpll
lret
nop
mov
outsb
pop
sub
and
sbb
jg
jbe
mov
jg
cmp
or
gs
or
inc
xchg
fwait
std
push
sub
dec
pop
daa
in
arpl
leave
fistpl
inc
hlt
shrb
mov
inc
js
xchg
rcrl
xchg
cmpb
mov
lret
dec
dec
fstps
mulb
xchg
outsl
lods
sub
loope
std
jle
stc
mov
aas
jno
incl
sbb
or
sub
cmp
mov
dec
add
movsl
and
cmp
xchg
in
dec
ds
pop
sub
pop
test
push
imul
pop
sbb
imul
sbbl
pop
xchg
inc
dec
jmp
ds
sub
lea
pop
push
cmpsb
xchg
out
dec
or
imul
ds
insb
mov
xchg
dec
aad
pop
sub
aas
aad
std
push
loopne
xchg
jge
data16
imul
shll
dec
ret
sub
pop
nop
jne
push
stos
pop
push
mov
add
xchg
push
mov
push
rcrb
jae
lret
inc
push
push
or
sub
push
and
adc
cli
imul
fimuls
jge
les
insl
pop
es
loop
sub
out
fiadds
ret
lock
dec
jp
cmp
adc
mov
mov
fisubrs
dec
iret
jmp
cmp
clc
aad
pop
mov
dec
sub
in
add
and
fwait
xor
cmpsl
jne
ret
loope
std
jo
sub
jl
add
lods
sub
sub
dec
push
loop
dec
push
cmp
mov
inc
cmpsl
xchg
pushf
mov
in
mov
lods
mov
loope
dec
rcrb
in
fdivl
mov
push
out
or
cmp
scas
stos
sub
pop
stc
aaa
xor
pop
xchg
mov
je
scas
shlb
jmp
call
out
pop
int
sarb
sub
sbb
test
jp
fcoms
mov
push
test
out
cli
mov
daa
movntps
jmp
stos
jmp
xchg
sub
lcall
push
into
mov
lret
imul
mov
mov
cli
pop
jmp
sbbl
dec
imul
mov
cmp
xchg
ljmp
insl
shrb
lods
mov
les
dec
movsl
push
dec
xchg
test
mov
ljmp
cmp
das
sbb
outsb
insb
inc
cs
call
stc
in
jmp
or
add
mov
cmc
xchg
insl
add
dec
lahf
mov
outsl
jmp
or
ljmp
mov
fwait
inc
pop
cmpsb
imul
bound
mov
dec
pop
and
out
pop
jae
pop
imul
pop
push
ret
repnz
adc
dec
icebp
cmp
mov
inc
dec
cltd
xor
mov
daa
outsl
sub
xchg
dec
sti
arpl
data16
das
outsb
pop
inc
repnz
scas
push
jmp
dec
push
or
stc
fisttps
jbe
pop
repnz
sub
shl
sub
imull
lret
push
cmp
out
andl
sub
iret
jmp
sub
in
icebp
push
lods
call
lcall
insb
jnp
adc
inc
mov
mov
in
push
sbb
mov
stos
in
pop
data16
lea
xor
dec
dec
xchg
or
out
adc
cli
sbb
stos
cmp
insb
mov
hlt
push
dec
fdivs
mov
jecxz
pop
push
adc
mov
icebp
aam
sub
insl
add
mov
push
call
mov
inc
cmp
out
sbbb
xchg
call
adc
test
lret
push
dec
adc
mov
in
shrb
pop
or
nop
sub
xchg
dec
sub
xor
xor
insl
inc
in
dec
cmpsl
adc
and
mov
push
es
ja
push
int
push
stos
movsl
pop
pop
sbb
xor
insb
xchg
shlb
push
loop
pop
std
mov
or
das
pop
test
and
push
repnz
pop
inc
scas
jb
mov
call
mov
or
in
or
test
mov
sub
mov
daa
std
or
mov
movl
test
push
movsl
pop
inc
dec
js
lods
popf
mov
mov
cmp
scas
and
xchg
ja
pop
sbb
out
jmp
pop
lock
mov
std
aas
std
outsb
jns
out
sub
mov
stos
lods
sub
inc
fmull
xchg
dec
pop
nop
add
iret
mov
push
lret
js
sub
aas
and
test
bound
pop
nop
imul
aad
or
sub
sub
sub
jo
adc
aam
pushf
lea
inc
stos
leave
std
pop
jle
jg
pop
sbb
out
pop
dec
push
sub
int3
ja
cmp
mov
cmp
shrb
dec
pop
inc
xchg
adc
or
call
inc
loope
sub
jne
xor
das
bound
mov
popl
aaa
in
or
movsl
adc
or
movsl
dec
and
inc
lret
sahf
mov
pop
mov
mov
sub
mov
pop
mov
jbe
sub
inc
xchg
fwait
jg
sub
adc
ret
ss
imul
or
pop
in
adcb
or
xlat
xchg
cwtl
mov
ljmp
loop
pop
xchg
add
out
mov
mov
mov
push
ffree
adc
fisttpll
dec
ljmp
pop
mov
pop
push
lods
lock
add
lea
inc
dec
pop
idivb
test
dec
jecxz
ljmp
mov
mov
or
mov
shr
data16
lret
or
push
fisttps
mov
loopne
cmpsb
sub
lock
cmp
jmp
test
dec
sub
sub
mov
insb
daa
mov
data16
movsl
jg
and
lock
loopne
or
test
pop
xchg
test
sub
adc
mov
nop
jg
or
sub
push
push
in
mov
mov
sub
xchg
xchg
mov
mov
or
fdivrs
push
mov
mov
dec
jo
sub
mov
imul
xlat
fnsave
adc
mov
les
lods
fsubs
repnz
lret
or
cmp
xor
and
mov
mov
xchg
or
outsb
jmp
xchg
lock
xchg
in
cmp
jp
sub
and
adc
mov
mov
outsb
push
shl
mov
inc
lcall
add
add
ljmp
mov
lods
outsl
loop
dec
adc
movsl
fsub
test
jge
lcall
fildl
mov
dec
sub
or
mov
xchg
pop
lods
dec
popa
je
jne
clc
jae
movsl
lahf
fmul
sub
sub
pop
imul
push
dec
das
div
movsl
add
mov
pushf
popf
std
movsb
jno
or
test
inc
cld
push
add
adc
iret
das
sbb
pop
mov
or
imul
sub
sbb
out
leave
adc
test
dec
lret
or
or
mov
add
sub
movsl
inc
jecxz
sub
outsb
les
mov
or
dec
cmp
xchg
jns
shlw
fidivs
orb
add
push
lret
mov
data16
lods
mov
cmpsb
xchg
xchg
dec
lods
decl
repz
cmp
cltd
loop
jb
repnz
mov
pushf
es
loop
xchg
inc
sbb
jnp
int
sbb
test
je
mov
cwtl
push
or
cmp
xchg
lods
or
mov
push
sbb
mov
and
lock
jmp
and
push
in
pushw
jge
mov
idivl
adc
xor
iret
fucom
enter
and
test
mov
adc
mov
mov
out
sbbb
addr16
in
fisttpll
xchg
mov
mov
mov
cltd
je
cwtl
xchg
xor
sahf
lods
stos
leave
and
lods
adc
push
adc
xor
lea
and
jmp
dec
mov
mov
sbb
push
jae
movsl
lahf
pop
aas
int
mov
inc
jg
xchg
inc
cli
pop
mov
lods
push
sbb
dec
popf
fstl
test
sbb
and
ftst
or
or
repz
movsb
push
lods
int3
pop
mov
mov
xchg
fisttpll
out
xchg
mov
and
sub
inc
outsl
lock
in
lea
xchg
in
shrl
mov
cmpsb
out
sub
popl
sbb
mov
mov
cmp
push
sub
jle
out
sub
pop
nop
shlb
push
inc
outsb
lods
insb
jmp
cmc
pop
fsubrs
enter
inc
cltd
or
jmp
push
push
loope
stc
imul
pop
iret
pop
into
or
cmp
arpl
pushf
mov
push
pop
pop
dec
mov
xchg
test
jg
fstl
cmp
mov
sub
mov
or
dec
dec
xchg
sub
rclb
lods
insb
pop
dec
das
jg
clc
push
xorb
ret
inc
subl
fldcw
mov
push
dec
jmpw
cld
lahf
mov
mov
lock
adc
mov
inc
pop
mov
lods
or
shr
inc
ss
cvtpi2ps
cmp
mov
sbb
icebp
pop
leave
inc
ret
fstp
mov
data16
loop
popf
js
fmuls
loopne
and
stos
ret
mov
cmp
rcr
data16
and
loop
sbb
dec
sub
inc
or
push
xor
add
jmp
negl
out
leave
adc
push
aaa
leave
repnz
push
inc
loope
loope
cmp
gs
call
or
fldl
std
push
inc
xor
jmp
and
mov
in
inc
iret
lret
sub
movsb
das
call
cmc
movsl
xor
stos
test
es
lock
jecxz
repnz
mov
adc
pop
cli
das
jge
push
mov
and
dec
xchg
mov
or
rcrb
sbb
mov
ljmp
and
sbb
dec
pop
inc
push
lock
mov
inc
push
cmpb
lock
decb
fbstp
mov
ja
jecxz
cmpsb
mov
mov
mul
out
insl
xchg
dec
mov
jmp
or
std
jo
imul
data16
aad
pop
ss
dec
ds
bswap
jmp
jmp
int
data16
popf
xchg
out
dec
sbb
in
push
rolb
mov
int
into
fdivrl
pop
stos
aaa
in
movsb
popa
pop
in
jp,pn
sbb
adc
add
out
add
daa
das
addl
adcb
cmovle
inc
mov
mov
pop
jl
pop
jl
mov
sub
dec
dec
xchg
jb
fcmove
test
jmp
sub
xchg
sub
sbb
loop
pop
pop
mov
lret
out
xor
lret
pop
movsl
add
mov
inc
or
cmp
hlt
into
jne
jmp
jne
mov
insl
pop
jb
inc
sub
pop
negb
jmp
test
sbb
shrb
jne
or
movsl
push
outsl
js
out
dec
ds
or
push
sahf
xchg
or
iret
inc
or
clc
jne
outsb
adc
imul
sti
in
fsub
xchg
in
jl
movsl
in
cmp
iret
push
lds
push
ljmp
sub
lods
outsb
call
repz
lret
imul
xchg
dec
adcb
xor
repz
add
push
in
mov
xchg
movntps
data16
inc
cmp
lods
les
mov
insl
dec
inc
mov
mov
push
sub
fwait
inc
mov
in
orb
call
into
es
push
mov
sub
push
cmp
pop
or
imul
jo
lret
sub
pop
fisubrs
fmulp
data16
cmpsl
call
jmp
out
aad
pop
adc
mov
loope
jmp
xchg
ja
mov
dec
lds
dec
lods
cmc
sub
or
enter
or
loope
jmp
push
in
int
lock
sti
imul
outsb
sub
pop
scas
mov
int
outsb
aaa
pop
mov
pop
lret
int
sahf
jge
test
mov
lret
push
adc
cmpsb
jl
xor
sub
lret
call
icebp
int
mov
cld
sahf
mov
jb
or
mov
rolb
or
ret
sub
push
lcall
mov
dec
add
mov
cld
xor
iret
dec
jmp
das
cmp
cwtl
das
test
add
push
push
mov
or
sub
push
loop
test
jmp
or
movsl
insb
test
cmp
sub
stos
mov
hlt
sub
dec
add
test
shr
pop
std
shrb
daa
mov
xchg
lret
aad
jl
imul
or
or
xchg
dec
lret
cli
dec
aam
ret
push
mov
sub
sub
xchg
add
je
push
pop
hlt
jnp
ret
scas
outsb
mulb
mov
sbbl
cmc
mov
xchg
cmpsb
inc
xor
fsub
divb
std
jmp
or
pop
cmp
dec
dec
lret
mov
xchg
mov
ss
mov
aas
push
xchg
sub
push
push
xchg
sub
ds
jecxz
ret
mov
into
mov
xorl
clc
lea
pop
imul
sbb
fcmove
dec
push
push
cmp
fisttpll
sub
pop
mov
or
ljmp
mov
in
mov
sub
cmc
out
jno
outsl
loopne
inc
lcall
fnsave
lods
js
cmp
push
adc
mov
dec
or
in
xchg
in
cmp
in
sub
jl
mov
sub
mov
clc
dec
pop
cli
arpl
sbb
and
sub
pop
fidivs
mov
dec
inc
test
mov
inc
call
ret
xchg
aam
push
das
sub
or
xor
std
jmp
and
das
push
xchg
jmp
or
out
sub
adc
mov
mov
sbb
mov
add
fcmove
lods
push
call
and
pop
stos
xor
jmp
test
sbb
or
mov
call
adc
dec
cs
mov
jnp
pop
dec
in
mov
mov
push
adc
imul
jge
mov
into
xchg
lcall
sub
jo
mov
test
mov
jg
in
fisttpl
movsl
cmc
mov
cli
cmpsb
lods
jno
pop
clc
dec
jmp
ret
inc
xchg
xchg
jge
or
std
xlat
scas
enter
outsb
pop
add
adc
ja
scas
sub
out
int3
mov
pop
push
lds
pop
shlb
cmpsl
push
push
lods
or
xchg
popf
out
clc
imul
or
push
mov
pushf
push
lods
dec
dec
mov
xchg
imul
fsubrl
testb
mov
in
dec
ret
ret
mov
imul
mov
sub
mov
clc
test
xchg
xchg
lahf
pop
ljmp
enter
stos
sub
rcrb
pop
xor
xor
ret
or
test
in
sub
push
dec
mov
mov
xchg
outsb
inc
push
sbb
sub
or
aad
in
lret
dec
and
stc
mov
in
frstor
pop
in
jmp
xor
cmp
ljmp
pop
add
cmp
jne
loope
jno
pop
pop
adc
insb
cltd
out
jmp
xchg
aas
sbb
and
or
fnstenv
in
sub
pusha
xchg
test
cs
ds
jae
repnz
mov
mov
mov
sbb
jno
push
sub
mov
jecxz
pop
ja
repz
push
sbb
dec
pop
push
jle
mov
xchg
fsubrl
xor
jne
test
imul
pop
mov
sub
adc
in
arpl
adc
mov
in
repnz
adc
outsl
inc
shll
scas
pop
xchg
testl
data16
out
pop
fldpi
scas
decl
addr16
xchg
mov
call
fildll
dec
inc
cmp
hlt
dec
sub
and
mov
fnsave
data16
negl
lods
push
jle
scas
into
loop
test
xchg
jne
dec
decb
stos
sub
xchg
or
aam
mov
out
into
stos
filds
cmp
mov
mov
lods
inc
sub
sbb
xor
dec
out
dec
lret
cmp
jb
xchg
push
xchg
xor
push
repnz
and
dec
es
jb
out
pop
xlat
mul
out
pop
xchg
cmc
lret
data16
in
add
shl
movsl
adc
mov
xchg
pop
mov
mov
and
lret
imul
iret
or
xchg
out
jb
aaa
xor
out
mul
orb
scas
xchg
sub
adc
xlat
test
and
xchg
pop
or
jno
sub
insl
fnstenv
fnstenv
shl
loopne
push
xor
jo
mov
and
int
fsubrs
out
ret
sub
xchg
fidivl
mov
imul
pop
ljmp
add
inc
in
stos
sub
movsl
fwait
xor
pop
inc
or
mov
test
movsl
into
scas
jecxz
iret
dec
sub
and
cmp
or
jmp
mul
add
int3
enter
jmp
sub
lods
sub
fs
xchg
adc
iret
movsb
out
add
out
aad
xor
call
mov
test
pop
mov
jae
xchg
inc
repz
enter
xor
xchg
jb
pop
insb
xorb
mov
stos
stc
in
add
mov
mov
aad
xchg
stos
into
pop
iret
ret
test
mov
faddl
out
sub
es
inc
mov
clc
dec
imul
shll
sti
out
mov
loope
mov
cmovl
stos
sub
inc
push
push
stc
or
or
ret
aad
pop
push
divps
sbb
stos
insl
dec
jmp
dec
sub
fnsave
in
loopne
adc
sub
out
in
imul
test
mov
ret
test
inc
mov
dec
cmc
fcomi
jns
push
rorb
dec
sbb
into
cmp
int3
cmpsl
fsubs
mov
stos
xor
mov
cmp
sub
jge
loope
jnp
or
dec
xor
mov
out
adc
xchg
mov
je
int3
fwait
rcrl
mov
mov
mov
pextrw
xor
sub
dec
arpl
or
inc
or
mov
inc
add
adc
sbb
insl
xrstors
in
lods
test
cwtl
jb
in
mov
and
insb
sub
sbb
push
jmp
imul
push
mov
push
cltd
inc
mov
sub
cli
in
int
xor
or
cmp
imul
xchg
dec
lahf
jp
loop
das
aad
dec
cmp
mov
in
dec
xchg
dec
sbb
pop
or
mov
or
dec
mov
mov
xor
sub
jl
ficoml
add
dec
stos
dec
aaa
sub
out
mov
jecxz
push
jmp
sub
fwait
push
lock
add
sub
test
adc
push
adc
int
push
and
jnp
loop
xchg
fldl
pop
mov
lcall
add
out
sub
into
xchg
push
lret
or
xchg
data16
push
adc
insb
xchg
popl
enter
notl
addr16
sub
xchg
sub
push
mov
data16
sub
and
pop
add
cltd
repz
mov
push
jbe
pop
sub
dec
lds
or
ss
dec
sub
jge
mov
sub
cmp
or
out
insl
dec
sub
rolb
sub
mov
enter
cmp
add
mov
xor
sub
sbb
int3
mov
inc
sahf
add
lret
fldl2t
jle
fstpt
push
push
push
cmc
call
aad
fstps
mov
push
pop
sbbb
jmp
mov
jle
sbb
imul
movsl
cltd
inc
popf
fnsave
movsl
dec
inc
or
pop
out
call
mov
test
fistl
pop
pop
mov
cmpsl
sarl
imul
or
mov
iret
test
cltd
std
pusha
sub
ljmp
and
imul
aad
fidivl
jmp
mov
dec
les
push
andl
dec
mov
in
push
or
add
int
iret
adc
push
mov
pop
insb
adcb
jae
add
push
or
and
push
sti
push
lods
sub
jns
jne
cmp
sub
ret
inc
lret
or
push
loope
dec
sub
mov
push
lcall
mov
subb
out
leave
out
xchg
cmc
dec
popf
adc
sub
insb
cmpl
repnz
sbb
or
pop
mov
and
call
xchg
or
add
mov
adc
inc
or
sub
adc
and
outsb
decl
xchg
daa
sbb
mov
popa
out
pop
popa
sbb
or
or
stos
lods
fwait
push
data16
into
shr
fidivrl
data16
jns
sahf
cld
mov
lods
or
inc
and
pop
pop
pop
mov
outsl
fildll
sti
outsl
jmp
sarb
and
mov
into
sbb
pop
add
jmp
fldcw
rcll
sub
pop
imul
sbb
pop
mov
and
adc
clc
mov
and
sub
test
out
call
pop
push
scas
leave
cltd
push
out
inc
jl
decb
pop
sub
push
mov
add
mov
out
dec
leave
movsl
arpl
das
cmp
mov
sti
inc
push
lods
leave
dec
adc
rcrl
xorl
pop
adc
mov
call
mov
lret
mov
dec
push
mov
in
push
cmp
xchg
int
fsubr
sub
inc
into
push
jg
cwtl
sub
push
or
sbb
imul
fcompl
mov
cmp
pop
xor
dec
fidivs
es
pop
pop
das
es
call
out
imull
or
insl
and
or
sbb
out
lods
stc
push
cmp
ret
xchg
leave
outsb
and
inc
mov
leave
mov
mov
es
pusha
loopew
or
fmuls
or
pop
hlt
in
or
scas
pop
dec
or
adc
sub
loope
leave
jo
std
pop
ss
shr
xchg
fldenv
outsb
dec
adc
int3
and
lcall
xchg
imul
aaa
lock
enter
mov
cmp
std
fwait
mov
mov
dec
mov
push
jl
lret
mov
pop
pushf
add
out
jne
xor
push
push
adc
lods
push
sbb
ljmp
xor
std
outsb
xor
cmc
out
sbb
cwtl
cmc
lods
pushf
jmp
xchg
lods
test
mov
pop
sub
sahf
loop
mov
mov
mov
and
mov
mov
cli
mov
dec
sub
data16
push
pop
add
mov
ja
sub
xchg
jecxz
fimuls
sub
xchg
push
sub
cmpsl
add
gs
pop
jge
dec
mov
in
insb
pusha
mov
ja
dec
cmp
dec
jb
and
cltd
cmp
and
int3
sub
push
rcrl
nop
xchg
lods
movsb
xchg
lcall
sub
xor
xchg
and
sub
inc
mov
outsl
fs
pop
pop
add
test
lcall
lea
test
test
fldenv
dec
dec
jb
out
push
decb
pop
rclb
and
mov
stos
sahf
and
jp
push
and
and
out
sub
ret
inc
mov
mov
dec
pop
ljmp
pop
fwait
nop
push
mov
mov
stos
decb
sub
xor
stos
or
and
xchg
lods
or
loopne
fucom
pop
sbb
cmpsl
mov
into
xchg
xchg
mov
lea
lahf
mov
xor
or
xchg
leave
push
ljmp
sbb
sarb
adc
fsts
pop
repz
lret
jmp
dec
mov
das
mov
pushw
push
daa
movsl
dec
in
jne
enter
lea
xchg
xchg
arpl
jge
imul
add
mov
mov
shll
add
out
xor
pop
adc
cs
test
fs
ret
or
cmp
divl
scas
faddl
test
test
jo
in
jmp
enter
or
xchg
test
and
test
aaa
aas
or
xchg
jne
sub
loop
sub
test
sub
insl
cmpsb
das
loopne
test
testl
repz
loope
test
insb
cmpsb
xchg
mov
in
adc
fimuls
mov
ret
scas
shrl
push
ss
jge
popaw
or
push
or
dec
dec
insb
add
movsb
push
insb
xor
pop
scas
data16
aam
xchg
jnp
pop
xchg
rolb
ja
call
mov
xchg
fdivrs
mov
int3
shll
mov
xor
jnp
pop
outsl
das
outsb
negl
movsl
fstps
cmpsb
dec
sbbl
lret
das
sub
mov
les
repnz
jo
sahf
xchg
imul
test
fcoms
and
inc
nop
lods
stos
pop
xchg
push
test
movsl
subb
imul
out
bound
add
or
push
push
scas
popl
sub
and
ror
pop
loope
ss
ds
js
sub
mov
sbb
iret
stos
mov
mov
or
dec
and
push
loop
sub
mov
jo
mov
lods
in
aad
xlat
fisttpll
cmp
ffree
xor
iret
jmp
dec
or
dec
icebp
data16
dec
call
xchg
jb
xor
lods
ljmp
rorb
push
push
xchg
rorl
cld
jg,pt
out
sub
push
out
fsubrl
lret
sbb
outsb
in
adc
filds
pusha
and
arpl
rorl
in
call
sub
aad
lret
xchg
enter
in
outsb
test
test
stos
das
jmp
jg
xor
inc
jae
add
bound
xchg
push
outsb
cs
and
icebp
jecxz
push
xlat
ret
orb
or
movsl
popf
mov
stos
loopne
xchg
sub
xchg
leave
cmc
imul
add
mov
push
out
push
js
pop
xchg
jmp
andl
dec
push
mov
inc
push
and
mov
aad
jmp
rolb
in
sub
mov
js
jl
pop
xchg
mov
jno
ret
into
out
jmp
cli
inc
xchg
fldt
push
cmc
add
jnp
lods
pop
push
or
fwait
or
jmp
adc
orl
mov
sub
and
nop
mov
adc
into
dec
sti
push
lods
dec
or
movsl
xor
mov
js
mov
lods
xor
mov
dec
mov
ror
mov
sarb
insb
lcall
or
sub
add
jle
je
std
les
lret
outsb
xor
sbb
pop
jne
test
adc
xchg
lahf
ljmp
mov
add
jb
nop
imull
mov
lcall
call
mov
adc
lahf
cs
test
call
xchg
ja
mov
mov
sub
test
and
pop
jle
jecxz
call
sbb
push
popa
dec
cmp
push
jmp
cmp
inc
and
dec
dec
ss
xchg
cmp
jecxz
mov
stos
dec
pop
or
pop
add
outsl
stos
pop
bound
sbb
aad
lods
lock
repz
xchg
push
dec
lcall
movsb
outsb
stos
imul
cmpl
loop
negb
xchg
sub
push
gs
cmp
jmp
dec
icebp
jg
pop
enter
aaa
jae
outsb
sub
lret
addr16
in
push
jmp
inc
das
adc
push
sub
lret
fidivl
sbb
out
sub
fdivrs
dec
mov
test
ljmp
scas
push
mov
jg
pop
sbb
fstpt
sub
mov
add
insl
lret
dec
das
mov
jne
xor
mov
dec
adc
adcl
scas
data16
nop
pop
or
fistpl
mov
sub
icebp
daa
lret
jmp
mov
out
test
lock
push
repz
out
sbb
jmp
stos
sub
pushf
cmpsb
sbb
sti
bound
into
cs
jns
pop
xchg
mov
cmp
push
mov
loop
pop
jnp
jo
xchg
lahf
repz
xchg
aaa
push
and
inc
imul
mov
cmp
fisttps
xorl
in
mov
lods
sub
lds
dec
push
mov
pop
xchg
imul
mov
jno
sub
or
mov
lcall
sub
adc
xor
sub
int
xchg
sbb
sub
cmp
dec
lods
addb
push
outsb
iret
lret
add
xchg
jp
call
sub
xchg
ror
xchg
push
out
or
xor
or
xchg
push
dec
pop
iret
mov
pop
and
insl
cltd
ret
addr16
aas
test
or
aaa
xor
bound
repz
enter
pop
or
cmp
test
cmp
jmp
addb
icebp
mov
sub
shl
cmp
dec
out
xchg
xchg
ja
dec
or
and
outsl
adc
icebp
sbb
out
movsl
ficomps
fdiv
jnp
movsl
sub
mov
scas
and
xchg
outsb
lret
pop
jge
xchg
push
mov
lods
cmpsb
lods
out
sbb
frstor
aas
stc
cmp
inc
test
push
sbb
xor
or
out
mov
or
mov
out
ss
or
xchg
sub
insb
add
push
scas
insl
ljmp
cltd
fistl
insb
cmp
cmp
out
mov
scas
pop
pusha
inc
arpl
sete
das
loopne
popf
clc
lret
pop
shrb
addr16
loop
pop
jmp
test
pop
imul
jnp
in
je
dec
xor
imul
fmul
xchg
mov
lea
in
cmpsl
push
lea
and
pop
xchg
imul
jecxz
cmp
int3
mov
mov
lret
jge
stos
sub
jecxz
and
push
ja
sub
fcomps
subl
or
stc
outsl
add
pop
inc
lahf
sti
int3
xchg
leave
sub
inc
jp
jae
lods
jno
scas
dec
imul
shr
xchg
lods
sub
jb
test
outsb
dec
xchg
jbe
cwtl
jnp
cmp
ds
sub
lds
insl
sub
dec
cmc
mov
pushf
loopw
sub
fisubl
dec
call
lret
pushf
pop
or
jne
jmp
mov
jbe
lahf
push
rol
pushf
pop
dec
dec
test
jmp
je
loope
stos
dec
push
cmp
hlt
cmp
jmp
dec
push
fs
out
imul
xchg
push
dec
cs
cmpb
mov
call
inc
or
mov
dec
das
out
outsl
push
xor
pop
cmpsb
push
sbb
aam
call
inc
dec
dec
mov
xchg
nop
lods
outsb
pop
xchg
cmp
pop
in
nop
sub
sub
enter
jmp
loop
cmp
xchg
pop
adc
sub
mov
jg
xor
xor
into
loopne
int3
aaa
inc
xchg
insb
dec
pusha
lds
and
aam
outsb
add
loop
cmpsl
push
sbb
clc
jmp
xchg
jmp
leave
leave
xor
mov
cs
das
loopne
cmp
mov
ret
push
mov
add
sub
mov
sub
pop
add
mov
stos
dec
push
sub
sti
add
sub
sbb
or
pop
loope
xor
pop
push
mov
call
fstl
add
dec
addr16
lods
fdivs
repnz
mov
xor
sti
iret
or
pop
sbb
xchg
mov
call
inc
in
imul
pop
ds
pop
movd
cli
push
sbb
test
pop
xor
dec
mov
inc
daa
sub
xor
or
into
or
insb
xchg
ret
aad
xor
xchg
insb
inc
inc
stc
dec
les
mov
out
iret
ja
stos
or
lods
ljmp
sub
bound
xchg
push
sub
dec
mov
mov
add
enter
xchg
pop
add
xchg
inc
sub
inc
in
sub
ficompl
test
xchg
sti
ja
call
aad
dec
mov
ljmp
lods
aam
adc
mov
cmp
mov
lods
in
xchg
dec
cmc
sbb
insb
or
sub
movsl
fldcw
ficomps
repnz
xchg
mov
xchg
pop
fstps
xchg
stc
lods
pushf
loop
imul
mov
in
xchg
pop
pop
std
inc
inc
popa
mov
pop
sub
ret
xlat
push
mov
scas
sub
mov
xor
sbb
jne
cld
push
out
stos
cmp
out
xor
outsb
sub
jbe
les
stc
int
out
stos
jmp
lods
movsb
inc
out
fisttpl
into
and
push
or
sub
rcrl
mov
movsl
cmp
pop
aam
stc
lret
jne
pop
out
jb
inc
in
scas
test
std
push
inc
movsl
scas
push
mov
rclb
popa
xor
dec
jmp
movsl
add
push
or
dec
insb
mov
dec
inc
arpl
adc
lods
insb
insl
dec
xchg
imul
mov
mov
and
test
add
dec
loope
xchg
imul
scas
dec
sub
jmp
push
jno
lahf
push
stos
sub
ja
ror
mov
xchg
sub
push
lret
adc
cwtl
xchg
or
mov
lea
sbb
clc
pushf
insb
inc
test
push
pop
fcmove
imul
push
in
movsl
mov
sub
add
test
cmp
xor
int
pop
dec
stos
mov
cmpsb
mov
fldl
int
mov
lods
or
sub
mov
imull
arpl
enter
sub
rcr
sbb
sbb
adc
jbe
stos
pop
add
int
mov
xchg
mov
aad
inc
jae
sub
adc
sub
stos
push
adc
mov
jnp
mov
mov
cmp
repz
test
into
sbbb
push
les
sub
sub
cmpsb
mov
sub
push
aaa
lock
sub
test
ljmp
outsl
adc
rorb
pop
xchg
in
fisubrl
repz
mov
cs
and
shrb
jecxz
dec
push
test
mov
pop
or
mov
dec
out
lods
xchg
mov
pop
aad
mov
xor
xchg
or
loope
and
xlat
cs
je
dec
xor
cs
lds
jl
cs
iret
push
jne
jge
lret
imul
cmc
cs
out
xor
or
fildll
mov
andb
aas
sub
jne
adc
mov
loopne
push
data16
shrb
popf
cmpsb
test
and
aaa
xchg
in
or
pop
cs
dec
cli
or
sub
cltd
cs
dec
push
fdivs
and
cs
pop
jno
test
stos
mov
add
cs
xchg
xchg
or
add
test
jne
iret
or
push
and
mov
lcall
sahf
lret
sub
mov
fistpl
mov
sbbl
inc
std
push
test
or
cs
dec
mov
cs
fmuls
inc
lock
decl
or
push
and
pop
arpl
mov
shrb
or
push
ret
sbb
pusha
xchg
adc
fs
dec
mov
cmp
push
sbb
sbb
xchg
enter
xlat
push
scas
js
jle
adc
sub
cs
mov
fmuls
xchg
dec
push
sub
pop
pop
adcb
cmp
or
dec
jmp
cmp
lahf
test
icebp
imulb
push
out
cmc
pushf
inc
dec
pop
das
cld
shlb
aad
mov
ss
xchg
pop
xchg
ret
mov
aas
sbb
xchg
arpl
xchg
gs
pop
cs
mov
push
aas
mov
jbe
js
mov
shrb
jge
add
cli
jne
loope
adc
fnsave
xchg
cmpsb
xor
cs
dec
fs
or
jmp
loopne
pushf
push
and
inc
mov
rorl
xor
mov
lea
mov
mov
stc
sub
adc
push
dec
ss
xchg
pop
push
xorl
mov
out
add
add
aaa
and
jne,pn
or
repz
cs
movsl
sbb
test
jo
cs
push
outsl
movsb
sbb
roll
jle
js
lods
imul
push
fistpll
in
cs
cmp
fs
ds
sub
xchg
test
fstps
mov
cltd
loope
out
sub
in
xor
adc
sub
shrb
xor
inc
push
push
ljmp
jbe
fwait
pop
stos
and
mov
xchg
loopne
scas
push
mov
add
out
cmp
or
iret
push
out
xchg
lea
sbb
dec
mov
insb
gs
ret
jge
adc
iret
xchg
cs
mov
outsb
xor
xchg
jns,pn
test
sbbb
jmp
add
shrl
leave
jb
imul
icebp
in
data16
out
sbb
dec
pop
sti
mov
sub
pop
decl
mov
call
sub
mov
loopne
stos
cs
out
scas
xchg
bound
nop
jns
cs
push
mov
sbb
jb
dec
sub
fsubrs
aas
ret
mov
dec
jp
or
jg
fistpl
aaa
int3
les
jmp
mov
xchg
inc
jo
push
xchg
xor
adc
clc
lea
cs
cmp
rcrl
imul
jmp
jg
sub
sub
or
xchg
push
dec
xchg
xor
and
mov
push
mov
std
cs
mov
das
mov
jmp
cs
or
lahf
callw
bound
jl
das
outsb
call
dec
test
jg
cltd
mov
sub
cmp
dec
cmpsb
mov
in
decl
add
fcoms
bound
cmp
popa
cmp
cmp
sub
pop
gs
mov
push
repz
iret
popa
inc
enter
cs
mov
mov
sub
adc
jl
jecxz
pop
ds
bound
in
sub
mov
jp
bound
jecxz,pn
ja
lds
xchg
jl
ss
push
cld
mov
fists
shlb
add
lcall
cs
addb
lcall
mov
cltd
rcrb
hlt
out
ss
and
mov
cli
xor
xlat
shll
mov
cs
and
int3
pop
pop
sbb
jnp,pn
mov
dec
and
call
lret
pop
mov
add
loop
cmp
cli
sbb
adc
jne
push
cs
push
inc
sahf
sbb
jns
out
push
sub
test
mov
sub
jecxz
inc
sub
xor
ds
sub
arpl
inc
adc
inc
mov
nop
cmp
movsl
lcall
add
ljmp
cs
aam
push
cs
push
pop
and
pop
cs
das
mov
adc
scas
or
push
leave
std
pusha
mov
xchg
lcall
xchg
jecxz
push
int
aad
cs
mov
cmp
ss
sbb
arpl
fistpl
sub
aaa
push
mov
imulb
jmp
fwait
cmp
adc
mov
dec
pop
pusha
movsl
nop
sub
in
mov
idivb
sub
and
cs
scas
add
aad
pop
orl
lcall
mov
fbld
in
dec
stos
mov
xchg
mov
mov
pop
mov
ja
divl
push
inc
and
shl
es
mov
stc
or
movsb
mov
cs
fdivs
jnp
les
xchg
sbb
adcl
ds
ss
push
insb
cmc
mov
cs
popa
dec
pop
mov
jl
je
pop
in
jo
sbb
stc
das
nop
in
push
cmp
testl
gs
mov
addr16
test
test
sub
cs
or
stos
jp
cmp
das
idivb
jo
cmp
outsl
dec
fsubl
jle
cs
push
inc
fisttpll
pop
mov
leave
gs
xchg
shrb
or
outsl
or
mov
jb
bound
add
lock
aam
std
dec
stos
inc
lret
push
cs
xlat
sub
cs
dec
iret
out
and
xchg
loop
sbb
push
in
sti
loop
sbb
fxch
mov
xchg
xchg
inc
mov
pop
out
fbld
sbb
jecxz
jmp
xchg
insb
or
in
cmp
sbbb
jb
outsb
iret
das
decl
movsb
ljmp
shll
mov
xchg
cmp
in
data16
je
mov
add
sahf
pop
cld
mov
icebp
repnz
inc
add
inc
out
sti
cs
cmpsl
rcr
pop
xor
movb
hlt
sub
pop
cmp
xchg
mov
jo
inc
stos
fwait
rcrb
hlt
sbb
bsr
or
jbe
out
inc
sbb
sbb
shl
sub
mov
ret
cs
sbb
jp
add
push
arpl
ljmp
stos
fsubl
es
cmp
sbb
xchg
cmp
adc
lret
xchg
lea
xor
fs
jge
out
out
mov
jne
and
addl
ljmp
clc
loope
xchg
shrl
int3
add
and
add
pop
push
shl
jg
mov
sub
std
jo
inc
cs
mov
xchg
sbb
or
pop
outsb
push
push
das
rclb
mov
sbb
xchg
ja
leave
fisubl
xor
fsts
out
aaa
clc
sub
ret
aas
adc
cmp
dec
pushf
mov
notl
gs
jmp
push
repz
imul
push
std
pop
test
sarb
push
dec
lods
xor
stos
ds
push
iret
and
lods
dec
data16
cmp
jnp
setb
sbb
push
cmp
je
push
mov
ret
jg
push
jl
add
call
movsb
cmpsl
xor
mov
sarl
xorb
pop
test
jb
mov
xchg
popf
sub
jle
in
lret
inc
insl
not
jbe
pop
dec
push
dec
push
pusha
mov
add
and
cs
and
fiadds
stos
dec
adc
add
mov
push
imul
loop
push
xorb
enter
pop
fisubrs
cs
dec
adc
call
cmp
mov
lods
int3
in
push
jbe,pn
sub
imul
std
cmp
mov
push
mov
rcrl
add
xlat
stos
lcall
fwait
xchg
ljmp
jl
fld
loope
sbb
cld
dec
shrb
sub
and
jb
or
in
push
scas
hlt
mov
imulb
mov
and
jnp
cmpps
and
cs
lds
fldt
push
cmpsl
mov
jle
out
call
into
inc
inc
xchg
mov
fcomp
sbb
fisubl
pop
mov
sub
push
adcb
insb
and
cmp
xchg
gs
sub
sbb
cs
int3
pushf
inc
fidivrl
cs
mov
or
dec
lret
shlb
cmpsb
aaa
sub
clc
mov
sbbl
pop
cs
add
shrb
xchg
cs
mov
xchg
xor
mov
push
dec
jg
ja
outsl
lahf
push
pusha
push
shrb
mov
jnp
in
push
shll
xor
fldl
adc
das
sbb
cltd
sarl
fisubrs
negb
aad
jo
xchg
popa
adc
fnstsw
idivl
cs
in
pop
mov
cs
lds
mov
daa
sub
lods
mov
and
add
in
divb
push
movsl
or
in
or
mov
arpl
adc
or
adc
sub
xor
push
repnz
xchg
js
jle
cs
clc
mov
fidivl
sub
adc
shr
in
cmp
and
add
inc
jmp
sarl
jno
push
outsl
pop
enter
mov
sbb
sub
fistpl
xlat
mov
sub
sbb
mov
add
stc
lcall
scas
loopne
ja
inc
cs
sahf
xchg
sbb
adcb
arpl
inc
xchg
loopne
pop
jno
mov
into
cs
or
dec
xchg
cs
std
cmpsb
iret
bound
mov
jnp
xor
arpl
mov
add
adc
cld
mov
arpl
cs
sahf
mov
or
cs
jae
inc
in
lods
lret
cs
into
popa
aad
dec
out
pop
pop
and
das
push
cs
das
es
test
mov
nop
into
stc
lods
or
out
les
sbb
lea
jmpw
sub
jp
pop
push
cs
stos
stos
or
adc
nopl
jmp
mov
jne
arpl
cs
out
xchg
mov
inc
outsl
bnd
cs
sub
rolb
cs
iret
int
rcll
orl
jge
negb
push
imul
outsl
fidivrs
mov
cs
mov
cld
mov
jno
loopne
shrl
jae
shrb
jb
fimull
ret
mov
leave
lret
or
repz
inc
mov
sub
sub
rcrl
cs
jb
adc
inc
xchg
cs
sbb
mov
call
xor
adc
std
subb
rolb
cltd
es
cs
mov
xor
cs
mov
add
stos
cmp
xchg
mov
sbb
scas
pop
mov
cs
mov
imul
dec
lds
pop
sahf
jl
aaa
ss
cs
jnp
into
add
arpl
mov
sub
xor
das
aas
dec
movsb
mov
fwait
fisubrl
xchg
pop
popf
pop
int
hlt
cs
adc
mov
roll
mov
mov
repnz
cltd
dec
sub
and
dec
push
pop
sub
stos
xor
add
cmp
pop
or
mov
loop
push
sahf
sbb
sub
jne
dec
push
cs
xchg
out
mov
cs
aas
dec
jae
add
cs
adc
sub
xorl
adc
imul
lcall
cmc
call
ljmp
cmp
fst
mov
cmp
cmc
and
pop
sbb
mov
mov
sarb
inc
mov
insb
stos
cs
paddsw
jecxz
pop
cs
sbb
jle
jbe
mov
daa
or
lock
lods
xchg
out
mov
push
push
xchg
ljmp
mov
fadds
fldl
inc
aad
add
cs
loope
es
mov
ljmp
lahf
cmp
pcmpeqd
gs
lods
and
cli
mov
rorl
jno
pop
es
ljmp
dec
js
lods
cs
mov
xor
cs
jmp
xchg
mov
dec
cs
in
add
mov
push
popa
callw
data16
out
fistl
pop
pusha
test
sbb
cmpsl
aam
out
ret
ja
jbe
jbe
das
add
cs
ds
ficoml
mov
hlt
inc
popa
sub
jbe
mov
mov
dec
inc
or
jnp
cmovg
xchg
dec
sub
mov
stos
pop
xor
mov
test
xlat
xchg
test
adc
lock
in
jnp
xor
jl
loop
xchg
mov
outsl
sbb
pusha
rcrl
es
pop
mov
in
lret
jmp
xor
dec
int
push
aad
pop
test
cmp
push
jmp
orl
pop
cs
cltd
adc
popf
lock
cs
mov
dec
inc
pop
insl
movsl
in
jge
mov
dec
sahf
sub
and
jns
fistps
fs
mov
verw
in
cld
stc
add
inc
mov
xchg
cmpsb
in
dec
sub
out
xor
dec
into
push
jno
push
and
ret
mov
stc
push
cs
popf
movsb
mov
pinsrw
push
fidivl
cs
sbb
test
jecxz
cmp
rep
xor
faddl
pop
shll
cmpsl
sahf
pusha
add
mov
xchg
mov
inc
xor
jae
cs
not
stos
insb
add
push
jne
and
dec
inc
test
sub
add
sbbb
aam
add
or
dec
mov
rcll
pushf
leave
imul
subl
or
push
mov
ror
pushl
daa
xor
push
adc
mov
decb
sub
fistpl
repnz
out
push
inc
mov
imul
fbstp
mov
and
adc
mov
andb
push
dec
bound
stc
stos
std
mov
xchg
adcl
sub
sbb
xor
jae
push
and
sub
lahf
les
test
inc
jg
inc
adc
sti
push
leave
xor
or
cmp
aam
sub
xchg
cs
push
sbb
sub
jbe
ds
bound
cmp
lcall
inc
out
mov
sub
mov
rorb
jmp
shr
add
pop
outsb
pop
or
lods
notl
divb
pushf
mov
adc
adc
inc
hlt
loope,pn
xlat
mov
je,pn
ds
imul
leave
lds
pop
and
repnz
cs
into
sub
add
fidivs
push
xchg
sub
fwait
jbe
sub
loop
add
push
xor
push
inc
outsl
leave
mov
pusha
mov
xchg
in
sahf
sarl
inc
cli
sub
sub
sarl
shlb
pop
pop
stos
test
mov
add
stos
sbb
bound
add
arpl
pusha
sti
or
insl
gs
das
lret
push
scas
cs
mov
and
xor
push
ret
and
fmull
mov
lock
in
cs
cli
xchg
out
cs
pushl
popf
mov
mov
fsubl
test
cs
jle
ljmp
outsb
out
out
cs
or
dec
mov
fs
pop
shlb
xchg
sub
mov
dec
mov
hlt
dec
cmc
fimull
push
jl
pop
jo
sbb
sahf
cs
cmc
popa
and
icebp
cmp
jle,pn
mov
push
jb
cmp
pop
mov
fsubr
mov
push
sub
xor
cmp
add
fidivs
mov
or
imul
mov
xchg
out
out
mov
fsubrl
cld
and
iret
aad
jnp
dec
data16
sub
mov
mov
cs
js
lods
loop
adc
pop
and
movsb
cs
inc
xlat
popa
or
inc
mov
in
ds
sub
movsl
sub
mov
imull
mov
loopne
inc
cs
push
imul
xor
clc
das
stos
or
loope,pt
xlat
cs
add
orb
mov
fldt
mov
in
ljmp
in
movsb
sbb
nop
jg
cs
xchg
cmpsl
dec
daa
mov
flds
jae
inc
cs
sbb
aas
je
xchg
fnstenv
mov
in
ds
sbb
jle
jo
shll
push
adc
test
loope
cmpb
pop
cs
sahf
mov
rcl
ss
jmp
sub
fwait
aaa
test
push
cmp
aas
mov
leave
lret
nop
xchg
cltd
mov
int
scas
jmp
inc
mov
js
xlat
ret
sbb
es
and
mov
sub
jae
cmc
add
mov
sub
mov
mov
cs
dec
nop
jno
mov
das
cwtl
ret
sbb
jge
inc
cmp
cs
cmc
mov
pop
xor
xchg
cmp
int
cmp
cmp
fs
pop
mov
fisubs
data16
out
int3
aam
icebp
scas
popa
ja
out
jnp
popf
inc
sub
cli
sti
sbb
lahf
jp
xor
rorl
sahf
test
pop
sub
pop
sbb
pop
push
jo
lea
stc
cmp
nop
mov
and
lock
popf
lahf
sbb
lret
sub
ret
xchg
lods
xor
lods
cs
cmp
and
inc
movsl
fstpl
in
fcompl
xor
sub
xlat
lcall
jno
sub
xor
les
lea
xchg
orb
add
and
or
mov
clc
sbb
mov
outsb
dec
imulb
out
and
cs
mov
jb
test
cmpsb
sbb
inc
xchg
and
xchg
int
mov
movsb
loopne
sub
dec
mov
sbb
outsb
mov
ljmp
push
jbe
inc
leave
sahf
jbe
cmpsb
imul
enter
aaa
fcmovnb
mov
xchg
push
cmp
ljmp
adc
and
cs
xchg
cwtl
loopne
jg
repz
inc
sbb
add
mov
inc
stos
rcl
std
xchg
pop
lea
aad
cmovl
pusha
sbb
cs
adc
outsb
icebp
mov
dec
cmp
sub
mov
push
popf
mov
das
dec
loope
aam
or
je
ds
out
xlat
add
lds
xor
jnp
xchg
push
imul
fdivrp
mov
sti
lock
roll
mov
clc
adc
pop
ljmp
popf
imul
in
push
jmp
lea
roll
das
lret
sbb
sub
push
mov
jp
dec
fdivl
push
cmp
lea
mov
lods
cs
jl
bound
cmp
loopne
jecxz
pop
cs
push
daa
add
push
push
mov
or
js
cld
sbb
in
xchg
addl
mov
jl
addr16
dec
clc
lcall
pop
call
test
call
sub
jne
testl
and
pop
cs
dec
mov
in
scas
push
test
adc
das
movsb
jbe
jge
jle
test
cs
sbb
jne
jbe
cs
pop
insl
ds
push
stc
inc
sbb
enter
mov
xchg
cs
jle
jge
in
sub
sti
subb
ds
mov
mov
sub
push
pusha
subl
cmc
lahf
dec
mov
notb
fldcw
out
sar
cmp
add
cld
push
stc
or
mov
inc
push
mull
js
int3
push
mov
sub
lods
rolb
sub
lret
xchg
mov
mov
bnd
mov
cmp
sub
fidivrs
test
shl
mov
decb
addr16
mov
mov
cmp
rcll
adc
xchg
outsl
xorl
sub
ds
dec
cs
lods
mov
cli
popa
sub
sahf
test
cs
in
shlb
inc
dec
cs
out
stc
mov
sbb
das
xlat
daa
cmpl
bound
xor
arpl
sub
dec
and
xor
int
mov
jo
mov
cs
out
mov
dec
lret
push
sbb
cs
cs
fisubrl
ss
dec
test
jae
mov
lods
inc
cmp
cwtl
pop
pop
mov
test
mov
cld
test
lock
enter
rclb
push
decb
or
adc
and
pop
cs
mov
movsb
mov
pop
add
sub
pop
mov
add
jo
jmp
mul
jg
fstps
fldt
addr16
mov
outsb
jp
ret
xchg
sbb
push
lods
mov
and
movsb
pop
dec
and
ficomps
cmp
sub
pop
xlat
test
mov
jmp
test
push
mov
sub
out
jno
dec
xchg
shrb
ljmp
shll
sti
inc
iret
jg
sarb
nop
push
movsl
and
imul
mov
dec
aas
movsl
stos
clc
in
sub
adc
push
nop
inc
loope
or
out
rorb
sub
sub
xchg
ret
fsubrl
xor
and
inc
mov
int3
dec
clc
mov
jbe
dec
dec
faddl
stos
jne
add
stos
test
mov
in
cmp
adc
mov
mov
scas
cmp
bnd
loope
imul
inc
gs
shrl
pop
insl
dec
and
lock
cs
mov
inc
es
sub
dec
sti
push
insl
xchg
push
fsubrs
or
shl
adc
fs
sbb
gs
call
ja
mov
jne
sarl
jmp
push
push
jb
jae
add
stos
cs
inc
aaa
loop
sub
test
xchg
mov
je
aad
cmp
xchg
mov
repz
scas
pop
mov
repnz
cs
std
mov
jne
rorl
dec
and
mov
pop
mov
mov
jno
add
cltd
scas
outsl
fimuls
push
xchg
fildl
mov
jg,pn
xor
rcrl
xchg
push
jno
mov
mov
popa
push
bound
fcomip
cmpsl
js
popf
fisubs
inc
add
adcb
movsl
adc
das
data16
aam
ljmp
adc
shlb
sbb
sub
inc
cs
and
popa
aam
adc
or
xchg
or
mov
inc
jg
mov
or
add
jne
int3
xchg
xor
fistpll
inc
jne
addr16
jecxz
xchg
adc
lods
xchg
push
xchg
scas
cs
data16
mov
fisttpl
xchg
divb
and
stos
cmc
orl
mov
adc
sub
mov
sub
addr16
ficomps
cmc
shll
ljmp
es
cmp
push
dec
xor
out
and
pop
xlat
movsl
xchg
scas
push
and
push
leave
sarl
test
das
out
jecxz
cmp
sbb
jl
jbe,pn
scas
fsubrl
push
les
movl
addl
fsubrl
mov
cmp
xchg
pop
fistl
cmp
xchg
jno
mov
outsl
stos
lahf
mulb
mov
pop
out
out
mov
mov
mov
cmp
dec
insb
push
in
es
lret
pop
inc
push
fwait
mov
out
or
out
mov
xchg
adc
or
xchg
mov
imul
push
mov
mov
push
sub
rcrb
mov
jnp
xor
lds
adc
into
cld
loop,pn
pop
xor
cs
das
jp
into
cmpl
push
idivl
shlb
popa
repnz
fstpl
pop
add
in
add
mov
stc
mov
ss
mov
xchg
pop
daa
cs
mov
call
test
test
imul
imul
or
mov
aad
xor
xchg
outsl
xchg
and
movsl
out
push
sub
cs
or
addr16
cs
aam
pop
xor
jle
loopne
pop
into
cmp
jo
dec
outsl
and
out
pop
stos
mov
scas
cltd
cs
test
lock
sub
inc
icebp
mov
negl
dec
cs
lods
shlb
and
pop
cs
push
lds
inc
shlb
mov
xchg
cld
test
push
les
mov
sbb
mov
das
fldcw
test
pop
mov
xchg
je
fisttpl
cs
divl
out
mov
or
mov
cmp
ret
ja
xor
and
mov
inc
testb
fsubrs
xchg
and
ldmxcsr
inc
enter
sti
jbe
jne
test
xor
aas
pop
pusha
mov
mov
ret
stos
loope
fildl
sbb
cs
lea
mov
out
fistpll
mov
shrl
jb
add
imul
cld
cmp
data16
movsl
sub
jecxz
and
int
cld
sub
loope
je
pushaw
adc
out
lea
test
fs
pop
leave
fwait
loop
add
pop
sar
mov
xchg
or
cs
clc
das
lds
shll
inc
pop
mov
rclb
cs
jno
js
stos
icebp
xchg
cs
lods
ja
xchg
dec
inc
cs
ficoms
pop
or
and
sbb
push
outsb
pop
xor
mov
cs
inc
push
std
push
stos
leave
sub
push
xchg
sub
shlb
mov
cmpsb
push
rclb
xchg
cs
mov
cltd
bound
pop
cs
cmp
adc
std
loope
sub
loopne
and
dec
je
dec
and
insl
or
xor
iret
jmp
lods
imul
add
xchg
pop
xchg
outsl
lret
sbb
sub
loope
sub
pop
call
push
mov
adc
jbe
cmpl
shrb
arpl
mov
dec
fimuls
inc
jbe
sub
jo
mov
xchg
in
sbb
add
add
dec
adc
cmp
mov
das
push
es
adc
xchg
push
cli
in
dec
jbe
shrb
ja
jne
xlat
test
movsb
je
imul
and
inc
or
jbe,pn
and
or
pop
loop,pn
adc
sbb
and
das
in
mov
scas
cs
pop
jno
cmpl
sbb
cs
pop
cs
sub
xchg
loop,pn
cmp
mov
mov
mov
mov
push
lcall
hlt
cs
scas
jmp
popf
aam
out
cmp
movsb
and
pop
fisttpll
loope
cmp
adc
mov
dec
sub
dec
mov
sub
sbb
insl
push
cs
pop
mov
mov
jmp
mov
out
jae
dec
into
and
adc
cmp
movsl
rclb
es
lahf
sahf
jge,pn
mulb
out
movsb
cs
inc
add
cld
pop
data16
aad
movsl
xlat
dec
push
int3
ss
pop
scas
or
inc
cmpsl
lods
pop
mov
out
sub
xchg
xchg
pushf
cs
testl
cs
test
push
popl
ja
pop
repnz
popa
shrb
dec
jnp
orb
lods
movsl
mov
dec
movsb
dec
or
inc
cs
sbb
ds
inc
inc
push
pop
mov
arpl
aas
imul
cs
jecxz
in
pusha
xor
jbe
movsb
faddl
inc
lods
dec
and
fisubrl
pcmpeqb
in
or
popf
sub
aad
inc
pop
xchg
cs
fbstp
add
push
mov
xchg
xor
shl
cs
lock
lcall
outsl
jp
jl
js
jno
in
push
xorps
repnz
jbe
test
fidivrl
sti
xor
sahf
subl
test
push
jge
cmp
push
pop
sub
cs
sub
inc
inc
cltd
jb
push
dec
jmp
inc
cmp
lahf
fsubrl
adc
and
cs
ficompl
cs
hlt
mov
out
scas
ljmp
xchg
mov
sub
repnz
jge
leave
shrl
sbb
rcrb
mulb
xchg
jge
push
xchg
cs
ljmp
cs
fucom
xor
sub
popa
test
cs
mov
mov
jge
xchg
test
sahf
rcll
icebp
out
adc
cmc
subb
pop
inc
sti
push
push
ljmp
mov
sbb
bound
and
or
cmp
add
out
mov
nop
push
clc
movsl
or
lock
out
push
ret
sbb
jb
sub
or
push
adc
popf
int3
sbb
xchg
movsl
xacquire
ss
dec
xor
xchg
ljmp
xchg
cmp
mov
sti
lea
cmc
out
cs
cmpl
adc
jbe
clc
push
into
arpl
adc
loope
and
sbb
test
test
mov
sbb
fdiv
insb
mov
xchg
arpl
pop
push
loopne
mov
cs
enter
xor
sub
jo
pop
les
jne
jg
push
lods
push
orl
iret
ret
movsb
fld
xor
clc
sub
mov
xlat
cmp
fsubl
mov
xchg
sbb
popf
js
repz
sbbb
dec
push
std
cs
fmuls
shrb
mov
dec
pop
pop
cs
andl
lods
cs
adc
inc
call
sbb
or
sbb
mov
pop
sub
pop
je
in
loopne
cs
and
lds
mov
jl
sbb
push
loop,pn
into
mov
xchg
out
mov
cld
xor
adc
xchg
sub
daa
sub
jmp
xchg
adc
cs
or
cs
repz
bound
hlt
in
add
adc
fstl
cli
lret
cmp
out
or
cs
adc
inc
cs
xor
xorb
cs
mov
mov
xchg
inc
push
cmp
pop
mov
loop
mov
bound
mov
cmp
mov
int3
in
cs
mov
mov
mov
fistpl
pop
xor
add
cmp
fsts
mov
push
adc
adc
popa
orb
sbb
push
xor
in
cmp
and
mov
adc
add
leave
pop
xor
dec
add
xor
push
scas
mov
rcrb
scas
and
lds
mov
dec
mov
pop
cs
mov
and
pusha
sbb
xor
jbe
jne
insl
inc
push
jno
aam
sbb
dec
or
push
lock
xor
mov
fmuls
stos
xor
push
in
sub
push
jge
movsl
pop
inc
sahf
cmp
jbe
dec
das
add
repnz
pushf
dec
test
das
movsl
pxor
call
mov
aad
and
cmp
cs
es
add
pop
push
pushf
cs
mov
push
lods
inc
and
outsl
pop
add
jecxz
adc
adc
les
dec
push
cli
mov
sub
push
xlat
sub
cs
jnp
aas
mov
sbb
loopne
ret
mov
pop
xor
xor
les
or
popa
subl
inc
mov
push
cs
push
mov
sbbl
loopne
mov
add
inc
push
and
fyl2xp1
add
roll
xchg
cmp
cs
daa
fwait
push
in
pop
aas
add
sbb
test
loop,pn
cld
sbb
in
xchg
mov
jg
in
and
inc
cs
jo
mov
outsl
mov
ror
out
cs
xchg
mov
fildl
arpl
cs
in
xor
xlat
add
call
shlb
rcrb
lock
mov
popa
cs
test
jecxz
sbb
test
inc
xchg
xchg
incb
filds
mov
repnz
and
cs
cmp
mov
pop
cs
scas
xlat
ss
jae
sub
int
jb,pn
icebp
add
jl
push
int3
mov
pop
insb
es
cs
jge
xor
add
push
cmpsl
movsb
jne
sti
fildll
xchg
jmp
xor
dec
push
push
ret
cs
jle
sbb
or
mov
mov
jl
out
cs
call
sti
data16
movsl
rclb
mov
sbb
cs
and
out
dec
pop
push
adc
mov
je
cmp
cs
mov
adc
or
cs
jle
push
imul
sub
jp
into
rclb
loop
sbbb
pop
movsl
mov
out
lods
ss
xor
mov
push
aam
das
adc
movaps
fs
and
repnz
imul
pop
mov
fidivl
pop
mov
out
push
dec
cmp
jo
mov
dec
or
test
into
xchg
add
mov
rorl
pop
cs
or
loopne
in
xor
and
in
outsb
cs
push
out
rdmsr
or
push
int3
frstor
cs
mov
cmpsb
dec
in
push
fldcw
fldt
lahf
aaa
mov
sub
dec
cmp
out
orb
in
adc
inc
stos
dec
repz
cmp
bound
cs
shlb
inc
mov
mov
sbb
cmp
insl
mov
int
js
sub
loope
or
pop
cmp
jp
xor
test
lds
sub
inc
xor
push
mov
imulb
cmpsl
xchg
xchg
ficomps
sub
sbb
and
mov
push
divl
data16
mov
popf
lret
hlt
scas
cs
in
loope
jne
and
ret
mov
shl
pop
or
jns
fistpll
aas
scas
cli
mov
popa
stos
bound
cmp
mov
sub
fldt
loop
addr16
sbb
lds
jne,pn
rcl
in
jge
add
jns,pn
js
push
in
das
fiaddl
punpcklwd
pop
mov
fildl
mov
sub
sub
andl
and
adc
sahf
sarl
mov
outsb
addr16
cmpsb
int3
lcall
mov
ljmp
push
aam
ja
and
push
sahf
movsb
cmc
dec
sub
cs
scas
ficomps
movsl
aaa
sbb
scas
int3
lret
push
outsb
inc
mov
xchg
pop
add
nopl
or
sub
and
js
scas
and
dec
cs
fistpll
jno
cwtl
lret
mov
repnz
sub
xor
inc
sub
ljmp
adc
mov
sub
pusha
test
mov
sub
xor
mov
inc
cld
outsb
fucomp
mov
dec
cmpsb
or
push
es
stos
or
mov
pushf
sbb
lods
in
and
pop
or
adc
xchg
outsb
sarb
jmp
and
les
sbb
push
and
jnp
data16
push
or
int
ljmp
sahf
mov
lret
lret
mov
cmpl
jp
sub
lret
xor
or
mov
hlt
cmp
sub
jmp
inc
sub
inc
stc
out
subl
dec
mov
scas
pop
out
arpl
int
jmp
add
add
xchg
inc
mov
add
in
pop
popa
cs
sbbb
test
outsl
or
ror
sub
push
add
jbe
inc
mov
mov
sub
test
or
cs
cmp
orl
cltd
ret
cs
push
mov
mov
mov
call
xchg
out
dec
mov
sub
adc
inc
push
jb
dec
push
add
test
add
push
stos
ds
pop
jb,pn
out
and
shll
inc
mov
insb
into
and
call
jge
movsb
in
ss
call
sbb
xchg
cmp
loope
xor
ds
test
xchg
movsb
sub
mov
pop
mov
fstps
push
shll
mov
and
push
jns
mov
sbbb
stos
pop
mov
data16
pop
stos
push
add
mov
jge
xorb
daa
mov
or
subl
jb
push
leavew
imul
into
jae
xor
daa
adc
add
rolb
and
sbb
push
cmp
adc
stc
lds
fwait
dec
addr16
or
xor
adc
sub
shrl
loop
mov
int3
and
xchg
leave
pop
stos
sub
jb
mov
add
cs
xor
or
ret
loopne
insl
mov
stos
push
popa
jae
inc
push
outsb
xlat
rorl
out
adc
jg
cmp
sub
leave
cs
add
xlat
jmp
aaa
xchg
xor
test
xchg
inc
scas
cmp
fcmovnbe
mov
mov
mov
movsb
cwtl
stos
fildll
repz
pop
mov
jbe
aad
mov
add
cs
imul
and
mov
shll
lods
cmp
mov
xchg
add
or
loope
in
pop
out
sbb
sub
insb
jbe
sub
notl
outsl
fxch
pop
jbe
xchg
cmpsl
pop
mov
lret
xor
repz
sub
cmp
xorb
aas
cmp
jecxz
aaa
call
cmp
hlt
mov
sbb
in
mov
xchg
inc
sub
cs
cmp
sub
int
dec
loop
and
mov
subl
and
bswap
inc
sbb
and
dec
xchg
adc
outsb
or
lods
cs
mov
subb
jne
fnstenv
jge
mov
jns
sahf
cs
lret
into
mov
pusha
shlb
cs
pop
sub
push
lods
sbb
sub
mov
adc
sarl
mov
mov
test
cmc
mov
dec
ljmp
mov
adc
dec
sbb
sub
and
xor
mov
addb
aad
clc
mov
out
push
ss
pop
sbb
mov
cmpsl
jmp
insl
es
cs
jle
pop
push
in
push
addr16
and
daa
sub
lahf
or
mov
je,pn
cmp
jbe
xchg
mov
pop
jae,pn
sbb
pushw
pusha
jmp
jnp
push
pusha
sub
cmp
xor
inc
cwtl
sarl
cld
xchg
sbb
cmp
dec
lret
and
cs
pop
mov
inc
and
roll
push
mov
inc
mov
repnz
fisttpl
ljmp
push
rdpmc
shlb
imul
loope
cld
mov
adc
push
xchg
dec
dec
int
je
pushf
mov
jbe
mov
xor
repnz
ficoms
fldcw
mov
sub
sti
clc
ds
and
mov
enter
or
jge
jle
adc
inc
lds
sub
mov
mov
push
lds
divl
xchg
aas
sbb
nop
inc
bound
lds
in
std
dec
rorb
fwait
lea
lds
movsl
jmp
loope
cmpsb
fidivrl
out
insb
les
flds
addl
inc
lea
pop
int
test
pop
jecxz
sbb
ljmp
popf
test
mov
cs
push
cmp
fs
sub
mov
dec
pushf
arpl
xlat
pop
data16
or
mov
sbb
insb
cli
out
in
gs
mov
xchg
sub
jp
das
cmc
aad
and
cs
addr16
out
into
test
mov
popf
mov
pusha
sti
test
cs
data16
aas
ss
out
cli
jbe
clc
mov
add
lods
dec
data16
movsl
lods
mov
mov
dec
push
fwait
push
and
cmp
dec
push
rorb
and
xor
xchg
push
loope
icebp
push
jns
nop
push
loopne
sub
js
push
pop
push
addr16
ja
jle
in
sbb
adc
or
inc
push
cmp
xor
insl
push
push
push
push
push
and
popf
mov
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
xor
mov
insl
and
addr16
sub
xchg
or
jb
ds
cmpsl
sbb
jae
lret
cmpsb
mov
adc
and
es
xchg
scas
es
out
xchg
cli
lods
ljmp
adc
cmpl
cmp
jmp
loop
cmp
cmp
test
jge
cld
repz
cmp
cmp
inc
xor
hlt
jns
inc
in
xchg
mov
sub
ret
inc
sbb
cmp
cmp
push
and
shl
sub
dec
das
dec
cmp
jb
jno
cmp
aad
xor
xorps
cmp
outsl
cmp
addr16
sahf
push
outsb
and
in
mov
ret
or
inc
loope
fsubr
cmp
cmp
outsl
cmp
cmp
cmp
das
aam
dec
lret
lea
in
cmp
mov
int3
push
in
push
or
sub
out
insb
mov
stos
es
es
or
dec
push
imul
push
stos
push
lret
cmp
mov
test
cmp
cmp
cmp
imul
enter
or
sub
dec
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmp
cmp
or
repnz
nop
jae
jb
sub
and
sbb
movsb
lret
pop
ljmp
lea
cmp
jbe
or
gs
scas
cmpsl
push
fistps
mov
add
cs
dec
and
adc
dec
cmp
push
sar
push
pop
xlat
push
scas
and
dec
dec
outsl
decb
sbb
adc
or
or
mov
dec
ljmp
add
lahf
push
fdivrl
dec
lock
xchg
sbb
shll
fidivl
push
loope
pop
js
dec
sub
scas
push
lods
push
dec
push
scas
xchg
sahf
out
out
push
pop
and
jbe
lea
imul
xor
xor
xor
mov
xor
mov
cmpsl
fbstp
jg
xchg
iret
sub
add
in
outsl
inc
sbb
cmpsb
cld
out
es
int3
dec
cmp
push
push
imul
push
dec
push
mov
cmp
jno
clc
fdivs
xor
xor
xor
xor
xor
xor
xor
mov
inc
mov
push
xlat
sbb
dec
xor
mov
loope
stc
ja
ja
ja
ja
dec
push
fstps
mull
pop
push
push
sbb
fidivrl
ljmp
dec
cmp
cmp
cmp
cmp
or
sbb
dec
roll
jns
mov
cmpsl
jmp
std
cld
insl
cmpsl
or
shlb
andb
hlt
xorb
add
in
or
cld
mov
jl
xchg
mov
mov
mov
mov
mov
mov
push
adc
leave
push
inc
rol
push
or
das
std
cmp
xchg
scas
mov
imul
adc
je
repz
stos
jmp
lods
insb
pop
dec
mov
xchg
movsl
in
dec
pop
mov
add
cmc
and
pop
sbb
adc
or
jge
lods
xor
pushf
inc
inc
inc
push
jmp
or
mov
movsl
jnp
dec
dec
xlat
sbb
pop
movsb
mov
daa
push
das
in
fidivrl
mov
sbbb
cmp
pop
cmp
cmp
inc
insb
inc
lret
cmp
cmp
inc
jb
xor
jne
je
jae
jb
jno
jo
ja
xchg
imul
and
out
daa
mov
scas
bound
inc
lret
fmuls
test
lret
jge
xchg
dec
mov
xor
xor
ret
cmp
add
shlb
xchg
lret
hlt
sarl
mov
dec
enter
or
lods
sub
push
push
iret
push
out
push
femms
das
push
dec
push
outsl
push
mov
scas
push
into
push
out
push
push
inc
mov
push
jne
je
jae
jb
jno
jo
ja
ja
ja
ja
ja
ja
ja
xchg
sub
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
mov
outsb
jb
jae
jb
jno
jo
ja
ja
ja
ja
ja
ja
ja
ja
xchg
jb
dec
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
and
lahf
fs
push
xor
push
jmp
inc
xor
xor
xor
dec
sbbb
dec
in
sarl
mov
cmpsb
mov
cmpb
call
addr16
cmpsb
fildll
jmp
fnsave
pop
mov
mov
mov
mov
xchg
jns
cltd
add
push
cmp
sahf
or
inc
stos
scas
int3
insb
movsb
adc
ret
push
push
inc
jmp
push
xor
xor
xor
xor
xor
xor
xor
xor
xchg
mov
sub
and
fisubl
cltd
sbb
insb
jp
ljmp
sub
or
fwait
arpl
iret
cmp
cmp
cmp
test
lret
shr
ljmp
cmp
or
inc
lea
cmp
cmp
sub
xor
xor
xor
xor
cmc
dec
stos
and
mov
mov
pop
cmp
xchg
xor
xor
jb
xor
jne
je
jae
jb
jno
jo
mov
push
mov
cmpb
cmc
pop
pusha
fstl
fisubrs
xchg
mov
fldenv
lret
shlb
mov
cmp
and
daa
loopne
or
ds
sbb
or
cmp
jp
sub
push
mov
pop
int3
push
add
mov
cmpsl
mov
xor
xor
xor
xor
xor
mov
and
mov
mov
bound
pop
pop
loope
lods
test
dec
mov
lods
aam
test
mov
mov
popa
or
xor
outsl
fnsave
jb
scas
xlat
pop
ja
pusha
cmp
daa
out
in
imul
arpl
push
xor
xor
jne
jbe
jb
out
arpl
cmpsl
or
iret
daa
ss
sti
cld
fisubl
pop
cli
into
int
hlt
pop
inc
lret
ljmp
xor
pop
jbe
les
mov
cltd
movsb
test
sub
and
cmpsl
sbb
insb
push
mov
aas
mov
jle
jg
mov
scas
and
fnstenv
add
or
sub
js
addr16
ja
scas
push
scas
popf
cld
lods
dec
or
or
xor
jae
mov
shlb
xor
rclb
das
push
in
jl
stos
outsl
push
test
cmp
cmp
and
sbb
adc
mov
mov
lcall
fisttpl
sub
mov
mov
mov
mov
xchg
shlb
fisttps
cmp
cmp
or
pop
inc
jne
fcoml
pop
pop
je
stos
pop
int3
sub
push
add
adc
lock
xlat
push
xor
push
pop
mov
das
jg
into
push
scas
pop
or
sbb
cli
cmc
ljmp
es
dec
sub
push
ret
push
cmp
mov
push
xor
js
or
dec
test
popa
inc
push
lret
jmp
adc
push
sub
pop
mov
out
es
dec
cld
das
push
es
ror
loop
jns
and
mov
mov
leave
push
pop
fstpl
xor
jg
lret
or
cmp
mov
cmp
nop
cld
add
hlt
mov
fs
in
mov
daa
lret
sbb
lret
testb
inc
inc
icebp
and
cmp
lcall
test
enter
jne
les
cmp
push
jb
in
arpl
jl
inc
sbb
mov
mov
xchg
aad
insl
add
insl
jle
and
xor
xor
mov
xor
stc
pop
mov
xchg
ja
jg
inc
mov
push
sub
ds
les
stos
dec
cmp
cmpsl
ficompl
subb
pop
dec
inc
in
sub
int3
jnp
xchg
cmpsb
gs
sbb
lret
cli
ljmp
jp
cmpsl
sbb
popf
pop
out
imul
cmp
jp
adc
jbe
or
inc
or
dec
add
or
inc
add
arpl
cmp
cmp
xor
add
push
aas
test
aaa
cmpsl
mov
std
or
pop
mov
ljmp
add
jmp
int
out
in
pinsrw
pop
or
jge
xor
outsb
int3
fnsave
je
jae
jb
jno
jo
ja
ja
das
fildl
mov
dec
daa
adc
cmpsb
push
scas
dec
hlt
ficompl
ljmp
inc
jae
icebp
mov
push
push
data16
rcll
mov
mov
push
test
or
jae
inc
sbb
and
outsl
mov
push
cltd
insl
pop
cmp
jb
cmp
mov
xor
jne
je
jae
jb
jno
dec
loopne
dec
aas
loopne
int
sub
or
adc
sarl
cmpl
fnstenv
pop
sub
out
mov
sub
lret
mov
movsl
push
jno
sbb
out
push
xor
sub
sub
aam
cmp
aad
push
test
out
int3
pop
icebp
xchg
pusha
pop
clc
das
jp
ficoml
sbb
mov
xor
cmpsb
xchg
out
es
outsb
hlt
fidivrl
ljmp
and
sbb
adc
or
inc
mov
xor
jge
dec
fldcw
stc
sub
sbb
mov
lea
push
call
arpl
or
enter
xchg
test
jb
mov
inc
push
sub
sti
or
gs
in
pop
mov
xor
cmp
stos
test
lahf
or
inc
cmp
out
pop
push
stos
fisubrs
ds
insl
push
cs
or
lcall
cmp
inc
inc
dec
xor
or
les
dec
xlat
push
aaa
fiadds
lret
sbb
dec
mov
pushf
mov
jo
hlt
aaa
in
sahf
fisttps
inc
cmp
sti
cmp
mov
mov
sbb
stc
cmp
mov
dec
push
fstps
out
push
cmp
movsl
call
decb
xchg
or
inc
sti
cmp
xor
xor
test
and
jns
and
dec
in
insl
lods
out
dec
dec
dec
scas
in
fldcw
cmp
fwait
or
stos
leave
or
imul
in
rcl
pop
and
sbb
jne
push
or
inc
xor
data16
sbb
mov
sbb
in
scas
mov
sub
inc
push
dec
push
imul
enter
or
sub
int
in
cmp
xor
stos
jne
je
jae
scas
add
sub
mov
and
or
mov
cmpsl
mul
mov
cmp
or
aad
push
stos
mov
scas
sbb
xor
sbb
adc
or
inc
out
push
insl
pop
dec
sub
lods
mov
sbb
fisubl
out
mov
or
in
or
ror
push
lahf
rcr
dec
sub
das
test
cmp
fld1
lret
pop
dec
pop
inc
sub
imul
pushf
aam
mov
or
xchg
dec
inc
xlat
lcall
mov
pop
adc
inc
or
adc
or
mov
xor
pop
inc
and
sub
dec
repz
jno
call
fs
push
dec
std
and
dec
cltd
or
jmp
mov
int
stos
dec
cmp
enter
inc
les
fsts
test
sub
je
fisubrl
lret
ljmp
test
sbb
mov
push
push
lds
add
push
fsts
stos
dec
mov
adc
mov
aad
testb
int
jne
out
lret
xchg
ljmp
inc
cmp
or
ja
ja
ja
ja
dec
mov
mov
add
leave
out
into
push
stc
out
inc
dec
fldl
sub
cli
outsl
or
dec
cmp
loop
pop
decl
and
pop
cs
inc
lea
cvtpi2ps
or
outsl
scas
sub
sub
call
sub
and
jge
push
inc
dec
in
dec
mov
sub
test
fisubrs
mov
scas
ds
pop
and
jle
popf
adc
or
inc
std
jne
mov
test
xlat
lret
call
test
and
fnstcw
cmp
aad
mov
ss
xchg
fsubs
mov
movsl
insl
arpl
inc
stos
sub
push
in
in
fcompl
incl
stc
or
mov
add
fisttpl
cld
sbb
dec
scas
and
sbb
mov
add
fwait
sbb
adc
fstps
cli
mov
movsb
xchg
sub
lret
pop
jb
inc
mov
je
sub
jge
push
dec
fiadds
push
mov
dec
adc
lahf
insb
stos
dec
lret
loope
jg
out
test
stos
cmc
mov
pop
in
fmull
incb
or
mov
pop
inc
cmp
icebp
dec
push
or
xchg
cld
push
dec
mov
sbb
cmp
loopne
lods
push
jg
mov
scas
fwait
and
stos
sbb
dec
adc
out
iret
xor
clc
iret
dec
jp
dec
imul
pop
in
fcmovbe
xchg
frstor
outsl
cmp
jp
push
in
jmp
movsl
push
in
jmp
cli
jo
fnsave
cmp
dec
push
ret
push
das
int3
and
call
das
popf
dec
mov
mov
add
hlt
fs
into
ljmp
sbb
adc
movsl
popf
and
stos
cwtl
ret
je
adc
mov
dec
mov
adc
cmp
xor
cmpsl
add
push
xor
insl
mov
push
int3
mov
push
daa
xor
fwait
cmpsb
mov
rorb
adc
xor
dec
mov
int
movsl
cmp
or
or
sub
dec
int
test
pop
jo
hlt
bound
je
jae
jb
jno
xorb
in
jbe
xchg
sahf
or
dec
dec
int
call
sbb
push
cmpb
mov
or
jge
xchg
sbb
std
scas
pop
xchg
xchg
or
scas
out
cs
fmull
mov
ljmp
hlt
jne
fisubrl
xor
fldenv
fwait
sub
outsl
push
pop
lret
push
mov
or
sbb
andl
outsl
test
stos
fsubs
mov
inc
fidivl
xchg
movsl
jecxz
std
xor
xor
xor
xor
xor
xor
xor
xor
test
addr16
shlb
sbb
mov
mov
cmpsl
scas
popa
fimuls
xchg
cmpsl
push
out
pop
fs
les
test
and
cld
es
bound
icebp
es
es
in
xor
xor
xor
mov
icebp
mov
ficompl
xor
scas
adc
test
mov
and
push
stos
ret
fidivrs
sti
scas
xor
dec
jno
mov
jmp
das
es
es
push
orb
out
popf
lods
or
mov
mov
mov
mov
mov
cmp
orl
xor
xor
xor
xor
xor
xor
xor
mov
mov
cmp
cmp
cmp
frstor
xchg
mov
movsl
aam
pop
je
jecxz
mov
popa
ficoms
cmpsl
ljmp
adc
ljmp
daa
xchg
jno
fs
fwait
mov
sti
xchg
fimull
fidivrl
mov
jge
pop
jo
ja
ja
ja
dec
loopne
fdivl
xor
mov
aam
sub
sti
sbb
in
pop
fstpl
movsl
sub
ljmp
popa
lea
lds
stos
dec
jmp
scas
imul
fwait
add
jno
sub
adc
fdivrs
mov
add
loope
mov
sbb
xor
jl
push
pop
push
jp
test
sbb
aaa
mov
test
das
pop
fidivs
in
out
out
jb
ficoml
cmp
inc
scas
in
in
push
fsubrl
imul
pop
mov
add
jbe
mov
scas
dec
cmc
cltd
dec
sub
test
jmp
xchg
mov
jne
or
leave
mov
pop
dec
out
std
icebp
lods
push
mov
ljmp
call
aas
push
in
add
sarb
sub
sbb
pop
cmp
lods
cmp
jmp
movsb
aam
fsubrs
jne
je
dec
dec
push
mov
jno
out
daa
bound
repnz
test
mov
or
sbb
outsl
mov
cmp
iret
dec
lods
sbb
fcomip
and
inc
sbb
adc
movsb
fsubrp
lods
sub
insl
pop
lods
pop
lret
sub
mov
aad
push
cltd
insl
or
push
test
cmpsl
into
mov
int3
stos
dec
iret
and
jmp
push
imul
imul
cmpsl
and
cmp
das
std
hlt
jecxz
fldcw
or
mov
mov
xlat
push
out
jl
add
or
dec
xor
fs
ret
mov
dec
jge
test
add
aaa
outsl
sahf
mov
imul
push
xor
xchg
fstps
stos
mov
xchg
das
js
stc
lcall
dec
sti
out
pop
dec
jae
dec
enter
pop
jge
stos
icebp
clc
xchg
sbb
pop
lret
jns
dec
sub
mov
sbb
inc
jbe
xor
xchg
insl
lret
insl
pop
cmp
fcmove
sub
or
inc
outsl
mov
imul
das
test
pop
mov
sub
cmp
daa
dec
insl
dec
sub
in
in
pop
cmp
ror
outsl
inc
xor
ret
mov
sub
and
dec
les
push
mov
xor
xor
mov
cs
jecxz
jns
pushf
jp
stos
inc
and
mov
xor
or
jge
cwtl
rcll
cmp
cmpsl
fs
mov
dec
cld
and
mov
scas
test
lds
and
push
sbb
xchg
lret
incb
add
pusha
adc
or
gs
out
mov
mov
sub
outsb
dec
data16
lods
jb
mov
rcll
mov
xchg
xlat
dec
mov
aad
scas
cwtl
inc
push
mov
or
pop
dec
cmp
imul
mov
inc
pop
add
bound
outsl
add
cltd
fnstsw
xor
adc
pop
adc
push
pop
leave
mov
inc
push
cmp
fmulp
scas
push
bound
xor
mov
decb
inc
jecxz
dec
cmp
sub
data16
out
daa
jecxz
adc
psubsb
xchg
jne
lods
hlt
push
cmpsl
fwait
out
daa
adc
cmpsb
mov
ds
xor
xor
add
rep
push
fwait
add
mov
nop
fdivrp
lret
sbb
iret
popa
jmp
push
fistpl
out
cmp
mov
lret
jbe,pt
sbb
dec
push
imul
mov
cmc
mov
dec
fwait
repz
jmp
push
bound
fsubr
decl
call
cmp
fidivl
inc
xor
aas
xor
ret
push
jmp
push
push
decl
jecxz
xchg
enter
push
fdivrp
xlat
push
pop
add
sbb
scas
dec
call
fnstenv
jae
ficompl
xchg
popf
pusha
addr16
es
xchg
mov
push
movsl
fcoml
fsin
sub
int3
arpl
sbb
xchg
call
stc
in
or
inc
add
ret
imulb
icebp
xchg
sub
imul
or
addr16
test
mov
repz
mov
iret
xchg
stos
adc
arpl
daa
cltd
popa
iret
std
fstpl
int
ds
adcb
sub
movsb
dec
add
psubsb
cmp
xchg
dec
scas
call
loop
add
stos
les
pop
xchg
adc
scas
into
xchg
iret
push
jle
push
outsl
xlat
mov
push
negb
sub
mov
test
enter
in
fcomps
mov
in
jle
push
dec
pop
mov
push
or
jl
dec
lods
iret
sub
dec
ja
xchg
cmp
push
push
pop
dec
fldcw
pop
cmp
in
popa
jmp
cmp
in
cmc
mov
sbbl
lret
stos
xor
insb
jmp
or
mov
xor
xor
xor
xor
jge
fdiv
push
pop
push
leave
push
jmp
xor
pop
test
dec
test
cwtl
dec
imul
push
out
jns
fimull
outsb
cmp
lods
or
les
leave
lods
es
push
bound
and
iret
rorb
and
jmp
or
mov
stos
es
mov
stc
enter
inc
jle
into
insb
cmp
add
mov
or
pusha
aas
push
xchg
insl
call
push
push
in
fxch
cmp
ljmp
std
je
dec
into
outsl
cs
xchg
call
xor
fldcw
push
jmp
std
dec
mov
dec
bsr
lea
dec
sbb
push
imul
pop
or
inc
cmp
mov
test
scas
push
scas
push
lods
and
lods
jne
arpl
pop
cmp
xor
ljmp
mov
sub
mov
outsb
outsl
lea
in
scas
insl
sub
xor
cmp
cmp
sub
push
push
cmp
stos
sti
cld
aad
mov
cmp
mov
lret
or
sub
dec
push
mov
test
pop
stos
sub
jle
mov
xlat
cmp
mov
ds
scas
fs
cmp
jne
imul
jo
les
sub
dec
es
in
lods
decb
dec
mov
jp
dec
cmp
cld
or
imul
or
stc
mov
mov
stc
jne
sub
scas
xor
iret
lret
call
mov
xchg
dec
iret
sub
int
jmp
push
mov
lret
dec
sbb
cli
mov
mov
dec
dec
jnp
fstps
mov
dec
fsincos
mov
mov
dec
movsb
stos
mov
insb
cmp
jno
jo
dec
push
out
push
femms
das
icebp
jbe
outsl
dec
mov
call
out
jne
mov
adc
js
int
std
or
dec
insl
call
or
xor
das
lret
push
jmp
insl
push
std
imul
mov
or
ret
mov
xor
jne
jb
sub
add
or
lock
clc
dec
mov
mov
imul
movsb
add
leave
std
sbb
loopne
sub
jne
ret
or
xchg
insb
push
scas
pop
sub
icebp
xchg
jnp
movsl
sbb
xchg
sbb
sub
xchg
adc
icebp
data16
test
lcall
mov
sti
push
cmp
test
sbb
dec
inc
cld
push
stc
outsb
jmp
add
jne
daa
test
outsl
int3
jne
cmpb
or
xor
sub
loopne
roll
jbe
in
and
mov
jecxz
fidivrl
mov
jbe
sbb
gs
or
ljmp
sub
mov
mov
or
rcrl
fisubrs
cld
arpl
cmp
fnstenv
cmp
xchg
mov
mov
int3
scas
pop
cmp
jbe
add
or
and
cmp
test
sbb
xor
or
pop
jmp
fwait
shrl
fistl
inc
popf
mov
dec
sub
sbb
aam
push
add
push
in
pop
sub
adc
push
add
hlt
cmp
push
lret
stos
in
xchg
test
jge
or
jmp
pop
xor
mov
adc
or
scas
jle
outsl
mov
sub
mov
lods
push
pop
pop
or
lahf
lods
scas
or
pop
pop
cmp
jnp
add
sbb
mov
fcoml
cmp
lea
cld
iret
aad
mov
cmpsb
scas
jnp
pop
out
cmp
push
sub
fdiv
hlt
cltd
or
movsl
and
fidivl
xor
insl
xor
dec
cmp
lods
fidivrl
adc
int3
sbb
pusha
or
or
insl
imul
aad
and
or
fwait
scas
sub
clc
fisttps
fnstsw
insb
mov
popf
sub
jge
test
xor
xlat
fstps
dec
sub
mov
xor
pushf
pushf
jl
mov
test
fldt
fcoml
jle
les
aad
jmp
lcall
dec
mov
aam
or
jge
dec
mov
dec
pusha
mov
in
sub
in
add
scas
mov
sbb
inc
icebp
pop
stos
xchg
fwait
mov
and
ret
jbe
int3
add
mov
cmp
push
sti
inc
fcomps
lret
and
pop
ret
cmp
fsubrl
sub
lcall
pop
sub
and
mov
out
or
into
sub
mov
sti
hlt
std
sbb
stos
sub
or
imul
mov
mov
mov
xor
push
movw
clc
mov
pushf
bt
xchg
shrd
stc
dec
cmc
push
movzbl
push
shl
jae
mov
lea
shl
clc
mov
sar
mov
add
sar
rcl
sub
xchg
xchg
setl
lods
jmp
push
call
outsb
xor
mov
incl
pushf
lea
js
pushf
lea
jne
pusha
pusha
pushf
pushl
pushl
ret
call
call
add
pusha
clc
cmp
jmp
inc
xchg
mov
xor
sbbl
sub
and
lds
rclb
pop
jo
push
mov
lds
mov
dec
movd
push
loope
mulb
inc
lea
dec
jg
mov
loope
adc
ficomps
push
fstp
mull
inc
cmp
mov
jne
jbe
adc
mov
and
adc
nop
cmc
jb
jns
adc
sub
int
jo
and
test
shr
stos
xor
fcoml
or
rcrb
mov
lods
jae
push
mov
sbb
ja
cmpsl
icebp
gs
mulb
movsb
cmp
jae
rorb
or
arpl
cmp
loop
mov
gs
jecxz
clc
xchg
out
out
cmpsb
lods
or
mov
xlat
out
cmp
mov
xchg
mov
jae
cld
sub
add
arpl
rol
and
sub
popl
cmp
jns
inc
iret
inc
fldt
cmp
mov
sbbl
les
subb
rorl
cs
ror
jmp
pushf
mov
call
mov
or
mov
pushf
cmp
call
mov
pushf
call
add
inc
gs
gs
inc
inc
add
mov
pusha
mov
pushf
mov
pushl
pushl
ret
push
call
inc
rcl
add
and
test
fs
ja
pusha
lea
jb
cmp
cmpb
jmp
pusha
lea
je
push
mov
mov
movzbw
lea
pusha
xchg
pusha
movzbw
pushf
call
bt
cmp
clc
cmc
or
pusha
pushf
movb
lea
je
jmp
push
call
fld
push
mov
lea
je
xor
mov
sub
mov
test
cmp
sub
clc
call
jmp
test
jecxz
xchg
push
inc
push
sahf
xor
jnp
fwait
jg
addr16
mov
mov
xchg
xchg
int
mov
andl
fisttpll
sahf
bound
adc
je
cs
repnz
test
insl
xchg
cmc
std
imull
out
jmp
shr
mov
push
mov
call
movsb
xchg
mov
and
sbb
push
mov
add
push
mov
or
lea
ja
push
mov
clc
imul
pusha
add
movw
push
lea
jmp
jmp
push
dec
dec
dec
dec
inc
push
cs
insb
add
add
je
outsb
fs
inc
imul
mov
and
mov
add
push
cmpl
xchg
scas
jmp
lods
out
mov
xchg
xchg
test
jle
aam
negb
sbb
add
xchg
sub
pop
mov
cmp
iret
fcoml
pop
in
inc
push
insb
add
fsubrl
pop
shld
bsr
mov
cmp
cmc
cmc
and
bt
cmc
call
inc
call
jmp
pushf
andb
in
sbb
cwtl
out
mov
jecxz
jle
push
push
ret
pop
xchg
adc
roll
ss
jp
add
xchg
test
into
xor
adcl
ficoms
mov
stos
aas
inc
push
adc
mov
inc
fcoml
mov
insb
mov
jns
add
std
mov
cld
call
pushl
popl
pusha
pushl
pushf
pushl
ret
push
call
xor
je
inc
outsl
outsb
jae
insb
gs
add
pusha
and
xor
mov
mov
cmp
fcoml
es
lret
fstpl
add
ficoml
pop
in
dec
mov
aaa
ja
pop
out
rcll
xchg
mov
aaa
pop
jmp
mov
mov
in
push
sub
imul
add
cmc
cmp
inc
lret
icebp
repnz
fwait
popa
mov
cld
jne
scas
cmp
shl
fldenv
fdivrp
stos
sbb
dec
push
or
arpl
dec
out
add
jbe
mov
jecxz
repz
fldcw
lods
add
add
addl
stc
loopne
rcrl
lods
inc
out
push
push
lock
inc
pop
movsl
dec
jmp
cmpsb
aad
mov
inc
add
jg
xchg
ljmp
xor
pop
sbb
mov
cmp
repz
test
jg
int
mov
fcompl
sub
xchg
jnp
mov
lret
pop
mov
fldenv
push
push
fnstenv
int
inc
add
dec
aam
add
sub
adc
sahf
push
sub
mov
mov
fwait
push
jnp
cli
adc
sbb
cs
sbb
aas
shr
outsb
dec
jg
fidivl
movsb
in
fwait
xchg
jmp
dec
fcompl
push
push
call
scas
mov
push
out
mov
sub
ds
xchg
and
loop
icebp
xchg
cs
sub
lahf
jle
js
inc
cmp
jmp
push
ret
pop
fdivl
lds
cmp
aas
shll
pop
lret
leave
nop
std
or
dec
cmp
dec
fsubs
cwtl
cltd
pop
add
mov
or
pop
pop
xchg
push
lock
les
mov
sbb
push
int
sbb
xor
and
in
add
and
inc
lds
xchg
adc
and
arpl
mov
add
pop
push
push
ret
push
pop
not
pop
inc
movl
repnz
daa
and
andb
test
insb
loopne
sbb
jne
aaa
es
js
lods
jne
jbe
imul
mov
cmc
test
lahf
add
push
mov
pop
pusha
out
push
call
call
and
add
pop
adc
mov
jmp
pushf
pusha
lea
call
pusha
pushf
call
pushf
cmc
stc
xor
lea
call
add
dec
gs
jo
insb
insb
outsl
arpl
lea
push
call
mov
mov
inc
xchg
loop
sub
pop
or
mov
push
lret
add
out
fcmovu
iret
xchg
mov
mov
pop
jb
jmp
dec
mov
xchg
loope
jo
xchg
lret
xor
fidivrl
clc
jb
rcrb
cmp
jb
jae
bound
cwtl
add
jp
ret
push
jbe
rcrb
push
xor
jl
mov
testb
mov
pop
push
ret
out
dec
test
into
xchg
pushf
and
xor
or
cs
pop
mov
pushf
xchg
add
pop
mov
xchg
push
shrl
mov
lock
les
pop
std
jbe
xor
dec
jns
pusha
and
xor
leave
jne
stos
imul
push
adc
mov
stc
cmp
repz
sub
mov
xor
scas
insb
imul
sbb
push
dec
je
shll
xchg
incl
je
jp
aam
inc
aad
fcompl
add
cmc
test
mov
sar
btr
neg
mov
stc
test
push
cmp
movw
mov
lea
ja
jmp
lahf
movl
lea
movsbw
movsbw
lea
pushf
push
call
pushf
call
mov
insl
add
imul
cltd
adc
lea
movsl
dec
enter
sbb
daa
fldt
fists
aas
xor
jmp
ljmp
enter
jge
fwait
subl
xchg
fwait
jl
dec
mov
mov
int
imul
push
bound
sbb
lods
and
or
dec
cmpsb
movsl
mov
add
bound
cli
pop
dec
rcrb
sub
gs
sub
mov
jo
rol
xor
add
sbb
aaa
push
and
cwtl
fcomi
std
cmp
fcmovb
pop
fcompl
in
aas
sub
xor
mov
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
loopne
pushf
lea
je
call
push
call
jecxz
inc
cmc
and
cmc
push
push
add
pushf
movb
lea
jmp
pushf
lea
jne
push
movb
pusha
pushf
pushl
ret
stc
bt
sub
movb
jmp
movb
call
lcall
lds
leave
mov
mov
cltd
pop
push
sbb
neg
dec
in
dec
lock
ss
es
rcrb
sub
popa
inc
cld
add
jle
cltd
xor
jno
mov
fcompl
lods
stos
dec
adc
xchg
or
fadds
daa
mov
or
add
xchg
mov
test
sub
or
push
shlb
xchg
mov
scas
mov
xor
fcompl
insb
add
xor
movb
pushl
ret
mov
lea
jae
clc
pusha
bt
xor
push
pusha
lea
call
call
add
xchg
mov
in
ss
push
mov
lods
popa
sub
stos
and
aam
mov
stos
push
lds
jecxz
in
dec
daa
int3
hlt
sub
push
dec
jl
in
xchg
stos
dec
sti
dec
stos
dec
push
xchg
cld
add
ljmp
lods
lret
ret
out
outsb
scas
sub
push
lahf
int3
lret
adc
imul
mov
data16
sub
rolb
lods
dec
popa
nop
call
and
orb
push
push
int
inc
jl
in
mov
dec
adc
push
mov
lods
sbb
xor
dec
mov
lret
push
mov
sub
int
sarl
fwait
pop
pushf
cmp
scas
xchg
jbe
mov
add
ss
scas
inc
ret
sbb
outsb
sub
lcall
sbb
ljmp
sbb
cmp
sbb
cwtl
xchg
outsl
mov
sub
sub
cmpsb
xchg
mov
lods
jmp
stos
xchg
scas
in
subb
lea
outsl
cmpl
js
mov
xlat
outsb
outsb
dec
mov
int3
sti
sub
push
les
sbb
or
xchg
cmc
push
cli
cmp
dec
xchg
inc
push
dec
dec
out
mov
xor
mov
cwtl
pop
mov
sbb
pop
aad
popf
mov
cld
jae
aad
add
int3
fldenv
jmp
mov
stos
mov
or
aaa
pop
stos
ss
and
sub
lret
dec
or
subb
push
lret
movsl
jle
outsb
sbb
adc
lcall
or
mov
icebp
or
ret
mov
adc
push
lret
or
pop
pop
jg
push
std
push
enter
push
aam
xor
dec
lds
out
lods
sub
jle,pt
in
fucomi
dec
int
mov
pushf
inc
mov
bound
ss
mov
pop
aam
xchg
in
or
fucomp
imul
mov
lcall
dec
test
int3
cmp
sbb
fs
imul
sbb
mov
pop
sbb
mov
scas
jne
aas
dec
jns
or
inc
out
outsb
hlt
repnz
ss
subb
sahf
test
rcrl
stos
dec
xchg
add
insb
popa
sub
popf
test
sub
ljmp
cmp
in
pop
outsb
popa
jmp
lods
or
mov
das
sub
and
hlt
out
push
aam
into
mov
cmp
stos
lock
pop
and
inc
in
xor
out
cmpsl
outsb
cli
xchg
cli
or
pop
test
pop
stos
je
hlt
dec
dec
dec
movsl
push
fstps
in
dec
int
and
jecxz
inc
lods
test
lcall
mov
scas
ficoml
sbb
into
fistpl
cld
push
loop
pop
jbe
imul
cmp
or
leave
in
int
das
imul
mov
sub
fmuls
cmc
and
and
in
out
xchg
loope
scas
bound
and
gs
dec
cmpsl
aad
fildll
rsqrtps
hlt
jmp
jb
sbb
insl
stc
jno
xchg
xorl
or
xchg
loope
scas
cmpsb
addr16
lahf
xchg
sub
in
cmpsb
mov
push
mov
xchg
mov
jno
jae
cmpsl
js
xor
xchg
in
loop
popa
lret
out
and
push
repz
fldt
pop
in
dec
int
push
outsl
es
adc
jge
cmp
pop
dec
into
or
cs
out
or
test
dec
mov
leave
outsb
lea
fisubs
xchg
repz
mov
rcrl
push
inc
fldcw
stos
xchg
mov
sti
leave
pop
lcall
ret
int
in
idiv
sbb
mov
cmpsl
or
add
mov
push
sarl
mov
leave
and
sti
int3
imul
xor
lret
sarl
rcrl
push
lods
dec
push
hlt
je
out
stos
dec
inc
push
mov
push
lds
daa
adc
mov
lds
test
mov
pop
pop
outsl
dec
dec
int3
push
fcoml
add
xchg
addr16
push
push
or
adc
loopne
sysret
cmpsb
pop
inc
test
push
imul
outsb
cmp
cmc
pop
lcall
pop
inc
movsl
mov
dec
int3
sbb
gs
jl
jle
into
mov
sub
adc
sub
jne
cmp
bound
push
pop
leave
jl
inc
cmp
pop
movsb
outsb
mov
pop
jne
pop
xorb
test
adc
fsubrl
push
into
xchg
xchg
gs
in
lcall
stos
stc
testl
mov
and
and
daa
loope
pop
mov
test
mov
pop
mov
cwtl
jne
lahf
fstpl
pushf
insb
je
arpl
dec
adc
sub
fsubrs
cmpsb
lods
jle
pop
push
dec
pop
pop
xchg
sahf
xchg
mov
arpl
mov
jae
dec
pop
insb
inc
loope
pop
xlat
dec
mov
mov
fsubs
cmp
and
mov
jno
pop
inc
push
mov
js
addr16
push
dec
cmc
lods
outsb
fsub
fwait
pop
addl
dec
int3
xchg
sti
repz
lret
jmp
sti
dec
ret
sub
cmp
fbstp
push
xchg
addl
pop
sub
pop
mov
xor
xor
pop
ljmp
lcall
outsl
sahf
dec
xchg
lea
clc
je
lahf
xchg
push
push
sub
add
testl
pop
fstl
mov
lods
mov
andb
jge
pop
push
out
adc
pop
clc
mov
sub
lret
sub
divb
adc
icebp
and
outsb
rorl
out
jg
push
xchg
movsl
and
pop
shrb
sbb
outsb
push
nop
pusha
xchg
mov
mov
scas
std
sbb
push
test
jmp
dec
xorb
outsb
arpl
outsb
dec
lods
out
leave
dec
sub
fucom
outsb
loopne
jae
outsl
or
out
fs
jecxz
or
lret
xchg
and
outsb
int3
lretw
in
pop
sbb
imul
jne
out
mov
add
roll
into
pusha
dec
lcall
ret
push
cmpsl
cltd
sub
test
lcall
add
sub
jg
adc
into
push
mov
in
pop
mov
hlt
out
or
push
dec
and
mov
cs
mov
outsl
mov
aam
push
sbb
in
push
pmuludq
fldenv
sub
fwait
fwait
lahf
jl
pop
mov
sarl
push
addr16
mov
lret
sub
rorl
dec
push
jl
mov
mov
and
dec
jnp
or
movsb
test
stos
gs
add
jo
stos
jle
adc
cmpsb
pop
jmp
popf
test
or
cmp
xchg
push
movsb
sub
lds
xlat
jle
xchg
jnp
cmp
gs
pop
lods
in
pop
mov
mov
bound
lea
outsl
push
adc
ljmp
fs
gs
xchg
lods
lods
dec
test
xchg
xchg
lcall
push
cmc
ljmp
loopne
sbb
popaw
movsb
leave
dec
lds
pop
add
repz
pop
frstor
fucomip
sbb
call
outsb
inc
mov
orb
shrl
sbb
dec
sbb
aas
es
add
pop
dec
imul
pushf
mov
clc
lcall
inc
rcr
popa
lea
je
sbb
lock
jbe
or
cmpsb
mov
jge
insl
cltd
or
movsl
sub
xorl
jecxz
mov
popf
add
pusha
imul
lods
xchg
imul
aam
mov
test
test
sub
test
fcmovb
outsl
nop
push
lods
scas
jecxz
lds
jl
outsl
stos
cld
push
in
add
or
sbb
jg
or
orb
fisttpl
mov
cwtl
icebp
std
pop
loope
stos
and
fwait
icebp
xchg
push
addr16
sbb
dec
inc
shll
pop
imul
roll
xchg
into
pop
mov
ljmp
mov
cmpsl
into
insl
add
ret
xchg
sbb
hlt
add
mov
mov
insl
xchg
push
sti
dec
jecxz
test
call
out
mov
lods
lea
int3
and
ljmp
leave
push
test
imul
test
scas
pextrw
jne
inc
in
mov
jecxz
or
push
dec
fdivr
inc
arpl
test
lds
xchg
dec
pop
lods
pop
daa
shlb
inc
insl
fisttpl
loopne
mov
inc
leave
pop
lea
pop
lea
repz
cltd
shll
movsl
mov
push
push
xor
cltd
insl
push
add
cmp
test
and
sub
cltd
mov
adc
jge
rcr
loope
repnz
mov
ror
addr16
aas
dec
and
nop
enter
aam
dec
out
fcompl
in
fst
inc
movsb
insl
xchg
sub
add
mov
or
xlat
sub
dec
mov
stos
mov
int
lods
aam
cmpsl
imul
and
jecxz
jp
cmpsb
bound
in
popf
xchg
lret
push
lcall
pop
lea
call
outsb
out
inc
je
imul
sahf
hlt
lods
ljmp
fmul
std
test
push
add
mov
adc
rorl
pop
std
xor
or
int
insb
push
mov
xchg
mov
hlt
or
stos
or
fstp
mov
pop
mov
int
stos
and
leave
std
daa
sub
pop
push
fwait
xacquire
sub
mov
mov
lods
mov
xchg
sbb
mov
jae
scas
out
cltd
test
and
push
mov
clc
ret
sub
lods
add
scas
lea
in
lcall
arpl
pop
push
xchg
ljmp
iret
inc
dec
cmpsb
repz
and
inc
test
fs
das
insb
bound
and
sub
or
sub
daa
test
mov
jecxz
sub
dec
je
sub
and
push
mov
sub
cltd
cmp
cmp
sub
imul
mov
mov
jecxz
scas
sbbl
loopne
out
loope
test
pop
fcmove
test
inc
leave
pop
bound
push
std
clc
leave
int3
gs
out
loope
sbb
nop
xchg
push
arpl
push
cli
cmc
mov
dec
push
lret
cmpsl
out
sub
pop
add
rcll
cmp
fiaddl
fxch
add
in
imul
dec
and
lcall
int3
xchg
sbb
and
imul
aas
je
fdivs
and
or
sti
imul
inc
outsb
lea
pop
mov
push
inc
mov
xchg
inc
call
mov
inc
in
cmpsb
mov
dec
xchg
into
mull
add
adc
pusha
lret
outsl
subb
repnz
gs
cmp
push
fildl
lahf
test
sbb
ja
adcl
cmp
pop
mov
fstpl
dec
jnp
add
movsl
lret
dec
subb
ret
scas
shrb
lods
imul
push
ljmp
imul
flds
xchg
stos
mov
outsb
insl
mov
cwtl
test
and
das
das
sub
inc
cltd
jp
arpl
js
and
inc
test
jo
pmulhw
outsl
aas
cmpsl
lahf
insb
into
movsb
cmp
pop
out
or
push
cmp
sbb
dec
or
add
test
fiaddl
test
popf
out
popf
add
out
and
mov
ljmp
xor
push
sub
pop
xchg
rcrb
sub
daa
dec
data16
sti
push
sbb
fisubrl
dec
lods
jnp
insl
mov
outsl
mov
cmp
push
stos
xchg
add
dec
sub
sbb
into
push
and
aaa
das
decb
xchg
jle
sub
cmpsb
xchg
cld
in
cmpsl
mov
adc
pop
lea
mov
fs
cwtl
outsb
addr16
sub
add
in
in
lea
aad
sbbb
mov
int
jmp
arpl
sti
repz
outsl
stos
clc
mov
xchg
outsb
adc
lea
lea
sti
cmp
imul
in
aad
and
mov
andl
out
outsl
adc
dec
test
iret
cs
mov
leave
cmpb
ljmp
icebp
dec
or
loope
dec
lods
stos
sub
insl
int
imul
test
add
pop
hlt
orl
or
fisttpll
pop
sub
test
in
push
das
outsb
mov
jle
push
int
gs
push
xor
ret
or
push
mov
add
fistl
in
sub
out
sbb
pop
cmc
iret
shll
outsb
cmpsl
adc
lods
aaa
pop
push
outsb
xchg
cmpsb
cwtl
xor
outsl
rorl
xlat
jmp
ret
int
test
jecxz
rcl
xchg
mov
daa
test
imul
int3
out
add
and
push
out
gs
or
out
movsl
jl
pushf
iret
or
and
mov
or
jne
subb
add
inc
outsb
jl
into
lret
lods
push
imul
fsubl
scas
push
lret
mov
or
xor
cmp
pop
enter
fstpt
dec
sub
push
orb
sub
gs
mov
out
fwait
mov
aad
dec
leave
into
jecxz
loope
cmpsl
sub
bound
jmp
out
mov
subb
outsb
adc
in
add
add
and
neg
es
xor
or
xlat
insb
cmp
pop
or
bound
lret
ljmp
lret
pop
ljmp
fs
fisubs
pop
inc
sub
jle
bound
push
loop
dec
popf
lret
jns
rcll
test
sub
sub
jmp
xchg
dec
mov
stos
std
pop
mov
sub
xlat
push
dec
or
mov
pop
xor
dec
jle
push
clc
outsl
fdivl
lahf
std
outsl
in
xchg
int3
lea
in
jne
fldt
mov
jecxz
outsb
sbb
in
or
pop
and
subb
or
ret
push
popf
stos
subb
and
push
dec
int
je
xchg
scas
roll
adcl
xchg
inc
into
sub
pusha
or
movsb
leave
sub
mov
lods
jmp
nop
push
jecxz
lds
std
pop
int
cwtl
es
scas
ds
inc
mov
dec
sarl
sub
jmp
jp
mov
mov
xchg
inc
in
ds
lds
iret
jb,pt
sbb
iret
push
insb
cli
jno
dec
dec
hlt
imul
outsb
ret
sarb
sub
lret
daa
sub
pop
inc
test
stos
dec
scas
div
outsb
adcl
int3
ror
cltd
inc
or
jp
sbb
ror
iret
fwait
les
test
je
out
scas
dec
inc
jb
inc
andb
test
jge
lods
movsl
cli
lret
adc
les
mov
enter
out
dec
movsw
loop
fisubrl
xchg
push
sub
enter
mov
cmc
rorl
out
ret
leave
es
cmpsb
hlt
repz
push
sub
js
test
sub
dec
stc
cmpsw
mov
popa
cmp
xor
ss
test
mov
mov
pop
lods
bound
lret
cmp
aas
mov
or
dec
cld
int
outsl
xor
fs
aas
outsl
mov
lock
sub
out
popf
idivl
or
outsl
fistpl
dec
pop
mov
pop
popf
imul
lret
cmp
mov
mov
xchg
xor
fcompl
sarb
cmp
enter
fs
subl
adc
pop
mov
and
push
stc
dec
and
and
outsl
push
gs
sbb
mov
and
jo
mov
leave
in
loope
pushf
fistl
jg
pushf
mov
xchg
push
mov
fidivrs
inc
add
pop
pop
fsubs
outsl
rcll
cmpsl
fisubrl
lods
cwtl
pop
sbbb
adc
call
out
stos
aad
mov
xor
ret
sub
mov
movsl
jecxz
stc
mov
mov
push
movsl
rcll
xor
xor
mov
mov
in
adc
int
mov
ds
imul
inc
push
mov
fsts
or
or
dec
cli
jb
and
mov
aam
fstpt
or
out
push
icebp
or
ret
outsb
mov
xor
mov
pop
add
add
cmpsb
adc
adc
movsb
pop
dec
enter
popa
and
cmc
xor
into
mov
loopne
pushf
fs
scas
aam
in
ds
xor
stos
fldenv
loopne,pn
cmp
rolb
xchg
lret
sub
inc
xor
repnz
mov
int
ret
mov
or
and
loopne
mov
imul
push
test
jge
adc
pushf
inc
std
sbb
push
xchg
fldt
xchg
daa
jmp
mov
js
pop
add
test
int
js
fiaddl
in
xchg
pop
lods
or
ja
and
xchg
sub
cld
pop
xchg
aas
dec
icebp
adc
adc
fwait
jnp
dec
test
and
mov
or
loop
add
adcb
cmp
scas
scas
dec
add
lret
and
or
std
fwait
test
sbbb
xchg
roll
pop
fs
outsb
add
clc
loope
insb
mov
cmpsl
pushf
iret
and
data16
outsb
mov
icebp
outsb
dec
jge
dec
das
xchg
xchg
out
dec
mov
out
notl
invd
lret
subl
xor
pop
and
int
lods
mov
int
sub
shll
data16
push
gs
dec
data16
dec
push
push
dec
dec
es
int3
cmp
cmp
popf
repz
or
addl
mov
or
enter
imul
imul
loope
pop
cwtl
pop
int
sub
inc
arpl
fsubrl
je
imul
dec
or
mov
sub
xor
ja
cld
xchg
in
lods
scas
shrb
or
cmp
and
lods
fldcw
cmp
push
dec
fstps
push
push
adc
out
mov
push
test
jmp
leave
pop
or
leave
mov
popa
stos
pop
test
mov
sub
imul
lods
imul
xchg
fs
cmp
pop
imul
mov
pop
mov
xchg
outsb
stc
pop
jnp
scas
test
push
cmp
dec
mov
lret
adc
mov
push
or
shll
sub
lods
in
mov
je
push
int
scas
mov
or
dec
add
jle
lret
push
shr
cli
mov
lret
popf
mov
lods
dec
fmuls
sahf
ret
rcrl
in
pop
mov
lea
jmp
dec
pop
lods
insl
inc
jmp
stos
adcl
arpl
sub
xchg
adc
data16
dec
pop
pop
or
push
xchg
fists
subb
fwait
inc
pop
dec
add
xlat
push
sub
test
repz
out
sbb
insl
leave
data16
push
mov
test
jp
fs
fistl
test
fcmovnu
mov
and
outsb
imul
out
push
outsl
pusha
je
dec
mov
mov
sbb
push
in
cmp
jbe
sbb
std
cltd
pop
inc
pop
lret
ret
int
sbb
int3
adc
mov
adc
gs
pop
or
mov
jge
lds
out
mov
cmp
pop
rorb
and
dec
cmp
adc
aad
or
push
jae
push
dec
stos
imul
and
cmp
stos
rcll
rcrl
jmp
icebp
ja
pop
insb
or
pop
lret
mov
outsb
mov
push
outsb
jecxz
mov
fbstp
pop
adc
jmp
shrl
xor
lcall
test
or
stos
scas
mov
bound
loop
mov
shll
adc
outsb
mov
sahf
push
das
pop
mov
push
cmp
push
sub
imul
pop
les
outsb
mov
mov
lret
jp
adc
xchg
lods
popf
fs
or
xchg
insb
xor
test
inc
lods
jecxz
outsl
je
cmp
shr
fbstp
test
inc
inc
xchg
push
in
aaa
jg
cmpsb
lret
or
push
mov
lods
add
pop
jno
push
lock
arpl
xchg
mov
push
frstor
sbb
leave
push
test
lcall
pop
enter
jne
xor
enter
xor
sbbb
adc
dec
bound
leave
outsl
mov
das
neg
repnz
cmpsb
popa
sti
mov
and
dec
xor
push
push
fiaddl
dec
sub
lret
mov
and
pop
test
enter
add
cltd
sub
test
fwait
fs
jle
and
and
xchg
insl
mov
jns
es
jp
lret
adc
sub
jne
test
pop
data16
xlat
lret
int
cmc
sub
mov
add
and
lds
fs
lret
or
sub
mov
ss
das
clc
int
sbb
fs
mov
rep
into
outsl
jle
stos
adc
sti
scas
lcall
pop
mov
lods
xchg
sbb
fs
das
arpl
out
cltd
jl
dec
popf
lcall
push
sti
popf
mov
lret
jne
adcl
insb
notl
dec
int3
inc
mov
es
aas
xchg
les
mov
or
popa
dec
dec
push
les
adc
push
popf
hlt
outsl
mov
cwtl
leave
inc
aad
inc
cmp
insl
imul
push
lahf
gs
lcall
imul
in
add
pop
dec
subb
in
stos
mov
cmp
or
or
dec
pop
xchg
mov
sub
iret
pop
xor
dec
leave
enter
in
dec
jle
popf
stos
movsl
push
inc
insb
gs
pop
lret
dec
loope
push
or
and
test
outsb
leave
dec
je
movsb
cmpsl
and
dec
insl
fisubrl
push
or
push
and
stos
mov
gs
outsb
mov
mov
in
in
test
mov
jns
fstpt
xor
dec
mov
dec
and
push
push
dec
scas
mov
into
lcall
mov
cltd
pop
es
enter
in
outsb
or
test
jecxz
lds
sub
mov
dec
mov
in
add
adcl
in
or
pop
dec
in
mov
push
dec
cmp
or
push
pop
mov
or
jg
xlat
and
outsb
scas
mov
gs
int
and
ret
out
or
scas
fidivl
stc
lret
pop
andnps
jnp
pop
scas
fxch
das
lcall
push
mov
iret
insb
lret
xchg
popf
dec
lcall
pop
hlt
rol
outsl
in
scas
test
js
icebp
das
pusha
mov
dec
iret
lods
cmp
xlat
or
dec
aam
lods
cmpsl
out
arpl
and
xor
addr16
push
dec
push
cmp
jno
push
out
repnz
fisubl
lods
mov
or
dec
outsl
jno,pn
push
adc
pop
les
lock
aad
mov
repz
jle
outsl
xchg
fisubrl
or
imul
jmp
in
lret
imul
push
jae
xchg
popa
add
jp
cmp
mov
call
cwtl
std
jnp
push
cmp
mov
movsb
in
sahf
pop
test
sbb
push
mov
leave
push
test
mov
dec
test
cmp
sub
out
sub
dec
es
scas
test
bound
sbb
bound
inc
outsw
push
dec
xchg
mov
sti
jle
pop
pxor
adc
cmp
inc
stos
sub
hlt
pop
mov
cmpsl
out
outsb
pushf
dec
or
hlt
dec
jne
test
std
sub
paddsw
data16
inc
fldenv
xor
jne
pop
pop
imul
je
mov
fisttpl
lods
fldt
cwtl
jno
int
adcb
xor
push
in
mov
jle
cltd
and
xor
xor
jp
sub
jp
or
cmp
call
mov
mov
jle
jecxz
outsl
leave
insl
sub
test
popa
push
movsl
jae
fld
cli
sti
out
popa
cmp
lret
push
add
jne
stos
pop
pop
xchg
fwait
mov
sub
sahf
xor
fstpl
xor
jbe
adc
test
sbb
pop
xor
mov
xor
add
pop
sub
clc
sbb
add
out
sti
pop
adc
int3
or
in
xchg
mov
cli
jl
pop
popf
cmp
xor
test
jecxz
mov
push
push
dec
rol
xor
mov
js
push
scas
jnp
and
lea
pop
dec
repz
cld
pop
adc
or
lods
int
call
test
inc
mov
and
cltd
dec
cmp
stos
dec
lds
test
ja
adc
push
xchg
mov
rorl
outsl
pop
insb
cmpsw
fucomi
fdivrs
in
sbb
lea
aad
out
jmp
outsb
lds
inc
nopl
dec
mov
inc
push
stos
fmuls
in
sub
outsb
and
cmp
sbb
and
or
push
lods
loope
aaa
push
test
or
sub
int
enter
scas
cmpsl
in
jmp
stos
lcall
xchg
outsb
in
fwait
or
fldcw
pop
sub
mov
jne
pop
add
jmp
cmp
ss
adc
dec
out
pop
in
lea
rorb
jecxz
test
and
pop
dec
into
gs
lea
sbb
pop
push
mov
push
fsubs
sub
push
pop
icebp
jnp
xlat
cltd
outsb
pushf
lahf
rcrl
pop
jg
sbb
ret
cmc
aam
or
cmpsb
dec
pop
sub
arpl
add
leave
push
sbb
sub
jne
sub
in
xchg
data16
jl
pop
cmp
popa
lea
insl
lds
jo
test
push
lods
in
leave
lahf
popa
mov
sub
mov
dec
jne
fs
outsb
sub
dec
aas
rcl
or
adc
bound
lds
leave
push
das
pushf
sbb
sub
mov
jmp
sub
xchg
fiaddl
jne
pop
aad
imul
outsl
dec
push
outsb
lahf
xor
cmp
and
sti
push
cmpsl
sub
sub
cmp
outsl
and
xchg
test
aad
adc
add
pop
lret
addb
ret
pop
bound
sbb
push
cld
adc
push
or
in
mov
test
push
data16
pop
and
jmp
outsl
scas
xchg
int
jge
lea
repz
cld
push
stos
fnstsw
mov
cmp
fidivs
scas
mov
ds
in
out
in
add
int
das
dec
test
sbb
or
leave
add
cltd
mov
gs
or
sub
scas
hlt
mov
or
pop
jle
insb
outsb
pop
pop
iret
out
arpl
clc
mov
out
pop
incb
mov
xchg
mov
aas
pusha
lods
push
push
or
mov
out
out
movsl
lods
xlat
outsl
sub
mov
sub
cmp
sub
cs
lods
mov
jmp
dec
and
and
xchg
in
dec
pushf
loope
cmp
aam
aad
sub
ror
in
shll
push
or
adc
int3
mov
popf
rorl
lds
and
push
xchg
fimuls
test
in
xchg
dec
stos
aad
sbb
lcall
cmpsl
cltd
fidivs
push
pop
insb
xchg
add
push
stc
bound
xchg
cmp
dec
cmp
ret
lods
hlt
dec
mov
pop
mov
and
popa
adc
inc
mov
jmp
lds
or
fs
lods
outsb
mov
icebp
or
push
and
inc
lret
inc
in
stos
or
xchg
jl
bound
or
in
cmp
fwait
fs
out
mov
orb
push
xchg
dec
test
das
jne
dec
fldt
insb
nop
fwait
adc
sbbl
adc
scas
cmp
int3
xor
arpl
lds
push
ljmp
and
cmp
push
fs
add
jne
stos
lret
mov
mov
xchg
jecxz
fldt
loopne
int
std
and
stc
fs
out
cwtl
adc
stc
paddsb
daa
sub
stos
jp
rcl
out
jecxz
add
aaa
outsb
or
mov
pop
push
pop
mov
mov
out
pop
imul
fcompl
sub
pop
cmp
imul
inc
push
pop
ret
dec
mov
pop
pop
lods
jbe
lcall
jmp
push
enter
stos
lods
test
xchg
mov
sub
stos
imul
outsb
loope
lods
imul
bound
lods
adcl
sahf
and
insb
jbe
outsb
dec
popf
in
cmpsb
pop
fwait
out
sub
lret
pop
scas
movsb
add
sub
imul
add
push
and
sub
in
mov
add
lret
jl
push
pop
xor
inc
and
jae
mov
push
in
fwait
pop
push
into
jnp
sub
add
je
ret
mov
push
pushf
mov
cld
mov
push
gs
in
shlb
roll
repnz
dec
mov
dec
pop
mov
imul
addr16
movsb
sbb
xchg
test
push
sub
sbb
pop
sbb
movsl
add
xchg
cmpsl
pusha
jle
or
roll
pop
sub
pop
xchg
cli
andb
enter
mov
pop
ror
or
and
popf
or
arpl
stc
sbb
sbb
ffreep
inc
sub
insl
sub
lea
or
movsl
push
lds
and
popf
mov
gs
adc
jl
push
cli
subb
popf
push
ljmp
pop
sub
add
int
pop
mov
fildl
mov
int
test
lea
fwait
dec
insb
data16
out
jno
or
push
outsb
cli
xorl
jp
or
xor
iret
add
pop
adc
pushf
fldt
je
dec
dec
push
rclb
pop
mov
adc
jp
hlt
imul
sub
dec
stc
push
cmpsl
sub
pop
outsb
imul
push
lea
mov
jne
int
dec
mov
jecxz
fmul
js
push
mov
scas
fwait
xor
push
xchg
ret
jecxz
pop
and
loopne
insl
std
inc
and
in
xchg
mov
add
out
jecxz
xor
or
sbb
lea
andb
fidivrl
test
nop
outsb
into
scas
and
andb
dec
in
fimull
testl
cmp
iret
imul
gs
lods
call
lea
adc
stos
jb
test
sbbl
push
mov
xor
pop
dec
mov
pop
dec
movsb
pop
sbb
js
aad
sbb
mov
mov
fisttpl
sbb
cltd
xchg
stos
imul
xor
or
lods
sbb
test
dec
in
lods
pushf
jno
in
push
push
subb
push
dec
gs
insb
xchg
stc
push
or
call
lods
in
stc
or
jmp
and
push
insb
or
fcomip
fwait
gs
fcmovnb
pop
xchg
or
cmp
mov
out
loope
lcall
out
stc
sbb
movsb
dec
es
ret
icebp
and
mov
mov
test
outsb
xchg
sub
mov
or
mov
sub
cmc
out
out
lret
int3
jb
jmp
mov
arpl
jne
cmp
dec
mov
xor
loope
sub
mov
icebp
leave
aam
mov
sbb
and
nop
cmpb
pop
stos
movsb
aas
or
ret
pop
pusha
lds
pushf
popf
ror
mov
adc
imul
dec
mov
adc
flds
stos
pop
test
movsl
sbb
stos
adc
test
ss
xor
dec
mov
ja
outsb
scas
cmp
sti
push
mov
mov
lcall
in
jbe
cmp
out
test
add
sub
out
pop
lret
inc
mov
inc
pop
sub
loope
pmulhuw
add
xchg
fwait
cmpsl
fisttps
or
popa
pushf
dec
leave
outsl
mov
test
repz
sbb
and
and
push
out
andb
mov
jle
and
mov
add
dec
dec
mov
and
out
dec
jp
stos
std
lea
test
cld
arpl
stos
aad
jne
out
mov
bound
fnstsw
and
pop
jmp
outsb
jp
sub
iret
adc
cmp
in
pop
sbb
popa
loop
popl
outsl
orl
dec
outsb
or
iret
outsl
mov
dec
push
outsl
dec
or
cmp
push
insl
mov
dec
mov
cltd
dec
pop
iret
addr16
dec
xor
js
out
add
shl
push
outsl
shll
pop
cmovne
lahf
jmp
mov
xchg
cmp
jne
out
sahf
roll
cmpsl
xchg
mov
cmp
or
mov
loope
outsb
data16
scas
xchg
mov
fs
pop
movsb
dec
test
lods
cmpl
test
dec
jo
mov
std
cmpsb
bound
or
cs
mov
ret
pop
int3
outsl
js
cmpsb
bound
stos
xor
dec
sbb
int3
aam
test
dec
sub
aam
test
cmp
sbb
xor
movsl
xchg
outsl
inc
fadds
imul
cmp
pop
frstpm(287
sbb
lret
dec
or
insb
call
movsl
jecxz
cmc
push
pop
pop
pushf
push
insl
mov
lods
lea
xchg
jge
in
and
xor
lea
cmc
push
rcr
xchg
xlat
lods
loop
push
lock
xchg
push
imul
xor
dec
das
pushf
xor
icebp
fucom
test
jb
inc
push
int3
xchg
pop
gs
adc
lods
lret
inc
dec
clc
add
sbb
dec
repnz
daa
jo
cltd
xchg
sub
out
mov
outsb
dec
mov
push
popf
lods
pop
push
dec
push
pop
mov
into
pop
and
outsb
adc
jle
loopne
jbe
jno
outsb
pop
inc
in
outsb
rorl
popf
mov
dec
lea
in
outsb
xchg
dec
pop
mov
push
dec
lods
pop
ret
in
outsb
push
dec
pop
frstor
lods
aad
mov
int
test
push
outsb
adc
in
cmc
push
dec
in
gs
push
frstor
dec
imulb
dec
pop
aaa
gs
dec
xchg
pop
cmp
dec
pop
lock
dec
push
pop
pop
in
outsb
push
dec
pop
mov
dec
lods
subb
adc
in
outsb
jne
pop
jae
insl
lods
inc
push
dec
rcrl
in
outsb
xchg
dec
pop
xor
mov
xchg
pop
mov
dec
pop
cmc
lods
lods
lds
mov
push
pop
es
dec
aam
mov
int3
outsb
xchg
add
push
dec
hlt
pop
jo
in
outsb
inc
dec
pop
and
shrb
adc
xor
or
add
inc
gs
lods
cmp
bound
repnz
outsb
ret
fs
lods
pop
push
dec
push
pop
mov
dec
outsb
test
outsb
adc
pop
jl
in
je
jne
insb
pop
inc
in
outsb
aad
pop
fwait
movsl
lods
xchg
dec
ss
mov
ret
in
outsb
mov
mov
imull
dec
pop
jecxz
push
outsb
fisttpl
and
lods
mov
lret
dec
sbbl
dec
pop
loope
rep
jb
jmp
inc
pop
and
shrb
dec
pop
mov
push
dec
add
inc
in
outsb
cmp
fs
les
in
outsb
pop
dec
pop
and
push
dec
xchg
in
pop
dec
jnp
out
jae
ja
pop
imul
mov
pop
cmpsl
in
outsb
xor
mov
lods
ret
dec
mov
outsb
icebp
dec
pop
stos
shrl
je
or
shlb
je
mov
mov
push
repnz
and
ljmp
push
sbb
dec
pop
adc
or
mov
cmp
xor
fisubrs
in
bound
push
pop
dec
cmp
in
dec
mov
es
dec
lods
push
loope
pop
testl
pop
movsl
dec
dec
aad
inc
loope
pop
in
adc
mov
push
insb
ret
pop
bound
mov
shrb
jo
out
pop
xchg
push
orb
cmc
push
push
shll
mov
push
ret
fsub
lret
movsl
adc
insb
pop
loope
pop
stos
dec
popa
sbb
inc
arpl
movsl
xor
dec
xchg
ja
cmp
mov
repnz
xchg
push
pop
mov
jae
loop
adc
pop
dec
mov
mov
lock
pusha
loope
pop
add
mov
jbe
dec
in
adc
dec
and
mov
arpl
add
dec
mov
jno
loopne
adc
sbbb
daa
push
mov
mov
xor
insb
inc
loope
pop
jecxz
adc
dec
push
insb
shl
pop
popa
dec
nop
add
xlat
dec
fcoms
cs
push
dec
xchg
jle
into
sub
xchg
lds
out
cs
int
std
cmc
in
cs
cmp
pop
push
dec
data16
dec
test
jge
insl
movsb
pushf
xchg
mov
cs
aam
add
and
adc
inc
cs
sub
fs
push
dec
test
mov
ret
mov
ror
cs
repz
sbb
or
inc
cmp
sub
push
dec
xchg
arpl
cs
mov
cs
add
repnz
cmp
sub
sbb
sub
ljmp
cmp
notb
test
sbb
sbb
ret
jo
mov
fdivl
dec
push
xchg
insb
faddl
pop
mov
arpl
mov
sub
or
aad
adcl
jmp
subl
mov
js
push
push
out
cli
js
out
jae
add
pop
jle
imul
inc
inc
scas
xchg
jle
and
fwait
or
es
fidivrs
add
xchg
orb
shrl
mov
pop
cwtl
cld
stos
or
les
fcomip
in
sub
mov
mov
lahf
lods
and
adc
inc
scas
sub
imul
jae
push
or
pop
or
popa
shrb
adc
enter
in
fildl
lods
int3
jl
icebp
or
repz
sub
mov
inc
mov
enter
jne
sub
or
int
lods
imul
pop
add
scas
addr16
lods
in
enter
sti
pushf
les
inc
loope
lock
xor
les
cs
sub
je
mov
nop
icebp
or
adc
or
outsl
mov
fistpll
xchg
mov
cmpsb
pop
sbb
addr16
popf
add
fcmove
push
js
popf
pop
data16
jecxz
mov
xchg
mov
add
int
nop
mov
add
adc
fs
lret
in
push
sbb
pop
movsl
push
mov
xchg
xchg
jl
jl
adc
pop
inc
add
jmp
outsb
sub
in
mov
xchg
std
xor
arpl
inc
les
push
ret
shrl
dec
jl
and
je
sub
xchg
movsl
imul
inc
pop
and
and
sbb
enter
aaa
xor
push
in
add
js
lcall
ja
dec
mov
scas
lods
fdivrl
andl
lcall
adc
ss
pop
dec
xchg
js
or
mov
dec
out
rol
mov
sbb
inc
movsb
cli
in
pop
xchg
push
lea
lds
daa
push
popf
xchg
mov
stc
outsb
outsl
mulb
pop
fs
jge
jg
insb
lretw
sub
dec
lret
push
pand
in
pop
stos
jbe
aam
or
fs
inc
imul
in
out
stos
fnsave
aam
mov
sub
and
lcall
xchg
lret
in
int3
cmp
sub
fsubrs
or
sub
mov
ss
movsb
jmp
mov
lea
fisttpl
movsl
push
push
pop
outsl
enter
jle
mov
cli
aaa
fs
dec
in
popf
and
lret
mov
dec
imul
stc
jmp
in
lods
rcl
sbb
push
xor
cmp
iret
and
int
cmpsb
cmc
int
imul
iret
bound
push
xor
rolb
fwait
leave
adcl
cmpsb
lret
push
sbb
fsubrs
outsl
in
scas
push
push
cmp
or
test
mov
push
fs
int3
add
add
dec
fstpl
inc
sub
in
inc
aad
lods
jmp
lods
dec
mov
popa
lods
test
dec
sub
in
lea
in
xchg
fildl
repnz
gs
adc
mov
pop
pop
push
xor
test
cmp
fcmovnbe
adc
test
or
imul
xchg
inc
dec
dec
outsb
test
sub
jnp
pop
add
push
dec
lods
xorl
mov
ss
push
cmpsb
aam
jp
lret
sti
imul
aad
dec
xchg
push
sarl
push
fbld
popf
cmpsb
pop
pushf
in
sti
dec
gs
outsl
push
leave
jne
test
lretw
dec
test
lods
and
xor
add
pop
rcll
push
sti
xchg
vandps
mov
sub
das
adc
push
incb
cmp
lds
and
xchg
les
mov
aas
push
pop
movsl
sbb
decb
int
mov
push
add
jmp
vphsubdq
enter
cmp
dec
stc
inc
push
push
ficoms
mov
divb
insb
push
sub
adc
and
dec
in
dec
and
lret
jnp
add
sub
jne
lret
test
pop
xchg
dec
sub
dec
push
das
inc
notl
int3
pushf
sub
inc
pop
cmp
shrb
xor
cwtl
adc
std
fdivs
popa
cltd
aam
stos
clc
pop
jp
jg
lahf
jle
fneni(8087
cmp
pop
inc
aam
cmp
xchg
jae
imul
dec
push
mov
adc
hlt
cli
stos
adc
jae
inc
dec
jl
movsb
cmp
test
in
shll
inc
outsb
imul
icebp
and
subb
test
cld
mov
dec
test
jle
aam
fiadds
dec
movsl
in
xor
jmp
lea
jnp
sub
mov
mov
in
adc
inc
mov
nop
cld
add
mov
dec
push
popl
lahf
push
scas
outsl
inc
lods
in
push
sub
pushf
iret
sub
lods
xor
stc
push
pop
icebp
iret
cld
inc
out
mov
and
rol
test
pop
jmp
bound
dec
lea
in
jo
dec
dec
push
push
xchg
mov
push
popf
jne
stos
in
jle
int
aam
xchg
sar
lods
stos
mov
push
loopne
dec
sub
shll
fcmovne
lret
sbbl
subb
outsl
jns
pop
dec
and
push
fstl
inc
xor
aaa
and
js
shl
das
aas
xchg
les
push
imul
outsl
dec
mov
pop
mov
cwtl
lea
std
lods
pop
and
dec
inc
xchg
lahf
cmp
pop
or
imul
lahf
js
inc
jl
lods
mov
bound
repnz
iret
cli
dec
cltd
aaa
fsub
mov
push
stos
mov
dec
fs
push
jl
dec
mov
inc
outsb
test
imul
outsl
loop
xchg
popf
inc
outsb
in
dec
add
push
jmp
clc
jl
lahf
test
jle
dec
mov
sub
popf
in
iret
lods
pop
mov
insb
inc
rclb
adc
cmp
lods
sbb
cmpsb
add
fcoml
jnp
popa
outsl
xchg
jb
dec
aam
pop
fnstenv
jnp
sub
int
sub
loope
stos
stc
inc
lahf
xlat
lcall
mov
pop
in
jecxz
sbb
lods
popa
and
shl
stos
jg
adc
lds
add
sbb
sub
repz
fcompl
ljmp
cld
js
ds
cli
out
fnsave
bound
xor
sarb
or
ja
jb
or
cmp
xor
sub
sub
jo
push
jb
pusha
addr16
push
pop
mov
outsb
pushf
sbbl
sbb
ficoml
das
push
arpl
subb
mov
push
movsb
imul
aad
movsl
push
out
cltd
jle
jbe
jl
repz
lea
loopne
sub
cmp
push
mov
jbe
or
gs
test
dec
cli
or
ss
call
imul
dec
push
xchg
dec
mov
cmpsb
loope
outsl
lret
cmc
insb
loope
lret
cmc
insb
loope
lret
cmc
pop
rorl
call
out
ret
pop
pop
fmull
adc
test
fldt
ds
fldl
mov
mov
or
and
subb
dec
push
lods
out
or
daa
rcrl
insl
leave
mov
lret
stos
or
movsl
scas
fmuls
push
push
xor
das
dec
mov
fcmovnu
adc
popa
fmull
mov
arpl
xchg
enter
mov
shlb
dec
or
mov
jae
mov
cmpsb
loope
in
lret
cmc
insb
loope
lret
cmc
insb
loope
lret
cmc
mov
jnp
lds
dec
jmp
pop
call
pushf
lods
push
or
adc
jl
nop
fs
push
outsl
mov
ficompl
xor
popf
imul
data16
bound
insl
and
jb
push
dec
jmp
stos
add
ljmp
dec
sub
std
std
outsb
subl
sub
pop
add
push
push
clc
xchg
or
sbb
push
test
adc
insb
lods
inc
sar
mov
cmpsl
cmpb
loop
pop
adc
inc
lods
and
sub
adc
data16
jo
scas
fisubrs
or
add
in
inc
fisttpll
lret
js
mov
inc
arpl
adc
add
push
into
jbe
outsb
add
outsl
adc
int3
daa
xchg
in
pop
in
arpl
stos
sub
or
cltd
test
ret
sub
out
cs
cmc
inc
dec
push
lret
jl
and
sub
ljmp
lds
mov
sub
loope
adc
mov
iret
sub
mov
push
jae
movsl
xchg
adc
mov
lret
dec
jb
mov
js
dec
push
outsb
insb
dec
mov
and
popf
popf
xchg
xchg
es
push
sub
movsl
push
lret
sub
push
data16
xchg
push
fisttps
lods
xchg
lahf
movsb
stos
sub
nop
lahf
rcrb
push
aam
push
lds
arpl
and
std
out
in
inc
pop
jo
push
mov
sub
push
dec
test
jp
enter
call
or
sub
xchg
dec
in
movd
int3
fistpl
movsl
mov
add
out
or
pusha
push
test
xchg
outsl
pop
shlb
pop
dec
xchg
push
push
dec
out
add
fidivs
mov
or
daa
or
jmp
jnp
aam
outsb
out
popa
lret
les
lahf
sub
in
aaa
lret
lods
jnp
outsb
xchg
and
insl
pop
insl
aas
cmpsb
push
les
cmp
adc
xchg
fsubs
xchg
xor
push
insb
mov
in
xchg
mov
dec
pop
inc
imul
add
daa
or
dec
cmpsl
mov
leave
dec
movsl
mov
mov
mov
xchg
test
scas
add
lret
mov
jnp
xchg
pop
popf
test
rorl
addb
mov
mov
adc
insl
mov
scas
jecxz
push
shr
int3
popf
cmp
pop
outsb
lret
xchg
data16
lahf
mov
aad
inc
ss
or
dec
lahf
daa
fmull
ret
cld
aam
and
std
mov
mov
loope
arpl
iret
popa
fcompl
aad
movsl
push
stos
mull
add
cli
pop
mov
pop
cld
stc
pop
sub
pop
fsubl
cmp
test
dec
dec
test
dec
test
fs
push
xchg
aam
das
inc
jle
mov
push
out
shrl
inc
outsl
sub
sbb
sub
shr
roll
mov
outsl
in
mov
and
mov
jbe
adc
repnz
adc
sbb
ljmp
pusha
inc
pop
or
test
stos
outsb
das
pusha
pop
xchg
movsl
sub
lret
mov
ljmp
lea
stos
shrl
mov
jo
jp
ret
rorl
and
pusha
xlat
adc
dec
push
call
fstpt
xchg
sub
dec
fisttpl
sub
pop
cmp
jp
pop
sub
in
bound
outsl
xchg
fs
inc
add
and
rorb
aad
lods
out
pop
xchg
xor
jnp
xchg
pusha
push
int
xchg
gs
dec
push
lret
push
pop
sbb
mov
fs
jnp
xchg
rcll
lock
push
mov
icebp
insb
sbb
mov
dec
cmpsl
cwtl
jecxz
sub
xchg
xchg
out
call
push
lods
sti
mov
arpl
aam
jmp
test
movsb
out
shlb
dec
popf
add
xor
aam
shrl
dec
cmp
lcall
cmpl
pop
push
ja
outsl
lods
pop
jne
dec
movd
xchg
imul
enter
popa
outsb
jbe
dec
push
dec
lods
scas
loope
or
cmp
popf
mov
jecxz
popf
lcall
mov
and
mov
outsb
jbe
into
push
int
cltd
lea
inc
cltd
in
jnp
push
outsb
test
mov
enter
add
shrb
insl
negb
jge
fisubl
cmpl
js
je
repz
inc
lods
scas
xchg
mov
fldenv
sub
sbb
fstpt
add
lods
dec
xchg
leave
jo
or
scas
push
cltd
adc
lods
loop
lret
scas
mov
pushf
add
arpl
ss
popf
jne
test
dec
xchg
push
sbb
lds
or
or
jnp
mov
cltd
sahf
test
jnp
lahf
lea
fnsave
pop
in
int
std
iret
in
mov
cmp
ljmp
loopew
mov
aam
sti
insb
mov
mov
mov
faddp
repnz
popf
clc
mov
scas
or
push
pop
dec
cmp
add
xchg
gs
in
cmpsb
add
lea
mov
cmp
arpl
adc
lret
bound
outsl
les
inc
sub
adc
das
cmp
inc
sahf
pop
mov
decl
and
jne
sub
clc
arpl
push
xchg
cmpsl
flds
push
out
inc
aas
mov
mov
dec
adc
add
ficoms
test
out
sbb
push
add
cmc
dec
push
dec
repz
sbb
lods
movsb
repz
lods
pop
add
pop
add
push
out
or
mov
gs
daa
ds
lret
mov
add
outsl
das
mov
lods
int
outsb
stc
or
jbe
inc
lea
outsl
or
jmp
mov
mov
xchg
js
xchg
lods
pop
cltd
stos
lock
dec
push
subb
pop
mov
push
mov
mov
cld
mov
pop
sbb
sub
jne
pusha
aas
cmp
adc
sbb
repz
push
xchg
push
adc
notb
inc
frstor
sub
xchg
push
xchg
pop
jl
pop
sub
cmc
outsl
cmc
and
out
push
aas
jmp
in
jns
stos
pop
xlat
repz
add
or
lods
fcoml
jae
cmp
push
repnz
in
in
or
dec
lock
inc
mov
mov
popa
ja
mov
cltd
or
sub
test
push
fs
out
fs
inc
push
ror
pushf
pop
in
cmp
sahf
fdivrl
cmc
outsl
cld
xchg
add
cld
int3
xor
xchg
outsb
or
jl
inc
sub
mov
inc
outsb
pop
dec
xchg
push
fwait
ds
sahf
push
pop
pop
lods
adc
jno
jb
pushf
in
decl
xchg
pop
into
subl
lds
lods
pop
in
push
xchg
lahf
movsl
cmp
in
xor
mov
movsl
jb
sbb
das
pop
xchg
push
or
insb
outsl
movsl
outsl
adc
sbb
movsl
outsb
ja
test
and
movsb
adc
sub
pop
push
pushf
adc
fnstenv
lods
clc
push
gs
mov
ret
xchg
test
sti
movq
das
add
xchg
and
dec
xorl
add
stc
das
adc
dec
push
sub
js
or
out
jb
or
pop
sbb
out
mov
jge
arpl
test
stc
xor
xchg
in
push
mov
dec
aas
cld
jno
aaa
jmp
sbb
adc
cmp
push
lret
cltd
pop
mov
ja
fcmovnbe
xchg
pcmpgtw
aam
mov
adc
movsl
mov
push
movsl
repz
jp
inc
mov
add
bound
std
aaa
mov
sahf
repnz
bound
loop
or
mov
sub
pop
and
xor
pop
pop
imul
adc
aas
bound
outsb
xor
lods
int
xchg
std
scas
inc
inc
sarl
push
or
lcall
fisttpll
cmpl
test
jle
push
pop
daa
js
dec
adc
fisubrl
ret
xor
or
rclb
in
ficompl
dec
fistl
imul
gs
fmull
popf
imul
sbb
imul
mov
iret
popa
and
mov
or
sub
testl
gs
push
cmpsl
mov
pushf
popa
icebp
movsl
outsl
cmpsl
jnp
jmp
sbbl
std
adc
mov
in
imul
jmp
fs
pop
dec
fnstsw
xchg
pop
push
and
dec
add
xchg
dec
sbb
out
das
cmpsl
and
btr
leave
push
in
loop
shll
xchg
mov
out
cs
out
xorb
mov
add
jmp
jnp
lods
dec
lea
and
aam
push
hlt
and
lret
adc
xchg
xor
mov
jle
shl
add
push
std
jp
test
and
leave
dec
xor
lret
lret
aas
pop
std
pop
xchg
pop
std
xchg
xor
xor
call
xor
int
imul
dec
and
dec
xor
subl
push
dec
out
fadds
push
push
sub
lret
aam
cltd
push
lods
repz
sub
cmp
mov
stc
mov
push
fildl
enter
lods
add
cmc
dec
in
shrb
dec
mov
test
push
jae
push
scas
ss
jne
jbe
mov
mov
push
dec
aaa
mov
hlt
imul
int3
mov
push
xchg
jecxz
popf
pop
in
mov
in
sbb
jg
imul
popf
arpl
xchg
mov
xchg
in
add
add
ret
lret
push
ljmp
jecxz
and
outsl
lods
mov
mov
mov
dec
ret
xchg
test
fldt
jge
scas
xor
mov
push
test
xchg
outsl
xchg
and
pop
cld
sbb
test
popa
xchg
jl
outsl
xor
or
enter
and
test
pop
cld
cmp
outsl
fcmovnbe
decl
mov
loope
int
ret
sub
xchg
mov
xchg
clc
pop
sahf
jns
pop
lret
das
xchg
adc
dec
pop
int
je
jle
sub
and
popf
lea
in
jecxz
lret
xchg
orl
or
dec
repnz
lcall
sub
orl
lret
std
repz
inc
sub
jb
push
mov
sub
inc
scas
cltd
dec
pop
pop
roll
dec
jp
xor
jns
sbb
dec
stos
sti
data16
mov
mov
imull
bound
fwait
add
cmpsb
cmp
data16
js
out
mov
ret
shrb
repz
or
mov
xchg
push
lret
clc
cmpb
loope
int
adc
dec
xchg
insl
aad
jl
xor
xor
sar
xchg
jo
fdivs
cmp
sbb
into
in
leave
sbb
push
movsl
push
pop
mov
test
test
xor
leave
fcoms
push
loope
popf
in
xor
pop
push
imul
outsl
mov
pop
dec
loopne
jne,pt
cld
sub
jo
fistl
jecxz
stos
or
in
mov
mov
and
lret
outsl
popf
mov
sub
ret
push
fmuls
jecxz
repz
pop
or
or
cli
hlt
adc
cmpsb
mov
std
and
sub
repnz
es
jno
xchg
test
push
stos
insb
mov
mov
cltd
push
rcrl
in
fstl
leave
pop
adc
popa
ljmp
mov
mov
andl
mov
pop
jo
in
inc
push
in
cmp
lds
mov
inc
xor
or
pop
and
stos
lcall
jo
imul
test
push
xchg
sbb
fdivrp
pop
outsb
fistps
mov
fistpl
mov
repz
dec
rcr
cmp
mov
dec
fdivrl
xchg
in
mov
cmp
cmpsb
push
lds
jbe
outsl
mov
mov
repnz
pop
dec
lea
pop
movsl
pusha
jecxz
xlat
es
fisubs
mov
movsl
lea
outsl
cmpb
adc
lret
sub
mov
push
xchg
enter
pop
pop
stos
stc
js
outsl
fiaddl
fdivrs
adc
aaa
adc
fxch
les
movsb
out
mov
in
jle
fstpl
loopne
jge
pop
pop
fs
fisubs
mov
mov
xchg
inc
inc
dec
jo
jmp
aad
outsl
mov
xlat
loopne
add
sub
stos
leave
xchg
add
sub
xchg
pop
loop
add
fmull
sbb
std
es
mov
push
mov
jge
jmp
fwait
add
ficoms
jmp
mov
clc
fsubp
int3
mov
cli
movsl
lcall
les
cmp
dec
push
stos
movsl
push
sub
xchg
out
imul
std
stos
add
xchg
ljmp
aam
in
jne
sub
adc
je
int
adc
je
clc
rorb
sbb
mov
sbb
inc
js
sbb
and
mov
loop
sub
iret
inc
jle
fs
jle
call
dec
out
stc
jmp
inc
aas
out
loope
jmp
mov
push
jbe
pop
push
mov
mov
pusha
movsl
movsl
ljmp
jbe
outsl
jge
sbb
imul
and
fbld
addr16
mov
mov
mov
je
pop
aas
xchg
aaa
rcrl
and
repnz
push
subb
insb
call
pop
sub
popa
fidivl
jns
orb
mov
std
shll
sub
test
push
pop
stos
ror
sub
push
adcb
or
outsb
mov
xlat
and
jg
mov
pop
or
push
sarb
mov
mov
pop
in
jmp
push
push
jge
lcall
ret
stos
dec
into
pop
lcall
mov
in
ret
cmp
loope
xor
jg
and
insb
pop
push
push
lahf
push
pop
push
leave
add
lds
fldenv
xchg
js
add
lcall
rcll
mov
mov
int
out
into
pop
sub
and
stc
dec
bound
stos
arpl
mov
cmp
jle
push
dec
fwait
ss
lds
inc
stc
add
dec
push
inc
and
pop
adc
cmp
popl
shrl
xor
pop
push
dec
adc
sub
outsl
jbe
jg
mov
sub
dec
sbb
imul
fcomi
das
imul
dec
lcall
stc
fsubr
jl
inc
ret
std
mov
das
inc
and
push
rol
stos
add
push
sub
mov
cmpsb
sahf
in
leave
les
call
shrl
xchg
mov
outsb
fldl2e
inc
pop
icebp
test
lods
enter
dec
xchg
scas
test
mov
inc
shrb
mov
add
cmp
adc
lret
lods
cmp
xchg
repnz
or
and
xlat
pushw
pusha
das
mov
push
inc
mov
in
mov
xor
clc
scas
in
jb
xchg
sbb
rol
arpl
push
jne
cmp
stc
mov
fsubr
arpl
popa
addr16
rclb
pushf
xor
mov
std
subps
loopne
ljmp
int
es
lret
outsb
outsb
bound
add
fstps
push
lods
loop
aam
frstor
jge
xchg
subl
outsb
jns
mov
test
pushf
lret
and
pop
call
adc
int
sub
lea
add
jge
in
flds
mov
std
dec
or
push
js
pushf
jne
and
mov
lahf
mov
lea
outsl
push
repnz
fstl
xor
js
jbe
cmp
and
or
shrl
cmpsl
dec
out
mov
sti
mov
mov
stos
sbb
xor
popf
xchg
decl
xchg
rcl
data16
mov
cltd
sub
call
mov
mov
lret
jb
mov
cmp
lock
pop
aam
jl
cmp
imul
cmp
add
dec
mov
test
sbb
cmp
sarl
adc
cli
arpl
push
or
iret
fadd
adc
out
in
xchg
repz
enter
mov
stos
or
test
adc
pop
and
mov
xchg
dec
into
push
lret
sbb
jmp
mov
push
and
insb
cli
jo
xchg
jmp
mov
xor
aam
test
icebp
int
inc
bound
orb
adc
fisubrl
inc
scas
data16
shr
mov
push
cli
jmp
push
cmp
mov
insl
pop
jno
push
adcl
loope
xchg
cli
xchg
mov
jmp
ss
imul
stos
call
inc
and
iret
lods
sahf
lahf
out
mov
bound
sub
cmp
jmp
and
inc
mov
cmpsb
jmp
inc
mov
pop
mov
sahf
repz
mov
out
test
inc
fmul
xor
dec
push
stos
out
jnp
sub
mov
add
mov
mov
insl
xchg
mul
push
sub
mov
mov
cmpsl
lret
sarb
jl
ss
xchg
push
xor
jnp
mov
in
sub
jecxz
popf
stos
push
mov
jle
xchg
adc
mov
xor
cwtl
loope
mov
pop
and
insl
int
pop
lods
xor
dec
mov
sbbb
sub
outsb
mov
xchg
in
bound
shlb
mov
jg
lds
xchg
jge
mov
and
inc
xchg
and
adc
movsb
or
test
jbe
out
sub
pop
repnz
sub
scas
dec
mov
jecxz
in
fs
icebp
inc
int
mov
loopne
sbb
xor
push
and
dec
sahf
popf
shlb
lahf
rorl
fimuls
cwtl
mov
dec
subl
arpl
sub
pop
test
int
push
and
cmp
and
pop
loopne
mov
pop
std
jl
lods
and
xchg
and
mov
lods
in
sti
and
mov
sub
jmp
cmc
mov
jp
sbb
scas
hlt
xor
std
es
dec
cmpl
xlat
in
notb
xchg
inc
dec
jl
push
pop
insl
mov
lods
dec
add
aaa
mov
pop
add
adc
xchg
jbe
stos
push
fdivl
sbb
jb
and
lret
cmp
push
pushf
enter
nop
repnz
jo
xchg
cmp
popa
lcall
movsl
mov
orb
lods
xchg
jecxz
icebp
in
js
ret
add
int3
rclb
shrl
setge
pop
scas
sub
jbe
push
mov
push
jle
sub
pop
add
push
sub
pop
push
xchg
pushf
shll
mov
lea
das
push
ds
jno
mov
addb
jno
xor
sbb
add
insl
in
ljmp
pop
mov
repnz
mov
jecxz
xchg
cltd
or
push
popf
stc
enter
and
fs
sbb
push
fdivrl
jl
push
lret
xchg
clc
fmull
insl
or
and
call
dec
add
xor
test
inc
jno
loop
mov
movsl
das
pop
and
pop
adc
aas
repz
cli
sub
int
lcall
jle
fdivl
or
in
and
test
lods
shll
dec
adc
inc
sbb
mov
jne
mov
sub
lds
push
dec
stc
push
int3
outsl
int
ja
dec
sbb
pop
imul
shr
ss
hlt
cmp
inc
fistps
inc
cmp
ss
dec
push
jnp
xchg
jge
popa
andl
aaa
repz
or
aas
fidivl
mov
add
loope
lea
icebp
leave
lahf
mov
cmp
cmc
adc
and
or
inc
dec
aaa
divb
inc
jle
cmp
lods
sub
mov
cli
dec
push
lods
nop
into
sub
pop
lret
frstor
push
push
dec
and
fwait
xor
outsl
mov
cltd
stos
repnz
cmp
inc
out
jne
iret
das
xchg
xchg
mov
xchg
push
xchg
dec
mov
out
cmpsb
inc
sub
sub
mov
mov
sbb
aad
cli
sub
xchg
fdivl
je
jmp
or
xor
mov
cmc
cmp
push
mov
xor
pop
sbb
stc
ljmp
in
or
sti
pop
lcall
push
push
in
lcall
leave
faddl
imul
andl
mov
shll
sarl
das
push
movsl
sub
mov
or
xor
xchg
add
or
inc
fdivrs
addb
fildl
test
stos
rcl
aad
cmp
adc
enter
in
test
jge
sbb
das
lods
push
call
xlat
ficompl
push
or
sbb
aad
sti
xchg
sarl
clc
add
clc
into
int3
call
pop
fs
sbb
sbb
enter
add
shll
jbe
fimull
jge
jecxz
movsl
fldt
mov
inc
mov
popf
idiv
out
pop
or
lret
filds
xchg
adc
aad
movsl
cmp
dec
mov
xchg
es
call
decl
gs
cmpsb
or
clc
inc
int
stos
inc
sbb
sub
or
fsts
shlb
jg
lret
or
leave
out
lds
aad
rclb
jb
add
lods
mov
fsubrl
ret
ljmp
dec
dec
fbld
andl
sub
or
icebp
push
gs
cmp
je
pop
popa
in
and
enter
cmpsb
js
iret
ljmp
outsb
xor
jbe
lahf
dec
xchg
int3
push
into
sahf
jl
or
popf
je
cmp
pop
ret
xchg
inc
outsb
ss
mov
jg
push
sub
push
xchg
cmp
push
xchg
test
mov
es
and
and
lock
icebp
iret
and
mov
pushf
jl
test
sahf
pop
and
mov
mov
inc
pop
push
sahf
jne
loop
xor
dec
xor
hlt
incl
in
add
jmp
repz
inc
sbb
mov
scas
pop
dec
mov
push
jnp
jne
sbb
jo
repnz
inc
mov
jno,pt
push
sahf
and
int
pop
sub
outsl
imul
imul
dec
fnstenv
call
out
pop
pushf
inc
iret
daa
cmpsl
dec
push
out
cmp
xor
or
dec
int3
pop
ja
or
daa
mov
xchg
in
push
dec
insb
pop
mov
or
sub
mov
mov
cmp
push
push
sbb
push
mov
push
mov
xchg
loop
daa
xchg
mov
test
jnp
and
in
mov
adc
xor
and
dec
sub
iret
xor
lds
cmp
jmp
jae
jns
pop
nop
xor
insb
insb
aam
cli
dec
mov
rcl
lret
mov
dec
dec
aad
fildl
cmp
push
push
xchg
dec
imul
aad
xor
in
inc
aam
mov
gs
mov
cmp
scas
jmp
mov
out
inc
outsl
outsb
stos
push
jecxz
and
das
fcmovnb
dec
in
lea
pop
push
lds
pop
mov
call
mov
ss
addr16
popa
ljmp
jmp
xorb
and
xorb
and
xchg
push
sub
stos
pop
mov
stos
lods
and
in
aas
cmp
ss
pop
daa
frstor
cwtl
outsl
add
dec
push
andb
outsb
push
cltd
push
dec
ret
fwait
jl
add
imul
pop
fsub
mov
mov
insb
loopne
pop
bound
std
je
dec
or
insl
adc
fildl
sub
dec
jno
pop
jnp
pop
lods
cli
das
sbb
cwtl
nop
sbb
fsubrl
adc
jg
ret
xor
lcall
cmp
xor
mov
inc
and
or
mov
stos
and
xchg
imul
cmpsb
mov
dec
cld
cwtl
lahf
sub
shl
pop
leave
outsb
sbb
add
sti
jbe
mov
push
sub
xchg
or
fdivs
movsb
stc
cmp
xchg
fimull
in
jecxz
xlat
test
les
cmpsl
mov
insl
pop
pop
push
sub
or
dec
gs
int
clc
sub
lea
mov
mov
outsb
pop
xchg
test
les
imul
mov
pop
insl
movsb
scas
and
subb
push
or
or
popa
inc
clc
lret
inc
insl
dec
in
movsl
test
subl
or
out
mov
add
pop
das
in
imul
and
cmpsb
popf
cmovp
or
pop
ret
pop
dec
insb
jle
push
or
in
dec
movsb
dec
xor
xchg
cmpsl
xor
fldl
jg
adc
add
in
add
xchg
jle
adc
jnp
mov
push
movsl
mov
sub
xor
mov
jne
repz
xor
xchg
mov
mov
stos
aam
inc
movsb
inc
andb
sar
dec
mov
sub
add
push
xchg
cmpsb
into
add
and
xor
leave
les
push
cmp
xchg
sti
mov
mov
ja
mov
jbe
out
cmc
testl
mov
cmp
call
sti
shrl
pop
inc
mov
fsubrs
stos
repnz
dec
mov
aad
xchg
out
inc
in
out
daa
daa
push
push
out
push
dec
sub
xchg
rcll
add
add
into
push
nop
popf
or
int
xchg
push
xchg
or
mov
xchg
sbb
inc
das
adcl
add
push
jns
pop
into
mov
pop
cld
cli
andl
arpl
fisubs
xchg
repnz
jbe
fnstsw
outsb
call
cld
into
clc
rcl
in
mov
fdivrs
jbe
pop
or
fs
mov
inc
lcall
mov
add
push
call
dec
mov
push
mov
addl
adc
outsl
and
push
mov
sub
les
mov
pop
push
outsl
aam
cmc
popf
insb
mov
ss
mov
outsb
xor
sub
scas
imul
aam
sarl
fnstenv
lock
mov
outsb
sbb
xor
sbb
nop
pop
and
inc
nop
lret
popf
adc
int
push
sub
add
xor
outsb
dec
mov
pop
or
sub
repz
jns
addr16
dec
mov
fistps
insl
bound
mov
into
cltd
cmpb
sub
ror
mov
mov
bnd
push
test
std
xchg
pusha
sub
ror
sub
lcall
notb
cltd
push
cmp
mov
out
add
cli
test
or
inc
stos
into
xchg
mov
push
in
ret
shll
in
inc
pop
repz
outsl
fs
pop
std
rorl
roll
or
mov
xchg
data16
loop
repz
in
jge
lret
sub
push
loope
pop
xchg
outsb
js
mov
cmp
orb
xor
cmpsl
lret
movsb
lea
insl
dec
mov
sub
sub
lea
mov
mov
push
pop
into
jne
inc
sahf
dec
pop
jle
push
js
jmp
aam
fidivrl
xchg
cs
xor
adc
sub
push
dec
xchg
xor
add
incb
sub
movsl
inc
push
xor
imul
cmc
sub
popa
scas
negl
adc
add
cmc
sub
adc
les
or
sti
imul
lods
sti
outsl
pop
xchg
das
stos
popa
test
mov
dec
push
stos
pop
dec
push
stc
xor
das
out
mov
subl
pusha
mov
int3
cmp
pop
add
jg
push
pop
adc
fildl
dec
outsl
xchg
dec
pop
mov
cmpsb
sub
insl
inc
xchg
adc
std
xchg
js
rorl
dec
sub
mov
jne,pn
push
enter
out
out
push
push
inc
pop
sub
inc
sbb
int3
cmpsb
inc
adc
daa
int
call
fcompl
ljmp
sub
ja
outsl
lods
inc
jnp
stos
add
in
cmpsb
dec
dec
scas
int
cs
test
dec
and
aam
popl
sub
fistps
mov
mov
push
mov
roll
cltd
mov
xchg
lods
jge
fadd
push
cmpsb
stos
jns
je
add
xchg
cmpsl
lods
sbb
shl
mov
xchg
xchg
pushf
cltd
jl
push
insl
lcall
jge
cltd
jmp
adc
dec
adc
inc
inc
data16
out
cli
sahf
leave
mov
adc
sub
sub
xor
mov
dec
pop
push
fisubl
jp
outsb
pop
test
xor
lea
push
loope
jnp
in
jno
lods
je
in
add
leave
js
je
cmpsb
stc
fwait
mov
push
xchg
pusha
cli
incb
xor
and
addr16
lods
sub
add
xor
outsl
fnstsw
scas
fs
xchg
jge
rorb
xchg
imul
and
cmp
adc
int
imul
ret
mov
dec
arpl
mov
iret
xchg
outsl
xor
scas
test
jno
scas
dec
iret
dec
mov
sub
sti
and
xchg
pop
pop
pushf
jl
and
mov
repnz
push
mov
xchg
shrl
call
das
xor
sbb
test
or
mov
sbb
es
inc
fmull
xchg
arpl
mov
inc
loopne
cmp
idivl
repnz
push
xchg
mov
int3
cmp
dec
xchg
push
mov
das
lods
outsb
stos
lea
popf
fiaddl
out
xchg
add
push
popf
lea
sbb
inc
data16
lds
push
sub
and
mov
icebp
in
jge
in
gs
stc
xchg
jg
sbb
aad
scas
and
mov
int
negl
lods
shl
adc
push
roll
fistl
cld
outsb
shrl
mov
sarb
pop
outsl
fidivl
mov
lcall
dec
shrb
dec
aad
push
shll
or
pop
mov
and
insl
test
push
cmp
call
dec
mov
pop
or
jne
mov
enter
mov
test
jp
in
int3
adc
outsb
and
dec
dec
mov
push
dec
push
and
int
pop
and
lea
ret
sub
mov
cmp
out
xchg
stos
orb
mov
pop
inc
jae
adc
cwtl
jbe
jne
cmp
add
out
fwait
insb
xlat
test
dec
jnp
xchg
cltd
pop
mov
mov
xor
mov
int
dec
cmc
pop
xchg
lods
push
jo
sbb
sar
push
or
add
pop
or
inc
mov
outsb
enter
popf
shll
and
in
movsl
add
adc
out
test
push
push
iret
leave
xchg
imul
jb
jg
inc
imul
scas
dec
cmp
dec
mov
and
sub
pop
insl
repz
stc
leave
adc
dec
cmp
sbbl
inc
mov
cmp
dec
shrl
imul
fnstcw
mov
push
cmp
ja
cmc
ja,pt
loop
fisttps
lea
and
sarl
test
xchg
rcl
mov
in
repz
add
iret
adcb
loopne
jae
mov
cmp
xorb
push
pop
lea
mov
das
pop
rorl
add
dec
gs
iret
outsb
add
jnp
add
imul
push
subl
or
or
lcall
dec
into
xchg
fsubl
jo
add
lret
repnz
rorb
int
sub
out
add
mov
gs
mov
lock
test
mov
fwait
inc
flds
push
mov
subl
jne
imull
sbb
jle
xchg
shll
addr16
and
pop
adc
fsub
mov
adc
jne
in
insb
add
fs
es
shrl
in
mov
lret
or
fldl
mov
sub
pusha
push
in
outsb
jge
or
jle
sub
jl
fsubs
test
xor
fstpt
mov
push
xorb
test
push
cmp
dec
lea
mov
xchg
xchg
jle
je
jmp
jecxz
popf
sub
stos
in
outsb
stos
add
scas
pushf
or
lods
pop
repz
jg
scas
subl
xor
jle
adc
jb
xchg
mov
ss
addr16
jle
stos
out
push
add
mov
into
lods
cwtl
and
mov
jnp
scas
mov
cmc
out
xchg
scas
adc
cmp
sbb
jmp
testl
mov
inc
mov
out
adcl
xor
arpl
jae
adc
out
ljmp
mov
and
jle
inc
push
jl
pop
mov
pusha
test
dec
cmpsl
add
cmp
ret
clc
jle
cmpsl
xor
gs
test
shl
negb
cmp
pushf
stc
xchg
and
cltd
and
shrb
and
xchg
xchg
sub
repnz
mov
scas
xor
lods
or
xchg
mov
in
sbb
adc
popf
sub
push
push
sub
lret
in
mov
pop
fdivs
rcr
jo
and
fmul
and
mov
mov
xor
adcb
push
xor
in
lret
mov
fs
fcoml
mov
lods
mov
sbbl
dec
xor
push
idiv
call
movsb
cmp
jnp
add
pop
inc
mov
lcall
xchg
cmp
sbb
push
aam
adc
mov
or
lcallw
or
int
pop
stc
mov
mov
scas
popf
lea
xchg
xor
jb,pt
repnz
sub
sbb
sub
loopne
jecxz
xor
sub
push
sbb
les
pusha
call
xchg
outsl
mov
push
push
int
xor
sahf
sub
js
mov
fwait
cmp
jg
cmp
mov
and
icebp
mov
hlt
push
dec
int3
scas
leave
dec
std
pop
push
nop
inc
xchg
xchg
aas
mov
popa
imul
pop
stos
imull
cmpsl
and
push
lds
mov
test
push
js
test
or
mov
and
les
dec
or
xor
pop
gs
inc
push
call
xchg
push
sub
add
fs
sbb
sub
jge
xchg
or
test
lea
lea
outsb
iret
outsl
ss
dec
subb
mov
xchg
loop
insb
and
inc
pusha
dec
xchg
js
sub
lods
adc
cli
add
cltd
push
out
bound
pop
and
dec
sbb
xchg
sbb
insb
xchg
imul
sub
fs
movsl
inc
aas
jmp
scas
sub
mov
lret
xor
pop
test
sar
ja
in
aad
adc
out
cs
out
or
mov
xchg
in
cmpsb
loopne
push
pop
fcmovnb
mov
dec
adc
icebp
punpckhwd
add
lods
mov
and
push
mov
mul
add
outsb
cmp
repz
lods
fdivl
insb
push
lds
mov
xchg
sahf
mov
or
mov
test
neg
dec
sbb
cmpsb
int
ss
movsl
pop
rcll
movsl
insb
lds
ljmp
dec
lea
ds
mov
or
shl
outsl
or
adc
jge
xchg
xor
pop
imul
cltd
lds
pop
lods
jae
lods
mov
subl
jge
ljmp
arpl
or
pop
adc
cmpsl
sub
mov
stos
das
lret
js
sub
or
leave
stc
popf
xchg
push
shrl
jns
mov
jl
pop
mov
bound
aad
mov
fists
scas
xor
xchg
fmull
fisubs
jl
xchg
push
xchg
ds
nop
in
cmp
sub
repnz
push
xchg
sub
sub
outsb
adc
pop
cld
jp
inc
test
xor
cs
xchg
repz
push
add
dec
sti
mov
jo
and
bound
fsubrl
stos
xlat
ja
cmp
mov
pop
push
push
dec
cmpsb
ret
dec
and
mov
push
sub
ret
int
cmp
mov
shrb
jecxz
lret
dec
mov
in
fidivl
sub
xlat
lret
popf
sbb
xchg
mov
sub
jbe
push
sbb
js
movsl
ds
push
ss
mov
lods
outsl
fstpt
fdivs
jmp
scas
pop
cltd
fucom
int3
insl
cmp
jl
add
sub
test
xchg
cmp
shll
adc
or
xchg
jl
insb
popf
xor
jbe
aad
push
pop
adc
xchg
ds
and
mov
and
push
mov
jecxz
fldt
fisubrs
pusha
push
xlat
int3
pop
xchg
pop
sbb
cmp
ficoml
ret
cltd
inc
leave
xchg
jl
fdivs
in
pop
dec
dec
ret
ret
js
out
int
xchg
test
lahf
xchg
sbb
jbe
out
iret
rcrb
es
daa
std
mov
push
cmc
les
mov
xchg
push
mov
sar
out
jge
or
push
cli
sub
addr16
cmpsl
aad
ficompl
xor
push
js
pushf
subb
xchg
idivb
repnz
pop
rorb
dec
mov
outsl
adc
dec
ljmp
scas
push
dec
pop
xchg
push
adc
fbld
lcall
and
imul
repz
xchg
push
sbb
sbb
cmc
push
decb
pop
insl
sbb
mov
ret
aaa
sub
push
mov
mov
fldl
push
pop
in
inc
push
dec
xchg
mov
sub
lods
sbb
enter
push
aad
repz
fwait
adc
loop
arpl
dec
or
insl
in
es
into
in
jo
cmpsb
stc
jmp
ret
push
dec
xchg
cli
aas
and
das
insb
push
scas
dec
cmp
es
cmpsl
pop
rcll
test
stos
cmpsb
mov
cmp
and
mov
pusha
bound
push
or
sub
mov
insl
stos
xchg
xchg
popf
cltd
jbe
stos
cwtl
movsl
es
ds
pop
xor
mov
test
sti
or
js
in
dec
outsl
leave
idiv
xor
sub
lret
adc
mov
sbb
add
mov
xor
dec
int
lea
lret
fs
and
jge
add
xchg
lods
and
cmc
sbbb
and
dec
out
or
dec
or
adc
ljmp
dec
cmp
cmp
push
loop
std
sti
sbbb
xchg
jmp
shlb
bnd
sub
xor
cmp
imul
xchg
shll
lsl
adc
hlt
jle
in
out
daa
xchg
or
test
daa
leave
cmc
lret
mov
out
pop
jo
push
cmpsb
aas
mov
sbb
cmp
cmpsl
loop
std
push
hlt
jle
pop
push
dec
push
outsb
push
lods
inc
sub
xchg
stos
mov
add
test
sahf
add
into
insb
ret
data16
int
pop
leave
mov
dec
mov
and
sub
pop
sbb
xchg
dec
sbb
inc
push
sahf
addl
lods
lret
movl
out
pop
push
pop
mov
data16
outsl
out
sub
das
jecxz
push
loope
fnstsw
sbb
push
in
mov
sub
das
pop
andb
test
test
dec
pop
or
cmpsb
lcall
add
push
imul
push
cmpsb
pop
int3
jecxz
test
ss
imul
dec
jl
mul
jp
mov
xchg
jp
out
sbb
dec
xor
lods
lea
xlat
popf
imul
lret
loope
js
andb
iret
mov
adc
subb
push
dec
pop
add
inc
xchg
lea
out
adc
push
mov
jg
icebp
dec
dec
cmp
mov
mov
jmp
mov
insb
fstl
jbe
sub
mov
out
cwtl
std
je
movsb
lcall
rorl
push
add
mov
xor
fistpll
inc
adc
movsl
dec
pop
ret
dec
sti
xor
outsl
bound
xchg
movsl
repnz
push
test
xor
loop
dec
sub
xchg
ja
mov
insl
sub
sub
dec
stos
jae
outsb
xor
ret
mov
push
xor
outsl
aas
cmp
add
sahf
subl
cmp
xchg
inc
repz
arpl
mov
mov
pop
xchg
fiaddl
xchg
outsb
loop
mov
dec
push
test
fnstsw
jmp
push
or
dec
out
in
into
xchg
sbb
lcall
sub
push
sub
push
sub
shll
fs
enter
fcomps
addr16
push
and
divl
and
add
outsl
dec
cltd
mov
dec
movsl
fs
mov
mov
imul
mov
gs
xchg
push
into
mov
std
mov
pop
jb
repnz
jbe
das
or
jl
jnp
mov
ret
test
jle
mov
cmc
loopne
sub
add
lea
add
repnz
aam
stos
neg
out
leave
iret
xchg
add
mov
decl
mov
and
cmp
adc
in
xchg
out
mov
dec
cmp
rep
adc
and
stos
ret
mov
pop
outsl
stos
mov
lret
ds
cwtl
pusha
rcr
xor
xchg
pop
jle
dec
add
xchg
popf
push
xor
xor
sub
rcrl
outsl
pop
insb
mov
fistps
or
mov
enter
pop
shl
or
mov
popf
jo
inc
fmul
movsl
mov
iret
mov
scas
xor
adc
fs
repz
mov
mov
xchg
in
pop
add
jne
push
sbb
mov
push
mov
add
or
in
inc
hlt
cltd
sbb
test
sbb
inc
pop
xor
in
inc
je
or
repz
daa
xor
xor
push
jle
xchg
cltd
push
aaa
mov
test
rolb
aad
call
pushf
xlat
mov
mov
mov
lret
xor
imul
sti
test
mov
rcl
pop
or
loope
or
gs
scas
dec
sub
push
popf
xor
add
shlb
loop
clc
mov
inc
mov
inc
iret
mov
jg
pop
repz
fstpl
aad
sbb
xchg
rclb
push
pusha
sub
pop
xchg
lahf
sub
dec
xor
stos
loope
and
push
pusha
es
movsb
sarl
xchg
pop
dec
add
mov
cwtl
gs
daa
lods
addl
cltd
aad
shll
or
mov
dec
fistps
inc
dec
gs
faddl
jns
mov
xchg
movsb
cs
pop
mov
test
sub
das
out
aam
xchg
dec
outsb
into
ret
dec
pusha
test
jne
jbe
out
dec
and
dec
mov
shlb
sub
loope
pushf
xor
pop
sub
sbb
scas
jle
push
cli
out
mov
push
outsl
jmp
push
lret
cld
movsl
outsb
jb
insb
xor
mov
imul
xchg
xchg
rorb
or
aam
jp
jmp
nop
dec
adc
aad
push
movsl
pushf
mov
test
xchg
xor
push
adc
push
mov
mov
outsb
loop
testb
cmpsb
ja
test
popf
sub
lahf
rcl
outsb
scas
push
mov
mov
outsb
pusha
imulb
orb
adc
repz
push
dec
jl
lods
mov
imul
mov
movsb
push
outsb
scas
mov
jne
popf
mov
std
push
push
dec
lods
push
mov
sub
or
or
cld
add
adc
out
cmc
push
mov
xchg
lods
jbe,pt
or
gs
popa
jp
pop
inc
jge
test
add
mov
pop
subb
pop
add
xor
dec
inc
or
xchg
ffreep
jecxz
or
hlt
cwtl
xchg
add
pop
outsl
dec
push
imul
dec
repnz
leave
dec
stos
icebp
jb
loope
movsl
cmpsb
ret
jbe
movsb
out
fs
mov
imul
and
scas
shll
loope
insb
int3
movsl
fs
inc
jmp
outsb
fs
xchg
aad
sbb
add
out
mov
xor
sub
insb
jo
jle
cmpsb
addl
mov
push
insb
jmp
popf
xor
adc
dec
jge
insb
and
stos
cld
movsb
push
dec
sub
fisttpll
pushw
dec
nop
sub
leave
stos
popf
push
xchg
jle
xchg
repz
test
cwtl
leave
mov
xchg
pusha
sbb
jne
in
cmp
push
and
mov
je
push
sbb
mov
lock
mov
arpl
lret
lahf
jo
xchg
aad
cmp
movsb
push
pushf
das
popa
and
stc
lea
jbe
test
js
ja
roll
adc
pop
out
push
jb
xor
mov
add
scas
imul
jle
xchg
popa
fcmovne
scas
scas
flds
cmpsb
mov
stos
push
pop
data16
test
stos
orl
mov
push
lret
mov
jecxz
add
xor
lret
mov
xchg
hlt
xchg
enter
mov
push
pop
sbb
lea
loop
adc
xchg
iret
int
das
cmpsb
jns
loopne
test
test
mulb
dec
sbb
mov
iret
sub
add
cwtl
sbbl
and
mov
movl
add
fnstsw
and
sti
std
cld
cmpl
or
xor
fs
out
xchg
popf
push
fdivs
outsb
loope
push
xchg
xchg
xchg
insb
test
outsl
leave
push
out
je
rcr
pop
push
add
out
push
push
cmc
movsb
inc
out
jne
imul
pop
mov
sub
and
shrl
scas
add
nop
insb
mov
or
push
pop
push
in
leave
mov
dec
shll
rep
sbb
call
lods
rcl
clc
push
hlt
aaa
jp
je
or
jo
lock
xor
mov
add
cltd
gs
or
js
fnstcw
lea
test
loope
loope
int
xchg
sbb
decb
std
in
insb
push
stos
test
and
sub
push
push
pop
std
pop
aam
leave
test
cmc
xor
cmpb
imul
in
push
filds
rcrl
inc
rcr
lds
out
add
mov
aad
mov
sbb
imulb
ljmp
add
leave
shlb
fs
jle
xor
es
add
test
jmp
xchg
mov
mov
xchg
inc
outsl
test
push
xchg
js
and
addr16
aas
addb
mov
xchg
mov
sti
hlt
or
jle
js
lods
sub
cmp
mov
nop
ja,pn
into
xchg
sbbb
add
iret
scas
xchg
jbe
xor
lret
mov
dec
test
or
add
insb
mov
sub
imul
in
mov
push
xchg
mov
mov
jbe
inc
add
addl
rcrl
jae
daa
dec
push
test
repnz
mov
pop
mov
mov
add
repz
pop
test
stos
movsl
lret
int
pop
xchg
add
hlt
lock
mov
lcall
aad
mulb
mov
movsb
jnp
add
mov
or
push
sbb
inc
dec
cmp
movsl
repz
mov
xchg
jge
xchg
stos
cltd
and
cltd
or
mov
or
aad
sub
mov
int
and
push
push
stc
xor
or
scas
cmpsb
addr16
scas
xchg
lahf
icebp
int3
in
ljmp
scas
test
fdivr
mov
mov
stos
insb
adc
popa
add
test
or
mov
aad
cmp
jnp
fisttpll
jg
subb
mov
les
mov
pop
mov
lds
testb
loope
or
out
jns
gs
stos
jmp
push
sub
cmpsl
bound
push
pop
pop
xor
les
inc
lea
push
pop
jge
js
or
movsb
adc
aam
sub
xchg
outsl
dec
in
adc
fldt
paddq
out
pop
scas
and
pop
xchg
pushf
jmp
stc
jnp
adc
push
scas
in
les
pop
pop
test
sub
mov
jmp
outsb
aam
loope
push
test
imul
insb
mov
lock
iret
aaa
mov
movsl
xchg
mov
decb
insb
xor
aad
negb
ja
ficoml
insb
xchg
adc
dec
fucomp
xchg
add
sub
mov
cmpsb
jge
nop
rorl
dec
test
sub
mov
jnp
xchg
movb
mov
pop
ja
shlb
mov
adc
cltd
xchg
daa
sarb
push
mov
arpl
adc
mov
mov
cltd
shll
scas
addr16
es
mov
jmp
cmp
dec
pop
or
push
out
inc
subl
daa
cmpsl
mov
fcoms
andl
cmpb
jp
dec
orb
mov
and
sbb
repnz
push
xchg
fs
mov
daa
mov
rcll
pop
nop
daa
rorb
mov
outsb
dec
popf
jbe
outsb
sub
jbe
cltd
add
movsl
rclb
pusha
xchg
add
sub
icebp
sbb
outsb
stos
add
inc
xchg
popf
lea
jle
std
pop
daa
das
inc
cmpl
packuswb
aas
pop
leave
scas
mov
jo
inc
iret
push
mov
pop
mov
jle
mov
push
mov
mov
mov
sub
mov
pop
dec
test
inc
sub
pop
sub
lock
xor
push
aaa
sbb
or
or
pop
mov
dec
add
in
xor
sbb
xchg
sbb
xor
sub
xor
movsl
lea
add
outsl
daa
xchg
fwait
cltd
pushf
lahf
pusha
sahf
xchg
aam
pop
sti
xor
popa
lret
mov
mov
add
in
adc
jbe
add
cmp
fwait
andl
push
addr16
gs
and
push
gs
push
lds
js
xchg
xor
je
push
cli
or
dec
stc
jno
std
dec
das
mov
or
sbb
cli
cmp
xchg
and
cmp
popa
shlb
nop
sahf
orl
mov
inc
outsb
jp
ret
sahf
mov
insb
mov
stos
lock
ja
push
and
dec
inc
pop
cmp
push
dec
push
out
jno
push
xchg
shrd
shrd
mov
mov
mov
outsl
into
jle
inc
lea
std
pushf
xchg
test
inc
cld
out
aaa
movsl
scas
inc
repz
pop
cmpsb
ljmp
sbb
dec
and
arpl
dec
lds
cmp
xor
insb
fstl
push
sub
dec
dec
lahf
xor
sbb
aaa
daa
xchg
out
xchg
je
and
sub
pop
aaa
into
in
add
fwait
jb
or
sub
jge
imul
jle
aad
dec
lods
lea
outsl
aad
outsl
sub
icebp
mov
mov
cli
in
dec
insb
cmp
hlt
insl
xchg
mov
std
pop
inc
jmp
in
push
jb
outsb
popa
xchg
outsl
jg
pop
inc
jb
xchg
insl
xor
outsw
ret
sub
inc
pop
cmpsb
rorl
mov
cmp
addr16
xchg
stos
outsl
sbb
push
decb
dec
jnp
cmp
cwtl
xchg
adc
push
xchg
inc
xchg
cmpsb
adc
push
push
cmp
and
shlb
mov
aad
mov
fisubs
add
ss
push
sbb
inc
adc
sub
sub
or
lret
sbb
mov
jnp
notb
fwait
outsl
jge
jle
pop
xor
enter
sub
aam
sahf
es
imul
lret
xchg
ljmp
sti
or
leave
test
inc
lret
imul
and
dec
xchg
xchg
jbe
mov
xchg
ss
icebp
fimuls
push
and
or
stos
xor
xchg
mov
fisttpll
ss
pop
xor
sub
int
fcoml
jecxz
dec
out
dec
addr16
das
lods
int
scas
mov
scas
jecxz
adc
lds
mov
xchg
or
add
mov
push
insb
xchg
stc
sub
test
in
lret
mov
sti
jo
test
sub
mov
push
jmp
pusha
cmp
and
outsb
faddl
in
fwait
mov
jg
sbb
int
mov
push
sbb
jl
dec
push
addr16
das
mov
fmul
test
and
fisttpll
mov
data16
lret
popf
pmulhw
pop
les
jmp
call
mov
mov
cmp
xchg
jle
xchg
xchg
dec
xchg
jne
sub
xchg
cmp
push
int
cmp
icebp
out
mov
jmp
pop
lods
sub
pusha
sub
jle
sahf
lcall
mov
jo
cmp
out
xchg
xchg
arpl
aam
in
pop
in
sub
fnstsw
add
aas
sub
sbb
mov
sahf
add
shl
pop
dec
lods
das
adc
fimull
es
sbb
jmp
dec
jmp
pop
sub
xchg
leave
call
js
sub
xor
sub
std
shrl
adc
push
mov
bound
je
push
aam
fsubl
sub
loop
in
bound
lea
or
nop
lea
mov
ret
mov
cltd
rolb
imul
imul
add
out
lret
dec
insb
dec
arpl
mov
pop
xchg
das
repz
andl
jbe
subb
add
dec
cmpsl
sbb
add
out
shrb
iret
xor
divb
inc
jecxz
pop
fbld
sub
pop
test
repz
xorb
dec
aad
adc
scas
into
push
cmc
mov
lea
call
adc
pop
lods
js
xchg
aad
add
jnp
cmp
sub
mov
lea
and
ljmp
inc
jp
sbb
cmp
les
outsl
ret
leave
out
xchg
data16
je
out
out
movb
add
scas
insl
lret
mov
in
push
push
into
mov
push
mov
popf
cmpsl
dec
outsb
xor
xchg
pop
out
sub
push
sbb
dec
jne
cmp
movsb
aaa
outsb
fsubr
mov
lea
pop
jnp
inc
and
mov
fst
stos
lahf
outsl
fistpl
insb
pop
add
outsb
sub
scas
test
dec
xor
mov
fstps
sub
lock
outsb
push
aad
lea
dec
or
in
bnd
dec
jecxz
push
push
movsl
js
pop
lds
and
sub
sub
stc
mov
xor
sub
add
jns
mov
shrl
fstl
push
xlat
ss
xchg
sub
test
test
push
in
bound
fsubrl
jnp
mov
push
test
scas
or
and
mov
or
leave
mov
fistl
test
inc
fdivl
ret
das
and
shll
xlat
fisubrs
mov
and
and
cs
call
fcmovu
sbbb
xchg
inc
pop
pop
xchg
nop
popf
lret
dec
in
mov
dec
sti
fs
push
sbb
dec
xchg
push
outsb
add
pop
push
or
fsubl
push
int3
daa
repnz
movsl
jl
imul
xadd
sub
adc
mov
in
mov
push
push
sti
dec
test
rcl
pop
xchg
popf
pop
add
mov
sub
movsl
leave
bound
jmp
jmp
xchg
push
insb
sbb
pop
fxch
dec
dec
xchg
or
shrl
push
pusha
lret
xor
xchg
or
loop
mov
add
xchg
xchg
js
shrl
dec
pop
mov
fprem
sub
jle
ds
mov
jae
jl
push
pop
inc
stos
cli
fwait
in
cmpsl
enter
pop
xor
mov
int3
inc
fdivrl
cmp
mov
mov
sbb
out
fisttpl
jo
adc
sub
loop
mov
js
fwait
ds
fimull
cmp
inc
leave
jp
popa
int3
jmp
dec
ds
dec
add
into
jle
sub
add
cltd
jle
arpl
and
fcmovbe
mov
scas
xor
push
add
adcb
cmpsb
stos
lock
mov
ret
ret
push
repnz
aaa
les
dec
sub
jl
or
sbb
jle
aas
jne
shl
xor
adc
push
aas
aas
gs
pop
fcompl
outsb
dec
xchg
push
dec
insb
adc
in
fdivl
pusha
xor
and
rcr
enter
lods
mov
fmul
lods
iret
xchg
movsl
add
inc
cmp
fsubrl
lock
cmpsb
and
aad
scas
and
inc
sbb
das
ds
fdivr
out
push
paddsw
cmpsb
jb
jl
add
xchg
stos
lret
aam
or
jmp
aam
jle
mov
jle
mov
inc
jle
mov
sbb
fisttpll
adc
push
repz
addb
cmp
mov
sti
jge
movsl
frstor
dec
shrb
inc
imul
cwtl
xor
cmp
lahf
sbb
cmpsl
dec
scas
movsl
or
stos
lcall
push
lock
jnp
fildl
jnp
push
mov
popf
inc
add
xchg
lods
adc
lcall
lea
fs
stos
lret
in
sub
push
jbe
dec
lea
subb
leave
loopne
cmp
lock
jp
xchg
cmp
mov
mov
pop
out
dec
dec
mov
adc
fwait
mov
xchg
dec
addr16
mov
in
and
pop
lods
mov
repnz
out
dec
test
jne
pop
ljmp
inc
ljmp
or
outsb
add
lret
test
mov
lds
pop
in
dec
mov
clc
test
into
sbb
mov
cmc
jl
loope
adc
mov
lcall
xchg
lds
push
dec
mov
pop
mov
jne
outsl
test
add
push
jle
cmp
or
mov
and
imul
or
shlb
dec
lret
jae
int3
sbb
xor
mov
mov
push
xchg
mov
xor
dec
push
jns
pop
orps
xor
dec
mov
mov
cs
add
stos
jecxz
lods
or
cmp
repz
push
outsb
dec
lret
test
sbb
insb
inc
arpl
aam
pop
stos
push
push
mov
int3
and
fisttpll
fdivrp
inc
mov
dec
shrb
loope
push
adc
fcomps
add
outsb
lds
push
test
dec
mov
repz
push
popf
mov
mulb
fwait
push
in
lret
addr16
insb
xor
outsl
mov
mov
test
leave
pop
dec
sahf
jle
pop
int
cmp
mov
dec
pop
jo
pop
cmp
push
push
add
mov
movsb
mov
pop
jle
in
insl
movsb
outsl
push
movsb
leave
pop
mov
rcll
jne
cmp
xor
sbb
sahf
inc
out
pusha
fwait
and
mov
daa
loopne
into
test
in
jecxz
in
pop
and
cmpsl
jle
int3
mov
mov
popf
outsl
enter
outsb
movsl
cmp
movsl
pop
sub
adc
cmc
inc
scas
inc
shl
je
push
ss
aam
mov
mov
bound
jne
daa
xorb
in
fstpl
out
out
pop
aam
frstor
push
push
fs
and
lods
adc
mov
xchg
inc
xor
and
imul
cmp
jmp
frstor
push
sub
inc
loope
push
sub
mov
fidivl
in
lret
fstps
in
sbb
adc
js
nop
and
jmp
push
lods
orb
in
jl
push
mov
shl
mov
loope
icebp
fstp
pop
es
dec
test
pushf
lods
push
push
out
clc
push
insb
adc
shlb
dec
dec
out
adc
bound
xor
mov
inc
pop
stos
jmp
sub
jl
ror
int
hlt
sub
adc
push
xor
pop
shrb
fwait
lea
jnp
sbb
push
xor
pop
push
or
mov
orb
mov
lods
push
jo
in
outsl
jno
lods
push
lea
fisttpll
fbstp
push
push
push
aaa
cwtl
pushf
dec
imul
out
sub
cltd
sti
cmp
aad
push
aad
push
cmp
xlat
pop
xchg
sub
adc
pushf
setl
movsl
pushf
xor
sub
int
cwtl
jecxz
les
jmp
push
clc
leave
dec
mov
and
nop
leave
test
popf
jle
inc
rorb
popf
adc
mov
cmp
mov
xchg
mov
and
cli
jne
add
add
notb
fwait
in
fwait
cld
and
dec
add
arpl
dec
xor
xchg
lret
dec
xchg
jb
cmp
jbe
pop
cmpsl
xchg
xor
pushf
outsb
shlb
or
loop
and
adc
pop
repz
outsb
lcall
fstl
call
cmp
js
mov
jbe
pop
sbb
ds
xor
xor
jecxz
jge
inc
mov
xorl
int3
sbb
push
and
dec
addr16
pusha
in
stos
test
add
inc
les
and
xchg
imul
test
pop
bound
mov
fs
mov
repz
sub
in
cmp
cli
adc
dec
adc
fisubl
daa
loop
jbe
pop
push
sub
incl
scas
stos
bound
xchg
test
and
fwait
cltd
fistpl
pop
sbbl
and
inc
mov
int
dec
sbb
adc
std
sub
pusha
movsl
negb
das
mov
cmp
add
insl
dec
xchg
mov
dec
lds
lcall
jg
stos
es
es
cmp
or
xor
shr
inc
sub
lret
xchg
mov
sub
adc
fimull
mov
loope
shrb
cld
add
mov
test
out
jbe
mov
fsubrs
in
xchg
lea
mov
jp
cmpsb
sahf
in
adc
aas
aad
mov
in
enter
fnstsw
xchg
in
vpavgw
inc
mov
mull
loope,pn
or
ret
xor
aaa
stos
loope
xlat
or
pop
xchg
sahf
das
add
push
dec
inc
mov
jo
jns
icebp
popf
xchg
cmp
dec
bound
lods
dec
pop
cmp
ror
pop
subb
shl
outsb
cmp
jp
mov
jbe
push
cli
mov
xlat
repnz
jl
sbb
jl
or
pop
in
cmpsl
call
pop
aas
mov
cmpl
ss
into
out
fs
add
je
dec
pop
insb
dec
popa
cmp
dec
sti
and
dec
call
decb
push
jge
movsl
fimull
lea
pop
pusha
rolb
add
add
mov
out
xchg
sub
out
dec
lock
sbbl
mov
pusha
stc
pop
movsl
dec
outsb
dec
sub
dec
jne
push
pop
jmp
adc
pop
test
out
test
xchg
aad
xlat
outsl
cmp
scas
stos
xchg
jle
xchg
sbb
test
aaa
popf
sbb
xchg
insb
xor
aas
es
inc
push
jp
xchg
mov
xchg
std
fcmovne
or
push
popf
xchg
lahf
xchg
xor
xchg
dec
and
xchg
adc
and
sub
in
in
fldln2
dec
sbb
push
adc
push
out
mov
test
cmp
dec
xchg
mov
jnp
adc
push
sub
or
inc
rorl
mov
loope
mov
jecxz
mov
lahf
and
pop
inc
and
pop
repz
cmp
xchg
pop
outsl
jbe
mov
add
sub
mov
dec
shrl
imul
movsl
aam
inc
rcrl
cmpsb
es
pop
or
xchg
test
jle
std
scas
int
cmp
outsl
rorl
ret
nop
in
mov
or
dec
int
cmp
xchg
out
push
or
dec
xchg
mov
fmul
inc
shll
pusha
fimuls
bound
lcall
sub
jle
cmp
mov
or
int
dec
outsb
insl
mull
push
sub
mov
outsb
xor
pop
cmpsb
push
add
jmp
sub
pop
test
gs
lret
les
fwait
inc
icebp
movsb
sub
dec
lods
or
mov
arpl
js
data16
jmp
push
push
mov
or
pop
decl
mov
je
pop
mov
lods
mov
jb
scas
jbe
das
xchg
lea
dec
sub
jb
sub
shrl
int
repz
push
shlb
push
in
jl
aam
adc
lea
mov
push
rorl
in
subb
inc
pop
inc
roll
jl
sub
fisttps
jnp
pop
movsl
movsb
push
stos
adc
dec
addb
dec
fsubrp
iret
aad
sahf
push
adc
fdivr
lret
js
dec
loope
dec
imul
rolb
xchg
cltd
in
lds
not
test
dec
or
mov
mov
daa
inc
stos
push
adc
lret
loope
popa
sbb
inc
icebp
xchg
lods
jne
scas
jg
test
xor
mov
ss
test
jp
xchg
and
mov
mov
cltd
cmpsb
int
call
decb
mov
xchg
aas
mov
or
sub
inc
lea
dec
dec
mov
mov
incb
imulb
fadd
daa
push
push
jmp
add
inc
and
xchg
pop
jmp
mov
sub
xchg
cltd
xchg
jp
cmpsl
xchg
int3
cmpsb
xchg
gs
sub
rcll
daa
inc
stos
or
popa
dec
mov
in
outsl
jo
cmp
adc
cmpb
mov
inc
add
arpl
in
pop
xchg
fidivrs
cmp
inc
lods
adc
sbb
sbb
dec
pop
and
mov
and
icebp
push
outsl
xchg
iret
xor
and
pop
fs
loop
outsw
mov
lret
push
stos
test
test
add
cltd
ret
push
and
je
jp
and
mov
cmpsb
fcoms
mov
nop
pop
jns
int
mov
gs
outsb
xor
daa
rclb
push
adc
inc
lods
test
stc
adc
push
xchg
rcll
in
test
imul
andl
push
rorb
movsb
xchg
mov
loopne
cli
jle
pop
add
bnd
cli
mov
std
gs
inc
xchg
inc
loope
or
lea
orl
cltd
inc
xor
daa
push
popf
shrl
mov
bound
cmp
jmp
stc
sti
stos
cmp
pop
dec
lsl
movsl
adc
pop
dec
into
insb
shll
out
pop
movsl
jb
cmp
cmp
inc
ds
cli
jbe
mov
out
xchg
aaa
mov
sub
out
add
pop
outsb
mov
or
in
lea
std
push
xchg
lds
sub
fisubl
pusha
pop
xchg
mov
jb
enter
and
bound
pusha
mov
sub
outsl
cmp
cmp
mov
inc
addr16
sub
rol
or
or
push
out
xlat
mov
pop
pop
cs
dec
fwait
push
outsl
xor
cli
push
lcall
in
add
out
sub
pushf
sub
xlat
xchg
jbe
mov
imulb
popf
movsl
add
inc
bound
das
or
push
adc
jle
and
clc
add
mov
adc
cmp
mov
dec
xchg
sub
cmc
icebp
pop
out
cli
inc
adc
sbb
into
jp
mov
xor
add
pusha
push
dec
leave
cld
mov
adc
cli
pop
xchg
cmpsb
leave
test
adc
inc
test
leave
test
enter
cmp
xchg
pop
xlat
mov
nop
test
jbe
add
add
xchg
sbb
in
enter
hlt
test
loop
jl
test
addr16
mov
scas
ret
dec
mov
incb
into
notb
adc
jg
stos
inc
rcll
ret
inc
ja
lds
sub
mov
stos
bswap
aad
push
test
inc
sub
shl
jecxz
cltd
xchg
movsl
and
dec
imul
test
clc
push
sahf
movsb
dec
call
jl
jbe
dec
lods
mov
scas
cmp
outsb
ss
dec
popa
sub
mov
test
add
add
pusha
test
out
cmp
dec
sub
movsl
stos
outsb
mov
inc
jle
dec
push
mov
pop
les
insb
push
rcll
inc
sbb
dec
ds
xchg
ljmp
cli
movb
aad
int
nop
ret
ja
loop
inc
and
lods
inc
in
mov
shrl
mov
addr16
out
xchg
int
xchg
stc
int
cmp
xor
stos
in
mov
movsb
popa
in
jns
add
pop
sub
lahf
hlt
insl
stos
sub
repz
jb
insl
addr16
loopne
xor
mov
cld
out
push
and
lods
imul
lcall
mov
test
sti
adc
mov
dec
addr16
sbb
sbb
mov
adc
dec
mov
cli
stos
xchg
testl
shrb
rol
xor
hlt
loop
clc
pop
jo
push
sub
inc
es
and
lods
mov
sbb
popf
adc
popf
fwait
add
addb
frstor
aad
and
lret
jecxz
mov
icebp
pusha
stos
mov
push
repnz
sub
mov
les
fs
insb
out
ss
push
inc
mov
jg
push
mov
mov
cwtl
sub
scas
mov
stos
dec
jl
outsl
aad
lds
xchg
add
divl
out
shrb
mov
lea
insb
stc
mov
dec
in
cmp
xor
dec
push
push
jns
movsl
dec
sub
push
dec
mov
shr
dec
push
int3
rcrl
lods
jae
fwait
mov
lea
scas
arpl
fcomip
sub
incl
sub
adc
int
or
fdivl
jle
mov
push
ja
test
or
cmp
push
test
leave
dec
mov
adc
jae
jle
and
xchg
xor
or
pop
sbb
cltd
mov
pop
jge
xor
inc
cmc
or
leave
inc
mov
mov
and
data16
mov
sbbl
mov
ss
mov
in
lods
and
test
cwtl
adc
fisttpll
fildl
jg
adc
mov
jbe
aad
sub
bound
mov
dec
out
sub
mov
inc
movsb
dec
add
mov
inc
mov
fcompl
repz
dec
push
jl
jg
pop
sbbb
subb
lds
dec
xchg
mov
cwtl
xor
mov
cmp
shll
popa
push
and
stc
jecxz
outsb
mov
stos
dec
mov
dec
jle
ret
loope
repnz
ret
xchg
shrb
adc
jb
dec
insl
jbe
out
and
sub
es
pop
lret
repz
inc
mov
dec
loope
leave
inc
pop
mov
and
repz
sbb
dec
and
inc
dec
int3
push
bound
sbb
loopne
arpl
push
xchg
mov
fstps
repz
scas
or
cmp
sti
repz
xchg
mov
mov
xchg
lds
repnz
sbb
shr
jne
sub
jle
adc
dec
jg
xor
push
movsl
popf
push
push
int
bound
out
fidivl
xchg
inc
push
dec
cli
test
xlat
out
xchg
mov
sub
scas
push
in
movsl
or
push
jne
sub
gs
test
and
into
je
xchg
sbb
int3
lods
mov
sub
in
push
lret
roll
mov
mov
mov
sti
insb
mov
fisttps
xchg
sub
inc
daa
xor
and
jecxz
mov
repz
dec
mov
push
cmp
push
mov
pop
nop
lcall
je
pop
cmpsl
je
mov
scas
out
out
mov
mov
cmp
or
mov
mov
mov
addl
mov
movsb
test
lret
jbe
push
or
or
aam
push
das
es
xchg
xchg
mov
push
inc
fstpt
add
cmp
movsb
js
out
dec
sbb
cmp
fs
shrl
and
mov
add
cmpsl
cmp
sbb
inc
inc
jecxz
push
push
jp
loope
jns
dec
mov
adc
xorl
xchg
movsb
push
mov
popa
pop
movsl
pop
in
or
mov
inc
data16
mov
dec
xlat
cmp
out
out
mov
imull
cmp
mov
inc
pushf
imul
test
aad
jecxz
dec
rcrl
insb
sbb
imul
mov
sbb
push
dec
or
mov
rorl
sub
dec
pop
mov
repz
xchg
inc
cmpsl
aam
adc
outsb
mov
jb
js
dec
add
ss
push
pop
leave
sub
mov
aad
out
cmp
pop
popf
inc
aad
adc
jp
scas
mov
or
dec
insb
out
gs
pop
dec
iret
push
dec
mov
cli
mov
fcomip
out
das
fsts
std
outsl
pusha
test
pop
mov
test
insl
popl
movsb
mov
mov
int
mov
push
test
fwait
jl
lret
adc
das
repnz
push
mov
js
xchg
movsl
push
ja
mov
sahf
push
inc
pop
pop
dec
xor
lds
lret
jl
sbb
pop
mov
jns
lods
xchg
mov
mov
aam
in
shll
mov
sbbl
push
lds
cmp
pop
push
jg
push
xor
jecxz
lret
dec
cmp
pop
or
stos
pop
pop
jp
jp
mov
fsubr
jne
and
addr16
cli
xor
dec
sarl
movsb
adc
inc
mov
divb
sbb
xor
test
fwait
pop
outsl
jb
push
popa
mov
je
scas
fwait
sbbb
stos
ror
add
imul
pusha
shll
stos
pop
xchg
jecxz
mov
out
insl
push
call
cmpsb
sub
data16
lret
or
or
cltd
icebp
jmp
insb
sahf
adc
imul
in
clc
inc
dec
loop
xchg
xchg
pop
inc
pop
in
add
push
add
jno
lret
lcall
cmc
mov
sbb
jns
cmpsl
mov
ficoml
and
stos
outsl
or
addr16
jne
jo
mov
mov
pop
and
ja
xchg
dec
outsb
jge
mov
scas
inc
std
xchg
dec
mov
stos
sti
xor
jo
aad
test
lret
test
aad
das
sbbb
add
jg
jl
int
or
nop
movsl
outsb
repz
test
or
cmp
push
stos
jl
xchg
nop
aam
aad
cmp
insb
adc
ret
cmp
jle
or
cmp
lods
dec
pop
lret
xchg
mov
sub
sub
into
xor
dec
js
idivb
fistps
xor
mov
ret
cmp
jl
and
mov
scas
cmpsb
mov
dec
jg
movsw
rcll
jle
jl
jl
or
es
sahf
xor
sub
pop
scas
xchg
fwait
lds
fmulp
jo
orb
cmpsb
test
frstor
pop
nop
out
inc
out
mov
lahf
outsb
push
test
cmp
inc
stc
push
adc
xchg
lret
cltd
aaa
aam
push
or
jns
ret
hlt
or
add
fsubrl
in
cmpsb
jmp
dec
pop
outsb
cmp
mov
enter
sbb
test
sub
sub
xchg
pop
movsl
shrl
int3
cmp
popa
stos
mov
inc
rcll
in
in
in
loop
aaa
xor
sahf
add
xor
into
outsl
popf
ds
mov
arpl
rcrb
shll
lods
jns
dec
ja
rorl
mov
jge
mov
inc
and
lret
pusha
push
ds
fs
inc
popf
xchg
out
fimull
mov
push
fsts
iret
cltd
popa
in
and
jge
dec
dec
addr16
mov
add
mov
dec
fldenv
in
pop
in
xchg
sbb
jg
in
popf
lcall
xchg
test
bound
jne
fwait
lahf
jns
popa
jnp,pn
xor
sub
hlt
fimuls
out
sub
cmp
out
sbb
sar
add
pop
fisttpll
inc
gs
out
jl
outsb
ret
jl
dec
in
popf
push
outsl
in
pop
lret
fwait
pop
sbb
xchg
or
pusha
pop
sbb
in
adc
scas
jne
leave
cmp
jge
fwait
xchg
push
xchg
xchg
js
pop
daa
outsl
xchg
js
mov
int3
cltd
dec
add
addr16
outsl
pop
mov
movsl
push
mov
movsl
shl
xor
mov
dec
pop
or
subb
movsl
imulb
xchg
sub
pop
jmp
clc
xor
addb
outsb
mov
out
insb
pop
insl
mov
push
sbb
jbe
mov
add
xor
or
lods
insb
scas
sub
imulb
lods
arpl
dec
inc
out
gs
iret
jbe
mov
adc
mov
sub
imul
push
in
and
cmp
cwtl
jle
xchg
arpl
push
xchg
test
inc
popf
xchg
nop
sbb
in
xor
das
push
inc
and
in
ljmp
inc
cmpsl
mov
xchg
inc
and
loop
push
dec
imul
mov
subb
add
mov
xchg
pop
xchg
rorb
push
mov
push
dec
cmp
test
jno
in
setae
cltd
push
dec
jmp
lcall
into
mov
test
arpl
jmp
dec
lea
mov
lret
dec
subl
sbb
dec
fdivs
mov
push
mov
mov
adc
jo
pusha
lret
mov
push
data16
pop
xor
fisubrl
stos
outsb
outsb
jmp
outsl
cltd
xor
sub
lods
lret
mov
lret
aas
jp
jnp
mov
movsl
dec
stos
insb
mov
lods
insb
insl
xor
aam
data16
pop
mov
jmp
lcall
mov
int3
loop
int
int3
sub
test
stos
cltd
xor
sub
lods
add
add
or
dec
pop
movsl
iret
dec
cmovg
jbe
icebp
movaps
lcall
movsl
in
insb
mov
xor
sub
sti
mov
inc
icebp
fs
aam
inc
pop
std
push
mov
mov
les
push
mov
mov
xchg
sub
lcall
divb
imul
sbb
jo
pushf
push
cmc
sub
sub
ss
cmc
xor
and
dec
cmp
repnz
setle
leave
cld
std
out
dec
sbb
ds
xor
and
dec
int
push
push
pop
lcall
lret
outsl
int
ja
adcb
xorb
flds
out
adc
fisubrs
cld
inc
ret
mov
popa
imul
ss
sbb
or
mov
cli
les
pop
xchg
shlb
mov
or
outsl
dec
push
cmc
xor
mov
xchg
fcomi
lock
loopne
adc
addl
lods
bound
dec
loope
add
arpl
outsb
movb
adc
mov
xchg
mov
fs
stos
jmp
mov
pop
pop
xlat
scas
mov
movsl
push
orl
mov
scas
int
in
inc
mov
mov
loope,pn
jne
test
dec
rcrb
mov
mov
or
push
push
mov
rcrl
dec
mov
inc
push
xchg
sbb
in
push
jo
xchg
incb
lods
and
cmp
pop
loopne
xor
mov
pop
adc
add
push
cmpsl
scas
fnstenv
call
push
lahf
lea
int3
cli
shll
mov
dec
int
ret
add
fcompp
sub
call
hlt
cmp
clc
inc
xchg
inc
dec
mov
mov
imul
sub
mov
cmp
das
aam
jmp
mov
xorb
inc
dec
dec
cs
adc
arpl
lret
pusha
js
test
ljmp
iret
xorb
pop
out
pop
cmp
repz
pop
and
lcall
gs
gs
push
outsb
push
push
add
adc
lock
push
adc
in
mov
mov
cmpsb
test
test
and
movsl
mov
and
mov
popf
lcall
popf
xchg
sbb
lret
or
fs
mov
dec
movsb
dec
test
enter
pop
mov
jnp
xor
push
inc
jl
aas
and
mov
cmpsb
push
jl
inc
jp
scas
or
inc
mov
outsl
mov
push
arpl
pop
pop
loop
stos
cld
pop
pop
xchg
jge
shll
pop
outsl
mov
popf
cwtl
lret
iret
pop
jecxz
sbb
cmc
adc
mov
cmpsb
lock
cmp
das
repnz
cltd
xchg
jmp
xor
push
ljmp
std
or
pop
cli
popf
push
enter
dec
add
push
cld
adc
into
imul
sub
pop
js
in
stos
mov
dec
inc
jbe
sub
idivb
adc
outsl
rorl
pop
mov
pop
or
sub
outsl
sbb
xchg
imulb
sbb
adc
in
push
push
lret
pop
aad
cmc
roll
or
mov
mov
and
std
insl
repz
outsl
fwait
insl
pop
and
ret
arpl
loop
je
adc
mov
fimuls
sbb
rorl
pop
add
push
pop
insb
aam
cltd
sub
mov
in
jo
in
outsl
je
in
push
jbe
jb
sub
pop
in
int
nop
push
bound
je
in
repnz
jnp
mov
lods
call
mov
fdivs
add
mov
mov
xchg
lcall
outsb
mov
out
sbb
xchg
add
mov
int
sti
lahf
add
movsl
outsl
mov
add
dec
xchg
je
daa
dec
js
push
cmc
outsl
repz
xchg
mov
fsubl
push
imul
aas
int
xorb
jo
mov
fistps
push
xor
xchg
push
lods
std
ds
lret
rolb
bound
loope
shlb
xchg
outsb
add
push
outsb
or
gs
cmp
lods
xlat
scas
subb
xor
add
mov
mov
addr16
mov
mov
lods
or
int3
lods
leave
iret
test
dec
or
pop
or
sub
std
push
lret
loop
dec
scas
mov
arpl
popa
mul
shrl
pop
mov
lea
scas
and
ljmp
movsb
cmp
gs
outsb
and
aam
pop
movsl
and
or
cmp
jno
cmp
das
fsubrl
add
gs
dec
enter
mov
cmp
lods
shrl
dec
push
imul
cmp
add
outsl
jle
xchg
popa
lock
int
sbb
jno
mov
insb
xchg
loopw
mov
cld
in
test
cmp
int
or
push
loope
push
and
lods
scas
loop
in
and
push
aas
lods
or
sub
jp
push
push
mov
and
repz
stos
testw
std
pop
popf
and
mov
dec
dec
xchg
out
fsubs
adc
jne
pop
jp
adc
sarb
cmp
movsb
push
pop
mov
cmpsb
cmp
sti
frstor
out
dec
sahf
ds
sbb
pop
fwait
shlb
add
mov
xchg
out
jp
ss
out
mov
cltd
popf
pop
outsb
sub
sbb
pusha
and
and
xchg
add
mov
in
adc
xchg
int3
adc
test
stos
push
jle
jmp
dec
test
outsl
stos
pop
icebp
lret
pop
sbb
scas
stc
outsl
xchg
mov
mov
cmp
iret
fisubrl
sbbb
fbld
add
lea
lods
mov
dec
fildll
lret
jecxz
add
cltd
fsubrl
lods
hlt
pop
ds
pop
gs
ss
lods
sub
test
into
hlt
sbb
ficompl
xor
clc
in
inc
outsb
mov
ds
inc
cmpsb
cmpsb
push
mov
cmp
arpl
sub
dec
cltd
and
fwait
mov
or
jp
dec
movsl
xchg
pusha
xchg
fidivrs
and
jecxz
lcall
push
jp
mov
mulb
sti
in
cltd
lea
inc
jo
in
cmp
test
enter
inc
xor
pop
out
push
call
aad
dec
fstpl
adc
jmp
lods
xchg
sub
dec
sub
lock
insb
sbb
das
or
cmpsb
mov
add
rorl
or
adc
cld
mov
mov
in
jp
loop
pop
iret
and
adc
ror
inc
or
push
shrl
mov
in
mov
movsl
test
es
popf
bound
in
nop
mov
frstor
cmpsb
or
test
push
add
mov
adc
movsb
and
ja
sbb
cltd
insl
lcall
inc
js
pushf
xchg
push
outsl
ss
push
aam
sub
mov
stos
dec
cmp
push
fninit
mov
xor
dec
inc
add
dec
std
dec
ffreep
mov
imul
xchg
gs
sub
outsb
xchg
cmpsb
inc
push
push
dec
arpl
push
and
dec
shrl
repz
add
fs
ds
fnstcw
inc
insb
fisttpl
outsl
sub
pop
stos
pop
jo
adc
std
out
and
pop
cmpsb
push
aam
and
inc
push
imulb
popf
sub
sbb
mov
jmp
xchg
mov
mov
or
inc
push
adc
sahf
lds
mov
int
jne
lret
outsb
jl
repz
gs
sbb
dec
dec
rol
icebp
insl
int
push
into
and
mov
fxch
mov
mov
add
dec
xchg
fnstcw
repnz
xor
dec
sub
out
mov
cltd
mov
ja
imul
push
lcall
sbb
cmpsb
mov
xor
add
sar
mov
pop
in
and
idivb
aas
xchg
data16
xchg
fs
push
sarl
rep
negl
iret
clc
cmp
cltd
dec
lods
sahf
push
xchg
xchg
jecxz
int3
fstpl
out
push
or
pop
and
push
frstor
test
sbb
xchg
test
out
gs
outsb
call
clc
cmp
mov
test
fstpl
mov
xchg
cmp
xchg
dec
mov
jle
es
lahf
push
xchg
and
cmp
dec
cmp
fimuls
jbe
cmpb
stos
push
or
inc
or
jo
xchg
icebp
stos
insl
in
in
dec
addr16
xchg
mov
and
sub
adc
fdivrp
fwait
int
cmpsl
sti
std
scas
xor
outsl
dec
in
in
or
mov
pushf
jge
sub
xchg
push
xor
jl
scas
in
scas
mov
inc
test
inc
push
adc
mov
dec
mov
cltd
sub
gs
dec
jbe
aaa
movsl
mov
mov
jecxz
stc
stos
lahf
xorl
into
daa
xchg
dec
sub
je
inc
or
push
leave
lahf
mov
or
and
pop
or
insl
xor
lea
aam
push
lods
sub
clc
push
push
dec
cmpsl
in
push
outsb
jle
out
cmp
out
pushf
lret
pop
lds
cmpsl
daa
out
out
out
xchg
int
add
lods
jnp
or
jg
in
fidivrl
scas
mov
push
and
movsl
mov
jge
push
add
lods
popf
int
and
sub
std
ficompl
xchg
mov
add
xchg
inc
cmp
aaa
sub
es
sub
scas
dec
xlat
sahf
jb
pop
jns
inc
addr16
adc
popa
sub
pop
inc
jae
movsl
call
cmp
jbe
push
scas
pop
lret
stos
jbe
adc
adcl
and
add
push
jne
cmp
xchg
xchg
inc
leave
inc
mov
movsl
outsl
push
arpl
orl
jecxz
int3
popf
dec
mov
adcb
sbb
lsl
iret
bnd
lret
mov
lock
popf
outsb
dec
pop
lret
push
cmp
pop
dec
xchg
rcr
mov
inc
pop
add
aad
int
lods
test
aad
pusha
addr16
mul
aam
or
sbb
aad
jo
mov
jno
cmpsb
fimull
jmp
gs
dec
xchg
push
xchg
xchg
test
pop
mov
push
fucomi
sub
lods
imul
movsb
lcall
sub
push
icebp
pop
and
sub
add
pop
pop
mov
pusha
add
gs
push
inc
mov
fnsave
subb
jl
mov
movsb
pop
xor
pop
bound
ja
pusha
loop
ret
lds
mov
stos
stc
int
std
cmc
xchg
inc
mov
das
scas
mov
out
icebp
sub
or
jge
sub
addr16
in
daa
sbb
jmp
sub
out
addr16
lret
jbe
stos
or
int3
and
mov
in
inc
mov
imul
inc
jbe
inc
pop
mov
cmp
sahf
roll
and
fs
jge
aad
in
fisttpll
neg
pop
lods
mov
lret
and
pop
mov
xor
sub
cmp
andl
rorl
lds
jnp
stos
lods
lods
testb
inc
mov
pusha
outsl
pop
push
jbe
lret
lret
jmp
push
dec
pop
lds
test
cmp
xchg
jb
daa
fs
int3
xor
mov
inc
sbb
jle
inc
xlat
ds
call
pop
hlt
push
stos
mov
dec
inc
movb
jmp
mov
rorl
mov
lea
sbb
dec
dec
or
pop
sbb
mov
test
push
dec
hlt
pop
sbb
dec
sahf
pcmpgtd
sub
lcall
mov
movsb
mov
stos
sbb
outsb
pop
lods
push
outsb
fsubl
mov
mov
andb
pop
and
dec
push
jp
xchg
dec
inc
outsl
rorb
sub
loope
hlt
fstl
enter
cmpsl
daa
mov
stc
call
and
mov
inc
test
xor
xchg
rcrl
mov
fs
pop
mov
and
sub
fisubrs
push
call
out
inc
inc
pusha
orl
imul
ret
scas
test
jnp
sub
add
add
in
scas
xchg
add
sbb
iret
lds
push
cmp
jae
mov
test
pop
pushf
out
mov
jmp
repz
into
pop
dec
jl
cmp
in
outsl
pop
mov
pop
add
idivl
xchg
mov
xchg
mov
out
arpl
xchg
jle
dec
out
rcrb
sub
jmp
adc
stos
fisttpll
adc
mov
push
out
inc
or
jne
testb
nop
rorb
cmp
fiaddl
cmp
push
dec
imul
jb
mov
std
outsl
pop
pop
jne
adc
add
lret
sub
inc
sub
gs
dec
orb
dec
outsl
dec
push
ljmp
les
jl
fcomp
lea
or
cmp
push
push
dec
mov
rorb
xchg
lods
jmp
int
xor
adc
in
rcl
pmaddwd
dec
sub
xchg
icebp
out
shl
mov
sbb
shrb
scas
mov
andb
cmc
aam
lods
aam
lea
test
adcb
outsb
stos
test
sbb
inc
in
jg
dec
cmp
mov
xchg
frstpm(287
push
jle
jo
inc
cld
sub
pop
adc
sbb
shrb
jmp
push
adc
cmpsl
inc
fs
shlb
leave
jl
enter
mov
js
pusha
das
dec
bound
rcrl
iret
fildll
cmpsb
mov
shrb
mov
imul
ss
pop
add
adc
mov
jecxz
xchg
sahf
inc
dec
sub
mov
ss
cmp
sti
arpl
movsb
jne
and
inc
push
sbb
out
push
mov
cmp
add
ret
std
inc
inc
cmp
dec
xchg
daa
cltd
pop
sub
out
fldt
and
cmp
mov
fwait
sbb
mov
cmp
add
addr16
push
movsl
call
out
ss
mov
aam
pop
or
pop
iret
dec
pusha
sahf
int
pop
incl
inc
ficomps
scas
fisubl
inc
inc
push
clc
xor
xor
push
adc
cmp
lret
sarl
pop
inc
mov
xchg
hlt
cmpsb
daa
ret
movsb
pop
cltd
cmpb
xor
daa
cli
popa
xchg
inc
stos
adc
jns
adc
dec
int3
fisttpll
movsl
test
sbb
inc
jmp
push
xchg
push
and
lods
in
ljmp
and
mov
xlat
fldt
insb
in
stos
pop
sbb
dec
dec
mov
or
incl
push
outsb
xor
nop
in
outsl
cmp
in
out
lods
repz
cmpsl
outsl
movsl
mov
pop
mov
das
mov
add
dec
push
push
or
ss
sahf
dec
pop
push
jecxz
gs
push
rcrl
aad
ror
movsl
inc
dec
xchg
jb
xchg
mov
lahf
test
sahf
sub
add
sbb
push
mov
dec
ja
rcl
mov
sbb
or
xor
vmwrite
cmpsb
scas
mov
jb
sti
or
aas
jl
push
push
mov
je
push
mov
push
adc
cmpl
int3
lahf
mov
js
das
test
push
outsl
jo
mov
sub
mov
pop
lea
pushf
pop
insl
push
test
mov
dec
pop
sbb
js
test
or
mov
lret
in
jle
mov
push
or
popf
jne
inc
fiaddl
inc
push
ja
popf
out
xchg
addb
or
pop
imul
inc
jo,pn
jmp
pop
pop
scas
dec
push
cmp
push
jne
lds
jne
fcmovbe
popa
in
mov
adc
jl
adc
cmp
mov
sub
push
out
loop
lods
in
xchg
arpl
inc
outsb
lods
sub
cmp
pop
add
mov
test
pushf
mov
inc
and
jmp
pop
xor
stos
or
jbe
shrl
and
sub
jecxz
std
lret
pop
push
ljmp
fs
scas
or
in
pop
dec
mov
pop
xchg
pop
pop
cmp
das
mov
xor
xchg
decb
popf
jg
push
rep
scas
push
push
sbb
call
stos
int3
push
into
jg
mov
add
xchg
mov
imull
pop
lret
shll
xchg
push
movsb
int3
icebp
adc
push
and
pop
ror
mov
jg
jg
add
or
push
movsb
mov
scas
dec
test
xchg
and
int
pop
fstpl
data16
aas
mov
cld
popf
jp
imull
out
or
add
ss
movsb
stos
sti
dec
xor
stos
fnstenv
out
ss
xchg
stos
inc
rcrb
dec
push
pusha
and
or
mov
push
mov
fs
inc
sub
xlat
sbb
outsb
dec
add
js
in
lds
out
push
dec
and
pushf
mov
lods
pop
jmp
lret
dec
stc
or
fs
sub
gs
insb
aam
movsl
jnp
ds
xchg
pusha
push
mov
rorl
ljmp
fistpl
int
outsl
jmp
loope
jnp
push
test
test
loop
lret
scas
scas
stos
lret
mov
les
movsb
push
les
and
mov
pop
rorl
int
cltd
aad
bound
mov
mov
inc
cmpsb
enter
dec
push
dec
xchg
push
xor
pop
adc
in
cmp
mov
jle
fwait
push
cmc
popf
push
adcl
lods
adc
shlb
movsb
add
sub
cltd
frstor
popf
pop
lret
in
js
lds
pop
popf
push
movsl
pop
bound
sahf
sub
sbb
pop
xchg
out
dec
jl
xchg
loope
lods
mov
jge
daa
pop
ret
test
pop
sbb
push
sbb
mov
lahf
mov
cmpsb
mov
dec
daa
out
xlat
inc
cmp
push
dec
or
sub
in
push
xchg
lds
outsb
lds
jnp
in
sub
pop
xor
jns
push
aad
insb
das
add
pop
data16
leave
pop
jb
test
add
mov
mov
imul
and
movsl
push
mov
dec
push
js
mov
jle
pop
out
pop
dec
imul
imul
xchg
enter
xchg
pusha
adc
sbb
jmp
adc
cmpl
imul
js
insl
dec
add
lret
push
add
dec
push
jp
push
and
out
dec
push
rcll
les
add
lods
mov
stos
std
sub
dec
or
sub
lods
in
jp
mov
push
lret
adc
int
xchg
xchg
xor
xlat
not
lods
ret
das
cmp
in
test
mov
mov
pcmpgtb
xchg
fldt
sub
rcll
dec
xor
or
xor
mov
into
out
repz
inc
call
int
dec
or
sbb
mov
and
imulb
dec
xchg
std
push
loopne
cmp
std
mov
das
sarb
insl
push
adc
sarl
mov
loop
shlb
xchg
mov
scas
jne
cmpsl
lcall
in
adc
dec
inc
shrl
aad
pop
jecxz
int
arpl
arpl
cmp
adc
outsl
jge
sbb
aaa
xor
inc
movsb
aad
or
scas
insb
mov
test
xchg
sbb
mov
and
daa
dec
dec
aaa
pushf
jno
lahf
xor
mov
xchg
pop
std
repz
das
add
push
lea
xor
and
mov
rcrb
or
lods
push
aaa
xchg
mov
cli
test
jmp
xor
cmp
xchg
scas
jl
in
scas
in
mov
and
int
mov
ret
jnp
outsl
and
sub
cld
iret
jp
add
sub
rorl
movsb
inc
jno
adc
in
inc
push
adc
ret
repnz
or
pop
jae
out
ret
rclb
dec
cmp
bound
out
dec
subb
cmp
clc
cwtd
dec
dec
test
jecxz
repz
int
notb
data16
int
adc
ret
pop
fsts
xchg
and
mov
dec
sti
mov
inc
pusha
pop
xor
mul
in
jp
mov
inc
int
enter
cmp
or
xor
sub
xchg
or
mov
and
xorl
cmp
and
jns
adc
rcrl
mov
loope
aas
gs
or
test
lret
jbe
out
test
mov
push
test
lods
mov
mov
lea
pop
jg
cmc
iret
jl
adcb
pop
sbb
bound
repz
sahf
gs
lret
adc
int3
sub
jl
xor
dec
and
or
xor
push
xchg
and
jle
addr16
cmpsb
mov
pop
loope
in
std
mov
popf
in
movsl
jecxz
cmp
xor
add
mov
int3
stc
lods
mov
pop
test
push
cmpsl
adc
in
inc
jl
addr16
mov
test
cmpsl
push
mov
mov
mov
and
loop
push
xchg
mov
in
lea
out
cmp
stos
add
xchg
lods
mov
xchg
sub
or
fwait
dec
push
xor
fists
mov
and
push
movsl
shl
dec
jbe
movsl
rorl
fwait
mov
movsl
ds
cmp
cmp
cmp
icebp
mov
rcrl
popf
pop
sub
lahf
lods
sub
xchg
jbe
aad
movsl
mov
and
cmpsb
aaa
mov
jge
sub
movsb
lds
sub
jmp
out
gs
push
pop
in
scas
and
lretw
hlt
xchg
lods
xchg
addb
xchg
jb
add
push
lea
jle
xchg
in
jmp
push
addb
mov
pop
ljmp
sbb
pop
mov
xor
outsl
jo
rcrb
lahf
mov
add
xchg
pop
mov
pop
jmp
fdiv
pop
ljmp
daa
loope
sub
cmp
mov
scas
mov
adc
sbb
xchg
add
and
xor
sbb
dec
lret
inc
add
dec
jne
iret
dec
cmpsl
insb
sarl
mov
cmp
adcb
push
xor
inc
in
ljmp
dec
mov
outsl
adc
mov
adc
jns
popl
mov
aaa
mov
int3
jecxz
repz
stos
inc
add
fnstsw
pushl
repz
or
or
pop
test
push
xchg
pop
int
or
or
popf
lret
mov
addr16
and
cmc
roll
shll
test
xchg
lahf
dec
push
js
adc
in
jns
pushf
push
in
jg
mov
cmpb
sub
mov
scas
imul
and
fmuls
fidivl
ja
pop
lret
lea
lret
pop
xchg
in
pop
adc
loopne
cmc
xor
jmp
aas
sub
xchg
xchg
inc
gs
jle
imul
in
shl
loopne
js
outsb
fs
outsl
inc
inc
jge
or
sarl
pop
push
mov
in
das
outsb
ret
insl
mov
cli
or
cwtl
dec
add
aad
sbb
add
gs
add
je
push
test
pushf
inc
iret
or
jbe
dec
jle
adc
out
mov
adcl
dec
shrb
fsubrl
cmpsl
xchg
jp
mov
push
aad
xchg
xor
out
pop
sub
addr16
and
mov
dec
add
pop
rorb
push
xor
inc
into
lea
mov
jmp
shlb
testl
pop
push
or
aad
or
dec
mov
addr16
cmp
cwtl
int
mov
xchg
cmp
sub
imul
aad
call
cld
mov
xchg
scas
pop
xchg
jge
cltd
popf
mov
int3
mov
xchg
gs
fisubrl
inc
out
icebp
dec
xchg
dec
hlt
out
pop
and
int
mov
pop
in
cmpsl
lds
test
mov
roll
pop
sub
and
cmc
pop
mov
dec
or
sub
xchg
mov
cmp
dec
loope
xchg
aam
ss
xchg
iret
insb
sti
xchg
popf
sub
les
mov
ret
in
pop
and
mov
mov
pop
mov
and
jns
pushf
mov
cltd
jbe
ljmp
outsb
mov
lods
dec
mov
mov
cwtl
mov
push
insl
je
fneni(8087
mov
call
add
popa
and
fistpl
or
cmpsb
lods
xchg
adc
addr16
xor
and
es
int3
sub
ret
int
shlb
mov
adc
cli
gs
xor
push
or
les
mov
mov
jg
mov
mov
int
daa
stos
pop
push
jp
cmp
xor
rcrb
xor
bound
fistpl
repnz
je
xchg
and
popa
cli
jge
pop
adc
dec
pop
inc
sbb
ret
iret
and
adc
stos
fscale
lret
push
mov
iret
in
in
aam
idiv
pop
pusha
out
mov
dec
dec
lods
nop
test
fsubr
stos
out
pop
and
xor
lods
and
nop
inc
xlat
das
dec
lods
addr16
mov
pop
lods
push
out
push
nop
pusha
scas
std
sbb
popf
out
adc
mov
cmp
outsl
aaa
mov
repz
pop
add
dec
push
subb
mov
sbb
sub
ss
ss
out
xchg
push
leave
sub
mov
jle
adc
mov
mov
xor
jl
stos
cmpsb
xor
and
add
mov
sub
or
xchg
mov
hlt
dec
pushf
inc
sub
add
sub
inc
dec
adc
lahf
push
repz
jnp
lea
inc
sub
lods
sbb
push
pop
and
dec
ficoms
xor
xor
mov
dec
mov
push
push
repz
decl
mov
aad
dec
jge
imul
inc
sbb
and
sub
aaa
pop
push
std
data16
test
into
dec
sub
dec
movsb
out
mulb
cmpsl
ljmp
in
lret
addr16
jg
dec
mov
in
inc
scas
shlb
inc
into
xchg
imul
xchg
iret
inc
jne
and
sbb
xor
stos
int
jae
push
jo
cli
inc
and
pop
std
inc
push
pop
cmpl
mov
repnz
popa
mov
je
scas
sahf
arpl
push
sub
adc
lretw
mov
xor
ret
and
int3
xchg
cld
mov
imulb
mov
xchg
sbb
jb
dec
cli
xor
or
cmp
cs
xor
into
das
mov
imul
in
std
xchg
push
adc
or
cmp
mov
faddl
or
jle
scas
fistps
in
or
lret
xor
cmpsl
ds
jne
sub
dec
or
inc
jae
cld
insb
mov
mov
pop
push
loop
add
hlt
repz
and
push
mov
and
mov
enter
ret
inc
out
mov
mov
push
mov
jge
std
aam
fcmovbe
sbb
push
push
leave
outsl
and
cli
adc
and
push
shll
lds
rcrb
xor
cltd
sbb
pop
lahf
inc
push
pushf
das
push
std
into
xchg
cmp
xchg
cmp
fdivl
repnz
movsb
mov
pop
mov
std
mov
out
xchg
cmc
jne
lret
aam
movsl
add
xor
mov
sub
incb
dec
push
pop
mov
ds
and
leave
mov
xchg
in
bnd
insb
push
dec
jne
sub
jp
cltd
push
cwtl
cli
mov
lods
dec
xchg
inc
jmp
jnp
lret
dec
mov
outsl
ss
mov
call
xchg
inc
bound
dec
in
fistl
mov
outsl
inc
xchg
fstp
loop
jnp
aam
push
lret
push
push
inc
outsl
mov
test
push
mov
shl
dec
cld
ss
and
jb
aad
sub
inc
sbb
in
mov
xchg
and
rolb
add
inc
xchg
gs
xchg
shll
lods
xchg
nop
mov
cmp
jecxz
scas
mov
or
xor
lahf
xor
jae
fsts
adc
rcrl
adc
pop
out
test
push
sub
pop
sbb
test
cltd
outsb
fadd
jbe
sub
lods
cltd
pop
or
aad
cltd
out
cmpsb
sahf
sub
addr16
pop
xor
in
inc
inc
add
jbe
lret
lcall
sub
addr16
ret
mov
xchg
andb
iret
shr
andb
lcall
rol
adc
jp
xchg
in
jb
xchg
insl
jge
outsb
out
and
dec
mov
xchg
inc
movsl
lret
cmp
and
std
add
scas
insl
in
adc
dec
mov
push
mov
test
xor
adc
and
mov
adc
add
and
ljmp
int
jne
ds
aam
push
pop
mov
repnz
cmp
dec
shlb
mov
mov
rolb
mov
shrl
dec
lret
popf
das
dec
sti
jbe
xchg
and
popf
mov
test
sahf
add
sbb
and
inc
ficomps
mov
and
fst
xchg
sub
lret
test
scas
sub
jg
sub
outsb
add
stc
int3
jge
popf
ret
gs
aaa
mov
jg
sbb
sub
mov
mov
cmpb
xorb
fimuls
ret
cld
rorl
mov
sub
dec
jg
add
cmpsl
sub
out
dec
pop
inc
dec
inc
sub
mov
lock
xchg
mov
jmp
add
cltd
fstp
sbb
dec
fsubrp
popf
xchg
sbb
mov
outsb
xchg
lahf
mov
aaa
mov
adc
lods
fimull
jle
push
pusha
int
cld
jp
std
fisubrl
test
add
rorl
aas
push
aam
mov
push
leave
popf
lahf
dec
inc
xchg
add
mov
popa
xorb
lret
aas
push
pop
xchg
cmp
popf
lret
sar
inc
je
insb
cli
jp
vunpckhps
push
push
bound
stc
jp
lret
popa
xchg
pop
add
or
mov
insb
and
xchg
ja
shll
pop
sub
inc
or
outsl
xchg
test
mov
lret
scas
arpl
into
and
ret
cmpl
mov
inc
push
pop
xchg
outsl
cwtl
jae
push
fdivl
pop
int
loope
xchg
xchg
ret
push
xlat
push
jae
mov
jnp
mov
pop
adc
sub
sub
fs
push
arpl
insb
in
lock
pop
fists
sub
sbb
mov
mov
pop
adc
mov
loope
sbb
sub
cmc
cltd
std
jge
mov
stos
xchg
pop
jl
lcall
lret
add
mov
mov
or
dec
bound
ljmp
jecxz
adc
out
inc
or
icebp
fiadds
xchg
imul
or
dec
xor
fstps
fstpl
fildll
gs
outsl
sub
pop
in
push
shll
xchg
push
dec
sub
cld
in
lea
dec
and
mov
inc
jns
int
imul
fsubrl
xchg
xchg
xor
addr16
sbb
fisubrl
cld
jecxz
pushf
js
mov
rorb
inc
dec
and
push
stc
mov
lea
div
jne
sub
xchg
or
sub
and
dec
nop
test
mov
inc
lods
aad
push
mov
popf
and
or
pop
adc
add
xchg
pop
bnd
mov
jno
fistpll
es
cmp
xchg
popa
into
sub
insl
imul
outsl
test
adc
pop
mov
aaa
jmp
xchg
mov
dec
das
lock
adc
adc
imul
outsl
pop
aad
lock
es
leave
fistpll
aas
es
stc
mov
ss
mov
fwait
or
dec
adc
cmp
pop
xor
lcall
orb
outsl
popl
mov
xchg
push
les
insb
cmp
dec
jb
std
outsl
out
inc
lret
xchg
xchg
jno
aad
inc
inc
out
and
inc
stos
testb
test
push
fistpl
xor
pop
sub
cwtl
dec
ret
xchg
int
mov
xchg
in
pop
adc
adc
mov
out
lods
fstp
rcrl
pop
and
xchg
repnz
add
mov
nop
sub
adc
xor
jns
popf
pop
and
add
dec
jne
es
stos
xor
push
int3
dec
test
pop
xchg
loop
cltd
cmc
in
add
xchg
mov
int3
fisttps
xor
sub
xchg
pop
add
out
lcall
jne
cmpsb
stc
icebp
bound
std
imul
loop
sub
xor
xchg
fbstp
mov
xchg
fisttps
push
lods
lea
into
cltd
add
dec
lret
data16
cmp
ret
add
jmp
sub
cmp
dec
sbb
popf
xor
sbb
pop
lea
out
add
das
xor
dec
sub
mov
sub
pop
or
xor
mov
sub
or
in
fucomp
std
and
push
sti
fmull
pop
adc
jle
adc
negl
xor
test
jp
push
sbb
cmpsb
inc
sub
fcmove
cmp
pusha
das
jmp
rolb
fdivrl
dec
aad
pop
packsswb
iret
dec
rcl
std
fcompl
xchg
and
cmp
bound
ficomps
dec
mov
push
data16
pop
fldlg2
ss
repz
jns
pslld
dec
sbb
sbb
pop
out
dec
lods
hlt
aad
jg
and
dec
movsb
movsl
mov
idivl
bound
into
add
in
mov
dec
shlb
adcl
sub
out
add
mov
xchg
inc
and
je
jecxz
jge
test
movsl
sub
loopne
fcoms
fldt
and
ret
mov
hlt
mov
xchg
add
or
out
movsb
xor
shll
xor
jecxz
rorl
movsl
xchg
push
pusha
adc
ret
push
or
dec
mov
outsl
add
inc
push
pop
lods
xchg
movsl
push
mov
inc
and
dec
fstpl
mov
inc
xor
loopne
and
inc
lods
mov
jnp
xchg
xor
pop
push
stc
xor
cmp
enter
add
lods
repz
inc
xchg
pop
jno
mov
adc
push
pop
push
stos
outsl
push
lcall
in
int
sub
lret
lods
dec
je
push
xchg
jns
xchg
and
jbe
and
pop
mov
mov
fisubrs
bnd
insb
lret
arpl
cs
inc
cmpsb
push
sbb
std
scas
jl
mov
int3
sbb
outsb
mov
sub
repnz
xor
mov
aas
cmpsb
pop
xchg
add
inc
add
dec
out
outsb
es
mov
sbb
int
iret
shr
jne
shrl
pop
movsb
pop
aad
loope
sub
in
test
jne
xchg
int
jmp
loop
cwtl
fsts
xchg
cmp
cmp
insb
popf
shl
daa
bound
pop
fidivrl
jle
das
lds
sub
inc
xchg
ret
rclb
cwtl
jns
fmull
jg
bound
data16
mov
sub
or
sub
push
or
cmpsb
mov
sarl
nop
imul
gs
int
inc
jge
push
in
iret
orl
aas
mov
sub
and
xor
adc
lret
sub
cs
and
in
pop
rorl
lcall
sub
ds
xor
mov
mov
sub
push
pop
neg
or
jl
mov
icebp
xorb
mov
mov
cltd
bound
lods
dec
mov
jl
mov
xchg
lds
imul
stos
mov
lcall
cmpsl
lock
xor
mov
js
outsl
shlb
iret
cmp
and
sub
and
add
and
das
sbbl
or
sub
cmp
push
popa
int3
imul
lds
lds
fwait
inc
jge
cmpsb
xor
adc
out
mov
fsub
xchg
pop
and
iret
mov
inc
xor
out
js
xor
xchg
inc
dec
dec
sub
mov
mov
xlat
mov
movsb
repnz
div
or
jb
aam
mov
andl
xchg
add
mov
jg
xor
fsts
pop
or
lock
dec
aas
aam
call
adc
or
lret
jecxz
dec
scas
xchg
ljmp
insb
sbb
ja
loopne
stc
mov
adc
adc
loop
nop
nop
loop
cmp
icebp
movsb
nop
mov
dec
enter
dec
push
outsb
mov
inc
pop
push
xor
mov
aam
cltd
mov
mov
insb
and
add
pop
push
push
xor
pop
movsb
fs
ficompl
inc
loop
mov
sbb
dec
pop
adc
inc
lods
and
rorb
movsb
inc
sub
inc
test
imul
adcl
popa
pop
lods
bound
out
orl
pop
lahf
or
mov
cwtl
mov
test
inc
scas
lret
lock
cmpxchg
lods
scas
cmp
mov
xlat
dec
push
cltd
mov
sub
mov
inc
das
push
es
pop
inc
cmp
xchg
fisubrs
add
leave
dec
ss
stos
cmp
xchg
push
pop
and
xchg
sahf
gs
test
imul
mov
lret
jb
jmp
cmpsl
or
ret
xchg
inc
jmp
out
push
in
lea
repz
int
fmuls
mov
jle
lods
dec
sub
pop
cli
test
sub
imul
mov
test
mov
lea
dec
popf
mov
jns
add
xchg
pop
rcrb
es
mov
mov
add
cltd
ficompl
push
outsb
bnd
outsl
fwait
insl
xchg
inc
rcl
dec
mov
sbb
push
dec
lcall
push
dec
outsl
xchg
lret
cmp
std
xchg
int
int
mov
es
mov
dec
pop
jmp
and
mov
cli
mov
mov
or
insl
outsl
les
or
push
cmp
mov
mov
adc
sub
in
lods
test
in
jle
bound
push
sbbb
push
inc
sub
xchg
fdivrs
lods
jnp
xchg
push
xchg
sbb
dec
pop
pop
enter
push
ds
push
push
jbe
fisttps
test
lea
xchg
inc
pop
insb
dec
inc
jecxz
pop
mov
inc
and
jge
popf
jle
sbb
lret
in
add
test
ss
mov
push
insl
mov
movsl
cmpsb
cmp
lret
lcall
dec
sub
pop
aam
cmpsb
pop
gs
ret
jmp
shrl
test
sub
jp
fisttpll
xchg
insl
jae
call
icebp
sub
lret
jmp
sahf
ss
pop
inc
fcoms
jne
imul
outsb
daa
push
pop
lcall
das
sub
xchg
dec
mov
sbb
lcall
popf
mov
xchg
mov
cmp
lcall
xchg
in
mov
scas
lock
fistpll
bound
stos
int
xchg
xor
jl
jecxz
mov
or
xchg
fisttpl
jb
pushf
adc
lds
pop
jns
rcl
dec
sub
sub
or
cmp
cwtl
cs
idiv
out
push
stos
int
sub
lods
in
outsb
dec
cmp
mov
cwtl
pop
mov
subl
cmc
and
enter
or
dec
movl
mov
int
push
lea
jnp
dec
std
mov
xchg
cmpl
das
sahf
mov
push
push
sahf
lret
add
pop
pop
inc
xchg
pop
gs
xchg
out
cmp
or
cmp
pop
and
and
mov
xchg
popf
ds
cwtl
aam
iret
jle
mov
mov
dec
aam
scas
push
pop
dec
lahf
bound
movl
dec
test
stos
movsl
cld
push
gs
in
push
inc
xchg
arpl
xor
push
lds
push
jmp
les
pop
testb
and
push
into
xchg
jns
popf
mov
les
lods
insb
push
outsb
pusha
cmc
and
dec
inc
fldl
aam
mov
push
adc
out
xchg
imul
out
mov
andb
jae
or
jp
lea
xchg
jbe
es
add
push
dec
mov
cs
ror
adc
out
push
scas
dec
enter
repnz
push
lret
bound
sbb
ret
xchg
mov
std
adc
js
fnsave
das
loope
pop
pop
lret
sub
push
fistpll
hlt
xchg
inc
psubsb
ljmp
iret
out
mov
repz
decb
call
jmp
test
cltd
xorl
xchg
ret
std
jmp
xchg
test
push
in
pop
lretw
cmp
add
das
xor
aas
adc
addr16
icebp
sub
add
xchg
cmp
lcall
in
sbb
inc
mov
outsb
mov
mov
shlb
inc
imul
int
cli
jmp
sub
dec
jbe
adc
hlt
mov
pop
or
call
scas
ficoml
jmp
lret
mov
sbb
or
outsb
fwait
or
push
xchg
adc
xchg
lea
add
rorl
fcompl
jnp
lea
xchg
cmp
cli
lret
push
sbb
and
cmp
push
leave
cltd
sahf
rcr
imul
xchg
pop
add
add
pop
test
cld
jp
mov
sbb
gs
and
dec
mov
push
test
sahf
mov
fdivl
leave
fs
pop
scas
repz
and
pop
imul
lods
and
jnp
and
dec
std
mov
pop
stos
dec
mov
mov
gs
mov
or
cwtl
inc
scas
mov
movsl
inc
lahf
in
pop
push
push
test
fidivrs
scas
loope
pop
xlat
dec
iret
add
out
insb
daa
push
push
movsl
pop
xor
push
and
ret
aad
sub
js
lea
xchg
dec
lds
scas
cmp
mov
sbb
out
cltd
ret
cmp
inc
xchg
dec
sub
stos
js
push
data16
push
lods
shll
outsb
int
adcl
call
lea
dec
test
js
sub
pusha
fildll
and
bound
jno
scas
in
pop
out
imul
lds
jae
xor
shrl
std
xchg
sub
add
insl
stos
adc
xchg
int
imul
pop
and
lods
mov
test
xor
mov
std
pusha
in
js
in
test
or
ret
xor
cs
or
jl
cltd
fwait
xor
jo
ret
das
dec
movsb
test
pop
in
enter
test
jmp
cmc
mov
xchg
into
mov
call
test
cmc
insb
xor
lret
xchg
xchg
lcall
rorl
jae
xor
lea
xchg
pusha
or
fwait
and
test
sub
aaa
fs
loop
stos
insl
js
dec
or
stos
xor
jle
lods
into
jecxz
out
fwait
out
xor
push
push
fidivrl
popf
or
push
jmp
fwait
mov
decl
insb
cmp
outsb
add
out
lods
mov
jle
movsl
das
cmpsb
xlat
data16
sub
je
outsl
popf
gs
in
pop
sahf
cmpsb
shr
add
insb
sub
in
movsl
and
stos
dec
ficomps
gs
movsl
pop
into
pop
sti
sub
sbbl
rorl
ret
leave
mov
andl
stos
sti
xor
sub
dec
addr16
pop
dec
inc
pusha
jne
mov
jle
leave
dec
jmp
cmp
jl
push
nop
imul
sub
testb
and
into
or
or
scas
push
sub
out
lock
sahf
inc
sub
lock
xchg
dec
aad
cmc
cmp
movsl
out
incb
or
and
add
out
movsb
sbb
xor
xchg
lahf
insb
pop
mov
imul
adc
pop
add
test
push
hlt
dec
je
out
dec
pop
ficomps
pusha
push
nop
pop
xchg
loopne
call
xor
daa
orb
out
pop
and
jmp
adc
and
jns
sub
into
pop
mov
cltd
pop
incb
sbb
aam
or
push
fmull
lcall
dec
inc
test
push
aad
out
cmp
push
jp
movsl
xchg
and
mov
inc
call
add
jg
sub
std
insb
xchg
decb
mov
xchg
or
cmp
jl
and
aad
insb
and
mov
jnp
push
pop
xor
fsubr
test
adc
popf
dec
adc
fwait
or
mov
sub
mov
int
in
xor
mov
movsl
xchg
jne
xchg
shrb
xor
jmp
dec
jl
repnz
and
call
test
sub
loope
and
mov
lds
jno
sahf
pop
enter
xchg
shll
loopne
push
js
cmpb
test
inc
or
push
xchg
es
inc
insl
test
iret
push
jl
scas
loop
dec
dec
pop
mov
add
add
dec
dec
ljmp
aad
pop
lret
enter
pop
dec
pop
lret
push
loope
xor
data16
mov
push
pop
repnz
cmpsb
test
es
mov
sub
mov
add
imull
jl
lock
ret
add
out
sahf
bound
inc
ret
int3
jmp
inc
dec
iret
lds
mov
out
dec
rcr
idivb
bound
cmp
cmp
aam
ret
cld
xchg
push
cld
sbbb
int3
cmp
lahf
mov
jnp
dec
sub
sub
mov
xchg
lods
fsubr
pop
dec
scas
out
or
mov
dec
lcall
cmp
cmp
ljmp
mov
adc
inc
out
test
pop
pop
lds
add
cmpsl
sahf
js
inc
lods
out
cmp
pop
sbb
incl
adc
lods
sub
or
js
scas
rorb
push
ret
cmpsl
shlb
cmp
mov
aas
loopne
push
in
push
sub
lods
jo
out
scas
push
push
pop
mov
jo
dec
js
xchg
out
sbb
xchg
mov
orb
dec
sub
adc
push
movsl
js
lods
xchg
cmpb
stos
sub
mov
dec
ds
pushf
out
sub
add
xchg
push
js
sbb
sub
pop
mov
lods
int3
add
mov
mov
add
sub
pop
ds
sub
lds
data16
add
push
lods
push
aas
ds
icebp
pop
ds
push
test
pop
lods
lods
gs
neg
ss
xchg
cmc
adc
dec
push
lahf
sti
cmp
sbb
or
xchg
xchg
lahf
mov
lret
fcoms
xchg
sbb
mov
lea
sub
jle
js
jmp
shrb
fs
test
mov
or
test
sub
lret
push
mov
int
outsb
outsb
dec
shll
sbb
xor
xlat
dec
sub
jo
lahf
cmp
sub
xor
xchg
xchg
dec
pop
sub
sub
sub
push
xor
cmp
cld
bound
cmc
sub
pop
out
mov
dec
test
xchg
cmp
icebp
jo
cmp
imul
lahf
mov
test
mov
lods
fstpt
out
push
sub
jmp
pop
push
js
test
es
cmc
inc
test
fstl
xor
nop
hlt
dec
das
push
popa
xchg
lods
cmpsb
es
fldl
mov
push
sarl
in
mov
jne
dec
repnz
mov
mov
inc
shl
sahf
xchg
in
inc
fsts
inc
dec
mov
dec
js
inc
mov
fidivl
dec
adc
push
cltd
incl
sub
mov
cli
sub
enter
mov
mov
jne
cmp
inc
mov
dec
sub
jecxz
cmp
mov
jae
or
inc
pop
stos
jl
inc
data16
ja
xor
adc
lea
and
sub
sub
loope
push
mov
mov
dec
adcb
in
jecxz
les
jnp
adc
and
mov
cltd
out
lahf
and
fbld
mov
scas
xor
outsl
std
xchg
pop
mov
aam
frstor
mov
bound
cmpsl
insb
scas
sbb
out
fistpll
push
outsl
std
xlat
sahf
xchg
int3
std
add
popf
mov
mov
or
dec
sub
scas
popa
mov
gs
cmc
popf
push
cmpsb
js
inc
bound
jo
arpl
lahf
aas
push
or
mov
aam
dec
scas
mov
pop
sub
mov
cmp
or
sub
lret
inc
fsubrl
jno
ds
adc
lahf
andl
cmp
xchg
jne
sti
mull
pop
cmp
inc
jae
lcall
scas
xorb
sahf
pop
movl
xor
cmp
es
pop
mov
stos
movsb
fsub
in
mov
lret
xchg
fwait
jnp
ss
inc
inc
ds
jo
xchg
ror
pop
dec
push
nop
cmp
add
addr16
in
cmp
xor
sahf
sub
add
rcrb
xor
lds
mov
pop
push
jle
xchg
lahf
sarl
test
mov
pop
inc
rolb
int3
push
inc
pop
shlb
test
sub
or
outsb
fs
adc
jecxz
fwait
movsl
mov
sub
sub
cmp
add
xchg
sub
mov
faddl
and
outsl
or
rol
mov
jns
sbb
pop
inc
lcall
mov
movsl
xchg
sbb
sub
pop
iret
cltd
data16
sbb
divl
pusha
scas
xor
push
shll
inc
sub
dec
push
mov
test
orb
xchg
add
push
inc
mov
sbb
ret
add
scas
add
fwait
call
pop
pop
shrl
sub
cld
dec
andl
mov
push
outsb
xchg
xor
add
adc
aad
dec
cmp
imul
outsl
jne
or
push
inc
enter
or
dec
imul
sub
jbe
jecxz
std
test
fisttpll
popf
xor
jns
xchg
add
stos
sub
add
mov
and
cs
les
jl
dec
shlb
orb
jp
ljmp
add
mov
into
xchg
push
inc
adc
xor
or
or
out
cmpsb
rep
mov
xchg
leave
pop
popf
jnp
lock
ljmp
pop
insb
and
sbb
and
adc
bound
and
push
rsqrtps
mov
sbb
add
mov
int3
daa
adc
das
mov
adc
outsb
lcall
dec
mov
inc
adc
sub
jo
push
xchg
rcll
or
fidivl
es
jmp
repnz
repnz
lock
fs
movsl
fnsave
ds
dec
jecxz
xchg
xorl
dec
fs
outsl
sarb
pop
fs
xchg
lcall
imul
enter
pusha
mov
lret
cltd
sub
das
sub
ds
insb
lcall
add
mov
xchg
incl
adc
cmpsb
bound
outsl
je
push
xchg
inc
add
add
push
xchg
int3
cmp
out
mov
push
ljmp
cmp
inc
into
leave
add
cmp
stos
lret
inc
xchg
outsb
sarl
ds
outsl
pop
loopne
arpl
insl
enter
lret
into
mov
sub
dec
in
insb
lret
mov
xchg
mov
outsb
fcoml
add
imul
mov
int
movsb
gs
lods
cmp
sub
cmp
xchg
adc
pushf
jge
and
push
rcll
repnz
cwtl
dec
in
std
ljmp
popa
ds
stos
cmc
adc
std
mov
rorl
add
testl
sbb
lds
int3
sub
xchg
cmpsl
outsb
inc
mov
pop
sub
cmpsl
aaa
push
movsl
mov
sbb
push
out
mov
scas
xorb
sbb
push
push
flds
cmpsb
test
call
shll
stc
xchg
inc
jbe
js
jno
and
stos
lcall
call
faddl
test
stos
jp
lret
lret
lcall
outsb
int3
and
lfs
sahf
pop
xchg
add
icebp
cmp
in
ds
push
dec
cmc
dec
cmpsl
arpl
movsl
outsl
mov
je
pushf
push
push
cmp
int
dec
icebp
mov
fs
xchg
pop
scas
fldenv
dec
outsb
xchg
pop
fwait
dec
jl
in
xchg
cltd
xchg
cmc
cmpsl
xchg
adc
sbb
stos
pop
xor
clc
dec
xchg
dec
push
out
dec
xor
lea
fidivrl
sub
and
outsl
cltd
aad
cmp
mov
cmp
pop
lds
hlt
rorl
dec
xchg
sbb
mov
xchg
in
dec
push
movsl
fimull
pushf
mov
test
add
mov
or
cmpb
pop
dec
fsubr
xor
xchg
out
out
movsb
lock
jae
mov
int
pusha
adc
pop
inc
aaa
cwtl
bound
xlat
sti
test
push
mov
mov
ds
jnp
shrl
cmc
aam
inc
sub
pusha
hlt
push
sub
lods
mov
lods
xchg
ret
js
pop
mov
push
pop
ss
jae
dec
outsb
lret
fistps
or
push
cmc
sub
pop
inc
cmpsb
enter
scas
push
pusha
ds
out
cmp
stc
lds
and
inc
frstor
dec
je
dec
push
cmpsl
dec
pop
adc
adc
jl
jns
inc
out
push
aad
cwtl
and
les
dec
bound
js
jmp
inc
mov
les
outsb
sub
in
xor
mov
adc
rcrl
jle
pop
outsb
out
xchg
pushf
jge
stc
cmpsl
jmp
cmp
sub
outsl
and
popa
cmc
mov
mov
and
outsb
lcall
stc
cmp
and
rolb
repz
mov
push
inc
enter
ss
in
test
push
adc
push
les
stc
loope
lods
ror
iret
pop
mov
fs
sbb
push
movsl
and
sbb
inc
mov
out
xchg
push
dec
sbb
in
insb
pop
mov
leave
stos
jge
pop
bound
inc
sub
out
ss
cltd
in
pop
bound
lahf
jb
pop
xchg
jne
std
fs
push
mov
pop
arpl
fadd
leave
sbb
add
fmul
shrl
xchg
test
popf
fwait
xchg
aad
sbb
push
in
int3
addr16
lea
popf
lds
add
xor
xchg
push
arpl
mulb
das
dec
rcr
lea
rclb
popf
addr16
xlat
adc
push
lods
dec
repz
shrl
lods
xchg
sbb
lret
sub
lock
sbb
sub
jae
push
jbe
jne
pop
xchg
push
notl
adc
sbb
fcmove
jle
push
repnz
cmp
dec
push
push
mov
sti
loopne
pushf
mov
call
lret
and
cld
ficompl
daa
jge
pusha
iret
test
je
rcl
add
xchg
mov
scas
jne
mov
stos
fmull
outsb
imull
lret
mov
mov
into
into
les
xchg
out
test
out
pop
pop
lret
cmpsl
fnstsw
cli
adcl
test
dec
cmp
dec
sbb
loopne
mov
push
pop
mov
repz
in
and
loopne
lret
cmc
icebp
addl
pop
push
add
repnz
cmpl
lock
into
rorl
adc
push
mov
mov
adc
mov
dec
sub
aad
mov
sub
inc
test
or
cmp
insb
stos
fidivl
xchg
addl
ret
int3
in
cwtl
mov
jl
ficomps
inc
pop
lret
mov
push
loope
push
es
xchg
arpl
ret
lea
jb
loopne
xchg
xchg
jge
xor
insb
sahf
xchg
cmp
push
popa
xor
sub
and
and
add
rorl
cmpb
rcr
ss
fdivrp
nop
sti
mov
lea
inc
fcomps
rcrl
lret
stos
inc
cmpsb
shr
popf
pop
ds
fldt
ja
icebp
jbe
add
add
sbb
inc
outsl
aad
push
fcmovne
fwait
push
mov
fwait
into
mov
stc
popf
ds
push
dec
cmp
push
test
cmp
in
daa
sub
adc
adc
jb
fst
inc
sub
mov
popa
aas
dec
inc
out
cmpl
xchg
sub
mov
lret
sti
xchg
mov
imul
push
sbb
xor
or
cmp
push
cmp
dec
dec
movsl
xchg
mov
in
pop
out
fcompl
inc
jg
and
cmp
pop
xchg
xor
movsl
and
pop
lds
in
mov
in
jl
cmp
push
out
push
jmp
adc
sbb
fidivs
fisttpl
fmul
int
fsubrs
fs
int
jp
int
loopne
xchg
lea
mov
scas
jno
lods
lcall
xchg
push
mov
pop
subb
push
dec
sbb
sbb
push
out
jo
sub
int
lret
xchg
les
lock
mov
pop
imul
push
ds
mov
stos
lock
sahf
call
popf
add
pop
dec
int
jne
imul
sahf
lahf
ja
scas
mov
cmp
mov
jecxz
mov
and
aas
stos
pop
lea
out
or
mov
daa
sub
lds
out
xor
pop
pop
test
aam
paddb
push
mov
hlt
aas
mov
popf
mov
popf
shll
mov
cmp
in
popf
mov
xor
inc
mov
jl
sbb
sub
cmpsl
lods
test
adc
dec
imul
inc
fcomps
repz
dec
pop
out
pop
jmp
xchg
pusha
lahf
and
iret
cmc
ja
sbbb
mov
scas
int
scas
out
push
sbb
xlat
lods
pop
sbb
negl
je
daa
ret
push
inc
pop
dec
mov
data16
dec
dec
lock
pop
pop
pop
mov
icebp
dec
scas
bound
gs
cltd
lea
fiadds
push
xor
push
push
outsb
and
inc
cli
fdivrs
jno
jle
and
jmp
aad
popl
popa
dec
cmpsl
pop
or
adc
sbb
mov
insb
fs
jmp
cli
addr16
xchg
dec
xor
int
sbb
mov
xor
mov
js
jae
leave
xor
subb
lret
xor
loope
xor
adc
and
inc
sub
data16
popf
jp
xchg
jo
lea
adc
imul
stos
sub
jmp
cmp
mov
mov
mov
inc
ret
cld
dec
pop
stos
cmc
cmpsl
icebp
sub
insb
rcll
sub
or
daa
mov
push
outsb
jmp
mov
stc
lret
rcrb
mov
imul
pop
imul
mov
fnstsw
push
hlt
adc
popa
ficoml
mov
andb
sub
dec
mov
pusha
daa
insb
mov
sub
xor
dec
xor
int
dec
push
xchg
into
gs
loope
aas
push
fucomp
jne
add
pop
or
inc
add
dec
cld
rorl
fmull
jp
jmp
jne
call
mov
fistps
push
insb
imul
enter
mov
dec
jle
cltd
rol
sahf
dec
shlb
lock
mov
lahf
jmp
imul
lea
or
add
int
xor
add
sbb
or
scas
hlt
das
imul
mov
scas
pop
out
push
lods
mov
xor
pop
fdivrl
push
xlat
jmp
pushf
push
aas
add
sbb
inc
push
sbb
xchg
sbb
imul
std
jnp
push
xlat
pop
and
cld
inc
cmp
adc
pop
clc
pop
pop
std
lret
or
jmp
mov
push
ret
aad
push
push
dec
sub
mov
enter
add
xchg
dec
insb
into
mov
sbb
aad
enter
movsb
daa
cltd
insl
in
loope
aas
das
loope
mov
push
insb
dec
mov
shll
mov
mov
adc
mov
fistpll
stos
lds
insl
leave
data16
sbb
sbb
insl
roll
imul
dec
adc
and
cltd
push
aad
int
fsubrs
inc
inc
push
jg
dec
mov
iret
movsl
jns
add
rcrb
push
lods
aad
mov
clc
push
fwait
sbb
lods
iret
mov
fbld
js
aaa
lods
imul
es
mov
mov
add
int
leave
into
and
outsl
inc
inc
mov
mov
jle
xlat
mov
pop
sahf
pop
insl
dec
mov
sbbl
lock
fisttpll
stc
fsts
dec
inc
sti
fnstsw
loopne
jl
push
jl
or
or
and
push
movaps
xchg
loop
mov
imul
mov
dec
mov
mov
fdivrl
loop
and
jnp
push
in
dec
and
scas
inc
outsb
sbb
or
cld
lea
sarl
in
stos
mov
fstpl
test
pop
sub
adc
cmpsl
jnp
stc
and
bound
lds
sbb
mov
mov
orl
dec
add
lea
push
adc
cmp
loope
sub
in
scas
cltd
dec
add
fwait
dec
scas
repnz
aaa
iret
dec
jge
ret
lcall
movsb
insl
sub
loope
aas
push
in
inc
sbb
enter
lods
xor
cmp
push
scas
in
fwait
lods
insl
jb
scas
jecxz
enter
xchg
jno
pop
in
and
fwait
jl
in
xchg
fdiv
or
add
adc
mov
iret
sbb
jae
leave
or
gs
test
ret
inc
xchg
mov
mov
lahf
int3
mov
stos
int3
mov
fwait
or
insl
or
xchg
lea
xchg
sbb
push
xor
pushf
sbb
int
rcll
xchg
and
pop
mov
sbb
dec
inc
pop
dec
mov
out
or
movsb
enter
jp
sub
popw
mov
lret
pusha
into
scas
add
dec
sub
mov
in
sub
jno
cmp
dec
int3
mov
popf
adc
iret
sbb
popf
xor
gs
outsb
fldt
and
and
mov
fdivr
daa
push
cmp
int
repnz
jb
cmp
mov
pop
pop
mov
mov
add
jnp
imul
dec
insl
jne
sbb
in
or
and
xchg
cmp
mov
sub
jp
xchg
shrl
push
xchg
push
dec
lret
mov
ret
sub
mov
or
xchg
ds
push
repz
or
in
lret
adcl
decb
dec
stos
adc
xchg
push
add
iret
aad
dec
or
dec
sti
or
sbb
add
dec
lods
jne
mov
movsl
mov
dec
mov
cmp
test
lds
inc
xchg
leave
aas
test
jecxz
sub
in
sub
lea
cmp
push
or
and
pusha
jg
in
outsb
mov
jg
pusha
aaa
in
hlt
or
or
insl
push
xor
mov
xor
sub
dec
add
push
dec
ljmp
addl
lods
cltd
movsl
movsb
movsb
aam
pop
test
lods
addl
xlat
aas
pushf
cmp
pop
add
addr16
fistl
sahf
pop
aad
dec
add
frstor
xchg
movsb
or
rorl
add
int3
and
insl
adc
rorl
add
pop
gs
dec
in
pop
mov
adc
push
and
xchg
js
ss
dec
xchg
dec
add
jno
dec
outsb
daa
add
mov
outsb
and
int3
jmp
or
not
and
cmc
add
cmp
or
shll
gs
aad
push
popa
mov
adc
dec
add
cmp
jnp
cltd
in
add
and
xchg
and
insb
xchg
mov
add
push
or
gs
jno
mov
pop
lret
vpsrad
scas
mov
std
int
das
push
test
sub
dec
xchg
and
lea
int3
mov
mov
dec
add
lods
outsl
popf
sbb
mov
fisttpl
xchg
enter
or
push
or
or
test
lea
adc
imulb
ds
push
test
jp
ret
test
fmuls
inc
mov
jecxz
iret
mov
into
fdivrl
pop
inc
test
les
int
pop
adc
push
lods
test
subl
icebp
xchg
dec
insb
hlt
pop
jo
cmpb
test
cmp
mov
test
popf
frstor
in
scas
mov
mov
sti
mov
cwtl
je
pop
in
jb
pop
je
icebp
scas
sub
inc
and
push
add
outsl
dec
loope
dec
test
lcall
loope
sahf
push
add
ret
fcmovnb
imul
xchg
and
js
sbb
inc
xcrypt-cbc
cmpsl
adc
push
das
adcl
aaa
mov
dec
mov
xchg
rorl
mov
outsl
dec
stc
ds
xchg
xchg
pop
sub
sub
repnz
mov
jl
aam
dec
outsb
ljmp
jecxz
std
or
outsl
das
xchg
addr16
bt
pop
dec
popa
outsb
je
push
lret
jg
or
pop
cmpsb
adc
cli
nop
jb
outsb
data16
outsl
jecxz
out
fwait
mov
push
mov
mov
cld
push
outsb
test
in
mov
pop
fmuls
mov
out
scas
outsb
sub
int
pop
push
lcall
cmc
push
sub
dec
sub
mov
lods
lods
gs
test
in
gs
or
ret
sub
in
into
lods
int
nop
mov
ljmp
lods
hlt
in
cmpsb
aaa
rcrb
cmp
mov
int
cltd
push
inc
shrb
pop
sub
pop
sub
dec
pop
lods
lea
lahf
scas
outsl
test
xorb
mov
and
mov
int3
push
mov
xchg
dec
int
sarb
jae
imul
dec
mov
into
lea
cmc
sbb
ss
push
nop
push
cwtl
sbb
cmp
xchg
push
or
mov
cltd
dec
outsb
stos
fcmovne
xor
mov
mov
push
lods
dec
pop
int3
movsb
in
cwtl
shll
cld
or
push
test
add
sbb
inc
mov
in
das
and
ret
mov
hlt
dec
or
call
cwtl
test
cld
push
iret
sub
fbld
lods
and
sahf
stc
pop
shrl
imul
test
lret
or
cmp
imul
pop
pop
mov
inc
dec
or
stos
push
outsl
outsl
std
xor
aam
ja
xchg
pop
add
sbb
cmc
mov
add
outsb
mov
mov
mov
cld
push
or
addr16
inc
mov
mov
test
cltd
mov
std
lea
mov
mov
sub
mov
aad
insl
fmull
dec
dec
lea
dec
imul
mov
sub
pop
outsb
cli
sbb
scas
pop
jle
pop
xchg
out
pop
mov
push
aad
outsl
aam
fadds
pop
dec
add
popa
test
andl
imul
cs
jge
cmpb
pop
xchg
jecxz
pop
out
jno
fdivrl
xchg
pushf
push
iret
mov
jl
and
push
mov
inc
pop
outsl
inc
xchg
mov
xlat
push
repz
xchg
xor
int
data16
pop
sbb
shrb
cwtl
add
sub
icebp
idivl
sub
ret
iret
xor
test
xchg
dec
pop
out
gs
lods
dec
lret
imul
mov
lea
mov
ss
mov
jl
outsl
or
loopne
mov
outsb
mov
std
int3
cmpsl
sti
push
ret
cltd
cwtl
mov
dec
or
outsb
lea
outsb
inc
test
dec
movsl
ds
es
das
fs
dec
pop
outsb
int3
dec
outsb
pop
in
repnz
shl
stos
lahf
add
cmp
jl
out
jbe
aam
int3
je
jae
inc
mov
lcall
subb
or
popf
dec
xchg
popa
xchg
cmpsl
cltd
ror
dec
inc
inc
pop
xchg
lods
mov
sti
int
outsb
sub
cmp
mov
jp
pop
pop
xchg
dec
xchg
outsb
int
scas
mov
sbb
xor
and
inc
dec
lods
add
addr16
mov
insl
xchg
add
add
insb
adc
or
stos
dec
push
outsl
pop
push
fdivl
in
insl
in
lret
dec
jne
cmp
adc
sub
xchg
mov
orb
xchg
xchg
mov
xor
pop
dec
sub
mov
sti
jecxz
xor
pop
or
mov
and
std
sub
dec
int
sub
ret
xor
xchg
int
inc
cmpsl
in
xchg
daa
push
lods
mov
and
stc
and
xchg
ljmp
push
push
fildll
push
mov
iret
mov
aam
and
popf
push
je
sub
cld
mov
scas
mov
outsl
mov
push
call
lret
xchg
bound
inc
stos
cltd
mov
leave
mov
cmpsb
dec
orb
cld
xchg
ror
inc
xor
jecxz
test
sub
insl
fldcw
or
arpl
mov
mov
add
fs
mov
insb
nop
mov
mov
sahf
or
xchg
test
or
sub
xchg
testb
movsb
test
add
add
in
lods
cmp
add
sub
lahf
mov
pushf
pop
and
pop
add
jge
sti
orb
push
push
push
xor
std
push
or
mov
icebp
rolb
inc
fdivrl
lods
aad
lahf
test
sahf
push
jbe
les
rcrb
lods
mov
std
gs
lods
int
in
std
lods
mov
dec
popl
andl
push
fadd
fmul
dec
sub
aad
jne
fnstenv
jge
inc
test
les
pop
rcrl
inc
pop
sub
aad
mov
ret
repnz
test
cmp
data16
test
dec
repz
out
popa
sub
jge
mov
sub
cmp
mov
lea
jle
cmp
loope
data16
cli
dec
movsl
push
mov
test
xor
aam
pop
daa
push
xchg
in
jmp
mov
xchg
cmp
lods
jne
sub
outsb
or
mov
sub
sbb
cmp
xchg
add
sar
mov
inc
add
mov
test
daa
cmp
pop
cmpsl
adc
and
sub
bound
push
cwtl
xor
repz
inc
repnz
lcall
jl
cld
xor
scas
sbb
movsb
dec
adcl
push
test
pop
cmp
and
dec
pusha
ja
push
aaa
mov
outsb
push
mov
mull
dec
adc
test
sub
push
inc
loopne
orb
adc
leave
stc
mov
cmc
xlat
insl
lahf
mov
shl
dec
dec
outsl
and
iret
int3
sbb
rorl
dec
daa
inc
nop
pop
mov
jle
xor
fmulp
test
pusha
es
adc
popf
xor
movsl
icebp
outsb
mov
std
fldt
cmpsb
push
push
shrl
and
dec
xor
dec
lea
das
add
xor
movsb
or
into
jne
das
cld
mov
mov
lahf
xchg
mov
xchg
jne
scas
push
repz
and
xor
je
sbb
adc
dec
jae
aad
adc
and
out
sbb
outsb
repnz
and
lods
xchg
aad
jne
addr16
jno
pop
enter
repnz
in
popa
xchg
xor
xor
stos
push
jbe
or
jb
xchg
aas
dec
test
in
dec
fwait
xchg
in
add
sub
outsb
mov
aad
lds
mov
pop
rolb
test
jecxz
xchg
aas
jae
addr16
push
outsb
jecxz
dec
xor
dec
sub
pop
dec
out
cltd
pop
cmpsl
lret
outsl
push
cmp
push
mov
add
aad
adc
out
into
push
xchg
arpl
inc
out
inc
das
xor
cmp
jge
std
inc
sarl
jne
mov
mov
xchg
xchg
xchg
lea
xchg
cmp
xchg
mov
mov
and
mov
xchg
or
inc
adc
mov
pop
or
pop
or
pop
dec
cltd
add
fstpl
push
fdivrs
mov
xor
xlat
in
dec
mov
rorb
pop
add
inc
push
pop
lea
movsl
dec
and
outsb
outsb
out
ret
xchg
stc
dec
lock
fstpl
es
jp
push
cli
sbb
lret
xor
adc
xor
leave
push
cmpsb
jecxz,pt
mov
jg
scas
out
dec
mov
xor
lcall
jne
mov
mov
jge
lea
dec
mov
pop
out
jmp
mov
xchg
loop
cmp
add
push
stc
mov
sub
scas
jp
mov
roll
sti
pop
ror
mov
in
call
out
mov
add
jl
mov
sbb
cmp
mov
cmpsl
cld
push
mov
mov
adc
in
jmp
icebp
dec
sbb
mov
sbb
mov
popa
outsb
lea
add
ja
mov
jo
mov
add
and
shll
xchg
pop
add
jl
les
mov
aaa
dec
rcll
ds
lcall
int
xchg
xchg
popa
push
movsl
movsl
popf
icebp
and
xchg
aaa
addr16
inc
mov
fstpt
lock
fnsave
pop
ja
jmp
mov
add
aas
xlat
push
std
test
mov
or
or
mov
icebp
inc
dec
cmp
imul
pop
mov
movsl
jbe
cli
cmp
fisttpl
lock
sti
out
and
cld
outsl
jge
mov
mov
ficompl
adcl
test
int
gs
inc
in
jns
push
dec
xor
popa
lahf
inc
lds
cwtl
lods
mov
lods
imul
icebp
lcall
push
mov
fwait
in
adc
popf
mov
and
pop
inc
fdivrs
jge
sbb
out
xchg
xchg
lcall
test
and
xchg
push
scas
inc
int
add
negb
mov
xchg
fbld
lock
jle
daa
xchg
jnp
push
jecxz
cmpsb
inc
xor
mov
pop
fwait
out
outsl
sub
lahf
ja
xchg
jmp
add
dec
cmp
ret
jge
add
mov
outsl
vhaddps
mov
push
sahf
mov
das
les
cmp
cs
cmpsl
dec
les
and
mov
out
stc
aaa
add
dec
in
lea
lahf
and
daa
mov
les
push
arpl
sub
adc
sub
int
in
push
test
or
fildll
pop
dec
aas
xor
pop
out
add
mov
adc
daa
cwtl
shrl
xor
insl
xchg
mov
lahf
push
aaa
cmpsb
incl
stos
outsl
pop
mov
mov
xor
cmp
in
push
inc
andl
lock
enter
jns
test
imul
adc
cmc
cmpsb
cmp
xchg
or
mov
out
int3
rcr
lods
push
outsb
dec
aad
cmpsb
xchg
sub
outsl
cmpsb
test
dec
test
out
or
sub
or
fisubs
mov
fwait
pop
lea
dec
cmp
adc
xchg
outsb
pop
xchg
xchg
xchg
and
cmpb
mov
icebp
mov
jns
ja
test
or
es
lods
sbb
xchg
sub
das
jne
or
sbb
outsl
out
mov
sti
mov
cmp
dec
aad
loope
xchg
cmp
cmc
pop
pop
or
movsl
adc
inc
mov
xchg
js
aad
insl
rcl
mov
inc
fs
in
dec
iret
scas
add
add
cwtl
int3
add
add
nop
mov
cmp
das
xchg
cli
jae
sub
mov
or
mov
inc
pop
popf
xor
xchg
fcoms
aas
lret
inc
subl
xchg
int
xchg
jnp
clc
and
test
or
pop
loope
xor
pop
popf
or
push
js
imull
out
js
stos
pop
sub
mov
xlat
push
dec
pop
shll
or
sbb
xchg
sbb
shr
pop
stc
xor
vfmaddps
pop
add
out
push
mov
outsb
or
cmpl
mov
sbb
out
movsb
and
mov
mov
xchg
ret
and
test
into
jecxz
inc
mov
pusha
mov
or
call
xchg
jb
in
ret
xchg
pop
pop
xor
sub
dec
and
ja
in
cwtl
mov
mov
loop
popf
gs
add
xlat
sbb
aam
scas
or
adc
cmpl
push
push
test
das
and
in
test
iret
and
cmp
pop
mov
push
cmp
sub
dec
xorb
inc
outsl
and
sub
test
enter
xchg
outsb
dec
dec
cmp
sbb
cmp
jecxz
lds
gs
sbb
push
mov
repz
test
testl
lea
gs
xchg
pop
lea
dec
outsb
sbb
or
push
jg
pop
movsl
adc
push
fsts
jle
inc
jle
ret
outsl
push
inc
xchg
sbb
imul
fsubrs
lea
cmp
lods
imul
mov
mov
cmp
mov
push
pop
movsl
jns
nop
fucom
dec
add
cmp
cltd
mov
pop
loopne
dec
cmp
adc
or
push
mov
out
addl
add
push
lock
ror
add
int3
add
lret
ljmp
jp
mov
mov
xor
outsb
test
and
jmp
pop
je
or
pop
addr16
sub
cmpsl
xchg
dec
test
cmpsb
mov
roll
sti
dec
adcb
mov
iret
cwtl
fdivl
dec
insl
add
xchg
lcall
stos
add
dec
xor
movsl
in
insb
cmp
pop
pop
test
in
sbb
adc
dec
insb
filds
push
mov
pop
or
push
out
add
sub
lea
in
mov
fstp
outsb
in
sub
jae
inc
into
gs
sti
std
or
pop
mov
pop
je
mov
mov
xchg
sbb
cmp
and
gs
sbb
inc
cmp
shlb
outsb
outsb
nop
gs
sti
push
mov
add
sub
fs
cld
mov
scas
jg
sub
inc
push
pop
movsb
dec
mov
stc
sub
pop
dec
dec
cmp
or
or
orb
cmp
mov
pop
imull
and
sbb
incb
lea
repnz
push
fcmovu
daa
aaa
sbb
es
cmp
xor
outsb
imul
pop
stc
das
mov
sub
dec
loopne
mov
xchg
mov
ret
test
out
jge
jne
inc
add
jl
outsl
cmpb
das
call
aam
or
out
xchg
fldl
dec
aad
call
imul
pop
movsl
xor
xchg
insb
scas
loope
mov
aam
dec
dec
movsl
sti
in
into
sbb
xor
out
mov
cmpsl
cmp
mov
fucom
mov
pop
jne
mov
inc
ret
insl
jg
in
or
outsl
dec
leave
in
lods
cmp
cmp
scas
push
insb
das
into
jne
jle
shufps
mov
test
inc
add
enter
test
push
stos
lods
scas
inc
call
push
ret
lea
pop
xchg
add
in
imul
outsl
push
jne
inc
adc
or
enter
dec
jo
int3
and
cmp
cmp
pop
popa
out
mov
push
or
insl
dec
popf
xchg
xchg
push
subl
cmp
fstpt
lds
add
lods
sbb
cmp
jl
and
mov
jp
add
enter
mov
jmp
rorl
sbb
mov
out
inc
scas
mov
pop
in
or
into
inc
sti
aam
enter
mov
rorl
push
stos
push
outsb
lods
pop
mov
imul
dec
sub
push
sti
xchg
daa
fldenvs
adcb
mov
or
arpl
or
sub
inc
add
sub
push
jmp
mov
and
aam
and
sbb
into
ss
outsl
shlb
inc
inc
dec
cwtl
bound
sbb
mov
in
mov
pusha
outsb
lods
jb
sbb
cmpsl
adc
jge
jnp
out
push
daa
xor
rcll
push
fidivs
push
push
dec
xchg
lret
mov
push
jmp
cmp
or
adc
in
inc
jp
push
std
sub
push
dec
popa
outsb
mov
aad
icebp
enter
pop
jecxz
icebp
adc
xchg
mov
mov
mov
cmc
addr16
cs
outsl
pop
xchg
dec
sbbl
and
ljmp
in
inc
scas
dec
xchg
scas
or
insb
pop
imul
sti
cmp
adc
not
push
push
mov
add
xchg
repnz
mov
cmc
mov
dec
mov
dec
out
xorl
outsb
push
addl
rclb
inc
sub
dec
adc
mov
lock
add
and
dec
sti
fcmovbe
add
jge
mov
sti
in
subb
nop
jge
movsb
in
jge
fimull
mov
fwait
xchg
mov
pop
cmp
les
push
pop
xchg
movsl
jns
mov
xchg
std
idivl
test
pushl
cld
imull
fimull
xchg
out
dec
add
je
in
sbb
pop
xchg
push
mov
jge
int3
loop
dec
lea
mov
repz
in
int
test
scas
and
sub
jge
fstpl
call
addr16
cld
mov
lods
and
test
call
imul
cmpl
lods
jb
pop
out
sub
add
int
inc
scas
or
sbb
push
sbb
shlb
mov
add
scas
leave
or
into
loope
sbb
push
leave
mov
invd
inc
fs
dec
sub
call
test
movsb
lea
test
sub
fimuls
xor
imul
dec
fisubrl
mov
leave
pop
or
aaa
or
push
dec
sub
fsubrl
dec
jmp
mov
fmul
and
or
push
scas
lods
ja
xchg
dec
movsb
lds
push
add
jp
push
jge
popf
stos
aam
scas
outsl
or
mov
and
stos
into
sarl
daa
dec
in
bound
inc
bound
lret
into
xchg
call
in
out
icebp
ja
or
out
repz
pop
cmpsb
pop
sub
xchg
shll
imul
test
outsl
jge
mov
rep
and
out
mov
outsb
scas
push
push
enter
xchg
sbb
test
adc
push
push
dec
and
in
fistpl
lea
inc
fsubrl
dec
or
push
xchg
test
sar
ffree
int3
sub
jg
call
repz
cli
mov
out
sbb
dec
jno
cmp
cli
inc
popf
enter
insl
cmp
cmp
push
aam
cmp
lahf
decb
cmc
dec
jo
dec
in
mov
lods
xchg
cmove
pop
push
mov
es
fldl
sbb
sti
push
hlt
sbb
jmp
xchg
out
loopne
adc
pop
sub
dec
repz
in
ja
loopne
scas
pop
push
inc
hlt
sub
out
lret
push
or
call
mov
mov
lods
xlat
dec
xchg
int3
enter
movsl
adc
xchg
sbb
jmp
jle
inc
out
aas
dec
mov
jge
mov
mov
stos
push
push
push
lods
pop
test
and
xchg
lret
mov
dec
jo
mov
inc
push
aad
lea
push
in
sub
cmp
out
enter
add
inc
cli
outsl
clc
aas
sbb
into
xchg
jo
lret
pop
enter
jo
in
ljmp
push
lock
in
addr16
adc
loopne
ja
or
fcoml
xor
movl
xchg
je
test
push
pushf
push
scas
push
sahf
out
fnsave
ret
sub
lods
mov
cmp
cmpsb
dec
mov
out
sub
xchg
push
push
in
sbb
clc
mov
aam
inc
push
nop
inc
dec
cmp
cwtl
cmpsb
out
arpl
orps
aad
adc
pop
jle
dec
mov
loop
add
push
test
scas
sbb
sbb
push
sbb
aam
in
movsl
or
add
push
fldpi
mov
mov
test
lret
sbb
pop
xchg
pop
and
dec
dec
add
mov
cmovae
nop
sub
je
or
jbe
stos
mov
pusha
xor
mov
into
mov
cwtl
int
push
dec
push
push
jmp
imul
cli
xchg
sub
insb
inc
mov
sti
scas
inc
out
in
hlt
out
lret
pop
data16
dec
lea
push
push
and
sub
lods
add
jg
in
mov
int3
in
fisttps
cltd
ds
into
push
mov
pop
push
cmpsl
in
aaa
jecxz
stc
repz
mov
adc
lds
dec
arpl
push
imul
add
popf
pop
sbb
adc
shll
jge
jl
inc
vpcmpgtb
pop
fstps
pop
mov
inc
lods
je
add
movsl
xchg
stos
nop
mov
cmp
jmp
sub
stos
push
pop
dec
cmpsb
dec
stos
push
cwtl
aad
or
xor
scas
sbb
dec
leave
stos
jecxz
fistpl
push
pushf
cmc
inc
ss
loope
ret
and
ds
jge
cmp
das
cmp
push
jl
sbb
leave
add
xor
vunpcklpd
imul
fldcw
mov
mov
sub
std
push
dec
fsubrl
sub
in
mov
adc
test
pusha
inc
js
jecxz
sbb
in
xchg
push
sub
das
insb
in
xor
or
pop
pusha
cmp
orl
xchg
daa
push
out
loope
jecxz
push
dec
test
pop
stos
scas
out
lods
iret
aaa
into
lea
fstps
pop
adc
out
and
push
xor
lods
dec
xchg
dec
popa
loope
push
lds
add
lahf
ljmp
sbbl
incb
dec
pop
sub
repz
pop
test
in
aaa
das
dec
outsb
aam
filds
dec
mov
scas
pop
and
add
push
mov
push
hlt
add
popf
cli
pop
test
stos
or
lret
lock
fadd
push
insb
push
inc
stos
jmp
pop
pcmpgtw
fisttpl
mov
test
sub
jae
mov
inc
icebp
leave
mov
int
mov
push
out
movsl
pop
movswl
data16
aad
xchg
push
popf
call
dec
jnp
jmp
add
dec
jnp
ds
or
loope
in
aad
cld
pop
scas
inc
push
cmp
jbe
xchg
jne
je
js
sbb
pop
inc
out
jbe
xchg
loope
outsb
in
dec
out
add
adc
outsb
jp
pop
popf
fmuls
xor
add
inc
push
ss
sub
dec
fcompl
std
sti
and
loope
sarl
leave
jle
xchg
dec
outsb
mov
sub
push
dec
push
mov
hlt
sbb
test
stos
dec
mov
aas
inc
and
std
aad
fimuls
cmp
rorl
fsub
push
loope
call
out
fmuls
mov
subl
xlat
sub
dec
inc
adc
int
iret
lods
push
xchg
mov
call
lods
push
adc
sbb
inc
or
and
cld
mov
jnp
mov
add
dec
cld
test
and
pusha
adc
call
sbb
jecxz
and
outsl
push
lea
cmp
scas
add
or
xchg
test
mov
jmp
mov
sti
inc
in
mov
clc
gs
pop
test
ret
in
lea
sub
dec
cmp
dec
add
mov
fcomp
fcmove
dec
cmc
add
push
sub
push
lret
cmpsb
xor
movsl
add
aam
and
cmp
cmp
fst
outsl
mov
fs
daa
pop
popf
push
das
das
jp
lret
mov
lret
xchg
in
lcall
outsb
ror
pop
and
popa
mov
jmp
lds
mov
mov
xchg
or
lds
or
enter
pop
in
int
or
pop
dec
icebp
popa
mov
or
sub
inc
mov
lods
lret
mov
lods
dec
xchg
pop
xchg
outsb
imul
outsb
mov
mov
cmp
popf
in
lods
stos
int
scas
push
in
dec
iret
dec
jbe
pop
out
pop
nop
push
in
fnsave
cmp
adc
dec
dec
mov
mov
adc
sbb
dec
or
xor
mov
scas
push
scas
pop
jne
into
gs
movsb
in
lods
mov
mov
mov
dec
dec
inc
int
cld
outsb
push
lea
dec
inc
sub
movsl
xor
add
jl
dec
cmp
push
mov
dec
dec
in
push
lea
xor
insb
pop
add
dec
pop
in
dec
add
insl
cmpsb
pop
or
add
movsb
dec
sbb
mov
outsl
jne
stos
insb
out
xchg
pop
mov
test
xor
pushf
mov
mov
jg
push
fsts
xchg
addl
lahf
inc
sub
movsl
pop
in
push
pop
or
in
fucomp
jge
jmp
inc
jbe
dec
repz
dec
jge
pop
and
imul
hlt
and
dec
pop
sub
pusha
lds
movsb
sub
dec
pop
fcoml
adcb
sub
xchg
inc
test
add
adc
dec
dec
mov
sbb
push
int
or
pop
or
js
push
dec
insl
gs
mov
mov
cmp
in
shlb
or
or
pop
dec
test
lods
insb
shrb
mov
stos
stos
or
lret
push
repz
sub
gs
xor
dec
clc
jbe
imul
mov
mov
dec
lret
sub
in
loop
dec
bound
ljmp
push
loop
push
loope
mov
pop
test
leave
in
cmp
mov
pop
je
in
in
shrb
push
orb
mov
jb
mov
mov
test
dec
enter
pop
pcmpgtw
or
scas
lods
aaa
cwtl
push
push
and
lret
popf
loope
pushf
lahf
insl
dec
push
das
lret
fistpll
and
dec
dec
out
fstps
sub
pop
dec
mov
insl
jmp
in
call
dec
sub
sub
into
outsl
xchg
pop
clc
pop
lret
pop
lock
movsb
loope
in
shrb
movsb
cli
xor
dec
cmp
and
and
pop
pushf
push
pop
mov
pop
add
dec
popf
dec
stos
cmp
outsb
into
push
mov
out
in
mov
movsb
cmp
jo
adcl
pop
xchg
lret
pop
pop
inc
icebp
jae
cmpsl
es
jno
cltd
pop
mov
cmp
imul
flds
xchg
push
sub
push
xchg
or
lods
jle
in
test
sbb
repz
icebp
and
jns
xor
lret
inc
sub
or
cmpl
dec
and
add
ja
or
jne
out
std
adc
lahf
lret
pop
fldt
xchg
cmp
adc
orb
mov
pushf
lock
dec
push
mov
cmp
lea
jno
cmpsl
mov
in
call
fucomi
jb
inc
out
cmp
jo
sbb
lahf
and
mov
fdiv
ror
xchg
in
jg
icebp
inc
in
pop
lods
adc
scas
repz
dec
test
xchg
aad
cwtl
in
xor
push
push
scas
mov
daa
dec
sbb
movsl
sub
imul
dec
inc
fldenv
jbe
shrb
sub
dec
pop
cmpsb
ds
rcll
je
fadds
inc
xor
addl
mov
cmc
add
add
fsubrs
lods
subl
lods
push
jl
testl
hlt
setb
dec
fildl
popf
xchg
lods
outsl
mov
xor
bound
imul
add
scas
lret
xorb
popl
pop
push
mov
mov
int
push
jle
jl
imul
push
jp
adc
or
xlat
sbb
div
cwtl
pusha
xchg
mov
add
xchg
scas
cmp
add
outsl
inc
or
mov
lea
in
into
and
jp
lret
inc
adc
adc
lcall
ret
adc
les
shll
into
xchg
aad
jb
mov
lock
test
aad
stos
or
dec
imul
sahf
and
in
jbe
sub
dec
test
aas
test
mov
js
std
insb
mov
push
push
sub
push
js
cmpsl
ss
push
fistpll
xor
adc
inc
xor
xlat
bound
ds
loopne
inc
das
fsubr
jle
adc
scas
push
aad
lahf
cmc
pop
mov
ret
repz
movsl
insb
pop
dec
xchg
stos
outsb
test
outsb
aad
and
pop
and
dec
cmpsb
jmp
jmp
xchg
ljmp
js
fisttpl
xchg
or
aam
or
and
lea
pop
mov
out
sub
cli
fiadds
aad
cmp
in
sbb
push
fists
out
data16
jne
cmp
inc
adc
popa
pop
fstp
inc
pop
andb
jle
test
push
add
insl
popa
dec
pop
and
out
mov
xorb
mov
push
jl
jle
lahf
dec
outsb
mov
jmp
dec
pushf
sub
shrb
jae
loop
popf
in
jne
lahf
dec
subl
adc
outsb
movsb
clc
add
sub
ret
das
and
popf
sti
dec
rol
imulb
imul
mov
lret
lret
cmp
loope
lret
data16
jg
cmpsl
fcoml
pop
dec
pusha
jmp
xor
outsl
mov
push
sbb
bswap
enter
add
jo
stc
rcrl
pop
dec
repz
out
mov
sub
pop
adc
ficomps
xchg
dec
push
mov
xchg
fs
dec
add
and
pusha
das
xchg
cmp
cs
mov
jns
into
xor
jge
in
push
sbb
inc
test
xchg
out
notl
xchg
sarl
inc
and
mov
xlat
loopne
jns
lock
lods
popf
stc
imul
adc
ds
rcrl
mov
test
jmp
mov
sti
jl
and
or
popa
add
out
dec
xor
mov
xor
dec
or
pusha
ss
leave
sub
cwtl
and
daa
test
in
add
cmpsb
mov
mov
mov
in
inc
xchg
or
sahf
add
dec
lods
in
sbbl
cmpsl
and
add
push
jae
mov
xlat
fimull
fmuls
sub
fsubl
mov
stos
scas
pop
rol
aam
push
stos
xchg
pop
inc
test
and
movsl
negb
lds
sub
aam
mov
daa
inc
cmpsb
jp
and
test
leave
outsl
in
lods
jle
xchg
ret
out
jmp
lea
xchg
mov
and
out
ds
or
stos
lods
pop
dec
push
and
sub
insb
insl
adc
dec
in
push
xchg
mov
insb
lods
movsl
sahf
push
dec
mov
outsb
pop
inc
std
iret
shrl
add
dec
mov
adc
push
xchg
and
icebp
jle
dec
filds
lods
out
test
dec
pop
or
mov
fldl
mov
pop
out
sub
add
gs
fcompl
and
mov
push
stos
sbb
clc
es
adc
aas
pop
mov
inc
sub
cmp
jmp
stos
sbb
xchg
or
dec
pop
cmp
or
mov
jne
jmp
pop
cmpsb
fucom
xchg
add
or
mov
aas
lods
shlb
jnp
test
subl
int3
sub
frstor
sub
repz
int
push
or
sub
xchg
push
gs
rcrb
jl
pop
test
shrb
popf
and
pop
or
mov
pop
in
push
ret
sub
rol
push
jmp
dec
rorl
or
loope
cltd
add
pop
pop
icebp
sbb
sub
jp
add
push
je
paddusw
mov
leave
fsubrl
das
scas
pop
add
loop
jbe
sbb
mov
shll
insl
shll
dec
xor
mov
jae
jne
cmc
mov
lret
mov
std
dec
in
outsb
pop
outsb
stos
sub
inc
adc
std
pop
in
or
push
xchg
xchg
shll
insb
es
mov
inc
jecxz
repz
xchg
in
movsb
or
shlb
pop
dec
ljmp
and
and
andl
dec
in
push
leave
or
adc
int3
stos
push
test
imul
jmp
jle
popa
test
outsl
mov
ljmp
fiadds
orl
mov
push
mov
lea
mov
in
push
dec
or
aaa
inc
dec
movsb
pop
mov
jle
sbb
mov
fistpll
jbe
dec
jle
sbb
cmp
sub
outsb
es
xchg
jmp
cmc
sbb
mov
xchg
orl
sub
lods
sbb
sahf
sbb
fnstsw
and
jp
and
rol
insl
inc
pop
or
push
sbb
sti
inc
les
aas
xchg
pop
out
cmp
dec
mov
adc
hlt
dec
inc
push
lahf
jnp
sbbb
sub
fsubrl
or
mov
xchg
orb
in
sub
and
inc
dec
or
push
test
movsl
in
out
or
js
inc
stos
test
test
jecxz
sub
outsl
dec
int
sarl
sarb
lods
sub
in
hlt
xchg
inc
shll
fsubl
ljmp
rorb
lcall
imul
push
mov
in
fsubl
and
sbb
into
lds
jb
test
outsl
repz
sti
sbbl
repz
pop
or
iret
in
aam
in
jno
sub
stos
cltd
insb
mov
stos
mov
sub
cmp
add
fmul
add
xrelease
mov
repz
int
mov
bound
sub
xor
fisttps
push
dec
std
adc
insb
xor
flds
jl
or
dec
mov
push
rcrl
fsubr
lea
dec
int
or
fs
aam
outsb
fistpl
sbb
inc
insb
sub
fdivrl
sub
std
cmpsb
cmp
jle
mov
loope
inc
pop
or
std
movsl
cmc
fisttpl
mov
ss
mov
jecxz
mov
scas
xchg
bound
js
fdiv
mov
fadds
loop
outsb
or
outsl
sub
mov
mov
cld
mov
cmpsl
xchg
incb
or
bound
outsb
sub
pop
imul
inc
insb
lahf
inc
das
sbb
pop
test
lods
add
fsubrs
jmp
outsb
imul
je
test
lods
xchg
xor
mov
xor
outsb
pop
stos
test
fldcw
ljmp
outsb
fsubrp
sbb
push
out
pop
cmpsb
pop
pushf
xor
fistpl
jg
lahf
push
pusha
insl
dec
add
lods
mov
dec
mov
out
inc
loopne
std
or
sti
aad
dec
orb
jo
mov
mov
ljmp
test
out
insb
jo
shll
outsb
frstor
adc
mov
push
out
xor
fldl
fdivrs
aam
ljmp
das
push
inc
pop
xchg
push
fsts
lret
in
and
stc
int
lds
dec
mov
movsb
outsl
cwtl
adc
cwtl
adc
imul
fldt
pop
or
add
daa
jle
test
daa
dec
dec
cmpsl
xchg
sub
mov
sub
pop
inc
roll
sbb
push
or
sub
jbe
lret
shrl
imul
enter
aad
xchg
xchg
outsl
sub
fimuls
ljmp
aas
cmpsb
dec
icebp
push
test
pushf
in
or
icebp
movsb
xlat
xorl
adc
jns
sbb
iret
lea
sti
imul
repz
movswl
push
mov
dec
pop
cmpb
sub
psrlw
pop
loope
lret
xchg
jecxz
shrb
sahf
cmc
out
in
mov
clc
mov
aad
loope
pop
mov
fwait
cmp
les
fstpt
dec
pop
adc
and
and
push
pop
scas
sbb
adc
ret
nop
pushf
jle
frstor
stos
andl
lods
insl
test
in
mov
aad
cmpsl
daa
outsl
fidivrs
pop
shl
fisubrs
adc
jmp
sub
shrl
jmp
scas
sbbl
ss
jmp
popf
pop
jne
movsb
mov
mov
lret
or
lcall
pushf
mov
cmp
or
fmul
gs
add
movsb
test
sub
cwtl
and
cmp
fwait
sbb
lcall
jns
mov
xchg
xor
stos
lea
sub
cmc
and
lea
and
faddl
jle
inc
in
sub
push
das
stos
stc
push
das
pop
jg
orl
ss
insb
jmp
test
pop
pop
ds
cmp
and
inc
movsb
inc
scas
inc
or
mov
sub
adc
push
bnd
pushf
and
movsb
add
leave
add
sub
push
ret
rorl
mov
ficoms
sbb
xlat
cld
out
test
inc
xchg
fwait
add
shlb
xor
or
sub
insl
rclb
or
push
sub
dec
icebp
in
repz
jge
cmpl
jbe
push
imul
pop
mov
lds
rorb
fmull
push
js
mov
and
mov
test
mov
dec
sub
push
les
insb
popa
push
pop
iret
and
iret
and
test
scas
inc
cmp
imul
loopne
jmp
enter
push
popf
mov
adc
insb
sub
jmp
pop
sbb
test
insl
jmp
dec
xor
popa
push
sub
mov
jmp
mov
mov
or
pop
addl
inc
les
sub
push
sub
in
inc
imul
jmp
adc
or
mov
fildll
dec
sbb
push
push
stos
push
adc
lret
lods
in
pop
ds
shl
in
sub
sub
mov
out
add
lahf
pop
jmp
fxam
jmp
jo
cmpsl
push
mov
test
cmpsb
mov
pop
sarb
insl
sti
orl
push
scas
dec
cwtl
insb
sub
loopne
sbb
gs
stos
inc
pop
and
or
push
in
xchg
movsb
outsb
adcl
add
jnp
pop
movsb
inc
sub
cli
mov
inc
dec
mov
add
les
xchg
insb
dec
dec
jb
aam
and
and
int
sbb
or
addb
pop
fidivrl
loope
stos
cmp
shrl
dec
dec
jecxz
dec
mov
and
pop
movsb
sub
jg
sahf
dec
xchg
test
nop
std
test
adc
cmp
pop
lcall
stc
divb
je
mov
pushw
mov
addr16
lcall
and
xor
ret
cmpsl
xchg
insb
fidivs
sub
inc
es
addb
sbb
das
sbbb
jo
int3
shrl
push
jmp
fnstsw
xchg
or
ljmp
std
cmpsl
mov
popf
pusha
shll
xor
outsb
jmp
movsb
cmp
jecxz
fnstsw
cmp
xor
jmp
cvtdq2ps
stos
pop
dec
or
sub
sub
sub
push
pop
insl
or
sub
or
in
subb
insb
std
lea
or
or
sub
rol
std
push
cmpl
pop
iret
or
lcall
push
and
sub
xchg
js
mov
fidivl
pop
dec
jae
fists
pop
das
fmuls
in
stos
xchg
cmp
mov
jns
loope
dec
stos
mov
sub
scas
adc
add
mov
popa
mov
dec
insl
fcompl
mov
push
aam
jl
lods
aad
fsubrl
dec
cld
mov
inc
sub
mov
test
jns
sbb
imul
cmp
test
mov
add
mov
mov
jg
sbb
xchg
dec
test
or
subb
ret
test
rolb
and
xor
jns
aas
mov
fmul
andb
mov
fnsave
mov
and
push
pop
add
mov
push
adc
jge
cmc
scas
das
stos
push
repnz
ss
mov
push
sub
cli
in
idivb
and
cmpsb
int
adc
cmp
out
xor
add
add
fcomp
outsb
mov
fincstp
imul
xchg
pusha
stos
cmpsb
pop
fstps
loopne
push
jle
xchg
rcrb
ret
dec
mov
sub
insb
mov
outsb
cltd
and
mov
movsb
out
mov
sbb
shrl
sub
sub
lods
cmp
test
andl
jp
adc
inc
jnp
cmp
ret
cmp
lods
jle
lods
mov
pop
iret
sub
xor
cmc
imul
pop
mov
shrl
jns
lcall
jle
sub
pop
push
ffreep
lea
divb
push
mov
ja
outsb
scas
inc
push
rorl
std
cmpb
xchg
rol
xchg
push
push
push
cmpsl
insb
bound
and
jne
lcall
inc
mov
stos
push
lods
loopne
pop
subb
fmul
push
add
lock
xchg
sbb
int3
gs
push
mov
outsb
leave
mov
or
xor
push
pop
sbb
or
cmp
mov
std
int3
fdivrs
out
dec
insb
or
or
scas
mov
xchg
push
sbb
das
mov
push
fxch
cmp
dec
add
in
aas
bound
in
xor
dec
scas
gs
mov
lcall
pushf
in
pxor
frstor
dec
lods
in
iret
jge
fstps
pop
fisttpll
stos
and
inc
dec
or
mov
xor
sub
pop
inc
out
push
cmpsl
xchg
push
add
jns
sbb
stos
jecxz
pushf
adc
mov
gs
sub
sbbl
daa
xchg
dec
mov
push
mov
ret
lods
mov
push
mov
add
jmp
mov
pop
lret
mov
outsl
sub
jbe
dec
push
pop
jne
into
push
loope
jmp
push
fimuls
lahf
or
sub
or
in
pop
sbb
fdivrl
push
aaa
loopne
imull
scas
test
data16
sbb
sarl
fisubl
daa
xchg
xchg
push
jns
pop
movsl
sbbl
addr16
shll
pop
and
out
jo
sub
push
stc
lods
stos
subl
stos
jnp
xor
inc
clc
mov
push
iret
sbb
xlat
pop
imul
in
int3
jns
jmp
push
add
push
dec
add
mov
push
into
out
sbb
enter
mov
push
mov
dec
xchg
fistl
mov
mov
add
aad
ja
or
cli
xchg
sbb
jmp
mov
fwait
test
out
loope
dec
inc
pop
jmp
push
mov
addb
iret
pop
addb
inc
insl
mov
xlat
sub
inc
popa
and
jle
cmp
jle
pop
dec
pop
leave
add
call
int
inc
dec
mov
lods
or
inc
repnz
push
sub
insb
pop
test
xor
xchg
fdivp
inc
sub
push
pop
mov
test
aad
repz
adc
into
sbb
push
cmp
into
insb
jle
lds
sub
int3
dec
mov
inc
lea
std
mov
pop
dec
testl
daa
jle
std
mov
xorb
fstps
xchg
daa
popf
xor
inc
lret
out
inc
lods
inc
add
sbb
loope
fimull
jg
add
repz
add
push
jp
jle
insb
scas
xor
jge
cmp
aad
fs
adc
in
xor
jmp
sahf
and
test
jmp
dec
cld
stos
mov
outsb
add
mov
mov
mov
mov
out
pop
push
or
pop
fwait
jg
inc
cmp
fstpl
sub
jo
fwait
addr16
scas
xchg
pusha
adc
repnz
xchg
cmp
mov
lds
into
and
fwait
add
xor
das
mov
rcll
dec
push
sti
inc
xor
popf
test
scas
out
scas
jb
pop
rol
dec
popf
adc
test
inc
cmp
add
cmp
add
pop
popf
push
movsb
push
mov
dec
jnp
sbb
xor
push
xchg
xor
in
mov
ljmp
movsl
inc
dec
popf
mov
dec
ja
ss
mov
adc
fucom
jnp
and
out
push
push
test
pop
push
scas
push
movsl
xchg
notw
jbe
inc
sub
xchg
xlat
sub
lods
test
mov
mov
dec
outsl
out
sub
jle
out
xchg
dec
xchg
mov
movsl
ret
mov
movb
add
push
sbb
adc
mov
jl
mov
and
jo
test
mov
scas
mov
frstor
push
fs
fwait
cmc
mov
cmp
fs
and
xor
xchg
sub
push
lcall
adc
fidivl
mov
fnsave
clc
pop
cmp
filds
fincstp
aaa
inc
dec
sub
fsubrs
inc
imul
out
sti
add
inc
aaa
jne
and
test
lret
or
push
stos
inc
iret
je
push
sub
mov
or
inc
hlt
pop
stos
inc
cmp
sub
int3
cmp
sbb
ja
sti
xor
out
fldcw
or
ffree
sar
out
cmpsl
fwait
jg
rcl
or
sub
lods
dec
sbb
xchg
stos
dec
sahf
movsb
jge
fmuls
stos
icebp
andb
in
sbb
jle
lods
in
icebp
push
mov
pop
daa
cmc
fcompl
test
xor
adc
leave
data16
in
adc
dec
sbb
inc
mov
xor
dec
jno
or
push
es
cmp
inc
or
pop
fwait
jle
mov
sbb
adcb
rcrl
adc
sbb
jns
test
jbe
cmpsb
data16
mov
imul
add
add
fnsave
popf
jbe
enter
or
fbstp
xor
insl
xchg
insl
subb
iret
dec
inc
adc
in
xchg
test
movsl
imul
lret
lea
ret
xchg
add
pop
insl
or
lea
mov
pop
mov
movsb
adcb
mov
pop
jae
lcall
sbb
scas
outsb
popa
repnz
cwtl
popf
stos
iret
popf
and
lods
popf
dec
push
sub
movsl
lahf
insl
aaa
fstps
stos
and
lods
mov
int3
gs
lods
or
dec
fisttpl
sub
repz
scas
das
jp
or
fisttps
mov
push
or
dec
std
ror
in
inc
jae
jle
pop
aas
and
aam
fmull
shll
and
mov
push
fmul
dec
fimuls
xchg
fimuls
lahf
adc
push
or
cmp
sbbb
cmc
ret
dec
gs
outsl
mov
or
call
fldt
scas
stc
sbb
push
ja
jle
fcompl
pop
or
mov
popf
push
mov
lret
pop
iret
lret
adc
or
jo
or
aad
xchg
outsl
pop
bound
sti
fstps
push
or
xchg
inc
dec
loopne
fbld
ret
stos
mov
push
mov
lret
mov
xchg
xchg
mov
ds
cmp
inc
loope
dec
hlt
push
out
cmp
fisttps
jl
gs
dec
adc
jecxz
jle
sub
imul
or
adc
jae
dec
outsb
lahf
iret
inc
mov
dec
mov
fsubp
add
jmp
aad
sbb
gs
je
pop
xchg
subl
gs
jmp
cmp
sub
dec
sub
pop
mov
mov
lods
push
dec
in
pop
or
mov
cmc
sub
dec
test
mov
push
dec
enter
xor
jecxz
xchg
enter
xlat
hlt
push
pop
icebp
sub
or
xchg
loopne
sar
xchg
push
dec
shrb
xchg
lret
mov
cmpsb
dec
push
add
push
leave
mov
enter
mov
mov
push
das
cmp
lods
push
xor
mulps
inc
sbb
inc
nop
inc
or
sub
sub
or
lcall
lods
pop
popf
cmpb
mov
sbb
insb
femms
outsl
addr16
inc
jne
stc
into
mov
dec
cmpsb
sub
adc
loope
cmp
xorl
out
ss
mov
lea
js
xor
jle
inc
dec
cmpsl
lcall
mov
pop
int
jmp
jle
push
out
enter
push
mov
fsubr
cmc
push
in
jbe
movsl
aam
cmp
sbb
lcall
lods
pop
mov
xor
divb
pop
mov
lcall
add
fisttpl
inc
xlat
in
int
cmp
cmpb
shlb
sub
pop
jno
pop
imul
cmpsl
xor
dec
clc
outsb
push
shr
inc
or
mov
cmpsl
lods
bound
lea
lret
pushf
cmp
sub
outsl
popa
mov
pop
xchg
out
sbbb
popa
push
mov
out
mov
jg
jle
ja
mov
jecxz
iret
cwtl
loope
inc
pushf
andb
add
std
pop
pop
jnp
lods
pop
inc
jnp
out
sub
pop
fstps
movsl
xchg
jp
push
dec
adc
out
pusha
mov
xor
push
sbb
cltd
outsb
sbb
sbbl
iret
ss
cmp
sub
mov
cld
fisubrl
daa
mov
pop
sarl
mov
inc
add
mov
movsl
sub
pop
ret
sub
insb
jge
mov
inc
push
movsb
lea
mov
dec
lcall
sbb
das
xchg
hlt
pop
sub
lcall
jno
xor
incb
aas
xchg
pop
ds
test
test
psrld
fsubl
leave
imul
addr16
imul
push
add
shl
into
imul
dec
lods
js
sbb
xchg
lods
fcomi
lods
push
mov
idivl
lahf
or
ss
xchg
jge
imul
xchg
pop
outsb
lea
pop
das
adc
jg
faddl
mov
movsb
rolb
and
movsl
lahf
aad
faddl
sub
inc
pop
idivl
push
inc
fldl
jb
notl
stos
popf
das
xchg
lret
sbbb
jg
bound
lods
mov
cmc
insl
jmp
lea
pop
mov
cltd
sub
cbtw
in
sub
xlat
lea
cltd
aad
scas
dec
mov
fwait
mov
lcall
jo
shl
sub
loope
in
mov
js
pop
dec
pop
mov
and
aam
push
aaa
pop
movsl
ja
cmpsb
test
xor
cmp
dec
push
mov
jae
lea
int
dec
out
nop
iret
cs
add
imul
lods
outsl
enter
test
pop
lret
and
imul
scas
dec
add
out
xchg
or
ret
stos
cmp
int
xchg
mov
lea
sbb
mov
popa
lahf
cmp
scas
fnstsw
sub
mov
add
insl
inc
sub
jecxz
scas
out
pushf
cmp
pop
mov
popa
mov
or
cld
cmp
dec
sub
pop
ret
jno
lret
push
xlat
mov
lods
fstl
cmp
mov
push
jae
adc
imul
jno
inc
jge
dec
es
pop
int3
push
popa
ret
sahf
dec
imul
leave
jg
ror
out
icebp
dec
ja
dec
dec
mov
jnp
je
movsl
inc
push
adc
int
lods
hlt
rcll
cmp
mov
adc
jns
in
outsb
cld
ret
or
jnp
cmp
sub
dec
dec
popa
fsubrs
stc
add
in
jle
mov
cld
inc
adc
sub
pop
cmpl
test
cmpl
insl
outsl
ret
jecxz
pop
jl
cltd
sub
fwait
lods
iret
add
imul
sar
and
outsb
imul
loop
lods
mov
or
sub
dec
mov
insb
and
fldenv
mov
sbb
ret
push
subl
jmp
fmuls
xlat
jmp
jb
test
int3
cmp
xlat
jno
and
mov
pop
stc
dec
mov
out
xor
cmp
pop
dec
jns
sub
lea
dec
call
pop
popf
fcomps
mov
daa
andb
and
ret
pushf
sub
scas
inc
test
arpl
call
dec
lret
popf
or
xor
dec
out
shrl
xlat
xchg
les
jno
nop
jecxz
mov
dec
cmpsl
pusha
jp
daa
mov
jge
xor
and
xlat
dec
arpl
xchg
and
xor
pusha
mov
cmpsl
mov
push
test
push
lret
aam
daa
push
imul
dec
out
fwait
lods
mov
or
sub
out
push
push
insl
fwait
xchg
jne
dec
mov
gs
jle
les
lods
loopne
or
mov
cmpsl
fwait
push
lea
push
pop
call
enter
sbb
push
call
mov
jnp
xchg
cld
test
sbb
movsl
dec
jae
insl
scas
xor
xchg
movsl
dec
mov
pop
les
mov
arpl
lret
dec
mov
jle
cmpsb
dec
xor
sbb
sub
jecxz
lahf
in
gs
int3
lahf
lods
mov
mov
and
xchg
add
lahf
cmp
lods
fldl
daa
add
add
pop
icebp
jmp
pop
and
movsl
aas
fs
out
mov
stos
cmc
or
and
sub
in
stc
dec
mov
in
jne
adc
bound
insb
test
ljmp
shrb
add
gs
ljmp
pop
dec
lret
nop
xchg
xor
dec
dec
push
loopne
rorl
orb
outsb
pop
sbb
insl
popf
pop
test
imul
and
jnp
xchg
arpl
sbb
loopne
xchg
push
fwait
push
adc
aad
pop
in
lahf
loopne
orl
jl
gs
lret
orl
dec
iret
insb
stos
mov
sub
dec
arpl
xchg
imul
outsb
dec
xor
cmp
push
pop
cmpsl
dec
in
mov
ljmp
and
fmuls
nop
loop
and
daa
mov
popf
sbb
cltd
ja
test
stos
push
loop
mov
stos
mov
mov
gs
testl
lods
popf
mov
lods
pop
in
cmc
jecxz
popf
push
in
repnz
roll
pop
dec
xor
mov
addb
repz
out
arpl
sub
sahf
in
dec
loope
xor
fisttpll
or
test
stos
add
sub
push
and
sbbl
pop
mov
inc
out
dec
sub
rcrb
xchg
bsr
sbb
mov
imul
testb
std
lcall
pushf
iret
sarl
adc
xchg
jle
andl
sbb
xchg
dec
fidivrs
xchg
test
sbb
scas
insl
lds
daa
outsl
lds
lods
xchg
push
insb
adc
test
lock
in
imul
sub
xlat
dec
in
sub
sub
dec
in
xor
lods
dec
in
mov
cmp
sbb
aaa
pop
dec
xchg
cmp
mov
cmp
imul
push
pusha
jmp
sbb
or
adc
fistps
ljmp
sbb
pop
xor
xor
cmpsl
fisttpll
dec
mov
pop
cmp
js
push
cmp
cmp
push
and
lods
sbb
lods
or
enter
inc
mov
flds
lahf
repz
pushf
cmp
pushf
mov
mov
in
lds
insl
push
in
popf
or
jmp
enter
xor
sub
nop
insb
outsb
fucomp
pop
mov
sbb
mov
int
ret
pop
lds
sbb
fimull
mov
mov
movsl
cmp
push
lcall
enter
mov
mov
sbb
push
xor
mov
outsb
ficompl
jg
mov
and
sbb
je
pop
addr16
test
or
xchg
sub
insl
ret
sub
in
mov
int
xchg
call
jp
outsl
lret
out
mov
xchg
push
cmp
fldenv
sub
xor
mov
das
or
jo
xchg
adc
cmpl
inc
test
fucomip
insb
bswap
aas
mov
inc
scas
into
pop
stos
dec
pminsw
xor
jecxz
and
lods
dec
xchg
outsl
xor
jecxz
fisttpll
fmull
ror
sub
pop
cmp
or
xchg
test
inc
in
insb
and
in
push
dec
xor
and
adc
xchg
sbb
mov
stos
jmp
in
mov
ret
jmp
scas
sub
push
sbb
das
pop
or
das
mov
xorl
ret
adc
gs
int
xor
cmp
rcl
and
fcompl
sub
jge
xchg
out
mov
leave
add
dec
test
jmp
and
mov
dec
lods
call
add
rorb
sbb
shrb
leave
cmpsb
add
clc
rorl
add
xchg
or
adc
lahf
lret
pop
into
test
ret
adc
out
cmp
pop
les
fwait
cld
fwait
mov
test
sarl
loopne
and
arpl
xchg
ja
dec
sub
int
xchg
sub
and
lock
in
das
mov
int
push
add
pushf
in
js
cmp
lcall
scas
cmpsb
and
xor
daa
mov
inc
xchg
dec
mov
xchg
mov
in
movsl
sub
adc
test
mov
pop
push
ljmp
push
lock
aaa
lcall
dec
push
cltd
mov
mov
jns
jne
test
sub
xor
sbb
mov
adc
int
and
and
mov
and
lea
xchg
pop
int
psadbw
and
pop
cmp
push
dec
mov
scas
push
sub
mov
int
in
rcrb
add
imul
clc
sub
leave
out
mov
or
or
cmp
or
imul
jmp
fsubl
shlb
push
and
hlt
sub
lcall
outsb
pop
dec
stos
push
lods
push
jne
mov
push
cmpsl
in
sbb
fildll
gs
and
mov
jge
sub
das
push
or
xchg
cmp
or
sahf
in
outsb
stc
push
jmp
out
in
sub
fldt
pop
pop
dec
push
out
xchg
call
xchg
xchg
xchg
pop
jmp
into
cltd
in
mov
roll
push
mov
lods
mov
loope
xchg
scas
cltd
test
cltd
cld
in
dec
xlat
mov
cmp
xchg
push
fimuls
rep
inc
mov
mov
sbb
in
repnz
inc
es
das
and
mov
enter
push
add
stc
ja
add
jno
mov
loope
push
gs
dec
jmp
imul
push
xlat
jg
jno
popa
add
nop
iret
mov
add
repz
cmp
jb
cli
sar
pop
cmp
outsl
sbb
idivl
cmp
dec
dec
jl
add
jns
fwait
xor
sbb
xchg
and
xor
fstps
pop
inc
mull
test
sbb
sub
cmpsb
lret
dec
ret
pushf
and
into
vpcomq
stc
cmp
popf
imul
stos
in
xchg
repnz
dec
fnstcw
les
sub
push
lahf
insb
les
faddl
push
loope
add
inc
pop
lods
orb
sbb
cmp
orl
ds
and
inc
ja
pop
insb
fidivrs
or
mov
and
or
aad
dec
and
ljmp
mov
cld
movsb
jns
rcrl
xchg
insb
cmp
leave
pop
imul
cmp
adc
push
cmp
mov
sub
and
cmpsb
loop
jns
int3
shll
sub
int3
dec
push
gs
int
add
sti
enter
push
jl
je
pushf
fwait
int
outsl
in
push
mov
dec
mov
inc
test
test
xchg
shlb
xchg
std
in
adc
ds
orl
ret
icebp
xor
bswap
iret
scas
stc
or
les
lret
xchg
and
sub
mov
jge
fisttps
mov
insl
adc
les
dec
or
addr16
je
addl
fsubrs
dec
in
ljmp
mov
in
dec
clc
push
stc
das
dec
sahf
or
das
cli
or
pop
pop
out
cmpsb
sete
inc
ficoml
lret
inc
push
bts
or
dec
fwait
mov
inc
dec
inc
lea
dec
sbb
add
and
outsb
stos
pop
outsl
rolb
cmp
aad
xchg
jo
fiadds
pop
push
mov
aaa
stc
cmpsl
xor
insb
xlat
out
stc
sub
subb
mov
shlb
das
mov
push
mov
lods
out
shrb
xchg
dec
cmpsl
ds
mov
insl
cld
sub
mov
mov
addr16
repz
loop
add
xchg
xor
cmpsl
leave
inc
push
pushf
fnstsw
lea
into
scas
aas
je
lods
push
xchg
xchg
icebp
fmuls
gs
negl
mov
add
in
cwtl
push
xchg
mov
or
hlt
rcrb
nop
rol
lret
add
or
mov
xchg
imul
sub
jmp
ljmp
mov
jecxz
stc
fildl
in
lods
sbb
fs
out
mov
mov
mov
mov
movsl
mulb
pop
mov
out
insl
mov
scas
int
iret
cmc
in
jns
pushf
iret
mov
sbb
pop
xor
sahf
jge
sbb
mov
ja
mov
or
cmp
loope
and
stos
fwait
movsb
pop
push
in
inc
mov
movb
testl
outsb
adc
add
lcall
incb
outsb
xchg
outsl
notb
sub
mov
testb
cltd
xchg
leave
sub
pop
jo
push
lods
push
popa
scas
cltd
int
mov
inc
test
movsb
dec
into
and
dec
sub
clc
mov
inc
jne
fwait
out
repz
mov
mov
dec
push
cltd
mov
xchg
sub
lret
insl
fstpt
pop
in
or
push
aam
jns
clc
test
out
psrld
repz
adc
mov
add
xlat
mov
push
dec
in
fstps
out
outsl
cwtl
enter
mov
addr16
push
cmpsl
lea
xor
jl
test
in
lret
outsb
shr
sbb
out
lock
lea
ss
or
pop
cmp
jne
adc
andl
mov
mov
and
arpl
xchg
mov
test
mov
adc
add
jae
push
add
xchg
bound
mov
iret
adc
sbb
ljmp
rcll
mov
popa
mov
les
stc
sub
es
add
lods
loopne
pop
fldt
sbb
leave
cwtl
test
mov
call
mov
sub
push
sub
aas
bound
mov
and
pop
pop
lahf
jg
sbb
push
idivl
jmp
mov
jmp
dec
or
and
xor
cmp
fucom
shll
mov
cwtl
xchg
cmp
dec
add
sbb
add
push
push
imul
mov
xchg
inc
jge
or
movsb
pop
popl
mov
mov
add
popf
stc
mov
mov
pop
pop
out
aam
jp
sbb
mov
or
inc
int3
mov
stos
add
push
jne
add
sub
adc
cmp
xchg
sub
or
pop
push
scas
sub
cwtl
mov
pop
enter
dec
lods
in
aad
repnz
into
pop
push
cmp
jbe
lcall
inc
pop
add
movsb
and
repz
mov
cmp
fldl
adc
orl
mov
xor
dec
cmp
add
mov
mov
xor
int
add
adc
inc
sbb
lcall
inc
sbb
cli
pop
fnstcw
ds
jo
xchg
cmpb
jo
cmp
in
xor
inc
and
cmpsl
out
pop
shrl
xor
sarl
es
fwait
push
jne
scas
lds
xlat
movsl
into
sbb
mov
lahf
inc
scas
cmp
pop
popf
push
out
fidivrs
lret
fxch
jns
cltd
movsb
xchg
and
push
pop
sub
bound
cmpsl
xor
push
ljmp
shlb
andb
in
sbb
ja
in
dec
inc
jmp
sub
test
push
cmpsb
sbb
sub
mov
daa
pusha
rclb
mov
adc
sub
xlat
mov
inc
test
shl
cwtl
sbb
outsb
ror
lahf
dec
lret
stc
ret
enter
sub
repz
mov
fldenv
mov
jg
icebp
daa
xchg
popf
mov
jae
js
and
test
aaa
jge
lcall
pop
ds
mov
jg
call
rep
mov
sub
flds
in
sub
mov
movsl
clc
dec
or
push
hlt
adc
xchg
dec
into
push
sbb
iret
mov
fidivl
mov
add
xchg
sbb
aaa
pushf
les
lock
in
lods
mov
pop
fimuls
cmpsb
rolb
test
cmpsb
rorb
test
lds
cmpsl
lock
xor
mov
mov
gs
or
in
jno
int
adc
push
scas
fldl
out
aas
cmp
cmp
pop
iret
sub
lret
cmp
in
imul
sub
sub
xor
jl
notb
pushf
mov
push
jl
int3
in
push
jne
push
jge
lods
cmp
lret
int
sbbl
add
xor
lret
inc
xchg
popa
loopne
pop
fnstsw
les
and
out
ffreep
loope
pop
test
inc
mov
mov
mov
fsubrl
fwait
pop
les
imul
jle
dec
xchg
cmp
dec
jl
mov
jp
inc
jg
pop
loope
loop
sbb
std
push
data16
or
push
cmp
outsb
loopne
pop
cmpsb
dec
pop
std
jecxz
jl
fildl
movsb
test
fists
xchg
xchg
xchg
fisubrl
repz
cltd
xchg
arpl
ret
in
push
loope
xorl
in
pop
jne
xchg
mov
movsb
outsb
jp
jne
gs
cmovp
jns
lock
xor
mov
or
vmovntpd
adc
fs
loop
aaa
dec
shr
in
mov
aas
test
push
mov
imul
dec
pop
pop
stc
xorl
push
nopl
int
or
add
std
inc
push
push
shufps
pusha
fsubrl
insb
out
loope
lods
jbe
pop
push
roll
stos
or
adc
imull
pop
pusha
mul
pop
cmp
sub
es
xor
cltd
sbb
xchg
popf
push
add
sbb
subb
and
fmuls
insb
adc
sub
add
sub
idivl
in
daa
addb
dec
popa
stos
xchg
and
pop
mov
cmpsb
xlat
std
mov
mov
xor
cld
popf
mov
sub
clc
mov
jle
add
jle
jo
dec
mov
stos
pop
cli
mov
sub
aam
jle
aam
pop
jle
addr16
jbe
daa
mov
test
push
ds
jle
sbb
inc
imul
push
lds
rorb
bound
inc
mov
shrl
dec
ret
ficoml
out
ds
xchg
pop
repz
in
les
pop
les
xchg
xor
cld
cwtl
fs
int
icebp
and
mov
insl
jp
test
hlt
data16
dec
xor
ror
insl
push
pop
test
xor
fsubrl
pop
lret
cmp
push
jle
je
pop
pop
mov
inc
sub
sahf
pandn
out
jnp
mov
clc
inc
lahf
push
lods
mov
cmpsb
in
xchg
mov
mov
xchg
jmp
test
jns
lcall
or
loope
jg
test
outsb
mov
dec
das
cmp
inc
sub
cmp
into
aaa
push
lock
in
call
pusha
test
sub
fldt
mov
iret
in
addr16
sbb
cmpsl
dec
and
pop
mov
jnp
out
dec
pop
inc
shlb
fldlg2
jns
sarb
adc
hlt
xlat
jns
in
push
enter
adc
pop
dec
xchg
arpl
pushf
fdivrl
lret
movsb
test
pop
xchg
mov
dec
icebp
fadd
hlt
ljmp
pushf
fdivl
xor
add
jge
scas
fwait
in
int3
cmp
in
dec
and
mov
pop
xlat
shll
xchg
sbb
mov
loop
jno
dec
ss
clc
mov
test
pop
xor
test
sarb
xchg
ja
xchg
mov
and
mov
cmp
xchg
jnp
fwait
adc
outsb
loopne
mov
aam
xor
inc
cmpl
jl
xor
sbb
or
pop
xor
insl
fstpl
in
jg
faddl
call
cmpsb
pop
inc
jno
sbb
test
roll
in
imul
mov
sbb
int3
call
and
pop
mov
insl
xor
outsl
xchg
pop
or
mov
sbb
sahf
ds
or
pop
and
dec
movsb
pop
out
dec
in
test
or
pop
fcompp
popa
adc
aam
scas
in
pop
mov
jle
outsb
add
push
insb
cmpsl
and
push
jb
mov
lcall
jno
dec
dec
cmp
pop
inc
fs
ds
test
adc
jge
aaa
jmp
mov
cmpsl
mov
cmpsb
out
jbe
scas
fxam
lret
idivb
pop
pop
scas
jne
cltd
mov
xchg
xchg
or
push
or
icebp
mov
enter
pop
sbb
push
imul
jns
fstpt
sbb
cmp
sub
and
lahf
cld
pop
jne
mov
ljmp
mov
mov
push
in
inc
pushl
mov
mov
or
and
or
daa
popa
mov
aam
imul
arpl
sbb
sbb
repnz
inc
cmpsb
frstor
scas
iret
xchg
mov
mov
push
outsl
adc
out
sbb
sbb
cmpsl
and
hlt
popa
fwait
pop
das
nop
in
loop
mov
sbb
mov
test
jmp
std
ds
xor
dec
out
jae
xchg
fidivs
out
lcall
inc
pop
fxch
push
ss
aas
fidivs
jg
pushf
xor
mov
call
fildl
jge
sbb
and
xchg
jg
mov
jl
fcompl
mov
inc
insl
adc
sub
xor
pop
adc
pushl
and
jo
mov
pop
in
add
sbb
ret
pop
test
cmpsl
jmp
sub
dec
addr16
dec
push
cmp
nop
test
dec
shrl
push
jbe
sub
ret
dec
jb
jns
inc
int
insb
clc
loope
es
sub
ljmp
inc
testl
inc
add
sub
xlat
cmp
shlb
sbb
filds
xchg
loop
jge
fwait
pushf
add
push
xchg
xor
stos
insl
adc
fs
xchg
lds
pop
jbe
scas
add
sbb
sub
pop
les
movhps
es
fildll
mov
popf
and
add
imul
hlt
jle
bound
xchg
popa
xchg
lcall
pop
sub
sahf
inc
gs
xor
stos
sub
movsb
jnp
jle
mov
sbb
push
push
xchg
cmp
int
orl
ds
in
outsb
outsb
adc
outsb
or
cmp
loopne
divb
mov
cmpps
pop
push
outsb
mov
pop
sub
jp
out
repz
push
repz
jle
lcall
inc
dec
jne
mov
test
sub
inc
and
loope
push
out
in
stos
jp
sahf
inc
pop
sub
mov
cmp
push
insb
lret
mov
and
pushl
xchg
clc
ss
inc
mov
pusha
aad
lds
pop
je
xor
add
dec
inc
stos
test
mov
push
lods
pop
pusha
mov
jecxz
iret
pusha
inc
pop
jmp
outsb
ds
popw
inc
scas
sub
and
mul
mov
test
addr16
sub
dec
int
test
sub
add
xchg
lahf
data16
test
adc
and
or
out
push
add
xchg
scas
movsl
dec
out
pop
jns
inc
test
lods
test
andb
inc
xor
dec
cmp
ds
fisttpl
or
lea
and
dec
mov
dec
inc
test
or
xchg
sbb
aaa
in
imul
js
fwait
jo
icebp
sbb
std
sub
add
test
xchg
sti
sbb
outsl
sbbl
pusha
lea
xor
aaa
pop
adc
push
pop
mov
loope
push
int
push
aaa
enter
stc
wbinvd
jo
mov
pop
mov
call
fidivrl
in
aaa
pop
leave
pushf
lds
xlat
es
mov
cmp
pop
dec
mov
sub
mov
pop
scas
jmp
mov
int
mov
inc
sub
es
lea
inc
jno
inc
test
shll
xor
cmp
imul
dec
adc
inc
dec
outsb
repz
mov
es
xor
jp
ret
and
iret
adc
test
mov
adc
lret
add
jne
xor
sbb
xchg
mov
aad
popa
and
test
adc
es
daa
adc
cmpsl
mov
int3
pop
cmpsl
adc
int3
mov
xchg
mov
add
sub
add
dec
and
js
ret
in
push
pop
daa
bound
iret
cmc
push
mov
adc
cli
pusha
pop
push
das
add
push
sbbl
out
mov
call
sub
dec
mov
xor
fdivrp
push
push
mov
push
scas
test
and
das
lea
mov
iret
insl
lods
dec
dec
sar
dec
xor
inc
in
lcall
in
xor
mov
out
mov
push
mov
call
lea
push
xchg
jp
js
lret
sub
jmp
mov
lds
add
dec
adcb
push
cmp
push
in
inc
outsb
sahf
test
fdiv
xchg
dec
clc
pop
dec
insb
sbb
and
adc
pop
and
xlat
pushf
jge
sub
or
out
shlb
les
cmp
fimull
cmc
cmp
xchg
add
jp
iret
lea
inc
inc
pop
add
jno
clc
ret
jbe
mov
pop
xchg
dec
imul
pop
dec
fdivs
sub
dec
sub
adc
and
rorl
imul
mov
adc
enter
lahf
push
dec
mov
insb
lcall
sub
dec
lret
push
scas
pop
xor
push
outsl
int3
fcompl
sub
xchg
movsb
pop
push
pop
fstp
out
push
push
sub
pop
pusha
out
cs
jnp
push
cld
sub
js,pt
cmp
pop
push
xchg
scas
stos
test
jge
or
hlt
sub
sbbl
pop
pop
sub
in
scas
insb
xchg
cltd
test
inc
mov
dec
subl
cmp
out
das
lret
aad
mov
cmpl
clc
in
lahf
ret
cmp
dec
xor
push
out
sub
mov
or
add
bound
loopne
sahf
mov
fcmovbe
or
rolb
sub
jo
pop
inc
insl
jp
cmp
push
out
add
jmp
push
dec
lods
lods
lods
push
pop
jmp
aam
dec
xchg
jns
xchg
pop
cmpsl
lret
xchg
cwtl
pusha
sbb
dec
or
jmp
fidivrs
mov
je
inc
cmp
aas
mov
imul
insb
and
xchg
fnstcw
loop
movsl
pop
pop
flds
mov
loop
stos
mov
mov
pop
xchg
dec
out
dec
dec
cmp
das
xor
inc
int
add
xor
inc
movsl
testl
mov
xor
incb
fbld
xorb
iret
flds
in
jbe
cmp
xor
sarb
push
dec
sahf
pmulhuw
stc
shll
mov
fwait
pop
add
and
dec
ds
das
sub
dec
push
cmp
popa
fst
mov
add
out
mov
in
sub
xorb
test
fildll
into
dec
leave
loop
push
and
dec
out
inc
or
mov
adc
mov
out
jle
mov
lds
int3
dec
gs
xchg
test
outsb
movsl
std
ds
or
push
push
insl
xchg
leave
data16
push
test
push
inc
dec
mov
outsb
xchg
mov
outsl
test
xor
add
lods
xchg
dec
outsb
push
das
xor
fildll
outsb
add
add
and
movsb
test
or
dec
xchg
inc
cmp
jbe
fcoml
cmp
cmpb
inc
in
pushf
dec
fistl
push
ror
ret
cmp
xchg
movsb
sub
xor
les
test
push
movsl
pop
aas
cmpsl
xlat
push
dec
popf
push
outsb
mov
jp
cmpb
stos
sbb
cmpsb
push
dec
gs
out
lds
test
jp
xchg
mov
push
jne
dec
pop
mov
fs
mov
fisttpl
add
adc
ficoms
push
xor
das
sbb
mov
dec
sbb
outsl
sarl
xchg
sbb
sub
inc
add
adc
mov
pop
mulb
pop
outsl
into
push
inc
inc
ds
push
cmc
test
lea
aaa
inc
into
lea
jge
jmp
lcall
mov
fildll
adc
test
shll
fsubrl
stos
sbb
or
inc
push
adc
imulb
imul
int
in
test
jge
adc
fstl
sub
sbb
jbe
mov
push
mov
push
imul
cmpxchg
lret
add
xchg
lods
lock
push
push
and
pusha
add
push
pop
lret
xchg
fistl
jnp
jae
sbb
adc
out
xor
mov
push
imul
mov
add
sbb
jle
mov
ljmp
xchg
push
addb
dec
dec
ljmp
fmull
cmc
mov
xchg
jne
dec
dec
adc
in
scas
outsl
mov
test
out
xor
addl
dec
lock
adc
iret
bound
jnp
frstor
loop
mov
addb
outsb
repz
and
fidivrs
push
mov
and
dec
cmpsb
pop
inc
pusha
jecxz
test
jl
pop
les
push
mov
sbb
sub
cld
push
incl
cld
lds
cmpsl
bound
popfw
or
mov
pop
dec
lret
push
notl
push
bound
popf
lea
imul
dec
add
and
mov
jae
and
movsl
out
pop
in
mov
addb
out
stos
in
les
pop
int3
or
hlt
xchg
daa
aad
clc
fucomp
stos
fisttps
scas
jp
and
pusha
data16
daa
pop
cmc
xchg
lods
or
js
push
popl
mov
dec
jnp
push
adcb
mov
movsl
pop
stos
lods
push
fldenv
cmp
andl
push
sub
das
add
ss
aas
fmull
in
cmpsl
and
and
jbe
mov
sbb
pop
and
mov
fisttpll
sub
jle
fists
or
imul
movsl
lahf
loopne
or
cltd
and
cmpsl
push
jmp
test
addr16
adc
aam
dec
xor
dec
push
scas
lods
jmp
add
lret
adc
loope
js
test
std
mov
jmp
stos
mov
and
out
mov
sub
inc
scas
push
cltd
loope
pop
outsb
push
mov
movsl
hlt
dec
repz
scas
xchg
fs
sbb
and
test
aam
popa
push
rorl
push
js
loope
leave
and
and
inc
je
scas
cmc
dec
pop
daa
jmp
gs
out
xchg
push
cmpb
and
pop
gs
pop
mov
scas
push
movsb
mov
xchg
pop
pop
push
adc
dec
popf
into
cmp
pop
lret
inc
mov
dec
insl
lds
out
int3
push
cmpl
stos
push
dec
fnstcw
dec
dec
push
mov
mov
bound
ss
jmp
mov
sub
ret
and
loope
aam
repz
loop
notl
mov
and
or
mov
jnp
mov
push
mov
cmp
shlb
pop
cmp
dec
scas
cwtl
fisubrl
aad
iret
movsl
add
xlat
mov
sbbl
mov
sahf
in
fcoml
sub
dec
xor
pop
xchg
pusha
or
test
cmp
inc
repz
out
addr16
daa
daa
xor
es
shll
repz
sbb
in
and
jne
in
or
lret
imul
mov
shlb
mov
lea
or
imul
pushaw
sahf
xchg
negb
dec
and
fwait
ss
jne
xchg
insb
lret
sub
sti
push
in
test
popa
xor
cmpsb
fwait
lret
dec
cmp
out
bound
rol
ljmp
mov
xchg
imul
outsb
sbb
pop
fisttps
push
loopne
sti
filds
mov
push
sarl
rcrl
or
lahf
dec
sti
pop
test
mov
shlb
ficoms
dec
xchg
add
addr16
movsl
lds
dec
cmc
sti
movsl
rep
jmp
dec
jg
inc
inc
imulb
jae
sub
xchg
xchg
dec
pop
dec
hlt
xchg
mov
push
sub
out
movsb
fwait
cmp
sbb
std
fistl
aaa
test
loope
adc
jno
mov
lcall
mov
sub
data16
stos
hlt
lods
or
in
fucomp
aam
mov
in
add
psubq
sub
pop
push
lret
mov
aam
and
mov
ret
das
adc
fiaddl
testl
jne
push
pop
stc
dec
lock
lods
aam
pop
add
xor
test
lock
and
mov
lods
sub
cmpsb
jo,pn
pop
adcb
mov
out
mov
push
pusha
shl
es
test
in
sub
ljmp
and
sub
cmp
lea
mov
jo
test
sbb
gs
lods
dec
cmpl
sub
dec
clc
movq
inc
pop
cmc
das
aad
inc
jecxz
xchg
neg
pop
sub
outsb
js
inc
or
mov
aam
or
jb
je
dec
dec
pop
sub
and
jns
xchg
lret
shl
or
pop
std
jbe,pn
mov
repz
in
mov
iret
jbe
lret
push
pop
push
mov
movsb
loop
adcb
scas
andb
jo
daa
sub
popf
cmp
cmpsb
mov
push
ret
mov
in
pop
aam
mov
lods
daa
sub
sub
js
fmuls
lcall
out
xor
hlt
inc
out
and
pop
movsl
push
jl
test
dec
inc
fstl
stos
mov
test
and
dec
lods
mov
push
push
pop
inc
mov
jbe
add
cli
gs
xchg
insl
cmp
icebp
mov
cmp
in
dec
mov
call
cltd
xor
mov
cmp
pusha
jae
stos
vunpcklpd
das
lret
push
cmpsb
in
add
out
add
test
pop
aam
negb
dec
scas
dec
jp
dec
call
xchg
data16
ret
mov
xlat
mov
pop
xchg
data16
add
push
je
push
lea
push
xor
fbstp
sub
adc
imul
and
ret
jmp
xchg
cmp
fwait
scas
jle
push
loop
push
cmpsb
imul
jp
gs
clc
dec
loope
lcall
insb
jmp
sbb
mov
mov
pushf
jp
lret
mov
pop
inc
fwait
push
dec
insl
rolb
mov
lret
hlt
shrl
sub
and
stos
test
mov
or
dec
xchg
arpl
sub
cmpsb
aam
jl
cs
pushl
lea
je
pusha
mov
movw
pushf
movl
pusha
push
jmp
push
call
and
sub
push
test
cmpb
xchg
push
jp
jbe
push
test
loop
adc
inc
lods
ljmp
jge
add
inc
popf
xor
movsl
imul
push
or
out
adc
dec
sbbl
mov
fadds
push
bnd
sub
push
into
xor
cwtl
les
xorl
inc
lock
and
test
icebp
mov
cmp
inc
negb
fbld
inc
and
cmpsb
push
lea
jne
setne
rcr
mov
btc
sub
bts
neg
mov
pushf
cmp
stc
bt
sub
pushf
pushl
popl
clc
cmp
pushl
lea
ja
mov
stc
sub
pushf
lea
add
add
sub
or
setbe
mov
sub
adc
stc
mov
bt
repnz
pushf
jmp
xchg
mov
mov
sub
outsl
addr16
out
dec
jmp
sub
or
in
movsb
inc
icebp
xchg
sub
cmpsb
faddl
popa
inc
stos
sbb
jno
mov
lret
inc
jo
jb
cmp
jbe
inc
pushf
fistl
lock
mov
cmp
movsl
mov
xchg
movsb
dec
xor
lahf
les
dec
pop
xchg
or
insl
iret
mov
jno
or
xchg
pop
fdivrl
pop
mov
sub
ss
push
cmp
jno
int
inc
push
outsl
pushf
mov
and
into
jbe
es
cmc
adc
int3
std
dec
icebp
test
fnstsw
cld
shr
push
scas
dec
xchg
inc
loopne
fmuls
xor
arpl
std
sbb
or
push
cmp
out
push
adc
mov
clc
test
lods
and
add
mov
fbld
sub
jnp
lods
xchg
push
stos
jg
jg
fwait
inc
out
jae
out
mov
jg
mov
fwait
or
outsb
add
xchg
sub
in
nop
lcall
inc
fs
sbb
cmp
fbld
idivl
lea
jne
jmp
test
btr
stc
jmp
call
push
call
jmp
lea
jne
push
pusha
not
sets
pushfw
popw
pusha
pushf
mov
clc
rol
bt
call
inc
cmpsb
cs
ss
dec
push
scas
add
sbb
lods
imul
rcrb
pusha
cmc
or
mov
test
fbld
dec
ljmp
out
jg
jmp
inc
push
repz
aam
pop
push
mov
xchg
inc
outsl
cltd
arpl
mov
inc
adc
adc
sti
mov
mov
mov
ret
movsb
stc
mov
sub
adc
int3
jmp
jns
and
and
fbld
rcr
jmp
add
add
outsl
jae
dec
popa
outsb
fs
add
add
je
jb
arpl
jae
gs
jo
cmp
cmp
call
pusha
pusha
lea
jae
not
jmp
mov
bsf
inc
adc
sar
mov
cmp
cmp
pushf
pushf
lea
jp
pusha
lea
ja
pushf
xchg
sbb
add
bsr
cmc
clc
shr
and
xadd
shr
mov
dec
add
bsr
mov
sub
pushf
jmp
xchg
adc
pop
add
sub
cmpb
test
movsb
sub
cmpsl
cmp
icebp
scas
and
adc
leave
clc
ret
pop
popf
sub
movb
repnz
sti
mov
adc
sub
dec
mov
sti
lea
mov
scas
sti
push
mov
pop
cmp
popf
push
mov
fdivl
fbld
or
push
call
pop
fs
push
add
imul
pop
fbld
push
and
iret
int
stos
mov
xor
dec
ljmp
xchg
add
or
enter
push
in
stos
sub
mov
ss
lds
lcall
xor
jne
sub
cwtl
int3
pop
notl
and
dec
movsb
lds
xchg
rolb
cmp
jnp
fbld
popf
shrl
cmpsb
push
cld
call
movb
cwtl
push
not
cwtl
movzbw
lea
jmp
add
inc
gs
jne
jb
outsb
je
push
dec
add
push
adc
add
pop
cmc
push
call
add
xor
fs
je
clc
sub
stc
call
pushf
call
call
lea
jb
test
pusha
cmpb
pusha
pushf
mov
jmp
stos
cmp
sub
popf
xor
inc
add
jo
test
scas
pop
lcall
add
add
test
lret
sbb
test
adc
jne
adc
jmp
inc
add
xor
clc
out
fisttpll
or
or
cmp
push
cmp
dec
push
insl
scas
leave
cld
sub
adc
mov
rorl
aas
into
fbld
pop
psrlq
es
cmp
push
fbld
fistpl
mov
out
out
dec
jmp
aaa
test
cmp
mov
or
jge
pop
mov
sub
dec
shl
les
xchg
sbb
jl
ja
fistpl
add
es
cmp
movsl
pop
mov
xor
pop
pop
jae
nop
xchg
inc
fwait
xchg
inc
loop
sahf
and
lock
mov
pusha
in
and
push
lret
cmp
and
mov
call
rol
push
jbe
mov
stos
cmp
push
sti
int3
imul
push
push
movb
pushf
popl
call
clc
cmc
cmp
pushl
call
inc
adc
insb
xor
insb
xor
les
les
andl
xchg
test
lds
fidivs
hlt
push
cld
mov
andps
fiaddl
test
in
xlat
jbe
mov
mov
jecxz
mov
in
jecxz
fbld
jle
nop
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
or
adc
cld
ljmp
dec
pop
adc
out
push
cld
ljmp
imul
add
mov
jmp
call
add
dec
inc
dec
popa
jo
je
imul
gs
add
in
scas
mov
rorl
lcall
and
mov
shr
pusha
ror
lea
mov
call
pusha
mov
lea
ja
pusha
lea
je
inc
pushf
inc
call
pushf
pusha
mov
jmp
dec
ja
fidivrs
je
pop
push
add
in
std
andl
or
and
push
and
cmpsl
mov
pop
divb
js
xchg
rcrb
and
cmp
iret
jo
fisubrs
jg
mov
jge
fistl
or
xor
addr16
jle
xchg
mov
pop
sbb
adc
push
push
adc
mov
fildll
lock
cli
dec
int
lods
out
in
and
xor
push
push
mov
push
or
cmp
mov
jmp
sbb
popa
push
popa
add
or
dec
add
adc
mov
loope
push
dec
insb
fsubrl
inc
pop
into
xchg
ret
xor
in
shll
pop
jg
lcall
sbb
shl
repz
jmp
cwtl
sub
fidivrl
hlt
int
sub
mov
cmc
outsb
rolb
sub
push
jae
scas
adcl
inc
and
push
filds
fildll
xor
test
pushf
lea
je
stc
sub
jmp
push
mov
jmp
mov
lock
imul
in
rorb
scas
jl
mov
rcrb
sub
mov
dec
pop
in
mov
lret
sub
mov
and
xchg
les
stc
int
push
cmc
or
pushf
pusha
push
lea
je
pusha
mov
push
pushf
bswap
setne
lea
movb
jmp
movzbw
pop
mov
push
pushf
mov
pushl
ret
push
call
pop
or
push
daa
cld
decl
mov
cmp
adc
clc
cmc
add
call
lcall
aad
adc
cmp
mov
adc
xor
push
add
sub
push
sub
push
mov
arpl
bound
sub
adc
scas
mov
das
pop
imul
fsubr
pop
inc
int3
mov
insl
fcoms
pop
cmp
jg
aad
sub
fildll
loope
lea
ja
push
imul
mov
call
test
btc
shld
mov
bt
shl
call
movw
pushf
movl
pushf
pushf
call
push
call
pop
out
add
push
imul
jne
jb
add
inc
and
cltd
sbb
adc
xor
pushl
popl
pushf
pushl
ret
test
ja
scas
sub
mov
jmp
and
cmp
jbe
dec
jecxz
js
push
push
mov
cli
push
sbb
mov
mov
imul
push
inc
sub
fisttpl
jp
inc
in
cmp
fildll
stos
call
dec
je
pushf
lea
jne
adc
pushf
lea
jmp
add
push
push
js
arpl
gs
add
add
je
inc
dec
inc
push
add
shlb
test
and
pushl
movl
pushl
mov
call
push
call
mov
faddl
jmp
out
ret
das
fisttps
push
aas
and
jne
mov
icebp
sub
mov
mov
cwtl
vpxor
pop
dec
outsl
gs
mov
push
test
lods
popa
and
sub
cmp
push
inc
arpl
loope
test
xor
mov
sub
ja
mov
mov
in
sub
dec
shll
mov
fildll
pop
dec
cmc
mov
pushl
popl
push
pushl
pushl
ret
add
push
insb
jae
jb
add
imul
add
pusha
lea
bswap
lea
movzwl
jmp
or
aad
sub
xor
dec
adc
push
cmp
pusha
cmp
pop
ds
xchg
pop
fiaddl
mov
cmpsl
sbb
jnp
xchg
cmpsb
xchg
in
xor
push
push
js
popf
jbe
lcall
adc
jmp
cmpsl
lret
mov
or
and
or
sbb
dec
xchg
hlt
imul
stc
lods
pop
and
pushf
mov
add
pop
daa
and
xor
test
andl
sbb
fildll
cmp
in
popf
push
call
pop
mov
scas
pusha
jmp
add
inc
fs
arpl
gs
js
gs
imul
insb
gs
movl
jmp
mov
not
jmp
movzbw
call
mov
lea
ja
jmp
push
call
mov
and
shr
lods
call
push
call
out
cmc
fld
add
jnp
pop
adc
sar
cmp
out
sub
roll
into
mov
adc
jmp
scas
lahf
or
mov
xchg
xlat
shr
popf
push
pop
mov
add
push
sbb
pop
push
divb
or
dec
test
shr
or
es
jg
mov
aas
cld
lea
xchg
and
fildll
sti
mov
fs
inc
or
add
add
push
imul
insb
insb
outsl
arpl
push
call
sbb
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
dec
inc
inc
and
rcl
xchg
btr
add
mov
movb
xor
pusha
mov
bt
mov
pusha
cmp
test
mov
jmp
cmc
add
bt
test
cmc
add
pusha
stc
sub
call
jmp
pushl
popl
pushf
movw
lea
jmp
bswap
mov
call
call
call
adc
pushf
pushl
popl
shr
sbb
btr
pushf
movl
btc
shrd
ror
mov
pushf
cmc
neg
pushf
pushl
lea
jmp
not
pusha
sub
clc
pushf
push
pushf
ror
mov
lea
call
add
cmp
shl
mov
call
rcr
pusha
pop
mov
push
bt
sub
pushf
mov
jmp
call
aas
shl
and
movzww
test
pushf
add
jo
xchg
bt
test
pusha
clc
add
jmp
sar
rcl
sbb
mov
cmc
shl
mov
cmp
call
jmp
push
call
call
movzbw
dec
stc
rcl
shl
stc
xor
bsr
jno
inc
dec
sub
neg
sbb
and
cmp
push
clc
ror
mov
bt
pusha
sub
jmp
test
add
pusha
pusha
movb
mov
pushl
push
pushf
mov
lea
jmp
call
call
mov
stc
call
pusha
pushf
popl
call
pushf
mov
mov
mov
jmp
call
mov
movsbl
mov
pop
lea
pushf
popl
clc
mov
adc
ror
neg
btr
pushl
popl
test
or
shl
movl
shl
bswap
shr
jmp
rol
cmp
bts
movzbl
shrd
neg
jmp
pusha
mov
call
neg
ror
movzbl
stc
jmp
call
push
lea
ja
not
pushf
inc
push
stc
cmc
add
clc
test
push
call
mov
bswap
jmp
pushl
mov
push
lea
jp
pusha
pusha
mov
movw
lea
jmp
call
jmp
mov
movb
pushf
mov
lea
jmp
xor
clc
mov
btr
add
ror
mov
stc
cmp
stc
clc
not
clc
call
call
cmc
or
stc
sub
jb
cmc
xor
jmp
pusha
add
lea
jg
mov
pusha
pushf
pushf
lea
jmp
mov
bswap
not
pushf
popl
bsf
add
mov
neg
test
pushl
popl
btc
btc
movl
dec
and
shr
sbb
mov
push
bt
neg
push
lea
jmp
clc
mov
sub
je
clc
sub
push
call
sbb
rcl
mov
bt
jmp
mov
mov
movw
push
pushf
lea
jmp
pusha
and
pop
mov
pusha
cmc
cmc
add
pushf
push
pushf
lea
jmp
jmp
mov
push
push
movb
lea
jmp
pushf
popl
jmp
push
jmp
jmp
pushl
popl
pusha
pushf
movl
pushf
lea
jmp
jmp
inc
movzbw
bswap
dec
or
shr
bt
lea
shrd
bsf
rol
xor
pushf
movzbw
rcr
jmp
clc
lea
shr
mov
cmc
clc
add
pushf
push
lea
jmp
mov
mov
pop
movsbl
bswap
mov
lea
pusha
mov
jmp
cmp
add
movb
movb
mov
lea
jmp
push
mov
pusha
pushl
pushl
call
dec
aad
call
push
movw
pushl
pusha
mov
push
movb
mov
pushl
mov
mov
push
mov
jmp
adc
daa
mov
btr
clc
clc
mov
stc
clc
call
pushf
mov
call
sub
call
mov
movb
call
btr
rol
adc
ror
rcl
not
add
bts
bsf
mov
jmp
pusha
pushf
mov
lea
bswap
mov
movb
call
sete
mov
not
setne
mov
pushf
pushf
lea
jmp
bt
clc
bt
xor
pushf
push
inc
mov
pushf
push
pushf
decl
movb
pushf
pushf
lea
jne
pusha
mov
movw
lea
jmp
pushf
jmp
xchg
movsbw
mov
movzbw
mov
lea
jmp
pushl
popl
pushl
mov
lea
jmp
push
mov
pushf
pushl
mov
pushf
mov
mov
jmp
cmp
cmc
stc
sub
jmp
sar
mov
jmp
pushf
jmp
jmp
call
bt
cmc
add
test
lea
cmp
call
push
pushf
popl
pusha
pushf
pushl
popl
push
push
movl
lea
jmp
bswap
shr
mov
mov
add
mov
mov
pushf
mov
movb
push
lea
jmp
call
call
push
push
mov
pushf
movb
lea
jmp
push
push
mov
call
jmp
mov
push
movsbw
not
push
pushf
popl
clc
stc
adc
call
pushf
pusha
pusha
mov
movb
mov
pushf
pushf
lea
jmp
pushf
mov
movb
pushf
popl
push
mov
pushl
popl
pushf
pushf
movb
lea
jmp
pushf
inc
push
decl
pushl
jmp
pushl
popl
movl
pushl
push
pushf
lea
jmp
pushf
popl
bsr
mov
jmp
mov
jmp
cmp
sub
jne
and
pusha
jmp
pusha
mov
pushl
jmp
pushf
movb
pushf
mov
push
mov
pusha
mov
jmp
adc
mov
and
movsbw
jmp
cwtl
movsbw
mov
lahf
lea
mov
js
divl
push
mov
call
mov
jmp
mov
shl
mov
pusha
add
movb
shrd
push
mov
call
cmc
rcr
sub
mov
bt
stc
call
push
mov
pushf
call
pushl
pushf
popl
mov
pushl
popl
pusha
pushf
movl
lea
jmp
pushl
stc
neg
pushf
pushf
pushf
pushf
lea
jmp
mov
sub
pusha
shr
push
mov
mov
push
pushl
lea
jge
pushf
pushf
pushl
popl
pusha
lea
jmp
pushf
mov
pushl
pushl
pushf
lea
jmp
add
movb
pushf
pushl
lea
jmp
mov
movb
mov
mov
mov
lea
jmp
jmp
cmp
add
pushf
push
lea
jno
push
mov
pushl
pushf
pusha
lea
jmp
mov
movzbw
movzbw
mov
pushf
movzbl
mov
pushf
popl
pop
not
stc
bsr
mov
cmp
bt
pushl
popl
shr
pushl
neg
movl
stc
btr
mov
push
neg
pushl
mov
pushl
lea
jmp
pushf
mov
movw
mov
call
push
pushf
mov
jmp
pushf
not
pushl
inc
pushf
pushf
clc
add
cmc
mov
pusha
pushf
mov
lea
call
shr
call
movl
pushf
xchg
movsbw
not
mov
pop
push
mov
push
mov
pushf
mov
push
lea
jmp
ror
cmc
clc
neg
clc
stc
xor
cmp
jmp
xchg
movw
pushf
mov
pushf
lea
call
bsr
mov
rcl
mov
call
mov
mov
pusha
mov
lea
jmp
mov
movzbl
lea
mov
not
mov
call
mov
not
bswap
mov
pushf
lea
mov
movsbl
pusha
pop
pushf
popl
pop
stc
bt
mov
and
pushl
popl
bswap
mov
movl
bt
call
call
test
pushf
or
pushl
mov
clc
test
cmc
add
mov
pushf
lea
jmp
mov
mov
call
xadd
mov
bt
add
rcr
mov
mov
jmp
pusha
mov
lea
jns
pusha
pushf
mov
call
pusha
pushl
mov
mov
call
xor
bswap
not
sete
mov
rcr
clc
sub
sub
not
bt
dec
shld
mov
btr
mov
or
add
rcr
not
add
mov
inc
and
sub
bswap
not
rol
not
rcr
lea
ror
mov
inc
setne
inc
movsbl
dec
shr
sub
shrd
shrd
movzbl
bsr
mov
jmp
add
cmc
call
jmp
mov
movw
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
mov
bswap
pushf
bswap
mov
call
call
pusha
jmp
pushf
mov
pushf
call
ror
pusha
mov
movb
cmc
add
cmp
test
cmp
call
shr
mov
pushf
push
mov
lea
jb
pushf
mov
pusha
pushf
popl
pushf
pushl
popl
pushf
mov
pushf
pushl
lea
jmp
push
call
push
pushf
mov
mov
pushf
mov
jmp
pusha
mov
pusha
xchg
movsbw
push
jmp
add
push
mov
movb
pushf
pusha
pushl
lea
jmp
mov
mov
lea
jmp
rcr
mov
stc
bt
test
cmc
sub
push
mov
pusha
pusha
mov
pushl
lea
jmp
jmp
clc
add
stc
pushf
xchg
mov
test
cmp
sub
pusha
cmp
xor
bt
add
mov
sub
ja
add
cmc
cwtl
test
jmp
jmp
call
add
pusha
lea
jmp
jmp
test
and
bsr
clc
mov
xor
inc
push
mov
pushf
push
sub
cmp
shl
pusha
call
not
movsbw
mov
pushf
lea
pushf
popl
rcr
cmc
sub
rcl
mov
adc
bts
mov
pushl
popl
movsbw
stc
movl
not
add
mov
pushl
neg
push
pushf
movw
pushf
lea
jmp
pushf
popl
pushf
pushf
mov
pushl
popl
pushf
push
lea
jmp
pop
mov
bswap
pop
call
shl
adc
lea
pusha
mov
btr
push
mov
sub
aad
mov
cltd
setp
bt
std
mov
movzbw
pushl
popf
mov
mov
pop
mov
pop
not
mov
xchg
lea
mov
movzbl
movzbw
mov
push
pushf
not
mov
not
pushl
push
mov
pushf
pushf
mov
pushl
ret
bsr
das
lea
cmp
cmc
cmp
push
pusha
pusha
lea
ja
shld
sbb
push
lea
sbb
rcl
pusha
lea
cmc
or
test
pushl
sub
aam
lea
adc
add
and
adc
sub
pop
bswap
lea
movw
mov
call
stc
neg
pushf
lea
jmp
movzbw
sets
mov
shl
pusha
neg
mov
test
sub
mov
cmp
shl
movl
movl
mov
push
pushf
popl
jmp
pushf
jmp
pushl
popl
pushf
pushf
mov
movb
lea
jmp
pusha
cmp
add
mov
mov
pusha
pushf
pushl
mov
lea
jmp
bt
jmp
rol
clc
add
bswap
mov
mov
cmc
pushf
call
pushf
mov
call
movb
call
mov
pop
lea
movzbw
mov
movzbw
movw
pushf
popl
cmp
rcr
movzbw
btc
mov
pushf
pushl
popl
xor
bswap
movl
call
pushf
pushf
mov
push
call
jmp
push
call
pushl
pushf
call
pushf
not
test
sub
movl
and
pushf
mov
pusha
mov
mov
push
mov
push
pushf
popl
movw
pushl
popl
movb
pushf
pushf
movl
lea
jmp
jmp
bt
jmp
movsbw
mov
mov
bswap
movsbw
pushf
popl
shl
sar
mov
btc
shrd
pushl
popl
not
movsbl
movl
rcl
mov
push
neg
pushl
lea
jmp
xchg
not
mov
bswap
pusha
push
mov
push
movsbl
mov
bswap
pop
call
call
mov
call
mov
pushl
mov
call
add
lea
rcr
shl
mov
test
add
pushf
pushf
mov
pusha
lea
jmp
call
pushf
dec
not
movzbl
lea
jbe
push
movw
pushf
dec
cmp
call
jmp
mov
pushl
mov
movb
push
mov
pushf
lea
jmp
jmp
cmc
add
pusha
test
movb
pusha
pushl
popf
pushl
pushf
lea
jmp
mov
call
push
pushl
push
jmp
shr
add
add
mov
clc
cmp
push
call
clc
cmp
neg
jmp
sub
push
pusha
pushf
call
call
add
pushf
dec
cmc
push
xor
clc
movb
mov
rol
cmp
add
test
mov
stc
test
clc
movb
sub
pushf
pushf
call
neg
push
pushf
lea
jmp
pushf
mov
pushf
movb
mov
movb
lea
jmp
pop
mov
lea
pushf
mov
mov
pushf
pop
mov
pushf
popl
shld
inc
mov
mov
pushl
popl
btc
movl
bsf
xor
or
mov
pushf
cmc
bt
neg
pusha
pushf
lea
jmp
pushl
popf
mov
lea
jmp
add
add
pushf
push
mov
pusha
xchg
lea
mov
call
mov
mov
pusha
lea
jmp
not
movzbl
call
mov
sar
sbb
rcl
shl
mov
bt
pusha
push
sub
jmp
jmp
mov
pushf
pushf
movl
mov
lea
jmp
mov
lea
ja
push
pushf
pushf
pusha
mov
movw
mov
pusha
not
mov
lea
mov
lea
mov
call
jmp
add
stc
rcl
mov
bts
pushl
popl
dec
movl
and
mov
bt
movb
movb
neg
pushl
push
pushf
lea
jmp
sub
mov
cmc
pushf
add
pushl
push
mov
pushf
movb
mov
pushf
pusha
mov
push
lea
jmp
mov
cmc
xchg
test
test
stc
cmc
sub
cmc
stc
pushf
cmp
xor
clc
cmc
add
mov
add
clc
cwtl
cmp
sub
movl
mov
mov
pushf
movb
pushf
lea
jmp
pushf
movb
mov
push
push
call
mov
movsbl
jmp
mov
jmp
bsr
add
mov
clc
mov
neg
add
pushf
mov
call
mov
cmp
pushf
test
test
lea
stc
sub
mov
push
mov
movw
pushf
mov
lea
jmp
mov
test
stc
cmc
neg
pushf
mov
lea
jmp
mov
pushf
pushf
pushf
xchg
pusha
jmp
cmc
mov
stc
adc
pushl
popl
pushf
movl
add
test
mov
lea
jne
pushf
neg
pushf
pushf
push
lea
jmp
pusha
pusha
jmp
mov
call
test
not
jmp
pusha
add
push
cmp
bt
cmc
shld
jmp
pusha
call
mov
call
jmp
movzbw
bsr
lahf
setge
mov
inc
ror
jmp
pushf
sub
cmp
mov
add
pushf
call
call
cmc
not
cmc
stc
and
jmp
mov
call
pushf
pushf
popl
jmp
call
btr
pushf
xor
notl
rcl
mov
push
pusha
cmp
sub
call
mov
jmp
jmp
call
setns
cmp
movzbl
bsr
clc
stc
add
shld
sar
sub
neg
pushf
not
dec
pushf
inc
inc
adc
adc
dec
add
btc
clc
bswap
sar
mov
stc
cmc
cmc
stc
add
pushf
pushl
mov
pushf
dec
movw
push
lea
jmp
bswap
bsf
lahf
mov
bswap
call
mov
pusha
pushf
pushl
movb
lea
jmp
mov
push
push
lea
jmp
pushf
movb
movw
mov
pushf
push
push
call
not
mov
mov
xchg
movw
pusha
movzbw
movzbw
xchg
jmp
pusha
pusha
mov
pushf
mov
pushf
jmp
mov
call
push
jmp
rdtsc
bsf
shl
mov
bsr
shr
rcr
mov
pusha
clc
add
movw
push
pusha
mov
pushf
lea
jmp
jmp
call
movsbw
movzbw
dec
clc
cmp
shr
shr
xor
setne
bswap
pushf
inc
dec
bsf
neg
and
shl
bswap
sub
add
mov
jmp
lea
jne
pusha
mov
pusha
pushf
mov
lea
jmp
bswap
mov
bswap
mov
pusha
call
call
bts
add
bsr
movzbw
jp
dec
add
inc
clc
cmc
lea
setae
push
bts
xor
rol
movsbw
call
push
mov
mov
mov
movw
lea
jmp
pushf
popl
shl
mov
mov
pushl
popl
sub
and
add
shr
movl
bt
btc
rcl
bsf
mov
pushf
bt
cmp
neg
mov
mov
pushf
mov
lea
jmp
clc
sub
pushf
pusha
movw
jmp
sub
push
mov
push
mov
pushf
pusha
lea
jmp
push
pushf
popl
pusha
pushl
popl
mov
pushf
lea
jmp
movzbw
btc
aas
rdtsc
clc
pusha
sub
push
jmp
pushf
pushf
mov
lea
jp
push
pushf
mov
jmp
mov
pushl
cmc
cmp
neg
movb
pushf
lea
jmp
pushl
pushl
popl
pushf
push
lea
jmp
jmp
xor
pushf
bt
movl
pusha
rol
test
jmp
pusha
pushf
mov
push
lea
jmp
test
stc
shl
bt
shr
test
jmp
push
mov
pusha
pushf
mov
mov
pusha
mov
call
add
stc
cbtw
test
stc
jmp
push
jmp
push
cmp
add
test
pusha
test
cwtl
jmp
stc
cmp
and
push
pushf
jmp
jmp
pusha
dec
jmp
mov
bsf
pushl
popl
shl
neg
movl
add
shl
btc
bsr
mov
cmc
cmp
cmp
neg
movb
pusha
pushf
lea
jmp
pushf
mov
movl
push
pushf
popl
call
pusha
add
movw
pushf
mov
mov
pushf
movw
lea
jmp
bt
stc
sub
jmp
bt
add
pushf
pushf
mov
mov
pushf
pusha
mov
lea
jmp
add
call
shld
shl
shr
or
mov
stc
add
pusha
lea
jae
pushf
pusha
jmp
mov
jmp
or
pusha
mov
test
stc
add
mov
movw
push
mov
lea
jmp
movw
mov
movzbw
push
mov
mov
bswap
pushf
pushf
popl
shr
rcr
pushf
sub
mov
test
dec
rcr
sub
pushl
popl
bsf
pop
movl
xor
shrd
mov
pushf
push
neg
pushf
pushf
mov
lea
jmp
jmp
pusha
call
movsbl
mov
pushf
call
bswap
not
not
mov
not
push
mov
pusha
mov
lea
not
mov
bswap
pushf
popl
call
movl
pushf
mov
jmp
cmc
pushl
call
rol
shl
mov
push
add
pusha
mov
mov
lea
jo
pusha
mov
pushf
movb
lea
jmp
jmp
mov
sub
pushf
pushf
call
pushl
popl
push
pusha
pushf
lea
jmp
mov
not
pushf
pushf
mov
pop
pop
jmp
bswap
bt
mov
sub
mov
pusha
push
sub
push
bt
add
call
push
mov
jmp
xchg
bt
jmp
pusha
xchg
push
call
xor
mov
shr
mov
clc
sub
stc
cmp
pushf
shl
lea
jle
mov
call
pusha
mov
jmp
cmp
push
pushf
add
bt
jmp
pushl
pushf
mov
call
add
bt
not
push
sub
bt
ror
pusha
dec
sub
jae
add
call
pushf
pushf
pushf
movw
mov
pushl
call
sub
or
mov
movzbl
jmp
mov
pushf
mov
mov
lea
jmp
add
neg
shl
btc
mov
or
or
stc
mov
pushf
jmp
call
pusha
pusha
call
mov
pushf
pushl
pop
mov
setge
jmp
mov
jmp
xchg
not
mov
lea
pushf
mov
not
push
pushf
mov
movsbw
pushf
popl
bsf
cmp
movzbw
bt
push
bsr
pushl
neg
sar
push
mov
btr
sar
btc
mov
cmc
clc
cmp
neg
pushf
pusha
movl
pusha
lea
jmp
pushf
popl
dec
btr
call
mov
pusha
lea
jmp
add
add
mov
cmp
stc
stc
cmp
add
push
mov
pusha
lea
jmp
mov
call
jmp
pusha
pushf
movw
mov
mov
push
pushf
mov
lea
jmp
aad
mov
cmc
push
push
stc
bswap
clc
pushl
xor
bt
bt
call
lea
cpuid
pushf
call
jmp
pushf
popl
pushf
pushf
movb
pushl
popl
mov
lea
jmp
stc
cwtl
movw
cmp
cmc
clc
sub
call
call
mov
bswap
mov
mov
pusha
lea
std
pusha
movw
movb
xchg
call
mov
pushf
popl
pushl
pushl
popl
push
pushf
lea
jmp
pushf
call
pushf
sbb
inc
shrd
mov
call
cmp
cmc
cmp
sub
movb
pushf
pushf
pushf
mov
pushf
pushl
lea
jmp
pushl
popl
pusha
mov
pushf
push
lea
jmp
pushf
popl
call
movb
mov
movb
mov
pusha
pushf
push
pushf
lea
jmp
pushl
popl
rcl
btr
movl
movl
mov
shld
bsf
movzbw
mov
pushf
cmp
push
neg
pushf
movb
lea
jmp
mov
jmp
pushf
movw
pushl
popl
movb
mov
lea
jmp
mov
push
push
mov
mov
lea
jmp
bsf
shrd
movsbw
bswap
mov
cmp
pushf
not
btc
mov
neg
mov
stc
bt
call
test
pusha
neg
pushl
add
pushf
movl
lea
jmp
mov
jmp
bt
cmp
xor
jmp
seta
bswap
xchg
xchg
bswap
setae
pushf
xchg
seto
bswap
pop
movsbl
mov
lea
call
mov
mov
mov
push
pushf
lea
jmp
stc
add
cmp
bt
sub
pusha
mov
pushf
push
lea
jmp
movzbw
pushf
mov
pusha
movw
mov
pop
pushf
call
push
mov
mov
pushf
pusha
mov
bswap
push
push
mov
lea
pushf
lea
pushf
popl
clc
rcl
xor
bswap
mov
stc
bswap
cmp
pushl
popl
btc
pushf
not
movl
rcl
movsbw
xor
rcr
mov
pushf
mov
neg
pusha
lea
jmp
jmp
mov
call
push
push
mov
pushf
pushf
pushl
pushl
ret
dec
adc
bts
daa
movzww
bt
xchg
jmp
mov
push
pushf
call
push
pushf
popl
movb
pushf
push
call
adc
daa
bsf
mov
clc
mov
stc
add
je
pusha
push
mov
pushf
movb
movb
lea
jmp
movzbw
pushf
popl
cmc
movl
mov
shld
bsf
pop
xadd
pushl
popl
sbb
movzbw
movl
rcr
setne
mov
clc
shl
shr
neg
add
shrd
sub
cmp
and
jmp
movw
mov
pushl
call
jmp
push
jmp
cmc
mov
bt
or
ror
mov
push
test
cmp
add
jmp
bswap
mov
pushf
call
xchg
bt
xor
clc
bt
jmp
mov
pusha
mov
pusha
mov
lea
jmp
dec
dec
ror
and
not
rol
bswap
cmp
mov
call
jmp
out
out
hlt
out
sbb
hlt
out
int
hlt
out
and
hlt
out
push
add
out
stc
cli
hlt
out
loop
cmc
out
mov
out
hlt
out
push
or
hlt
out
mov
hlt
out
outsl
or
out
sar
hlt
out
push
clc
hlt
out
out
out
hlt
out
int
hlt
out
outsl
or
out
ret
out
pop
cli
hlt
out
int
hlt
out
add
cmc
out
push
or
hlt
out
and
add
out
pop
hlt
hlt
out
stc
cli
hlt
out
shl
out
push
add
out
push
or
hlt
out
sub
hlt
out
int
hlt
out
sbb
hlt
out
ja
hlt
out
cmp
out
out
pop
hlt
hlt
out
stc
hlt
out
leave
repnz
out
loop
cmc
out
cmpsl
hlt
hlt
out
push
sti
hlt
out
stc
cli
hlt
out
stc
hlt
out
pop
cld
hlt
out
push
add
out
mov
hlt
out
and
hlt
out
push
or
hlt
out
test
push
out
push
add
out
inc
adc
out
ret
out
ret
out
pop
cld
hlt
out
push
out
out
out
ja
hlt
out
aaa
out
hlt
out
int
hlt
out
add
cmc
out
stc
cli
hlt
out
push
or
hlt
out
aaa
out
hlt
out
outsl
or
out
movsb
adc
out
and
hlt
out
mov
hlt
out
push
clc
hlt
out
or
cmc
out
pop
cli
hlt
out
stc
hlt
out
ja
hlt
out
cmp
or
out
outsl
or
out
mov
push
cmc
out
rorb
cmc
out
orl
out
scas
or
out
or
cmc
out
adc
cmc
out
xchg
or
out
maskmovq
out
int
hlt
out
rorb
out
mov
push
cmc
out
push
out
out
rorb
out
pop
cld
hlt
out
sub
add
out
mov
push
out
orl
out
pop
cld
hlt
out
shl
out
sbb
hlt
out
sbb
hlt
out
or
cmc
out
and
hlt
out
add
cmc
out
push
add
out
in
or
cmc
out
adc
cmc
out
add
cmc
out
insl
push
cmc
out
ret
out
in
or
cmc
out
shl
out
rorb
out
mov
or
cmc
out
sbb
hlt
out
push
out
out
test
hlt
out
test
adc
out
dec
adc
out
test
hlt
out
mov
hlt
out
push
adc
out
test
hlt
out
rorb
cmc
out
dec
div
out
dec
adc
out
test
hlt
out
int
hlt
out
push
adc
out
test
hlt
out
loop
cmc
out
and
adc
out
test
hlt
out
sbb
hlt
out
sub
hlt
out
dec
adc
out
test
hlt
out
stc
cli
hlt
out
cmpsl
hlt
hlt
out
dec
adc
out
test
hlt
out
out
mov
hlt
out
dec
adc
out
test
hlt
out
aaa
out
hlt
out
stc
cli
hlt
out
dec
adc
out
test
hlt
out
dec
div
out
jnp
cmc
out
dec
adc
out
test
hlt
out
inc
pmaddwd
loop
cmc
out
dec
adc
out
test
hlt
out
or
cmc
out
in
or
cmc
out
test
hlt
out
cmp
cmc
out
mov
hlt
out
dec
adc
out
test
hlt
out
outsl
or
out
sub
adc
out
test
hlt
out
outsl
or
out
mov
adc
out
test
hlt
out
push
sti
hlt
out
sbb
hlt
out
dec
adc
out
insl
push
cmc
out
add
cmc
out
inc
adc
out
or
cmc
out
cmp
pmaddwd
push
or
cmc
out
insl
push
cmc
out
inc
pmaddwd
xor
cmc
out
sar
hlt
out
xchg
or
out
mov
out
hlt
out
out
in
or
hlt
out
orl
out
jnp
cmc
out
push
add
out
mov
pop
cmc
out
inc
adc
out
ja
hlt
out
test
or
cmc
out
or
cmc
out
ret
out
rorb
cmc
out
pop
cld
hlt
out
pop
cli
hlt
out
inc
adc
out
out
sbb
hlt
out
maskmovq
out
shl
out
xor
cmc
out
jnp
cmc
out
stc
cli
hlt
out
ret
out
shl
out
add
cmc
out
sar
hlt
out
push
sti
hlt
out
dec
div
out
int
hlt
out
add
cmc
out
mov
push
out
ret
out
sar
hlt
out
push
or
hlt
out
add
cmc
out
add
cmc
out
stc
cli
hlt
out
sbb
hlt
out
sub
out
out
inc
pmaddwd
push
pushf
pusha
mov
pushf
jmp
mov
mov
pushf
push
mov
push
bswap
mov
lea
mov
movsbw
bswap
mov
movzbl
mov
pop
pushf
popl
push
inc
bsf
rcl
mov
neg
shr
bsr
pushl
popl
mov
movl
sar
mov
push
jmp
push
mov
mov
xchg
lea
movsbl
movzbw
movsbw
mov
mov
pusha
pusha
call
jmp
pusha
clc
sub
jmp
sub
pushf
test
cmp
sub
pusha
pushf
call
pusha
mov
movb
pusha
mov
pushl
pushf
jmp
pushl
pushf
popl
call
mov
pusha
mov
push
lea
jmp
pushf
pushf
popl
jmp
pushf
pushl
add
mov
dec
test
clc
stc
jmp
xchg
mov
neg
dec
shl
add
rcl
bt
call
mov
movzbl
pop
movsbw
jmp
pop
lea
call
pushf
popl
shr
mov
mov
jmp
push
push
pusha
divl
call
shrd
setle
mov
bt
mov
jmp
pushf
popl
add
neg
clc
rcr
mov
shl
and
rcl
pushl
popl
pop
adc
bsf
sub
movl
cmp
sar
shr
mov
test
neg
pushl
lea
jmp
pop
movsbw
mov
std
push
cld
pushf
rep
shl
add
mov
shl
adc
mov
jmp
xor
lea
ror
btr
call
mov
pushf
pushl
popl
movb
push
pushf
lea
jmp
mov
pushf
movb
jmp
pushf
popl
call
bt
and
mov
bts
mov
stc
test
add
push
lea
jmp
jmp
sub
inc
jmp
mov
jmp
jmp
call
call
