jle
xor
add
inc
das
incb
add
flds
mov
jb
jecxz
arpl
inc
adc
dec
mov
outsb
fsubr
pop
insb
pop
bound
out
rcrb
daa
lret
sti
repnz
mov
sahf
cmpsl
xor
lret
jo
lds
dec
and
addl
or
test
add
or
add
cmc
dec
pop
cltd
test
shll
adc
jno
adc
sti
cmc
and
add
cmp
or
inc
stos
adc
mov
adc
mov
or
or
sub
or
pop
in
jno
or
subl
mov
mov
lds
adc
xchg
and
leave
sbb
leave
add
es
push
sub
mov
roll
sub
sahf
adc
mov
cmp
lret
jecxz
popf
addb
imul
and
and
adc
inc
enter
shlb
sbb
cmp
xchg
adc
add
sub
inc
popa
std
add
or
jecxz
hlt
or
jmp
or
in
icebp
pop
jae
sub
sub
xor
aas
aam
int
xchg
mov
add
or
mov
idivl
push
push
clc
or
pop
mov
imul
mov
test
sbb
xor
je
mov
jb
jb
ds
aad
and
mov
stos
inc
mov
jae
pop
jne
sbb
lea
and
orl
and
rclb
add
or
mov
gs
dec
inc
mov
pop
pop
or
rcrl
lods
sbb
lret
in
in
adc
shrb
cltd
xchg
mov
jle
test
popa
inc
cmp
fcmove
cld
sbb
pop
and
fbstp
leave
gs
cmp
sub
inc
aam
and
or
push
unpckhps
dec
push
sbb
dec
inc
addr16
xadd
orl
mov
cmpsb
inc
insb
add
add
sbb
stos
unpckhps
push
dec
fwait
outsb
and
pushf
sarb
insl
cmp
sub
push
xor
fidivs
loop
jb
inc
pop
push
leave
cmc
ret
cmc
and
aas
imul
adc
dec
movsb
fistpll
and
add
cmpb
clc
shl
stc
andl
jl
inc
ret
or
mov
addb
pop
inc
mov
leave
mov
loop
pop
outsl
jne
push
mov
jge
xchg
xchg
rorb
push
daa
dec
mov
mov
and
add
sbb
inc
ret
sahf
mov
xorb
rorl
outsl
pop
and
ljmp
fs
inc
and
shlb
mov
inc
loopne
stc
hlt
inc
add
add
adc
mov
jns
adc
and
inc
flds
dec
sbb
outsb
inc
dec
push
rolb
iret
mov
add
in
pop
jge
xchg
adc
or
and
add
pop
sbb
jbe
mov
push
in
addl
std
and
dec
add
mov
or
mov
inc
or
inc
adc
test
test
or
push
adc
aaa
es
xor
sub
xor
cmpsl
sub
adc
pop
popa
imul
or
and
adc
mov
adc
and
add
daa
inc
xor
mov
outsb
xchg
sbb
popa
sub
sub
sbb
mov
add
xchg
sub
dec
sbb
mov
out
adc
pop
inc
mov
cmpsb
adc
iret
add
out
cmp
xchg
mov
jp
movsl
ljmp
int
push
cmp
sbb
add
push
add
cwtl
adc
inc
sub
int3
mov
es
adc
sbb
push
dec
jae
xor
mov
dec
popf
and
call
sbb
popa
imul
xor
adc
xchg
sbb
mov
mov
push
mov
movsb
imul
popa
add
je
shrb
stc
add
shl
inc
xor
mov
add
inc
push
mov
sub
lea
adc
loope
mov
lret
dec
jmp
mov
mov
adc
or
orl
loopne
sbbb
adc
lret
jecxz
xor
mov
bswap
ret
lds
movl
movsb
add
jns
out
push
sub
in
dec
or
outsb
or
cmc
test
subb
mov
int
dec
imul
mov
or
or
inc
push
cmp
aad
sahf
in
sbb
jns
mov
into
data16
pushf
xchg
add
sub
jge
dec
lret
xor
pop
arpl
xchg
jo
inc
jb
stos
jmp
mov
add
mov
je
mov
add
push
sbb
daa
adc
adc
xor
lcall
repnz
push
scas
loope
sub
dec
imul
popf
test
xor
pop
out
adc
dec
mov
jecxz
or
iret
inc
add
sbb
mov
xchg
jnp
push
lret
movsb
dec
sbb
adc
xchg
daa
imul
ret
add
loopne
or
jae
pusha
sar
push
sub
mov
or
inc
adc
or
push
aam
ret
adcl
dec
arpl
adc
and
and
xor
enter
lret
rcrb
mov
add
dec
adc
test
in
cld
sbb
push
dec
sbb
es
stos
dec
sbb
mov
adc
loop
js
or
cmp
inc
or
lock
adc
mov
mov
xchg
aad
sbb
sub
cltd
ljmp
xchg
fwait
test
jmp
scas
xchg
lock
xorl
mul
mov
rclb
dec
outsb
xchg
pop
loope
cwtl
lock
mov
add
dec
mov
adc
pushf
int3
imul
enter
lahf
sbb
stos
icebp
lods
cmpsl
xor
mov
push
jae
outsl
inc
test
mov
mov
mov
fstl
mov
jno
inc
xor
cltd
arpl
xchg
lea
les
adc
idivb
lods
push
adc
rclb
mov
fmuls
pop
jb
das
arpl
mov
adcl
adc
push
dec
loop
inc
or
adcb
pushf
cli
ret
mov
push
xchg
subb
sbb
jg
or
cmpsl
sub
dec
sbb
sbb
and
xchg
pop
fiaddl
mov
dec
das
sub
loop
mov
mov
mov
push
fs
movd
jl
sbb
add
hlt
sahf
mov
lret
mov
sbb
cmpb
mov
xor
loop
add
gs
xor
mov
sti
inc
cwtl
pop
cltd
mov
pop
add
andb
arpl
sbb
lods
sub
xchg
cmpsl
pop
ss
xor
lea
test
bound
imul
sbb
in
cmp
inc
mov
stos
inc
das
jp,pt
mov
sub
xor
mov
inc
mov
mov
xchg
push
aad
and
adc
mov
ljmp
lods
cmc
or
arpl
lods
lods
sub
xchg
cltd
outsb
clc
xchg
jl
clc
aas
fwait
stos
fs
ds
roll
adc
inc
lea
cmp
jecxz
cmp
int3
in
int
dec
das
in
jp
cmc
lahf
push
loop
scas
out
xlat
mov
into
test
xchg
sub
and
mov
leave
daa
adc
fistps
jp
xor
push
cmp
insl
xor
jno
add
rolb
push
or
jg
and
jne
add
fcoms
xchg
adc
adc
shll
leave
push
xor
jge
sbb
inc
inc
mov
fs
mov
xchg
push
cmp
xor
lock
dec
ds
jne
inc
jne
push
sub
and
push
mov
add
or
and
pop
testb
mov
and
mov
jbe
adcb
fdivr
inc
rolb
adc
push
in
and
and
mov
sbbl
xchg
adc
mov
fldcw
sub
inc
or
push
fneni(8087
out
test
adc
jne
inc
mov
mov
xor
test
arpl
int
jo
cltd
jg
ja
mov
adc
stc
add
xor
sub
mov
and
add
orb
bnd
add
mov
adc
popa
insl
add
ja
xchg
add
xchg
cltd
mov
fists
leave
xchg
pop
dec
repnz
pushf
addb
fmull
pop
push
jae
mov
test
dec
and
sti
adc
subl
or
inc
daa
mov
add
js
fildl
lret
mov
sub
pop
sar
dec
imul
adc
mov
sub
jb
jp
xchg
sbbl
jmp
xchg
dec
mov
enter
and
imul
adc
test
jae
das
xchg
mov
lods
inc
aam
lret
repz
jmp
shr
daa
pop
or
popa
inc
mov
add
pop
jae
xchg
sbb
and
cmpsl
idivl
jno
jecxz
mov
lret
pop
outsb
jl
shll
or
push
call
mov
or
mov
mov
fnsave
xchg
sub
imul
pop
icebp
fists
inc
aam
lret
in
test
inc
dec
inc
das
jne
popl
repnz
push
leave
nop
sbb
je
test
xor
sbb
pop
and
push
adc
ljmp
insb
xor
push
cmp
psrlw
xchg
rolb
test
sbb
inc
pop
jecxz
sub
test
dec
iret
mov
add
fldenv
test
inc
aam
or
fcompl
lret
int
neg
pop
fsub
rorl
test
shlb
ret
xchg
jb
ret
ss
adc
xchg
xchg
inc
jle
insl
xchg
jle
clc
add
sub
je
or
xchg
or
leave
sub
cmp
pop
fwait
lods
sbb
pop
inc
stos
shlb
fcom
cs
addr16
sahf
or
dec
sbb
fadd
dec
sbb
dec
mov
lea
or
add
movb
arpl
or
or
sbb
fstpl
xor
push
push
push
cmp
lahf
add
icebp
adc
jp
pop
or
psraw
mov
pop
in
imul
stos
push
insl
jns
test
mov
add
jns
push
adc
xor
in
fstl
aaa
lods
int
inc
pop
nop
pop
lds
or
sub
mov
loope
call
jge
ds
sbbl
add
sbb
jno
stc
jb
sbb
inc
adc
or
sbb
xchg
adc
sub
pop
xor
aaa
nop
ret
mov
xor
daa
mov
into
cmp
push
inc
and
sbb
jl
aad
jns
scas
inc
adc
fldenv
imul
cmpsl
xchg
xor
jmp
dec
sbb
and
push
sub
push
insb
movsb
cmp
popl
les
xor
push
pop
lret
sti
add
popf
jecxz
jmp
mov
inc
inc
cmp
jmp
add
sub
add
loopne
or
jno
jl
sbb
sbb
and
call
mov
orl
pop
rorl
scas
cmpsl
push
clc
dec
jle
pop
sbb
cltd
shr
sbb
cltd
outsl
addr16
or
inc
sub
leave
cmp
cwtl
js
les
xor
mov
cmp
aam
sbb
pop
ds
push
jo
shll
pop
or
ret
xor
clc
pushf
test
subl
rorl
pop
sahf
shll
cltd
xchg
pop
mov
lea
out
xchg
mov
xlat
inc
mov
ret
mov
lret
cmpsb
sub
lds
xchg
cltd
mov
mov
push
andl
notl
js
push
mov
insl
xor
jae
and
popf
shll
test
cmp
jo
mov
cli
jne
xchg
in
leave
dec
jb
pusha
addl
pop
adc
gs
arpl
popa
out
inc
test
into
jbe
out
mov
and
add
sbb
jp
rorb
sub
iret
pop
mov
or
ss
addr16
std
fstl
push
mov
adc
and
stos
inc
mov
les
or
scas
or
add
mov
push
ljmp
lret
mov
mov
leave
mov
mov
fisttpll
add
mov
mov
jecxz
sbb
inc
fwait
or
dec
jnp
adc
mov
cmp
mov
xorb
ds
or
xor
cld
jge
mov
adc
inc
inc
jmp
test
xchg
push
loopne
sbb
sbb
cmp
xchg
pop
add
fildl
xchg
jnp
cli
call
dec
mov
inc
pop
and
imul
mov
lds
mov
outsb
push
loopne
adc
jo
jmp
cmp
or
mov
scas
xchg
inc
jmp
inc
ficompl
and
xchg
pop
jnp
dec
inc
daa
mov
inc
inc
sub
push
adc
jo
scas
aad
inc
dec
push
es
adc
fwait
notl
iret
pop
jbe
pop
mov
outsl
xor
in
out
add
xchg
inc
mov
loop
sbb
add
cmp
mov
push
inc
dec
mov
ficompl
and
lcall
pop
push
inc
daa
and
xchg
sahf
movsl
rcll
fwait
jno
jne
pop
cmpsl
orb
push
shlb
lock
jecxz
mov
cmp
xchg
sti
stc
jnp
sbb
in
add
cmp
xchg
inc
adcl
inc
aad
dec
lcall
jns
mov
inc
fs
arpl
push
push
loope
add
rorb
or
jmp
push
or
jl
adc
xor
xchg
jno
in
test
dec
daa
dec
movl
add
rcll
dec
test
xchg
lcall
imul
pop
jecxz
adc
test
imul
rcrl
gs
out
int
pusha
add
sbb
dec
inc
xor
jmp
lret
mov
or
jl
dec
and
repz
ds
jbe
arpl
pop
int3
jp
adc
stc
xchg
inc
rolb
mov
lods
or
inc
loopne
pop
fisttpll
loop
orb
lods
sub
das
xchg
pop
or
loop
pop
xor
imul
add
sbb
test
pop
cmp
sbb
out
sbb
inc
leave
inc
or
mov
and
out
xchg
rorl
inc
femms
or
push
cltd
lods
add
loope
jbe
mov
rcl
leave
fldl
fcompl
js
mov
xchg
push
add
cli
jne
sub
or
enter
rcrb
jecxz
sub
add
cmpb
out
xor
inc
sbb
jmp
xchg
pop
inc
inc
inc
sarl
add
mov
bound
pop
and
add
mov
stos
popa
testl
pop
stc
rolb
sub
adc
repz
xchg
adc
and
push
xchg
inc
sbb
mov
push
or
stc
lds
test
xor
push
mov
jo
orl
cs
pop
mov
mov
das
sbb
adcb
jns
rol
mov
inc
xor
movb
fs
shll
les
fmull
add
inc
xor
stc
pop
cli
pop
sbb
rorl
xchg
ficoms
xor
shl
push
pop
sbb
or
imul
mov
dec
mov
and
xor
daa
pop
shlb
imul
cltd
inc
lahf
cld
jb
xchg
and
nop
daa
ja
and
mov
sub
xchg
sbb
adc
es
mov
add
inc
mov
and
or
in
stc
jg
jg
mov
inc
inc
inc
jle
and
cmp
loopne
callw
push
inc
push
fcomps
push
inc
cmpb
sbb
cmp
xchg
stos
push
insb
cltd
int3
xor
add
xchg
xor
mov
dec
inc
shll
sbb
xchg
adc
mov
mulb
jmp
repz
and
fdivrl
mov
add
gs
rclb
or
testl
in
lds
jp
insb
cmpsl
sbbb
hlt
sub
ss
xchg
push
mov
inc
cwtl
xchg
les
fsubrp
rclb
jno
and
orb
mov
pop
mov
mov
cs
int
fbstp
enter
mov
mov
fsubs
push
mov
daa
sbb
cld
dec
xchg
and
lret
stos
sbb
into
cld
int
and
jecxz
movsl
mov
jae
inc
push
aas
ret
cmpsl
imul
aad
mov
sub
mov
fisubl
or
movsb
aaa
add
sahf
inc
je
or
sbb
add
and
scas
adc
loop
xor
and
cwtl
adc
popl
xor
or
lds
leave
cmpsl
xor
xchg
sub
in
stc
jne
pop
jge
ds
pushf
sbb
dec
pop
sub
orl
nop
roll
jp
jg
fstps
or
cmc
jmp
adc
cmpsb
dec
shl
popa
or
lret
lds
arpl
cs
addr16
or
pop
adc
out
popf
lea
xor
jns
jmp
and
add
fiadds
mov
into
outsb
mov
daa
nop
and
jno
shll
xchg
lods
or
cld
arpl
and
sub
and
mov
dec
dec
dec
inc
inc
sbb
lds
push
mov
rcll
sub
sub
and
add
inc
or
adc
arpl
pop
adc
arpl
pop
adc
add
das
dec
adc
nop
loopne
vmread
sbb
mov
push
dec
sub
dec
dec
or
pop
sti
or
and
cwtl
sbb
xchg
loope
dec
das
jo
and
or
push
sti
xor
inc
push
add
pop
jns
add
adc
shll
inc
ret
or
jmp
imul
sub
sub
add
add
jns
jmp
adc
mov
mov
and
inc
pop
sbb
arpl
inc
in
test
pushf
ret
shll
add
xor
ret
jmp
or
push
jg
cli
gs
mov
sub
inc
xor
add
jno
or
adc
adc
push
dec
pusha
loope
push
or
mov
and
movsl
pop
push
imul
adc
mov
push
mov
push
xchg
and
fdiv
movsl
xor
xor
adc
lock
adc
push
mov
pop
scas
rclb
addr16
mov
lret
sarb
jo
jne
or
jmp
mov
cld
cmpsl
repnz
adc
into
addr16
pop
ret
push
pusha
stc
mov
test
adc
int3
dec
dec
gs
pusha
xchg
aad
mov
adcl
inc
mov
sbb
or
dec
mov
ret
and
push
and
arpl
adc
adc
mov
inc
xor
inc
push
sbb
loopne
mov
lcall
add
cmp
sbb
xor
shlb
scas
mov
sub
push
or
flds
add
sub
in
add
jae
jno
inc
push
add
pop
addr16
filds
xor
clc
cmp
sub
ss
clc
insl
idiv
mov
xchg
mov
inc
shrb
fdivr
out
pop
lods
mov
mov
mov
add
stos
xor
inc
cmpsl
or
push
sbb
lea
add
aad
movsl
push
inc
push
mov
cmpsb
mov
xchg
shlb
cmp
mov
dec
fld
test
xchg
sbbb
jecxz
cmc
mov
cmpsl
in
push
adc
push
call
addr16
lcall
sbb
xlat
data16
xor
lock
and
mov
jb
popa
add
call
mov
or
jnp
enter
sub
addb
lock
xor
dec
sahf
xlat
push
test
mov
leave
sbb
sub
adc
add
pop
popa
test
lods
dec
lret
mov
adcl
or
jp
adc
lcall
stc
fcoml
jle
sbb
enter
loope
and
outsb
lods
fidivrs
adc
jns
mov
out
jmp
jns
fs
andb
and
add
mov
addr16
pushf
xor
adcb
dec
testb
shrl
sub
jno
leave
lret
xorb
in
inc
dec
dec
test
cmpsl
pop
cmp
aaa
into
adc
mov
movsb
sub
arpl
sbb
iret
xchg
pop
jecxz
xchg
aaa
add
bnd
lock
out
mov
test
mov
dec
jb
push
mov
scas
push
xchg
inc
test
inc
pusha
fsubs
pop
and
xor
hlt
pop
xor
xor
in
xorb
lds
dec
outsl
stos
xor
pushf
sub
dec
mov
outsb
ljmp
cmp
int3
dec
pop
out
repnz
mov
fmuls
dec
bound
sbb
inc
repnz
inc
inc
testb
mov
data16
fmuls
or
push
or
pavgb
pop
loope
and
dec
shlb
push
or
fsubs
mov
inc
fisubl
jp
inc
scas
xchg
nop
dec
cmp
mov
mov
pop
daa
dec
mov
jp
sub
ror
jnp
outsl
fistl
jo
inc
adc
adc
xchg
mov
or
inc
sub
movsl
pop
add
stos
test
xchg
ds
xchg
xchg
sub
and
mov
jmp
fildl
lods
or
xor
adcb
loopne
jecxz
or
mov
or
or
adc
adc
call
mov
inc
mov
mov
and
mov
push
xlat
sbb
add
pop
mov
inc
mov
sbb
sahf
aam
hlt
push
dec
mov
adc
pop
push
inc
icebp
mov
sbb
mov
xor
ljmp
mov
dec
cmc
stc
mov
inc
test
push
repnz
push
mov
inc
mov
inc
push
mov
xor
pop
cmp
movsl
and
fs
inc
push
rorb
inc
push
push
dec
xchg
inc
ljmp
mov
int
xor
and
push
nop
sbb
fisubl
cmovb
rclb
or
leave
inc
add
pop
mov
loope
test
push
or
fstpl
jle
loopne
in
ror
push
rcll
cmp
sub
mov
pusha
out
pop
xorl
pop
movsl
sbb
mov
loopne
add
xor
sbb
jp
jecxz
mov
in
cmp
int3
xor
inc
cmpsl
mov
hlt
xchg
sbb
fxch
cltd
jb
jnp
jne
leave
call
pop
cmp
into
gs
nop
bound
mov
je
dec
or
xor
sbb
xor
lret
and
xor
fadds
fstps
fldenv
sbb
mov
xchg
push
loopne
lods
aaa
js
xchg
push
aas
jecxz
mov
adc
or
pop
mulb
mov
test
test
push
adcl
xor
cs
bound
dec
stos
cmp
ja
jl
push
push
push
push
sub
ret
jbe
int
test
jnp
mov
repz
mov
add
ret
fildl
pop
sub
iret
xor
je
xlat
pop
or
call
rorb
leave
xchg
push
repnz
movsl
cmp
inc
daa
or
dec
imul
mov
js
sbb
adcb
andl
sbb
mov
cltd
dec
gs
into
lds
addl
nop
popf
jno
add
jmp
or
cwtl
insl
rorb
add
jge
cmp
daa
add
sub
mov
sbb
adc
xchg
fimuls
add
or
sub
mov
nop
sahf
xchg
jns
add
sub
push
icebp
xchg
mov
add
xorb
mov
sub
popa
sahf
xor
ja
adcl
test
mov
inc
aas
jo
mov
gs
cmp
pop
ret
lcall
fdivrs
movb
or
loope
jge
xchg
test
std
adc
rcrb
mov
inc
loopne
sbb
inc
dec
popa
orl
nop
mov
aas
inc
cmp
ds
add
xchg
adc
xchg
or
xor
and
pop
in
cmp
addl
and
cmp
push
pop
lcall
fwait
mov
inc
cli
pushw
mov
sbb
mov
jle
or
fdivrp
scas
push
cmp
and
inc
adc
sahf
int3
adc
xchg
xchg
into
in
inc
inc
orl
xor
cmpb
movsl
jo
sbb
and
dec
js
loopne
popa
rol
push
and
inc
mov
call
lock
pop
inc
into
xchg
dec
fsubs
ja
insl
call
sbb
addl
rorb
les
movsl
inc
sti
pop
adc
sbb
mov
dec
daa
lret
jp
xor
push
lahf
mov
sar
test
in
adc
inc
sbb
repz
dec
sti
mov
in
xor
shr
es
pusha
jecxz
aaa
clc
dec
inc
xchg
or
imul
popa
lret
adc
in
mov
add
cmp
dec
push
ljmp
mov
xchg
in
dec
sbb
in
addb
aaa
mov
dec
cwtl
or
and
mov
pop
xor
and
addl
pop
pusha
cli
and
out
and
adc
sub
xor
test
shl
and
add
sbb
rcl
shl
rol
add
sbb
cmp
adc
sub
not
call
add
dec
or
insl
pop
jecxz
loop
insb
ljmp
stc
ret
xor
add
rol
xor
ret
fldl
shlb
ret
mov
loop
ss
jne
mov
dec
dec
out
and
hlt
jnp
ret
aad
xchg
outsb
pop
jecxz
loop
ss
jne
mov
pop
stos
adc
jecxz
loop
pop
faddl
ret
pop
or
ss
jne
add
dec
ret
roll
dec
jnp
insb
jne
ss
jmp
dec
icebp
pushf
bound
pop
jecxz
loop
pushl
ret
std
rcrl
jecxz
loop
jmp
xor
ret
neg
mov
jne
sbb
ret
ss
call
ret
pop
mov
lods
and
ret
lods
mov
add
pop
ret
ss
jne
dec
pop
ret
pop
mov
jne
decl
rol
push
xchg
jne
inc
xor
arpl
ret
int
lcall
add
ret
ss
call
ret
and
xor
ret
and
add
ss
jne
xor
ret
xlat
shlb
insb
jne
out
cli
ret
ss
decl
ret
test
sub
xor
ret
or
ss
jne
shlb
ret
subb
jne
les
xor
sub
ret
aaa
arpl
ret
test
in
sahf
cmp
push
ret
ss
jne
rolb
push
ret
push
jno
xlat
and
jecxz
loop
insb
jne
out
and
test
cmc
cmc
adc
pushl
arpl
ret
insb
add
ret
lods
jmp
fdivl
imul
xor
or
push
or
xchg
rol
xor
mov
ret
std
mov
push
mov
jne
mov
ret
fsts
pop
jecxz
loop
insb
jne
mov
ret
xor
jecxz
loop
fsubl
ss
jne
fsubl
incl
leave
ret
stos
idivb
xor
inc
incl
ret
loope
or
dec
test
cld
and
ret
pushf
stos
ja
fnsave
insb
jne
xor
outsb
fcmovb
ret
mov
test
ljmp
ret
ss
lcall
out
cltd
jmp
rorl
fs
xor
inc
lret
jmp
inc
ret
jb
xchg
ss
jne
fadd
xor
sub
cwtl
filds
jne
packssdw
ret
loopne
ss
jne
ret
or
into
push
ret
scas
jae
ret
test
mov
xor
ret
ret
adc
ret
mov
pop
jecxz
loop
in
cli
ret
mul
cmpsl
loop
mov
ss
jne
mov
imul
ret
sbb
es
ret
mov
adc
mov
ret
mov
xor
add
jge
lock
jecxz
loop
leavew
ret
sub
ret
mov
jecxz
loop
ret
ret
mov
ret
into
movsb
es
xor
fldl
mov
jne
ljmp
in
cmp
and
ret
sbb
push
xchg
ret
cld
test
out
popf
add
ret
aaa
pop
jecxz
loop
lock
cmp
mov
pushl
ret
or
and
xor
xchg
je
cmp
ret
mov
mov
push
xor
mov
mov
ss
jne
scas
nop
mov
insb
ljmp
movsl
mov
jecxz
loop
ss
jne
int3
mov
ret
xchg
xor
fsubrp
loope
ret
mov
ret
popf
pop
mov
xor
loope
ret
push
xor
stos
sbb
jne
sub
out
ficoms
repz
mov
ret
insb
ljmp
pop
xor
xor
test
mov
loope
ss
jne
faddl
xor
stos
ret
dec
mov
lret
ss
jne
add
arpl
ret
jo
rcll
xor
pop
add
fadd
ret
jns
shrl
cmc
xor
jmp
mov
insb
jne
pop
inc
xor
ret
enter
cmp
ret
xor
ds
ret
aaa
pop
jecxz
loop
pop
popa
push
bnd
pusha
xlat
scas
ss
jne
jno
add
ret
and
loop
std
jnp
ret
cld
aaa
xor
test
xor
ret
sub
sub
jne
mov
ret
imul
loope
jne
ss
add
fcmovb
ret
or
out
pop
ss
jne
ss
jne
inc
add
ret
shl
cmc
sub
xor
faddl
ret
repz
in
loope
xor
jnp
ret
mov
daa
int
out
faddl
xor
ret
imul
loop
pop
out
pop
add
loopne
ret
ss
call
cmp
ss
jne
pushl
ret
jp
negb
jecxz
loop
jmp
ret
fisubrl
mov
shlb
add
ret
test
ss
jne
fstpl
ret
and
sbb
jecxz
loop
insb
mov
xor
ja
test
fcmovnbe
ret
shrb
add
mov
ret
or
lock
incl
js
mov
call
jne
out
and
push
ret
add
add
mov
ret
insb
jne
std
push
add
xor
sub
ret
repnz
ss
jne
xor
ret
mov
call
ret
mov
pop
jecxz
loop
lea
ret
dec
xchg
divl
mov
add
inc
pop
dec
ss
jne
ss
jne
pop
out
inc
jo
mov
jne
in
jae
ret
insb
decl
or
ret
rolb
fisubs
ret
pop
add
ret
outsl
inc
mov
jecxz
loop
ss
jne
add
pop
ret
clc
pop
and
les
xor
popf
add
inc
fcmovb
ret
pop
pop
jecxz
loop
lea
or
ret
xchg
inc
pop
jecxz
loop
mov
ret
insb
jne
popf
js
mov
jecxz
loop
insb
jne
fstpl
ret
out
inc
push
and
out
fwait
ret
add
ret
jns
pop
jecxz
loop
pop
faddl
mov
cmpsl
xor
insb
jne
sbb
push
ret
sbb
ss
jne
scas
fisttpl
insb
push
bnd
ret
fs
jne
lods
arpl
call
pushf
cmp
lea
ret
mov
xor
adc
imul
insb
jne
les
ret
dec
mov
enter
insb
jne
decl
imul
ficoml
insb
jne
fidivrs
ret
ss
jne
fstps
ret
fidivrl
ss
jne
xor
pushl
ret
sub
ss
jne
sbb
ret
in
fwait
ret
add
xchg
ss
jne
add
ret
insl
or
xchg
push
cli
ss
xor
imul
jne
lods
insl
clc
mov
ret
insb
jne
sub
ret
cmp
jne
sub
mov
dec
fcmovb
ret
mov
jecxz
loop
ss
jne
mov
ret
cmc
popf
ss
jne
in
ret
sub
shrb
clc
xor
dec
ret
fstpl
cs
decl
ret
adc
add
insb
jne
cmpsl
add
xor
aas
push
jge
ss
out
and
xor
aas
cwtl
mov
mov
xor
add
ret
jbe
insb
jne
outsl
mov
ret
pop
mov
cmp
xor
ret
inc
outsb
or
insb
jne
xorl
js
jne
dec
and
add
push
ret
sub
xor
jmp
jb
shlb
ss
jne
enter
mov
and
mov
decl
ret
sub
fistl
pop
jecxz
loop
ss
jne
ss
ret
inc
cmp
loope
jne
and
ret
pop
lahf
xor
mov
ret
add
pop
ss
jne
ret
ret
insb
add
cwtl
mov
pop
jecxz
loop
add
ljmp
jo
pop
jecxz
loop
insb
ds
ret
push
sbb
jne
mov
ret
mov
push
jne
and
ret
ss
ljmp
ret
inc
mov
add
mov
push
push
jecxz
loop
ss
add
push
mov
cmp
add
mov
and
lret
xchg
lock
jne
ljmp
fwait
cmp
jne
ss
jne
mov
aad
shll
fwait
ret
sub
push
rep
jne
dec
xorb
orb
jecxz
loop
insb
jne
cmp
ret
cmp
jne
ljmp
nop
mov
xor
push
dec
mov
ret
xchg
ss
jne
fsubl
xor
rol
ret
leave
mov
lods
pop
jecxz
loop
mov
ret
and
jne
xor
ret
test
ss
jne
mov
xchg
ret
cmp
jecxz
loop
insb
jne
xor
push
ret
jecxz
pop
out
ss
jne
leave
arpl
ret
clc
xor
sbb
xor
ret
sti
push
clc
int3
sub
jecxz
loop
call
mov
fldz
sub
cld
push
adc
ret
cwtl
cmp
icebp
sub
ret
insb
jne
in
push
js
sbb
sbb
sbb
ret
cmp
movsb
into
xor
add
sub
enter
loop
ss
add
ret
add
sti
daa
mov
insl
mov
mov
nop
cmp
ss
jne
dec
lret
push
test
call
arpl
ret
rcrb
xor
mov
roll
loop
lcall
ret
icebp
add
ss
jne
add
ret
cmp
insb
jne
faddl
sbb
xchg
shrl
mov
cmp
insb
jne
insl
mov
pop
inc
adc
pop
fisubs
mov
mov
add
loope
jne
in
and
orb
pop
jecxz
loop
cmp
insb
add
xchg
into
cli
pop
jecxz
loop
push
add
cmp
loope
ss
jne
xor
jp
dec
leave
stc
pop
jecxz
loop
ret
ret
mov
jns
add
in
xor
nop
mov
xor
incl
lret
test
out
fsubl
ret
xchg
shl
xor
ret
lock
in
mov
pop
add
jmp
ret
in
je
ss
lcall
cmp
ret
stc
add
fldl
add
arpl
ret
push
mov
jne
mov
loop
ret
pusha
pop
jne
mov
ret
insb
pushl
pushf
stos
and
jecxz
loop
shlb
mov
stos
imul
pop
ret
call
jo
mov
dec
sub
pop
jecxz
loop
enter
xor
add
ret
outsl
xchg
sbb
xor
xor
mov
mov
repnz
jne
ss
jne
int3
or
ret
loop
jne
xor
xchg
imul
mov
xchg
out
xor
jecxz
loop
add
xor
ret
lods
jno
cmpb
ret
insb
jne
mov
out
and
jecxz
loop
xor
add
ret
fldl
xlat
pop
ret
ss
jne
jmp
dec
mov
xor
mov
or
mov
ret
jg
ret
pop
mov
jecxz
loop
pop
pusha
add
mov
pop
or
ret
outsl
in
ss
ljmp
xchg
in
inc
xor
aas
xor
add
pop
mov
ss
jne
mov
ret
mov
xchg
insb
and
insb
jne
lcall
mov
jecxz
loop
and
insb
jne
and
jo
mov
mov
shlb
mov
mov
xor
div
xor
jge
stos
cmp
or
ret
cwtl
add
fldl
add
xor
ret
jo
mov
ljmp
insb
jne
fsubl
ret
inc
xor
jecxz
loop
ljmp
pop
mov
cmp
xor
ret
pop
sbb
scas
insb
and
or
outsb
ljmp
jle
ret
adc
jne
mov
xor
ret
pop
ret
pop
jecxz
loop
ss
jne
arpl
ret
stos
ret
lret
out
in
ss
jne
ss
jne
xchg
dec
ret
mov
movsb
sbb
je
mov
js
faddl
lcall
add
subl
jne
lret
ret
je
jecxz
loop
insb
jne
pop
or
ret
inc
sti
aas
xorb
push
ret
xchg
xchg
in
ss
jne
out
and
ret
pop
pushf
jmp
xor
fsubl
ret
xor
jne
stc
aaa
sub
jnp
ret
dec
adc
ret
std
pop
lret
jne
xor
mov
add
cmp
mov
jecxz
loop
insb
jne
add
jae
ret
testb
loope
xor
clc
or
jo
ret
push
loop
ret
add
add
mov
pop
jecxz
loop
ss
jne
mov
mov
ja
sub
jecxz
loop
ss
jne
ss
ret
fwait
adc
jo
inc
xor
ret
js
jecxz
loop
insb
jne
scas
dec
mov
ret
insb
lcall
inc
mov
shrl
mov
xorb
adc
jecxz
loop
insb
jne
xchg
insl
add
jge
pop
jecxz
loop
ss
jne
dec
call
ret
add
loope
xor
ret
push
jge
negl
jecxz
loop
add
aaa
sub
add
ljmp
ret
ret
or
jne
xor
bnd
xchg
in
add
ret
add
mov
jne
sbb
pusha
mov
fistl
insb
decl
ret
testb
dec
inc
ret
incl
ret
lcall
jecxz
loop
ss
jne
bound
ret
mov
insl
ds
ret
mov
xor
or
fsubl
mov
cwtl
cli
and
jecxz
loop
ss
jne
adc
mov
lds
ss
jne
fdivs
stos
ret
add
imul
pushf
inc
xor
xchg
xor
ret
xor
loop
push
orb
jne
xor
lret
andl
ret
sub
insb
jne
xchg
ret
outsl
out
pop
jecxz
loop
insb
jne
faddl
mov
in
jne
ss
jne
pop
and
ret
lret
cmp
jecxz
loop
add
ljmp
or
insb
jne
xchg
sub
xchg
jbe
ss
jne
ss
jne
in
push
and
fidivs
ret
ss
jne
sbb
mov
xchg
insb
jne
pop
or
ret
repz
sub
ret
mov
andl
loope
inc
xor
cli
ret
cmc
repnz
sub
ss
jne
imul
ret
lds
arpl
insb
jne
clc
xor
ret
mov
jecxz
loop
insb
jne
ss
call
stos
ret
out
add
add
jecxz
loop
faddl
mov
pop
push
sub
insb
jne
cwtl
fcmovb
ret
sub
xchg
dec
negl
jecxz
loop
ss
jne
dec
lods
or
ss
jne
fsubl
ret
xor
ret
inc
jmp
and
ret
lods
cmp
ret
ss
insb
jne
mov
sbb
mov
mov
cmpsb
popa
and
add
jecxz
loop
xor
mov
jne
ret
mov
in
adc
ss
jne
faddl
add
int3
xlat
pusha
xor
ljmp
add
test
or
xor
mov
je
mov
add
mov
pushf
cwtl
enter
xor
testl
das
push
add
mov
add
push
ret
fists
lea
mov
cltd
mov
push
lret
xor
mov
add
in
sti
sahf
mov
scas
pushl
jne
mov
repz
xor
addr16
mov
mov
ss
jne
cs
into
mov
ja
ret
lcall
ret
dec
mov
ljmp
repz
mov
aaa
xor
ret
push
out
sbb
xor
popf
add
in
push
mov
jecxz
loop
ss
jne
pop
pusha
decl
mov
out
pushf
add
push
sub
pushf
add
jp
mov
inc
push
jne
fadd
xor
les
dec
cmp
call
call
loopne
ret
xchg
sub
insb
jne
and
mov
dec
xor
scas
jp
or
and
ret
xor
loope
lcall
ss
jne
aam
incl
shll
xor
push
ret
xchg
pop
in
jne
imul
ret
xor
or
movsb
sbb
mov
ret
out
nop
mov
jne
fadd
stos
fsubl
add
into
add
add
xor
nop
jne
mov
ss
jne
rcll
ret
addl
lret
sti
ss
jne
popf
add
sub
cltd
repz
jne
xor
ret
fstpl
jne
fsubp
out
mov
mov
shl
aaa
lock
fsubl
ss
jne
ss
decl
adc
or
lock
jecxz
loop
xor
mov
mov
aad
pop
cmc
xor
cmp
ja
into
int
jecxz
loop
out
hlt
inc
xor
push
dec
mov
out
sbb
jne
pop
xor
ret
test
aaa
xor
faddl
xor
fcmovb
ret
outsb
mov
jecxz
loop
insb
jne
add
outsb
xchg
jecxz
loop
insb
add
cmp
in
shll
ret
insb
jne
ror
mov
mov
jne
ss
call
into
or
xor
mov
push
pop
jecxz
out
pop
and
ret
ret
aas
dec
mov
out
fsubl
xor
mov
ljmp
incl
shll
das
stc
xor
in
add
ret
movsb
inc
inc
xor
repz
mov
mov
mov
xor
sub
lods
sbb
pop
pop
jecxz
loop
ss
jne
bnd
pop
rol
ret
imul
insb
jne
xor
fisubrs
mov
ret
add
insb
jne
popf
mov
mov
jnp
jg
ret
ss
jne
test
ret
test
aas
mov
sub
jne
sub
mov
fdivl
and
ret
adc
jecxz
loop
out
sbb
add
imul
out
pushf
add
push
mov
insb
jne
call
ret
cli
pop
adc
into
pop
jecxz
loop
mov
add
ret
sub
add
ret
pop
jg
iret
dec
mov
ret
jno
mov
ss
jne
add
ret
paddusb
into
jmp
fcmovb
ret
mov
jne
pop
add
sbb
ret
insb
jne
daa
and
ret
nop
pop
sti
mov
scas
xchg
ret
js
mov
adc
jnp
jecxz
loop
dec
xor
imul
lret
xchg
iret
sbb
jecxz
loop
insb
add
out
mov
xor
out
pop
dec
stc
in
js
jecxz
loop
insb
jne
add
or
ret
cmp
mov
xor
ret
dec
sbb
pop
jecxz
loop
mov
ret
insb
add
test
arpl
loope
xor
add
ret
mov
loop
insb
jne
rorl
mov
aam
rolb
fldl
add
ss
add
mov
scas
orb
psrad
ret
adc
ret
test
stos
les
mov
unpcklps
xor
dec
ljmp
xchg
pop
jecxz
loop
add
fcmovb
ret
push
dec
pop
push
test
ss
fdivs
mov
in
enter
ss
jne
dec
in
shlb
and
xchg
lahf
inc
pop
jne
xor
call
xchg
ja
outsb
ja
pop
jecxz
loop
insb
ljmp
ret
leave
je
jecxz
loop
insb
ljmp
push
sub
ss
jne
cld
push
sub
loop
insb
jne
pop
mov
mov
pop
jecxz
loop
jge
mov
jne
gs
xor
ret
mov
xchg
dec
ss
jne
insl
and
cwtl
mov
push
xchg
bound
jecxz
loop
insb
jne
push
fs
xor
mov
mov
jne
add
add
ss
jne
fsubl
mov
enter
mov
mov
stos
sub
jne
jle
ret
imul
and
iret
mov
lret
cmp
xor
sub
xor
sbb
or
add
je
mov
stos
faddl
xor
ret
int
add
inc
ss
jne
sbb
sbb
inc
shlb
jbe
mov
ss
jne
faddl
xor
daa
add
mov
jecxz
loop
out
rol
ret
out
jne
fsubl
ss
jne
dec
orb
mov
sbb
ss
jne
push
adc
push
jne
inc
xor
xlat
out
mov
and
jecxz
loop
incl
cli
add
cmp
adc
insb
jne
faddl
add
mov
mov
insb
jmp
sub
pop
in
jne
ss
add
and
jns
fnsave
pop
add
insb
inc
ljmp
mov
test
mov
inc
lret
nop
xchg
mov
pop
jne
ljmp
mov
out
lods
and
mov
dec
ljmp
inc
pop
out
pop
jecxz
loop
mov
mov
sub
xor
es
mov
push
mov
fwait
ss
jne
lcall
ljmp
xor
xor
pop
mov
ret
jne
cwtl
and
ret
or
and
outsb
testl
loope
ss
jne
pusha
adc
leave
push
jne
ss
jne
inc
orb
pop
jecxz
loop
xor
add
ret
roll
xor
repnz
ljmp
out
mov
loope
jne
jp
or
jecxz
mov
mov
ss
jne
pop
mov
inc
adc
jecxz
loop
insb
jne
daa
fcmovb
ret
mov
loop
pop
mov
mov
push
outsb
inc
orb
jne
out
fwait
inc
ret
xor
mov
push
xor
gs
pusha
in
xor
add
iret
mov
jmp
jne
mov
ret
dec
cmp
arpl
insb
jne
xor
jecxz
mov
jne
clc
mov
pop
dec
dec
push
pop
jecxz
loop
scas
incl
xor
mov
ja
push
aam
xor
faddl
inc
xlat
mov
in
push
pop
jecxz
loop
ss
jne
sbb
ret
mov
add
ss
jne
mov
mov
fisttps
xor
lret
movsb
fsts
jne
mov
ret
insb
jne
out
mov
ret
lods
sbb
sub
shlb
fcmovb
ret
iret
mov
or
scas
test
xor
mov
cmp
fsubl
xchg
or
adc
ss
decl
push
dec
lcall
xor
and
ret
sbb
ret
ret
pusha
add
xchg
ret
faddl
ret
ret
mov
add
xor
inc
mov
pop
jecxz
loop
ss
jne
mov
call
ret
pop
ret
jecxz
loop
ss
decl
mulb
pop
jecxz
loop
insb
jne
inc
bnd
out
push
das
mov
dec
pop
jecxz
loop
faddl
xor
ret
jae
mov
and
fsubl
ret
mov
ss
jne
pushl
sub
ret
movsl
pop
cltd
add
test
ss
jne
les
mov
pop
jecxz
loop
ss
jne
pop
addb
sbb
ret
add
jne
faddl
mov
ret
pop
pop
jecxz
loop
insb
jne
xchg
loop
ret
mov
shll
sub
pop
jecxz
loop
subb
ret
insb
jne
movsb
adc
pop
jecxz
loop
sub
xor
push
add
ret
push
imul
xor
mov
jmp
outsb
pop
jecxz
loop
insb
add
mov
sub
ss
jne
xor
mov
ret
pop
popw
jecxz
loop
insb
jne
push
pop
mov
in
stos
ret
ss
jne
rolb
cli
ret
inc
cmpl
insb
jne
add
and
push
inc
add
and
mov
pop
jecxz
loop
inc
bound
mov
fisttps
inc
ljmp
mov
insl
loop
mov
cwtl
lret
push
pop
jecxz
loop
insb
jne
popf
and
jo
mov
cmp
mov
decl
sbb
out
inc
xchg
jo
out
sub
add
in
ss
jne
les
mov
test
jecxz
loop
insb
ljmp
pusha
mov
or
ss
jne
add
loop
push
loope
jecxz
loop
insb
jne
jp
or
sub
ret
cmp
sbb
jecxz
loop
rorb
sbb
cmp
mov
lea
mov
nop
scas
pop
jecxz
loop
les
out
les
incl
xchg
cs
loop
pop
and
bnd
push
cwtl
pop
jecxz
loop
loopne
xor
fsubl
mov
gs
pop
jecxz
loop
insb
jne
faddl
xor
mov
pop
repz
jecxz
loop
pop
out
and
imul
ss
call
dec
mov
xor
xor
dec
mov
pop
out
and
ss
jnp
mov
jns
jecxz
loop
ss
jne
fsubl
mov
mov
xchg
dec
xor
mov
bound
pop
jecxz
loop
insb
jne
ss
jne
das
adc
pop
fldcw
jne
xorb
nop
mov
ss
jne
int3
loope
ss
add
ret
pushf
lahf
mov
adc
mov
ret
stos
cli
jno
xor
push
pusha
mov
out
xchg
jecxz
loop
jmp
cmpsb
ss
jne
cmovs
xchg
pop
jecxz
loop
mov
ret
push
mov
pop
add
ret
xor
xchg
push
push
cmp
cwtl
mov
out
pusha
xor
ret
scas
pop
ss
jne
test
fisubrs
mov
mov
xor
in
ss
jne
ss
jne
jb
mov
jecxz
loop
mov
ret
add
dec
mov
ss
jne
gs
xor
bnd
push
je
pop
shll
insb
jne
fisubl
add
mov
mov
xor
pop
loop
ret
jbe
mov
ss
jne
add
negb
cmp
xor
mov
mov
mov
fstl
pop
jecxz
loop
insb
jne
ss
jne
or
ret
xlat
mov
insb
jne
insl
mov
mov
and
stos
mov
mov
pop
xor
xor
ret
push
jnp,pt
insb
jne
ss
jne
push
decl
in
out
out
inc
xor
mov
ret
pop
mov
xor
fs
mov
jb
dec
xor
dec
cli
ret
scas
pop
mov
pop
mov
cmp
jecxz
loop
cmp
mov
xor
jecxz
loop
fsubl
mov
pusha
mov
inc
in
add
mov
sbb
mov
or
xor
stos
mov
mov
ss
jne
ss
jne
imul
aas
dec
pop
jecxz
loop
jle
mov
pop
xlat
aaa
jne
mov
add
nop
mov
ss
jne
ss
jne
push
js
mov
dec
xor
xor
cwtl
mov
inc
xor
lret
fldcw
icebp
sub
insb
jne
scas
pusha
mov
ret
mov
mov
sub
incl
mov
push
dec
xor
lods
fisttps
lock
int3
popf
pop
jecxz
loop
stos
mov
ss
jne
imul
mov
pop
outsl
shll
in
loop
ss
add
js
mov
fsts
fistl
test
enter
mov
popa
pop
jecxz
loop
inc
mov
mov
decl
mov
mov
loop
xor
jns
ret
icebp
testb
jne
xor
mov
mov
pop
inc
xchg
cmpsl
enter
loop
xor
subb
pop
lcall
mov
adc
sub
sub
ret
insb
jne
sub
mov
fcoml
lahf
clc
ss
jne
mov
ss
call
mov
push
popf
adc
jo
mov
sbb
jne
popf
adc
pop
mov
ss
jne
ss
jne
call
mov
or
insb
jne
out
and
mov
sahf
xor
ss
lcall
pop
jge
jecxz
loop
ret
xor
sbb
testl
jne
out
inc
mov
dec
js
xor
mov
ret
cmp
lahf
adc
fnstenv
insb
jne
xor
pop
mov
pop
jecxz
loop
insb
jne
or
xor
mov
xchg
shll
cwtl
mov
pop
xchg
push
pop
jecxz
loop
pop
outsl
vcmpss
add
xor
ss
jne
xor
mov
out
shr
sub
faddl
xor
mov
in
insb
jne
scas
mov
mov
ret
cmp
or
xor
mov
lcall
pop
jecxz
loop
xor
pop
mov
or
insb
jne
ss
stc
scas
mov
sbb
xor
in
add
mov
mov
out
inc
add
ret
ss
jne
inc
call
mov
ret
or
xrelease
cmp
mov
pop
pop
jecxz
loop
xor
or
mov
xor
faddl
xor
mov
outsb
jne
ror
ss
jne
mov
mov
idivb
xchg
mov
ss
pushl
stos
ret
cmp
xchg
xor
mov
fisubs
mov
mov
mov
jl
mov
mov
testl
mov
decl
xlat
mov
xor
mov
pop
sbb
sub
or
mov
inc
out
sub
rolb
xor
mov
push
lret
xor
nop
xor
out
mov
ret
hlt
addr16
pushf
add
mov
xchg
insb
mov
jecxz
pop
inc
ret
decl
mov
pop
jecxz
loop
insb
jne
imul
and
and
mov
ss
jne
xor
cltd
mov
mov
fs
jne
fbld
mov
insb
jne
xor
pop
mov
repz
dec
cltd
mov
ss
jne
xchg
push
insb
pushl
ret
fimuls
jne
inc
xor
mov
lods
push
int3
jns
pop
jecxz
loop
ss
jne
mov
mov
xlat
or
xor
mov
mov
enter
xor
mov
fdivrp
push
pop
jecxz
loop
insb
jne
lret
ret
push
ret
sbb
or
jecxz
loop
out
and
mov
sbb
insb
add
mov
push
inc
ss
jne
add
adc
pop
jecxz
loop
insb
jne
nop
add
lret
out
insb
jne
pop
out
pop
add
jmp
pandn
ss
jne
ss
jne
leave
push
mov
cmc
xor
pop
jecxz
loop
insb
jne
test
add
mov
or
jecxz
loop
insb
jne
rolb
dec
xor
xor
insb
jne
bound
mov
jecxz
loop
ss
jne
repnz
fnstcw
mov
jp
jecxz
xor
ret
mov
jbe
mov
jecxz
loop
insb
jne
sub
mov
mov
add
push
ss
jne
xor
mov
or
jo
sahf
aad
ss
jne
fsubl
mov
adc
loop
rorb
xor
orb
xchg
sbb
jecxz
loop
nop
iret
mov
mov
int3
pop
jecxz
loop
incl
rolb
ss
jne
pushf
push
cmc
out
insb
jne
movsb
loope
xor
push
xorl
xorl
jmp
outsl
pop
jecxz
loop
lcall
dec
xor
sub
xor
test
mov
cmp
push
jne
pushf
and
into
std
pusha
mov
scas
mov
dec
ss
jne
sar
ret
das
fdivs
jecxz
loop
pop
add
rcl
mov
or
add
sub
shr
scas
loopne
ljmp
icebp
xor
jne
insb
jns
mov
mov
mov
ljmp
push
jecxz
loop
fsubl
ss
jne
xchg
decl
stc
pop
int3
xor
mov
mov
hlt
sahf
test
jecxz
loop
ss
jne
or
mov
or
jecxz
loop
insb
jne
fsubl
cmp
mov
pop
jecxz
loop
xor
add
pushf
adc
jecxz
loop
pop
out
and
dec
js
mov
fwait
arpl
inc
xor
inc
mov
mov
xor
subb
push
lret
and
jne
les
fiaddl
sbb
sahf
lds
add
ss
add
dec
mov
ss
jne
enter
out
xlat
xchg
clc
sbb
loope
ss
out
testl
pop
inc
xor
shlb
jo
sub
insb
jne
sbb
jmp
testl
fldl
add
dec
mov
ret
push
adc
add
fadd
push
mov
mov
pop
push
mov
jmp
mov
ss
jne
popf
add
push
out
mov
icebp
or
loope
ss
jne
in
dec
mov
mov
loop
out
pushf
add
jmp
push
sub
pop
dec
fsubl
or
test
mov
push
orb
insb
jne
ss
ljmp
mov
mov
jne
loopne
mov
or
sub
ss
jne
inc
sar
jno
mov
enter
jecxz
loop
ss
jne
ret
pop
mov
add
xor
inc
xor
mov
cmpsb
je
sbb
jecxz
loop
insb
jne
xlat
nop
mov
dec
out
and
ss
add
js
mov
int
cli
xorb
jne
sbb
mov
pop
sbb
pop
fsubl
inc
xor
mov
loope
stos
mov
ss
jne
mov
mov
mov
mov
mov
jge
mov
inc
out
pop
jecxz
loop
ss
jne
out
xor
js
mov
js
push
add
jmp
add
jne
out
and
test
mov
cltd
push
jecxz
loop
insb
jne
push
xor
mov
pop
cmp
dec
call
mov
jecxz
loop
pop
inc
inc
add
jl
mov
pop
lcall
fs
mov
ret
rcl
cmp
jne
cmp
or
test
ror
call
fs
or
cli
sbb
push
sub
shl
call
bound
fs
rol
ror
ror
call
push
cld
jg
fs
rcr
rcr
add
jmp
mov
mov
std
mov
fs
xor
sub
neg
mov
jmp
ljmp
sub
cmp
jne
pusha
leave
and
fldl
add
inc
cmp
jne
xor
shll
rol
cmp
jne
cmovs
fs
shl
rol
call
push
sbb
adc
or
rcr
mov
and
not
call
out
push
or
mov
inc
cmp
jne
xor
rol
negb
shl
jmp
cld
sbb
clc
sbb
lea
shr
rol
call
repnz
fs
ror
mov
shl
neg
dec
call
shl
outsl
lret
gs
or
ss
adc
lods
add
sbb
dec
rcr
rol
jmp
sbb
orb
arpl
ficompl
or
rcr
jmp
jg
xchg
shl
shr
or
mov
call
sbb
lret
test
shr
adc
sub
rol
cmp
jne
fdivrl
movsl
loopne
lea
rol
shl
sbb
not
jmp
in
mov
lea
inc
and
jmp
pop
inc
or
cli
adc
rcr
adc
shl
shr
jmp
cli
ss
sbb
or
and
add
shl
dec
cmp
jne
call
xchg
adc
sub
cmp
jne
and
fs
shr
rcl
sub
mov
mov
jmp
pop
mov
cmp
out
aam
lret
fcmovb
ret
test
call
stos
imul
lds
mov
test
add
cltd
mov
into
shr
rcr
call
sbb
pop
pop
fistpll
adc
ret
adc
and
mov
sub
cmp
jne
scas
dec
xchg
incb
in
ret
xor
jmp
adc
inc
rol
test
shl
xor
call
sbb
jno
out
or
shr
call
addr16
fdiv
vmaskmovdqu
shl
ror
xor
mov
jmp
cmpsb
outsb
ds
testb
jecxz
shr
dec
or
add
mov
or
adc
add
sbb
shl
xor
jmp
cltd
ljmp
ficomps
or
and
sbb
test
rcr
cmp
jne
js
iret
shr
rcl
rcl
mov
rcl
jmp
jae
xchg
popf
shr
rcl
or
and
ret
jmp
lret
aam
pop
push
lcall
fwait
push
aad
cmp
jne
mov
and
ror
cmp
jne
and
mov
into
int3
mov
arpl
add
sti
out
inc
outsb
jecxz
add
sbb
jmp
pop
hlt
test
adc
shr
shr
call
xchg
ja
or
xor
shr
call
out
xor
lea
cmpw
je
add
jmp
add
mov
mulb
sub
ror
cmp
jne
mov
shl
shl
sub
cmp
jne
mov
mov
in
shr
call
pop
negb
clc
gs
lea
rcl
mov
and
or
jmp
sahf
sbb
int
adc
shl
shl
sar
jmp
out
out
popf
stos
or
sar
sbb
and
sbb
jmp
out
mov
add
mov
lock
rcr
call
ja
insl
ds
aaa
jne
adc
inc
or
mov
jmp
and
pop
ret
shlb
inc
adc
add
rcl
rcr
jmp
mov
rclb
shl
shl
adc
not
jmp
ja
add
enter
adc
xchg
decl
sbb
pop
pop
clc
add
add
mov
std
sar
shl
sbb
xor
not
adc
jmp
or
lea
xor
shr
ror
cmp
jne
and
or
add
ficoml
clc
jmp
icebp
push
inc
mov
sub
sub
rcr
jmp
jo
sti
jbe
rclb
jmp
sbb
jmp
inc
aaa
sub
loop
rcl
imul
ret
add
add
mov
and
ror
xor
rcl
rcl
jmp
cmpsb
fildl
shl
adc
cmp
jne
jmp
insl
xor
dec
mov
jmp
xorb
and
rcl
shl
cmp
sar
jmp
pop
adc
lea
inc
jne
test
sub
jmp
dec
mov
sub
rol
shl
not
neg
cmp
jne
cltd
dec
ds
enter
cld
add
rcr
add
sub
cmp
jne
mov
jle
fs
add
xor
shr
inc
mov
call
cmpl
call
sub
lea
sub
mov
call
mov
inc
rol
and
sbb
call
mov
flds
neg
mov
sar
test
call
mov
pop
pop
sub
adc
ror
adc
call
xchg
push
fcmovnb
testb
dec
inc
rol
sub
cmp
jne
mov
les
add
adc
rcl
not
cmp
jne
repnz
cwtl
cmp
lea
shl
test
shl
cmp
jne
xchg
mov
aam
rcr
sub
shl
cmp
not
dec
cmp
jne
pusha
jb
mov
jp
or
loop
call
aad
cli
cmpsb
lea
neg
mov
rol
sub
call
sub
aas
or
rcrb
lcall
xchg
shr
sub
xor
sar
shr
rol
call
cmpsl
push
popf
lret
fs
shl
shl
sbb
sub
call
cmp
and
add
dec
rcr
sar
dec
call
or
cmc
repnz
rcl
inc
adc
not
mov
call
push
movsl
lahf
mov
rol
sbb
cmp
and
call
push
lahf
cmp
fdiv
rol
out
sbb
inc
jne
inc
add
fs
ror
neg
inc
xor
call
lcall
or
test
sbb
cmp
jne
hlt
stos
xor
cli
xor
mov
and
jmp
jge
iret
push
lea
sar
ror
rcl
sbb
jmp
mov
shrl
add
rcr
dec
xor
or
jmp
jmp
outsb
adc
shll
shl
cmp
jne
dec
and
fiaddl
rep
mov
add
aas
out
or
leave
mov
sbb
cmp
jne
sbb
fs
shl
ror
ror
call
add
call
fs
rcr
rol
call
ds
lea
test
sbb
sbb
and
shl
jmp
popa
scas
stos
xor
ret
mov
mov
shl
jmp
test
fimuls
iret
jl
mov
sub
jmp
sbb
push
lea
adc
shl
dec
adc
jmp
dec
inc
pusha
popf
lea
test
sub
mov
sbb
shl
cmp
jne
adc
int
sbb
mov
or
add
shl
cmp
jne
add
jns
fs
push
shl
sbb
mov
adc
jmp
icebp
aam
sbb
rcr
inc
add
inc
sub
cmp
jne
aaa
inc
inc
pop
rcl
add
rcl
adc
cmp
jne
js
xchg
add
test
dec
cmp
jne
int3
sbb
out
xor
sub
mov
jmp
push
push
sub
sbb
ror
not
shr
add
shl
cmp
jne
mov
push
mov
add
testl
loopne
cli
call
test
adc
fs
ror
rcr
call
outsb
cmp
add
mov
rcl
int
or
sub
cmp
jne
es
push
mov
and
rol
and
cmp
jne
lock
or
call
inc
mov
lea
xor
shl
sbb
mov
cmp
jne
mov
fistl
and
cmp
jne
pop
lock
loop
dec
sub
jb
add
neg
call
inc
out
outsl
cmpsl
sub
shl
sub
call
outsb
fisttpl
fs
rcr
add
call
xlat
fwait
mov
sti
push
cld
outsb
insb
shl
ror
call
add
mov
ficompl
add
mov
rcl
test
cmp
jne
orl
popf
sbb
dec
xor
dec
cmp
jne
cld
cld
outsl
lea
testl
add
add
jmp
adc
test
decl
fdivrl
rcll
mov
shl
xor
test
call
jbe
xchg
cwtl
xlat
pusha
ror
not
rcl
or
adc
add
jmp
push
aam
sbb
neg
rol
jmp
adcl
lea
not
adc
cmp
jne
ret
lret
sbb
shr
inc
add
cmp
jne
test
lea
rol
and
and
call
shl
push
aaa
sar
rcr
shl
adc
inc
test
cmp
jne
dec
mov
lea
adc
mov
jmp
std
xchg
add
add
call
push
shll
test
shrb
shl
rcl
sub
call
xchg
lods
mov
ror
rcr
test
add
shr
call
sbb
shl
shr
sar
sbb
call
xchg
sbb
add
rol
jecxz
sar
shl
call
out
push
fistps
add
in
loop
or
jmp
out
aas
mov
vpsubsb
sti
decl
call
ret
and
ror
rcl
rcr
call
fisttps
sub
adc
inc
rclb
pop
lods
push
add
pminsw
fs
mov
neg
adc
call
pop
adc
ret
and
ror
cmp
jne
mov
outsl
push
push
sbb
sbb
add
ror
sar
call
test
test
rol
call
les
mov
sub
icebp
ja
xchg
jne
movsb
sbb
sub
rcr
rcr
jmp
push
inc
or
and
shl
shl
rol
jmp
inc
dec
imull
jecxz
and
inc
rol
add
shl
jmp
lock
add
cmp
sub
add
call
pop
loope
daa
jo
enter
decb
or
rcr
shl
call
sub
and
not
xor
jmp
mov
int3
adc
rcl
sub
sar
cmp
call
fistpl
loop
add
xor
jmp
jecxz
sbb
push
and
jmp
arpl
mov
sbb
shl
jmp
enter
push
std
inc
rcr
shl
sbb
rcl
rcl
call
jbe
jo
dec
mov
movl
incl
dec
lea
shl
shr
shr
sar
jmp
cmp
flds
xchg
rol
add
sub
xor
xor
cmp
jne
lcall
fisttpl
pop
or
mov
call
jl
cmc
ror
shr
rcl
ror
call
in
xchg
out
mov
mov
call
xchg
enter
lds
pop
xor
adc
jmp
icebp
dec
push
stos
sar
outsb
