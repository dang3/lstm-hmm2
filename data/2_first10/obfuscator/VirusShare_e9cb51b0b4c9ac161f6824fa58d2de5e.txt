aad
inc
adc
jle
jp
xor
mov
loopne
int3
repnz
pop
xchg
jp
pop
movsl
mov
inc
push
fistps
adc
adc
xlat
sbb
dec
ljmp
in
loope
test
leave
movsl
or
frstor
loop
movsl
jnp
and
stos
push
pop
clc
fadd
popf
mov
sub
adc
add
and
fwait
ss
cmpsl
out
dec
out
or
adc
pusha
imul
pop
inc
add
pop
fnstenv
lods
repz
add
cli
mov
sub
nop
add
ljmp
jno
repnz
cmp
push
push
pop
cmc
rorl
loopne
clc
movsb
aas
rcll
xor
and
cltd
sub
cmpsb
aad
out
mov
or
daa
adc
push
pusha
daa
in
ret
pop
lret
dec
gs
inc
repz
adc
pop
inc
cmp
xor
call
mov
bt
sub
mov
mov
rep
movsbl
movsbw
mov
mov
movw
pushf
movb
lea
jmp
test
push
cmc
or
pusha
lea
je
push
cmp
lea
pushf
movw
pushf
call
push
cmpsb
mov
scas
jp
filds
push
ss
pop
inc
add
jle
inc
jno
scas
push
enter
subl
outsb
inc
jp
lcall
test
or
jbe
and
scas
add
iret
mov
mov
adc
flds
adc
je
in
cld
lock
cmp
ss
sar
dec
ficomps
enter
arpl
arpl
add
pop
jo
dec
xchg
test
hlt
iret
shl
lds
sub
test
jl
rclb
jbe
push
add
lahf
outsl
or
lds
add
add
pop
add
je
adc
cmp
add
pusha
jmp
test
test
add
push
lea
jmp
stc
ror
pushf
lea
call
cmp
push
cmp
movw
call
jmp
seta
jmp
mov
cmpsb
fisubrl
inc
sub
xchg
sub
adc
add
fs
lock
xor
shlb
in
xchg
jb
jmp
loope
sti
or
pop
push
mov
shll
cwtl
xchg
insl
lret
rclb
cwtl
gs
xchg
pop
dec
xchg
gs
mov
adc
repnz
je
das
lods
fistpll
or
sbb
pop
cld
add
xchg
lret
loopne
mov
push
shrl
add
pop
cmp
pop
sbb
mov
rolb
out
mov
aas
jbe
xlat
mov
cltd
rorl
inc
or
inc
lock
xor
and
pop
adc
mov
js
insl
aaa
push
push
outsb
cmpsb
fwait
mov
ret
cmp
xor
adc
lea
not
rol
lahf
adc
xlat
inc
pop
cmp
xlat
jle
mov
lods
xchg
pop
mov
xchg
in
leave
mov
lods
lea
imul
out
fsubrl
popf
mov
sub
mov
sub
jmp
pusha
mov
cli
cwtl
add
or
and
jmp
sbb
pop
mov
mov
add
or
shll
or
fprem1
in
adc
mov
sbb
or
outsb
ficompl
fidivrl
cli
mov
sti
subb
lahf
dec
sbb
sub
enter
inc
push
mov
xor
push
movsb
mov
subb
xchg
shll
rol
xor
popa
divl
orl
cmp
push
je
roll
jae
xlat
mov
mov
lea
jae
pushf
movw
lea
jne
push
stos
pushf
lea
jmp
sub
test
pushl
popl
cmp
pushf
cmc
cmp
pushf
lea
ja
sub
inc
sar
sub
jmp
push
lea
jae
sbb
bsf
shld
shr
mov
rol
bts
mov
shl
bsr
mov
pusha
xor
call
test
bswap
bts
test
mov
pushf
cmpb
pushf
lea
jne
daa
aaa
jmp
dec
les
adc
sub
jmp
addr16
push
into
push
lret
data16
adc
or
sub
jge
or
mov
push
lcall
jmp
fisttps
sub
mov
ja
cwtl
fadds
pop
inc
test
add
cmp
icebp
cmpsl
cmp
cmpsl
testb
pop
test
push
or
testl
jmp
dec
out
add
ljmp
repz
push
jno
push
push
rorl
aas
pop
out
push
adc
pop
aad
push
mov
jmp
arpl
mov
lods
in
popf
rorb
inc
mov
popa
test
push
lea
je
setno
mov
ror
shr
stc
add
sbb
shl
lea
mov
clc
test
pusha
lea
je
bsf
shl
rcl
jmp
xchg
call
sub
rclb
gs
sub
std
inc
and
imul
mov
adc
imul
jmp
push
add
jb
mov
or
and
push
cmpsl
scas
mov
mov
cmpsb
in
xchg
ret
jecxz
into
aas
dec
sbb
inc
xlat
dec
cmpsb
addr16
mov
std
scas
fnsave
lret
mov
and
inc
aam
movsb
sbb
and
xchg
push
push
adc
adc
das
call
xlat
sub
xlat
mov
sbb
or
mov
ret
shrb
pushf
mov
fcoml
adc
movsb
dec
inc
add
jmp
sbb
sbb
orpd
out
xor
fadds
inc
xchg
xor
mov
inc
insl
aas
pop
clc
inc
adc
lods
cld
add
xor
mov
add
mov
rcll
add
inc
mov
and
mov
jb
xlat
mov
out
mov
aad
lret
sarb
add
rolb
inc
dec
mov
mov
loopne
mov
mov
stc
sahf
xlat
out
sahf
sti
out
fwait
sub
jnp
mov
call
in
cld
dec
or
pop
repz
cmp
cmpb
sbb
dec
mov
movb
call
lea
call
call
call
pop
cmp
push
ds
cli
push
inc
loop
jb
lcall
push
mov
inc
fisubs
mov
adc
or
hlt
shll
fiaddl
gs
stos
addr16
popf
cmp
mov
cs
shlb
fsubl
xor
xor
and
cmpsb
push
jmp
icebp
inc
jbe
daa
lods
or
out
sbb
shr
fwait
iret
pop
pop
cli
inc
loope
fsubr
jmp
cmp
cmp
lods
adc
xor
mov
inc
mov
sub
sar
pusha
xor
lea
setle
jae
xchg
lods
mov
not
dec
setne
not
dec
inc
neg
not
adc
inc
neg
not
ror
push
call
neg
clc
call
lea
ja
sbb
add
sub
btc
not
clc
add
sub
mov
inc
not
xor
mov
cmp
call
movl
pushl
movw
push
lea
jmp
ror
not
pushf
movb
jmp
mov
not
jmp
pushl
popl
pushf
pusha
pushl
ret
push
push
mov
pushf
lods
stc
jmp
insl
pop
sbb
sub
add
push
mov
add
loopne
jge
inc
out
jp
mov
jecxz
inc
pop
test
inc
adcl
xchg
stos
pop
out
pop
fcmove
dec
lret
mov
lahf
lock
mov
in
js
pop
pop
adc
hlt
jge
roll
jns
push
push
push
push
lods
int3
mov
jge
mov
negl
repz
and
pop
or
mov
cld
mov
mov
sub
movl
push
mov
pushf
movl
pusha
push
mov
lea
jmp
push
jmp
hlt
jg
xchg
sahf
sbb
jnp
jno
sbb
push
les
pop
pop
cmp
add
jbe
cmp
mov
push
mov
divl
movsb
mov
mov
cwtl
loopne
daa
mov
and
xchg
xor
cmpsl
cmp
xor
fistl
mov
adc
pop
sub
sub
sahf
scas
lret
rclb
or
jmp
cmc
imul
cmc
add
pushf
lea
jmp
pushf
lea
call
pusha
lea
jne
push
mov
push
pushf
pusha
lea
jmp
pusha
mov
pushl
lea
jae
jle
push
xor
pushl
pushf
pusha
pushf
lea
call
jmp
mov
push
lea
call
clc
call
mov
jmp
mov
not
sbb
pushl
mov
pop
bt
bts
mov
cmp
bt
test
call
sti
cwtl
test
fisttpll
or
add
cmpl
sbb
or
clc
fidivrs
dec
inc
loope
pop
xor
popf
cwtl
cmc
add
int
jl
outsl
and
repnz
in
push
leave
icebp
and
pusha
xor
cmp
shl
sub
fadd
pop
inc
pusha
sub
insb
lock
pop
mov
bound
dec
lcall
imul
push
xlat
sarl
mov
adc
test
mov
not
call
cltd
rorb
or
jb
stos
cmp
push
xchg
jp
push
push
orb
aaa
sbb
xorb
imull
xchg
enter
jnp
mov
es
ja
xor
lds
aam
xchg
sti
mov
lret
outsb
daa
sahf
fldt
arpl
push
setbe
lea
jmp
bt
call
jmp
call
lea
jae
test
cmp
jmp
test
pusha
movl
cmp
call
sub
aas
bswap
not
test
mov
pusha
sub
pushf
add
shl
rcr
mov
bt
test
movb
push
call
movzbl
shr
dec
mov
jmp
jns
pop
jbe
dec
mov
mov
fists
ja
adc
and
cltd
cmp
xor
shr
addl
sar
inc
jns
push
dec
cmp
mov
enter
imul
stos
pushf
sbb
ljmp
test
fucomip
mov
dec
adc
xchg
sti
mov
lcall
add
adc
add
jbe
sarl
adc
inc
mov
imul
inc
cwtl
mov
dec
add
inc
ret
jbe
dec
mov
lods
push
pushf
movl
pushf
movl
pusha
pusha
lea
jmp
pushl
pushf
mov
lea
ja
jmp
cmp
call
pushf
jmp
lds
cwtl
sub
outsl
repz
jg
imul
lret
lahf
and
inc
add
xchg
mov
shll
cmp
dec
push
push
push
dec
add
fstpt
and
mov
or
mov
not
clc
btr
shld
mov
cmc
movw
cmp
pusha
jmp
jmp
pusha
stos
push
pushf
lea
jmp
loopne
sub
inc
add
mov
loope
icebp
sbb
inc
fucomi
aaa
adc
cmp
movsl
add
inc
adc
jo
dec
iret
mov
xchg
insl
cmp
add
cs
and
push
mov
int
shll
xlat
les
testl
icebp
mov
shl
stc
neg
mov
clc
repnz
jmp
lea
jne
rcr
mov
movzbl
sub
mov
or
stc
mov
cmc
clc
sub
pusha
bt
call
movl
pusha
mov
pushf
lea
jmp
push
lea
ja
pusha
call
movb
pushf
pushl
not
call
lea
call
call
stos
sub
or
outsl
sahf
in
pop
movsl
xor
in
pop
adc
cltd
sub
add
pop
dec
lods
cmp
xchg
iret
pop
push
mov
jns
je
jo
in
call
sar
rorl
jmp
shlb
and
dec
test
ret
loop
movsl
xor
mov
add
sbb
jbe
adc
and
sahf
insb
add
mov
nop
xchg
clc
cltd
test
pop
movsb
idivb
lods
and
lret
add
jb
repz
fisubs
dec
ljmp
push
test
cwtl
and
clc
mov
sub
adc
stc
add
ud0
out
lcall
mov
jge
cmp
push
fsubs
mov
mov
push
leave
cmp
outsb
and
mov
dec
pushf
clc
sub
lea
jmp
gs
xor
or
xchg
shr
ja
mov
repz
rep
xorl
push
push
sbb
movsl
xorb
jg
push
les
jo
jnp
jo
mov
lods
cmpsb
inc
shll
dec
jno
cmpsl
push
and
mov
pop
mov
jl
mov
mov
push
add
dec
fcomi
stos
mov
push
jae
mov
mov
mov
mov
sbb
dec
adc
add
mov
mov
fldl
xlat
inc
rclb
hlt
dec
lea
mov
inc
fisttpl
jle
mov
cmp
xor
jecxz
lahf
fsubrl
sub
lods
loopne
in
in
outsb
cmp
shll
das
ret
jbe
lea
ss
mov
test
fs
lret
inc
cwtl
ret
jle
push
cmp
mov
push
fs
add
xchg
sti
or
add
jp
cmpsb
adc
sub
push
inc
lret
pop
addr16
mov
stos
scas
and
movl
pop
out
rcl
jl
scas
retw
sbb
cmp
cltd
ljmp
push
xor
cs
fstpl
pop
sub
cltd
push
insb
ja
sbb
cld
fldlg2
icebp
push
cli
dec
jmp
mov
pop
push
jbe
mov
test
movsb
jmp
jb
adc
inc
dec
ljmp
mov
ss
add
movsl
std
div
or
add
pop
mov
decl
sti
jmp
cltd
sbb
mov
cmp
or
insb
or
jno,pt
cmp
adc
or
nop
add
and
cmp
test
cmp
fildl
call
enter
lea
je
cmc
cmc
jmp
bt
cmp
or
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
leave
pusha
pushf
lea
call
call
movl
pusha
mov
pushl
popl
pushf
push
push
mov
pushl
ret
add
add
adc
add
add
add
add
add
add
push
repnz
push
repnz
push
repnz
add
add
add
pop
repnz
jge
push
mov
pop
sub
mov
or
bound
sti
and
insl
pusha
dec
lcall
sbbb
lods
cs
adc
cmp
into
or
xor
je
lods
fcmovne
add
les
rep
add
adc
imul
idiv
sub
ljmp
int
std
cmp
and
jmp
jg
cmp
sbbb
mov
fisubs
pusha
mov
mov
mov
jo
mov
outsb
mov
jle
mov
orl
imul
mov
xorb
jge
jo
and
or
test
rcrb
incl
inc
add
lods
adc
js
sar
rcrl
pop
ds
mov
cltd
mov
fdivrl
ss
mov
jle
cmp
test
sbb
jno
jns
cmc
push
xchg
jecxz
shll
push
test
sbb
jl
add
and
je
inc
mov
or
fstpt
inc
jg
sbb
movsl
das
fwait
mov
mov
inc
add
and
into
movsb
xorl
in
es
and
pop
fdivp
daa
dec
cmp
xor
loope
ret
int
mov
das
insb
jmp
pop
sbb
pop
xor
hlt
aaa
and
fistpl
and
icebp
sahf
and
xor
jl
roll
bound
inc
pop
ficoms
fs
lods
add
std
xchg
pop
and
aam
pop
cs
dec
pop
outsl
push
les
jb
outsl
jne
or
inc
or
inc
out
inc
hlt
mov
adc
int3
ja
lcall
and
out
test
dec
xchg
imul
pushf
sbb
sbb
jns
shl
dec
inc
jbe
insb
add
pop
ror
out
inc
dec
ss
add
roll
adc
xor
pop
lret
push
mov
movl
inc
sub
lahf
push
xchg
ss
jmp
xchg
inc
orb
rcr
jns
sbb
ljmp
mov
int
arpl
mov
cli
and
pop
mov
inc
aam
jmp
ljmp
inc
jecxz
loope
scas
dec
je
mov
push
xchg
mov
dec
fmull
mov
nop
mov
sub
sub
or
in
cmp
mov
mov
scas
jge
enter
test
out
jp
out
sub
mov
test
jl
xor
mov
jp
aaa
pop
xlat
in
mov
rcl
sub
in
xchg
iret
mov
std
push
pop
pop
xchg
lahf
xchg
addl
test
xchg
ds
jg
dec
jne
mov
daa
push
sbb
je
bswap
xchg
xchg
mov
adc
dec
or
cmp
adc
shll
in
hlt
adc
and
fiaddl
mov
sub
sbb
xchg
test
andb
pop
dec
movsb
pusha
lret
jae
addl
fiadds
cmp
sbb
movb
xchg
enter
adc
mov
cld
jg
ss
sbb
inc
movsl
inc
adc
mov
movsb
js
nop
dec
inc
subl
cs
mov
jne
xchg
push
push
dec
addr16
jmp
cwtl
out
fiaddl
insb
or
push
add
out
mov
fdivl
arpl
and
and
imull
and
loope
shr
loop
pop
shlb
jp
pop
out
fnstsw
jne
cmpsl
lcall
sub
loope
iret
cmp
popa
xor
xchg
sbb
and
sub
or
dec
inc
rcll
addr16
call
push
pop
or
in
popl
pop
fistpl
mov
call
inc
jno
cmp
lcall
ds
dec
aad
stos
inc
sub
into
mov
cmp
out
out
or
cmp
mov
dec
aam
ljmp
dec
outsl
imul
jb
and
shrl
enter
mov
cmp
cmc
or
int3
subl
jb
adc
jns
mov
push
adc
dec
pop
pop
shlb
stos
insl
aaa
out
xchg
mov
and
add
lods
js
inc
mov
fimuls
dec
stos
mov
mov
daa
inc
cli
cmpb
sub
inc
sub
xchg
pop
push
testb
movl
jnp
sti
aas
pop
cmp
test
mov
outsl
jmp
js
mov
sbb
jp
xchg
stc
aas
or
jle
gs
dec
sahf
adc
xchg
mov
or
in
clc
outsl
push
shlb
push
out
inc
mov
mov
in
sub
negb
out
ljmp
sbb
mov
or
les
push
ret
clc
xchg
sbb
or
movsl
and
jno
dec
sub
imul
cmp
jns
ja
jb
sti
jne
add
fildl
add
pop
shr
pop
mov
ficomps
repz
in
lret
push
arpl
cmpsb
stc
mov
jl
orb
dec
repnz
mov
and
mov
repz
insb
sti
jmp
bound
das
inc
xor
mov
jo
shlb
sub
push
sub
das
cmp
inc
loopne
lock
mov
and
repnz
jmp
lret
mov
ret
inc
sbb
cld
jg
mov
push
sbb
mov
mov
rcll
mov
mov
je
mov
out
lret
pop
sub
inc
and
scas
int
mov
cmp
jne
xchg
movsb
lods
cmc
or
xchg
mov
lods
jno
xchg
jns
jecxz
ret
int
dec
add
dec
or
test
cmp
call
push
mov
push
xor
out
sub
or
test
out
cmp
repz
sbb
jecxz
pop
and
push
in
fwait
bound
loop
and
andb
shl
xlat
stos
loope
xor
pop
sbb
mov
or
mov
cmc
das
cmp
mov
inc
ffreep
dec
fldt
mov
cmp
scas
fwait
out
pop
inc
into
mov
or
int
imul
in
and
push
movsl
out
icebp
mov
or
mov
push
jg
mov
or
inc
pusha
mov
ss
fsubp
test
xchg
push
idivl
andl
sbb
dec
mov
call
adc
testl
add
cld
pusha
call
mov
mov
pop
aas
aas
test
and
add
sahf
or
in
pop
adc
movsb
ja
lods
sar
das
loop
hlt
inc
cmp
pop
cmp
sub
xchg
push
lea
cs
mov
faddl
out
sbb
stc
cmp
xchg
and
dec
xorb
xor
arpl
cmc
xor
js
xor
pusha
add
jl
je
insl
stc
ss
fstp
sub
pop
movsb
scas
ds
scas
pop
mov
orb
cli
aaa
mov
mov
push
mov
inc
and
mov
or
cmp
stc
insl
js
xor
adc
ljmp
mov
subl
mov
ds
and
push
jl
lods
push
or
fstl
adc
pop
bound
and
add
push
cltd
loopne
fdivrl
repz
mov
call
mov
sbb
negl
xchg
sahf
cltd
xchg
fiadds
bound
sarb
or
rcll
pop
pop
dec
xchg
or
fs
xchg
cmp
sub
call
jle
dec
mov
inc
cld
repz
push
mov
mov
rorl
pop
pusha
rcll
add
xchg
sar
jge
and
dec
push
and
push
pop
fisttps
movsb
rcll
adc
mov
or
dec
out
js
mov
jge
and
mov
movsl
out
leave
mov
test
jmp
adc
xchg
rcll
pop
inc
add
orb
push
mov
mov
xlat
push
jmp
sub
add
mov
xlat
sub
test
adcb
adc
jno
call
repnz
add
dec
xor
scas
repnz
or
and
nop
jnp
pop
pop
mul
leave
repnz
lods
push
adc
jns
in
leave
fdivrl
mov
xor
cs
int3
std
mov
js
push
popa
push
clc
insl
jb
in
movsb
pop
push
das
cltd
and
sub
xor
loop
in
call
lcall
or
adc
xchg
ficomps
cmp
fiadds
stos
scas
jmp
sar
imul
sub
ljmp
jle
jg
pop
or
adcl
js
jmp
insl
and
loop
in
test
sbb
push
push
inc
inc
aad
and
lcall
lea
ss
call
jp
fldcw
xor
sti
fldl
cltd
popf
xor
push
or
out
and
ja
or
in
inc
xlat
repz
xor
das
mov
mov
cltd
cmp
or
jge
mov
iret
mov
test
mov
jecxz
mov
stos
roll
adc
jmp
pop
mov
dec
pop
sbb
cmp
jmp
dec
lock
ds
idivb
mov
cs
sbb
aam
xchg
ss
shlb
shrb
sbb
lea
sahf
popa
das
mov
int3
test
ljmp
ret
mov
sbb
and
and
in
outsb
out
lret
push
mov
push
aas
pop
fimuls
test
daa
leave
mov
jecxz
pop
es
inc
lret
mov
jb
jae
js
pusha
push
xor
sub
pop
pop
adc
jbe
clc
daa
std
jns
mov
push
add
jmp
cmc
icebp
data16
icebp
or
inc
dec
jo
cwtl
imul
in
push
jmp
out
mov
jmp
int
xchg
mov
adc
adc
cwtl
xchg
outsl
fisttps
lock
add
mov
ffree
in
dec
jge
or
jecxz
rol
and
mov
mov
repz
push
ficoms
ss
mov
jb
cmpsl
lret
and
lea
sbb
ja
lret
add
pusha
call
call
bswap
lea
lea
lea
jmp
shld
push
movzbl
rcr
neg
bsr
mov
pusha
movzbw
movb
shr
mov
setp
or
not
mov
sub
rcr
mov
adc
mov
bswap
mov
bts
mov
test
pusha
mov
pushf
movzbw
mov
cmp
stc
push
or
push
call
push
rep
bswap
pushf
pop
mov
pushl
pushf
push
lea
jmp
pushl
lea
call
pushf
adc
pusha
lea
jns
jae
push
call
mov
cmp
scas
sub
cmpsb
cs
jb
push
mulb
dec
push
aaa
into
je
push
mov
popf
adc
mov
pushf
test
test
and
inc
cs
into
mov
add
clc
bswap
into
pop
push
outsb
fiaddl
loop
mov
mov
loopne
mov
sbb
jns
sti
fsubp
rorb
fadds
ficoms
rclb
daa
dec
mov
xor
xor
cmp
lea
je
jae
movzbw
shrd
shld
btr
mov
pushf
adc
mov
shl
mov
pusha
stc
pusha
sub
test
repnz
jmp
xor
repz
xchg
adc
sub
inc
movsl
sub
loop
mov
ds
stc
popa
cmpsb
cwtl
xchg
mov
pop
insl
pushf
dec
pop
call
es
mov
mov
mov
stos
cltd
dec
push
cmp
int
jb
cli
push
arpl
mov
je
xor
dec
test
loope
out
push
in
mov
pop
or
push
cmpsl
adc
stos
loop
ss
pop
into
inc
mov
jge
test
icebp
js
cwtl
sarb
xor
sub
cmc
aam
mov
lods
mov
sbb
inc
or
pushf
movl
pusha
pushf
movl
movb
push
push
mov
lea
jmp
jmp
lea
je
pusha
push
mov
call
lea
ja
pushf
push
adc
lea
push
movb
pushl
ret
pop
gs
xchg
outsb
decb
movsb
dec
or
or
scas
es
cmc
or
das
push
dec
fwait
adc
xor
sbb
or
sub
xchg
outsl
push
dec
fwait
je
add
push
outsl
or
xchg
rclb
scas
aaa
xchg
push
push
out
dec
or
pop
push
jne
or
xchg
sbb
dec
xor
maskmovq
testl
imul
das
gs
or
or
test
ret
pop
movsl
push
testl
inc
insb
das
push
ljmp
imul
adc
test
daa
push
stos
pop
jg
dec
xchg
bound
scas
or
xchg
mov
je
decl
dec
jmp
pop
sbb
jne
or
or
xchg
xlat
adc
xchg
add
dec
xor
inc
jmp
push
dec
xchg
rclb
scas
push
jne
push
iret
or
inc
cmpl
sbb
jns
cmp
movsl
sub
ja
dec
jmp
mov
hlt
adc
or
fwait
xchg
push
mov
xchg
push
aaa
or
jle
xchg
xor
test
into
pushf
xor
sbb
iret
or
jns
mov
cmc
adc
dec
xchg
pop
sub
mov
dec
or
mov
pop
adc
mov
xor
dec
ret
push
movsb
cmp
and
adc
or
int
stos
push
pop
or
xchg
dec
cltd
jno
pop
gs
dec
or
xchg
into
mov
and
push
push
push
push
dec
orl
or
and
dec
xchg
xchg
aad
mov
and
das
cmovle
pop
xchg
inc
or
test
adc
mov
pop
or
adc
mov
push
sub
dec
or
xchg
pop
aas
out
and
dec
fwait
cmp
or
call
or
dec
xchg
jo
push
push
call
jmp
negb
lcall
aaa
divl
xor
outsl
sti
push
aas
push
sub
ror
and
pop
outsb
or
and
pop
mov
es
mov
mov
leave
or
sbb
rcll
sub
pop
pop
aas
mov
jmp
stc
stc
or
cli
jmp
and
dec
sub
xor
mov
aam
in
fwait
add
jecxz
xchg
gs
imul
insb
pop
and
sarl
cltd
cmpsl
mov
inc
mov
arpl
add
adc
xor
pop
dec
outsb
das
or
icebp
cmpsl
adcb
inc
pop
aas
rcrb
push
add
sub
push
or
and
mov
outsb
testl
bound
lea
je
bt
pusha
clc
mov
or
pusha
mov
mov
pushf
lea
je
xor
and
xadd
sub
xor
and
das
mov
bsf
mov
bsr
add
add
shr
pusha
mov
mov
push
cmc
or
pusha
lea
je
shrd
add
shl
sub
xor
shr
not
bts
sar
bts
mov
and
shl
add
jmp
aad
fmulp
jmp
sti
popa
dec
xorl
cmp
cmp
jnp
dec
add
sbb
into
stos
int
aaa
mull
aad
cmpsl
or
jo
sub
mov
mov
inc
adc
or
bound
dec
or
mov
ss
sbb
out
jae
xlat
fstpt
cltd
mov
movl
mov
mov
movb
pushl
ret
jl
jl
test
sti
sub
fsubrl
inc
cld
insb
pop
dec
sub
ljmp
lods
es
dec
fdivp
popf
sbb
sub
sbb
cmp
movsl
rdmsr
popf
xor
sbb
faddp
mov
dec
mov
mov
fisubrl
push
cmp
clc
in
scas
mov
loop
bound
push
pop
push
out
std
mov
push
es
dec
mov
add
jecxz
sbb
repnz
inc
pushf
cmp
not
clc
push
stc
clc
neg
stc
stc
ror
push
lea
call
pushf
pusha
bt
movb
cmp
pushf
lea
jae
call
pushl
lea
je
clc
pusha
test
pusha
cmp
lea
jns
pusha
pusha
lea
je
cmp
cmp
pusha
pusha
pushf
lea
je
pushf
push
lea
jmp
call
cmp
jmp
push
adc
movb
lea
jae
pushf
movb
lea
jne
jmp
jne
ljmpw
fxch
out
cli
lcall
mov
ds
idiv
pop
inc
mov
filds
push
mov
scas
mov
rcll
fistpl
loop
xor
inc
fs
lods
xor
mov
mov
adc
dec
push
cmp
aad
xor
mov
movsl
inc
mov
test
adc
inc
cwtl
fsubr
stos
mov
mov
pop
lods
jp
mov
sub
vmovaps
nop
lea
or
xchg
add
neg
add
ror
inc
and
mov
stc
push
cmp
push
lea
jb
clc
stc
stc
cmp
pushf
mov
lea
ja
cmp
add
cmc
jmp
push
lea
jne
lea
push
setne
movb
push
pushf
pop
mov
cwtl
movzbw
movsbw
lea
call
adc
daa
gs
lret
xchg
loop
into
push
out
mov
cmp
test
es
stos
hlt
ljmp
xchg
rcr
inc
adc
cli
scas
and
add
enter
je
stc
cltd
clc
push
out
repz
iret
stos
out
lret
xlat
fnstsw
sahf
imul
popa
mov
ja
lock
mov
bswap
call
lcall
test
andb
xchg
lds
push
sbb
adc
lcall
shlb
mov
outsl
dec
repz
mov
and
ja
pop
mov
sti
enter
jmp
test
xchg
xlat
daa
je
mov
xor
lcall
mov
sbb
mov
fisubl
pop
push
add
mov
mov
pop
jmp
shrb
fdivrl
scas
pusha
pushl
popl
not
mov
mov
movsbw
movzbw
movl
push
lea
jbe
pusha
pop
lea
call
dec
in
test
lret
mov
loop
dec
fimull
lcall
push
jmp
out
mov
stos
filds
insl
sbbb
jge
xor
add
out
xchg
add
sub
fwait
lea
jne
dec
btc
sub
cmp
rcl
jmp
jmp
stc
stc
pushl
not
jmp
mov
mov
lea
je
neg
shl
add
pushf
pop
ror
push
mov
movw
add
jmp
call
jno
sbb
fisubl
cmc
aaa
adc
push
testb
pop
dec
add
into
pop
mov
push
mov
loope
and
adc
pop
stos
rclb
sahf
mov
pushf
cmpsl
mov
mov
leave
addr16
mov
jge
into
cmpl
mov
fcomip
repz
or
mov
out
iret
je
add
dec
sub
or
inc
out
jle
imulb
daa
mov
or
add
nop
and
enter
cli
mov
mov
ds
mov
mov
mov
push
mov
cld
mov
jb
cwtl
fildl
dec
sub
xor
pop
mov
movl
jmp
inc
je
loopne
inc
pusha
cmp
lods
pop
dec
shlb
xor
pushf
mov
pop
daa
jecxz
mov
xor
cli
fwait
ljmp
xor
iret
scas
dec
std
push
rclb
outsb
dec
mov
leave
cltd
sbb
int3
mov
lods
mov
xlat
loopne
pop
mov
mov
fsub
dec
add
sahf
xor
icebp
insl
aaa
sbb
imull
mov
xor
jnp
sbbl
and
popa
dec
sti
inc
inc
filds
testl
cmp
xlat
loope
mov
movd
mov
jg
sbb
lahf
repz
ret
add
fistpll
outsl
mov
ret
mov
cmpb
mov
in
rorl
xor
cmp
xor
and
in
test
fiaddl
adc
call
jg
in
cld
xchg
inc
jmp
scas
out
mov
mov
mov
mov
jmp
mov
divb
push
inc
popf
add
clc
nop
icebp
mov
mov
jns
fisttpll
add
addr16
stos
into
shlb
xchg
cli
out
arpl
mov
aaa
adc
int3
les
xchg
adc
movsl
dec
cltd
pop
xchg
dec
mov
cwtl
mov
cmp
adc
fst
mov
std
pop
ss
xchg
and
stc
mov
dec
jl
mov
out
subl
aad
add
mov
or
add
lea
cmp
or
sbb
divl
test
jge
aaa
jnp
mov
and
aas
clc
cmpsl
mov
xchg
divb
xor
lcall
pusha
jmp
stc
pushf
sub
lea
xchg
pop
pusha
jmp
mov
inc
pop
add
in
int3
cmp
mov
movsb
loopne
inc
clc
push
enter
adc
sbb
in
imull
dec
sub
xor
aaa
je
jl
mov
sahf
pushf
mov
loopne
ret
cmp
rcrb
jno
jne
stc
pop
popf
mov
shlb
mov
jbe
int3
mov
insb
rolb
sub
cmp
sbb
in
scas
lock
jecxz
aaa
jnp
jae
mov
loop
adc
frstor
sbb
pop
das
push
adc
dec
fdivs
dec
sub
mov
pop
adc
inc
pushf
pushf
pusha
cmc
jmp
push
movb
adc
push
pusha
jmp
movb
mov
mov
lea
call
call
pushl
popl
test
movb
cmp
pusha
pushf
mov
lea
ja
add
and
stc
sub
rol
add
ror
call
jmp
cmp
cmp
sub
pusha
rep
bswap
movzbw
mov
mov
lea
jmp
pusha
jmp
call
jmp
ja
dec
call
lea
ret
mov
mov
pop
xchg
icebp
pop
lret
imul
mov
mov
cmpsb
add
add
and
loopne
out
mov
sub
mov
pop
jle
mov
ficomps
int
mov
mov
dec
add
inc
sbb
sahf
pop
int
inc
mov
add
je
int
ljmp
mov
jecxz
push
adcl
gs
bound
xchg
xchg
xchg
iret
ret
mov
cmp
cmp
jecxz
add
xor
pusha
dec
mov
and
jb
sbb
or
rcl
add
cmc
btc
mov
stc
clc
shr
jmp
inc
mov
inc
pushf
inc
adc
sub
xchg
dec
bts
btr
mov
clc
mov
pusha
xchg
btr
movsbw
mov
test
sub
jmp
movb
lea
je
push
clc
push
pusha
add
cmp
bt
bt
bt
cmp
jmp
call
dec
int3
dec
int3
in
and
add
mov
jb
push
repnz
dec
decb
cmpsb
xor
jne
inc
xor
sbb
cmp
pushf
movsb
imul
movsb
push
lods
adc
test
adc
or
sub
stos
imul
sub
sub
movsb
xor
in
hlt
arpl
incl
cwtl
cmp
enter
fnstenv
cwtl
gs
inc
xchg
loopne
sahf
mov
out
mov
or
pop
cmp
stos
arpl
mov
hlt
mov
and
ljmp
dec
mov
xchg
fwait
lds
or
ljmp
cmpl
push
arpl
add
adc
and
les
test
push
mov
jne
xchg
into
xchg
sub
add
dec
cs
rclb
punpckhdq
or
add
lcall
repz
xchg
mov
or
jg
mov
pop
xlat
outsl
mov
push
je
and
call
sub
leave
mov
orl
add
lock
lahf
ret
fildl
push
inc
pop
jbe
mov
sub
mov
cmpsl
test
jmp
mov
push
inc
add
dec
test
cli
fistpll
jmp
adc
and
add
ds
sub
pusha
fnstenv
cmp
pop
pop
std
ja
jecxz
push
fisubrs
out
xchg
mov
push
fisubrs
fcmove
std
aam
push
jmp
xor
fidivs
jns
lret
mov
sub
les
int3
jl
imul
negl
mov
mov
mov
and
je
pop
scas
mov
scas
adc
adc
std
fs
add
mov
das
mov
add
rolb
mov
fldl
call
jbe,pt
mov
in
icebp
test
jmp
out
lret
inc
adc
add
sbb
mov
imul
das
movsl
xchg
imul
jge
testl
scas
nop
in
add
lcall
sar
or
xor
cmpb
push
cmp
stos
cmp
loopne
ret
jnp
dec
sbb
cmpsl
cmpsl
xchg
jnp
mov
pop
pusha
push
pusha
inc
lea
push
lea
call
pushf
push
adc
mov
jmp
jmp
mov
lea
jb
test
cmp
push
pushf
jmp
call
lea
jle
jae
test
call
pushl
inc
call
push
jmp
lea
ja
pushf
call
ror
mov
cmc
pushf
push
stc
xchg
dec
mov
mov
neg
mov
push
push
sub
jmp
lea
jns
dec
pushf
bt
shl
pusha
call
mov
lea
jb
cmc
jmp
call
jmp
cmp
sub
mov
adc
je
mov
clc
dec
or
jl
dec
jmp
sbb
add
scas
sti
xor
mov
xchg
scas
iret
aas
aaa
jnp
jp
mov
jmp
dec
pushf
jno
inc
add
idiv
add
les
imul
xlat
call
aad
insb
and
movw
pushl
ret
jne
jmp
pushl
cmp
push
call
mov
pop
pushf
pushf
push
lea
jmp
lea
call
call
hlt
lods
call
xor
mov
mov
xchg
lea
dec
ret
mov
fstp
sub
jbe
or
push
add
clc
lds
jmp
fldt
add
xor
add
jo
nop
add
add
test
int3
mov
mov
mov
mov
out
mov
pop
mov
sub
pusha
pop
je
sub
pop
stos
scas
lret
cmpsb
push
ret
jecxz
mov
outsb
fldenv
inc
cli
sbb
xchg
mov
aas
push
mov
xchg
das
ja
cmpsl
xor
dec
jno
sub
inc
adc
into
jl
jl
inc
test
lds
xchg
sbb
lret
xor
cltd
jl
inc
sahf
outsb
mov
jae
cmpsl
mov
mov
mov
cli
scas
es
jp
xchg
jbe
jb
fisubs
xlat
ljmp
or
setne
jmp
sbb
in
test
ret
and
into
adcb
scas
adc
cwtl
jns
in
pop
outsl
lcall
insl
adc
push
mov
inc
loop
loop
ret
dec
cmp
or
push
addr16
xchg
es
jbe
fs
je
cmp
push
mov
cmp
pushf
pusha
call
pusha
jmp
jmp
movb
lea
jae
cmp
clc
call
mov
bswap
call
call
pushl
popl
pusha
mov
pushf
pushl
ret
clc
neg
call
lea
je
push
add
pusha
lea
jmp
add
movsbw
movzbw
mov
bt
stc
and
bt
clc
cmc
bt
add
pusha
pusha
lea
jmp
jmp
pop
cmp
imul
inc
stc
mov
gs
sbb
xchg
jne
popf
aas
andl
ds
mov
push
faddp
shl
xchg
pop
lret
cmp
mov
daa
stos
jne
popf
pop
mov
inc
mov
dec
popa
jb
loopne
xchg
fsubp
sub
stos
pop
push
fwait
scas
pop
stos
test
push
leave
cmp
xor
mov
push
popf
cmp
jno
nop
add
xchg
mov
push
cmp
test
repz
movsb
cmpsl
pminub
pop
xchg
and
inc
adc
xor
cld
jae
imul
repnz
addb
out
jae
xor
into
jbe
mov
hlt
sbb
mov
mov
movsb
adc
dec
mov
mov
out
add
add
fmuls
loop
addl
in
loop
pop
add
loop
add
cli
add
lock
add
hlt
mov
clc
pop
out
out
mov
rep
call
not
call
jmp
mov
push
xor
lea
out
cmp
add
js
rclb
dec
sbb
lds
call
ret
lds
mov
stos
mov
insl
inc
and
sti
push
std
ja
xorb
mov
sub
mov
fwait
ss
sbb
pop
sbb
push
loop
out
jecxz
scas
lret
imul
stos
lret
stos
sub
pop
inc
sar
setbe
mov
xor
in
leave
sub
icebp
insb
fs
mov
and
mov
stos
out
lret
mov
repz
cmp
stos
sbb
scas
xchg
arpl
lahf
fwait
jno,pt
cwtl
test
mov
cmc
fnsave
xlat
jbe
sub
adc
inc
fnstcw
out
jle
fdivl
fsubrl
dec
pop
adc
inc
repnz
xchg
jmp
movw
push
jmp
pop
push
push
out
and
sub
mov
mov
sub
in
jge
inc
std
add
dec
pop
icebp
inc
cwtl
jmp
mov
stos
xchg
mov
data16
loop
mov
xor
jb
test
mov
xor
or
push
ds
push
dec
out
pop
shlb
mov
jns
push
fdiv
mov
jmp
aad
or
pop
push
test
mov
mov
scas
xor
pop
xchg
cmc
das
mov
mov
inc
mov
rcrl
sti
jmp
mov
fwait
movb
ljmp
dec
loop
idivl
mov
mov
sub
lea
cmp
notl
xchg
pop
push
push
pop
stos
sbb
xlat
out
sub
int
inc
and
mov
pushl
ret
sbb
sarl
push
xor
and
adc
dec
lds
xchg
sbb
adc
xlat
stos
imull
xchg
xchg
lcall
jmp
dec
sub
inc
cld
dec
in
mov
int
push
cmp
xor
add
cmpsb
adc
xchg
or
xchg
fdivl
pop
jle
pop
sbb
jb
rclb
movsb
cmp
hlt
xchg
mov
loope
mov
mov
add
repnz
repnz
inc
or
enter
es
mov
ja
nop
add
inc
or
push
jb
mov
pop
jne
pop
outsb
mov
aam
sub
fiadds
inc
es
out
pushf
lea
je
pushf
bt
pusha
pusha
sub
movb
pushl
sub
jp
cmc
cmp
pushf
mov
pushf
mov
lea
ja
clc
stc
jmp
mov
call
pushf
dec
cmp
shl
movb
pusha
lods
movb
jmp
not
pop
bswap
pusha
seto
mov
mov
pusha
pushf
movzbl
movzbw
mov
call
cmp
call
cmp
setns
setne
lea
push
pushf
movsbw
push
mov
pushl
lea
jl
ja
push
pusha
lea
jb
pusha
cmc
cmc
cmpb
pushf
pusha
lea
jne
stc
rcl
mov
push
cmc
add
cmc
movzwl
add
sub
bts
mov
push
mov
add
stc
mov
mov
cmc
test
movb
jmp
sub
cmp
out
push
mov
aam
adc
int3
icebp
rcrb
push
lods
jns,pt
in
xchg
into
stc
and
xor
adc
jl
je
mov
mov
enter
jecxz
mov
mov
fsubs
xor
mov
xchg
out
push
inc
push
testl
hlt
inc
cwtl
in
or
or
cmpsl
stos
lret
mov
mov
ret
push
jmp
inc
not
inc
xor
and
not
shl
cmp
stc
neg
clc
call
call
jmp
pushf
pushf
lea
ja
pusha
pusha
jmp
pusha
lea
jae
pushf
mov
dec
pushf
inc
push
mov
mov
lea
push
pusha
push
lea
call
push
movb
pushl
adc
mov
lea
jae
pusha
pushl
lea
jne
pusha
jmp
movl
pushf
movl
pusha
pushf
push
lea
jmp
lahf
seta
pusha
mov
lea
setge
lea
jle
pop
setnp
pop
lea
pop
call
push
pusha
lea
jne
ror
and
stc
mov
stc
cmp
call
pushf
mov
or
movb
pusha
lea
jne
neg
sar
add
mov
clc
cmp
push
or
call
pushf
pushf
movl
pushf
push
lea
jmp
aaa
mov
jle
xor
or
sbb
rcll
adc
cli
xorl
loop
mov
push
out
jmp
xchg
mov
jbe
clc
lret
ret
in
cwtl
fimull
pop
add
or
inc
insb
cwtl
push
mull
add
and
or
pop
xchg
push
push
and
cmpsl
push
sbb
mov
dec
fiadds
xchg
pop
mov
lcall
out
and
aad
out
push
and
dec
das
dec
addr16
mov
adc
mov
rcr
add
adc
movsbl
push
inc
mov
jmp
lea
jae
push
mov
lea
jne
pushf
call
cmp
lock
icebp
inc
or
sub
rclb
or
fsubrs
dec
or
sub
xor
jp
xchg
cmp
stos
out
stos
into
xor
aaa
jbe
add
addr16
ret
push
jae
cmovne
add
inc
repnz
mov
in
clc
pushf
cmp
pushf
jmp
mov
pop
movl
bswap
lea
pushl
pushl
movl
pushf
pushf
jmp
xor
insb
fadd
dec
mov
and
lea
jmp
mov
add
pop
mov
cmp
pop
imul
outsb
push
rorb
in
push
loop
sbb
les
mov
xor
cmp
jae
ss
xchg
jmp
add
pop
add
mov
inc
test
loopne
popf
hlt
lock
test
xchg
iret
inc
das
stos
aaa
push
sbb
sti
dec
and
stc
mov
test
add
fisttpll
call
push
add
mov
adc
jmp
icebp
mov
jno
mov
xchg
pop
push
mov
mov
data16
jae
mov
push
xor
push
mov
sub
fwait
movb
xlat
hlt
dec
mov
decl
sahf
cmp
out
jmp
sti
inc
out
jmp
sub
mov
outsl
sub
inc
mov
inc
lret
jns
jns
dec
leave
pushf
add
out
arpl
lock
fimull
in
cwtl
xchg
test
outsl
inc
rcrl
int3
fldt
adc
jno
xchg
xchg
outsl
fwait
imul
inc
push
cmp
shr
mov
fsubrl
mov
mulb
pop
pop
cmp
xor
and
aam
or
xor
int3
mov
push
xchg
push
popf
adc
push
inc
pop
push
sbb
jne
movsl
sbb
sbb
outsb
mov
fdivrs
mov
rcr
mov
sarb
jbe
mov
cltd
loopne
fsubl
stos
rorb
pop
sbb
movl
shrl
sub
cwtl
fstpl
xlat
cmc
inc
xchg
negb
mov
xchg
or
sub
add
clc
movl
and
bt
sbb
xor
mov
sub
pusha
cmc
pusha
call
not
lea
jmp
jmp
jmp
jmp
bswap
movb
pushf
mov
movsbw
mov
push
lahf
lea
pusha
movb
movl
pushf
mov
pusha
pushf
push
mov
pushl
ret
inc
loopne
and
pushf
mov
lock
lret
mov
jle
imul
and
call
jb
cld
add
mov
sbbb
rcrl
mov
out
adc
or
add
mov
lret
call
movl
pushf
pushl
popl
mov
pushl
ret
lea
lea
pop
lea
movzbl
pushf
pop
pop
mov
jmp
stc
cmp
push
pushf
pusha
lea
jae
push
cmp
pushl
jmp
jnp
pop
jecxz
inc
add
adc
arpl
xlat
xchg
fisttpl
pop
dec
mov
insl
les
adc
xlat
xor
imul
xor
sub
pushf
insb
aaa
jo
leave
gs
xchg
xchg
cmc
repnz
adc
in
adcb
mov
cltd
fdivrs
lock
inc
stc
jmp
out
pop
sti
ss
jns
pushf
mov
cltd
aad
xor
rcll
popf
aaa
mov
addr16
int3
test
stos
fwait
scas
xchg
ljmp
dec
cmpsb
xor
outsb
or
jne
pop
jp
sub
out
push
add
insl
popf
popa
clc
dec
je
push
pop
cli
cmpb
xorb
add
pop
push
sbb
cmp
ljmp
jmp
aad
pop
dec
repnz
jle
je
int
sub
in
mov
fucomip
push
xchg
add
inc
lds
pusha
popa
rclb
sub
mov
xor
daa
sub
hlt
popa
xor
mov
adc
pop
movsb
loope
pop
icebp
sub
xchg
sub
movsb
inc
loope
adc
dec
pop
movsb
dec
lods
xor
ret
fisubs
jecxz
ss
scas
outsl
jg
add
mov
cmp
dec
add
cmc
push
mov
jbe
adc
fsubs
xor
rcll
lret
add
loope
cmpb
adc
mov
adc
lods
loop
inc
push
lahf
fbstp
xchg
scas
rorl
fildl
repz
xor
or
push
sbb
sub
mov
cli
lea
jbe
clc
shld
mov
rcr
bts
setg
add
movzbw
mov
stc
rcr
mov
setne
jmp
sub
pushf
pusha
repnz
push
lea
jne
cmp
movzbw
mov
btc
bsf
sub
and
mov
push
pusha
movl
call
clc
pushl
popl
call
call
inc
add
shr
mov
in
lods
call
in
inc
sbb
aaa
adc
shlb
xor
mull
xlat
and
cmc
add
push
cli
cltd
in
ret
and
inc
adc
sub
push
xor
mulb
push
pop
jp
mov
xor
push
pushf
pushl
lea
jmp
sarl
xchg
mov
xor
in
test
push
js
and
jns
jp
mov
adc
js
push
addr16
fadds
cmp
push
and
test
ret
and
mov
or
sbb
cld
mov
jno
push
cmp
xor
daa
pop
or
jne
pop
lcall
sbb
add
adc
fdivp
pop
fwait
sub
jb
or
and
mov
bound
ds
notb
outsl
ljmp
jns
mov
stc
stos
and
call
inc
clc
pushl
xchg
sbb
rcl
cmc
stc
mov
not
and
rol
mov
clc
movb
mov
jmp
mov
push
mov
enter
les
fdivr
frstor
dec
adc
cmp
test
and
jg
mov
out
jb
push
pop
fbstp
jb
orb
es
or
stos
fstp
shrb
push
hlt
in
jmp
loopne
jp
lods
out
sbb
jecxz
fsubrs
int3
mov
les
add
jbe
inc
orl
xlat
std
ja
pop
lods
xchg
into
test
adc
dec
jp
push
xchg
pop
cli
mov
sbb
inc
pop
fsubl
inc
stc
push
std
lock
scas
cmpsl
xchg
bound
mov
add
mov
jae
cmp
sub
stc
clc
or
pusha
lea
je
movzbw
movzbw
mov
lahf
push
pusha
pop
bswap
push
lea
call
roll
test
mov
sub
roll
or
jns
sub
xlat
mov
mov
movsl
test
fstpl
push
aam
orb
adc
xchg
fbstp
jne
push
cwtl
sets
mov
pushf
pusha
lea
jmp
movzbw
lea
lea
jp
pushf
movl
pusha
pushf
jmp
push
movw
or
call
push
pusha
lea
ja
setbe
setge
pop
jmp
cs
or
enter
mov
mov
setp
xlat
pop
sub
or
cmp
call
push
push
xchg
adc
mov
xor
mov
xchg
addr16
arpl
xchg
pop
jmp
hlt
leave
insb
test
inc
inc
sub
mov
jns
cmc
push
scas
and
jae
push
push
add
stos
dec
jne
in
int
mov
lds
roll
push
fwait
pop
popl
mov
dec
and
mov
add
fstps
cmc
test
inc
loop
lcall
push
insl
inc
add
jo
lcall
jmp
adc
pop
mov
sbb
movsb
jb
inc
xchg
add
movsl
pop
lock
lahf
xor
aam
adc
out
mov
pop
iret
imul
jb
push
in
int3
in
fisubrs
sub
mov
lods
cmp
push
or
jb
outsl
push
adc
js
xchg
stos
outsl
mov
into
jae
jl
iret
call
sub
or
mov
cld
sbb
jb
mov
rcrb
or
aad
jl
jae
xor
icebp
decl
mov
mov
push
dec
test
aad
ja
jbe
xchg
cld
mov
push
das
dec
jae
cmp
and
or
add
cltd
mov
rcr
dec
stc
pushf
and
push
loop
cmpsb
cmp
jle
lods
xor
cwtl
xor
dec
orl
add
lods
sub
add
add
loopne
adc
scas
lods
push
add
sbb
in
push
add
sbb
pop
sbb
add
add
add
jb
das
je
adc
lret
xchg
push
jp
add
inc
and
adc
or
push
sub
lahf
cmpsl
inc
pop
imul
xor
icebp
mov
cs
sbb
std
mov
or
mov
push
or
and
btr
push
pushf
not
pushf
btr
mov
shrd
bsr
rol
sub
mov
pushf
shld
dec
mov
dec
add
shl
call
jmp
jmp
push
pushf
movb
movl
call
inc
inc
pushf
push
pushl
inc
or
xchg
pushf
rcr
mov
stc
push
xor
mov
pushf
pusha
mov
neg
mov
movb
sub
push
call
jmp
pushl
push
pushl
popl
movb
pushl
ret
push
pushf
jmp
pushf
movl
pushf
pushf
movl
lea
jmp
jmp
call
add
dec
gs
popa
addr16
outsl
js
add
ja
stc
jmp
pushf
push
push
lea
call
call
pop
pushf
jmp
into
insl
and
or
sbb
and
jbe
outsb
dec
ds
cmp
out
mov
or
mov
faddl
dec
mov
xchg
mov
das
sbb
imul
test
push
adc
rcrb
in
lret
mov
xor
faddl
cs
scas
repz
lahf
jmp
les
mov
xchg
rclb
xlat
decl
movsbw
movsbl
pop
push
pushl
ret
mov
dec
mov
cmpsl
xchg
xlat
lret
scas
or
mov
lahf
cmp
xor
das
scas
inc
js
xor
repnz
imul
cmp
daa
movsl
fdivl
sbb
das
dec
loop
lcall
cmp
xor
in
addl
cli
mov
jg
mov
shll
out
arpl
dec
and
movsb
std
mov
lods
sub
nop
fs
mov
pop
addr16
stos
cmp
ss
jp
push
idivl
fadds
and
or
cmp
rcrb
or
je
inc
add
push
sub
xor
jle
stos
aaa
sub
pop
sbb
pusha
std
or
xchg
fbld
push
adc
push
ss
or
int3
mov
xor
push
or
adc
sti
cmc
jmp
shlb
sub
loope
sub
scas
lret
mov
jae
sti
lods
mov
lods
aam
iret
adc
fnstsw
and
add
cmp
fdivr
push
fistpll
dec
ror
scas
jecxz
mov
pop
pushf
mov
lea
call
bt
call
sub
outsl
mov
push
push
mov
stos
adc
push
mov
dec
or
es
jecxz
mov
shlb
fcoml
sbb
push
pop
cmp
jecxz
pop
xchg
pop
enter
fwait
arpl
repz
pop
mov
inc
rcr
sub
inc
push
in
js
pop
pusha
sub
dec
pop
fistpl
xchg
and
push
int
inc
xchg
aad
or
mov
xor
pop
cmp
sub
xor
adc
cld
inc
leave
int3
xorl
mov
bound
ss
jne
xor
lea
jne
pushf
push
mov
pushf
lea
call
pushf
pushl
lea
jmp
lcall
mov
sahf
and
es
fiadds
jl
rcll
or
inc
mov
mov
or
cmc
scas
xchg
outsb
xchg
xchg
pusha
das
adc
push
sbb
rsm
sbbb
repz
xchg
mov
adcb
lea
pop
push
shlb
sub
imul
aad
iret
imul
and
frstor
aaa
in
cmp
add
and
xor
sti
cmp
xor
arpl
xor
xchg
sbb
push
lock
in
sub
jo
push
fistpl
rol
shll
sub
sub
xor
push
or
jbe
mov
dec
mov
xchg
lods
xchg
add
out
lret
mov
sbb
pop
fidivs
push
popa
pop
into
dec
data16
stc
idiv
cmpl
mov
std
jle
push
out
push
pop
roll
inc
popf
negb
add
mov
ret
jne
shrb
cmp
loopne
fidivrl
gs
ret
push
inc
add
mov
imul
lret
int3
ljmp
mov
in
xor
call
gs
push
repnz
arpl
inc
mov
sub
scas
cmc
mov
mov
aad
pop
rcll
dec
inc
xorb
cmp
mov
jmp
ror
jmp
daa
movsl
nopl
cmc
mov
rol
inc
cmpb
mov
cmp
dec
mov
dec
inc
mov
cmpsl
push
mov
xor
mov
push
ret
sub
jb
mov
push
push
cmp
push
int3
dec
inc
add
xor
popf
mov
add
ds
dec
dec
dec
nop
into
repnz
leave
mov
mov
xchg
loop
rolb
cmp
in
inc
inc
xorb
inc
mov
mov
sahf
add
inc
lds
add
inc
inc
mov
mulb
gs
scas
mov
add
icebp
cmp
sarl
inc
cmp
cld
pop
push
push
sbb
incl
aam
lea
rcrb
lret
popa
ljmp
imulb
xor
cmp
dec
lds
sub
jo
adc
xchg
ljmp
cmp
fsubs
imulb
repz
xor
aad
aam
popa
iret
jle
mov
xor
xor
pop
testb
pop
xchg
test
testb
out
jbe
divb
std
mov
std
inc
roll
inc
sbb
test
jae
mov
mov
ret
dec
xor
mulb
fbstp
xor
xor
mov
idivb
ror
jns
xor
adc
lcall
iret
leave
ret
sub
xor
xor
pop
jmp
push
mov
jnp
scas
stos
sub
inc
cmp
mov
out
int3
movb
mov
testb
lret
aad
push
dec
jge
inc
ds
jne
ret
fcomip
mov
inc
testb
cmc
cmp
mov
lds
and
mov
loopne
movsb
idivb
dec
popa
testb
popa
cmp
push
xor
mov
iret
rorl
daa
fnsave
fistpll
push
mov
scas
not
dec
aam
cmp
jmp
sbb
add
mov
rep
cmpsl
movsl
fildll
sub
sahf
fildll
cwtl
xor
jmp
ljmp
lods
cmp
clc
sub
ljmp
cld
imulb
imulb
idiv
push
dec
lret
scas
negb
iret
mov
sub
xchg
popa
xchg
pop
inc
push
sbb
in
idivb
mov
push
lock
aaa
cmp
push
in
jmp
idivb
push
cmp
mov
xor
idiv
push
push
lahf
js
sbb
xor
sub
scas
out
and
pop
cld
icebp
mov
mov
not
ljmp
dec
inc
imul
jns
shr
enter
ljmp
or
xor
fdivrs
inc
rcrl
inc
mov
and
push
loopne
aad
sbb
mov
push
lret
dec
inc
ja
not
push
mov
rol
push
dec
cmp
out
insb
pop
clc
in
pop
insb
out
jmp
sub
dec
lock
dec
movsb
dec
pop
inc
mov
xor
and
mov
icebp
popf
xor
mov
in
dec
aas
leave
les
popf
lret
shr
push
pop
jns
cmp
jl
hlt
bound
call
shrb
cmc
sub
aad
out
rorl
mov
inc
lds
out
cmp
dec
insl
ljmp
push
clc
sar
aad
pop
sar
mov
idivb
jno
dec
dec
sbb
jle
xchg
insl
divb
xorl
in
mov
movsl
dec
add
inc
aad
cwtl
xor
and
xor
mov
pop
mov
icebp
fistpll
loopne
pop
jns
mov
movsl
cmpsl
das
pop
dec
notl
nop
cmp
fists
mov
mov
mov
scas
rcrb
divl
leave
jns
jno
lods
imul
xor
mov
les
in
jle
jge
pop
dec
scas
insb
or
push
das
hlt
inc
cmovnp
inc
flds
jmp
dec
and
dec
jmp
cmp
imul
push
mov
loopne
sub
jns
pop
enter
add
bound
push
in
push
mov
xor
insl
mov
pop
cmp
mov
das
lcall
fdecstp
aam
inc
cmp
in
mov
mov
repnz
dec
cmp
loopne
pop
idivb
test
mov
inc
aam
popa
sub
stos
xchg
outsl
gs
inc
add
mul
dec
push
cmp
cmp
cmp
call
aaa
lock
mul
ds
dec
push
scas
shrl
inc
xor
pop
dec
mov
xor
inc
inc
ret
testl
popa
inc
enter
push
inc
pop
cmp
mov
cmp
lock
mov
inc
lock
mov
lahf
mov
inc
jo
mov
inc
cltd
sbb
aad
cs
jns
packuswb
out
rcr
imulb
inc
push
lods
ljmp
cmp
fnstsw
jmp
dec
sbb
cmp
mov
sbb
inc
cmpsl
imul
insl
divb
inc
and
inc
and
jno
dec
mov
pop
mov
dec
inc
iret
push
mov
inc
inc
cmp
lock
sub
pusha
iret
sbb
into
in
inc
popf
ficompl
cmpsl
cld
jno
enter
push
push
mov
in
inc
pop
das
loopne
pop
cmp
inc
mov
mov
call
inc
and
dec
xor
jmp
nop
xabort
inc
clc
cmp
ja
test
sbb
popa
out
xor
rcll
shrb
xchg
pop
insl
popf
js
mov
lock
ds
mov
subl
out
mov
sbb
pop
xor
mov
fsubrl
push
mov
jns
mov
push
mov
lret
cmp
jmp
imul
rclb
pop
gs
pop
negb
xchg
test
mov
dec
fisttps
mov
fadd
lods
testb
inc
cmp
push
xchg
adc
fdivrl
xor
adc
or
inc
xchg
insl
cmc
filds
iret
dec
xor
inc
fsubrl
mov
push
mov
inc
stos
daa
inc
imul
inc
mov
inc
testb
jle
popf
not
push
scas
js
in
loopne
ja
notb
clc
cmp
outsl
call
fisubrs
sub
inc
lds
fsubrl
dec
mov
enter
mov
std
int3
push
sbb
mov
mov
inc
jns
outsl
sub
dec
mov
push
inc
imul
pop
dec
or
xor
jmp
leave
jge,pt
mov
pop
shr
push
jno
lret
int3
inc
mov
lahf
inc
cmpsb
inc
push
outsl
mov
inc
push
inc
mov
daa
mov
push
inc
filds
mov
jmp
push
jo
inc
mov
ljmp
mov
dec
fadds
lret
mov
adc
cmp
inc
mov
sbb
les
ffreep
sub
dec
test
jnp
mov
mov
stos
popa
inc
dec
jge
inc
dec
mov
ror
dec
ljmp
fnop
jns
mov
cmpsl
movsl
cmp
mov
out
ljmp
in
dec
lret
mov
sub
sbb
mov
lret
insl
dec
test
repz
xlat
repz
loopne
xchg
xchg
mov
sub
inc
dec
pop
xchg
mov
and
inc
xorb
mov
divb
fcomps
clc
cmpsl
mov
lock
scas
pop
dec
das
pop
fcoml
dec
popa
imulb
sub
inc
xchg
push
bound
sub
mov
sahf
dec
mov
mov
ja
int3
mov
leave
mov
cmp
mov
sub
gs
mov
inc
lds
fiaddl
fmuls
popf
pusha
inc
popf
add
out
xorl
add
aas
test
inc
adc
addr16
aas
ds
imul
pop
or
mov
inc
mov
jmp
sarb
call
adc
aam
add
ret
cmp
insl
mov
jmp
fcmovb
out
out
add
cwtl
pop
ret
mov
xchg
fs
cmp
cmpsb
add
xor
xor
add
leave
addb
jge
ror
movsl
scas
or
jge,pt
jb
loop
cmpsl
jge
jno
jmp
int
orb
enter
push
dec
adc
lret
movl
jb
pop
pop
rorl
dec
ljmp
subb
pop
and
incl
push
std
ret
loope
or
lock
pop
shrl
xchg
in
inc
cmc
ret
push
xlat
xchg
std
pop
test
mov
dec
push
int
fildl
cmp
add
push
stos
fs
jl
push
out
in
frndint
sti
call
out
std
inc
cltd
xorl
vpsubw
jo
xor
rcr
push
lahf
jns
fdivr
jecxz
icebp
mov
cmpsl
cmp
test
sti
mov
lret
vmaxpd
mov
fisubrl
ljmp
jmp
xor
mov
icebp
sub
enter
clc
adc
lock
insb
notb
or
ljmp
cmp
in
or
push
popa
decl
ror
mov
dec
pop
movsl
jns
jmp
mov
loopne
fiaddl
mov
sbb
add
cmp
push
cmp
mov
test
jmp
cmc
cmp
imul
add
test
inc
lahf
xchg
mov
pop
into
cmp
aaa
cmp
int3
mov
ljmp
fdivrp
int3
imull
jo
mov
add
testl
out
sbb
loop
fmuls
and
je
mov
push
jne
fincstp
ficomps
loope
mov
insb
cld
sbbb
pop
mov
cmpsl
add
mov
out
hlt
pop
into
cmp
xor
mov
int3
loope
mov
ljmp
fs
out
insb
and
mov
fsubr
aad
rcrl
add
pop
lea
cmp
mov
fdivs
mov
push
xlat
xchg
mov
mov
push
rolb
push
push
pop
mov
lods
add
adc
push
in
add
push
arpl
mov
add
sti
pop
push
push
and
out
cmp
outsb
cmc
lahf
fildl
cmp
xor
test
sarl
stc
sbb
jg
push
iret
mov
mov
fs
mov
cmc
sbb
out
roll
lcall
icebp
jno
leave
inc
push
js
mov
sub
mov
mov
push
out
cmp
jae
aas
pop
push
push
fcoml
sbb
dec
mov
ja
fsubl
cli
out
shl
addr16
jne
cmp
jle
loope
jg
cmp
rcrl
cmc
fmuls
add
mov
sahf
fnstcw
or
jp
inc
fdivrs
pusha
insl
std
fldenv
rcl
push
xor
popf
imull
ljmp
sub
cmp
sbb
jbe
mov
loope
xor
push
push
cmp
sarl
loopne
rcrl
pop
sbbl
push
xchg
and
inc
std
jp
lods
jle
ljmp
mov
int
aas
mov
test
test
fptan
out
lea
cwtl
xchg
fdivrs
cltd
movsl
mov
xchg
xchg
inc
xchg
mov
nop
test
mov
and
je
mov
int
aas
test
test
mov
jg
int3
add
mov
fwait
iret
sbb
popf
push
mov
and
mov
stc
je
test
out
pop
sti
xchg
pop
aaa
out
mov
sti
sub
pop
and
leave
idivb
flds
xor
std
ds
sbb
mov
mov
sub
cmp
pop
in
mov
fnstsw
jl
push
lea
jl
push
andl
xor
shll
jge,pn
daa
hlt
loope
jp
and
movsl
cmp
pusha
xor
or
idivl
lret
sbb
out
shll
fisubrs
out
xchg
jg
xchg
rcr
aaa
cmc
mov
cmp
shr
fstpl
in
out
mov
movsb
mov
std
jmp
inc
sub
addr16
fcoms
mov
fsts
push
jne
cltd
movsl
jge
shlb
xlat
mov
popf
pop
aas
pop
adc
cmc
fnstenv
adc
jle
std
fsub
test
lcall
mov
rorl
negl
icebp
mov
cltd
mov
test
loopne
jbe
sbb
rorl
out
xchg
shrl
sbb
sbbl
mov
inc
sbb
xchg
or
filds
dec
aas
insb
jl
pop
test
imull
int
fiaddl
lock
xchg
fidivl
jns
xchg
jns
xchg
fdivrs
out
fdivs
xchg
jge
cli
negl
xor
push
pop
int
movsl
ljmp
inc
cmc
and
stos
jge
jmp
mov
rcrl
int
fwait
popf
test
jnp
test
pushf
add
stos
pop
cltd
xchg
mov
jae
scas
iret
sbb
leave
roll
cld
adc
jns
roll
addr16
mov
xlat
adc
loop
cmc
sub
inc
clc
jmp
cmpsb
rcll
leave
inc
nop
lods
sti
jb
sub
fs
sbb
dec
in
hlt
hlt
clc
pop
sbb
and
mov
movsb
outsl
aas
jmp
mov
in
jnp
outsl
sti
fnstcw
scas
loopne
loope
lret
or
mov
pop
pop
out
scas
mov
xor
mov
sub
aas
stc
fstps
mov
mov
rcrb
dec
mov
jl
push
cmp
mov
popf
jmp
gs
mov
dec
push
cmp
pusha
scas
stc
sarl
loopne
dec
mov
xor
xchg
mov
jne
xor
decb
call
mov
je
inc
and
pop
iret
push
add
sbb
adc
int3
jae
fstpl
or
repz
pusha
test
js
xchg
popf
pop
js
pop
inc
push
daa
adc
iret
xor
and
movsl
aaa
mov
cmp
subl
shrl
decb
push
mov
sbb
lret
fists
scas
frstor
cmpsb
pop
aad
ja
lea
cwtl
fbstp
das
lock
icebp
jecxz
fbld
sbb
andl
fnstcw
cmp
xor
adc
out
call
pop
pop
xor
in
jle
push
push
aas
in
inc
xchg
in
int
or
stc
push
cmpb
cmp
outsb
mov
push
js
int3
xor
in
xor
ror
movl
ror
in
cmpsl
roll
imul
lea
imulb
ret
scas
insb
scas
je
jnp
jmp
nop
fsubr
loop
mov
out
int3
subb
mov
iret
xor
clc
inc
cwtl
mov
push
stc
pusha
imul
es
mov
xor
je
dec
lea
call
clc
repz
jmp
xlat
jl
and
cmpsb
loopne
out
jge
push
pop
adcl
xchg
cmp
xchg
in
sub
sarl
mov
push
mov
cmpsl
lea
imul
inc
xor
dec
jmp
addr16
or
in
shrl
test
jnp
push
dec
icebp
push
std
adc
adc
imul
dec
ds
fwait
xchg
xchg
mov
fabs
repz
mov
andl
pop
pop
jmp
std
cmp
stc
out
inc
sti
add
push
xchg
add
loop
testl
call
movsl
adc
stc
mov
pop
adc
js
mov
mov
imull
jg
movsl
fldenv
lret
mov
cmpsb
or
lea
pop
mov
icebp
cmc
int
sahf
shlb
pop
data16
mov
insb
pop
pop
movsb
divl
stos
pop
out
push
push
enter
lds
mov
pop
add
hlt
mov
jg
pop
ljmp
push
bound
xchg
fdiv
shl
xchg
mov
dec
adc
xlat
mov
push
mov
out
jo
push
iret
xor
jecxz
xor
xchg
mul
xchg
mov
xchg
inc
jne
push
js
jne
mov
mov
pop
cmp
sbb
mov
add
add
loop,pt
mov
xchg
test
mov
mov
popf
jbe
mov
jmp
mov
xchg
xchg
xchg
int3
pop
negl
xchg
decl
scas
jno
sbbl
test
ljmp
mov
fwait
shll
out
pop
cmp
out
lock
add
pop
cli
jo
insb
aas
out
inc
xor
mov
cmp
jge
ljmp
in
imul
jl
inc
pushf
shrl
filds
cli
push
xchg
push
jno
inc
stc
xor
out
insl
mov
jle
movsl
cltd
cwtl
inc
jge
and
add
xor
in
cmc
and
mov
add
sbb
js
jle
test
shlb
test
rolb
sarl
and
xor
inc
jo
xchg
sbb
clc
int
enter
ljmp
mov
fs
pop
add
or
or
cmp
adc
test
in
inc
notl
out
push
std
clc
inc
sti
jb
and
and
jle
mov
mov
jg
je
sub
fdiv
sarb
and
jb
hlt
inc
or
pusha
fs
iret
loopne
out
push
fsubr
mov
loopne
neg
js
xchg
jp
push
cld
icebp
std
loope
loopne
inc
leave
mov
out
pop
inc
mov
cmpsl
testl
cmp
push
jp
movl
in
inc
fwait
outsl
sti
int3
rcr
jnp
aad
shrb
pop
cmc
aaa
pusha
lock
aam
or
test
fidivrs
xchg
jp
push
jne
cmp
mov
add
adc
sahf
test
leave
push
popa
neg
cmp
pushf
leave
std
sahf
lret
fisttpl
inc
push
adc
fs
mov
fdiv
jl
sbb
loopne
mov
or
sti
cmc
mov
and
inc
icebp
mov
mov
jge
cld
xchg
into
pusha
lea
test
cld
or
fldenv
dec
cld
stc
les
lods
mov
mov
jge
and
push
xchg
cmp
insb
fstpl
std
jmp
les
aas
push
jle
cmp
fcmovnb
jge
or
int
pushf
fidivl
adc
cmp
ljmp
sbb
lea
fidivrl
sub
pop
xchg
out
std
pop
sbb
into
inc
fs
movsb
test
filds
std
jne,pt
in
push
inc
call
hlt
jns
std
insb
jnp
std
std
push
mov
js
gs
bswap
or
clc
pop
repz
sbb
out
push
loope
cmp
jmp
xchg
xchg
fistps
cld
pusha
sahf
cld
lea
popf
add
gs
xchg
cmp
js
cmpb
sub
icebp
lods
icebp
cld
inc
test
xor
subb
test
popf
jp
jb
and
cmp
inc
mov
and
jg
out
inc
inc
insl
std
insb
jne
neg
jb
add
mov
cmp
movsl
cmc
loope
out
rol
cld
xchg
mov
shl
pop
fimull
jo
push
popa
jp
jmp
pop
int
icebp
jns
jp
call
lock
cltd
loopne
sti
gs
test
push
stos
js
dec
push
outsb
dec
jae
push
sbb
lea
jg
js
or
fidivrs
mov
sti
decb
and
jge
in
js
loope
andb
ss
xchg
add
push
js
sbb
outsl
sub
push
std
js
data16
sub
inc
sbb
mov
sarb
and
xchg
sti
in
data16
cmp
sbb
xchg
cld
aam
bound
jb
inc
aas
mov
or
cmp
repz
imul
lock
push
sti
cmp
dec
ficompl
jno
jnp
jl
xlat
rcrl
add
jg
mov
cmp
in
sti
mov
pop
pop
ror
jl
jg
in
notb
mov
in
push
xchg
sub
push
pop
jg
xor
lock
adc
icebp
testb
rcr
shlb
orl
addr16
sysret
pusha
cmp
fistpll
xor
stos
movsl
adc
imul
loopne
inc
add
out
sbb
adc
and
jbe
mov
loopne
add
lods
pop
mov
sbb
arpl
jnp
std
stc
repz
lea
test
mov
mov
add
inc
push
imul
pop
in
js
push
loopne
jp
out
xchg
xor
dec
adc
lea
cltd
mov
les
fucomip
inc
jecxz
lcall
add
or
int
testl
clc
jbe
clc
addr16
mov
test
sbb
fisttps
xchg
push
gs
and
cli
inc
dec
addl
mov
push
add
stos
mov
mov
mov
cmp
mov
outsl
enter
insb
cld
cld
inc
js
incb
out
mov
fldln2
mov
jge
in
out
loopne
rcrb
mov
dec
loope
out
xor
es
dec
jno
jns
rcll
jae
icebp
std
xchg
mov
sahf
or
adc
in
cli
or
clc
sbbl
cmp
pop
stc
xor
xor
jne
in
inc
or
icebp
push
xchg
cmp
ja
std
jae
mull
mov
into
mov
jnp
imul
in
pusha
std
imul
jmp
stos
out
std
jecxz
lock
mov
vpsubusw
stc
aas
fcoml
leave
xchg
push
and
in
xor
xlat
jae
in
cmc
aad
jmp
sub
pop
js
adc
jl
mov
xor
scas
pop
pusha
mov
out
cmc
xor
popa
imul
arpl
xor
mov
xchg
testl
in
xor
leave
bound
ja
mov
pop
inc
das
outsl
roll
int3
fstpt
sub
jmp
sub
in
add
mov
ja
push
std
cmp
stc
xor
and
test
jle
mov
popf
sti
aas
pusha
lahf
stc
das
mov
pop
hlt
aas
mov
pop
cmp
push
lods
int3
fistpl
call
outsl
push
call
mov
fmuls
clc
xchg
shrb
and
ret
arpl
add
jbe
pop
push
adc
push
ret
mov
jno
jl
imul
mov
mov
das
push
subl
fstpl
js
popa
inc
add
fst
or
jns
cli
int3
out
jnp
test
sti
jmp
jg
fistps
sar
je
jo
and
std
out
lea
call
movsl
leave
push
inc
ficoms
jo
clc
sti
xchg
ljmp
pop
cmp
jbe
repnz
mov
push
movsl
lds
xor
xor
inc
jle
test
inc
es
xor
hlt
int3
incl
push
out
pop
inc
xchg
cmp
xor
jle
repz
loope
jne
jg
hlt
aad
and
cwtl
and
xor
jle
add
icebp
data16
push
mov
adc
pop
mov
and
gs
jp
inc
push
jb
adc
outsb
std
stos
or
add
imul
inc
lcall
lret
shll
int
push
lcall
popa
fsubl
arpl
fdivr
out
xchg
xchg
add
enter
xchg
mov
lcall
push
xor
pusha
inc
out
sti
mov
inc
sahf
icebp
movsl
lock
enter
inc
divb
jmp
pusha
popa
pop
sti
inc
fstpl
cmpsb
pop
hlt
call
jno
fldl
lock
xor
sar
add
call
pop
mov
jecxz
fisttps
pop
cmc
xchg
add
scas
out
das
pop
icebp
push
inc
xor
test
aas
repnz
push
ljmp
test
shl
mov
jecxz
in
arpl
jecxz
bound
jb
out
push
sub
pop
add
leave
add
push
mov
adc
or
out
sbb
or
mov
sbb
addl
sti
popa
fidivs
jp
xchg
outsb
jge
pop
inc
and
idivl
cmp
mov
test
lret
mov
out
mov
lahf
clc
std
xor
fisttpll
stc
cmc
mov
loope
ljmp
aas
or
clc
fsts
ds
sbb
jge
sti
jne
jns
pusha
inc
loope
fbld
arpl
js
fimull
add
fdivrs
xchg
sbbb
je
clc
icebp
cmc
orl
or
inc
inc
inc
icebp
xor
inc
xlat
shll
cld
cli
xlat
pop
mov
imul
push
shll
jge
icebp
sbb
jecxz
dec
adc
and
loope
add
ja
loop
cmpl
out
clc
inc
pop
fwait
je
fincstp
clc
stc
rclb
jnp
bound
add
mov
inc
mov
dec
adc
movsl
mov
lea
fstpt
sarl
cld
arpl
jmp
sbb
pop
pop
push
pop
jg
and
cmp
sub
std
mov
jle
cltd
jne
jl
mulb
insl
xorl
add
adc
sti
or
repnz
mov
dec
gs
push
jl
fstp
sbb
mov
mov
repnz
mov
cs
mov
aad
dec
cmc
cld
std
decb
lock
js
and
adc
out
xor
push
insb
sarb
aad
lock
loope
inc
push
dec
xchg
fs
repz
sbb
cmp
or
test
ss
mov
lods
inc
inc
out
cmp
add
jmp
fists
bound
mov
out
test
jmp
lock
into
cmp
xchg
gs
test
ljmp
cmp
inc
inc
add
and
jo
and
jnp
and
jl
pop
int
or
aas
mov
pop
pop
pop
mov
fwait
decb
iret
jp
repz
or
cwtl
or
out
mov
sbb
add
testb
out
repz
xor
jb
cld
repz
pop
imulb
mov
jl
cmp
movsb
pop
ret
repz
loop
cmp
or
pop
jno
sbb
lret
lock
cmp
xchg
cmovnp
sbbl
jl
test
js
dec
cmp
mov
cmp
dec
fnstsw
pop
or
xchg
enter
push
stos
rolb
dec
std
push
decb
mov
mov
incl
out
inc
or
std
stc
jno
jb
iret
lret
jge
into
mov
mov
pop
sbbl
sahf
add
push
daa
mov
repnz
and
or
fsubrs
push
aad
or
daa
xchg
shl
inc
pop
mov
sbb
roll
out
cmp
mov
cmc
in
jno
mov
mov
or
inc
gs
dec
dec
xchg
fdiv
arpl
cmp
pop
icebp
int
std
lea
fdivl
jp
push
loopne
xchg
push
icebp
cmc
xchg
out
shr
ret
add
adc
xchg
xbegin
sbb
popf
lea
ffreep
cmp
push
ret
pop
mov
sub
fbstp
js
pop
sti
jnp
fdivrs
push
sbb
lea
or
add
sub
push
ret
cmp
pushl
lret
loope
lcall
outsl
xchg
imul
aad
ds
jmp
jne
leave
mov
fs
clc
pushl
push
sbb
jl
jbe
inc
jge
inc
aas
xor
pop
into
push
out
cmc
lock
icebp
or
iret
cmp
push
lret
pop
jmp
popa
mov
xchg
outsl
mov
jne
push
cmp
add
in
cmc
adc
testl
push
cmp
dec
and
fstpt
jo
add
adc
rclb
lea
insl
in
cltd
push
mov
inc
jbe
neg
pop
jbe
cmp
jmp
mov
jge
fdivr
pop
repnz
adc
push
out
or
jns
push
mov
pop
mov
fiadds
jo
jge
in
popa
mov
xchg
loopne
lret
fwait
arpl
ret
mov
xchg
cmpsb
fs
inc
fwait
sarb
scas
stc
loope
shll
inc
push
fdivrp
cmp
add
ficompl
cmp
aas
fildll
leave
and
or
inc
icebp
pop
lea
jmp
xor
jle
test
test
jne
aad
cmc
cmp
jne
xchg
ret
loop
shl
inc
push
rol
jns
sbb
arpl
cli
lcall
outsb
imul
sub
mov
jge
into
jge
outsb
popa
inc
inc
cmc
cli
cmp
incb
ficoml
test
rorb
sahf
push
and
push
cmc
insl
and
push
push
mov
mov
lret
enter
jne
add
xorb
jmp
daa
out
cmc
jg
dec
fs
mulb
addb
jnp
ljmp
sbb
testl
or
cmp
daa
imul
lock
clc
xchg
fwait
icebp
add
mov
inc
jl
jns
add
fnstsw
lahf
outsb
and
pop
ss
xor
or
jge
and
dec
sub
jae
pop
mov
sbb
aaa
inc
fwait
testl
xor
pop
push
lea
inc
popf
inc
jmp
mov
mov
sbb
dec
cmp
xchg
mov
ljmp
inc
pop
pop
notl
dec
into
or
push
pop
popf
mov
nop
scas
mov
xchg
push
aas
movsl
mov
fwait
call
mov
fmul
cltd
mov
fldcw
pushf
sub
lahf
test
in
popa
pop
aas
stos
js,pt
ror
add
rcl
cmp
mov
sbb
dec
jno
int3
repz
jg
jno
daa
push
add
loop
repnz
xor
repnz
outsb
pop
dec
mov
movsl
leave
fists
clc
js
cmp
ret
fbld
call
lods
mov
fnstsw
xor
mov
insl
mov
jecxz
inc
jns
xchg
gs
arpl
xchg
mov
sub
cmp
mov
mov
inc
jle
test
jge
aas
mov
xchg
ds
int3
and
or
cmp
js
mov
jnp
nop
mov
dec
xchg
sbb
fdivl
cld
sbb
arpl
rep
fldl
ja
jnp
push
bound
or
mov
push
push
sub
je
add
cmc
rcr
in
outsl
jmp
je
cmp
andl
and
add
fnstenv
js
iret
push
outsl
cmp
add
cld
mov
pushf
cmp
std
cltd
xchg
jp
or
data16
loopne
arpl
cwtl
push
jno
pop
sti
mov
add
pop
mov
cmp
push
lods
fistpll
scas
cmc
cld
inc
xchg
push
std
cltd
pop
lods
mov
outsb
add
mulb
ja
jg
stos
or
stc
insb
imul
icebp
jns
frstpm(287
add
out
jae
inc
add
bound
jecxz
fnsave
iret
das
outsl
btr
jno
mov
pop
std
loope
sbb
loope
and
loope
sub
aas
mov
mov
push
mov
gs
lock
cmpsl
popa
in
daa
xchg
jns
scas
lret
inc
loope
pusha
scas
inc
aam
jl
scas
loopne
repnz
or
pop
test
cmp
inc
shl
xor
out
stc
arpl
fstpt
icebp
push
mov
cmp
hlt
dec
call
cmp
mov
jae
aas
testb
jne
outsl
push
jo
pop
fidivrs
das
jb
push
jno
jmp
lods
mov
insl
jb
inc
cld
mov
fstpt
pop
inc
add
lock
pop
out
insl
lock
cmp
dec
clc
inc
lcall
loopne
js
adcl
add
lods
cmp
popf
pop
sahf
or
das
xchg
pop
mov
sti
inc
insb
and
outsb
cltd
and
cld
push
lahf
jmp
fxch
mov
outsb
inc
sbb
outsl
push
add
push
jp
jb
pushf
push
sti
or
mov
jo
xchg
xor
mov
or
jle
cmpsl
stos
xchg
dec
sbb
pop
movsb
out
test
lea
xchg
jge
xor
dec
imul
mov
mov
mov
leave
jno
xorl
das
xlat
mov
aam
mov
dec
cld
lret
jge
mov
call
rcl
std
lock
push
fidivrl
push
cmp
cmpsl
sub
fldcw
loopne
data16
clc
sti
into
std
dec
xchg
sub
std
pop
jl
divl
or
mov
fdivrl
cmp
and
addr16
pop
repz
push
call
je
jns
xchg
dec
lods
dec
int3
pop
mov
in
push
gs
ljmp
arpl
jg
bound
fdivrp
sahf
push
pop
inc
pop
dec
jge
mov
mov
xchg
lock
cmp
test
out
push
loopne
mov
clc
mov
mov
clc
lea
pop
cmp
call
mov
repnz
cmp
cmp
mov
inc
push
stc
rol
icebp
sub
inc
cmc
fmul
pop
shl
fwait
jo
xchg
and
mov
repz
pusha
outsl
mov
push
mov
punpcklbw
inc
add
addb
in
movsl
js
out
std
or
jge
xorl
cmp
cmpsb
outsb
dec
push
jns
outsb
mov
push
mov
cmpsb
xchg
sbb
pop
call
or
aas
pop
pop
aam
hlt
xchg
jmp
out
adc
jno
popa
pop
or
shlb
xor
ja
cld
testb
cwtl
outsl
fnstenv
xchg
inc
jbe
roll
xchg
inc
cwtl
in
xchg
adc
cmp
popf
test
leave
adc
cmp
jp
hlt
inc
pop
shlb
mov
push
jl
inc
nop
jno
daa
cmp
or
pop
xchg
mov
add
inc
jb
imul
add
rclb
and
adc
gs
aad
cmp
mov
inc
mov
lea
ja
sahf
fidivs
pop
daa
mov
mov
gs
mov
sub
pop
into
imul
jge
insb
mov
rcll
or
and
or
pop
shl
std
sahf
jmp
pop
mov
mov
outsb
mov
fucomip
sub
cmp
imul
or
or
mov
adc
cmpsb
pop
insb
dec
xchg
cltd
scas
jle
sti
inc
jbe
lahf
fidivrl
int3
mov
loop
out
inc
mov
and
push
movb
arpl
push
mov
incl
push
in
insl
ljmp
leave
test
movsl
pop
loop
outsl
daa
mov
out
scas
jle
fxch
xor
iret
mov
fiadds
sti
xlat
ja
fcomi
mov
xchg
and
fldt
inc
daa
or
sbb
mov
shrb
pushf
pop
push
dec
and
std
icebp
mov
mov
sarl
xlat
testb
notl
mov
popa
mov
cmp
mov
repz
adc
mov
ss
movsb
in
out
push
adc
test
std
icebp
in
ret
fstl
mov
imul
int
dec
jns
push
scas
jp
mov
jecxz
insl
dec
mov
imul
pushf
jb
outsl
fs
aas
and
imul
lret
dec
mov
negl
roll
cli
jg
cmp
mov
out
mov
in
adc
popa
in
and
call
cmpsl
sti
inc
lcall
pop
cltd
rcr
add
in
aad
sbb
add
dec
xlat
mov
add
pushf
push
mov
insb
shlb
or
cmp
loopne
mov
pop
jno
out
shl
or
adc
mov
jns
xchg
mov
mov
ret
xor
mov
xchg
xchg
aas
test
or
in
subb
pop
idiv
js
movsl
xchg
lock
mov
and
sahf
dec
pop
enter
jl
out
push
daa
dec
or
fs
cmp
sub
and
or
icebp
mov
inc
cli
cmp
cld
cmp
loopne
addr16
lds
ds
imul
mov
jg
int3
xchg
test
push
divl
out
pop
cmpsl
and
dec
mov
bound
mov
out
loop
clc
push
addl
fisubrs
mov
jbe
cs
jne
data16
cmpsb
sub
icebp
xchg
add
jp
mov
or
test
jns
push
loope
or
pop
cwtl
hlt
or
out
mov
dec
loop
cmp
cmp
hlt
xchg
bound
sub
jno
rcrl
out
push
xor
nop
roll
in
push
js
pop
out
aas
sbb
cmpl
and
sahf
stos
xchg
je
mov
jo
test
xchg
add
imul
pop
mov
inc
jmp
test
stos
hlt
imul
or
jg
fs
mov
and
ret
out
movsl
inc
iret
pop
pop
push
add
cmp
or
fmul
jge
lea
ffree
rcl
pop
aas
lods
jae
push
mov
sbb
xor
xor
test
inc
hlt
movsl
lret
lea
int3
fildl
stos
test
aad
out
inc
xchg
adc
mov
fs
ljmp
jo
cmc
push
scas
mov
decb
test
xor
ficompl
std
push
lea
fsts
sarl
subb
lods
sub
adcl
loope
aas
out
cmp
xor
imul
jo
mulb
cmpl
sti
xchg
call
mov
xchg
push
rolb
pop
inc
std
inc
jge
xchg
dec
sbb
movsl
push
lea
fmull
aas
lock
xlat
in
mov
arpl
push
push
cwtl
mov
push
pop
xor
rcrb
out
dec
pop
icebp
in
mov
lea
xorb
and
fsubs
and
fdivp
in
xor
das
repz
in
or
xchg
xor
icebp
lock
push
push
aas
iret
sub
add
and
lods
cmc
add
jne
idiv
and
jno
fisubrs
jns
mov
or
shl
and
mulb
jmp
cmpsb
cltd
das
push
pop
fdivrl
repnz
shlb
mov
xlat
mov
cltd
cmp
mov
jp
cmp
push
and
out
cld
mov
sub
add
inc
ret
dec
or
jbe
add
add
sbb
cmp
in
imul
std
mov
stc
scas
sbb
inc
in
push
and
loop
sar
outsb
iret
sarl
movsl
adc
jnp
mov
faddl
loopne
pop
mov
in
int
insl
cld
inc
lret
loope
inc
xchg
addb
or
mov
add
jmp
cmp
scas
jge
or
mov
stos
cli
cltd
mov
andl
mov
xor
jns
repnz
jns
pushf
jne
xlat
data16
xor
ja
dec
aas
call
lcall
dec
cmpl
nop
sub
aad
cld
push
fprem1
arpl
pop
adc
lret
aas
ljmp
je
sbb
aas
jmp
cmpsl
fidivrl
xlat
cmp
inc
pop
loop
push
or
lock
pop
call
adc
push
fsub
adc
xor
cld
orb
inc
add
call
mov
cmpsb
add
cmp
xchg
sbb
aaa
out
lret
std
out
loopne
jge
mov
clc
jg
iret
jnp
outsl
cmpl
addr16
cld
and
or
mov
mov
or
and
push
xchg
mov
or
inc
xor
add
push
jbe
data16
cmp
int3
insb
insb
aad
clc
jno
pusha
mov
fs
fnsave
out
sub
lods
incl
scas
in
push
push
imul
dec
mov
jns
xor
pop
sar
in
push
int3
ja
jp
jo
inc
dec
out
cmc
imul
dec
loope
mov
pop
pop
and
cmc
sbb
jbe
sub
fidivs
lahf
xor
mov
in
aas
movsl
fcoms
jle
and
jnp
ss
shll
cmc
test
lock
xor
jge
xchg
fld
inc
xchg
inc
call
mov
jne
idivl
insb
adc
loopne
lock
js
jl
mov
sbbb
inc
fwait
dec
icebp
rep
dec
cld
daa
fld
sti
aad
rcrb
test
jo
jl
pop
fidivs
inc
flds
cwtl
adc
int3
dec
out
and
nop
pop
test
jmp
iret
cmpl
lahf
into
ret
mov
loope
push
lods
xor
daa
cmp
cld
inc
ljmp
lea
scas
mov
inc
std
jno
mov
stos
xlat
jns
dec
xor
push
fbld
jmp
leave
dec
jge
jg
lods
fistps
or
clc
movl
cmp
jo
mov
inc
mov
adc
outsl
sub
and
out
jne
int3
js
test
cmp
or
pop
movsb
subl
shr
xchg
mov
jbe
jge
mulb
lods
lock
jnp
into
icebp
adcl
mov
mov
ficoms
adc
clc
mov
lds
jecxz
aaa
gs
jbe
mov
stc
add
arpl
das
addl
jmp
cmp
ljmp
xchg
out
mov
add
xchg
idivl
fadds
cltd
imul
pop
cmc
push
cld
dec
inc
arpl
into
mov
jnp
jnp
mov
icebp
inc
in
inc
lret
lea
mov
adc
pop
sbb
jge
or
out
std
or
add
jmp
addr16
jmp
clc
mov
dec
cmp
sbb
jo
test
js
sahf
push
pop
mov
cmp
inc
leave
mov
pop
addr16
and
adc
jns
or
pop
xor
sti
gs
sahf
adc
add
jno
xor
jmp
cmp
leave
fmulp
dec
shrb
mov
cld
inc
xor
int
xchg
lret
fistpll
out
lods
ja
mov
cmp
inc
fidivs
xchg
outsl
fimull
movsl
enter
cmp
mov
rclb
fidivrs
jg
pusha
jl
or
mov
cld
dec
cmp
jae
test
cli
push
adc
cmc
negb
dec
jg
and
sub
cltd
inc
call
pop
in
lock
pop
mov
sbb
mov
ljmp
xor
pop
mov
shll
in
inc
das
insb
test
popf
into
cmp
scas
dec
push
rcll
shr
mov
in
mov
add
inc
loop
mov
jg
loopne
mov
sbb
hlt
aam
sahf
dec
js
inc
jmp
xchg
pop
jge
mov
adc
stc
xchg
loope
xchg
stc
xor
and
subl
addb
xor
and
fiaddl
push
fsubp
cmc
add
cli
xor
and
dec
or
into
bound
out
in
ja
or
in
xor
pop
jg
sub
fidivs
addl
outsl
aas
pusha
xchg
mov
cwtl
out
cmp
cmp
loop
in
das
popf
divl
imul
pop
lea
popa
jbe
adc
inc
mov
scas
mov
pusha
fs
mov
push
cmpb
jo
pop
jg
loopne
cmp
test
stc
cmp
xchg
testl
addr16
es
aam
push
arpl
pop
bound
jmp
pop
lahf
shlb
ja
out
jb
out
iret
mov
push
cld
leave
pop
dec
ret
popa
adc
ss
pop
cmc
loop
and
fstpl
int3
in
cli
cmp
stc
in
sbb
jle
scas
and
push
js
cmp
idiv
cmp
mov
call
aaa
dec
pop
rorb
neg
insl
ja
inc
shrb
push
leave
lea
dec
mov
repz
mov
lret
icebp
and
sub
les
pop
outsl
cmp
clc
or
icebp
mov
imul
mov
adc
xor
rorb
xchg
mov
cld
jno
fidivrl
jbe
pusha
cmp
aaa
call
outsl
jl
and
push
cmc
add
and
jno
out
out
adc
fdiv
xchg
dec
arpl
sbb
ds
jno
cmc
lahf
cwtl
jecxz
in
cld
mov
idiv
push
xor
and
mov
movsl
aam
mov
mov
dec
jbe
xor
inc
cmp
clc
js
push
cmp
inc
pusha
decl
aaa
lret
inc
adc
inc
in
pop
aaa
jne
sub
adc
cmp
mov
push
repnz
cmp
cmpsb
jo
iret
std
popa
push
into
cmp
insl
pushf
dec
mov
int
pop
mov
jne
mov
fdivl
pop
outsl
jmp
outsb
addb
lret
push
stos
lret
and
push
xor
mov
fiaddl
lea
push
scas
jns
pop
or
dec
mov
insl
aas
pop
fwait
rol
or
lea
in
jns
mov
sahf
cwtl
loope
jecxz
jmp
jge
and
and
push
lahf
icebp
mov
les
jecxz
pop
lea
ja
sub
cmp
dec
aam
sbb
cmp
sti
addb
lahf
filds
jmp
leave
jne
or
mov
sti
hlt
clc
lea
pop
or
repz
int3
idivb
stc
pop
sbb
cltd
sti
push
std
adc
popl
orb
jg
and
dec
orl
rcll
jp
adc
jne
jno
push
jo
inc
data16
idivb
or
add
pop
inc
cwtl
repnz
pop
cmc
sahf
testb
lock
mov
push
pop
mov
push
push
xchg
cmpsl
fisubl
mov
outsb
fnstenv
mov
icebp
and
adc
cmp
or
fisttps
sbb
inc
test
daa
mov
repz
jno
and
int
dec
cwtl
fcoml
loope
stc
jecxz
pop
ret
pop
sahf
mov
push
sahf
fucomip
call
push
lea
xor
shll
out
stc
mov
push
dec
jp
bnd
sbb
jge
dec
addr16
rol
popa
jg
cmp
enter
mov
aad
fwait
in
xchg
mov
sbb
jno
and
or
les
sbb
mov
fnclex
imul
and
je
test
stos
das
out
cli
lea
mov
adc
dec
fiaddl
sub
push
adc
lods
jbe
or
and
repnz
hlt
call
sbbb
aam
sbb
and
pop
dec
add
rcll
xor
mov
sub
gs
cmpsl
shl
test
cltd
fwait
lock
mov
test
push
jp
mov
xchg
add
scas
ljmp
sbbl
push
dec
sub
mov
and
aas
mov
shr
jne
push
ret
push
sbb
fidivl
cmp
xchg
push
pop
pusha
pusha
xor
movsb
int3
jge
int
pop
lock
push
xchg
xchg
and
fistl
xor
jo
popa
in
rolb
xchg
ja
push
jns
sbb
push
addl
mov
sti
xchg
loop
gs
leave
mov
mov
lods
dec
repnz
inc
xor
add
out
cwtl
adcl
xchg
or
adc
fimuls
push
idivb
mov
pop
clc
cmp
pop
push
fisubs
movl
and
mov
inc
jge
sub
push
jp
cmp
pop
mov
loope
test
jae
ljmp
fadds
or
mov
enter
hlt
jl
rorb
int
mov
daa
into
sub
daa
out
push
rorb
aas
cmp
or
and
out
pop
insl
imul
lret
repz
mov
ss
outsl
aad
in
mov
fildll
dec
rorl
or
lock
pop
inc
popa
xchg
jb
icebp
jle
cmpsb
jg
neg
test
fisubs
xchg
bound
adc
ret
inc
out
mov
cmp
jae
add
cmp
mov
adc
mov
leave
sahf
or
pop
pusha
jns
pop
adcl
int3
jnp
xchg
clc
mov
sbb
push
mov
loop
cli
ss
clc
xchg
clc
pop
add
scas
shlb
push
pop
jne
iret
mov
xor
ja
pop
mov
hlt
and
mov
lahf
and
jns
fidivl
mov
sub
stos
cmp
rorb
mov
xchg
xorb
in
sti
xchg
push
insb
xchg
xchg
sti
shl
int3
aad
dec
pop
inc
xchg
jnp
jge
cmp
pop
mov
icebp
inc
out
inc
sbb
int
sarb
hlt
imul
fst
les
jl
mov
out
sbb
jle
push
loope
pop
repz
call
out
jns
mov
std
imul
jo
jns
mov
add
clc
cs
or
pop
int
jno
and
mov
sbb
mov
clc
mov
add
scas
clc
mov
cltd
mov
jo
lcall
add
int3
rorl
xchg
inc
lahf
cmp
out
cmp
aaa
jb
jbe
pop
in
push
add
mov
sti
sahf
aas
push
sti
lods
in
insb
arpl
mov
pop
xchg
inc
outsb
jbe
clc
js
movsl
call
ror
jge
lcall
cmp
jmp
fsts
push
test
sbb
scas
add
loop
pop
push
or
fmulp
lods
pop
dec
push
xchg
cld
mov
jg
fcmovnb
clc
inc
jns
jnp
fyl2xp1
mov
icebp
lock
inc
dec
jmp
test
fxam
pop
arpl
xchg
push
jecxz
xlat
jge
call
out
xor
jno
push
jg
gs
shll
jnp
into
jecxz
stos
and
adc
call
and
jo
sub
mov
mov
imul
mov
fnstcw
stc
xlat
mov
dec
fsubrl
add
int
sarb
mov
fwait
push
xor
mov
jecxz
xor
movb
adc
in
mov
jno
lods
pop
add
cs
aam
sub
pop
xor
inc
inc
add
shll
cmp
clc
cmp
ja
pop
rcr
sbbl
ljmp
lret
in
jp
fdivl
pop
and
push
jno
jmp
leave
test
das
ficoml
pop
shrb
xlat
mov
popf
das
stc
inc
stc
and
push
and
int3
jmp
testl
dec
mov
inc
sub
xchg
xlat
pop
adc
sub
sub
add
lock
icebp
or
ja
cmp
arpl
pop
sbb
jbe
push
xchg
int
int
clc
popf
sbb
mov
cmp
mov
sar
lods
jl
sub
mov
scas
incb
add
ror
mov
xor
sub
neg
or
sbb
enter
jmp
jno
int
std
call
cld
les
rorl
movsb
ret
lret
imul
pop
xor
int
push
ja
icebp
mov
addr16
idiv
out
xlat
jno
push
lahf
stos
test
fmuls
test
data16
iret
outsl
add
test
fsubl
loopne
cmc
push
push
cwtl
pop
popa
fwait
clc
adc
clc
xlat
push
jae
movb
or
adc
jnp
mov
jl
xor
mov
ret
scas
push
xchg
out
xchg
mov
jne
in
mov
dec
mov
xchg
pop
or
pushl
push
enter
pop
data16
iret
or
jnp
bound
ret
cmpsl
push
push
fisubs
push
call
pop
dec
rep
popa
fwait
gs
fstpt
jl
cli
iret
popa
xchg
sbb
rolb
testb
ret
pop
add
push
int
int
xor
sar
mov
popa
and
and
jns
pop
jge
jno
addl
flds
push
or
in
inc
sti
fsubl
insl
bound
lds
push
and
arpl
xchg
cmpsl
push
imul
sti
pop
and
cmp
clc
ret
into
push
jge
les
int
dec
lock
xor
sbb
pop
cmp
xchg
cmp
sub
cmp
sub
cmc
or
arpl
imul
decb
mov
mov
int3
lcall
int
add
icebp
nop
cmp
das
mov
icebp
loopne
or
popf
rcrb
movsl
loope
outsb
in
imul
rol
fcmovbe
ret
adc
push
bound
cli
and
or
jo
and
pop
or
iret
outsb
jg
jge
cmp
mov
mov
in
lea
push
mov
mov
pop
lcall
inc
mov
mov
push
sti
push
and
jge
push
cmpsl
inc
stc
shlb
sti
lock
lock
inc
sub
pop
sub
mov
fisubrs
or
add
cwtl
scas
icebp
mov
add
cli
sti
mov
fimuls
js
loop
sub
in
push
rcll
sbb
adc
call
roll
inc
sbb
jge
xor
push
sahf
loopne
out
add
xchg
sub
jecxz
loope
xor
mov
fcmovbe
adc
mov
jo
jmp
js
push
out
sbb
add
popa
insl
movl
cmp
ficoms
lahf
and
xor
push
pop
pop
lahf
jbe
or
loopne
add
loopne
sbb
inc
or
ficompl
std
inc
mov
aas
cmpsb
clc
arpl
cmc
cmp
pop
pmuludq
in
adc
sbb
cli
mov
cltd
in
xor
data16
mov
ret
xchg
fucomp
mov
cli
insb
dec
sbb
push
jmp
mov
add
pusha
ss
jge
cmp
pop
mov
jl
mov
jo
jae
cmp
clc
xor
push
addr16
shrl
xlat
jle
in
cmc
inc
addb
out
xchg
sub
test
pop
repnz
xorb
or
fsub
inc
xchg
test
and
add
outsb
jp
dec
dec
ret
add
pop
insl
bound
adcb
popa
sbb
xor
enter
into
mov
sub
in
and
xor
push
ds
xchg
xchg
mov
mov
inc
jl
jo
dec
add
lds
int3
add
fnstenv
jne
fdivrs
arpl
sbb
inc
out
mov
inc
outsb
jl
into
gs
mov
or
cmp
insb
push
or
mov
cld
je
int3
cld
div
push
clc
push
push
mov
xorl
in
inc
xchg
mov
xchg
push
mov
ss
or
clc
push
hlt
in
aad
pop
mov
and
sarl
sarb
out
enter
bnd
loope
dec
add
jg
insb
sahf
rorb
jecxz
push
sub
incl
or
sbb
jo
xchg
hlt
jne
popf
data16
movsl
mov
jg
push
mov
jle
adc
or
fldz
jno
in
addps
sub
lahf
loopne
sub
inc
sub
stc
xor
add
xor
loope
dec
xchg
mov
push
mov
mov
cmpsb
arpl
mov
sahf
or
mov
movb
xor
mull
fldenv
xchg
rolb
xlat
call
push
xchg
or
popf
aaa
and
mov
mov
ret
or
fldcw
jno
shll
sbb
adc
mov
dec
adc
inc
and
adcb
mov
dec
std
sbb
pop
sbb
les
fsubrs
cwtl
adc
icebp
filds
mov
cs
leave
sbb
jns
mov
xchg
lock
sarl
dec
clc
int3
lahf
mov
movsl
inc
cmc
jnp
loope
test
mov
sbb
inc
out
dec
sbb
and
gs
std
loopne
adcb
jge
sbb
nop
stos
outsb
vcmpss
arpl
adc
xchg
or
arpl
fisubl
cmp
cmp
jno
ljmp
repnz
mov
stc
cli
arpl
mov
pop
mov
sbb
testl
xor
fsubrp
mov
shld
pop
sub
cmp
insl
add
sub
rcl
decl
mov
add
and
mov
and
cs
shrb
outsb
jge
push
cltd
xor
pop
or
and
mov
push
inc
xor
movsb
in
call
fnstcw
add
hlt
out
fs
inc
and
pop
daa
or
aas
or
xor
mov
xchg
loope
push
rclb
jle
jb
xchg
cmp
mov
test
cld
fs
and
mov
shl
inc
test
inc
enter
lahf
testl
adc
icebp
in
addl
adc
int
insb
sbb
gs
fcoms
jle
jno
inc
nop
mov
or
sub
sub
in
stc
mov
jnp
test
lock
pop
inc
out
rclb
mov
push
xor
adc
push
roll
arpl
push
jne
push
in
xor
inc
sbb
outsb
fistps
inc
es
jecxz
js
ret
in
mov
push
xchg
rcrl
cmp
adc
inc
pushf
scas
jge
or
add
nop
nop
mov
jge
xor
push
insb
js
pop
iret
fnstenv
fcmovnbe
ja
pop
in
sub
add
push
push
lea
or
sti
fiadds
cwtl
xchg
dec
fmull
push
in
out
or
or
cmp
mov
cwtl
cmp
js
ret
jnp
imul
test
inc
std
add
dec
outsl
xchg
pop
in
push
lahf
inc
fnstcw
inc
icebp
sbb
icebp
jbe
js
lea
cld
xchg
pop
imul
or
stc
lcall
enter
popf
flds
sti
loope
int3
inc
repnz
cli
nop
faddp
fmull
mov
pop
or
cmp
sbbb
lret
aad
mov
imul
mov
repz
lea
lods
fwait
roll
jmp
cltd
sahf
js
sti
and
jbe
clc
sub
push
dec
pop
inc
out
adc
push
loop
jle
push
push
mov
and
stos
in
xor
mov
inc
int
out
js
std
lock
test
xor
dec
cmp
rorl
stc
ffree
mov
xchg
mov
cltd
inc
clc
xchg
jne
cld
xchg
in
sub
jmp
pop
orl
test
pop
aam
enter
ud0
popa
movsl
fnsave
jns
jle
loope
shr
mov
rcrl
aaa
and
cltd
subb
cmp
pop
fucom
ljmp
ret
cmp
adc
lahf
push
pop
push
cmp
push
or
push
test
jne
and
imul
outsl
mov
scas
dec
loope
or
sub
cltd
add
test
and
data16
in
jae
sar
loope
xor
jecxz
push
rorl
orb
mov
push
push
mov
xorb
sar
and
rcrb
jecxz
js
jmp
inc
jb
adc
dec
test
dec
testb
aaa
mov
js
jns
negl
jae
out
movsb
sahf
inc
cli
shll
mov
cmp
shll
movsl
notb
ljmp
sbb
gs
nop
sbb
ja
cli
or
in
inc
or
push
cmpb
xchg
or
cmp
jg
outsb
scas
lods
rorb
fsub
and
in
and
xor
pop
mov
arpl
xchg
pop
iret
clc
mov
mov
incb
push
daa
std
pop
pop
clc
dec
jae
das
xor
mov
sahf
insb
int3
jecxz
aaa
outsl
inc
in
dec
test
dec
inc
insb
gs
cmp
sbb
push
cmp
add
icebp
addb
jnp
pop
jnp
sub
aam
adc
or
popa
andb
data16
les
cld
test
fistpll
or
stos
out
aas
mov
idiv
ljmp
fs
jp
lahf
pushf
divl
lock
add
and
ljmp
icebp
cmpsl
inc
add
repz
mov
out
cli
faddl
xorl
inc
int3
add
fs
dec
int3
popa
inc
sbb
push
ss
xor
pop
ja
xchg
jne
lret
mov
inc
in
mov
xor
repnz
mov
pop
push
mov
jb
roll
stos
hlt
push
les
stos
pop
repz
and
jno
cld
call
inc
jmp
and
pop
push
jp
imul
cmp
repnz
arpl
adc
cli
loope
lock
push
jle
cli
inc
jae
js
addb
cmpb
jge
insl
add
mov
fildl
pop
dec
jmp
lret
lods
je
test
and
test
fbld
sahf
pop
sub
or
lahf
outsl
aam
int3
inc
jbe
mov
mov
inc
jg
jecxz
push
mov
xor
out
je
cli
aas
fcomp
xchg
add
or
jnp
or
stc
stc
jl
mov
pop
xchg
imul
cmpb
out
jne
gs
cmp
add
dec
incb
inc
inc
lea
frstor
testl
cld
lods
push
sbb
add
jecxz
mov
fnstcw
rorl
scas
pusha
imul
orl
stc
std
lea
dec
lret
fnstsw
pop
cmp
daa
stc
clc
cmp
or
mov
lret
pop
sahf
pop
jo
xlat
daa
ss
popa
dec
fdivr
je
fnsave
cmp
arpl
test
arpl
lahf
add
in
sbb
icebp
gs
mov
mov
and
movsb
sti
hlt
inc
fisubs
into
shr
std
call
adc
div
add
or
jle
nop
inc
cld
pushf
mov
add
xchg
je
aaa
push
dec
cmpsl
dec
sbb
inc
test
cmp
sub
sbb
pop
rol
push
sbb
negb
sub
sub
jl
push
cmp
push
enter
sub
pop
loope
imul
push
push
or
inc
insl
lcall
and
ss
mov
out
and
sbb
inc
cmc
fs
lea
xor
inc
jne
in
xor
jge
push
dec
jp
adc
in
repz
inc
xchg
xchg
test
dec
mov
negl
fstl
in
int3
test
xor
cmc
or
adc
pop
enter
cmp
in
cld
xchg
mov
adc
data16
pop
jmp
lods
aaa
cmc
inc
cwtl
jb
lods
leave
pop
cmc
insl
jl
pop
ds
clc
xchg
mov
push
imul
mov
pop
mov
xor
xor
std
imul
or
push
pop
xor
fstl
inc
xor
pop
mov
movsl
jne
mov
test
sbb
rolb
hlt
repz
movsl
push
mov
lret
jne
dec
arpl
pop
pop
fidivrl
orb
sbbl
pop
sub
es
filds
jae
xlat
push
cld
dec
sbb
repz
sldt
jl
mov
mov
std
mov
sarl
or
and
xor
cwtl
cltd
jl
mov
andl
enter
inc
ret
inc
xor
or
jne
enter
cmc
inc
in
mov
aam
push
test
sti
add
jnp
cmp
sbbb
xor
or
xor
mov
loopne
dec
add
or
mov
cmp
mov
xor
pop
pop
insl
cwtl
fldl
pusha
ret
mov
rolb
fstpl
or
jge
or
dec
sub
xchg
rcl
add
xor
outsb
cwtl
js
push
xchg
pop
cmpl
fimull
cmp
in
test
xchg
fistl
and
add
in
je
popl
test
std
and
test
mov
or
pop
mov
jb
mov
dec
repz
push
jmp
jg
popa
jo
jb
repnz
push
gs
icebp
mov
mov
fmull
js
call
sti
cltd
iret
fidivrs
jmp
out
mov
pop
fcompl
mov
out
cmc
jmp
cmp
aaa
shll
clc
or
insl
mov
repz
mov
dec
stc
xor
cmp
int
mov
rolb
lahf
mov
outsl
cwtl
mov
push
pop
ds
jge
jbe
inc
jp
inc
and
inc
cltd
repnz
inc
xchg
xor
gs
fsubrl
jnp
rorl
lea
and
add
shl
gs
popa
jecxz
and
pop
popf
sbb
xor
sahf
xor
scas
mov
push
and
cmpsl
inc
mov
iret
roll
negl
sti
dec
outsb
int
leave
push
jg
aas
xchg
je
jp
mov
add
aad
adc
loopne
inc
mov
lea
fldenv
leave
shlb
fstpl
je
adc
int
push
fcoml
mov
imul
fxtract
fs
std
add
out
and
clc
subl
or
arpl
mov
mov
cwtl
pop
push
das
pop
inc
xor
cmpsl
mov
inc
fstl
test
ficoms
mov
mov
repnz
stc
mov
out
out
mull
sub
adcl
insl
xchg
ret
icebp
or
repz
pop
in
mov
mov
in
ret
sub
cli
mov
imul
cmp
in
sub
je
pop
lret
je
jbe
repz
fistps
cmp
or
cmp
pop
mov
jg
iret
cmp
stc
inc
inc
mov
pop
cli
or
cld
test
int
arpl
and
and
scas
jge
cmp
pop
or
pop
cli
push
push
ficoms
outsb
add
ljmp
lret
ret
push
mov
lea
sub
in
cld
jge
jno
sub
mov
hlt
pushf
fs
jp
adc
mov
imul
fisubl
sti
jnp
sti
fstl
movsl
or
test
sub
mov
das
or
mov
fdivrp
inc
push
loopne
lea
or
test
ffreep
in
cmp
sbb
sti
inc
in
jl
cmp
sub
fsubl
aas
push
insb
lcall
mov
inc
push
cmp
scas
idiv
fstp
outsb
mov
enter
jg
mov
push
dec
cmpsb
test
jmp
sbb
cwtl
fildl
jg
inc
loope
push
dec
xchg
xor
dec
orl
jo
ljmp
imulb
mov
in
mov
icebp
out
int3
icebp
pop
jecxz
mov
xchg
pop
pusha
stos
into
rcl
inc
xchg
xchg
aas
mov
adc
dec
out
flds
jge
and
adc
pop
iret
imul
aad
pop
lds
jno
push
pop
push
mov
call
mov
pop
cli
rcr
jae
mov
or
inc
outsl
sbb
js
fstpt
mov
cld
or
sahf
mov
bound
into
aas
cmp
xor
sti
cmp
add
cmp
cltd
popf
aam
inc
sti
add
inc
sti
scas
cli
lcall
jp
test
lock
cmp
sti
loop
aad
jge
sbb
mov
cmpsl
mov
push
mov
shl
inc
sub
xor
out
sbbl
lret
and
int
fiaddl
add
ljmp
push
js
aam
incl
and
adc
jge
sbb
cmc
jns
adc
in
xor
cmp
test
push
cmpsb
cmp
jg
out
cmp
and
and
repnz
gs
mov
inc
or
repnz
jg
outsl
lahf
jle
ja
cmp
jecxz
sub
fwait
call
jge
mov
loope
mov
outsb
or
repnz
icebp
sbb
push
ss
leave
imul
icebp
mov
es
or
aas
movsl
xchg
pop
mov
jmp
enter
lea
sti
call
or
pushw
std
xchg
xchg
scas
add
call
imul
into
das
js
pusha
repz
rorb
mov
jl
dec
sarl
lea
xor
int3
roll
sbb
inc
repnz
mull
or
pop
outsl
pop
or
testl
sub
in
mov
in
int3
loop
incb
push
mov
fs
sbb
movsl
test
mov
cmp
rorb
fcom
pop
sbb
mov
incl
ja
cmp
xor
out
std
adc
dec
dec
test
int3
cmp
sbb
cmpb
into
cmp
popa
cs
sub
adc
push
jbe
or
fildl
and
xchg
out
mov
xorb
mov
add
clc
dec
and
xchg
je
or
sub
mov
cmp
aad
sub
and
and
pop
les
cmpsl
adc
push
pop
inc
mov
mov
xchg
sbb
push
addl
lea
xchg
aas
adc
aas
dec
and
adc
or
inc
jo
pop
enter
dec
push
repz
xchg
daa
dec
pusha
andl
test
int
lock
sub
fnstcw
push
cwtl
push
cmp
arpl
mul
lods
push
sub
add
mov
jg
mov
hlt
pop
adc
add
cmp
stc
xchg
dec
stc
std
mov
cmc
in
cld
outsb
fistps
dec
je
pusha
cld
or
add
cld
push
or
hlt
cmp
addl
repz
jne
lcall
sar
in
int
mov
cmp
pushf
int
aad
sbb
xchg
pop
lcall
imul
add
insl
inc
add
lcall
popf
outsb
dec
cmp
les
clc
call
fsubp
clc
int3
add
inc
sub
and
mov
pop
push
mov
into
lret
in
pop
test
xchg
aam
rep
lahf
jbe
mov
pop
xchg
or
adc
lret
ljmp
std
imulb
cmc
idivl
dec
mov
cmp
lahf
out
imul
mov
lock
jns
rcrl
adc
dec
cli
cmp
mov
cmp
xchg
jae
fnstsw
lock
inc
mov
and
jnp
fisttpl
cltd
mov
cmp
fstp
shrb
icebp
push
inc
inc
test
into
cmp
mov
push
fwait
out
test
pop
push
std
inc
fstpl
and
std
add
lods
fstpt
cmp
mov
test
sbb
or
cmpsl
aam
xor
hlt
jo
pop
stc
adc
push
pop
ss
jg
cmp
jmp
aaa
mov
and
cmp
in
jg
cltd
imul
jo
aas
sbb
inc
std
xor
mov
lcall
data16
xchg
jmp
aam
xchg
mov
decl
xchg
notb
fwait
test
or
int3
loop
add
lds
jge
mov
js
lods
pop
fists
mov
inc
ret
in
inc
push
gs
mov
lods
jge
rolb
lcall
xchg
or
pop
leave
sub
jns
and
sarl
mov
jg
js
repnz
fiadds
jbe
or
dec
mov
ljmp
popf
mov
lock
adc
mov
mulb
sbb
clc
cmp
and
mov
or
lds
jne
pop
and
adc
cmp
jmp
xor
enter
int
test
lret
fstps
xchg
mov
push
lds
outsb
push
rcrl
loop
jno
test
test
pop
fs
add
ret
fld
fs
xchg
cmp
orl
mov
pop
movsl
mov
add
stc
add
imul
jb
sbb
imul
pop
sbb
scas
pop
pop
shrb
push
aad
outsl
sbb
mov
aad
push
movsb
jns
dec
jno
push
gs
xor
imul
aaa
add
rcrb
cmp
lods
fdivrl
lock
inc
and
adc
in
enter
aaa
fisubrs
subb
jg
inc
fdiv
mov
outsb
icebp
cmpsb
cmpb
repnz
lret
fidivl
inc
or
leave
idivl
scas
out
jle
cmp
movsb
in
addb
cltd
inc
mov
shl
addl
xorl
call
out
and
jp
mov
popa
add
insb
iret
xchg
testl
fdiv
inc
mov
lods
mov
xchg
call
addb
inc
je
push
xor
jnp
popf
mov
jg
or
sarb
sub
aad
jp
mov
cmp
add
out
jp
jl
jl
fstl
lahf
cmpsl
mov
in
and
adc
aas
xor
pop
out
test
xor
push
int3
and
fmul
mov
cs
jne
decb
inc
adc
outsl
popf
jne
test
push
and
sbb
pop
movsl
xchg
std
xor
sub
gs
and
rorb
and
orl
mov
jecxz
mov
dec
xchg
mov
mov
test
daa
xor
mov
imul
ljmp
inc
popf
mov
push
outsl
mov
daa
jns
push
xchg
mov
mov
rorl
jl
int
out
psubw
adc
into
xchg
ja
jns
mov
fwait
iret
imul
pop
jne
out
xlat
xlat
jle
sbb
rcll
xchg
or
call
jp
mov
enter
pop
inc
std
nop
pusha
and
push
jge
insb
push
sahf
loop
sti
push
xchg
cltd
out
or
sbb
int3
pop
and
fimull
sbb
or
test
shrb
jnp
jb
mov
jp
mov
or
jmp
jg
push
push
mov
aaa
inc
nop
push
sbb
das
jle
out
aaa
mov
add
mov
repnz
jbe
dec
shrb
lods
mov
popa
icebp
mov
insl
fwait
jge
je
ficompl
xchg
mov
cmpsb
subl
sbb
add
test
cmpsb
sahf
jg
fst
fwait
aam
mov
out
cltd
movb
scas
neg
mov
fs
push
adc
fistps
jge
cmp
lock
mov
cmp
lea
fisttpll
scas
fldl
scas
fldl
stos
pushaw
orb
out
jns
stos
cmp
lock
xor
loopne
popa
ds
fiadds
push
clc
push
jp
jmp
imul
cwtl
fidivrl
pusha
out
aas
jnp
sti
popl
clc
push
adc
dec
mov
mov
imul
cmp
jne
inc
jge
out
xchg
andb
scas
fisttpll
test
push
xor
out
insl
stos
sahf
mov
jge
repnz
cmpsl
dec
mov
mov
shll
jge
xchg
sti
jge
clc
outsb
in
lret
cmp
popf
jns
movsb
fcomip
cmp
movsb
cmp
movsb
cmp
mov
out
push
jge
pop
lret
pop
mov
arpl
cli
not
mov
fdivl
icebp
mov
add
int3
decl
sahf
mov
stos
xchg
cmp
scas
lret
fnstsw
mov
xor
out
cmp
repz
das
int3
fiadds
sbb
aad
popf
push
popa
stos
inc
jmp
lahf
aas
lret
inc
in
cmp
divb
sub
cmc
int
loopne
jo
dec
outsl
jns
mov
push
mov
add
cmp
jp
pop
enter
add
and
ljmp
lock
push
lahf
sbb
pop
lea
jno
aam
arpl
fs
test
add
pop
add
inc
cld
and
popa
cmp
lcall
and
sbb
cs
in
jo
mov
xlat
into
sahf
or
in
mov
leave
push
mov
inc
fnsave
in
cmp
std
cltd
mov
pop
jmp
negb
and
je
out
nop
sbbl
out
mov
inc
pop
add
or
int3
add
sub
cltd
in
outsb
jle
pop
stos
sti
aas
out
and
fwait
or
fdivrp
sahf
pop
es
xchg
push
filds
and
mov
shll
and
push
and
fs
mov
ret
dec
inc
stc
adc
mov
cli
jns
ret
sbb
adc
push
fidivrl
clc
fildll
xor
lock
outsl
lock
outsb
add
sub
jno
sub
in
inc
fcmovbe
out
movsl
mov
mov
cmpsb
pusha
mov
mov
sub
cs
dec
xchg
inc
pop
push
out
add
lods
outsb
into
nop
int3
jg
xchg
xchg
sub
aam
inc
cmpb
cli
dec
jnp
push
incl
shlb
inc
push
mov
subb
repnz
loope
mov
mov
fldl
movsl
scas
iret
jmp
add
insb
mov
xlat
cli
pop
jae
sti
cmc
pop
enter
sbb
ret
inc
mov
lods
in
dec
ss
ret
dec
mov
push
dec
cmpsb
add
push
and
adc
and
shll
loop
inc
stos
in
in
sarb
sub
jno
mov
stos
lea
sti
sbb
mov
sbb
mov
pop
stos
sahf
dec
pop
mov
sti
mov
clc
aas
cli
xor
loopne
cmp
test
imul
daa
andl
pop
sti
jo
data16
pop
cmp
inc
and
in
cli
mov
call
subb
xchg
inc
xchg
adc
movb
int
pop
je
mov
jg
adc
movsb
pusha
jmp
mov
push
ss
loop
mov
mov
inc
in
out
fs
jmp
jbe
xchg
cmp
in
sub
xor
xor
push
lret
mov
test
jae
shl
aad
cmp
jmp
movsl
outsb
pop
test
lcall
orl
mov
push
pop
je
xor
jae
cmp
stc
enter
mov
out
lea
std
fisttps
push
pop
pop
cmpsb
cpuid
in
scas
mov
stc
fs
jae
fsubs
idivl
test
xchg
mov
jae
adc
sbb
push
pop
jo
xchg
imul
in
adc
mov
mov
in
cmp
inc
int3
das
push
pop
mov
jnp
jbe
cmp
ret
jnp
jp
push
ljmp
pop
fstpl
and
cmpsb
pushf
pop
push
push
lahf
mov
xchg
lret
idiv
mov
fisubrs
clc
jmp
inc
scas
jb
sti
in
mov
out
ret
dec
fistl
mov
in
add
loopne
fs
xchg
ret
or
inc
pop
xchg
add
lcall
lret
push
call
test
xchg
sub
stc
or
popa
mov
add
sub
faddl
in
xchg
shll
push
js
or
cs
mov
imul
add
lret
pop
push
mov
inc
inc
inc
in
call
or
xchg
lods
mov
fsubrl
ljmp
es
and
stos
cmp
mov
data16
push
out
sub
inc
ljmp
xchg
test
in
lea
je
or
xchg
cmp
shr
xchg
icebp
add
ds
dec
push
or
cmc
or
clc
insb
or
adc
push
cmp
repnz
push
xchg
ret
inc
pop
mov
add
mov
out
fdivs
outsl
jle
mov
adc
lea
mov
je
inc
inc
xor
inc
add
ret
popa
icebp
das
mov
mov
pop
int3
jge
mov
push
cmpsb
fisttpll
in
adcl
out
mov
mov
pop
mov
lea
aaa
cmp
test
imul
pop
pop
subl
mov
shrl
and
popf
sti
jnp
inc
jge
ljmp
adc
pop
sub
test
test
fadds
sbb
fdivrs
xlat
mov
dec
sbb
into
insb
fldcw
inc
mov
jge
mov
or
sbb
rcrb
dec
xchg
subb
shll
and
sbbl
xchg
mov
push
xlat
mov
andl
adc
pop
cmp
repz
sbbl
test
xchg
test
in
inc
jle
movb
or
inc
imul
jmp
in
icebp
add
cmp
sbb
fistpl
sbb
filds
inc
dec
jne
inc
xchg
xchg
shl
mov
movsl
mov
fs
jae
jmp
cmpsb
aaa
pop
jnp
push
clc
add
mov
into
aam
push
out
push
jnp
std
sbb
jbe
pop
sbb
push
mov
mov
push
cmp
outsl
and
add
out
rorl
bound
mov
fs
adc
jnp
shlb
dec
inc
mov
cmp
add
mov
xchg
jno
mov
fildl
aaa
imul
fdiv
cmpsl
stos
sbb
test
test
pop
jmp
orb
xor
inc
xchg
and
jmp
jae
xor
push
fcmovu
sahf
pop
push
or
out
inc
sarl
jp
and
icebp
pop
outsl
roll
sar
pop
push
xchg
out
or
jne
sti
rorb
jb
adc
pop
insl
outsl
out
stc
push
xor
dec
popf
mov
fdivrl
lret
cmp
jmp
lret
or
pop
inc
mov
pushf
xchg
xor
jnp
dec
pop
test
adc
scas
and
jp
sti
test
add
rcll
fscale
xlat
jp
lahf
data16
jae
scas
mov
imul
add
mov
incl
or
add
cmp
leave
sti
mov
js
testl
push
call
ja
mov
insb
out
fstpt
pop
xchg
mull
iret
sub
test
mov
jmp
icebp
loop
jmp
div
shlb
xchg
cmp
cmp
fistpll
xor
popf
lahf
push
out
out
pushf
imul
scas
mov
ds
lock
push
stc
imul
pop
jg
subb
inc
icebp
xchg
popa
shlb
sub
xchg
jns
fidivs
call
cmp
stos
ja
hlt
xor
xor
inc
ficoml
ret
jg
push
cmp
fs
mov
pop
out
pop
gs
iret
dec
fsubs
mov
inc
add
sahf
lahf
mov
inc
sub
xor
std
lods
cld
mov
aas
idivb
orl
pop
andl
cmp
pop
xor
loopne
ss
daa
adc
insl
test
inc
pusha
iret
add
or
stc
popa
inc
fldl
es
out
mov
stc
jns
mov
jb
mov
jp
fcos
cmp
lea
jnp
ror
inc
sbb
push
mov
pop
jnp
ss
or
movsb
mov
shll
mov
fists
mov
out
jmp
sbb
scas
jle
mov
inc
dec
push
mov
jge
push
cwtl
jno
dec
adc
arpl
lcall
repnz
insb
pop
cwtl
jbe
and
pop
addl
clc
pop
or
push
pop
jb
out
xor
jp
push
cmp
xchg
scas
push
pop
js
adcb
subl
aad
inc
movsl
dec
loope
push
pop
jbe
push
ds
jbe
rclb
int
mov
roll
out
shll
and
popl
cmp
mov
inc
repnz
mov
inc
ss
mov
cwtl
add
pop
and
lcall
imul
repz
stc
push
push
loope
clc
sti
xor
pop
ljmp
jbe
inc
push
std
fidivrs
js
shl
add
inc
xchg
sbb
test
out
push
icebp
repz
pop
or
mov
fucomip
arpl
cwtl
xor
lret
fisttps
xchg
out
and
or
push
lock
test
mov
jp
pop
dec
leave
fwait
insl
fwait
daa
fcmovu
pop
push
lret
pop
jno
and
sbb
xlat
sbb
rolb
xor
jne
jae
lcall
lock
pop
leave
clc
cli
sbb
jno
mov
xchg
leave
filds
dec
or
dec
adcb
in
jae
sti
or
inc
cmp
push
fdivs
pop
xor
pop
xor
lcall
push
loopne
jno
icebp
mov
jae
inc
jmp
fidivrl
mov
add
add
cmp
pop
jl
je
push
lret
cmpb
icebp
push
jbe
adc
mov
xor
mov
pop
cltd
mov
jl
lcall
cmp
sbb
stos
daa
orb
pop
sbb
fwait
cmpb
push
clc
and
add
fs
enter
aas
inc
cmp
stc
push
out
mov
or
push
inc
push
aas
jmp
mov
repz
mov
sbb
xchg
shrb
inc
outsb
jge
pop
in
inc
pop
test
stc
test
in
ja
repz
in
inc
jmp
fcmove
and
mov
add
pop
mov
insl
nop
adc
out
fstl
lods
xor
add
test
mov
loop
jnp
xor
mov
inc
clc
xor
jge
int3
icebp
push
loope
sbb
out
pop
xlat
pop
fs
insb
mov
mov
fcmovnb
clc
ss
popf
cmpl
dec
inc
rorl
jo
jmp
or
xor
in
mov
jle
jo
mov
je
inc
push
jno
jl
jmp
loop
aas
mov
ljmp
jl
inc
push
mov
mov
sahf
test
sbb
jnp
adc
sarl
scas
mov
fdivr
pusha
loopne
dec
sti
aaa
mov
shrb
mov
pushl
pop
jo
add
lahf
cmp
mov
das
bound
or
jo
jnp
nop
jge
or
mov
mov
sbb
cmp
js
repnz
sbb
push
xor
add
ficoml
int
dec
xchg
mov
mov
outsl
mov
mov
gs
jl
mov
sti
dec
pop
dec
cmp
jecxz
or
add
mov
loopne
mov
push
mov
repnz
std
and
pop
int3
xchg
cld
pop
pop
mov
cld
xchg
cmp
inc
lahf
lock
or
or
push
cmp
mov
fs
cld
ret
push
stos
jno
daa
mov
jl
adc
cmp
sahf
push
testb
jmp
insb
aad
pop
pop
mov
sti
decb
add
stc
xchg
mov
in
cmc
aad
popf
pusha
mov
inc
sbb
push
jno
xchg
imul
sub
lea
push
dec
cli
or
or
fsubrs
je
dec
test
add
add
fldcw
cmp
or
sub
inc
test
rcl
push
leave
adc
outsb
popf
mov
icebp
stc
aam
test
test
push
rorb
sbb
push
jge
xlat
lods
out
push
jae
inc
push
out
fists
sti
mov
roll
and
cmp
sbb
rcrb
fs
fcomip
std
fnstsw
in
mov
jg
lea
shlb
mov
loop
out
xchg
cli
jmp
jp
cmpsl
stos
cmp
out
push
and
ret
mov
clc
push
sahf
fdivrs
inc
ss
sub
rcrl
popf
enter
jb
pop
jge
pusha
in
jl
mov
pop
sbb
jg
xchg
cld
push
cli
shlb
adc
sar
pop
push
add
xchg
loope
aad
xor
pop
aaa
and
mov
insb
dec
sub
ficoml
sub
loopne
fs
pop
or
lea
movsl
add
adc
and
cmpsb
cltd
inc
cmp
inc
mov
jbe
push
xchg
sbb
or
jno
lods
cmp
clc
sbb
in
ds
lea
sub
jns
xlat
int
fstpl
and
inc
imul
ret
xor
popf
fnstsw
icebp
out
daa
xchg
popf
cmp
inc
loop
jmp
pop
sahf
xor
nop
shrl
popf
xchg
add
fld
jl
mov
and
dec
dec
add
add
iret
add
in
pusha
mov
shrl
pop
lods
lcall
sub
sbb
mov
punpcklbw
or
push
jns
ljmp
das
fyl2xp1
jl
xchg
cmp
icebp
pusha
xor
aas
addb
mov
test
outsl
loope
vcvtsd2ss
xorl
jbe
mov
jnp
icebp
jb
add
cmpsl
push
pop
divb
adc
loope
mov
pop
jo
stc
jecxz
movsl
and
loopne
mov
mov
out
ret
test
xchg
aam
add
push
mov
inc
lds
shll
mov
cmp
lret
call
or
jg
pop
jp
add
push
in
cmp
rclb
loope
popf
xchg
das
popa
xorl
pop
push
outsl
jl
ret
inc
cs
pusha
test
loopne
js
fnstsw
cmp
dec
mov
test
pop
adc
and
out
mov
loopne
clc
push
hlt
loop
jno
push
jns
shrl
mov
scas
cmp
pop
xor
mov
cmp
mov
fucomip
cmpb
daa
jecxz
push
stc
jp
ja
popa
inc
and
ljmp
sarb
jnp
push
cltd
pop
andb
and
xor
fst
das
inc
out
jmp
outsl
ret
add
jp
push
sbb
and
nop
xor
loope
test
jne
fadds
lretw
pop
outsl
fldcw
int
int
push
add
lods
insl
int3
cld
jnp
fnstcw
imul
mov
aam
arpl
aas
jp
add
shlb
mov
xlat
imul
or
cmpsb
push
es
and
sub
mov
and
pushf
popa
outsb
shl
pop
shl
dec
or
lret
fdivl
das
mov
repz
pop
dec
cld
gs
jecxz
int
add
test
sahf
out
jnp
adc
mov
and
mov
xchg
jo
insb
lahf
mov
pop
clc
pop
out
mov
lock
add
xor
rclb
or
cmp
or
or
jno
sbb
call
fwait
mov
popa
pop
sahf
loopne
outsb
push
not
dec
add
jnp
xchg
loope
pop
inc
xorb
out
stc
rclb
daa
jae
rol
roll
adc
xchg
inc
std
loope
sbbl
sbb
add
jecxz
pop
pop
andl
call
or
cmp
fdivp
mov
and
inc
in
int
jnp
dec
scas
or
cli
rcl
and
or
icebp
pop
or
pop
jecxz
adc
jge
fs
push
fildll
or
and
mov
xor
add
sti
andb
insl
enter
or
sbb
rorl
addr16
push
cld
data16
sbb
push
in
daa
jo
jmp
pop
fdecstp
loope
mov
dec
stc
in
inc
lret
clc
mov
xor
shlb
roll
in
test
push
js
pop
xchg
mov
subl
stos
mov
jp
fstpt
in
adc
stc
fucom
repz
cmp
add
xor
outsl
push
pop
mov
xchg
scas
outsb
xchg
push
inc
or
hlt
jno
leave
sub
inc
xor
inc
movsl
sbb
xchg
pop
movsl
push
aad
test
testb
inc
pop
cli
nop
inc
inc
mov
out
xchg
outsb
xchg
out
pop
filds
lds
and
lea
orl
jns
jno
mov
push
icebp
jle
imul
or
fnstenv
cli
ja
das
mov
lea
and
arpl
ficompl
jo
inc
pop
ret
pop
adc
jne
mov
xchg
mull
cltd
push
outsb
inc
lock
jge
mov
daa
jb
xchg
dec
movsb
nop
dec
test
mov
loopne
inc
push
enter
xchg
jp
xor
pop
rorb
das
xchg
out
pop
and
mov
sub
pop
cld
stc
xchg
sub
cltd
jae
xchg
push
xchg
ljmp
repz
out
dec
xchg
loopne
pop
add
lahf
dec
mul
adc
rorb
lds
inc
ljmp
ret
lock
test
jp
mov
call
insb
jle
push
jl
or
mov
leave
outsb
xchg
jbe
aaa
add
lock
inc
mov
imul
in
mov
roll
adc
out
cmpsb
mov
imul
cmp
lcall
xchg
movsb
sbb
dec
push
xor
out
fstps
bound
lock
and
popf
pop
loopne
mov
stc
push
mov
fs
jns
push
rcl
test
mov
push
sub
in
clc
out
stos
std
ds
cmp
ljmp
adc
inc
fldenv
int
jmp
cmc
movsb
dec
and
pop
in
outsl
out
movsb
fsub
ret
js
cmc
leave
stc
nop
inc
mov
add
cmp
popf
dec
or
repz
sub
mov
jns
pop
pop
into
cmpl
mov
sbb
or
iret
xchg
sysexit
or
or
sbb
push
mov
lds
pop
or
scas
subb
sbb
sahf
enter
push
insl
mov
sti
mov
cmp
xor
lods
pusha
cmc
xchg
std
mov
lods
inc
das
mov
fst
mov
idiv
fstl
cmp
fucomip
aam
adc
imul
outsb
daa
mov
xor
push
fbld
pop
and
fldenv
imul
jo
sbb
pop
cbtw
and
loope
es
imul
pop
push
outsl
mov
add
jecxz
inc
insl
lea
fs
int
mov
jbe
imul
call
xchg
jb
mov
rcrb
adc
mov
idivl
stc
xchg
or
ret
test
dec
xchg
xor
pop
cwtl
xchg
mov
mov
out
call
stc
dec
repz
sub
mov
mov
push
and
stc
and
lea
inc
pushl
jl
test
mov
add
sbb
test
jg
dec
stc
insb
or
add
adc
xchg
cmpsb
stc
xchg
mov
aaa
push
pop
sahf
push
clc
mov
nop
iret
add
dec
xor
add
mov
jl
inc
xor
xor
sbb
insl
out
stc
mov
sbb
je
inc
add
rcrb
int
gs
and
ror
pop
and
fstpl
jg
cs
push
and
fwait
push
push
pop
inc
add
clc
and
mov
pop
push
out
int
cmp
shl
jg
in
idiv
test
xchg
in
cwtl
pushf
clc
loope
mov
pop
into
mov
sub
and
cmp
insb
popf
xchg
pop
outsl
add
inc
imul
daa
mov
lock
pop
fstps
icebp
pop
jae
cmp
pop
xchg
shll
lds
jo
repz
lret
ror
stc
icebp
xor
sub
iret
aaa
pop
jmp
or
int3
push
xchg
out
inc
ret
jb
xchg
outsl
adcl
out
mov
sub
and
cmc
xchg
dec
clc
jno
push
ret
ja
je
aaa
jbe
jb
xor
test
popa
lea
loop
inc
les
ja
jne
ljmp
popa
mov
adc
jns
pop
mov
movsb
jno
rolb
adcl
enter
xor
outsl
inc
jno
loope
dec
frstor
shrb
fnstcw
inc
lahf
mov
cmp
xchg
loope
imul
js
imul
mov
insl
xor
xor
scas
jae
out
push
clc
cld
push
jne
cmp
pop
std
out
out
or
cli
imul
or
mov
out
jg
int3
cmc
aad
jge
out
int3
mov
stc
inc
movb
lods
inc
mov
mov
dec
stos
push
pop
mov
pop
es
daa
push
std
push
fst
xchg
std
int
test
xor
cmp
xlat
lds
or
jle
pop
es
pusha
adc
xchg
xchg
out
inc
pop
push
mov
lret
lods
iret
jg
int
lret
cs
jb
outsb
jnp
test
mov
xchg
andb
mov
test
rcl
and
mov
stc
sbb
dec
loope
icebp
test
rclb
pop
xchg
dec
popa
leave
add
inc
fcmovnb
outsb
iret
loope
mov
std
add
repz
in
lret
push
lahf
inc
mov
or
add
inc
sarl
lea
add
mov
loope
data16
mov
lea
jecxz
cld
in
insb
fisttpll
and
dec
mov
lret
stos
mov
jg
imulb
loop
jg
cld
mov
xchg
lahf
int
xor
mov
xorl
icebp
inc
jle
or
sub
das
adc
mov
movsl
add
jg
cld
incl
cmp
in
sbb
imul
cltd
push
push
into
mov
in
adc
pop
xlat
add
jp
pushf
gs
lock
jne
cld
push
rcl
push
sarl
roll
or
lea
movsb
cmp
fidivs
jp
iret
mov
push
scas
dec
or
aad
mov
push
mov
stc
test
inc
div
lds
mov
negb
pop
icebp
clc
ljmp
sub
jp
mov
loopne
mov
mov
jmp
mov
fimuls
push
jle
mov
js
je
and
call
or
ret
jmp
jb
mov
sbb
sbb
divl
or
shl
ljmp
or
or
xor
jl
std
std
jae
inc
mov
sti
add
xlat
xorl
pop
clc
sub
or
pop
stc
stos
sbb
sub
jae
js
nop
mov
push
loop
dec
incl
insb
or
mov
pop
mov
cwtl
nop
ret
jg
lock
mov
cmp
cltd
cmp
aaa
orps
xor
insb
sub
cmp
jle
sti
jecxz
cltd
push
sbb
pop
inc
xchg
cli
fstps
insl
dec
mov
jmp
lds
xorb
sbb
mov
or
adc
mov
mov
je
pop
jb
inc
test
insb
cltd
fsub
adc
das
out
out
dec
cmp
dec
and
icebp
cmpsl
jmp
and
or
push
fwait
imul
lods
jae
sub
fmull
outsl
adc
adc
cmc
ficomps
imul
xchg
test
mov
cmp
addr16
aad
leave
arpl
inc
aam
sbb
jb
nop
add
shl
lea
or
orl
enter
dec
test
imul
lret
shll
int3
stc
or
shll
xor
mov
repnz
pop
daa
out
subb
inc
cmp
stc
push
lds
lea
xlat
push
sbb
mov
jmp
push
sti
loop
nop
int3
cs
pop
mov
push
outsb
or
push
jae
sbbl
mov
faddp
sbb
js
in
sbb
xchg
dec
mov
ficompl
lods
mov
adc
out
mov
adc
mov
js
xor
cwtl
xchg
cmpsb
ds
clc
inc
int3
adc
sarb
or
stc
pop
int3
lcall
popf
cmp
dec
fdivr
popa
jns
dec
nop
ret
push
mov
rcrb
mov
loopne
cmp
in
xchg
cmp
scas
push
fimull
stos
mov
mov
bsf
and
inc
shrl
dec
lret
cmpsb
outsl
xor
rol
dec
cmc
jecxz
aad
pop
push
movsl
cmp
mov
lea
inc
sahf
and
lea
push
int3
xlat
add
int
mov
pushf
les
mov
subl
mov
or
test
pop
push
pop
daa
mov
jg
push
clc
outsb
add
aas
lea
int
repz
dec
jbe
jge
adc
loopne
push
jne
pop
lcall
ret
cld
inc
jmp
scas
enter
inc
popa
dec
jecxz
cwtl
imul
out
ret
incb
aas
xchg
js
push
or
fidivrs
fists
adc
iret
rorl
stc
inc
in
arpl
arpl
fisubl
xchg
movsl
mov
inc
dec
ret
or
fstpl
adc
add
and
shrb
cld
xor
push
ficompl
imul
push
fsubrs
pop
inc
insl
lea
push
lds
stos
jo
xchg
inc
xorb
xchg
xlat
js
and
popa
push
and
fs
stc
inc
xor
loopne
cmpsb
repz
in
push
jnp
adc
add
xchg
mov
repnz
jl
pop
or
lcall
dec
xor
add
mov
or
into
mov
add
push
push
push
ja
jg
or
ficomps
leave
dec
or
inc
pop
test
fstps
movsb
std
xchg
cmp
ret
add
rcll
mov
out
add
andb
mov
push
nop
out
inc
cli
cmpl
aas
add
nop
cmpb
xchg
in
xchg
or
inc
test
lret
dec
daa
jp
pop
push
or
fcom
sbb
push
add
test
nop
divl
sbb
sub
decl
into
sbb
in
aas
jl
std
repnz
int
clc
dec
orb
jl
in
scas
xorl
lcall
jns
pop
jg
repnz
or
call
adc
cmpsb
sahf
ror
cld
in
add
mov
insl
pusha
lock
jge
inc
addb
outsl
cld
inc
out
fucomp
out
fbstp
divl
out
cld
mov
adc
fld
pop
stos
fucom
idiv
imul
push
out
sbb
mov
lret
out
ds
push
fiaddl
xchg
xchg
fisttpl
mov
testb
stos
xchg
int
out
test
std
rolb
clc
icebp
add
xlat
dec
push
adc
cmp
adc
jp
cmp
mov
stos
xchg
je
xchg
push
add
push
or
mov
add
jbe
popa
int3
sub
and
sahf
addb
dec
add
cld
mov
pop
daa
movsl
mov
and
and
inc
inc
rcrl
fsts
xor
add
std
and
jle
adc
popf
cld
jg
outsl
fs
inc
in
jne
mov
adc
xchg
push
pusha
push
mov
pop
cmpsl
cmc
ja
ret
loope
pusha
add
jns
mov
cltd
inc
cmp
fcomp
fisubl
pop
mov
fs
dec
clc
fdivr
push
and
loop
and
enter
add
and
mov
mov
cld
cmpsb
cmp
daa
fstps
or
popa
add
inc
incl
imul
mov
enter
fcomi
outsl
jo
inc
stos
cli
ret
insb
sar
mov
adc
imul
pusha
sbb
insl
sti
mov
fstp
aam
dec
xchg
mov
ror
aad
push
rcll
pop
mov
ficompl
pop
cmpsl
jnp
pop
mov
push
repnz
clc
subl
or
sbb
and
fcomi
jmp
cli
jns
inc
data16
add
xor
std
out
xlat
add
ja
repz
ds
sub
out
or
inc
and
cmp
add
jnp
mov
pop
lods
xchg
mov
inc
out
pop
add
icebp
fiadds
cld
imul
test
xorb
add
fcmovnu
in
or
outsb
arpl
cmpb
bound
push
je
cmc
add
cmp
icebp
pusha
mov
cmp
out
push
mov
xchg
or
mov
mov
fwait
jge
rcrb
aas
repnz
nop
hlt
jmp
inc
dec
jnp
js
int3
mov
push
ror
jno
jmp
jp
or
xchg
jns
mov
sahf
lahf
popf
push
fucompp
mov
cmp
push
dec
or
test
xor
gs
and
lods
popf
push
sbb
fcmovu
shr
div
or
shl
xchg
adc
pop
in
sti
sub
add
test
sub
push
insb
mov
xchg
icebp
sub
xchg
or
lds
dec
push
insl
mov
fildl
aaa
xchg
mov
into
dec
inc
mov
push
in
cltd
add
jle
es
mov
lock
divl
mov
sti
jmp
ss
inc
xchg
inc
jmp
faddl
jno
sbb
jecxz
fnstcw
out
loopne
stc
xorl
imul
xchg
cmp
xor
stos
out
mov
inc
stos
pushf
inc
jecxz
or
divb
lea
push
push
push
dec
jnp
hlt
or
cltd
jnp
jle
mov
jge
sbb
xor
jg
fcoml
ret
and
pop
push
mov
mov
stos
ret
jo
iret
xor
push
inc
popf
sahf
mov
dec
mov
rorb
cli
lahf
dec
push
lds
fcmovbe
mov
xor
sbb
clc
jns
cmpsl
clc
in
jns
bound
pop
daa
movsb
rorb
jae
sub
repnz
lret
cmp
fwait
fs
mov
shr
mov
stos
sub
cmp
out
fidivrs
xor
jl
push
push
xor
xor
in
and
lods
in
push
fmuls
or
cwtl
mov
imul
pop
cmc
scas
jge
inc
inc
stc
daa
fstpl
data16
inc
jae
pop
repz
addb
aam
mov
fimull
push
rcrl
inc
addl
lret
jg
mov
add
mov
sbbl
add
inc
cmp
cli
add
jno
add
cmp
jl
jmp
ljmp
or
bound
loope
jle
pop
pop
fcmovnu
ja
cmp
scas
jecxz
add
cs
in
outsb
lret
xchg
cld
cmp
in
es
loope
add
mov
fdiv
in
pop
mov
or
xor
clc
inc
lea
mov
push
fsubl
mov
adc
sbb
push
scas
or
jae
pop
inc
in
call
xchg
loop
mov
in
cmp
ja
sub
push
jg
js
mov
mov
or
sahf
pop
in
aam
loope
sbb
xchg
movl
and
out
xchg
stos
stos
or
repnz
hlt
scas
jns
lahf
or
mov
and
fisubl
mov
notl
jl
xchg
push
cmp
call
negb
pusha
dec
loopne
nop
and
xchg
repz
std
push
arpl
lea
xchg
repz
jb
jmp
std
ret
cld
out
pop
loopne
xchg
xchg
lock
mov
mov
pop
pop
lret
mov
insl
div
mov
lock
jg
or
inc
push
pop
sti
mov
insl
popf
mov
cmc
test
clc
cmp
cmp
in
vphaddwq
pop
and
jns
mov
xchg
cli
int3
insl
push
and
mov
movsb
adc
pop
cmp
fsubs
clc
dec
test
cmpsl
fistpll
or
test
cld
insl
aam
icebp
and
fimuls
inc
sub
mov
or
cmc
test
stos
mov
testl
add
pop
into
gs
jno
fs
add
fstpt
jb
out
mov
lea
push
lea
jno
xchg
icebp
pop
stc
mov
jbe
mov
daa
cmp
xchg
mov
mov
repz
out
push
jle
lret
scas
nop
insb
lock
pop
cmpsl
or
add
je
lock
xchg
xchg
enter
outsl
mov
icebp
int
pop
xchg
inc
mov
ds
je
jo
inc
lea
adcl
push
pop
mov
sbb
mov
ss
mov
sti
gs
dec
lahf
in
cmp
sahf
cmp
add
cmp
sbb
sarb
in
jmp
out
lods
mov
in
sbbl
pop
sahf
push
or
scas
mov
add
cmp
mov
sub
repz
push
loopnew
imul
mov
mov
mov
push
jns
lea
cmc
mov
icebp
outsb
lods
iret
sti
in
aas
repz
inc
das
mov
out
mov
mov
push
pop
xchg
dec
test
fnstenv
repz
mov
inc
mov
xchg
imul
std
push
or
lea
or
cmp
lahf
div
sub
int3
inc
lods
lahf
fdivl
bound
fs
sahf
repnz
stc
clc
sti
push
lea
cmp
mov
sti
xor
int3
cmpsb
cmp
cwtl
arpl
add
inc
mov
loopne
mov
das
adc
cmpb
cmp
pop
jmp
add
lock
adc
aas
das
hlt
push
std
xabort
std
stc
mov
add
pop
test
jns
xchg
or
test
out
mov
mov
jecxz
jno
mov
stc
sbb
out
and
outsl
ja
std
jecxz
jno
mov
jns
loope
loope
testb
mov
mov
fisttpll
pusha
mov
std
xlat
adc
sti
aad
leave
mov
jecxz
enter
pusha
aad
int
fnstenv
leave
std
loope
mov
jmp
repz
cmpsb
cmpsl
mov
mov
mov
mov
mov
lock
std
xchg
mov
mov
scas
lock
std
stos
cmp
test
rclb
aaa
loop
addr16
jg
lret
inc
lock
mov
clc
popf
inc
iret
lea
imul
sarb
xor
shll
sti
fiadds
imul
int
jnp
repz
in
inc
mov
pusha
or
test
push
inc
movsb
sub
dec
add
jns
xlat
sub
sub
aas
jns
jle
in
xor
pop
pop
push
add
mov
inc
sbb
mov
cmovb
daa
lcall
flds
mov
add
mov
sub
out
or
push
push
sbb
mov
mov
dec
mov
loope
rcrb
cmp
mov
clc
xor
cmp
jo
push
sub
pop
pop
fbld
repnz
pushf
cmp
jl
xorb
jp
mov
loopne
xchg
repnz
or
inc
jp
or
add
or
out
mov
or
mov
or
mov
lods
pop
pop
push
rolb
pushl
push
mov
pop
add
in
ljmp
outsl
xor
cmp
stc
and
adc
insb
jns
adcb
out
nop
inc
xchg
cmpsl
cli
mov
inc
and
cmc
jno
jecxz
pop
push
imul
add
into
cmp
mov
lcall
and
mov
and
mov
cmp
fldl
mov
rclb
cmp
pop
loopne
popf
jnp
inc
pop
sti
xchg
push
xchg
cmc
je
or
je
cmp
scas
addr16
inc
pop
incl
add
dec
mov
mov
and
outsl
rorl
sahf
outsl
xlat
daa
sub
popf
lea
aad
stc
fcmovu
pop
and
inc
xchg
inc
pop
adc
stos
mov
aam
icebp
sbb
mov
jnp
out
inc
popf
stos
clc
pop
mov
ret
pop
and
clc
mov
mov
outsb
jecxz
mov
jno
addr16
inc
xchg
xchg
loope
mov
push
roll
rcl
cmp
xchg
aas
loop
mov
mov
cmp
gs
out
in
outsl
fsubr
mov
cs
mov
jo
xlat
aad
std
mov
jo
aam
mov
cli
out
mov
xor
pop
cmp
jbe
push
inc
cmpsb
sbb
xor
out
mov
inc
jge
jmp
mov
mov
mov
jne
inc
sbbb
shll
inc
test
scas
fs
jno
jb
ret
cltd
sub
in
icebp
cli
mov
mov
aaa
or
push
push
push
cmp
adcb
cmp
push
outsl
lods
fldenv
xor
add
and
xchg
cmp
inc
addr16
insb
xorb
jne
mov
in
pop
out
insb
inc
addl
jp
outsl
rclb
pop
imul
movsl
xchg
mul
cmc
into
mov
mov
orl
pop
mov
pop
mov
fdivrl
sarl
add
push
sub
fst
sbb
iret
stos
cmpsb
imul
mov
or
cmp
xor
jp
sub
stc
mov
shr
add
stc
pop
mov
dec
sub
lret
jbe
ret
push
les
add
ss
and
xor
repz
sub
popf
fnstcw
push
adc
jle
adc
push
sbb
inc
cmp
test
js
outsb
aam
push
outsb
sbb
dec
ljmp
icebp
cld
sbbb
sbb
mov
pop
daa
mov
or
test
add
sbb
push
adc
mov
mov
mov
loop
sti
subl
frndint
fcomps
fcmovnbe
nop
or
pop
data16
mov
add
inc
das
sub
mov
call
push
jo
stc
mov
rcrl
xchg
clc
inc
inc
insb
lea
dec
jne
in
cmpsb
stos
loope
fcmovu
or
inc
test
mov
dec
test
push
add
push
repnz
cmp
aaa
int3
pop
subl
ror
xchg
sarl
daa
adc
dec
mov
inc
jge
lcall
outsl
stos
mov
dec
push
inc
dec
bound
lds
pusha
pop
clc
or
sbb
ljmp
and
js
or
xorl
lea
scas
leave
mov
decb
mov
sub
mov
jmp
aaa
aas
xchg
loope
lods
jge
mov
inc
pop
cmp
mov
ret
and
jb
jo
cs
out
adc
out
shl
jle
inc
sub
pop
sbb
cmc
push
lock
ja
lcall
movsb
jecxz
add
sub
insl
mov
add
dec
dec
jge
push
cmp
push
jecxz
popl
inc
xor
dec
mov
add
je
out
jge
jb
scas
mov
xchg
pop
movsl
bound
fcompl
cmp
add
xor
jp
sti
ljmp
mov
jmp
repz
out
jmp
mul
mov
dec
pop
jp
cmpb
lea
or
enter
insl
dec
imul
icebp
popf
pop
mov
cmpl
mov
mov
pop
arpl
xor
cmp
fistpl
ss
mov
loopne
fnsave
mov
mov
mov
test
into
iret
mov
fwait
cmp
iret
push
jmp
jecxz
test
outsl
xor
js
mov
mov
sbb
int3
mov
pop
add
dec
or
fsubrl
inc
dec
fwait
xor
icebp
inc
mov
pop
push
and
icebp
loop
and
fists
imul
js
xchg
icebp
mov
nop
cmp
sub
pop
mov
cmp
lock
leave
cmp
icebp
mov
call
mov
int3
icebp
sub
jl
push
hlt
lahf
xlat
adc
js
call
insl
adc
icebp
std
pop
jno
xor
jge
lock
jmp
out
pop
insl
adc
icebp
xchg
sub
shll
clc
mov
cwtl
mov
xchg
out
loopne
lret
pop
mov
addb
lock
xor
push
cmc
test
es
std
or
ja
xorl
add
cmp
push
inc
nop
pop
xchg
testb
inc
mov
shr
and
mov
stos
push
mov
fsincos
insl
pop
in
sub
int3
icebp
adc
notl
jg
ss
or
jmp
mov
iret
cltd
jo
cmp
outsl
adc
jp
fs
cld
and
push
mov
sarb
sahf
jne
rorb
push
pop
imul
aas
xchg
adc
scas
daa
xchg
dec
test
pop
fwait
lods
sub
in
push
imulb
and
lahf
mov
jl
dec
cmpl
jge
pop
bound
dec
mov
pop
outsl
int3
sbb
stc
pop
dec
pushf
add
out
daa
xchg
cld
lea
cmp
push
sub
ret
inc
decl
nop
xor
ret
mov
sti
xchg
jp
mov
pusha
pop
aam
mov
jp
in
push
dec
in
loop
pusha
sub
idivl
cmp
cmc
pop
xor
in
popf
lahf
shr
mov
mov
mov
cmp
bound
lods
fnstsw
cmp
jmp
xor
sbbl
outsb
mov
and
sar
or
cmp
sub
sub
jne
arpl
mov
outsb
out
incb
jge
pop
mov
aad
in
mov
dec
sbb
outsl
push
dec
dec
cld
js
xor
test
xor
xchg
les
mov
pop
pusha
or
test
push
pop
sbb
lcall
int3
sti
cld
adc
divl
mov
or
in
jle
xlat
jnp
je
lea
mov
adc
pushf
jae
rclb
mov
sub
loope
mov
sbb
mov
notb
daa
pushl
lods
mov
pop
sbb
mov
popf
daa
loope
loope
int3
fcmovu
or
cmp
mov
mov
fwait
in
lods
jbe
mov
ja
push
daa
xlat
lret
xor
fwait
fs
pop
stos
jle
out
jno
fdiv
or
outsl
out
sub
xlat
mov
sarl
mov
out
loopne
sti
cmc
orl
mov
lret
loope
cmpsb
push
addr16
shlb
dec
and
lea
gs
imul
xor
cmpb
lret
popa
mov
add
divb
xchg
fcomps
fdivrl
xchg
cmp
dec
cmp
jns
dec
mov
iret
cli
cmpsb
pop
scas
jge
push
add
push
or
lcall
inc
jne
jns
or
loop
mov
in
pop
and
xchg
hlt
roll
popa
sub
outsl
cmpsb
icebp
jno
out
cld
cltd
jle
fisubrl
in
jo
mov
enter
inc
add
push
enter
sahf
sub
inc
jl
cwtl
xchg
sbb
pop
testb
enter
cmp
pop
push
in
sti
outsb
inc
mov
mov
lods
xchg
fdiv
out
movsb
popa
cld
mov
lea
loope
push
es
mov
out
arpl
cmpsb
hlt
xchg
clc
and
dec
sti
xchg
xchg
fmuls
pop
fwait
adc
mov
fldenv
and
pop
adc
jae
inc
addr16
inc
inc
or
pop
popf
aad
pushf
pop
js
pop
jle
xchg
push
xchg
dec
xchg
inc
aad
adc
mov
push
inc
add
jb
jmp
leave
push
jp
cmp
imul
dec
xchg
inc
adc
adc
sbb
push
shlb
shll
xchg
cmp
shl
push
mov
lea
inc
push
call
pop
clc
sub
or
rorb
cmp
adc
shll
mov
jp
xchg
movsl
shll
mov
rclb
pop
dec
jne
pop
outsl
dec
out
xchg
out
rclb
mov
aas
out
jg
jb
mov
xor
notl
test
xchg
cmp
in
loop
loopne
pop
call
jge
and
sub
lods
ret
mov
divb
fbstp
cld
push
lea
cwtl
stos
jo
adc
sub
in
das
xchg
cmp
mov
pop
and
popa
mov
int
insb
call
rcrb
dec
rcrb
cmp
ds
inc
push
and
test
fildl
sub
ficompl
cld
cmp
shl
pop
daa
call
push
xchg
jge
adc
clc
and
and
lds
push
push
inc
pop
or
adc
push
sbb
inc
adc
fidivrs
in
outsl
jle
sbb
mov
shr
jbe
push
sub
movsl
xchg
repnz
movsb
jmp
pop
out
dec
jecxz
or
dec
in
lock
ja
xchg
mov
shll
std
jle
lahf
xor
outsl
add
dec
cmc
push
jg
jnp
mov
cmp
stc
mov
mov
lock
fistpll
mov
lahf
clc
lods
jne
clc
cld
scas
cld
fbstp
mov
les
aad
movsb
sbb
fldl
add
mov
cmp
mov
mov
xor
inc
dec
js
sti
fisubs
out
fiaddl
or
jae
mov
fidivs
fbld
ljmp
push
mov
in
push
mov
push
sbb
jge
jp
test
daa
ja
mov
ss
mov
xchg
pushf
lret
jmp
gs
pushf
roll
pop
hlt
mov
and
jmp
rolb
mov
inc
out
sbb
mov
aad
rol
xor
cmc
adc
les
push
pop
jne
jmp
jmp
xor
pop
dec
mov
inc
cs
scas
jl
jns
and
lods
je
out
add
add
nop
popf
xor
mov
mov
xlat
xchg
lea
xor
loope
stos
addb
div
or
shlb
es
aam
lods
stos
lock
out
pop
loop
in
popa
scas
cmpb
aaa
leave
sub
ret
mov
dec
sub
and
test
push
or
cltd
cld
sti
in
ret
mov
stos
push
jb
lea
ret
in
movsb
lret
cmc
add
cmp
aam
add
xor
rcrl
test
test
jmp
inc
jle
testl
sahf
inc
cmp
dec
andl
mov
std
cltd
cwtl
dec
pop
xor
mov
in
cmc
adc
mov
rol
lods
iret
mov
cs
xchg
push
push
adc
in
pop
stos
loopne
lds
adc
mov
jno
in
cmp
add
pop
cmp
pop
fadds
fldl
jg
xchg
in
imul
mov
xor
add
cmp
jno
jge
fs
jl
xchg
jecxz
jae
mov
gs
xchg
or
dec
out
int
xchg
sub
mov
sti
and
and
in
in
pop
sub
lods
sti
es
adc
pop
stos
and
in
dec
and
adc
pop
data16
lock
inc
xchg
enter
or
jle
sbbl
or
fcompl
mov
ss
mov
stc
lret
xchg
pop
aaa
pushf
loopne
xchg
ret
lea
dec
dec
bound
jg
movsl
ljmp
ja
out
movsb
rcl
pop
add
addb
inc
das
stos
jmp
xchg
popf
gs
cmpb
icebp
inc
pop
loopne
outsl
rcr
lock
inc
and
pop
sahf
or
int
out
incl
jl
sub
or
es
mov
fwait
xlat
cwtl
or
add
rcrb
pushf
sarl
mov
or
outsl
pop
iret
inc
jl
or
mov
sbbb
repz
add
inc
push
repz
mov
out
rcrl
out
pop
add
sub
mov
scas
vpand
jmp
out
int3
dec
rol
sbbb
scas
fcmovnu
shl
sbb
push
lock
sbb
push
ror
xlat
negl
call
shll
aas
cmp
cmc
stc
fsubrs
sbb
jmp
push
leave
out
mov
mov
jl
inc
jno
push
bound
call
xor
jg
insb
or
mov
icebp
sub
or
loopne
pop
mov
stc
or
jge
xchg
pop
lret
gs
cmp
loope
mov
inc
repnz
mov
mov
dec
mov
pop
cmp
jmp
or
cmp
jp
xchg
leave
xchg
inc
nop
call
mov
push
lods
push
pop
andl
loopne
dec
cmp
and
popf
popf
mov
into
loop
repz
sub
ret
pop
in
jno
test
test
add
adc
icebp
add
fisttpll
daa
pop
inc
negl
inc
fdivrs
and
in
mov
mov
mov
out
movsb
pop
ror
jmp
mov
nop
inc
pushf
xor
mov
mov
mov
outsl
jle
aas
fimuls
out
outsl
jmp
icebp
loop
jg
je
sti
and
mov
cld
outsl
xor
js
cltd
xchg
lea
out
and
andl
fcomp
add
jmp
mov
sbb
ret
jbe
inc
jg
push
enter
ljmp
fsubrp
test
stc
cld
enter
out
stos
dec
dec
stc
add
adc
notl
sub
push
cwtl
jp
xchg
sub
mov
bound
subb
out
xor
dec
fsub
ljmp
imul
stc
div
repz
js
enter
sbbb
mov
push
out
cmp
cmp
inc
xchg
decl
sub
mov
jnp
aad
ss
pop
fisttps
sti
mov
jne
insb
pusha
ja
pushf
fiaddl
inc
out
stc
xchg
int3
frstor
movsl
js
cld
cmp
cmp
out
push
sahf
loopne
pop
aam
mov
movsl
dec
dec
mov
pop
aam
je
gs
ljmp
sbb
fcomps
adc
xchg
pop
pop
ja
cmc
pop
mov
cmp
shll
into
pop
and
add
and
pushf
sti
push
and
das
shlb
gs
imul
mov
in
stos
call
es
fdivl
leave
and
mov
xchg
xor
cltd
inc
cmp
jmp
sbb
popf
mov
negl
or
repnz
std
data16
mov
add
add
inc
das
jmp
xchg
jle
jbe
jle
mov
sub
cmp
or
outsl
lcall
repz
pop
arpl
sahf
fwait
cmc
lea
push
cmpsb
bound
in
dec
mov
test
push
xchg
cld
les
cmp
cmc
sbb
ret
and
lcall
enter
jns
jmp
add
lret
cs
int3
xor
out
aam
xor
in
dec
jl
or
push
mov
sbb
aaa
add
outsb
adc
stc
mov
clc
std
sti
lea
add
data16
or
pop
push
cmc
std
int
push
add
jmp
cmc
andl
cltd
and
cltd
das
cld
or
rcrb
imul
mov
push
and
jle
dec
xacquire
in
push
jecxz
fistl
cmp
and
fbstp
or
pop
lahf
cmp
rcll
notb
bound
dec
pop
mov
lret
cmc
in
xchg
addb
sub
jns
nop
aad
test
or
jmp
loopne
repnz
decl
push
aad
adc
popa
xor
repnz
sub
pusha
out
leave
cli
jp
jb
test
in
mull
in
mov
push
sti
xor
bnd
push
xor
sti
orl
int3
mov
adc
ret
mov
dec
sti
incl
lea
jmp
lahf
push
loope
loope
add
rol
mov
or
push
push
movsl
fdivl
or
ret
clc
shll
jnp
out
jne
in
movl
imul
fwait
clc
ja
jns
jbe
mov
xor
cmp
fwait
inc
es
jb
pop
mov
scas
les
sbbb
cmpsl
xchg
loopne
xor
cmp
adc
inc
icebp
jge
addl
std
in
and
ljmp
out
push
pop
inc
pop
clc
mov
cli
bound
and
sbb
cmp
sbbl
cmp
popf
dec
ja
xchg
jl
popf
stos
pop
mov
nop
dec
add
lods
jl
lcall
xchg
adc
or
jl
nop
sbb
xchg
xchg
in
jns
aas
xchg
adc
in
jl
and
push
pop
jecxz
imull
pop
in
mov
cltd
and
stos
fcomi
xchg
add
pop
out
sarl
subl
into
mov
and
cs
pop
xchg
mov
hlt
ljmp
aaa
jnp
imul
add
xchg
hlt
pusha
jmp
jle
test
sarb
mov
xor
lods
dec
bound
mov
or
pop
pop
in
movsl
xchg
mov
lret
mov
fs
gs
cli
lock
xchg
idivl
iret
cmc
inc
mov
xlat
icebp
out
xchg
lock
out
or
repz
jl
idivl
stc
mov
stc
shl
inc
jle
psrld
pop
inc
test
push
and
add
loope
ja
cld
icebp
fwait
mov
mov
mov
jb
lea
das
decl
mov
push
stos
inc
mov
sbbl
clc
bound
jmp
int
adc
add
jae
xlat
mov
rcll
jge
decb
ss
dec
por
pop
es
loope
adc
aas
cmp
sti
xchg
addb
call
ficompl
cmpl
xor
out
adc
outsb
add
sarl
xchg
sbb
inc
and
ret
xchg
stc
in
inc
in
sub
int3
add
aad
aaa
jno
inc
dec
std
js
sti
fs
jmp
push
das
add
lea
fcmovu
xchg
jg
inc
nop
jb
and
mov
dec
inc
imull
sbbb
pop
xchg
faddl
pushf
xchg
loopne
ret
cmpsb
imul
xchg
sbb
xor
into
push
fisubs
push
cwtl
out
xlat
fidivs
inc
pop
cld
or
xor
cwtl
lret
xor
sbb
in
inc
mov
mov
xchg
fisubs
outsb
sub
dec
loopne
jmp
imul
enter
sbb
push
insb
mov
mov
inc
mov
sahf
sbb
jle
or
cmp
inc
sbb
pop
inc
sub
popf
cmp
jno
mov
jnp
notl
mov
sub
jl
cld
andl
cld
insb
jnp
pusha
fs
les
jp
cmp
insb
cld
inc
insl
je
data16
jae
add
sahf
bnd
cmp
xor
xchg
stos
clc
cmp
sbb
fnsave
icebp
mov
push
and
shll
jp
push
pop
mov
popa
mov
out
inc
add
scas
clc
mov
ret
ret
scas
and
loope
fs
pop
ret
cld
jge
aaa
jns
iret
xchg
jnp
rcrl
aas
clc
cwtl
inc
push
ret
stos
pop
dec
pop
lods
aad
roll
push
fnstsw
lock
into
les
mov
ss
sub
mul
idivb
enter
mov
cmp
mov
aad
fsubrs
cmpl
wrmsr
mov
xlat
mov
enter
dec
jmp
fs
jae
xor
mov
cmp
adc
jae
sub
xor
lods
xchg
repz
xchg
mov
dec
xor
xor
stc
inc
dec
xchg
inc
lock
xchg
aaa
stos
lcall
dec
in
ret
cmp
lods
mov
nop
push
ja
sahf
mov
xchg
loopne
xor
xor
pop
aad
sbb
mov
pop
sbb
jl
push
lock
add
cmpsl
ss
jg
push
incl
or
mov
push
push
jne
sub
xorb
fs
xchg
leave
cmp
dec
push
add
leave
lods
cmp
aas
add
xor
xchg
std
leave
ds
in
sahf
unpcklps
pextrw
or
mov
mov
mov
cmpsl
mov
loope
mov
test
andb
push
out
outsb
sbb
xchg
mov
jge
out
cmp
jecxz
sti
sbb
std
nop
push
and
in
or
sub
ljmp
push
push
fidivl
cmp
push
add
fsubr
or
sub
aam
mov
in
sbbl
mov
insb
jae
frstor
pusha
adc
lcall
mov
mov
mov
clc
jno
xor
lods
sub
sub
mov
mov
mov
sbb
and
data16
ret
push
mov
mov
int3
decb
fcompl
or
lods
jnp
mov
aad
out
insb
mov
stc
into
lods
jg
stos
or
or
jecxz
movl
dec
cld
cli
andb
and
imull
inc
nop
fldl
cmp
je
inc
pop
dec
scas
push
out
cmp
pop
in
movl
shl
inc
or
and
dec
pop
inc
jnp
lret
pop
or
cmp
push
mov
jp
int3
jge
ds
push
icebp
cmp
push
inc
imul
loope
jne
dec
jp
test
add
dec
movsl
icebp
and
sub
ljmp
pop
aad
mov
jbe
mov
iret
out
xchg
idivb
mov
mov
and
mov
push
jg
addb
cmp
int3
xchg
rcrb
int3
cld
shl
pusha
in
add
sbb
add
fldl
stos
inc
xlat
jne
icebp
lds
mov
cltd
inc
add
inc
jge
add
test
jno
les
ja
sbb
je
or
cmp
cmpsl
sbb
shll
xchg
setg
jge
cmpsl
inc
lea
jns
xorl
mov
add
xchg
lret
sbb
mov
mov
scas
jecxz
div
arpl
dec
lods
lock
loope
ljmp
cld
shll
repnz
flds
cmc
inc
jnp
and
insl
sub
adc
jne
into
repz
xor
clc
or
scas
lcall
xor
fwait
xchg
jle
es
pop
xchg
mov
mov
ds
gs
cli
nop
or
das
xchg
xor
popf
jp
pop
iret
cld
mov
mov
xchg
rcrl
call
pop
push
pushf
inc
mov
ljmp
sarb
adc
jno
and
sbb
cmc
mov
out
push
ljmp
std
xchg
in
inc
jnp
loope
lahf
addr16
in
rcrl
pop
fwait
das
in
lea
test
lahf
fdivrl
lcall
inc
jno
frstor
shll
dec
incl
cli
fwait
xchg
mov
je
mov
popf
xchg
add
loop
jg
int3
adcb
fdivrs
fildll
lahf
mov
mov
cmp
ret
pop
xor
jge
inc
out
ja
sub
jp
cmpl
subl
lock
clc
into
outsb
jl
add
jle
jle
les
lea
mov
es
gs
mulb
cmp
sahf
test
inc
mov
inc
mov
cmpl
inc
xchg
xchg
add
inc
insb
jmp
sbb
and
lea
addb
sbb
repnz
inc
out
push
dec
in
inc
lcall
inc
loopne
mov
adc
xor
adcb
cmp
stos
gs
mov
dec
pop
and
test
and
adc
lea
fiaddl
jle
inc
mov
jg
push
shrb
popf
sti
xchg
cmc
inc
cmpsl
stos
in
cwtl
popl
sti
in
inc
out
inc
xchg
or
or
mov
and
xchg
scas
jle
and
loopne
cli
pop
data16
into
std
cld
rcll
mov
mov
mov
dec
mov
xchg
jae
sbb
mov
cwtl
faddl
into
cmp
jne
push
mov
loopne
sahf
xchg
fwait
sti
pushf
icebp
push
clc
lcall
or
mov
in
jg
lcall
mov
jecxz
dec
push
loop
jg
pop
rolb
push
pushf
mov
clc
or
pushl
mov
push
ds
cmp
add
js
imul
sub
fucom
call
mov
pop
cld
mov
popa
sbb
mov
xor
mov
cmp
inc
loope
pop
cmp
xchg
adc
lock
xchg
xor
std
jmp
push
sub
xor
pushf
shlb
popf
inc
nop
pop
sub
pop
cltd
fwait
std
fistps
cwtl
cmp
pop
fstl
fists
pop
bound
popf
mov
mov
sahf
pusha
add
lcall
icebp
inc
imul
outsl
in
adc
pop
pop
sahf
cmp
mov
aaa
add
icebp
mov
mov
cmp
enter
repnz
and
push
pop
xor
movsl
sbb
roll
mov
jae
loope
aad
pop
pop
mov
js
dec
subb
sahf
sbb
fprem1
into
jnp
jmp
fnstsw
pop
popf
int3
mulb
verw
es
jno
jbe
cmp
int
in
jmp
loopne
test
imulb
jle
mov
pushf
cmp
dec
sbb
and
cmp
cmc
shll
movsl
and
pop
ret
sti
or
scas
fidivrs
clc
pop
xchg
mov
lock
cmpsl
dec
int
rcll
test
mov
jae
rolb
out
lock
scas
push
test
xor
cmp
add
orb
or
test
mov
std
enter
mov
xchg
leave
in
sahf
fwait
mov
pusha
and
testl
jb
inc
movsl
mov
lcall
addb
shll
inc
stos
mov
clc
mov
repz
fldl
loope
xchg
clc
or
lcall
jo
mov
xchg
inc
js
fucom
std
jmp
decl
xchg
jmp
out
lods
mov
fsts
mov
xorb
test
fstpt
inc
jo
pop
mov
mov
add
call
scas
out
ret
cld
mov
add
fsubrp
pushl
dec
cmp
ret
inc
inc
iret
lods
lock
inc
push
mov
fs
stos
cltd
and
inc
imul
xchg
mov
dec
push
cltd
sbb
cli
jae
cmp
mov
icebp
sub
dec
std
out
dec
in
inc
pushf
jg
pop
js
jbe
out
leave
mov
pop
mov
call
sbb
mov
mov
xchg
pushf
fstl
sbb
sahf
out
fsubs
jno
mov
fldl
je
pop
je
lock
jae
and
sub
jbe
in
movsl
decl
lea
jmp
addr16
jle
stc
movsb
aaa
bound
out
mov
cmpsl
ja
scas
iret
decb
test
push
cltd
inc
pop
adc
mov
inc
pop
outsb
push
mov
js
movsl
sarb
mov
mov
pop
gs
movsl
pop
xchg
mov
stc
test
mov
inc
rcll
add
into
je
sbb
sbb
fisttps
repnz
inc
inc
out
jae
xor
inc
xor
out
jge
iret
xchg
push
pop
xchg
test
xchg
jnp
subl
testb
jge
and
or
and
mov
jge
scas
pop
jge
cmp
leave
sub
cmp
mov
fbld
mov
dec
rep
add
ret
dec
mov
dec
pop
xor
sahf
cmc
xchg
in
jo
mov
xchg
sub
sahf
push
lahf
mov
test
or
loopne
mov
bound
imull
pop
scas
cmp
incl
inc
mov
mov
fpatan
lea
xlat
cmpsl
or
not
add
clc
call
inc
insb
dec
xchg
repz
pop
mov
test
cmp
jmp
shl
das
mov
ja
adc
sbb
mov
stc
inc
scas
subb
std
out
pushl
mov
jl
adc
loopne
int3
out
insl
or
xchg
mov
cmp
call
mov
dec
ret
pop
out
dec
dec
outsl
out
repnz
mul
inc
out
mov
dec
sub
jg
stos
mov
daa
xor
push
jg
jmp
cltd
or
ret
mov
pop
jns
mov
movsl
cltd
testl
push
jge
xor
pop
or
fs
adc
loopne
cmp
add
xchg
sbb
popa
xor
les
fstps
adc
pop
cltd
push
dec
out
sbbb
sbb
pop
bound
loopne
mov
lahf
jb
cmc
addb
sbb
mov
mov
jl
sahf
pop
or
in
dec
pop
cltd
mov
addr16
cli
popa
popa
or
shll
jp
sub
notl
mov
std
jmp
out
mov
xchg
sar
sub
fnstcw
cmp
in
cmc
lcall
jg
aam
xchg
iret
cli
sbb
stos
sbb
push
loope
andb
xor
sbb
incb
mov
xchg
stc
jb
mov
std
mov
stc
leave
xor
loopne
icebp
stc
loopne
repnz
push
push
jl
cmp
lds
mov
and
fs
jnp
fcmovbe
or
xchg
loope
incl
int
mov
sti
xchg
push
push
inc
jl
sahf
or
jg
sar
aad
call
mov
and
shr
sti
mov
and
dec
testl
rolb
xor
jg
push
cmp
mov
jb
sbb
jns
mov
and
jo
rclb
test
mov
sub
lahf
shrl
sbb
inc
jp
lock
and
xchg
pop
roll
ja
jecxz
xor
adc
mov
int3
stc
aam
in
ljmp
adc
add
push
cmp
pop
xor
loop
mov
sahf
and
outsb
mov
jbe
push
pop
adc
dec
clc
jl
push
in
dec
push
add
sub
fists
or
mov
jo
fsubrp
jg
push
cmp
sti
add
leave
inc
fcompl
jae
sti
sbb
imul
cmp
dec
inc
sahf
inc
inc
xchg
inc
mov
mov
out
pusha
fsts
pop
mov
lahf
int
lahf
mov
mov
mov
js
cmpsl
loop
subb
lahf
int3
fildll
xorl
loop
arpl
leave
fdivrp
arpl
lods
mov
call
ja
mov
insl
jns
mov
mov
and
inc
jo
inc
lea
sti
shrl
inc
push
jnp
jne
pop
sbb
pop
ljmp
xchg
std
push
inc
cwtl
jecxz
jl
jge
jle
sarl
testb
test
mov
xor
sbb
push
and
xchg
aas
int
cwtl
or
testb
cmp
in
cmp
ret
fneni(8087
aas
lcall
loope
icebp
mov
mov
jno
mov
in
inc
or
push
push
inc
mov
or
lods
aam
adc
shll
mov
fdivp
mov
mov
push
push
xchg
jmp
std
sub
cs
lock
mov
pushf
enter
clc
jle
je
sbb
fsubrs
push
lods
inc
in
adc
xchg
and
outsl
lods
scas
lret
in
pop
xchg
iret
repnz
push
dec
stc
add
mov
jge
gs
mov
hlt
es
push
push
rclb
sub
out
dec
lcall
jns
sbb
inc
xchg
sub
stos
icebp
aaa
aas
mov
std
loope
mov
fildl
pop
push
imul
jecxz
les
in
jl
cmp
inc
aad
std
xor
loopne
sarl
inc
mov
insl
add
outsb
cmp
pop
fistps
add
xchg
xor
mov
mov
xchg
jp
ds
aaa
mov
insl
or
xor
sbb
and
jl
mov
mov
mov
inc
fadd
pop
in
or
or
lock
add
in
mov
cmp
fisttps
push
mov
pushf
mov
mov
into
mov
jmp
xor
lahf
cltd
into
popa
jns
jl
jg
pop
xchg
icebp
insl
fstpl
scas
adc
ljmp
jmp
push
push
decl
test
sbb
ja
mov
call
cmpsb
fstpl
icebp
lcall
not
loope
mov
jns
jge
cmp
clc
out
fucom
cmp
lock
mov
out
mov
lock
test
loope
hlt
cmp
loop
cmp
lock
mov
mov
fscale
idivb
out
lock
ret
clc
mov
cmp
cmpl
out
out
out
loopne
fdiv
iret
ffreep
mov
out
mov
lock
filds
jge
lock
add
jge
cmp
lock
cli
inc
insb
cmp
mov
stc
clc
mov
or
jmp
icebp
mov
aaa
pop
call
fnstsw
pop
loope
insb
scas
shll
xchg
push
sbb
push
xlat
fisubrs
in
std
shrb
pop
cmp
rcr
pusha
pop
fistps
cli
inc
sti
lret
jg
sub
adc
sbb
lcall
add
addr16
icebp
in
aad
std
xchg
dec
jmp
andb
mov
enter
fisubrl
push
addb
adc
jg
jp
pop
lret
iret
dec
fld
dec
mov
enter
xor
inc
jnp
out
push
loopne
ja
mov
jle
lret
dec
and
push
push
addb
pop
jp
popa
and
dec
push
jecxz
pusha
or
lds
fldenv
push
icebp
dec
jnp
mov
xchg
pop
iret
test
adc
iret
jae
decl
std
repz
mov
mov
addl
icebp
jbe
add
jl
jnp
jp
jns
clc
js
ja
jbe
jne
hlt
je
jae
jb
jno
lock
outsl
out
outsb
in
insl
add
insb
jmp
ljmp
out
out
in
add
fs
loop
loope
out
loopne
sahf
add
pop
fstpl
pop
add
pop
ficompl
pop
fcomps
xlat
push
push
aad
aam
fcmovbe
xchg
fs
push
rclb
into
dec
int
int3
add
lret
dec
enter
inc
and
sbbb
cli
adc
ljmp
adcb
ja
mov
add
jns
inc
enter
cmpsb
clc
in
outsb
sti
mov
jle
or
test
pusha
mov
enter
out
or
jle
mov
inc
cmpsb
out
enter
dec
dec
dec
icebp
ss
and
inc
std
xlat
fistpl
cmp
clc
repz
mov
inc
mov
popa
xor
clc
popa
fsub
jmp
popa
lret
mov
into
scas
dec
cmc
inc
int
dec
inc
dec
xor
jb
jae
inc
push
ret
test
ljmp
adc
or
push
sbb
pop
mov
fld
or
in
out
fnstsw
out
imul
jmp
outsb
xchg
movsl
xor
repnz
shlb
dec
test
sub
cmpsb
std
push
es
ljmp
imul
adc
and
and
mov
pushf
push
stos
call
adc
inc
enter
add
cmp
inc
icebp
cwtl
hlt
jae
pop
les
cld
xlat
jmp
cmp
inc
je
inc
dec
jno
inc
dec
xor
stos
pop
ljmp
movl
xor
and
mov
ret
popf
imul
fisttpll
fldln2
in
inc
push
enter
pop
insl
cmp
push
fidivl
inc
xchg
scas
pop
int
add
jne
pop
push
mov
lock
call
lcall
out
leave
repnz
mov
jmp
sbbl
mov
mov
daa
adc
stc
and
cltd
aaa
mov
push
mov
mov
call
shlb
cs
test
mov
in
mov
int3
inc
nop
movsl
test
in
hlt
xchg
push
insb
iret
in
addr16
leave
xlat
inc
add
dec
inc
lds
pushf
fdivrs
or
movsb
xchg
push
jle
adc
imul
pop
mov
fnsave
dec
lea
int
fadd
fs
iret
hlt
dec
cmpsl
stos
inc
out
data16
dec
inc
test
int
mov
dec
shr
cmc
data16
movsl
fs
iret
or
push
adc
push
cmp
in
imul
push
xchg
cwtl
clc
out
or
mov
scas
popa
ret
inc
sub
inc
mov
nop
cmp
cmpsb
inc
cmp
fwait
shr
cmp
sub
xor
inc
cld
insl
dec
aad
call
shrb
outsl
leave
lods
xchg
aam
pusha
addr16
xor
call
cwtl
pusha
cmpsb
into
arpl
pop
mov
pusha
insb
iret
stc
push
fcmovnb
pop
loope
cld
sbb
add
jecxz
stos
push
lret
pusha
xchg
sbb
jno,pn
rcr
outsb
aas
in
test
sub
icebp
mov
xor
leave
fstpl
test
jbe
lock
inc
jmp
cmpl
rolb
add
jecxz
icebp
insb
add
int
testl
mov
loopne
add
cmp
adcb
add
mov
jmp
cmpsb
sarl
bound
sahf
mov
mov
cmp
mov
mov
mov
xor
mov
mov
xor
lods
add
stos
sub
cmpsl
daa
cmpsb
movsl
add
mov
mov
push
popf
add
lcall
xchg
pop
xchg
push
xchg
add
xchg
adc
jle
mov
or
mov
xchg
xchg
test
add
ss
push
cmp
das
in
add
inc
sub
rorl
push
ljmp
icebp
pop
cmp
jnp
inc
andb
cmc
push
mov
jb
rorl
jge
mov
es
fisubrl
sti
ss
lahf
jp
pop
or
addr16
popa
inc
dec
mov
dec
stc
vxorps
fistpll
popa
leave
enter
pop
lds
push
int
fimuls
pop
inc
xchg
xchg
fmull
sbb
call
stc
xlat
fisttps
inc
loope
jecxz
dec
fnstsw
jb
mov
int3
fisubs
out
dec
scas
mul
push
dec
lea
cld
pop
dec
xlat
lret
pop
inc
std
int
jecxz
in
jmp
icebp
xchg
pop
push
push
push
test
mov
pop
cmpsb
popa
cld
push
dec
mov
ror
xchg
jmp
cmpsb
aam
popa
mov
repz
fstpt
aas
ret
inc
inc
aaa
fincstp
stc
mov
das
push
dec
mov
xchg
vxorps
pop
fsubrs
ljmp
push
shl
pop
mov
icebp
testl
std
push
jp
divb
out
push
insb
pop
call
ret
push
xlat
leave
out
leave
movsl
roll
cmp
mov
popf
xchg
xorl
add
dec
inc
dec
mov
in
in
mov
fstpl
push
fidivrl
ljmp
flds
jmp
xchg
jg
out
loope
dec
popa
lret
adc
xchg
jmp
push
icebp
cmc
dec
and
aaa
jnp
sti
jno
xor
pop
iret
imul
loopne
jno
int
popf
out
idiv
xchg
cmp
mov
xor
test
rolb
jmp
pop
sar
lret
pusha
lret
dec
dec
mov
test
xlat
dec
mov
jmp
ret
lock
roll
pop
jge
dec
fs
inc
jge
js
xchg
icebp
xchg
repz
popa
out
pop
xor
ficompl
jp
jo
cmp
std
jecxz
in
fidivs
aaa
pop
cmc
outsb
frstor
xor
std
adc
out
fucomip
out
mov
push
shlb
sbb
out
fidivs
cli
lods
mov
dec
inc
push
jp
dec
adc
int
cwtl
sarb
movsb
fcomp
cmp
shr
push
shr
mov
push
cwtl
xchg
test
mov
jns
stc
in
lock
stc
icebp
leave
lods
out
cmp
popa
in
in
or
loope
jb
jecxz
mov
insb
rorl
xchg
push
jecxz
fwait
icebp
pop
mov
lods
test
int
xchg
push
fdiv
insl
or
dec
xchg
lret
in
mov
push
mov
push
in
ja
dec
movsl
test
sti
leave
push
xchg
mov
fisttpl
in
fdiv
cwtl
out
push
das
ret
rolb
inc
cmp
lods
lds
rep
jno
sub
pop
test
test
pop
test
pop
sub
icebp
aas
jbe
sarl
cmpsb
test
mul
and
or
stc
and
sar
inc
and
xor
sub
push
mov
ja
adc
lea
mov
js
xor
jne
icebp
fnstcw
inc
cmp
jb
icebp
std
in
pop
xchg
test
fcomi
mov
ss
or
add
lret
dec
rclb
fists
sbb
adc
in
sub
inc
lret
lret
loope
call
inc
iret
andl
pop
fidivrs
mov
fs
cmpsb
push
rcl
call
xchg
inc
fcompl
ret
xchg
dec
divb
pop
cmovnp
add
dec
push
bound
inc
icebp
sbb
loopne
iret
fadds
daa
jg
lcall
aaa
pop
leave
mov
or
sub
out
mov
test
xlat
sbb
aas
add
adcb
das
dec
jno
dec
fnstsw
test
js
xlat
je
pusha
lods
add
fimull
outsl
xchg
xor
clc
enter
xor
lret
push
dec
idivb
jb
mov
lods
mov
mov
imul
and
mov
stos
sbb
leave
dec
mov
dec
aas
ja
fnstcw
mov
xchg
mov
xchg
pusha
insl
pop
test
dec
lret
ret
jmp
xor
repnz
lahf
inc
xchg
out
lock
adc
push
lret
leave
sbb
bswap
pop
ja
icebp
push
andl
leave
mov
gs
mov
cli
xchg
mov
dec
mov
or
mov
pop
pushf
test
aad
cmpsl
xchg
push
dec
add
es
pushf
clc
dec
lock
iret
arpl
fldl
repz
test
mov
mov
sbb
notb
in
dec
cmp
filds
in
repnz
incl
fisubrl
mov
dec
negb
rclb
xor
and
loopne
scas
mov
pop
and
call
call
pop
repz
shrb
imul
xlat
sbbb
pop
addr16
nop
or
out
in
sub
jo
out
mov
xchg
cwtl
inc
cmp
leave
jns
lcall
mov
leave
fildll
into
fld1
je
mov
sti
popa
cltd
hlt
test
js
negl
pop
sti
out
adc
xor
rcr
push
mov
xchg
hlt
roll
mov
mov
adc
fmull
stc
js
cmp
test
cmp
mov
dec
mov
insl
aaa
stc
int3
sbb
pusha
data16
ds
outsl
lret
or
in
xchg
xchg
sbb
adc
js
sbb
pop
ja
pop
into
dec
leave
outsl
jo
dec
shll
imul
loopne
imul
in
sbb
xor
mov
loope
arpl
inc
or
out
into
pop
loope
mov
lea
adc
lea
mov
xor
or
idivl
scas
jecxz
pop
jmp
in
sub
pop
popa
in
stos
mov
mov
das
inc
test
loopne
jno
jge
movsl
leave
into
je
cltd
jge
sbb
nop
adc
push
and
adcl
sub
and
idivb
ret
insl
cmp
ljmp
sbb
movsl
lock
jge
jge
cmp
insl
std
std
cmp
cld
repz
jl
imulb
fcmovnbe
stc
scas
neg
jns
scas
incl
jno
scas
stc
pop
popa
jo
mov
out
fdiv
dec
pop
call
push
fcmovnb
lret
scas
cmc
fisttps
cmp
enter
xor
inc
scas
std
pop
shl
inc
mov
fstpl
mov
aaa
xor
cs
lcall
ja
sti
out
icebp
insb
and
cmp
sub
popf
orl
stos
mov
shl
jne
jge
mov
or
add
push
cli
push
enterw
pusha
sbb
rclb
cmpsb
std
adc
cmpsl
loop
pusha
jmp
addl
mov
sbb
addr16
and
jnp
icebp
imul
dec
daa
test
pop
jl
jge
dec
xchg
in
stc
std
scas
cmp
rolb
cmc
shrb
das
mov
andl
sar
and
xor
adc
xor
test
cmpsb
stc
sbb
jnp
int
ja
cld
cmc
pop
jg
xchg
rorb
xor
call
xchg
xchg
add
popa
and
int3
lock
pusha
pop
fwait
add
std
aas
stc
push
sbb
lret
test
cmc
push
stc
std
mov
stc
jmp
sub
cmpsl
std
cmp
rorl
call
cmp
cld
icebp
leave
in
clc
fucomip
jns
idivl
clc
stc
mov
js
lahf
cmc
cmp
iret
cmp
lock
xchg
fcomip
fwait
cmp
jb
fnstsw
icebp
inc
cmp
add
lock
cmp
int
inc
aad
clc
fucomp
sbb
cmp
inc
mov
sbb
jo
scas
add
pusha
inc
out
cmp
lock
idivl
movsl
filds
xchg
clc
xchg
out
fstpl
fbld
test
cmp
mov
mov
call
fst
cmp
lock
loope
cmp
icebp
movsl
fistpll
call
lahf
jns
lret
ret
ljmp
out
lea
inc
insb
insl
cmp
in
pop
aas
ror
in
mov
lret
fstps
cmp
loope
aad
lahf
mov
decl
xor
jns
mov
fs
mov
ss
or
cmp
sbb
push
lock
fbstp
mov
stc
pop
lock
call
in
orl
jbe
cmp
xor
std
out
icebp
faddl
cltd
mov
push
loope
stc
popf
jg
test
jl
jno
sti
push
fldenv
jp
std
out
xchg
fld
mov
mov
loope
mov
jmp
sbb
xor
arpl
fcmovb
icebp
mov
lods
sub
xor
cltd
push
add
outsl
pmuludq
test
mov
aaa
pusha
cli
jg
insl
loop
mov
add
inc
clc
dec
cmp
shlb
sbb
pop
jb
adc
add
xchg
mov
pop
movsb
cmp
dec
push
outsb
cmp
leave
xchg
loop
loopne
adc
or
ret
pusha
xor
mov
mov
in
stc
jbe
test
ret
test
cs
or
fsts
fadd
aaa
add
pop
dec
fwait
push
cmp
scas
subl
sti
repz
inc
mov
pop
aad
add
movsl
test
or
cli
rcpps
inc
popa
cmp
mov
mov
xor
mov
push
cli
sbb
cmp
loope
outsl
push
cmp
lods
aaa
test
outsb
and
mov
rcll
lret
xor
add
mov
outsl
inc
scas
add
sbb
bound
arpl
push
xor
jp
test
aam
adc
cmp
lret
pop
xchg
and
jmp
dec
jne
aad
sbb
test
pop
je
stos
pop
mov
dec
lret
sub
data16
or
push
movhps
repz
mov
sub
add
push
adc
mov
sbb
fs
fistps
ret
mov
add
pop
sub
sub
addb
test
loop
movl
sub
clc
loop
push
add
mov
mov
add
fldl
jle
mov
in
mov
add
adc
add
fwait
jo
inc
inc
cli
add
inc
arpl
test
jne
push
add
imul
pop
movsl
roll
add
sub
addb
mov
add
in
dec
repnz
jo
call
add
xchg
das
rorb
int
jns
fdivrs
push
rcll
imul
lcall
scas
mov
lea
sahf
repnz
mov
jecxz
flds
cmc
ficompl
rolb
add
sub
mov
jns
rcll
jge
adc
sar
sbb
ret
adc
mov
pop
xchg
rcl
lock
jmp
mov
aam
insl
jne
imul
ja
vcvtsi2ss
inc
arpl
inc
enter
push
int
in
call
out
cmpsb
in
ljmp
lret
into
adc
lret
sub
ds
imul
cld
icebp
nop
jecxz
push
test
in
aam
fisubrl
inc
aas
push
mov
xor
aam
nop
dec
mov
jecxz
hlt
mov
pop
lds
pop
ret
push
lret
icebp
in
out
mov
dec
fbstp
subl
into
push
lret
cltd
pop
mov
push
arpl
inc
mov
in
cmpsb
repnz
pop
cmpsb
jno
das
xor
sahf
pop
jle
aad
jge
stc
push
outsb
sbb
jle
jmp
inc
jecxz
arpl
loop
cli
fisubrs
fisubrl
inc
add
stc
cmp
xor
sub
lret
sbb
lds
xor
or
or
or
mull
jb
aam
mov
add
shlb
and
jecxz
arpl
jbe
lock
sbb
jp
pop
push
inc
add
pop
cmp
enter
sbb
gs
imul
adc
mov
in
mov
testl
in
test
sub
out
in
jecxz
loope
filds
flds
roll
inc
cmpl
mov
subl
cwtl
orl
andl
jb
in
arpl
loop
bound
ret
bound
bound
cli
hlt
loop
fists
scas
xchg
out
aad
cmpsb
lds
imul
icebp
xor
jbe
enter
pop
xchg
addr16
out
cltd
cmpsl
jecxz
arpl
data16
fisubl
dec
sbb
jp
pop
test
in
cmp
jp
pop
sub
movsl
sbb
sbb
sbb
nop
sbb
gs
divl
hlt
test
xor
add
iret
add
ds
in
mov
lds
les
push
repz
out
pop
jae
mov
repnz
das
jb
xor
xor
jno,pt
push
dec
sarl
mov
push
sbb
pop
adc
arpl
and
insb
bound
jae
mov
jmp
pop
cmc
jp
pop
push
cmp
mov
mov
and
sbb
adc
and
fdivrl
mov
ret
call
cmpsl
mov
adc
jle
out
outsb
and
repz
mov
out
in
rcrb
mov
or
outsb
jecxz
sub
sarb
les
fildll
mov
dec
xchg
test
sbbl
pop
jecxz
loopne
cs
sbb
js
jae
pop
sbb
adc
adc
or
sbb
xchg
xchg
addr16
inc
stos
and
popa
cld
pop
sbb
mov
or
test
ficompl
pop
or
cli
jne
int
test
jp
pop
nop
mov
jecxz
outsb
imul
ret
iret
ret
inc
ret
xor
sub
ret
sbb
adc
or
xchg
cli
jg
clc
mov
fcompl
cmp
sbb
mov
mov
loop
cmp
xor
sub
and
lds
mov
ret
mov
test
imul
outsl
clc
jmp
inc
addr16
pop
push
cmp
push
sbb
sbb
sbb
inc
sbb
sbb
sbb
sbb
popf
cmp
sbb
xchg
or
or
mov
imul
in
or
int
test
sbb
push
addl
xor
jae
inc
int3
mov
inc
xchg
ret
xor
push
push
mov
bnd
jb
xor
outsb
cmc
pop
lock
insl
mov
adc
lds
mov
sub
in
gs
fs
push
arpl
loop
bound
ficompl
xor
lods
jp
pop
and
lcall
mov
mov
gs
push
arpl
lret
bound
in
ficoml
int
dec
jp
pop
cmp
push
sbb
sbb
mov
xchg
lret
push
int3
loopne
into
fiaddl
or
xchg
andl
out
aam
rol
dec
ret
add
repnz
xor
shlb
mov
xor
xor
or
bound
call
ds
cs
mov
rcll
jno
popa
fadds
cmp
xor
test
in
int3
mov
call
ds
pop
pop
dec
int3
shll
jecxz
sbb
lahf
arpl
imul
push
lds
inc
ret
mov
pop
test
adc
stc
hlt
gs
daa
scas
or
jae
outsb
dec
push
ds
cs
push
cmp
pushf
mov
lea
xchg
mov
addr16
mov
int3
enter
bound
pop
bound
cli
jne
loopne
pop
jno
fs
sbb
pop
iret
mov
jno
push
mov
push
jge
cli
fwait
jecxz
pusha
fsub
inc
cmp
stos
or
adc
in
jmp
jmp
xor
add
mov
mov
cmpsl
mov
jmp
and
in
jecxz
loope
push
add
mov
ret
cltd
pop
xchg
aam
xchg
bound
out
in
orb
ljmp
dec
push
movsl
pop
sbb
xor
sub
test
pop
pop
xor
mulb
in
idiv
repz
sbb
push
xor
test
sbb
sbb
adc
or
add
leave
add
mov
xor
andl
add
test
pop
js
in
push
push
fldenv
lods
fwait
gs
and
add
loope
js
repnz
xor
sub
sahf
cmp
in
ret
push
cli
test
ret
sbb
notl
inc
jecxz
arpl
gs
ret
mov
mov
xchg
in
mov
jecxz
outsb
cwtl
pop
jp
mov
mov
pushf
rclb
aas
pop
ss
inc
insl
call
cmpsb
mov
repz
sbb
out
xor
les
xor
outsb
lret
mov
js
pop
flds
and
mov
in
pop
sub
or
push
add
sbb
jmp
loop
bound
fidivrl
add
pop
out
add
into
sarl
mov
or
out
xorl
jae
mov
repnz
mov
mov
popl
mov
loope
iret
cmp
out
mov
mov
xchg
movsl
stc
gs
test
jnp
in
sub
out
pop
lea
lret
jmp
movl
cli
push
in
fidivrl
fs
pop
arpl
in
leave
jmp
cld
fsub
fs
pop
arpl
mull
fisttpl
fwait
cltd
cmpsl
lret
rorl
out
enter
xchg
lds
les
pop
add
arpl
pop
push
pop
mov
test
push
mov
test
repz
add
add
fisubrl
push
mov
std
scas
repz
icebp
imul
mov
repnz
ss
pop
stos
xchg
sbb
sbb
fsts
xlat
or
roll
shll
out
mul
jnp
pop
xchg
iret
movsl
roll
mov
ret
mov
lahf
bound
in
xlat
jecxz
arpl
loop
bound
outsb
or
add
sbb
push
pop
or
dec
mov
rclb
inc
or
add
test
add
orl
lahf
mov
mov
and
popf
ret
lcall
cmp
movsb
push
lea
inc
in
push
scas
in
jle
mov
bnd
insb
ds
loop
outsb
hlt
pop
icebp
dec
out
cwtl
mov
mov
add
out
pop
fldt
add
push
adc
dec
xor
mov
fsubr
sbb
cltd
je
enter
gs
mov
repnz
imul
mov
xlat
sub
insl
sti
inc
mov
and
push
dec
repz
in
xor
and
inc
out
jecxz
in
pop
daa
cmp
fildll
stc
arpl
jne
in
jp
jmp
sub
cwtl
dec
aad
ret
inc
ret
ds
mov
imul
mov
arpl
bound
in
fwait
out
adc
mov
imul
int
push
cmpsl
leave
outsl
loope
fpatan
xchg
test
cmpl
mov
in
aaa
mov
mov
popf
addr16
cmp
xor
sub
and
sbb
or
mov
shrl
mov
scas
xchg
or
test
mov
jb
xor
outsb
in
test
test
orl
cltd
or
cmp
mov
cmc
popa
cmpsl
in
ret
sbb
mov
cltd
mov
lods
jp
test
sbb
sbb
sbb
roll
gs
in
fs
arpl
outsb
out
xchg
push
fisttpl
xlat
rcll
cmpsl
sahf
jb
ds
pop
mov
mov
mov
shrb
test
mov
jb
xor
xor
cmp
aad
push
mov
outsb
test
in
aad
arpl
loop
out
repz
in
mov
jmp
xor
xor
mov
mov
lret
fpatan
ret
shll
push
xchg
gs
pop
js
imul
jnp
pusha
test
add
mul
push
je
fwait
test
xor
mov
icebp
rorb
push
imul
arpl
imul
aam
cmpsl
mov
jmp
call
inc
arpl
jnp
jmp
cmpsl
sbb
lahf
daa
push
mov
xor
xchg
mov
cwtl
sub
sub
stos
dec
test
sahf
xor
and
cmpsl
movsl
in
jae
inc
xor
test
jne
daa
and
sbb
mov
xlat
je
pushf
push
out
imul
sub
test
xchg
cs
loope
push
jg
sbb
jne
test
mov
cs
clc
pop
dec
pop
cmpsl
cmc
shr
stc
adc
lods
pop
in
cmp
clc
and
jge
into
mov
mov
add
loopne
fmuls
imull
out
push
sarb
enter
into
xchg
or
out
sub
cmp
dec
inc
call
enter
xchg
aaa
cmp
movsb
cmp
push
lret
icebp
inc
push
or
cmp
cmpsl
test
imul
dec
mov
jae
jo
in
arpl
fbstp
cmp
fdivl
dec
insb
bound
mov
inc
mov
gs
jl
inc
popa
pop
iret
push
push
fmul
fcomi
inc
add
or
dec
xlat
fmuls
movsb
cmp
mov
lds
dec
nop
psllw
push
dec
cwtl
aaa
jns
stc
jg
mov
jmp
repz
das
ret
push
iret
pop
loope
push
cs
ljmp
ljmp
pusha
fimuls
gs
jecxz
gs
dec
add
js
fadd
dec
test
sbb
sbb
xchg
lods
inc
add
lock
jge
dec
xor
sahf
popa
add
repnz
pop
pop
in
repz
mov
ret
add
mov
lock
jno
jle
dec
into
icebp
ret
jno
mov
sarl
in
icebp
inc
inc
sarb
enter
lret
je
jo
scas
pop
push
js
pop
fldt
fs
fisttpll
popl
sahf
ljmp
cld
jecxz
mov
jmp
push
mov
push
stc
mov
mov
out
mov
push
fs
push
push
ret
repz
mov
jmp
adc
stc
fucomi
in
call
and
xchg
mov
dec
add
loope
jecxz
or
outsb
pop
cmp
xlat
inc
and
jb
popa
inc
mov
popf
pusha
mov
lahf
jnp
shl
cmp
sbb
add
add
sbb
fsubrl
loopne
cltd
popa
sbb
xor
loop
loopne
cli
cltd
repnz
ror
lret
iret
outsl
sbb
loopew
stc
pusha
jno
or
or
ficoml
xchg
in
incb
shl
scas
jecxz
pop
sub
lock
push
hlt
imul
iret
notl
sti
popf
cmp
dec
pop
cmp
mov
pusha
clc
sbb
mov
inc
leave
push
lret
out
repnz
add
icebp
loopne
jmp
and
dec
cvtdq2ps
out
jne
jl
into
popf
dec
insl
leave
int
int
lea
ret
dec
pop
lods
xor
inc
jae
xor
das
sub
stos
out
gs
js
pop
repnz
fucomp
les
mov
ficomps
xchg
psllw
flds
inc
mov
test
aas
inc
push
je
mov
adc
and
inc
es
loop
imul
in
lock
mov
xchg
mov
leave
lret
push
inc
inc
aam
xchg
fmul
imulb
pop
int
ret
jb
sbb
cmp
out
mov
call
fistl
pop
popf
repnz
dec
loop
mov
push
fdivrs
test
lds
mov
nop
bswap
mov
orb
add
dec
pop
jno,pn
mov
fldcw
inc
fnstenv
jp
xlat
cld
lds
addr16
fildll
shlb
lret
mov
fimuls
mul
xchg
lods
add
xchg
fdivrl
jae
shrb
loopne
imul
sbb
fidivrl
push
dec
dec
lret
stc
mov
out
adc
in
mov
test
mov
push
ret
out
div
jbe
iret
int3
or
call
push
int
adc
jecxz
loopne
sbb
mov
dec
push
sbb
cmp
iret
fdivl
fstps
xchg
ljmp
dec
dec
lret
das
hlt
icebp
imul
aas
fisubs
push
jns
push
neg
inc
pop
mov
pop
cmp
or
loope
insb
into
dec
loopnew
pop
nop
movsl
inc
mov
xchg
pop
int
test
pushf
xor
xchg
xor
shll
push
sbb
adc
pop
jno
dec
icebp
fisttps
push
xchg
icebp
push
test
pop
mov
aas
fidivs
xchg
dec
ja
mov
in
pop
fisubs
in
xchg
cmc
sar
push
loope
into
push
mov
enter
inc
jnp
dec
jge
inc
cli
mov
fs
repnz
call
jae
mov
stc
call
aaa
imul
and
mov
mov
stos
cmc
aam
xlat
scas
ret
dec
fs
xchg
pusha
in
leave
sub
mov
je
inc
lock
cmpsl
sub
xor
jecxz
call
push
sub
or
test
enter
xchg
push
xchg
scas
and
leave
ljmp
jb
jmp
or
jnp
insl
jp
or
cmc
cltd
cmp
cwtl
xchg
in
sbb
or
cli
ljmp
jne
jmp
sbb
daa
push
nop
clc
test
idivl
pusha
stc
push
sbb
bound
sub
inc
fisttpll
dec
xchg
das
mov
add
cmp
repz
add
addr16
ror
les
jae
call
pop
rcrb
add
pusha
mov
xlat
cmpsl
pop
push
and
iret
dec
adc
int
push
sub
cs
xchg
push
rcl
loope
dec
cmp
in
jne
add
add
mov
mov
sub
pop
push
icebp
sub
imul
gs
jecxz
int3
stc
xor
data16
aad
inc
lods
jle
cli
mov
fldt
inc
addr16
cltd
ret
mov
repz
mov
cmp
test
fucomp
xchg
ljmp
mull
cmp
lahf
jno
fcompl
test
das
pop
bswap
jae
fsubr
insl
fnstsw
push
and
adc
out
call
lock
ljmp
hlt
cmc
pop
lods
sub
add
mov
dec
out
out
lret
icebp
test
xor
push
or
and
bnd
addr16
clc
fidivrl
repnz
lods
pop
movsl
outsl
in
imul
fistpl
pop
pop
ret
cmp
mov
inc
adc
rcl
push
pop
std
iret
inc
into
cmp
in
ljmp
dec
add
daa
out
sbb
das
data16
pop
add
pop
imul
out
aam
movsl
pop
mov
popa
jmp
mov
fisubrs
in
out
add
cmp
imul
repnz
fadd
in
pop
jge
rclb
jmp
jno
aam
push
sbb
pop
in
push
test
cwtl
sbb
out
pop
iret
iret
or
pop
std
icebp
mov
cld
xor
cli
ss
or
jbe
test
dec
mov
cmp
imul
stc
adc
sub
loope
dec
inc
sub
js
hlt
and
movsl
out
cmp
dec
dec
mov
jp
outsl
inc
icebp
js
rcrl
imul
ficoml
out
jae
outsl
cltd
sbb
in
cmp
xchg
bound
mov
maskmovq
imull
mov
je
push
stos
dec
dec
mov
pop
jbe
jno
mov
test
shlb
insl
push
in
sbb
aaa
js
cmp
jcxz
test
in
ret
shll
scas
adc
dec
push
dec
xor
ss
mov
pop
push
add
imul
or
movb
popa
push
xchg
cmp
insb
in
fsubrs
fcoms
sub
add
inc
sbb
rcrl
stc
nop
loop
xor
outsb
nop
jmp
mov
mov
icebp
inc
pop
mov
vshufpd
adc
cmp
iret
inc
mov
jmp
sti
icebp
dec
leave
mov
jnp
mov
cwtl
xchg
pop
pop
std
mov
mov
int
jl
loope
btc
addr16
jns
adc
gs
jg
lds
push
lahf
in
ror
out
adc
aaa
xchg
xor
dec
cli
push
out
lcall
and
pop
mov
mov
into
sub
fwait
cmp
jno
dec
dec
lret
or
ficoml
leave
add
nop
aaa
jge
pop
hlt
stos
and
ret
jmp
das
loope
fistpll
jae
jmp
jae
add
jno
bnd
fsubp
mov
insb
cwtl
xlat
push
int
xchg
sbb
mov
ljmpw
in
and
sub
imul
rcrb
fcoml
push
enter
fidivrs
in
xchg
in
iret
dec
dec
clc
enter
cmp
daa
xlat
lods
mov
mov
out
sbb
mov
xchg
pop
outsb
add
adc
mov
push
iret
xchg
leave
pop
pop
enter
mov
negl
imul
push
pop
call
jo
les
sar
inc
aaa
add
jge
into
outsl
inc
icebp
cmp
stos
and
jmp
mov
ljmp
enter
sarl
bound
jno
outsb
nop
lahf
lret
cmpl
imul
mov
mov
sbb
dec
dec
mov
pop
pop
ds
je
hlt
mov
inc
xor
popf
int3
leave
xor
popf
subb
inc
push
rcrl
inc
add
dec
shl
mov
std
jmp
and
imul
in
bound
in
push
stos
mov
pop
xor
je
in
and
push
mov
out
addr16
imul
data16
push
enter
and
mov
fidivl
xchg
loopne
sbb
shl
fs
scas
pusha
xchg
lods
jns
mov
push
loopne
xlat
loopne
movsb
pop
test
in
lods
pop
mov
xor
add
outsl
repz
cld
xchg
out
insb
xchg
push
test
pop
test
shrl
add
sub
scas
rorb
cmp
mov
inc
insb
enter
jae
imul
mov
call
xchg
ja
shll
adc
or
mov
adc
iret
mov
sub
push
dec
in
imul
in
xor
out
cmc
arpl
jo
add
stc
lods
sahf
fsubs
aad
in
in
pushf
shr
pusha
and
cmp
test
gs
xor
xchg
fsubrl
dec
ret
fsubrs
call
mov
cltd
data16
pop
adc
lds
das
xor
dec
inc
popa
xor
lret
out
push
addr16
add
pusha
inc
jecxz
stc
push
xor
inc
dec
out
sub
sti
mov
inc
add
das
pop
in
testl
data16
gs
orb
xor
rolb
popa
and
adc
xchg
and
jbe
dec
cmpsl
or
cld
fldl
call
mov
mov
push
out
mov
in
push
daa
clc
mov
push
and
call
aas
ret
mov
sbb
mov
out
out
lods
pop
nop
imul
ss
cmpsl
cbtw
push
adc
cld
fcomp
cmp
sub
movl
addps
iret
mov
pop
iret
scas
jne
inc
ficompl
dec
mov
insl
dec
ret
sbb
cmp
lret
pop
fisubl
mov
mov
jne
mov
xor
pop
xlat
sub
les
mov
lcall
mov
push
xor
in
mov
or
daa
das
sbb
xlat
inc
jecxz
mov
aaa
cmpsb
cmp
inc
data16
push
jg
adc
test
in
in
jno
shll
ljmp
adc
mov
mov
or
fldl
sbbb
in
inc
mov
mov
leave
out
daa
adc
lods
push
and
gs
int3
cs
in
fiadds
jle
movsl
cmpsl
and
or
mov
sub
fcomps
out
push
sarb
or
cltd
iret
stc
inc
dec
test
call
mov
xor
sub
xor
xlat
fnstenv
adc
fsubrl
pusha
dec
iret
icebp
dec
sbb
sbb
jle
or
sub
scas
in
dec
insw
test
add
movb
sub
aam
or
and
sbb
enter
jbe
das
sbb
xlat
cmpsb
mov
xor
scas
push
sti
ss
sub
xor
cmpsl
adc
inc
jmpw
pop
mov
push
scas
jecxz
call
and
scas
mov
notl
outsb
icebp
push
pop
out
and
jnp
ds
mov
add
push
loop
cwtl
adc
jae
fucomip
sub
bound
push
cmp
loopne
sbb
xor
outsl
xor
icebp
mov
mov
test
ret
jmp
int3
leave
dec
push
les
insb
or
mov
or
or
xchg
popa
out
xlat
cltd
lret
inc
cli
pop
loop
shl
sub
in
jmp
popa
mov
xchg
fcomps
pop
adcb
iret
loope
push
loopne,pt
addr16
popa
push
xor
gs
int
xor
mov
test
hlt
lahf
shlb
push
mov
dec
cmp
or
cmp
mov
dec
loop
pop
out
nop
inc
adc
push
sub
test
and
lahf
daa
stc
add
xchg
das
lock
xor
ret
in
cld
push
mov
insl
cmpsl
inc
repnz
dec
into
dec
sbb
jmp
scas
pop
sub
mov
cmc
cmpsl
rcrb
jmp
jmp
dec
xor
test
ret
pop
mov
dec
addr16
insl
jbe
push
das
or
loopne
add
inc
call
loopne
pop
in
xor
jno
sbb
gs
popl
fldcw
into
lcall
std
or
imul
cmp
mov
xchg
out
mov
inc
push
jmp
jo
imul
in
xor
popf
lea
sbb
mov
in
or
into
add
jo
int3
out
or
rcl
aaa
arpl
xchg
movsb
rcrl
mov
bound
xor
leave
cmp
hlt
and
rcl
aam
imull
mov
cmp
aaa
rolb
out
mov
adc
mov
mov
push
mov
out
gs
out
sub
push
mov
cmp
sub
or
xchg
push
mov
bound
pop
addr16
int
pop
dec
je
vmovaps
pop
fs
fnsave
xchg
xchg
test
lods
inc
dec
rolb
push
push
out
rorb
and
dec
mov
push
dec
fxch
xlat
fisttpll
or
jmp
dec
push
shlb
addr16
mov
orl
mov
pop
lds
xchg
js
mov
xor
pop
clc
out
xlat
mov
dec
push
jae
jg
lahf
xchg
outsb
pop
mov
or
xchg
loopne
int3
in
cwtl
ret
push
aam
inc
les
xor
cmpsl
das
mov
pop
xchg
les
pushf
pop
ret
dec
push
jmp
aam
aaa
cwtl
xor
push
rorb
adc
jg
jle
addr16
fiaddl
int3
push
sbb
test
in
pusha
mov
pop
push
and
in
push
dec
xchg
sub
xor
add
dec
cmp
xor
xchg
mov
jle
iret
dec
dec
dec
rcll
push
dec
dec
out
pop
jl
add
sub
sub
sbb
push
xchg
aam
or
ror
mov
mov
push
push
mov
pop
fadds
pop
ret
dec
popa
sbb
push
gs
sbbl
filds
xchg
pop
jns
xlat
notl
fdiv
into
add
fsubrp
fsubr
in
enter
push
out
repnz
xchg
iret
fdivrl
pop
ficoms
push
into
pop
add
pop
push
gs
xlat
fiaddl
dec
push
or
add
dec
pop
icebp
inc
repz
aam
out
insb
mov
orb
push
loopne
aam
fildll
add
insb
adc
gs
int3
inc
or
fimull
pop
xchg
pop
pop
dec
je
lret
adc
lahf
rcr
sbb
mov
call
dec
pop
fbstp
jmp
push
imul
adc
dec
out
fldl
sbb
popa
pop
mov
fstpt
repnz
pop
fmul
dec
addr16
push
pop
bnd
pop
adc
loopne
fcompl
int3
gs
arpl
daa
push
jp
dec
shll
insb
into
pop
cld
addr16
in
mov
push
sub
jb
int3
dec
lods
ss
pop
lret
jmp
insb
fnstsw
xlat
push
pop
int
jge
dec
push
decw
into
fmull
cli
jle
vmaxss
pop
jle
dec
imul
insb
popf
inc
push
push
jg
dec
push
sbb
xor
jns
aad
rcll
ror
jmp
pop
dec
clc
fisubl
movsl
lcall
add
dec
fisttpll
push
movb
pop
pop
leave
xlat
inc
int
out
fsubp
loop
fists
fsubr
inc
mov
call
mov
loopne
aad
mov
addr16
push
pop
subl
mov
ljmp
jle
movl
push
dec
xchg
mov
push
aad
into
pop
lret
imul
jmp
add
outsb
rol
dec
fmul
andb
jmp
push
leave
fmulp
mov
out
pop
dec
jnp
pop
fwait
push
mov
pop
adc
cli
dec
lret
aam
jle
push
clc
dec
inc
fsin
inc
ficomps
jge
xlat
in
addb
pop
mov
mov
add
xor
cwtl
fabs
jle
push
inc
test
aam
pop
rcrb
dec
add
mov
xchg
data16
out
dec
jmp
jo
popf
jp
push
push
int3
shrb
and
pop
gs
lods
in
push
fwait
jae
jmp
push
pusha
popa
mov
xlat
adc
lds
int
aam
push
insb
rclb
call
inc
push
clc
pop
add
push
push
frstor
rol
fistl
loop
mov
mov
sub
int
fadd
fsubs
jbe
fildl
call
rcrl
iret
call
push
les
loopne
popa
fildl
pop
leave
js
pop
add
int3
pop
popa
sahf
data16
pop
aad
dec
addl
pushf
pop
mov
xlat
dec
aam
shll
in
out
imul
dec
in
fiaddl
mov
int
lret
push
push
lods
jle
mov
sahf
sbb
jl
into
pop
int
mov
inc
insb
frstor
out
pop
lcall
mov
lret
out
in
push
in
xchg
inc
int3
jp
loopne
pop
in
enter
out
fadd
aam
dec
push
rol
and
xor
icebp
pop
fsubrs
frstpm(287
rcr
jle
loopne
popa
mov
aam
popa
cmp
push
push
iret
pop
out
dec
fcoms
push
out
push
inc
pop
push
dec
fimull
imul
test
testl
pop
push
fists
adc
jle
ficomps
loopne
pusha
scas
mov
popa
pop
push
xchg
fcoms
sub
fidivrl
dec
pop
icebp
movb
stc
inc
ss
loopne
pop
jno
addl
dec
push
mov
out
insb
jp
aad
add
jo
push
pop
aad
pop
fldt
or
jp
lds
and
out
lock
xor
pop
loopne
mov
fistps
fld
xor
in
inc
push
repnz
call
fisttpl
mov
fsubr
aam
dec
andb
pop
movsl
jmp
jno
aad
lock
aad
or
jmp
push
add
pop
jne
int3
les
addr16
fbld
inc
lret
popa
push
das
test
nop
xchg
rcll
in
push
lods
ljmp
lret
cmpsl
inc
or
icebp
push
aad
int3
jmp
leave
mov
pop
out
adc
inc
jb
mov
xor
pop
dec
pop
xlat
loope
leave
aad
insb
in
dec
popf
jecxz
aam
insb
lds
cmp
mov
mov
fmul
push
fidivl
adc
jmp
hlt
dec
mov
int
scas
fdivrs
dec
mov
notb
fstl
mov
rclb
ficoms
pop
xchg
loopne
jmp
pop
cwtl
les
fldl
inc
push
fists
leave
gs
mov
repz
inc
cmp
dec
dec
iret
fbstp
sahf
xor
jg
pop
pop
push
add
pop
enter
out
dec
jnp
pop
call
inc
fcmovnu
mov
push
push
cmovs
or
push
pop
jmp
mov
imul
call
ss
jge
dec
inc
push
push
addr16
rol
push
dec
pop
push
dec
add
pop
int
into
loopne
mov
cltd
pop
dec
aad
movsl
pusha
mov
fistpll
pop
cmp
jo
pop
dec
dec
dec
in
lret
addr16
mov
adc
xchg
pop
out
push
nop
popa
cmpsl
lret
fcomps
rorl
repz
pop
lret
push
jl
pop
jp
xchg
push
repnz
les
inc
push
movsl
dec
sbb
lret
lds
or
mov
fst
fmulp
loope
and
int3
add
enter
pop
mov
dec
dec
push
icebp
mov
out
dec
leave
hlt
out
pop
andl
and
and
shll
gs
pusha
in
inc
clc
or
mov
ficoms
insl
mov
pop
push
outsl
call
mov
repz
push
shlb
xlat
dec
int
into
aas
loope
pusha
push
mov
enter
inc
fnsave
or
sbb
mov
push
inc
fisttpll
pop
insb
push
add
push
lret
aad
ds
imul
mov
xchg
ficomps
aad
pop
dec
mov
test
push
mov
dec
imul
fistl
push
dec
lock
pusha
into
mov
ljmp
lret
loop
pop
imul
pop
in
rcr
jae
push
pushw
mov
jmp
in
pop
mov
daa
call
mov
lret
fs
fwait
test
cli
push
dec
push
shlb
dec
cmp
in
sti
push
push
enter
cs
jnp
fcoml
data16
popa
loopne
test
or
fstps
xchg
les
inc
pop
fisttps
mov
lahf
pop
shr
gs
sti
inc
sbb
adc
cwtl
push
xchg
or
sub
jp
sbb
jmp
loope
fcomps
xlat
enter
inc
adc
push
inc
repnz
repnz
jp
mov
into
dec
mov
popa
roll
dec
fdiv
adc
mov
lds
shl
call
rorl
xlat
int3
mov
pop
iret
dec
pop
mov
mov
add
pop
lret
jge
fldl2t
iret
xchg
and
push
out
xlat
dec
pop
fdivrs
shll
dec
fimull
inc
dec
ret
sub
pop
push
rorl
fsubrp
pop
leave
pusha
addr16
loope
gs
lret
aad
aas
xchg
pop
pop
add
fcmove
pop
lods
pusha
xchg
jecxz
xchg
inc
jmp
dec
sbb
imul
rolb
sbb
dec
aam
mov
cmp
add
pop
mov
roll
dec
test
negb
mov
ret
imul
pusha
xchg
sub
pop
shlb
xchg
aas
or
dec
ljmp
pop
lds
and
mov
int3
popa
in
les
dec
mov
test
sarl
mov
dec
dec
mov
subl
loope
int3
fcmovne
jmp
int
call
lock
aad
sbb
dec
in
imul
leave
loopne
push
testl
imul
mov
fbld
mov
fld1
fisubrl
add
sarb
clc
and
mov
js
cli
ljmp
mov
lahf
mov
cmp
out
dec
push
xlat
ljmp
testb
jp
out
fsts
movsl
xchg
stos
iret
jp
sbb
pop
dec
jb
push
aad
aam
jmp
pop
popa
adc
mov
xchg
or
sub
imul
insb
popa
int3
fsts
xchg
stos
sbb
gs
repz
lods
sub
leave
dec
les
dec
push
mov
dec
fildl
add
adc
mov
rol
fcomps
dec
pusha
fstpl
popa
mov
inc
dec
int3
xchg
mov
jge
fdivrl
inc
clc
jge
dec
aas
in
lahf
fidivrl
insb
in
xor
int
push
pop
movsb
repnz
lret
stc
jle
in
and
adc
jle
dec
add
pop
pop
mov
fst
mov
dec
ds
jmp
int3
push
mov
xlat
fsubrl
or
adc
stos
cwtl
or
add
call
pop
mov
xlat
insb
cmp
cmp
loopne
dec
imul
icebp
or
lds
pop
fdivrs
xchg
fmulp
xor
iret
out
frstor
jl
filds
jp
mov
inc
into
add
mov
bnd
pop
movsb
xchg
push
xlat
lds
xchg
pusha
and
ficomps
fcmovnb
cmpsl
pop
push
call
leave
iret
pop
inc
subl
sbb
pusha
push
loopne
or
aam
popf
jae
popa
pop
pop
fisttpl
xchg
shll
in
mov
jp
aad
fstpl
or
fdivs
pop
popa
sub
out
pop
pop
mov
popf
fbld
dec
jnp
pop
or
push
test
dec
in
lea
mov
enter
push
in
pusha
dec
push
add
xchg
iret
push
into
movsl
jae
test
jg
fisubl
stc
aad
xchg
dec
mov
and
pusha
icebp
or
and
sbb
into
fld
inc
out
or
mov
dec
movsw
inc
mov
loopne
push
aas
cltd
fcompl
push
leave
lcall
push
out
insb
mov
lds
pop
sbb
adc
cs
enter
data16
fcoms
add
push
out
shlb
xor
push
ficoml
add
addr16
call
push
pop
dec
pop
lret
xlat
add
adc
cmpsb
popa
xor
mov
je
out
insb
inc
dec
dec
push
out
or
mov
cmp
jecxz
xlat
ds
dec
enter
out
imul
insb
push
push
lahf
fisubl
jmp
push
lret
fdivrs
push
vmaxss
ds
jns
dec
aad
call
das
sti
cmpsl
push
lret
rcrl
aad
clc
pop
xlat
jb
out
mov
push
mov
fisttps
les
jmp
sbb
insb
adc
push
mov
out
shlb
pusha
dec
fisubl
outsb
pop
mov
pusha
dec
jle
xlat
inc
lret
inc
test
rcrl
push
push
dec
push
dec
jle
iret
fimull
pop
mov
pop
jae
dec
in
js
iret
jg
out
cli
and
pop
push
aam
add
shrl
pop
rcr
nop
in
pop
imul
scas
dec
fucom
sub
insb
addr16
lods
rcr
lret
out
push
mov
adc
lods
and
fmul
push
addl
imul
into
es
xlat
call
enter
loop
pop
out
addr16
cmpsl
jb
push
mov
subb
cmp
fldl
clc
lret
cs
cmp
icebp
fistpl
movsl
sub
fmul
dec
ficoml
jle
sub
pop
lret
fsubrl
add
pop
insb
fiadds
ret
loopne
fiaddl
pop
push
int
inc
movsb
into
jmp
insb
nop
pop
mov
aad
xchg
movb
fstp
int3
push
jge
dec
loopne
aas
cs
repnz
fcomps
rcl
enter
jno
xchg
call
loop
xchg
fcmovnbe
mov
int3
pop
lret
enter
push
jecxz
inc
test
int3
dec
fsubrl
aas
mov
imul
fstpl
int3
aas
push
jp
dec
pop
cmc
xchg
fldt
push
xchg
fldl
lods
andl
aaa
dec
shl
sub
shll
fisttpl
dec
inc
lret
inc
mov
xchg
pop
inc
pop
in
aad
pop
out
in
jge
pop
ds
sub
xlat
stc
mov
insb
mov
iret
dec
dec
inc
or
nop
push
cltd
mov
imul
insl
jmp
jge
gs
dec
movsb
fcmovu
nop
fsubs
push
pop
data16
pop
int
out
add
popa
inc
insb
aam
jne
and
push
scas
lahf
insb
shrl
dec
push
les
or
cmpsb
xchg
add
jo
out
out
dec
out
xor
enter
int3
inc
scas
out
fucom
push
aad
jb
mov
out
dec
pop
mov
dec
mov
dec
iret
pop
popa
sarl
mov
pop
fistpl
clc
pop
insb
mov
aad
rcr
jmp
mov
adc
sub
mov
movsb
mov
pop
aam
inc
push
sbb
nop
push
pop
push
out
out
mov
pop
imul
fstl
push
add
jmp
fmul
into
adc
int
dec
pop
mov
cli
jmp
jl
out
xchg
insb
loopne
pusha
sbb
dec
leave
mov
fistl
ljmp
pop
push
data16
out
gs
lcall
inc
aad
fistpl
iret
mov
push
sub
mov
fsts
ror
dec
pusha
iret
rorb
push
test
dec
cltd
jbe
inc
sahf
lds
out
and
aam
push
inc
inc
or
fmul
loop
xor
push
fninit
mov
aaa
mov
pop
rorb
cmpsb
repz
mov
jae
rcll
fmul
imul
lahf
mov
int
pop
push
jno
pop
or
pop
mov
gs
clc
inc
pop
out
dec
mov
fdivl
xlat
jg
loopne
add
test
int
lods
ss
add
call
mov
mov
pop
push
cmp
int3
push
rcrl
fstps
jnp
dec
mov
iret
test
insb
dec
lcall
dec
and
jmp
lds
insl
ficoms
pop
popa
testb
dec
dec
clc
dec
dec
push
je
mov
ficomps
fistpll
call
inc
ficoml
arpl
fucomi
mov
nop
push
mov
clc
pop
pop
fdivr
xchg
aas
add
pop
pusha
popa
pop
pop
into
jae
loopne
mov
pop
fisttps
mov
xlat
mov
mov
loopne
aam
imul
call
rclb
popa
call
pop
in
xchg
dec
lret
adc
lock
movsl
lret
dec
aam
rcrb
mov
pop
inc
dec
fisubs
pop
fucom
loop
mov
lret
xor
inc
int
fildll
leave
test
aam
iret
sub
faddp
movsl
out
jge
pop
fcmovnbe
cli
and
add
dec
fcoml
aam
gs
sbb
movsl
pushf
jle
inc
dec
push
mov
dec
aad
jecxz
xor
sarl
in
sub
leave
mulps
jle
les
aad
dec
xchg
mov
js
dec
fdiv
fld
jge
push
imul
popa
shlb
dec
out
pop
ficompl
lods
test
fs
pop
frstor
loop
cltd
ss
cli
into
gs
adc
sti
out
fsubs
fldcw
pop
iret
dec
mov
xchg
sub
gs
andb
and
dec
lretw
pushf
push
jmp
jge
push
push
test
dec
dec
jg
pop
lahf
and
ljmp
push
push
out
in
dec
add
pop
inc
push
movl
sub
inc
les
mov
dec
inc
mov
shll
fs
pushf
cmc
pushf
xlat
xlat
movsl
push
dec
push
fdiv
inc
scas
cmp
dec
loope
dec
and
push
dec
fcomp
in
jecxz
xchg
cmp
pop
int3
sbb
dec
dec
into
inc
fadds
push
adc
pop
jmp
dec
icebp
jo
clc
iret
pop
push
inc
cmpsb
push
pop
pop
lret
lods
adc
enter
push
dec
addr16
andl
lds
pop
mov
fld
lcall
jl
int
fidivrl
jmp
outsl
jg
inc
aas
aam
rcr
cltd
xchg
sbbl
pop
jno
jno
icebp
xchg
push
addr16
gs
loopne
imul
pop
pop
cs
and
les
in
fisubl
jle
lret
stos
rcl
aam
in
jge
cmp
call
mov
int
mov
dec
or
mov
cmpsl
fsubs
loopne
imul
in
pop
mov
lods
or
mov
dec
xlat
repnz
in
mov
jl
dec
int3
push
cmp
inc
and
mov
rolb
lret
sbb
fnstsw
leave
sbb
xchg
cltd
fld1
fstp
lds
inc
dec
mov
sub
sar
add
rcr
push
push
jge
pop
lret
lds
scas
inc
cmp
push
ficomps
pop
pusha
jbe
popa
data16
jge
imul
or
pop
aad
push
push
jno
shll
fnstcw
shl
gs
fcompl
pop
ficoml
jmp
adc
stos
lret
add
out
inc
lahf
cltd
cli
cmp
mov
into
aam
stos
pop
lea
inc
dec
push
jp
push
rcrb
and
mov
shr
fidivrl
inc
inc
out
mov
push
movl
dec
and
iret
aam
out
add
inc
ds
inc
push
pop
lret
sbb
pop
dec
mov
clc
nop
jae
mov
stos
jns
pop
popa
shll
pushf
fistps
add
sbb
xchg
lods
imul
add
dec
loope
push
inc
ficompl
push
adc
dec
pop
in
pop
shrl
aam
lret
jb
xchg
fdivrs
sti
data16
jl
addr16
cmp
loope
les
push
lret
iret
jno
popa
sub
les
fiadds
jbe
push
mov
push
test
rol
mov
loopne
and
loopne
int3
lods
inc
jmp
inc
mov
mov
pushf
cltd
jp
mov
pusha
jp
nop
pop
jmp
out
dec
inc
mov
ss
adc
in
gs
pop
pop
push
aam
leave
pop
dec
aad
test
cmp
jg
enter
xchg
in
mov
jmp
dec
push
dec
mov
into
mov
jbe
ffree
js
cli
push
call
pop
in
addr16
push
xchg
clc
decl
push
sti
dec
enter
xor
in
or
aas
fsubr
rolb
mov
lods
mov
push
vmovaps
push
movsl
pop
test
push
jb
loope
fisttpl
insb
pop
out
xlat
lret
fldcw
dec
pop
sbb
out
pop
sbb
int
cli
cld
dec
push
icebp
cwtl
arpl
rol
ljmp
inc
call
out
leave
cltd
out
test
stos
subb
out
rclb
adc
fs
sbb
xchg
fmulp
fstp
lods
pop
fnsave
mov
orl
add
cli
mov
pop
push
xchg
adc
xor
cli
lds
popa
and
push
int
ret
movsl
sbb
dec
enter
fsubl
insb
adc
push
sub
jp
nop
inc
fsubrp
inc
pop
pop
lds
mov
pop
lret
lret
mov
mov
push
ffreep
push
mov
pop
push
fstps
mov
xchg
pop
mov
dec
test
arpl
fbld
out
call
test
add
cmp
jg
enter
aad
iret
inc
xor
and
pop
mov
xchg
pop
test
pop
sub
jg
lds
aam
movsl
lret
outsb
fisubl
sbb
testb
rol
aad
les
xor
les
mov
addr16
inc
and
sbb
mov
add
pop
cmp
insl
aad
dec
dec
jmp
clc
inc
clc
and
inc
icebp
pop
dec
fisttps
push
insb
mov
mov
aad
stc
jle
inc
pop
fsubr
jne
int
and
xchg
lock
aas
mov
ficompl
push
jmp
jmp
testb
and
pop
cli
pop
jmp
add
int3
pop
iret
push
lds
jmp
mov
loopne
dec
dec
aaa
add
adcb
inc
lret
push
dec
sbb
mov
pop
arpl
lods
out
ljmp
dec
xchg
test
cli
out
call
out
stos
pop
sub
or
jl
pop
dec
and
xlat
insb
jp
filds
mov
jb
push
int3
lds
data16
out
or
aad
mov
loope
ficoms
push
dec
in
popa
cwtl
jmp
int3
xor
xlat
dec
push
push
and
pushl
out
dec
push
fcoml
lods
popf
add
jmp
adc
or
enter
push
data16
sti
sti
out
jmp
fcoml
bound
int3
loopne
in
pop
push
aad
xor
int
inc
mov
iret
pop
in
fldl2e
push
out
pop
addl
or
mov
cmp
pusha
dec
lret
or
pop
fisttpll
movb
imull
jp
into
cmpsl
stos
pop
mov
nop
jg
test
andb
dec
iret
pop
and
fisubrl
jg
mov
cmp
push
popa
aad
pop
les
call
dec
pop
dec
inc
cmp
into
les
test
frstor
mov
adc
jp
fcom
mov
into
add
sub
xchg
int3
fisubrl
ret
in
add
imul
mov
test
push
inc
dec
iret
push
adc
out
orl
mov
not
xor
aad
mov
push
into
arpl
pop
enter
lret
inc
int
fsubrl
icebp
sub
les
pop
outsb
or
lods
test
out
dec
dec
mov
aad
sahf
fnstcw
sti
pop
pop
fadds
push
ficoml
leave
lret
xlat
lret
jp
loopne
push
and
jmp
aam
pop
dec
push
ds
fptan
xchg
and
iret
leave
faddl
sub
cmpb
dec
mov
jp
les
idivb
idivb
js
inc
int3
fcoms
sub
mov
xchg
lcall
movsl
jp
and
dec
in
call
leave
test
lret
push
imul
pop
lds
xchg
int
add
fmuls
push
inc
add
nop
iret
pop
fldenv
aam
pop
mov
add
call
dec
xchg
push
lds
rol
mov
mov
arpl
inc
lret
leave
fcom
push
in
add
or
shll
out
aas
adc
test
iret
loopne
shlb
mov
dec
rcr
xchg
into
jp
fcoml
cmp
movsl
imul
jmp
out
lds
mov
enter
jnp
aad
push
mov
cli
inc
add
les
lds
pop
push
dec
add
leave
inc
pop
fcmovnbe
shrl
jg
inc
cmp
lods
stc
xchg
sub
fnsave
ljmp
dec
add
xor
aaa
rorb
sarl
dec
lret
push
inc
push
dec
ret
inc
iret
leave
dec
add
fsubs
push
pop
loopne
pop
daa
call
fcmovnbe
mov
les
loope
pop
iret
dec
ljmp
mov
out
lret
loopne
fcmovu
mov
mov
or
lcall
int
adc
mov
out
dec
jbe,pn
repnz
out
sar
xlat
fcoms
push
movsl
aad
out
out
arpl
xorl
sbb
dec
inc
shll
jge
pusha
int3
popa
mov
mov
xor
adc
pop
mov
mov
pop
andl
pop
sbb
push
jecxz
pop
add
dec
in
imul
ret
mov
pop
fisubs
mov
pop
les
fcmovnu
addb
in
dec
neg
push
jg
aam
jle
imul
push
and
mov
cmp
dec
movsl
ss
loop
lds
cmp
dec
popa
inc
scas
pop
pop
push
imul
lds
push
mov
mov
outsl
push
gs
out
adc
pop
push
pop
mov
dec
insb
int3
jmp
pop
in
mov
leave
push
popa
jle
fucomip
sub
inc
inc
push
rcr
or
shrl
enterw
and
jp
mov
lods
jecxz
addr16
out
mov
mov
or
xor
jl
dec
xchg
mov
popa
lds
pop
pop
cmc
pop
xlat
stos
fistl
in
add
loopne
in
loope
gs
shl
pop
aam
jl
cmp
loopne
dec
jbe
insb
fidivrl
inc
dec
inc
iret
cmpsl
test
dec
pop
jmp
imul
leave
shll
faddp
add
aam
push
push
bound
mov
jl
pop
mov
fcomps
out
inc
push
repnz
out
mov
in
dec
xchg
sti
add
leave
faddp
push
dec
and
imul
jae
enter
cli
xor
arpl
out
mov
aam
enter
ror
arpl
dec
repnz
subl
aam
movsl
add
pop
ret
in
pop
popa
inc
mull
jmp
js
sar
push
outsb
dec
std
mov
sbb
aad
mov
insl
cmp
lea
je
enter
inc
int3
push
js
sbb
insb
aam
fst
pop
cmpl
int
dec
lret
shll
ret
pop
jb
enter
mov
fsubp
cli
push
push
in
fdivs
dec
testb
lret
std
stos
xchg
add
dec
stc
add
popa
push
and
shr
in
loopne
pop
into
in
push
xchg
test
dec
push
mov
adc
iret
loopne
push
add
fcomps
sarl
sub
fstps
dec
and
sarb
gs
lret
rorb
pusha
mov
inc
in
lds
inc
xchg
dec
jno
or
sbbb
dec
lret
iret
rcrl
sahf
pop
mov
out
leave
movsb
out
leave
inc
js
repz
pop
shll
push
call
and
ds
aaa
int3
mulb
pop
sbb
shrb
inc
cmp
push
popf
push
and
shl
out
data16
std
cmp
leave
push
mov
pop
inc
leave
fnstsw
movsl
cmp
sub
add
push
int
ficomps
fsubl
inc
insb
mov
into
test
daa
aas
xor
cli
aas
push
fsubrl
inc
jge
inc
mov
pop
push
mov
dec
push
in
mov
xlat
int
mov
inc
xlat
imul
mov
inc
fisttpll
adcb
imul
fst
jae
in
jne
aam
rcl
iret
test
mov
divb
pushl
lret
popa
imul
and
pop
adc
insb
pop
fidivrs
pop
push
ja
fst
fildll
dec
pop
in
gs
pop
jge
inc
repz
enter
sbb
lcall
add
push
pop
call
cmp
inc
jge
insb
jmp
jg
dec
add
into
enter
or
aam
push
mov
pop
dec
aad
fsubp
jg
call
stos
dec
inc
mov
gs
and
inc
dec
dec
mov
jmp
les
test
popa
dec
int3
mov
leave
xlat
xchg
xor
push
or
lds
test
add
jmp
mov
jl
inc
cmp
lods
repnz
into
push
es
nop
pop
aad
jmp
fdivrl
mov
fcmovne
adc
scas
pop
add
popa
inc
pop
loopne
aas
push
mov
gs
jl
xlat
and
leave
frstors
jl
dec
dec
pop
lret
push
stos
icebp
add
push
lret
fmuls
dec
pop
ljmp
inc
repnz
outsb
lret
push
xchg
sub
cmp
loopne
stc
jp
out
jp
push
dec
rclb
or
out
fstpt
popa
push
aad
fucomp
jl
pop
rolb
dec
insb
icebp
fsub
jmp
lret
lods
mov
insb
imul
clc
jle
iret
adc
addr16
out
jno
pop
pop
out
fistl
out
imul
fisubrs
dec
data16
aad
ljmp
pop
push
push
inc
mov
in
fadd
aam
dec
clc
dec
dec
rep
pop
push
push
mov
push
pop
jmp
incl
lds
insb
into
add
call
pop
jecxz
data16
push
fldl
cmc
push
lret
xor
jmp
aad
rcr
inc
js
pop
jl
out
outsb
dec
aam
std
pop
dec
fcmovbe
mov
gs
lret
out
inc
dec
inc
aaa
popa
or
push
xchg
clc
fildl
loope
lret
mov
cmp
sbb
and
leave
pusha
push
pop
xor
enter
ret
dec
loopne
inc
sub
push
aad
push
jge
out
loopne
incb
fstp
gs
repnz
ret
xor
or
mov
dec
fildl
std
and
jle
imul
fistpll
orb
testb
jmp
pusha
dec
not
fsubl
nop
aad
and
iret
es
or
mov
or
mov
inc
pop
push
dec
inc
test
inc
push
add
out
gs
and
leave
loopne
dec
push
scas
lret
repnz
mov
or
mov
xchg
mov
jne
mov
ret
enter
loopne
sar
out
out
lret
clc
neg
call
fiadds
pop
icebp
push
aad
fucom
add
pop
shl
addr16
dec
in
dec
popf
and
cli
neg
inc
sbb
pmulhw
popa
push
cld
jmp
test
imul
shrb
nop
fsts
mov
jmp
mov
clc
data16
mov
xlat
aam
aas
incb
mov
aad
repz
loopne
sbb
aad
mov
popa
dec
lds
out
mov
dec
xor
scas
mov
push
insb
clc
roll
or
push
dec
shlb
iret
xchg
out
pop
xchg
nop
ljmp
inc
dec
test
push
lock
pop
pop
xchg
fidivrs
jle
push
push
dec
test
add
jb
cli
lds
fdivrl
inc
pop
push
addr16
test
jmp
out
pop
jge
xlat
ret
int3
pop
lods
pop
mov
pop
mov
fcom
test
jb
xchg
out
push
and
imul
rclb
pop
fldenv
jae
lret
lret
hlt
imul
xor
jecxz
push
fcmovu
insl
add
pop
out
jmp
inc
xchg
cmp
mov
pusha
jno
fstpl
loopne
dec
cmp
push
mov
inc
jg
int
out
jp
imul
pop
pop
icebp
mov
cli
lret
push
lret
cmp
push
pop
inc
jnp
mov
int3
fistpl
in
int
jl
into
inc
mov
mov
fcmovnu
in
fimuls
push
call
push
clc
addr16
push
sti
or
fstps
and
push
lret
dec
aam
int
jecxz
mov
inc
test
pop
out
mov
inc
push
jno
jle
jns
imul
pop
sbb
iret
out
repnz
push
pop
dec
lret
lahf
negb
out
or
dec
gs
lret
pop
mov
adc
dec
popa
scas
xchg
push
push
xchg
ljmp
dec
push
cmp
bound
pop
xlat
xlat
dec
xchg
js
leave
clc
outsb
jae
gs
adc
pop
dec
lods
mov
filds
mov
addb
int
repnz
sub
mov
push
loop
mov
repnz
add
aam
add
rcll
push
rorb
les
aam
jmp
pop
push
aad
mov
xlat
pop
dec
jmp
ret
push
fcoml
js
jo
cmp
fstp
dec
sti
addr16
int
mov
push
lret
pop
jmp
dec
pop
in
xchg
mov
adc
mov
add
adc
pop
xchg
push
loop
les
jle
lret
dec
mov
pop
jmp
loopne
and
leave
or
pop
pop
and
lret
lret
mov
fisubl
mov
movsl
les
or
out
jl
lret
adc
push
call
jmp
dec
xchg
dec
insb
out
inc
inc
popl
push
incb
les
lret
pop
fucom
mov
cmp
int3
fisttpll
adc
into
ret
inc
pop
aad
fistps
inc
lds
fstpl
js
pop
clc
fidivrl
cli
push
in
jp
lds
int
mov
mov
pop
pop
mov
fwait
cli
push
mov
mov
imul
aam
popa
fcmovbe
jge
pop
cmp
pop
mov
ret
adc
cmpsl
shl
jae
ficomps
and
rcrl
popa
mov
lret
les
fcomp
cmp
enter
mov
inc
dec
aad
loopne
enter
orb
fsubr
mov
adc
mov
stos
add
imul
pop
shl
in
sbb
leave
iret
dec
push
mov
mov
into
test
add
lret
popa
aad
dec
insl
inc
mov
in
ret
into
mov
pop
jl
jns
mov
leave
shll
add
iret
inc
insb
pop
fldenv
sahf
lcall
pop
enter
dec
lds
fucom
fildll
sbb
fadd
jno
cmpb
pop
int
das
mov
push
out
mov
dec
adc
pop
cs
call
std
jge
pop
inc
mov
cmp
fmuls
adc
pop
pop
jmp
arpl
call
popa
fsubs
dec
shl
lret
xchg
push
push
cmc
jb
ljmp
xchg
mov
mov
insb
mov
push
lret
shlb
push
mov
push
jb
inc
inc
test
fcoml
fdivr
mov
fimull
iret
enter
loopne
cmpsb
sub
pop
jl
pop
dec
in
fildll
mov
loopne
ljmp
inc
push
push
addr16
aam
push
js
jge
push
cltd
out
jmp
xlat
fucomi
mov
pop
inc
aaa
mov
arpl
data16
xchg
dec
ljmp
dec
pusha
and
mov
lret
pop
test
and
stos
repnz
fisttps
push
aas
mov
lahf
test
jle
cltd
fadds
int
mov
jp
and
ficoml
jmp
lret
push
dec
sub
cltd
sbb
fistl
push
jp
dec
dec
enter
xchg
lret
pop
inc
frstor
push
mov
shrl
pop
fiadds
inc
push
pop
push
imul
mov
test
inc
push
fstl
dec
mov
and
push
fistpl
into
inc
mov
xchg
dec
pop
mov
lahf
pop
mov
and
in
vmaxsd
mov
ficoml
xrelease
outsb
imul
dec
iret
test
push
popa
push
cmc
aam
dec
xchg
push
dec
push
popl
int3
lahf
mov
jmp
dec
out
mov
sahf
hlt
dec
dec
pushf
mov
dec
pop
cwtl
pop
jp
int
mov
push
jp
insb
adc
lret
in
fldl
jne
jmp
popf
pop
outsb
mov
into
shlb
mov
pop
xor
push
add
pop
lret
dec
xchg
cld
fimuls
shlb
sub
dec
into
ficoml
push
pop
mov
aam
and
movl
movsl
jg
add
leave
jne
shr
addr16
or
iret
mov
fistpl
dec
jmp
mov
xlat
push
pop
leave
jge
inc
pushf
enter
push
rcr
pop
and
aam
xor
sahf
mov
rorb
jl
xlat
call
xchg
pop
iret
pusha
jg
mov
push
aam
dec
push
jae
cli
addr16
lods
dec
ror
add
lret
loopne
lret
push
stos
in
or
std
push
dec
imul
push
add
js
jb
xor
leave
mov
iret
dec
cwtl
rcll
mov
fs
fsubl
fdivs
inc
mov
or
and
xchg
sbb
and
pusha
sbb
push
pop
fisttpll
add
call
testb
xor
fldenv
rcll
xlat
or
mov
inc
shrb
dec
rcr
pop
jmp
int
leave
xchg
popa
fistps
mov
mov
inc
cli
inc
pop
lret
imul
sti
lahf
dec
dec
int3
stos
push
test
mov
fxch
movsl
jno
pop
pop
fildl
cli
dec
pusha
faddp
and
xchg
push
inc
into
lds
fldl
add
gs
dec
int
hlt
lcall
mov
int3
push
lea
jl
fdivr
cs
out
jno
cmp
pop
dec
jmp
out
add
aaa
mov
scas
pop
test
int3
fsts
mov
push
clc
in
push
xor
insb
sub
dec
pop
add
loopne
out
popa
lret
dec
insb
leave
xchg
pop
inc
out
popa
mov
shll
iret
pusha
pop
mov
out
push
xchg
push
jmp
xlat
test
xchg
pop
and
xchg
inc
js
mov
loope
dec
fimuls
push
mov
enter
pop
push
xchg
and
pop
xchg
push
pop
mov
test
add
inc
out
push
inc
arpl
xchg
cld
ffree
jle
data16
in
jge
into
shrl
pop
push
scas
jg
jmp
gs
test
dec
push
pop
inc
ds
pushf
aaa
call
into
mov
xor
aad
mov
test
dec
jge
int
pushl
pop
cli
test
leave
add
shrb
insb
dec
loope
gs
push
fst
sbb
fst
sub
leave
inc
out
cwtl
imul
pop
in
les
inc
xor
lds
pusha
popa
icebp
fsubl
fwait
rclb
outsb
frstor
lcall
sahf
push
shll
mov
fcompl
fistpll
out
out
gs
fs
fisubl
lcall
stos
pop
jp
mov
fiaddl
jle
fiadds
cwtl
aam
out
rcrb
jbe
jge
dec
cld
mov
jge
fistpll
out
into
stos
decl
rcrl
gs
lret
mov
repnz
push
fxch
xlat
jno
cs
loope
loopne
fdivl
pusha
mov
jae
out
add
adc
stos
fsubrl
cmpsl
ficomps
xor
pop
add
pusha
sbb
roll
lret
dec
popa
int
testb
rcrb
lds
jge
aas
pop
imul
lods
add
popa
push
jmp
push
inc
inc
fldl
pop
fadds
pop
fld
pop
jle
fistl
dec
pop
test
ja
pop
jbe,pt
dec
pop
mov
push
fbld
addr16
mov
and
lds
shrb
mov
mov
mov
jno
rcrl
lahf
pop
dec
jbe
pusha
fnstcw
lret
cli
mov
cwtl
jnp
pop
popf
fmulp
pop
push
jle
dec
xlat
outsl
pop
pop
mov
jge
cmp
popa
fsubrs
sub
enter
cmp
inc
and
pop
imul
push
inc
dec
shrl
jge
enter
leave
fsts
mov
mov
mov
clc
sub
nop
xchg
inc
into
in
pop
pop
dec
fcomp
and
addr16
xchg
mov
add
fisttpll
push
shll
sbb
push
nop
iret
xlat
or
jno
pop
sub
dec
sbb
rorb
gs
sahf
je
test
dec
leave
notb
dec
popa
enter
insb
popf
aad
inc
mov
clc
leave
dec
dec
adcb
pop
iret
cmp
imul
cltd
push
mov
fisttpll
out
fstpt
jb
pop
pop
mov
fcmovu
pextrw
cwtl
push
aaa
dec
sub
js
rep
push
mov
fcomps
xchg
ficoms
xchg
jmp
and
call
add
dec
push
dec
dec
pop
int3
add
fmuls
les
sub
xchg
xor
adc
jnp
push
add
adc
jp
int
rcll
jo
movl
movsl
movsb
mov
lret
sbb
inc
inc
lcall
push
jle
lret
popa
aaa
repnz
push
fdivrp
les
inc
pop
inc
out
push
mov
lds
fildl
mov
fst
test
cmpl
int
mov
dec
outsb
lret
leave
sbb
mov
test
pop
fstps
fs
les
sbb
push
pop
mov
int3
inc
gs
rol
dec
xlat
mov
fsub
xchg
test
jle
mov
pop
pop
addr16
sub
ds
js
dec
jge
push
int
add
pop
ret
sbb
mov
jge
int
jle
aam
mov
dec
lds
bound
pop
aas
dec
dec
pop
push
ss
push
cltd
inc
addl
pop
stos
iret
dec
aam
scas
xlat
pop
push
lds
clc
mov
dec
push
movl
lahf
lret
mov
mov
les
add
iret
dec
sub
mov
xchg
sbb
clc
mov
pop
lret
loop
cmp
push
addr16
loopne
dec
fcmovnu
push
push
mov
mov
cli
rcl
push
int3
rorb
adc
dec
mov
inc
out
pop
ficompl
fstps
inc
jge
dec
jmp
imul
out
call
xchg
ljmp
fdivp
xor
fnstsw
dec
out
sbb
scas
add
pop
push
shl
popa
mov
ja
jmp
mov
lret
leave
mov
in
lds
mov
decl
fldenv
aas
push
aas
ja
test
mov
call
pop
xor
clc
push
push
les
dec
jno
jno
jmp
lds
fistps
push
adc
jecxz
inc
test
clc
imul
arpl
mov
jmp
pop
ja
pop
out
icebp
jo
mov
jl
pop
addl
mov
clc
fcmovnu
xrelease
pop
dec
es
cmp
in
mov
addr16
lcall
adc
int
fldcw
loopne
push
das
fsubrs
push
in
pusha
pop
xchg
clc
loop
adc
mov
dec
icebp
fldenv
lds
fxch
mov
rol
std
xlat
pop
call
out
ss
int3
mov
aam
insb
dec
mov
jno
imul
dec
jmp
lret
jecxz
xlat
in
xchg
icebp
mov
in
jmp
shlb
pop
jne
push
aam
notb
out
push
addr16
flds
popa
add
push
jae
add
jge,pt
pop
in
or
test
jno
push
sbb
pop
pop
ffree
notl
outsb
jge
dec
add
push
leave
aam
fiadds
repz
inc
push
dec
fsubrl
inc
loopne
movsl
fbld
xor
lds
aas
std
shr
pop
push
dec
mov
aas
xchg
test
leave
rcrb
dec
int3
mov
fnstenv
in
lret
inc
aaa
jle
insb
gs
add
popf
xor
in
jg
enter
ss
jle
int3
leave
adcb
fldl
sub
pop
dec
dec
lret
add
push
jb
cwtl
hlt
test
push
jge
cli
fisubl
leave
jl
fdivrl
aaa
fs
in
loope
pop
dec
dec
cmpsl
cli
aad
sbb
push
cld
push
int3
xor
mov
cmc
jmp
aad
cli
aad
inc
fcmovne
cli
outsb
lret
mov
fildl
rcll
add
out
dec
pusha
dec
inc
movsb
imul
fsts
into
daa
fiaddl
mov
leave
dec
clc
push
test
insb
pop
ds
pop
adcb
inc
int3
jp
into
popa
mov
and
lods
pop
mov
loopne
cmp
les
add
sbb
adc
jg
push
pop
sahf
popa
xchg
js
push
pop
jae
add
push
push
imul
dec
mov
pop
js
pop
push
andl
xlat
fcmovu
out
fwait
ret
fcmovne
enter
push
out
fcmovnu
adc
add
lds
fisubs
ficompl
add
xlat
jmp
es
jle
push
out
lds
fcmovnu
add
ror
jge
fstps
addr16
or
dec
js
cli
inc
out
mov
jmp
pop
pusha
cmp
xchg
imulb
jmp
dec
pop
jle
popa
xchg
int
pop
dec
ret
push
imul
add
push
mov
ror
fldl
popa
fcmovne
pop
out
inc
rcr
pop
dec
dec
call
dec
test
aam
push
jb
imul
xchg
in
fs
push
ds
out
call
rcl
pop
lret
inc
pop
mov
push
push
dec
jmp
add
test
dec
fadds
xchg
and
loopne
xorl
jecxz
stos
flds
fisubl
shr
push
mov
jecxz
inc
outsb
kmovb
lcall
pusha
insb
inc
ds
xor
iret
out
fsubs
int
pop
push
fsubrp
pop
push
adc
dec
pop
out
loopne
inc
rorb
in
inc
mov
neg
shrl
push
xor
xlat
or
inc
sahf
inc
lcall
int3
pop
pop
or
jno
jmp
test
ror
pop
popa
mov
out
pusha
xlat
or
aam
rol
test
push
js
js
cld
movsb
push
mov
sub
add
mov
push
flds
fcmovb
scas
xor
in
lds
movsl
shrl
xor
jae
gs
fs
fcomi
out
mov
gs
jno
mov
dec
xlat
jl
pop
lods
lods
aas
jl
into
push
pop
movsl
addr16
in
sub
iret
aas
call
pop
movl
fxam
inc
iret
sub
mov
insl
push
sbb
fildl
sub
mov
pop
ljmp
pop
pop
jmp
mov
mov
push
out
leave
jns
pusha
std
andb
outsb
jp
push
push
fcmovnb
dec
call
lret
data16
repnz
push
pop
aad
enter
sbb
leave
dec
pop
fcmovnu
xor
addr16
push
add
pop
push
mov
gs
and
iret
push
jle
push
and
fstl
push
mov
fisttpll
mov
mov
adc
push
jmp
rolb
jb
out
in
into
ds
fcmovbe
insl
jge
sub
aas
lret
dec
inc
pop
insb
xchg
pop
dec
pop
fiaddl
iret
pusha
movl
enter
pop
ljmp
hlt
dec
ret
pop
nop
out
add
arpl
sbb
pop
inc
lret
add
mov
push
into
int3
cltd
push
jg
int3
jnp
lds
daa
pusha
xor
fldenv
push
mov
pop
icebp
out
jmp
pop
cmp
xlat
push
divl
jne
jl
cld
test
pop
push
shr
or
inc
into
outsb
dec
aam
insb
popa
fcomp
add
inc
pop
push
dec
fldl2e
and
push
negl
xor
mov
dec
xlat
cltd
mov
sbbl
or
mov
mov
xor
aad
fstpl
pop
fsubl
xlat
mov
or
push
dec
dec
inc
test
inc
fnstenv
cmpsb
out
mov
aaa
in
outsb
dec
dec
lds
jb
fimuls
aad
and
call
jnp
dec
xor
inc
leave
fldenv
pushl
enter
outsl
dec
dec
inc
cmpsl
jmp
adc
fs
mov
call
aad
sbb
pop
inc
js
decb
inc
cmpsb
dec
push
adc
fcmovnu
jb
addr16
les
pop
shlb
fwait
dec
push
inc
pusha
mov
insb
push
pop
add
push
pop
shlb
and
mov
mov
dec
push
data16
fxch
sbb
shll
fcoms
int3
loop
fidivs
xchg
jae
add
aad
pop
pop
test
inc
and
rcll
jge
push
push
imul
xchg
inc
lret
mov
jmp
imul
rorl
dec
fcomps
leave
inc
push
aas
aad
or
lret
inc
mov
shlb
pop
jmp
mov
aam
in
push
popf
andb
pop
in
dec
out
inc
call
fdivl
leave
lret
push
js
inc
or
push
push
jge
dec
mov
inc
dec
jmp
pop
jmp
push
fdivrp
pop
sub
jb
pop
dec
inc
dec
popa
pop
dec
push
push
inc
mov
rolb
fldl
int3
dec
push
addr16
mov
jge
out
stos
mov
sub
mov
add
dec
push
insb
aaa
mov
lea
iret
int
imul
loop
dec
repz
les
jp
push
mul
xchg
cmpsl
movl
ds
cltd
aam
jae
js
incb
fstpl
shlb
dec
dec
inc
mov
or
cli
aad
inc
and
fisubrl
fstp
out
mov
pop
imul
xchg
imul
jecxz
inc
fcmovbe
and
mov
jp
mov
out
inc
add
iret
loopne
aam
fucomip
out
xchg
flds
fisttpl
je
aas
loope
imul
cmp
xor
inc
popl
jbe
imul
aam
jl
cld
adc
in
push
fnsave
imul
push
pop
xor
jmp
dec
aad
adc
cmpsb
fmul
shll
pop
imul
or
inc
out
dec
or
int3
xchg
in
notb
gs
fsubs
pop
xor
dec
imulb
push
fimuls
push
mov
jb
pop
inc
inc
adc
int
xchg
test
lds
xorl
icebp
mov
mov
xor
lret
das
lahf
movsl
repnz
and
inc
inc
dec
pop
aaa
fists
xor
push
fiadds
pop
dec
push
stos
lds
out
filds
mov
pusha
int
adc
adcl
add
pusha
imul
in
data16
out
inc
fistps
sub
insb
aam
neg
pop
mov
fldcw
es
and
inc
popa
loope
fists
add
popa
rclb
movsb
add
movsl
lock
ret
rcr
jg
mov
popf
fcmovne
push
data16
lret
pop
aam
mov
shlb
jmp
dec
jle
loop
in
push
mov
decl
dec
faddp
mov
gs
leave
adc
xchg
test
aas
frstors
lods
pop
pusha
cmp
lret
decb
lret
nop
push
rorb
jg
dec
and
iret
pushf
jmp
rcr
arpl
xlat
jp
in
xchg
add
inc
dec
push
mov
mov
in
lcall
aam
pusha
hlt
or
int
pushf
dec
mov
ljmp
xlat
fstpl
in
arpl
sub
lds
xchg
popa
push
iret
ljmp
imul
mov
inc
dec
insl
cld
shlb
or
out
jb
insb
lret
jge
fsubrp
xchg
arpl
or
dec
jb
shl
mov
into
lahf
cmp
mov
int
and
dec
inc
dec
fstps
gs
leave
pop
aad
cmpsl
enter
jno
xchg
addr16
mov
push
dec
jmp
lds
mov
fcmovne
pop
inc
fcompl
shll
insb
mov
inc
pop
xor
lret
aad
add
pop
pop
push
into
dec
dec
inc
fdivs
stos
addr16
cld
leave
rorl
pop
jp
xlat
xchg
fisubrl
in
dec
out
push
fcoml
dec
mov
adc
ficomps
and
int
push
push
dec
test
push
jb
pop
pusha
shlb
lret
insl
push
mov
jle
inc
addr16
lds
xchg
call
push
fistpl
jl
dec
les
pop
pop
jno
or
mov
inc
or
mov
js
pop
jae
jbe
testb
adc
hlt
dec
rcrl
and
int3
rcrl
push
fmul
dec
adc
cmpsb
movsl
shll
in
inc
cmp
sub
push
out
mov
pop
call
xchg
cmpsb
pop
fucom
inc
fildll
inc
aam
inc
pop
inc
dec
loopne
sbb
outsb
in
ljmp
int3
fsubl
mov
dec
pop
mov
leave
in
dec
int3
pop
mov
inc
insb
dec
inc
decb
pop
push
xlat
out
lret
jmp
pusha
or
ficompl
leave
out
in
int
imul
dec
inc
mov
loopne
lret
aas
mov
call
dec
aad
inc
inc
and
mov
fld
icebp
inc
pop
mov
test
mov
jle
pop
int3
insb
gs
popa
rolb
loop
out
movsl
repz
les
dec
fsub
pop
aad
mov
imul
fmulp
or
dec
dec
lret
aam
out
popa
test
fs
call
xor
dec
pop
pusha
cs
cwtl
inc
xchg
int3
pop
push
addl
jmp
cmpsl
imul
push
ret
xlat
pop
imul
movl
add
pop
into
dec
xchg
mov
pop
pop
lret
ficoms
call
popa
call
addr16
repz
fsubrl
rolb
movsl
imul
jle
fcoms
aad
dec
fst
xor
lds
insl
jle
fxch
push
jg
dec
and
jne
imul
enter
xchg
xchg
cli
fisubl
sub
inc
shrl
dec
outsl
out
loope
push
mov
addr16
imul
loope
cmpsl
lds
into
shlb
mov
pop
test
fmulp
jb
cmpsb
test
mov
and
ret
push
ss
inc
jmp
ret
aam
aad
adc
je
out
ficompl
orl
rcrb
mov
insb
ffree
insl
jge
pop
data16
sbb
iret
xlat
out
add
xchg
loopne
and
rcr
ds
pop
inc
call
mov
pushw
and
and
flds
pop
jge
push
int3
push
mov
mov
sar
loopne
adcb
gs
ficoms
adc
inc
push
ljmp
notl
out
shr
testb
ret
dec
jecxz
lret
push
into
fstl
mov
pop
dec
dec
mov
add
in
int3
and
push
pop
sar
push
mov
fdivrs
xchg
out
bound
push
pop
jmp
pushf
sti
jg
int3
and
jmp
lret
lds
mov
lret
fcmovnbe
sub
movb
push
mov
addr16
and
imul
push
xor
xor
cli
pop
mov
gs
xchg
neg
push
cli
gs
jl
call
adc
imul
nop
inc
inc
mov
fstpl
out
gs
pop
les
pop
test
jp
inc
data16
lea
jl
iret
aad
mov
lret
dec
jp
pop
dec
iret
int3
frstor
lret
push
xchg
jg
pop
jle
test
dec
dec
ljmp
popa
dec
dec
imul
inc
xor
cli
out
pop
mov
pop
push
ficoms
dec
sbb
xor
pusha
push
sub
mov
popa
addps
xchg
add
leave
data16
out
mulb
lods
int3
loop
imul
jae
push
jne
pusha
inc
dec
lds
dec
sub
fdivp
ds
adc
pushl
pop
and
mov
fldl2e
mov
inc
shlb
fisttpl
jecxz
mov
sbb
leave
dec
dec
loopne
adc
push
fucomip
pop
fisttpl
call
mov
mov
inc
rorl
in
imul
popa
fsubl
shr
std
cmc
fldln2
int
mov
loopne
ds
pusha
je
pop
dec
addr16
shr
rcr
aam
mov
pop
out
lret
into
xchg
cmp
jae
adcl
fcmovnbe
fisttpll
les
aam
add
push
sbb
and
out
aad
into
loope
int
lret
adc
loope
out
leave
aad
sub
mov
aad
scas
icebp
mov
push
push
mov
xchg
xlat
xchg
mov
adc
lds
cmpsb
aad
pop
xlat
loopne
and
flds
pop
mov
or
testb
lret
push
test
jle
adc
jp
jmp
push
aas
enter
jl
fcoms
fisttps
push
leave
dec
inc
insb
test
repz
dec
push
dec
push
in
xor
dec
clc
jb,pn
xchg
loopne
push
ficoml
loope
lret
filds
int
outsl
aam
flds
jge
fstps
add
pop
popf
lock
mov
iret
insb
jmp
into
int3
sub
aas
repnz
pop
cmp
iret
fisubrl
mov
dec
dec
scas
lods
inc
bound
add
mov
inc
pusha
cwtl
lock
pop
xchg
cmpsb
clc
idivl
add
inc
aam
mov
fwait
push
iret
stos
xor
cmovbe
xchg
dec
pop
clc
push
clc
pop
movsb
add
lds
adc
fstl
or
push
mov
rorl
enter
call
daa
jg
push
mov
popa
fldl
dec
mov
in
movsl
jmp
orl
lret
cwtl
call
out
jb
pop
push
push
pop
js
les
jge
clc
sbbl
ficoms
stos
fs
mov
lret
flds
pop
nop
fdivs
cltd
mov
push
aam
jl
iret
std
sbb
pop
push
jae
inc
xchg
cmpsl
fstp
dec
fstps
data16
neg
dec
cmpsb
ret
jo
add
int
mov
jae
push
pop
js
adc
jno
jmp
inc
jle
inc
pop
enter
mov
repz
inc
pop
jae
dec
cs
push
xchg
shl
dec
fmulp
xchg
jecxz
dec
mov
pop
add
sarb
push
in
dec
fmul
push
ds
pop
mov
cmc
fimull
or
adc
int3
test
loopne
cld
xlat
test
pop
jae
and
pop
in
push
les
fistl
push
pop
popf
add
test
xlat
fcomp
jb,pn
shrb
bswap
dec
lahf
icebp
mov
fst
js
jnp
out
push
ret
add
dec
add
inc
pop
fsubrl
out
pop
pop
mov
xor
xchg
push
pop
fcmovnbe
mov
pop
adcl
xor
adc
fucomip
pop
dec
loopne
mov
sbb
jb
pop
dec
add
jns
enter
int3
in
or
shlb
push
call
imul
pop
jecxz
push
jl
pusha
jl
sbbl
ret
fcmovu
jg
pop
addr16
loopne
jle
aad
push
inc
and
pop
push
dec
xor
push
pop
aad
jmp
sarb
in
push
loopne
sub
sub
dec
test
inc
push
push
call
inc
int3
jmp
pop
scas
jp
inc
scas
aad
mov
fstpl
loopne
dec
pusha
popa
mov
out
add
push
loopne
call
add
inc
idiv
cli
loope
popa
fstps
out
xchg
pop
dec
lahf
jl
lds
mov
inc
sbb
lret
inc
lahf
gs
data16
les
fldenv
daa
int
xlat
pop
inc
loope
push
fistpll
insb
lret
jp
mov
pop
fxch
pop
ret
dec
repnz
int
dec
shlb
mov
pop
cli
dec
push
in
rclb
mov
dec
les
xchg
pop
push
mov
scas
inc
add
addr16
insl
fisttps
dec
push
jmp
in
inc
dec
mov
mov
jl
int
insl
xchg
add
fisttpl
jle
loopne
pop
jb
push
pop
dec
pop
push
cmp
into
popa
fs
adc
pop
out
inc
loopne
sarb
cmp
and
pop
dec
push
xchg
dec
dec
pop
gs
fcomps
pop
mov
pop
lahf
lods
jge
aad
push
inc
outsl
pop
aas
outsb
test
rorb
pusha
out
cmp
sub
pop
mov
push
je
cld
jecxz
pusha
xchg
dec
fldl
pop
int3
dec
push
cmpb
fists
jb
dec
adc
sub
pop
fisubs
scas
in
inc
sbb
add
out
es
ds
fbld
lret
cmp
xlat
dec
pop
shll
inc
fnstenv
fidivrl
jl
fdivrs
lds
inc
add
xchg
lret
fstps
lahf
repz
popa
mov
and
and
dec
aad
jmp
gs
dec
lcall
inc
jmp
fcomp
dec
imul
pop
insb
xor
sub
dec
push
lret
js
sbb
dec
out
aad
les
pop
pop
lds
leave
xchg
les
dec
jb
dec
pusha
rorb
lret
push
popa
bound
lds
pop
push
loopne
les
dec
loopew
xlat
mov
jecxz
jbe
insb
cli
das
imul
add
mov
faddl
addr16
in
dec
pop
pusha
aas
jp
call
aam
fmul
aad
inc
jbe
push
push
cmpsl
mov
out
pop
fldt
out
aad
add
jae
scas
sub
in
push
ds
pop
mov
addr16
add
aad
hlt
fstpl
add
push
lahf
nop
mov
mov
imul
mov
cld
jmp
stos
lds
dec
stc
in
repnz
dec
gs
int3
mov
sar
mov
add
enter
push
in
adc
jmp
fcmovbe
aas
ds
loopne
pop
mov
sahf
push
decb
ds
push
fisttps
rcr
xlat
fcoms
pop
pop
or
jmp
push
add
data16
imul
xchg
or
pop
xlat
fisubs
jnp
pop
dec
fsubl
push
jge
lds
sub
rolb
addr16
and
xchg
int3
xor
daa
shrb
xchg
jg
jmp
pop
call
cs
inc
lahf
lods
jp
push
mov
dec
gs
jbe
fadds
sub
push
sarb
mov
dec
push
push
add
inc
pop
lds
divl
jg
clc
jns
inc
add
cmp
pop
sub
xlat
ret
fwait
jmp
add
jecxz
dec
test
jp
dec
pop
pop
mov
fsubrs
cmp
out
scas
add
out
lret
xor
cs
popa
gs
testb
add
xor
push
loope
push
or
sahf
cmp
call
inc
adc
jg
aad
loopnew
incl
gs
int3
clc
push
push
idivb
jb
int
mov
or
clc
sar
jmp
fbstp
dec
dec
jb
popa
iret
lret
pop
dec
pop
fistps
jae
mov
js
test
lock
ffree
movsl
out
icebp
out
sub
int
rolb
nop
call
mov
shrb
dec
add
push
cli
inc
inc
pop
das
inc
push
or
cwtl
push
pop
mov
adc
pop
dec
dec
js
jae
mov
orb
test
ja
push
lds
fbld
clc
add
fcmovne
faddp
mov
dec
and
into
jno
lahf
lret
leave
fistl
adc
push
out
in
into
push
testl
or
cld
iret
imulb
xlat
stos
cmp
lret
dec
dec
mov
out
sbbb
pop
mov
aaa
shr
gs
xor
test
test
push
push
cmpsl
jno
roll
pop
into
mov
adc
push
popa
loopne
pop
pop
imul
adc
mov
jle
push
inc
les
mull
inc
test
aad
gs
mov
mov
aam
inc
lea
test
inc
gs
jg
fcmove
inc
jns
inc
icebp
adc
jbe
dec
push
repnz
pop
push
fsubl
inc
pop
inc
push
frstor
daa
ds
dec
mov
add
jmp
rolb
cmp
ficoml
aad
aad
add
jb
scas
hlt
test
int
push
notl
and
scas
in
ljmp
dec
vaddpd
jb
into
jecxz
inc
aad
or
aaa
in
test
push
test
push
pusha
jl
dec
jp
jg
push
xor
xchg
lcall
aam
inc
jp
fldt
es
push
push
pop
pop
shl
rcrb
cmpsb
cltd
out
cmp
imul
mov
dec
aad
rolb
outsb
pop
cld
mov
in
lds
popa
fidivrl
test
shlb
inc
test
arpl
out
fistps
loopne
aad
iret
out
ss
pop
dec
and
adc
mov
push
scas
lret
dec
pop
jmp
pop
loopne
int
dec
notb
mov
aas
out
jb
xchg
iret
clc
xchg
jae
fisubl
mov
rcl
rcl
aam
fisubl
addl
or
jno
scas
xlat
pop
outsl
and
sahf
adc
adc
or
daa
jp
push
test
push
inc
outsl
out
ret
gs
iret
inc
ret
adc
icebp
or
dec
movsb
inc
push
addr16
imul
dec
pop
dec
push
push
and
fisttps
in
enter
gs
xor
push
push
sbb
in
push
mov
inc
dec
fildl
mov
mov
push
loopne
inc
rol
pop
dec
ficompl
cmp
enter
jge
in
jg
jmp
dec
ds
out
addr16
xchg
ds
daa
dec
lahf
popl
fstl
pusha
stos
jmp
xchg
mov
push
mov
mov
loopne
test
hlt
aad
add
fcmovne
loopne
fstp
pop
fcompl
dec
xor
lret
inc
pop
push
jns
inc
mov
inc
mov
dec
in
dec
push
enter
iret
push
inc
addr16
aad
fcmovbe
fucom
dec
jbe
pusha
mulb
lods
fdivrl
mov
scas
inc
imul
testl
aaa
lods
dec
les
dec
popa
adc
mov
fidivrs
pop
out
subl
lret
push
mov
fldenv
aad
cmp
stos
jp
into
insb
push
cwtl
clc
push
pop
leave
out
cmpsb
iret
aad
shl
push
sbb
push
jns
push
pusha
outsl
push
ret
mov
jmp
enter
ror
js
jge
in
das
push
data16
test
lret
pop
rol
cli
out
int
push
add
dec
iret
fisttpl
aad
mov
loopne
loope
dec
xchg
aam
fs
pop
mov
frstor
lahf
faddp
pop
ficoms
mov
mov
pop
lret
dec
add
push
fisttpll
fisubl
cmp
push
shll
mov
enter
pop
test
xor
fadd
jmp
insb
popa
sub
insb
add
push
dec
or
lcall
dec
add
push
and
mov
adc
imul
push
pop
rorl
jmp
pop
push
add
leave
loopne
adc
in
pop
push
adcl
push
into
mov
push
lret
mov
push
cmp
icebp
fildl
popf
filds
popa
xor
repz
pop
aam
pusha
mov
pop
mov
push
leave
cmpsw
mov
call
dec
loopne
fdiv
jge
std
addr16
lds
mov
cs
dec
push
lret
pop
xchg
imul
aad
fucomip
cli
dec
aad
nop
cli
in
push
data16
jp
pop
shl
imul
mov
lret
movb
loopne
mov
ja
pop
mov
mov
push
fistps
test
mov
into
aas
dec
popa
and
inc
push
lret
iret
fwait
sbb
pop
out
int
push
in
js
leave
negb
dec
cmp
mov
cld
xchg
pop
mov
dec
aam
pop
insb
roll
pusha
int3
push
mov
loopne
ds
jmp
and
push
add
jp
loopne
mov
ljmp
int3
push
mov
div
mov
dec
pop
popa
loop
inc
jae
xchg
dec
iret
sub
in
in
cmp
fsubl
pop
dec
lret
movsl
dec
dec
inc
repnz
mov
pop
push
push
ret
push
fcom
jmp
pop
pop
mov
push
jl
addr16
cmp
dec
aad
fldcw
mov
xlat
sub
xchg
aad
push
call
aam
jmp
inc
mov
int
lock
in
pop
lret
int3
fneni(8087
mov
fwait
loope
xor
fisttpll
lret
out
out
or
sbb
jp
les
xlat
int3
mov
in
rorb
filds
sarl
fisubrl
bound
jae
leave
repnz
fisubrl
loop
into
enter
test
mov
shr
rolb
dec
pop
iret
icebp
xor
es
sub
xchg
cmp
hlt
push
mov
add
pop
hlt
jl
fmul
mov
sbb
test
inc
mov
mov
dec
push
adc
pop
jle
add
jg
push
stos
lock
push
push
inc
popa
out
rcl
inc
push
adc
ljmp
loopne
cli
push
out
pop
pop
jmp
add
dec
inc
out
lcall
pusha
gs
inc
xchg
xor
aad
or
mov
push
call
xchg
into
stc
popa
fcmovnb
aam
dec
xor
mov
push
pop
imul
and
jecxz
push
inc
jb
dec
fstpl
insb
add
enter
aas
enter
mov
mov
lds
push
ret
xchg
mov
inc
cli
shlb
pop
cmp
push
fsubs
dec
dec
call
pop
in
mov
fdivr
shl
pop
dec
pop
pop
push
clc
jb
and
push
jle
xlat
mov
xor
push
cmp
nop
mov
inc
adc
dec
jecxz
adc
punpckhwd
filds
imul
out
jecxz
pushaw
xor
gs
dec
out
rcl
dec
fmuls
mov
test
push
fisttpl
aam
cs
sub
out
out
inc
imul
into
test
pusha
cmpsb
test
sbb
ds
mov
dec
testw
aad
fwait
mov
ret
jb
pop
fsubrs
testl
out
pop
fstps
or
push
testb
inc
les
ds
inc
addr16
dec
loopne
popa
push
nop
dec
jge
stos
aam
dec
ret
mov
leave
and
movb
cmpsb
imulb
mov
lret
dec
aad
sarl
push
fnstcw
pop
mov
daa
jge
ds
int
fdivrs
adc
dec
mov
in
push
mov
stos
movsb
neg
mov
test
iret
flds
push
pop
rcl
enter
add
mov
js
aam
jbe
lret
addr16
dec
fsub
xchg
rorb
pop
leave
int
jp
iret
dec
ret
imul
int
jbe
jmp
mov
sub
popa
mov
cmp
movb
push
xlat
imul
out
push
cmp
pop
lret
xlat
dec
xchg
push
aas
mov
andl
gs
aam
insb
xlat
xchg
jno
in
add
aas
dec
stc
pop
cmp
pop
lock
mov
aam
inc
mov
into
cmp
gs
int
dec
jg
repnz
stos
bound
aad
push
nop
icebp
mov
dec
fisttpll
aas
dec
idiv
lea
sbb
sarb
dec
add
fbld
and
pusha
jns
inc
iret
ficompl
je
loop
inc
shr
fisttpl
into
dec
lds
push
inc
fsubr
aad
testb
xchg
jle
pop
rorb
mov
dec
mov
cli
dec
addr16
outsb
in
stos
dec
sub
iret
call
test
test
test
xchg
cmpsl
fbld
fld
test
push
inc
aad
fdivr
faddl
dec
addr16
outsl
push
stos
inc
stos
pop
sub
loopne
aad
fstp
add
pop
and
push
dec
rolb
popa
dec
loope
lret
push
vpshaw
movsl
and
in
xchg
mov
mov
pop
pop
cmp
mov
fstps
out
jp
pop
jmp
jg
enter
pop
cli
imul
dec
and
ljmp
neg
push
into
jae
and
dec
dec
les
fidivrs
insb
dec
iret
enter
imul
lret
jp
ljmp
aam
popa
ret
push
pop
lret
enter
push
push
adc
dec
rol
negb
enter
decl
sarb
jp
iret
push
fucomp
mov
es
sahf
mov
ret
dec
rcrl
out
push
shll
js
pop
jge
push
and
gs
dec
fldcw
push
inc
cltd
pop
enter
out
dec
out
lret
jb
mov
mov
into
push
out
mulb
iret
push
xor
add
pop
push
pop
aas
adc
dec
dec
ds
inc
fsts
pushf
fwait
repz
push
aam
pop
add
bound
jmp
outsb
repnz
lret
leave
push
and
fistps
lret
jbe
das
dec
mov
push
jle
or
jmp
ds
fisttps
ss
sbb
pop
dec
jle
push
inc
push
lret
jmp
push
shl
ds
dec
fmul
xlat
mov
lret
inc
dec
xchg
fsubl
arpl
mov
push
shll
imul
inc
or
push
fcmovne
xchg
clc
dec
addr16
in
filds
rcl
jno
test
shrb
dec
mov
fsubrs
aad
cmp
into
jp
lds
xor
add
aad
xor
aad
addr16
in
lcall
jle
fcmovnu
push
pop
js
pop
mov
dec
test
dec
and
iret
stos
lea
out
pop
aad
outsb
push
push
pusha
in
adc
and
adc
pop
sahf
scas
mov
jp
dec
cwtl
ds
jno
xlat
pusha
push
mov
dec
mov
add
add
popf
fcomp
adc
push
mov
sbbl
test
repnz
lret
push
jecxz
push
dec
sbb
sbb
mov
xchg
out
pop
fnsave
jp
faddl
testl
mov
dec
stc
inc
cs
das
mov
ror
and
dec
rolb
testl
pop
rolb
mov
loop,pt
stos
ja
xchg
mov
sbb
les
push
pusha
lret
mov
add
or
fucom
push
inc
fsts
push
hlt
inc
call
lret
add
inc
out
jae
filds
mov
imul
lahf
pop
aad
dec
call
jg
push
mov
addr16
mov
mov
fldl
aad
and
dec
inc
mov
sbb
in
mov
pop
sub
push
inc
addr16
gs
out
push
dec
clc
push
jbe
movsl
pushf
frstor
sbb
rorb
call
addb
fst
rorl
inc
xor
adc
in
imul
pop
pop
pop
sub
or
insb
xchg
aad
js
jmp
test
jle
push
out
sub
push
call
jl
dec
out
xchg
push
ljmp
mov
leave
pop
jp
out
fwait
lds
jecxz
out
jbe
call
adc
push
sub
sbb
gs
dec
into
push
inc
pop
push
mov
imul
fldl
stos
mov
xlat
out
enter
mov
mov
push
add
mov
enter
ds
insb
xorb
mov
dec
pop
cmp
orl
dec
push
sbb
pop
inc
add
dec
mov
int3
repz
fstl
imul
aad
fmuls
add
or
sbb
fstpl
inc
aad
dec
in
xchg
int
dec
lahf
pop
mov
jp
pop
andl
pop
test
dec
push
fyl2x
lods
dec
enter
pop
dec
test
outsl
mov
popa
pop
push
pop
in
adc
sub
mov
pop
aam
jno
loopne
push
mov
xchg
or
inc
shr
fsub
pop
enter
or
rcr
in
push
jmp
js
jge
fiaddl
push
stos
in
dec
xor
add
ror
pop
dec
dec
pusha
adc
ficompl
pop
ds
xlat
add
adc
jle
insb
push
mov
adc
dec
xchg
into
aad
imul
mov
cmp
push
push
cmp
xor
ds
movsb
cmp
inc
dec
stos
enter
sub
jmp
aam
mov
nop
mov
enter
push
pop
jge
lret
aam
jmp
dec
add
or
clc
pop
int3
xchg
jl
leave
cmp
out
sub
scas
jae
mov
mov
aad
dec
inc
aad
cmp
cld
cmpsl
dec
mov
inc
fdiv
and
or
mov
push
int3
mov
scas
dec
push
out
mov
int3
jg
pop
and
imul
in
dec
out
jne
cmp
sarl
imul
mulb
sti
ljmp
insl
mov
push
into
add
ds
mov
cmc
inc
stos
aam
push
lret
mov
mov
pop
jo
cmp
sub
iret
pop
cli
lret
fmull
or
sub
sub
inc
data16
dec
or
jle
lock
dec
and
xchg
dec
dec
aad
mov
ficompl
adc
mov
fmul
js
jp
push
pop
jle
pop
int
inc
clc
xor
scas
out
mov
scas
push
dec
push
jl
jl
xchg
hlt
cli
popa
dec
push
lea
in
test
int
inc
in
fcomps
push
aad
test
jno
xchg
mov
inc
jp
dec
fldl
lock
shr
enter
nop
out
dec
into
scas
and
addr16
add
leave
shr
je
sahf
jecxz
dec
push
jmp
xor
dec
out
xlat
rcr
iret
stos
mov
data16
jge
out
lahf
cmpsb
ds
out
loop
lock
int3
stos
cmp
inc
xor
cmp
jle
jmp
dec
call
xchg
popa
push
lret
mov
pop
sti
dec
dec
in
xlat
int3
and
pop
jmp
lret
dec
iret
popa
dec
outsb
pop
nop
int3
loopne
inc
cli
arpl
into
gs
loopne
xchg
inc
mov
push
fcmovne
dec
pop
fcoms
xchg
bound
xorb
out
call
cmp
pop
pop
fisubrl
popa
dec
and
lea
fisttpl
fldl
in
ret
aad
movb
les
pusha
gs
dec
rcr
repz
push
gs
pop
mov
dec
test
jp
dec
frstor
pop
int3
inc
adc
and
enter
xchg
out
imull
stos
repnz
sbb
jg
push
insb
aas
xchg
and
repnz
mov
loopne
and
lcall
addl
imul
adc
push
ljmp
bnd
shrb
out
data16
mov
call
scas
pop
jmp
outsb
test
lret
fadds
orb
and
dec
sahf
pop
jge
pop
inc
mov
xchg
cltd
clc
xlat
mov
mov
dec
pop
dec
mov
nop
fstp
dec
mov
test
fbstp
pushf
lods
mov
inc
adc
aad
iret
inc
in
push
rorb
jmp
rcrb
pop
movsw
mov
and
xchg
pop
pop
jle
int
insl
cmp
sti
gs
xlat
ss
idivl
mov
add
mov
in
xchg
fldl
jmp
gs
add
insb
xlat
pop
fisubl
out
push
lret
jne
std
inc
jmp
dec
int3
les
mov
mov
and
aad
daa
int
mov
test
lret
rcll
jp
push
clc
jnp
pop
mov
push
inc
rorl
call
dec
icebp
enter
push
movsb
dec
mov
ror
in
jl
pop
push
pusha
mov
and
fucomi
cwtl
jg
pop
js
add
push
add
mov
push
xor
repz
or
lret
jmpw
xlat
pop
jmp
outsl
adc
pop
dec
xchg
cltd
add
loopne
and
and
xchg
mov
not
movsl
data16
pop
leavew
aam
rcrb
dec
dec
out
jmp
push
fcmove
dec
or
push
shll
jb
pop
lret
in
sub
rcll
clc
dec
fdivr
pop
in
movsl
add
jmp
test
fstl
fldt
pop
in
pop
and
lret
pushf
aad
int
data16
iret
addr16
dec
adc
jge
call
hlt
ret
adc
int3
shl
push
movsl
lea
out
inc
mov
das
std
shll
out
add
dec
sbb
jl
dec
xor
fs
inc
das
adc
mov
pop
push
aas
cmpsb
mov
mov
inc
dec
add
xchg
lds
jmp
int3
xchg
pop
fisubrl
pop
fnsave
popa
rorb
js
push
xchg
mov
ljmp
inc
dec
xlat
into
out
mov
dec
or
jbe
jmp
les
pop
enter
xor
rol
pop
pop
ffree
pop
aad
iret
rcl
int
ljmp
jae
imul
pop
xlat
inc
add
or
rcrb
shll
lret
mov
sbb
cltd
mov
pop
bound
sbb
fdivrp
sbb
out
cmc
dec
inc
enter
push
out
pop
into
fmul
loope
call
dec
pop
fst
jbe
dec
jge
xchg
inc
pop
dec
jl
inc
pop
jg
lret
mov
xlat
pop
out
js
enter
fistpl
dec
and
in
dec
inc
pop
data16
lahf
movsb
mov
jecxz
push
test
dec
push
pop
sub
lds
dec
and
aas
lret
fsts
addb
sbb
andl
pop
jg
dec
ficomps
dec
inc
test
push
enter
imul
out
movsl
jbe
push
xchg
mov
or
pusha
ret
inc
mov
jge
frstpm(287
fnstcw
pop
push
pop
push
arpl
fucomp
push
mov
lahf
mov
jmp
les
shlb
js
inc
leave
adc
out
lret
push
jae
fadd
cld
leave
push
xor
fcomip
xor
sbb
addr16
lods
dec
mov
push
bound
loope
fldenv
inc
pop
ljmp
decb
ss
rcl
pop
sarb
gs
adc
and
imul
mov
roll
pop
inc
add
pop
push
xlat
jmp
leave
add
dec
dec
pop
das
fstpl
jo
popa
push
lds
pop
pusha
inc
fsubp
xchg
aas
fnstcw
out
mov
loopne
sar
popa
rorl
fiaddl
rcr
dec
cmp
jle
in
sub
ds
dec
fsub
ljmp
push
cmp
int3
enter
shll
iret
fadds
jmp
je
xchg
pushf
mov
int
fbld
sbb
push
jae
imul
mov
loope
push
popa
je
lods
cmpsb
cmpsl
add
movsl
decl
pop
mov
in
fcompl
inc
lds
data16
incl
in
stos
and
dec
mov
mov
push
into
jbe
pop
pop
mull
pop
aam
push
mov
mov
in
bound
push
add
outsl
push
inc
lahf
mov
mov
in
movsl
repnz
aad
mov
in
arpl
mov
in
push
push
mov
sbb
pushaw
dec
cmp
fucomp
aam
cld
push
xchg
arpl
mov
dec
ljmp
push
dec
fstp
jg
push
and
arpl
in
fsubl
cltd
xchg
pop
repnz
out
fnstenv
pop
icebp
ss
jb
aad
fistps
push
aas
xchg
inc
dec
out
push
leave
outsb
push
pop
popa
mov
inc
sub
orb
push
dec
xor
pop
dec
push
lds
jl
aam
jnp
scas
sbb
xchg
incl
dec
aam
fnsetpm(287
cmp
pop
js
testb
int3
add
push
push
push
sar
js
stos
mov
test
cli
dec
xlat
lret
mov
xor
lcall
gs
sahf
adc
pop
sub
adc
orl
push
dec
push
aam
mov
fxch
mov
push
iret
movsl
dec
repnz
lret
pop
sub
loopne
mov
dec
dec
inc
movsb
data16
push
loopne
mov
adc
mov
pop
fst
dec
in
dec
lret
xor
shrl
fdivrs
dec
aad
arpl
movsl
movsb
fcmovne
das
outsb
pop
sar
jl
dec
jle
call
pop
push
imul
dec
leave
pop
push
stos
jle
dec
fstl
filds
pop
mov
jl
rolb
jb
sbb
jge
dec
add
pusha
out
sub
movsb
jno
pusha
inc
out
mov
pop
push
xchg
mov
mov
pop
dec
adc
sbb
enter
xchg
pop
int3
into
mov
insb
shlb
lcall
pop
into
add
repz
fsubrl
xchg
push
ffreep
push
lds
xchg
inc
jmp
stc
dec
push
shll
jmp
into
dec
int
and
xchg
lretw
test
iret
push
mov
rorl
imul
loopne
and
fxch
lods
dec
xchg
fstpl
outsb
lret
fxch
inc
les
es
or
pop
test
mov
vpavgb
shrl
enter
neg
and
mov
mov
push
pop
fcoml
test
gs
movsl
fcmovb
mov
inc
xor
stos
rcl
aas
lods
pop
stos
inc
clc
fimuls
iret
popa
je
popa
fdivp
pusha
push
mov
jne
rcr
mov
adc
loop
mov
addr16
push
or
sbb
dec
mov
jmp
xchg
out
enter
pop
mov
loopne
cli
cld
pop
call
nop
add
pop
aam
fdivrl
dec
dec
dec
inc
pop
inc
into
cmp
popa
mov
mov
int3
dec
fmulp
lds
lret
dec
pop
int
add
pusha
ficompl
inc
pop
sub
and
xlat
rolb
loope
dec
push
lcall
push
adc
repnz
ds
sub
cmp
mov
cmpsb
pushf
out
mov
pop
xlat
jne
nop
pop
xchg
fcmovnu
jge
lret
loopne
and
mov
fcompl
or
rcrb
fwait
pop
dec
clc
dec
aad
negl
add
imul
daa
lds
jne
scas
leave
inc
mov
push
in
aad
pusha
rcrb
push
clc
gs
jp
pop
test
dec
inc
mov
jmp
test
dec
mov
iret
out
out
push
pop
loopne
mov
push
test
pop
repz
jmpw
adcl
in
vucomiss
push
gs
dec
dec
push
pop
inc
fisttpl
in
xor
pusha
sbb
call
add
mov
pop
leave
out
repnz
rorb
mov
call
mov
rolb
fs
mov
sub
pop
lds
dec
iret
push
leave
fsubr
test
fists
or
in
leave
shl
in
popf
pop
mov
int3
mov
iret
stc
pushf
mov
pop
sub
mov
push
xchg
addr16
int
insb
push
ljmp
iret
jns,pt
dec
fiaddl
dec
enter
jno
add
pop
inc
mov
mov
mov
dec
aam
and
mov
shl
out
dec
loope
pop
aam
in
mov
loopne
fneni(8087
push
and
xchg
adc
roll
jmp
cmp
popf
mov
inc
xchg
inc
loop
adc
sarl
xchg
fldcw
push
mov
popf
aam
pop
jecxz
dec
xchg
cmpl
leave
insb
adc
and
stos
inc
shll
shlb
mov
xchg
cmc
dec
flds
pop
xchg
dec
mov
jbe
xlat
push
lock
out
outsb
fstps
rcrl
xchg
add
test
fadd
pop
popa
incb
shll
int3
pop
enter
dec
aas
cmpsb
add
fucomi
dec
push
pop
mov
jne
addr16
pop
add
ss
jle
xlat
in
add
out
pop
cmp
mov
and
mov
push
pushf
lds
push
rcr
pop
mov
shll
addr16
int
mov
testl
mov
dec
cltd
call
ror
jle
pop
fsubs
inc
pusha
outsl
jb
aad
scas
subb
fadds
iret
xlat
mov
pop
les
call
mov
sub
icebp
loopne
aad
add
dec
pop
xchg
js
cmc
dec
int3
divb
fld1
sub
adc
cli
iret
pop
fimuls
dec
ja
jne
mov
leave
jg
sbbb
push
ror
pop
add
ror
push
cmp
data16
push
insb
loope
cmp
push
int3
mov
pop
jnp
push
pop
dec
inc
add
sarb
pop
jg
push
mov
dec
gs
push
mov
leavew
popa
mov
mov
add
int3
jl
enter
lret
mov
insb
fdivr
xor
in
jmp
sbb
sarl
lret
sbb
jae
sbb
pop
cmp
jg
fldcw
adc
fdivrl
dec
add
int3
loopne
fstl
ljmp
jnp
dec
dec
icebp
les
in
xlat
xchg
loopne
push
shrl
lret
push
jg
imul
fistpll
into
jge
leave
iret
inc
adc
imul
sbb
addb
or
addr16
mov
iret
xor
clts
adcl
gs
cwtl
out
mov
jae
and
movsl
cmp
jl
fld
icebp
pop
pop
adc
pop
dec
jmp
push
jb
mov
scas
incl
aam
int
in
loopne
jge
test
jmp
ficomps
pop
mul
mov
xchg
pop
pop
fsubrs
pmovmskb
gs
pop
jae
inc
add
dec
push
aam
int
loope
leave
pop
test
fldln2
loopne
es
push
arpl
ret
add
pop
out
fisttpll
push
aas
aad
jb
sbb
test
into
imul
add
outsb
pop
ljmp
pop
mov
fcmovu
dec
push
aad
lods
push
int3
gs
dec
sbb
adc
shrl
icebp
push
dec
gs
sub
and
push
xchg
fcomp
out
leave
mov
imul
stos
pop
aas
scas
dec
rcl
push
iret
clc
pop
in
xor
aas
out
sbb
ss
xchg
push
cli
sub
xlat
xchg
inc
fs
jl
addr16
in
pop
pop
fucomp
fadd
mov
xchg
icebp
adc
lcall
jl
pop
jp
mov
pop
add
les
data16
out
shrb
loope
dec
fdivrl
insb
inc
jmp
not
fprem
loope
ret
fisttpll
lret
in
out
inc
andb
fcompl
mov
dec
mov
pushl
data16
pop
test
dec
jae
cmp
push
push
leave
pop
xlat
js
lds
clc
jb
pop
mov
arpl
fldt
cli
leave
fisubl
dec
jle
call
cmpb
pop
arpl
popa
inc
bnd
mul
push
filds
outsl
inc
and
popf
jmp
loopne
mov
int
and
pop
pop
sub
jne
arpl
fcoms
sbb
leave
les
into
push
lds
inc
inc
jg
iret
dec
pop
mov
addl
out
jmp
lea
iret
mov
fcmovne
push
add
pop
lret
dec
mov
arpl
fiadds
sub
inc
cmp
and
stc
subl
cmp
out
mov
xchg
dec
popa
fiadds
iret
loopnew
rcll
xchg
pop
sar
call
lods
sbb
push
push
pop
mov
faddp
push
fisubl
stos
int3
pop
dec
movsl
movsb
mov
fstl
out
out
js
cld
xor
xor
fstp
cmp
dec
popa
dec
loopne
mov
outsl
dec
aad
add
mov
and
pop
out
rolb
xchg
jo
pop
pop
mov
movl
rcr
inc
cmp
pop
adc
lods
setne
dec
movsl
dec
int
rcrb
push
push
sar
ds
push
jle
int
pop
imul
cltd
out
push
jp
dec
push
test
mov
or
aam
in
fwait
sbb
push
push
xor
in
test
movsl
pop
ror
sub
xchg
mov
sbb
pop
gs
out
inc
int3
mov
frstpm(287
mov
lds
insl
aam
jp
dec
mov
aam
nop
std
jp
cmc
aad
dec
inc
call
pop
cli
jmp
test
push
pusha
inc
out
enter
imulb
into
xchg
lds
pusha
inc
add
out
insb
iret
mov
aam
adc
dec
pop
pusha
dec
cmp
int3
pop
pop
dec
xor
les
xor
fdivrl
sbb
mov
in
push
sub
jmp
lahf
mov
push
popf
inc
lret
dec
out
inc
test
push
and
inc
lods
inc
xor
pusha
jecxz
push
lret
adc
mov
mov
push
std
and
push
icebp
in
mov
aad
xchg
push
in
shlb
test
adc
mov
loopne
pusha
shlb
ret
in
repnz
and
iret
pop
add
mov
xchg
out
nop
enter
dec
sti
jo
stc
dec
push
loopne
out
dec
push
jae
pop
fldl
jecxz
fwait
out
push
or
maxps
fcoml
jmp
movsl
xchg
mov
adc
dec
inc
jle
out
ds
fcmovne
adc
add
jmp
int3
les
popf
push
ret
fsubr
adc
gs
into
enter
sbb
fstps
jmp
fcmovnbe
cmp
dec
xchg
xchg
loopne
pop
xchg
mov
fildl
clc
cmpsl
js
sub
mov
testl
mov
insb
pusha
pop
fwait
inc
and
test
push
loopne
ror
jns
cltd
cmp
les
pop
fstl
loop
lock
pushf
addr16
pop
fucomip
imull
gs
push
inc
jle
pop
notl
jmp
xchg
pop
popw
in
cmp
insl
mov
push
dec
pop
iret
sub
orl
push
push
insb
imul
in
shr
dec
pusha
nop
mov
pop
dec
pop
pop
and
pop
dec
pop
test
cld
lods
dec
mov
aad
into
adc
ror
mov
pop
or
add
aad
inc
loope
mov
imul
into
pop
imul
insb
aas
inc
xor
add
cltd
lock
mov
jge
inc
jmp
push
mov
jecxz
leave
fistpl
jbe
out
jmp
dec
lret
xchg
aas
insl
loopne
xor
shlb
clc
pop
dec
pop
call
dec
test
aad
add
leave
jno
aad
vpmullw
cld
pop
cmp
add
pop
aam
adc
out
pop
fsubr
inc
push
lds
testb
dec
pop
xchg
popa
mov
in
loopne
jecxz
pop
adc
pop
pop
add
push
scas
loopne
mov
fcomip
gs
fsubr
push
inc
cmp
add
std
jbe
pop
andb
jae
dec
inc
push
call
dec
bound
popf
mov
int3
out
mov
flds
xchg
or
scas
int
lret
mov
cli
int3
ficompl
or
fsubs
vcvtss2sd
in
push
mov
iret
fildll
push
stc
mov
add
fcomps
les
jl
popa
call
faddp
mov
int
push
jmp
and
sub
push
jg
pop
call
leave
inc
pop
test
or
add
dec
leave
out
xchg
sbb
shll
jle
pop
out
bound
fsubp
mov
push
fstpl
jo
dec
fadds
outsb
loope
push
pop
movl
fstl
rcr
in
cwtl
fxch
dec
aas
push
dec
pop
out
inc
fstl
mov
mov
repz
dec
dec
add
int3
dec
mov
cmpl
add
fisubs
and
ror
loopne
pop
dec
or
int
insb
fsubl
iret
xchg
push
movsl
mov
xor
jno
ret
pop
dec
dec
inc
dec
mov
push
nop
push
cmp
loope
push
imul
ret
leave
pop
lods
pop
or
xchg
push
in
fisttps
jge
push
ds
lret
nop
dec
enter
std
rcrl
cmpsb
cld
xor
lds
pop
push
stos
repz
out
loopne
gs
ficomps
xchg
pop
mov
rolb
jmp
fcmovbe
jecxz
aam
lea
repz
add
jl
fists
and
outsl
add
push
testb
adcl
lahf
pop
dec
mov
push
fcomi
out
dec
mov
cld
imul
aam
dec
divl
fisttpll
jbe
dec
add
imul
push
js
dec
jle
gs
test
ret
inc
xorl
fcmovbe
js
mov
iret
mov
push
rcl
pop
std
sbb
clc
fcmovbe
mov
es
clc
enter
pop
push
jmp
js
or
sub
aaa
jne
sahf
insb
xchg
mov
fimull
mov
cmp
int
jp
cmpsb
repz
lahf
add
pop
rcr
leave
inc
inc
push
fstps
mov
push
call
in
cmp
dec
fmulp
pop
mov
imul
adc
dec
enter
out
jl
fistl
jle
aas
dec
pop
mov
imul
push
push
loopne
into
fdivs
cltd
sub
lret
inc
push
xchg
loope
pusha
dec
test
add
pop
inc
pop
jp
fdiv
push
es
pusha
xchg
cli
insb
lret
insb
jle
fyl2xp1
inc
push
dec
push
gs
cmpsl
test
xlat
int3
inc
aad
pop
jb
inc
ficompl
cmp
dec
inc
iret
js
call
push
aam
inc
xchg
int3
in
fisttpll
fistpl
inc
test
leave
imul
rorb
jo
fmull
leave
into
shl
push
push
inc
gs
push
inc
push
in
data16
rcl
jmp
fadd
xchg
out
xchg
aam
lret
pop
lds
rcl
pop
add
push
fcomps
push
mov
pusha
movsl
jl
popa
inc
xchg
or
pop
and
loopne
movsb
pop
mov
nop
push
dec
push
ljmp
dec
loopne
imul
cli
dec
insb
fistl
sarl
shlb
sub
fcompl
mov
fldl
int
lea
data16
fcomi
inc
and
sti
lds
pop
fistps
aas
xor
cld
push
fsubr
int
jne
jecxz
jge
dec
flds
dec
mov
out
mul
inc
mov
pop
icebp
cmpsb
aad
sbb
leave
dec
push
int3
lds
frstor
sub
sahf
dec
xor
lds
dec
xlat
aad
fisubrl
shll
in
inc
ret
xorl
dec
les
lret
pop
mov
push
subps
repnz
out
add
arpl
stos
fidivs
lcall
loopne
aas
cmp
mov
sbb
scas
cmc
ffreep
out
lret
mov
loopne
mov
jmp
mov
or
fmul
jmp
jp
dec
in
fistps
frstor
mov
rcrl
repz
inc
pop
imul
cmp
js
into
or
lahf
pop
pop
sub
adc
fisubrl
mov
sub
mov
insb
inc
cmp
pop
mov
leave
fcoml
sub
out
pop
aad
adc
sbb
sub
mov
push
inc
rorb
scas
lock
ret
sbb
aam
out
inc
popa
mov
aam
mov
out
rolb
pusha
push
jge
jp
jle
pop
lock
shlb
mov
and
adc
fcomi
repnz
mov
push
mov
xchg
bound
popa
aad
pusha
enter
imulb
jg
lahf
jns
data16
mov
pop
mov
dec
adc
in
test
movsl
sub
cld
cmc
cmpsb
je
xor
ds
and
popa
in
jb
in
ljmp
fistps
orl
pop
test
dec
ljmp
pop
dec
out
lret
std
arpl
ss
in
in
cld
mov
pop
xor
addr16
lcall
mov
dec
into
or
ljmp
fnstsw
inc
push
cld
xor
sarl
iret
daa
mov
cli
xchg
push
mov
fcmovnb
rcl
cli
clc
out
add
pop
fidivrl
xchg
addr16
stos
aas
cwtl
cmc
pop
push
insl
es
mov
ror
out
dec
push
push
shrb
arpl
shll
fucomp
mov
dec
lret
jg
imul
int3
cmp
fidivs
push
cli
scas
aam
push
jbe
enter
outsb
fcom
fwait
rolb
repnz
add
dec
add
xlat
xchg
mov
popa
out
bound
iret
inc
out
xchg
andb
inc
into
dec
test
aad
pop
out
in
popa
bound
js
imul
push
pop
jmp
fdivs
popa
pop
push
add
dec
inc
xbegin
push
call
adc
lahf
push
push
sub
inc
imul
pop
gs
add
push
cmp
cli
xor
inc
out
les
fcomp
data16
pusha
int
movsb
add
xchg
inc
pusha
push
add
pop
aad
in
pop
dec
aad
jl
insb
mov
fldt
fadd
push
rcl
rolb
imul
movsl
adcb
inc
mov
dec
icebp
loope
pop
dec
or
roll
out
add
cltd
dec
push
mov
fadd
mov
dec
cld
enter
jp
push
aad
iret
iret
mov
sbb
pop
hlt
pop
imul
inc
cmp
fcompl
aam
aam
jg
dec
push
ret
fcomps
and
into
dec
in
lret
pop
jecxz
leave
insb
addr16
inc
push
gs
stos
pop
stos
fidivrs
jb
test
in
sbb
lret
add
push
dec
fsub
orb
dec
call
dec
add
push
popa
shr
movb
repz
xlat
inc
loopne
dec
jle
gs
adc
push
dec
pop
adc
fdivs
fcomp
dec
fsts
out
stos
imul
ret
clc
xor
or
jle
mov
out
push
pop
lahf
adc
std
push
mov
or
push
int3
into
iret
push
fisubrs
xchg
and
xchg
pop
stos
lret
pop
test
cld
dec
inc
fmull
out
aas
data16
jl
imul
jp
into
mov
int
rorl
inc
aad
out
and
fadds
pop
jl
fld
inc
jbe
adc
roll
pop
addl
jle
lds
dec
rcrl
pop
push
xor
cmp
sahf
pop
dec
lcall
adc
add
fmul
xlat
pop
aad
movsl
cmpsb
int
mov
add
stos
neg
test
add
pop
int3
xchg
jl
mov
clc
fisttps
pop
dec
rorl
arpl
push
fcompl
pop
push
and
dec
add
in
iret
out
outsb
fcompl
xchg
push
mov
jb
rcrb
fmuls
pop
aam
imul
mov
icebp
mov
dec
addr16
in
mov
in
pop
lea
pushf
inc
imul
inc
dec
mov
push
out
aad
or
xchg
push
xchg
jl
pop
out
pop
inc
stc
add
inc
call
inc
xchg
mov
sub
jp
push
dec
fstp
movsl
and
dec
or
push
mov
ljmp
xchg
imul
inc
mov
out
dec
push
arpl
dec
add
fcoms
shll
xlat
inc
ljmp
leave
pop
push
and
lea
mov
ds
movsb
in
pop
add
jmp
pop
leave
pop
out
and
jmp
aas
leave
inc
loope
inc
dec
gs
int
gs
arpl
dec
icebp
jp
clc
sub
or
and
pop
pop
aas
idivl
inc
cli
call
leave
mov
scas
aam
sbb
dec
push
pop
mov
imul
push
xchg
or
inc
popa
push
ret
dec
pop
pop
sub
xor
push
dec
pop
mov
icebp
addr16
call
popa
mov
int
mov
mov
xchg
jb
test
pop
movsl
imul
push
movsl
out
push
aad
aam
dec
jecxz
loope
dec
pop
jmp
pop
push
cmp
mov
mov
dec
aaa
add
fcoms
out
fldenv
iret
shrb
popa
lcall
shr
mov
push
dec
or
push
mov
or
push
push
xor
fidivs
call
add
fcompl
scas
gs
clc
addr16
aam
xchg
jb
pop
lods
xor
jmp
jbe
lahf
inc
lahf
adc
das
fs
fidivrl
lds
cmp
rorb
xchg
in
fsubp
mov
icebp
lods
dec
sahf
iret
push
inc
movsb
rorb
xchg
in
dec
leave
pop
frstor
jo
fimuls
push
push
iret
mov
dec
sub
sub
rol
fimull
rcrb
and
mov
clc
sbb
sub
out
aad
imul
pop
popa
test
outsl
jg
fcmovne
iret
call
pop
and
inc
adcb
clc
call
js
cltd
leave
dec
cmc
loopne
jmp
inc
out
stos
inc
fildll
pop
into
rcrb
insb
dec
push
pop
xor
ljmp
dec
jle
push
pop
lret
ffreep
shrb
in
aas
xor
mov
inc
ljmp
and
push
jno
mov
cmpsb
js
add
push
jmpw
enter
ret
dec
outsl
adc
sbb
insb
mov
loopw
int
stos
loop
negb
bnd
lret
push
fstl
mov
int3
clc
cwtl
jp
out
mov
adc
outsb
popf
dec
ds
dec
filds
or
jmp
aad
out
add
out
test
insb
mov
cli
das
pushf
adc
push
mov
addl
push
mov
pop
gs
cmp
scas
lret
dec
cmp
movsb
aad
sar
pop
pusha
fistps
mov
mov
pop
out
pop
enter
popa
dec
aad
outsl
fildl
shrb
arpl
add
shrb
inc
gs
outsl
fisttps
push
fwait
dec
fsubs
paddd
gs
gs
ret
leave
xchg
push
lret
sbb
imul
data16
pop
or
shlb
jmp
cli
sub
gs
test
mov
mov
xchg
push
addr16
mov
mov
fildl
loope
fstpl
fimull
inc
inc
das
xchg
in
push
mov
aaa
iret
aas
push
inc
lret
dec
pop
iret
aam
jmp
mov
lea
loope
aad
lds
pop
inc
xchg
mov
jge
lret
mov
push
dec
inc
jle
fldl
jle
call
push
into
gs
cmp
cmp
or
frstor
push
inc
arpl
mov
pop
int
jle
pop
xor
sbb
vandnps
gs
xchg
jle
dec
pop
rolb
dec
insb
pop
out
pop
add
adc
pop
push
mov
xlat
test
dec
div
test
or
jmp
sub
in
dec
jmp
push
jl
mov
jae
fmulp
pop
jmp
fcmovne
js
push
jle
lret
pop
fidivrl
gs
shlb
adc
push
pop
ffree
shl
sub
in
dec
sub
mov
fs
inc
test
cwtl
rclb
in
stos
pop
insb
pop
inc
push
sbbb
mov
pop
jmp
pop
pop
out
xchg
cli
imul
push
cli
add
lds
add
in
insb
sub
subl
push
fnstenv
pop
cld
mov
orb
push
jbe
dec
ficompl
iret
dec
test
mov
dec
enter
test
push
pop
sarl
pop
push
les
shrl
xchg
call
das
repnz
dec
and
xlat
jg
int3
lds
cli
into
pop
push
ror
gs
dec
dec
mov
mov
test
enter
les
dec
or
jle
pop
pop
or
lds
dec
pop
push
pop
bound
dec
adc
fwait
inc
frstor
jmp
fsts
movsl
jo
in
test
dec
rolb
cli
movsl
mov
xchg
add
fsubrs
lret
out
les
fcmovu
push
xchg
imul
pop
mov
ret
bound
les
test
loope
push
mov
out
pop
and
push
mov
add
inc
push
pop
filds
add
dec
pusha
sarl
les
scas
int3
ficoml
mov
shlb
jmp
mov
add
int
lret
pop
nop
aam
or
leave
or
xchg
xor
jg
fisttps
jg
inc
rol
fwait
push
aad
jl
pusha
pop
dec
push
cmp
sahf
xor
clc
shl
aam
add
cld
dec
mov
repz
sti
insb
dec
int
mov
mov
enter
fldl
imul
cli
dec
fsubp
mov
xlat
push
push
sar
pop
shr
xor
loop
aam
lods
out
jae
cwtl
xlat
bnd
inc
fadds
jns
iret
ret
lahf
out
out
imul
inc
inc
push
out
xor
jmp
fistpll
sub
dec
mov
fisubs
dec
iret
rcrb
mov
jle
pop
aad
or
dec
rclb
xor
loopne
jmp
call
add
push
rcr
cli
or
subl
xchg
push
push
out
ficoml
out
lret
mov
or
push
rolb
or
test
cld
jle
fcmovu
pop
aas
push
mov
orl
dec
pop
pop
jmp
imul
dec
and
inc
cltd
cmp
inc
pop
pusha
out
and
enter
jg
dec
out
fstl
ja
mov
jecxz
mov
lahf
mov
mov
xchg
aad
xchg
movl
inc
mov
adc
cmp
ror
and
inc
adc
inc
fistl
jno
inc
lahf
int
xlat
addr16
inc
call
call
lret
pop
dec
jl
mov
push
push
jnp
lret
pop
pop
inc
dec
in
xlat
inc
mov
dec
push
ja
push
push
xchg
into
fistps
icebp
jno
add
int
loopne
enter
lds
inc
dec
int
test
pop
dec
aad
push
test
das
leave
out
pop
xlat
or
mov
and
pop
fmull
jecxz
repz
enter
js
negl
test
pop
out
pop
aam
inc
jge
leave
mov
pop
js
add
dec
aam
fisubl
sti
adc
lds
inc
int3
jnp
in
inc
cmp
dec
mov
aad
dec
pop
push
adc
push
fisubrl
iret
data16
xlat
js
add
mov
pop
sbb
imul
mov
xchg
ficomps
outsb
mov
adc
aad
loopne
push
inc
fstl
sbb
icebp
push
into
repz
enter
out
xlat
mov
mov
test
xor
aad
js
pop
repnz
xchg
ds
popf
pop
or
insb
mov
stos
repnz
jl
jp
mov
into
inc
enter
xchg
fldl
mov
jecxz
popf
pop
leave
lahf
lret
gs
ret
call
xor
cltd
pop
pop
inc
lret
xor
and
or
pushf
fnstenv
test
out
out
push
fstpl
jge
inc
insb
dec
pop
xlat
leave
icebp
jmp
xchg
inc
sub
xor
test
jp
imul
inc
cmc
push
int3
int
pusha
xlat
in
push
das
out
addr16
subl
dec
jmp
dec
mov
into
push
lret
mov
pop
imul
pop
mov
cwtl
loopne
movsl
inc
mov
or
test
lds
lock
rcrb
dec
inc
fmulp
loopne
sub
pop
fildl
push
pop
test
push
jb
imul
or
sbbl
loopne
pop
outsl
ret
push
shlb
dec
adc
cmp
int
pop
inc
out
pop
inc
xlat
pop
sub
leave
cmp
fiaddl
mov
xor
jno
cmpsl
mov
mov
pop
push
aas
ret
inc
or
data16
push
mov
xor
inc
outsb
fisttpl
pop
xchg
enter
pop
insb
mov
pushw
mov
jle
push
daa
pop
movsb
lahf
xor
loopne
fstpt
cmp
jle
imul
loopne
mov
dec
gs
out
jmp
jno
and
fcmovnb
jmp
xchg
enter
pop
mov
icebp
inc
fldl
pop
test
pop
adc
sbb
dec
mov
mov
pop
xchg
cmp
jl
jl
std
loopne
push
jl
dec
mov
inc
pop
ror
pop
dec
insl
mov
lret
push
cmp
dec
test
dec
out
aad
outsb
enter
fistps
fsts
mov
aad
stc
pop
push
gs
mov
push
iret
inc
dec
scas
dec
mov
ret
fdivrl
gs
inc
les
aad
jmp
lods
into
pop
scas
shll
out
out
jl
jmp
push
and
dec
push
std
xchg
pop
dec
rcr
dec
dec
fsubrs
ficompl
mul
js
cmp
push
or
imul
lret
enter
imul
jmp
aam
icebp
cmp
mov
mov
gs
mov
out
lret
mov
fstps
cmovp
mov
cwtl
lret
pop
insb
in
and
inc
imul
pop
mov
jp
fimull
add
jge
mov
inc
into
decl
pusha
lret
mov
addr16
neg
fildl
mov
ds
or
mov
lret
enter
out
aad
mov
popa
sub
rcr
mov
xlat
xchg
and
or
jae
stos
loop
push
jne
mov
mov
hlt
pop
pop
addb
lret
add
nop
insb
xchg
fdivrs
add
sbb
out
adc
ret
push
loopne
jae
xor
mov
pop
icebp
dec
imul
dec
push
fidivrs
mov
neg
jge
call
test
dec
pop
in
xchg
fbld
mov
rol
pop
out
pop
mov
jmp
push
enter
dec
mov
das
or
out
rorb
pop
lods
xchg
fcomi
testl
hlt
in
mov
loopne
popa
js
sar
loopne
fisttpl
pop
imul
outsl
decl
flds
pop
push
andb
mov
filds
popf
out
aas
into
pop
jmp
rol
fstl
mov
dec
pop
int
push
push
push
push
es
dec
mov
insb
jb
test
dec
out
mov
push
in
and
dec
imul
in
dec
lret
sub
mov
mov
fistps
fisttpl
dec
call
ds
push
fstps
mov
int
pop
pop
mov
cld
or
or
pusha
fstpl
dec
addr16
dec
mov
out
fcomps
xchg
std
lret
sbb
lret
xlat
mov
and
leave
pop
jno
sbb
dec
inc
outsl
inc
mov
mov
jp
fcmovbe
sub
pop
add
inc
mov
jb
outsl
lds
xorl
pop
lret
inc
adc
adc
rol
lret
push
loope
sub
mov
xlat
bswap
push
mov
pop
dec
push
int
fldcw
lret
addr16
pop
repz
pop
lods
in
lret
leave
sbbl
adc
pop
dec
aad
sub
inc
pop
aam
shlb
ss
aaa
inc
clc
mov
jl
lret
aad
dec
pop
xchg
pop
aam
aaa
xchg
adc
jb
jle
dec
gs
lret
loopne
fidivrs
and
push
pusha
rorb
popa
inc
pop
dec
dec
enter
or
jge
inc
ficomps
into
incl
gs
push
add
loopne
aam
pop
dec
fnop
mov
lcall
inc
mov
lret
arpl
fsts
iret
les
out
inc
or
gs
adcl
sahf
xchg
cmp
pop
repz
dec
jmp
pop
int3
dec
data16
inc
adc
movsl
call
or
inc
pop
xchg
mov
leave
in
adc
fcmove
out
fcoms
xchg
loopne
add
jbe
leave
lret
lea
push
dec
les
enter
cli
mov
cmp
push
js
xlat
test
ljmp
or
pop
dec
fistpll
jmp
fmulp
push
out
add
cwtl
inc
and
fsubs
icebp
mov
adc
mov
in
out
inc
pop
stos
pop
das
inc
adc
negb
adc
loopne
mov
dec
push
mov
jno
icebp
sbb
dec
and
leave
lock
jge
out
aas
adc
mov
xchg
mov
cld
shl
pop
test
inc
out
aam
dec
enter
push
inc
cmpsl
dec
pushaw
or
jno
push
nop
imul
ret
lea
dec
sahf
xchg
ljmp
test
push
mov
mov
dec
mov
dec
add
movsb
and
iret
mov
fisubs
jg
pop
fadd
push
imul
test
pop
jmp
pop
cwtl
cli
dec
les
fcomps
mov
bnd
xchg
aaa
add
pop
pusha
loope
iret
mov
mov
test
push
loop
leave
bound
in
insb
neg
flds
or
pop
add
dec
aam
fsubl
dec
ficompl
jae
push
pusha
dec
cmp
loopne
jp
or
ljmp
imul
aad
mov
data16
sub
sbb
pop
or
mov
pop
int3
int3
aam
addr16
loopnew
mov
add
xor
xchg
xchg
fisubrl
adc
jno
add
insb
xchg
outsl
data16
ret
and
in
inc
or
les
fs
fnstenv
leave
xor
mov
leave
fadds
and
dec
loopne
popa
cmc
dec
inc
or
loope
ficomps
fstp
jo
clc
enter
rol
pop
addr16
out
in
pop
rcr
subl
sub
inc
push
test
mov
pop
dec
popa
inc
mov
out
dec
xor
fisubrl
mov
and
mov
mov
out
mov
dec
insb
aad
cmp
adc
aam
push
in
dec
dec
jmp
ret
ret
out
rcll
sbb
sarb
pop
sbb
jno
iret
nop
jbe
ret
xchg
gs
fxch
sub
add
cmpsb
jb
stos
call
lahf
imul
cmc
movsl
mov
faddl
imul
in
pop
pop
iret
icebp
lcall
cli
xor
or
xchg
push
aad
mov
jmp
add
dec
dec
mov
ret
mov
out
stos
leave
es
fidivrs
dec
xchg
mov
push
js
addr16
mov
lret
leave
jo
fisubrl
lods
jl
int
mov
fsubl
push
push
jno
leave
int3
and
push
ds
push
xchg
push
bound
inc
notl
aad
repz
jmp
pop
lret
adc
icebp
push
dec
xlat
mov
fisubrl
mov
cmp
ljmp
addl
add
data16
mov
popa
pop
xchg
pusha
inc
movsl
cmc
fs
push
sub
fcmovnbe
cmp
mov
outsb
push
dec
dec
mov
jmp
jbe
lods
mov
pop
stos
imulb
out
test
aaa
insb
cmpsb
sti
inc
fmul
add
outsb
aam
mov
or
mov
clc
fdivr
pop
jmp
mov
sub
int
pop
sarl
scas
fdivrl
push
shrl
fnstenv
sahf
mov
push
fstpt
loopne
dec
clc
pop
inc
cmc
push
ret
jae
mov
repz
add
or
and
scas
inc
imul
cmc
out
pop
dec
mov
loop
lret
fistl
push
les
dec
aad
pop
push
mov
xorb
enter
loopne
sahf
ds
fimull
pop
adc
fisubs
dec
dec
shlb
and
push
and
aaa
fcomps
fucom
cmp
jbe
divl
in
mov
mov
inc
out
add
or
ret
xchg
mov
pusha
into
out
lock
xchg
sbbl
jmp
gs
mov
fs
sub
dec
inc
mov
imul
mov
xor
enter
incl
push
mov
bound
and
test
addr16
cmp
fstps
jge
cli
lcall
push
push
frstor
int3
pop
xchg
jp
popa
xorb
sbb
insb
pop
mov
cli
inc
iret
pop
std
xchg
adc
xor
divb
adc
and
mov
fcmovne
loopne
add
aad
out
out
jb
mov
icebp
adc
xor
xchg
fsts
mov
fmul
add
push
pop
aad
leave
fs
pop
add
rolb
int3
and
fists
push
dec
shll
fimull
sbbb
adc
pop
scas
in
jle
in
rcl
imul
cmp
jge
dec
jge
incl
sub
out
add
ret
sub
adc
popa
adc
jle
mov
push
out
add
insb
jg
aad
aaa
adc
pop
fistl
mov
push
push
aad
stos
call
gs
in
or
cmp
in
jle
pop
inc
mov
notb
popf
mov
xchg
push
rcrb
popa
repnz
jno
adc
jl
addr16
pop
ffree
mov
jmp
inc
dec
enter
inc
sub
adc
rcl
mov
mov
pop
rorl
jmp
sarl
loop
mov
push
je
test
arpl
out
fdivrp
out
inc
out
test
in
sub
push
imul
pop
lds
jnp
stos
incl
ret
inc
mov
pop
xlat
push
popa
cld
stos
dec
outsb
subl
inc
push
adc
movl
xchg
jl
fiadds
adc
push
enter
pop
dec
add
addr16
adc
pop
jl
push
lret
int
mov
push
push
cmp
or
mov
out
dec
mov
push
movsb
jb
cmp
pop
fildll
xlat
cmp
lret
inc
push
push
fadds
jle
dec
lret
push
inc
es
addr16
fcoml
sub
cld
rol
mov
jl
pusha
adc
vmovapd
js
clc
and
lret
pop
call
pop
pop
aad
mov
into
dec
push
mov
out
in
aad
in
enter
jp
iret
ficompl
aad
mov
and
push
push
cmp
fsubrl
fnsave
ljmp
dec
and
mov
iret
cld
mov
test
jle
int
fisttpl
jns
in
pop
pop
push
dec
je
test
pusha
xlat
pop
sar
pop
popa
out
push
add
scas
jmp
pop
pop
test
pop
dec
push
aaa
sub
lds
mov
out
mov
jge
push
cmp
mov
dec
pop
call
outsl
sbb
push
rorb
pusha
insb
push
jmp
ret
xchg
mov
outsb
fldl
sti
out
xor
dec
or
or
xor
ljmp
movsl
push
test
sti
aad
jmp
mov
pop
ret
loopne
pop
loope
fistps
aad
mov
push
enter
mov
out
mov
jge
insb
push
aad
out
pop
and
pop
insl
push
loope,pt
stc
lds
iret
xor
push
pop
dec
test
pusha
mov
dec
pusha
push
dec
or
jno
roll
in
xlat
jmp
lcall
popa
xor
jg
negb
frstor
dec
jge
subb
mov
pop
or
sub
pop
leave
xchg
test
dec
into
movsb
push
aad
mov
stc
popa
dec
iret
into
les
cltd
jno
icebp
or
aad
cmp
lock
pusha
fcmovnu
repnz
pcmpeqw
enter
leave
pop
mov
in
push
pop
test
xchg
icebp
adc
push
and
stos
xorl
lods
dec
pop
mov
dec
pop
mov
lret
enter
mov
jl
out
cwtl
fucom
mov
push
jno
sbb
aas
and
push
dec
gs
fs
inc
dec
sbb
out
push
int3
fstps
leave
dec
dec
cmpsl
js
pop
lret
xchg
push
mov
sbb
dec
fidivs
out
fcmovne
addr16
enter
inc
fnstenv
xchg
push
mov
xchg
test
mov
dec
fidivrl
sub
push
stos
loope
fsubrs
fldenv
dec
sbb
push
call
lods
int
imul
inc
inc
pop
test
dec
enter
xlat
insb
imul
fsubl
decl
xor
push
fidivs
mov
aas
sbb
test
call
push
into
imul
sbb
cmp
fnsave
repnz
dec
push
inc
shll
push
loop
inc
xor
in
pop
adc
mov
mov
rorl
fistl
data16
pop
pusha
js
jle
addr16
fisubrs
xchg
mov
push
and
iret
dec
sub
test
fisubs
mov
shl
test
and
pop
push
int
mov
fldl
ljmp
push
dec
rcrb
call
add
push
out
and
sahf
aam
fldl2e
aad
fs
xor
pop
sub
imul
sub
xor
pop
dec
imul
mov
ljmp
std
shlb
imul
out
enter
int3
inc
inc
push
and
xchg
ror
repnz
inc
mov
pop
cmp
sbb
loop
leave
adc
mov
rclb
jge
ror
mov
pop
lret
xchg
icebp
gs
and
imul
dec
imul
ret
push
out
mov
lret
dec
xchg
negl
mov
testl
mov
ret
loop
fistl
stc
out
movsb
pop
inc
jmpw
loopne
fcompp
lods
mov
or
and
push
jp
push
adc
pop
mov
add
sbb
pop
addr16
push
pop
in
fucomip
push
gs
cmp
pop
cs
push
aaa
push
push
mov
dec
pop
les
jmp
mov
cld
int3
pushl
subb
fwait
out
pop
pop
mov
lods
icebp
xchg
push
vpunpckhdq
pop
dec
shrb
mov
mov
addl
in
mov
std
fdivrs
mov
in
push
ficoms
fiaddl
fistps
fdivrs
push
scas
push
dec
push
sbb
out
xchg
iret
filds
ss
lock
sahf
pusha
call
xchg
into
popa
sbbb
faddl
call
xchg
pop
and
lock
nop
popa
pop
xlat
add
mov
out
out
xor
sbb
iret
pop
icebp
out
leave
and
imul
addr16
cld
test
inc
pop
lret
dec
movsl
imul
jno
jmp
stos
cs
movsb
pop
xor
adc
add
iret
mov
out
xchg
roll
lea
cltd
gs
dec
daa
cwtl
mov
pop
cs
int3
aas
and
xlat
imul
test
call
mov
ljmp
loop
fldl2t
daa
xchg
dec
push
out
out
insl
pop
mov
insl
in
adc
mov
fwait
pop
push
push
fisubrs
fsubrl
jmp
stc
adc
mov
int
xchg
cmpl
movnti
ficomps
xor
dec
shrb
and
and
pop
fildl
int
dec
ficompl
push
arpl
jmp
dec
in
in
jge
push
push
jp
addr16
out
pop
fdivrs
pop
xchg
mov
imul
push
cld
imul
repnz
xchg
dec
sbb
int
jle
fucompp
mov
dec
push
je
mov
fistpl
jb
leave
jmp
mov
scas
dec
dec
mov
push
jl
cld
insb
mov
out
pop
frndint
cs
cmp
add
pop
ljmp
mov
inc
mov
notl
addr16
int3
dec
in
cmovp
pushf
nop
clc
add
fnstcw
xchg
mov
movsl
push
fld1
aas
out
enter
push
dec
std
and
dec
push
sbb
jecxz
call
dec
lret
pop
push
inc
sti
out
fsubrl
and
rclb
int3
flds
movsb
inc
add
lds
sbb
nop
xlat
or
pop
rcrb
push
bound
pusha
jmp
fnsave
aas
jne
inc
popa
sahf
jo
in
lahf
lock
push
andb
aad
cmc
sti
loopne
out
xchg
lret
dec
jp
fiadds
ret
and
lds
mov
int3
call
pop
sti
mov
icebp
aam
dec
data16
jl
pop
xlat
ds
iret
pop
push
out
mov
mov
dec
mov
jae
dec
inc
test
pop
jle
dec
lds
mov
inc
mov
test
aam
imul
add
mov
jns
xchg
insb
lods
test
insl
lret
fsubs
or
gs
dec
dec
sbb
push
mov
push
push
sahf
pop
fildl
push
cmovl
pop
push
les
xor
inc
mov
jo
icebp
int3
aad
cmp
sub
subl
lret
adc
jge
dec
add
push
loopne
push
pusha
aad
in
cmp
call
lds
jp
pop
sahf
dec
addr16
and
pop
shl
out
mov
mov
repz
fists
dec
aas
mov
cmp
out
jmp
push
mov
push
int3
push
mov
lahf
jo
int3
rclb
fnstenv
leave
pop
rcrb
xor
push
fdecstp
mov
nop
movsb
into
mov
inc
subb
mov
lret
test
or
mov
je
iret
fmuls
data16
mov
dec
mov
loopne
dec
mov
mov
cltd
dec
or
test
xlat
mov
dec
ret
or
mov
int3
xor
pusha
mov
cmp
inc
ljmp
mov
fdivrl
jno
add
icebp
cmp
mov
dec
scas
or
hlt
lock
fisttpl
fsubs
inc
mov
or
inc
ror
push
mov
or
mov
sbb
lock
lock
mov
sti
inc
enter
mov
scas
push
fistpll
push
in
icebp
xchg
sti
push
push
pop
xchg
popf
fadds
subl
cmpsb
cmp
scas
lds
pop
jecxz
cwtl
mov
clc
iret
cmp
out
scas
mov
adc
loopne
jno
push
out
jmp
and
pop
push
pop
fbld
push
xor
test
push
mov
insb
jno
cmpsl
addr16
jno
out
test
jo
mov
cmpsl
insb
inc
push
mov
lods
cmp
xor
pusha
repz
call
mov
shrb
scas
inc
shlb
pusha
and
cmp
clc
enter
xchg
mov
aad
int3
sti
cmp
outsl
lea
cmp
arpl
inc
int
out
mov
popa
mov
mov
sub
and
aaa
popl
rorl
pop
int3
push
fisttps
pop
mov
xor
insb
gs
dec
push
mov
dec
popf
push
xchg
xor
add
sbb
inc
repz
mov
rcrb
cli
inc
sbb
mov
in
xlat
rorb
out
faddl
jmp
push
enter
nop
pop
mov
xchg
pop
filds
int3
pop
push
mov
mov
dec
loope
fsubl
repz
aad
mov
ficoml
loopne
xchg
gs
fsubp
cmp
push
test
dec
leave
in
pop
scas
pop
or
inc
in
inc
dec
ficomps
and
loopne
dec
mov
dec
push
mov
leave
into
xchg
pop
pop
mov
loopne
inc
loope
iret
out
aad
out
loop
movsb
orl
shlb
add
testl
dec
lret
inc
mov
jg
push
fcomip
xor
repnz
in
mov
and
push
dec
rcll
adc
loope
inc
addr16
pop
test
push
out
fcmovne
push
jge
fcoml
pop
jmp
imul
push
lret
push
gs
xchg
mov
outsb
lds
dec
lret
push
icebp
pop
enter
in
xchg
notb
clc
scas
subl
adc
mov
jp
inc
insb
and
cmp
mov
aam
mov
enter
fucom
pop
loope
inc
rorb
int
push
xchg
aad
movsl
mov
out
dec
les
lret
rcr
mov
out
dec
data16
cmp
pop
cmp
inc
dec
mov
add
dec
push
call
rcrb
data16
aaa
gs
lea
pop
pop
sbb
ljmp
push
dec
aaa
out
leave
xor
mov
fbstp
sahf
and
inc
arpl
int
test
inc
addb
push
out
push
pop
mov
lock
add
dec
or
or
jmp
push
push
rcrl
outsb
pop
lret
icebp
fsts
inc
mov
addr16
fldt
mov
adc
mov
out
dec
stc
addr16
push
jae
inc
mov
push
inc
dec
inc
push
adc
sub
lret
or
push
push
pop
sbb
inc
mov
or
aam
aad
mov
dec
pop
fisttpll
sub
fs
pop
inc
xchg
mov
fwait
lds
inc
push
sbb
mov
insb
xlat
jmp
int3
push
inc
add
jnp
stc
scas
js
sarb
adc
sbb
sbb
mov
lds
fisubrl
aam
lret
iret
aas
ja
out
xlat
popa
add
icebp
and
enter
mov
mov
leavew
fisubs
dec
cmpsl
cmpsb
mov
rolb
fmuls
arpl
xor
out
loopne
imul
inc
int3
sarb
or
dec
xchg
mov
jmp
pop
mov
ret
inc
lret
leave
data16
cltd
push
xor
jne
push
add
jno
cmp
xchg
inc
scas
idivb
xchg
aad
in
das
ficoms
aam
adc
or
jmp
shrl
or
inc
jno
imul
xchg
push
gs
out
js
mov
in
dec
rolb
mov
sahf
popf
fstp
mov
inc
arpl
iret
push
fsubrl
pop
rorb
aad
gs
enter
cmp
cli
sub
gs
test
jb
aad
lret
mov
cmp
addr16
sub
out
jno
jmp
push
pop
xchg
xor
adc
mov
and
dec
push
mov
lret
jnp
pop
pop
dec
imul
clc
aad
dec
leave
enter
inc
or
jb
jmp
jp
push
xor
fiadds
ror
xchg
lea
enter
pop
xchg
enter
lds
int
mov
stos
cltd
roll
sub
scas
dec
int3
imul
xchg
cmc
out
add
js
subb
loopne
push
mov
subl
lds
sub
sbb
xor
inc
pop
push
loopne
xor
inc
leave
insb
aad
imul
dec
enter
dec
xlat
xchg
mov
aam
mov
stos
in
jge
pop
jg
pop
push
xor
fidivs
pop
repnz
fxch
es
iret
ror
mov
jl
dec
pop
aam
sbb
jo
inc
dec
lods
popa
insb
out
dec
mov
pusha
fsubl
jns
cli
pop
insl
push
jl
ret
out
jp
pop
int3
leave
lock
fists
jno
loope
xlat
fldenv
dec
jle
fimull
or
xor
loopne
jbe
cld
pushf
inc
mov
sarl
idiv
push
fisubs
inc
push
enter
cli
xchg
xchg
add
dec
insb
push
mov
sbb
cwtl
test
push
dec
fnsave
aam
or
dec
lds
addr16
enter
sti
into
imul
inc
lds
push
pop
movsl
push
inc
pop
mov
out
incb
xlat
push
dec
fnsave
shll
iret
js
push
xlat
xchg
dec
mov
and
inc
fistpll
pusha
fadd
push
adc
jb
dec
cmpb
xchg
scas
daa
bound
fstpt
vsubsd
adc
cmp
push
adc
addr16
das
xchg
enter
gs
aad
in
pop
jmp
dec
dec
add
pusha
rcrb
push
outsb
int3
pop
xchg
cmp
mov
loopne
add
dec
addr16
movsl
rol
mov
mov
mov
fisubrs
out
sbb
xchg
ret
sbb
add
ficoml
bound
mov
push
jnp
mov
pop
sbb
icebp
mov
push
mov
add
dec
dec
int3
push
adc
mov
out
inc
scas
in
fcmovu
insb
imul
fldt
faddl
add
aad
push
or
test
enter
hlt
mov
mov
push
pusha
scas
adc
xor
mov
cmp
movsb
jae
jge
lret
jl
jg
pop
pop
push
cmc
push
push
xchg
xchg
mov
cmp
add
push
cmp
dec
aad
push
rcrl
shlb
je
push
in
jmp
nop
jg
push
lahf
cmpsb
add
jbe
dec
pop
and
cmp
out
aad
outsl
cli
stos
insb
cld
inc
sub
dec
adc
mov
fidivl
data16
negb
add
out
pop
or
jmp
pop
pop
mov
rcll
inc
add
mov
dec
shrb
insb
and
xor
bnd
lret
int
push
and
dec
mov
fcompl
into
mov
inc
inc
inc
leave
movsl
xchg
push
lds
fcmovnu
ret
inc
pop
or
add
pop
data16
imul
pusha
mov
inc
cs
mov
imul
pusha
xchg
rclb
popa
xchg
fistl
cld
and
jl
dec
sbbl
push
test
aam
js
push
sti
call
add
adc
pop
xchg
loope
push
pop
mov
xlat
int3
pop
frstor
xchg
movsb
xchg
lret
push
xchg
fisttpl
jge
aam
cmp
clc
ljmp
push
lahf
aas
rcl
pop
dec
enter
dec
imul
push
xor
dec
fsubs
mov
mov
pop
int3
dec
leave
in
jb
ret
fdivl
aad
push
aam
cmp
mov
fstp
mov
js
rorb
ror
lock
movsl
popa
adc
mov
outsb
pop
pop
and
lret
scas
aas
clc
push
mov
leave
in
aam
shll
dec
sub
or
fcomps
mov
lea
js
pop
ret
inc
gs
in
xchg
dec
leave
sbb
xchg
mov
or
push
push
push
dec
dec
movsl
es
call
cld
cmp
inc
sub
scas
stos
inc
jmp
in
icebp
bound
mov
xor
inc
dec
scas
test
insb
aad
rol
or
icebp
add
in
orb
push
pop
mov
xlat
cmpsb
not
clc
mov
cltd
ficompl
jp
jns
xchg
mov
mov
push
push
lock
push
pop
jge
inc
cmp
gs
xchg
inc
lret
jge
enter
pop
cld
xchg
sbb
dec
xchg
pop
add
out
inc
dec
push
push
push
push
test
pop
jmp
add
sub
in
insb
fnsave
aad
mov
pop
dec
hlt
pop
arpl
mov
rcr
xchg
in
rcll
into
out
sub
pop
fcmovnu
and
sub
or
pusha
cmp
rcr
jge
outsb
xchg
fs
mov
aad
push
gs
addr16
or
dec
out
jmp
movsl
imul
data16
in
test
ficoms
push
inc
aam
and
fsubr
addr16
mov
movb
sbb
loopne
fiaddl
pop
push
rcrb
push
xchg
rcrb
xorb
mov
jbe
addb
inc
fisubrs
push
add
pop
pop
push
or
jae
data16
inc
imul
dec
dec
pop
mov
fnstcw
fsts
lcall
inc
movsl
adc
dec
mov
cmp
mov
fbld
xchg
pop
and
pop
and
int3
ffree
stos
testb
lret
dec
jge
inc
ret
push
aam
pop
out
fcom
insl
imul
and
aad
jecxz
frstor
dec
cmc
dec
mov
push
cmpsl
pusha
sub
push
in
in
mov
sub
sbb
mov
cmp
int3
dec
add
jmp
loope
enter
pop
dec
lds
mov
fadd
into
movsl
add
mov
jg
lret
sbb
mov
or
fisttps
jg
pop
in
mov
push
jge
out
cmp
jp
insb
dec
jp
test
mov
dec
dec
add
pop
les
addr16
clc
call
jb
xchg
fs
idivl
jecxz
add
dec
inc
sbb
push
cmp
pop
fwait
repz
pusha
dec
enter
cltd
in
imul
filds
mov
push
fisubrl
divl
push
jmp
mov
ds
aam
pushf
out
orl
xchg
pop
jge
int
pop
shll
push
cltd
fisttps
sarb
into
xchg
lods
outsl
xchg
pop
inc
gs
cwtl
mov
adc
ljmp
pop
int
push
and
int3
xchg
sbb
out
fxch
in
gs
inc
test
push
fst
iretw
lds
into
xchg
sub
sbb
pop
push
call
lret
dec
xlat
sbb
aaa
jp
lret
fsubp
push
pop
call
dec
repz
sub
rol
cmp
mov
leave
mov
shll
addr16
dec
andb
les
movsb
and
pop
push
mov
gs
pop
pop
out
mov
inc
aaa
cltd
pusha
test
pop
aam
push
test
rcr
aaa
dec
xchg
push
hlt
imul
inc
pop
and
ss
mov
push
fisttpll
dec
fisttpll
pop
xor
pop
addr16
int
jae
mov
mov
das
enter
xlat
es
inc
lret
dec
dec
pusha
pop
test
adc
lcall
push
dec
popa
xlat
inc
mov
dec
lret
mov
adc
mov
lods
pop
shrl
jp
flds
sbbb
into
lcall
lret
push
adc
lods
pop
mov
addr16
inc
movl
mov
mov
dec
jecxz
ret
xor
jmp
mov
jmp
mov
jb
or
les
adc
push
mov
ss
jge
dec
leave
shlb
dec
adc
addl
test
aam
and
gs
dec
insb
xchg
cld
cmpsl
mov
shl
out
dec
push
fsub
dec
addr16
fcmovnbe
call
das
arpl
mov
pop
xlat
data16
in
jmp
int
int
xor
js
mov
dec
popa
int
loopne
fimull
iret
enter
test
fnsave
pop
mov
lret
lods
mov
jmp
daa
inc
dec
shl
in
dec
and
xchg
inc
arpl
fldenv
sahf
mov
push
test
imul
dec
outsb
push
insb
mov
fwait
xchg
lds
aad
xchg
mov
loopne
pop
inc
xchg
out
in
dec
fnsave
int3
mov
pop
imul
les
mov
in
fstps
loop
jmp
outsl
pop
leave
test
fiaddl
lret
fsub
push
push
mov
daa
rcrb
sub
mov
pop
fstl
test
fildl
aam
fucomp
pop
push
push
xchg
mov
sbb
xorb
xchg
lahf
xlat
pop
mov
inc
scas
add
mov
inc
loop
pop
cs
cmp
add
mov
push
fsubr
jg
pop
dec
and
fwait
dec
lds
jo
pop
mov
test
dec
pusha
in
push
and
das
aam
cmpsl
push
int3
or
idivb
fldenv
adc
loopne
xlat
int3
jmp
aad
jp
call
ficoml
js
pop
jmp
dec
ds
repnz
test
mov
rcrl
loop
xchg
or
dec
pop
addr16
push
into
inc
lds
add
mov
adc
aam
loopne
fbld
mov
lcall
addr16
pop
fnstenv
xor
in
jp
aad
inc
push
and
push
jmp
je
mov
and
mov
fcompl
inc
dec
mov
test
lods
fildl
pop
pushw
movsl
out
sub
lods
mov
push
and
inc
xchg
mov
dec
or
test
fcmovbe
leave
add
pop
pop
inc
popa
fs
jmp
loope
pusha
mov
dec
and
fucomp
andb
lret
and
adc
scas
ds
xor
int
jbe
testb
enter
out
int
mov
cmpsl
nop
pusha
cltd
mov
pop
int
dec
fstps
mov
push
mov
gs
sarb
out
xlat
jle
insb
pop
pop
pop
idivl
frstor
icebp
faddl
leave
std
out
cmp
dec
faddp
push
pop
out
cwtl
loopne
ret
rcrb
ljmp
addr16
mov
sbb
push
pop
pusha
leave
loope
into
pop
out
fiadds
dec
sub
iret
inc
insb
shlb
and
inc
push
fbstp
popa
loopne
xchg
ja
push
int
cmp
mov
push
pop
mov
pusha
imul
mov
insb
enter
pusha
or
pop
cmp
int3
dec
in
xlat
aad
ficompl
push
jp
fsubp
dec
jmp
xchg
xlat
or
into
push
inc
out
cmp
outsl
imul
pop
mov
fistpll
aad
dec
mov
pop
fdivrl
data16
inc
pop
out
mov
pop
addl
test
lea
fmull
iret
jl
add
push
dec
aad
mov
mov
or
dec
push
imul
mov
pop
mov
loopne
notb
scas
xor
mov
dec
testl
fnstsw
movsb
repz
imul
nop
cmp
mov
negl
push
decl
push
aam
jp
pushaw
lahf
inc
lret
cli
imul
xchg
pop
pop
xor
icebp
cmpsb
push
mov
iret
lds
ret
push
add
pop
iret
pop
dec
gs
divb
or
push
push
rclb
aaa
sub
sbb
fsubr
or
cli
push
aam
loopne
pop
nop
cli
add
rolb
inc
enter
mov
subl
cwtl
mov
out
jb
iret
rorl
imul
jmp
cmp
mov
call
xchg
dec
aad
roll
fcmovb
adc
int
shrb
std
fistpl
rol
aad
shl
out
or
rorb
imul
int
jge
out
test
fistps
mov
push
lret
mov
pop
jge
pop
lods
add
fstpl
out
sub
ljmp
jl
cmp
sub
daa
dec
mov
cltd
out
ljmp
push
dec
in
std
sub
push
inc
xor
lret
testb
movsb
fcompl
mov
jmp
repnz
fsubrp
jmp
faddl
scas
xrelease
int
call
pusha
jnp
xlat
data16
rcr
inc
add
push
jg
add
jae
push
addl
xchg
loopne
inc
dec
push
sti
pop
shl
mov
inc
dec
int3
popf
test
dec
lret
mov
es
and
dec
xchg
jne
jmp
and
outsb
add
fsub
inc
push
mov
push
push
jae
out
and
ljmp
or
dec
inc
imul
lods
cmp
fisubs
gs
fdivs
dec
push
dec
sub
dec
adc
enter
xlat
aad
cmp
jb
test
ja
dec
int
inc
in
pop
pop
daa
insl
push
dec
in
cld
aaa
pop
in
nopl
out
lock
rcrl
rorb
push
xor
adc
add
mull
fxch
sub
mov
cmpsl
mov
enter
dec
in
cli
in
pop
jmp
mov
jge
pop
aas
pop
insb
test
icebp
jl
inc
jp
dec
fcoml
cmp
dec
push
mov
dec
pop
xlat
lods
jle
popa
fistpll
jp
sbb
mov
cmp
dec
adc
lcall
push
cmp
shll
enter
std
or
jmp
pop
xchg
lret
mov
jl
pop
fldl
jge
ss
lret
xchg
flds
jge
out
dec
mov
fsin
sbb
push
mov
int
jmp
flds
enter
dec
movsl
jmp
aam
movsb
push
int
dec
dec
push
out
mov
nop
dec
aaa
pop
les
lret
lods
shrb
int
pop
sub
lods
sub
rcll
pop
dec
clc
mov
pop
inc
es
gs
cmp
lahf
cltd
inc
scas
mov
fs
add
xlat
cs
scas
mov
xlat
movsl
test
xchg
push
loopne
cmp
scas
jl
test
dec
sbb
mov
call
fcmovu
stos
mov
inc
mov
fdivs
mov
inc
inc
insb
aad
adc
iret
or
adc
inc
xchg
loopne
cwtl
jl
into
rolb
test
push
data16
aam
ja
and
xchg
loopne
xchg
pop
xor
mov
push
dec
xor
pop
xlat
fildl
test
fstpl
mov
por
dec
ds
inc
aam
popf
xrelease
fcoml
repnz
mov
fildll
int
xor
pop
inc
aad
push
mov
pop
pop
add
negb
push
push
call
rclb
push
sbb
cmp
leave
push
out
sub
mov
fildll
andl
dec
xchg
xor
push
movsl
in
testl
bound
inc
or
push
sbb
mov
leave
aad
inc
js
xlat
pop
shlb
pop
pusha
pop
inc
push
addr16
inc
adc
dec
imul
insb
pop
imul
and
lds
aam
ret
push
lret
lock
icebp
jp
les
dec
pop
fiaddl
movsl
sbb
add
dec
aam
fcmovne
push
dec
pop
dec
ds
pop
das
xchg
pop
add
fldt
loopne
out
movsl
lret
sbbb
aad
sbb
fwait
push
pop
push
pop
dec
lds
aad
ljmp
lds
bound
loop
lcall
in
dec
push
inc
shl
adc
mov
adc
dec
fists
inc
push
enter
pop
jmp
out
fsub
out
enter
out
push
pusha
scas
in
iret
sbbb
pop
pop
push
repz
push
inc
dec
jno
pop
into
cmp
out
jb
fcomps
mov
pop
iret
loopne
xchg
aad
sarb
fisttpll
icebp
lods
mov
pop
push
stos
and
lret
orl
mov
push
fidivs
leave
int3
fcos
out
aad
movsb
cli
jp
cmpsl
scas
fs
xor
pop
outsl
ret
push
jecxz
dec
dec
xchg
loopne
movsl
or
pop
mov
in
cli
xchg
dec
sub
pop
dec
or
lds
push
push
mov
cli
pop
leave
out
test
dec
dec
lret
dec
push
stos
adc
sahf
push
xchg
xlat
rcr
jge
dec
push
sar
xor
dec
call
sbb
mov
int
fiaddl
addr16
or
dec
pop
repnz
xor
inc
shl
rcll
int
rcl
jge
adcb
or
xor
pop
lods
aam
and
pop
pop
inc
push
mov
push
call
fistl
gs
sbb
in
into
xor
call
lret
cwtl
push
jle
loopne
dec
lret
push
in
push
leave
push
lea
loop
fcmovb
fstpl
inc
mov
and
fnstenv
arpl
imul
imul
inc
rcr
dec
sub
int3
pop
xchg
jp
fcomps
xor
mov
push
iret
lcall
pushf
dec
jge
xchg
lds
lods
jnp
shl
xchg
pop
push
call
jae
fcmovu
out
psubd
loopne
push
push
fsubs
lahf
dec
xchg
dec
int3
fld
loopne
push
xchg
fcompl
ret
iret
fcmovne
sti
jge
fsubs
adc
pop
dec
jae
iret
pop
sti
retw
pop
int
repnz
int3
pop
ror
dec
push
pop
push
dec
loopne
lret
jb
xchg
dec
jmp
aad
fiaddl
xlat
inc
data16
fmul
out
jmp
dec
loope
xchg
add
fbstp
loope
fildl
imul
push
repz
mov
push
dec
xchg
lahf
dec
fadd
mov
mov
push
outsl
enter
iret
push
fchs
pop
push
dec
add
out
enter
dec
cld
gs
push
fsubl
sbbl
pop
rorb
scas
rorb
aas
sbb
sar
pop
or
jno
inc
fnstcw
aam
pop
shll
out
dec
and
cwtl
roll
dec
pop
ss
cli
xchg
push
dec
jo
push
pusha
pop
nop
push
fldl
inc
fstps
pop
xor
call
cld
pop
pop
pop
add
pop
fcoml
push
push
xchg
lds
movsl
xchg
or
loop
adc
call
leave
pop
imulb
sub
adc
dec
into
ss
leave
jge
pop
add
int
fcompl
lret
lret
pop
push
and
inc
jle
pop
dec
mov
repz
pop
out
addr16
clc
push
dec
inc
pop
xor
mov
push
add
rcl
pop
mov
cli
jmp
add
pop
push
pop
loopne
add
and
ror
inc
sahf
push
testl
popf
lret
aad
xchg
aas
push
jle
iret
sub
xor
sar
xlat
pop
or
pop
fdivrs
xor
out
imul
xchg
and
rcrl
int3
mov
push
push
in
xchg
lds
pop
lods
std
inc
test
xchg
mov
xchg
in
roll
pop
imull
sbb
pop
xlat
rol
test
fldl
sub
push
or
rclb
les
addr16
aad
inc
jmp
decl
xchg
int3
iret
fstl
stos
movsb
dec
dec
les
pop
js
iret
push
cmc
cmpsb
decb
aad
jb
fcmovb
inc
frstpm(287
out
fxch
out
test
repz
loope
dec
out
addr16
loopne
fcoms
enter
test
xchg
mov
mov
loopne
jl
lds
cmp
adc
popa
dec
shr
aad
xor
jmp
dec
fisttpll
and
dec
sti
out
icebp
rclb
dec
dec
loopne
mov
loopne
loope
push
add
mov
pop
mov
push
out
aad
push
pushf
bnd
jg
fisubs
pop
pop
jge
mov
shlb
lds
sub
insb
pop
pusha
mov
gs
mov
mov
xchg
inc
pop
aaa
aad
test
cmp
cmp
in
in
sub
pusha
sub
cmp
or
xlat
pop
dec
add
ret
arpl
std
out
mov
dec
adc
out
sub
out
jb
sbbb
fnstsw
data16
les
into
jmp
outsb
fimuls
add
pop
mov
int
push
les
int3
add
iret
pop
fiaddl
data16
test
jl
dec
xchg
dec
push
shrl
shrb
enter
cmp
pop
and
dec
orl
ffree
cltd
rclb
inc
popa
stos
pop
insb
pop
arpl
pop
dec
jno
push
jno
test
cmp
and
xchg
and
pop
sbb
loopne
push
dec
aad
xchg
out
filds
ss
xlat
clc
rorb
pop
jne
mov
jno
pop
clc
mov
pop
dec
xlat
jbe
pop
cli
xchg
loop
enter
or
aas
xchg
jl
pop
std
nop
mov
jge
popa
add
xlat
in
movsl
dec
add
movsl
fwait
jne
lret
fisubs
addr16
inc
lahf
mov
sbb
adc
je
pop
ficomps
push
mov
dec
imul
dec
add
movsb
arpl
insb
dec
call
int3
mov
dec
lret
add
fcmovnu
pop
int3
push
push
cmc
es
xlat
fadd
and
pop
in
gs
enter
ret
mov
xchg
cli
push
mov
cmp
fnstcw
jae
pusha
jbe
call
neg
lret
cs
sub
sub
pusha
or
into
jge
mov
fstp
or
mov
divl
int
jp
mov
enter
insl
faddl
data16
push
loop
lcall
push
rorb
push
jg
data16
movsl
jge
dec
aad
mov
test
add
data16
jl
jl
push
shl
retw
push
jle
pusha
pop
in
scas
push
mov
push
dec
pop
aam
push
mov
mov
fisttpll
dec
rclb
iret
pop
cli
add
aam
imul
fsubr
push
jecxz
arpl
rclb
jno
cmp
les
pop
push
jg
rcrl
pop
xlat
inc
insb
inc
out
and
mov
pop
dec
gs
mov
andb
pop
cmp
mov
in
xchg
pop
cli
push
lds
pop
fst
push
xor
and
fcoml
fisttps
mov
jmp
dec
test
pop
pusha
cltd
fdivs
xchg
fs
jmp
fsubs
popa
out
push
jno
loopne
jns
inc
loopne
add
pop
push
popa
xor
xchg
dec
movsl
or
mov
inc
cmc
inc
int3
jnp
rcl
pop
xchg
cmp
lret
push
fstpl
dec
movsl
mov
mov
jmp
mov
out
sarb
pusha
dec
add
dec
inc
sbbb
stc
cmpsb
mov
lock
fildll
clc
mov
jge
leave
xchg
inc
dec
stos
jge
movb
mov
mov
jne
push
jge
push
mov
lret
lret
loope
frstor
repz
in
push
lretw
addr16
inc
lret
outsl
inc
fistl
iret
push
mov
push
dec
pop
pop
jge
sarb
pop
push
push
pop
or
cmp
cmpsl
push
pop
hlt
aas
lret
pusha
ffree
shll
push
leave
cmpsb
mov
jl
pop
push
inc
jge
add
lret
in
pop
pop
fidivrs
stc
call
jp
push
dec
fnstsw
ds
push
jge
std
test
or
push
and
jmp
sbbl
insb
inc
adc
pop
xchg
dec
cs
ficoms
leave
push
add
and
mov
loope
dec
loopne
aaa
flds
pusha
lret
imul
push
dec
or
dec
dec
adc
adc
flds
pop
fsubs
int
imul
mov
or
xlat
loopne
popf
jl
push
mov
fnclex
xchg
lds
out
push
push
les
mov
movsl
pop
ljmp
movsl
scas
mov
fcmovnbe
dec
sahf
ljmp
mov
hlt
pop
call
iret
aad
adcl
add
and
out
dec
mov
dec
xchg
or
push
xor
jmp
mov
jp
fistl
loop
add
ffreep
and
push
or
pusha
or
loopne
pop
push
pop
fisttpll
push
xor
aas
repz
fisubl
jmp
fdivl
jmp
outsl
rcr
cld
inc
push
das
imul
mov
mov
push
fmul
pusha
fcmovne
dec
jle
dec
push
push
fildll
fnstsw
leave
lret
movb
out
inc
adc
test
mov
inc
or
fcompl
dec
mov
inc
fists
or
lret
hlt
push
push
push
call
nop
lods
loopne
aas
in
inc
ss
pop
negl
sub
sbb
mov
fldl
fildll
rol
call
test
js
pop
pop
jl
int3
aas
neg
xor
jno
push
dec
sarl
pop
es
or
push
imul
mov
mov
test
push
in
inc
sbbl
popa
fstps
lret
xor
cmp
lret
pop
inc
lret
shlb
xlat
push
inc
and
dec
jmp
insl
ret
aam
xchg
jne
jg
lret
dec
pop
cmpsb
add
pop
ffreep
push
loopne
cmp
dec
iret
xchg
and
addr16
or
push
xchg
mov
mov
rcr
inc
sbb
jmp
jnp
insb
int
mov
xor
push
cld
pop
mov
gs
mov
lea
adc
in
push
fistpll
mov
sahf
pushf
idivb
out
pop
test
leave
subl
imul
ret
cmp
data16
pusha
xor
lret
subl
xchg
pop
xchg
mov
ficompl
push
dec
lods
mov
sahf
sub
loopne
and
cmp
shll
pop
add
iret
fmul
jbe
dec
into
stos
notl
sub
imul
xlat
fs
je
dec
ficompl
lret
or
add
loopne
pop
inc
and
mov
addr16
mov
out
fstl
loopne
inc
add
jl
popa
lock
adc
pop
inc
xchg
aad
inc
dec
mov
mov
aam
lcall
imul
ds
xor
add
mov
fcomip
dec
gs
call
jmp
fsubr
mul
imulb
xchg
aaa
out
inc
cli
jmp
in
stos
jbe
dec
push
pop
xlat
enter
popa
mov
imul
add
push
pusha
or
leave
jmp
pop
mov
call
jle
pop
imul
mov
and
fstp
movsl
test
fsubrs
inc
orb
fwait
push
repnz
leave
rolb
loopne
push
cmc
pushf
push
roll
pop
rol
fcmovnu
fstp
jbe
pop
fdivrp
sub
pop
pop
push
shll
out
dec
int3
fsubs
in
mull
not
int
pop
and
pop
xlat
iret
subl
fisttps
out
inc
push
sbb
testb
dec
dec
aad
mov
enter
in
sbb
in
push
mov
push
jmp
popa
pop
sub
push
pop
cmpsb
out
imul
dec
test
jo
int3
cmp
push
add
and
pop
add
pushf
push
inc
popf
popf
pop
xlat
jle
lret
push
jb
stc
repnz
xor
lcall
in
jb
dec
xorl
pop
iret
psrad
fcoml
cmp
call
push
inc
lret
or
loopne
icebp
xchg
imul
mov
aad
inc
inc
inc
out
leave
fmull
aam
test
lret
and
jmp
test
or
and
lret
pop
pop
inc
fdivrl
ljmp
int
in
stos
fcmovbe
jge
dec
ret
fstpt
push
pop
outsl
fisubl
cmovnp
jbe
inc
xlat
ds
push
dec
add
shll
inc
int3
dec
scas
fidivrs
aad
jg
pop
fsubr
aam
stc
sbb
in
dec
or
push
push
out
testl
fs
js
dec
hlt
sar
add
xor
pop
icebp
dec
dec
mov
icebp
push
daa
rcrl
add
out
orb
pop
fs
jmp
outsl
dec
xchg
iret
out
pop
imul
jp
lds
xlat
shr
pusha
push
fcmovu
ret
movsl
jge
push
movsb
push
subl
icebp
out
lock
cmc
out
inc
ror
inc
call
fimull
dec
pop
fcmovne
mov
jecxz
push
out
shrb
pop
fisubs
pop
mov
popa
mov
out
pop
cmp
jl
nop
xchg
rcrl
push
dec
jne
popa
insb
test
test
aam
fbstp
mov
lret
jmp
lods
mov
aad
mov
dec
out
sahf
pushf
push
pusha
add
stos
mov
pushl
test
adc
cld
stc
int
clc
mov
ffree
push
lds
mov
lret
aaa
in
jbe
paddw
enter
jnp
jmp
out
xlat
in
in
jo
and
cmp
mov
fisubl
int
pop
int3
gs
insb
rcrb
sarl
in
popl
in
aad
and
mov
and
xchg
stos
inc
pop
dec
push
aas
call
jecxz
addr16
or
ja
movsl
stc
or
jo
dec
in
mov
data16
lret
mov
call
shll
push
neg
dec
dec
repnz
sbb
gs
mov
cld
dec
lret
sub
loopne
cld
das
jne
fimull
call
adc
xchg
push
fisttpll
push
pop
dec
imul
push
add
int3
jmp
mov
enter
jl
dec
lret
rcr
nop
or
push
aas
in
inc
dec
scas
xchg
in
les
daa
nop
or
out
data16
jns
int
in
xchg
cmp
popa
pop
xlat
mov
out
push
bound
inc
iret
push
mov
and
das
jp
leave
cs
push
pop
popf
in
push
jmp
mov
push
lea
je
jp
dec
dec
outsb
call
fneni(8087
push
push
out
imul
pop
out
das
or
jge
leave
cmp
push
add
addr16
push
jg
ficompl
imul
das
inc
mov
int3
lds
sub
idivl
out
pop
mov
fisubrs
push
mov
push
xlat
lahf
jmp
pop
jge
inc
call
shl
dec
fdecstp
xlat
gs
rcr
lret
dec
push
jmp
jmp
mulb
jle
pop
inc
xchg
pusha
dec
lds
dec
mov
add
fcmovbe
test
shlb
and
movsl
pop
inc
fcmovu
pusha
fsubl
cmp
in
dec
mov
jbe
jg
pop
int
rcrl
cltd
pop
lret
call
mov
add
dec
aad
mov
cld
push
aam
hlt
lds
adc
neg
adc
lret
lds
movsb
ret
call
dec
and
sub
dec
jmp
mov
mov
in
sub
test
or
inc
test
call
pop
enter
pop
lahf
inc
addr16
lods
ret
dec
fcmovbe
jl
rolb
push
jo
loope
inc
aad
jle
les
rolb
clc
js
neg
pop
clc
outsb
cli
scas
inc
leave
mov
adc
sbb
pop
cmp
fisubl
imul
outsl
and
pop
iret
fildll
fstpl
sbb
dec
ret
jge
frstor
int3
je
and
fstpt
mov
fildll
adc
fcomps
pop
sub
mov
push
pop
rcr
in
incb
cmp
push
int3
inc
movl
mov
add
pop
mov
les
pushf
push
leave
inc
iret
dec
inc
xchg
gs
inc
repnz
dec
sbb
inc
xchg
xchg
js
stos
cwtl
fldpi
lret
fsubs
orb
pop
push
popa
adc
inc
mov
pusha
mov
repz
cltd
leave
addr16
pop
fcoml
sub
inc
lock
pop
sub
inc
outsl
pop
ret
gs
insb
xlat
dec
xchg
mov
push
add
repnz
jmp
in
mov
aam
cli
dec
popa
and
int3
sbb
xlat
outsl
push
aam
mov
inc
aaa
fmulp
test
pop
pusha
rcrb
jmp
movsl
lcall
cmc
jnp
fcomp
sbb
rol
fsub
dec
xchg
ljmp
inc
mov
rolb
push
pop
icebp
xchg
dec
div
push
dec
stos
jmp
fabs
aas
dec
int3
mov
out
fmul
repz
dec
out
jp
jnp
adc
dec
lret
int3
test
pop
addr16
push
pop
mov
enter
mov
das
fsubrs
pop
lret
xchg
popf
xlat
pop
mov
popa
and
fwait
int
cli
dec
pop
call
xchg
daa
jl
decl
inc
and
mov
les
jl
ror
xlat
pop
ret
outsb
ficoms
sbb
test
enter
cmp
sbb
push
sub
inc
fs
cmp
push
out
dec
jp
pop
jmp
sti
pop
xchg
out
xchg
clc
call
push
arpl
loop
inc
aad
inc
stos
push
fistpl
xchg
icebp
ret
gs
fldenv
inc
or
cmp
mov
ror
out
out
push
jns
movb
ror
aas
fcmovnb
out
into
push
jmp
jge
out
push
inc
pop
jmp
aad
test
dec
mov
adc
mov
out
xor
pop
mov
das
pop
scas
ret
int3
loop
imul
in
xor
in
pusha
fs
mov
push
jle
fsub
mov
inc
jmp
dec
inc
dec
movsl
lahf
pop
pop
mov
dec
dec
dec
fcmovu
inc
stc
dec
pop
xchg
cmp
andl
imul
mov
popa
dec
in
and
test
cmp
cmp
nop
out
ljmp
push
pop
aam
movsl
mov
dec
xor
ljmp
sbb
and
push
out
loopne
jg
inc
fldenv
inc
punpckhdq
sub
dec
pop
jnp
lods
shrb
mov
imul
ljmp
mov
jbe
jge
inc
mov
aam
int
pusha
mov
push
jle
xor
cltd
ror
dec
adc
and
into
fcmovne
push
jecxz
inc
fs
inc
scas
pusha
or
xchg
sub
dec
ret
aaa
aad
xor
jle
pop
push
dec
pop
fcmovu
test
sbbl
pop
xchg
push
outsb
pushf
fistl
pop
add
dec
mov
lret
test
les
dec
arpl
add
aam
push
fisubl
frstor
jg
addr16
enter
xor
lods
pusha
push
out
bound
fistl
jl
leave
cmpsb
repz
fsubrs
leave
iret
add
push
enter
gs
xlat
mov
dec
jg
call
ljmp
les
push
inc
mov
inc
insb
mov
dec
pop
pop
add
jmp
lret
mov
pop
cmp
or
fnsave
jo
xchg
loop
xchg
pop
mov
outsl
sub
mov
sbb
jns
popa
mov
xchg
add
jo
cwtl
int
xchg
jo
fstl
data16
fnstsw
mov
add
mov
aad
push
jne
rcrb
test
and
push
outsl
jmp
push
xchg
clc
sub
xchg
push
sub
dec
sbb
sbbl
dec
imul
das
aam
cli
pop
imul
adc
call
insb
fmul
jg
lret
int3
addr16
push
mov
jb
fisttpll
xchg
test
push
sti
repnz
enter
lds
sub
popa
mov
lret
push
and
xchg
loopne
and
dec
aas
sbb
dec
mov
test
mov
out
gs
inc
mov
push
aam
mov
imul
inc
mov
loope
pop
iret
dec
fcomp
aad
pop
push
jmp
mov
test
enter
xlat
inc
cli
loopne
lds
mov
pop
out
pop
iret
int
imul
sti
pop
mov
dec
mov
enter
jmp
shlb
out
cmpb
int3
dec
cmp
cli
add
xor
push
add
mov
push
mov
jp
pop
add
jmp
jp
dec
aad
insb
call
enter
out
lahf
sahf
jae
push
jl
frstor
test
pusha
adc
dec
ljmp
jmp
push
ror
jmp
inc
aad
inc
test
fdivl
test
xchg
ss
or
lret
in
push
aam
stos
pop
ret
rorl
pop
fcomps
dec
adc
dec
call
push
andl
dec
inc
sbb
enter
icebp
out
rorb
inc
add
fcompl
dec
pop
out
xchg
orl
pop
popf
push
inc
or
or
shl
test
popa
pop
sbb
mov
imul
in
xor
fists
out
inc
fisubl
repnz
notl
pop
leavew
inc
ror
mov
movsl
xchg
xor
dec
or
or
int
into
pop
loop
imul
cli
push
out
aam
push
iret
lds
lret
inc
mov
cmp
int3
es
sub
pop
jle
lret
or
dec
dec
cmp
ljmp
popa
stos
push
mov
int3
sbb
call
out
jmp
js
fcmove
fmuls
pop
push
bound
mov
test
aad
jmp
out
sbb
shr
sub
and
pop
jmp
pop
popa
insb
pop
pop
or
lods
dec
or
and
add
fucom
add
dec
dec
fisubrl
inc
lea
popf
aam
nop
dec
outsl
jmp
jecxz
clc
insb
stos
jae
js
stos
icebp
dec
xchg
jg
dec
inc
in
push
dec
xorl
xlat
push
out
shlb
popa
ja
cltd
addr16
out
insb
fsubl
in
stos
pushf
dec
repz
inc
mov
out
int3
orb
fucomi
out
insl
cli
lret
iret
push
sub
imul
lahf
lods
into
pop
lahf
cmp
push
push
aad
pop
test
loopne
sbb
lretw
mov
aaa
mov
cmp
lds
rclb
xchg
and
mov
dec
mov
pop
mov
sbbl
addr16
mov
dec
and
fucomi
leave
sarb
or
cmp
das
test
out
out
fs
pushf
jle
fcmovnbe
gs
ds
les
pushf
xchg
jge
in
into
dec
iret
mov
fldt
les
fidivl
inc
mov
fisubrl
imul
fcoml
mov
leave
adc
push
inc
xchg
inc
push
loopne
jp
addr16
int
jmp
dec
push
loopne
leave
faddl
imul
push
lahf
dec
ds
negl
nop
inc
lret
inc
mov
flds
call
dec
fstl
pop
mov
call
nop
imul
jmp
data16
push
in
inc
pop
out
mov
pop
in
mov
push
pusha
notl
dec
push
pop
and
fucomi
dec
or
sti
push
leave
data16
xchg
clc
or
shl
push
ffree
int3
jb
push
dec
pop
aad
loope
lret
pop
and
cltd
shl
adcl
imul
mov
dec
add
lret
jmp
push
mov
mov
shlb
addr16
ret
pop
test
shlb
fidivl
pop
push
jge
jge
shl
out
fsubr
lods
mov
popa
shlb
mov
or
pop
pop
loop
leave
leave
out
pusha
loope
fisttpl
fsub
in
lret
or
jmp
jmp
pusha
ja
inc
pop
mov
ds
cmp
pop
lret
fldenv
out
push
push
iret
push
push
push
push
pop
icebp
shrb
dec
xlat
in
fmull
int
out
mov
inc
mov
ljmp
dec
scas
fcomps
push
int3
jb
inc
jge
push
mov
pop
popa
loopne
cmp
xchg
mov
dec
adc
sti
imul
leave
sub
dec
aas
and
lock
fxch
cli
ficompl
and
imul
aas
test
dec
jmp
xchg
push
xchg
and
incb
push
int3
inc
fdivl
pop
aam
mov
leave
pop
lods
fidivrl
subb
in
cmp
mov
xchg
pop
movsl
mov
in
mov
pop
ret
pop
push
jbe
add
int
inc
cwtl
aad
les
insb
push
subl
push
sarl
mov
fisttps
or
repnz
xor
and
dec
adc
imul
rcrb
mov
nop
add
popa
sbb
repz
insb
scas
dec
outsl
movl
test
pop
aad
and
rolb
movsb
jae
push
stos
inc
jmp
jmp
pop
fstps
adc
shrl
dec
xor
pop
imul
fsubs
lahf
iret
push
aam
jecxz
int3
fcmovnbe
dec
or
lahf
addb
dec
int
icebp
xorps
scas
out
inc
ret
out
push
jg
dec
pop
cltd
mov
jmp
push
inc
xchg
inc
dec
push
jge
cwtl
dec
les
push
ret
lods
addr16
fidivrs
int
inc
orb
cmpsl
sarl
iret
mov
cwtl
in
ljmp
push
inc
cmp
xlat
pusha
and
aam
aas
xchg
push
xchg
dec
add
mov
pusha
mov
test
push
xchg
in
sbb
push
aad
mov
dec
imul
neg
imul
fbstp
xor
or
pop
iret
aad
popa
push
call
push
cld
adc
push
mov
movsl
cmp
add
xchg
pop
fcmovne
dec
cmc
test
repz
lret
cmp
scas
mov
testl
pop
dec
sub
popa
jle
enter
sbb
lods
dec
sub
addr16
test
insb
out
outsb
in
jle
lds
xchg
rcrl
mov
sbb
jmp
sbb
das
fstl
add
xlat
stc
push
cmp
mov
testb
push
cmc
rcr
iret
loop
out
insb
call
pop
inc
lret
or
into
vpmaxub
int
mov
mov
out
push
mov
sub
xchg
lea
data16
in
mov
fdivs
pop
cmpsl
jge
jbe
enter
xchg
stos
loope
fcmovbe
roll
push
ffreep
dec
push
xor
adc
imul
in
je
iret
aad
push
lds
gs
cmp
sbbl
in
fiadds
insb
push
lods
les
jo
xlat
leave
inc
inc
lea
adc
insb
and
adc
ficomps
fwait
add
imul
addr16
push
sti
dec
iret
inc
fldenv
fcmovne
repnz
pop
dec
pop
push
popf
push
sub
xor
les
xchg
mov
mov
test
add
nop
mov
add
xor
out
xor
pop
xchg
test
pop
mov
out
les
lds
dec
pusha
mov
mov
scas
iret
out
lret
movsb
sub
xlat
gs
icebp
push
dec
inc
pop
jmp
aam
je
mov
mov
sti
enter
gs
int
int3
loope
lds
xchg
insb
mov
xlat
pop
aad
arpl
roll
fistpll
lds
clc
xor
and
inc
pusha
pop
pop
pop
pushaw
test
jge
fists
fsubl
xchg
lret
enter
rcll
movsl
sti
lret
adc
jecxz
jb
lret
call
int3
push
subl
or
xor
fisttps
and
int
test
les
pop
jno
push
fs
fisttpll
gs
in
mov
adc
inc
xlat
pop
inc
add
imul
mov
inc
mul
jno
leave
xchg
push
call
arpl
push
pop
mov
mov
jbe
push
lret
loope
fcmovu
iret
sub
std
negb
mov
mov
dec
les
xchg
fcompl
int
fbld
ret
dec
scas
mov
frstpm(287
cmpsb
jmp
mov
cwtl
and
stos
and
push
add
and
movsl
mov
in
mov
pop
fs
jnp
push
out
lret
das
push
gs
out
jecxz
inc
pop
add
icebp
test
out
push
sbb
mov
addr16
fldcw
ljmp
aad
xor
mov
shll
lret
loopne
push
dec
loop
adc
fcom
push
mov
push
ds
push
pop
popa
xchg
or
pop
ret
push
out
and
inc
aad
mov
mov
call
ds
cld
pop
movsl
je
xchg
fmulp
cmpb
mov
addb
icebp
fldenv
mov
andb
jp
fucom
dec
mov
inc
enter
loope
in
jo
stos
das
gs
pop
imul
fucomp
pop
sti
in
push
mov
out
iret
inc
adc
push
int3
adc
roll
pop
dec
out
mov
adc
pop
jbe
mull
jp
cmp
test
mov
dec
test
dec
movsb
xlat
mov
lods
aaa
cmp
jge
aad
shl
in
inc
test
inc
inc
out
fmul
js
lds
sbb
mov
aas
sbb
xchg
jb
out
mov
jns
fwait
rcrb
or
fisttpll
inc
pop
out
lahf
rolb
insb
dec
add
mov
ret
jmp
arpl
popa
inc
test
daa
mov
inc
repz
and
notb
rorb
leave
stos
sbb
fnstcw
pop
outsb
xlat
mov
lahf
dec
movsb
lahf
ret
jo
nop
pusha
mov
int3
lahf
stc
inc
and
aad
je
sub
fldenv
out
xor
xor
jg
sbb
enter
insb
dec
out
dec
mov
rcrl
dec
dec
js
iret
dec
jge
pop
rcll
les
jge
jnp
cltd
lea
test
aad
fidivs
mov
fsubrs
out
inc
nop
fmul
loope
lret
pusha
test
les
rcl
lds
push
js
stos
push
loopne
sbb
xchg
stos
in
sub
int
pusha
mov
shrl
and
mov
fisubrs
cmpsl
mov
xchg
test
aam
inc
out
dec
sbb
dec
lret
loopne
imul
rcl
inc
mov
int
imul
enter
push
xchg
or
enter
aaa
nop
mov
imul
fcomp
leave
test
dec
fcmovnu
push
out
dec
xchg
in
lods
pop
jecxz
inc
inc
fdiv
aam
out
mov
out
inc
ss
pop
lods
stos
jl
push
scas
jp
ds
cmp
pop
fmul
test
vpunpcklwd
mov
push
dec
inc
pop
test
dec
out
leave
rclb
repnz
pop
lods
clc
subb
add
sti
inc
pop
mov
arpl
loopne
pop
mov
leave
pop
into
enter
test
loop
int3
add
arpl
jmp
add
xchg
test
mov
add
add
dec
dec
inc
mov
push
pcmpgtd
mov
xor
vminpd
shlb
das
mov
xor
fcmovnbe
cltd
jl
imul
pop
leave
push
pop
mov
stos
fsubr
mov
mov
inc
or
fldcw
xor
xlat
cwtl
xchg
jp
subl
adc
lcall
stc
insb
jge
gs
push
scas
sub
gs
push
pop
enter
mov
test
dec
pushf
adc
dec
pop
mov
gs
js
aas
out
cli
inc
aad
inc
add
fsubrs
pop
jmp
test
negl
mov
into
dec
xchg
flds
push
nop
data16
mov
in
clc
dec
jge
push
add
lds
and
pop
lret
pop
and
lods
push
adc
jae
dec
or
lods
loop
sub
xchg
pop
jg
iret
pop
mov
jle
fmul
dec
aam
sbb
scas
ret
sub
lret
mov
addl
pop
movl
add
or
mov
std
push
dec
mov
mov
or
testl
fmuls
leave
sbb
lds
ret
out
sbb
push
cmp
movl
pop
jmp
lahf
mov
in
test
dec
out
push
mov
daa
fidivrl
jb
fistl
in
pop
pop
mov
ret
out
in
mov
cs
in
ds
repnz
and
sub
jmp
ljmp
or
lods
dec
test
push
jno
pop
dec
push
xchg
sbb
movsb
mov
inc
dec
pop
lock
mov
mov
popa
dec
lret
ror
dec
in
addr16
dec
popf
out
pop
push
sbb
popa
xlat
pop
or
popa
add
mov
mov
iret
push
mov
dec
fdivl
enter
xchg
push
push
addl
lock
push
pop
xchg
in
mov
dec
jmp
fcmovb
andl
out
loop
fwait
push
pop
adc
scas
mov
outsb
jge
aad
test
inc
int3
push
and
and
fimull
add
addr16
leave
int
pop
out
lahf
ret
filds
stc
pop
popa
pop
xchg
mov
lret
xchg
mov
pop
jb
and
push
call
mov
pushf
out
mov
add
push
add
scas
dec
enter
stc
adc
add
xor
dec
mov
int
pop
xlat
ret
sbb
imul
push
and
rolb
dec
inc
jmp
lret
jmp
jl
inc
adc
iret
adc
and
addr16
fcmovu
jl
jmp
ret
gs
pop
aam
jl
aad
or
and
popa
or
aas
xchg
mov
bound
icebp
xchg
pusha
test
icebp
fmulp
mov
fisubs
out
push
stos
sub
adc
fnstenv
vandnps
add
mov
into
aad
mov
mov
push
pop
repz
inc
sub
dec
sub
negl
popa
mov
mov
leave
imul
sub
jge
inc
rolb
add
push
lret
xlat
int3
test
aam
fidivrl
ljmp
fmuls
enter
and
mov
jge
gs
pop
mov
push
lret
lret
xor
les
scas
in
pop
imul
mov
fcmovu
mov
cmp
bound
shlb
lret
inc
adc
test
jle
int
out
addr16
les
push
shrl
lds
jl
push
cmp
pop
test
pop
popf
cli
inc
push
in
frstor
and
cli
ss
xchg
inc
dec
repnz
rclb
fcomps
js
pop
mov
adc
dec
icebp
scas
movsb
push
jg
into
fisubl
mov
sub
jp
pop
mov
int
push
loopne
inc
nop
stos
loope
enter
xlat
dec
jb
sbb
fnstcw
inc
mov
in
ja
xlat
mov
jg
lret
ja
sub
outsb
or
lret
aam
scas
aam
negb
roll
pusha
dec
xlat
push
fucomi
test
pop
in
dec
in
inc
fnstcw
pop
push
aam
inc
mov
lret
mov
icebp
sbb
pop
dec
inc
addl
push
push
jp
inc
cmp
nop
adc
push
fstpl
push
loopne
int3
dec
in
inc
out
jne,pt
cmp
lret
push
std
test
shrl
dec
mov
mov
mov
push
pusha
xchg
push
push
jnp
rcl
push
or
or
test
push
or
call
sti
clc
dec
rcll
popa
adc
lea
ffree
aad
add
imul
int
mov
int
popf
insb
pusha
jp
imul
push
mov
fldt
dec
mov
dec
nop
pop
inc
push
pop
push
pop
add
inc
loopne
pop
out
cltd
out
call
test
sub
stos
imul
push
jge
fisttpll
jnp
filds
push
in
cltd
fsubr
lret
repz
dec
pop
add
mov
xchg
mov
sbbl
pop
rcrb
dec
nop
cwtl
inc
shrl
shr
mov
mov
jbe
mul
repz
fcmovne
mov
pop
int
fucomi
dec
adcl
dec
xlat
inc
add
andl
dec
lods
lcall
pop
dec
cltd
adc
loope
pop
dec
mov
dec
test
xlat
inc
inc
push
pop
xor
push
addr16
in
dec
pop
ret
pop
in
push
inc
mov
add
sub
mov
fldenv
mov
xlat
push
enter
add
jl
inc
jge
aas
jmp
out
ds
gs
loope
lret
addr16
or
cs
push
nop
imul
inc
shlb
cwtl
loopne
push
pusha
xor
stos
or
add
pop
push
dec
fs
insb
testl
div
add
pop
aaa
shll
adc
push
pop
fs
xchg
mov
out
dec
movsb
xchg
pop
dec
repnz
add
and
shrl
dec
add
dec
ds
imul
movsb
jecxz
fwait
daa
fildl
out
add
and
rcl
shlb
adcb
call
enter
cmp
arpl
fmuls
jecxz
popf
push
loope
addr16
mov
iret
inc
jp
int3
pop
aaa
jae
lea
mov
dec
pop
addr16
sub
ret
push
aam
imul
daa
cltd
inc
outsb
gs
xchg
push
jbe
sub
xor
clc
js
add
dec
push
push
push
add
pop
fsub
aad
dec
in
fcmovnbe
and
divb
insb
mov
mov
rcr
les
xchg
pop
sub
and
into
jge
push
cmp
aam
add
int3
push
fldt
cld
push
push
mov
fsubrl
into
cwtl
fcmovbe
mov
push
pop
mov
js
hlt
stc
fadds
inc
or
clc
push
jp
dec
dec
popa
xchg
dec
push
push
mov
and
daa
lret
xlat
pop
icebp
movsb
push
dec
jl
push
mov
popf
aad
ja
aad
jecxz
lret
lcall
lret
out
push
mov
push
sar
jle
ror
fcmovb
movsl
fucom
decl
push
fidivrs
pop
push
jmp
inc
fcmovb
add
shlb
dec
js
add
cmp
pop
pop
fisttpll
std
jecxz
js
pop
repz
mov
ljmp
test
aad
dec
pop
xchg
or
cmp
mov
insl
shr
dec
xor
clc
push
fiadds
movsb
popa
into
dec
pop
icebp
repnz
fstpl
pop
out
add
fdiv
imul
arpl
sbb
jae
imul
inc
cmp
push
jp
jmp
jecxz
imul
fstp
dec
pop
ficoms
adc
dec
sbb
push
repz
xor
fistpll
jmp
push
xor
ss
cli
rorl
inc
mov
clc
js
mov
ffreep
mov
int3
pop
mov
out
mov
ficoml
aam
xchg
push
pop
jle
into
rcr
loopne
push
cmpb
addr16
cli
les
das
jg
lret
aaa
movl
rorb
test
mov
fcmovne
fimull
stc
dec
pusha
in
int3
push
lret
jae
xchg
pop
stos
fcmovnu
insb
lret
popa
stos
out
pop
gs
dec
mov
lret
push
fadds
cmp
jmp
dec
in
jle
aam
fsubs
enter
push
pop
xchg
push
lret
test
push
xlat
fsubs
sbb
pusha
and
inc
dec
leave
mov
jbe
out
add
dec
iret
pusha
pop
inc
jb
insb
out
mov
jmp
clc
jp
xlat
aad
testl
xor
cwtl
enter
adc
fcomp
cmp
out
test
fimuls
dec
fcmovne
cmc
into
out
pop
out
gs
mov
adc
dec
push
mov
push
or
loopne
inc
loopne
fldenv
lret
popa
xor
mov
iret
xchg
xchg
in
xchg
test
lea
aad
into
int
shll
aad
jmp
push
gs
test
out
stc
loopne
loope
xor
or
dec
fs
nop
mov
jle
fisttps
pop
lahf
into
stc
and
ljmp
mov
fistl
enter
inc
ds
push
fldl
xlat
pop
fdivrs
sub
inc
cwtl
push
pop
dec
lods
rorl
fistpl
testl
dec
aam
shlb
add
cmc
lret
pop
mov
ficomps
dec
ljmp
leave
push
imul
icebp
loop
fistl
fs
cltd
and
pusha
pop
sarb
lds
faddl
jmp
popa
dec
call
shlb
jge
dec
jmp
push
mov
push
fidivs
pusha
int3
rcl
xor
jbe
data16
les
xor
push
mov
lret
int
jmp
pop
subb
or
jno
loopne
pop
adc
flds
fbstp
fld
mov
add
popa
int
cmp
jmp
imul
scas
push
bound
push
jmp
fistpl
pop
fdivrs
sarb
sahf
inc
fsubr
mov
lods
es
push
movsl
loop
dec
cmpsb
clc
cli
pop
out
js
jb
clc
lret
push
push
push
test
loope
pushaw
jbe
popa
fisubrl
xor
loop
push
pusha
jmp
xchg
lods
mov
add
fsts
int3
fbstp
inc
mov
pop
mov
add
fstpl
jg
dec
addr16
test
out
jl
push
adc
divb
mull
sub
jp
iret
pop
in
stos
in
addr16
and
in
push
imul
push
shlb
sbb
leave
scas
push
xor
cmp
mov
shrl
dec
push
and
fcmovnbe
imul
inc
movsb
fprem
dec
dec
fidivl
jl
dec
cmp
inc
jnp
call
mov
pop
pop
inc
inc
repz
fnop
or
mov
pop
mov
movsl
fstpl
pop
mov
mov
js
pop
int
dec
rol
mov
fiaddl
cmc
and
ret
dec
loop
out
jg
sarb
dec
in
push
push
dec
call
dec
pop
push
mov
je
mov
dec
int3
dec
shl
call
icebp
inc
push
ror
mov
jge
fdivrp
or
mov
lret
or
add
gs
pop
addr16
push
popa
test
into
leave
movsb
imull
movl
out
or
fs
in
cmp
push
dec
pushl
and
imul
inc
push
sti
iret
mov
lahf
pop
add
movsb
out
pushf
push
clc
mov
fcoml
push
rcll
into
lret
fcmovnbe
out
outsb
pop
add
aam
inc
xchg
push
dec
xchg
or
mov
lret
rorl
iret
call
pop
jmp
subb
cli
decl
call
fmull
inc
popf
pop
iret
test
icebp
clc
push
jl
insb
rolb
int
sub
in
repz
jle
push
push
fsubp
in
dec
add
mov
test
leave
mov
dec
out
les
fldl
lds
lahf
ljmp
inc
fistpl
push
fmul
jmp
add
add
leave
push
inc
dec
imul
pop
out
inc
shl
les
pop
push
fcompl
fmul
movsl
lahf
mov
aad
out
pop
jp
xchg
jmp
add
xlat
addr16
gs
pop
mov
imul
jmp
lret
pop
out
dec
in
arpl
fidivrl
lods
sub
adc
divl
add
jmp
adc
pusha
mov
mov
loopne
fsubr
enter
jge
jg
push
ds
pop
stos
sub
or
jb
push
dec
inc
jmp
clc
inc
dec
push
jmp
push
insb
rolb
int3
jl
pop
shll
addr16
mov
push
xlat
ret
dec
dec
into
mov
ficoms
sbb
ss
aas
and
in
mov
jg
in
mov
sbb
inc
out
and
es
sbb
lret
jl
movb
adc
inc
mov
fst
adc
pop
das
fildl
inc
pop
and
cwtl
jge
loop,pn
pop
cmpsl
add
inc
xlat
ficoml
xchg
mov
cmpsb
push
and
in
int3
aas
fucomip
pop
leave
and
pop
push
clc
vshufpd
push
add
xchg
js
pop
xchg
push
xchg
adc
mov
cld
sarl
dec
gs
jmp
ret
sti
dec
fistpl
filds
rcll
aas
sbb
fcmovnb
adc
fisttpll
xor
addl
dec
mov
push
pusha
scas
into
inc
bound
rcll
sarl
mov
cmp
les
test
aad
sbb
jecxz
pop
xor
insl
and
ret
das
jle
into
cmpsl
xlat
adc
decl
push
pop
add
dec
dec
dec
call
push
and
dec
dec
out
jle
popa
dec
pop
push
ffreep
pushf
push
jge
jge
jp
ror
pop
lret
mov
pop
push
sbb
mov
jmp
inc
or
push
mov
pop
add
push
fisubs
xor
popa
jl
xlat
cmp
enter
rcrb
loopne
aas
lret
stos
jne
out
push
add
mov
leave
or
xchg
into
push
adc
add
fists
addr16
xor
xlat
pop
rcr
out
aam
out
push
pop
pop
adc
stc
sti
mov
in
stos
jbe
dec
rorl
push
sbbb
iret
daa
lea
aaa
imul
in
push
faddl
mov
rol
and
push
popa
into
insb
pushf
cmp
test
dec
cmp
or
cmp
popa
pop
inc
rcrb
in
xlat
inc
dec
pop
les
and
out
into
push
jns
call
int3
ds
loopne
dec
jbe
test
dec
js
dec
push
int
cmpsl
arpl
out
insb
push
in
or
cmp
inc
cli
cmp
adc
fcmovne
jle
or
push
xor
fdivr
xlat
pop
call
test
fisttpl
stos
inc
cltd
jl
popa
mov
jge
sub
clc
enter
mov
or
es
movsl
orl
fcmovbe
aas
pop
aas
aad
test
cmp
imul
cmp
or
pop
movsl
xchg
ficompl
jb
daa
lds
orb
dec
fldenv
mov
cmp
aas
fdivrs
xchg
ret
xor
pop
dec
out
add
outsb
xchg
daa
dec
pop
dec
jmp
mov
loopne
fisttpl
lods
inc
rol
and
movsb
test
nop
fldenv
iret
pop
mov
fdiv
repz
in
inc
ja
inc
mov
pop
sbb
dec
in
xchg
sub
roll
enter
inc
sbb
mov
inc
cmp
fst
fbld
rolb
rorl
pop
or
or
jl
out
mov
js
aam
ret
dec
loopne
out
push
js
mov
int3
and
enter
xchg
rcl
std
push
push
push
add
push
xchg
dec
gs
dec
dec
ds
xlat
lds
jne
popa
inc
ror
or
loopne
ror
mov
push
push
pop
inc
in
push
int3
sbb
subb
rcr
inc
pop
dec
dec
jge
iret
inc
in
in
iret
mov
into
loop
push
scas
dec
sub
push
call
adcb
fxch
mov
es
js
cltd
dec
ficompl
mov
in
clc
loopne
xchg
lret
xchg
adc
dec
mov
les
xchg
pop
mov
pop
ljmp
ds
sbbb
mov
dec
pop
mov
fdivr
frstpm(287
pop
add
xchg
dec
pop
fistpll
shlb
cli
aam
push
movsb
adc
mov
dec
fstps
pop
push
push
adc
imul
push
aas
jae
jle
dec
jmp
int3
add
lret
pop
jmp
dec
int
loopne
dec
xlat
push
mov
repnz
stos
adc
mov
frstor
jmp
mov
pushf
xor
jmp
lds
pop
aas
loopne
inc
push
push
loopne
clc
stos
mov
in
stos
test
pop
or
iret
gs
fld1
jmp
pop
fsubrp
push
enter
jbe
gs
enter
stc
loopne
fisubrl
ret
shll
in
inc
mov
cmp
push
jmp
rcl
mov
inc
lds
sahf
xchg
mov
xchg
test
int3
cli
addr16
and
dec
pop
fstl
pop
xlat
fs
mov
or
pop
rclb
shrb
loopne
int
cwtl
ds
rorl
fst
test
push
int3
jae
cmp
push
data16
pop
leave
and
pop
outsb
loop
mov
pop
shl
pop
dec
mov
outsl
xlat
mov
jl
pop
stos
mov
nop
push
cmp
ds
sbb
pop
xlat
aaa
xchg
mov
leave
and
jmp
es
mov
jecxz
jl
insb
aad
mov
lret
jno
inc
fcmove
iret
mov
jmp
rcr
aad
popf
inc
xchg
push
pusha
loop
decl
popa
xlat
mov
mov
pop
lret
fidivrs
dec
mov
icebp
jp
inc
fcmovu
repnz
test
fwait
loopne
inc
addr16
pop
push
pop
jl
dec
fsubr
cli
mov
int3
dec
fcmovb
mov
mov
out
add
lret
ficompl
push
jmp
pop
push
lods
jp
pop
push
jg
lds
call
sbb
lret
pop
dec
mov
pop
test
push
cmc
out
lcall
icebp
in
push
mov
aad
and
gs
fistpll
movsl
int3
push
xchg
xlat
pop
loopnew
mov
imul
add
subb
cmp
jl
push
iret
shr
fs
pop
leave
adc
in
mov
dec
dec
jle
xlat
lret
xor
push
leave
add
push
scas
leave
test
insb
ljmp
popa
mov
movsb
fdiv
dec
pop
pop
ljmp
fbld
jle
adc
lds
fimull
adc
pop
xlat
push
aad
mov
pop
pop
rol
int
cs
sbb
enter
pushf
popa
f2xm1
jae
add
push
arpl
dec
mov
lock
pop
lds
aaa
into
pop
fmull
add
fisubrs
outsb
jmp
xchg
iret
and
mov
outsl
inc
call
xchg
std
loopne
inc
inc
push
jmp
ljmp
divl
push
cmc
cwtl
xchg
push
nop
fsubrl
dec
xchg
fdivr
pop
aam
mov
out
addr16
imul
and
pop
loopne
jecxz
int3
popa
fwait
adc
mov
aaa
jb
jp
jmp
test
dec
neg
pop
jnp
call
push
push
andl
gs
jecxz
pop
out
pop
fmulp
repz
imul
shlb
out
sarl
dec
push
pop
xor
mov
fadd
icebp
push
pop
jle
inc
dec
int
sbb
fnclex
jg
out
mov
cmpb
imul
ror
xlat
inc
push
fistpl
hlt
cmp
lahf
rcrb
xor
dec
leave
fst
fcoml
out
mov
fnstenv
lahf
pop
enter
jp
bound
xchg
enter
dec
test
sti
data16
test
mov
test
in
xchg
fldt
gs
jmp
xchg
aad
mov
leave
pop
sbb
cmpsl
sub
push
test
dec
mov
test
sarb
add
mov
out
lret
jmp
adc
fstpt
into
xlat
cwtl
xchg
dec
xchg
pop
cld
fistpl
bound
loope
lret
fdiv
pop
push
popa
fsub
xchg
scas
ds
sbb
jmp
pop
enter
int
nop
mov
push
fwait
dec
gs
aam
out
pop
jge
dec
jp
orb
xchg
pop
les
lret
and
inc
psubsw
mov
mov
push
faddp
pusha
xchg
pop
enter
ss
cmp
push
add
inc
out
int
pop
addr16
inc
loopne
cmp
jnp
scas
push
pop
or
icebp
jbe
cltd
cld
xchg
lret
pushf
mov
movsl
push
outsl
shlb
cmc
iret
ror
aam
push
test
push
push
icebp
mov
adc
pop
enter
aad
mov
add
rcrb
pop
jb
push
mov
fdivl
jl
dec
cltd
in
ljmp
out
add
les
iret
cli
push
aam
in
sbb
inc
adc
pop
and
add
push
jae
lret
push
imul
xor
int3
pop
lret
jp
dec
out
sub
inc
aad
aad
into
xor
jl
int3
dec
call
adc
inc
jmp
push
lds
and
out
cs
dec
gs
inc
dec
psubsw
or
cmp
jmp
clc
test
cmpsl
push
sbb
add
addr16
dec
cwtl
sbbl
mov
aam
sbb
cmpsl
mov
inc
les
inc
jne
addr16
pop
aam
pop
or
popa
mov
adc
jmp
push
addr16
lods
mov
pop
dec
dec
iret
shrb
xor
fmuls
lret
dec
shl
leave
add
fcoml
inc
insb
rcrb
fcmovbe
out
in
xadd
xchg
test
inc
push
mov
shlb
leave
and
call
sub
addr16
xchg
pop
push
mov
mov
jmp
sbbb
and
cmc
lret
fmulp
fcompl
roll
enter
push
mov
mov
dec
adc
lock
jmp
aas
ds
mov
jmp
dec
call
inc
xor
xchg
inc
adc
xchg
inc
fsubs
iret
pop
dec
int
stc
push
cli
inc
sbb
arpl
stc
fldt
aaa
mov
push
pop
mov
in
iret
add
and
push
movsl
and
jge
dec
rorb
ljmp
xlat
pop
pop
inc
nop
addr16
push
inc
in
loop
dec
fsub
or
enter
dec
cmp
lret
aaa
aad
or
imulb
mov
xlat
gs
out
in
sbb
add
insb
inc
jle
mov
pop
test
push
arpl
ret
das
fstp
fistpl
ss
fidivl
ret
fcoml
pop
mov
push
push
jle
leave
xor
sbb
popa
dec
fst
aad
out
imul
dec
dec
add
push
or
mov
dec
ljmp
push
enter
lcall
pop
pushf
adcl
pop
test
rclb
cltd
roll
push
cmpsb
bnd
inc
leave
test
lret
gs
js
int
adc
dec
mov
pop
fsts
shlb
dec
dec
movsl
adc
cmpsb
jge
push
decl
dec
mov
rorl
fucomi
aad
fsubr
je
mov
sbb
push
jge
pop
bound
mov
mov
add
mov
rol
xlat
push
dec
and
mov
cs
dec
xor
cmpsb
nop
lcall
out
fldt
adc
insl
in
fldt
mov
aaa
flds
mov
push
jmp
js
add
in
jl
dec
fsts
push
and
divl
pop
paddusw
subb
bound
jnp
mov
ss
mov
lahf
sbb
push
test
inc
aam
pop
cmpsl
in
in
fstl
inc
push
xchg
outsb
jmp
mov
xlat
out
scas
iret
and
sarb
mov
lock
insb
and
lret
outsb
icebp
and
into
std
mov
lock
mov
xchg
pop
stos
lock
movsl
loopne
lock
or
mov
rclb
pop
mov
call
and
aad
sarl
repz
and
mov
call
mov
mov
lahf
sbb
fistps
jno
lea
xor
lea
cmpsl
dec
cwtl
xor
xchg
and
cwtl
icebp
jmp
aaa
out
push
scas
dec
sub
xchg
mov
mov
lods
pop
scas
or
cs
sbb
mov
sub
das
lods
fdivs
scas
pop
mov
lods
das
loop
mov
aaa
lods
fsubrl
fimull
inc
les
push
dec
pusha
insl
xlat
fld
sahf
xor
mov
cmc
or
dec
sbb
xchg
fcomps
xchg
mov
sub
or
xchg
enter
mov
pop
out
ror
rclb
jmp
push
test
gs
cmp
addr16
lods
xor
mov
sbb
pop
xlat
mov
jp
push
psraw
addr16
add
pop
dec
dec
push
jne
imul
pop
or
and
add
mov
outsb
xchg
xchg
push
xchg
sbb
out
int
push
lret
js
rclb
jmp
inc
cli
adc
pop
push
popa
aam
or
es
in
pop
rclb
fcmove
cmp
or
push
pop
pusha
insb
in
lea
push
jge
iret
int3
leave
mov
and
fildl
out
pop
jmp
loop
imul
add
dec
out
dec
loopne
pop
sarl
int3
pop
nop
fisttpll
in
iret
arpl
enter
icebp
lret
inc
jne
shrl
pop
push
or
jmp
dec
add
pusha
pop
aam
pop
push
and
fstps
mov
les
int
cwtl
mov
adc
push
pusha
mov
arpl
dec
push
jecxz
into
push
sbb
pop
popa
xchg
decl
xlat
push
jbe
sub
dec
mov
dec
out
jge
iret
fadds
push
imul
xchg
push
push
push
imul
ds
dec
lds
sub
rcrl
or
fistps
out
pop
roll
pop
enter
cmp
mov
ss
lods
sbbb
pop
aam
loopne
rolb
loope
in
mov
aaa
xchg
arpl
out
call
dec
push
lods
fidivrl
pop
enter
iret
push
repz
repz
es
jnp
pusha
mov
inc
dec
movl
rol
loopne
cmp
adc
pop
sbb
sbb
and
pop
aam
fs
mov
xchg
pop
mov
mov
fisubs
dec
pop
leave
inc
movsb
inc
xchg
dec
push
out
out
mov
pop
enter
dec
add
pop
in
push
dec
lret
add
pop
dec
dec
pop
push
fsubrs
pop
sbbl
add
insb
loopne
ds
ss
adc
leave
icebp
call
push
les
jge
lret
mov
stc
in
popa
inc
adc
xchg
enter
jp
inc
iret
pop
frstor
enter
loopne
push
inc
cmp
popa
xor
ds
iret
in
shlb
dec
insb
mov
lret
push
aad
add
fmuls
pusha
sarb
jp
push
dec
xor
dec
inc
inc
pop
push
or
inc
sub
push
and
push
in
out
test
fcmovne
pushf
jge
lret
mov
into
dec
lds
inc
sbb
jb
pop
inc
in
jae
mov
or
aad
lret
pusha
pop
loopne
mov
xor
pop
lds
fsts
loope
pop
loopne
call
inc
dec
fdivrl
cmp
icebp
mov
push
loopne
sbbb
aam
int
bound
call
test
adcb
sti
test
sub
pop
xor
xchg
jp
pop
lods
imul
bnd
dec
fdivrl
mov
lds
adc
popa
and
mov
lret
push
icebp
int
mov
push
xchg
sbb
out
lea
aad
loopne
pop
insb
clc
dec
imul
dec
jbe
dec
push
mov
pop
out
aam
sbb
popf
sub
cmp
mov
dec
jge
into
push
test
iret
mov
xchg
dec
shl
negb
push
clc
clc
pop
add
dec
movb
cs
pusha
cmp
inc
scas
jp
in
fnstenv
dec
dec
enter
mov
pop
mov
push
ds
pop
nop
fildl
sbb
cmpsl
jge
add
fst
push
pop
jae
lds
jbe
inc
imul
jo
and
sub
ficomps
xor
pusha
cltd
push
adc
jge
ret
push
or
call
scas
xchg
pop
js
aas
mov
ret
jp
dec
push
and
jecxz
dec
pop
dec
pop
jbe
repz
ds
inc
shlb
movsl
push
dec
gs
push
jmp
sbbb
push
mov
aam
daa
jae
into
test
pop
je
cmp
push
fnsave
xchg
mov
push
dec
pop
push
inc
xor
dec
dec
aas
pop
sarb
popa
in
mov
mov
jge
dec
enter
orb
push
push
push
xchg
adc
inc
mov
push
inc
lds
int
dec
fnstenv
add
pop
dec
xlat
shlb
dec
fisubs
mov
enter
fiaddl
pop
lahf
fisubs
loope
fcmovne
call
hlt
into
dec
dec
aad
out
movsb
xchg
add
push
mov
cmpsl
call
aam
les
pop
out
out
sub
lret
fistps
dec
inc
inc
inc
pop
aad
xchg
pop
mov
int3
loop
pusha
popf
push
jge
jmp
push
mov
pop
addr16
aas
pop
cli
call
push
sti
lahf
mov
arpl
aad
imul
mov
push
add
int
push
fbstp
pop
in
jg
gs
movsb
shrb
aas
stos
int
push
shrb
inc
ficoml
test
mov
push
push
pop
insb
jae
jecxz
movsl
sub
sbb
test
and
fmulp
arpl
or
test
mov
rclb
or
push
fucom
dec
pop
out
dec
jbe
addb
or
and
pop
dec
addr16
popa
stc
cmp
inc
call
and
mov
nop
je
inc
inc
std
loope
cltd
inc
fsts
out
fimull
out
int
jle
inc
dec
lret
fisubl
dec
test
enter
call
jp
dec
pop
pop
loopne
fstl
popa
mov
pop
in
inc
fucomp
fisttpl
fnstsw
cmp
mov
repz
pop
fimull
inc
scas
iret
dec
jmp
sbb
push
out
inc
lcall
into
imul
out
xchg
mov
divl
fldenv
or
inc
cmp
dec
out
cmc
push
in
pop
in
imul
lret
dec
mov
pop
stos
sub
add
icebp
iret
pop
nop
jcxz
fcmovu
or
dec
leave
mov
test
dec
mov
mov
imul
xchg
iret
pusha
sub
push
fstpl
inc
push
pop
out
leave
sbb
mov
push
mov
fwait
push
insb
rolb
frstor
inc
mov
inc
push
lds
mov
inc
aad
pop
fnstsw
shll
xchg
fmul
ret
out
xchg
xlat
loopne
int
push
or
dec
pop
subw
out
dec
aam
push
jge
cmp
lret
dec
cmpsl
data16
jb
mov
and
ret
out
xchg
ja
aaa
outsb
addr16
loope
aad
push
pop
loop
xor
sbb
and
clc
push
enter
jb
roll
fisttpll
add
add
in
pop
push
imul
mov
mov
mov
push
push
pop
jae
mov
in
ffreep
test
mov
stc
pusha
cmc
dec
sbb
push
gs
sub
js
fcomp
jg
lret
dec
cmp
test
ror
inc
les
pop
mov
shl
lret
daa
mov
dec
mov
aam
js
push
ret
pop
pop
addr16
ret
lret
or
jmp
push
movsl
add
gs
js
adc
xlat
cli
mov
iret
mov
sub
push
fldcw
pop
xchg
xor
mov
test
and
pop
push
out
jge
jg
pop
sarl
push
js
into
pop
mulb
arpl
add
fstp
push
andnps
imul
enter
dec
fisubl
rcr
ds
dec
iret
xchg
xor
xchg
jae
pop
push
cld
push
ss
sbb
pop
push
stos
jg
xlat
iret
stc
and
shll
mov
mov
push
fidivrl
repz
out
add
xchg
pop
fcmovbe
push
sahf
popa
rcrb
push
fnsave
cld
add
fwait
js
popa
std
int
dec
inc
sbb
mov
out
pop
leave
push
dec
inc
test
hlt
fcmovu
mov
xor
pop
push
ficoms
adc
call
pop
jge
rcrb
in
mov
filds
fisubs
int3
enter
fistpll
pushl
aas
dec
add
fsubrl
aam
iret
push
rcr
lret
int3
pop
mull
arpl
out
les
add
rcll
jmp
leave
aam
inc
test
adc
rorl
idiv
aam
jne
repnz
aam
ret
push
scas
leave
mov
dec
mov
rorb
pusha
jecxz
imul
and
pusha
mov
mov
adc
in
jae
shrb
pop
into
cld
dec
enter
push
call
dec
push
dec
jecxz
dec
lods
incl
or
shlb
in
out
push
fstps
pusha
outsb
dec
rolb
gs
push
subl
imul
jns
loope
jmp
add
dec
fidivrl
outsb
push
mov
leave
mov
fmul
into
sarb
imul
dec
pop
push
mov
adc
enter
hlt
dec
or
fmuls
frstor
pop
cmp
fsub
rorl
jp
inc
addr16
test
pop
shrb
sbb
xchg
jae
push
dec
aam
pop
or
loop
in
cld
pop
shlb
ss
pop
jae
jmp
js
loopne
fstps
loope
jmp
ud1
loopne
testb
xlat
jl
dec
jmp
dec
aaa
adc
popa
fsub
dec
leave
push
pop
lods
popf
jmp
int3
ljmp
push
mov
out
jge
mov
pop
dec
pop
jnp
mov
xchg
push
das
xchg
jae
pop
out
mov
pop
in
cmpsl
divb
lock
xchg
push
pop
test
loopne
sbbl
popa
pop
aad
jnp
xlat
out
push
or
push
sub
int3
mov
xchg
sbb
hlt
dec
insb
pop
int3
loopne
and
shrb
dec
repnz
cmc
pusha
jecxz
out
lds
inc
xchg
loopne
out
xchg
and
iret
pop
add
adc
daa
fbld
mov
dec
aam
add
test
dec
jle
popa
pop
pusha
pop
cli
sbbl
dec
xlat
lods
add
pop
lret
xchg
push
fucom
xor
faddl
dec
dec
int3
push
pop
roll
xor
mov
in
push
sahf
cmp
push
dec
repnz
ss
jne
stos
jle
fsts
inc
sbb
out
xor
cli
pop
fdivr
dec
pop
dec
mov
ljmp
push
jne
pop
je
push
mov
int
cmp
xlat
aas
jp
int3
fists
xor
jno
sbb
imul
lods
arpl
lahf
pop
leave
add
pop
xlat
dec
dec
aam
lret
lea
push
movsl
shrl
into
xchg
repnz
fwait
jae
orl
loopne
add
dec
jb
outsb
aad
out
dec
int
inc
push
dec
mov
fcmovnbe
icebp
faddl
mov
mov
out
mov
pusha
push
sbb
inc
lds
or
dec
imul
stos
in
leave
ljmp
lock
fcompp
lcall
xlat
xor
test
int3
jb
movsb
jl
pop
add
out
dec
in
dec
adc
repz
test
cltd
mov
jmp
jmp
jle
pop
adc
scas
ds
fld
cvtps2pd
inc
orl
push
mov
dec
add
push
fstpl
fidivrs
cmp
fs
lret
test
sub
js
insb
or
imul
out
rcrb
inc
fmuls
lret
push
cmp
addr16
gs
imul
cmpl
movsl
jnp
sti
xchg
leave
movb
pop
xor
in
out
xlat
into
shlb
ljmp
daa
inc
scas
ficompl
int3
iret
dec
and
lea
pop
dec
shlb
nop
loop
push
push
ret
fsubr
adc
dec
mov
rolb
adc
sub
stos
addr16
xor
push
fistpl
pop
pop
and
cs
clc
jge
insb
inc
faddp
push
sub
in
inc
stos
leave
in
in
cli
push
dec
push
scas
dec
dec
add
adc
rorl
outsb
pusha
xchg
dec
gs
sub
inc
push
mov
dec
movsb
mov
test
flds
data16
mov
pop
out
bound
test
pop
leave
jmp
int3
dec
fsubrs
pop
mov
aad
call
or
les
punpcklbw
xchg
leave
push
fsubrl
dec
leave
mov
pop
push
cmp
jge
aad
dec
pop
cwtl
fnstcw
stos
and
mov
scas
pop
jae
fsub
test
pop
fidivrl
jg
push
stos
sbb
pop
pop
push
push
mov
adc
push
adc
outsl
jb
test
jmp
ffree
loop
int
pop
f2xm1
adc
fildll
and
adcb
inc
lret
imulb
jmp
dec
and
popa
xchg
enter
add
dec
js
jns
xor
pop
adc
pop
dec
xchg
int
mov
pop
push
loopne
loope
out
clc
imul
xchg
sub
sti
out
repnz
ljmp
repnz
gs
push
iret
push
mov
in
outsb
add
subl
adc
mov
dec
xlat
mov
jbe
mov
ss
jb
aam
add
cwtl
xor
xchg
jne
mov
test
mov
jae
shr
inc
leave
shrl
test
mov
into
jecxz
int3
dec
fstp
lcall
or
dec
test
cli
pop
popa
mov
lret
stc
in
test
imul
push
mov
jae
or
in
pop
adc
rcrl
jbe
pop
mov
std
sub
fisttpll
and
aaa
fldl
inc
fimull
or
gs
dec
loop
andb
insb
cltd
in
dec
aad
adc
dec
mov
lea
push
dec
fisttps
pop
dec
clc
pop
mov
jmp
rcr
stos
push
mov
imul
lods
insb
xlat
push
mov
mov
movsl
dec
ss
daa
mov
rcll
fsubl
dec
loopne
les
pop
fadds
arpl
fbstp
leave
pop
pop
out
sbb
loope
into
push
dec
aad
addr16
push
ss
inc
testb
aam
pop
push
test
add
aad
push
loopne
dec
call
out
dec
popl
xchg
dec
rcl
call
popf
add
inc
imul
aad
pop
gs
mov
dec
movsl
iret
mov
and
lret
shl
int
addr16
enter
push
sub
imul
sbb
push
mov
ljmp
dec
movsl
dec
xchg
mov
scas
out
jne
xchg
or
into
jno
push
mov
dec
inc
jmp
jp
dec
enter
mov
inc
dec
pop
lds
mov
popa
ds
pop
and
lret
movsl
fildl
or
insl
movsb
jge
mov
aad
gs
sbb
xor
or
inc
push
or
subb
sbb
out
aad
cmc
dec
pop
clc
dec
test
lret
fst
movb
jae
movsb
out
sub
dec
mov
inc
clc
push
push
imull
push
jmp
pop
js
js
push
dec
fsubrl
pusha
fstp
push
mulb
jns
mov
int
cmp
xlat
cli
add
fmull
int3
out
iret
mov
jmp
js
lret
imul
mov
outsb
std
mov
aaa
fildll
out
fisubrl
push
mov
cld
inc
out
cld
inc
gs
out
insb
inc
pusha
cwtl
std
je
cld
and
lret
xor
shr
int
pop
je
xlat
outsb
test
in
clc
subb
add
adc
imul
mov
jae
imul
dec
addr16
int3
dec
sbbb
xor
sub
lock
shlb
out
dec
mov
popa
ja
mov
psrld
dec
xlat
fsubl
xchg
dec
fistl
push
lret
add
push
push
movsl
subb
pop
push
fcmovnb
popa
js
faddp
mov
les
inc
lock
lret
sbb
dec
in
push
pop
int
sub
cltd
xchg
sbb
or
gs
out
push
dec
inc
xlat
aam
repz
pop
xchg
dec
enter
push
ds
call
jnp
ja
xchg
jmp
xchg
or
add
jnp
push
imul
sub
lods
push
scas
test
mov
shr
inc
fcmovnb
es
fldcw
or
lahf
sbb
gs
fldcw
and
fisttps
gs
inc
pop
mov
into
lods
js
ja
bnd
fcmovne
imul
repz
and
push
jne
jecxz
iret
daa
fisubrs
lods
movsb
int3
aad
pop
rorb
rolb
out
in
mov
mov
pop
jo
dec
mov
sub
aaa
fdiv
rclb
rorb
shlb
in
les
les
rcrb
mov
les
aaa
fcomps
fsubrs
dec
fadd
mov
fsubrs
fcoms
shl
mov
fmuls
in
push
shlb
pushf
in
add
shlb
rclb
mov
in
xchg
shlb
rcl
mov
sub
pop
adc
call
andl
sub
leave
xchg
imul
aam
inc
call
rorl
insb
dec
pop
lret
push
cmpsl
sub
lds
out
imul
or
movsb
std
movsb
shrb
jg
gs
adc
ror
fimuls
inc
mov
insb
fadds
aam
push
dec
push
pop
xchg
out
push
call
clc
gs
arpl
fbld
inc
mov
test
pop
pop
and
dec
lahf
pop
ret
dec
loope
jp
iret
push
jg
push
pop
orl
mov
ss
sub
cltd
mov
mov
pop
jp
or
mov
and
call
fs
dec
mov
cmp
xlat
fst
repz
imul
xor
pop
repnz
out
jae
fwait
call
loopne
cmp
arpl
inc
enter
inc
shr
and
lret
dec
lret
in
addr16
inc
fimull
repnz
xchg
push
rorb
inc
jge
popa
pop
pop
aad
xor
inc
rcl
rcr
jmp
push
pop
clc
iret
pop
les
fcmovnbe
pop
inc
into
inc
adc
jo
pop
leave
lea
dec
pop
dec
gs
pop
push
sbb
in
std
test
pop
iret
mov
add
frstor
inc
mov
fstpl
dec
aam
insb
pop
out
je
mov
and
pop
loopne
lods
pop
mov
lcall
inc
pop
pop
in
das
jb
mov
int3
pop
enter
aaa
aam
cli
inc
push
addr16
sbb
xchg
aas
dec
out
movsl
push
gs
out
push
loopne
fistl
add
imul
jge
sti
test
scas
rclb
adc
pop
loopne
test
xchg
dec
shlb
clc
push
push
mov
pop
xor
jae
imul
fs
sub
mov
pop
mov
int3
subl
fisttpll
add
inc
fstps
jmp
push
loopne
call
mov
pop
iret
int
pop
pop
fcmovnbe
push
leave
lock
in
popa
ljmp
pop
pop
sarl
push
imul
jecxz
inc
jg
mov
call
dec
xlat
out
or
imul
aad
fnstsw
fcmove
push
mov
push
callw
dec
inc
push
pop
ds
mov
lret
out
popa
shl
push
aam
mov
pop
dec
pusha
push
pop
int
lcall
jae
mov
ljmp
dec
dec
iret
aam
mov
stc
pop
pop
mov
ret
int
dec
push
inc
xorl
sbbl
push
jp
dec
icebp
int3
push
aam
xchg
gs
jo
dec
mov
pop
inc
int3
push
push
mov
cld
sti
dec
jmp
fmull
push
popa
divl
or
call
popa
dec
aam
fstpt
push
and
data16
aam
pop
dec
jb
into
xchg
sub
xchg
ds
mov
and
fld
dec
mov
push
rcrb
pop
pop
fmulp
cmpl
jno
icebp
mov
mov
dec
dec
and
data16
fistpl
inc
dec
filds
dec
lret
pop
out
loopne
sub
push
pop
test
les
pop
xchg
pop
mov
out
xor
mov
push
xchg
mov
ficoml
sub
repnz
or
int3
bound
pop
jno,pn
loopne
loop
cld
mov
iret
pop
fmul
int
pop
inc
pop
dec
jp
pop
inc
imul
imul
lods
dec
iret
push
test
push
dec
mov
mov
dec
fldcw
pusha
fst
stc
out
int3
jmp
rolb
pop
jmp
rorl
les
vaddsubps
out
shrl
sbb
sbb
jbe
arpl
dec
inc
stc
dec
pop
icebp
or
into
mov
push
fnstsw
out
xor
mov
movsb
jae
push
mov
pusha
fchs
add
jno
jmp
fsubrs
adc
mov
rorl
rorb
or
mov
jecxz
js
les
or
imull
into
enter
daa
inc
test
aad
loop
loopne
clc
lret
or
lcall
inc
ja
push
fildll
pusha
jmp
jmp
repz
in
inc
test
mov
pop
cltd
addr16
add
push
pusha
rcrl
repnz
iret
cmp
enter
fsubl
mov
nop
mov
jg
dec
movsl
lea
lret
lods
dec
jg
enter
inc
sub
shrw
leave
outsl
inc
jmp
mov
and
lds
aad
imul
push
jmp
aad
pop
xchg
mov
fucomp
adc
mov
pop
int3
movsb
out
out
in
insb
imul
lret
enter
aad
dec
sbbl
icebp
out
test
mov
idivb
push
push
mov
fists
jmp
cmc
dec
fdivs
inc
push
jp
dec
push
dec
pop
cmp
dec
pop
popa
rclb
dec
pop
or
mov
test
sbb
ficomps
cmpsb
out
shlb
inc
push
xchg
in
mov
fs
gs
xlat
clc
push
jle
push
mov
dec
aad
shl
sub
jecxz
xchg
stos
outsb
out
push
mov
notb
inc
xor
es
pop
add
leave
data16
cld
jecxz
xchg
jbe
jb
mov
gs
push
and
std
fcmovnu
push
adc
in
mov
lock
fcmovnu
xchg
fs
neg
int
test
pop
and
dec
decl
call
add
in
int
int3
push
dec
mov
test
loopne
into
mov
lods
pop
fdiv
pop
pop
imul
pusha
jge
sub
xchg
dec
addr16
inc
cmp
pop
das
iret
enter
jb
mov
cmp
inc
pusha
add
fsub
popa
call
jl
inc
push
lret
inc
push
shr
pop
into
mov
ds
pop
insb
jmp
jmp
data16
push
shll
pop
enter
shll
push
inc
add
fistl
inc
leave
mov
dec
rcrb
dec
push
lods
pop
mov
movsl
push
mov
jmp
in
aad
lret
testl
fistl
sbb
cmp
push
iret
xchg
push
push
pushf
icebp
aad
inc
leave
inc
inc
sbb
in
in
dec
jmp
push
fidivrs
jle
popaw
aam
gs
sbb
dec
dec
pop
inc
aad
lcall
pop
pop
push
into
in
mov
mov
fcomps
xor
sbb
imul
dec
inc
out
movsb
xlat
add
mov
pop
out
testl
pop
pop
dec
pop
test
les
call
out
push
ja
dec
push
iret
push
jmp
push
movl
int
or
lea
mov
mov
xor
cs
xchg
xlat
outsb
xchg
mov
xor
mov
xsaves
gs
cbtw
int3
test
fdivr
mov
pop
cwtl
leave
jge
dec
jp
sub
in
fidivrl
dec
rcrb
filds
and
in
or
pop
aam
arpl
sbb
and
push
fsubr
pop
addr16
fnstsw
int
push
enter
push
inc
and
cmp
popa
inc
mov
jmp
sub
out
push
scas
iret
mov
and
push
inc
mov
xor
pushf
clc
push
movb
xlat
int
push
pop
ret
loopne
ficoms
or
mov
out
pop
jle
aam
mov
add
adc
xor
loopne
adc
popa
xchg
adc
dec
leave
pop
movsb
xchg
mov
mov
jnp
xchg
push
aas
lock
mov
aad
in
dec
push
repnz
pop
inc
enter
dec
es
loopne
pop
rcrb
xor
mov
dec
dec
aam
lds
jle
out
or
arpl
add
stc
pop
call
data16
rorb
loope
fcom
clc
fisttpll
add
pop
in
mov
leave
dec
movsl
popl
insb
mov
enter
xchg
out
gs
sti
xlat
lret
shll
pusha
fdivl
aad
jge
lds
mov
out
pop
inc
xbegin
outsl
dec
iret
andl
xchg
mov
push
mov
fdiv
push
leave
add
push
mov
jl
out
inc
mov
aaa
aad
mov
daa
adc
pop
xchg
ror
rcl
enter
into
dec
call
rcr
xor
mov
js
stos
lret
cltd
sub
jmp
pop
pop
dec
in
dec
jmp
push
fmuls
fstl
push
pop
xchg
aam
popa
mov
jecxz
subl
push
out
add
fistps
and
sarb
sub
dec
lahf
and
pusha
xchg
push
es
mov
out
gs
stc
fidivs
fidivl
xchg
pop
icebp
mov
ljmp
lods
loop
push
roll
jp
addr16
enter
leave
jbe
aas
ljmp
enter
xchg
negl
add
inc
lret
pop
inc
and
mov
add
iret
fisubs
mov
jmp
repnz
testb
push
add
cmpsl
dec
lds
pusha
xlat
xor
sbb
fcoms
aad
fld
add
out
pop
fsubs
in
fld
aam
lahf
aaa
mov
inc
and
lret
jno
mov
mov
pop
test
mov
out
insb
ficomps
push
xor
dec
and
dec
imul
push
shlb
dec
gs
cmp
rcr
push
popa
cmpsb
fisttpll
mov
or
loope
dec
pop
test
fsubs
dec
dec
js
add
pop
out
loope
pop
inc
adcl
ficoms
jnp
mov
ja
mov
xor
fsubrs
stos
lret
lods
mov
jmp
cmp
xlat
pop
pop
shrl
push
jge
jg
addr16
loopne
decb
jmp
dec
pop
nop
or
xchg
dec
dec
leave
mov
data16
xchg
push
int3
xchg
fnstenv
in
inc
dec
cmp
pop
loopne
aad
int
scas
test
dec
dec
into
enter
inc
mov
mov
pop
gs
outsl
push
pop
sbb
inc
neg
jae
imul
pusha
and
cmp
jg
inc
dec
aam
int
push
xchg
push
repz
jp
dec
jge
mov
ffreep
inc
faddl
fldt
cld
stos
pop
xor
stos
or
loop
inc
dec
or
pop
xlat
push
loopne
imul
js,pt
jl
les
cmc
repnz
adcl
fyl2xp1
inc
lret
sbb
jge
jg
into
aas
ljmp
or
shll
push
leave
mov
pop
dec
lds
leave
stos
repnz
push
in
insb
push
pusha
dec
in
lds
rcrl
adc
sub
cmp
push
dec
filds
mov
push
nop
or
push
pop
decl
out
and
popa
push
inc
dec
inc
mov
out
dec
jge
iretw
leave
inc
mov
dec
pop
in
pop
or
dec
leave
cmpb
mov
pop
insb
loop
and
addr16
pop
daa
movsl
sbb
dec
enter
in
popf
mov
jne
gs
xor
dec
dec
push
inc
in
lret
inc
int
fs
pop
jmp
sbb
adc
rclb
fdivrl
out
leave
leave
mov
adc
xor
and
out
mov
add
test
dec
gs
pop
aam
inc
inc
pop
dec
nop
or
cmpsb
mov
les
add
fisubs
push
int
fnstsw
dec
pop
inc
and
jmp
xor
popf
out
and
ds
clc
fcmove
mov
lds
aad
or
inc
fmulp
pusha
dec
mov
push
fs
dec
inc
dec
sbbl
loopne
xchg
dec
push
dec
mov
into
mov
mov
jecxz
imul
pop
scas
leave
aad
push
test
leave
dec
jecxz
pop
mov
jecxz
jge
aas
aas
aam
xchg
out
fstl
fstpt
mulb
stos
dec
leave
movl
int
fimuls
dec
dec
icebp
fcmovb
out
shlb
jge
loopne
cmpb
shll
pop
data16
jl
pop
dec
sarb
cld
loopne
out
or
fcomp
cmp
enter
stos
pop
call
push
sub
in
mov
pop
fcmovnb
cmpsl
inc
mov
scas
in
gs
cwtl
jge
enter
jae
jmp
call
xchg
popa
pop
test
jg
les
and
push
xchg
xlat
mov
cmp
fldl
ret
movsl
and
pop
xchg
xor
ds
icebp
and
inc
rcrb
fidivs
aas
adc
and
inc
jg
fists
testl
fcmovu
xor
sub
cmc
fiadds
out
aam
pop
int
inc
and
fwait
out
adc
mov
lret
outsb
scas
dec
cltd
std
or
xchg
push
dec
push
repnz
pop
data16
clc
and
pop
push
and
jmp
out
push
xor
xor
sar
fadd
arpl
out
call
arpl
aad
inc
dec
mov
aaa
xchg
mov
mov
mov
dec
js
gs
cli
js
into
pop
leave
mov
js
and
mov
pop
in
test
fbstp
dec
or
inc
mov
pop
dec
cmp
and
shl
inc
and
dec
rcl
mov
shrb
add
jne
inc
nop
fadds
pop
insb
cltd
pop
mov
jne
rcr
jmp
mov
fists
inc
ror
aad
gs
add
insl
add
out
mov
les
dec
cmc
dec
inc
addr16
adc
jmp
stc
inc
jbe
pop
imul
dec
out
jge
call
and
ficoml
data16
mov
in
push
ret
lret
bound
addr16
imul
data16
pop
pop
cmp
inc
lret
push
loop
dec
ljmp
arpl
out
cmp
dec
push
push
pop
test
andl
test
fdiv
cmc
js
repnz
jmp
rcrl
dec
push
cmp
test
pop
inc
testb
hlt
or
and
loopne
dec
int
mov
jle
pusha
fstpl
pop
fidivrs
pop
insb
push
add
stos
nop
push
out
icebp
or
test
mov
push
pop
dec
icebp
lahf
dec
mov
xchg
in
outsb
aad
loop
push
jmp
dec
jae
push
test
rol
addr16
dec
add
dec
push
xchg
fadds
push
dec
fcmovnbe
mov
push
mov
decl
imul
dec
mov
inc
jb
adc
push
dec
fisttps
iret
fmuls
imul
xor
mov
mov
into
mov
movsl
popf
outsl
imul
pop
pop
dec
aad
dec
fbld
movsl
leave
inc
push
fimuls
daa
pop
cmp
pop
nop
mov
mov
je
insb
fstl
jmp
pop
jmp
in
ror
mov
cmp
dec
dec
jmp
les
daa
leave
pop
inc
push
push
jmp
fld
negl
fnsave
adc
inc
rcrl
dec
dec
mov
inc
xorl
mov
int3
mov
jge
iret
jge
shrl
lret
imul
pop
dec
mov
andb
int
push
dec
orb
dec
xor
fadd
jl
inc
cmp
mov
aam
cwtl
jmp
repz
iret
mov
jb
jp
pop
push
lods
jae
pop
in
dec
cmp
int
dec
loope
dec
lds
aas
mov
js
ror
mov
loopne
xchg
cmpsb
lds
outsl
lea
test
fmul
movsb
call
loopne
loope
gs
imul
mulb
ja
sub
or
mov
fwait
into
test
mov
faddp
inc
dec
inc
pop
ror
adc
loop
in
int3
jmp
jge
add
addr16
es
pop
js
jl
sti
rcll
inc
fistl
in
out
fcmovne
int3
jmp
outsl
xlat
cmp
repnz
sbb
daa
and
dec
enter
adc
xor
pop
pop
push
ret
data16
mov
xor
jbe
insb
negl
mov
insb
cltd
and
pop
dec
xor
inc
sub
jg
pusha
inc
pop
and
pop
push
enter
push
jl
iret
fucom
cli
jne
inc
inc
pop
int
lret
loopne
dec
mov
dec
push
pop
rclb
inc
inc
mov
enter
aad
dec
push
fs
push
push
insb
addr16
lahf
clc
push
stos
sub
jle
dec
adc
lds
leave
pop
dec
dec
push
lea
fstl
inc
andl
lea
and
and
adc
into
jmp
insb
jmp
fistpll
push
pop
add
dec
dec
dec
add
mov
push
cmp
pop
cmp
fsubrl
rcll
addr16
dec
add
xlat
sbb
popa
sbb
mov
pop
leave
mov
dec
fstps
push
lret
mov
add
xchg
jbe
add
dec
lret
dec
pop
aam
in
inc
mov
les
and
out
fstpl
out
or
leave
fbstp
or
mov
insl
and
lret
jmp
dec
xchg
xor
cld
xlat
push
fisubs
cli
jbe
push
pop
notb
sbb
inc
mov
xor
cltd
addl
push
dec
negb
gs
xor
add
enter
movsb
outsb
cmp
fldenv
pop
js
xlat
pusha
jl
dec
cmpb
xor
mov
in
fisubrl
jae
call
mov
xlat
mov
out
shl
xchg
lcall
aad
dec
push
or
xchg
lds
imul
aam
pop
and
jmp
inc
inc
adc
dec
movb
fstl
dec
push
test
int3
push
dec
scas
aas
cli
xorl
ss
xchg
fcmove
out
jl
push
outsl
push
mov
dec
jmp
push
lret
rorb
push
into
inc
loopne
ror
or
jl
lret
cli
out
push
popa
shl
int3
enter
inc
inc
in
mov
add
and
movsl
mov
movsl
addr16
out
pop
out
xlat
fsubp
loop
pusha
repnz
dec
pop
mov
daa
filds
call
jmp
pop
cmp
out
dec
mov
inc
inc
inc
inc
ret
mov
xor
dec
clc
fstps
or
out
fcoms
enter
jbe
inc
push
cli
aam
movsl
xchg
clc
int3
lret
jl
push
ret
xchg
mov
aad
xchg
sar
les
mov
mov
popw
ret
jge
les
cs
pop
pop
aas
in
pop
lea
or
jge
dec
lret
popa
fdivrs
dec
mov
push
push
ljmp
cs
test
clc
aam
enter
popa
dec
fcompp
jmp
into
jbe
insb
repz
ds
lret
inc
subl
inc
dec
ljmp
gs
pop
dec
add
into
ljmp
dec
aaa
add
dec
xchg
insb
rcrb
popw
icebp
cmp
pop
push
js
inc
enter
pop
in
imulb
and
aaa
mov
test
pop
data16
pushl
orl
push
push
int
lea
gs
dec
in
or
lret
mov
xchg
pop
mov
and
adc
lock
fnstsw
out
inc
leave
jbe
add
nop
mov
pop
push
mov
call
xlat
dec
inc
pop
insb
pop
ret
out
xchg
out
dec
in
pusha
xlat
out
stos
push
pop
dec
stc
push
pushf
fsts
aam
inc
decb
push
dec
mov
inc
push
call
push
mov
data16
pusha
enter
xor
lcall
int
ficoms
aad
loope
frstor
push
dec
shl
adc
push
fcoms
out
dec
push
dec
iret
out
push
xlat
dec
push
dec
pop
int3
push
mov
pop
sbb
dec
loop
outsl
fimuls
nop
je
mov
pusha
push
xchg
pusha
pop
dec
dec
faddp
ds
ds
jne
loopne
gs
jp
inc
lds
fsubs
les
dec
and
pop
jno
popa
xlat
addr16
inc
das
push
adc
dec
divb
jle
push
popa
rorb
pop
inc
out
xorl
sbb
movsl
fstp
jmp
adc
xor
aaa
movsl
cmp
push
jb
cwtl
les
out
push
and
loopne
mov
sbb
mov
out
pusha
aad
iret
fidivrl
dec
lret
test
fcmove
mov
xor
xchg
jle
fstps
test
or
lret
call
repz
cmp
leave
or
push
push
mov
mov
adc
cltd
imul
pop
into
dec
inc
pusha
lcall
fmul
pop
int
addr16
or
jmp
dec
aad
mov
mov
inc
in
lret
dec
vpcmpgtd
lods
dec
clc
xchg
pop
fidivrs
pop
push
pushl
xchg
cmp
rcll
pop
mov
mov
ds
pop
xlat
cltd
jmp
pushf
aad
pop
in
addr16
pop
push
sbbl
mov
ret
out
dec
inc
aam
data16
out
stc
ret
test
push
pop
dec
idivb
int
sub
icebp
aam
push
fildl
mov
test
pop
test
ljmp
xchg
js
xlat
in
inc
and
jle
iret
inc
fidivrl
lret
aas
stos
nop
call
xlat
push
inc
out
inc
push
movsl
jmp
mov
pop
dec
inc
mulb
add
fldl
and
test
or
lret
xor
iret
and
mov
lret
pusha
jle
dec
adc
sbb
rcl
out
rorb
jmp
imul
push
dec
les
pop
insb
movsl
dec
fst
aad
fisttpl
ret
mul
out
cli
mov
dec
scas
loopne
lods
add
jg
push
filds
les
jmpw
call
stos
or
insb
ficomps
jg
dec
pop
mov
pop
loopne
pusha
scas
mov
jle
jmp
and
push
pop
loop
pop
cmp
dec
lret
push
cli
jge
mov
aad
int
movsb
pop
push
loopne
xchg
lods
fisttps
fwait
inc
add
rcl
in
mov
insb
out
push
cli
ficompl
dec
insl
pop
jp
lret
fnstenv
add
testb
mov
adc
cmp
into
xor
inc
dec
push
sub
sub
push
jge
push
pop
jnp
roll
imul
scas
mov
dec
test
movsb
lea
test
imul
int
ss
mov
shl
pop
inc
popa
fldenv
push
out
push
lret
sbb
lahf
fisttpl
pop
test
jmp
push
pop
sbb
gs
xchg
add
inc
pop
test
ficoml
and
in
fldl
mov
rolb
pop
loopne
push
adc
lret
insb
dec
xchg
ret
fsub
rcl
push
call
sahf
or
mov
mov
int
sarb
insb
ss
push
in
push
pop
jge
out
inc
shll
dec
int
fistpll
rorl
pop
pop
ljmp
out
cld
icebp
movsl
dec
iret
inc
addr16
fs
dec
lds
jmp
ljmp
fmull
enter
mov
jge
out
fstl
loopne
popa
test
push
add
pop
insb
test
dec
sbb
jnp
pop
scas
icebp
ficomps
pop
lds
fsubrs
out
jp
push
test
mov
loopne
add
popa
inc
movsl
push
or
push
fstps
inc
shrb
jno
cmp
pop
sti
and
shrl
dec
iret
lret
mov
pop
adc
fiadds
add
iret
les
lret
dec
sub
and
adc
dec
sbb
push
insb
sub
mov
outsl
call
mov
pusha
fsubl
and
fsubs
push
dec
mov
inc
pop
mov
outsb
out
xchg
sbb
add
js
into
js
xchg
js
test
fildl
xlat
dec
fisubl
fistps
lods
push
push
enter
jecxz
push
cs
rorb
mov
jmp
pop
lret
insb
inc
push
xor
fiadds
jne
mov
cld
out
push
outsb
xchg
sub
xchg
dec
jg
int3
out
bound
or
sahf
ljmp
in
mov
test
in
xchg
push
jle
pop
push
push
or
mov
pop
add
sub
loopne
jnp
clc
push
jmp
jno
orb
loopne
or
outsl
fcomps
push
push
push
pop
dec
xchg
cltd
js
in
idiv
jge
push
rcr
fcoml
or
jl
push
sub
and
lock
mov
nop
xchg
push
outsl
inc
ret
dec
gs
int
dec
int3
push
push
inc
or
imul
lods
pop
xor
jge
dec
and
mov
cld
dec
fimull
out
dec
push
aaa
pop
js
js
js
int3
fdivrl
cmp
or
enter
setb
cmpsb
xlat
loopne
aad
jns
inc
mov
fldenv
sub
repz
push
push
push
xor
mov
call
int
sti
push
imul
aad
mov
add
dec
or
mov
rcrb
jno
fcoms
jle
pop
dec
aam
pushf
mov
pop
dec
fstpl
inc
subb
call
out
dec
inc
enter
dec
test
loopne
loope
aam
fucomi
cmp
iret
dec
and
pop
mov
test
fld
dec
mov
int
shlb
jge
enter
push
cmp
push
imul
enter
iret
xchg
loopne
inc
mov
subb
xlat
fsts
push
push
cmp
fcomp
adc
push
mov
xor
loopne
icebp
mov
pop
aad
push
xorb
pop
lret
les
dec
dec
shlb
pop
mov
jge
clc
dec
shrb
jbe
and
fisttpl
scas
lahf
pop
pop
test
xorl
mov
sbb
xchg
mov
jge
loopne
jecxz
jno
addl
inc
cwtl
rolb
and
sbb
sarb
les
aas
sub
ds
adc
push
pop
cmc
shll
dec
gs
jmp
call
inc
fimuls
fisttps
enter
pop
popa
rolb
popa
ret
jno
fdivl
and
in
jmp
into
fs
int3
iret
dec
cltd
xchg
push
ffree
mov
pop
aam
fld1
pop
ret
test
leave
mov
loop
imul
iret
leave
mov
test
dec
fcmovnu
mov
adc
xchg
push
fimull
mov
or
mov
pop
into
mov
test
push
push
sbb
testb
in
ljmp
push
frstor
xorb
lret
leave
inc
xlat
xlat
xor
pop
pop
dec
outsb
jmp
aam
mov
stos
dec
dec
test
cmp
addl
push
lock
test
into
js
push
popa
iret
inc
fcmove
lret
cmc
fisttpl
data16
popa
add
into
push
dec
aas
xchg
stos
cs
cwtl
int3
ljmp
lret
pop
data16
dec
fcmovnu
dec
mov
rolb
jmp
dec
or
out
clc
push
addr16
xchg
pop
jecxz
inc
mov
call
mov
dec
push
lret
aam
idivb
pop
cli
cmc
fiaddl
push
fidivs
dec
les
jl
out
rclb
pop
fldt
xor
shl
call
xor
loope
dec
push
iret
shl
cmp
push
sbb
rclb
fidivl
int
out
shrb
jp
sub
stc
push
fmull
lret
test
les
jbe
push
pop
sbb
scas
fiadds
mov
int
mov
dec
leave
test
inc
addr16
inc
and
sub
aas
push
ds
aad
pop
scas
filds
loopne
dec
les
push
and
leave
out
adc
leave
shrb
fsubrs
lret
jno
scas
mov
js
mov
int
and
cmpb
fildll
xchg
pusha
mov
mov
push
fimull
out
adc
xchg
adc
dec
mov
pop
inc
aam
and
dec
imul
or
add
shlb
pop
aam
xor
rcll
test
cmp
fisttpl
pop
jp
into
jle
fstl
push
shll
lods
fstpl
pop
cmc
fsubs
jno
adc
iret
push
int3
mov
jp
in
jl
aad
adc
jnp
xchg
sbb
in
ss
push
lahf
fwait
mov
fldt
fcmovnb
imul
fiadds
aas
push
repz
in
push
pop
iret
mov
xorb
sbb
fidivl
pop
inc
loop
fcmovnb
mov
pop
pop
adc
mov
ljmp
loop
inc
push
pop
int
jle
out
rcr
pop
aam
jo
in
dec
in
shll
imul
mov
les
sahf
mov
add
mov
pusha
enter
fst
test
fildll
sbb
dec
cmp
clc
leave
dec
sub
xlat
adc
push
inc
adc
push
cmp
fidivrs
into
push
cwtl
mov
loopne
cmpl
push
jnp
push
lret
shl
pusha
shl
dec
fnsave
xchg
movsl
call
and
dec
pop
add
push
lds
fwait
pop
ret
repnz
pop
out
out
lcall
loope
push
leave
jbe
inc
dec
adcl
out
pop
and
dec
test
decb
leave
addr16
call
decl
push
mov
int
fstps
imul
sbb
js
pop
aam
push
sbb
pop
pop
rol
jl
lods
stos
popa
sbb
add
lret
sahf
push
jae
fisubs
std
xchg
push
push
xlat
icebp
inc
dec
out
pop
fsubr
arpl
int
loopne
mov
push
push
mov
aas
inc
js
jbe
or
mov
xchg
and
pop
push
fldcw
jmp
xchg
dec
jmp
fmul
out
or
pop
xor
lret
jno
ds
dec
dec
fisubs
jl
pusha
cmpl
add
gs
dec
push
mov
lcall
fstps
push
aad
dec
movsl
mov
les
dec
mov
imul
pop
les
dec
popa
aad
jl
push
loopne
shl
pop
dec
xchg
int3
repnz
sbb
repnz
pop
push
cwtl
and
imul
nop
inc
sbb
xlat
ret
stos
lahf
imul
hlt
mov
mov
out
fsubrs
pop
out
insb
shlb
or
push
fcmovne
and
cli
dec
stc
cmp
fucomi
mov
push
loopne
inc
and
sub
iret
fmul
add
flds
test
movw
aas
pop
dec
fildl
or
insb
call
inc
mov
sti
fnstenv
dec
xchg
fcmove
mov
mov
gs
add
call
addr16
ret
jmp
out
pop
test
insl
js
js
jge
int3
leave
and
or
pop
lds
mov
aaa
aad
xor
mov
in
fisttpll
push
lahf
notl
outsb
js
and
lret
fstpl
dec
and
pop
dec
xchg
adc
cmp
dec
addr16
cmp
jae
xchg
fbld
gs
pop
inc
push
scas
xlat
lea
push
les
fidivrl
test
frstor
fldl
aas
ljmp
in
pop
fisttpl
leave
adc
fistpl
insb
dec
rclb
pop
pop
rclb
fidivrs
int3
pop
mov
loopne
loopne
cmp
cwtl
icebp
cmpsl
pop
dec
pop
test
loopne
leave
jle
dec
inc
mov
aad
cwtl
push
aad
in
rcr
push
int3
lea
lret
dec
pop
push
or
cmp
adc
pop
aam
out
inc
inc
faddl
dec
popa
pop
movsb
rorb
aad
cmpsl
fcmovne
or
mov
or
cmpsl
mov
pop
cmp
es
push
mov
enter
lret
fldenv
movsl
scas
pop
fcoml
sub
icebp
push
push
test
xor
arpl
call
pop
imul
arpl
iret
fdivrs
pop
xchg
mull
cli
dec
les
shrl
fucomi
leave
dec
mov
adc
sub
addr16
push
test
cwtl
mov
pop
lretw
fbld
lods
hlt
jl
pop
out
xorl
int
pop
mov
movnti
and
sti
push
in
lret
fmul
xchg
inc
jle
int3
rcl
dec
push
pop
pop
jp
mov
int
fmul
inc
mov
inc
inc
xor
popa
iret
fiaddl
push
imul
pop
dec
dec
dec
dec
lea
mov
fstl
popa
xor
lret
adc
jl
jge
and
lret
mov
pop
jle
in
fiaddl
mov
xlat
mov
fnsave
inc
iret
addr16
pusha
jl
fbld
lret
push
xchg
mov
jl
xchg
loop
inc
aad
pusha
ljmp
test
lret
cmp
pop
push
sub
pop
jmp
mov
push
mov
pop
jge
out
loopne
push
jmp
enter
add
out
xchg
out
lcall
adc
xlat
push
mov
dec
dec
gs
iret
fldt
inc
loop
pop
jne
mov
xchg
into
cmp
mov
mov
cmp
jge
dec
jnp
mov
xor
fmuls
rol
pop
rcl
flds
leave
movsl
mov
inc
outsl
inc
into
add
pop
bound
or
int3
mov
push
movb
push
pusha
mov
mov
add
fstpl
insb
inc
mov
adcb
and
dec
lret
inc
jl
mov
fcmovbe
pop
mov
lret
add
dec
int
loope
push
dec
clc
dec
push
push
adc
sbb
push
jge
jp
xor
pop
int3
not
loopne
fisubs
shrb
sti
dec
fstps
dec
negb
fidivrl
rorb
fadd
int3
dec
dec
push
fcmovne
pop
pop
jge
cmp
loope
shr
pop
pop
test
jb
dec
mov
in
and
addr16
xchg
popf
in
jg
inc
dec
push
dec
pop
sar
int
inc
popa
int
lahf
sbb
int3
leave
pop
jmp
fldenv
cli
rcr
outsl
fistpl
lcall
aam
les
dec
push
outsb
dec
xchg
dec
fcmovnb
dec
imul
jl
dec
xlat
cmp
cs
push
xor
pop
mov
ficompl
xlat
mov
inc
out
fdivrs
pop
sbb
xorl
stos
aad
scas
imul
lret
inc
clc
lret
fimull
pop
loop
cltd
jp
add
fsubs
xchg
filds
dec
out
pop
mov
inc
pop
pop
inc
sbb
in
fisubrl
sbb
or
inc
ficomps
testl
push
fisttpl
stos
jg
pop
enter
or
mov
push
jmp
dec
rcl
push
sbb
pop
ljmp
pop
push
pusha
pop
sti
int3
xchg
push
out
inc
cmp
cmp
dec
jno
icebp
add
pusha
push
push
fidivl
leave
mov
add
push
push
push
movsl
into
aaa
jl
xchg
sub
and
loopne
push
loope
push
aaa
mov
out
mov
js
sti
inc
movsw
inc
push
adc
push
mov
inc
jg
addr16
push
xchg
scas
pop
inc
pop
out
mov
pop
mov
js
add
loopne
push
pop
jb
fmul
cmp
pop
cmp
jle
push
cmp
add
fildll
mov
inc
imulb
jg
push
aas
hlt
fistpll
jb
cmp
push
enter
leave
insb
stos
mull
fldt
xchg
push
lods
sarl
mov
negb
iret
repz
dec
enter
inc
xchg
insb
test
pop
sarl
pop
rorb
fucomi
fisttpl
iret
cmp
mov
pop
int3
mov
add
ffreep
push
jge
cli
movsb
out
fstps
mov
das
imul
fsub
inc
pop
aad
dec
pop
testb
jl
push
jp
mov
inc
push
pop
out
cmpsl
ret
popa
les
fs
int
pop
hlt
stos
jae
lret
js
jle
les
mov
dec
jge
fnstenv
lahf
dec
out
in
mov
pop
jno
xchg
out
test
pop
mov
icebp
jae
jle
lds
or
and
aad
insb
add
inc
mov
xchg
add
pop
int
cmp
inc
pop
push
mov
icebp
repnz
in
aaa
pop
lods
cmc
dec
insb
mov
adc
push
enter
fnstsw
cli
xchg
lods
cli
mov
pop
dec
shrl
push
push
cwtl
ljmp
sub
test
lret
sbb
mov
insl
adc
sub
out
leave
mov
in
jne
in
pop
aad
push
out
inc
sub
xchg
add
fstp
lret
call
mov
rolb
pop
cmp
cmp
sub
dec
mov
int3
dec
fisubrl
push
arpl
jmp
xor
ficoml
mov
xchg
int3
into
enter
push
les
cmp
cmp
cltd
inc
pop
gs
int
sbb
xchg
out
adc
adc
incl
inc
fistps
and
push
shrl
pop
adc
outsb
lds
icebp
mov
leave
pop
int3
mov
gs
into
in
out
lret
mov
int3
jb
rolb
ss
call
int3
stos
cli
not
adcl
dec
and
mov
adc
fmull
mov
lds
push
fadd
push
pop
rorb
jg
dec
push
push
daa
mov
jbe
imul
sub
enter
sub
aam
call
and
clc
inc
lret
imul
call
jl
les
mov
jl
iret
inc
cmp
pusha
push
or
mov
das
ja
aam
mov
cmp
pop
dec
shll
mov
pop
sbb
call
dec
lret
scas
aas
dec
stc
and
cmp
dec
lods
movsb
in
leave
cmpsl
sbb
cwtl
mov
iret
dec
push
cltd
push
stc
addr16
pop
lret
in
mov
fiaddl
and
imul
mov
aam
dec
mov
aaa
cltd
outsl
adc
and
mov
fbstp
pop
lret
imul
jp
dec
out
inc
add
fistps
fldenv
cwtl
add
lret
test
bound
repnz
mov
and
aaa
mov
addr16
addr16
hlt
sub
jl
das
shlb
scas
aam
xor
mov
push
lret
sub
pop
int
aam
lcall
mov
dec
stos
sub
sub
add
or
movl
pop
xlat
in
push
mov
aas
jmp
ja
fcmovne
int3
and
pop
dec
push
mov
aam
icebp
insb
leave
jge
dec
pop
vpor
ret
aam
int
mov
cli
test
clc
leave
jg
pop
out
sub
push
enter
adc
lretw
fs
inc
rclb
int
mov
fs
lret
stos
mov
mov
scas
xlat
jb
push
push
mov
aas
lcall
mov
imul
mov
mov
out
aad
xor
mov
pusha
lret
mov
mov
adc
xor
flds
movsl
jnp
inc
out
pop
aad
jecxz
pop
push
lcall
pop
mov
aad
scas
inc
lahf
dec
gs
inc
dec
adc
jl
push
cltd
jge
leave
lret
push
and
rcr
inc
cmpsl
int3
dec
mov
shll
sbb
sub
xchg
adc
xlat
fcompl
or
addr16
pop
ficompl
pop
push
sub
pop
popa
imul
aam
stos
std
loop
out
lret
cmp
neg
popf
gs
pop
sub
cld
into
dec
cs
add
inc
fimuls
repnz
roll
add
fdivs
pop
les
dec
bound
nop
imul
cmp
outsb
mov
daa
iret
dec
push
enter
mov
pusha
fmull
in
sbb
and
mov
jmp
les
or
pop
pusha
push
imul
or
lds
pop
in
push
lods
mov
xlat
jp
int3
lds
push
and
add
inc
dec
push
rclb
jno
pop
jb
push
in
dec
mov
pop
test
test
aad
dec
ljmp
aas
sbb
les
bound
fmull
sti
out
mov
pop
fucomi
int3
aaa
int3
fstl
enter
insb
call
lds
sbb
xchg
mov
in
data16
fcmovnb
and
sbb
ds
popa
inc
out
dec
les
data16
dec
mov
cmp
insl
xlat
mov
lea
enter
fidivrl
mov
dec
pusha
pop
js
jmp
scas
fiaddl
push
adc
xchg
pop
pop
inc
fisttpll
dec
push
aaa
dec
mov
pop
out
int
adc
fcomp
pop
push
js
jmp
and
inc
push
data16
js
clc
jmp
fcoml
stc
insb
dec
loopne
int3
pop
iret
das
outsl
sbb
pusha
dec
data16
dec
pop
cmp
enter
imul
dec
movsl
stc
jg
fisttpll
inc
rolb
mov
pop
dec
leave
pop
mov
lahf
pushf
jmp
pop
pop
pusha
mov
jb
faddl
mov
lds
pop
dec
leave
mov
lret
push
cltd
jmp
lods
aas
dec
pop
out
pop
inc
mov
in
dec
fwait
pushf
inc
mov
sub
loopne
in
lret
mov
mov
jmp
gs
cmp
iret
imul
loopne
leave
out
popf
cmp
fldenv
dec
daa
loope
lret
sbb
popa
fld1
mov
inc
jbe
inc
js
mov
xlat
test
fdivr
in
pop
stos
jecxz
mov
test
inc
in
mov
pop
scas
popl
or
imul
pop
jb
inc
addr16
lahf
mov
dec
pop
fistl
xlat
lahf
rorb
push
fdivrs
fcmove
in
out
aad
outsl
jle
filds
not
mov
fstpl
fcmovnbe
scas
neg
fidivrs
popa
out
push
fs
js
or
push
pop
pusha
les
ret
aad
pop
in
push
xchg
lea
pushf
sbb
in
or
sub
int
loope
loopne
ficoms
leave
push
inc
push
pop
aad
fs
mov
fsubrl
es
cli
xor
inc
popa
fstp
pop
push
sub
mov
in
dec
push
iret
push
pop
mov
push
loopne
test
pop
dec
mov
fldl
fcompl
dec
push
jmp
mov
pop
pop
aam
jno
or
inc
mov
fmuls
sbb
pop
fcmovu
cmp
leave
lret
dec
lds
loopne
inc
rolb
dec
jmp
mov
rcr
add
push
rcrb
xlat
pop
pushf
cmp
aad
adc
clc
add
loopne
repnz
dec
dec
out
pop
gs
cli
popa
inc
lret
dec
in
sahf
pop
adc
pop
icebp
pop
popa
dec
inc
sbb
lret
mov
fimuls
or
sub
push
js
or
or
xchg
out
inc
lods
mov
pop
int
sti
jmp
aam
cmp
ror
enter
push
dec
in
fcom
faddl
and
inc
fstps
push
pop
pop
test
out
jno
pop
addr16
jge
fildl
mov
cmp
add
mov
das
stos
testl
push
and
or
push
test
sbbl
add
add
int
ret
mov
out
cmp
test
loopne
dec
fsubrl
bound
in
cli
decl
dec
fsts
xchg
in
int3
xor
xor
aas
lahf
jle
pop
fildl
cli
push
mov
jp
addr16
inc
inc
pop
jl
push
shl
cmp
aas
jns
lods
jne
mov
xchg
ds
push
mov
addr16
inc
jle
aad
popa
out
idivb
push
jle
inc
push
enter
fwait
mov
cli
lret
jp
dec
pop
pop
add
fcoms
cmpsl
gs
inc
dec
aad
daa
fsts
daa
mov
sbb
in
loop
fsubl
into
dec
imul
insb
jg
les
jo
int3
loopne
pop
enter
mov
pop
fisubrl
aam
scas
xchg
fs
mov
pop
dec
dec
dec
mov
loope
lret
call
inc
ja
filds
adc
inc
dec
jbe
lret
inc
and
int3
dec
testb
aas
xchg
mov
outsl
dec
dec
js
fmuls
rorb
out
xor
add
mov
fxam
xlat
push
roll
aam
aaa
movsb
mov
mov
jp
int3
pop
dec
inc
add
sub
aad
sub
iret
out
xchg
popa
mov
jle
int
and
mov
xlat
dec
mov
inc
xchg
popf
iret
inc
mov
inc
jecxz
push
push
xchg
mov
push
test
dec
and
lret
nop
sar
mov
jbe
xchg
jne
sbb
mov
xor
ss
xor
fcmovnu
cmpl
add
lods
push
mov
mov
pop
lds
pop
int3
fucom
movl
dec
int
sub
imul
lahf
ror
inc
jmp
movsb
clc
push
popa
dec
pop
inc
lds
int3
les
push
and
leave
push
mov
rorl
mov
fmull
jmp
fisubs
test
fadds
mov
out
test
dec
fnstenv
push
leave
pop
dec
jmp
aam
add
fildl
dec
in
dec
loope
rcrb
mov
popa
fsin
push
pop
pop
loopne
idivl
jle
lret
shl
xchg
shrl
stos
pop
scas
lds
pop
addr16
js
dec
mov
push
out
loope
pop
mov
sarb
das
mov
enter
imul
cmp
pusha
insb
push
sub
popa
pop
out
lock
jge
pop
dec
push
ret
cmp
inc
loopne
lds
call
out
bound
popa
dec
out
pop
loope
dec
fcoms
mov
lea
filds
jmp
pop
push
leave
gs
inc
or
xlat
push
cli
rolb
fists
bswap
xchg
inc
imul
and
jbe
movsb
jp
addr16
fsubl
inc
ror
lret
adc
into
aam
shlb
pop
sub
pop
pusha
or
inc
enter
outsb
pusha
loopne
mov
pop
push
mov
jecxz
lret
xorl
mov
or
ret
icebp
decl
pop
dec
sarl
fcmovnu
shr
fnstsw
push
fstp
scas
aad
iret
rcll
movsb
fcmovnbe
enter
fcmovbe
int
rcrl
jae
enter
in
pop
dec
imul
ds
and
popa
rol
mov
push
dec
in
mov
or
pusha
dec
and
leave
inc
leave
cld
loopnew
xor
sarl
movsl
xchg
or
notb
jp
and
push
out
dec
popa
dec
enter
ss
dec
push
mov
mov
fsubrl
dec
inc
pop
mov
inc
fistpl
leave
sbb
jmp
ficompl
enter
dec
mov
push
pusha
out
adc
lock
js
jg
pop
lahf
dec
and
mov
shll
aad
outsl
cmp
fcmovnbe
dec
out
aad
in
xchg
xchg
test
iret
and
aam
dec
aad
leave
enter
add
dec
out
pop
into
push
dec
dec
faddp
fdivs
or
in
popa
out
pusha
pop
and
mov
dec
dec
cmp
inc
fbld
and
ret
mov
jl
aad
push
add
leave
rcrb
les
ljmp
sub
cmp
faddl
lds
insb
cmp
out
xor
inc
or
frstor
jge
iret
pop
dec
cmp
ret
dec
pushw
mov
popa
mov
subl
int3
mov
jge
aam
leave
ds
ficoms
data16
push
pop
rcrb
les
mov
pop
imul
push
mov
xchg
lret
aam
movsb
mov
mov
outsb
shr
inc
daa
aad
adc
test
dec
push
push
xchg
mov
add
dec
jae
leave
mov
cli
fucom
aam
cmp
out
dec
int
fstpl
sahf
mov
lret
mul
mov
in
out
jbe
inc
inc
nop
and
jmp
dec
jne
mov
js
sbb
stos
jb
das
stos
lret
loopne
out
aad
aam
dec
pop
lret
fcoml
ds
and
mov
push
jge
call
mov
pop
out
loop
mov
call
dec
xor
shrl
gs
decl
push
insb
lahf
sbb
mov
dec
loopne
xchg
int
mov
dec
fcmovnbe
lret
dec
lret
sbb
rolb
push
into
fdivl
push
subl
mov
dec
in
out
loopne
jmp
jl
pop
add
lret
out
nop
mulb
int
insl
addr16
and
pop
popf
repnz
or
lds
add
in
pop
fcmovu
fstps
pop
pusha
data16
dec
ljmp
fbld
push
mov
aam
cmp
pop
xchg
ljmp
adc
int
or
mov
fadd
icebp
mov
lret
insl
out
add
insb
sbbl
push
fcmove
aas
fadd
sahf
cmp
or
lcall
repnz
int3
xlat
cmp
adc
or
fildll
cwtl
stc
sbb
ljmp
rclb
sub
into
outsl
fmul
orb
push
jmp
lret
movsl
add
sbbl
sub
fistps
jl
movl
fwait
dec
pop
pusha
fstp
clc
jg
fistps
insb
aad
ficoml
dec
pop
stc
inc
and
int3
into
imul
cmovbe
xor
pop
mov
jl
xlat
pop
inc
fldenv
push
leave
cmp
jle
pop
mov
xor
mov
test
cmp
adc
mov
fidivrl
shl
int
jmp
xchg
mov
cld
ret
pop
mov
scas
mov
arpl
dec
dec
sub
pop
xchg
mov
syscall
push
lret
push
rol
in
int3
lret
leave
enter
jp
int
add
imul
frstor
fstl
adc
add
pop
push
loop
js
stos
scas
mov
mov
jmp
fsubrp
cltd
or
push
dec
pop
jge
jl
add
dec
popa
das
sbbl
icebp
cmp
faddl
sub
jecxz
imul
adc
and
push
sbb
mov
leave
inc
add
call
inc
int
pusha
sahf
mov
gs
dec
movsb
and
frstor
in
subl
add
into
shlb
push
ret
dec
sbb
gs
rcrl
insb
dec
push
rorb
mov
rorl
cli
fldt
nop
imul
movsl
ret
push
mov
popf
insb
out
pop
dec
jp
fistl
rcrb
enter
fwait
push
in
fldenv
out
fcmovne
aad
xchg
sub
pop
xchg
inc
ficoml
fcmovne
movsl
add
jp
push
mov
and
dec
movsl
bound
rolb
jmp
iret
dec
cli
pop
fcmovu
adc
push
out
into
lahf
dec
inc
pop
in
int
push
dec
fsubrp
inc
jmp
lret
fcmove
int3
inc
inc
inc
inc
enter
dec
pop
es
inc
data16
clc
addb
and
jne
into
dec
fstl
lret
enter
cmpsl
and
inc
jmp
xchg
adc
stos
add
iret
fstl
clc
call
movsw
and
inc
or
pop
dec
insl
jnp
fcmovb
movsb
sbb
shll
clc
out
push
dec
pop
xchg
cli
dec
mov
in
cli
fmul
push
push
das
jmp
or
gs
in
fcoms
ficoml
loope
addr16
aad
into
dec
pop
jne
mov
fsubrp
fstpl
sbb
icebp
subb
dec
xchg
std
jmp
testl
sub
enterw
push
out
je
in
loopne
out
iret
mov
lds
ja
cmc
ret
fildl
push
addr16
and
push
aad
pop
dec
les
mov
ror
mov
decl
imul
mov
call
jmp
lret
sub
add
out
adc
fbld
inc
push
xchg
push
sub
xchg
pop
lret
xchg
add
leave
push
dec
pop
popf
fnstenv
xlat
mov
pop
gs
push
in
out
icebp
clc
push
and
mov
mov
sahf
xor
sub
ficompl
rcl
shl
ljmp
aad
or
dec
add
dec
fsubl
dec
mov
mov
loopne
and
pop
dec
jmp
into
js
or
lcall
dec
sbb
dec
rolb
fadd
lret
into
pop
lret
loopne
leave
lret
shrb
xchg
jmp
cs
push
jne
clc
push
dec
mov
into
or
rcrb
mulb
gs
xchg
jmp
decb
rol
loopne
loopne
push
cli
xchg
pop
pop
jp
jno
popa
fcmovne
mov
inc
push
add
enter
popa
in
jg
out
dec
dec
shll
out
xor
mov
leave
inc
sbb
scas
push
mov
in
push
xchg
mov
iret
fwait
mov
inc
mov
dec
push
add
xchg
mov
das
inc
idiv
dec
push
fnstcw
mov
nop
fisubs
out
mov
filds
stos
inc
jp
fsubr
pop
negl
mov
arpl
dec
stos
inc
vmovaps
int3
add
push
cmp
xor
daa
cltd
adc
mov
fdiv
faddl
inc
enter
push
add
pop
or
out
lret
mov
pop
out
cltd
cld
addr16
popl
cmp
mov
mov
xchg
xchg
mov
push
sub
xor
fmul
dec
pop
jmp
cltd
dec
arpl
cmp
dec
cmpb
mov
cmp
into
test
xor
inc
mov
test
hlt
dec
lret
push
inc
sbb
leave
sub
push
ficompl
lret
mov
sahf
addr16
jmp
out
js
or
scas
aad
jae
xchg
pop
in
popa
popf
fimuls
xor
gs
aad
sbb
jmp
addr16
stos
fwait
out
andb
dec
aad
pop
push
inc
mov
or
pop
test
pop
push
loopne
fnstcw
xchg
inc
inc
int
jmp
mov
dec
push
sbb
into
pushl
dec
and
push
fwait
pop
fstpt
mov
sub
push
lret
dec
fsts
dec
test
dec
int
out
test
aad
idivl
dec
or
pop
cmp
jmp
sbb
popf
pop
popa
movsb
stos
mov
jg
pop
dec
pop
cmp
lods
fucomi
or
sbb
adc
mov
push
pop
repz
push
aas
jl
pop
or
es
pop
inc
js
in
jb
mov
cwtl
fadd
fldenv
imulb
add
addr16
int
fiadds
les
fbld
repnz
iret
jl
pop
add
fadd
push
movsl
dec
js
into
imul
sti
in
les
mov
mov
movsb
pop
or
xchg
or
dec
dec
leave
mov
jnp
dec
je
out
daa
andl
or
mov
icebp
into
inc
lret
out
jge
push
mov
fcmovu
leave
test
les
aad
fldl
test
int3
popa
shl
push
rcll
in
pop
add
mov
jl
iret
imul
dec
rcll
cmp
in
mov
and
xor
or
out
clc
pop
aad
sub
dec
jecxz
xlat
sub
xchg
hlt
cmp
jp
push
dec
fldl
aad
fwait
sbb
movsl
pop
lods
fsubs
lret
dec
pop
sahf
dec
addl
fstpl
addr16
ljmp
movsb
arpl
push
push
imul
out
rcll
aad
fidivs
ljmp
rcrb
loopne
or
sub
sub
int
leave
shlb
fldcw
pop
ljmpw
pusha
iret
inc
mov
and
lret
icebp
push
xchg
outsb
sub
and
push
push
push
aam
fcoml
out
icebp
pop
push
dec
cmp
int
dec
push
pop
mov
iret
fcomps
and
imul
hlt
xor
loope
rorb
out
fisttpl
lcall
vdivss
int
sub
mov
out
imul
add
pop
dec
pop
aad
push
out
push
loopne
push
mov
fdivrl
les
push
inc
lcall
leave
sub
dec
jmp
aaa
leave
sub
xchg
rolb
popa
ret
aad
inc
add
pusha
xchg
cmp
dec
leave
dec
in
fnstsw
jnp
lret
mov
aam
aad
sti
mov
inc
pop
dec
push
inc
mov
in
xchg
and
ja
and
loopne
loopne
mov
shl
push
and
inc
fildl
fbld
lds
out
lretw
jno
enter
or
in
push
aaa
mov
testl
pop
jb
inc
inc
pop
push
icebp
xchg
pop
insb
popa
pusha
adc
pop
pop
inc
mov
test
int3
dec
leave
lret
push
push
cld
mov
dec
dec
aas
lock
xchg
cmp
cmc
jle
sbb
push
and
mov
fiaddl
push
fst
xchg
jle
pop
pop
out
push
enter
dec
xchg
add
pop
pusha
call
dec
jno
mov
clc
pop
fiaddl
arpl
dec
push
cmp
imul
insb
into
neg
les
lcall
nop
imul
or
es
sbb
sub
mov
or
fcomps
lret
sbb
insl
js
in
insl
pop
mov
std
and
out
jno
xchg
movsl
outsb
mov
jecxz
sbbb
push
fdivs
push
push
or
mov
mov
fsubrs
rclb
mov
enter
addr16
jge
fstpt
dec
bound
fsubrl
or
pop
int3
scas
test
mov
jns
lret
leave
inc
fdivr
jge
outsb
dec
fmull
adc
mov
lods
lahf
imul
cmpsb
xor
shrb
xchg
push
cmpsl
sahf
aad
andl
int3
icebp
and
leave
js
mov
fdivrl
sti
test
add
fs
sti
rolb
mov
jb
push
fsubs
push
rcr
in
ret
mov
cmp
in
jae
cmp
jg
addr16
mov
cmpsb
push
leave
pop
test
fsubl
popa
sub
dec
sbb
mov
cmpsl
mov
xchg
xor
rol
or
fst
and
inc
out
movsb
enter
imul
ficomps
iret
jle
fnstcw
out
dec
aam
push
test
lcall
mov
inc
roll
ljmp
pusha
dec
or
rcrl
pop
pop
cli
push
iret
popa
pop
dec
cmp
push
dec
into
aam
dec
leave
popf
add
in
push
jmp
dec
and
stos
adc
push
and
dec
aaa
into
cmp
push
mov
fdivl
mov
aad
aam
dec
outsb
xchg
mov
xchg
push
insb
in
pop
dec
pop
push
push
dec
aam
mov
sub
imul
int
xchg
and
jmp
fists
test
cwtl
dec
rorb
adc
lahf
pop
dec
dec
push
icebp
xorl
icebp
scas
rcrb
add
pop
mov
cmp
fcom
shll
test
add
iret
mov
fsubrs
xchg
push
fdivs
xchg
fcoml
lods
push
aad
into
in
aam
fwait
inc
pusha
gs
pusha
icebp
int
push
pop
or
pop
shl
idiv
jae
xchg
fdivrs
fucomip
add
xor
nop
aad
mov
hlt
pusha
mov
jg
into
addr16
push
inc
pop
dec
fisttpl
lahf
aas
lahf
add
or
sbb
push
pinsrw
out
enter
push
jg
push
insb
leave
dec
aas
adc
aad
pop
mov
add
jno
dec
pop
push
stc
enter
jmp
imul
push
decb
sub
push
jg
fucomip
sub
mov
jno
inc
aam
mov
loopne
mov
pop
movb
dec
call
xchg
mov
mov
dec
aas
xor
out
fadds
adc
div
sbb
xchg
clc
inc
cmp
cmp
lcall
int3
xchg
pop
jg
fistps
test
sub
les
aas
cmp
jge
sbb
cmp
popa
popf
outsl
repz
add
pop
mov
mov
mov
dec
fnstsw
pop
loopne
cltd
shl
pop
fstpl
push
mov
cmp
cmpb
imul
or
cmpb
addr16
adc
mov
iret
fsub
mov
sbb
cltd
fldenv
ficoml
loopne
cmp
dec
das
mov
fst
cmp
cmp
ss
dec
lea
pop
pop
aaa
jmp
push
jmp
dec
loope
dec
dec
or
test
inc
subb
xlat
jmp
and
lock
xchg
popf
xor
dec
insb
sub
xchg
mov
outsb
fisttpl
iret
mov
sbb
pop
imul
xlat
adc
dec
inc
int
pushl
int
orl
int3
loopne
gs
dec
cli
test
dec
lds
cmp
sub
mov
pop
into
aad
pop
jg
dec
xlat
and
sbb
xchg
fdivrl
add
int
aad
mov
in
call
pop
test
mov
pop
imul
dec
loopne
dec
push
rolb
aam
and
dec
push
sub
jmp
sbb
xchg
xor
pop
cwtl
mov
mov
inc
inc
incb
rorb
fsubrl
cs
mov
xchg
fildl
outsb
pop
shlb
loopne
and
push
into
lret
dec
or
int3
push
adc
jae
fadds
push
adc
int3
lds
lods
push
clc
enter
dec
dec
pop
jnp
sbb
int
pop
lret
lods
movsl
mov
jg
pop
dec
pop
and
push
xor
int3
jmpw
adc
dec
mov
enter
sbb
jl
push
cmp
and
out
mov
inc
inc
mov
lds
mov
inc
jae
inc
dec
into
enter
ficompl
pop
cmp
cmp
fmull
fsts
dec
lods
shl
jb
int3
lret
enter
lahf
repnz
imul
or
in
pusha
jmp
jge
dec
inc
or
mov
clc
imul
pop
rorb
push
mov
fxch
pop
movsl
les
inc
xlat
ljmp
dec
pop
cmp
fsubrs
jg
addr16
mov
xchg
mov
sbb
push
mov
xchg
imul
pusha
mov
rorl
sbb
insb
mov
push
mov
fisubs
inc
call
xlat
inc
icebp
das
push
out
push
pop
jge
fimull
leave
decl
dec
lret
or
dec
test
les
fstp
movb
mov
jge
rclb
add
xchg
rolb
into
pop
fdivrs
clc
mov
cmp
popa
mov
or
pop
dec
fnstcw
pop
into
aad
mov
mov
push
xchg
jmp
cmpsb
fbld
in
imul
aad
cmp
mov
lret
and
dec
out
dec
rcrb
loopne
cmpl
repnz
xchg
std
fcomi
push
mov
int3
cmc
repz
cmp
dec
push
mov
nop
sbb
jno
pop
push
add
int3
mov
dec
andb
dec
rclb
push
lds
leave
xchg
mov
inc
xchg
clc
add
aam
iret
in
dec
dec
sub
sub
hlt
xor
ret
fdivrp
js
sub
dec
js
pop
js
push
dec
dec
data16
push
aad
xchg
out
out
sti
int3
dec
stos
fadds
fstp
jp
push
je
stos
mov
int3
dec
lret
pushf
inc
shlb
pop
aam
cld
lock
in
insb
mov
pusha
push
cmc
into
movsl
xchg
fcmovne
xchg
subl
xlat
cli
adc
dec
leave
jge
call
adc
push
mov
xchg
jmp
aad
sar
scas
dec
outsb
mov
rcrl
nop
sbb
dec
mov
mov
jl
xor
insb
pusha
decb
dec
mov
subb
xor
insb
out
push
xlat
aad
adcl
mov
xor
fildll
dec
push
push
mov
enter
push
dec
jg
fistps
stc
jge
pop
inc
pusha
mov
dec
dec
lahf
gs
les
xor
popa
in
pusha
inc
outsl
dec
aad
fs
out
stos
xchg
dec
and
or
xchg
cmp
mov
cltd
rcl
out
not
push
shr
ljmp
fcompp
inc
fisttpl
lock
out
dec
fstpt
sbb
or
pop
lret
jmp
dec
pushw
jmp
in
pop
aad
dec
in
roll
data16
pop
into
loopne
popa
es
pop
int
lret
outsb
inc
mov
fistl
add
xlat
lds
cmpsl
pop
roll
push
xor
mov
dec
lds
test
aaa
and
pop
mov
push
fcoms
pusha
mov
lods
negl
inc
sbbl
xor
stc
xchg
int3
shr
in
into
out
out
jo
sbb
cmpsb
in
lret
push
dec
movsl
and
hlt
out
jmp
push
add
add
fldcw
test
enter
xlat
iret
jge
xchg
out
add
push
dec
aad
in
pusha
sub
enter
pop
popa
sub
dec
leave
mov
out
cmp
ds
push
jge
in
xchg
rolb
push
loope
pop
lds
cmp
jbe
xlat
mov
inc
ffreep
push
fisttpl
popf
iret
inc
int
mov
push
clc
addr16
pop
int
pop
test
inc
sbb
add
jae
inc
add
pop
pop
push
inc
movsb
nop
jnp
xchg
iret
mov
or
push
fstpl
pop
push
cli
or
and
lcall
fdivrs
pop
mov
flds
push
mov
xor
fstp
movsl
movsl
into
aaa
cltd
aad
enter
lret
loopne
js
mov
popa
push
leave
push
negl
mov
lods
andb
fnstsw
jg
dec
vlddqu
dec
clc
dec
pop
out
pop
cmpb
iret
loopne
pushl
andb
lea
scas
pushf
outsb
cmp
xlat
push
push
push
pop
enter
fcompl
sub
dec
aad
fistpl
jp
lret
int
xlat
stos
lret
jp
mov
enter
js
data16
mov
and
dec
pop
insb
pop
push
mov
aad
cmc
sub
push
adc
out
out
test
popa
xlat
ffreep
lret
cmpsl
jno
push
jmp
loopne
inc
pop
mov
addr16
gs
pushf
pop
mov
dec
pop
in
aas
and
lds
popf
sbb
push
enter
inc
pop
pop
push
stos
sti
dec
leave
inc
xlat
mov
lahf
out
xchg
cmp
out
push
iret
add
fdiv
dec
xor
lret
je
mov
push
lret
inc
rcrl
push
std
cwtl
addr16
or
xchg
xchg
push
lods
int
pop
mov
shr
inc
lds
enter
push
and
imul
lcall
fbld
add
dec
data16
push
push
pop
shll
outsl
iret
pop
or
lret
cli
jbe
dec
js
jbe
lea
enter
xor
shrl
cmp
pusha
lret
mov
dec
js
inc
push
negl
cmp
dec
out
testl
fadds
jb,pn
scas
mov
negl
loopne
or
xchg
mov
fstps
lret
int3
jo
pop
gs
cmp
nop
inc
jl
leave
xor
mov
outsb
call
dec
js
out
mov
push
inc
aam
mov
mov
xlat
shl
mov
add
dec
enter
loopne
fsincos
dec
inc
pop
fstp
push
jle
shr
push
dec
inc
popa
sbb
inc
mov
jmp
lea
add
out
inc
jmp
outsb
cltd
int3
jae
leave
negl
loop
cmp
dec
out
lock
leave
test
imul
test
and
push
int
cli
pop
pop
shlb
jae
out
pop
dec
inc
push
mov
jp
lret
clc
cli
out
test
pop
out
push
call
push
fildl
mov
dec
popf
cs
mov
nop
pmaxub
dec
int3
int
dec
pop
faddl
mov
cld
mov
add
lret
dec
push
add
mov
hlt
aaa
call
repnz
add
mov
int
mov
sbb
fwait
adcl
jb
jmp
repnz
outsb
cmp
dec
fs
rolb
mov
pop
push
jae
dec
xchg
push
call
adc
fisttpll
mov
shlb
in
adc
cmp
ret
in
enter
lahf
dec
aad
pop
imul
pop
movsb
fdivl
cwtl
mov
rcl
pop
jl
into
push
rorl
pop
inc
push
xor
frstor
mov
jg
stos
add
pop
nop
and
rolb
mov
fcmovu
imul
int3
pop
dec
in
ljmp
jp
iret
dec
xlat
inc
sub
push
cmp
mov
fildl
cltd
aad
fcom
dec
aad
push
loope
int3
inc
inc
insb
and
xor
adc
dec
testl
ss
call
les
rorb
mov
pop
inc
icebp
mov
jae
inc
jp
enter
dec
imul
lods
fisttpl
fcom
push
push
js
addb
or
loopne
mov
pop
lahf
out
fstps
mov
dec
fmul
ret
jmp
sti
inc
ror
push
aaa
and
pop
cmp
push
dec
xorb
ss
int3
inc
fiaddl
sbb
stc
push
sbb
lret
leave
push
dec
nop
and
rcr
and
mov
addr16
sahf
and
dec
mov
fs
outsb
dec
pop
rorb
add
push
fstp
mov
cltd
or
enter
pusha
insb
rorl
dec
lcall
dec
xchg
mov
fnsave
or
mov
adc
into
jecxz
dec
mov
inc
repnz
aas
xlat
addr16
movsb
lahf
mov
dec
add
mov
jmp
dec
repnz
push
inc
dec
cli
lret
dec
mov
mov
int3
fnstcw
fcmovnbe
imul
fst
in
fst
pop
dec
adc
xlat
push
ret
jge
dec
addr16
jle
dec
mov
dec
iret
mov
loopne
jle
dec
inc
pushf
xchg
inc
test
repnz
in
mov
sbbl
imul
lds
add
movsl
jbe
inc
fisubrl
jne
stc
loopne
imul
call
sbb
push
test
push
inc
out
imul
mov
dec
fistpl
jmp
into
shrb
ljmp
imul
mov
xchg
ss
push
or
int3
js
fisubrl
nop
in
dec
mov
jmp
jle
rcll
lret
or
addr16
lret
notl
pop
mov
push
outsb
push
test
jmp
test
imul
aam
adc
sbb
xchg
fmulp
pop
shlb
gs
jp
out
and
enter
xchg
lret
mov
js
dec
fidivrs
fcompl
inc
movsb
int3
or
jb
stos
ljmp
popa
das
sahf
leave
flds
in
and
sub
js
pop
fistpll
subb
lods
shl
into
mov
pop
cli
pop
dec
dec
push
fdivr
cwtl
fcomp
mov
mov
lret
data16
adc
add
fdiv
fcom
rorl
lret
call
popa
xlat
push
sbb
cmp
in
rcrb
push
loopne
jle
inc
sbb
mov
pop
shl
mov
repnz
push
dec
cmpb
icebp
or
inc
fnstcw
or
test
or
aaa
pop
mov
mov
jb
enter
pop
mov
repz
sbbb
xchg
popf
xchg
out
iret
int3
cmp
mov
sbb
leave
xchg
negl
lds
dec
cltd
xorl
cs
push
fcomps
push
xchg
insl
xchg
imul
jg
pop
pop
add
in
pop
js
push
sbbb
push
fcomp
add
jbe
xor
jmp
imulb
adc
enter
dec
gs
sbb
clc
xchg
jl
data16
mov
fstpt
xor
fildll
cmp
ja
movsb
adc
adc
insb
aam
dec
xchg
xor
cmpsl
mov
ret
cmp
add
cmp
sbb
push
int3
push
in
adc
pop
add
leave
fnstsw
push
dec
lret
mov
fisubl
inc
fldt
fldenv
out
xchg
insb
repz
push
sbb
iret
sti
dec
fwait
dec
jecxz
fidivl
loopne
add
repz
inc
mov
gs
data16
pop
pop
mov
loopne
pop
inc
fmuls
outsl
enter
in
aam
jg
fidivrs
mov
dec
dec
dec
jmp
sub
xchg
cmp
sarb
popa
push
mov
jmp
xlat
insb
xchg
fisttpl
rorb
inc
lods
push
lret
and
pop
bound
mov
push
popa
xchg
pusha
sbb
lret
ret
arpl
enter
mov
mov
call
in
jecxz
dec
out
vpackssdw
jecxz
dec
iret
fst
testl
push
nop
jp
aas
mov
outsb
cmovne
aad
out
imul
dec
faddl
mov
sarl
dec
jl
dec
pop
lret
jge
nop
sub
and
popf
push
fdivl
rclb
leave
jo
add
pop
add
xchg
pop
pop
push
push
xchg
dec
pop
addb
dec
fstl
negb
leave
and
aam
loope
lret
or
dec
mov
dec
aaa
int3
in
mov
xlat
clc
out
jnp
fxch
int3
imul
idivb
cwtl
pop
movsl
jb
aad
call
mov
loopne
imul
lret
rcll
negb
repz
mov
inc
xchg
jno
aam
insb
inc
loopne
loopne
shll
cwtl
les
test
jbe
scas
dec
push
push
ret
aam
fcompl
inc
movsb
loop
aaa
ficoml
jmp
int3
adc
cmp
mov
outsl
lds
pusha
nop
lret
mov
xchg
xchg
fs
fmulp
sarl
push
into
leave
sub
xchg
pop
mov
mov
push
dec
pop
pop
insb
inc
pop
enter
lret
lds
pop
clc
loopne
dec
jp
pop
cmp
xor
lds
cmp
pop
jbe
ds
sbb
call
dec
into
int3
and
cmp
cmp
pop
fwait
sbb
fnstenv
add
fcoms
lock
mov
lahf
cld
repz
enter
fadd
sar
fnsave
aam
ss
icebp
fcomps
sub
test
jae
push
imul
and
popf
inc
inc
pop
gs
jne
data16
lret
call
call
dec
mov
xlat
mov
iret
lret
test
sbb
push
inc
and
fucom
pop
fbstp
pop
rorb
shl
insb
dec
and
in
or
sbb
xchg
pop
mov
xchg
subl
xchg
fucomip
xchg
adcl
inc
lds
aad
fimuls
pop
sbb
test
dec
aad
xor
aad
or
fmul
lahf
into
inc
xchg
inc
test
pop
xchg
out
into
jp
adc
aad
and
das
push
inc
into
pop
rolb
and
cmp
call
adc
add
imul
dec
pop
push
pusha
les
dec
aam
jle
insb
dec
xchg
mov
cwtl
out
jb
jge
jmp
call
insb
imul
dec
loop
dec
mov
push
pop
fnsave
mov
rcl
jg
loopne
inc
lds
rorb
fs
sub
pop
push
iret
cmp
and
aad
ja
lret
jae
cmp
pushl
push
xor
jge
rclb
push
push
push
pop
leave
ja
out
pop
pop
jbe
test
fcmovne
jmp
mov
gs
mov
mov
cmp
ret
mov
dec
out
pusha
xchg
dec
imul
pop
adc
ficoms
repz
clc
leave
pop
push
mov
jle
pop
insb
jne
push
and
dec
push
pop
mov
fcomps
pop
imul
nop
lods
push
icebp
pop
pop
push
int3
pop
pop
lods
or
or
mov
pop
lods
fcoms
sbb
les
shrl
test
out
sar
icebp
xorb
inc
negb
jg
sti
or
enter
aad
ret
call
fistl
mov
inc
std
in
clc
fmuls
sub
sbb
push
dec
mov
adc
push
dec
aaa
lahf
rcrb
mov
pusha
push
rolb
mov
mov
lock
pop
mov
pop
repnz
inc
push
dec
xchg
jb
jl
leave
xchg
mov
fcmovnu
xlat
in
sub
fdivl
xchg
cs
js
jae
pop
inc
daa
xchg
lahf
push
ficoml
enter
and
pop
imul
fdivrp
fldt
sahf
out
fucomi
aad
outsl
and
lds
fldcw
lahf
sahf
rolb
xchg
leave
pop
aad
insl
inc
fldt
leave
xchg
push
mov
insb
imul
imul
icebp
pop
fistpl
in
jg
addr16
loopne
ror
lret
dec
jmp
pop
in
fidivs
hlt
loopne
iret
pushf
loope
into
pop
jg
pop
lret
pop
push
and
pop
sbbl
lds
subb
dec
pop
mov
imul
dec
outsb
xlat
subb
pop
int3
add
xchg
int
jbe
dec
add
mov
and
mov
insb
inc
pop
push
jno
fs
jae
or
dec
test
jg
push
sub
popf
int
dec
mov
out
repz
pop
faddp
lds
js
jb
in
push
xor
push
js
mov
inc
test
adcl
fildl
jmp
dec
jmp
xor
je
sbb
sarl
aam
pop
mov
call
fdivrl
fcomip
push
out
andb
xlat
in
gs
test
or
add
gs
pop
push
inc
test
call
and
mov
outsl
push
or
cmp
fcmovbe
mov
mov
pushf
sub
jl
dec
add
dec
pop
inc
jl
push
lret
adc
stos
dec
popf
int3
inc
add
lret
leave
inc
negb
pop
shrl
push
xchg
loope
int3
inc
mov
xchg
pop
inc
mov
in
int
in
imul
addr16
push
dec
dec
xchg
test
mov
fnstcw
pop
insb
push
mov
dec
inc
call
dec
push
in
dec
xchg
push
xchg
sbb
sahf
ljmp
jecxz
leave
into
mov
jns
push
inc
pop
int3
fsub
ds
push
lret
loopne
mov
pop
inc
fstps
push
imul
std
icebp
inc
in
pop
das
inc
aad
push
or
jmp
lret
xor
mov
shll
xchg
cld
js
int
aas
ret
inc
sbb
imul
int3
add
xor
mov
fistpll
fcmovnu
fcompl
pop
dec
cltd
out
js
call
ffreep
vshufps
push
arpl
mov
dec
ret
call
mov
push
les
testl
rol
push
jge
aad
lret
rclb
xchg
mov
insb
jge
gs
dec
mov
lret
cmpl
sarl
mov
jl
pop
pusha
jg
dec
shlb
mov
mov
stos
into
mov
leave
jge
loopne
inc
rolb
sti
clc
xlat
rclb
add
js
sub
popa
movsb
lcall
xchg
pop
fstpl
repz
pop
cmpb
js
jle
inc
fldenv
lods
adc
push
cmp
and
int
fimuls
flds
pop
or
arpl
jge
out
dec
jnp
xchg
out
dec
jb
dec
fsubrs
fsubl
inc
push
dec
and
popa
dec
pusha
mov
ror
mov
fcomi
ret
movsb
in
push
sbb
mov
mov
test
testl
mov
aam
jb
popa
inc
jl
pop
pop
and
jg
aad
push
and
iret
loope
aam
mov
shrb
push
xor
xor
pop
dec
sarl
jmp
pop
or
into
icebp
and
lds
xlat
mov
aam
addr16
xchg
fcompl
xchg
fimuls
fists
mov
inc
movl
or
or
jmp
push
pop
aas
sbb
jle
dec
aad
mov
test
jbe
xlat
pop
gs
scas
gs
jmp
in
fneni(8087
jbe
dec
adc
mov
push
pop
dec
imul
dec
clc
push
push
jp
inc
dec
push
push
adc
push
cmp
imul
iret
outsb
iret
pop
ret
mov
pop
repz
ss
mov
dec
data16
push
out
neg
int
jg
insb
xchg
shl
dec
in
bound
push
inc
andb
lahf
push
mov
fcmovnu
imul
in
push
fisttpl
jae
pop
aam
pop
xor
and
stos
js
repnz
dec
dec
or
outsb
int3
mov
out
xchg
int
mulb
dec
xchg
xor
outsl
pop
fstpt
pop
iret
push
cmp
xchg
pusha
sbb
mov
cmp
out
popa
nop
aad
adc
xlat
ret
int
popa
dec
ret
mov
pop
leave
aam
push
fcompl
iret
add
dec
fsubr
fidivrl
adcl
push
enter
iret
cmp
lds
aad
mov
lret
mov
pop
aam
in
push
call
adc
sbb
leave
add
aad
lret
enter
inc
sub
push
inc
sub
int3
loopne
loope
int3
pop
cli
jp
xor
aad
jle
inc
fmulp
or
cwtl
fcmovnbe
dec
fsubs
dec
xchg
loopne
dec
fldenv
pop
jg
pop
iret
shrb
rcl
into
test
mov
mov
pushl
aad
in
dec
inc
lahf
test
or
lret
out
pop
in
dec
inc
mov
ds
adc
leave
fstps
dec
xlat
push
out
pop
cltd
sahf
cmp
xor
mov
cmp
push
pop
clc
or
insb
popaw
into
inc
mov
jae
xchg
cld
dec
pop
cmc
pop
pop
popa
rolb
fcmovb
stos
add
aad
call
add
pop
lret
pop
jmp
dec
pop
sub
xchg
pop
lcall
pop
in
popa
push
push
int
not
adc
mov
pop
dec
out
sub
sub
xchg
add
inc
push
fimuls
or
push
vprotb
orl
lock
xchg
addr16
out
pop
call
orl
push
inc
xor
jmp
fsubs
lahf
pop
cmp
addr16
push
stos
jmp
xchg
ret
mov
jge
fidivrl
jns
mov
push
loopne
call
fisttpl
aad
inc
jbe
vhsubpd
aam
pop
jbe
repz
repnz
dec
and
out
call
addr16
nop
cli
popa
xchg
aam
fmull
dec
pop
push
in
mov
push
shl
dec
sbb
call
mov
push
int
out
pop
orl
sub
dec
popa
mov
jne
jno
lret
push
stc
xchg
addr16
lcall
push
js
test
int3
scas
xor
adc
cmp
dec
inc
mov
pop
add
xchg
pop
jge
push
push
aad
adc
lret
cmp
fcomp
test
xchg
mov
sarb
adc
pop
add
test
mov
nop
inc
jge
pop
call
insb
adc
pusha
orb
pop
jmp
lret
push
andl
pop
in
loopne
adc
push
and
popf
sbb
roll
out
nop
mov
dec
mov
ds
inc
add
loop
pop
sbb
shlb
loopne
push
shll
dec
or
mov
and
inc
adc
xor
loope
in
or
pop
inc
into
rcr
fstpl
int
xor
ret
or
push
jnp
or
clc
int
mov
mov
xlat
repz
rcrb
pusha
push
dec
inc
mov
push
insb
or
add
icebp
xor
addr16
mov
loopne
loopne
ficoml
xlat
into
pop
arpl
dec
fsubl
cli
jmp
pop
mov
jg
leave
iret
ffreep
mov
inc
les
addr16
aas
sbb
inc
mov
or
fisubrs
popf
imul
or
filds
adc
rorw
aam
out
frstor
imulb
out
stos
jmp
jne
test
vphaddubq
inc
rcll
out
iret
div
dec
inc
dec
push
test
notb
fcomip
mov
lds
lret
aad
leave
xchg
push
pop
mov
add
dec
aam
push
dec
fdivs
mov
xor
in
cmc
fmulp
lret
xchg
mov
xchg
mov
dec
fcmove
fldl
gs
lret
ljmp
push
int
mov
push
jmp
insb
int3
mov
lcall
sbbb
mov
jge
jmp
dec
repnz
jae
cmp
cmp
mov
sti
in
ret
add
pop
lret
insb
dec
pop
dec
das
or
push
xlat
jge
fmul
pop
jge
cmp
jg
iret
sub
xchg
dec
inc
data16
call
in
jmp
imul
shll
push
add
and
out
xchg
ss
mov
int3
js
mov
rol
adc
jno
loop
mov
or
leave
mov
jmp
pop
js
out
ds
out
lret
dec
mov
sbb
movsl
fistpl
rclb
popl
aad
xor
pop
mov
jmp
addr16
idivl
aam
jae
lcall
pop
push
ljmp
call
in
test
out
pop
sar
iret
dec
sbb
pop
xor
xor
dec
in
loopne
mov
pop
addr16
sbb
iret
pop
dec
leave
enter
mov
rcr
les
dec
mov
gs
pop
pop
ficoms
mov
rcl
pop
fldenv
rorb
add
cmp
mov
decb
data16
fdivrl
push
jecxz
dec
js
mov
pop
cmpsb
test
dec
mov
aad
jae
loopnew
out
fnstsw
pop
sbb
push
sahf
xchg
es
enter
mov
fistpll
les
not
push
or
loope
pop
lret
or
ret
out
mov
js
add
call
addr16
dec
leave
inc
lret
pop
frstor
pop
cwtl
sbb
int3
and
popa
gs
xlat
sarl
cmp
jle
inc
leave
dec
aam
aas
dec
fisubl
testb
vcvttpd2dq
cli
pop
dec
dec
data16
pop
aam
inc
mov
in
out
imul
jmp
loopne
fsts
and
sub
add
aad
dec
data16
fists
roll
adc
sbb
std
sbb
or
jb
sti
fbstp
adc
pop
fmuls
ss
movsl
mov
loopne
leave
repz
popl
scas
jb
cmp
pop
dec
xchg
push
call
jmp
decb
push
fcomps
sbb
shr
add
in
sub
inc
inc
ficompl
lahf
push
sahf
push
scas
movsl
pop
jbe
aad
mov
push
dec
popa
pop
add
xchg
lret
dec
addr16
xchg
in
outsb
leave
fcom
imul
sbb
movsl
jae
lds
jl
xlat
jle
ficompl
jbe
into
pop
divl
fstl
leave
out
faddl
jge
jnp
rcll
gs
inc
call
push
push
imul
pop
iret
int3
fldt
mov
test
pop
enter
mov
gs
pop
xor
fistps
aad
dec
divl
jne
pop
loopne
pop
pop
inc
jp
push
pop
pop
xor
inc
push
xorl
jl
lret
dec
cmp
ret
ds
pop
mov
pop
mov
out
pop
fldt
cli
push
dec
fwait
lock
mov
imul
mov
inc
xlat
pusha
jmp
imul
jp
fiadds
add
inc
out
mov
rorb
sti
out
mov
test
gs
push
imul
jo
lret
ss
cli
xor
jmp
pop
cmc
cli
lret
addr16
lret
dec
add
inc
jno
adc
dec
or
mov
popa
push
iret
clc
cmp
sub
out
sub
loop
lds
inc
out
dec
fndisi(8087
jmp
fs
xchg
ret
or
sbb
es
aad
repz
icebp
out
dec
or
lret
jno
in
pop
aam
fildll
jmp
popf
int
dec
or
fcoml
jae
test
popa
xor
dec
outsl
push
xchg
xlat
jg
rcr
leave
mov
lret
clc
hlt
int3
rol
insl
pop
fiaddl
les
dec
pop
aad
repnz
aam
cmp
in
push
aas
imul
jg
enter
inc
aad
into
mov
pop
lcall
push
pop
sub
xchg
xlat
xor
jbe
data16
dec
push
fimuls
roll
pop
in
bound
jmp
jl
pop
in
call
xlat
imul
and
popa
fistps
inc
lds
int3
inc
shl
popa
scas
shlb
xchg
push
out
inc
subb
aam
or
push
lock
xor
out
mov
imulb
inc
shl
push
ds
adc
rorl
xchg
mov
xor
mov
push
call
ss
lea
fists
aam
sbb
fs
pop
shl
frstor
fstpl
push
push
mov
loop
push
sbb
int
outsb
add
dec
cli
faddp
fnstcw
push
mov
sti
push
in
mov
add
lret
call
mov
jmp
jle
pusha
shl
loopne
pop
jge
add
in
dec
fiaddl
push
push
stos
aam
lahf
jmp
clc
inc
add
cmp
clc
scas
and
and
push
aam
loopne
int
iret
xor
or
sbb
adc
iret
xchg
cmp
jp
fsubl
sarb
pop
in
or
xlat
add
pusha
xor
or
mov
in
dec
cli
fcmove
push
pop
mov
aam
addr16
lret
mov
shlb
loopne
iret
xchg
adc
pop
mov
aam
sub
into
fidivrs
xor
aaa
jg
push
sub
int3
push
aaa
imul
pop
test
fisttpll
xor
push
data16
cli
test
and
out
cmp
mov
push
or
insb
mov
ficomps
mov
pop
addb
in
shrb
push
repnz
fsubl
dec
pop
inc
out
xor
mul
sbb
push
cmp
iret
inc
insb
and
and
lahf
cli
push
imul
and
adc
mov
faddl
roll
mov
sbb
dec
ljmp
push
sub
imul
push
mov
fildl
fsts
in
dec
int3
cltd
jae
dec
fidivs
jmp
push
iret
fnstenv
mov
int3
aam
enter
loop
insb
add
out
xchg
lret
stc
loop
loop
fisttpl
and
fisubs
rcrb
pop
mov
imul
leave
pop
pop
mov
xor
in
add
out
movl
aad
mov
fsubl
daa
push
dec
fcomp
fldl
lods
pop
rcl
inc
aaa
mov
push
int3
fxch
pop
lea
and
fst
or
dec
inc
dec
mov
dec
push
pusha
sarl
test
push
loopne
repnz
int
jg
into
lret
push
int
fsts
mov
arpl
push
jge
fiadds
aam
cld
into
gs
pop
pop
lcall
lret
dec
lret
mov
rcll
lods
dec
xchg
add
pop
faddl
les
mov
addr16
jmp
popa
or
rcl
mov
lods
push
inc
into
fbld
push
call
jmp
aam
subl
jl
cli
fisubl
lds
out
push
inc
addr16
idivb
popa
push
push
dec
jg
inc
dec
ss
xorl
sbb
jno
jg
mov
lds
pop
sbb
jecxz
push
xor
aam
xor
xchg
add
inc
push
addr16
filds
pushf
pop
push
int3
jno
mov
xchg
out
mov
dec
cmp
frstor
test
rorb
sqrtps
sbb
mov
push
aam
xchg
jecxz
adc
jno
mov
addr16
xchg
mov
fimull
push
push
sbb
xchg
addb
lret
popa
and
test
into
lahf
addr16
add
imulb
enter
jne
push
int3
mov
jae
pop
adc
mov
iret
dec
icebp
push
pop
cli
imul
in
cmp
leave
shrl
jecxz
gs
xor
or
or
mov
dec
imul
sbb
shlb
mov
aad
fsubrs
nop
lret
inc
pop
jb
imul
dec
jle
lret
je
lret
sub
loopne
pop
insb
popa
sbb
dec
mov
gs
addr16
push
fildl
imul
xchg
fdivrp
dec
aam
dec
arpl
shll
lret
inc
xlat
push
mov
mov
rolb
rclb
out
push
gs
imul
popf
outsl
sub
inc
imul
pop
mov
dec
cli
fists
push
and
xchg
pop
fidivrs
mov
add
inc
fcoml
dec
jb
les
divl
js
testl
push
out
push
xor
push
andl
push
popa
sub
mov
and
stc
cmpsl
mov
call
fld
mov
test
les
pop
movsl
xor
into
outsl
pop
movsb
sahf
mov
add
push
jo
pusha
adc
xor
xchg
aam
cs
cmp
fsubrp
dec
sub
cmc
jg
push
xor
out
loopne
scas
mov
and
xchg
xor
inc
movsl
pop
mulb
fbstp
lods
in
loopne
dec
fimull
inc
xor
mov
clc
popa
xor
nop
fmul
inc
aas
dec
fisubs
outsl
call
out
mov
into
faddl
lret
xchg
mov
mov
push
jnp
mov
or
movsl
enter
rcr
pusha
push
insl
es
leave
movl
data16
jp
call
in
push
lahf
or
adc
repz
sbb
iret
rcrb
stos
jl
dec
pop
aam
fistpll
pusha
dec
out
adc
pmullw
mov
inc
sub
test
and
test
adc
pop
fcmovb
mov
jl
dec
dec
adc
pop
dec
lret
gs
dec
dec
aad
or
add
and
into
pop
imul
enter
int
mov
jb
lock
aad
add
bound
ss
and
mov
jecxz
call
mov
or
aam
inc
lds
xor
and
les
lret
mov
addr16
popf
loope
pop
push
out
stc
or
icebp
pop
add
or
dec
pop
pop
push
int
pop
test
arpl
dec
loopne
mov
int
movl
jbe
je
xchg
push
in
cmc
push
bound
call
jbe
imul
jl
lret
mov
add
pop
dec
clc
les
xor
gs
nop
inc
mov
ficomps
sub
addb
fimull
push
kandnw
movsl
cwtl
daa
into
aaa
add
pop
fildl
add
pop
jmp
dec
int
enter
sbb
or
inc
xor
aam
movsb
cs
fisubl
cmp
mov
es
jne
mov
testl
add
test
mov
enter
xlat
or
sub
mov
nop
push
xchg
loopne
xchg
add
adc
enter
cmpsl
sti
mov
fldt
icebp
loopne
pop
out
arpl
adc
inc
iret
lods
push
fisttpl
out
into
lea
notl
push
mov
lret
out
mov
and
jg
pusha
ror
repnz
and
and
dec
int
inc
aad
inc
pop
dec
loopne
push
ds
and
call
fnsave
pop
mov
rorl
leave
gs
inc
and
lret
mov
pop
movsl
stc
gs
int
fsubp
imul
inc
and
iret
and
dec
outsb
aam
mov
jp
rorb
add
aad
add
add
dec
into
xchg
cmc
lret
fcomi
lret
int3
pusha
ljmp
into
pop
aad
leave
lds
pop
iret
rorl
fists
out
enter
jb
fcompl
push
inc
fdivs
push
push
ffreep
pop
fisubs
and
jmp
dec
pop
push
inc
inc
test
popa
pop
outsb
ror
adc
enter
lds
mov
mov
dec
push
std
xchg
popf
in
insb
ds
dec
or
or
iret
adc
pushf
xchg
out
ss
mov
stos
std
mov
movsl
sub
dec
aam
xchg
rcrl
enter
fisttps
add
pop
push
addr16
sbb
dec
inc
and
sbb
jle
sbb
xchg
pop
lret
jge
into
pop
dec
jl
sbbl
in
aad
cld
lret
fsubl
arpl
pusha
push
push
cmp
imul
call
mov
xchg
xchg
mov
test
push
movsl
int3
mov
push
imul
dec
pop
dec
out
inc
loopne
jmp
ror
fsubl
int
or
mov
out
loopne
imul
lret
sbbb
add
xchg
in
out
push
mov
xor
mov
in
xor
lahf
pop
sub
jmp
fcmovu
call
jp
add
mov
mov
mov
sbb
out
sub
popa
pop
and
mov
imul
inc
loopne
push
bnd
push
stos
bound
adc
adc
cmp
dec
into
arpl
divb
ja
and
stos
pop
inc
push
push
loopne
lret
imul
mov
loopne
or
sbb
enter
fimull
xor
dec
pop
int
xlat
int
iret
mov
pop
mov
adc
dec
and
vpaddsb
xchg
lret
mov
mov
movsb
mov
cs
test
popa
or
imul
loopne
aas
or
orb
dec
addr16
int3
push
daa
xchg
fisubrs
push
aam
inc
push
prefetcht2
dec
xor
test
jno
dec
adc
loopne
lret
inc
adc
adc
add
out
push
into
inc
shll
push
nop
shlb
subb
pop
insl
lret
mov
test
outsl
xchg
mov
rcr
cs
pusha
ss
push
fiaddl
mov
test
sub
lods
cmc
sbb
mov
inc
push
dec
data16
into
mov
out
xchg
xor
lret
inc
jmp
dec
int
int3
in
or
mov
inc
lods
roll
lahf
push
addr16
xchg
pop
scas
and
jmp
fbstp
jae
nop
pop
out
bound
out
push
negl
adc
stos
data16
pop
into
jge
leave
xchg
inc
mov
xchg
repnz
aad
inc
fdivs
jnp
cs
aad
lods
mov
ss
roll
lret
call
iret
rolb
in
inc
sub
sahf
sub
jge
out
pop
dec
test
xchg
push
ficomps
cmp
iret
lock
test
adc
aaa
pop
mov
aad
mov
jmp
out
xchg
sub
xchg
lea
idivl
pop
mov
or
jecxz
ret
push
aas
jp
addr16
cmp
dec
push
and
cmpsl
scas
cmp
int
test
cmp
xchg
fisttps
mov
dec
pop
pop
ficompl
out
sbb
dec
into
cmp
fadd
lods
loop
inc
xchg
mov
mov
outsb
mov
pop
cs
iret
rolb
mov
xor
jmp
lea
divl
mov
mov
rorl
stos
ret
insb
in
xor
sbb
jp
cltd
aaa
xchg
mov
lret
and
lods
ljmp
mov
lahf
pop
idivb
jmp
cs
in
inc
int3
aaa
add
cmc
jbe
push
fldt
dec
mov
in
shll
gs
lds
cmovbe
mov
and
out
sbb
ss
imul
mov
xchg
pop
add
daa
cmc
xchg
gs
mov
push
pushf
rcrb
scas
movsl
scas
fisubrs
aaa
mov
ss
pop
xor
insl
in
pop
xor
add
and
mov
xchg
add
enter
aad
fcmovnbe
push
mov
cltd
into
out
out
mov
fs
repz
pop
roll
dec
out
and
sahf
adc
sbb
out
cmp
pop
rcl
inc
popa
addr16
lock
out
fsub
mov
sub
push
mov
or
inc
fcompl
inc
inc
xchg
adc
out
out
enter
iret
mov
dec
movsb
cld
out
mov
mov
int3
lcall
movsb
call
xor
addr16
test
sahf
repz
iret
dec
sub
cmpl
xchg
fists
jge
inc
mov
xchg
pop
fimull
fiadds
xchg
stos
mov
into
rcrb
inc
sbb
fsubl
loop
push
xchg
pop
clc
mov
aad
push
stc
int3
fcmovne
mov
icebp
aad
lret
fcom
push
push
pusha
add
push
rolb
pop
vandnps
ror
je
jbe
cmpsb
dec
sahf
mov
fimull
mov
ss
dec
xchg
inc
lock
int
push
or
dec
insb
mov
pop
es
rorb
movb
pop
mov
leave
fadd
mov
dec
push
sub
mov
cmp
mov
pop
fcoml
push
fcmovb
pop
jmp
loopne
mov
push
and
adc
lret
mov
jb
jg
pop
pop
fsts
sbbb
mov
dec
dec
pause
rorl
push
add
xlat
inc
pop
fldl
jmp
fwait
stc
fistpll
enter
call
inc
fdivrp
and
cld
dec
add
addr16
mov
or
pop
push
mov
repz
mov
sbb
loopne
or
gs
jl
push
stc
pop
fimull
inc
push
cs
imul
inc
pop
pop
pop
dec
iret
pop
ss
outsl
push
mov
lds
cmp
repz
int3
push
popa
pop
pop
fistpl
jno
jmp
lret
dec
pusha
in
shlb
inc
leave
lret
icebp
pop
fsubs
int
adc
dec
pop
dec
insb
adc
in
cmpsl
push
pop
in
out
dec
pop
clc
test
rcl
dec
lret
pusha
lds
cltd
in
jb
loopne
push
mov
imul
inc
dec
xchg
ljmp
push
lods
imul
cmp
notl
out
loopne
mov
test
inc
ds
fistpl
push
pop
pop
popa
push
jmp
in
push
test
loop
jmp
jnp
dec
loopne
decl
rorb
jmp
mov
leave
iret
repz
loopne
mov
inc
mov
xlat
in
pop
leave
aam
jl
push
fistps
cmpb
dec
inc
adc
add
rorb
push
push
jge
into
inc
add
inc
fstps
out
mov
enter
dec
lret
and
sarb
pop
xlat
push
fildll
ffreep
push
xor
bnd
xchg
inc
test
out
inc
jge
in
push
push
int
leave
push
pusha
aam
lahf
mov
fisubl
lods
dec
push
add
dec
int
jmp
dec
dec
std
lret
addr16
pop
inc
mov
fmull
adc
imul
xchg
fst
scas
sbb
call
loopne
cmp
iret
dec
enter
loope
data16
inc
fs
sbbl
rcr
or
pop
add
or
mov
and
cltd
fcompl
dec
pop
pop
aam
pop
mov
add
dec
dec
call
fmuls
aam
rcl
int3
loope
call
icebp
inc
pusha
imul
push
mov
push
lds
dec
push
lea
jae
pop
flds
push
imul
push
imul
enter
adc
add
xlat
gs
pop
int
pop
jecxz
fcmovu
push
inc
mov
pop
pop
clc
fisttpl
dec
pop
ss
dec
shlb
cmp
cli
push
pop
fxch
push
call
jnp
enter
fisttps
lods
xchg
push
sbb
ljmp
dec
add
ss
lea
jmp
inc
pop
push
mov
mov
popa
push
aad
jno
push
push
mov
loopne
fcoms
inc
scas
ffree
mov
fsts
push
pop
inc
cli
and
xlat
les
or
frstor
mov
pusha
dec
add
out
inc
pop
cmp
jmp
jbe
iret
dec
add
lock
add
into
and
lret
pop
and
les
xchg
lea
and
in
xor
or
js
leave
enter
gs
inc
push
shrb
loope
call
inc
subps
pop
sub
sub
leave
les
mov
out
xchg
fisttpll
in
filds
add
pusha
mov
imul
push
sti
or
test
mov
xlat
loopne
ficomps
mov
fmull
mov
pushf
push
loope
insb
aam
popf
pop
cmp
sub
test
sar
popa
fcomp
push
fbld
fcomps
movsb
adc
inc
into
push
sbbb
loopne
pop
mov
imul
inc
shrl
xchg
inc
aam
lret
out
into
call
dec
mov
fistpll
push
push
insb
push
dec
and
fistl
pop
rclb
loopne
jg
pop
pop
int
cltd
push
dec
out
pop
movl
mov
xchg
int
inc
cli
dec
gs
and
push
sub
and
fmull
jb
jge
fadds
cmp
and
and
jp
pop
dec
dec
jg
flds
int
sbb
cmp
loope
pop
int3
mov
inc
pop
jle
dec
sub
or
in
lret
adc
jg
iret
popa
ds
pop
test
inc
dec
out
dec
push
idivl
push
gs
jmp
pusha
aam
clc
and
sbb
rcr
out
dec
leave
lea
and
dec
fisttpll
fninit
push
add
and
xlat
push
and
das
faddp
mov
dec
rclb
out
aas
neg
jle
pop
les
call
fsubl
pop
pop
and
jl
pop
dec
vpshaw
xor
adc
jbe
lret
pop
and
lds
fstps
movb
movsb
cmpl
push
dec
mov
iret
aad
cli
push
mov
vcvttpd2dqy
push
stc
decl
jbe
data16
dec
add
dec
dec
fcmove
lds
fcmovne
into
int3
iret
jmp
xchg
out
xlat
mov
aam
push
jp
push
bswap
pop
and
inc
iret
sbb
arpl
das
stc
inc
push
popa
pop
fnsave
loop
add
test
clc
pop
inc
test
ss
test
insb
jg
popa
enter
adc
arpl
cmp
mov
data16
pop
in
push
repz
pusha
pop
jmp
dec
xlat
leave
and
dec
fildl
in
fists
jge
add
int
dec
add
push
shll
movsl
xchg
mov
mov
push
push
test
ds
add
dec
dec
inc
lea
mov
xchg
roll
xchg
pop
pop
or
test
push
dec
fucomp
push
jbe
call
inc
iret
aam
inc
mov
sbb
mov
rorb
push
das
subl
mov
inc
iret
dec
pusha
inc
xor
cld
jmp
into
xchg
dec
test
imul
pop
in
dec
or
push
push
adc
pop
pop
jle
inc
or
pop
mov
add
inc
jge
jg
popa
negl
ret
adc
pop
js
mov
xchg
jg
inc
fcmovu
mov
inc
fmull
icebp
cli
pusha
nop
not
or
insb
cmp
adc
or
push
iret
addb
pop
cmp
mov
in
adc
popa
stos
fadds
cmp
and
ficoml
fstpl
push
lret
xchg
jge
dec
in
pop
adcl
dec
dec
enter
dec
adc
xchg
mov
dec
into
lret
inc
addr16
aad
sub
pop
enter
dec
scas
test
dec
mov
int
pop
fimull
in
mov
clc
fmul
stos
sbb
sar
lret
cmp
dec
and
push
loope
push
enter
cs
mov
mov
ret
imul
push
cmp
test
pushl
loopne
test
xor
push
sti
jle
mov
jecxz
push
jno
out
mov
mull
repnz
fistpl
ficomps
lahf
les
or
dec
out
sbb
or
shll
fiadds
mov
jp
addr16
fisubl
call
int
fildll
pop
icebp
pop
insb
aad
lcall
sbb
mov
sbb
gs
mov
repnz
das
arpl
cmp
mov
jmp
dec
js
inc
pop
mov
mov
pushf
popa
mov
lret
pop
jno
mov
fisubs
cwtl
sub
mov
mov
popa
and
rclb
mov
jp
lods
les
dec
call
aas
cmc
shrb
pop
pop
or
dec
test
shr
pop
fadd
fstpl
fistpl
add
dec
xchg
in
int
out
sahf
icebp
mov
sarl
inc
fistpl
fnsave
lret
repnz
scas
dec
repz
and
into
jo
rclb
dec
pusha
push
mov
mov
frstor
arpl
data16
call
dec
jl
inc
mov
pop
aad
push
dec
imul
fistpll
repnz
sbb
dec
pop
sub
xor
fisubs
xor
scas
jno
fisttps
pop
scas
ds
scas
lret
pusha
cmpl
and
pop
jmp
fucomip
inc
inc
mov
lahf
mov
fldt
data16
fistpll
inc
xchg
adc
or
popa
pusha
sahf
mov
xchg
ljmp
dec
imul
push
add
dec
inc
fisttps
cwtl
sub
lret
loop
pop
dec
aas
sbb
mov
add
dec
loopne
fxch
aam
or
cld
jbe
dec
repz
fcmovnb
mov
aas
in
in
shlb
inc
pop
mov
lea
mov
aad
cltd
iret
fsubr
mov
shl
insb
push
mov
int
fnstenv
mov
pop
dec
inc
lds
xchg
fucomip
test
xlat
fcmovu
dec
and
fstpl
and
dec
cmp
sub
loop
pop
add
jb
sbb
sahf
xchg
mov
call
mov
and
cmp
int3
in
fstps
js
rorb
mov
or
shl
pop
loopne
push
pop
dec
cltd
sarl
vcvtpd2dqx
mov
mov
add
dec
pusha
int
aad
dec
inc
loopne
clc
inc
add
int3
repnz
inc
testl
pop
ret
jno
sbb
mov
jne
imul
aad
jg
call
push
cmp
jmp
enter
repz
popa
or
pop
dec
jo
lret
push
and
leave
pop
lret
imul
mov
fabs
enter
lret
rorl
fdivs
out
pop
repz
andb
pop
add
mov
cli
dec
fsub
shrb
cmp
mov
int
jecxz
jge
ror
out
shrb
inc
xchg
dec
push
fisttpll
gs
and
push
leave
dec
sbb
push
jmp
pop
js
imul
pop
fdivrs
lea
aam
into
dec
outsl
int3
pusha
pop
mov
fisttpll
dec
push
xchg
lea
pop
leave
push
fistl
adc
loopne
inc
dec
in
icebp
adc
jmp
das
loop
loop
jecxz
jae
fcmovnbe
into
pop
jmp
call
pop
out
jb
add
out
call
push
mov
shl
adc
jl
lret
lcall
aaa
aad
dec
int3
mov
xchg
dec
inc
lret
or
inc
movsl
cld
test
aad
inc
sbb
int3
mov
mov
int3
push
adc
inc
punpcklbw
adc
dec
inc
fcmovnb
push
jle
aam
dec
cli
mov
push
test
icebp
push
stos
cmpb
fcomp
sub
dec
fcomi
out
shr
gs
repnz
pusha
les
out
cltd
cmpl
int3
mov
mov
in
stos
xchg
mov
dec
mov
fsubrl
jg
xchg
pusha
in
pop
dec
pop
inc
jbe
out
add
pop
inc
outsb
fnstcw
pop
out
dec
add
pushf
dec
sbb
fneni(8087
xor
push
jne
push
mov
xlat
mov
dec
out
enter
xchg
call
subb
add
pop
lret
push
pop
pusha
nop
and
clc
and
int3
lret
loopne
inc
fld1
sbb
hlt
push
fmulp
in
ds
fimull
inc
stc
clc
dec
pop
or
or
aad
imul
pop
negb
sbb
pop
rcll
aad
aad
shr
dec
sbb
or
mov
imul
inc
xchg
in
jbe
shlb
insb
aas
idivb
jno
lcall
pop
add
loope
pop
lds
test
fstl
dec
out
scas
push
dec
mov
callw
lds
jg
frstor
lock
push
lret
loop
aad
aad
jge
rolb
cli
test
jmp
or
imul
inc
fnstcw
mov
push
pop
lret
pop
int3
xchg
pop
push
gs
inc
lret
shrl
push
enter
xchg
mov
push
repz
sbb
lret
cmpsl
mov
adc
pop
repnz
jg
les
lahf
les
push
fsubrl
jb
add
aas
out
jle
aam
pop
fdivrl
mov
and
aas
enter
jnp,pt
imul
lock
jmp
and
imul
inc
fistps
pop
inc
mov
pop
adcl
mov
push
pushl
inc
clc
push
pop
mov
sarb
loopne
cmpsb
push
scas
mov
pop
pop
in
fsubl
leave
out
aas
insb
ss
out
out
inc
mov
pop
into
lret
aam
push
push
aas
adc
push
fninit
enter
ja
pop
inc
or
dec
pop
sahf
mov
aad
aaa
cltd
lods
call
loopne
dec
fstp
cltd
in
les
jle
pop
aad
int3
dec
xlat
inc
icebp
dec
jmp
popl
leave
dec
xor
faddl
push
push
ficoml
inc
jge
push
aas
cmp
fmul
inc
push
mov
sbb
jae
inc
adc
stos
jmp
into
add
in
push
or
xor
jae
mov
popa
cwtl
mov
sbb
and
adcl
pop
lock
imul
test
fs
ret
ffreep
inc
imul
mov
mov
cli
leave
push
in
imul
out
clc
push
loopne
sub
or
cmc
lret
les
dec
jmp
pop
xlat
in
dec
jge
out
pop
add
pop
pop
movsb
mov
xchg
jmp
cmp
mov
jge
int3
inc
push
enter
leave
inc
mov
in
fsub
je
mov
push
movb
pop
dec
ja
cmp
leave
call
iret
or
push
mov
mov
mov
dec
jbe
jg
pop
pop
mov
shl
pop
dec
test
enter
add
fdiv
dec
mov
or
pop
xlat
dec
and
pop
push
push
add
jle
fcomps
jge
inc
dec
pop
andl
iret
xor
adc
xchg
mov
add
nop
ficoms
xlat
sbb
mov
lret
scas
popa
fldpi
pop
gs
push
insb
icebp
adcb
fbld
sub
popa
inc
fst
or
aad
dec
aas
shrl
dec
lret
jge
lds
rol
rolb
icebp
sarl
into
fimuls
add
jmp
dec
pop
jl
ffree
enter
pop
shrb
adc
pushf
push
loope
int
mul
dec
stc
je
repnz
insb
out
mov
xor
out
dec
and
loopne
push
inc
nop
push
jl
shrb
push
adc
in
loopne
out
dec
mov
pop
push
in
push
xchg
sbb
pop
aam
enter
jae
iret
int3
lahf
fcmovnu
pop
cltd
mov
adc
push
arpl
dec
das
dec
mov
cmp
pop
loopne
add
les
test
ss
jae
sbb
fidivrl
push
xlat
shl
dec
leave
insb
gs
dec
out
cli
aaa
in
stc
xchg
sub
mov
xchg
xchg
inc
xchg
iret
ret
push
pop
leave
sub
pusha
push
push
adc
push
pop
adc
faddl
cltd
pop
pop
gs
mov
mov
test
loopne
mov
push
clc
mov
sub
in
lret
sbb
inc
out
mov
addr16
sbb
mov
mov
imul
cmpsb
pop
pusha
mov
pop
push
into
mov
lahf
cli
jl
out
push
call
xchg
pop
inc
cld
sub
icebp
jb
ret
push
shr
and
sub
cli
loopne
dec
dec
aas
push
out
ja
pop
fistpll
or
push
fcom
mov
ljmp
mov
dec
mov
jnp
in
pop
test
into
fcomps
xchg
push
lret
fsubl
stos
gs
push
les
mov
scas
jne
dec
dec
push
pop
imull
mov
arpl
lds
ss
repz
sbb
pop
inc
loope
dec
dec
dec
push
imul
push
aas
lret
shl
pop
fisubl
fnstsw
mov
add
jmp
push
dec
or
imul
mov
push
jb
pop
pusha
aam
mov
iret
imul
dec
insb
cld
lods
jmp
enter
mov
frstor
loope
mov
mov
shr
testl
addr16
shrb
outsb
push
fldcw
lds
push
and
js
in
lock
hlt
pop
pusha
fcompp
loope
into
decl
rorb
inc
out
fadd
add
jno
shl
gs
ficoms
out
int
hlt
ffree
rcr
pop
pop
push
dec
sbb
fcmovbe
int3
orl
adc
mov
jge
xorl
leave
aaa
xchg
pop
sti
fcmovnu
lret
fildll
stc
mov
pusha
mov
gs
pop
inc
in
leave
adc
adc
jmp
jmp
jns
clc
gs
addr16
call
ficompl
les
jecxz
je
inc
mov
fst
int
aam
pop
dec
ficompl
aad
pop
jno
imul
shl
dec
iret
cli
fcom
lret
dec
sub
cmp
loop
cld
ret
add
aad
xchg
jno
pop
dec
ljmp
mov
lea
repnz
scas
dec
dec
mov
mov
loop
push
test
pushf
loope
call
mov
mov
push
or
int3
mov
xor
addr16
cmpsb
mov
jecxz
dec
ds
scas
int3
ror
lret
fmuls
out
pop
mov
movsl
shr
cltd
and
stos
jle
lret
out
ljmp
inc
push
pop
cmp
push
and
clc
fldcw
sub
mov
pop
push
jecxz
test
fsts
inc
aad
sub
push
enter
pop
stc
and
lea
push
push
xchg
pop
dec
sub
push
fbld
paddusb
dec
loopne
cmp
push
int
lahf
jmp
push
pop
mov
pop
pop
push
gs
movsl
aad
dec
push
add
dec
test
inc
std
dec
pop
popa
mov
clc
fisttpll
stos
andb
inc
int
lods
out
loop
inc
dec
pop
popa
inc
ss
imul
push
pop
mull
lahf
pop
fstpl
negb
ficomps
aam
sbb
xchg
fwait
jg
fcmovbe
xor
mov
xchg
ror
out
repnz
rcr
lcall
mov
call
pop
cmc
adc
aam
push
int3
mov
test
sub
mov
fsts
pop
cmp
insb
sbb
fbstp
jl
push
pop
leave
in
xor
out
dec
insb
mov
std
in
les
pop
inc
dec
jl
dec
outsb
mov
dec
addr16
icebp
cs
test
out
xlat
ficomps
dec
jl
int
mov
mov
leave
dec
iret
jmp
fadds
fstpl
outsb
dec
loope
aam
add
out
lret
push
xchg
mov
pop
gs
lock
pop
xchg
addr16
push
xlat
sbb
out
jle
les
jle
fdivl
push
fisubs
inc
clc
mov
inc
jl
inc
cmpsb
sti
aad
pushf
push
push
pusha
les
add
enter
popa
icebp
mul
mov
pop
mov
lock
dec
aas
out
jle
out
ja
add
pop
dec
enter
inc
dec
lret
mov
push
popa
pusha
addr16
fsubl
xor
dec
and
call
push
nop
push
loopne
push
pop
dec
fs
scas
mov
enter
fidivs
stos
mov
jbe
clc
push
js
repnz
dec
fistpl
pop
lret
pop
dec
cmp
sub
icebp
push
dec
xchg
mov
iret
int3
pop
or
in
fiaddl
rclb
sub
and
fcomp
pop
xchg
push
pusha
leave
xchg
cwtl
add
or
in
and
push
jp
aas
loop
mov
xor
jl
iret
adc
cmp
push
xchg
fldt
push
jb
sar
xchg
in
dec
xchg
in
gs
fsubl
negb
cld
push
pusha
or
enter
cmp
ret
jne
fwait
sub
dec
fld
cmp
pop
outsb
jl
popa
out
jl
mov
pusha
out
and
cltd
fcmovu
aad
fwait
mov
and
or
and
int3
mov
add
mov
cmpsb
insb
pusha
es
xor
int3
fistl
out
imul
gs
sti
pop
and
shrb
nop
ret
inc
dec
test
xlat
lods
dec
jle,pn
call
fiaddl
mov
rcrl
cltd
imul
mov
ds
aad
loopne
xchg
xchg
shlb
dec
push
mov
daa
sub
cld
pop
push
dec
mov
inc
lret
lret
pusha
aam
loop
dec
in
cmpb
lds
or
movsl
subl
pop
popw
insb
aas
mov
lret
lahf
dec
pop
cwtl
mov
push
jge
call
pop
sbb
xor
push
icebp
stc
bound
dec
xlat
ljmp
imul
xchg
pop
inc
int
jmp
inc
int3
inc
fsubr
dec
xchg
in
xor
loope
push
into
jb
ffree
xchg
inc
test
aad
xchg
push
mov
dec
enter
mov
aaa
aad
add
out
lds
fadd
fisubl
out
and
inc
pop
imul
and
nop
xchg
popa
inc
enter
push
lret
test
ret
rcll
ret
pop
xor
xlat
sbb
mov
fiadds
fcmovu
out
loope
push
iret
ljmp
cmc
int
sti
add
dec
pop
push
aad
jnp
imul
push
push
push
sbb
xchg
fldcw
pop
jmp
out
in
mov
fldt
stos
inc
cmp
mov
fcomp
cmpsb
aaa
int
movsl
xor
subl
fadd
into
int
out
jge
fnstsw
rcll
insb
into
cli
xlat
fistpl
push
and
pop
push
fmuls
roll
stc
pop
imul
nop
push
mov
movsl
icebp
sbb
xlat
mov
aam
dec
inc
inc
in
imul
jmp
xchg
lea
pusha
lcall
loopne
ret
hlt
fst
add
out
mov
loopne
cwtl
stc
rcrl
addr16
popa
aas
int
pop
testb
scas
fwait
sbbb
enter
idivb
insb
inc
lods
mov
push
mov
and
and
sub
inc
test
aad
fxch
push
pop
repz
aam
pop
dec
push
jge
cltd
mov
outsb
enter
dec
fsub
or
xor
lock
jmp
inc
add
adc
inc
push
mov
jb
andb
les
push
imul
fld
push
pop
frstor
lods
xor
dec
xlat
jl
dec
pop
dec
add
push
xchg
gs
das
cmpl
add
jge
sarl
int
add
xchg
leave
push
repz
jmp
in
rorb
add
pop
fcoml
mov
sub
shr
inc
pop
xchg
les
fidivrl
pop
fstps
daa
shll
loopne
scas
out
test
fsubr
fstpl
jl
leave
filds
pop
pop
mov
push
push
daa
jg
dec
mov
push
push
fnstsw
lahf
dec
inc
outsl
dec
int
mov
push
movsl
cmpsb
jge
push
int3
in
iret
popf
aad
rolb
cmpsl
jae
jge
data16
daa
and
test
fidivrs
sahf
inc
add
jle
out
lds
pop
mov
add
inc
imul
xlat
pop
mov
pop
dec
shlb
out
int
jl
push
aad
inc
mov
pusha
push
enter
pop
gs
repz
mov
loopne
insb
fwait
out
imul
clc
dec
jle
call
jmp
pop
inc
aam
jg
inc
inc
dec
xor
ds
dec
dec
int3
stos
push
mov
pop
pop
stos
pop
mull
popa
adc
dec
out
add
call
fisubs
mov
inc
xor
aad
jae
in
or
dec
cwtl
into
jae
pop
pop
pop
dec
stos
ds
inc
dec
inc
inc
mov
aas
aaa
pop
or
gs
fstpl
mov
fisubl
addl
ficomps
pop
loopne
push
adc
inc
roll
fsubs
mov
in
pop
sub
out
jmp
fsubp
fmuls
or
mov
pop
loop
out
push
dec
negl
imul
adcb
jmp
cmp
jg
push
pushw
clc
add
adc
pop
sahf
mov
popa
inc
jns
loopne
jno
insb
movd
ds
push
xchg
lds
and
pop
test
cmc
fisttpl
data16
fdivrl
push
push
cmpsb
lods
jge
push
mov
rcrb
push
mov
imul
fimuls
and
inc
push
mov
fistps
add
mov
popa
fstl
rorb
mov
fldenv
hlt
outsl
enter
cli
pusha
int
pop
or
jp
pushf
pop
popf
jecxz
jae
loopne
cmp
pop
inc
out
xlat
pop
bound
dec
inc
shlb
call
lret
jmp
push
dec
fstp
test
sub
movsl
lods
or
jle
int
and
fadds
ror
sub
push
push
mov
inc
aaa
xchg
lret
gs
js
mov
mov
out
dec
dec
mov
cli
gs
rcrb
or
xor
enter
fstpt
or
dec
pop
aas
orl
popa
shl
les
fistl
lock
loop
int3
mov
dec
or
push
test
xchg
popa
dec
mov
dec
push
pop
jae
ljmp
xchg
xchg
movsl
int
or
dec
jmp
sub
mov
in
cmp
push
popa
jg
lds
dec
js
rep
stos
and
loopne
repnz
pop
out
pop
inc
adc
test
sarb
out
dec
data16
push
ret
out
inc
fsubrs
inc
inc
cmp
cld
xlat
in
aad
int3
leave
in
fidivrl
rcrb
into
and
inc
repz
in
and
mov
push
xchg
hlt
scas
rcrb
pop
pusha
ficompl
imull
outsl
ret
test
test
lret
imul
int
mov
pusha
pop
out
insb
xchg
dec
push
imul
jl
adc
aam
fcmovu
jge
inc
push
jp
jl
and
lret
mov
movl
fcomp
adc
leave
fistpl
out
xlat
mov
push
lea
push
inc
mov
movsb
add
dec
dec
adc
cwtl
inc
jmp
shrb
fcomps
movsl
cltd
dec
out
fdivrl
cmp
addr16
push
lret
aad
push
mov
aas
outsl
ds
and
pusha
jecxz
jmp
xchg
push
dec
inc
sbb
mov
add
ljmp
aad
lods
push
stos
lea
mov
or
push
rcrl
jne
pop
stc
leave
mov
loop
in
mov
or
icebp
or
or
jno
inc
ds
out
push
aas
sarb
rcrb
and
push
aam
jecxz
push
repz
int3
enter
fisubs
shl
push
cs
push
mov
rorb
mov
insb
loopne
cmp
fdivp
out
add
popa
inc
aad
jg
push
out
adc
enter
xchg
ljmp
leave
inc
fcmovne
sti
dec
frstor
dec
pop
outsl
lret
and
pusha
ljmp
pop
fxch
inc
inc
out
mov
and
test
fidivs
pop
ror
inc
addr16
lret
mov
dec
inc
fildl
dec
pop
fnstcw
scas
lcall
cmp
popfw
cld
outsl
pop
popa
cmp
ret
dec
jecxz
push
in
icebp
leave
xchg
push
lahf
pushf
iret
dec
mov
aad
data16
imul
loopne
ror
fistpl
out
into
scas
jmp
and
ljmp
dec
bound
enter
aam
mov
inc
lods
out
add
mov
inc
and
inc
sahf
adc
movsl
dec
fisttpll
push
adc
jne
sub
shrl
dec
add
dec
and
add
jmp
test
add
aad
sbb
cmp
shlb
xchg
gs
mov
fisttpll
imul
clc
ds
in
leave
inc
adc
and
dec
xrelease
xor
push
out
shrb
pop
call
popa
inc
aad
je
cmp
int3
pop
jnp
fisttpl
sahf
mov
push
std
fcoml
insb
loopne
mov
cmp
out
mov
aas
fnstcw
mov
adc
ror
lds
icebp
pop
push
pushf
enter
or
xchg
inc
rclb
mov
jmp
xor
push
test
loopne
popa
pop
inc
pop
xchg
lret
dec
inc
les
xor
int3
or
enter
call
data16
insl
stc
mov
in
xchg
cld
cmc
movl
sbb
add
jmp
pop
fisttpl
fucomp
push
aas
jg
and
in
gs
jbe
dec
fnstsw
enter
shlb
push
in
lock
push
dec
insl
ret
cmp
inc
aad
popf
push
mov
push
rcr
cmp
neg
faddl
imul
loopne
imul
dec
lret
lods
add
push
call
xchg
rclb
or
dec
fdivs
cmpsb
aad
push
jb
push
mov
loopne
inc
or
jmp
insb
xacquire
imul
fisttpll
pop
ja
ljmp
push
inc
fstp
xor
dec
xlat
out
aam
arpl
call
aam
fimull
xchg
mov
push
or
mov
mov
and
into
sbb
ss
int3
dec
dec
push
fsts
pop
jl
pop
add
dec
inc
shrb
ljmp
leave
push
repz
aad
enter
inc
js
cli
add
jo
push
inc
push
fbld
mov
iret
push
gs
pop
push
imul
fxch
iret
not
jg
inc
cld
fbld
icebp
nop
and
xchg
icebp
jb
inc
pop
mov
pop
push
sub
pop
lret
add
pop
inc
ds
out
inc
mov
leave
pop
imul
out
fisttpl
dec
inc
inc
pop
pop
lds
push
pop
pop
add
fxam
xlat
aad
adc
aam
test
movsl
push
dec
dec
xchg
adc
call
dec
ds
repnz
call
stos
cmp
aam
arpl
rcrb
inc
pop
dec
cmp
int3
popa
test
push
xchg
movsl
into
icebp
xchg
lret
out
iret
fnstcw
jg
push
shlb
dec
fcoml
lods
rcrl
jecxz
popf
lret
push
fwait
xlat
dec
shll
mov
lea
mov
popa
fistps
jae
mov
test
rcrb
dec
dec
out
lds
add
xchg
lret
fcoms
test
dec
mov
int
push
push
jl
imul
mov
mov
mov
dec
les
cld
dec
insb
into
push
adc
cmpsl
or
mov
dec
fnstenv
pop
std
pusha
push
sarl
fldl
pop
imul
aad
lret
pop
test
mov
into
test
addr16
pop
mov
jl
push
mov
xor
adc
mov
jmp
negl
fistl
ljmp
pop
rolb
pop
push
sahf
dec
dec
jno
xchg
cmp
add
dec
push
test
icebp
xchg
loop
jnp
lret
jge
mov
in
imul
mov
push
push
mov
inc
inc
adc
test
mov
dec
xchg
loopne
loope
dec
insb
je
rcl
ljmp
orb
pop
fnstenv
dec
inc
pop
in
call
push
leave
add
mov
and
lcall
pop
mov
inc
xchg
jmp
lret
call
push
out
pop
mov
pop
mov
mov
fstl
add
ficoms
rcrb
pop
pop
loopne
mov
pop
aaa
mov
inc
fsubrl
mov
sar
push
addl
pusha
in
inc
mov
loopne
jg
aad
sbbb
push
mov
mov
inc
jmp
leave
mov
loop
int3
xchg
pop
imulb
push
lret
test
jle
push
ret
pop
lds
pop
inc
jg
inc
dec
jae
inc
cld
pop
fsubl
out
jecxz
inc
jl
push
cmp
cmp
lret
into
sbb
int
push
add
cmp
pop
aad
subl
test
jmp
mov
iret
jl
int3
les
std
push
daa
add
dec
lds
mov
sarl
push
ficomps
cmc
push
dec
push
sbbl
lret
or
pop
push
in
adc
pop
dec
dec
pusha
ret
pop
push
dec
fmul
jmp
jle
push
dec
cltd
nop
inc
ljmp
mov
popa
leave
xlat
dec
test
mov
jg
pop
imul
pop
pushf
xchg
ds
lret
jmp
lret
call
ds
test
jmp
pop
imul
popa
jmp
xor
cmp
jl
dec
push
loope
int3
fisttps
adc
pop
cmp
xor
pop
inc
jno
sub
cmp
ficompl
enter
pop
dec
dec
shll
mov
pop
xlat
xor
popa
leave
fisttps
test
gs
ficoml
frstor
pop
outsl
leave
mov
in
pop
movl
jne
aad
xchg
imul
jno
fldl2t
rorb
jge
pop
xlat
push
ds
lcall
lea
dec
jecxz
push
add
aad
pushw
lret
fnstenvs
sti
dec
fdivl
fwait
push
fwait
inc
fdivrs
loopne
iret
xor
inc
mov
mov
xchg
sub
insb
mov
int
and
mov
fistpll
and
push
adc
aad
pop
pop
adc
mov
mov
mov
mov
out
dec
in
jg
dec
into
mov
or
imul
dec
push
add
push
enter
nop
addr16
int3
dec
dec
out
fcmovu
pop
inc
sarb
xchg
int3
add
xor
dec
sahf
iret
push
xchg
push
xor
jge
or
cli
lods
pop
push
mov
mov
push
imul
pop
jbe
call
or
mov
pop
mov
fistl
jge
push
addr16
fnstcw
call
push
in
out
addr16
cli
iret
jmp
lret
stc
pop
jae
int
mov
push
repz
pop
push
fsubs
mov
enter
inc
jle
loopne
mov
movsl
dec
mov
call
pop
js
push
mov
test
aam
into
dec
and
mov
pop
test
pusha
sub
fcmovne
cld
out
imul
aad
and
push
inc
std
int
dec
pop
into
sbb
imul
loopne
push
leave
inc
push
push
mov
out
pop
leave
insb
sub
test
mov
dec
shrl
xchg
adc
mov
pop
fcomps
pop
cmp
fldcw
addr16
xor
pop
add
dec
or
std
out
pop
cmp
xlat
jno
icebp
or
jno
sbb
out
arpl
pop
fldl
out
push
fisttpl
nop
lds
rep
mov
mov
jbe
test
pop
popa
int
or
lret
es
mov
xchg
stos
or
dec
fcmovne
and
xor
leave
xchg
mov
int
jl
out
aad
rep
imul
aas
movsb
les
addr16
add
dec
push
mov
call
cli
fistps
into
pop
dec
inc
mov
dec
inc
jmp
lock
int
fcoms
cmp
push
stos
repnz
adc
push
je
pop
loop
inc
jg
pusha
aas
dec
sub
pop
cmpsb
out
shlb
inc
dec
pop
inc
stos
cli
hlt
int
shll
fidivl
cli
int3
pop
in
dec
push
dec
rclb
shll
inc
enter
imul
xlat
sbb
dec
inc
dec
iret
add
enter
call
int
add
je
pop
pusha
mov
mov
test
leave
in
pop
iret
xchg
pop
mov
gs
mov
push
xlat
mov
out
adc
add
pop
imul
mov
add
push
testw
imul
fsubrl
mov
call
int
lea
pop
cmc
add
dec
movsb
repnz
lahf
outsl
rclb
inc
xor
loop
int
shll
iret
call
jmp
push
cwtl
fdivrl
orl
and
stos
inc
xchg
movsl
mov
mov
add
bound
dec
push
push
or
out
dec
int
add
daa
aad
negb
push
sub
mov
aas
aaa
add
outsl
fnstenv
mov
clc
dec
movsb
add
imul
mov
add
fcmovne
push
fcom
add
mov
aad
dec
aad
xor
fbld
push
in
fdiv
jle
dec
pusha
fsubrl
inc
inc
dec
or
and
pop
fwait
imul
fisttpll
out
dec
add
sub
stc
call
gs
leave
clc
push
pop
add
out
push
cmp
ss
mov
filds
daa
dec
ffree
mov
shr
mov
pop
addr16
in
xchg
imul
pop
sbb
pop
shl
cmp
je
lds
inc
mov
rcrl
out
pop
mov
lds
xchg
faddp
push
mov
clc
lds
add
xchg
mov
push
call
fsubp
pop
popa
mov
dec
int
gs
dec
xlat
lods
inc
gs
out
jnp
push
gs
mov
inc
ror
iret
dec
movsl
dec
mov
test
imul
dec
fisttpll
pusha
push
dec
test
rcrb
out
and
add
inc
fld
leave
fcompl
xchg
cmpl
push
ret
clc
xor
fsub
data16
ret
les
aad
popa
cli
mov
cld
pop
and
into
cli
loopne
xchg
push
leave
and
es
or
out
cli
aad
data16
pop
addb
mov
fidivrl
lods
xor
mov
cwtl
push
jmp
fstpt
popa
xchg
mov
xchg
out
lret
sub
dec
jle
in
push
jge
push
mov
pushf
icebp
jmp
imul
push
dec
jnp
fisubl
clc
mov
scas
push
jmp
inc
pop
int
int3
sub
inc
mov
push
cmp
cmp
push
dec
aad
xchg
inc
jl
inc
aam
add
in
and
pop
out
dec
pop
pop
mov
insb
dec
push
pop
pop
mov
cmpsl
jbe
adc
popa
aad
inc
lds
push
leave
iret
icebp
leave
pop
or
dec
xchg
lret
pop
inc
pop
push
push
cmpsl
fstl
imul
pop
pop
in
pop
shll
dec
je
or
lcall
int
push
mov
loopne
xor
inc
pop
aas
test
xchg
out
frstor
and
gs
mov
les
pop
popa
aas
dec
pop
ds
xchg
movl
call
cmc
lds
mov
rcrl
dec
lea
fcmovnu
push
aad
jb
xlat
lret
shl
push
push
int
inc
cltd
pop
popl
sub
add
dec
pop
xchg
fistpl
pop
out
imul
push
ret
add
in
adc
inc
jg
dec
pusha
divl
push
leave
push
aam
insb
inc
iret
mov
push
outsb
mov
pop
aas
cmpsl
shlb
mov
iret
pop
push
push
mov
repz
lret
movsl
les
insb
test
inc
scas
inc
dec
xor
sub
les
dec
inc
out
fstpl
jno
and
push
mov
out
int3
lds
xchg
push
sahf
fstpl
dec
dec
pop
movb
into
and
dec
add
add
or
mov
jb
scas
jl
fistl
lods
dec
aad
clc
out
jp
mov
aad
inc
rcll
in
xlat
cmc
loopne
iret
sahf
shrb
addr16
loope
pop
pop
pop
lret
js
pop
je
clc
push
jp
fdivrs
lods
mov
test
and
out
push
mov
jmp
dec
push
push
jg
enter
mov
add
leave
sbbb
loope
dec
jmp
dec
cld
addr16
movsl
jle
fldl
rolb
test
adc
fldt
pop
pusha
ss
xchg
out
pop
bound
imul
inc
iret
mov
jge
inc
out
cld
inc
dec
in
cmp
sbb
popa
test
push
xchg
xlat
pop
lret
cli
es
sub
push
add
pop
fstl
aad
ror
dec
iret
clc
mov
orb
lea
dec
push
cmpsl
gs
mov
fimuls
testb
sub
dec
adc
add
pop
pop
push
inc
dec
xchg
stos
dec
pop
daa
leave
pop
aad
mov
cmc
pop
fwait
insb
addr16
jbe
push
in
inc
pop
dec
lret
jge
leave
std
insb
add
xchg
into
inc
pop
nop
pop
mov
push
sub
jge
call
jle
pushf
imul
insb
dec
mov
pusha
sub
inc
stc
in
or
xchg
fmul
dec
hlt
dec
mov
sti
inc
flds
int3
ror
push
aad
pop
or
dec
inc
shll
inc
pop
dec
dec
fstpt
inc
orb
dec
imul
shlb
lds
call
push
xchg
push
outsb
inc
push
cmp
mov
xchg
jle
pop
jmp
mov
pusha
adc
pop
pop
mov
vpcmpgtw
jmp
fadds
mov
orb
or
daa
fimull
mov
test
rol
ret
xchg
dec
jge
lds
and
pop
faddl
adc
xchg
leave
xchg
fstpl
pop
pop
imul
pusha
int
loopne
movsl
push
pop
loop
cmp
vpunpcklwd
fcomp
jmp
daa
mov
pop
pop
int3
icebp
aad
fisttps
leave
call
fnsave
out
xchg
push
mov
push
fcmovnbe
jmp
rcr
adc
imul
out
popa
and
test
arpl
popa
dec
fsubs
imull
int
into
movsl
mov
dec
push
dec
or
and
mov
jmp
mov
les
pop
leave
lret
or
ficoms
sbb
daa
and
inc
ss
loopne
pop
loopne
fmull
dec
das
ljmp
dec
pop
push
addr16
xlat
mov
incl
fucom
insb
sarb
adc
dec
leave
cmp
neg
pop
dec
test
into
shlb
sub
shll
cmpb
ss
les
cltd
fldt
mov
fidivrl
pop
in
loop
push
repz
dec
lret
pop
test
xchg
nop
in
into
fdivl
mov
adc
int3
cmp
and
addr16
and
out
repnz
ss
jge
dec
jl
jle
push
or
mov
iret
push
fwait
dec
dec
jbe
pop
dec
stos
add
addr16
repnz
and
xor
movsl
mov
dec
fucomip
mov
mov
into
pop
nop
xchg
or
xlat
test
xlat
inc
sarl
ret
loope
fsubl
leave
add
and
loope
dec
dec
dec
jp
pop
pop
in
cld
cmp
nop
jp
pop
ret
add
fisubrs
mov
pop
int
aad
pop
rcr
rcll
add
popa
push
mov
leave
inc
addr16
xchg
dec
out
sub
scas
dec
int
ljmp
call
jmp
push
dec
iret
aad
mov
dec
data16
and
push
enter
arpl
fst
dec
call
test
cld
pusha
xchg
stos
int
arpl
test
pop
dec
enter
mov
arpl
shlb
mov
cmp
out
jb
call
add
addr16
pop
mov
lret
push
fcmovnu
adc
call
out
pop
ffreep
aas
mov
insl
dec
mov
cmp
lret
lret
xlat
out
inc
gs
fisttpll
insb
fidivs
mov
add
aad
sub
fucomip
bnd
stos
jecxz
movl
data16
mov
subb
fstpl
int3
stos
xchg
test
aad
xchg
fldl
mov
fstl
js
pop
js
repz
lea
dec
lret
mov
in
jbe
cli
imul
addr16
enter
ret
int3
mov
int
insb
mov
add
push
push
push
popf
jmp
dec
cltd
sbb
arpl
stos
or
mov
push
fwait
xchg
inc
jl
dec
imul
shr
dec
test
out
test
mov
xlat
mov
imul
dec
jnp
jmp
inc
xor
test
pushf
les
push
push
test
sbb
fmull
fmul
push
data16
out
mov
cmpsb
inc
jne
dec
rol
push
imul
lds
mov
gs
out
popa
mov
xchg
nop
inc
popa
mov
aam
loop
xchg
or
inc
and
dec
jno
add
push
enter
pop
into
mov
fstpl
popa
cmp
les
out
cmp
lret
dec
mov
sub
inc
imul
cltd
or
fisttps
jnp
lret
mov
fcmovne
ss
fmull
fistl
add
insb
data16
nop
push
mov
jl
dec
jl
and
dec
adc
call
into
adc
pop
rcrl
fsubr
pop
push
inc
jl
xbeginw
jle
push
aam
notl
mov
add
pop
dec
lods
in
mov
inc
out
push
test
test
shlb
dec
push
dec
fisttpll
dec
mov
rcrb
pop
addr16
dec
sbb
ljmp
dec
gs
cwtl
xlat
neg
inc
pop
lahf
mov
xchg
stos
xor
sbb
int3
cmc
pop
pop
movsl
popa
jl
int
fidivrl
push
loopne
sbb
outsb
jecxz
fcoms
jmp
lret
mov
test
enter
push
fcoms
shll
inc
jg
out
insb
pop
lahf
cmp
add
rcl
inc
shll
inc
lret
jnp
lret
xor
aad
fstpl
clc
int
mov
imulb
adc
jg
bnd
daa
add
pop
pop
push
inc
jg
iret
repz
adc
inc
loop
xchg
pop
popf
pop
jge
fmul
dec
pop
pop
cli
scas
call
aad
hlt
pop
push
frstor
ret
push
inc
mov
pusha
fisttpl
jmp
in
rorl
inc
rcrb
or
addr16
repnz
inc
jmp
enter
je
fidivl
cmp
in
pop
lret
leave
lds
enter
xlat
mov
push
add
fsubp
sbb
insb
adc
push
test
pop
popa
pop
int3
adc
pushf
mov
dec
push
jle
leave
stc
dec
push
inc
mov
dec
dec
sbb
xchg
ffree
mov
inc
and
fcmovnbe
rcl
pop
mov
mov
clc
fsts
rorl
dec
ret
push
call
pop
out
fstps
jmp
incl
adc
jg
inc
fcompl
sarl
push
fucompp
push
inc
pop
insb
lods
stc
jbe
fsubrl
push
dec
push
sub
insb
add
ficoml
test
xor
pop
inc
imul
cli
dec
addr16
dec
pop
lds
add
mov
out
addr16
std
clc
fsubs
push
mov
pop
int3
and
push
mov
movb
outsl
popa
and
out
loopne
bound
jmp
popa
aam
fbld
inc
push
es
into
lret
mov
fistl
inc
shlb
push
ret
dec
cwtl
fists
repz
push
sbb
lahf
sar
loopne
push
push
adc
out
test
xchg
movsb
pushf
test
pop
lret
fnsetpm(287
inc
add
sbb
mov
js
out
cmpsb
push
popf
in
inc
dec
imul
fucomi
pusha
orb
push
loopne
ret
scas
pop
mov
fisttps
iret
pop
fsubrs
mov
push
orb
adc
loope
aad
add
jmp
ljmp
inc
popa
dec
fists
push
ficompl
push
popa
mov
lcall
pop
leave
jl
push
ds
mov
dec
mov
xlat
out
inc
fistpl
pop
fcomp
lret
jp
testb
xlat
dec
cmp
push
sahf
pop
call
aam
jae
jmp
clc
jl
in
adc
add
pop
popa
push
cmpsl
insb
dec
dec
add
push
dec
jmp
mov
int
leave
push
dec
arpl
lahf
push
jmp
and
cltd
int3
inc
popa
aam
sub
das
xor
jge
pop
add
dec
fistpll
std
popa
popf
in
cli
int
push
fnstenv
mov
inc
inc
pop
rolb
addl
or
addr16
loope
jmp
push
ficoml
dec
arpl
xchg
test
mov
cmp
pop
repnz
dec
fistpl
mov
pop
push
or
insb
icebp
pop
fnstcw
into
data16
mov
shl
mov
pop
sarb
jae
out
xor
int3
scas
pop
in
aaa
out
aad
pop
sub
lret
gs
outsl
push
movb
out
popa
clc
loopne
stc
sbbb
stos
inc
mov
lret
add
fstpl
mov
cmp
lods
js
repnz
add
les
push
cmp
jle
dec
inc
xor
call
cmp
aad
rcl
pop
jmp
mov
lds
push
test
add
pop
lret
dec
xlat
push
ret
fbld
lahf
ljmp
leave
lahf
stos
test
mulb
jb
and
imul
repnz
add
jno
loopne
pop
push
push
dec
mov
aam
xchg
sub
in
lcall
push
pop
add
add
dec
push
xlat
out
or
out
pop
push
jle
fldcw
pop
dec
nop
ss
subl
out
stos
mov
adc
mov
leave
lret
ficomps
lahf
dec
mov
or
dec
iret
daa
testb
aas
mov
lods
mov
enter
and
outsl
sbbl
push
dec
pusha
push
pusha
sbb
loop
call
aad
dec
enter
fsub
add
les
xlat
jg
pop
inc
flds
pop
fstps
mov
mov
aad
fildll
pop
fnstcw
popa
lods
mov
sub
mov
sub
mov
imul
loopne
enter
jno
in
pop
loope
into
push
dec
in
pusha
enter
int3
jmp
out
dec
int
or
mov
and
mov
out
stc
decl
cmpl
and
pusha
pop
insb
mov
push
in
popf
iret
addr16
dec
dec
inc
int3
sbb
das
jb
push
popa
jecxz
loopne
imul
inc
loope
pop
ljmp
mov
mov
imul
pop
mov
int3
dec
insl
add
in
inc
leave
and
jmp
pop
out
pop
cli
pop
pop
and
adc
loopne
jp
insb
dec
dec
ret
pushf
xchg
dec
dec
push
fiadds
jmp
and
cmp
dec
lds
test
push
nop
loopne
sarb
jl
adc
dec
lret
in
les
lods
cmp
mov
aad
jmp
mov
pop
push
xchg
fldcw
push
inc
cmp
pop
ret
sbb
xchg
mov
push
push
shrl
inc
mov
mov
aad
pop
in
lret
inc
push
ret
enter
xadd
outsl
aad
mov
inc
cmp
decb
push
jb
fisubrs
movb
inc
sub
loopew
out
push
loope
dec
fistl
call
loopne
mov
jl
fildl
add
hlt
inc
enter
mov
negl
loope
push
scas
test
repnz
inc
xchg
mov
adc
xlat
daa
pusha
xchg
xor
push
fldcw
cli
cmp
enter
into
fists
cltd
mov
js
int3
sub
jno
das
call
cwtl
loop
aaa
adc
pop
dec
int3
mov
dec
in
mov
sub
les
or
mov
add
xlat
pop
lea
rorl
inc
pop
repnz
int
aam
ljmp
negb
add
push
cmp
ljmp
dec
movsl
in
fcmove
push
xlat
filds
push
add
sbb
in
dec
popa
xlat
push
std
mov
clc
insb
stc
ret
mov
out
pop
inc
xor
mov
add
call
pusha
dec
repnz
inc
shlb
inc
jbe
pop
repnz
mov
fwait
sahf
out
pop
addr16
orl
add
push
and
call
nop
push
jge
mov
xchg
mov
push
xlat
addl
dec
in
dec
jmp
in
push
enter
aad
and
imul
pop
xlat
fnstsw
mov
dec
inc
leave
ret
pop
and
repnz
es
lret
and
sbb
dec
popa
call
movsb
jmp
int3
sub
push
shlb
adc
push
inc
mov
jl
mov
jle
push
shlb
loope
aad
dec
lds
xchg
into
push
push
mov
in
dec
mov
test
fimull
adc
lret
ss
inc
out
pop
dec
imul
shll
dec
out
fnstcw
enter
inc
rcrl
jl
push
iret
jge
mov
aad
dec
adc
imul
pusha
data16
sbb
popa
pop
shlb
dec
movsl
adc
dec
cmpsb
loope
fidivrl
pop
push
adc
loopne
mov
dec
stos
mov
cld
aad
les
pop
jmp
pusha
xlat
iret
fmuls
fcomp
bound
jno
jno
in
rcrb
mov
jno
mov
sarb
repnz
pop
repz
xlat
enter
fstl
push
pop
mov
inc
orl
mov
ror
sbbl
fnstsw
ljmp
leave
addr16
enter
fxch
xor
mov
sbb
leave
mov
into
and
pop
ljmp
loopne
cmp
shl
pop
dec
js
call
pop
call
cmp
es
into
icebp
mov
int3
out
js
shll
fisubs
jmp
fs
push
lds
mov
inc
aam
fistps
in
mov
in
into
andb
iret
pop
pop
lds
inc
sub
int3
pop
lds
push
lret
pusha
dec
imul
sbb
mov
push
int3
mov
push
dec
or
repnz
pop
fstpl
jl
aad
dec
fcomps
int
les
cmp
sbb
xchg
repz
dec
mov
gs
fcmovnb
add
insb
leave
pop
dec
add
mov
mov
inc
pushf
int
and
mov
dec
out
xchg
in
adc
out
push
outsl
mov
or
ja
ss
ret
push
pop
jmp
dec
filds
into
mov
pop
or
fistps
insb
inc
mov
leave
sub
fisttpl
std
mov
outsb
xchg
shrb
lahf
xor
sti
mov
out
loop
insb
mov
inc
fmul
lahf
mov
push
in
add
les
lret
testl
insb
ffreep
inc
or
pop
push
dec
icebp
scas
pop
xor
add
mov
fst
rcl
push
lret
jecxz
dec
test
or
loopne
sbb
dec
lret
fistpl
add
test
jge
fld
pop
mov
ss
inc
fiadds
fwait
int3
push
pop
shlb
out
stc
push
jl
enter
jnp
sub
pop
aam
ficoml
cmp
test
cwtl
ret
aaa
ror
add
ss
push
push
xchg
js
cli
mov
dec
dec
push
imul
repz
mull
gs
dec
push
lret
loopne
popa
or
shr
gs
int
mov
lret
out
dec
dec
aam
mov
sti
jl
cli
jns
mov
ficoms
mov
out
dec
mov
lcall
aas
xor
or
test
fisttpll
inc
loop
fbstp
push
vmovups
jge
push
divb
xor
dec
or
mov
loope
push
push
imul
inc
mov
pop
pop
fsubp
jg
rorb
mov
push
daa
aad
and
inc
clc
or
adc
dec
dec
push
sub
fmul
cs
jecxz
enter
bound
adc
pop
fcomp
mov
aam
and
mov
inc
int3
xchg
aad
rolb
and
cmpsb
add
lret
push
fsts
lcall
imul
mov
enter
loopne
lret
pop
aad
jl
inc
fdivrs
lret
xlat
fistl
dec
outsb
lds
leave
sbb
lret
cld
mov
jp
pop
dec
call
pop
loopne
jle
push
pushf
test
jg
pop
jge
leave
aad
daa
aad
test
rcr
addr16
xchg
sbb
mov
inc
test
out
cmp
fnstenv
leave
xchg
fimuls
inc
call
lret
pop
lea
dec
insb
pop
dec
inc
pop
fisttpl
incb
out
xchg
jb
les
lret
jg
push
dec
imul
mov
frstor
fmuls
xlat
imul
mov
and
fcmovnu
ret
imul
xor
fstpt
test
jbe
les
push
push
mov
sbb
add
imul
add
fsub
pop
nop
pop
loopne
xchg
div
xchg
xor
aad
test
addb
pop
push
dec
pusha
pusha
inc
xchg
dec
loopne
nop
int
gs
or
lret
call
push
jl
pop
pop
xchg
sbb
inc
lret
jmp
push
out
pop
in
das
jmp
xchg
aas
inc
call
rclb
cmpsl
data16
test
jge
fstps
iretw
inc
sub
mov
lret
push
icebp
rcr
enter
cmp
push
sbb
mov
addl
cs
and
les
in
mov
jo
jge
dec
aad
mov
inc
aam
inc
push
inc
dec
daa
pusha
pop
and
mov
loop
mov
push
jno
adc
test
fprem1
repz
test
dec
dec
aaa
ret
gs
lret
pop
pushf
push
or
imul
jmp
dec
andb
jge
dec
mov
call
xlat
jp
jnp
and
fildll
icebp
jb
outsb
fisttpll
ret
shlb
sarl
les
mov
out
movsb
loopne
ret
test
test
push
push
sbb
pop
repz
and
dec
out
inc
mov
leave
fsubr
sub
fs
dec
jge
mov
in
dec
popf
stos
push
mov
inc
cwtl
jae
adc
inc
jmp
ret
out
dec
sbb
mov
push
popf
dec
dec
repz
fisttpl
dec
rclb
pusha
mov
addb
gs
dec
pop
pop
inc
addr16
pop
rolb
adc
iret
les
les
adc
xchg
jmp
repnz
ss
pop
lds
mov
out
popa
imul
rorl
xchg
pop
jge
insl
enter
jmp
aas
imul
fbstp
fsubl
fnstcw
mov
pop
pop
test
and
in
or
into
loope
fcompl
out
imul
loop
addr16
jae
jp
pop
or
jge
insb
jle
popa
sbb
push
flds
in
jmp
int3
fstpt
xchg
dec
scas
aad
test
fst
int3
push
fsubrl
jmp
js
out
jnp
in
cmpsl
in
mov
cmovns
lods
filds
cmpb
shl
mov
xlat
add
jmp
inc
sti
inc
dec
push
sbb
mov
mov
pop
inc
lahf
push
dec
sbb
loopne
fndisi(8087
out
push
nop
inc
cld
insb
aad
lret
xchg
aad
push
cmpsb
imulb
idivl
int3
xor
push
pop
pop
cmp
jmp
push
mov
loopne
and
stos
out
jbe
xor
xor
pushf
shl
pop
movsl
dec
and
fimuls
jp
inc
pusha
aaa
xchg
cltd
pop
fcmovnu
scas
insb
gs
jmp
enter
test
out
pop
jge
cmp
nop
dec
dec
lret
inc
jg
iret
je,pt
inc
call
aaa
mov
xchg
lcall
lret
push
insb
mov
rorl
fiaddl
dec
mov
aad
sbb
int
xor
imul
cli
fistl
call
mov
popa
mov
js
pop
push
sahf
mov
mov
data16
dec
push
into
lret
jbe
fstl
test
mov
iret
mov
loope
fldcw
pop
or
push
add
jl
insb
push
pop
mov
lret
fbld
xchg
arpl
add
roll
mov
mov
test
into
dec
rclb
das
aaa
cli
sbb
sahf
test
out
jmp
sbb
insb
push
adc
pop
cmp
out
cmp
dec
jg
leave
dec
hlt
xchg
cmp
push
addb
pusha
or
xlat
adc
leave
jp
push
mov
push
dec
lret
arpl
scas
aad
out
add
enter
dec
fimull
int
pop
loopne
mov
ficomps
inc
dec
imul
dec
push
jno
add
sbb
dec
aam
fisttps
int
enter
call
insl
push
daa
fsubl
inc
aad
int3
xchg
xchg
out
idivl
inc
in
popa
into
pop
in
bound
int3
jns
fcoml
movsl
enter
mov
clc
insb
inc
xlat
imulb
jg
rolb
in
dec
ret
pop
imull
call
int
addr16
dec
inc
jge
cld
cltd
jns
repnz
aad
out
les
icebp
add
dec
repnz
mov
aam
test
imulb
test
push
or
outsl
dec
jle
sarb
sbb
rolb
inc
iret
cmc
lds
test
arpl
add
fsubl
int3
lret
xchg
add
and
adc
push
movl
push
out
out
jge
dec
push
add
movsl
mov
jbe
mov
push
fildl
inc
in
dec
arpl
xchg
sbb
test
cwtl
data16
cld
loopne
or
dec
push
cwtl
cld
cmp
sgdtl
pop
xlat
data16
fnsave
lret
add
pusha
js
aam
add
addr16
pop
adc
dec
mov
jg
xlat
pop
mull
sbb
insb
out
jmp
dec
push
movsb
pop
rorl
dec
int
cmpsl
aam
dec
iret
mov
inc
fldt
frstor
inc
inc
cmc
fcmovne
pusha
adc
addr16
fimuls
jno
dec
lds
pop
jmp
cli
dec
aam
inc
int
fstps
bound
cmp
sub
mov
dec
xchg
idiv
pop
push
aas
cld
push
fildll
in
out
in
stos
in
hlt
dec
leave
rorl
mov
lcallw
xor
loop
cli
mov
filds
fsubl
in
add
sub
inc
mov
call
dec
clc
jle
dec
jmp
inc
fldenv
push
xchg
sbb
cs
jmp
inc
jbe
dec
int
xlat
aad
pop
stos
add
dec
fildl
pop
leave
outsb
gs
into
sub
fucomi
pop
out
fs
and
push
int
icebp
test
pushf
fs
jge
lret
pop
pop
jle
into
cmpsl
inc
sarb
shl
inc
push
loop
dec
push
xchg
fdivl
mov
dec
inc
add
aam
leave
imul
ret
fisttps
push
jl
push
pop
int3
cmp
xor
mov
rorb
xlat
dec
mov
in
pop
fdivs
dec
mov
push
mov
inc
push
fisubrs
dec
pop
dec
sbb
daa
les
leave
pop
xchg
pop
icebp
daa
dec
jl
pop
pusha
push
jp
jl
push
jle
dec
js
sarb
shl
sar
gs
dec
mov
repnz
shr
lret
pushf
mov
xchg
pop
adc
mov
mov
test
pop
pop
add
test
gs
sbb
or
sar
sbbl
int3
cli
mov
pop
fistpll
push
inc
xchg
les
into
loopne
faddp
pop
imul
and
imul
popa
xchg
shr
mov
cmovb
pop
pop
and
lret
fcmovnu
mov
mov
jmp
int
dec
push
push
pop
rcrl
pop
call
mov
xor
test
repnz
scas
mov
and
mov
popa
pop
adc
pop
aam
inc
mov
dec
out
test
xor
pop
mov
andb
inc
mov
pop
push
popa
ss
lds
dec
dec
add
loopne
call
inc
int3
jbe
push
fiadds
frstor
inc
inc
les
push
mov
hlt
fisubrl
les
jl
leave
fcmovnbe
add
gs
mov
mov
and
and
rorl
lret
pop
mov
into
push
loope
loopne
push
int
call
push
adc
or
movsb
cli
fsubrp
insb
aad
fcoml
stos
dec
push
pushf
pop
leave
in
add
test
fcomps
mov
pop
iret
mov
test
mov
js
inc
movb
mov
xor
cmp
or
or
lret
shl
inc
xlat
add
call
push
jp
pop
flds
sti
inc
movsl
jbe
adcb
push
mov
add
bound
jmp
cmc
dec
mov
outsl
fstl
enter
inc
jmp
jmp
int3
fcmovne
and
push
push
cmp
cmp
adc
in
mov
xchg
xor
lods
repnz
into
std
jle
aas
fidivl
and
addr16
out
pop
out
out
mov
pop
fidivrl
mov
inc
push
pop
insb
leave
clc
pop
test
ror
mov
faddl
pop
pop
popa
icebp
lahf
iret
imul
roll
in
mov
cmp
out
int3
fistps
leave
fs
ss
adc
iret
pop
mov
inc
add
int3
enter
es
dec
les
push
cmp
call
dec
inc
mov
int3
dec
clc
cmpxchg
mov
aad
gs
push
xlat
imul
pop
pop
push
cmp
les
and
push
out
jmp
sub
int
aaa
pop
mov
push
dec
lret
xchg
lods
dec
lea
aad
test
ror
mov
xchg
push
movsl
ds
xchg
out
cmp
loope,pt
aam
pushf
sbb
push
and
xchg
aad
imul
roll
pusha
fisubrs
fisttpl
fs
xchg
xor
push
inc
dec
adc
into
lret
dec
xchg
int3
fidivl
cmp
rcr
sbb
jae
xchg
jecxz
mov
idivl
pop
fimuls
data16
repnz
rcrb
push
xchg
out
sti
out
push
fs
push
pop
loop
dec
divb
testb
xor
mov
rcr
add
push
cwtl
data16
cltd
push
fmull
and
mov
notb
dec
iret
mov
loopne
jmp
int3
cltd
jne
mov
leave
faddp
lds
ss
gs
push
cmp
stos
out
push
xchg
je
popa
pop
mov
jl
dec
cli
and
int
rcrb
and
into
iret
out
movsb
pop
call
dec
push
sarl
lods
js
pop
jp
aad
fstpt
out
and
ror
imul
in
pop
and
mov
aad
add
sbbb
pop
or
push
dec
leave
pop
aad
fldt
out
sbb
pop
inc
jg
data16
lea
add
dec
into
call
mov
xchg
js
repz
into
push
arpl
enter
fldl
aad
sbb
out
pop
dec
data16
mov
mov
xchg
cmp
jmp
pop
leave
dec
fisubl
mov
jae
mov
push
push
gs
imul
fcomps
cmpsb
dec
sti
movsb
stc
imul
inc
repnz
dec
xorl
fcomip
xchg
out
push
push
xchg
inc
leave
imul
rclb
mov
call
push
es
jnp
xchg
rorl
test
pop
outsb
fistps
mov
dec
inc
mov
mov
mov
pop
rorl
dec
leave
ds
dec
pop
ret
push
dec
adc
jle
fcompl
in
call
rcrb
xlat
pusha
dec
addr16
jmp
loop
push
addl
push
jmp
fimuls
pop
xlat
clc
mov
xor
repnz
int
insb
fucomip
pop
rcrl
ret
push
icebp
dec
fsubl
jae
stos
mov
out
cmp
js
lcall
lahf
mov
fldenv
xchg
int
lea
jl
dec
pop
inc
jmp
inc
js
push
xchg
dec
xor
mov
cli
pop
inc
push
jp
push
gs
test
pop
jne
fadds
add
push
ror
lds
mov
cmp
in
dec
fs
fldcw
pop
stos
fcmovb
les
pop
popf
mov
call
imul
push
sar
adc
rolb
out
dec
pusha
test
inc
push
test
out
sub
pushf
ret
fstl
inc
pop
enter
jle
in
mov
jp
pusha
xor
sbb
out
xlat
scas
add
int3
mov
cmp
inc
push
mov
inc
jb
js
mov
in
ss
int3
jp
pop
jge
in
out
hlt
inc
loopne
scas
mov
push
dec
out
jmp
call
pop
int
orl
jmp
call
or
push
and
adc
dec
pusha
gs
mov
aad
mov
push
pop
inc
dec
data16
dec
addl
inc
mov
jmp
inc
flds
aam
or
mov
idivl
js
sub
dec
std
jle
inc
sbb
inc
shrl
jae
dec
pop
and
jecxz
push
mov
inc
stc
fldt
aad
xor
hlt
iret
or
mov
out
jbe
addr16
lea
add
enter
push
dec
cli
fxch
inc
xchg
in
and
test
leave
fcmovu
aad
push
aam
mov
gs
fstps
jmp
rcrb
jle
pop
dec
pop
fcmovbe
cmp
ror
lods
lret
mov
xor
push
mov
pusha
sub
add
lret
js
dec
pop
cld
sbb
out
xor
mov
push
jmp
dec
out
mov
pusha
dec
aas
leave
mov
fcmovne
adc
icebp
sub
aad
frstor
mov
repz
fstps
fnstsw
pop
inc
gs
jge
mov
int3
or
xchg
dec
jle
fcmovu
dec
pop
call
push
inc
add
add
pop
out
insb
mov
mov
push
push
mov
stos
into
bound
jbe
jge
fnstcw
jle
mov
dec
out
mov
jecxz
in
mov
aam
ss
out
addr16
dec
push
fcmovne
mov
test
inc
adc
or
xor
loopne
int3
push
lret
sub
scas
pusha
jnp
leave
cld
jmp
dec
vshufps
les
rorb
fdivl
pop
dec
arpl
jg
insb
inc
pop
mov
imul
sti
and
adc
les
imul
and
lock
mov
loopne
pop
add
pop
mov
outsb
enter
fstp
pusha
or
push
jl
add
dec
inc
mov
imul
xchg
xchg
punpcklbw
pop
xor
rcrb
insb
out
adc
xchg
leave
rcll
enterw
add
iret
pusha
push
mov
ljmp
dec
sbb
hlt
push
xor
cmp
fdivs
les
xor
inc
sbb
pop
jg
push
or
add
rolb
jmp
jecxz
lret
enter
fucom
mov
pop
mov
out
cmpsl
mov
test
fucom
dec
lds
dec
inc
xchg
mov
add
pop
inc
mov
add
sbb
push
mov
aam
pop
inc
push
push
mov
cmp
xchg
pop
out
push
sbb
into
inc
jg
pop
lds
popa
imul
jp,pt
int3
mov
fistps
aam
idivl
leave
shl
jge
xchg
jg
mov
pop
lds
popa
mov
mov
sarb
dec
aam
dec
dec
mov
enter
jp
dec
pop
data16
or
push
xchg
adc
dec
pop
in
dec
sub
sarl
mov
xor
pusha
push
push
or
shl
dec
cmp
frstor
push
lods
popf
out
les
lret
push
js
mov
pusha
fistpl
jecxz
ss
leave
clc
dec
mov
xor
inc
frstor
out
inc
push
pusha
adc
ds
fcmovnu
pop
push
fiadds
int
arpl
ss
out
pop
ficoml
push
movsl
mov
lret
xor
repnz
out
out
jne
loopne
lahf
dec
leave
add
mov
int
jns
pop
xlat
xchg
push
jge
jl
mov
jbe
pusha
push
xor
push
pop
cltd
int3
fsub
test
fs
push
jl
out
sub
inc
mov
sbb
pusha
shll
addr16
jle
dec
cmp
jg
inc
pop
pop
inc
ret
enter
fisubrl
decl
push
pusha
fcmovnbe
pop
out
in
dec
mov
fstp
std
jmp
pop
bound
inc
lret
push
xor
stos
test
call
jbe
imul
push
iret
out
push
movb
push
xlat
dec
cmp
cmp
outsl
pop
pop
inc
sbb
popa
orl
cmp
imul
and
jge
dec
enter
sub
mov
dec
xor
aaa
lods
loop
repnz
jmp
mov
fldt
jbe
adcb
lods
pop
insb
out
xlat
jg
inc
push
loop
pop
leave
mov
les
fprem
dec
loop
int
loope
add
pop
pusha
shll
fldcw
push
fimull
mov
inc
aam
xor
push
cs
dec
dec
push
pop
dec
dec
mov
xchg
push
shlb
scas
iret
lret
or
icebp
cmp
xor
pop
in
inc
add
std
sub
push
mov
add
cmpsl
fldl
push
push
mov
insb
jl
jl
add
adc
jb
pop
jmp
pop
js
fcmove
add
push
pop
push
ret
pop
inc
iret
or
dec
inc
imul
test
fxch
pop
call
test
mov
xchg
push
push
stc
fsubrl
in
pop
gs
arpl
jl
inc
push
adc
adc
pushw
ds
das
pop
rcr
addr16
sbb
aas
jg
xchg
gs
push
ror
out
inc
mov
mov
in
ljmp
jb
pop
out
inc
inc
push
sub
outsl
jge
sbb
mov
stos
rcrl
imul
or
jmp
repz
mov
mov
clc
lret
movsl
addl
aad
dec
xlat
imul
ret
cmp
xor
push
js
imulb
js
jp
les
and
push
dec
in
push
popf
jl
dec
int
mov
add
mov
repnz
pop
dec
rcrb
mov
js
dec
fdivl
test
in
ret
jl
loopne
lret
jg
dec
dec
lret
fnstsw
ds
mov
jmp
pop
cwtl
cmp
xorl
and
mov
dec
jmp
out
cmp
test
leave
shl
mov
mov
insb
sub
mov
mov
enter
xchg
andl
fcompl
dec
mov
imul
arpl
data16
vpunpckhdq
add
filds
add
lds
popa
mov
jge
push
icebp
mov
das
test
cmp
sarl
and
inc
dec
into
cmpb
int3
push
mov
fxch
ljmp
ficomps
and
sbb
sbb
aad
test
dec
fcmovnu
mov
dec
ret
clc
dec
stc
cmpsb
sbb
pop
jbe
js
jge
data16
jl
mov
jl
push
dec
pop
call
lret
sub
test
or
test
mov
mov
sar
push
fisttps
fstl
fxch
cmp
mov
scas
lea
dec
or
mov
mov
adc
jge
inc
out
push
fisubl
in
sub
jno
loope
dec
pop
push
aad
fs
lock
cmpsb
fcmovbe
push
dec
leave
dec
aas
push
add
mov
inc
cmp
mov
jbe
pop
push
sub
jb
cmp
test
lahf
fwait
mov
add
push
dec
pushf
out
clc
aad
mov
sbb
inc
push
adc
mov
inc
mov
mov
hlt
aad
fs
mov
dec
inc
out
lds
fsubs
mov
dec
pop
into
dec
int3
push
push
loopne
pop
lds
jnp
fninit
int3
jl
aad
or
push
push
imull
insb
jge
inc
mov
lahf
dec
push
repnz
push
add
mov
adc
aam
mov
testb
jle
popa
imul
cli
aad
into
add
lahf
xchg
pop
dec
push
data16
jmp
enter
js
add
std
subb
mov
fcomps
insb
jg
fucomip
mov
aam
jb
dec
inc
sub
mov
pusha
loop
push
pop
jno
rorl
dec
cli
fcomi
fcmovne
lds
andb
cmp
aad
es
mul
leave
jbe
test
movsl
or
push
add
shl
inc
dec
insb
mov
out
mov
test
push
pop
loopne
push
loope
dec
loopne
cmp
dec
pop
mov
jmp
fsubr
dec
sarb
inc
sub
pop
dec
popa
cwtl
inc
fbld
pusha
out
leave
jbe
aas
into
lret
or
fcoml
pop
sub
fimuls
mov
xchg
cmp
aas
push
sahf
xchg
cltd
or
jmp
out
cmp
push
cmpsb
add
shl
iret
pop
test
out
jmp
aam
xchg
jno
xchg
call
inc
out
xchg
jg
fistpl
stos
mov
dec
add
fimull
push
pusha
fs
leave
lret
popa
aam
enter
data16
jle
ror
pop
aam
orb
in
loopne
mov
gs
mov
out
dec
lret
push
push
fnstsw
in
mov
pop
add
pop
or
in
mov
enter
mov
addr16
iret
mov
pop
jg
out
add
cmpsl
pop
imul
test
clc
xchg
add
fldcw
fistl
aam
leave
dec
pop
rclb
into
aaa
aad
hlt
push
lret
sbb
push
sbb
in
lahf
sub
sub
insl
iret
cli
xor
pop
fdivrl
fistps
idivl
jb
dec
jmp
jl
pop
mov
inc
call
mov
jbe
jb
or
push
enter
add
pop
call
in
outsl
out
shl
jl
add
xlat
inc
leave
pop
inc
push
adc
stos
push
fs
rcl
outsb
inc
adc
int3
dec
leave
sub
add
into
popf
dec
push
fstps
mov
push
insb
inc
aas
cmp
nop
add
out
lret
pop
test
test
stos
mov
mov
nop
popa
aaa
dec
pop
mov
ss
sti
pop
fisubrl
icebp
ret
fldenv
mov
dec
into
push
xor
out
leave
push
mov
lahf
cmc
inc
sbb
pop
popa
out
call
bound
les
sbb
dec
inc
and
pop
pop
enter
push
jne
popa
fcmovne
shrl
aad
test
dec
mov
js
add
imul
cltd
xchg
out
dec
add
pop
dec
jmp
popa
sbb
out
loop
xlat
inc
lahf
fmul
push
rcrl
mov
out
fldt
push
fnstcw
pop
aad
js
sub
fcmovnbe
lea
dec
leave
clc
mov
addr16
mov
dec
mov
or
xor
jl
jmp
pop
fcmovu
fbld
push
mov
ds
xor
std
cld
shrl
xchg
fucomi
aam
loop
pusha
fmul
pop
dec
mov
fs
push
clc
mov
fcmovne
addr16
dec
mov
dec
call
out
or
cmp
pop
gs
jbe
in
xchg
dec
insl
testl
push
pop
mov
pop
fadds
push
sbb
xchg
neg
out
sub
or
out
imul
div
add
pop
jmp
push
insb
jle
dec
dec
pop
leave
mov
pop
mov
mov
icebp
add
inc
into
shr
rcrb
or
shr
out
pusha
xchg
aam
mov
push
les
rolb
or
jmp
fmulp
push
lods
xlat
test
xlat
call
dec
aad
pushf
neg
aam
xchg
sub
pusha
pop
lock
mov
dec
pop
dec
fstps
leave
dec
int
pop
add
dec
adc
call
mul
adc
add
out
ret
jg
out
in
sbb
lret
scas
mov
dec
inc
inc
movsl
bound
push
push
xchg
mulb
movsb
sbbl
pop
inc
push
movsl
add
call
popf
push
sti
fldcw
pop
xor
dec
sub
add
out
fstp
mov
inc
push
xlat
popa
incb
test
fcoml
mov
fisttpll
arpl
xchg
ficomps
aad
fsubrl
dec
mov
and
or
mov
into
repz
stos
mov
pop
fistpl
in
js
fldl
pusha
push
enter
mov
fimuls
dec
call
paddusw
cltd
inc
shrl
dec
xchg
enter
pop
ret
pusha
add
dec
fldl
daa
orb
dec
fdivr
fcmovne
mov
mov
dec
cmpsl
inc
aad
std
xor
sarl
dec
adc
es
pop
fisubs
out
addr16
popa
mov
data16
mov
dec
pop
bound
xlat
lods
negl
iret
xchg
sub
lods
fisttps
mov
dec
xor
aaa
add
dec
inc
jg
out
aad
adc
movsl
gs
xchg
mov
cmp
pop
int3
pop
mov
mov
jns
add
jl
jg
dec
cmc
aaa
hlt
dec
lds
mov
enter
aad
pop
jmp
sub
push
inc
shlb
pop
push
xchg
fwait
pop
push
pop
lds
fsubr
lods
inc
mov
fmull
inc
lods
cmp
addr16
and
pop
sub
dec
dec
lods
outsl
leave
sbb
aad
in
pop
fmul
test
shll
out
int3
mov
mov
loop
pop
ficomps
jbe
add
pop
addr16
and
jmp
dec
ret
fildll
lea
fcomps
inc
out
xchg
pop
into
aam
jmp
pop
xor
imul
jg
ret
mov
aad
inc
or
stc
or
mov
std
imul
les
pusha
sqrtps
int
pop
out
pop
inc
daa
jne
mov
push
decl
inc
aas
scas
inc
cmc
data16
mov
adc
inc
test
test
fisttpll
jge
leave
imul
fldt
or
icebp
stc
pop
test
movsl
xchg
imul
shr
dec
imul
fdivrl
ficomps
mov
fmull
fnstsw
fcomi
or
xchg
fcomp
pop
pop
imul
in
inc
adc
ret
icebp
aad
jns
pop
fwait
cmpb
adc
xchg
jmp
enter
xchg
test
outsl
inc
inc
test
add
lret
lret
jno
icebp
or
pop
pop
sbb
lret
pop
ret
mov
hlt
dec
dec
add
and
fstpl
dec
stos
loope
push
pop
adc
push
or
lret
dec
push
xchg
xor
aas
dec
ds
dec
pop
in
ret
rcl
xchg
ljmp
pop
cs
xlat
pop
faddl
push
fwait
aas
popa
or
push
push
push
lahf
push
cli
mov
sub
dec
inc
mov
test
dec
clc
adc
lock
shll
xlat
movsl
or
dec
adc
or
pop
dec
addl
shlb
lret
xchg
clc
cmp
fisttpll
out
leave
js
sub
daa
cli
into
insb
mov
cli
xlat
lret
sbb
aas
negb
push
fucomip
add
lock
mov
mov
inc
mov
out
aad
insb
test
mov
loopne
ds
int3
mov
clc
scas
jl
into
adc
jge
decb
mov
movsl
mov
fsubrs
leave
pop
les
nop
fsts
inc
rcrl
clc
les
sbb
lret
imul
ss
and
call
fstpt
dec
int3
pop
add
pop
jecxz
pop
push
shll
int
gs
xor
sub
int
jge
incl
xor
mov
lcall
mov
dec
into
add
pop
inc
insb
dec
mov
mov
leave
mov
enter
fldt
out
mov
push
loopne
popa
arpl
leave
push
dec
and
pop
mov
lds
dec
gs
push
xchg
fst
pop
push
xchg
shlb
shl
ret
addl
pop
mov
dec
pop
das
jmp
shlb
test
jge
jge
cli
inc
fistpl
insb
pop
and
imul
rol
push
jl
lret
cmp
jb
add
dec
pop
fimull
mov
test
pop
mov
leave
insb
pop
push
fwait
jge
aad
xlat
inc
ds
dec
mov
dec
pop
ljmp
jecxz
data16
cmp
pop
pop
xor
js
repnz
scas
and
dec
int3
mov
hlt
pop
int
iret
mov
sbb
dec
mov
push
call
cli
sub
cmp
out
mov
pop
dec
js
push
dec
jle
pop
lds
in
addr16
xchg
mov
hlt
lahf
les
xor
xlat
pop
stc
mov
flds
lds
jmp
dec
testl
clc
enter
sarb
neg
fadds
dec
popa
addr16
mov
push
xchg
ljmp
ja
repz
cs
xor
dec
pop
or
jne
ljmp
rcl
fcmovbe
push
or
pop
bound
test
push
or
pop
push
aad
rcr
dec
or
lods
inc
add
xorb
into
xor
dec
pop
cmc
iret
push
mov
imul
mov
mov
shll
push
iret
dec
xor
popf
outsl
pop
mov
xor
fs
fiaddl
dec
out
pop
or
pop
mov
rorl
mov
cmp
add
popaw
inc
negb
out
fcmovu
fistpl
fdiv
pop
aam
js
cld
rcl
repz
and
into
iret
ffree
dec
jmp
mov
xchg
test
add
jg
pop
lahf
add
fcmovnu
loop
pop
push
push
and
pop
sbb
inc
xor
push
rclb
loope
pop
rorb
ds
imul
out
dec
push
xchg
mov
enter
loope
mov
test
pusha
or
repz
pop
out
scas
dec
push
push
pusha
les
inc
dec
jno
loop
cmpsl
push
fldcw
pop
lret
xchg
out
cmp
push
xchg
pop
jb
push
ss
enter
pop
fists
enter
dec
fisttpl
out
fucom
in
push
rcrl
lret
push
xchg
bswap
mov
ret
push
pusha
adc
pop
mov
mov
lret
repnz
mov
jecxz
add
jae
fcompl
mov
les
scas
shrl
imul
push
enter
lock
mov
addr16
daa
cmpsb
sbbl
push
dec
jecxz
popa
or
outsb
lods
mov
mov
int3
leave
dec
lds
and
cmp
adc
aam
popa
fadds
leave
sbb
mov
inc
xchg
add
xchg
in
inc
dec
cmpsb
fistpl
sbbb
lret
push
jb
dec
mov
inc
cltd
adc
or
xor
pop
dec
outsl
aad
mov
and
outsb
xchg
mov
out
mov
push
pop
mov
imul
rcrb
xchg
fwait
iretw
jp
inc
push
pusha
jb
in
mov
mov
dec
jb
pop
in
inc
popa
pop
adcb
inc
pop
pop
popf
pop
gs
mov
ret
pop
and
dec
pop
leave
ret
cmp
sbb
imul
aam
mov
cld
pop
push
loope
imul
pop
inc
iret
loopne
loop
sub
adc
lret
push
xor
jge
push
shll
pop
push
mov
fstpl
ljmp
push
aad
jmp
mov
pop
lds
mov
dec
push
push
cli
pusha
gs
insb
or
fldl
clc
push
out
mov
mov
lds
fucomip
mov
and
dec
jge
int3
jp
fildll
and
call
addb
xlat
enter
push
out
fsubp
inc
jge
push
aas
jmp
jae
jge
mov
fisubl
fsts
add
lret
lret
add
jle
in
pop
push
lds
fldcw
pop
mov
and
adc
or
insb
stc
sbbl
mov
mov
dec
shl
out
cmc
dec
or
dec
add
mov
jbe
and
into
fildl
test
int
ja
repnz
and
push
sbb
push
jecxz
inc
nop
adc
hlt
xchg
sub
popf
adc
lret
cmc
dec
les
push
iret
adc
in
fisubs
cmp
mov
add
movsb
adc
dec
std
xlat
jg
addr16
mov
push
and
jmp
pop
fisttpl
pop
popa
movsl
stos
outsl
leave
loope
out
test
adc
lret
pop
test
test
fcom
enter
sub
rorb
lcall
jmp
out
iret
push
and
jle
dec
pop
mov
cmp
push
pop
mov
mov
icebp
or
icebp
icebp
ficoms
pop
imul
or
xor
enter
fiadds
pop
pop
shr
pop
jmp
mov
and
rcl
mov
loopne
rcll
mov
pop
inc
xor
pop
mov
dec
pop
movsl
xchg
pop
xchg
dec
cli
dec
inc
lret
dec
mov
icebp
lahf
out
push
cli
dec
pop
pop
fists
push
lret
popa
lods
fadd
push
pop
iret
inc
aas
lods
sub
insb
aas
in
je
loop
inc
sarl
xor
dec
int3
mov
jmp
pop
pop
inc
pop
lds
mov
push
jmp
icebp
or
les
call
lahf
xor
dec
push
pushf
gs
test
or
dec
jmp
out
fstp
fstps
mov
push
jmp
icebp
in
push
mov
jae
popa
lea
test
dec
dec
daa
jp
pop
push
call
xlat
loope,pt
xlat
movsl
push
mov
test
fdivp
and
jmp
cli
mov
out
imul
enter
icebp
rcrl
inc
dec
jp
jmp
mov
aad
mov
push
or
mov
mov
adc
lcall
fstps
sar
js
clc
adc
pop
push
loopne
enter
repnz
into
push
add
imul
popf
dec
dec
dec
sbb
mov
fsubrs
gs
xlat
jae
add
aam
or
cs
push
and
jmp
add
int3
out
push
pop
in
aad
aas
jae
pop
popa
repnz
jl
dec
cmp
lea
subb
nop
aad
push
inc
cmp
call
out
aad
adc
daa
popa
pop
fcmove
insb
fld
fdivrs
cltd
hlt
mov
adc
jl
int
push
mov
rcrb
jl
cli
ds
leave
imul
fidivrs
rorb
add
fwait
ds
or
or
icebp
xchg
sub
mov
mov
out
add
adc
test
dec
out
push
aas
out
add
push
imul
sub
fimull
push
dec
jle
int
mov
out
xchg
inc
xchg
pop
int3
icebp
and
jmp
push
jp
inc
lds
vmulss
subb
mov
loope
push
fistl
arpl
add
out
and
aad
ljmp
sub
pop
test
repnz
pop
fsubrs
fs
imul
mov
test
inc
aad
mov
rcrb
repz
insb
dec
xchg
stos
shll
jmp
xchg
pop
xchg
movsl
push
adc
lret
dec
cli
insl
jmp
xchg
pop
mov
pop
ljmp
lret
dec
aad
mov
ffree
adc
push
neg
cmp
mov
pop
imul
loope
pop
jb
pusha
jnp
cltd
lods
into
fwait
out
pop
les
repz
lret
add
stos
fstps
lret
inc
pop
xor
loopne
sahf
push
or
testb
fsub
inc
es
add
pop
push
push
add
loopne
inc
sbbb
imul
or
push
sahf
nop
and
lret
lods
lahf
xor
ficomps
icebp
adc
lret
enter
pop
dec
loopne
movsl
fcomp
les
fistpl
clc
dec
push
jle
inc
pop
enter
pop
push
ret
insb
int3
les
mov
jg
flds
xor
loop
lret
pop
rorb
jle
push
jle
dec
inc
fistps
shl
cmpsl
out
jge
push
mov
mov
pop
dec
aad
loopne
incb
push
dec
push
daa
cld
popa
xchg
test
push
jp
loopne
pop
fstps
or
cwtl
int3
pop
lds
inc
mov
push
in
pusha
fidivl
lods
push
shlb
lock
dec
adc
sahf
loope
fcompl
mov
mov
loopne
push
jp
dec
into
push
ss
iret
movsl
shrb
add
inc
data16
int3
fnstsw
iret
dec
sbb
add
push
dec
push
fidivl
sub
gs
in
popf
aad
imull
idivb
lock
pop
and
pop
imul
pop
mov
sahf
clc
pusha
in
test
mov
leave
add
sbb
lods
ficoml
sbb
or
ret
lret
lret
pop
lds
adc
shr
das
lock
gs
fcomps
inc
int
lret
xchg
push
xchg
fxch
lret
xchg
in
mov
push
pushl
dec
data16
call
aam
insb
and
hlt
aad
in
jg
pop
push
xchg
pop
lret
pop
fidivs
push
push
shl
or
pop
test
fisttpll
aad
jb
push
shrb
shlb
push
xor
shll
insb
ficompl
mov
push
jmp
dec
add
pop
sub
adc
faddl
fiadds
lret
insb
fstl
adc
dec
cmpsl
cwtl
lock
imul
inc
addr16
int3
jl
push
mov
and
pop
shlb
pop
push
addr16
outsb
int3
fimull
push
mov
jmp
mov
pop
jb
out
sub
rolb
int
enter
push
or
out
cmp
push
xor
mov
or
push
rcll
pop
ret
dec
xor
pop
aad
mov
sbb
mov
lret
pop
leave
xchg
rolb
out
xchg
bound
int
xor
xor
push
mov
shlb
into
mov
jle
fcom
cmp
inc
lret
in
push
push
aam
cli
loopne
or
jge
fnstcw
push
test
mov
incb
add
dec
lret
mov
push
hlt
fwait
xchg
enter
lea
push
cwtl
leave
loopne
inc
cld
addr16
pusha
rcll
xchg
fsts
aam
in
cmp
incl
pop
sub
and
movsb
pusha
push
in
loopne
dec
jge
faddp
adc
pusha
cmp
shr
popa
or
popa
jmp
mov
inc
stos
iret
pop
pop
aas
mov
push
dec
ficompl
icebp
jbe
push
mov
dec
enter
das
loope
push
push
data16
dec
aam
cli
repz
adc
cld
pop
aam
xor
mov
aas
xchg
insb
jl
ja,pt
mov
push
push
fisttpl
jmp
aam
cli
fbld
cwtl
roll
jb
stos
nop
jmp
push
div
jge
fidivrl
arpl
not
mov
dec
enter
sbb
fcmovne
out
mov
nop
xor
addr16
inc
loop
je
mov
push
adc
in
ror
in
dec
inc
pop
popa
fcmovnb
mov
adc
leave
pop
xchg
sbb
fadds
dec
js
push
stos
mov
mov
and
call
shlb
jle
pop
push
loopne
xor
mov
mov
dec
or
and
rclb
jge
mov
in
xor
push
popa
icebp
fbld
ror
mov
jge
push
sbb
xor
pop
dec
inc
push
jnp
popa
insl
enter
adc
imul
fsts
movsl
fdivrp
movsl
dec
rcll
rcl
inc
rolb
dec
dec
xchg
jge
inc
shrl
mov
inc
add
lret
fmulp
out
loopne
pushf
lds
test
out
dec
lahf
jg
fstl
adc
fld1
dec
jno
in
stc
pop
frstor
mov
or
rclb
dec
pop
mov
jecxz
fsubr
push
mov
pop
jg
push
int
lret
movsl
lcall
les
dec
test
out
cmp
addr16
sbb
sub
cmp
pop
xchg
dec
popa
int3
xor
mov
inc
mov
fsubrl
push
mov
jae
lret
inc
fistpl
xchg
cmp
pop
inc
pop
dec
inc
fists
cld
jl
int3
jge
cmp
imul
cmp
xchg
pop
push
ds
leave
pop
sbb
jge
pop
add
inc
dec
adc
push
xchg
aaa
aam
sti
leave
dec
int3
cli
and
pop
in
lock
les
fcmovu
push
xchg
dec
fsubs
gs
mov
jmp
ret
push
stos
mov
add
pop
mov
fiadds
mov
fisttpll
neg
jle
int3
loopne
out
js
pop
out
inc
imul
xor
push
repnz
xchg
dec
and
sub
add
cmpsb
js
jp
ficoms
mov
inc
add
push
fbld
loop
call
fistl
xor
mov
lret
cmpsb
jb
jbe
mov
pop
fcmovnu
cmp
in
xlat
pusha
add
mov
fstpl
clc
dec
into
clc
aad
call
mov
push
out
mov
cmpsl
enter
out
outsb
aad
inc
popf
fldcw
test
int3
scas
add
cltd
loop
pop
pop
dec
loopne
push
icebp
lcall
lds
mov
dec
xchg
insb
mov
jg
push
int
jp
push
push
xlat
jbe
fucomp
stc
mov
cmp
or
adc
mov
pop
daa
xchg
shlb
inc
lret
mov
sarb
out
jns
dec
mov
ds
xchg
and
mov
in
pop
out
push
or
xchg
gs
or
aaa
test
push
or
adc
scas
push
dec
inc
dec
inc
pop
adc
dec
pop
xchg
inc
inc
pop
into
sbb
clc
push
das
mov
repnz
sub
mov
push
pop
fs
xlat
inc
mov
dec
mov
loope
iret
frstor
dec
enter
pop
inc
test
sub
push
frstpm(287
scas
dec
jmp
out
jmp
in
add
popa
and
pusha
aad
out
dec
cmpsl
xor
mov
jae
pop
int3
cltd
outsl
in
push
dec
and
stc
int
pop
jb
iret
dec
sub
in
repnz
mov
or
add
xlat
pop
fcoms
nop
rclb
jmp
add
lret
pop
mov
inc
dec
pop
cmp
out
jp
mov
push
pop
addr16
mov
dec
lahf
gs
pop
adcl
loopne
mov
xchg
mov
push
mov
cmp
fnsave
clc
aad
ds
xor
ret
dec
fisttpll
add
jl
lret
xchg
jp
xchg
les
sbb
addr16
aas
xor
fdivp
out
xchg
imul
pop
cmp
jecxz
repz
call
and
push
inc
mov
jae
mov
jge
enter
fistl
xchg
fdivrl
rorb
sti
cld
push
int3
out
test
fcom
mov
and
imul
sbbw
mov
dec
mov
aam
cli
or
sti
addb
out
fnstcw
inc
into
loop
and
dec
call
arpl
icebp
mov
ja
mov
out
gs
jnp
imul
shll
dec
or
loop
mov
rcr
cmpsb
dec
iret
sti
mov
add
into
pop
lretw
xchg
test
push
inc
fucomi
lcall
clc
pop
imul
cld
sti
into
mov
iret
dec
dec
inc
sbb
aam
enter
popa
cmp
inc
pop
int
dec
sbb
call
push
mov
aam
sub
inc
test
push
popa
jmp
mov
mov
dec
push
cwtl
test
dec
pop
jle
pop
popa
stos
pusha
dec
out
fisubrs
sbb
aas
pushf
push
push
xchg
enter
popf
in
inc
lds
inc
push
loop
int3
dec
adc
adc
fcomps
pop
xchg
neg
jl
popa
sub
aam
cmp
mov
jnp
lret
inc
dec
in
and
dec
push
pop
adc
out
jl
xlat
dec
jg
leave
mov
inc
in
call
clc
lds
mov
pusha
stc
and
outsb
test
fadd
divl
test
testl
lods
shr
fidivrl
adc
arpl
jb
test
loopne
rol
push
iret
lret
fnsave
cli
jmp
outsl
clc
arpl
lods
ret
add
andl
out
stos
int
es
mov
pusha
jl
pop
sbb
dec
data16
fimull
push
jmp
mov
test
or
jmp
out
cld
int
loop
insb
fbld
aam
and
add
aas
lock
or
add
pop
pusha
lret
icebp
dec
fxch
cmp
daa
pusha
dec
loope
imul
or
loop
pop
fld
test
fstps
fdivrs
and
loop
dec
push
sti
inc
shrb
int3
inc
push
dec
push
movsl
pop
jge
push
clc
faddl
mov
xor
mov
or
imul
fcmovbe
xchg
sub
xlat
fsubrp
inc
pop
fcmovu
stos
and
outsl
out
jp
cmp
push
inc
and
in
jmp
int3
shl
fsubl
jp
jge
jge
aas
push
lds
cmpsb
or
inc
mov
shll
out
data16
out
pop
rcrb
jno
imul
mov
fstpl
jmp
fcmovne
call
inc
xchg
scas
dec
lds
leave
sub
fistl
jg
aam
mov
loop
inc
imul
push
jmp
pop
push
js
pop
mov
popa
dec
test
dec
jbe
ret
jg
pop
or
push
jnp
push
icebp
fbld
int
ds
inc
push
stos
push
mov
pusha
and
sbb
fld
rorl
frstor
pop
or
out
dec
dec
dec
mov
add
dec
fisubl
jo
imul
push
pop
rorl
dec
or
cli
cmpsl
in
addr16
inc
sbb
and
pop
rorb
dec
insb
ljmp
shll
aad
int3
dec
fimull
fldl
in
push
daa
out
jge
flds
mov
scas
int
imul
int3
fcoml
sbb
push
mov
pop
mov
fcmovbe
aad
dec
pusha
shr
push
jg
pop
fsubs
inc
int
dec
rcr
mov
sti
mov
les
gs
in
jle
addr16
xlat
pop
stos
mov
pop
sbb
enter
insb
pop
leave
or
in
cmc
fmul
testl
adc
fcmovu
enter
fisttpll
imul
test
clc
push
mov
dec
repz
or
jl
in
inc
test
lds
push
rcr
data16
cmp
inc
cmp
shrl
rcll
out
enter
out
stc
shrb
push
cmp
aam
pop
push
in
pusha
mov
adc
out
clc
int
ret
inc
push
enter
fildl
fdivrs
mov
nop
pop
pop
and
lea
jae
dec
imul
les
or
addr16
lret
imul
fs
mov
test
js
pop
loopne
jg
out
jle
pop
sbb
push
xchg
dec
and
dec
mov
mov
lds
inc
xor
cmpsl
push
test
pop
dec
loopne
leave
out
jle
lret
addr16
vpxor
pusha
jne
nop
and
jae
gs
xchg
fiaddl
push
leave
inc
out
push
sahf
xchg
jbe
dec
data16
push
push
pop
mov
clc
fcomps
sub
mov
dec
mov
in
jecxz
cmp
or
dec
call
dec
lret
inc
xor
fisttpll
ret
jle
push
xor
dec
pop
inc
insb
pop
inc
push
fcmovne
imul
out
insb
mov
pop
andl
inc
lret
int3
fmul
fstpl
aam
jp
dec
dec
push
ret
subl
pop
movl
xchg
mov
mov
push
mov
dec
mov
fcmovnb
cwtl
inc
push
loope
int
cmovns
sbb
arpl
push
movsb
jle
iret
dec
jno
inc
pop
or
test
imul
jae
into
loopne
or
pop
test
int
xchg
shll
sbbl
out
pop
in
lret
dec
pop
dec
iret
push
int3
mov
inc
mov
mov
jno
inc
push
mov
jp
enter
lds
out
leave
add
pop
mov
ds
adc
les
fnstsw
cld
xchg
js
inc
out
or
sub
xchg
cli
in
into
rorb
dec
xor
inc
add
pop
dec
push
enter
fnsave
cs
inc
jmp
fldcw
arpl
mov
iret
jbe
insb
pop
pop
int
add
or
dec
dec
xchg
mov
fmuls
fnstenv
sub
sub
daa
jge
inc
mov
faddp
dec
pop
int
test
in
jl
jge
or
stos
insb
imul
push
fisttpl
mov
mov
arpl
pop
test
cmp
push
dec
or
fwait
gs
dec
push
pop
push
mov
xlat
pop
push
mov
lods
pop
loopne
addr16
add
sbb
lods
int
ss
push
push
gs
movsb
in
push
lods
repnz
inc
jae
sahf
leave
hlt
ljmp
pop
test
jae
push
jmp
jle
lds
cwtl
inc
pop
push
stos
mov
testl
pop
inc
dec
jle
int
fiaddl
fwait
and
loop
fwait
mov
fld
push
rcl
pop
push
dec
jg
pop
fnstsw
pusha
lahf
sub
inc
pop
jmp
push
cwtl
xor
push
cmp
jmp
addr16
inc
or
inc
dec
dec
fcmove
fnstcw
flds
int
bound
jae
pop
das
pusha
scas
ffree
or
pop
inc
jmp
adc
xor
sbb
pop
aas
push
pop
push
xchg
repnz
gs
cmp
jge
sarb
test
pop
mov
xchg
mov
dec
cmpsl
lcall
add
pop
insb
vmovss
adc
xorb
les
inc
inc
and
rcrb
mov
int
cwtl
hlt
in
pop
mov
aad
mov
dec
out
pop
mov
adc
stc
insb
int
int3
cmc
rorb
inc
fisttpl
fldt
js
aam
repz
movsl
pop
out
push
notl
and
call
js
dec
sbb
and
dec
ret
sti
scas
outsl
mov
inc
adc
cmpsl
pop
ds
mov
mov
push
into
inc
push
int3
push
cmp
xlat
cmp
shlb
repnz
pop
les
ds
pop
iret
pop
lahf
inc
leave
aam
sbbb
jmpw
test
gs
pop
mov
into
inc
pop
ljmp
lret
mov
add
iret
pop
pop
in
push
dec
imul
lret
dec
xlat
push
cmp
pop
mov
xchg
pop
out
adc
sbbb
push
call
push
adc
xchg
nop
mov
fdivs
dec
and
dec
int3
adc
add
sti
fisttpl
int3
lcall
in
rclb
fldt
sbb
dec
jle
pop
gs
lret
xlat
in
sbbb
aaa
out
flds
int
add
add
insb
gs
ss
imul
fs
aad
cmc
fists
inc
int
push
repnz
dec
popa
shrl
mov
ret
pop
push
pop
loopne
inc
ja
fisubl
cmpsl
lahf
pop
add
dec
sbb
dec
cmp
jg
pop
ret
clc
flds
pop
arpl
insb
popf
pop
out
fbld
cld
fstp
sub
imul
imul
or
dec
push
test
fdivp
ret
inc
lcall
arpl
mov
cltd
jb
int3
pop
pop
and
cld
xchg
or
cltd
jge
pop
pop
mov
add
pop
loopne
mov
pusha
push
dec
cmp
fucomp
xchg
int
xlat
pop
dec
mov
clc
lret
push
movsl
es
pusha
mov
xchg
int3
push
or
pop
imul
movsl
sub
fdivrp
push
jge
movl
aas
rcrl
xchg
push
sub
pop
les
orl
lret
inc
ja
xchg
jge
aam
shl
xlat
shr
sarl
les
iret
test
fisubs
lea
jno
frstor
out
rolb
add
out
and
xchg
jmp
in
cmp
fmul
mov
loopne
inc
jg
jmp
stos
xchg
shr
add
xlat
dec
fldcw
enter
into
dec
pop
jecxz
js
push
negb
inc
sub
dec
addb
aad
out
mov
mov
or
pop
dec
sarb
push
mov
mov
xchg
or
pop
js
aam
sti
bound
dec
aam
sbbl
push
dec
pop
and
dec
jl
pop
aad
or
test
orl
stos
addr16
pop
pcmpgtd
mov
movb
fcoms
inc
dec
dec
xchg
movsb
sarb
sbb
dec
movsl
mov
xchg
repnz
call
pop
popa
push
pop
data16
in
dec
mov
pop
clc
jae
xchg
imul
dec
cltd
mov
pop
inc
fists
mov
adc
pop
pushf
jb
lret
pop
push
int
aad
push
ja
cmpsb
ret
jge
loopne
idiv
iret
test
pop
leave
mov
scas
fcmovnbe
hlt
repz
outsb
test
clc
fmul
int
aam
data16
stc
fs
jecxz
out
pop
into
repnz
pop
fcomp
or
ror
dec
loope
pop
push
add
xor
inc
push
sbb
or
jno
push
add
fsubrl
xchg
out
mov
pop
dec
fs
pop
fcmovnbe
jmp
call
push
aad
or
imul
inc
das
aam
inc
fcmovnu
popa
imul
add
aam
xlat
cmpsb
jp
push
jge
inc
mov
shrl
push
mov
jl
pusha
jge
jge
xchg
pop
test
in
ds
dec
dec
jb
xlat
cmp
mov
pusha
cmp
add
out
insb
popa
aad
lock
dec
sti
cmp
sub
je
pop
mov
lret
fs
dec
xlat
mov
gs
lret
out
mov
xor
or
int3
aad
in
inc
push
push
test
jge
pop
pop
rcrb
loopne
jge
jge
add
jmp
push
lret
push
shl
aad
loope
push
dec
pop
out
pop
inc
xchg
cmp
in
add
pop
enter
inc
xlat
xor
or
pusha
push
xchg
inc
jmp
enter
lret
test
mov
mov
jg
dec
or
call
aad
sub
outsb
leave
pusha
lahf
sub
pop
sbbl
push
pop
int
and
addr16
dec
lds
movl
stos
repnz
pushf
pop
mov
call
pop
lcall
out
push
out
nop
jl
dec
sbb
mov
inc
lret
or
fildl
fstl
fldcw
in
lds
add
sbb
gs
in
mov
jae
out
jnp
push
fmulp
pop
xor
fwait
les
dec
add
popa
int
mov
mov
addl
push
mov
decb
fsts
orb
or
dec
int3
push
xchg
and
jns
jg
push
mov
push
fwait
aam
fadds
add
pop
iret
push
shr
push
adc
inc
jno
add
inc
loopne
cmp
jg
pop
jg
fisubl
adc
fst
shll
pop
test
jb
push
push
inc
xchg
aam
nop
loope
cmp
push
mov
pop
leave
test
cmp
or
movsl
arpl
pop
clc
jp
imul
out
jg
gs
je
push
fistl
outsl
dec
lret
loopne
xchg
lret
inc
push
inc
mov
sbb
dec
pop
jp
push
dec
int
push
mov
repnz
flds
inc
sbbl
dec
rolb
lret
push
popa
add
dec
outsl
loopne
mov
inc
or
jmp
int
pusha
test
icebp
or
nop
gs
sub
popa
pop
out
xchg
jae
push
inc
loop
pop
fucomi
dec
outsb
mov
imul
fdivr
inc
cli
sbb
pop
jno
icebp
push
dec
adc
xor
fdiv
pop
xlat
xor
mov
mov
sub
rcll
jno
sbb
imul
popa
inc
imul
and
sub
imul
rolb
leave
lret
gs
jnp
push
fldcw
push
out
addr16
or
push
adc
test
adc
fs
leave
sbb
and
xchg
fldl
pop
ljmp
int
clc
fdivrp
std
out
gs
pop
lahf
pop
imul
sbb
das
push
jb
test
dec
pop
enter
jmp
out
dec
push
js
cmc
pop
pop
inc
dec
pop
sbb
dec
les
pop
mov
pusha
gs
fcomi
enter
call
aad
add
gs
fldcw
fstp
icebp
out
aad
out
inc
popa
jp
dec
pop
or
lea
dec
loopne
mov
inc
js
jge
filds
sub
out
dec
add
call
sbb
pop
dec
dec
jg
push
fildl
push
add
lret
pop
iret
push
cmp
cld
xchg
scas
clc
push
jne
hlt
dec
loope
dec
addr16
mov
in
mov
jb
lods
repnz
popf
dec
enter
jmp
dec
out
pusha
add
and
iret
xor
mov
and
push
pop
mov
call
out
xlat
fisttps
daa
adc
cmp
push
ds
add
ret
gs
hlt
pop
into
mov
mov
aad
in
fistpl
mov
test
insb
mov
cli
repz
cmpsl
cmp
jp
or
fmulp
pushf
lods
sbb
pop
sbb
cmp
push
andl
mov
into
stos
fisubrs
je
mov
in
dec
neg
rcll
push
xchg
dec
ss
pop
into
popa
imul
negb
dec
jg
loopne
inc
in
aaa
mov
insb
les
pop
in
add
pop
loopne
xor
fsub
push
jl
orl
cmp
aam
test
int
flds
dec
rclb
jb
ffreep
xchg
frstor
leave
pop
in
in
mov
push
add
lret
push
push
xchg
push
dec
jl
loopne
fcmovu
mov
or
lret
xor
pop
pop
into
inc
cmp
in
clc
or
neg
inc
xchg
repz
xlat
jmp
lret
push
les
int
sti
jle
je
mov
mov
push
les
filds
test
and
sbbl
popf
add
dec
dec
aaa
adc
fsub
jb
add
inc
push
imul
les
inc
push
and
or
mov
out
leave
in
jae
ds
push
ss
js
and
dec
enter
pop
fcmovu
int
enter
and
stos
xchg
out
dec
call
mov
pop
or
jp
pop
pop
inc
pop
lahf
push
movsb
rol
adc
xchg
sub
sub
sbb
hlt
inc
shlb
jle
pop
pop
push
iret
dec
or
fmuls
negb
sti
push
lret
inc
adc
fldl2e
test
aad
fmull
std
xchg
fstps
sahf
dec
inc
jmp
test
rorl
aam
adc
sbb
push
xchg
out
cld
mov
xchg
clc
pop
or
mov
xchg
jmp
xchg
add
insb
dec
or
cmp
push
nop
mov
and
xchg
lods
clc
leave
mov
fldenv
dec
in
lret
push
mov
test
inc
xchg
dec
pop
int3
dec
test
push
test
or
dec
mov
repnz
shl
jae
scas
orl
int
xor
inc
imul
adc
test
mov
or
incl
je
cmpsb
lods
inc
fsubl
fnsave
pop
mov
xchg
popa
push
ret
cld
adc
sbb
in
test
popa
cld
aad
loopne
arpl
out
call
iret
pop
in
xchg
inc
jl
cli
inc
pop
dec
sub
xorb
aaa
jge
pop
inc
std
fmul
adc
or
inc
out
scas
enter
ss
add
imul
push
jp
xlat
fiadds
andl
mov
fstl
lcall
mov
adc
jle
addr16
mov
fadds
xchg
ds
push
test
fcmovnbe
jbe
int3
cs
fld
ffree
loop
daa
outsl
jno
imul
popa
mov
xlat
pop
jmp
leave
out
out
dec
leave
subl
shufps
outsl
pop
dec
mov
in
lods
decl
push
enter
mov
aad
ror
adcb
jns
popa
pop
add
out
leave
sbb
negl
rolb
mov
ss
dec
mov
jmp
lds
or
push
push
flds
and
and
js
dec
popa
jge
aam
and
xchg
stos
jl
pop
nop
sbb
lret
dec
fadd
arpl
push
out
pop
xchg
mov
pusha
addr16
fstps
add
data16
xor
test
push
fiadds
push
adc
fcompl
sub
lret
je
fcomps
adcb
into
imul
popa
push
inc
inc
cli
pop
push
icebp
dec
pop
mov
data16
mov
int3
push
rcrl
inc
sub
mov
fidivrl
push
cmp
pop
push
push
pop
sub
dec
xlat
test
fstpl
dec
aaa
shr
rclb
push
inc
fsubl
in
aad
aad
loop
ljmp
inc
fcmove
popa
lock
nop
dec
test
mov
insb
fcompl
dec
push
ds
enter
notb
test
call
fmul
adc
rol
loope
lods
push
dec
out
fistpl
jbe
mov
jl
fmull
jg
jmp
xor
enter
shlb
jb
jae
push
dec
add
inc
aad
aam
cmp
xchg
les
mov
lods
or
dec
out
dec
jge
jle
fiadds
pop
dec
mov
and
dec
lds
mov
mov
push
test
mov
std
adc
jge
lret
jge
andb
inc
rcll
clc
fucompp
movl
jg
sti
out
in
aad
mov
jp
xchg
xchg
repnz
and
jne
dec
dec
mov
pop
aad
jmp
jmp
dec
sarb
in
mov
mov
dec
xchg
and
test
je
or
std
jno
lds
dec
aam
push
push
fisubl
nop
inc
mov
aas
mov
aad
push
int
fldenv
inc
fcmovu
sar
dec
jmp
dec
in
pop
mov
std
aad
movsl
sub
dec
mov
inc
test
arpl
xchg
mov
pop
and
add
subb
out
test
pop
inc
fidivs
mov
movsl
adc
xchg
mov
push
fiaddl
repz
fcoms
add
in
push
pop
aas
es
leave
les
dec
mov
xchg
fistpll
mov
mov
xlat
dec
pusha
nop
sbb
jg
fldl
data16
cmp
mov
les
fwait
pop
dec
leave
iret
push
pop
ror
add
cmpxchg
iret
push
test
adc
lds
jg
pop
aam
fidivrs
out
in
fcompl
pusha
lret
xor
cmp
pop
shlb
fdivl
pop
fldl
call
xchg
or
clc
loopne
jp
ficoml
rclb
cli
jbe
movsb
bnd
sub
or
dec
rolb
push
loopne
popa
clc
dec
les
dec
rcr
leave
frstor
dec
arpl
stos
dec
mov
mov
mov
mov
inc
pop
fimuls
lods
pusha
aas
mov
leave
push
jp
dec
out
push
and
push
fcmove
or
jno
les
pop
mov
fs
fimull
lods
iret
testl
in
roll
jbe
dec
jbe
movsl
cmp
lret
out
insb
dec
push
addr16
or
repz
pop
dec
lret
shlb
nop
push
inc
mov
loopne
loope
popa
dec
pop
jne
aam
xchg
lret
out
push
jns
pop
fists
or
dec
pop
mov
push
cltd
push
out
fstl
mov
jp
int3
insb
les
mov
and
mov
pop
ljmp
fcompl
jae
xchg
fprem
mov
ret
mov
jmp
loop
pusha
les
jne
mov
dec
stc
in
xchg
inc
insb
imul
add
test
pusha
xchg
dec
push
mov
inc
push
jg
in
dec
enter
mov
cmp
out
push
dec
rorb
xor
adc
inc
test
xchg
jb
orb
inc
push
out
sti
out
lret
sub
aam
or
add
fcmovne
out
dec
in
in
cmp
in
inc
in
gs
lret
repnz
xchg
into
cmp
out
sbbb
pop
test
rorb
mov
xchg
jecxz
loope
xlat
aaa
or
nop
lds
push
aam
dec
add
fmul
fisubrl
out
mov
push
add
push
jmp
add
xlat
push
rcr
mov
sbb
add
cs
push
lret
mov
out
lret
popa
sbb
scas
rclb
imull
pusha
aad
push
test
stc
inc
mov
loop
in
push
ret
in
aad
or
fisttpl
orb
adcl
mov
push
jg
loopne
clc
aad
inc
xor
lret
push
dec
and
mov
jge
push
xchg
dec
rclb
filds
aas
data16
aaa
or
push
imul
fwait
les
add
lods
fwait
inc
mov
js
pop
xchg
push
xchg
cmp
roll
flds
cltd
xorl
arpl
push
enter
add
fnstsw
nop
shll
mov
stos
int
fcmovnb
inc
fistps
push
mov
dec
addr16
aad
and
gs
movsb
dec
into
mov
subl
adc
xchg
jne
cli
fmulp
lret
pop
and
dec
add
mov
fwait
insb
inc
inc
out
push
and
out
cmp
pop
minps
cltd
mov
lret
pusha
cmpsl
data16
rclb
add
jp
aam
xchg
repz
lret
sti
arpl
dec
aaa
nop
lea
pusha
lahf
jecxz
inc
and
push
dec
loope
dec
pop
lret
mov
dec
popa
add
sbbl
jmp
outsb
and
sub
les
adc
fstps
leave
setbe
scas
notl
dec
pusha
pop
mov
push
jno
icebp
push
push
add
dec
inc
dec
fbld
aam
push
pusha
out
mov
cwtl
out
fdivrl
enter
push
cmp
cmp
push
mov
ret
push
aad
xchg
roll
loopne
add
fstp
push
clc
lds
fldt
fdivr
pop
fmul
sub
adc
dec
cmp
mov
or
jne
fdiv
out
inc
lret
jp
lret
mov
sub
push
or
out
orl
sbb
xlat
fs
fsubr
jecxz
dec
ror
aam
into
fldln2
into
xor
inc
scas
stos
in
fcomip
movsl
jbe
mov
xor
adc
jp
aam
leave
push
aad
pop
inc
int3
mov
inc
xor
fyl2x
jp
aam
lret
pop
mov
cltd
mov
in
add
fcompl
aad
call
fists
sti
inc
in
pusha
and
inc
mov
inc
xor
push
mov
or
fs
xlat
shlb
pop
int
inc
push
in
cli
xchg
insb
fstpt
dec
vpsubb
negb
stos
int3
scas
push
xlat
pusha
mov
inc
aam
aas
jns
add
jg
leave
loopne
pop
call
outsb
fmul
pop
stc
or
xor
inc
dec
xlat
fistpl
jae
lret
aad
ffree
jl
les
clc
jge
sbbl
data16
cli
fs
faddl
dec
into
push
aam
iret
cs
mov
aaa
sti
ret
fidivl
call
pop
imul
jmp
roll
fcoml
dec
mov
pop
fucom
dec
jbe
jecxz
mov
dec
sub
roll
in
inc
xchg
imul
and
mov
mov
push
dec
shrb
shll
lds
xor
outsb
jbe
not
jl
fiadds
jecxz
and
and
fists
mov
dec
loopne
dec
cmp
fstpt
push
gs
jb
fcoms
lock
xchg
jge
push
sar
add
daa
jmp
bound
jbe
dec
loopne
inc
icebp
sahf
aam
sub
and
mov
xchg
enter
pop
push
mov
xacquire
popa
push
jnp
fsts
out
insb
cli
lret
fadds
jge
pop
cmp
dec
mov
mov
mov
insb
adc
in
or
add
shl
dec
leave
aaa
add
ffree
jnp
lret
pop
jno
popf
cmp
push
dec
out
popa
in
call
fwait
stos
push
addb
xchg
pop
xchg
andl
dec
sarb
pop
pushl
and
lds
pop
dec
mov
int3
aad
stc
out
pop
pushf
addr16
jp
dec
pandn
clc
sub
inc
imul
nop
out
lret
sub
xor
push
fcomps
cmpsb
pop
jmp
enter
sub
fcmovb
cmpsl
int3
loopne
mov
into
fildll
notl
or
cmc
mov
imul
dec
mov
addr16
cwtl
jb
sbb
js
stos
clc
gs
jnp
dec
add
call
and
lret
fneni(8087
mov
and
lahf
push
mov
out
push
int3
loopne
push
in
sahf
call
push
push
leave
and
adc
fnstenv
push
subb
cmp
int
pop
out
fcmovnbe
into
movsl
js
jp
dec
insb
pop
jne,pt
rcr
pop
push
jmp
xlat
pop
push
add
push
aad
test
imul
iret
lds
xorl
add
mov
popa
inc
fstps
mov
and
out
pop
pop
adc
pop
fldl2t
xchg
dec
add
call
pop
aaa
imull
out
and
push
iret
shll
test
dec
int3
mov
mov
pop
adc
inc
adc
lret
dec
jno
cmp
cmp
inc
lds
push
iret
mov
dec
enterw
add
fwait
leave
aad
push
xchg
and
les
sbb
pop
push
inc
xor
stos
popf
out
cmpsb
push
mov
dec
pop
icebp
or
add
lret
setb
lcall
insb
fsub
aad
push
push
cmc
cmpsl
lock
pop
add
dec
lds
daa
xlat
sbbl
inc
shl
ficomps
test
dec
pop
inc
enter
push
xchg
into
lds
mov
or
out
pushf
lods
mov
aam
andl
mov
lret
jge
pop
pop
insb
add
fldenv
and
adc
adc
xchg
fst
pusha
mov
sub
xlat
outsl
jmp
int3
lret
in
rorl
mov
sub
clc
in
sub
xchg
popa
push
mov
cmp
out
subb
pop
mov
cmp
fisttpll
xlat
push
xchg
shll
out
xchg
aad
es
mov
mov
sbb
outsl
fdivrp
ljmp
dec
dec
add
inc
aam
pop
lret
sub
clc
inc
jae
dec
aas
out
mov
gs
ftst
fsub
out
fdivl
dec
repnz
pop
jge
dec
jle
dec
nop
fcmovbe
mov
leave
andl
jnp
dec
xor
fiaddl
pop
lret
mov
inc
movsl
mov
dec
movsl
inc
and
imul
mov
mov
incb
pop
push
cmpl
mov
pop
into
add
lock
adc
pop
imul
mov
lret
loopne
aam
dec
mov
enter
int3
dec
jl
fimull
dec
in
pop
fldcw
mov
dec
pop
mov
pop
cmpsl
fistps
test
arpl
lret
aam
jne
pop
jo
pop
dec
add
push
pop
mov
insl
mov
nop
imul
aam
xchg
loope
mov
mov
addr16
data16
xor
aam
stos
aam
mov
iret
dec
fwait
jge
dec
cmp
cmp
xchg
cmp
dec
push
pusha
cli
lds
or
jle
divb
fs
test
lret
or
aad
subb
out
int3
sarb
mov
push
fsubrs
adc
int3
mov
jge
cld
sub
clc
aad
push
loopne
lret
movsl
aad
dec
push
dec
insl
lods
adc
xchg
data16
jmp
aad
stc
pop
xor
dec
add
shll
mov
push
mov
into
jmp
stc
pushf
cmp
pop
push
cli
call
inc
push
popf
mov
fisubrl
in
dec
or
push
fsts
std
fsubs
loopne
push
pusha
jnp
dec
push
mov
mov
xor
fidivl
jmp
fcomps
pmaddwd
xlat
dec
int
in
xor
push
dec
xchg
lahf
dec
fsubs
cwtl
dec
cmp
into
dec
mov
sub
push
jge
jg
out
lahf
push
inc
rcrl
inc
enter
and
mov
mov
pop
or
xchg
test
xlat
dec
cwtl
dec
xchg
lret
leave
inc
hlt
pop
mov
inc
loopne
leave
pop
xchg
mov
push
aad
mov
dec
imul
push
jge
jge
add
inc
sub
pop
js
cmpb
xor
fwait
xor
push
movb
into
les
inc
mov
fsubl
scas
add
jmp
das
mov
clc
and
cs
int
and
gs
jp
dec
pop
dec
lds
pop
out
lods
jmp
push
cmp
sbbl
fiaddl
pop
aam
lds
rcr
pop
stc
cmpsl
mov
push
lret
repnz
jl
pop
jg
push
pop
addr16
rcrl
sbb
pop
lahf
rolb
push
xchg
out
xor
cli
pop
aad
xlat
popf
ds
loopne
cmp
ficomps
fsubl
in
pusha
fwait
sbb
dec
pop
les
gs
push
imul
pop
cmc
fldenv
mov
enter
push
push
bswap
or
movsl
inc
pop
out
shr
push
repnz
pop
push
aam
ror
sbb
pop
rorl
fadds
test
jge
rcll
leave
mov
pop
inc
fistpll
mov
mov
sub
ret
hlt
xor
imul
mov
lds
pusha
xor
subb
dec
dec
fnstenv
pop
out
inc
rcrl
call
stc
out
inc
jp
pop
icebp
sbb
xor
xchg
shrl
in
roll
testl
pop
pop
leave
push
loope
fnsave
push
push
cltd
loope
add
xchg
shr
adc
xor
push
xchg
mov
lds
sub
fldl
inc
push
lds
lahf
dec
and
mov
pop
in
rclb
cmp
rcr
repz
loopne
lods
mov
add
mov
dec
frstor
fs
out
out
add
int
dec
push
or
imul
fldl
repnz
mov
jl
push
fisttps
idivl
insl
inc
dec
fldcw
fcoms
aam
lock
movsl
mov
data16
fdivrl
xor
xorb
int
mov
push
xchg
inc
inc
push
flds
gs
jl
push
in
jmp
lahf
mov
pop
dec
fcmovnu
lock
xchg
ss
push
xor
aas
add
cmpsl
inc
lock
in
test
loop
and
out
push
xor
out
stos
mov
push
call
or
orl
push
lret
push
pop
mov
add
mov
rorb
in
cmpsl
jmp
pop
cmp
fsubrl
jp
or
pop
call
push
test
les
gs
lods
sbb
dec
pop
daa
mov
mov
dec
lret
and
rolb
xchg
out
int
pop
mov
jecxz
ret
sbb
bound
out
dec
insb
outsb
inc
pusha
jge
xchg
pop
dec
or
push
aam
mov
ret
xchg
pop
pop
gs
call
adc
adc
aam
insb
roll
inc
repz
lret
test
lret
loop
jno
shll
inc
and
pop
in
add
iret
ret
xchg
jmp
aam
jmp
aaa
leave
sub
dec
push
test
out
pop
js
inc
aad
adcl
dec
sub
push
movsl
aam
call
out
loop
flds
movsl
mov
fcmovnb
mov
iret
xor
pop
push
aas
dec
imul
dec
call
mov
mov
push
int
popa
fs
stc
in
lret
imul
xlat
push
jae
inc
jmp
jl
pop
jle
dec
hlt
xor
push
pop
repz
stos
fs
add
int
push
iret
dec
xor
xchg
dec
dec
gs
fst
repnz
fisubrs
sbb
fcoml
mov
push
aad
sahf
jl
popa
faddl
call
jle
int3
dec
cmp
dec
pop
push
cmp
jge
push
inc
ja
dec
dec
inc
fidivs
loop
aad
mov
insb
pop
push
adcl
push
aam
gs
dec
insb
mov
push
std
sub
movsl
mov
in
or
pop
sbb
jecxz
iret
mov
cmp
je
imul
dec
push
fcomps
rcll
push
mov
addl
dec
and
into
test
gs
push
iret
dec
fistps
xchg
int
das
push
inc
test
fwait
or
adc
jecxz
ret
fst
pushl
inc
imulb
sbbb
cmpsl
and
or
dec
or
and
loopne
pop
fisubs
cmp
and
inc
fld
cmova
lret
push
imul
and
lret
push
aad
fisttpll
roll
pop
out
push
lds
loopne
out
push
mov
add
and
lahf
mov
test
repnz
jmp
loope
aam
xchg
or
das
dec
cwtl
test
xlat
addr16
in
lret
into
jmp
int
imul
pop
dec
push
rcl
dec
mov
out
mov
loope
enter
dec
repnz
out
popa
int
mov
mov
in
loopne
or
aad
add
jbe
add
out
data16
fisubl
mov
rcrb
xchg
sti
out
sub
fstl
test
sarb
push
iret
fstp
pop
repnz
jp
lret
xchg
imul
pop
add
dec
sub
fcmovnbe
sahf
jmp
loopne
into
inc
xchg
and
gs
jp
pop
push
scas
jns
pop
iret
icebp
js
cli
lcall
cltd
mov
test
jge
loopne
shl
out
sbb
enter
jge
inc
inc
dec
cmp
cmpb
leave
jmp
dec
jl
fsts
adc
cmpb
xchg
sar
pop
imull
repz
dec
push
fidivrl
pop
inc
test
fimuls
mov
aam
inc
lea
lret
sbbl
xorb
jmp
shrb
dec
dec
out
sub
push
ficoms
inc
mov
lret
gs
sar
int3
iret
mov
arpl
call
in
pop
pop
leave
jmp
and
iret
out
pop
lds
aad
cmp
sar
push
add
pusha
inc
out
ret
inc
jp
pop
js
fildl
sti
jmp
cwtl
out
out
mov
pop
js
iret
faddl
mov
out
push
test
dec
jle
fsub
push
lret
jns
pop
inc
movsb
gs
cmp
dec
fnstcw
out
push
ret
or
insb
push
in
fldt
push
iret
or
sub
call
aad
jl
int
lret
iret
sub
dec
mull
enter
stos
ffreep
rcr
lret
inc
iret
fcmovne
mov
call
in
cmp
out
mov
shlb
stos
pop
cwtl
negl
push
inc
adcl
dec
leave
aam
mov
popa
pusha
and
sbb
in
push
pop
push
mov
mov
aad
into
add
pop
movsb
and
call
inc
inc
pusha
inc
mov
push
std
inc
pop
shrb
xchg
adc
je
aam
dec
dec
mov
into
cmc
nop
rcr
int3
and
xchg
popa
fwait
dec
jecxz
inc
out
iret
ret
jl
aad
rcr
outsb
addr16
pusha
test
rorb
in
fs
call
inc
push
pop
aad
les
dec
mov
imul
mov
push
inc
xchg
dec
imul
fistpl
in
inc
les
adc
cmc
cmpsb
in
mov
repz
inc
les
popa
repz
mov
and
fucomip
ret
sbb
aam
push
hlt
dec
pop
leave
loopne
popa
stc
fldenv
xchg
faddl
lds
push
shlb
xchg
call
imul
inc
cmp
jns
aaa
leave
inc
addr16
xchg
mov
push
dec
pop
push
mov
inc
xchg
aad
cltd
out
dec
call
rclb
dec
aas
gs
inc
jl
aam
mov
inc
loopne
ffree
leave
out
fst
or
movsb
fldpi
enter
fcmovnb
insb
cs
rcrl
into
nop
dec
movsl
and
in
cmp
push
jg
dec
repnz
shrb
sar
aad
test
dec
inc
scas
iret
into
fcmovu
inc
out
popa
mov
mov
cmpsl
js
enter
mov
pop
push
mov
or
ljmp
sub
push
dec
push
inc
addr16
dec
pop
or
aad
fnsave
or
dec
jg
dec
push
pop
repz
jmp
xlat
add
movsb
outsl
jge
dec
pop
popa
push
cmp
add
dec
fisttpll
fisttpll
add
push
push
push
vmulss
sbb
loop
fiadds
dec
shr
fldl
pop
dec
lcallw
xor
ficompl
fistpl
dec
mov
test
lds
int3
mov
loope
jns
dec
inc
jmp
imul
mov
out
je
pop
test
dec
repnz
push
fbld
adc
push
push
mov
mov
cli
add
ds
adc
pop
dec
sarl
int
dec
imul
jb
leave
push
push
pop
vpsubusb
clc
addb
lret
shlb
nop
popa
movsl
das
mov
push
dec
xor
cmpsl
dec
ljmp
sti
pop
in
insb
movsl
addr16
mov
aas
lods
repz
loop
loope
enter
xlat
jmp
pop
push
add
lahf
arpl
xor
mov
mov
add
fsubrl
dec
andb
adc
imul
dec
fstpl
outsl
xchg
data16
push
fbstp
aad
test
mov
sub
or
rol
out
fisttpl
fs
fists
dec
fiadds
jbe
lret
in
movsb
sub
std
popa
sbb
loopne
mov
int
sbb
adc
pop
data16
cltd
mov
adc
mov
idivl
pusha
fcmovne
test
lds
mov
ficomps
loope
aam
data16
mov
hlt
pop
sub
call
mov
dec
orl
cld
out
jmp
cli
push
dec
shl
fstl
cs
int
lock
sub
lcall
push
aad
inc
out
mov
mov
int3
mov
sbb
push
jge
pop
inc
jge
dec
pop
insb
pop
jge
sarl
enter
fcomps
sub
mov
inc
sbb
stos
inc
data16
push
in
rcrb
sub
les
jge
addr16
shr
int
mov
jmp
fcomp
jbe
jae
adc
icebp
xorl
fcmovu
out
inc
mov
inc
push
add
dec
cmp
sti
aas
movsl
mov
pop
outsb
out
adc
pop
gs
sub
addl
pop
fldl
or
imul
adc
xchg
vmulsd
sub
xchg
movsl
ljmp
inc
leave
insb
out
push
pop
sbb
push
leave
loopne
xor
int3
aas
movsb
leave
mov
mov
movsb
cli
ror
add
pop
pop
jmp
jbe
add
dec
out
push
and
pusha
pop
inc
inc
movsl
mov
pop
push
inc
mov
call
push
jp
lret
testb
pop
push
sbb
repz
lret
lret
fistl
or
aad
pusha
shlb
dec
dec
insb
aad
jl
lret
xlat
jne
icebp
pusha
loop
or
ljmp
push
in
push
mov
xor
push
cld
push
xchg
int3
fsubrs
out
or
xchg
fcmovu
push
mov
ljmp
aad
shlb
mov
clc
adc
int
sbb
and
mov
out
pusha
pop
xlat
in
push
mov
add
push
fcmovbe
call
jl
fcompl
cld
dec
add
fstpt
xor
mov
shlb
push
lds
in
call
gs
mov
int
lret
mov
fisubs
xor
test
shrl
dec
add
push
dec
dec
fisubrl
inc
fisttpll
jl
inc
jmp
jl
dec
leave
add
jg
dec
ficoml
mov
faddl
or
jp
fiaddl
lcall
cmp
icebp
sub
mov
test
test
push
into
add
pop
pusha
les
dec
js
test
aad
popf
rol
jnp
mov
test
test
int3
jne
lods
test
xchg
mov
fldenv
jmp
xlat
ficoml
cmp
icebp
jo
aam
mov
aam
xchg
ffreep
fisubrl
int
and
xor
add
popf
push
fst
mov
jae
fcoms
pop
pop
aad
fistps
imul
frstor
stos
inc
mov
or
pop
out
or
lret
mov
dec
inc
imul
or
mov
je
push
pop
xchg
fstps
mov
and
dec
xchg
nop
add
lds
xchg
js
jp
inc
or
xchg
daa
clc
shlb
pop
jno
icebp
push
mov
in
inc
fwait
sub
in
jmp
pop
aad
shlb
inc
gs
dec
shll
mov
mov
dec
pop
je
mov
inc
mov
shll
inc
test
xlat
pop
iret
lret
loope
push
aad
xchg
mov
in
es
push
pop
xor
pop
cmp
add
into
xlat
dec
loop
aad
inc
pop
jmp
gs
mov
mov
mov
out
int3
lock
mov
in
xlat
andl
mov
mov
jmp
imul
dec
rcrb
daa
in
enter
incl
iret
dec
jno
icebp
and
push
lret
push
inc
aas
dec
aas
jle
repnz
loop
call
stc
inc
mov
out
loopne
mov
jge
call
mov
jo
fildl
ss
push
popa
addr16
mov
dec
call
int
inc
and
xchg
push
pop
pop
xchg
shll
or
notb
movsb
ret
ret
adc
in
pop
mov
andb
pop
pop
and
int
pop
add
fbld
add
shll
lahf
std
push
dec
and
fildll
lret
jmp
dec
mov
jp
pop
inc
int3
push
mulb
scas
fiaddl
neg
pop
pop
sbb
sbb
lds
pop
or
push
pop
outsb
dec
fsts
stos
xor
jmp
rorl
xchg
jl
push
inc
es
int
add
sbb
fldcw
xchg
fisubs
and
lret
jmp
jg
dec
lahf
inc
shll
ljmp
push
fcmovne
out
add
dec
test
lahf
imulb
divb
sti
xor
add
iret
test
xor
or
js
out
pushf
shrl
pop
out
dec
fcomip
roll
pop
aam
pop
lret
outsl
jg
ds
xchg
cmpsb
or
aam
imul
aas
lods
and
and
out
cs
popa
pop
push
jbe
out
jle
pop
frstor
mov
ret
dec
mov
gs
aam
or
popa
mov
into
pop
lret
cli
pop
pop
enter
mov
lds
jmp
call
push
popf
out
dec
push
mov
dec
push
movsl
dec
imul
imul
sbb
daa
stos
loopne
gs
mov
clc
rcrb
out
int3
xchg
outsl
jg
aam
test
insb
push
outsb
iret
push
or
rolb
roll
push
lret
cwtl
gs
pop
fucomi
jmp
dec
repnz
loop
fdiv
pusha
leave
lods
push
push
call
mov
dec
pop
dec
or
shll
jb
into
out
call
sbb
or
pusha
rcrb
dec
dec
push
adc
iret
dec
xchg
xchg
call
push
aad
push
clc
shlb
stos
xchg
loopne
test
aad
push
dec
and
orl
sti
cwtl
jl
popa
xchg
dec
test
les
dec
leave
push
push
mov
fisttpl
call
aam
and
iret
mov
aad
pushf
jge
fsubl
popf
cli
inc
or
or
int3
sbb
movsl
test
pop
lds
push
gs
lret
push
xor
aam
mov
lret
shll
mov
gs
int
lret
fcmovbe
adc
lds
enter
pop
lret
fsubrl
add
imul
dec
push
xlat
jg
push
jg
pop
movl
outsb
xchg
in
and
iret
jmp
fisubl
sbb
insb
xlat
int3
push
ret
push
push
test
shl
lret
add
push
pop
push
cld
ds
movsb
inc
xlat
aam
lods
shl
push
cmp
jp
push
jl
insb
xchg
push
jecxz
loope
fisubl
ljmp
sbb
jl
in
inc
leave
jbe
scas
pusha
aad
pop
dec
aam
fmuls
negb
and
imul
call
aad
jb
lds
sbb
push
lret
push
fiaddl
stos
js
idivb
ds
clc
push
pop
add
into
xchg
jmp
dec
cmp
lods
adc
aam
icebp
aad
rcrb
mov
push
movsl
nop
inc
pop
xchg
popa
in
mov
pop
push
iret
cli
lret
test
shl
push
out
pop
imul
mov
pop
dec
movsl
xchg
clc
dec
out
movsl
inc
jbe
in
push
leave
imul
add
pop
lret
mov
jmp
dec
mov
pusha
ffree
jbe
lods
leave
pop
push
add
jno
aad
push
jge
and
outsb
test
or
sbb
and
fisubs
adc
inc
loopne
adc
cmp
roll
inc
mov
stc
push
das
in
pop
sub
ret
loope
dec
fstl
cmp
push
in
xchg
loopne
dec
sub
fucom
leave
pop
outsb
enter
fcmove
xlat
mov
push
lds
jle
les
xlat
pop
mov
in
js
mov
adc
loop
pop
scas
or
nop
adc
fisttpl
incb
fimull
add
cmp
ret
jge
mov
or
mov
test
in
jmp
fisubl
test
adc
mov
push
cs
and
fcom
aam
jno
insb
pop
mov
mov
push
leave
es
or
dec
pusha
xchg
xor
mov
xor
outsl
call
ret
js
mov
vmulps
and
fsts
mov
loope
lret
mov
dec
js
aam
pop
mov
mov
and
push
add
sub
pop
les
fcompl
cwtl
fldenv
jmp
insb
dec
push
dec
leave
inc
or
in
push
push
in
lret
inc
cmp
pop
out
fld
mov
fsubp
movsl
mov
inc
fistl
dec
test
pop
test
std
mov
push
aaa
leave
lods
in
dec
push
sub
cmpsb
jbe
popa
aad
xchg
out
sarb
mov
cld
pop
dec
mov
imul
sbb
dec
mov
and
push
adc
fcomip
daa
aad
fst
mov
out
ret
pop
imul
lret
movsl
bound
test
arpl
dec
mov
and
pop
mov
pusha
popa
test
cmp
mov
ss
xchg
push
jge
mov
mov
xchg
leave
ror
pop
xchg
sub
fucomp
dec
lret
mov
push
adc
pusha
dec
dec
fdivl
cmpb
aad
pop
lods
aas
jne
inc
jmp
popa
cwtl
vdivss
cmp
jge
dec
pop
subb
lds
adc
loopne
rolb
rclb
fld
pusha
loopne
imul
dec
insb
jle
call
out
fcomps
out
mov
repnz
pop
fisubl
idivb
out
xchg
loopne
pushl
in
jg
lds
sbb
aad
cmpb
pushl
aas
adc
jmp
js
jge
dec
fldenv
je
addl
shl
jmp
sub
jnp
fildll
je
sub
push
outsl
in
sub
cmp
mov
push
lods
push
inc
repz
dec
jmp
mov
iret
orl
sarb
call
imul
loope
mov
mov
cmp
push
mov
jbe
stos
sub
dec
cltd
xchg
pop
mov
dec
sahf
push
xchg
pop
dec
test
jp
pop
icebp
addr16
rol
dec
pop
push
mov
aad
fdivl
xlat
fucomip
sahf
subb
push
sub
test
outsl
and
jmp
stos
jmp
dec
jle
push
loopne
enter
int
jge
pop
push
fst
inc
push
mov
mov
xor
fcomip
test
fadd
into
testl
dec
push
and
xchg
insb
addr16
imul
lea
dec
sbb
out
popa
pop
and
push
adc
jp
aad
dec
ljmp
inc
dec
pop
mov
push
loop
flds
movsb
mul
call
pop
xchg
in
push
adc
lds
push
dec
ss
js
and
out
xlat
shlb
daa
jae
lea
pop
mov
xor
into
in
pop
push
scas
fmull
ret
sub
push
enter
push
out
jge
int
loopne
fstp
sub
mov
stos
js
push
imul
ftst
loopne
out
dec
jns
roll
and
bound
or
xchg
imul
stos
push
pop
js
adcb
shl
fstl
pop
mov
mov
iret
insb
inc
sub
inc
pop
or
aad
fucom
jmp
jl
dec
jb
mov
dec
dec
enter
into
dec
dec
jle
out
out
dec
jge
out
push
mov
mov
sub
js
cmpl
in
shl
out
cli
mov
jo
ficomps
push
outsl
fstl
adc
dec
jge
push
leave
cmp
aas
push
enter
mov
fwait
inc
test
out
mov
jge
push
lea
popf
pusha
cmp
xchg
inc
dec
out
mov
cmpl
ss
daa
leave
mov
mov
iret
dec
push
sbb
ret
push
pop
push
sbb
in
ljmp
aad
repnz
push
inc
rorb
pop
dec
dec
and
push
pop
pop
gs
push
int3
cmp
mov
orl
test
lea
dec
dec
frstor
dec
cmp
push
jg
sub
ljmp
enter
insl
arpl
aad
jmp
movsl
sub
pop
pop
mov
mov
enter
dec
pusha
aam
insb
dec
popa
pop
test
repz
mov
loope
pop
int3
aaa
rcr
rcrl
fsubrl
push
fnstenv
enter
int
mov
inc
mov
lahf
push
sbbb
mov
ljmp
and
add
mov
mov
aad
lea
popa
inc
loopne
inc
pop
pop
int3
inc
mov
insb
dec
pop
mov
repz
loopne
pop
dec
jge
sarb
cli
jo
fidivrs
loope
dec
dec
push
mov
scas
enter
js
subb
dec
mov
dec
in
dec
or
mov
rorb
aad
dec
js
pop
mov
and
xlat
fmull
pusha
flds
mov
add
dec
pop
dec
dec
push
arpl
dec
popa
lods
fwait
push
fsubs
call
in
mov
pop
dec
popa
int3
push
lret
pop
js
call
mov
fcmovbe
stc
data16
fsubrs
cmp
mov
out
fwait
push
jae
jmp
in
stc
jp
push
pusha
pop
jae
sbb
fcmovu
push
dec
rol
aad
loope
dec
ljmp
idiv
xchg
int
std
insb
mov
leave
lret
and
nop
cwtl
aam
push
pusha
adc
add
loop
mov
iret
sbb
pop
orb
pop
mov
jle
int3
pop
sbb
fsubs
mov
mov
add
lret
outsb
xchg
pop
push
std
insb
xchg
fisttps
lahf
js
movsl
call
pop
cmp
shlb
mov
ja
fmul
addr16
daa
pop
mov
push
dec
add
mov
push
movsb
and
popa
insb
jno
les
int
sbb
jmp
jle
in
pop
into
ds
push
push
xlat
pop
jmp
leave
inc
in
mov
loopne
xor
scas
add
enter
data16
out
mov
inc
call
inc
out
das
mov
dec
dec
popa
add
test
push
xor
xchg
mov
dec
fstl
mov
int3
inc
es
jmp
fldt
xlat
push
clc
jge
out
decb
clc
dec
add
jmp
jl
fisttps
add
fsubl
pop
sar
adc
lret
adc
jmp
xor
push
mov
loope
push
or
push
lahf
xorps
xor
shll
adc
rcr
sti
inc
sbbl
mov
clc
adc
bnd
lret
div
adc
ss
dec
repz
neg
pusha
pop
cmpsb
adc
inc
int
pop
xchg
pop
or
dec
jge
fcompl
add
pop
inc
rorb
in
outsb
cmpb
ret
leave
test
stos
cwtl
aad
insb
xchg
mov
fistps
pop
jmp
out
imul
fisttpll
fistl
pop
stos
inc
xchg
push
shll
adcb
pop
dec
push
cld
bound
fnsave
ss
push
lret
pop
dec
push
pop
ds
addr16
dec
adc
arpl
mulb
pop
cmpb
lret
enter
insb
flds
imul
sbb
rcr
aad
push
pop
pop
lret
inc
mov
lds
out
cmc
inc
test
dec
or
lret
push
shr
dec
out
shrb
int
hlt
lea
cmpsl
js
movsl
cmp
mov
neg
push
inc
fs
cmp
into
clc
inc
call
pop
sub
mov
xchg
mov
into
rcll
pop
int3
cwtl
inc
add
insb
gs
fidivl
lret
fisttpl
cmp
test
ror
jg
push
jnp
pop
jge
push
mov
out
outsb
xlat
addb
xchg
mov
movsl
mov
insb
jp
lret
lds
into
dec
flds
and
iret
inc
data16
push
jge
pop
cmp
cli
in
mov
mov
mov
add
add
scas
loopne
jl
dec
jnp
mov
xchg
lahf
sbb
sub
lods
popl
lods
mov
movb
dec
push
jg
pop
call
lods
ret
adc
int
pop
aam
imul
pop
outsl
mov
mov
shl
mov
jae
mov
inc
xchg
iret
dec
inc
jle
jmp
out
inc
push
and
push
add
jmp
addl
mov
add
rorb
insl
and
into
addr16
dec
lea
pop
inc
out
push
rcrl
pop
inc
xchg
subb
aad
test
push
std
xchg
xchg
out
mov
cmpsl
rcll
std
inc
sub
stc
dec
push
lahf
daa
and
aad
sub
loopne
inc
sbb
aaa
test
movsb
leave
push
into
shl
and
sub
push
insl
ds
shll
push
xlat
dec
inc
mov
mov
es
out
dec
ljmp
lret
inc
or
push
push
xchg
pop
inc
dec
imul
ret
fistpl
test
mov
sbb
add
insb
cmp
lret
dec
lds
jle
into
fsubrs
rcrl
arpl
mov
lahf
or
dec
fisubrs
push
gs
adc
inc
arpl
popa
inc
push
movsl
loop
pop
rol
fmul
push
leave
int3
mov
int3
pop
mov
xor
lds
xor
xchg
push
enter
insb
clc
scas
repz
push
dec
pop
loop
leave
int
push
xchg
pop
lahf
cmc
mov
xchg
inc
jmp
pop
fnclex
fldl
aam
jg
loopne
inc
push
push
pop
ret
sub
loopne
pop
dec
xchg
popa
enter
dec
rep
lea
cmc
mov
into
jno
repnz
bound
fcmove
inc
dec
push
lret
push
fstl
jle
fsub
dec
xor
flds
test
es
adc
push
xchg
stos
stc
in
pop
flds
dec
fst
xor
mov
pop
dec
out
imul
xlat
xchg
push
pop
inc
arpl
scas
gs
in
pusha
imul
mov
pop
xchg
jbe
idivl
enter
cmpsl
es
movsl
mov
pusha
mov
fstpt
popa
dec
add
int
iret
leave
gs
push
stos
pop
jg
call
inc
mov
pop
lret
fcompl
pop
test
push
cmp
repnz
jno
xchg
adc
inc
imul
in
mov
mov
data16
jbe
clc
dec
repz
add
sub
loopne
dec
jb
bound
in
aad
out
inc
test
sbb
fs
aam
rorl
insb
jg
dec
int3
faddp
add
xlat
pop
add
in
imul
xlat
cld
fistl
jmp
adc
push
shlb
jmp
pusha
lock
dec
push
dec
push
iret
jae
fcmovnb
mov
mov
aad
push
fcmovu
jl
out
data16
pop
mov
mov
jmp
dec
iret
or
adc
rcll
push
movsl
jle
enter
dec
pop
dec
jns
iret
gs
cmpsb
dec
test
jge
call
push
inc
lds
out
push
sbb
test
pop
arpl
jg
enter
mov
rcr
loop
jge
aam
cld
cmp
test
inc
mov
push
ret
iret
and
ror
fistpll
fadd
push
mov
xchg
in
call
xchg
lock
or
xchg
sbbl
out
loopne
pop
and
les
dec
imul
sti
push
fdivp
sbb
add
aaa
and
enter
icebp
jo
out
pusha
pop
subl
push
data16
out
dec
movsl
in
pop
dec
mov
imul
pop
int3
fwait
loop
ficompl
dec
in
jb
cwtl
push
js
jl
enter
fwait
test
rorw
fdiv
enter
movsl
push
loopne
imul
fcomip
push
push
ds
pop
and
imul
dec
into
ror
mov
inc
nop
fsub
inc
push
aam
dec
int
pop
pop
out
pop
mov
out
jmp
insb
and
loopne
push
pop
mov
fisttpll
or
ficoml
sbb
inc
popa
dec
imul
pop
daa
mov
push
int3
gs
aam
add
fxch
fcoms
adc
out
in
push
xor
jmp
aam
pop
add
fmull
lods
jle
pop
rcr
enter
dec
shlb
jmp
push
fcmovnbe
sub
dec
repz
leave
scas
jmp
dec
xchg
mov
push
data16
jmp
shrl
fsubrl
data16
stc
rorl
imulb
jb
mov
dec
leave
insb
xlat
ficompl
fdivs
dec
test
inc
inc
jae
fstpt
push
add
loope
inc
push
and
iret
es
mov
mov
movsl
mov
jae
pop
xchg
popa
leave
out
out
pop
pushf
out
clc
icebp
pop
call
lret
dec
dec
fldt
mov
cltd
jmp
dec
scas
push
bound
mov
mov
dec
out
stos
sbb
sub
stos
pop
mov
or
lret
pop
pop
std
sbb
call
loopne
or
jge
inc
push
xchg
and
das
in
insl
sub
xlat
adc
push
xor
push
xor
int3
dec
jp
or
leave
pop
out
inc
pop
mov
mov
mov
outsb
les
scas
push
mov
test
cmp
ja
sub
and
adc
sub
mov
sbbl
pop
insb
std
cmc
mov
leave
fcmovbe
dec
stos
dec
js
mov
aaa
mov
outsb
lret
xchg
je,pt
push
enter
mov
lock
fcom
mov
cld
fldcw
call
or
add
jmp
pushf
mov
sub
cmc
iret
enter
jmp
in
push
popa
xorl
push
int
dec
les
push
addr16
out
sub
and
enter
mov
inc
subl
pop
pop
inc
or
rcll
loopne
fld
inc
jno
push
jmp
adc
faddl
push
fidivrl
fadds
jmp
add
mov
cmp
or
xor
test
sti
inc
fdivs
fidivrl
dec
pop
orl
push
loope
insb
dec
xor
lcall
adc
dec
push
rcrb
jmp
and
loope
enter
push
push
jb
pop
mov
xchg
cmp
xlat
test
test
out
xchg
fucomp
out
stos
into
dec
lds
pop
fnstenv
sti
xor
inc
inc
mov
int
loop
mov
dec
and
adc
enter
rcrl
push
push
mov
insb
movhps
jmp
push
dec
imul
adc
cmpsl
lcall
dec
pop
data16
aam
adc
cmp
rcrl
jmp
cltd
sbbl
inc
xchg
xor
enter
dec
insl
mov
scas
dec
mov
fidivl
fldcw
int
pusha
jg
out
fildl
scas
pop
pusha
into
pusha
jmp
inc
mov
add
imulb
sti
mov
insb
lods
xchg
out
jg
gs
pop
xchg
aad
push
outsb
pop
insb
mov
fildl
jno
adc
popa
stos
inc
pushl
fstl
lock
pop
pop
jno
call
jo
pop
mov
mov
mov
aad
xchg
or
push
repnz
scas
ss
mov
xor
int
out
xor
aaa
lock
xlat
adc
outsb
mov
sub
mov
mov
mov
imull
ffreep
pop
pusha
popa
out
scas
ss
mov
mov
pop
sub
popa
fstpt
pop
lea
sub
inc
or
xor
push
cmp
xchg
and
lock
or
scas
xchg
lahf
stos
out
scas
rcrb
aaa
mov
shrl
mov
xchg
mov
cmp
mov
push
daa
jmp
int3
icebp
xor
mov
arpl
sbb
mov
xchg
fdivrs
xor
or
scas
dec
mov
arpl
popa
pop
inc
test
and
loopne
scas
inc
pop
fsubl
xchg
rcrb
xchg
popa
sub
lret
mov
push
stos
int3
cwtl
imul
inc
lret
and
xchg
mov
arpl
lret
dec
aaa
xchg
out
cmp
ret
dec
mov
dec
xchg
sub
lea
xchg
lahf
insb
fs
mov
xchg
aas
or
insl
ja
out
mov
pushf
fisttpll
out
mov
cmpsb
mov
hlt
enter
ja
fmull
pop
fbstp
adc
mov
cwtl
daa
push
xchg
mov
rorb
insl
rolb
pop
fildll
shrb
in
mov
pop
mov
mov
inc
in
sub
push
loop
and
push
ficoms
lds
cli
dec
fcmovu
inc
and
into
rclb
pushf
lods
inc
push
ljmp
or
mov
inc
dec
aad
leave
cs
test
imul
leave
cmp
dec
and
lret
dec
addr16
aad
pop
inc
into
dec
lds
fcmovnb
fcomps
cmpsl
stos
inc
inc
repz
lret
shlb
insb
and
fsubs
int3
dec
aam
pop
add
fxch
or
pop
clc
sub
fdivs
dec
pop
sbb
jo
fcmovnb
test
out
push
into
int3
pop
xchg
fidivs
mov
push
fxch
dec
jmp
jns
jp
call
lcall
push
movsb
loopne
les
inc
adc
loopne
ljmp
call
iret
pop
push
movb
scas
jg
pop
push
push
int3
fiadds
sbb
enter
jle
xlat
fbstp
into
pop
in
pop
repz
imul
xor
cmp
mov
inc
lret
push
pop
addr16
out
loop
or
push
xlat
pop
dec
sub
dec
test
ljmp
xlat
divb
lahf
hlt
gs
fdivs
dec
ret
push
jae
fcmovnu
iret
mov
inc
pop
lret
movsb
gs
dec
jge
out
movsb
pop
outsl
ret
cwtl
addr16
adc
adc
insb
push
into
fisubrl
cmpsb
aad
xor
leave
in
adc
lods
enter
inc
ficoms
cmp
aam
cltd
int3
inc
dec
enter
pushf
int
call
mov
mov
or
cmp
mov
pop
clc
test
sti
fistpl
aam
outsb
arpl
ds
std
pop
pop
jno
out
dec
sub
scas
mov
jl
xchg
fstpl
out
daa
sub
int
mov
insb
lods
push
cmp
jne
mov
popa
cmp
dec
cmp
cwtl
lods
inc
fstp
addl
sbb
sbb
push
mov
xor
iret
int3
adcl
ret
int3
lret
jp
jo
rolb
mov
dec
aad
ror
mov
inc
xchg
mov
ss
cmpsb
lods
xlat
mov
xchg
rep
push
into
xchg
iret
and
jge
pop
test
lods
xchg
aam
fstpl
xchg
scas
dec
push
mov
repz
cmp
mov
or
lock
movsb
pop
pop
js
out
jb
pop
pop
and
dec
inc
dec
mov
sub
insb
jmp
cmp
imul
cmpsl
hlt
popf
push
into
ret
jno
sbb
in
aad
xchg
dec
mov
dec
ss
fucomi
and
mov
in
cmpsl
mov
jmp
mov
mov
cmp
pop
insb
lds
cld
rorb
mov
pop
into
inc
push
sub
cmc
imul
xchg
dec
jge
push
gs
inc
add
inc
pop
lds
push
das
push
out
xchg
loopne
pop
insb
mov
bound
mov
rolb
les
xchg
push
inc
xor
mov
pop
fcmovnb
pop
dec
push
lea
mov
outsl
pop
xchg
enter
fsubrp
pop
aam
sub
lret
mov
jmp
cwtl
testl
aam
mov
int3
push
dec
dec
jmp
fsubr
loopne
jg
imul
mov
push
repnz
fdivrl
fldenv
add
rcrl
push
cmpsl
mov
fnstsw
in
mov
insb
pop
fldt
aad
int3
lcallw
aam
xchg
jmp
popa
mov
mov
out
push
in
mov
mov
mov
push
int3
mov
in
adc
dec
fcomps
pop
xchg
lds
dec
into
jp
repnz
fcmovb
clc
pop
leave
subl
shlb
xor
lret
jne
out
insb
leave
repz
jl
pusha
add
pop
push
in
push
leave
repnz
dec
jl
pop
test
dec
lds
jl
out
mov
shl
pop
xlat
cmc
lret
push
mov
inc
pop
add
pop
pop
inc
lret
out
in
lods
clc
out
add
call
out
cmp
out
pop
les
or
adc
push
push
add
pop
push
outsb
rcrb
dec
pop
mov
jp
inc
dec
fisubs
jne
cli
pusha
int
inc
sbbl
pop
jle
inc
cmp
jae
aad
push
jle
faddl
pop
pop
lcall
loopne
fstp
insb
shlb
fstl
out
fdivr
mov
addr16
rolb
leave
push
mov
fsubl
aam
mov
xchg
dec
or
and
dec
mov
sbbb
pop
jmp
icebp
orb
push
mov
rclb
fst
loope
int3
in
call
inc
pop
push
lret
out
fcmovne
out
sti
dec
rcr
pop
inc
dec
and
addb
dec
addr16
lods
insb
cmp
data16
repz
mov
inc
dec
pop
push
loope
rclb
movsb
inc
mov
pop
popa
inc
jae
iret
pop
add
aad
dec
adc
push
ffree
sti
mov
push
nop
push
mov
push
dec
in
mov
rorl
push
fsubrl
popa
add
iret
xlat
fistpl
pop
fimuls
mov
and
dec
dec
sbb
add
mov
mov
pop
nop
aad
pop
inc
test
lret
fcoms
xchg
pop
fucom
out
js
dec
jp
dec
ds
dec
test
aam
pop
mov
jmp
mov
stos
call
cld
fistps
jmp
jl
pop
dec
dec
jg
fiaddl
loopne
mov
pop
push
fsts
xlat
addr16
js
jl
dec
jnp
scas
pusha
sub
aas
insb
mov
hlt
shlb
aad
xorl
popl
stos
mov
rcr
pop
pop
dec
jle
insb
fsts
je
cmp
dec
enter
aad
imul
fcmovne
repnz
les
pop
sub
push
xlat
loopne
inc
test
in
jbe
mov
and
loopne
data16
aad
in
dec
push
push
push
pop
lods
mov
fxch
mov
rcl
sti
inc
cmp
inc
leave
cltd
dec
dec
loopne
push
in
dec
xchg
lock
fiadds
or
outsb
test
nop
loop
out
pusha
sub
dec
out
cmc
fcmovu
mov
pop
add
fisubrs
ljmp
ss
enter
mov
dec
call
fildl
push
lret
aam
or
xor
call
pop
jmp
loope
xchg
leave
push
dec
pop
rolb
loop
fstps
mov
test
inc
shl
fisttpll
adc
pop
mov
jmp
jmp
jb
rorb
dec
xchg
jbe
sub
add
in
inc
enter
lret
mov
mov
repnz
pop
inc
int
dec
pop
push
addr16
and
andb
push
pop
inc
cmpsl
out
ret
loope
push
pusha
pop
aad
or
int
popa
es
test
mov
add
jmp
aad
and
dec
pop
popf
int3
adc
in
pop
fcmove
xlat
lds
imul
test
or
or
mov
sub
pushl
and
mov
out
dec
mov
jl
lret
fnstsw
push
out
pop
addb
sub
int
pusha
mov
call
enter
jbe
or
xor
ret
insb
loop
pop
jp
leave
push
repnz
pop
js
decb
pop
dec
inc
mov
out
mov
shrb
inc
and
int3
imul
jecxz
ret
test
jb
pusha
rcll
int3
dec
aad
mov
aam
dec
movb
pop
pop
pop
push
test
jmp
aad
loope
push
jb
jmp
jp
sbb
adc
popa
xlat
dec
dec
jl
rcll
pusha
inc
mov
jb
pop
inc
mov
mov
pop
insb
push
dec
int3
rcl
popa
mov
pop
sub
inc
jl
fisttpl
sub
pusha
rorb
loopne
cmp
fwait
andl
pop
iret
loop
fists
test
test
lock
adc
jmp
mov
jp
aad
pop
rcrl
pop
dec
jmp
rcll
inc
inc
dec
fstps
inc
imul
call
aad
pop
push
shrl
std
dec
dec
fst
fcompl
popa
add
shrb
test
inc
fldl
leave
xchg
leave
out
pop
fcom
lods
xchg
daa
mov
dec
jmp
push
sub
leave
lret
push
adc
dec
and
or
in
imul
push
aad
out
clc
sub
lret
lds
jne
call
add
out
pop
fmull
lcall
dec
mov
inc
out
enter
aam
loopne
enter
mov
js
in
add
fimull
rcll
dec
out
add
dec
rol
lret
pusha
cs
dec
sarb
popa
addr16
cmp
aad
or
leave
imul
imul
sbb
adc
sahf
xchg
cmpsl
pop
pop
mov
adc
fnstsw
xchg
repz
rcr
adc
loope
dec
imul
mov
pop
enter
outsl
fucom
rcrl
fsts
and
cmp
dec
shlb
adc
inc
test
push
in
aas
addr16
out
ud0
xlat
insb
loopne
mov
fwait
sbbb
dec
inc
mov
dec
vcvtdq2ps
icebp
rcr
aaa
jge
cld
jnp
bound
out
imul
out
movsb
ffree
lret
jp
inc
pop
mov
mov
push
dec
loopne
pusha
mov
lret
jae
out
out
out
add
clc
stos
jge
pop
add
dec
fistpll
ficomps
rorb
pop
push
jae
cmp
jp
inc
push
fcomps
bswap
aad
ret
mov
call
fistpl
dec
inc
sahf
test
fsts
dec
int
jb
mov
mov
sbb
fcmovb
repz
mov
shlb
dec
js
add
fistps
adc
jp
push
dec
dec
loopne
loopne
in
pop
iret
mov
xor
movb
push
test
int
mov
push
pop
pop
mov
out
or
and
or
andnps
clc
out
notb
rcll
and
xor
xchg
popa
mov
fmul
call
add
push
lret
push
dec
pop
out
or
mov
mov
dec
mov
adc
xor
divb
out
dec
data16
pop
aam
divl
shll
xchg
jmp
mov
les
mov
push
dec
mov
pop
mov
fbstp
fnsave
pusha
push
xor
fistl
les
mov
loopne
cmp
jmp
fxch
dec
out
in
dec
rcl
sub
xchg
push
inc
mov
lds
test
jge
dec
aam
fnsave
push
imul
pop
inc
xlat
push
push
jmp
fildl
lret
test
xchg
push
push
xchg
jmp
fnstenv
arpl
fistpl
pop
fistpll
pop
loopne
cmp
sub
in
add
push
shlb
pusha
sbb
stos
xchg
mov
clc
and
lret
shl
fldl
sbb
mov
outsl
es
fcmovu
imul
cli
dec
dec
xchg
jne
cwtl
gs
sahf
shlb
push
fstpl
jo
dec
cmpsl
mov
or
bound
add
inc
pusha
fcmove
int3
js
push
mov
xchg
cmp
mov
aad
mov
push
inc
scas
shll
pusha
push
push
mov
loopne
cld
sub
repz
inc
xchg
mov
jne
fcmovb
loopne
loopne
dec
mov
addr16
adc
dec
dec
and
cmp
push
push
outsl
dec
and
frstor
fcmovnu
loopne
out
pop
jbe
pusha
jge
push
or
icebp
std
jmp
mov
gs
jg
aam
shl
ljmp
pusha
dec
xchg
rcrl
icebp
mov
push
into
mov
push
lahf
cmp
adc
fiadds
pop
or
push
or
sarl
fstp
or
faddp
pop
pop
jmp
mov
int3
dec
pushf
insb
clc
out
nop
xchg
fistl
lds
dec
jmp
mov
fsubrl
pushf
lret
jle
les
int3
addr16
push
pop
popa
mov
push
imul
sti
dec
cmp
adc
pop
ds
cmp
cmp
xor
imul
popa
jl
dec
test
mov
iretw
pop
lahf
ds
pop
outsb
out
fldcw
addr16
add
fldl
imul
js
shlb
sbb
scas
cltd
push
test
repz
dec
mov
xor
pop
iret
mov
and
lret
repnz
cmp
fcmovb
cmc
aam
inc
out
int
mov
ficoms
lret
shrl
aad
es
scas
frstor
xorl
xchg
test
pop
pusha
out
insb
in
jbe
stc
aas
and
adc
test
out
xor
imul
in
call
mov
cmp
pop
push
mov
loopne
movsl
or
mov
inc
jg
inc
pop
pop
mov
mov
test
into
add
les
push
xchg
test
fldt
xor
insb
stos
sub
xchg
push
out
shll
sbbl
imul
clc
pop
add
lea
dec
imul
mov
mov
jbe
lret
out
aas
dec
push
cld
daa
or
and
dec
jae
mov
dec
and
icebp
push
jmp
rolb
mov
inc
les
ret
inc
aad
pop
dec
insb
pusha
adc
xchg
cmp
out
loope
xlat
dec
call
stos
pop
out
addr16
out
sbb
mov
fmulp
jge
push
cmp
jno
leave
pop
fcomip
push
pop
mov
push
imul
push
push
lret
lcall
int
cli
sbbl
int3
fucomp
popa
loopne
jge
inc
aas
or
fwait
mov
sub
xchg
fadd
clc
fcmovb
inc
repnz
inc
inc
xchg
jb
mov
jp
dec
xor
mov
popa
sub
jle
ds
pop
inc
shll
or
xor
pop
into
add
push
push
fisubrs
jp
inc
cwtl
jl
aam
or
pop
pop
inc
xchg
xor
push
lcall
jle
ljmp
out
pop
inc
or
push
into
or
xchg
loopne
shlb
int
in
push
mulb
cmp
out
mov
icebp
into
dec
test
dec
jb
rorb
xchg
xlat
mov
mov
nop
sarb
pop
push
pop
and
xor
push
dec
loopne
push
pushf
xlat
pusha
mov
ljmp
sar
pusha
mov
and
mov
dec
fucompp
je
ret
inc
jle
dec
fcmovu
pop
ficompl
loope
lret
lds
pop
mov
sti
mov
ss
dec
add
jae
les
inc
fs
movsb
cli
stos
gs
mov
inc
or
dec
ljmp
jp
dec
rorl
pop
imul
jmp
push
jae
xor
fstl
pop
jecxz
in
cmpsl
fdiv
adc
js
pop
fildl
cltd
aad
imul
call
pop
pop
xorl
iret
insb
push
aas
fwait
dec
fnstenv
pop
mov
xor
int3
push
adc
mov
loopne
pop
call
ror
adc
mov
or
pusha
pop
test
popa
int3
inc
jmp
int3
negb
hlt
in
sub
push
mov
ss
and
add
dec
lds
imul
in
mov
fwait
or
cmpsb
adc
jb
inc
dec
psubq
fisubrs
in
mov
das
addl
push
add
jmp
mov
repnz
jnp
pop
mov
loope
dec
inc
push
adc
jno
out
pop
pop
stos
dec
or
add
popa
sub
in
xchg
rcrl
dec
cmp
imul
pusha
xor
ljmp
stc
loopne
in
dec
mov
dec
test
push
int3
scas
ret
push
imul
jmp
test
push
orb
out
cmpsl
and
pop
dec
lret
stos
in
in
dec
xchg
add
pop
into
dec
fst
xlat
call
sub
aas
cli
or
rcrb
lret
popa
push
push
leave
ret
ficoml
dec
into
mov
fcom
enter
fiaddl
pop
lea
push
pop
clc
test
cmp
cmp
nop
dec
and
or
fcom
inc
dec
loopne
jmp
dec
pop
test
aad
push
inc
jge
jge
pop
sarl
lret
add
and
lds
stos
fcmovnu
in
in
pop
test
js
jg
xlat
xchg
iret
dec
mov
flds
addr16
mov
aad
push
aad
roll
out
adc
inc
lods
in
and
mov
and
leave
push
inc
repnz
aad
sub
lahf
sub
rol
pop
inc
add
call
loope
imul
imul
jecxz
fldl2e
inc
ja
add
iret
int3
or
cmp
gs
mov
lods
dec
jne
test
fsubrs
dec
faddl
mov
pop
dec
popa
mov
dec
jae
out
mov
in
jnp
rcrb
pop
roll
aad
nop
lcall
lret
fs
movsl
inc
test
out
fcmovnbe
ds
push
mov
jl
xchg
repnz
leave
sub
fnstenv
rorb
push
call
pop
loopne
fnsave
je
lret
in
frstor
jg
dec
aad
testl
dec
push
pop
leave
out
fcmove
xchg
clc
fucom
adc
xor
scas
divl
xchg
inc
mov
out
dec
shl
cmp
fisubl
cmpb
inc
pop
rcr
add
inc
mov
sarl
add
push
dec
gs
jbe
inc
pop
or
dec
jle
aam
pop
sbb
lret
push
insb
repz
popa
bound
shrl
iret
add
jp
dec
retw
mov
loopne
fldenv
gs
dec
imul
lret
dec
dec
clc
jns
out
xchg
pop
rol
mov
push
add
xchg
pop
mov
push
pop
not
pop
dec
or
lds
mov
or
fcom
dec
push
iret
mov
rcrl
flds
dec
aad
rclb
enter
leave
out
push
push
fldl
cmc
push
enter
or
adc
call
push
lret
pop
mov
lea
pusha
adc
xchg
lret
add
xlat
iret
fstpt
sbb
or
aam
ret
iret
mov
jge
pop
mov
dec
push
hlt
xchg
add
in
and
push
or
fisttpl
pop
xchg
dec
mov
addr16
pop
push
pop
test
add
inc
fsubl
xor
xor
call
fidivrl
shl
int
mov
iret
mov
xchg
mov
sub
fimull
dec
out
sbbb
dec
aaa
imul
test
ljmp
lahf
mov
popa
pop
ficoms
push
stc
aas
bound
inc
mov
jmp
dec
call
push
push
stos
fcmovb
dec
fadd
repnz
fxch
int3
push
xchg
lds
shlb
gs
xlat
jge
pop
aad
fcomps
push
fmull
fsubrp
fisttps
jl
jmp
pop
push
pop
or
enter
lea
jecxz
inc
cs
jle
fiaddl
cmp
call
mov
cmpsl
pusha
push
leave
sti
filds
mov
pop
int
fdivrl
xlat
iret
js
cmpb
inc
ret
nop
jle
rcrb
orl
push
and
addr16
test
icebp
int3
inc
mov
inc
bound
pop
mov
jp
in
lret
ret
jmp
fsubrl
repz
jl
dec
jle
insb
insb
inc
pop
imul
or
aad
sub
inc
push
fmul
aam
int
fdecstp
lret
dec
call
pop
push
cmp
push
mov
mov
testl
imul
call
xor
pop
dec
out
inc
pop
fstp
fst
les
jg
stos
dec
in
mov
imul
sbb
shrl
pop
movsl
and
aad
rcr
pop
mov
addl
ret
push
fcmovu
add
fcmovnu
adc
mov
insb
fisttpll
or
fildl
and
test
rolb
inc
xchg
mov
or
push
idiv
js
jg
dec
add
dec
adcl
push
scas
xchg
pop
fsubrl
cld
icebp
sub
fsts
int3
jmp
dec
lret
push
pop
fs
inc
aam
jge
aad
cmp
cmpsl
test
fisttpll
xchg
jge
gs
pop
int
pop
imull
in
cld
pop
push
push
xchg
dec
call
sarb
shrb
mov
divps
icebp
ror
movsl
cwtl
bound
mov
in
out
fst
xor
mov
mov
jns
inc
mov
fldcw
sarb
fmuls
push
fs
push
in
dec
inc
bound
jmp
fidivl
lret
loopne
mov
pop
rcrb
loopne
loope
iret
pop
jl
push
dec
insb
pop
std
add
jg
aad
xchg
xchg
lahf
mov
adc
pop
jg
lret
jmp
mov
int3
enter
cwtl
pusha
push
dec
xchg
mov
enter
push
ljmp
lahf
ret
adc
dec
and
adc
imul
or
into
sbb
lds
dec
inc
mov
pop
push
out
test
jmp
roll
iret
fcmovnbe
aam
rolb
push
mov
pop
mov
dec
loopne
rolb
ror
cmp
jl
push
imul
es
data16
push
andb
out
or
mov
xchg
and
mov
pop
fldenv
js
xlat
pop
add
pop
lret
stos
fcoms
mov
out
jl
loopne
fstpt
decl
int3
inc
addr16
dec
pop
test
fmulp
fiadds
inc
push
and
adc
stos
pusha
dec
fidivl
sub
xchg
dec
fs
dec
push
mov
lahf
cmpsb
fistl
jl
int3
insb
jle
pop
cmpsl
fadds
fcmovu
in
stos
dec
int3
xchg
mov
clc
push
xlat
stos
pop
loopne
stos
dec
es
lods
cmpsb
add
add
mov
xchg
inc
dec
pop
lock
push
mov
out
enter
xor
xor
sub
and
ror
add
adc
fcmovu
add
mov
cltd
out
mov
idiv
add
push
fisttpll
mov
jmp
fcompl
sti
gs
cmc
pop
call
push
add
aas
and
pushf
aad
clc
push
inc
mov
into
andl
fucom
pop
ss
mov
aad
shl
mov
cwtl
js
push
leave
jl
aad
loopne
pop
push
inc
sbb
insb
bound
in
push
gs
popa
push
ficompl
lds
add
fs
fnstsw
mov
lahf
fmul
pop
sti
inc
push
dec
mov
out
xchg
movsb
cmp
cmp
addr16
push
inc
dec
sahf
lret
mov
call
fidivl
fisubl
jbe
out
pop
mov
iret
dec
out
shrl
mov
stos
mov
adc
out
sub
push
lret
mov
cmp
dec
fistl
lods
test
cs
add
icebp
pusha
dec
int3
test
jno
icebp
test
dec
aad
or
int
push
shlb
mov
loopne
mov
or
push
loopne
xchg
add
push
aad
gs
add
out
pop
cltd
mov
sbb
mov
push
xorl
push
enter
dec
aam
lret
iret
into
rorb
inc
les
fdivs
mov
out
push
roll
clc
gs
push
fmul
imul
lds
cmp
dec
dec
or
mov
cwtl
jp
fdivrs
in
lahf
jmp
xor
jg
fucom
dec
push
aas
inc
ja
lea
jmp
and
les
inc
mov
jbe
cmpsl
mov
nop
lds
loope
pusha
insb
push
imul
lret
repnz
jmp
push
xor
jl
lods
add
hlt
fstp
leave
sub
cs
inc
pop
and
sbb
loop
pop
mov
loop
jp
mov
and
sub
andl
pop
clc
sti
jb
enter
mov
movb
jge
mov
int
dec
daa
aad
inc
insl
pop
and
mov
dec
mov
call
stc
xor
mov
push
xor
sbb
dec
fdivrs
fisubrs
stos
inc
int
mov
cmpb
adc
ljmp
frstor
imul
mov
stc
lret
cltd
jmp
sti
aaa
into
push
in
cwtl
sbb
dec
push
add
dec
inc
inc
and
or
int3
push
push
popa
fneni(8087
out
mov
inc
gs
xchg
and
out
mov
mov
pop
or
in
pusha
out
popa
rcll
xor
mov
repz
popa
or
out
pop
fisttpll
out
cmp
repz
dec
pop
cld
ret
mov
xchg
das
dec
pop
push
add
in
xlat
mov
jle
les
aad
mov
push
pop
jp
shll
pusha
dec
in
or
stos
lahf
add
cmp
sub
push
push
shl
into
in
pop
adcb
dec
leave
jbe,pt
lret
gs
mov
out
insb
and
inc
and
sahf
push
sbb
pop
pop
dec
ss
shrl
lret
pop
fwait
mov
pop
xor
and
pop
inc
mov
outsl
xchg
adc
loopne
int3
dec
jmp
xor
dec
push
pop
mov
test
outsl
jle
iret
mov
push
sub
mov
add
outsb
addr16
mov
loopne
pop
les
fldenv
sbbl
or
lcall
jmp
adc
add
lret
jmp
leave
pushf
fsubrl
fstps
aaa
mov
mov
pop
lds
adc
test
pop
test
test
adc
xchg
adc
push
dec
lret
mov
arpl
or
stc
scas
mov
xchg
cwtl
dec
xchg
dec
mov
mov
icebp
jns
inc
lret
push
push
dec
in
dec
test
loope
mov
pusha
mov
sub
jmp
gs
mov
insb
pop
mov
shlb
sbb
dec
pop
jl
pusha
jle
leave
xor
in
outsb
insb
xlat
fwait
pop
sarl
push
fcmovnb
xchg
int
push
into
push
mov
movsl
sbb
fists
pop
andb
cmp
inc
xor
repz
out
jecxz
xor
in
and
enter
lock
shl
inc
mov
data16
dec
xchg
or
mov
and
dec
add
dec
aam
cmc
mov
roll
push
aam
pop
lock
shrb
out
xchg
cmpsl
or
pop
pop
aas
jle
lods
popf
ret
inc
out
dec
fs
gs
imul
addb
push
mov
fcompl
pop
aam
jmp
test
pop
popf
mov
mov
dec
mov
sti
into
lods
gs
icebp
stos
mov
dec
pop
dec
and
adc
pop
dec
data16
mov
mov
mov
test
int3
mov
scas
mov
add
pop
retw
adc
ror
pop
push
dec
xlat
pop
pop
in
out
cmp
int3
movsb
int
out
jo
pop
pusha
mov
sub
inc
pop
mov
sub
out
jo
dec
sbb
mov
xchg
mov
lret
pop
fstpl
inc
inc
les
add
dec
mov
jbe
fidivrl
xchg
out
dec
lcall
iret
gs
repz
push
in
fxch
bswap
and
jno
fadd
mov
inc
inc
sub
mov
jns
push
les
stos
mov
stos
add
cmp
xlat
xchg
mov
sub
sub
out
mov
mov
mov
xchg
sub
pop
not
ds
ljmp
movsb
ljmp
sbbl
lret
inc
ficomps
xlat
data16
adc
push
mov
rcr
data16
pusha
add
xor
inc
negl
jb
pop
inc
push
jns
xchg
je
pop
call
pop
pop
mov
adcb
and
loop
fcmovnu
push
fidivl
push
fisubs
aad
adc
push
xlat
shlb
sub
jecxz
leave
shll
cld
jo
xlat
sub
enter
pop
pop
call
xchg
push
in
packsswb
dec
rcr
mov
fisttpll
jns
into
ds
fcoms
and
test
loopne
rolb
loop
aam
push
inc
addr16
loope
cmp
call
enter
lea
test
inc
shl
push
test
push
mov
int
pop
push
mov
push
mov
loopne
sarl
aad
xor
es
into
out
int
outsl
in
in
pop
pop
sbb
pop
dec
add
jmp
fldl
insb
pop
pop
adc
or
into
xor
enter
add
pop
push
inc
jecxz
fcomp
out
fst
dec
push
pop
inc
shlb
jmpw
call
neg
jp
aad
addr16
repnz
fisttps
out
data16
rolb
mov
cmp
and
mov
les
leave
into
pusha
or
jge
fldl
dec
insb
ficoms
adc
cli
loop
push
xlat
mov
int3
push
inc
or
jno
sbb
mov
int
shrl
sti
sub
leave
sbb
pop
dec
adc
push
cltd
fchs
insb
cwtl
pusha
das
lods
aam
push
pop
in
pop
or
in
leave
mov
addl
mov
dec
gs
imul
pop
subl
jl
dec
jge
pop
jp
and
mov
dec
push
outsl
int3
push
int
dec
push
mov
test
push
pop
push
daa
xchg
aas
sti
push
lea
inc
mov
enter
ljmp
push
aad
call
data16
add
iret
insb
pop
pusha
stos
xor
imul
rcll
addr16
mov
dec
dec
push
push
popa
mov
test
xchg
jb
shrb
sbb
lret
pop
out
divl
dec
pop
scas
cltd
int
xchg
ffree
jns
ficoml
lea
imul
addr16
push
jge
push
std
aaa
pcmpgtw
les
xchg
mov
push
orb
dec
fbld
sub
test
imul
loopne
pop
push
dec
dec
inc
ds
and
pop
andb
out
mov
pop
mov
data16
dec
iret
pop
jle
leave
enter
mov
aad
ss
pop
and
jg
dec
ror
xchg
cmp
loop
pop
rol
jmp
pop
call
rcrb
dec
imul
and
iret
aam
ret
inc
mov
add
push
rorb
mov
xor
and
sbb
leave
test
sti
out
rolb
jmp
lret
dec
mov
and
stos
test
and
dec
ret
cmc
cmc
push
mov
push
inc
out
xlat
pop
cwtl
decl
pop
aas
sarl
int
pop
jl
jl
aad
jo
pop
inc
sbb
adc
inc
xchg
and
fists
fists
les
jecxz
aad
mov
dec
movsl
aam
sub
add
jmp
xchg
outsl
dec
adc
push
push
aad
xor
mov
pop
roll
call
out
jge
out
mov
mov
aas
enter
pop
aam
pop
enter
mul
and
and
call
loopne
aas
rol
mov
stc
incl
out
imul
loopne
int3
dec
enter
inc
dec
pop
aad
mov
add
dec
lret
xlat
dec
fmuls
in
xor
jmp
out
pushf
imul
mov
movsl
out
fistps
mov
das
jl
pop
shll
aad
rcrl
lret
loopne
pop
dec
inc
dec
mov
dec
pusha
fidivrs
inc
sbb
fld
add
loopne
push
jae
fmuls
rcr
cmp
jle
fmull
aad
xchg
bound
pop
inc
pop
leave
insb
inc
adc
pop
in
fcmove
mov
fisttpl
mov
aad
sti
shl
xlat
push
mov
xor
dec
rorl
nop
pop
push
and
jle
leave
mov
orb
pop
push
inc
sub
mov
call
pop
inc
icebp
shl
pop
outsb
leave
lret
and
mov
lds
jne
stos
leave
mov
xchg
fsubr
mov
outsl
pushf
leave
shlb
popa
lahf
dec
in
cmp
lahf
neg
aad
mov
enter
insb
pop
xchg
enter
fmul
dec
int3
sub
out
inc
sub
adc
lds
pop
loopne
sub
xor
sbb
mov
cmpsb
out
dec
fsub
jnp
aam
pop
mov
data16
xor
xchg
push
inc
dec
ror
rcr
shufps
inc
mov
clc
add
movsl
jl
popa
inc
scas
mov
inc
fmull
fcomps
pop
pop
out
push
imul
jae
mov
fists
or
pop
push
mov
imul
xchg
icebp
mov
int
jecxz
cmpsb
gs
xchg
rcll
jbe
fsubl
dec
rorl
fsubs
pop
addr16
icebp
and
data16
out
lret
in
ficompl
rorl
gs
movsl
dec
rclb
fdivrs
leave
stos
jl
popw
jp
idivb
dec
mov
dec
push
and
shl
insb
mov
mov
icebp
adc
out
mov
add
pop
dec
dec
loope
inc
sar
push
pop
pop
jae
jae
push
fxch
mov
fisttpll
ljmp
dec
lret
inc
enter
ret
out
in
fistl
sbb
out
inc
pop
pop
add
loopne
xlat
popa
andb
mov
aam
fld
fmull
fnstsw
lods
adc
pushw
xchg
iret
fdiv
dec
rcrb
fnstenv
or
adc
int3
push
int
mov
push
pop
fstpt
pop
iret
fsubrl
aam
mov
fsubrs
fsts
cwtl
push
jg
leave
dec
mov
xchg
enter
fisubrl
pop
jno
loopne
dec
rorl
dec
iret
inc
mov
orl
pmulhw
or
cmp
jl
sub
int3
mov
idivl
dec
out
inc
call
test
pop
pop
and
fisttpl
pop
ror
dec
iret
or
sbb
push
bound
imul
xchg
mov
movsl
mov
ljmp
jl
addr16
cmp
dec
pop
sbb
mov
data16
add
push
aad
imul
push
mov
lock
insb
rcrb
xchg
and
sahf
aam
cltd
fwait
dec
les
cwtl
test
push
mov
cld
inc
sub
mov
shl
out
enter
inc
mov
mov
movsl
cs
and
pop
jnp
gs
mov
or
daa
push
push
mov
push
push
in
mov
out
into
xchg
ljmp
enter
push
idivl
pop
xchg
fistpll
int
in
pusha
sbbb
loop
dec
jmp
roll
aam
nop
sub
push
sbb
inc
aaa
int3
int
push
les
shrb
aam
in
lcall
jg
into
dec
jge
addr16
pop
pop
dec
jmp
mov
psubd
dec
loopne
fstps
push
cmp
int3
push
out
pop
dec
cmp
clc
jmp
jae
sbb
dec
inc
mov
add
call
jle
jmp
movsl
mov
pusha
pop
pop
notb
mov
inc
mov
dec
ffree
push
cli
dec
inc
call
in
mov
push
les
push
mov
aad
jbe
movl
aaa
mov
jmp
lahf
mov
dec
and
pop
int
iret
dec
jl
frstor
cmp
and
movsb
mov
loope
dec
les
pop
enter
inc
aam
movsb
xchg
out
test
fcomp
xchg
jge
cli
push
or
shl
rcr
dec
ljmp
int3
jg
loopne
pop
pop
gs
xorl
inc
in
out
ficompl
inc
int3
pop
sbb
xor
cmc
pop
jle
lds
push
shlb
loopne
pop
pusha
and
fisttps
andb
dec
int3
xlat
int
push
lret
aas
and
pop
xor
test
test
fbld
push
pusha
popa
rcrl
ja
fisubrs
inc
ret
mov
aas
mov
and
les
aad
dec
into
mov
shrb
adc
popa
pop
or
sub
insl
into
out
push
inc
imul
imul
gs
dec
int
jge
dec
shl
pop
out
iret
out
cmc
xlat
addr16
clc
fisubrl
mov
movb
fimull
int3
xchg
mul
fs
pop
dec
iret
xchg
fisubs
leave
cmc
xchg
das
rcll
imulb
pop
push
inc
mov
mov
mov
xchg
dec
loopne
ljmp
jb
xchg
dec
and
xchg
push
sub
out
push
xchg
rorb
aad
inc
pop
test
push
data16
test
jmpw
mov
out
popa
mov
mov
je
jb
mov
fisttps
jle
fisubrl
cli
imul
push
add
int
sub
pop
cmc
les
xlat
pop
pusha
sbb
mov
repnz
fcmovbe
fucom
dec
aam
push
push
mov
sub
jno
icebp
and
bound
pop
xchg
sarl
inc
movsb
ror
xor
fstl
gs
popa
pop
pushf
std
inc
fs
imul
pop
lods
shlb
pop
lret
pop
or
jge
shll
inc
jae
inc
dec
push
and
jp
inc
lcall
jmp
inc
stos
fnstsw
clc
insb
push
dec
pop
mov
imul
inc
push
add
imul
push
leave
push
movsb
into
jg
dec
mov
rcrl
push
test
inc
nop
inc
pop
pop
cmp
push
lds
pusha
lret
jge
orl
mov
lock
and
cmp
inc
loopne
xchg
lret
push
xchg
mov
fldcw
push
fcmovu
lds
sahf
ss
jmp
pop
push
dec
inc
dec
inc
out
dec
pop
push
and
loopne
xchg
add
dec
stos
inc
out
push
dec
aas
sbb
in
and
out
fxch
jne
fcmovnb
enter
popf
mov
movsl
iret
test
scas
ror
jae
pop
pop
les
push
ror
push
dec
aam
movsl
lods
jge
dec
loopne
insl
push
jge
cmpb
sbb
pop
int
mov
shl
lods
mov
mov
aam
or
fisubl
movsl
inc
fcmove
test
ret
dec
lds
hlt
dec
xlat
fwait
inc
aam
mov
adc
dec
add
aad
add
out
out
pop
fsubl
clc
call
dec
clc
pusha
fmuls
test
imul
push
xor
mov
loopne
cltd
xchg
inc
ljmp
addr16
jmp
fcmovb
mov
pop
dec
test
fbld
dec
sub
and
push
ret
data16
adc
mov
dec
enter
popa
test
sbbl
pop
fcmovnbe
or
jle
gs
aam
paddusb
xchg
repz
lea
dec
mov
addr16
lret
jp
leave
add
gs
jo
mov
ljmp
outsl
fisubl
push
sarl
fstps
inc
and
aad
cmp
jmp
nop
jmp
shl
add
pop
adc
leave
push
xlat
fbstp
in
pop
xchg
mov
imul
jge
push
fstpt
insb
fs
cmp
int
out
pop
xlat
pop
jge
scas
mov
js
xor
les
pusha
outsl
cmp
out
pop
dec
xor
push
cwtl
lods
dec
mov
pop
jmp
pop
int3
icebp
das
mov
push
shl
lret
hlt
enter
lds
das
das
lret
or
clc
or
xlat
shr
insb
lret
inc
mov
sti
mov
out
pop
aaa
cmp
imul
iret
enter
add
inc
push
mov
mov
int
ret
mov
lahf
fld
mov
mov
out
imul
cwtl
and
push
lods
add
andb
push
inc
dec
out
andl
or
sub
mov
jmp
dec
mov
mov
mov
cmp
mov
push
pusha
ret
mov
or
rcr
data16
js
and
scas
sarb
movsl
ficomps
xchg
pop
subl
xor
fcoms
shll
jae
fsubl
jne
mov
and
push
faddp
int
sbb
int3
add
lret
movsl
dec
int3
pop
pop
js
sbbb
add
xor
push
icebp
and
dec
dec
faddl
lock
fisubl
or
imul
leave
inc
lahf
ja
hlt
addb
inc
or
inc
inc
int3
lret
pusha
ret
addr16
ret
bound
inc
inc
pop
loopne
fadd
rorb
push
xchg
push
mov
sbb
into
out
sbb
inc
cmp
mov
push
ljmp
dec
fisubrs
data16
pop
sahf
imul
pop
pop
sahf
sub
push
dec
and
adc
push
mov
mov
neg
pusha
cmpsl
dec
xchg
faddl
test
ret
in
push
mov
sbb
js
dec
sti
sbb
xchg
push
mov
sbbb
jne
sbbl
mov
jl
addr16
call
call
fmull
mov
xchg
xlat
mov
mov
arpl
or
add
fsubrs
in
sti
pop
into
data16
arpl
push
in
cmp
out
jno
ja
bswap
jmp
fistl
xchg
lahf
call
xor
dec
xchg
das
push
into
loop
push
or
out
or
pushf
jb
inc
cwtl
adc
dec
inc
dec
push
jmp
jp
push
outsl
add
testb
in
pop
mov
sarb
les
cmp
cmp
imul
dec
xchg
dec
jne
jbe
out
call
push
fcmovnb
pop
clc
insb
pop
cli
shrl
pusha
sbb
dec
ror
jmp
iret
or
das
adc
int
lret
push
lds
push
mov
repz
int
push
mov
dec
stos
push
xlat
jmp
xchg
xchg
inc
xchg
fistps
push
popa
mov
call
pusha
test
dec
pop
fisttpll
mov
repnz
mov
js
repz
insb
jmp
loop
outsb
cmp
fldenv
les
jno
or
fdivr
dec
pop
iret
push
xor
incl
test
aad
dec
push
jecxz
dec
rolb
push
xor
enter
rcr
inc
lea
call
pop
dec
ljmp
push
arpl
int3
loopne
enter
fsubrl
jmp
cmp
aad
lcall
push
cmp
jge
jle
inc
sub
int3
jmp
test
mov
imul
push
aad
inc
ljmp
fildl
fsts
leave
ljmp
mov
push
lods
push
inc
mov
push
filds
mov
int
fstpl
dec
jbe
jbe
lods
cli
and
mov
call
mov
gs
jmp
dec
jmp
out
jno
xlat
push
mov
call
out
pop
mov
lret
imul
test
push
pop
mov
vsqrtps
pop
lret
in
pop
push
popa
pop
dec
in
fisubs
jmp
and
in
dec
adc
imul
pusha
push
dec
negb
pop
jle
popa
dec
pop
or
jb
out
xor
loopne
fidivrs
scas
push
fsubs
clc
leave
dec
pop
inc
fimull
adc
rol
gs
out
mov
inc
pop
call
fst
fistpl
mov
pop
inc
pop
push
enter
mov
jg
int3
lret
dec
mov
aam
push
dec
dec
adc
subl
in
es
xor
xlat
sbb
lret
in
jb
shrl
frstor
fsubl
add
addr16
inc
xchg
shr
call
fisttpll
sbb
mov
int
jmp
int3
xlat
enter
fiaddl
aad
jge
push
pop
jp
jae
lret
jge
dec
mov
insb
cli
popa
ljmp
rcrb
cmp
or
in
fucomip
push
test
lret
lods
mov
and
cld
enter
dec
lret
xor
movsl
pop
sahf
fsubrs
int
push
dec
test
sbb
movb
fsts
add
pop
pop
out
mov
subl
icebp
jl
fistps
mov
stos
jecxz
les
cmp
enter
sbb
fildl
arpl
fstl
mov
test
lret
adc
mov
xchg
stos
js
dec
pop
and
lret
or
mov
dec
and
mov
enter
pop
mov
in
cli
rcr
mov
push
dec
rorb
and
push
push
loope
filds
lret
jmp
fmuls
push
xlat
pop
ffreep
mov
test
mov
iret
fdivp
sarl
dec
cli
imul
xchg
push
arpl
mov
jno
ljmp
mov
out
lret
dec
pop
jmp
js
test
bound
cmp
pop
clc
out
call
test
in
loopne
and
dec
xchg
popa
dec
and
mov
pop
loopne
andnps
cmpb
scas
leave
data16
mov
cmp
dec
shrb
dec
in
xchg
out
call
mov
test
cmp
cmp
into
jae
pop
fdivr
cmp
ljmp
push
or
push
push
bound
icebp
popa
into
loopne
data16
lret
add
out
insb
ficoms
jno
jnp
movl
fwait
jge
pop
out
imul
scas
movb
dec
in
sbb
xchg
jl
pop
add
xlat
insb
call
bound
dec
push
lds
int
bound
cltd
into
push
xor
mov
in
add
sarl
fimull
push
pop
xlat
into
les
addr16
add
aam
nop
xor
int3
dec
pop
mov
mov
mov
jmp
int3
push
jmp
pop
repnz
outsb
dec
test
mov
jl
aad
ficoms
push
push
jae
shl
addl
data16
lds
xlat
dec
sar
enter
fxch
mov
ffree
int
pop
nop
jmp
push
inc
adc
adc
mov
xchg
pushf
push
imul
leave
test
mov
dec
xlat
push
lret
push
les
xchg
fs
xchg
pop
test
aam
push
fists
clc
enter
stc
iret
cwtl
outsl
imul
loope
fmul
mov
daa
mov
out
push
leave
fstl
push
inc
fnstenv
shl
loope
aad
mov
fsub
cwtl
add
imul
cmpsl
lds
cmp
in
jg
lret
clc
jae
es
clc
push
xorb
icebp
mov
mov
cli
rcrb
aad
jl
push
jge
sub
leave
fdiv
mov
push
insb
push
dec
pop
xchg
xlat
inc
sub
or
lahf
aam
rolb
insb
inc
pop
ds
iret
dec
push
sub
pop
fbld
sub
lds
shll
sub
fisttpl
call
inc
pop
out
push
or
clc
pusha
mov
inc
decb
dec
shll
fdivrs
push
insb
out
lret
jae
enter
aam
call
dec
and
cli
addr16
ret
loope
call
add
iret
daa
jge
subb
mov
add
fdivl
push
pop
notl
adc
adc
shll
dec
inc
dec
adc
mov
js
flds
push
fistl
out
outsl
fcmovbe
and
dec
pop
icebp
sub
cmp
dec
call
jg
lret
rcrl
push
mov
ret
ret
jmp
xchg
jle
insb
enter
add
xchg
shl
or
dec
or
push
push
int
or
out
and
pop
pop
adc
lods
in
inc
add
jg
push
add
les
addr16
andl
fcomps
clc
popa
insb
xlat
jle
dec
inc
push
addr16
mov
les
push
jnp
mov
lods
fcmovnu
aad
xor
pop
lret
fwait
icebp
push
inc
addr16
js
pop
push
pop
push
dec
mov
roll
pop
clc
les
cli
push
push
insb
fld
aaa
enter
pop
mov
in
dec
lds
mov
xchg
sub
aam
aaa
repnz
dec
in
mov
fstp
aas
les
ss
enter
test
int3
inc
imul
dec
js
xor
in
out
mov
mov
pop
not
mov
stos
shl
sarb
jl
push
mov
pop
dec
sarb
adc
mov
rcll
mov
pop
fstl
aad
in
scas
inc
movsl
hlt
into
mov
mov
mov
stc
mov
mov
leave
in
les
hlt
push
pop
dec
mov
dec
push
dec
inc
inc
mov
push
inc
lahf
and
rorl
mov
push
adc
stos
jmp
dec
cli
jp
or
inc
into
aad
in
gs
dec
xchg
xlat
out
in
jae
loope
loopne
pop
push
aad
enter
mov
xchg
ficompl
dec
jb
inc
leave
out
adc
push
fsubp
out
xchg
pop
push
aam
enter
mov
out
lds
add
out
in
fcmovb
pop
pop
out
into
imulb
call
out
lds
gs
out
jg
jmp
dec
jp
imul
test
fistl
pop
pop
aam
ds
dec
lret
punpcklbw
aas
mov
push
shrb
adc
xlat
push
pop
mov
cs
js
inc
lods
neg
jp
fisubrs
out
inc
mov
aam
xor
cli
jg
mov
dec
lret
shl
push
cli
fimull
rolb
int3
loopne
push
mov
addr16
pop
dec
mov
pop
fmul
fcmove
mov
gs
popa
scas
pop
add
in
dec
test
push
pop
mov
pop
push
cmpsb
xor
inc
inc
gs
fildll
xor
sar
jnp
fwait
jno
jno
les
test
mov
enter
inc
imul
fadds
lds
fs
leave
pusha
dec
test
leave
cmpsl
jb
iret
pop
pop
insb
int3
dec
lahf
adc
push
leave
xchg
push
fisttpll
iret
or
cmp
imul
ja
xchg
leave
lret
xchg
xchg
into
shll
int
daa
cltd
push
pop
push
or
push
mov
pop
enter
dec
push
pop
fstl
decl
inc
data16
in
xchg
into
dec
pop
les
dec
insb
gs
and
pop
inc
mov
int3
jle
pop
push
add
cmp
loopne
aam
jl
fstpl
xlat
imul
addr16
jle
pop
dec
or
cltd
mov
stc
dec
movsl
lahf
hlt
pop
sarl
pop
les
xchg
loope
push
dec
rorb
push
push
mov
ror
cmp
aad
inc
dec
aad
test
push
into
icebp
sbbl
popa
negl
xor
in
dec
bnd
mov
movsl
fmuls
mov
movsl
adc
test
aad
arpl
lock
mov
fucom
inc
enter
int3
mov
mov
inc
push
aam
arpl
inc
dec
mov
jecxz
imul
test
gs
push
jg
dec
int
and
pop
roll
lds
stc
sbb
pop
outsl
pusha
xlat
lahf
cmp
data16
dec
enter
pop
movb
push
xor
loope
out
imul
pop
into
jl
filds
in
fadd
cli
dec
ds
loope
pop
fdivrp
pop
fiaddl
call
push
gs
shrb
dec
inc
cwtl
and
hlt
into
and
popa
out
jb
cmp
pop
sti
arpl
test
xor
push
dec
insb
dec
subb
jb
dec
mov
inc
mov
xlat
out
bound
mov
shrl
xchg
xor
rorl
fldcw
movsl
xor
fildll
pop
cwtl
mov
incb
pop
push
gs
out
movsl
xchg
push
lds
push
sbb
dec
mov
jle
pop
and
jle
scas
sahf
xor
out
or
gs
imul
int
push
pop
cli
clc
shr
lds
leave
aad
into
frstor
scas
pop
out
mov
fildll
sub
rcl
push
inc
jg
dec
lahf
xlat
ds
loope
les
shll
out
jp
xrelease
mov
xchg
fiaddl
push
into
pop
in
pop
js
hlt
and
push
adc
fimuls
pop
mov
cli
loop
dec
vpsubsb
jmp
fidivs
add
filds
inc
popa
fisubs
mov
pop
mov
loopne
jmp
and
inc
dec
xor
imul
dec
imul
gs
pop
scas
dec
repz
icebp
gs
shrb
inc
and
xor
fists
dec
mov
leave
push
lcall
stos
mov
inc
aad
dec
jno
pop
iret
adc
rol
shlb
xchg
arpl
mov
fldt
jle
dec
movb
inc
dec
and
aam
shrb
dec
gs
gs
push
dec
mov
dec
loop
loopne
dec
int
icebp
dec
outsb
fcmovnbe
imul
and
gs
pop
sbb
lahf
les
aam
push
hlt
dec
dec
enter
push
jbe
xlat
push
addl
xchg
call
fstpt
jp
lds
dec
inc
aad
push
je
insl
pop
repnz
sbb
icebp
call
fcmovu
sub
jge
add
in
call
jp
sbb
lea
jmp
sbb
mov
mov
adc
mov
and
push
pop
dec
dec
aas
sub
cmpl
jge
pop
push
stos
shll
inc
rcrl
pop
jge
pop
push
ss
stos
cli
jp
pop
push
and
push
jno
pop
mov
mov
jp
repz
or
into
push
shlb
aaa
rcll
pop
push
test
xor
and
sbb
mov
repz
fcomps
fisttps
test
test
or
cwtl
in
pop
sti
call
aad
gs
or
mov
testb
addr16
fisubl
shll
int
loopne
dec
ljmp
dec
xchg
push
stc
insl
test
inc
dec
icebp
fsubrp
int
vpminub
mov
pop
leave
xchg
mov
pop
fstpl
inc
jb
out
cltd
ds
fisttpll
push
ret
dec
js
xorb
pop
lret
dec
adc
mov
ljmp
mov
out
shrb
inc
xlat
js
pop
jg
dec
pop
sahf
mov
fiadds
xor
sub
imul
jge
push
aad
xor
jl
jmp
imul
xor
dec
jne
icebp
lds
mov
push
dec
mov
add
loopne
sahf
popa
mov
push
jno
icebp
jo
inc
iret
jmp
addr16
inc
cltd
fmul
in
test
imul
aad
inc
xchg
enter
jno
xchg
leave
out
jl
xchg
jmp
clc
leave
clc
inc
xorb
sbb
movsl
arpl
inc
shl
dec
pop
loopne
mov
fcmovnb
out
add
test
aaa
add
pop
sarb
in
in
fistps
addr16
in
add
lret
clc
leave
call
aad
sahf
jecxz
fsubr
es
jle
mov
mov
cld
sub
mov
and
movb
mov
cli
jb
cmpsl
inc
mov
jbe
jmp
lret
iret
out
iret
aad
fisttps
jmp
imul
fst
test
push
arpl
dec
in
orb
dec
or
cwtl
cli
pop
int3
xchg
jmp
dec
dec
aam
addr16
shlb
sub
mov
lret
push
sar
rol
pop
frstor
fs
insb
mov
cld
scas
test
pusha
jno
out
inc
dec
je
jns
imul
jecxz
je
xor
pop
fucomi
pop
imul
cwtl
js
jle
imul
rcll
xchg
int3
out
aam
inc
mov
jmp
dec
in
jb
mov
lahf
pop
pop
dec
aas
int3
aas
inc
js
ds
cmp
push
cmp
or
add
out
loope
ret
lods
add
dec
pushf
pop
mov
out
lds
and
loope
aad
push
popa
aad
jmp
mov
cmp
sub
popa
inc
jmp
inc
inc
lds
cli
push
mov
push
mov
sahf
lret
push
pop
mov
mov
test
aam
pop
in
fcom
add
lret
inc
fbld
fdivr
in
lods
mov
cmpb
push
repz
push
push
and
ljmp
adc
xor
sbb
test
mov
dec
fldenv
rcr
enter
inc
jb
push
fdivrl
jp
dec
enter
or
mov
fsubr
cwtl
mov
mov
dec
data16
imul
or
lret
rolb
adc
cmp
dec
dec
mov
push
icebp
push
xor
add
mov
mov
movsb
daa
shlb
pop
push
dec
xchg
icebp
sub
rcrl
aaa
pop
mov
test
mov
pusha
scas
xor
or
in
adc
fxch
pop
push
dec
lds
cltd
dec
int
test
lds
inc
lret
pop
loopne
sbb
sub
inc
jae
pop
insb
pop
cli
test
aam
out
shll
data16
shll
lret
pop
xor
fstps
pop
mov
fxch
push
imul
out
pop
loope
inc
in
lret
fstpl
stc
bound
into
push
jmp
bound
fnstsw
push
push
test
xchg
rcr
and
jecxz
fstp
into
mov
mov
lret
pop
cmpsl
mov
add
nop
push
shrb
loopne
mov
mov
pop
nop
dec
addr16
stc
fs
pop
jb
jmp
dec
out
shlb
adc
hlt
retw
rep
push
dec
and
mov
add
pop
in
js
sub
call
jge
jl
inc
popa
jmp
adc
ficoms
dec
pop
or
mov
pop
mov
les
rorl
decl
lret
push
mov
fbstp
subl
cmc
pop
lret
leave
mov
mov
add
mov
movsb
fldenv
ljmp
pop
clc
push
mov
pop
cmc
push
flds
adc
pop
jecxz
lods
mov
mov
or
enter
gs
imul
negb
fbstp
cwtl
jmp
dec
pop
inc
xor
pop
mov
mov
aaa
and
loopne
out
and
dec
ss
mov
sbb
inc
inc
lds
test
mov
xlat
lahf
dec
dec
fsubs
push
jmp
push
ljmp
mov
jge
push
call
cmp
push
shr
fstps
call
in
dec
push
inc
pop
push
mov
add
xlat
in
adc
xor
ret
out
push
dec
int
lret
imul
push
addr16
into
pop
icebp
push
xlat
mov
frstor
clc
in
mov
pop
int3
sbb
xchg
inc
fcoml
dec
aaa
xor
mov
jle
insb
dec
pop
fildl
pop
aad
add
push
sbb
in
push
out
aad
pop
insb
gs
pop
clc
push
subb
int
scas
inc
push
outsb
fsubl
mov
add
fucomi
pushf
dec
sbb
outsl
pop
mov
mov
orb
inc
pusha
inc
add
call
dec
pop
sbb
pop
jg
pop
inc
xchg
inc
adc
inc
rcrb
imul
mov
fnstsw
sbbl
adc
push
inc
dec
add
pop
xlat
mov
leave
lds
or
jge
xorl
repnz
sbb
push
lahf
or
and
int
xlat
lret
imul
push
pop
lock
dec
pop
leave
adc
out
pop
addr16
and
cmpsl
inc
loope
pusha
mov
fildll
fdivrs
inc
push
aam
bound
test
push
testl
push
pop
out
mov
aad
mov
xchg
pop
js
ficompl
loop
ss
je
clc
push
push
orb
dec
outsb
mov
push
mov
fmull
por
xchg
xor
push
xchg
fimull
xchg
lds
cmp
pop
mov
jo
mov
mov
mov
xor
mov
pop
pop
add
loop
or
es
xor
incb
fdivl
int3
cltd
in
lods
test
dec
insb
pop
dec
popa
mov
adc
xchg
insb
jle
push
call
sar
dec
iret
push
les
aaa
add
cmp
add
hlt
fisubl
lds
addr16
insb
popa
dec
int3
pop
into
push
sti
inc
movsl
ret
test
jbe
dec
add
push
pop
jmp
cli
add
fmuls
xchg
add
inc
into
out
out
pop
fisubrs
jmp
imul
clc
shrl
pop
pop
ftst
call
push
mov
pusha
iret
push
and
out
jmp
outsb
pop
pop
incl
lds
es
push
inc
daa
rorl
shlb
pop
mov
frstor
or
mov
aam
fucomp
push
repz
fildl
pop
sbbb
inc
fwait
inc
inc
fadd
lret
ror
out
out
aam
call
ffreep
dec
xor
lds
xlat
js
gs
movsb
cli
pop
data16
in
test
repz
fsub
int
xor
in
aad
je
call
jle
push
es
xor
and
xchg
add
push
jl
dec
out
shlb
movl
loop
and
aam
out
and
rorb
dec
and
push
and
dec
repnz
in
pop
push
fmuls
pushf
inc
mov
mov
lods
lret
mov
mov
xchg
fstl
fadds
sub
rcr
fisttpll
enter
in
dec
pop
or
fmull
subl
rorl
ss
imul
out
out
dec
aad
push
xchg
out
insb
lret
xchg
out
jecxz
out
enter
pop
les
sahf
dec
fsubrp
cwtl
fldenv
lods
cs
sbb
fcmovnb
push
testb
stc
in
in
ficoml
pop
sub
lock
xchg
dec
push
int3
push
pop
test
fcoms
cmp
testl
mov
and
push
pop
inc
mov
divl
mov
or
lret
mov
push
adc
inc
mov
enter
popa
inc
dec
mov
or
lcall
fdivrl
push
pop
out
bound
mov
inc
add
into
insb
stos
mov
shlb
flds
rol
and
sar
repnz
mov
aas
gs
dec
out
aad
or
das
test
fcmovne
pop
iret
aas
int3
sbbl
xor
jno
inc
mov
loopne
push
call
push
xchg
iret
fstpl
loope
imul
lret
fld
mov
mov
mov
and
std
mov
mov
inc
leave
jbe
pop
dec
js
jae
lahf
push
int3
dec
pop
repz
and
addr16
mov
pusha
scas
mov
movsb
cmp
cmpsb
movsl
xorb
cltd
mov
inc
pop
fstpt
sbbl
jp
lds
aad
js
andl
ficoms
jmp
sub
xlat
int3
jmp
loope
push
dec
push
test
ret
jg
lds
in
mov
in
aas
outsl
leave
out
mov
fisubrl
outsb
inc
fnstcw
pop
sbb
inc
fsubl
inc
pop
frstor
clc
cmpsl
movsb
cmpl
and
mov
scas
test
cmp
add
aad
mov
push
dec
fcmovnb
pusha
fxch
jmp
stos
js
fbld
pop
jmp
js
push
out
jl
lret
pop
int
int3
inc
pop
mov
mov
leave
loopw
dec
jge
into
lret
pop
fmuls
inc
int3
out
imul
shlb
jl
cltd
int
test
add
inc
push
mov
cmp
mov
in
dec
mov
popf
frstor
shr
enter
xchg
lret
jmp
rorb
aad
pusha
in
mov
dec
push
div
iret
fisubl
cmpsl
or
xor
int
jg
jmp
in
insb
ljmp
mov
inc
jg
pop
inc
add
dec
testb
push
nop
push
and
mov
stc
push
pop
cmpsl
cmp
pusha
push
xchg
jl
into
inc
push
pop
lret
adc
sbb
xchg
movsl
mov
fld
pop
nop
inc
mov
test
clc
pop
insb
mov
sub
jmp
int
push
aad
mov
aam
lods
push
xlat
popf
fstps
pop
out
cs
or
push
inc
stos
test
dec
test
push
addr16
jge
dec
rorb
cld
int
pop
test
and
les
sub
xchg
out
dec
lret
xchg
add
addr16
mov
fsts
add
aam
les
inc
lret
pop
sbb
cmp
in
fisubl
mov
aas
cmp
cli
pop
testl
push
dec
mov
inc
jle
pop
pop
jne
mov
xlat
pop
repz
lcall
imul
mov
out
inc
mov
in
out
pop
jecxz
leave
fsubl
add
gs
dec
into
decl
aad
mov
and
shld
enter
idivb
mov
cmp
aam
mov
mov
and
jb
js
adc
xchg
dec
dec
gs
jmp
push
loopne
fcmovnu
pop
das
fbld
pushl
aas
insl
js
stc
inc
cltd
mov
fcom
cmp
cmp
subb
dec
pop
push
add
xchg
xchg
jbe
repnz
hlt
pop
jae
insl
dec
out
aad
in
aam
push
aas
and
pop
pusha
pop
pop
dec
orl
push
dec
les
mov
call
test
lret
add
clc
adc
mov
cli
fisubl
jl
lds
movsb
dec
pop
add
mov
xchg
push
aad
push
dec
push
out
rclb
adc
inc
fisttpl
fxam
aam
or
xchg
sahf
outsl
push
insb
sbb
lods
jb
jp
pop
xor
addr16
push
enter
pop
ds
xchg
jmp
push
dec
out
fldl
scas
pop
fimull
pusha
not
addr16
sti
mov
fcompl
dec
dec
test
iret
pop
xchg
add
fs
push
jmp
or
fldl
insb
jae
ret
rcrb
icebp
xchg
fstp
and
sbb
jg
out
test
lret
les
aad
adc
dec
imul
imul
xor
pop
lahf
je
jge
pop
adc
in
pusha
ret
dec
mov
dec
movsl
cld
fisubrs
pop
xchg
out
call
add
inc
nop
xchg
xchg
leave
jge
leave
jmp
fimuls
pop
push
fcmovb
pop
sbb
fsts
xchg
mov
mov
inc
loopne
int
dec
lods
mov
dec
inc
call
addr16
xchg
pop
ficompl
loope
pop
pop
imul
mov
dec
sbbb
in
mov
lds
jmp
pop
fbld
pop
pusha
mov
out
mov
out
dec
xlat
dec
jnp
imul
push
repz
mov
pop
jb
lret
jg
dec
pop
aas
mov
xchg
push
push
mov
inc
adcb
inc
fstl
in
dec
dec
push
push
push
pop
and
pop
ljmp
ds
mov
push
dec
pusha
lds
and
dec
fistpll
enter
aad
hlt
loopne
cli
mov
out
int
pop
fadds
xchg
add
int
dec
pop
inc
push
test
faddp
negb
clc
popa
idivl
inc
mov
inc
add
int3
shl
cmp
pop
pop
jmp
push
pusha
shrb
mov
dec
mov
pop
out
sahf
jno
sub
ds
out
jl
out
in
iret
push
and
push
mov
cltd
xchg
and
mov
in
ds
daa
aad
fdivrs
filds
or
addr16
pop
xchg
out
cmp
out
sbb
push
int
lea
shrb
dec
push
lds
pop
lods
int3
gs
cltd
mov
mov
data16
leave
or
movsl
popl
push
xlat
fistps
into
inc
push
or
iret
flds
push
push
data16
xlat
notb
xlat
cmp
pop
fdivrs
sub
inc
mov
push
sbbb
dec
cmp
cmc
dec
pop
enter
push
and
push
cmpsl
punpckhdq
mov
out
in
ljmp
add
dec
insb
pop
fbld
popf
pop
inc
mov
int3
fildl
in
fxch
vfmadd231pd
gs
aaa
pop
negb
out
int3
lret
pop
mov
jmp
js
clc
sub
lahf
das
mov
movsl
jg
lea
cs
jg
int3
inc
push
fdiv
lret
rol
aaa
lret
mov
push
andb
mov
inc
iret
mov
fsub
or
xlat
ret
js
repnz
gs
and
push
leave
xchg
int
and
lds
imul
enter
mov
push
dec
in
call
cmpsb
movd
dec
fcomp
push
xchg
aaa
fisttpl
jmp
mov
dec
push
mov
aas
sub
mov
push
jns
sarl
aam
fwait
das
xchg
pushf
test
subb
gs
fcomps
push
sbb
sbb
or
mov
fistps
dec
mov
fldenv
pop
mov
lret
mov
addl
pop
ret
push
leave
pop
dec
adc
ficoms
mov
and
ret
aam
jl
push
aas
push
mov
pop
out
push
mov
xlat
ffree
pop
push
shrl
fstpl
js
dec
clc
inc
jge
lds
push
iret
bound
jnp
pop
sub
jbe
inc
add
int3
pop
mov
test
out
pop
aaa
mov
andl
inc
jge
cli
or
cld
arpl
pop
aam
inc
mov
and
sbb
aam
or
leave
xchg
out
js
jge
call
mov
fistl
pop
mov
lods
shlb
dec
rcr
out
adc
adc
into
loopne
push
iret
enter
aam
movsb
pop
and
or
mov
rcrb
into
aam
pop
ds
push
addr16
xchg
cmp
pop
out
pushf
pop
out
rcrb
vaddss
add
pop
gs
add
pop
loop
fmulp
jp
enter
push
and
imul
cmpsl
mov
inc
fcomps
mov
out
sti
neg
notl
clc
inc
mov
test
test
mov
inc
pop
fistpll
fstpt
test
pop
mov
ror
incb
leave
arpl
in
pop
push
sbb
ds
push
int3
pusha
mov
jg
dec
enter
fstpl
into
leave
fbld
push
xchg
mov
ret
outsl
rclb
dec
rolb
cwtl
call
loopne
sbb
inc
mov
cmp
mov
ror
gs
cmp
dec
fsqrt
pop
jo
pop
sbb
aam
pop
shlb
lcall
dec
push
inc
push
push
pop
jns
dec
inc
ret
fwait
in
into
pop
xor
add
lret
addr16
int3
leave
nop
xor
mov
add
int
mov
into
add
fcmovne
mov
xor
jnp
imul
lods
pusha
push
push
js
and
fildll
ror
sar
arpl
into
xlat
gs
pop
fimull
daa
in
ds
push
push
mov
int
aam
leavew
out
clc
mov
in
popa
xor
xlat
shlb
push
test
int3
shr
cmp
das
dec
loope
aad
frstor
pop
sti
out
fdivl
loop
daa
lret
icebp
rclb
inc
out
fs
leave
arpl
adc
dec
in
aad
ljmp
jb
mov
arpl
or
or
or
outsl
push
sbb
outsl
in
movsl
fdivr
addr16
rorb
pop
stos
out
in
pop
inc
loop
inc
loop
pop
ds
jno
enter
mov
dec
cli
insl
stos
out
insb
int
or
mov
stos
sbb
fldl
push
push
xchg
mov
push
outsl
ss
mov
insb
repnz
mov
or
call
pop
jmp
dec
adc
cwtl
aam
mov
and
inc
mov
jb
jnp
dec
loopne
mov
xor
inc
mov
inc
leave
push
jle
int
xlat
and
cmp
pusha
pop
mov
xchg
adc
pop
int3
data16
pop
or
loopne
shr
int
xlat
cmpsl
aad
fcoml
dec
mov
dec
idivb
cli
cltd
add
dec
loop
test
call
outsb
roll
fcmovnbe
or
repnz
inc
fwait
jb
fcom
jne
dec
imul
loope
gs
mov
int3
stos
test
push
popa
cli
aad
pop
pop
adc
jmp
inc
inc
and
loop
gs
fsubrl
fldt
lret
inc
arpl
dec
pop
jne
or
push
mov
sbb
push
leave
aas
push
xor
inc
dec
mov
lret
lret
cli
inc
mov
test
push
inc
imul
pop
pop
pop
fisubl
mov
cmp
push
inc
inc
push
jb
into
push
popa
out
int3
lret
data16
pop
inc
fcmove
jecxz
loopne
push
sbb
lret
ret
out
pop
or
inc
or
xchg
inc
test
lret
in
arpl
leave
data16
dec
pop
add
gs
loopne
add
adc
rcl
mov
fstpl
push
sahf
movsb
orb
stc
loop
adc
lds
push
push
mov
lret
aad
inc
add
or
dec
pop
xchg
push
jmp
aad
movsb
ret
inc
push
cld
imul
mov
jp
faddl
pop
jecxz
push
dec
pop
leave
push
aaa
and
mov
mov
rorb
imul
test
mov
shll
ret
shl
pop
mov
outsl
inc
push
aad
jo
jecxz
jmp
fsubrl
sbbl
dec
push
js
xchg
call
sti
inc
pop
xlat
push
insb
add
fists
int3
add
and
inc
mov
adc
mov
and
not
fbld
je
pop
push
push
loopne
insb
iret
push
add
jmp
dec
gs
lret
aas
dec
dec
mov
lcall
ror
leave
push
leave
fistl
cmc
addr16
lcall
in
push
push
stos
rcl
dec
pop
jge
jge
jl
mov
fldt
lock
pusha
stc
outsl
loopne
and
imul
fdivrs
pop
cltd
mov
cmp
pop
cld
sbbl
fcmovnbe
aad
mov
out
test
push
les
data16
push
add
fmuls
js
movsl
or
imul
aad
es
add
inc
jmp
lahf
out
mov
call
dec
mov
fldz
dec
fcmovnb
fmuls
test
mov
data16
test
dec
pop
inc
fsubr
push
frstor
inc
dec
mov
push
jge
das
aam
mov
push
out
dec
pushf
ljmp
dec
pop
push
icebp
lock
mov
cmpsl
lcall
cwtl
aam
gs
aad
xor
xchg
cltd
xchg
push
fsubr
pop
cvtps2pd
aas
inc
lahf
mov
inc
push
movsl
inc
add
aas
insb
jle
push
jmp
or
cltd
rorb
add
lcall
fstp
push
pop
out
fs
in
popf
xchg
test
aam
fucom
or
push
xchg
in
int
shlb
cmp
sub
or
fistpll
movsb
out
push
insb
jmp
jge
dec
incl
addr16
adc
in
fwait
jb
jmp
fimull
js
dec
dec
test
dec
mov
insb
jmp
ret
xchg
or
dec
fsubrl
sahf
andl
xchg
out
mov
mov
imul
aad
pop
push
push
dec
insl
movl
popa
fiaddl
rcr
or
sbb
fxam
sbb
loop
pop
mov
filds
iret
or
sub
scas
jmp
dec
iret
inc
ror
fldcw
imul
scas
clc
fstpt
push
sub
enter
fdivrp
pop
push
inc
push
int3
out
fwait
inc
lds
fsubrs
fisubrs
fneni(8087
bound
out
mov
lret
jbe
test
push
rolb
push
mov
fisubrs
pusha
mov
gs
cmpsl
sbb
pop
out
shl
jmp
jb
inc
push
fiaddl
imul
icebp
mov
fsub
shlb
shrb
adc
cmpsb
dec
lret
aad
pop
dec
mov
jno
sbb
cmp
cmpsl
icebp
push
and
lret
in
sub
fcomps
mov
in
int
rol
out
dec
in
enter
imul
push
and
ljmp
push
fidivrl
inc
xlat
sahf
push
mov
inc
xchg
jbe
jnp
fildl
dec
loopne
loope
inc
fsubr
dec
lock
adc
hlt
rcr
sbb
sub
pop
rorl
push
pop
imul
or
iret
out
dec
push
in
mov
sbb
roll
test
rcll
lret
scas
push
int3
push
jmp
push
push
movsl
btr
addl
sarb
and
int3
pop
dec
ficompl
pop
js
fsubp
push
jle
cmp
ja
mov
dec
test
test
lcallw
dec
push
jp
pop
xor
or
pop
sub
push
mov
xchg
out
call
jno
fstl
jg
inc
enter
cld
dec
lret
mov
push
pop
fnsave
insb
test
les
movsb
bnd
xchg
roll
dec
mov
fcmove
jb
sub
scas
out
sahf
int
out
lret
in
add
imul
dec
push
jb,pt
xor
cli
movsb
lret
push
int
fstpl
repnz
pop
jnp
jmp
dec
movsl
xchg
arpl
in
gs
jmp
in
cs
rorb
loope
dec
fimull
mov
mov
push
int
xchg
inc
push
call
jg
inc
sub
stc
loopne
int3
jge
fidivrs
popa
out
cmp
in
jp
mov
xchg
aad
out
iret
push
outsl
jl
jge
inc
daa
inc
not
push
scas
addb
adc
jmp
leave
cmp
rcll
xlat
out
repz
pushw
jg
inc
add
bound
pop
push
dec
and
lret
js
rorb
mov
shrb
inc
sbb
pusha
out
xchg
lds
mov
js
jns
dec
fwait
inc
fisttpll
dec
les
push
xchg
xlat
rcl
push
ljmp
push
fidivrl
pop
popa
pop
mov
mov
mov
aad
push
fstl
insl
aam
sbb
daa
or
aad
rcr
pop
mov
gs
repz
dec
leave
xchg
repnz
mov
imul
rol
xchg
or
dec
pop
push
mov
dec
mov
out
iret
leave
repz
add
test
mov
call
nop
fldl
pop
pusha
mov
jo
loope
push
stc
or
sahf
mov
jno
test
jl
jle
fistl
iret
out
inc
pop
das
and
fcmovne
or
jge
leave
push
inc
cmp
pop
call
fadd
jge
shrl
enter
push
sbb
stos
cmpb
gs
pop
pop
aam
aam
test
les
add
loopne
addr16
sub
push
mov
sub
scas
ror
cltd
aad
jb
imul
or
out
push
movsl
ficompl
scas
xchg
sbb
fimuls
inc
lret
repz
pop
dec
sbb
mov
stc
push
cmp
fisttps
mov
out
pop
mov
repnz
gs
aas
iret
mov
jmp
clc
fdivl
xor
popa
and
insb
xchg
mov
fwait
pop
aad
jle
xchg
pop
shrb
sbb
jnp
movsb
leavew
add
movb
aaa
enter
js
dec
fistpll
xor
pop
fiaddl
loopne
mov
int3
iret
pop
gs
leave
mov
xor
ds
aad
faddl
jl
fistl
inc
dec
dec
lds
faddl
out
in
loopne
push
xchg
int
fsubl
pop
rclb
fucomp
mov
stc
pop
inc
call
shll
call
push
push
fistpl
shl
dec
repz
ret
aam
xor
repz
iret
aad
stos
fnstcw
mov
loope
push
push
pop
stos
mov
ljmp
nop
aad
jb
fcoml
push
xchg
push
dec
addr16
pusha
lods
fstps
sbb
dec
dec
gs
pop
js
pop
jge
push
adc
out
imul
popa
popf
fimuls
aas
xlat
mov
gs
pop
out
pop
jp
pop
jnp
fidivl
scas
mov
movsb
mov
fs
imul
fcom
cvtps2pd
jle
push
push
lahf
rol
rol
dec
inc
mov
nop
dec
pop
icebp
sbb
gs
pop
pop
shrb
and
mov
fwait
xchg
push
daa
mov
test
hlt
inc
out
and
dec
cmp
fstp
iret
jns
inc
test
fcoml
nop
dec
dec
jp
cmpsb
cld
aam
xchg
loop
push
int3
sarl
push
jmp
dec
push
and
cwtl
mov
rorb
inc
lret
jnp
fimuls
sti
inc
pop
sub
in
push
sub
pop
pop
or
pusha
sahf
pop
les
dec
jge
push
jge
aas
in
pop
sub
stc
mov
enter
dec
sti
int3
push
nop
and
pop
shl
mov
fsubrl
repz
push
loopne
inc
fisubl
dec
repz
rcl
fmul
dec
test
addr16
lret
or
jmp
mov
pop
fisubrl
sbb
repnz
jmp
test
ja
sarb
lret
and
roll
ficoml
pop
out
push
push
mov
pop
lock
mov
mov
mov
xor
repz
test
inc
jecxz
aam
push
js
adc
add
test
push
scas
adc
clts
js
jbe
scas
vcvttpd2dqy
pop
aad
push
cld
lods
sub
mov
pop
sbb
pop
pop
clc
pop
push
in
mov
pop
idivb
pop
loopne
mov
mov
inc
in
fisubrl
xchg
xchg
loope
shlb
dec
inc
rol
pop
jmp
shrl
stos
dec
sbb
pop
leave
ret
push
fsts
enter
imul
xor
sub
and
jbe
push
jae
jp
pop
sub
cmp
mov
aad
out
jne
ret
sti
xlat
test
mov
dec
flds
fucomip
icebp
fisttpll
movb
ds
cmp
fisttpll
pop
aas
leave
in
lds
loope
dec
dec
mov
mov
ljmp
adc
insb
jmp
mov
fcmovu
shrb
outsb
sarb
fsubp
push
inc
jle
or
pop
push
and
xchg
test
rcrb
insb
sub
lcall
flds
enter
or
pop
int3
aaa
loopne
cmp
outsl
fsubp
push
into
lds
mov
aam
mov
jmp
push
fxch
pusha
shll
jecxz
movsb
insb
mov
dec
cs
stos
mov
into
jge
int
fdivs
cmp
into
mov
popa
and
insb
jg
pop
mov
shrl
out
out
pop
loopne
sub
add
dec
loope
push
lret
mov
aaa
cmp
ret
mov
rcl
into
call
push
dec
jmp
ss
sub
push
frstor
xor
inc
mov
dec
add
leave
pop
inc
jmp
loop
mov
or
mov
mov
inc
gs
pop
into
jbe
int
out
fbld
dec
mov
in
fidivrl
fs
mov
aad
push
sarl
pop
push
push
jl
enter
iret
leave
arpl
fadd
lret
fcomp
frstor
pop
push
cmp
lods
fadd
adc
jnp
and
imul
cld
imul
mov
out
xor
jmp
mov
or
aaa
push
jg
fcoml
push
push
ljmp
add
test
jb
jmp
sbbl
xor
daa
inc
push
cwtl
push
popa
mov
pop
dec
lods
mov
fucomp
xlat
shrb
sbb
inc
daa
push
xchg
popa
pop
xlat
pop
movsb
scas
xchg
jbe
idivb
jp
jmp
sub
adc
test
mov
aam
fwait
int3
ficoml
aaa
icebp
lret
pop
xor
out
push
dec
push
jl
lret
push
test
sub
push
pop
popa
dec
std
inc
cmp
jg
aam
repnz
sbb
mov
adc
mov
dec
push
mov
jle
dec
out
xor
or
push
imulb
dec
je
loope
mov
mov
mov
mov
fcomp
leave
xchg
jb
dec
jmp
aam
push
xorl
stos
mov
rcll
dec
xor
lods
cli
std
cld
aad
mov
fmul
fimuls
jno
push
pop
xchg
popa
ljmp
rcrb
and
cmp
jge
int3
push
jle
scas
dec
cld
addr16
cli
ror
in
dec
dec
jge
push
cmp
jmp
xlat
dec
test
in
outsl
xlat
imul
cli
jbe
cli
dec
insb
mov
pop
movsb
xchg
stos
bound
mov
mov
mov
mov
dec
mov
call
sub
pop
fistl
popf
lahf
mov
inc
mov
push
push
xchg
fcmovbe
xchg
add
shlb
dec
and
rol
pushf
jmp
cmp
dec
or
sbb
push
popa
xchg
dec
cld
pop
out
cmpl
push
mov
loop
xorl
adc
sarl
gs
dec
inc
movsb
fcomp
lods
popl
insb
jl
pop
pushl
add
fsubrs
lods
sbb
out
push
mov
bound
dec
mov
pop
lods
repz
push
jge
fdivrs
test
imul
push
pop
inc
jp
dec
int
rorl
fldl
or
push
fdivrl
dec
out
dec
cltd
les
push
lds
andb
dec
xchg
and
fdivs
and
mov
mov
fmull
sbb
mov
fstpl
arpl
insb
mov
ja
ret
jb,pn
out
xor
jge
test
loopne
dec
out
insb
out
repnz
out
xor
dec
cmp
fcmovnbe
sub
adc
in
out
jle
inc
aam
jmp
jb
sarl
xchg
or
into
fldt
dec
xor
mov
cli
fld
sahf
jle
jae
push
arpl
aad
dec
push
pop
push
jmp
imul
inc
pop
push
dec
jecxz
rcrb
cmp
inc
pop
pop
xlat
ret
enter
pop
lcall
add
into
out
fisttpl
arpl
mov
in
push
xlat
fldcw
ljmp
dec
cmp
stc
jb
in
mov
daa
stos
sub
out
inc
push
push
xchg
fiaddl
outsl
mov
insb
fsub
jbe
lods
clc
xlat
hlt
int3
mov
pop
xor
xchg
pop
mov
push
rcrb
xchg
test
dec
inc
xor
mov
icebp
pop
fldt
data16
outsb
push
sbbl
ds
test
icebp
movsb
pop
test
shl
xchg
je
iretw
or
enter
adc
fucomi
jp
dec
jmp
outsl
imul
gs
xchg
lahf
dec
ljmp
add
push
mov
addr16
and
dec
xchg
add
cld
and
movsb
pop
jge
movl
xor
rcr
fldenv
xlat
mov
pop
pushw
insb
sbb
dec
dec
rclb
xor
mov
jp
lock
int3
jmp
ds
dec
inc
fisttpll
les
push
and
push
add
pop
insb
pop
les
dec
fisttps
lahf
and
push
rolb
xchg
divl
mov
fsubrs
inc
dec
push
shrl
iret
int
lret
jg
cmp
xor
dec
sub
shl
mov
insb
mov
aam
lods
mov
cmp
jl
sbb
sub
pusha
jp
lds
push
rcr
mov
mov
push
mov
movsl
into
dec
xor
outsl
fldl
test
les
adc
lods
out
and
lock
in
pop
add
lcall
dec
push
loop
dec
push
dec
cmp
push
stos
je
inc
adc
mov
mov
or
das
pop
data16
leave
inc
frstor
mov
ret
andl
insl
mov
jle
into
adc
repz
add
push
dec
int
inc
and
push
jno
imul
pop
push
icebp
pop
dec
rol
jne
sar
outsl
push
and
pop
xlat
inc
pushf
push
pop
aad
jg
and
pop
push
cmp
dec
pop
inc
lahf
int3
lahf
repz
and
pop
sbb
push
xchg
dec
cld
stc
shlb
popf
pop
out
jno
imul
xchg
in
pop
cmp
xchg
xor
jmp
dec
dec
fs
fdivs
pop
rcrl
sub
les
rorl
ljmp
out
mov
pusha
leave
adc
sbb
es
dec
dec
xor
data16
cld
push
call
pop
enter
aad
jg
into
insb
push
aas
xor
push
sub
inc
xor
loop
jns
gs
xor
fsubr
inc
jmp
add
dec
iret
pop
sub
fcoml
push
pop
dec
loopne
jecxz
movsb
adc
jp
pop
call
loope
mov
rcl
push
jge
pop
dec
jle
push
pop
jge
inc
cmp
dec
lahf
lods
xor
dec
ss
sbb
push
into
lret
pop
fwait
xlat
xchg
push
out
iret
pop
bound
add
dec
out
xlat
pop
lcall
movb
imul
test
push
mov
pop
pop
loop
pop
in
filds
insb
fxch
lcall
push
pusha
cmpsl
call
test
add
addr16
pop
mov
test
pop
dec
mov
sete
push
out
mov
push
jb
mov
ret
lret
add
out
lock
push
xchg
data16
fisubrs
leave
add
lods
stos
movsb
not
jge
int3
ds
lret
inc
xchg
fmull
test
and
daa
jl
addb
inc
aam
xchg
pop
xlat
fucomi
gs
js
cmpl
sub
out
adc
pusha
shl
xchg
push
pop
test
cmpsl
rorl
fildll
jmp
pusha
xchg
mov
movsl
imul
shll
repnz
push
aad
out
mov
xlat
jge
out
pop
js
clc
adc
add
aas
sti
mov
and
psubsw
int3
loopne
jl
cli
stc
sbbl
mov
cli
popa
rcl
cmp
dec
les
aam
jmp
jb
mov
sti
sub
mov
push
or
mov
ss
aad
loopne
aam
mov
popl
mov
repz
aam
fidivs
mov
ss
fst
push
addr16
int3
cmp
and
cmp
out
cmp
sub
ja
sbb
repnz
xchg
or
lea
iret
push
dec
mov
in
push
sbb
adc
sbb
popf
int
jnp
int3
iret
lds
mov
je
aad
out
bound
fisubl
pop
push
pop
inc
and
arpl
iret
lcall
push
fsub
cmp
pextrw
imul
fisubl
dec
mov
sbb
addr16
int3
xor
les
mov
into
fbld
jmp
dec
rorb
mov
mov
aad
jae
push
mov
pop
iret
bound
nop
mov
ds
call
aam
jb
int
jbe
pop
pop
jg
call
imul
pop
mov
pushf
or
mov
xchg
push
popf
or
fisttps
pop
aam
fdivl
dec
mov
inc
jmp
inc
pop
sbb
addr16
insb
call
pusha
push
cmpl
push
test
push
mov
les
xchg
pop
gs
jmp
mov
in
ds
xlat
add
pop
test
dec
out
icebp
pop
xchg
fldenv
fcoms
rolb
xchg
out
inc
loope
js
xchg
and
jbe
xlat
fstl
jmp
jmp
aam
xor
inc
iret
dec
test
imul
imulb
scas
test
int
test
pop
dec
lret
into
push
push
sub
fimuls
or
jmp
pop
push
push
add
stc
fucomip
adc
pop
in
mov
jo
bound
pop
pop
pusha
cmp
data16
pop
cmp
xlat
dec
dec
lret
mov
gs
mov
cs
fnsave
mov
fcom
test
pop
fbld
mov
out
scas
jb
cs
pop
fadd
test
mov
ja
push
aad
push
dec
loope
add
mov
lret
xchg
add
xor
jle
pop
dec
fsubp
mov
fsub
xlat
out
popa
xor
jno
mov
xchg
dec
stc
xor
xor
rcll
aas
lret
in
mov
ret
mov
adc
xlat
enter
out
pop
popa
pop
imul
faddl
lret
leave
push
inc
mov
sbb
pusha
xchg
pop
mov
jge
pusha
inc
sbb
scas
aaa
pop
fxam
cmp
adc
das
pop
into
cmp
leave
adc
pop
fsubrp
fucomi
repnz
jle
iret
push
and
das
pop
imul
stc
xor
jb
mov
inc
or
icebp
out
arpl
ficompl
les
leave
or
bound
dec
xchg
mov
jecxz
in
mov
push
adc
pop
and
insb
decb
dec
inc
mov
shrl
jb
stos
and
mov
fbstp
fmuls
dec
pop
imul
dec
lds
pop
lock
add
push
dec
lret
fcmovbe
mov
jbe
data16
jp
push
loopne
rol
les
daa
dec
push
push
add
xor
pop
push
imul
pop
mov
nop
pop
iret
rcrl
dec
and
push
aad
aad
js
in
adc
mov
mov
leave
pop
pusha
lods
mov
inc
rolb
enter
popf
mov
les
xchg
mov
aad
inc
xchg
call
cmp
mov
in
fsubrl
fisubl
cmc
dec
test
add
lret
scas
in
adc
push
enter
adc
fstl
mov
leave
jle
push
pop
iret
aam
shr
aad
int
xchg
fdivp
sti
lret
fisttpll
loope
xlat
lret
pop
lds
dec
pop
or
test
lods
jb
movsb
pushf
mov
push
lret
xchg
sahf
ljmp
movsb
dec
jl
iret
inc
push
inc
xchg
pop
pop
cmpsb
mov
fcompl
jp
int
clc
movl
xchg
mov
loope
inc
movb
pop
rorl
iret
test
aas
addb
pusha
sti
or
mov
and
pop
pop
fcmovne
pop
jl
pop
cltd
shll
adc
xchg
dec
fldl
mov
or
repnz
mov
leave
call
loop
insb
inc
fisttps
pop
imul
clc
lcall
dec
int3
add
inc
fstl
or
mov
lret
mov
dec
cltd
fiadds
mov
loope
pop
aam
sbb
fildl
arpl
addb
aam
enter
cltd
add
mov
aam
push
pop
movsb
in
xor
rcll
fcmovu
sbb
inc
lods
dec
xor
dec
imul
icebp
lret
fdivl
out
add
xlat
into
pop
push
push
leave
fcmovb
push
adc
test
dec
mov
out
int3
lret
pop
dec
xchg
daa
mov
sub
stos
pop
jb
pop
mov
cmp
mov
enter
cwtl
adc
pop
mov
pop
stos
jge
into
jg
ds
outsb
call
adc
mov
sbb
inc
test
int3
jmp
js
test
push
fisttpll
lret
out
add
fsubrp
pop
adc
out
addr16
dec
dec
mov
xchg
es
mov
fxch
xchg
fsubr
fldl2t
mov
clc
and
addl
filds
insb
dec
jp
pop
lret
jnp
mov
sahf
adc
inc
sub
dec
mov
and
aad
hlt
mov
dec
and
inc
fcompl
xchg
mull
xor
jp
pop
mov
les
push
push
imul
cwtl
daa
mov
scas
shrb
in
push
incl
mov
sahf
shll
pop
push
fimull
jmp
out
xchg
test
xchg
aad
sub
sbb
mov
pop
lods
push
outsl
aad
fsubrp
fcom
mov
dec
pop
or
aaa
subb
aad
clc
frstor
mov
mulb
jge
fldl
inc
les
in
lret
fildll
jmp
fcmovnb
imul
ret
rorl
dec
out
lret
jge
pop
aad
xchg
mov
ret
sub
jbe
addr16
lret
lds
fistl
out
pusha
clc
out
stc
jb
add
adc
mov
aad
inc
outsb
dec
cltd
sahf
add
and
insb
sub
divl
rolb
out
aam
test
int3
xchg
mov
leave
pop
mov
movsl
cmpsb
jmp
fisubrl
fdivs
pop
call
mov
js
or
in
jno
sub
pushf
prefetch
xor
leave
shr
loopne
mov
bound
nop
jbe
iret
call
ljmp
pop
inc
addr16
xchg
sbb
int3
test
icebp
cmc
imul
imul
lret
inc
gs
enter
andl
add
dec
push
inc
mov
test
mov
pop
adc
test
lret
add
lock
pop
push
movsl
pop
fildl
fdivrs
int
add
mov
int3
addr16
xchg
cmp
pop
lahf
sub
mov
push
mov
jns
aad
fcompl
int
xor
pop
cltd
lock
mov
rcll
dec
pop
dec
sti
neg
cld
data16
pop
leave
in
negl
clc
insl
pop
xor
fs
and
stos
inc
hlt
test
cmc
xor
pop
mov
pop
insl
int3
mov
out
pop
add
call
pop
fcompl
jb
out
out
fldenv
fildll
test
out
lahf
jecxz
mov
fsubr
jge
pop
inc
jge
mov
ficoml
shl
cwtl
pop
hlt
shlb
cmp
sub
push
scas
mov
fcmovne
dec
hlt
dec
enter
fwait
ret
into
inc
mov
movsl
imul
adc
ljmp
pop
jne
fmull
es
add
dec
add
data16
mov
iret
aad
dec
ljmp
push
xchg
dec
outsl
fsubs
out
inc
dec
shr
imul
data16
mov
adc
shl
daa
jmp
out
out
test
sbbl
cwtl
shrb
fldt
hlt
mov
rcll
aad
add
push
push
pop
pop
pop
push
mov
scas
insb
inc
hlt
fucomi
pusha
aam
mov
int
call
inc
push
push
push
insb
movsl
stos
push
decl
push
and
sbb
jmp
push
repz
cmp
mov
out
lret
dec
pop
aad
or
cmp
jmp
clc
fistpl
jp
loopne
in
enter
fldcw
roll
inc
int3
popa
les
loopne
out
fidivs
aam
pop
inc
ds
mov
cwtl
mov
js
repnz
cwtl
stos
loopne
jnp
pop
fisttpl
push
push
mov
into
push
leave
gs
pusha
loope
ficompl
pop
or
popa
pop
data16
push
xchg
negl
call
dec
int3
jno
xchg
call
push
pop
push
dec
fisubrl
fcmovnu
pusha
lea
push
xlat
fstl
pop
push
out
dec
rol
adc
movsb
mov
pop
in
xlat
pop
and
mov
and
dec
sub
lahf
aad
xor
add
adc
shl
ret
out
pop
xchg
mov
cltd
and
and
add
iret
loope
adc
cmp
js
jl
out
shlb
fcoms
mov
mov
es
in
xor
dec
pop
into
add
sbb
in
icebp
push
mov
out
call
arpl
mov
dec
insb
pop
xchg
fwait
dec
pop
shlb
fldcw
test
mov
call
iret
jg
into
out
js
mov
jmp
mov
inc
cmpsl
hlt
rorb
int
pusha
pop
sub
popa
mov
ficoms
fisubrl
jmp
pop
fidivl
pop
sbb
fcmove
ficomps
dec
cmp
pop
int
je
outsl
xor
aam
hlt
or
xor
cmpl
or
enter
aad
dec
mov
jge
call
jmp
push
pop
mov
dec
inc
inc
gs
lods
dec
aam
in
inc
out
fmulp
nop
add
aad
mov
loopne
std
sub
outsb
xchg
fmulp
int3
sbb
pop
lahf
adc
jmp
dec
or
icebp
cmp
aad
sar
enter
fists
xchg
lret
popf
popa
lcall
sahf
ja
out
mov
mov
in
mov
hlt
jne
mov
sbb
xchg
int3
jbe
sti
and
mov
dec
fcompl
test
leave
cld
in
into
lret
push
aam
ljmp
dec
dec
push
jg
testl
jb
fimuls
cs
popf
nop
aad
aaa
sbbb
push
and
call
and
movsl
pop
cmp
or
enter
push
das
adc
mov
aam
cli
loopne
into
dec
xlat
mov
lods
das
pushaw
inc
pop
inc
push
fisttpll
in
dec
mov
mov
loop
pop
inc
dec
push
mov
push
pop
scas
or
in
inc
push
cwtl
popa
fcom
sbb
repnz
mov
fcmovu
cmpsl
lcall
lods
mov
sub
fdivrs
dec
dec
fstps
test
mov
cmpl
fidivrl
loopne
mov
fisttpll
aad
xor
lahf
mov
stc
cwtl
add
jecxz
cmp
inc
dec
aad
or
jno
add
pop
leave
flds
test
ds
lds
xor
mov
lret
in
mov
incl
inc
push
aam
mov
popa
xchg
cmp
into
fistps
les
jno
push
lea
int
fnstsw
or
jmp
mov
enter
in
xchg
mov
add
call
jg
mov
xor
movsl
shrb
cmp
jg
enter
mov
fs
xchg
and
fcomp
subl
stos
aas
inc
cmp
aad
insl
mov
fmul
stos
pop
mov
imul
aad
inc
inc
fisttpl
in
fnstcw
out
into
dec
ret
iret
dec
jg
int
adc
adc
movsl
sarb
int3
out
mov
mov
out
pop
mov
ret
into
pop
inc
mov
dec
or
pop
mov
or
inc
push
pop
lret
shlb
lahf
dec
adc
int
dec
out
out
mov
nop
loopne
shlb
or
dec
lret
xor
fdivrl
out
loope
scas
mov
imul
leave
test
out
dec
inc
cmpb
inc
push
mov
cwtl
negb
aad
dec
jecxz
adc
lds
push
sub
sbb
jge
addr16
mov
pop
adc
pop
push
jg
fsubl
jecxz
mov
shrl
adc
hlt
adc
fistps
xchg
pushf
cmpsl
iret
scas
bound
xor
int3
xchg
sbb
xor
pop
xlat
jnp
dec
push
inc
jmp
ds
xchg
adc
leave
dec
scas
ror
out
mov
out
mov
scas
fwait
outsl
data16
repz
mov
out
jge
fcoml
adc
sub
xor
dec
dec
jle
push
enter
cltd
test
xlat
pop
fmulp
lret
fcom
inc
dec
popa
inc
mov
out
js
test
pop
fld
push
push
add
xlat
dec
int3
xor
push
imul
cmp
fldt
pop
jp
pop
dec
fbld
aad
rorb
gs
psrld
out
dec
leave
daa
push
mov
imul
rcrb
jp
fcomps
mov
push
test
xchg
jbe
pop
movsl
pop
call
hlt
cmp
xchg
mov
cmp
lret
jecxz
inc
loopne
fadds
pop
ret
dec
popa
sbb
push
gs
sbbl
pusha
adc
jns
dec
pop
aad
fnstenv
jno
mov
in
add
push
out
fwait
repnz
fmuls
push
dec
cwtl
inc
and
pop
adc
or
push
insb
out
pop
jmp
fimull
call
repnz
int
int
dec
pop
popa
ja
int3
sub
sub
dec
pop
dec
sbb
test
mov
rcrb
test
or
test
cli
dec
fsubp
scas
aad
mov
pop
jp
lret
fisttpl
leave
in
mov
push
or
xchg
mov
int3
inc
jg
cmp
leave
test
push
jl
xlat
rcr
aad
ffreep
dec
mov
nop
dec
fisttpl
inc
sti
addr16
leave
dec
mov
inc
bound
push
call
dec
vandnps
or
aaa
inc
in
repnz
add
inc
fldt
dec
or
in
shll
push
enter
fwait
xchg
cli
mov
aam
xchg
ds
pop
jmp
or
fadds
loopne
sbb
push
repz
lret
aas
lds
mov
fucomi
int3
ja,pt
popf
add
insb
push
leave
imul
call
mov
ret
fidivs
pop
push
call
stos
pop
pop
push
inc
test
pusha
inc
mov
aam
sarb
dec
dec
mov
push
cli
push
out
out
push
inc
jmp
fisttpll
pop
push
neg
push
rorb
ret
mov
imull
dec
mov
inc
aad
sbbb
adc
inc
scas
xor
jmp
shlb
ret
bound
pop
out
dec
testb
mov
fimull
ss
jns
mov
shlb
pop
cmovne
add
xlat
leave
js
ficomps
add
pop
out
pop
aam
dec
in
pop
movsb
xlat
outsb
push
test
mov
enter
fneni(8087
mov
test
dec
push
mov
adc
push
push
data16
pop
lret
out
mov
push
lret
repz
data16
and
call
mov
pop
xchg
xchg
out
pop
into
xchg
imul
xchg
push
test
pop
sub
adc
mov
mov
jge
pop
fisubrs
sub
fmuls
xchg
fcmovnbe
call
fmul
push
aam
enter
pop
imul
rcrl
dec
lds
adc
shr
fldenv
adc
mov
mov
mov
jmp
mov
dec
rcrb
imul
bound
mov
ficoms
mov
inc
cmc
dec
jno
xchg
mov
jae
pop
pop
mov
xor
mov
iret
out
les
mov
or
test
inc
aas
xchg
int3
sbb
fldl
jg
inc
jmp
bound
stos
dec
test
repz
arpl
mov
fwait
leave
icebp
mov
dec
pusha
flds
sbb
mov
out
jmp
loop
push
in
faddp
imul
fsubl
inc
aas
lret
mov
sbb
aaa
jg
mov
lret
cli
es
sbb
adc
loopne
loope
insb
pusha
inc
ret
out
popa
fcmovne
cmpsl
imul
xor
rorb
pop
test
imul
cmp
sub
jae
test
fcmovnbe
push
imul
mov
cs
jmp
jp
dec
stos
pusha
xchg
and
rcrl
adc
pop
fisubrl
lret
pop
js
jae
add
push
xchg
fucompp
movsl
cwtl
mov
jl
fsubp
jmp
xchg
xlat
add
inc
pop
movsl
mov
pop
enter
faddp
mov
leave
dec
inc
xor
cmpsl
mov
dec
shl
dec
out
out
or
mov
jl
fdivr
in
fistpll
mov
mov
mov
in
neg
xchg
pop
cmp
add
cwtl
mov
mov
mov
pop
data16
jno
faddl
leave
iret
dec
ljmp
pusha
push
or
adc
fsts
enter
out
xlat
loopne
dec
pop
dec
shl
and
inc
mov
daa
push
pop
andl
mov
lret
stos
pop
mov
dec
push
test
loopne
pop
fistl
inc
inc
lock
dec
into
sahf
or
pop
jmp
ret
test
push
testb
xor
gs
iret
dec
stc
jno
add
aaa
and
push
cwtl
rorl
push
repnz
pop
lds
mov
fstl
add
xlat
adc
push
cmp
loopne
jmp
push
ffree
ljmp
mov
lcall
push
iret
jg
fstp
in
or
lret
fmul
pop
push
int3
push
dec
dec
cs
repnz
inc
cs
leave
pop
inc
clc
call
jle
gs
sbb
in
mov
test
test
imul
iret
into
lret
sub
mov
mov
rcrl
clc
dec
js
jb
adc
inc
inc
pop
push
mov
push
addr16
fimull
xchg
jle
dec
inc
mov
ds
xchg
adc
pop
rcrb
cmp
std
icebp
fwait
inc
negb
fnstsw
jge
push
pop
push
mov
fistpl
jl
jl
loopne
movsb
shr
xor
dec
rorb
pushf
popa
and
imul
or
push
ffreep
push
cli
and
leave
mov
fisubl
mov
loope
push
insb
mov
or
inc
frstor
push
fldenv
dec
data16
out
lds
sub
lret
mov
push
sub
loopne
pop
lret
aam
mov
jl
pop
jecxz
js
xor
dec
js
jge
pop
orl
ror
stos
aam
xlat
jne
jecxz
aam
mov
icebp
and
rcr
adc
or
dec
dec
bound
insb
rcl
shll
fxch
xchg
in
pop
pop
dec
mov
push
dec
pop
sbb
pusha
jge
filds
mov
frstor
aad
mov
int3
push
pop
or
movsl
or
ffreep
jmp
iret
imul
fsubr
and
gs
mov
nop
fildl
aaa
xchg
push
jl
fiaddl
int3
loopne
adc
inc
popa
pop
xchg
shrb
imul
cwtl
loope
dec
pusha
dec
inc
sbb
rorb
dec
iret
frstpm(287
mov
pop
mov
dec
dec
aam
popa
pop
push
fwait
lahf
mov
dec
sbb
adc
imul
xchg
jnp
gs
pop
out
jns
pop
notl
pop
mov
xor
gs
xor
mov
lods
fucomip
dec
test
pop
dec
pop
lret
pop
dec
fcmovnbe
enter
inc
js
pop
loopne
out
insb
popa
aad
fcmovu
fbstp
fwait
out
jge
push
mov
lret
out
call
push
push
call
gs
icebp
nop
iret
cwtl
stc
js
stos
jle
pop
pop
imul
pop
push
arpl
adcl
jmp
negb
xchg
pusha
imul
aad
stos
push
inc
xor
pusha
dec
cmp
call
cmc
test
in
mov
leave
jb
mov
bound
popf
push
negb
jp
push
mov
adc
iret
pop
sarb
jo
cmp
call
popa
lret
mov
dec
loopne
push
push
in
mov
push
pop
mov
loop
ds
sbbb
rcrl
dec
popa
in
pop
cltd
lock
inc
pop
in
aas
jmp
pop
dec
les
into
pop
lcall
out
fcoms
jecxz
push
pop
lret
mull
add
out
ficompl
lret
add
mov
pop
fsts
mov
fidivrs
inc
pop
shrl
outsl
insb
xchg
add
adc
fs
pop
xchg
adc
pop
or
fidivrs
and
mov
loopne
daa
fld
out
pop
fmull
or
std
mov
push
rolb
lds
insb
out
pop
out
dec
les
cmp
pusha
push
lret
mov
fxch
xchg
or
out
xlat
stos
out
xchg
clc
fcom
dec
mov
iret
mull
ret
inc
fsts
lahf
loopne
orl
test
fs
enter
cmovns
test
sbb
pop
inc
mov
movsl
insl
inc
push
ret
pop
test
out
pop
cli
outsl
xlat
cmc
fs
sbb
call
fdivl
dec
pop
cld
push
iret
adc
add
enter
xchg
jmp
pop
mov
movsb
mov
int3
test
pop
push
add
insb
aam
pop
xchg
call
jbe
clc
fisttps
mov
dec
addr16
fcmovnbe
or
add
pusha
fcompl
lret
fmul
inc
inc
pop
push
sbb
dec
aas
movsb
inc
jg
test
pop
call
dec
dec
pop
mov
inc
dec
sbb
rcr
out
jmp
mov
xchg
cmp
aam
push
xor
xchg
fcmovnu
bnd
loop
enter
clc
push
dec
imul
js
mov
fdivrs
enter
lea
lods
test
cmp
fs
mov
cs
inc
xor
into
add
fnsetpm(287
addr16
mov
mov
mul
pop
call
pop
popa
fstpt
iret
inc
inc
ds
fsubp
sub
sahf
pop
aas
push
jg
out
andl
filds
insb
dec
cmp
push
push
dec
jno
and
scas
int3
and
sahf
addps
and
xchg
mov
xchg
fildl
jge
push
mov
cmpb
pop
jl
add
pop
lret
jmp
imul
jmp
cli
notb
push
jg
int
cmpb
ror
pop
dec
dec
fisttpl
loop
lds
inc
lret
inc
out
sub
les
in
dec
lret
ss
jle
pop
mov
xor
jle
push
popa
shrb
inc
les
leave
pop
mov
loopne
scas
push
jbe
jl
fistps
loop
mov
lret
enter
sub
sub
mov
outsb
int3
xlat
push
in
inc
xor
mov
push
mov
jae
or
jbe
dec
adc
inc
int
mov
sbb
icebp
les
leave
lret
shl
into
and
and
ficoms
int3
or
imul
call
fcmovnu
xlat
inc
in
pop
jmp
mov
push
push
loopne
push
cmp
pusha
movsb
mov
pop
xchg
cmpb
scas
jle
fstl
push
inc
cltd
inc
xlat
test
lret
sahf
enter
clc
data16
jl
push
fstpl
pop
fxch
loopne
lods
mov
cwtl
xchg
jl
iret
jge
inc
mov
push
mov
push
sbbb
dec
aad
jnp
cmp
loop
jl
int
push
and
pop
add
dec
gs
inc
cmp
and
or
dec
jmp
mov
imul
dec
dec
mov
dec
xlat
movsl
in
dec
push
and
cmp
pop
rcrb
popa
loopne
push
xchg
rcrb
jp
mov
fmull
pop
pop
fildll
ja
repnz
and
inc
popaw
imul
mov
xor
pop
pop
std
jp
inc
in
pop
sahf
out
test
rclb
inc
inc
out
jp
dec
insb
aam
test
daa
mov
imul
addb
mov
test
lds
ficompl
mov
test
jno
jmp
aad
loop
pop
pop
xlat
pop
dec
mov
inc
cmc
sub
iret
ljmp
aam
scas
sub
gs
fwait
push
push
adc
outsl
mov
mov
dec
jmp
lret
subb
nop
imul
inc
ror
out
dec
pop
jg
dec
adc
in
loop
push
ret
push
in
xlat
dec
cmp
xor
insb
ljmp
stos
mull
push
dec
fisubrl
loopne
int3
mov
loop
ret
rcr
imul
add
pop
aam
jmp
test
mov
dec
pop
sbb
mov
lret
fsts
orb
dec
js
pop
adc
int3
or
jno
in
bound
mov
mov
enter
lret
dec
dec
dec
fwait
imull
adc
pusha
sub
adc
dec
rcl
push
enter
jmp
test
fcmovb
pop
out
add
cmp
repz
int
fldenv
aam
outsl
mov
fst
les
fisttps
inc
push
aam
dec
loopne
or
push
outsl
dec
test
pop
xchg
andl
lret
cmp
xlat
fst
shll
les
sbb
sarl
add
mov
int3
sahf
lret
pop
ficoms
ror
dec
xor
rcrb
pop
mov
fstp
pop
jmp
pusha
ljmp
push
sub
lahf
insb
in
stos
out
jecxz
pop
push
popa
push
into
mov
adc
adc
int3
popa
test
jg
lret
enter
pusha
aad
popa
push
leave
fildl
lds
lods
out
aaa
cltd
jne
leave
push
addr16
jne
shr
jge
fistpl
clc
pop
int
js
pop
inc
lret
out
pop
aad
rcl
fbld
cltd
iret
lds
push
dec
imul
fimull
aam
push
lahf
pop
aad
movsl
dec
push
push
test
sub
cltd
mov
mov
ds
push
fbstp
ret
gs
cltd
test
fdivs
xor
shrl
test
sbbb
inc
ds
push
data16
add
popa
sbb
dec
aad
dec
nop
cli
loope
jmp
ror
les
push
aaa
dec
stos
pop
aas
outsb
inc
scas
fst
hlt
in
aam
test
jp
mov
push
aam
fmuls
loope
mov
dec
pop
jmp
add
xlat
int3
push
inc
insb
fcmovb
pop
dec
sbbb
dec
mov
inc
jmp
dec
icebp
cli
and
aam
inc
mov
notb
lods
mov
jmp
dec
dec
aam
dec
xchg
gs
push
scas
out
and
inc
frstor
dec
fldenv
testb
lahf
mov
xor
in
fstpt
pop
inc
lods
inc
mov
push
popa
add
fsubs
fdivrl
aad
popa
add
cltd
add
mov
notl
ss
lds
es
pop
mov
dec
push
add
pop
sbb
dec
pusha
sti
mov
lret
popa
loop
dec
push
outsl
inc
rcr
negb
and
data16
insb
fmul
cltd
mov
aad
sub
mov
dec
push
movsl
sub
mov
adc
lret
lahf
fcoms
sahf
dec
ss
fmull
cmp
int3
pop
dec
or
xchg
cltd
addl
clc
dec
loop
insb
enter
fmul
jl
pusha
lods
fwait
lods
jmp
push
aad
pop
loopne
jecxz
loop
stos
jmp
pusha
mov
lret
inc
popf
ret
dec
dec
lods
int3
test
les
fs
adc
popa
jae
cwtl
mov
and
push
aam
iret
cwtl
pushf
xchg
lods
sarl
pop
dec
ds
ja
and
inc
pusha
or
mov
fadds
gs
pop
inc
mov
mov
adc
inc
mov
xlat
push
fstpl
mov
adc
int
and
inc
loopne
insb
jmp
repz
mov
mov
inc
mov
jb
sub
pop
mov
int3
out
push
dec
and
pusha
push
fstp
pop
and
out
and
test
adc
outsl
dec
in
dec
adc
stc
loopne
out
shll
insb
pop
pop
mov
lret
aad
leave
push
aad
in
int
fadd
repnz
data16
into
sbb
lods
pop
loope
dec
clc
vaddsubpd
inc
lea
sbbl
icebp
cmpsl
fildl
pop
lea
js
repz
enter
dec
iret
fs
inc
iret
int
shl
rcrl
fnstenv
push
mov
fstp
pushf
outsb
add
pop
faddl
dec
dec
xchg
or
pop
shrb
aam
shl
push
scas
pop
dec
mov
push
lret
adc
push
aad
clc
push
xchg
dec
inc
bound
push
pop
int3
iret
jb
into
jmp
jbe
fst
iret
pop
repz
pop
adc
roll
gs
data16
out
dec
pop
pop
ss
and
jl
dec
cmp
addr16
cli
mov
mov
pop
cld
jecxz
in
and
adc
xchg
int3
inc
jle
iret
int
push
enter
out
lret
ja
pop
data16
jnp
inc
fucomp
rclb
pop
dec
popa
mov
in
dec
popf
outsl
out
pop
xor
jbe
pop
mov
mov
test
jnp
pop
leave
dec
cwtl
jno
icebp
and
mov
jle
fcmove
pop
lret
ret
sar
pop
int3
mov
jo
adc
add
xchg
ficomps
inc
js
or
icebp
xor
mov
or
rorl
int
pop
fbld
mov
sbb
clc
fildl
add
ja
jg
dec
mov
add
dec
int3
push
push
iret
xlat
icebp
loopne
and
lea
xchg
test
cli
out
loopne
ficompl
cs
mov
imul
mov
es
fsubrs
xchg
outsl
js
js
jae
inc
mov
pop
dec
add
movl
lret
cwtl
rclb
ss
pop
push
lret
popa
add
imulb
mov
push
out
arpl
inc
add
fimull
dec
push
dec
lods
mov
pusha
mov
inc
fsubrl
imul
dec
in
loopne
xchg
neg
stos
fst
out
fimuls
xchg
add
rorl
kxorw
data16
divl
jge
fiadds
cwtl
push
popa
nop
out
mov
shr
pusha
int
mov
dec
enter
mov
enter
popaw
in
cld
jmp
dec
testl
adc
fsts
push
ljmp
icebp
sbb
dec
dec
je
scas
ffree
aad
mov
and
dec
scas
loopne
lret
lea
push
lds
mov
fildll
jbe
call
pop
mov
inc
xor
aam
jge
imul
dec
out
ss
cmp
bound
sub
inc
iret
jg
pop
pop
cmp
imul
into
movsb
cmp
push
pop
repz
push
fimull
sbb
pop
lds
test
push
cltd
inc
lret
pop
int3
rcrl
iret
mov
fs
sub
loope
out
int3
repz
in
pop
insb
fistpll
fadd
les
pop
loop
push
fdivrl
aaa
xlat
push
push
addr16
inc
fsts
dec
ljmp
mov
or
shll
nop
dec
outsb
fcompl
xor
aas
and
ret
mov
xchg
popa
mov
pop
push
popa
fisubrl
or
popf
xchg
and
mov
inc
jp
addr16
inc
fistps
cmpsl
les
dec
dec
leave
push
movb
loopne
jnp
push
insb
pop
mov
sbb
mov
popf
ljmp
popa
lea
sbb
inc
lea
out
pop
jecxz
xlat
inc
fneni(8087
jg
iret
popa
push
lea
and
inc
add
pop
call
jle
push
lret
and
movsl
jbe
add
loopne
icebp
pop
in
stc
dec
push
rcr
push
imul
xor
xchg
icebp
add
dec
nop
iret
ss
mov
mov
int
fstpl
gs
push
jg
push
xlat
cli
add
adc
sbb
and
movsb
add
in
call
int3
fstps
enter
pop
out
bound
push
jge
push
jp
xlat
mov
aam
pop
dec
ds
adc
leave
lret
sti
mov
imul
dec
inc
cmc
dec
push
dec
mov
js
pusha
pop
pop
lock
mov
mov
mov
shrb
lcall
push
fsubs
hlt
dec
call
jp
fistl
mov
insb
adc
mov
iret
ffree
dec
test
sti
adc
in
xchg
sbb
out
mov
push
adc
or
or
dec
ja
ficoml
cs
loope
dec
push
movsl
in
push
cltd
sbb
into
orl
fidivrl
push
dec
mov
jmp
inc
push
insb
add
mov
push
mov
pop
mov
mov
sbb
loopne
loopne
rclb
mov
iret
sub
sbb
out
int3
cli
outsl
dec
push
fstps
pop
imul
filds
pop
push
dec
mov
lret
test
pop
inc
in
dec
push
xchg
jl
movb
sub
add
sub
mov
rcl
call
fiaddl
pop
push
jl
jmp
push
push
jmp
enter
cmpsb
pop
frstor
jge
inc
pop
cmp
pop
in
pusha
sti
fldt
xchg
dec
test
call
mov
lahf
jecxz
je
dec
popa
fcmovne
sbb
jmp
aad
jge
inc
vcvtps2dq
loop
jns
pop
data16
pop
mov
jbe
faddp
addb
icebp
adc
mov
dec
loope
fbld
movsb
lret
rcrl
push
dec
aam
mov
and
pop
mov
fisttpl
test
inc
or
pop
sar
ds
loop
rorb
pop
fcmovb
shll
lret
ss
and
dec
aas
jg
mov
es
mov
pop
loope
dec
out
into
inc
add
pop
xchg
addr16
stos
pop
incl
call
mov
shrl
aam
andl
mov
jno
addr16
insl
das
push
mov
pop
dec
jmp
test
inc
push
mov
ficomps
out
fs
enter
dec
jecxz
out
fucom
mov
fistpll
fsubrp
and
ds
dec
loope
pusha
mov
leave
fisttpll
push
mov
addr16
daa
xorl
popa
sbb
dec
or
or
pop
dec
mov
movb
out
sub
mov
iret
dec
cmp
pop
jge
jp
sub
imul
xchg
lds
leave
mov
jbe
fadds
leave
jle
aam
out
xlat
jmp
dec
sarb
loopne,pn
xor
dec
addl
fidivl
nop
iret
push
out
jmp
out
dec
push
fisubrs
dec
pop
icebp
fbld
pop
insb
push
and
aaa
jle
push
pop
push
fs
sub
add
ljmp
imul
lret
fwait
inc
test
inc
out
push
lds
jmp
fbld
or
pop
into
icebp
cmp
jge
pop
pop
jmp
push
dec
shrl
mov
stos
jmp
jl
fcom
dec
mov
or
gs
mov
jmp
enter
xlat
jl
insl
xlat
jp
push
clc
pop
cli
cltd
sarb
pop
imul
xchg
aam
dec
aaa
jp
sbb
into
sarl
pop
fisubl
add
inc
test
movsb
push
push
and
push
pop
mov
ret
cltd
mov
jb
push
dec
decl
lahf
imul
add
lret
pop
addr16
dec
dec
xlat
and
dec
push
aam
adc
imul
mov
lds
pop
stos
adc
adc
imul
jl
push
fucom
ret
in
push
imul
push
cmp
sub
push
mov
js
inc
aam
jle
cli
imul
fcmovbe
push
mov
xor
movsl
test
iret
push
dec
inc
mov
inc
push
mov
adc
stos
push
sti
nop
fsubp
rorl
mov
popa
movsl
dec
addr16
or
fstl
lods
sub
inc
js
int3
ffreep
mov
stc
cmc
or
jg
mov
ret
or
push
pop
fisubl
mov
pop
push
int
adc
inc
xor
in
add
inc
int3
iret
loope
pop
pop
fcmovnb
sbb
fs
mov
and
mov
gs
mov
dec
or
inc
in
ljmp
mov
fsub
stos
shrb
mov
subl
aad
xchg
mov
push
aam
sbb
scas
aad
push
movsl
lock
push
fildl
jb
loopne
fadd
pop
insb
fdivl
push
add
loopne
fistl
in
dec
rcl
in
inc
dec
xlat
push
pop
jo
dec
mov
hlt
out
push
jnp
pusha
xchg
imul
rorl
fnstsw
push
shll
dec
outsb
jmp
dec
xchg
dec
gs
push
aad
fldl
dec
addr16
mov
in
les
jnp
stc
and
in
fisttpll
jae
inc
fldt
mov
or
fcmovne
dec
mov
mov
addr16
push
xchg
shrb
filds
iret
pop
pop
dec
popa
push
jge
int3
pusha
out
xor
inc
pop
jge
jmp
mov
xlat
pop
insb
daa
cmp
dec
push
loopne
jl
cli
imul
call
mov
pop
fidivrs
mov
int
mov
clc
push
cld
imul
les
loopne
and
push
aas
scas
push
bound
loopne
push
ror
shlb
les
cwtl
fcmovne
sbb
fmulp
fistpl
icebp
repz
rorl
xlat
fidivs
ffree
push
enter
enter
dec
jmp
push
dec
mov
fsts
xchg
loopne
and
push
ljmp
out
dec
inc
dec
fldcw
pop
cmp
mov
push
ret
add
xchg
in
mov
aam
insl
mov
mov
mov
inc
xlat
addr16
out
dec
icebp
mov
push
jae
dec
add
out
insb
mov
dec
fs
push
jbe
dec
fsubs
inc
and
into
xlat
mov
data16
jmp
mov
pmulhw
push
push
addr16
fstl
notl
add
imul
or
dec
mov
adc
sahf
inc
cmp
jg
inc
and
es
pop
pop
popf
dec
push
fstpl
push
lret
rol
insb
push
scas
mov
mov
add
pop
loopne
roll
push
adc
mov
inc
pop
jmp
fnsave
fadd
pop
push
out
add
roll
movsl
or
out
inc
pop
testl
int
push
enter
dec
sbb
les
mov
inc
aad
enter
jmp
fabs
fildl
xchg
dec
iret
test
xlat
pop
int3
fdivrl
out
dec
jmp
inc
fcmove
push
mov
mov
pop
dec
int3
aam
lds
outsb
popa
leave
scas
fdivrs
or
insb
sbb
dec
int3
loopne
aam
pop
adc
test
stos
data16
or
aad
les
dec
ffreep
push
lods
enter
sbb
or
clc
call
mov
mov
loope
iret
imul
hlt
mov
test
dec
aad
or
rcrl
imul
push
loopne
xchg
push
sbb
adc
shll
dec
rorl
push
adcl
ds
mov
inc
xchg
xchg
xor
leave
aam
mov
out
ljmp
cmp
pop
inc
shlb
notb
gs
mov
push
scas
and
xor
gs
sbb
ljmp
lea
movsl
pop
pushf
mov
pop
sbbl
enter
shr
inc
andb
lds
in
aam
call
fldl
dec
daa
mov
test
ret
imul
xchg
fs
cltd
out
jp
dec
rolb
fimull
in
mov
test
dec
fs
int3
ficomps
fcmovbe
out
rcl
test
lds
mov
je
mov
cmp
insb
mov
dec
nop
imul
out
pop
mov
inc
push
or
loopne
out
test
subb
push
xchg
mov
fcoml
adc
loop
cmp
pop
xor
lahf
fldt
sub
lods
pause
ret
add
aad
pop
inc
cld
and
dec
jmp
add
into
rclb
push
leave
roll
test
pop
push
cmpsb
cli
pop
dec
mov
data16
mov
fcmovb
fstpt
pop
jle
popa
jmp
mov
cltd
pop
mov
les
mov
inc
mov
sbb
inc
into
dec
imul
dec
out
aam
xlat
popa
mov
out
gs
js
adc
ret
jmp
out
jg
push
inc
testl
inc
flds
insb
mov
pop
xchg
mov
fisubs
push
enter
icebp
daa
xchg
mov
test
pop
ficoml
add
sahf
mov
push
les
fisttpll
fistpl
push
mov
out
insb
ficoms
fstl
fnstenv
and
adc
pop
cmpsb
lea
inc
test
cli
pop
enter
jg
test
xchg
scas
jnp
imul
pop
inc
mov
dec
mov
leave
or
movsl
loope
cli
cmp
jmp
fistpl
popa
mov
xchg
ljmp
pop
push
jmpw
add
int
mulb
insb
and
fcoms
aam
fstl
sarl
aad
sub
test
mov
test
mov
scas
xorb
into
gs
loope
call
sub
ret
cmp
mov
out
pop
imul
jmp
fisttpl
adc
loopne
aad
les
mov
jbe
jg
popa
pop
lahf
xchg
jb
and
call
cmp
pop
lret
dec
dec
int3
cmp
iret
mov
pop
inc
icebp
std
push
add
sahf
xlat
pop
push
mov
add
mov
push
mov
mov
addr16
into
mov
push
loope
leave
and
filds
dec
inc
in
inc
jb
fmuls
aam
pop
push
cmpsb
xchg
loopne
fs
xlat
inc
inc
pushf
addr16
pop
dec
pop
jmp
lea
inc
pop
test
jl
imul
loopne
dec
push
fstpl
jae
out
fnsave
lds
pop
dec
jp
sbbl
jmp
sbb
test
movsl
push
arpl
stos
push
test
push
loopne
dec
fnsave
dec
iret
push
xchg
and
int3
push
inc
pushf
stc
loopne
jb
mov
lret
vcvtdq2ps
fildll
dec
pop
adc
mov
loopne
aad
mov
fldl
bound
into
mov
ljmp
ret
cmp
fnsave
mov
mov
pop
mov
fcmovnu
push
les
js
pop
js
adc
mov
mov
ficoms
sbb
aad
xchg
enter
push
test
test
dec
xor
jl
aad
adc
sti
stos
enter
popl
into
aad
push
call
fldt
fmuls
cmp
in
sub
fists
cld
inc
int
jne
mov
mov
cwtl
jg
lret
dec
fdivrs
fstpt
stos
mov
jmp
call
fstpl
out
jne
pop
int3
jb
jl
push
cmp
subl
out
loopne
ljmp
in
xchg
arpl
push
enter
bound
cmpsb
fistl
push
int
push
push
mov
jg
fstl
lahf
and
lret
push
push
shlb
adc
repz
fsubr
and
mov
push
repnz
les
repnz
pop
pusha
lods
xchg
dec
aam
pop
std
mov
imul
test
inc
pop
aad
push
out
or
push
xor
out
lock
outsb
adc
inc
int3
lds
mov
push
fidivrs
dec
cltd
lret
call
cli
xor
mov
imul
call
clc
dec
les
scas
stos
jbe
mov
lret
pop
std
sbb
push
jp
enter
push
popa
xchg
dec
sarb
enter
test
fldcw
stos
in
icebp
pop
aad
xor
data16
dec
and
fimull
fwait
pop
dec
mov
gs
push
int
inc
jg
test
pop
pop
aad
notb
mov
dec
out
int3
test
pop
jmp
in
mov
lret
imul
aad
fnsave
mul
dec
ss
pop
xchg
sti
push
mov
pop
push
dec
dec
loopne
jmp
mov
sub
roll
loopne
jl
pop
push
aaa
out
dec
mov
add
les
fisubl
push
inc
insb
dec
test
fcmove
dec
repz
leave
fisubs
mov
pop
nop
enter
xchg
mov
int
push
das
jmp
je
lret
adc
ficoml
clc
data16
iret
push
or
enter
push
cmp
mov
jae
mov
xor
xchg
mov
xchg
add
pop
jp
dec
popa
int3
or
mov
cwtl
and
or
rcl
enter
adc
mov
fistps
mov
lret
enter
in
mov
fstp
insb
pop
test
jge
push
pop
cmp
sub
adc
pop
movsl
push
dec
pop
push
cld
dec
fidivs
lcall
mov
dec
xchg
ret
or
cmpb
pop
fcmovu
dec
or
mov
mov
aam
jmp
inc
loope
dec
sbb
dec
inc
sbb
int
or
sarb
inc
cmp
cld
jl
arpl
fistl
pop
jo
test
dec
les
mov
popa
dec
push
jge
dec
pop
add
shr
mov
add
movsl
mov
jmp
popa
mov
loopne
adc
xlat
into
or
mov
out
push
cmp
or
sbb
push
push
fwait
inc
mov
rclb
and
shr
push
pop
fstl
mov
adc
pop
in
jle
int3
addr16
insb
dec
push
aam
push
fistl
enter
jecxz
enter
flds
jnp
aam
and
mov
loopne
insb
imul
rcl
icebp
mov
arpl
scas
lret
int
pop
or
pop
daa
mov
int3
fcomip
movsb
outsl
andb
add
dec
inc
dec
popa
outsl
push
pop
xor
sub
dec
data16
leave
aam
andl
sbb
mov
dec
enter
pop
shll
cmc
adc
cwtl
pop
addl
xchg
inc
xor
orl
jmp
jle
iret
pop
inc
leave
dec
cmpb
inc
pop
pop
enter
repz
pop
rcrb
dec
pop
adc
mov
fistl
imul
fimuls
aad
xchg
cld
cli
pop
adc
enter
sarb
adc
add
aaa
xchg
jnp
movb
shrl
outsb
pop
pop
xchg
outsb
rcl
std
lds
int
add
jns
mov
dec
dec
mul
hlt
fldenv
enter
imul
mov
lods
data16
xchg
and
pop
loop
and
dec
cli
imul
dec
pop
fcompl
cmp
mov
iret
test
lds
in
cmpb
popa
adc
out
push
ljmp
out
jle
dec
push
xchg
aam
dec
push
xchg
and
mov
mov
out
jmp
dec
jg
lret
inc
pop
insb
mov
shl
aas
jmp
inc
js
jae
scas
lock
xorb
inc
dec
push
das
aas
adc
push
push
xlat
imul
cli
mov
pop
mov
inc
adc
test
xor
ds
orl
into
sub
fimull
sarb
dec
iret
gs
les
aad
das
adcb
jg
out
sbbl
iret
jmp
out
dec
dec
shr
enter
mov
mov
jl
lret
pop
aas
xchg
fldl
in
and
aad
imul
dec
adc
in
mov
pop
xlat
call
xchg
in
outsl
dec
fisttpll
dec
es
push
jmp
ffree
mov
loopne
movsl
add
int3
pusha
out
pop
js
pop
mov
fcmovnu
aad
push
lea
fucomp
loop
ds
inc
push
mov
pusha
mov
jbe
dec
outsl
and
inc
pop
iret
or
jmp
mov
rol
lds
mov
jg
out
xor
loope
fbld
pop
xchg
and
adc
mov
ret
cltd
mov
dec
pop
enter
orb
dec
pop
repz
pop
pusha
inc
sub
call
fadd
dec
test
je
push
cmp
into
pop
enter
lahf
cmpsl
shrb
sub
xlat
leave
aad
dec
movsl
push
inc
fcmovnbe
into
outsl
cli
into
cmpsb
sti
pop
fdivp
dec
dec
dec
mov
icebp
mov
inc
out
nop
pop
rolb
xchg
jp
push
push
imul
f2xm1
cmp
dec
cli
in
out
inc
jl
flds
dec
int
mov
popa
iret
dec
nop
dec
out
mov
decb
lea
push
pusha
mov
cld
push
inc
mov
shlb
add
mov
inc
flds
xchg
in
cwtl
jne
aad
pop
leave
addb
shrl
stos
push
xor
lret
add
xor
icebp
cmp
adc
fstpl
in
mov
mov
cli
pop
jmp
jbe
loopne
adc
mov
int
lods
cmc
aam
pop
neg
addr16
test
dec
push
pop
push
int
sbb
mov
add
outsb
pop
enter
lret
mov
pop
popa
call
in
out
dec
mov
leave
mov
pop
lret
fistpll
fbstp
cmpsb
out
shrl
sti
xor
test
jbe
dec
imul
clc
cmp
push
mov
push
in
addr16
jl
fnstsw
fneni(8087
sbbl
decl
push
pusha
add
xchg
cmp
repnz
ret
fistpll
fsubp
js
sbbb
test
push
dec
mov
mov
les
aad
imulb
js
sbb
fldenv
test
dec
xorb
popa
xor
inc
inc
inc
fldcw
out
jle
sub
fsub
xor
mov
dec
inc
fistl
ds
shrb
fiaddl
or
lea
mov
inc
lret
mov
pop
lds
adc
aam
pop
mov
mov
push
lret
andl
or
rcr
cli
fcom
insb
push
adc
jmp
push
aas
mov
fs
pusha
testb
pop
xchg
je
jnp
les
fistpll
jmp
rorl
outsl
aad
jle
popa
pop
xchg
inc
lcall
pop
xchg
in
outsl
enter
mov
sbbl
loope
lret
xor
iret
jge
gs
mov
pop
leave
pop
pop
mov
inc
test
fldcw
mov
jge
aad
inc
es
dec
in
in
movsb
inc
push
adc
repz
popa
out
cwtl
aas
lods
dec
jp
push
jl
cmp
gs
in
dec
fldt
pop
dec
enter
mov
mov
aad
dec
xlat
xor
push
pop
xchg
push
push
in
cmc
fmuls
insb
in
jmp
aad
adcl
insb
shll
outsl
pop
pop
sbb
mov
mov
push
xor
fst
into
les
push
inc
out
in
imul
in
mov
push
mov
inc
int
out
jne
pop
lods
jp
dec
es
lcall
fmul
js
sub
loope
fstps
mov
or
and
pop
xor
inc
cwtl
mov
addr16
mov
icebp
sbb
mov
xor
fnstenv
dec
jecxz
lret
js
adc
push
pop
lcall
dec
sbb
mov
icebp
sbb
loopne
out
pop
mov
jb
inc
cltd
cmpsb
int
inc
leave
lret
insw
dec
jo
pop
adc
outsl
out
cltd
cmp
popa
jmp
xlat
aad
fstps
pop
rcl
movsl
adc
mov
fimuls
mov
loop
aas
push
sbb
inc
int3
and
enter
fistl
mov
dec
loop
dec
nop
scas
insb
loope
aad
jbe
aam
cli
dec
fists
inc
negl
nop
bound
dec
xlat
sti
popa
rol
mov
aad
inc
icebp
imul
cmpsl
fisubl
int
jbe
jp
xlat
or
mov
push
gs
icebp
mov
lret
shr
jmp
fldl
jle
dec
push
aam
loopne
jge
sarb
and
jge
dec
mov
pop
ficoml
imul
jge
dec
lds
imul
fmul
pop
push
push
fs
out
out
pusha
adc
pop
shlb
nop
and
into
adc
pop
loope
addr16
iret
test
and
leave
or
xchg
int3
insb
dec
rclb
add
fdivr
cmpsl
mov
pop
inc
jae
pop
dec
sbb
and
mov
out
popa
cltd
into
imul
out
pop
incl
enter
aam
call
pusha
inc
mov
insb
test
and
dec
leave
mov
aad
pop
jl
dec
call
sub
mov
add
out
jge
pop
rcrl
push
mov
sbb
fisubrl
pop
das
pop
push
sub
lds
xor
xchg
dec
add
iret
enter
pop
fcompl
adc
push
push
ficompl
stos
jb
outsb
outsl
fldenv
pop
dec
mov
push
out
mov
adc
inc
in
loopne
cmpsl
mov
popf
inc
les
insb
inc
shll
dec
pop
iret
dec
fcompl
dec
mov
outsl
push
jp
enter
data16
sub
lds
ret
pop
mov
frstor
fstp
add
push
cmp
pop
outsb
ja
popa
popf
fcmovne
adc
iret
jno
pop
xlat
fidivs
lea
jmp
jmp
into
cli
scas
push
adc
xchg
stos
fcmovne
std
push
sbbl
stos
popa
pop
pusha
fucom
fmull
in
dec
xlat
mov
mov
imul
testl
shlb
rcrl
leave
mov
pop
inc
imul
mov
sbb
les
testb
pop
mov
hlt
pusha
mov
jb
lahf
sub
cmp
pop
xchg
mov
out
faddp
mov
icebp
out
ss
lret
mov
cli
lcall
add
incb
push
decb
mov
lretw
push
inc
pop
test
stos
mov
xor
jmp
aas
ja
jae
out
int3
dec
mov
jle
dec
push
out
data16
sbb
mov
pop
leave
pop
xor
fwait
pop
push
adcb
mov
dec
pop
fwait
jb
jg
mov
aam
fdivl
clc
inc
cli
jbe
cmp
ffree
fiadds
out
mov
sahf
xchg
jle
sub
or
pop
into
out
push
cmp
push
push
pop
les
in
inc
sub
push
fcomps
xor
mov
repnz
pop
orb
sbb
and
shrl
out
jbe
dec
ffreep
int3
push
inc
insb
fsub
inc
dec
mov
inc
xchg
mov
mov
loopne
add
push
out
push
jmp
jl
pop
mov
gs
dec
std
jne
mov
rcr
pop
pop
popf
inc
int
dec
or
rorl
dec
push
lret
loopne
mov
sbb
and
xchg
mov
test
add
into
xlat
lret
mov
test
std
call
sub
dec
int3
mov
push
mov
mov
add
lds
ss
into
arpl
dec
fldl
movsb
jae
push
xchg
call
dec
jl
leave
mov
dec
xor
loopne
aam
and
inc
mov
jmp
rorb
or
lds
nop
int
mov
xor
push
xchg
mov
push
add
lds
das
test
cwtl
icebp
stos
movb
mov
push
pusha
dec
sbb
movsl
aad
fcmovnu
enter
test
in
adc
jge
jbe
aam
out
inc
dec
pusha
je
pop
sub
push
xchg
mov
mov
dec
in
pop
mov
aam
test
fmulp
cmp
lret
mov
push
negb
mov
subb
mov
leave
mov
pop
inc
nop
pop
imulb
gs
sub
les
and
pop
pop
jg
dec
fdivrp
xchg
enter
fabs
out
dec
dec
jge
pop
cmp
jmp
movb
popf
dec
dec
fucom
into
pop
shl
movsb
inc
jl
enter
loopne
movsb
pop
test
push
cmp
dec
mov
fucom
popf
sbb
xchg
int
scas
jp
push
imul
pop
dec
or
pop
jle
lret
into
dec
push
cmp
cmpsb
xchg
outsl
pusha
jmp
and
or
addl
lahf
pop
iret
mov
test
int
pop
ja
out
movsl
sahf
fistl
in
into
cwtl
in
lret
jb
out
setne
add
xchg
ljmp
dec
popa
in
and
rol
inc
or
add
xlat
cmp
dec
xor
mov
scas
xor
push
fistpll
cld
dec
inc
xchg
cmp
test
dec
repz
push
push
pop
dec
push
push
mov
int3
negb
dec
jg
pusha
les
out
call
fsub
or
push
pop
dec
mov
push
std
testl
les
leave
in
lret
call
cmp
je
pop
jmp
lods
int3
fsubrl
orl
out
movsl
call
push
pusha
addr16
or
push
aam
sbbb
pusha
add
mov
psubsw
push
insb
inc
jno
test
iret
xchg
shrb
cmovno
sub
push
stos
frstor
loopne
jge
cli
je
mov
call
popa
mull
aas
dec
loopne
lahf
iret
mov
pop
das
clc
aas
movsl
inc
js
fdiv
jno
out
insb
xor
push
out
jbe
and
les
pusha
insb
clc
lds
jmp
fsubl
fmulp
xchg
push
mov
fmul
sub
mul
and
push
push
les
cmpsl
pop
mov
test
leave
fdiv
lret
sub
xchg
rorb
imul
dec
movsl
icebp
js
imul
pusha
fxch
lret
loope
pop
fcmovnu
pop
movl
push
dec
adc
push
mov
xchg
mov
loopne
popf
xchg
mov
test
out
push
pop
mov
testb
out
inc
fimuls
test
xor
jge
jno
imul
pop
pop
or
ss
out
insb
jmp
out
jl
pop
sub
add
lret
push
pop
ret
dec
push
dec
leave
shl
leave
add
pop
shlb
mov
leave
shlb
mov
and
xchg
shr
pop
out
and
cmp
out
dec
enter
fcmovb
inc
rcrb
push
inc
sbb
cmp
les
in
imul
pushf
mov
leave
imull
daa
arpl
mov
loopne
add
jl
adc
clc
dec
jg
fldcw
rclb
ret
out
pop
mov
movsb
fmul
dec
inc
dec
xlat
ljmp
inc
imul
mov
test
pop
push
leave
sbbl
test
lods
jp
xlat
dec
aad
fbld
fxch
xchg
inc
mov
or
push
pushf
or
lods
inc
inc
pop
pop
scas
test
popa
or
lock
int
xchg
int3
push
imul
mov
xor
pop
xchg
and
dec
sbb
push
sbb
int3
fcmovb
iret
decl
xlat
lea
mov
xor
loope
fmull
int3
out
out
sarl
clc
test
pop
fcmovnb
push
adc
push
push
iret
lds
pop
add
fadds
fisttpll
sub
insb
fs
addr16
fstps
gs
arpl
idivl
test
mov
dec
cmp
fnstsw
adc
fcmovne
push
jle
push
ficomps
dec
mov
loop
pop
mov
jge
push
pop
mov
sbb
shll
push
repz
pop
inc
xor
subb
xchg
and
aas
in
dec
sub
stos
aad
addr16
push
inc
dec
fisttpll
jl
fsubr
push
mov
jge
pusha
int3
aam
leave
mov
cmp
and
xchg
lcall
les
neg
aad
lea
push
in
add
push
aas
cmc
enter
fstpl
negb
les
pop
jg
pop
dec
fisubrl
dec
enter
pop
pop
jne
rol
les
inc
jmp
loop
push
mov
out
pop
mov
add
inc
fisttpll
jmp
dec
pop
movsl
sbb
mov
mov
in
fs
fdivs
leave
fxch
imul
push
mov
and
mov
mov
imul
mov
adcb
loope
xchg
enter
push
jmp
iret
pushf
out
into
js
repnz
and
test
imul
dec
aad
jge
dec
cld
add
pop
call
imul
outsl
xlat
mov
add
les
into
and
pop
dec
jmp
pop
icebp
sahf
iret
incl
into
shlb
andl
mov
pop
addr16
test
xlat
in
loopne
dec
aam
cmc
out
xchg
aad
les
int
adc
mov
rclb
push
es
inc
test
inc
dec
xchg
cmp
aad
fisubl
call
imul
loopne
sub
ficoml
xchg
pop
rcrb
aad
fucom
lret
xlat
push
loopne
xor
pop
dec
aas
push
add
adc
xchg
mov
shlb
cs
test
insl
loopne
and
out
dec
jl
push
cltd
loopne
inc
push
data16
push
aad
xlat
shll
les
in
dec
loop
mov
push
cld
lea
fmull
rcrl
pop
adc
cmp
out
test
push
call
fs
dec
push
cltd
dec
mov
popa
pop
or
xlat
movsl
gs
lret
push
test
dec
repz
fs
fidivrs
add
mov
sti
aad
mov
cmp
jl
sarb
jl
leave
xor
scas
pop
dec
or
pop
lret
ljmp
push
lods
push
dec
dec
fnstcw
push
enter
push
mov
scas
in
pop
in
dec
jmp
mov
iret
mov
test
mov
push
fistpl
sbb
fistpll
out
add
fstp
enter
into
test
dec
iret
push
dec
bound
enter
shr
fcmovnu
pop
out
addr16
jno
push
mov
or
into
cld
dec
push
imul
fisttps
push
xorb
das
dec
pop
dec
fucom
inc
test
imull
jp
pop
push
cmp
enter
iret
cld
xlat
popa
cmp
push
pusha
push
negl
in
call
into
push
and
fistps
in
aam
adc
fs
sub
lcall
pop
repnz
mov
pushf
ljmp
pop
pop
lret
fnsave
dec
jmp
arpl
fucomi
jnp
mov
pop
pop
test
xlat
dec
and
pop
int
sahf
push
fnstsw
fimuls
jae
fstpt
add
push
rolb
call
addr16
pop
jg
push
fidivrl
jae
stos
push
cmc
enter
add
popa
orb
int
ret
dec
inc
in
fmulp
mov
pop
inc
addr16
pop
jle
push
enter
push
popa
les
dec
jnp
inc
mov
mov
pushf
pusha
push
cmp
pop
fld
test
les
xchg
dec
vsqrtpd
mov
aad
fldt
pusha
and
scas
or
mov
dec
loopne
push
movsl
cwtl
aad
cltd
bound
sbb
push
popa
iret
mov
out
pop
lret
pop
mov
aam
jp
push
xchg
inc
pop
dec
fsubs
call
xor
rorl
popa
adc
lret
lret
ret
leave
pop
adc
lods
lret
sbb
gs
out
js
rolb
pop
jle
pusha
jns
dec
pop
fdivs
push
mov
cmp
inc
dec
mov
leave
dec
mov
xor
pop
loope
iret
data16
lret
jmp
pop
fmuls
jle
iret
push
push
dec
inc
jne
lret
or
or
fistpl
dec
call
in
out
lods
jl
test
mulb
pop
movsb
stc
mov
inc
into
dec
push
aad
mov
cmp
push
cmp
jnp
ret
ljmp
into
test
fldl
or
add
dec
pop
pop
fiaddl
lret
int3
mov
ss
jmp
dec
push
pop
fst
mov
in
xchg
ja
gs
jmp
fiaddl
mov
push
mov
arpl
pop
and
setg
mov
jge
frstor
rclb
popa
lahf
push
insb
repnz
add
dec
add
nop
push
shl
addr16
dec
adc
inc
int
pop
pop
popa
mov
gs
push
adc
and
inc
aad
xchg
push
lock
aam
fiadds
pop
mov
shrb
xor
push
inc
pop
test
insb
push
mov
mov
les
push
adc
pop
add
xchg
xlat
pop
push
dec
gs
jge
fsubr
aad
xchg
push
aad
in
pop
ret
out
lret
inc
sbb
inc
imul
popa
pop
enter
fcompl
pusha
repnz
push
mov
mov
movsl
sbb
add
stc
outsb
jmp
and
fldl
push
clc
and
imul
clc
daa
cli
aas
fstpl
xchg
loope
dec
jbe
call
pop
sub
dec
and
sbb
das
add
inc
pop
lea
push
fisttpll
decl
fists
mov
pop
out
les
inc
push
call
dec
push
aad
cmpsb
loopne
jge
xchg
dec
enter
aad
mov
fistl
lock
mov
daa
popa
leave
leave
icebp
cld
pop
push
push
push
add
jmp
jns
fstpl
xlat
inc
mov
ds
popa
jecxz
aad
push
test
mov
jbe
jg
jmp
mov
imul
mov
rclb
or
mov
inc
pop
frstor
fnsave
jl
lret
rcrl
dec
ret
fmuls
shlb
rcl
shrl
dec
aaa
jg
dec
test
pop
movsl
lods
fldenv
dec
push
int3
inc
gs
mov
xlat
dec
fcmove
mov
fnsave
ds
loopne
out
cld
sub
outsb
xchg
ret
cli
dec
push
andl
loopne
bound
xchg
fcoms
add
and
loopne
shrb
in
outsb
jp
lret
lea
push
push
popf
jge
int
into
push
and
fucomi
push
xlat
clc
int3
aam
cld
xchg
pop
mov
dec
scas
scas
mov
xchg
sub
cmp
int
xchg
ret
xchg
int
into
lret
vandnps
push
test
jae
lret
stos
fbstp
outsl
shl
xor
lret
out
aad
mov
dec
repz
out
dec
push
mov
inc
test
mov
loopne
popa
fnstsw
mov
pop
add
pop
sub
fmulp
ret
movsl
rcl
aad
mov
xor
enter
iret
into
imul
xchg
sub
in
push
and
push
dec
pop
inc
fmull
or
xchg
dec
or
mov
in
rcrb
aam
movsl
and
movsl
leave
rcrl
dec
mov
shrb
jbe
insb
enter
iret
jp
lahf
xlat
dec
lahf
dec
clc
cmp
test
pop
fneni(8087
fnstenv
lret
jle
leave
aad
dec
imul
mov
lea
ror
and
jae
pop
loopne
pusha
testb
fdivr
mov
shr
test
dec
mov
jp
pop
pop
popa
adc
mov
out
mov
push
fsubl
leave
pop
dec
frstor
inc
push
push
jmp
cmp
addr16
call
mov
bound
inc
sbb
mov
xlat
jmp
mov
call
loopne
fsubrl
cmp
push
adcb
pop
jb
imul
jl
add
mov
lcall
adc
mov
xchg
dec
lds
inc
fcmove
lea
ds
int
fcmovnu
rclb
or
out
jl
loopne
xchg
imul
pop
in
jne
push
mov
inc
xor
test
std
dec
mov
and
add
pop
vcvtps2pd
dec
int
cld
out
les
call
push
push
stc
dec
fisttps
imul
pop
jle
fimuls
lds
fisubrl
mov
jge
mov
pop
fdivrl
stos
fucomi
loope
lods
push
add
incb
loopne
out
nop
push
shr
rclb
adc
fldl
clc
iret
xlat
jge
dec
shrl
lret
adc
inc
add
xor
mov
popf
ljmp
push
sarb
jb
dec
jbe
jle
pop
ficoms
scas
sar
iret
push
vpaddq
les
aad
fcomi
xor
inc
rorb
out
pop
loopne
fwait
inc
in
jno
inc
fadds
xlat
dec
push
lret
fmull
jge
sbbl
lds
ljmp
out
int
mov
cld
iret
addr16
bound
fsub
stos
out
dec
fcomp
xchg
gs
xchg
out
mov
mov
xchg
sub
ljmp
test
xchg
push
out
pop
imul
sar
pushf
pop
inc
push
nop
mov
int3
popa
and
adc
shlb
adc
mov
lret
dec
sub
jp
push
ds
push
jmp
fstps
int
fcmovnb
andl
pop
dec
jb
push
pusha
fildll
mov
aad
and
in
scas
push
ljmp
mov
fsts
and
idivl
pop
xchg
jbe
andb
ficomps
xchg
and
dec
out
jp
dec
ret
imul
pop
sub
dec
dec
loopne
shll
mov
out
loope
movl
rcr
mov
fucomp
fisubs
js
jmp
into
inc
ja
mov
call
push
loope
into
loopne
aaa
test
mov
stc
gs
jmp
mov
mov
sarb
aaa
shlb
popa
jno
cmp
data16
addr16
push
adc
pop
dec
bound
in
inc
jecxz
mov
fildl
imul
jl
xlat
pusha
imul
pop
movsl
push
dec
jle
out
lret
ret
stc
pop
and
mov
mov
cli
mov
xchg
dec
lret
inc
inc
shll
dec
push
ret
pop
fmuls
into
jmp
add
inc
jp
fmulp
and
sub
cs
aam
push
dec
ljmp
pop
add
inc
les
out
ss
push
jp
cmp
mov
fimull
mov
or
stc
in
mov
pop
or
adc
push
pop
add
leave
pop
push
inc
orl
jmp
jge
pop
dec
aam
addb
xor
inc
cmp
lret
rorl
adc
push
push
bound
xchg
jbe
fisubl
leave
pop
addb
cmp
push
lret
orl
adc
lds
imul
add
lds
jge
fldenv
pop
cld
inc
dec
ds
je
pop
in
fcomp
dec
bound
jb
lea
popf
pop
pop
mov
pop
mov
or
call
test
mov
insb
ret
lahf
fcmovnu
sub
inc
mov
and
dec
aad
sub
into
int
movsb
pop
inc
out
adc
adc
test
arpl
mov
pop
outsl
mov
pop
lods
outsb
lds
pop
mov
test
rcr
push
jl
pop
fchs
out
in
dec
add
xchg
fnsave
dec
dec
fiadds
or
jp
xchg
fwait
push
aas
pop
aad
lret
leave
and
lret
dec
decl
push
flds
jmp
int
fstl
pop
in
pop
cmp
push
xlat
mov
pop
call
aad
enter
push
call
push
xchg
out
adc
lods
outsl
repnz
mov
add
jge
inc
mov
pusha
dec
or
in
mov
aad
add
dec
fistl
iret
fcmovu
cmp
jge
dec
decl
stos
cli
mov
test
push
das
imul
fstl
icebp
mov
or
leave
mov
cwtl
aas
lret
lahf
sbbb
gs
fisttpll
dec
faddl
cmp
fcomps
sbb
and
cli
cmc
fxch
jmp
test
add
aam
pusha
push
nop
add
dec
daa
pop
cli
sub
inc
dec
mov
xor
aam
mov
pop
pop
and
int3
sarb
fs
mov
ret
enter
push
pop
aad
push
dec
inc
int
leave
js
fldl
jae
loop
outsl
dec
cltd
repnz
xlat
fbld
aad
xchg
fistl
cmpsb
pop
enter
xor
inc
push
lret
popa
les
xchg
subl
sbb
push
addb
sbb
cltd
push
ret
push
popf
jecxz
add
pop
ffreep
adc
leave
or
aad
inc
jp
rorb
insb
and
mov
fldenv
test
or
imul
call
mov
sub
je
mov
aad
dec
ret
fs
loop
push
test
jmp
es
pusha
lret
pop
fcmovne
xchg
mov
int3
filds
fcompl
pushf
inc
pop
ds
add
sbb
movsl
in
jmp
leave
xchg
fistpl
inc
mov
call
mov
test
push
fdivrl
push
inc
addr16
pop
pop
lahf
pusha
jmp
jmp
decl
dec
lahf
mov
in
mov
push
fucomip
and
jmp
jl
int
sub
jecxz
jmp
jae
push
mov
aad
out
dec
inc
leave
outsb
xchg
cli
fisttpl
pop
mov
adc
mov
xor
leave
sbb
dec
fdivrs
lds
into
inc
inc
mov
dec
das
xchg
inc
bound
fisttpll
aas
sub
add
shrb
mov
bound
call
add
dec
push
mov
pop
or
and
enter
inc
je
lret
leave
dec
sub
sarw
movsl
fidivs
push
js
push
aad
out
push
lret
push
data16
jne
push
pusha
das
fisubs
lahf
mov
loope
addr16
lret
mov
out
inc
call
jmp
sbb
rcr
int
push
sub
pop
daa
xchg
repz
loopne
push
test
jno
jmp
push
call
mov
rorb
cmc
insb
in
lret
fisttpl
jecxz
xchg
out
enter
iret
pop
leave
inc
mov
lock
gs
imul
mov
fsubs
pop
sti
stos
mov
mov
out
lret
out
mov
pop
into
rol
call
test
roll
pop
out
fildl
pusha
inc
repz
pop
in
jp
aas
pop
dec
or
lret
ficoml
dec
out
adc
clc
xlat
imul
sub
fstpl
aam
rcrb
jae
leave
dec
shl
and
into
fwait
out
mov
mov
mov
enter
shll
stos
fadds
push
adc
shl
fcmovne
lret
cmpsl
mov
cmp
addr16
mov
mov
sti
int
aad
out
inc
push
popa
insb
push
xorb
loop
inc
repnz
cmpl
xlat
mov
loopne
inc
xor
dec
call
repz
adc
das
dec
andl
dec
into
inc
push
inc
pop
imul
arpl
fmull
test
add
push
out
int
inc
call
pop
dec
test
in
fcmovb
rorl
lds
pop
shll
inc
data16
fs
lret
into
lds
xchg
iret
lcall
jmp
dec
out
les
push
adc
inc
sarl
data16
sbb
inc
in
les
dec
lret
int
call
cmc
sub
xor
cmp
push
call
std
fsub
sub
pop
cmp
shl
in
push
aad
adc
mov
sbb
iret
pop
jge
rcr
pop
dec
push
aad
xor
icebp
stos
rcr
test
lret
jmp
adc
push
pop
lea
test
leave
inc
mov
iret
int
dec
lcall
rcrl
fcmovnb
mov
dec
pop
pop
add
in
pop
out
sub
fisttps
inc
les
mov
mov
add
xchg
mov
ds
push
jge
cmp
fistpl
add
out
cmpsl
in
xor
loope
jbe
pop
int
sbb
dec
cld
fisubrl
mov
push
lods
clc
mov
mov
xlat
pop
jmp
inc
les
pmullw
push
cli
icebp
outsb
call
shlb
pop
cltd
and
popa
push
mov
pop
gs
mov
push
mov
jg
addr16
jmp
mov
mov
dec
jle
dec
dec
dec
loopne
pop
mov
pop
clc
push
inc
addr16
cltd
push
jp
cli
aam
jbe
adc
dec
dec
mov
pusha
fisttpll
lret
out
and
pop
rclb
inc
mov
adc
dec
popl
mov
dec
lret
mov
dec
dec
cmpsl
rol
rorb
xor
shr
push
push
enter
push
sahf
jp
int
inc
stc
pop
mov
xchg
xor
lods
mov
fs
dec
out
pop
clc
fldcw
mov
clc
ficoml
and
mov
fnsave
imul
lods
jne
mov
in
dec
add
enter
sbb
dec
lods
or
mov
aam
fstl
leave
mov
flds
loope
addr16
cli
shl
aam
nop
push
imul
pop
inc
pop
int3
pop
fs
jp
fiadds
call
js
jle
push
pop
inc
fs
cld
xchg
jge
lcall
jg
dec
push
lahf
xchg
push
pop
imul
dec
mov
jg
push
fidivrs
mov
aad
pop
adc
fs
mov
add
and
pop
imul
int3
test
jecxz
movsl
stos
js
pop
xor
inc
int
lds
mov
addr16
les
pop
ds
inc
cs
cmp
imul
fwait
mov
leave
mov
jmp
clc
pusha
sbb
inc
mov
les
insb
push
add
push
dec
mov
and
leave
aam
imul
dec
mov
cmp
jp
dec
jge
inc
jge
ror
pop
adc
pop
dec
repz
mov
shlb
icebp
push
shlb
inc
aad
ss
fcmovne
lahf
movsb
ds
or
fcoml
hlt
pop
push
ds
movsb
push
jp
iret
xchg
in
dec
int
repnz
push
pop
negb
xor
dec
jg
pop
iret
negl
jecxz
test
jae
repnz
mov
out
mov
dec
repnz
cmp
jns
and
outsl
movsl
inc
xchg
jbe
sbbl
popa
flds
shll
shlb
sub
dec
jmp
stc
jle
inc
fstps
ljmp
push
pop
shrl
lret
jb
jmp
popa
mov
fs
jb
fstps
push
int
dec
lret
fstpl
repz
stos
fninit
pop
pop
xchg
push
inc
and
std
in
aam
xor
pop
adcb
bound
xor
dec
out
fxam
sbb
roll
out
push
js
add
ds
out
cmp
dec
push
push
inc
out
and
scas
ffree
cmovle
popf
dec
in
int3
fcompl
dec
mov
pop
pop
inc
int3
rclb
lcall
push
loopne,pt
sbb
mov
push
xchg
fsubrl
insb
adc
fisttpl
aad
shrb
pop
push
shll
pop
jle
fisubs
data16
jge
dec
cltd
xor
and
neg
and
fnstcw
enter
cmp
xlat
jbe
pop
out
out
jb
mov
in
aas
dec
les
pop
fidivrl
sbb
shrl
push
filds
mov
mov
nop
push
mov
xchg
cs
inc
and
imul
mov
and
jae
fcmovnu
addr16
dec
scas
dec
rol
call
js
leave
cli
stc
dec
sub
mov
imul
test
jbe
pop
or
imul
pop
outsb
xlat
pop
loopne
push
aam
pop
pop
rcr
fstpt
shll
rorb
cs
dec
mov
neg
addr16
sbb
iret
aad
test
into
pop
dec
jle
fmul
cld
inc
leave
lea
inc
xlat
rorl
dec
xchg
mov
imul
enter
filds
jns
lods
mov
out
out
sarb
addr16
xor
xlat
popa
loopne
push
icebp
adc
push
inc
and
xor
in
add
aam
sbb
shlb
rcl
out
pop
pop
lea
jmp
inc
sti
push
fisubrl
pop
sbb
fnstcw
hlt
jmp
xchg
sub
popa
jge
scas
xchg
loop
push
push
rorb
sahf
xor
xchg
mov
jmp
inc
dec
add
call
aam
popa
cmp
sbb
fmul
repnz
lds
dec
jge
lret
shll
jg
dec
pop
pop
dec
and
mov
test
fdivr
push
fimuls
sti
dec
out
loopne
gs
std
inc
xor
jecxz
jmp
jb
shlb
out
or
fdivrs
data16
lcall
addr16
sbb
pop
xchg
push
pop
cwtl
lea
jge
popa
adc
push
mov
testl
pmullw
xchg
dec
inc
test
pop
les
inc
mov
fs
stos
push
enter
add
inc
aam
inc
pop
mov
xlat
rolb
loopne
aas
mov
mov
aad
push
popa
mov
inc
pushw
push
xchg
fdivs
popf
push
push
sbb
fldl2e
mov
push
push
fadds
pop
pusha
leave
fists
gs
out
dec
cmp
pop
dec
lcall
push
mov
pop
insb
ds
sub
push
aam
jae
push
into
pop
mov
pusha
pop
lcall
dec
repnz
outsb
mov
mov
cwtl
pop
outsl
insb
dec
cltd
push
lds
jge
jmp
xchg
stos
js
repz
stos
div
inc
push
insb
pop
lret
inc
jge
add
cwtl
rcll
in
xchg
sub
xlat
ss
or
inc
lret
mov
mov
ror
xchg
nop
aam
fcmovbe
rorb
addr16
pop
fildl
arpl
popf
and
dec
fcmovnb
add
lret
fsubr
int
mov
mov
iret
leave
xor
adc
cmp
pop
int3
sbbb
lea
mov
mov
popa
cld
jb
das
clc
call
pop
inc
out
sub
fmull
push
jb
pusha
lretw
mov
lds
push
dec
fcmovb
pop
test
stc
lret
fistps
iret
les
fstpt
shlb
stos
mov
push
stos
xchg
inc
out
loopne
aas
adc
mov
iret
xorb
mov
in
or
sarb
enter
addr16
in
add
pop
les
inc
dec
jge
fisubl
push
mov
stos
jns
dec
in
push
loopne
in
xlat
mov
pop
mov
mov
push
test
jge
int
dec
enter
push
adc
in
test
outsb
vshufps
ficoms
popa
rol
inc
in
xlat
push
dec
xchg
lds
lea
into
and
dec
aad
ljmp
iret
leave
and
mov
sbb
popa
push
or
rcrl
icebp
hlt
lret
lret
and
inc
rorl
movsl
sahf
xor
into
dec
push
icebp
adc
lods
ficoml
jecxz
sti
test
rcr
xor
call
push
scas
popf
dec
cli
pusha
push
pop
pop
push
sub
gs
jno
iret
fsubp
scas
lds
pop
dec
pop
test
jbe
lods
push
dec
jp
dec
nop
pop
inc
pop
inc
adc
fsubrl
xchg
dec
aam
test
push
fistpl
xor
leave
ss
fidivrs
hlt
pop
mov
mov
aam
call
jl
inc
outsl
ffreep
ret
int
shll
sar
mov
addr16
cmp
ljmp
or
arpl
add
out
nop
dec
popa
adc
mov
dec
fisttpll
pop
push
and
cmp
aaa
add
inc
test
lret
mov
hlt
in
gs
shl
int
xchg
sbb
or
inc
or
mov
pop
push
sub
push
pushf
shlb
fnstcw
adc
mov
rcl
loope
adc
sub
nop
inc
and
push
pushf
icebp
scas
out
fstps
shl
icebp
mov
sbb
fmuls
cltd
ror
mov
mov
sub
pop
dec
or
pop
adc
movsb
push
pop
enter
sarb
divl
js
stc
mov
inc
pop
fstl
test
orb
fneni(8087
or
mov
pop
fdivrs
sar
lds
push
test
daa
push
dec
mov
and
xchg
pusha
aam
ficompl
data16
icebp
cmp
aas
loopne
aas
out
inc
test
dec
mov
and
loopne
pop
jae
push
push
jl
fistpll
lret
dec
insb
aad
mov
fstp
dec
in
fst
inc
add
in
push
in
push
mov
lods
pop
mov
jg
dec
jge
ficoms
mov
inc
vorps
pusha
pop
xchg
out
push
sbb
dec
insb
jno
xchg
pusha
xchg
and
pusha
pop
jmp
rcrl
push
jp
loopne
fisttpll
xlat
sub
mov
out
push
ficoml
inc
push
popa
xlat
nop
jae
cmp
int3
cmp
inc
shll
insb
push
ljmp
pop
and
and
push
push
lret
pop
xor
gs
pop
xlat
out
dec
dec
push
loop
in
lods
enter
fisubrl
push
outsl
fildll
push
sbb
sub
rolb
mov
fidivs
cmp
out
push
adc
rcrb
loopne
pop
mov
jmp
jl
push
ret
cmp
imul
pop
dec
adcl
dec
sbb
dec
jno
push
pop
dec
mov
jge
lret
frstpm(287
inc
addb
adc
dec
pop
pop
and
jl
aam
ds
test
outsl
mov
aad
pop
add
pop
dec
ffreep
in
xlat
mov
enter
int3
and
les
pop
adc
fisubs
lds
dec
fwait
in
adc
out
dec
push
adc
aad
stos
mov
out
test
pop
jge
sarb
ret
fmull
decl
test
mov
iret
aam
imul
adc
inc
xlat
lret
pop
lcall
loope
icebp
shll
aad
in
dec
xchg
sub
mov
nop
push
push
pop
jl
pop
dec
rcr
imul
jge
int3
in
movb
fcmove
iret
push
jmp
xchg
cld
mov
pop
stos
je
xor
add
xor
lret
fcmovbe
mov
stos
push
pop
inc
pop
arpl
jp
iret
inc
dec
dec
inc
loop
aam
in
xor
into
dec
sbb
frstor
movsl
lea
fcompl
pop
pop
inc
xchg
popa
aad
sbb
xchg
mov
cli
dec
gs
cmpsb
pop
add
push
push
iret
faddl
test
dec
test
mov
subl
xchg
or
push
xchg
shrl
push
addr16
repnz
leave
pop
push
fcompl
cltd
ficoms
fstps
adc
xchg
inc
imul
jae
dec
pusha
jo
test
popa
mov
dec
ret
int
fs
pop
and
ror
test
enter
test
gs
out
fnstsw
xchg
fsubr
pusha
jmp
fisubrs
pusha
add
cmp
ljmp
inc
and
cmc
roll
lret
push
loope
push
cld
dec
aam
push
mov
out
pop
call
pop
jle
xlat
push
inc
mov
fistl
dec
not
pop
mov
mov
leave
push
inc
into
test
jmp
jae
dec
ss
push
andl
lret
mov
mov
into
push
sbb
in
push
and
loopne
inc
repnz
dec
mov
ror
mov
pop
fldl
imul
sahf
lds
mov
dec
daa
aad
inc
test
inc
fcmovne
adc
imul
call
in
inc
mov
inc
mov
test
call
test
int
dec
pop
sbb
dec
pop
in
popa
aam
inc
fiadds
mov
test
addr16
mov
push
fnstcw
add
dec
int
insl
and
aad
jecxz
push
pop
not
clc
mov
cmpsb
lret
xchg
dec
clc
fimull
mov
pop
adc
xlat
pop
fcomps
and
fmulp
aad
lret
call
push
jno
and
mov
dec
inc
pop
pop
dec
push
fst
xchg
out
pusha
push
insb
mov
push
dec
add
in
fnstenv
mov
dec
int3
rolb
sti
popa
inc
int
pop
xchg
fldl2e
in
les
or
test
ret
aad
shl
mov
shlb
popa
aas
pop
jmp
push
repz
pop
mov
mov
jmp
shlb
fistl
popa
inc
mov
dec
fstpt
push
dec
inc
dec
es
out
hlt
js
mov
jmp
pop
fs
fsts
into
fucom
loope
enter
jmp
push
jecxz
aad
push
lret
mov
pop
fildl
mov
icebp
and
jmp
or
rcr
aam
out
sbb
push
dec
dec
mov
push
inc
out
call
and
dec
rcll
xor
dec
fisttpl
pop
fcomps
mov
addr16
and
popa
inc
aas
mov
sbbb
loope
dec
insb
pop
xor
mov
lret
or
xchg
aad
pop
mov
fisttpll
out
fsubl
out
sbb
into
pop
pop
psrlw
pushf
stos
sahf
pop
pop
iret
jp
xchg
fldl
stos
fmul
jno
and
jb
enter
pop
or
call
push
fldl2t
loopne
lret
pop
out
imul
sub
cmp
negb
loop
xchg
out
mov
arpl
xchg
aas
add
clc
enter
pop
jp
iret
adc
sub
int3
gs
add
fmuls
loope
pusha
xlat
test
shl
inc
mov
sar
les
dec
mov
push
pusha
lds
xchg
lret
stos
cmpsl
jge
dec
dec
adc
pop
push
into
sbb
xchg
pop
add
sub
lods
cltd
jl
pop
in
faddl
sbb
cld
fists
jecxz
adc
iret
mov
fcom
add
push
xlat
popa
int3
and
arpl
iret
fucomi
inc
test
leave
jns
mul
lret
cld
addr16
pop
mov
fldl
or
xchg
xchg
data16
mov
negl
pop
test
inc
clc
call
out
jge
mov
lock
lds
repnz
mov
cmp
pop
push
cwtl
clc
insb
js
bnd
mul
icebp
mov
popf
fmuls
push
pop
mov
adc
aad
negb
stos
fsts
mov
cs
stos
jl
jbe
fcompl
out
out
scas
fsubrs
out
mov
add
and
and
ljmp
pop
les
dec
push
sarb
aad
push
fneni(8087
xchg
pop
inc
cld
cltd
mov
in
and
pop
aam
add
jle
lret
pop
loope
das
ds
rcrl
pop
push
and
mov
mov
sti
rclb
call
test
dec
rcrl
bound
mov
aam
sub
jbe
mov
pop
andl
xchg
in
ficomps
fwait
call
jg
popa
imul
fisubrl
pop
jg
ffree
mov
pop
lds
out
cmp
data16
xchg
fisttpll
out
aad
jg
lret
add
jno
xchg
pop
call
out
mov
mov
jl
fdivrl
sbb
ds
into
rcll
pop
pop
iret
and
das
lea
pop
fistpll
in
fimull
test
lock
in
xchg
fcmovne
inc
imul
adc
shl
inc
ja
iret
xchg
int
test
push
fisttpl
rolb
dec
dec
dec
pop
iret
mov
pusha
jmp
fwait
sbbb
sbb
jnp
pop
xor
or
jmp
xchg
mov
or
sahf
loopne
jmp
xlat
into
ds
imul
inc
xchg
inc
pop
mov
insb
push
pop
xor
inc
jge
add
cwtl
xchg
test
dec
mov
test
lret
movl
xor
insb
cltd
lret
xchg
in
enter
pop
xchg
gs
add
mov
jno
pusha
dec
loopne
inc
push
adc
pushf
loopne
pop
pop
mov
jge
xchg
pop
fisubs
lret
jbe
lcall
xlat
aam
cmc
lcall
out
lret
imull
leave
in
pop
mov
jp
dec
mov
lds
lods
pop
int3
lret
or
pop
adc
out
dec
add
sbb
jle
aam
int3
popa
pop
fcmove
adc
sbb
aad
sbb
ds
sbb
mov
stos
insb
jae
push
in
cmp
xlat
pusha
or
cwtl
test
push
data16
push
call
fadd
mov
pop
add
dec
int
int3
rcrb
dec
fisttps
mov
rorb
rorl
frstpm(287
gs
mov
out
mov
fs
movups
popa
or
inc
cltd
aam
jl
push
dec
mov
fnop
lret
aad
and
mov
jge
push
jl
cli
test
push
leave
pusha
aad
fucom
loopne
cmp
lcall
jno
popa
xchg
ficompl
prefetchw
ds
aad
stos
mov
xchg
rcl
mov
ficoml
push
stos
dec
js
ficoms
lcall
loope
mov
jbe
pop
jmp
js
jp
insb
enter
push
jmp
push
iret
pop
movsb
aam
enter
leave
cmp
mov
rcll
aad
ljmp
mov
cmp
into
and
lret
pop
pop
mov
arpl
dec
push
fildl
aaa
loope
int
dec
inc
int3
out
push
fiadds
mov
pop
stc
call
mov
ror
and
pop
icebp
std
inc
jp
dec
push
push
bound
push
rorb
rcl
loopne
ffreep
pop
pop
mov
into
pop
jge
inc
leave
std
int3
mov
lods
xor
add
add
push
rorb
imul
test
push
je
or
in
imul
mov
jle
dec
outsl
addr16
enter
imull
fldt
mov
fimuls
xlat
cmp
mov
mov
push
les
popa
daa
cmpl
mov
aam
xchg
or
cwtl
in
jmp
dec
push
dec
pop
out
adc
data16
insl
imul
fldenv
and
sbb
mov
cmc
push
rol
test
dec
fcmove
in
sbb
fsubrl
imul
push
jge
jge
shll
push
fidivl
fiadds
or
clc
pop
push
gs
xchg
js
repz
pop
pop
ljmp
pop
enter
int3
lods
lcall
imul
pop
cmpb
jae
lret
sbb
sub
decb
outsb
mov
mov
jg
dec
int
rolb
dec
push
mov
in
inc
icebp
push
into
mov
pop
pop
shl
pop
fstp
dec
ja
push
xlat
mov
or
mov
test
jmp
loopne
fisubs
xchg
inc
adc
xchg
push
cs
xchg
jge
dec
shlb
in
lahf
jl
hlt
dec
xchg
dec
in
pop
shl
ljmp
dec
int3
inc
add
pop
fnstsw
stos
push
lret
jl
call
xchg
push
push
test
pop
fdivrl
dec
jae
outsb
cmp
lahf
mov
pop
push
mov
addr16
sub
inc
outsl
fs
mov
push
xor
inc
push
clc
dec
mov
aam
test
pop
cmpsb
and
add
xlat
leave
pop
lret
rorb
dec
cmp
cmp
mov
in
addr16
pop
lret
pop
push
sarb
add
and
call
popa
pop
inc
insb
pop
fisttps
test
popa
in
fildl
int
inc
dec
fmul
sub
sub
xchg
addr16
in
int
mov
jno
mov
out
addb
sar
dec
call
push
cmp
adc
addr16
dec
push
and
or
int3
inc
mov
dec
daa
aad
gs
je
lds
fdivrl
pop
test
popa
loop
pop
scas
std
jp
aam
imul
pop
mov
movsw
cmp
lret
ror
ficomps
push
icebp
mov
adc
or
mov
jecxz
mov
jmp
inc
xchg
aaa
out
fwait
jmp
cmpl
push
mov
fcmovne
pop
lret
jecxz
mov
fstl
aas
out
nop
imul
fisttps
sub
push
and
push
mov
fcoms
gs
pop
mov
loopne
push
jmp
fwait
pusha
out
fstpl
xchg
int3
test
call
jmp
pusha
scas
aad
and
inc
mov
leave
dec
pop
fistl
dec
mov
mov
fildll
adc
out
jne
mov
ret
jnp
xlat
fldenv
js
add
iretw
pop
push
ja
movsb
aas
popf
jg
aad
gs
nop
das
add
sbb
push
dec
scas
shr
in
mov
cmp
in
dec
imul
into
out
int
enter
iret
ror
pop
aad
pop
jae
inc
jmp
jge
call
jmp
mov
inc
roll
test
dec
fists
push
dec
xor
xlat
push
in
fstp
ret
dec
movsl
rorb
out
repnz
stos
sti
in
lret
mov
enter
in
cli
dec
aad
fsubrp
push
loopne
lahf
fdivl
rorl
push
imul
subl
xchg
in
mov
insb
ret
mov
cwtl
jbe
dec
divl
bound
aam
neg
dec
repz
push
stos
js
add
int3
cwtl
mov
sub
push
mov
mov
into
fcmovnu
test
cmp
pop
aad
fucom
das
inc
push
in
popa
rcr
cli
fimuls
ror
dec
push
rol
repnz
inc
xchg
fldt
bnd
into
push
fsts
pop
xchg
mov
pop
pop
mov
sub
insb
stos
lret
mov
int3
je
mov
js
jnp
cmp
add
imul
dec
aad
in
fucomp
jns
xchg
ja
fdecstp
dec
jne
mov
ljmp
push
pop
aad
xchg
push
mov
jecxz
inc
mov
gs
das
call
cmc
fcomps
filds
daa
leave
into
or
shll
lock
inc
cmp
pushl
xlat
stc
jbe
movsb
js
lea
push
fiaddl
jno
loopne
and
imul
int
xchg
push
pop
adc
lock
out
fcomp
je
ret
andb
inc
imul
nop
out
mov
mov
and
pop
pop
out
int3
push
jae
fxch
cmp
jg
pop
pop
pop
mov
movsl
sub
imul
adc
sbb
and
dec
loopne
loope
push
dec
fstl
rolb
or
cmpsl
dec
pusha
rolb
sub
mov
fsubl
ret
xchg
stos
out
push
mov
xlat
pop
inc
pop
fcompl
push
sbb
aas
jnp
and
jmp
inc
xchg
fstpt
test
or
nop
inc
sarb
inc
int
call
fbld
dec
mov
popa
mov
dec
push
jnp
pop
out
call
pop
lahf
icebp
pop
jg
fcmovu
insb
clc
xor
lcall
xor
leave
dec
xchg
int
push
jbe
js
stc
jle
sbb
dec
add
scas
mov
int
mov
add
aad
nop
inc
outsl
out
pop
outsb
adc
and
dec
pop
pop
stos
add
data16
fsub
adc
sub
inc
cmpl
mov
xor
mov
leave
pop
dec
imul
repnz
xlat
shrb
jb
mov
repnz
dec
ret
out
inc
push
add
cmp
xchg
fsubp
dec
inc
repnz
insb
lret
jle
out
rcrb
aam
dec
xchg
fildl
fs
aam
jmp
ret
xlat
xchg
mov
push
and
lret
fisttps
push
call
add
les
mov
shll
sub
out
out
out
sub
inc
nop
push
and
xchg
fsts
fwait
and
pop
fucomip
jg
clc
iret
jmp
sbb
and
rcr
leave
adc
ljmp
dec
out
out
xchg
mulb
xchg
mulb
rolb
lcall
in
xor
jp
sbbl
int3
fucomi
push
or
frstor
push
xor
push
aam
inc
dec
jp
enter
mov
adc
xchg
mov
pop
mov
movsl
lds
iret
cmpsb
jno
shrl
cmp
cli
sub
mov
not
pop
jl
fists
mov
push
inc
pop
dec
orl
leave
outsl
out
mov
pop
xchg
mov
stos
xor
xlat
and
mov
add
dec
lds
adc
mov
push
push
daa
jmp
fdivp
inc
dec
jmp
gs
push
push
add
rorb
pusha
inc
in
mov
mov
mov
jp
lret
pop
fidivrs
push
out
loopne
mov
es
lret
sti
xlat
pop
fsub
stos
inc
mov
aas
push
fistpl
mov
mov
leave
cmp
clc
aam
inc
repz
imul
mov
mov
fildl
push
into
ficomps
add
rorl
fistl
push
pop
int3
add
in
pop
jne
jmp
pushf
call
pop
pusha
aas
dec
clc
fdivr
mov
sti
iret
aam
xchg
pop
arpl
aad
pusha
enter
mov
int3
dec
data16
adc
and
test
jmp
shr
popa
inc
enter
inc
lahf
in
lds
lahf
dec
pop
jge
fucomi
int
cs
int3
dec
jbe
imul
push
lahf
push
inc
fadds
inc
into
mov
test
ret
enter
xlat
shll
fldl
shrb
push
inc
fisttpl
push
mov
dec
dec
or
ficompl
int3
ljmp
aad
pusha
add
fmul
fmulp
pop
in
push
dec
push
fcmovne
mov
gs
or
xor
rep
dec
lret
xchg
dec
js
js
or
sbb
inc
sarl
rcr
dec
call
sub
and
pop
ret
ljmp
add
lret
add
int3
arpl
push
and
mov
bound
popa
push
cwtl
mov
and
call
push
cmpsl
enter
addr16
lds
aam
loopne
jge
rol
dec
imul
dec
leave
addr16
sbb
in
inc
push
sub
test
sbb
outsl
jmp
and
das
enter
dec
les
adc
pusha
pop
ficomps
pop
jns
or
idivb
mov
rcll
inc
out
int3
pusha
out
out
jo
mov
fmul
push
lds
test
push
push
dec
mov
dec
out
sub
out
out
jge
cli
push
or
pop
sarl
js
shrl
jge
pop
add
loopne
adc
insb
lret
inc
jle
push
fdivs
popa
lcall
xchg
mov
fnop
xor
test
dec
push
inc
xor
mov
mov
call
pusha
sbb
fstps
push
lds
and
fadd
pop
repnz
aam
jmp
in
jle
push
sub
xchg
jmp
imul
clc
xor
out
movsl
mov
aad
dec
ds
push
fs
rorl
in
sub
pop
iret
ljmp
std
cmc
xchg
out
test
leave
out
add
in
lret
lret
adc
mov
sbb
int3
push
pop
push
lret
ss
int
daa
leave
mov
dec
mov
lahf
inc
shlb
imul
pusha
cmp
aam
jl
inc
jle
faddl
ficomps
sbb
mov
pop
pop
insl
in
aad
clc
int
mov
push
int
leave
mov
dec
dec
mull
fisubs
jp
xchg
xor
je
clc
push
testb
jp
sbb
sub
dec
gs
push
cmp
filds
sbb
cltd
pop
push
flds
pop
adc
decl
call
leave
inc
jae
into
fisttpl
pop
dec
enter
push
xchg
cltd
mov
xchg
fmull
fistl
xchg
out
faddp
mov
fcomp
push
leave
jbe
fsts
lds
xor
popf
int
mov
arpl
cmp
orl
repnz
fldl
mov
dec
pop
mov
inc
stc
pop
jno
icebp
out
or
flds
fldl
testb
jge
movb
jl
in
push
pop
rol
mov
mov
lea
test
rcr
add
dec
call
inc
out
push
mov
mov
jbe
insb
xlat
test
ds
mov
iret
pop
dec
ds
push
fst
dec
push
fcmovne
les
and
inc
shll
pop
fadd
stos
sahf
ret
fidivrs
and
dec
ljmp
mov
add
dec
fsubl
shrb
andl
mov
nop
ficoms
push
mov
push
aad
fs
ffreep
test
scas
icebp
mov
fwait
in
aam
and
push
int3
repz
fmuls
fildll
sbb
dec
sbb
aad
ret
push
lcall
data16
out
xchg
test
push
popa
dec
gs
mov
rcr
nop
loope
filds
xchg
and
lret
outsl
leave
pop
mov
fnsave
loopne
xlat
or
fcompl
xor
push
das
mov
pop
sarb
cltd
add
in
mov
dec
jmp
iret
popa
and
mov
mov
stos
aad
pop
jl
callw
pop
lret
testb
jle
dec
pusha
imul
in
insb
aad
jge
jle
out
loop
pop
rclb
add
aam
xchg
outsl
out
out
fstp
in
arpl
fisubl
or
cmp
xchg
jl
pop
cmp
jp
out
loop
jbe
iret
and
pop
pop
lahf
inc
in
lret
or
mov
test
dec
jl
inc
xchg
xor
hlt
pop
sahf
fsts
addr16
sub
lods
pop
aad
imul
inc
dec
fistpl
lds
xchg
pop
fstpl
jl
push
lret
jbe
jge
pusha
mov
clc
int3
incb
out
gs
or
mov
pop
popa
xchg
les
dec
jl
add
leave
enter
fmuls
shl
lea
dec
imul
lcall
dec
lret
fstps
aaa
mov
popa
dec
in
xor
dec
sbb
jg
into
jp
mov
inc
sub
cltd
jl
push
push
mov
leave
stos
dec
xchg
fmul
xchg
pushf
inc
ret
insb
fidivl
jp
xlat
and
int
mov
dec
or
scas
aad
ss
xor
call
fbstp
pusha
ret
jmp
enter
sub
popa
dec
insb
pop
ret
popa
shll
pop
das
aas
adc
pop
or
dec
pusha
filds
adc
ror
dec
mov
mulb
add
push
call
push
adc
rcll
fbstp
loope
dec
shlb
popa
into
jno
adc
addr16
or
fstpl
xor
imul
int3
add
fisubl
pop
xchg
addr16
inc
sbb
cmpsl
lock
adc
jmp
imul
gs
mov
int3
dec
jg
pop
lods
pop
jae
out
inc
test
push
or
dec
icebp
mov
test
aas
cmpsb
fidivrl
aam
pusha
sarl
dec
shlb
mov
pop
mov
rcrb
iret
xchg
cmpsl
cmpsl
test
pop
jge
call
fisttpll
data16
xlat
xor
push
pop
add
mov
lds
iret
into
lret
shlb
xchg
jle
leave
aam
loopne
insb
sarl
inc
push
inc
xor
inc
aad
mov
ret
push
leave
jp
imul
mov
fnstcw
jmp
fstl
jmp
dec
call
aam
inc
push
pop
mov
push
fmuls
xchg
pop
enter
data16
rcrb
int
fistl
rcr
out
test
inc
out
or
dec
and
push
scas
jno
fxch
mov
rcrb
nop
add
popa
jmp
push
test
loop
push
aaa
fucomp
aad
dec
fldcw
pop
shr
xchg
lret
lds
xchg
fidivl
push
pop
not
mov
push
sahf
out
mov
add
inc
mov
pop
loop
loop
fmuls
push
pop
jl
adc
jmp
cmp
sbb
pop
aam
int
call
frstor
push
popf
cmp
iret
dec
jle
lret
into
enter
out
pop
xchg
lret
imul
cmp
gs
loop
cmp
pop
push
lds
fstp
sahf
jmp
data16
dec
mov
push
push
jecxz
shlb
jl
loopne
mov
mov
xchg
mov
clc
dec
push
pop
cli
or
mov
idivb
shr
fisttps
push
lret
ljmp
fisttpl
bound
jge
add
add
xor
sub
out
call
int3
push
lret
aam
xchg
push
adc
iret
mov
push
popa
fimull
jmp
into
push
jg
pop
pop
xchg
pop
fcmovnu
jne
aad
repnz
jb
cli
dec
dec
pop
cli
dec
cmpsb
xchg
xchg
int3
xor
xlat
stos
lret
lods
mov
data16
dec
in
aad
outsb
jle
in
aad
frstor
dec
insb
and
mov
test
push
cltd
out
lcall
jmp
push
imul
flds
fwait
test
call
pop
inc
adc
dec
enter
ret
mov
fstps
push
push
and
ffree
test
mov
pusha
jne
push
inc
out
fiadds
data16
aad
or
fstp
lods
loope
int3
add
pop
insb
fcoml
and
pop
popa
mov
loopne
push
push
dec
mov
push
lds
int3
pop
loopne
xchg
test
xlat
mov
sbb
clc
xorb
add
dec
fildl
fmull
aad
aam
inc
xchg
pop
out
mov
push
add
pop
adc
imul
lret
mov
jbe
repnz
push
mov
dec
pusha
dec
mov
fstp
aam
jb
pop
iret
fdivrs
adc
cmp
jl
lds
pop
js
jle
push
int3
xchg
shll
dec
push
jno
iret
mov
cmp
cmp
xlat
push
test
js
pop
mov
stc
push
dec
mov
scas
sub
push
js
jae
pop
aam
pop
lahf
aas
inc
push
call
jno
jmp
rol
shll
lret
push
test
lret
js
repz
sbb
push
inc
and
pop
dec
mov
pop
dec
pop
aam
in
icebp
dec
push
test
fbld
push
clc
inc
enter
jge
push
rcrb
into
iret
inc
mov
pop
dec
dec
xlat
fcompl
je
mov
aad
or
fidivl
jl
pop
inc
loope
dec
dec
add
jle
ficomps
pop
fucomip
mov
sbbl
dec
pushw
push
test
sbb
inc
jge
jo,pt
addr16
lds
or
xor
inc
cmovns
es
xor
loope
fdivrl
push
shl
push
stos
cmc
ret
out
aas
mov
jge,pt
dec
xchg
pop
mov
pop
pop
ljmp
xor
pop
dec
adc
out
push
gs
add
push
pushf
xchg
adc
fcmovne
pop
outsl
imul
mov
jae
cltd
mov
loope
pop
jae
dec
push
push
xchg
jne
and
mov
out
int
sbb
loopne
cmp
dec
mov
sbb
loopne
mov
mov
popa
cmc
les
xor
ljmp
push
clc
xchg
cli
dec
dec
fisttps
mov
hlt
pop
out
xlat
aam
aad
xor
shrl
push
dec
das
mov
jg
addr16
lcall
data16
fdivrs
jmp
dec
pop
jmp
dec
jmp
outsl
shlb
outsb
pop
in
pop
loopne
int
lret
push
and
sbb
dec
inc
jno
fisubrl
stos
outsb
js
xchg
gs
fisubrs
ja
mov
fstps
dec
rclb
xchg
aam
sarb
dec
inc
dec
int
mov
negl
scas
into
pop
lds
or
push
loop
mov
mov
fildl
out
filds
fisubrs
pop
sub
push
daa
lcall
pcmpeqb
pushf
add
dec
mov
jecxz
fcmovb
mov
mov
jae
cmp
cmp
jl
inc
push
in
repz
das
adcb
cli
ss
mov
sahf
jle
pop
inc
sbb
clc
mov
or
push
fs
inc
jmp
cld
gs
mov
push
popf
inc
cmp
add
popa
daa
insb
outsl
ja
mov
mov
sbb
and
xchg
xor
or
out
mov
mov
and
insb
fstl
add
aas
push
inc
and
fistl
nop
shll
push
pop
fcmovnbe
jbe
push
stc
popa
cmp
test
roll
fldl
aam
mov
cli
push
ss
std
fxch
int
test
lret
or
dec
ficoml
loope
int
rcrl
aam
iret
push
push
push
fucomp
outsb
out
clc
imul
pop
dec
add
out
xlat
dec
adc
vpinsrw
add
lret
or
mov
out
out
mov
insb
cli
addr16
ficompl
enter
loopne
pop
imul
push
dec
sbb
dec
fidivs
jle
aam
inc
leave
dec
fistl
arpl
xchg
idiv
fmulp
je
movsl
fwait
pop
dec
lock
xor
dec
and
das
mov
aam
or
jmp
push
out
pop
subb
fidivs
enter
inc
popa
leave
xchg
dec
push
fildl
jno
or
jp
test
into
popa
enter
aad
mov
aad
inc
and
in
out
aad
out
mov
jmp
out
and
scas
push
push
sub
lds
jecxz
mov
sbb
mov
into
fsubs
sbb
dec
jge
push
jp
repz
dec
dec
call
push
jle
leave
mov
shr
mov
inc
or
push
push
push
aad
dec
icebp
neg
mov
sti
imul
mov
test
fstps
aad
pop
push
xor
ljmp
out
and
je
sti
pop
ror
dec
lcall
pop
clc
popf
jg
fisttpll
pop
mul
dec
aad
ror
pop
out
inc
leave
dec
cmp
jno
in
jne
aam
incl
push
add
jp
int
lret
inc
and
pop
or
and
push
aas
jo
mov
aam
test
add
mov
xchg
push
insb
js
gs
jg
adc
push
dec
dec
clc
cmp
fisubrs
rcr
neg
jle
out
jb
push
movsb
jb
outsb
orl
fs
push
fdivs
sub
push
out
inc
sbb
dec
jmp
insb
aam
stos
pop
jmp
push
push
sbb
pop
into
mov
or
fldl
arpl
jbe
in
dec
lds
rcr
jmp
mov
pop
or
cmc
dec
call
in
dec
aas
stos
jge
pop
aas
movsl
iret
jg
rolb
inc
inc
loope
lret
aam
adc
fistps
push
dec
xor
inc
icebp
sbbl
movsl
imul
xchg
sub
subb
fbstp
mov
push
and
mov
gs
imul
or
xor
aam
adc
dec
xlat
out
dec
movsl
test
fistps
and
aam
lds
enter
sbb
leave
fmull
gs
cltd
andb
push
int3
push
dec
jle
popa
push
jns
insb
push
sarl
pop
pop
push
cmp
xchg
sahf
repz
dec
add
push
testb
or
pop
mov
andl
subl
push
dec
jmp
pop
les
pusha
ljmp
mov
lret
adc
in
dec
mov
popa
mov
popa
jne
lahf
dec
pop
imul
mov
dec
lret
fsub
pop
cmp
jmp
repnz
data16
mov
aaa
push
into
leave
bound
int3
into
fcmovnu
mov
fdivl
jecxz
icebp
push
push
movsl
xabort
inc
pop
cmc
push
roll
rcrb
enter
lahf
jb
stos
in
outsl
roll
push
orl
mov
test
push
fadds
dec
iret
int3
and
lret
scas
decl
imul
les
clc
mov
rcl
push
pop
leave
clc
dec
test
js
dec
neg
clc
fwait
stos
push
fistpl
push
out
imul
sahf
ffree
scas
mov
bound
dec
push
test
push
pop
lret
fcomps
push
mov
addr16
push
pusha
in
pop
cld
gs
jge
pop
jge
jle
pop
sbb
out
push
pop
divl
scas
in
out
aam
movsl
pop
xchg
dec
push
mov
push
aad
test
imul
xchg
stos
enter
int3
shlb
xchg
out
in
loop
lret
out
and
lea
fidivs
dec
fdiv
mov
shl
mov
insb
gs
iret
jge
inc
into
rolb
add
flds
pop
xchg
mov
test
lret
test
xor
loopne
sahf
xor
icebp
push
fisttpl
jl
mov
inc
loopne
aad
xchg
aad
xor
icebp
adc
push
rcll
pop
cmp
dec
or
dec
faddl
jmp
push
lret
pop
or
pop
clc
sub
push
lds
pop
int3
fucompp
loopne
lret
lahf
fwait
imul
leave
movsl
xorl
mov
dec
int
inc
dec
cld
dec
inc
mov
push
rcr
insb
xor
add
mov
push
aam
sub
pop
out
mov
test
out
adc
push
dec
pop
adc
into
leave
pop
sar
dec
sarb
push
in
into
loop
cmc
fsubs
mov
pop
mov
fadd
cmp
inc
push
fstpl
adcl
scas
not
push
iret
loope
dec
pop
fstps
dec
out
dec
int
loop
push
sbb
fstl
out
aas
rorb
shl
cmp
pop
arpl
adc
fbld
rorb
jmp
xlat
bound
jmp
push
dec
mov
cmp
and
sub
xchg
not
fdivrl
push
dec
iret
lds
xchg
clc
sbb
pop
dec
add
popa
loopne
adc
xchg
cli
xor
xchg
and
jg
aam
dec
pop
movsl
dec
orl
rclw
inc
ficompl
sar
pusha
leave
jle
jmp
pop
xadd
aas
sub
testl
dec
fadd
fmull
pop
out
stos
xchg
fs
gs
loop
add
push
orl
jl
inc
jge
add
aad
movsl
jge
xlat
int3
pushl
xor
pop
xchg
adc
scas
out
lret
pop
lcall
pop
xlat
push
nop
jns
pusha
lret
xchg
nop
ljmp
jns
loope
fcoms
inc
dec
dec
push
cs
iret
mov
push
shr
enter
mov
add
push
pop
mov
js
or
fcoms
insb
push
cmp
or
les
inc
xchg
mov
ror
add
test
in
insl
lret
sbbb
push
popl
dec
es
mov
push
push
adc
xorb
push
xchg
out
or
rcl
popa
xor
push
jp
jl
jl
inc
xchg
cmp
into
sbb
push
fcmovbe
loopne
insb
loope
out
outsl
push
addr16
push
and
es
cmp
push
dec
test
jp
pop
jecxz
rcrb
rcr
shll
int3
iret
pop
daa
push
adc
cmp
pop
mov
or
inc
push
ljmp
pusha
test
in
pusha
sub
leave
and
insb
into
fsubp
add
sbb
pop
adc
int3
or
aas
lods
ds
add
in
pop
dec
push
daa
dec
mov
cwtl
sar
lret
dec
push
pop
xor
lods
gs
imul
push
pop
sbb
imul
xor
jne
xlat
dec
movsl
inc
mov
out
into
sbbb
xor
pop
scas
mov
mov
mov
mov
addb
push
pop
out
mov
sbbl
inc
xchg
xlat
cmp
jb
dec
decl
loope
fisttpll
or
pop
lret
test
jb
and
inc
fmull
loopne
add
in
lret
sub
es
inc
push
mov
gs
enter
xchg
add
out
sti
mov
fisttps
pop
shlb
sbb
test
cli
pop
dec
pop
inc
iret
movsl
gs
test
inc
mov
fcom
jbe
in
add
leave
dec
push
sbb
adc
fisubrs
add
mov
loopne
push
jp
dec
ljmp
sbb
ret
inc
rol
or
loope
pop
pop
dec
insb
in
lcall
lahf
pop
sarl
fcomp
fildl
inc
movsl
xchg
and
nop
pusha
inc
push
mov
and
aad
lret
dec
loopne
xor
fisttpl
dec
repz
popa
insb
fcmovnu
dec
fxch
inc
push
adc
enter
int3
lret
dec
mov
shll
xor
inc
lods
out
lods
mov
popa
mov
mov
push
inc
pop
leave
fcomps
mov
mov
mov
mov
pop
dec
ljmp
in
aad
ss
push
pop
xlat
xor
fadd
dec
fstl
add
sarl
pop
push
ret
mov
fs
jp
test
fst
imul
ljmpw
addl
pop
insb
fmul
out
aam
jmp
cmp
push
addl
addb
leave
decl
xor
popa
in
test
pop
pop
push
shll
nop
push
loope
popa
lret
inc
fistpl
fsub
call
dec
in
fcoms
pop
mov
dec
aad
jg
gs
lret
enter
aad
ret
pop
pop
in
push
pop
inc
pop
iret
loopne
push
addr16
leave
gs
xor
in
int3
out
mov
mov
cmp
mov
push
test
addr16
and
jle
push
inc
pop
fiadds
ficompl
mov
xchg
lret
aad
movsl
sahf
bound
rcll
iret
les
jae
dec
fimull
enter
loop
jne
in
into
xlat
mov
shl
add
jbe
dec
test
cmpsb
leave
cmp
pop
lods
pop
mov
mov
dec
pop
and
roll
out
ss
mov
mov
add
mov
cmp
mov
movl
andb
inc
iret
mov
fstl
scas
inc
nop
arpl
xchg
mov
inc
pop
jmp
rcr
pop
inc
daa
xchg
in
les
push
push
and
jbe
pop
flds
ds
fsubr
out
insb
fucomi
mov
icebp
aam
stos
pop
mov
imul
mov
enter
addr16
pop
shlb
loope
pop
iret
mov
addl
sbb
imul
cmp
loope
and
insb
jo
inc
sarb
dec
mov
fldt
ljmp
imul
stc
pop
inc
dec
test
jmp
outsl
addr16
mov
inc
pop
pop
insb
aad
cmp
dec
xlat
movsb
lods
fmull
mov
and
ljmp
lods
pop
pop
push
xchg
jne
pop
fadds
shlb
dec
mov
sbb
ljmp
fcmovbe
sbb
dec
xchg
aad
fidivrl
pop
pop
lret
mov
jno
xchg
je
lret
lds
imul
xchg
cld
mov
outsb
insb
xchg
push
call
aad
push
stos
movsl
lret
pop
fidivrl
jmp
inc
jmp
pop
std
dec
les
add
cmp
aad
out
push
mov
xchg
aad
dec
push
lods
das
push
jg
mov
filds
dec
pop
fidivl
cli
addr16
mov
lcall
cmp
mov
xchg
jb
push
sub
jmp
jle
pop
ds
cmp
dec
enter
mov
push
or
dec
jge
aam
xor
repnz
rcrb
pop
adcb
mov
ficompl
jnp
leave
add
push
and
add
add
les
pop
aad
push
mov
insb
push
icebp
rorb
ljmp
push
cmp
dec
mov
ss
mov
jl
push
dec
cmpl
iret
push
push
pushf
je
std
fldt
dec
out
push
rolb
in
fsubrl
xor
dec
and
popa
int3
int
fstp
or
inc
push
xchg
scas
loope
jmp
xchg
sub
xlat
cwtl
mov
push
xchg
aas
repnz
imul
fucomi
loop
fidivrs
aas
xlat
xor
dec
jp
shll
or
fldt
int
cmp
cmp
aad
aaa
sahf
repz
pop
pop
shlb
jmp
repnz
pop
dec
fsubr
mov
push
cwtl
int
adc
out
divl
mov
mov
clc
mov
mov
jl
inc
push
xchg
pop
lret
push
mov
inc
push
nop
fimuls
pop
int3
rcrb
popa
dec
pop
leave
gs
inc
mov
inc
insb
lret
aas
pop
jp
dec
push
and
pusha
ljmp
mov
push
and
rorb
inc
dec
push
scas
jno
imul
fildll
shll
fsubrs
dec
lret
mov
dec
repz
int
sub
jne
lcall
pusha
push
das
mov
or
mov
filds
les
sbb
lret
out
sub
inc
lods
lret
inc
inc
call
inc
adc
adc
lret
ffree
push
fucom
les
aad
out
out
lock
jecxz
dec
jl
fxch
adc
dec
push
push
cmp
inc
iret
push
add
add
adc
cmp
pop
inc
or
push
adc
in
mov
addr16
pop
push
into
xchg
fldl
dec
pusha
mov
fwait
jl,pt
mov
or
icebp
push
dec
jbe
imul
pusha
dec
fxch
loopne
aad
clc
jge
xorb
push
leave
add
dec
in
stos
push
mull
push
loopne
leave
push
out
ljmp
push
in
jle
fistps
fadds
ret
jle
movl
gs
inc
xor
dec
adc
lret
out
adc
addr16
cmpl
fcomps
pop
mov
out
dec
icebp
imul
adc
es
addl
dec
sub
loopne
inc
mov
out
push
jae
add
push
pop
adc
push
add
mov
out
mov
enter
aaa
xor
pop
mov
shrb
popa
push
push
pop
pop
sbb
xlat
gs
jle
dec
push
jmp
pop
dec
sar
loope
fcmovu
xor
lcall
adc
mov
or
pop
in
dec
aam
or
nop
mov
jecxz
loopne
push
inc
xchg
xchg
mov
dec
inc
pop
fcmovb
mov
out
mov
fcmovnb
dec
stc
pusha
pop
fisubs
jmp
push
inc
test
mov
cs
jp
iret
in
lcall
faddp
into
fcmovb
dec
nop
push
ss
jns
jno
orb
popa
fnstcw
in
lcall
enter
add
xchg
ret
lcall
dec
and
leave
pop
rol
pop
pop
push
gs
call
push
mov
dec
push
in
imul
cltd
js
pop
js
cmc
sbb
insl
inc
call
xchg
leave
dec
pusha
add
ficompl
insb
push
imul
jmp
jbe
neg
and
pop
fsts
call
jbe
add
enter
repnz
pop
jb
push
aad
jo
dec
xchg
rorb
in
fdivl
pop
mov
out
icebp
lret
movsl
mov
scas
iret
js
imul
pop
xor
clc
les
or
dec
aam
nop
in
mov
pusha
pop
sbb
pop
mov
sub
fisttps
and
fsub
int
push
int3
fisubs
inc
inc
inc
sub
cmp
mov
jge
dec
cmp
stos
mov
jmp
imul
push
adc
call
data16
popa
sbb
xchg
mov
adc
sbb
pop
fcoml
xchg
dec
iret
inc
popa
pop
ss
push
test
pop
gs
lea
in
pop
fsubr
inc
popf
pushf
dec
insb
ss
add
xchg
sbb
jge
push
push
out
cmp
dec
push
test
int
dec
out
push
js
dec
xor
xchg
push
mov
das
gs
arpl
pushf
mov
popa
pushf
inc
adc
add
ret
mov
stos
push
mov
ret
icebp
pop
fimull
test
lds
inc
pop
jmp
mov
and
or
subl
and
dec
aad
shll
push
mov
mov
pop
push
jg
dec
int
pop
mov
popa
xchg
dec
js
jne
inc
push
ficompl
inc
out
test
imul
iret
dec
cltd
fcompl
jmp
in
pop
fcom
fnstsw
mov
push
xor
xchg
push
fstpl
fstl
dec
test
mov
adc
shll
and
out
inc
lahf
mov
jbe
aad
dec
clc
push
ljmp
mov
pop
mov
iret
aad
lret
jg
out
imul
sahf
in
xchg
ret
dec
in
cwtd
pop
pop
leave
jg
aad
fdivl
or
adc
nop
and
mov
mov
loopne
dec
and
cmpl
mov
adc
loop
push
imul
enter
dec
aam
test
stos
jg
lret
inc
mov
in
fisubl
mov
les
adc
shll
cli
mov
loop
adcl
imulb
adc
jno
fisttps
ret
lds
dec
aad
pusha
notb
jl
dec
cmp
pop
jg
pusha
loope
lret
push
ficoml
push
into
add
insl
rcl
fldt
pop
ret
int
pop
aad
lret
movsl
int
dec
bound
outsb
aad
push
fimull
pop
in
inc
or
push
sub
call
mov
xchg
lret
int3
sub
fwait
pop
push
movsl
pop
negl
inc
xor
gs
enter
mov
sbb
pop
add
dec
enter
dec
in
pop
inc
shrl
push
icebp
ret
pop
sti
inc
pop
fimuls
dec
test
jge
in
push
jge
add
push
imul
loopne
pop
test
lret
dec
into
rorl
fnstsw
cwtl
lret
mov
roll
inc
mov
stc
int
fisubrl
xlat
ss
pop
or
test
out
pop
shl
xchg
enter
data16
stc
nop
aam
shll
pop
pop
jecxz
xlat
in
dec
mov
mov
push
pushaw
rorl
inc
pop
pop
cld
lds
lret
push
popa
enter
fcoms
pop
fcmovne
ds
pop
mov
into
fcmovbe
rorb
rorl
frstor
add
fldcw
mov
inc
pop
in
aad
lret
adc
dec
stos
aas
ret
stos
rclb
and
loop
test
enter
jge
pop
addr16
lret
ja
push
push
stos
ljmp
lods
xor
test
fidivs
mov
lret
xchg
mov
fcompp
mov
jmp
pop
mov
mov
adc
faddl
inc
shlb
inc
dec
jb
and
jo
fisttpll
mov
ljmp
fcomip
dec
pop
cmp
xchg
int3
dec
add
fisubs
das
mov
inc
push
pusha
jg
int
mov
arpl
ret
pop
pop
push
inc
fnstcw
cwtl
popf
pop
enter
inc
pop
test
imul
cmp
pop
dec
out
mov
add
pop
vrsqrtss
xchg
dec
enter
lds
jmp
fxch
mov
mov
fucomip
ficoms
push
hlt
pop
dec
fs
lret
out
icebp
jl
or
mov
mov
popa
insb
les
stos
out
jnp
fstpl
fistpl
test
into
insb
into
je
fmul
mov
ss
test
dec
out
jmp
dec
gs
shrl
imul
orb
call
pop
add
or
mov
shll
lret
in
pop
fidivl
dec
lea
test
dec
lret
pop
mulb
cli
jp
pop
insb
or
xchg
mov
fs
test
jl
in
insb
leave
jmp
xchg
pop
lret
dec
lret
inc
imul
jb
iret
mov
mov
addr16
not
lds
rcl
lahf
inc
test
fisubl
sub
or
pop
popa
arpl
push
pop
pop
imul
out
pop
pop
aad
les
or
mov
addr16
push
mov
cmp
mov
inc
leavew
push
call
ds
or
mov
inc
mov
addr16
pop
imul
push
or
test
inc
dec
fimull
pop
pushf
lcall
pop
push
add
xchg
fcom
inc
popf
add
lahf
test
cwtl
dec
cmp
shll
fistpl
mov
stos
movsl
out
out
mov
out
in
mov
int3
fisubl
mov
jp
dec
jp
sub
add
aad
fsubr
out
pushf
arpl
pop
push
push
cli
jbe
loope
enter
or
lret
and
sub
cmp
pop
dec
inc
dec
pop
ret
int
frndint
fistpl
fadds
clc
insb
add
push
dec
ficoms
pop
iret
inc
mov
xchg
mov
loopne
xor
das
push
inc
sub
xchg
aam
cwtl
fsubrs
lret
push
out
pop
lret
mov
push
enter
leave
movsl
scas
out
cli
push
inc
add
inc
mov
ret
in
iret
fisubrs
lea
aad
fisubrl
out
jae
fistps
dec
jle
pop
scas
dec
pop
cmc
jae
add
inc
push
pop
mov
cmp
push
mov
mov
rclb
mov
insl
inc
ja
dec
dec
inc
les
fsub
push
xchg
insl
push
popf
dec
inc
pop
nop
aad
test
loopne
cmp
cld
loope
jae
ret
jmp
mov
fsubrl
ss
sub
daa
push
in
enter
repz
pop
xlat
andb
mov
mov
mov
dec
fidivrl
scas
sbb
cmp
dec
out
push
push
repnz
subl
fbstp
fptan
lds
lret
sti
ds
test
dec
xchg
xor
lret
pusha
dec
jne
gs
push
push
rorl
vpminub
test
test
rcrb
add
sbb
and
push
ds
adc
out
leave
dec
mov
pop
aam
xchg
hlt
outsb
loopne
pusha
fwait
mov
push
dec
inc
or
icebp
push
dec
jmp
mov
les
adc
pop
adcb
aam
pop
aas
sbb
or
add
mov
jge
rolb
dec
push
fistps
push
imul
shll
pop
dec
add
enter
pop
jb
dec
jge
into
jl
push
cmp
push
ds
clc
dec
iret
mov
addr16
sbb
ds
or
lret
jp
fbld
sar
shll
dec
pusha
push
imul
lret
bound
or
or
dec
out
repnz
fs
pusha
insb
adc
lret
pushf
dec
shl
push
rclb
inc
and
imul
je
pop
jmp
not
popf
fldt
inc
neg
pop
dec
mov
out
push
in
jbe
fmuls
jmp
fstl
fstpt
aam
mov
shll
mov
sahf
daa
fsubl
fidivl
addr16
in
inc
mov
fmulp
mov
push
bnd
pop
leave
dec
ficomps
mov
push
lret
scas
dec
je
fdiv
jl
call
and
notb
mov
popa
xor
inc
lods
int
pop
data16
fistpl
fstl
jo
dec
jg
loopne
sar
popa
mov
leave
lcall
aad
xchg
fstps
popa
stos
lret
lods
mov
dec
mov
pop
pop
adc
enter
aam
shll
lret
loopne
aad
mov
cmp
add
test
fcmovbe
xor
popa
inc
jge
xlat
push
sti
fisubs
push
dec
cli
pop
fiadds
push
addr16
mov
push
dec
aam
inc
rolb
mov
into
out
lret
fldl
add
lret
in
es
and
pop
scas
mov
jmp
jae
mov
test
test
xlat
adc
test
dec
jl
dec
jmp
fdiv
aas
mov
pop
dec
cs
push
dec
out
repz
mov
add
inc
dec
int3
int
out
pop
gs
push
addb
clc
xor
push
dec
cli
ret
push
push
rcrb
jle
dec
push
in
insb
jmp
inc
leave
iret
adc
pop
mov
hlt
call
addr16
test
or
fldenv
jmp
jmp
pop
and
scas
enter
pop
jg
pop
ds
pop
adc
and
imul
or
popa
jg
jno
adc
push
test
fucomi
ror
test
mov
cmpsb
jmp
ret
out
fsubrs
enter
addr16
xor
jbe
movsb
hlt
jmp
pushf
or
sub
popa
jae
jbe
not
insb
imul
pusha
push
push
inc
pop
jge
inc
rolb
push
aam
iret
pop
call
sub
xor
popf
fisttps
fsubl
fistpl
or
sub
jae
inc
loopne
pop
enter
jecxz
aam
shlb
pusha
mov
loope
pop
fisubl
inc
mov
rcrl
mov
push
ret
outsw
sbbb
rcrl
xchg
xor
dec
mov
lahf
loop
dec
mov
inc
mov
mov
and
xor
dec
cltd
nop
inc
imul
and
daa
shl
enter
dec
mov
push
out
adc
aas
enter
iret
xchg
cmp
insb
popa
jbe
flds
pop
ror
pop
jecxz
sti
imul
arpl
inc
xor
mull
push
lret
mov
test
mov
add
pop
rorl
shll
scas
call
jp
in
clc
daa
mov
pop
dec
cmp
int
out
int3
data16
push
ss
test
dec
ret
out
pop
insb
jl
int
ja
lea
movsb
out
out
bound
outsb
xchg
rolb
lods
mov
xchg
and
loope
ss
inc
cwtl
cld
ja
mov
stc
jno
jl
inc
adc
push
pop
xchg
mov
fdiv
int
dec
jmp
cmc
dec
push
pop
mov
fdivrp
mov
movsl
xchg
pop
ret
push
fmul
and
iret
lret
in
xchg
leave
test
lret
jecxz
xor
rcrb
call
xchg
orl
addr16
ficoms
cmp
in
sub
ss
into
into
dec
incl
ffree
pop
test
out
filds
xlat
jmp
jge
enter
iret
pusha
lret
fcmovne
test
popa
jno
sub
test
test
or
add
pushf
pop
rcl
enter
mov
int3
pop
mov
rorl
lret
into
stc
lret
push
rcr
ret
pop
int3
inc
pusha
jl
pop
push
call
mov
add
sub
int
push
lret
data16
xchg
mov
test
add
xlat
push
lret
cld
lahf
out
jge
imul
add
lret
fsubrs
mulb
fisttpll
cmc
dec
in
fisttpll
aad
ret
xchg
push
gs
cli
icebp
push
add
and
enter
out
dec
or
push
fcmovb
xchg
jmp
pusha
out
xchg
clc
cli
and
leave
cli
vminps
jp
in
mov
addr16
shrl
pop
push
dec
int
dec
add
rorl
insb
or
inc
mov
fcompp
dec
sub
out
pop
jo
loopne
leave
inc
cli
xchg
mov
leave
rcr
fst
mov
lret
add
mov
loope
lret
dec
ss
lock
fcompl
cmpsl
jg
jge
int3
cltd
add
push
xlat
jbe
or
mov
push
int
test
dec
stc
in
pop
pop
ds
adc
mov
call
pop
pusha
aad
add
sarl
dec
adc
dec
loopne
dec
fldenv
fsub
adc
cmpsl
xlat
mov
add
fcoms
push
fldl
dec
inc
pop
jmp
push
int3
dec
fildl
pop
lods
fmul
outsb
lret
aad
in
rorl
ljmp
and
jg
enter
addr16
fs
mov
dec
pop
shlb
rolb
ficompl
lret
push
aad
out
call
das
rorl
dec
mov
and
enter
push
clc
mov
inc
push
pop
rclb
ficompl
int3
into
mov
imul
mov
xor
dec
cwtl
mov
cmpsb
xchg
dec
into
in
enter
mov
push
pop
nop
in
repnz
pop
push
pop
popa
push
bound
adc
push
aad
add
push
pop
movd
dec
inc
and
jmp
push
xlat
jae
mov
outsb
out
mov
push
pop
pop
jge
imul
sub
fdiv
xchg
out
push
enter
pop
aam
ds
jmp
inc
mov
test
adc
mov
push
mov
lret
fucomi
sub
add
pusha
mov
mov
push
cli
in
add
push
jmp
pop
jbe
lret
outsb
dec
shlb
call
decl
out
popa
test
jmp
dec
sar
push
push
jb
pop
pop
push
divl
fs
xchg
adc
loopne
loope
enter
into
or
dec
insl
out
push
or
pop
push
gs
ss
roll
fsubs
ret
mov
sti
lds
mov
and
dec
fisubl
inc
into
lds
sub
xor
xorl
jmp
push
push
lock
fsubrl
fcmovnb
add
rolb
push
data16
notl
aad
iret
inc
fadds
int
fwait
push
out
lret
cltd
rcrl
enter
push
les
in
cmp
pop
fndisi(8087
push
addr16
push
vpminsw
adc
mov
shlb
repz
fldenv
loopne
inc
ret
les
call
out
xor
pop
ret
add
push
fnstsw
in
or
xchg
notb
aad
xor
jmp
xor
wbinvd
cmpsl
loop
das
or
fisubl
jno
enter
push
aad
clc
pop
fmul
js
jle
imul
fldz
popf
out
hlt
popa
shll
push
jmp
addr16
sub
test
xchg
xchg
leave
or
adc
dec
dec
dec
mov
push
aam
out
int
push
cmpsb
push
jge
fadd
sbb
xlat
xor
leave
xor
ss
cmp
lahf
cmp
movsl
enter
add
mov
dec
add
int3
dec
movsl
lahf
pop
dec
call
xchg
pop
dec
mov
inc
loopne
push
clc
iret
fistpl
lcall
inc
inc
mov
and
mov
cmp
mov
push
mov
fs
mov
jecxz
fisubrs
gs
popf
mov
repnz
mov
fmul
push
aad
ljmp
cmp
ficompl
and
mov
mov
fildl
imul
xchg
scas
push
sahf
lea
cltd
mov
lret
ss
jne
cli
pop
push
jecxz
or
out
mov
int
js
int3
pop
scas
test
and
shlb
pop
imul
mov
cmp
orb
pop
out
divl
leave
jns
mov
dec
stos
clc
push
xchg
mov
imul
dec
push
aaa
incl
lahf
fistpll
dec
pop
lds
cltd
fsub
add
fisubrs
scas
jle
inc
inc
iret
gs
icebp
rolb
jmp
ffree
pop
dec
lea
aaa
xchg
inc
mov
cmp
pop
ror
es
push
jmp
fimull
fistpll
pop
enter
aad
or
push
test
loopne
movb
lcall
jle
pop
movsl
in
jl
lret
cmp
sbb
push
xor
imul
addr16
rolb
js
inc
rolb
push
fsubs
push
call
sahf
aad
mov
jbe
loopne
cli
inc
into
cmpsb
adc
adc
dec
jg
lretw
mov
fs
dec
and
fisttpl
enter
lret
inc
imul
cs
fcmovnbe
shrl
addr16
ds
mov
xor
sub
dec
clc
push
iret
lret
jge
fiaddl
out
push
ja
mov
jmp
imul
test
out
inc
push
icebp
or
sbb
stos
aad
aad
aaa
mov
xchg
jmp
lret
adcb
cmp
dec
and
cmp
loopne
and
fadd
out
inc
leave
dec
push
pop
lcall
pop
mov
stos
and
jg
mov
and
mov
out
iret
push
outsl
xchg
sub
jo
int
pusha
testl
ficompl
jl
int3
adc
cld
fstpl
push
add
pusha
fisubrl
lea
lret
fs
aad
add
dec
xchg
in
jl
dec
jge
cltd
mov
fcomp
lret
test
push
test
stos
movl
int3
add
addr16
pop
push
popa
pop
dec
dec
xchg
push
imul
test
int3
push
dec
lret
dec
push
adc
leave
lret
mov
rolb
mov
pop
cmp
into
scas
out
adc
push
or
pop
popa
cmp
sbb
ret
ss
popa
inc
gs
jle
call
icebp
imul
push
ljmp
out
inc
push
dec
jmp
cltd
lods
js
dec
fiadds
push
fmull
in
jle
mov
repz
and
pop
mov
out
loop
in
fdivs
dec
pop
jmp
clc
inc
mov
les
fincstp
add
xlat
iret
es
out
xlat
inc
jle
xchg
mov
fmul
jp
lret
push
xchg
outsl
enter
test
lret
clc
loopne
xor
add
fimuls
imul
xchg
xchg
in
int
shl
pop
sbb
into
rcll
mov
loope
iret
fadd
int
roll
inc
movsl
jecxz
aad
dec
into
loopne
jmp
dec
push
mov
pop
fucomip
pop
pusha
test
int
pop
test
out
repz
pop
dec
jmp
jle
aam
sbb
dec
fs
imul
not
jmp
jno
lds
dec
push
adcb
dec
stos
test
jbe
add
fadd
lret
mov
dec
fistps
pop
in
out
stos
mov
pop
dec
aaa
ficoml
mov
or
fists
inc
aam
icebp
mov
gs
mov
imul
addr16
push
inc
adc
outsb
rclb
inc
mov
les
mov
iret
aam
push
mov
xlat
fstp
inc
dec
test
test
imul
adcl
xchg
sub
adc
loopne
js
jle
inc
cmp
pushfw
fisttps
movb
outsl
ret
push
mov
inc
pop
enter
mov
out
xchg
iret
imul
dec
add
scas
xlat
lret
mov
into
jmp
mov
call
int
dec
jae
dec
lret
movsb
sbb
ffree
pop
icebp
push
mov
and
dec
ds
push
dec
mov
jns
lret
leave
sahf
xor
cmp
lret
pop
imul
ficomps
ret
add
jle
push
addr16
dec
push
xor
gs
mov
push
inc
mov
jle
dec
out
push
jne
sub
push
lcall
not
mov
cmp
addr16
xchg
aad
aam
fs
mov
les
rcr
pop
pop
aad
std
mov
aam
mov
adc
sbb
clc
xchg
mov
cmp
pushw
xor
pushf
imul
leave
loopne
test
ljmp
idivb
xlat
movl
addr16
push
jge
cmp
jg
dec
sub
mov
sub
adc
fsubp
mov
lret
pop
iret
mov
sarb
nop
xchg
rcrb
sbbl
adc
sbbb
jmp
pop
xlat
push
pop
pop
mov
fs
fwait
push
arpl
fadd
mov
jbe
popf
push
out
push
mov
lds
fstl
fsts
add
xor
inc
inc
shrl
out
pop
pop
cli
cmc
pop
jp
popa
xor
jmp
scas
dec
xchg
bound
inc
pop
movsl
sbb
push
imul
mov
leave
enter
loop
jb
fstps
jmp
out
and
xlat
pop
loopne
xor
pop
orl
pushw
movsb
push
inc
roll
out
aam
cmp
addr16
insb
popf
mov
pop
pop
addb
rcr
leave
or
jbe
clc
cmp
push
inc
out
jne
xchg
ret
jmp
add
mov
inc
mov
insb
ret
pop
jmp
fdivrl
test
cmc
pop
jmp
rcrb
repnz
fildll
fmul
call
rol
jg
lret
aas
cli
shl
lret
cwtl
dec
rorb
inc
inc
xchg
fildl
in
fsubrl
insb
gs
test
out
mov
iret
test
jmp
imul
add
lret
pop
inc
fmulp
dec
add
fcmovbe
popa
inc
pop
pop
xor
mov
inc
pop
lret
mulb
repz
adc
gs
sub
cmp
xchg
outsl
dec
pop
add
fadd
xchg
push
dec
push
push
cmpsb
push
inc
xchg
aam
xor
sbb
jg
addr16
fmull
mov
loopne
push
test
loopne
inc
adc
push
int3
out
lret
fucom
inc
xchg
jecxz
lret
loop
add
call
and
out
jl
dec
rclb
ficomps
loopne
pop
fidivs
jp
dec
mov
jb
push
jbe
pop
fnstsw
loopne
ror
xor
push
xor
pop
loopne
fcoml
popf
es
jmp
rorb
insb
mov
popf
in
xlat
pop
dec
lea
dec
out
push
jg
lret
and
inc
ss
cmp
fstpl
jae
push
xchg
adc
fsubr
nop
xchg
dec
movsl
mov
push
clc
les
jle
test
or
mov
leave
out
push
iret
xor
pop
test
adc
pop
idivb
repz
sbb
clc
push
out
inc
cmp
mov
les
inc
lods
adc
push
push
add
out
roll
es
fcmovnu
pop
ficoml
les
add
jmp
and
fldenv
pop
dec
test
dec
push
lock
lahf
push
xchg
andb
jmp
jno
lret
fistl
out
pop
sar
imul
in
sub
inc
test
test
pop
js
dec
jl
pop
rcrl
aaa
xchg
pusha
push
rcrl
jb
push
ret
fwait
or
test
shrl
bound
add
push
dec
loope
inc
popa
outsl
push
pop
aam
add
adc
pop
ss
call
lret
flds
out
and
push
imul
enter
pop
movsl
add
pop
shlb
out
int3
pop
data16
jle
push
int
call
fcomps
inc
out
out
jl
in
addl
loopne
aam
pushl
out
add
out
addr16
rcll
lds
test
pop
stc
mov
jne
push
add
mov
cmp
push
dec
cwtl
jge
ficoml
out
stc
cmpsl
sbb
out
mov
cmp
icebp
stos
addr16
mov
xchg
pop
and
into
push
jge
jl
dec
repz
fucomp
mov
sbbl
dec
movsb
add
into
rorl
mov
lret
push
dec
iret
int
mov
andl
or
leave
xchg
push
out
idiv
pusha
dec
lret
fidivl
aaa
rorb
jl
rclb
sbb
jo
dec
jmp
leave
enter
pop
ss
add
loopnew
xchg
sbb
outsl
out
mov
lret
mov
xlat
lret
jmp
push
or
pop
out
pop
iret
popa
int3
fdivr
loopne
fst
aam
out
lret
enter
push
lret
movsl
push
jl
fcmovu
mov
inc
mull
dec
mov
insb
adc
call
dec
pop
mov
out
pop
loop
mov
fistps
pusha
mov
mov
add
cmp
ficompl
xchg
xchg
rcl
leave
pop
dec
jmp
aad
data16
push
mov
inc
bound
sbb
test
push
dec
inc
push
in
insb
idivl
sbb
or
in
xor
xchg
test
dec
lods
add
pusha
lds
loopne
xchg
fmull
sbb
call
inc
ret
jmp
push
cmpsb
movsw
gs
lret
addr16
push
pop
sub
jno
push
test
adc
aam
roll
pop
imul
dec
xchg
mov
pop
jno
mov
out
or
jno
fistpll
stos
adc
fcom
sbb
or
dec
rolb
push
jmp
jl
dec
cltd
ret
inc
xlat
pop
pop
aas
add
dec
loope
push
sbbl
leave
push
push
gs
shlb
push
mov
and
daa
xchg
jp
jecxz
test
aam
sbb
jmp
inc
fisttpll
imul
xchg
lds
mov
out
inc
cli
push
lret
arpl
cmpsb
dec
dec
js
out
xor
adc
and
into
fbstp
xor
daa
jnp
mov
mov
idivl
cs
lds
inc
dec
push
test
fnsave
aam
ret
ror
dec
rcl
enter
repz
and
lret
dec
sub
neg
cli
dec
mov
imul
dec
inc
aam
cwtl
push
loopne
loopne
adc
fsubl
dec
push
jle
pop
call
sub
pop
pop
inc
rol
icebp
aam
add
push
and
adc
jno
mov
stos
call
dec
cli
mov
leave
ret
out
dec
mov
fdivs
inc
mov
out
sti
jns
fildl
push
dec
nop
je
cli
push
mov
clc
scas
jle
pop
pop
gs
mov
jle
call
or
mov
call
dec
mov
ffree
cld
mul
pop
aam
scas
xlat
loopne
cwtl
repnz
into
mov
xor
pusha
int3
pusha
push
jp
loop
cmp
test
fists
aam
inc
faddp
pop
fnstcw
dec
out
lret
xchg
call
fadd
imul
push
addr16
enter
dec
pop
out
sbb
gs
iret
pop
dec
rorl
int
or
fildl
out
pop
or
dec
jge
jne
leave
jp
iret
fcmovnu
scas
jo
ret
pop
lea
lds
pop
loopne
fsub
xchg
push
rcrb
sub
jno
jno
filds
jmp
jl
fsubp
imul
push
pop
out
xchg
aam
roll
inc
push
push
insl
andb
loopne
out
frstor
push
into
fisttpll
rol
and
dec
in
xorb
jbe
fisttpll
loopne
fstps
dec
loope
enter
dec
push
pop
lahf
repz
pop
sbb
fcompl
cmp
mov
sbb
rol
in
push
loopne
ror
out
pop
out
leave
ljmp
std
popa
inc
mov
aad
enter
jb
xor
int
gs
pop
out
pop
xchg
sbb
adc
imul
les
test
pop
or
insb
and
pop
jmp
xchg
fstp
xor
rolb
inc
dec
bound
push
repnz
and
push
aas
xchg
inc
cli
xchg
int3
dec
shlb
push
pop
loopne
cmpsb
pop
in
les
dec
dec
dec
int3
or
rclb
mov
push
jmp
pop
jmp
cmpsl
out
jle
dec
out
nop
fucom
mov
ficompl
loopne
loopne
push
jge
jge
jle
pusha
call
fldt
and
xchg
addr16
iret
imul
data16
and
cmc
and
pop
push
jge
addb
and
cld
stc
popa
jb
lret
ljmp
mov
and
mov
leave
jmp
iret
fstps
inc
push
fimuls
fcmove
fbstp
mov
popa
lret
push
js
or
ds
push
pop
mov
inc
push
insb
clc
loopne
loopne
xchg
mov
out
int3
adcl
jmp
les
mov
fldenv
lret
leave
mov
fiaddl
mov
negb
jmp
test
inc
jg
rol
mov
test
shr
mov
xlat
lret
popf
pop
dec
dec
ror
inc
ret
fxch
nop
mov
fiaddl
add
dec
flds
dec
adc
mov
popa
add
push
cmp
mov
fs
push
test
jg
rcrl
mov
aam
sbb
nop
fisubrs
iret
mov
cmpsl
lahf
in
cmc
xchg
dec
enter
mov
sbb
data16
je
aad
inc
dec
xchg
rorb
lds
sbb
leave
out
call
inc
or
xor
sbb
adc
shr
fstp
push
jmp
int3
cmpsl
js
scas
stc
inc
jbe
push
loopne
and
mov
mov
aam
dec
insb
pop
pop
pop
pusha
push
inc
push
pop
popf
dec
loopne
and
fcomi
sub
cmp
sbb
movsl
popa
out
addr16
aas
jle
pop
push
xchg
push
ss
mov
test
push
movsl
gs
fisttps
and
push
pop
xchg
aas
aad
fiadds
pop
ljmp
mov
test
xchg
mov
add
xchg
and
inc
push
hlt
dec
dec
lret
xchg
fnsave
lret
shr
shlb
sbb
xor
push
aad
iret
pusha
lcall
jmp
mov
call
ficoms
fsubrs
dec
cli
pop
pop
lret
dec
in
fcmovbe
add
fcmovnbe
or
jno
mov
jp
dec
shl
pop
push
lds
push
popl
fcmove
ret
into
push
testb
fildll
cs
test
stos
call
dec
inc
xor
add
leave
nop
addr16
mov
xchg
clc
xlat
xchg
xchg
push
jecxz
in
out
call
xchg
addb
pop
push
mov
std
pusha
and
add
leave
dec
test
add
mov
rcrl
jae
inc
addr16
push
enter
loopne
mov
ss
shrl
fistps
lret
data16
fldt
imul
aas
cli
lret
and
xchg
addr16
inc
rorb
movsl
in
test
pop
or
in
fdivs
pop
pop
mov
mov
dec
inc
pop
fisttpl
add
push
adcl
icebp
and
fstps
pop
pop
xor
xor
rorl
jmp
aam
pop
lcall
push
mov
stos
cmp
jmp
add
mov
add
mov
pop
js
ljmp
fistps
fadd
push
dec
loope
into
shl
fsub
jmp
push
not
adc
jge
add
mov
divl
stc
dec
mov
ja
pop
adcl
sub
adc
pop
dec
mov
mov
outsb
fstl
jge
add
push
add
in
fildll
inc
cli
out
dec
addr16
adc
cwtl
fneni(8087
hlt
mov
mov
ds
mov
lds
icebp
out
add
flds
bound
adc
cltd
in
rorl
arpl
scas
pop
insb
repnz
mov
xor
fldcw
pop
push
jno
sar
dec
dec
insb
fxch
push
icebp
dec
rcll
addr16
loop
sahf
js
test
pusha
mov
push
imul
out
mov
iret
ror
and
fldl
jne
xlat
mov
jmp
cmpsb
jmp
jmp
call
scas
mov
dec
pop
int3
aad
dec
scas
mov
fcmove
lret
cli
jmp
xlat
inc
ss
mov
mov
adc
jmp
add
nop
popa
nop
inc
jp
cmp
and
pop
push
inc
inc
jmp
lret
push
pop
mov
lds
cld
leave
push
fdivl
outsl
nop
stc
push
jp
dec
dec
repnz
mov
sar
int
push
push
mov
shlb
jl
out
or
push
adc
xchg
into
mov
xor
push
jge
pop
jl
fsts
pop
push
mov
pop
fsubrp
xchg
imul
mov
loop
adc
mov
jne
shr
jp
dec
enter
addr16
mov
stc
dec
or
sbb
sbb
popf
pop
dec
loopne
out
rcrb
gs
pop
mov
push
test
xor
and
fistpll
inc
push
lds
ret
data16
gs
mov
xor
pop
jl
fld
dec
xchg
dec
pop
push
inc
push
js
rol
stc
les
fnstsw
cmc
cli
into
push
loopne
pop
int
shl
popa
jmp
jl
fnstsw
out
dec
inc
or
dec
and
inc
insb
or
push
pop
inc
mov
loop
jmp
push
push
cmc
loope
dec
inc
loopne
pusha
push
insb
pushf
sub
jle
fcmovb
ror
int
sub
add
flds
push
adc
push
jg
fiaddl
call
mov
fildl
mov
ds
loopne
pop
and
cltd
dec
fst
pop
cld
cld
jmp
add
int
loopne
cld
mov
fidivl
fdivs
push
rcll
inc
lds
push
pop
jae
rcr
out
aad
ss
or
lds
call
clc
sub
pop
mov
stc
dec
enter
dec
rclb
sub
inc
adc
fmuls
loopne
dec
cmp
jmp
sbb
push
mov
pushw
out
fmul
hlt
fstps
mov
push
test
cmp
call
mov
fmul
notb
inc
add
mov
shlb
pop
lock
pop
loop
inc
dec
jg
rorb
or
jecxz
outsb
into
aad
les
movsl
sub
pop
subl
aam
cltd
leave
lds
movb
mov
fcmovnu
aam
mov
call
dec
mov
mov
mov
movsb
add
mov
inc
dec
push
or
icebp
adc
lods
cld
push
push
pop
mov
pop
cli
jg
pop
jle
jo
fsubrl
jo
gs
and
out
int3
mov
inc
mov
add
add
dec
add
in
mov
pop
aam
mov
jnp
fstp
pop
fidivrl
jno
dec
lds
arpl
data16
lcall
dec
xchg
cmpsl
imul
rcrb
cmp
dec
adc
addl
cmp
mov
scas
out
icebp
pop
aaa
inc
int
sti
add
pop
enter
fcomps
stos
mov
test
iret
arpl
pop
mov
mov
jge
lds
lret
pop
and
dec
gs
sbb
enter
mov
inc
leave
ret
pop
int
stc
push
push
jle
dec
popa
shlb
pop
jno
gs
les
sahf
and
iret
call
sarl
aad
enter
xor
dec
out
mov
clc
loope
dec
pop
inc
clc
push
pop
pop
jl
in
adc
add
test
addr16
mov
out
mov
es
pop
mov
out
fldl
and
stos
repz
pop
push
cmp
xchg
sahf
icebp
mov
aam
ficomps
ffreep
jl
jl
int
dec
xchg
int
cltd
and
in
cwtl
int3
add
dec
dec
into
gs
add
pop
mul
imul
sbb
push
dec
js
subl
jae
into
cmpsl
icebp
xchg
push
push
lahf
dec
dec
mov
dec
jle
loopne
ja
lahf
jg
mov
jp
jb
cmp
in
ret
loope
ficomps
sbb
mov
ljmp
decl
shlb
push
mov
inc
leave
xchg
vphaddwd
adc
insb
out
or
jno
lcall
es
cmpsl
mov
adc
fidivrl
aaa
mov
loope
sar
out
push
iret
push
mov
test
stos
shl
in
lret
arpl
and
xchg
stos
cmp
pop
pop
int3
test
lods
inc
jbe
gs
mov
leave
and
lahf
int
loop
mov
leave
aam
out
mov
lret
push
insb
gs
sbb
pop
xchg
xchg
out
push
dec
xor
xlat
test
dec
in
shlb
dec
movl
pop
mov
les
test
test
dec
movl
inc
xor
iret
ret
push
div
cmp
fadds
in
add
loopne
test
enter
dec
cld
in
imul
pushf
cmp
sub
int
aaa
fnstenv
out
push
push
add
into
pop
push
fists
adc
mov
bound
jge
gs
xor
call
mov
addr16
stos
xor
pop
leave
insb
jmp
iret
das
fstpl
push
add
int
and
shll
dec
aaa
test
shr
dec
push
mov
mov
mov
xor
iret
jge
push
and
pop
mov
pop
std
nop
loopew
inc
sbb
and
xchg
in
mov
dec
popa
dec
out
xchg
iret
fsubr
fimull
rcrb
xchg
mov
dec
fldenv
jmp
sub
fildl
inc
dec
inc
fsubp
faddl
aad
add
dec
fdiv
adc
push
cmp
loop
aas
cli
fisttps
out
fs
scas
repnz
push
mov
push
int3
push
cmp
imul
fidivl
pop
fstps
jns
in
enter
add
dec
out
pop
addr16
clc
mov
fisttpll
and
into
inc
push
xchg
mov
iret
in
aad
xor
cmc
add
mov
aaa
lods
mov
mov
or
enter
insb
out
int
enter
test
mov
inc
movsl
xor
jbe
mov
jl
loopne
int3
ret
stc
outsl
mov
into
dec
push
adcl
xchg
inc
shlb
pop
push
enter
mov
mov
pop
clc
cli
add
lret
inc
xlat
push
push
push
jno
in
les
imul
out
or
ror
fsubl
sti
push
fists
incb
xchg
pop
pop
mov
or
jno
rcll
cli
insb
xlat
push
les
dec
push
pop
jmp
dec
jge
dec
pop
into
mov
mov
arpl
mull
push
decl
iret
pop
pop
leave
jmp
sti
loopne
aad
or
frstor
sahf
out
fisubl
add
insb
iret
pop
fcmovnb
int
fmull
fs
out
imul
js
lds
push
dec
dec
test
mov
mov
mov
ffree
mov
push
out
lret
mov
xchg
push
int3
stos
loopne
roll
mov
lret
inc
jo
inc
loop
out
fiadds
fcom
mov
lea
pusha
stos
les
lods
add
push
xor
shr
jle
fadds
jmp
lret
lds
pop
mov
enter
cmp
test
pop
or
push
dec
dec
or
jmp
div
lds
hlt
aad
cwtl
push
xchg
inc
lret
dec
pop
push
into
dec
jge
aas
nop
push
sahf
push
add
mov
stc
into
cs
aad
mov
insb
jnp
pusha
lret
movsb
rcr
fcoms
faddl
dec
int3
cmc
icebp
rol
jbe
dec
int
addr16
arpl
jge
faddp
leave
cmpl
xlat
sbb
dec
cli
loop
ja
adc
aad
cmpsl
stos
stc
xchg
cwtl
aad
jb
dec
jb
stos
push
inc
mov
test
lods
shrb
leave
mov
gs
icebp
loop
test
cmp
testb
push
aad
sahf
sub
into
and
jge
pop
cli
mov
pop
lahf
mov
push
call
popa
aam
jge
cmp
xchg
enter
insb
cs
rcrl
loop
les
out
pop
mov
push
lcall
lods
sarb
pusha
int3
jge
popa
pop
pop
cmp
and
mov
loopne
dec
pop
jmp
neg
stc
fnstenv
adcb
leave
fbld
pop
mov
int3
and
dec
popa
fisubrs
rorb
mov
mov
push
cli
aam
fistpl
faddl
mov
pop
insb
cmp
mov
jnp
fcomps
inc
popa
pop
xlat
and
lret
fsubrp
push
push
inc
jp
dec
dec
inc
sbb
roll
push
jbe
pop
dec
js
jl
pop
cli
xor
leave
fisttpll
or
int3
jmp
stos
fwait
mov
pop
out
notb
cmp
call
and
xor
ds
inc
mov
dec
rolb
in
cli
enter
imul
neg
js
popa
aam
pop
dec
popa
dec
inc
push
out
imul
shlb
int
xor
pop
test
fldl
mov
ret
dec
out
iret
enter
jbe
lods
jg
dec
imul
mov
mov
jp
pop
xchg
pushf
push
mov
fistl
addr16
ret
push
push
adc
cmp
aas
sbbb
rorl
pop
sub
mov
je
jne
xor
pop
mov
leave
adc
jbe
dec
aas
mov
cli
imul
gs
push
dec
adc
adc
lret
shrb
fiaddl
rorl
inc
pop
sbb
popa
push
ror
push
jmp
iret
out
xchg
repnz
in
test
addl
pop
incb
dec
push
jmp
aam
icebp
mov
jmp
push
aad
aad
jne
movl
cmp
pop
movl
loopne
add
push
push
xchg
out
dec
mov
jle
lock
mov
sbb
test
sahf
cmp
dec
fnstsw
push
sbb
dec
lret
jmp
pop
xchg
inc
loop
push
push
mov
push
dec
mov
call
ss
ficomps
mov
add
roll
dec
xchg
dec
dec
aad
dec
popa
enter
pop
mov
fsubr
mov
fdivs
lds
pop
sti
inc
imul
push
inc
aam
out
fsubs
aad
out
ljmp
rcr
mov
call
and
push
lret
push
roll
out
push
test
popa
xlat
pop
test
out
stc
repz
lret
adc
shrl
inc
jmp
push
fimuls
filds
mov
inc
scas
push
inc
dec
dec
inc
movsb
and
out
bound
ljmp
push
jbe
inc
pop
sbbl
inc
jno
loopne
pusha
xchg
nop
loopne
mov
mov
lds
xchg
adc
ret
dec
dec
int
adc
dec
es
pop
inc
adc
inc
cmp
add
push
ror
lret
nop
int3
jg
ficomps
outsb
pop
jmp
nop
faddl
andl
dec
test
xchg
out
jmp
pop
into
pop
xlat
dec
test
pusha
aad
xchg
jbe
push
mov
or
aam
mov
enter
jle
faddl
adc
sti
xchg
rcrl
outsl
in
dec
out
mov
test
jmp
popa
or
ficoml
inc
addb
loop
dec
mov
pop
xchg
or
mov
dec
out
xchg
leave
aad
adc
dec
jge
sbb
dec
int3
jmp
sbb
push
lret
pop
addr16
xchg
aam
ror
and
mov
jmp
testb
sub
insb
cmc
pop
pop
dec
into
cmc
int
shlb
call
and
cmp
cwtl
jg
push
push
call
fmuls
inc
mov
stc
pop
fildll
add
lahf
xchg
jp
out
stos
xorb
lret
iret
insb
inc
loopne
out
fbld
pop
cmp
mov
pop
push
leave
int
inc
jno,pt
dec
cmp
pop
push
push
inc
push
jno
iret
xor
add
rcr
xchg
dec
int3
add
js
push
decl
xlat
mov
fcmovnu
mov
push
push
fistpll
enter
fisubl
icebp
push
dec
pop
out
fldl
mov
js
imul
sti
aad
ret
dec
mov
xlat
fsts
call
push
lret
mov
enter
aad
fdivl
into
push
push
mov
inc
xlat
jb
repnz
fmuls
int
inc
int3
fidivrs
fxch
call
incl
popw
cmp
test
xchg
jl
inc
inc
call
lds
inc
jmp
and
xor
addr16
repz
pop
mov
aam
mov
jmp
dec
clc
pop
aad
jl
fiaddl
inc
push
fbstp
jge
dec
dec
jp
call
xchg
loopne
repz
jmp
scas
jp
dec
push
cmovle
ds
ja
jae
dec
add
mov
lret
enter
nop
aad
nop
loop
ret
dec
rol
mov
push
fisttpl
sti
mov
outsb
js
les
popf
inc
mov
xlat
fcmovbe
dec
in
adc
out
aam
icebp
adc
fcmovnbe
inc
cltd
dec
dec
inc
sub
mov
mov
pop
repnz
pop
into
jg
ficompl
shlb
das
push
jmp
xor
int
sbbb
mov
in
dec
add
dec
pop
pop
push
cmp
cmp
jl
fnstcw
fwait
out
mov
ljmp
push
int
imul
jmp
popf
inc
vandnpd
dec
iret
jbe
fsts
jle
pop
cmp
pop
sarb
jne
pop
mov
ficompl
add
js
mov
les
lret
lods
xlat
fs
fdivrs
xchg
flds
ljmp
fsub
rclb
push
dec
xchg
inc
sub
dec
in
dec
push
xchg
jge
dec
mov
mov
push
lods
popf
pop
mov
mov
jmp
aas
in
add
pop
in
test
mov
jmp
inc
jno
push
iret
push
stos
jl
fldcw
fildl
or
inc
shl
and
fisubl
fimuls
dec
push
fiaddl
int
aam
push
pusha
and
push
adc
mov
notb
loopne
inc
dec
out
adc
dec
jge
dec
add
ror
shrb
out
leave
jp
dec
xor
imul
mov
or
push
mov
in
pop
stos
rcrb
leave
js
testl
lret
dec
int
pop
mov
push
mov
xlat
dec
pop
mov
inc
jnp
out
or
icebp
push
dec
test
dec
dec
enter
sub
jmp
out
subl
gs
cli
dec
fldenv
call
add
sarb
aam
mov
dec
mov
jp
dec
addr16
out
js
js
jb
mov
jno
in
adc
pop
jae
push
ffree
jl
popa
push
lahf
sub
mov
cmp
jl
sbb
pop
fisttpll
or
push
dec
test
push
cmp
shlb
push
loop
push
int
mov
fstps
addps
fld
push
fldt
lret
jl
dec
rol
dec
adc
fadd
or
push
loopne
jp
adc
push
jmp
ror
jmp
loopne
dec
aas
out
hlt
push
dec
pushl
push
fisttpll
fistpl
call
dec
ficoml
les
xchg
pandn
fs
push
add
pop
int
gs
fcmove
jne
cld
int3
fs
fdivs
push
or
mov
lret
shll
lods
test
test
ljmp
jmp
test
dec
push
int3
jmp
call
imul
inc
dec
loopne
fdivl
xchg
js
lods
mov
and
rorb
ljmp
aam
mov
lds
aam
dec
sub
xlat
cmp
sub
mov
fcmove
and
pop
fists
jmp
xor
xchg
mov
rcll
dec
and
pop
dec
dec
popa
lcall
push
mov
xlat
xchg
rorl
aam
aaa
and
fisttpll
pushf
pop
sub
add
aam
dec
inc
movsl
icebp
clc
push
dec
out
push
iretw
into
pop
adc
jno
mov
lret
and
shl
dec
loope
push
out
leave
imul
mov
js
mov
fldcw
pop
mov
out
push
sahf
outsb
rorb
adc
fdivrl
gs
or
int
mov
push
xchg
and
popa
sbb
in
aad
iret
call
fmuls
dec
lret
add
jb
jge
vxorps
es
jmp
arpl
fcmovnu
add
idiv
mov
dec
out
les
and
aam
fnstenv
insb
fldenv
fs
fisttps
sub
mov
fidivs
icebp
mov
imul
pop
lret
orl
inc
aam
insb
test
lret
in
lret
les
mov
fcompl
sub
xor
push
mov
insb
inc
scas
push
fldenv
les
cltd
jmp
fisttpl
fldl
fnsave
iret
clc
dec
movsl
clc
jl
aam
cmp
pop
stos
add
fucom
repz
mov
mov
rcl
pop
mov
call
mov
jb
imul
or
mov
rclb
aam
xor
sub
inc
lods
stc
jns
repz
pop
and
frstor
pop
shlb
rcll
xchg
call
dec
idiv
push
inc
jbe
enter
pop
jae
test
imul
push
fcoms
sarb
dec
jmp
das
loopne
loopne
xchg
test
pop
adc
fidivrs
rcrb
loopne
pop
fsub
fisttps
ret
ficompl
mov
data16
fisubl
inc
or
nop
push
int3
insb
testb
loop
loopne
jge
pop
inc
int
mov
pop
addr16
fwait
int3
pop
jge
dec
inc
jge
cmp
popa
and
lds
jno
in
mov
ss
pop
mov
out
dec
lret
neg
adc
push
or
dec
lcall
inc
pop
jmp
loope
rcrl
nop
jg
fwait
lds
movsl
inc
or
scas
aad
jbe
push
popa
scas
in
fsubrs
mov
jmp
cmp
xlat
icebp
test
sbb
fmuls
pop
pop
call
mov
pop
inc
or
inc
lret
dec
push
ljmp
aad
roll
out
push
push
gs
dec
xchg
jmp
mov
icebp
mov
jae
mov
push
and
dec
sahf
adc
ss
jge
cmp
xor
int
xchg
repz
and
fnclex
xlat
pop
mov
jb
sbb
ffree
pop
pop
xchg
dec
dec
enter
jno
or
push
fisubrl
cltd
push
pop
ror
fmuls
loope
aad
out
pop
push
mov
popa
xchg
repz
xchg
push
pop
bnd
push
cs
adc
aas
push
jle
fisubrl
push
cmc
aad
fadd
in
ss
or
jp
mov
pop
call
stos
sub
shlb
sti
insb
or
and
pop
shrl
mov
in
dec
outsl
fnstsw
and
lds
out
addr16
dec
out
stc
nop
mov
or
or
shl
mov
pop
dec
and
fisubs
popa
inc
jg
fnstenv
sub
pop
mov
push
lret
clc
adc
repnz
dec
jecxz
push
fldcw
jmp
js
sub
std
sub
jbe
out
xchg
cli
iret
add
push
inc
fucom
fcmovnb
mov
aam
push
jg
aad
bound
jle
dec
imul
test
dec
shrl
int3
pop
notb
sarb
insb
data16
pop
movsb
mov
gs
add
push
mov
in
aad
mov
dec
insb
lods
std
enter
pop
inc
dec
out
nop
push
pushf
sti
push
and
ret
dec
mov
testl
js
push
dec
mov
lds
push
pop
aam
aad
sahf
flds
dec
lds
mov
add
lretw
js
js
movntq
mov
sbb
flds
dec
push
lea
add
out
iret
push
js
mov
dec
pop
out
push
push
subl
cmpsl
pop
call
scas
aad
mov
int3
mov
gs
inc
pop
xchg
pop
xchg
scas
mov
out
pop
in
jmp
lret
lret
neg
jb
sub
popa
rorl
mov
gs
adc
shl
paddd
jmp
shll
leave
insb
dec
inc
and
adc
testb
enter
lods
int3
iret
xchg
popa
fidivl
loopne
sbb
mov
push
clc
mov
fisttpl
testb
shrl
into
dec
mov
out
lds
int
or
mov
dec
push
jle
into
pop
imul
roll
test
mov
in
sti
aaa
loopne
and
push
test
out
xchg
data16
fcomps
fiadds
push
push
or
dec
push
pusha
pop
fwait
push
jbe
ljmp
aas
data16
jmp
outsb
and
mov
leave
aam
push
push
leave
pop
sbb
test
mov
inc
push
imul
nop
aaa
inc
js
pop
into
or
sti
out
pop
movsb
gs
mov
mov
popa
dec
dec
xchg
sarl
push
pop
mov
loopne
mov
enter
xchg
cs
outsb
dec
pop
xchg
add
dec
cmp
pusha
inc
lcall
push
dec
in
mov
sub
out
mov
sbbb
inc
cmp
movsb
call
addr16
in
inc
dec
test
sbb
jmp
into
ffreep
scas
pusha
push
cmpsb
inc
push
mov
test
shll
insb
in
sub
leave
loopne
rorl
dec
movsl
mov
mov
push
lahf
aas
sarb
jle
adc
push
rorb
insl
jl
jg
inc
jb
inc
dec
xlat
fildl
lret
sub
inc
push
fs
mov
insb
mov
inc
enter
daa
xlat
fstl
lods
inc
repnz
out
dec
dec
insb
inc
sub
dec
nop
inc
jge
test
roll
push
jmp
insb
dec
xor
sarl
mov
int3
in
push
enter
fildl
mov
pop
dec
test
fsubr
inc
mov
loopne
lret
pop
push
std
xor
dec
dec
test
out
fidivs
mov
imul
pop
fnstenv
int
pop
aad
dec
hlt
pop
fcmove
dec
das
dec
fisttpl
aas
pop
dec
push
mov
test
aad
ret
jne
les
add
lret
das
lock
into
out
out
jp
pop
daa
jl
fdivl
repz
dec
push
push
test
int
aam
adc
cmp
adc
out
mov
ds
mov
in
out
mov
hlt
aad
aas
sbb
insl
outsb
cmp
dec
mov
out
out
popa
loopne
imul
jns
out
mov
cwtl
mov
or
call
int3
or
popa
xchg
mov
insl
push
mov
out
fistpl
fiadds
sbb
mov
lahf
cli
outsb
sub
leave
mov
cmp
pop
int3
sbb
stos
jo
addb
nop
pop
data16
out
insb
push
jp
sbb
test
mov
shrl
in
testb
popf
pop
adc
mov
dec
int
ds
pop
cli
inc
aas
xchg
iret
dec
test
fcompl
dec
pop
xor
or
jmp
xor
repnz
aam
lds
int
xlat
imul
pop
fadds
les
imul
movsl
xchg
adc
dec
mov
adc
mov
xlat
enter
fisttpll
addr16
and
push
adc
out
faddl
sarl
push
dec
out
lret
xchg
mov
mov
out
mov
shrb
inc
filds
mov
movups
push
aam
loopne
sbb
jno
int
lds
dec
dec
lods
mul
xchg
cltd
pop
movl
dec
add
vpaddq
daa
xchg
jle
lret
aad
fdiv
xchg
push
enter
cli
dec
out
pop
out
loop
sbb
jg
popa
out
adc
pop
dec
push
pop
pusha
push
cwtl
idiv
lds
dec
icebp
lret
ret
dec
repz
push
loopne
mov
pop
jb
mov
dec
cltd
jmp
addr16
cld
leave
fisubs
xor
mov
shlb
add
push
sub
fidivrl
iret
fucom
iret
ds
rcr
fadds
pop
ret
mov
int3
cmp
lods
gs
fildl
push
fldcw
out
dec
mov
mov
pop
fucom
inc
add
pop
iret
fxch
jle
les
push
mov
filds
aam
leave
lret
loopne
xor
fiaddl
fsubs
into
jmp
loopne
shl
inc
fcompl
outsl
jl
addr16
and
rclb
pop
in
daa
mov
xchg
aam
test
aad
jecxz
data16
aam
pop
int
dec
adcl
ficoms
fisttpl
iret
scas
cltd
aad
push
xlat
int3
pop
loope
out
push
fisttpl
imul
mov
mov
pop
jmp
dec
rolb
push
fcmovnu
inc
mov
dec
ficomps
pop
add
pop
cmp
out
leave
dec
into
ja
mov
xlat
mov
push
insb
push
mov
mov
fildl
lds
cmpsl
loope
dec
pop
push
add
fmuls
push
pop
fucomip
and
loopne
push
iret
sbb
mov
push
test
int
dec
pop
fsts
enter
and
inc
fcmovnu
jb
fistpl
push
enter
dec
rcl
and
fbstp
jge
faddl
push
dec
push
out
dec
out
aam
repnz
push
cli
pop
dec
lds
cmp
dec
lea
int3
outsl
pop
xchg
mov
loop
out
pusha
push
shl
popa
les
data16
leave
rorb
xchg
dec
aad
mov
xlat
pop
addl
dec
adc
rcrb
jmp
call
test
fmull
aad
int3
mov
enter
test
repz
dec
and
int
lea
push
lods
jb
xor
jmp
call
push
pop
rcr
int3
addr16
fnstenv
or
inc
in
movsb
jg
dec
into
cmpb
bound
in
out
dec
mov
jp
mov
js
js
mov
jp
push
aad
in
push
xor
lock
push
loope
ss
vpmovmskb
xchg
cmp
pop
shl
inc
jle
inc
lret
mov
dec
push
negb
clc
or
jne,pt
call
or
xbegin
jnp
inc
loope
push
test
adc
stc
ds
xor
jmp
jge
dec
insb
imul
push
aad
dec
mov
pop
rclb
addb
push
clc
scas
gs
dec
xchg
mov
jp
loopne
lret
xor
rcrb
mov
fidivs
into
xor
data16
jb
data16
shr
inc
dec
addr16
data16
add
cmp
fistl
adc
push
add
xchg
js
aad
xorl
jg
dec
fisubs
xor
leave
sbb
shr
pusha
pop
enter
push
aam
aam
pop
int3
int
mov
pop
iret
clc
sbb
dec
repnz
push
lods
loopne
inc
call
mov
mov
orb
mov
push
jg
pusha
lahf
and
jmp
cmp
jle
loope
dec
gs
enter
dec
dec
sbb
mov
data16
mov
fucomi
xchg
lret
ja
xchg
push
jb
lds
fidivs
push
aad
push
cmp
sub
cli
pop
pusha
push
dec
stos
insl
inc
dec
lret
mov
mov
mov
push
aad
out
push
inc
pop
inc
in
xor
loope
pop
dec
dec
ljmp
stc
push
cmp
add
loope
jmp
xchg
gs
pop
xchg
mov
leave
arpl
stc
adc
dec
in
aad
mov
xlat
and
fbstp
fcmovnbe
cmp
test
lods
mov
mov
imul
mov
jecxz
test
fldenv
call
inc
push
daa
icebp
pop
jmp
loopne
bound
out
inc
in
mov
call
fwait
jnp
loopne
and
sbb
fdivrs
cli
pusha
stos
and
iret
movsb
fdivrl
das
fnstsw
cmc
pop
jle
push
insl
sar
jge
lret
add
dec
aad
mov
loopne
ljmp
gs
loopne
inc
ljmp
sbb
sahf
lahf
xchg
inc
mov
gs
sti
rcrl
push
fcomi
aam
sub
inc
xlat
test
pop
xor
mov
or
lret
leave
out
lahf
push
rorl
dec
push
cld
fldenv
in
xchg
int3
jge
faddl
xor
mov
mov
call
push
jns
mov
and
icebp
shll
push
test
dec
jle
fimuls
fnstenv
dec
aad
enter
push
pop
push
repz
and
lods
ret
cmc
mul
cld
aad
inc
or
popa
enter
pop
dec
bound
xchg
addr16
js
sti
jmp
daa
xchg
int
out
cmp
xor
push
dec
test
imul
mov
test
icebp
lret
push
rolb
dec
sahf
fbstp
and
incl
dec
sbb
adc
mov
lret
inc
mov
lret
cld
xchg
aam
jl
fldl
cmp
out
jg,pn
push
insb
push
iret
xchg
into
mov
mov
mov
call
fists
fcmovne
push
vmovq
adc
faddl
inc
lret
popa
pusha
pop
shrl
xlat
ror
arpl
in
fs
gs
pop
daa
lea
ljmp
movsb
and
cmc
stos
jbe
mov
push
outsl
in
pop
call
fcmovu
loop
out
dec
sbb
jmp
cmp
cli
aam
movb
mov
loop
inc
push
sub
icebp
loopne
ffree
and
sbb
std
push
lret
ror
loopne
shl
in
jbe
jmp
lds
pop
out
pop
or
cltd
jmp
push
pop
enter
test
fcmovne
mov
mov
dec
add
cmp
popa
or
dec
push
psubusw
mov
loop
xchg
xor
gs
movsb
cltd
enter
push
dec
dec
mov
dec
inc
or
pop
sub
sahf
popa
mov
cmp
inc
push
inc
xor
dec
dec
out
ror
ret
lds
enter
jg
push
add
mov
cmp
sub
push
add
pop
pop
enter
push
outsl
inc
test
ljmp
push
aam
lahf
rcrl
xlat
mov
imul
jno
call
pop
add
pop
les
testb
js
mul
inc
dec
mov
xor
xchg
push
int
fisubrl
pushw
lea
out
add
push
aam
and
stos
iret
into
test
fistpl
inc
pusha
dec
mov
aad
mov
pusha
pop
jbe
jg
dec
fdiv
sub
aad
mov
pop
shlb
mov
xchg
mov
inc
fdivrl
dec
xor
jmp
pop
inc
lret
pop
push
gs
int
xchg
lods
fdiv
dec
iret
jmp
mov
clc
cmp
inc
sbb
mov
les
stos
int
repnz
lods
jg
data16
fcoml
mov
loop
pusha
mov
test
addr16
pop
adc
xchg
aad
push
icebp
insl
push
mov
ficoml
sub
outsl
leave
imul
imul
xlat
neg
mov
test
add
sub
mov
push
mov
push
mov
aad
pop
js
outsb
jl
insb
or
sub
fxch
cmpsl
in
repnz
js
cltd
mov
xchg
xchg
test
pop
dec
and
pop
fldcw
xchg
enterw
aam
dec
daa
push
loopne
push
push
cmp
leave
and
adc
icebp
mov
shlb
loopne
fsubr
in
pop
loopne
inc
push
adc
pop
fistpl
in
popa
out
fildll
call
dec
jbe
push
les
jnp
fwait
loopne
dec
movsb
dec
inc
pop
push
dec
inc
pop
stos
lahf
pop
shlb
nop
fcmovu
push
fstps
jmp
je,pn
fidivrl
jne
mov
mov
insb
shlb
aam
add
fsubs
test
fists
mov
outsb
pusha
shl
mov
call
mov
mov
mov
fneni(8087
stos
pop
int
leave
out
dec
dec
inc
mov
fisttpl
aaa
ds
xchg
aam
cli
jae
inc
sbb
pop
dec
jb
xor
hlt
insb
pop
int
es
pop
cmp
push
adc
pop
cmp
dec
push
daa
sti
xor
fsubrp
lret
jno
fnstsw
pop
cmp
pusha
mov
fnstsw
int3
xor
insb
cmp
cmp
testl
in
pop
icebp
xchg
mov
jb
insl
popa
pop
pushf
mov
popa
inc
inc
mov
xchg
mov
ret
test
cmp
cs
jo
mov
mov
fisttpll
std
pushf
mov
pop
pop
popa
jne
add
xchg
iret
shll
push
fistpl
or
mov
xchg
mov
out
cmp
sub
out
ds
popa
pop
out
add
lret
pop
dec
scas
out
mov
cmp
stos
aas
pop
lahf
popa
xchg
cltd
sbb
outsb
mov
inc
sarb
dec
push
fdivrl
push
xlat
mov
pop
aam
adc
stos
dec
mov
and
out
mov
stos
push
fwait
repnz
pop
push
xchg
mov
adc
jb
rolb
fsubp
push
ds
dec
shrb
movsl
pop
std
fidivs
push
jp
out
xchg
leave
pop
cmp
outsl
test
xlat
aad
pop
mov
gs
cltd
out
aam
test
jge
fstps
orb
cli
rclb
clc
out
addr16
inc
pop
or
orl
mov
stos
shl
push
xlat
adc
or
inc
fcmovu
imul
pop
pop
jp
jle
data16
dec
push
xchg
push
ret
je
xchg
fcmovnbe
push
mov
sarl
cmp
mov
lods
xchg
into
data16
adc
out
imul
mov
pop
inc
adc
dec
mov
xchg
push
int
imul
pmaddwd
ret
lret
dec
outsl
aam
push
fcmovu
pop
pop
gs
fcoms
loop
xor
dec
cwtl
dec
lods
fdiv
enter
fisttps
rol
cmpsb
mov
flds
clc
dec
leave
jle
iret
pop
dec
aad
fidivs
pop
push
ss
mov
jmp
push
cmpsl
popa
iret
xlat
movb
push
dec
jp
push
out
push
pop
pop
imul
insl
dec
lahf
int3
dec
sub
sub
mov
mov
sbb
lods
rol
call
repnz
les
fmull
addr16
pop
adcl
mov
imul
jno
lahf
pop
insb
and
dec
out
push
inc
adc
mov
aad
movsb
pushl
imul
call
rorb
popa
lret
push
fldenv
mov
dec
shl
ficompl
mov
inc
push
dec
dec
leave
shrb
rorl
dec
pop
test
lds
xlat
dec
enter
fcmovne
roll
iret
leave
testb
xlat
inc
pop
or
rcr
adc
xor
mov
outsl
data16
ficoml
fmull
cltd
insb
pop
mov
pop
addr16
stos
pop
xor
xlat
and
adc
pop
inc
lret
sub
scas
aam
aad
add
inc
inc
ficomps
adc
faddl
in
clc
hlt
sub
icebp
mov
mov
rcrb
rcll
push
pop
rorb
mov
inc
mov
pop
mov
pop
pop
add
pop
dec
pop
fcmovbe
add
loopne
push
lds
mov
addr16
int3
test
fnstcw
jge
loopne
sbb
mov
imul
push
test
dec
int
sahf
mov
lds
hlt
imul
test
stos
add
push
jge
rol
pop
decl
mov
xor
mov
push
inc
push
test
push
cmp
xlat
scas
cmp
out
push
fstp
push
stos
hlt
push
stos
repz
hlt
push
negb
fnstenv
loope
pop
iret
cli
call
adc
lret
outsb
pop
call
and
stos
jne
call
aad
mov
les
shrb
dec
es
mov
int
push
ret
inc
adc
lds
dec
dec
adc
neg
push
lret
movsl
in
dec
xor
pop
dec
and
loopne
push
popa
xchg
sarl
orb
xchg
jbe
insb
aad
xor
pop
imul
mov
mov
dec
rcl
push
nop
pop
xchg
inc
in
fists
adc
mov
pop
sbb
dec
pop
pusha
jae
aam
enter
insb
push
imulb
mov
int
fucom
pop
call
dec
dec
les
out
lret
jb
test
loope
cmp
jbe
int3
jmp
pusha
rcll
fucomp
das
in
push
ss
filds
imul
xchg
ss
xor
fcom
pop
xor
pop
pop
sbb
insb
xchg
mov
imul
xor
dec
data16
pop
or
test
shrb
pop
jmp
pop
pop
push
fstl
aam
xor
popa
dec
pusha
sbb
jb
xchg
enter
aaa
cmc
push
repz
dec
pop
enter
mov
test
adc
dec
les
add
out
xor
and
inc
push
out
pusha
or
fistpl
dec
faddl
out
fldenv
test
inc
js
ljmp
pop
enter
enter
loopne
sbbl
insb
jge
fcmovne
pushl
xchg
mov
nop
pop
mov
fnsave
jecxz
jge
dec
shl
lret
fstps
push
pop
dec
mov
pop
pusha
test
mov
mov
rcll
fmull
pop
push
popa
mov
out
int3
push
in
imul
add
sbb
lock
pop
mov
pusha
add
jle
fmuls
dec
jp
inc
call
mov
and
popf
fnstsw
fcomps
push
lahf
sub
cmc
dec
addr16
dec
iret
in
cmpsl
xor
enter
gs
int
fistpl
mov
sbb
jmp
push
push
fcmovnu
xlat
lcall
and
rcl
into
pop
int
cltd
mov
dec
mov
lret
outsb
dec
shl
rcll
pop
cmc
lds
stos
push
loopne
push
ss
dec
fcmovb
mulb
xchg
add
xchg
pop
ffree
inc
jbe
pop
repz
dec
pop
or
inc
fsubrs
scas
insb
xor
scas
push
in
in
inc
adc
xchg
jle
push
inc
fiaddl
popa
dec
into
gs
insb
mov
enter
cmp
mov
dec
shr
cmp
flds
insb
mov
fildl
sbbb
gs
dec
push
and
mov
inc
movsl
pop
mov
mov
pop
vpaddusw
cmp
add
sub
add
push
pop
aam
leave
push
loope
fstp
pusha
xor
mov
pop
inc
cltd
adc
add
faddp
push
out
jge
mov
leave
lds
rol
mov
push
pop
cmpl
mov
pusha
inc
popf
aam
fs
sbb
in
adc
test
insb
clc
leave
fisttpll
rol
and
cmp
dec
fnstenv
sub
pop
and
repz
jp
insb
sub
inc
roll
lret
push
xchg
push
mov
dec
aad
ds
sbb
jnp
cmc
mov
push
ja
dec
dec
mov
lret
out
ffree
mov
int3
movsl
divb
dec
xchg
cmovge
test
xchg
aad
push
test
rol
fstpt
dec
lret
call
dec
dec
fidivl
lods
lds
iret
and
add
inc
imul
cltd
push
add
loop
fnstsw
push
jp
adcl
fs
pusha
jne
pop
sbbl
and
xlat
xchg
dec
mov
fnsave
iret
gs
lcall
test
lret
shlb
cltd
aad
pop
jmp
mov
icebp
fcmovne
mov
xlat
ror
imul
dec
mov
push
push
leave
lcall
mov
push
in
xchg
dec
pop
pop
dec
lea
loope
into
fstpl
dec
mov
pop
xlat
pop
pop
stc
out
in
data16
fadds
aam
daa
pop
ror
cs
sbb
leave
jnp
xchg
jle
cmp
addr16
mov
pop
adc
arpl
add
out
push
pop
jmp
jg
push
in
cwtl
push
movsb
add
lret
pop
dec
dec
in
pop
xchg
out
jo
ljmp
repnz
sbbl
stc
loope
gs
popa
mov
gs
xlat
fidivrl
jge
xlat
flds
dec
inc
enter
dec
fiadds
mov
adc
jg
push
fstl
mov
pop
push
call
flds
push
pop
ljmp
xor
xchg
or
inc
sbb
cmpsb
adc
mov
pop
dec
dec
jge
lret
xor
out
inc
pop
in
scas
rclb
inc
add
lds
popw
dec
pop
cld
xchg
test
push
inc
aas
dec
or
inc
adc
inc
mov
int
lahf
cld
test
and
int3
shll
sbb
out
test
pop
popa
loopne
dec
into
add
aad
push
dec
imul
xchg
sbb
fimuls
push
jmp
in
roll
fiadds
out
subl
ss
xchg
lret
call
aaa
int3
into
pusha
fsubrl
add
addr16
lds
mov
and
in
rol
ret
faddl
dec
mov
mov
leave
icebp
jnp
faddl
insb
in
into
out
and
inc
dec
mov
lret
iret
aad
add
sub
pop
jmp
xchg
sub
dec
lods
neg
add
aam
ret
std
push
movsb
and
shrb
mov
dec
xlat
mov
dec
inc
cltd
dec
push
fyl2x
xchg
push
jmp
pop
pop
jecxz
shl
addl
mov
dec
pusha
movsl
lock
dec
aad
sub
xchg
test
pop
jge
push
aas
sub
and
dec
cmpsl
dec
adc
ret
jl
fmull
jae
sar
pop
pop
pop
popf
andb
int3
iret
fiadds
dec
pop
in
gs
movl
jmp
pop
pop
jp
ficoms
subl
xlat
rolb
ljmp
fdivrl
jge
push
cmp
push
lahf
rcrl
jmp
gs
popa
inc
lahf
pusha
pop
dec
dec
mov
test
ss
psubsb
dec
ds
arpl
imul
jmp
movsl
mov
sbbl
push
insb
rorb
aad
dec
repnz
repnz
sub
push
dec
inc
mov
pop
mov
dec
dec
jmp
fimuls
push
test
aam
push
clc
jmp
ret
addb
out
push
fadds
xabort
sbb
imul
aas
iret
dec
mov
mov
dec
sbb
pusha
sub
mov
dec
pop
fdivrl
xor
push
xlat
iret
push
jmp
call
enter
mov
dec
repz
fcomi
mov
iret
into
add
mov
frstor
xchg
out
mov
stc
repnz
enter
inc
dec
test
fisubs
mov
loopne
pusha
lret
mov
and
adc
push
aad
dec
jbe
pop
xor
shrl
nop
push
mov
in
or
or
int3
push
mov
jnp
dec
cltd
fwait
pop
push
mov
add
dec
fmuls
sbb
mov
aad
idiv
ficoml
int
lahf
jecxz
sbb
data16
fisubrs
adc
pop
push
inc
push
jno
pop
fstps
out
pusha
shl
push
daa
sbb
outsl
xor
xchg
fbld
fwait
mov
fcmovnb
push
pop
xor
pop
mov
cmp
mov
pop
fisubrl
jl
pop
mov
mov
leave
pop
sub
fistl
nop
andb
dec
mov
dec
sub
jmp
clc
jle
inc
dec
iret
daa
pop
js
negl
push
enter
inc
mov
mov
lret
iret
fstpl
in
and
or
pop
pusha
inc
nop
fnstsw
icebp
shlb
call
fildl
ss
jae
test
popa
shlb
push
aas
mov
and
mov
add
xchg
mov
inc
jp
xlat
rcr
lret
mov
fucomi
inc
inc
int
push
fcoml
test
pop
lods
cmc
fdivl
dec
inc
mov
fsubrl
mov
pop
mov
imul
dec
dec
aad
dec
movl
decl
shrb
xorb
lahf
push
test
pop
sarl
xlat
leave
or
pop
fistpl
or
ss
lds
lods
xchg
mov
xlat
dec
lret
fcmovbe
gs
push
loope
rol
mov
pop
pop
dec
fsubl
pop
or
lods
inc
fldenv
test
push
and
dec
repnz
jb
scas
packsswb
gs
inc
fmul
pop
bswap
rcr
les
cmp
pop
out
mov
ljmp
popa
cmp
jmp
mov
rorb
sti
jmp
into
imul
leave
jns
fcom
jl
dec
decl
inc
and
push
mov
lgs
cs
mov
dec
aam
mov
rcl
dec
call
sub
icebp
cmp
mov
iret
aad
clc
inc
mov
add
mov
push
ljmp
xchg
loopne
pop
into
pop
push
pusha
sarl
enter
xchg
leave
pop
push
xor
repnz
aad
dec
mov
repnz
fstp
repz
addr16
xchg
fcmovnbe
add
mov
pop
lahf
jle
dec
sub
pushf
xchg
jae
ret
xor
addr16
push
movsl
xor
movsl
les
fldz
rorb
lret
dec
mov
mov
pop
push
xchg
mov
pop
clc
inc
cmpb
inc
cmp
outsb
push
fldcw
aad
sub
pusha
pop
push
xor
popa
rcrl
cmp
mov
push
mov
push
add
icebp
in
movsl
mov
cmpsl
out
jbe
repz
push
push
ficompl
dec
inc
sahf
push
pop
dec
jne
xlat
call
int
push
push
lds
gs
clc
xchg
jp
pop
cs
mov
or
add
pushfw
loope
xchg
sub
aam
xlat
dec
mov
aad
xor
fstps
aad
sbb
fsubrl
test
mov
ds
dec
fcomp
imul
int3
dec
cmp
aam
pop
push
push
imul
add
dec
fildll
leave
jge
outsb
xchg
fidivl
push
lods
jecxz
movsl
test
sbb
sub
mov
loop
mov
or
sbb
rorb
ds
dec
pop
jg
sarb
iret
sub
jo
or
lea
add
and
imul
jle
movw
lds
sarb
lret
cmpb
mov
aad
dec
mov
fpatan
loopne
shlb
jno
pop
in
clc
adc
test
call
loope
dec
popa
test
aad
scas
mov
jnp
pop
lcall
iret
aam
aad
jl
dec
out
push
mov
sbb
test
ror
dec
out
and
gs
clc
imul
imul
es
leave
mov
scas
aam
lods
cmp
out
inc
lds
jns
mov
pop
aad
mov
cltd
dec
mov
out
cmpsl
aaa
call
dec
aas
int3
rorl
popa
frstor
pushf
addr16
inc
push
pop
sbb
inc
rcl
add
push
shl
mov
int3
inc
sub
aam
jbe
jle
pusha
pop
pop
pop
pusha
iret
out
repz
movsl
cs
stos
add
mov
mov
imul
push
dec
addr16
into
into
mov
xchg
push
call
push
cmp
pop
adc
nop
in
xchg
outsb
icebp
pop
dec
jp
fnstsw
aam
push
add
pusha
adc
fistps
fwait
dec
pop
mov
fldt
in
in
inc
xor
mov
movb
int
pop
in
xor
outsb
fsubs
sub
fstpl
fsub
fidivrs
or
xchg
mov
in
inc
mov
int3
dec
in
adc
out
gs
into
out
fsubrl
xor
aam
cmp
xchg
out
fldt
fldenv
pop
dec
mov
insb
dec
call
pop
inc
sub
push
mov
nop
push
or
adc
inc
push
sub
xchg
sub
test
les
jne
push
dec
pop
cwtl
pop
or
sar
fidivs
mov
jge
insb
sarb
dec
out
pop
pop
ds
imul
inc
jno
mov
fimuls
int3
movsl
fdivrl
popa
aas
cltd
mov
loop
ror
fyl2xp1
fidivs
adc
push
xchg
or
mov
bound
and
push
enter
fistpll
push
rcrb
testl
xchg
lretw
in
pop
popa
rorb
lret
dec
inc
cmp
dec
les
xchg
xor
int3
fst
loopne
insb
dec
js
inc
cli
iret
pop
inc
fsubr
push
dec
adc
adc
dec
cmp
ss
std
aas
int
push
push
ss
pop
sarb
mov
jl
mov
inc
paddusw
pop
roll
jmp
in
pop
fidivl
inc
in
pop
xchg
dec
popa
jge
iret
push
pop
add
inc
xlat
rcll
lock
aas
subb
in
icebp
out
pop
inc
xchg
leave
icebp
mov
fistpl
push
mov
cltd
lds
clc
push
fcmovnb
out
fmuls
dec
push
sarb
test
push
xlat
xor
in
movsb
jle
lds
jge
insb
rcrb
int
pop
push
dec
xchg
insb
test
pop
iret
mov
pusha
jge
enter
and
dec
push
dec
mov
adc
fmul
aad
lret
dec
addl
inc
mov
aad
mov
cmp
inc
fsts
dec
and
dec
call
rcr
mov
mov
fbstp
aas
ss
mov
pop
push
add
fbld
lahf
je
xchg
mov
dec
in
mov
xlat
push
into
loop
rorb
dec
imul
xor
fisttpl
leave
in
pop
int
dec
push
fdivl
ss
arpl
mov
insb
call
pop
loop
dec
cmp
add
xchg
sbb
cmpsb
cmc
pop
roll
dec
in
dec
cmp
fcompl
push
lret
psubusw
sbb
aas
fldl
clc
cmp
push
insb
loopne
aas
sbb
lea
xlat
mov
xchg
imul
xlat
leave
push
loopne
dec
sub
les
push
pushf
out
test
fldcw
shrl
dec
iret
push
mov
mov
test
fcomps
repnz
lcallw
cli
mov
faddl
mov
fistpll
popa
movsl
and
and
pusha
jle
pushaw
inc
mov
push
fmulp
mov
mov
jge
pop
or
loopne
loope
dec
dec
dec
jmp
ds
jae
cld
popa
iret
leave
movsl
out
lock
icebp
cmp
rorb
mov
fistpll
addl
fimull
mov
pop
stos
inc
rcrb
mov
dec
int3
or
loopne
dec
lahf
mov
jl
out
cmp
jmp
mov
insb
lcall
repnz
mov
fisubl
pop
scas
inc
lcall
jge
inc
jp
add
mov
ret
pop
mov
push
inc
dec
xorb
pop
jp
sbb
fsubrl
ljmp
mov
testl
mov
in
push
mov
jg
mov
add
and
or
jle
aad
sub
fdiv
sti
dec
movsl
test
push
pop
flds
shlb
push
cmp
incl
dec
sub
in
fimull
pop
lret
add
xlat
push
dec
ljmp
push
ffree
fwait
pop
fstpt
dec
out
dec
aam
fisubrl
sub
jne
iret
push
lret
mov
push
call
leave
not
add
mov
push
and
movsl
mov
mov
test
mov
push
gs
and
or
leave
push
fcmovnbe
lds
repz
dec
sbb
dec
arpl
aad
inc
in
dec
add
inc
clc
enter
push
iret
sub
push
fmull
mov
xorb
cli
inc
inc
imul
dec
aad
cmp
inc
lret
mov
adc
adc
out
jl
push
cmp
popa
loope
push
dec
out
dec
mov
pop
inc
into
pop
dec
lcall
mov
xor
jb
mov
fisubl
int3
xlat
popa
push
mov
dec
fmuls
cmpsl
out
negb
jle
dec
dec
cwtl
inc
loopne
mov
rorb
out
test
pop
fcom
sbb
outsb
jle
out
fadd
dec
xlat
cmpsb
neg
pushf
jecxz
fwait
int
dec
mov
subb
movsl
int
fbld
test
fwait
imul
and
leave
ficomps
jno
add
dec
fcomi
movsl
jb
dec
outsb
rcl
popa
out
in
js
xlat
stc
jl
cwtl
out
and
dec
add
loopne
push
push
shlb
push
and
or
pusha
mov
cli
sahf
dec
dec
pop
xchg
xor
int3
pop
call
scas
lret
clc
faddl
pop
pop
out
sub
test
pop
imul
icebp
nop
ss
push
mul
jg
aad
push
sbb
mov
dec
ror
lahf
les
fsubl
fldl
mov
loopne
mov
adc
pop
inc
les
cli
dec
dec
sub
movsb
repz
pushf
pusha
lret
sbb
mov
mov
xlat
mov
repz
dec
xlat
sbb
sahf
lret
or
mov
push
mov
rorb
add
dec
sub
cltd
fadds
scas
sbb
ljmp
mov
sahf
push
cmp
rorb
neg
add
or
dec
leave
test
dec
add
and
aam
and
dec
xchg
push
cmp
adc
pop
shl
inc
out
pop
aad
add
dec
pusha
push
ds
cmpsl
pop
jge
dec
dec
aad
movsl
shl
popa
loopne
sub
loop
addr16
test
cli
pop
add
repnz
clc
aad
jnp
dec
push
jle
push
shl
inc
outsl
inc
push
lcall
popa
in
dec
jmp
inc
push
lret
xchg
rcr
push
and
dec
cltd
pop
int
add
inc
fiaddl
add
mov
ljmp
dec
mov
push
lds
push
in
fcmove
insb
imul
jb
fldt
mov
inc
pusha
jp
shlb
enter
fildl
enter
push
pop
jae
pop
dec
add
push
fimull
mov
dec
push
lods
fstcw
cltd
enter
in
ljmp
jl
ret
leave
add
fisttps
aam
xchg
into
push
out
movb
dec
iret
les
dec
sahf
dec
mov
mov
jmp
imul
out
test
inc
mov
mov
in
xorb
xchg
push
inc
fistl
jno
inc
enter
pop
movsl
enter
dec
sbb
shlb
stc
aad
enter
inc
dec
dec
mov
jnp
mov
rolb
push
shrl
sbb
inc
xchg
imul
in
int
loop
add
push
pop
out
pop
add
daa
jle
cmp
lret
pop
popa
xchg
dec
jmp
add
cli
pop
ret
dec
mov
movsb
xchg
jbe
lret
dec
divb
sbbb
ficoml
lret
stos
out
loopne
nop
jmp
push
cli
mov
xchg
or
les
addr16
rol
add
lds
mov
mov
jl
ror
jle
push
fdivs
adc
xchg
mov
shll
inc
call
rol
ret
arpl
push
mov
in
lret
jmp
push
ficoms
lretw
rorb
popf
out
loopne
jg
data16
mov
xchg
push
repz
lret
xchg
imul
icebp
aad
fadd
mov
shlb
mov
jns
dec
mov
xlat
data16
fs
push
frstor
jb
enter
jnp
fucomp
sub
cli
jns
int3
mov
push
addr16
push
movsl
or
or
out
lret
in
jle
fcmovne
or
or
lods
and
xchg
pusha
cmpsb
pop
shll
push
rclb
ds
rclb
popa
loope
leave
dec
push
stos
rcrl
xor
dec
mov
data16
popa
rorb
call
movsl
push
clc
push
push
cmp
pusha
dec
addl
cmp
mov
enter
cmpsb
push
pusha
mov
pop
xchg
or
rcrb
mov
daa
xchg
add
lds
dec
dec
enter
inc
addr16
fldcw
pop
rol
mov
dec
addr16
fcomi
fcomps
repnz
addb
fisttps
push
mov
push
into
popa
mov
pop
sahf
add
push
pop
dec
int3
pusha
fisttpl
jp
fstps
jge
int
jmp
dec
test
leave
enter
pop
and
mov
mov
mov
loopne
inc
jg
push
incl
pop
push
lahf
lret
jle
push
loopne
int
sbb
mov
and
dec
mov
lret
ja
mov
push
jb
push
adc
rorb
mov
ret
dec
mov
mov
pop
cmp
dec
testb
leave
neg
add
fildl
lods
scas
int
sahf
inc
mov
pop
mov
push
ret
cld
sbb
neg
jge
pop
lods
lea
add
fcompl
ss
sti
sbb
pusha
sbb
push
xchg
movsb
aas
push
cld
les
lret
in
dec
pop
fiadds
loopne
lods
jmp
add
adc
leave
out
movsb
dec
xchg
and
mov
out
xchg
jnp
call
in
pop
push
testb
adc
loopne
leave
lcall
std
inc
mov
push
push
loopne
sbb
ret
repz
pop
imul
dec
leave
div
out
fst
loopne
aad
jl
fisttpl
repz
mov
fcom
push
jae
inc
fldcw
int
jmp
out
pop
mov
stos
mov
fnstcw
lcall
cmp
mov
push
cmp
fcmovne
add
push
push
outsl
test
popa
push
insb
push
push
pop
fnstcw
test
inc
fnsave
dec
test
test
adc
push
mov
xor
dec
pushf
push
in
loope
lcall
mov
rclb
and
jmp
out
fsubs
inc
daa
fidivrl
mov
xor
adc
and
ss
les
dec
cmc
rorl
pop
leave
aaa
dec
call
stos
pop
shlb
add
lret
dec
dec
cmc
pop
sti
loopne
mov
dec
fwait
dec
lret
pop
test
data16
test
repz
lods
frstor
jle
int
int3
lret
mov
cli
dec
push
aam
rcl
addr16
inc
outsl
xchg
icebp
sub
mov
inc
aaa
xchg
clc
jnp
jge
push
sub
outsb
dec
icebp
xchg
xchg
push
mov
pushf
enter
popf
mov
pop
mov
popa
test
jecxz
jl
jge
inc
incb
inc
or
or
adc
mov
push
repnz
jecxz
dec
sarl
ffree
push
in
or
add
adc
mov
push
shl
enter
outsb
dec
fstps
cmp
lret
fcmove
or
or
dec
jae
into
inc
dec
xchg
shrl
pop
dec
inc
sub
sub
pushf
ss
pusha
imul
sub
mov
icebp
in
movsb
scas
push
mov
pop
jbe
decl
int3
dec
lea
mov
jle
mov
jmp
fldcw
pop
adc
cmp
test
sbb
gs
jb
pop
mov
inc
pop
dec
int3
nop
movb
sub
and
fcmovb
pop
and
sub
std
mov
jg
push
test
addr16
jb
pop
jae
notb
mov
fmul
iret
lea
jecxz
xchg
bound
push
xchg
sub
popa
dec
js
inc
push
test
ffree
aaa
in
sti
dec
out
mov
call
push
mov
ss
out
pop
fildl
jle
pop
add
pop
into
push
int3
leave
popl
insb
lret
movsl
xchg
ret
mov
pop
push
and
ljmp
addr16
mov
in
int
adc
rol
int
inc
pusha
inc
dec
add
vcvtps2pd
stc
out
shr
or
pop
lcall
push
fidivrl
inc
dec
dec
jae
jnp
pop
jecxz
jge
mov
aad
inc
add
ffreep
jecxz
iret
pop
pop
out
sub
aam
and
xchg
jb
pushf
jmp
ss
pop
push
lret
lock
mov
mov
lds
push
fld
inc
aad
push
outsl
inc
movl
popf
cmp
pop
dec
jmp
pop
ret
jb
sbb
js
decl
popa
and
divb
clc
mov
int
cli
les
into
xchg
ret
add
adcb
cmp
mov
inc
inc
inc
into
and
dec
popa
and
pop
add
dec
mov
mov
movsl
roll
mov
fmuls
pop
push
rclb
ret
and
and
push
shll
mov
mov
and
stc
fidivl
fistl
jb
xor
xlat
jbe
mov
fiadds
jno
jno
add
xchg
clc
fstpl
stc
jno
fcmovnu
gs
fstpl
sbb
gs
pop
lret
leave
iret
push
sbb
test
add
dec
push
dec
lods
mov
incb
fcmove
push
test
nop
insb
fdivrl
and
mov
and
popa
cmp
mov
fdivr
jo
into
mov
push
xlat
les
pop
aas
popa
lds
gs
imul
loop
xchg
push
loopne
mov
jl
add
push
rorb
sub
imul
andl
push
pop
test
fchs
add
pop
pop
pop
scas
in
pop
jle
fsub
push
sarl
popa
sub
popa
inc
cmp
pop
fdivrl
fmul
pop
add
push
out
dec
inc
and
pop
jp
out
insb
xor
fistpll
pop
cld
pop
ficompl
inc
in
dec
dec
repz
adcb
gs
icebp
xor
scas
push
sbb
mov
lods
pop
push
sub
in
sub
out
jge
mov
jle
push
insb
or
inc
jmp
push
mov
xchg
mov
jmp
dec
mov
roll
pop
iret
add
jle
repz
aam
lods
hlt
pop
das
lods
lahf
push
aad
mov
inc
jg
call
call
push
dec
in
aam
xchg
xor
shll
push
inc
mov
mov
inc
inc
sub
pop
call
push
loope
fcmove
in
rcr
dec
dec
jle
loopne
or
mov
push
insb
into
inc
push
int
loop
push
inc
movsl
xchg
fucomi
lcall
leave
scas
call
pop
pop
les
pusha
addr16
pop
out
mov
push
iret
fistpl
bound
fs
push
shll
out
fst
rol
gs
cmpsb
fsubl
inc
jmp
xor
call
jge
loopne
dec
jle
pop
ficomps
andl
movsb
int
and
ljmp
lock
dec
in
cmp
dec
stos
in
nop
mov
and
mov
repz
les
add
mov
push
cmp
leave
inc
inc
mov
push
mov
mov
jp
out
xlat
push
xchg
scas
test
fistps
xlat
push
cmp
loopne
dec
push
fstl
dec
lret
fidivs
vxorps
lods
sub
pop
arpl
and
pop
push
pop
push
in
ror
icebp
jg
pop
lods
mov
out
leave
cmp
iret
loope
movb
mov
aas
movsl
inc
lahf
push
fisttps
push
mov
test
jnp
fistpl
imul
jp
lret
mov
jle
fistpll
fdivrs
jb
test
movsl
scas
outsl
fucomp
inc
mov
cwtl
sahf
insb
sbb
cli
jp
jmp
pop
push
push
jno,pt
dec
pop
sarl
jmp
dec
ss
mov
adc
dec
inc
and
fdivrs
fcmovne
das
test
jb
in
sub
lahf
mov
and
push
push
pop
pop
push
ds
fcmovnu
mov
not
pusha
adc
adc
lods
rcll
pop
adc
or
push
daa
int3
idiv
daa
dec
mov
fdivrl
cmpsl
leave
pop
pop
and
adc
xlat
jecxz
push
test
fistl
pop
xor
push
shlb
call
or
inc
lahf
push
aad
rcrl
pop
lret
xor
divb
ret
push
add
push
int
out
je
loopne
fdivs
mov
les
imul
fsts
dec
fnstsw
add
test
pop
dec
jge
out
jno
data16
push
ror
lods
jns
jmp
fisubrl
jae
out
cmc
neg
sub
fcmovnbe
out
mov
movsb
mov
ret
push
aam
mov
inc
mov
int3
dec
ffree
inc
aad
mov
pop
fildl
mov
cmp
push
scas
push
mov
data16
call
cltd
int
loopne
repnz
dec
pusha
add
iret
loope
dec
aam
lret
add
pop
and
sub
and
pop
jg
rclb
dec
movsl
jnp
xor
push
mov
dec
inc
mov
sbb
popa
fcmovnu
jecxz
aam
popa
pop
xor
leave
imul
ljmp
lods
es
jmp
aad
test
es
push
lock
dec
shrl
inc
dec
popa
lahf
sbb
cld
int3
into
adc
lds
add
pop
dec
xchg
leave
dec
pop
inc
test
sub
pop
or
lret
dec
faddl
push
loop
dec
pop
lds
adc
xchg
pop
jmp
mov
fiadds
push
cld
pop
repnz
jp
gs
jl
push
cli
cltd
bound
call
fld
enter
int
pop
fmuls
push
stc
xchg
iret
lret
mov
fcmovne
mov
mov
fisttpll
lret
shll
insb
push
add
xchg
pop
dec
lea
aam
movb
fcomps
fsub
dec
add
ss
addb
lret
int3
test
cld
push
fisubl
aaa
imul
dec
mov
lds
out
pop
dec
in
int
push
popa
mov
ljmp
mov
xchg
mov
out
mov
out
fists
bound
aam
dec
neg
dec
mov
aas
inc
lret
dec
rcll
fst
fsubrl
cld
aas
mov
faddp
and
fnstenv
jle
pop
out
push
push
push
popa
push
call
inc
dec
mov
in
ficoms
ret
into
mov
add
add
sbb
mov
pusha
cmpl
inc
jle
ftst
cltd
js
mov
mov
mov
push
leave
pusha
inc
pop
fadd
inc
popa
stc
fisubl
xchg
outsb
pop
aam
jge
out
lret
cmp
mov
daa
cltd
lods
ffree
ljmp
insb
mov
frstor
inc
out
push
adc
mov
adc
int3
inc
in
das
int3
fcmovnbe
xchg
pop
addr16
and
bound
xlat
out
push
dec
jb
dec
loopne
sub
or
mov
mov
dec
pop
mov
out
jmp
int3
pop
lret
jo
stos
int
mov
or
pop
dec
jmp
sbbb
pop
jmp
sub
pop
lret
adc
icebp
mov
fldl
jl
xlat
jmp
jge
pusha
xchg
sub
pusha
loop
test
xchg
pop
into
lea
jbe
call
xor
lds
adc
pop
mov
das
fldl
or
je
aas
daa
pop
lret
and
test
add
mov
fisubl
in
sarb
dec
jecxz
inc
test
jno
test
xlat
mov
adc
lds
dec
fs
int3
fstps
mov
popf
dec
push
enter
shrb
mov
mov
mov
ret
ljmp
int3
fidivl
push
roll
fldcw
fbld
andb
enter
inc
pop
mov
jle
aam
inc
in
sub
jmp
addr16
scas
dec
pop
addr16
ljmp
and
pop
dec
out
cwtl
loope
out
adc
mov
pop
gs
shlb
push
mov
push
push
repnz
inc
gs
icebp
lret
pop
lret
cmp
gs
lret
scas
fcoml
add
and
aas
cmp
dec
cmp
adc
aam
sar
lods
lds
test
add
xlat
fimuls
cmc
inc
mov
jmp
cmc
mov
fneni(8087
fnsave
in
or
addl
lock
in
push
rorb
xchg
jbe
daa
sti
add
daa
out
fidivl
cmp
out
fld
jl
dec
imul
dec
pop
add
imul
push
dec
jle
loopne
jb
js
loopne
fucompp
push
adc
lret
clc
dec
iret
clc
ljmp
dec
shlb
fmuls
dec
imul
jle
leave
das
jmp
lret
addr16
dec
dec
dec
data16
and
xchg
aas
test
js
inc
xchg
loopne
sarl
and
jmp
ss
insb
push
add
mov
pop
mov
addr16
je
cmp
dec
in
cmpsb
jle
push
pop
cmpsl
lahf
lret
insb
outsl
inc
pop
loopne
cmp
mov
in
push
inc
fdivrs
addr16
cld
lret
pop
xchg
jbe
xor
push
xor
fisubl
xchg
inc
dec
les
xchg
movsl
fstl
dec
mov
sbb
xchg
faddl
dec
dec
call
add
fisubrl
lds
push
divl
inc
xchg
sbb
das
inc
leave
movsl
cmp
add
negl
imul
push
add
jmp
movsl
rolb
js
jl
pop
inc
fmulp
pop
rep
push
mov
push
lds
das
fcomip
mov
inc
aas
cmpsb
das
cli
shrl
enter
fmul
pusha
int3
push
int
push
imul
inc
mov
sbb
leave
ja
mov
fstp
xchg
faddl
test
lods
adc
pop
ljmp
push
fwait
pop
push
jmp
xlat
fcmovb
fnstcw
fcomps
stos
add
xor
fadds
pop
test
mov
call
mov
xchg
pop
sarl
or
pop
mov
pop
push
call
fisubl
out
rorb
push
dec
sahf
rolb
dec
jl
insb
fldl
xchg
adc
iret
jmp
adc
adc
xchg
paddd
inc
out
decl
push
lret
insl
cmp
pop
xchg
test
enter
call
out
out
push
jge
pop
cmp
push
cmp
pop
mov
push
and
movsb
dec
rorl
mov
aaa
cld
jmp
sti
fs
mov
aad
ror
vpand
addr16
addl
pop
push
push
scas
clc
jno
push
fnstenv
or
lds
inc
push
lret
shr
js
les
xchg
imul
fsubs
mov
adcl
jb
and
loopne
test
lds
dec
pop
jg
int3
dec
mov
pop
add
dec
loope
xlat
push
pop
iret
pop
faddp
rolb
inc
fcmovnbe
stos
jb
mov
out
xor
or
or
lret
icebp
dec
pop
pusha
popa
mov
rclb
jle
enter
and
cmp
mov
fimull
jg
push
fmull
ljmp
pusha
ror
lods
xor
sub
imul
fiadds
popa
cltd
inc
inc
leave
call
loopne
jge
cmp
addr16
inc
push
lret
ret
sahf
faddl
fmuls
cmp
test
inc
and
int
leave
and
fwait
mov
push
and
aad
in
call
push
iret
inc
add
dec
insb
mov
dec
inc
push
fdivrl
sub
int
out
fistl
fnsave
aam
ficoml
fisubrs
or
add
xchg
jl
iret
pop
in
push
aad
dec
lret
dec
call
mov
imul
mov
lea
aas
out
push
mov
and
fmull
sub
jp
inc
jge
dec
jnp
cwtl
andl
dec
nop
mov
pop
fdivrs
pop
inc
pop
loopne
mov
mov
dec
iret
pop
gs
jmp
aad
and
fst
xchg
idivl
pop
inc
add
int
inc
int
mov
imul
push
fstps
cmp
pop
push
orb
repz
aam
push
xchg
repz
ss
xchg
dec
add
xchg
dec
test
dec
jg
push
iret
add
ret
and
call
dec
icebp
fcmovbe
pop
addr16
lret
out
mov
js
jnp
dec
stos
pop
pop
jbe
add
or
call
aad
sub
inc
pop
out
aam
mov
and
fildl
test
flds
mov
adc
ds
pop
negl
and
push
imul
or
mov
push
popa
pop
sub
cmp
iret
pop
rcl
fcom
xchg
int3
fisubs
jne
movsb
lret
xor
rolb
fucomp
dec
mov
inc
outsl
cmp
faddl
es
int3
pop
enter
les
push
popf
int
push
push
jge
lret
xchg
mov
cmp
xchg
enter
pop
xchg
mov
xor
dec
xchg
inc
mov
xchg
dec
fisttpl
pop
pop
sbb
add
les
pop
jnp
pop
ds
dec
pop
fimuls
fstpt
push
jl
and
dec
jno
cmp
sarl
call
out
mov
mov
dec
aam
lret
inc
and
xchg
out
les
inc
xlat
dec
insb
pop
ror
jmp
test
pusha
cli
popa
out
out
mov
outsl
fstl
pop
xchg
imul
aad
add
push
int
mov
cmp
mov
loope
fisttps
pop
addb
and
iret
xor
fcomp
iret
ficoms
dec
dec
and
lahf
ffree
mov
lahf
int
data16
pop
leave
add
ret
mov
shlb
loopne
adc
lret
vpmaddwd
outsb
out
ljmp
test
lds
jb
push
and
push
dec
shrl
xor
gs
std
cmp
add
dec
les
std
pop
inc
leave
outsb
lds
pop
push
xchg
mov
call
lret
cld
int3
dec
dec
sbb
data16
adcl
and
cltd
in
dec
out
jle
inc
js
inc
neg
in
hlt
mov
push
mov
lahf
leave
inc
in
ret
call
lahf
inc
inc
out
fildll
inc
arpl
xchg
add
fildl
ss
jno
pop
dec
jmp
test
cmp
shl
mov
jnp
iret
mov
cli
fldl
pop
inc
ficoms
fisttps
mov
out
out
push
dec
lret
testl
imul
fiadds
iret
inc
inc
xor
insb
pop
ret
pop
lahf
mov
dec
mov
pop
add
push
leave
in
fsubs
pop
clc
pushf
stos
js
cli
test
in
rorl
fwait
dec
inc
inc
dec
jge
fsubrl
sub
jmp
arpl
jp
rolb
xor
leave
out
pusha
divb
adc
push
add
push
int3
mov
int
cltd
pop
adc
pop
aad
inc
popa
inc
ret
loopne
and
cmp
sbb
mov
pop
pop
push
pop
mov
shrb
leave
inc
aaa
aad
hlt
into
dec
push
cmp
sbb
sub
sub
fmuls
cmpsl
fwait
mov
fst
out
lea
inc
negb
pop
imull
decb
pop
popa
fcomp
cmpsb
fcomi
faddl
inc
addr16
pop
jge
int
push
jecxz
lcall
movsb
dec
adc
jmp
mov
fsubrl
mov
xor
cmpsb
iret
push
push
int
mov
clc
lret
leave
in
mov
aam
add
jae
dec
and
fldcw
iret
popa
pushf
aad
aas
lret
pop
cli
dec
dec
int
ss
into
push
add
rolb
mov
icebp
enter
pop
call
push
pop
inc
pop
andl
out
fadd
insb
loop
jp
dec
dec
xlat
out
add
xlat
pop
iret
insb
inc
stos
inc
push
cmp
aam
nop
inc
loop
clc
and
dec
xlat
shlb
push
enter
mov
dec
in
aad
pop
dec
out
popa
push
arpl
dec
mov
dec
inc
add
pop
fidivrs
pop
call
pop
pop
out
aas
inc
fcmovnb
and
inc
addr16
add
pop
cmc
les
jno
pop
pusha
dec
jno
jle
stos
mov
inc
dec
mov
jmp
jnp
jmp
test
adc
push
xchg
jmp
pop
mov
cwtl
imul
push
shl
jmpw
dec
fimuls
movsl
mov
in
test
jmp
data16
xchg
jmp
cwtl
push
mov
dec
xor
mov
repz
cmp
dec
imul
movb
out
jmp
arpl
movsl
cmc
bound
les
mov
sti
arpl
call
inc
mov
pop
pop
sub
cmp
jmp
adc
mov
add
mov
mov
loopne
pusha
xor
fdivl
aam
cmp
js
mov
mov
jge
pop
fucomip
inc
lret
insb
adc
out
pop
fst
lret
jne
inc
pop
test
lret
and
fstpl
add
sbb
mov
shlb
fsubrl
popa
aaa
pop
pop
sbb
xor
cwtl
push
lods
test
inc
movsb
hlt
loope
and
dec
bound
jl
inc
add
dec
and
nop
push
mov
ds
subl
call
push
pop
pop
aam
adc
movsl
or
mov
mov
popa
and
sbb
fldcw
andb
fcmove
push
cmp
push
scas
aam
in
aad
jmp
test
dec
movsl
test
test
sbb
lock
mov
mov
push
cmp
clc
or
loope
out
dec
test
cmp
pop
fxch
aaa
fisttpl
enter
js
xor
or
xchg
lret
ljmp
out
loope
pop
xlat
loop
loopne
mov
add
mov
not
mov
pop
mov
addr16
mov
es
push
pop
xchg
scas
jns
fisttpl
lret
mov
mov
roll
cmc
insb
std
push
fldenv
in
jl
inc
inc
mov
push
add
leave
gs
push
pop
inc
push
data16
xchg
xchg
scas
xchg
mov
scas
xchg
xchg
pop
orb
leave
mov
mov
mov
push
cmpsl
vmulpd
inc
enter
cmpsb
aad
cs
jle
inc
pop
pusha
fiadds
adc
or
xchg
dec
push
push
push
pop
push
mov
test
aad
sub
adc
pop
dec
sbb
jmp
imul
gs
jae
inc
into
adc
int
fnstsw
jp
or
cmp
or
outsb
fsubrs
xcrypt-cfb
aam
inc
xchg
mov
js
pop
push
repz
mov
jmp
and
sub
popa
xor
aad
into
gs
movsb
shll
in
mov
imul
mov
lds
lods
aad
pop
xchg
pusha
addr16
xlat
dec
rcl
iret
sbb
push
out
imul
add
or
lds
xchg
and
aaa
shll
dec
xlat
xchg
cwtl
clc
int3
sbbb
mov
insb
mov
sbb
push
push
outsl
jmp
shrl
imul
lcall
fsubrs
ret
push
cmpxchg
sbb
fisttpl
aad
rol
iret
and
out
movsl
out
fs
jbe
addr16
pop
mov
js
push
cmpb
dec
lods
push
pop
out
iret
cmpsl
sbb
fcmovb
into
or
push
out
in
dec
gs
inc
fstpl
inc
dec
mov
adc
pushf
insb
adc
shlb
pop
inc
test
shlb
movsl
sub
pop
adc
pop
fsubrl
mov
push
nop
aad
loopne
add
rcrb
mov
adc
fiadds
addr16
scas
rolb
loope
pusha
call
xlat
mov
inc
dec
xor
sub
jmp
popf
push
iret
into
test
cmpsl
cmc
mov
jg
dec
out
insb
xchg
xor
addr16
test
loope
dec
pop
lret
mov
pop
dec
push
bound
movsl
adc
pop
mov
xorb
loope
into
dec
dec
push
lahf
adc
dec
mov
fxch
insb
aaa
mov
or
ret
mov
xor
or
dec
maxps
inc
inc
pusha
mov
ljmp
sahf
add
add
ficompl
gs
jb
dec
imul
out
mov
add
inc
rcrl
pop
nop
vpsubusb
enter
lahf
lret
dec
fbld
push
push
push
in
into
aad
push
cli
mov
dec
add
fistl
jbe
int
mov
push
enter
rcl
push
inc
push
jmp
faddl
dec
out
outsb
addr16
mov
dec
lret
sbb
mov
pusha
movsb
imul
fistl
push
mov
push
icebp
mov
fidivrs
jbe
shr
loope
stos
test
fisubs
dec
dec
push
addr16
loop
in
sbb
jo
inc
fldenv
leave
dec
mov
aad
push
pop
movsl
stos
cmc
leave
repnz
push
bound
xchg
aaa
jnp
js
idivb
js
jl
enter
aas
xlat
and
adc
popl
sahf
pop
loopew
dec
jmp
js
test
mov
pop
pop
fcom
nop
and
or
push
mov
inc
enter
mov
mov
out
pop
ljmp
lds
sbb
lret
jae
iret
int3
cs
fstp
mulb
pop
lret
pop
jg
pop
insb
aaa
out
mov
fists
jl
mov
loopne
push
jle
aam
aas
addr16
mov
jg
inc
inc
rclb
jmp
mov
mull
fs
push
mov
push
mov
gs
mov
mul
dec
clc
aas
jge
fdivrl
out
pop
push
jp
dec
ficoml
pop
leave
enter
ret
push
mov
loopne
push
pusha
leave
dec
loopne
mov
mov
into
mov
lds
add
lret
iret
jb
popa
aad
mov
dec
fistl
lret
mov
push
loopne
pop
cmp
jnp
pop
ror
mov
push
mov
notb
dec
divl
jle
int
dec
int3
popa
pop
gs
dec
mov
pop
enter
ffreep
dec
pop
lret
loopne
pop
xchg
or
fadd
into
mov
fadd
lret
pop
inc
xor
jb
in
adc
push
pop
jmp
neg
xchg
nop
enter
xchg
data16
rol
mov
pop
adc
push
push
add
lea
fadds
adc
iret
xchg
push
loop
mov
fldt
mov
fistpl
rcrb
adc
shll
mov
aad
je
fsts
adc
dec
aad
fucomi
gs
addl
shr
out
add
push
push
push
inc
xlat
pusha
enter
nop
jl
inc
out
jl
jle
pop
inc
jmp
dec
mov
and
int3
xchg
push
gs
call
fldt
cld
pop
ret
jl
pop
adcb
mov
loopne
jmp
add
fimull
addr16
push
jecxz
push
adc
gs
jecxz
gs
mov
xchg
mov
jge
pop
jg
int
cmc
inc
mov
ss
mov
mov
fxch
scas
pop
dec
testb
dec
mov
mov
cmpb
aam
cli
ficompl
leave
adc
dec
jbe
dec
shlb
push
add
fildll
push
addr16
loopne
sub
cmpb
aad
outsl
inc
xchg
into
in
pop
test
dec
sarb
pusha
push
pop
lret
enter
dec
scas
movsb
addr16
lret
lds
lret
push
stos
mov
fcmovb
bound
test
xchg
js
fcoms
and
jp
pop
aas
out
shlb
mov
jo
adc
adc
or
test
cmp
popa
test
lahf
sbb
fsubl
aad
fadd
dec
fimull
and
push
addr16
fstps
shrb
pop
push
and
xchg
fcmovne
mov
or
mov
repnz
enter
jmp
or
add
popa
pop
push
and
jg
call
jae
sub
xchg
fnstenv
mov
pop
in
xor
pop
mov
outsb
popa
xchg
je
push
jl
aam
call
or
add
or
inc
clc
cmpsb
xchg
es
or
icebp
nop
int
xlat
fcmovbe
pop
xor
iret
sahf
mov
push
fidivrs
addr16
push
popa
jmp
push
aaa
rcr
popa
in
fisubrl
xchg
in
nop
call
lret
leave
xlat
jge
pop
out
cs
push
add
int
push
push
lock
ret
fisttpll
imul
insb
mov
mov
gs
inc
xchg
push
cli
insb
imul
outsl
fmuls
adcb
pop
scas
inc
mov
fucomip
int
loopne
sbb
neg
rcl
mov
out
leave
and
movsl
dec
cmp
mov
shll
bound
cmp
jp
push
mov
mov
push
bound
or
mov
enter
scas
xchg
loop
aam
jno
mov
dec
dec
out
jae
mov
inc
cltd
pop
int
aam
mov
mov
mov
loopne
xlat
aam
pop
negb
push
ljmp
out
stos
rcll
push
mov
mov
pop
out
ja
aam
dec
push
cmpsl
mov
mov
daa
push
loop
add
addr16
leave
out
dec
or
fmul
enter
daa
mov
ret
mov
das
mov
mov
mov
in
pop
pusha
pop
out
push
cmp
add
jmp
inc
out
pushf
jl
rcr
cmp
or
out
stos
fs
mov
out
jb
cwtl
loopne
leave
test
call
add
jb
rorb
pop
mov
push
rol
outsl
xchg
lret
sub
dec
dec
js
arpl
int
dec
jmp
aas
jmp
adc
xor
mov
test
bound
ret
ret
dec
scas
xor
sbb
mov
pop
test
xchg
cltd
mov
and
aas
ret
test
faddl
mov
xchg
test
mov
xchg
addr16
test
iret
mov
mov
adc
pusha
fs
jl
push
shl
fistpl
inc
pusha
mov
enter
sub
pusha
pop
jnp
pop
insl
clc
pop
andl
add
adc
sahf
mov
out
or
adc
movsl
aad
pop
ror
mov
lods
xlat
stc
inc
xor
inc
loopne
inc
mov
minss
cwtl
pop
aam
in
nop
out
xor
sub
and
jl
cmpsl
push
daa
shll
dec
testb
mov
mov
stos
jae
mov
jl
pop
push
jp
sub
cmp
popa
dec
jmp
sub
mov
dec
pop
ds
inc
add
lret
pusha
repz
pop
lods
shrl
dec
test
pop
sub
pushf
iret
lock
dec
inc
push
and
and
mov
ret
mov
arpl
and
gs
call
lret
lods
fists
pop
adc
fisubs
mov
mov
push
leave
lret
pop
arpl
loopne
iret
dec
popl
or
mov
gs
aad
push
dec
jb
mov
or
cmp
dec
aad
aam
sub
in
adc
and
loope
aad
dec
imul
fst
div
sarb
or
inc
mov
testb
and
jge
push
push
fadds
dec
cmp
sub
dec
push
ds
dec
sub
pop
ss
jno
enter
aad
mov
push
lea
inc
and
in
jb
les
ret
xor
jmp
enter
vsqrtsd
fcmovbe
add
adc
jno
sbb
fcmovu
lret
mov
push
shrb
ds
enter
inc
decb
into
in
rcrb
pop
pop
xchg
push
cmpsl
mov
movsl
lret
stc
xchg
mov
lock
test
out
add
mov
in
fisubrl
push
cmp
popa
xlat
mov
out
mov
mov
out
inc
pop
pusha
into
cmp
push
dec
pop
pop
aaa
nop
out
push
sbb
stos
fbstp
jb
iret
repz
int
or
dec
adc
mov
fcomps
imul
jge
pop
enter
push
push
pop
pusha
pop
or
cmp
add
jbe
dec
push
lods
clc
jle
mov
shrb
loopne
inc
andl
mov
and
inc
aam
scas
mov
sbb
jae
test
inc
sbb
fstp
dec
mov
add
aam
dec
fisubrs
push
lea
lretw
pop
pop
lahf
dec
aas
jge
outsl
fsubrl
into
sarl
push
pusha
and
push
push
mov
inc
mov
pop
push
mov
fimuls
clc
jno
jmp
out
loopne
testl
jns
pop
jae
fidivs
fnsave
mov
jl
xlat
xchg
mov
bound
icebp
into
aad
and
sbb
loop
dec
pop
out
fiaddl
fs
adc
fimull
push
int3
orb
fcoml
movsl
push
repz
or
push
mov
pusha
data16
fsin
mov
shlb
mov
das
movb
pop
mov
std
cld
or
add
pop
xor
mov
loopne
ds
ljmp
fucomi
dec
lds
out
inc
fnstcw
add
cmp
ss
cmpb
cmpsb
popa
xchg
icebp
loope
aad
jge
dec
enter
pop
pop
jno
fidivrs
xlat
aam
enter
les
push
frstor
push
sbb
icebp
rcl
add
jno
insb
sub
aaa
pop
imul
decb
rorb
xchg
fldl
in
inc
mov
dec
jl
inc
in
dec
out
sahf
lcall
outsb
out
test
inc
dec
aad
inc
repz
mov
incb
pop
out
jmp
mov
aad
fldcw
push
xchg
test
pop
push
pop
dec
movsl
icebp
gs
int
mov
aam
mov
xchg
mov
in
data16
out
xchg
ss
push
push
insb
rcr
int
hlt
inc
shr
lret
rcrb
push
pop
push
fnsave
mov
mov
dec
inc
enter
int
mov
into
add
leave
mov
fistl
jle
push
les
ret
push
mov
mov
dec
mov
out
push
faddl
push
repnz
cwtl
pop
jge
dec
push
cmp
pop
push
cs
fisubl
dec
les
out
aam
add
dec
int3
push
pop
test
push
mov
mov
pop
pop
aaa
inc
dec
in
fcompl
jae
push
pop
jle
push
fidivs
and
inc
popa
and
test
fistpll
push
enter
testb
test
js
or
mov
fdivs
stos
out
popa
lret
sbb
inc
xlat
mov
mov
in
popf
or
shl
dec
push
aad
andb
nop
and
enter
movsb
dec
in
ds
in
icebp
out
sahf
ss
aaa
dec
lahf
into
fcmovnu
or
fstps
pop
jle
pop
fcoms
sub
mov
jae
int
add
test
out
ss
ficompl
push
and
pusha
pop
sbb
jge
push
cmp
aas
rcrb
stc
lds
mov
adc
and
pop
movsl
fwait
jmp
sti
sub
pop
iret
out
aas
mov
test
insb
aam
pop
bound
ss
rcrl
lret
mov
lds
push
subl
out
pop
enter
pop
fldenv
pop
insb
mov
out
sti
enter
pushw
scas
out
add
scas
scas
in
je
filds
mov
cmp
or
imul
mov
dec
push
mov
add
fstpl
dec
gs
fprem
iret
dec
mov
rcrb
popa
cli
dec
leave
jo
jmp
clc
pop
sub
out
fimull
inc
shlb
outsb
dec
pop
jmp
aaa
adcl
les
fucomp
or
std
mov
mov
aas
mov
pop
and
aam
inc
subl
ffree
push
inc
lret
out
fisttpl
sub
fsubs
push
mov
rol
loopne
ret
out
arpl
aad
jae
ljmp
test
push
xlat
lds
fisttpll
fstl
push
fisttpl
or
xor
lahf
fiaddl
pop
sub
fimuls
leave
outsl
shl
stos
add
push
dec
out
data16
or
xchg
inc
xlat
les
push
sub
sbb
cmpsl
enter
in
leave
push
addr16
adc
dec
xchg
adc
aad
in
ret
jl
inc
inc
out
mov
leave
lret
cmp
adc
jp
decl
test
mov
negb
dec
clc
add
mov
fistpll
inc
repnz
inc
je
mov
pop
and
mov
out
call
scas
adc
sbb
dec
enter
inc
dec
dec
leave
lret
sub
jmp
inc
leave
leave
iret
mov
out
aam
push
test
dec
sub
enter
and
cmc
aam
mov
pop
dec
aaa
xchg
loope
fsubrp
sarb
jge
faddl
adc
lret
frstor
test
push
push
jae
inc
jge
dec
cli
ja
int3
fcmovnbe
int
movsl
add
enter
iret
dec
filds
lret
adc
or
jmp
cmc
pop
inc
lret
addb
pop
fcmove
jmp
push
xchg
shrl
out
loopne
sbb
fstpl
adc
ficomps
push
mov
xchg
xor
in
mov
cmp
out
popf
loop
mov
dec
gs
pop
jbe
sub
fiaddl
shl
fistl
into
jecxz
gs
lcall
push
dec
enter
pop
jmp
into
fimuls
shl
dec
cmp
pop
pop
xlat
test
repnz
iret
pop
jae
cmp
pop
fldenv
aam
jle
fdivrl
inc
sbb
push
fsubp
dec
xchg
out
inc
clc
inc
inc
pusha
mov
fcompl
or
sub
mov
push
out
shl
iret
or
test
enter
flds
lea
call
mov
push
leave
jmp
int
mov
icebp
or
cmc
lret
inc
push
mov
push
mov
pop
xchg
lcall
add
ficoms
dec
cmpb
call
dec
inc
push
outsb
push
xchg
lahf
data16
dec
cs
cmpsb
xlat
sbb
jecxz
dec
dec
loopne
mov
stc
out
xchg
pop
clc
jnp
fcmovbe
insb
in
inc
cmpsb
mov
aam
std
js
mov
add
add
fmuls
in
scas
stos
mov
mov
pop
pop
fsubl
dec
pop
bound
aam
mov
dec
int
and
dec
test
and
lret
enter
cmpsb
pop
ffreep
fidivl
sbb
enter
mov
and
push
inc
mov
nop
mov
cmpsb
cmc
aas
add
push
imul
mov
sbb
into
lret
gs
mov
popf
jmp
aam
outsl
xchg
clc
dec
and
sbbl
iret
loopne
nop
and
dec
pop
lock
aad
js
dec
clc
and
cli
insl
in
notrack
push
loopne
or
xor
fcmove
jmp
popa
leave
jl
out
inc
push
aaa
add
xlat
mov
push
xchg
cli
ds
int3
pop
adc
test
mov
push
dec
push
xchg
dec
enter
cmpsl
call
fstp
ds
cltd
dec
push
dec
int
out
out
enter
and
cmp
sub
lods
jnp
out
mov
sbb
xor
fmull
push
ja
cmc
mov
rorb
xorl
mov
movups
push
xlat
jmp
sbb
fxch
dec
aam
xchg
jb
iret
mov
aas
pop
dec
rcr
jle
mov
enter
fdiv
lret
mov
pusha
fcmovnb
sbb
leave
jo
jns
outsb
into
xchg
lods
bound
push
addr16
in
ds
clc
inc
push
bnd
dec
arpl
in
lds
fildl
dec
int
aad
pop
loop
push
in
fwait
aam
mov
push
xchg
adc
imul
xor
mov
iret
outsl
and
call
mov
push
iret
push
int
out
xor
cltd
mov
pop
out
pop
dec
leave
jae
or
shrl
dec
fwait
add
mov
add
lds
and
popf
add
fildl
in
mov
test
ljmp
clc
leave
pop
idiv
jp
into
dec
pop
lret
and
add
inc
lcall
into
mov
imul
pop
in
fdivrp
ljmp
dec
out
aad
mov
or
repz
je,pt
push
lds
data16
fsts
inc
jp
mov
jge
pop
add
loopne
push
pop
push
jmp
popa
js
lds
ror
jno
mov
lret
xlat
popa
rorb
gs
jmp
jb
add
push
out
jmp
out
in
xchg
out
pop
addr16
cs
leave
out
aad
lret
or
popa
iret
xchg
incl
cmp
mov
pop
fbstp
or
pop
mov
mov
cmp
int
pop
push
and
add
aad
push
dec
sub
fs
sbb
fidivs
dec
sub
clc
dec
jmp
mov
test
clc
adc
jge
cmp
adc
dec
dec
pusha
shll
inc
jg
dec
fmul
dec
test
out
mov
pop
push
mov
in
inc
scas
aad
push
inc
sub
jae
arpl
outsl
pop
adc
xchg
test
in
fcmovu
leave
mov
adc
inc
aam
pop
pop
pop
and
lret
inc
insb
push
pushw
mov
cmp
fcmovnb
jno
ficompl
in
pop
mov
cmp
imul
int
addr16
inc
mov
lods
cmp
fisttpll
adc
cltd
mov
aad
clc
lret
out
jp
dec
call
aam
mov
fcmovbe
push
pop
dec
rcrb
mov
pop
pop
pop
pusha
mov
popf
data16
xor
vmovq
mov
cltd
pop
mov
push
inc
cmp
lcall
dec
mov
xchg
lahf
popf
js
pop
lahf
cmp
data16
jmp
push
xchg
aad
push
xlat
push
xlat
call
jmp
int3
shrl
fisttps
cmp
dec
inc
aad
adc
aad
popa
inc
cmp
pop
call
int3
js
pop
and
faddl
jns
dec
in
fnstenv
loopne
mov
sub
gs
scas
mov
shll
push
xor
push
sbb
pushl
fldcw
loopne
pop
pop
or
or
lods
cwtl
ret
dec
and
xchg
idiv
ss
jecxz
push
xor
and
dec
shrl
fcmovu
push
fnstcw
pop
inc
mov
sbb
push
ficoms
push
pusha
call
sub
mov
fcom
in
das
jbe
fmul
add
dec
fsub
inc
movsl
mov
jmp
mov
add
mov
ljmp
pop
inc
ret
lds
loopne
mov
addr16
jb
adc
pop
and
push
popf
push
push
jbe
dec
xlat
add
imul
ret
fldl
rorl
pop
loopne
daa
dec
int3
jmp
xor
push
mov
mov
ficoml
push
adc
mov
enter
push
pop
fstl
and
shll
add
pop
pop
inc
shll
out
fucom
push
lret
jge
lds
insl
xchg
enter
pop
movl
xlat
sbb
leave
insb
inc
out
rcrb
pop
rcl
dec
xlat
push
repz
pop
vmovaps
pop
push
adc
fiaddl
or
je
xchg
adc
mov
shlw
les
pop
fidivl
push
notb
sub
pusha
fstpl
jg
lds
xchg
push
into
roll
test
xchg
and
cmpsl
sub
dec
pop
cmp
fstpl
push
pop
cli
and
mov
outsb
xchg
mov
mov
xlat
mov
pop
sbb
int3
push
add
sub
jle
sahf
pop
cmc
jl
dec
fiaddl
out
test
pop
out
loopne
shll
aam
imul
fistpl
leave
fwait
out
dec
pop
xlat
jle
pusha
inc
add
jg
out
add
jnp
lret
push
in
js
cli
fs
cmp
sbb
out
mov
lds
shrb
pusha
lds
xlat
or
loopne
jp
les
stos
aad
test
jl
inc
cli
insb
xlat
or
movb
push
mov
lock
dec
add
pextrw
xor
dec
adc
pop
call
dec
pop
imul
push
out
imul
cmp
mov
aad
pop
sub
mov
out
mov
push
sbb
jmp
fldt
fildl
ljmp
push
push
popa
and
inc
insb
ljmp
roll
mov
mov
aaa
xchg
ret
xor
or
jge
dec
aam
xor
dec
jmp
mov
popa
cmp
test
pop
mov
call
test
dec
push
xlat
loopne
lret
iret
aad
add
mov
and
fdivrl
shll
dec
dec
test
xchg
sti
inc
lds
rclb
nop
push
and
int
jmp
sbb
inc
popa
aad
fisttpl
nop
lods
mov
insb
test
fiaddl
int3
xchg
inc
jge
xlat
dec
cmp
or
jmp
pop
out
inc
mov
and
fsubrl
adc
leave
and
lds
call
push
pop
movsb
pavgw
dec
test
fs
ficomps
ss
out
imul
mov
dec
inc
out
call
out
mov
cld
mov
adc
ljmp
sbb
push
sbb
push
int
xchg
fcmovnbe
test
iret
inc
sti
mulps
leave
pop
jbe
pop
fdivrs
pusha
pop
enter
adc
into
mov
xor
xchg
clc
inc
cli
or
adc
movl
cld
int
mov
add
or
mov
ljmp
push
pop
das
fldcw
arpl
mov
xor
dec
out
data16
pop
ret
scas
dec
mov
cld
pop
mov
data16
jl
mov
fisttpll
into
push
iret
dec
fisubrs
fmuls
inc
sbb
sbbb
movsl
pop
aam
push
push
popa
call
ljmp
pop
aas
dec
enter
mov
adc
push
dec
dec
imul
divl
clc
fisttpll
scas
cli
enter
fmul
fcoms
xlat
pop
push
inc
div
jnp
mov
je
push
pop
int
das
leave
push
aam
in
enter
aaa
mov
test
mov
clc
pop
fdivrl
lods
in
pusha
push
pop
push
lret
aad
repz
imul
add
mov
mov
es
ret
pop
and
mov
leave
dec
add
int3
push
mov
ffree
cmp
pop
pop
jge
jp
stos
fdivl
cmp
xor
pop
sar
dec
iret
mov
gs
mov
jmp
fldt
push
jbe
imul
test
mov
inc
inc
fmuls
inc
int
leave
inc
in
lea
adc
inc
jecxz
inc
cwtl
mov
jmp
repnz
addr16
xlat
int
popa
add
push
andl
pusha
roll
ja
push
gs
iret
inc
repnz
jecxz
push
in
xchg
insl
fnstsw
dec
xchg
push
enter
mov
push
rcrl
imul
rol
mov
movsl
add
inc
dec
xor
pop
push
pop
or
mov
mov
pop
dec
mov
clc
pop
jl
pop
jp
xchg
push
push
idiv
jp
imul
js
cmp
sahf
adc
fisttps
int
inc
mov
pop
mov
push
pop
jmp
push
inc
addr16
fwait
push
out
lret
enter
mov
mov
push
lret
dec
lret
pop
mov
loopne
in
adc
inc
mov
inc
out
leave
dec
mov
iret
out
call
neg
addr16
idivb
incb
call
pop
cmp
push
out
insb
push
incl
shlb
rcrl
insb
scas
fnstcw
outsl
repnz
fbld
dec
mov
test
pop
int3
lret
mov
aas
mov
push
push
stos
inc
add
and
mov
int
dec
jmp
pop
enter
fisttpl
dec
rcll
js
into
xchg
push
fbstp
cltd
out
xor
jae
fadds
inc
mov
sbbl
sbb
aam
test
das
out
fldcw
aad
in
pop
pop
mov
mov
xlat
inc
jb
out
add
dec
fidivrs
pop
lcall
icebp
into
pop
es
loopne
rolb
mov
jb
pop
enter
bound
add
mov
icebp
xorl
mov
es
push
dec
mov
arpl
mov
inc
inc
call
pushl
fidivrs
push
cmp
cmp
add
fistpll
xlat
ror
lret
imul
push
lahf
out
dec
dec
mov
pop
shrb
jnp
dec
pop
int
push
loope
dec
lahf
mov
cltd
aam
dec
aam
mov
pop
inc
push
and
inc
aad
or
enter
xor
jmp
lret
fdivr
xlat
dec
jge
pop
popa
out
xlat
jp
cmc
stos
push
enter
in
add
inc
dec
jmp
push
shlb
adc
std
mov
lcall
fsubrl
inc
jbe
iret
push
scas
fsts
dec
push
subb
into
cmpb
stc
fildl
sub
cmp
cmpsb
mov
out
das
loopne
xchg
arpl
pusha
add
int3
or
fldcw
popa
inc
int3
ds
lcall
mov
jle
pusha
pop
inc
dec
cmp
mov
xor
mov
push
or
push
inc
stos
push
pop
adc
dec
cmp
xchg
gs
adcl
lret
sahf
mov
neg
jle
pop
testl
in
jb
jo
popa
pop
dec
ret
mov
push
dec
les
stos
jp
push
ficoml
js
shrb
add
dec
cli
insl
fstpt
inc
adc
imul
pop
sarb
push
shlb
mov
data16
add
mov
shll
imul
mov
sub
adc
outsl
rclb
clc
push
sub
cmp
cltd
in
fstpl
xchg
add
je
pop
mov
addr16
shlb
push
mov
lds
out
mov
das
cmpsl
imull
dec
data16
push
rcrb
jno
lret
mov
jae,pn
ret
lds
adc
stos
adc
pop
push
xor
cmp
call
jno
sarl
or
add
leave
loope
dec
enter
pop
jl
xlat
addr16
test
popa
popa
aam
xchg
or
jl
inc
pusha
pop
adc
and
leave
pop
scas
mov
fdivr
dec
enter
outsb
dec
xor
mov
inc
lahf
ds
int3
xchg
out
out
or
mov
pop
pop
aad
push
int
ret
jg
pop
insb
pop
push
aas
fnstcw
insl
rcl
fisttpll
inc
or
xchg
mov
jge
jmp
out
push
cltd
mov
out
lret
iret
dec
dec
pop
inc
and
in
or
flds
xor
push
add
dec
lret
lds
adc
push
or
jecxz
fcmovnu
cmpsl
cmc
int3
inc
push
xor
in
fcoml
imul
mov
xor
pand
fidivl
int
xchg
fiadds
push
pop
mov
int3
pop
fimull
iret
jecxz
dec
pop
jp
fstps
push
adc
aaa
mov
test
cli
gs
test
dec
repnz
in
push
push
mov
std
sub
xor
sarb
pop
mov
leave
xor
dec
mov
fnstenv
fucomi
push
mov
push
das
add
push
lcall
mov
in
pop
daa
fldl2t
test
push
lret
pop
fsubl
mov
jmp
insb
and
jmp
xchg
mov
pop
add
scas
rorl
insb
mov
aad
in
pop
dec
pop
out
out
push
jl
dec
pop
cmp
lock
popfw
rorl
add
loopne
loope
call
gs
pop
xor
mov
out
cltd
xchg
ret
loopne
cwtd
sbb
test
scas
in
addb
setb
int3
push
mov
adc
mov
rcrb
andl
pop
dec
int
loope
push
push
mov
test
insb
aam
lret
pusha
pusha
pop
cmp
repz
sbb
dec
push
push
add
loop
stc
pop
dec
xchg
push
ret
into
test
adc
loope
addr16
pop
outsl
mov
jl
popa
out
loopne
dec
mov
dec
hlt
xchg
enter
xor
into
pop
or
scas
xchg
xchg
lcall
pop
and
les
cltd
fimull
and
jecxz
clc
int3
xlat
sarl
fnstenv
fistpl
lds
dec
fmulp
nop
inc
and
test
and
insb
or
push
and
idivb
sbb
test
jmp
sti
repnz
sti
call
pop
in
dec
push
push
ret
pop
test
push
addr16
dec
loopne
sbb
pop
mov
fsub
add
mov
mov
or
fucomi
test
es
stos
jno
or
mov
stos
les
lods
fidivl
popf
in
jge
loopne
fidivrl
sbb
imul
xchg
dec
aam
and
scas
pushf
aas
popa
cltd
jmp
xor
dec
imul
inc
cmp
pop
out
lcall
add
jge
dec
fisttps
les
cmp
fistl
inc
pop
dec
aad
xor
addb
pop
out
loopne
inc
and
mov
inc
dec
aaa
mov
rclb
jo
mov
mov
rorl
jg
dec
aas
pop
aas
aas
sub
ss
pop
fistps
inc
sbb
leave
scas
push
xor
inc
lret
icebp
mov
mov
dec
imul
jbe
aam
jae
sti
dec
ficomps
imull
or
adcb
insb
and
cli
lods
push
mov
dec
pop
pushf
das
push
shlb
sbb
add
fisttpl
pop
aas
push
imul
pop
call
add
dec
lret
cmp
push
movsl
cmpsl
mov
daa
lds
push
dec
dec
inc
popa
out
push
cmp
mov
lret
jge
in
cmpsb
dec
out
mov
orb
test
imul
in
pushf
shll
cmpsl
push
mov
pop
jne
pop
dec
pop
ja
push
shl
fstp
popa
data16
dec
xchg
int3
inc
push
rolb
addr16
push
imul
cmp
in
inc
cmp
fildl
mull
iret
cmove
fcmove
lret
fildl
rorl
gs
inc
push
out
push
loop
dec
pop
cs
mov
sbb
push
dec
icebp
pop
dec
es
or
fldenv
loopne
loope
pop
lret
les
sahf
outsl
inc
pusha
mov
add
lods
outsb
in
dec
lret
push
daa
fincstp
dec
push
sub
jl
data16
lds
or
adc
pop
dec
dec
mov
fst
out
mov
cld
dec
lods
test
out
xchg
jle
lret
imul
inc
out
leave
push
jae
hlt
pop
mov
mov
push
pop
test
test
adc
pop
ret
push
imul
dec
or
rcr
push
mov
inc
inc
imul
push
lahf
mov
out
lds
sub
pop
out
iret
inc
pop
jge
lret
add
mov
aad
hlt
sbbl
push
jae
lods
push
es
aas
inc
js
test
fnstsw
push
sbbb
in
sar
in
pop
inc
cmp
fsubr
gs
add
fmul
call
pop
dec
imul
fcmovnu
pusha
push
les
inc
jno
or
mov
jle
pop
pop
adc
adc
fcom
scas
inc
push
add
seta
cli
fildll
loopne
inc
iret
push
sbb
pop
les
into
pop
push
enter
mov
pop
jbe
iret
lea
or
test
fstps
dec
inc
test
push
into
xchg
enter
pop
push
mov
pusha
adc
outsl
nop
sbb
and
clc
addl
enter
xchg
mov
out
call
iret
int3
shl
push
ljmp
pop
mov
jmp
push
jmp
pop
cmovp
inc
pusha
xor
clc
push
int3
fsubp
jmp
roll
jl
push
mov
fadd
pop
pusha
pop
divb
not
lea
ret
cld
shll
int3
xchg
test
pop
inc
pop
push
add
fstpl
gs
add
dec
fsubrl
out
push
mov
push
fbstp
push
pop
xor
mov
pop
subb
leave
lret
fwait
mov
jge
dec
data16
xchg
push
js
and
jge
aad
mov
pop
sub
push
jg
call
rorb
mov
or
mov
andl
popa
dec
pop
out
movsb
xlat
mov
inc
push
sub
pop
test
add
pop
push
fisttps
lahf
xchg
in
pop
inc
movsb
push
arpl
push
mov
imul
test
inc
lods
dec
mov
in
mov
push
mov
mov
leave
rcl
dec
out
lds
sbb
int
add
cmp
leave
loopne
mov
into
int
and
iret
pop
ret
das
movb
xchg
fisubl
dec
push
ffreep
mov
xor
int
fldenv
out
dec
inc
in
popa
js
ficompl
repz
dec
call
xlat
dec
jno
outsl
in
in
mov
jbe
aas
movsl
out
in
cmpsl
dec
loope
jmp
in
lret
mov
jno
dec
mov
dec
pop
fistl
inc
cmp
add
fcmovne
leave
push
mov
insb
call
filds
add
or
inc
in
jmp
in
fs
imul
enter
lds
fmuls
ja
imul
pop
gs
pop
or
dec
mov
arpl
in
mov
ljmp
dec
scas
orb
lret
loopne
lahf
rcll
sti
sbb
mov
clc
lds
jmp
push
movsb
fiaddl
pushf
ret
pop
push
pop
insb
push
pop
gs
ss
ds
mov
mov
sub
inc
fucomip
inc
push
in
push
in
movsb
fsubs
adc
xchg
jb
call
xchg
pop
les
jno
jg
jle
push
pop
push
aam
stos
fists
dec
or
dec
pop
jp
fstp
les
movsb
jge
imul
cmp
ficoms
mov
into
cwtl
shl
ficoml
inc
inc
call
pop
cli
push
dec
test
sbb
loope
pop
addr16
leave
aad
push
jmp
cld
push
dec
push
mov
lret
xchg
out
pop
xor
jg
inc
inc
xor
icebp
mov
ss
xchg
mov
pop
fwait
lcall
mov
frstor
clc
push
cli
ror
push
lret
inc
pop
ffreep
mov
fimuls
popa
cmp
sahf
cmp
and
jle
push
xlat
leave
rcrb
loope
lret
out
pop
aam
sarb
push
lcall
aas
testb
clc
cmp
cmp
jle
push
mov
into
pusha
out
push
int
out
fsubrp
stos
lret
popa
mov
and
mov
repnz
movl
mov
push
sbbl
aad
mov
iret
push
lds
push
dec
inc
repz
pop
push
jmp
seto
push
mov
dec
xchg
mov
lret
push
addr16
jbe
fistpl
cmc
frstor
out
dec
mov
inc
push
dec
dec
jmp
loopne
mov
addr16
pop
jge
rorb
adc
in
push
mov
xchg
inc
orb
imul
lods
mov
jl
les
mov
enter
fldt
popa
mov
insb
push
mov
test
lret
push
ret
adc
out
aad
mov
pop
fxch
rcr
iret
aad
in
ds
fcmovnbe
cmp
add
jmp
shlb
jg
aam
push
jge
call
in
mov
sahf
data16
adc
enter
mov
fidivl
loopne
inc
ja
outsb
pop
sahf
roll
dec
mov
aad
push
jle
out
in
jle
lret
xor
pop
fwait
notb
pop
rorb
das
fnstenv
les
loopne
or
cld
inc
inc
jge
pop
inc
jo
dec
imul
add
int
fwait
pop
aam
mov
cli
lahf
xchg
mov
ret
push
fisttpl
outsb
pop
gs
push
sbb
or
pop
das
popl
rolb
nop
dec
enter
ljmp
loop
mov
aad
cmp
pop
js,pt
pop
clc
mov
adc
rorl
insb
vminpd
out
popa
inc
jno
dec
test
imul
stos
push
jl
pusha
inc
dec
push
dec
sbb
rol
fstpl
int3
inc
dec
call
rcr
fimuls
jmp
je
and
call
int3
daa
out
icebp
push
fistps
loope
adc
pusha
aad
push
cmp
dec
lds
cld
pop
xchg
lret
inc
lcall
fsubrl
mov
jae
lret
data16
cmc
jmp
sbb
jl
andl
fcompl
leave
out
mov
and
mov
decb
es
and
sarl
imul
cmp
call
mov
fstpt
push
test
dec
imul
cli
test
popf
pmaxsw
pushf
js
add
pop
sahf
movsb
mov
add
ret
mov
pop
dec
daa
imul
mov
loopne
and
inc
dec
fcmove
push
cmpsb
pop
or
shr
pusha
push
jle
fstl
pushf
pop
push
in
jmp
fxch
scas
jmp
jnp
push
adc
in
xchg
test
int3
inc
lret
aaa
inc
mov
imul
rcr
loopne
adc
jnp
inc
fcoml
int
adc
pop
mov
loopne
inc
cltd
cmpsl
mov
lret
in
push
in
inc
xchg
enter
inc
aad
xchg
pop
lea
pop
jbe
aas
mov
scas
fs
push
xchg
sub
inc
sbbb
fisubl
push
fstpl
pop
out
push
and
pop
fstp
enter
jg
pop
fstps
les
loope
inc
mov
mov
dec
push
xor
push
popa
cli
out
xchg
enter
iret
lds
sarl
fdecstp
pop
jp
xlat
popa
push
jecxz
inc
call
ds
aam
and
into
inc
jl
mov
filds
dec
fsts
leave
addr16
ljmp
lds
adc
nop
pop
bound
or
jno
or
push
xchg
pop
mov
cwtl
dec
xlat
les
jmp
dec
dec
subl
xor
inc
pop
dec
fucomip
lods
fndisi(8087
mov
push
test
jmp
pop
jae
gs
xchg
mov
fisubrl
pop
aaa
inc
sbb
leave
push
fld
aad
negl
adc
xchg
pop
testb
fiaddl
cmp
ljmp
mov
jmp
in
push
add
fcmovne
fstpl
jbe
in
dec
push
repz
xlat
gs
dec
lret
rorb
ds
dec
sbb
fstp
jns
and
mov
setnp
dec
jne
jmp
and
dec
pop
aam
lahf
enter
loopne
lret
in
push
add
jge
dec
mov
sub
dec
imul
mov
test
addr16
jecxz
ret
test
arpl
fisubl
aam
inc
out
xorb
pop
mov
mov
aad
aam
dec
pop
addr16
rcrb
and
fcmovnu
pop
sbb
insb
mov
popa
jae
into
mov
jge
cmp
leave
test
loopne
and
xor
shll
fbld
pop
lret
lahf
jg
add
dec
sbb
push
popa
repz
into
push
lret
jmp
repnz
les
divb
inc
bound
out
xchg
in
insb
ffree
cld
iret
push
imul
pop
dec
fdivrp
mov
out
inc
jb,pt
int
aas
jmp
inc
je
into
fistps
aas
outsb
or
xor
insb
jge
pop
push
ret
gs
fcmovb
xchg
sbb
inc
jge
popa
cmpsl
imul
int3
in
loopne
inc
repz
rcr
fisttpll
jl
leave
xorl
and
pusha
adc
xchg
into
dec
mov
jo
push
fsubrs
imul
rcrb
xchg
in
mov
pop
lret
fsts
mov
or
jae
fistps
aam
mov
dec
out
adc
sbb
lods
lcall
pop
mulb
fadds
mov
or
in
jae
pop
fldcw
inc
pop
jle
lret
mov
mov
ficoml
daa
dec
loopne
pop
inc
fcomp
sbb
fsubrs
adc
cltd
out
fiaddl
jmp
sti
pop
aad
movl
addb
pop
movsl
cmp
or
roll
or
aad
mov
aad
out
aas
inc
outsl
fcompl
jle
pop
fnstcw
pop
push
stos
add
push
push
les
insl
leave
mov
jae
cmp
pop
push
xchg
sbb
jno
loope
pop
pop
pop
push
push
xor
cs
insl
mov
sub
int3
and
lret
jo
pop
push
mov
in
into
movsl
fnstcw
out
cvtdq2ps
push
dec
dec
cmp
jg
fbstp
cmc
out
popf
mov
js
sub
pusha
jns
mov
ret
push
fldt
xchg
push
inc
aam
dec
xor
add
iret
sbb
xor
cmc
jmp
dec
inc
mov
int3
test
pusha
add
lods
leave
and
pop
gs
add
rcrb
out
pop
mov
pop
inc
aad
fisttpl
call
jne
mov
test
push
rorb
lret
pop
les
loop
jae
aad
popa
cli
push
lret
cwtl
fstpt
shrb
adc
aaa
jbe
jp
pop
xchg
mov
movsl
sub
int3
lret
idivb
jb
push
fistpll
int
push
leave
loopne
outsb
adc
sub
push
shlb
or
push
out
icebp
cmp
test
mov
aas
mov
inc
sti
lret
lret
mov
add
loopne
push
in
pop
shll
pop
add
mov
mov
pop
dec
and
add
push
out
push
out
add
push
jmp
out
sarb
in
or
pusha
push
leave
push
pop
lahf
mulb
fsubs
xchg
imul
xor
xchg
push
push
fisttpl
outsl
shrb
mov
jmp
dec
mov
push
ror
mov
inc
jle
push
lds
adc
dec
rcrl
ss
testb
add
into
pop
aas
mov
or
jle
int3
pop
fisttpl
dec
push
mov
movsb
fcompl
pop
jbe
jne
pusha
dec
fisttpll
je
aam
push
mov
out
bound
aad
imul
push
xchg
xlat
push
test
dec
xorl
rolb
push
daa
cmp
iret
jmp
fisttpll
test
int
loope
mov
fldcw
rcl
pop
inc
test
iret
xchg
dec
int
mul
cltd
dec
mov
aad
add
push
or
mov
dec
mov
rorl
addr16
cmpsb
lods
roll
enter
cmc
pop
mov
and
imul
mov
mulb
insl
popa
out
pop
adc
sbb
push
dec
int
and
mov
mov
inc
arpl
or
fs
xchg
dec
in
and
xchg
in
dec
or
cltd
pop
daa
jle
lret
inc
ds
int
aam
push
fisubl
xorl
adc
mov
mov
lret
push
addb
mov
out
mov
inc
jl
int3
add
ror
fdiv
fimull
negb
sub
bound
js
jmp
gs
test
mov
cmp
mov
push
dec
pop
push
xchg
mov
mov
jae
pop
dec
dec
popa
cmpsb
in
xchg
into
test
jge
pop
imul
loope
insb
fnsave
int
dec
int3
lahf
dec
shll
in
pop
enter
les
int3
or
fmuls
push
in
inc
dec
aam
int
in
leave
or
hlt
lods
lods
adc
jmp
pop
dec
jno
push
aad
mov
push
inc
push
sbb
and
or
pop
or
dec
cltd
shrb
xchg
es
clc
dec
rolb
ljmp
addr16
lret
shrl
int
dec
dec
or
sbbb
les
jmp
movsb
test
stc
mov
sarb
aad
xchg
xchg
inc
pop
lcall
or
add
mov
jp
pop
xchg
addl
dec
gs
add
push
dec
xlat
push
mov
sub
pop
int
sbb
add
int3
dec
or
icebp
out
inc
pop
mov
mov
rclb
les
lret
aam
and
pop
pusha
int
add
les
data16
cs
and
out
ds
xor
inc
iret
mov
outsl
int
cltd
xor
clc
mov
sub
fldcw
jmp
outsl
jecxz
xlat
out
loope
xor
jg
aad
push
fisttpl
adc
enter
add
fimuls
pop
movsl
ds
leave
jg
push
loopne
inc
popa
xor
jecxz
xchg
int
out
flds
repnz
call
shrb
imul
mov
in
int3
mov
pop
push
dec
pop
jl
lret
jl
xlat
cwtl
jbe
jge
pop
mov
pushaw
insb
pop
mov
mov
pop
adc
cmpsb
lock
xchg
mov
push
enter
dec
lret
into
js
jg
out
sub
roll
fildl
xchg
pop
xor
iret
push
pop
mov
dec
pusha
test
test
pop
dec
sbb
push
push
fistpll
filds
cld
std
aas
in
mov
mov
dec
into
cwtl
rorb
push
iretw
fst
inc
out
int
in
dec
xchg
add
inc
push
int3
dec
pop
dec
fs
push
sbb
cld
pop
push
ds
rcrb
mov
dec
cmp
mov
shll
fmul
fldl2e
addr16
mov
pop
aad
in
loop
cltd
cwtl
rcrb
into
adc
mov
scas
dec
push
inc
data16
out
xchg
pop
sbbb
fsubl
fsubs
lds
mov
xchg
or
out
pop
dec
cwtl
xchg
fstps
imul
mov
xchg
nop
rcpps
pop
lea
and
pop
in
lret
inc
aad
fists
pop
pop
and
pop
xchg
dec
loopne
mov
out
rcll
dec
pop
fcmovnb
imul
sbb
js
cmpb
loopne
iret
scas
jbe
fimuls
pop
mov
fcom
negl
and
mull
les
xlat
popa
scas
jmp
in
mov
mov
sub
xor
xchg
jl
dec
cli
pop
xchg
ljmp
push
xchg
bound
test
in
mov
jle
xlat
dec
aam
out
and
imulb
push
popa
inc
aad
push
push
fidivrs
inc
leave
enter
out
leave
scas
pop
aaa
leave
jne
fimuls
imul
jge
push
shrl
pop
pop
in
pop
popf
mov
les
pop
jmp
test
fistpl
add
out
lret
jne
dec
int
loopne
popf
lret
mov
mov
jp
add
add
fisttpll
jae
dec
dec
cmp
int
insl
adc
addb
stos
jbe
add
lret
push
popa
addr16
fmull
push
xchg
fsubrs
or
dec
movsl
sub
cli
das
dec
and
insb
dec
lret
sub
orl
iret
fldl
lret
push
fcmovu
test
cmp
fistpl
pop
cmp
out
cmp
movsl
xor
mov
sbb
mov
imul
fimull
in
addr16
push
dec
mov
or
and
pop
loop
gs
orl
popa
rcl
leave
enter
push
dec
mov
loopne
shll
inc
int3
inc
dec
sbb
jo
and
push
gs
add
fistl
fnsave
aad
jmp
leave
and
loopne
arpl
or
pop
arpl
add
mov
out
inc
jl
jnp
mov
ret
loope
call
adc
insb
nop
test
dec
add
stc
mov
shrl
jns
insb
ss
aaa
and
pop
mov
leave
add
push
fisubl
mov
data16
lret
iret
loope
rclb
pop
ficomps
imul
push
outsl
pop
lds
pusha
enter
pop
mov
stos
pop
call
stos
imul
addr16
xor
push
loopne
sub
inc
lods
in
dec
insb
add
dec
fcom
inc
or
inc
int
enter
cltd
lret
xor
shr
dec
gs
mov
out
mov
imul
imul
cmp
push
aam
jp
pop
dec
fstps
data16
in
pop
loopne
pushf
addr16
gs
dec
add
inc
xchg
xchg
movsl
dec
lds
ffreep
adc
imul
jg
fstpl
bnd
notb
mov
sub
shlb
ss
and
lret
stos
fwait
nop
iret
push
push
adc
mov
mov
stos
pushf
mov
mov
sub
scas
dec
xchg
xchg
push
fs
inc
push
cs
fisttpl
xchg
push
shlb
xchg
add
xlat
jmp
mov
push
aam
cmpsb
push
ds
call
or
sbb
pusha
icebp
out
lret
iret
leave
ljmp
mov
test
movsl
or
leave
fsubrl
iret
mov
call
pop
adc
sbb
pop
lods
pop
iret
pop
dec
repnz
cmp
clc
test
sbb
dec
push
pop
insb
popa
xor
dec
outsl
iret
rcr
enter
iret
dec
pop
cmp
into
jno
mov
hlt
pop
cwtl
cmp
inc
ljmp
dec
push
leave
pop
pop
imul
ror
testb
pop
jb
iret
rorb
or
pop
dec
int3
nop
into
fldcw
push
adc
loope
leave
or
ret
xlat
dec
js
inc
repz
dec
mov
mov
mov
negl
pop
xchg
push
imul
add
lret
in
int
iret
movsb
cmc
wbinvd
pop
icebp
mov
pop
add
sbb
cmp
int
fdivl
cmp
dec
repnz
aad
imul
cmp
out
je
pop
cli
aam
dec
cmp
outsl
mov
aad
negb
lods
mov
int
pusha
inc
leave
fcmove
add
stos
call
push
adcb
test
cmp
push
push
jmp
sbb
push
dec
sbb
push
and
aam
fistps
push
imul
pop
mov
inc
lea
sbbl
push
test
nop
jp
loop
xchg
dec
jbe
pop
js
jb
ss
js
jle
push
dec
jl
out
pusha
push
mov
stos
pop
dec
xorl
dec
cmp
les
xlat
dec
push
mov
xor
push
fisttpl
test
dec
mov
push
popa
jg
push
inc
and
cmp
dec
and
push
and
cmp
data16
sti
rclb
psllw
mov
push
loop
lds
push
les
jg
pop
cmp
add
test
and
pop
iret
cmp
dec
imul
jne
pop
enter
xlat
outsb
inc
fldenv
aad
stos
dec
dec
lret
mov
pusha
dec
sbb
add
es
push
mov
cmp
dec
ret
mov
call
loopne
scas
mov
or
sbb
pop
test
xchg
push
sub
mov
fs
fisubs
fisubl
sbb
push
aad
pop
test
ret
andb
push
push
xchg
iret
fldcw
das
data16
pop
jns
lret
fists
rcr
jae
jecxz
push
faddl
mov
iret
icebp
sub
or
push
or
sbb
add
sti
iret
pop
loopne
mov
clc
pop
jg
push
xor
xlat
pop
fmuls
hlt
int3
push
push
mov
push
xlat
scas
cwtl
notrack
out
clc
sub
scas
dec
aas
sbb
push
aam
cmp
cmc
loopne
jle
pushf
mov
adc
pop
dec
inc
out
rorb
roll
movsl
clc
jg
dec
into
jge
fstpt
aaa
int3
insl
cmp
inc
test
fisttpl
pop
rorb
fldl2t
sbb
dec
movsl
dec
fcmovnu
iret
push
mov
loop
xchg
jl
movsl
call
sub
mov
pop
mov
xlat
ret
inc
add
push
gs
pop
es
add
and
into
pop
int3
aad
mov
jbe
push
enter
loope
fimuls
pop
data16
jmp
xchg
pop
cmp
ror
pop
push
hlt
xchg
add
jmp
loopne
and
jno
lahf
dec
dec
test
inc
aam
or
lahf
addr16
ljmp
dec
out
dec
les
arpl
lods
jno
lds
mov
or
pushf
fcmovnbe
sbb
dec
pop
pop
pusha
push
cmc
push
inc
mov
out
fst
push
and
adc
pop
inc
fimull
inc
mov
inc
ljmp
fsubl
push
push
inc
arpl
inc
push
xchg
rolb
lahf
push
fxch
test
add
xchg
leave
xor
mov
cmp
dec
lods
mov
push
xchg
data16
sbb
push
inc
outsb
xlat
sbb
fsts
rcrl
cmc
ror
out
in
pusha
mov
dec
pusha
push
dec
pop
push
dec
dec
dec
roll
popa
out
data16
xlat
dec
aam
mov
dec
push
adc
xchg
dec
mov
dec
push
xchg
fisubrs
in
sbb
push
fs
lret
pop
mov
cmpsl
xchg
repz
cmpb
jb
fldcw
aad
jb
fadd
and
jg
insl
push
fnstenv
test
sub
pop
jge,pt
dec
and
jmp
test
pop
lret
sbb
aaa
popf
lret
push
gs
in
fstpl
enter
dec
push
faddl
dec
ljmp
add
push
dec
les
pusha
jb
xlat
cmp
es
lret
add
push
out
dec
dec
loop
fsubl
push
loopne
imul
fsubl
cmp
rcr
in
filds
repnz
addr16
int
das
lret
xor
ficomps
out
add
pop
clc
addr16
scas
pop
pop
and
cli
push
dec
leave
fmulp
gs
mov
test
out
lds
test
addr16
test
hlt
dec
popa
mov
nop
loop
sahf
jp
dec
push
out
mov
fistpl
outsl
pop
push
mov
icebp
dec
int3
push
pop
mov
lret
lret
mov
jp
jb
sub
loopne
lret
rcll
aam
pop
shr
loope
pop
pop
fdivl
pop
imul
push
nop
aad
daa
pop
dec
dec
push
adc
test
pop
cmp
enter
and
dec
xchg
loope
lds
pop
ret
push
mov
pop
fmuls
loop
inc
fistps
push
mov
fnstenv
out
addr16
push
dec
and
pop
enter
jge
les
ds
pop
mov
fisttpll
icebp
es
mov
addr16
enter
adc
lds
xor
test
jo
imul
out
mov
popa
addr16
repnz
pushf
ficompl
sub
dec
lds
shlb
in
outsb
push
ret
sub
lahf
loop
pop
push
movsb
js
jg
fsubs
lea
lcall
dec
loopne
aad
inc
mov
loop
xor
pop
jne
inc
cmp
scas
pop
jge
xchg
out
inc
in
cmpsb
or
out
fucomip
pop
push
stc
push
out
cld
gs
pop
lds
gs
cltd
push
inc
xlat
mov
adc
leave
adc
rcr
out
dec
push
push
cmpl
aam
cmp
push
mov
out
xlat
xor
and
mov
push
pop
inc
push
addr16
pop
inc
adc
lods
mov
sub
in
out
pop
inc
faddl
push
hlt
sbb
mov
push
jmp
neg
jl
iret
jg
fadds
dec
inc
jno
mov
inc
dec
cmp
call
int
xchg
xor
jae
imul
enter
aad
fsub
ljmp
push
ds
adc
or
xchg
lea
dec
aam
jmp
out
xlat
outsb
cld
pop
out
scas
repz
xor
pop
out
and
int
leave
dec
imul
add
rcrb
into
out
dec
pop
lock
notb
dec
xchg
leave
imul
daa
and
gs
push
stos
pop
push
outsl
inc
xchg
push
int
mov
sarb
lret
pop
dec
push
fnstenv
insb
sbb
mov
jge
loopne
dec
out
dec
pop
call
fstpt
out
lock
int
iret
jle
inc
pop
insl
cli
fstl
dec
push
adcl
icebp
int3
fcmovne
pop
mov
pusha
outsl
daa
addr16
xchg
ret
decb
mov
inc
test
out
dec
push
enter
aam
mov
dec
fcomi
and
iret
mov
movsl
pop
mov
popa
push
fists
dec
push
out
pop
dec
dec
mov
inc
lds
lret
leave
pop
pop
dec
sub
inc
and
cs
inc
jmp
fcom
insb
add
imul
fisttpl
jbe
push
jge
mov
stos
aad
xchg
popf
lds
fisttpll
mull
rcll
test
inc
xlat
mov
push
into
cmpsb
test
insb
stos
dec
in
jbe
jl
gs
in
xchg
out
lahf
shll
sub
in
jae
ss
mov
jmp
js
jbe
shlb
and
push
mov
mov
dec
pop
mov
imul
dec
inc
xchg
pop
pop
dec
pop
mov
andl
fcomps
int
jle
lret
sbb
popf
push
sbb
dec
test
and
dec
pop
cmp
aam
fistl
cld
stc
lock
lcall
daa
jle
pop
fcomi
adc
push
sub
cmp
aad
shl
imul
sti
ljmp
inc
pop
lret
cmpb
in
pushf
shlb
mov
shrl
push
push
fimuls
push
sbb
push
in
scas
notl
pusha
xor
mov
and
dec
in
dec
xchg
sbb
fcmovnbe
inc
lret
dec
insb
sub
dec
icebp
cwtl
mov
mov
stos
inc
aad
pop
jbe
pop
or
jno
add
in
test
jbe
rorb
mov
fnstsw
mov
fmuls
shlb
mov
subl
fistpl
aaa
jmp
test
int
sti
rcl
iret
mov
movsl
push
mov
nop
call
jne
fisubs
adc
dec
cmp
shll
pop
loop
fcomp
ss
lea
sarl
fistps
push
enter
dec
out
dec
fninit
leave
aam
jmp
push
int
rcl
dec
inc
dec
mov
jmp
enter
pop
pop
roll
jge
out
fildll
dec
push
call
pop
ret
enter
pop
out
cmp
fiadds
dec
loopne
mov
jmp
jae
lds
push
les
xor
stos
cmpl
push
add
fcomp
rcr
push
pop
xor
scas
mov
xor
fadds
dec
inc
pop
dec
sahf
loope
inc
pop
cld
xlat
sub
mov
pop
xchg
insb
out
imul
xor
pop
lret
dec
fsubs
pop
ja
xor
dec
pop
dec
push
lods
ret
or
xchg
adc
mov
pop
fmull
xor
inc
push
sbb
xchg
push
lods
mov
fidivrl
cltd
sub
icebp
dec
ret
pop
jg
push
out
adc
ss
jo
dec
jmp
loope
push
jl
inc
insb
dec
jp
push
test
mov
mov
test
loop
push
dec
dec
ljmp
sbb
pop
fdiv
sub
dec
mov
cli
dec
dec
or
in
add
imul
sbb
xchg
repz
daa
sbbb
addr16
stos
aaa
sbb
outsl
xchg
dec
xchg
xchg
leave
push
push
inc
push
call
repnz
test
movsl
in
push
test
pop
push
pop
repz
push
pusha
push
dec
das
test
and
push
mov
jle
inc
fs
xchg
jbe
dec
fadds
test
mov
popa
mov
push
sub
mov
inc
push
fucomip
sub
lods
xchg
inc
sahf
shrb
xor
icebp
lods
data16
out
xlat
imul
pop
xchg
ja
dec
xchg
push
push
out
enter
pop
push
add
push
lahf
loopne
push
mov
mov
fistpl
jecxz
cld
fistps
lcall
incl
push
sub
pop
lea
pop
or
xchg
push
arpl
push
out
aad
jb
jmp
loope
mov
add
shrb
arpl
and
rcll
dec
mov
mov
fsubp
lret
rorb
pop
mov
sbb
dec
imul
sub
mov
push
mov
int
aad
rcll
push
mov
dec
xlat
mov
xor
lcall
test
int
popa
inc
fcmove
fs
ljmp
js
dec
subl
or
lcall
inc
pop
aam
fisubl
push
mov
addr16
pop
iret
data16
cmp
add
inc
inc
popa
push
push
jge
fstp
rclb
call
pop
shl
nop
jns
lock
cmpsl
in
push
rorl
scas
out
int
in
mov
clc
enter
pop
sbb
push
dec
out
imul
out
dec
out
dec
dec
loopne
or
sbb
jg
call
repnz
fcmovnu
mov
stos
leave
pop
aad
sbb
loopne
lds
push
imul
push
inc
cmp
cli
outsl
lahf
in
inc
ss
pop
imul
mov
and
and
in
call
jmp
and
shl
push
fisubrl
cmp
push
pop
pop
sbb
pushf
popa
jno
leave
jbe
ljmp
jge
data16
popf
cld
dec
out
push
aaa
adc
adc
loope
pop
pop
clc
lret
int
stc
rorl
mov
movsl
sub
int
in
testb
mov
cmp
jg
fiaddl
fbld
jmp
dec
icebp
jne
test
filds
fstpt
push
dec
jmp
jge
aad
mov
loopne
sub
pop
out
inc
scas
pusha
das
add
and
addl
push
push
loopne
fsts
inc
adc
ficomps
mov
leave
pop
dec
loopne
xchg
divl
cmp
push
fcomps
shlb
push
into
les
xorb
pop
mov
into
inc
leave
fistps
push
movsw
fbstp
mov
arpl
jbe
int3
mov
loop
dec
bound
into
pop
out
neg
loop
fnstenv
sub
js
push
lret
ljmp
add
imul
xchg
fisttpl
in
iret
shlb
insb
jmp
fcompl
dec
and
push
enter
cli
out
aaa
pushw
stos
repnz
push
inc
iret
movb
xor
dec
leave
lret
insb
inc
pop
iret
dec
gs
jmp
dec
mov
push
js
test
mov
jp
add
les
nop
mov
loope
dec
jmp
dec
cmp
pop
fadd
in
xchg
outsl
ret
rolb
movsb
adc
pop
inc
test
fcmovnu
xchg
sbb
pusha
out
cs
xor
pop
inc
mov
aad
push
js
faddl
fists
nop
sub
lret
fstp
and
imul
ret
push
ficomps
leave
cltd
in
mov
xchg
cmp
and
shrb
push
jle
pop
insb
pusha
fcmovu
xchg
add
aas
sbb
adc
mov
test
gs
iret
inc
mov
inc
movsl
xlat
dec
test
add
pop
cli
add
cli
mov
push
pop
xchg
inc
pop
loop
insb
subl
lcall
outsb
out
pop
outsb
jge
add
fcmovnb
fimuls
shll
jle
jmp
loopne
shl
dec
cmp
stc
idivb
dec
dec
push
cltd
filds
xchg
int
ss
pop
fadd
int3
aad
dec
xlat
fistl
gs
shrl
ret
mov
pop
pusha
test
pushf
jbe
leave
les
fwait
hlt
divl
jne
bnd
jg
dec
shlb
push
popf
icebp
pop
lret
arpl
cmp
inc
in
jecxz
and
dec
leave
push
fcmovnu
sti
fnstsw
xchg
das
xchg
loopne
pop
ficoms
push
shl
mov
cmpsb
push
ljmp
sbb
mov
push
dec
call
in
out
popl
lret
sub
mov
es
iret
aas
in
out
lahf
clc
or
jmp
into
outsb
fsts
sub
pop
cmp
movsb
fcmovnbe
icebp
das
les
ret
jmp
gs
jae
scas
fldcw
add
decl
mov
imul
xchg
or
fnsave
gs
pop
lret
lds
and
inc
pop
dec
nop
leave
push
mov
push
rclb
push
negb
idivl
mov
lahf
gs
fucomi
imul
lds
jp
les
mov
into
dec
pop
int3
xchg
and
jmp
outsl
push
inc
ljmp
sbb
lods
dec
mov
arpl
inc
bound
pop
daa
mov
rcl
adc
dec
push
fadds
mov
pop
aas
mov
test
pop
and
gs
imul
lahf
mov
test
add
push
pop
dec
rolb
dec
sahf
dec
mov
int
iret
cmp
aad
js
test
and
push
movsb
rcrl
or
jnp
jl
jmp
xor
add
and
jno
icebp
lahf
lret
in
fcoms
fistpl
std
dec
out
fucomip
in
cmp
mov
call
dec
push
cmp
push
push
addr16
sbb
sub
pusha
fists
inc
aam
cwtl
adc
filds
pop
fbld
stos
negl
jmp
fcmovbe
movsb
mov
pop
push
aas
test
push
adc
dec
mov
int
mov
js
push
negb
idivb
mul
jae
out
shrb
mov
mov
jbe
xchg
push
pop
setp
loopne
adc
mov
dec
dec
sbb
test
mov
inc
xor
mov
enter
adc
aam
cmp
push
adc
lahf
xor
in
sub
in
xchg
pop
dec
call
lods
in
sub
imul
outsl
xchg
sub
imul
into
icebp
mov
notl
lds
pop
fistpl
push
in
fs
leave
movsl
fcoms
mov
loopne
push
push
sub
aam
jecxz
xchg
jbe
fcmovnu
js
jl
pop
test
mov
pop
ljmp
xor
fldenv
mov
popa
iret
push
pop
push
int
lods
insb
or
jl
jl
xchg
inc
pusha
fstps
dec
mov
out
pop
dec
xchg
imul
and
jbe
movsl
cmpsl
xor
fcoms
mov
push
shl
das
add
dec
les
push
pop
outsl
test
clc
leave
dec
clc
lret
add
pusha
pop
fisttpl
out
call
decl
pop
stos
lret
jge
push
rclb
adc
rcrb
mov
popa
mov
pop
out
rolb
inc
call
ret
cs
dec
outsl
into
push
movb
rcl
imul
push
ds
dec
addr16
test
fldt
lret
push
jb
add
mov
adc
shlb
dec
add
adc
dec
lret
clc
popa
cmpsb
loopne
in
sub
dec
in
addr16
lret
dec
inc
imul
outsb
jge
fnstenv
out
int
daa
out
lods
neg
mov
loope
xlat
pop
push
loop
inc
fdivrs
xchg
incl
pop
mov
movsl
mov
jg
push
mov
and
mov
mov
lret
movsl
cs
pop
dec
push
pop
ret
push
lahf
jmp
pop
cmpsl
sarl
in
dec
out
fistps
jmp
in
inc
cmp
adc
adc
fs
add
add
repz
aaa
ret
mov
in
adc
push
mov
fdivp
dec
fistpl
and
sbb
jbe
fimuls
or
push
pusha
add
vmaxpd
push
mov
pop
push
out
loopne
mov
mov
arpl
sbb
mov
inc
jl
jp
dec
stc
pop
lcall
call
aas
ljmp
ds
sub
repz
push
sbb
jno
cwtl
and
push
leave
roll
xlat
lods
loop
rclb
push
outsl
or
aad
dec
shlb
push
aad
mov
rorb
pop
fldenv
scas
mov
cmc
popa
fsubl
leave
adc
ret
pop
mov
gs
ret
xor
imul
fdivrs
inc
inc
stos
ret
cmp
sbb
int
ret
inc
jo
or
ret
and
and
ffree
rcll
mov
mov
les
jbe
out
mov
scas
mov
push
ffree
sbb
int
ret
dec
out
pushf
out
push
mov
pop
out
xchg
ret
xchg
cmp
sbb
int
ret
inc
jo
or
enter
mov
and
ffree
rcll
mov
mov
les
jo
out
mov
scas
mov
push
ffree
sbb
pop
clc
lea
out
dec
insb
leave
outsl
out
cltd
jo
xlat
sbb
sub
dec
gs
outsl
pop
jne
push
xlat
pop
dec
pop
jmp
call
fstpl
sbbl
pop
loopne
xor
ficoms
push
push
lret
aad
dec
imul
jl
fcom
mov
fcmovnb
insb
dec
pop
push
rolb
dec
jae
pop
rcrl
push
push
aad
pusha
mov
pop
dec
rolb
popa
inc
adc
inc
sbb
outsb
sub
cmc
push
imul
repnz
movl
ss
pop
fstpl
fiaddl
fucomip
pop
andb
cltd
mov
inc
add
fst
pop
push
xor
enter
je
insl
push
push
jl
loope
gs
dec
xchg
push
push
inc
stos
and
mov
inc
xchg
dec
int3
push
stos
add
imul
and
dec
out
dec
cmpsl
dec
pop
dec
int
dec
lods
aad
dec
movsb
add
xchg
mov
rol
mov
dec
insb
jne
shl
adc
inc
lret
mov
fadds
push
enter
out
mov
out
cltd
add
mov
xor
aam
or
insb
int
mov
add
inc
cmpsl
pop
iret
test
mov
cmc
mov
push
pop
mov
insb
aam
mov
hlt
pusha
loopne
mov
lods
icebp
inc
dec
adc
push
xchg
loopne
hlt
dec
in
cmp
mov
mov
jp
cmpsb
fidivrs
add
aam
xchg
orl
mov
in
loopne
int3
in
insl
dec
cmp
xchg
xor
mov
dec
movsb
cmpsl
mov
mov
mov
shll
scas
enter
call
add
out
das
je
fmull
cmpsl
inc
xchg
out
ja
mov
out
sub
jnp
in
nop
xor
inc
mov
mov
jae
sub
mov
mov
mov
imul
scas
inc
dec
sub
adc
and
nop
fnstcw
shll
out
or
out
scas
mov
xchg
fisubrs
pop
dec
lods
cmpsl
mov
inc
cld
out
sbb
jbe
jno
lea
mov
push
insb
lock
imul
int3
push
rclb
xchg
enter
jge
mov
shlb
adc
pandn
dec
fistps
dec
pop
fdivrl
jmp
repnz
out
fstps
addr16
data16
and
push
or
dec
pop
dec
mov
lea
push
loopne
pop
jmp
icebp
aas
dec
clc
into
gs
imul
rol
cmc
lds
push
imul
in
and
jmp
sti
inc
inc
pop
push
test
adc
inc
pop
mov
and
xchg
test
adc
movl
xchg
adc
lcall
repz
ror
dec
or
xor
push
int
xor
lea
inc
into
fs
and
push
in
arpl
enter
popa
or
dec
push
or
out
into
mov
mov
jle
lock
icebp
ret
jecxz
jno
aaa
mov
sub
in
into
loope
ljmp
lock
out
arpl
mov
mov
mov
ljmp
popf
out
mov
push
data16
and
cmp
out
jnp
lock
jecxz
pop
js
inc
xor
leave
fldt
cmpl
jle
jle
decb
leave
dec
leave
pusha
leave
int
dec
dec
push
ja
jle
sti
rcr
xchg
push
xchg
lcall
lahf
imul
out
loopne
test
ja
stos
in
dec
gs
pusha
cmpsb
cs
not
pop
call
mov
jbe
fldcw
test
inc
gs
jmp
and
popf
mov
out
pushf
data16
fsub
imull
jmp
inc
call
out
popf
addr16
out
data16
in
gs
negl
mov
and
mov
in
jmp
rcr
jmp
mov
out
enter
push
in
gs
aaa
idivl
out
jno
inc
mov
jno
inc
in
lods
mov
aaa
idivl
out
addr16
out
cltd
cmpsl
lea
rcl
fsubr
mull
test
aad
leave
mov
push
out
data16
movsl
imul
loop
pop
imul
loopne
out
out
pop
imul
fsubrl
push
lret
sbb
aaa
add
ljmp
mov
mov
hlt
in
iret
gs
fmull
mov
into
in
int
or
jbe
loopne
int
pop
gs
mov
pop
out
lret
lret
fsubrl
insb
int
insb
into
fsubrl
insb
rcr
insb
rcr
insb
fcoml
jl
fsubrl
call
pop
fcompl
addr16
ja
das
ja
ss
jnp
rcl
jbe
jmp
xlat
sub
fcomps
cli
pop
ja
jmp
xlat
sub
fmuls
pop
aaa
sub
xlat
xor
shll
sbb
shll
sbb
shll
sbb
shll
dec
pop
jno
jle
jg
push
fiaddl
mov
data16
mov
test
out
imul
imul
sahf
push
sahf
and
movsb
pop
out
lret
sbb
arpl
out
imul
lret
imul
sarb
fstl
push
repnz
in
in
jno
inc
in
push
insb
repz
mov
dec
ljmp
call
in
out
in
sahf
mov
push
popf
sbb
jmp
or
lcall
jmp
call
mov
jmp
jmp
inc
imul
imul
jbe
loopne
push
cmpxchg
xchg
mov
in
imul
and
les
shlb
push
imul
push
mov
das
test
or
dec
lods
mov
jl
rorb
jl
addr16
addr16
call
pushf
es
xor
scas
xchg
cmpsb
iret
push
xchg
lock
dec
pop
test
cs
or
mov
fstl
aaa
aaa
mov
call
push
aas
add
mov
leave
xchg
pushf
test
lea
in
mov
fdivrl
mov
mov
cld
les
and
cmp
ss
xor
mov
rclb
sbb
mov
bsf
jbe
ljmp
pushf
mov
ljmp
pop
imul
push
out
loope
icebp
dec
mov
fcmovb
cli
gs
lods
mov
out
xor
leave
dec
pop
lret
scas
sbb
scas
sub
or
imul
nop
jmp
cli
movaps
or
push
cwtl
cmp
pop
xchg
mov
imul
iret
lods
jmp
addl
std
shlb
dec
inc
in
jmp
jo
xor
xchg
imul
mov
jmp
cmc
jmp
outsl
data16
in
icebp
or
loope
pop
xchg
push
and
repz
lcall
js
shlb
push
ret
jmp
jmp
inc
fs
inc
cmc
fimull
xchg
cmp
lods
push
loop
imul
movsb
pop
push
das
pop
icebp
mov
aam
scas
jmp
shrl
aaa
test
mov
out
gs
outsb
mov
pop
insl
in
aam
imul
xor
and
repz
mov
gs
push
jno
pop
in
roll
inc
add
loopne
mov
xlat
out
out
hlt
aad
lret
dec
jecxz
lds
imul
xlat
jecxz
mov
mov
xchg
stc
rcr
mov
scas
insl
in
jns
push
mov
in
mov
fcoms
add
lcall
cltd
scas
ror
jecxz
rorl
shrb
mov
fnstcw
psubusw
in
cmp
push
shl
lcall
mov
addr16
idivl
xchg
cmc
int
loope
fsub
adc
cs
rcl
and
pop
sbb
mov
outsl
dec
stc
pop
js
dec
in
shll
mov
test
push
out
jmp
in
mov
mov
pop
test
out
lahf
in
mov
adc
and
imul
in
das
in
daa
dec
rorl
lret
mov
mov
loop
add
mov
xchg
jle
sub
lcall
movsb
xchg
cltd
lods
das
cli
push
sbb
pop
pop
scas
mov
clc
mov
addr16
int3
gs
in
cmp
xchg
mov
sub
jne
lods
rcr
not
outsl
in
out
punpckhbw
in
iret
repnz
fldl
repnz
xchg
call
addr16
lock
test
shl
mov
xchg
cltd
in
mov
out
hlt
or
dec
inc
aaa
popf
shl
shll
fbld
pop
stos
mov
aad
xor
jg
mov
xchg
insl
ret
test
push
test
in
mov
call
push
out
aaa
cwtl
int
ret
xchg
dec
in
xor
adcl
lret
int
mov
lods
enter
out
fnstenv
xor
jb
test
sbb
enter
lcall
test
sbb
xlat
loop
xchg
aaa
jmp
mov
out
iret
fnsave
pop
out
mov
pop
in
cwtl
loop
xchg
mov
fcmovu
into
movsl
inc
and
out
outsl
xchg
dec
xchg
ljmp
out
xchg
inc
sub
in
imul
push
mov
pop
int
mov
data16
dec
out
jnp
mov
shl
loope
dec
insb
int
rcr
dec
std
dec
in
fdiv
je
mov
insb
out
or
cmovg
xchg
mov
imul
in
aad
out
lock
xchg
mov
dec
fdivr
icebp
out
fisubrs
push
add
jo
mov
xlat
mov
scas
cltd
loopne
roll
fimull
arpl
pop
ret
in
fsubrl
mov
std
or
out
cmp
test
sbb
xchg
push
in
dec
xchg
fcmove
out
stos
jl
dec
mov
mov
addr16
mov
jecxz
sub
cmpl
mul
frstor
cmpsl
jl
jmp
stos
mov
mov
aad
jp
sub
mov
enter
in
mov
imul
dec
rorl
rorl
enter
dec
imul
cwtl
mov
rcl
int
loope
out
ret
push
fstsw
add
push
fidivrl
ljmp
or
sahf
insl
push
pushf
imul
es
xchg
loope
cmp
ss
out
repz
xor
mul
in
test
cmp
mov
dec
out
shrb
xchg
data16
mov
cmp
xlat
imul
xchg
dec
in
jmp
cltd
mov
pop
jmp
mov
stc
fisubrs
push
nop
loope
add
icebp
hlt
push
lret
mov
dec
xchg
fdiv
mov
cwtl
ret
xor
xlat
imul
daa
pop
cmp
lret
imul
and
in
out
ret
scas
in
jmp
test
jno
rcr
push
inc
leave
and
mov
cs
test
mov
pushf
repnz
lret
xchg
pusha
pop
icebp
jns
add
test
rcrb
mov
lret
add
adc
rol
mov
mov
mov
cmpsl
adc
jecxz
mov
jecxz
stos
ror
mov
in
mov
stos
stos
shr
fstpl
mov
mov
jecxz
xor
movsb
insl
out
mov
mov
popf
jecxz
pop
pop
stc
out
pop
in
mov
shlb
orl
rcrl
fdivrs
or
std
call
rolb
negl
jmp
loope
dec
enter
cmpsb
popl
jecxz
push
inc
mov
push
xchg
clc
in
aad
push
push
fdivs
out
inc
mov
cmp
fsubrl
and
xchg
inc
sbb
pop
pop
inc
lea
loopne
and
xchg
hlt
stos
adc
imul
fsubrl
std
in
sub
pop
fisubrl
shlb
in
sub
inc
dec
push
mov
mov
in
xchg
adc
loop
mov
sbb
fnstsw
out
ja
in
rcr
mov
mov
sub
mov
out
in
fidivrl
out
daa
dec
lret
shlb
insb
test
clc
cltd
repnz
lcall
cltd
out
cli
mov
pop
adc
jg
cmp
jns
adc
or
cmpsb
cmpsl
jge
data16
cmp
fs
stc
out
cmp
aas
nop
cmpsb
pushf
out
dec
jmp
lret
xlat
aas
out
push
mov
into
mov
mov
sbb
movsb
mov
stos
ret
cmpsl
mov
sbb
rol
mov
sub
repnz
jp
aaa
push
push
cmp
mov
fld
sub
call
fnstenv
xchg
mov
rcl
ret
mov
ficomps
inc
stos
flds
lock
push
insl
repz
cltd
lret
pop
shlb
ljmp
sarb
or
mov
repnz
inc
xor
in
jo
cmp
push
cmpsl
fisubl
std
out
rorb
and
mov
or
les
mov
push
clc
pushl
and
rorb
cltd
out
addl
insl
fstl
nop
in
mov
cmc
gs
out
test
ficompl
mov
fsubrp
xor
lods
mov
in
jl
push
imul
das
jge
dec
shrb
shlb
imul
sahf
or
imul
sti
push
shr
mov
fnstenv
gs
lods
mov
push
pushf
pop
leave
dec
mov
xchg
xchg
cmp
lods
push
gs
mov
movsb
cmpsl
icebp
in
cmp
imul
mov
xchg
repz
cmp
cmpsb
push
push
jae
shlb
cli
adc
outsl
out
lret
mov
addr16
jg
xlat
pushf
lds
test
mov
push
sbb
mov
mov
fcoms
call
mov
mov
lret
jle
pusha
pop
add
inc
lret
stos
data16
rcl
out
xchg
stos
sub
mov
hlt
xor
test
mov
in
cmpsl
nop
lcall
leave
xchg
sti
dec
nop
nop
out
lods
pop
int3
out
in
jmp
ret
lcall
dec
sbb
shl
call
or
data16
mov
out
mov
imulb
pop
sarb
lret
xchg
jmp
in
imul
cmpb
loop
pop
movsl
mov
sbb
imul
ret
mov
inc
mov
aad
cmc
sbb
aas
loop
lahf
mov
cmp
mov
loope
mov
pop
push
into
loop
mov
push
ret
xchg
push
test
out
hlt
outsb
addr16
stc
imul
in
movsb
inc
add
iret
addr16
aam
mov
jcxz
jb
ficoms
fidivl
gs
js
dec
gs
mov
pop
bound
cld
jecxz
or
loop
fld1
int
push
out
shr
xchg
pop
inc
pusha
mov
or
or
loop
es
push
fisubl
rcll
pop
or
loop
adc
pop
lret
mov
pop
mov
gs
in
out
daa
pop
mov
mov
jecxz
call
dec
cli
jno
loope
mov
dec
fmuls
adc
add
add
push
lock
repnz
cmpsb
ret
sub
push
out
xchg
xorl
arpl
addr16
loope
adc
dec
dec
ja
scas
stos
add
lret
add
jae
out
hlt
push
iret
dec
repnz
testb
or
and
in
cmp
add
mov
xchg
in
xorl
hlt
mov
rclb
mov
sub
packssdw
xlat
or
adc
daa
imul
jecxz
cmp
mov
jmp
cmp
xor
dec
loopne
or
jmp
pop
fwait
daa
scas
mov
jg
sbb
push
mov
push
data16
imul
cmp
pop
jbe
cmp
movsl
enter
cmpsl
test
rdmsr
std
outsl
ror
xchg
es
in
fwait
push
jl
ficoml
or
dec
mov
loopne
aas
xlat
push
inc
bnd
ret
sahf
test
mov
aad
rclb
mov
lea
push
fwait
mul
jae
pop
jge
lock
cltd
in
mov
pop
mov
mov
jg
pop
mov
pop
mov
insb
xorb
ret
fcomps
clc
out
xchg
ror
xchg
call
xchg
dec
push
push
mov
test
out
lahf
lea
in
adc
imulb
xchg
cmp
xchg
cmp
imulb
adcl
sahf
mov
inc
leave
jno
or
fsubs
pushf
gs
iret
out
enter
cmp
push
push
jecxz
call
ret
es
xchg
dec
callw
sbb
loope
push
movsl
nop
out
mov
in
test
push
lret
add
mov
pushf
lret
pop
rolb
cmp
inc
ret
ljmp
call
in
fcmovnu
dec
cmc
jl
push
std
mov
gs
cld
sbb
imul
test
xor
sub
cli
lods
rclb
jno
pop
push
mull
movsb
mov
js
xor
mov
fildll
pop
sahf
inc
mov
pushf
imul
call
loopne
lret
xor
xorb
mov
ret
rcrb
nop
cmpsl
insb
cmpl
inc
adc
jg
ret
test
in
rclb
movsb
test
mov
inc
loope
inc
test
cwtl
add
fidivrl
stos
mov
push
push
loopne
xor
cmp
fs
daa
lea
xlat
cld
adc
ss
loop
out
bound
mov
mov
out
mov
je
sarl
cmpsl
enter
ror
nop
fnstenv
scas
int3
push
mov
leave
and
pop
inc
xlat
sub
dec
jne
pushf
pop
mov
xchg
xor
cmp
jmp
lds
sub
in
lahf
or
popf
out
in
fs
or
xor
popf
out
mov
sub
mov
insl
icebp
mul
int
xor
mov
lahf
out
int3
mov
sti
push
call
fdivs
push
push
testl
cmp
dec
in
push
icebp
mov
lret
pop
ficompl
in
xchg
cs
push
jno
mov
fwait
push
in
lret
int
into
cmp
pop
pop
js
lahf
lea
pushf
mov
xor
lret
push
enter
adc
cmp
sbb
fstl
ret
mov
dec
add
data16
cmpsb
std
sbb
xlat
aaa
je
mov
jl
aaa
in
jl
mov
and
jne
bswap
jmp
call
pusha
mov
mov
jmp
or
je
pop
inc
dec
mov
ja
xor
das
mov
cmp
stos
push
mov
arpl
adc
mov
sti
lahf
cmpsl
push
stos
xor
xor
lret
lcall
mov
cmc
pop
aad
mov
fsubr
imulb
movl
call
inc
push
mov
pusha
pusha
inc
pushf
push
pushf
lea
jmp
test
stc
mov
repnz
movb
push
pushf
mov
lea
jne
shrd
cmp
rcr
mov
bsr
and
cmc
sub
btc
not
mov
jmp
call
push
sub
cmpsb
arpl
int3
ret
leave
mov
mov
cmp
lods
mov
push
cmp
cwtl
inc
popf
jmp
jl
inc
fnstenv
sub
in
pop
mov
cli
incl
add
imul
jae
rep
movl
mov
mov
pushf
lea
jmp
movl
pushf
pushf
pusha
movw
lea
jmp
pusha
jmp
ljmp
int
ret
ds
push
cmpsb
fiaddl
outsb
cld
sarl
xor
in
sub
adc
pop
mov
pop
xchg
repnz
mov
or
mov
xchg
sarl
aam
mov
mov
shufps
gs
mov
jp
adc
ret
push
mov
xchg
jo
sub
mov
aaa
ds
scas
add
sti
test
test
aam
xor
int3
adc
sbb
mov
pop
and
test
jnp
aam
lcall
test
loop
ss
rcrl
jle
fisubrs
inc
push
mov
icebp
inc
xchg
jno
call
inc
shl
mov
xchg
shrd
mov
not
sub
add
mov
cmc
jmp
pusha
call
cmove
sbb
jecxz
cmp
test
js
mov
dec
jmp
jl
add
iret
mov
jo
mov
add
pusha
nop
aad
cmp
and
data16
andb
or
adc
stc
mov
xchg
lock
adc
out
jb
xchg
xor
cmc
adc
pop
test
xchg
sbb
push
cmp
sub
mov
idivb
idiv
mov
stos
ror
fistpll
add
cwtl
rorb
mov
ss
pop
iret
fcom
aad
jne
pop
fistpll
mov
cmp
or
sbb
adc
popa
xchg
gs
loop
adc
addr16
adc
jbe
add
add
add
xor
dec
in
mov
push
call
imul
ds
inc
pop
and
ret
cmp
mov
std
nop
insl
movsb
mov
insb
jne
add
int3
vpand
test
adc
pop
and
xor
cli
aad
jmp
icebp
int
pop
cltd
loopne
pop
dec
std
mov
insb
in
add
sbb
cmp
and
push
cmpsl
sbb
out
out
arpl
fwait
xor
daa
bound
fimull
insl
fsts
dec
push
jle
and
jb
ss
or
ljmp
jle
sti
push
xchg
add
and
pusha
cmp
adc
rcl
mov
mov
fs
dec
fs
les
pop
sbb
repz
jg
mov
inc
xlat
outsl
repz
filds
cs
xchg
mov
lea
fwait
jp
or
jb
pushl
lock
lahf
dec
enter
std
jge
mov
mov
mov
lcall
ret
push
pop
rcrb
pop
jae
dec
mov
jnp
pop
push
or
cltd
mov
fsubl
mov
adc
mov
ficompl
push
es
jg
xchg
xlat
addr16
fwait
or
ret
push
scas
sbb
dec
sbb
or
pop
outsl
pop
aam
addr16
int
sbb
inc
pop
xor
shrl
or
pushf
popa
jp
jns
mov
dec
imul
sbbl
mov
mov
jnp
adc
imul
ljmp
lock
pusha
jnp
inc
les
cmp
adc
mov
sub
pop
sub
sbb
inc
sub
xchg
jle
lods
mov
add
dec
popf
call
adc
bound
mov
aas
sub
ss
push
xchg
js
imul
add
in
jmp
push
mov
and
dec
and
aad
ret
lea
sti
call
stc
sub
test
sub
and
or
push
mov
ret
mov
add
pop
into
add
in
test
ja
lret
insb
es
xchg
sub
call
xor
push
adc
dec
add
mov
loope
enter
mov
out
fcompl
push
loope
adcb
jecxz
cmp
ret
insb
mov
adc
and
dec
jb
adc
divb
jecxz
test
cltd
aas
ret
mov
push
lods
adc
notl
shlb
xchg
int
pop
push
cs
push
xchg
sbb
lret
sti
inc
pop
movsl
or
mov
int
insl
push
daa
inc
jnp
loope
cmp
mov
jp
rcr
mov
cli
incl
call
movb
cld
out
outsb
dec
scas
pop
arpl
mov
ja
push
inc
or
pop
push
lds
push
xor
dec
jg
or
dec
adc
je
and
mov
out
or
stos
call
test
ficoml
pushfw
mov
scas
cmp
pusha
pop
mov
out
and
mov
xchg
aam
imul
imul
pop
jmp
mov
mov
popf
adc
mov
iret
inc
loope
repnz
inc
mov
pop
insl
je
mov
rol
add
pop
pushf
lea
call
cmc
pusha
cmp
movb
lea
jae
cmc
bt
stc
test
cmp
call
not
mov
push
lods
call
movzwl
movsbw
not
pusha
lea
movzbw
movsbl
pushl
mov
lea
jnp
pushf
lea
call
call
or
insl
xor
nop
mov
aaa
xchg
test
xlat
stos
dec
sarl
adc
jbe
aaa
loopne
stc
test
pop
loopne
cmp
push
mov
arpl
mov
aas
xor
dec
cmp
inc
fdivl
xlat
clc
jge
dec
mov
sbb
push
movsl
adc
mov
dec
jmp
jmp
cmp
push
cmc
or
push
call
cmc
jne
or
clc
lcall
dec
negl
shrb
cmovp
ja
adc
inc
fistpl
jmp
iret
ja
scas
fisubrs
rcll
aaa
scas
xor
ds
push
scas
cmpsb
loope
je
mov
in
mov
lock
xor
scas
xor
leave
cmp
xchg
push
xor
mov
in
cmc
loopne
cmp
push
cmpl
aad
fnstsw
jl
add
arpl
xchg
and
dec
mov
xchg
arpl
push
mov
pop
pusha
mov
pusha
pushf
pushf
push
lea
jmp
gs
dec
adc
rorb
test
mov
push
xlat
jg
scas
adc
or
test
jle
cmpsl
ds
movl
ficoml
fwait
sub
mov
jle
pop
jge
mov
cmp
hlt
cld
shlb
adc
fstps
in
mov
sti
xor
inc
or
or
aad
jne
cmp
cmp
in
cli
mov
cwtl
mov
pop
jp
hlt
js
xchg
pop
in
dec
push
scas
xor
fdivrl
mov
sub
push
mov
fwait
cli
pop
hlt
xchg
inc
loopne
fists
adc
aam
inc
outsb
jo
and
add
ffree
stos
push
inc
xlat
mov
cmp
pop
das
sub
jnp
add
mov
hlt
inc
shll
fmull
pop
ret
inc
stc
cwtl
in
sbb
test
icebp
mov
in
and
push
repnz
push
das
add
das
mov
and
movsb
call
mov
les
insb
fcomps
int3
sub
mov
imull
mov
pop
sbb
adc
push
add
push
arpl
ds
cli
stos
ds
push
mov
outsl
not
push
jmp
lds
popa
push
mov
xchg
push
push
data16
cmp
xchg
push
fmull
mov
popa
aad
inc
or
jge
enter
inc
fidivs
inc
ficomps
scas
mov
xor
std
xchg
sub
mov
roll
call
sbb
or
stos
cmp
out
mov
mov
xchg
popf
pop
pop
call
cmp
iret
cmp
v4fnmaddps
loop
cmp
movsb
mov
jb
cmpsb
mov
ret
mov
hlt
lea
int
and
mov
mov
cmp
jp
daa
mov
pop
sahf
popf
cwtl
mov
movsb
pushf
push
pop
pop
divl
sahf
ljmp
leave
lods
das
jle
cmp
in
mov
mov
or
inc
push
aaa
prefetchnta
call
and
mov
mov
loope
addl
pop
popf
out
add
mov
inc
pop
jnp
loop
daa
xlat
shll
pop
iret
into
push
fistps
rorl
or
sbb
scas
stc
loope
pop
in
in
mov
xchg
movsb
sbb
aam
xor
mov
fs
xor
cli
outsb
mov
ss
sbb
ret
mov
mov
jae
test
cmp
shll
dec
lock
inc
dec
sub
inc
xor
repnz
mov
loope
int
clc
push
mov
jecxz
jnp
bound
mov
inc
aaa
outsl
sahf
mov
lahf
mov
andl
push
sti
outsl
fwait
das
dec
fidivl
mov
jl
fcmovbe
mov
jnp
or
js
les
jno
mov
mov
and
jb
or
sub
call
xchg
stc
pusha
cmp
mov
jae
dec
xchg
popa
inc
pop
jl
push
adc
imulb
ret
mov
push
insb
xor
jae
jg
and
lahf
aad
fdivs
mov
jne
xor
mov
jle
xchg
cmp
mov
js
add
lahf
nop
add
push
pop
cmp
out
push
push
pop
dec
cld
mov
popa
and
hlt
cmp
das
jmp
out
lds
dec
out
mov
cwtl
ljmp
pop
outsb
sbb
outsl
lahf
pop
sub
lods
in
or
pop
icebp
cmp
cwtl
mov
stmxcsr
xchg
mov
ret
xor
cmp
sbb
mov
movsl
pop
or
xchg
sarb
dec
push
push
push
ficomps
push
push
push
outsb
jbe,pt
pop
sub
fdivrp
xchg
cmpsl
inc
daa
or
stos
mov
stos
cmp
jg
sahf
int
jle
sbb
seta
add
imul
cmp
pop
fisubrl
std
inc
sub
ss
pop
popa
inc
pop
rclb
mov
jle
mov
push
enter
movsb
lds
cmp
aaa
test
jnp
push
jbe
mov
xchg
data16
sub
shr
sub
add
rcr
movzbw
sar
sar
push
push
or
lea
aad
bts
push
sar
sub
setle
shld
rcl
push
cmc
movsbl
sar
push
aad
push
btc
pushf
xor
call
stos
pushf
pushf
jmp
out
jne
call
or
pop
pop
cmp
scas
pop
push
jg
ret
jno
mov
dec
jnp
xchg
fwait
mov
jecxz
rep
shr
or
xlat
dec
jbe
push
scas
mov
mov
into
fwait
inc
mov
xor
dec
mov
icebp
jo
aam
mov
imul
popl
mov
hlt
xchg
sbb
daa
mov
sbb
in
leave
inc
sahf
outsb
popa
je
cli
and
xchg
pop
ds
popa
adc
mov
mov
cwtl
add
frstor
stc
mov
stos
rcrl
pop
jb
mov
sub
int3
in
hlt
in
mov
out
call
pushf
lea
jae
cmp
cmp
push
jmp
pushf
add
push
movb
lea
jmp
jg
pushf
and
sti
loopne
int3
aam
shlb
rcl
movsb
mov
inc
adc
xor
das
xor
sbb
dec
push
pusha
and
add
add
leave
add
sbb
mov
xchg
cmp
mov
jmp
xchg
mov
fs
push
push
mov
rcll
push
and
dec
mov
fwait
sahf
jae
sarl
push
mov
cmp
jg
iret
cmpsb
mov
imul
insl
xchg
cmp
xchg
xchg
jae
xchg
shll
loopne
pop
cmc
nop
fldl
ds
mov
adc
dec
pop
repz
sbb
sub
adc
inc
push
inc
add
cmc
pusha
imul
pop
adc
stc
or
mov
scas
ds
sbb
iret
jle
test
in
gs
adc
lods
xchg
test
inc
jbe
xor
dec
mov
push
setp
jno
insb
xor
adc
and
lcall
das
xchg
cli
xchg
lret
int3
rorb
add
test
add
test
mov
mov
pop
mov
push
pop
mov
jmp
xchg
icebp
mov
sbb
mov
pop
es
adc
and
outsb
push
orb
inc
pop
aas
mov
jbe
xchg
pop
decb
fisubl
sbb
xchg
stc
dec
repnz
jle
mov
pop
cmc
pop
into
and
inc
pop
add
push
add
pop
adc
sub
sub
adc
aaa
jns
dec
imull
inc
and
xor
popf
jno
mov
in
stos
sti
xchg
pop
repz
sbb
jae
ja
addr16
imul
mulb
loop
fldl
push
mov
add
cs
rolb
ds
dec
or
fs
jno
add
jbe
mov
imul
mulb
dec
xchg
inc
mov
dec
xor
mulb
clc
xchg
add
into
daa
scas
call
mov
jo
mov
fadds
lcall
adc
jp
mov
mov
mov
bound
and
data16
leave
popf
sarl
fildll
lret
add
mov
adc
rorb
std
xchg
aam
loop
subb
out
sbb
int3
inc
pop
inc
pop
stos
lahf
adc
in
popa
aad
orl
xlat
rcrl
sub
sub
pop
cmpsb
sub
les
add
imull
fisubrl
push
mov
subl
mov
lock
ret
xchg
dec
mov
xchg
popa
test
xor
loop
mov
bound
sub
imul
orb
add
inc
call
adc
mov
int
enter
int3
aam
popa
test
pop
adc
pop
cmc
dec
out
ret
int
jecxz
cmp
and
scas
mov
mov
lock
movsb
arpl
jg
add
cmp
lret
pop
movsb
jmp
scas
mov
in
icebp
jl
push
xchg
or
test
mov
ret
dec
popa
jno
mov
xorb
rcll
sub
std
clc
mov
lock
fisttpl
fisttpll
cmc
cmc
shl
icebp
out
pushf
imul
sbb
ret
xor
mov
call
cld
mov
insl
push
into
push
push
jnp
and
adc
ficoms
push
add
mov
out
test
sbb
cltd
stc
in
imul
in
cmpsb
mov
jne
jb
or
jo
loope
jmp
xor
ja
dec
mov
icebp
in
mov
push
daa
jbe
pushf
sti
cmp
xor
das
pop
push
fwait
cmpsb
pop
fimuls
cmp
cmc
mov
cmp
in
shlb
pushf
or
ffree
fdivs
pop
mov
jae
daa
mov
test
pop
popa
sbb
rclb
push
or
cli
test
add
aaa
xor
cs
jle
ss
arpl
fisttps
or
test
pop
js
lock
pushf
sub
fldl
mov
pushf
sub
cmp
dec
or
mov
mov
lds
or
xor
inc
jecxz
imull
mov
fsubrs
adc
or
clc
in
icebp
fdivrs
in
xor
scas
push
sbb
cli
ljmp
lods
nop
mov
mov
mov
xchg
movsb
add
pop
sbb
and
cmp
aaa
mov
sahf
iret
mov
fldl
and
cmp
call
not
lea
push
jmp
lea
ja
pusha
lea
jb
clc
cmpb
pushf
call
lea
jne
cwtl
xor
sub
cwtl
clc
rol
mov
cmp
cmc
sbb
add
sub
mov
call
lahf
pop
outsl
addr16
lea
nop
nop
aas
imul
aaa
jg
scas
notl
fisttps
or
jno
lret
aam
in
flds
sbb
inc
add
cmp
pop
shl
hlt
sub
pop
inc
shl
or
and
inc
push
dec
lahf
adc
pushf
pop
rolb
mov
scas
sahf
repz
test
inc
daa
shll
sub
push
and
mov
sbb
pop
jle
push
pop
inc
divl
enter
es
out
ljmp
inc
jmp
xor
add
add
repnz
xlat
insb
xchg
into
scas
and
pop
add
ds
frstor
das
fisttps
sbb
insl
cltd
imul
stos
pop
mov
mov
shrb
cmp
pushf
or
pop
fidivl
sahf
mov
arpl
sbb
push
mov
inc
pushf
pusha
lea
jne
pusha
pop
mov
pusha
movw
mov
lea
jmp
cmp
clc
loop
or
clc
or
clc
in
out
mov
out
in
out
and
out
mov
shl
lcall
mov
jmp
iret
mov
adc
repz
pop
sbb
fistpl
je
les
lock
adc
stos
xchg
mov
mov
xor
aas
ds
xor
lahf
add
imul
scas
ret
mov
add
push
aas
mov
cmpsl
mov
or
sbb
xlat
dec
mov
jg
and
pop
mov
shl
shr
imul
add
rclb
adc
push
add
rclb
xchg
das
pop
add
int3
pop
add
add
add
add
jecxz,pn
call
sub
cmp
mov
mov
cmc
cltd
xor
push
add
icebp
cmc
cld
adc
inc
xchg
arpl
ljmp
or
pop
stos
cld
rorl
jmp
cmpsb
lock
sub
push
je
inc
pop
inc
push
xor
cmp
add
push
mov
addb
xorl
jo
mov
sbb
insb
ret
mov
lahf
es
addb
aad
adc
mov
adc
insb
sti
or
imul
movsb
lock
xlat
popf
movsl
test
mov
cmp
popa
jns
add
mov
push
push
xchg
fcompl
mov
jmp
in
fisubrs
adc
stc
lods
loope
test
or
push
cmp
cwtl
cmc
cwtl
pop
loopne
xchg
pop
xchg
xchg
cmpsb
xchg
outsb
mov
dec
add
out
icebp
ljmp
xor
or
jmp
shll
arpl
and
or
addl
and
xchg
stos
mov
mov
scas
iret
aam
out
stos
shl
add
cld
mov
cmc
pop
push
aaa
inc
mov
ret
das
sahf
jecxz
mov
mov
in
jnp
mov
leave
call
aam
mov
push
mov
call
sub
rcrb
leave
add
neg
cmc
mov
mov
int
movsb
test
xchg
fcomi
add
xlat
dec
mov
sub
mov
lret
int3
fisubl
jo
and
sub
insl
cmp
pop
pop
mov
mov
int
aam
movsb
cmp
push
jbe
mov
daa
xchg
das
dec
and
jg
rcll
cwtl
mov
dec
or
int3
fisubl
cwtl
aad
lods
mov
lea
je
cld
mov
arpl
mov
xor
mov
pop
scas
add
out
or
test
data16
ss
add
push
lods
xor
jmp
sbb
or
in
loopne
mov
mov
jno
jno
cmp
leave
out
shll
je
xorl
fwait
enter
fcmovb
cmpsb
jmp
out
scas
xchg
adc
jae
out
mulb
mov
lods
xchg
xchg
cmp
dec
addl
aas
sbb
push
sbb
mov
push
lea
jne
push
not
not
pusha
mov
movb
pushf
lea
jmp
jmp
push
movl
pusha
pushl
popl
mov
mov
pushl
ret
rcr
bsr
mov
pusha
and
stc
cmp
add
sub
clc
bt
jmp
cmp
call
lods
pusha
push
not
movb
pushl
pushf
inc
bt
clc
not
test
call
cmp
mov
sub
dec
sbb
or
icebp
add
fmull
lahf
inc
pop
sti
add
cwtl
sbb
sbb
jmp
push
sbb
xchg
loopne
jle
lret
icebp
iret
push
fyl2xp1
cmp
pop
jle
out
xchg
cmp
adc
out
mov
cmpw
ljmp
cli
jp
test
mov
xchg
xorl
add
push
mov
add
push
sub
and
mov
jecxz
out
jae
add
test
push
cmp
sti
cmp
mov
rol
out
jp
or
push
or
inc
out
pop
in
mov
ss
or
adc
xchg
cltd
pop
adc
mov
add
lea
xchg
inc
rcll
or
pop
test
idiv
xlat
pop
cmpsl
int3
ja
jae
cmp
pop
xchg
ret
push
fists
ljmp
movb
jnp
or
sub
cld
xchg
lea
xchg
fucomp
sbb
cmc
dec
aam
or
mov
inc
test
int3
sahf
clc
mov
in
fldl
movsb
xchg
sahf
add
icebp
cmc
rorl
andb
ds
popa
sarl
inc
in
or
mov
and
hlt
xchg
xor
ds
pop
inc
sub
cld
xor
cmp
jmp
test
fisubrs
or
sbb
mov
add
xchg
adcb
cmp
in
mov
mov
cmc
lea
cmpsb
mov
fldcw
mov
mov
push
cmp
subl
dec
mov
call
cmc
data16
sbb
or
int
ljmp
sub
into
bound
mov
divl
rcr
aad
pusha
imul
cmc
dec
out
cltd
pop
add
or
out
aam
lods
sbb
int
or
adc
sbb
cmp
adc
xchg
inc
add
mov
lret
jecxz
jp
cltd
cwtl
mov
add
push
mov
jne
jmp
jge
cli
pushf
sbbb
mov
js
out
sbbl
sbb
add
cmp
scas
mov
sbb
jmp
rolb
dec
nop
out
sub
int
dec
js
dec
push
insl
add
mov
fs
insl
jns
loop
sbb
add
fcoms
out
adc
fwait
adc
add
xlat
cmpsl
notl
mov
jl
out
int
or
leave
addb
pushl
xlat
add
sbb
fsubrl
and
or
ret
cli
push
adc
pop
mov
decb
cmp
sub
add
mov
clc
jnp
add
mov
push
mov
push
fisubl
sub
or
dec
std
mov
xchg
into
int
jecxz
jnp
lea
out
sub
sti
mov
and
int
mov
js
mov
jp
mov
stos
jecxz
scas
addl
cmp
cwtl
cmp
and
jmp
testb
cmp
sub
call
fnsave
mov
or
xor
mov
int
fcompl
push
in
mov
lcall
out
das
xchg
lock
jmp
fwait
mov
rcll
out
roll
pop
push
xchg
sub
jmp
fsubs
subb
scas
xor
bswap
fs
mov
fsubrs
shrl
rcrl
add
or
std
mov
adc
xor
adc
roll
decl
cld
push
cltd
test
cwtl
add
lea
popf
stos
adc
xor
xor
sub
fbld
jmp
or
inc
stc
fdivrl
lea
xorb
rol
sbb
adc
adc
movsb
mov
xchg
fldt
jge
filds
xlat
rol
in
fsubrs
setge
jnp
xchg
clc
adcb
sbb
xor
xor
aaa
repz
jl
or
repz
rcr
rolb
jp
add
repnz
lahf
sarl
repz
cltd
test
lods
jg
push
scas
mov
jmp
xchg
add
xor
test
clc
int
daa
js
add
xorb
dec
scas
stos
negb
jmp
ds
out
shr
mov
and
js
pusha
push
jb
outsb
jns
testl
jge
lea
xchg
clc
push
xor
xchg
sub
ljmp
jnp
lret
int
sub
mov
inc
sbb
jp
loope
sbb
add
int
cli
rcr
scas
stc
movsb
push
jl
cmp
hlt
inc
loope
jge
rcr
inc
out
sbb
add
jp
inc
xor
cmp
out
pop
and
add
mov
mov
rol
jmp
push
out
pusha
jmp
jmp
or
adc
mov
aad
out
test
loope
push
pop
dec
mov
fcmovnbe
mov
or
push
inc
std
lea
xchg
dec
pop
jp
pop
xchg
clc
sbb
pop
test
clc
test
fcmovnb
cmpb
jnp
std
lcall
fnstsw
xchg
adc
addr16
jno
sti
and
sti
or
jmp
push
shll
test
mov
and
mov
cmp
or
dec
jge
das
inc
fsub
pop
mov
push
sar
inc
pminsw
jbe
gs
cwtl
stc
adcl
xchg
cmc
andb
pop
jmp
roll
test
in
xor
int3
test
scas
inc
xor
sub
ret
stc
inc
mov
jbe
or
call
jl
in
and
or
xor
xchg
data16
push
push
xor
imul
push
sbb
ljmp
fdiv
lret
mov
ret
js
push
loope
cltd
jp
lahf
xor
icebp
jecxz
or
clc
sub
in
mov
mov
sti
imul
mov
pop
or
or
fs
push
mov
xlat
mov
mov
cmpsb
fiadds
lea
push
jmp
jmp
sub
incb
xor
fwait
and
sti
int
jl
and
pop
mov
arpl
xchg
mov
fucomip
mov
jb
xlat
inc
or
cli
mov
adc
push
fyl2x
sub
xor
sbbb
and
imul
leave
cmp
test
addl
fsubrs
xlat
frstor
out
sbb
hlt
mov
rcll
mov
pop
xor
in
test
cld
pushf
jecxz
xor
sti
or
lret
jno
pop
int
add
repnz
mov
dec
loope
xor
mov
inc
sbbl
jg
adc
sbb
repnz
add
lret
iret
xor
sub
cmp
pop
or
and
xor
mov
or
sub
fisttps
hlt
jge
mov
mov
repnz
out
cwtl
dec
sub
jne
pop
jmp
pop
push
and
or
pop
pop
jge
fs
push
adc
sbbb
test
stos
je
lea
hlt
mov
adc
mov
sbb
inc
or
pusha
les
cmpb
fidivs
xor
push
ds
xchg
pop
mov
nop
hlt
mov
add
test
movsb
pop
es
mov
ljmp
insl
mov
aad
pop
in
scas
or
rcrb
orb
lcall
roll
fcmovu
mov
add
cmpl
cmc
aas
shlb
adc
in
or
mov
test
dec
dec
insb
add
cmp
in
sar
jb
pop
mov
pop
jae
jne
and
push
fdivrs
aam
sbb
inc
or
xlat
jns
sti
jbe
dec
push
js
push
popf
xchg
jecxz
cld
outsb
outsl
pop
xor
mov
out
push
xchg
popf
fsubs
cmc
sbb
xchg
jge
cmp
iret
test
popa
hlt
pop
leave
popa
sub
jmp
loop
cmp
shrl
jge
les
mov
mov
cli
ljmp
mov
mov
mov
shll
xchg
add
pop
add
xchg
test
imul
mov
xlat
xchg
add
jl
pop
ljmp
inc
adc
js
mov
add
add
nop
mov
mov
aad
fldln2
pop
jmp
xlat
f2xm1
arpl
mov
or
push
mov
js
lea
cmp
stos
sub
add
leave
cli
cwtl
or
aas
mov
repnz
xchg
xlat
rorl
pusha
outsb
mov
pop
mov
test
inc
mov
sub
jmp
push
clc
std
das
shl
mov
cmp
aas
int3
popf
lea
or
in
enter
nop
pop
mov
aam
jecxz
imul
insb
jae
sbb
ss
cli
lea
xor
mov
jl
cmc
add
or
and
pusha
sub
dec
jecxz
push
enter
lret
jge
or
sahf
lea
or
jg
mov
scas
mov
cmp
shll
jp
shll
cwtl
mov
sarl
mov
pop
fcomi
inc
add
jmp
xchg
mov
cmp
shlb
fsts
push
jecxz
das
pop
enter
hlt
xchg
fadds
insl
cmp
jp
mov
ss
sti
out
pushf
mov
dec
lret
sahf
ret
stos
gs
jmp
mov
xor
pop
stc
cltd
jo
sub
mov
xchg
cmp
jae
bound
lock
jmp
int3
cwtl
pop
test
pop
or
pop
inc
mov
clc
std
xchg
xchg
sbbb
popa
mov
sub
xor
xchg
int
jge
mov
shl
mov
in
xor
sbb
jecxz
fisttpll
fcmovu
adc
mov
jp
jno
xchg
sbb
in
dec
jnp
or
mov
xor
and
test
jmp
push
lcall
cltd
movsl
mov
add
cmp
int3
in
and
mov
scas
cld
xlat
jp
mulb
or
dec
push
cmp
and
sub
imul
insb
testl
sahf
in
sbbl
fwait
jle
es
pop
flds
and
dec
out
cmp
cmp
xchg
int3
test
sub
insb
xlat
cmp
popa
inc
out
cmpsl
or
out
cmp
out
cld
jmp
or
movsl
jns
in
jnp
push
imul
pop
add
fcmovnb
stos
sbb
jl
in
jge
inc
test
pop
pop
fistpll
sbb
lock
fcmovbe
cmp
pusha
inc
repz
dec
mov
in
dec
in
dec
mov
repz
ss
sar
mov
pushl
es
pop
dec
dec
js
into
fyl2xp1
repnz
mov
sahf
xchg
cmpsl
insl
cmp
loopne
jle
icebp
cmp
cmp
shl
pop
mov
sti
cmpsl
fisttps
add
xchg
das
jmp
bound
pop
rolb
mov
push
fsubrl
inc
or
xor
lock
stc
and
jae
std
xchg
xchg
ret
xlat
add
imul
jge
jo
test
aaa
xchg
addb
dec
in
xchg
mov
mov
add
or
adc
outsl
mov
jg
lea
cmpsb
xchg
xchg
loopne
xchg
loope
or
ror
jno
and
iret
imul
push
jle
icebp
add
cltd
subb
push
push
sbb
mov
jne
cwtl
inc
or
mov
inc
push
xor
sbbb
xchg
ljmp
in
lcall
mov
icebp
sbb
out
cmpsl
loope
xor
inc
stc
or
inc
push
fwait
jg
or
add
inc
lea
fnstenv
xchg
or
insl
xchg
sbb
jno
cmp
sub
pop
mov
out
add
mov
icebp
or
mov
lret
in
dec
dec
inc
in
sbb
xor
pop
idivb
aas
mov
into
lret
or
pop
jl
xor
loop
int
rcr
lock
jge
lock
mov
ficomps
nop
shrb
fimuls
out
mov
test
mov
pop
xor
xlat
cmp
xchg
push
mov
jl
add
sti
xor
pop
imul
out
in
ficoml
add
sbb
sti
aas
out
pop
or
add
push
into
movsb
pop
xor
rorl
xchg
xlat
imul
fmuls
inc
fstpt
in
iret
push
cmc
ds
inc
pop
ja
xchg
lods
and
outsb
xor
aas
and
add
xor
push
xchg
jge
push
cwtl
and
shll
cmc
and
sbb
and
lea
dec
stos
js
add
jnp
mov
in
outsb
aaa
cmp
add
or
shl
loopne
mov
inc
int
ds
bound
cmpsl
mov
jp
out
cmp
mov
jge
popa
out
loopne
mov
fsubrs
decb
flds
fildll
jb
stc
rcrl
jge
and
shll
cmp
mov
mov
jbe
scas
dec
rcll
jbe
ja
leave
out
jns
adc
or
fscale
nop
push
mov
fstpt
stos
jo
les
mov
fnstsw
jbe
add
vpsllq
not
push
out
cmp
test
jmp
cli
or
push
das
pop
mov
xlat
pop
mov
cwtl
fstps
inc
cs
mov
popa
orb
outsb
mov
jp
dec
lahf
sbb
xor
lret
adc
push
dec
jle
dec
jb
cmp
fcomps
rcr
lea
cmc
jl
cmp
aaa
stc
shll
cmp
or
movsb
rcll
cmovge
jle
rorl
jg
leave
cmpsl
mov
insl
clc
fstpl
mov
add
pop
jle
add
inc
push
inc
jmp
xchg
pop
aaa
sub
push
rcrl
clc
nop
cmpl
sub
cs
mov
xchg
adc
push
sbb
jg
or
cmc
add
cwtl
mov
dec
adc
xchg
add
ds
scas
mov
xchg
cmc
movsb
cmpsl
sub
xor
or
ja
mov
rcrl
jge
test
mov
shl
lock
out
movb
cmp
inc
inc
lock
stos
aam
mov
adc
idiv
and
sti
jns
andl
mov
sarb
das
in
jmp
or
push
out
adc
cmp
ret
push
fstpt
mov
inc
negb
aaa
mov
mov
fldl
fs
cmp
sbb
insl
ljmp
inc
gs
pop
sub
sahf
xchg
addb
xor
je
xor
ljmp
dec
out
out
jno
mov
jmp
add
inc
pop
jnp
jb
sbb
jmp
imul
pop
aas
out
rcrl
push
loop
in
jp
out
or
popa
sub
pop
pop
cmp
cmp
clc
jno
iret
jbe
fistpll
adc
popa
stc
scas
mov
mov
imul
fiadds
xchg
pop
or
jb
roll
pop
fimull
pop
int
add
mov
hlt
loope
test
not
lea
jnp
shlb
mov
sbb
jno
push
and
div
inc
icebp
icebp
int
mov
fimuls
jge
or
cmp
mov
movsb
add
mov
xor
mov
stc
loop
jbe
shll
std
clc
shlb
jge
xchg
scas
stos
mov
int3
insb
enter
jl
dec
mov
sti
mov
mov
out
cmpsl
jno
xchg
xor
cmp
clc
jo
lea
repz
dec
icebp
mov
data16
fadds
or
mov
dec
shrl
jp
mov
ljmp
int3
mov
add
out
bound
pop
cwtl
aas
fdivp
inc
and
cld
cmp
cmp
fwait
add
jecxz
sahf
movsb
push
and
in
mov
out
fbstp
lds
or
call
loope
into
jne
cmpsl
jmp
xor
in
mov
pushf
mov
js
cmp
add
cmpsb
aas
nop
add
mov
scas
fcomp
cld
fdivrs
cwtl
lea
jmp
mov
andl
lea
mov
pop
sub
rcl
xchg
call
or
push
test
mov
or
in
ret
xor
mov
outsl
mov
test
lcall
outsb
mov
imul
lods
xor
sbb
jno
pop
mov
test
add
test
roll
out
jle
dec
pop
jb
shrl
int
xor
xchg
push
jne
outsb
xor
or
sbbl
andb
push
daa
sti
shlb
insl
test
sbb
jns
fcoms
stc
cmp
cmc
jmp
insl
push
outsb
or
fwait
lea
mov
std
mov
pop
gs
mov
cmp
mov
xor
pop
cmpsb
cwtl
movsl
push
sarb
sbb
sbb
pushf
in
xor
js
jmp
sbb
or
lea
je
sbb
xchg
rorl
sbb
mov
jnp
pop
cld
fstpl
out
mov
testl
pushf
loopne
mov
clc
or
sarl
ds
sbb
mov
out
sbbb
push
imul
das
cmpb
mov
aas
imul
sar
xchg
cli
pop
lds
sahf
and
fstps
xchg
lea
jle
mov
push
loope
cwtl
testl
std
fwait
cmp
lcall
insl
mov
loop
xorl
popf
lea
fst
fidivrs
lahf
imul
lahf
stos
stos
jno
lea
dec
jmp
cmp
lea
scas
push
sbb
nop
stos
add
andb
xchg
cmp
roll
pop
xchg
lahf
iret
xchg
pop
fyl2x
ret
fisttpll
push
fildl
mov
sub
jno
stc
std
repnz
pushf
loopne
mov
stos
mov
mov
std
aas
adc
icebp
adc
insl
ljmp
xchg
pop
imul
orl
scas
xorb
std
fdiv
pop
cmc
jmp
int
xchg
loope
call
aad
cmc
jb
and
mov
insl
or
repz
outsb
arpl
inc
aaa
jecxz
leave
mov
sbb
cltd
mov
push
in
mov
rcrb
xchg
stc
xchg
sub
mov
fbld
lcall
lea
mov
loope
imul
shr
cld
mov
fwait
sahf
inc
jne
test
mov
repnz
add
xlat
insl
icebp
out
shlb
mov
add
paddusw
fcmovnu
loope
sahf
ffreep
iret
stc
mov
mov
cltd
in
mov
mov
aad
mov
jecxz
xor
mov
mov
popf
mov
cltd
cmpsl
loope
mov
shll
scas
sub
adc
pop
push
in
mov
mov
mov
sti
jno
out
out
lds
mov
stc
mov
lea
mov
fbld
jne
fistps
out
mov
mov
xchg
out
iret
pushf
fwait
out
mov
sub
test
shll
stos
xlat
mov
cmc
xchg
lods
add
mov
std
lock
mov
fisttpl
insl
xor
inc
out
mov
xchg
fsubrs
aad
out
iret
not
xchg
add
ljmp
mov
cmp
popa
xchg
jne
push
mov
fisttps
ja
mov
aad
in
loope
mov
sbb
out
add
ja
loope
aad
xchg
test
pop
mov
lret
fisubl
in
add
fwait
popa
jmp
inc
or
icebp
xchg
int
bound
xorb
and
cli
ret
arpl
rol
pop
jp
and
add
push
pop
fiaddl
ds
popa
call
push
aas
stc
push
lock
mov
add
cmp
inc
test
push
mov
cltd
sbb
inc
push
mov
xchg
sbb
lds
outsb
call
xlat
bound
rcl
aas
sbb
sub
sub
xor
mov
mov
xchg
clc
rolb
xlat
push
fbstp
dec
loope
mov
dec
stos
fs
fimuls
push
xchg
std
call
pop
inc
add
shrb
popf
lea
add
cmp
push
outsl
cmc
xchg
inc
cld
xchg
leave
add
ja
pop
add
or
in
xchg
fwait
mov
adc
out
popf
fstps
loope
lea
sbb
jns
and
pop
cmp
lret
pop
push
push
test
add
lret
xor
mov
or
mov
ss
push
pop
and
adc
hlt
xchg
stc
sub
push
push
orl
and
pop
in
add
add
mov
daa
rol
daa
fldl
popf
cmp
pop
fnsave
into
add
mov
shlb
jb
or
aam
subl
out
mov
cmpsl
cmpsb
js
daa
scas
imul
or
mov
movsl
sbb
fwait
xor
cmp
and
out
in
nop
jno
sbb
sbb
sbb
sbb
xchg
out
mov
dec
mov
pop
rcrb
movsl
xchg
mov
cmp
testb
adc
outsl
and
pop
adc
or
adc
jl
sbb
clc
mov
jmp
inc
dec
mov
imul
xor
jno
fistpll
xor
cmp
adc
addr16
jecxz
jne
mov
lret
shll
icebp
std
cld
stc
or
test
jle
xchg
mov
sbb
sub
fistl
cmc
lret
push
pop
jbe
add
mov
sbb
lea
add
sahf
adc
aas
jne
gs
stos
dec
outsl
xchg
les
test
sarl
in
and
sahf
add
lea
lret
jge
sbb
test
insl
sbb
mov
add
push
pusha
sub
mov
in
stos
das
dec
pop
xchg
fdivs
fldcw
push
popf
cld
stos
push
nop
shlb
dec
clc
imul
jle
cmp
or
call
sahf
repnz
push
iret
cmpsl
mov
int
clc
lock
jl
cmc
inc
xchg
icebp
mov
movsb
xchg
fwait
mov
subl
sti
in
call
jl
xchg
out
lds
push
idivb
cmc
pop
js
jge
sbb
rcrl
xchg
test
roll
pop
cltd
xchg
insl
mov
repz
push
repnz
jge
jecxz
and
repz
sti
inc
push
in
outsl
pop
ret
push
xchg
test
mov
das
jne
mov
std
lea
in
shlb
fwait
nop
in
or
sub
mov
in
inc
rcll
cltd
sahf
xchg
pop
mov
jae
mov
orl
add
js
scas
jge
lea
aad
pop
into
scas
mov
enter
out
mov
ljmp
rcll
das
lea
push
neg
sbb
pushf
inc
push
lods
das
pop
aam
fwait
decb
dec
fisttpll
pusha
push
sub
iret
into
and
js
sbb
and
lods
out
xor
xor
shr
ret
aaa
dec
jb
or
and
pop
incb
xchg
ja
add
push
shll
data16
add
lods
std
and
shll
nop
clc
jecxz
or
adc
jg
syscall
pop
idivl
mov
jne
sub
mov
int
mov
mov
jmp
sahf
les
push
leave
fcmovnu
mov
jge
jge
std
cmp
xchg
adc
icebp
mov
jp
rolb
sti
test
loope
into
stos
xchg
call
dec
cwtl
adc
cmp
and
sti
sarl
push
or
fldt
jp
and
or
sahf
inc
push
push
fbstp
stc
mov
cmc
mov
popl
xlat
inc
mov
xchg
fbstp
clc
cli
push
mov
or
in
sub
push
xor
data16
push
cld
das
enter
pop
mov
mull
cmp
sub
cmpsl
mov
call
push
and
cltd
enter
jmp
sbb
inc
jge
pop
inc
lahf
cmp
sahf
xchg
pop
pop
jge
xchg
add
sarl
movb
movsl
rclb
loope
jne
nop
jg
pop
sub
incl
add
dec
lds
xor
inc
push
mov
xor
es
in
jecxz
popa
mov
or
sub
loopne
xchg
jg
jp
inc
outsl
xchg
pop
mov
jmp
inc
sub
lret
push
or
vmovntdq
fwait
adc
ret
mov
pop
fmul
scas
divl
cmp
jge
cmp
add
jmp
xor
mov
aad
std
mov
jg
xchg
sub
out
scas
fs
scas
cmp
scas
sub
std
sbb
fisttpl
sub
in
scas
pop
jmp
into
jno
or
loopne
push
xchg
test
and
push
lock
rcll
adc
cld
out
add
or
xlat
clc
jo
mov
subb
nop
mov
rol
add
lcall
fcomps
js
insl
ret
mov
mov
mov
push
cmp
into
aad
push
aam
adc
popf
mov
mov
dec
xchg
or
ds
mov
jl
fnsave
roll
nop
leave
push
ja
xor
inc
loopne
clc
pop
pusha
orb
or
fdivs
popf
repz
aam
cmp
aas
inc
movsb
jg
sti
lods
insl
mov
fwait
popf
scas
mov
outsl
fs
mov
xchg
pop
adc
jecxz
pushf
daa
lea
aas
inc
pop
mov
xchg
jge
add
rol
scas
sub
lock
mov
stc
xor
bound
jne,pn
sub
loop
lahf
jecxz
aaa
add
push
fisttpll
rol
mov
xchg
and
lret
ret
ficomps
outsl
outsl
imul
mov
cmpsl
push
cwtl
fcoml
dec
fists
cltd
out
test
jmp
add
roll
mov
pushf
pop
jmp
mov
push
xchg
xchg
sahf
xor
fs
mov
mov
mov
dec
mov
test
lahf
push
cld
jl
insl
mov
jb
shll
cli
fs
outsl
subb
pop
sti
push
mov
fcmovb
adc
push
daa
mov
xlat
and
and
push
xchg
mov
stos
pop
shr
add
dec
sbb
nop
pop
push
inc
xor
insl
aaa
pop
stc
add
mov
inc
mov
cmp
inc
pop
inc
push
push
xchg
mov
out
xchg
xchg
sub
nop
das
mov
aam
push
lods
int
test
fcomps
add
push
pop
sbb
scas
mov
std
jno
in
pop
jl
xchg
or
stos
sub
outsb
mov
js
mov
pop
fisttpl
mov
cmp
or
fwait
jge
mov
and
lahf
in
aas
adc
or
jne
lcall
pushl
das
pop
xchg
adc
in
sbb
testl
ss
pop
mov
pop
mov
insl
xlat
andl
dec
lahf
and
pop
sub
cwtl
fildl
jmp
pop
mov
cmc
jmp
insb
or
jp
push
xchg
inc
sbb
jecxz
es
push
jbe
or
lcall
std
stc
clts
pop
fldenv
repnz
xchg
or
scas
dec
and
sbb
out
mov
and
jb
mov
stos
ret
jno
dec
jp
lret
scas
pop
loopne
jae
fistpl
xlat
stc
fnstcw
push
or
andl
mov
pop
xchg
andb
aam
sub
add
loope
mov
aad
rolb
dec
xor
mov
lds
int3
out
push
and
lea
pushf
aam
cmp
int
fldl
std
jo
sahf
lret
or
rcrl
xchg
movsb
lock
and
in
push
punpckldq
xor
sbb
dec
add
int
data16
dec
orl
or
mov
fsubrs
imul
and
pushl
fwait
mov
gs
cmp
inc
jnp
loopne
ds
mov
dec
jns
jno
or
stc
xchg
sbb
js
insl
sbb
sub
fistpl
and
push
jle
cmp
outsl
mov
lea
cmp
ficoms
int
jb
sahf
mov
mov
nop
rcl
jno
push
mov
pop
mov
mov
in
mov
shll
add
fmuls
loop
shrl
cmp
aas
int
mov
sbb
jae
pop
xlat
ret
aaa
hlt
push
fucomi
loop
jg
adc
out
int
ds
sub
es
test
mov
fmuls
adc
adc
pop
xor
add
sbb
jne
fldenv
mov
imull
out
mov
int
xor
xor
aaa
inc
jmp
mov
xor
push
jg
pop
fdivrs
mov
push
cmp
or
jecxz
fldl
adc
outsl
sbb
das
xchg
xor
lock
clc
sahf
dec
clc
call
loope
xchg
mov
pop
andb
outsb
xchg
sbb
adc
js
mov
sarl
hlt
dec
mov
stc
sbb
pusha
js
rcr
add
fildl
stc
adc
std
lock
xchg
sbb
xchg
sub
das
xor
add
shlb
xchg
dec
xor
or
jge
mov
lock
xchg
jbe
les
out
sub
pushf
push
in
int
js
jl
mov
ljmp
ret
bnd
sbb
xor
out
xchg
mov
add
stos
cmp
and
push
xchg
adc
or
mov
rol
or
arpl
bound
in
fs
shr
icebp
inc
mov
jbe
or
mov
popf
cwtl
pop
mov
sbb
js
pop
sbb
adcl
fldcw
test
add
mov
aad
repz
cmpsl
mov
dec
aam
cmp
add
bound
cli
ss
testb
sar
xchg
jecxz
xchg
imul
loope
mov
or
addb
push
pop
and
push
in
rcrb
or
fwait
sub
sub
pop
inc
lea
jg
aas
sbb
mov
loope
into
cld
jge
cwtl
xchg
and
in
sarb
movsb
mov
add
aaa
shrb
add
out
dec
call
or
or
movsb
or
sub
fwait
jge
jns
pop
fsts
hlt
or
mov
pop
sub
roll
pop
js
mov
xchg
mov
mov
and
rcrb
jmp
jl
xchg
lret
xor
cmpl
adc
jecxz
fcmovnb
mov
nop
ja
mov
outsb
call
fadds
cmpsl
jno
int3
fwait
in
stos
pop
lret
dec
imul
pop
push
and
xchg
inc
mov
das
nop
jge
jge
add
cmp
xchg
adc
xchg
mov
jl
aaa
mov
imul
xor
cltd
mov
add
pop
frstors
xor
scas
cwtl
cld
lea
repz
pop
xor
les
and
xchg
lret
das
iret
ljmp
in
aaa
sbb
xor
sbb
sbb
fmull
add
subl
fistpl
xchg
negl
fnstcw
lret
mov
ja
and
pop
popa
push
in
pop
divb
xor
hlt
idivb
std
adc
or
cmp
or
or
or
xor
std
clc
mov
cli
lods
push
cmc
or
pop
xchg
imul
stc
add
lret
rcll
movsb
arpl
ja
notl
mov
js
xor
insb
sbb
xor
movsb
cmp
xchg
and
jge
adc
daa
push
in
repnz
arpl
and
fidivrs
xchg
fsubrs
andl
push
outsl
mov
jg
xor
loop
aad
adc
cltd
jb
push
sub
stc
pop
mov
and
or
adc
inc
push
jle
lret
xchg
and
repnz
orb
pop
push
or
cmp
cld
cmp
and
imull
cmp
sarl
lea
out
pop
repnz
cwtl
cmp
mov
or
mov
int3
jp
mov
sbb
fidivl
sbb
jbe
push
sbb
pop
xlat
adcl
mov
sub
push
imull
or
fstpl
adc
insl
lea
subb
fucomp
sub
sub
fld
fidivrl
shlb
test
and
subb
jge
mov
ror
fdivl
lcall
inc
mov
pop
out
mov
adc
lahf
jmp
fstl
pop
adc
mov
mov
fadd
mov
cmp
dec
insl
pop
lret
dec
push
and
mov
mov
add
aad
mov
int3
sub
cmp
shlb
shlb
cs
xchg
nop
xor
data16
lea
sbb
jne
std
idivl
stos
pushf
icebp
add
adc
rcrl
in
and
add
js
ret
jne
push
lret
sbb
mov
je
fstps
testb
or
mov
rorl
leave
xor
std
push
cmp
jns
jb
sbb
repz
in
fistps
int3
testb
arpl
mov
jl
fisttps
mov
sub
daa
jb
jl
sbb
pop
mov
leave
pop
arpl
cwtl
mov
in
and
jp
sahf
stc
inc
cltd
jge
mov
mov
ret
push
pop
adc
cmpsb
in
loop
cmp
pop
mov
aad
negl
xor
sbb
fnstcw
mov
or
dec
sub
dec
cmp
nop
inc
fcomps
icebp
sbbb
fcoml
mov
dec
inc
mov
nop
inc
mov
fstpt
cmp
leave
out
push
push
imul
lods
call
pop
mov
mov
xor
and
push
fwait
scas
cmp
idivb
sbb
pop
push
repnz
lcall
fcomps
pop
out
cwtl
scas
psllq
push
clc
mov
push
inc
fimull
xlat
pusha
fs
shl
test
jmp
ffreep
cmp
addr16
mov
xchg
fldt
scas
dec
movsl
ja
rolb
call
pop
cmp
pop
jo
daa
stc
pop
lds
aaa
call
xchg
or
scas
and
cld
pop
pop
fldenv
aaa
push
das
aaa
jge
outsl
mov
dec
out
cmp
jecxz
mov
fucomip
cmpsb
jge
test
dec
rcrl
sti
adc
int
cmp
mov
repz
clc
daa
push
mul
jg
aaa
ss
dec
rcr
int
and
add
insl
push
jl
push
mov
push
jp
orl
add
or
cmp
cmp
test
lcall
mov
orb
iret
cmp
mov
push
push
mov
aas
adcb
jno
lea
rclb
sti
ljmp
repnz
nop
mov
xor
cli
aas
xchg
mov
enter
lock
dec
push
popf
add
lea
enter
repz
add
sbb
add
sub
xlat
push
pop
inc
addl
call
popa
push
out
shrd
loope
add
sahf
cmp
or
sbb
stos
lcall
incl
jns
mov
popf
pop
jl
call
pop
ret
loopne
dec
in
lcall
jle
xacquire
stc
push
imul
mulb
push
xlat
cmpsb
jge
fsubrp
adc
mov
popl
scas
aas
in
and
sbb
loopne
loope
out
push
rolb
gs
sarl
xchg
leave
jp
xor
iret
js
push
xchg
pop
mov
outsb
fsubrs
sti
sbb
les
mov
pop
mov
sar
lcall
test
iret
adc
lock
in
fcoml
out
sub
fwait
inc
mov
repz
cmpsl
es
sbb
mov
jge
mov
xchg
push
fstpt
testl
cmpl
repz
xlat
sub
loope
or
lea
insl
adc
cmp
fists
mov
scas
jnp
cmc
jo
movsb
ret
sub
xor
loopne
mov
addr16
ss
int
jmp
pop
xor
pop
push
mov
lea
popa
or
jle
movsl
shll
int
arpl
lds
xlat
mov
fildl
imulb
jns
loop
roll
aam
xchg
cmp
mov
xchg
fsubs
fildl
cmpl
pushf
cmpsb
int3
sbb
xor
jge
popa
movsb
push
jbe
repz
push
sbb
or
lcall
mov
mov
push
cmp
and
cmpsb
flds
mov
in
in
cmp
bt
adc
xchg
xor
sbb
mov
jmp
mov
jge
pop
shlb
pslld
std
jp
mov
imul
cmp
xchg
and
ds
test
jbe
push
mov
sub
push
jge
adc
mov
fs
out
fimull
push
insl
int
sarb
add
sti
rep
mov
fstps
mov
sahf
shrl
enter
mov
std
lcall
push
xchg
and
rclb
gs
push
xchg
or
sbb
xchg
jns
sub
xor
imul
ljmp
xchg
popa
sbb
xchg
lcall
mov
jno
adc
lods
or
lea
out
xchg
dec
js
and
jl
push
fstp
imul
aad
pop
sbbb
adcl
sbb
aaa
jns
das
mov
sar
and
adc
test
mov
cmp
sahf
sbb
xorb
cltd
jg
cmp
cmp
clc
mov
inc
pushf
jns
mov
jnp
lods
adcb
inc
adc
iret
std
or
outsl
sub
pop
sar
mov
dec
pop
repz
divb
jae
outsb
xchg
ficoml
testb
jl
mov
andb
clc
shll
sub
add
pusha
cli
push
sarb
and
pop
sarb
jge
jne
les
mul
notb
mov
sbb
test
fcom
hlt
insl
dec
in
lods
mov
cmp
aad
rcll
cmp
lods
jnp
rcrb
push
outsl
mov
icebp
sarl
lock
jne
fdiv
divb
sub
inc
jecxz
mov
repz
add
popa
inc
cmpl
jmp
cmp
enter
mov
mov
out
stos
dec
xchg
or
lret
push
inc
in
add
decl
inc
add
scas
addb
lret
sub
inc
sahf
mov
inc
mov
add
pop
cmp
mov
dec
outsb
mov
mov
sbb
adc
in
mov
aad
push
shlb
sbb
add
js
adc
sub
cmp
sahf
sub
insl
rcrl
adc
fisttpl
jae
dec
or
mov
movsb
fbld
xor
xchg
aad
push
push
mov
andb
sbb
idiv
cmp
shrl
int
mov
add
mov
cwtl
adc
lea
les
mov
lods
stos
xchg
pop
lcall
xchg
mov
imul
iret
imul
mov
adc
mov
or
mov
mov
pop
aaa
or
mov
pusha
mov
jl
lahf
loopne
ret
in
mov
cmpsl
negb
mov
ss
sbb
mov
push
mov
push
jae
xorl
out
inc
fcmove
nop
enter
mov
mov
nop
into
pop
jns
push
pop
mov
loope
aas
inc
nop
add
dec
xchg
add
xlat
ret
jmp
mov
sti
dec
inc
int
add
outsb
and
or
aad
xchg
add
shlb
imull
rcr
loopne
mov
test
aaa
pop
subl
cmp
xchg
jmp
xor
mov
sub
cmp
jp
and
outsl
cmp
lods
cmp
mov
add
sahf
sti
test
pop
dec
in
mov
fwait
mov
xchg
fldlg2
lock
jns
test
add
loopne
pop
lea
and
sub
mov
pop
xchg
sbb
sub
push
loope
inc
pop
cli
int
mov
sbb
cmp
xor
jmp
scas
aad
add
fdivrs
or
and
aad
inc
rol
jnp
push
push
or
mov
jl
xlat
sbb
mov
iret
add
repz
sub
fistpl
roll
xchg
adc
mov
pop
jg
mov
jmp
ret
adc
inc
jecxz
arpl
notb
daa
into
stc
push
pop
mov
cwtl
repnz
aad
lea
lea
lahf
or
andb
daa
sbb
jp
cltd
add
movsl
repz
das
xchg
and
jge
cmpb
test
test
loopne
ljmp
push
and
sub
and
out
sarb
fwait
mov
fdivs
mov
out
pop
mov
pop
das
jns
rclb
lods
jmp
sub
inc
pop
push
add
add
pop
cmp
sub
jle
movsb
add
stc
data16
fdivrl
addb
mov
xor
insb
sub
aam
outsl
pushf
rolb
pop
popa
pushf
shlb
outsb
push
loop
repz
mov
mov
xlat
int
and
movsb
out
call
pop
orl
sub
mov
jae
mov
push
sbb
jns
push
jmp
jbe
fisubrl
inc
iret
add
dec
out
inc
push
andb
adc
iret
add
pop
mov
fldenv
mov
repz
loopne
rcll
xor
add
push
out
loop
push
sbb
cmp
fs
ficoml
scas
mov
loop
mov
movsb
adc
int3
mov
pop
sbb
pop
addl
mov
push
fucomp
js
mov
xchg
enter
and
push
pop
add
sbb
icebp
fscale
fwait
mov
xorl
cwtl
cmp
jns
or
mov
clc
gs
sbb
insb
pop
daa
decl
jbe
pushf
push
mov
je
xchg
pop
xlat
mov
inc
in
sbb
xor
mov
int3
fildll
sbbb
pop
add
mov
cmp
pop
cli
repnz
cwtl
jnp
cs
xchg
loope
or
dec
push
shr
das
cmc
aaa
push
adc
xor
repz
mov
fadds
adc
loopne
mov
out
push
adc
and
int
jg
or
mov
inc
or
xor
sbb
and
imul
decl
aam
imul
xchg
jp
insb
in
cmp
sbb
inc
in
mov
inc
cmp
push
and
adc
ja
mov
mov
and
mov
cmp
adc
xor
jmp
test
mov
mov
xchg
mov
test
incb
cmc
mov
stc
pop
pop
jl
mov
aam
cltd
int
imulb
sbb
xchg
das
adc
clc
jl
inc
sahf
call
sub
lock
orb
xchg
ja
add
pop
and
test
frstor
sbb
pop
mov
cmpl
test
mov
loopne
cmpsb
xchg
add
inc
insl
insb
push
cmp
dec
outsl
xor
xchg
or
or
sub
aam
xchg
push
outsb
in
scas
movsl
add
pop
andb
push
jno
jns
or
or
pop
gs
movsl
jbe
jnp
das
cmp
mov
pop
lret
mov
cmp
push
adc
jge
sbb
mov
add
lock
push
clc
xchg
adc
and
outsl
xchg
and
or
outsl
popf
push
leave
adc
fimuls
lcall
das
lea
dec
dec
mov
xchg
xchg
jno
fildl
fdiv
fs
adc
inc
push
inc
inc
push
icebp
pop
mov
sub
push
inc
imul
jbe
jns
pop
xchg
gs
addl
arpl
addr16
sbb
popf
addr16
mov
mov
push
outsb
adc
adc
aad
into
aas
xchg
push
pop
sti
jle
mov
push
cmpl
mov
js
push
popf
sub
add
and
in
push
push
aas
in
cmpsl
push
cmc
cmp
jbe
mov
xchg
add
push
adc
or
cwtl
xlat
ror
jl
out
inc
mov
cmp
mov
lock
into
mov
cwtl
jl
test
jmp
dec
loope
sbb
xchg
ds
notb
push
add
xor
movsl
in
rcrl
into
jno
mov
and
inc
jl
rcl
and
add
cmp
fstps
adc
es
sahf
out
lock
iret
lock
sbb
in
and
ljmp
lcall
shl
lea
inc
outsl
or
outsl
ljmp
outsb
shll
scas
push
popa
and
ret
aas
add
sbb
in
or
in
push
testl
inc
and
loope
stc
popa
inc
inc
sub
cmpsb
jge
inc
mov
sub
divb
icebp
sar
lea
sbb
sub
lea
ret
xchg
pop
in
or
ss
cltd
adc
cmp
jns
dec
int
scas
and
push
mov
jmp
or
test
sub
fld
add
cmp
mov
lods
jmp
adc
fmuls
jbe
and
sub
inc
leave
cmp
pop
jp
jmp
sti
dec
nop
push
into
pushf
push
insl
into
fsts
cltd
mov
push
add
iret
pop
jnp
es
outsl
stc
loope
ja
adc
cmp
sarb
dec
arpl
leave
pop
data16
mov
shlb
hlt
push
nop
ror
inc
mov
ljmp
ret
clc
sahf
das
xlat
jns
push
fisubs
faddp
adcl
sub
adcb
fadds
sbbl
rcrb
push
addr16
pop
hlt
addb
cli
pop
pop
es
add
mov
negb
sub
jge
test
into
pop
mov
cmpsb
push
pop
push
adc
cmp
sbb
mov
test
cmp
xchg
pop
cmc
mov
ljmp
xchg
dec
shlb
or
jae
es
lods
and
mov
pop
stos
stos
fidivrl
fldt
cli
aas
lcall
test
fdivr
mov
stc
js
loope
sbb
jns
sub
mov
pop
shrl
pop
xchg
aas
rorb
stc
repz
out
add
cmc
std
gs
loope
sbb
or
sar
pushf
dec
leave
stc
loopne
iret
add
dec
add
mov
outsb
push
pop
fnsave
imul
std
cmp
rcll
std
sub
into
mov
push
mov
lret
cltd
lods
loope
imul
pop
iret
fldcw
pop
mov
adc
cmc
jle
test
fistpl
fstl
xchg
jge
cld
mov
movsl
mov
cmc
std
pop
jnp
xchg
mov
imul
lahf
aaa
outsb
mov
test
daa
push
loop
mov
fs
xor
fistpll
cmpl
std
xor
out
out
std
bound
std
sub
mov
lea
in
outsl
std
pop
sar
popa
xchg
jge
xor
jmp
mov
cwtl
in
mov
imul
cli
mov
fcmovnu
ficoms
ja
imul
out
push
dec
mov
cmp
pop
sti
pop
xlat
push
ret
mov
mov
rclb
jo
in
ljmp
mov
stc
sti
mov
stos
jo
out
iret
test
in
xor
sti
out
cmc
jns
mov
popa
jp
mov
push
lea
icebp
fstpl
mov
jge
jno
push
mov
xor
idiv
out
std
xchg
ret
push
xor
mov
jo
jno
out
stc
jno
out
stc
frstor
jae
jge
mov
cmp
shl
sub
cmc
jne
push
stc
push
out
stc
sub
mov
lock
mov
sbb
jns
mov
call
add
int
fxch
mov
pop
mov
mov
sbb
jbe
pop
xor
ret
cwtl
jbe
add
orb
pop
mov
gs
jg
mov
cmpsb
adc
adcl
adc
sub
aam
push
pop
dec
cmp
mov
out
inc
out
cli
jge
bound
movsl
pop
lret
jmp
jmp
dec
popf
es
das
mov
lock
mov
pop
fs
int3
xor
rcr
jle
lret
sti
mov
push
nop
dec
cmc
and
mov
insb
aad
or
sbb
pop
into
mov
xchg
push
sbb
xlat
fiadds
add
test
mov
or
bound
std
int
cli
push
sbb
sub
insl
xchg
cwtl
adc
mov
push
in
jg
iret
int
imul
roll
outsb
lcall
outsb
mov
xor
adc
int3
in
or
mov
dec
outsl
ja
in
add
pusha
das
lea
mov
fiaddl
jnp
outsl
sbb
xchg
loop
in
clc
stc
and
mov
sbbl
stos
imul
lea
sbbb
ret
cltd
outsb
into
es
aaa
je
lret
outsl
insb
xchg
clc
xlat
or
stc
jb
add
sub
lcall
jle
aam
mov
mov
lods
push
mov
icebp
cld
ss
popf
int3
mov
jmp
jle
inc
mov
frstor
in
js
mov
xchg
rorb
iret
jno
hlt
test
or
dec
insb
mov
outsb
sar
xchg
mov
pushl
mov
mov
jbe
cwtl
xchg
or
sbbb
leave
jb
xchg
icebp
xchg
inc
mov
inc
test
pushf
lea
test
push
mov
jbe
inc
adc
mov
xchg
pop
push
push
pop
roll
and
mov
shll
adc
test
popa
push
int
xchg
insb
xchg
add
sarl
test
aad
popf
pop
mov
outsl
jbe
jo
mov
cmpl
dec
in
mov
push
iret
jge
lcall
jg
jge
and
dec
cmp
xchg
stos
das
push
jle
aas
sbb
sub
call
mov
sahf
sub
add
jmp
sub
stos
jmp
jns
xchg
scas
loop
sub
pop
add
mov
stos
xchg
adc
sub
lahf
add
lods
mov
fdivrl
cmp
mov
xchg
cmpsb
add
cld
cld
das
cwtl
mov
jno
or
loope
sub
pushf
ret
cmp
jg
test
mov
int
adc
lret
lea
mov
test
lahf
push
test
push
insb
test
xor
jne
sbb
imul
out
mov
movsb
adc
cwtl
push
mov
sarl
mov
push
testb
mov
mov
idivl
inc
enter
nop
mov
inc
add
lcall
mov
sub
sub
out
xlat
lock
gs
movsl
imul
mov
jmp
into
arpl
clc
clc
adc
xchg
cwtl
xchg
xlat
rorl
es
fcoms
cltd
sub
jmp
insl
and
xchg
xor
adc
ljmp
sbb
ds
inc
test
mov
leave
ds
jmp
data16
icebp
xchg
aad
push
jbe
xchg
add
popf
xchg
pop
fdivrs
or
add
pop
in
cltd
addr16
add
daa
xchg
shrl
fnstenv
pop
sahf
adc
shrb
shl
push
cmp
shlb
cmp
add
aas
push
mov
rcll
sbb
sbb
mov
lea
stos
mov
lock
mov
insl
scas
shll
rcrb
or
out
and
mov
jns
sub
cmp
or
jae
push
andl
jge
outsl
repz
out
push
add
aaa
sbb
sbb
cmc
icebp
mov
dec
jl
pop
push
out
shrb
ljmp
xchg
mov
jge
mov
mov
add
incb
dec
outsl
xchg
rcl
stc
fldlg2
aas
jnp
dec
into
jo
testb
jns
sbb
or
jb
push
ret
mov
int3
fldt
jno
aam
fdivrs
aad
sahf
fnstenv
int
mov
xor
sbb
ljmp
cs
out
pop
fcomp
mov
pop
and
mov
pop
cmpsb
sub
and
pop
popf
pop
add
aam
das
bound
inc
loope
add
xchg
rorl
or
mov
pop
out
rcrb
ror
mov
loop
push
push
jle
mov
push
add
cmp
sti
roll
mov
movsb
push
sbb
sti
sub
jne
jb
dec
add
adc
pop
out
fstp
xor
push
insl
or
ficompl
push
insl
ds
lea
dec
add
adc
cmp
and
xchg
outsl
push
add
mov
mov
dec
xchg
cmpsb
ss
cmp
stc
mov
jmp
out
cmp
dec
pop
push
add
shrl
push
or
cmp
rorl
incl
shl
sti
fisttpl
stos
sbb
out
sbb
xor
roll
xchg
lea
scas
popf
or
mov
aaa
nop
insb
loope
mov
scas
mov
neg
aam
shll
push
add
jae
nop
andb
adc
ds
push
xor
shlb
sbb
add
and
xchg
or
out
pcmpgtb
loop
mov
push
pop
std
mov
sub
add
call
lahf
jg
mov
rcrl
cmpsl
pop
cli
and
clc
shll
fistpl
icebp
mov
sar
test
xor
inc
cmp
mov
and
jno
je
stc
sub
lahf
jmp
into
aas
call
push
arpl
jp
add
aad
loope
stos
or
pop
jmp
insl
sbb
aad
cmpsb
dec
cld
push
popf
mov
xchg
in
std
xor
sub
loope
dec
jno
cs
inc
lret
sbbb
mov
movsb
imul
cli
mov
add
pop
in
fnstcw
sbb
sti
scas
lods
mov
sti
fnsave
fsubl
mov
push
cmpsl
jns
cmpsl
stc
lea
xchg
cltd
mov
fwait
stc
movsb
dec
rcl
rcll
jne
xor
leave
jne
into
stos
fnstcw
loope
movsb
add
repz
mov
dec
jmp
pop
repz
fildll
jne
stos
iret
mov
stos
and
xor
jg
push
fnstsw
fwait
std
loope
fdivrp
int
repz
insl
inc
movsl
jecxz
mov
out
dec
lea
jno
out
cmp
loope
adc
jecxz
push
jae
int
lret
cmc
popf
mov
stos
xlat
rclb
dec
fucomp
dec
mov
sti
cs
cmp
xor
out
into
stos
cltd
cmp
lods
stos
xchg
add
xchg
push
xchg
ficomps
pop
rcrl
xchg
mov
loope
cmpsl
mov
jno
out
fabs
aad
aad
in
in
mov
not
in
xchg
mov
pop
imul
mov
out
int3
fldcw
loopne
popa
xchg
std
in
jae
and
fadds
int
ret
aas
add
pop
jecxz
lret
roll
pop
popf
add
fidivrs
aam
mov
or
sahf
out
leave
lods
pop
xor
sbb
jge
xchg
ds
je
sub
bound
lock
mov
jmp
xchg
jp
pop
pop
int
movsb
out
and
lods
sbbl
lods
mov
push
xor
lea
sub
jl
or
pop
and
das
inc
pop
dec
dec
fwait
mov
dec
test
int
flds
ljmp
add
int
stos
xor
popf
inc
jle
jns
jmp
fiaddl
jmp
int
xor
std
push
rep
add
loopne
xchg
mov
std
jecxz
mov
rolb
pop
lock
subl
add
add
and
and
cld
cs
xor
mov
xchg
xchg
mov
mulb
mov
push
push
xor
testl
mov
sub
out
add
dec
xchg
mov
ds
loope
cwtl
nop
mov
popa
xor
pusha
mov
fiadds
out
xchg
push
outsl
add
fisttpll
outsl
mov
mov
pop
mov
dec
dec
cmc
testl
in
cmp
fsubs
sbb
adc
or
outsb
pop
and
imul
jp
sub
mov
cli
mov
mov
roll
dec
dec
add
mov
mov
add
mov
lods
in
and
mov
fdivl
or
sub
add
aam
fcompl
cmpsl
jmp
push
insl
repnz
int
shr
fidivs
outsl
add
xchg
int
pop
jg
lea
xor
mov
mov
aas
mov
jne
test
sbb
fisubl
or
jno
or
fnstsw
andb
push
movsb
add
jbe
add
nop
push
test
xor
fdiv
and
in
push
mov
sub
mov
insb
push
in
inc
mov
ss
mov
je
hlt
aad
test
push
mov
out
add
int
push
ret
or
testl
ds
sbb
pop
mov
inc
cmpsl
inc
cmp
push
cli
loop
or
pop
jmp
aad
jp
mov
cmp
mov
pop
jb
jge
data16
nop
push
lods
mov
fistpl
mov
push
jbe
rorl
xlat
xor
pusha
pop
push
mov
cwtl
insb
inc
fistpll
daa
jg
sahf
aad
or
mov
out
jnp
pop
fstpt
lret
add
mov
lea
mov
decl
cmpsl
xchg
mov
jge
lock
cmp
and
push
aad
or
mov
stc
nop
jmp
in
icebp
ret
inc
lock
pop
push
fstp
pop
mov
cmc
jbe
adc
push
push
mov
call
add
testb
dec
mov
jl
mov
jg
or
push
cmp
jns
mov
je
fisubl
fsts
movsl
scas
cmp
jge
lea
lock
add
outsl
pop
sbb
loop
fsubs
daa
fimuls
mov
int3
ds
fdivs
rolb
lods
sbb
mov
negl
fcmovu
xchg
adc
xchg
push
sbb
in
inc
lea
ret
jg
sahf
jecxz
jo
scas
push
push
mov
addr16
push
fisubrs
aas
jbe
xchg
out
test
sahf
mov
or
adc
mov
mov
test
jge
and
sti
out
xor
mov
xchg
and
xchg
ja
xchg
jle
push
pop
loopne
cmp
lods
in
fstp
ret
sub
test
and
xlat
adcb
cmp
add
and
test
iret
sub
ficoml
aaa
test
aas
sbbb
push
sub
test
xchg
add
fisttpl
cmovnp
iret
add
xor
cmpsl
pop
mov
pop
or
cmp
jmp
pop
ficoms
cs
pushf
clc
rorl
mov
or
sbb
and
xor
sti
movsl
imul
test
cwtl
push
sub
mov
push
xchg
andl
cmc
clc
dec
pop
mov
xlat
mov
nop
jecxz
int
xchg
cmp
je
sahf
cmp
ss
sahf
fxch
mov
push
pop
hlt
in
fwait
bound
sub
addb
in
aas
nop
xchg
js
pop
mov
xchg
in
aas
cmc
xor
jle
adc
and
jno
mov
jl
popl
push
js
enter
outsl
push
xor
pushf
mov
sbbb
pop
insl
push
cmp
out
inc
das
xchg
in
outsb
cmp
popf
sti
mov
into
rorl
sbb
lea
jmp
mov
sub
pushf
imul
imul
cwtd
mov
jae
mov
mov
cwtl
orl
das
ficompl
pop
mov
jo
jne
or
push
inc
and
add
cmp
iret
xchg
rorl
inc
int3
lods
mov
or
nop
imul
add
enter
jge
inc
pop
insl
add
cwtl
xchg
sbb
ret
pop
fwait
jg
fmull
jo
fcomps
or
fiaddl
ret
outsl
icebp
mov
mov
fsubs
mov
insb
push
push
fistps
cmpsl
fwait
and
xchg
sarb
jl
data16
int
pushf
movsl
cmp
add
push
cld
and
je
sbb
mov
aam
clc
mov
icebp
paddw
add
push
rcll
xchg
or
std
sbb
mov
mov
hlt
or
mov
add
cmc
or
iret
jmp
xor
adc
icebp
xor
dec
std
mov
dec
mov
xchg
jg
scas
cmp
imul
shll
inc
jne
andb
shl
out
cmp
lea
out
mov
test
jmp
push
sub
xchg
rcr
cmpsb
or
ret
adc
sar
sbb
sub
adc
cmp
fiadds
xlat
pop
lods
jo
add
in
adc
and
sti
xchg
pop
das
pop
fimull
xchg
add
jne
loope
cmp
jne
pop
in
and
dec
jns
popf
cmp
pop
rcr
push
aas
sbb
aaa
sbb
call
jge
mov
xor
ss
mov
movl
out
and
rcrl
push
mov
add
popa
stos
push
mov
and
outsl
stc
mov
fisubrl
fdivrs
lret
push
outsl
shr
cmp
xor
movsb
or
in
in
or
pop
add
and
pop
cmpsl
nop
or
mov
push
cmp
cmp
dec
jge
mov
leave
call
notb
shrb
out
lea
and
adcl
mov
cmp
test
mov
jmp
push
mov
lock
js
call
popf
bound
rcrl
push
mov
jl
iret
mov
push
sbb
cmp
sub
jo
data16
adcl
setp
shl
mov
daa
rcrl
inc
pop
adcb
push
xlat
mov
pop
sub
dec
dec
jne
aas
or
pop
lahf
repz
addb
mov
and
int
adc
inc
adcl
sub
in
iret
fsubr
cmp
and
xor
jmp
test
jge
cltd
push
sub
cli
jo
push
add
sti
shlb
icebp
and
fistps
mov
push
rclb
lods
jno
or
imul
cmp
shr
aas
xor
and
out
sub
into
push
test
cmp
xlat
loopne
addl
mov
sub
inc
arpl
jge
repnz
mov
jp
call
fildll
dec
mov
jmp
test
xor
or
divb
imul
filds
sahf
lcall
fs
cmc
or
shl
or
aam
movsl
inc
mov
push
loope
dec
sahf
dec
mov
pop
mov
stc
insb
test
fimull
fidivrl
sub
out
pushf
jbe
in
fisttps
loopne
or
dec
dec
call
mov
push
adc
cld
jle
pop
outsb
popa
imul
lret
daa
mov
pop
pusha
lea
push
loopne
jge
mov
jge
fisttpl
xchg
mov
jge
subl
or
fdiv
nop
mov
int3
les
cmpsb
jnp
cmc
pop
out
jecxz
lahf
cmp
loopne
add
testb
jb
daa
jl
jae
adc
cwtl
int
jl
fidivrl
push
test
test
loope
xchg
adc
pop
icebp
cltd
cli
in
jno
push
shll
fstps
and
pop
int
js
sub
aam
sub
jge
xor
adc
inc
lcall
sbb
fisttps
data16
cld
in
lods
mov
rcll
leave
mov
out
pop
jmp
dec
aam
movb
sbb
scas
ret
mov
in
xchg
or
or
inc
js
insb
repnz
jg
rolb
loope
rclb
std
push
div
cmc
push
bound
loope
dec
inc
icebp
insb
push
inc
jmp
jg
sarb
jmp
hlt
stc
cmc
cmp
inc
cltd
inc
fcmovnu
fyl2xp1
in
push
addr16
divl
adc
shl
jle
decl
mov
icebp
shl
out
rol
lahf
std
pop
push
jg
sti
jno
mov
cmp
leave
sar
mov
sub
pusha
insl
inc
mov
aad
cmpsl
mov
inc
jno
jl
std
inc
leave
jg
shll
mov
jno
icebp
insl
stc
std
mov
cmp
aaa
frstor
std
jecxz
popa
jg
stc
idivl
test
stc
xlat
in
out
lahf
adc
push
cmp
out
iret
adc
in
cmc
mov
cmp
lahf
ja
dec
cltd
mov
loopne
stc
test
pushf
imull
sbb
xor
mov
cld
js
xchg
pushf
shll
test
stc
cmp
inc
scas
fld
lods
clc
jmp
sub
adc
inc
shl
or
int
icebp
movsl
mov
icebp
lods
stos
loope
lds
in
loope
ljmp
mov
iret
out
shl
mov
cld
icebp
shll
mov
pop
mov
loopew
imull
stc
stc
icebp
mov
mov
loopne
int3
loope
sbb
stc
pop
aad
mov
lahf
in
mov
icebp
lods
mov
clc
icebp
std
fwait
xchg
sbb
jne
xor
mov
cmp
arpl
mov
icebp
out
or
rcrl
test
fistps
pop
fldcw
popf
lods
sbb
jge
pushl
popf
div
xor
cmpsl
loope
jg
shrl
jno
out
lods
pop
cld
xchg
sbb
jge
jmp
mov
ret
xor
fyl2xp1
lahf
xchg
cmovno
cs
dec
jle
popf
cmp
pop
xchg
test
aam
xorl
test
mov
mov
int
into
ja
cltd
adc
cltd
shrb
aad
and
enter
sarl
mov
add
pusha
popl
mov
orb
aas
jl
mov
mov
dec
xlat
in
in
movsl
repz
cs
xor
icebp
stos
adcb
jp
sbb
stos
out
in
fadds
es
pop
push
icebp
sbbl
mov
clc
enter
or
or
mov
test
jbe
cltd
and
outsb
rcl
int3
or
mov
ja
sbb
xchg
adc
mov
leave
fwait
mov
loopne
leave
lods
xchg
jle
in
out
jmp
imul
xchg
gs
imul
xchg
loopne
inc
call
test
dec
adc
fsubs
jno
movsb
adc
push
cltd
pop
outsl
jae
mov
sarl
or
xlat
add
pop
lock
scas
lea
addr16
mov
pop
out
int3
rcll
push
push
dec
imul
push
or
aaa
in
hlt
leave
aaa
lcall
mov
jecxz
or
mov
adc
and
popa
xor
dec
outsb
pop
dec
bound
cmpb
test
sbb
loop
addr16
cmpsl
insl
pop
add
xchg
in
lea
shr
or
test
push
pop
adc
cmp
dec
loope
and
mov
fbld
mov
icebp
in
xchg
jg
scas
cmpsb
lods
jnp
jno
roll
or
sbb
fcompl
push
push
test
jb
stc
push
jecxz
arpl
js
mov
stos
sub
popa
ret
aad
and
cmp
sbb
cmp
pop
popf
ds
incb
pop
adc
addl
dec
cmpsb
lea
mov
filds
or
icebp
lock
das
into
mov
cli
rcl
push
mov
ja
xor
mov
mov
aaa
fldl
add
mov
movsb
mov
rolb
jns
mov
das
mov
adc
cwtl
xchg
pop
sbb
mov
rcrl
or
mov
rol
jp
jge
cwtl
in
jmp
cli
mov
jge
jp
std
xchg
xor
pop
mov
mov
das
dec
and
fdivrs
mov
and
mov
outsl
inc
aas
addr16
not
and
pop
push
int
jnp
cli
sbb
ficoml
ljmp
add
xor
sub
or
jmp
and
adc
xor
fnstcw
movsl
popa
rclb
jb
test
sbb
incb
xchg
test
xor
cld
testl
shll
mov
call
add
in
mov
push
iret
imul
fsubp
fwait
std
test
jmp
sub
fs
scas
mov
test
shlb
mov
cmp
lea
cmpsb
filds
subb
or
jmp
shrl
pop
or
and
mov
insb
scas
inc
adc
cltd
inc
aas
or
pusha
jno
mov
cwtl
outsb
and
popa
shrl
fadd
pop
jle
mov
sbb
dec
int
adc
test
jmp
or
mov
push
imul
mov
mov
jnp
aaa
pop
and
insl
xchg
std
or
scas
stos
fstpl
pop
sub
test
aad
sti
rcll
into
or
or
int
fwait
jmp
and
and
fsubs
mov
popf
jmp
rorb
cmp
and
pop
sbb
bound
mov
outsl
mov
inc
aaa
or
xchg
cld
aam
shlb
iret
xlat
ss
test
xchg
shrl
push
pop
adcl
std
int
cmc
out
push
mov
mov
cmp
sti
shrb
sub
ljmp
arpl
xchg
std
sub
andb
shrl
sahf
pop
imul
imul
adc
or
sahf
push
jno
fnstenv
or
inc
int
sbb
arpl
push
or
mov
outsl
jmp
xlat
subb
mov
neg
mov
aas
std
xchg
clc
sbb
loope
sti
icebp
sahf
roll
mov
xchg
mov
add
jge
xchg
jae
inc
sub
push
outsl
mov
dec
dec
pop
dec
mov
inc
cmp
mov
outsb
imul
ret
mov
lods
cmp
push
and
and
fmul
test
or
insb
sub
sub
xlat
pop
sahf
in
mov
bound
adc
into
out
fstps
call
xlat
xor
aas
insb
lret
scas
lods
sarl
in
out
add
jl
mov
push
lahf
push
test
out
lcall
add
sbb
mov
in
sbb
pop
frstpm(287
lea
arpl
xchg
movsl
lods
fwait
lea
rol
jbe
pop
push
or
add
sub
out
xor
pop
jmp
aam
mov
xor
pop
ljmp
ficomps
mov
pop
cli
push
mov
push
xor
cmpsb
lret
js
gs
mov
cmp
sbb
push
insl
mov
xor
mov
jp
in
and
xchg
mov
add
testl
repz
xor
icebp
ljmp
sbb
iret
mov
sub
andb
fdivs
mov
push
roll
mov
stc
ret
test
fsubl
aaa
inc
lcall
ja
cmc
stc
xchg
xchg
fstl
mov
jns
pop
imul
bound
fdiv
inc
jbe
or
in
icebp
ss
push
insl
adc
xchg
inc
mov
sahf
lds
in
pop
fidivs
lret
jecxz
xchg
push
push
jns
cmpsb
or
cmp
pop
sub
sub
add
insl
int3
mov
nop
addl
lcall
mov
xor
mov
jp
sbb
roll
push
les
add
sbb
dec
mov
imul
pop
out
std
sarl
popa
xor
push
or
enter
fiaddl
pop
jl
mov
les
and
and
ljmp
cmp
xor
and
repnz
or
jb
lock
mov
pop
xchg
push
sbb
xor
lds
insb
mov
inc
imul
and
dec
in
stc
daa
inc
push
scas
mov
es
mov
es
rcl
or
mov
jge
xchg
pop
dec
sahf
popf
push
xor
loope
mov
mov
pop
in
fidivs
outsb
mov
mov
pop
arpl
out
push
jecxz
into
xor
cmp
popa
stos
jnp
jl
mov
mov
cld
movsl
adc
or
filds
gs
mov
fdiv
aas
sti
mov
or
ljmp
ret
movsb
loope
push
into
sub
inc
mov
aam
adc
out
lret
sub
cltd
sti
call
ret
dec
mov
inc
rorl
jecxz
fdivrl
push
mov
dec
int
mov
aas
cmp
xchg
int
push
jmp
lds
mov
and
decl
or
cltd
add
mov
in
add
es
push
sbb
xchg
sbb
adc
add
cwtl
sbb
testb
xchg
out
cmp
ljmp
sub
xchg
mov
pop
sbb
out
lea
cmpsb
cltd
jg
cwtl
or
mov
div
stos
dec
shll
xchg
adc
stc
shll
fldl
add
test
popf
jae
fprem1
dec
inc
cwtl
mov
jb
adc
add
mov
mov
and
es
ljmp
jp
test
fwait
jl
or
fsubs
mov
pop
xchg
aad
enter
enter
sub
jmp
imulb
lds
int
fistl
or
mov
movl
stos
outsb
push
and
in
xchg
rcll
cwtl
pop
clc
ret
or
daa
shrl
add
adc
movsl
jbe
push
mov
imul
pop
xchg
in
jp
ficompl
fistpll
dec
mov
adc
push
dec
dec
pushf
mov
es
test
mov
adc
pop
jmp
sub
dec
inc
xor
sub
sti
movntq
xchg
dec
scas
xor
or
add
xor
or
mov
add
dec
arpl
push
add
sar
dec
les
pop
lock
rcl
sbb
dec
jmp
mov
or
xchg
mov
aas
hlt
and
add
jnp
fiadds
lret
jecxz
or
add
sbb
xchg
lret
mov
add
fisttpl
imul
js
xchg
pop
imul
mov
push
sahf
add
lahf
int
pop
xor
or
sarl
cltd
int
gs
xchg
scas
pop
shll
jb
hlt
mov
xlat
mov
popf
scas
loop
shl
icebp
testl
imul
jle
scas
adc
sbb
xchg
cwtl
fstpl
add
or
rcrb
loopne
adc
or
pop
dec
rcrb
mov
push
addr16
mov
stos
cmp
sbb
inc
or
cmpsb
test
adc
jecxz
cmpsl
div
or
push
xchg
add
push
cs
mov
call
push
lock
adc
out
imul
fcomps
jge
xchg
cltd
clc
jmp
add
lods
push
loopne
aas
xor
push
das
rclb
in
pushl
add
mov
outsb
adc
or
scas
mov
mov
int
jno
ret
imul
and
popf
inc
inc
sub
lret
sbb
or
loope
bound
roll
ljmp
cli
pop
sbb
mov
pop
mov
jo
lahf
push
sub
call
pop
test
xchg
add
pop
cwtl
xchg
mov
lcall
jnp
lea
or
add
outsl
xchg
xchg
dec
inc
out
pusha
test
mov
or
mov
pop
sub
outsl
dec
pop
es
and
in
adc
fsubrs
loopne
jge
adc
scas
loope
mov
pcmpeqd
xchg
xchg
outsl
and
bound
pop
cmc
repnz
xor
mov
clc
shl
sbb
into
insl
lcall
sub
jecxz
or
add
lret
ror
inc
or
and
bound
add
cmpsb
mov
ja
inc
xchg
movsl
mov
enter
into
or
and
icebp
stc
or
movsb
and
push
fiadds
bound
sysret
gs
xchg
sbb
mov
mov
mov
mov
xlat
xchg
cli
out
jg
jmp
repz
pop
or
pop
push
jle
mov
test
nop
push
jne,pt
popa
lea
out
adc
or
mov
pop
sub
pop
mov
cmp
pop
jp
sarl
and
jecxz
add
mov
mov
push
adc
cmpb
ja
and
jmp
lods
sar
pop
push
sub
rolb
std
cltd
int
repnz
nop
dec
clc
push
sbb
rcrl
inc
iret
adc
aad
movsl
movl
cmp
sti
jge
lret
aam
jg
push
xchg
and
sti
mov
fmul
iret
mov
pop
es
xchg
or
mov
jl
call
mov
xor
inc
shlb
adc
mov
stos
adc
shll
cmp
outsl
xor
and
jp
cmp
xchg
pop
jmp
dec
xor
cmp
and
sbb
mov
cmpsb
pushf
sarb
mov
fnsave
fdivr
cmpsb
xor
mov
addr16
xchg
stos
mov
cmpsb
int3
cmp
cltd
popa
xchg
pop
leave
adcl
std
pop
loopne
or
mov
xchg
ljmp
jno
scas
negb
fcmovnu
test
pop
push
imul
idivb
and
xlat
mov
cmp
popa
mov
cmpsl
out
int
sbb
repnz
push
mov
inc
mov
call
incb
jne
jmp
xchg
mov
clc
aam
fists
jecxz
add
mov
or
imul
fistpl
insl
frstor
mov
sbb
test
outsb
cltd
adc
mov
imul
test
jge
mov
add
movsb
lret
stc
jmp
sahf
sub
ljmp
ljmp
clc
insl
mov
mov
fdivs
divb
or
aas
cmpsl
dec
mov
jge
mov
scas
aas
sub
cltd
xchg
rcll
push
popf
std
fwait
aas
cld
sub
outsb
mov
outsl
or
repz
int
sti
add
mov
push
mov
decl
jecxz
ret
aas
jns
fisubl
inc
mov
mov
add
imul
push
ret
or
dec
mov
add
sahf
inc
pop
jecxz
mov
frstor
pop
cmc
rcl
movsl
int3
mov
jne
leave
cmc
daa
mov
roll
inc
incl
out
imul
ror
mov
sub
xchg
fsubrs
push
push
jmp
jmp
test
sti
lea
ss
push
push
or
lods
icebp
pop
or
lods
mov
pop
cmp
dec
sub
xchg
sarl
or
nop
inc
pop
ja
test
xchg
sbb
rcll
pop
in
mov
or
fwait
xchg
push
xor
xchg
stc
fdivl
dec
rcrl
xor
fimull
push
lods
popa
cmp
cmpsl
in
jnp
mov
xchg
jno
std
cwtl
sbb
mov
jmp
sub
rcrl
test
int
mov
scas
cmc
test
leave
outsb
imul
mov
add
loop
call
mov
orb
lahf
test
jge
inc
xor
xor
das
dec
add
lea
mov
adc
stos
stos
in
jne
pusha
outsl
fbld
cmc
cmc
int3
xor
push
lods
sbb
imul
test
fs
adc
fdivrp
sub
std
int
aas
cmp
icebp
mov
imul
js
insb
sub
mov
jmp
ss
js
and
xchg
or
push
mov
rol
jp
aam
mov
and
xlat
lods
daa
cmp
testb
mov
in
lret
mov
hlt
mov
aaa
sub
cmp
outsl
push
in
mov
mov
fisubrl
shlb
cwtl
roll
mov
dec
dec
jle
fistl
push
jge
jp
loop
cmp
test
mov
mov
or
aam
sbb
pop
jmp
aas
cmc
and
sbbl
int
jp
lock
jl
sub
fdivl
pop
lahf
add
out
cwtl
pop
push
pop
mov
mov
xchg
sub
add
dec
or
aam
insl
loopne
dec
add
test
in
mov
xlat
mov
dec
mov
jp
cmc
add
out
in
stos
in
adcl
sub
fcomi
fs
jmp
int
jns
push
jmp
test
clc
xor
xchg
sbb
mov
mov
cmp
in
adc
mov
iret
or
out
fisubrs
jb
pop
cwtl
roll
fwait
mov
ror
jne
mov
mov
sahf
xor
jl
cwtl
add
ss
sub
repz
xchg
add
xor
loope
mov
movb
int
cmpsb
aas
cmpb
sbb
inc
outsl
rclb
cmp
xor
shll
adc
cmp
ud1
icebp
or
es
add
sub
ljmp
inc
sbb
cmp
clc
xchg
and
mov
imul
mov
popf
or
jne
sub
mov
cwtl
pop
add
mulb
mov
pop
cld
xlat
je
outsl
cmp
xchg
xchg
imul
xchg
int
aas
mov
push
inc
outsb
xor
mov
daa
lea
int
jae
and
pusha
sbb
in
cltd
out
sub
pop
mov
add
or
jae
push
stos
into
repz
ljmp
mov
mov
push
jmp
testb
repnz
push
push
add
lret
movsl
lods
pop
push
clc
sbb
push
and
and
hlt
or
cli
push
cltd
mov
cwtl
adc
and
xchg
xlat
sbbb
adc
sbb
push
or
mov
fbld
movsl
pop
fsubl
ret
mov
and
pop
add
mov
sub
clc
jno
push
push
lret
mov
loope
pop
aad
mov
sub
ljmp
sbb
out
shr
jmp
xor
insl
mov
bound
movsb
mov
or
out
jle
movsb
pop
es
adc
nop
jno
mov
pop
add
adc
scas
and
loope
orl
pop
or
mov
add
in
incb
and
lea
mov
lcall
dec
jnp
xchg
sub
shll
pop
xor
mov
lds
lods
aad
aam
add
data16
mov
and
loope
int
out
sarl
outsl
jecxz
nop
in
pop
mov
fcom
mov
int3
adc
xchg
push
mul
imul
mov
insb
cmp
test
jecxz
sarb
cltd
ficomps
gs
xor
push
lea
fmulp
outsl
pop
test
in
or
mov
and
iret
add
lret
nop
add
pop
and
push
stc
pusha
jbe
push
repz
test
sbb
or
add
or
clc
adc
mov
js
xchg
and
test
cmp
arpl
fisttpll
adcl
and
or
sub
add
add
xor
sub
andb
fimull
shlb
and
cwtl
mov
shl
pop
sbb
and
xchg
add
shr
and
pop
ret
test
shrb
movsb
push
fwait
rclb
add
fcoms
sar
sbb
mov
mov
imul
inc
xchg
inc
inc
roll
pusha
xchg
mov
xchg
aad
in
sbb
jae
test
mov
call
jge
gs
imul
adc
add
sti
adc
rclb
dec
jg
mov
loopne
hlt
in
lret
xchg
out
in
mov
addr16
call
sub
cmp
mov
aas
sbb
inc
lods
adc
testl
shll
nop
mov
gs
int3
cwtl
fsubrp
insl
sbb
shrb
or
sbb
imul
js
test
pop
xor
mov
lret
jg
ljmp
xchg
cmp
fstpl
scas
sub
imul
fadds
outsl
add
ret
xchg
fisttps
lret
cmp
cmp
adc
mov
xlat
xor
xor
test
add
cmp
daa
and
lea
xchg
or
sub
ret
jle
add
push
dec
cltd
clc
add
hlt
or
inc
subb
xchg
popf
xchg
in
xchg
mov
inc
jle
fsub
imul
sti
sarb
mov
mov
fdivrs
and
adc
xlat
push
fiaddl
or
int
xchg
cmp
gs
std
or
iret
jp
xchg
dec
fnstcw
mov
xor
lea
mov
xchg
dec
pusha
push
orl
jl
shll
sbb
mov
jg
mov
and
stc
outsb
pop
jge
cmp
rcl
arpl
cld
ficoml
xchg
scas
sbb
sbbb
pop
jg
jns
jl
add
sbb
sahf
lods
sarl
cmp
mov
test
cmp
sbb
icebp
xchg
outsl
mov
aam
cmc
std
and
lods
addr16
mov
test
adc
push
add
in
push
jl
push
shll
mov
sub
add
hlt
mov
pop
pop
jnp
jl
pop
out
jne
adc
or
add
adc
in
repnz
and
mov
out
dec
int
xor
aas
in
flds
insl
sbb
sub
loope
int
push
icebp
dec
cmpsl
xor
mov
xlat
fcompl
popf
sub
arpl
mov
jo
cwtl
mov
repz
jg
orl
pushf
shr
movsb
inc
loopne,pn
rcll
xchg
roll
inc
rcrl
in
sbb
adcl
and
lea
sbb
cmc
adc
enter
mov
out
xchg
aad
lret
push
roll
fisttps
add
les
xor
rcrl
inc
push
inc
lock
or
jge
popf
xor
mov
xchg
test
sbbb
in
inc
jge
mov
jns
icebp
popa
mov
xchg
pop
rcrl
cmp
cmp
mov
cwtl
jmp
out
mov
mov
sub
in
rcl
inc
aad
mov
test
mov
in
mov
es
loopne
mov
inc
sbb
inc
add
mov
adc
adc
cs
int
push
push
jns
jecxz
or
or
ret
add
dec
fwait
xor
mov
mov
iret
dec
fildl
fstpl
les
pop
imul
fbstp
aaa
rolb
inc
mov
xchg
icebp
cwtl
test
add
repz
sub
cmpsb
pop
mov
sbb
rclb
xor
enter
cmp
imul
test
mov
loope
sahf
mov
jp
mov
pop
adc
mov
daa
js
mov
cld
lcall
ja
sbb
loop
sub
pop
pushf
pop
jo
lea
dec
test
icebp
cltd
fs
movsl
pop
addl
add
mov
cmc
fcoml
icebp
bound
fdivrl
or
mov
les
int3
xor
mov
xchg
push
iret
test
out
or
popa
and
sti
inc
stos
clc
jp
add
jg
cmp
pop
rcll
ja
fstpt
ficoml
pop
sti
dec
cmpb
int
sbbl
fdivs
xchg
pop
ljmp
cmp
ss
xchg
loopne
jg
cmp
outsl
pop
cld
fcomp
fwait
test
inc
std
add
cmp
xor
xor
lcall
jg
inc
cmp
xchg
mov
sbb
popf
into
and
dec
cmpsl
test
pop
test
call
adc
adc
and
dec
xchg
add
xchg
sbb
fxch
adc
dec
jb
mov
mov
fxch
lea
aaa
pop
mov
je
mov
fldl
into
test
movsb
and
xchg
or
xchg
push
data16
xchg
mov
sbb
sub
int3
clc
int3
xor
cld
xor
hlt
mov
push
adc
pop
mov
add
adc
push
adc
popf
pop
xor
sub
adc
xor
subb
pop
cmp
inc
sti
stc
xchg
pop
xlat
push
or
mov
mov
fdivrl
lcall
pop
int
or
clc
add
adc
sub
in
cltd
pusha
out
pop
adc
std
clc
psubb
xor
xor
mov
movsl
jb
adc
jg
xchg
bound
xor
incl
jg
push
lea
mov
adc
or
pop
lock
xchg
xor
xchg
fdivrs
test
bound
fdivrl
push
dec
cmp
stc
insb
inc
mov
xlat
or
outsl
cltd
test
aad
pop
adc
mov
cwtl
sbb
pop
lock
xor
icebp
sub
rcrl
pop
push
mov
jmp
mov
mov
ss
xchg
sbb
js
int3
call
lods
imul
jg
nop
push
mov
rclb
fwait
mov
jo
aas
dec
loope
push
and
out
daa
adc
js
or
sar
stc
mov
add
xchg
and
icebp
pop
out
mov
int
divl
jmp
dec
mov
pop
inc
int
xchg
aad
cld
or
and
lods
in
xor
stc
push
imul
pusha
fstpt
mov
mov
mov
aas
lods
aas
insl
imul
xor
shrl
jl
sub
sar
xchg
ljmp
add
adc
cwtl
inc
frstor
fnstcw
scas
jg
fwait
and
pop
cmp
push
or
mov
add
xchg
mov
jg
cmpsb
test
aam
test
test
ds
ret
leave
hlt
imul
shl
push
or
push
mov
jl
mov
mov
xchg
pop
sbb
lcall
out
jne
rolb
cmp
inc
dec
fldenv
or
mov
sbb
adc
mov
push
sarl
adc
dec
loop
in
outsl
ret
sahf
xchg
insb
mov
mov
ficompl
aas
or
inc
test
notrack
int
sbbb
in
in
outsb
mov
inc
sub
and
or
into
cmp
xlat
sbbl
cmc
loope
xchg
lods
loope
jno
lea
lcall
pop
in
jg
mov
pushf
add
cs
das
cmp
sti
ror
stc
mov
mov
pop
test
stc
dec
mov
in
add
mov
outsl
jg
mov
scas
inc
iret
cmp
jo
roll
or
imul
stos
sbbb
jg
jmp
add
ror
lret
ret
xor
or
push
cwtl
fcompl
fldt
push
hlt
repnz
hlt
xchg
out
cwtl
popa
imul
mov
ret
and
adc
cmc
js
jne
jno
ljmp
xor
fadd
sbb
loopne
out
test
outsb
sub
cmpsb
stc
jbe
in
xor
and
ror
cwtl
cmpsb
sub
out
aam
inc
popf
ss
dec
mov
out
scas
js
cmc
mov
jge
cmp
int
lods
xchg
push
push
xchg
xor
sub
xchg
ret
jmp
nop
push
in
sbb
addb
icebp
or
mov
cmp
shrl
sar
das
ret
icebp
jmp
aas
xchg
inc
add
mov
faddl
xorl
or
cmp
stos
jmp
cmpsb
xchg
push
rclb
pop
pop
xchg
jge
inc
movsl
xchg
mov
iret
out
sti
in
cmp
jbe
sbbb
inc
jp
jge
and
sub
jg
and
adc
mov
das
lea
xchg
add
dec
push
lds
mov
adc
sub
add
xlat
sub
stc
aaa
xchg
pop
push
mov
loopne
in
or
incb
inc
mov
mov
cmp
xchg
or
sahf
mov
mov
movsl
sbb
icebp
mov
out
rcll
adc
int
loope
icebp
fdivr
pop
clc
outsb
push
xor
mov
es
add
js
push
repnz
js
pop
shr
sub
js
push
aad
testl
push
push
mov
lret
sarb
adc
std
inc
mov
sbb
cwtl
mov
sbb
fistl
pop
out
mov
rclb
mov
pop
aam
xchg
rcr
cmp
negl
sbb
mov
xor
adc
fsubs
push
fbstp
push
and
aas
or
adc
cli
jp
jecxz
pop
xor
inc
fwait
sbbb
fdivl
ljmp
mov
pop
fdivs
jp
shlb
testl
mov
sub
push
lret
clc
adc
inc
sbb
xorl
test
lret
cmc
cmc
mov
inc
cmc
outsl
loope
icebp
mov
and
popf
xlat
jp
inc
daa
imul
insl
loope
gs
jle
or
inc
cld
sar
std
loopne
decl
sub
pop
fcomi
push
cmpsb
mov
ss
call
int
xor
pop
insb
mov
push
orl
jle
add
xchg
movsl
or
loopne
adc
lahf
xchg
adc
add
lock
ret
lods
hlt
and
sbb
nop
ljmp
fidivrl
orl
lea
mov
adc
ret
stos
shll
or
cmp
jmp
jae
xlat
jl
stc
xchg
pop
jecxz
cmpsl
fdecstp
mov
xchg
out
hlt
stos
jno
jge
push
cmp
add
divb
or
sbb
test
loopne
xor
push
mov
in
xchg
pop
add
sbb
xchg
sub
pop
clc
sub
sbb
cmpsl
test
mov
jmp
jmp
sahf
in
and
nop
inc
shlb
cwtl
mov
sti
or
xor
xor
mov
out
xchg
stos
pop
or
aas
jbe
or
inc
mov
in
outsl
pop
hlt
jl
and
mov
out
cmp
data16
mov
dec
xor
rclb
mov
loop
outsb
lea
and
shll
loopne
jecxz
push
std
icebp
mov
pusha
jl
or
push
jge
orl
call
inc
in
jecxz
mov
xchg
or
adc
scas
pop
or
mov
xchg
test
xor
cmp
je
and
mov
pop
enter
fldcw
mov
idivb
out
test
shrl
int
clc
adcb
or
fdivl
xchg
sbb
nop
sbb
or
lcall
cmp
and
xchg
scas
fiaddl
sub
out
leave
mov
fadds
js
xchg
push
out
pop
cmp
fcomps
pop
nop
xchg
stc
loope
cli
inc
add
cwtl
xor
sbb
fsubr
mov
rclb
cltd
and
ficomps
adc
pop
out
les
add
cltd
lcall
mov
leave
add
pop
cmpl
push
jle
cmp
xchg
inc
repz
sub
cli
pushl
cwtl
enter
faddl
nop
push
jmp
cwtl
in
fldl
cwtl
cli
adc
repz
jno
lahf
imul
xlat
dec
pop
sti
mov
dec
sbb
inc
shr
std
xor
add
leave
and
push
jl
out
mov
les
mov
dec
xchg
xchg
mov
cs
jl
lea
call
es
inc
adc
pushf
dec
jb
jle
test
xchg
cmpsl
sbb
add
adc
mov
and
in
insl
xor
sbb
addr16
dec
fidivrl
adc
mov
outsb
ret
sub
mov
mov
out
jmp
adc
xor
push
and
je
movsb
and
rolb
out
push
mov
cmp
arpl
push
or
sbbl
hlt
shrb
aas
mov
dec
cld
cmpsb
push
stos
and
add
aas
xchg
mov
int3
or
jae
sbbb
jge
and
inc
test
and
xchg
push
addr16
test
adc
sarb
std
mov
cmp
out
dec
in
sarl
pop
mov
pop
jecxz
rorb
clc
or
sbb
aad
jge
aas
jg
xor
hlt
movsb
loopne
and
iret
xchg
insl
and
cld
push
sbb
add
sbb
inc
dec
sarl
pushf
lods
fldl
cld
call
cltd
mov
add
shlb
dec
xor
push
mov
lea
dec
sbb
daa
add
jl
inc
jmp
xor
xchg
inc
pop
dec
adc
cltd
in
mov
imul
pop
mov
lahf
push
push
cld
loopne
inc
int
sti
adc
adc
or
xchg
leave
pop
outsl
sub
xchg
cmc
jle
cld
jbe
pop
or
ljmp
icebp
icebp
dec
xor
dec
ds
pop
add
data16
test
xor
cmc
stc
or
loope
int
imul
jg
icebp
test
icebp
cmp
loope
loope
aaa
loope
xor
dec
repnz
decb
mov
cli
mov
sar
inc
cmc
pop
aad
and
xlat
fucom
repnz
stos
out
cli
pushf
push
aaa
loope
xlat
cmc
aad
cmc
or
scas
std
insl
cmp
push
shll
mov
ja
jmp
aas
fwait
mov
mov
out
iret
popf
stc
cmpsl
fnstcw
sti
popa
xchg
std
out
push
lahf
std
lods
dec
clc
shll
ficoml
add
xchg
loope
fs
sbb
mov
icebp
out
sarl
mov
and
incl
add
mov
faddp
popa
mov
mov
jno
xlat
cmc
loopne
je
pop
stc
fmulp
cmpsl
popa
shll
aad
insl
rcr
jno
in
imull
stc
addr16
jmp
mov
or
push
test
loope
mov
popf
loopne
out
lret
gs
add
std
lds
mov
xchg
mov
mov
fstpl
xchg
imull
jno
adc
jmp
jno
push
jecxz
std
pop
jge
popf
mov
mov
leave
out
mov
jecxz
insl
fbstp
repz
test
loope
aad
xchg
mov
mov
jno
jge
xor
aad
mov
outsb
fcomip
or
fldcw
add
mov
std
stc
mov
rcr
loopne
pop
out
ror
mov
popf
mov
popf
mov
fxch
xchg
insb
scas
icebp
loope
mov
loope
icebp
fsubrs
pop
out
fisubs
pop
mov
xchg
adc
out
mov
test
fsubrl
lock
pop
mov
mov
insb
jl
pop
fidivrl
mov
ss
dec
sbb
mov
jl
push
outsl
clc
rorl
outsb
loope
cwtl
push
mov
mov
and
add
or
mov
aas
jae
mov
add
cmp
in
jb
add
divb
cltd
xor
add
addr16
test
lea
nop
xchg
jge
pop
push
xchg
pop
fimull
cmp
lods
in
jge
stc
inc
mov
cmp
push
outsb
mov
iret
lret
jo
add
lcall
xor
sbb
dec
push
dec
sbb
jl
les
adcl
and
jge
xchg
xchg
movsl
jl
std
mov
aas
lret
add
pop
ljmp
int
and
mov
dec
inc
adc
jle
outsl
aaa
out
cltd
jmp
imul
cmc
push
mov
cmp
add
arpl
cwtl
and
sbb
test
lock
inc
sbbl
sbb
adc
outsb
and
cmc
jl
xor
pop
xor
mov
push
jne
xor
mov
dec
mov
sbb
bound
adc
nop
aam
or
xchg
loope
in
fldcw
mov
mov
jnp
popa
jb
cmp
aam
inc
xor
cltd
or
add
jp
es
fdivr
adc
loope
jg
mov
leave
data16
or
jmp
jl
push
cld
mov
outsb
mov
pushf
repnz
cmpsb
mov
sub
in
rcrl
mov
and
mov
add
rcrl
aaa
shrl
push
es
and
pop
inc
test
iret
popf
shll
mov
insl
shrb
gs
or
jne
jns
pop
dec
dec
pop
sub
sbb
mov
enter
sbb
data16
mov
cmp
jge
cmp
arpl
jae
push
icebp
mov
xchg
call
insl
jne
mov
out
scas
push
and
mov
mov
jecxz
ret
popa
mov
jge
lret
sbb
cmp
or
test
cmp
imul
dec
mov
or
cmp
add
aas
jmp
into
sub
cltd
adc
out
test
scas
push
sub
shll
scas
clc
sub
xor
xor
xor
out
ss
xchg
jnp
xchg
jne
adc
lea
inc
fwait
xchg
data16
xchg
jmp
lods
lret
daa
inc
xlat
mov
xchg
pop
lods
cmp
xchg
push
lods
sahf
and
std
push
iret
sbb
es
inc
sti
adc
dec
mov
jge
add
dec
lods
sahf
andb
sarb
xchg
pop
sub
xchg
sahf
fbld
pop
stc
ret
sarl
xchg
mov
inc
lds
add
or
cmp
xchg
test
cmp
fcompl
dec
mov
xor
mov
es
ret
shl
int
push
popa
loopne
sub
movsb
bound
je
outsb
mov
inc
insl
and
lea
out
push
dec
sub
mov
mov
fcoml
fwait
jb
sahf
lock
enter
jmp
lods
fdivl
mov
cwtl
cmp
test
mov
outsl
add
clc
ss
jb
xchg
mov
hlt
jmp
cmc
ljmp
xor
imul
insl
and
fists
add
jo
cmp
ret
mov
test
sbb
arpl
add
jge,pt
addr16
pop
mov
lret
jae
divb
xchg
in
cltd
cmpsb
xor
pop
mov
mov
fadd
or
or
pusha
mov
daa
lret
int
cltd
int
push
rclb
lods
sub
xor
mov
add
fiaddl
xor
and
jbe
mov
mov
fmul
cmpsl
jo
sti
push
lea
mov
scas
pop
mov
psrlw
inc
mov
mov
adc
ss
sarl
loope
cwtl
jbe
iret
mov
push
jecxz
push
mov
and
and
push
jge
cpuid
repnz
insb
jno
loop
jo
and
and
mov
fld1
mulb
lcall
bound
shll
add
rcrl
decb
cs
sbb
sbb
jns
xlat
inc
cli
pop
roll
add
insb
sub
jle
fs
cmp
add
jmp
pop
lods
mov
nop
inc
mov
scas
fwait
clc
and
sub
cld
push
divl
pop
cmp
pusha
mov
mov
mov
sub
sbb
js
xchg
mov
mov
sbb
nop
aas
repz
das
fsincos
aad
out
xor
fldl
addr16
adcl
or
aaa
push
pop
stc
xchg
pop
ss
stos
pop
jecxz
and
xchg
push
mov
ljmp
mov
mov
lods
and
shl
jae
adc
aad
and
test
pop
mov
mov
outsl
sub
sub
lock
test
sub
pusha
and
push
filds
jbe
lock
pushl
cltd
std
in
insb
mov
jno
xchg
jle
xchg
sub
stc
cs
repnz
mov
pop
lahf
jg
cli
jge
push
int
xor
stc
mov
dec
in
fstpl
adc
push
test
mov
lahf
outsl
add
inc
outsl
xchg
fildl
inc
mov
xchg
js
pop
jbe
in
outsb
stos
and
iret
aam
popf
pop
mov
icebp
fwait
jl
or
mov
ret
bound
push
scas
mov
js
mov
push
enter
fcompl
test
mov
sarl
inc
ds
inc
fstpt
add
hlt
adcb
dec
fldl
std
icebp
lcall
add
mov
sub
in
ds
mov
pop
or
std
fistps
mov
fdivrl
aaa
orl
pop
mov
jmp
adc
push
ss
mov
imul
push
stc
lahf
sub
cli
mov
mov
dec
scas
gs
ds
rcl
sub
xchg
popa
and
lahf
cltd
sub
pop
mov
mov
jp
adc
aaa
xchg
pop
add
cmp
iret
add
subb
aas
out
or
ja
test
lods
lahf
divl
notl
xlat
add
sbb
push
int
popa
dec
decl
xchg
cltd
fsubrl
xor
ror
popa
rcll
push
mov
xor
lods
aas
adc
sub
cmc
push
stc
arpl
xor
loope
rorl
push
outsb
adc
jge
ret
pop
cmp
daa
icebp
xor
int
jns
daa
mov
adc
mov
test
push
sub
imul
jge
and
or
sbb
add
mov
xchg
sbb
jns
pop
arpl
imul
xor
or
bound
jge
fsubrl
addl
scas
xchg
jg
push
xchg
outsb
lds
neg
and
or
sub
test
xor
enter
and
jno
insb
es
lock
pop
les
lods
outsl
pop
add
jmp
aaa
int
xor
in
or
neg
repz
mov
inc
ss
icebp
lret
sub
pop
and
call
rcrl
xor
sbb
or
mov
xchg
jne
cmpsl
dec
int
lods
imul
or
xor
into
rclb
fiaddl
nop
sbb
in
or
rcrl
mov
push
mov
xorl
mov
and
call
and
mov
sub
sbb
repz
or
addb
hlt
test
push
fisttpll
fcomi
and
repnz
sti
inc
pop
sarl
pop
or
in
int
and
aam
mov
aas
lea
pop
dec
imul
stc
movl
dec
xchg
and
shlb
jg
adc
add
int
dec
cmp
enter
jmp
sarb
rolb
rorb
add
bound
and
stc
ds
jb
fwait
xor
roll
mov
push
and
das
rol
int
adc
shr
push
loopne
in
cli
sahf
dec
sbb
ds
pop
adcl
mov
xchg
xor
sti
loope,pt
mov
call
push
outsb
sbb
js
mov
nop
lock
add
inc
jg
fisttpll
rcll
or
sbb
insb
stos
inc
and
imul
inc
sti
jmp
add
dec
push
sbb
sbb
scas
mulb
dec
fisttps
std
call
std
testb
jno
push
lock
mov
mov
or
in
int
repnz
outsl
or
fs
jmp
fcoml
in
mov
loopne
sub
xchg
xor
and
test
push
mov
lods
and
xor
ja
add
xchg
sbb
das
mov
push
int3
in
dec
aaa
shll
add
jmp
shlb
cmp
jmp
outsb
popf
jne
in
lahf
and
xor
fucomi
imul
aaa
aam
lahf
js
xchg
xchg
pop
imul
inc
js
testl
insl
xchg
loopne
jo
mov
sbb
ret
jl
inc
mov
bound
rcll
pusha
add
mov
mov
xor
icebp
test
push
pop
outsl
call
or
or
pop
add
adc
fwait
outsb
lods
in
jmp
mov
pop
add
in
or
fwait
lret
inc
loop
adc
stc
faddl
sbb
cmp
xchg
mov
shrl
idiv
out
cwtl
mov
push
mov
loopne
les
dec
cli
jl
fadds
cltd
lods
xor
clc
shrl
mov
mov
scas
test
rcl
jb
pop
xorb
fucomip
adcb
xchg
sub
shll
cmp
stc
pop
jns
jp
and
adc
out
stc
jns
cmp
push
lock
jbe
add
lds
insb
in
fstpl
pop
daa
xor
cs
pop
mov
xlat
mov
sbbl
push
and
pop
or
test
sub
add
fnstenv
clc
ficoml
jl
mov
add
loopne
sbb
mov
xchg
add
sbbl
xor
clc
or
adc
lcall
cld
jo
mov
cmpb
in
pop
js
mov
pop
mov
push
inc
pop
es
out
fisubrl
adc
hlt
inc
add
and
sub
mov
in
pop
jge
push
cmp
in
sbb
cld
rolb
shrl
int3
fisubl
js
stc
xlat
jae
or
sub
pop
scas
or
in
gs
and
je
inc
mov
cwtl
jmp
or
gs
jmp
cmc
icebp
negb
rcrb
cmp
push
ss
pop
pop
insb
mov
movsb
dec
xor
add
dec
out
sahf
cmp
icebp
and
sub
pop
xchg
jl
enter
add
loopne
lods
lcall
sub
sbb
into
inc
mov
mov
push
fwait
inc
jbe
or
psubq
fs
ds
test
push
push
ret
push
and
repnz
pop
cmp
xchg
push
call
enter
mov
fadds
inc
into
mov
push
xor
mov
sbb
in
jo
push
pop
mov
pop
cmpsb
fwait
lea
movsl
loop
or
shl
dec
xchg
cmc
or
std
mov
fdivs
sub
int
flds
cmpsb
push
and
adc
mov
xchg
inc
jp
scas
push
and
int
lret
sub
lea
decb
sub
loopne
push
pop
repnz
movsb
push
fcmovu
mov
pop
xor
or
mov
xor
mov
pop
xchg
or
test
stos
data16
cmp
xchg
cwtl
scas
or
push
add
jecxz
movsb
enter
cwtl
push
xor
jge
pop
icebp
sub
ss
add
ds
fimuls
jmp
and
andb
or
lock
outsl
dec
stos
roll
stos
push
aaa
inc
sub
cmp
xor
sbb
xlat
fidivl
add
inc
sarl
mov
cli
test
xlat
aad
bound
jl
mov
hlt
sub
fiaddl
popl
push
test
jae
pop
popa
out
or
popa
jp
push
lret
inc
mov
ds
inc
inc
xlat
cli
xorl
das
push
or
test
outsl
lcall
movsl
jmp
jge
cmp
jl
jne
shrl
mov
lea
lcall
jg
hlt
fwait
or
leave
ret
mov
adc
sahf
lret
and
test
test
push
lea
push
imul
mov
xor
insb
lods
add
xor
outsb
into
addr16
push
or
ds
inc
pop
xchg
ret
loop
ret
add
imul
outsl
popf
lock
sub
call
sbb
mov
add
mov
jns
mov
int3
cs
xchg
in
sarl
cltd
jge
loope
jnp
mov
push
fisubs
ret
test
or
outsb
push
out
mov
imul
outsb
in
jb
nop
std
in
xchg
add
sbbb
mov
jecxz
imul
add
gs
or
dec
fildll
aaa
ljmp
pop
aam
jb
mov
add
cltd
jb
cwtl
mov
popa
outsb
lret
xor
xchg
scas
shll
idivl
fsts
fistps
sbb
lods
out
inc
test
int
jb
rcll
mov
mov
sbbl
sahf
ds
outsb
andb
shrb
stos
imul
and
push
das
nop
inc
daa
push
shll
cld
sbb
xor
insl
nop
sarl
push
orl
xor
roll
cwtl
mov
imul
in
jo
test
cli
or
mov
xchg
jge
dec
out
mov
rclb
push
jge
mov
scas
loope
sahf
or
sbb
out
jns
jp
xchg
fmull
and
cld
out
and
fwait
das
aad
aaa
mov
mov
sub
roll
pop
test
outsl
mov
loop
push
pop
hlt
jns
ss
mov
arpl
leave
mov
fcmovbe
and
add
jmp
inc
out
mov
fstpl
push
sahf
imul
sbb
push
add
call
mov
and
sahf
shrb
cs
xchg
inc
in
mov
rcl
clc
mov
dec
xchg
jmp
jecxz
movsl
jle
ds
sub
add
add
outsl
xchg
adc
adc
je
cmc
fidivrl
xor
ja
push
mov
cmp
mov
dec
loopne
add
xor
clc
test
cmp
dec
fstl
cmp
xor
pop
dec
mov
mov
bt
xor
mov
xchg
dec
loope
mov
cmp
sub
mov
add
lea
orb
sub
adc
int
aas
js
ja
jbe
mov
aam
mov
sti
mov
aas
adc
daa
xor
mov
in
xchg
or
rorl
leave
icebp
xchg
adc
pop
pop
dec
aad
xor
jne
mov
jg
xchg
jne
int3
mov
mov
add
loop
pusha
xchg
sbb
outsb
aad
jge
repnz
iret
mov
add
sub
sbb
adc
add
mov
std
cmp
aam
fwait
cmp
shl
jbe
adc
pop
loop
or
jge
roll
es
push
mov
dec
push
pusha
inc
xchg
movsl
push
mov
lea
mov
xchg
push
cmp
xchg
repnz
arpl
enter
push
outsb
out
and
out
neg
add
inc
js
repz
outsb
ljmp
mov
pop
jmp
dec
mov
mov
jmp
lret
lret
pop
lret
push
test
test
dec
mov
outsl
roll
pop
fcoms
testb
jge
les
pop
in
mov
out
xchg
into
test
insl
outsb
push
pop
jo
clc
or
or
dec
dec
movsl
adcb
adcb
fs
cmp
add
jge
pop
clc
subl
mov
mov
push
test
outsl
icebp
sti
shlb
jl
dec
inc
mov
cmc
repz
aas
fistl
popa
jmp
dec
notb
repz
add
sbb
add
pop
cmp
xchg
test
sub
cmpl
add
and
icebp
jp
push
movsb
and
mov
aad
inc
decl
andl
cli
lret
add
or
sub
adcl
and
test
imul
sbb
nop
sub
and
test
xchg
ds
or
jg
je
sbb
cmp
or
push
in
push
cwtl
xor
roll
mov
xor
loop
popf
mov
testb
leave
inc
jp
sahf
int
das
fimuls
mov
cmp
xlat
jb
mov
movl
stos
rcrl
mov
add
cmc
mov
jo
imul
subb
nop
ror
xchg
push
insb
clc
add
or
rolb
insb
lea
jecxz
sub
dec
in
jns
mov
xor
jnp
jo
js
jl
xchg
int
outsw
jmp
scas
pop
mov
lods
or
cmpsb
cmp
pop
pop
dec
add
mov
mov
int
sub
or
rol
shlb
xlat
int3
loopne
mov
call
jp
int
sarb
into
das
lret
outsb
mov
fsubrs
es
adc
cmp
sbb
sahf
js
fwait
push
shll
cmp
rcrl
sub
xchg
cli
add
push
stc
rolb
or
rorb
fwait
inc
cli
xchg
aad
mov
or
mov
clc
aad
outsb
cmp
hlt
shll
shrb
mov
lea
push
jne
mov
fdivl
adc
xchg
mov
lcall
push
mov
int
or
adc
jl
push
inc
mov
movsb
int
cmp
mov
in
test
jg
cltd
sarb
fldcw
pop
mov
or
jbe
lea
adc
add
and
cltd
loopw
jp
or
fldl
call
xor
js
mov
sbb
outsb
sbb
cmp
and
pop
aas
add
xchg
add
sbb
push
push
push
cmp
jne
sbb
outsb
xchg
fs
jp
push
jae
add
or
sbb
loopne
test
scas
js
aad
imul
pop
jge
cli
pusha
fmulp
sub
roll
cmp
jae
fistpl
mov
xor
or
sbb
fmull
sub
lods
sahf
mov
jle
inc
clc
mov
fs
fcoms
lods
xor
fucomi
adc
jge
mov
inc
and
cmp
jg
pop
inc
das
adc
mov
and
mov
cs
dec
sarl
outsb
mov
mov
or
ljmp
pop
jl
xchg
cwtl
imul
sbb
push
jmp
jecxz
dec
push
into
bound
push
and
rolb
std
sbbl
stos
daa
dec
inc
cld
int
jmp
popa
insb
test
ss
mov
inc
xor
lea
icebp
test
shl
notb
xor
imul
xchg
sbb
fcmove
test
adc
cmp
pop
mov
mov
push
mov
imul
js
in
ds
push
imul
shlb
dec
shll
loope
into
add
clc
xor
inc
lods
and
bound
mov
test
pop
sbb
movsb
add
mov
sub
mov
call
cmp
enter
add
call
mov
movsl
and
and
adc
sbb
loope
adc
stc
mov
ud0
xor
inc
hlt
mov
popa
lock
stos
push
lea
in
mov
in
sbb
decb
cwtl
xchg
or
mov
imul
mov
sub
dec
adc
pop
sub
dec
int
outsl
mov
popa
pop
outsb
test
popa
dec
adc
mov
data16
xchg
push
xor
add
add
sbb
cmp
or
inc
sub
lods
sbb
sbb
cltd
call
mov
ret
xor
jbe
pop
or
jl
scas
push
repz
fmull
mov
stos
mov
inc
or
cmpsl
mov
ljmp
arpl
mov
cltd
mov
cwtl
setge
repnz
adc
insb
sbb
add
mov
cwtl
xchg
shrl
xchg
and
jo
popf
sbb
icebp
adc
addl
xchg
arpl
lahf
pop
jmp
xor
or
scas
inc
fdivl
xlat
add
inc
cltd
int3
daa
inc
daa
roll
cs
or
in
stc
ror
add
pusha
arpl
out
fs
call
roll
ret
mov
or
int
imull
mov
insb
pop
lods
imul
cmc
mov
ljmp
mov
pop
sbb
arpl
testb
push
cmpsl
sbb
cmp
push
daa
mov
fmulp
loop
aas
cmp
add
filds
inc
test
or
fistpl
push
idivb
fs
dec
xlat
test
fwait
imul
out
xchg
bswap
xlat
cwtl
or
mov
mov
or
xor
fdivrs
jle
sti
sbb
xor
fs
paddusb
cmp
lahf
jne
cmp
mov
cmp
jne
std
dec
sbb
mov
aad
push
cmp
add
add
adc
in
mov
fimull
mov
outsl
mov
sbb
sarb
cld
add
cmp
bound
fstpl
out
jp,pt
int
sbb
or
ds
std
std
out
pop
jl
adc
mov
cmp
pop
fmul
pop
xchg
push
dec
mov
cmp
push
mov
mov
js
roll
or
fdivrl
ret
jl
sub
out
outsb
adc
dec
shrb
push
mov
jg
dec
sub
lods
and
jge
mov
sub
in
jle
cmpsb
das
pop
lea
sar
mov
cwtl
movsl
pop
cltd
cmp
lret
fcom
adc
nop
mov
sahf
jae
pop
cltd
and
add
mov
mov
jnp,pn
filds
xchg
adcl
pushf
or
add
mov
push
jb
add
sti
rorb
adc
push
test
popa
lret
mov
adc
dec
out
sbbl
outsl
mov
insl
push
test
shrl
les
sbb
mov
push
xchg
out
inc
daa
lcall
mov
xchg
lods
adc
push
lods
fists
test
outsl
orb
jmp
mov
sub
sbb
popf
mov
imul
or
xchg
dec
mov
pop
xchg
push
push
fadds
int
mov
inc
pop
inc
or
xchg
sbb
fcoml
scas
aam
fisubs
outsl
dec
stc
jno
jle
mov
and
cmp
mov
xor
dec
rorl
pop
cmpl
ds
fcomip
and
push
fsts
cmpsl
daa
xor
adc
add
lds
lods
out
sub
add
dec
sub
add
cmp
std
fdivp
add
cmp
xchg
mov
mov
push
roll
out
mov
fstps
xchg
fldenv
mov
shrb
inc
loope
adc
mulb
jno
adc
imul
adc
dec
rorb
cs
cmc
imul
fwait
jnp,pn
push
fistl
mov
jg
lea
test
rcll
ja
mov
sub
pop
xlat
cmp
pop
add
mov
xchg
cmp
fdivrs
jg
fiadds
shl
outsb
add
or
mov
sub
sub
cmp
xor
movsb
jge
or
sub
mov
sub
lea
or
inc
or
pop
xor
lea
ljmp
mov
mov
stos
repnz
into
pop
pop
js
mov
jp
sub
popf
fcmovu
cwtl
iret
and
mov
dec
and
nop
stos
ljmp
mov
es
jge
xchg
cli
sub
mov
ss
bound
outsb
jbe
add
cmpsl
idivb
mov
jge
xchg
into
mov
std
cli
and
mov
lahf
jecxz
cmp
push
scas
mov
aas
and
xlat
sbbl
js
lahf
daa
dec
sub
popa
add
push
add
roll
mov
mov
jge
adc
inc
bound
inc
icebp
push
jnp
adc
fisttpll
adc
jecxz
sbb
xchg
push
dec
stos
out
mov
je
jns
push
int3
cmpsb
int
pop
int3
in
xchg
dec
outsb
lahf
out
pushf
xchg
mov
and
scas
fwait
idivl
mov
addr16
lahf
dec
into
out
std
outsl
jno
sbb
jg
int
add
cwtl
nop
mov
adc
jecxz
mov
lock
cwtl
mov
sti
mov
xchg
lret
push
cmp
dec
in
ds
pop
ret
mov
pop
arpl
out
xchg
mov
arpl
pop
bound
lods
mov
jo
pushf
add
scas
orl
incl
cmp
ficompl
and
sar
dec
int
dec
aad
scas
sbbl
scas
imul
pop
lea
shrb
imul
into
ss
xchg
cwtl
fnstcw
sub
iret
imul
inc
dec
enter
popa
fldenv
pop
cmp
and
add
inc
mov
mov
jo
sub
and
push
add
out
dec
cmp
icebp
sbb
mov
mov
pop
jnp
cltd
pop
roll
push
adc
ljmp
in
stc
bound
dec
sbb
jae
mov
jge
cltd
xchg
lret
inc
mov
adc
daa
jl
gs
pop
js
stos
adc
jmp
xor
rcrl
lret
aad
rcll
push
orl
pop
push
aas
jmp
jecxz
clc
cli
inc
das
neg
js
fidivrs
or
inc
pushf
mov
in
std
das
mov
jl
je
add
cmp
jge
pop
popf
lret
push
dec
ljmp
xor
outsl
fcompl
sbb
inc
popa
jg
rcl
or
fmuls
dec
aas
xor
dec
int3
iret
mov
fwait
xchg
pop
ret
mov
xchg
jle
sbb
shll
int
jb
push
test
lea
cmp
test
push
and
mov
xor
push
lahf
imul
add
lret
and
stos
in
or
fists
or
add
int
xor
arpl
and
xor
add
dec
mov
mov
sbb
mov
clc
add
std
xor
aaa
fildl
mov
in
scas
lcall
mov
pop
push
jecxz
and
in
and
jnp
scas
cmp
mov
shl
sti
movsb
add
out
enter
jb
mov
dec
cmpsb
mov
xchg
das
xchg
mov
mov
mov
xchg
and
aaa
xlat
mov
mov
fcompl
sbb
mov
lcall
add
jmp
call
sub
inc
fidivrs
cmp
pop
or
andb
popa
stc
and
je
insb
pmuludq
adc
aad
testb
mov
stc
xlat
push
inc
xchg
push
xor
xchg
and
imul
filds
imul
fistps
jns
cltd
push
jl
and
mov
clc
sbb
std
xlat
hlt
push
pusha
enter
fbstp
aam
call
sbb
sbb
incl
add
sbb
mov
jns
lahf
dec
mov
sbb
add
rorl
mov
test
lcall
hlt
push
fabs
sub
push
fsubl
lock
push
leave
ss
pop
test
fidivs
lds
sti
lea
repnz
inc
inc
push
cmp
cmp
and
cmp
inc
sti
cmc
pushf
push
mov
test
ds
add
adc
enter
loopne
stc
jp
and
pop
xor
testl
rol
or
sbb
mov
aas
or
mov
jmp
jno
or
xor
xchg
mov
push
cmp
xchg
xor
fmuls
xchg
xor
nop
mov
stos
add
andl
rol
or
dec
les
push
inc
loope
sbbb
jmp
ficoml
cwtl
push
mov
and
or
mov
sbb
or
adc
test
sbb
inc
add
in
add
or
push
fcomps
or
test
shlb
aaa
popf
out
fildll
xchg
jecxz
dec
mov
ret
out
movsb
cltd
sar
mov
imul
aad
je
or
in
jp
lea
stos
mov
mov
std
notb
out
or
inc
in
add
sarb
clc
sbb
sub
push
mov
fnstcw
mov
flds
insl
nop
scas
aaa
rolb
mov
jge
cs
mov
cli
roll
addr16
mov
aam
outsb
jmp
push
call
test
jmp
ja
sbb
adc
out
jmp
test
add
nop
cmpsl
add
fcoms
fmulp
xor
ficoml
in
or
mov
movsb
fisubl
push
pop
outsb
in
test
push
call
pop
and
popa
push
aam
in
imulb
test
dec
lods
add
cmc
addl
mov
out
test
filds
xlat
fwait
das
popa
push
in
xor
ret
in
call
sub
jmp
mov
ljmp
fucomp
cltd
pop
pop
pop
mov
lea
arpl
inc
adc
popf
mov
ret
jbe
flds
sbb
and
shrl
xor
and
movd
adc
cs
and
lea
cmp
inc
daa
or
and
enter
pop
bound
pushf
test
rcrl
outsb
jb
xchg
mov
mov
iret
mov
add
imul
mov
in
mov
rcll
gs
push
cld
jnp
or
or
dec
mov
xchg
dec
inc
les
daa
pop
movsb
jb
aaa
sti
sub
test
ret
cmpsb
and
inc
fmull
xor
mov
sbb
mov
add
mov
fabs
jle
push
pushf
enter
or
cmp
adc
mov
push
hlt
xor
in
pop
test
jbe
loop
leave
mov
or
arpl
daa
mov
mov
push
fistpl
ds
into
out
mov
cwtl
sub
add
mov
movsb
sbb
test
pop
hlt
roll
mov
sub
sbb
add
lea
dec
mov
inc
mov
int3
pop
sub
in
sbb
mov
sbb
xchg
cmp
mov
add
movsb
push
shl
vandps
push
int
push
dec
outsl
into
aas
outsb
idiv
or
rolb
cltd
in
rorb
and
test
mov
inc
and
push
jg
fcomi
cmpsb
mov
lea
and
push
jg
jl
push
sarl
scas
mov
xchg
adc
fcomip
test
into
out
xchg
mov
roll
lcall
idivl
lea
pop
cltd
dec
lock
movzbl
mov
stos
mov
or
icebp
mov
cltd
add
add
adc
lea
cld
loop
sti
push
cltd
test
mov
mov
outsl
rcl
bound
clc
jg
jno
mov
out
push
push
add
arpl
lahf
xor
push
and
fsubl
loop
scas
fisubs
jns
pop
fcmovnb
loopne
mov
sub
mov
push
xchg
jmp
fiaddl
popf
and
pop
sbb
mov
mov
xor
int3
lahf
mov
cwtl
xchg
fwait
popa
or
out
icebp
dec
iret
mov
xchg
fmull
ja
add
repz
or
xchg
jno
or
cmp
cmp
xor
xchg
pop
sub
repz
jmp
push
stc
push
and
add
mov
xchg
lea
jo
mov
out
in
lea
sahf
adc
mov
jl
xchg
cmp
or
test
subl
int
mov
addr16
icebp
push
shll
int3
test
xchg
int
jne
stos
test
jg
xchg
addl
adc
xchg
add
in
xor
or
adc
idiv
call
shrl
ljmp
notl
jl
mov
xor
loope
cmp
lds
xchg
call
jmp
leave
in
popf
pushf
mov
ret
movsb
jg
lea
sbb
sub
jl
fsubl
mov
jmp
mov
jl
or
lret
repnz
lahf
aad
and
shl
insl
xchg
aaa
fisubl
push
cli
pop
stos
clc
subb
pop
inc
add
push
sub
int
lcall
sahf
push
inc
xorb
adc
and
push
loope
cmpsb
jnp
outsl
cmpsl
ss
add
and
ljmp
jmp
xor
in
or
ficoms
sbb
dec
mov
ja
adc
add
xchg
int
push
lret
fs
sub
mov
fldpi
and
inc
lahf
std
movsl
sbb
sti
pop
adc
mov
xchg
in
sbb
and
adc
sbb
xchg
popf
or
incl
cwtl
or
and
and
jmp
mov
sbb
and
xchg
pop
rorb
and
fdivl
cmpb
cwtl
or
cli
xchg
cmpsb
push
xor
leave
dec
mov
xchg
test
movsb
or
incl
lds
sub
sbbb
xchg
pop
sub
enter
imul
iret
jb
call
jmp
or
js
popf
jnp
mov
imul
dec
ret
mov
roll
and
call
insb
push
inc
imul
daa
cwtl
xchg
stc
push
cmp
cmp
test
insb
push
leave
test
push
rclb
xor
aam
loopne
in
add
nop
bnd
mov
pop
roll
mov
test
dec
repnz
or
inc
pop
xor
es
inc
lea
ljmp
out
push
mov
sbb
pop
adc
roll
fisttpl
outsb
jno
and
in
call
stc
inc
into
repnz
cmp
roll
and
sbb
clc
xchg
push
pop
popf
aam
sar
stos
sub
out
add
fiaddl
jp
ljmp
into
cmpsl
cld
sar
int
rep
aad
sarl
pop
pop
xchg
xor
inc
mov
aad
push
fwait
cmc
cs
mov
and
aam
popf
jno
aaa
iret
and
sbb
sbb
fistps
mov
mov
mov
xchg
and
mov
add
push
jmp
push
mov
add
test
xchg
push
sbb
sbb
mov
xor
cmp
lods
pop
test
add
fstpl
mov
inc
inc
ss
shll
jmp
sub
hlt
xor
shrb
mov
add
jns
pop
sub
stos
sub
and
bound
enter
fdivl
sbbb
test
inc
jl
xchg
jns
mov
xor
mov
andl
test
call
stc
jge
lea
fsubrs
push
sub
data16
imul
or
bound
ficompl
pop
sub
rorb
adc
lea
push
inc
mov
loop
and
and
test
fistl
add
lea
je
repnz
fucompp
cld
push
cmp
adc
popf
rorb
fldenv
out
lret
cmp
add
xlat
pop
hlt
imul
testl
push
shrb
jmp
cli
sbb
icebp
rorl
push
jno
cmp
cld
mov
nop
out
rclb
mov
rcrl
cmpsl
incl
rcrb
push
xchg
jns
pop
out
sbb
mov
push
insl
outsb
inc
rcll
popf
fsubl
xorb
movsl
ret
xor
fsubrl
imul
fldl
add
jno
test
lret
or
test
jg
add
sub
ficompl
mov
push
pop
jge
stos
loope
lcall
ss
pop
add
or
fcmovnbe
cld
stos
mulb
mov
out
jmp
jo
rcrl
cmp
sbb
stos
aad
popf
cwtl
xchg
xchg
rclb
in
ss
xchg
push
pop
out
or
test
sub
cmp
cmpsl
fstps
enter
pop
jne
repz
and
les
cmp
jno
sub
or
xchg
cltd
sbbb
lea
or
inc
mov
inc
inc
add
out
pop
adc
addr16
jb
test
int
test
int3
push
shrl
test
mov
stos
or
sarb
jge
test
sbb
mov
jbe
fcmovnu
int
incl
jge
fldl
push
aaa
cmp
fildll
and
inc
or
stos
or
xchg
push
pop
mov
mov
inc
xchg
fwait
xchg
add
int
push
push
mov
repz
cmp
xchg
cmpb
lea
divl
pusha
iret
push
insl
add
lcall
mov
or
mov
popf
jp
mov
jbe
sub
icebp
add
sti
inc
push
sti
cmp
shr
nop
scas
pop
test
jmp
cmp
cmp
xlat
popf
push
fsubs
stc
push
sbb
cwtl
leave
and
ljmp
mov
cmc
lcall
int
lahf
mov
testb
xchg
mov
sub
jnp
cmpsb
cltd
lea
cmp
lcall
mov
int
or
cli
mov
in
xchg
ret
stc
dec
push
mulb
data16
out
imul
push
mov
jmp
mov
mov
push
shl
cmp
inc
jmp
popf
rcll
ficoml
xchg
adc
xchg
out
adc
inc
inc
int
popf
mov
or
inc
pop
push
and
pop
dec
outsb
scas
xor
cmc
inc
in
movsb
cmp
faddl
mov
int
jl
inc
sbb
or
inc
cmp
mov
mov
inc
cwtl
ljmp
ljmp
jns
out
shl
test
xchg
stos
std
mov
pop
arpl
imul
mov
cltd
sahf
xor
shll
jmp
mov
mov
xchg
mov
aam
cltd
or
push
cmp
mov
cli
fsubl
mov
clc
ljmp
gs
cmp
add
jno
fdivl
mov
fsubs
sub
fisttpl
jb
icebp
in
es
pop
pop
add
inc
lea
xchg
outsl
sarb
loope
es
jns
mov
dec
ss
xor
andb
test
pop
lret
sti
mov
sub
dec
clc
mov
fistpl
inc
or
ds
lea
divl
fdivs
mov
les
lea
daa
lea
int
rol
out
sub
mov
pop
stc
std
int
sub
pop
int
cmpsl
rorb
movsb
stc
div
jnp
or
sahf
push
dec
test
cmp
dec
xchg
in
jg
xchg
mov
outsb
add
cs
sbbb
adc
add
dec
in
or
add
mov
and
aas
cmp
jbe
test
mov
pop
push
add
test
or
dec
enter
rorl
rorl
mov
aas
sbb
stos
or
pop
sbb
addl
popa
aam
andl
je
int
fwait
in
rcl
inc
subl
int
aas
mov
fucom
jmp
jge
cmpsl
ror
adc
roll
stc
fadd
dec
mov
imul
int3
inc
inc
fmull
jmp
mov
popa
inc
or
cmc
or
mov
adc
jae
test
xchg
sbb
sbb
pop
jne
cltd
inc
mov
push
in
fldl
add
sbb
ret
or
pop
add
movsl
js
jecxz
daa
jne
mov
mov
test
mov
mov
fldenv
fldt
or
push
mov
out
or
mov
mov
pop
push
inc
rcrl
cli
imul
pop
jp
mov
in
test
pop
rcr
mov
test
xchg
mov
mov
mov
das
idivb
das
cs
add
imul
ret
sbbb
imul
and
in
pop
test
repz
fiaddl
mov
out
std
lahf
iret
das
xor
jg
jp
popf
jmp
fnsave
inc
in
push
roll
mov
cmp
int
mov
cmpsb
mov
loope
dec
lret
clc
mov
sbb
jge
mov
cli
into
xchg
mov
pusha
mov
fimull
cmp
mov
mov
adc
lock
mov
mov
push
xor
roll
ret
aaa
jp
call
xor
sbb
and
incb
cwtl
scas
or
push
repz
divb
pop
idiv
inc
sahf
outsl
shll
sub
jbe
pop
mov
and
mov
das
sub
sbb
ds
cltd
inc
clc
push
jne
loopne
idivl
sub
cmp
mov
out
sub
jno
aad
pop
lea
movsb
pushf
inc
lods
cmc
lods
push
lds
mov
xor
in
sbb
sub
ret
in
dec
xchg
add
sub
insb
or
pop
roll
and
inc
test
rcll
lods
icebp
pusha
push
mov
aad
dec
stc
nop
imul
pop
idiv
lahf
in
rcrb
mov
xchg
xlat
push
mov
ffree
pop
mov
pop
sahf
std
testl
mov
cmpsl
push
das
mov
test
add
cltd
mov
scas
fcmovnb
loope
shrb
mov
jecxz
int
jno
icebp
aad
inc
adc
mov
pop
rcrl
or
icebp
jge
icebp
aam
out
xor
lds
int
add
in
shl
sti
mov
jo
in
sti
stos
lret
mov
pop
xchg
aad
sar
adc
nop
jmp
loope
and
popa
xchg
push
test
and
jo
icebp
cmpl
and
pop
in
jmp
cltd
test
mov
rcrl
mov
cmc
cltd
popf
stc
mov
mov
mov
cltd
in
repz
sar
int
mov
xorl
iret
mov
lret
icebp
shrl
xchg
stc
out
out
pushf
sti
insb
lahf
std
push
movsl
mov
fisttps
pusha
out
cmc
ja
mov
icebp
mov
loopne
loopne
pop
xlat
out
loope
cmpsl
jne
jg
iret
xchg
xlat
lahf
lea
call
xor
mov
test
incl
cmpsb
or
jne
push
out
jmp
test
loopne
js
pop
stc
xchg
jmp
jmp
sbbb
add
xor
jns
pop
test
ficoml
ror
out
jbe
mov
aaa
in
sbb
outsb
add
jne
cli
push
popf
jle
lahf
mov
dec
xchg
adc
out
int3
dec
es
lret
fwait
cmp
lret
xchg
les
test
cld
int
cli
xor
arpl
imul
inc
cmp
add
xchg
jg
fcoml
jmp
bound
or
add
out
mov
and
pop
ljmp
xchg
cld
inc
jnp
mov
testl
pop
movsl
xchg
aam
cmc
add
mov
xchg
shll
dec
cs
icebp
and
hlt
icebp
pop
fldt
out
cmp
sbb
je
iret
fcompl
das
dec
mov
aad
ss
int
pop
sub
fistpll
push
xchg
gs
dec
add
aas
fmuls
mov
shrb
imul
or
mov
add
push
ljmp
cltd
mov
sbb
inc
ficoms
std
test
xchg
add
movb
jge
inc
mov
and
rcrl
mov
outsl
or
rolb
mov
sub
adc
je
inc
sti
popa
fimuls
jg
sti
or
push
and
or
pop
inc
into
xchg
insb
cmpsl
mov
cltd
pop
jl
xor
sub
idivl
repz
adc
adc
mov
xor
pop
pop
and
fcoml
iret
cmpsb
add
and
lcall
xor
sbb
stos
imul
fabs
js
ret
jmp
sub
out
push
mov
scas
pop
ss
arpl
jne
jl
jmp
lods
mov
push
fsubs
lret
imul
pop
fisttps
testl
add
xchg
rorl
or
add
jl
inc
fldl
rcrl
push
pushf
stc
iret
mov
pop
pop
shlb
in
jl
repnz
mov
adc
lcall
movb
push
sub
jp
stos
jl
imul
sahf
in
xor
push
sbb
push
lods
loopne
fisttpll
fsubrl
int
shrb
lret
xor
in
inc
fsubr
mov
imul
testb
xlat
xchg
lcallw
jp
xor
sahf
in
push
pop
xchg
cmp
shl
outsl
repz
rorb
adc
addb
inc
mov
shlb
rcrb
cwtl
xchg
adcl
adc
inc
popf
jno
cwtl
jmp
test
jbe
popf
test
loopne
popa
addr16
fldcw
and
push
in
stc
ss
inc
das
icebp
clc
roll
movsb
cwtl
sub
push
insl
cmp
mov
mov
ret
pop
pop
dec
dec
lcall
aaa
dec
imul
cmp
lret
in
cmp
cli
mov
lea
xor
pop
xchg
mov
loopne
fdivl
mov
jge
xlat
mov
jg
aas
sub
mov
outsb
sti
xchg
ret
pop
leave
push
mov
sub
div
fcomps
clc
push
mov
xchg
pop
or
fmuls
push
mov
sbb
or
lock
rcll
stos
outsl
movb
lret
imul
bound
das
movsl
lds
cli
dec
or
mov
mov
xor
pop
cmpb
dec
mov
outsl
xchg
rcl
js
xchg
test
inc
inc
pop
jae
leave
add
pop
fbld
aad
ror
test
cmp
adc
imul
js
jmp
and
xchg
gs
cmpb
stc
sbb
fwait
gs
sub
and
mov
fnstsw
movsb
imul
xchg
mov
jecxz
mov
scas
mov
int
push
cmp
or
inc
addl
outsb
loope
inc
pop
xor
sar
mov
add
jg
out
lods
add
jle
aad
outsl
mov
push
mov
and
xchg
insl
xchg
fs
ljmp
div
decb
xchg
sti
fldcw
in
mov
lea
inc
add
inc
es
xor
cmpsb
loopne
push
cs
cmc
aam
imul
add
and
inc
ljmp
aas
push
jbe
arpl
iret
shlb
stos
mov
sbb
cld
push
mov
xlat
pop
cld
sub
add
pop
push
ret
sbb
cmp
jb
test
and
jb
es
push
jmp
mov
xor
jno
pop
jp
xchg
icebp
lock
mov
jbe
mov
push
mov
imul
divl
inc
inc
push
sbb
imul
mov
cmp
in
imul
test
testl
cwtl
sub
in
lea
xor
add
nop
lea
mov
pop
mov
mov
outsl
cmp
add
adc
test
shr
aad
addb
lea
lret
add
xchg
mov
arpl
jge
push
into
mov
stc
movsl
aas
cmpl
xchg
in
sub
ss
mov
rclb
rcll
icebp
icebp
cld
xchg
ret
xchg
xlat
mov
xor
data16
int
xor
mov
dec
sbb
icebp
xor
and
imul
addl
outsb
mov
and
scas
nop
jl
sbb
adc
push
aam
jp
rclb
into
xor
adc
mov
stos
inc
push
and
pop
adc
mov
js
mov
mov
dec
repnz
mov
rcll
and
push
and
gs
push
mov
data16
lret
sbb
adc
lods
and
jae
sub
insb
pop
loopne
gs
dec
push
and
fiadds
pop
jbe
xchg
mov
add
repz
nop
pusha
out
mov
out
int
push
imul
lods
mov
lock
push
xchg
rcrl
mov
add
test
sahf
xor
ret
in
les
cmc
pop
out
inc
sub
xor
rolb
pop
and
and
fnsave
roll
cmpsl
and
daa
lock
cwtl
jns
mov
jmp
push
xchg
pop
xchg
or
loop
fistpl
dec
pop
mov
fs
into
imul
filds
lea
push
or
sbb
icebp
test
ret
mov
pop
mov
shrb
sub
inc
lods
or
mov
addr16
movsl
outsl
es
mov
jns
std
or
ss
fidivrl
enter
or
mov
stos
jl
and
sub
xchg
fcoms
repz
mov
push
push
insb
imul
adc
lret
xchg
insb
mov
shlb
lret
stc
xor
adc
cmp
jns
iret
inc
jg
mov
pop
arpl
js
mov
sbb
push
xor
sbb
sbb
cmp
scas
add
pusha
adcl
negl
sub
lds
and
lock
cld
repnz
jae
push
pop
xor
mov
inc
pop
push
adc
push
sub
test
cmc
ficoml
inc
mov
cmp
test
xor
pop
mov
cmp
movsl
pop
add
cwtl
adc
jg
std
stos
jge
mov
out
inc
call
aaa
xlat
out
or
fildll
movl
mov
push
xchg
idivl
cmc
stos
mov
shll
jae
scas
scas
mov
popl
and
mov
cmpl
int3
cmp
add
mov
or
int
inc
outsb
lret
loopne
test
icebp
insl
xchg
outsb
insl
mov
into
sbb
inc
push
lea
mov
push
movd
and
or
add
in
insl
pop
jl
xor
loopne
xchg
sbb
add
test
ret
add
lea
jle
add
jno
and
and
pop
push
inc
flds
dec
adc
dec
xor
sub
push
mov
and
jnp
pop
jns
ljmp
adc
jbe
cmp
shrb
sarb
xor
out
lods
sub
jne
es
hlt
adc
xchg
jmp
test
addb
test
jmp
inc
or
cmpb
jmp
mov
mov
outsb
pop
cmc
daa
or
push
fstpt
xchg
xchg
sti
inc
mov
cld
movsb
pusha
testl
repnz
pop
out
insl
ja
cmc
repnz
stos
sbb
outsl
fsubp
cltd
js
xor
stc
in
mov
mov
popf
fucom
sbb
adc
mov
mov
sub
movsb
jae
and
xlat
rcll
pop
push
testb
dec
shlb
bound
sub
jmp
fnstenv
sbbl
out
mul
clc
cmpsl
sub
cmp
pushl
sbbb
jmp
pop
mov
int
test
add
jo
ljmp
or
mov
lret
jg
sbb
inc
lock
outsl
jmp
inc
add
mov
and
pop
out
jg
in
add
jge
cld
push
test
pop
arpl
cmpl
repnz
icebp
add
lret
pop
movsb
js
sar
out
hlt
ss
nop
mov
imul
and
mov
ljmp
pop
sar
mov
add
cwtl
push
scas
ds
xchg
xchg
jmp
es
pushf
mov
imul
inc
lret
push
in
in
jle
int3
hlt
xchg
pusha
dec
cmp
jecxz
stc
adc
adc
mov
cs
xor
or
insb
outsb
mov
int
sub
rorb
insb
or
mov
imul
cmpsl
call
add
scas
pushf
sbb
jecxz
imul
lds
jle
mov
in
or
cmp
sbb
push
pop
or
fwait
repz
rorl
mov
inc
sbb
jb
ja
das
aad
test
roll
lahf
scas
xor
outsb
add
in
cmpsb
or
push
int
dec
imul
js
sub
pop
leave
xchg
push
xor
imul
sti
arpl
lds
adc
adc
ret
addl
push
notb
sub
sbb
push
pop
or
pop
daa
data16
pop
aad
inc
mov
or
mov
dec
inc
add
lods
pop
fcom
mov
xlat
ffreep
adc
dec
mov
aaa
stos
lock
push
xchg
jnp
lock
cmpsl
jmp
pop
test
in
and
xor
ret
and
xchg
cwtl
or
sub
fdivrl
clc
sti
mov
mov
adc
stc
sbb
push
ljmp
push
mov
add
mov
cmpsl
add
jmp
cli
xchg
xorb
cld
or
adc
mull
je
xlat
cmp
sub
fcompl
adc
pop
sar
inc
sahf
sub
xorb
xchg
jns
lock
mov
mov
jge
imul
pop
or
addb
jge
into
mov
mov
push
or
and
hlt
push
test
mov
and
fsubrs
push
lods
sbb
dec
mov
xor
jno
add
sahf
xchg
xchg
outsl
mov
frstor
xchg
dec
loopne
add
rcrb
push
and
xchg
shlb
push
into
add
mov
cmp
icebp
test
int3
es
mov
and
mov
shll
adc
mov
mov
or
xchg
sti
testl
sahf
lea
lea
xlat
xor
in
xlat
addb
in
decb
stc
and
in
jno
xchg
pop
std
push
mov
pop
das
cmp
aas
nop
inc
fstl
adc
lea
rcll
into
testl
mov
inc
fildll
pushf
bnd
lods
jecxz
movsl
sti
sub
es
orb
outsl
sub
pop
out
and
popf
push
cli
aaa
pop
fwait
cs
lcall
rolb
lahf
mov
cmc
add
add
movsl
sub
sar
sub
and
and
xchg
mov
loope
js
cltd
mov
dec
cmp
daa
add
aaa
xchg
or
add
xor
jge
sbb
loopne
pop
sub
push
lret
or
mov
addb
add
addr16
xchg
add
add
js
mov
mov
insb
sti
clc
or
mov
and
mov
fwait
mov
pop
pusha
jp
jns
js
cmpl
in
test
stos
sti
push
or
jne
adc
mov
leave
movsl
mov
test
push
inc
outsb
cwtl
or
pop
fs
xor
sub
or
xlat
cli
cmp
test
cmp
lret
lahf
andl
xchg
scas
pop
addl
push
pop
push
pop
movsb
sub
mov
cld
orl
movsl
jge
adc
mov
into
dec
jne
jb
inc
xor
cmc
mov
mov
sbb
push
int
jge
iret
test
push
pop
in
test
pop
stc
dec
popa
dec
xchg
inc
mov
filds
mov
and
cmp
mov
pop
push
into
fildll
int
outsl
fists
subl
int3
or
ja
mov
push
test
xchg
cld
cmp
mov
pop
in
jl
inc
mov
mov
and
add
mov
xor
fstl
xchg
sahf
addl
outsl
hlt
push
mov
das
add
adc
mov
xlat
or
cmpl
pop
outsl
paddd
sarl
fwait
les
mov
xchg
fsts
mov
jge
mov
popa
roll
xor
mov
mov
cmp
jp
loope
push
mov
fcmove
or
mov
cmpsl
inc
int
nop
ljmp
sub
add
cmp
push
mov
cmpsb
test
sahf
out
mov
push
adc
or
push
xor
xor
scas
sbb
adc
out
clc
out
mov
iret
push
jmp
adc
imul
sbb
jg
or
xchg
das
sbb
lds
sbb
or
mov
sub
cmpsb
fcomi
or
dec
repnz
mov
test
or
sbb
xchg
cmp
mul
fimull
int
lret
pop
mov
pop
rorb
sbb
and
mov
lods
mov
mov
fwait
pop
leave
rolb
xchg
sbb
pop
xor
aas
mov
in
cmpsb
xchg
xchg
dec
int
cmp
icebp
mov
mov
scas
dec
pusha
clc
sti
lock
in
jbe
and
iret
mov
sub
and
dec
stos
hlt
pop
push
stc
or
cmc
stc
aad
inc
outsb
and
les
xchg
call
inc
and
push
cltd
in
push
adc
ds
jne
shlb
jge
fwait
stos
dec
scas
adc
je
jecxz
loope
cmp
cmp
shrl
inc
cmpsl
aaa
xchg
cmpsb
pop
add
cmc
loop
testl
fisttpll
and
fucomi
jbe
mov
and
loop
sub
vmovaps
testb
imul
cmp
and
push
and
lret
incl
icebp
pop
int
enter
or
cmp
shr
or
xor
adc
mov
scas
push
sub
sub
je
pop
or
dec
mov
test
ljmp
andl
adc
cltd
ds
sub
rcrb
dec
sbb
outsl
ds
dec
fstpl
mov
add
pop
cmpsb
mov
cwtl
mov
loope
sbbb
jecxz
lea
push
ficoms
lcall
mov
imul
shrl
sub
sub
cltd
pop
icebp
mov
push
cwtl
mov
loope
xchg
jnp
loop
xchg
add
sub
cmc
daa
rcrl
pop
xchg
incl
xchg
inc
and
popf
rorl
pop
out
sahf
dec
xchg
sub
movsb
nop
xlat
pop
xorb
sbb
or
sti
or
jae
sahf
lahf
aam
cmp
arpl
xchg
add
jnp
outsl
mov
stos
mov
movsl
mov
mov
cmpsl
popa
xchg
rsm
bound
push
roll
push
adc
and
mov
sub
sbb
subb
inc
jg
leave
fimuls
jle
xchg
lea
pop
jecxz
mov
add
lds
frstor
rorl
aad
mov
lods
sub
cwtl
push
jno
outsl
add
lds
cmp
sub
lret
ret
aas
sub
push
cmp
neg
fbld
mov
sbb
pop
ret
shlb
mov
and
mov
and
sarb
or
mov
cmp
mov
jl
adc
pop
mov
adc
dec
roll
stos
cs
mov
mov
lock
repnz
ficoml
xchg
daa
sbb
xchg
dec
ljmp
add
pop
fmull
sbbb
stos
rclb
inc
add
push
aaa
xchg
cmp
jp
pop
out
loop
jo
inc
in
xlat
divl
outsl
xor
jecxz
das
jae
ret
and
mov
mov
and
js
mov
js
or
xchg
jmp
daa
pop
shrb
cli
ljmp
mov
mov
ljmp
pop
pushl
push
ss
adc
push
aas
cmpsl
adc
popf
xchg
mov
mov
aaa
adc
outsb
ficompl
dec
in
and
xchg
push
sbb
lea
lock
pop
enter
push
push
jmp
dec
xchg
imul
dec
xlat
xlat
mov
stos
cmp
mov
sbb
mov
test
adc
sbb
or
lea
in
jbe
lcall
cli
cmp
fdivrs
mov
push
stc
fidivs
inc
lods
jg
xor
ljmp
es
or
pop
int
cmp
in
jbe
inc
cmp
adc
stc
out
lret
fwait
inc
rcrl
test
mov
mov
cmc
inc
subl
and
dec
sbb
call
nop
jae
sub
mov
xlat
lret
pop
push
sarb
fbld
popf
adc
push
imul
mov
sub
inc
xor
jg
iret
addr16
sbbb
xchg
xchg
rep
xor
mov
pop
mov
mov
cmp
iret
in
hlt
mov
cmp
jg
outsb
jl
lods
nop
dec
imul
inc
ljmp
in
adc
or
les
or
push
mov
adc
jno
xor
jmp
sbb
mov
adc
shlb
xor
ret
jp
nop
out
loope
ret
pop
leave
mov
add
cs
cmp
sub
shrb
jl
fwait
dec
outsb
mov
jl
and
stos
jge
imul
scas
jge
add
mov
add
cmp
inc
inc
push
pop
push
xlat
stos
sub
loope
fisttpl
in
pop
outsl
push
mov
mov
fisubrl
scas
pop
aad
or
cmp
lods
xlat
sbb
in
and
pop
pushf
icebp
dec
dec
in
cwtl
xchg
int
imul
xchg
push
cmp
sbb
jl
cmc
sarl
inc
frstor
pop
popa
pop
adc
int
fsubrl
lret
and
or
fnstsw
leave
jno
ror
inc
mov
or
push
shl
mov
es
loop
pop
lds
mov
mov
les
add
cmc
ret
sbb
add
loopne
or
sbb
pcmpeqd
popf
rcll
rcrl
leave
or
pushf
loop
outsb
cmp
and
sub
sub
add
cmp
jecxz
xchg
cmp
fnstcw
jp
lea
cmpsl
pop
sbbl
ret
jge
loop
stos
clc
pop
cld
inc
mov
jle
adc
push
adc
cmovno
sahf
test
std
in
or
and
mov
jo
mov
test
cmp
mov
scas
in
sub
adc
jbe
xor
stc
or
and
call
jmp
add
jmp
test
xchg
lds
icebp
test
shr
fbld
xor
jge
sahf
mov
sub
out
jl
push
adc
jno
push
xchg
xor
lods
pop
cmp
mov
idivb
int
inc
popa
mov
cmp
stc
notb
das
out
cmpsb
mov
push
call
ret
cmpsl
jg
or
divb
sub
and
and
pop
clc
jge
rcll
mov
jge
xchg
push
dec
jb
sahf
pop
ljmp
pushf
inc
sub
int
xchg
call
mov
xor
popf
mov
add
flds
cmp
mov
dec
mov
add
xchg
les
mov
fildl
lahf
cmpsb
sbb
outsb
fs
push
repnz
lea
adcb
mov
mov
pop
push
push
push
mov
out
roll
in
clc
cmpsb
mov
inc
or
popf
movsb
fisttpl
fiadds
fcompl
stos
shll
inc
or
push
push
or
mov
fsubs
imul
mov
add
ja
pop
and
xchg
push
out
push
mov
outsb
xchg
mov
dec
dec
pop
xor
mov
lock
andnps
push
sub
insl
and
cmp
loope
aad
pop
jmp
jl
cmp
cmp
push
mov
dec
dec
cmp
xchg
inc
loope
cwtl
daa
pop
notl
mov
mov
mov
cwtl
push
clc
fdivp
mov
add
in
pop
inc
loope
xlat
out
mov
inc
jle
outsb
aam
mov
xor
push
test
cwtl
lea
mov
cmp
xchg
push
mov
push
xor
fwait
cmp
loop
cltd
das
jne
out
cmpb
or
ljmp
adc
push
jne
aam
or
aam
mov
in
faddl
cmp
imul
inc
xchg
dec
xchg
jge
sti
pop
mov
push
icebp
clc
std
xlat
adc
mov
dec
lahf
bound
fdivl
ds
jecxz
push
jl,pt
sahf
jge
and
pop
int3
pop
addr16
xchg
data16
fsubr
jbe
filds
cmp
mov
mov
aas
cmp
stos
cmc
push
lods
loope
push
pop
sti
mov
mov
mov
out
pop
ljmp
shll
popa
or
push
cmp
rcpps
pop
pop
cs
ret
pop
mov
lea
dec
jge
lcall
push
jbe
andl
mov
lea
push
mov
or
lcall
clc
aad
ficomps
loop
inc
daa
ljmp
mov
cltd
xor
xchg
sub
jae
inc
and
shlb
mov
mov
dec
sbb
inc
rcrl
popa
in
or
dec
xlat
aas
fsubl
jg
cmp
mov
test
outsl
cmp
mov
popa
dec
test
repz
popf
cmp
in
cli
jbe
jno
jo
inc
lock
outsb
mov
sub
idiv
and
mov
sbb
outsb
push
push
int
or
fiaddl
xor
jno
popf
lods
cmp
mov
in
jl
mov
stos
lds
pop
xchg
push
push
aas
stos
cmp
ljmp
inc
sub
xor
mov
dec
icebp
cmp
mov
and
mov
lea
inc
xchg
cmp
test
sbb
xchg
fcomip
in
orb
or
pusha
hlt
mov
adc
push
notb
adcl
xchg
bound
pusha
ljmp
out
add
cli
mov
jno
lea
ss
fstps
pop
add
addr16
mov
fcom
in
cmp
mov
push
or
and
icebp
push
push
stc
jl
pop
addl
jne
add
rorl
pop
mov
int
popa
and
shr
rcrb
xor
xor
in
push
or
lcall
dec
int3
dec
mov
mov
test
jmp
jmp
pop
idivb
sbb
dec
pop
mov
jp
adc
das
sub
sbb
or
fidivl
in
cmc
add
cmp
dec
stos
xor
sub
sub
mov
push
sbb
fistpll
mov
or
test
loop
pop
push
aam
jb
adc
cmp
int
mov
fdivl
pushf
mov
aad
ja
sahf
in
imul
xchg
in
aad
lahf
out
mov
sbb
add
repnz
pop
sar
mov
stc
xor
sub
xchg
enter
xor
inc
jmp
add
iret
mov
jl
mov
loopne
sbb
inc
mov
push
in
cwtl
int3
add
aam
xor
jg
push
jle
cmpsb
clc
ljmp
push
js
roll
or
fcomi
xchg
jb
std
mov
das
cs
mov
mov
adc
out
inc
fiaddl
pop
ss
loope
pop
jg
outsl
int
out
leave
test
xlat
push
sub
cmp
pop
mov
sub
fsubs
add
push
push
inc
loopne
jp
mov
or
pop
nop
xchg
pop
pop
xchg
fidivrs
std
je
cwtl
aam
inc
movsl
jp
pop
inc
repz
inc
test
mov
dec
lea
mov
lahf
int
jge
mov
push
cmpb
decl
push
std
mov
iret
jle
inc
mov
add
pushf
fdivp
push
mov
xchg
jnp
adc
repnz
imul
test
cwtl
imul
in
mov
jns
into
scas
jo
std
lahf
or
inc
inc
add
xorb
fwait
aas
push
out
outsl
mov
mov
cmp
sbbb
pushf
inc
mov
idivb
mov
lods
xchg
movsb
pop
cmc
fcoms
popf
mov
xorb
xor
insl
pop
cmp
push
pop
cmp
insb
ds
in
movsb
movsb
js
cmpsb
int3
filds
add
outsl
lods
xlat
mov
shrl
push
sub
outsl
mov
mov
sub
adcl
xlat
jne
or
xchg
adc
push
fwait
adc
insb
sub
js
pop
cld
jne
fisttps
ss
rorb
cmpsl
jl
push
add
out
imul
cwtl
sti
jb
std
arpl
popa
lea
jns
mov
mov
push
dec
cmp
bound
mov
lea
js
imul
daa
lcall
or
dec
jg
fwait
push
lods
mov
push
cmpsl
std
jecxz
push
dec
inc
jae
aaa
outsb
fsts
mov
pop
frstor
ljmp
jmp
xchg
mov
push
loope
sti
xchg
inc
mov
mov
adc
mov
fimull
pop
mov
inc
test
push
movsb
sbb
mov
cmc
shr
sbb
lahf
add
add
and
movsl
addb
fidivrl
arpl
jg
sbb
clc
lahf
or
aad
xchg
dec
xchg
and
ljmp
push
adc
xchg
push
sbbl
out
pop
fdivl
rclb
add
xor
test
mov
outsb
jp
cmc
jge
xlat
jns
in
sti
adc
arpl
pop
movsb
and
std
notb
lret
cmp
mov
shll
sbb
xlat
scas
cmpsb
adc
xchg
cli
mov
dec
insb
push
stc
jecxz
pop
inc
add
sub
sbb
mov
aas
call
rcrb
mov
jle
fcoms
push
leave
int
sahf
push
test
add
mov
dec
and
dec
lds
mov
mov
fwait
lods
adc
xchg
fmuls
stos
xchg
sbb
add
js
xchg
insl
mov
ds
mov
push
loopne
add
mov
aas
mov
mov
dec
movsl
inc
fdivl
xchg
jnp
loope
cmp
popf
jne
inc
jmp
add
mov
fmul
fwait
sbb
add
jge
sub
mov
test
and
or
dec
repz
ror
pop
bound
addl
jmp
add
or
dec
mov
cmpsb
jmp
add
and
mov
movb
jl
popf
int
mov
test
jno
sub
mov
cmpsb
test
aam
dec
fcoml
imull
stos
xchg
sbbl
or
mov
mov
jo
call
xchg
out
jmp
pop
addl
add
dec
mov
out
push
and
jle
out
xchg
imul
inc
int
mov
lret
cmp
out
xchg
test
and
mov
int
cmc
in
xor
in
fiaddl
push
xchg
or
add
push
or
insl
dec
add
loope
sahf
pop
fs
nop
xadd
js
sub
mov
sub
lcall
xor
in
mov
jmp
lods
test
loopne
pop
mov
sbb
push
cmp
jmp
pop
call
stc
outsb
mov
cmp
mov
outsb
push
pop
bound
cwtl
aad
mov
dec
fs
lahf
mov
loopne
xlat
cli
xchg
icebp
inc
clc
sub
popa
clc
int
adc
mov
loope
mov
addr16
inc
xchg
jp
sub
nop
push
xchg
call
es
inc
nop
mov
add
pop
mov
xor
inc
mov
aaa
scas
inc
mov
jnp
mov
cmp
repnz
mov
sbb
dec
int3
pop
into
aaa
cmc
sbb
pop
or
out
dec
enter
and
sbb
xchg
cltd
push
jb
adc
mov
sbb
out
addl
fsts
mov
push
loopne
dec
cmp
sub
aad
mov
adc
andl
xchg
pop
bound
or
push
repnz
mov
add
sarb
inc
in
nop
fnstsw
xor
out
cmp
mov
cmpsl
in
lods
push
lds
mov
cltd
pop
or
inc
or
outsl
pop
push
call
fidivrs
std
or
cs
mov
inc
fidivl
popf
jmp
leave
rcrl
rcr
mov
xor
or
cmp
test
in
in
jle
jle
inc
and
pushf
jecxz
out
test
and
xchg
ret
mov
das
lds
clc
cmp
lea
dec
movsl
inc
inc
xchg
loop
and
fwait
push
mov
and
js
sub
add
mov
ds
inc
fdiv
fisttps
jnp
xchg
jl
or
cmp
mov
cmpl
pop
sbb
lret
jb
icebp
js
adc
out
mov
pop
mov
popa
ret
inc
jg
jns
jno
and
adc
fs
rcrl
pushf
pusha
add
jle
jne
mov
and
jae
push
dec
adc
inc
mov
xlat
cltd
and
daa
mov
int
sahf
jbe
das
jmp
stc
inc
and
divl
mov
cwtl
fcmovbe
int
cmp
lahf
xchg
ja
imul
inc
xchg
jp
icebp
into
hlt
jbe
rcr
stos
outsl
das
and
jge
and
stc
fisubrl
dec
inc
push
ljmp
mov
insl
pushf
fwait
push
test
pop
jmp
int
inc
inc
insl
fnstenv
lock
mov
cmp
cli
jbe
ljmp
movsl
cmp
ret
xlat
out
stos
rcr
cmc
mov
pop
sub
cmp
jmp
or
push
push
mov
mov
or
add
jmp
push
loopne
dec
add
mov
mov
insb
and
xor
xor
push
push
jl
lret
inc
fidivrs
push
push
mov
pop
pop
cmp
cmp
data16
or
cmovne
fistpll
push
mov
mov
jp
into
mov
and
or
mov
mov
jge
shlb
xchg
xor
stc
aam
jl
out
jo
jne
cmp
pop
mov
stc
add
jecxz
jnp
addb
cmp
les
xchg
push
jmp
push
pop
push
jno
ja
gs
and
je
out
mov
inc
inc
aaa
scas
shlb
enter
cmpb
lret
mov
outsl
pop
test
and
pop
lock
add
mov
push
lods
adc
sbb
xor
mov
lods
cli
aaa
int
sbb
adc
mov
add
push
push
call
pop
pop
jge
sahf
cwtl
cmc
imul
xor
in
test
jmp
jnp
mov
shlb
push
dec
sbb
ljmp
jle
mov
cld
push
push
xor
xchg
int
dec
outsl
data16
and
cltd
int3
test
cli
mov
jge
push
push
sbb
mov
roll
xchg
mov
fidivrs
adc
fisttpl
hlt
scas
in
sti
xor
pushf
xlat
bound
cs
fidivl
fists
inc
or
xchg
jmp
aad
sub
ret
nop
xor
ficoms
int
adc
push
add
add
cmc
repnz
and
mov
mov
in
daa
push
push
int3
xlat
push
cmc
push
mov
sahf
pop
stos
xchg
aam
test
ror
pop
das
sub
mov
out
mov
lods
bound
pop
lea
push
jge
push
sbb
popf
into
repnz
jne
jno
lea
daa
mov
cmp
cmpl
ret
shlb
cltd
jbe
cmpb
stos
or
adc
and
imul
lahf
push
cwtl
xchg
push
adc
mov
insb
jg
xor
adc
add
mov
push
mov
fbld
lea
inc
xchg
outsl
jmp
mov
pop
shrb
mov
mov
add
out
in
scas
mov
jmp
into
mov
xchg
jmp
andl
incb
popa
mov
fs
popf
das
shl
shr
test
sbb
sbb
in
lea
push
or
cmp
sti
mov
pop
dec
pop
sbb
les
lahf
divl
xor
ret
iret
mov
into
inc
sub
sahf
fcmovu
inc
stos
xchg
out
out
mov
xchg
jp
inc
dec
sub
push
adc
aam
shrl
add
fsubl
push
inc
xchg
lcall
and
mov
mov
fiaddl
pushf
xchg
test
es
jb
in
adc
push
sahf
pushf
pop
sub
pop
add
clc
mov
mov
adcb
lock
dec
scas
clc
lret
and
cmp
cmp
ss
iret
stos
fcomps
cwtl
push
push
push
mov
mov
mov
outsb
call
jmp
pop
ds
popa
loop
xchg
mov
push
pop
xor
mov
fcmove
sbbl
mov
int
adc
test
aam
add
inc
or
push
xor
jmp
push
sub
in
jno
mov
push
leave
mov
stc
fs
jle
mov
divl
pushf
mov
inc
call
jne
mov
mov
mov
pop
dec
aas
push
xor
ret
xchg
iret
push
aam
test
xor
jge
shrl
jo
shlb
jns
aas
adc
and
jne
out
adc
insl
mov
sbb
lea
out
mov
arpl
adc
ror
stos
adc
daa
push
mov
stc
xor
xchg
int3
rcpps
or
das
push
dec
std
les
pop
dec
mov
stos
aad
dec
stc
xor
push
rolb
jbe
call
mov
cmp
imul
mov
sti
stos
cmp
push
push
pop
daa
add
inc
aad
pop
addl
rcrl
int
xchg
int
fs
pop
insl
jno
in
rcr
loopne
dec
jle
mov
pop
xchg
cmc
cmpsb
fisubs
int
mov
fcompl
add
mov
shl
sbbl
hlt
pop
inc
mov
cmp
test
cmp
push
add
lods
repnz
std
jo
ret
jp
jne
lahf
xlat
test
out
mov
std
jns
sub
loopne
icebp
loop
imul
fst
outsl
loope
ljmp
mov
std
insb
fadds
loope
mov
ja
loopne
cmc
push
cld
std
sub
xchg
loope
stc
xlat
testb
jmp
icebp
sbb
jg
clc
out
out
stos
rcrb
push
loope
fistpl
int
cmpsl
push
hlt
loop
std
add
fucomip
and
ds
mov
xorl
ret
loope
ret
popf
loope
jb
addr16
movsl
or
cwtl
stc
int
rcrl
lret
mov
sub
mov
std
sti
and
add
loope
cld
leave
lods
rorl
popa
or
xchg
std
cmc
pop
int
xchg
pop
jmp
mov
jno
dec
fcompl
call
pop
iret
xor
test
cld
imul
sarl
pop
out
shll
push
cmpl
out
jns
jns
mov
movsl
mov
iret
int
iret
loopne
add
rcr
push
lea
jle
inc
ret
xlat
int
lahf
sub
cmp
popf
lea
push
sti
pop
test
sub
mov
mov
fistpll
xchg
mov
jno
jge
mov
std
jo
cwtl
in
iret
mov
mov
pusha
call
sbb
sahf
dec
jne
xchg
std
sarb
jns
xchg
aaa
lods
pop
std
pop
sarl
rcrl
in
mov
cmc
pop
mov
pop
out
cmc
ja
mov
pop
stos
push
fcos
xchg
ret
xor
movsl
sub
aad
pop
lods
xchg
push
in
jge
test
std
mov
fsubrl
filds
testb
add
xchg
test
lods
xor
adc
shll
mov
idivl
mov
ret
neg
iret
jp
mov
push
jo
je
fcoml
test
pop
mov
inc
mov
mov
mov
clc
push
mov
sub
push
cltd
pop
lret
stos
pusha
adc
faddl
stos
mov
aaa
push
insl
xchg
push
in
dec
xchg
cmp
data16
xor
add
push
sbb
rolb
sahf
aaa
shrl
xchg
inc
xchg
divl
stc
sbb
pop
inc
cmpsb
imul
xor
mov
xchg
bound
push
jno
push
int3
test
hlt
pop
pop
clc
xchg
lea
punpcklbw
jge
sbb
jnp
lea
fistl
pop
mov
or
jo
sbb
pushl
mov
repnz
and
icebp
js
test
scas
jg
inc
mov
ret
mov
fnstenv
jae
pop
pusha
dec
cmpsl
in
shll
or
lea
cmpsl
mov
adc
push
in
and
cmpb
inc
rcrl
ljmp
xchg
mov
ds
jg
jno
nop
bnd
cmp
push
add
int
fdivl
sbb
data16
decl
popf
sub
scas
sbb
mov
fsubrl
cmp
test
xchg
popa
lcall
fnsave
cmp
xlat
or
cltd
mov
mov
jge
xchg
sbbb
xchg
ret
mov
pop
jge
mov
stos
pop
adc
jbe
add
mov
or
outsl
dec
les
sub
movsb
mov
xor
clc
jno
jno
adc
push
dec
mov
mov
out
jg
push
jge
loope
leave
gs
and
and
push
push
and
push
in
call
data16
push
push
rcrb
imul
lcall
flds
sub
int
adc
stc
push
mov
xor
or
xchg
test
pop
test
in
std
lods
adc
pop
or
ja
pop
fmulp
test
push
mov
mov
mov
mov
sbb
mulb
mov
dec
mov
mov
in
lea
jl
mov
out
adc
push
mov
ljmp
fiadds
mov
jl
lea
outsl
outsb
fiaddl
adc
rclb
mov
jns
pop
fnsave
popf
in
testl
fisubs
adc
cltd
fcmovb
add
xor
sub
add
int3
popf
iret
jns
ss
movsb
add
fstp
shll
xorl
incw
mov
or
fimull
scas
int
notl
cli
add
jmp
push
shlb
idivb
inc
test
pop
into
xor
shlb
test
hlt
push
cmp
adc
fiaddl
imul
or
jle
dec
or
iret
lods
cltd
loopne
testl
fs
shlb
dec
push
jns
add
push
xor
fnstsw
mov
scas
lods
dec
cmp
or
popa
push
mov
inc
push
lahf
fcmovbe
sub
xor
pop
insl
jmp
mov
sahf
sub
or
je
aaa
jns
sub
cmc
cmp
inc
push
cmp
aad
xchg
mov
js
mov
sahf
ret
xor
add
cmp
outsl
repz
push
lret
xchg
mov
mov
jge
rorl
sbb
in
adc
sub
test
inc
push
testb
out
imul
inc
rorb
sub
les
sub
outsb
sbb
filds
daa
or
icebp
pop
es
movsl
and
mov
pusha
jmp
popa
jae
inc
fs
nop
fwait
roll
insl
xchg
roll
dec
aas
add
shlb
loopne
mov
and
xor
mov
mov
fstl
mov
jne
sbb
jno
xchg
xchg
call
mov
scas
mov
rcr
mov
aas
test
in
mov
jns
outsb
pusha
dec
sbbb
cmc
aas
adc
jno
fsubrl
in
pop
xor
xchg
fdivrl
fsub
aam
pop
int
dec
and
inc
sub
xchg
pop
aaa
sti
lahf
movsb
jbe
xchg
sbb
fistl
xchg
mov
aam
or
sahf
sbb
xor
mov
adc
mov
lods
sub
mov
mov
repnz
outsb
sbb
pop
push
jl
inc
outsb
sub
je
mov
lea
loop
and
mov
mov
orl
jo
outsb
pushf
xchg
pop
std
rcrl
or
dec
sub
mov
mov
icebp
daa
jl
call
push
lret
push
mov
mov
mov
mov
cmpsb
and
or
xchg
add
imul
movsb
out
or
mov
or
gs
int
cwtl
jnp
push
push
popf
sti
stos
mov
inc
repz
xchg
cwtl
mov
add
and
clc
gs
sub
ds
mov
push
mov
fisttpl
cmp
adc
test
lods
shrl
ret
aas
stos
cltd
cld
sub
push
push
shl
or
insl
sbb
test
pop
mov
imul
jle
push
xchg
cmc
jmp
out
add
jne
popf
int
call
sbb
and
cmp
jecxz
je
pop
out
mov
xchg
ds
push
sub
ret
enter
push
and
dec
lods
lods
mov
fiadds
xchg
jns
xchg
andb
dec
inc
cltd
xor
sti
pop
nop
cld
add
and
mov
and
mov
in
xchg
std
jne
pop
push
ret
adc
mov
mov
lea
rcrl
xchg
and
sbb
dec
xchg
popf
andl
out
int
repnz
sbb
mov
mov
mov
sbb
test
out
cltd
pop
xlat
aas
movsb
jne
inc
cli
jnp
cmp
push
xchg
mov
sbb
pop
adc
call
in
xchg
lods
arpl
clc
in
cmp
bound
lds
fldt
jne
and
fnstsw
outsl
push
cld
push
xchg
pop
sub
mov
mov
sub
mov
sbb
imul
push
es
inc
mov
aaa
inc
in
shll
jp
mov
inc
clc
mov
mov
lcall
call
dec
jmp
jg
jnp
cwtl
filds
inc
subl
out
inc
mov
cmp
cmp
inc
out
jl
pop
clc
lods
test
outsl
sbb
xchg
sub
in
pop
dec
addb
mov
xorb
add
pop
add
in
cli
xor
test
jmp
arpl
std
sahf
adc
jg
sbb
and
jmp
jmp
gs
or
pop
jg
fs
pusha
cltd
xchg
roll
and
cmp
dec
bound
bound
xor
xor
cmc
and
sbb
fmuls
outsl
and
movsl
sbb
push
dec
cmp
adc
enter
rclb
sti
lock
mov
int
push
jmp
inc
lea
rcrl
mov
dec
mov
outsl
push
adc
push
lahf
imul
scas
xchg
fwait
in
nop
mov
out
fdivrl
inc
iret
xor
int
mov
dec
stos
stos
lahf
cli
push
js
sbb
jae
and
add
out
xchg
push
loopne
adc
cmpsb
push
lret
jb
fildl
adc
pop
ljmp
nop
jg
rol
and
xchg
or
push
sbb
push
clc
pop
pop
inc
cmpsb
add
mov
ret
pop
mov
jnp
and
inc
mov
pop
cmpsl
cmp
xor
inc
or
or
jle
push
mov
add
ljmp
jne
and
ret
pop
xchg
dec
js
jne
mov
imul
jp
outsl
mov
nop
jmp
cltd
mov
xchg
mov
cld
sbb
mov
lret
ret
xor
xchg
mov
imull
xchg
sbb
stos
pushf
mov
mov
outsb
cmp
negb
jp
push
or
in
and
push
aas
into
mov
ss
sbb
push
sbb
scas
push
dec
push
das
push
lret
lahf
xor
out
mov
sti
sbb
not
movsl
std
mov
rcrl
mov
aas
mov
jb
in
adc
cmp
shl
pop
nop
add
shlb
addl
push
add
sbb
test
add
and
cmpsl
fstps
push
test
push
inc
sbb
mov
sub
mov
push
mov
rorb
mov
lea
sub
xchg
clc
push
pop
or
xor
in
shll
sub
add
dec
aas
jge
fyl2xp1
ret
int
cmp
js
in
push
sbb
in
sub
pop
push
jnp
jmp
mov
or
push
mov
sti
mov
in
adc
cmpsl
loop
imul
inc
xlat
test
lcall
sub
int3
or
xchg
pop
inc
std
sbb
jle
sbb
jl
cld
sub
pushf
lahf
adcl
jne
jmp
add
loopne
mov
clc
fistl
sbb
jg
sahf
add
fcmovne
or
jecxz
dec
cmp
in
xchg
ret
jne
lea
fstp
std
stc
fcoms
sbb
clc
popf
cli
ss
jnp
flds
fdivr
mov
aam
push
mov
leave
incl
mov
pop
lds
shr
out
adc
lret
mov
aam
je
mov
and
stc
push
lret
and
jle
pop
pop
ret
jp
popa
sub
lock
sbb
imul
fstps
sbb
ret
add
xor
add
cmc
movsl
test
in
icebp
or
add
ret
sub
push
cltd
xchg
pop
ret
aad
push
lahf
loop
scas
lahf
fiaddl
popa
lahf
stc
pop
push
adc
iret
daa
jns
inc
fildll
xor
and
addr16
std
jbe
mov
sub
in
mov
sbbb
pop
mov
aam
icebp
push
lret
scas
jae
sub
and
xlat
jl
mov
dec
adc
mov
pop
sbb
push
xchg
int
push
int3
addb
out
sahf
push
jae
pop
pop
clc
jb
push
insb
push
or
lea
aaa
ret
push
inc
int
jae
dec
insb
jno
aad
ret
and
cmp
pop
outsl
xor
in
popf
jmp
push
pop
jo
jle
sub
cmpl
aad
and
loop
test
pop
rcl
dec
neg
xchg
fwait
mov
repnz
popf
icebp
dec
sti
mov
xchg
outsl
xchg
cwtl
mov
rcl
jmp
adc
xchg
pop
cltd
mov
clc
lea
popf
in
add
stos
jmp
mov
psllw
lea
add
int
add
into
cli
sarb
and
es
or
stos
and
cmp
push
mov
inc
adc
std
push
sub
jp
fimull
and
push
sub
clc
pop
inc
add
imul
sbb
jnp
out
push
inc
jg
lea
inc
add
sbbl
bound
lock
pop
fcmovnbe
inc
cmp
aad
jne
push
icebp
orl
or
aam
stos
pop
cmpsl
imul
jl
jb
mov
inc
jecxz,pn
inc
out
clc
inc
or
cld
sbb
adc
pushf
scas
decb
bound
and
insb
aas
xchg
mov
jl
fsubs
xchg
xchg
jge
ds
adc
mov
xchg
and
xchg
test
sbb
mov
js
sti
lahf
sbb
push
cmp
addl
in
push
xchg
outsb
and
ret
int
pop
subb
ja
cltd
push
test
rcl
jg
xor
int
push
sub
insl
dec
outsl
xchg
pop
mov
mov
add
lahf
rcll
mov
fiaddl
mov
push
sbb
in
jle
jp
lahf
jp
out
popa
adc
jl
mov
rcll
xchg
sub
adc
adc
cltd
ljmp
push
shrb
sbbb
cmp
push
call
dec
imul
aam
push
and
scas
xor
jne
mov
xchg
jg
push
cwtl
or
sti
jp
std
mov
fsubl
iret
adc
popf
std
stos
or
outsb
push
int
mov
jg
dec
sahf
sub
sbb
mov
notl
andl
sbb
mov
adc
repz
dec
nop
xchg
or
lock
jmp
popf
je
ja
sub
xor
in
mov
roll
pop
xchg
mov
in
adc
cmp
das
rcl
int
loope
popw
and
sbb
mov
rorb
jo
xchg
cwtl
push
pop
sub
sub
popf
hlt
out
jge
lds
aaa
aas
jecxz
loope
enter
mov
cmc
cs
leave
xor
fiaddl
mov
shlb
test
fcoms
nop
cli
xchg
pop
lret
sub
and
xchg
stos
push
push
mov
or
add
ja
int
inc
scas
jno
in
sbb
push
lea
cmp
mov
test
loope
add
mov
or
xchg
xlat
or
cmp
inc
ret
mulb
ljmp
push
mov
and
sbb
mov
scas
aas
jge
pop
lea
hlt
cmp
shll
pop
xchg
jecxz
mov
push
sbb
loope
and
pop
xchg
daa
pop
jbe
lea
pop
lods
lahf
xchg
xchg
stos
and
jl
inc
in
sub
cmpsl
cmp
mov
jg
push
jnp
icebp
push
iret
xor
nop
xchg
pop
push
xchg
aas
lret
pushf
mov
pop
push
stc
mov
das
std
pusha
movsl
sbb
push
rolb
push
mov
or
das
xchg
xor
xchg
jnp
lahf
jecxz
shr
rcrl
popa
or
aad
inc
mov
cmp
push
or
int
mov
test
cmp
data16
push
sub
das
pop
mov
fidivl
inc
pushf
into
aad
mov
out
xchg
adc
aad
mov
adcb
or
sahf
mov
insl
mov
push
adc
aad
pushf
mov
fsubrs
mov
mov
add
mov
mov
add
movsb
dec
pop
mov
popf
int
xor
and
push
cmp
stos
add
cwtl
outsb
lcall
adc
jnp
loop
fisubl
stc
decl
shll
mov
or
adc
mov
xchg
cmp
cmpsb
das
dec
jecxz
outsl
pop
into
jbe
js
pop
stc
sti
lea
pop
test
pop
inc
sbb
shll
xchg
push
js
out
add
jecxz
pop
int
fsubp
aam
mov
js
and
movsb
enter
or
inc
hlt
xorl
cli
mov
xchg
jnp
sub
das
push
sbb
mov
push
jmp
lea
mov
mov
loopne
xor
sbb
xor
or
rclb
aas
pop
aad
das
mov
push
negb
pushf
test
pusha
add
fnstcw
out
mov
mov
repz
addl
jl
mov
jge
idivl
mov
lea
push
stc
push
sub
rcll
xchg
xor
mov
xchg
imul
add
mov
lret
cmpsb
roll
lcall
sbb
xor
or
sbb
jle
adc
mov
xchg
dec
cld
movsb
fidivs
int3
test
push
lds
jno
test
dec
shrb
fisttps
ret
push
lock
hlt
xor
notl
sbb
xchg
scas
fldcw
and
jae
enter
ret
int
notb
add
cmp
pop
lock
call
fcomi
mov
xchg
loop
aam
lcall
push
filds
mov
sbb
repz
dec
mov
jmp
sbb
fwait
push
mov
and
in
pop
movsb
iret
das
jle
negl
jns
cmp
stc
mov
add
jge
push
push
dec
push
lods
jl
ss
pop
std
or
stos
ret
pop
jge
or
shll
jbe
xchg
int
jmp
push
or
lea
out
xor
and
imul
jns
and
incl
cwtl
add
ret
iret
sarl
imul
fwait
leave
inc
repz
or
lahf
pop
pop
cmp
outsl
or
add
or
fldt
add
mov
mov
dec
es
faddl
mov
in
mov
jp
sbb
icebp
stc
int
dec
loope
cs
loope
in
icebp
in
mov
fwait
lahf
std
push
loope
push
loope
push
loope
dec
push
das
in
in
jns
sar
pop
sahf
std
sub
dec
loop
icebp
jge
ffreep
mov
out
xchg
out
jmp
jmp
xor
idiv
aam
stc
mov
mov
pushf
scas
jmp
pop
scas
sbb
push
ja
fstpt
jno
pop
stc
std
stc
pop
push
jmp
icebp
or
stc
dec
pop
popa
mov
lods
out
out
out
stc
add
icebp
int
shl
inc
call
jmpw
cld
jae
shl
xchg
or
movl
mov
sti
add
scas
ffreep
idivl
andl
popf
div
fbstp
std
mov
and
ja
in
push
mov
iret
mov
fcmovnu
mov
scas
out
out
jmp
xchg
aad
shrl
jno
outsb
and
push
stc
shlb
fsubrs
cmpsl
stos
add
fstps
mov
jmp
movsl
or
iret
inc
add
int3
popa
loope
jno
icebp
stc
mov
mov
loope
idiv
pop
test
pop
xlat
and
cmc
mov
dec
icebp
push
fmulp
clc
adc
into
push
stos
repz
xchg
mov
call
sbb
push
cmpsl
divl
stc
repz
mov
rcr
jmp
jge
jno
push
int
iret
clc
test
mov
stos
lods
mov
xchg
shll
dec
stc
js
iret
lret
pop
mov
push
lret
shlb
jg
lahf
mov
mov
ja
lret
mov
mov
cld
mov
sbb
out
fcompl
xchg
mov
mov
out
push
mov
adc
mov
jge
flds
mov
xchg
repnz
mov
xchg
xchg
mov
jns
cmpsl
add
icebp
sub
stos
pop
pop
fistpll
push
sub
cwtl
mov
jg
rorb
adc
movsl
out
xor
icebp
test
mov
push
test
mov
jp
movsl
mov
int
adc
jae
xchg
popa
shll
mov
hlt
lea
rorl
mov
js
imul
jns
jl
stc
enter
or
pop
add
sbb
arpl
adc
cmp
mov
lods
fisubl
sti
pop
add
fists
rep
shll
mov
adc
lds
icebp
xlat
inc
pop
mov
imul
or
mov
add
cwtl
fdivs
or
leave
test
jp
scas
mov
add
loope
mov
test
push
push
cli
leave
push
test
loope
cmpsb
jg
jne
lea
or
jge
pop
push
gs
insl
sti
lods
add
nop
rorl
or
or
xor
or
lahf
rep
leave
fbstp
cmpb
add
nop
imul
mov
inc
shl
adc
xor
xor
call
inc
loopne
inc
push
test
sbb
ret
mov
push
add
mov
pop
lahf
test
jmp
out
inc
imul
jmp
add
push
fldenv
or
push
jge
addb
icebp
stc
ja
mov
ljmp
cmpsb
dec
cmp
xchg
adc
inc
clc
jnp
fwait
mov
add
lret
mov
dec
xchg
push
and
aam
cmp
mov
pop
subl
push
sldt
fmul
and
in
ljmp
dec
pop
insb
jno
sub
insb
popf
pop
idivl
and
sti
cld
rcll
ss
mov
sbbl
jno
sbb
js
decb
xor
movsl
mov
pop
add
iret
mov
dec
jbe
dec
add
enter
cmp
call
add
mov
in
in
and
mov
pop
nop
mov
imul
aaa
rol
loope
push
repnz
mov
mov
daa
lock
fcoms
mov
push
lock
sar
xlat
or
test
mov
in
mov
xchg
or
and
mov
lea
mov
les
or
ficompl
and
mov
aaa
cmp
subb
lea
sti
icebp
adc
and
aas
pop
pop
lods
stos
add
jp
subl
popf
decl
cli
sbb
cmp
sbb
lahf
add
fcomps
cwtl
imul
stc
pop
cmp
add
loop
imul
rcll
movsb
jg
stc
and
sub
pop
rorb
lds
cmp
jg
cmp
ds
int
push
inc
call
xchg
cltd
mov
ret
xchg
sub
xor
push
sbb
cs
fldcw
rcl
js
aam
cmpsb
push
xchg
scas
int
pop
push
or
lahf
test
fucomp
loop
mov
add
add
sarl
sbb
inc
jg
pop
in
test
mov
mov
mov
and
in
imul
xor
ja
or
movsb
mov
jp
mov
mov
outsl
jbe
iret
ljmp
or
out
xchg
jo
pop
mov
jecxz
cmp
xor
adc
xor
jmp
pop
shrb
mov
jns
dec
test
int
xor
fcom
lcall
pop
lea
push
fistpl
jns
insl
pop
lods
pop
sbb
sbb
cmp
add
pop
pusha
mov
cmpsb
loope
pushf
out
not
pop
loope
xchg
das
push
mov
cmp
mov
aas
xor
movsl
int3
aad
mov
rolb
mov
clc
rclb
xor
in
dec
aad
cld
cmpsl
sub
mov
roll
cld
push
sbb
insl
stc
icebp
push
icebp
movsl
shlb
das
dec
in
std
mov
push
push
cmp
imul
cmpl
xchg
or
mov
jno
add
add
outsl
inc
mov
and
xchg
in
addb
and
rorl
nop
fildll
mov
mov
fildll
or
xorb
int
clc
or
pop
lock
add
inc
imul
call
sbb
adc
jle
dec
outsb
xchg
arpl
addb
pop
int
hlt
sbb
outsl
out
cli
test
push
mov
lret
xchg
cmp
mov
inc
test
jle
shrb
aas
mov
push
aam
and
cmp
popf
xor
jecxz
jmp
sbb
cs
sub
outsl
arpl
ret
or
inc
push
xchg
lock
mov
pop
mov
popa
icebp
lea
cli
scas
adc
lods
sub
mov
test
lahf
jmp
loope
out
ret
sub
xchg
mov
test
lods
cltd
xor
or
popa
insl
push
mov
popl
lea
push
jmp
sbb
cmp
adc
divl
mov
dec
cwtl
je
jge
sub
sub
hlt
movsb
xor
jl
addr16
jp
push
sub
push
pop
ss
mov
xchg
add
cltd
cmc
test
faddl
mov
imulb
sbb
insl
sbb
pop
fsubs
cli
sbb
orl
xor
cmp
rcrl
push
or
clc
mov
clc
cmpb
fwait
sbb
mov
repz
rolb
or
jle
push
ja
fld
leave
hlt
sub
dec
dec
fxch
jnp
xor
cli
jl
mov
int
jno
xor
xor
inc
jg
out
mov
push
xor
mov
roll
jge
push
or
in
fsubp
push
jmp
lret
mov
xchg
outsl
mov
mov
or
into
cs
nop
jb
sub
jl
cmp
sub
outsl
mov
stos
xchg
cmpb
in
mov
aad
pop
xchg
push
and
push
and
push
ja
or
lea
int
pusha
call
jge
jmp
sub
loop
push
cmp
subl
mov
fstpl
scas
sbb
and
add
push
cmp
fimull
sti
iret
shll
mov
rorb
inc
jle
sub
sub
iret
add
int
pusha
mov
outsb
dec
push
pop
add
into
in
lods
jmp
cmc
or
dec
jl
rcll
insb
loope
adc
popa
xor
imul
pop
push
pop
in
pop
xchg
pushf
js
cmc
lods
sbb
pop
adc
jecxz
imul
in
loope
push
mov
test
pop
inc
outsb
jb
sti
in
sbbl
iret
fidivs
xchg
loope
or
jo
cwtl
mov
push
jge
outsl
inc
andl
push
fldt
sub
pop
sarb
out
xchg
aas
and
repnz
jge
int
js
leave
dec
mov
in
gs
mov
scas
push
mov
add
cmp
push
jmp
loope
shlb
andl
es
mull
or
shrl
stc
or
xchg
js
arpl
imul
test
xchg
stos
outsb
pop
pop
shll
xchg
add
jp
jmpw
arpl
and
scas
mov
scas
aaa
popa
cmp
cmp
sub
mov
bound
mov
lods
jno
movsl
inc
das
xorl
loopne
inc
dec
mov
jecxz
push
sub
sti
mov
addr16
int
iret
sbb
pop
cltd
cmp
and
out
mov
roll
mov
mov
shll
movsb
jecxz
inc
faddl
dec
mov
add
jmp
outsl
aad
xor
out
jo
push
idiv
push
mov
cmp
shl
pop
jbe
pop
and
nop
fsubrl
mov
lods
dec
mov
subb
jae
mov
imull
lock
xchg
xchg
aam
cmp
jnp
out
jge
in
xchg
insb
and
scas
loope
out
push
into
mov
call
leave
inc
inc
ds
stc
jge
mov
insl
lea
sahf
mov
push
leave
jl
mov
into
mov
mov
aad
arpl
fisubs
inc
mov
jae
xchg
adc
sbb
icebp
sub
mov
ret
push
xchg
out
mov
fimuls
adcb
pop
movsb
lahf
leave
das
js
lret
sub
mov
add
sahf
and
jg
adcl
mov
inc
or
jmp
cwtl
je
sarl
pop
aad
cwtl
mov
jge
cld
cmc
xchg
add
sbb
rclb
push
jge
rolb
popf
adc
fcompl
sbb
int
jne
adc
pop
mov
std
lea
inc
imul
nop
icebp
insb
test
jge
sarl
inc
pusha
mov
out
sub
jb
jb
mov
inc
sar
es
rolb
aaa
sbb
dec
xchg
xchg
movsl
popa
iret
add
inc
fcmovbe
and
cmp
movsb
movsb
outsb
ja
mov
fisttpl
mov
lea
adc
bound
mov
mov
or
sub
idivl
xchg
jmp
sbb
xchg
out
or
sti
mov
pop
ljmp
fwait
addl
int
cmp
aaa
and
pop
pop
sbb
test
daa
adcl
sbb
inc
jp
push
mov
loope
cmpl
or
or
arpl
dec
imul
daa
mov
jl
lret
xor
lcall
insb
mov
xlat
movsl
lds
xor
jp
lret
icebp
fmul
rorb
int
mov
pushf
dec
icebp
ror
pop
pushf
push
and
mov
or
dec
rorb
shrl
xchg
es
sbb
push
sub
in
sub
ret
xlat
test
les
movsb
xor
cli
ljmp
jo
dec
insl
push
and
push
cltd
add
mov
mov
test
or
or
lea
movsl
out
xchg
shll
icebp
daa
andb
xchg
aad
sbb
add
jg
mov
pop
add
cmp
xor
aaa
mov
push
sub
in
inc
aad
out
mov
ss
lock
pop
lods
test
jge
movsb
addb
push
and
lea
fwait
int
test
cmc
pop
or
or
inc
jge
add
fisubs
xor
mov
push
int
fwait
jmp
xchg
cmp
scas
out
or
or
jnp
data16
and
xchg
pop
cmp
push
and
jge
and
sbbb
xor
push
mov
and
hlt
in
fisubl
pop
adc
or
movsl
cs
out
pop
lcall
lret
pop
jno
outsb
sbb
cs
adc
jmp
adc
push
adc
jnp
lea
loop
loop
ret
push
ss
pop
push
pop
nop
jge
pop
aad
add
push
sbb
cli
jp
rcrl
iret
cwtl
out
mov
push
scas
test
loope
test
xor
or
loop
fimull
pop
push
mov
out
ljmp
lcall
mov
scas
adc
int
js
jg
outsl
mov
int3
mov
int
ss
in
add
push
fsubrs
or
test
lret
mov
push
jmp
dec
sbbb
mov
xchg
int
jmp
mov
pop
xchg
fistps
gs
mov
stos
fld
xor
incb
incl
fisttps
test
xchg
mov
out
sub
shll
fidivl
lea
dec
mov
pop
sahf
xchg
imul
xor
leave
or
je
push
add
xchg
int
insb
add
shll
cltd
outsb
xchg
stos
mov
and
cmpsb
popa
cld
push
test
cmp
cmpsb
shlb
std
jmp
jge
cmp
imul
cld
xchg
flds
xor
or
cmp
ljmp
jmp
pop
clc
xchg
outsl
sub
repz
jle
int
inc
fdivrl
jl
jb
push
and
mov
cmpb
mov
int
jae
stos
inc
cmc
pop
lds
sahf
clc
or
addr16
shll
xchg
cltd
and
popf
in
mov
add
or
push
xor
add
sbb
imul
sbb
aad
ss
in
test
adc
sbb
cmp
out
fsts
aad
push
fs
mov
mov
add
inc
pop
push
test
mov
imul
inc
arpl
jb
or
inc
mov
icebp
pusha
mov
adcl
clc
mov
or
insb
or
push
xor
push
mov
push
pushl
and
push
int
cmp
and
gs
dec
icebp
pop
push
dec
mov
mov
shl
pop
jg
sub
jae
in
shlb
icebp
loope
pushf
int
push
aaa
aad
sbb
iret
push
or
mov
js
testl
sar
imul
push
rcrl
jg
pop
xchg
push
push
inc
idivb
insl
bound
lds
popf
and
imul
adc
fldenv
mov
adc
pop
xlat
inc
pop
mov
and
lahf
add
add
dec
adc
ficompl
pop
pop
push
mov
push
pop
cmc
sti
fcmovb
xchg
inc
lods
pop
mov
cwtl
popf
push
outsb
lcall
pop
cmpsl
xlat
in
push
test
popf
jnp
aam
pop
push
lea
ja
or
mov
add
sbb
xor
mov
lods
push
inc
loopne
clc
lea
gs
fs
inc
aaa
push
fs
cmpl
repz
in
ret
add
and
outsb
jne
dec
lcall
jge
xor
inc
push
xor
adc
xor
movb
dec
dec
loop
push
and
push
ss
lahf
lret
sub
add
or
and
aad
mov
or
adc
es
cld
push
xor
popf
int
or
into
push
push
lret
scas
lods
rcll
daa
jge
cwtl
and
xor
sub
andb
lods
mov
leave
repnz
sub
lahf
jmp
sbbb
push
repz
sbb
or
loopne
loopne
push
add
jbe
xor
aaa
sahf
or
mov
cmp
outsb
xchg
ds
and
js
or
sbb
js
ret
cwtl
fsub
xor
add
jle
scas
pop
std
pop
mov
mov
xchg
mov
test
push
push
lahf
or
incb
clc
js
mov
mov
das
pusha
push
adc
out
ljmp
dec
imul
xorl
xlat
jge
adc
in
cmp
lahf
stc
js
mov
and
ret
aad
sbb
cld
mov
bound
xchg
pop
or
aas
push
push
adc
push
nop
mov
and
in
nop
neg
addl
int
inc
loopne
pop
in
nop
dec
push
lods
ss
movsl
sarl
push
fnstenv
pop
xchg
add
xor
dec
in
test
js
nop
jns
xchg
test
xchg
icebp
mov
loopne
inc
mov
dec
xor
insb
cmp
adc
jbe
jo
popf
outsl
fbstp
loop
imul
int
enter
pop
out
fnstenv
ds
push
inc
dec
and
push
push
and
jp
daa
cmc
jecxz
pushf
aaa
pushf
cmp
stos
xchg
jl
mov
mov
push
or
mov
std
push
cmpb
adc
fmuls
adc
sub
fistpll
push
stc
and
mov
xor
js
aaa
inc
pop
in
fstpt
lret
mov
cwtl
jge
shl
add
or
add
nop
mov
cmp
jmp
stc
std
add
lock
ljmp
sti
mov
out
fwait
xchg
jmp
or
test
and
les
mov
in
mov
lea
aam
iret
and
fwait
lahf
dec
daa
dec
test
dec
cmpl
movsb
mov
arpl
scas
push
pop
dec
sub
into
xchg
lock
scas
add
inc
mov
ss
mov
mov
subb
xchg
mov
lock
cmp
mov
fyl2x
dec
push
cmc
je
push
test
inc
lea
jge
test
lret
pop
mov
jge
ficoml
stos
in
jp,pt
pop
imul
add
mov
outsb
xor
adc
cmpsl
or
pop
jmp
lret
xchg
xor
stos
jmp
inc
xor
es
jbe
or
divb
sub
lods
int
jle
push
pushf
mov
int
cwtl
xchg
push
xchg
push
fisttpll
mov
add
test
mov
dec
xlat
lea
lock
sub
adc
and
hlt
push
xor
push
jg
out
je
aas
xchg
in
fwait
pop
out
jecxz
dec
pop
lea
fisttpl
adc
scas
in
xchg
dec
jg
mov
mov
in
jne
in
in
or
or
jl
pop
adc
push
xchg
outsl
inc
pushf
mov
inc
jge
and
aas
jmp
add
out
fwait
fwait
idivl
pop
aam
insl
add
aas
addb
cltd
in
mov
out
rol
test
rorl
xor
and
xchg
das
int
mov
mov
adc
popa
xor
cwtl
jnp
rcrl
push
js
inc
rcll
stos
out
ret
mov
negb
mov
push
outsl
inc
add
cmpsb
xchg
and
das
lahf
and
and
cmp
outsb
out
sbb
mov
sbb
mov
xchg
push
dec
das
add
insl
clc
sbb
sbb
cmp
dec
xor
cmp
fldl
lods
push
stos
sarl
mov
push
icebp
fstps
add
jmp
outsb
subl
into
inc
arpl
aam
frstor
outsl
jb
xor
scas
test
pushf
fstl
int
test
adc
or
xchg
fisubs
mov
icebp
sub
jle
test
cwtl
add
mov
mov
mov
out
ror
aas
js
pop
jmp
cmp
mov
and
inc
fstl
mov
or
pop
adcb
outsl
mov
jb
sti
fnstcw
add
push
lods
mov
stc
cmpsb
push
jmp
loop
sbb
shll
pop
scas
lea
testl
fdivrl
pop
push
jne
xchg
push
daa
push
outsl
mov
mov
sub
frstor
pop
icebp
xor
mov
stos
cmp
inc
mov
jne
add
push
shrb
or
jbe
cltd
aam
xor
cltd
notb
fcompl
movhps
test
movsl
roll
push
test
jae
pusha
lods
ret
fisubrl
jle
inc
icebp
lea
test
cmp
jge
mov
cmp
cmp
clc
mov
fchs
cmp
xchg
or
mov
repz
test
jno
jmp
rorb
mov
dec
pop
push
into
add
mov
lea
xchg
sub
ljmp
adc
and
push
lret
jecxz
adc
sbb
pop
and
aas
or
mov
fwait
addr16
xchg
outsl
dec
decb
movsb
sub
jmp
imul
mov
cltd
sub
leave
or
push
jmp
push
rorl
addb
lahf
roll
fdiv
adc
add
or
xchg
iret
xchg
xchg
pop
inc
adc
popf
outsb
adc
mov
imul
insl
add
cltd
or
sbbb
pop
adc
sahf
adc
mov
fiadds
fistpll
mov
mov
inc
inc
mov
mov
push
jmp
sarl
or
loope
subl
xchg
adc
add
sbb
push
aam
andb
pusha
mov
lret
lahf
and
jae
jo
xor
jb
lea
stc
enter
cltd
lods
mov
jmp
rorl
iret
jecxz
jbe
dec
std
fstpt
and
rorl
fwait
scas
fisubs
int3
adc
xchg
xchg
cmpsb
adc
push
push
dec
sub
sbb
add
cmpsb
into
loope
inc
orl
outsl
or
mov
mov
xor
jp
mov
aam
aad
hlt
xor
mov
xlat
rcll
mov
sub
iret
push
mov
jle
inc
mov
cmpl
xchg
out
repz
inc
cmp
test
neg
xchg
fsubl
je
mov
js
loopne
subb
pushf
insl
aad
clc
das
sbb
sbb
adc
sbb
test
mov
je
clc
xchg
add
and
roll
or
scas
pop
ljmp
movsb
ljmp
lea
outsl
sti
xchg
outsl
jne
or
arpl
lock
cmpsb
lahf
cmp
shrb
add
and
stos
and
push
xchg
stc
in
jl
jne
push
xor
stc
out
shld
bound
jecxz
lock
pop
scas
mov
jmp
sti
inc
sbb
popf
push
out
jle
cltd
adc
dec
roll
lods
sub
pop
adcb
and
pop
add
push
xchg
mov
clc
pop
and
add
fdivs
das
cwtl
cmp
sbb
imul
add
sub
enter
cltd
mov
cmc
mov
inc
jg
jle
fst
xchg
shlb
imulb
pop
jmp
loop
and
xchg
inc
lods
sub
mov
and
icebp
lahf
push
cmp
pop
test
jns
push
mov
ficoms
cli
and
imulb
cmc
push
shrl
and
push
and
push
lret
es
call
shrl
mov
xchg
pop
outsb
sbb
pop
jecxz
jecxz
inc
testb
sub
add
adc
nop
int
mulb
inc
push
xor
movsb
int3
sub
ret
jge
mov
cwtl
or
ds
test
mov
or
dec
iret
sahf
add
jae
insb
or
mov
mov
sahf
pop
pop
xor
inc
jp
xchg
push
cmp
in
push
push
clc
ror
out
shll
roll
and
inc
sbb
pop
sbb
popa
jge
cmpps
push
push
clc
sbb
cmpsb
pop
mov
cltd
pop
cmp
jbe
jecxz
movsb
push
or
sub
inc
mov
and
sbb
and
mov
cmp
cli
push
dec
push
gs
cmovnp
jnp
inc
jge
test
test
jl
lea
inc
push
lcall
mov
call
push
jae
rolb
cwtl
lock
jmp
lret
cmp
and
push
clc
xlat
or
jno
test
push
out
mov
jno
xchg
pop
xchg
or
test
pop
fistps
and
mov
mov
adc
int3
jb
cmp
inc
xchg
and
lds
sti
mov
btr
push
cwtl
lcall
movsl
jmp
mov
enter
mov
es
insb
stos
mov
jne
lea
sbb
outsl
jl
insl
mov
test
nop
add
xchg
jg
cwtl
mov
or
lahf
jno
cmc
imul
adc
inc
inc
fildll
jecxz
xor
addl
daa
insl
and
jne
mov
xadd
xor
in
pop
cltd
or
outsl
pushf
push
xchg
xchg
aas
leave
aas
arpl
sbb
filds
cltd
adc
xlat
xchg
mov
xchg
insl
ds
cmp
out
xchg
repz
rcll
subb
inc
xchg
jmp
mov
or
sub
icebp
insl
mov
or
xchg
cmp
mov
push
sbb
inc
sbb
mov
sti
push
pop
rclb
repz
icebp
and
js
push
lds
mov
idivl
add
in
fstp
push
mov
les
aam
test
sbb
int3
xlat
xchg
aam
mov
push
rcrb
nop
es
mov
in
stc
sbb
pop
lahf
or
cmp
jmp
mov
push
arpl
repnz
das
lcall
rorb
jo
jne
dec
ljmp
add
sarl
sub
jnp
popf
lret
lea
test
cmp
jge
lea
sbb
pop
cmpsl
add
repz
sbb
scas
add
jmp
fmul
mov
outsb
arpl
out
dec
xchg
arpl
test
mov
jge
mov
jbe
cmpl
stc
jl
pushf
lods
mov
clc
movsb
xor
add
imul
insl
push
cmc
mov
cmp
lret
test
mov
inc
add
popf
cmp
test
outsl
lahf
fwait
jae
cmp
rorb
or
adc
push
out
jle
mov
enter
sbb
int
out
adcl
loopne
out
dec
out
shlb
lods
jge
sbb
testl
roll
mov
and
lahf
pop
xlat
rclb
lea
js
fadds
inc
jmp
mov
sub
xchg
int
xchg
clc
cmp
pop
outsb
xchg
jle
mov
push
lcall
out
adc
dec
sarl
lahf
mov
mov
add
movsb
mov
clc
add
pushf
call
mov
popf
into
add
jl
lahf
push
push
sbb
es
orl
dec
pop
cmpsl
iret
ds
shll
add
jge
jo
adc
mov
jbe
or
mov
sti
fimull
pop
xchg
lcall
and
into
clc
loope
int
scas
or
fwait
xchg
mov
and
fistl
xor
add
daa
mov
cld
in
mov
and
loope
push
xorl
loopne
or
or
lods
xorl
loop
inc
js
cwtl
add
movsb
add
cmp
in
andb
xchg
mov
or
mov
cmc
adc
fcomps
repz
add
jle
push
cli
stc
jl
popf
jl
shl
ret
out
js
or
pusha
js
fistl
mov
shll
outsl
pop
mov
lea
xchg
adc
jae
pop
jno
gs
add
es
mov
rcrl
xor
xor
add
mov
or
cmp
push
jl
or
inc
lahf
adc
movsb
dec
add
jle
ds
mov
pop
and
cmp
cltd
sbb
lods
mov
lahf
rorl
and
cmp
sti
pop
stos
sti
rorb
mov
movsb
adc
testb
lock
test
hlt
rolb
popa
push
and
imul
or
mov
scas
inc
pop
mov
mov
or
repnz
push
shlb
mov
sbb
inc
dec
repnz
mov
stos
lock
mov
push
pop
xchg
orl
std
inc
inc
push
rolb
cmp
push
outsl
xchg
scas
aas
int3
sbb
je
in
sub
cld
adc
mov
adc
clc
inc
pop
out
ret
mov
and
andl
and
inc
inc
in
jge
outsb
aad
daa
fldcw
fnstcw
jbe
popf
leave
jne
inc
ss
lea
pop
sbb
lock
lods
push
cmp
negb
xor
sbb
jmp
sarl
out
cmc
lea
sub
outsb
addb
fdiv
je
fnstcw
dec
mov
mov
in
dec
hlt
mov
in
fisubs
stc
xchg
jns
push
cmp
in
pop
inc
jle
cmc
ret
int
add
or
jns
jmp
push
push
daa
cwtl
fcmovu
jg
fwait
jno
imul
inc
cmc
push
lea
push
out
bound
jb
clc
scas
popa
ficompl
push
push
lock
jbe
bound
ljmp
sbb
shlb
fyl2x
mov
rol
and
fldl2e
cmp
xor
push
mov
shll
or
loopne
movb
outsl
add
cmp
sbb
shlb
insl
into
rcrb
cli
incb
jns
push
jno
fldt
mov
pop
mov
mov
in
sahf
lods
cmpsb
pop
push
in
pop
xor
mov
int
scas
jnp
int3
mov
lret
push
scas
jmp
testl
cli
das
gs
push
fidivrl
pop
pop
inc
and
fistpl
imul
sub
xchg
inc
nop
mov
in
int
jl
xchg
and
push
dec
xchg
fldl
pop
repnz
in
xlat
cwtl
test
jge
adc
dec
or
pop
cmp
sub
mov
in
inc
pop
push
push
stos
and
movsb
sub
cmc
sbb
jnp
push
jg
dec
rolb
add
fcomps
clc
add
sub
or
cmp
xor
dec
int
jnp
push
mov
loopne
ror
pop
filds
popl
nop
and
jecxz
push
enter
pop
outsl
sar
pop
call
add
fcoml
loopne
int3
mov
mov
inc
mov
cld
insl
and
xchg
cmp
lret
addb
push
cld
mov
sub
add
pop
ds
pop
pop
cld
outsb
ret
negl
mov
cmp
loopne
xor
inc
outsb
push
mov
pop
mov
ret
xor
cltd
cs
icebp
jg
ret
fwait
mov
aam
jnp
or
sbb
inc
daa
cmp
pop
mov
jg
mov
mov
subl
xchg
sbbl
add
jl
ror
outsl
lock
or
out
cmp
ficompl
pop
jp
shrl
cmp
jb
js
sahf
mov
add
cmp
lea
lods
in
cmp
imul
insl
loop
icebp
push
or
jno
pop
push
les
xchg
cli
mov
jge
cmp
icebp
xchg
mov
inc
bound
mov
mov
dec
mov
loopne
xlat
lea
inc
loope
mov
jae
dec
sarl
pop
stos
mov
notb
mov
add
popf
add
mull
adc
dec
fsts
pop
add
adc
in
frstor
cmpb
or
push
fdivl
mov
mov
mull
mov
scas
push
jnp
in
xor
cmp
sbbl
pop
mov
lahf
test
mov
jmp
fnstsw
lret
mov
push
filds
inc
mov
mov
mov
pop
int3
iret
lock
ss
and
jp
jge,pn
mov
jl
or
js
add
mov
pop
movsl
sarl
rcl
testb
jl
icebp
mov
cld
cmpb
std
push
lret
jmp
js
imul
push
leave
std
in
sbb
push
add
bound
mov
std
or
shll
jmp
mov
jge
test
and
vhsubpd
aas
jns
leave
movsl
loope
or
outsb
dec
mov
js
mov
jmp
adc
add
notb
sbb
push
insb
jge
jg
cs
xchg
and
sbb
nop
cli
int
mov
sub
jge
adc
jle
mov
jno
fnstcw
mov
push
jmp
aas
sbb
push
push
test
outsl
add
hlt
dec
imul
push
in
movaps
dec
push
xorl
sub
sub
pusha
mov
xchg
push
jo
cmp
fdivrl
sub
imul
mov
icebp
fcoms
push
sbb
cld
sub
movsb
cmp
cwtl
and
pop
sub
sbb
cs
shll
pop
divb
mov
pop
mov
int
imul
lea
sub
orl
cld
sbb
mov
imul
sbb
das
inc
sahf
cmpsb
mov
mov
jge
jg
rorl
movsl
inc
push
push
popf
ret
stc
outsl
xchg
push
stc
mov
fsubrs
rcrl
jb
gs
in
movsl
jno
cmc
or
sbb
push
pushf
sbbl
cltd
jae
sbb
inc
rcrl
sbb
xorb
shrb
mov
or
mov
loopne
daa
add
cltd
sub
adc
jl
jmp
lret
or
loopne
cli
out
pop
pop
call
and
jo
xor
daa
xlat
pop
scas
push
test
mov
fidivrl
or
xor
adc
pop
mov
lods
cli
jmp
inc
push
lahf
sbb
fs
shl
adc
lea
xor
sub
repnz
pop
inc
pop
inc
pop
mov
dec
mov
push
cmp
inc
inc
dec
inc
aaa
in
mov
jge
xor
inc
mov
sub
push
xchg
fistpll
cmpb
mov
sahf
jno
add
mov
cld
xchg
ss
jno
aam
adc
f2xm1
jb
sbb
mov
mov
in
inc
loop
mov
and
cltd
dec
sbb
push
daa
jecxz
xchg
inc
pop
mov
ret
and
arpl
mov
lahf
in
lcall
and
jb
rorb
jge
aam
add
fwait
test
jns
push
sbb
rorl
push
fcmovbe
adc
jecxz
push
sub
push
test
in
mov
into
mov
xchg
sbbb
jle
sbb
cmp
add
xchg
pop
push
sub
jmp
jle
lea
mov
cmp
outsl
xchg
mov
loope
push
mov
js
adc
dec
cwtl
push
aad
cli
sub
sub
inc
add
push
outsl
cmp
icebp
cmc
stc
xor
mov
push
rcrb
mov
int
fcmovbe
stos
add
pop
sub
repnz
pop
popa
sub
jne
imul
cmp
js
fsubs
cmp
icebp
ret
mov
push
inc
and
mov
push
sub
sbbl
inc
adcl
and
mov
out
rol
ret
xchg
hlt
incb
dec
out
es
sbb
dec
out
inc
mov
xchg
sub
ret
pop
mov
push
and
rcrl
inc
loope
xchg
or
mov
jmp
outsl
mov
mov
add
add
insl
std
mov
aad
adc
popf
push
nop
aam
push
repz
dec
jp
mov
ds
push
dec
mov
subb
sbb
icebp
movsb
aas
jl
mov
stos
outsl
arpl
adcb
testb
inc
faddl
aad
jle
cmp
aam
add
pop
aas
dec
jle
into
push
sti
or
push
mov
xchg
sub
jp
aam
mov
in
inc
pop
das
jge
jb
pop
cmp
lea
or
pop
mov
cmp
dec
jl
dec
jge
xor
and
mov
push
repz
ret
lret
test
popa
sahf
or
shrl
and
dec
jge
xchg
sbb
enter
icebp
xchg
in
push
lea
and
add
jp
fstl
int
push
ja
jg
mov
sar
jg
fsubrs
mov
js
add
fildl
mov
mov
outsb
add
xchg
and
shrl
xor
pop
pop
clc
cwtl
adc
daa
cmp
aam
lods
add
stos
pop
imul
popa
insl
pop
loop
mov
jb
adc
pop
repz
jbe
mov
int3
sbb
mov
cwtl
int
testl
ljmp
outsl
xchg
jge
mov
loop
es
jb
cmpsl
movsb
push
cmpsl
clc
xchg
sti
or
jp
lcall
in
add
das
mov
stos
pop
cmp
cld
rorb
dec
sbb
add
cmp
leave
int3
sbb
inc
xor
mov
adc
cmpsb
xor
add
inc
mov
in
int3
add
test
lock
out
cltd
loope
mov
add
scas
iret
xchg
and
inc
push
popf
jb
lods
pop
mov
cs
jmp
fisubl
mov
cltd
pop
ficoms
jae
cmc
nop
push
pop
cwtl
in
movsl
in
mov
mov
js
popf
popa
test
jle
mov
idiv
jp
add
repz
sarb
popf
jp
adcl
mov
sub
ret
and
mov
mov
test
inc
popf
sub
pop
pop
xor
flds
jge
clc
cli
inc
sub
xchg
push
inc
lcall
stc
mov
adc
cwtl
adc
mov
test
pop
adc
js
mov
xchg
inc
repnz
mov
aam
inc
adc
aas
sbb
fucomip
negb
pop
out
sbb
data16
pop
popl
es
adc
or
xor
xor
popa
push
pop
lods
in
outsb
add
mov
inc
xor
das
stos
ret
jp
push
push
jo
or
sub
adc
push
mov
les
xor
notl
or
cmc
pop
jbe
sub
fistpll
mov
sub
ret
push
hlt
xchg
lcall
jp
jno
push
mov
add
jg
sahf
cli
fisttps
or
mov
shlb
cmp
adc
mov
js
mov
repnz
out
outsl
dec
clc
ffreep
aam
fiaddl
js
sbb
add
jae
fstl
or
notb
xchg
imul
sbb
das
out
xchg
loope
push
adc
sbb
cwtl
shrb
sbbb
cmc
or
mov
mov
sbbl
xchg
enter
sub
push
mov
sarb
lret
sbb
testb
or
jmp
xor
cmp
lds
aaa
inc
jmp
jne
call
outsb
lods
cmpsl
xchg
inc
lea
dec
jge
sub
cmp
mov
xor
nop
adcb
and
mov
ds
mov
test
cmp
add
dec
aaa
in
fsubs
and
out
scas
test
jg
mov
cwtl
popf
cmp
push
test
inc
dec
jp
sti
or
lock
xchg
incl
mov
mov
xor
mov
lret
call
mov
mov
fcmovnb
outsl
sahf
scas
adc
cwtl
fnstenv
rcll
imul
fidivrs
push
sbb
xchg
jecxz
imul
pop
ret
pop
insb
jnp
loopne
ja
cmp
lret
mov
ds
in
loopne
sbbl
mov
loope
out
mov
cmpsl
fisttpll
adc
cmp
movsl
fadds
outsb
push
xchg
in
arpl
lea
add
addr16
xchg
push
outsb
sahf
out
int
push
or
push
or
mov
cmp
sub
inc
icebp
test
xchg
inc
int
cs
lret
xor
cli
in
mov
call
adc
mov
stos
fisubrs
mov
jmp
jge
outsl
push
rcll
mov
inc
repz
push
je
xchg
inc
icebp
aaa
mov
push
daa
andl
into
insb
stos
jo
icebp
mov
mov
adc
adc
sti
dec
repnz
xchg
dec
jle
ds
xor
sahf
cwtl
xlat
push
scas
xchg
sbb
pop
call
outsl
jecxz
mov
sbb
lea
pop
push
outsb
lret
jp
inc
push
rcrl
xor
icebp
sbb
clc
test
and
jb
jo
mov
sub
test
insl
sbb
int3
pop
cld
cmp
adc
popa
addl
or
push
cld
sub
ret
clc
lea
push
or
out
add
xchg
adc
xor
pop
xchg
mov
cmc
fxch
or
inc
loope
or
fldl
add
xlat
xlat
repz
xchg
aam
repz
mov
jno
arpl
rcll
pop
sbb
addr16
mov
add
pop
fisubl
pop
outsb
sub
cmc
pushf
loop
sarl
sub
inc
outsl
pop
sbb
cmp
test
sub
add
sub
cmp
lea
insl
push
outsb
out
or
xor
lahf
test
mov
pop
mov
test
repnz
loopne
xor
cmpsb
add
arpl
aad
xor
clc
mov
pop
movsb
lock
jmp
xlat
dec
rolb
aam
popf
add
jge
sub
ret
inc
fimuls
sbb
lea
jo
xchg
mov
add
adc
sbb
mov
inc
sbb
mov
cwtl
xchg
or
mov
int
roll
gs
in
inc
sbb
clc
hlt
push
ljmp
inc
push
jge
mov
rcr
icebp
js
mov
aaa
mov
xlat
mov
lea
xchg
imul
movsb
jbe
push
jno
outsl
inc
js
sbb
int
mov
lds
push
add
jbe
xchg
mov
xor
mov
test
xchg
faddl
inc
pop
xor
jns,pn
mov
lds
jno
mov
dec
cmpsb
mov
mov
push
pop
jge
inc
mov
mov
cmp
mov
orl
rcrb
in
push
jns
fdivr
mov
lret
dec
and
pop
and
in
cmp
dec
push
inc
imul
jg
or
int3
out
add
into
in
pop
fidivrl
mov
clc
xchg
cmp
jne
lahf
arpl
int3
pop
imul
mov
aad
es
ss
fldcw
int
cmpsl
lret
mov
fstpt
push
push
insb
sub
and
jl
sahf
lahf
insl
cltd
sub
lea
push
cmp
add
les
shr
sub
clc
jno
mov
das
hlt
les
add
mov
inc
cwtl
insb
cmp
mov
mov
mov
inc
add
adc
xor
add
xchg
ss
repz
pop
or
fiaddl
push
mov
daa
sbb
xor
testb
mov
mov
rcrb
clc
jg
add
fldlg2
sub
stos
mov
pop
icebp
fsubrs
or
cwtl
or
sahf
add
xchg
xlat
in
push
loope
roll
dec
test
subl
fadds
faddl
addb
loope
xchg
mov
mov
dec
add
out
xor
and
push
mov
sahf
mov
and
imul
cmp
xor
fsubr
fwait
shlb
push
stc
in
daa
xchg
jo
inc
and
jmp
xchg
mov
xchg
cwtl
sub
ffree
lock
fistl
mov
andl
lcall
cmpsb
mov
test
mov
push
xlat
jne
loope
pushf
pop
xchg
or
sarl
icebp
call
and
dec
adc
int
jl
mov
pop
push
syscall
sar
incl
pusha
pop
pushf
xchg
and
jae
add
jne
out
xchg
push
add
push
test
cmp
xchg
and
jbe
sar
push
movsl
shrb
sbb
xchg
iret
jns
add
pop
les
incl
rolb
push
jmp
gs
xchg
aam
mov
or
in
mov
cmp
mov
imul
mov
orb
or
xor
mov
rolb
out
xor
shr
stos
lea
out
ss
cmp
jp
nop
stc
push
mov
mov
push
jo
gs
add
cmpl
mov
in
stos
subl
or
or
pushl
cltd
leave
push
and
xor
test
jg
or
sbb
test
fistpll
pop
mov
xor
push
cli
rorb
mov
popf
mov
aam
scas
mov
ror
adc
imul
fisubl
xchg
insl
cs
mov
enter
sbb
scas
adc
test
scas
ficompl
notl
scas
cld
test
pop
pop
dec
sub
push
xchg
add
push
inc
adc
outsl
adc
sub
and
ss
push
mov
out
cmc
and
out
add
push
into
xchg
xlat
loop
and
std
push
imul
jl
lret
add
nop
movsb
mov
fldt
push
hlt
mov
xor
adc
cmp
cmp
into
ds
push
ret
je
rol
fidivrs
sub
add
psllw
push
fistpll
lea
push
sbb
pop
popa
popa
xchg
xchg
aam
pop
xchg
mov
mov
js
outsb
js
mov
addb
pushf
daa
fdivrl
or
adc
dec
nop
mov
sbb
leave
sbb
add
loopne
lea
xchg
cwtl
sub
mov
or
in
inc
das
mov
rorb
subb
xchg
daa
sub
ss
push
and
mov
ret
sub
xchg
and
faddl
rorb
cwtl
xor
lea
addb
insl
and
inc
mov
lock
mov
add
mov
divl
andl
add
jmp
mov
jge
sbb
call
push
pop
popa
out
divl
imul
or
add
popa
push
fidivl
ret
orb
push
mov
insb
addr16
outsl
popa
stos
pop
adcb
mov
lahf
jge
loope
mov
mov
cwtl
outsl
xor
icebp
mov
mov
jbe
mov
mov
cmp
add
lea
dec
mov
cmp
xchg
repnz
mov
jge
test
add
lds
test
rcll
pop
adc
inc
pusha
imul
inc
int3
cli
fucomip
push
aas
cmpsb
shld
test
jg
das
adc
sahf
or
ds
std
testl
sub
pusha
jae
mov
mov
push
pop
outsb
iret
daa
es
roll
icebp
sbb
and
data16
add
loope
int
scas
jge
imul
sahf
imull
ss
aam
aas
aad
or
cmp
ljmp
das
or
xor
sbb
or
mov
scas
sub
mov
or
inc
ss
cltd
gs
roll
das
movsb
xlat
mov
subl
cltd
push
insl
cmc
les
and
sti
clc
popa
or
mov
jb
int
cmp
jnp
pop
mov
xor
sbb
xor
jnp
add
or
xor
shll
pop
mov
push
mov
jno
push
jae
cmpl
lea
dec
dec
mov
iret
jae
lods
or
jmp
mov
pop
mov
push
inc
mov
adc
pop
inc
mov
inc
sbb
xor
je
pop
pushf
cltd
jmp
mov
mov
or
rcrb
decb
cmp
inc
mov
adc
bound
jne
cmp
or
fisttpll
jbe
inc
es
and
out
shrl
sbb
sub
call
ret
jl
xlat
mov
xchg
lea
repnz
xlat
movsb
and
mov
and
mov
nop
push
mov
or
jne
add
stos
lea
fsts
loope
inc
adcl
stos
out
icebp
push
mov
push
push
fwait
mov
fisubl
test
add
test
sub
sub
mov
pushf
int
jae
out
mov
aad
cmp
mov
shll
adc
or
dec
arpl
imul
pop
cmp
test
add
fimull
jmp
mov
pop
xor
cmp
mov
sarb
fsub
push
push
xchg
jmp
dec
xor
sbb
sbb
sbb
push
inc
rcl
cmp
jg
push
or
jb,pn
test
inc
and
or
push
cmp
or
fsubs
push
rcrl
xchg
mov
push
adc
sbbb
daa
mov
fisubrl
outsl
fiaddl
sbb
push
jg
inc
mov
icebp
js
out
xlat
xchg
pop
mov
mov
mov
mov
pop
sarb
ficoml
dec
loopne
stos
lcall
push
int3
pop
aam
adc
rclb
fidivrs
add
stos
dec
loope
sub
lcall
jecxz
mov
in
jge
pop
cmp
shl
loope
dec
in
andb
dec
enter
loope
int3
outsl
ljmp
rolb
inc
mov
push
sbb
pop
adc
idivb
and
test
dec
popf
or
sbb
pop
fisttpl
loope
std
inc
lret
and
cmpsb
in
push
xchg
push
or
inc
adc
adc
call
outsl
mov
jp
mov
aam
stos
subl
std
sahf
push
loop
push
mov
inc
cwtl
cmp
mov
xchg
sarl
loopne
adcb
cmpl
dec
or
or
icebp
cmp
insl
add
dec
cmp
test
and
or
cmp
pop
push
and
jp
shlb
out
inc
imul
xlat
mov
fistpl
icebp
xor
cwtl
scas
loop
in
pop
aad
jb
pop
adc
add
jmp
pop
dec
lcall
xor
out
out
loope
rcrb
xchg
fdiv
or
cmpl
out
clc
cmp
or
xchg
and
ss
xchg
mov
xor
mov
hlt
mov
scas
lea
xor
scas
shll
aaa
and
lcall
sbb
add
movsl
push
push
mov
cmpsb
inc
cwtl
stc
xor
movsb
mov
sub
pop
or
mov
add
nop
cmp
xchg
jle
test
movzwl
sub
xchg
adc
icebp
in
sub
repz
cmc
mov
mov
xchg
mov
push
sub
cltd
js
sar
aad
sbb
sti
pushf
mov
les
mov
cld
or
cs
test
cmpl
cmp
shl
adc
loopne
push
cmp
cmp
scas
push
cmpl
ficomps
and
jae
scas
fdivrl
xlat
ljmp
sub
dec
fists
ss
fstl
jle
shll
add
icebp
dec
push
fwait
mov
test
stc
jl
xor
xchg
add
mov
jae
sahf
clc
dec
jle
sbb
pop
mov
subb
xchg
sti
xchg
inc
call
xlat
mov
push
cmpsl
mov
hlt
xchg
pop
push
lret
push
lock
pop
popa
popf
enter
ret
mov
or
xchg
ror
mov
mov
scas
lods
sub
mov
loop
sbb
or
clc
jp
mov
cmp
stc
lea
jnp
sub
pop
cltd
xchg
sub
loope
push
sahf
or
cmp
int
xor
dec
mov
adc
stc
es
testl
imul
cmp
in
adc
sbb
in
or
cmp
imul
shlb
sub
xor
arpl
xor
sti
dec
daa
jl
imul
fisubrs
loop
jecxz
aas
push
movsb
mov
sub
xchg
or
mov
ja
shrb
int
int
jbe
push
sbb
push
add
test
andl
ror
mov
loop
pop
and
or
inc
jmp
cli
lahf
insl
jmp
stos
das
mov
mov
mov
inc
mov
ja
std
mov
pop
push
iret
jmpw
add
imul
lea
imul
andb
imul
incl
int
adc
rorl
mov
popa
adc
mov
repnz
cwtl
xor
jl
sub
das
aad
loopne
xor
test
pop
fsub
insl
mov
xchg
jae
xchg
or
sti
aaa
dec
jbe
aad
jl
test
mov
or
mov
sub
fidivrs
mov
ds
bound
lods
fildll
sub
pushf
rclb
jg
mov
aaa
aad
out
and
das
cmp
testb
leave
mov
mov
pop
lcall
xchg
add
mov
lahf
shrl
mov
mov
mov
mov
sar
adc
or
push
push
push
adc
adc
aad
cli
push
jmp
aas
or
mov
xorb
mov
sbb
dec
in
pushf
test
cmc
inc
outsl
xchg
enter
jmp
adc
aas
loope
in
add
outsl
cltd
ja
andb
mov
lods
inc
sbb
fldt
sbb
arpl
cmp
xlat
int
cmpsl
or
imul
sbb
cmp
mov
lods
hlt
shll
iret
xor
fdivrs
add
sub
fmuls
sbb
jo
outsb
sub
and
sbb
fnsave
jmp
jge
ret
lcall
xchg
adc
icebp
fistl
cmpl
or
jle
in
or
fchs
out
out
sbb
idiv
adc
sbb
aad
mov
sbbb
rclb
fnsave
push
fsts
lea
data16
loope
jbe
insb
mov
jae
push
mov
inc
or
mov
aam
es
lcall
push
mov
push
lret
fnstenv
mov
mov
sarl
jge
loop
xchg
xor
addr16
push
imul
xchg
add
cmp
ljmp
mov
out
jmp
ja
sub
daa
pop
loope
lea
mov
loope,pn
lahf
cmp
mov
loope
sbb
and
mov
xchg
cmpsl
cmc
adc
sub
push
inc
fdivrs
repz
mov
or
mov
stc
dec
sub
test
in
dec
xor
out
push
push
dec
adc
mov
lcall
mov
jno
test
cmp
popf
and
mov
icebp
pushf
xchg
jge
dec
jmp
add
cmpl
jno
mov
mov
sbb
xor
push
xchg
jbe
aad
jbe
mov
mov
fstl
xor
add
push
sub
mov
push
cmp
xchg
int
mov
adc
and
add
mov
sub
dec
and
pop
fidivl
fildll
jp
inc
das
shlb
sti
mov
push
xchg
lahf
xor
arpl
add
out
mov
sub
ljmp
arpl
inc
fiadds
mov
push
in
iret
inc
add
jno
adc
mov
aaa
adc
fs
sbb
scas
xor
mov
fwait
rorb
popa
pop
ljmp
sub
aad
or
scas
in
in
cmp
repnz
leave
xchg
pop
cmc
push
cmp
cmp
mov
movsb
fidivs
mov
mov
test
xchg
nop
xor
sti
and
imul
pop
lret
test
jl
inc
test
inc
in
and
mov
lock
aas
test
pop
cmc
dec
daa
jbe
pop
sub
movl
jle
xor
pushf
popa
or
sbbb
mov
sbb
mov
inc
jg
mov
sub
inc
mov
jp
fidivrl
fldenv
in
lods
jae
dec
and
push
stos
das
pop
mov
vmwrite
iret
add
and
sbb
fs
and
sbb
sbbl
xchg
fsubrp
cli
push
aam
adc
mov
jg
jge
jns
roll
stc
testb
xlat
add
in
sbb
data16
jmp
test
pop
cmp
cmp
gs
dec
push
mov
cmp
mov
lcall
mov
sub
mov
in
outsb
faddl
outsb
rorl
push
int3
mov
jle
or
aam
in
repz
sbb
cmp
cmp
mov
arpl
inc
lods
popf
xor
int3
rorb
inc
stc
aas
pop
arpl
mov
shrl
insl
dec
test
add
sbb
jbe
int
jmp
cmp
jg
fwait
mov
pop
inc
push
orb
test
and
roll
fcoms
sub
sbb
aad
stos
outsl
or
xchg
pop
out
jle
or
test
mov
sbb
out
xor
jle
sub
pop
pop
fiaddl
mov
jnp
fisttpll
inc
mov
fidivrs
lea
cld
outsl
or
int
push
pop
xchg
bound
pushf
popa
mov
push
add
sbbl
xchg
mov
pop
int
and
jmp
lret
fucomip
sub
aad
scas
sbb
not
jno
or
or
pop
or
stc
add
cmc
std
fucomp
cmc
adc
mov
popf
std
dec
mov
shll
lahf
in
sbb
mov
adc
add
icebp
stc
dec
icebp
jb
insl
movsb
adc
xchg
xchg
aad
cmp
imul
cmp
jle
sub
sbb
mov
inc
jnp
xor
mov
xor
cmp
std
outsl
cwtl
jmp
stos
cmc
gs
inc
pop
scas
icebp
pop
cli
cmpsb
repz
mov
jo
fdivrp
cmc
addl
xchg
das
stc
addr16
xor
mov
fnstcw
stc
jle
insl
stc
lcall
mov
mov
cltd
aas
stc
jp
sub
sbbl
icebp
scas
add
cld
dec
pop
stc
fdivrs
stc
sti
outsl
loope
push
lea
fucomi
shll
stos
ror
pusha
fcomi
lods
mov
out
lods
fnstcw
test
stc
push
int3
jmp
cltd
mov
mov
icebp
fistps
movsl
xchg
jae
sbb
cmp
jge
imul
lret
jecxz
and
mov
xor
icebp
mov
out
out
out
xchg
ja
mov
pop
inc
stos
mov
test
mov
pop
push
ja
jns
mov
scas
faddp
fidivs
out
cmpsl
pop
cmc
jne
scas
loope
popf
xlat
sti
stc
mov
push
fsubrs
insl
loope
lds
mov
add
shll
sbb
mov
xchg
std
mov
shl
fldl2t
lods
faddp
dec
dec
mov
mov
stos
xchg
rorb
mov
push
shrb
push
stc
jnp
pop
fisttpl
lahf
into
test
shll
test
fistps
loope
movsl
add
cmp
xor
pop
cmp
retw
clc
mov
jnp
idivl
adc
and
lea
test
in
aas
or
and
icebp
idiv
mov
inc
pop
xor
adcb
mov
cmp
lods
fildll
inc
fcomip
or
dec
or
pop
aad
dec
dec
jno
imull
push
mov
repz
cmp
or
stc
jae
mov
add
push
adc
mov
cmp
leave
clc
adc
test
rcl
cmp
sbbb
leave
movsl
sti
lret
mov
fimuls
out
mov
jp
fcoml
fldl
sbb
or
mov
lea
mov
dec
jp
mov
jl
ror
or
fdivrs
push
adc
pop
pushf
push
iret
aam
sub
out
aas
lcall
mov
jno
movsb
mov
adc
sbb
sti
and
cltd
mov
and
aad
jg
and
mov
xor
mov
inc
add
add
mov
loopne
xor
test
icebp
sbb
push
cltd
fisttpll
mov
aam
aad
cld
mov
sbb
cwtl
incb
or
sub
adc
fists
sbb
jecxz
dec
sbb
lcall
loop
repz
mov
add
mov
jp
inc
lds
mov
sbb
adc
jne
cltd
xor
shll
mov
int
testl
adc
adc
jmp
add
lahf
mov
lea
imul
sub
sub
xor
cmp
xchg
loopne
rol
stc
push
cmp
inc
clc
pusha
std
jne
mov
dec
push
stc
std
xchg
std
stc
in
xchg
cmc
dec
ds
jb
sarl
loope
roll
pop
addr16
fstp
cld
sar
negl
jg
icebp
stc
test
lds
stc
sahf
pop
stc
das
xor
fldcw
push
cmp
xor
loope
int
std
adc
mov
imul
add
sub
in
xchg
lahf
icebp
fnstcw
loope
xchg
sub
mov
fisttpll
mov
ret
mov
mov
jge
pop
loope
push
mov
jnp
sarl
xchg
mov
mov
sub
mov
mov
mov
shll
mov
roll
sahf
cmp
mov
rorl
lods
cmp
xchg
popa
mov
mov
mov
push
cmp
jmp
mov
loope
xchg
rcl
jmp
or
mov
std
xlat
out
out
out
lds
ss
popf
in
jnp
in
outsb
mov
mov
add
xlat
mov
adc
dec
loope
pushl
sti
mov
std
jmp
popa
stc
xor
lods
mov
mov
mov
xor
out
out
stc
mov
stos
rclb
xchg
insl
mov
lea
mov
dec
repz
in
loope
mov
mov
push
rep
pop
cmc
in
cmpl
sbb
pusha
fucomp
mov
mov
inc
int
popa
lods
jne
pop
cmc
dec
sar
repz
faddp
int
fistpl
mov
rcr
cmpsl
ja
aad
mov
jo
mov
clc
loope
fwait
jmp
lret
fnsave
aad
mov
cltd
insl
inc
andl
inc
out
fists
cmp
nop
or
mov
fimull
push
imul
int
inc
push
popa
outsb
jmp
push
add
aam
pop
fimull
add
jae
inc
addb
push
jp
mov
fadd
enter
mov
dec
fsts
fisttpll
xlat
cs
cmc
and
rcr
mov
cmp
aaa
or
or
les
daa
rcrb
lahf
and
inc
sub
mov
insb
rolb
ds
jge
push
mov
rcrl
inc
mov
mov
add
push
inc
dec
jl
push
add
mul
fdivl
loope
add
sbb
in
leave
inc
xor
mov
insl
pop
sub
push
clc
or
sbb
pop
ss
mov
jmp
hlt
scas
daa
xlat
jle
add
mov
aaa
push
popa
imul
test
stc
fldenv
inc
out
pop
cld
stos
mov
mov
xchg
or
rorb
push
lahf
movl
fdivrl
mov
xor
mov
push
and
xchg
test
cld
jle
xchg
out
das
jge
and
jne
fistl
outsl
sbb
adc
xlat
scas
movsb
or
imul
shlb
mov
mov
add
rcrl
fimuls
scas
addr16
cwtl
loopne
inc
inc
add
sahf
inc
leave
sbb
cmpsl
add
out
movsl
xlat
cwtl
imul
clc
inc
jl
push
cmc
inc
inc
xor
je
cli
test
sub
add
es
jo
mov
sbb
shl
out
addb
popf
adcb
mov
mov
scas
xchg
sub
inc
push
addb
ds
push
mov
mov
adc
jmp
and
pop
pop
cmp
cmp
std
fs
push
out
in
xor
pop
push
add
add
in
lods
arpl
mov
adc
or
fsubrs
loope
sub
dec
jge
lea
dec
addl
push
rsqrtps
shlb
inc
pop
jp
aas
jo
sbb
cld
jl
or
or
outsl
mov
sub
add
fwait
lret
cmp
mulb
xor
xchg
lcall
repz
out
movsb
sarb
or
lock
in
mov
adc
js
sbb
mov
fld
movsl
outsl
ja
jmp
daa
dec
inc
mov
push
jl
cmpsb
dec
push
lock
sbb
push
and
gs
jmp
adc
popf
aaa
ret
xchg
cwtl
add
aas
cmc
xor
sub
mov
cmp
mov
cld
inc
fwait
aas
dec
sarb
lods
stc
inc
sub
loop
call
or
shll
inc
rorl
push
pop
add
xchg
test
pop
dec
add
lods
out
add
inc
push
or
test
popf
sbb
rorl
jp
mov
jmp
movsb
nop
jecxz
xchg
test
dec
push
outsl
inc
cmc
mov
in
stos
pop
lea
in
dec
cmp
test
dec
ljmp
and
clc
cli
sub
xor
or
int
push
pop
xchg
push
mov
mov
inc
mov
lods
pop
xor
xchg
roll
dec
pop
xchg
push
mov
dec
sub
or
add
sbb
jae
add
jb
in
inc
mov
imulb
pop
add
xor
decb
pop
cmp
sbbb
xor
adc
pop
mov
stos
sbb
lret
addr16
lods
sbb
stc
mov
jecxz
inc
pop
pushf
daa
sbb
xchg
fnstcw
cli
push
xchg
ficomps
subl
sbb
xchg
sub
pop
shlb
push
xchg
cmpsb
mov
mov
pop
outsb
inc
sbbb
mov
push
push
ljmp
cmp
out
dec
stos
clc
imul
movsl
mov
pop
and
cmp
in
js
xor
in
dec
leave
inc
jo
jmp
in
jmp
xlat
dec
scas
jg
cmp
xchg
xchg
push
call
mov
loope
aad
push
rcrl
cld
mov
gs
inc
or
outsl
xchg
sbbb
or
xor
xchg
std
push
sbb
out
xor
sbbb
push
push
data16
es
jns
loopne
jmp
or
xchg
push
cmp
rcl
in
pop
sti
push
fdivrs
dec
outsl
insl
cmp
push
popf
sub
sub
pusha
xchg
and
push
int3
in
std
sahf
cwtl
jl
push
les
add
mov
mov
and
add
test
stos
in
sub
insl
icebp
mov
jmp
push
rolb
shrl
cmp
in
add
daa
cmpb
sbb
add
seto
xlat
or
or
leave
outsl
xlat
test
and
outsb
fnstcw
mov
or
in
push
or
in
and
ds
ret
jl
xor
or
outsb
lea
scas
and
push
shlb
mov
pop
stc
outsb
outsl
sub
cmp
and
fdivrl
mov
or
adc
push
and
sbb
roll
push
pushf
int3
in
pop
enter
popa
call
aas
lea
lock
push
cmp
mov
lcall
mov
sub
xchg
dec
inc
add
roll
into
pop
push
mov
sub
add
mov
mov
sbb
cmp
jne
ret
call
mov
xlat
push
std
les
lods
icebp
mov
fidivrs
mov
inc
roll
movsb
jge
jmp
jle
out
mov
pop
mov
add
cmp
rcrl
mov
fcomip
pop
adc
add
mov
inc
dec
jne
lock
mov
out
pop
cmpsl
sub
cmpsb
sarl
sar
movsl
sub
int
dec
adc
jge
mov
xchg
lahf
xor
cmp
ficomps
test
and
xor
xchg
fcmovnb
jbe
sub
cmp
and
arpl
xor
data16
lea
das
add
mov
int
jbe
test
mov
test
sets
adc
andl
sbb
and
mov
lods
push
in
and
xchg
jne
iret
inc
mov
loop
mov
cmc
sub
mov
pop
hlt
pop
cmc
mov
cwtl
lahf
outsl
sbb
or
inc
imul
in
cld
pop
icebp
ja
lods
mov
sub
fidivrs
mov
fsubs
mov
fildl
int
jne
xchg
sti
mov
sahf
adc
mov
pop
pushf
inc
mov
repz
fbstp
inc
and
nop
inc
rclb
out
mov
jmp
mov
cwtl
stos
lock
jns
mov
dec
mov
sbb
insb
fwait
push
push
clc
pop
pop
shlb
negb
sub
jle
jno
stos
and
popf
or
js
pop
pushf
movsb
sub
push
clc
fisttps
jnp
pusha
popf
sbbb
or
cmpsb
lcall
xchg
fildl
xchg
lea
sub
jg
push
and
sbb
sub
lret
mov
shrl
cmc
dec
lds
int
test
aam
movsl
dec
pop
or
mov
sbb
scas
les
jmp
inc
addr16
push
adc
testl
fists
cmp
sbb
cmp
or
mov
mov
jmp
sub
sbb
roll
push
and
mov
outsb
pop
push
cmc
pop
push
ss
add
cmpsl
push
cmc
loope
mov
insb
cmp
scas
jmp
xor
nop
movsb
aaa
jl
jae
pop
mov
sarl
cs
lcall
test
and
push
inc
pop
or
dec
mov
out
cmp
rolb
and
jge
pop
sub
add
mov
clc
stos
lds
es
mov
arpl
xor
loopne
or
cmp
loope
loopne
jp
das
aas
cmp
cmp
push
sbb
js
push
insb
pop
stos
jge
mov
outsb
jne
jecxz
mov
pop
lds
out
xchg
jno
inc
xchg
arpl
outsb
mov
inc
xor
sbb
sarl
insb
movsb
xor
inc
clc
loopne
inc
push
push
int3
jge
in
mov
adc
lea
mov
cmp
enter
sub
out
cmp
jg
push
or
cli
fmull
test
mov
jo
fistl
mov
adc
aam
xchg
rclb
cmp
scas
cmpsl
xor
lods
jge
or
imul
mov
mov
test
andl
lea
test
pop
subl
sub
mov
mov
ja
mov
inc
popa
mov
dec
lea
sti
and
sbb
push
push
rcrb
xchg
mov
clc
push
sub
clc
push
popf
test
dec
lret
popa
push
aam
dec
add
jl
popa
pop
jecxz
jno
mov
adc
add
rcll
stc
push
and
cli
lock
out
add
sbbl
pop
ret
scas
mov
addr16
dec
out
in
std
xchg
jne
mov
inc
outsb
mov
cmpsl
cmpl
popf
xor
ret
mov
push
popf
inc
cmp
icebp
inc
lea
in
nop
sbbb
shl
jg
jb
shll
ret
sub
mov
jl
shlb
adc
sbb
loopne
jp
jne
fldenv
stc
nop
out
sbb
mov
pop
popa
jge
insl
jmp
ror
and
jp
outsb
dec
and
sarl
jno
mov
xor
sub
mov
jge
push
subb
scas
idiv
mov
lret
std
shl
in
ficoms
xchg
and
sub
scas
repnz
insl
xor
fldl
sbb
jb
xchg
push
cmpb
cs
add
or
clc
sub
mov
aam
xlat
jle
je
sub
popf
xchg
divl
icebp
jmp
pop
emms
lea
add
xchg
add
repnz
icebp
and
clc
cmp
mov
out
daa
ss
xor
cmpsl
insl
loop
fdiv
sub
outsl
punpckldq
sub
sub
nop
jnp
lret
dec
jp
jno
clc
jmp
add
js
shr
aas
jp
mov
fsubs
aam
mov
loope
xor
test
shll
out
scas
dec
push
pxor
dec
lock
adcb
mov
mov
mov
sbb
iret
bound
xor
mov
push
cltd
notl
jmp
lods
jno
mov
hlt
mov
sti
std
data16
frstor
sub
inc
out
popf
or
inc
push
jp
loop
popf
lret
orl
jl
push
mov
loope
add
and
out
mov
mov
dec
adc
ret
mov
subb
jecxz
mov
aaa
testl
cmp
movsb
lcall
adcl
inc
popf
stos
lds
icebp
pop
inc
pop
ja
cmp
jnp
jle
scas
lea
fidivrs
clc
inc
push
cld
insl
sbb
add
xor
fdivrs
icebp
shll
mov
cltd
es
roll
nop
xor
push
pop
mov
add
por
adc
clc
push
inc
ljmpw
ficoml
add
in
or
jl
xchg
cmp
icebp
fnstcw
dec
mov
js
icebp
cmp
aam
jns
mov
jbe
push
xchg
cmpsl
pusha
or
mov
and
das
ljmp
jle
daa
insb
hlt
andb
mov
inc
lret
xlat
outsb
jecxz
cltd
inc
jp
inc
inc
jmp
xchg
mov
clc
push
icebp
jl
push
data16
mov
sub
std
int
add
jmp
mov
sbb
add
jbe
out
mov
ret
icebp
insb
xor
mov
inc
jecxz
inc
iret
mov
clc
imul
es
push
sarl
xor
xchg
jne
sbb
out
sbb
idivl
fsubrs
mov
mov
mov
loope
loop
repnz
and
fadds
js
cmp
or
xor
add
pusha
jecxz
sarb
jo
jle
mov
movsb
fcoml
pop
scas
cmp
orl
mov
jne
mov
pop
push
leave
out
es
out
arpl
jle
dec
sbbl
test
call
ja
lret
rcrl
pushl
cmp
aaa
pusha
jg
icebp
xchg
pop
inc
lcall
clc
inc
sub
std
outsb
inc
dec
clc
stos
mov
dec
xchg
xchg
out
mov
fwait
mov
dec
pop
xor
clc
mov
jg
fnstsw
sti
sti
xchg
in
ret
mov
sbb
stos
pop
aam
mov
sti
outsl
jmp
add
fisubrs
adc
in
in
xchg
xor
stc
dec
scas
faddl
and
out
jl
inc
mov
cmp
sbb
xor
sti
fdiv
cltd
xor
mov
push
dec
out
mov
pop
test
push
cltd
out
addl
mov
dec
scas
inc
pop
mov
popa
aaa
stc
adc
mov
out
popa
xorb
scas
cmp
iret
jo
dec
out
xor
mov
pop
sbb
pop
stc
jns
jg
mov
mov
or
and
push
daa
cmp
mov
aad
xor
xchg
jecxz
mov
subl
aam
inc
std
mov
cmp
fninit
mov
pop
push
jo
pop
mov
adcl
jecxz
or
cmpb
jle
inc
push
jecxz
xchg
mov
xor
insl
div
and
inc
cld
pop
add
pop
add
push
or
xlat
sbb
fcompl
ss
xor
sbb
cmp
push
icebp
cmc
ljmp
inc
loop
repnz
jnp
sbb
les
inc
ljmp
inc
sar
movsl
lods
push
out
sbb
push
movsl
out
incb
out
dec
cmp
inc
mov
movsb
and
call
dec
daa
out
insb
adc
out
cmp
jbe
dec
push
sahf
orl
push
pop
popf
ja
loop
jnp
cmpl
or
lret
outsb
inc
add
mov
ret
addb
jp
pop
ljmp
in
inc
lea
sbb
cmc
inc
xor
sti
xchg
pop
sbb
clc
xor
loope
push
mov
xchg
inc
loop
jae
addl
sahf
pop
mov
push
ret
push
out
jb
adc
cmc
dec
and
fisttpll
daa
push
mov
push
sbb
dec
out
test
xor
push
jmp
inc
and
cmp
jge
kmovb
add
sbb
out
inc
fisttpl
xor
xor
and
inc
repnz
in
mov
rcr
dec
jbe
push
cs
mov
inc
jle
loope
mov
rclb
add
leave
sbb
loope
inc
stos
pusha
xchg
mov
inc
jg
data16
xchg
mov
or
and
out
enter
mov
jecxz
sub
ret
out
sar
outsl
insl
rcrb
xchg
inc
lock
mov
mov
add
dec
mov
mov
scas
add
sbb
jmp
ja
sbb
cmc
bound
out
mov
add
add
idiv
stos
repz
sub
stos
sti
push
lret
clc
dec
and
push
add
push
mov
in
popa
dec
push
cltd
int
xor
dec
jnp
fwait
sbb
inc
inc
incb
inc
dec
jbe
and
sti
mov
test
cmp
cli
lret
mov
mov
cld
mov
in
and
mov
daa
pop
cmp
mov
mov
test
dec
cli
push
out
fdivrl
mulb
cmp
cld
jmp
push
nop
mov
mov
les
out
inc
inc
jl
dec
inc
pusha
aaa
push
and
jns
out
add
outsb
cli
enter
jp
test
xorl
and
pop
jne
and
sti
dec
jne
shrl
out
push
loopne
cmc
in
out
mov
fdivl
stc
outsb
sbb
jecxz
aas
lds
dec
popf
cld
insb
adc
adc
enter
sarb
mov
fldenv
ret
loopne
mov
mov
clc
pop
subl
push
jp
cli
mov
push
leave
in
push
sbbl
add
movsb
jmp
fisubrl
mov
jp
popa
jbe
cmp
rclb
sti
inc
jge
movsl
lret
pusha
mov
gs
sarb
adcb
sbb
shll
lcall
pop
pusha
jp
icebp
jl
sub
sbb
subb
add
rolb
out
fwait
xchg
push
xor
int
mov
dec
mov
rolb
mov
clc
sbb
gs
sbb
clc
lods
addr16
pop
test
in
jp
mov
cmp
je
insl
repnz
inc
mov
stos
mov
hlt
mov
lret
pop
push
add
mov
mov
mov
add
roll
inc
jp
rolb
iret
jbe
repz
sti
fidivs
push
add
rorb
jo
loopne
add
mov
push
add
sbb
out
dec
iret
shl
mov
xchg
in
inc
sar
mov
mov
shr
out
cmp
adc
and
xchg
xchg
loop
sbb
mov
out
lds
cli
clc
clc
mov
addr16
push
mov
push
popf
xchg
lret
popa
fucom
mov
jno
xchg
xor
das
addl
lock
push
icebp
sbbb
int
jno
fiaddl
loop
icebp
test
sbb
dec
cld
push
jno
insb
sub
stc
int3
add
xor
outsl
sub
jle
mov
loope
push
and
xor
cli
testl
xchg
ret
popa
hlt
es
scas
or
or
das
mov
ret
xor
add
xchg
add
xchg
inc
inc
out
dec
popa
sbb
push
les
jg
add
cwtl
ret
jb
ror
push
std
icebp
push
repnz
mov
sbb
out
ds
and
mov
enter
add
dec
add
cmp
js
aam
sbb
outsl
inc
int3
popl
mov
rclb
fs
sbb
sbb
xorb
ret
dec
add
mov
lret
adc
cmpsl
dec
orl
cli
leave
xchg
xchg
js
popf
add
adc
xchg
incb
add
dec
add
testl
nop
push
jmp
enter
cli
jbe
clc
or
test
sbb
in
dec
nop
dec
mov
popl
lret
cmc
mov
fiadds
into
in
jecxz
aam
jle
xchg
aad
jmp
incl
add
push
popf
orl
loop
jecxz
rolb
adc
inc
add
xchg
int3
mov
cmp
sbb
orl
mov
xchg
mov
sti
sbb
mov
fisttpll
add
lock
aad
jp
loopne
mov
inc
popl
je
cmc
mov
lods
inc
xchg
jne
stos
sbb
and
xchg
cmp
stc
test
fldl
stos
popf
insl
data16
incl
cmp
ljmp
add
or
push
inc
add
sub
fcomp
hlt
popl
orb
movsl
xchg
cmp
shr
mov
loope
rorb
xor
aam
add
pop
lea
enter
scas
xchg
ja
and
jne
push
fsubrs
mov
add
pxor
inc
clc
dec
jl
adc
ret
add
out
push
jecxz
test
add
pusha
inc
addb
lcall
clc
icebp
scas
adc
sbbl
aas
loopne
bnd
inc
mov
pop
popf
test
clc
or
negb
je
push
push
jl
mov
inc
roll
aaa
and
andl
ret
jne
stos
and
bound
adc
test
addr16
jno
push
inc
pop
mov
aaa
jp
jo
test
aam
rolb
add
popl
data16
xchg
movsb
sti
lods
jns
fucomp
and
imul
inc
sarb
mov
pop
dec
jp
icebp
test
popf
test
ljmp
out
icebp
jns
mov
ljmp
popf
xor
push
popf
xchg
adc
jb
orl
cmpl
cwtl
add
ja
lea
popl
xor
add
pop
mov
push
and
js
push
inc
aaa
incl
ss
test
or
popl
lods
shll
repnz
std
out
cmp
scas
iret
mov
pop
subl
shr
aam
mov
mov
dec
push
and
inc
mov
roll
adcl
jns
stos
out
call
clc
add
shrl
ss
cmp
gs
aad
sub
aam
mov
test
dec
data16
out
cmp
insb
sti
pop
dec
push
and
dec
or
addr16
shll
xchg
repnz
mov
lret
sbb
clc
out
inc
mov
adc
clc
in
add
out
cmp
add
in
lret
clc
jecxz
cmp
push
fdivrs
add
sub
outsl
nop
mov
mov
gs
in
mov
dec
pop
out
fdivs
dec
jmp
js
add
or
dec
mov
fstps
sub
or
out
orl
in
pop
mov
sub
add
dec
test
pop
shl
popa
cmpl
xor
adc
lret
push
and
orl
push
mov
jbe
or
mov
xchg
cmp
fs
mov
push
sub
mov
mov
inc
aaa
xchg
push
enter
mov
sub
shll
cmp
add
push
pushf
adcl
ret
incb
mov
mov
jp
popl
jle
pusha
xor
fnsave
jmp
add
orl
mov
shlb
icebp
pop
inc
dec
mov
adc
clc
xorl
mov
pop
cmp
pop
dec
add
add
ljmp
push
loope
add
dec
adc
repnz
xorl
jp
test
sbb
xor
mov
rcrb
lret
jmp
repnz
popa
xchg
insb
cmpsb
cmpb
or
lret
sbb
xchg
nop
roll
stos
xor
enter
movsb
dec
cmp
in
call
sahf
pop
xchg
popf
add
push
jmp
mov
clc
and
std
xchg
pop
imul
dec
stos
repz
jne
pop
xchg
out
sub
repnz
mov
imul
cmpsl
pop
aam
adc
mov
add
xor
or
cwtl
pusha
push
inc
adc
int
insb
jp
ja
xchg
shl
and
xchg
xor
sbb
xor
dec
and
inc
incb
jecxz
add
scas
add
jb
dec
cmpl
addr16
out
pushf
das
incl
add
jno
or
and
icebp
add
out
lea
popl
cmp
cmp
adc
popf
push
arpl
mov
aam
cmp
lret
repz
push
mov
incb
clc
inc
ds
adcb
movsb
cli
nop
push
lcall
es
or
aam
fldl
les
mov
push
pop
fldl
or
xchg
push
int3
xchg
push
popf
push
arpl
jle
mov
loope
ds
stos
ja
mov
jecxz
inc
add
out
enter
jge
add
mov
sbb
jp
js
add
mov
lret
dec
adcl
ss
in
ret
clc
push
rcll
jb
shll
mov
jl
ret
xchg
fidivrl
shrb
sub
leave
lret
dec
popf
test
push
sbb
push
add
xacquire
int3
jle
xor
xor
inc
test
dec
xchg
out
gs
push
imul
pop
adcl
leave
testl
test
fdivrl
push
jno
cmpsl
or
pop
sahf
push
repz
mov
jle
sub
adc
mulb
in
push
xor
and
push
pusha
push
clc
stos
in
mov
jno
add
sti
in
mov
adc
shr
add
jle
sub
shll
jne
shlb
mov
dec
clc
sub
rcr
ret
test
xchg
inc
incl
call
loopne
es
in
popf
mov
daa
jge
scas
outsb
cmp
incl
xor
pop
xor
icebp
test
push
negb
jmp
lods
or
add
movsb
and
cmp
cmc
and
sahf
mov
scas
pop
dec
jp
outsb
add
mov
into
lret
out
jo
cmp
clc
push
fldl
mov
mov
mov
out
jecxz
jns
hlt
repnz
popa
add
jmp
sub
sbbl
adc
and
sub
repnz
mov
mov
pop
xchg
push
and
ss
lret
popf
mov
jge
mov
sbb
inc
fldl
or
push
arpl
mov
lods
xchg
add
cli
aad
aam
jno
jbe
cmp
inc
jecxz
aas
push
push
outsl
xor
jecxz
sbb
fsubrl
xchg
loop
xchg
jg
cmp
inc
jl
push
mov
adc
mov
xor
mov
shll
adc
or
xor
xchg
add
insl
aaa
mov
inc
cmpsb
incb
inc
inc
jl
dec
jns
mov
xchg
arpl
cltd
rorb
cmp
call
clc
jmp
and
jo
dec
push
andb
jecxz
in
test
sub
jge
mov
loop
jbe
push
pusha
aas
push
dec
add
and
loope
push
mov
add
lods
pop
test
pop
lret
jne
mov
les
push
lahf
sub
fwait
sub
cli
mov
xor
pop
or
sti
sti
lds
and
mov
add
mov
outsl
inc
mov
xchg
es
cli
sahf
cmpb
jmp
out
pop
mov
std
dec
or
mov
outsl
cmp
popl
clc
push
push
incl
cmpsb
mov
add
add
jmp
popa
mov
shll
adc
push
mov
jl
sub
sub
push
xchg
inc
shrb
cmp
jb
test
jmp
adc
ljmp
pop
aam
or
inc
sbb
ret
push
addb
stc
cmpsl
xchg
leave
mov
push
stc
cmp
filds
lahf
lret
mov
push
mov
rolb
jle
jg
pusha
orl
mov
test
dec
pushl
xlat
stos
fdivrl
adc
iret
mov
aad
cmp
into
jge
lret
inc
cmp
scas
imul
int
fucomi
or
sub
xor
scas
push
or
jo
or
mov
cli
cwtl
push
pop
hlt
icebp
mov
push
pop
mov
fwait
inc
or
mull
aas
jp
or
mov
xchg
gs
or
ret
cmp
sub
movsb
aaa
inc
sub
xchg
roll
add
cld
jmp
addr16
jnp
sti
xor
test
sub
mov
jbe
rorb
in
mov
cmp
test
aam
shl
jbe
inc
jle
pop
or
fucomip
dec
iret
jno
mov
jle
cmp
std
aad
hlt
push
ljmp
test
push
subl
adc
pop
in
leave
fucomp
push
int
jle
in
pop
adc
testl
jp
lea
sti
inc
mov
cli
inc
repz
pop
iret
xchg
adc
pop
stos
cld
clc
mov
pop
jecxz
sub
ud0
call
add
cli
js
mov
mov
testb
push
inc
push
add
in
out
das
add
rol
test
mov
or
repz
test
stos
jecxz
dec
inc
sbb
scas
lods
loope
xchg
mov
arpl
ds
gs
jmp
add
test
jns
jecxz
dec
sub
inc
inc
outsl
xor
fsubs
test
ror
cmp
xchg
clc
loopne
enter
imul
mov
xchg
dec
jb
pop
xchg
orb
subl
inc
pushl
mov
mov
rcrb
push
fcomp
xchg
push
cwtl
out
push
jae
clc
scas
sub
aas
sar
mov
mov
stos
iret
dec
xor
pusha
mov
inc
fdiv
inc
pop
loope
insl
mov
and
out
addr16
xchg
xor
ljmp
pop
lock
jp
mov
mov
loopne
testb
out
add
pop
test
and
pop
pop
jno
ret
call
cmp
sub
in
or
mov
jo
fstp
cmp
inc
add
mov
clc
out
push
lods
loopne
int
adcl
cmc
adc
mov
ret
jno
xchg
and
cmp
clc
jle
lock
loope
repz
adc
cmp
add
je
pop
or
js
jb
or
out
xlat
mov
iret
pop
push
in
das
xlat
mov
loope
fnstsw
lret
push
mov
data16
shlb
cmp
mov
stc
out
add
hlt
mov
pop
push
and
pop
sar
lret
mov
push
jg
mov
cmpsb
xor
pop
idiv
push
pop
add
das
cmp
sub
push
lea
jb
add
imul
push
stos
cltd
ret
fwait
sbb
pop
push
andl
xchg
jmp
outsl
clc
xchg
fldcw
sbb
adc
out
push
pop
or
ljmp
xor
ss
mov
aas
jbe
xchg
pop
mov
lock
clc
rcll
gs
push
xor
dec
or
ss
inc
add
lea
nop
fistpll
outsl
cmc
xor
fisttps
arpl
movsl
sub
sub
xorb
lea
loope
mov
mov
clc
mov
aad
lea
push
aaa
push
stc
lret
mov
fstpl
sti
jge
cmpsb
out
sbb
ret
cmp
stos
je
subl
stos
inc
mov
aaa
fcoms
sub
jecxz
mov
push
fadds
std
imul
leave
mov
or
cmp
arpl
pop
js
jbe
test
ror
std
int
push
lock
push
in
xor
aad
inc
rolb
pop
icebp
sti
lea
sub
mov
pop
lods
push
dec
mov
dec
push
jb
cmp
xchg
icebp
add
mov
sbb
insl
jnp
dec
mov
into
push
pavgw
cmp
scas
popf
push
jg
cld
in
or
push
je
daa
iret
pusha
ret
call
cld
lea
mov
dec
inc
push
mov
pop
jo
fldl
jnp
xchg
out
hlt
ret
mov
mov
jl
jae
and
loop
rcll
ret
lods
mov
dec
jb
negl
dec
pop
loope
dec
int
int3
rcrb
popa
or
in
jmp
inc
inc
add
js
mov
loop
sbb
jp
add
out
or
push
add
movsb
mov
and
arpl
fstpt
jno
pop
xchg
fcmovnbe
jne
mov
push
inc
in
shr
imul
int
idivl
mov
outsb
aaa
clc
add
cmpsl
test
cli
shll
mov
mov
insb
sbb
pop
andl
aas
add
stos
cmp
cli
xchg
insl
roll
movsl
inc
sarb
dec
pop
std
cwtl
stc
in
mov
inc
xlat
push
mov
lahf
les
mov
cmp
movsb
inc
xchg
pusha
loopne
cltd
jle
mov
fistps
mov
in
insl
lea
jecxz
xor
xchg
movsb
sarb
mov
outsl
lea
jg
cmc
popa
mov
mov
ja
cmpsb
add
inc
sub
push
cmp
and
cmp
cwtl
lahf
cli
rcr
jmp
dec
sbb
jmp
cmpsb
mov
pop
insb
bound
pop
rcr
adc
push
in
mov
add
dec
jle
cmp
or
and
push
clc
popf
lret
sub
pop
jp
pushf
mov
in
sub
call
push
or
or
out
mov
divb
hlt
test
fldl
pop
adc
sbb
lds
push
daa
stos
xchg
out
dec
aam
sub
mov
rolb
push
pop
cmc
mov
dec
sbb
push
push
ret
pushf
sbbb
cld
pop
out
jecxz
fbld
jno
xchg
in
loop
test
mov
pop
hlt
jge
sbb
or
cmc
fistpll
jge
movsl
icebp
jne
xchg
icebp
std
shl
mov
push
flds
xor
mov
cld
xchg
outsb
aad
out
std
icebp
xchg
jg
pop
add
icebp
cmp
mov
dec
sub
fs
mov
ds
and
mov
call
lea
shr
xchg
push
cmp
cld
das
adc
fiaddl
jno
outsb
jns
pop
adc
mov
jp
pop
loop
push
js
int
test
jle
lret
dec
mov
insb
enter
insl
inc
shll
sbbl
mov
std
in
xor
jl
lea
xor
bound
js
dec
mov
imul
mov
xor
js
in
fucomi
nop
outsl
les
lock
loop
or
mov
jg
or
push
stos
inc
pop
in
pop
int
sbb
roll
movsb
jne
mov
outsl
pushf
cli
push
inc
jmp
adc
cmc
sub
inc
dec
xor
mov
mov
mov
sarl
testl
mov
movsl
inc
jle
orb
shrl
cld
adc
or
inc
repz
add
pop
outsb
pop
repz
mov
cmp
int3
push
mov
jle
jg
mov
cwtl
rcll
pop
in
clc
lea
lret
aad
xor
int
fdivrs
xchg
repz
out
stc
cmc
mov
xchg
clc
jp
adc
rcr
sbb
lock
movsl
leave
lea
je
dec
xchg
sbb
sti
aad
mov
add
fsubrl
cli
jns
jp
shr
mov
xor
pop
dec
sub
jp
in
movb
or
js
jle
ja
test
jae
and
imul
mov
mov
jns
mov
lods
out
inc
jge
jl
mov
cmp
sub
out
mov
pop
int
loop
rcll
fisubrs
popf
pop
fwait
add
mov
cs
cli
test
ss
jle
add
inc
mov
mov
inc
pop
int3
mov
cmp
xchg
xor
lock
cmp
jmp
loope
jge
rorb
test
jae
shr
shl
jno,pn
cmc
mov
into
sbb
cmpsl
inc
mov
nop
addb
pop
lods
shlb
cmc
xchg
ret
shrd
mov
out
aas
or
pop
negb
lahf
nopl
dec
cld
imul
ja
mov
mov
iret
mov
jmp
fcomi
fcom
mov
stc
pop
ret
add
out
pop
sahf
scas
out
inc
cmpsl
xchg
and
cmpsb
jge
fldl
ja
scas
sahf
mov
cld
xor
popf
popf
repz
add
sbb
and
or
adc
push
push
call
js
sub
jmp
js
rorl
sbb
xlat
mov
mov
cli
fs
sti
loope
sar
mov
fsubs
mov
xchg
sbb
test
shrl
in
push
out
cmp
pop
adc
or
fisubs
xchg
mov
adc
bound
mov
jmp
icebp
hlt
xchg
loope
cmp
mov
dec
dec
mov
faddl
jge
mull
pop
fistpll
cmp
addr16
hlt
cmp
cmc
and
punpckhbw
dec
test
push
fldt
es
test
std
sbb
test
mov
sar
mov
arpl
movsb
jl
popa
push
rolb
pop
cmpsl
decl
push
arpl
xorl
sbb
or
cmp
addr16
mov
ret
lahf
xor
jg
inc
cmp
xchg
inc
pop
jns
js
mov
bound
and
lock
int
add
push
xor
mov
loope
add
in
cs
stc
out
das
adc
sbb
int
pop
jl
mov
jmp
fwait
in
data16
mov
outsl
ss
scas
add
inc
adc
jle
mov
dec
pop
imull
test
pop
mov
clc
mov
aam
sub
rol
aas
ret
cmp
lea
iret
sub
and
out
pop
sbb
lcall
loope
jno
xor
jle
pop
push
cltd
popa
sbb
sbb
loop
xchg
aad
add
lret
jno
inc
cwtl
xor
add
sbb
daa
mov
dec
jle
sahf
ja
mov
icebp
sub
insl
push
stc
imul
enter
hlt
push
ja
mulb
mov
cmp
cwtl
pushf
jle
ret
fs
mov
add
add
and
mov
in
mov
sbb
in
shlb
scas
xchg
mov
mov
aas
sub
shr
push
ss
out
add
add
bound
jnp
fldl
or
dec
ss
mov
or
rolb
mov
mov
ja
adc
in
mov
jne
push
rcl
mov
add
pop
mov
adc
mov
into
aad
rol
roll
outsl
mov
lods
jmp
js
add
nop
pop
jo
jle
lock
add
jg
or
inc
add
xchg
mov
or
add
cmp
cltd
add
mov
lods
xor
mov
sti
ds
jp
and
les
pusha
dec
fnstsw
add
push
test
add
in
lahf
iret
sbb
dec
add
cltd
sub
mov
mov
cli
inc
inc
lds
jne
mov
sub
aam
test
xor
and
sub
arpl
jae
or
add
pop
idivl
xor
ljmp
mov
add
push
add
inc
pop
dec
int
scas
mov
cmpsb
sub
test
or
dec
jecxz
paddsw
xchg
scas
jmp
push
sbb
pusha
mov
sbb
and
fwait
lods
pushf
jb
iret
clc
mov
dec
xchg
mov
ret
push
pop
popl
cmp
mov
in
and
imul
daa
decb
jbe
sub
lea
push
add
pushf
inc
roll
inc
pop
aaa
mov
insl
test
adc
rcrb
jle
push
in
mov
test
mov
jo
fisubl
cmp
lock
adc
push
dec
loope
sub
push
mov
add
push
les
xor
jp
and
ss
filds
lea
mov
repz
jg
into
add
cmp
pop
xchg
adcl
mov
mov
fdivr
jle
out
gs
xchg
jp
test
out
adc
lret
mov
es
jle
mov
shlb
enter
and
addl
pop
roll
movsb
adc
rcll
in
lods
add
icebp
jb
js
jg
jbe
outsl
mov
mov
ret
adc
fldl
add
mov
decl
inc
in
pusha
loopne
pop
jle
addr16
inc
mov
rcll
cltd
mov
fists
bsr
xchg
inc
jp
shr
jnp
pop
mov
cli
lods
dec
test
jo
call
mov
fwait
pop
andl
fstps
jmp
push
inc
outsl
shll
jo
jge
stc
xor
xor
xlat
and
int
stos
fiaddl
sahf
and
and
pop
or
jmp
mov
xor
fiaddl
mov
sbb
cmp
lea
jmp
jo
add
mov
or
cmp
cmc
in
jl
fs
jmp
lret
mov
pop
mov
sub
mov
cld
aad
in
pop
ja
loope
mov
xchg
lods
and
mov
xchg
pop
mov
int
push
pusha
roll
ret
shrl
lock
xlat
push
push
pop
jmp
dec
outsl
rcrl
lahf
jg
movsb
fxtract
sbb
loope
lret
cmp
lcall
push
enter
divl
add
xchg
pushf
shll
jl
les
inc
lahf
dec
outsl
push
mov
mov
fsubrp
or
and
jno
in
mov
cmc
fistpll
test
and
push
jb
jecxz
call
shll
jmp
mov
std
out
push
xchg
subb
mov
xchg
mov
out
inc
jne
cmp
cmp
adc
call
mov
mov
shl
pop
les
icebp
fcoms
icebp
subb
xor
push
xchg
imul
jecxz
pop
mov
mov
bound
cmc
fildll
jmp
cld
mov
nop
cmc
mov
andl
jmp
nop
ds
test
cmp
std
cmc
inc
cmp
fs
leave
dec
jle
and
mov
or
loope
sahf
mov
or
loope
aam
mov
or
out
test
scas
xorb
sti
adc
add
sub
sub
mov
mov
imul
mov
or
shlb
dec
ret
popf
repz
adc
cltd
cmp
push
addb
jmp
pop
adc
mov
add
popa
sbbl
or
mov
fnsave
loop
outsl
cmp
cmpl
scas
out
movsl
sbb
repz
fs
mov
lods
std
sahf
out
add
aaa
rorl
std
leave
cmpsl
outsl
sbb
inc
andb
or
mov
mov
leave
dec
push
cltd
call
mov
cmpsl
iret
mov
pop
xchg
xchg
and
mov
pop
add
std
icebp
jecxz
rcl
jne
xchg
push
xchg
icebp
xlat
cmp
xor
call
dec
jge
test
std
fildll
mov
icebp
repnz
or
gs
cmp
add
dec
cs
insl
stc
xor
jno
xlat
out
xchg
jmp
popa
stc
out
xchg
jmp
push
in
fwait
mov
and
mov
mov
or
mov
test
jne
xorb
sti
lock
dec
js
and
mov
add
jmp
fucomi
stc
aaa
jge
outsb
cwtl
or
mov
aad
gs
sub
bnd
and
test
sbb
xchg
subl
lea
in
aaa
imulb
int
rorb
push
inc
inc
mov
mov
lret
mov
jbe
pop
fstl
adc
or
stos
or
or
lods
jbe
cwtl
sbb
in
clc
lds
fisttps
xor
mov
mov
aam
js
push
mov
sti
movsb
jns
and
mov
ret
mov
jne
repz
je
insl
sarb
repz
xor
pop
imul
aas
push
cmc
or
jb
lcall
shrl
xlat
mov
inc
fs
fistpll
cmpsl
adc
mov
dec
pop
cmpsb
rcrl
mov
sbb
dec
mov
leave
and
sub
mov
arpl
in
loopne
and
enter
xor
mov
dec
js
add
repnz
fld
sub
hlt
jmp
out
mov
xchg
sub
mov
inc
mov
jmp
jb
mov
jbe
and
ss
xchg
out
mov
inc
aad
inc
jae
add
inc
fadds
int3
pop
jp
and
sub
cli
xlat
add
aaa
ret
jae
rcl
jg
dec
std
mov
xchg
jmp
mov
mov
addb
test
cmp
pop
into
popf
mov
add
xchg
fisubl
ds
cmp
push
test
xchg
add
je
jp
push
cmc
loope
outsl
adc
dec
loop
sbb
lea
in
mov
fistpl
popf
xchg
les
arpl
rcrb
mov
decb
cmpsb
add
push
or
cmc
and
pop
fidivrl
in
dec
add
push
add
dec
xchg
shll
imul
and
mulb
jo
pop
rcrb
mov
adc
loop
jns
fidivrs
scas
mov
lds
jb
or
loope
inc
jnp
push
movsb
xchg
add
scas
addr16
repz
cld
jb
sbb
adc
push
adc
or
scas
notb
dec
gs
fadds
lret
sti
icebp
inc
mov
mov
loope
and
sbb
insl
loope
jmp
rcll
sub
popf
aaa
test
ss
popa
lahf
adc
xchg
adc
bound
sarl
jp
and
mov
jb
cmpsl
push
leave
or
in
test
mov
xchg
dec
jo
mov
loopne
jb
das
lahf
xchg
shrl
xchg
sub
mov
xor
add
lahf
ret
lret
xlat
add
jle
sti
jl
add
loop
mov
fcoms
filds
and
sub
dec
inc
cli
nop
inc
push
add
pusha
mov
rolb
test
lock
cmp
cmpsl
add
push
jae
clc
dec
dec
xchg
pop
jle
inc
push
cli
pop
cltd
ret
ret
add
xor
mov
dec
scas
movsl
or
adc
sbb
xchg
xor
addl
xchg
rcll
cs
add
add
lods
jecxz
jle
mov
out
push
mov
popa
insl
faddl
pop
in
and
jae
push
add
das
xchg
push
xchg
pop
js
loope
add
inc
cmp
subb
and
mov
and
cld
jg
pop
cmp
in
in
add
lea
or
sbb
pop
in
or
adc
fldl
add
rclb
fisttps
roll
sahf
sbb
sbb
xchg
daa
jae
insl
clc
xor
jbe
xchg
pop
add
jb
mov
cmpb
rcl
imul
and
sub
sub
mov
pop
fwait
add
push
scas
jo
fimuls
out
jmp
mov
jecxz
cmp
push
jecxz
xor
jge
add
hlt
movsl
fidivrl
movsb
xor
add
arpl
daa
jle
out
sti
movsl
fnstcw
xchg
iret
push
jecxz
addl
jne
add
bndldx
mov
inc
dec
mov
or
add
mov
or
idivl
movsl
jl
jl
adc
dec
shrd
and
in
leave
imul
add
pop
montmul
cmpsb
inc
adc
and
sub
xor
clc
repz
add
lret
mov
addl
jecxz
roll
push
clc
mov
pop
js
stos
push
add
scas
add
pop
lea
lods
sub
xchg
xchg
pop
cwtl
mov
add
cmp
int3
push
loope
mov
add
stc
cmp
stos
or
lods
insl
mov
test
adc
sbb
rcrb
cld
mov
mov
stc
ret
push
fxam
sub
fs
add
in
rorb
xchg
es
add
mov
mov
shrl
add
dec
mov
lcall
push
loop
add
outsl
or
bound
rorl
xchg
movsl
adc
lret
pop
add
push
mov
add
into
lods
jle
insl
fstpt
inc
stos
fldl
ljmp
mov
push
pop
mov
pop
jle
test
dec
mov
cmp
xor
sub
inc
test
mov
lret
and
add
jl
add
stos
js
adc
popa
sub
inc
fisubl
jle
push
dec
hlt
shll
imul
dec
icebp
xchg
daa
add
stos
jge
imul
and
stc
sub
mov
idivb
lds
cld
inc
inc
ds
cwtl
or
and
rcll
add
inc
addr16
adc
repz
jmp
xor
push
mov
mov
repz
lods
mov
pop
repz
fadds
mov
pop
pop
cltd
pop
jl
mov
sbb
es
push
sub
roll
into
sub
rcrb
xor
pusha
or
cmp
add
cltd
push
jbe
popf
push
or
pop
addb
dec
adcl
sub
movsb
shrl
or
addr16
push
dec
jb
test
insb
add
xor
jne
decl
or
sub
lea
adc
push
cltd
roll
xchg
add
in
outsb
dec
xchg
addr16
ss
movsl
rcll
mov
add
fwait
adc
sub
xchg
fs
xchg
add
stos
dec
mov
or
fiaddl
rorb
push
add
ljmp
jmp
bound
std
enter
dec
arpl
sbb
subl
je
inc
sub
loop
call
push
pop
pushf
in
fldl
inc
push
nop
jecxz
cmpsl
aad
out
leave
outsb
hlt
add
sbb
jle
or
jae
stc
pop
imul
or
sbbl
jmp
sub
add
and
fstpl
adc
sarl
das
jecxz
lahf
mov
incl
pop
scas
sub
lret
xchg
jae
add
lahf
xor
lds
xchg
jnp
shlb
dec
into
jge
add
mov
jg
inc
add
repnz
push
fimuls
pop
jl
push
xchg
roll
lret
sbbl
lea
rorl
out
mov
add
sub
pop
jge
sub
sahf
inc
dec
mov
jmp
jb
shl
pop
leave
cli
jl
aaa
mov
daa
aad
cmp
in
mov
pop
xchg
and
xchg
cwtl
jge
cmp
mov
sbb
inc
je
push
shlb
jle
out
inc
or
fldcw
xor
arpl
xchg
shll
mov
in
mov
mov
cmpsb
mov
lock
pop
xchg
nop
loope
cmp
stos
dec
mov
adcl
lods
push
repnz
dec
testb
add
sbb
mov
repnz
cmpsl
add
sub
imul
push
inc
mov
ror
insb
jp
out
fwait
test
jp
mov
inc
test
add
and
jl
icebp
sub
sarl
xchg
lret
add
mov
xchg
pop
jbe
test
movsl
push
or
mov
shll
mov
and
dec
and
inc
push
sub
mov
repz
outsl
xchg
lods
shr
mov
pop
jle
jmp
les
into
dec
cmp
inc
xchg
ret
mov
cli
stos
out
jns
jl
test
ss
lea
daa
or
add
mov
and
xchg
nop
or
jne
rcl
and
xchg
xlat
or
lea
mov
cmp
ret
dec
jbe
sti
shl
adc
xchg
mov
lea
jmp
sti
inc
lahf
sbb
rep
mov
mov
cs
mov
mov
movsl
and
loopne
xor
adc
mov
insl
rcll
mov
lea
in
fsub
pop
mov
es
mov
mov
jp
push
aas
cwtl
sbb
xorl
jns
mov
cmp
sub
mov
cmp
or
pusha
popf
cmpsl
sbb
dec
jnp
adc
daa
lods
cmpsl
xchg
xor
jnp
pop
das
aaa
mov
stc
mov
sbb
aam
movsb
out
pop
add
jnp
adc
in
cmp
and
adc
int
std
in
sbb
push
stos
xchg
or
and
scas
push
fstpl
cmp
mov
and
pop
pop
stos
jbe
ret
adc
pushf
adc
lea
mov
sub
push
fwait
mov
cmp
inc
daa
int3
cltd
mov
shlb
and
sub
mov
int
mov
call
add
lock
outsl
repz
insl
inc
cmp
popf
mov
mov
repz
or
sti
and
stos
pop
sub
and
mov
iret
shlb
aaa
dec
fldcw
dec
clc
rep
adc
jmp
cmp
fdivrl
outsl
inc
or
popa
mov
inc
add
loopne
xor
jg
mov
dec
jae
pop
ds
xor
mov
lea
clc
sbb
pop
adc
xor
or
sbb
add
push
cmp
icebp
aas
lods
cmp
in
jl
xchg
cld
mov
fimuls
cli
jecxz
int
in
add
pmaxub
inc
jmp
mov
fmull
loop
cmp
jnp
stc
pushf
pop
divl
mov
in
out
int
inc
clc
cli
pop
cmp
pop
mov
xor
rcrb
frstor
jg
ficoms
dec
loope
into
mov
aam
cmpsb
sahf
aad
shrb
in
mov
pop
or
mov
divl
loop
in
test
cltd
add
incl
or
mov
loope
shr
add
mov
aaa
rolb
cs
cli
xchg
cmc
notl
push
xchg
adc
out
jg
filds
and
leave
xchg
add
subl
test
cmp
add
sti
lcall
inc
pop
add
mov
and
pop
int
jnp
sbb
add
xor
mov
dec
cs
arpl
mov
cli
inc
shl
xchg
lods
shl
xchg
test
addb
xor
and
jae
or
popf
adc
fadd
push
icebp
mov
dec
add
pop
lcall
hlt
sub
push
jge
jnp
stos
sub
push
sbb
enter
mov
jp
js,pt
mov
repz
pop
dec
sub
dec
lcall
cmp
fsubs
test
sbb
xor
movsb
push
cli
shrb
lret
and
dec
xlat
mov
sbbb
inc
frndint
mov
dec
roll
ret
add
mov
add
int3
je
fmul
inc
add
jge
xor
mov
push
loope
push
aaa
rcrb
test
pop
sbb
aas
stc
shl
inc
mov
daa
xchg
vmwrite
pop
in
add
ret
ljmp
es
lea
fcoms
add
mov
ret
jb
add
in
mov
mov
inc
or
andl
sub
aam
imul
in
scas
mov
inc
mov
jmp
push
inc
jno
ds
addr16
dec
dec
xor
inc
cltd
imul
loop
xchg
jge
sarb
jle
add
add
mov
lret
xor
addl
jae
and
out
jle
dec
lods
inc
pop
add
inc
in
jg
add
cmpsl
sbb
scas
jp
jp
inc
aam
pop
repz
mov
inc
mov
sbb
pop
std
cli
jmp
in
jo
pop
rorl
daa
inc
and
popl
leave
dec
mov
mov
cmpsl
push
mov
jmp
mov
lret
sub
fwait
outsl
std
sarl
repnz
mov
in
pop
add
lods
jl
push
shl
nop
addl
vmread
add
in
inc
in
scas
dec
jmp
mov
jb
roll
inc
mov
push
movsb
fldenv
arpl
lds
mov
sub
jne
add
xchg
mov
mov
rcll
stc
scas
lods
roll
xor
sub
mov
pusha
mov
fs
inc
rcrb
fwait
dec
sbb
mov
jp
dec
push
mov
push
jo
jae
mov
mov
outsb
cmp
cli
repz
mov
adc
sti
icebp
xor
repnz
xchg
adc
sub
ret
add
pop
in
clc
and
pop
pop
add
push
sbb
add
stos
jecxz
jp
pop
fisttpll
pop
testl
ss
add
sbb
sub
mov
fiaddl
or
cmp
add
lcall
add
lea
push
add
jbe
int3
les
fildl
mov
or
sbb
and
jb
push
jg
and
fiadds
mov
mov
outsb
xchg
faddl
movsl
addl
push
popf
sub
jle
mov
inc
cmp
test
and
lea
adc
xchg
in
add
pop
in
addb
xchg
add
or
add
push
cwtl
outsb
cmp
rolb
mov
push
sahf
jb
mov
xchg
mov
out
daa
jecxz
cmp
push
shlb
cmc
xor
int
aas
mov
repnz
xlat
pop
dec
sub
mov
mov
xchg
xor
fs
fisttpl
sub
insb
or
pushf
mov
cmp
or
pop
ds
mov
outsb
hlt
inc
cmpsl
push
xchg
push
xchg
sbb
sub
test
fsubrl
iret
cmpsb
and
add
push
xchg
out
inc
mov
jae
dec
sub
test
and
xor
cmp
int3
test
mov
ljmp
insl
imul
and
stc
dec
ljmp
push
stos
add
adc
lea
xor
jmp
repz
xor
mov
lock
push
jp
cmp
and
adc
aad
lds
mov
jle
xor
dec
addb
out
push
push
in
adc
add
sbb
stos
sbb
insl
stc
sub
jbe
xor
push
and
and
xchg
stc
cltd
xchg
and
fbstp
rcl
sub
mulb
cmp
add
rcll
xchg
lahf
and
es
fistl
leave
sub
cmpb
xor
inc
out
inc
cs
dec
paddusw
outsl
iret
jecxz
or
rorl
inc
rcll
and
shl
rolb
sbb
jae
cli
es
int
and
xchg
adc
lock
out
out
add
sarl
leave
jecxz
das
inc
add
js
dec
add
mov
push
lock
or
add
sbb
arpl
out
cli
add
cmpl
adc
xchg
ja
push
sub
faddl
jmp
out
or
add
add
inc
pop
add
arpl
add
adc
aad
jae
fsub
in
test
or
push
add
ret
add
addr16
orb
bound
mov
inc
bnd
jecxz
clc
add
dec
jecxz
pushf
das
add
push
and
ss
out
push
cmp
add
xchg
jmp
lods
ss
scas
add
jg
clc
mov
daa
mov
mov
xchg
popa
addb
leave
push
sbb
mov
mov
add
inc
mov
ds
inc
les
mov
loope
inc
mov
rolb
mov
add
push
and
xchg
jecxz
add
cmp
repnz
cld
imul
mov
rorb
xor
nop
sgdtl
lods
or
dec
pushf
stos
jle
mov
xor
xchg
xor
popa
xchg
testb
lea
push
arpl
lret
std
add
fwait
mov
mov
mov
or
ja
lea
andb
notl
sbb
adc
sbb
jno
push
xchg
add
repz
mov
cmp
mov
inc
out
fists
test
inc
mov
xchg
xchg
pop
rorl
test
imul
dec
xchg
cs
ret
mov
flds
popf
xchg
cmp
fidivs
clc
pusha
xchg
sbb
cmp
lds
addb
xor
scas
mov
lods
add
test
jp
or
add
cmc
mov
data16
xchg
jne
sbb
aad
test
and
mov
add
jp
mov
stos
push
stc
push
out
pop
xchg
fxch
aaa
adcl
negb
dec
push
in
dec
and
add
cmp
cli
sbb
mov
and
add
imul
fld
sti
cmpl
repnz
repz
fstl
push
out
lock
inc
dec
fdivrs
mov
ret
sub
add
dec
nop
xchg
stos
loop
xchg
and
mov
pop
jl
adc
mov
shl
in
rorl
jmp
cmp
outsl
jno
int
sahf
xor
mov
subl
add
pop
arpl
leave
js
addb
icebp
ds
cmp
mov
andl
fidivrl
push
jp
pop
ja
xchg
fstps
rorb
into
mov
divb
mov
enter
cmp
mov
push
int3
rcr
or
fs
push
xchg
fstl
add
sbb
out
fnstcw
xchg
push
sub
lahf
mov
push
cmp
add
inc
mov
jno
movsl
add
mov
mov
push
shll
sbb
or
sbb
cwtl
jle
pop
and
shrb
paddd
loope
mov
adc
add
add
insl
addr16
out
add
add
xchg
add
ds
ret
push
das
sarl
dec
xchg
jae
out
add
clc
jle
xor
stos
jnp
dec
mov
scas
mov
add
mov
adc
or
ljmp
sub
cmp
fbstp
add
popa
jg
and
popf
or
cltd
insb
loopne
push
jecxz
and
mov
xlat
add
repz
jp
repz
sub
mov
in
add
push
cmc
aad
shrl
mov
and
aaa
mov
stc
xor
icebp
jo
subl
subb
aad
dec
leave
add
addl
push
mov
mov
or
out
popa
in
mov
dec
lods
add
ds
scas
add
aam
inc
add
push
hlt
cmp
cmp
dec
adc
add
fwait
push
call
pop
insl
jno
ljmp
pop
jecxz
mov
mov
lock
call
ret
lea
add
push
cli
mov
jle
lret
enter
mov
mov
imul
inc
stc
add
fimull
xchg
mul
mov
roll
sbb
imulb
and
inc
ss
leave
in
adcb
loopne
shll
popa
xlat
mov
lea
aad
ljmp
pop
iret
loope
sub
pop
or
jne
test
adc
or
cmp
jle
push
xor
mov
fstl
cmp
pushf
xchg
out
out
leave
jg
arpl
adcb
xchg
cld
js
jmp
in
or
mov
mov
xor
push
sti
pop
cmpsb
jle
dec
xchg
add
outsl
inc
xchg
aaa
dec
dec
xchg
stos
add
cmp
test
fsubrs
and
sub
mov
testl
adc
lea
icebp
mov
mov
add
cmpsl
jns
mov
add
inc
sbb
pop
pusha
add
jge
icebp
xchg
adc
mov
dec
or
xchg
iret
lds
outsb
fildl
lcall
enter
jns
add
fisttpl
xchg
xor
mov
pop
leave
adc
push
mov
das
aad
cmp
pop
cltd
clc
mov
add
mov
adc
xor
jne
xor
aad
fmuls
sti
rcr
or
push
mov
push
cmp
dec
jp
fimuls
imul
push
xchg
icebp
pop
mov
pop
push
cmp
push
fimuls
xchg
sbb
enter
pusha
push
addl
mov
data16
int
lods
cld
xor
ja
or
mulb
lods
clc
jecxz
pop
nop
xchg
add
stc
inc
lea
sbb
dec
loopne
loope
das
lods
mov
mov
and
pop
ljmp
les
cmp
sahf
mov
clc
xor
or
inc
xchg
iret
push
lods
pop
and
lods
jno
lea
dec
and
addr16
fstpl
jbe
es
mov
xchg
inc
sbb
mov
push
mov
dec
rcll
cmp
popf
in
inc
fsub
popf
fdivrl
pop
icebp
or
iret
imul
push
push
outsb
aam
cmpl
jmp
xlat
mov
notl
push
imul
mov
mov
mov
jnp
sahf
enter
shrl
mov
sub
pop
lods
cltd
loopne
dec
push
ficoml
and
lea
lret
pusha
xlat
cs
push
and
cmp
dec
and
aad
fcmovu
scas
inc
fs
scas
jo
idivl
cwtl
ss
outsb
fisttpll
es
fs
push
ja
lea
or
imul
pop
fstl
mov
fstpl
cmp
adcl
loopne
inc
xor
cwtl
in
push
jecxz
outsb
mov
push
mov
sbb
pop
push
ret
cmp
ror
dec
outsl
pop
pop
mov
mov
xchg
sub
pusha
fdiv
nop
sub
in
fnstcw
cld
pop
add
cli
inc
bnd
lea
mov
mov
cld
and
add
inc
cld
xlat
cmp
les
mov
sub
call
cltd
jp
add
add
xlat
aaa
mov
insb
or
test
cmp
mov
ds
ret
pop
lods
js
aaa
and
and
xchg
jg
out
mov
call
lea
rorl
mov
incl
lret
bound
jge
roll
loope
inc
cli
mov
addr16
mov
mov
fcmovnb
or
mov
icebp
mov
add
dec
loope
inc
xor
sahf
or
ljmp
add
jbe,pn
out
pushf
mov
jp
inc
mov
or
nop
xchg
dec
fdivs
xchg
jno
mov
notb
mov
mov
or
add
adc
mov
add
ds
test
cwtl
add
jbe
fisubrs
mov
mov
jnp
push
xchg
std
roll
loopne
add
fidivl
cmp
inc
and
pop
cli
out
enter
pop
fwait
decl
cwtl
insb
add
mov
mov
jle
jns
repz
jb
xchg
jns
rcrl
stos
scas
dec
dec
out
adc
lds
test
xchg
rcll
shrb
mov
mov
ret
iret
pop
sahf
jb
mov
pop
incl
pop
xor
jle
stc
pop
pop
xchg
jae
leave
loope
cmpl
xlat
pop
rcll
mov
movsl
imul
or
inc
orb
cmpsl
xchg
loope
stos
xlat
pop
in
jns
rol
and
pop
clc
jae
leave
mov
jne
loope
jbe
iret
imul
dec
pop
xchg
jp
lahf
adc
adcl
lret
jbe
add
cltd
dec
dec
pop
fadd
loope
jno
fiaddl
xchg
rcr
jbe
adc
mov
mov
xor
sub
in
into
xchg
or
addr16
pop
fsubs
call
stc
repnz
pop
mov
fadds
cmpsl
push
mov
cmp
inc
lock
test
jle
push
jbe
js
mov
sub
fwait
arpl
test
inc
xor
sti
icebp
loope
or
jo
ja
cmp
mov
and
stos
mov
xchg
mov
mov
daa
mov
sahf
lods
jmp
add
adc
ds
mov
cld
mov
je
adc
jno
jns
addb
jbe
jns
and
jne
add
arpl
dec
xchg
push
aad
popf
nop
icebp
sbb
add
jnp
add
lcall
fisubrs
lods
lahf
addr16
js
cmp
pop
icebp
movsl
mov
add
cmpsl
ja
add
roll
pop
popf
fwait
ljmp
cmp
inc
std
sub
outsb
jmp
out
inc
add
pop
jnp
lcall
mov
andl
dec
lahf
fcmovb
stc
sbbb
std
notb
mov
gs
ds
mov
leave
add
jmp
add
lret
sub
ret
cli
ficompl
push
sbb
ljmp
addl
icebp
out
adc
xchg
jg
xchg
lock
sti
mov
xchg
sti
fs
mov
or
jp
xorb
fimuls
xor
add
pop
mov
mov
cmp
xchg
jns
fldt
adc
popa
inc
mov
inc
pop
sarl
xchg
into
int
lcall
jg
sub
cmp
mov
enter
lods
hlt
add
in
mov
arpl
imul
nop
inc
push
mov
lret
decl
les
les
addl
mov
and
out
insl
xlat
add
jae
cmp
popf
pop
adc
jg
rcll
cld
or
and
ja
mov
sub
add
ss
pop
add
aad
aaa
push
popa
cltd
xchg
rorb
loope
dec
mov
dec
inc
test
push
jg
add
cs
shll
fsub
shr
pop
adc
lock
pop
push
shlb
incb
sbbb
cmp
push
fisttpll
cmp
dec
sub
mov
pusha
push
xchg
mov
mov
xor
mov
adc
dec
sbb
mov
cld
pop
sbb
mov
je
out
loope
xchg
jns
add
and
lret
icebp
movsl
cwtl
add
lcall
clc
sti
cmp
mov
ljmp
push
add
int
add
pusha
data16
mov
jp
sbb
sub
call
or
jae
test
jmp
inc
pop
pop
lret
andl
test
jno
in
movsb
sbb
xor
scas
add
adc
mov
pusha
xlat
xor
stos
inc
loop
std
pushf
clc
add
inc
divl
ror
add
sub
push
xorb
lea
popa
xorl
orl
int
nop
daa
mov
xchg
fidivrl
sbb
add
pop
enter
lret
add
icebp
sbb
add
push
in
mov
push
in
mov
call
fidivrl
int
cmp
repnz
popf
xor
pop
jae
fidivrl
repnz
and
popa
pop
mov
mov
shll
cld
std
mov
xor
add
adc
jmp
mov
jo
aam
icebp
mov
fdivr
pop
pop
cwtl
imul
xchg
js
add
loope
ljmp
cs
pop
mov
sbbl
hlt
adc
outsl
or
jns
jae
repnz
clc
dec
scas
dec
std
leave
mov
push
mov
add
and
mov
sbb
push
in
iret
jne
mov
add
adc
inc
xchg
lock
xorb
add
pop
scas
push
add
ss
pop
add
pop
out
dec
shr
movsl
or
iret
xchg
mov
add
mov
std
sub
call
stc
addr16
insb
ffree
clc
in
add
pop
mov
xchg
xchg
mov
rcrl
add
loopne
fs
dec
jmp
orb
pop
clc
add
pusha
popf
xor
xor
outsl
adcb
icebp
clc
push
jle
xor
cmpsl
mov
jbe
fdivl
jle
add
in
or
pop
out
cmp
push
pushfw
mov
loope
jle
lea
out
loop
call
add
dec
daa
jmp
ss
jp
lret
scas
add
jne
clc
xchg
lcall
push
gs
adc
repnz
enter
jle
cs
std
mov
jo
popa
add
psllq
xchg
in
lcall
mov
test
out
adc
sbb
cmp
out
sbb
add
lcall
arpl
fdivl
push
repz
sub
adc
out
js
push
arpl
push
stos
jbe
popa
lcall
cltd
orl
shl
mov
lcall
xchg
in
add
add
xchg
sbbl
jge
cmpb
in
cmp
jb
mov
ds
push
mov
jl
sbb
add
fbld
xchg
icebp
clc
jo
je
js,pt
push
xor
out
push
lahf
test
xchg
js
pop
push
pop
ret
add
pushf
ret
mov
inc
call
add
cli
pusha
xchg
sbb
add
mov
sub
inc
enter
out
add
or
cmp
jbe
repnz
imul
add
mov
clc
jb
lock
pop
bound
xchg
xchg
testl
mov
add
add
outsb
xchg
enter
std
popf
cmpsl
test
std
dec
clc
ja
or
pusha
stos
xchg
loop
jne
out
mov
rorl
inc
dec
jle
les
inc
push
xchg
add
cmp
scas
add
xor
pop
lods
dec
lock
sub
sub
in
in
mov
rcr
into
fstl
pop
loope
ja
arpl
jle
sub
mov
fdivl
add
mov
addb
clc
es
jbe
ss
add
jno
movsb
mov
add
sub
push
mov
stc
xlat
mov
fs
mov
add
ret
push
jno
adc
push
pop
xchg
add
mov
or
jmp
sub
fbld
shr
clc
push
mov
data16
cmp
mov
scas
ror
out
add
imul
dec
jns
inc
repnz
adc
jge
mov
mov
clc
add
inc
add
add
xchg
lcall
fstps
pop
scas
cmp
jno
dec
popf
sub
pop
cmpsl
fcoml
sub
repz
enter
xor
mov
dec
cmp
sbb
fiadds
out
pop
shll
add
or
lcall
inc
xchg
push
aad
js
aas
inc
sub
xor
stc
leave
add
xchg
xlat
push
loopne
out
mov
xchg
jecxz
movsl
mov
add
loope
lods
push
call
cmp
fldl
add
fdivp
xchg
mov
xor
mov
pop
mov
push
xlat
pop
mov
inc
stc
jmp
ja
fsubl
loope
iret
icebp
mov
mov
dec
int
icebp
ficomps
add
orb
int3
ret
ja
out
add
aam
jle
jo
mov
mov
inc
mov
pop
mov
adc
stos
hlt
dec
jle
sarl
pop
adc
sub
inc
shr
sub
add
and
xorl
push
hlt
pushf
in
fistl
stos
xor
mov
add
jbe
out
dec
add
pop
aad
sbb
mov
fiaddl
pusha
pop
shlb
xor
add
mov
add
nop
cmpsb
pop
add
cmp
daa
xor
jle
cmp
lcall
ror
out
xchg
stc
mov
mov
push
mov
mov
xlat
add
mov
aad
out
out
nop
pop
jo
test
cmc
lret
add
fdivr
mov
pop
add
outsb
add
ret
lahf
std
push
and
jb
repz
mov
mov
sub
imul
sub
lret
hlt
mov
std
jle
pop
mov
or
xchg
add
ljmp
sbb
or
push
jp
std
lds
sbbl
mov
sub
bnd
cltd
inc
adc
dec
xchg
jmp
jmp
mov
push
cmpl
lcall
popa
test
lds
imul
mov
lret
test
add
loope
pop
std
push
pop
aaa
iret
add
mov
add
jno
pop
mov
cmc
sbb
push
xor
inc
or
loope
push
fst
enter
shrb
clc
push
adc
adc
sub
in
icebp
mov
test
fs
adc
lods
cmpb
data16
arpl
inc
xor
orb
mov
add
jnp
mov
rep
mov
iret
and
imul
in
adc
test
test
jp
push
mov
out
popf
dec
addr16
arpl
sub
in
jno
jmp
enter
rep
addr16
mov
out
pop
imul
out
popf
cmpsl
in
push
jo
loop
lds
orl
enter
mov
ds
cmp
bound
icebp
jnp
jmp
jno
aaa
call
arpl
push
ds
in
bound
idivl
push
in
mov
jecxz
insb
in
icebp
shll
cli
fs
push
fstl
imul
ffree
or
cli
imul
in
mov
loop
bound
pop
clc
mov
ficoml
movsl
gs
cli
cmp
xor
repz
in
stc
push
imul
dec
add
jecxz
in
in
mov
mov
loop
bound
mov
jle
call
mov
sbb
or
sbb
fs
arpl
jno
loop
popf
int3
enter
leave
jns
cli
popa
jmp
cli
sti
data16
out
in
gs
in
cli
arpl
xchg
jmp
inc
push
loop
or
and
test
cmp
mov
xor
call
scas
in
popf
dec
bound
cmpsl
mov
repz
jo
data16
sahf
adc
into
mov
out
std
fwait
loope
imul
mov
inc
pushf
jno
arpl
loop
pushf
das
mov
push
data16
scas
movsb
xor
aad
aam
dec
mov
in
fs
je
sbb
jp
sbb
add
out
icebp
xor
aaa
fs
lret
lock
jmp
movsl
js
js
jmp
dec
fld1
dec
sahf
lea
push
add
and
popl
cmp
mov
test
bound
jmp
inc
imul
pop
cs
out
pusha
mov
mull
ds
lods
pop
jno
arpl
mov
xchg
repz
addl
lds
popf
out
enter
repz
int
es
mov
mov
add
cli
call
sub
fs
jecxz
out
repnz
loope
js
jge
call
icebp
mov
popf
jle
test
fsts
xchg
in
fs
mov
sarl
xchg
mov
in
test
call
shl
ffreep
xlat
jmp
push
rcrl
out
mov
out
imul
data16
out
inc
mov
cli
gs
adc
orl
adc
mov
imul
cmpl
lret
mov
mov
cmp
rep
out
xor
outsl
test
mov
mov
mov
adc
in
out
movsb
add
out
bound
test
shrl
adcl
pop
rol
jmp
scas
xchg
add
mov
xchg
fwait
and
mov
inc
fbstp
mov
xchg
sbbl
cmc
and
push
fcmovnb
or
ss
mov
or
rcl
into
ja
nopl
add
aaa
mov
pop
lock
xchg
and
add
out
jg
or
or
sbb
inc
mov
or
mov
or
in
imul
cmp
push
out
xor
adc
jnp
cltd
movsl
mov
jmp
iret
jmp
xchg
decl
aam
ret
rcl
jl
dec
imul
jl
adcb
dec
add
je
fstps
fidivrs
jg
cmp
and
decb
arpl
fisubs
mov
jae
add
aaa
dec
inc
add
nop
rcl
fwait
data16
cmp
test
sbb
mov
lahf
shlb
call
outsb
sahf
stos
icebp
int3
sahf
cmp
cmp
int3
pop
mov
je
es
xlat
lea
add
fidivl
fisubs
pop
push
stc
lcall
sbb
fs
jmp
push
jmp
jmp
push
stos
pusha
pushf
push
lea
jmp
ret
mov
lock
cwtl
mov
xchg
aas
mov
xlat
jecxz
inc
add
cltd
loopne
loopne
mov
rolb
xor
xchg
pop
sarb
insb
jns
pop
stos
test
sub
or
pop
xlat
shll
inc
push
cmp
and
leave
mov
dec
dec
inc
ja
pop
fidivrl
and
sbb
gs
mov
dec
xchg
mov
lret
pop
jbe
rclb
jo
jp
out
xor
sbb
mov
cmp
sbb
daa
movsb
fisttps
in
icebp
mov
jge
fidivrl
mov
sbb
pop
pusha
cmpsl
xchg
pushw
aaa
lret
xchg
jnp
imul
mov
sbb
cs
jl
test
mov
pop
mov
cmp
adc
mov
repnz
cld
cmp
sub
gs
mov
fisubs
repz
mov
dec
lahf
mov
adc
cmp
sub
lods
and
lds
push
fldenv
lea
pop
icebp
movsb
std
daa
xlat
clc
int
testl
pop
and
mov
shlb
sbb
rcll
push
js
mov
xlat
rcl
aam
test
repz
stc
mov
testb
pop
std
je
pop
leave
push
jge
jne
pop
stc
xorb
lret
scas
inc
lahf
sahf
xchg
jl
movsb
jle
mov
imul
scas
scas
mov
mov
loop
stc
decl
enter
and
add
clc
dec
mov
bt
pushf
stc
test
jmp
daa
fs
xchg
pop
mov
in
clc
mov
dec
mov
jle
pop
lcall
push
mov
cmpsb
jge
lea
xchg
mov
push
sub
lds
fisubl
popf
adc
push
cmp
movsl
movsb
pop
bound
loopne
xchg
inc
fnstcw
mov
push
inc
sbb
and
movsl
hlt
cmp
add
dec
fisubs
stos
ss
lcall
mov
jo
sub
stc
mov
aad
jns
jns
test
dec
adc
aas
xor
and
adc
js
push
out
mov
outsb
or
dec
inc
mov
mov
repz
inc
insb
pop
lods
pop
lcall
outsl
lahf
jae
push
push
in
test
sub
dec
push
scas
mov
arpl
dec
mov
cmp
xor
xchg
jg
lahf
lahf
jle
aas
xchg
sbb
jns
lds
mov
pop
movzbw
mov
pusha
pushf
pushf
mov
movb
pushf
setb
pushf
lods
cmc
stc
call
or
psllq
inc
or
subl
gs
sbb
mov
aaa
pop
mov
imull
out
jg
ja
mov
cmpsl
sub
pop
pusha
lods
idivb
push
or
loopne
mov
movsb
roll
es
nop
lods
lds
jbe
and
adc
sbb
inc
jl
shlb
xor
cld
adc
cpuid
divl
enter
jecxz
andb
and
mov
cli
push
xor
jne
xchg
mov
in
add
clc
mov
mov
jbe
adc
stc
pushl
mov
inc
xorb
test
dec
test
jl
jo
dec
in
jle
adc
movsl
cmp
dec
or
inc
js
fnstsw
lods
cwtl
insl
mov
jne
scas
jb
popf
mov
jle
dec
push
testl
rcrl
or
icebp
sti
push
cmp
xchg
or
mov
pop
enter
mov
loope
push
jo
fs
pusha
scas
stc
insb
lock
lock
dec
xchg
xor
pushf
pop
dec
xchg
aaa
push
mov
out
int3
ret
aas
stos
pop
scas
mov
repnz
fmulp
xchg
pop
ret
mov
popl
xorl
sbb
sbb
sub
mov
in
fisubs
enter
mov
dec
jns
testl
outsl
or
dec
pop
testl
shll
push
dec
push
sub
int3
imul
jne
shll
ja
jl
aam
xor
mov
je
loope
push
js
dec
mov
sar
outsl
pop
adc
loope
adc
sub
ret
xchg
das
popw
pop
stos
add
dec
jle
push
fisubs
pushf
clc
ror
push
call
bt
add
movl
push
mov
pushl
lea
jmp
add
inc
gs
outsl
fs
gs
imul
add
lahf
xor
call
movzwl
scas
lcall
sbb
adc
xor
dec
lcall
pop
iret
cld
loope
mov
test
sbb
mov
sbb
in
xlat
sbb
mov
jle
pushf
sub
or
lea
sub
inc
and
push
mov
insb
adc
insl
popf
ret
loop
les
dec
movsb
fnstsw
mov
dec
adc
stc
enter
mov
inc
inc
and
cld
and
adc
mov
add
add
inc
pop
jne
push
pushf
lea
jmp
push
pushf
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lea
not
pusha
lea
movzbw
push
mov
pushf
jmp
jmp
scas
mov
fwait
aas
mov
repz
fwait
imul
lea
cmpsb
ljmp
out
cli
inc
add
inc
pslld
adc
das
inc
shrl
test
dec
in
mov
fisubs
rolb
into
sub
test
bt
cmc
jmp
pushf
bt
ror
clc
movb
cmc
cmp
shr
jmp
ljmp
mov
dec
outsb
lret
outsb
adc
cmp
sbb
inc
lret
aaa
and
add
mov
sahf
rcr
push
fucomp
fnsave
andb
mov
dec
loop
sbb
stc
ret
and
mov
out
decl
lret
stos
out
adc
mov
sub
out
mov
mov
push
jge
xor
add
imul
push
xor
jecxz
inc
push
pop
sbb
sbb
mov
and
xchg
push
dec
or
sub
lods
lods
mov
repnz
cwtl
gs
cmp
ljmp
push
leave
pushf
inc
mov
mov
xor
cltd
test
mov
outsb
scas
fdivl
je
cmp
in
push
xchg
mov
push
sub
ret
inc
lahf
movsb
es
lret
in
les
mov
xor
sub
adc
test
into
push
scas
push
dec
repnz
adc
lcall
and
xchg
in
xor
call
rep
dec
jbe
sbb
hlt
ljmp
lock
out
push
out
mov
imul
in
dec
sarl
inc
lahf
xchg
sbb
inc
inc
or
xor
cmpsb
ret
push
je
inc
test
mov
std
std
xchg
xchg
popa
popa
mov
ret
jle
out
ret
popf
sub
pushf
mov
pop
xor
xor
ljmp
in
pop
dec
inc
jns
jns
pop
push
roll
shrl
adc
test
ror
add
push
inc
testb
xchg
push
push
test
and
mov
test
mov
ror
sbb
roll
cmp
dec
test
pusha
jmp
btc
bsf
bsr
rcl
mov
cmc
stc
clc
push
shl
push
pusha
jmp
jmp
jns
add
push
pusha
pushf
jmp
pushf
dec
push
stc
jmp
pusha
movl
pushf
pushf
lea
jmp
pushf
mov
movw
not
pushf
pushf
inc
clc
test
not
bt
pushf
cmc
neg
pushf
pushf
ror
cld
pushw
popfw
pushf
pushl
pushf
pushf
inc
jmp
jmp
jmp
cmp
sbb
outsl
rorl
xchg
xor
jnp
mov
push
leave
shlb
test
mov
adc
mov
adcl
mov
icebp
xchg
or
inc
loopne
cmc
rolb
mov
mov
add
sbb
pop
arpl
jae
pop
pcmpgtd
scas
or
adc
add
mov
clc
lea
mov
cwtl
insl
sub
lods
mov
fisubrs
push
add
push
pushl
or
call
push
cmc
bt
add
push
pusha
pushf
movw
lea
je
pusha
jmp
and
xchg
and
xor
add
mov
repnz
or
jp
jle
or
push
sub
testl
adcl
lock
gs
xor
sti
pop
out
fwait
scas
push
shl
rcrb
fwait
sahf
cmp
into
mov
xor
cmpsl
and
mov
dec
lea
add
rcrb
jnp
mov
popa
adc
xor
push
xor
cmp
sbb
add
scas
fdiv
dec
adc
and
jo
loopne
leave
movsb
adcb
cmpsl
mov
add
inc
into
mov
rolb
sub
insl
and
jae
mov
jle
shl
sti
inc
sub
aad
or
add
inc
xlat
rcrl
in
int3
adc
pop
sbb
sub
sub
fisubrs
fdivs
daa
jns
clc
test
int3
mov
dec
in
mov
inc
movsl
hlt
data16
add
inc
or
inc
inc
jnp
mov
adc
rolb
push
les
repz
insl
test
cli
outsl
scas
cmc
rclb
hlt
mov
lret
push
pop
jge
les
ja
or
ud2
ds
or
push
cmc
rcl
xchg
xchg
fbstp
mov
push
xor
loope
jo
pop
insb
add
sbb
add
ss
mov
imul
addb
add
lods
sub
add
add
loopne
adc
scas
lods
push
add
sbb
in
push
add
sbb
pop
sbb
add
add
add
fwait
addl
push
shll
adcl
xor
jnp
push
inc
cmp
fwait
pop
mov
fld
xchg
fnstenv
in
enter
into
rorl
leave
pop
lock
mov
jbe
insl
aas
mov
xor
jo
add
sar
mov
lahf
push
mov
jno
cmp
or
add
mov
push
add
mov
pop
inc
outsb
add
cmc
cmpsl
xor
mov
shll
mov
mov
mov
sbb
dec
enter
mov
inc
xor
loop
inc
clc
sarb
sub
in
jecxz
add
jg
and
xor
jae
lods
dec
pop
inc
sub
jge
mov
mov
pop
and
imul
loopne
jno
add
shl
push
int
ljmp
cmp
mov
movsb
inc
lock
add
std
lret
or
iret
rclb
cmpl
jno
inc
jge
fcmovb
testl
in
jns
cmc
lods
loope
pop
add
in
lahf
mov
xchg
dec
js
stc
jg
pusha
out
lret
mov
inc
test
mov
xchg
mov
sahf
stc
sti
sahf
std
icebp
cmpsl
sbb
jmp
test
lea
sti
popa
xchg
mov
jnp
stc
lahf
jne
and
out
leave
fdivp
mull
ja
fwait
mov
insb
sti
fs
cli
lahf
xchg
mov
jno
xchg
mov
jno
cmp
mov
mov
jno
popa
stc
sarl
jns
jmp
icebp
mov
xchg
jno
js
jmp
cmc
pop
pushf
test
inc
std
popf
loope
movsb
cltd
jo
cmpsb
call
insl
sti
xor
sti
mov
pusha
js
andl
stc
test
in
fsubr
andb
jno
ds
inc
mov
call
mov
stc
in
repz
sti
jge
xchg
aad
mov
stc
pop
jmp
stc
mov
fldlg2
popa
clc
rcl
insl
mov
cmp
shlb
jmp
decb
mov
push
std
icebp
sahf
pop
leave
adc
shl
jne
imul
stc
cmp
pop
inc
fnstsw
jge
imul
ficoms
clc
aad
pop
testl
lahf
sbb
ds
jmp
dec
and
negb
cld
dec
loopne
shll
enter
mov
jge
in
cmp
add
jns
jge
out
mov
lock
filds
inc
jmp
fucom
cmp
lock
mov
cmp
xchg
fisttpll
cmp
lock
test
out
test
xchg
mov
out
or
jge
stc
out
in
js
clc
gs
in
fistps
cmp
cmp
jl
jmp
loope
mov
mov
inc
repz
jg
pop
mov
xlat
xchg
mov
cmp
and
jbe
lahf
cmpsl
cmp
jecxz
jge
add
and
mov
loope
loope
aad
xor
movsl
fbld
lods
pop
jne
mov
insl
stos
lock
sbb
jg
je
sti
fxch
push
mov
shrl
into
inc
sub
xchg
loope
xchg
xchg
insl
push
lahf
and
rcll
leave
mov
fwait
imul
lahf
jecxz
mov
cmc
jns
and
jbe
lahf
iret
cmp
mov
mov
in
jmp
add
pop
out
inc
jmp
scas
xchg
xorl
jns
in
imull
std
in
inc
mov
xchg
iret
lea
pop
andl
jne
mov
xchg
mov
jns
mov
shlb
iret
popf
add
cwtl
jg
pop
cmpsl
lods
jns
fstp
popf
jge
cmp
lock
fistpll
xor
jl
rcrl
std
xorb
sar
jnp
mov
cld
leave
fstpl
ret
add
inc
std
cli
lahf
mov
jne
fsubs
out
int
mov
vpshad
fdivr
icebp
cltd
push
jne
lea
addr16
in
out
jp
movsb
test
popa
cmc
icebp
popa
inc
xchg
sbb
stos
rcr
cmc
xchg
mov
int
add
shlb
std
cmc
xchg
jmp
in
push
lahf
xor
rolb
mov
sti
int
sti
or
repz
mov
mov
mov
cmp
sti
lahf
decl
xlat
cmpb
subl
lea
jne
hlt
add
add
adc
aad
jmp
mov
mov
std
mov
lret
mov
cltd
add
cmc
sarl
pop
inc
loopne
push
leave
sbb
push
stos
loope
mov
jns
cmp
mov
mov
push
insl
repnz
in
addl
mov
push
cmpb
mov
fwait
std
stc
jno
into
xchg
dec
jae
push
pushf
repz
mov
scas
hlt
test
mov
lods
notl
mov
xor
sbb
stos
xchg
icebp
loope
icebp
xchg
add
call
mov
cwtl
shr
mov
shlb
in
mov
dec
cwtl
jl
xchg
fcoml
sbb
mov
shll
rol
mov
jmp
outsl
xchg
je
fwait
mov
push
repz
jmp
mov
sbb
mov
icebp
jge
fcompl
mov
and
insl
pop
sti
in
sub
rol
xchg
lds
jge
enter
pop
in
in
imul
xor
imul
xor
adc
stc
add
jne
stc
rcrl
xlat
xchg
mov
xchg
jns
sbbl
adc
imull
fiadds
jo
push
fldt
cmpsb
pusha
xor
sbbl
ljmp
push
leave
mov
loopne
call
jae
stc
dec
xchg
jne
bnd
sti
fucomp
cmp
lock
push
jmp
imul
lret
lock
enter
mov
lret
pop
pop
lret
icebp
punpckhwd
add
jge
push
stc
repz
stc
lea
xchg
std
test
pop
std
pusha
rorb
jle
lea
stc
int
adc
lcall
or
stc
lea
pop
xor
sti
movsl
pusha
jl
sub
popa
and
mov
insl
mov
std
nop
movsl
punpckhwd
repz
fimuls
mov
nop
cmc
lods
mov
mov
enter
sahf
pop
xlat
adc
mov
adcl
in
in
pop
mov
mov
enter
repz
cmp
xchg
sub
std
jo
cmp
lahf
lea
shlb
mov
fstpl
imul
test
stc
scas
in
jne
frstor
pop
mov
test
stc
jno
jns
stos
jp
pop
lcall
mov
jno
stc
add
jg
sti
ret
jne
scas
fsubrl
popa
fisttps
sahf
stos
mov
xor
jl
add
pop
mov
jns
sub
scas
push
rcrb
lods
or
jl
jmp
repz
fidivs
pushf
std
mov
out
incl
cmpsl
mov
lea
test
popf
cmc
into
xor
es
fstl
aaa
or
sbbl
in
sbbl
arpl
movsb
ffree
int
data16
idivl
ret
testl
sbb
xchg
int
or
jne
jg
enter
lock
mov
jnp
int
ss
xchg
mov
in
out
jne
testl
mov
push
mov
les
mov
hlt
push
icebp
loopne
mov
hlt
fcomip
out
jge
mov
inc
out
sahf
leave
mov
imul
or
sar
in
test
mov
popa
jge
lds
mov
xorl
std
xchg
mov
outsb
jno
cmp
mov
leave
imul
mov
fsts
lret
fists
sti
mov
mov
test
jae
fldt
jno
adc
push
pop
or
in
popf
loope
outsb
xchg
sahf
jns
xchg
jno
pop
jne
out
int
fwait
jmp
movsb
popf
add
std
push
mov
das
or
das
outsb
fcompp
aam
cli
out
mov
xchg
negl
sbb
jns
scas
cltd
sarl
fnsave
xor
movsl
jne
mov
pop
shr
jge
insb
lret
fldl
inc
test
mov
jecxz
push
jecxz
mov
std
out
cltd
cmc
cmp
cmc
xchg
inc
fimuls
sti
cltd
jge
test
in
xchg
jecxz
cltd
repnz
mov
in
mov
std
mov
in
xchg
aaa
out
movsb
enter
inc
push
mov
imul
cmp
mov
ret
cltd
cwtl
sti
xor
sti
nop
lds
mov
xor
pop
sti
stc
jl
ret
fbld
inc
clc
jns
insl
add
js
mov
mov
and
lahf
add
xor
lods
cwtl
jns
xlat
lds
scas
pop
push
pop
jne
cmpl
cs
fnstcw
adc
aad
jge
call
stc
cmp
inc
aam
fldt
add
mov
jno
jecxz
mov
jl
jne
ffreep
xchg
sub
imul
imull
lret
fwait
xchg
xchg
popf
icebp
pusha
xchg
mov
sbb
ljmp
insl
std
fdivl
jecxz
ret
cmp
gs
jge
push
popa
add
std
dec
mov
mov
mov
stos
dec
xlat
insl
sbb
mov
inc
mov
and
fnstenv
xor
testl
jno
cmc
lea
pop
movsl
inc
dec
fisubrs
stc
mov
cmp
in
andb
adc
rorl
icebp
mov
sahf
stc
scas
lret
jge
pusha
stc
loope
lahf
rcrb
add
xchg
scas
cmp
cmpsb
test
cmc
std
dec
dec
pop
sbb
stc
xlat
cmp
inc
in
std
cmp
sti
lea
mov
pusha
in
pusha
enter
sti
popa
sbb
bnd
sub
cmc
repz
lret
pop
pop
mov
in
cmpsl
shl
in
daa
repnz
icebp
sbb
mov
sti
pop
test
shl
cmp
imul
fwait
out
jge
sbb
sbb
xchg
mov
fistpll
xchg
pop
jmp
xchg
jge
fwait
jne
jge
add
pop
cmpsl
sbb
fwait
inc
fldt
fwait
jne
jge
cmp
push
push
cmp
int3
fldt
imul
fwait
jne
sbb
notb
mov
xchg
idivl
lock
pop
fwait
lock
mov
push
dec
mov
lcall
jge
cs
into
lods
jne
jge
xchg
rcl
loop
push
mov
icebp
cmp
lock
sarl
mov
mov
xor
lock
outsl
jmp
out
and
xchg
shlb
out
addb
imul
in
aaa
mov
mov
icebp
std
rclb
jecxz
shrl
mov
test
sbb
shrl
stos
test
pop
icebp
mov
stc
mov
cmp
repz
mov
push
mov
in
std
xchg
ds
mov
sti
lea
xor
mov
aas
cmc
mov
cmc
lahf
xchg
sbb
and
cmc
sbb
repz
fnstenv
jbe
mov
pop
mov
jnp
rcll
vhsubpd
sbb
std
icebp
shrl
fstpt
frndint
jb
add
add
cs
fsqrt
mov
gs
pusha
std
flds
jns
push
pop
and
mov
pusha
mov
adc
mov
jns
cld
rcl
popa
shlb
add
popf
push
pop
repnz
inc
in
int
mov
stc
xlat
rorl
dec
roll
fadds
pop
pop
addr16
js
fistpll
add
aaa
adc
push
sbb
jo
out
jl
data16
mov
add
pop
and
add
pop
movsl
adc
jb
cmp
call
enter
pop
fildll
out
cltd
fstpl
imul
shll
jmp
jmp
rcll
add
mov
out
nop
xchg
fucomip
insb
cmc
mov
insl
mov
out
leave
xor
test
mov
stos
add
loope
test
stos
xchg
lods
je
roll
lahf
insb
mov
jno
rcrl
push
or
aad
insl
pop
sub
loope
mov
incl
fcomip
lock
std
clc
dec
mov
or
pop
sti
in
stc
stos
and
mov
lock
mov
mov
mov
jmp
out
icebp
xchg
sbb
cmp
add
fisttpll
jecxz
call
std
jne
jge
clc
shrl
std
jns
jbe
sahf
mov
sbb
addr16
movsl
fildll
in
mov
cmpsl
adc
popf
cmpl
sbb
jmp
leave
mov
out
mov
jne
int
neg
icebp
jge
lods
test
mov
gs
imul
dec
cmpsl
cmp
lock
pop
mov
sbb
fimuls
mov
xchg
mull
jge
in
cmp
sub
mov
cmp
lock
jmp
fprem
out
mov
movsl
cmp
test
jge
clc
in
fstp
aad
int
mov
lods
clc
movsl
out
lahf
pop
aad
push
xchg
jns
cmp
lock
repz
loope
fstpt
aad
iret
ffreep
mov
insl
push
sti
cmp
mov
xor
jge
stc
jle
jecxz
sub
adc
jns
shrb
shl
icebp
mov
pusha
xchg
stos
mov
lds
fstps
pop
std
movsb
das
int3
not
cwtl
inc
mov
mov
rcrl
sub
shl
mov
jmp
or
lock
mov
sti
jge
push
sar
je
std
movsl
loop
in
mov
lret
icebp
jmp
out
loop
in
cs
cmc
outsb
fisttpl
add
jmp
es
jne
pop
xor
jecxz
inc
repz
mov
fmull
sbb
test
lea
mov
cmc
out
lret
jge
pop
js
stc
test
and
mov
sbb
jg
mov
lock
mov
mov
push
popa
xchg
sbbl
mov
lods
cmpsl
in
push
mov
movsl
inc
add
xor
outsb
sti
jb
ret
jo
lahf
lcall
fcomi
xor
jno
jge
cmp
xor
decl
pop
in
out
lret
das
iret
int
adc
mov
movsb
cltd
andl
mov
rorl
mov
idivb
mov
out
shl
push
sbb
jns
ds
lock
data16
std
out
mov
imul
cmpsl
icebp
in
iret
fnstsw
cmp
leave
loope
mov
mov
clc
test
cmp
add
ffreep
cmp
jge
mov
mov
adcl
shl
lret
pop
ret
insl
xchg
push
jge
or
mov
out
ret
xlat
sti
mov
jge
loope
xlat
cmp
or
repnz
repz
mov
pop
leave
mov
lahf
cmp
orl
cmc
mov
sbbl
insl
mov
sbb
sti
jmp
xchg
mov
sbb
int
sarl
imul
fwait
jno
adc
shrl
js
mov
mov
mov
and
lahf
pusha
mov
fldenv
mov
pusha
and
repz
cmc
pusha
mov
pusha
xchg
mov
pusha
sbb
add
stc
jmp
adc
or
push
cli
stc
int
adc
cltd
adc
adc
nop
adc
adc
sti
push
cli
stc
cltd
add
lods
adc
mulps
sti
pushf
in
pop
andl
popf
and
repz
icebp
mov
aam
shll
ftst
cmp
pop
cltd
fdivl
shrl
xchg
dec
fisttpll
push
into
stc
aaa
fcmovbe
icebp
lret
je
iret
cmp
mov
gs
pop
adc
std
fisubs
jno
popa
or
mov
sbb
or
push
xchg
cs
outsb
mov
into
in
outsb
mov
sahf
fldt
adc
jmp
in
lods
adc
xor
jmp
mov
inc
mov
cmp
jecxz
shrl
in
testb
lahf
icebp
xchg
mov
test
stos
in
lea
xchg
pop
lret
mov
cmpsl
add
ss
fwait
sub
cmp
lock
push
notl
mov
stos
out
mov
adc
jne
mov
adc
cld
mov
iret
xchg
inc
xchg
dec
xchg
pop
test
stc
insl
in
jge
fcompl
xorl
fwait
xchg
pop
test
jge
jne
outsb
pop
mov
jne
jge
aad
cmp
gs
jne
jge
insl
adc
in
pop
fwait
mov
and
jecxz
jns
ss
nop
mov
xlat
fwait
insl
sarl
fsubrl
stos
lahf
cltd
stc
add
sub
cmc
jns
pop
jmp
stos
aam
xor
sti
std
lahf
pop
mov
lret
cmc
fstpl
lcall
jp
icebp
sub
mov
cmp
mov
mov
sub
aam
stc
mov
pop
mov
jno
out
sbb
repz
xchg
and
jmp
pop
cmp
dec
sti
mov
cli
popa
xor
lcall
rcll
bound
mov
fdivrp
cmpsl
arpl
mov
push
dec
stc
cmpl
out
les
push
pop
repz
fsubrp
mov
xor
test
xchg
sub
int
dec
lret
pop
iret
loope
mov
pop
xchg
sbbb
mov
mov
scas
xchg
stc
jge
cmc
fidivl
imul
in
lds
int3
imul
add
sbb
popf
jge
mov
daa
test
loopne
addb
mov
jmp
xchg
xorl
xchg
shr
sbb
in
popa
xor
lea
jecxz
std
fisubrl
test
lret
stc
xchg
sub
loope
lods
aaa
xor
scas
dec
sbb
mov
jecxz
push
test
sarl
xchg
jne
jns
jge,pn
mov
out
inc
jp
leave
cmc
xchg
jb
mov
rcr
sarl
stc
shl
popf
jno
sti
mov
std
mov
mov
loope
int
mov
std
rcrl
mov
data16
es
sahf
imul
imul
std
rcll
stos
inc
cmc
std
cltd
pop
in
repz
cmc
xchg
in
int
cmpsl
push
icebp
out
std
in
dec
cmp
xor
mov
repz
jb
push
mov
pop
aas
test
insb
repz
pop
ds
shl
leave
fstpt
std
mov
leave
mov
lock
fucomp
add
mov
ja
sti
jno
push
pushf
outsl
xor
mov
addr16
nop
stos
inc
rep
pop
in
lods
pop
sti
nop
xchg
dec
rep
push
in
lods
dec
sti
nop
cmpsl
push
sti
out
ds
aas
xor
fyl2xp1
jg
shl
movsb
scas
loope
icebp
mov
gs
fwait
lret
lods
loope
xlat
fidivrl
mov
std
test
out
sarl
cmc
aam
cltd
iret
cmpsl
jge
or
mov
xchg
out
xchg
std
mov
lods
lea
cmc
mov
and
jecxz
lea
shl
rcl
sbb
in
mov
hlt
mov
scas
in
mov
gs
test
ret
insl
mov
mov
mov
mov
mov
mov
iret
adc
icebp
xchg
sbb
in
cmp
mov
mov
movsl
jge
lock
or
neg
icebp
cmp
lock
cmp
jns
cmp
lock
mov
stos
clc
mov
cmp
mov
repz
cmp
lock
fistpll
cmpsl
out
mov
lock
filds
cmp
fnstcw
shl
lret
ffreep
mov
out
test
lock
pop
mov
mov
stc
out
icebp
fucomp
cmp
fcompl
push
fucomi
mov
jl
fiadds
dec
movsb
lds
lret
xor
clc
cmpsl
out
mov
lock
test
lret
or
out
cmp
fstp
xlat
cmp
lock
fistpll
cmpsl
out
lahf
fstpl
mov
rcll
mov
test
xchg
mov
jno
rol
sahf
cmc
orl
clc
cmc
icebp
mov
std
lods
je
mov
popf
pop
xchg
adcb
imul
loope
mov
roll
cmc
out
adc
sti
pop
std
in
dec
rol
rcl
popf
cmp
std
cmc
mull
and
xchg
cmp
aad
nop
push
mov
pusha
hlt
cmp
mov
pop
sbb
lahf
mov
in
pusha
je
mov
testl
sti
xchg
and
sub
repz
movsl
pusha
cmpb
imul
mov
pop
push
xchg
mov
sti
xor
mov
mov
pusha
sub
stc
aas
cmp
mov
mov
movsb
dec
aad
pop
fwait
test
xor
insl
mov
stc
repnz
jns
jo
fiaddl
xchg
and
mov
pusha
incl
cmp
cmp
negb
test
sti
in
mov
std
jmp
mov
repz
fcmovne
cmpsl
mov
jmp
sarb
icebp
push
or
shl
jnp
jne
mov
loop
xchg
stc
std
jmp
hlt
or
out
lahf
inc
jg
inc
sub
or
ret
out
stc
or
ss
stos
add
ret
rcll
movsl
test
pop
inc
popf
jbe
push
js
scas
or
pop
ds
fldcw
fwait
stos
pusha
add
mov
rcrl
xor
jl
lock
cltd
js
mov
fdivrl
std
inc
pop
jne
jge
jbe
in
cmp
mov
repz
jbe
addl
ret
pop
aas
xchg
insb
cmc
fstl
sbbb
sub
add
out
loop
pop
aad
pop
divl
loopne
pop
test
jmp
and
add
std
jae
mov
mov
fwait
or
popf
cmp
and
scas
cmc
mov
pop
leave
lret
std
jae
daa
jns
jge
jecxz
repz
mov
sbb
std
fstl
clc
mov
cmp
lds
fstpl
xchg
in
rcrl
mov
in
pop
js
jno
mov
and
int
std
sbb
jecxz
movsb
stc
imul
movsl
lret
xchg
lock
jns
fidivrl
mov
xchg
cmpsl
outsl
aad
xlat
iret
lret
pop
mov
xchg
xor
fwait
inc
aas
xchg
mov
in
xlat
clc
jmp
mov
xlat
mov
xlat
rol
xor
xchg
pop
scas
cmp
clc
orl
xlat
call
fwait
outsl
sti
lea
jb
shr
jmp
std
pop
fnstcw
jge
cmp
lock
jle
fbstp
pusha
clc
push
ljmp
jmp
fstps
push
mov
rorl
stc
repz
test
das
mov
test
xor
pop
mov
sbb
movsl
mov
rorl
and
mov
les
mul
in
movsl
xlat
cs
cld
aam
add
test
mov
in
negl
imul
test
loop
test
fnstenv
aad
pop
in
jno
pop
in
mov
dec
cmp
fwait
cmpsb
mov
popf
push
outsl
jl
or
shll
ss
push
rcrl
fcmovbe
and
sub
xlat
mov
cmp
lods
xor
test
lahf
sbb
jge
add
mov
ret
push
sti
idivl
lahf
popa
icebp
xchg
test
lahf
jge
cli
std
repz
lock
scas
mov
stc
aaa
push
in
imul
mov
in
pop
mov
scas
cltd
lods
fwait
jns
jge
fwait
imul
jne
xor
jns
jp
std
jge
lods
jne
jge
divl
jge
out
pop
push
mov
or
fsubl
push
mov
fwait
mov
lods
pop
cmp
out
ret
jge
in
mov
jge
lea
mov
dec
mov
scas
jne
popa
test
sub
xchg
jge
clc
xor
stc
push
fucomp
cmp
lock
lret
sarl
fstpl
icebp
sti
jns
icebp
out
lret
out
rcr
cmp
xchg
in
lock
cmp
mov
lock
fisttps
fwait
jns
jge
cmp
mov
mov
filds
cmp
ret
fnstsw
fists
inc
out
clc
loope
rcr
ret
cmp
fwait
cmp
fsubl
repz
fwait
jno
jge
loope
repz
out
jns
xchg
push
sub
scas
lock
int
jge
sarl
movsl
fstpl
icebp
pushl
div
cmp
rcr
int
ret
lock
mov
cmc
pause
fucomip
jecxz
shr
leave
ffree
cmp
popf
cmp
sbb
jne
repz
lock
fst
cmp
mov
fwait
jns
jge
cmp
fldl
cmp
lock
sar
int
ret
fnstsw
fildll
mov
std
je
div
out
xor
mov
jns
pop
daa
mov
mov
std
outsb
leave
jg
in
outsb
xor
fimuls
lahf
in
rcrl
mov
mov
mov
repz
push
std
clc
mov
aam
mov
out
movsb
movsb
cmpl
adc
lcall
jno
outsb
mov
aaa
in
in
xor
nop
lahf
in
mov
xchg
lock
sti
in
sbb
nop
repz
psubq
pop
in
in
add
mov
sti
lods
jnp
rep
pusha
add
insl
sub
mov
shll
ljmp
pushf
mov
nop
imul
xchg
xchg
mov
ficomps
test
sti
lahf
lea
iret
adc
imul
icebp
out
mov
xchg
lea
out
sbb
clc
sub
sti
jne
lea
sub
push
mov
repnz
int
dec
mov
neg
push
imul
pop
repz
stos
mov
cltd
int3
mov
test
xchg
and
mov
pop
scas
leave
jbe
mov
mov
jmp
repz
lea
out
pop
mov
leave
fimull
jmp
jmp
or
lds
inc
addl
xchg
sbb
out
loope
xlat
popf
jns
mov
fidivl
lock
ret
jne
and
fwait
aam
jmp
imul
rep
sti
push
in
jge
pushf
inc
cltd
iret
jecxz
jns
push
repnz
mov
mov
mov
mov
mov
cmc
pusha
in
jo
and
xchg
stos
stc
cmc
in
popf
fisttpl
shrl
cmc
sub
in
add
jmp
pop
lahf
cmc
sti
in
xlat
mov
setns
cmc
std
in
aad
jmp
iret
mov
in
sarl
jge
jno
jge
out
adc
or
lock
pusha
push
cmp
mov
in
lret
lea
mov
in
andl
mov
enter
mov
in
aam
ja
mov
in
repz
pop
in
in
flds
fcomi
lds
fxch
mov
mov
adc
dec
mov
mov
mul
jecxz
pop
mov
xchg
push
inc
imull
xlat
fsubs
mov
stos
fisubrs
ja
std
lahf
sbb
mov
jge
test
sbb
in
xlat
mov
lds
fnsave
shll
fcomi
pop
jle
sbb
cmp
popa
jns
int3
and
mov
out
fdivr
test
loop
adc
push
cmp
xchg
push
mov
in
outsb
add
jp
out
arpl
addb
dec
jecxz
add
int3
add
adc
icebp
xchg
daa
jb
pop
cmp
jle
sub
push
test
cli
mov
inc
fcmovb
pop
sbb
mov
aam
cmpsb
sahf
aam
inc
adc
jle
sti
popf
sbbl
mov
dec
push
loope
jbe
jmp
add
cmp
lock
fbstp
mov
xor
lods
out
cs
jp
stc
fnstsw
clc
lock
jg
xor
gs
push
call
mov
cld
imul
loopne
push
xor
push
out
cwtl
mov
pop
pop
in
pop
dec
jae
fucomi
mov
dec
dec
push
lret
adc
ljmp
dec
inc
ja
sbb
sbb
outsb
mov
sbb
popf
adc
mov
fnstsw
cmp
sbb
shrl
or
sub
cmp
mov
push
repz
mov
loope
lods
call
lock
push
mov
fisubrs
add
mov
test
mov
jge
mov
xchg
pop
inc
inc
jb
popf
pop
sarl
adc
call
adcl
push
pop
test
je
insl
out
ret
inc
push
jl
icebp
lock
add
pushl
fwait
jbe
scas
xchg
pop
cmp
loopne
fistpll
insl
jne
gs
out
pop
aad
push
mov
clc
out
aad
ds
std
aaa
pusha
lock
mov
pop
xlat
cmp
mov
ror
popf
push
inc
pop
ljmp
cli
cmc
add
mov
aad
mov
test
push
xbegin
jbe
and
or
jns
aaa
lret
jmp
ret
test
or
inc
fnstcw
jp
test
test
add
std
mov
iret
push
mov
shr
dec
popa
daa
fsubs
shrb
jp
mov
pop
jecxz
outsl
xor
out
aas
lcall
push
inc
fisttpl
pop
push
call
dec
call
push
in
sub
sti
imulb
jmp
daa
in
jge
orb
mov
jge
into
imul
movsl
add
cmpsl
cmc
pop
icebp
jno
std
fildll
loopne
push
dec
inc
ja
aaa
sti
or
std
dec
scas
cld
mov
leave
dec
mov
sti
data16
xchg
pop
mov
jae
out
cmc
pop
in
in
les
ret
dec
shll
out
scas
aas
xlat
popa
loopne
push
jle
rcr
lret
dec
es
jae
mov
int
jmp
add
pop
outsl
jge
xor
sarl
incl
stc
xor
pop
add
push
stc
jp
gs
jns
pop
ret
inc
pop
xor
push
mov
jecxz
pop
pusha
mov
std
shll
testb
fisubrl
or
adc
int
add
in
fbld
or
pop
cld
rcll
sub
jg
mov
add
jmp
test
call
out
and
imul
imul
out
testl
aad
in
out
cmp
xor
jnp
push
adc
iret
jno
push
in
pop
lds
jp
cmp
push
aas
arpl
and
push
mov
or
stc
jmp
stc
cmpl
and
icebp
out
fcomip
outsl
jbe
ret
iret
fwait
mov
lds
cmp
jns
ret
cmp
jge
fwait
icebp
mov
add
repnz
outsb
leave
adc
repz
test
jecxz
sbb
stc
or
mov
mov
scas
and
or
lahf
test
pop
push
mov
rcll
aaa
pop
fwait
sub
adcb
repz
jnp
aad
sub
test
or
leave
andl
sahf
sti
into
mov
mov
pop
stc
sub
sbb
mov
mov
std
jmp
orb
jmp
aad
cmc
jecxz
jmp
shl
inc
cld
jp
stos
dec
nop
cld
jne
jnp
fisttpll
stc
int
mov
popf
sbb
mov
xor
in
lcall
stc
dec
lods
jmp
std
mov
cmp
inc
xchg
cmp
fwait
mov
pusha
jnp
mov
xor
call
lods
mov
popf
leave
loope
sti
ds
pop
rol
inc
stos
insb
cld
aad
mov
ror
mov
jg
leave
fsub
sarl
int3
shlb
js
aad
leave
insb
push
fnsave
das
mov
vpshlw
pop
xchg
and
dec
fcomp
mov
ficoml
xchg
cmp
movsl
fists
pop
test
jae
bnd
lret
test
xor
lock
or
dec
je
push
jl
fchs
stos
sbbl
pushf
test
pop
rcll
mov
mov
mov
leave
push
test
add
icebp
into
shrl
push
mov
rcr
mov
sub
mov
stos
lahf
stos
mov
ret
test
mov
stc
dec
das
iret
sbb
repnz
cmp
pop
adc
mov
iret
xor
jmp
fcompl
mul
push
ljmp
mull
test
in
sub
jbe
lahf
nop
xchg
test
mov
cmp
adc
mov
ds
loop
lret
rcll
cmpsl
dec
mov
lret
jns
test
mov
nop
sub
repz
rcl
xlat
push
out
pop
sbb
xchg
out
mov
arpl
pop
jbe
jmp
mov
ss
mov
lret
pop
mov
mul
fbstp
loope
sti
loope
int
pop
aad
pop
into
xlat
lcall
jno
sarl
cmp
popf
jg
std
dec
ds
jg
cmc
fwait
outsl
ss
std
xlat
dec
xlat
mov
push
cld
jp
fwait
dec
nop
cld
jne
sti
rcrl
lret
in
enter
sbb
lahf
add
mov
enter
repz
sti
jnp
mov
pop
aam
mov
lahf
in
push
test
out
rcr
jl
jno
dec
pop
jl
mov
lock
movsl
pop
dec
cmc
xor
xor
jl
pop
mov
movsl
mov
imul
jge
stc
cmc
inc
nop
jge
popf
iret
dec
stos
mov
ds
std
lcall
sti
lahf
xchg
inc
gs
dec
jge
clc
cmp
frstor
sbb
adc
mov
and
xchg
cmp
mov
pop
dec
lds
mov
pushf
jmp
fcomp
int
insl
xlat
rcll
repz
fisttpll
and
addl
cmpsl
in
fwait
int3
scas
mov
xor
mov
mov
test
pop
lret
xchg
jno
ret
xchg
mov
and
addb
imul
ja
das
mov
and
pop
pop
mov
aad
inc
ja
mov
loope
cltd
std
rcl
in
ljmp
mulb
lahf
stos
mov
stc
mov
outsl
fisttpll
add
inc
mov
popf
lds
cltd
mov
jp
imul
inc
rorl
mov
or
sbb
dec
inc
in
inc
xchg
mov
xchg
cmp
stc
negl
call
mov
mov
nop
xchg
xor
leave
lock
gs
mov
into
scas
cmpsl
jge
xchg
leave
push
sbb
jno
filds
mov
mov
fwait
cmpsl
inc
mov
sbb
rep
mov
out
iret
adc
cmpl
adc
fiadds
outsl
lock
mov
jmp
leave
std
repz
clc
in
mov
decb
out
jmp
or
jo
mov
cmc
in
rcrl
ror
lds
jmp
std
or
mov
ret
stc
lret
or
jp
mov
jl
mov
lds
mov
mov
mov
inc
cmp
jg
mov
nop
mov
popa
scas
mov
stc
cld
or
ret
fstp
lea
fldenv
mov
mov
mov
loopne
adc
stc
add
iret
ret
add
repz
mov
xlat
inc
aas
fbstp
mov
out
shlb
xchg
jnp
shrl
jp
in
roll
or
stc
jp
shrl
nop
test
cmp
stc
es
cmp
fnsave
insb
lock
fistps
cmp
test
pop
negl
lds
roll
cmp
int
inc
dec
leave
ljmp
cmp
repz
mov
fmul
pushf
int
stc
les
repz
popf
in
fdivr
mov
clc
rol
dec
lds
test
mov
movsl
xchg
movl
inc
mov
es
stc
cmpsl
test
movsl
mov
mul
fdivp
jno
pop
mov
mov
aas
mov
jl
idiv
jmp
test
divl
fnstenv
mov
push
mov
test
push
fwait
pop
dec
xchg
movsl
loopne
popf
es
xor
shll
lea
into
test
lock
sar
mov
out
nop
imul
sbb
lret
xchg
icebp
fistpll
jo
xchg
clc
ret
jmp
cltd
pop
stc
sbb
imul
mov
fnstcw
ror
cmp
or
mov
outsl
stos
ret
test
pop
sub
mov
repz
jge
aaa
shrl
loop
mov
lahf
jne
pop
clc
stos
mov
dec
mov
xor
andl
mov
cmp
je
imul
cltd
jge
adc
mov
or
pushf
gs
js
mov
aaa
fstpt
insl
andl
xchg
cmp
lock
cltd
decl
in
int
fwait
jns
xchg
add
out
rcr
sbb
sbb
fiadds
in
jle
stc
jo
lea
mov
pop
cwtl
mov
loop
or
int3
mov
mov
mov
ljmp
stc
in
and
popf
xor
mov
aam
shr
jle
jno
ds
jle
aad
jg
jo
jl,pt
mov
aad
jecxz
pop
mov
insl
fcomi
sub
fsubrs
aad
jns
mov
pop
in
int
cmc
leave
and
rcl
jmp
bnd
mov
in
lock
fisttps
cmp
jge
dec
scas
lock
std
jp
xor
cmc
lahf
dec
jecxz
jb
lret
dec
xchg
mov
xor
fbstp
xchg
mov
gs
repz
mov
inc
lret
mov
sbb
cmp
cmp
mov
jnp
popf
ret
mov
leave
pusha
cmp
cld
or
popf
jl
xchg
cmp
jns
sbb
jp
fstpt
stc
clc
lahf
aad
lds
mov
stos
jns
cmp
fnstcw
nop
lds
repz
jge
popf
mov
clc
jecxz
fidivrs
negl
fbstp
js
cmc
mov
lahf
mov
std
bnd
mov
cmp
or
lock
fbld
cmp
or
xor
sbb
cmp
scas
fst
lds
test
ss
bound
cltd
andl
lahf
test
cmp
cltd
ret
pop
mov
or
idivl
int3
lds
out
mov
in
jo
subb
inc
lahf
fcmovnb
mov
sbb
xchg
fcmovbe
pop
cmpl
push
lahf
mov
cmp
sub
mov
lret
inc
dec
ret
fs
lea
mov
iret
fistl
test
in
out
stc
scas
push
or
test
ret
cld
stc
stc
jo
mov
stc
lea
mov
divl
int
or
faddl
es
cmpl
xchg
push
inc
divl
loopne
ljmp
push
mov
mov
loopne
mov
aas
imul
cli
sub
jno
mov
jne
loope
fidivs
test
fdivr
iret
mov
lahf
cmp
popf
jns
call
mov
mov
dec
js
movsb
imul
or
cmp
inc
aad
ret
adc
movsl
push
rcrl
add
jecxz
lea
icebp
fisubs
std
and
mov
fwait
cmp
imul
movsl
cltd
adc
inc
mov
inc
mov
es
mov
mov
cs
fiaddl
test
dec
dec
test
ret
fnstsw
cmpsl
insl
xchg
rorl
cmp
lahf
nop
notl
add
test
mov
std
lea
andl
jmp
pop
repnz
stc
xlat
sahf
mov
fnstenv
jg
mov
in
std
xchg
icebp
adc
jmp
xchg
jge
popf
out
jbe
clc
lahf
mov
mov
mov
add
sti
stc
jecxz
lods
adcl
negb
movsl
leave
mov
ss
pop
mov
mov
std
mov
mov
xlat
stc
cmc
or
mov
xchg
sbb
or
jp
fwait
mov
xchg
pop
cli
ss
mov
jl
lea
iret
pop
jl
inc
fisttpl
xchg
test
push
dec
jecxz
icebp
xor
or
mov
mov
mov
out
shl
je
lods
fdivl
mov
clc
iret
test
adc
mov
mov
jmp
mov
aam
mov
fwait
in
dec
cltd
and
shrl
stos
out
std
in
leave
jmp
fstpt
in
mov
setg
cmc
std
in
lds
outsl
fprem
call
jp
jmp
aad
test
nop
aad
hlt
jecxz
fdivl
mov
lds
pusha
andb
xchg
mov
fdivrl
mov
xor
ds
add
or
lahf
stc
jecxz
scas
in
fcomip
stc
aaa
mov
and
fidivs
call
loope
mov
jne
shll
jne
popf
mov
jnp
stos
fidivs
mov
mov
ljmp
jno
nop
in
xor
in
cmc
cmp
clc
sbb
adc
or
lock
pusha
push
cmp
cmp
cmp
sbb
mov
cmp
stos
aad
mov
lahf
push
dec
xchg
lds
mov
xor
cld
fistpll
rcr
lret
fisttpl
mov
test
mov
test
jecxz
sti
loopne
nop
iret
gs
push
addr16
sub
sub
ror
push
int
fnstsw
jecxz
cmp
xchg
iret
pop
test
insl
xchg
mov
mov
cmp
inc
mov
ljmp
mov
mov
rorl
mov
mul
aaa
nop
mov
lds
add
iret
shrl
mov
cmpsl
aaa
and
push
jo
pop
xchg
ljmp
mov
cmpsl
nop
jmp
xor
sbb
outsl
movsl
int
lahf
std
and
pop
mov
scas
mov
sbb
mov
testl
dec
test
popf
aaa
jge
xchg
in
jno
push
pop
push
mov
outsl
xchg
bnd
xlat
cld
inc
fcompl
das
mov
test
xor
sub
stc
in
std
test
test
pop
in
enter
pusha
movsl
mov
inc
movsl
mov
inc
sbb
mov
xor
mov
sahf
lahf
jns
outsb
stc
outsb
jbe
push
xchg
sub
cltd
xlat
clc
push
sahf
or
lret
jne
adc
lcall
mov
cltd
shl
nop
sbbl
pop
push
xchg
sub
mov
xchg
ja
mov
aad
jge
push
xrelease
cmpsb
jmp
cmpsl
fimull
test
out
jns
mov
ret
std
inc
xchg
cmc
jne
aas
cmc
xchg
xchg
xor
xchg
push
add
icebp
add
mov
cmp
aad
xor
outsb
pop
fnsave
fwait
outsb
ficoms
in
dec
inc
lds
mov
jno
push
aaa
pop
sarl
leave
arpl
nop
push
mov
aad
fwait
jmp
adc
jge
jne
loope
mov
std
idiv
mov
repnz
dec
jne
test
out
das
inc
jne
mov
cmc
xchg
inc
in
inc
pop
xor
dec
lahf
jno
add
iret
scas
stos
adc
mov
jge
push
pop
mov
pop
nop
repnz
mov
pop
test
cmpsl
stos
dec
cmpsl
mov
pop
addl
mov
xchg
sahf
cmc
aad
std
icebp
scas
and
std
fidivs
rol
xchg
inc
xchg
out
lods
push
pop
mov
fst
movsl
sti
cmc
pop
lret
popa
jbe
mov
std
fwait
ja
or
cmc
in
cmp
cmpsb
sub
outsb
jecxz
pop
cmpl
xchg
xor
cli
imul
lahf
cmc
arpl
sub
ret
ficompl
mov
popf
icebp
vcvttsd2si
pop
fistpl
mov
test
push
pop
test
jae
stc
stos
cmc
mov
pop
jae
test
leave
stos
mov
test
mov
neg
pusha
repnz
mov
repnz
js
scas
add
mov
repz
mov
sub
xchg
ret
iret
pop
repz
js
insl
jno
in
iret
xchg
fcmovnbe
xor
lret
pop
popf
loop
lods
cli
shrl
iret
fwait
inc
negb
pop
fwait
stos
or
ret
les
pusha
lcall
mov
fnstsw
bound
stc
repz
cmc
mov
cmp
in
test
pop
out
scas
fstps
jno
nop
mov
mov
jns
fnstcw
jp
lea
xor
js
sub
lret
dec
mov
cwtl
pop
fwait
adc
mov
mov
ds
dec
xchg
mov
psubusw
xlat
test
xchg
fwait
aas
outsb
add
aas
fistpll
std
out
jne
jmp
sub
lock
lea
xchg
xor
fwait
ss
mov
in
popf
std
inc
mov
and
jno
nop
mov
imul
xchg
mov
pop
sti
cmpsl
stos
sti
test
xor
jno
nop
aad
ret
xchg
push
sti
sti
jns
movsl
xor
jl
jns
cmpsl
aas
icebp
sbb
shl
stc
and
push
fwait
mov
jmp
jno
xchg
cmp
daa
push
mov
pop
stc
fnstenv
mov
lock
pop
popf
mov
daa
mov
jecxz
fwait
imul
fbld
cmc
sub
jb
mov
daa
div
push
jb
ljmp
pop
cmpsb
cmp
loope
pop
into
es
dec
jge
inc
cmp
sbb
adc
or
movsl
je
push
pusha
out
push
fisttpll
lock
cs
sbb
adc
push
pop
jl
rorl
xor
pop
movsl
nop
mov
pusha
iret
pushf
lds
iret
xlat
add
add
cld
test
int
lds
mov
mov
in
pushf
xchg
ret
inc
dec
cmp
jmp
es
inc
lahf
aad
out
neg
nop
shrl
dec
mov
xchg
mov
mov
test
and
mov
mov
adcl
mov
xchg
push
mov
inc
mov
lahf
aad
pop
in
ljmp
mov
xchg
mov
cmpsl
adc
cs
repz
xchg
fmul
push
jmp
repz
movsl
mov
ret
fcomp
lret
or
mov
sti
push
aaa
popf
lods
and
popf
mov
mov
cmc
sub
adc
xor
pop
fcmovnu
or
iret
push
shl
mov
clc
mov
movsl
aaa
fnstcw
jge
mov
fwait
negl
add
cmc
fnstcw
dec
lods
xchg
aam
not
mov
mov
mov
insb
iret
divb
fnop
jl
jge
pop
push
ja
mov
lahf
insl
loop
mov
lahf
xor
idiv
repz
jns
testl
stos
cmc
fcoml
loopne
cmp
shl
mov
xchg
lret
mov
and
aas
mov
enter
jns
xchg
pop
adc
inc
xchg
mov
fisubrs
popf
repz
stos
jmp
repz
ja
add
and
add
mov
add
jns
fldt
xchg
fwait
popf
xchg
das
jmp
cmc
jmp
and
rclb
outsb
fists
xlat
repz
xchg
vorpd
sahf
adcl
mov
add
std
out
xchg
and
sub
add
and
popf
std
jmp
lahf
sti
fldl
std
xchg
sbb
stos
sahf
and
ds
iret
notl
dec
mov
idivl
aas
shl
out
stc
push
jmp
aas
mov
and
jbe
fwait
cmc
mov
pop
mov
sarl
ds
nop
ret
arpl
popa
xlat
xchg
mov
push
jno
mov
mov
mov
push
movsl
jge
mov
shr
cmc
lahf
pop
xchg
stc
jbe
popa
mov
call
jnp
icebp
bnd
in
push
std
mov
ja
mov
xchg
push
xlat
out
cli
push
mov
mov
insb
sarl
mov
jl
sar
mov
jbe
xor
cld
icebp
or
xor
mov
shll
jmp
pop
mov
jmp
mov
push
jbe
mov
ja
shll
sarl
iret
xor
lea
test
shl
mov
mov
stc
mov
lahf
ror
mov
jecxz
jo
div
scas
and
into
cmpsl
jge
push
pop
add
insl
std
rcl
test
test
sarl
icebp
aas
mov
mov
sarl
out
push
fbstp
mov
stc
jecxz
fisubrs
ret
mov
xchg
jb
push
mov
test
xchg
jo
inc
std
mov
or
mov
jmp
xlat
loope
repnz
jno
ret
fadd
stc
mov
pop
mov
mov
jns
add
dec
dec
dec
lret
pop
iret
push
neg
loopne
push
dec
mov
popa
leave
dec
pop
pop
jecxz
jb
inc
in
std
lds
rolb
fbld
fiadds
jmp
aam
stos
mov
jge
inc
dec
add
pop
and
xchg
icebp
loopne
inc
lods
icebp
pop
lret
add
lock
pop
ror
test
dec
nop
inc
pushf
int
dec
cmpsl
jmp
rol
push
xlat
enter
dec
lret
lea
mov
xchg
stc
int
pop
pop
jae
cmp
fcom
cmpsl
arpl
jle
lret
push
dec
hlt
cltd
fimuls
addb
scas
adc
lea
dec
loope
popa
lret
inc
dec
cwtl
leave
pop
sub
arpl
sub
mulps
aas
leave
sti
jns
add
cmp
in
aad
cs
divl
cli
adc
cmp
jns
mov
lahf
repnz
fidivrs
sahf
stc
mov
in
leave
add
inc
mov
add
push
or
jge
lods
fidivrl
pop
in
popl
cli
mov
hlt
jnp
lcall
or
sub
into
sbb
es
ljmp
jg
dec
dec
pop
and
dec
cmpsl
call
add
test
int
cs
mov
add
pusha
in
fxch
pusha
jns
dec
icebp
fidivrs
dec
dec
pop
mov
into
call
pusha
pushf
and
push
dec
iret
xor
mov
gs
jl
ljmp
jl
push
imul
call
fnstsw
push
jmp
push
scas
push
scas
cmp
push
push
dec
lret
sub
fwait
jno
ror
sti
dec
cmp
add
and
incl
jbe
push
pop
fcmovu
pop
push
pop
rorb
sbb
dec
push
cmc
cli
dec
push
push
mulb
and
shll
jge
ret
mov
aas
loope
inc
xlat
lds
in
lret
cmc
xlat
insl
dec
lds
fdivr
inc
push
dec
shlb
in
cmpsl
xor
cmc
sub
dec
icebp
xor
lods
test
std
xor
mov
lret
popa
jl
sahf
pusha
dec
lcall
lods
cltd
clc
std
sti
jmp
mov
pop
add
cmc
int
jb
dec
imul
mov
stos
cmp
fcomip
pop
mov
sbb
and
sarb
rcrl
xor
sub
popa
jmp
pop
mov
dec
lock
pop
mov
imul
jge
sti
mov
mov
out
xor
js
hlt
pushf
and
mov
std
fstl
push
xor
xchg
lds
and
ret
pushf
jge
clc
test
icebp
push
mov
in
sti
push
inc
mov
sbbb
jecxz
outsl
dec
push
ja
fmul
jge
popa
inc
add
fstpt
pop
stos
aaa
adc
xor
hlt
add
sahf
jnp
cld
pop
fucomp
add
cmp
push
pop
inc
xchg
jg
imul
addb
jae
pop
mov
cmp
adcb
cmp
jno
testl
push
repz
mov
xor
dec
aad
in
in
push
ljmp
inc
inc
inc
aad
in
in
rclb
leave
not
std
cli
mov
sbb
jnp
jmp
icebp
sarl
jge
lock
sar
into
mov
dec
lcall
in
iret
icebp
sti
data16
stc
mull
std
jecxz
pushf
scas
repz
in
dec
ja
popf
out
lret
int
jnp
gs
repz
stc
xlat
sti
std
cmpsl
mov
sahf
push
cmpl
mov
or
mov
push
cmp
mov
idiv
fwait
add
jge
sbbl
pop
fsubr
nop
imulb
xor
mov
dec
shll
repz
xor
cmovle
shr
jge
dec
xchg
inc
fidivs
shl
push
lods
rorl
pop
jae
aaa
push
add
adc
int
jge
or
repz
add
sub
inc
pop
loop
sbb
jns
inc
call
mov
int
leave
out
popf
dec
xchg
lds
sub
mov
popa
mov
out
dec
loopne
adcb
jg
aaa
loop
div
jmp
mov
loope
out
icebp
movsl
loopne
loop
outsb
test
lret
lahf
sbb
push
or
dec
test
in
push
iret
fnstcw
leave
xchg
dec
rcrb
ljmp
jno
cmc
andl
sbb
xlat
push
aad
cmpl
pop
orl
add
int
sti
jns
insb
clc
pushf
push
leave
mov
sub
mov
or
xchg
mov
cmp
insl
movsl
jge
sarb
scas
jbe
jle
pop
cmovle
mov
dec
stc
rcrb
jno
ret
or
orb
movsl
or
leave
clc
stos
into
add
roll
ds
add
push
int3
stos
and
rorl
inc
dec
leave
inc
cmpsl
cmc
popf
jl
lods
loop
sbb
loop
lds
pop
repz
jae
xlat
mov
out
cld
xchg
repz
inc
out
lock
stc
inc
fildll
popa
jmp
loop
test
push
jge
std
sub
pop
mov
clc
lcall
movsb
sar
pop
aaa
popa
xlat
lcall
bound
mov
mov
pop
push
in
loopne
mov
loope
dec
fmuls
dec
add
pusha
leave
rcr
pop
jae
test
jns
sti
mov
add
fimull
dec
mov
pop
dec
sub
lret
imul
dec
mov
mov
lea
xlat
dec
push
dec
fcmovnb
mov
out
add
test
pusha
js
fcom
lcall
sti
push
test
maskmovq
cmc
fidivrl
icebp
jmp
ljmp
xchg
out
pop
push
enter
mov
lods
inc
lret
mov
xchg
mov
cmp
int
cmc
addr16
out
push
mov
pop
pop
leave
in
lret
scas
xchg
repz
pop
icebp
out
enter
sbb
lcall
push
test
cmp
sarl
mov
jmpw
inc
adc
fs
mov
iret
out
nop
xchg
fildll
loopne
pop
nop
iret
out
cmp
out
jns
test
cwtl
imul
out
cmc
push
cld
lahf
into
sti
sar
jl
stos
adcl
or
hlt
mov
and
shl
out
jno
scas
outsl
mov
lods
fsubrp
add
dec
call
movsb
xchg
push
hlt
dec
sahf
push
inc
fwait
movsl
inc
rolb
xor
sahf
xor
je
jl
movl
jae
movsl
xchg
stos
xor
cltd
repz
jno
add
fstp
mov
dec
aad
lock
out
dec
int
cs
jns
pop
push
or
push
mov
dec
mov
aad
jmp
out
test
clc
push
add
iret
dec
inc
sub
testl
popf
in
loope
jns
sbb
mov
inc
or
xor
xchg
int
dec
int
clc
stos
fsubp
dec
fldt
fisttpl
jb
jne
pop
stos
rcl
enter
popf
pop
push
aam
pop
cwtl
stos
mov
int
jns,pt
mov
dec
inc
or
mov
push
jge
int
inc
mov
push
test
cmp
mov
repz
lcall
lret
fstpt
pushf
jae
fbstp
cltd
jns
mov
repz
fstpl
ret
int
fsubs
icebp
pop
dec
or
add
dec
outsl
call
leave
lods
rol
ss
cmp
cmpxchg
mov
mov
mov
dec
fwait
jb
js
push
fstl
dec
cltd
cltd
mov
out
mov
cmp
leave
mov
mov
aad
pop
clc
lret
rolb
dec
fimuls
mov
mov
mov
mov
in
out
ljmp
les
call
stos
mov
mov
pop
popa
sarl
pusha
movsl
aas
jmp
pop
maskmovq
imull
or
imul
mov
mov
iret
dec
imul
out
sbb
pop
push
leave
mov
xor
pop
aad
out
cltd
mov
cmpsl
cmp
xchg
sbb
ljmp
test
ss
jo
enter
lea
pop
dec
iret
cmp
scas
fnstsw
test
cli
cmp
lock
test
mov
std
xchg
lds
jbe
js
jae
and
popa
andb
sarb
dec
outsb
xlat
out
xchg
dec
out
mov
sti
jns,pt
xchg
mov
xchg
cmp
enter
popf
stc
sbb
cli
jo
or
push
mov
cmp
out
nop
mov
fidivrs
xlat
mov
mov
dec
xchg
out
pop
cmc
in
cs
jmp
lock
loopne
fsubp
jo
cmp
mov
repz
fmull
shrl
cmp
test
mov
mov
cmp
fstl
orl
in
mov
push
shll
xchg
cmc
fstpt
stc
xlat
adc
xchg
lock
adc
lcall
dec
mov
mov
aad
shl
pop
leave
sbb
mov
cmp
in
xor
iret
cmp
lret
nop
cmpsl
loop
jp
cli
lret
dec
rclb
popa
iret
jne
das
ljmp
leave
int
jns,pt
mov
add
dec
mov
mov
xor
push
cmc
ret
cmp
mov
cmp
popf
enter
jmp
popa
in
pop
rorl
push
popf
jp
popa
pushf
mov
mov
mov
fucom
rcrl
mov
mov
ret
stos
add
lahf
stc
jge
push
xchg
jl
sbb
lods
mov
call
add
cwtl
rcr
lret
dec
rorb
pop
push
lods
outsl
imul
cwtl
cmpsb
add
push
inc
mov
pop
loopne
ljmp
leave
jns
cmp
std
outsl
iret
lret
test
cli
fidivl
negl
push
cld
arpl
add
clc
xchg
test
shr
mov
sbb
jmp
in
sub
push
jg
xor
mov
fstpl
sub
rorl
sahf
lds
adc
jge
pop
fisubrs
jg
filds
add
or
call
mov
cmp
popa
icebp
push
aad
shr
cmp
std
xlat
sub
ret
add
fstps
iret
rcrl
jmp
mov
mov
mov
ror
loope
push
xchg
dec
scas
sti
mov
push
lea
cmpl
mov
sti
ret
adc
fstpt
in
adc
xlat
cld
notb
push
aad
pminub
and
pop
lahf
mov
or
cmp
cmpsb
xchg
loope
sti
pop
call
les
jnp
loope
in
pop
adc
repnz
fdivp
fisubrs
nop
shlb
xchg
adc
cltd
fisubrl
ret
fsubr
jbe
mov
in
mov
dec
addr16
stc
fucomp
rcl
in
inc
data16
or
shrl
pop
leave
out
mov
std
mov
push
push
mov
pop
push
incl
push
mov
jp
push
out
test
jmp
sarb
pop
jns
out
in
loopne
int
jno
fcoms
iret
mov
pop
shl
in
xchg
fmulp
cmpsl
out
cmc
stc
xchg
movsb
mov
enter
popa
in
pop
jno
sub
and
ljmp
cmc
out
pusha
add
dec
jns
sbb
aam
rclb
mov
jle
cwtl
xor
into
add
jge
dec
xchg
mov
mov
std
pop
add
rol
cmc
push
dec
in
leave
pop
pushf
ds
cmp
dec
and
ljmp
dec
cmpsb
push
mov
iret
mov
jp
repz
pop
sbb
xlat
sbb
loop
push
in
rcrl
in
imul
push
mov
jp
es
xchg
pop
stc
shl
cltd
enter
shl
out
not
mov
mov
cmp
inc
jmp
icebp
ret
ljmp
push
jae
int
xor
xchg
fstp
jmp
out
xlat
out
outsl
mov
loope
mov
icebp
xlat
dec
enter
add
icebp
xchg
cmpsl
lods
sbb
pop
test
push
jle
insl
int3
ret
push
leave
sub
in
mov
adc
sbbl
cmc
out
dec
orb
rclb
and
lock
shr
test
pusha
mov
jecxz
loopne
cmc
fcom
mov
inc
rcr
rorb
adc
jmp
jmp
cmpsl
push
loope
xor
pushf
int
shr
shl
lea
out
fsubr
lods
jmp
imul
xchg
lea
jne
std
fwait
icebp
fcoms
mov
push
lahf
insb
and
sti
jle
rolb
in
dec
mov
add
sub
mov
aad
lock
sub
xor
pushf
add
mov
sahf
push
movsb
nop
mov
inc
xchg
jle
lods
aaa
adcl
std
ja
movl
adc
rol
xchg
aaa
pushl
mov
repz
mov
lahf
ljmp
mov
cld
sbb
ljmp
rolb
ja
insl
dec
mov
aam
neg
sti
lcall
out
gs
dec
fs
dec
sti
push
std
cmc
stos
cmpsl
push
cmc
xchg
test
dec
dec
lret
push
loopne
xchg
jmp
stos
push
lret
pop
imul
adc
fistpl
adc
inc
pop
mov
fisubs
adc
aaa
divl
dec
push
fcmovb
mov
gs
hlt
jno
lahf
test
dec
dec
push
fimull
dec
ja
fisttpl
jns
inc
add
pslld
jbe
lds
fnsave
xchg
sbb
nop
ja
lds
dec
sti
push
adc
mov
mov
fstl
lea
aaa
xor
pop
mov
mov
pusha
xchg
iret
iret
fdivrp
fists
ss
mov
pop
sub
gs
psubq
frstpm(287
fistl
aad
push
out
push
dec
push
fistps
rorb
pop
int
cmp
popf
stc
sbb
cli
jo
sti
cmp
fsubs
in
popa
fistps
jo
fucomip
in
cmp
jge
lret
popa
loopne
mov
imul
mov
out
shrl
mov
out
in
cmp
iret
push
mov
dec
scas
test
pop
lret
add
add
fstpt
jnp
mov
in
icebp
test
repnz
popa
dec
fwait
jae
jbe
enter
adc
shll
mov
cli
sbb
popl
rolb
push
lcall
aad
pop
jl
int3
add
popl
shlb
mov
test
popf
neg
push
and
std
adc
paddw
push
ss
outsb
testb
jnp
cmp
cmp
jge
dec
jl
vshufps
stc
nop
rorl
jmp
loope
ror
psrld
fldenv
or
enter
fstpt
pusha
push
testb
fldcw
fnstsw
fnstenv
xor
hlt
xchg
lea
shl
jno
pop
fisttps
dec
dec
sbb
pop
in
pop
xchg
fcmovnbe
lahf
pop
jecxz
loope
out
arpl
mov
fldt
data16
out
repnz
vunpckhpd
orb
xor
inc
das
popa
mov
xlat
rorb
mov
rcrl
jo
xlat
xor
cld
loopne
lds
lods
loopne
js
repz
dec
xlat
iret
jnp
xchg
mov
ret
push
push
cmp
push
dec
test
jmp
cld
cmpsb
leave
xchg
xor
ret
imul
fcomip
iret
mov
clc
into
mov
fadd
repnz
movb
faddp
movsb
dec
es
cmp
jl
pop
xchg
and
sbb
fdivrl
add
jnp
out
int3
xor
add
push
mov
incl
and
nop
iret
sar
js
pop
or
loopne
lahf
lret
cmp
jne
loopne
outsb
dec
pop
jns
add
outsb
jb
cmp
insl
add
fdivl
or
or
bound
push
mov
jg
adc
inc
sbb
mov
div
lahf
sti
mov
test
mov
imul
mov
mov
lods
add
xor
and
jp
jle
aas
fistpll
mov
add
jno
or
test
leave
pusha
jb
jae
mov
lahf
bnd
or
mov
xlat
cmpsl
xchg
cli
enter
mov
xchg
jmp
dec
test
cmp
popa
scas
cmpsl
fadds
add
mov
mov
sbb
jge
fstpt
dec
leave
add
cmp
cli
adc
pop
mov
lahf
outsl
out
dec
fistpl
jl
cltd
adc
rorl
andl
cs
jns
jg
mov
fcmovb
arpl
jp
call
das
aaa
pop
and
stos
xchg
dec
hlt
adcl
push
jl
pop
lret
movb
fdivl
nop
mov
sahf
clc
stc
jmp
iret
adc
jecxz
aad
in
jl
dec
xchg
jns
pop
aaa
int
sbb
mov
idiv
cli
mov
pop
nop
outsl
fistpl
lret
xlat
pop
push
xchg
cmp
fiaddl
int
push
aas
mov
pushf
fwait
stc
lock
pop
cmpsl
rorl
fldenv
lret
mov
mov
xlat
mov
mov
iret
or
out
adc
cmp
sti
cmp
cmc
outsl
push
push
rcrl
repz
testb
out
repz
rcr
leave
clc
cld
jecxz
pushf
dec
icebp
dec
ja
icebp
fldenv
test
das
mull
jecxz
out
fsubrl
shl
rcr
hlt
fimull
xchg
xor
clc
pop
push
sar
std
dec
testl
in
dec
pop
nop
testl
rcl
ljmp
in
in
pop
mov
int
pop
imull
lods
mov
outsb
xlat
jp
clc
loopne
nop
divl
lods
iret
xor
mov
ja
leave
fsave
sub
mov
pusha
pop
aas
aam
and
lock
inc
cs
cmp
paddsw
mov
ret
jecxz
pop
xlat
jmp
lock
push
insb
adc
js
mov
add
inc
mov
adc
outsl
testl
notb
pop
addb
mov
fldl
pusha
icebp
add
mov
rcr
pop
mov
iret
jmp
mov
aaa
inc
gs
and
out
loope
push
jmp
mov
cmp
mov
sti
sbb
mov
jo
jno
incl
or
ljmp
mov
out
fstpt
roll
cmpsb
pusha
dec
mov
int
neg
aad
cmp
loope
popa
mov
sbb
dec
ljmp
fwait
mov
sti
pop
icebp
jns
cmc
cwtl
in
xchg
lods
cmc
lea
in
mov
mov
pop
lret
std
cmp
ja
push
sti
pop
in
lcall
inc
leave
mov
xor
jno
jno
insb
lret
outsl
dec
cli
xor
out
in
out
inc
loopne
mov
cli
loopne
int
fstp
pop
fsubrs
jmp
js
pop
fldl
sti
stc
sbb
dec
inc
aad
repz
sbb
mov
push
test
call
lds
fiadds
popf
leave
jmp
scas
testl
mov
mov
fadd
sti
lock
jle
push
push
ficompl
xor
icebp
cld
or
mov
aaa
jno
jle
insb
push
inc
mov
xlat
add
insb
loop
add
mov
pop
lcall
dec
sti
rorl
inc
out
xchg
mov
shlb
fcoms
mov
cmpl
aad
fstl
jge
inc
xor
std
add
pop
loope
stc
rcl
xor
jmp
roll
enter
push
aad
test
mov
pop
cltd
mov
hlt
fmul
cmp
cltd
in
rol
dec
dec
insl
lea
loopne
inc
jge
idivb
cli
into
cmpsl
test
dec
push
mov
mov
divl
out
nop
inc
das
mov
push
mov
cltd
cmc
mov
mov
stos
test
push
lea
imull
sub
mov
pop
insl
shr
and
repz
inc
xlat
mov
adc
clc
lahf
inc
jb
lahf
lahf
in
mov
fisttpl
ffree
ja
cmp
mov
gs
icebp
fbstp
jge
inc
mov
repz
aad
arpl
inc
es
lds
int3
cmp
mov
shll
jge
push
push
sbb
mov
fstpt
push
xlat
js
jne
push
jle
aaa
inc
cli
mov
int3
cmp
or
add
cmp
cs
mov
cmpsl
loopne
inc
testb
repz
shlb
shll
xor
in
dec
ss
daa
mov
cld
jecxz
in
sti
call
data16
push
ds
sti
insb
fbstp
mov
pusha
out
push
inc
lods
fdivs
stc
jle
mov
push
in
mov
popa
daa
shlb
call
add
aam
pusha
stc
aas
jnp
inc
movl
mov
aam
mov
outsb
xchg
icebp
adc
push
out
arpl
push
jge
lock
in
bound
fs
mov
cmp
scas
add
pop
je
and
mov
fs
popf
test
outsl
push
cmp
jg
or
aaa
int3
mov
shl
add
outsl
out
xchg
iret
dec
popa
dec
test
repz
clc
enter
mov
js
inc
rolb
aad
dec
loopne
fildll
repz
jnp
and
mov
ficoml
mov
fld
shrl
int
test
cs
int
pop
lcall
mov
in
je
in
add
test
stos
int
pop
out
mov
and
clc
xchg
lahf
xchg
nop
lahf
mov
add
in
and
lahf
stc
add
enter
fdivr
stos
cmpsl
out
lds
lret
fisubs
lcall
fisttps
mov
ret
cltd
out
or
jae
cld
fnstenv
icebp
out
in
orl
xchg
push
cs
sub
scas
repz
neg
cmp
jno
pop
fidivrl
lcall
mov
idivl
mov
mov
enter
mov
jne
pop
and
dec
mov
icebp
aam
lds
loope
cmpsl
enter
fmul
dec
rcl
ds
fucom
pop
cmc
jl
shrl
shl
dec
mov
cmp
jno
pop
stc
imul
fstpl
popf
imul
fwait
pop
add
in
out
imul
sarb
jno
enter
repz
mov
negl
jmp
rcl
idiv
mov
aas
popf
insl
mov
sbb
xlat
fcmovnu
mov
aas
cmc
jbe
xchg
shlb
int3
mov
std
repnz
cli
pushf
fiadds
xchg
call
mov
cmpsb
negl
stc
adc
stc
sub
outsl
imul
call
lods
rep
xchg
push
cwtl
adc
hlt
clc
fsubrl
leave
push
add
cmp
push
es
inc
icebp
rcrb
rep
pop
add
cld
leave
mov
aad
out
iret
in
out
int
in
mov
stc
out
mov
jmp
insb
in
nop
dec
std
popa
jg
out
adc
insl
in
int
xlat
push
push
xchg
pop
call
sbb
and
ret
fidivrl
not
cmp
stc
data16
std
std
dec
loopne
stc
pusha
cmp
aad
cmp
xchg
loop
lods
icebp
bnd
dec
pop
push
popf
pusha
mov
cmp
aas
aad
out
in
jmp
addr16
push
mov
out
ror
fdivrs
xor
out
out
sbb
dec
test
xchg
fs
into
mull
push
fistps
pop
pushf
xlat
iret
gs
dec
in
imul
xchg
cmp
aas
flds
push
push
jns
jmp
stos
andl
leave
dec
sbb
in
stc
inc
repnz
adc
inc
mov
jo
push
repz
ja
mov
scas
int
rorl
xor
loope
aas
aad
jg
pusha
dec
and
in
cwtl
inc
fidivs
mov
mov
cmpsl
sbb
ffree
leave
gs
clc
dec
sbb
outsl
scas
cwtl
movl
lret
push
sti
outsb
dec
lret
scas
cmpsb
fsts
pop
sti
loopne
fisubrl
leave
ret
repz
ds
jo
pop
rolb
xor
cmc
fimull
mov
add
mov
jns
outsl
imul
je
dec
sti
pop
adc
fwait
incl
mov
xlat
push
cwtl
fdivs
dec
int
scas
xchg
loop
lock
jg
lds
loop
and
and
and
stc
pop
in
mov
fidivrl
push
cltd
enter
out
ficompl
pop
fdivrs
push
fmuls
push
jnp
fadd
inc
das
mov
pop
mov
xchg
xlat
dec
dec
mov
lds
mov
pop
sti
mov
xor
jecxz
mov
aas
add
inc
lcall
cmc
fnstenv
iret
insb
stos
xlat
sti
add
rcrl
push
in
mov
fimuls
lahf
dec
sbb
hlt
pushf
lahf
dec
sbb
sti
ret
test
icebp
inc
cmp
shll
fsubs
jg
cld
mov
not
outsb
push
sbb
pushf
xchg
shll
xor
mov
pop
in
add
pop
jl
mov
push
mov
movsl
push
dec
mov
repz
scas
clc
rcl
lret
fsubrs
dec
pop
shlb
js
stos
out
int
dec
repz
test
jecxz
sbbl
mov
inc
les
rorl
cmp
jno
dec
sbbl
pop
clc
add
sub
inc
jnp
sub
icebp
jmp
push
xchg
lcall
jmp
jno
xlat
ljmp
jns
icebp
pop
out
add
mov
pop
pop
pop
in
rcr
les
imul
fcmovnu
in
jecxz
inc
add
lret
cli
rcr
pop
enter
mov
hlt
repnz
jae
fstps
or
fs
xor
sub
jno
jno
mov
out
insl
shll
hlt
and
hlt
int
mov
rcr
cld
insb
fldenv
fcom
loopne
pop
div
stc
fnsave
out
stc
daa
mov
stc
loope
decl
mov
stc
jns
push
js
cmpl
mov
sar
loopne
pusha
stc
mov
shl
lret
fldcw
push
mov
push
insl
std
mov
loope
mov
inc
mov
xor
dec
les
mov
mov
call
fcomps
pop
mov
leave
mov
fwait
roll
jns
gs
cmp
aas
jmp
enter
std
jle
jmp
jno
mov
sti
faddl
cmp
fdivs
neg
iret
cmp
mov
lahf
mov
in
popf
jmp
jno
lahf
icebp
test
mov
mov
out
in
ficoms
mov
out
pop
mov
ss
stc
call
insl
jne
cmc
loope
aaa
xor
aad
pop
cmpsb
and
mulb
inc
imul
cltd
adc
sarl
rorl
cmp
scas
lcall
fistps
inc
jecxz
icebp
jle
push
mov
shl
mov
push
mov
test
rcrl
pusha
pop
test
repz
aam
jno
jnp
cmp
mov
sti
gs
add
lcall
notl
sbbl
mov
xchg
mov
xlat
loopne
xchg
in
inc
rcr
jg
push
stos
into
dec
jne
inc
mov
hlt
sbb
scas
std
xchg
imul
adcl
jbe
shrb
mov
pop
pop
cmc
dec
dec
add
add
jle
lea
into
xchg
jge
xchg
dec
popf
ret
mov
cmp
push
movsl
lahf
stos
icebp
lods
mov
adc
mov
fstpt
enter
ret
pop
rcrl
dec
pop
jno
out
jno
xor
mov
mov
pop
fadds
pop
jbe
popf
lret
fcmovu
push
icebp
or
call
mov
mov
in
mov
inc
fistps
icebp
jnp
cmp
mov
cld
out
jns
mov
lret
into
icebp
mov
push
pop
xlat
cmpsl
icebp
popf
std
jo
lods
icebp
sub
xchg
iret
addr16
rcll
into
repz
jmp
mov
rorl
roll
cmp
fucomip
icebp
sbb
aam
repz
mov
in
out
jecxz
push
xchg
scas
mov
call
test
pop
stos
ljmp
jmp
cmpsb
repz
out
mov
dec
sti
fwait
test
fdivrs
dec
pop
mov
pop
nop
hlt
lret
stos
push
fistl
nop
sbb
fcom
enter
or
add
dec
inc
dec
mov
icebp
in
mov
cmpsb
scas
outsb
aaa
in
outsl
icebp
dec
xor
call
in
imul
das
sub
insl
ret
fwait
pusha
sub
xchg
pop
xor
into
inc
shrl
repnz
add
jne
lea
stc
ljmp
loopne
dec
dec
push
cli
sbb
pop
fimull
popa
iret
int
leave
ds
popa
sbb
push
insb
lret
int
fistpll
ret
mov
sti
jmp
loope
ret
sti
jge
mov
out
insl
inc
icebp
jge
dec
mov
aaa
mov
lahf
int3
scas
sbbb
in
add
lcall
fs
aad
mov
push
xchg
lods
mov
in
shlb
repz
pop
adc
ss
cld
mul
in
jne
dec
push
les
fdiv
push
mov
push
scas
xchg
in
icebp
jmp
cmp
push
jge
stos
mov
jne
push
dec
jo
pop
rcrb
repz
loopne
into
aad
gs
aad
push
pusha
fisubrs
sub
cli
pop
sarb
cmp
aas
enter
mov
out
inc
mov
pushf
shll
dec
outsl
std
psubusw
jmp
xchg
gs
arpl
insl
in
inc
xchg
shlb
cmp
fdivrs
loope
mov
out
xchg
das
loope
repz
pusha
lds
in
adc
cmp
scas
int
fcmove
rcll
mov
mov
lret
jge
xlat
stc
sarb
in
pop
and
adc
clc
mov
push
shl
inc
ror
mov
jo
add
push
adc
sarl
sarl
push
pop
cmp
mov
inc
aas
push
ret
pop
xlat
icebp
movsb
test
xor
jecxz
mov
imulb
inc
mov
inc
out
iret
jmp
scas
ror
int3
jbe
jl
mov
mov
fcmove
pop
fucomp
sbb
cmovg
cmp
fcom
fxch
pop
clc
lret
cltd
in
cmp
pop
cmc
cmpsl
movsl
sahf
notl
fnstcw
pop
test
mov
pop
cmpsb
mov
xor
icebp
push
sti
jg
aad
outsb
in
cmp
cmp
mov
mov
fnsave
pop
in
pop
gs
hlt
int3
out
loope
push
icebp
pop
rcr
jno
rcrb
iret
lret
pop
mov
jmp
rcl
adc
mov
out
inc
in
mov
sarl
mov
leave
fcomi
fsubrs
lods
xchg
cmp
mov
call
aas
movntq
idivl
lret
rcr
call
mov
sbb
mov
push
jmp
out
cmp
dec
fwait
pop
call
les
test
inc
lcall
lds
sbb
mov
mov
icebp
loopne
sub
jge
movsb
icebp
loope
adc
xchg
fwait
iret
push
fcomps
cmp
shr
in
in
cld
or
inc
out
fwait
enter
shrb
cmp
int
in
cltd
dec
pop
mov
leave
mov
lret
in
pop
andb
inc
fstps
ljmp
loope
das
repz
push
xlat
in
mov
rep
ret
pop
popa
fucom
inc
pop
int
mov
les
push
ds
std
pushl
fsubr
mov
scas
jecxz
mov
mov
shrb
mov
nop
iret
jmp
xlat
push
pop
out
cmc
in
mov
lahf
mov
int
and
lea
fdivs
mov
xchg
mov
shrl
jmp
lret
inc
std
dec
clc
out
stos
sarb
cmp
jmp
aad
test
repnz
rclb
stc
push
cwtl
add
mov
sarl
movb
mov
inc
or
xchg
sti
jbe
into
jg
push
push
inc
out
mov
pop
ret
xor
xchg
jmp
xor
roll
lret
in
outsl
xor
ret
lea
insb
in
outsl
pushf
cltd
aaa
in
addr16
in
mov
cmp
mov
test
inc
mov
lret
pusha
int
mov
fldln2
cmp
xlat
xor
popf
out
jge
or
jle
in
dec
mov
repz
rcr
cli
aas
test
js
cmp
dec
xchg
lock
or
jbe
cmp
pushf
rcr
repz
mov
rcrl
aas
mov
jmp
fstpt
lods
mov
mov
scas
int
lods
sub
negb
cmp
icebp
inc
xchg
dec
in
pushf
fcomi
add
bound
cmp
cmp
mov
mov
mov
lea
inc
jg
xchg
cmp
xchg
mov
out
jp
dec
or
in
lret
inc
push
cld
cmp
or
cli
into
ss
xor
stc
jmp
rclb
mov
dec
jns
sti
in
xor
dec
cmp
jmp
dec
pop
stc
imul
xor
fdivrs
ja
bound
inc
sub
ficoms
inc
or
out
aad
inc
repz
mov
push
lods
mov
es
xchg
mull
cmp
cli
out
jl
dec
pop
cmc
out
ret
mov
mov
add
in
fnsave
loopne
das
inc
rcrl
loope
xlat
or
out
or
mov
lcall
lahf
lods
cmc
fstp
test
mov
jae
inc
dec
insb
ret
icebp
mov
rcl
cltd
rorl
jo
out
shrl
xlat
pusha
xchg
inc
test
mov
and
or
mov
cmp
in
movsb
aas
out
imul
xchg
aaa
test
int
cmp
sbb
xchg
mov
stc
stc
xchg
imul
lcall
mov
testl
mov
jmp
clc
cmp
es
fmulp
adcl
imul
lods
lods
loope
in
lret
mov
pop
or
sbb
rcll
cld
stc
push
pushf
lds
cmp
cld
lods
push
icebp
or
adc
aad
jl
rcl
in
ss
ficompl
sarl
cltd
cmp
cmp
aad
xchg
fstl
stc
inc
lret
mov
rcll
lahf
sbbb
out
dec
pop
int
push
test
call
cld
mov
call
mov
mov
push
into
pop
jno
int
or
xlat
icebp
ficoml
daa
dec
jmp
xchg
cmpsb
mov
fcmovu
repz
or
jmp
xchg
psllw
movsb
sub
shlb
outsl
inc
popa
pushf
dec
push
rol
jno
out
sbb
push
fmull
aam
stc
call
hlt
inc
insl
jmp
fwait
pop
mov
ss
mov
stc
or
in
dec
push
pop
lods
hlt
pusha
jno
cltd
imul
out
fildll
or
or
in
jmp
test
mov
push
mov
sar
in
mov
jmp
sti
jmp
lret
imul
les
cmc
stc
mov
aam
aaa
xchg
leave
in
out
ss
imull
popf
dec
sti
shll
testl
imul
xchg
fstpl
les
cld
jae
loope
aad
aad
pop
lods
mov
mov
int
ljmp
fsubrl
iret
fadds
out
dec
cld
iret
mov
mov
sarl
int3
leave
divl
daa
push
xchg
outsl
cmp
rol
sbb
and
subl
dec
test
lret
scas
repz
mov
xor
in
xchg
mov
scas
fidivrl
xchg
flds
outsb
rorb
sub
test
adc
cmp
jmp
aas
push
test
stc
cld
insl
push
cmc
lea
mov
push
out
insl
hlt
divl
neg
fildl
icebp
cwtl
jmp
pop
push
jns
xlat
push
out
inc
inc
enter
cmp
imul
ljmp
insl
out
push
out
dec
arpl
insb
in
rol
mov
hlt
imul
jmp
aaa
in
ret
leave
pop
sbb
stc
in
stos
push
call
pop
cmpsl
sbb
out
in
mov
dec
lods
repz
shl
ror
dec
add
xchg
iret
push
test
xlat
push
ficoms
popf
sbb
andl
int
mov
cli
ljmp
add
jmp
push
lea
push
into
push
pushf
sbb
mov
push
mov
add
jge
fadds
inc
push
mov
mov
mov
fucomp
adc
loop
add
fdivl
cld
les
movsl
popf
das
aad
orl
scas
stos
xchg
mov
das
add
fisttps
pushl
bound
in
scas
test
mov
loopne
mov
cld
rcr
insl
icebp
fists
fstps
sub
add
aaa
leave
xchg
cmpsl
or
cwtl
sub
popf
call
in
es
inc
mov
lods
out
imul
inc
or
fadds
fldl
mov
js
jne
lods
mov
lock
lret
mulb
jg
lret
lods
outsl
imulb
cs
jle
orl
int3
outsb
in
jb
fisttpl
push
cmc
int
repnz
movsl
adc
lea
subb
ret
sub
push
cmc
in
lahf
cmc
jmp
fucom
mov
sbb
mov
shll
popf
sbb
jg
push
negl
lods
mov
push
sbb
repz
stos
sti
insl
mov
cmp
fxch
leave
xchg
repz
pop
cmpsb
add
push
shrl
sbb
in
jle
jno
xchg
test
jecxz
jg
out
and
clc
in
movsb
cli
jp
scas
data16
stos
mov
xchg
repnz
jb
outsl
lock
jge
mov
push
std
imul
lret
cmp
insl
popa
xorb
push
add
loope
je
leave
mov
jl
fs
xchg
les
and
cmp
mov
fidivrl
insb
inc
push
in
int
jmp
call
mov
xchg
lock
popa
test
push
mov
cld
js
in
sbb
xor
sti
clc
lret
mov
inc
adc
outsb
sahf
xchg
out
stos
std
in
pop
lcall
loopne
xchg
dec
jle
cmc
out
jecxz
sti
mov
mov
cmc
mov
das
mov
imul
inc
push
dec
vpmaxub
out
cmp
test
mov
pop
inc
inc
cmc
outsb
insl
popa
test
mov
fcomi
imul
jmp
stc
js
lahf
icebp
fisttpl
mull
mov
js
pop
jmp
lock
mov
vpackssdw
std
xchg
mov
ret
mov
movsl
sahf
inc
xorl
mov
dec
stos
idivl
mov
jg
push
imull
in
int
mov
push
cmpsl
or
cmc
jbe
lods
mov
lds
lret
mov
jb
and
mov
sbb
fnsave
push
insl
movb
inc
mov
icebp
in
mov
pop
inc
push
fcompl
repz
xchg
jge
xor
or
xchg
test
fucompp
insl
pop
inc
mov
imul
loopne
sub
ljmp
test
in
xchg
pop
mov
mov
out
add
in
mov
test
loop
xor
mov
jo
pushf
mov
test
jp
loopne
lods
js
insb
mov
push
xor
adc
jb
cmp
aad
inc
lahf
iret
mov
and
into
jg
insl
movsl
imul
lea
out
out
cmc
in
mov
lock
jnp
pop
movsl
icebp
push
add
lods
mov
popa
mov
loop
shrl
xchg
repnz
int
out
push
stc
imul
pop
cs
in
in
cmp
clc
push
sub
fmul
repz
jg
jnp
stc
rcrb
cmc
in
loopne
sti
mov
iret
push
push
inc
fstps
in
mov
mov
data16
fldcw
xchg
div
ffreep
js
leave
jmp
jbe
fwait
cltd
push
cltd
stc
in
in
sub
jp
mov
in
jge
xor
cmc
jge
add
jo
inc
xchg
out
fadd
popa
mov
addr16
imul
leave
in
out
lds
js
shll
movsb
stc
loop
test
pop
movsl
xchg
mov
dec
jne
inc
sbbb
mov
jmp
pop
lahf
int
or
mov
xchg
loop
stos
shr
call
pusha
fstps
enter
jge
sti
pop
sub
or
inc
out
sbb
inc
dec
incb
mov
xor
lret
loope
jbe
and
sub
stc
push
dec
ljmp
cld
out
icebp
cmpsl
add
inc
and
mov
mov
mov
sub
xor
push
mov
arpl
jmp
stos
repz
fsubrl
push
mov
add
jb
adc
cmpsl
int3
add
mov
shrl
das
add
xor
cltd
andl
lock
pop
divl
cmp
negb
mov
dec
jle
cmpsl
mov
sub
cld
mov
xchg
cs
fiadds
pop
loope
sub
dec
aas
fs
icebp
add
pop
add
ret
fcoml
cmpsb
inc
mov
dec
lahf
or
inc
jbe
shrl
icebp
and
adc
test
aas
mov
jb
movsl
cmp
cmp
stos
push
mulb
push
push
mov
xchg
push
cmc
addr16
and
adc
jb
fnstcw
xor
push
add
lahf
xchg
roll
or
ret
cli
dec
aam
lock
sbb
jge
rclb
lahf
xor
and
aam
es
dec
in
xchg
mov
sbbl
mov
or
into
out
mov
repz
insb
pop
movsl
mov
mov
mov
add
push
into
adc
dec
mov
cmc
out
loop
sub
xchg
stos
cmp
sbb
inc
shrb
out
xchg
rorb
lea
test
jg
dec
shrl
mov
dec
dec
xchg
dec
gs
push
jle
outsb
roll
or
sbb
cli
or
out
jns
js
add
dec
data16
cmp
adc
pop
inc
cs
xor
andl
icebp
dec
popf
pop
les
scas
jo
xchg
leave
ja
imul
dec
cmpsb
lds
adc
push
xchg
dec
aad
fildl
add
add
jge
sbb
xchg
stos
mov
repz
xlat
push
adc
dec
push
cli
gs
xchg
mov
in
fnsave
daa
in
and
jb
rorl
pop
neg
add
ffreep
aas
cmpsl
test
pop
xor
rcrl
add
icebp
lods
gs
roll
mov
jecxz
cmp
mov
icebp
rcr
stos
xchg
cmp
cmpsl
out
rorl
push
int
loop
mov
jmp
add
jl
shl
lods
imul
loope,pn
inc
cmp
enter
test
mov
mov
cmp
lahf
mov
js
xchg
in
std
add
pop
outsb
fldt
push
mov
out
ja
sbb
jge
out
in
push
pushf
sar
into
add
inc
fisttpll
shr
pop
push
fistps
jl
nop
xchg
jle
ficomps
imul
andb
daa
leave
das
dec
jle
add
xlat
pop
std
int3
mov
loop
mov
xchg
fdivs
pop
pop
fdivl
std
sbb
addr16
je
and
test
fnsave
jg
push
lods
mov
xchg
sub
popa
dec
nop
movsb
cmp
mov
mov
ja
shlb
movsl
cmp
aam
mov
and
fcomip
jge
dec
mov
jmp
imul
nop
xchg
sub
leave
inc
and
sub
pop
leave
lds
inc
add
es
sub
push
xchg
imul
mov
jge
jl
add
dec
xor
rolb
adc
or
clc
inc
sub
jl
inc
and
jg
jb
data16
clc
aam
js
xor
outsl
sbb
lea
xor
jo
adc
stc
fnsave
sbbb
ret
int
je
jns
repz
aas
stc
pop
in
adc
jbe
sub
cmpl
mov
xchg
add
jg
sahf
inc
aad
mov
jl
cmc
sub
xchg
nop
sti
rclb
movb
leave
std
sti
cltd
shll
cld
lcall
test
xchg
stos
rolb
jge
out
fiadds
mov
popa
scas
sahf
movsl
lret
ret
lahf
in
cmp
cltd
and
sbb
cmpsb
lods
std
lahf
and
mov
add
mov
in
mov
or
shll
cwtl
lods
notl
lahf
and
dec
imul
arpl
sarb
clc
jg
decl
mov
xlat
aaa
test
shlb
outsl
push
fadds
cld
orb
jno
stc
and
add
call
xchg
les
and
cwtl
add
add
clc
push
cmp
cmp
loope
data16
cmpsl
repnz
loop
lahf
add
stc
dec
lea
jmp
aam
ret
ljmp
jnp
nop
and
or
jl
mov
pop
xor
out
jle
add
add
fnstsw
cmp
sub
jp
cltd
lock
push
mov
sbb
cwtl
dec
adc
pop
fdivrp
adc
jns
inc
cltd
xor
stc
inc
xor
pop
mov
incl
jnp
and
popf
jge
lahf
push
frstor
jmp
sbb
jge
jecxz
and
inc
out
lea
mov
cli
mov
pop
orb
sub
jae
jne
stc
andl
pushf
jmp
addb
jb
jge
daa
sub
test
shl
cmp
xor
in
adc
loopne
inc
sub
mov
pop
or
jno
cmpl
and
fcmovu
pusha
out
subb
popf
outsl
pop
out
enter
bound
sbb
jbe
add
jo
lret
das
push
xor
cmc
and
jo
jae
js
xchg
mov
out
test
ret
cmp
lock
mov
xor
jnp
jae
xor
insb
inc
lock
pop
fwait
clc
lock
mov
jge
daa
cmp
mov
dec
cli
sub
mov
lods
mov
leave
xor
leave
mov
fbstp
adc
jecxz
cmp
sbb
and
pop
cli
cmp
lahf
jnp
sbb
mov
sub
add
jno
add
jno
std
sarl
scas
sbbl
mov
jb
jo
mov
std
sbb
jecxz
cmpsl
popf
repnz
inc
aas
mov
cmp
lock
decl
pop
fcomp
mov
testl
mov
in
adc
js
adc
clc
cld
pop
jg
popf
sub
fwait
repz
aam
rorl
jmp
loopne
sbb
jge
insb
sti
jmp
scas
inc
xor
std
popl
lock
fdivr
mov
das
pushf
outsl
cli
inc
push
insb
rcr
xor
out
sub
push
loopne
subl
xchg
and
das
and
and
lahf
loopne
clc
jg
inc
icebp
in
fnstsw
out
sti
ljmp
sti
add
jle
stc
cli
inc
das
int
lret
std
out
mov
std
mov
mov
jg
mov
jmp
inc
xchg
fildll
pop
std
lcall
jge
std
pop
pop
and
fdivr
rcrb
test
repz
pop
fsubr
jno
inc
call
ljmp
jge
shll
jo
mov
add
rcll
cmpsb
sub
sub
jl
jo
push
divb
jg
das
sub
jmp
cli
jno
dec
pushf
popf
sbb
inc
incb
jo
stc
std
popf
imul
jmp
inc
sub
enter
and
xchg
or
in
shrb
mov
fldcw
out
jle
test
std
leave
jbe
lods
insb
js
xor
ljmp
and
mov
mov
inc
ret
jns
jmp
cld
mov
xchg
cmp
sub
test
adc
jnp
pop
jae
adc
adc
xlat
push
lret
cmp
jae
mov
sub
jb
pop
jge
stos
aad
std
inc
add
cmc
sbb
inc
addr16
sub
push
lahf
das
scas
add
clc
hlt
cwtl
lock
lods
xor
mov
lock
in
xchg
mov
pop
divb
rolb
mov
ficompl
mov
pop
mov
xchg
mov
mov
push
xchg
or
sub
jp
imull
loopne
jmp
out
clc
fisubrs
lret
repz
icebp
ret
out
pause
stos
adc
mov
ss
cmc
jp
shl
mov
xchg
aaa
xchg
ljmp
jl
cmp
lcall
movsl
fstpl
popa
repnz
enter
push
imul
jnp
insl
outsw
jle
mov
sbb
filds
hlt
in
imul
jg
cmp
scas
stc
enter
std
iret
push
push
gs
repnz
std
test
push
cmp
add
jno
scas
in
in
call
rcr
inc
jg
pop
scas
rorb
push
fistpl
mov
and
mov
leave
jge
std
repz
notl
shrl
jns
xchg
ljmp
xor
addl
adc
lahf
fildl
cmp
jg
bndldx
and
fs
enter
sbb
jnp
clc
dec
stc
std
jns
notl
testb
add
jp
cmc
or
out
cmc
add
addl
jnp
faddl
jns
mov
push
push
or
aam
test
push
jg
sub
add
jge
mov
daa
dec
stc
aam
jmp
stc
movsb
cmpsb
xor
ret
add
jno
popa
js
push
add
dec
imul
inc
cmp
add
jo
sub
ja
sbb
enter
mulb
add
outsl
out
outsb
in
insl
in
add
addr16
in
in
sbb
pop
sbb
push
aad
aam
iret
dec
jg
dec
int
int3
mov
add
inc
les
aas
mov
mov
mov
ss
mov
xor
lods
sub
add
cmpsb
movsl
and
lahf
pop
sahf
push
popf
sbb
xchg
pop
xchg
push
xchg
adc
adc
add
xchg
xchg
push
test
icebp
lea
add
std
xchg
push
gs
inc
mov
push
clc
andl
lock
mul
mov
add
jge
push
fstps
xchg
out
cld
out
outsl
or
ja
xchg
and
adc
mov
lods
leave
leave
bound
sahf
gs
push
adc
pop
ljmp
add
and
mov
cs
push
pop
jle
lock
fstl
popa
cmpl
roll
push
cmp
cmp
mov
insb
das
mov
add
xchg
pop
cli
enter
adc
xor
fwait
pop
or
sti
popa
fwait
cmp
leave
cmc
incb
insb
sahf
repnz
test
dec
movsb
mov
lods
or
push
mov
and
xchg
cmpsl
dec
aad
out
cmp
sbb
das
and
test
cwtl
sbb
jp
leave
inc
loop
repz
fldenv
daa
out
xchg
lcall
or
jg
add
xchg
push
in
add
dec
inc
test
daa
fnsave
add
cli
or
add
pop
outsb
mov
inc
pop
daa
jmp
mov
outsb
test
inc
jb
fsubs
inc
mov
in
xchg
xchg
inc
rolb
ds
add
jp
stos
cmp
sbb
push
cmc
mov
roll
cld
cmp
pop
imul
inc
loope
dec
inc
dec
inc
nop
add
sbb
sbb
add
into
dec
mov
testb
nop
call
fstl
jle
cmp
jecxz
mov
sti
negl
repnz
out
push
loopne
add
in
out
pop
pop
andl
add
sub
xor
shll
test
dec
pop
add
mov
cltd
mov
sub
or
sub
ss
cmp
xor
loopnew
out
adc
add
cmp
dec
mov
jg
add
addr16
pop
add
push
sahf
sub
push
in
add
rorb
outsl
sub
or
pop
inc
dec
adc
pop
in
clc
push
mov
call
cmpsl
test
lods
xor
popf
cmp
orl
or
in
add
lds
cltd
shll
divl
xchg
mov
mov
fs
sbb
ja
scas
xor
fwait
mov
sahf
xchg
jge
lcall
mov
adc
inc
xor
cmpsl
xor
cli
mov
jb
or
test
lret
add
icebp
push
in
add
sahf
fabs
add
pushf
loop
add
sbb
ret
adcb
aam
sub
loop
xor
imul
shlb
sbb
mov
aam
add
test
and
shl
mov
xor
bound
adc
jp
push
inc
sub
stc
int
mov
cmpsb
dec
stos
push
shrl
add
pop
mov
add
mov
movsb
add
and
negl
xchg
or
jle
jmp
pop
mov
into
sub
xor
pop
stos
dec
mov
popa
repz
add
jno
mov
lods
push
out
jbe
test
pop
inc
jp
loope
jp
or
jb
mov
bnd
cmpsl
add
pop
adc
subl
push
shlb
stos
stos
mov
aad
xor
imul
cmpsb
nop
push
add
hlt
jbe
fstpl
jp
jl
les
jae
movsl
inc
cld
pop
add
adc
mov
or
sub
js
mov
jp
jne
incl
shrl
mov
xchg
daa
add
inc
adc
push
push
loope
aam
add
inc
inc
lods
jecxz
mov
and
xchg
test
push
jge
push
xchg
and
fs
cmp
xlat
push
xor
rolb
sub
add
mov
and
dec
rcl
lcall
jbe
jnp
orl
repz
xchg
fwait
clc
add
xchg
lods
popf
pop
mov
mov
add
mov
fisttpl
sbb
adc
xchg
pop
ss
aad
outsb
add
xchg
rcrl
add
fs
jl
lret
jp
cmp
les
ljmp
push
dec
inc
roll
push
mov
addr16
push
jne
push
ret
xchg
or
add
xor
cli
inc
dec
mov
cltd
lahf
aas
dec
enter
mov
repz
fldenv
jne
jp
add
jp
dec
xchg
and
add
ret
fs
jp
sub
test
mov
in
ds
add
das
mov
icebp
inc
mov
adcl
pop
add
jnp
call
test
mov
push
pop
mov
cmp
aam
mov
scas
pop
dec
nop
jae
add
popa
jge
sub
les
test
sarl
hlt
sub
xorl
or
mov
jnp
lahf
cmp
jge
ficoml
addb
mov
repnz
inc
push
jns
rcrl
cwtl
in
add
xor
mov
jb
and
jg
and
fwait
test
sti
cmpsb
mov
pop
mov
mov
xor
and
int3
notb
aad
out
and
lea
pop
rorl
fildl
mov
mov
xor
insl
int
cs
adc
xlat
or
mov
add
jnp
pop
fsts
adc
add
mov
adc
add
push
int3
mov
mov
push
sahf
loope
sar
mov
push
sbb
push
adc
ret
or
in
push
inc
jbe
subb
sbb
pusha
add
push
sbb
pop
dec
sub
xchg
ja
jp
push
cli
outsl
inc
adc
and
iret
mov
jnp
mov
mov
push
inc
sub
lcall
bound
loop
add
std
mov
dec
jecxz
stos
mov
bound
jl
mov
jp
insb
stos
xchg
sarl
cmp
add
push
ror
add
push
shl
fs
add
pop
into
mov
hlt
and
insb
stc
mov
gs
jecxz
and
ja
dec
arpl
add
dec
lds
pop
jb
or
cltd
pop
out
xchg
pop
lahf
shrb
push
les
or
arpl
in
add
sbb
rolb
jmp
add
movsb
shll
test
cmpsb
mov
aam
imul
lahf
testb
cmpsl
or
pop
and
add
fucomip
mov
in
scas
add
jge
lcall
jecxz
cmpl
lcall
pusha
jnp
cs
adc
push
push
loopne
insb
dec
inc
cmp
or
xor
fcoml
jmp
mov
push
cmp
arpl
sahf
mov
add
dec
enter
mov
sub
sbb
push
les
gs
push
or
das
dec
cld
mov
sti
in
mov
idiv
fwait
shl
pop
call
test
adc
jg
lcall
divl
adc
mov
popf
cld
jp
dec
jge
cmpsl
adc
shlb
mov
jp
mov
or
out
repz
icebp
xchg
or
dec
sub
jg
jmp
and
add
jge
mov
jb
mov
popf
inc
aad
outsl
popa
add
not
push
aam
dec
es
stc
adc
add
mov
xor
sbbl
add
xor
arpl
data16
testb
and
pop
outsl
dec
add
pop
cld
jmp
std
inc
xlat
jb
jge
cltd
mov
cmp
std
es
loopne
jg
pop
fcomps
scas
jecxz
cmp
mov
fld
jg
and
pop
xor
pop
lahf
lock
mov
cs
cld
scas
call
std
xchg
imull
shl
add
in
jmp
js
fidivrs
in
cmp
aas
jns
es
loopne
xorb
jo
dec
cltd
mov
neg
jg
xor
dec
fs
jnp
and
jecxz
pusha
jno
dec
test
cwtl
jne
cld
jo
dec
cltd
mov
testl
fistpll
adc
jno
std
sti
out
bound
xor
add
call
fistpll
test
idiv
mov
jge
and
leave
mov
jg
or
sbbl
lea
xchg
insl
jge
insb
fwait
imulb
icebp
pushf
and
js
add
int
mov
pop
xchg
cli
jno
or
mov
push
pusha
pop
mov
idivb
fcoml
mov
out
push
pop
mov
cmc
mov
out
push
fucom
jne
lahf
jne
cmp
hlt
jl
loopne
stc
sarl
dec
je
mov
push
pop
repz
mov
stc
std
mov
ret
loopne
int
push
mov
mov
call
nop
jb
push
popa
es
std
jge
mov
sub
and
out
jle
add
nop
add
xchg
fxch
cmpl
xchg
dec
mov
loope
cltd
mov
pop
push
sbb
test
cltd
mov
cmpsl
push
mov
or
jp
sub
test
loopne
mov
sbb
xor
sti
jge
std
adc
and
sub
add
add
xor
pusha
sbb
lea
or
das
popf
das
shll
stos
pusha
sti
int
sti
popf
das
sbb
pop
decl
test
or
push
xchg
out
pusha
jmp
cmp
cmp
inc
repz
orl
je
and
lea
or
and
in
sbb
adc
adc
add
fnsave
cmp
jge
in
fldl
movsl
xchg
lcall
clc
jns
jp
stc
mov
jo
in
pusha
jmp
cli
xlat
xlat
loopne
stc
sti
sbbb
jnp
in
iret
in
call
fistpl
mov
xchg
add
faddl
mov
mov
mov
imul
dec
add
test
imul
mov
leave
enter
and
xor
in
fdivl
iret
clc
into
int
es
pop
jmp
pop
mov
popf
cld
std
dec
jge
xor
cld
sbb
mov
cmp
mov
jle
aam
je
cld
sbb
fs
dec
fidivrs
sub
mov
inc
aaa
sub
shll
fidivrl
scas
fisubrs
fs
add
ret
addl
jg
inc
subb
outsb
lahf
in
loopne
imul
pop
ret
ja
jbe
pop
adc
add
inc
arpl
sub
push
pop
xor
mov
scas
add
inc
add
xchg
in
gs
andl
push
adc
and
int
icebp
test
inc
push
cli
or
scas
ror
out
out
and
addr16
mov
mov
inc
sub
and
xchg
adc
jmp
jno
fistps
test
add
mov
sbb
add
or
add
stos
jecxz
nop
dec
jae
ljmp
mov
into
jle
js
dec
call
lcall
mov
xchg
sub
inc
xchg
test
xor
jb
aam
add
xor
scas
fildll
cmp
ror
or
add
mov
fs
add
inc
sbb
inc
xor
xor
push
daa
add
dec
shlb
or
fdivrs
icebp
out
add
mov
jmp
jns
xor
xchg
or
testl
fwait
add
pop
adc
adc
add
and
or
mov
sub
out
xor
add
xchg
fistl
daa
insb
add
pop
std
imul
xor
push
and
repnz
mov
ret
in
add
sbb
lahf
push
cmp
cwtl
xchg
sbb
cmc
mov
and
movsl
mov
or
scas
sub
dec
pop
mov
cs
xorl
or
xor
jo
ret
test
add
fdivs
add
cmp
les
sbb
ret
sub
or
jge
es
xor
and
fwait
mov
idivl
dec
mov
and
shrl
sbb
insl
mov
out
cmp
xchg
leave
pop
push
mov
jno
sbb
fadds
lea
lcall
fcomip
lds
out
sbb
subl
dec
jge
add
mov
ret
jle
in
popf
push
imul
jmp
pop
jl
adc
mov
pop
out
lret
push
dec
adc
sbb
jo
pop
leave
cmp
icebp
in
push
cmp
xchg
jge
inc
jnp
and
mov
add
cltd
cmp
cmc
xlat
sbb
adc
aad
in
mov
pop
jmp
pop
mov
pop
pusha
jno
mov
mulb
pop
xlat
iret
jg
mov
addr16
or
dec
push
cmp
adc
imul
stos
testl
in
xor
push
hlt
fsin
jnp
out
add
movsl
jl
pop
cmp
jmp
mov
mov
rcrl
xchg
out
xor
push
cmpsb
push
pusha
decl
cwtl
mov
cmp
daa
repnz
hlt
push
popf
jg
scas
dec
cld
sub
push
ret
in
in
sti
cld
ds
add
sahf
push
into
in
push
cli
lds
or
rcrb
jno
cmp
jno
pop
push
in
push
fs
outsl
jno
cmp
jge
cmpsb
test
outsb
stc
cli
mov
inc
jo
out
sbb
sti
pushf
sub
movsb
iret
out
ror
repz
mov
shlb
outsl
clc
stc
mov
fdivp
jno
pop
hlt
movsl
ret
cmp
jb
xchg
xchg
gs
jmp
xchg
jb
adc
ja
pop
enter
sbb
rclb
jecxz
daa
xchg
adc
inc
lea
mov
push
ljmp
and
cmpsb
lcall
in
mov
cmc
ljmp
dec
push
jne
subb
in
pushf
jbe
pop
addl
jle
hlt
shll
add
jge
sub
test
rorl
jmp
mov
pusha
jmp
xchg
movsl
test
jno
inc
jecxz
daa
sbb
sub
jmp
ja
add
icebp
mov
jno
neg
jo
stos
lds
ffreep
imulb
jge
into
mov
lds
jp
incb
sub
jne
or
jb
jg
jmp
cmc
aaa
sarl
jl
mov
adc
mov
add
call
cmp
jmp
repz
cwtl
leave
xchg
rolb
lret
fbld
jmp
repnz
pop
fists
pop
pushl
mov
aam
jb
cmp
push
xchg
cmp
std
mov
add
or
divl
clc
aam
xchg
pop
jg
notl
mov
fstpl
stos
dec
es
les
int
mov
icebp
pushf
rcrb
mov
popf
fdivl
es
leave
cwtl
mov
mov
scas
jge
cmp
jnp
int3
mov
jne
in
sub
dec
xor
in
pop
xchg
sub
lcall
scas
in
fidivrl
xor
jne
mov
shrl
xor
or
shrl
cmp
cmpsl
pop
mov
pusha
xor
xor
push
sbb
or
adc
or
and
sti
fwait
test
popf
add
sbb
stc
push
scas
jno
sub
mov
jno
cmp
dec
clc
out
std
mov
in
jne
jns
ret
imul
push
mov
std
in
cmp
scas
ret
cltd
js
mov
ret
fisubrs
xchg
js
mov
mov
add
mov
sbb
int
push
loopne
outsb
push
ja
mov
popf
dec
aad
out
das
in
fucomip
jo
pop
outsl
ds
cs
lods
outsl
pop
sbb
out
jecxz
sbb
xor
xchg
push
sbb
jnp
int
test
mov
mov
outsl
dec
inc
inc
cmpsl
int
mov
fucom
lock
jno
mov
lock
sub
std
jno
jmp
jl
pop
scas
and
sbb
cwtl
and
sarl
pop
ss
pop
xor
or
push
out
fidivrl
sbb
ret
pop
mov
adc
leave
inc
jbe
std
jle
loopne
popa
cmpsb
leave
xor
inc
sbb
sbb
cmp
mov
pop
insl
xor
jp
fdivrp
leave
jecxz
xor
mov
push
fnstsw
mov
call
aaa
fisubrl
data16
xchg
loop
pop
or
fidivrs
loop
cs
mov
inc
jae
push
call
lahf
xchg
shrb
jle
cmp
mov
ljmp
call
xor
push
push
mov
jmp
jle
ss
adc
cmp
cmpsl
dec
in
dec
leave
in
mov
add
leave
outsb
clc
imul
or
js
jge
outsl
nop
std
inc
addr16
out
test
outsl
std
xor
out
fcomip
pop
std
scas
fwait
mov
imul
inc
fwait
pushf
jne
jl
std
adc
pop
in
cli
das
push
outsb
sbb
inc
iret
cwtl
jne
jl
std
or
pop
push
gs
adc
lds
sbb
lcall
pop
andl
mov
xorb
push
orl
fidivs
insb
dec
std
popf
shl
clc
dec
test
adc
daa
push
xchg
rcr
cld
jmp
jns
incl
addb
mov
std
add
sub
popf
lock
lods
jno
rcll
mov
iret
jbe
push
daa
jge
jp
mov
outsb
mul
lods
adc
out
jbe
add
std
std
jns
mull
stos
mov
movsb
push
mov
fidivrl
mov
out
add
pop
ja
rcrb
sahf
test
jp
lret
scas
call
shrl
inc
std
xor
or
addb
inc
loope
stos
push
inc
and
push
in
divb
imul
out
data16
call
ljmp
out
addr16
out
mov
jno
sub
sub
test
cmp
loope
data16
mov
icebp
pusha
dec
mov
add
ret
xor
and
stc
jecxz
shlb
outsl
lahf
cli
lds
loope
mov
outsb
xchg
leave
shlb
addr16
movsb
push
push
xor
jl
add
cmp
and
lahf
inc
fcoml
data16
mov
cli
sub
aam
sub
cld
xor
insb
pop
incb
ret
daa
out
fstp
add
frndint
xor
inc
fcmovnu
frstor
pop
mov
subl
ret
mov
sbb
hlt
fdivr
imul
pop
cld
inc
xchg
and
lods
pop
out
out
inc
repz
jmp
test
clc
std
mov
mov
xor
outsl
insl
jbe
ret
sbb
jecxz
jmp
sti
js
xchg
add
fs
xchg
in
jns
sbb
sub
clc
cld
pop
sbb
inc
add
or
aas
push
sbb
xor
fsubrs
add
mov
gs
mov
xchg
jne
insl
sbb
mov
push
ds
sti
and
sub
xor
pop
jnp
sbb
std
jmp
out
jmp
jo
jns
stc
mull
paddusw
jp
jno
daa
invd
push
jp
push
clc
hlt
push
dec
xor
std
jle
jp
or
mov
jg
adc
pop
xchg
mov
jp
xor
dec
mov
jae
pop
shl
xchg
jge
mov
cld
repnz
lcall
add
nop
into
sub
inc
xor
push
mov
out
cmpsl
cwtl
stos
xor
imul
iret
pop
out
jle
lods
and
mov
add
xor
ss
jmp
xor
jle
ds
dec
stc
mov
test
push
popa
jnp
test
icebp
insl
add
inc
pop
out
subl
jmp
scas
jb
ffree
into
test
or
sbbl
fdivl
movsb
shrl
mov
dec
mov
mov
cmp
popf
bound
sub
cltd
shll
cmc
or
mov
push
push
bnd
rcll
mov
sub
or
mov
test
cmpsl
push
ficoms
mov
add
leave
call
cmpsb
scas
icebp
mov
mov
pusha
mov
and
inc
and
aas
inc
adc
lcall
or
fistpll
int3
and
xchg
cmpl
sbb
mov
add
sub
andl
outsb
or
hlt
lds
mov
aam
cltd
cmpsb
mov
test
and
pop
xor
adc
mov
insb
rcr
xchg
shl
add
fwait
mov
inc
jp
lahf
xor
mov
inc
rolb
adc
and
cmp
and
ficompl
cltd
xor
stos
rorl
notb
scas
xor
adc
adcl
inc
cli
inc
mov
push
stos
and
movsb
loop
sbb
out
cld
or
pop
mov
jecxz
add
mov
dec
fmuls
add
xor
sbb
jbe
push
xchg
xor
mov
xor
bound
adc
rolb
and
jbe
inc
sbb
xchg
or
loopne
mov
push
adc
fmul
adcl
lahf
add
rclb
jecxz,pt
lahf
add
insl
adcl
inc
adc
jp
mov
and
jb
add
lea
popa
mov
add
ljmp
add
movsl
mov
outsl
mov
in
test
repnz
fsubs
fildl
and
aad
dec
hlt
mov
dec
scas
and
sub
aas
or
fildl
hlt
or
stos
push
mov
test
mov
sbb
cmp
cmp
popa
fs
jecxz
mov
imul
adc
push
lds
popa
push
rcrl
xor
out
cld
xchg
adc
mov
cld
xlat
int
aas
sbb
jns
push
loope
push
mov
and
dec
clc
in
test
mul
imul
push
out
ret
mov
cmp
imul
fs
mov
cmpsb
dec
test
popa
dec
daa
notrack
push
cmp
insl
shll
inc
add
insb
add
inc
andb
mov
and
mov
adc
lcall
test
adc
js
jbe
subl
je
sbb
mov
daa
pushl
cmpsb
pusha
mov
add
inc
stc
or
xchg
scas
or
ficoms
inc
jne
add
cwtl
shll
sahf
cmp
mov
push
jle
xchg
mov
inc
fstl
lret
add
inc
pop
pop
dec
pop
pop
inc
and
mov
stc
jge
adcb
xlat
aaa
add
and
mov
mov
loopne
mov
stos
enter
mov
cmpsb
fidivrl
pop
mov
mov
or
mov
std
jp
pop
aaa
mov
push
stc
cltd
jp
cmpb
insb
sub
jns
or
mov
mov
jnp
repz
mov
dec
jg
and
adc
cli
mov
movsl
jl
lcall
fsubl
dec
fstpl
std
popf
cld
jmp
out
std
lret
cmp
jecxz
shlb
lock
in
push
out
xor
mov
sub
mov
and
cli
stc
mov
jno
cmp
jns
icebp
mov
hlt
push
jmp
sti
sbb
add
cmc
xchg
idivb
jns
jle
mov
cmp
add
enter
xchg
test
and
push
xor
lea
loop
inc
jno
mov
ss
sbb
mov
cltd
add
and
push
add
inc
mov
out
jge
cmpsl
sbb
jl
std
jg
shl
gs
jge
lea
inc
imul
incl
mov
repnz
dec
daa
mov
dec
popf
ror
dec
mov
mov
jno
mov
mov
jne
cli
rorb
jmp
or
sub
sbb
and
iret
jno
clc
stos
scas
lret
rclb
aas
jns
leave
ss
jae
daa
mov
cmp
mov
jl
or
jnp
and
jnp
xor
adc
repz
xchg
stc
mov
jb
mov
sbb
flds
xchg
test
xchg
fwait
shl
push
clc
lods
jmp
stos
loop
call
popf
clc
push
dec
inc
dec
lret
jne
gs
shl
push
adcl
and
inc
in
leave
ds
les
jno
hlt
or
mov
in
jo
orb
test
push
aam
es
add
inc
sub
addr16
test
arpl
or
les
pop
mov
andb
cli
jge
icebp
aas
fisttps
lret
mov
in
ja
push
stos
and
jp
fmul
jne
sbbb
adc
mov
outsb
add
icebp
pop
push
fnsave
ja
jge
gs
in
jne
clc
mov
jl
clc
dec
mov
in
movsl
adc
stos
adc
loopne
pop
test
jg
rol
stc
and
test
loope
dec
push
mov
pop
pop
ret
inc
push
xchg
or
add
out
test
xor
out
out
sub
leave
jno
mov
jae
mov
sbb
sahf
or
fs
ds
inc
add
push
lahf
sbb
sbb
pop
or
loop
stc
test
ret
and
sbb
jmp
add
scas
movsl
xchg
divb
adc
lds
lahf
push
inc
cmp
cli
daa
pop
mov
in
xor
fiadds
movsb
push
xchg
mov
mov
cs
fdivrl
lahf
push
cmp
mov
adc
mov
dec
sub
loope
fcoml
hlt
push
adc
and
outsl
mov
push
out
sub
xchg
mov
adc
add
fwait
dec
jecxz
xchg
movsl
adc
push
dec
pop
cmpsl
add
jo
sti
inc
js
add
add
sbb
pusha
fsubl
divl
pop
add
or
mov
je
adc
mov
or
xor
mov
in
inc
loop
cmp
lcall
sub
lds
and
mov
out
mov
sbb
jmp
add
cmp
add
pop
mov
add
add
rcrb
nop
xor
aaa
xchg
xor
or
lods
int3
les
aad
inc
inc
dec
inc
xchg
insb
dec
fst
cmpsb
dec
mov
add
insl
scas
add
and
shrb
jae
xchg
push
lahf
or
out
add
add
mov
add
mov
adc
pop
aaa
mov
xchg
jbe
add
or
loopne
out
nop
cmp
jb
stos
sbb
nop
xchg
add
jecxz
or
adc
inc
jns
test
xor
push
push
rorb
mov
cli
ficoms
xchg
mov
xchg
out
mov
xchg
pusha
inc
movsb
jne
xchg
pop
xchg
int3
mov
lret
mov
push
mov
xchg
push
cmp
xor
cmp
divb
push
and
sbb
in
popf
pop
xor
pop
icebp
dec
add
sbb
test
xchg
ret
pop
add
into
sub
sub
and
mov
push
mov
push
dec
in
cmp
sbb
push
or
out
xchg
out
inc
loope
pop
mov
lahf
bound
push
daa
loope
subl
add
clc
jle
shlb
mov
scas
pop
add
dec
sbb
rcrl
jg
out
dec
add
clc
sbb
sbb
and
jne
lea
add
push
add
add
mov
xchg
cli
adc
fwait
fs
aad
push
icebp
pop
jae
test
cltd
adc
add
fwait
and
repz
mov
aas
dec
sub
jle
pop
test
inc
ss
stc
jns
push
cmc
in
out
cmp
sub
mov
imul
sti
test
es
mov
jbe
mov
cmpsb
out
and
inc
cmp
adc
mov
les
js
in
inc
repnz
or
adc
test
loope
sub
arpl
pop
fs
rorl
bound
fst
jb
xchg
mov
push
xlat
mov
out
adc
rcrl
mov
adc
pop
mov
repnz
push
dec
popa
xchg
out
sub
into
add
stos
lds
cli
dec
inc
dec
push
inc
out
xchg
mov
add
lret
and
push
jp
jecxz
cmp
mov
jbe
je
xchg
test
add
dec
adc
lock
or
xchg
jle
psrlw
xchg
cmp
cmpsl
rolb
cmp
xorb
popf
jle
xchg
inc
hlt
ret
push
pop
xor
stc
and
movsb
pop
loope
adc
imul
int
pop
loope
xchg
imul
mov
pop
add
in
jmp
dec
mov
dec
mov
in
roll
dec
sub
jp
inc
push
leave
lods
lds
in
movsl
cwtl
cmpsl
add
pop
cmpsl
xor
insb
insl
xchg
inc
stc
bound
inc
lock
mov
jmp
cwtl
jmp
add
add
sub
bound
mov
les
jo
rorl
data16
add
mov
add
sahf
xchg
dec
daa
mov
jle
subl
adc
cmp
or
mov
int3
add
sub
adc
js
cwtl
cmp
jp
arpl
add
xor
xchg
mov
jl
add
inc
ret
loope
inc
nop
cmp
dec
and
out
xchg
adc
push
call
hlt
lret
push
adc
movsb
add
fimuls
mulb
insb
rcl
add
and
add
mov
add
adc
jge
rcll
loope
aam
xchg
jge
jmp
sbb
mov
orb
push
stc
push
pop
jnp
es
scas
mov
mov
and
ljmp
dec
adc
je
pop
sbb
ja
inc
pop
in
lock
daa
add
int3
bound
repnz
add
repz
in
pushf
shrl
adc
mov
mov
cltd
xor
lock
add
cwtl
add
mov
xchg
pop
out
sub
xor
nop
cmp
or
lea
lahf
jns
aaa
outsb
mov
dec
cmpsl
les
jmp
jno
add
xor
mov
test
or
ss
push
add
and
aas
xor
and
add
cmp
fcomps
subb
adc
test
push
cmc
out
jae
mov
or
sbb
mov
sub
xor
scas
out
ss
std
pop
fnsave
add
add
inc
xor
or
mov
xchg
lret
jb
iret
mov
pop
sbb
sub
rorb
add
stc
and
mov
into
adc
cmp
add
clc
add
aaa
sub
pop
scas
test
ja
idiv
aas
sar
inc
pop
es
stos
test
or
push
add
repnz
std
scas
sub
jb
push
inc
addr16
test
in
in
jae
xor
sub
or
sar
std
clc
dec
imul
nop
pop
or
filds
push
add
jmp
leave
cli
pop
fisubrl
add
push
xchg
aam
out
dec
stos
outsb
loop
fs
frstor
fbld
sbb
jp
push
dec
out
icebp
rorb
enter
pop
out
insb
pop
imul
sub
or
bnd
cwtl
jno
scas
xor
lidtl
xchg
lahf
adcb
movsl
rclb
add
lret
mov
mov
pusha
out
adc
fistps
test
sub
imul
inc
fiadds
test
sbb
mov
pop
dec
dec
adc
xchg
icebp
or
adc
roll
cmc
sub
push
add
cld
mov
jb
or
int3
xchg
lret
daa
mov
push
or
add
bound
nop
insb
or
mov
mov
pop
xor
jecxz
jbe
sbb
stos
push
adc
testb
lret
subl
xor
leave
insb
adc
lds
or
mov
sbb
push
mov
or
idivl
aas
pop
jp
jl
pop
outsb
sbb
enter
xchg
lods
xchg
sbbl
das
lahf
movsbl
xchg
or
xchg
jbe
int
cli
pop
scas
mov
loope
inc
jo
push
add
cmp
lea
mov
dec
add
or
rorl
add
ret
sbb
test
cli
or
cmp
xor
add
cld
imul
lret
add
cmp
add
jnp
pusha
xchg
ret
add
lds
add
pop
stos
dec
mov
dec
inc
repnz
push
cltd
xor
mov
xor
cs
or
push
pop
icebp
push
mov
fst
add
pop
popa
mov
mov
add
sub
lds
shlb
adc
leave
or
and
imul
mov
andl
test
incl
adc
xchg
add
ljmp
add
push
addr16
mov
add
out
inc
jg
int3
push
fwait
jmp
mov
pop
lds
xchg
fiadds
aaa
adc
sahf
add
jae
dec
pop
push
test
push
mov
pop
mov
add
hlt
dec
pop
add
fcoms
js
jo
push
iret
popa
cld
and
and
mov
pop
aad
add
loop
lds
sbb
xor
jecxz
xchg
add
data16
lods
add
mov
add
sbb
lret
jo
test
cmp
nop
cltd
call
out
mov
mov
inc
and
adc
xchg
sub
xor
daa
cmpb
add
hlt
xchg
jae
add
rolb
and
nop
sbb
mov
xchg
pushf
adc
sub
andb
icebp
pop
test
std
xchg
jbe
adc
repnz
push
out
lods
movl
je
add
aam
cli
cmpsb
test
adc
cmp
mov
add
sbb
repz
aaa
loope
sbb
push
xor
ja
subl
or
push
mov
loop
or
push
xorb
pop
add
cmp
xchg
add
faddl
inc
incl
xor
or
cmpsl
ljmp
jle
push
out
movsl
mov
mov
dec
add
inc
sarb
add
jl
xlat
xchg
shll
inc
or
cli
or
addl
inc
and
test
repnz
add
fwait
mov
inc
add
sbb
adc
add
in
cmp
mov
stos
outsb
sbbb
jecxz
jbe
push
mov
add
inc
nop
dec
std
dec
popa
cmpsl
add
das
rcrb
clc
and
push
ljmp
mov
in
vmovlps
in
loopne
adc
xchg
std
add
lahf
sbb
pop
imul
add
sbb
add
mov
mov
lods
lcall
shll
ret
out
cmpsb
mov
add
mov
ds
arpl
cld
mov
in
push
add
fisttps
adc
ss
in
iret
decl
jns
pushl
dec
jb
icebp
jnp
or
je
fs
stc
jo
je
and
stc
jo
push
flds
add
mov
add
outsb
call
out
push
jge
mov
mov
push
movsb
cmp
dec
jmp
imul
fstpl
in
outsb
mov
loop
jns
cmc
push
jp
nop
lds
sahf
mov
cmp
rcll
insb
jp
pop
mov
rcrl
mov
imul
xor
push
sub
jp
scas
mov
jecxz
add
xchg
pop
adc
or
add
ds
add
stos
es
data16
mov
lcall
test
iret
lahf
es
mov
cmp
ret
cli
out
test
or
loope
aad
xchg
inc
push
jle
or
jmp
add
loopne
fisttps
add
shrl
push
or
mov
sub
sbb
gs
insb
add
arpl
aad
mov
jp
in
pop
xor
pop
mov
out
cmpsb
pop
pop
dec
arpl
in
adc
adc
xchg
insb
jae
inc
add
push
jo
setl
jns
add
xchg
rcrl
lea
push
add
test
ljmp
dec
xlat
inc
xchg
add
dec
out
mov
pop
sti
movsl
inc
cs
xchg
test
cmp
ret
mov
loop
add
cmpsl
bound
sbb
clc
daa
sbb
add
pop
xchg
add
rcll
fmuls
xlat
sbb
add
sub
stos
add
out
inc
sbb
cmp
inc
cmpl
dec
jmp
sub
nop
cwtl
mov
mov
ss
mov
sub
add
dec
jecxz
callw
imul
xchg
fisubl
pop
std
xor
sti
iret
aad
cmp
xchg
in
cmp
nop
jb
stos
push
sarl
inc
rolb
mov
pop
addb
int3
test
pusha
aaa
stos
lret
aam
push
add
sub
add
push
mov
jbe
adc
or
sub
xchg
lock
lcall
lahf
fs
shll
cmp
sbb
jmp
add
leave
fwait
pop
inc
sbb
jb
push
mov
sub
dec
inc
stos
mov
xor
and
imul
lcall
jl
scas
jle
push
rcr
shrb
mov
adc
push
in
mov
add
or
jbe
add
xorb
mov
call
fimuls
stos
mov
jmp
sbb
in
inc
dec
mov
add
sbb
imul
mov
dec
js
add
xchg
stc
xchg
jecxz
adc
test
dec
hlt
mov
dec
mov
mov
aam
sti
or
sahf
jo
dec
roll
in
mov
push
jg
mov
rolb
movl
sbb
add
outsb
cwtl
rolb
sbb
cmc
testl
xchg
push
mov
jb
in
cmp
cmc
mov
pop
test
push
mov
rolb
mov
dec
test
xchg
add
jnp
ficomps
outsb
push
dec
inc
loope
dec
inc
adc
dec
sahf
xchg
and
lea
mov
cli
ljmp
call
sbbl
xchg
hlt
xor
pop
push
sub
in
lds
jb
outsl
mov
xor
dec
mov
pop
ljmp
stos
andb
jmp
push
add
mov
adc
pop
jle
cmpsl
jb
or
add
add
dec
adc
pop
aam
cmp
repnz
xchg
loop
dec
rcll
adc
movsl
add
outsb
inc
xor
sbb
pop
mov
sti
push
imul
fscale
adc
inc
pop
std
push
cmp
cmpsb
jb
cld
jmp
pop
and
pop
and
cli
push
add
testb
ffreep
mov
or
xchg
inc
adc
out
or
or
add
mov
mov
ljmp
cmp
jns
dec
add
cmpsb
lds
add
cmp
jbe
or
add
movsb
cmpsl
movb
mov
enter
push
xchg
pusha
sti
dec
jo
mov
dec
mov
movsl
add
jae
icebp
inc
xor
sahf
and
adc
add
rolb
adc
push
push
mov
mov
sarl
sbb
enter
xchg
jno
cmp
shll
mov
adc
dec
add
xchg
jmp
cmp
add
add
fiaddl
jle
add
push
outsb
mov
jbe
xchg
mov
pop
loope
icebp
mov
movsl
movsb
xchg
loope
and
out
repnz
add
sbb
or
jne
sbb
outsb
rcl
adc
and
es
mov
mov
or
call
repz
push
or
arpl
lcall
dec
lods
adc
xor
stc
pop
int
sbb
mov
or
jo
ret
adc
adc
popa
push
mov
ret
push
lods
lds
sub
dec
or
add
cs
xchg
dec
stos
push
imul
jmp
cs
and
mov
cmpsb
ret
fstl
jo
test
and
push
add
lret
imul
push
dec
js
jns
xchg
adc
push
das
movsl
mov
dec
into
enter
sbb
sbb
adc
xchg
test
add
add
pusha
roll
lret
sub
dec
or
je
push
mov
inc
sbb
pop
and
ja
mov
and
jle
mov
push
pusha
xor
jle
test
inc
leave
bound
daa
dec
add
in
out
and
push
push
and
sbb
xchg
das
mov
or
adc
mull
dec
add
sub
cmp
mov
out
scas
pop
rcl
and
mov
sbb
sbb
sub
mov
mov
das
sti
sub
dec
ss
stc
inc
out
jle
loop
stc
jp
pushf
fisubs
mov
out
dec
jo
rolb
adc
mov
outsl
sub
adc
cli
mov
sar
das
inc
in
lock
pop
adc
fmuls
pushf
icebp
adc
mov
pop
jno
xchg
in
out
js
cmp
xchg
fldl
inc
clc
push
push
fimull
test
mov
add
movsb
pop
or
out
jne
clc
fisubs
mov
sbbl
mov
out
add
adc
cwtl
fwait
or
adcb
sbb
mov
sub
andl
jns
push
or
sub
sbb
sbb
mov
notl
inc
imul
pop
insb
lods
popa
cli
pushf
add
inc
or
iret
dec
es
mov
sub
and
sub
movsb
jge
divb
lcall
mov
mov
flds
push
fildll
jns
mov
out
popf
loopne
jg
lock
jg
ljmp
cmp
xchg
push
in
in
cmpb
std
and
xchg
pushf
push
mov
sbb
enter
mov
lods
xorb
jle
xchg
clc
loopne
cmp
xchg
add
or
das
sbb
out
fidivs
js
loopne
out
push
adc
popa
mov
add
iret
out
in
inc
out
and
sarl
sti
int3
and
and
xor
and
and
push
sti
and
and
add
sub
or
ja
clc
pop
jne
jge
add
aaa
or
mov
mov
mov
dec
xchg
stc
in
add
or
fwait
mov
jle
out
cmp
idivl
cmp
jp
insb
inc
push
repz
icebp
leave
jle
rcrl
bound
std
sbb
cmp
scas
inc
cmp
sti
loopne
jno
push
inc
mov
icebp
imul
push
sbb
push
sbb
push
jg
in
or
cld
out
subb
es
jns
jo
jl
mov
pushf
jno
sbb
jo
jb
aaa
mov
cld
imulb
testb
rcrl
jl
push
sub
lds
adc
je
push
insl
mov
es
insl
test
js
out
hlt
sti
mov
jp
and
loope
jae
lahf
cmp
jo
sar
push
adc
cltd
test
xchg
in
sub
mul
es
xor
imul
and
cmpsb
sbb
in
js
xchg
adc
jns
jns
jbe
insl
mov
push
cltd
or
push
lcall
idivb
aas
int3
cli
movsb
adc
mov
push
sbb
popf
not
shlb
data16
hlt
imul
imul
ja
enter
mov
push
mov
mov
add
lea
ret
cmp
sbb
mov
outsb
mov
mov
sar
mov
lock
leave
and
movsl
pusha
popf
icebp
dec
cmpsl
lds
loope
add
std
xchg
in
repnz
jbe
sub
inc
cmp
xor
sbbb
ret
fsts
sub
decb
div
jecxz
aad
mov
inc
push
dec
ljmp
repnz
ja
cld
inc
jno
std
jp
jns
std
arpl
cmp
jle
add
popf
jge
jg
ret
mov
mov
je
mov
std
mov
and
mov
aam
dec
add
fiadds
mov
std
repnz
std
dec
jns,pt
cs
pop
in
int
jp
and
std
fimull
sti
cli
jns,pt
cs
loopne
xorb
jo
pop
test
cld
repz
inc
mov
lock
adc
mov
pop
inc
dec
xchg
loopne
subl
pop
data16
cltd
movsb
mov
clc
mov
rorl
std
push
xchg
push
add
test
mov
fdivrs
stc
jmp
mov
inc
mov
pop
jg
mov
pop
xchg
iret
pop
in
aas
jo
scas
push
cmpsl
stos
fwait
mov
fcomip
loop
notl
test
fsubr
jno
or
sub
stc
mov
pusha
jnp
jnp
add
ljmp
xchg
insl
std
ljmp
in
roll
repz
add
in
push
or
in
mov
and
xchg
sbb
jp
sub
jmp
test
xor
test
test
jae
mov
xchg
cmpsb
outsl
inc
imul
sbb
sbb
shlb
sbbb
sub
cmpsl
testl
mov
fdivs
jl
push
mov
outsb
and
adc
add
popf
sub
xchg
test
jmp
xor
jns
add
push
icebp
xchg
divl
jnp
rcrb
jae
sarl
cld
jmp
pop
adc
bound
cltd
mov
pop
notb
call
loopne
outsb
jb
adc
lahf
test
cltd
xor
xchg
icebp
addr16
xchg
xchg
shr
add
pushf
xchg
and
add
jb
lods
pop
hlt
jge
int3
notl
rcll
xchg
data16
xchg
cwtl
sub
push
push
mov
push
jno
jns
xor
rclb
add
jnp
test
stos
jae
iret
sar
jmp
jg
jns
adc
inc
add
stc
pop
das
lods
sti
call
lock
xor
lcall
push
cmpsl
jge
fldenv
jmp
imul
sub
xor
clc
and
js
mov
movsl
repz
lods
es
mov
call
cli
hlt
jmp
lret
add
shll
std
hlt
cmp
push
dec
cs
movsb
mov
jae
cs
cmp
dec
mov
dec
negl
stos
aas
mov
pushf
testl
add
jno
adc
pop
gs
push
js
push
inc
outsl
add
in
test
in
cld
xchg
clc
push
mov
jns
js
mov
stc
leave
jbe
jmp
xor
push
pop
repnz
jnp
js
adc
imul
stos
inc
push
xchg
fists
ret
pusha
movsb
cmp
xchg
add
aad
pop
adcl
xchg
dec
pop
add
into
lret
imul
add
mov
ret
lret
fsubs
mov
stc
mov
push
push
out
xor
mov
lret
inc
cmpsl
xchg
xchg
add
jle
mov
in
mov
enter
imul
mov
lds
stos
xor
jecxz
out
xor
xchg
xchg
sub
add
push
dec
sub
push
aad
adc
imulb
or
xchg
sub
xchg
out
in
adc
shll
mov
cli
mov
test
sub
xchg
sub
add
mov
sahf
jno
sarb
lcall
mov
push
repz
scas
add
push
and
mov
sub
dec
rorl
mov
mov
lret
lds
stos
jae
mov
mov
xor
cmp
jecxz
pop
xorb
jp
subb
icebp
ret
outsb
xor
mov
xor
mov
mov
stos
add
push
pop
testl
dec
cs
cmp
rcrb
sub
sti
mov
ljmp
js
push
and
repnz
mov
lds
repnz
add
adc
add
lods
pop
ret
jne
lcall
test
and
cltd
jg
mov
jg
in
mov
jb
adc
lock
gs
add
sti
pusha
std
clc
xchg
daa
lret
scas
fidivrl
lret
test
in
add
pop
cmp
jle
stos
adc
icebp
jnp
push
pop
mov
loopne
sti
js
pop
test
mov
add
sub
leave
and
call
push
leave
fstpt
or
sbb
fdivs
mov
arpl
inc
lcall
cld
repz
jle
aas
bound
xor
or
loop
cli
mov
mov
loopne
mov
mov
sbbl
pop
cwtl
ljmp
mov
test
xchg
sbb
pushf
mov
sub
popa
stos
sub
and
clc
in
dec
pop
adc
std
enter
cmpsb
fistps
flds
xchg
dec
fidivs
outsb
jl
pop
pop
xor
inc
movsl
aaa
mov
fucomip
sti
add
lods
arpl
fs
enter
jnp
pop
pop
mov
outsl
repz
lock
dec
lock
jle
sub
fstpl
out
jp
aas
pop
mov
shrb
jns
push
dec
lcall
outsl
cmp
fistpl
dec
sub
clc
stos
mov
or
cli
gs
jo
insb
adc
decl
idivb
adc
in
fsubr
ja
popf
lock
xor
js
push
iret
lock
lock
add
xor
aas
add
jae
lods
das
push
clc
cmpl
clc
mov
push
mull
js
mov
ss
push
call
mov
jbe
inc
shrb
ja
clc
sbb
jmp
aam
shlb
pushf
xchg
push
inc
pop
in
shll
inc
jno
adc
orb
inc
js
xor
xor
mov
add
andl
dec
inc
sbb
ss
jns
pop
jg
push
fildll
shrb
cs
cmp
scas
out
aas
cmp
pop
lods
insl
not
sub
or
adc
or
fbld
sub
dec
in
or
sub
ja
imul
aaa
fcmovnu
dec
test
ds
sbb
jns
sti
das
pop
inc
or
scas
shlb
dec
inc
rcll
add
jns
xor
push
pop
mov
sti
add
adc
jg
sub
xchg
mov
shlb
dec
add
mov
fs
sbbb
cs
js
push
out
mov
ja
mov
mov
aaa
xor
add
jecxz
rcrb
andl
lods
aam
jp
repnz
adc
out
sbb
sbb
xchg
push
add
stos
outsb
and
jecxz
xchg
mov
movsl
imul
es
rol
cld
pop
insl
sbbl
lods
add
dec
mov
mov
mov
loop
add
sbb
cli
push
push
mov
lcall
cmp
add
mov
xor
pop
mov
ficoms
jnp
sbbl
adc
jmp
jmp
sub
add
test
mov
mov
push
mov
sbb
andb
pop
push
scas
popf
mov
sub
sar
stos
ss
mov
mov
adc
jo
jae
and
xor
ja
xchg
sub
adc
and
or
jbe
sti
add
js
iret
add
dec
jb
lahf
pop
add
jne
push
stos
lds
ret
dec
xor
sub
and
sub
cmp
adc
into
sti
push
fcmovnu
inc
mov
add
cmpsb
test
or
dec
lea
mov
insb
xchg
fidivl
loop
xor
adc
add
lahf
cmp
orl
je
mov
out
jmp
repz
push
mov
add
fisubs
inc
dec
or
in
out
xchg
out
mov
movswl
rol
in
or
out
inc
icebp
mov
lret
adc
sarl
add
fdivrs
fcomi
cmpsl
pop
push
or
xor
add
adc
into
cmp
jno
sbb
stos
cltd
icebp
xlat
add
mov
rcll
lret
xchg
mov
or
add
or
mov
js
pusha
outsl
rcll
push
xlat
pop
imul
cmpl
arpl
out
lds
and
loopne
shlb
add
and
rcll
adc
pop
pop
scas
add
mov
sbb
pop
fldenv
adc
jg
mov
lods
call
lock
add
loop
dec
movsb
test
add
cmp
sub
hlt
rolb
das
iret
rcll
pop
jmp
xchg
gs
xor
js
jb
add
add
xchg
pushf
lea
push
shlb
mov
xchg
imul
inc
add
stos
jmp
cmp
cld
test
sbb
rorb
je
xchg
mov
mov
or
pop
orb
sub
and
fbstp
scas
sbb
test
ficoms
rcl
shll
or
dec
faddl
pop
sarl
mov
mov
and
stos
adc
jp
int
arpl
adcl
cmp
xchg
fildl
xchg
rolb
add
pop
mov
cld
mov
icebp
adc
repnz
jno
fistps
mov
add
nop
loope
std
loop
inc
jle
mov
sub
imul
inc
add
sbb
mov
lock
jle
fldenv
mov
pushf
dec
jo
call
xchg
test
fiadds
and
dec
inc
lods
sub
add
xchg
lret
rcrb
nop
cld
xchg
int3
fcomps
mov
push
lahf
shll
out
cmp
hlt
push
jg
sub
int
push
pop
sub
cmpsl
pop
js
add
das
lods
popa
and
icebp
add
daa
cmpsl
es
sub
lds
aam
cmpsb
or
xchg
xchg
and
xor
ljmp
movsb
pop
or
cltd
insl
repnz
and
mov
xchg
dec
test
and
sahf
xchg
jg
lahf
aad
add
fistpll
pop
inc
mov
ljmp
mov
adc
cmpsb
jp
popl
pop
jecxz
dec
stos
and
fisubs
add
mov
add
fistpl
mov
lods
mov
jmp
push
fwait
iret
cmpl
xchg
add
jle
dec
adc
insl
add
xlat
les
jae
sbb
sub
jne
xchg
iret
cmpsb
ret
mov
jbe
ja
shr
add
adc
dec
aas
sub
lds
test
nop
xor
cmp
mov
add
repnz
icebp
movsl
xor
add
pop
xchg
add
div
dec
stos
and
inc
or
bound
outsb
sub
inc
mov
shll
sarb
xor
push
jge
cs
leave
daa
mov
cmp
out
mov
iret
mov
imul
mov
jle
jg
mov
flds
stos
mov
popa
cmpsb
mov
xchg
fnstsw
loopne
mov
and
cmp
xchg
fcoml
add
adc
cmpsb
pop
add
mov
dec
jp
je
add
mov
jnp
add
and
sub
test
add
adc
or
mov
jecxz
das
push
jb
outsl
or
fisubl
test
xchg
add
sbb
mov
fstl
outsl
stos
and
je
mov
inc
aad
es
jo
ret
xor
data16
shrb
mov
add
sbb
popf
mov
adc
test
or
mov
scas
add
mov
inc
mov
dec
push
movsb
inc
mov
xchg
xchg
loop
sbb
imul
mov
add
mov
push
add
xor
sbb
cwtl
ljmp
lahf
inc
lcall
xchg
sarl
or
inc
push
outsb
aam
lea
fs
iret
sub
incb
cltd
ret
jb
dec
or
mov
leave
xor
xchg
xlat
mov
mov
jmp
sub
movsb
aad
pop
add
cmp
add
mov
mov
jp
add
inc
pushl
rcll
cmp
mov
test
mov
popf
psrld
jo
repz
mov
add
dec
daa
mov
inc
add
test
add
ljmp
add
pop
pusha
push
add
lock
fidivrs
jl
mov
push
add
fstl
mov
sarl
xchg
sub
push
inc
add
test
push
sahf
test
add
out
jne
jbe
inc
jle
or
es
shll
push
xlat
or
dec
dec
mov
scas
add
call
add
mov
add
xchg
and
push
pop
out
insb
pop
sub
sbb
mov
jp
lock
test
stos
dec
in
sub
push
dec
sub
push
xor
movsb
stc
push
jb
ret
xchg
adc
bnd
xor
add
sbb
mov
cmp
ret
icebp
cwtl
adc
add
scas
mov
push
rcrl
sub
test
out
scas
dec
add
pop
jo
jl
sbb
dec
or
ljmp
int
jb
stos
addl
leave
mov
jp
ja
push
xor
es
in
test
addb
adc
je
movb
mov
in
lea
sbb
ja
adc
inc
jge
add
shll
cmp
mov
lock
cld
xor
cmp
fsubp
adc
add
add
push
lea
std
iret
mov
out
jge
adc
inc
leave
adc
lods
and
daa
popf
mov
or
cmp
ret
jno
xchg
movsb
and
jge
jmp
clc
xchg
mov
push
test
das
and
popf
enter
xchg
xlat
adc
cmp
arpl
jp
inc
mov
mov
sarl
push
loope
pop
es
fs
fcomps
inc
ds
lahf
subb
in
lea
frndint
inc
stc
jne
dec
xor
testb
mov
cld
or
clc
mov
adc
loope
and
aad
cmp
aam
adc
sbbb
ret
jle
sub
call
cli
lahf
xchg
in
outsb
cmp
loope
mov
out
adc
out
sub
jo
neg
outsl
xchg
repz
adc
aaa
das
jo
out
adc
jns
mov
je
mov
jne
mov
inc
cmp
pop
dec
sti
jo
and
mov
popf
and
mov
sbb
dec
or
xor
insl
insb
push
fsubp
and
insl
jb
std
jmp
insb
leave
push
aas
cmp
lcall
fiadds
push
jmp
clc
xchg
and
xchg
push
cwtl
mov
shlb
inc
divb
sub
mov
icebp
pushf
xchg
pop
insl
cmc
call
fsubrp
pop
sbb
sti
jne
lods
cli
jo
nop
and
insb
mov
inc
icebp
mov
mov
xchg
lods
cmp
out
stc
inc
insb
popf
mov
stos
lret
lcall
insb
xor
std
add
scas
push
clc
xor
and
cmp
mov
mov
in
fcmovb
or
jle
sub
jl
data16
cld
out
lahf
mov
lock
jge
movsb
push
jge
lret
enter
rclb
cmpb
lcall
mov
push
movsb
insl
and
mov
popa
xor
ja
test
push
lock
ljmp
test
outsl
jnp
lea
loope
scas
stc
push
jns
stos
cmc
jmp
push
idivl
ret
sti
add
mov
clc
test
xchg
je
inc
popa
loopne
js
xchg
jg
aaa
dec
sub
xchg
sub
enter
add
std
test
or
dec
les
adcl
je
movsl
out
in
jbe
mov
cmp
sub
mov
mov
cli
sbb
ss
adc
outsl
xchg
sub
mov
cmp
sbb
inc
cmc
mov
add
shlb
sahf
dec
mov
push
and
lock
mov
inc
xor
pop
adc
jp
xchg
jecxz
xchg
test
inc
add
pop
sub
hlt
jcxz
aas
rorl
daa
mov
cmp
mov
mov
test
fisttps
mov
pop
pavgb
pop
xchg
xor
popa
int3
je
std
jge
mov
push
pop
test
push
cli
mov
lret
xor
add
out
out
push
adc
inc
add
insl
pop
inc
add
insb
jne
mov
mov
dec
daa
jle
adc
cmp
xchg
sbb
incb
cmp
mov
add
dec
lods
cmp
jmp
xor
mov
push
scas
or
out
mov
add
aaa
clc
in
xor
and
sbb
cmpsl
mov
inc
shll
mov
dec
sub
sub
movsb
mov
push
inc
pop
dec
xrelease
sahf
add
inc
imull
cmpsl
call
push
push
aad
mov
pusha
xchg
bound
adcb
push
inc
mov
pop
sarb
jl
stos
mov
add
out
mov
in
adc
cwtl
imul
mov
mov
mov
mov
mov
lahf
sub
cmpsb
cmp
xor
cmp
add
mov
mov
jbe
push
loop
gs
inc
cli
mov
and
icebp
mov
add
sub
add
xor
lret
js
jg
test
jno
xchg
add
scas
stos
stos
xorb
ljmp
cmp
inc
inc
lods
push
add
push
xchg
push
mov
mov
add
push
mov
mov
scas
xchg
cltd
out
push
mov
aas
jecxz
data16
inc
mov
divb
add
in
xor
adc
imul
test
sarl
inc
loopne
xchg
or
sub
mov
mov
dec
xchg
sub
mov
js
mov
test
jl
fiadds
mov
mov
xchg
inc
jne
ljmp
xchg
xchg
orl
mov
xor
loope
push
sub
cmp
mov
add
add
sub
xchg
test
fnsave
mov
iret
ss
dec
add
popf
mov
add
jb
fstps
and
repz
mov
dec
add
scas
xor
fidivs
outsl
stos
les
scas
mov
mov
fcmovnbe
xor
mov
dec
add
insl
push
js
add
mov
or
bound
ret
add
mov
loopne
cmpsl
insb
outsl
sub
xor
mov
hlt
add
fistps
adc
jmp
roll
adc
and
xor
jg
add
jne
add
movsb
sahf
xor
icebp
sbb
pop
enter
inc
ja
fucomip
loopne
push
cmp
lret
mov
cmpb
shll
xchg
les
je
and
jp
andl
jae
clc
shrl
add
movsb
adc
mov
xchg
cwtl
sub
xchg
rclb
inc
fs
xlat
add
push
xchg
add
stos
ret
dec
or
fxtract
mov
add
mov
sti
mov
sbb
imul
sbb
mov
fmul
shll
add
faddl
xor
mov
add
xchg
xchg
add
pop
ret
fildl
fisubrs
mov
out
js
lds
mov
sub
fwait
add
mov
sbb
and
ss
dec
mov
call
push
sub
jl
cmpsl
adc
inc
jge
add
and
pop
lret
mov
mov
mov
leave
cmp
add
cmpl
test
andb
dec
insb
jp
popa
lret
mov
mov
push
sub
out
push
jle
scas
xor
cmp
add
dec
mov
xchg
or
ljmp
aaa
dec
xor
and
dec
stos
fcompl
rclb
jge
mov
aad
mov
xlat
rcr
push
in
aaa
cmpsl
fsubrl
add
mov
sub
adc
add
cmp
fs
dec
inc
mov
mov
mov
inc
rcll
xchg
insl
es
aam
dec
sbbb
adc
sbbb
mov
arpl
cmp
xchg
jbe
stos
sub
push
aas
xor
es
adc
and
scas
push
and
cmp
pop
sti
push
inc
aam
stos
mov
idivl
icebp
ret
add
cs
mov
add
into
and
js
insl
and
push
xchg
nop
push
jns
fcoms
cmp
lods
pushl
into
emms
subb
xchg
sbb
lds
pusha
mov
add
sbb
cmp
lahf
dec
mov
in
add
or
jle
hlt
mov
jle
sahf
shrl
xor
fs
inc
fadds
sbb
lea
push
pop
repnz
sub
add
push
cltd
int
inc
fwait
mov
std
insl
shrl
int3
dec
add
mov
xchg
fiadds
jns
add
clc
or
addr16
push
dec
mov
add
imul
add
inc
xor
mov
xlat
or
mov
leave
call
adc
test
cli
and
sbb
lods
xor
pop
jle
jle
subb
and
mov
pop
sub
xor
mov
enter
icebp
cmpsl
and
mov
sahf
in
pushf
push
enter
and
xchg
cltd
add
loopne
jp
arpl
or
mov
pop
jge
pop
ficomps
xorl
popa
shl
mull
mov
lahf
nop
push
out
xchg
cmp
call
inc
sbb
mov
je
mov
movsb
sbb
pop
push
lods
fistpll
pop
icebp
mov
mov
repnz
jge
push
mov
jbe
out
je
cmp
movsb
icebp
test
mov
cltd
xchg
negb
subl
push
sbb
imull
popf
lcall
es
jecxz
imulb
and
mov
pop
jmp
mov
mov
aad
call
adc
imul
aad
imul
push
fbstp
sub
je
mov
mov
jo
popf
sub
je
mov
sub
sbb
mov
fcmovnbe
xchg
and
sub
pop
jmp
add
out
xchg
and
add
sti
imul
popf
fs
inc
xchg
ljmp
fs
mov
nop
in
sub
inc
loope
cmp
or
jns
cmpsl
mov
pushf
shlb
mov
mov
add
das
push
cld
cld
gs
push
and
in
rcll
mov
xchg
and
fisubrl
movsl
mov
rcl
insl
mov
lcall
cwtl
test
movsb
adcl
push
addr16
and
addr16
in
cmp
push
and
pop
out
rol
popf
and
sub
or
push
movsl
lods
xor
popf
cmp
add
jne
fiaddl
cltd
clc
cmp
lcall
vmovmskpd
cmp
add
lods
xor
cmpsl
ljmp
dec
dec
push
dec
movsl
xor
sbbl
loop
mov
stos
test
inc
jns
imul
mov
push
or
add
sub
add
in
fwait
jne
mov
cwtl
neg
jge
jne
js
std
iret
mov
std
aad
loopne
sub
mov
negl
xor
push
mov
outsl
js
in
push
sbb
xchg
lock
cs
xlat
stos
jne
in
jno
sti
mov
cmpsl
rcrl
outsb
push
clc
xchg
xchg
lahf
out
pop
idiv
arpl
ljmp
cld
faddl
dec
enter
add
pop
cmpsl
jns
or
mov
pop
or
inc
into
mov
cltd
gs
adc
jl
in
lcall
pushf
clc
xchg
sbb
adc
loopne
mov
cld
imul
rorb
xor
cmp
es
ffreep
in
ret
xlat
push
xchg
out
sbbb
ja
cltd
pop
cmp
mov
dec
test
or
dec
mov
add
hlt
sarb
jo
repz
int
repnz
adc
repz
mov
mov
jmp
sub
popf
jecxz
fdivp
inc
mov
in
fstl
xorl
ja
inc
mov
mov
aad
das
stos
fbld
add
cmp
out
andb
push
test
mov
cmc
mov
and
out
addl
sbb
mov
popf
scas
popf
mov
or
les
and
mov
inc
cmpsl
fucomp
jns
xchg
dec
insb
cmp
push
or
hlt
je
mov
lahf
divb
test
loope
inc
jo
cmc
dec
cwtl
movsl
cmpsl
nop
pop
ljmp
pop
cld
jo
dec
cltd
or
mov
iret
jle
pop
mov
stc
stos
mov
ds
jg
jg
cmp
aas
sti
xchg
pop
xlat
or
loope
mov
dec
in
imul
mov
add
mov
ss
popf
movsb
mov
jmp
dec
in
jmp
xor
ret
xor
loope
int
lea
jmp
jae
nop
outsl
adc
sti
dec
sub
jle
test
fdivrl
add
sti
cmp
adc
or
stos
mov
call
sahf
sbb
sbb
incl
sarl
cmpl
outsb
cwtl
cs
jmp
mov
jbe
jle
cs
or
nop
and
push
adcl
inc
shlb
mov
testl
adc
jecxz
mov
push
pop
jmp
xchg
jg
sub
nop
cmp
inc
mov
aaa
or
dec
push
decl
out
add
incb
inc
mov
bound
pop
dec
movsl
scas
gs
jle
mov
pop
inc
inc
shll
adc
mov
jae
mov
jp
mov
push
stc
mov
std
addl
add
shl
pusha
jmp
stos
imul
jns
jge
out
add
inc
stc
clc
jecxz
in
insl
stos
cmp
addl
mov
test
stc
cmp
leave
lahf
lock
sub
ss
ret
bnd
test
dec
xchg
out
fimuls
cmp
push
xchg
adc
cli
in
sbb
popf
fadds
jno
jnp
arpl
fucomp
jp
xchg
sti
sti
loope
ja
cli
je
mov
push
cld
mov
jnp
xchg
jge
fisubs
xor
jle
iret
pop
in
mov
sbb
bound
out
mov
stc
jmp
mov
popf
cld
sti
pop
aas
fs
xor
std
sarl
jecxz
jge
mov
adc
in
pusha
imul
sahf
sub
mov
arpl
and
fidivrl
std
pop
cwtl
std
iret
aam
idivb
mov
std
adc
jo
mov
test
add
pop
xorl
push
jb
cmp
rolb
aam
test
fisubs
fnstcw
stc
mov
push
adc
movsl
mov
in
es
and
stc
xor
popf
fildl
std
mov
stos
insb
es
ret
pop
psadbw
fisubrs
mov
sti
fildll
jno
sti
aaa
popa
jo
ja
xchg
jnp
or
insb
clc
pop
jge
lcall
mov
xchg
add
jp
and
xchg
iret
pop
dec
dec
sub
jno
int
add
mov
mov
push
or
ret
adc
jns
push
outsl
lret
test
mov
inc
add
mov
add
mov
jae
adc
push
andb
fdivrp
and
stc
addl
push
jg
jnp
dec
mov
pusha
mov
jns
xorb
jno
adc
mov
jo
mov
stc
fwait
mov
and
push
jno
sbb
std
out
std
jno
lahf
jae
push
lods
in
push
das
push
clc
repnz
jno
std
mov
iret
shl
jb
dec
pop
pop
xchg
notl
mov
jae
icebp
mov
repz
jno
jno
push
push
jns,pt
sub
lock
sti
sti
shrb
jb
jo
jno
call
fcoml
out
mov
out
stc
xchg
jnp
rorl
jl
outsl
pop
insb
lods
in
jmp
push
testl
jp
xorb
push
xor
xchg
fwait
lcall
pushl
jp
addr16
movsl
sbb
mov
add
notl
jmp
sbb
jle
xor
sbb
je
jg
xchg
mov
ja
mov
jge
test
loop
out
jle
imul
cmp
fdivs
leave
xchg
adc
aad
std
mov
test
jo
insl
clc
testl
jmp
clc
pop
jae
lock
repz
cmpsb
xchg
add
add
repnz
sbb
es
repz
pop
adc
out
jno
add
in
add
push
or
lock
mov
iret
jle
cmpb
jne
jb
push
jge
sub
lods
pushf
sub
push
push
aad
ss
mov
sub
dec
imul
mov
fidivrs
push
push
mov
ss
mov
mov
loopne
dec
fcoms
dec
int
mov
xchg
shrl
inc
mov
scas
or
std
adc
iret
repz
insb
test
mov
mov
push
stos
out
test
sbb
hlt
fidivs
or
jne
dec
xchg
aam
mov
das
inc
cmp
ror
mov
loop
xchg
repz
jno
cmpl
dec
sub
fadds
push
loopne
lods
xorb
mulb
xchg
pop
add
mov
jne
jge
in
jp
sahf
mov
es
mov
insl
mov
xor
xchg
push
fisubrs
jl
jno
lods
jl
fistpll
in
add
xor
pop
shl
sti
stc
stos
std
popf
gs
jnp
aam
dec
lock
nop
cli
jae
cli
mov
repz
jp
stos
mov
sub
gs
std
aas
sbb
sub
adc
popf
cld
pop
and
iret
out
jmp
jns
mov
lods
pop
popa
out
sarl
mov
mov
lods
push
dec
sahf
mov
dec
repz
jl
clc
xchg
daa
rclb
call
mov
sbb
mov
imul
lcall
lods
inc
negl
mov
int
call
or
fisttps
sbb
xor
mov
add
push
test
loope
pop
mov
out
nop
xchg
ffreep
test
adc
adc
movsb
add
jecxz
cmp
data16
xor
std
xor
lret
repz
pop
jnp
adcb
add
sbb
cmc
pusha
jne
mov
mov
ljmp
mov
cmp
popf
cmc
rcl
mov
js
sub
aad
andl
cld
imul
shrl
loope
xor
idivl
dec
ja
cmc
jp
mov
push
negl
pop
imull
js
xor
hlt
ja
je
sbb
clc
aaa
adcb
lods
cli
lods
div
lods
icebp
stos
push
subb
out
arpl
hlt
cwtl
subb
jne
mov
stc
sti
ja
jmp
and
jb
out
loopne
sbb
lods
testb
ja
push
jns
jbe
pop
movsl
xor
dec
clc
repnz
out
outsb
push
das
push
pushf
jns
jbe
and
int3
jmp
jle
push
cmp
xor
stos
xchg
jmp
movsb
mov
add
jmp
stos
cmp
xchg
pop
push
out
add
int3
jmp
or
repz
js
push
sbb
xchg
mov
xor
jns
add
addb
inc
fstpl
int
idivb
cli
hlt
out
pop
cmp
jnp
jns
push
jae
jo
jmp
rcl
jnp
cld
ja
ja
push
das
inc
mov
and
push
jae
jo
inc
mov
push
jp
push
loop
mov
int3
jg
insl
pushf
jbe
jae
jo
jmp
push
push
outsl
jns
cli
jl
clc
bound
push
jns
jbe
jae
pop
sub
pop
jnp
arpl
outsl
cmp
push
out
imul
xchg
sub
jnp
push
jbe
jae
mov
imul
push
test
push
mov
push
notb
outsb
addr16
or
subb
jne
loope
je
xchg
fnstsw
and
jnp
pop
icebp
popf
push
lret
cld
dec
enter
add
subl
cmc
aam
xlat
clc
pusha
fstpl
xchg
mov
mov
sbb
mov
sahf
in
insb
xchg
add
out
popf
mov
jne
push
fmulp
imul
cmp
xlat
pusha
adc
into
iret
cli
in
mov
popf
jnp
jp
mov
bound
decb
arpl
add
add
jno
lcall
jne
cli
leave
movsl
fidivrs
in
icebp
jmp
cld
in
or
inc
push
pop
xor
int
int
cld
js
imul
xlat
pop
fadds
ffree
xchg
jg
cmp
std
repz
sub
sbb
xchg
insl
push
and
mov
xchg
lods
mov
shr
rolb
xchg
jb
mov
std
dec
ret
cmp
push
inc
jg
sub
insb
sub
lahf
jle
ret
mov
cmpsl
jecxz
loopne
jecxz
hlt
insl
inc
fadds
dec
cmpl
adc
jecxz
pop
fucom
stc
sbb
ss
int
sub
jae
jno
jp
in
jmp
inc
fcmovne
loopne
inc
aam
add
sbb
les
enter
imul
in
mov
sbb
mov
int
sub
in
gs
add
imul
cmp
sti
leave
jge
ret
incl
arpl
out
xchg
pushf
std
lret
inc
les
xchg
nop
aad
scas
jle
or
in
sbb
lret
popf
lds
repz
lock
cmc
add
and
cmp
out
cld
test
add
push
arpl
lods
subb
jp
mov
sub
lahf
pop
mov
lcall
or
stos
ja
movsb
mov
fisubrs
dec
inc
pop
das
inc
push
sti
adc
std
loope
hlt
in
add
out
inc
imul
adc
dec
fistpl
mov
dec
movsl
push
add
jns
lret
rorl
pop
jno
lcall
mov
lret
dec
pop
rolb
les
ljmp
in
cld
or
paddusw
lods
fnstenv
test
outsl
gs
and
popf
jne
inc
je
push
add
enter
repnz
mov
in
repz
pop
inc
dec
in
dec
dec
lret
cwtl
jns
ss
imul
lock
fbstp
mov
popa
in
pop
outsb
fidivrl
jbe
std
loopne
out
icebp
incb
pop
push
enter
movsl
xchg
lock
jg
loope
pop
aad
dec
pop
dec
out
jns
andl
jl
jge
into
mov
xchg
neg
insb
jge
push
pop
xor
in
mov
aaa
inc
jp
add
std
rorb
add
in
xor
cmp
mov
movsl
mov
sarl
push
cmpb
adc
mov
mov
mov
jecxz
xchg
mov
subl
xchg
test
mov
mov
into
loope
jmp
cmc
xor
add
sbb
cld
or
scas
add
mov
mov
cmp
inc
sub
or
outsl
mov
jp
out
clc
pop
jecxz
ljmp
test
add
and
sbbl
add
das
cmpsl
insl
inc
cmp
xchg
add
xor
jp
lds
loope
lret
mov
or
jb
xor
mov
iret
push
fidivrs
fwait
sub
subl
shl
dec
shl
pop
faddl
and
jb
lds
xor
repnz
out
cmc
pop
adc
jle
mov
sahf
cmp
add
cmp
sti
push
scas
cmpsb
inc
xor
lret
jo
int3
mov
and
inc
xor
cmp
and
mov
mov
adc
cli
fidivl
sbb
mov
adc
fmull
or
pop
add
mov
bound
add
and
ja
shr
shr
jae
sbb
mov
repz
add
mov
dec
add
mov
in
jmp
jg
add
jns
icebp
jle
sub
test
push
mov
add
or
inc
jmp
mov
data16
sbb
xchg
adc
lret
sahf
jl
pop
mov
add
rcrl
jb
xor
cmpb
ss
push
inc
mull
repz
int3
add
js
je
sub
bswap
push
xor
or
mov
and
stos
mov
orl
repz
ret
jge
loop
call
arpl
daa
jl
xchg
or
ror
jbe
lock
fisttpl
and
hlt
test
mov
add
jno
fs
enter
pop
ja
jle
jns
mov
add
rcrl
sahf
and
xchg
sbb
add
std
adcl
xchg
xor
jge
jle
scas
push
shl
dec
dec
lods
sub
int3
int
mov
aad
mov
cmp
sbb
add
sbb
ljmp
test
in
mov
scas
test
fisubl
loopne
xchg
mov
pop
mov
push
sub
pop
neg
xchg
or
add
push
push
out
jecxz
test
mov
fstl
int3
in
and
xor
unpcklps
add
xchg
scas
es
or
in
mov
fwait
and
xchg
imul
lahf
shll
jb
jle
and
rorb
lahf
sub
jge
inc
sub
jle
js
sahf
adc
std
scas
push
pop
popf
popf
mov
sahf
cli
imulb
ror
cmp
cmpsb
jge
push
xor
mov
subl
test
and
test
jb
les
int3
sub
sub
inc
loopne
repz
adc
notb
jo
popa
hlt
test
ss
loopne
add
iret
out
add
loope
mov
call
jp
lock
xor
loope
mov
cmpsl
addr16
pop
ret
add
mov
dec
add
inc
nop
arpl
mov
imul
lcall
add
inc
imul
stos
rcl
jle
mov
hlt
ret
jns
pop
cmp
in
push
repnz
imul
mov
cmp
popa
inc
inc
inc
cld
daa
and
xchg
and
ss
inc
mov
test
jb
scas
out
cli
xor
mov
ret
pop
adc
jp
add
je
cli
add
inc
bnd
and
add
sarb
out
mov
mov
popa
mov
out
into
fildl
or
inc
xor
and
or
nop
pop
ficompl
xchg
push
bound
mov
fisubs
mov
mov
dec
repz
mov
mov
out
jb
jecxz
scas
xchg
aaa
addr16
jns
cmp
push
mov
mov
or
das
xchg
or
les
inc
inc
lds
mov
cmp
mov
ljmp
push
cmp
xchg
vmulss
pop
stos
xor
les
lods
int3
shl
and
je
repz
movsl
bnd
mov
outsb
xor
cmpsb
or
adc
ljmp
inc
add
mov
adc
cmpb
inc
ss
shll
inc
pop
lds
fistl
adc
and
fidivs
xlat
add
mov
ret
aam
push
inc
cli
inc
add
pop
nop
mov
jecxz
add
rorb
lods
mov
imul
add
xor
btr
mov
cmp
add
push
or
scas
jbe
sbb
push
cmpsl
inc
ficomps
xor
and
clc
adc
fcoms
rclb
lahf
xchg
or
out
add
out
add
mov
subb
dec
pop
sbb
inc
bound
sbb
ljmp
imul
mov
jge
jp
adc
inc
mov
push
orb
test
xchg
scas
inc
jmp
adc
pop
cmp
orb
dec
dec
inc
and
gs
ret
outsb
aaa
xchg
hlt
sbb
sahf
push
cmpsb
dec
sbb
sti
or
add
jp
xorb
lahf
out
jnp
ss
repnz
mov
xchg
pop
or
sub
jmp
iret
nop
lds
jle
dec
adc
sbb
jo
inc
pusha
pop
or
loop
repnz
subl
add
ljmp
add
mov
mov
xorl
xor
je
push
dec
ds
or
repnz
and
add
add
push
daa
lahf
in
adc
ljmp
add
jne
popf
jg
test
jmp
in
mov
add
jo
push
fwait
cwtl
fsubrl
cmp
jbe
fdivrp
data16
int
mov
mov
aaa
inc
ss
idivl
xchg
movsb
adc
mov
cltd
lahf
imulb
imul
lret
mov
push
pop
incb
out
std
add
xor
adc
push
aas
cmp
jmp
dec
enter
call
xlat
push
into
mov
jae
lahf
ret
cmp
ret
pusha
imul
xchg
std
pop
inc
push
adc
out
cli
xlat
inc
mov
or
sub
aad
mov
lahf
imul
insl
xor
xlat
pusha
sti
pushf
call
push
push
jbe
ficomps
sub
out
clc
in
test
xchg
stos
pushf
stc
outsb
imul
xchg
add
outsl
jnp
bswap
mov
cmc
mov
nop
outsb
add
cli
out
pop
push
jge
cltd
dec
fs
cmp
bound
testl
negl
setnp
mov
adc
in
or
sbb
jle
cld
xor
inc
mov
adc
popf
clc
stc
adc
daa
xchg
adc
dec
xchg
push
mov
je
fwait
jae
jg
fidivrs
clc
mov
shl
pop
pushf
movsb
pop
dec
xor
std
cmp
in
cmp
and
add
mov
add
pop
jns
push
negb
test
lock
xchg
icebp
sarl
mov
mov
mov
jg
sub
dec
push
repz
push
or
add
jbe
mov
sub
mov
fs
xor
call
cli
bound
mov
adc
pop
jmp
imul
add
fcomip
sbb
fucom
jb
sub
ss
dec
mov
dec
adc
xor
nop
sbb
xchg
je
andb
out
stc
sub
lods
int
cmp
popf
xor
pop
outsb
cli
mov
mov
dec
adc
scas
jbe
das
inc
nop
loop
pop
cli
dec
sbb
rorl
popa
xchg
cmp
add
pop
push
or
cmp
cli
mov
dec
aam
stos
scas
imul
and
and
cmpsb
add
sbb
xor
cmp
dec
out
fs
enter
adc
test
orb
xorl
sti
cmp
imul
scas
add
or
adcb
andl
xchg
xor
dec
pop
jp
outsb
in
rcll
xor
test
xor
cmp
jecxz
xchg
sub
add
hlt
sub
add
lahf
fcoms
stos
sub
arpl
shll
mov
dec
iret
or
pop
mov
add
test
adc
or
inc
push
jns
adc
pushl
imul
lcall
push
loopne
shlb
jge
mov
outsb
fs
add
push
xchg
in
or
adc
mov
mov
inc
call
lods
add
fildll
cld
sbbb
xchg
jbe
mov
lret
insl
xchg
and
push
add
cmp
add
movsl
mov
daa
mov
imul
dec
mov
cltd
cmp
add
adc
xor
cmp
nop
mov
mov
cmpb
pop
or
mov
ds
movsb
popa
adc
in
fiadds
call
dec
popf
dec
add
inc
jge
add
ret
gs
ret
test
xchg
add
or
inc
dec
in
or
xorl
inc
inc
loop
sbb
xchg
pop
es
lods
in
xchg
out
cmp
add
mov
add
outsb
fdivrl
mov
sub
inc
sbb
fistpll
sbb
add
push
xchg
xor
pop
jecxz
fimuls
stc
std
das
pop
int
dec
fs
rorl
cmpsl
test
xor
mov
ficoms
push
bnd
into
add
ror
lds
adc
out
lret
and
inc
push
cmp
xchg
dec
mov
cmp
aas
out
jae
add
jp
push
pop
es
push
mov
xor
lret
sahf
push
loopne
mov
pop
xlat
mov
repz
xchg
repnz
dec
mov
test
and
or
lahf
clc
and
movsb
mov
mov
lds
icebp
xchg
pusha
inc
clc
dec
sub
jmp
out
add
mov
sbb
lock
jno
loop
cmc
shr
push
mov
test
out
jp
xchg
sub
sbb
mov
inc
das
mov
lock
pop
bound
and
dec
push
test
mov
add
adc
frstor
rcr
push
lret
pop
sub
lds
jecxz
jg
ss
or
pushf
insb
jp
cmp
cmc
add
out
mov
add
add
mov
xchg
sbb
dec
popa
lahf
jmp
adc
add
xchg
sub
out
xor
xchg
xlat
cwtl
out
pop
xor
mov
xchg
cmpsb
in
inc
ds
movsb
sub
add
inc
test
add
mov
mov
inc
out
push
dec
add
gs
test
pop
jge
movsb
aas
das
roll
shll
pop
inc
add
addr16
stc
push
push
subb
jecxz
add
or
arpl
jl
sar
lods
cltd
mov
cmp
xchg
mov
xchg
into
sbb
sub
cmpsl
or
int3
cmp
sub
dec
dec
negl
mov
sarb
js
loopne
add
push
adc
inc
add
ja
pop
or
or
inc
test
daa
add
outsl
add
push
out
add
adc
sbb
jo
push
lahf
jl
cmpl
xor
popa
sub
jne
out
negl
push
adc
shrb
in
inc
mov
add
sub
test
fs
pop
sub
mov
add
sbb
sbb
add
fmul
sbbb
mov
out
ljmp
repz
add
push
orb
ret
int
jl
in
test
lcall
out
or
orl
push
loope
or
jg
push
and
cmc
add
ficompl
stc
adc
xchg
in
add
xor
lods
xchg
pushf
and
or
fsubs
push
adcb
popf
mov
loop
jae
or
push
inc
stc
cli
jecxz
ret
loop,pt
sub
dec
jmp
jae
or
adc
push
iret
imull
add
cltd
pop
sbb
jecxz
mov
adc
dec
loopne
movntq
out
loopne
imul
daa
lahf
movsl
or
movsb
dec
aad
jmp
ljmp
mov
popa
imul
sti
xchg
inc
jne
fmull
xchg
xchg
psllq
jbe
xchg
call
in
jg
ljmp
add
sbb
or
jo
testl
call
in
subl
cltd
adc
add
and
xchg
pop
inc
sbb
pop
test
mov
rcrl
and
cmp
movsb
cwtl
lods
pushf
mov
inc
pop
sub
jg
lea
and
daa
and
mov
iret
xor
sbb
xchg
hlt
inc
cmp
or
arpl
ja
sbbb
jp
outsb
ja
les
mov
jg
sbbl
add
notb
adc
rcll
inc
cmc
shll
sub
out
mov
mov
xchg
fstpt
pusha
inc
dec
enter
lret
inc
dec
movsl
mov
popf
orl
gs
lret
xchg
stos
repnz
inc
js
ret
icebp
pop
leave
mull
xchg
in
repz
jns
inc
sub
cmp
out
xor
pop
cld
add
sub
imul
pop
mov
mov
jl
inc
inc
cmpsb
sub
std
mov
rolb
jns
xor
sahf
cmp
outsl
ds
icebp
and
out
les
and
add
nop
push
cmp
rolb
xchg
mov
ljmp
pop
pop
imul
mov
pop
cli
movsl
in
sbb
fstl
pop
add
jecxz
add
std
ret
addl
fs
mov
rorl
cmp
arpl
adc
add
mov
int
jbe
into
pop
add
daa
add
inc
loop
sbb
push
rorl
loope
nop
dec
jne
cld
jo
jmp
sarl
mov
pushf
and
add
adc
popa
sub
mov
test
add
jb
adc
inc
test
xor
add
mov
nop
sbb
xchg
add
inc
loop
add
inc
xor
xor
inc
pop
jl
jns
adc
and
je
xchg
sub
add
mov
stos
lahf
jmp
mov
add
xchg
adc
leave
cwtl
jno
bound
adc
repz
mov
adc
add
fstpt
jle
push
pop
jmp
icebp
lods
cmp
int3
or
mov
add
lock
dec
in
mov
test
mov
sahf
aaa
nop
cmp
mov
outsl
add
popa
test
mov
int3
sbb
cmpsl
mov
sarl
xor
mov
lock
add
jmp
sub
add
lret
daa
out
rcrb
push
or
adc
repz
fistpll
jg
xchg
insl
add
inc
mov
jle
sahf
fld1
xor
clc
pop
sub
and
jge
ljmp
xor
insb
adc
dec
shlb
insb
jns
clc
inc
mov
push
std
push
mul
add
cmpsl
jp
inc
pushf
adc
and
and
sbb
mov
adc
std
js
adc
dec
insl
or
fstpt
jae
jp
jle
jnp
sar
out
jo
xorb
repnz
jle
std
rclb
ss
insl
testb
or
fiadds
dec
jbe
inc
push
push
and
and
jmp
cmpsl
mul
and
lds
cltd
add
cld
int3
cli
adc
jb
ja
pop
hlt
push
xor
in
push
xor
jbe
or
repnz
add
mov
sub
cmp
cmp
cmc
repnz
mov
in
mov
jge
jo
addr16
xchg
add
shlb
loop
and
repnz
jle
mov
add
scas
cmpsb
fidivrs
push
xchg
lds
imul
ret
test
push
fidivrs
jmp
jnp
push
lds
xor
cltd
sbbl
mull
addr16
shl
mov
in
scas
mov
jb,pn
outsb
xlat
cmpsb
cltd
cmpsl
push
sub
add
lahf
jae
add
sahf
stos
adc
cwtl
in
stc
test
rorb
pop
jl
rcll
cmpsb
xor
rolb
movsb
mov
xchg
addb
push
int
imul
outsl
leave
inc
add
dec
jle
rcr
faddl
mov
jp
sbb
inc
lods
loope
push
and
cli
pop
and
sub
cmpsl
adc
cmp
sbb
xchg
mov
iret
add
sbb
test
stos
mov
ds
ret
mov
mov
jg
lahf
pop
sub
mov
rcl
jae
sub
fwait
jmp
add
outsl
cmp
pop
fs
xchg
int3
xor
mov
pop
mov
fwait
push
faddl
test
sbb
xchg
dec
enter
adc
mov
mov
inc
jmp
fbstp
dec
cmp
mov
stc
inc
xor
mov
dec
add
hlt
mov
xor
xor
pop
in
and
or
or
add
enter
add
cmpsb
sub
mov
jae
jbe
add
pop
repz
and
pop
push
pop
push
sbbb
add
outsl
test
pop
das
inc
dec
mov
out
adc
in
loope
in
adc
jle
mov
mov
loopne
je
add
fsubr
add
sbb
jge
insb
add
push
pop
xchg
loopne
jne
shll
stc
lods
sti
popf
pushw
aaa
or
push
add
sub
iret
xchg
and
push
shlb
add
popf
popa
iret
insl
lock
out
ljmp
add
mov
iret
loope
fdivp
sub
leave
hlt
add
mov
nop
xor
clc
test
xchg
xchg
movsl
in
lcall
push
lods
lds
adc
insb
std
dec
cmp
xchg
and
out
in
jg
xchg
jge
orb
dec
nop
test
dec
std
mov
and
iret
loopne
je
add
ret
imul
cmp
jns
insl
dec
dec
testb
push
pusha
aaa
or
addr16
repnz
xchg
icebp
mov
pop
push
inc
push
addr16
in
jg
andb
add
rcr
cmp
nop
scas
jecxz
cmp
sti
xlat
mov
test
out
push
mov
lock
out
adc
jno
jle
jg
or
inc
push
mov
test
imull
sti
push
rorb
push
xchg
fwait
inc
cmpsb
and
stc
or
pop
aad
outsl
push
inc
mov
cld
das
in
sbbb
mov
xor
jnp
test
rep
test
daa
mulb
shll
dec
addr16
jns
in
loopne
push
lods
push
mov
jg
fsincos
push
jae
fs
clc
inc
out
negl
xchg
mov
dec
popa
movsb
sbb
fwait
pand
cmpl
mov
bound
fidivs
shlb
sahf
sti
test
cld
call
add
outsl
jo
dec
cltd
mov
jl
in
or
mov
sub
jb
jns
das
mov
cwtl
fdivp
cmp
xchg
mov
jbe
jmp
xchg
std
jle
dec
mov
add
fistl
mov
lahf
jns
test
pop
out
dec
push
dec
mov
mov
adc
ficompl
add
in
enter
add
enter
jge
lahf
insl
aas
push
xchg
loopne
jo
adc
and
sbb
add
inc
push
mov
lahf
sub
mov
test
adc
popf
lods
mov
xchg
xchg
inc
xchg
ret
mov
sti
and
lods
and
cmp
out
cmp
loope
loope
adc
jnp
jge
adcl
out
add
call
jp
pop
inc
pop
cwtl
mov
mov
dec
aam
fstl
jge
fstp
lock
scas
jecxz
sbb
lahf
scas
clc
and
ja
ljmp
mov
scas
clc
ljmp
sub
adc
inc
icebp
sub
dec
outsl
mov
add
lcall
repz
jnp
jns
clc
mov
jp
xor
ret
sub
aaa
xor
pop
cli
call
cmp
and
addr16
jmp
enter
js
test
pop
scas
decl
iret
testl
shlb
int
pop
xchg
std
sti
xor
out
loope
jae
fcmove
push
cwtl
sbb
sub
lea
hlt
dec
push
sub
add
lcall
call
outsl
mov
stc
pushf
out
aaa
push
inc
cmpsl
scas
sub
pushf
xor
jne
or
sbb
idiv
push
lcall
adc
mov
addb
or
aas
stc
popf
dec
push
call
popf
rolb
mov
scas
push
aad
xor
daa
stc
push
lahf
xchg
in
sbb
repnz
jmp
test
pop
adc
cltd
mov
push
dec
cmp
or
add
jp
std
clc
gs
push
mov
in
add
ret
ljmp
clc
inc
adcb
jmp
add
stc
daa
or
jno
test
and
popa
pop
shrl
cmc
push
pushf
movsl
sti
fwait
test
in
popf
add
sub
xchg
shlb
stos
cmc
jecxz
cmc
test
scas
jno
sub
cmpsl
stos
ret
jle
pop
mov
sbb
sub
jp
bound
insb
jbe
lcall
jns
call
xor
and
loop
xchg
and
cmpsb
xchg
or
popa
mov
mov
jmp
iret
into
sti
lds
shlb
loopne
xorl
cmpsl
out
cwtl
sub
or
das
jne
jge
jne
jnp
or
das
cltd
sti
xchg
bound
cmp
cli
jae
ja
add
sub
mov
jmp
std
or
cmp
loopne
shll
popf
jnp
hlt
je
inc
cltd
xchg
cmpsb
mov
adc
jns
mov
je
mov
out
pusha
cld
mov
pop
aad
rcrb
jbe
lock
mov
or
std
neg
loop
xor
cmpl
lcall
call
mov
mov
addr16
loope
mov
aad
cmp
push
ja
mov
insl
stc
hlt
lcall
iret
pop
mov
repz
outsb
lock
push
add
xchg
jae
in
je
mov
mov
lds
jl
cmp
clc
in
jne
insl
lock
sub
pushf
add
and
sub
mov
in
aaa
out
fucomp
jbe
mov
mov
in
divb
push
or
jnp
ja
mov
in
fbstp
neg
xor
xchg
xchg
xchg
idivl
and
stc
out
jge
cli
addl
push
inc
inc
shrl
push
cmp
fcoml
xor
stos
std
dec
insb
addl
pop
sbb
push
fstp
fcoml
add
stos
cmp
decl
lret
mov
pop
aas
popf
icebp
adc
xor
push
mov
lea
jg
insb
repnz
add
popf
repnz
cmp
popf
lahf
jecxz
and
rcrl
loopne
pusha
fcomi
add
adc
std
xlat
dec
test
popa
cmp
loopne
lods
clc
jo
push
pop
sar
xchg
pop
xchg
clc
loop
test
pushf
push
and
test
daa
adc
popa
cs
xchg
test
jle
pop
mov
gs
andl
imul
stc
lret
addr16
in
or
xor
lret
and
xchg
mov
jae
sbb
mov
outsb
xchg
pop
mov
ficomps
cmp
push
and
sbb
dec
dec
lret
shrl
roll
mov
jecxz
push
fwait
jo
mov
movsb
fcomip
dec
lods
mov
fidivrl
daa
popf
cmpsl
add
inc
mov
stc
iret
mov
iret
mov
popa
call
mov
xchg
int3
mov
add
pushf
xor
mov
adc
stos
sbb
pop
jmp
mov
push
add
and
push
fucom
mov
std
scas
into
filds
lret
jp
add
mov
pusha
dec
fidivs
sub
mov
movsb
andl
dec
adc
sahf
add
popf
mov
enter
cmp
push
xor
stos
test
ss
push
xchg
aas
mov
push
out
cmp
jnp
outsl
push
pushf
cltd
xchg
mov
out
pop
jle
loop
add
test
popf
ja
pop
pop
lret
cmp
int3
and
in
jns
stc
arpl
or
cmp
subl
mov
insb
sub
jge
pop
mov
mov
test
mov
call
sbb
and
dec
mov
push
shl
mov
rcrb
dec
shl
mov
push
clc
pop
push
in
pushf
jecxz
sub
and
insb
js
xchg
pop
stc
pop
daa
adc
stos
fbstp
lahf
shll
adc
test
xchg
dec
or
fbld
mov
xrelease
jns
es
loopne
mov
mov
add
clc
lea
inc
inc
in
sarl
push
orb
ja
mov
loope
js
jns
inc
in
mov
lods
mov
sub
cmp
clc
cli
imul
and
popf
jmp
cmp
stos
scas
sbb
sub
jle
sbb
sub
pop
mulb
fwait
icebp
je
imull
ss
mov
js
out
adc
add
xchg
popf
lahf
in
mov
push
aaa
cmpsb
and
jnp
cmp
adc
std
lahf
cli
dec
insb
shlb
out
std
ret
pusha
jl
in
fildll
xor
int
std
jle
jg
movsl
or
insl
xchg
and
movsb
stos
mov
fcomps
pop
ja
cli
push
test
jl
or
fucomip
jbe
jl
jb
jle
aad
pop
cld
mov
stc
repz
jecxz
cmpsl
fwait
jl
and
out
pop
or
xchg
gs
push
hlt
mov
push
data16
fidivrs
andl
aaa
add
mov
ss
jns
push
leave
hlt
outsl
jns
sbb
sbb
aaa
insb
or
dec
leave
inc
gs
jnp
xchg
out
imul
fcmovne
mov
mov
das
into
outsl
fnstcw
jno
mov
mov
dec
aas
mov
out
mov
ljmp
fsubrl
popf
aas
ds
sbb
xor
fwait
mov
mov
lcall
test
test
in
pop
inc
popf
mov
xlat
and
mov
cmp
push
ja
inc
jno
std
in
iret
mov
add
xchg
pop
jnp
test
adc
pop
std
cmp
loope
mov
or
sub
jle
lods
outsl
jno
cmpb
or
clc
jmp
pop
pop
mov
sub
add
out
mov
into
clc
or
fbld
dec
repz
sbb
xor
subb
xlat
dec
push
je
fcmovnb
icebp
jbe
pop
pop
pusha
sub
lret
mov
ljmp
clc
xchg
mov
sti
push
cld
jp
or
cwtl
cs
cwtl
aad
ja
jb
inc
fiaddl
repz
mov
or
sub
jg
shr
roll
jge
inc
pop
sarl
mov
mov
pop
insl
jns
xchg
push
or
sbb
fsubp
outsb
push
mov
ret
push
or
jmp
out
ret
xchg
jns
dec
cmp
mov
subl
loope
push
add
or
insl
fsubs
or
xchg
adc
cmpsl
decl
sub
rcrb
inc
dec
dec
and
fisttpll
inc
repz
mov
js
sub
out
dec
cltd
mov
aas
jns
es
idiv
sbb
je
roll
fsts
outsl
frndint
sti
pop
and
jp
lods
ret
vpaddw
jns
xor
fnstcw
sub
test
pop
xchg
ret
stc
cli
das
jo
cs
jo
dec
sbb
push
xchg
cmpsl
push
pop
icebp
clc
ja
rcl
adc
push
cmp
ljmp
mov
outsl
and
mov
jns
repnz
shlb
in
jne
jg
in
aad
mov
jns
repnz
shlb
cwtl
inc
in
rolb
insb
lock
dec
add
cmp
add
outsl
adc
xchg
sub
pusha
cld
in
aam
fnstsw
jo
popf
xor
xor
jge
jns
mov
cmp
mov
mov
loopne
mov
outsb
mov
loopne
ja
cli
ljmp
mov
pop
aad
es
push
ret
ja
jmp
xchg
add
adc
mov
jle
pop
sahf
jmp
cld
jb
bound
push
outsl
jae
mov
pop
stc
push
fmull
dec
fwait
loop
cld
sub
cld
rol
push
jns
cld
jo
clc
daa
mov
pop
jg
mov
je
outsb
pop
into
ret
gs
jae
outsl
adc
lahf
push
outsb
add
mov
mov
cmpl
jo
clc
iret
leave
int
iret
std
ret
std
mov
push
outsl
jns
mov
js
mov
inc
test
jmp
dec
mov
outsb
call
sti
jb
sti
and
idiv
push
lock
push
fisubl
sahf
cmp
imull
cltd
sbb
sbb
repz
mov
mov
jl
inc
push
cli
jo
sbb
ret
pop
jle
push
or
mov
jecxz
out
icebp
mov
sarb
sbb
jecxz
sub
std
ret
jl
lahf
or
frstor
sbb
push
mov
mov
pop
and
sub
adc
shll
ljmp
outsb
enter
mov
mov
fnstcw
jo
sbb
ret
clc
in
leave
sub
aas
repnz
lcall
pop
repnz
pop
xlat
fistl
mov
popl
lods
testb
inc
bound
fisttps
mov
jle
lcall
cs
test
or
and
vminsd
cmp
jno
jns
mov
loope
test
push
leave
fbstp
rcr
dec
cltd
mov
xchg
stos
sbb
dec
mov
popf
inc
dec
mov
js
xchg
cltd
push
pmulhuw
mov
xchg
repnz
xchg
pop
ret
out
cmpsl
inc
lods
jbe
mov
pop
icebp
cmp
lea
jl
std
jne
loop
push
jge
and
xchg
pop
jle
push
add
cmp
lea
fs
adc
cmpl
fwait
jo
sti
push
test
xchg
scas
orl
mov
sbb
pusha
outsb
pushf
pop
mov
xor
cmp
jno
fldenv
pusha
jge
cltd
lahf
into
in
loope
into
inc
pusha
xlat
jmp
sbb
mov
andl
jmp
dec
cmp
es
loopne
mov
ljmp
mov
jge
jno
adc
popf
jp
insl
mov
jo
mov
pop
and
jo
aas
jns
mov
mov
insb
cmp
loopne
jo
and
in
dec
test
in
insl
cmp
loopne
xchg
add
shll
pop
pop
sbb
and
frndint
mov
sahf
sar
push
ret
inc
std
stos
jmp
dec
pop
repz
aam
mov
shrl
push
test
push
mov
and
aad
jmp
xchg
and
sti
jmp
adc
sbb
sbb
rcll
mov
sub
add
icebp
or
loope
pushf
jecxz
cltd
mulb
mov
popa
dec
or
pop
xor
repz
test
nop
loopne
mov
fdivrs
jns
lea
dec
mov
add
mov
sub
mov
std
dec
test
loopne
cwtl
call
push
outsb
sub
cli
pop
xorl
test
jecxz
jp
sub
fs
xor
mov
ja
cmpsl
mov
pop
mov
repz
scas
jge
call
cli
outsl
xlat
add
das
or
mov
fdivr
mov
lret
push
jl
sbb
iret
sbb
iret
push
lock
xor
je
inc
mov
jp
sbb
outsl
cs
in
or
push
test
lods
js
sub
fs
and
in
mov
jns
push
test
lcall
daa
and
test
mov
enter
add
mov
mov
int
adc
insb
dec
fnsave
jmp
add
dec
test
rcrl
cld
pop
push
pop
push
xchg
sbb
jo
dec
cltd
jns
jl
fcomip
loopne
jo
dec
cltd
cli
std
xor
shrb
mov
jo
dec
cltd
fs
dec
shlb
mov
push
lods
cld
nop
or
ret
negb
sub
jp
adc
inc
xor
std
ljmp
call
lods
scas
outsb
popf
movsb
inc
mov
popa
jne
sub
in
pop
adc
inc
mov
pop
push
shll
lahf
xchg
sbb
mov
dec
and
push
cwtl
inc
push
in
push
push
andl
pop
loopne
jo
pop
je
popf
pop
daa
popf
jp
cmpsb
sbb
sbb
xor
icebp
mov
cmpsb
jne
jge
pop
sti
pop
mov
lahf
mov
addr16
mov
imul
and
sub
and
lcall
sub
fs
fistpll
add
sti
shl
xor
or
xor
jns
sti
les
test
call
les
loopne
negb
pushf
xchg
lahf
xor
clc
cld
pop
pushf
in
cld
jno
pop
pop
jnp
cmpb
es
call
jbe
popa
cmp
orb
ret
jp
stos
inc
ljmp
mov
je
mov
hlt
ljmp
jno
and
stc
sarb
cld
pop
stos
dec
test
idiv
mov
adc
outsb
iret
jnp
std
neg
out
adc
jle
outsl
out
pop
fdivrp
jp
neg
out
adc
jno
and
mov
fdivp
jns
decl
pop
in
adc
jno
andb
fidivrs
lods
jmp
pop
inc
inc
popf
stc
adc
jmp
jns
cli
jo
dec
cltd
jns
cli
es
add
rorl
cli
ds
push
lahf
js
test
bnd
cmp
cs
cwtl
mov
dec
js
xor
jle
lods
insb
or
insl
cli
xor
loop
idivb
pop
mov
mov
pop
add
cmp
fmuls
jns
xchg
test
inc
idiv
imul
or
jns
mov
xchg
jp
arpl
jns
nop
test
cmp
mov
out
decb
fdivp
adc
jae
or
data16
inc
inc
pop
test
pop
stos
sti
mov
imul
pop
pusha
lea
xchg
sbb
fmul
clc
xor
cmp
sbb
add
aad
in
jns
lcall
pop
cmp
out
call
jl
jp
sbb
repz
push
fld
loope
fnstenv
cld
jno
or
add
shl
jnp
hlt
cld
jno
or
jne
jne
popa
jns
hlt
pop
aad
cmp
lods
fbld
mov
jge
icebp
adc
sbb
in
and
and
lods
cld
out
cmc
frstor
xchg
in
adc
lret
dec
jbe
cs
pop
and
pop
push
in
cs
jno
clc
fadd
xor
clc
add
adc
fnsave
fadd
inc
roll
xor
ja
jmp
pop
cmp
in
push
popf
and
lahf
pop
inc
ficomps
test
xchg
pop
pop
mov
cwtl
mov
inc
jle
js
clc
js
loopne
jo
pop
push
fdivs
std
pushf
aam
movsl
pop
xchg
mov
jg
add
fmul
adc
ror
mov
mov
das
popf
mov
das
mov
insl
stc
mov
mov
out
lahf
jno
cmp
push
or
mov
loope
or
mov
outsb
lret
mov
in
adc
push
cld
and
pop
cmp
popa
cmp
insb
pop
mov
cmp
jo
jnp
mov
enter
std
mov
jl
xor
repz
test
ret
loopne
mov
sarl
and
test
jo
mov
or
outsl
add
into
pusha
xorb
cmc
dec
test
or
mov
fdivl
cld
add
and
mov
adc
stc
call
push
rolb
hlt
jg
flds
and
ror
das
ss
mov
popa
xchg
cmpsb
fucomp
inc
cmpsl
mov
mov
scas
daa
gs
mov
repz
ljmp
mov
stc
mov
cld
jo
sbb
lods
test
mov
call
shll
test
jno
jle
mov
fidivs
ljmp
xor
xchg
mov
cmp
ljmp
xchg
push
dec
pop
mul
call
inc
and
sbb
sbb
mov
call
iret
xor
and
ret
jge
mov
fcmovbe
xchg
push
inc
sti
clc
aad
loope
lods
adc
idivl
lods
xor
jns
ret
mov
shlb
out
jge
cmp
or
test
cmp
push
mov
movsl
xchg
mov
mov
ror
mov
jb
call
stos
test
and
int
and
cmp
cmp
arpl
stc
popf
cld
dec
mov
mov
sbbl
adc
sub
cwtl
nop
mov
sbb
cltd
mov
mov
and
fistpl
scas
xchg
cmpl
sar
cmp
test
cmp
inc
mov
out
adc
jns
es
loopne
jne
cld
jo
dec
cltd
mov
sub
je
mov
inc
mov
mov
pop
loop
stc
cmpsl
push
pop
jno
ret
loopne
std
jne
mov
xchg
sub
mov
push
mov
inc
add
mov
mov
xchg
stc
lcall
ret
std
cmpsl
fwait
and
loop
stc
stos
sbb
cmp
in
out
and
fbld
jns
jge
mov
inc
dec
add
movsl
test
testb
xor
sub
xchg
add
mov
fwait
inc
fucomp
dec
rcrl
sbb
inc
mov
mov
inc
mov
jg
add
popa
cmp
out
hlt
cmp
pusha
test
neg
jo
sub
inc
clc
mov
fsubrl
inc
or
daa
adc
jae
sti
js
or
cld
repnz
in
jg
or
test
shrb
sbb
idiv
cmp
cmp
push
cltd
test
sub
mov
or
push
xchg
dec
mov
pop
sbb
and
sbb
mov
shlb
repnz
aas
ud2
in
in
and
cmp
mov
mov
repz
adc
lret
fidivs
xor
dec
cltd
clc
leave
adc
mov
bound
sub
adc
imul
and
js
push
sbb
or
cmpsb
add
in
in
imul
pop
clc
add
mov
sub
movb
mov
add
push
stos
ss
jecxz
push
std
pop
mov
loop
aam
std
std
and
in
mov
icebp
sbb
repz
pop
push
cmp
scas
cli
xor
lock
fmull
sbb
xchg
or
dec
sub
outsb
repnz
mov
jp
push
loop
imul
sub
addl
enter
rolb
mov
testb
gs
sbb
xor
dec
sbb
dec
dec
pop
sub
mov
ret
jp
xchg
jge
jnp
ljmp
divb
cmpsb
lcall
push
xchg
cmc
adc
hlt
insl
fsubr
insl
and
push
cli
outsl
es
add
push
cli
mov
repnz
dec
inc
das
lcall
outsl
cmpsl
adcb
or
push
sbb
pop
in
cmp
pushf
stos
out
addb
ror
insb
call
movsb
fcomip
lds
imul
jg
fnstcw
mov
das
mov
jns
xchg
add
sub
adc
movsb
in
repnz
loopne
mov
outsl
inc
lcall
int
iret
mov
jge
and
lcall
cmp
jp
mov
jl
je
jmp
and
dec
lds
push
test
pop
xor
mov
mov
or
mov
inc
dec
fnstsw
insl
xchg
pushf
push
movsl
pop
xchg
and
xor
insl
jl
std
push
jne
ret
lret
in
jecxz
xchg
pop
shlb
dec
test
jnp,pn
push
std
clc
push
cmp
repnz
inc
shl
inc
in
shl
and
adcb
in
arpl
pop
je
lea
cmpsl
jb
xor
push
lea
std
or
iret
icebp
sub
push
out
out
and
adc
jecxz
pushf
mov
mov
add
inc
xlat
sbb
add
stc
je
shl
leave
mov
jp
sub
lcall
xchg
mov
jle
int
cmc
jp
cli
jo
xor
dec
test
popf
jnp
dec
repz
add
mov
out
iret
insl
pop
je
xor
inc
inc
in
sbb
iret
adc
xchg
or
lds
cmp
pushf
sub
iret
lds
push
int
inc
out
inc
fbstp
inc
movsl
out
aad
push
pusha
bound
jns
scas
nop
jge
sbb
loop
lods
in
jb
in
ljmp
call
js
add
jl
jo
pushf
pop
jo
fcomi
test
and
mov
jle
cld
jge
dec
mov
jp
pop
xor
inc
xchg
add
mov
ret
push
repnz
rolb
roll
jl
insb
jecxz
lcall
int
mov
imul
sub
mov
jmp
jmp
jmp
ljmp
adc
stc
imul
pop
push
inc
clc
and
stos
mov
imul
mov
mov
xorl
or
ljmp
or
stos
mov
or
fistpll
aaa
dec
jmp
pop
leave
mov
outsb
popf
das
xchg
fidivrl
popf
fucomi
int3
es
cmpsl
aaa
enter
cltd
les
ror
cmp
es
test
jecxz
and
fucomp
xor
lret
add
cli
hlt
fistps
andb
add
pop
cli
sti
arpl
sbb
push
aam
jne
jl
ret
jle
stc
push
nop
cld
out
jg
fwait
int
aad
icebp
fistpll
jl
cmpsb
dec
add
fdivr
mov
adcb
fs
hlt
fidivrs
clc
pusha
sub
xchg
subb
rcll
mov
ret
sub
xchg
rolb
and
mov
test
jle
mov
popf
sti
shrl
sbb
inc
or
mov
inc
sub
inc
mov
test
mov
sbb
adc
push
sub
add
mov
and
sti
gs
mov
sti
sub
aas
sti
push
xor
sti
cli
mov
or
lret
add
and
or
sbbb
imul
in
loop
popf
add
gs
jecxz
pop
add
stos
aas
and
int
bound
rorb
mov
mov
xchg
add
ja
iret
movsl
dec
out
add
cmp
ds
mov
push
dec
or
pop
and
addb
xchg
cmp
pop
lret
lods
dec
push
loop
mov
xor
ss
mov
pushf
adcl
inc
cltd
rorb
add
add
ja
xor
out
jmp
notl
inc
add
stos
popf
rcrl
sub
dec
or
sbb
mov
add
ds
lcall
add
test
fwait
pop
sbb
shl
je
add
addl
dec
repnz
test
jb
scas
and
daa
mov
andb
out
sbb
movsl
add
mov
cmpsl
mov
in
add
adc
adc
jecxz
cwtl
movsb
add
test
mov
and
shl
lds
adc
jnp
cs
add
nop
imul
fsubr
jbe
cmpsl
cmpsb
fstp
out
mov
xor
ret
mov
lahf
sub
es
repnz
roll
jnp
cli
and
xchg
mov
or
add
xchg
cmp
pop
fwait
test
xchg
add
mov
push
arpl
outsb
mov
cltd
mov
add
pop
mov
pop
dec
inc
das
mov
add
pop
arpl
xor
mov
add
leave
xlat
dec
jns
push
pop
add
sub
out
hlt
and
subl
xchg
cmpsl
add
jo
pop
das
cltd
inc
sbb
adc
loop
sub
jge
mov
sbb
cltd
insb
and
push
sbb
pop
movsl
jle
mov
lcall
icebp
xor
subl
fsubr
mov
sbb
or
test
std
lret
stc
and
push
and
mov
insb
popf
sbb
mov
es
xchg
jge
cmpsl
mov
stc
and
in
movsb
xlat
in
addl
movsl
cmp
aad
movsl
jo
cmp
jae
addr16
mov
dec
into
sub
addr16
jl
cmp
out
adc
push
test
mov
fucomip
mov
fsubs
das
or
popa
es
ljmp
jne
test
jne
jp
push
ja
aaa
outsb
push
cmp
jb
imul
and
and
or
jl
ficomps
mov
xchg
in
faddl
or
psllw
jnp
pop
in
mov
push
data16
sbb
dec
insb
lcall
mov
jo
sbb
fwait
cmp
jns
test
in
idivb
bound
sbb
js
mov
imul
xchg
sahf
cli
pusha
mov
mov
aam
xchg
cld
repnz
mov
lahf
lods
enter
xor
cmp
shll
xchg
jae
push
mov
sbb
adc
fildll
aas
stc
scas
test
inc
scas
std
cmp
sti
sbb
jns
stos
out
enter
push
cmpsb
dec
jle
test
xchg
mov
push
pop
dec
push
test
std
iret
sub
xor
incb
jns
mov
popa
cmpsb
shr
imul
out
data16
in
sti
mov
call
jmp
out
push
imul
sbbb
icebp
pop
jb
test
and
sub
pop
in
or
jle
add
in
or
bound
sub
jle
cmp
or
inc
stos
jb
std
sbb
sub
pop
std
xor
std
into
or
in
lods
std
cmp
stc
inc
orb
adc
lcall
jge
mov
jecxz
jge
adc
jno
lods
xor
push
cmpl
dec
movsl
jns
in
xchg
cmpsb
lock
test
push
or
jmp
sbb
push
gs
push
popa
imul
cwtl
mov
cmpsb
stos
push
fidivs
ja
aad
jne
aad
idivb
divb
cmp
and
jge
cmc
add
jl
loop
jne
fisubl
mov
cmp
push
sbb
push
and
mov
std
jge
xchg
outsl
mov
out
orb
cmp
or
ret
mov
scas
call
adc
out
jmp
mov
or
ret
mov
mov
arpl
adc
outsl
cmpsl
daa
pusha
aas
cmp
cmp
loopne
jle
or
mov
out
std
test
sti
pop
adc
pop
add
and
insl
mov
lahf
orl
insl
pop
cld
adc
add
jno
decb
fdivrp
or
popa
sbb
jmp
int
jmp
add
and
std
idiv
adc
shlb
out
std
stos
pusha
jno
filds
mov
lcall
add
loope
pop
mov
clc
xor
lahf
stc
xchg
and
xchg
test
stc
sub
and
cmp
adc
in
movsl
xchg
xor
enter
xor
mov
push
add
iret
or
pusha
sbb
push
cmp
stc
cltd
mov
mov
ret
loopne
int
push
aaa
mov
loopne
stc
out
lcall
jge
fwait
popf
fcomps
jp
std
pop
cmp
iret
pop
in
jle
lahf
jle
jns
jmp
fldcw
pop
jl
insl
jg
pop
insl
mov
popa
lods
clc
insl
push
mov
out
insl
pop
insl
xchg
jbe
mov
fcmovnu
into
adc
jg
sub
in
leave
daa
jne
inc
std
pop
and
inc
or
mov
sbb
adc
jg
pop
es
mov
and
sbb
push
fbstp
fidivrl
xchg
ljmp
cs
call
repnz
and
cmpsl
cmc
pop
pushl
mov
inc
xchg
jecxz
std
bound
sti
in
aas
fs
xor
jae
jno
insl
push
int
sub
fidivs
repnz
mov
outsb
mov
jecxz
jmp
nop
out
cmpsl
inc
pop
add
getsec
cmp
inc
test
jecxz
insb
in
out
stos
inc
pop
cmpl
in
jg
lock
pop
mov
inc
imulb
cmp
lret
aam
leave
cmp
loope
or
jb
push
xchg
stc
imull
push
inc
testl
fucompp
test
mov
jecxz
loopne
mov
push
pop
jne
cld
jno
or
jge
aad
loopne
xor
in
std
push
or
outsl
add
push
in
arpl
mov
xchg
cld
jno
or
mov
push
loopne
mov
push
mov
outsl
jl
pop
out
jno
inc
jnp
jmp
sti
push
js
mov
insl
fcompl
or
imul
jp
ljmp
jnp
jl
clc
mov
test
xchg
jne
mov
pop
mov
das
adc
rcrl
xorb
mul
icebp
fdivrp
adc
pop
xor
ja
ret
jmp
add
cwtl
adc
idivl
jns
lea
jl
jmp
fldl
cmc
jns
xchg
jne
clc
out
js
add
cmpsl
dec
rcl
scas
outsb
mov
jno
dec
movsl
int3
mov
jno
pop
nop
je
ret
popf
lock
mov
pusha
outsb
out
jne
push
jg
ret
mov
pop
lock
dec
cltd
gs
mov
std
je
mov
cld
testl
frndint
mov
adc
out
fstpl
pop
je
rcr
cmp
stc
sbbl
test
call
jns
push
jbe
jae
stc
push
push
adc
rcrl
je
out
mov
jnp
sarb
add
jae
adc
icebp
pusha
in
insl
cli
stos
fcomip
inc
insb
mov
clc
sbb
and
jae
mov
dec
jnp
aad
push
ja
mov
mov
lcall
addl
sar
push
lahf
das
dec
jp
dec
lods
pop
mov
filds
adc
cltd
jmp
roll
fisttpl
and
xorl
or
dec
xchg
sub
or
lds
jno
pop
xchg
and
out
aam
xchg
mov
mov
sar
fcmovnb
imul
mov
inc
cs
js
pusha
add
or
jmp
lock
shll
sbb
test
stc
aad
loope
lods
xor
sub
mov
or
loope
pop
pop
js
cld
sub
xor
addl
adc
cli
inc
aas
pop
jg
popf
outsl
pop
cmp
movsb
stc
aad
mov
ja
in
xchg
cmp
clc
cmpl
call
int
sub
or
mov
push
lock
mov
negb
lea
or
pop
xchg
and
xor
mov
pop
dec
cli
lcall
and
lea
xchg
cmp
jns
loope
jno
jne
in
fwait
loope
js
add
pop
mov
jnp
rcll
jle
sahf
stc
mov
in
leave
jl
addb
pop
mov
add
jge
aas
mov
aas
push
push
fnstcw
divl
aas
into
jno
cmpsl
jecxz
xlat
dec
dec
dec
enter
rcrl
push
xchg
cmc
jl
pop
shl
pusha
call
pop
dec
stos
or
rcr
push
inc
inc
enter
xchg
push
out
push
int
int
cmp
stc
loop
mov
jne
pop
jne
dec
into
negl
shr
mov
outsl
or
add
call
sti
push
int3
pop
in
call
movsl
jnp
je
enter
sti
mull
ds
sar
jmp
insl
sar
mov
add
dec
rorb
fxch
mov
mov
cld
leave
pop
pusha
pop
sbb
lret
inc
movsl
cli
call
mov
push
jo
cld
xorb
test
stos
roll
lret
pop
mov
sbb
lods
subb
repnz
hlt
dec
add
fldl2e
add
shl
pop
push
fldcw
shll
in
imul
or
pusha
pop
mov
mov
push
rcr
adc
mov
or
jns
jne
bnd
orb
dec
js
and
ret
add
jnp
ficoml
stc
sbb
out
std
or
push
sub
pop
mov
adc
or
mov
cs
and
mov
inc
testb
repz
mov
aad
jg
push
sbb
jns
jno
inc
imul
lock
inc
call
lret
add
jo
ja
and
push
sbb
outsl
mov
or
testb
test
out
fistpll
xlat
iret
add
xor
out
cwtl
push
add
and
inc
add
or
outsb
mov
xchg
mov
lahf
add
pop
pop
sgdtl
into
mov
sahf
xchg
mov
add
ss
push
push
out
jns
or
fnstenv
inc
jg
imul
lock
call
shrb
sahf
cld
push
js
sti
enter
testl
jle
addr16
aas
xor
ds
out
dec
nop
inc
cmpsl
lret
outsb
inc
sbb
sub
dec
and
lcall
xor
inc
push
inc
repnz
mov
dec
sub
add
add
mov
bound
and
addr16
sbb
xchg
add
sbb
add
das
mov
dec
out
adc
arpl
mov
adc
mov
cmp
mov
mov
jle
sub
sub
add
les
jno
and
mov
push
out
fists
leave
dec
add
scas
mov
popa
test
into
and
es
xchg
fiadds
ds
dec
push
pop
rorb
xchg
andl
inc
mov
sbb
fs
mov
rorl
push
test
sbb
pop
add
xchg
xor
pop
stc
mov
inc
pop
cmp
add
sbb
xor
dec
push
sahf
cli
test
sbb
stc
inc
xchg
dec
hlt
test
jb
pop
fidivrl
dec
dec
push
dec
outsb
sbbb
popf
arpl
addb
cltd
ds
dec
mov
lds
enter
sub
or
push
repnz
sarl
fistps
adc
push
xor
xor
mov
add
push
data16
lret
sbb
dec
scas
inc
cmp
or
mov
add
cmpsb
and
cwtl
shll
out
aaa
push
imul
mov
test
dec
inc
sub
lcall
addb
mov
mov
dec
pop
push
lods
pop
rolb
cmp
sub
jle
ss
test
jmp
xchg
repz
es
out
in
mov
add
sub
rol
repnz
pop
stos
fcomip
jg
and
movsb
jge
ss
add
inc
sub
cwtl
dec
movsb
inc
jle
mov
aaa
ud1
daa
repnz
push
cmp
bound
mov
test
add
or
pushf
dec
push
add
sbb
mov
dec
loope
sahf
test
xlat
mov
loop
pop
add
push
xchg
andb
and
ret
aad
push
test
jle
jb
adc
mov
test
data16
push
xor
les
aam
movsb
push
scas
orl
cltd
repz
sti
pop
loope
arpl
ret
fisubrs
pop
and
enter
jnp
and
mov
mov
test
clc
shll
outsb
out
xchg
subl
push
mov
inc
repz
sub
aas
ds
xor
pop
jne
sub
loop
sar
push
and
movsl
and
mov
icebp
cmc
ljmp
test
xchg
cmp
stos
sbb
lret
scas
add
imul
xchg
repz
inc
add
addl
xlat
lret
add
out
cli
xor
std
cmp
adc
inc
scas
sbb
mov
inc
add
push
jb
iret
inc
adc
dec
ret
push
push
daa
cs
lahf
int3
ficomps
cmpb
inc
sub
ret
inc
pop
mov
loope
repnz
xor
pop
xchg
stos
adcl
mov
mov
bound
xchg
jmp
xor
bound
mov
pop
cmp
add
lea
xchg
add
jl
roll
add
pushf
and
cmpb
xchg
mov
dec
add
cmpsb
sub
lcall
jmp
jbe
xchg
testl
pop
or
mov
sti
push
dec
inc
out
es
xchg
or
sbbl
xchg
cwtl
icebp
add
enter
aas
inc
testb
and
push
mov
test
push
cmpb
cmc
js
and
or
add
and
imul
movsb
add
nop
add
cmpsl
or
stos
adc
or
sub
test
iret
idivb
bound
lret
mov
adc
ljmp
sti
dec
sbb
lods
inc
add
test
ret
add
cli
loope
pop
or
xor
stos
or
imulb
test
in
stos
shl
daa
xchg
sbbl
mov
sbb
add
into
mov
das
mov
add
ja
repz
push
dec
lret
icebp
mov
roll
add
sub
add
test
dec
cmp
mov
or
jne
hlt
clc
out
add
into
jecxz
jecxz
pop
jp
sub
cltd
or
adc
aad
push
ss
xchg
push
dec
xchg
call
add
gs
stc
mov
add
lock
xchg
repnz
dec
xchg
ljmp
scas
enter
fwait
loope
sahf
pop
jle
or
mov
jge
lret
add
mov
adc
or
aas
add
or
inc
fildl
adc
cmp
add
ja
mov
fildll
inc
mov
adc
in
cmpsb
pushf
aad
xchg
cwtl
jg
cmpsl
xor
leave
add
ret
ret
push
add
loope
movsl
adc
or
xchg
fbld
lcall
nop
xor
add
mov
aam
jl
push
and
jp
mov
lea
daa
push
cmp
inc
jb
loope
lods
fsubl
ret
mov
mov
jg
mov
test
int3
popf
loopne
adc
inc
imul
mov
hlt
negl
push
loop
jp
or
sbb
stc
std
jle
rcrb
adc
sar
mov
pop
mov
int3
mov
and
movsl
mov
hlt
add
inc
xchg
dec
mov
rcrl
xor
shrl
and
push
mov
mov
lret
adc
add
adc
or
adc
dec
add
dec
mov
add
jp
fwait
lret
inc
jb
add
mov
inc
add
sti
pop
mov
lea
add
ud1
fbstp
add
xchg
int
ljmp
enter
xchg
and
mov
sbb
movsb
add
push
push
inc
mov
mov
jae
lock
and
xadd
out
add
dec
inc
es
dec
fists
call
inc
lds
lea
cli
add
mov
and
add
cmpsl
outsl
js
add
in
and
push
fisubl
inc
mov
scas
cmp
and
cmpsb
adc
loop
out
insb
jae
jle
mov
jmp
cmp
add
test
and
call
mov
add
xor
inc
jo
sub
pop
mov
mov
fucom
add
and
sbb
test
es
mov
cmp
or
jp
push
jle
xchg
ret
inc
mov
inc
mov
cli
das
add
inc
dec
sub
call
push
mov
enter
cmp
cmc
sahf
add
daa
imul
sbb
aaa
leave
sub
fimull
cmpsl
mov
sub
call
outsb
add
add
xchg
test
xchg
cmp
jge
inc
cmpsl
dec
add
mov
fiadds
or
xor
add
dec
stc
fcmovnb
shrb
pop
test
mov
mov
sbb
sbb
cmp
rcll
movsl
push
inc
jp
mov
cwtl
cltd
aas
xor
and
push
mov
imul
xchg
jg
lea
sbbl
inc
add
lock
mov
mov
in
orl
rol
lods
xchg
inc
popf
xor
les
cs
mov
pop
pop
mov
xor
xorl
push
and
mov
rolb
xlat
enter
mov
lret
bound
add
push
xchg
sub
pop
cltd
sub
je
add
xchg
mov
adcl
ret
adc
aad
xor
dec
out
xor
cli
sbbl
mov
lods
adc
push
clc
and
popa
add
aad
test
push
add
cmp
add
cmpsb
dec
ret
stos
inc
jmp
pop
mov
add
inc
out
xchg
jnp
xor
mov
jbe
xchg
xchg
sub
mov
and
push
stc
xchg
adc
stos
rclb
into
dec
test
mov
add
les
lret
pushf
outsl
push
cwtl
rcrl
mov
cmpsb
ret
xchg
xor
jbe
cmp
mov
in
dec
das
out
cmpl
mov
fadd
add
jmp
xor
cmp
push
iret
je
push
adc
out
add
xchg
aas
mov
addb
jmp
or
mov
frstor
push
shll
sub
je
mov
jle
loop
mov
cmp
dec
cmpsb
js
movsb
sub
into
and
add
jae
dec
mov
jbe
inc
xor
mov
lods
pop
add
les
sahf
cmpsb
mov
sbb
mov
push
add
fs
stos
sti
dec
cs
arpl
pop
shll
mov
cmp
dec
jmp
add
xlat
jp
adc
ss
dec
fdivrs
jo
sbb
jb
roll
jle
sbb
jmp
xor
outsb
sub
adc
dec
pusha
outsl
xchg
sub
je
xor
lods
or
cmp
inc
loop
imul
sti
into
shl
gs
les
cmpsl
test
mov
add
dec
test
pop
lret
adc
lea
and
int3
notl
sub
push
mov
stos
add
mov
pop
sub
dec
sbb
sub
pop
pop
pop
or
inc
and
mov
push
dec
pop
sbb
mov
sbb
sub
jle
arpl
sarl
mov
mov
add
fs
jge,pt
cmp
sub
sar
pop
mov
testl
xor
cld
jecxz
pusha
mov
push
pop
pop
xchg
jae
daa
cmpsb
and
xor
pop
push
sub
pop
faddl
jmp
cmpsb
swapgs
add
jo
cmp
xchg
add
cmc
push
add
push
daa
dec
xchg
sbb
add
ret
and
movl
shlb
push
add
lret
add
xchg
sub
cmc
xchg
addb
dec
mov
push
clc
aam
xchg
add
xor
dec
inc
pop
jle
push
dec
jmp
arpl
jne
adc
add
inc
and
sub
ret
add
push
js
repnz
scas
add
push
jle
sub
inc
jp
xchg
sub
dec
sbb
xchg
sbb
fisubs
in
mulb
add
popa
test
jae
add
in
xchg
and
add
addl
push
mov
sbb
lret
daa
xchg
shrl
in
push
dec
adc
std
push
ret
loop
blcic
cmp
sub
rcl
pushf
jle
daa
mov
fldcw
jns
push
mov
add
push
xor
orb
daa
jl
xor
adc
repz
xchg
and
add
sbb
lret
rolb
das
cmp
cmc
dec
mov
sbb
movsl
out
or
aad
inc
add
adcl
sbb
out
aaa
add
sub
push
mov
loope
mov
jge
dec
repnz
test
add
shlb
pop
pushf
sub
or
pop
jno
mov
rcl
in
cmpsb
gs
cmp
mov
sub
adc
jae
shll
int3
mov
rcl
in
icebp
dec
cmpl
fwait
in
jae
call
cmp
frstor
int
fldl
arpl
xor
add
dec
dec
dec
sti
push
incl
adcb
add
inc
jle
dec
jae
xchg
nop
mov
or
aas
inc
add
call
jo
and
out
xchg
push
clc
fcoms
or
add
pop
divl
mov
mov
pop
mov
dec
loope
icebp
and
dec
xlat
shrl
adc
add
les
bound
cwtl
or
or
add
test
jl
call
jne
push
and
xchg
stos
or
scas
int
xchg
adc
test
mov
jg
jne
jae
cmp
mov
mov
cmpb
or
pop
pushf
inc
icebp
lcall
xchg
push
cli
leave
adc
shll
inc
jb
jmp
adc
test
sbb
gs
nop
in
dec
jge
adc
int
loope
addr16
cmp
add
rorb
push
in
mov
cmpsb
scas
mov
push
and
xor
lods
inc
pop
or
cltd
and
pop
rep
mov
roll
xorl
mov
inc
cmc
pushf
xor
ss
ror
mov
sbb
loop
inc
addb
loop
fwait
add
mov
push
add
xchg
shlb
pop
inc
or
sub
jbe
push
add
xor
pop
dec
adcl
test
lret
fwait
mov
mov
pop
movsb
lahf
or
andl
pop
lock
pushf
jp
outsl
orl
cmp
ret
dec
xor
subb
and
mov
aaa
inc
test
gs
jge
je
pusha
add
and
add
push
shrl
movsl
and
or
add
mov
test
mov
push
test
gs
lods
jecxz
push
add
dec
stc
imul
fdivl
or
outsb
mov
rcll
xchg
jg
testb
jno
fwait
add
stos
cmpsb
imul
jbe
mov
andl
inc
pop
arpl
jnp
xchg
andb
sub
out
add
aad
and
notb
inc
and
or
dec
hlt
push
mov
fisubl
push
mov
add
cmpsb
adc
add
ret
jp
xchg
sbbl
mov
rcrl
xor
gs
fs
loope
xchg
invlpg
or
dec
andl
mov
pop
repz
pusha
jp
test
outsl
or
push
sub
inc
les
aaa
add
scas
cs
sahf
sbb
add
std
xchg
push
push
jmp
adc
adc
cmp
movsl
add
bound
std
jg
mov
popf
dec
mov
jae
addl
lahf
jp
lods
lahf
mov
xor
pushf
and
add
cmpsl
test
movl
mov
mov
dec
push
popf
add
lret
dec
inc
dec
xchg
mov
loop
cmpsb
arpl
pop
lret
imul
mov
or
movsb
push
dec
add
xchg
jnp
adc
aad
imul
or
stc
add
scas
jno
sbbb
js
sbb
xchg
icebp
enter
jo
repnz
lret
addl
aad
fldl
fcmovb
cli
fidivrs
add
inc
dec
je
sub
test
mov
in
clc
mov
sahf
inc
xor
jp
push
lods
push
sar
mov
bound
xchg
orb
push
sub
or
sbb
xlat
leave
cs
pop
xchg
call
jmp
jmp
xlat
test
xchg
mov
lods
or
jl
lods
jle
dec
adc
out
adc
jb
add
imul
mov
loop
mov
test
mov
xor
add
cmp
pop
out
stos
mov
mov
jb
adc
shl
arpl
int3
sbb
popf
xchg
filds
mov
xor
xchg
aad
xchg
ljmp
add
mov
leave
ror
xchg
sar
mov
shll
add
sbb
or
add
mov
add
dec
ret
test
mov
fwait
cld
jmp
scas
xor
int
mov
aad
sub
jp
pop
fisubs
mov
add
mov
add
sbbl
mov
dec
addb
add
sub
pusha
sbb
arpl
fs
xchg
repz
jmp
sbb
inc
and
and
out
mov
repz
data16
xchg
repnz
and
xor
lret
jp
outsb
fimuls
sbb
insl
cmp
stos
push
or
add
bound
and
iret
fistps
ret
nop
inc
aaa
and
pushf
mov
mov
add
jl
dec
ret
dec
stos
aad
lods
add
push
xorl
icebp
add
aad
addl
in
dec
jb
mov
or
adc
adc
pop
gs
test
dec
into
test
sbb
mov
pop
test
aam
cmc
mov
and
shrl
arpl
addl
mov
mov
push
pop
test
add
push
inc
cwtl
rolb
xor
inc
in
insl
ret
sahf
add
fdivs
xor
lcall
push
xchg
or
imul
cmc
push
jg
ja
xchg
dec
sarl
xchg
lods
incb
and
lods
mov
jb
sub
xchg
jmp
sbb
xchg
jmp
mov
pop
push
sbb
and
rcrb
aam
shl
aad
add
out
jmp
arpl
rorl
or
or
test
cmp
repnz
jle
lret
cmpsb
mov
sbb
popf
cs
xchg
inc
das
pop
ret
mov
ljmp
icebp
cmpsb
fidivrs
add
test
push
or
adc
mov
mov
add
mov
das
add
inc
aam
out
push
jp
push
dec
push
icebp
mov
cmp
dec
add
movsb
jmp
sbb
notb
orb
bound
add
rolb
in
add
add
sbb
loope
cmp
fs
cmpb
sub
mov
and
test
fnstenv
xchg
add
lods
jecxz
mov
mov
pop
or
mov
xor
arpl
push
movsb
add
push
adc
hlt
fstl
pop
add
les
sbb
inc
es
jbe
push
les
aad
mov
xor
add
ret
es
sbb
orb
mov
pop
outsb
xchg
mov
in
push
mov
mov
jne
loop
call
xor
sbb
cmp
pop
push
call
insl
add
sub
add
cmp
sbb
pop
loop
mov
pop
pop
add
in
mov
adc
pop
add
imul
fcompl
pop
mov
andl
inc
adc
test
pop
cltd
jle
lds
cli
scas
in
dec
scas
inc
aad
icebp
int
adc
push
adc
imul
mov
xchg
dec
test
jmp
adc
sbb
or
and
mov
cwtl
roll
push
in
cmp
ret
cmp
jle
push
push
adc
xchg
mov
mov
ds
pop
push
add
mov
sub
data16
and
in
hlt
jp
les
dec
test
push
add
inc
pop
add
cmc
xchg
add
in
inc
xorb
pop
inc
add
sbb
mov
scas
stos
out
pusha
ds
repnz
jbe
bnd
mov
mov
xchg
in
sub
xchg
mov
cs
add
sbb
add
pop
sub
and
sbb
push
dec
xchg
adc
add
and
adc
add
dec
repnz
loope
or
test
mov
cmp
cmp
mov
mov
loop
push
lret
xor
cmp
fs
add
shlb
add
movsb
cmp
sbb
mov
cmp
jne
jp
add
orb
mov
dec
add
dec
add
rcl
push
lret
jnp
xor
ss
add
dec
add
and
sahf
or
cwtl
add
add
lds
xchg
inc
arpl
and
dec
out
insl
imul
orl
inc
gs
inc
mov
xor
adcb
jns
xchg
push
adcl
in
ret
mov
sbb
lahf
adc
cmp
shl
or
ret
sub
rorb
cwtl
gs
jle
andl
xor
jecxz
sub
inc
xchg
loopw
lods
and
mov
inc
sbb
add
and
inc
lods
mov
xchg
push
jo
adc
mov
adc
add
add
or
sub
adc
adc
jnp
lods
add
jb
and
loope
push
or
pop
mov
xchg
xchg
or
mov
movb
daa
mov
into
arpl
add
lods
or
add
lcall
adcl
out
jp
cmc
pusha
adc
pop
xchg
mov
or
shlb
or
xchg
jge,pn
cmpsb
sbb
dec
push
or
add
shl
sub
xchg
aaa
pop
xchg
jl
loope
sub
sbb
and
jne,pn
cmp
push
xchg
ss
mov
adc
add
orl
mov
xor
lods
or
out
idivb
push
loopne
pop
ljmp
pusha
cmp
orb
shll
test
hlt
std
out
in
call
shl
jnp
dec
pop
repnz
jne
jno
or
jge
mov
out
fdivr
outsb
mov
js
movl
addr16
jnp
mov
stc
clc
xor
cmp
fdivrp
jno
mov
test
lea
orl
repz
jno
mov
lea
loope
sti
repz
int
fcomip
jno
pusha
pop
mov
inc
shl
jns
jmp
in
dec
repz
inc
scas
shrb
jbe
xor
dec
lret
les
jl
cmp
lret
lret
cmp
dec
add
iret
in
add
or
icebp
pop
fmuls
js
fimull
aas
lret
pop
fisttpl
pop
stc
cmp
adc
cltd
ds
fmul
icebp
int
push
decb
dec
push
dec
mov
mov
or
xorl
cmp
pop
sub
enter
jecxz
incb
dec
in
ss
dec
sti
mov
pop
pop
addr16
pop
idivl
jno
push
inc
jnp
pop
in
enter
iret
imul
clc
xor
out
add
jp
inc
enter
aad
mov
fdivrp
inc
pop
dec
dec
dec
je
push
lret
mov
and
pop
dec
fisttpll
pop
fcomi
es
cltd
jne
stos
jbe
imul
add
popa
mov
jo
ja
jbe
outsb
jle
mov
cmp
jge
pusha
call
push
push
jl
dec
pusha
adcl
loopne
stos
jne
ds
fcmovu
lret
mov
mov
dec
out
gs
mov
pop
loop
pop
sti
xchg
sbb
loop
pop
jl
insb
int
sbb
in
add
leave
mov
cmc
stc
jns
andl
jno
inc
outsb
imul
xchg
push
push
xchg
and
jno
mov
jp
popa
inc
iret
inc
dec
inc
rolb
inc
icebp
inc
flds
call
das
cld
leave
test
lock
cmpb
pop
std
rolb
jle
cmc
or
jns
in
lahf
lret
ljmp
dec
or
adc
xor
jmp
ret
push
dec
dec
icebp
shl
mov
in
and
mov
and
push
addr16
jmp
dec
int
ffree
enter
fcmovbe
push
and
iret
outsb
andb
jecxz
in
dec
leave
sbb
lret
push
icebp
stc
lret
cmpsb
cmpsl
repz
lcall
jo
dec
and
aad
cmp
movsl
xchg
pushf
push
in
test
pop
mov
dec
dec
dec
lods
mov
iret
into
cld
in
pop
dec
jae
leave
movsl
xor
dec
leave
aad
jnp
add
xor
pop
jne
inc
lret
or
shll
in
dec
cmp
jmp
icebp
loopne
fisttps
push
xchg
xchg
je
icebp
stc
push
adc
mov
or
in
call
imul
sub
dec
push
or
imul
jnp
into
out
mov
loopne
jae
icebp
hlt
mov
jp
sub
pop
ss
call
sahf
xchg
jcxz
push
cmp
lcall
filds
stos
loop
addr16
out
pusha
push
shrb
out
push
mov
mov
out
leave
iret
icebp
ret
jb
push
inc
loop
cmp
divl
fisttpll
test
ja
jo
push
mov
pop
cmpsl
addr16
loope
in
pop
mov
bnd
testl
xlat
ja
cmp
enter
stc
push
or
inc
mov
mov
aas
jbe
fs
sbb
mov
jle
into
gs
aas
test
fbstp
jge
add
icebp
imul
xlat
popf
out
addr16
in
insb
add
test
cmp
xor
pop
dec
iret
cld
popl
mov
in
repz
in
xor
data16
lock
insb
bound
in
pop
mov
pop
pusha
dec
shl
mov
mov
cmp
ljmp
insl
loop
rcrl
cld
push
mov
mov
rorb
pop
cmp
or
mov
mov
pushf
cmp
dec
push
or
mov
jecxz
ds
dec
dec
push
leave
ficoml
test
push
cmp
xor
push
push
cld
lret
sbb
lret
inc
leave
sub
push
sub
loope
int3
addl
ds
test
xorb
sbb
sub
adc
clc
mov
jnp
scas
dec
mov
jg
jge
lret
jnp
push
pop
add
cmpb
or
enter
inc
mov
mov
mov
jge
or
inc
daa
movsl
lea
xor
xchg
add
imul
jge
pop
loopne
push
out
push
inc
cmc
sarb
outsl
pusha
xor
sub
jne
add
outsb
adc
rorb
mov
pop
fisubs
pop
push
in
add
adc
test
cwtl
nop
add
mov
and
adc
into
or
gs
cmp
add
insb
pop
add
mov
fimuls
and
or
or
add
or
sbb
push
adc
imul
mov
jne
add
loopne
dec
add
mov
js
mov
call
loopne
inc
jo
ja
xor
idiv
push
add
mov
rclb
cmc
add
or
add
out
iret
outsb
cld
dec
inc
idivl
faddp
test
insw
mov
insl
hlt
mov
cmpsl
daa
or
or
jl
push
into
in
mov
push
mov
add
aad
lds
popf
xchg
lea
add
xor
or
int3
les
xchg
mov
sbb
mov
stc
hlt
xchg
movsb
adc
add
or
lods
xor
xor
arpl
adc
sub
add
repnz
or
mov
aad
movsb
leave
add
das
stos
subl
jae
sbb
mov
jmp
add
test
push
psrad
adc
and
fstps
push
add
rorb
gs
push
imul
mov
inc
out
sub
sbbl
cmp
mov
inc
inc
sbb
add
xchg
xlat
add
jge
add
mov
add
mov
les
add
popa
push
mov
or
ficompl
jbe
lods
cmp
xor
scas
pop
nop
sbb
dec
cltd
add
jmp
leave
add
or
pop
push
out
shr
add
in
imul
jmp
lock
pop
add
sub
je
imul
jmp
cmp
add
lea
xor
adc
add
xchg
jl
or
rcrb
cmp
dec
xchg
sbb
xchg
bound
cltd
icebp
dec
or
push
pop
cld
das
mulb
add
icebp
sbb
add
xor
loop
jmp
xchg
jne
jp
out
jp
adc
rol
shll
add
xchg
xor
sbb
add
mov
leave
sahf
add
inc
cmp
jmp
push
ss
push
out
enter
movsb
dec
add
push
cmc
js
pop
mov
pop
push
mov
mov
adc
jl
mov
inc
xchg
jmp
je
outsl
cmpl
repz
pop
loope
pop
mov
inc
imul
sub
mov
and
sbb
mov
sub
jl
subl
or
test
std
das
int3
xchg
xor
sbb
js
xlat
add
inc
imul
mov
xchg
icebp
jbe
add
push
test
dec
inc
sahf
add
imul
add
jo
xor
in
cvttps2pi
mov
mov
mov
mov
psubsb
lods
loope
imul
sub
and
ds
in
mov
xchg
push
and
cmp
xchg
scas
stc
adc
add
scas
cmp
mov
mov
jno
mov
adcb
sbb
jo
and
sub
jb
lock
push
fidivl
sub
dec
adc
stos
das
popf
aam
mov
and
gs
mov
shl
or
xor
inc
out
dec
enter
add
mov
pushf
cmp
sbb
xor
mov
repz
push
ljmp
pop
jl
mov
fsts
jle
aas
add
movsb
cmp
mov
dec
mov
shlb
add
adc
sbb
jae
adc
push
and
sarb
outsl
pop
fst
push
lret
mov
ja
fcompl
test
test
into
or
mov
test
xchg
cmp
mov
push
dec
pop
adc
mov
fstpt
std
loop
bound
add
adc
in
sub
xor
add
push
mov
iret
add
or
add
arpl
add
xchg
jp
stos
add
mov
mov
fwait
stc
jb
jo
add
aam
popl
add
add
xor
jecxz
dec
xchg
or
loope
fistpl
in
jecxz
add
call
push
sub
add
mov
xchg
mov
shl
insb
and
jg
xor
out
xchg
shrl
scas
ljmp
repnz
jle
aad
pop
push
push
xchg
add
xchg
outsb
es
and
jne
mov
mov
jle
call
roll
cwtl
push
jne
add
inc
in
dec
jb
aas
add
leave
arpl
movsb
shll
clc
inc
adc
sbb
push
mov
sub
xchg
mov
mov
call
ret
in
and
pop
mov
add
sbb
nop
mov
inc
mov
sub
test
add
sarl
sub
mov
push
ljmp
xchg
inc
nop
loop
mov
add
push
mov
add
loope
jg
jnp
int
repnz
lret
inc
xchg
pop
adc
mov
cmpsb
lods
add
std
aas
pop
inc
push
or
lcall
push
fs
dec
add
jle
ret
ror
pushf
cli
adc
dec
ljmp
fsubp
jl
andl
rcrl
testb
or
push
xlat
inc
pushf
add
out
mov
loope
jmp
mov
adcb
movsb
nop
and
cld
add
imul
push
jo
int3
insl
add
add
or
push
cli
movsb
xchg
enter
lds
inc
sub
fcmovb
sub
pop
lock
jle
xadd
xchg
add
mov
lds
jo
and
aad
push
cmp
cmpsl
sub
in
leave
add
cmp
dec
add
cmp
and
jae
add
sbb
adc
xchg
xor
lods
and
lea
inc
mov
roll
loop
sub
add
mov
adc
mov
cmp
imul
sub
add
xchg
xchg
push
mov
adc
inc
incl
ret
and
pop
mov
pop
mov
xlat
cmpsl
sub
lahf
jne
loope
lret
pop
jle
cmp
outsb
enter
add
cmp
push
cmp
add
test
sub
mov
aaa
push
jmp
cli
hlt
pushf
lahf
insb
add
pop
popa
mov
data16
icebp
inc
cltd
add
xchg
or
mov
dec
ljmp
sub
fwait
pop
dec
xchg
jecxz
inc
in
stmxcsr
inc
popf
cli
adcl
and
mov
movsb
mov
vxorpd
xchg
xchg
add
dec
je
dec
and
out
add
jle
push
lods
addb
iret
adc
xchg
mov
sbbb
in
mov
mov
cmp
mov
pop
add
xchg
adc
outsl
ret
inc
repz
inc
xchg
push
addl
xlat
sbb
in
les
mov
out
lahf
push
add
popf
fnstsw
add
sub
ficoms
sbb
xchg
push
adc
outsb
sbb
cmc
sbb
mov
clc
adcl
pusha
jle
sub
mov
testb
sbb
addr16
imul
mov
mov
jne
pop
and
pop
push
lods
add
in
int
push
xchg
xor
je
movsb
lods
xor
jne
cmpsb
ja
scas
frstor
call
lock
sub
fcomps
rcll
mov
orb
cmp
xor
out
shrb
scas
xor
movsl
or
sbb
xchg
mov
push
mov
xor
jns
sahf
jp
aas
fisubrl
add
repz
inc
and
add
test
jbe
mov
jne
in
test
cwtl
loope
pop
lret
repnz
insb
xchg
fcmove
cmc
iret
mov
adc
test
jl
sbb
loopne
dec
popa
shll
add
lret
push
cmpsb
or
add
sub
pop
mov
fcomps
inc
enter
mov
adc
pop
shl
cmp
pop
mov
fcomp
cmp
mov
cli
icebp
arpl
add
jge
or
xchg
mov
mov
test
test
sbb
sub
mov
sub
pop
fmuls
mov
ret
add
loopne
lds
mov
xor
and
das
add
pop
xor
add
imul
dec
ss
dec
aad
cltd
fisubrs
mov
cmp
aam
xchg
add
sti
pop
lret
cmc
mov
repz
jle
rcl
push
fwait
xchg
ret
pop
lret
add
push
dec
xor
fdivrl
jno
jns
mov
imul
inc
pushf
cmp
fwait
sbbb
inc
mov
sar
fdivrl
push
sub
ja
loope
ret
movb
cmpsl
pop
outsl
adc
xchg
add
pop
testl
into
mov
cmp
sub
or
movsb
add
jnp
mov
or
mov
mov
dec
add
fnsave
jecxz
pop
jle
jo
xor
or
add
mov
rorl
repnz
sub
jmp
fsubs
js
cltd
fs
enter
mov
jg
addr16
and
add
sbb
push
push
push
add
and
xor
or
push
cltd
daa
jecxz
add
sbb
mov
push
je
or
aas
jp
jmp
clc
mov
mov
ret
mov
push
add
jmp
fwait
add
stos
add
loope
fstl
fbstp
scas
fisubs
subl
push
mov
iret
push
add
in
jnp
pop
jno
jle
push
insl
or
sub
mov
xor
dec
pop
lahf
pushf
cmpsl
mov
cmp
mov
pop
sub
fs
add
outsl
mov
adc
in
dec
mov
inc
add
or
add
out
dec
add
push
aam
add
popa
out
out
mov
bound
mov
pop
sbbl
inc
or
sbb
xchg
fildl
pop
dec
fiaddl
add
cwtl
lret
adc
push
cmp
or
fmuls
xchg
mov
or
cmp
shrl
addb
mov
js
sub
sbb
xor
pop
pop
adc
add
test
mov
mov
jle
aas
into
enter
sbb
inc
adc
dec
xor
pop
sub
mov
pop
sbbl
xor
sbb
out
ja
mov
jp
neg
xchg
mov
sub
test
pop
adc
sti
rcrl
sbb
or
cmp
outsb
xor
mov
adc
idiv
mov
orl
pop
jl
mov
fsubl
sbb
mov
test
fsubp
mov
repz
cmp
roll
mov
dec
sti
mov
shlb
jno
inc
xchg
jmp
movsl
fldl
lret
mov
jle
add
pop
mov
fiadds
push
mov
sbb
ret
adc
into
sbb
push
fdiv
ljmp
insb
cmpsl
das
sahf
iret
add
clc
dec
fidivrl
xor
sbbl
shr
mov
add
fsts
xor
bound
fidivl
shl
mov
rol
add
enter
es
adc
inc
cmpb
xchg
fldt
dec
jmp
dec
popf
add
jno
mov
or
add
mov
jb
pop
push
cli
pusha
insb
flds
pop
add
fnstenv
add
push
push
movsl
jbe
ljmp
xchg
mov
mov
flds
arpl
fs
pop
and
push
dec
inc
lcall
sbb
sti
pop
rorl
add
loop
in
add
mov
xor
ret
aaa
and
jo,pt
addr16
in
pop
mov
pop
loope
dec
mov
sbbb
cs
sbb
add
out
test
jp
xchg
xchg
mov
in
int3
addl
ljmp
jae
sbb
lods
xor
cld
ret
mov
or
ss
jle
push
ret
orb
lods
scas
stos
lds
lods
lcall
xor
pop
mov
add
add
imul
fists
and
mov
jl
js
mov
mov
mov
add
lahf
mov
sbb
cwtl
add
or
dec
add
test
in
add
mov
nop
cmpsb
into
adcl
or
ljmp
add
xchg
out
sub
xor
mov
roll
mov
jns
sbb
add
push
dec
xorl
shl
ret
jae
jb
and
add
popf
addl
std
add
pop
jo
jmp
mov
sub
int3
xor
lods
data16
cmc
jecxz
loop
stos
lahf
sub
add
test
add
inc
xor
jns
les
inc
nop
mov
dec
add
adc
add
lahf
mov
dec
in
sbb
mov
and
cmp
pop
es
test
lods
fwait
popa
mov
add
mov
loop
ret
and
push
dec
xchg
add
mov
andb
lahf
xlat
fstps
test
int3
rolb
pop
xchg
mov
push
inc
jnp
in
mov
mov
jge
fcompl
test
xchg
pushf
jns
cmp
idivl
mov
adc
loop
and
inc
sti
pop
add
rolb
hlt
mov
adcl
rcl
pop
dec
test
aaa
xor
push
rorb
mov
xchg
cmpsl
enter
fiaddl
or
pop
sbb
lret
dec
and
push
int
stc
mov
jp
in
movsl
aad
xor
xchg
dec
aas
mov
xorb
or
shll
dec
ret
jle
je
js
jmp
add
adc
movl
xlat
xchg
arpl
add
popf
ljmp
inc
push
dec
add
int3
sbbb
mov
pcmpeqb
add
scas
or
or
xchg
jp
fst
popa
sub
les
int3
mov
outsb
cli
cmp
pop
aaa
jo
cld
cltd
cmpsl
mov
aas
push
mov
in
nop
adc
ret
sbb
xchg
insb
mov
repz
add
popf
push
pusha
fwait
sbb
call
add
or
test
aam
sti
adc
pop
and
adc
scas
mov
xchg
add
outsl
subl
add
scas
or
test
adc
repz
andl
jo
in
push
jae
or
xor
sbb
cltd
fisubs
dec
repz
jns
jle
test
mov
mov
jb
pop
std
fstpt
cmp
dec
add
add
dec
in
aaa
add
mov
dec
xor
repz
push
shl
mov
dec
or
add
and
xchg
cmp
int
add
inc
popf
inc
dec
in
xchg
mov
inc
jp
adc
ficoml
pop
clc
insl
fs
sbb
fwait
xchg
lods
mov
shll
test
lret
fnstenv
cmpsb
shll
inc
into
loop
bound
or
mov
mov
add
inc
mov
pop
jle
xchg
sbb
mov
xor
mov
add
xchg
lret
cmpb
dec
aaa
loope
cmovge
orl
push
sbb
xchg
cmc
nop
mov
add
scas
inc
call
les
stos
add
sub
cs
inc
insl
jp
push
or
mov
cmpsl
mov
loop
add
jl
adc
sarb
data16
orl
or
cmp
fstl
add
inc
out
push
fldt
mov
sti
or
jle
push
inc
repz
loope
mov
cli
xor
fs
cltd
xor
sbb
in
popf
mov
testl
dec
sub
mov
fwait
dec
add
lret
lcall
aaa
fdivr
dec
addb
sub
test
lds
add
fnstsw
sahf
sbb
out
lods
stc
xchg
aaa
push
pop
xchg
and
iret
mov
ret
mov
pushf
mov
iret
cmp
lcall
arpl
leave
shll
dec
lret
add
cmp
incl
and
cmpsl
dec
ss
dec
stos
xor
jp
scas
test
clc
fildl
xchg
in
inc
out
outsb
jle
jle
cmpsl
sub
or
pushf
inc
clc
cltd
jb
and
cltd
pop
rorb
out
add
add
testl
dec
add
cs
adc
clc
pop
add
mov
leave
lods
jmp
xchg
insb
js
sarl
call
cli
jg
not
arpl
loop
xchg
jb
ljmp
in
iret
lods
jbe
imul
inc
add
dec
cmpsl
cmp
mov
enter
add
sub
or
jl
add
pop
insb
in
mov
test
add
mov
fsub
xorb
arpl
xchg
pushf
dec
mov
sti
mov
sbb
mov
in
add
insl
cmp
mov
cwtl
jnp
andl
out
add
clc
aad
mov
hlt
lock
mov
jge
mov
test
or
or
add
gs
add
sub
xor
xchg
mov
bound
inc
daa
notb
lcall
lahf
fadd
pop
or
dec
sub
xchg
in
fwait
inc
aad
jb
add
mov
imul
mov
cmp
lahf
inc
leave
pop
ret
cli
lds
arpl
sub
es
and
int
rcll
jl
mov
ljmp
sti
push
sbb
insl
add
adc
add
in
mov
dec
lcall
sbb
pslld
js
sbb
sbb
popf
cmp
inc
mov
call
push
mov
and
mov
pop
stos
sub
out
cmp
int
fsubr
push
add
js
pop
stos
push
gs
or
push
cmp
mov
cmp
jecxz
pop
fldt
jle
pop
pop
push
cwtl
mov
add
adc
xchg
lock
xchg
imul
inc
sbbb
lret
and
jecxz
add
inc
mov
sbb
cmp
and
subb
push
fs
mov
push
dec
pop
sbb
pushf
xchg
les
lods
iret
aam
adc
add
sbb
xor
jae
imul
bound
pop
loop
repz
cmp
xor
lahf
test
jg
inc
lea
push
and
aam
sti
cmpl
stc
pop
adc
cmpsl
roll
jb
xchg
mov
ja
dec
xchg
jmp
stc
daa
add
jmp
or
cmp
mov
add
jo
adc
add
pop
sub
add
adc
into
xchg
cld
jmp
inc
repz
pop
repnz
pusha
imul
fs
cli
pop
je
jmp
mov
sub
mul
arpl
cli
mov
stos
sar
or
add
push
adc
and
pop
addr16
add
jg
add
dec
mov
cmp
mov
xchg
cmpsb
mov
xlat
push
mov
mov
lods
movl
sub
jle
mov
outsb
xchg
sub
add
sahf
es
add
and
push
jl
inc
sub
add
mov
decl
fsts
add
addl
push
adc
mov
add
add
pop
mov
add
pusha
jae
data16
mov
add
sub
adc
pushf
jl
pop
icebp
repz
dec
add
and
vunpckhps
ljmp
mov
inc
and
cli
sub
xchg
push
lods
sub
jo
cwtl
xchg
imul
subb
cmp
and
adcl
addl
shlb
dec
sbb
sub
inc
fadd
testb
or
enter
cmp
xchg
jl
mov
gs
sub
cmpsb
lahf
mov
fimuls
inc
sbbl
loop
shll
xchg
push
pop
and
or
shll
es
scas
add
mov
popa
test
sbb
or
pushf
or
sbbl
push
pop
div
pop
lds
push
fisttpll
xlat
pop
shrl
add
mov
int
test
mov
mov
pop
add
cmp
lret
flds
ret
adc
mov
add
lret
add
int
adc
aas
cmp
int3
iret
fs
mov
mov
iret
scas
mov
inc
addb
pop
fucomip
xchg
int3
mov
dec
lods
cli
fucom
jbe
loope
loop
fwait
sbb
std
pop
pop
or
scas
aad
loope
aaa
in
add
push
ret
push
shlb
mov
ret
or
subl
push
jge
fimull
arpl
mov
xor
int3
add
cltd
stc
sub
xor
inc
je
popf
push
lret
or
cmp
xchg
pop
and
out
cmpsb
jmp
inc
mov
mov
jns
push
lret
lahf
push
enter
mov
sbb
and
add
mov
pop
das
adc
push
cwtl
push
adc
jae
sub
roll
mov
add
and
jmp
adc
mov
cmp
mov
insl
xorb
lcall
cwtl
and
inc
add
push
test
inc
xchg
add
mov
jns
popa
and
sarl
test
mov
push
pop
fcmovb
push
jg
mov
mov
jbe
cmp
pop
testb
sub
add
lret
pop
xlat
int
fldcw
sub
mov
test
inc
and
add
rcrl
dec
xchg
test
shl
xorl
stc
xchg
fisttpll
je
mov
mov
add
cmp
decb
jb
adc
add
cli
dec
int3
jecxz
xlat
push
and
inc
filds
add
sbb
dec
fsubrs
test
add
xchg
sub
fldl
pop
sub
jmp
add
mov
ljmp
add
shlb
mov
sub
push
bound
lret
sarl
xor
cmp
sbb
sbbb
mov
pop
push
pop
xorb
push
out
flds
sub
inc
cli
imul
xchg
push
bound
inc
cld
sbb
lock
stos
shrb
shll
xchg
scas
sbb
lods
lds
into
loopne
daa
push
ja
test
outsl
add
cs
fsubrs
xchg
add
cmpsb
jg
inc
inc
pop
jns
pusha
xchg
sub
nop
dec
add
mov
data16
shll
in
and
cli
mov
cmp
jmp
jbe
shrl
jae
sub
loop
gs
cmp
add
add
or
push
or
add
inc
vhaddps
cmp
test
aam
lods
pushf
adcl
out
dec
je
test
aad
out
roll
sub
testb
add
inc
outsl
lret
and
lods
pop
std
addr16
fdivr
add
shrb
jp
inc
xor
out
fnsave
push
add
jno
std
add
add
or
notb
lds
mov
icebp
xor
or
xchg
add
test
jle
mov
and
cltd
pop
sarl
dec
or
fstl
test
mov
xchg
add
pop
jmp
add
ficomps
jg
jecxz
in
sub
insb
outsb
adc
lea
pop
mov
data16
add
test
and
push
ds
leave
leave
mov
loopne
in
inc
aas
mov
fmuls
xlat
cmc
mov
fistpl
subb
mov
xchg
inc
ret
pop
xor
add
or
loope
mov
add
sti
jbe
add
pop
jg
add
loope
icebp
leave
scas
fiadds
fstl
inc
outsb
pop
sbb
mov
xor
jg
popa
bound
aaa
dec
aam
jl
mov
andb
cmp
rol
sti
notl
iret
repnz
push
or
xlat
call
lea
push
pop
pop
push
pop
mulb
and
inc
movsl
add
mov
cmp
std
and
insl
ja
aad
xor
addr16
mov
or
loop
jle
and
ss
cmp
nop
in
dec
mov
shrl
or
jp
xchg
and
add
jmp
fildll
add
pop
scas
test
inc
in
imul
add
sub
stos
add
mov
push
mov
and
xchg
and
cmpsb
jae
into
shl
jp
shll
sbbb
push
lods
rol
xchg
add
xchg
popf
cmp
aam
roll
cmp
xor
jo
mov
inc
add
jp
mov
inc
mov
rcrl
bnd
pop
add
sub
test
or
das
inc
add
jecxz
mov
outsl
dec
add
push
leave
fdivs
dec
add
out
push
mov
add
xchg
or
fwait
in
aad
les
xchg
mov
mov
and
data16
xchg
adc
mov
fnsave
xchg
push
add
or
dec
cmpsl
push
popf
aam
pop
repnz
xchg
scas
sub
inc
fnstenv
pop
cmp
push
popf
add
mov
fisttpll
or
jg
add
inc
in
mov
adc
aad
ffree
outsl
jb
jns
fsubrs
xchg
inc
in
xchg
pop
dec
sarl
sbb
orl
cli
mov
in
adc
sbb
add
lret
bound
push
shll
jbe
movsl
roll
add
loope
dec
idivb
std
add
mov
pusha
add
inc
and
adc
pop
xlat
je
push
int3
scas
jbe
js
clc
mov
aam
add
inc
in
insb
dec
jge
jne
leave
push
cs
cmp
lret
inc
xchg
jb
pop
test
bound
adcb
dec
inc
mov
shll
jecxz
sub
inc
pop
faddl
cmp
adc
adc
mov
mov
out
test
cli
int3
inc
xor
xchg
jecxz
jg
pop
cwtl
into
das
mov
rcrl
add
add
mov
push
pop
lret
fwait
xorb
inc
xor
adc
push
out
push
lret
gs
inc
sbb
mov
inc
daa
xchg
push
nop
ret
and
push
es
and
jno
cmp
jle
lds
fwait
and
orb
mov
insb
xlat
pop
rcrl
pop
or
popf
xchg
adc
out
jmp
jge
mov
inc
mov
lds
push
push
add
sahf
add
add
cmpsb
pop
sti
push
push
mov
adcl
xchg
bnd
or
cmpsl
push
scas
cmp
test
pop
sarl
mov
jle
fmul
clc
leave
fdivp
add
sub
or
mov
push
mov
pushf
push
dec
rcrl
and
xor
scas
aaa
cwtl
adc
pop
mov
xchg
cltd
push
loope
stos
pusha
add
enter
and
adc
pop
mov
in
push
hlt
aam
jb
add
lods
xchg
movsl
sbb
push
jle
testb
mov
fnstsw
jo
stos
jbe
addb
and
lock
loope
inc
adc
add
jl
data16
add
mov
and
mov
mov
test
addb
mov
push
mov
cmp
jne
loope
and
sbb
pop
pop
hlt
add
and
mov
cmp
loopne
add
mov
and
data16
mov
ljmp
mov
inc
push
inc
fbld
out
add
pop
ljmp
xchg
int3
adc
fcoms
push
es
nop
push
fld
jns
popf
test
movsl
pop
pop
xor
inc
cltd
scas
ljmp
adc
add
aaa
xchg
bound
loop
push
or
mov
sarb
leave
push
or
imul
mov
mov
and
pcmpgtd
xorl
cmp
out
mov
mov
add
jnp
loopne
cmp
sub
mov
push
add
ds
lods
int3
add
les
cs
xor
jne
out
xchg
add
int3
push
lea
xchg
jnp
loope
xchg
xor
int
rolb
adc
jecxz
incb
addl
xor
mov
das
jns
pop
add
ret
add
cmp
jo
push
sbb
enter
cli
sub
push
loope
mov
inc
repnz
clc
pushf
sbb
inc
stos
cld
dec
adcb
hlt
xlat
jl
sub
mov
dec
jge
pop
adc
pop
cmp
push
or
flds
lret
push
jns
jo
int3
daa
add
dec
sub
cltd
jb
adc
push
rclb
gs
adc
xchg
add
sbb
insl
mov
insb
sbbb
xor
push
cli
imul
je
jl
jmp
jecxz
add
adc
jae
xchg
mov
leave
xchg
add
jnp
std
xor
cli
cmp
xor
addb
mov
mov
jnp
add
daa
jecxz
add
mov
pop
add
in
int3
loop
adc
aad
lahf
cmc
add
iret
jne
jmp
ja
adc
jg
xchg
mov
iret
push
adc
add
sub
cmp
inc
push
adc
in
insb
outsl
add
jl
fmulp
mov
dec
fcomps
rol
punpckldq
adcl
loop
xchg
push
sbb
aaa
ljmp
add
pop
cld
add
das
or
add
cmpsb
dec
arpl
and
jmp
push
jle
push
pusha
jbe
add
sub
das
loop
arpl
pop
jb
mov
adc
add
repz
inc
nop
lret
nop
ljmp
or
push
fstpt
dec
pop
mov
add
in
push
icebp
rcrb
xchg
push
rcrl
cmpsb
mov
ret
pushf
cmp
pop
ret
mov
sub
jge
mull
mov
jp
or
outsl
icebp
les
inc
jmp
pushf
loope
addb
jge
dec
and
rcrl
addr16
int3
add
jno
mov
xchg
jle
outsl
add
push
cmc
jo
xchg
fidivrl
orb
dec
mov
fwait
mov
sub
fs
in
getsec
mov
inc
aad
rcrl
popf
mov
jbe
js
mov
mov
jns
xchg
xchg
fsub
ret
mov
sbb
xchg
xchg
out
popf
inc
push
mov
aas
testl
cmp
push
push
cmpsb
add
add
push
out
insb
jg
lods
dec
jo
leave
repz
mov
xor
icebp
stos
jecxz
loopne
add
iret
adc
add
int3
pop
adc
push
js
and
dec
iret
jecxz
jbe
cmpsb
stos
pop
push
or
inc
addb
pop
movsl
mov
in
inc
add
cs
inc
add
testl
loope
inc
arpl
roll
lods
inc
icebp
call
pop
push
and
inc
dec
xor
add
cwtl
sbb
add
mov
test
add
xor
jb
in
call
ret
cmp
cmp
imul
bound
add
mov
mov
add
sbb
mov
dec
or
ljmp
dec
fldcw
in
add
sub
add
into
mov
arpl
shll
xlat
cld
ret
jp
or
stos
mov
out
sbb
inc
out
mov
popf
adc
bound
adc
shrl
shrl
sbbl
ljmp
scas
mov
setp
leave
add
xchg
push
cmp
pushf
jns
jo
cmp
lahf
xchg
jno
cmp
imul
arpl
mov
sub
ret
xchg
in
or
pop
icebp
sti
movl
ss
jns
xchg
jbe
subl
or
loop
mov
pop
negb
add
push
or
cmp
bound
xchg
shll
movsl
bound
inc
add
xchg
sub
cmp
and
dec
mov
les
in
int3
testb
xor
sbb
cmpsb
sbbb
addr16
fcoml
scas
pop
push
jb
pop
mull
insb
bound
mov
xchg
icebp
enter
subb
ret
xchg
test
jnp
int3
push
mov
jb
inc
movb
sbb
pop
push
daa
inc
xor
aam
mov
mov
add
jnp
loopne
aas
pop
ja
fnstenv
adcb
mov
lcall
int
xchg
pop
inc
add
or
add
and
add
pop
cmpsl
sub
repz
add
cmc
xchg
ljmp
loop
movb
movsb
jmp
in
push
rorl
mov
dec
dec
insb
or
scas
fdivl
or
ror
mov
aad
sbb
push
push
and
cwtl
add
mov
pop
jno
ds
sbb
mov
sahf
addr16
xchg
imul
jl
lret
call
shl
test
fiaddl
mov
fwait
inc
add
mov
or
mov
xor
ret
or
cmpsl
movb
sbb
or
push
daa
aas
adcl
jb
jecxz
loope
inc
mov
lds
cmc
mov
jo
addr16
daa
add
outsl
cmp
add
dec
mov
dec
negb
add
stc
pop
jmp
adcb
in
int
sahf
inc
icebp
mov
mov
push
lret
enter
dec
mov
dec
jecxz
mulb
test
std
div
flds
addr16
mov
mov
fisubl
sub
xchg
pop
or
adc
inc
loop
test
pop
sbb
fs
aaa
shl
dec
ficoml
add
aad
imul
sub
out
cli
mov
or
shr
ficomps
pop
sub
push
in
decb
xchg
sahf
jg
mov
loopne
outsl
lods
ja
popf
repz
push
lock
adc
loop
sbbl
and
add
add
lds
inc
cltd
mov
ljmp
mov
cmp
mov
cmc
add
mov
popl
insb
nop
mov
aas
scas
cmp
add
sbb
shlb
add
std
sbb
mov
jno
sti
or
or
ficoml
subb
add
and
enter
add
add
add
push
idivb
lcall
incb
inc
or
or
mov
dec
push
xchg
mov
xor
lea
add
dec
lret
push
mov
add
test
add
push
in
fists
cmp
lds
xchg
sub
cmpb
add
ljmp
add
aam
mov
test
mov
add
pop
sahf
pop
inc
add
push
mov
add
inc
or
iret
cmp
stos
cli
and
push
repz
jno
sub
je
scas
cli
add
sub
add
insb
imul
add
add
lods
push
mov
jg
fiadds
shll
add
fsts
and
xor
stos
mov
lea
addl
cmpsl
jae
testl
lods
mov
mov
mov
dec
mov
mov
cld
shrl
push
fistl
add
cmc
ss
jnp
sti
fsubr
out
xor
aaa
push
sub
xchg
add
adc
jge
pop
lcall
pop
gs
andl
dec
leave
jp
jmp
pop
xchg
add
push
sbb
in
cmp
push
out
orl
in
and
lds
and
inc
ret
cs
xchg
xchg
cltd
or
lret
and
push
dec
push
sbb
cli
pop
stc
or
call
loopne
push
ja
cmp
aad
sub
test
lock
addb
mov
mov
fadd
cmpsl
pop
scas
add
cmpsb
repz
dec
and
sbb
ja
jmp
pop
push
mov
loop
addl
insl
popa
or
test
jp
cmp
and
xchg
adc
add
xchg
and
or
sbb
xchg
ss
dec
mov
cmpl
ss
rolb
inc
inc
dec
movsb
add
xchg
jmp
ds
cmp
out
js
add
pop
mov
repnz
test
enter
or
xchg
adc
ret
scas
mov
bound
xor
xorl
out
jle
xchg
add
outsl
xchg
cmpsb
jle
cltd
iret
dec
xor
imul
adc
ffreep
pop
add
repnz
imul
pop
cmp
ds
out
mov
dec
push
or
and
aaa
xchg
push
hlt
in
data16
or
xor
rol
fldl
bound
out
mov
push
xor
es
cli
cmp
mov
dec
pop
xchg
cwtl
adc
out
jae
and
dec
push
pop
pop
mov
cmove
imul
cmp
sbbb
mov
inc
bound
add
or
inc
dec
ret
mov
nop
add
push
sub
lea
jp
or
add
fwait
data16
out
pop
mov
mov
jle
popf
mov
jb
sub
arpl
mov
icebp
inc
add
pushf
roll
mov
sub
sahf
jo
mov
jmp
add
push
mov
ljmp
mov
push
or
xchg
mov
sbb
xor
mov
hlt
adc
inc
add
test
cli
adc
push
insl
shl
mov
xor
loop
repz
xchg
push
shll
mov
cli
mov
inc
inc
mov
pop
or
pop
rcl
add
in
jg
and
add
or
inc
fwait
repnz
lret
sbb
arpl
jnp
xchg
sahf
mov
jp
mov
inc
mov
out
sbb
daa
les
xor
push
dec
sti
cmpsb
outsb
jno
ss
adc
aam
xorl
sub
mov
in
and
or
cltd
adc
mov
sbb
xor
lock
add
mov
push
add
ljmp
cmpsb
fisttpl
add
fnstenv
jecxz
test
int3
push
out
add
mov
and
cmp
adc
int3
out
test
incl
imul
or
clc
cmp
push
xchg
inc
add
push
dec
cmp
pop
mov
add
cmpsb
xor
add
pop
popf
xchg
xor
ret
fdivrp
push
cmp
call
add
scas
shlb
adc
jge
add
sbbl
in
jno
jmp
mov
stos
lock
mov
and
jecxz
inc
cli
lods
fdivl
fiadds
mov
negl
add
ljmp
add
mov
imul
add
dec
or
xor
enter
mov
ror
call
faddl
sbb
xor
out
push
test
test
jg
stos
scas
addr16
imul
shlb
mov
adc
lock
push
pop
push
dec
jae
out
scas
stos
mov
jo
jae
jnp
pop
mov
dec
push
jp
xchg
add
push
push
push
and
dec
mov
mov
dec
mov
roll
daa
inc
subb
mov
inc
orl
jmp
arpl
aad
cmc
loope
mov
dec
cltd
imul
cmpsb
movsb
je
add
ds
adc
dec
dec
cli
es
jne
xchg
xchg
sub
nop
jg
out
lock
mov
orb
add
pop
int3
add
into
jno
pop
dec
sub
xchg
xchg
pushf
adc
outsl
mov
mov
inc
push
bound
loopne
push
pop
repnz
xchg
int3
add
add
pushf
sbb
jge
into
ds
enter
add
nop
ljmp
push
movsl
mov
dec
loop
lods
adc
jmp
jle
lods
or
xor
in
push
add
cld
or
movzwl
inc
sbb
xchg
mov
sub
ja
mov
lahf
xchg
pop
add
es
push
add
inc
cwtl
jg
add
in
jp
mul
negl
shlb
lahf
sub
add
mov
hlt
aaa
add
lock
inc
mov
xchg
xor
es
cmp
xor
outsl
mov
icebp
aaa
mov
je
or
pop
test
add
cli
bound
push
add
add
push
cmpl
into
xchg
add
clc
jnp
test
sbb
mov
cmp
push
push
xchg
outsb
fwait
out
or
movzbl
pop
fldenv
add
add
add
je
in
and
bound
adc
xchg
xchg
xlat
push
mov
loop
cld
iret
mov
sub
lods
jb
push
jnp
cli
out
insl
adc
xchg
and
insb
or
icebp
out
mov
mov
repz
or
pop
inc
leave
sbb
repz
fisubs
faddl
sub
test
xchg
adc
dec
in
pop
shrl
into
mov
add
push
loope
stos
inc
add
mov
lret
out
in
jmp
xor
cmpsl
popa
jmp
add
mov
insb
xchg
xlat
clc
add
sarl
jle
pop
or
into
jle
sub
iret
cmc
add
mov
and
xor
dec
xchg
mov
xchg
pusha
xchg
push
out
cs
sbb
inc
pusha
cltd
push
ss
flds
out
mov
jle
sar
xchg
mov
fstps
pop
xchg
repnz
inc
inc
push
pop
test
icebp
daa
rorb
add
int3
sub
andl
out
addb
rdpmc
pop
lret
jg
sbb
sub
push
pushf
mov
movsl
jp
add
scas
dec
push
lcall
int3
mov
xor
int
inc
into
inc
in
test
and
dec
cwtl
add
fisttpl
jb
in
lods
mov
into
sub
xor
add
ds
xor
cmp
xor
cmp
add
stos
test
mov
jge
adc
jne
loope
movsb
xchg
arpl
xor
int
dec
call
hlt
iret
fbstp
add
push
xchg
xor
cltd
add
mov
add
mov
cmp
inc
mov
mov
cmc
jnp
out
les
repnz
loope
sub
mov
add
clc
bound
adc
add
addr16
push
fisubrl
pop
daa
outsb
pop
cltd
cli
dec
sub
out
enter
pop
scas
mov
loope
pop
add
pop
jl
xchg
bound
add
cli
push
push
add
rorl
pusha
add
lea
push
dec
ljmp
push
inc
popa
xchg
push
add
and
adc
add
dec
clc
and
loopne
add
stc
movsl
or
dec
push
lods
xor
or
and
add
xor
sahf
mov
add
mov
jns
cwtl
ret
pop
test
ret
jle
inc
and
mov
cmpsb
add
push
mov
xor
fisttpll
repnz
sarl
inc
inc
movsb
add
data16
xlat
shl
xchg
add
cmpsl
mov
xor
jbe
inc
cmp
jle
sbb
dec
repz
loop
test
mov
mov
inc
push
lcall
arpl
adc
mov
and
cmpb
add
mov
adc
add
ds
stc
cmp
out
sub
add
sbb
push
mov
jecxz
popf
mov
dec
testb
scas
in
cli
loop
repz
popa
add
imul
adcb
mov
sbb
add
mov
push
sbb
add
sub
xchg
in
pushf
cmp
loope
int3
les
imul
pusha
rcl
sbb
loope
arpl
es
dec
das
cmp
fdivrp
scas
repz
sarl
lcall
fs
in
dec
mov
rol
imul
sbb
aas
pop
repnz
fldl
dec
popf
push
arpl
stos
lahf
sub
in
pop
mov
out
push
or
inc
mov
cli
or
xor
sbb
imul
add
loopne
cmp
sbb
rcll
shlb
pop
mov
add
add
push
dec
sbb
xor
xor
test
mov
pop
test
xchg
popa
add
insl
faddl
ret
jl
dec
push
pop
inc
bound
dec
xor
mov
in
jmp
or
loope
jbe
pop
sbb
add
xor
xchg
shlb
dec
ret
daa
mov
popf
mov
dec
add
xchg
xchg
ljmp
aam
in
inc
push
add
addl
xchg
add
lea
enter
and
push
add
add
xchg
in
sbb
arpl
xchg
jp
adc
xchg
push
cltd
dec
cmp
fld
cltd
lods
jp
out
mov
jns
cmc
pop
and
lds
test
push
cltd
xchg
adc
cmp
jmp
xor
leave
fimuls
jle
or
sbb
lds
shll
add
inc
jbe
or
movsb
add
sub
mull
sub
add
adc
jb
fs
outsb
xchg
add
adc
sub
sub
sub
mov
xorl
pop
pop
sbb
lcall
add
test
mov
loope
lods
out
mov
inc
mov
add
ret
mov
mov
inc
mov
rol
or
xchg
xchg
orl
je
addl
and
mov
xchg
out
dec
inc
in
xchg
in
xchg
and
add
test
sbb
cwtl
stos
add
inc
aad
lods
call
sahf
test
jp
jle
and
xchg
sbb
adc
in
out
inc
das
push
ror
sub
pushf
mov
push
cmp
gs
xchg
dec
sbb
rolb
fisttpll
xor
out
clc
xchg
sbbl
mov
mov
addb
xchg
arpl
xchg
jb
dec
xchg
cmp
add
sbb
fs
dec
inc
in
xchg
sbb
jbe
dec
leave
push
pop
jp
faddl
imul
mov
dec
in
add
int
jg
dec
and
fsubrl
mov
add
add
orl
ficoml
lahf
adc
sahf
sbbb
shlb
dec
int
pop
mov
loope
out
insl
test
add
scas
sbb
ret
xor
adc
inc
jne
rol
pop
pop
inc
push
orl
lahf
movsl
insl
add
lea
add
mov
aaa
add
xor
faddl
mov
lcall
jecxz
data16
inc
sbb
add
dec
dec
ret
cwtl
adc
repz
addl
jb
mov
sbbb
add
sbb
or
cli
jnp
loope
shr
xor
mov
testb
adc
cmovae
std
call
leave
je
out
xlat
dec
add
ret
lret
xor
add
xor
push
add
pop
outsl
inc
fildl
daa
orb
push
mov
int
add
dec
sbb
add
inc
test
jle
xlat
cltd
jbe
sarl
xchg
cmpsb
dec
cmpl
mov
lret
inc
mov
jge
out
js
push
test
mov
add
pop
rclb
fwait
xor
jle
mov
mov
in
lods
es
pop
sub
test
cmp
out
mov
or
inc
popf
sbb
xchg
imul
mov
sarl
add
push
shlb
adc
jae
jge
mov
xchg
sbb
shr
fildl
sbb
gs
or
das
xchg
mov
xor
jmp
or
jnp
adc
push
das
pop
add
in
repz
push
cmp
adc
push
mov
lods
loop
pop
jle
mov
pop
ds
orb
test
mov
xor
mov
adc
fs
iret
int3
dec
lahf
inc
mov
add
push
addr16
aad
clc
scas
dec
sahf
mov
sub
and
add
loop
cmp
dec
mov
xchg
push
adc
into
inc
add
mov
cmp
add
je
in
push
cmp
ja
inc
mov
add
cmpsl
in
sub
pop
sahf
into
js
daa
add
jne
lcall
mov
add
xor
add
out
iret
insb
dec
add
mov
sarl
push
leave
xchg
xchg
shll
xlat
jg
rolb
push
cmp
jge
dec
dec
ja
mov
cmp
stos
cld
xlat
cmp
mov
sub
fiaddl
sub
jle
out
pusha
in
hlt
test
das
mov
and
jo
mov
lret
loop
add
sar
pop
adc
lahf
add
out
cmpsb
repnz
pop
jl
movsl
ss
shll
pop
test
mov
add
fwait
xchg
add
ret
movsl
into
add
xchg
push
xlat
jl
lods
insb
add
mov
sub
add
outsb
sahf
inc
mov
xchg
and
movsl
out
xchg
lahf
add
pop
rorb
xchg
mov
xchg
pop
add
in
cs
add
xor
xchg
xchg
mov
adc
je
mov
sysret
add
fnstenv
adc
in
int
flds
fnsave
add
jae
nop
jle
cltd
dec
loopne,pn
or
push
pop
das
mov
sahf
fnstenv
aam
push
jg
inc
sbb
rcrl
cmpl
or
mov
add
imul
or
mov
sbb
push
int
add
add
jo
adc
ficompl
sub
arpl
ret
add
sbb
insb
gs
inc
scas
pop
leave
lds
add
xchg
in
adc
jmp
inc
es
xchg
hlt
cltd
jle
and
mov
test
test
int3
sbb
lods
divl
push
fmul
xchg
out
push
gs
xchg
dec
push
popa
mov
pop
xor
ljmp
movl
pop
sbb
rolb
fmull
int
mov
mov
movsb
jle
push
add
mov
sbbl
enter
and
pushf
pop
ja
repz
ljmp
or
add
es
jle
leave
jg
cld
and
test
shrb
mov
enter
rol
push
add
xchg
mov
pushl
add
mov
jp
bound
cmp
xchg
es
jbe
movsl
inc
pop
push
decl
cwtl
ss
test
jne
mov
add
inc
add
lret
jb
push
daa
mov
mov
add
in
sbb
add
push
sub
add
in
inc
dec
mov
idivl
cmpsl
mov
mov
sbb
ljmp
iret
mov
mov
xchg
add
push
orl
add
inc
and
leave
subb
out
sarl
add
cmpsb
inc
repnz
add
enter
xchg
stos
mov
pop
hlt
mov
call
into
mov
scas
add
sub
les
fstps
push
xchg
xchg
jne
fisttpll
xor
mov
rcrl
shll
inc
aaa
out
add
setnp
fldt
jb
pop
shrl
add
adc
dec
es
aam
out
sub
lods
mov
ret
add
mov
nop
enter
pop
sbb
xor
adc
add
and
push
arpl
lds
inc
mov
xchg
rcrb
mov
pop
pop
adcl
inc
imul
sbb
xorb
mov
and
sbb
adcb
xchg
es
lret
push
pop
add
loope
ret
add
cmpb
gs
jle
imul
stc
mov
iret
rcrb
incb
pop
xchg
mov
mov
add
lock
inc
cwtl
xchg
enter
add
sbb
mov
and
and
xchg
mov
incl
push
xor
mov
repz
cli
add
mov
add
cmp
xorl
fwait
sbb
xchg
push
mov
cmp
mov
idiv
incl
xchg
js
push
dec
outsb
js
mov
cmpsb
loopne
daa
mul
jb
jle
xor
js
pusha
dec
loope
xchg
inc
shll
push
jae
nop
mov
lret
pop
inc
aad
in
jmp
inc
adc
cld
inc
mull
adc
icebp
scas
sub
out
hlt
jl
in
loop
repz
push
add
xchg
pop
dec
ja
add
sbb
xlat
mov
push
jae
xchg
add
cmc
inc
insl
jno
xchg
xchg
adc
clc
arpl
and
shl
add
push
lds
hlt
push
add
sub
loopne
xchg
cmpb
jne
fisubrl
mov
add
cwtl
arpl
adc
dec
rcll
xor
cmpsl
add
movsl
push
and
add
insb
lods
xor
push
mov
push
sbb
ror
cmp
insb
out
lret
or
add
cwtl
daa
mov
dec
in
fnstcw
add
pop
push
sub
add
mov
sub
daa
andl
clc
repnz
cmc
das
xchg
pop
mov
inc
sbbb
out
mov
incl
pop
mov
mov
add
aas
xor
outsl
jecxz
stc
sbbb
jmp
pop
jo
add
test
add
orl
add
fsub
inc
out
mov
cmp
jge
ljmp
shr
ficompl
dec
pop
add
push
jle
inc
dec
mov
add
mov
mov
daa
fwait
enter
psrld
push
addr16
cmp
adc
add
test
jno
je
mov
push
sbb
imul
stos
push
insb
sbbb
sub
outsb
jp
sub
xchg
enter
push
pop
prefetch
sahf
adc
pop
stos
mov
dec
insl
mov
add
push
outsb
xchg
sbb
jbe
mov
les
add
jle
adc
xor
adc
int
add
xor
add
pop
and
push
fs
sub
sub
and
pop
mov
sbb
scas
pusha
cmpsl
call
rcl
jae
stos
cmp
jle
cld
out
add
bound
push
adc
push
imul
loop
sbb
jnp
xchg
mov
cmpsl
cmp
and
ret
sbb
push
xor
add
je
popl
ljmp
insl
repz
out
add
and
xchg
cmp
add
lret
enter
mov
jge
mov
leave
decl
jnp
jecxz
push
fwait
addl
es
jae
xchg
pop
stos
add
sbb
jmp
add
lahf
pop
test
rclb
mov
jne
hlt
jg
fimull
xor
shrl
mov
pop
lods
inc
test
pushf
jae
sbb
stc
push
add
ja
xchg
push
jge
sbb
dec
rcr
dec
aaa
push
add
es
cmp
pop
jo
repnz
add
inc
or
push
pminub
adc
mov
xlat
pop
fs
xchg
add
aaa
gs
shl
insb
dec
jb
adc
sbb
or
push
sub
adc
and
add
out
or
jmp
lret
xchg
push
fcomps
pop
add
aas
add
iret
aaa
shrl
mov
and
jg
xor
push
out
dec
shl
or
xor
fistps
inc
mov
jmp
icebp
shrl
in
enter
pop
bswap
lret
iret
enter
and
jbe
push
loop
mov
stos
mov
sub
xor
sub
ds
outsb
lods
js
into
mov
out
mov
push
fmull
rol
cs
xchg
push
popf
cltd
aam
cmpb
push
jg,pn
leave
sbb
jmp
sbbb
jb
lahf
mov
sub
test
jbe
and
push
add
rcl
xchg
pop
and
aad
xchg
inc
dec
fnstsw
mov
xchg
es
aas
repnz
add
cld
xchg
xorl
pop
mov
dec
dec
jge
cmp
fsubp
pop
cmp
fdivrs
test
rclb
shr
cmc
mov
in
lahf
xor
jns
test
xor
lods
pop
nop
les
leave
mov
cmp
subl
jmp
or
sbb
aad
xchg
cli
scas
add
ret
test
add
mov
mov
xchg
mov
dec
sbb
push
jbe
cmpsb
adcb
imul
push
jb
xchg
cmp
inc
mov
and
fimull
mov
add
cmp
inc
add
test
movsl
cmc
int3
sbbb
aaa
ss
cmp
loope
test
jp
stos
dec
xchg
imul
aaa
or
adc
cmpsl
add
jo
cmp
sbb
imull
fldl
insl
or
cwtl
mov
xor
fisubs
addl
jb
xchg
xchg
push
add
sti
xchg
jle
add
xchg
rorb
sbb
popa
jmp
xor
idivl
in
xchg
pop
lods
sub
outsb
cmp
out
lea
js
das
pushf
lods
push
pop
cwtl
sbbb
xchg
lahf
add
stos
mov
push
add
lods
jae
jp
mov
xor
pusha
and
scas
inc
pop
add
rcl
mov
enter
fcoml
push
hlt
sbb
sub
test
xor
fstps
jge
add
mov
cmp
fsubrl
inc
loope
push
jbe
add
pushf
adcl
lcall
dec
ja
lahf
inc
jb
mov
cld
cmp
push
shlb
dec
movb
pop
and
jb
mov
movsl
and
xor
jl
adc
sub
mov
ja
dec
fsts
shrb
out
adc
jae
popa
xor
sbb
and
adc
loope
imul
inc
add
les
jle
ret
divb
jmp
repz
inc
fdivrl
sbb
jg,pn
add
and
xchg
dec
sbb
push
cmpsb
loop
pop
xchg
adc
stos
and
jbe
lods
sub
inc
outsl
and
dec
dec
cmp
jae
imul
addl
or
lods
mov
mov
mov
gs
mov
dec
scas
mov
jne
add
sbb
lcall
cmc
repnz
jo
add
adc
addr16
hlt
or
lcall
dec
iret
jo
cwtl
mov
mov
or
add
pop
and
jle
repnz
add
fcomps
add
sbb
aaa
je
fs
scas
xlat
adc
inc
fcomip
cltd
jp
add
sbb
inc
ret
lods
and
bound
add
add
and
jb
test
adc
mov
pop
adc
test
push
push
dec
mov
jecxz
jp
and
push
adc
sti
add
xchg
mov
out
xchg
fs
add
test
or
cmp
xchg
stc
sbb
mov
mov
sub
push
jne
xchg
lret
ljmp
add
dec
push
pushf
add
inc
loopne
push
pop
leave
loope
lcall
stc
add
push
fiaddl
mov
add
xchg
ret
inc
ficoms
add
cmp
inc
dec
lods
push
adcb
test
sti
cli
or
and
adc
jp
aaa
pop
mov
pusha
cld
pop
dec
add
fld
jmp
aad
nop
mov
data16
test
add
mov
pop
cld
sbb
add
ds
adcb
repz
and
stos
push
add
jl
cmpl
lahf
fs
adcb
cmp
inc
cltd
jg
add
pop
addr16
adc
jecxz
mov
mov
mov
and
add
push
fwait
sub
not
add
pop
sbbl
or
add
or
stos
dec
cwtl
ljmp
add
adc
filds
lret
inc
dec
outsb
inc
outsl
add
jle
clc
imul
add
pop
orl
repz
ret
xchg
int3
bswap
in
add
sbb
lret
adc
adc
sbb
xchg
pop
lock
data16
cli
mov
fidivs
sub
lret
and
xchg
in
test
add
bound
ret
cmpb
ja
mov
xchg
jno
inc
mov
pop
scas
shl
dec
shl
xchg
aad
ret
mov
leave
notb
jge
xor
add
out
in
scas
mov
pop
push
lret
adc
jnp
cli
pushf
pop
pop
push
jno
sub
or
jb
inc
addr16
pushf
add
leave
or
add
dec
jo
subb
mov
xor
adc
pop
clc
aas
add
pop
jne
jle
jp
repnz
pop
mov
sub
test
cmc
inc
dec
pop
loop
rcr
add
mov
testl
jp
xor
in
repz
testl
jmp
lahf
lods
lods
leave
mov
hlt
sbb
dec
mov
pop
rol
fstl
mov
rcrb
out
mov
jge
xchg
add
and
sub
xlat
sarl
sbb
adc
dec
push
js
test
add
mov
es
cld
mov
xchg
adc
mov
in
sub
sahf
and
repnz
jae
jae
add
ret
mov
push
mov
mov
mov
imulb
hlt
adc
loop
cli
lret
mov
mov
scas
gs
pop
cmp
out
cmp
mov
bound
jg
int3
jbe
adc
out
test
jecxz
inc
and
mov
nop
xchg
mov
xor
cmp
mov
or
test
mov
xor
or
scas
pop
subb
pusha
cmp
inc
sbb
rcrl
inc
lret
mov
xchg
jmp
add
mov
xchg
mov
loope
ret
es
inc
and
push
pop
dec
out
rol
push
movsl
rclb
stos
lods
or
sub
les
test
addr16
add
pop
jno
sti
sub
mov
andb
or
orl
aam
sbb
fdivrs
test
pop
lea
add
push
mov
push
repnz
ret
rcll
icebp
sbb
test
aaa
outsl
jae
and
out
lretw
jp
pop
push
daa
jns
push
pop
inc
jle
pop
icebp
enter
xchg
data16
dec
orb
dec
sbb
or
outsl
sarl
adc
pusha
out
add
xchg
inc
ja
dec
roll
fisubrl
sbb
faddp
mov
xor
and
mov
loopne
xchg
add
sub
add
push
xchg
call
gs
in
dec
xchg
xorl
sti
jle
insb
mov
mov
add
xchg
pop
dec
daa
fiaddl
xchg
jns
cwtl
rcr
orl
push
ljmp
mov
push
dec
fcomps
push
add
push
add
and
je
sahf
add
int3
mov
xchg
jns
iret
xchg
imul
mov
add
sbb
loope
mov
jle
add
push
lret
iret
testb
inc
in
cmp
icebp
add
nop
das
pop
in
xchg
inc
sbb
adc
dec
dec
dec
jo
stos
rcrb
out
loope
fldcw
xchg
pop
shufps
outsb
aam
mov
add
loopne
out
icebp
int3
inc
lods
add
push
dec
mov
cmp
inc
fisubs
dec
gs
mov
and
mov
push
adc
or
in
movsb
subl
sub
adc
mov
push
and
or
orl
jne
jecxz
add
and
test
stos
loope
dec
add
pop
sbb
insb
in
xor
xchg
popf
push
add
jbe
dec
addl
imul
mov
xchg
fwait
xchg
mov
xchg
push
loope
inc
xchg
nop
addr16
cltd
daa
out
stos
sub
pop
jge
lods
fldenv
in
lcall
or
jmp
loop
xor
jge
or
sbb
add
prefetch
sub
add
daa
xor
loope
fldl
gs
js
push
push
enter
xor
sub
outsb
push
push
add
imul
push
popf
cwtl
and
sbb
fadds
pop
add
pop
call
rolb
inc
mov
xor
adc
push
rolb
dec
leave
and
andl
fsubrl
push
jp
push
xlat
nop
add
mov
xchg
rcrb
sub
xchg
ja
mov
push
jecxz
jmp
mov
mov
in
test
stos
mov
and
xor
cmpsl
test
adc
cli
sbb
mov
js
lahf
sbb
push
push
mov
push
or
ds
inc
in
clc
inc
insb
jae
fiaddl
inc
mov
mov
mov
xor
mov
push
sbb
adc
cmp
in
sbb
mov
add
scas
leave
lods
mov
std
adc
add
or
jae
pop
lock
cmpsl
xchg
icebp
dec
aam
out
add
inc
mov
xchg
adc
sub
sbb
fistps
ja
pushf
or
in
add
js
scas
mov
add
push
cld
cmp
lods
add
test
jg
push
push
mov
les
jle
pop
dec
push
mov
stos
repnz
cmpl
test
int
dec
loop
add
push
sbb
push
clc
aas
sbbl
bound
lcall
sub
lea
jns
add
push
xchg
cmp
roll
pop
sub
add
outsb
pop
xlat
leave
int
add
mov
push
enter
add
mov
push
cmp
mov
add
out
sbb
mov
into
push
test
add
sub
dec
adcl
adc
mov
data16
add
addr16
imul
je
stc
jbe
pop
inc
add
and
adc
pop
ljmp
and
popf
xchg
pushf
add
cmpsl
sub
and
insb
inc
testb
test
negb
call
mov
arpl
push
xchg
push
mov
lahf
mov
lock
push
into
xchg
adc
xchg
mov
imul
js
ljmp
leave
aaa
icebp
clc
test
outsb
loop
icebp
xor
mov
add
loope
imul
and
xchg
add
lock
ljmp
bound
jge
loop
in
add
sub
popf
xchg
lahf
mov
imul
ds
loop
lea
jne
dec
aas
aam
adcb
test
xchg
or
int3
incl
cmpsb
cltd
outsl
test
iret
addl
jb
cmp
cmp
and
repnz
mov
push
repz
ss
mov
arpl
es
xchg
rcrb
or
fwait
jne
and
pop
jle
addb
sub
fidivrs
rol
les
jecxz
xchg
pusha
push
xor
or
nop
adc
arpl
jle
fisubl
dec
or
mov
push
add
imul
jle
mov
or
add
push
add
jae
push
ret
fildll
pushf
inc
adc
imul
adc
xor
jmp
add
das
mov
out
cmp
xor
push
xchg
xor
xchg
pop
pop
cmp
mov
stos
mov
movsl
sbbl
jg
mov
sbb
xchg
or
or
mov
repnz
jp
and
jne
inc
mov
push
gs
popa
mov
xchg
add
mov
adc
int
fwait
xchg
sub
cmc
sbb
clc
cmp
in
add
jmp
cmp
pop
add
cmp
xor
push
mov
and
add
add
fsubp
mov
pushf
mov
lret
psubb
jge
das
jae
cmp
mov
popa
pusha
mov
inc
jl
add
or
xchg
mov
bound
rcll
push
add
std
in
lods
dec
mov
adc
mov
sub
add
shlb
and
cmp
mov
outsl
add
xlat
inc
jle
arpl
shlb
dec
aad
ss
cmp
cs
shl
inc
mov
movsb
jbe
or
and
and
cmp
les
add
mov
xorb
data16
mov
cli
cwtl
add
mov
out
jb
fidivl
aam
pushf
ret
add
inc
inc
sbb
enter
out
fidivrs
xchg
dec
addb
fcom
repz
dec
jl
jp
repz
lahf
fs
mov
add
push
mov
adc
cltd
out
ficoml
lret
sub
call
lods
inc
jns
add
ret
movsb
jno
insb
mov
icebp
bound
test
jbe
lods
in
mov
mov
and
dec
iret
dec
fisttpl
call
incl
in
mov
jnp
enter
cmc
jo
lods
sbb
mov
call
outsb
movsb
jl
lret
mov
shrb
bound
add
loopne
into
pop
fs
shl
xor
loope
dec
cli
push
shlb
push
sbb
pavgw
xchg
sbb
and
sbb
lds
sub
pop
push
and
aaa
cmc
pop
sbb
test
fisttpl
xor
rorl
aaa
add
addb
jns
add
adc
and
clc
jg
daa
in
inc
xchg
sarl
pop
pop
mov
ret
stos
jb
mov
and
test
inc
jbe
jno
jle
insl
mov
dec
andl
fcompl
cmpsl
lods
dec
test
and
std
loop
test
lahf
or
xchg
shrl
out
cs
jo
mov
repz
sbb
mov
sbb
push
xchg
adc
ss
fstpt
add
jle
dec
enter
dec
or
in
ficompl
jnp
add
movsb
cmp
push
jne
cld
popa
cmp
fstpt
jecxz
and
pop
test
mov
loop
cmc
subb
aaa
mov
add
jge
pushf
in
sti
in
in
shl
adc
pop
addl
xchg
mov
icebp
filds
adc
addl
pop
sbbl
roll
cmpsb
ss
ret
repz
rcll
imul
xchg
lret
mov
add
dec
inc
xlat
sbb
pusha
add
mov
sbb
stos
mov
mov
movsb
xchg
push
imulb
pop
cltd
addr16
aaa
scas
jns
call
inc
mov
sbb
rcl
jne
xchg
test
lods
inc
shlb
ds
xor
pop
pop
mov
cmpsb
push
jbe
add
mov
jno
call
sahf
jecxz
pop
sti
sbb
into
or
push
ret
xchg
push
test
test
fldenv
jg
push
sbb
in
call
cmp
loope
test
ret
xchg
or
and
xchg
aam
adc
adc
pop
sub
xchg
jb
mov
pop
cmpsl
sbb
jle
shll
mov
add
lock
pop
add
adc
inc
and
xchg
mov
or
jb
dec
imul
add
daa
pop
cmc
sub
mov
int
inc
mov
sbb
jp
sub
mov
das
mov
push
add
mov
cmc
mov
add
adc
inc
ss
add
and
mov
bound
jle
push
mov
loopne
jl
stc
add
cmpb
add
xchg
shll
adcl
sbbl
sub
dec
lods
add
mov
adc
add
or
xor
and
inc
cmpsb
orl
movsb
popf
jo
mov
add
pop
lret
int3
and
add
arpl
xor
movl
sbb
subb
aad
lock
lods
lds
sbb
and
add
sbbl
lahf
xor
lcall
cwtl
rorl
rol
xor
push
outsb
add
cli
loop
sub
xor
jp
dec
lret
jmp
mov
xchg
cltd
mov
pop
push
icebp
popa
outsb
push
add
inc
sub
fwait
add
and
lret
stos
fs
sbb
icebp
jae
pop
mov
ror
ss
imul
jo
xor
pop
pop
sbbl
sub
mov
scas
mov
xor
icebp
sbb
call
pop
inc
aaa
inc
rep
repnz
xchg
out
les
xor
lcall
xor
add
jp
mov
adc
int
lcall
jle
add
scas
je
pop
xor
pop
cvtps2pi
cli
cmp
daa
add
mov
iret
shrb
sub
sbb
jbe
out
icebp
add
xor
movsl
aaa
sbb
xchg
in
xor
and
add
push
out
cmc
insb
loopne
and
or
add
mov
pslld
test
dec
ja
pop
lds
decb
icebp
push
loop
xchg
out
mov
fcoms
mov
sbb
fisubs
add
sub
xor
in
out
mov
add
fsubrl
dec
or
add
adc
add
xchg
add
cmp
xchg
lea
jle
inc
pop
push
mov
add
jg
orl
pop
lods
inc
and
mov
jae
fiadds
in
scas
add
daa
xor
pushf
cmp
add
pop
inc
addb
pop
lea
dec
push
es
mov
xchg
jo
inc
mov
dec
and
int
add
xlat
aad
leave
add
repz
add
ss
adc
jmp
pop
mov
push
cwtl
lods
ret
mov
test
inc
dec
mov
fistl
push
stos
cli
sbb
out
addr16
sbb
sbb
mov
push
add
xor
push
jae
inc
js
dec
add
add
stc
add
mov
repz
aam
out
inc
add
mov
pop
test
mov
mov
loopne
aad
imul
dec
pop
ja
add
lock
in
xlat
movb
jo
cmp
and
mov
inc
int
insb
jno
push
jecxz
pop
xor
ffree
mov
dec
cs
and
shrl
fnsave
and
jno
xchg
dec
push
add
pop
std
jne
sbb
jae
pop
xchg
cmpsb
inc
push
add
in
test
adc
adc
add
cltd
add
clc
sbb
xchg
cwtl
outsl
add
mov
xchg
dec
fcompp
test
xor
jo
lret
cmpl
add
je
clc
and
inc
push
ss
add
rorl
add
int
scas
xchg
cmpsl
mov
dec
faddl
call
insb
push
sbbb
pop
mul
lods
mov
mov
dec
pextrw
lods
addr16
mov
or
mov
push
adc
adc
cltd
fs
push
dec
testl
in
arpl
add
je
and
jp
incb
pusha
addl
pop
into
testl
lret
loope
sbb
jl
add
ljmp
or
pushf
loope
pop
mov
movsb
adc
mov
add
add
jne
jecxz
xor
stos
jp
pushf
xchg
xchg
ss
jnp
dec
leave
insl
mov
roll
add
out
test
xor
adc
fidivrs
int3
mov
add
lods
mov
sub
cld
and
mov
imul
insb
aam
xor
mov
ror
adc
lods
mov
inc
cmp
jl
ret
shll
mov
iret
std
roll
aas
inc
bound
add
repnz
pop
sbb
mov
in
negw
xlat
lock
jle
xchg
lahf
mov
rclb
in
add
lods
xchg
insl
xchg
mov
ret
je
mov
dec
xchg
or
repnz
cld
cmpsb
mov
aad
iret
mov
pop
bound
add
ja
sub
adc
add
movsb
pop
cmp
loopne
jns
sub
mov
add
pop
jecxz
jmp
add
xchg
inc
cmp
xchg
xchg
pop
dec
add
mov
dec
popa
adc
out
data16
pop
sbb
pop
mov
adc
ret
cltd
dec
movsb
daa
pop
add
cli
test
inc
xor
xchg
out
rclb
xchg
inc
xchg
outsl
mov
cwtl
push
ror
sbb
add
stos
push
sub
int3
iret
dec
leave
je
jle
sbbb
mov
inc
pop
mov
cmp
add
push
xor
push
push
pslld
fstpl
add
cmpsb
fdivrp
cmp
mov
adc
subb
cmpsl
cli
xchg
add
pop
dec
inc
mov
bound
sarl
into
jl
stos
mov
xchg
xchg
jno
add
pop
add
dec
xchg
xor
add
push
fisttpll
dec
repz
imul
in
mov
loop
lock
movsl
sub
in
or
loop
shll
xchg
add
stos
push
jbe
dec
cli
aaa
add
faddp
mov
jae
inc
std
clc
mov
cmp
pusha
jecxz
xchg
aas
movsl
loope
and
rolb
add
xchg
add
imul
jle
mov
pop
fwait
add
into
sti
add
pop
jo
loopne
jecxz
add
es
xor
pop
and
arpl
xchg
leave
add
stos
cmp
shl
enter
mov
adc
adc
adc
jl
pop
jp
fdivs
push
mov
sbb
das
xchg
lods
and
mov
lds
lods
loope
jg
add
mov
data16
mov
aad
jno
lret
cmp
leave
jg
add
mov
adc
inc
enter
or
mov
mov
push
popa
icebp
sbb
enter
jne
roll
pop
mov
add
pop
mov
xchg
add
push
add
aaa
je
mov
imul
add
outsl
mov
stc
jns
fldcw
push
add
push
jmp
sbbb
push
pop
call
test
xor
push
stc
cmp
cli
arpl
enter
sub
out
aaa
leave
in
pushf
into
jge
push
xchg
repnz
xchg
lahf
cmp
add
jp
sub
add
push
negl
pop
push
add
dec
lods
in
cmp
and
mov
push
inc
daa
jp
adc
inc
sbbb
xor
and
xchg
aas
sbb
mov
pop
sti
testl
jb
fimull
add
push
sbb
cmpsl
fdivs
into
xchg
sbb
cmpsl
fdivrl
les
jb
add
or
sahf
jno
mov
pushl
mov
fistl
test
sub
fsubrs
sbb
inc
push
mov
ss
pop
jnp
testb
stc
add
xor
das
jae
js
cli
lods
andb
and
repz
add
and
xor
test
sub
or
add
adc
xchg
jle
mov
mov
push
or
cli
add
sbb
add
xchg
mov
xchg
cmp
adc
lret
iret
mov
insl
fcompl
xor
and
and
cltd
inc
dec
add
scas
je
jle
pop
xchg
jecxz
insb
aas
cltd
jb
idiv
fwait
mov
dec
pop
cld
aam
movsl
daa
cli
add
loope
sbbb
push
in
xchg
fwait
movsb
mov
add
or
cmp
std
in
sub
adc
dec
mov
adc
outsl
ficomps
mov
inc
xorl
lcall
adc
jge
pop
ljmp
lock
mov
pop
cmpsl
push
ds
push
outsb
leave
negb
push
insb
sub
ljmp
add
push
pop
cmp
or
xchg
fcmovnb
jns
sub
xchg
es
sbb
adc
out
aaa
mov
shl
adc
les
test
das
loop
inc
xchg
pop
test
add
jne
ss
or
pop
add
sub
je
fcomps
xchg
xchg
xchg
mov
enter
daa
lea
inc
jecxz
pop
adc
sbb
into
cmp
jmp
in
mov
mov
repnz
jo
clc
data16
jb
hlt
xchg
xorb
fs
cltd
imul
enter
sbb
jns
fists
mov
inc
enter
and
int3
add
popf
movsb
jge
or
jle
aas
fsubp
xor
subb
sbb
mov
and
orb
sbb
cmp
test
js
iret
adc
push
jmp
add
and
pop
or
pop
repz
pushf
out
test
ljmp
repnz
das
xchg
xchg
push
jmp
repz
faddp
inc
subl
nop
mov
cmp
push
icebp
or
mov
rcrb
mov
mov
mov
inc
adc
jae
sbb
mov
stos
adc
mov
ret
shlb
add
mov
mov
and
loopne
pop
inc
push
and
das
sarl
add
testl
fstl
mov
es
or
add
mov
in
and
jle
ds
subl
pop
adc
adc
mov
xchg
std
out
add
xor
push
cmp
mov
and
rorb
pushf
sbb
inc
popf
dec
pop
cmpsb
add
fildl
aam
cli
xchg
mov
adc
adc
adc
pop
cli
lock
push
mov
imul
in
ljmp
adc
push
cli
icebp
hlt
shlb
sub
add
lret
add
pop
xorl
xchg
inc
lds
dec
mov
xchg
mov
dec
test
push
add
dec
xor
hlt
out
scas
sub
inc
insb
out
dec
or
push
test
stos
push
pusha
inc
cli
add
sbb
xchg
rcrl
test
rsqrtps
orl
out
or
sub
test
push
loop
xchg
add
dec
sti
xchg
cmp
mov
add
push
bound
bnd
fiadds
sbb
push
and
sbb
xchg
cmp
pop
out
cli
mov
es
xchg
xchg
jo
xchg
je
jecxz
mov
cld
ss
aad
cmp
inc
and
push
icebp
pushl
mov
cmp
inc
cli
mov
mov
mov
ja
les
add
jb
sub
add
push
jnp
daa
mov
pop
push
pop
sub
xchg
mov
cmp
mov
add
int3
jmp
aam
mov
add
cld
in
paddusw
mov
cli
add
jle
dec
ljmp
std
jle
xchg
jg
sub
pop
jne
xlat
add
push
jmp
inc
jmp
xorl
add
mov
lds
and
imul
es
int3
xor
jl
dec
add
and
roll
sahf
flds
dec
pushf
les
add
push
repnz
fbld
out
push
jns
in
pop
leave
faddp
mov
add
addr16
jg
and
pop
or
outsl
lahf
sub
dec
shrl
dec
ss
jg
mov
jae
jl
xor
add
ljmp
orb
or
sbb
mov
push
push
inc
cmc
repz
push
adc
dec
xchg
movsb
mov
add
or
into
arpl
add
push
daa
jp
loope
es
sbbl
push
icebp
push
cmp
rorl
rorl
in
add
fs
je
jbe
pop
push
jbe
stos
sub
jl
sbb
hlt
mov
inc
in
jecxz
shrl
cmp
adc
bound
jno
mov
mov
iret
push
rorl
sbb
sub
cltd
rorl
adc
jge
sahf
push
das
aad
in
and
pop
fs
andb
pop
nop
arpl
push
fisubrs
mov
out
sbb
jmp
ja
jmp
and
inc
add
push
push
cld
out
dec
clc
in
loope
fwait
sub
pop
repz
lods
loop
mov
push
rcrl
gs
push
cmpb
pop
mov
and
xor
mov
mov
cs
jle
xor
int
int3
and
pusha
xor
test
nop
addb
data16
sbb
ss
bound
ds
push
mov
loope
xor
scas
pop
out
add
or
dec
and
ss
mov
notb
jge
repnz
in
loope
jle
stos
mov
int3
stc
xlat
sti
je
adc
mov
pop
loop
cmpsb
or
pop
inc
in
incl
loope
pop
sub
cli
ds
dec
sub
cmp
mov
mov
mov
addl
scas
insl
jecxz
or
popf
out
jle
dec
sub
pop
bound
add
outsl
lret
xchg
clc
push
add
repz
loope
sti
repz
inc
ja
stc
and
in
jne
arpl
aas
jle
inc
push
cltd
xchg
mov
add
addr16
cs
dec
jmp
mov
les
subl
jg
outsl
insb
int
cmp
cmp
adc
roll
mov
ljmp
or
scas
mov
add
loopnew
rol
jbe
shr
imul
pushf
cltd
dec
push
add
loope
int3
add
push
jg
movb
mov
add
push
xchg
add
mov
testb
add
sub
cli
mov
sub
sahf
cltd
push
and
push
or
mov
sbb
xor
lret
addl
add
xor
popf
nop
pushf
movsl
insl
shl
aaa
add
mov
adc
mov
inc
int
mov
mov
pop
testl
pop
jle
inc
mov
add
mov
mov
cmpsl
add
mov
add
dec
dec
xchg
pop
add
mov
jb
add
rcrl
repz
jge
push
movsl
push
std
movsl
mov
add
or
push
es
repz
xchg
mov
loopne
add
repz
sub
adc
aad
dec
add
sti
fcoml
insb
clc
push
hlt
roll
cwtl
mov
out
adc
js
es
pop
sbb
xchg
mov
sbb
push
or
pop
jae
push
lret
jns
out
dec
js
sbb
in
add
push
fimull
jle
in
call
clc
inc
mov
pop
xor
and
lret
cmp
mov
jbe
outsb
jo
pop
mov
mov
mov
mov
add
decb
and
inc
mov
inc
inc
push
add
or
cwtl
repnz
mull
add
mov
dec
test
movsb
or
pop
xor
not
xor
and
mov
das
sub
out
arpl
andl
add
pop
inc
into
outsl
popa
add
jmp
movsb
sbb
jae
jp
jge
das
in
daa
inc
mov
jae
add
jo
call
pop
addb
cmc
push
sub
jg
std
jle
jne
jmp
cltd
add
cld
adc
jp
in
test
lret
push
jb
pusha
dec
xchg
loope
mov
add
cmpsl
cmp
stos
sbb
je
pop
gs
fstps
cmp
mov
sub
dec
sahf
aad
pushf
pop
loope
in
jno
fmull
jmp
add
mov
into
call
mov
sarl
inc
jo
movsl
push
cmc
movsl
test
mov
xor
adc
jge
lret
aad
pop
pop
mov
les
xchg
sbb
mov
mov
aas
addl
pop
jne
xor
filds
pushf
jge
cmpsb
or
cmp
popa
pushl
mov
mov
stos
rcrl
fs
jle
adc
cmp
mov
add
gs
and
cmp
adc
mov
mov
in
xor
sbbb
and
jb
mov
add
inc
sub
rclb
mov
test
sbb
sbb
add
cmp
stos
cmp
movsb
add
xor
loop
shll
xchg
mov
add
xor
or
rorl
ret
sub
jge
mov
jle
or
xor
test
fs
outsl
in
inc
addr16
insb
add
out
jmp
loope
pop
cli
xchg
inc
mov
inc
or
in
mov
cltd
mov
add
pop
aas
pop
in
pop
cmpl
adc
add
jae
scas
lods
mov
jl
cwtl
mov
add
add
jne
test
aad
inc
orb
xchg
pop
cmp
and
repnz
jbe
pop
out
shll
stos
pop
jb
mov
add
sbb
cld
jle
cltd
add
inc
cli
or
mov
pop
adc
add
ret
cmp
outsl
and
pop
inc
push
call
push
sbb
push
rolb
add
xlat
xchg
in
cmp
inc
ss
dec
add
mov
or
pop
pusha
jmp
add
mov
xchg
xor
cmp
aaa
cmp
out
notb
mov
jae
pop
popa
stos
cld
daa
jp
xchg
adc
push
movsl
je
sbb
jb
stos
dec
xor
lea
add
sarb
or
dec
imul
repz
fisubrs
in
shr
popf
fwait
mov
mov
cli
add
enter
pop
and
add
insb
pop
mov
push
test
adc
cld
jecxz
mov
sbbb
and
insl
das
mov
repnz
iret
inc
loop
mov
es
pop
add
inc
add
adc
mov
xchg
cmpsb
sub
xchg
out
or
cmp
addr16
arpl
jle
mov
cltd
inc
movsb
std
int
loopne
jle
lret
push
fstps
pop
push
imul
in
andb
pop
lock
cld
add
mov
add
in
push
roll
xor
sti
adc
push
aas
std
test
les
push
xchg
xchg
mov
leave
daa
shlb
stos
dec
push
mov
outsl
add
call
in
in
cwtl
movsl
xlat
shll
fisubs
push
pop
stos
mov
lret
outsl
jp
ret
loop
jo
mov
mov
mov
add
mov
xor
add
popa
mov
cwtl
sbbl
lds
pushf
sub
shlb
xchg
inc
std
lret
mov
push
xchg
cmp
push
orb
insb
repz
xor
add
inc
push
add
and
adc
lret
movsl
inc
in
leave
subl
or
mov
sub
sbb
inc
xor
test
mov
stc
jp
dec
adc
shll
add
xor
inc
fldl
sbb
mov
push
add
mov
push
cmp
add
pop
jae
jmp
js
stos
push
andb
addl
movsl
lea
sbbl
dec
xor
outsb
add
inc
repnz
add
cwtl
and
dec
inc
jge
cmc
mov
rorb
mov
mov
mov
push
cmpsb
sti
push
mov
add
std
mov
mov
jne
out
push
lcall
lahf
imul
add
mov
repz
pop
or
sub
mov
ja
add
dec
pop
dec
jne
subb
push
inc
lea
pop
enter
clc
icebp
ret
sbb
push
pop
add
pop
sbbl
cs
rcrl
dec
dec
jb
cmp
ret
fs
outsb
add
sub
leave
jecxz
addr16
jae
inc
or
stos
mov
in
lods
adc
jle
dec
cli
sbb
jle
xchg
cwtl
mov
add
xchg
xchg
xor
push
sbb
test
call
jo
or
lret
bnd
mov
cmp
adc
xchg
int
add
lods
retw
movl
cmpsl
bswap
nop
mov
jb
outsl
pusha
out
sub
cmp
pop
enter
and
mov
lods
inc
popf
ret
fbstp
mov
adc
lcall
aad
repz
cmp
cmp
xchg
cmpsb
add
jb
jmp
pop
test
xchg
arpl
insb
cmpsb
in
or
or
sub
pop
mov
cld
mov
push
push
jle
mov
fildll
add
call
xor
mov
mov
stc
mov
fildl
fidivrl
lods
mov
cwtl
or
mov
dec
ds
stos
insb
push
mov
push
or
xchg
xor
jmp
cwtl
push
push
add
insl
xchg
xchg
lret
dec
shll
cld
sbb
nop
inc
pop
jae
popf
in
jae
loope
aas
adc
xchg
clc
ja
cmp
rcrl
sbbl
xchg
pusha
dec
jb
dec
js
dec
adc
xchg
arpl
adc
nop
xor
pop
cmpb
push
push
popf
push
rorl
pop
xor
add
mov
sbb
add
mov
jmp
cmpsl
xorb
fldcw
das
add
pusha
lock
xor
jl
xor
cmpsb
dec
out
push
add
ja
or
shll
push
fisttpl
xchg
adc
test
add
cld
mov
jl
repz
inc
pop
cmp
xchg
jl
test
cmp
mov
call
sbb
jb
mov
mov
pop
ja
mov
mov
fscale
xchg
inc
fs
shll
paddd
jp
cmpsb
add
sarb
mov
movl
mov
add
mov
das
adc
jge
push
shlw
mov
sub
xor
scas
push
fstpl
stc
mov
dec
dec
xchg
mov
add
aam
pop
add
pop
cmp
in
jbe
addb
sub
inc
mov
sarb
les
cmc
sbb
js
xorl
hlt
jmp
and
xchg
add
dec
out
ja
xchg
fsub
and
sub
sub
cmp
or
dec
orb
mov
roll
dec
sti
call
xchg
in
push
sub
sarb
jp
inc
roll
jnp
lret
add
jne
and
or
jg
out
xchg
mov
out
add
mov
push
nop
mov
sbb
arpl
pop
pop
lock
fistpl
loope
test
clc
cwtl
ss
test
jb
sbb
add
scas
insb
fidivrl
or
jle
add
mov
movsb
add
int
xchg
push
mov
lea
or
mov
stos
insl
lock
add
mov
popa
cmpb
shll
rcrl
mov
jbe
xchg
nop
xlat
shl
enter
cltd
add
orl
or
lcall
lock
int
es
xorl
push
pop
pop
mov
imul
pushf
pop
cmp
dec
inc
inc
js
xlat
dec
add
mov
popa
xchg
xchg
shlb
testl
xor
fdivl
add
in
sbb
inc
sub
add
xor
dec
pushf
ret
fistpl
mov
les
cli
xchg
sub
pop
add
add
inc
movb
shl
and
cmp
mov
mov
aaa
movaps
movl
fimull
movsl
cmp
js
pop
test
mov
dec
addl
sarb
mov
inc
lret
mov
add
ret
pop
add
mov
sbb
pop
push
sar
jecxz
cmp
xchg
xlat
daa
fsubrs
sub
les
jne
loope
sbb
adc
mov
or
test
insl
add
jnp
mov
xchg
jecxz
outsb
cmp
insb
inc
shll
or
adc
shl
push
addr16
out
add
dec
sbb
mov
mov
pop
outsb
adc
pop
mov
sbb
xor
adc
sbb
adc
cmp
lds
cmpsl
pop
pop
movsl
xorl
xchg
test
push
add
orb
or
mov
inc
out
cmp
orl
mov
and
xor
flds
inc
xchg
dec
inc
mov
neg
in
scas
out
jp
leave
fnsave
in
dec
repnz
jl
sub
iret
or
out
std
xorl
mov
cwtl
mov
imul
hlt
iret
sub
lcall
inc
mov
sub
xor
arpl
push
add
adc
stos
mov
sbb
add
or
test
dec
sub
push
call
pop
sub
in
dec
push
xor
or
ret
loope
jb
and
addr16
dec
xchg
je
leave
add
push
add
lds
and
mov
clc
xor
xchg
call
add
inc
adc
push
jmp
mov
add
lea
dec
bound
ljmp
push
add
add
cmpsl
jg
jmp
add
call
push
test
mov
pop
adc
add
cmp
xchg
mov
xor
add
push
notb
push
or
lret
add
in
in
dec
in
xlat
ds
jno
loope
pop
in
scas
add
dec
dec
xchg
arpl
cli
and
sarb
cwtl
cmp
fcoml
js
int3
and
rorl
movb
dec
rcll
add
sbb
testl
fcmovne
mov
mov
jle
xchg
adc
cs
imul
pop
cmp
push
xorl
xor
repnz
add
pop
dec
inc
fwait
leave
pop
add
lcall
xchg
loope
mov
xchg
or
xor
repnz
add
push
roll
out
jae
cld
jle
and
loop
cmc
mov
test
mov
cmpxchg
fistps
add
in
add
add
adc
sbb
mov
jnp
xor
aam
push
sbb
lods
mov
je
jb
dec
nop
add
repz
bound
mov
neg
int3
shr
fdivrl
xor
cwtl
add
cmpsb
or
dec
test
or
sbb
xchg
fstl
int
icebp
es
cld
outsl
add
and
pop
add
bound
mov
xchg
fwait
shlb
stos
testb
push
ss
nop
and
mov
test
cmpsb
jl
pop
jecxz
add
dec
aaa
xchg
test
add
sbb
push
xchg
clc
mov
jle
rolb
jne
and
es
outsb
add
cmp
adc
pop
and
fsubr
shlb
add
jb
ret
add
xchg
inc
xchg
js
mov
cs
negl
push
cmp
pop
sbb
push
mov
add
or
das
cmp
adc
mov
add
test
jae
in
mov
sarl
sbb
cmp
sbb
pop
mov
mov
gs
adc
jb
dec
xchg
stos
pop
xchg
sub
sub
cmp
fiadds
dec
scas
aas
mov
add
iret
add
pop
xorw
jb
mov
adc
mov
pop
aaa
dec
in
jns
lahf
les
mov
add
add
lods
sbb
adc
sbbb
jne
movsl
fstpl
scas
movsl
adc
add
pop
cmp
add
jl
std
adc
pusha
xor
scas
mov
mov
mov
jns
mov
shl
pop
mov
inc
xchg
subb
inc
pop
add
push
cmp
cmp
loope
lea
adc
and
jb
ss
in
in
push
clc
int
insl
sub
mov
adc
test
iret
dec
cmpsl
sarl
andl
xorl
out
pushf
or
les
mov
and
push
popa
pop
pop
mov
inc
push
add
jle
push
insb
imul
fwait
popa
add
js
and
mov
xchg
xchg
push
push
sbb
add
jle
push
incl
roll
cli
mov
add
int
pop
add
sahf
pusha
add
daa
jmp
adc
add
lcall
adc
mov
add
lock
sub
push
aaa
lcall
aad
cld
test
lods
push
jbe
fisubl
and
std
pop
or
insl
add
pop
cmp
adc
push
enter
add
add
in
int3
sub
sbb
jb,pt
movsl
xchg
popa
sbb
dec
xchg
test
mov
fsubl
mov
adcb
ret
repnz
es
les
jge
add
ja
pop
xor
mov
add
mov
mov
out
push
cmpsl
pop
add
movsb
mov
xor
pop
lret
test
addr16
js
push
add
les
cwtl
xchg
xorb
cmp
mov
xchg
add
xchg
adc
icebp
add
aam
mov
and
gs
jae
push
test
scas
jmp
jae
xchg
sets
push
add
test
dec
lret
mov
lcall
mov
add
scas
repz
lret
add
nop
aam
mov
imul
sbb
test
mov
cbtw
testl
sub
mov
jno
popf
ss
lcall
fwait
push
jl
xchg
mov
push
lods
ljmp
xor
rorl
pop
mov
pop
psubd
imul
rolb
aam
outsl
stos
sub
testl
sarl
roll
aaa
repz
mov
mov
setns
or
add
xlat
add
fwait
adcb
nop
sbb
test
push
les
cltd
rorl
cmc
pushf
jecxz
push
mov
xchg
jmp
adc
jg
pop
outsl
into
nop
in
push
movsb
lahf
shll
xor
xlat
clc
push
pushf
pop
add
xor
fbstp
mov
andb
aad
movsl
fadd
add
addb
sub
cli
push
dec
sbb
dec
inc
loop
pop
add
xlat
cmp
popf
jg
out
lcall
jae
jle
push
sbb
jge
sbb
lret
jp
das
popf
loope
lcall
jg
sub
pop
lock
xchg
cli
sbb
cltd
inc
xor
mov
stc
cmpsl
dec
faddl
mov
pop
sbb
inc
xchg
out
sub
in
dec
jge
add
lods
imul
ret
aas
or
mov
repz
data16
mov
sub
jcxz
pop
mov
vunpckhps
mov
cmp
add
test
xlat
or
add
jb
or
mov
xor
mov
out
into
lods
test
testb
addr16
xchg
idiv
add
add
pop
cmp
les
mov
movsl
ret
stos
in
gs
add
out
inc
add
push
shl
push
add
pop
push
mov
cmpsb
das
in
scas
shll
addl
movsl
repnz
adc
push
ja
test
xor
xchg
xchg
test
mov
push
adc
lods
or
mov
or
scas
add
add
popf
jnp
jb
xchg
push
loope
and
xchg
pop
testl
xor
pusha
negb
jp
movsb
shrl
pop
rorl
inc
lds
jmp
jno
mov
and
inc
imul
adc
fisttps
in
and
mov
add
lods
jle
rol
sbb
jne
shlb
insl
add
bound
ret
fiadds
pop
adc
xor
lret
psrad
les
add
push
pop
and
add
sub
scas
pop
add
sbb
out
shlb
mov
xor
jecxz
jo
mov
data16
add
lock
in
addl
add
xlat
cltd
cld
rcll
mov
loope
lods
and
testb
mov
fwait
enter
inc
inc
das
faddl
aam
rcrl
stos
in
xor
test
jb
aaa
xchg
imul
mov
and
aas
les
rcrl
loop
pop
loope
and
add
cmpsl
inc
fistpl
cmpsb
mov
push
xor
les
repz
jl
int
inc
jle
and
hlt
inc
mov
loop
pop
pop
arpl
push
sbb
outsl
add
push
or
aas
addr16
push
fsubrs
mov
stos
pop
add
jo
mov
jb
dec
jle
pop
ljmp
loope
lcall
pop
xchg
xchg
shlb
test
daa
xor
dec
mov
sbb
push
add
popa
xor
lret
add
mov
jbe
fxch
das
add
iret
pop
clc
push
inc
add
hlt
shll
test
xchg
fmull
jle
or
add
push
loopne
int3
push
outsb
xor
and
and
add
xor
sahf
add
testl
adc
aam
jmp
mov
je
jno
push
add
sbb
in
or
and
ds
sub
pop
add
mov
out
add
xchg
fcmovne
mov
inc
ja
aaa
mov
movb
sub
and
js
jbe
stos
add
lahf
dec
push
xor
imull
xchg
insl
cmp
add
pop
cmp
out
nop
cwtl
add
in
shlb
daa
out
loope
jb
pusha
jle
xchg
pop
shr
notb
ret
lock
imul
mov
es
test
repz
sarl
cmp
or
mov
out
push
lods
inc
add
sub
bound
mov
mov
add
xor
push
cmp
xchg
shll
push
test
xor
add
xchg
and
sbb
add
inc
and
rolb
mov
mov
add
lock
mov
or
ljmp
insb
test
cmp
inc
pop
jb
test
sbb
or
jle
in
outsb
mov
ficoms
add
mov
xor
rsm
xlat
xchg
cmpsb
add
pushf
sub
rcr
add
sbb
loop
ljmp
pop
jo
std
cld
cmp
push
lods
shll
in
mov
mov
rcl
gs
inc
outsl
jle
mov
iret
inc
mov
shl
ds
xchg
fildll
push
xlat
push
add
jp
mov
lods
mov
inc
ja
push
hlt
sar
shlb
sub
rorl
jne
jl
popf
xor
adc
adc
fstpt
dec
xadd
lods
mov
jae
or
test
xor
sub
mov
push
test
enter
cltd
lods
lret
into
add
inc
jne
or
xor
daa
xchg
xor
add
ret
rolb
pop
jno
xchg
inc
add
cvtpi2ps
xor
mov
shrb
jo
xchg
pop
mov
sub
push
sbb
mov
inc
mov
bound
mov
movsb
loope
movsl
push
push
push
pop
cmpl
add
jg
mov
into
xchg
inc
and
test
mov
in
add
or
jnp
mov
add
mov
add
test
inc
andb
lea
dec
bound
push
push
jb
ret
or
sub
sahf
cwtl
pop
sbb
add
mov
stos
inc
sbb
push
pop
pop
pop
imul
jle
arpl
xchg
loope
in
mov
cmpsb
pop
dec
mov
mov
data16
out
popa
add
cld
fisubl
add
xor
jecxz
nop
push
outsb
aad
ret
push
pop
and
flds
mov
dec
add
jp
sbb
into
mov
hlt
jp
lods
int3
outsb
shll
push
jbe
cmp
repz
test
stos
or
xchg
xor
andb
mov
jmp
sbbb
xchg
out
test
mov
cmpsl
adcb
mov
out
add
loop
dec
fldl
jb
cmc
into
mov
cmp
mov
sub
add
or
out
cmpsl
xchg
and
sub
ret
sbb
pop
pushf
shrl
sub
movsl
shlb
subb
mov
mov
fwait
scas
test
xchg
xchg
fstl
cmpsb
ret
inc
jecxz
mulb
cmp
inc
jnp
mov
sbb
mov
pop
loop
jecxz
into
add
cltd
sbb
mov
adc
inc
jbe
icebp
inc
add
dec
dec
or
stos
xor
jle
or
push
add
ret
fldt
jecxz
sub
or
sbb
roll
push
jmp
inc
orl
xchg
dec
or
mov
aaa
sbb
out
rcr
arpl
pushf
adc
pop
mov
push
add
sarw
fidivs
sub
cmpl
idivb
pushf
je
jl
jg
adc
or
cwtl
mov
out
xchg
xlat
cmc
jle
lods
mov
inc
add
les
les
add
cmp
jge
mov
sub
add
xchg
add
sbb
mov
adcl
jb
inc
xor
cs
fnsave
and
iret
sub
stos
sbb
lea
icebp
or
fsts
lahf
add
jb
fdivr
loope
bound
shll
sub
in
jge
cld
shrb
out
aas
pop
add
xchg
into
or
xchg
rclb
push
dec
jno
mov
in
add
xchg
adc
or
fmull
iret
mov
loopne
sbb
mov
ret
out
cmovo
popf
stos
cwtl
popf
mov
ret
mov
or
mov
add
pop
pop
mov
cli
ret
loopne
repnz
mov
bound
xchg
xor
andl
push
scas
hlt
bound
sbb
pop
add
xchg
andb
cmpsl
mov
mov
fdivrl
and
fwait
jb
xchg
frstor
dec
xorl
adc
adc
js
daa
pop
lea
loopne
and
inc
pop
add
mov
out
xchg
mov
aad
inc
sub
andb
or
notl
mov
sub
popa
lock
jb
xchg
cmp
and
push
aam
outsb
mov
dec
pop
out
pop
popa
jb
mov
mov
ffreep
test
inc
dec
js
in
cli
mov
imul
mov
pop
cmp
lds
mov
ret
or
rcll
jmp
adc
mov
and
mov
mov
add
or
push
out
mov
enter
sbb
xchg
xor
cli
cmp
cwtl
lods
icebp
pop
cmp
sub
push
xchg
sbb
in
push
jae
push
push
xchg
mov
jne
addr16
xor
adc
ss
push
repnz
ret
push
add
inc
jns
sbb
rclb
and
mov
test
mov
cmp
jmp
pop
mov
sub
cmp
inc
inc
xchg
iret
dec
addr16
int3
movsb
lahf
fisubrl
maxps
xchg
or
dec
pop
add
jecxz
js
testl
push
sub
rorl
xor
daa
insb
adc
fisubrl
scas
add
sub
add
insb
push
incl
lds
repz
pop
loope
pop
lret
stos
jle
and
mov
mov
dec
xor
push
mov
xchg
test
add
jb
mov
mov
jae
fcoms
dec
aad
loop
add
xor
xchg
mov
rorb
in
push
test
orb
mov
insb
mov
leave
mov
push
cmpsb
jbe
push
shll
add
unpcklps
or
jle
aam
incl
addr16
push
out
mov
neg
xor
add
jnp
repnz
push
add
test
testb
dec
or
add
sub
loopne
rcll
sbb
jecxz
out
je
rcr
mov
add
pop
pop
js
cltd
push
dec
jbe
adc
sub
add
fs
jp
fildl
cmpsb
mov
fwait
popf
cmp
jb
jnp
loope
pop
xchg
in
subb
inc
adc
stos
adc
push
inc
inc
cli
add
or
mov
jmp
arpl
add
cs
add
xchg
jne
cli
in
call
lods
cmp
add
fsubrl
aaa
test
sbb
sbb
mov
add
inc
aas
add
ja
sub
pop
in
pop
add
lea
repnz
in
stos
add
or
inc
add
inc
xchg
add
sbb
adc
inc
dec
pop
dec
insl
sub
add
popf
mov
cld
aam
sbb
pop
pop
jle
lds
mov
add
jbe
cmpb
xchg
mov
popa
add
xlat
clc
testl
mov
sbb
cmc
rcrl
cwtl
pop
loop
jbe
pop
pop
pusha
scas
mov
add
repz
fstps
sar
in
iret
pop
sub
jg
loope
ljmp
adc
movsl
or
add
sub
push
inc
add
lea
xchg
outsb
sub
mov
ja
pop
addr16
pop
mov
adc
je
inc
in
add
mov
ljmp
cli
jmp
push
movsl
fstpt
mov
aam
jecxz,pt
cwtl
addb
fistpl
addl
adc
push
xchg
xchg
sub
sbb
fs
in
xchg
add
jp
cmp
in
stos
shl
sub
jb
cmpsl
or
add
mov
mov
lods
add
push
out
cmp
fiadds
sub
cld
mov
mov
mov
fmull
jae
addb
dec
add
test
xchg
addl
mov
fsubrl
movsb
push
dec
sbb
sbb
xchg
mov
push
add
add
pop
cmp
aaa
cmp
sbbb
xchg
aam
scas
add
movsl
and
or
jle
dec
push
out
cmpsl
mov
andl
sub
dec
std
mov
xchg
aas
add
jns
cmpsl
lods
mov
inc
add
outsb
add
mov
mov
lcall
add
dec
jmp
jle
nop
adc
leave
mov
iret
add
cmp
mov
in
orl
mov
lret
scas
xchg
xchg
add
insl
lock
clc
cmpb
inc
inc
hlt
andl
sub
pop
jge
out
leave
lea
jmp
insl
adc
daa
pushf
neg
jle
lock
push
jp
cmp
rol
test
sahf
xchg
in
jle
scas
or
xchg
add
cmpsb
orl
dec
jle
iret
jmp
jle
cltd
cs
pop
in
mov
out
movsb
jo
arpl
cmpsb
xor
cltd
scas
in
adc
iret
xor
in
mov
push
add
rcll
xchg
sub
nop
xchg
push
sub
scas
mov
cmp
setbe
movl
sahf
jle
mov
push
lret
aad
xchg
jp
rorb
dec
stos
push
and
add
fisubrs
lcall
test
pushf
push
out
pop
pop
add
out
imul
adc
and
add
cmpsb
xor
adc
movsl
jae
sub
lcall
pushf
mov
dec
in
pop
jbe
sub
imul
cwtl
or
js
sub
loop
mov
iret
sbb
pinsrw
rolb
mov
xchg
shll
push
das
sahf
rcrl
repz
int3
loope
mov
and
add
scas
aad
pushl
and
add
sti
or
xor
or
pop
xchg
fs
jle
or
or
movsb
jecxz
or
rcrl
jp
jne
jg
loopne
flds
out
imul
xchg
cwtl
loop
pushw
mov
inc
mov
scas
cmp
mov
add
dec
or
iret
cmp
xchg
pop
mov
repz
subb
aaa
adc
stos
fcmovnb
dec
add
or
mov
cmpsl
mov
rcll
lock
add
pusha
pop
in
lcall
shll
mov
xlat
push
sbb
data16
cmp
push
adc
icebp
xchg
sbb
bound
pop
es
addr16
ds
outsl
cmpsb
movsl
mov
xchg
dec
es
jge
adcb
ss
adc
adc
movsl
cli
mov
pop
addl
pop
pusha
lcall
add
out
or
std
jle
sub
mov
jl
mov
xchg
and
xchg
and
loope
jns
sti
int
int3
mov
inc
add
inc
imul
xchg
fstl
bound
out
icebp
mov
mov
adcl
add
loopne
xor
fdivl
or
js
cmp
mov
push
jb
sbb
fistpl
add
iret
add
sub
movsl
sbb
repnz
ret
inc
fcomps
add
xchg
fcoml
mov
lea
and
in
cmp
addr16
push
jp
movl
mov
repnz
and
cmp
int3
les
aad
es
add
ss
or
add
mov
out
fsts
in
add
adc
mov
add
dec
mov
cli
lods
lods
mov
icebp
push
xor
out
inc
push
jae
add
add
push
insb
and
jnp
notl
rolb
or
sub
outsb
mov
pop
or
les
aaa
or
ljmp
dec
pop
mov
or
mov
cli
dec
push
mov
xchg
pushf
push
pop
pop
rep
imul
xchg
or
or
popl
sbb
hlt
xor
push
sub
inc
scas
xchg
jb
les
push
fs
mov
mov
mov
popf
add
iret
fmuls
add
jge
sti
repz
add
jmp
andl
aas
push
xchg
jg
cli
xor
hlt
mov
inc
xlat
cmp
cmp
sbb
test
cld
shll
xlat
mov
lods
mov
test
xor
xchg
adc
imul
mov
scas
fisubrl
xchg
add
imul
movsb
arpl
lock
ss
lret
rcll
adc
es
add
and
inc
out
jae
and
add
push
in
or
pop
mov
add
xchg
xchg
or
daa
pop
pop
jnp
aaa
rcrl
cli
repz
mov
jle
mov
jae
shrl
dec
jl
pop
pop
xchg
pusha
add
test
inc
add
sahf
pop
leave
shll
addr16
sub
mov
jg
loop
int3
push
xor
sub
inc
xchg
cmpsb
xchg
leave
push
sub
adc
pop
push
pusha
sub
not
cmp
subb
cmp
daa
or
inc
loop
inc
cmc
push
jmp
mov
add
xor
mov
jp
sahf
sbb
rol
jp
ret
xchg
sarl
jp
mov
or
cmp
adc
and
dec
xor
stos
clc
inc
add
lods
leave
add
jmp
push
pop
bnd
sub
add
lret
add
js
call
lahf
cmp
add
sbb
jg
jns
sub
stos
ja
ds
clc
push
jle
lods
mov
xor
add
addl
add
imul
jmp
out
push
and
sub
nop
mov
lret
mov
cmpsb
jle
cmc
push
rcll
ret
or
jne
adc
dec
and
sbb
add
cltd
inc
loopne
xor
mov
pusha
mov
rcrl
cwtl
cmpsl
repz
sbb
add
gs
aaa
cmp
cltd
or
add
sbb
jo
movb
cwtl
or
mov
jecxz
and
pop
out
ljmp
mov
jb
nop
lods
cltd
icebp
inc
cmpsb
add
lock
mov
add
fs
ss
pop
lds
sahf
lods
push
mov
fsubs
sbb
sbb
sbb
lahf
es
or
add
fsub
imull
or
push
std
push
mov
pop
addr16
lods
cli
repnz
mov
loope
stos
lret
add
mov
fs
mov
clc
pop
hlt
leave
arpl
add
xor
shrb
pushl
and
fcomps
popf
mov
mov
jg
insb
fstpt
cmp
ja
mov
add
jmp
popa
leave
mov
add
pop
xorb
mov
push
push
push
pop
add
mov
push
cmpl
popf
pop
cltd
xor
jno
repz
and
pop
insl
frstor
xchg
cmp
aas
and
ljmp
jl
mov
inc
inc
jns
xor
in
dec
cltd
xchg
jle
jp
insb
pop
or
sbbb
xchg
mov
mov
adc
cmpsb
mov
push
and
pop
xchg
xor
loop
cli
fisubrl
rol
cmpsb
dec
jb
pop
out
sbb
add
dec
jle
cld
push
int3
adc
dec
call
mov
or
adc
cli
and
xchg
adc
loope
xchg
jo
fidivs
add
loopne
mov
rcrl
ficomps
jmp
add
dec
push
add
test
add
lahf
fimull
inc
daa
loop
or
stos
or
inc
adc
add
mov
and
mov
dec
pop
add
pop
dec
mov
jno
add
scas
adc
cmova
call
sub
mov
add
sub
sub
fadds
jp
pop
jno
jae
loope
clc
xchg
mov
popa
add
ficoml
ja
inc
jle
ret
lds
test
add
in
dec
shlb
or
push
dec
xor
sarb
outsb
jns
stos
push
imul
add
jne
sub
xchg
out
sbb
idivb
add
popa
pop
ljmp
add
lods
xor
xor
xchg
jge
jbe
cli
movsb
in
xchg
icebp
scas
or
pop
xlat
xchg
add
and
mov
andl
es
lods
add
and
or
rcl
xchg
test
adc
sbb
loopne
enter
sub
sub
pop
and
push
xchg
jge
xchg
cmpsb
in
cmc
mov
ret
jo
inc
add
dec
jbe
arpl
and
in
mov
add
ror
inc
jle
mov
loope
jle
inc
xlat
orl
pop
icebp
mov
clc
mov
xor
add
repnz
xor
aas
icebp
dec
add
add
sbb
push
lods
xchg
cmp
aaa
cmpsl
pop
repz
pop
jg
cltd
and
iret
adc
mov
push
int3
insb
outsl
aaa
sarb
lock
fwait
push
lea
aaa
add
cmp
mov
test
movsl
push
or
lods
mov
sub
bound
rcrl
in
jp
scas
scas
dec
mov
pop
add
xor
shlb
mov
insb
pop
clc
inc
popa
jg
fildll
push
ror
jnp
jge
adc
outsb
add
add
inc
pop
and
add
shll
repz
imul
arpl
in
cltd
sar
xor
xor
add
xchg
pop
adc
cs
loop
das
in
rcll
adc
rclb
repz
js
inc
ljmp
pop
or
mov
cmp
es
pop
loope
adc
mov
add
data16
push
es
cmpsl
add
push
mov
cli
dec
add
and
add
fcmove
out
inc
rorb
rclb
mov
cld
jnp
mov
mov
xlat
add
sub
xchg
xchg
jecxz
inc
pop
out
fistpl
add
push
jmp
repnz
and
dec
add
pop
add
data16
mov
adc
andl
sbb
xchg
clc
cs
ret
testb
dec
outsl
add
lock
add
pusha
or
cli
out
sahf
xchg
xor
dec
and
mov
push
lret
pop
out
add
mov
iret
dec
xchg
lea
jne
pop
cmpsb
js
daa
bound
cmpsl
ror
shl
popa
test
sbb
xorps
xchg
mov
jle
shll
cmpsb
mov
push
inc
mov
test
xchg
in
cld
shl
mov
mov
add
test
jp
add
lods
icebp
sbb
imul
mov
sbb
xchg
mov
jp
dec
out
xchg
lret
push
repnz
add
imul
pop
rcll
enter
jmp
pop
test
movb
data16
mov
movsb
xor
xchg
add
xchg
mov
pop
in
add
imul
jbe
enter
aad
push
ja
mov
out
add
add
mov
adc
mov
rorl
sbb
popf
pop
fs
cmpl
fdivrl
jae
sarl
sahf
in
inc
inc
adc
lods
mov
orl
jp,pt
dec
add
dec
pop
fninit
mov
fistpl
jmp
inc
cmpl
cmp
mov
fwait
jmp
shrl
repnz
mov
pop
ret
xchg
push
add
mov
mov
addl
movsb
inc
jg
inc
ljmp
jge
push
add
dec
mov
adc
mov
sarb
aad
mov
add
fstpt
adc
jb
adc
repnz
dec
xchg
push
decb
xor
ds
jmp
in
daa
inc
cmc
xchg
xchg
sar
or
cli
mov
add
rcrb
xchg
das
push
iret
shll
push
jnp
pop
adc
adc
dec
push
faddl
sub
fbstp
push
sub
aad
sbb
mov
cmp
and
call
cs
add
pop
jecxz
js
in
mov
add
mov
inc
mov
xchg
shl
mov
pop
fs
cmpsb
lahf
pop
lret
add
in
je
cmp
sub
scas
mov
imul
xchg
add
inc
mov
add
data16
mov
pop
int
rolb
sbb
mov
mov
loope
imul
out
add
dec
mov
ss
lds
or
aaa
out
or
dec
adc
xchg
push
and
shll
mov
insl
dec
fs
test
mov
push
push
add
jns
mov
aad
sbb
pop
sub
fsubrl
mov
jmp
flds
push
lods
sbb
or
mov
sub
cmc
testl
jge
inc
lret
mov
and
push
jge
sbbb
jl
cmp
and
test
stos
dec
jae
push
sub
insb
stc
adc
lret
sbbl
or
sub
pop
sbbb
subl
sub
adc
orl
pinsrw
in
push
jl
movsl
mov
mov
hlt
sbb
addr16
mov
std
mov
addl
iret
pop
rorb
repz
push
cwtl
fsubr
add
mov
jne
fnsave
les
dec
or
xchg
subb
popf
cld
or
scas
push
pushf
push
add
call
lds
cld
ja
rolb
das
or
setbe
je
mov
test
adc
or
rcrl
xor
pop
or
pop
dec
repz
add
loop
dec
sub
add
int
and
lret
outsb
add
lret
jg
iret
in
mov
scas
sub
out
xor
dec
repz
or
add
sbb
add
xchg
xchg
imul
jecxz
inc
inc
xchg
aad
insb
xor
add
aam
xchg
mov
iret
js
loope
fcomps
jae
push
jmp
jecxz
inc
add
mov
xor
jmp
xlat
out
in
sti
aas
bound
cmpsb
push
and
pop
xchg
add
lret
or
aaa
mov
mov
lds
xor
andl
fwait
add
insb
sub
int
mov
cwtl
fstps
hlt
and
lock
inc
movsl
lds
lahf
fnstcw
jmp
outsb
push
xchg
les
call
cmp
sar
mov
and
bound
xchg
or
xchg
adc
repnz
mov
inc
fs
mov
mov
jmp
pop
jmp
pop
push
pop
stos
sarl
cmp
cld
in
sahf
inc
mov
adc
leave
mov
xchg
mov
and
xchg
pop
in
pop
jg
cmp
and
aam
inc
imul
jge
inc
repnz
rorl
lahf
les
jae
test
cld
mov
or
lds
and
cmp
lret
mov
sub
out
repnz
xor
or
pop
pop
stos
hlt
inc
mov
dec
add
lret
cli
and
movsl
icebp
cltd
mov
cmp
outsb
mov
rcll
das
pop
stc
xor
push
cmpsb
ljmp
ret
push
rclb
xacquire
jae
rcrl
xor
jl
outsl
sar
mov
mov
cmp
push
fmull
mull
dec
iret
loope
daa
enter
add
scas
or
and
and
mov
add
push
out
mov
cmpsb
xchg
mov
rcrb
sbbw
xchg
xchg
cmp
jmp
jle
jg
xorl
stc
or
lock
sarb
leave
lods
ret
or
adc
insb
add
cmp
jl
cmpsb
or
movl
jecxz
adc
outsl
notl
dec
cli
xor
test
sub
movsl
add
scas
adc
bound
jae
mov
mov
js
loope
add
add
add
lods
aam
dec
movsb
leave
fnstsw
jg
lcall
add
dec
test
mov
xchg
cli
testb
mov
popf
jle
adc
scas
and
or
sub
add
fwait
mov
add
push
fdivrs
out
mov
mov
shrl
loop
sarl
psubusb
xchg
jp
sar
cmp
out
movsb
add
add
pushf
sub
mov
pushl
jo
shlb
loope
xchg
repz
andl
push
inc
sti
add
jo
add
data16
movsl
xor
add
mov
shll
cmp
xchg
icebp
adc
test
cld
pop
add
add
das
test
and
out
sbb
sub
ret
xchg
adc
stc
add
inc
popf
or
pop
xor
and
adc
iret
sbb
xchg
lds
movsl
rcl
dec
push
in
imul
lds
incl
add
sub
adc
add
mov
or
fdivr
in
mov
xchg
lods
dec
xlat
add
ret
add
lcall
mov
ret
and
aam
pop
push
pop
testb
aaa
or
xor
lods
outsb
inc
lock
cmpsl
mov
roll
rcrb
add
cmpsb
std
push
add
loope
fisubs
xor
subl
icebp
or
fsubrs
aam
push
add
rcll
xchg
les
inc
ds
stos
sub
and
shrl
fdiv
sub
xchg
xchg
and
dec
xchg
add
pop
ret
leave
jne
out
js
fadds
inc
jp
bound
jp
adc
and
aam
fdivrl
aaa
dec
pushl
mov
cli
xchg
sbb
inc
inc
xchg
repz
cmpsb
xchg
sbb
es
mov
add
insl
cmp
adcb
sbb
and
fldenv
pop
jae
pop
dec
mov
push
push
es
cmc
mov
push
add
pusha
adc
andl
push
aaa
lock
add
inc
mov
popl
mov
xchg
mov
mov
and
push
cmp
rolb
push
lods
lcall
pop
cmp
xor
rolb
dec
imul
jnp
loop
mov
mov
in
out
orl
add
sbb
xchg
sub
and
mov
cli
test
scas
mov
xchg
and
fldl
jl
mov
cltd
add
testl
xchg
int
adc
dec
adc
pop
sahf
ror
fadd
pop
sub
add
adc
jnp
in
push
sub
sub
mov
jmp
push
pop
fiadds
enter
bound
add
repz
jp
inc
out
xor
add
in
sub
pop
jmp
mov
add
dec
aaa
daa
push
add
inc
cmp
jnp
mov
push
mov
add
movsb
mov
add
pusha
jns
add
js
scas
add
cmp
xor
push
push
in
mov
push
add
movsl
xchg
test
sbb
mov
aad
xchg
inc
add
mov
outsb
and
mov
xchg
sub
lock
mov
scas
add
popa
adc
add
or
xchg
jae
in
mov
push
out
xchg
sbb
dec
add
inc
addr16
cmpsb
or
cmp
push
add
daa
dec
lods
shrb
dec
outsb
test
add
or
mov
nop
push
loop
xchg
add
or
and
push
jmp
add
xor
inc
dec
pop
movsl
mov
out
inc
dec
out
cmc
xchg
call
mov
test
insb
sub
sbb
add
or
movsl
jecxz
sbb
movsl
aam
lret
adcl
mov
je
outsl
sbb
sub
pop
dec
out
mov
cld
xlat
sub
bound
rol
test
or
and
or
cs
xor
jle
inc
push
pusha
inc
loope
lret
out
pop
add
scas
ds
sbbl
mov
or
divb
lock
cmp
push
in
sub
fistpll
pop
sub
out
fcom
adc
push
fs
sbb
cmp
and
mov
jge
jmp
flds
jp
mov
popf
shll
lcall
mov
inc
cs
out
jle
push
movb
mov
das
push
pop
mov
sub
pop
repz
ss
cwtl
ret
leavew
popa
add
scas
cmp
mov
lret
mov
sub
add
stos
push
and
and
loopne
inc
pop
fisttpll
add
pop
sub
insl
rcl
andb
fbld
daa
xor
cmp
rorb
cmpsl
inc
in
mov
dec
jmp
add
inc
ret
inc
xchg
jle
mov
jmp
addb
and
xchg
mov
mov
out
loope
movsb
pusha
mov
outsl
jle
call
mov
imul
aas
push
xchg
lcall
test
mov
jmp
loope
je
dec
ja
popf
xchg
jne
mov
mov
cwtl
jl
in
jae
and
dec
add
mov
cmp
dec
add
dec
loop
mov
lcall
lahf
xchg
ds
add
sub
cmpl
test
fwait
icebp
add
jmp
xor
ja
test
add
popf
and
cmpb
and
shl
xchg
data16
lret
and
adc
outsl
int
out
pop
add
sbb
inc
loope
mov
add
dec
hlt
or
or
aad
repnz
int
in
nop
in
add
lods
inc
sbb
sbb
lods
pop
mov
adc
cltd
jle
mov
mov
add
outsl
out
push
nop
add
jne
xor
aaa
test
insl
sub
sub
mov
pushf
dec
repz
pop
mov
sbb
out
loop
jge
aad
les
ud2
dec
movsl
xor
mov
add
addl
iret
inc
dec
mov
insl
mov
cmp
jno
lret
mov
in
mov
loope
xchg
add
cmpsb
adc
and
fisttps
jmp
das
sti
pop
adcl
out
insb
add
loope
adc
mov
jae
xchg
xor
fnsave
cmp
mov
repnz
mov
cwtl
sub
and
cmp
jnp
adc
sbbl
add
scas
loop
push
sbb
add
and
icebp
add
push
test
adc
shll
add
fsubs
push
or
add
addr16
cmpsb
inc
and
into
pop
sbb
cmp
or
and
xor
sbb
cmp
sub
xor
pop
andb
mov
test
rolb
dec
shrl
das
jge
les
mov
popf
rol
xor
out
or
push
xchg
clc
ss
rcrl
cmpl
lock
addl
ja
xor
pop
rol
gs
sarl
cmpsb
add
xchg
jl
mov
add
mov
outsb
rolb
insb
sub
jle
xor
pop
inc
shl
mov
sahf
orl
push
push
into
mov
sbb
fstl
sbbl
test
jo
add
add
cmp
sti
push
jb
out
je
aad
shll
mov
hlt
cld
cmp
xor
push
jl
jne
clc
or
jp
pop
cli
mov
pop
mov
mov
or
add
leave
mov
add
xor
orl
push
add
cltd
sahf
test
test
mov
mov
ret
andb
xchg
scas
inc
cmp
pop
fwait
sarl
mov
popl
and
lock
sbb
fwait
adc
mov
mov
add
fisttpll
adc
stos
call
add
inc
mov
dec
pop
cmpsb
loop
cmp
adc
dec
jl
xor
cmp
addl
sub
outsb
mov
inc
xor
fimuls
andl
xchg
push
cmp
dec
bound
outsb
rcrl
fisubrl
repnz
rorl
jns
pop
or
sub
cmpsl
leave
mov
js
imul
fildl
jbe
mov
add
mov
movsl
dec
xorl
lret
mov
pop
pop
cli
scas
arpl
cmp
rcrb
loop
cmc
add
jp
lret
push
mov
call
aas
mov
adc
inc
loope
push
pop
hlt
and
mov
sub
fnstcw
rorb
inc
add
jae
cmp
push
cltd
ss
fistl
out
xor
jb
xchg
mov
cmp
xchg
mov
xor
cmp
ss
pop
pop
rcrb
pop
hlt
add
push
dec
xchg
inc
sbbb
or
repnz
bound
and
fwait
out
jp
rol
xchg
sub
ror
push
cmp
inc
jmp
scas
add
lock
stos
repz
sbb
repnz
mov
push
sub
xchg
xchg
loope
mov
mov
cmp
add
sbb
or
add
xor
xchg
mov
std
add
scas
fidivrs
cli
dec
cwtl
stos
clc
mov
xchg
fldl
adc
or
leave
and
aam
or
or
dec
add
sbb
rolb
xor
jp
mov
in
inc
inc
shll
dec
enter
mov
loope
sub
mov
cmpsb
xor
stos
xchg
inc
pop
xchg
mov
test
addr16
cmp
roll
test
repnz
repnz
roll
dec
inc
mov
mov
pop
fidivl
xor
cmp
add
data16
pop
int3
add
daa
or
xor
add
lods
push
mov
mov
rorl
sub
inc
arpl
add
dec
xchg
cwtl
mov
push
in
mov
hlt
sti
inc
pop
fsubrp
in
xor
push
loop
mov
lcall
popf
adc
mov
mov
push
pushf
and
test
add
lea
shl
loopne
jbe
push
shrl
inc
xchg
add
pop
rcll
add
xchg
subl
or
aad
test
xor
imulb
out
mov
scas
sbb
inc
xchg
pop
sbb
add
dec
mov
loopne
mov
gs
mov
push
and
push
inc
xchg
sub
xchg
add
and
xchg
faddl
adc
push
push
sbb
mov
push
inc
and
mov
xchg
pop
clc
jp
mov
das
call
lahf
orl
aad
in
sub
gs
add
xor
xchg
xchg
ficomps
mov
push
mov
addr16
cmpb
stos
adc
add
cli
xchg
or
sbb
int
xor
mov
lcall
mov
fadds
decl
mov
popa
add
sub
out
aaa
aas
ja
push
add
fstpl
xlat
mov
sbb
ljmp
lahf
cli
xchg
pop
cmpl
push
add
out
xlat
pusha
orb
inc
aaa
sarl
inc
dec
fildl
xor
jmp
daa
add
push
int
push
or
enter
pop
pop
mov
mov
cmp
add
repnz
add
push
pop
jb
shlb
xchg
mov
add
into
mov
add
push
jmp
cli
xor
jecxz
fs
cmp
cmp
rol
and
add
add
xchg
push
add
lret
add
and
repz
outsl
push
rcrb
xorb
test
pop
mov
mov
std
add
out
mov
sub
lds
lahf
jno
sub
scas
jg
adc
xchg
add
movsb
mov
push
jmp
mov
push
push
cld
mov
andl
dec
enter
dec
fwait
push
push
inc
xorb
pop
xchg
iret
mov
ret
in
mov
push
xor
add
jno
sub
ds
dec
jg
push
mov
inc
mov
shrl
mov
cwtl
pop
xchg
sbb
jecxz
js
enter
inc
pop
inc
add
imul
lock
in
mov
test
add
fs
imul
cwtl
add
inc
push
xor
add
xchg
sbb
fcoms
mov
popa
clc
cmc
dec
ftst
cmpsb
stc
movsl
mov
movsb
lods
cmp
lds
shrl
and
pushl
shll
ss
push
notb
js
cmp
add
movsl
add
lock
aam
sub
fldl
xchg
push
add
sbb
cli
mov
addl
mov
fadds
call
icebp
subl
mov
repnz
sub
jbe
loop
mov
push
adc
loopne
sub
fstpl
add
subl
sbb
inc
adc
and
movsl
out
clc
and
push
stc
lcall
push
add
outsb
pop
loop
movl
mov
add
sub
clc
and
cmp
dec
pop
sti
pop
repz
testb
roll
fnstsw
aaa
push
movsl
pop
rcl
ret
add
jnp
pop
xchg
and
enter
movsl
pop
hlt
in
adc
icebp
pop
jbe
inc
and
push
lods
mov
cmp
add
adc
dec
scas
ret
fwait
bnd
test
and
jne
dec
add
push
insb
mov
xor
iret
cmpsb
mov
dec
or
xchg
inc
inc
fs
cmp
int
add
mov
test
mov
jmp
cmp
jge
adc
in
cmp
or
add
jnp
sub
test
int3
cli
leave
pop
fsubs
addr16
add
push
bnd
movb
lcall
jbe
ja
add
xor
pop
icebp
das
add
ds
lret
jmp
and
cmp
push
divl
jne
mov
jmp
in
test
cltd
add
outsl
adc
in
and
mov
push
popf
sbb
out
sub
rcll
and
mov
rol
mov
mov
and
lahf
or
mov
adc
dec
add
leave
inc
and
adc
add
call
cli
mov
mov
int3
stos
add
push
out
js
mov
push
push
hlt
cmpl
pop
es
sahf
cltd
sarb
mov
cli
test
jle
in
xchg
movb
data16
xchg
push
add
cld
inc
ljmp
sti
jnp
leave
aaa
loop
and
scas
cli
push
in
sub
sub
movsl
mov
fiaddl
add
das
popa
jo
cltd
dec
loopne
jmp
jp
jmp
mov
and
es
pop
int3
inc
add
lods
cmpsb
mov
xorb
popf
pop
push
les
cs
out
add
cmpsl
mov
sbb
int
test
mov
in
mov
pushf
sbb
push
dec
iret
xchg
mov
and
sub
aaa
cmpsl
cmp
leave
mov
push
shll
ss
push
cmp
lods
sbb
xchg
add
nop
add
repnz
into
in
pop
push
fcmovb
test
loopne
es
loope
mov
cmp
movsl
or
bound
or
sbb
push
add
sbb
mov
adc
and
les
rcll
sub
push
sar
out
mov
mov
loop
xchg
roll
icebp
subl
mulb
push
add
push
sbb
aaa
ja
sub
push
movsl
or
add
xor
nop
adc
jo
cmp
sub
pop
loopw
inc
je
sub
dec
movsl
test
stc
jge
jbe
lea
mov
int
cmpsl
pop
clc
aaa
xlat
mov
add
inc
lock
jno
cmc
mov
iret
dec
leave
out
mov
sub
or
ret
cmpsl
or
xchg
adc
test
cmc
roll
es
add
test
and
dec
lret
fldt
mov
lahf
pop
pop
jne
mov
das
add
movsb
mov
nop
mov
in
imul
cwtl
fisttpll
addr16
xchg
mov
dec
mov
jbe
mov
xchg
push
lahf
sbb
rorb
fnstsw
mov
shrb
cmpl
lcall
mov
sub
mov
pop
test
ljmp
imul
xor
mov
xor
lods
ds
das
mov
scas
push
aas
popa
test
inc
loope
lret
or
add
movsl
and
sbb
jge
out
call
cmpsl
inc
jle
shll
pusha
lret
add
shlb
adc
ljmp
inc
gs
add
sbbl
sbb
outsl
lcall
push
ljmp
aaa
mov
and
stos
adcb
adc
xor
push
sub
mov
or
jecxz
adc
arpl
movsb
push
and
fstl
add
ficompl
jg
jae
clc
xchg
movsb
shrl
scas
cmp
ljmp
xor
xchg
add
push
or
xchg
jmp
cmc
xor
into
and
sti
adc
add
xor
and
jns
or
mov
push
and
xchg
cmp
cmp
imul
mov
push
xor
sub
xchg
out
pushl
jae
es
mov
mov
mov
sub
add
and
and
outsl
add
lock
xchg
adc
leave
ret
dec
jecxz
cmpsb
jl
xorl
lret
into
xchg
bnd
testb
inc
xchg
in
sub
dec
mov
ja
cmp
add
scas
imull
mov
add
punpckhdq
gs
das
jle
cmp
movsb
and
jecxz
jnp
sbb
mov
fs
sub
inc
data16
pop
mov
lret
sbb
clc
fcoml
andl
adc
xchg
mov
mov
cli
imul
outsb
dec
add
and
add
loope
cld
inc
lods
xor
add
and
and
add
inc
mov
mov
lods
add
push
ds
in
add
dec
push
mov
mov
movsb
add
lods
iretw
sub
sbb
stos
pop
repnz
mov
in
cltd
xchg
daa
jle
sbb
sub
dec
es
mov
adcl
in
test
das
or
mov
xor
sti
xchg
fstl
jp
in
int3
cwtl
mov
sub
popl
adc
adc
mov
into
test
jecxz
fldl
mov
mov
sti
orl
mov
or
sbb
movl
lea
test
lea
rcll
push
mov
aam
or
data16
add
leave
xor
mov
insb
push
mov
enter
add
add
xchg
xor
jp
mov
pusha
sub
popf
test
sti
mov
mov
scas
bound
aad
mov
add
test
orl
adc
scas
adc
notb
in
jmp
jle
jo
xor
add
push
add
mov
ds
ret
mov
test
mov
mov
ret
xchg
add
int
repnz
test
xor
adc
or
xor
fistl
fstpt
dec
outsl
pop
jae
shll
cmp
clc
js
in
fs
clc
ret
add
inc
arpl
fwait
ds
mov
pop
sub
ret
mov
out
xchg
cmp
xchg
mov
fwait
or
out
aam
sub
lock
xor
sahf
and
xor
and
lea
and
mov
test
aam
lds
cld
cwtl
add
jne
pop
add
gs
push
xchg
xor
test
add
test
xchg
arpl
add
sbb
add
lods
into
call
test
imul
xor
iret
or
or
fdivs
pop
arpl
add
and
test
inc
adc
mov
inc
popf
push
sub
movsl
negb
lods
pop
sub
leave
pop
push
pop
stos
in
mov
mov
push
pop
test
test
mov
and
inc
push
xor
cmpsb
jb
imul
out
sbb
shll
je
or
jb
sub
imul
sub
repz
orl
test
cmp
xchg
mov
jle
outsb
mov
stos
ss
or
popf
push
add
addl
lret
adc
sub
cmpsb
sub
or
fistpll
scas
rcrb
icebp
xchg
xor
add
mov
mov
or
test
jp
pop
clc
movl
and
add
lds
rcrl
add
mov
jmp
cmpl
ret
loope
mov
pop
mov
mov
arpl
rol
pop
pop
sbb
jb
addl
xchg
ret
fimull
das
add
pop
pop
in
sbb
mov
fdivrl
scas
fidivs
aad
jae
jbe
bound
or
and
push
scas
xchg
ret
mov
cli
clc
lahf
nop
cmpsl
add
in
xchg
push
and
xchg
test
fnsave
dec
gs
dec
repz
ror
inc
aaa
flds
cmp
sbb
inc
das
inc
mov
pop
jne
in
fwait
xor
dec
rol
in
movsl
nop
mov
int3
add
xchg
cld
push
jnp
mov
jbe
mov
addb
inc
mov
and
push
lret
add
hlt
jmp
mov
icebp
clc
inc
xchg
inc
daa
loope
sub
add
dec
and
cmp
jecxz
sbb
pop
ss
fmull
pop
inc
sub
mov
push
add
push
push
ret
cwtl
xchg
add
dec
cs
adc
dec
jge
aaa
flds
shlb
loop
add
sbb
add
inc
cmp
mov
lock
movsb
mov
loopne
jae
shl
sub
mov
iret
adc
call
and
stos
movsl
adc
xor
fcomps
jge
sub
dec
int
add
jmp
and
repnz
cmpsb
adc
or
pop
dec
in
push
jo
pop
add
xor
imul
push
loop
cmp
xor
sbbb
or
mov
minps
lahf
add
jb
pop
repnz
repnz
mulb
lcall
add
scas
or
mov
jp
int3
in
roll
mov
leave
xor
das
sbb
cli
hlt
mov
push
loop
jmp
xchg
jle
clc
cmp
inc
and
adc
push
outsb
push
out
les
repz
loope
xchg
lret
sbb
pop
lods
bswap
mov
cmp
arpl
aas
sub
roll
inc
push
repz
and
jp
outsb
iret
pop
repz
mov
add
loopne
outsl
jp
fiadds
jmp
stos
cld
rep
and
stc
ret
rcll
xchg
add
arpl
or
pop
mov
in
pop
add
mov
cmp
or
enter
mov
lahf
cmp
scas
sub
inc
testl
jno
mov
pop
lret
imul
sub
repz
jg
mov
jbe
cmp
add
lret
sbb
dec
dec
add
push
sub
or
sbb
sub
jmp
jne
pop
cmpb
popf
imul
lret
jg
pop
mov
inc
enter
add
repz
dec
lret
cmpb
rorb
call
pop
sub
notb
dec
imul
cld
mov
add
shrb
sub
push
inc
dec
fstps
iret
fcomps
inc
out
loopne
bound
cmp
xchg
xchg
fwait
inc
cwtl
gs
pop
cmpsb
jns
jge
les
pop
ret
pop
push
cltd
push
jle
adc
mov
stos
fistpl
filds
pusha
pop
outsl
cmpsb
rcll
sub
inc
mov
sub
mov
jle
xor
je
xor
add
fwait
stos
int3
repnz
ds
jo
add
sub
xor
aad
push
add
push
test
gs
cmp
add
pusha
jae
sar
daa
dec
sbb
icebp
repnz
mov
sbb
int
xchg
fcomp
add
jb
lods
add
in
aas
push
cwtl
fsubrl
or
and
push
xchg
sub
xor
pop
xor
sbbl
mov
xor
lea
cmpsl
dec
jmp
or
fs
push
cmp
les
pop
push
hlt
jp
push
nop
cmp
add
mov
fwait
rolb
xchg
adc
movsb
mov
ss
mov
call
or
mov
ja
cmp
mov
mov
pop
divb
popl
jge
insb
lahf
add
add
push
ljmp
jle
in
mov
xchg
or
mov
xchg
push
push
stos
call
lds
push
adc
jge
push
out
xlat
addl
fwait
pop
rorb
jb
mov
cmp
dec
outsl
mov
xchg
repz
outsb
pop
sub
shll
xchg
jmp
or
in
stos
and
mov
icebp
pushf
lds
out
mov
mov
cs
and
add
lods
addr16
addb
in
cmpsb
rorb
aam
cltd
lret
sbb
movsb
imul
lds
add
sbb
stos
ljmp
aam
dec
dec
adc
outsb
mov
add
les
cmpsl
xchg
test
lods
inc
jb
sub
pop
or
adc
je
dec
sarl
cltd
add
addr16
or
adcl
jae
pop
sub
pop
dec
push
mulb
add
add
adc
movsb
and
push
gs
add
xor
addb
sbb
je
pop
cmp
sub
pop
dec
adc
push
add
sub
mov
pop
clc
out
cmp
sbb
data16
ja
mov
daa
rcll
pushf
rorb
xor
jo
bound
mov
and
mov
mov
jne
sbb
jle
mov
mov
adc
ljmp
rcl
lods
data16
adcb
lods
xchg
cltd
add
shrl
add
lods
sub
sti
pop
cltd
nop
jge
mov
iret
out
testb
pop
shrl
fldcw
and
and
xor
xor
gs
or
std
jnp
fldl
ja
test
xlat
enter
jmp
lock
fwait
add
scas
pushf
sbb
out
rolb
mov
test
xor
mov
shl
jmp
fnsave
add
les
add
mov
mov
mov
es
dec
or
clc
mov
and
push
divb
sbb
jo
cmp
iret
movsb
rol
pop
repz
mov
orb
or
dec
jb
jg
out
adc
aaa
es
movsb
mov
js
mov
mov
add
dec
mov
push
sahf
aad
add
lock
std
lret
xchg
mov
mov
sbb
add
loop
movl
leave
lea
add
mov
mov
inc
ror
dec
notb
clgi
inc
mov
cli
cmpsb
adc
out
loope
and
xchg
add
xor
add
xlat
cmp
jo
push
stos
xchg
or
sbb
mov
add
pushf
mov
cltd
adc
cmp
push
add
cmpsb
dec
pop
add
and
int3
imul
icebp
sub
mov
ret
les
add
mov
inc
add
adc
mov
add
dec
mov
je
insb
pop
pusha
sub
testl
shrb
scas
jecxz
ja
pop
lods
fildl
ss
xchg
pop
stc
jge
cmpsl
in
add
xor
or
add
jae
and
repnz
xchg
add
pop
push
daa
add
scas
inc
jno
mov
add
push
rolb
rorl
add
pop
fnstcw
popf
lea
xorl
xchg
pop
cmpsb
add
xchg
and
into
clc
in
flds
add
in
outsb
jmp
movsl
cwtl
and
mov
dec
push
rclb
ljmp
subl
je
aad
mov
adc
scas
adc
es
loope
je
sti
repnz
into
fld
xchg
push
cs
movsb
mov
cmc
imul
adc
xchg
in
sub
test
dec
ret
lods
mov
lret
xchg
xor
dec
stos
push
cmp
jnp
in
or
and
cmp
xchg
mov
iret
pop
add
jle
popl
loope
add
je
jb
leave
xchg
add
int
pop
daa
cmp
mov
xorl
int
icebp
mov
js
mov
arpl
push
pop
cld
vmovsd
adc
add
mov
testl
ret
pop
repz
mov
dec
rcr
jne
icebp
lds
add
mov
sub
inc
in
popa
xor
loop
xchg
shlb
icebp
add
loopne
enter
cmp
sub
outsl
ljmp
cmp
adc
xchg
or
pushl
cmc
sbb
adc
add
in
es
mov
lods
pusha
push
cmc
decl
fnstcw
and
add
dec
pop
push
divb
adc
mov
adc
pop
daa
fs
icebp
mov
dec
lret
push
lea
add
repnz
add
xchg
push
aam
imul
xchg
xor
dec
xor
bnd
xchg
push
jecxz
dec
add
cs
xchg
or
ljmp
out
insb
mov
dec
push
xchg
subl
daa
ffreep
add
adc
jne
mov
test
add
mov
imul
and
ja
push
addl
into
mov
and
xor
mov
sub
aad
pop
mov
dec
push
add
dec
add
in
cltd
lea
pop
add
jne
cld
ret
shr
fsubr
gs
pop
out
scas
mov
mov
add
push
sbb
adc
adc
ret
popf
insb
dec
and
push
and
pop
rcrl
test
stc
xor
lods
imul
xchg
add
or
mov
pop
lods
jl
jno
adc
xor
push
rclb
pop
das
cmp
popf
addl
nop
mov
clc
or
js
repnz
mov
test
nop
lret
addb
movsb
inc
pop
xchg
jae
mov
subb
cmp
inc
and
shrl
test
sub
pushf
mov
arpl
ja
xchg
leave
jmp
enter
test
cmp
int3
leave
add
or
mov
add
rcrl
das
push
inc
das
pop
xor
sahf
mov
add
mov
xchg
push
pop
js
in
adcl
leave
rorl
repnz
dec
add
mov
ret
or
sti
jp
dec
xor
xchg
push
cmpsl
and
aas
lret
faddp
out
add
xlat
psubq
add
out
out
mov
push
aas
add
push
jne
enter
jle
or
inc
xchg
mov
sbb
add
pop
xchg
add
push
cmp
push
rolb
in
xor
dec
jmp
sbb
sarb
stos
sub
add
add
and
adc
inc
and
dec
cmp
daa
mov
sbb
add
cmpsl
enter
out
enter
push
mov
lret
jb
scas
imul
mov
add
pop
and
dec
cmpsb
jg
outsl
adc
data16
xchg
fs
adc
jp
xor
xor
jp
dec
lret
pop
ljmp
xlat
pop
iret
in
sbb
fwait
in
leave
ja
jns
add
bound
push
movsl
add
call
inc
inc
push
add
xchg
pop
icebp
cmp
shrl
sub
iret
xlat
add
ret
scas
lock
add
mov
or
data16
mov
dec
outsl
lahf
mov
ljmp
mov
pop
incl
stos
pop
fcompl
stos
push
and
add
lcall
dec
lods
jecxz
lret
test
shll
enter
punpckhwd
movsl
or
fld
jle
adc
iret
rcrl
cmp
xor
push
jle
js
repz
xchg
adc
jecxz
sbb
mov
xchg
icebp
xchg
mov
pop
jnp
sti
pop
or
lock
pop
insb
mov
push
cmc
push
loopne
push
add
insl
mov
add
adc
or
sub
push
mov
sub
add
inc
xor
daa
add
jp
int3
lods
sub
dec
dec
inc
pop
repnz
cli
add
mov
add
mov
ret
lods
aad
pusha
mov
add
test
cmp
ret
add
gs
dec
mov
repnz
movsl
dec
add
scas
or
popf
mov
stos
push
sarb
add
sub
add
dec
xchg
add
jmp
movsl
push
mov
dec
xchg
add
test
adcl
dec
leave
cmp
sub
mov
outsb
cmp
add
aad
dec
sub
sub
scas
sbb
aaa
ds
repz
lcall
es
test
push
and
or
push
shr
xchg
pop
xchg
pushl
into
repnz
call
push
jg
dec
outsl
cmp
fcomps
mov
mov
or
add
xchg
dec
adcl
add
mov
in
js
pushf
clc
in
ret
movl
mov
fs
rol
scas
call
jle
jle
mov
icebp
mov
divb
stos
popa
xchg
jmp
adc
ljmp
xchg
mov
sub
or
mov
inc
add
and
jbe
xchg
leave
add
add
lret
out
adc
imul
les
test
push
mov
bound
jecxz
xor
jp
dec
inc
push
mov
sbb
fldt
test
pop
and
nop
out
shrb
adc
mov
push
mov
cmp
or
inc
rorl
or
adc
and
dec
cmp
xchg
and
jle
lahf
data16
repz
loop
in
add
sbb
add
movl
xchg
push
int3
movsl
add
cmp
fldcw
or
mov
fdivl
testl
mov
in
test
add
mov
aaa
cmp
and
xchg
std
scas
jle
cmp
and
jmp
or
scas
or
out
fildl
ret
cmp
mov
fistps
mov
jecxz
xor
lahf
lret
in
jl
std
sbbl
movsl
add
ret
aas
adc
pop
sbb
push
incl
xchg
imul
sbb
in
repnz
roll
negl
mov
pop
aad
adc
ret
xchg
outsl
and
dec
pop
mov
lahf
pop
idivb
sbb
aad
dec
shl
push
fldenv
frstor
jae
xor
or
movl
push
out
ljmp
lods
popf
sub
mov
les
xor
add
mov
in
lea
xchg
mov
add
loopne
xchg
ljmp
hlt
aaa
lea
pop
mov
push
sbbb
adc
mov
jecxz
js
or
dec
and
idivl
pop
lahf
dec
xor
test
nop
mov
loopne
jle
packuswb
mov
pop
add
stos
pushf
xchg
repnz
sbb
xchg
dec
stos
jno
cmp
sbb
mov
fxch
mov
xchg
xorb
cld
ja
sbb
les
fimull
shr
pop
mov
int3
into
dec
roll
push
ret
or
dec
cmc
jp
mov
in
in
dec
test
jmp
jecxz
mov
add
inc
jle
movsl
loop
jp
inc
nop
add
dec
decb
and
testb
mov
push
push
jns
mov
jmp
xorl
movsb
ret
push
jle
enter
loope
or
mov
lret
mov
aam
int3
add
insb
jg
mov
mov
sub
cli
mov
adc
shrl
mov
decb
call
mov
cmpsl
inc
mov
cmp
mov
negl
push
add
frndint
push
mov
mov
adc
xchg
sub
add
scas
cmpsb
xchg
lret
movsb
add
jae
mov
dec
adc
clc
mov
sub
xchg
pop
dec
xor
mov
pop
and
add
adc
je
inc
inc
movntps
movsb
std
pop
out
mov
mov
lods
movsb
movsb
aam
lret
lahf
add
inc
fcmovb
addl
cmpb
movsl
jns
add
cmp
loop
fs
pop
xor
push
lods
or
jge
int3
lea
out
aaa
mov
pop
jae
push
xchg
and
inc
lods
call
es
pop
repz
push
dec
sarl
adc
daa
mov
outsl
lods
pop
inc
out
add
adc
or
pusha
inc
push
push
and
cmp
inc
sti
sbb
mov
xchg
cmp
push
andl
shll
call
mov
pop
pop
pop
imull
lcall
mov
jne
push
sub
xor
or
pop
lds
setns
pop
dec
adc
cld
sbb
movsb
mov
mov
cltd
or
push
movsl
jg
popf
lock
adcb
push
iret
add
in
fidivrs
or
lods
std
fsubrl
add
dec
jp
or
dec
mov
js
rcr
hlt
das
add
pop
mov
sbb
mov
add
xchg
inc
and
add
adc
sub
outsb
pop
pop
popa
jmp
bound
bound
and
into
pusha
clc
shlb
mov
sbb
mov
fildl
hlt
dec
negl
test
std
fldl
inc
test
mov
scas
jmp
or
add
test
cmc
test
roll
test
gs
ljmp
cli
pushf
popf
in
lds
daa
mov
sbb
and
lahf
push
jno
popf
jp
andl
jb
adc
ror
scas
inc
add
ret
pop
pop
jle
push
testb
add
sub
sgdtl
rclb
push
stos
or
mov
lret
lret
jo
push
dec
sbb
test
jb
jmp
cli
fcompl
rorl
lret
add
and
inc
repz
xchg
add
psubd
stos
push
and
or
mov
add
aad
subb
ret
add
mov
fsubrp
inc
das
add
sub
or
fcoms
in
pop
jmp
push
add
mov
fnsave
add
jg
icebp
cmp
xor
sub
test
dec
pop
mov
xchg
lret
test
cmpsl
cmp
aam
sub
mov
mov
add
mov
push
push
and
fsubrl
imul
fcomps
sbb
add
and
jae
jp
add
push
pop
and
aad
push
divb
xor
lods
fnstsw
push
xor
sbb
addb
xchg
int3
lret
arpl
add
xchg
push
imul
or
add
sub
addr16
stc
insl
push
stos
jp
fidivs
push
rol
arpl
mov
loope
popa
in
push
mov
and
push
xor
ljmp
push
and
jb
lcall
lock
jle
fcomps
mov
add
dec
jge
or
inc
gs
mov
ret
or
add
incl
add
cltd
adc
in
enter
add
scas
pop
mov
jo
repz
rorl
into
mov
mov
add
pushf
bound
add
jge
adc
scas
outsl
jle
push
es
sub
roll
and
repnz
mov
mov
push
fndisi(8087
test
jns
dec
mov
mov
insb
sub
or
jl
fs
inc
outsl
scas
adc
inc
roll
mov
xor
in
dec
add
pop
cmp
test
sahf
shrb
lock
mov
lods
scas
out
shrb
or
sub
jmp
in
shl
cmp
adc
sahf
add
sbb
pop
repz
add
sbb
imul
jmp
dec
and
add
stos
lret
push
es
mov
mov
mov
insl
icebp
cmovno
inc
add
and
out
movsl
xor
in
lods
sub
clc
popa
cmp
mov
notl
pop
fidivrl
sbb
xchg
push
in
in
hlt
pop
add
pusha
mov
sarl
or
ficoms
movsb
dec
dec
push
jne
dec
add
sahf
pop
or
out
pop
add
aaa
test
gs
jne
loope
rolb
enter
add
gs
xchg
loopne
sahf
and
mov
imul
ret
loop
cmp
stos
test
cli
loopne
jno
cs
nop
test
cmc
mov
jl
xchg
movq
js
xor
xchg
ja
add
pop
aam
andl
add
inc
out
xchg
fxch
adc
add
and
loop
fs
dec
push
add
jnp
out
test
inc
adc
dec
daa
icebp
loope
out
mov
add
jb
jp
mov
iret
add
sbb
adc
add
fnstsw
add
sbb
fcmovnbe
and
sub
xchg
dec
add
inc
pushf
fidivrl
sbb
adc
lds
aad
mov
jmp
sub
popl
sbb
iret
mov
scas
xor
cmp
fadds
jge
sub
add
jmp
ds
jns
xor
cli
jbe
xorb
mov
ss
and
ja
sbb
stos
stos
sbb
mov
push
push
orb
xchg
test
fs
int3
add
mov
jae
mov
push
lock
repz
ret
mov
sub
add
pop
inc
out
xchg
test
or
sbb
sti
adc
xor
jne
fs
mov
xchg
mov
add
add
aad
loope
sub
aaa
fcoml
shll
mov
push
ss
out
in
xchg
pop
cmp
adc
add
lods
out
mov
or
push
mov
popf
push
pop
cmp
sub
push
dec
xlat
jp
push
xor
loopne
test
push
jg
xchg
repz
add
std
pop
imul
jo
mov
in
add
cmovbe
or
sbb
mov
cld
test
jne
cmp
xchg
mov
aam
jae
add
divps
daa
cmc
mov
gs
adc
cmp
xchg
jb
pop
cmp
ficoml
add
pop
out
lds
add
dec
insb
mov
stos
xchg
pop
cli
iret
andb
lods
mov
mov
repz
and
mov
lock
sub
and
ljmp
dec
pushf
out
mov
pop
pop
cs
ss
in
loope
ret
test
mov
or
js
add
lock
dec
mov
movsl
jno
and
call
add
inc
add
pop
mov
mov
in
js
and
fadds
lods
mov
adcl
ss
xchg
outsl
and
les
mov
jnp
mov
imul
add
pop
fcomps
jae
dec
mov
xor
dec
mov
dec
orb
movsl
mov
adc
push
mov
add
inc
jge
sub
adc
test
or
mov
lret
rcl
lcall
lods
adc
movsl
in
jle
pop
das
iret
aaa
loope
xchg
and
rcrl
cld
add
movsl
or
andl
dec
xchg
int3
sub
leave
out
test
shlb
add
stos
sub
xorl
lock
scas
in
testl
das
divb
add
je
sbb
mov
cli
xor
push
mov
cld
cmp
mov
push
fs
sub
add
dec
adc
xchg
pop
hlt
cmp
or
mov
xor
xchg
add
jle
pop
add
adc
adc
inc
sub
jle,pn
flds
into
icebp
jecxz
out
orl
ficomps
xchg
call
int
pop
push
inc
mov
dec
dec
mov
xchg
jle
int3
lahf
cmc
adc
rorb
push
cltd
cli
mov
sarl
mov
fiadds
movsl
cmp
push
out
das
pop
jp
pop
insl
fdiv
sub
test
jae
adc
jl
jnp
mov
inc
cmp
in
push
pop
and
xchg
add
dec
add
xchg
inc
pushf
cs
inc
ret
xchg
and
addb
add
xchg
insl
pop
add
je
insb
pop
xchg
push
lea
icebp
mov
lods
inc
inc
push
lock
ljmp
xchg
gs
sbb
pop
jnp
sub
aas
outsb
jb
push
loopne
iret
jg
das
inc
pop
popa
mov
xor
add
add
dec
sub
jle
mov
outsb
int
mov
lea
loopne
and
cmp
fisttpll
push
loope
mov
arpl
or
mov
nop
in
xorl
lea
mov
rolb
pushf
aam
mov
or
lea
ljmp
xlat
pop
clc
rolb
add
adcb
test
inc
pop
cmovnp
movsl
jmp
scas
movsb
pop
clc
jge
addl
pop
sti
and
mov
sub
ret
and
bound
rcll
jmp
or
stos
orb
xchg
std
outsb
inc
out
jne
loop
ss
stos
add
inc
sub
mov
ss
adc
mov
pushf
dec
data16
lahf
add
push
gs
pusha
xchg
scas
adc
call
and
incl
sbb
pushf
fldl
mov
test
divb
add
jecxz
addr16
xchg
inc
xorl
adc
mov
movsl
inc
add
cmp
in
mov
movl
cmp
inc
addl
sarb
test
cli
adc
mov
sub
bound
adcb
sbb
daa
lea
xor
ljmp
push
mov
push
ret
rorl
lods
dec
cs
sbbb
or
mov
pushf
rclb
pop
ret
outsl
add
push
aam
daa
inc
push
rolb
fnsave
insb
xchg
std
rcrl
add
jae
ss
cmpl
lret
sbb
inc
out
mov
fsubr
mov
or
sarl
hlt
mov
inc
xchg
add
movsb
rcr
out
out
cmpl
lahf
mov
mov
pop
bound
enter
sbb
add
aas
sub
sub
pop
adc
xor
push
mov
pop
add
int3
xchg
add
ficompl
sarl
roll
add
push
gs
mov
add
add
leave
andb
add
adc
mov
fs
dec
cli
push
sbb
push
loope
sub
lds
jne
cmp
test
add
inc
xor
push
outsl
jle
sub
xchg
mov
andl
cmp
xor
add
sbb
idiv
mov
inc
sub
addb
jae
jns
push
cmp
bound
ret
or
add
xor
aaa
fistps
jnp
jg
jmp
jo
test
and
jae
jae
fucomi
mov
sub
sahf
mov
sbb
sub
je
jns
xor
fsubs
aad
scas
add
aas
sub
stos
jne
testb
repnz
push
mov
add
outsw
inc
subb
gs
in
movsl
or
mov
xor
pushf
test
cmpsl
add
hlt
jle,pt
and
add
loop
inc
add
mov
fiaddl
dec
adc
movsl
jle
mov
clc
stos
adc
add
mov
subl
push
add
push
push
dec
adc
adc
jmp
add
shr
data16
pop
pop
pusha
jp
aam
int3
hlt
xchg
in
inc
das
add
nop
pop
fldl
fisubs
add
inc
push
dec
xchg
adc
xchg
add
mov
cli
xchg
fimuls
shl
shrl
int3
inc
paddusb
inc
adc
add
and
stos
clc
gs
mov
in
cmp
xor
mov
out
mov
movsl
add
and
int
repnz
loope
enter
fiaddl
xchg
mul
inc
jne
push
jo
or
pop
add
lcall
dec
adc
sub
add
dec
iret
mov
jle
mov
xchg
sbb
test
jle
testl
das
inc
xchg
dec
inc
xchg
cmpsl
clc
arpl
xchg
xchg
subl
adc
add
xlat
loope
ret
or
cli
dec
and
inc
icebp
int3
ret
jp
outsb
xchg
xchg
add
imul
enter
adc
cwtl
xchg
fidivs
adc
pop
call
popa
add
testb
pushf
dec
test
mov
pop
xor
jmp
lahf
sbb
sub
mov
mov
cmc
mov
cmp
gs
add
mov
jo
pop
aas
into
push
mov
iret
inc
mov
adc
es
xlat
xchg
add
imul
shrl
scas
mov
rcrl
loop
les
ja
and
sti
repz
add
jp
mov
xchg
cmpsb
lds
outsl
addl
fst
ror
cmc
add
sub
shll
mov
cmp
inc
add
push
jle
into
and
cltd
xchg
out
lret
add
push
jb
cmp
xchg
rcrb
mull
into
sub
add
jp
pop
mov
inc
aaa
bound
add
xchg
add
pop
cmpsb
jne
pushl
stc
or
fldt
and
popf
and
lahf
movl
cmp
sbb
mov
add
and
and
lcall
gs
stc
lods
jecxz
in
stos
inc
pop
push
iret
in
fwait
cld
jmp
mov
nop
adc
sahf
stos
test
andl
icebp
lcall
jp
adc
and
gs
inc
dec
pop
mov
int
pop
fnstenv
in
mov
fsubrl
es
inc
pop
xchg
jbe
movb
mov
and
lods
mov
add
lret
add
ffreep
call
imull
dec
push
sbb
dec
sbb
jmp
fists
jne
cwtl
push
mov
mov
jo
cmp
testb
sbb
inc
push
mov
cmp
leave
xor
cmp
enter
and
sarb
test
xchg
cmc
hlt
in
fadds
punpckhwd
lds
lret
es
inc
mov
add
aam
sarl
sbb
inc
mov
dec
cli
dec
dec
inc
dec
icebp
mov
lea
rcrl
lahf
cli
aam
jle
mov
mov
and
mov
js
jb
lret
mul
push
xor
add
in
pop
dec
out
lahf
add
repnz
roll
inc
xor
pop
or
jecxz
loop
cmpl
dec
cmp
inc
loope
mov
mov
push
adc
jmp
psubd
mov
mov
sub
xchg
insl
inc
lahf
adc
jmp
jecxz
fst
fcoml
loope
mov
push
fs
cmpb
iret
repz
jg
mov
clc
add
icebp
and
lahf
mov
mov
aad
pop
stc
jge
or
xchg
jmp
dec
movsl
adc
add
mov
lods
test
int3
inc
aad
out
aam
add
push
jle
and
int3
adcl
adc
sub
xchg
jae
adc
add
cmpsb
jmp
jle
int3
mov
fildl
cmovl
sbb
inc
into
add
xchg
arpl
jg
ljmp
sbb
cld
fisttpl
movl
and
xor
push
xchg
inc
and
mov
call
xchg
out
dec
cmp
mov
fs
mov
add
mov
insb
icebp
add
mov
mov
iret
fsts
stos
add
cli
push
negl
pop
add
or
fdiv
lods
clc
out
aaa
add
cmp
xor
popl
movsl
in
rorl
jmp
push
xor
inc
xor
dec
pusha
and
dec
push
rcll
add
in
add
shll
adc
mov
cmpl
out
loope
enter
add
or
ror
sub
add
jb
xchg
je
test
xor
cld
xchg
test
push
adc
jp
dec
push
mov
lret
ficoml
push
lock
mov
add
sbb
iret
cltd
jmp
aas
or
mov
sub
xchg
sbbb
or
bound
jo
or
cmp
push
add
pop
pop
sub
out
hlt
or
cmp
sub
fsts
cs
ljmp
aad
mov
pop
add
lahf
pop
es
lcall
leave
cmp
cli
jle
pusha
dec
mov
jg
popa
sub
xor
push
hlt
adc
add
sub
insb
loopne
int
push
aad
inc
and
stc
fsubs
cs
mov
or
sbb
pop
test
out
jbe
sub
cmp
push
jle
xchg
xor
fyl2x
fs
add
js
out
pop
sbb
fidivrl
xlat
and
or
jae
inc
add
add
push
or
sbb
xchg
stos
jle
cmp
mov
add
lret
xor
mov
adc
test
jns
pushf
fs
loope
mov
mov
out
inc
roll
call
aam
jp
sti
cmpps
xor
inc
into
cli
in
xchg
mov
add
xor
jae
pop
push
sub
cmpsb
add
pop
mov
push
arpl
jns
cmpsl
std
adc
add
jle
inc
test
push
les
mov
inc
mov
fistpl
sub
or
pusha
ljmp
pop
cmp
movsl
inc
sub
sti
inc
out
mov
pop
in
sbb
cld
add
mov
fdivrs
into
add
add
int3
nop
inc
aad
in
add
pop
mov
aad
inc
aaa
jg
adc
dec
push
add
or
sahf
sbb
mov
pushf
xchg
jns
mov
lds
ret
add
gs
xchg
sub
rolb
leave
rclb
sarl
mov
nop
sub
add
aaa
in
add
push
push
cmp
fadds
inc
fwait
ret
inc
jnp
mov
inc
sbb
test
call
add
das
inc
idiv
lahf
test
mov
test
stc
lret
lock
push
je
push
jl
int3
add
or
mov
sahf
xchg
jecxz
lahf
sbb
add
std
lods
outsl
mov
addb
in
push
lret
adcb
dec
add
rcll
leave
popf
add
lods
jmp
cmp
out
leave
or
mov
insl
pop
add
cmp
jo
test
fsubrp
push
cmpl
cmp
xchg
xchg
inc
sbb
mov
mov
mov
inc
into
movsl
push
mov
in
bound
cltd
or
push
insb
xchg
mov
sti
dec
mov
xchg
scas
jmp
mov
xor
mov
movsl
scas
sub
subb
jp
test
jmp
std
mov
int
rcll
cmpsb
bsf
filds
or
sub
add
cltd
aaa
loop
lahf
ret
add
push
pop
xorl
icebp
adc
jle
cmp
push
mov
sbb
outsl
out
shlb
cmpl
push
add
add
jae
push
xor
movsb
add
add
mov
pusha
dec
jo
outsl
jecxz
add
jp
and
add
add
push
pop
fcoms
mov
pusha
jnp
loopne
test
add
rorb
cmc
int3
insl
lods
in
call
sbb
dec
xchg
add
mov
mov
cmpsl
mov
mov
dec
push
cmpsb
imul
add
mov
jo
push
sub
cld
mov
or
add
adc
cmpsb
dec
and
enter
adc
or
adc
call
cmp
and
movsl
insl
scas
das
jns
cld
inc
rcrl
in
mov
add
xchg
push
repz
and
dec
xchg
add
jp
lds
inc
rol
dec
movsb
aad
pop
add
mov
cltd
push
jle
cwtl
xchg
cmc
insl
fisubl
xor
pop
dec
shlb
sub
inc
test
mov
js
popa
add
mov
xchg
pop
inc
imul
or
jbe
fmull
add
xor
lret
add
mov
and
jns
add
mov
pop
jle,pn
movsl
push
cmp
adc
call
mov
add
orb
push
xchg
es
fwait
push
xchg
add
ljmp
cmp
inc
int3
testl
mov
xor
lret
cmpl
lret
nop
loope
add
mov
jge
sbb
pop
ss
pop
mov
fisttpll
rol
mov
add
shr
test
xorl
adc
add
loope
out
fimuls
add
fisubrl
adc
hlt
cmp
mov
xchg
in
dec
pop
jg
lahf
mov
adc
push
xchg
test
sbb
sbb
addr16
mov
add
cld
lret
mov
call
xrelease
stos
out
pop
add
pushf
out
dec
add
test
fstpl
xor
scas
adc
data16
inc
add
jo
rclb
cmp
push
xor
shr
add
imul
jp
cli
adc
inc
xor
pop
mov
fs
hlt
mov
cmp
add
mov
push
aas
repnz
add
or
repz
daa
mov
imul
dec
fwait
jle
jmp
aad
loope
pop
adc
movsl
out
add
adc
dec
add
cmpsb
sbb
sbb
lcall
jp
pop
shlb
or
bound
into
cmpsb
mov
mov
add
mov
add
outsl
shll
add
out
jns
or
add
mov
fidivrs
adc
xchg
and
mov
nop
add
adc
daa
fisubrs
scas
cltd
mov
cli
push
jmp
das
jge
add
int3
cwtl
mov
rcrb
cmp
mov
push
dec
adc
gs
into
mov
and
in
xchg
mov
test
lret
inc
push
call
push
xor
push
add
xchg
cmp
mov
jns
add
push
push
ss
imul
adc
dec
mov
lds
push
dec
mov
lods
or
mov
add
xor
mov
movsl
hlt
in
rol
lods
fdiv
mov
fcomps
fdivr
mov
ror
out
lock
repz
add
test
jbe
dec
push
sbb
aad
push
adc
cli
mov
jmp
int3
ret
in
and
jle
adc
fsts
mov
call
sub
cmp
and
cmp
pop
xchg
pop
sbb
push
jle
cmp
jmp
cmpb
adc
imul
in
outsb
push
dec
push
sbb
jg
lods
loop
add
ror
push
loop
test
xchg
pop
aaa
adc
fs
xor
leave
add
push
xchg
js
fwait
stos
add
xchg
sarl
xchg
xor
out
sbb
cli
sub
mov
push
jb
shl
loope
cmp
mov
xor
int
mulb
movsl
imul
add
sub
or
inc
pop
xor
add
inc
mul
scas
fiadds
enter
mov
sahf
inc
cmpsb
pop
je
pop
sbb
pushf
dec
jp
enter
push
loope
orb
ficompl
add
xor
fsts
cli
add
out
inc
cmc
out
xor
add
cmp
pop
mov
dec
sbb
push
add
cmp
in
sub
and
dec
cwtl
rorb
sarl
scas
fmul
ret
mov
push
cmpl
repz
xchg
cli
sub
es
lret
mov
adc
and
lds
xor
ret
repz
push
or
add
and
cmp
ljmp
push
xchg
xchg
cld
movsl
ret
mov
sbb
xchg
mov
cs
imul
push
and
shlb
add
out
cmpsb
cmp
ja
add
pop
out
mov
gs
test
sbb
push
dec
lret
xchg
cmpb
sbb
fstl
inc
sbb
adc
add
mov
dec
dec
or
cltd
mov
data16
ds
adc
in
popf
jg
and
iret
nop
addr16
cmp
cmp
sbb
pop
fcmovnu
sbb
rolb
shll
orl
rolb
clc
pusha
int3
adc
cmpb
ret
and
loopne
add
shlb
lret
andb
mov
cmc
ja
sbbl
inc
mov
xchg
jb
movsl
aam
and
les
insl
or
int
mov
mov
xor
aam
ds
pusha
arpl
out
mov
incb
cmp
add
sbb
jo
add
xor
aad
jecxz
cmp
dec
jns
outsl
fwait
add
jb
lahf
push
insb
add
es
and
jle
cltd
rclb
sarl
add
dec
movsl
mov
or
sub
lret
and
popf
and
inc
mov
lock
jge
or
inc
js
ret
sub
dec
pop
loopne
sub
orb
divb
ret
push
xchg
fxch
addl
incb
ljmp
push
jae
xor
mov
xchg
cmp
add
xor
testl
xlat
sbb
cld
and
fldl
sub
dec
mov
sbb
subl
mov
repz
sar
mov
sub
cmpsl
dec
add
add
jae
outsl
push
xchg
add
adc
adc
ret
cli
pop
cmc
jl
mov
sti
pushf
sub
cmp
add
out
cld
inc
loop
xchg
roll
insb
or
ret
adcl
and
xchg
mov
mov
or
push
add
dec
enter
sbb
adc
add
insl
leave
push
pushf
jecxz
adc
xchg
jne
sahf
sub
aad
pusha
in
xor
cmp
push
adc
sub
add
adc
add
lds
jnp
testb
jne
cmpsl
aam
scas
xchg
add
arpl
mov
mov
sarl
aas
loop
pop
xorb
jo
jge
dec
or
jae
mov
pop
in
pop
roll
cmp
outsb
xchg
lahf
mov
cwtl
add
stos
or
scas
mov
and
imul
les
fildll
adc
cli
lret
inc
outsb
sbb
add
pop
and
lahf
loop
add
hlt
sbb
das
xchg
adc
enter
smsw
and
in
mov
adc
clc
in
xchg
addb
fimull
lcall
xchg
outsl
mov
pop
cmc
add
sahf
fwait
enter
xchg
jl
in
out
mov
lods
adc
cltd
sbb
mov
jg
dec
andl
enter
pop
mov
pushf
push
ss
pop
test
or
jle
dec
xor
xchg
jmp
add
sbb
push
mov
dec
roll
rcr
lcall
or
loope
sbb
sbb
test
jb
inc
pop
scas
rep
mov
jge
jae
jae
loope
in
loopne
sahf
cli
sub
int
repnz
mov
out
add
movsl
xor
in
sti
shrl
pop
out
inc
xor
sbb
insb
cmp
fwait
mov
pop
mov
sub
popf
add
xorl
cwtl
pop
shlb
adc
xchg
mov
lret
ret
ja
push
add
pop
outsl
fimull
sub
pop
add
into
push
mov
xor
xchg
shll
gs
cmp
mov
add
xor
push
push
int
jnp
mov
out
add
fildl
lock
sub
dec
jmp
mov
or
lret
dec
add
and
add
or
mov
sahf
add
fucom
int3
add
lds
lods
push
jecxz
adc
dec
dec
loope
cmp
aas
into
in
sbb
ss
mov
sbb
iret
lods
or
jecxz
dec
test
add
push
orl
cmp
aad
add
notb
add
push
dec
arpl
into
lret
push
cmp
movsl
addl
adc
add
xchg
xchg
pop
js
nop
or
sub
jecxz
out
sub
jmp
lcall
jmp
popf
inc
push
out
xchg
or
sbb
aad
sub
aam
mov
push
scas
mov
jge
or
add
or
nop
je
loop
add
xor
inc
bnd
add
mov
jae
cmp
scas
adc
scas
shrl
addb
aam
test
sub
lret
or
ja
cmp
inc
adcl
sub
jp
mov
mov
sbb
jno
mov
rorl
mov
scas
dec
popl
stos
push
add
add
add
dec
xchg
jmp
sti
loop
mov
add
addr16
sbb
add
cs
cmpsb
and
mov
inc
inc
cmp
pop
mov
mov
das
jle
movsl
mov
movsb
mov
cltd
repnz
xor
es
test
dec
jae
push
movsb
call
push
cmp
dec
loop
xchg
inc
or
lea
into
sbbb
add
push
mov
hlt
add
cmpsl
daa
push
xlat
mov
add
shrl
cmc
gs
xor
jp
and
mov
dec
add
mov
fs
xor
add
pusha
cmc
fdivs
and
mov
jle
mov
outsb
lret
test
loop
int
pusha
xor
inc
js
ja
inc
jge
test
cmpsl
popa
lock
push
enter
int
cmp
add
mov
inc
test
or
nop
dec
rcll
push
add
xchg
popf
pop
inc
pop
push
subb
adc
js
rorl
add
cwtl
lahf
pop
sbbl
dec
cwtl
rclb
add
xor
scas
or
mov
orb
add
sub
push
inc
mov
sub
or
clc
jle
pusha
jmp
sbb
cwtl
cltd
add
das
xlat
cmp
js
add
mov
enter
dec
xor
mov
pop
div
add
push
fisubrl
mov
cmp
mov
sbb
subl
push
dec
add
sbb
in
mov
out
lods
rcr
mov
rorl
in
xchg
add
xor
decl
ja
sbb
jge
imul
loopne
xchg
hlt
cmpsl
cmp
mov
sbb
ja
mov
and
cmp
aam
popf
inc
hlt
test
mov
or
cpuid
dec
inc
icebp
pushf
push
lahf
fsubs
addl
mov
iret
and
mov
push
pop
jge
pop
push
add
orl
add
xchg
xchg
sub
shlb
push
add
into
cmp
clc
cwtl
push
cmpl
add
cld
mov
mov
jle
repz
loop
jno
popl
sbbb
subl
stos
out
mov
aad
fiaddl
jl
sub
mov
push
push
mov
xchg
mov
dec
lret
loopne
push
cmp
pop
jo
aaa
or
or
push
shll
out
add
sbb
xor
mov
lods
stos
mov
jle
pop
add
fcoml
mov
pushf
aam
add
dec
pop
icebp
xor
pop
repnz
rclb
xchg
mov
add
cmp
leave
xchg
add
imul
inc
jg
add
mov
les
push
xchg
inc
add
mov
rcll
sbb
jle
clc
mov
xlat
xchg
addl
inc
sbb
stos
test
daa
sbb
lret
les
mov
xlat
inc
idivl
call
and
push
inc
cli
pop
mov
mov
call
movsl
xchg
add
mov
das
jbe
xchg
enter
ja
sbb
sbb
and
iret
mov
sbb
or
ja
les
data16
inc
fisttpll
add
and
add
mov
xchg
jns
cltd
jno
jle
xchg
iret
enter
inc
pop
xor
outsb
add
je
jl
inc
inc
mov
addr16
add
sbb
data16
cmp
adc
xor
mov
cmpsb
dec
jp
mov
cli
shr
push
lcall
jmp
push
inc
xor
cwtl
add
test
cmpsb
xchg
sbb
mov
dec
aad
pop
xor
mov
mov
scas
ljmp
mov
icebp
xchg
call
cs
dec
lea
rcll
xor
out
mov
jb
mov
push
adc
cltd
xchg
testb
pop
add
out
adc
insb
jb
daa
jle
dec
pushf
lcall
adc
lret
push
test
add
pop
add
dec
jge
cmp
in
add
add
mov
movsb
enter
in
pop
mov
mov
in
stos
call
aaa
inc
push
stc
jp
mov
test
call
jne
test
daa
fs
inc
xor
mov
dec
jnp
movsb
mov
sbb
mov
ja
lods
dec
cwtl
jb
lahf
lret
jecxz
ret
movsb
push
pop
jmp
add
mov
add
jg
out
mov
in
mov
ret
push
mulps
dec
adcb
mov
xor
pusha
pop
out
pop
or
test
add
jl
rcll
add
pop
stos
les
add
icebp
add
add
xor
je
lods
mov
add
rcr
or
lahf
add
cmpsl
nop
adc
or
mov
cmpb
mov
push
inc
out
orb
sbb
add
sbb
lret
scas
jle
pop
cmp
insb
idivl
fisttps
ret
mov
push
gs
int3
add
mov
mov
push
ljmp
adc
sbbb
cwtl
mov
inc
inc
dec
add
dec
adc
mov
dec
add
xchg
lret
hlt
and
mov
idivl
scas
mov
push
inc
mov
xor
adc
ret
add
inc
dec
iret
push
into
mov
andb
clc
mov
fwait
xchg
inc
loop
add
pusha
in
sti
test
add
sub
mov
jmp
mov
add
inc
push
xchg
pop
cmp
fxch
add
push
pop
int3
cmp
aam
push
nop
and
out
mov
or
dec
jle
andl
cmp
adc
sub
mulb
call
pop
js
xchg
loope
out
add
xlat
into
push
inc
ret
out
inc
cmpsb
rorl
adc
cmp
data16
mov
xchg
hlt
dec
movsl
xorb
xchg
add
pop
and
cmp
imul
inc
rorl
loope
and
and
inc
and
negb
add
fwait
addr16
adc
enter
add
scas
fsubs
idivb
subb
jb
add
adc
xor
movsb
mov
arpl
xor
adcl
jmp
add
aam
and
xor
pop
xchg
xorl
dec
add
sub
fdivrs
xchg
outsl
mov
xor
add
xchg
stos
sub
pop
add
andb
add
imul
adc
dec
lret
or
repnz
ljmp
and
xchg
ss
sbb
mov
ja
push
out
pop
xchg
xchg
xchg
jle
mov
sub
push
aas
sbb
dec
ds
add
call
mov
sbbb
nop
std
and
in
shrb
subl
xor
pop
leave
loop
xor
mov
fidivrl
aad
push
add
add
sub
out
leave
sbb
xchg
aam
jecxz
and
nop
gs
inc
pop
ja
sbb
cmp
test
mov
cmc
inc
lcall
je
pop
mov
lods
cmpsb
loope
bound
or
movl
inc
int3
lods
repz
push
xlat
pop
daa
sub
and
js
bound
mov
stc
repnz
sbb
or
icebp
stos
xor
movsl
sub
add
clc
sub
enter
dec
jne
pusha
mov
or
test
negl
add
pushf
ret
test
add
xorb
xlat
dec
rcrl
scas
add
dec
rorb
fcomp
xchg
rorl
cmpl
dec
sti
sbb
push
js
roll
scas
pop
into
sub
dec
inc
inc
add
lds
fstl
sahf
shll
or
repz
push
add
sbb
jno
sbb
pop
xchg
ds
pop
jg
add
push
xchg
add
push
sub
pop
loop
test
dec
pop
or
mov
add
sbb
clc
adc
test
out
cmc
jne
mov
adc
ds
stc
sti
inc
imul
fisubl
outsl
mov
xchg
es
fsubs
stos
inc
push
pop
add
out
xchg
xor
pop
mov
fwait
add
jle
cmp
outsb
xorb
jg
gs
shl
testb
mov
push
add
push
sub
inc
and
xchg
in
aad
sbbl
or
test
movsb
jecxz
mov
xor
lahf
mov
insb
out
ror
daa
adc
or
mov
inc
fwait
popa
in
fsubrl
push
xchg
in
mov
js
sar
pop
add
and
movsl
mov
add
outsb
flds
gs
inc
incl
inc
je
inc
mov
daa
mov
scas
stos
lahf
lods
imul
add
out
in
xorb
lret
or
cmp
int3
mov
jecxz
and
pop
sahf
mov
loop
lret
cmpsb
loopne
in
les
mov
add
out
mov
inc
dec
mov
adc
or
ss
cmp
fs
adc
mov
out
pop
mulb
inc
sar
ret
arpl
cli
dec
test
lret
incb
sbb
mov
add
mov
incl
lock
jns
mov
sti
dec
add
test
es
adc
int
sub
mov
out
out
pop
mov
hlt
gs
adc
xchg
cmc
lods
in
add
xlat
push
and
push
pop
popa
insl
push
and
test
cmc
mov
jmp
enter
add
out
jecxz
add
inc
movsl
jbe
sbb
rclb
mov
xor
int3
es
loope
mov
in
or
mov
shll
cmpsb
cli
lcall
daa
push
jg
loope
stos
dec
cmpsl
mov
dec
arpl
sahf
mov
mov
lahf
ficoml
push
add
ja
cmpsb
ds
mov
inc
push
dec
rcl
or
std
jae
pop
addb
into
push
popf
je
imul
cmp
loope
jo
dec
aam
adc
xchg
push
jp
or
xlat
jne
insl
or
enter
inc
add
cmc
imulb
fldcw
mov
push
mov
mov
dec
and
mov
cmpsl
jle
ljmp
addr16
pop
sahf
testb
adc
lahf
jae
sbb
and
or
cmp
sbb
ja
in
or
mov
lea
sbb
fs
add
and
aad
xor
lcall
imul
mov
cmpsb
cmp
mov
cmp
pop
mov
adc
sbb
jp
test
add
add
outsl
iret
repz
test
inc
pop
fisubl
shll
add
ret
in
cmp
call
add
cs
ja
test
movsb
jne
sub
aad
loop
les
push
or
add
jp
push
add
mov
sub
movsl
push
mov
insl
shll
dec
daa
adc
clc
lret
outsl
shrb
add
jbe
mov
outsl
jo
scas
mov
xchg
mov
call
scas
adcb
ret
adc
orl
add
mov
dec
mov
add
pop
out
xor
cmpsb
jmp
mov
pushf
fcoms
sbb
sbb
mov
das
dec
jl
adc
cmc
and
jecxz
jge
clc
insb
push
add
in
dec
cmpsb
jns
clc
cmpsl
pushf
addr16
mov
nop
mov
pop
pop
ss
and
or
add
mov
dec
test
outsb
js
adc
gs
test
cmp
lods
gs
das
add
pop
pop
jg
mov
into
iret
lock
loop
stc
and
mov
mov
gs
sbb
cs
or
xlat
jbe
pop
sbb
mov
lahf
addb
add
xor
xchg
dec
and
out
xchg
je
into
add
inc
cmp
inc
insl
add
xchg
cld
add
shll
push
add
pop
push
addl
aam
mov
orl
adc
test
or
pop
add
pop
mov
in
lret
clc
mov
enter
lcall
mov
dec
add
xchg
push
jmp
loope
fprem
jb
xchg
jae
mov
imul
mov
int3
and
xchg
lds
jle
and
add
outsb
add
xor
jge
ret
movsl
push
jle
push
loope
mov
fcmovnbe
pop
js
scas
ret
push
fisttpll
lahf
jo
add
outsb
xchg
out
add
fldcw
mov
mov
jo
cmp
pop
fwait
push
fiadds
sbb
ljmp
stos
mov
xor
add
ja
add
nop
test
jp
js
movsl
add
movsb
bound
add
adc
pop
add
in
pusha
enter
add
mov
mov
push
add
lret
repnz
outsl
dec
mov
fisttpl
add
rcrl
and
insl
mov
cmp
add
lock
ds
add
sub
push
ret
xchg
adc
mov
xchg
js
cs
jle
mov
adc
xchg
xchg
repz
shl
mov
inc
inc
test
pop
lret
cmp
gs
movsb
add
sbb
jb
sbb
inc
mov
inc
out
jno
and
ds
fildll
mov
adc
fsubl
les
push
cmp
ja
mov
mov
mov
add
add
cmp
and
arpl
add
push
push
aad
test
cmp
test
add
outsb
pop
bound
cmpsb
push
pop
nop
flds
add
push
or
jle
orb
mov
push
add
out
mov
jle
addl
mov
test
inc
fsubrs
mov
jge
dec
dec
cli
mov
pop
sbb
adc
mov
and
mov
or
mov
sbb
sahf
lret
sbb
mov
sub
aad
push
mov
pop
pop
xorb
sti
inc
movsl
mov
cmp
rorl
xor
mov
mov
les
into
test
rolb
out
repz
jmp
add
dec
cltd
sbb
xorps
pop
jp
jp
adc
int
aam
or
sub
cli
lahf
nop
into
add
scas
out
mov
fadds
leave
mov
inc
repz
lret
add
sbb
jnp
and
test
popf
iret
scas
pop
sbb
add
inc
dec
mov
add
cmp
add
cmp
mov
add
stc
add
pop
arpl
lret
repz
inc
add
ss
cs
cld
add
jnp
cltd
in
pop
shl
in
push
jns
add
ss
movsb
adc
xor
int
add
notb
pop
out
cltd
mov
mov
rcl
xor
cmp
xchg
or
adc
jb
movsb
repnz
or
or
push
add
divb
xor
cld
sub
cli
bound
pusha
jnp
mov
push
aad
and
xchg
jns
sub
shl
rcll
ret
jp
push
pop
out
add
adc
xlat
mov
aaa
jmp
add
cmp
xchg
inc
add
aam
push
dec
xor
add
out
lret
lahf
clc
jl
jge
add
lds
addl
test
add
mov
jp
jmp
fwait
cmpl
add
inc
and
pop
xchg
enter
add
hlt
jne
int3
stc
dec
mov
bound
push
jbe
add
daa
jp
or
pop
or
mov
repnz
jbe
xor
add
sub
sub
pop
pop
subb
lods
cwtl
push
fnsave
inc
xchg
iret
xchg
add
push
jecxz
sahf
inc
aad
pusha
lock
mov
and
dec
fcmove
in
jecxz
les
mov
rclb
and
jg
mov
pop
inc
jbe
stc
jp
in
jge
icebp
jne
jb
pop
jle
or
pop
mov
mov
push
sbb
inc
pop
mov
xchg
jo
roll
push
and
test
outsb
push
mov
add
add
xor
cltd
ret
xchg
mov
xor
add
mov
or
fisttpll
lock
mov
bound
int3
sahf
jle,pt
and
mov
dec
mov
je
ficoms
jne
jne
adc
mov
lods
mov
ja
loopne
addl
dec
mov
imul
dec
out
pop
add
mov
setne
add
xchg
or
movsl
data16
cmpl
push
xchg
ja
jle
adc
xchg
sub
push
mov
cmp
fs
popf
cwtl
add
movl
cli
fwait
xchg
sahf
push
cmovp
add
mov
sarl
pop
loope
insb
add
inc
or
clc
inc
cmpsl
add
dec
arpl
pop
lret
outsl
add
cmp
lods
xor
testl
jae
pop
lcall
je
and
push
movsl
mov
cld
jmp
jg
test
inc
pop
mov
imul
dec
xadd
das
bound
into
mov
add
pop
jns
mov
enter
dec
int
inc
lods
ljmp
inc
lret
or
lods
dec
cmp
rorl
imul
push
xchg
pop
or
arpl
out
out
push
mov
out
cmpsl
adcl
xor
dec
rcr
add
jmp
xor
loope
xor
addr16
out
cmpsb
dec
sahf
add
and
xchg
xchg
ljmp
rcl
and
xchg
dec
add
sub
push
jae
ds
or
xchg
xlat
addl
xchg
arpl
mov
sbb
mov
lcall
popf
sbb
adc
enter
inc
push
inc
test
addb
in
or
adc
xor
mov
add
sti
popa
add
cwtl
out
lods
les
bound
fs
inc
int3
and
cmpsl
int
mov
xchg
mov
add
and
add
sbb
ss
xor
fstps
popf
push
icebp
lods
jmp
mov
inc
inc
xchg
add
mov
jg
stos
sub
movsl
add
out
cli
sub
sub
scas
xchg
outsb
adc
mov
rcr
push
mov
xor
shll
add
in
dec
test
les
add
add
jle
popa
mov
cmc
lds
cli
pop
and
dec
adc
pop
shr
add
lret
dec
fsubrs
aaa
pop
ds
ja
shr
pop
add
add
outsl
lret
inc
mov
add
rclb
aam
mov
mov
mov
add
xchg
adc
add
sub
add
mov
xor
inc
loopne
jmp
jecxz
mov
jle,pn
push
dec
dec
mov
fildl
jmp
add
and
cmpsb
stos
add
mov
adc
inc
rep
jg
lcall
or
lahf
xchg
pop
loop
addr16
inc
xchg
and
shrl
add
mov
je
es
add
icebp
ror
push
sahf
add
cli
mov
cwtl
cmc
cmp
mov
add
stos
aaa
lsl
xor
aaa
xchg
and
cltd
xor
inc
in
add
cmc
mul
cmp
jge
loopne
les
scas
jnp
loope
jg
or
icebp
stos
add
sbb
rolb
adc
movb
es
repnz
adc
movsb
in
inc
mov
and
inc
xchg
or
push
mov
je
cmp
push
insl
clc
and
inc
xchg
adc
mov
inc
insl
repz
pop
lods
sbb
lret
mov
jecxz
cmc
das
inc
push
dec
dec
jmp
jb
sahf
mov
sbb
in
add
inc
fbstp
add
push
leave
cwtl
aas
pop
stc
add
add
cli
hlt
sbb
mull
mov
mov
jg
add
xor
mov
incb
cmp
mov
es
add
scas
xchg
sbb
cwtl
push
out
xchg
stos
mov
shl
xchg
mov
sbb
and
movsl
je
mov
add
mov
sub
sbb
fs
pop
ret
shl
rolb
adc
mov
push
add
daa
xchg
push
add
adc
popf
jp
sahf
ret
out
movzbl
cmp
int3
imull
inc
mov
push
add
push
sub
inc
adc
push
dec
sbb
movsb
jmp
mov
add
cmpsl
xchg
cmc
add
das
hlt
jle
repz
ror
sbb
sub
aaa
repnz
add
xor
outsb
in
cli
sti
fwait
loope
lcall
fcmovb
clc
lods
push
pop
push
dec
jle
outsl
pop
lahf
push
rcr
call
bound
cmp
push
adc
fsubs
xchg
jmp
into
aaa
adc
adc
or
mov
sahf
in
roll
push
std
mov
jae
push
sub
xchg
addb
push
out
stos
adc
push
jge
dec
popf
fcoms
or
dec
sub
aaa
adc
sar
add
xchg
xchg
sub
push
pop
xchg
cli
adc
push
aad
jae
mov
sti
divb
mov
sub
fcomi
rclb
fpatan
pop
push
push
add
and
mov
xchg
jno
push
mov
bound
pop
xor
mov
jbe
mov
popa
and
cwtl
mov
push
mov
jnp
mov
push
lods
inc
inc
pop
test
add
xor
scas
sahf
sbb
adc
lock
dec
xor
sub
push
jae
fidivrs
fsub
int
insb
and
push
es
mov
jge
push
xchg
out
rcrl
cmc
out
mov
mov
jae
ss
add
add
jbe
adc
add
xchg
push
adc
sbb
dec
add
xor
cld
jecxz
add
xchg
popf
loope
arpl
mov
xchg
in
adcl
outsb
sbb
les
jle
push
out
call
test
and
push
fisubs
inc
out
inc
mov
outsb
fcomi
scas
add
xor
sbb
dec
dec
inc
inc
cs
xor
or
and
aas
test
jg
push
and
int3
xchg
div
cwtl
in
loope
push
xchg
mov
sub
arpl
jbe
jae
into
lods
pusha
pusha
xchg
test
jle
jge
addr16
jno
jae
mov
pop
add
inc
mov
mov
push
jg
push
and
lea
repnz
das
insl
mov
add
inc
sub
imul
mov
into
jmp
push
sub
loop
mov
loope
mov
pop
xor
shlb
jb
mov
and
and
ret
loop
dec
push
test
mov
inc
imul
aam
sbb
push
xor
cmc
pop
add
mov
outsb
add
js
orl
inc
ljmp
or
push
adc
insb
add
ret
nop
popf
sarb
aad
and
and
pop
lods
mov
bound
mov
mov
mov
fcomip
sbb
sbb
pop
xor
or
jge
ljmp
add
add
es
xor
add
add
cmpb
repz
iret
outsl
aas
call
mov
repz
roll
push
xor
adc
ret
arpl
pop
addb
push
aam
cltd
and
xorb
xor
ja
sbb
mov
in
add
ror
icebp
adc
add
out
xchg
sub
mov
add
data16
dec
and
inc
shrl
add
jmp
inc
mov
scas
cmc
jb
or
loope
and
call
jle
pop
jge
jb
inc
adc
loope
int
add
mov
addl
add
jnp
or
iret
addr16
cwtl
cmc
sub
jle
or
adc
mov
mov
cmc
daa
xchg
cmpsb
jnp
sub
jbe
add
mov
cli
jns
cmp
jno
loopne
pop
add
dec
into
add
enter
and
mov
call
int
xlat
jmp
pop
mov
adc
jne
add
insb
push
add
pop
mov
add
leave
inc
xchg
mov
add
push
pop
outsb
lahf
add
sub
and
add
adc
add
add
cld
jp
lods
add
mov
jb
dec
push
aad
add
push
dec
jp
arpl
and
or
test
sahf
sub
pop
jmp
pushf
mov
jae
dec
fisubrs
xchg
dec
lods
mov
sub
pop
push
icebp
adcb
imul
hlt
mov
cld
ja
ss
sbb
push
arpl
xor
punpckhwd
fcomps
xchg
repz
lods
divl
fiaddl
inc
cmp
cmp
or
xadd
rcl
pop
push
mov
lahf
aad
nop
jle
jl
sti
xor
rol
in
jne
add
shlb
cmc
mov
push
cltd
add
test
aad
orb
jp
cmpxchg
xlat
ja
sub
lds
out
shr
or
cmpsl
jbe
pop
add
filds
jle
outsb
clc
or
test
inc
cmpsl
outsb
mov
add
aas
nop
mov
hlt
add
dec
mov
mov
icebp
or
ret
mov
or
sbb
pop
rorl
sub
call
stos
das
adc
add
mov
idivb
test
les
inc
roll
in
sbb
fdivl
lret
rcll
out
add
xor
mov
cld
loopne
cmp
push
cltd
loop
push
add
mov
adcl
leave
out
adc
xchg
lods
mov
push
movsl
adcl
lret
mov
add
lock
addb
add
adc
fwait
cmp
add
insb
ss
imul
leave
xor
dec
movb
xchg
sub
andb
lret
jb
xor
add
call
push
in
ja
cmpsl
movsb
mov
bound
xchg
int3
ds
jp
mov
xchg
sub
add
push
push
jb
jne
addl
sbbl
lcall
inc
jl
cli
push
scas
inc
xor
adc
test
adcl
xchg
add
sbb
not
dec
mov
mov
in
add
cmpsl
hlt
or
and
arpl
pop
jns
xorl
or
lea
dec
mov
mov
shrl
fs
aaa
rcll
ret
imul
sahf
arpl
das
pop
test
inc
push
and
imul
dec
add
sub
mov
or
add
je
dec
lret
sbb
xchg
pop
pop
pop
pop
sti
add
mov
jno
lret
stos
repnz
xchg
loop,pn
subb
shlb
das
sbb
add
sbb
mov
xor
cli
sub
or
aad
cmp
out
fisubs
daa
mov
xor
push
mov
in
and
mov
insb
sub
loop
cmc
mov
rolb
scas
pop
cmpsl
lahf
cwtl
fildl
add
cmp
jl
push
mov
sbb
add
lret
lea
stos
xchg
add
push
pop
pop
stc
pop
jmp
add
in
sbb
mov
fldt
xor
mov
stos
pop
cli
pop
push
js
mov
cs
mov
imul
cmpsl
sub
mov
nop
xor
lock
inc
stos
inc
cmp
fidivrs
movsb
sbb
xchg
mov
cmp
mov
and
add
lret
nop
imul
cmpsl
addb
adc
or
mov
xor
popf
out
into
add
mov
jbe
add
cmp
mov
pop
mov
add
xor
repnz
or
mov
xchg
mov
add
and
push
pop
adc
add
pop
inc
icebp
lretw
push
addl
mov
mov
out
dec
jb
movsl
jmp
xor
aas
stos
jl
xchg
neg
xchg
add
and
jge
repz
mov
mov
addb
mov
or
daa
mov
in
mov
pop
test
sub
sub
das
loop
shrl
xchg
fldt
add
sub
out
sahf
lcall
enter
mov
pop
or
mov
mov
lret
and
fdivr
jle
pop
fcomps
inc
and
sbb
jp
cmp
loope
lods
ret
adc
in
int3
rol
cmpsl
in
jle
add
ljmp
dec
fdivs
jl
in
xchg
mov
pusha
shl
add
add
sbbb
push
add
loop
cmp
clc
popf
arpl
xor
lods
test
imul
rcll
repnz
pusha
adc
and
gs
jmp
push
pop
icebp
mov
add
pop
xlat
mov
out
jecxz
xor
cmpsb
add
sub
dec
insl
enter
gs
cld
xchg
stc
nop
cmpsl
add
mov
or
popa
movsl
insb
int3
add
mov
push
enter
aad
mov
sub
sub
rcr
test
cmpb
cmp
test
sar
mov
pop
popf
pop
in
jge
push
dec
xor
lcall
test
add
bound
jp
ficoms
ret
add
insl
jbe
jns
cmpsb
sub
je
roll
xchg
push
xchg
push
sbb
mov
inc
inc
pop
add
pop
push
add
add
inc
mov
out
pop
jmp
add
outsl
imul
push
pusha
mov
sbb
adc
es
cmp
pushf
xor
mov
mov
mov
adcl
out
cmp
or
daa
lods
sbb
inc
cli
fsubr
scas
inc
icebp
pop
hlt
stos
pop
in
add
shr
arpl
aad
xorl
xchg
insl
dec
mov
sbb
dec
sbb
or
and
push
jecxz
ds
adc
scas
xchg
add
dec
fisubrl
add
inc
out
call
inc
movsb
out
fdivrp
scas
sarb
sub
add
mov
jg
fsubl
mov
movsl
cmp
add
adc
dec
outsl
add
lods
jg
shrl
clc
cmp
push
add
flds
enter
and
cmp
faddl
jnp
sub
add
inc
test
sub
jne
and
dec
inc
sbb
or
mov
sub
repnz
or
mov
sub
mov
mov
xchg
dec
jo
ss
das
sbbb
test
adc
bound
repnz
pushf
out
sub
inc
cltd
loope
idivb
cmp
cld
popf
adc
or
xor
cli
nop
repz
or
loope
sbb
andl
movsb
add
push
or
add
ror
add
add
or
jnp
xor
mov
lods
add
xchg
je
inc
and
push
repz
pop
ljmp
popf
bound
ror
push
out
mov
lods
int3
in
add
push
adc
jle
call
outsl
test
roll
js
mov
and
and
fstl
inc
adc
lcall
sub
mov
push
in
add
sbb
mov
lods
je
push
pop
dec
mov
push
cmp
pop
push
or
fwait
sub
push
dec
and
and
mov
xchg
sbb
maskmovq
testl
cmp
and
inc
add
in
ret
aaa
xor
lods
mov
sbb
addr16
mov
mov
subl
fcoms
loope
inc
repnz
mov
add
cmpsb
add
push
inc
pop
cmp
add
xchg
arpl
jnp
inc
pushf
and
push
das
mov
xor
and
lods
sub
repnz
flds
adc
ret
jae
pop
gs
push
mov
and
mov
movb
rolb
xor
sbb
cwtl
filds
cmp
int3
int
push
pop
push
jbe
or
or
add
adc
loop
mov
cwtl
mov
rcll
stos
outsl
xlat
cmp
add
and
push
xchg
adc
dec
xchg
ret
xchg
add
adc
push
movsl
daa
and
pop
pop
mov
add
jecxz
or
pop
aad
cld
in
and
js
mov
mov
mov
xlat
adc
xchg
sar
das
pop
cli
inc
dec
mov
movsb
add
dec
ss
pop
out
in
lds
in
enter
insb
ret
cmpsl
jp
aaa
mov
push
add
cltd
popa
and
in
ljmp
mov
jmp
add
shlb
and
push
dec
subb
add
scas
sub
add
test
iret
jne
shll
jge
pop
jl
mov
jb
and
add
pop
sub
jle
cmp
rcrl
pop
push
pop
repz
sub
mov
push
fldl
clc
test
movsl
mov
testl
push
dec
ret
pushf
loop
inc
mov
add
or
or
jp
add
mov
gs
xor
mov
mov
mov
rcll
fsubrs
das
addl
scas
add
push
cmpsl
adc
mov
add
pop
ret
gs
lods
add
xchg
cmp
mov
adc
sub
mov
add
sub
and
inc
arpl
add
jl
add
mov
mov
popf
add
clc
jmp
lea
rcll
popa
sub
add
push
jp
xchg
in
sub
fstl
adc
jmp
lcall
xchg
xor
sub
add
iret
xchg
dec
jae
cli
je
lret
xlat
pop
xor
xor
add
dec
adc
push
jno
mov
and
lock
imul
icebp
and
dec
add
ret
xor
push
adcl
pop
jecxz
cs
das
mov
jmp
sti
mov
ret
lcall
pop
dec
loope
ss
mov
test
mov
and
in
pop
add
xlat
jnp
xchg
jg
add
cmp
inc
in
inc
push
nop
leave
inc
clc
xor
pop
repnz
mov
push
pop
lea
sbb
add
push
gs
loopne
jp
jo
and
cmp
sub
ret
adc
push
pop
xchg
jmp
loope
jne
movsb
xor
inc
cld
cltd
out
fstl
mov
nop
cmpsl
bound
add
lea
pop
orb
or
or
stos
cld
ss
fldl
add
jp
int3
add
sbb
add
mov
cmp
push
jle
out
mov
es
add
inc
mov
add
mov
enter
jnp
cli
lods
sub
add
cwtl
lock
das
popa
push
xchg
rolb
fprem1
jp
pop
sub
adc
aad
mov
rolb
sbb
out
arpl
int3
pop
mov
loope
add
inc
push
inc
mov
add
gs
mov
or
mov
lods
add
test
stos
jae
push
jge
ja
inc
rcl
aad
add
repnz
and
jge
add
ret
lret
xor
je
pop
or
mov
xchg
push
ret
fsubr
jp
mov
cmpsl
push
mov
push
lods
jle
testl
mov
sub
adc
cltd
cmp
decl
enter
shl
pop
movb
and
setne
call
or
stos
lods
lods
add
push
mov
pop
push
add
add
cmp
and
pop
inc
inc
add
pop
in
in
push
mov
mov
fsubs
testb
sub
pandn
mov
nop
pop
add
adc
xorl
test
popf
mov
add
lret
push
xlat
push
insb
or
clc
ficoml
pop
jge
popa
add
add
popf
repz
cmp
dec
test
pop
stos
scas
cmpl
sub
mov
add
in
jnp
push
inc
jb
add
fcoms
or
out
lret
jmp
pop
movsl
jp
xlat
in
daa
jge
lahf
pop
add
pusha
xchg
lods
or
jmp
rcr
xlat
add
inc
mov
sub
lahf
lea
add
push
adc
insb
jmp
pushl
or
cmpsl
out
sbb
jmp
scas
aam
mov
lea
mov
sar
sarl
xor
cld
dec
pop
pop
add
push
mov
jl
es
stos
push
movsl
jge
into
mov
shll
dec
push
ljmp
insl
mov
jmp
adc
xchg
push
shll
add
pop
and
xor
sub
cmp
daa
out
stos
sub
pop
dec
sub
sub
test
jle
int3
cmp
dec
dec
repz
hlt
ljmp
cmpl
jo
and
mov
add
div
fiadds
iret
enter
mov
add
and
fiaddl
rolb
sub
xchg
aam
add
scas
mov
cmpl
movsl
jns
jmp
jb
xor
clc
mov
mov
les
sbbl
pop
leave
add
dec
pop
repz
xchg
jle
xor
inc
and
mov
loope
test
js
popa
mov
pop
pop
out
fsubs
add
jecxz
add
aad
cs
fsincos
dec
hlt
sahf
dec
push
inc
add
rcrb
mov
loop
sbb
iret
dec
and
mov
add
mov
and
fdivs
std
xchg
pop
mov
test
adc
mov
stos
movsb
dec
xchg
out
add
test
jecxz
xor
pop
adc
mov
lods
or
push
xorl
mov
adc
cld
test
je
loopne
pop
adc
adc
mov
cld
mov
mov
cli
inc
inc
mov
test
aas
mov
mov
add
repz
js
mov
or
xchg
outsb
jae
mov
jo
inc
std
jecxz
xlat
inc
cltd
pusha
frstor
rcrl
adcl
pop
mov
xor
cmp
repnz
lods
sarb
pop
dec
stc
rolb
add
in
mov
push
stc
cmp
inc
xchg
add
bound
aad
lcall
xchg
add
mov
jle
in
xor
add
inc
in
or
rcrl
cmp
bound
mov
or
sub
jp
mov
pushf
shrl
cmp
cli
mov
mov
adc
mov
fldl
sub
mov
mov
mov
in
sbb
cli
add
cmp
add
sub
es
ret
cmp
cmc
xchg
dec
xchg
and
cmp
scas
mov
repnz
test
lock
test
pop
iret
inc
pushf
test
cmc
pop
jecxz
or
xor
pop
cmp
lret
fiaddl
xchg
adc
out
cmp
push
cmp
or
arpl
fidivl
call
stos
lods
mov
add
mov
xorb
mov
xchg
add
sbb
lret
xor
sub
rcl
adc
pop
movl
mov
test
xor
ret
add
or
ss
sbb
add
sbb
and
sbb
pop
pop
imul
sub
subl
mov
out
sti
lods
in
add
mov
sbb
dec
jbe
or
cli
pop
jp
icebp
cld
inc
mov
lods
add
jle
sbb
loop
repnz
lret
inc
jae
rorl
lock
icebp
or
add
pop
and
stos
jmp
add
sub
repnz
cmpsl
adc
or
cld
lret
subl
jl
es
cwtl
inc
mov
testl
and
mov
stos
ret
lock
ds
repz
out
jno
popa
dec
add
push
and
push
inc
xchg
add
jnp
out
jo
frstor
in
inc
add
sbb
ds
jmp
es
lods
mov
std
pop
lods
dec
adc
adc
xchg
push
jle
jle
inc
mov
in
adc
jge
sahf
mov
add
fstl
mov
jmp
lods
add
cmc
inc
push
rep
sbbb
lcall
data16
mov
xor
loopne
insb
and
call
push
inc
add
dec
and
mov
or
pushf
lahf
repnz
xor
mov
inc
fucom
fs
add
aaa
and
add
cmp
sahf
pop
lods
aaa
repz
ficoml
aam
ja
xor
add
dec
push
out
imul
or
pusha
jp
sub
out
cmpl
shl
mov
popa
mov
or
lret
out
push
mov
add
gs
xchg
push
mov
mov
add
mov
mov
xchg
shll
movsb
adcl
jecxz
inc
or
mov
or
test
cli
push
add
pop
adc
loope
add
and
add
or
dec
ret
pop
sbbl
push
icebp
loop
add
pusha
jae
add
dec
add
cltd
fsubl
icebp
cs
xlat
cmp
pop
and
mov
enter
or
lret
xlat
mov
hlt
or
bound
mov
out
xor
dec
push
push
sbb
lods
add
sub
outsl
add
das
sbb
push
add
xor
jnp
imul
dec
gs
inc
mov
mov
das
and
mov
push
jns
jo
inc
nop
sar
cs
dec
repz
jle
sbb
xchg
inc
les
movsl
add
leave
lret
imul
mov
ret
mov
add
xor
lods
mov
pop
insb
jae
xor
pop
jmp
pop
fsubs
testb
jg
into
xchg
mov
dec
inc
popa
fadds
insb
mov
adc
out
out
add
pop
add
adc
push
test
inc
int3
push
leave
inc
push
testb
mov
jae
xor
rcll
push
mov
and
add
ja
cli
pop
js
loope
repnz
aas
aam
add
add
push
cld
fwait
sbb
inc
js
xor
and
scas
sbb
jp
repz
sbb
int
lret
pop
cmpb
xchg
fwait
mov
mov
sbb
xchg
xorb
jae,pt
outsl
pop
add
xchg
aas
mov
bound
sti
mov
mov
add
movsb
mov
mov
jnp
loope
add
xor
adc
in
add
xchg
inc
cs
mov
leave
add
outsb
mov
cmp
cltd
roll
pop
or
inc
inc
jmp
add
cmp
jle
pop
cwtl
pop
jmp
inc
xor
jo
mov
rcll
scas
clc
lahf
xlat
mov
mov
imul
mov
in
inc
lret
pop
push
inc
mov
push
aaa
and
pop
dec
add
rcrb
push
adc
jle
xchg
hlt
loopne
pop
sbb
mov
cmp
push
or
jecxz
test
xchg
adc
shrb
pop
add
adc
adc
aas
add
cld
sbb
repnz
xchg
xchg
pusha
cld
xchg
xchg
xor
mov
adc
inc
enter
sbbl
lret
shlb
pop
rcl
adc
sbb
or
stos
out
add
adc
pop
insb
les
and
imul
out
pop
jno
repnz
loope
pcmpgtd
leave
in
mov
ljmp
sub
push
lahf
mov
bound
mov
jns
adc
fsubl
int3
pop
add
rolb
arpl
ret
lret
add
dec
dec
aaa
arpl
sbb
rorb
jmp
mov
mov
test
es
or
mov
mov
xor
push
mov
pop
xchg
and
xchg
sbb
pop
push
mov
ret
mov
movl
inc
rclb
clc
ret
sub
cmpl
push
inc
roll
xchg
adcl
test
mov
sarl
addr16
push
in
hlt
pop
add
pop
and
stos
sbb
jae
insl
outsb
and
mov
pop
adc
mov
xchg
inc
movsb
add
cli
mov
mov
add
bound
ds
add
cmp
dec
or
sbb
out
stos
mov
andb
scas
jl
mov
jne
sub
fstl
lahf
sub
idivl
push
add
push
inc
xor
add
sbb
cmpsb
int
loop
cmp
or
push
xchg
rorl
or
imul
loope
xor
ja
pop
cmp
call
and
mov
sbb
add
dec
cli
ret
cltd
sbb
dec
cli
inc
dec
ffree
icebp
lods
js
dec
sahf
cli
ss
decb
clc
dec
add
sbb
inc
adc
aam
add
push
imul
les
test
aaa
cmpsb
popl
jp
push
lret
add
pop
rcrb
fdivp
adc
jnp
push
jnp
mov
leave
pop
pop
adc
mov
scas
daa
icebp
mov
add
mov
xlat
clc
add
add
xchg
stc
sub
mov
pop
add
add
cmp
inc
mov
xor
fsubs
repnz
add
or
pusha
jns
add
movsb
adc
sbb
in
insb
out
int
jmp
xchg
add
sar
or
add
pop
and
sbb
and
adc
ljmp
rclb
sahf
add
js
loop
bound
outsb
adc
mov
push
add
imul
add
jl
movsl
test
scas
cli
imul
add
mov
cmp
and
adc
add
adc
sub
mov
cmpsb
add
fcmovnu
adc
das
sbb
push
ss
ret
xor
cmpsl
nop
add
jge
sbb
xorb
popf
mov
adc
bnd
shl
dec
pop
adc
xchg
inc
mov
inc
push
movsb
mov
sbb
add
cmp
cld
fildl
mov
xchg
sbb
decb
mov
incl
hlt
gs
push
ss
and
test
sbb
mov
addr16
popa
bnd
imul
rolb
xchg
inc
fwait
repnz
je
add
ret
fdivrs
mov
mov
roll
rol
push
cmpsl
and
in
sub
bound
mov
add
dec
test
jle
enter
scas
xor
mov
pop
test
mov
aad
in
add
sbb
fnstsw
sub
outsb
or
mov
adc
loopne
jle
mov
add
jmp
mov
cmp
dec
add
adc
std
push
aas
mov
in
int3
pop
dec
aam
stc
adcl
gs
dec
jae
jo
rcll
rorl
inc
repnz
scas
popf
or
cmp
clc
sbb
sub
popl
push
inc
adc
and
or
push
dec
xor
sbb
pop
sahf
jmp
and
jns
mov
bound
inc
add
adc
enter
mov
add
nop
add
loope
adc
and
sbb
add
fimuls
loop
andb
xor
and
stc
shlb
movsb
addb
inc
xchg
imulb
inc
add
shrl
xchg
mov
add
jnp
pushf
test
lds
out
pop
xchg
and
inc
mov
push
sub
dec
addr16
adc
pop
aad
or
in
stc
jge
and
and
jecxz
mov
sbb
popa
lret
mov
lahf
sar
inc
fcmovne
mov
inc
inc
cmpsl
dec
movl
xchg
iret
fidivs
pop
mov
rcl
sub
lods
mov
pop
repnz
add
or
xchg
mov
pop
dec
add
je
jnp
scas
lods
cli
rcr
inc
shll
dec
or
inc
mov
ret
mov
add
lret
cmpsb
adc
subl
das
call
adc
shll
in
and
in
pop
mov
lret
or
mov
dec
daa
bnd
add
xchg
imul
adc
push
push
xchg
dec
jnp
imul
jns
inc
fmul
in
adc
add
int3
xor
es
cmpsb
and
out
vminsd
inc
movsl
add
mov
pop
cwtl
pop
iret
xchg
cltd
mov
setp
cmovbe
jp
push
sahf
mov
pop
repz
jl
imul
pop
insl
loope
and
push
lcall
add
fs
repz
pop
sub
xchg
xor
mov
dec
jle
mov
xorl
mov
pop
jle
dec
jmp
js
mov
mov
mov
adc
mov
xor
cwtl
insb
sbb
xorb
fsubrs
add
ficoml
insb
xchg
or
add
and
adc
jae
pop
popf
ret
and
xor
in
pop
dec
sti
sub
fdivs
xor
loopne
aad
pop
push
movsl
push
int3
mov
sbb
xchg
adc
xor
pushf
ds
shrl
test
add
xchg
addr16
hlt
xor
add
pop
pop
cmp
adc
pop
ficomps
test
and
xchg
push
sti
loop
mov
cmpb
dec
xor
aad
aas
rcll
stos
push
notl
add
mov
add
sbb
mov
lahf
test
mov
aam
pushf
jl
addr16
arpl
inc
mov
adc
add
push
adc
das
fs
sub
out
add
jbe
inc
fimull
add
mov
add
jne
insl
insb
xchg
xor
adc
push
aaa
mov
aam
cmpsb
mov
jne
cmpl
cli
add
adc
out
push
push
test
sub
xchg
in
fstpl
iret
push
cli
add
sub
and
jle
dec
cmp
add
add
out
and
mov
inc
inc
je
mov
jb
cmp
xchg
and
mov
icebp
mov
int
add
js
bound
xor
mov
sbb
add
mov
jl
aad
mov
xorl
add
aaa
and
ja
pop
fldl
mov
loop
or
test
inc
add
add
mov
enter
mov
notl
insb
scas
in
dec
movb
mov
popa
pop
sbb
jle
or
mov
add
orb
and
orl
pop
adc
sbb
movsb
repz
adc
cmp
inc
testb
test
je
xchg
push
xchg
flds
sub
pop
dec
add
pop
mov
xor
movsb
mov
aad
sub
andb
jae
inc
push
popa
pusha
int3
outsl
aaa
mov
test
out
fidivs
mov
hlt
fstps
loop
add
mov
lret
stos
xchg
adc
aam
pop
add
popf
icebp
mov
add
sub
loopne
add
pop
add
pop
xor
add
arpl
or
cli
fstps
int3
dec
inc
jl
roll
adc
push
add
insb
jno
push
push
mov
fcmovb
loope
or
add
sarb
jbe
cmp
mov
cmp
pop
xchg
fwait
push
sarb
sub
or
add
imul
inc
jle
pop
mov
jnp
add
add
into
push
mov
orps
pushf
rorl
std
add
cmc
fistpll
mov
jecxz
sbb
dec
add
cmpsb
ds
sub
pop
fistpl
aaa
mov
mov
xor
cmp
scas
popl
xchg
inc
cmp
mov
inc
in
incl
sti
pop
popa
adc
out
jb
inc
test
add
icebp
add
or
in
inc
subb
sbb
jmp
popf
cltd
add
cmp
push
mov
adc
add
dec
or
and
imul
dec
sbb
dec
lods
sahf
or
jne
test
sti
loop
sub
xchg
mov
xchg
movsb
push
shll
inc
insb
add
in
fists
fimuls
add
mov
xorl
dec
add
arpl
rsqrtps
inc
orb
pop
and
cmpsb
adc
add
and
mov
adc
add
mov
add
in
and
and
ss
addl
lea
pop
loope
sub
arpl
xchg
push
adc
lret
pop
mov
stos
out
sbb
repnz
and
pop
mov
mov
mov
jle
xchg
sub
cmp
ss
inc
xchg
add
and
add
fnsave
xchg
incb
dec
mov
add
jb
pop
dec
bound
add
jl
pop
inc
dec
add
mov
push
jle
xlat
out
insb
cmp
fnstcw
dec
cmp
cmp
jle
push
popf
ret
or
and
or
and
add
rcl
pusha
add
sbb
mov
xchg
divl
cltd
sbb
movsl
leave
adc
aam
push
jmp
out
cld
test
dec
dec
inc
xor
fs
xchg
mov
or
sub
mov
add
int
xor
jo
bnd
jb
mov
cmovnp
in
dec
mov
add
sbb
xchg
push
sub
mov
outsl
pop
push
jg
in
sarl
std
add
dec
mov
mov
cwtl
xor
xchg
rorl
cmp
jle
push
mov
je
inc
enter
add
icebp
adc
add
xchg
or
xchg
add
pop
fcomps
mov
and
add
pop
fwait
je
push
inc
test
aam
inc
fistpl
jge
pop
stos
sar
out
add
mov
lock
or
fdivrl
push
lcall
scas
sarl
andb
test
mov
cmp
clc
out
das
sub
cli
add
xlat
fstpl
push
sbb
out
add
or
sahf
add
sbb
das
add
mov
xchg
add
gs
jp
ss
push
cld
cmp
dec
idiv
aad
inc
cmp
rcrl
xchg
stos
shrl
jbe
pop
mov
and
pop
adc
adc
stc
xor
lods
sahf
jg
bound
addl
loopne
mov
ficoml
cmpl
ja
xchg
ret
lcall
popf
inc
mov
mov
rolb
sub
popf
jecxz
add
jae
cmp
push
xchg
fcomps
scas
ss
push
call
lea
dec
jae
cmp
pushf
sarl
frstor
jns
in
add
mov
into
add
push
pop
scas
lods
inc
dec
test
inc
in
cmp
jle
sbb
dec
icebp
push
lods
mov
jno
fcmovne
shl
push
mov
mov
ret
movsb
jmp
repnz
add
outsb
daa
or
cmc
repnz
pop
pop
cli
js
pop
push
mov
smsw
dec
xchg
clc
dec
push
jg
add
sbb
inc
or
and
cwtl
add
mov
test
out
dec
icebp
orb
call
adcl
cmp
es
xchg
inc
ljmp
or
add
aad
stc
inc
dec
inc
rcl
cmpsb
xor
lea
test
mov
add
js,pt
cwtl
and
icebp
fdivrl
add
aad
mov
fstpl
mov
add
cltd
cli
aas
je
jo
rolb
ja
or
jl
add
adc
insl
call
cs
in
cmpl
repnz
jg
shll
sarl
sbb
ror
stos
rcll
icebp
push
inc
loope
jae
mov
mov
test
jmp
roll
push
movsl
push
stos
mov
add
or
mov
sarl
or
ja
iret
fs
pop
xchg
add
add
dec
adc
jle
mov
mov
rclb
sub
sbbl
cwtl
sbb
pushf
lret
enter
add
push
push
push
sarb
cmpl
cltd
xor
add
add
adc
adc
adc
test
mov
push
ss
jecxz
push
jae
repz
outsb
dec
es
push
add
inc
bnd
pop
xchg
jle
scas
jecxz
jmp
popf
pop
pop
sub
clc
ret
or
xor
pop
or
sbbb
cmp
mov
out
lahf
sub
subl
push
add
or
pop
xchg
mov
add
nop
xor
test
loope
fdivrs
mov
pop
sub
add
movsb
add
push
cmp
sub
shrl
movsl
mov
jo
sahf
lahf
jne
loop
leave
jecxz
xorb
add
mov
enter
repz
add
cld
cmpsl
jle
adc
stc
neg
in
mov
into
loop
sbbl
push
add
jle
out
adc
pop
mov
insb
add
ror
in
pand
add
or
lods
subb
cltd
cltd
inc
push
jl
mov
or
jb
add
sub
movsl
aaa
lods
into
addr16
cli
repnz
scas
ja
insb
andl
enter
data16
add
and
mov
adc
xchg
xor
cli
test
add
mov
xchg
aad
ljmp
out
push
or
int3
push
insl
mov
test
pop
push
addr16
sbb
in
outsb
add
cld
fildl
and
ss
subl
cmp
rcll
add
outsl
mov
xchg
jecxz
call
jbe
xor
ljmp
stos
popa
push
out
testb
add
or
loop
add
mov
sub
scas
push
mov
jo
clc
popf
xlat
lds
dec
shll
das
cli
in
jp
xchg
and
popa
sub
icebp
cmp
or
pop
add
adc
inc
jne
mov
push
mov
scas
add
cmpsb
loop
pop
or
mov
mov
ret
cmp
movl
testb
enter
dec
push
out
xchg
mov
lea
dec
mov
fbstp
mov
les
xor
lods
fs
and
or
inc
mov
adc
call
rorl
mov
outsl
jecxz
adc
add
adc
fcomps
sbb
or
inc
jne
fs
and
mov
lds
add
mov
loopne
push
mov
imul
enter
test
sub
push
aad
mov
adc
and
cmpsl
lea
cmp
cmp
mov
add
fnsave
movsl
add
and
jle
xor
ds
push
outsl
jle
shlb
sbb
add
test
loopne
push
mov
mov
push
and
lret
jb
jecxz
loop
sub
mov
inc
mov
add
sti
mov
shlb
push
mov
push
push
orl
xchg
add
cmpsb
mov
mov
jp
rcrl
add
dec
ret
xchg
outsl
rclb
in
sahf
mov
je
add
xor
test
sbb
inc
mov
add
adc
repz
dec
xchg
loop
xor
mov
movsb
add
xlat
fistpll
pusha
incl
aaa
je
shrb
cmp
add
adc
jbe
xchg
fs
push
push
rorl
stos
mov
lods
lret
addb
sub
jae
xlat
clc
cmc
add
addr16
out
jnp
inc
add
ret
add
out
fiaddl
and
dec
shrb
std
add
cmp
xchg
push
xchg
and
sub
enter
ds
leave
lods
in
fwait
das
out
out
add
dec
mov
pop
push
dec
hlt
cmp
and
ret
loope
mov
pop
out
ljmp
xchg
pop
cmp
add
adc
push
call
add
adc
inc
roll
repnz
push
nop
sub
insl
jno
dec
dec
repz
mov
loop
dec
xchg
leave
ret
test
mov
xchg
into
adc
outsl
dec
push
inc
xchg
pusha
sbb
sub
shll
mov
mov
jg
push
or
mov
stos
jle
add
xorb
add
mov
xorb
sbb
test
adc
push
ljmp
sub
mov
shrb
jae
cmp
and
dec
jmp
sbb
in
sub
dec
push
jle
jnp
shr
xchg
inc
push
jecxz
inc
mov
mov
sub
add
mov
push
push
test
movsl
add
xor
fnsave
in
sarl
cwtl
sahf
pop
jle
mov
out
push
ss
lret
mov
xchg
adc
pushf
daa
jecxz
and
cmp
fwait
rcll
inc
mov
mov
repz
fisubrs
and
add
pop
in
pop
pop
lock
mov
lret
testb
mov
dec
js
imul
adc
sub
popf
jge
pop
out
pop
cmp
sti
roll
stc
int
les
push
movsl
mov
sahf
add
add
lods
sbb
mov
and
leave
or
cmpsb
mov
hlt
inc
orb
dec
call
mov
lret
fsubl
mov
adc
sahf
mov
les
shr
add
jmp
sub
int
mov
bound
mov
call
in
add
sti
bound
jl
add
mov
sub
add
sbb
fs
mov
mov
outsl
dec
dec
sub
stc
push
push
imul
xorb
in
sub
arpl
outsb
insb
pop
add
mov
mov
add
repnz
adc
cmpsb
push
dec
dec
mov
jns
add
xor
add
push
cwtl
mov
test
adc
ljmp
mov
or
test
pop
and
xchg
adc
jno
sbb
shll
mov
inc
xchg
xor
xchg
out
xor
mov
mov
and
aad
push
mov
add
gs
aaa
xchg
outsl
add
cwtl
push
insl
out
lds
aam
int3
pop
sbb
mov
adc
es
push
sbb
mov
cmp
test
shrl
sbb
es
sub
cltd
xor
xchg
fs
mov
sub
pop
add
or
in
mov
addr16
repnz
das
popa
out
ljmp
pushf
mov
jno
dec
xchg
adc
and
and
sub
icebp
mov
jl
repnz
cmc
adc
inc
pop
loope
sub
push
rcll
shll
aas
sti
add
mov
enter
in
add
lods
leave
mov
pop
pop
and
test
xchg
in
or
jge
xchg
fnstcw
pop
push
lods
lock
insl
repz
shl
dec
sti
sub
orl
mov
fldenv
sbb
xchg
cs
enter
mov
push
fistps
add
imul
add
xlat
sti
adcl
in
xchg
test
xchg
or
jns
pop
das
mov
mov
jae
shlb
iret
add
push
or
or
test
push
xor
frndint
sti
pop
mov
bnd
sub
ja
int3
shll
cs
cmp
jnp
cmpl
lcall
lahf
xor
add
pop
mov
arpl
add
sub
lret
or
lret
add
inc
push
mov
lds
int
add
inc
inc
xchg
aad
or
add
movsl
pop
adc
dec
mov
fmull
jg
roll
push
dec
or
shrb
adc
testl
inc
loopne
jo
out
xchg
imul
lret
mov
loop
inc
sbbl
stc
leave
dec
out
jns
mov
jmp
inc
in
fdivp
jge
loope
jbe
inc
fidivrs
orl
out
jle
add
cmpsl
add
repz
add
mov
cld
pop
or
gs
stc
es
mov
pop
pusha
lock
adc
pop
cltd
lods
mov
out
fidivs
cmp
in
stc
xchg
cmp
outsb
mov
incl
push
mov
bound
jp
add
out
out
cmpl
push
incl
cmp
lock
icebp
jne
jno
cmpsb
jns
into
push
test
jmp
mov
add
push
rorb
call
jl
idiv
lahf
xchg
test
adc
cld
cmc
clc
add
jb
outsl
cmpl
sbb
fwait
lar
xorb
dec
dec
dec
movl
lea
dec
dec
jns
aas
repz
mov
negb
rcrl
dec
dec
mov
jge
pusha
sbb
movsb
or
push
or
ljmp
jge
in
push
jno
out
std
mov
loope
mov
adc
jecxz
cmc
gs
cld
in
mov
imul
lods
add
mov
pop
fcom
jne
or
and
dec
ljmp
sub
dec
jge
jle
inc
movb
stc
ret
out
stc
scas
stc
cli
nop
stos
adc
mov
std
faddl
gs
imul
xchg
jmp
add
fcoms
jl
cmp
leave
lods
jg
movsl
pop
lret
lock
mov
jle
fidivrs
jle
jle
jle
ljmp
push
xchg
insl
sbb
cmpl
std
faddp
sbb
lret
fisttps
pop
and
cs
aad
pop
shl
cmp
cli
or
hlt
nop
addr16
cmovle
nop
cmp
lahf
push
insb
jge
jle
data16
cmc
sahf
ret
addb
mov
add
mov
cmp
jle
jb
jmp
std
push
pusha
dec
dec
lahf
push
lret
sar
xorl
and
inc
cmpb
add
sbb
xchg
jns
cli
popf
out
cmp
jge
jl
int
cmp
jg
lret
push
jg
and
rol
mov
insb
clc
jo
bound
inc
push
and
ljmp
outsl
cld
mov
jle
fldcw
jmp
js
sub
imul
es
cmc
mov
add
cmp
clc
push
shrb
mov
push
inc
sti
sahf
icebp
pusha
push
leave
fcmovnu
shl
arpl
test
add
cmpsl
push
mov
movsl
mov
icebp
aad
mov
ljmp
xlat
loop
arpl
mov
adc
in
in
fcmovb
jo
sbbb
cmp
add
cmp
icebp
jnp
sti
jns
pushf
lock
jl
add
movsb
lea
das
stc
xchg
adc
ja
stc
stos
jle
adc
shll
cmp
shlb
jno
adc
shrb
nop
mov
stc
sbb
push
call
test
push
dec
jp
stc
leave
dec
outsb
hlt
icebp
jp
popa
stc
pop
leave
repnz
adc
dec
push
jp
leave
adc
incl
mov
sbb
mov
stc
mov
mov
in
pop
xorb
icebp
jns
shll
sub
nop
mov
inc
adc
repnz
or
stc
push
mov
loopne
data16
sti
jge
rorb
xor
movsb
pop
cmp
jg
jle
cmpl
in
jl
stc
jecxz
aad
loope
jl
mov
push
cmp
popf
jo
imul
imul
xor
call
or
and
sbbl
daa
js
or
addb
fldl2e
and
cmp
clc
out
cmpsb
sub
jl
dec
adc
pop
loopnew
sti
mov
jmp
add
mov
jl
ret
jno
or
cld
mov
mov
jge
lock
popa
std
inc
stos
inc
push
mov
adc
inc
lock
xor
cmpsb
andb
lcall
out
or
es
sbb
mov
jne
hlt
out
add
xchg
adc
pusha
insl
in
lahf
adcl
std
jnp
jb
outsl
repnz
lods
sti
rorb
in
aam
repnz
jb
and
cli
jmp
fst
mov
jb
cmc
clc
imull
xchg
lock
add
jns
insb
enter
cmp
mov
gs
mov
jp
xchg
ja
xchg
in
sub
testb
push
std
call
fidivrs
and
not
fsubp
cmp
lods
push
insb
mov
jg
fidivrl
cli
adc
icebp
jnp
enter
jo
imul
jl
xchg
or
outsl
jecxz
scas
call
das
scas
pop
jp
std
fadds
dec
hlt
jle
js
mov
addl
js
divl
aam
fs
icebp
jg
lods
aaa
pushf
jmp
pop
xor
test
std
cmpsb
jno
mov
add
cltd
mov
fsqrt
aas
adc
cmpl
in
fstpl
lret
add
push
sbb
out
pusha
repnz
xor
addr16
frstor
sbb
test
or
lcall
ljmp
mov
repz
push
mov
dec
arpl
pop
mov
cld
xor
push
xchg
lahf
shll
mov
loop
jno
adc
aas
loope
xchg
movsl
lahf
test
mov
xchg
add
jmp
mov
mov
repz
cmp
mov
repnz
in
lock
add
into
sbb
insb
fdivrp
xor
jmp
sti
add
addr16
mov
test
mov
xor
sub
dec
jnp
iret
test
cmp
push
jns
cld
mov
out
je
mov
xchg
in
jmp
mov
in
sarl
lods
js
js
mov
mov
mov
add
jle
pextrw
cmc
dec
fidivrs
rol
xchg
int3
leave
lock
inc
sbb
int
test
movsb
inc
std
addl
mov
pop
pop
icebp
pop
repnz
das
ret
jno
cmc
out
cld
cmp
jno
iret
jle
fwait
pop
push
lcall
repz
jb
stc
aaa
jo
add
mov
pop
jae
in
sti
aas
pop
jmp
mov
out
leave
jns
cltd
sarl
outsb
out
js
dec
loope
ret
imul
hlt
sbb
cmpsl
add
cld
fsubr
jo
jecxz
in
jo
std
mov
inc
cmp
inc
xlat
pop
in
mov
mov
jno
ret
add
std
mov
leave
popa
jecxz
mov
fwait
loopne
jnp
mov
test
push
cmpsl
add
and
push
add
mov
cmpsl
icebp
leave
mov
dec
xchg
cmc
jmp
cmpsl
nop
lods
repnz
mov
sub
lahf
fcmovne
inc
rcrl
stc
sahf
repz
cli
jge
mov
jb
nop
mov
lret
pop
mov
mov
in
movsl
fstps
nop
int
loope
iret
aas
mov
leave
or
icebp
shlb
shr
loope
xor
loope
mov
mov
mov
mov
xor
popf
rol
shrb
add
mov
call
int
ds
movsl
dec
je
shlb
add
cld
fs
xchg
negl
out
loope
cmp
push
adc
cmp
neg
popl
mov
lahf
pop
mov
fisubrs
jcxz
xor
fcomp
xlat
mov
in
filds
stos
popf
jne
jl
loope
out
call
je
cmpsl
fwait
dec
push
enter
fisttps
mov
sub
je
insb
xchg
or
cmp
out
xor
sub
cmc
loope
mov
in
mov
stos
mov
jb
fcompl
call
sarb
ja
out
out
outsl
cmc
xor
popf
adcl
cmc
sahf
repz
add
xor
jnp
add
scas
mov
fdiv
mov
pop
out
cld
pop
fstps
or
sbb
push
jbe
ror
pop
pop
xchg
pushf
fistl
loope
fistpll
mov
testl
push
jne
scas
pop
std
jno
fs
sti
loop
popf
add
lock
mov
pop
in
jg
xor
sbb
lock
insb
fcmovnb
loopne
lods
pop
jmp
xor
fistpll
or
jle
sbb
xchg
scas
sti
sbb
call
imul
lds
mov
mov
cmp
divb
int3
inc
mov
out
and
dec
js
fisubl
mov
and
jl
xchg
lcall
fpatan
mov
dec
je
in
push
ds
or
jecxz
sbb
cli
ljmp
cmp
popf
aad
in
and
inc
imul
fnstenv
mov
add
lea
mov
repnz
clc
fwait
jo
je
add
hlt
sti
pop
aad
mov
aas
add
cld
pop
icebp
fisubrs
jl
jno
outsb
out
iret
in
popf
stc
add
cltd
repz
xor
sbb
jbe
push
mov
gs
repz
enter
pushf
jmp
inc
shl
dec
jae
jns
stc
cmp
add
mov
lahf
out
lret
jnp
in
inc
dec
fcmovbe
sub
mov
xchg
xlat
or
test
lret
fcomps
insl
cld
je
outsl
cmp
aad
jns
and
jo
clc
mov
dec
pop
lret
cmc
out
repz
jecxz
rolb
fstps
lahf
leave
stos
inc
std
addb
mov
div
psadbw
jl
stos
cmp
sahf
jbe
addr16
call
or
insb
push
jbe
je
ljmp
jl
pop
lret
jo
test
imul
rolb
les
xchg
fstpl
je
aaa
shll
add
fucomp
jecxz
sti
outsb
jb
mov
rorl
repz
aaa
jmp
mov
xchg
or
aad
ja
stc
lds
repz
cmc
das
mov
cld
je
rcll
std
or
jns
jo
push
xchg
loopne
or
jbe
cmp
push
cmp
cld
filds
jecxz
cmpsl
jne
mov
cmpsb
loop
xchg
jae
add
sbb
insl
ljmp
jg
jecxz
arpl
xchg
dec
sbb
jo
outsb
pusha
cs
mov
jl
js
imul
outsb
xor
fstl
insl
xchg
ja
cltd
outsl
call
xor
xor
pop
add
inc
icebp
ljmp
pop
dec
imul
insb
pusha
add
cmp
and
fsubp
cmpsb
cmp
cmpsl
lock
pop
stos
in
add
jmp
lock
out
negb
jge
cld
stc
push
int
int
lret
inc
adc
div
mov
jo
out
pop
pushl
popf
fdivrp
pop
mov
mov
stc
je
mov
xorl
xchg
repz
outsb
sub
out
pop
das
mov
or
jmp
outsl
lret
into
jge
hlt
call
xchg
xchg
pop
fdivrl
mov
stc
fstpl
repz
cmpsb
mov
iret
sarl
push
movsb
jb
cmpsl
jno
push
leave
and
jb
cmc
iret
sub
out
jmp
mov
pushl
lock
neg
mov
idiv
insl
cld
jo
jno
push
and
pop
bound
inc
jb
sti
pop
sub
mov
in
stc
mov
jb
lret
pop
jne
cs
pop
ljmp
jns
push
ss
enter
pusha
lret
dec
je
push
dec
push
sbbl
fmul
cmp
cmp
push
pushf
leave
inc
mov
call
xorl
fsubr
call
dec
in
enter
stc
sub
arpl
jmp
mov
or
por
and
incb
jns
icebp
stos
pusha
out
clc
sbb
js
test
shr
jecxz
xchg
daa
ja
ja
xchg
stos
stc
ds
jo
aam
xor
cli
notl
sti
mov
mov
aaa
mov
stc
insl
and
icebp
aaa
jbe
loope
sub
xchg
repz
mov
fucomp
jns
lea
sub
add
jl
sti
lcall
cmpb
mov
sub
repz
mov
test
std
mov
lock
pop
stc
lret
sti
cs
shl
popf
es
jnp
movsl
std
nop
insb
enter
fsubs
testl
mov
stc
mov
aaa
jno
divl
int
dec
mov
test
insl
lret
jg
sbb
xchg
std
clc
add
cmp
rcrl
xlat
push
add
cmpsl
rol
out
ja
outsl
loop
lcall
jmp
ja
iret
dec
jge
lahf
ljmp
sub
int
jbe
cmp
mov
cmpsb
outsl
lret
insb
ret
pop
arpl
cmp
lds
push
inc
insl
int
jo
popf
out
ret
out
jecxz
xchg
push
mov
lds
mov
push
dec
lods
lds
pusha
mov
sub
out
inc
aad
shl
sarl
jge
cmpsl
scas
pop
adc
sbb
xor
sbb
nop
leave
in
sub
pop
pop
insl
adc
push
test
cli
rolb
fdecstp
cmp
ficomps
fistpll
sbb
mov
sbb
mov
xchg
fisubrs
xor
outsl
jp
cmc
cmpsl
dec
pop
or
pushf
sub
jp
or
fsub
test
jnp
sub
lods
hlt
loope
pushf
adc
lcall
push
cmp
xchg
adc
out
in
aaa
hlt
test
enter
mov
xorb
jnp
loope
je
and
enter
ljmp
xlat
out
lret
fstp
add
insb
enter
andb
aad
subl
jge
sahf
aad
adc
out
xchg
in
mov
out
inc
jl
hlt
ja
repz
sarl
pop
repz
push
mov
inc
mov
loope
je
imul
imul
stc
repz
push
jo
lock
adc
dec
push
fistps
cmp
sbb
fcmovne
jge
pop
ret
fldt
iret
in
outsl
lock
repz
jg
outsb
lods
lret
test
fistpll
movsl
je
out
mov
stc
add
pop
jg
cltd
add
arpl
add
leave
imul
repz
inc
xchg
mov
mov
cld
push
repnz
call
hlt
cmp
pop
iret
cmpsl
popl
cltd
mov
stc
filds
pop
fst
mov
loope
fistl
inc
test
jecxz
imul
jmp
stc
repz
xor
imul
int
dec
jmp
mov
xlat
sbb
shrl
xchg
sbb
jns
jno
out
sub
iret
cmp
mov
lret
xlat
inc
lock
pop
mov
shrl
mov
jl
add
lret
outsb
mov
ja
pop
mov
stc
lods
mov
lret
rep
int
sarb
repnz
mov
in
loope
cmc
ds
jle
ljmp
dec
mov
in
cmp
test
ss
out
ja
cmc
cmc
sbb
add
jne
call
cld
divb
outsb
sbb
mov
test
mull
xor
fcoml
or
add
pop
mov
cmc
sub
gs
iret
sbb
inc
loope
repz
xchg
in
dec
cmc
cmp
or
scas
out
fs
jg
pop
mov
jns
mov
addr16
jnp
inc
loope
mov
rcl
lahf
test
movsl
push
lahf
pop
ja
fidivrs
hlt
xchg
lret
or
leave
int
js
stc
and
out
out
call
mov
testl
push
xchg
subps
jle
jp
or
fs
lahf
repz
jbe
outsl
inc
mov
mov
and
shl
popl
orb
xchg
stc
jmp
dec
enter
dec
popf
int
mov
jmp
icebp
js
repnz
sub
jmp
lret
push
int
jg
rcl
adc
test
das
xor
mov
pusha
push
in
je
in
mov
mov
lcall
sub
xor
mov
push
pusha
fcompl
stc
cs
fnstenv
ret
fnstsw
je
int3
aad
push
jl
addr16
jns
push
imul
add
mov
cmp
ficoms
je
in
stc
call
pop
push
inc
int
jmp
add
jmp
cmp
rcl
cltd
ret
mov
fnstsw
lock
fxch
mov
loopne
je
sub
push
or
pop
stos
scas
sub
sbb
mov
movb
mov
ds
add
xor
subl
out
addr16
pop
stc
jae
jnp
lahf
div
loope
fstl
cmpsl
test
test
sbb
in
test
addl
sub
popa
dec
mov
sub
mov
cld
repnz
pop
jne
lds
aad
push
jne
cmp
ss
mov
mov
xor
dec
imul
push
fcmovu
mov
pop
jl
sbb
into
sub
jge
iret
pop
fdivs
add
ret
bnd
push
and
jb
lcall
cmc
sbb
scas
pop
inc
test
fldenv
popf
lret
inc
nop
testl
jp
fisttpl
mov
jecxz
add
jmp
test
out
stc
sti
jno
jmp
xor
out
sti
stos
test
fistl
jmp
icebp
iret
jg
roll
lahf
sti
or
mov
leave
fcmovne
pop
dec
xor
aas
cmp
inc
sbb
sar
or
xchg
jns
jno
jecxz
inc
push
insl
repnz
mov
lock
stos
std
test
out
int
mov
loope
outsl
sbb
xchg
sbb
rolb
aaa
call
ret
push
iret
lods
stos
adc
mov
add
iret
repz
idivl
arpl
test
push
jg
je
insl
pusha
sar
fistpl
mov
cld
fucomip
or
popf
sub
insb
push
mov
shr
xchg
lret
dec
mov
jmp
mov
mov
stc
cwtl
push
out
jno
insl
mov
pop
xor
and
stc
out
aad
mov
lock
into
push
fdivr
push
imul
sbb
pop
fmulp
lock
int
sti
sub
xchg
push
dec
sarb
repnz
rolb
dec
mov
jg
xchg
mov
jp
ljmp
outsb
iret
out
mov
hlt
fsubrl
repz
xlat
xor
out
jnp
mov
stos
aad
jmp
repz
mov
hlt
iret
jge
andb
sti
xor
repnz
cld
clc
stc
std
icebp
in
pusha
in
jge
jecxz
fs
cld
std
jecxz
jl
or
arpl
iret
sti
repnz
loop
not
jmp
or
pop
mov
inc
jge
inc
in
dec
repnz
cmpsb
ljmp
sbbb
lea
or
mov
jbe
mov
mov
or
pop
shll
rcrl
outsl
aad
cmp
gs
xor
jmp
xchg
and
cmp
imul
icebp
jne
gs
fistpll
pop
xchg
lahf
repz
pop
repnz
lock
aas
jns
mov
nop
arpl
fcompp
icebp
into
pop
jge
pop
pop
repz
outsl
test
xlat
cmp
stos
aad
fnsave
sub
lahf
repnz
pushf
mov
ljmp
inc
lcall
cmp
lods
popf
sti
jecxz
sbb
cmp
je
xor
outsl
mov
aaa
mov
fdivrl
ret
aad
iret
rcrl
dec
cmp
call
leave
in
pusha
iret
add
cwtl
out
add
pop
nop
mov
clc
lds
call
push
lea
lds
out
mov
dec
shl
ljmp
xlat
gs
imul
sahf
movsb
loopne
mov
sbb
sbb
scas
cwtl
cld
xor
daa
idiv
cmp
add
fiaddl
jle
fisttpll
outsl
adc
out
jle
jnp
add
jg
xorb
add
lcall
and
jo
in
fprem1
icebp
ret
fmuls
out
icebp
cmpsb
in
lahf
sar
hlt
xor
xchg
lret
xchg
dec
mov
int
fwait
cmp
jge
mov
clc
mov
popa
sti
iret
and
jae
leave
dec
sbb
xor
shll
pop
mov
sarl
adc
inc
std
ljmp
ds
lret
repz
cmp
cmc
fisubrl
pop
ljmp
mov
cmp
aam
push
mov
jns
add
stc
sar
out
adc
fimuls
xchg
in
pop
out
cmp
int
test
mull
std
test
add
xchg
fucomi
jecxz
cmpsl
test
jb
pusha
jge
adc
sbb
ja
stc
pushl
aaa
bound
arpl
jns
mov
add
mov
cli
lods
icebp
mov
pop
cmp
and
cmp
add
bnd
jae
clc
sarl
jno
lahf
clc
enter
aad
enter
jmp
or
mov
cltd
dec
mov
mov
mov
sbb
jp
mov
mov
sub
aas
lahf
jg
lds
icebp
in
mov
inc
bound
clc
lods
lock
leave
loopne
sti
jl
jno
jg
movsb
mov
jp
dec
xlat
inc
jbe
mov
pusha
pop
icebp
inc
loopne
sbb
mov
xor
scas
iret
icebp
sbb
cmp
jmp
or
sub
dec
jb
stos
jmp
sub
je
mov
lds
mov
push
inc
pop
ljmp
mov
fisubrl
dec
xor
and
call
int
rol
cmp
cmc
lret
pop
leave
dec
test
test
mov
lret
or
mov
push
mov
and
js
mov
xor
adc
rcrb
fidivl
aad
inc
testb
out
rcr
lock
idivl
mov
out
mov
and
fdivrl
es
cmc
fadds
fsubs
mov
scas
sub
ss
shrb
sbb
shll
stos
push
jg
pushf
jo
lock
lock
push
shll
shlb
cli
cli
outsb
into
dec
mov
pushf
push
mov
pop
repnz
mov
mov
dec
lret
lods
mov
mov
ja
mov
pushf
dec
push
imul
sbb
inc
push
repnz
mov
push
lret
aas
mov
repnz
push
mov
mov
xchg
mov
mov
dec
sbb
imul
lret
in
cmp
leave
data16
jl
sub
fsubp
adc
jne
add
cli
in
sub
fistl
repz
adc
push
imul
out
mov
fisttps
mov
imul
mov
popf
sbb
push
stc
imul
adc
call
aas
imul
cmp
pop
out
stos
push
int
pop
xlat
fdivrl
cltd
jno
xchg
xor
sbb
dec
push
jns
in
xor
xchg
pop
in
adc
aaa
mov
jbe
cmp
cli
adc
or
dec
lods
icebp
repz
into
jmp
rcr
rcll
adc
cmpsb
sub
call
subl
jns
out
jge
xor
lds
push
mov
loop
movsl
aaa
leave
add
pop
or
lock
lock
jo
dec
add
cs
jecxz
pushf
pop
mov
xchg
popf
leave
pusha
jg
in
gs
pop
clc
in
xor
fs
shrb
in
dec
xor
hlt
out
xchg
sti
mov
inc
add
or
or
repz
int3
rorl
sbb
dec
pop
aad
fmul
xor
xchg
dec
repnz
lock
rcl
outsb
in
ss
in
mov
ficoml
lcall
js
mov
mov
std
mov
cwtl
jg
outsl
ja
out
leave
in
outsb
mov
pop
fwait
cmpsb
fistpll
addr16
pop
jb
sarb
push
hlt
push
fisttps
mov
push
in
ror
cwtl
daa
dec
xor
rcl
cmp
imul
int3
loopne
mov
repz
cld
imul
idivl
aad
dec
popf
shr
and
js
dec
lret
fdivl
scas
push
mov
cmp
insl
lcall
push
mov
fildll
repnz
div
repnz
fnstcw
xor
gs
in
add
or
mov
les
out
inc
xlat
clc
fldcw
test
scas
jl
nop
out
mov
ljmp
adc
int3
sub
fsubrl
mulb
lcall
jb
sbb
xchg
push
out
orl
sub
wrmsr
orl
jg
mov
out
out
pop
imul
iret
ljmp
inc
jo
jns
in
mov
push
add
or
sub
repnz
call
dec
imulb
jle
ljmp
hlt
lock
and
jl
out
push
pop
repz
jge
out
xor
xchg
ficompl
iret
xlat
and
xor
jne
call
into
mov
sahf
popf
mov
fildl
inc
pushf
push
mov
leave
aas
aad
jno
cmp
adcb
xchg
fdivl
cmp
out
mov
into
jne
jecxz
jmp
hlt
sbb
repz
adc
inc
push
test
insb
lods
mov
sbb
xchg
loopne
mov
jo
mov
ljmp
jmp
jno
lahf
pop
sahf
fimull
stos
lcall
testl
in
lds
inc
pop
loope
mov
and
ja
js
sbb
ja
lea
out
cld
int3
daa
pop
data16
dec
out
fisttpll
sbb
push
stc
inc
into
mov
shr
icebp
idivl
mov
mov
imull
out
out
fnstsw
xor
jo
xchg
cmp
lods
icebp
mov
outsb
jno
xlat
daa
call
mov
xchg
push
in
pop
lcall
mov
adc
out
push
jne
cmc
popa
cmp
cmp
lds
mov
je
fnsave
jo
cmp
pop
mov
sub
jo
push
sti
ss
xchg
mov
mov
fimull
es
sbb
je
addr16
cmpl
lock
jae
testl
jmp
leave
movsl
mov
loopne
mov
out
popf
das
mov
push
cmp
mov
leave
data16
sub
sarl
in
div
leave
in
jb
cmp
scas
icebp
icebp
sbb
xchg
pop
lea
js
js
pop
shll
push
cld
int
mov
shl
icebp
push
jecxz
insl
mov
loop
lret
punpckhdq
sahf
mov
fistpll
in
mov
out
sbb
jg
imul
das
xor
stos
push
repnz
push
mov
mov
xchg
mov
ret
testb
cmp
mov
out
jae
imul
scas
mov
fnstenv
mov
stc
adcb
in
std
shrl
mov
imul
hlt
sbbl
dec
cmp
clc
lock
jg
pop
mov
imul
popa
popf
loope
dec
popf
subb
repnz
xor
in
bound
idiv
neg
addb
sbb
sbb
fstl
jle
mov
inc
mov
sbb
ljmp
sub
jbe
shll
cmc
lock
dec
sarl
lock
leave
mov
int
ds
inc
stc
dec
jmp
iret
clc
pop
shlb
and
ljmp
dec
jl
sti
js
data16
je
int3
pop
imul
push
cmpsb
inc
or
scas
lea
in
push
cmp
xlat
out
mov
jmp
xchg
xchg
sti
pop
pop
out
xor
enter
pusha
cmc
shll
test
dec
popa
fs
mov
or
xchg
jge
add
out
stos
pop
test
pop
cmpsb
into
fnstenv
push
loope
jl
pop
pusha
imul
loop
fs
movsl
jmp
xor
loope
pop
hlt
loopne
jo
mov
push
nop
aad
ss
mov
fadd
test
push
out
adc
idivb
js
sbb
push
stos
repnz
jb
mov
repnz
cmp
loope
push
aas
pop
loop
adcl
incl
mov
out
pop
lods
loopne
jno
mov
cld
lock
out
mov
fcos
inc
call
enter
aad
pop
orl
pop
stc
rcrb
ret
xor
lods
mov
out
cmp
icebp
lret
leave
jp
and
mov
js
push
sahf
dec
loope
jne
or
jnp
xchg
sub
mov
pusha
cmp
mov
stos
out
add
pop
lock
inc
js
test
adc
inc
addl
stc
mov
jo
rcrb
cmp
adc
scas
fidivrs
fwait
mov
out
xchg
repnz
out
add
mov
outsb
fistps
and
repz
jmp
sbb
cmp
cli
xchg
popa
push
add
inc
sbb
xor
sar
cmp
push
stc
daa
cmp
dec
cmp
add
mov
lods
dec
cwtl
and
lret
xchg
subl
sahf
insb
add
mov
pop
cli
jne
repnz
imul
ffreep
jbe
lahf
add
std
fucom
xchg
inc
stos
mov
and
test
imul
lds
pop
rcrb
outsb
xchg
sub
lcall
inc
pop
dec
in
xchg
iret
mov
xor
pop
rcrl
lcall
add
enter
pop
fwait
cmpsb
ret
push
js
or
stc
cwtl
dec
jl
ss
jno
mov
cmc
jo
popl
outsl
mov
std
js
idivl
movsl
xchg
lcall
lds
dec
push
jge
inc
push
jg
repz
cmp
andb
and
jo
sbb
xor
xorb
jge
sbb
addr16
call
mov
out
dec
inc
lcall
push
cld
jae
adc
fdiv
cs
mov
out
add
jecxz
popaw
gs
call
jns
std
jae
sarl
xchg
movl
sbb
fs
clc
mov
scas
or
cmp
jle
or
xorb
mov
jne
in
inc
and
out
addr16
orb
jmp
pop
shll
pop
fdivr
loope
rcrb
adc
ffree
jno
cmp
in
sbb
ret
pop
fisubs
out
lret
fistpl
sbb
sbb
test
movsl
fcoml
cmp
xchg
fwait
xchg
xchg
mov
inc
fcomps
fs
or
sbb
inc
stc
add
dec
mov
scas
and
out
divl
in
iret
lahf
std
je
or
sar
adc
sti
cld
cld
leave
pop
cmc
cmp
dec
out
and
xchg
jecxz
stc
push
ljmp
fldl2e
scas
fsubs
and
dec
mov
addr16
fmul
mov
dec
dec
mov
mov
sbb
or
jmp
cmpsb
sbb
mov
je
outsb
out
jle
mov
jmp
or
std
sub
inc
lods
jp
jg
dec
jno
call
jle
loope
sub
mov
and
sub
sbbb
test
lahf
inc
xor
push
imul
repz
aas
out
sti
lods
mov
loopne
icebp
fisttpll
cmp
popf
lret
andl
in
add
int
sub
pusha
out
int3
sti
push
outsb
out
xchg
mov
mov
cltd
xchg
cmc
jno
arpl
jno
sub
jo
not
rcr
out
xchg
xor
fimull
cmpsl
xchg
ret
jbe
sub
mov
cwtl
js
mov
fbld
iret
testl
mov
dec
pop
stos
mov
mov
mov
shl
jmp
push
adc
ds
mov
lock
sub
aas
movsb
inc
in
mov
add
cmpsl
pop
push
jo
ror
xorb
nop
and
pop
cmp
shrd
sbb
outsl
xlat
mov
fadds
mov
loopne
push
hlt
icebp
pop
xor
jp
mov
mov
pop
mov
adc
sbb
push
lds
adc
jp
loopne
add
mov
cs
dec
pop
fistpll
rclb
adc
and
js
and
lret
int3
insb
out
shll
push
add
adc
sub
cmp
outsl
sbbb
sar
mov
sub
add
cmp
mov
jns
lock
imul
lods
dec
in
sub
out
lret
mov
pop
jl
cmpl
dec
lret
ljmp
lahf
xchg
movsl
int
mov
lods
lea
je
mov
jns
jmp
outsb
dec
jecxz
icebp
lock
in
jno
outsl
lahf
xchg
loope
sarl
mov
add
add
cld
sub
pushf
ja
fimuls
out
les
stc
aaa
fisubrs
addr16
mov
popa
enter
jp
and
fidivl
test
xlat
shrl
fcoms
jns
mov
test
lods
sub
test
lret
stos
pop
sar
sbb
mov
push
jecxz
cwtl
clc
shlb
jmp
xchg
pop
lods
outsb
ficoms
mov
stc
std
mov
cmc
jae
cltd
aaa
call
repz
popa
lret
ret
loop
rorl
sbb
pusha
cmc
fcompl
test
leave
stc
lahf
jo
mov
repz
lret
in
je
data16
lods
cli
loope
js
in
sub
mov
das
lret
mov
std
mov
jg
orb
imul
xor
and
sti
stc
xlat
nop
pushl
and
sti
sbbl
jmp
add
xlat
adc
jecxz
test
dec
push
lcall
mov
repnz
shll
ret
in
and
pop
mov
mov
in
lahf
rol
sarb
xor
fwait
iret
mov
ret
push
ja
stc
mov
repnz
repz
mov
stc
jecxz
jge
mov
into
js
sub
cmpl
call
adc
sarl
sahf
inc
xchg
aas
gs
mov
loop
in
or
mov
push
lea
lods
mulb
pop
call
subl
jns
outsb
in
cmc
pop
jnp
inc
out
pop
repz
clc
sysret
negb
ret
enter
outsl
movsb
jmp
outsb
ds
mov
jo
ljmp
mov
sub
shrb
outsl
rolb
push
jmp
arpl
and
leave
cli
jp
dec
ja
daa
mov
jge
cld
fnstenv
jmp
std
dec
xchg
jae
shlb
and
cmc
movsl
arpl
ja
add
pushf
bound
orb
loope
push
decl
pushf
popa
ja
jg
cmc
pushf
loopne
push
decb
pushf
pusha
ja
jle
cmc
pushf
fbstp
std
sti
and
jp
jge
loope
adc
xlat
pop
aaa
pop
xor
add
jo
jb
inc
or
subb
xchg
push
addr16
jl
mov
jmp
pop
divl
push
dec
cltd
icebp
xor
mov
in
je
inc
xor
mov
jl
loope
fsubp
cmp
pop
ljmp
fmull
iret
bound
add
leave
negb
jbe
cmc
jmp
int
insl
inc
xor
std
roll
mov
lock
call
jl
sbb
jno
insl
cmp
hlt
sbb
mov
repnz
sbbb
push
idivb
jno
push
icebp
sbbl
mov
movsl
pop
stos
sbb
fnstcw
mov
lock
jae
pop
into
jae
icebp
ljmp
mov
stc
rcrb
push
jmp
fldl
shrl
clc
in
loope
and
push
add
in
jb
cld
aam
xchg
add
popf
cmc
push
mov
vpshlw
hlt
rcr
cmpsl
out
outsl
jge
xchg
xlat
mov
das
pop
in
scas
test
xchg
jge
pop
and
pop
jg
mov
pop
push
mov
jecxz
sbb
jnp
sub
lock
repz
push
out
loopne
mov
cmpsb
sbb
popf
cmp
dec
int
imul
pop
out
fbld
mov
into
dec
dec
ss
leave
icebp
pop
xchg
lods
lahf
test
je
jnp
shl
iret
add
adcl
cmp
lock
lahf
je
lds
add
mov
lods
int3
pop
push
xchg
int
clc
in
add
or
mov
xorb
push
test
cmp
ljmp
pusha
adc
jle
or
cmp
std
icebp
inc
push
testl
jl
mov
pop
lret
divb
fisubl
sub
int3
les
mov
sub
imul
iret
rclb
dec
xchg
lods
lds
pop
pop
outsl
or
sti
mov
clc
pop
movsl
outsl
mov
nop
pop
push
dec
icebp
jno
or
fsub
insl
xchg
pop
fucom
push
mov
sbb
push
add
scas
sbb
push
test
jp
imulb
shrl
sbb
xchg
scas
push
pushf
in
push
fistpl
dec
cmc
mov
or
push
loopne
mov
cld
or
fmulp
incl
cmc
adc
ds
xchg
loop
pusha
cs
inc
loope
or
mov
bound
add
mov
icebp
jmp
pop
loope
lea
jecxz
lea
mov
loopne
call
hlt
jno
outsl
pop
cmpsb
mov
dec
lret
icebp
aad
push
enter
cli
xchg
jns
xchg
aam
outsl
std
add
clc
popa
pop
aad
xchg
fmulp
xor
imul
movsb
pop
loopne
inc
jmp
cmp
outsb
orl
dec
mov
loopne
xchg
mov
cmp
test
lock
jns
clc
mov
mov
lcall
push
mov
cmp
sti
aam
loop
jl
lds
lahf
fnclex
fadds
outsb
push
rcrl
lds
xor
sub
pop
jns
fsubrs
fcoml
adc
cmp
xchg
add
push
fcmovnu
cmpsl
sbb
popl
subb
rcl
test
adc
mov
pop
xchg
xor
popf
xlat
repz
out
jo
jmp
or
ljmp
mov
pop
cmp
add
fs
pop
setne
ss
jle
js
xchg
jb,pn
and
add
bound
jno
jl
pop
leave
out
xor
adc
loopne
xor
cmp
xchg
out
pop
mov
rorb
int3
iret
xlat
sub
xchg
in
and
pop
mov
jne
into
popf
jae
lds
int
push
lock
fs
inc
inc
jp
shl
call
sbb
mov
movsb
fwait
mov
ror
jae
dec
outsb
fisubl
out
sub
push
outsl
filds
lret
mov
mov
jg
hlt
jmp
movsl
cmp
dec
add
lock
fiadds
inc
sub
loop
mov
jno
in
cmp
push
mov
js
xor
xchg
sti
mov
into
cwtl
imull
call
loop
jl
insl
lahf
fistpll
push
int
stc
in
mov
inc
dec
xor
push
mov
pop
js
and
fs
lret
shll
push
lods
dec
stc
out
dec
mov
sbb
xlat
xlat
mov
push
rclb
subb
jno
addr16
stos
fwait
xor
cmpsb
out
mov
out
repz
pop
mov
stos
imul
fstps
push
call
jo
sti
cwtl
pop
xor
xor
test
les
or
repz
out
scas
inc
cmpsl
test
cmpsb
lock
repnz
ljmp
int
popa
add
ret
mov
sbb
incl
jno
ljmp
mov
ret
mov
fldenv
shlb
je
xor
push
xor
xor
cltd
ss
stc
lahf
pop
adc
jne
ror
fistps
jl
mov
out
jns
sti
xor
lock
aas
add
iret
jle
lahf
repnz
sbb
push
lret
enter
in
jg
cli
sarb
stc
cli
xlat
fnstsw
rcr
lods
mov
pop
sbb
pop
xor
rolb
jp
ret
sti
lea
aas
jbe
add
call
gs
loop
fadds
push
mov
add
out
push
dec
cmp
ret
jecxz
mov
dec
cltd
dec
mov
xor
scas
jmp
lock
out
pop
mov
dec
pushf
test
das
or
ret
sub
shl
pop
xor
rorl
fs
in
in
cmp
jg
add
add
push
std
mov
icebp
mov
shlb
push
jae
cmpsb
out
mov
mov
call
call
std
adcl
leave
xor
cmpsl
add
mov
xor
in
cld
pop
mov
jb
or
push
jg
repz
push
cmpsb
shlb
movsl
mov
das
das
outsl
lcall
loope
adc
out
xchg
mov
jmp
leave
adc
mov
test
pop
add
stos
add
jbe
repnz
pop
jns
dec
pop
shrl
sub
lea
loopne
fmull
aaa
pop
or
in
stos
pop
ret
push
dec
adc
sbb
lods
lahf
iret
adc
lock
out
aaa
fwait
scas
mov
inc
stc
sbbl
sub
mov
push
fiaddl
std
xlat
xchg
cmpl
ds
cld
jle
jne
int3
mov
vpunpcklwd
test
adc
loope
shl
idiv
jae
dec
lahf
cmp
gs
std
ljmp
cmp
xchg
hlt
outsb
popf
cmp
dec
in
sub
jno
or
lahf
std
shrb
ds
jns
data16
lock
push
sarl
fistps
add
dec
lea
cmpl
int
sub
out
mov
mov
lcall
ja
sarl
shrb
push
dec
es
add
fcmovnb
sbb
in
shrb
stc
sub
xor
movsl
jmp
ljmp
mov
mov
cs
hlt
fsub
and
mov
cwtl
divb
decb
insl
repz
xor
lock
pop
lret
cmp
popf
into
int
lret
inc
pop
dec
mov
sub
xor
push
inc
outsl
xchg
push
roll
rcll
ss
iret
jbe
cmpsb
hlt
sbb
popf
in
pop
shll
cmp
bound
jbe
cmpl
stos
add
fstpt
pop
jl
mov
jg
mov
stos
imul
call
aad
pop
jl
push
push
cmpsl
imul
inc
aas
cmpsl
les
xchg
jg
and
cmp
adcl
mov
and
mov
repz
jecxz
lock
shr
movsb
js
sub
in
aam
pop
test
inc
or
mov
je
dec
jne
lret
stc
sbb
mov
sar
cs
pop
dec
rcl
ds
xlat
iret
in
enter
inc
mov
jl
cmp
popa
sub
jp
push
imul
outsl
leave
iret
fisubl
aaa
sbb
mov
mov
pop
cmp
mov
icebp
sub
in
push
icebp
ficoml
iret
pop
loope
push
cli
xchg
sub
push
mov
sbb
xlat
and
repz
or
ret
clc
lret
repz
mov
sbb
cmpl
fmulp
inc
jne
loop
mov
mov
push
loop
addr16
pop
mov
sub
repnz
push
hlt
int
aam
push
repz
aad
sbb
rcrb
jg
or
jmp
cmp
mov
xor
xchg
call
stc
cmp
pushf
jbe
sub
js
aad
mov
xor
mov
std
push
fdivp
outsb
dec
clc
int
lods
leave
aam
cs
cmp
leave
xlat
xchg
fildll
cmp
icebp
cmp
cld
push
sub
mov
and
jmp
cmpl
div
xor
loopne
stos
std
aas
push
je
fcmovne
mov
jno
cmp
in
lods
fdivr
into
xlat
fnsave
pushl
mov
mov
fldenv
repz
aas
cmp
addr16
outsb
sub
inc
ljmp
shlb
test
les
lock
mov
jns
jge
or
mov
or
ljmp
out
push
icebp
fsts
mov
pop
icebp
mov
and
enter
stc
pop
lods
lahf
in
lea
scas
xlat
lahf
adc
xor
or
movsl
pusha
push
mov
shrb
fisttps
lret
jno
xlat
loope
cmpb
imul
andb
andl
sbb
xchg
iret
std
jne
pop
mov
iret
xchg
or
das
ret
dec
pop
jmp
push
mov
xchg
xor
leave
mov
push
cmp
clc
into
mov
lock
mov
ss
rol
sbb
xor
fdiv
into
xlat
pop
add
call
fimuls
loop
insb
call
dec
jns
cmp
ret
dec
xchg
add
je
sub
arpl
jle
fidivs
lock
call
lds
mov
pop
push
arpl
out
add
frstor
mov
out
fcoml
lahf
imul
xchg
mov
jmp
das
add
shl
jge
fstpt
jmp
lods
out
add
out
andl
mov
add
imul
popf
pop
cld
pop
insb
jne
fildll
xchg
mov
in
mov
arpl
mov
into
dec
dec
rcrl
fmull
stc
outsl
xlat
add
stc
lods
xlat
daa
out
sbb
pop
sbb
nop
iret
xchg
mov
es
cltd
sarl
int
or
jmp
lahf
ret
xchg
es
movsl
adc
in
mov
popa
push
outsb
test
stc
nop
jg
jno
into
jg
call
mov
jge
movsb
popf
pop
rorl
fscale
or
repz
fstps
dec
cmp
shl
repz
mov
in
aam
lods
aaa
jge
cmp
mov
lahf
in
mov
les
out
imul
jne
ret
out
stc
ljmp
or
cwtl
pop
fisttpl
sti
cld
mov
xlat
cmp
jecxz
xchg
dec
push
add
test
repnz
repnz
addl
pop
cmpsb
cmp
popf
je
lret
aas
std
pop
mull
dec
repnz
stc
scas
je
test
xor
lret
lock
enter
into
mov
out
test
mov
jo
int3
in
fiaddl
dec
cmpsb
and
out
in
outsb
std
repz
xchg
gs
ds
lret
outsl
sarb
jecxz
imul
jns
fcompl
sub
inc
je
sbb
push
hlt
test
push
getsec
cmp
repz
jge
fwait
add
inc
ror
pop
into
jmp
out
repnz
fwait
push
rolb
mov
jg
sbb
sub
jb
push
lock
aas
in
push
push
mov
jmp
lret
fsts
dec
xchg
pop
fsub
cmc
push
xor
sub
in
loop
shll
rclb
jg
or
icebp
pop
mov
loopne
popf
je
imul
xchg
inc
sbb
test
mov
iret
faddl
adc
cli
dec
sbb
jno
fcomip
repz
repz
movsb
lods
cld
jg
sti
outsl
cli
jno
fsts
add
mov
mov
xor
shl
xchg
lds
lahf
jp
sti
cmpsb
sahf
mov
xchg
jmp
mov
xchg
jne
gs
xor
push
loope
jecxz
aam
popl
cmp
lock
fcomip
cmc
cmp
push
aas
jo
ljmp
mov
push
repz
adc
gs
aaa
adc
mov
add
les
jns
popf
icebp
mov
dec
sbb
adc
or
push
fsts
xlat
xor
jmp
movsb
lahf
jecxz
in
nop
dec
adc
xchg
pop
mov
outsl
jge
mov
xchg
sub
pop
jle
pop
dec
aad
xchg
stc
push
fs
loopne
jmp
stc
inc
out
cmp
stc
vmovsd
outsb
mov
test
jo
jne
repnz
std
jecxz
mov
in
mov
jmp
pushw
addb
lret
ss
stc
hlt
in
fiaddl
cmpsb
mov
and
sub
xlat
fimull
aaa
shr
stos
iret
ret
xlat
dec
inc
in
out
push
mov
jmp
pop
nop
out
mov
push
lcall
jl
fistl
jge
pop
sbb
jl
repnz
add
stc
loope
fidivl
addb
lcall
ret
inc
cmpsl
std
fld
loope
ss
pop
jp
jle
cmpsl
jno
or
add
lcall
icebp
jge
mov
sbb
push
test
add
jb
sti
inc
inc
push
jb
not
and
sbb
xor
pop
xchg
not
lock
pop
lods
mov
dec
fs
cwtl
jmp
scas
outsb
loopne
nop
rolb
out
loop
ds
cmp
mov
clc
jg
in
outsb
jp
dec
les
xchg
pushl
push
lahf
dec
jg
insb
mov
int3
jno
xchg
shlb
add
push
repz
stc
sub
jbe
shll
lock
cld
repnz
into
mov
stc
out
push
or
mov
rcrb
fldenv
cmp
call
xlat
leave
mov
fsubrs
adc
sub
fnstsw
jne
imul
stc
out
pop
xchg
sti
ret
cmp
inc
ret
add
xchg
stos
xor
jle
popf
jnp
add
stos
sub
pop
in
imulb
cmpsl
ret
jmp
loope
xor
sub
jno
outsl
push
mov
es
jbe
jl
addl
adc
xor
fisttps
jne
repz
xor
fidivs
jo
iret
enter
scas
lret
dec
mov
push
std
mov
inc
stc
mov
cmpsl
iret
lock
jmp
lret
inc
mov
mov
sub
stos
adc
mov
inc
fucomip
std
and
ret
std
in
mov
mov
repz
subl
les
repz
cltd
dec
daa
xor
sbb
not
jb
sbb
out
cmp
cwtl
push
mov
add
or
cmc
jb
cmp
or
fnsave
cmp
ds
cmp
mov
ds
aaa
std
mov
loope
mov
popa
incl
mov
sub
push
mov
aad
or
clc
jae
jg
lret
shll
xor
push
add
insb
add
lods
sub
ss
dec
arpl
outsb
faddp
cli
adc
adc
mov
inc
inc
mul
nop
or
pop
aam
xor
lret
aas
lock
ja
pop
out
jns
addl
jmp
imul
mov
aaa
mov
push
inc
or
imul
sub
cltd
cmp
jg
jle
clc
jge
xor
lcall
call
jbe
bswap
pusha
nop
jecxz
add
icebp
xlat
es
xlat
mov
mov
repz
fcmovnb
xchg
aad
data16
popf
movsb
push
add
je
jbe
std
iret
pop
in
jno
mov
loopne
mov
jne
cld
mov
jno
mov
loopne
mov
jne
cld
mov
add
fbld
imul
pusha
gs
aas
sub
rcll
subl
into
push
sbb
pop
std
inc
lock
inc
int
or
je
mov
addl
stos
addr16
lret
cmpl
popl
push
pop
mov
aad
aad
jp
xlat
mov
jmp
lock
cld
mov
js
test
jae
mov
aaa
stos
mov
jb
push
xchg
lds
ret
inc
mov
in
repz
scas
ret
mov
popf
jl
pusha
imul
fdivs
adcb
in
inc
jne
dec
out
mov
aam
dec
sahf
in
popf
xchg
test
mov
iret
sbb
in
lock
jo
arpl
int
data16
pop
xchg
mov
cmc
cld
out
scas
cmp
std
addr16
xchg
cmp
repnz
in
mov
jns
std
stc
cmp
dec
cmpsl
or
rcll
popf
leave
iret
lret
and
leave
pop
lea
cwtl
sub
jns
xchg
rorl
xchg
fisttps
stc
push
gs
clc
jo
mov
inc
cli
jge
stc
in
dec
decb
rep
outsb
stos
ja
xor
out
in
stc
test
insb
and
or
push
lret
jl
outsb
xbegin
sti
idiv
and
subl
repnz
add
and
iret
stos
mov
push
xor
jno
push
xchg
jne
in
insb
xor
xor
push
pop
sub
mov
mov
mov
out
test
xchg
inc
icebp
addl
push
out
mov
jo
popf
testb
jmp
andb
in
fwait
cmp
mov
xor
or
or
jp
lock
jecxz
out
aam
jmp
std
jmp
push
mov
jecxz
ds
arpl
jp
adc
mov
inc
test
xchg
fstl
or
in
sub
lds
add
std
adc
push
cltd
addr16
cmp
int
lea
leave
es
dec
and
jnp
mov
and
stc
and
dec
int3
ret
jno
daa
les
push
adc
sbbl
xor
sub
jno
push
subl
fdivp
sub
push
sbb
jp
mov
mov
mov
push
enter
mov
jg
add
lods
sti
mov
jmp
mov
jmp
mov
sbb
cmp
lods
ds
jo
clc
mov
in
in
in
inc
mov
mov
loop
sub
pusha
sub
fcoms
movsb
sbb
push
lods
sbb
xor
xchg
add
mov
mov
pop
sbb
cmc
sbbl
cmpsl
jbe
fdiv
xor
test
inc
inc
daa
sbb
mull
mov
jno
out
and
rcl
pop
mov
aaa
jecxz
mov
sub
jbe
mov
pop
xor
pop
enter
outsb
test
push
cli
pop
clc
mov
stos
outsb
stos
mov
push
push
stos
mov
and
pop
or
fcmovne
mov
mov
imul
pop
in
popa
mov
jmp
hlt
inc
out
ret
pusha
movsl
icebp
cmpsl
push
test
into
cli
in
add
jb
pop
loopne
andl
ss
imul
jmp
je
pushf
loope
cmp
scas
sbb
nop
jecxz
repz
fsubr
popf
out
rclb
sbb
push
xor
ja
inc
hlt
and
mov
rorl
test
repz
fwait
js
icebp
outsb
or
in
pop
lods
push
fnstsw
out
jge
cmc
xor
inc
arpl
cld
sbb
movsl
pop
mov
push
sbb
mov
jecxz
js
push
repnz
iret
xchg
lea
aas
adc
ljmp
mov
cmp
into
nop
mov
inc
inc
mov
mov
jmp
jno
sbb
inc
int
outsl
pop
neg
ficomps
fisttpll
cmp
add
add
imul
imul
add
xor
mov
push
cmp
xchg
fnstcw
dec
cld
mov
push
cmp
imul
scas
ja
sti
adc
sbb
jg
stos
inc
push
sbb
xchg
pop
and
repnz
stos
dec
stos
out
xorb
ljmp
rorl
fwait
sbb
add
mov
mov
aas
ljmp
sub
inc
mov
mov
jns
dec
in
cs
pushf
js
xchg
es
adc
sub
stc
add
inc
popf
lret
sub
mov
sbb
call
clc
push
or
fstp
iret
daa
adc
fsub
movsl
rcll
movsl
mov
lcall
mov
lea
mov
loopne
mov
leave
adc
cld
aam
push
mov
dec
adc
fisttps
sub
popa
hlt
out
sub
push
popa
scas
and
dec
clc
arpl
shlb
leave
push
notb
sti
fildll
mov
push
test
mov
inc
test
cltd
test
push
inc
adc
fdivp
sbb
xchg
repz
add
jg
in
mov
mov
sbb
mov
jnp
loop
lcall
mov
pop
sub
iret
in
push
mov
xchg
sbb
test
test
push
lods
push
xorb
jp
in
cmp
xchg
nop
outsb
movb
addr16
xor
jecxz
dec
cmpl
fs
jmp
aas
inc
popf
cli
inc
cmp
in
loop
scas
cmpb
cmp
push
adc
push
mov
repnz
xchg
jmp
dec
not
push
xabort
mov
inc
pop
bound
cwtl
stos
or
sbb
arpl
adc
addl
push
test
cmp
in
mov
aas
xchg
sub
jg
xchg
outsl
dec
into
add
repnz
stc
int
pop
push
iret
das
test
aas
add
stc
jmp
jno
cmp
xchg
cs
ljmp
stc
push
inc
mov
add
xchg
popf
cmp
jmp
leave
add
jmp
fldpi
sbb
sar
cwtl
inc
push
ret
and
fdivrl
jne
mov
jne
test
sti
adcl
sti
icebp
std
lahf
pop
mov
icebp
pop
mov
in
mov
aad
scas
fucomp
leave
jne
gs
stos
movsl
clc
test
stc
xchg
jne
xor
movsl
jne
les
enter
xor
dec
aas
jp
push
lods
iret
cli
sbb
mov
push
testl
stc
ret
pushf
jo
mov
fwait
popf
jne
mov
jne
mov
test
stos
mov
imul
lock
mov
fpatan
push
int
popa
aas
pop
pop
push
jp
leave
dec
arpl
mov
ficoms
mov
icebp
orl
xchg
shll
xorl
fdivs
icebp
ffreep
lret
push
inc
xlat
dec
dec
add
mov
pop
add
dec
jp
inc
negb
pop
divb
scas
push
dec
xchg
mov
cmp
cs
adc
push
push
or
popa
mov
jns
cld
cmp
sar
jmp
jns
insl
int
in
push
icebp
out
lods
loope
jmp
ror
pop
hlt
insl
std
out
sub
dec
mov
dec
lret
jecxz
push
push
mov
subl
pop
gs
loop
mov
inc
dec
xor
cmp
sbb
and
outsl
fwait
insl
lret
fmulp
mov
inc
mov
mov
iret
loop
add
fnstenv
inc
iret
testl
sbb
in
in
sub
neg
cs
mov
push
outsl
pop
cs
cmp
sub
pop
jne
in
cmp
icebp
mov
sar
lahf
jmp
lods
inc
icebp
xchg
xchg
mov
int
pushf
xchg
jae
jno
das
ret
movsl
scas
xchg
push
addr16
adc
setge
sub
lahf
inc
stos
ret
lahf
mov
lahf
jge
aad
sub
out
mov
pop
adc
mov
add
push
insl
es
pusha
sub
addr16
repz
js
or
in
inc
mov
fsts
bound
mov
inc
popa
repz
movb
sub
push
loope
dec
fdivrs
push
aaa
popf
mov
push
cmc
xchg
xor
and
not
mov
mov
in
sahf
pop
icebp
fistl
pop
test
iret
lahf
testl
lds
xchg
mov
or
xchg
mov
sbb
addl
loope
pop
repnz
add
cli
jno
mov
in
leave
loopne
mov
jns
out
mov
jb
cmpsl
pop
imull
pop
fisubs
lea
call
jno
testl
push
sub
aaa
lea
adc
sub
ss
add
sbb
sbb
mov
scas
call
pop
mov
pop
ret
sub
xchg
mov
out
mov
lret
leave
jmp
mov
in
fiaddl
movsb
imul
jmp
cmp
loop
lods
cwtl
imul
stc
sbbl
sbb
mov
mov
mov
cmp
pop
fsub
mov
mov
loopne
fstl
pop
fbstp
sahf
lds
outsb
add
int3
lods
inc
mov
stos
out
push
fnstsw
mov
xchg
shll
iret
in
in
iret
rcrl
leave
cwtl
std
movsl
out
mov
movsb
xchg
cmp
inc
cmp
lcall
lahf
pop
rolb
pop
pop
cmp
dec
std
inc
jnp
xchg
pushf
aas
stos
out
clc
push
and
mov
jno
hlt
jl
lahf
arpl
adc
mov
sub
inc
xor
into
in
rcl
orl
mov
pop
notl
lret
shlb
out
enter
mov
push
or
test
out
jbe
mov
cmc
inc
out
inc
jne
push
fdivrs
inc
int
mov
xor
je
or
mov
cli
jbe
ret
out
xor
stos
mov
in
sub
cmp
in
jb
in
aaa
push
mov
std
cltd
sub
xor
mov
jge
repnz
scas
pop
jo
jle
ja
and
leave
aad
scas
aaa
popf
movsl
leave
test
daa
pop
iret
dec
in
ja
iret
add
sbb
add
xor
leave
cmp
mov
jecxz
sub
mov
or
mov
fwait
dec
outsb
shrl
iret
mulb
push
xor
fcom
insb
sbb
xchg
lcall
fstps
lahf
lods
fsubrl
fucomp
push
iret
add
cli
dec
sbb
fwait
pusha
fbstp
pop
hlt
jl
iret
xchg
stos
leave
repz
pop
dec
ret
das
lahf
ficompl
adc
or
ret
mov
iret
xlat
cmpsl
or
cmc
shlb
push
lret
popf
mov
scas
daa
jo
in
arpl
shl
pop
jecxz
add
lods
pop
fsubl
sub
leave
adc
imul
ss
fldenv
pop
movsl
push
scas
and
aad
add
fwait
lahf
mov
push
lahf
ffreep
in
mov
push
add
shlb
cmp
dec
inc
cmp
std
push
jae
call
fdivl
and
sbb
clc
int
stc
fnsave
jns
popf
loope
and
js
xor
dec
cmpsb
sbb
addr16
lret
clc
fbstp
cmp
inc
movsl
decl
fcomi
mov
push
iret
in
pop
xchg
int
mov
loope
mov
dec
out
dec
out
inc
stos
outsl
xor
pusha
pop
jo
test
cmpl
icebp
add
mov
ds
addb
call
fs
adc
jp
jg
call
std
iret
stc
push
or
jle
mov
ds
std
jle
stc
push
movsb
jge
roll
jp
xor
popf
fcmovnbe
sti
sbb
std
fistl
pop
stc
mov
lret
fisttpll
imul
mov
sub
sbb
loope
ss
aad
jmp
fistl
aad
aam
iret
inc
adc
adc
cmc
lret
stc
je
ss
leave
lret
xlat
pusha
add
pop
jecxz
xchg
dec
push
ret
add
jbe
jp
iret
std
inc
mov
sbbl
test
adc
mov
les
jmp
outsb
cmp
push
lods
jl
stc
add
es
cmp
jmp
mov
loopne
xlat
push
lahf
arpl
fldenv
imul
sub
addr16
fimuls
mov
fldenv
mov
pop
maskmovq
testl
out
xor
mov
mov
or
leave
cmp
jno
mul
lret
ja
cs
aas
xchg
mov
insl
or
int
dec
sub
inc
mov
or
fldt
cmp
cmc
mov
movsl
mov
or
lahf
jmp
fstps
stc
jle
andl
loop
pop
jae
mov
pushf
push
fsubr
hlt
iret
iret
pop
aas
cmpsl
fdiv
and
xchg
xchg
outsb
mov
cmp
xlat
imul
pop
movsl
sbbb
loopne
mov
das
jl
dec
jo
adc
gs
sub
fisubrl
pop
inc
inc
pop
adc
ficomps
mov
insb
and
sbb
jmp
mov
popf
mov
dec
shl
mov
shrl
cmp
insl
sbb
repz
fcoms
lea
loopew
pop
movsl
push
add
sti
jge
pop
lds
rorl
int
in
inc
sbb
and
mov
out
or
push
in
push
xorb
das
push
or
loopne
jp
xchg
jno
lcall
leave
cli
pop
adcl
inc
and
int
sub
js
cs
fsubrs
mov
subl
out
loope
pop
xor
shll
aad
adc
mov
dec
pushf
lea
lret
adc
cld
loope
xor
mov
rcrb
adc
mov
mov
gs
les
pop
movsb
outsl
shrb
lock
lods
inc
cmp
push
ja
mov
cld
jo
das
insb
lahf
jle
gs
push
ds
in
cmp
loopne
mov
mov
jge
ffreep
shll
or
cmp
add
xrelease
ja
pusha
outsb
out
cmp
pop
jne
pop
add
pop
push
sub
push
aas
test
pop
mov
cltd
aam
pop
jecxz
insb
fists
inc
aad
mov
jo
xlat
dec
addr16
pop
jl
js
iret
sub
mov
mov
mov
aad
inc
scas
dec
xchg
test
dec
fists
stos
aam
inc
cmpsl
push
jl
lds
mov
or
addl
mov
fsts
aam
shlb
lahf
fdivr
pop
loop
dec
add
mov
cltd
jg
push
push
les
adc
pop
xchg
xlat
test
jl
pushf
inc
insb
cs
shrb
test
push
mov
cmpsb
mov
popa
icebp
mov
movsb
int
or
inc
mov
shlb
inc
cmp
std
sub
add
out
loop
and
jns
aam
sub
repz
mov
mov
js
push
mov
push
test
adc
out
repnz
sub
movsl
sub
cs
mov
push
mov
out
inc
jp
xchg
cmp
les
jecxz
lock
insl
lahf
js
sbb
dec
fsts
mov
hlt
push
stc
mov
repnz
or
jl
push
call
std
not
xor
add
jne
cmp
stc
or
fwait
repz
loope
fldcw
jl
shlb
ficoml
mov
negl
dec
add
mov
push
inc
pop
sahf
scas
aaa
ret
lcall
mov
mov
jb
repz
fwait
jbe
mov
xor
jmp
jmp
loopne
dec
lcall
dec
dec
out
sub
fwait
mov
in
pop
stc
sbb
jo
mov
jns
cmc
in
test
hlt
mov
cmc
insb
in
lahf
dec
fadds
inc
xor
jecxz
in
call
dec
movsb
stc
pop
adc
movb
cmpl
pop
sbb
or
stos
pop
out
or
lea
cld
cmp
outsl
jmp
jg
or
add
inc
shlb
shr
iret
push
notb
dec
sub
pop
movsl
loopne
jge
out
inc
mov
ja
sub
test
leave
fistl
ret
in
jl
test
xorl
pop
push
std
rolb
adc
sub
aad
dec
mov
ljmp
mov
ds
subl
sti
cmpsl
mov
and
xor
outsl
adc
aam
sar
stos
fldlg2
cmp
jge
repnz
dec
jg
aam
das
sti
cmpb
test
jns
cmc
xchg
clc
cmp
and
mov
mov
lret
mov
push
aas
pop
std
add
cmp
aam
loop
enter
dec
sti
fistpll
lods
sbb
cmpsl
cmpsl
push
jae
aad
outsl
add
mov
push
out
fcomps
xor
push
lea
mov
or
or
out
dec
rcl
mov
jecxz
push
cld
pop
sbbb
xchg
stc
cmp
inc
lods
inc
mov
shr
lahf
jae
cmpb
andl
js
pushf
sti
lret
cmpl
lret
es
loope
ror
lahf
frstor
mov
and
outsb
out
xor
andl
mov
mov
hlt
xchg
rcrb
and
pop
bound
clc
fisubl
das
push
mov
ss
lea
jge
mov
xchg
mov
outsl
cld
fidivrs
inc
jns
sbb
into
loop
out
lret
mov
sub
xor
outsb
aas
das
dec
enter
subl
rclb
sti
pop
or
lea
jmp
data16
das
mov
repz
gs
int3
or
mov
push
movsl
or
sar
les
enter
aam
jp
dec
xchg
enter
sbb
xorl
push
jno
iret
popf
jecxz
dec
xchg
scas
aad
pcmpeqd
shl
cli
mov
cmp
repz
fnstcw
andb
repnz
xchg
js
push
adc
mov
ljmp
or
jge
in
cltd
push
aad
outsb
mov
xlat
mov
shll
xchg
out
jns
jle
lods
jg
and
sar
fldenv
nop
inc
loop
sbb
iret
or
mov
sbb
pop
out
and
jg
fisttps
mov
mov
cmp
std
lahf
sbbl
cmovl
popf
jecxz
or
add
cli
xor
sbb
ret
cltd
dec
or
hlt
rolb
or
movsl
fcmovu
mov
shl
cltd
lock
mov
rorb
push
lret
out
add
roll
lods
stos
bound
xor
out
jbe
xchg
testb
dec
fs
jns
aas
pop
popl
xchg
xchg
dec
sti
pop
fldt
add
shlb
xlat
dec
pop
incl
out
xchg
push
jae
sti
out
pop
add
xchg
in
daa
pop
ljmp
or
shr
rcrl
add
nop
out
std
ror
xor
pop
mov
insl
lock
lock
movl
cmp
int
loope
pop
dec
sub
and
mov
shll
addl
pop
ret
mov
stc
lock
ret
dec
shll
xchg
adc
sbb
in
pop
scas
inc
rorl
test
dec
out
popf
push
pop
aad
rorb
add
pop
loope
sub
lock
fisttpl
mov
jns
push
in
pusha
pop
mov
cmp
lods
hlt
jbe
cmp
stos
leave
lret
aad
sub
aad
mov
adc
adc
jmp
lahf
mov
cmpsl
mov
aaa
dec
out
mov
pop
stc
mov
pushf
outsb
pop
jecxz
es
jo
jne
pusha
out
outsb
pop
jecxz
ss
add
inc
mov
pop
sti
and
cld
jbe
xor
iret
into
jns
sbb
addl
loope
pusha
push
add
cmp
popf
repnz
repnz
test
jnp
loop
mov
adc
lea
cwtl
inc
addl
sbb
cmc
and
ret
xchg
out
dec
inc
mov
jle
loop
dec
imul
pop
sti
inc
insl
clc
mov
sbb
bound
cld
loopne
and
xor
scas
loop
out
sahf
lret
or
jb
dec
fbstp
fsubl
jmp
pop
fcmovu
stc
mov
ljmp
shrl
ljmp
add
popa
imul
lds
insl
pop
popa
repnz
je
sub
push
pop
xchg
neg
stc
stos
push
outsl
flds
pop
cli
out
lods
aam
aaa
loope
out
add
jl
insb
mov
out
mov
mov
adc
lret
repnz
cwtl
mov
orps
fisttpll
jecxz
sti
fldt
scas
push
fbstp
lret
arpl
and
shl
lods
pop
jecxz
cltd
ja
mov
mov
mov
sarl
je
mov
pop
mov
sbb
mov
test
dec
fnstcw
mov
cmpsl
mov
in
jmp
adc
std
pushf
adc
xchg
stc
repz
out
xor
faddl
iret
shll
enter
adc
loop
mov
pop
add
jmp
sbbb
bound
jg
jge
ljmp
out
movsl
sahf
mov
bound
mov
pop
loopne
mov
mov
push
push
xlat
xchg
and
push
jo
dec
fucomp
sbb
xchg
or
or
aam
inc
dec
cld
out
out
in
dec
pop
mov
jno
jmp
repnz
cmp
jae
repz
sbbl
add
das
stc
lret
push
int
idivl
stc
jno
lahf
std
mov
testb
add
pushf
movsb
bound
jno
or
lods
pop
mov
pusha
int
cmc
cli
sbb
fs
xchg
lock
push
push
out
imul
pop
jbe
dec
mov
jp
lea
mov
pop
stos
fmuls
cmp
jns
lock
push
dec
sub
data16
pusha
out
mov
mov
xor
ja
cmpsb
decl
pop
mov
out
loopne
outsl
pop
or
xchg
outsl
lret
out
xor
dec
std
dec
mov
stos
in
out
insl
sbb
ficompl
jmp
cmp
je
xchg
sub
imul
cmp
std
xlat
addr16
ja
imul
pop
test
loopne
icebp
iret
fiadds
std
sbb
std
mov
imul
shll
les
stc
sbb
and
push
dec
lods
push
int
sub
js,pn
mov
insl
in
stc
push
adc
cltd
shrl
jle
arpl
scas
pusha
pop
cmp
mov
jecxz
and
in
jmp
pop
fwait
dec
out
fsubr
or
push
sbb
repz
mov
jno
cmp
mov
jb
test
mov
out
jge
in
pop
mov
cmp
loope
out
stc
out
sbb
sub
shl
and
and
je
mov
popf
dec
mov
cmpsb
cmp
repz
sbb
lcall
mov
clc
popa
lock
dec
addl
rcll
mov
jg
mov
shl
and
divl
out
lods
outsl
roll
rcr
push
sub
jmp
pop
mov
icebp
sahf
jae
mov
in
inc
or
lcall
dec
xchg
mov
xor
insl
jge
in
mov
mul
jmp
imul
jno
fucomip
in
imul
push
nop
call
mov
jnp
push
dec
shrb
mov
lret
mov
addl
mov
jbe
dec
mov
outsb
ds
mov
daa
je
lock
mov
int
sbb
xlat
cmp
xchg
jno
adc
clc
enter
data16
in
out
mov
clc
sbb
cmc
ljmp
push
cmpsl
sbb
mov
mov
xor
mov
dec
in
sbb
lret
divb
js
roll
in
xchg
mov
icebp
cwtl
inc
add
cld
stc
dec
out
idivl
out
add
jp
xchg
jle
shl
pop
shll
roll
aaa
xchg
stos
iret
fstps
push
mov
jb
repnz
sahf
leave
daa
mov
cmpl
lret
in
fldln2
and
jne
inc
sahf
jnp
movsb
mov
gs
and
std
aam
shr
aam
ljmp
sub
scas
jmp
je
push
clc
out
cld
jmp
mov
push
cwtl
push
aaa
pop
xchg
and
test
jp
imul
sbb
subb
outsb
jns
cs
ljmp
aas
pop
or
jmp
fildll
nop
jl
call
popa
mov
clc
mov
push
jnp
gs
shl
cmpl
or
out
fnstenv
icebp
add
cmp
pusha
aam
mov
fisubrs
dec
repnz
stos
int
jo,pn
addb
out
mov
mov
add
test
xor
iret
iret
pop
subl
pop
dec
jmp
xchg
jp
in
test
sti
test
inc
xor
out
imul
sbb
jmp
stc
jg
frstor
mov
xor
sub
repz
add
movsb
mov
mov
jns
cli
mov
out
jo
mov
mov
push
mov
outsl
jl
xchg
hlt
jno
ret
mov
push
movsb
and
fucomip
push
cs
fxch
push
pop
cmp
gs
jae
mov
mov
jne
push
push
mov
sub
leave
int
add
adc
test
sub
mov
mov
pop
lcall
flds
cmp
cmpsl
mov
dec
push
sti
cld
das
sti
mov
pusha
js
testl
out
jecxz
mov
fstpt
dec
jno
jne
rcrb
in
loop
loop
std
pop
dec
roll
mov
fcom
mov
mov
aaa
jns
jno
movsb
and
and
clc
mov
mov
popf
mov
outsl
outsl
push
pop
aaa
mov
lock
xorl
cmpsl
jno
hlt
sti
roll
cld
xchg
pop
popf
movsb
nop
call
sub
repz
cli
in
push
lret
roll
xchg
add
int3
mov
inc
decl
jns
ret
sub
mov
je
cs
mov
out
std
dec
fildll
lahf
jne
cmc
or
inc
lret
stc
pop
xor
xchg
nop
test
stc
inc
lret
lea
lock
fwait
jmp
pop
pop
mov
push
je
hlt
mov
repz
test
cmp
push
fmulp
stc
in
and
push
add
iret
dec
outsb
stos
mov
repz
add
aaa
xlat
outsl
fcompl
cmp
lods
xor
mov
mov
hlt
pop
idiv
in
test
cmp
push
xor
ret
in
pop
sarb
dec
scas
dec
sub
adc
ret
divb
push
dec
fdiv
je
jmp
jl
mov
mov
lock
out
lret
imul
add
lock
mov
imul
das
cmpl
sahf
inc
xor
hlt
and
jge
mov
nop
xchg
mov
jmp
push
inc
mov
cmpsl
js
addb
push
and
loopne
popa
xor
dec
outsb
nop
xor
mov
les
fildl
orl
daa
ret
mov
imul
in
add
xchg
icebp
loope
rolb
mov
incb
sbbb
mov
insb
fnstenv
inc
inc
jbe
jg
js
add
push
add
cwtl
mov
xor
mov
insl
std
sbb
inc
add
xchg
mov
sub
cld
push
mov
jle
push
cmp
push
movsb
vmovq
pop
imul
and
aas
loop
fs
insl
js
lock
in
out
outsl
fcmovne
stos
or
push
mov
rcrb
nop
sub
stc
js
into
sub
leave
mov
daa
jge
pusha
adc
fmull
mov
pusha
rclb
xor
enter
clc
jp
mov
es
out
and
repz
ret
inc
cmp
ret
loopne
movsl
scas
dec
add
mov
jg
inc
sub
lahf
lcall
and
dec
int3
lahf
jne
cmc
prefetch
or
jo
xor
mov
iret
std
data16
push
iret
shll
imul
pop
push
notb
movsb
sbb
jo
jbe
stos
cmc
and
push
jle
repz
push
lahf
repz
cmp
clc
insl
pop
cld
js
cmp
repnz
lock
mov
sub
jl
sbb
repnz
adc
jno
pop
movsb
int
fnstcw
addr16
sub
movq
pop
ss
out
fmull
mov
xchg
mov
addr16
out
je
stos
stos
loope
jl
push
pop
mov
cmpl
fadds
pushf
add
js
into
push
mov
dec
out
ret
gs
pop
pop
dec
cmpsb
fcomp
stos
cmpsl
mov
cmpsl
xchg
mov
xor
fst
push
add
fwait
or
cmp
push
mov
pop
fldl
shrl
jl
testb
aam
jno
mov
jl
mul
ficoms
xor
add
sbb
js
outsb
or
mov
push
imul
shlb
lret
xchg
fwait
mov
hlt
in
jbe
mov
popa
out
ljmp
hlt
pop
stc
out
push
lods
jnp
pop
jecxz
cmp
leave
lods
jb
push
clc
repnz
pop
mov
fisttps
jne
sub
in
das
lods
xchg
imul
or
ret
pop
mov
fwait
in
popa
insb
cmc
inc
repz
mov
scas
addr16
sahf
ss
aam
pop
rcrl
fdivl
sub
pop
lahf
imul
out
fsubrs
mov
mov
subl
lock
push
insl
mov
std
sub
sub
in
sbbl
jg
sbbl
mov
jecxz
cmp
outsl
mov
sub
mov
push
iret
cld
push
xlat
xchg
mov
sub
stc
das
and
lods
divps
scas
repz
jg
pop
orl
add
stc
push
movsb
inc
stc
movsb
mov
or
sub
test
shrl
fs
jbe
lret
dec
pop
jmp
mov
cmp
xchg
cmc
push
or
push
out
cli
dec
es
dec
dec
arpl
fadds
out
daa
cltd
fmul
mov
xchg
sbb
pop
fdivrs
xchg
push
fimuls
shr
outsb
jnp
dec
imul
shrl
aaa
dec
icebp
outsl
je
dec
outsl
sti
pop
cmp
dec
idiv
dec
fwait
test
dec
stc
inc
std
cmp
orl
xchg
out
add
ds
test
add
es
ja
lret
fucomp
mov
cmp
mov
dec
add
jmp
adc
inc
inc
shrb
pushf
in
mov
sub
arpl
mov
inc
out
lahf
out
in
mov
repnz
je
bound
xor
lret
ds
add
add
out
lods
jg
lods
cld
xchg
lock
sub
int
icebp
scas
popl
mov
popa
mov
mov
lret
push
jmp
pushw
xchg
add
mov
cmp
adc
jecxz
repnz
push
inc
scas
jmp
add
mov
or
cmpsb
fwait
loope
adc
fwait
xchg
jbe
jne
cld
mov
jno
mov
loopne
mov
jne
cld
mov
jno
mov
loopne
mov
cmc
addb
xlat
pusha
clc
jno
pop
js
fnstsw
fcomip
call
popf
xlat
pusha
divb
pop
jbe
scas
aas
fcomip
call
popf
cwtl
xlat
pusha
imul
addr16
pop
out
loopne
mov
jne
cld
mov
jno
mov
loopne
mov
jne
cld
mov
jno
mov
loopne
mov
je
imul
jmp
push
mov
ljmp
bound
les
push
sarb
loopne
and
jne
jl
and
stos
aas
popa
lret
clc
or
sub
xor
aaa
movsb
adc
inc
gs
jbe
inc
movsl
fs
xchg
or
out
inc
popf
push
mov
loopne
lea
add
adc
jp
cs
push
mov
fs
jle
mov
jle
scas
inc
mov
fs
xor
rcrb
lret
ja
pop
call
mov
add
and
mov
add
mov
mov
add
sar
jg
add
mov
mov
std
push
mov
int
aas
add
stc
jle
jno
cmp
mov
jbe
xchg
call
loopne
add
sahf
dec
pop
mov
mov
sub
sub
out
jae
or
sbb
out
es
js
fldln2
mov
jmp
loop
aas
ljmp
xchg
test
lods
popa
lods
icebp
and
stc
xlat
add
lds
lods
adc
inc
mov
xchg
cmc
sar
xchg
xchg
stc
xor
mov
push
xchg
xchg
js
sar
pop
mov
addl
jecxz
testl
fists
add
inc
scas
mov
aas
add
adc
jbe
cmpsb
add
sub
add
iret
jp
out
add
inc
int
or
lods
iret
js
lcall
ficomps
mov
pop
xor
scas
out
add
lea
add
jmp
adc
ja
mov
xlat
fstps
jecxz
test
mov
iret
or
inc
xor
add
xchg
lahf
clc
push
flds
sub
outsl
pop
mov
movsb
jmp
sbb
ss
fadds
jp
mov
jecxz
ret
jno
icebp
in
pop
add
test
repnz
pop
lret
fidivrs
iret
mov
in
test
pop
jg
and
push
add
ja
out
jo
add
mov
popf
jnp
mov
mov
fimuls
add
push
xor
mov
inc
xor
fdivl
test
jbe
jp
popf
cli
inc
pop
imul
call
bound
movsl
ret
xchg
push
mov
lods
xchg
movsl
imul
popa
sbb
test
mov
pop
fs
pop
outsb
jno
dec
sub
jbe
sti
mov
leave
add
mov
or
ja
lock
jns
jl
cmpsl
push
sbb
rcrb
mov
das
or
pop
in
jo
ffreep
stos
repnz
cmp
cmpsl
jno
ret
rcll
sti
sub
loopne
sub
clc
jae
orl
inc
or
cmc
std
fdivrs
int
fcomps
subl
jmp
jecxz
repz
iret
in
cmp
pop
popa
out
rcr
cwtl
mov
jge
jge
addb
sub
sub
cmp
mov
jno
lahf
mov
jl
stos
mov
jg
je
mov
addr16
repz
loopne
mov
out
mov
jp
decl
sbb
adc
je
lds
cli
in
mov
mov
or
sar
repz
xor
lahf
sti
popa
idivl
das
outsl
adc
adc
in
outsb
rolb
hlt
fistpll
repz
mov
sbb
fcomip
in
icebp
jo
dec
insl
adc
sti
pop
call
cmp
pop
or
insl
loope
dec
daa
xchg
call
jno
fstl
push
jl
push
xchg
fisubrl
das
mov
pop
mov
mov
hlt
dec
jmp
int3
mov
mov
sbb
dec
lods
pop
stos
nop
imul
or
stos
xor
jbe
lahf
ljmp
push
push
pushl
js
pop
in
and
mov
pop
lret
jae
cmp
insl
mov
std
sarb
ret
cmp
out
outsb
xchg
in
or
outsb
in
repnz
sbb
lock
lret
mov
loopne
inc
add
leave
jl
cmc
in
nop
arpl
sub
fwait
out
add
inc
jl
stos
leave
aas
ja
jmp
sahf
ljmp
jno
imul
mov
jne
cli
test
je
in
adc
movsb
loopne
lds
andb
das
jnp
mov
and
inc
add
pop
mov
mov
iret
fildl
pop
iret
cmc
shl
xchg
js
lea
stc
ret
adc
dec
and
lret
dec
test
repnz
sub
push
and
and
stc
pop
std
popf
sti
add
inc
subl
sub
test
xchg
xor
ljmp
adc
cmpsl
rolb
and
out
sub
int3
lods
cs
pop
jl
mov
repz
mov
divl
imul
dec
in
adcb
lock
iret
mov
addr16
mov
icebp
std
mov
or
in
clc
popf
sbb
in
add
mov
in
adc
pop
mov
push
pop
loope
stc
lret
rcl
fnsave
xor
inc
in
inc
test
pop
orb
mov
xchg
push
hlt
out
xchg
mov
out
fdivl
cmp
mov
iret
pop
shl
mov
cwtl
fwait
jp
mov
mov
hlt
js
jl
stos
mov
cmc
test
sbb
mov
pop
pop
aam
insb
xchg
sbb
pop
xchg
std
mov
int
lock
sub
lret
mov
jg
dec
fcmovne
add
ret
sbb
fcoms
jnp
mov
jb
pop
cmp
xorl
jle
mov
lret
imul
icebp
ss
leave
ja
add
imul
dec
push
push
out
cli
mov
cmpsl
sarl
aam
into
insl
gs
push
pop
xlat
mov
lret
shll
jno
cmpsb
mov
sbb
ret
loop
fdivl
sti
lock
fildll
jge
lock
in
std
mov
std
pop
dec
and
rcl
sti
or
ja
ss
inc
cmpl
cld
jno
jno
inc
stc
cld
enter
fsub
loopne
sbbl
and
lds
addr16
leave
shr
xchg
fstpt
mov
call
pop
cvtpi2ps
dec
add
ret
sbb
ds
call
sbb
push
mov
mov
and
pop
outsl
pop
jmp
clc
cmc
int
pusha
sbbb
fstl
mov
push
jb
bound
add
cmp
icebp
clc
fmulp
cmpsl
jne
out
inc
mov
pop
or
jb
or
mov
lret
int3
into
cmpsb
iret
rcl
adc
loop
in
dec
xor
pop
shlb
mov
dec
shll
and
sahf
jo
outsl
push
pusha
inc
jns
imul
push
cmp
pop
jle
subl
push
stos
aad
sbb
ret
pop
inc
fcmovnb
pop
sub
cmpsl
cmp
fcomi
cmpsl
jecxz
fsubp
popf
lret
shl
out
out
adc
and
sti
xchg
out
idivb
repnz
jmp
loop
xor
lahf
lods
and
test
loope
mov
scas
pop
rol
fwait
ljmp
cld
push
mov
int
or
jecxz
push
int
or
subb
in
in
loop
popf
out
pusha
out
push
or
and
mov
gs
mov
leave
fcomps
loopne
repz
popa
jp
std
repnz
cmp
cmpxchg
dec
cwtl
pop
fcmove
mov
rclb
stos
inc
jp
fcmovu
dec
sar
test
and
in
in
fadds
cltd
addl
bound
pop
int3
outsb
hlt
jl
iret
popa
xchg
repz
in
cwtl
inc
cmpl
xchg
mov
imul
sarl
int3
fisttpl
stc
sub
shlb
push
loopne
idiv
xor
std
rcrl
sti
adc
dec
dec
jns
mov
adcl
imul
push
int3
lock
push
fwait
xor
cmc
cmc
xor
push
push
fucomi
push
aaa
xchg
fisttpl
lahf
fs
add
in
mov
mul
pop
jecxz
mov
idiv
in
ret
mov
aas
push
shl
mov
in
fstps
adc
xchg
sbb
xchg
scas
sar
push
ss
lods
pop
jmp
mov
dec
jmp
les
das
xchg
cmp
pop
push
test
lock
movsb
xor
push
imul
pop
lock
mov
lahf
xchg
test
pop
cld
mov
mov
std
ljmp
pop
insl
xchg
add
jle
cwtl
sub
xor
aaa
fcompl
ror
inc
add
shlb
call
cmpl
or
cli
into
repz
mov
icebp
repz
xor
inc
outsb
in
in
fsubl
xchg
xchg
xor
divb
insl
repz
in
repnz
divl
stc
adc
and
divb
stc
ret
inc
xor
aaa
xchg
xchg
pop
pushl
fstps
jo
dec
les
aad
pop
iret
xchg
jmp
or
mov
out
js
and
ret
ret
scas
mov
jmp
mov
pushf
sarl
cmp
jecxz
test
aaa
xchg
rorl
cmp
rolb
insl
call
je
outsl
push
inc
dec
int
stc
sbbb
stc
inc
or
gs
dec
and
xor
cld
dec
mov
dec
fcomip
mov
cmc
shrl
add
arpl
push
rcr
adc
divl
es
dec
arpl
cmp
mov
in
je
jmp
cmp
pushf
adcb
jl
lods
lods
inc
xchg
int
xlat
shr
stos
rcrb
inc
cmp
pop
push
mov
arpl
iret
repz
scas
lods
adc
mov
jge
dec
adc
imul
pop
jns
push
xorl
xor
mov
out
rolb
imul
dec
jmp
or
and
jmp
lret
pushf
dec
ds
stos
xor
mov
dec
mov
jno
aas
imul
mov
lahf
leave
push
jnp
xchg
xchg
fnsave
cmpsl
pusha
xlat
call
xor
pop
lahf
mov
loope
dec
mov
lods
imul
imul
sub
mov
imul
je
or
fdivs
jecxz
mov
lcall
xchg
hlt
call
fildll
fsubs
cmp
iret
pop
mov
andb
fildll
repz
ret
xchg
les
fcmove
rolb
icebp
fdiv
and
into
sbb
lock
fdivr
fidivs
fists
push
cmpsl
pop
pop
stos
jbe
stos
in
fsubrs
addb
outsl
push
loope
sub
push
ljmp
sbb
fdivp
faddl
lock
or
iret
es
addr16
adc
push
loopne
cltd
mov
jne
std
xlat
aas
pop
push
jns
in
inc
cs
ret
inc
icebp
mov
stc
out
dec
mov
cmp
adc
push
xchg
int3
hlt
insl
sti
cmp
js
xor
cli
shlb
iret
add
in
lret
inc
clc
fcoms
clc
rcll
pop
mov
xor
pop
mov
adc
insl
sub
lret
call
xor
lret
add
push
lret
shll
aas
or
test
jns
je
push
repz
dec
lcall
in
cmp
cmp
jns
mov
mov
repz
aad
push
scas
idivl
add
div
cmp
mov
in
xor
aad
push
cmpsb
lods
xor
xchg
sbb
cmpb
ss
jmp
out
fst
fst
pop
test
rcll
shl
imull
add
cmpsl
icebp
pop
jne
or
ds
mull
test
lea
sbb
push
push
mov
stos
jg
cmpsl
inc
dec
stc
adc
roll
xchg
mov
sahf
cmp
leave
pop
dec
stc
fimull
out
push
and
and
and
jbe
cmp
sub
add
js
jbe
lods
add
mov
stc
xor
arpl
fisttps
mov
stos
dec
stc
push
mov
leave
adc
aaa
inc
xor
scas
addb
mov
sub
fistpll
adc
jno
stc
jmp
test
out
jns
cmpb
std
addr16
mov
fwait
or
jb
jecxz
in
outsb
mov
inc
cmc
in
fistpll
in
mov
imul
xchg
cwtl
adc
mov
imul
ffree
movsb
loop
mov
jns
neg
fcoml
shr
jmp
shlb
xchg
add
out
push
insb
movsl
dec
ret
loope
dec
sahf
dec
ljmp
fs
pop
data16
jo
jl
adc
cmp
out
inc
mov
pop
add
flds
mov
mov
jb
sar
addr16
jns
adc
and
and
cmpsb
inc
out
add
lock
test
mov
lock
gs
push
sahf
lods
cli
mov
ja
in
imul
notl
pop
jg
je
and
subl
push
mov
sub
pop
test
clc
fucomi
jecxz
jmp
dec
push
lret
nop
pop
stc
xchg
movsb
mov
jge
clc
adc
out
andb
sbb
rcll
or
mov
movsb
inc
sbb
jno
dec
nop
ret
add
sub
pop
dec
pop
jg
cli
lods
idiv
jp
enter
jbe
insl
int3
adc
or
repnz
aam
idivb
cmc
cwtl
fs
sti
adc
repnz
mov
and
imul
push
test
call
aaa
nop
in
xorl
les
shl
jge
mov
or
pop
mov
bnd
stos
daa
jae
cwtl
mov
mov
mov
out
bnd
pusha
xorl
stc
jb
lock
push
adc
xlat
into
push
xchg
push
mov
pavgw
cmpb
icebp
cmpb
cmc
lods
push
pop
lret
dec
pop
jg
bound
xchg
shlb
sahf
repnz
jo
jbe
mov
mov
out
inc
push
xchg
mov
lahf
fiaddl
add
add
sub
sbb
push
sbb
push
test
call
sub
cmp
stos
cmpsl
sub
pop
pusha
push
fcomip
dec
pop
jecxz
imul
sub
idivl
dec
push
jecxz
mov
insb
mov
stc
cli
add
cmp
repz
rorb
in
pop
jl
divl
jge
popf
std
out
sti
loop
cld
adc
add
inc
addr16
icebp
mov
shl
fistpll
adc
mov
sbb
lcall
or
lret
jne
and
lret
push
mov
testl
outsb
jmp
std
jg
icebp
jb
shrl
divl
adcb
push
int
imul
cs
sub
fcomi
pop
jno
rol
dec
cmovl
test
insl
sti
jbe
stc
sub
add
sub
sti
mov
out
jo
add
outsl
or
test
popf
hlt
adc
test
add
test
std
loope
movsb
pop
cmp
inc
and
divb
fldl2t
in
jae
jns
icebp
cmpl
mov
mov
mov
daa
in
dec
stc
inc
mov
lcall
in
jo
sbb
cmp
arpl
mov
or
out
sub
pop
xchg
rclb
lods
xchg
lcall
int3
lock
addl
mov
cmpsb
lods
dec
fdiv
and
popa
sbb
inc
test
cs
out
je
cmpsl
sub
clc
cli
or
fidivrs
jge
les
push
outsl
into
mov
aas
popa
imul
xchg
orl
aaa
sbb
sub
repnz
mov
or
jo
stc
stc
xor
out
enter
scas
adc
jp
xor
out
mull
ljmp
xchg
xchg
dec
mov
push
pop
stos
out
add
mov
mov
jl
adcb
cmc
das
dec
cmc
cmpsb
cmpsb
jmp
stc
mov
clc
loope
inc
jecxz
stc
add
test
lahf
sub
pop
push
insl
push
jl
adcl
lea
js
movsb
or
push
push
jno
pop
out
and
imul
jge
je
pop
inc
clc
aam
enter
roll
int
iret
xorb
ljmp
mov
add
icebp
outsl
dec
rolb
test
fstpl
ljmp
lock
lahf
pop
clc
fwait
leave
mov
pop
push
mov
xchg
xor
fistpl
rolb
jg
mov
repnz
pop
insb
push
adc
push
adc
enter
ljmp
inc
sbb
sub
and
ljmp
sbb
jnp
xorb
stos
mov
stc
mov
pushf
lahf
jbe
sub
sahf
xchg
repz
add
fsubrs
scas
in
mov
js
lods
mov
rcrb
mov
loopne
mov
pusha
xchg
xor
and
mov
xchg
aaa
push
mov
cmpsb
sbb
mov
jg
xchg
clc
das
and
in
fiaddl
and
gs
cmp
int3
ret
sub
dec
fsubl
mov
andb
or
or
fists
mov
stc
lcall
loopne
sub
sub
xchg
jmp
fwait
xor
fnstenv
dec
xchg
dec
aaa
inc
jle
imul
subb
in
orl
outsb
dec
mov
mov
cmp
cmc
in
aas
sbb
mov
xchg
jno
jo
add
movsb
insl
rcl
adc
hlt
jl
mov
mov
ss
nop
enter
fst
push
movsl
loopne
shl
hlt
roll
cmpsb
sub
mov
bound
test
mov
test
mov
cltd
fwait
push
stos
js
test
mov
in
jo
cmp
in
push
stos
push
dec
fists
add
xor
daa
int
leave
inc
out
dec
loop
xchg
add
nop
ficoms
or
leave
in
pop
das
fcomps
push
pop
int
sbb
daa
in
movsl
out
insb
push
fimull
lret
aaa
shl
fstpt
inc
pop
cmp
lock
shll
stc
cltd
lock
mov
orb
inc
xchg
outsb
pusha
jmp
and
popa
sub
ficompl
jns
xchg
pop
push
mulb
inc
xchg
sahf
dec
test
call
in
cmp
inc
fs
shlb
bound
cmp
cmpsl
clc
test
stc
fstpt
push
mov
lcall
and
imul
pop
mov
stos
lods
mov
mov
dec
mov
lret
in
push
pop
mov
movsl
jle
rolb
test
xchg
sti
gs
xor
les
mov
lret
shrl
and
cmp
icebp
xchg
dec
mov
jmp
aad
inc
shlb
push
mov
mov
cmpsl
and
test
mov
sub
mov
add
xchg
stos
cmpsl
mov
inc
inc
aam
add
lcall
inc
out
dec
jg
lret
call
popa
fdivr
std
icebp
cmc
jmp
lods
cld
in
cli
inc
cmpsb
mov
jge
frstor
fildll
scas
out
mov
lahf
dec
popf
icebp
mov
std
sub
mov
inc
orl
subb
sbb
sub
mov
adc
inc
sbb
jbe
int
sti
sti
push
add
stos
cmp
sbb
pushf
sti
sub
mov
lods
fldl
xor
push
lcall
ljmp
icebp
fists
int
rcrb
leave
ja
xchg
mov
xlat
sub
xchg
icebp
inc
pop
sarl
mov
std
inc
loop
int
ret
sarb
stos
dec
xchg
push
push
test
hlt
loop
aas
cmp
jno
daa
fsubl
iret
leave
or
fldt
and
les
sahf
repnz
sbbb
push
or
mov
out
jmp
pop
mov
cmp
daa
mov
insb
jb
xchg
cld
loopne
lods
dec
lret
pop
in
cld
cmp
es
rol
mov
sub
stc
mull
in
sbb
loope
std
das
test
repz
fcmovb
sti
push
adc
pusha
ja
test
mov
es
jge
shl
jecxz
cmpsl
rcr
aas
or
mov
clc
push
jl
movsl
xchg
mov
push
lahf
jae
push
hlt
hlt
stc
inc
adc
loopne
sti
push
or
lea
xor
lret
push
fisttpl
in
daa
ret
pop
mov
or
jae
in
jge
add
notb
add
cmp
shlb
xlat
repnz
push
push
int
je
fdivp
jo
jg
pop
enter
stos
push
sub
and
addr16
dec
sbb
ds
cs
neg
movsl
mov
inc
in
idiv
and
pop
outsl
lock
cwtl
int3
push
push
jg
subb
std
les
out
lock
out
xchg
jno
inc
and
addl
pop
out
push
out
ficompl
add
call
insb
xlat
dec
pop
pusha
jmp
mov
mov
add
sbb
pop
push
pushf
dec
mov
jle
add
inc
mov
clc
idiv
bound
jl
loope
in
push
push
ljmp
and
int
dec
inc
jo
leave
cmp
test
cli
mov
out
pop
jg
mov
and
test
jo
iret
sti
std
mov
bound
movsb
pop
hlt
loopne
cmp
mov
jnp
imul
std
jns
jp
std
or
xchg
cmp
clc
daa
es
cwtl
js
jmp
mov
stc
mov
jns
adc
pusha
in
jno
pop
sub
xor
push
inc
mov
dec
fcmove
mov
scas
outsb
sbb
popf
std
xchg
es
stc
ss
adc
jne
jge
cmp
pop
jl
rcr
aad
in
ret
xor
imull
cmp
and
inc
and
fndisi(8087
cltd
js
leave
dec
sbb
add
pop
loop
jecxz
mov
js
aad
and
pop
fists
push
cmc
test
dec
xor
scas
mov
pop
push
xor
sub
negl
mov
scas
loopne
jo
mov
std
mov
iret
cmp
xchg
lock
loope
clc
iret
subl
cmpsb
rcl
loopne
loopne,pn
lahf
jno
add
inc
enter
shl
enter
not
pushf
mov
lret
stc
fiadds
cmpsb
mov
nop
adc
std
sbb
push
sub
adc
sub
adcl
ja
jns
mov
jb
out
mov
pop
outsb
mov
pop
pop
in
dec
jno
imul
dec
pop
pop
xor
clc
int3
enter
xor
adc
push
mov
push
pusha
mov
int
adc
stos
adcb
mov
jns
arpl
lahf
xor
cmp
out
faddl
xchg
es
push
mov
shr
jmp
in
push
movsb
fimull
fwait
cmp
dec
pusha
out
out
popf
jae
outsl
adc
scas
and
xchg
repz
loop
and
cltd
shrb
and
in
inc
subb
outsl
push
pop
jno
xchg
push
popa
mov
add
fwait
rolb
int
pop
xchg
fldcw
xchg
cmp
mov
adc
xchg
xlat
cmp
loop
faddl
fidivrl
fwait
jnp
lods
dec
scas
mov
shll
pop
push
lret
jge
or
je
lret
insl
pop
and
in
std
lret
mov
cld
mov
xlat
insl
jl
mov
xchg
xor
fstps
in
jo
xor
sti
dec
mov
test
int
test
push
sbb
cmpsl
loopne
cmp
outsl
ret
dec
cld
insl
std
push
mov
pop
jo
sbb
pop
mov
ret
fwait
je
cmp
cmpsl
sahf
dec
loope
push
cmc
inc
add
data16
popa
cwtl
push
insb
add
pushf
dec
lret
lock
ja
cli
or
push
or
fsubl
sahf
and
daa
xlat
lods
aam
fisttpl
pop
pop
scas
in
add
adc
mov
iret
and
sbb
lds
add
and
test
bnd
pop
popa
lahf
mov
push
jne
jno
sbbb
add
jl
mov
addb
fwait
sbb
imull
adc
lds
mov
mov
ret
popf
into
fldcw
and
pop
shl
ffree
xor
mov
imul
psrlq
fmul
fwait
pusha
lods
jmp
cld
into
insl
sbb
imul
adc
cmc
jmp
clc
jp
nop
xor
outsl
dec
jmp
scas
inc
addl
sbb
jle
std
repnz
mov
push
jne
sub
add
cmpsb
mov
adc
inc
pusha
fcmovne
cs
test
cmpsl
or
aad
sbb
into
cmp
cmp
fldcw
fstpl
adc
stc
in
popf
out
mov
lahf
xlat
jge
mov
jno
cmp
mov
lret
adc
leave
int3
jp
daa
adc
rolb
sub
mov
adc
orl
repz
ss
enter
push
adc
fcomip
nop
loopew
mov
adcl
cmpb
push
or
jl
shll
inc
stc
shll
movl
arpl
push
aad
loop
mov
add
icebp
sub
lds
sarl
cltd
cs
or
cmp
js
xor
idivl
sub
das
sbb
adc
loopne
test
adc
rcrl
push
ret
stos
das
psrlw
mov
dec
stos
leave
insl
aaa
pop
stc
pusha
int
idiv
je
mov
cmp
repnz
repnz
mov
cmpl
shll
sub
push
pop
ret
andb
jno
repz
pop
push
cmp
test
jns
mov
scas
popf
rcrb
add
gs
je
push
stc
xchg
cmp
xorl
push
jns
add
popf
je
rolb
flds
je
push
stc
lret
cmp
sti
gs
jno
stc
lods
jo
cmp
add
and
stc
mov
cmp
add
mov
stc
dec
mov
xor
int3
std
loope
mov
dec
lock
and
jb
mov
jo
fcomp
dec
lock
cmovbe
std
movsl
inc
sbb
dec
mov
mov
adc
lock
sbb
out
std
clc
jns
pop
fwait
lahf
int
int
mov
pushf
jns
inc
dec
std
ficompl
lret
mov
mov
mov
inc
jne
jecxz
repz
sub
jns
popf
dec
adc
stos
fdivp
mov
pop
movaps
repnz
mov
fdivrl
and
pop
movsb
je
inc
arpl
push
sub
mov
daa
mull
mov
movsl
jg
sahf
arpl
in
shr
movsb
push
jge
test
sahf
sti
add
out
hlt
imul
das
add
pop
mov
ja
std
jecxz
dec
cmp
add
jb
js
in
arpl
add
imul
enter
xor
subl
push
and
test
in
pop
pop
addl
jmp
push
push
nop
cmp
mov
jge
rolb
pop
stc
ss
negl
dec
insb
repnz
daa
stos
das
xchg
aas
inc
scas
in
jmp
mov
inc
add
test
ja
and
jo
fimuls
insb
popf
jg
mov
push
cmp
jle
sbb
pusha
ss
push
enter
in
in
lcall
lret
or
clc
icebp
mov
in
repz
mov
stc
scas
jmp
movsb
iret
ja
adc
sub
iret
adc
mov
xor
pusha
dec
pop
add
fcompl
adc
jecxz
mov
pop
test
jmp
icebp
mov
stc
dec
pop
xchg
dec
push
dec
push
pusha
push
outsb
popf
sbbb
addr16
pop
lahf
jmp
movsl
out
out
gs
cmp
daa
pop
jns
shlb
fildll
loop
lahf
daa
lock
mov
add
shl
cmc
repz
or
fildll
xchg
loope
test
inc
stos
stos
test
daa
push
cmp
and
out
aam
idiv
jmp
xor
push
aam
hlt
mov
mov
loope
add
and
lock
push
addb
jns
sbb
out
pop
adc
out
fadd
setl
iret
in
les
popa
pusha
lret
pop
das
sub
mov
pop
shll
loopne
ds
int
cmp
jnp
jle
mov
test
jo
out
xor
decl
fstps
aaa
shll
push
loope
xor
add
andl
inc
adc
sub
push
and
int
outsl
mov
cwtl
outsb
jecxz
popf
pop
scas
pop
mov
and
sbb
adc
repnz
cmp
jecxz
stc
js
scas
icebp
daa
dec
test
xchg
stc
lcall
std
rorb
and
fwait
iret
push
cmp
lock
jbe
subb
dec
lahf
fbstp
sarb
sbb
dec
push
imulb
or
cltd
out
cld
cli
cmp
jecxz
repnz
fsubrl
dec
repnz
or
pop
jp
jmp
push
out
dec
out
adcb
xorb
cmp
cltd
cmp
dec
fcoms
mov
mov
jb
mov
inc
shrl
es
mov
insl
sti
std
bndstx
test
fisttpl
out
mov
mov
lock
filds
xor
mov
dec
std
cltd
mov
sbb
push
int
inc
mov
stos
out
jl
inc
pop
in
sti
push
idivb
dec
rcr
add
sbb
jl
push
fcoml
sti
jmp
leave
les
push
aas
std
js
fistps
arpl
jge
jmp
aas
rorb
enter
aaa
repz
inc
fsubr
jo
mov
xchg
xchg
js
mov
stc
push
mov
sarl
cld
jae
pop
add
loopne
icebp
iret
push
insb
call
imul
push
std
addb
mov
fmul
mov
clc
xchg
fdivs
out
std
xor
std
in
mov
jno
stc
fidivl
push
lock
mov
lcall
push
rclb
pop
sub
rcll
ljmp
sbb
imul
inc
mov
jb
pushf
mov
sbb
fdivl
pop
mov
stc
dec
mov
int3
jns
mov
mov
fsubr
dec
mov
aad
enter
pop
add
ss
aad
xor
push
in
mov
lret
dec
xor
inc
stc
xor
lods
fbstp
std
mov
dec
std
sub
iret
arpl
aam
jno
mov
adcb
jge
pusha
outsl
jg
call
pop
out
fsubp
mov
in
pop
jle
pusha
das
icebp
in
push
mov
repnz
js
jae
pusha
jl
mov
loope
pop
vsqrtpd
pusha
fbstp
inc
fistpll
std
jb
ret
std
xor
pop
hlt
xor
repz
loopne
lcall
or
insl
inc
stc
adc
pop
lock
stos
jecxz
mov
cmp
jno
mov
mov
rcr
fneni(8087
test
insl
inc
std
popa
inc
sub
mov
aas
outsb
movsl
stc
and
xchg
icebp
out
ljmp
cwtl
add
loope
and
lds
stos
sub
jb,pt
fistpl
cmp
gs
dec
and
into
mov
jmp
outsb
inc
jmp
aas
cld
lahf
cli
fmulp
or
add
mov
iret
lret
xchg
mov
mov
push
adc
jns
mov
jp
test
imul
jmp
out
outsl
daa
shl
repz
jns
pusha
jns
aas
cmpsl
sarb
sbb
cmp
jp
xchg
icebp
mov
add
call
in
jmp
xchg
mov
repz
sub
add
cli
inc
div
mulb
mov
jne
jge
jg
lods
cld
clc
les
inc
push
test
outsl
xchg
or
test
push
jl
fsts
cltd
outsb
mov
jns
xchg
mov
aaa
sti
in
icebp
xchg
push
repz
mov
decb
insl
sti
pop
xchg
cmpsb
mov
aad
fcomi
cmp
push
pop
insb
adc
sbb
js
mov
adc
imul
dec
cmp
jno
jo
test
xor
adc
xchg
mov
stc
fnstsw
jne
mov
or
xchg
jno
mov
fcomip
dec
mov
cltd
repz
fwait
cmp
loop
movsl
mov
mov
sbb
xor
pop
loop
int3
es
mov
shr
dec
xor
add
call
mov
jo
mov
xor
ss
cli
je
jbe
jecxz
cmp
insb
shr
in
dec
fisubrs
test
insl
push
mov
testl
cmpsb
in
aas
push
iret
ljmp
js
xor
xchg
data16
adc
mov
xchg
fistpl
lds
lahf
cmpsl
lds
xchg
lock
fistps
fisttps
mov
ret
test
sbb
das
addb
adc
je
loop
inc
jno
lea
lahf
jl
sub
xlat
jo
rclb
jb
jmp
ss
push
add
outsl
and
sub
lret
jg
loopne
mov
cmp
jecxz
dec
cmpl
dec
adc
push
sar
faddp
pop
cmpsl
test
fimuls
cld
fwait
repz
std
lock
repz
bnd
rep
sbbl
jecxz
or
xchg
xchg
enter
jbe
in
lahf
mov
addr16
mov
iret
scas
jl
fsubrs
push
aas
xor
mov
popf
iret
fldcw
dec
add
clc
in
jmp
in
out
jne,pn
testb
fisubs
jno
loop
rcrl
pop
mov
imull
std
sti
jo
outsb
mov
sti
inc
rcr
mov
mov
lock
popf
lea
movsl
stos
mov
xchg
lret
cmpsb
lcall
xorb
lahf
jmp
mov
aas
test
sahf
push
jb
imul
and
jge
clc
das
inc
xor
fucomp
pop
stc
jecxz
and
imul
frstor
mov
jbe
int3
xorb
ficoms
es
imul
mov
and
out
outsb
shl
pop
pop
cmpsl
and
aam
pop
scas
sbb
push
rorb
jne
sbb
sbb
sar
shr
xchg
shll
leave
lods
leave
xchg
mov
les
sub
adc
jbe
fnstcw
sti
dec
jbe
mov
jo
clc
repnz
cli
add
std
outsl
inc
pop
imul
xchg
and
jp
out
std
movsb
in
stc
cmp
std
lods
lret
sbb
test
popf
movsl
sub
pop
iret
mov
subl
mov
xchg
push
test
sbb
add
mov
cld
xorb
iret
je
shlb
push
jmp
andb
std
stc
jmp
xlat
xchg
ja
bound
clc
in
mov
je
loope
add
std
enter
sbb
imul
adc
xchg
cld
push
jbe
mov
mov
in
mov
pop
leave
filds
pop
add
loope
iret
xchg
lcall
popf
jmp
inc
test
adcb
sarl
add
mov
ds
data16
aas
cwtl
sub
mov
jl
data16
mov
hlt
mov
xchg
out
mov
outsb
and
out
sub
push
repnz
enter
xorb
sarl
xchg
mov
mov
repz
rorb
out
inc
je
in
andl
mov
lods
add
mov
out
aaa
lods
mov
fistpll
mov
imul
adc
insl
and
test
pop
clc
loope
mov
sub
jo
sbbb
or
push
pop
loop
aad
xlat
call
insl
mov
ja
mov
movsl
loopne
adc
jecxz
lea
das
in
popf
mov
jle
lahf
vpavgb
sbb
dec
sti
fdivs
lcall
or
and
arpl
push
pop
pop
jge
call
pop
scas
call
dec
fnstsw
sub
icebp
loop
jle
pop
cmp
imul
and
jns
sbb
cmp
sub
pop
leave
mov
cltd
test
mov
sbb
dec
mov
dec
icebp
jns
repz
mov
clc
lcall
in
add
ret
outsb
mov
std
loope
test
cld
add
mov
xchg
mov
xchg
out
outsl
push
or
int3
stos
out
mov
aam
les
mov
lods
push
in
imul
std
sbb
cmp
cmp
mov
mov
in
add
cmc
call
jmp
inc
loop
call
stc
repz
inc
jg
sahf
push
mov
xchg
lods
push
je
in
and
repnz
das
jbe
push
shrl
out
lret
mov
repz
dec
pushl
cmp
pusha
dec
mov
inc
fdivrl
mov
sti
dec
inc
dec
mov
call
or
xor
sub
or
xorl
addb
dec
mov
push
jge
lds
enter
addr16
sub
or
inc
inc
cli
mov
mov
add
aas
stc
ret
xchg
stc
inc
push
jg
hlt
jmp
and
jns
idivl
outsl
std
mov
iret
mov
mov
enter
mov
shl
lret
iret
xchg
test
and
mov
xchg
xor
pusha
fisubl
shrl
clc
lock
sti
push
loop
add
mov
sbb
mov
mov
clc
movsb
lret
loopne
xchg
xor
subb
loopne
aaa
jno
lea
push
xor
cmp
stc
fildl
call
inc
out
sbb
mov
repz
imul
mov
jo
outsb
rcl
fistl
pop
mov
fdivrl
mov
mov
ja
fisttpll
scas
push
stc
xor
ljmp
jbe
lcall
lock
das
xchg
xlat
iret
repz
mov
inc
cli
pop
imul
jo
fisubl
aas
fisttpll
dec
mov
pop
fnstsw
pop
in
fnstcw
mov
mov
out
aas
adcl
pop
repnz
ds
stc
repnz
cmp
xor
std
mov
cmp
incl
push
xchg
or
stos
sub
pusha
iret
cwtl
or
shr
cmc
inc
movsl
aad
sti
dec
xchg
clc
fildll
fnstcw
inc
sahf
xchg
daa
or
iret
mov
add
pushl
mov
mov
jge
nop
and
cltd
repz
jge
imul
push
sti
sub
cmp
std
or
cmpl
xchg
dec
aad
cmp
inc
das
jo
pop
xor
je
imul
xor
loop
push
mov
loope
dec
leave
fucom
mov
adc
xchg
leave
aas
ja
les
imul
leave
push
ljmp
sub
jo
jo
ffree
gs
sub
xabort
dec
js
flds
xchg
out
out
xchg
adcb
push
xor
loop
add
call
mov
sub
add
fidivs
pop
or
adc
xor
insb
out
insb
pop
xor
sbb
test
jb
xlat
pop
loopne
ficoml
sbb
and
inc
out
adc
fcmovne
fnstsw
mov
adc
movb
aam
lret
scas
pop
ret
gs
xchg
fwait
repnz
push
leave
iret
fisttpl
or
mov
cmp
repz
dec
enter
sub
push
sbb
jle
repnz
add
outsl
cmpb
mov
xor
jo
mov
mov
jno
orb
shl
test
les
push
dec
cli
test
das
mov
fnstenv
mov
aaa
adc
add
and
fmulp
test
in
daa
dec
loope
sahf
xorl
out
or
xchg
inc
xchg
rolb
jnp
add
dec
hlt
add
out
cmp
and
iret
lret
mov
lock
adc
xchg
pop
jecxz
sub
out
test
ret
test
adc
scas
dec
iret
rcr
or
fcmovnbe
in
out
imul
sarl
test
imul
lahf
lret
stos
call
je
and
xchg
push
and
test
cmp
out
sub
xchg
and
cltd
mov
mov
mov
cmp
cmpsl
lods
or
vpunpckhqdq
inc
mov
fimull
cld
clc
jge
jl
nop
popa
pop
xchg
int
jns
dec
push
pop
cli
jl
inc
pop
aas
std
fldcw
mov
insl
outsl
mov
sub
ret
sub
in
call
data16
in
scas
jecxz
sbb
lret
add
ljmp
repz
imul
std
cmpsl
mov
mov
shlb
in
pop
jecxz
pop
cmpsl
cli
and
dec
xchg
mov
cmpsb
xchg
int
cltd
aad
add
pushl
scas
repz
test
lea
addr16
mov
divl
mov
iret
sub
fcmovb
repz
fistpl
out
mov
jle
loope
or
out
imul
int
push
sti
push
jmp
sub
mov
loopne
push
dec
int
aam
pusha
add
sbb
call
jmp
outsl
push
xor
pop
lcall
andb
push
pop
rcrl
jo
cmpl
rorb
filds
leave
inc
jno
push
fs
pop
jecxz
fidivrs
xchg
lea
xchg
adc
or
jne
cmpsb
cwtl
incl
mov
xlat
icebp
rol
leave
jno
add
pusha
lret
icebp
fisttpl
cld
jecxz
adc
lock
loope
stos
clc
mov
divb
xor
repnz
in
pop
icebp
std
mov
mov
cltd
xor
loopne
cwtl
ja
cld
lods
out
lret
and
lods
dec
mov
jg
cmpsb
xchg
daa
push
cmpsl
nop
fldl
clc
adc
jmp
movsb
adcl
sbb
incl
lds
into
mov
sti
shl
enter
aaa
mov
add
roll
clc
int
in
in
iret
fcomip
addr16
shl
jb
jno
rorl
push
out
inc
dec
fnsave
push
in
inc
int3
cmp
je
notl
xorb
push
fldt
idivl
div
xchg
mov
jns
fisttpl
xchg
mov
pop
adc
out
popl
sub
sahf
ljmp
cld
aaa
mov
cmp
push
adc
pop
insb
inc
jmp
rcrb
jmp
fldenv
out
mov
loop
or
ss
fs
and
push
inc
mov
subb
mov
xchg
xchg
xchg
xchg
xchg
cltd
bound
leave
popf
lock
in
mov
pop
lods
jno
lahf
scas
repz
mov
mov
or
popa
mull
outsb
fwait
cmp
insl
stc
push
dec
mov
or
mov
cmpsl
xlat
dec
pop
sarl
ret
out
inc
pop
mov
lahf
mov
pop
mov
ljmp
testb
adc
pop
push
pop
mov
or
ljmp
mov
pusha
mov
std
jns
pushf
xchg
lea
andl
add
ja
inc
ljmp
push
inc
sbb
out
das
into
out
pop
in
inc
sbb
data16
pusha
popa
jno
adc
push
sub
mov
shl
fsubl
jmp
cmc
in
fnstsw
mov
lods
gs
ds
jns
xchg
ficompl
jo
insb
or
jae
inc
leave
repnz
add
shrb
xor
in
js
ljmp
adc
mov
ja
fstpl
icebp
jge
insl
sti
scas
std
cltd
cmp
mov
mov
shll
idivl
scas
cmp
imull
call
leave
pop
nop
xor
mov
mov
mov
sbb
cltd
repnz
movb
lock
out
mov
gs
out
rorb
test
pop
popl
mov
adc
aas
ja
scas
cmp
push
adc
popa
testl
iret
cli
xchg
cmc
movl
icebp
pop
iret
lds
ret
push
out
mov
cmpsl
ret
call
in
in
xchg
imul
popa
lret
inc
pusha
out
daa
xchg
add
pop
repz
out
cmc
pop
pop
add
out
push
js
idiv
dec
lods
in
jnp
jno
dec
out
and
sub
aad
std
idivl
insb
jb
or
xor
add
xorl
mov
sub
leave
mov
in
jle
sbb
or
mov
les
xor
inc
mov
stos
xchg
in
xchg
ss
push
scas
push
mov
or
shl
repnz
stc
or
cli
xor
das
mov
mov
xchg
lahf
push
pop
add
mov
mov
sbb
popf
xchg
dec
clc
jp
add
orl
pop
or
loopne
push
pop
xorb
xchg
lcall
add
jmp
cmp
sbb
adc
rorl
sti
cmp
int
dec
sub
pusha
rcrl
addb
sbb
mov
cmpl
out
int
pushf
stos
jmp
loopne
cmp
aam
jno
ret
lods
or
cmp
mov
mov
loopne
nop
into
pop
call
mov
mov
sbb
and
cld
jmp
sub
cmp
xchg
inc
in
push
mov
int
lods
es
mov
mov
pop
testl
dec
fwait
cmp
cs
or
shll
lds
cli
mull
mov
int
jge
mov
pop
or
js
mov
sub
fnstenv
push
mov
mov
sarl
sbb
jg
mov
cmpsl
add
jmp
pop
cmpsl
stos
jmp
lret
xor
inc
gs
cli
in
movsl
imul
and
sub
fldenv
loope
insb
xchg
jp
mov
stos
test
repz
dec
lret
jmp
int
cmpsb
in
int
adc
push
jno
cmp
outsb
repz
jle
jmp
dec
pop
jno
xchg
imul
jge
cmp
lock
push
cli
jno
sub
rcr
jmp
sti
inc
or
mov
jmp
pusha
cmp
jg
dec
or
xorb
cltd
test
cmc
xchg
mov
pop
jns
outsb
push
stos
out
mov
adc
push
or
push
loopne
in
out
push
pusha
jmp
fimull
popf
push
in
in
leave
cltd
inc
icebp
loop
mov
pop
lret
push
xchg
cld
imul
push
rcrb
xlat
shl
lahf
idivl
add
xchg
sub
and
imul
jle
xchg
xor
ja
stc
adcb
xchg
jb
jno
and
pop
xlat
jle
sub
mov
fisubs
mov
stos
mov
repz
mov
in
jge
mov
push
sbb
fwait
adc
mov
outsb
dec
int3
pop
mov
lds
insl
push
pop
pusha
in
cltd
mov
nop
rep
jecxz
fcmovnu
pop
push
arpl
jb
out
mov
enter
xlat
push
cmpsl
in
cld
xor
dec
rcll
ficoml
add
xchg
iret
jmp
mov
cmc
cli
mov
mov
xchg
inc
js
in
in
js
jg
cmc
sub
fnstcw
call
pop
xlat
xchg
mov
testl
cmpsb
mov
jg
and
lock
out
sbbl
jb
dec
xchg
shrb
addr16
lea
outsb
pusha
addr16
push
lahf
je
ljmp
imul
repnz
call
sbb
outsb
loopne
inc
inc
pop
mov
imul
xor
scas
mov
mov
pop
jo
add
ror
push
mov
fldcw
andl
or
in
mov
fiadds
mov
ret
dec
lea
add
pop
add
bound
sub
mov
repnz
fucomip
add
jo
sbb
push
iret
dec
and
cmp
fmulp
nop
leave
test
repnz
loopne
mov
dec
xchg
inc
ss
add
cmp
sub
loope
xchg
repnz
scas
in
pop
lret
test
repnz
dec
in
pop
push
lea
subb
ficoms
sub
xor
sub
xor
in
jl
adc
fsubs
cmpsl
jecxz
add
xchg
lock
mov
mov
xor
push
mov
leave
js
inc
jmp
jg
addr16
imul
leave
inc
icebp
cmp
mov
fistpll
test
mov
or
jmp
pop
outsl
jg
jp
mov
jg
cli
lods
lock
je
aas
dec
jmp
in
in
cld
notl
pop
push
insl
into
push
dec
cmpsl
mov
adc
adc
dec
fs
jecxz
pop
mov
dec
out
jmp
mov
add
cmc
std
hlt
sbbb
xor
xor
out
aaa
addb
and
std
jmp
adcl
jmp
imul
iret
cwtl
aaa
adc
cmp
cmp
push
jnp
lea
and
insl
fmull
dec
or
mov
cli
pop
aam
repz
jnp
jo
xchg
insl
pop
pop
fsub
fimull
out
push
fldl
mov
pop
stc
insl
std
call
sar
jg
mov
push
stc
sub
daa
mov
adc
sar
add
lret
jne
jp
jecxz
dec
cwtl
jcxz
xchg
jbe
leave
loopne
mov
or
ds
cmp
jmp
and
mov
cwtl
mov
push
mov
xor
lahf
fcomp
scas
inc
mov
push
dec
sbb
in
inc
inc
iret
add
jp
mov
sbb
sbb
test
idiv
leave
movsl
mov
jno
stc
jmp
dec
loopne
mov
inc
outsb
ret
mov
or
test
div
or
pop
cmpsl
jns
je
lock
inc
mov
xchg
icebp
stc
sbb
sub
divb
cwtl
mov
inc
test
aad
mov
push
push
sub
jg
subl
mov
lds
lods
xchg
lea
ljmp
fisttpl
add
jbe
sub
mov
cltd
sub
sbb
and
fdivrs
js
jne
sbb
paddsw
xor
cmp
faddl
lock
lcall
test
mov
jmp
insb
out
add
push
test
push
or
pop
movsl
sub
cltd
cmp
popf
rcll
ret
and
sub
inc
lahf
jle
sub
loopne
mov
lods
mov
loope
mov
pop
loope
rcrl
jnp
std
fstpt
push
in
jl
stos
mov
push
jbe
mov
cs
outsb
and
out
dec
in
sub
das
jns
add
lretw
jecxz
shr
addr16
das
mov
rclb
add
jecxz
aaa
sarb
inc
lret
adc
ffreep
push
icebp
repz
icebp
daa
je
mov
adc
mov
std
shrb
clc
jle
jb
popf
ret
mov
adc
adcb
xchg
mov
lock
hlt
or
sbbb
xchg
dec
data16
xor
jb
mov
lds
cmc
ret
and
int
jb
jo
fstl
lahf
dec
popf
pop
in
cmp
popf
std
or
test
lret
leave
cmp
sub
out
in
ret
popf
xor
movsl
fcomi
lods
mov
loope
popf
cmp
icebp
int
jecxz
cmp
or
nop
xchg
push
in
xor
push
lea
in
call
mov
cwtl
std
lahf
mov
std
push
mov
je
xchg
xchg
lahf
cmpsb
mov
mov
icebp
stc
fstpt
pop
jo
fnstsw
fisubrl
pop
jnp
push
sbb
dec
cs
dec
stc
sbb
cwtl
cmp
or
div
lcall
imul
rcrl
sbb
inc
sub
mov
test
out
lret
and
outsl
cmp
out
mov
adc
jnp
clc
ljmp
xchg
std
jbe
mov
nop
in
hlt
idivb
dec
add
int
insl
icebp
bound
testb
in
rol
xlat
inc
and
stc
add
notb
xchg
icebp
iret
stc
jge
fnstenv
push
or
fists
mov
out
pop
aad
call
sarl
xchg
jge
out
movsl
ffreep
int
aad
fucomp
in
in
cmp
dec
xchg
gs
mov
add
test
movsb
xor
jl
stc
inc
jg
or
repz
adc
mov
mov
mov
movsl
pop
das
sbb
imul
mov
mov
lahf
dec
aad
repnz
jo
orl
repz
sbb
repz
dec
jle
clc
mov
push
jg
subb
cwtl
std
mov
test
mov
hlt
loopne
test
shlb
cmp
repz
mov
outsl
aad
fisttpl
neg
pop
pop
xchg
jne
cmp
repnz
adcl
mov
add
cmc
daa
xchg
dec
mov
popf
das
out
insb
xor
add
push
push
in
mov
call
ficomps
sub
add
mov
sub
add
dec
sbb
clc
mov
sahf
jae
mov
arpl
jns
std
out
outsl
mov
pusha
out
sub
mov
push
dec
xor
clc
inc
aam
lea
mov
int3
repz
mov
cld
dec
inc
movsl
into
filds
test
cmp
bound
dec
hlt
stc
loopne
sti
es
dec
lahf
shll
rcr
jmp
cltd
shlb
push
insb
xor
pop
xchg
ficompl
outsb
out
stos
sub
fcomi
repnz
cwtl
aad
movsb
stc
lock
in
jne
loopne
push
xchg
pop
and
add
jns
add
scas
sti
loopne
pusha
sub
aam
push
cmpsb
lds
or
inc
sub
pusha
out
jno
cld
jns
pusha
push
into
mov
incb
mov
fldt
inc
mov
sub
lahf
sbb
dec
int
lret
fmulp
aad
clc
mov
pop
into
xchg
outsl
sbb
inc
lcall
jle
cmp
lret
jno
movsl
aam
jg
jmp
push
repnz
lret
push
jecxz
pop
int
jecxz
push
push
stc
xchg
mov
mov
dec
rorb
cld
xchg
sub
cmp
stc
aas
cmpsl
mov
fs
popf
divl
xchg
pop
sbb
push
int
bnd
out
mov
dec
stos
jns
inc
movsb
out
and
jmp
lret
fcomip
mov
cltd
push
mov
xchg
fs
aam
out
xchg
inc
aam
movsb
jno
test
imul
out
jae
divb
outsl
lds
scas
xor
dec
pop
rclb
sarb
insl
pushl
test
in
pop
hlt
hlt
dec
jcxz
shll
sub
sbb
enter
fsub
in
out
push
fstl
shll
xchg
inc
sub
mov
add
rcr
andb
xor
pop
cmp
mov
cs
and
or
mov
push
test
hlt
mov
inc
mov
lock
sub
iret
lock
ret
xor
bound
testb
push
jno
pop
xchg
jmp
shlb
stos
lock
xor
jl
or
int3
and
lds
outsl
pusha
out
ret
icebp
testl
pop
mov
adc
pusha
in
pop
pop
filds
xchg
pop
popw
cwtl
sbb
test
sub
aaa
xchg
out
mov
mov
popf
jmp
das
sbb
add
out
imul
out
xchg
jg
repz
inc
fxch
cmpsb
fnstsw
popf
mov
push
jp
leave
push
ror
xor
xchg
fstps
xlat
xor
push
mov
into
and
ds
or
sub
and
dec
lock
xlat
call
fsts
mov
adc
insb
es
xchg
adc
sbb
mov
lret
cwtl
rcll
xlat
fiadds
xchg
jmp
aad
loope
adc
sbb
adc
rolb
and
xlat
cmc
xchg
and
lds
loopne
call
lock
call
out
mov
stc
mov
repnz
jmp
je
test
xor
pop
jl
iret
mov
jg
inc
repz
in
mov
stc
movsl
adcb
and
push
rcrl
xchg
shlb
jl
adc
out
jb
xchg
jge
insb
clc
stc
xchg
push
bound
add
test
in
std
xor
jb
popf
repz
jg
dec
inc
adc
dec
in
movsl
hlt
mov
add
in
lds
pusha
fwait
out
jge
xor
iret
in
call
mov
inc
dec
jle
out
jmp
add
fistpll
push
xchg
outsl
jle
fstpl
sahf
dec
ljmp
in
fisubrl
xor
xchg
scas
sahf
sahf
aam
add
pop
pop
or
stc
sbb
cs
push
xor
into
faddl
cmp
js
jl
movsb
dec
arpl
enter
out
mov
cmp
dec
movsl
mov
dec
pop
jecxz
fildl
pusha
loopne
out
in
add
clc
insb
pop
sub
xlat
das
iret
add
sbb
cmp
pusha
add
dec
add
inc
jns
ss
test
aas
mov
add
cmp
sarl
dec
pop
es
fwait
test
adcb
dec
fiaddl
lods
fisubs
dec
hlt
pop
bound
jp
dec
xor
jle
bnd
mov
jns
and
mov
lods
loop
dec
movb
outsb
xlat
addb
pop
lods
xchg
mov
fiaddl
rcll
addb
nop
call
ror
out
xor
xlat
jo
call
xlat
or
aaa
pop
push
cmp
stos
enter
out
ja
mov
fldenv
cs
xlat
sbb
enter
aas
std
cmp
jmp
cmp
sub
add
adc
gs
pop
mov
push
loope
lea
aad
fisubs
pop
cmp
pop
andb
pop
cld
je
movsl
jl
fcomps
pop
sub
sub
cld
out
out
pop
testb
jge
lock
dec
rorl
lds
push
aad
xlat
out
outsl
repz
fldl
pop
and
xchg
test
xchg
jecxz
xlat
xchg
xlat
ss
or
jl
jg
lret
ret
shl
testl
mov
jle
pop
lret
push
lahf
inc
mov
aas
test
ss
dec
xor
aaa
jno
popf
cmp
lock
mov
sbb
jge
mov
rorl
aam
stc
add
push
dec
sub
lea
leave
lcall
repnz
xchg
push
mov
js
jmp
jo
lea
add
xchg
cmp
fcomi
std
xor
push
mov
sub
add
mov
fucomip
mov
into
leave
lret
fistpll
in
pop
out
ja
cmp
adc
cmp
and
sbb
call
test
mov
pop
repnz
out
ret
test
idivl
xor
mov
mov
sub
mov
inc
out
cmp
icebp
lret
out
xchg
divl
je
test
pop
icebp
arpl
mov
push
pop
scas
clc
mov
or
lcall
ffreep
loop
mov
insl
push
mov
adc
xchg
or
orb
mov
pop
div
jbe
stc
push
insl
cli
data16
ret
cmp
and
pop
sub
inc
adc
cmc
fnstsw
jmp
negb
outsl
add
js
and
and
dec
in
jno
in
fcmovnu
fistpll
jecxz
cmpsb
je
fdivp
mov
jnp
push
xlat
and
jo
xor
dec
add
dec
in
cmpsb
mov
out
repnz
dec
js
and
fucom
aas
pop
dec
aam
testl
std
aas
fwait
jg
outsb
jbe
xor
add
stc
outsb
popf
jbe
xor
mov
push
and
jne
loopne
in
lret
loopne
push
push
test
cli
pop
mov
idivb
mov
xchg
testl
setge
call
out
pop
adc
lret
into
or
in
aas
lock
or
into
out
testl
pop
stc
sbb
inc
xchg
fsubl
and
push
mov
jg
mov
out
mov
aam
and
xchg
movsb
mov
jmp
jge
inc
xlat
lret
fdivr
sbb
xor
lret
es
sbb
in
sbb
cltd
frstor
push
mov
int3
inc
mov
in
mov
fiaddl
jo
lock
and
lock
jge
flds
pop
sbb
je
push
cmp
inc
aas
xchg
mov
xchg
je
ja
add
jno
jl
iret
inc
fbld
push
fistl
fs
stos
dec
inc
jge
adc
adcb
add
lods
add
call
cmp
insl
push
out
fistpll
jnp
inc
lret
andb
lock
cld
adc
mov
fld1
out
out
cli
dec
lret
rol
xchg
pop
mov
mov
iret
loopne
sub
mov
adc
mov
add
jl
out
mov
fcmovnbe
in
scas
jae
inc
mov
dec
pop
out
fxch
xlat
adc
jecxz
lea
cltd
xlat
test
arpl
mov
cmpsb
ret
mov
cli
rolb
pusha
cld
packssdw
cmp
xor
xchg
neg
lds
inc
mov
or
xor
and
mov
push
icebp
adc
frstor
mov
jne
xor
aam
repz
inc
verr
mov
cmp
jne
clc
mov
loop
add
sarl
negl
in
std
out
jecxz
dec
loope
popa
or
mov
push
ljmp
push
repz
mov
scas
push
repz
inc
aam
add
outsl
hlt
inc
jge
enter
mov
or
imull
cs
shr
or
test
outsl
ret
sbb
imull
repnz
add
mov
add
xchg
ds
sub
shl
loop
std
enter
mov
and
dec
popl
adc
sub
notl
jg
inc
out
lock
inc
fwait
xor
mov
add
test
mov
fstps
rcrl
mov
fistpll
push
iret
xchg
mov
movsb
rcl
xchg
lret
jg
lret
jg
adc
lret
fdivrl
dec
fistpll
add
inc
adc
mov
xor
int
inc
or
inc
or
clc
dec
insb
mov
inc
out
jno
sub
ret
scas
orl
xchg
push
iret
fldt
push
xor
call
clc
inc
and
in
xchg
dec
adc
testl
in
lahf
pop
jl
jno
enter
loop
or
fisubrs
test
jl
in
cld
out
add
mov
ret
aad
xchg
mov
mov
subb
xchg
je
dec
mov
pop
mov
hlt
jl
push
jno
pop
inc
inc
mov
pop
mov
sub
pop
stc
adc
inc
dec
insb
push
adc
jecxz
pop
xchg
mov
popa
fistps
mov
and
cld
sbb
add
mov
adcl
in
pop
imul
les
test
fucomi
xor
jno
int
js
or
mov
dec
mov
mov
mov
mov
cmp
jo
cmp
xchg
lock
jmp
clc
stc
xor
mov
add
xchg
xchg
pop
cltd
sub
insl
out
lahf
cs
mov
cmpsl
mov
mov
int
iret
aam
fmull
push
idivl
mov
sahf
test
idivl
mov
loop
pop
jge
popf
jl
enter
inc
cmp
ret
das
push
loop,pn
sub
cmp
sub
xchg
fucomip
fwait
add
rcll
adc
mov
sahf
pop
dec
and
mov
ja
loopne
push
notb
lds
push
sbb
mov
dec
xor
xchg
pop
jo
jg
hlt
pop
xchg
pop
sarb
lahf
loop
add
xor
pop
jl
jmp
ds
out
out
lods
les
mov
push
xor
enter
cwtl
fwait
add
outsl
imul
and
mov
push
or
cmp
xor
imul
addr16
negl
fbld
test
outsb
daa
outsb
adc
inc
jae
frstor
repz
ret
cltd
sbb
inc
adc
lahf
jge
pop
mov
push
call
cmp
adc
jge
lock
jmp
jne
std
xchg
clc
cltd
insb
ror
out
subb
rorb
lea
movsb
repnz
out
xchg
pop
insl
clc
mov
pop
jge
pop
mov
aad
jl
dec
fwait
out
adc
jmp
jl
jge
dec
jle
flds
pusha
xchg
or
call
hlt
lock
out
mov
or
mov
lahf
leave
aam
js
popf
sbb
insb
loop
jecxz
sahf
jno
shll
orb
cmp
and
push
scas
js
mov
ret
mov
jg
test
std
inc
loope
icebp
rorl
js
mov
ret
jno
jg
mov
cmp
js
sti
push
xor
or
xor
jns
jg
mov
iret
mov
fmull
jo
lcall
arpl
cltd
es
repz
mov
mov
fcompl
repz
inc
repz
cltd
jmp
or
rep
jecxz
adc
aam
repz
mov
sti
clc
xchg
gs
jae
out
mov
enter
fnstsw
mov
fstps
jmp
push
icebp
imul
lods
incb
cltd
in
lods
icebp
mov
enter
out
xchg
popf
dec
lahf
cmpsl
mov
mov
shrb
stc
jp
lea
mov
cmp
mov
xchg
imul
rcll
inc
lea
hlt
sbb
test
mov
into
cmpsl
call
mov
lret
icebp
out
stc
add
sub
cmp
aas
iret
std
std
aam
les
ret
push
mov
xchg
jo
pop
pop
mov
pushl
rcll
ljmp
add
pop
lods
jg
int3
rcrl
andl
fwait
outsl
daa
sarl
rol
std
cmp
addl
mov
ret
iret
mov
cmp
sarl
jmp
dec
xchg
mov
cmc
lock
add
cmp
push
into
lcall
mov
inc
fisubrs
xchg
lods
clc
das
jnp
sbb
push
out
dec
cltd
jne
repz
fdivl
cmp
arpl
mov
mov
stos
sbb
push
aas
cld
jle
xchg
push
in
push
mov
jmp
das
fbstp
mov
cld
ss
out
sbb
out
lods
cmp
pop
in
jb
adc
cli
cli
stc
jl
dec
jp
imul
dec
jmp
scas
jl
clc
out
xor
js
xchg
add
repnz
cmp
lcall
xor
jbe
cmpsb
cmpsb
incl
out
cs
xchg
cmp
jmp
popf
enter
shlb
push
out
mov
or
das
jbe
stos
out
mov
push
dec
hlt
idiv
adc
orl
lahf
cmp
loopne
mov
cmc
jl
out
fidivs
inc
std
in
cmp
add
mov
shl
jp
js
mov
cmpsb
stc
pusha
loope
int3
push
scas
xchg
jno
jbe
pop
mov
mov
jb
fs
ffree
in
leave
cmp
or
icebp
movsl
fisttpll
ja
call
shrl
repnz
push
or
pop
pop
mov
dec
nop
sahf
mov
adc
mov
stos
xchg
scas
icebp
stos
sub
lahf
outsb
xchg
push
popl
es
fsubr
enter
call
push
xchg
stc
hlt
cmp
jno
popa
xchg
add
icebp
mov
movsb
aam
ljmp
mov
xor
cmc
scas
and
je
mov
rep
xor
in
lret
mov
mov
je
fadd
xchg
rorl
mov
fucomip
das
ja
push
xchg
dec
stos
test
jge
sub
stc
ret
jl
jae
dec
mov
int
enter
push
out
popf
mov
je
pop
pusha
fisttpll
outsb
mov
lds
jecxz
std
cltd
xchg
test
mov
lds
repnz
push
aam
cld
push
int3
and
add
add
adc
sarb
pop
call
mov
pop
push
lea
les
hlt
push
push
xchg
xlat
fisubrs
out
fidivrl
fildl
pop
jmp
fiadds
inc
add
adc
pushf
dec
lret
call
stos
in
stc
scas
std
mov
jecxz
xchg
clc
adc
mov
jnp
xchg
cmp
test
lock
sarl
icebp
movsl
pop
imul
lock
inc
imull
sti
or
adc
fidivrs
aaa
push
mov
cmpsb
push
js
mov
cmp
aam
xchg
jnp
cmpl
std
nop
push
pop
push
mov
lcall
jmp
xchg
cmp
xchg
cli
leave
lock
cmpsb
cltd
fsubp
sbb
loopw
adc
aam
outsl
icebp
adc
mov
sbb
loopne
xchg
lcall
sarb
sahf
shrb
inc
dec
int3
jbe
add
sti
cmp
inc
iret
rcl
lock
jne
je
xlat
iret
out
dec
jno
cmp
mov
mov
jne
je
out
jbe
loope
mov
mov
fisubrs
jnp
inc
mov
loopne
pop
adcb
and
push
aam
insl
repnz
jb
idiv
mov
in
repz
xlat
cwtl
pop
push
loope
out
dec
cltd
insb
and
and
inc
cmpsl
dec
fnstenv
jo
lcall
outsl
je
stos
cmp
gs
push
lahf
imul
lret
inc
jl
movsl
cli
iret
fwait
enter
jmp
xor
push
sti
cmpsl
outsb
in
aad
jge
cmpl
inc
jns
popa
xchg
mov
sbb
mov
in
adc
clc
xchg
lea
movsl
in
lods
mov
fcompl
lret
ja
xchg
popf
inc
xlat
std
jmp
add
call
pop
in
lret
aad
jmp
fstpt
bnd
sbb
or
xor
lahf
pop
mov
incb
inc
sub
jecxz
inc
mov
dec
or
sbb
adc
stos
pop
test
sub
outsb
dec
rcr
stos
cmp
insb
lret
iret
pop
icebp
addr16
add
and
push
out
addr16
mov
sub
inc
xchg
cmc
mov
sub
add
in
incb
ret
pop
mov
sbb
ret
leave
je
icebp
and
xorb
fnstenv
mov
test
add
mov
mov
cltd
or
jmp
jge
repnz
daa
inc
sti
cmp
lock
mov
cmp
outsl
xchg
sbb
test
jo
xchg
pusha
in
add
in
push
cmp
or
ret
ja
movsl
aas
imull
xchg
pop
pushl
inc
add
mov
jno
filds
dec
jno
pop
jbe
test
jl
out
dec
iret
orb
ret
loope
mov
inc
aas
lahf
cmc
call
mov
das
sbb
inc
cmc
shl
outsb
inc
je
dec
sbb
pop
add
je
aas
dec
cmp
xlat
mov
pop
in
mov
mov
pop
jb
icebp
pop
jno
jae
inc
fdivrs
leave
mov
or
sub
inc
adc
push
clc
jg
add
jo
stos
sub
insl
ret
enter
jno
iret
repz
inc
fsts
dec
add
xchg
lret
push
sub
std
push
xor
pop
rcrl
subl
or
sbb
mov
cli
ja
sbb
xchg
ss
adc
ja
mov
and
ja
movsl
loop
iret
mov
icebp
ds
jno
pop
mov
mov
sti
add
idiv
xchg
cmc
fcmovb
cld
xchg
add
lahf
lock
stc
jo
xchg
and
lea
bound
sub
pop
jecxz
or
pusha
fcompl
cmp
in
inc
mov
jne
sub
xor
mov
dec
mov
sub
xorl
inc
fisubl
xchg
mov
lock
jge
lret
ficomps
mov
sub
stos
xlat
cmp
test
push
xchg
fiadds
nop
jmp
ret
push
std
jnp
sti
sbb
mov
lcall
in
inc
jmp
stc
sub
iret
nop
out
mov
outsl
pop
sti
or
pop
aad
push
cmpl
mov
fdivp
aaa
inc
xchg
cmp
jp
js
notl
stc
jo
push
jge
mov
es
lahf
jge
mov
and
scas
cmp
loopne
loop
pop
loop
icebp
xlat
std
iret
cmp
lahf
pop
out
xlat
aam
mov
rclb
loope
into
call
mov
xchg
sbb
pop
iret
rcr
xor
push
rcl
dec
icebp
xchg
in
shll
ss
into
repz
push
adc
out
aam
jns
jo
cmp
popf
imull
push
repz
subl
push
cmc
adcl
out
adcl
lea
cmc
mov
and
jge
pop
jns
fistpll
cli
out
mov
testl
mov
lock
test
xchg
add
adc
testl
mov
enter
fcomp
cltd
in
pop
push
pusha
inc
push
push
pop
add
jns
lock
fsts
rolb
mov
and
dec
mov
mov
es
adc
xor
sti
dec
repz
out
push
push
pop
add
jecxz
jge
andl
jecxz
dec
ds
insl
in
xchg
fcom
lds
das
sub
stc
lock
cmp
xlat
insb
iret
std
test
xchg
xchg
sub
out
and
sbb
mov
ss
sbb
pushf
xchg
add
xchg
into
fcoms
push
sar
nop
into
push
cld
outsl
xor
lret
enter
dec
mov
sbb
mov
mov
mov
out
pop
inc
lahf
cwtl
push
xchg
int
push
ss
jno
lahf
lds
adc
mov
mov
mov
int
rcrl
aad
std
sbb
xchg
sarl
out
lods
cmp
rclb
jbe
push
lods
popa
mov
push
ficoms
jnp
cmc
sub
push
mov
jmp
lock
jl
dec
cmc
or
lock
jg
lahf
repz
lret
iret
dec
test
mov
or
jmp
pop
sub
fistpl
xor
mov
das
mov
sub
pop
jle
push
xchg
pop
out
adc
jnp
mov
subl
idiv
insl
std
int
mov
iret
adc
fs
jo
jg
nop
mov
xchg
repnz
sbb
jne
sub
loopne
idivb
adc
in
mov
in
xchg
cmp
cmp
cltd
gs
es
mov
xchg
jne
test
test
push
jg
insb
out
loopne
add
or
out
cmp
popf
out
popl
out
cmc
adc
icebp
out
call
dec
xchg
dec
das
cld
fcomp
loope
insl
mov
subl
lahf
jmp
fldcw
push
fcomi
ss
int
outsb
cmc
es
push
cmp
aad
mov
repz
mov
lret
mov
out
jl
xchg
out
mov
mov
dec
mov
out
jge
std
mov
xchg
jbe
sub
xor
hlt
ljmp
subb
enter
jp
frstor
in
out
add
das
imull
das
out
cmp
movsl
adc
iret
movsl
andb
mov
mov
pushf
loopne
iret
subl
std
stc
aam
cmp
stos
pushf
add
inc
jne
and
mov
jge
pop
popf
jno
sbb
repnz
ret
mov
mov
sub
mov
js
ljmp
sbb
sarl
cltd
mov
std
and
lret
loop
fsubrp
daa
pavgw
int3
mov
sbb
int
in
cmpsl
cmpl
repz
sub
loop
and
cmc
repz
idivl
dec
mov
pandn
sbbb
inc
inc
test
icebp
cli
popa
xchg
lcall
push
jp
aam
jg
test
stc
cmpsb
xchg
lcall
xchg
out
cmp
int
and
jl
jno
xchg
or
lods
jno
sarl
jg
add
clc
mov
out
cmpl
cld
and
stos
popf
rcll
xchg
sahf
dec
into
test
popf
and
lcall
lock
mov
out
or
mov
out
jl
in
adc
inc
mov
jmp
pop
cmc
lods
pushf
adc
and
dec
or
mov
push
mov
jecxz
je
push
lods
fsubr
sarl
lds
fildll
iret
pop
push
or
jno
cmp
jno
ror
xchg
mov
mov
orl
popa
mov
dec
xchg
lret
cld
xorl
bound
data16
loopne
xlat
nop
jno
push
mov
fldcw
in
mov
movsl
or
lret
ret
add
lret
clc
inc
call
shl
pop
inc
mov
testl
incl
loope
add
jle
xchg
inc
loop
jno
add
cmc
or
cmp
and
int
push
pop
cmpsl
outsb
inc
dec
xchg
push
scas
push
in
cmpb
test
flds
popf
add
add
jge
push
repz
fsubl
clc
fisubrl
shlb
loop
pushf
jns
xchg
sbb
and
sub
inc
movsl
xor
jle
icebp
insl
jo
adc
into
addl
or
in
push
shlb
cmpsb
out
jno
cmc
les
in
add
addr16
xor
and
xor
std
jle
addl
adc
lret
jp
leave
mov
cmp
jecxz
xchg
mov
ret
loopne
xchg
push
insb
add
push
mov
lds
inc
loope
push
movsl
mov
test
mov
les
jmp
mov
hlt
xor
jne
pop
iret
push
or
dec
jno
lret
mov
stc
call
imul
cmp
pop
call
pop
pushf
iret
out
mov
sti
xchg
xchg
or
xchg
pop
lea
mov
iret
sub
test
stc
repnz
fsub
ret
jo
xchg
div
inc
or
repz
jg
repnz
out
loope
stc
jns
cld
and
push
std
xchg
cmpsl
outsb
adc
cmp
sub
dec
jg
sbb
inc
cmp
pop
rolb
jmp
pop
or
rorb
jno
sti
out
fbld
push
inc
icebp
imul
incb
test
ja
test
jb
data16
sahf
sub
jl
fmull
cld
fdivr
mov
addr16
dec
jnp
mov
imul
jle
cli
in
jp
pop
add
cmc
xor
inc
fwait
int3
lahf
sarb
jno
mov
out
loopne
xchg
and
sub
xchg
stos
fdivrl
mov
cmp
jecxz
shll
add
push
and
push
sub
xchg
bound
cmp
jo
cmp
std
jb
outsb
lds
std
mov
mov
adc
aad
test
sbb
pop
sbb
fcompl
inc
mov
sbb
je
jbe
fnstcw
adc
inc
inc
outsb
movntq
out
dec
mov
je
lods
loope
stc
not
mov
sbb
mov
jns
outsl
xlat
adc
inc
or
mov
or
jge
push
int
inc
loope
add
mov
iret
fildll
jns
sbb
das
dec
jo
popf
dec
insb
mov
add
int
cmp
push
push
mov
adc
pop
test
mov
loopne
shlb
pop
dec
lret
in
fdivp
aas
or
cli
test
arpl
push
andb
mov
les
out
fiadds
cli
test
arpl
movsb
mov
imul
pusha
xor
shll
mov
out
stos
pushf
cmp
mov
stos
cwtl
and
push
or
fstl
addr16
mov
add
jecxz
add
mov
aaa
test
mov
in
sub
test
mov
scas
pop
fnstsw
mov
cmpsb
popf
daa
adc
pop
imulb
or
icebp
fldl
push
iret
lds
or
fidivrl
add
clc
pop
movsb
aas
push
lcall
insb
sbb
jbe
add
pop
stos
xchg
mov
popa
addr16
xor
iret
leave
out
lods
cmp
vmread
lea
push
inc
mov
les
test
sub
shrl
jl
lods
cmp
push
pop
scas
xchg
mov
hlt
push
idiv
dec
sbb
scas
sbb
enter
cwtl
cmp
pusha
sti
add
testw
mov
scas
fstps
aaa
xlat
leave
dec
fprem
out
rolb
push
ffreep
push
lea
es
or
in
jmp
loope
adc
cmpsb
or
std
lods
scas
or
fnstsw
inc
sbb
mov
cmpsl
pop
mov
jns
lock
test
stc
cmpsl
stc
stos
movsl
arpl
divl
mov
mov
idivw
mov
jns
mov
jecxz
inc
push
add
out
mov
rcrl
int
mov
jl
xor
lcall
pop
push
mov
outsb
and
sti
call
dec
ret
daa
popf
stc
movl
lahf
pop
movsl
inc
mov
lods
test
inc
pushf
mov
lds
xor
nop
outsl
aad
iret
frstor
in
popl
nop
sbb
mov
jg
in
mov
jg
lahf
popf
pop
add
shl
dec
mov
jbe
adc
inc
mov
pop
mov
out
div
adc
jno
popa
out
sti
rep
js
insb
or
hlt
sarl
and
jge
add
icebp
out
pop
sti
loop
add
js
mov
xor
push
inc
sbb
dec
mov
ljmp
ds
fnstenv
daa
out
test
mov
or
push
mull
inc
mov
in
js
push
jmp
adc
jl
shl
testl
sub
sub
cmp
adcb
orb
je
pop
xchg
leave
insl
mov
inc
or
je
push
int
or
out
addr16
nop
or
xorb
mov
mov
out
fisttpl
sbb
int3
xor
iret
ljmp
pop
mov
jae
jg
and
clc
outsb
inc
and
mov
inc
lods
stos
sub
out
jg
mov
jno,pn
lock
leave
cli
loopne
arpl
fnstenv
jl
divb
leave
movsl
xor
outsl
push
jo
sbb
cmp
fidivrs
fsubrl
pop
and
lcall
loopne
xor
loopne
shll
fsubl
fmull
stc
call
roll
fcoml
test
and
push
adc
pop
mov
pop
mov
cmp
jg
inc
out
jmp
leave
ror
pop
inc
hlt
daa
lret
divl
in
sbb
call
xchg
inc
cld
add
outsb
ds
or
bound
mov
fisubrl
jmp
lods
inc
pop
cmpl
add
add
aad
fimull
xlat
cld
jg
pusha
js
stos
cmp
repnz
jle
cmp
int
ja
js
inc
add
pop
cmpl
outsl
push
dec
mov
loop
orb
std
insb
mov
orb
xor
cwtl
push
or
xchg
mov
pop
repnz
std
xchg
pusha
leave
mov
cmp
push
sub
cmpb
pmovmskb
imul
dec
and
mov
sbb
les
sti
cmp
int3
fcmovne
imul
imul
cwtl
adc
inc
iret
jnp
jmp
mov
je
movsb
or
add
mov
mov
in
loopne
imul
popf
jl
add
ss
das
ret
das
xchg
xlat
idiv
lods
fistpll
mov
jnp
test
call
inc
xchg
fdivp
or
inc
int
push
insb
inc
or
andb
push
imul
inc
and
add
add
stc
andl
clc
dec
out
pop
insb
sti
insl
mov
mov
sub
mov
inc
inc
insl
mov
xchg
jp
mov
imul
adc
shlb
mov
out
movl
js
leave
enter
stc
fldt
xchg
xchg
aas
cld
adc
adc
insl
cli
pop
push
scas
iret
jns,pn
fwait
repz
cmp
lahf
inc
dec
xchg
pop
xor
mov
adc
shrb
movsl
lea
stc
outsb
movsl
inc
je
es
xchg
jne
mov
out
loope
leave
lret
sub
mov
repnz
out
out
push
jl
dec
fldl
push
hlt
xor
div
pop
xor
jbe
mov
loopne
mov
jo
mov
faddl
es
mov
repnz
dec
sbb
push
xchg
insl
in
sbb
jle
out
fstps
addr16
scas
out
lds
leave
cmp
nop
scas
jle
pop
hlt
repnz
push
ja
pop
imul
testb
sbb
lahf
les
outsl
xchg
inc
in
push
ror
dec
mov
push
add
iret
mov
shrl
rcl
inc
jle
mov
testl
and
loope
jmp
mov
je
push
test
ret
pop
clc
in
mov
mov
inc
sbb
insl
test
daa
and
add
cmc
cmp
adc
int3
adc
adcb
adc
in
xor
mov
add
fimuls
ret
sbb
push
add
cmc
push
insl
sub
sbb
xlat
cwtl
int3
dec
icebp
mov
or
jmp
cmpsb
sub
repz
leave
test
jae
repnz
cmpl
add
add
fsts
or
iret
sbb
subl
and
gs
je
mov
jne
jb
inc
in
jge
push
mov
jge
adc
in
iret
or
cmp
mov
mov
jmp
push
sti
addr16
mov
push
pushl
xor
add
sti
jno
inc
imul
enter
jno
out
fcompl
out
adc
fisubrs
cmp
gs
scas
lcall
in
nop
mov
mov
jg
adc
add
add
call
loop
jp
int
fnstsw
or
lret
adc
out
fadd
mov
das
fisubrs
mov
insl
cli
jo
adc
fcomp
or
xchg
lods
outsb
movb
popa
jg
ja
mov
test
mov
inc
sub
pusha
test
dec
out
stc
push
ficoms
mov
mov
mov
lea
sub
add
xor
dec
xchg
jmp
add
push
cli
cld
pop
and
push
dec
pop
ja
xchg
xor
call
outsb
icebp
mov
sub
aas
repnz
jmp
and
bnd
push
imul
mov
rol
jg
sbb
sbb
lret
mov
aaa
std
test
lahf
das
stos
jecxz
in
loope
xchg
aaa
push
not
pop
jmp
inc
int
jl
push
sahf
cmpsl
and
mov
adc
add
mov
mov
popa
mov
cmp
mov
jmp
pop
lea
aam
lock
out
cmp
mov
fcomps
out
outsl
cmp
jmp
pop
inc
gs
lea
lock
orl
call
popf
fistl
ficoms
popf
leave
iret
loope
jno
mov
invlpg
test
mov
xchg
rcrb
js
icebp
negl
and
or
rolb
push
sbb
sbb
cmp
orl
sbb
add
mov
aaa
inc
mov
leave
js
and
jne
lahf
xchg
cld
dec
repz
push
pop
into
out
repnz
inc
out
rcr
cwtl
cmp
loop
mov
jmp
stos
cld
mov
or
cmpsb
jmp
subb
movsb
test
cmpsl
jge
insb
adc
enter
inc
cmp
jns
inc
repz
jge
ljmp
std
addr16
movsl
jmp
jmp
repz
das
cmc
hlt
in
xchg
hlt
aam
popa
add
imul
rcrl
lea
jbe
sti
aad
test
leave
rcrl
leave
out
xchg
repz
jno
sbb
mov
sbb
cmp
fdivp
sbbl
repz
rcrl
orl
pushf
dec
mov
push
adc
mov
lds
jae
cltd
repz
outsb
mov
xchg
mov
daa
jl
int
mov
add
cmc
pop
leave
jp
or
arpl
push
cmp
das
mov
lret
popf
xchg
push
loopne
add
repz
mov
test
mov
popf
cltd
pop
faddp
cmp
mov
mov
mov
leave
mov
out
insb
fidivrs
fisttpl
pushf
in
ljmp
jns
cli
cmpsl
repz
imul
or
sbb
add
les
out
mov
xor
xor
repnz
dec
iret
fiaddl
int3
jecxz
fwait
pop
mov
sbb
cwtl
lock
fildl
int3
adc
idivl
jp
adc
sub
sub
fcmovnb
enter
pop
inc
outsb
fdivr
push
xlat
fnsave
add
addl
push
add
jecxz
mov
stc
or
xchg
mov
adc
dec
shl
les
xlat
outsb
in
popf
lock
loopne
pop
mov
inc
aam
fimuls
stc
loopne
jb
adc
adc
rcl
pop
fadds
imul
mov
in
jno
sbb
ljmp
hlt
xchg
adc
sbb
fcoms
divl
shl
pop
mov
repz
repnz
stc
xchg
lods
pop
filds
lahf
repz
sub
lahf
fst
rcl
aaa
push
je
xchg
imul
adc
cmp
mov
out
xchg
aam
lcall
sub
leave
fmull
pop
std
pop
pushaw
into
push
mov
rorb
pmuludq
lods
xchg
jp
mov
xchg
push
sbb
sbb
stc
icebp
mov
pushf
pop
jno
shl
add
cwtl
imul
and
iret
push
imull
mov
leave
cmp
lods
mov
mov
jg
push
dec
mov
pop
pushf
fidivrl
ljmp
lods
test
sbb
sbb
pop
jno
iret
into
pop
inc
jno
jnp
lret
dec
out
stc
out
cld
pop
xchg
push
ret
xor
pop
insb
dec
mov
stc
movsl
pop
mov
fstpt
xor
jge
inc
rorb
pop
ds
iret
cmp
push
or
pusha
jbe
sub
sub
jb
cmc
xchg
out
loopne
addl
repz
das
pop
out
or
jne
in
lret
mov
ljmp
jne
or
lahf
in
cmp
das
sub
sar
popf
xchg
inc
fstpt
sbb
jnp
pop
mov
jle
movsb
icebp
mov
pop
jmp
pop
sti
jno
pop
mov
cmpsl
in
inc
cmc
adc
hlt
xor
mov
jle
cmc
jns
jl
push
out
xor
cld
jo
mov
pop
ss
or
in
cmp
lret
mull
lock
aas
jge
stos
stc
xchg
ret
push
and
ds
ss
mov
or
stc
xlat
nop
push
repnz
popf
push
inc
aad
scas
mov
jns
testl
std
jg
pop
or
loop
out
filds
jle
or
adc
push
dec
mov
shl
jle
hlt
orps
aaa
or
lods
fwait
mov
lretw
jns
mov
pop
frstpm(287
shr
cmp
ss
cltd
pop
mov
mov
pop
repz
mov
inc
jns
push
insb
xchg
icebp
aad
add
imul
adc
ljmp
psubusw
aaa
pop
mov
push
pop
notl
lods
and
fbstp
rorb
jmp
push
jl
addl
sbb
jmp
jmp
mov
test
cmp
jmp
adc
sub
mov
xchg
addr16
adc
sub
dec
sbb
push
add
lock
or
sub
add
adc
movsl
int
enter
jmp
inc
daa
xbegin
imul
mov
in
fwait
call
add
adc
out
adc
cmp
or
div
mov
xchg
jl
out
arpl
in
mov
push
jg
stc
dec
sub
fucom
add
in
movsl
pop
cwtl
imul
jnp
call
sub
andl
cltd
repz
mov
mov
add
and
add
nop
cmp
repnz
cmp
mov
jnp
out
xchg
xorb
xor
cmc
js
shlb
mov
ficompl
mov
or
in
movsl
leave
mov
arpl
push
ret
lds
lahf
or
ret
in
mov
out
sti
inc
fwait
fs
leave
out
in
addl
xor
fs
inc
dec
daa
xchg
inc
test
jb
loopne
je
enter
mov
std
in
cmp
cltd
jno
jle
loopne
jle
test
adc
out
pop
inc
into
jmp
adc
shl
lahf
jle
inc
or
mov
fsts
movsl
fbld
add
xor
dec
or
jb
push
insb
rolb
mov
stc
and
imul
xchg
stos
xchg
lds
lods
test
push
xchg
das
xchg
or
mov
roll
add
inc
jmp
in
mov
add
jle
scas
add
gs
mov
push
add
sbb
test
gs
out
xor
dec
dec
adc
ljmp
icebp
rorl
add
jns
jge
fadds
and
fcmovnb
fwait
std
cmp
add
mov
jge
shlb
xorl
roll
ss
mov
fwait
mov
add
incb
push
cmpl
and
sub
cwtl
in
mov
cmpl
dec
fadd
adcb
fsubs
push
enter
es
fcmove
hlt
inc
jge
outsl
dec
push
nop
int3
add
es
pusha
push
adc
out
mov
insb
jo
mov
cld
loop
fnsave
push
pusha
add
jae
je
or
add
mov
aas
jl
sub
sti
cmp
clc
or
lret
sahf
mov
mov
and
outsl
popa
icebp
cmp
test
mov
or
leave
and
inc
ret
adc
out
decl
fcomps
sub
dec
ljmp
aam
jmp
lahf
mov
leave
jmp
lock
outsl
pop
dec
sbb
sti
sbb
xchg
dec
inc
and
push
fwait
pop
iret
sbb
fbld
xchg
idivl
test
mov
xchg
or
xlat
push
loope
test
out
mov
mov
shrb
jmp
mov
idivl
jge
mov
and
ds
rol
or
leave
lcall
or
lret
inc
je
cwtl
dec
lahf
stc
insl
std
cmp
loopne
icebp
lret
out
pop
xlat
lds
gs
call
test
sahf
push
pop
jecxz
push
cmpsl
shrb
out
jecxz
mov
clc
mov
and
dec
decb
outsl
xchg
in
cmp
sbb
add
sbb
xchg
xlat
stc
outsb
add
sub
mov
xchg
lods
int
inc
mov
pop
cmc
in
movsl
sbb
cmpsl
push
test
jl
xchg
lds
push
mov
daa
sbb
leave
pop
call
add
jl
repnz
mov
int3
push
or
imul
out
ficompl
fnstenv
roll
push
xchg
leave
cmc
cld
fnstenv
xchg
adc
sbb
cmpsl
shrb
call
es
shlb
stos
add
addl
lods
xchg
push
into
inc
aam
or
sbb
subl
movl
dec
mov
cmc
lock
popa
lds
dec
push
or
int3
loopne
insl
push
mov
add
add
jno
jmp
xchg
cmp
inc
jno
cmp
test
mov
jne
je
repnz
jmp
xchg
enter
lea
xlat
loopne
sub
jno
rorl
sti
mov
jne
jb
icebp
rol
jle
ret
push
pop
mov
cwtl
push
mov
icebp
imul
into
jo
out
pop
xor
dec
mov
jecxz
jg
xor
fadds
clc
jb,pn
in
mov
pop
ficompl
leave
jle
push
cld
das
bound
sub
and
arpl
mov
xchg
xlat
push
dec
loope
mov
sbb
mov
into
jnp
pop
push
lret
repz
movsb
lock
aas
dec
leave
mov
xchg
xchg
sub
outsb
jmp
js
mov
jb
push
cli
push
dec
nop
xor
push
dec
sarb
lret
jge
xchg
jnp
ret
xor
dec
bound
shrl
xchg
repz
jle
cs
out
fwait
clc
repz
xor
shl
mov
cmp
cmpsl
cld
in
push
stos
cld
fisubs
or
cmc
inc
shll
sub
pop
adc
jo
cmp
and
loopne
mov
cld
rcll
mov
mov
adc
pop
repz
inc
lea
xchg
test
aad
sbb
repnz
imul
xchg
pop
jae
mov
lret
mov
imul
pop
test
stc
cli
out
pop
in
push
sub
adc
mov
shl
cmp
adc
popf
int
xchg
add
aaa
push
mov
xchg
shll
ja
add
sub
cli
jns
repnz
repz
clc
hlt
or
pop
mov
xor
inc
sahf
js
stos
cmp
imul
test
adcb
xchg
lret
aam
pop
in
cmpsl
fldcw
sti
fbld
add
mov
incb
add
push
push
jns
xor
lods
sub
add
loopne
jns
adcl
loop
loope
fnstsw
jne
je
cmpsb
sbb
andl
sar
fstl
add
jne
jnp
stc
idivl
and
push
mov
lds
pop
lock
mov
icebp
imul
push
testl
xor
rol
push
jns
pop
stos
mov
jae
sarb
mov
iret
ja
mov
stos
mov
push
add
pop
fildl
xchg
imul
and
and
hlt
pop
xor
add
jae
imul
push
mov
aad
jg
jmp
pop
sbb
bound
jno
incb
bound
mov
jl
cmp
lock
xorl
sub
dec
and
sub
xor
sbb
mov
cmp
sarl
mov
ss
jb
scas
mov
ja
jmp
pop
cmp
imul
mov
mov
jecxz
out
clc
cmc
jle
out
lret
mov
sub
pop
jge
sti
mov
dec
xchg
jecxz
mov
mov
rep
pop
xor
xor
ficoms
push
jo
repnz
fldcw
cmpsb
rcrb
jno
jle
jno
mov
lret
lock
out
push
test
pop
pop
jne
ret
push
pop
add
inc
loope
sub
mov
sar
mov
cmp
imul
add
cmp
push
and
push
fs
push
adc
icebp
lea
xor
jne
cmc
or
mov
in
repnz
adc
and
mov
inc
fisttps
aad
stc
in
xchg
add
rcrb
mov
repnz
xchg
dec
mulb
arpl
jg
xchg
leave
cmpsl
std
sahf
mov
pop
sarl
jmp
pop
test
sar
std
fucomi
push
pop
lea
mov
aam
push
cmc
popf
lahf
sub
in
scas
or
iret
in
leave
cmp
enter
std
imul
cmc
lcall
iret
jmp
sbb
sub
pop
clc
inc
sbb
repnz
testb
repz
push
arpl
call
cli
stc
jne
test
xchg
gs
sbb
popa
and
hlt
sbbl
jne
stc
fldl
iret
pop
sub
ljmp
out
inc
mov
aas
or
jo
mov
mov
loopne
pushf
not
jno
ja
je
pop
add
fldl
dec
mov
call
jl
shl
lahf
repz
xor
outsl
scas
sbb
clc
jne
ss
dec
popf
js
loopne
dec
jecxz
mov
dec
aad
jle
cmp
adcl
clc
jns
jbe
mov
imul
fs
lahf
or
mov
adc
imul
mov
fldt
js
shl
cmp
and
mov
pop
inc
push
or
jl
gs
ljmpw
movsl
mov
pop
sbb
decb
lock
xchg
push
pop
sbb
int
out
sub
pop
adc
mov
popl
adc
mov
inc
or
fiaddl
mov
sbb
ja
jg
mov
jp
xchg
in
or
mov
div
pop
popf
mov
decl
and
adc
call
ror
out
lock
sbb
std
scas
jg
jo
cs
repz
xchg
lahf
fstpt
jne
fisttps
iret
lret
inc
fisubrl
add
adc
aad
fdivrp
cld
int
adc
inc
dec
or
adc
or
sbb
jo
nop
mov
jl
add
dec
mov
gs
jecxz
add
jo
mov
adc
pop
jbe
pop
orl
loope
jl
mov
arpl
pop
pop
pop
stos
mov
mov
pop
sti
mov
popl
aad
mov
xor
rcrb
call
sub
adc
cmp
dec
cmc
pop
mov
and
das
mov
lds
clc
sahf
int3
movsl
mov
inc
pop
repz
or
xor
scas
inc
cmp
add
mov
mov
and
nop
ret
ficoml
mov
js
mov
leave
in
pop
inc
mov
pop
loop
adc
xchg
aam
xchg
mov
in
dec
cmpsl
cmpsl
ret
inc
nop
add
std
push
dec
stc
rcrl
pop
lea
rcll
add
xchg
push
pop
cmp
jge
add
cmp
loopne
push
mov
adc
aaa
jb
pop
or
cmpsl
icebp
add
push
icebp
fisttpl
dec
and
xchg
test
xor
repnz
cmpsb
loopne
shlb
push
in
lods
add
cmpl
jl
add
mov
dec
scas
sub
nop
jmp
add
jmp
cmp
fcmovu
pop
pop
sub
mov
scas
aaa
xor
in
repz
das
inc
insb
mov
inc
enter
xchg
enter
dec
out
daa
mov
in
pushf
xor
int
adc
adc
and
push
out
mov
cmpsb
stos
dec
negl
xor
scas
clc
sti
in
out
jno
fidivrl
adc
sbb
nop
sti
outsb
mull
outsl
cmpb
out
insl
aas
jb
out
pop
xor
stos
scas
add
loop
xchg
out
jmp
sti
fbld
sub
mov
sti
push
lret
jo
loope
push
stos
in
cmpb
cltd
mov
jp
jnp
lret
dec
pop
inc
lret
jp
call
pop
xchg
fsubrl
pusha
data16
sti
dec
mov
into
sbb
mov
cmc
lahf
repz
sbb
jmp
dec
xorb
sub
out
mov
lock
mov
push
popa
mov
push
mov
repnz
xchg
test
cmpsl
in
add
filds
in
divl
inc
aam
and
adc
insl
fidivrl
mov
daa
fstps
sahf
clc
stos
call
mov
lahf
adc
fs
dec
fcompl
out
cmc
test
cmp
imulb
dec
sub
mov
hlt
mov
mov
and
loope
add
pop
daa
jmp
fidivrl
cmc
dec
mov
imul
xchg
jl,pt
pop
aam
imul
out
subl
std
cltd
pop
test
dec
les
lea
pop
stc
xchg
cmpsl
and
mov
ret
sbb
out
pop
pop
mov
fcompl
leave
pop
jge
call
push
and
std
mov
stos
repnz
adcl
stc
pop
xlat
ds
fs
cmpsl
rcrb
leave
inc
div
je
and
xchg
lret
mov
sub
push
call
negl
pop
or
dec
into
frstor
rcll
loope
jns
jge
int
xchg
xor
call
xchg
jecxz
jge
test
rorl
adc
lock
xor
shll
fisubl
icebp
fistpll
xor
stc
inc
insl
pop
cmpl
cmp
mov
lock
add
mov
dec
push
cmc
lods
dec
pop
stos
jns
and
out
out
jae
jl
mov
sti
mov
inc
xor
ljmp
xchg
ja
and
outsl
out
movsb
mov
push
insl
fldl
xor
addl
out
stc
mov
addr16
inc
sahf
push
outsb
data16
jecxz
lahf
int3
ja
aad
rclb
loopne
test
outsb
shll
scas
add
lock
insb
aas
dec
repnz
data16
jno
fdivl
jge
jge
mov
cmpsl
incl
loope
push
daa
dec
mov
push
jno
popf
enter
mov
daa
nop
cmpsb
call
fst
lods
jle
nop
cmpl
pushf
rorb
inc
incb
mov
push
and
shll
leave
mov
cli
fiaddl
sub
cmp
dec
xorl
outsb
mov
or
xchg
pop
jle
outsb
imul
jnp
cltd
cmc
add
mov
shl
sbb
lea
cmpsb
cmp
dec
movsl
in
xlat
mov
das
cmp
std
cmp
aad
mov
adcb
mov
neg
mov
xor
out
je
es
or
popf
cmp
popf
repz
ja,pt
and
sub
pop
jne
lods
ljmp
adc
out
paddd
inc
lcall
jp
jnp
rcl
in
adc
add
jns
fldl
lods
shll
sbb
lahf
xchg
fsubl
outsb
int3
adc
mov
cmc
aas
dec
pop
mov
mov
xchg
arpl
xor
movd
dec
sub
into
mov
sbb
aas
repz
in
jl
lds
mov
dec
leave
dec
in
lods
xor
or
adc
lea
xor
pop
xorl
jge
dec
out
testl
cli
repnz
jg
bound
cmp
testl
in
loope
loop
sar
fsubrp
test
jl
mov
push
mov
movsl
popa
dec
add
pusha
jl
shl
fmuls
test
out
cmpsl
in
xchg
or
dec
movsl
stc
mov
aad
adc
mov
dec
cmp
es
add
push
imul
out
loopne
icebp
lret
jg
add
ljmp
push
loop
cmp
cmp
pusha
in
pop
jnp
lret
fs
mov
dec
inc
sub
hlt
mov
push
std
outsb
jmp
mov
mov
fsubrl
jnp
bound
outsl
and
xchg
pop
mov
into
fstl
lock
out
daa
dec
iret
scas
lret
pop
pop
mov
jge
outsb
ret
stos
mov
and
mov
pop
adc
cmp
cmpsl
fisubs
cmp
sub
add
out
dec
test
jge
mov
scas
mov
idiv
mov
and
pop
stc
mov
nop
jb
imul
scas
mov
insb
add
sub
stc
sbb
rol
lahf
fildl
outsl
loope
rorb
shll
pop
scas
lret
int3
lock
sarl
mov
loope
andb
aas
pusha
mov
jecxz
mov
adc
dec
xchg
ret
fnstcw
inc
mov
and
pop
mov
xchg
rcr
inc
in
xor
xchg
jnp
push
imul
inc
mov
cld
push
xor
stc
arpl
mov
mov
loopne
jnp
out
inc
sti
sti
rcr
in
xor
andl
sub
sub
mov
pop
in
mov
cmp
jmp
lret
pop
rcl
cmp
subb
fbstp
lret
cmp
iret
mov
andb
xchg
imul
add
enter
out
mov
mov
sar
imul
fdivr
add
ds
aas
jp
xor
cmp
add
and
mov
adc
mov
mov
adc
ja
mov
and
mov
mov
jnp
dec
les
pop
cltd
jns
test
jns
mov
pop
cmp
jno
vmovupd
ds
cs
push
sti
xlat
jae
out
ss
enter
xor
jno
jp
cmp
dec
stc
rclw
dec
movl
in
sub
std
popf
into
jb
js
mov
in
pusha
shlb
lods
test
jns
mov
inc
pop
sbb
inc
rcrl
into
pop
sti
sub
mov
sbb
dec
in
sbb
in
stos
iret
mov
hlt
call
lea
aas
lock
in
scas
pusha
ret
popf
sub
mov
in
in
inc
stos
je
xor
mov
push
sarl
jp
sub
xor
aad
or
mov
xor
jo
iret
mov
add
mov
testb
mov
in
fsub
fisubrs
popf
xor
jecxz
fisttpll
rcll
out
mov
test
outsl
lock
decl
std
daa
aaa
xchg
ror
rolb
sub
or
cmp
inc
repz
jno
inc
cmpsl
lret
das
mov
call
xor
or
jns
test
stc
out
decb
add
add
xor
nop
cmpsb
out
cs
rcr
mov
in
mov
inc
das
in
es
jns
add
hlt
cmc
xchg
jbe
and
in
cmp
addb
mov
jbe
cmp
jb
loopne
sub
pusha
test
sub
cli
jno
lahf
daa
pusha
repz
mov
cmp
cld
xor
mov
enter
in
loope
pop
sbb
shrl
call
push
clc
lcall
and
mov
ss
je
test
sub
iret
sub
and
mov
adc
sub
pop
movsb
push
mov
aam
xor
xchg
lahf
repz
std
mov
in
repz
std
pop
and
mov
data16
mov
jmp
and
lahf
cmp
mov
inc
jmp
je
mov
testb
mov
cmp
sub
push
repz
repz
mulb
icebp
push
pop
sbb
or
pushf
testb
sbb
mulb
shl
pop
sahf
dec
pop
cmp
data16
lods
sarl
lcall
dec
rorl
stc
repz
rorl
xchg
int
jge
cmp
mov
adc
hlt
orl
mull
mov
cmc
jecxz
jns
and
popf
in
mov
jns
push
inc
leave
aam
rcl
fldt
std
add
nop
stos
push
movsl
sahf
fisubl
xchg
aaa
in
pop
add
jg
loop
js
or
in
adc
push
or
push
jbe
mov
xchg
shl
xchg
inc
mov
fistpl
xor
repnz
in
lods
pop
mov
mov
dec
aam
xor
rep
xlat
xor
stos
clc
in
mov
aas
pop
cmp
jnp
adc
sbb
popf
jbe
pop
add
xchg
repz
push
mov
pop
not
mov
daa
adc
cmp
push
cmpl
inc
repz
repnz
mov
loopne
jno
in
jno
and
jno
ja
out
scas
out
sbb
outsl
seta
add
mov
addl
jne
mov
loopne
sub
xchg
lahf
js
icebp
mov
les
add
les
je
inc
mov
jb
push
jo
fcoms
jl
dec
adcb
lock
out
mov
pop
mov
in
fwait
imul
jmp
pop
in
ret
js
push
pop
icebp
test
jecxz
push
pop
jmp
jno
jmp
js
and
and
fsts
mov
aas
jae
cmp
add
cld
out
popf
jge
jg
cmp
pop
lods
subb
stos
jmp
mov
testl
frstor
fists
and
cmpsl
fdivr
sarl
mov
out
xchg
in
inc
scas
push
testb
lock
jno
cmc
pop
outsb
jae
xchg
test
ret
or
sub
and
mov
jns
popa
insl
inc
out
mov
jns
popf
mov
mov
in
lods
cmp
leave
lahf
insb
pop
add
inc
lods
push
mov
lea
sti
inc
je
ljmp
mov
or
int
jb
sub
shrl
xchg
andb
cmp
lret
data16
jmp
repz
inc
les
addb
mov
repnz
jge
sub
push
jg
das
movl
jge
lret
add
cmp
xlat
loope
mov
lods
lret
shl
lods
dec
mov
aad
and
mov
inc
dec
std
jae
scas
repnz
dec
push
int
xchg
sub
and
pushl
lock
sub
cld
jno
fistpll
mov
scas
sub
pusha
imul
push
dec
leave
and
mov
pop
cmp
shl
adcl
repnz
and
lahf
call
jle
xor
sub
mov
pop
xor
jl
and
enter
stc
cld
gs
nop
pushf
push
sti
sub
mov
cmp
loop
cld
jo
sub
fbld
fiaddl
xchg
pop
fcmove
cmpsb
out
adc
lds
add
iret
loope
fstpt
inc
mov
sti
and
hlt
ds
stc
jg
jns
std
mov
mov
out
mov
or
bound
adc
iret
popf
push
std
xlat
aas
pop
lods
call
push
lods
fisubs
lea
loopne
sub
add
repz
repnz
adc
jnp
sub
std
jmp
test
std
jmp
cmp
fadds
xchg
sbb
cmp
out
andb
mov
add
jge
mov
inc
insb
shll
in
lret
mov
mov
mov
ja
in
mov
stc
pop
fnstcw
adc
loope
cmc
sti
test
lahf
ret
andb
xchg
int
cmp
lea
gs
into
mov
dec
inc
cmp
call
aad
subl
leave
incl
cld
icebp
imulb
icebp
out
pop
cmp
push
iret
mov
fucomi
lret
rcr
clc
xorb
jge
dec
xorl
xchg
push
movsl
cli
mov
mov
cmp
add
xlat
sub
dec
mov
jecxz
shlb
pop
mov
xchg
jmp
outsl
xor
cltd
jl
ljmp
outsb
dec
ja
pop
bnd
add
jp
fsubrl
push
out
fs
iret
mov
cli
dec
adc
push
shr
addr16
flds
int
push
testl
xchg
or
scas
arpl
add
push
stos
out
cmp
call
ret
in
lods
aad
cli
insl
std
scas
push
fcos
dec
lret
lcall
mov
movsb
mov
imul
shll
inc
pop
fidivrl
dec
xchg
fwait
add
in
dec
inc
ud0
inc
mov
scas
ja
outsb
xchg
cld
icebp
and
ret
inc
lahf
fcmove
iret
jmp
stc
int
jmp
add
les
mov
sbb
fildl
jns
jg
test
cmp
mov
pop
jp
or
push
aaa
or
jno
lock
pop
repnz
add
jns
pop
inc
cmp
ds
dec
repz
imul
int3
xorb
hlt
in
gs
cmp
pusha
push
loope
xchg
cmpb
sub
mov
xchg
pop
subb
ret
jno
adcb
call
adcb
adc
sub
xchg
adcb
data16
jno
in
sbb
loope
jb
outsb
push
clc
jge
xchg
in
and
js
push
xchg
jle
push
idiv
xchg
std
xlat
test
pop
fdiv
lods
in
fidivs
loopne
in
in
mov
mov
movsl
imul
xorl
std
cmc
cmp
movl
mov
stos
out
lahf
out
jmp
mov
jno
test
mov
inc
jg
imull
fs
sbb
sar
shl
xchg
sub
frstor
inc
ret
xlat
aad
mov
cmc
push
xlat
fstpl
rcl
push
fildll
in
mov
jo
out
addr16
shlb
stc
lret
pop
mov
negb
inc
mov
push
std
sub
mov
mov
scas
imul
cmpsb
shr
pop
adc
nop
jge
cmp
sti
imul
mov
subl
aad
sbb
mov
fwait
mov
enter
and
fwait
je
sub
adc
cmp
popa
das
ljmp
jne
xchg
pop
hlt
adc
lret
push
lock
aas
sarb
test
push
mov
xchg
add
dec
jge
xor
mov
cmp
mov
iret
flds
movsb
kmovw
fisubs
jle
in
adc
add
jo
jl
pop
xchg
sub
aam
lds
jge
jle
xor
dec
aad
movsb
sti
inc
js
outsb
lds
aad
mov
pop
mov
lock
mov
push
cmp
jb
mov
cmp
cwtl
sarl
out
icebp
ds
cltd
pop
mov
xor
inc
call
and
loop
inc
and
incl
fstps
mov
daa
enter
and
mov
hlt
cli
cmp
jno
aaa
xchg
jecxz
sbb
loope
out
sub
mov
dec
adc
imul
bnd
push
jbe
mov
cli
ret
outsl
add
inc
mov
fimuls
cld
jnp
movsl
hlt
outsb
jns
dec
and
repz
pop
sahf
repnz
ficomps
jmp
hlt
push
xchg
lahf
mul
add
subl
or
add
xor
in
outsb
popf
loop
pop
push
ret
xchg
adc
icebp
popf
repnz
out
in
pop
out
cmp
pop
stc
int
or
outsb
int3
mov
in
pusha
loope
imul
mov
mov
roll
arpl
pop
mov
fsubrs
popa
in
jl
and
repz
pusha
js
repnz
jmp
repz
les
jp
pop
push
jns
std
arpl
stc
jle
sbb
mov
out
enter
mov
in
xchg
jg
pop
mov
in
imul
shrb
repz
mov
jmp
es
aam
push
inc
incl
cmp
push
nop
pop
adc
gs
ret
fdivrs
fistps
lcall
icebp
ds
pop
out
jbe
in
and
dec
loope
dec
int
fcmovnu
std
sbb
in
fidivrl
pop
aam
loope
jg
rorl
subl
lret
fildl
ror
aad
js
cmp
aas
addr16
call
cld
cmp
loopne
rorb
stc
xchg
repz
xor
push
divb
loopne
std
cli
clc
mov
int3
mov
jp
fdiv
out
cld
out
call
lret
dec
jns
call
mov
ljmp
mov
add
cwtl
movsl
push
test
cmp
in
iret
jbe
mov
out
lock
cmp
lock
jno
pop
push
subb
pusha
sbb
sarb
or
jo
xchg
pusha
call
lock
out
int3
imul
xor
addr16
fsubrs
sti
xor
repnz
xchg
clc
cmp
call
lock
sub
rorl
pusha
push
push
testl
dec
add
mov
pop
dec
stos
push
enter
mov
fnstsw
dec
daa
mov
pop
shl
int3
hlt
outsl
insl
sti
cmpsl
faddl
mov
jge
ja
xbegin
add
and
shrl
out
std
out
jmp
adc
fadd
inc
insl
and
pop
push
add
cmpsl
push
xor
push
pop
div
loopne
adcl
sbb
leave
ds
cltd
lds
add
fmuls
sbb
cld
pop
mov
mov
gs
into
xchg
sub
xlat
jge
xchg
pusha
jg
jl
into
ret
xor
cwtl
fnstsw
je
mov
jl
movsb
cwtl
cmp
imulb
push
pop
icebp
sub
fstps
jmp
inc
fdivs
mov
sbb
shrl
rorb
lods
mov
cmp
paddb
cmp
mov
pusha
clc
or
ds
lds
sarl
push
sbb
adc
pop
stos
xchg
push
lret
fldl
fwait
inc
shr
lahf
fcmovnu
mov
mov
loope
jno
cwtl
push
xchg
mov
adcb
aam
or
ficompl
xchg
out
test
mov
stc
stc
sbb
adc
imul
jle
dec
test
and
cltd
cmp
push
dec
and
cmp
rcrl
jge
jmp
jl
push
pop
stos
dec
jmp
inc
pop
loopne
ljmp
lcall
movsl
add
aaa
xlat
lcall
lds
mov
mov
imul
stos
push
fprem
fnsave
fnstenv
jns
sbb
into
es
test
insb
mov
inc
mov
add
cs
addr16
out
mov
jp
std
sbb
xor
and
scas
out
cmc
sbb
dec
mov
movsb
in
adc
cmc
jns
subl
int
push
jmp
mov
out
fiaddl
pop
loop
test
outsl
out
daa
out
and
cld
dec
mov
sbb
push
out
push
test
push
sbb
iret
mov
orl
sbb
lds
push
js
in
inc
mov
pushf
xorb
js
add
in
lahf
repz
mull
cmp
ja
pop
push
cmp
mov
lock
out
push
subb
mov
ds
xchg
ja
gs
jl
or
xlat
in
lret
out
cmp
lock
pop
loopne
sub
out
fdivrs
cmpsb
mov
mov
mov
mov
cwtl
jge
xchg
shll
pop
mov
cltd
mov
fwait
popf
in
push
mov
add
imul
loopne
sub
popa
mov
mov
call
lea
in
sub
cmpsb
icebp
aas
ds
adc
mov
sub
cmp
enter
fstps
jno
add
fsubrs
dec
mov
negl
mov
pop
repnz
jns
cmp
sub
je
xchg
aas
inc
pop
dec
nop
jmp
fldl
cmp
jnp
in
or
je
add
add
bound
gs
dec
sbb
sti
jecxz
insl
xchg
pusha
in
test
xchg
or
sti
add
push
mov
out
in
stos
sti
popa
lahf
cmp
cmp
and
dec
stc
loope
lds
jp
repz
xchg
inc
inc
cmp
clc
imul
jns
dec
jg
sub
or
roll
inc
iret
cmc
cmp
mov
dec
add
std
insb
or
adc
in
xchg
jge
jle
fcomps
cmp
sbb
push
aas
jge
push
cld
ja
mov
int
sbb
mov
les
inc
call
fwait
add
mov
mov
or
inc
mov
sbb
or
repnz
adc
subb
mov
xorb
or
push
cmpsb
inc
pop
test
in
in
aam
sarl
ret
xchg
cmp
outsb
clc
sar
lock
aad
faddp
jmp
push
push
adc
rcl
cmpsl
orl
mov
or
jno
bound
add
sti
inc
repnz
inc
or
xchg
test
sarl
std
add
mov
fnstcw
jg
and
std
arpl
movb
icebp
insb
clc
lret
cmp
loopne
fnstcw
stos
iret
lods
jge
cmp
lock
iret
sarl
adc
divb
push
sbb
mov
aam
fstpt
mov
add
jecxz
dec
xor
xor
imul
pop
cmp
xchg
xor
lahf
fstpl
or
stos
loopne
jo
mov
std
ret
mov
in
shll
imul
repz
std
sbb
int
mov
stc
pop
jmp
mov
or
stos
loopne
jo
mov
std
ret
mov
dec
lock
enter
jns
jmp
pop
jo
mov
std
adcl
mov
mov
pop
pusha
gs
mov
lret
mov
std
mov
or
mov
fs
stc
pusha
mov
fneni(8087
aad
jecxz
fucomip
inc
addr16
repz
data16
idivb
pop
pop
je
inc
mov
mov
std
dec
fbstp
jno
jns
xchg
lock
dec
mov
fildl
fnstcw
jae
out
jmp
xlat
fcomip
inc
mov
std
addl
pop
je
inc
mov
mov
std
dec
fbstp
jno
jns
xchg
lock
dec
mov
fildl
popa
jns
jae
out
jmp
pop
fcomip
inc
mov
std
addl
pop
push
je
inc
mov
mov
std
push
mov
ret
xchg
lock
iret
mov
fildl
les
jae
out
jmp
fcmovnu
repz
mov
std
addl
pop
fbstp
mov
mov
std
fstp
mov
mov
jns
xchg
lock
inc
mov
fildl
push
jecxz
nop
out
jmp
call
mov
addl
stc
jbe
mov
inc
mov
mov
std
fcmovu
mov
mov
jns
xchg
lock
out
pop
rol
cmp
jecxz
nop
outsb
jmp
pop
or
mov
fsubr
xchg
in
inc
les
or
stos
xchg
mov
pop
popa
mull
pop
push
jno
jb
pop
jp
cmp
call
stc
adc
popa
sbb
and
and
popa
sub
xor
xor
fisttpll
fstl
fstpl
frstor
fnsave
fnstsw
fldl
inc
fisttpll
dec
fstl
push
fstpl
pop
frstor
data16
outsb
fnsave
jbe
jge
jle
ret
xchg
add
imul
jp
adc
or
adc
adc
sbb
sbb
sti
inc
fldcw
imul
imul
imul
add
in
jecxz
arpl
test
jmp
repz
mov
lea
pop
dec
add
push
push
push
adc
and
inc
addl
test
leave
dec
or
add
jle
test
jnp
rcr
test
xlat
outsb
arpl
xor
mov
jbe
stos
scas
jae
sar
pop
push
inc
push
cmc
pop
aas
scas
mov
stc
out
push
mov
mov
push
sti
sbb
rcrb
lods
mov
push
pop
xchg
cmpl
sub
ljmp
push
punpckldq
cmp
xor
cwtl
mov
sbb
add
push
sub
hlt
aaa
jb
iret
sub
add
mov
pop
clc
ss
clc
add
ja
cwtl
testl
cmc
cmpb
testl
fnsave
andb
std
mov
sub
jmp
shlb
push
outsb
mov
xor
fisubrl
dec
rcl
pushl
inc
jmp
in
out
in
int3
xchg
int
ja
mov
aas
in
js
pop
pop
dec
inc
jecxz
inc
out
push
ret
pop
out
stc
jns
xchg
mov
pop
mov
fucomip
jno
add
dec
test
push
cmpb
adc
fstpl
inc
mov
cwtl
shrl
mov
aas
daa
add
mov
cmpxchg8b
enter
adc
shrl
sti
mov
rclb
cmp
cmc
into
jmp
fcomip
sti
mov
cmp
push
lock
mov
ret
cmp
push
lock
mov
imul
jbe
mov
ret
cmp
push
lock
mov
add
lock
mov
ret
cmp
push
lock
mov
ret
cmp
pop
mov
ret
cmp
push
lock
mov
ret
cmp
push
lock
add
cmp
push
lock
mov
ret
cmp
push
lock
cmp
push
lock
mov
ret
cmp
push
lock
mov
push
push
lock
mov
ret
cmp
push
lock
xor
out
clc
pop
stc
cli
cmp
imul
stc
je
sbb
stc
and
mov
lahf
jae
out
cmpsl
std
dec
fildll
std
pop
push
fistpll
std
pop
iret
fisubl
xlat
shlb
fbld
out
fstpt
idiv
pop
dec
xor
mov
lahf
popl
ss
mov
lahf
mov
pop
lock
xor
lahf
fnsave
or
loopne
jo
mov
std
fistpll
sbb
xchg
lock
pop
mov
xchg
mov
in
pop
lock
fs
frstor
or
mov
inc
jo
mov
std
iret
mov
into
lock
out
lret
mov
mul
inc
mov
dec
jns
xchg
lock
negl
mov
mov
aam
mov
fdivr
iret
mov
int
fbld
out
fdivrl
mul
fiaddl
or
test
push
sbb
mov
inc
mov
cmpsl
add
scas
jae
out
mov
pop
fistpll
jno
jns
xchg
lock
fistpll
out
pusha
fucomip
inc
mov
loop
inc
mov
bound
mov
in
lret
or
cmpsl
imul
mov
sbb
mov
std
iret
mov
popa
lock
out
dec
mov
mul
aad
mov
insb
push
stc
cmp
jno
dec
jns
xchg
lock
mov
lds
mov
std
out
iret
inc
mov
jns
xchg
lock
shlb
out
fs
stc
xor
mov
push
stc
cmp
jno
gs
xchg
lock
addr16
mov
fnstsw
jae
outsl
adc
xchg
repnz
hlt
pop
mov
mov
mov
mov
mov
std
add
icebp
or
adc
adc
icebp
sbb
and
and
icebp
sub
xor
xor
icebp
cmp
dec
adcb
sub
out
ss
cmp
out
inc
out
dec
out
dec
out
push
out
push
out
pop
out
pop
out
gs
out
insl
out
outsb
out
jne
jbe
jge
jle
add
push
in
adc
xchg
add
jns
jp
cmpl
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
jp
iret
sbb
pop
push
xlat
mov
adc
gs
add
test
push
test
and
test
mov
icebp
iret
lret
push
push
jg
sti
cmp
jl
sar
mov
data16
in
dec
out
cmpsb
jmp
dec
jmp
in
push
fcompl
or
popf
imul
mov
lea
jl
lock
fistps
out
int
pop
sahf
les
jge
lods
cmp
mull
in
xchg
mov
push
lods
ficoml
mull
mov
loopne
sti
loopne
mov
xchg
negl
pop
dec
xchg
inc
sub
std
lret
scas
sbb
ss
dec
xchg
push
cmp
jae
jnp
xor
cmp
inc
pop
xor
aaa
imul
xor
and
fnstenv
cmp
int
cmp
xchg
test
fbstp
push
mov
cld
jne
mov
out
add
inc
push
lret
cmpsb
ds
mov
push
test
pop
cmp
fnstsw
popf
add
jle
outsl
pop
out
mov
xchg
and
xchg
jns
icebp
add
inc
mov
fucomp
push
xchg
insb
loop
xchg
insb
loop
stc
loop
mov
lock
jp
add
pop
cmpsl
mov
clc
scas
pop
icebp
mov
rol
pop
clc
out
dec
std
cld
jae
cmp
push
loopne
inc
rcr
pop
mov
sub
mov
sub
mov
test
and
leave
jns
mov
xchg
and
loope
aas
lcall
in
cmpsl
add
dec
push
bswap
setg
push
lds
inc
dec
fnsave
mov
mov
cmp
cmp
push
lock
mov
ret
cmp
fldl
cmp
cmp
push
lock
mov
ret
cmp
push
lock
lds
push
lock
mov
ret
cmp
push
lock
test
shl
add
mov
ret
cmp
push
lock
mov
lock
pop
mov
ret
cmp
push
lock
mov
ret
cmp
fldl
cmp
cmp
push
lock
mov
ret
cmp
push
lock
lds
push
lock
mov
ret
pop
mov
rclb
lahf
xchg
lret
stc
arpl
push
add
mov
hlt
div
jns
pop
adc
jl
mov
dec
lret
cld
les
lret
clc
std
stc
mov
and
or
jl
js
adc
js
movsb
daa
jecxz
mov
pop
sbb
sahf
pushl
loopne
sti
add
cmp
sbb
fistpl
ret
push
pop
outsb
push
sbb
pop
fiaddl
jno
jns
cs
adc
bound
pushf
jno
lret
loopne
es
mov
xchg
std
outsl
push
jnp
inc
int3
or
push
loope
rclb
cmp
and
inc
notl
fcomip
jl
cld
je
add
cmovle
in
jbe
cli
in
iret
icebp
outsb
test
lret
jge
inc
dec
cmp
in
xor
hlt
in
inc
outsl
les
out
push
nop
jbe
lret
popf
jns
repz
das
call
cwtl
mov
in
push
scas
mov
pop
add
jb
repz
addr16
fildl
insb
ss
sbb
sub
xor
je
arpl
incb
cmp
sbb
fs
xchg
hlt
rolb
cli
jno
test
mov
mov
or
jnp
inc
add
or
xor
lock
vpsrlw
jne
mov
je
aad
push
scas
sub
sub
out
lds
adcl
stos
aas
push
jmp
mov
inc
in
lods
sub
jmp
add
mov
xchg
add
pop
jp
cmpsl
outsl
cmp
jo
or
sbb
dec
call
and
mov
mov
lods
mov
mov
sarb
out
dec
jl
mov
fisubrs
sub
xor
je
pop
iret
mov
mov
pushf
jl
fcmovne
cwtl
and
data16
sbb
es
cmp
jns
insb
ja
jl
scas
fisttpl
cmp
mov
adc
or
repnz
sbb
ret
nop
rolb
jg
mov
jl
aas
add
cltd
roll
jnp
es
lret
cmp
test
jle
xchg
cmp
and
xor
fcmovnbe
out
insb
repz
lods
pop
scas
cld
xchg
test
dec
jno
movsb
xchg
mov
cmp
push
or
xor
negl
outsl
sahf
jge
dec
adc
dec
push
mov
hlt
push
push
xorl
and
pop
lret
jle
je
out
mov
outsl
adc
sbb
push
mov
das
ljmp
cld
imul
cmpb
mov
mov
pop
ljmp
gs
push
add
scas
repnz
push
cmp
imulb
mov
mov
mov
push
jnp
je
mov
mov
insl
xchg
mov
out
push
dec
cmpsl
out
pusha
popa
movsl
lcall
adc
mov
lret
lods
in
scas
pop
pop
mov
nop
fsub
or
mov
jmp
xlat
inc
negl
fcompl
sub
in
fwait
mov
jne
imul
aas
test
inc
and
fcmovnu
cmc
enter
fsubr
xchg
add
call
mov
fdivs
daa
jl
insb
icebp
jg
cmpsl
in
sbb
out
in
aam
pushf
jl
push
call
dec
sarb
imull
mov
loope
sti
subl
in
adc
cld
jbe
xlat
ret
in
sbbb
mov
aad
mov
pop
lea
sub
aad
cmp
fcoml
mov
dec
pusha
lea
push
int3
mov
jmp
sahf
mov
mov
repz
mov
jns
sti
std
mov
inc
jge
inc
jecxz
testl
mov
leave
cmpsl
leave
pop
ds
sarb
outsb
je
insl
xchg
js
inc
lock
inc
andl
cld
and
pop
cli
jno
cld
flds
sub
add
add
movsl
lods
inc
jle
jno
dec
cltd
add
repz
out
pop
ret
roll
clc
add
mov
movb
fiadds
ja
push
add
pop
lret
out
popf
mov
int3
cmp
jno
cld
addl
je
adc
mov
inc
jb
push
stc
insb
aas
call
fiaddl
insb
xor
jns,pt
jne
shr
pop
fnstcw
mov
jp
jno
std
jno
push
and
sub
fchs
repz
cld
jo
iret
inc
icebp
jl
pop
pusha
jge
cmp
sub
mov
mov
xchg
insb
jno
dec
dec
pop
out
jno
cld
push
cmp
mov
and
loop
and
pop
add
add
loopne
jo
iret
jge
test
xor
pop
fiadds
jg
mov
fucomp
std
push
jns
jg
mov
lret
mov
aas
idiv
enter
stc
mov
lret
mov
repz
sub
loopne
jno
mov
dec
out
or
pop
fdivr
mov
aam
ficoml
mov
repz
insb
mov
jge
cmp
lret
sub
xor
cld
in
jle
push
cltd
jl
adc
fiadds
jle
outsl
pop
jle
mov
push
in
push
cld
lahf
push
jle
test
fidivrs
xor
mov
das
jle
jg
mov
mov
mov
and
std
out
nop
icebp
out
rep
mov
xlat
out
ljmp
jg
inc
mov
cmp
jge
ret
test
cli
pop
mov
jge
repz
ss
cmpsl
std
js
pop
mov
clc
sti
jge
test
cld
sbb
push
imul
fdivl
mov
into
outsb
ret
mov
loopne
test
mov
loopne
clc
xor
jno
mov
dec
lcall
out
rcll
aas
mov
ja
xchg
inc
imul
int
cmp
test
jns
je
inc
xlat
loopne
jno
mov
fidivs
outsl
mov
dec
sub
arpl
out
push
jl
push
push
and
ja
jl
lods
pop
pushf
in
add
orl
mov
sbb
and
lods
xchg
aas
fildll
push
pop
aas
mov
add
cmp
sti
dec
test
cmp
aam
shrb
mov
or
jno
mov
lods
std
cmpl
test
mov
mov
lods
add
pop
jns
mov
std
jae
shll
pushf
idiv
jmp
jno
stos
mov
xchg
jecxz
icebp
ss
push
mov
sti
jg
jnp
dec
lea
clc
add
shll
lcall
movsl
outsl
sahf
xlat
mov
jg
jecxz
mov
cmp
cli
in
lock
aad
into
jge
testl
or
fsts
or
mov
mov
addr16
push
dec
insl
das
insb
dec
repz
sub
pusha
dec
aad
mov
addr16
xchg
data16
scas
xchg
and
imul
sub
inc
mov
push
jg
add
fmulp
sahf
subl
in
cltd
and
js
push
imul
jecxz
loope
sar
cmp
pop
and
inc
mov
adcb
rcr
je
push
dec
sub
and
je
filds
cltd
rcl
inc
out
mov
in
pop
idivb
lods
cld
in
push
add
movsl
jmp
sbb
mov
nop
std
xor
out
js
add
cwtl
mov
insl
jno
jecxz
or
mov
push
in
enter
aas
xchg
xor
std
sbb
stc
or
and
pop
add
aaa
xor
add
xor
fxch
mov
dec
pop
repz
xor
mov
iret
inc
arpl
push
push
aaa
in
sbb
fcomi
in
dec
cmp
lea
mov
mov
xchg
push
xchg
call
cmpl
in
push
xlat
stc
and
or
scas
jg
mov
mov
pop
iret
leave
mov
jbe
repnz
jl
mov
dec
dec
mov
dec
sbb
outsb
insb
cmpsb
mov
jmp
leave
aas
xlat
neg
dec
aad
and
lret
aad
fs
xor
xchg
cwtl
mov
int3
adcb
icebp
fdivrl
jl
inc
xor
mov
dec
repnz
into
pop
iret
stc
scas
mov
jne
xchg
pop
xor
btr
mov
push
push
xchg
call
stc
mov
enter
mov
jle
fisubrl
pop
stc
mov
jl
or
ljmp
scas
std
idiv
ljmp
inc
aas
dec
xchg
cld
mov
popf
xor
daa
mov
ret
pop
mov
iret
subb
loopne
btr
testl
push
and
test
out
mov
popf
cs
jbe
les
dec
and
push
cwtl
adc
in
jle
test
jnp
ud1
push
mov
cltd
rolb
das
mov
jge
repnz
sbb
fwait
in
dec
ljmp
out
cmpsb
dec
or
fistpll
cli
cmp
dec
cmc
or
add
in
outsb
cli
icebp
cli
scas
add
cli
jecxz
shl
sub
cmp
add
pop
mov
ret
mull
lods
lea
mov
or
dec
int
mov
cltd
test
push
sub
in
je
pusha
outsl
incl
faddl
sub
outsl
inc
mulb
aaa
xchg
daa
push
in
insb
mov
popf
loop
jmp
inc
fisubrs
pusha
dec
repz
clc
iret
adc
pop
pop
sti
jno
jl
enter
jl
mov
push
sbb
mov
loope
jg
cld
mov
insl
xchg
mov
mov
push
sbb
cli
adc
add
je
repz
sub
push
mov
jno
stc
fisttps
negl
lcall
mov
push
mov
pushl
out
out
mov
clc
add
jmp
jge
dec
lods
jae
je
int3
mov
inc
ljmp
aam
movsl
jb
xchg
cmp
jge
andb
mov
leave
mov
pop
out
push
push
out
negb
repz
pop
mov
insb
repz
jmp
pop
int
add
ja
decl
movsl
lret
or
ficoms
insl
cmp
pop
cmpsl
sub
rorl
jb
fucom
pop
or
mov
xor
sbbb
xor
fiaddl
in
mov
fildl
jnp
aam
mov
out
movsl
test
jg
pop
jg
lods
adc
cmp
xchg
mov
cli
lret
cmpsb
int
mov
jge
jl
add
rclb
jns
insl
dec
imul
adc
aas
xchg
test
fimull
stc
dec
cmpsb
repz
incb
mov
outsl
in
pop
repnz
cmp
in
jo
out
in
mov
xchg
inc
bnd
je
popa
fisubl
mov
pop
jle
add
mov
pop
pusha
jle
pop
leave
mov
je
jmp
bound
mov
subb
jmp
dec
cmp
jne
sbb
inc
dec
loop
repnz
add
lods
mov
adc
xorb
adc
adc
jl
xorb
std
push
cmpsb
dec
paddw
ds
filds
mov
mov
cmp
pop
bnd
dec
call
icebp
jmp
nop
jno
sti
or
jo
das
xchg
pop
xchg
mov
sub
adc
out
sub
ret
enter
arpl
gs
sti
xchg
outsl
mov
sub
shr
outsb
or
mov
sub
bound
rolb
jl
outsb
cmpsl
out
ss
jl
stos
adc
repz
test
repz
jbe
sarb
add
js
lock
push
mov
jge
pop
movsl
mov
aas
dec
lahf
mulb
inc
pop
dec
daa
cld
outsb
inc
dec
aas
lret
gs
mov
hlt
mov
add
push
xchg
outsb
push
push
cwtl
ror
sti
sbb
jl
aad
or
adc
fwait
adc
mov
inc
fnstcw
movsb
lret
andl
rclb
ret
sbb
pop
cltd
push
std
rcrb
sti
inc
ret
les
int
push
js
or
dec
imul
repnz
cli
mov
js
xchg
pop
mov
outsb
subl
in
add
xor
test
mov
mov
mov
inc
roll
mov
xor
iret
sbb
fsts
fxch
fidivrl
in
inc
xor
push
out
stos
xchg
lret
shl
je
cli
imul
mov
lcall
popl
gs
jp
fsubl
and
push
jmp
ret
xlat
xor
stc
scas
orb
pop
cmpl
rcr
xor
in
or
std
sar
xlat
outsl
fldenv
aam
shll
adcb
loop
mov
or
inc
mov
jp
lcall
je
das
repz
xlat
cmc
push
inc
mov
loop
loopne
lods
outsl
mov
icebp
daa
mov
cwtl
cltd
fld1
decl
or
loope
adc
pop
fdivrp
sbb
fiadds
stc
in
test
pop
mov
adc
repz
out
out
fwait
shlb
bound
mov
mov
and
popa
sarb
movsl
insl
pop
popf
stc
rorl
fxam
mov
aad
cmc
insl
testl
fpatan
ss
ljmp
adc
sbb
pop
ss
stc
jecxz
add
jp
xor
std
mov
jl
dec
je
cltd
repz
sbb
add
sub
pop
sbb
ret
aaa
cmpsb
jno
repz
out
ja
jge
jnp
or
push
outsb
jge
js
xlat
in
call
repnz
iret
jns
jb
push
jns
and
jns
loopne
jo
dec
cmpb
add
cmpsl
call
sub
test
test
push
or
mov
pusha
insb
out
divl
stos
or
repz
fidivs
lock
jge
push
dec
pusha
into
pop
stc
cmp
xchg
mov
or
or
loop
lahf
mov
xchg
lock
mul
dec
notl
lahf
jl
xor
loope
jle
leave
outsb
dec
cld
repnz
stc
push
mov
inc
jns
mov
jg
in
jle
clc
je
movsl
add
jg
mov
jmp
cmp
iret
mov
mov
mov
fstpt
cld
jge
add
in
ja
outsl
aas
loope
mov
pop
sub
stc
loope
paddd
enter
bound
lock
mov
jle
pop
ss
mov
sub
mov
pop
dec
cwtl
out
or
imulb
inc
xchg
insl
imul
xchg
cmp
jnp
xorl
cmc
sar
or
mov
push
stc
cld
das
pushf
mov
jb
lcall
cmpsb
or
jge
and
mov
loopne
add
xchg
cld
and
sub
cld
fs
ficompl
icebp
ss
add
bound
bound
negl
jno
or
repnz
lods
mov
jnp
and
fs
mov
loopne
sub
movsl
shrb
lcall
sbb
xchg
in
and
into
lahf
add
xor
in
dec
dec
add
mov
xor
jb
fistps
cld
icebp
mov
outsl
jp
jns
mov
xlat
xchg
pop
out
inc
xor
cmc
scas
scas
and
push
ret
inc
push
jge
push
cmpsl
lock
testl
and
scas
xchg
inc
lret
stos
pop
push
shl
lods
pop
leave
cli
or
mov
mov
adc
repz
repz
imul
inc
lods
pop
jbe
cli
push
enter
dec
sbb
push
insl
dec
or
sbb
incl
cmp
addr16
sbb
fcom
es
push
sub
inc
cmp
fucomi
lds
sahf
inc
jne
cmp
addl
dec
jecxz
fistpl
daa
jmp
mov
lahf
fucomip
stc
aaa
push
mov
push
mov
jmp
push
leave
jg
dec
mov
sarb
sahf
repz
nop
push
sti
inc
pop
jno
stc
lret
dec
mov
sbb
outsl
inc
mov
out
repz
popa
lcall
insb
imul
pusha
shrb
cld
outsb
aas
pop
outsl
hlt
icebp
ds
nop
mov
dec
dec
lods
roll
in
stc
imul
push
aas
fidivrs
pop
sub
pop
pop
roll
xchg
repz
stc
push
mulps
pushf
flds
test
fildll
arpl
cmc
insb
ljmp
std
frstor
mov
aaa
xchg
repnz
std
call
loope
mov
outsl
daa
sub
in
pusha
xchg
sbb
cmp
into
test
add
sahf
sbb
pop
icebp
jge
in
arpl
mov
outsl
stc
jo
jmp
imul
mulb
stos
jne
dec
gs
jl
inc
out
in
repnz
add
and
push
loopne
cmp
mov
out
mov
std
or
loopne
mov
cld
jns
xchg
adc
sbb
adc
jno
xor
je
mov
pushf
in
jecxz
shrl
xor
add
xchg
aad
pop
out
push
and
inc
pushf
add
es
mov
orb
dec
push
cmc
add
cmp
pop
leave
ret
pop
into
ljmp
pop
sahf
insl
cmp
fcmovu
push
add
mov
cmpl
sub
sub
inc
mov
sbb
xor
popf
jmp
stc
mov
in
jge
cmpsb
out
ljmp
sbb
pop
into
and
and
add
mov
inc
xor
loopne
stc
mov
xchg
test
idivl
je
adc
add
push
mov
sbbb
jne
push
lock
xor
dec
loope
imul
ljmp
or
mov
jns
enter
pop
dec
mov
outsl
stos
idivb
popf
add
idivl
jge
mov
push
nop
outsb
jge
push
lea
ljmp
jmp
push
icebp
ds
mov
sbbb
iret
jge
cmp
std
jge
aas
stc
add
cmp
mov
jge
arpl
gs
test
lds
mov
stc
div
ds
ss
fdivrp
mov
lds
cmp
popf
mov
idivl
cld
jns
subb
jle
rcll
iret
cmp
xchg
popf
iret
jl
dec
sarb
aad
mov
iret
cmc
in
dec
cmp
nop
cld
mov
nop
sub
cmp
xchg
popf
in
sti
mov
mov
or
xchg
shll
sti
jp
int3
sub
jp
xchg
dec
xchg
adc
sarb
jg
iret
fucomip
enter
sub
pop
enter
add
xchg
in
xchg
out
subps
subl
jne
mov
aam
mov
stc
sbb
pop
dec
je
out
lea
dec
mov
int3
jp
lahf
fsubr
imul
repnz
lods
cltd
cltd
xor
xor
out
pop
inc
clc
xchg
es
jnp
mov
pushf
shl
jg
repz
fucomip
inc
push
imul
sbb
pop
adc
cmpl
je
rorb
xor
dec
fwait
jno
jp
cmp
or
mov
fidivrs
stc
movsl
mov
call
popf
call
arpl
dec
test
push
int3
mov
icebp
xor
pop
repz
notb
mov
jle
add
add
cmc
divl
dec
shr
rcl
enter
push
xchg
pushf
fistpll
movsb
xchg
mov
push
cmc
dec
mov
cmc
movsl
xchg
xchg
fistpll
pop
mov
jle
pop
add
js
push
iret
enter
sbb
leave
ljmp
ljmp
mov
push
rcrl
outsl
out
push
dec
mov
outsb
cmp
jno
stos
jno
cwtl
push
ret
js
mov
ftst
pop
adc
loope
popf
fdivr
aam
lea
ret
icebp
ftst
mov
das
clc
push
jg
xlat
call
inc
adc
mov
aam
ds
cwtl
inc
std
xchg
pop
jb
inc
add
insl
sbb
cmp
or
jae
lea
bound
push
test
scas
inc
cmp
add
roll
ret
sub
cld
arpl
mov
orl
gs
jg
shll
dec
scas
cmpl
xlat
ljmp
mov
js
mov
pop
xchg
icebp
mul
lret
jge
inc
mov
call
jns
outsl
adc
les
cld
sbb
adc
mov
and
hlt
xchg
addb
xchg
mov
inc
pop
fisubrl
popf
fnstsw
popf
ret
mov
scas
call
mov
shll
rcrl
icebp
int
mov
mov
push
icebp
mov
mov
mov
arpl
out
mov
sbb
fwait
mov
outsl
rcll
pop
daa
outsb
lds
lods
clc
sub
and
or
dec
mov
push
mov
sbb
js
fwait
and
es
mov
js
stc
dec
lret
movsl
add
dec
inc
movsl
repz
stos
mov
call
mov
divl
repz
jle
fcmovnu
mov
fistpl
mov
cmc
gs
jo
mov
xchg
cs
xchg
bound
sti
lahf
stc
repz
sub
sbb
jnp
ljmp
cld
push
cs
aas
mov
xor
iret
loopne
imul
in
jmp
clc
fildl
pushf
out
call
test
add
mov
mov
xor
stc
cmp
cwtl
clc
movsb
xchg
fiaddl
ficoms
daa
fcmovnbe
mov
mov
jg
jl
stc
sbb
jne
mov
popf
jl
dec
jle
cld
fistpll
out
mov
mov
or
rol
jle
pop
lret
int
jp
jp
repz
mov
sarb
push
mov
repz
aas
cmp
imulb
push
cmp
lret
in
sbb
or
outsb
out
hlt
xchg
fistps
repnz
mov
mov
shrl
cltd
subl
add
sarl
sar
pop
out
jno
fisttps
push
lret
fcomps
lds
iret
mov
sahf
lods
pop
shrb
jle
imul
sbb
cmpsb
mov
mov
cmp
mov
cld
lret
pop
xor
pop
jl
lds
mov
mov
fs
xor
mov
jge
mov
jge
std
jb
nop
or
testb
mov
mov
pop
mov
stos
push
loopne
flds
aam
insb
jnp
dec
out
and
mov
popf
adc
add
jno
hlt
cmp
inc
std
fcomi
out
or
bound
loope
pop
jmp
fistpl
mov
idiv
cmc
mov
jmp
mov
push
insb
sub
mov
loopne
pusha
and
pop
js
sbb
cld
mov
jecxz
mov
and
inc
cmpsb
mov
cwtl
jnp
pop
xor
inc
fsubrs
loope
stc
fs
movsb
pop
ret
aaa
jp
or
dec
xor
idiv
shrl
aam
out
push
in
lea
in
mov
sarl
mov
leave
jge
sbb
das
sbb
outsb
pop
pop
lods
std
roll
test
pop
scas
popf
pop
pop
insb
sbb
loop
ret
aaa
fisttpll
mov
mov
add
aad
mov
fcmovnu
iret
fstpt
cmp
lock
xor
jge
shl
loop
call
call
push
xchg
mov
push
mov
lret
add
mov
cltd
pushf
sar
dec
stc
inc
adc
sti
mul
mov
leave
lock
stc
in
addl
push
pusha
popf
push
stc
mov
mov
jp
inc
movsl
pusha
popf
ljmp
jecxz
mov
movsl
pusha
popf
into
mov
mov
fs
jp
movsl
pusha
popf
dec
mov
mov
fs
jp
dec
movsl
pusha
popf
dec
mov
mov
mov
jp
dec
movsl
pusha
popf
dec
mov
mov
mov
jp
imul
mov
fs
push
in
dec
std
sarl
push
test
push
jns
jae
out
sti
jns
mov
jno
dec
mov
xchg
fbld
sbb
iret
lods
or
in
leave
mov
loop
sub
sbb
jecxz
iret
lods
or
ffreep
repz
leave
jno
add
inc
roll
push
in
cmc
repz
outsl
push
repz
aaa
xchg
inc
outsl
push
mov
aaa
xchg
inc
jbe
sub
movsl
das
push
xor
rorb
add
jno
push
pusha
ret
dec
aas
movl
loopne
mov
mov
dec
inc
in
popf
icebp
shl
push
mov
jbe
leave
and
push
aas
push
push
movl
loopne
mov
mov
popl
jno
inc
inc
jl
imul
into
mov
mov
imul
inc
enter
shl
dec
mov
jbe
push
mov
ljmp
test
pop
fucomp
mov
iret
lahf
repz
movsb
clc
and
loope
int3
movsl
xchg
and
push
stc
leave
sub
ret
mov
jbe
enter
arpl
jo
imul
leave
jbe
dec
mov
push
dec
inc
jl
enter
mov
mov
jo
frstor
out
enter
add
popf
out
repz
insb
mov
fmul
js
lds
out
dec
shl
mov
add
sarl
fninit
cmp
xchg
stos
sub
ror
sarl
popf
mov
dec
adc
hlt
fildl
add
jbe
add
jns
stc
xor
mov
pop
cwtl
shlb
push
sub
aad
in
imul
add
mov
add
and
pop
ljmp
and
das
dec
stc
add
fcoml
sub
decb
xchg
sub
jecxz
pop
cld
in
push
xchg
mov
mov
outsl
mov
jmp
inc
pop
iret
jmp
sub
shl
in
inc
push
lods
add
in
add
lods
jl
leave
adc
cmp
lret
leave
mov
push
loop
push
neg
in
rcr
add
xchg
xchg
imul
nop
xchg
sub
shl
iret
push
or
xor
jmp
cld
in
jo
arpl
push
push
repnz
dec
ret
jl
icebp
jg
xchg
dec
mov
cmpb
out
popf
std
int
push
xchg
ljmp
stc
subb
xor
outsl
pop
aad
in
icebp
std
int3
cli
out
call
xchg
adc
mov
insl
inc
dec
dec
jno
inc
stc
cld
js,pt
dec
cmc
jno
inc
in
aad
jg
jle
pop
xchg
leave
loopne
mov
ljmp
loopne
pushf
cld
push
xchg
or
push
aas
and
or
fdivr
lds
add
jle
call
push
popa
out
cmpsb
rcll
insb
mov
mov
call
out
jle
push
jl
repz
jle
jl
loope
fxch
cld
pop
out
jns
cmp
jnp
loopne
adc
jg
in
movsb
jmp
lahf
mov
enter
shlb
jns
dec
clts
das
mov
insl
mov
or
push
push
cmp
fdivr
add
cmc
jg
sbb
iret
in
sbb
addr16
ss
sete
adc
arpl
out
outsl
jbe
jno
js
push
lock
iret
hlt
fs
aas
or
loop
stos
hlt
test
icebp
xchg
push
mov
jbe
sete
aam
jo
or
xchg
icebp
ja
inc
outsl
and
fmuls
fbstp
cmpsb
push
cmc
repnz
scas
push
dec
or
arpl
jl
incb
inc
daa
mov
das
mov
xlat
fisubs
hlt
inc
cld
sub
jp
iret
lret
imul
fdiv
or
cmp
loope
fadd
jle
dec
gs
pop
jmp
push
popf
fs
mov
aaa
or
fbld
std
shll
icebp
fsub
icebp
inc
shl
pusha
jno
push
fists
arpl
neg
loopne
mov
mov
xor
fucom
jl
add
ret
xor
mov
push
out
icebp
jae
adc
xor
idiv
adc
shrb
nop
push
in
mov
aaa
xlat
jge
leave
dec
fimuls
inc
cmpsl
add
inc
das
fcomps
sbb
loope
fisubl
dec
and
cmpsl
mov
neg
fld
repz
cli
ss
jno
add
cmpb
inc
add
push
pop
fcoml
cmpsb
loope
mov
shrl
adc
sarl
pop
insl
pusha
jp
nop
mov
xor
test
hlt
sbb
jmp
arpl
mov
stos
sbbb
in
fdivl
mov
pop
js
jecxz
xor
and
loopne
int
xor
stos
ds
adc
mov
out
xchg
cmp
arpl
jne
sarb
pop
and
pop
mov
xchg
lret
out
gs
jge
cmp
or
inc
aaa
sbb
pop
ret
xor
jle
leave
test
adc
dec
jle
mov
repz
pusha
jmp
ret
inc
pop
out
iret
aaa
fsqrt
in
jns
xor
sti
enter
sbb
fnstcw
call
cltd
iret
in
jge
mov
lock
mov
adc
inc
jns
xchg
pop
je
div
mov
addr16
shlb
mov
repnz
or
enter
or
sbb
push
iret
dec
cmp
sub
sbbb
mov
sbb
jns
mov
js
xchg
mov
xchg
xchg
sbb
je
jno
push
sbb
orl
xchg
stos
xor
xchg
sub
std
lock
xchg
jno
inc
mov
push
add
jge
xchg
movsb
fsub
inc
test
jae
loopne
add
xchg
xor
int
pop
into
in
js
pop
jmp
dec
jns
mov
push
scas
jmp
in
jno
xorb
shlb
sti
or
out
dec
cmp
in
jle
and
test
pusha
sti
sbbl
sbb
leave
sub
mov
repnz
stc
lcall
adc
jnp
sbb
sarb
add
subl
sub
xchg
xchg
and
sar
ret
jno
stc
or
push
shr
jp
and
addl
cwtl
loope
dec
jns
cmp
repz
adc
jno
dec
pop
jnp
rorl
xchg
cmp
jns
xlat
push
mov
jl
in
cld
pop
fidivrs
lret
sti
pminsw
push
xorl
lea
idiv
ja
jno
inc
mov
iret
dec
cmc
mov
push
aas
repz
and
add
mov
lds
mov
jp
inc
inc
dec
sbbb
in
int
or
inc
aam
and
mov
mov
xor
mov
popa
out
icebp
test
pop
in
push
sarl
cld
fcmovnu
mov
add
mov
add
or
in
out
idiv
sbb
rclb
mov
xchg
mov
notl
fisubrs
mull
iret
scas
testl
ds
xlat
std
aad
out
mov
and
lahf
idiv
test
test
fstps
add
movsl
mov
push
jns
mov
jbe
dec
mov
push
enter
cld
in
push
aas
mov
not
call
hlt
fbstp
or
lock
cmpsb
push
cmp
in
leave
mov
push
lahf
mov
and
divl
mov
dec
dec
mov
xor
inc
hlt
and
call
or
inc
and
out
jge
fistl
sub
loop
outsb
cld
fildl
and
inc
adc
fstpt
mov
ret
lahf
mov
rcll
pop
scas
mov
and
jne
mov
and
inc
jo
iret
jge
fistl
cs
cld
fistl
xor
inc
hlt
and
mov
cwtl
in
in
xchg
xor
xchg
xchg
std
out
cld
outsb
inc
ss
xor
mov
stc
push
or
inc
cmc
pop
cwtl
lods
xor
cmpsb
adc
add
cmp
jo
push
sbb
pop
sub
pop
into
dec
call
fs
fnsave
mov
lahf
mov
jmp
call
jb
in
ljmp
shl
lcall
repnz
aam
jns
daa
adc
pushf
jl
and
ret
cmp
in
add
adc
cmp
cmp
mov
cmp
loope
push
pop
or
les
xchg
jle
add
outsl
subb
lock
jb
incb
push
mov
lods
cmp
repz
les
leave
jge
push
fbstp
dec
mov
or
nop
jbe
repz
jo
pop
pop
enter
popf
int3
lock
pop
lahf
call
mov
out
in
cmp
scas
outsl
cld
pop
mov
jg
int
xor
fadds
add
test
addr16
sbb
mov
xchg
fcompl
push
enter
push
dec
inc
enter
mov
out
cmp
jle
cmpsl
fildll
mov
push
stc
push
mov
push
dec
inc
lret
jmp
movsl
push
mov
adc
in
filds
out
xchg
lock
out
jecxz
mull
jmp
ja
mov
lock
fdiv
popf
jmp
inc
xor
popa
repz
std
push
add
jns
jne
mov
sub
mov
xor
sub
inc
cmp
stos
rep
gs
sbb
mov
jl
cld
movsl
mov
sub
cmp
scas
xlat
adc
aas
inc
jl
cli
sbbb
mov
jle
jecxz
add
incl
addb
pop
pusha
mov
cld
xor
pop
dec
out
inc
mov
pop
jae
hlt
arpl
pop
inc
jo
adc
fsubs
push
sbb
out
cmpsl
sbb
sbb
jnp
lods
int
int
iret
out
pop
cmp
pop
push
repz
dec
push
dec
inc
lret
jl
dec
push
and
mov
push
pop
insl
or
push
dec
adc
test
mull
fld
idivw
insl
shl
mov
mov
clc
jmp
fs
pop
stc
inc
roll
push
fwait
mov
icebp
lret
popa
scas
out
movsb
outsb
lret
jnp
add
cmp
xchg
add
bound
jp
ret
push
test
xchg
inc
repz
mov
das
stc
dec
out
nop
pop
movsb
cli
out
imull
mov
jmp
imul
icebp
pop
repnz
stc
leave
ret
cmp
cwtl
outsb
adc
mov
jge
push
sbb
outsl
out
xchg
icebp
mov
lea
jl
inc
rcl
xor
and
and
js
repnz
fadds
loopne
jns
orl
icebp
sub
or
cmc
inc
ret
fnstcw
sti
fcmovnu
sbbl
scas
cli
push
popf
fistps
out
addl
and
mov
sar
loope
jmp
adc
dec
mov
in
cmp
loope
roll
rcr
sub
sub
mov
push
ffreep
lock
push
shll
sahf
add
cli
jae
jbe
adc
ds
sub
mov
add
cs
cmc
out
adc
mov
push
cmc
add
jmp
andl
xorl
lret
mov
imul
jmp
push
and
xor
sub
pop
movsb
push
mov
aam
xor
xchg
lahf
repz
add
lret
mov
popf
iret
and
mov
and
mov
sbb
negb
lahf
testb
arpl
jnp
mov
enter
repz
int
mov
popf
cltd
mov
cmp
mov
dec
sti
mov
xchg
je
xchg
jge
cmpsb
pop
fbld
repz
push
and
mov
je
das
push
mov
push
and
clc
lock
jae
and
and
and
mov
iret
lret
arpl
add
jo
xchg
fucom
fildll
mov
je
push
data16
mov
mov
mov
popf
sti
sbb
pop
rolb
mov
div
fwait
mov
and
bnd
sbb
dec
aaa
push
arpl
mov
mov
rorl
lcall
arpl
push
pop
pop
ljmp
mov
sarl
lahf
call
sar
ret
dec
cmc
and
jo
inc
xor
push
lahf
xchg
lea
gs
js
mov
in
jns,pt
repnz
or
inc
enter
test
out
mov
sbb
loope
faddl
pop
mov
push
or
dec
mov
scas
xchg
ljmp
shll
cmp
cld
repz
lret
stc
inc
cmp
stos
cs
das
dec
mov
pop
push
sahf
push
int3
fistpl
addr16
je
nop
out
cmp
out
ffree
mov
xor
sub
dec
mov
out
sbb
clc
mov
mov
pop
repnz
in
or
jl
sbb
jle
sbb
inc
or
int3
xor
push
cmp
cwtl
loopne
in
jle
jl
pop
rep
pop
fbstp
jo
xchg
lods
add
mov
xchg
xchg
mov
int3
xchg
rcll
rcll
and
jno
std
std
mov
push
or
ja
je
push
icebp
lahf
lcall
arpl
enter
inc
popf
cmp
and
jno
call
clc
jge
inc
repz
cwtl
ds
enter
or
aaa
mov
nop
mov
jno
jge
inc
mov
and
cmp
shrb
adc
jns
jecxz
cmp
mov
add
enter
rclb
xchg
data16
xchg
rclb
cs
idivl
pusha
cmp
mov
ret
repz
cld
imul
mov
insl
mov
add
cld
in
or
notb
xchg
enter
add
rclb
xchg
mov
in
outsb
xchg
dec
mov
insl
mov
push
clc
mov
mov
lock
dec
jl
mov
adc
lods
rcrb
xor
push
in
push
dec
int
lret
jnp
push
cmp
dec
jge
dec
dec
lahf
mov
sub
das
jl
nop
psllq
mov
sti
lock
sub
cmp
inc
inc
mov
sbb
repnz
sti
ljmp
aaa
inc
negl
cmpsb
ret
movsb
loop
loop
stos
pop
pusha
in
mov
cmpsl
call
mov
adc
fidivs
sub
or
jnp
adc
cmp
fstpt
jecxz
enter
mov
lock
add
lea
aaa
ss
xor
push
iret
jbe
std
in
mov
les
jo
lret
je
or
add
lods
daa
js
push
iret
jge
inc
repnz
cmp
fildll
enter
jbe
jge
je
jmp
sbb
jno
inc
scas
xlat
lret
cmp
jns
fmul
jb
push
mov
pop
xchg
iret
cmpsl
dec
inc
outsl
int3
mov
fistpll
mov
xchg
lds
cltd
sbb
cli
loopne
or
filds
mov
js
in
rcr
rolb
sub
out
sub
and
inc
loope
das
cmp
stos
push
adc
loopne
icebp
push
aaa
inc
arpl
jns
cmpsb
in
je
push
xchg
adc
jle
jmp
movsb
movsl
mov
jecxz
cmp
jl
jno
jge
loopne
jns,pt
ljmp
aas
jo
sar
je
pop
movsb
jl
ret
repz
stc
jns
cld
jae
stc
jl
xor
sahf
inc
popf
cmp
push
xor
in
cmp
xor
sub
in
mov
loope
or
int
jno
jno
jns
xor
jl
sub
outsl
test
out
dec
in
mov
les
jbe
je
subl
adcb
dec
mov
rep
jno
add
mov
bound
fcoms
mov
jno
pusha
stos
jo
adc
clc
pop
jns
es
das
sbb
stc
test
jmp
add
punpckldq
or
lds
pop
mov
add
cli
mov
mov
test
shlb
jmp
loopne
nop
push
cmp
pop
jne
shll
mov
out
cmpsb
adc
or
psrld
jl
push
stc
adc
ss
dec
hlt
stos
clc
icebp
push
xchg
add
imul
xchg
test
adc
ja
jno
jge
roll
xchg
push
xlat
into
lock
in
addb
rcrb
pop
in
jo
cmp
sbb
dec
inc
std
sti
pop
stc
jge
gs
ret
mov
lahf
cmp
lcall
pusha
stc
cmp
or
dec
lahf
in
stc
inc
pop
js
stc
jecxz
mov
movsl
stc
aas
stc
jecxz
mov
stc
jecxz
mov
stc
mov
mov
stc
ds
popf
stc
inc
dec
repz
xor
dec
stc
jp
dec
mov
stc
jp
push
mov
stc
jp
dec
mov
stc
cli
jmp
rcr
fimull
stc
jecxz
mov
stc
jecxz
mov
stc
jecxz
mov
movsl
stc
ds
popf
stc
inc
dec
repz
ds
popf
stc
inc
into
repz
ds
popf
stc
inc
push
repz
cmp
stc
inc
jmp
stc
push
stc
inc
stc
jl
stc
leave
pop
bound
adc
stc
stc
mov
gs
cli
ficomps
add
repnz
mov
sbb
sti
popf
roll
lcall
jo
std
iret
stc
jecxz
adc
in
xchg
add
lcall
push
and
xor
adc
cmp
fs
fldln2
lahf
addl
and
repnz
sar
lods
imul
mov
repnz
popf
sbb
bnd
jp
in
sarl
shrl
mov
dec
popf
and
mov
add
stos
fiaddl
xchg
fiaddl
sti
fimull
mov
insb
jne
sarb
push
push
dec
push
push
jecxz
sub
cld
bound
int3
mov
addr16
insl
push
mov
leave
movl
push
cmp
add
adcb
push
mov
lret
leave
dec
insl
sbb
jo
push
push
lret
cli
push
push
iret
popf
fxch
repnz
pusha
and
pop
jo
ret
pop
dec
outsb
ret
ficompl
push
push
xchg
mov
cmp
adc
mov
jne
insl
call
icebp
out
adc
add
int
mull
std
iret
add
adc
ds
repnz
std
incb
xor
lock
push
ret
xchg
into
dec
lahf
lret
push
push
inc
dec
jl
lock
out
xchg
in
outsl
icebp
push
or
daa
in
add
push
push
xchg
jle
popa
decb
mov
mov
leave
out
bnd
fs
lcall
jp
sarl
xor
lahf
pushf
jp
xorl
mov
jnp
loopne
popa
mov
insb
jle
idivl
cld
xchg
mov
lahf
push
call
add
stc
lcall
xchg
push
in
jmp
movsb
inc
cld
jo
mov
xchg
clc
call
xchg
aad
mov
loope
push
jb
fsub
clc
push
push
cmp
mov
ds
fildll
sti
out
rolb
add
in
mov
fisubrl
sub
ljmp
std
mov
icebp
push
jecxz
iret
sbb
add
ror
lret
cmc
aaa
xlat
cmpsl
pop
int3
sbb
out
jns
call
shr
daa
xchg
and
out
cmc
jmp
fistpll
mov
fbld
inc
sbb
jl
popa
outsb
xor
mov
int
movsb
mov
out
xor
fbld
cli
es
pushf
int
clc
lahf
push
call
hlt
adc
xchg
shl
popf
clc
int
movsl
mov
adc
mov
dec
jg
clc
outsb
mov
dec
test
cmpsb
ss
mov
leave
decb
and
fcomip
inc
jge
jbe
mov
xlat
out
jg
loopne
or
mov
test
js
popa
dec
inc
imul
std
mov
sbb
sti
mov
lret
jge
clc
leave
in
cmpsb
jb
iret
push
out
test
jae
mov
flds
out
mov
out
jmp
cmp
sbb
sahf
mov
loop
test
mov
leave
test
js
sub
cld
icebp
add
lcall
les
jp
mov
rolb
cld
das
into
inc
stos
stc
sub
inc
jle
loopne
adc
or
pop
jb
lret
or
jge
inc
inc
fisttpll
jb
loope
lock
inc
jnp
je
add
jl
jecxz
clc
fnstenv
repz
cmp
mov
mov
rcl
cltd
fcmovu
cwtl
add
insb
popf
iret
stc
cli
icebp
fisttps
insb
movsl
ljmp
cmp
insb
popf
call
sbb
and
in
clc
jns
jb
mov
xchg
filds
call
xchg
mulb
cmp
mov
mov
mov
arpl
lcall
out
imul
mov
mov
dec
ja
push
test
clc
push
inc
xchg
stos
lds
xchg
xor
out
lock
scas
lds
cmp
jno
push
mov
and
mov
es
call
pop
inc
xor
mov
jge
jbe
aam
leave
outsb
imul
fucom
push
fistpll
cmpsl
outsb
lcall
dec
aad
xchg
mov
cmc
fdiv
sub
clc
jl
test
mov
out
fdivl
mov
stos
pop
and
ret
rolb
xor
loope
cld
pop
cmp
push
rol
mov
cli
dec
popf
jecxz
stc
dec
inc
stc
call
in
in
in
inc
mov
stc
jmp
dec
clc
jp
xor
loope
popw
and
je
fldl
out
pop
sahf
int
out
mov
xor
popa
and
lcall
repnz
mov
into
sub
xlat
leave
xchg
fdiv
or
xchg
mov
adc
in
adc
sti
hlt
fidivs
pop
fildll
movsb
insl
std
mov
hlt
repz
lahf
fsubp
jo
add
xchg
xorl
movsb
hlt
pop
jnp
push
sarl
pop
leave
bound
repz
repnz
pop
sarl
fidivrs
mov
sbb
repz
icebp
outsb
ret
mov
cs
mov
jns
out
dec
stos
pop
scas
push
mov
jno
scas
repnz
icebp
mov
jmp
cmp
test
mov
lret
mov
mov
ret
int3
clc
cmp
pop
xor
out
in
clc
cmpl
lock
sub
cs
test
dec
mov
pop
fisttpl
jne
in
sbb
xor
fistpll
jnp
add
cwtl
ficoms
cs
adcb
sbb
jns
test
push
xchg
dec
push
xor
push
dec
notl
pop
sub
jbe
mov
stos
xchg
dec
push
push
cs
or
or
dec
cmp
ja
cmp
fs
and
xor
xchg
push
faddp
loopne
pop
jae
js
notl
mov
adc
mov
push
shll
int3
cli
les
out
mov
xor
sbb
jnp
mov
pop
leave
ljmp
inc
out
iret
mov
insl
jle
sarl
ljmp
fistpl
jl
out
pusha
dec
and
push
sbb
mov
jge
dec
cmpl
leave
xchg
gs
xor
lret
add
dec
cltd
cltd
and
dec
inc
in
or
jge
mov
fdivrs
add
lds
cmpb
sub
inc
pop
fcomp
popf
jns
je
ret
stos
xor
fsubrl
ret
inc
fchs
mov
or
in
jo
aam
insb
cmp
pop
fucomi
jmp
aas
xchg
pop
lds
jnp
dec
lds
push
or
or
sbb
dec
addr16
clc
jl
xchg
cmc
loopne
cmpsb
jo
adc
outsb
popa
dec
outsl
lock
mov
lcall
repnz
push
cld
cmp
cmp
stc
notl
inc
imul
add
notb
push
and
and
test
repz
adc
jno
repnz
in
ffree
jg
mov
andb
out
cmc
sahf
mov
push
scas
js
mov
les
in
repz
adc
dec
mov
mov
dec
inc
mov
push
into
outsb
pop
lds
addl
call
out
cmpsb
lret
fstpt
jl
aaa
sub
imul
fadds
jo
inc
jp
insl
stc
in
cmpsl
scas
daa
jecxz
scas
stc
mov
inc
loopne
fstl
sub
xor
dec
imul
pop
ss
icebp
lret
cmp
scas
xor
pop
incb
mov
cmp
daa
sbb
cltd
cmp
fsubrs
and
nop
push
cmp
pop
mov
inc
adc
cmp
xchg
add
xorl
mov
xor
movsl
push
data16
inc
mov
dec
popa
sbb
shlb
ss
lea
mov
pop
jmp
clc
aas
or
inc
test
push
inc
xor
outsb
les
popa
jo
js
jmp
stc
jg
or
mov
xor
mov
clc
ljmp
pop
test
in
mov
mov
inc
jne
jmp
jmp
jo
jno
pop
into
jb
cld
fisubrl
aaa
or
pop
fmull
sti
divb
popf
cmp
xor
scas
test
stos
push
pop
cmp
aad
negb
inc
or
lret
fiaddl
repnz
fildll
jecxz
sti
cmp
dec
push
repnz
mov
ret
call
in
lcall
jmp
rcrl
push
dec
add
xbegin
inc
lret
addr16
adc
xchg
cmc
jae
ljmp
stc
sbb
addr16
pop
notl
mov
mov
mov
or
int
adc
xchg
lock
jo
mov
cmc
lds
mov
jne
stc
mov
pop
pusha
lret
ret
mov
mov
mov
mov
or
int
aad
lock
fnsave
mov
cmc
lds
dec
test
add
testl
mov
enter
fnstsw
cmp
popf
aad
jns
fnstsw
in
lock
in
jo
mov
mov
stc
mov
pop
dec
mov
mov
movsl
inc
mov
mov
mov
ret
int
int
aad
xchg
lock
fstp
jo
mov
jmp
cmc
mull
xchg
mov
pop
fwait
mov
push
sbbb
xor
xchg
lock
pusha
push
ret
mov
aad
lahf
iret
iret
in
mov
mov
testl
jmp
mov
movsl
scas
testl
mov
or
jno
dec
mov
mov
aad
testl
loope
jae
out
in
enter
push
adc
push
mov
pop
push
dec
sub
insl
movsl
mull
std
mov
or
mov
jae
out
int
imul
fucomp
popf
in
jns
in
add
jns
xchg
lock
push
jne
stc
mov
out
insl
xchg
mull
std
movsl
mov
lock
lahf
fdivrl
mov
or
fldl
jns
xchg
lock
in
jo
mov
xchg
jno
call
fucomip
in
movsl
mov
shrl
cld
add
clc
subl
xchg
cmpsb
test
cmpsb
mov
fdivrs
adc
push
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
jne
jbe
sbb
add
pop
cmp
bound
jno
jb
jns
jp
cmpl
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
incb
xchg
roll
and
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
pop
stos
push
jbe
jge
jle
add
jmp
and
xchg
aam
mov
aad
ret
frstor
sbb
or
or
mov
lea
xchg
or
aad
jmp
stos
mov
jbe
push
mov
loopne
and
dec
roll
cld
sbbl
mov
xchg
dec
mov
filds
leave
lret
and
in
inc
mov
cld
outsb
in
js
push
mov
lahf
mov
cli
xchg
stc
mov
in
mov
xor
adc
jnp
jmp
sbb
or
mov
ds
mov
out
aad
ds
cs
xor
js
sub
mov
xchg
add
pop
inc
into
in
jnp
in
mov
stc
outsb
stos
stos
mov
stos
js
mov
rcl
xchg
shrl
pop
jns
shl
xorb
repz
popa
mov
js
ffree
sti
mov
sahf
addr16
cmp
mov
aad
lds
aaa
dec
mov
testl
sarb
pop
sub
ss
pop
pop
lcall
or
pop
hlt
insl
mov
shll
clc
in
std
lods
mov
push
pop
and
pop
out
xchg
pop
std
mov
fldt
mov
cmp
sub
decl
in
aaa
lahf
cmp
lret
addr16
imul
hlt
or
dec
xchg
jne
daa
mov
insl
frstor
mov
movsl
sbb
jb
fnsave
lea
fisttpl
stc
sbb
jp
add
mov
popa
jnp
pusha
out
mov
jo
dec
les
fsubr
pop
cmc
test
xor
pop
cmpsl
enter
lods
dec
pop
hlt
in
lret
fcmovne
lcall
arpl
pop
fbstp
inc
lods
cmp
push
int
imull
dec
icebp
std
lahf
clc
jp
int
sbb
cmovno
shrb
jns
add
xchg
aam
lea
scas
fiadds
mov
int
pop
aam
cmpsb
xchg
sub
cmpsb
inc
adc
leave
repnz
addr16
cmp
fildll
pop
mov
sbb
sub
out
or
mov
mov
daa
enter
js
jns
inc
pusha
push
repnz
in
sti
pop
divl
in
push
imul
mov
sbb
mul
jo
sbb
ficoml
xlat
imul
hlt
pop
aas
js
push
jge
iret
and
arpl
loope
jg
js
adc
into
push
dec
or
xchg
cs
cli
sub
mov
xor
cmpl
rcrl
repz
adcb
xchg
clc
pop
pop
xor
div
xor
repz
clc
js
xor
popa
mov
push
iret
stos
ret
imul
les
outsb
mov
in
int
sub
loop
mov
mov
xchg
mov
fnstcw
mov
in
clc
mov
shl
cmpsl
cld
repz
mov
in
adc
cmp
jecxz
dec
pop
cmpb
test
popf
test
lea
xchg
lahf
sbb
and
mov
lahf
aad
mov
clc
cmc
and
scas
je
add
shl
add
mov
ret
cmp
push
lock
mov
lock
push
ret
cmp
push
lock
mov
ret
cmp
fldl
pop
nop
push
ret
cmp
push
lock
mov
ret
cmp
push
lock
lds
push
lock
mov
ret
cmp
push
lock
add
add
mov
ret
cmp
push
lock
mov
dec
cmp
rcl
add
popf
mov
ret
cmp
push
lock
mov
lock
or
mov
ret
cmp
push
lock
mov
ret
cmp
fldl
cmp
cmp
jge
jne
lea
out
imul
mov
icebp
call
hlt
xchg
jo
push
shll
imul
gs
jb
jne
cli
inc
mov
push
out
ret
in
clc
leave
mov
outsb
mov
orb
in
xchg
jbe
andb
shlb
jnp
incb
xor
xchg
add
xchg
rorb
adc
enter
scas
cli
aad
aad
jno
lahf
std
push
jge
loopne
test
lahf
sti
push
jnp
loopne
and
jno
sbb
dec
clc
repnz
ftst
cmp
jns
fnstsw
mov
fistpll
push
icebp
clc
sti
jp
les
div
cld
andb
sbbb
cld
sub
xor
addb
aad
lahf
xchg
jg
testl
idivb
divl
and
cmc
dec
jne
add
loopne
test
lahf
jae
cwtl
out
adc
cmp
std
fwait
lods
and
shll
xchg
stos
pop
xlat
xchg
push
ja
sub
mov
sub
pop
mov
xchg
stc
mov
jno
shll
sbb
icebp
pop
aad
jno
stc
lock
jl
outsl
ds
out
sub
outsb
das
test
insl
xchg
cmp
stc
mov
xchg
pusha
mov
push
mov
lock
lods
pop
loop
outsl
mov
movsb
popf
aad
xor
ret
sbb
xor
rclb
int
mov
sarb
mov
movsl
rcr
sub
mov
imul
ljmp
mov
push
jnp
push
jl
push
jns
or
dec
mov
call
mov
jno
ret
test
and
adc
inc
mov
jo
push
xor
or
mov
pushf
ds
repnz
popf
mov
xchg
popf
out
xacquire
xorl
roll
and
adc
aad
pusha
in
gs
scas
push
int
andb
inc
pop
xchg
mov
stc
pusha
jmp
rcll
sub
lods
mov
ds
adc
push
sub
faddl
int
mov
and
repz
ljmp
adc
repz
cld
shrb
adc
pop
std
out
arpl
call
nop
bound
fcmovnu
push
std
call
xchg
or
cmc
arpl
jcxz
out
cld
dec
mov
mov
cmp
and
cmc
ss
or
inc
fsubrl
in
jl
les
pop
jmp
sub
stos
dec
cld
jae
cld
dec
xlat
repz
mov
mov
popa
mov
push
pop
pop
in
jg
sbb
test
xor
repz
jb
adc
filds
loop
sub
loopne
xor
neg
push
pop
incb
outsb
fisubrl
popa
jle
push
lahf
push
out
pop
cmp
cmpsl
les
call
adc
cs
lret
mov
xchg
repz
jmp
dec
mov
inc
push
mov
dec
mov
out
cli
fcomi
into
mov
test
mov
cli
jae
dec
ret
add
dec
mov
fnstsw
mov
lods
lods
xchg
jg
jno
clc
std
jmp
repz
jmp
clc
lea
sbb
inc
sub
fdivrp
inc
int3
popa
fnstcw
cmpsl
jns
fwait
add
cld
jo
dec
push
pop
inc
movsl
popa
call
icebp
imul
sub
jne
add
cmp
push
adc
push
loope
cld
jge
mul
sarl
cmc
ljmp
inc
ret
cld
lret
mov
push
jo
cld
pop
jg
iret
jle
leave
aas
cmpsl
shrb
cld
xor
outsb
sbb
loopne
icebp
not
rolb
cld
clc
adc
imul
iret
stos
fldl
dec
pop
mov
out
cmp
insl
mov
into
jg
add
jno
stc
cmpl
lock
scas
out
pop
mov
ret
inc
repz
idiv
aad
rcrl
mov
mov
stc
lock
ja
test
dec
ds
pop
push
and
cld
leave
jbe
dec
in
fnstsw
test
and
in
in
jno
movsl
insb
xchg
imul
sub
daa
mul
or
pop
rcll
sbb
jl
dec
sub
sub
pop
stc
insl
or
cltd
xchg
pop
negl
dec
pushf
sti
test
add
mov
add
xor
cmc
mov
push
notb
in
push
cmpsb
pop
jle
paddsw
inc
and
repnz
add
inc
icebp
repz
sti
jl
push
push
fsubl
add
jl
fistpll
cmc
fdivrl
repz
cli
std
repnz
fcomp
adc
adc
sahf
sar
inc
aas
clc
repnz
jecxz
adc
sti
jmp
cmc
test
hlt
loopne
inc
call
ja
sbb
mov
xchg
jnp
mov
dec
ss
lock
gs
ret
jb
cmpsl
push
repnz
enter
out
incb
push
mov
addr16
push
push
repnz
inc
int
mov
sbb
cmp
nop
dec
cld
stos
shlb
dec
mul
sbb
mov
iret
loop
iret
ljmp
outsb
dec
dec
testb
cwtl
dec
inc
lret
mov
aam
xchg
jp
fisubl
pop
jnp
sti
jmp
test
jbe
in
jl
lods
fsubr
lock
push
add
dec
pop
or
insl
lret
nop
btr
xchg
in
mov
in
dec
rorb
and
pop
mov
testl
mov
jns
xor
icebp
testl
aad
ljmp
cmp
adc
call
adc
andl
push
and
xchg
mov
jp
cli
stc
loop
push
jg
cli
jl
mov
mov
divl
dec
add
out
dec
lea
cmpsl
adc
aam
xchg
sbb
cs
das
outsl
cli
loop
leave
in
bound
aas
nop
jnp
pop
cmp
dec
and
lret
cld
sti
xlat
scas
daa
rcr
out
les
or
push
cmp
inc
cltd
dec
jmp
push
pop
xchg
in
loope
inc
mov
aam
cmp
stc
pop
push
sbb
or
cmp
jb
int3
add
adc
mov
stc
mov
data16
sub
popf
jp
xchg
lcall
test
inc
ds
cmpsb
mov
dec
mov
pop
sbb
mov
aaa
ror
jne
add
subl
inc
sar
and
mov
cmp
mov
inc
push
inc
out
subl
or
rclb
adcb
in
andl
arpl
cld
inc
sub
push
fs
dec
mov
movl
aas
mov
imul
popf
mov
mov
ds
stc
inc
aam
and
in
and
lret
enter
jle
jns
outsb
stos
aaa
outsl
cli
aam
jae
lock
cmp
sub
cmp
in
stos
mov
cmp
mov
mov
fiaddl
out
iret
xchg
lret
clc
pop
nop
dec
mov
ss
daa
dec
push
dec
mov
in
push
xlat
mov
xchg
xchg
pop
sarb
insl
fldcw
inc
cmp
pop
js
cmp
ljmp
mov
clc
sbb
in
fidivrs
pop
mov
add
mov
mov
cmp
insl
outsl
jnp
jp
jno
ret
dec
mov
lahf
add
in
lds
ret
add
pop
lea
push
xorb
or
repz
notl
sub
mov
jno
pop
lea
jg
les
scas
pop
xor
inc
sbb
rolb
jne
dec
in
test
imul
sbb
jnp
lds
daa
dec
ljmp
jge
mov
xchg
mov
imul
jne
pop
xchg
test
fistl
shll
repnz
ja
push
jg
add
imulb
jl
sub
sbb
jbe
fucom
sbb
roll
and
sub
xor
div
out
lods
repnz
pop
negb
aam
push
dec
jle
push
push
aaa
and
and
in
jecxz
xchg
lahf
jo
jmp
push
push
cmpl
or
jnp
in
adc
adc
sbbl
sbb
mov
stos
lds
ljmp
xor
jbe
xor
or
sub
aaa
adc
adc
sub
je
jp
in
add
cmc
lock
incl
dec
out
cmc
jge
test
jno
mov
addb
lea
jp
dec
or
sbb
in
cli
leave
pop
clc
das
notb
pop
inc
dec
outsb
bound
in
test
outsl
dec
mov
hlt
notb
lock
clc
add
faddl
pop
pushf
lahf
jle
mov
repz
out
mov
orb
movsb
mov
jl
into
adc
imull
je
cmp
hlt
dec
lock
mov
pop
push
faddl
ljmp
pop
xor
pop
add
filds
jne
mov
sahf
xor
outsb
adc
xor
arpl
jnp
jmp
arpl
aam
jno
mov
push
fsubp
mov
mov
cs
imul
das
fimuls
mov
adc
add
push
add
repz
stc
inc
pop
cs
clc
xchg
icebp
out
sbb
rorl
js
pop
xchg
adc
and
call
aaa
adc
add
jns
loop
fmul
rclb
test
inc
insb
mov
xlat
ret
pop
mov
push
xlat
pop
jecxz
xchg
dec
xlat
aas
pop
stos
jmp
pushf
leave
shl
xchg
fbld
mov
leave
push
test
incl
lds
les
andl
iret
cmp
mov
jp
repz
insl
aam
dec
pusha
cli
push
jg
sub
inc
jp
ljmp
dec
jae
mov
roll
push
xchg
rcr
loopne
pop
cli
mov
xchg
pop
std
out
dec
pushf
loope
mov
fistpl
add
lret
pop
inc
add
jb
jno
sbb
jg
out
jo
sbb
push
push
jle
push
or
je
lret
push
xor
stc
sti
lea
pop
cmp
fistl
clc
push
std
loop
jno
mov
fdivrl
mov
testl
pop
xchg
xlat
loope
pop
rcll
fcmove
xchg
shlb
out
cmc
rcrb
add
jae
pop
loop
xchg
add
stc
adc
flds
jl
aad
int
inc
mov
mov
jb
xchg
sub
fadd
cmp
ret
push
nop
xlat
xor
cmp
xchg
jno
or
out
std
out
push
sub
cld
xchg
leave
loop
lock
push
lret
sbb
ds
mov
mov
lea
out
lea
aam
mov
js
aas
adc
lahf
cwtl
lcall
scas
pop
loopne
jno
stc
imull
pop
pop
push
jno
dec
adc
push
pop
ret
hlt
add
jl
jb
loop
push
xchg
fidivrs
xchg
popa
inc
lea
outsl
jo
xchg
mov
clc
call
shrb
in
fcomip
mov
mov
pop
sub
lods
sbb
pop
dec
sub
sbbb
push
mov
cld
call
je
iret
mov
stc
pop
push
and
insw
repz
ret
mov
cli
cs
lods
lea
sbbl
or
fists
out
icebp
clc
push
cmp
or
cmp
int
ret
fwait
mov
jp
add
inc
call
push
lret
out
sbbb
lcall
jbe
push
xor
mov
or
stc
lahf
cmpb
movsl
shl
add
sbb
popf
push
add
fdivrs
imul
inc
ds
inc
jns
imul
es
cmpsb
or
push
movsl
adc
clc
jp
aam
icebp
movsl
xchg
clc
int
push
out
push
enter
jp
lahf
mov
out
out
in
cmc
jmp
jl
add
js
stc
je
cmp
sub
push
stos
jae
loope
je
shrb
pusha
adc
pop
enter
add
jno
push
enter
pusha
out
jns
cmpsl
cmp
cmovae
into
bound
push
in
stos
loope
sub
je
mov
xor
mov
imul
fwait
arpl
in
leave
add
xchg
imul
shll
ja
xchg
cmp
fstpt
shrl
loopne
cmp
mov
or
ja
gs
mov
cmp
in
cmp
cld
scas
mov
in
cmp
adc
jp
sbbb
push
or
jg
call
fnstsw
mov
jb
mov
out
shll
testb
hlt
or
xchg
out
jmp
inc
fadd
sarb
lahf
jmp
repz
jbe,pt
lret
lods
ljmp
pop
push
and
in
jge
inc
sbb
mov
xlat
fucomip
cli
lods
cld
test
fucomi
repz
jge
mov
aam
mov
fstps
add
lret
push
mov
pop
jmp
nop
fdivr
push
test
sub
jne
inc
lret
test
push
aad
fstl
sub
push
jnp
in
call
cltd
cwtl
and
pop
leave
mov
sti
add
in
mov
push
xchg
shl
jns
fcoms
out
negb
jns
cmp
out
push
aad
xlat
mov
out
cli
pushl
adc
xor
test
cwtl
add
mov
das
lahf
out
popf
icebp
gs
shr
push
fnsave
js
mov
jp
inc
loop
fdivs
out
cli
xor
xor
or
fadd
fsubrs
std
fucomp
jle
mov
sub
xchg
xor
test
bound
dec
mov
push
mov
lods
insb
insl
sti
mov
mov
jl
popf
js
sti
insb
popf
notl
jnp
popf
ja
pusha
je
mov
mov
pop
int3
pushf
loopne
mov
jbe
sbb
insl
out
mov
test
and
call
hlt
pop
fs
xor
jbe
andl
pop
mul
sub
pusha
sarb
loope
negl
mov
pusha
inc
inc
xchg
rolb
data16
lret
mov
mov
dec
pop
pop
cmp
pusha
icebp
add
jg
cmp
stos
add
xor
mov
fyl2xp1
je
push
repz
enter
fsubr
outsb
repz
or
shl
jp
cwtl
out
inc
fidivrs
jle
xchg
and
sbb
jg
repnz
cwtl
xchg
mov
jb
hlt
stc
rclb
pop
inc
jno
repnz
jp
js
lret
sub
enter
add
jge
push
lods
cmp
nop
mov
mov
pop
inc
psraw
dec
xchg
rep
sub
cmpsl
loop
cltd
out
mov
lret
icebp
int
outsl
lret
and
ucomiss
jno
pop
mov
arpl
stos
jge
xchg
push
cs
incb
cmp
add
es
push
in
clc
addr16
popf
stc
mov
sbbb
jo
inc
jp
bound
mov
out
insb
ljmp
sahf
jae
push
jge
aad
inc
imul
fisubl
ret
mov
cmp
dec
dec
repz
iret
je
sarb
dec
mov
and
adcb
scas
cmp
fstp
hlt
popf
jl
cmp
sub
jl
adc
jns
add
aas
xchg
sub
sti
lcall
lods
or
arpl
mov
mov
mov
push
jns
lahf
dec
incb
add
repz
insb
insb
cmp
imull
in
mov
lahf
enter
es
dec
std
xchg
adc
test
mov
sub
fidivs
mov
inc
and
stc
dec
mov
repnz
mov
sub
xchg
sub
stc
aas
les
or
sub
cli
aaa
sub
sub
enter
mov
pop
cli
xchg
ljmp
idivl
sub
xor
ss
cmpl
addl
jp
lea
xor
cli
insb
popf
push
pop
jbe
xchg
jo
notl
icebp
jl
pop
ja
mov
shlb
out
cmc
andb
sbb
add
hlt
xchg
loope
orb
imul
insb
mov
sahf
not
jo
idivb
fldenv
idivb
inc
shlb
cld
nop
sti
jb
cli
dec
clc
psrld
adc
lea
inc
pop
loope
movb
iret
repz
int
push
xchg
lds
push
xchg
push
lahf
mov
aad
frstor
out
stos
xchg
fmull
dec
mull
and
ss
xchg
jg
fdivrs
ret
fmull
add
loopne
jo
iret
jb
popf
adc
mov
mov
jbe
or
clc
cld
jecxz
jp
cmp
jo
lahf
fnstsw
inc
clc
cli
jecxz
clc
jp
loope
stc
cmp
mov
std
js
jb
mul
loope
ja
mov
leave
jno
flds
addb
aas
pop
scas
pop
hlt
in
std
jp
je
stc
jb
rep
bound
jae
inc
pop
fdivp
cwtl
int
icebp
mov
sbb
js
push
stc
mov
mov
cltd
js
loope
pop
mov
xchg
jge
pop
mov
sarb
dec
pop
jo
arpl
pop
sarb
dec
pop
jo
jecxz
pop
sarb
dec
pop
jo
js
gs
jne
mov
mov
mov
xor
cmpsl
idivb
mov
clc
jno
je
popa
xor
popa
xor
popa
xor
std
add
jne
stc
incl
hlt
sub
popa
stc
pop
repz
mov
pop
jae
stc
loope
repnz
stc
mov
dec
test
std
addl
jo
dec
cmc
inc
mov
or
xchg
adc
mov
fwait
rol
call
in
mov
sbb
imul
sti
mov
cmp
fs
lret
fiadds
add
jmp
xchg
jp
repz
cmp
andl
sub
add
ret
aas
mov
dec
jne
out
sbb
fs
push
arpl
pushf
or
inc
into
cmp
cld
movsl
inc
or
xor
in
xor
es
clc
sti
hlt
push
mov
addr16
leave
icebp
mov
jns
pop
mov
fdivrl
lods
mov
fcomip
mov
faddl
xchg
add
jp
pop
pop
in
adc
sahf
ds
jp
add
jmp
int3
inc
stc
aaa
fiadds
add
std
fsts
xchg
jge
sub
fbld
mov
cmp
push
add
jb
push
cltd
cmp
lock
mov
xor
and
add
scas
jb
jp
pushl
cmpsl
pop
loop
adcl
jns
ljmp
fnstsw
stos
jns
xlat
std
pop
aam
out
mov
fmull
std
xchg
std
lods
push
cmpsb
or
ljmp
push
pop
in
adc
neg
add
jp
add
xor
popf
stc
add
push
add
jge
mov
jno
jno
fdivrp
mov
jle
pusha
and
jnp
xchg
adc
not
pop
jp
jnp
add
adc
incl
popf
jle
std
adc
cmp
lods
mov
insb
lds
add
aas
iret
clc
mov
xor
clc
jl
in
dec
clc
xchg
mov
lock
xor
dec
stc
aas
iret
clc
xchg
mov
in
filds
jbe
in
push
clc
in
popf
add
fisttps
int
std
sub
cmp
sar
pop
and
add
cld
fxch
mov
fidivrs
sahf
ret
jp
std
xchg
std
test
mov
subb
add
fnstcw
jno
incl
cltd
xchg
pusha
adc
sysexit
adc
ds
ret
mov
jp
add
dec
stos
lahf
jb
jns
fistpll
insl
xchg
push
js
ljmp
out
cld
in
push
js
lods
ljmp
jo
sub
jp
in
mov
gs
filds
js
lods
and
push
push
dec
loop
popf
adcb
inc
cmp
lods
inc
stc
xchg
add
sbb
aas
xchg
std
mov
ret
dec
mov
popa
xchg
mov
xorb
int3
repnz
xor
jnp
xor
std
fiaddl
ret
jp
jl
jb
popf
in
inc
cmp
lods
and
cwtl
push
in
add
jge
cmp
jno
or
in
jmp
lock
repnz
jg
sti
test
xchg
jb
scas
ja
ja
jb
jg
fwait
dec
ja
jb
mov
jb
jecxz
mov
pop
cmp
adc
loope
shrl
or
ja
jp
dec
or
aad
adc
aaa
stc
and
or
jae
inc
sub
das
and
out
int3
mov
fidivs
mov
mov
loope
jg
cli
movl
loope
in
jmp
std
ss
jecxz
paddsw
jle
in
scas
jno
adc
fisttpll
repz
fbld
je
pop
jo
adc
call
popa
movl
dec
in
fucomip
arpl
jecxz
cmp
adc
push
aaa
push
leave
div
xor
leave
xchg
cmp
outsl
loope
outsl
iret
std
in
and
jecxz
repz
xchg
pop
cld
ffree
lret
push
fdivp
fxch
aas
dec
jmp
add
push
cs
fsubr
es
lahf
loopne
icebp
fnstsw
out
shlb
xchg
clc
loope
call
mov
imul
xlat
cltd
mov
push
stc
imulb
fstpl
aas
pop
mov
data16
loop
insb
imul
movsl
popa
popa
ljmp
repz
jp
mov
jb
je
adc
fcoms
lret
push
fwait
sub
pop
mov
aam
shll
cmp
popf
decl
hlt
mov
lock
jp
xlat
pop
lods
and
dec
ffreep
jmp
jecxz
out
repnz
mov
ss
bound
sub
and
movsl
lds
inc
mov
ffree
sub
push
stc
iret
lea
sub
clc
iret
fs
mov
insb
xchg
fstpl
pop
mov
jb
loope
fists
inc
cs
mov
ss
dec
int
inc
stc
pusha
sub
out
xchg
loope
ss
jno
xlat
fst
stos
mov
shlb
mov
jl
dec
insl
cltd
mov
mov
mov
mov
fstps
add
es
xor
jae
mov
test
sbb
les
jmp
je
loopne
sbbl
inc
sbb
cli
aas
data16
add
stos
insl
faddl
sub
les
add
mov
mov
std
dec
scas
dec
insl
pop
dec
mov
bound
xchg
and
ja
stc
lods
pop
add
add
stc
loopne,pt
jge
les
xchg
dec
arpl
in
cld
jno
dec
inc
out
cs
adc
jb
rorl
xlat
jb
push
dec
inc
repnz
ja
push
jp
add
push
out
xchg
adc
test
jae
in
sbb
stc
fldt
lea
mov
push
xchg
jecxz
jmp
jl
iret
jg
dec
insb
lea
ja
mov
sub
push
aad
xor
stos
mov
jnp
repz
cld
scas
mov
xchg
lds
stc
adc
jae
cli
and
xor
fdivrl
cmp
testl
arpl
cs
pop
icebp
clc
scas
hlt
daa
mov
shll
hlt
test
cmp
addr16
sub
push
notl
arpl
hlt
push
stc
testl
mov
push
int3
pop
or
mov
repnz
xor
mov
push
cli
lea
das
pop
repnz
cmpsb
loope
add
or
cli
idivb
xchg
push
out
cmpsl
mov
sahf
in
push
push
shlb
out
movsb
out
loop
adc
hlt
es
jns
cmovne
cwtl
jae
dec
shll
shrb
fdivl
jbe
push
lds
jnp
icebp
fadd
xor
jl
pop
mov
mov
sti
lods
lods
fsubrl
mov
inc
push
jmp
repnz
flds
aaa
imull
pop
enter
mov
pop
in
pop
pop
mov
outsl
ja
jbe
iret
shll
arpl
xor
in
clc
outsb
loope
mov
insl
arpl
or
andb
pop
test
insb
loope
sbb
push
adc
mov
jae
xor
and
push
mov
shl
xchg
xchg
lock
jnp
xor
mov
shrb
sub
sbb
cli
cltd
and
popf
repz
sbb
fs
lret
fucomi
fldt
into
popf
inc
adc
lods
pop
mov
aam
xchg
fldt
lcall
push
xchg
cs
dec
ja
sub
mov
mov
pop
add
mov
mov
push
mov
mov
arpl
fwait
push
movsl
ds
push
arpl
jae
fxch
popf
adc
mov
popf
lret
xor
cmp
test
cli
leave
jno
lahf
in
adc
out
test
xchg
adcl
fnstenv
lcall
pop
insl
repz
jp
sbbb
scas
cli
iret
std
int
sarl
in
jp
add
inc
cmpsb
aas
iret
mov
iret
xchg
aas
out
cmpsb
stos
stos
adc
mov
mov
mov
adc
aam
ret
insl
out
dec
xor
push
mov
imul
das
jl
mov
jmp
sbb
pop
mov
mull
or
dec
and
push
push
out
and
jno
cmc
lea
scas
and
add
mov
sbb
lret
arpl
cwtl
lret
arpl
cwtl
inc
and
das
mov
jnp
add
mov
in
mov
xchg
mov
loope
rclb
cmp
fnsave
imul
xchg
sahf
repz
mov
mov
cmp
jmp
popa
lcall
mov
daa
sbb
in
adc
push
xchg
and
add
idivl
lret
inc
sahf
out
out
movsl
jge
jle
lcall
stos
fwait
out
stc
lret
ljmp
dec
mov
pop
ss
jae
insl
cmc
cmp
mov
push
push
cmp
inc
adc
in
insl
out
hlt
push
lahf
xchg
loopne
push
sbb
aad
xlat
decb
inc
int3
xlat
fldt
mov
lock
jmp
fwait
mov
insl
outsb
jmp
pop
fists
fwait
pop
add
test
adc
ja
insl
std
into
frstor
repz
xchg
pop
pusha
fisubs
int3
cmp
fcmovnb
mov
in
lret
dec
sti
mov
cwtl
push
in
sub
jns
or
fsubs
stos
loop
add
push
loope
xchg
mov
pop
in
add
lahf
stc
jg
out
movsl
xchg
out
loope
inc
in
xlat
cmp
fsubs
mov
mov
jmp
cmp
sub
nop
loopne
call
and
cltd
adc
scas
jbe
lds
sahf
or
add
mov
fcoms
cld
loop
mov
push
pop
pop
lea
daa
insl
popf
loope
jle
sete
shl
push
js
inc
sarl
xor
and
and
shrl
cmpb
or
roll
shlb
mov
mov
into
scas
scas
popa
aaa
xchg
sbb
movsb
adc
jl
lret
jg
jno
xchg
fidivs
int3
fstpt
sub
adc
jo
ret
jg
add
sbb
ret
int
sub
lahf
movsl
jmp
ds
jo
sub
cmpsl
enter
sub
jo
decb
sbb
ret
xor
stos
in
leave
jl
lds
dec
xor
stc
iret
lods
lods
xchg
jg
aad
std
xor
mov
roll
xchg
mov
addr16
mul
push
jns
mov
mov
dec
mov
push
iret
les
dec
mov
repnz
movsb
cmc
xchg
test
scas
jns
add
scas
sbb
out
sarb
std
jb
add
inc
push
jge
sub
fdivp
ss
lods
dec
mov
push
cmpsb
fildll
bsr
jns
imul
ss
jns
jl
push
sbb
adc
mov
ljmp
hlt
jge
lret
push
mov
push
jge
js
stc
push
inc
and
cld
out
pop
in
imul
aas
je
mov
call
sub
fisubrl
or
xlat
jb
mov
test
push
sbb
sbb
lods
lret
int
or
outsl
insl
insb
inc
sahf
out
je
stc
mov
and
addr16
shrb
fwait
repz
pop
lret
gs
outsb
xor
mov
and
jns
in
adc
js
mov
jne
jle
adc
cli
cmp
and
fcomip
jg
ljmp
stc
cs
ljmp
cltd
inc
sti
cmp
ret
iret
jp
mov
popf
rep
pop
sti
jp
xchg
lock
cld
jbe
xor
mov
notb
repnz
out
ljmp
mov
pop
cmc
lock
push
sahf
xchg
sahf
test
lret
std
and
sub
mov
add
call
cmpsb
popf
in
in
adc
sar
aad
lods
test
call
sbb
hlt
shlb
jo
repz
and
sbb
pop
lcall
add
test
or
mov
mov
xchg
xor
jnp
dec
lods
daa
movsl
daa
pop
pop
add
in
test
xor
cli
fsubl
addr16
mov
mov
cli
out
cmp
jge
popa
jp
sub
imul
jae
jp
mov
daa
jmp
jno
or
test
into
loopne
ds
nop
jp
sbb
push
pop
mov
ds
jecxz
xchg
mov
outsl
jle
dec
add
stos
sbb
mov
sub
popa
rol
lahf
sbb
sets
fcmovne
imul
mov
pop
push
xor
mov
push
adc
pop
jecxz
adc
sub
xor
sub
lods
hlt
lret
neg
stos
lods
fidivrl
jbe
fs
testb
in
jl
jle
sbb
push
xor
js
cmpsl
cmp
pop
outsl
orb
std
aas
je
lods
xor
pop
jp
push
jg
push
inc
pusha
pop
adc
addl
sub
in
jno
outsb
adc
popf
std
lret
xor
out
adc
inc
mov
xchg
outsb
push
mov
mov
lahf
mov
fstpt
push
insl
mov
add
rep
out
jbe
and
jo
jg
cwtl
repz
cmp
repnz
frstor
test
xorl
int
xor
push
mov
and
stos
sbb
aaa
push
outsl
repnz
fisubs
push
scas
gs
pop
pop
call
arpl
popa
stos
jl
cmpsl
dec
mov
mov
jg
mov
and
mov
dec
repz
inc
imul
dec
push
cmp
andl
nop
inc
je
xchg
fistpll
int3
idiv
je
cld
stos
adc
dec
sbb
hlt
xchg
out
pop
ja
lock
mov
mov
je
cmp
cld
lea
outsl
call
xor
push
mov
mov
insb
mov
aam
mov
ds
xchg
loop
icebp
mov
pop
es
mov
adc
repnz
popf
jne
jmp
sbb
push
hlt
push
std
test
pop
mov
std
or
jo
jne
push
jne
xchg
shll
jne
repnz
xor
adc
cld
movsl
adc
hlt
test
inc
je
out
lea
leave
pop
or
xor
sbb
fisubrl
outsl
out
or
jmp
cmp
mov
je
pop
out
hlt
lods
mov
popf
shll
aaa
add
imul
sti
aam
sub
aad
pop
xlat
inc
into
ret
lods
jmp
repz
jbe
lods
jmp
jmp
sbbl
and
adc
jmp
out
es
cmpsb
pop
inc
xor
dec
into
out
fs
repz
adc
icebp
adc
jns
insl
mul
lahf
xlat
fsubr
add
xlat
negl
inc
mov
jns
loope
add
push
js
and
clc
mov
dec
cltd
dec
repz
cmpsb
repnz
in
pop
cmpl
dec
shlb
repz
dec
int3
dec
jmp
pop
popf
push
mov
sub
ljmp
pop
out
xchg
test
xchg
mov
and
repz
insl
dec
xchg
dec
xor
fcomip
insb
out
int3
adc
jmp
sti
cld
mov
rcl
repnz
out
clc
ficoml
fucom
les
xchg
bound
movsl
jl
push
add
iret
fwait
dec
cld
push
lret
push
into
or
in
imul
or
push
pop
mov
addr16
repz
push
jg
pop
cltd
xor
cs
push
pop
stc
stos
cli
inc
addr16
lds
pop
dec
cmc
or
imul
fucomp
lds
sar
xchg
repz
xchg
jo
xlat
xor
mov
jns
loop
mov
enter
fidivrs
dec
jne
leave
fcmovnu
sarl
fidivs
ficomps
jo
mov
out
fwait
cmc
inc
addl
mov
dec
cmp
jle
add
mov
or
bound
in
xchg
cmp
mov
adcb
xor
shrl
mov
mov
out
insl
sti
outsl
dec
cmpsb
mov
out
adc
add
adc
cltd
icebp
mov
lods
js
test
rorl
push
mov
xor
mov
or
push
push
adc
sahf
jno
jne
xor
vpmovmskb
data16
icebp
or
out
ss
in
ja
out
or
lcall
in
xlat
inc
push
cmpb
loopne
rolb
mov
scas
adc
cld
ss
iret
mov
stc
psllw
mov
adc
outsb
jge
dec
push
iret
out
es
adc
mov
mov
loopne
roll
xchg
jecxz
in
xchg
loope
jge
add
cmp
fistpl
jne
stc
add
add
int
dec
out
loopne
mov
push
int
fisttpll
outsb
xor
ja
test
cmpl
int
fistpll
outsb
and
sbb
sub
adc
pop
xor
adc
inc
icebp
stos
inc
daa
mov
cmc
mov
mov
or
cltd
jnp
jbe
sub
sbb
shlb
adc
xor
mov
dec
dec
stc
test
ret
cmpsb
xchg
shrb
int3
test
ss
into
add
push
je
out
repnz
outsl
test
adc
mov
je
js
cld
cmp
repnz
je
push
aad
fs
fisubrl
jmp
inc
jmp
push
loopne
enter
mov
cmp
ja
add
ret
addb
fxtract
loope
mov
test
and
pop
xchg
in
cltd
mov
aas
repz
jle
es
fadds
cmp
pop
in
add
mov
call
add
jl
mov
scas
fstp
scas
push
pop
into
jae
outsl
lret
push
call
pushf
cmp
inc
cmpsb
fsubr
cmpl
je
out
out
jmp
sub
jmp
pop
mov
jge
mov
mov
subl
mov
test
stc
icebp
loope
jmp
mov
lret
mov
cmp
add
cld
sbbl
ljmp
and
jecxz
xor
cmp
jl
xor
aad
mov
shll
stc
scas
sbbl
add
int3
lds
jae
stc
lods
mov
outsb
outsb
cmpsl
pop
stos
out
jmp
fnstcw
add
stc
idiv
fldl
xchg
loopne
loop
in
loop
idiv
icebp
bound
lds
cmc
test
orb
cmpsb
test
cmp
lods
mov
pop
shl
sbb
fdivl
stos
ds
std
jb
xchg
jnp
jmp
mov
xchg
jno
stc
aad
add
cli
sbbl
cmc
stc
sbb
hlt
mov
push
stc
adc
arpl
fsubp
ljmp
xchg
mov
add
in
mov
mov
mov
arpl
mov
pop
ja
mov
loope
push
jns
call
push
jno
clc
xchg
nop
cmp
fimuls
sbb
xchg
cld
dec
mov
cmc
xchg
inc
mov
xchg
lods
dec
insl
out
cmp
pop
cmp
aaa
mov
outsl
inc
push
add
sbb
data16
jo
xor
popa
jg
test
xor
xor
pop
gs
dec
fsubr
sarb
mov
fidivrl
push
leave
dec
push
mov
stos
jg
in
push
shl
add
idiv
in
imul
imul
int
mov
js
cmc
adc
out
mov
mov
jg
scas
rclb
jp
xor
mov
mov
cs
sub
das
cmc
mov
jecxz
cmp
mov
cmpsb
out
xor
js
clc
sub
dec
jmp
std
jp
iret
divl
lahf
mov
jmp
mov
jmp
jns
js
mov
shl
add
mull
fnstsw
cmpsl
jns
addr16
lahf
jo
fwait
rclb
negl
mov
dec
scas
adc
dec
aam
xchg
fsubp
jbe
jmp
pop
adc
movsl
fisttpl
mov
iret
popf
jbe
mov
out
sbb
fidivl
xor
cli
movsl
xor
cmc
cld
and
add
popa
mov
inc
lahf
aaa
cmc
mov
and
jmp
and
cmp
mov
inc
mov
mov
call
sbb
push
mov
inc
add
in
in
shl
mov
mov
push
insl
testl
sub
out
inc
fcomps
jb
push
outsb
test
jae
push
in
in
pusha
idivl
popa
nop
icebp
ja
stc
adcb
and
add
sbbl
add
out
jecxz
add
lods
xchg
scas
mov
sbb
inc
mov
gs
shlb
ds
mov
mov
add
xor
jg
mov
lret
loop
jle
cld
dec
lret
inc
loop,pn
fisttps
loope
fists
out
icebp
loope
aaa
in
jno
outsl
push
mov
mov
mov
push
cmp
popa
das
adcl
xchg
ret
scas
sbbl
cs
mov
mov
fsubl
xchg
cmp
jl
inc
xor
gs
call
loop
imul
int
js
stos
mov
jbe
ja
fildll
dec
divl
out
test
int
popf
sbb
inc
imul
in
inc
scas
dec
loopne
popf
loope
pusha
jno
movl
call
repz
les
mov
pushf
into
in
loopne
loope
jecxz
mov
or
stc
mov
mov
hlt
testb
mov
cwtl
out
add
add
loopne
lods
jns
jae
stc
mov
std
xor
outsb
mov
adc
add
xchg
or
into
loope
outsl
xor
mov
xor
rcrb
lock
ds
jb
push
mov
mov
jno
xchg
lock
ret
xor
sub
xchg
mov
sbb
outsb
dec
cmp
test
mov
ja
mov
icebp
add
jno
push
in
jmp
xor
not
or
repnz
arpl
jg
into
push
cmp
mov
pop
lret
sub
insb
mov
cld
sbbb
xchg
pop
inc
xchg
roll
jns
mov
jge
enter
inc
stos
andb
sbbl
lock
jmp
aaa
xchg
into
fistpll
mov
icebp
insb
or
test
push
mov
repz
out
sahf
mov
add
and
mov
inc
inc
xchg
xor
leave
pop
add
fwait
jmp
xchg
and
cli
into
xorl
insl
fwait
or
mov
adc
in
pop
ss
movsb
jge
cld
sub
mov
mov
cmp
fstl
std
lock
icebp
cmp
lock
imul
fidivrs
clc
shr
lds
push
jne
jge
pushf
push
cmp
sbb
mov
clc
aas
out
arpl
sub
iret
dec
jge
cmp
dec
fcomip
pop
mov
sbbl
addl
sti
xchg
call
lea
jne
push
push
mov
pushl
pushl
pushf
lea
jmp
lret
adc
mov
inc
cmp
xorl
dec
sub
add
les
mov
cld
jno
stc
pop
hlt
jmp
add
movsl
into
mov
dec
push
dec
pusha
popf
cmpsb
sbb
aas
dec
pop
jno
data16
cwtl
xchg
jne
xchg
xchg
cmpsb
xlat
sub
or
xchg
xchg
lea
add
lods
xchg
enter
imul
push
xchg
outsl
cmp
aad
mov
xor
loopne
add
xor
push
lcall
cli
pushl
and
pushf
lea
call
jmp
mov
pusha
stos
call
push
rep
bswap
mov
pushf
push
pushf
push
lea
jmp
jae
pusha
sub
jo
stc
cmp
pushf
pushf
pushf
call
pusha
or
pushf
pusha
lea
je
pushf
cmp
movw
cmp
pusha
lea
jne
jmp
rol
push
pushl
stc
sub
mov
cmp
lea
cwtl
call
sub
call
sub
sbb
pop
outsb
imul
xor
and
popf
sarb
fsubr
mov
call
pop
cmp
jb
push
adcl
mov
jo
popa
and
cld
push
pop
jnp
rcrb
repnz
lahf
test
insl
add
jg
movsb
imulb
fwait
int
mov
cltd
pop
pextrw
xchg
fimuls
inc
fiadds
fcoml
pusha
cmc
mov
adc
pusha
and
nop
ficoml
inc
and
stos
add
inc
mov
mov
lods
in
insb
inc
mov
insb
jno
loop
cmp
imul
dec
lret
pop
scas
decl
fistpl
jecxz
dec
xor
enter
ds
addr16
fsubrs
cmova
ja
daa
dec
push
pop
int3
scas
push
int
andb
mov
les
xlat
jp
jae,pt
mov
jge
fs
mov
xchg
fdivl
mov
mov
push
dec
scas
mov
lock
out
add
xchg
mov
mov
cmp
mov
adc
mov
jp
add
push
enter
neg
mov
loop
pop
ljmp
adc
hlt
sub
test
sahf
mov
shlb
lods
int3
sub
sbb
out
jns
repz
cmp
mov
sti
aad
into
stos
ss
scas
out
jmp
and
cmp
inc
dec
fdivrs
lahf
jp
adc
loopne
or
sbb
sub
jo
loop
cmp
jmp
movl
pushf
lea
jmp
movl
push
pushf
lea
jmp
setb
lea
mov
call
ficomps
mov
cmp
xor
mov
repz
notl
insl
cmp
cltd
pushf
adc
call
mov
shlb
jg
dec
pusha
or
out
xor
mov
sub
pusha
in
fiaddl
cld
test
lret
clc
test
in
clc
push
into
jb
or
push
adc
pop
mov
and
test
inc
sub
jns
loop
insb
ljmp
ror
sbb
addr16
cmpsl
pop
mov
pop
repz
scas
daa
ja
xchg
sbb
mov
insb
sbb
cmp
sbb
or
lret
movb
jecxz
movsb
or
lea
push
adc
sahf
lahf
sbb
sub
movsb
loopne
shl
mov
into
xchg
adc
mov
les
pusha
flds
or
push
dec
mov
xchg
movl
pushf
pushl
movl
pushf
movw
movb
lea
jmp
std
jne
sub
ljmp
jnp
and
dec
and
and
dec
mov
push
stc
outsl
int3
jl
xchg
xlat
mov
and
out
push
dec
fdivrp
addr16
rcrb
pop
ret
and
xchg
fcmovu
jno
pop
js
push
stos
mov
dec
pop
cs
repz
dec
faddl
jecxz
fistpl
mov
ret
jbe
rclb
sbb
inc
notb
xchg
stos
xlat
mov
mov
es
adc
xchg
inc
mov
ret
sbb
in
mov
movsl
push
aad
sarl
in
inc
and
adc
insb
and
lea
jmp
push
jns
clc
inc
dec
dec
and
xchg
pop
xchg
lahf
sti
mov
testb
xor
mov
inc
xlat
and
addr16
jbe
mov
adc
shrl
hlt
ret
push
repz
adc
add
enter
cwtl
xchg
mov
push
adc
and
add
pop
movsl
popf
adc
mov
pop
sub
cmpl
mov
jg
adc
push
aaa
or
rclb
enter
fidivl
mov
jae
jb
pop
movsl
imul
mov
shlb
clc
dec
or
fs
sbb
jnp,pn
outsb
sub
js
iret
sahf
das
push
push
cmpsl
add
jp
xor
jecxz
mov
dec
dec
add
dec
imul
or
xchg
sub
movb
pusha
lea
call
call
push
ficomps
cmp
add
inc
mov
incb
inc
and
notb
dec
gs
mov
jl
cmc
int
in
jmp
sbb
arpl
add
inc
add
lret
out
jecxz
fsub
cmp
call
xchg
pop
repnz
aaa
iret
add
mov
pop
je
pop
mov
aam
jle
movd
mov
fwait
push
xchg
sahf
and
inc
mov
mov
mov
stc
mov
clc
pushf
pusha
and
bt
add
movb
pushf
lea
jmp
pushf
movl
movb
jmp
inc
add
mov
push
enter
pop
int
mov
in
int3
inc
idivl
xlat
test
xchg
bound
int
adc
jp
push
pop
cmpsl
into
or
in
pop
pop
not
dec
les
sbb
cmp
sub
dec
cmovle
mov
pop
popf
out
iret
testl
lret
ss
std
xchg
adc
pusha
sarb
inc
sub
or
push
inc
mov
xchg
test
mov
sbbl
hlt
mov
mov
sbb
mov
jle
nop
test
pop
jns
push
xor
xchg
and
adc
fxam
or
fisubs
sbb
pop
dec
and
or
jge
inc
lret
push
or
mov
dec
or
pop
xor
ficoms
cmpb
add
add
aaa
push
jmp
ljmp
imul
mov
push
pop
add
mov
mov
loopne,pt
cmc
scas
mov
dec
adc
cmc
addr16
mov
ret
mov
push
ljmp
mov
ret
and
movsl
dec
jns
bound
hlt
imul
jne
sub
sub
push
jne
in
les
clc
push
mov
ljmp
stos
into
idivl
push
add
dec
outsl
popa
fs
imul
add
push
jmp
or
lahf
and
pop
mov
mov
push
scas
testb
fsubp
rol
mov
aaa
and
jb
sbb
mov
mov
movsb
xor
aaa
addl
dec
std
sarb
push
sahf
push
outsl
std
dec
or
xchg
add
loop
lock
sarl
pop
xchg
or
adc
insb
pop
inc
and
call
das
in
fs
jno
pop
inc
and
and
ret
lods
push
add
sbb
cmp
test
and
or
jno
adc
scas
jg
sub
frstor
repz
sub
add
cmp
es
lcall
loope
sar
xchg
add
mov
aas
imul
dec
in
sahf
jae
xchg
movsb
mov
roll
pop
xchg
mov
jb
movl
push
pushf
pushf
movl
pushl
push
pushf
pusha
lea
jmp
popf
cmp
movsl
outsb
mov
mov
movsl
mov
mov
xchg
or
and
and
mov
movsb
leave
and
cmpsl
push
stos
sub
mov
aas
icebp
clc
xchg
jg
mov
mov
mov
in
dec
and
loop
iret
sub
mov
cmc
lcall
pushf
call
xchg
adc
dec
flds
cmp
enter
lods
adc
call
push
ret
fsubp
sbb
xchg
push
inc
in
cmpsl
mull
outsl
scas
frstor
sub
fldl
pop
sbb
ret
sub
dec
pop
cli
daa
dec
dec
sub
mov
sub
or
fs
sub
xchg
dec
sbb
pop
shl
inc
outsb
mov
addr16
cmp
mov
jb
movsb
in
mov
inc
rol
ss
xor
andl
in
xlat
jp
clc
test
out
sbb
out
fwait
jp
lock
pop
and
lock
enter
jle
loope
mov
mov
shlb
cltd
ret
ss
inc
cmp
mov
fdivs
jnp
cmp
add
mov
out
in
sbb
aad
ss
shr
in
push
jb
nop
cld
scas
jmp
mov
fucom
dec
sbb
je
adc
fadds
nop
mov
mov
push
xchg
pop
sub
adc
mov
xchg
cmpsl
lret
rcrb
dec
dec
push
inc
outsb
outsb
negb
dec
in
cmpsb
mov
and
mov
cltd
sub
mov
cwtl
dec
fimuls
lret
sub
les
sbb
test
push
mov
mov
bound
and
adc
insl
cmpb
sub
mov
pop
pop
cmp
fwait
cltd
xorl
add
lea
lcall
test
push
jmp
outsl
jecxz
or
add
stc
lock
insb
nop
add
js
je
inc
inc
and
mov
cli
loopne
and
fbstp
mov
in
in
aad
out
cli
inc
sub
mov
imul
aas
pop
int3
cmpsb
xchg
out
loop
and
repz
ror
cmpsl
cld
pop
in
or
or
dec
cmp
adc
inc
mov
pop
mov
sbb
adc
loop
sub
dec
pop
adc
inc
or
popa
leave
movsl
leave
inc
or
xchg
xor
xor
imull
jle
pop
sbb
jnp
adc
push
mov
mov
mov
push
mov
ss
sub
mov
loop
adc
mov
xchg
mov
stos
stos
mov
dec
divl
iret
push
incb
xchg
data16
stc
inc
call
adc
sti
mov
pop
mov
out
xor
inc
lret
std
fcoml
or
outsb
inc
pop
cmp
roll
and
sbb
cwtl
js
das
pop
xor
stc
mov
cmp
into
jnp
inc
push
repz
mov
sub
dec
lock
and
or
aam
cmpsb
and
xchg
data16
fidivrl
mov
aaa
cmp
mov
movb
mov
push
mov
scas
mov
mov
mov
repnz
pop
mov
test
roll
or
imul
dec
into
out
mov
mov
push
push
lea
jbe
and
sub
stc
inc
mov
and
xadd
mov
ror
not
clc
add
sar
stc
or
shr
stc
mov
movzbw
stc
add
jmp
and
jns
mov
cli
add
dec
jecxz
fiaddl
iret
xchg
and
cmpsl
mov
addb
jmp
lret
sbb
fcoml
fcompl
and
and
iret
int
mov
and
aad
cmp
xchg
cmp
sbb
lds
gs
xor
cmp
jle
and
sub
mov
or
push
adc
add
aas
xchg
es
pop
test
cmpl
add
mov
mov
dec
xchg
scas
mov
xchg
repnz
enter
pusha
mov
hlt
fwait
xor
das
pop
adc
subb
pop
stos
add
pop
insb
popf
in
test
cmp
aaa
or
mov
sbb
xchg
pop
cld
dec
jo
bound
dec
mov
mov
leave
loop
push
sub
sbb
int3
lret
mov
cmp
mov
setle
mov
mov
pop
test
cmc
jae
ret
fldcw
sbb
jge
inc
xchg
cmp
xchg
xor
rcrl
enter
mov
ljmp
loop
movsb
lahf
in
mov
imulb
xor
xchg
insb
in
adc
xchg
fisubrl
stos
cmpb
push
aas
jle
inc
or
subb
mov
enter
lret
rcrb
divb
into
jb
dec
and
inc
mov
mov
movsb
adc
loope
shlb
mov
das
into
mov
test
xchg
dec
lds
shl
cld
cmc
nop
and
mov
punpckldq
outsb
sarb
or
lcall
jle
jg
mov
fidivl
aaa
mov
dec
dec
push
lcall
sub
fldl
adc
pop
out
ss
mov
test
jmp
lea
jae
push
add
push
lea
jmp
pusha
lea
call
pusha
push
lea
jb
pusha
pushl
push
push
pushl
ret
stos
adc
fcompl
sub
ret
xorl
push
jecxz
out
pop
aaa
mov
nop
loopne
out
test
int
aas
shl
sub
lret
sti
fucomip
imul
sub
sbb
add
or
imul
loope
data16
ret
ds
adcl
jbe
frstor
pop
pop
mov
repnz
dec
adc
adc
pop
inc
push
outsl
adc
ja
mov
dec
pusha
or
pop
fwait
daa
adc
jecxz
clc
mov
and
xor
lahf
or
icebp
nop
and
leave
sbb
popa
sti
imul
call
jecxz
rcl
nop
and
or
lods
cmp
inc
cmp
inc
sub
add
mov
and
sub
push
call
xor
add
xchg
sub
mov
cmp
lods
pop
shlb
mov
sar
mov
rcrl
rcrb
cli
fst
and
adc
loop
push
lea
jecxz
xchg
jbe
mov
out
mov
addr16
xlat
xchg
mull
xor
fwait
pop
pop
and
lret
bts
stos
repnz
mov
lea
pop
xor
xor
inc
ret
adc
in
mov
int3
movsl
cltd
loopne
insb
pop
jg
cwtl
ljmp
cld
inc
enter
lea
mov
xor
das
adc
xchg
mov
fwait
ja
fwait
xchg
jmp
or
lea
je
push
pushf
adc
pusha
mov
push
push
lea
jmp
jmp
sbb
push
shr
clc
sub
mov
cmc
shr
sub
rcr
sbb
shld
push
mov
xor
bts
push
push
add
rol
daa
mov
bsr
clc
push
mov
shld
aam
aaa
mov
stc
cmc
jmp
pushf
pushf
lea
call
pusha
movb
call
push
rolb
xchg
xlat
leave
in
sbb
pushf
rclb
push
in
aaa
sbb
push
jno
imull
enter
out
aaa
jnp
mov
mov
orl
ss
adc
clc
test
lea
push
insl
neg
pushf
mov
dec
clc
pushf
call
imul
gs
xor
cs
insb
add
sbb
stc
sub
call
stc
push
clc
push
add
movw
call
lds
dec
cltd
loop
push
hlt
mov
xchg
sub
sbb
imul
mov
inc
sub
icebp
mov
ret
adc
test
xor
push
ja
sub
loopne
dec
lret
sub
sub
dec
jge
mov
into
jg
inc
sahf
outsb
add
adc
mov
out
push
xchg
out
mov
mov
das
scas
int3
sub
sti
sbb
jge
sbb
clc
xchg
cmpb
push
pushf
pusha
lea
ja
dec
pushf
inc
jmp
mov
in
ss
loope
rcl
mov
xchg
fwait
incl
out
jmp
shll
cmpsl
xor
es
mov
cli
je
aam
fstps
and
test
xchg
push
or
sti
pushf
xor
stos
and
addb
insl
popw
test
pushf
push
xchg
mov
push
xor
add
ljmp
arpl
mov
dec
pop
pop
mov
fbstp
xor
sbb
movsl
mov
ret
mov
mov
fwait
xchg
idivl
lret
mov
in
mov
pushl
lea
jae
cmp
cmp
xor
push
push
pushf
pushf
lea
call
jmp
pushf
mov
lea
jne
pusha
setl
not
setb
movb
movsbw
mov
setae
pushf
lea
push
jmp
mov
setb
mov
not
pushf
cwtl
movl
jmp
movw
lea
je
push
pusha
mov
jmp
xchg
in
dec
in
aad
cmp
add
aas
jae
xchg
ret
inc
mov
iretw
jge
mov
mov
mov
cmp
fdivl
jg
ret
jp
push
push
addl
sbb
jne
nop
fmull
into
das
das
insb
insl
cmp
xchg
loopne
andb
pop
sbb
insb
or
push
jb
scas
loop
push
lods
incl
shrb
cmp
or
mov
call
mov
leave
mov
push
xor
jle
pop
cmp
xchg
scas
lea
mov
call
xchg
cld
add
popf
rcrl
xchg
imul
mov
mov
pop
xor
adc
mov
dec
out
inc
repnz
pop
push
mov
xchg
cmp
test
or
repnz
or
movsb
rcll
aaa
push
loop
frstor
daa
rorb
clc
fists
into
jnp
loop
add
ror
pushl
pushf
inc
call
movl
jmp
push
lock
std
std
lea
insl
ret
jbe
int
enter
push
pushf
mov
pop
lret
lret
xor
jo
in
sub
das
and
aam
push
enter
fbld
test
insl
xchg
loope
sahf
sbb
leave
jo
inc
mov
xchg
in
xchg
push
jbe
inc
xor
add
or
lods
adc
inc
rep
pushf
mov
pushl
mov
mov
lea
jmp
pushf
mov
bswap
lea
pushf
mov
not
pushf
lea
mov
call
cmp
mov
cmp
bt
add
bt
cmp
test
call
in
pushf
pushf
mov
movl
mov
call
mov
push
mov
push
pushf
lea
jmp
ds
mov
mov
pop
or
mov
jge
sbb
push
cmp
pop
and
repnz
sbb
xor
hlt
adc
testb
mov
leave
ss
push
dec
repnz
addb
mov
iret
es
inc
push
inc
mov
fsub
leave
js
incl
shl
ret
dec
or
arpl
das
pop
lahf
dec
in
xor
vmovddup
loop
into
pop
out
jmp
xlat
cmp
xor
pushl
lea
jb
call
lea
jae
dec
movzbl
mov
call
lea
jl
pusha
movl
pushf
push
pushf
lea
jmp
and
push
push
shr
in
ret
ljmp
mov
scas
cmp
xlat
push
mov
aad
adc
sub
mov
scas
repnz
mov
popa
negl
icebp
stos
pop
scas
sub
cwtl
nop
aad
adc
std
ret
divb
bound
sub
push
mov
mov
pop
clc
pusha
imul
jmp
push
add
bt
movl
dec
mov
clc
push
jmp
push
jmp
bt
cmp
jmp
cmpsb
in
imul
xor
inc
out
adc
mov
push
or
test
fimuls
push
sbb
sbb
cld
xchg
lret
mov
sti
sbb
outsb
push
leave
cmp
mov
push
cmp
arpl
sbb
int
jbe
inc
daa
js
push
mov
ss
jnp
mov
out
mov
push
jle
sub
inc
loopne
fs
dec
sti
mov
cmp
mov
sbb
xor
sbb
xor
loop
and
sub
lcall
jmp
arpl
mov
addr16
out
mov
test
jbe
subb
arpl
push
jg
adcb
xor
dec
mov
xchg
out
lea
sub
jmp
scas
dec
sbb
sbb
mov
sbb
mov
xchg
add
sbb
dec
cs
push
aaa
add
imul
and
sbb
negl
push
xchg
add
push
mov
imul
neg
cwtl
scas
xchg
fcompl
jno
fldl
neg
jecxz
mov
enter
cmp
mov
or
fdivr
lods
int3
and
loopne
add
xchg
push
imull
dec
inc
jp
aaa
jnp
repnz
mov
pop
adc
nop
sarl
test
mov
inc
adc
xchg
mov
out
jmp
xlat
ret
xchg
mov
sti
mov
call
pushl
lea
jle
jae
call
sub
push
dec
adc
bound
jb
and
dec
jle,pn
cmc
gs
test
dec
sub
dec
or
push
lds
ficomps
loopne
popa
fwait
or
pop
jae
fs
mov
mov
mov
mov
lret
shlb
pop
out
mov
shlb
imul
jo
shr
jnp
in
and
mov
add
jns
mov
outsl
inc
xchg
mov
in
clc
movsl
dec
fldlg2
xchg
incl
mov
pop
xchg
aaa
mov
std
js
arpl
xor
outsl
cmp
jae
aas
push
aaa
mov
std
pushf
sub
pushf
call
jp
pushf
pusha
xchg
call
pushl
pushf
movb
lea
jne
bts
neg
not
mov
stc
or
pusha
pushl
lea
je
mov
lea
push
pushf
mov
movzwl
pop
movsbl
jmp
cmp
push
cmp
sbb
std
mov
jb
add
xchg
xchg
mov
push
jae
es
xchg
sahf
mov
push
fwait
iret
aaa
xchg
mov
insl
dec
and
lds
mov
fcomps
shll
mov
push
mov
or
cmp
jecxz
pop
ret
out
lret
fisubl
bound
mov
adc
xchg
stos
xchg
and
test
not
out
mov
dec
fisubrl
jl
in
imul
in
leave
arpl
dec
or
int3
loopne
jp
add
xchg
mov
imull
mov
mov
inc
shll
jne
dec
mov
or
mov
popf
clc
inc
xor
aaa
scas
imul
stos
sahf
push
sahf
repz
inc
je
pushf
and
outsb
les
stos
sahf
sbb
adc
mov
inc
dec
or
lea
clc
inc
aaa
cmp
and
aaa
scas
insb
inc
shll
imul
mov
inc
push
mov
xchg
mov
sub
jns
inc
mov
clc
inc
aaa
and
scas
insl
add
mov
sar
mov
fwait
stos
or
inc
xchg
add
cmp
sub
add
lods
lock
dec
mov
xor
xchg
cmp
fcoms
push
ret
mov
and
sub
cmpsb
out
fnstenv
or
movsb
sbb
out
jecxz
or
push
stc
pop
jns
jge
or
xchg
mov
mov
adc
or
out
lods
mov
test
lcall
insl
pop
mov
lds
adc
lock
stos
out
outsb
in
jmp
inc
dec
aad
add
inc
add
test
loopne
repnz
ret
loopne
lods
in
test
pop
rorb
and
outsl
xor
inc
or
call
ljmp
mov
jb
mov
clc
pop
mov
dec
enter
jge
mov
inc
mov
or
xchg
adc
and
xchg
mov
dec
dec
lea
and
pop
arpl
ficoms
dec
in
pushf
pushf
lea
jae
clc
jmp
movl
movb
movw
jmp
jmp
xchg
cmp
mov
test
call
ja
bound
sbb
stos
sub
dec
into
add
repz
adc
sbb
outsb
pusha
pop
push
test
popa
and
dec
mov
sub
xchg
imul
jbe
add
data16
jecxz
hlt
shrl
cmp
mov
pop
mulb
das
inc
jnp
or
rcrl
insl
aam
pop
pushf
cmp
ja
int3
in
imul
iret
push
mov
out
mov
repnz
pop
push
adc
jg
pop
leave
outsb
imul
pop
mov
incb
sti
mov
stc
loop
jne
test
push
fistps
shlb
pop
mov
mov
ljmp
push
adc
shrb
jecxz
sbbl
cs
sbb
dec
dec
in
fistps
jmp
hlt
mov
adc
aas
mov
icebp
sub
mov
mov
ja
into
out
dec
pop
pop
lret
fidivrl
mov
test
pop
in
mov
pop
fisubrs
inc
push
adc
addr16
fwait
mov
dec
xlat
pushf
xor
inc
sbb
mov
std
pop
aad
dec
add
loope
in
xchg
les
es
xlat
xor
mov
insl
aas
mov
aaa
xchg
mov
out
ljmp
int3
mov
mov
pop
jecxz
pop
mov
mov
cmpb
mov
pushf
stos
movb
push
lea
jmp
pusha
pushl
movl
pushf
jmp
or
push
lea
je
setnp
movzbl
movsbw
mov
cwtl
pusha
setl
call
lea
jae
pusha
cmp
call
push
mov
jmp
lea
ja
dec
mov
jmp
inc
inc
dec
inc
rol
add
xchg
bts
daa
aaa
mov
pusha
mov
clc
clc
xchg
bts
mov
mov
sub
jmp
mov
cmp
clc
cmp
jmp
bt
stc
imul
call
call
icebp
xchg
and
add
mov
mov
fldcw
mov
stc
dec
mov
ss
in
push
cmpl
jp
jl
cld
xchg
mov
pushf
cltd
jne
test
pop
int3
xchg
lock
pop
mov
scas
mov
push
push
out
xor
stos
pop
mov
aaa
adc
je
mov
mov
stc
shrl
or
cmc
ficoms
pop
sub
call
sub
imul
add
push
sub
or
pop
inc
and
sbb
cmp
dec
adc
mov
adc
pushf
mov
lea
jae
pushf
lea
jmp
int3
popf
jmp
pusha
pushf
movl
call
jmp
pusha
lea
jae
pushf
mov
pusha
inc
pushf
setl
pushl
mov
mov
call
add
xchg
push
les
in
push
flds
sub
cmp
in
in
push
jo
xor
test
aaa
addr16
sahf
xor
pop
sbb
scas
add
into
test
mov
sub
mov
btr
xor
sbb
js
push
jnp
and
dec
pop
aad
and
jae
stos
out
rorb
mov
jecxz
pushf
xor
sbb
movsb
pop
fs
insb
adc
outsl
inc
sub
inc
jb
jbe
ss
and
xor
inc
or
pop
cld
dec
clc
inc
push
mov
out
int
sarb
cmp
mov
xchg
mov
push
out
xchg
push
sub
shrb
xlat
xlat
repz
mov
push
jecxz
sub
addr16
xorl
mov
inc
cmp
inc
mov
inc
hlt
nop
hlt
mov
cltd
hlt
push
pushf
mov
mov
xchg
add
not
setp
inc
pushf
inc
lea
add
xchg
stc
mov
cmp
stc
ror
mov
bt
clc
stc
test
push
movzbw
pushf
bsf
sub
mov
sub
je
stc
sub
jmp
call
pushf
pushf
inc
call
pushf
pushf
pushf
movl
call
lea
je
pusha
pushf
sub
pusha
mov
pushl
cmp
mov
push
lea
jmp
push
push
movl
push
lea
jmp
pushf
dec
call
rcl
mov
pusha
lea
and
and
mov
lea
pushf
mov
mov
mov
pushl
pusha
push
cmc
add
pushf
jmp
pushf
pushl
popl
push
movl
movb
movb
pushl
ret
call
movl
movb
pushf
mov
pushl
lea
jmp
out
pop
adc
inc
or
popf
mov
mov
jge
fnstenv
pusha
icebp
gs
sbb
push
imull
or
and
sbb
jnp
scas
pusha
mov
or
lcall
or
hlt
js
popf
cmp
int3
in
test
and
pushf
mov
cmc
pop
fmuls
lea
not
movsbw
pop
pushf
pushl
ret
pushf
pusha
pushl
call
movzbw
bsf
sar
mov
push
pusha
cmpb
call
test
shl
jmp
add
jne
mov
cmc
inc
fldenv
mov
mov
repz
into
push
fyl2x
stc
jmp
jns
out
xchg
gs
jno
mov
rcll
out
das
data16
push
inc
fwait
cmpb
add
not
mov
cmp
pushf
bt
cmc
add
pushl
movb
pusha
pushf
mov
btc
sar
add
mov
bt
stc
cmp
pushl
lea
jbe
shl
add
stc
pushf
mov
sbb
movsbl
bsr
add
neg
mov
xor
stc
jmp
das
cmpsl
aas
jg
std
cltd
and
push
xchg
sub
fs
add
js
pop
cmp
stc
cmpsb
fdivp
mov
sbb
lods
leave
icebp
fdivp
add
jge,pn
dec
pop
scas
cmp
pop
stos
out
jle
ds
dec
jg
loop
inc
xchg
push
jmp
mov
pop
cmc
incl
sti
push
ror
call
push
mov
movsbw
pop
push
pusha
pushf
pushf
pushl
ret
neg
jae
bt
pushf
ror
jmp
call
mov
inc
jmp
popf
rdtsc
nop
pusha
movl
pusha
jmp
shl
jns
pusha
mov
shr
xadd
rcl
xadd
lea
not
btc
lea
cmc
sub
shrd
push
bsr
daa
bswap
btc
push
call
movb
lods
movb
not
push
jmp
mov
lea
jle
push
lahf
mov
call
cmp
add
nop
sarb
sbb
nop
rorl
jbe
push
jmp
push
lahf
sub
mov
ret
roll
jbe
mov
mov
mov
cwtl
mov
mov
mov
jns
movl
and
sub
xor
pushf
pushl
ret
call
test
fs
dec
xchg
adc
cld
call
mov
sbb
xor
out
addb
mov
add
sar
mov
add
ret
dec
inc
push
stos
loopne
cld
daa
int3
inc
xor
inc
test
sbb
inc
adc
xchg
imul
cltd
std
int
dec
cs
push
xor
in
fs
and
shl
adc
sahf
sbb
daa
call
test
xchg
lock
test
ret
outsb
inc
mov
xlat
or
add
mov
sbb
loop
cmp
add
bswap
push
sub
add
mov
add
shl
rcr
mov
bt
clc
push
bt
repnz
mov
call
mov
mov
rolb
xor
inc
jmp
gs
add
and
inc
in
cmpsl
and
pop
and
add
xchg
out
daa
push
pop
jo
cs
cmc
mov
or
pushf
dec
mov
mov
pop
fwait
mov
push
mov
inc
and
rcll
cmp
push
and
sahf
mov
je
dec
das
outsl
testl
movsl
jg
and
xor
iret
lods
enter
xchg
mov
dec
fnsave
jne
popf
rorb
dec
lock
ret
fs
imul
insb
lods
stc
jae
jae
aaa
push
adc
mov
inc
or
clc
dec
bts
mov
stc
cmp
shl
call
addb
loop
test
mov
mov
sub
mov
fwait
cli
xchg
dec
pop
cwtl
out
mov
push
clc
or
cmpsl
jl
push
cmpsl
push
push
push
jno
cmp
jbe
or
adc
aaa
mov
pusha
add
dec
or
cmpsb
pop
sbb
icebp
add
loop
mov
js
cli
decl
and
ja
mov
pushf
pusha
inc
pusha
call
icebp
jno
jne
sub
lahf
xlat
aas
outsl
jmp
jae
mov
pop
scas
popf
mov
sub
std
or
inc
mov
sbb
adc
mov
insl
dec
clc
sbb
sbb
testl
mov
sbb
negl
mov
adc
mov
mov
mov
test
decl
movsbl
mov
mov
push
mov
mov
lea
call
call
jmp
movzbw
mov
jmp
pusha
lea
call
pusha
pushf
push
lea
jae
pusha
jmp
inc
add
das
mov
cli
adc
jle
sahf
sti
push
in
inc
imul
out
push
push
stos
stc
lods
stc
movsb
sbb
lock
hlt
lock
bound
sub
pop
mov
lds
or
mov
mov
data16
jne
lcall
pop
inc
cmp
dec
add
or
aad
push
ss
xchg
iret
jne
test
pop
jp
xchg
enter
cmp
pop
pop
lret
jge
outsb
push
push
push
fwait
es
iret
or
in
dec
daa
mov
mov
test
jle
out
or
aam
cs
push
ret
arpl
sbb
lcall
lods
out
ror
mov
popa
pop
ja
jmp
cmp
pop
inc
inc
or
aas
jle
cmpsb
lods
xor
shll
jae
arpl
adc
shlb
jae
mov
lea
and
call
scas
stos
out
xor
dec
jle
pop
xchg
sbb
popf
xlat
out
and
jbe
popa
pop
jne
pop
out
jae
pop
imul
sub
rcrl
cmpb
daa
xorl
ds
sub
and
pushf
movsb
test
jno
adc
jl
push
mov
cmovs
jmp
call
jo
imul
push
mov
mov
push
loope
jmp
lds
fwait
jns
ficoms
pop
jne
sbb
addb
movsb
sti
and
sbb
sub
xor
inc
sub
sbb
pop
mov
jb
test
ret
movsb
sbb
std
push
iret
gs
ja
mov
xor
mov
sub
in
std
mov
in
loop
xor
daa
pop
rolb
ret
jbe
mov
push
fistpll
or
sbb
lea
je
lea
mov
shl
add
add
test
mov
jmp
movb
bt
not
bt
cmp
jmp
jmp
jmp
or
cmp
in
jp
pop
mov
jnp
pop
aas
mov
aaa
sbb
or
cmc
lock
add
aaa
jnp
aad
mov
sbb
xchg
in
add
jge
pop
xor
dec
rcrl
enter
pop
mov
mov
mov
fs
je
setne
setge
not
lea
jmp
jae
setae
dec
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
xchg
cmp
jmp
stos
mull
movb
jmp
mov
shrd
mov
lea
add
pusha
test
shr
test
lea
not
mov
stc
bsr
add
pushf
movzbw
not
bswap
mov
call
mov
jmpw
inc
sti
dec
pop
arpl
adc
jnp
add
mov
stos
lret
negl
jne
xchg
into
scas
pop
stos
push
pop
xchg
push
pop
pop
or
mov
shr
or
icebp
enter
incl
mov
leave
insb
icebp
int3
jo
stc
ret
fidivs
mov
sub
insl
cmp
mov
stos
mov
lods
in
pusha
call
add
aam
xchg
enter
sub
fwait
into
push
insb
push
mov
add
movsb
stc
je
mov
fs
das
adc
mov
xor
iret
jge
jge
jne
mov
push
lret
sarb
mov
enter
inc
xchg
xchg
testl
aas
mov
lcall
lcall
movsl
adc
mov
sbb
jne
mov
mov
cmp
push
test
dec
xor
sub
cltd
mov
popf
inc
fdivrl
jbe
inc
mov
repnz
sub
jmp
lea
je
pusha
pop
movsbw
mov
bswap
jmp
lahf
jmp
mov
in
ficompl
cli
jbe
mov
dec
jle
push
dec
mov
push
loop
bound
sti
or
adc
push
nop
push
sub
cmp
loope
sbb
pop
adc
test
lea
test
fwait
call
add
inc
sub
mov
jp
test
pop
into
fldcw
push
outsb
pop
outsb
dec
inc
xchg
mov
dec
jae
or
fidivrl
sbb
jp
lods
jae
or
mov
ss
push
aad
fscale
mov
pop
imul
lock
leave
sub
gs
popf
insl
bound
test
xchg
mov
xchg
pop
lds
pop
dec
sub
xchg
pop
jne
mov
xor
stc
int3
cmp
xor
cmp
imull
add
pushf
test
icebp
stos
arpl
stc
sbb
jbe
sbb
imul
jg
out
data16
out
lds
imul
pop
movsl
stos
test
push
daa
adc
sbb
int3
aaa
aas
stc
sub
pop
scas
mov
pop
add
ret
ret
push
dec
mov
into
std
sub
in
test
push
out
add
test
pop
jmp
aad
mov
andb
ja
dec
sbb
loop
add
popf
rdpmc
aam
jns
push
sub
lock
push
inc
dec
sub
xor
sti
ret
mov
out
lret
xchg
out
sti
jp
fnsave
dec
mov
rorl
push
insl
mov
mov
sub
hlt
sarl
repz
push
movl
pusha
movl
mov
lea
jmp
movl
pushf
pushf
pusha
movl
pushl
pushf
mov
lea
jmp
jge
pop
fstp
enter
inc
sub
cmp
inc
lods
add
pop
inc
or
in
sbb
cmp
mov
dec
aaa
mov
push
push
out
jne
sub
cmpsl
xchg
jg
push
add
cli
cmp
jecxz
adc
or
in
mov
int
lods
cmp
out
xchg
cltd
shr
femms
enter
xchg
sub
aad
ljmp
push
pop
stos
arpl
push
cmpsl
ret
dec
ficoms
ficoms
and
les
cmp
mov
out
push
jb
sarb
clc
std
mov
mov
push
add
lcall
sub
ret
cs
xchg
or
jmp
mov
jae
insl
popf
cltd
adc
int3
movsl
in
xchg
mov
xchg
mov
lahf
cmp
int
lea
movsl
mov
ret
dec
les
or
lret
arpl
nop
insl
hlt
inc
shr
fsubrl
dec
push
sub
or
loop
xor
inc
in
clc
add
es
mov
push
jmp
xchg
push
jg
lcall
mov
xchg
mov
jnp
xchg
inc
mov
cmp
nop
std
mov
cmpsl
mov
movl
call
call
inc
sbb
out
push
sahf
out
es
cmpsb
mov
loop
aaa
es
jp
enter
mov
cmpsl
cmpsl
lcall
cmp
mov
movsb
jnp
push
movsl
push
mov
mov
nopl
adc
mov
pop
cmp
push
rorb
and
mov
mov
lea
jmp
mov
pushf
xchg
not
push
mov
lahf
bswap
jmp
pushf
lods
jmp
test
inc
or
or
cmp
mov
xchg
cmpb
adc
ret
inc
dec
inc
sbb
mov
mov
xchg
pushl
jnp
pop
repz
pop
jp
xor
mov
and
xchg
or
lods
cli
jo
jmp
call
call
lea
jae
xchg
push
setns
mov
setns
mov
inc
not
call
pop
lea
pusha
movb
movl
lea
jae
push
pushl
popl
pushf
pushl
pushl
ret
call
lea
jae
call
lea
jae
call
stc
push
cmpb
call
xor
mov
inc
sbb
repnz
data16
cmpsb
mov
push
aaa
xorl
xorl
mov
out
push
jecxz
xchg
or
sub
xchg
in
test
ljmp
fistpll
mov
push
movl
pushf
mov
mov
pusha
lea
jmp
bt
cmpb
pushf
mov
jmp
xchg
pushf
pusha
pusha
movl
jmp
rep
jmp
dec
sub
add
fsubrl
and
or
add
push
arpl
pop
cmp
mov
subl
flds
enter
shl
mov
push
lcall
xor
loop
lock
call
movb
lea
je
push
cmp
push
cmc
sub
cmp
test
cmp
jmp
movb
movl
lea
je
mov
mov
lea
xchg
movzwl
jmp
mov
lea
jne
call
pushf
movb
call
pusha
jmp
pusha
add
stc
and
std
inc
sarl
imul
and
pop
leave
inc
aad
and
lcall
pop
ss
sub
fdivs
cmp
jg
popa
jecxz
jne
fidivl
jmp
call
fidivrl
pop
xor
dec
mov
fdivrp
aad
xchg
popa
ret
jmp
icebp
or
or
cmp
xchg
das
or
aas
mov
jmp
cltd
sbb
push
loopne
add
movsb
or
pop
orl
xlat
in
icebp
or
pusha
pop
push
adc
sbb
xchg
jns
or
int
mov
cmpsl
inc
jp
sti
aam
xor
and
ret
jno
jg
scas
push
imul
add
inc
sahf
outsl
and
adc
popa
shll
inc
inc
cmpsl
testb
jp
adc
loop
sbb
loope
ljmp
imulb
xchg
add
xor
lds
xchg
cmc
xlat
mov
flds
cmp
pop
push
sbb
fstpl
out
mov
movsl
jl
shrl
jge
pop
ljmp
das
ljmp
loopne
push
mov
jae
xorl
cs
outsb
jg
jg
sbb
loop
cmp
xor
mov
pushf
movw
push
pushl
ret
and
add
out
or
mov
loopne
add
pop
add
loop
add
cli
add
lock
add
hlt
mov
clc
pop
out
out
mov
pop
out
jle
call
xchg
xchg
cli
ficoml
fidivrl
push
sub
aas
out
orl
imul
aam
in
rolb
jne
mov
jae
push
out
imul
and
mov
xor
sub
mov
ror
test
in
add
clc
test
cld
stc
mov
mov
mov
pop
pop
lcall
icebp
jl
test
test
cwtl
lods
pushf
jno
mov
bnd
pushf
call
jns
pusha
movl
push
pushf
movl
pusha
lea
jmp
lea
je
pusha
pusha
lea
jmp
call
fbstp
inc
sbb
add
in
fnsave
push
mov
es
inc
dec
add
dec
dec
in
pop
outsl
aaa
xchg
mov
ret
fld
stc
cmc
ror
cmpsl
jns
adc
fsubs
mov
xchg
test
cld
mov
xor
cmpsl
daa
mov
pop
cmpsb
out
inc
stos
adc
push
sbb
data16
xchg
or
inc
aaa
sbb
into
mov
divl
jo
pop
jne
test
jnp
fdivs
sub
in
shlb
pop
ljmp
out
mov
cs
mov
fldcw
dec
mov
cmp
cli
jb
push
or
push
fucom
pop
fidivl
xor
mov
cld
pushf
in
xchg
aad
inc
popa
and
cmp
loope
rorl
in
aam
add
lcall
pop
iret
repz
lock
hlt
jecxz
fdivs
sub
mov
cmpl
inc
rorl
lcall
mov
iret
dec
xchg
dec
xchg
xchg
pop
movsl
int
in
pop
in
jge
xchg
cmpb
pushl
popl
pusha
pushl
ret
test
clc
test
cmp
pushf
lea
jae
cmc
add
push
jmp
xchg
fisubrs
out
call
loop
mov
ljmp
jnp
js
xchg
adc
sbb
xchg
jnp
cmp
dec
mov
mov
mov
arpl
mov
and
neg
lahf
jo
int
lods
pop
dec
jle
ret
xchg
fsubrl
push
sbb
pop
test
mov
aad
mov
lds
cmpb
adc
popf
mov
scas
lret
sub
stos
inc
xchg
inc
mov
adc
stos
test
fisttpl
test
jnp
sbb
dec
lahf
push
in
jbe
jp
pop
shrl
hlt
mov
imulb
jns
inc
mov
push
cmp
push
or
orl
jnp
loop
xchg
iret
loop
mov
xchg
jo
jae
fs
ljmp
sbb
xor
pop
adc
rcrl
jge
scas
leave
fbld
adc
dec
ljmp
sbb
mov
aas
shrl
incl
loop
sub
outsb
adc
stc
adc
jg
out
shrb
out
or
dec
stc
cmp
jg
cmp
fildll
jo
xor
mov
xchg
push
xchg
shlb
inc
fcompl
mov
call
xchg
ja
fsub
rcr
fnstsw
pop
arpl
imul
ss
jmp
imul
and
dec
pushf
pushl
pushf
call
push
not
inc
rol
rol
xchg
pusha
bswap
lahf
mov
inc
push
mov
cmp
stc
xchg
clc
mov
stc
stc
jmp
jmp
or
or
das
mov
mov
pop
dec
add
sbb
sbb
scas
notb
push
test
aaa
jnp
mov
out
das
mov
sahf
fmul
pop
shlb
stos
into
fidivl
push
mov
idivb
sub
bt
stc
test
movw
pushl
call
out
outsl
or
cmp
mov
inc
clc
pusha
clc
mov
aaa
and
cmp
sub
mov
mov
leave
cld
cwtl
mov
ss
jecxz
add
mov
je
adc
into
cmpsl
ss
popf
sbb
dec
sub
les
mov
fwait
loope
mov
inc
and
add
add
not
jmp
movl
neg
jmp
pop
sbb
push
movsb
test
leave
movsl
lds
mov
test
xlat
nop
call
ds
sub
pop
mov
arpl
push
repnz
xchg
int
mov
rcrl
rol
aaa
mov
arpl
data16
ds
shrb
movsl
xchg
sarb
jge
fxam
aam
push
push
dec
pop
adc
fimull
lret
sbb
push
jecxz
ret
ja
adc
mov
ds
out
jg
sbb
fcoms
sbb
pop
pop
sbb
jbe
ret
or
inc
rcrl
jmp
mov
es
negl
push
pop
scas
das
das
mov
xchg
into
jl
mov
pop
repnz
xor
ret
push
andl
int
add
pushf
mov
adc
mov
test
xchg
pop
arpl
fs
jmp
jnp
pop
loope
out
xchg
mov
mov
out
pop
sahf
mov
ja
scas
pop
or
rorb
mov
and
clc
and
fimull
dec
icebp
or
popa
xchg
insl
lods
pop
xchg
das
add
comiss
push
stos
push
jmp
cld
xchg
shl
sub
cmp
and
cli
popf
lods
cmp
test
xor
mov
xor
call
push
clc
cmp
pushf
jmp
add
cmc
test
cmc
cmp
pushf
jmp
sub
jmp
neg
cmc
call
pusha
clc
bt
xor
pushf
lea
call
call
mov
sbb
rcrb
add
add
add
add
add
add
daa
adc
sbb
in
mov
add
neg
call
lea
jl
pusha
lea
jae
cmc
cmc
cmp
jmp
pushf
call
lea
jne
neg
xor
btc
lea
mov
cmc
stc
test
push
add
bt
movzwl
shl
mov
cmc
pusha
bt
add
pusha
clc
mov
movb
test
mov
call
clc
cmp
pusha
call
imul
int
fstpl
out
or
dec
data16
or
pop
add
or
call
rolb
or
or
in
sarb
mov
mov
xchg
push
add
mov
adc
dec
pop
sub
aaa
add
cmpsb
sub
push
sub
std
lds
clc
jmp
mov
or
jg
aaa
ss
sbb
rolb
pop
je
pop
push
mov
sbb
cld
sbb
mov
icebp
mov
pop
pop
cmp
aaa
loope
xor
pop
testb
dec
push
mulb
and
mov
pop
pop
aaa
lret
add
negb
push
jle
fadd
xor
add
dec
sub
rcrb
add
adcl
dec
sbb
arpl
sub
outsl
pop
div
jae
sub
push
imul
mov
sarl
sub
xor
adc
mov
and
and
push
adc
imul
dec
xor
fldl
adc
js
leave
dec
add
das
outsb
hlt
fs
push
cmp
pop
sub
mov
xchg
das
leave
iret
xlat
scas
mov
flds
dec
sbb
and
or
ljmp
dec
mov
dec
xlat
or
push
push
loop
mov
jbe
loope
outsb
into
lea
data16
outsb
ret
mov
fimull
shrl
push
mov
or
ds
jne
leave
and
frndint
add
mov
mov
fistps
mov
int3
gs
mov
mov
in
lods
jge
test
not
jmp
movl
mov
pusha
pushf
movl
mov
pushl
pushf
lea
jmp
adc
and
and
mov
inc
lds
jge
fs
jmp
in
daa
pusha
add
idivl
je,pt
inc
imul
int3
mov
lods
nop
aam
lahf
fldl
and
int
ffree
cltd
sarb
popf
cpuid
nop
call
jne
gs
xor
fs
insb
add
dec
lahf
pop
inc
push
pop
dec
or
inc
loop
push
jp
add
push
jb
jg
or
ljmp
mov
imul
push
loope
and
xchg
push
xchg
adc
dec
shll
pop
je
je
repz
push
mov
xorl
pop
adc
inc
mov
js
insb
icebp
xor
in
fs
jae
pusha
cmc
cmp
pusha
cmp
call
pushfw
popw
setbe
not
jmp
das
xchg
aaa
mov
int3
inc
or
ret
pop
adc
bound
push
das
fimull
fidivs
adc
shl
mov
push
cmpsb
xorl
in
jnp
inc
fidivl
in
push
adc
jno
inc
mov
test
sub
mov
ror
inc
std
mov
jmp
xchg
jmp
lea
movsbw
movzbw
pushf
mov
call
mov
pop
lea
mov
pusha
pop
mov
movb
pushf
mov
pushl
pushl
ret
pushf
push
stos
mov
movb
pusha
pushf
lea
jmp
add
dec
outsl
arpl
inc
jb
gs
add
sub
push
adc
mov
movl
push
lea
jmp
pushf
call
pop
mov
sbb
leave
pusha
mov
sbb
xlat
jg
stos
aam
aad
ficomps
popf
mov
mov
jbe
pop
push
dec
pop
jns,pn
jns
sbb
adc
mov
inc
mov
jle
je
or
sub
mov
jp
lock
push
dec
and
fidivrl
aad
and
add
fadds
mov
or
dec
movaps
jb
or
cmpsl
sbb
frstor
xchg
push
pushf
jp
ret
insb
ud2
stos
jno
xchg
mov
cwtl
or
xchg
cld
call
sub
xchg
xchg
test
fldt
rcr
test
ficompl
sti
inc
sbb
inc
mov
mov
aaa
xchg
dec
dec
aad
clc
and
mov
rcll
in
mov
lret
xor
pop
clc
and
test
hlt
inc
jno
pusha
mov
pop
lock
mov
dec
cmpb
es
sbb
push
push
xor
loop
mov
cwtl
test
nop
aaa
inc
cmp
aas
mov
sub
push
out
and
pop
int3
nop
adc
jecxz
fildl
xor
xchg
fistpll
rcrb
fmuls
xchg
es
jmp
jmp
ficoms
sbb
xchg
movsbw
pushl
popl
call
lods
push
mov
sbb
out
pop
aaa
pop
addr16
aaa
mov
sub
add
dec
or
pop
cltd
add
or
xor
es
jns
clc
jns
stos
cli
imul
push
lahf
and
mov
push
lods
call
mov
mov
lahf
shlb
fstpt
inc
repnz
pusha
call
push
mov
lahf
lea
call
push
pop
push
femms
or
andb
add
pusha
sub
mov
ss
stc
jb
xchg
cmpl
mov
arpl
outsl
outsl
dec
xor
jle
enter
push
mov
stos
movsb
cs
mov
pop
cmp
mov
mov
ss
out
loop
add
cli
dec
pop
mov
mov
mov
mov
push
mov
cmpsl
loop
cs
and
xorb
mov
fs
cmp
jmp
dec
lcall
jmp
or
setnp
mov
mov
cmc
cmp
jmp
mov
jmp
lea
jb
clc
call
xor
pusha
lea
call
jmp
str
pusha
pushf
movw
pusha
movl
pushf
jmp
in
scas
repnz
mov
inc
arpl
mov
fcomps
jno
enter
mov
insl
jbe
xor
dec
mov
insb
loope
push
mov
ss
push
les
rorl
push
hlt
dec
or
lods
mov
mov
xor
sbb
push
data16
mov
rcrb
push
sahf
mov
fiadds
fwait
xchg
in
mov
mov
test
inc
jp
dec
mov
mov
or
aas
movsb
mov
aam
push
jecxz
sbb
je
popf
insb
imulb
cmp
pop
pop
xorb
mov
out
sbb
and
xchg
cmc
shr
adc
mov
in
loop
scas
sub
sub
push
pop
sub
pushw
cmp
push
stos
cli
or
aaa
or
iret
insl
pop
push
xchg
mov
xchg
jnp
inc
xchg
mov
lret
lock
icebp
mov
pop
add
and
dec
adc
jle
and
jl
pop
bound
out
cmp
fwait
sbb
xchg
clc
rorl
mov
push
inc
pop
dec
das
dec
aas
push
add
jb
cli
inc
mov
cmp
and
mov
lea
call
call
bswap
lea
not
mov
movl
mov
mov
lea
jmp
movl
push
pusha
movl
pushf
pushl
pushl
lea
jmp
lea
ja
pushf
inc
pushf
pusha
pushf
inc
rcr
test
rol
xchg
cmc
clc
or
mov
sbb
call
je
cmpl
dec
subl
pop
in
lea
je
in
xchg
sbb
adc
push
jno
loopne
sub
adc
test
mov
or
dec
insl
xor
leave
lea
xchg
dec
cmc
out
push
loop
add
fwait
xchg
shl
cltd
push
and
sub
pop
inc
ficoml
cmpsl
inc
sahf
fisubl
sbb
out
mov
aas
pop
aas
pop
fcmovnb
test
pop
aaa
mov
inc
push
sub
inc
test
cli
dec
xor
xchg
fimuls
movsb
insl
inc
sbb
push
outsl
hlt
out
cmp
cmp
inc
fsubp
lock
sub
sti
mov
out
aad
mov
div
fmulp
add
imul
into
or
sbbb
mov
xchg
add
outsb
stos
rorb
add
leave
movsb
aam
add
push
rorl
adc
mov
je
xchg
jne
ror
cmp
adc
pop
jge
and
add
mov
imul
pop
jp
dec
popf
out
dec
cmpsb
push
push
pop
sarb
fisubs
push
adc
movsb
push
pop
pop
push
ss
aaa
sahf
and
stos
addr16
jno
loop
in
adc
mov
popa
and
outsb
mov
into
adc
ficomps
test
pop
mov
or
std
nop
in
fcompl
and
les
cld
mov
add
inc
xor
jae
fdivrp
inc
add
or
fucom
test
ja
mov
jns
lods
or
div
inc
jno
xorl
jne
sub
xchg
lahf
jp
repz
movsb
inc
pop
imull
jp
and
mov
testb
push
add
mov
insb
ja
scas
sti
call
frstor
ds
rolb
adc
xor
mov
xor
in
mov
dec
jmp
repz
inc
mov
cmp
mov
cs
leave
fstpt
outsl
fbstp
gs
out
mov
jmp
mov
out
mov
aad
sarb
scas
fwait
outsb
roll
and
enter
repz
inc
filds
xchg
dec
cli
xor
sub
push
xlat
push
movsl
gs
jmp
xchg
pop
mov
inc
or
push
loop
rcll
fimull
sti
jmp
mov
dec
sbb
add
cli
sbb
add
push
mov
push
sbb
mov
out
pop
jb
outsl
arpl
ret
cli
pushf
stos
pop
xor
ljmp
jp
pop
jae
test
push
push
movsl
sahf
repz
sbb
cmpsl
repz
arpl
gs
icebp
xlat
dec
insb
imul
jne
or
inc
cld
mov
nop
nop
ficoms
test
in
fsubs
pop
rcrb
or
fiadds
xor
cmpsl
imulb
mov
mov
push
adc
shrb
aaa
decl
dec
pop
shlb
ss
cli
push
cmpb
jns
push
rorl
mov
bound
hlt
fs
gs
lds
lea
roll
jb
add
push
mov
push
pop
popw
sub
adc
and
pop
ucomiss
icebp
mov
xchg
lock
nop
scas
sub
and
or
inc
pop
lods
xchg
stos
cmp
fldl
cs
lea
dec
mov
lea
and
sbb
jge
imul
mov
rorl
mov
insb
pop
adc
push
je
mov
aas
iret
fidivrl
dec
pop
into
cmp
lret
sbb
xlat
cmp
lret
pop
push
mov
fsubp
lock
mov
push
dec
xchg
ja
test
fstpl
lcall
out
into
imull
or
mov
adc
fcoms
hlt
dec
mov
adc
sbb
in
dec
outsb
cmovge
jno
xchg
mov
addr16
pop
jno
bound
jmp
dec
aad
test
fst
mov
enter
test
inc
movsb
clc
mov
sub
sahf
inc
add
push
push
dec
imul
add
lahf
mov
dec
or
cmp
or
pop
call
movsl
popf
mov
ljmp
push
insl
adc
or
bound
bound
sbb
test
cmp
jmp
add
out
iret
mov
jge
decb
cmp
inc
pop
jmp
shrl
or
mov
xchg
pop
xchg
es
jb
xchg
cld
mov
fdivl
sub
enter
add
out
mov
xor
test
push
ljmp
int3
push
aam
fdiv
mov
sbbb
imul
icebp
sub
adc
iret
mov
cmpsb
icebp
cmc
cltd
aam
add
ja
xchg
lea
test
mov
cmp
sbb
dec
mov
cmp
and
popl
movl
push
lea
jmp
push
pusha
mov
pushf
pusha
pushl
call
pop
push
lea
jmp
and
pusha
push
mov
movl
pushf
popl
pushf
mov
push
pushl
popl
mov
mov
lea
jmp
call
pushl
pushf
inc
bt
sub
stc
clc
clc
bt
lea
movl
clc
call
pusha
mov
push
pushf
pushf
lea
jmp
bswap
bswap
movsbw
pushl
popl
lea
ror
sub
ror
movl
or
call
add
jmp
pushf
mov
pushf
lea
jmp
mov
pushf
lea
jmp
mov
call
shl
xor
call
mov
call
jmp
jmp
pushf
pushf
popl
jmp
call
pushf
pushf
pushf
mov
push
pushl
jmp
and
shr
bt
mov
cmp
cmp
bt
cmc
add
pusha
pusha
lea
jmp
clc
stc
mov
pusha
add
pusha
clc
xor
clc
stc
sub
jmp
dec
stc
ror
push
add
stc
rol
clc
test
clc
add
cmp
push
bt
sub
jmp
call
clc
jmp
jmp
pusha
cmc
sub
mov
mov
movw
pusha
pushf
push
lea
jmp
dec
shl
mov
sub
inc
bsf
mov
jmp
or
xor
mov
cmc
add
jmp
pushl
popl
movb
push
push
lea
jmp
cmc
pushl
cmp
push
pushl
add
pushl
call
sub
clc
cmc
mul
call
call
jmp
push
mov
movb
lea
jmp
mov
pushf
add
pushf
mov
pushl
movw
lea
jmp
rcl
cbtw
movzww
test
push
xchg
call
mov
pushf
jmp
mov
movb
lea
jmp
rol
shl
mov
or
mov
call
shl
aam
sbb
mov
pushf
sub
jmp
call
pushf
pushf
mov
mov
mov
push
call
bt
sub
call
lea
jne
bswap
xorb
mov
pusha
movsbw
lea
jg
pop
pushf
pusha
push
lea
jmp
mov
test
cld
test
pushl
popf
mov
mov
lea
jmp
mov
pushf
pushf
movb
push
lea
jmp
pushf
mov
lea
jg
pushf
pusha
mov
pushf
lea
jmp
call
bt
add
mov
mov
pusha
call
add
mov
pusha
movb
add
mov
mov
movb
push
lea
jmp
movb
movb
lea
jne
bswap
bsr
shl
mov
cmp
pusha
and
pushl
cmp
push
pushf
mov
lea
jne
adc
shld
pusha
xorb
lea
not
pop
push
pushf
lea
jmp
mov
call
movw
add
pusha
lea
jmp
add
pushf
mov
pusha
pusha
push
lea
jmp
rol
jmp
push
mov
jmp
pushf
popl
call
mov
pushf
push
mov
pusha
pushf
lea
jmp
mov
mov
movw
jmp
xchg
not
repz
popl
ror
adc
pushl
popl
pop
movl
movsbw
adc
shrd
mov
stc
test
add
mov
lea
jmp
sub
jmp
push
jmp
mov
pusha
push
mov
pushl
jmp
mov
lea
setnp
mov
bswap
mov
push
seto
pop
movzbw
xchg
jmp
jmp
movb
jmp
mov
pushf
mov
call
sub
mov
cmp
btc
bt
dec
add
bsf
bswap
and
xor
bsr
rol
rcr
mov
cmp
stc
shl
stc
stc
call
pushf
mov
pusha
lea
jnp
not
not
push
bswap
pusha
mov
mov
xchg
call
call
mov
pushf
popl
jmp
pushl
call
stc
sub
mov
mov
mov
movb
movb
movb
lea
jmp
jmp
pusha
sub
pushl
call
bts
dec
or
bt
mov
cmp
test
call
mov
call
and
btr
add
mov
js
pusha
pusha
add
pushf
mov
push
push
lea
jmp
mov
mov
movb
mov
jmp
mov
push
pushf
xchg
lea
repz
popl
bsf
dec
cmc
pushl
popl
lea
pop
sar
bt
movl
pushf
mov
call
add
mov
adc
rol
add
call
mov
jmp
sub
cmc
jmp
mov
pushl
pushl
lea
jae
push
jmp
jmp
pusha
pushf
pusha
mov
call
pusha
test
add
call
pushf
mov
mov
mov
mov
mov
pushf
jmp
cmc
cmp
bt
add
pusha
push
pushf
jmp
xchg
setp
mov
movsbw
mov
movzbw
mov
lea
lea
bswap
movzbw
repz
popl
bsr
sbb
mov
pushl
popl
sar
xchg
shrd
movl
add
jbe
mov
mov
btc
xor
neg
add
not
neg
xchg
bswap
pusha
sete
dec
add
ror
btr
lea
call
rcr
shr
mov
jmp
jmp
movsbw
push
bt
rol
sub
bt
stc
add
rcr
sub
sub
neg
mov
call
pushl
popl
pushf
lea
jmp
lea
mov
setns
jmp
test
mov
push
ror
shl
ror
mov
sbb
dec
movb
sub
mov
movw
pushl
mov
add
push
test
jmp
mov
pushf
movw
pushf
mov
call
call
pushf
mov
mov
jmp
pusha
pushl
mov
pusha
push
lea
jmp
push
pushl
popl
pushf
lea
jmp
call
call
clc
clc
sub
mov
pushf
push
call
movb
push
mov
jmp
pushl
movb
pushl
popl
mov
lea
jmp
mov
pusha
jmp
mov
movb
push
push
lea
jmp
call
lea
je
bt
bt
stc
xor
jmp
mov
push
pushf
movb
pushl
ret
xchg
call
pushl
xchg
bswap
mov
lea
pop
lea
pushf
xchg
pushf
push
bswap
mov
mov
jmp
mov
movb
mov
lea
jl
pushf
mov
mov
pushf
popl
pushf
pushl
popl
pusha
pushf
pushf
lea
jmp
cmp
sub
push
pushf
pushf
call
pushl
popl
pushf
pushl
mov
lea
jmp
inc
btr
lea
mov
jmp
aam
jmp
pushf
mov
call
pushf
pushl
shld
call
pusha
movsbw
mov
pusha
jmp
jo
pushf
pusha
pusha
pushf
popl
movb
pushf
jmp
mov
movb
push
pushl
mov
call
mov
pushf
pushf
movw
pushf
mov
jmp
push
movw
pusha
pushl
popl
movb
push
lea
jmp
cltd
pop
cwtl
mov
movsbw
mov
xchg
mov
setl
cwtl
lahf
mov
cwtl
bswap
jmp
pushf
jmp
clc
xor
pushf
inc
pusha
push
call
call
sub
jmp
xadd
shrd
add
clc
movzbl
xor
movsbw
ror
bt
add
stc
rcr
bt
xor
push
call
pusha
xor
jmp
jmp
xchg
pushf
pop
repz
popl
xor
sub
shld
btr
pushl
popl
shrd
adc
not
dec
movl
add
mov
cmc
add
pushf
lea
jmp
repz
popl
xor
pushl
popl
shld
bswap
rcl
movl
shrd
stc
stc
add
mov
bt
add
pushf
mov
mov
lea
jmp
mov
pushf
jmp
mov
jmp
mov
call
pushf
pushf
popl
jmp
add
add
sar
pusha
shl
mov
cmc
add
mov
pushf
lea
jmp
pushf
popl
pushf
call
setp
lahf
rcl
jmp
movb
mov
call
pusha
adc
shl
movzbl
pushf
add
pusha
bt
jmp
xor
test
pushf
pushl
bt
add
pushf
pusha
movb
mov
movb
pushl
ret
push
jmp
call
out
jmp
popf
jmp
imul
jmp
imul
jmp
mov
jmp
pushf
jmp
cmp
ret
push
jmp
xchg
jmp
jmp
jmp
cltd
jmp
mov
jmp
nop
jmp
xchg
jmp
xchg
jmp
insb
jmp
insb
jmp
arpl
jmp
imul
jmp
cmp
sbb
jmp
xchg
jmp
mov
jmp
mov
jmp
cmp
push
cmp
mov
jmp
xchg
jmp
cmp
ficompl
jmp
xchg
jmp
data16
jmp
test
jmp
insl
jmp
cmp
cld
xchg
jmp
mov
jmp
imul
jmp
sahf
jmp
insl
jmp
outsb
jmp
popf
jmp
sahf
jmp
jmp
insl
jmp
popf
jmp
sahf
jmp
push
jmp
popf
jmp
sahf
jmp
mov
jmp
arpl
jmp
popf
jmp
sahf
jmp
xchg
jmp
cmp
in
jmp
sahf
jmp
mov
jmp
pushf
jmp
popf
jmp
sahf
jmp
xchg
jmp
insb
jmp
popf
jmp
sahf
jmp
sahf
jmp
data16
jmp
popf
jmp
sahf
jmp
mov
jmp
cmp
in
jmp
sahf
jmp
sahf
jmp
cmp
in
jmp
sahf
jmp
cmp
lock
jmp
popf
jmp
sahf
jmp
xchg
jmp
cmp
in
jmp
sahf
jmp
cmp
in
jmp
popf
jmp
sahf
jmp
mov
jmp
cltd
jmp
popf
jmp
sahf
jmp
xchg
jmp
jmp
popf
jmp
sahf
jmp
jmp
addr16
jmp
jmp
xchg
jmp
cmp
cld
xchg
jmp
cwtl
jmp
xchg
jmp
nop
jmp
xchg
jmp
cltd
jmp
mov
jmp
data16
jmp
xchg
jmp
insl
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
mov
jmp
push
jmp
popf
jmp
cmp
scas
mov
jmp
insb
jmp
push
jmp
popa
jmp
xchg
jmp
mov
jmp
xchg
jmp
mov
jmp
xchg
jmp
xchg
jmp
xchg
jmp
sahf
jmp
data16
jmp
test
jmp
xchg
jmp
xchg
jmp
xchg
jmp
insl
jmp
popa
jmp
pusha
jmp
jmp
xchg
jmp
jmp
sahf
jmp
mov
jmp
mov
jmp
cwtl
jmp
sahf
jmp
insl
jmp
addr16
jmp
cltd
jmp
pushf
jmp
mov
jmp
cmp
daa
push
jmp
cmp
scas
cmp
sbb
jmp
xchg
jmp
addr16
jmp
push
jmp
xchg
jmp
xchg
jmp
xchg
jmp
test
jmp
xchg
jmp
mov
jmp
cmp
push
jmp
cltd
jmp
xchg
jmp
xchg
jmp
outsb
jmp
imul
jmp
xchg
jmp
pushf
jmp
outsb
jmp
xchg
jmp
xchg
jmp
mov
jmp
xchg
jmp
cwtl
jmp
nop
jmp
insl
jmp
insl
jmp
popf
jmp
jmp
pusha
jmp
insb
jmp
jmp
xchg
jmp
outsb
jmp
jmp
outsb
jmp
cwtl
jmp
test
jmp
xchg
jmp
pushf
jmp
jmp
addr16
jmp
cltd
jmp
pusha
jmp
pushf
jmp
cmp
push
cmp
xor
cltd
jmp
sahf
jmp
data16
jmp
xchg
jmp
xchg
jmp
pushf
jmp
test
jmp
jmp
jmp
outsb
jmp
mov
jmp
push
jmp
imul
and
jmp
xchg
jmp
push
jmp
push
jmp
data16
jmp
cltd
jmp
mov
jmp
cmp
cld
xchg
jmp
jmp
pusha
jmp
dec
shl
neg
bsr
lea
stc
movsbw
dec
movzbw
sub
bsr
shr
pushf
btc
lea
and
mov
movsbw
shr
setns
add
pushf
shrd
ror
shrd
mov
cmc
sar
movsbw
xor
movzbw
add
ror
or
rcl
bsr
neg
movzbw
test
xor
shl
add
call
call
mov
pushf
pushf
push
mov
call
lea
jne
ror
adc
mov
cmc
clc
jmp
cmc
add
pushf
mov
push
pusha
push
push
lea
jmp
lea
btc
ror
mov
std
lahf
shld
pop
shl
pop
dec
cltd
cltd
rdtsc
popf
cwtl
pop
pusha
movzbw
pushf
mov
jmp
mov
movb
call
pushl
popl
pusha
push
lea
jmp
push
pushf
sub
cmc
push
pushf
cmc
shl
movw
pushf
pushl
mov
call
lea
jo
pusha
pushf
popl
pushf
jmp
pusha
and
bt
clc
cmp
jmp
push
mov
jmp
mov
pushf
pusha
jmp
sbb
bsf
add
sub
bts
shl
or
xor
setle
movzbl
bt
movsbw
movsbl
bswap
mov
bt
cmp
xor
jmp
call
jmp
push
mov
jmp
push
pushf
mov
call
mov
pushf
call
add
stc
stc
or
pushl
call
jmp
xchg
lea
jmp
jmp
xchg
pusha
call
pushf
lea
push
push
jmp
mov
pushl
jmp
sbb
rol
lea
setge
shl
xor
xor
bts
test
sub
je
rol
sbb
cmc
add
bswap
add
dec
inc
mov
jmp
jmp
rcl
mov
rcl
clc
mov
call
test
mov
cwtl
clc
stc
jmp
movsbl
mov
repz
jmp
dec
rcr
push
rol
pushl
not
pushf
dec
btc
add
adc
mov
clc
cmp
pusha
bt
add
call
bts
rol
add
mov
rcl
stc
bswap
rol
mov
stc
test
cmc
add
pushf
jmp
call
mov
push
pushf
mov
lea
jmp
push
pushf
pushf
pushf
popl
push
pushf
movb
pushl
popl
pushl
movl
push
push
lea
jmp
btc
sar
mov
rcr
mov
test
cmp
cmc
sub
push
mov
push
push
lea
jmp
call
mov
call
sub
pusha
pushf
add
pusha
call
pushf
pusha
pushf
pushf
popl
mov
call
call
push
call
add
movb
lea
jmp
mov
pushf
repz
popl
and
pop
rcl
stc
pushl
popl
inc
rol
rol
clc
movl
shl
shl
pushf
mov
pusha
push
add
pushf
push
mov
mov
lea
jmp
pushf
movb
mov
jmp
push
push
jmp
pusha
pushf
movw
mov
movw
mov
pusha
movw
lea
jmp
movw
mov
pushl
xchg
movzbl
pushl
not
jmp
jmp
pusha
movzbl
not
mov
clc
clc
bt
xor
test
pushf
test
clc
add
push
call
mov
ror
pushl
bt
pushl
call
cmc
rol
jmp
mov
call
lahf
mov
call
mov
pusha
pushf
pushf
lea
jmp
push
mov
pushl
pusha
pushl
jmp
or
mov
sar
test
mov
bt
stc
call
xadd
test
mov
not
adc
not
pushf
add
shr
bt
xchg
rol
neg
lea
jmp
test
pushf
pushl
neg
jmp
mov
pusha
mov
mov
movb
call
test
mov
cmp
call
pushf
mov
movl
pushf
call
mov
call
pushf
mov
pushl
pushl
ret
rep
stc
not
mov
jmp
mov
pushf
pushf
popl
movw
call
adc
bsr
add
clc
neg
adc
xor
movsbl
jo
adc
or
add
bswap
xor
ror
movsbl
and
rol
pushf
rol
adc
mov
call
ror
shld
sub
dec
rcl
mov
btr
lea
xor
jmp
pushf
call
jmp
or
not
mov
push
stc
xchg
pusha
bt
cmc
add
jo
sub
stc
clc
ror
stc
lea
cmc
xchg
jmp
add
btc
xor
movsbw
shld
bsf
clc
movzbl
movzbl
mov
push
jmp
mov
test
bt
clc
test
add
pusha
jmp
xchg
bswap
dec
rcl
xchg
lea
test
sub
inc
mov
btc
cmc
mov
ror
mov
adc
add
shrd
lea
mov
rol
btr
bsf
dec
xor
stc
movzbw
rcr
jmp
pushl
popf
mov
movw
movb
lea
jmp
pushf
pushf
pusha
call
sub
jmp
neg
xchg
jp
mov
not
mov
bt
push
push
sub
pushf
cmc
shr
mov
call
bsf
mov
pusha
cmc
sub
mov
pushf
div
pushl
pushl
jmp
push
movl
jmp
and
rcr
add
adc
shr
xor
bt
pusha
shl
stc
add
movzbw
sbb
add
and
btr
mov
sub
jno
clc
push
add
jmp
mov
pushf
popl
push
mov
pushl
popl
movl
lea
jmp
mov
mov
movb
mov
lea
jmp
pushl
mov
pushf
pusha
movb
lea
jmp
or
shrd
mov
bt
cmc
test
sub
bt
add
call
pushf
shr
stc
or
clc
push
call
pushf
jmp
jmp
mov
mov
movb
lea
jmp
mov
push
mov
jmp
mov
movb
mov
pushf
lea
jmp
btr
test
bt
stc
mov
adc
rcl
stc
rcl
add
pushf
push
mov
jmp
mov
push
call
pushf
mov
pushf
movb
movw
mov
lea
jmp
push
pushl
pushf
popl
pushl
mov
pushf
pushl
popl
pushf
lea
jmp
pushf
mov
clc
test
sub
pushf
push
pushl
movb
lea
jne
bt
cmc
xor
jge
push
pusha
xchg
pusha
call
cld
pushf
jmp
lea
jb
dec
cmp
mov
cmc
sub
pusha
push
mov
push
mov
pushf
mov
lea
jmp
neg
call
add
pushl
shld
pushl
mov
pushf
pushf
call
xchg
jmp
lea
pushf
call
mov
pushf
pushf
lea
jp
pushf
mov
pusha
pushf
call
pushf
pushf
pushf
call
cmp
add
push
push
lea
jmp
mov
mov
movb
pushl
pushf
mov
pusha
call
pushf
mov
push
pushl
jmp
pushf
pushf
mov
mov
call
add
jmp
pushf
sub
cmc
pushf
pushf
ror
test
xchg
pushf
pusha
cmc
neg
jmp
pushf
jmp
stc
sub
cmp
bt
cmc
pushf
shl
call
btc
bsf
das
rcr
mov
stc
bsf
adc
and
mov
test
add
jmp
sete
not
lea
mov
jmp
jmp
movw
mov
jmp
pusha
pushl
popl
pusha
lea
jmp
lea
ja
stc
shr
mov
btc
cwtl
shld
or
lea
bswap
sub
shrd
lea
bts
and
add
sub
pusha
movw
bswap
mov
movzbw
pusha
movsbl
pushf
popl
call
clc
add
call
mov
pushf
push
movb
pushl
ret
cmc
push
ror
xor
shld
neg
shl
add
movsbw
btc
rol
shr
movsbw
sar
btr
add
bsf
movzbl
cmp
cmp
clc
mov
jmp
pushl
popl
movw
push
lea
jmp
jmp
repz
popl
sub
sar
pushl
popl
dec
pop
cmc
movl
bsf
mov
stc
add
push
lea
jmp
ror
lea
rdtsc
clc
sub
call
call
mov
lea
repz
popl
ror
rcl
shr
bsf
pushl
popl
cmp
stc
pop
rol
movl
dec
sar
mov
pusha
add
mov
pushf
movw
pushf
lea
jmp
add
mov
call
push
xchg
movsbw
repz
popl
rol
cmp
pushl
popl
btr
shld
movl
lea
mov
clc
pushf
add
push
pushf
movb
lea
jmp
bt
movzbw
mov
cmp
mov
push
clc
sub
cmp
shr
call
mov
pushl
jmp
jmp
pushf
call
mov
pusha
push
lea
jmp
bswap
das
cbtw
mov
dec
shl
rcr
mov
clc
cmp
jmp
pusha
jmp
jmp
shrd
jmp
push
push
mov
call
add
pushf
pushf
lea
ja
pushf
mov
push
pushf
pushl
ret
call
cmc
sub
jmp
mov
call
lea
mov
push
pusha
mov
pushl
mov
mov
lea
jmp
jmp
mov
cmc
test
cmc
add
pushf
lea
jmp
mov
movb
call
push
push
mov
push
mov
movb
pushf
lea
jmp
mov
jmp
mov
pushf
jmp
mov
push
mov
pushf
mov
pushf
jmp
bt
cbtw
call
push
push
pushl
pushl
ret
test
lea
test
call
pushf
popl
jmp
mov
bswap
pusha
pusha
call
pusha
pushf
popl
pusha
movb
movb
pushf
pushl
popl
movw
movw
mov
movb
lea
jmp
call
mov
call
jmp
jmp
mov
cmp
jmp
movzbw
lahf
bswap
push
movzbw
lahf
bswap
mov
call
stc
stc
cmpl
call
push
dec
test
pushf
mov
push
sub
jmp
mov
mov
pushf
movl
pushf
popl
call
mov
jmp
clc
cmp
push
add
pushf
pushf
lea
jmp
call
not
jmp
mov
pusha
pushf
jmp
pushf
decl
jmp
xchg
movsbl
mov
or
inc
mov
stc
pushf
stc
cmc
add
mov
call
not
pushf
pusha
clc
cmc
not
stc
pushf
sub
call
ja
pushf
pushf
pushf
mov
movl
movb
mov
pushf
pusha
pushl
jmp
mov
mov
movb
lea
jmp
sub
shl
movzbl
clc
clc
stc
pushf
add
pushf
call
pushl
mov
pushf
pushf
popl
call
shld
mov
stc
cmp
test
add
push
mov
pushf
movw
lea
jmp
pushl
mov
mov
mov
call
push
clc
add
stc
stc
call
pushl
popl
movb
movb
lea
jmp
mov
pushf
mov
push
jmp
mov
push
pusha
call
mov
pushf
call
call
add
shl
pushf
mov
bsr
sub
mov
test
pusha
pusha
stc
add
pushf
mov
movw
movl
movb
pushl
lea
jmp
push
mov
jmp
push
pushf
pushl
pushl
popl
mov
mov
lea
jmp
push
cmc
add
pushf
push
pushf
pushf
mov
mov
lea
jmp
pusha
pusha
call
pusha
call
pushf
popl
movb
mov
pushl
popl
pushf
pushf
pusha
movl
lea
jmp
movsbw
stc
mov
dec
bsr
mov
stc
clc
call
bswap
repz
popl
sbb
pushl
popl
adc
shl
btc
movl
ror
sbb
mov
call
push
mov
push
call
pushf
call
pushf
pushl
stc
pushl
add
pusha
mov
mov
pushl
pushf
lea
jmp
clc
shl
call
movb
movw
pushf
xchg
lea
lea
jae
lea
not
repz
movzbl
bswap
bts
pushl
bts
test
push
add
mov
push
call
call
mov
jmp
repz
popl
shld
jmp
mov
call
mov
jmp
add
jns
add
bt
bt
call
push
pusha
pusha
mov
jmp
call
call
mov
pusha
jmp
repz
popl
shr
adc
ror
pushl
popl
shl
rcr
btr
adc
movl
sar
mov
cmp
bt
bt
add
pushf
push
pushf
push
lea
jmp
lea
jne
pusha
pusha
pushf
mov
pushf
pushl
pushf
movb
lea
jmp
add
jmp
add
pushf
pusha
call
mov
pushf
mov
call
call
test
jmp
dec
jmp
clc
cmc
pushf
test
add
push
pusha
movb
mov
lea
jmp
pushl
popl
pushf
mov
pusha
lea
jmp
mov
pusha
push
pushf
popl
pushl
pushl
popl
movw
lea
jmp
mov
call
push
lea
cpuid
clc
pushf
sub
sub
js
cmp
bt
cmpl
pusha
jmp
bswap
mov
pusha
bt
pushf
stc
add
push
lea
jmp
pusha
mov
push
push
lea
jmp
not
mov
call
mov
mov
jmp
pushl
popl
shl
pop
movzbl
movl
btc
and
mov
cmp
test
pushf
add
push
push
lea
jmp
bt
pushf
sub
mov
clc
push
bt
cwtl
bt
sub
pushl
mov
mov
mov
pushf
movb
lea
jmp
movzbw
mov
and
rcr
pusha
mov
mov
clc
pushf
cmp
sub
cmc
push
cmc
push
shr
pushl
mov
jmp
bswap
pusha
mov
pushl
pushf
mov
call
pusha
pushl
pushl
push
mov
mov
jmp
call
push
call
push
lea
jnp
pusha
mov
pushf
pusha
lea
pushl
mov
push
lea
jmp
jmp
mov
cmc
sete
cbtw
mov
jmp
pushl
mov
mov
lea
jmp
add
movw
movw
lea
jmp
add
push
pushl
mov
lea
jmp
mov
jmp
stc
cmp
mov
cmc
cmc
clc
cmp
add
mov
mov
lea
jmp
mov
call
mov
mov
mov
pushf
jmp
inc
pushl
cmc
pushf
bt
sub
call
movw
movw
pusha
mov
push
lea
jmp
pushf
mov
mov
mov
push
movw
mov
pusha
mov
pushl
mov
lea
jmp
dec
stc
mov
pusha
add
push
lea
jmp
lea
js
popl
pushf
lea
jmp
call
stc
pushf
and
pushl
mov
jmp
shl
lea
pushf
call
pushl
mov
jmp
movw
mov
jmp
mov
push
mov
call
repz
popl
mov
pushl
popl
bsf
lea
shrd
movl
ror
bswap
mov
stc
add
mov
push
pushf
pushf
lea
jmp
pushf
mov
pusha
push
push
pushl
lea
jmp
jmp
bswap
stc
mov
shrd
mov
jmp
pushf
pusha
pusha
lea
jno
push
push
jmp
stc
test
call
jmp
pushf
jmp
stc
clc
jmp
pushf
neg
clc
sub
cmc
mov
pusha
sub
call
pushl
push
pushf
popl
lea
jno
pusha
pushl
popl
push
movb
lea
jmp
mov
pushf
push
mov
jmp
jmp
jmp
rcr
shl
pushl
rcr
test
cmc
rol
push
xor
rol
rcl
mov
call
movzbw
pushf
repz
popl
rol
call
test
sub
push
pushf
push
mov
pushf
push
lea
jmp
push
mov
pusha
mov
mov
mov
pusha
pushf
jmp
xadd
mov
push
dec
and
mov
cmp
pusha
clc
pushf
sub
clc
clc
shr
movb
mov
lea
jne
push
pusha
pushf
popl
pusha
jmp
sbb
mov
pushf
test
sub
jnp
add
pusha
pushf
popl
pusha
push
pushl
popl
movl
pushl
lea
jmp
not
setge
mov
cmp
movsbw
btr
mov
jmp
movb
call
pushf
call
mov
pushf
pushf
mov
push
pushl
mov
pushl
ret
jmp
rol
clc
jmp
mov
call
call
mov
push
lea
jmp
pushf
mov
cmc
add
test
stc
mov
stc
cmc
sub
call
movb
mov
pushf
pushf
movzbl
repz
popl
jmp
pusha
call
pushl
movl
jmp
jmp
call
inc
shl
mov
cmc
rcr
shrd
add
jo
or
lea
sbb
xor
inc
rcr
not
sub
bts
rcr
rol
rol
btr
movsbw
sub
shl
add
and
dec
mov
jl
cmp
add
pushf
jmp
movb
mov
mov
push
xchg
pushl
not
pop
movzbw
repz
popl
inc
pushl
popl
rol
movl
movzbw
rcl
rcr
shld
mov
pushf
mov
add
mov
movb
movb
lea
jmp
bt
cmc
call
pusha
pusha
mov
mov
pushf
mov
jmp
push
call
mov
call
call
push
notl
push
jmp
aaa
mov
shr
mov
pusha
test
add
mov
mov
pushf
mov
lea
jmp
bswap
stc
and
mov
push
clc
jmp
mov
jmp
call
pushl
popl
mov
pushf
pusha
mov
lea
jmp
cmc
sub
test
stc
and
mov
movb
pushf
popl
jmp
mov
rcr
dec
mov
rol
dec
cmp
push
mov
jmp
mov
mov
pushl
pusha
mov
pusha
pushf
push
call
movb
mov
call
bswap
cmc
push
stc
sub
pushl
test
sub
pusha
sub
js
xor
pushf
call
call
pushf
jmp
mov
jmp
pusha
pushf
pushl
xchg
pushf
pushl
jmp
add
pushf
pushf
lea
jmp
jmp
jmp
mov
movb
mov
xchg
pushf
repz
popl
cmp
btc
pushl
popl
inc
movl
jmp
call
jmp
jmp
push
pushl
popl
pushl
lea
jmp
mov
jmp
shl
bswap
mov
cmc
pushf
add
push
mov
pushf
pusha
lea
jmp
mov
pushf
push
push
movb
lea
jmp
mov
pushl
lea
jmp
pushf
pushf
jmp
stc
mov
bt
bt
add
pusha
test
stc
pusha
xor
jmp
push
pushl
jmp
mov
push
mov
pushl
mov
call
test
add
stc
add
or
movzbw
adc
and
sub
bswap
not
test
mov
clc
pusha
jmp
mov
not
not
cmp
rcr
add
xadd
shl
btc
mov
setno
xor
movsbw
xor
and
sar
add
not
neg
bt
shl
shl
movsbl
xor
bts
sar
jmp
movsbw
rdtsc
mov
mov
mov
push
divl
pushl
mov
mov
pushf
mov
pushl
call
shrd
mov
ror
pusha
bsf
movzbw
add
call
xchg
movw
repz
popl
inc
push
bts
sub
pushl
popl
clc
shl
bt
or
movl
rol
mov
clc
rcl
add
rol
push
ror
neg
xchg
jmp
stc
call
mov
jmp
test
push
add
movb
pushf
push
movb
mov
push
push
pusha
pushl
lea
jmp
pusha
pushl
push
ror
cmp
bt
bt
lea
push
cmc
xchg
call
call
pushl
popl
or
movl
jmp
movsbl
or
bswap
mov
pushf
add
jle
rol
mov
stc
rol
shr
rol
mov
bt
pusha
jmp
mov
pushf
mov
mov
pusha
movl
movb
lea
jmp
pushf
mov
pusha
pusha
mov
mov
pushf
call
not
push
movzbw
xchg
pusha
setb
xchg
call
mov
movw
call
add
bsf
shrd
movsbw
neg
rcl
test
xor
shl
call
call
pusha
pushl
mov
movb
pusha
jmp
and
cwtl
bswap
bswap
mov
rcl
mov
push
call
push
mov
jmp
pushl
jmp
push
pusha
movl
mov
call
jmp
